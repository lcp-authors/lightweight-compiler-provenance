
../repos/coreutils/src/factor:     file format elf32-littlearm


Disassembly of section .init:

00010e50 <.init>:
   10e50:	push	{r3, lr}
   10e54:	bl	111a4 <__assert_fail@plt+0x4c>
   10e58:	pop	{r3, pc}

Disassembly of section .plt:

00010e5c <calloc@plt-0x14>:
   10e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e60:	ldr	lr, [pc, #4]	; 10e6c <calloc@plt-0x4>
   10e64:	add	lr, pc, lr
   10e68:	ldr	pc, [lr, #8]!
   10e6c:	muleq	r3, r4, r1

00010e70 <calloc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #52, 20	; 0x34000
   10e78:	ldr	pc, [ip, #404]!	; 0x194

00010e7c <fputs_unlocked@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #52, 20	; 0x34000
   10e84:	ldr	pc, [ip, #396]!	; 0x18c

00010e88 <raise@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #52, 20	; 0x34000
   10e90:	ldr	pc, [ip, #388]!	; 0x184

00010e94 <iconv_close@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #52, 20	; 0x34000
   10e9c:	ldr	pc, [ip, #380]!	; 0x17c

00010ea0 <iconv@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #52, 20	; 0x34000
   10ea8:	ldr	pc, [ip, #372]!	; 0x174

00010eac <strcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #52, 20	; 0x34000
   10eb4:	ldr	pc, [ip, #364]!	; 0x16c

00010eb8 <printf@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #52, 20	; 0x34000
   10ec0:	ldr	pc, [ip, #356]!	; 0x164

00010ec4 <fflush@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #52, 20	; 0x34000
   10ecc:	ldr	pc, [ip, #348]!	; 0x15c

00010ed0 <wcwidth@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #52, 20	; 0x34000
   10ed8:	ldr	pc, [ip, #340]!	; 0x154

00010edc <memmove@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #52, 20	; 0x34000
   10ee4:	ldr	pc, [ip, #332]!	; 0x14c

00010ee8 <free@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #52, 20	; 0x34000
   10ef0:	ldr	pc, [ip, #324]!	; 0x144

00010ef4 <_exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #52, 20	; 0x34000
   10efc:	ldr	pc, [ip, #316]!	; 0x13c

00010f00 <memcpy@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #52, 20	; 0x34000
   10f08:	ldr	pc, [ip, #308]!	; 0x134

00010f0c <mbsinit@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #52, 20	; 0x34000
   10f14:	ldr	pc, [ip, #300]!	; 0x12c

00010f18 <memcmp@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #52, 20	; 0x34000
   10f20:	ldr	pc, [ip, #292]!	; 0x124

00010f24 <fputc_unlocked@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #52, 20	; 0x34000
   10f2c:	ldr	pc, [ip, #284]!	; 0x11c

00010f30 <getc_unlocked@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #52, 20	; 0x34000
   10f38:	ldr	pc, [ip, #276]!	; 0x114

00010f3c <strdup@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #52, 20	; 0x34000
   10f44:	ldr	pc, [ip, #268]!	; 0x10c

00010f48 <realloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #52, 20	; 0x34000
   10f50:	ldr	pc, [ip, #260]!	; 0x104

00010f54 <textdomain@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #52, 20	; 0x34000
   10f5c:	ldr	pc, [ip, #252]!	; 0xfc

00010f60 <iswcntrl@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #52, 20	; 0x34000
   10f68:	ldr	pc, [ip, #244]!	; 0xf4

00010f6c <fflush_unlocked@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #52, 20	; 0x34000
   10f74:	ldr	pc, [ip, #236]!	; 0xec

00010f78 <iswprint@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #52, 20	; 0x34000
   10f80:	ldr	pc, [ip, #228]!	; 0xe4

00010f84 <fwrite@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #52, 20	; 0x34000
   10f8c:	ldr	pc, [ip, #220]!	; 0xdc

00010f90 <lseek64@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #52, 20	; 0x34000
   10f98:	ldr	pc, [ip, #212]!	; 0xd4

00010f9c <__ctype_get_mb_cur_max@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #52, 20	; 0x34000
   10fa4:	ldr	pc, [ip, #204]!	; 0xcc

00010fa8 <__fpending@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #52, 20	; 0x34000
   10fb0:	ldr	pc, [ip, #196]!	; 0xc4

00010fb4 <ferror_unlocked@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #52, 20	; 0x34000
   10fbc:	ldr	pc, [ip, #188]!	; 0xbc

00010fc0 <mbrtowc@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #52, 20	; 0x34000
   10fc8:	ldr	pc, [ip, #180]!	; 0xb4

00010fcc <error@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #52, 20	; 0x34000
   10fd4:	ldr	pc, [ip, #172]!	; 0xac

00010fd8 <malloc@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #52, 20	; 0x34000
   10fe0:	ldr	pc, [ip, #164]!	; 0xa4

00010fe4 <iconv_open@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #52, 20	; 0x34000
   10fec:	ldr	pc, [ip, #156]!	; 0x9c

00010ff0 <__libc_start_main@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #52, 20	; 0x34000
   10ff8:	ldr	pc, [ip, #148]!	; 0x94

00010ffc <__freading@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #52, 20	; 0x34000
   11004:	ldr	pc, [ip, #140]!	; 0x8c

00011008 <__gmon_start__@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #52, 20	; 0x34000
   11010:	ldr	pc, [ip, #132]!	; 0x84

00011014 <getopt_long@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #52, 20	; 0x34000
   1101c:	ldr	pc, [ip, #124]!	; 0x7c

00011020 <__ctype_b_loc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #52, 20	; 0x34000
   11028:	ldr	pc, [ip, #116]!	; 0x74

0001102c <exit@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #52, 20	; 0x34000
   11034:	ldr	pc, [ip, #108]!	; 0x6c

00011038 <iswspace@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #52, 20	; 0x34000
   11040:	ldr	pc, [ip, #100]!	; 0x64

00011044 <gettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #52, 20	; 0x34000
   1104c:	ldr	pc, [ip, #92]!	; 0x5c

00011050 <strlen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #52, 20	; 0x34000
   11058:	ldr	pc, [ip, #84]!	; 0x54

0001105c <strchr@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #52, 20	; 0x34000
   11064:	ldr	pc, [ip, #76]!	; 0x4c

00011068 <fprintf@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #52, 20	; 0x34000
   11070:	ldr	pc, [ip, #68]!	; 0x44

00011074 <__errno_location@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #52, 20	; 0x34000
   1107c:	ldr	pc, [ip, #60]!	; 0x3c

00011080 <iswalnum@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #52, 20	; 0x34000
   11088:	ldr	pc, [ip, #52]!	; 0x34

0001108c <__cxa_atexit@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #52, 20	; 0x34000
   11094:	ldr	pc, [ip, #44]!	; 0x2c

00011098 <memset@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #52, 20	; 0x34000
   110a0:	ldr	pc, [ip, #36]!	; 0x24

000110a4 <write@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #52, 20	; 0x34000
   110ac:	ldr	pc, [ip, #28]!

000110b0 <fileno@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #52, 20	; 0x34000
   110b8:	ldr	pc, [ip, #20]!

000110bc <memchr@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #52, 20	; 0x34000
   110c4:	ldr	pc, [ip, #12]!

000110c8 <fclose@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #52, 20	; 0x34000
   110d0:	ldr	pc, [ip, #4]!

000110d4 <strnlen@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #208896	; 0x33000
   110dc:	ldr	pc, [ip, #4092]!	; 0xffc

000110e0 <fseeko64@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #208896	; 0x33000
   110e8:	ldr	pc, [ip, #4084]!	; 0xff4

000110ec <setlocale@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #208896	; 0x33000
   110f4:	ldr	pc, [ip, #4076]!	; 0xfec

000110f8 <strrchr@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #208896	; 0x33000
   11100:	ldr	pc, [ip, #4068]!	; 0xfe4

00011104 <nl_langinfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #208896	; 0x33000
   1110c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011110 <sprintf@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #208896	; 0x33000
   11118:	ldr	pc, [ip, #4052]!	; 0xfd4

0001111c <bindtextdomain@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #208896	; 0x33000
   11124:	ldr	pc, [ip, #4044]!	; 0xfcc

00011128 <isatty@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #208896	; 0x33000
   11130:	ldr	pc, [ip, #4036]!	; 0xfc4

00011134 <strncmp@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #208896	; 0x33000
   1113c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011140 <abort@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #208896	; 0x33000
   11148:	ldr	pc, [ip, #4020]!	; 0xfb4

0001114c <putchar_unlocked@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #208896	; 0x33000
   11154:	ldr	pc, [ip, #4012]!	; 0xfac

00011158 <__assert_fail@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #208896	; 0x33000
   11160:	ldr	pc, [ip, #4004]!	; 0xfa4

Disassembly of section .text:

00011168 <.text>:
   11168:	mov	fp, #0
   1116c:	mov	lr, #0
   11170:	pop	{r1}		; (ldr r1, [sp], #4)
   11174:	mov	r2, sp
   11178:	push	{r2}		; (str r2, [sp, #-4]!)
   1117c:	push	{r0}		; (str r0, [sp, #-4]!)
   11180:	ldr	ip, [pc, #16]	; 11198 <__assert_fail@plt+0x40>
   11184:	push	{ip}		; (str ip, [sp, #-4]!)
   11188:	ldr	r0, [pc, #12]	; 1119c <__assert_fail@plt+0x44>
   1118c:	ldr	r3, [pc, #12]	; 111a0 <__assert_fail@plt+0x48>
   11190:	bl	10ff0 <__libc_start_main@plt>
   11194:	bl	11140 <abort@plt>
   11198:	andeq	r0, r3, r0, asr r3
   1119c:	andeq	sl, r1, r8, asr #19
   111a0:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   111a4:	ldr	r3, [pc, #20]	; 111c0 <__assert_fail@plt+0x68>
   111a8:	ldr	r2, [pc, #20]	; 111c4 <__assert_fail@plt+0x6c>
   111ac:	add	r3, pc, r3
   111b0:	ldr	r2, [r3, r2]
   111b4:	cmp	r2, #0
   111b8:	bxeq	lr
   111bc:	b	11008 <__gmon_start__@plt>
   111c0:	andeq	r3, r3, ip, asr #28
   111c4:	andeq	r0, r0, r8, lsl #2
   111c8:	ldr	r3, [pc, #28]	; 111ec <__assert_fail@plt+0x94>
   111cc:	ldr	r0, [pc, #28]	; 111f0 <__assert_fail@plt+0x98>
   111d0:	sub	r3, r3, r0
   111d4:	cmp	r3, #6
   111d8:	bxls	lr
   111dc:	ldr	r3, [pc, #16]	; 111f4 <__assert_fail@plt+0x9c>
   111e0:	cmp	r3, #0
   111e4:	bxeq	lr
   111e8:	bx	r3
   111ec:	andeq	r5, r4, r3, ror r1
   111f0:	andeq	r5, r4, r0, ror r1
   111f4:	andeq	r0, r0, r0
   111f8:	ldr	r1, [pc, #36]	; 11224 <__assert_fail@plt+0xcc>
   111fc:	ldr	r0, [pc, #36]	; 11228 <__assert_fail@plt+0xd0>
   11200:	sub	r1, r1, r0
   11204:	asr	r1, r1, #2
   11208:	add	r1, r1, r1, lsr #31
   1120c:	asrs	r1, r1, #1
   11210:	bxeq	lr
   11214:	ldr	r3, [pc, #16]	; 1122c <__assert_fail@plt+0xd4>
   11218:	cmp	r3, #0
   1121c:	bxeq	lr
   11220:	bx	r3
   11224:	andeq	r5, r4, r0, ror r1
   11228:	andeq	r5, r4, r0, ror r1
   1122c:	andeq	r0, r0, r0
   11230:	push	{r4, lr}
   11234:	ldr	r4, [pc, #24]	; 11254 <__assert_fail@plt+0xfc>
   11238:	ldrb	r3, [r4]
   1123c:	cmp	r3, #0
   11240:	popne	{r4, pc}
   11244:	bl	111c8 <__assert_fail@plt+0x70>
   11248:	mov	r3, #1
   1124c:	strb	r3, [r4]
   11250:	pop	{r4, pc}
   11254:	muleq	r4, r0, r1
   11258:	ldr	r0, [pc, #40]	; 11288 <__assert_fail@plt+0x130>
   1125c:	ldr	r3, [r0]
   11260:	cmp	r3, #0
   11264:	bne	1126c <__assert_fail@plt+0x114>
   11268:	b	111f8 <__assert_fail@plt+0xa0>
   1126c:	ldr	r3, [pc, #24]	; 1128c <__assert_fail@plt+0x134>
   11270:	cmp	r3, #0
   11274:	beq	11268 <__assert_fail@plt+0x110>
   11278:	push	{r4, lr}
   1127c:	blx	r3
   11280:	pop	{r4, lr}
   11284:	b	111f8 <__assert_fail@plt+0xa0>
   11288:	andeq	r4, r4, r4, lsl pc
   1128c:	andeq	r0, r0, r0
   11290:	push	{fp, lr}
   11294:	add	fp, sp, #4
   11298:	sub	sp, sp, #80	; 0x50
   1129c:	str	r0, [fp, #-80]	; 0xffffffb0
   112a0:	ldr	r3, [pc, #348]	; 11404 <__assert_fail@plt+0x2ac>
   112a4:	sub	ip, fp, #72	; 0x48
   112a8:	mov	lr, r3
   112ac:	ldm	lr!, {r0, r1, r2, r3}
   112b0:	stmia	ip!, {r0, r1, r2, r3}
   112b4:	ldm	lr!, {r0, r1, r2, r3}
   112b8:	stmia	ip!, {r0, r1, r2, r3}
   112bc:	ldm	lr!, {r0, r1, r2, r3}
   112c0:	stmia	ip!, {r0, r1, r2, r3}
   112c4:	ldm	lr, {r0, r1}
   112c8:	stm	ip, {r0, r1}
   112cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   112d0:	str	r3, [fp, #-8]
   112d4:	sub	r3, fp, #72	; 0x48
   112d8:	str	r3, [fp, #-12]
   112dc:	b	112ec <__assert_fail@plt+0x194>
   112e0:	ldr	r3, [fp, #-12]
   112e4:	add	r3, r3, #8
   112e8:	str	r3, [fp, #-12]
   112ec:	ldr	r3, [fp, #-12]
   112f0:	ldr	r3, [r3]
   112f4:	cmp	r3, #0
   112f8:	beq	1131c <__assert_fail@plt+0x1c4>
   112fc:	ldr	r3, [fp, #-12]
   11300:	ldr	r3, [r3]
   11304:	mov	r1, r3
   11308:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1130c:	bl	10eac <strcmp@plt>
   11310:	mov	r3, r0
   11314:	cmp	r3, #0
   11318:	bne	112e0 <__assert_fail@plt+0x188>
   1131c:	ldr	r3, [fp, #-12]
   11320:	ldr	r3, [r3, #4]
   11324:	cmp	r3, #0
   11328:	beq	11338 <__assert_fail@plt+0x1e0>
   1132c:	ldr	r3, [fp, #-12]
   11330:	ldr	r3, [r3, #4]
   11334:	str	r3, [fp, #-8]
   11338:	ldr	r0, [pc, #200]	; 11408 <__assert_fail@plt+0x2b0>
   1133c:	bl	11044 <gettext@plt>
   11340:	mov	r3, r0
   11344:	ldr	r2, [pc, #192]	; 1140c <__assert_fail@plt+0x2b4>
   11348:	ldr	r1, [pc, #192]	; 11410 <__assert_fail@plt+0x2b8>
   1134c:	mov	r0, r3
   11350:	bl	10eb8 <printf@plt>
   11354:	mov	r1, #0
   11358:	mov	r0, #5
   1135c:	bl	110ec <setlocale@plt>
   11360:	str	r0, [fp, #-16]
   11364:	ldr	r3, [fp, #-16]
   11368:	cmp	r3, #0
   1136c:	beq	113ac <__assert_fail@plt+0x254>
   11370:	mov	r2, #3
   11374:	ldr	r1, [pc, #152]	; 11414 <__assert_fail@plt+0x2bc>
   11378:	ldr	r0, [fp, #-16]
   1137c:	bl	11134 <strncmp@plt>
   11380:	mov	r3, r0
   11384:	cmp	r3, #0
   11388:	beq	113ac <__assert_fail@plt+0x254>
   1138c:	ldr	r0, [pc, #132]	; 11418 <__assert_fail@plt+0x2c0>
   11390:	bl	11044 <gettext@plt>
   11394:	mov	r2, r0
   11398:	ldr	r3, [pc, #124]	; 1141c <__assert_fail@plt+0x2c4>
   1139c:	ldr	r3, [r3]
   113a0:	mov	r1, r3
   113a4:	mov	r0, r2
   113a8:	bl	10e7c <fputs_unlocked@plt>
   113ac:	ldr	r0, [pc, #108]	; 11420 <__assert_fail@plt+0x2c8>
   113b0:	bl	11044 <gettext@plt>
   113b4:	mov	r3, r0
   113b8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   113bc:	ldr	r1, [pc, #72]	; 1140c <__assert_fail@plt+0x2b4>
   113c0:	mov	r0, r3
   113c4:	bl	10eb8 <printf@plt>
   113c8:	ldr	r0, [pc, #84]	; 11424 <__assert_fail@plt+0x2cc>
   113cc:	bl	11044 <gettext@plt>
   113d0:	ldr	r2, [fp, #-8]
   113d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   113d8:	cmp	r2, r3
   113dc:	bne	113e8 <__assert_fail@plt+0x290>
   113e0:	ldr	r3, [pc, #64]	; 11428 <__assert_fail@plt+0x2d0>
   113e4:	b	113ec <__assert_fail@plt+0x294>
   113e8:	ldr	r3, [pc, #60]	; 1142c <__assert_fail@plt+0x2d4>
   113ec:	mov	r2, r3
   113f0:	ldr	r1, [fp, #-8]
   113f4:	bl	10eb8 <printf@plt>
   113f8:	nop			; (mov r0, r0)
   113fc:	sub	sp, fp, #4
   11400:	pop	{fp, pc}
   11404:	strdeq	r0, [r3], -r4
   11408:	andeq	r0, r3, r0, lsl #7
   1140c:	muleq	r3, r8, r3
   11410:	andeq	r0, r3, r0, asr #7
   11414:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   11418:	ldrdeq	r0, [r3], -r4
   1141c:	andeq	r5, r4, ip, lsl #3
   11420:	andeq	r0, r3, ip, lsl r4
   11424:	andeq	r0, r3, r8, lsr r4
   11428:	andeq	r0, r3, ip, ror #8
   1142c:	andeq	r0, r3, r8, ror r4
   11430:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11434:	add	fp, sp, #28
   11438:	sub	sp, sp, #96	; 0x60
   1143c:	str	r0, [fp, #-88]	; 0xffffffa8
   11440:	strd	r2, [fp, #-100]	; 0xffffff9c
   11444:	ldrd	r2, [fp, #12]
   11448:	orrs	r3, r2, r3
   1144c:	bne	11464 <__assert_fail@plt+0x30c>
   11450:	ldr	r3, [pc, #788]	; 1176c <__assert_fail@plt+0x614>
   11454:	ldr	r2, [pc, #788]	; 11770 <__assert_fail@plt+0x618>
   11458:	ldr	r1, [pc, #788]	; 11774 <__assert_fail@plt+0x61c>
   1145c:	ldr	r0, [pc, #788]	; 11778 <__assert_fail@plt+0x620>
   11460:	bl	11158 <__assert_fail@plt>
   11464:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   11468:	orrs	r3, r2, r3
   1146c:	bne	11488 <__assert_fail@plt+0x330>
   11470:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11474:	mov	r2, #0
   11478:	mov	r3, #0
   1147c:	strd	r2, [r1]
   11480:	ldrd	r2, [fp, #4]
   11484:	b	1175c <__assert_fail@plt+0x604>
   11488:	ldrd	r2, [fp, #12]
   1148c:	strd	r2, [fp, #-36]	; 0xffffffdc
   11490:	mov	r3, #0
   11494:	str	r3, [fp, #-40]	; 0xffffffd8
   11498:	b	114d0 <__assert_fail@plt+0x378>
   1149c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   114a0:	lsl	r1, r3, #8
   114a4:	str	r1, [fp, #-104]	; 0xffffff98
   114a8:	ldr	r1, [fp, #-104]	; 0xffffff98
   114ac:	orr	r1, r1, r2, lsr #24
   114b0:	str	r1, [fp, #-104]	; 0xffffff98
   114b4:	lsl	r3, r2, #8
   114b8:	str	r3, [fp, #-108]	; 0xffffff94
   114bc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   114c0:	strd	r2, [fp, #-36]	; 0xffffffdc
   114c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   114c8:	add	r3, r3, #8
   114cc:	str	r3, [fp, #-40]	; 0xffffffd8
   114d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   114d4:	mov	r2, #0
   114d8:	mov	r3, #-16777216	; 0xff000000
   114dc:	and	r2, r2, r0
   114e0:	and	r3, r3, r1
   114e4:	orrs	r3, r2, r3
   114e8:	beq	1149c <__assert_fail@plt+0x344>
   114ec:	b	1150c <__assert_fail@plt+0x3b4>
   114f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   114f4:	adds	r2, r2, r2
   114f8:	adc	r3, r3, r3
   114fc:	strd	r2, [fp, #-36]	; 0xffffffdc
   11500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11504:	add	r3, r3, #1
   11508:	str	r3, [fp, #-40]	; 0xffffffd8
   1150c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11510:	cmp	r2, #0
   11514:	sbcs	r3, r3, #0
   11518:	bge	114f0 <__assert_fail@plt+0x398>
   1151c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11520:	str	r3, [fp, #-64]	; 0xffffffc0
   11524:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   11528:	strd	r2, [fp, #-52]	; 0xffffffcc
   1152c:	mov	r3, #0
   11530:	str	r3, [fp, #-56]	; 0xffffffc8
   11534:	b	1156c <__assert_fail@plt+0x414>
   11538:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1153c:	lsl	r1, r3, #8
   11540:	str	r1, [fp, #-112]	; 0xffffff90
   11544:	ldr	r1, [fp, #-112]	; 0xffffff90
   11548:	orr	r1, r1, r2, lsr #24
   1154c:	str	r1, [fp, #-112]	; 0xffffff90
   11550:	lsl	r3, r2, #8
   11554:	str	r3, [fp, #-116]	; 0xffffff8c
   11558:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1155c:	strd	r2, [fp, #-52]	; 0xffffffcc
   11560:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11564:	add	r3, r3, #8
   11568:	str	r3, [fp, #-56]	; 0xffffffc8
   1156c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11570:	mov	r0, #0
   11574:	mov	r1, #-16777216	; 0xff000000
   11578:	and	r2, r2, r0
   1157c:	and	r3, r3, r1
   11580:	orrs	r3, r2, r3
   11584:	beq	11538 <__assert_fail@plt+0x3e0>
   11588:	b	115a8 <__assert_fail@plt+0x450>
   1158c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11590:	adds	r2, r2, r2
   11594:	adc	r3, r3, r3
   11598:	strd	r2, [fp, #-52]	; 0xffffffcc
   1159c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   115a0:	add	r3, r3, #1
   115a4:	str	r3, [fp, #-56]	; 0xffffffc8
   115a8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   115ac:	cmp	r2, #0
   115b0:	sbcs	r3, r3, #0
   115b4:	bge	1158c <__assert_fail@plt+0x434>
   115b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   115bc:	str	r3, [fp, #-68]	; 0xffffffbc
   115c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   115c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   115c8:	sub	r3, r2, r3
   115cc:	str	r3, [fp, #-72]	; 0xffffffb8
   115d0:	ldrd	r2, [fp, #12]
   115d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   115d8:	sub	ip, r1, #32
   115dc:	rsb	r0, r1, #32
   115e0:	lsl	r9, r3, r1
   115e4:	orr	r9, r9, r2, lsl ip
   115e8:	orr	r9, r9, r2, lsr r0
   115ec:	lsl	r8, r2, r1
   115f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   115f4:	rsb	r1, r3, #64	; 0x40
   115f8:	ldrd	r2, [fp, #20]
   115fc:	rsb	ip, r1, #32
   11600:	sub	r0, r1, #32
   11604:	lsr	r6, r2, r1
   11608:	orr	r6, r6, r3, lsl ip
   1160c:	orr	r6, r6, r3, lsr r0
   11610:	lsr	r7, r3, r1
   11614:	orr	r2, r8, r6
   11618:	orr	r3, r9, r7
   1161c:	strd	r2, [fp, #12]
   11620:	ldrd	r2, [fp, #20]
   11624:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11628:	sub	ip, r1, #32
   1162c:	rsb	r0, r1, #32
   11630:	lsl	r5, r3, r1
   11634:	orr	r5, r5, r2, lsl ip
   11638:	orr	r5, r5, r2, lsr r0
   1163c:	lsl	r4, r2, r1
   11640:	strd	r4, [fp, #20]
   11644:	mov	r3, #0
   11648:	str	r3, [fp, #-60]	; 0xffffffc4
   1164c:	b	1173c <__assert_fail@plt+0x5e4>
   11650:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11654:	ldrd	r2, [fp, #12]
   11658:	cmp	r1, r3
   1165c:	cmpeq	r0, r2
   11660:	bhi	1168c <__assert_fail@plt+0x534>
   11664:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11668:	ldrd	r2, [fp, #12]
   1166c:	cmp	r1, r3
   11670:	cmpeq	r0, r2
   11674:	bne	116e8 <__assert_fail@plt+0x590>
   11678:	ldrd	r0, [fp, #4]
   1167c:	ldrd	r2, [fp, #20]
   11680:	cmp	r1, r3
   11684:	cmpeq	r0, r2
   11688:	bcc	116e8 <__assert_fail@plt+0x590>
   1168c:	ldrd	r0, [fp, #4]
   11690:	ldrd	r2, [fp, #20]
   11694:	cmp	r1, r3
   11698:	cmpeq	r0, r2
   1169c:	movcc	r3, #1
   116a0:	movcs	r3, #0
   116a4:	uxtb	r3, r3
   116a8:	uxtb	r2, r3
   116ac:	mov	r3, #0
   116b0:	strd	r2, [fp, #-84]	; 0xffffffac
   116b4:	ldrd	r0, [fp, #4]
   116b8:	ldrd	r2, [fp, #20]
   116bc:	subs	r2, r0, r2
   116c0:	sbc	r3, r1, r3
   116c4:	strd	r2, [fp, #4]
   116c8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   116cc:	ldrd	r2, [fp, #12]
   116d0:	subs	r0, r0, r2
   116d4:	sbc	r1, r1, r3
   116d8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   116dc:	subs	r2, r0, r2
   116e0:	sbc	r3, r1, r3
   116e4:	strd	r2, [fp, #-100]	; 0xffffff9c
   116e8:	ldrd	r2, [fp, #12]
   116ec:	lsl	r3, r2, #31
   116f0:	str	r3, [fp, #-120]	; 0xffffff88
   116f4:	mov	r3, #0
   116f8:	str	r3, [fp, #-124]	; 0xffffff84
   116fc:	ldrd	r2, [fp, #20]
   11700:	lsrs	r3, r3, #1
   11704:	rrx	r2, r2
   11708:	ldrd	r0, [fp, #-124]	; 0xffffff84
   1170c:	orr	r0, r0, r2
   11710:	orr	r1, r1, r3
   11714:	mov	r2, r0
   11718:	mov	r3, r1
   1171c:	strd	r2, [fp, #20]
   11720:	ldrd	r2, [fp, #12]
   11724:	lsrs	r3, r3, #1
   11728:	rrx	r2, r2
   1172c:	strd	r2, [fp, #12]
   11730:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11734:	add	r3, r3, #1
   11738:	str	r3, [fp, #-60]	; 0xffffffc4
   1173c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11740:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11744:	cmp	r2, r3
   11748:	blt	11650 <__assert_fail@plt+0x4f8>
   1174c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11750:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   11754:	strd	r2, [r1]
   11758:	ldrd	r2, [fp, #4]
   1175c:	mov	r0, r2
   11760:	mov	r1, r3
   11764:	sub	sp, fp, #28
   11768:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1176c:	andeq	r3, r3, r8, lsr #18
   11770:	muleq	r0, fp, r1
   11774:	andeq	r0, r3, r4, lsl #11
   11778:	muleq	r3, r4, r5
   1177c:	push	{r4, r5, fp}
   11780:	add	fp, sp, #8
   11784:	sub	sp, sp, #44	; 0x2c
   11788:	strd	r0, [fp, #-44]	; 0xffffffd4
   1178c:	strd	r2, [fp, #-52]	; 0xffffffcc
   11790:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11794:	mov	r0, #1
   11798:	mov	r1, #0
   1179c:	and	r2, r2, r0
   117a0:	and	r3, r3, r1
   117a4:	orrs	r3, r2, r3
   117a8:	bne	117c4 <__assert_fail@plt+0x66c>
   117ac:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   117b0:	strd	r2, [fp, #-20]	; 0xffffffec
   117b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   117b8:	strd	r2, [fp, #-52]	; 0xffffffcc
   117bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   117c0:	strd	r2, [fp, #-44]	; 0xffffffd4
   117c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   117c8:	orrs	r3, r2, r3
   117cc:	bne	117d8 <__assert_fail@plt+0x680>
   117d0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   117d4:	b	118b4 <__assert_fail@plt+0x75c>
   117d8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   117dc:	lsrs	r3, r3, #1
   117e0:	rrx	r2, r2
   117e4:	strd	r2, [fp, #-52]	; 0xffffffcc
   117e8:	b	117fc <__assert_fail@plt+0x6a4>
   117ec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   117f0:	lsrs	r3, r3, #1
   117f4:	rrx	r2, r2
   117f8:	strd	r2, [fp, #-44]	; 0xffffffd4
   117fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11800:	mov	r0, #1
   11804:	mov	r1, #0
   11808:	and	r2, r2, r0
   1180c:	and	r3, r3, r1
   11810:	orrs	r3, r2, r3
   11814:	beq	117ec <__assert_fail@plt+0x694>
   11818:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1181c:	lsrs	r3, r3, #1
   11820:	rrx	r2, r2
   11824:	strd	r2, [fp, #-44]	; 0xffffffd4
   11828:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1182c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11830:	subs	r2, r0, r2
   11834:	sbc	r3, r1, r3
   11838:	strd	r2, [fp, #-28]	; 0xffffffe4
   1183c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11840:	orrs	r3, r2, r3
   11844:	bne	11860 <__assert_fail@plt+0x708>
   11848:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1184c:	adds	r2, r2, r2
   11850:	adc	r3, r3, r3
   11854:	adds	r2, r2, #1
   11858:	adc	r3, r3, #0
   1185c:	b	118b4 <__assert_fail@plt+0x75c>
   11860:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11864:	asr	r4, r3, #31
   11868:	asr	r5, r3, #31
   1186c:	strd	r4, [fp, #-36]	; 0xffffffdc
   11870:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11874:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11878:	and	r2, r2, r0
   1187c:	and	r3, r3, r1
   11880:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   11884:	adds	r2, r2, r0
   11888:	adc	r3, r3, r1
   1188c:	strd	r2, [fp, #-52]	; 0xffffffcc
   11890:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   11894:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11898:	eor	r0, r0, r2
   1189c:	eor	r1, r1, r3
   118a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   118a4:	subs	r2, r0, r2
   118a8:	sbc	r3, r1, r3
   118ac:	strd	r2, [fp, #-44]	; 0xffffffd4
   118b0:	b	117e8 <__assert_fail@plt+0x690>
   118b4:	mov	r0, r2
   118b8:	mov	r1, r3
   118bc:	sub	sp, fp, #8
   118c0:	pop	{r4, r5, fp}
   118c4:	bx	lr
   118c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   118cc:	add	fp, sp, #28
   118d0:	sub	sp, sp, #32
   118d4:	str	r0, [fp, #-48]	; 0xffffffd0
   118d8:	strd	r2, [fp, #-60]	; 0xffffffc4
   118dc:	ldrd	r2, [fp, #20]
   118e0:	mov	r0, #1
   118e4:	mov	r1, #0
   118e8:	and	r2, r2, r0
   118ec:	and	r3, r3, r1
   118f0:	orrs	r3, r2, r3
   118f4:	bne	1190c <__assert_fail@plt+0x7b4>
   118f8:	ldr	r3, [pc, #704]	; 11bc0 <__assert_fail@plt+0xa68>
   118fc:	mov	r2, #476	; 0x1dc
   11900:	ldr	r1, [pc, #700]	; 11bc4 <__assert_fail@plt+0xa6c>
   11904:	ldr	r0, [pc, #700]	; 11bc8 <__assert_fail@plt+0xa70>
   11908:	bl	11158 <__assert_fail@plt>
   1190c:	ldrd	r0, [fp, #4]
   11910:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11914:	orr	r2, r2, r0
   11918:	orr	r3, r3, r1
   1191c:	orrs	r3, r2, r3
   11920:	bne	1196c <__assert_fail@plt+0x814>
   11924:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11928:	ldrd	r2, [fp, #12]
   1192c:	strd	r2, [r1]
   11930:	ldrd	r2, [fp, #20]
   11934:	b	11bb0 <__assert_fail@plt+0xa58>
   11938:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1193c:	lsl	r9, r2, #31
   11940:	mov	r8, #0
   11944:	ldrd	r2, [fp, #4]
   11948:	lsrs	r3, r3, #1
   1194c:	rrx	r2, r2
   11950:	orr	r2, r2, r8
   11954:	orr	r3, r3, r9
   11958:	strd	r2, [fp, #4]
   1195c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11960:	lsrs	r3, r3, #1
   11964:	rrx	r2, r2
   11968:	strd	r2, [fp, #-60]	; 0xffffffc4
   1196c:	ldrd	r2, [fp, #4]
   11970:	mov	r0, #1
   11974:	mov	r1, #0
   11978:	and	r2, r2, r0
   1197c:	and	r3, r3, r1
   11980:	orrs	r3, r2, r3
   11984:	beq	11938 <__assert_fail@plt+0x7e0>
   11988:	ldrd	r0, [fp, #12]
   1198c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11990:	orr	r2, r2, r0
   11994:	orr	r3, r3, r1
   11998:	orrs	r3, r2, r3
   1199c:	bne	119c8 <__assert_fail@plt+0x870>
   119a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   119a4:	mov	r2, #0
   119a8:	mov	r3, #0
   119ac:	strd	r2, [r1]
   119b0:	ldrd	r2, [fp, #4]
   119b4:	ldrd	r0, [fp, #20]
   119b8:	bl	1177c <__assert_fail@plt+0x624>
   119bc:	mov	r2, r0
   119c0:	mov	r3, r1
   119c4:	b	11bb0 <__assert_fail@plt+0xa58>
   119c8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   119cc:	ldrd	r2, [fp, #12]
   119d0:	cmp	r1, r3
   119d4:	cmpeq	r0, r2
   119d8:	bhi	11a04 <__assert_fail@plt+0x8ac>
   119dc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   119e0:	ldrd	r2, [fp, #12]
   119e4:	cmp	r1, r3
   119e8:	cmpeq	r0, r2
   119ec:	bne	11ab4 <__assert_fail@plt+0x95c>
   119f0:	ldrd	r0, [fp, #4]
   119f4:	ldrd	r2, [fp, #20]
   119f8:	cmp	r1, r3
   119fc:	cmpeq	r0, r2
   11a00:	bls	11ab4 <__assert_fail@plt+0x95c>
   11a04:	ldrd	r0, [fp, #4]
   11a08:	ldrd	r2, [fp, #20]
   11a0c:	cmp	r1, r3
   11a10:	cmpeq	r0, r2
   11a14:	movcc	r3, #1
   11a18:	movcs	r3, #0
   11a1c:	uxtb	r3, r3
   11a20:	uxtb	r2, r3
   11a24:	mov	r3, #0
   11a28:	strd	r2, [fp, #-44]	; 0xffffffd4
   11a2c:	ldrd	r0, [fp, #4]
   11a30:	ldrd	r2, [fp, #20]
   11a34:	subs	r2, r0, r2
   11a38:	sbc	r3, r1, r3
   11a3c:	strd	r2, [fp, #4]
   11a40:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   11a44:	ldrd	r2, [fp, #12]
   11a48:	subs	r0, r0, r2
   11a4c:	sbc	r1, r1, r3
   11a50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11a54:	subs	r2, r0, r2
   11a58:	sbc	r3, r1, r3
   11a5c:	strd	r2, [fp, #-60]	; 0xffffffc4
   11a60:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11a64:	lsl	r7, r2, #31
   11a68:	mov	r6, #0
   11a6c:	ldrd	r2, [fp, #4]
   11a70:	lsrs	r3, r3, #1
   11a74:	rrx	r2, r2
   11a78:	orr	r2, r2, r6
   11a7c:	orr	r3, r3, r7
   11a80:	strd	r2, [fp, #4]
   11a84:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11a88:	lsrs	r3, r3, #1
   11a8c:	rrx	r2, r2
   11a90:	strd	r2, [fp, #-60]	; 0xffffffc4
   11a94:	ldrd	r2, [fp, #4]
   11a98:	mov	r0, #1
   11a9c:	mov	r1, #0
   11aa0:	and	r2, r2, r0
   11aa4:	and	r3, r3, r1
   11aa8:	orrs	r3, r2, r3
   11aac:	beq	11a60 <__assert_fail@plt+0x908>
   11ab0:	b	11b9c <__assert_fail@plt+0xa44>
   11ab4:	ldrd	r0, [fp, #12]
   11ab8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11abc:	cmp	r1, r3
   11ac0:	cmpeq	r0, r2
   11ac4:	bhi	11af0 <__assert_fail@plt+0x998>
   11ac8:	ldrd	r0, [fp, #12]
   11acc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11ad0:	cmp	r1, r3
   11ad4:	cmpeq	r0, r2
   11ad8:	bne	11ba0 <__assert_fail@plt+0xa48>
   11adc:	ldrd	r0, [fp, #20]
   11ae0:	ldrd	r2, [fp, #4]
   11ae4:	cmp	r1, r3
   11ae8:	cmpeq	r0, r2
   11aec:	bls	11ba0 <__assert_fail@plt+0xa48>
   11af0:	ldrd	r0, [fp, #20]
   11af4:	ldrd	r2, [fp, #4]
   11af8:	cmp	r1, r3
   11afc:	cmpeq	r0, r2
   11b00:	movcc	r3, #1
   11b04:	movcs	r3, #0
   11b08:	uxtb	r3, r3
   11b0c:	uxtb	r2, r3
   11b10:	mov	r3, #0
   11b14:	strd	r2, [fp, #-36]	; 0xffffffdc
   11b18:	ldrd	r0, [fp, #20]
   11b1c:	ldrd	r2, [fp, #4]
   11b20:	subs	r2, r0, r2
   11b24:	sbc	r3, r1, r3
   11b28:	strd	r2, [fp, #20]
   11b2c:	ldrd	r0, [fp, #12]
   11b30:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11b34:	subs	r0, r0, r2
   11b38:	sbc	r1, r1, r3
   11b3c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   11b40:	subs	r2, r0, r2
   11b44:	sbc	r3, r1, r3
   11b48:	strd	r2, [fp, #12]
   11b4c:	ldrd	r2, [fp, #12]
   11b50:	lsl	r5, r2, #31
   11b54:	mov	r4, #0
   11b58:	ldrd	r2, [fp, #20]
   11b5c:	lsrs	r3, r3, #1
   11b60:	rrx	r2, r2
   11b64:	orr	r2, r2, r4
   11b68:	orr	r3, r3, r5
   11b6c:	strd	r2, [fp, #20]
   11b70:	ldrd	r2, [fp, #12]
   11b74:	lsrs	r3, r3, #1
   11b78:	rrx	r2, r2
   11b7c:	strd	r2, [fp, #12]
   11b80:	ldrd	r2, [fp, #20]
   11b84:	mov	r0, #1
   11b88:	mov	r1, #0
   11b8c:	and	r2, r2, r0
   11b90:	and	r3, r3, r1
   11b94:	orrs	r3, r2, r3
   11b98:	beq	11b4c <__assert_fail@plt+0x9f4>
   11b9c:	b	11988 <__assert_fail@plt+0x830>
   11ba0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ba4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   11ba8:	strd	r2, [r1]
   11bac:	ldrd	r2, [fp, #4]
   11bb0:	mov	r0, r2
   11bb4:	mov	r1, r3
   11bb8:	sub	sp, fp, #28
   11bbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11bc0:	andeq	r3, r3, r0, lsr r9
   11bc4:	andeq	r0, r3, r4, lsl #11
   11bc8:	muleq	r3, ip, r5
   11bcc:	push	{fp}		; (str fp, [sp, #-4]!)
   11bd0:	add	fp, sp, #0
   11bd4:	sub	sp, sp, #44	; 0x2c
   11bd8:	str	r0, [fp, #-32]	; 0xffffffe0
   11bdc:	strd	r2, [fp, #-44]	; 0xffffffd4
   11be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11be4:	ldrb	r3, [r3, #250]	; 0xfa
   11be8:	str	r3, [fp, #-16]
   11bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bf0:	add	r3, r3, #16
   11bf4:	str	r3, [fp, #-20]	; 0xffffffec
   11bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bfc:	add	r3, r3, #224	; 0xe0
   11c00:	str	r3, [fp, #-24]	; 0xffffffe8
   11c04:	ldr	r3, [fp, #-16]
   11c08:	sub	r3, r3, #1
   11c0c:	str	r3, [fp, #-8]
   11c10:	b	11c44 <__assert_fail@plt+0xaec>
   11c14:	ldr	r3, [fp, #-8]
   11c18:	lsl	r3, r3, #3
   11c1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c20:	add	r3, r2, r3
   11c24:	ldrd	r0, [r3]
   11c28:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11c2c:	cmp	r1, r3
   11c30:	cmpeq	r0, r2
   11c34:	bls	11c54 <__assert_fail@plt+0xafc>
   11c38:	ldr	r3, [fp, #-8]
   11c3c:	sub	r3, r3, #1
   11c40:	str	r3, [fp, #-8]
   11c44:	ldr	r3, [fp, #-8]
   11c48:	cmp	r3, #0
   11c4c:	bge	11c14 <__assert_fail@plt+0xabc>
   11c50:	b	11c58 <__assert_fail@plt+0xb00>
   11c54:	nop			; (mov r0, r0)
   11c58:	ldr	r3, [fp, #-8]
   11c5c:	cmp	r3, #0
   11c60:	blt	11c88 <__assert_fail@plt+0xb30>
   11c64:	ldr	r3, [fp, #-8]
   11c68:	lsl	r3, r3, #3
   11c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c70:	add	r3, r2, r3
   11c74:	ldrd	r0, [r3]
   11c78:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11c7c:	cmp	r1, r3
   11c80:	cmpeq	r0, r2
   11c84:	beq	11d58 <__assert_fail@plt+0xc00>
   11c88:	ldr	r3, [fp, #-16]
   11c8c:	sub	r3, r3, #1
   11c90:	str	r3, [fp, #-12]
   11c94:	b	11cf4 <__assert_fail@plt+0xb9c>
   11c98:	ldr	r3, [fp, #-12]
   11c9c:	add	r3, r3, #1
   11ca0:	lsl	r3, r3, #3
   11ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ca8:	add	r1, r2, r3
   11cac:	ldr	r3, [fp, #-12]
   11cb0:	lsl	r3, r3, #3
   11cb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11cb8:	add	r3, r2, r3
   11cbc:	ldrd	r2, [r3]
   11cc0:	strd	r2, [r1]
   11cc4:	ldr	r3, [fp, #-12]
   11cc8:	add	r3, r3, #1
   11ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11cd0:	add	r3, r2, r3
   11cd4:	ldr	r2, [fp, #-12]
   11cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11cdc:	add	r2, r1, r2
   11ce0:	ldrb	r2, [r2]
   11ce4:	strb	r2, [r3]
   11ce8:	ldr	r3, [fp, #-12]
   11cec:	sub	r3, r3, #1
   11cf0:	str	r3, [fp, #-12]
   11cf4:	ldr	r2, [fp, #-12]
   11cf8:	ldr	r3, [fp, #-8]
   11cfc:	cmp	r2, r3
   11d00:	bgt	11c98 <__assert_fail@plt+0xb40>
   11d04:	ldr	r3, [fp, #-8]
   11d08:	add	r3, r3, #1
   11d0c:	lsl	r3, r3, #3
   11d10:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d14:	add	r1, r2, r3
   11d18:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11d1c:	strd	r2, [r1]
   11d20:	ldr	r3, [fp, #-8]
   11d24:	add	r3, r3, #1
   11d28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d2c:	add	r3, r2, r3
   11d30:	ldr	r2, [fp, #4]
   11d34:	uxtb	r2, r2
   11d38:	strb	r2, [r3]
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	uxtb	r3, r3
   11d44:	add	r3, r3, #1
   11d48:	uxtb	r2, r3
   11d4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d50:	strb	r2, [r3, #250]	; 0xfa
   11d54:	b	11d88 <__assert_fail@plt+0xc30>
   11d58:	ldr	r3, [fp, #-8]
   11d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d60:	add	r3, r2, r3
   11d64:	ldr	r2, [fp, #-8]
   11d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11d6c:	add	r2, r1, r2
   11d70:	ldrb	r1, [r2]
   11d74:	ldr	r2, [fp, #4]
   11d78:	uxtb	r2, r2
   11d7c:	add	r2, r1, r2
   11d80:	uxtb	r2, r2
   11d84:	strb	r2, [r3]
   11d88:	nop			; (mov r0, r0)
   11d8c:	add	sp, fp, #0
   11d90:	pop	{fp}		; (ldr fp, [sp], #4)
   11d94:	bx	lr
   11d98:	push	{fp, lr}
   11d9c:	add	fp, sp, #4
   11da0:	sub	sp, sp, #24
   11da4:	str	r0, [fp, #-8]
   11da8:	strd	r2, [fp, #-20]	; 0xffffffec
   11dac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11db0:	orrs	r3, r2, r3
   11db4:	beq	11df8 <__assert_fail@plt+0xca0>
   11db8:	ldr	r3, [fp, #-8]
   11dbc:	ldrd	r2, [r3, #8]
   11dc0:	orrs	r3, r2, r3
   11dc4:	beq	11ddc <__assert_fail@plt+0xc84>
   11dc8:	ldr	r3, [pc, #72]	; 11e18 <__assert_fail@plt+0xcc0>
   11dcc:	ldr	r2, [pc, #72]	; 11e1c <__assert_fail@plt+0xcc4>
   11dd0:	ldr	r1, [pc, #72]	; 11e20 <__assert_fail@plt+0xcc8>
   11dd4:	ldr	r0, [pc, #72]	; 11e24 <__assert_fail@plt+0xccc>
   11dd8:	bl	11158 <__assert_fail@plt>
   11ddc:	ldr	r1, [fp, #-8]
   11de0:	ldrd	r2, [fp, #4]
   11de4:	strd	r2, [r1]
   11de8:	ldr	r1, [fp, #-8]
   11dec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   11df0:	strd	r2, [r1, #8]
   11df4:	b	11e0c <__assert_fail@plt+0xcb4>
   11df8:	mov	r3, #1
   11dfc:	str	r3, [sp]
   11e00:	ldrd	r2, [fp, #4]
   11e04:	ldr	r0, [fp, #-8]
   11e08:	bl	11bcc <__assert_fail@plt+0xa74>
   11e0c:	nop			; (mov r0, r0)
   11e10:	sub	sp, fp, #4
   11e14:	pop	{fp, pc}
   11e18:	andeq	r3, r3, ip, lsr r9
   11e1c:	andeq	r0, r0, lr, lsr #4
   11e20:	andeq	r0, r3, r4, lsl #11
   11e24:	andeq	r0, r3, r4, lsr #11
   11e28:	push	{r0, r1, r2, r3}
   11e2c:	push	{fp, lr}
   11e30:	add	fp, sp, #4
   11e34:	sub	sp, sp, #8
   11e38:	add	r3, fp, #8
   11e3c:	str	r3, [fp, #-12]
   11e40:	b	11e50 <__assert_fail@plt+0xcf8>
   11e44:	ldr	r3, [fp, #4]
   11e48:	ldr	r0, [fp, #-8]
   11e4c:	blx	r3
   11e50:	ldr	r3, [fp, #-12]
   11e54:	add	r2, r3, #4
   11e58:	str	r2, [fp, #-12]
   11e5c:	ldr	r3, [r3]
   11e60:	str	r3, [fp, #-8]
   11e64:	ldr	r3, [fp, #-8]
   11e68:	cmp	r3, #0
   11e6c:	bne	11e44 <__assert_fail@plt+0xcec>
   11e70:	nop			; (mov r0, r0)
   11e74:	sub	sp, fp, #4
   11e78:	pop	{fp, lr}
   11e7c:	add	sp, sp, #16
   11e80:	bx	lr
   11e84:	push	{fp}		; (str fp, [sp, #-4]!)
   11e88:	add	fp, sp, #0
   11e8c:	sub	sp, sp, #12
   11e90:	str	r0, [fp, #-8]
   11e94:	ldr	r3, [fp, #-8]
   11e98:	mov	r2, #0
   11e9c:	str	r2, [r3]
   11ea0:	ldr	r3, [fp, #-8]
   11ea4:	mov	r2, #0
   11ea8:	str	r2, [r3, #4]
   11eac:	ldr	r3, [fp, #-8]
   11eb0:	mov	r2, #0
   11eb4:	str	r2, [r3, #8]
   11eb8:	nop			; (mov r0, r0)
   11ebc:	add	sp, fp, #0
   11ec0:	pop	{fp}		; (ldr fp, [sp], #4)
   11ec4:	bx	lr
   11ec8:	push	{fp, lr}
   11ecc:	add	fp, sp, #4
   11ed0:	sub	sp, sp, #16
   11ed4:	str	r0, [fp, #-16]
   11ed8:	mov	r3, #0
   11edc:	str	r3, [fp, #-8]
   11ee0:	b	11f18 <__assert_fail@plt+0xdc0>
   11ee4:	ldr	r3, [fp, #-16]
   11ee8:	ldr	r1, [r3]
   11eec:	ldr	r2, [fp, #-8]
   11ef0:	mov	r3, r2
   11ef4:	lsl	r3, r3, #1
   11ef8:	add	r3, r3, r2
   11efc:	lsl	r3, r3, #2
   11f00:	add	r3, r1, r3
   11f04:	mov	r0, r3
   11f08:	bl	1f3e0 <__assert_fail@plt+0xe288>
   11f0c:	ldr	r3, [fp, #-8]
   11f10:	add	r3, r3, #1
   11f14:	str	r3, [fp, #-8]
   11f18:	ldr	r3, [fp, #-16]
   11f1c:	ldr	r2, [r3, #8]
   11f20:	ldr	r3, [fp, #-8]
   11f24:	cmp	r2, r3
   11f28:	bhi	11ee4 <__assert_fail@plt+0xd8c>
   11f2c:	ldr	r3, [fp, #-16]
   11f30:	ldr	r3, [r3]
   11f34:	mov	r0, r3
   11f38:	bl	1ad78 <__assert_fail@plt+0x9c20>
   11f3c:	ldr	r3, [fp, #-16]
   11f40:	ldr	r3, [r3, #4]
   11f44:	mov	r0, r3
   11f48:	bl	1ad78 <__assert_fail@plt+0x9c20>
   11f4c:	nop			; (mov r0, r0)
   11f50:	sub	sp, fp, #4
   11f54:	pop	{fp, pc}
   11f58:	push	{fp, lr}
   11f5c:	add	fp, sp, #4
   11f60:	sub	sp, sp, #32
   11f64:	str	r0, [fp, #-32]	; 0xffffffe0
   11f68:	str	r1, [fp, #-36]	; 0xffffffdc
   11f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f70:	ldr	r3, [r3, #8]
   11f74:	str	r3, [fp, #-16]
   11f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f7c:	ldr	r3, [r3]
   11f80:	str	r3, [fp, #-20]	; 0xffffffec
   11f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f88:	ldr	r3, [r3, #4]
   11f8c:	str	r3, [fp, #-24]	; 0xffffffe8
   11f90:	ldr	r3, [fp, #-16]
   11f94:	sub	r3, r3, #1
   11f98:	str	r3, [fp, #-8]
   11f9c:	b	11fe4 <__assert_fail@plt+0xe8c>
   11fa0:	ldr	r2, [fp, #-8]
   11fa4:	mov	r3, r2
   11fa8:	lsl	r3, r3, #1
   11fac:	add	r3, r3, r2
   11fb0:	lsl	r3, r3, #2
   11fb4:	mov	r2, r3
   11fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fbc:	add	r3, r3, r2
   11fc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11fc4:	mov	r0, r3
   11fc8:	bl	2054c <__assert_fail@plt+0xf3f4>
   11fcc:	mov	r3, r0
   11fd0:	cmp	r3, #0
   11fd4:	ble	11ff4 <__assert_fail@plt+0xe9c>
   11fd8:	ldr	r3, [fp, #-8]
   11fdc:	sub	r3, r3, #1
   11fe0:	str	r3, [fp, #-8]
   11fe4:	ldr	r3, [fp, #-8]
   11fe8:	cmp	r3, #0
   11fec:	bge	11fa0 <__assert_fail@plt+0xe48>
   11ff0:	b	11ff8 <__assert_fail@plt+0xea0>
   11ff4:	nop			; (mov r0, r0)
   11ff8:	ldr	r3, [fp, #-8]
   11ffc:	cmp	r3, #0
   12000:	blt	1203c <__assert_fail@plt+0xee4>
   12004:	ldr	r2, [fp, #-8]
   12008:	mov	r3, r2
   1200c:	lsl	r3, r3, #1
   12010:	add	r3, r3, r2
   12014:	lsl	r3, r3, #2
   12018:	mov	r2, r3
   1201c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12020:	add	r3, r3, r2
   12024:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12028:	mov	r0, r3
   1202c:	bl	2054c <__assert_fail@plt+0xf3f4>
   12030:	mov	r3, r0
   12034:	cmp	r3, #0
   12038:	beq	121c4 <__assert_fail@plt+0x106c>
   1203c:	ldr	r3, [fp, #-16]
   12040:	add	r2, r3, #1
   12044:	mov	r3, r2
   12048:	lsl	r3, r3, #1
   1204c:	add	r3, r3, r2
   12050:	lsl	r3, r3, #2
   12054:	mov	r1, r3
   12058:	ldr	r0, [fp, #-20]	; 0xffffffec
   1205c:	bl	2bbb8 <__assert_fail@plt+0x1aa60>
   12060:	str	r0, [fp, #-20]	; 0xffffffec
   12064:	ldr	r3, [fp, #-16]
   12068:	add	r3, r3, #1
   1206c:	lsl	r3, r3, #2
   12070:	mov	r1, r3
   12074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12078:	bl	2bbb8 <__assert_fail@plt+0x1aa60>
   1207c:	str	r0, [fp, #-24]	; 0xffffffe8
   12080:	ldr	r2, [fp, #-16]
   12084:	mov	r3, r2
   12088:	lsl	r3, r3, #1
   1208c:	add	r3, r3, r2
   12090:	lsl	r3, r3, #2
   12094:	mov	r2, r3
   12098:	ldr	r3, [fp, #-20]	; 0xffffffec
   1209c:	add	r3, r3, r2
   120a0:	mov	r0, r3
   120a4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   120a8:	ldr	r3, [fp, #-16]
   120ac:	sub	r3, r3, #1
   120b0:	str	r3, [fp, #-12]
   120b4:	b	1213c <__assert_fail@plt+0xfe4>
   120b8:	ldr	r3, [fp, #-12]
   120bc:	add	r2, r3, #1
   120c0:	mov	r3, r2
   120c4:	lsl	r3, r3, #1
   120c8:	add	r3, r3, r2
   120cc:	lsl	r3, r3, #2
   120d0:	mov	r2, r3
   120d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   120d8:	add	r0, r3, r2
   120dc:	ldr	r2, [fp, #-12]
   120e0:	mov	r3, r2
   120e4:	lsl	r3, r3, #1
   120e8:	add	r3, r3, r2
   120ec:	lsl	r3, r3, #2
   120f0:	mov	r2, r3
   120f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   120f8:	add	r3, r3, r2
   120fc:	mov	r1, r3
   12100:	bl	1f5e8 <__assert_fail@plt+0xe490>
   12104:	ldr	r3, [fp, #-12]
   12108:	add	r3, r3, #1
   1210c:	lsl	r3, r3, #2
   12110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12114:	add	r3, r2, r3
   12118:	ldr	r2, [fp, #-12]
   1211c:	lsl	r2, r2, #2
   12120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12124:	add	r2, r1, r2
   12128:	ldr	r2, [r2]
   1212c:	str	r2, [r3]
   12130:	ldr	r3, [fp, #-12]
   12134:	sub	r3, r3, #1
   12138:	str	r3, [fp, #-12]
   1213c:	ldr	r2, [fp, #-12]
   12140:	ldr	r3, [fp, #-8]
   12144:	cmp	r2, r3
   12148:	bgt	120b8 <__assert_fail@plt+0xf60>
   1214c:	ldr	r3, [fp, #-8]
   12150:	add	r2, r3, #1
   12154:	mov	r3, r2
   12158:	lsl	r3, r3, #1
   1215c:	add	r3, r3, r2
   12160:	lsl	r3, r3, #2
   12164:	mov	r2, r3
   12168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1216c:	add	r3, r3, r2
   12170:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12174:	mov	r0, r3
   12178:	bl	1f5e8 <__assert_fail@plt+0xe490>
   1217c:	ldr	r3, [fp, #-8]
   12180:	add	r3, r3, #1
   12184:	lsl	r3, r3, #2
   12188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1218c:	add	r3, r2, r3
   12190:	mov	r2, #1
   12194:	str	r2, [r3]
   12198:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1219c:	ldr	r2, [fp, #-20]	; 0xffffffec
   121a0:	str	r2, [r3]
   121a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121ac:	str	r2, [r3, #4]
   121b0:	ldr	r3, [fp, #-16]
   121b4:	add	r2, r3, #1
   121b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121bc:	str	r2, [r3, #8]
   121c0:	b	121f0 <__assert_fail@plt+0x1098>
   121c4:	ldr	r3, [fp, #-8]
   121c8:	lsl	r3, r3, #2
   121cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121d0:	add	r3, r2, r3
   121d4:	ldr	r2, [fp, #-8]
   121d8:	lsl	r2, r2, #2
   121dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121e0:	add	r2, r1, r2
   121e4:	ldr	r2, [r2]
   121e8:	add	r2, r2, #1
   121ec:	str	r2, [r3]
   121f0:	nop			; (mov r0, r0)
   121f4:	sub	sp, fp, #4
   121f8:	pop	{fp, pc}
   121fc:	push	{fp, lr}
   12200:	add	fp, sp, #4
   12204:	sub	sp, sp, #24
   12208:	str	r0, [fp, #-24]	; 0xffffffe8
   1220c:	str	r1, [fp, #-28]	; 0xffffffe4
   12210:	sub	r3, fp, #16
   12214:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12218:	mov	r0, r3
   1221c:	bl	1f6bc <__assert_fail@plt+0xe564>
   12220:	sub	r3, fp, #16
   12224:	mov	r1, r3
   12228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1222c:	bl	11f58 <__assert_fail@plt+0xe00>
   12230:	sub	r3, fp, #16
   12234:	mov	r0, r3
   12238:	bl	1f3e0 <__assert_fail@plt+0xe288>
   1223c:	nop			; (mov r0, r0)
   12240:	sub	sp, fp, #4
   12244:	pop	{fp, pc}
   12248:	push	{fp, lr}
   1224c:	add	fp, sp, #4
   12250:	sub	sp, sp, #32
   12254:	str	r0, [fp, #-16]
   12258:	strd	r2, [fp, #-28]	; 0xffffffe4
   1225c:	mov	r3, #0
   12260:	str	r3, [fp, #-8]
   12264:	b	122a0 <__assert_fail@plt+0x1148>
   12268:	ldr	r2, [fp, #4]
   1226c:	ldr	r3, [fp, #-8]
   12270:	add	r3, r2, r3
   12274:	ldr	r2, [pc, #84]	; 122d0 <__assert_fail@plt+0x1178>
   12278:	ldrb	r3, [r2, r3]
   1227c:	uxtb	r2, r3
   12280:	mov	r3, #0
   12284:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12288:	adds	r2, r2, r0
   1228c:	adc	r3, r3, r1
   12290:	strd	r2, [fp, #-28]	; 0xffffffe4
   12294:	ldr	r3, [fp, #-8]
   12298:	add	r3, r3, #1
   1229c:	str	r3, [fp, #-8]
   122a0:	ldr	r2, [fp, #-8]
   122a4:	ldr	r3, [fp, #8]
   122a8:	cmp	r2, r3
   122ac:	bcc	12268 <__assert_fail@plt+0x1110>
   122b0:	mov	r3, #1
   122b4:	str	r3, [sp]
   122b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   122bc:	ldr	r0, [fp, #-16]
   122c0:	bl	11bcc <__assert_fail@plt+0xa74>
   122c4:	nop			; (mov r0, r0)
   122c8:	sub	sp, fp, #4
   122cc:	pop	{fp, pc}
   122d0:			; <UNDEFINED> instruction: 0x000305bc
   122d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122d8:	add	fp, sp, #28
   122dc:	sub	sp, sp, #240	; 0xf0
   122e0:	str	r0, [fp, #-200]	; 0xffffff38
   122e4:	strd	r2, [fp, #-212]	; 0xffffff2c
   122e8:	ldrd	r0, [fp, #4]
   122ec:	mov	r2, #1
   122f0:	mov	r3, #0
   122f4:	and	r2, r2, r0
   122f8:	and	r3, r3, r1
   122fc:	orrs	r3, r2, r3
   12300:	bne	124a0 <__assert_fail@plt+0x1348>
   12304:	ldrd	r2, [fp, #4]
   12308:	orrs	r3, r2, r3
   1230c:	bne	123a4 <__assert_fail@plt+0x124c>
   12310:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12314:	strd	r2, [fp, #-44]	; 0xffffffd4
   12318:	mov	r3, #0
   1231c:	str	r3, [fp, #-48]	; 0xffffffd0
   12320:	b	12340 <__assert_fail@plt+0x11e8>
   12324:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12328:	lsrs	r3, r3, #1
   1232c:	rrx	r2, r2
   12330:	strd	r2, [fp, #-44]	; 0xffffffd4
   12334:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12338:	add	r3, r3, #1
   1233c:	str	r3, [fp, #-48]	; 0xffffffd0
   12340:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12344:	mov	r2, #1
   12348:	mov	r3, #0
   1234c:	and	r2, r2, r0
   12350:	and	r3, r3, r1
   12354:	orrs	r3, r2, r3
   12358:	beq	12324 <__assert_fail@plt+0x11cc>
   1235c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12360:	str	r3, [fp, #-32]	; 0xffffffe0
   12364:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12368:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1236c:	rsb	ip, r1, #32
   12370:	sub	r0, r1, #32
   12374:	lsr	r4, r2, r1
   12378:	orr	r4, r4, r3, lsl ip
   1237c:	orr	r4, r4, r3, lsr r0
   12380:	lsr	r5, r3, r1
   12384:	strd	r4, [fp, #4]
   12388:	mov	r2, #0
   1238c:	mov	r3, #0
   12390:	strd	r2, [fp, #-212]	; 0xffffff2c
   12394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12398:	add	r3, r3, #64	; 0x40
   1239c:	str	r3, [fp, #-32]	; 0xffffffe0
   123a0:	b	12488 <__assert_fail@plt+0x1330>
   123a4:	ldrd	r2, [fp, #4]
   123a8:	strd	r2, [fp, #-60]	; 0xffffffc4
   123ac:	mov	r3, #0
   123b0:	str	r3, [fp, #-64]	; 0xffffffc0
   123b4:	b	123d4 <__assert_fail@plt+0x127c>
   123b8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   123bc:	lsrs	r3, r3, #1
   123c0:	rrx	r2, r2
   123c4:	strd	r2, [fp, #-60]	; 0xffffffc4
   123c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   123cc:	add	r3, r3, #1
   123d0:	str	r3, [fp, #-64]	; 0xffffffc0
   123d4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   123d8:	mov	r2, #1
   123dc:	mov	r3, #0
   123e0:	and	r2, r2, r0
   123e4:	and	r3, r3, r1
   123e8:	orrs	r3, r2, r3
   123ec:	beq	123b8 <__assert_fail@plt+0x1260>
   123f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   123f4:	str	r3, [fp, #-32]	; 0xffffffe0
   123f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123fc:	rsb	r1, r3, #64	; 0x40
   12400:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12404:	sub	ip, r1, #32
   12408:	rsb	r0, r1, #32
   1240c:	lsl	lr, r3, r1
   12410:	str	lr, [fp, #-216]	; 0xffffff28
   12414:	ldr	lr, [fp, #-216]	; 0xffffff28
   12418:	orr	ip, lr, r2, lsl ip
   1241c:	str	ip, [fp, #-216]	; 0xffffff28
   12420:	ldr	ip, [fp, #-216]	; 0xffffff28
   12424:	orr	r0, ip, r2, lsr r0
   12428:	str	r0, [fp, #-216]	; 0xffffff28
   1242c:	lsl	r3, r2, r1
   12430:	str	r3, [fp, #-220]	; 0xffffff24
   12434:	ldrd	r2, [fp, #4]
   12438:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1243c:	rsb	ip, r1, #32
   12440:	sub	r0, r1, #32
   12444:	lsr	r6, r2, r1
   12448:	orr	r6, r6, r3, lsl ip
   1244c:	orr	r6, r6, r3, lsr r0
   12450:	lsr	r7, r3, r1
   12454:	ldrd	r2, [fp, #-220]	; 0xffffff24
   12458:	orr	r2, r2, r6
   1245c:	orr	r3, r3, r7
   12460:	strd	r2, [fp, #4]
   12464:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12468:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1246c:	rsb	ip, r1, #32
   12470:	sub	r0, r1, #32
   12474:	lsr	r8, r2, r1
   12478:	orr	r8, r8, r3, lsl ip
   1247c:	orr	r8, r8, r3, lsr r0
   12480:	lsr	r9, r3, r1
   12484:	strd	r8, [fp, #-212]	; 0xffffff2c
   12488:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1248c:	str	r3, [sp]
   12490:	mov	r2, #2
   12494:	mov	r3, #0
   12498:	ldr	r0, [fp, #12]
   1249c:	bl	11bcc <__assert_fail@plt+0xa74>
   124a0:	mov	r2, #3
   124a4:	mov	r3, #0
   124a8:	strd	r2, [fp, #-76]	; 0xffffffb4
   124ac:	mov	r3, #0
   124b0:	str	r3, [fp, #-80]	; 0xffffffb0
   124b4:	b	12814 <__assert_fail@plt+0x16bc>
   124b8:	ldr	r2, [pc, #2256]	; 12d90 <__assert_fail@plt+0x1c38>
   124bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   124c0:	lsl	r3, r3, #4
   124c4:	add	r3, r2, r3
   124c8:	ldrd	r2, [r3]
   124cc:	ldr	r1, [fp, #4]
   124d0:	mul	r0, r3, r1
   124d4:	ldr	r1, [fp, #8]
   124d8:	mul	r1, r2, r1
   124dc:	add	r1, r0, r1
   124e0:	ldr	r0, [fp, #4]
   124e4:	umull	r2, r3, r0, r2
   124e8:	add	r1, r1, r3
   124ec:	mov	r3, r1
   124f0:	strd	r2, [fp, #-100]	; 0xffffff9c
   124f4:	strd	r2, [fp, #-100]	; 0xffffff9c
   124f8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   124fc:	strd	r2, [fp, #-108]	; 0xffffff94
   12500:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12504:	strd	r2, [fp, #-116]	; 0xffffff8c
   12508:	ldr	r3, [fp, #-108]	; 0xffffff94
   1250c:	str	r3, [fp, #-120]	; 0xffffff88
   12510:	ldrd	r2, [fp, #-108]	; 0xffffff94
   12514:	mov	r3, r3
   12518:	str	r3, [fp, #-228]	; 0xffffff1c
   1251c:	mov	r3, #0
   12520:	str	r3, [fp, #-224]	; 0xffffff20
   12524:	ldr	r3, [fp, #-228]	; 0xffffff1c
   12528:	str	r3, [fp, #-124]	; 0xffffff84
   1252c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12530:	str	r3, [fp, #-128]	; 0xffffff80
   12534:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   12538:	mov	r3, r3
   1253c:	str	r3, [fp, #-236]	; 0xffffff14
   12540:	mov	r3, #0
   12544:	str	r3, [fp, #-232]	; 0xffffff18
   12548:	ldr	r3, [fp, #-236]	; 0xffffff14
   1254c:	str	r3, [fp, #-132]	; 0xffffff7c
   12550:	ldr	r3, [fp, #-120]	; 0xffffff88
   12554:	mov	r2, r3
   12558:	mov	r3, #0
   1255c:	ldr	r1, [fp, #-128]	; 0xffffff80
   12560:	mov	r0, r1
   12564:	mov	r1, #0
   12568:	mul	lr, r0, r3
   1256c:	mul	ip, r2, r1
   12570:	add	ip, lr, ip
   12574:	umull	r2, r3, r2, r0
   12578:	add	r1, ip, r3
   1257c:	mov	r3, r1
   12580:	strd	r2, [fp, #-140]	; 0xffffff74
   12584:	strd	r2, [fp, #-140]	; 0xffffff74
   12588:	ldr	r3, [fp, #-120]	; 0xffffff88
   1258c:	mov	r2, r3
   12590:	mov	r3, #0
   12594:	ldr	r1, [fp, #-132]	; 0xffffff7c
   12598:	mov	r0, r1
   1259c:	mov	r1, #0
   125a0:	mul	lr, r0, r3
   125a4:	mul	ip, r2, r1
   125a8:	add	ip, lr, ip
   125ac:	umull	r2, r3, r2, r0
   125b0:	add	r1, ip, r3
   125b4:	mov	r3, r1
   125b8:	strd	r2, [fp, #-148]	; 0xffffff6c
   125bc:	strd	r2, [fp, #-148]	; 0xffffff6c
   125c0:	ldr	r3, [fp, #-124]	; 0xffffff84
   125c4:	mov	r2, r3
   125c8:	mov	r3, #0
   125cc:	ldr	r1, [fp, #-128]	; 0xffffff80
   125d0:	mov	r0, r1
   125d4:	mov	r1, #0
   125d8:	mul	lr, r0, r3
   125dc:	mul	ip, r2, r1
   125e0:	add	ip, lr, ip
   125e4:	umull	r2, r3, r2, r0
   125e8:	add	r1, ip, r3
   125ec:	mov	r3, r1
   125f0:	strd	r2, [fp, #-156]	; 0xffffff64
   125f4:	strd	r2, [fp, #-156]	; 0xffffff64
   125f8:	ldr	r3, [fp, #-124]	; 0xffffff84
   125fc:	mov	r2, r3
   12600:	mov	r3, #0
   12604:	ldr	r1, [fp, #-132]	; 0xffffff7c
   12608:	mov	r0, r1
   1260c:	mov	r1, #0
   12610:	mul	lr, r0, r3
   12614:	mul	ip, r2, r1
   12618:	add	ip, lr, ip
   1261c:	umull	r2, r3, r2, r0
   12620:	add	r1, ip, r3
   12624:	mov	r3, r1
   12628:	strd	r2, [fp, #-92]	; 0xffffffa4
   1262c:	strd	r2, [fp, #-92]	; 0xffffffa4
   12630:	ldrd	r2, [fp, #-140]	; 0xffffff74
   12634:	mov	r3, r3
   12638:	str	r3, [fp, #-244]	; 0xffffff0c
   1263c:	mov	r3, #0
   12640:	str	r3, [fp, #-240]	; 0xffffff10
   12644:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   12648:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   1264c:	adds	r0, r0, r2
   12650:	adc	r1, r1, r3
   12654:	mov	r2, r0
   12658:	mov	r3, r1
   1265c:	strd	r2, [fp, #-148]	; 0xffffff6c
   12660:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   12664:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12668:	adds	r2, r2, r0
   1266c:	adc	r3, r3, r1
   12670:	strd	r2, [fp, #-148]	; 0xffffff6c
   12674:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   12678:	ldrd	r2, [fp, #-156]	; 0xffffff64
   1267c:	cmp	r1, r3
   12680:	cmpeq	r0, r2
   12684:	bcs	12698 <__assert_fail@plt+0x1540>
   12688:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1268c:	adds	r2, r2, #0
   12690:	adc	r3, r3, #1
   12694:	strd	r2, [fp, #-92]	; 0xffffffa4
   12698:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1269c:	mov	r3, r3
   126a0:	str	r3, [fp, #-252]	; 0xffffff04
   126a4:	mov	r3, #0
   126a8:	str	r3, [fp, #-248]	; 0xffffff08
   126ac:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   126b0:	ldrd	r0, [fp, #-252]	; 0xffffff04
   126b4:	adds	r0, r0, r2
   126b8:	adc	r1, r1, r3
   126bc:	mov	r2, r0
   126c0:	mov	r3, r1
   126c4:	strd	r2, [fp, #-164]	; 0xffffff5c
   126c8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   126cc:	mov	r3, r2
   126d0:	str	r3, [fp, #-256]	; 0xffffff00
   126d4:	mov	r3, #0
   126d8:	str	r3, [fp, #-260]	; 0xfffffefc
   126dc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   126e0:	mvn	r0, #0
   126e4:	mov	r1, #0
   126e8:	and	r2, r2, r0
   126ec:	and	r3, r3, r1
   126f0:	sub	r1, fp, #260	; 0x104
   126f4:	ldrd	r0, [r1]
   126f8:	adds	r0, r0, r2
   126fc:	adc	r1, r1, r3
   12700:	mov	r2, r0
   12704:	mov	r3, r1
   12708:	strd	r2, [fp, #-172]	; 0xffffff54
   1270c:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   12710:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12714:	cmp	r1, r3
   12718:	cmpeq	r0, r2
   1271c:	bhi	127d4 <__assert_fail@plt+0x167c>
   12720:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   12724:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   12728:	subs	r2, r0, r2
   1272c:	sbc	r3, r1, r3
   12730:	strd	r2, [fp, #-164]	; 0xffffff5c
   12734:	ldr	r2, [pc, #1620]	; 12d90 <__assert_fail@plt+0x1c38>
   12738:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1273c:	lsl	r3, r3, #4
   12740:	add	r3, r2, r3
   12744:	ldrd	r2, [r3]
   12748:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1274c:	mul	r0, r3, r1
   12750:	ldr	r1, [fp, #-160]	; 0xffffff60
   12754:	mul	r1, r2, r1
   12758:	add	r1, r0, r1
   1275c:	ldr	r0, [fp, #-164]	; 0xffffff5c
   12760:	umull	r2, r3, r0, r2
   12764:	add	r1, r1, r3
   12768:	mov	r3, r1
   1276c:	strd	r2, [fp, #-180]	; 0xffffff4c
   12770:	strd	r2, [fp, #-180]	; 0xffffff4c
   12774:	ldr	r2, [pc, #1556]	; 12d90 <__assert_fail@plt+0x1c38>
   12778:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1277c:	lsl	r3, r3, #4
   12780:	add	r3, r2, r3
   12784:	add	r3, r3, #8
   12788:	ldrd	r0, [r3]
   1278c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   12790:	cmp	r1, r3
   12794:	cmpeq	r0, r2
   12798:	movcc	r3, #1
   1279c:	movcs	r3, #0
   127a0:	uxtb	r3, r3
   127a4:	cmp	r3, #0
   127a8:	bne	127dc <__assert_fail@plt+0x1684>
   127ac:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   127b0:	strd	r2, [fp, #-212]	; 0xffffff2c
   127b4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   127b8:	strd	r2, [fp, #4]
   127bc:	mov	r3, #1
   127c0:	str	r3, [sp]
   127c4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   127c8:	ldr	r0, [fp, #12]
   127cc:	bl	11bcc <__assert_fail@plt+0xa74>
   127d0:	b	124b8 <__assert_fail@plt+0x1360>
   127d4:	nop			; (mov r0, r0)
   127d8:	b	127e0 <__assert_fail@plt+0x1688>
   127dc:	nop			; (mov r0, r0)
   127e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   127e4:	add	r3, r3, #1
   127e8:	ldr	r2, [pc, #1444]	; 12d94 <__assert_fail@plt+0x1c3c>
   127ec:	ldrb	r3, [r2, r3]
   127f0:	uxtb	r2, r3
   127f4:	mov	r3, #0
   127f8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   127fc:	adds	r2, r2, r0
   12800:	adc	r3, r3, r1
   12804:	strd	r2, [fp, #-76]	; 0xffffffb4
   12808:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1280c:	add	r3, r3, #1
   12810:	str	r3, [fp, #-80]	; 0xffffffb0
   12814:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12818:	orrs	r3, r2, r3
   1281c:	beq	1282c <__assert_fail@plt+0x16d4>
   12820:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12824:	cmp	r3, #668	; 0x29c
   12828:	bcc	124b8 <__assert_fail@plt+0x1360>
   1282c:	ldr	r3, [fp, #-200]	; 0xffffff38
   12830:	cmp	r3, #0
   12834:	beq	12d68 <__assert_fail@plt+0x1c10>
   12838:	ldr	r1, [fp, #-200]	; 0xffffff38
   1283c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12840:	strd	r2, [r1]
   12844:	b	12d68 <__assert_fail@plt+0x1c10>
   12848:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1284c:	lsl	r3, r3, #4
   12850:	ldr	r2, [pc, #1336]	; 12d90 <__assert_fail@plt+0x1c38>
   12854:	add	r3, r3, r2
   12858:	str	r3, [fp, #-184]	; 0xffffff48
   1285c:	ldr	r3, [fp, #-184]	; 0xffffff48
   12860:	ldrd	r2, [r3]
   12864:	ldr	r1, [fp, #4]
   12868:	mul	r0, r3, r1
   1286c:	ldr	r1, [fp, #8]
   12870:	mul	r1, r2, r1
   12874:	add	r1, r0, r1
   12878:	ldr	r0, [fp, #4]
   1287c:	umull	r2, r3, r0, r2
   12880:	add	r1, r1, r3
   12884:	mov	r3, r1
   12888:	strd	r2, [fp, #-196]	; 0xffffff3c
   1288c:	strd	r2, [fp, #-196]	; 0xffffff3c
   12890:	ldr	r3, [fp, #-184]	; 0xffffff48
   12894:	ldrd	r0, [r3, #8]
   12898:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1289c:	cmp	r1, r3
   128a0:	cmpeq	r0, r2
   128a4:	movcc	r3, #1
   128a8:	movcs	r3, #0
   128ac:	uxtb	r3, r3
   128b0:	cmp	r3, #0
   128b4:	beq	128bc <__assert_fail@plt+0x1764>
   128b8:	b	128e8 <__assert_fail@plt+0x1790>
   128bc:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   128c0:	strd	r2, [fp, #4]
   128c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   128c8:	add	r3, r3, #1
   128cc:	mov	r2, #0
   128d0:	str	r2, [sp, #4]
   128d4:	str	r3, [sp]
   128d8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   128dc:	ldr	r0, [fp, #12]
   128e0:	bl	12248 <__assert_fail@plt+0x10f0>
   128e4:	b	1285c <__assert_fail@plt+0x1704>
   128e8:	ldr	r3, [fp, #-184]	; 0xffffff48
   128ec:	add	r3, r3, #16
   128f0:	ldrd	r2, [r3]
   128f4:	ldr	r1, [fp, #4]
   128f8:	mul	r0, r3, r1
   128fc:	ldr	r1, [fp, #8]
   12900:	mul	r1, r2, r1
   12904:	add	r1, r0, r1
   12908:	ldr	r0, [fp, #4]
   1290c:	umull	r2, r3, r0, r2
   12910:	add	r1, r1, r3
   12914:	mov	r3, r1
   12918:	strd	r2, [fp, #-196]	; 0xffffff3c
   1291c:	strd	r2, [fp, #-196]	; 0xffffff3c
   12920:	ldr	r3, [fp, #-184]	; 0xffffff48
   12924:	add	r3, r3, #16
   12928:	ldrd	r0, [r3, #8]
   1292c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12930:	cmp	r1, r3
   12934:	cmpeq	r0, r2
   12938:	movcc	r3, #1
   1293c:	movcs	r3, #0
   12940:	uxtb	r3, r3
   12944:	cmp	r3, #0
   12948:	beq	12950 <__assert_fail@plt+0x17f8>
   1294c:	b	1297c <__assert_fail@plt+0x1824>
   12950:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12954:	strd	r2, [fp, #4]
   12958:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1295c:	add	r3, r3, #1
   12960:	mov	r2, #1
   12964:	str	r2, [sp, #4]
   12968:	str	r3, [sp]
   1296c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12970:	ldr	r0, [fp, #12]
   12974:	bl	12248 <__assert_fail@plt+0x10f0>
   12978:	b	128e8 <__assert_fail@plt+0x1790>
   1297c:	ldr	r3, [fp, #-184]	; 0xffffff48
   12980:	add	r3, r3, #32
   12984:	ldrd	r2, [r3]
   12988:	ldr	r1, [fp, #4]
   1298c:	mul	r0, r3, r1
   12990:	ldr	r1, [fp, #8]
   12994:	mul	r1, r2, r1
   12998:	add	r1, r0, r1
   1299c:	ldr	r0, [fp, #4]
   129a0:	umull	r2, r3, r0, r2
   129a4:	add	r1, r1, r3
   129a8:	mov	r3, r1
   129ac:	strd	r2, [fp, #-196]	; 0xffffff3c
   129b0:	strd	r2, [fp, #-196]	; 0xffffff3c
   129b4:	ldr	r3, [fp, #-184]	; 0xffffff48
   129b8:	add	r3, r3, #32
   129bc:	ldrd	r0, [r3, #8]
   129c0:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   129c4:	cmp	r1, r3
   129c8:	cmpeq	r0, r2
   129cc:	movcc	r3, #1
   129d0:	movcs	r3, #0
   129d4:	uxtb	r3, r3
   129d8:	cmp	r3, #0
   129dc:	beq	129e4 <__assert_fail@plt+0x188c>
   129e0:	b	12a10 <__assert_fail@plt+0x18b8>
   129e4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   129e8:	strd	r2, [fp, #4]
   129ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   129f0:	add	r3, r3, #1
   129f4:	mov	r2, #2
   129f8:	str	r2, [sp, #4]
   129fc:	str	r3, [sp]
   12a00:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12a04:	ldr	r0, [fp, #12]
   12a08:	bl	12248 <__assert_fail@plt+0x10f0>
   12a0c:	b	1297c <__assert_fail@plt+0x1824>
   12a10:	ldr	r3, [fp, #-184]	; 0xffffff48
   12a14:	add	r3, r3, #48	; 0x30
   12a18:	ldrd	r2, [r3]
   12a1c:	ldr	r1, [fp, #4]
   12a20:	mul	r0, r3, r1
   12a24:	ldr	r1, [fp, #8]
   12a28:	mul	r1, r2, r1
   12a2c:	add	r1, r0, r1
   12a30:	ldr	r0, [fp, #4]
   12a34:	umull	r2, r3, r0, r2
   12a38:	add	r1, r1, r3
   12a3c:	mov	r3, r1
   12a40:	strd	r2, [fp, #-196]	; 0xffffff3c
   12a44:	strd	r2, [fp, #-196]	; 0xffffff3c
   12a48:	ldr	r3, [fp, #-184]	; 0xffffff48
   12a4c:	add	r3, r3, #48	; 0x30
   12a50:	ldrd	r0, [r3, #8]
   12a54:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12a58:	cmp	r1, r3
   12a5c:	cmpeq	r0, r2
   12a60:	movcc	r3, #1
   12a64:	movcs	r3, #0
   12a68:	uxtb	r3, r3
   12a6c:	cmp	r3, #0
   12a70:	beq	12a78 <__assert_fail@plt+0x1920>
   12a74:	b	12aa4 <__assert_fail@plt+0x194c>
   12a78:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12a7c:	strd	r2, [fp, #4]
   12a80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a84:	add	r3, r3, #1
   12a88:	mov	r2, #3
   12a8c:	str	r2, [sp, #4]
   12a90:	str	r3, [sp]
   12a94:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12a98:	ldr	r0, [fp, #12]
   12a9c:	bl	12248 <__assert_fail@plt+0x10f0>
   12aa0:	b	12a10 <__assert_fail@plt+0x18b8>
   12aa4:	ldr	r3, [fp, #-184]	; 0xffffff48
   12aa8:	add	r3, r3, #64	; 0x40
   12aac:	ldrd	r2, [r3]
   12ab0:	ldr	r1, [fp, #4]
   12ab4:	mul	r0, r3, r1
   12ab8:	ldr	r1, [fp, #8]
   12abc:	mul	r1, r2, r1
   12ac0:	add	r1, r0, r1
   12ac4:	ldr	r0, [fp, #4]
   12ac8:	umull	r2, r3, r0, r2
   12acc:	add	r1, r1, r3
   12ad0:	mov	r3, r1
   12ad4:	strd	r2, [fp, #-196]	; 0xffffff3c
   12ad8:	strd	r2, [fp, #-196]	; 0xffffff3c
   12adc:	ldr	r3, [fp, #-184]	; 0xffffff48
   12ae0:	add	r3, r3, #64	; 0x40
   12ae4:	ldrd	r0, [r3, #8]
   12ae8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12aec:	cmp	r1, r3
   12af0:	cmpeq	r0, r2
   12af4:	movcc	r3, #1
   12af8:	movcs	r3, #0
   12afc:	uxtb	r3, r3
   12b00:	cmp	r3, #0
   12b04:	beq	12b0c <__assert_fail@plt+0x19b4>
   12b08:	b	12b38 <__assert_fail@plt+0x19e0>
   12b0c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12b10:	strd	r2, [fp, #4]
   12b14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12b18:	add	r3, r3, #1
   12b1c:	mov	r2, #4
   12b20:	str	r2, [sp, #4]
   12b24:	str	r3, [sp]
   12b28:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12b2c:	ldr	r0, [fp, #12]
   12b30:	bl	12248 <__assert_fail@plt+0x10f0>
   12b34:	b	12aa4 <__assert_fail@plt+0x194c>
   12b38:	ldr	r3, [fp, #-184]	; 0xffffff48
   12b3c:	add	r3, r3, #80	; 0x50
   12b40:	ldrd	r2, [r3]
   12b44:	ldr	r1, [fp, #4]
   12b48:	mul	r0, r3, r1
   12b4c:	ldr	r1, [fp, #8]
   12b50:	mul	r1, r2, r1
   12b54:	add	r1, r0, r1
   12b58:	ldr	r0, [fp, #4]
   12b5c:	umull	r2, r3, r0, r2
   12b60:	add	r1, r1, r3
   12b64:	mov	r3, r1
   12b68:	strd	r2, [fp, #-196]	; 0xffffff3c
   12b6c:	strd	r2, [fp, #-196]	; 0xffffff3c
   12b70:	ldr	r3, [fp, #-184]	; 0xffffff48
   12b74:	add	r3, r3, #80	; 0x50
   12b78:	ldrd	r0, [r3, #8]
   12b7c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12b80:	cmp	r1, r3
   12b84:	cmpeq	r0, r2
   12b88:	movcc	r3, #1
   12b8c:	movcs	r3, #0
   12b90:	uxtb	r3, r3
   12b94:	cmp	r3, #0
   12b98:	beq	12ba0 <__assert_fail@plt+0x1a48>
   12b9c:	b	12bcc <__assert_fail@plt+0x1a74>
   12ba0:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12ba4:	strd	r2, [fp, #4]
   12ba8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12bac:	add	r3, r3, #1
   12bb0:	mov	r2, #5
   12bb4:	str	r2, [sp, #4]
   12bb8:	str	r3, [sp]
   12bbc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12bc0:	ldr	r0, [fp, #12]
   12bc4:	bl	12248 <__assert_fail@plt+0x10f0>
   12bc8:	b	12b38 <__assert_fail@plt+0x19e0>
   12bcc:	ldr	r3, [fp, #-184]	; 0xffffff48
   12bd0:	add	r3, r3, #96	; 0x60
   12bd4:	ldrd	r2, [r3]
   12bd8:	ldr	r1, [fp, #4]
   12bdc:	mul	r0, r3, r1
   12be0:	ldr	r1, [fp, #8]
   12be4:	mul	r1, r2, r1
   12be8:	add	r1, r0, r1
   12bec:	ldr	r0, [fp, #4]
   12bf0:	umull	r2, r3, r0, r2
   12bf4:	add	r1, r1, r3
   12bf8:	mov	r3, r1
   12bfc:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c00:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c04:	ldr	r3, [fp, #-184]	; 0xffffff48
   12c08:	add	r3, r3, #96	; 0x60
   12c0c:	ldrd	r0, [r3, #8]
   12c10:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12c14:	cmp	r1, r3
   12c18:	cmpeq	r0, r2
   12c1c:	movcc	r3, #1
   12c20:	movcs	r3, #0
   12c24:	uxtb	r3, r3
   12c28:	cmp	r3, #0
   12c2c:	beq	12c34 <__assert_fail@plt+0x1adc>
   12c30:	b	12c60 <__assert_fail@plt+0x1b08>
   12c34:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12c38:	strd	r2, [fp, #4]
   12c3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c40:	add	r3, r3, #1
   12c44:	mov	r2, #6
   12c48:	str	r2, [sp, #4]
   12c4c:	str	r3, [sp]
   12c50:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12c54:	ldr	r0, [fp, #12]
   12c58:	bl	12248 <__assert_fail@plt+0x10f0>
   12c5c:	b	12bcc <__assert_fail@plt+0x1a74>
   12c60:	ldr	r3, [fp, #-184]	; 0xffffff48
   12c64:	add	r3, r3, #112	; 0x70
   12c68:	ldrd	r2, [r3]
   12c6c:	ldr	r1, [fp, #4]
   12c70:	mul	r0, r3, r1
   12c74:	ldr	r1, [fp, #8]
   12c78:	mul	r1, r2, r1
   12c7c:	add	r1, r0, r1
   12c80:	ldr	r0, [fp, #4]
   12c84:	umull	r2, r3, r0, r2
   12c88:	add	r1, r1, r3
   12c8c:	mov	r3, r1
   12c90:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c94:	strd	r2, [fp, #-196]	; 0xffffff3c
   12c98:	ldr	r3, [fp, #-184]	; 0xffffff48
   12c9c:	add	r3, r3, #112	; 0x70
   12ca0:	ldrd	r0, [r3, #8]
   12ca4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12ca8:	cmp	r1, r3
   12cac:	cmpeq	r0, r2
   12cb0:	movcc	r3, #1
   12cb4:	movcs	r3, #0
   12cb8:	uxtb	r3, r3
   12cbc:	cmp	r3, #0
   12cc0:	bne	12cf0 <__assert_fail@plt+0x1b98>
   12cc4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   12cc8:	strd	r2, [fp, #4]
   12ccc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12cd0:	add	r3, r3, #1
   12cd4:	mov	r2, #7
   12cd8:	str	r2, [sp, #4]
   12cdc:	str	r3, [sp]
   12ce0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12ce4:	ldr	r0, [fp, #12]
   12ce8:	bl	12248 <__assert_fail@plt+0x10f0>
   12cec:	b	12c60 <__assert_fail@plt+0x1b08>
   12cf0:	nop			; (mov r0, r0)
   12cf4:	ldr	r2, [pc, #156]	; 12d98 <__assert_fail@plt+0x1c40>
   12cf8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12cfc:	add	r3, r2, r3
   12d00:	ldrb	r3, [r3]
   12d04:	uxtb	r2, r3
   12d08:	mov	r3, #0
   12d0c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12d10:	adds	r2, r2, r0
   12d14:	adc	r3, r3, r1
   12d18:	strd	r2, [fp, #-76]	; 0xffffffb4
   12d1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d20:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12d24:	mul	r2, r2, r3
   12d28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12d2c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12d30:	mul	r3, r1, r3
   12d34:	add	r1, r2, r3
   12d38:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12d3c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12d40:	umull	r2, r3, r2, r3
   12d44:	add	r1, r1, r3
   12d48:	mov	r3, r1
   12d4c:	ldrd	r0, [fp, #4]
   12d50:	cmp	r3, r1
   12d54:	cmpeq	r2, r0
   12d58:	bhi	12d78 <__assert_fail@plt+0x1c20>
   12d5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d60:	add	r3, r3, #8
   12d64:	str	r3, [fp, #-80]	; 0xffffffb0
   12d68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d6c:	cmp	r3, #668	; 0x29c
   12d70:	bcc	12848 <__assert_fail@plt+0x16f0>
   12d74:	b	12d7c <__assert_fail@plt+0x1c24>
   12d78:	nop			; (mov r0, r0)
   12d7c:	ldrd	r2, [fp, #4]
   12d80:	mov	r0, r2
   12d84:	mov	r1, r3
   12d88:	sub	sp, fp, #28
   12d8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d90:	andeq	r0, r3, r8, lsl #22
   12d94:			; <UNDEFINED> instruction: 0x000305bc
   12d98:	andeq	r0, r3, r0, ror #16
   12d9c:	push	{fp, lr}
   12da0:	add	fp, sp, #4
   12da4:	sub	sp, sp, #32
   12da8:	str	r0, [fp, #-32]	; 0xffffffe0
   12dac:	str	r1, [fp, #-36]	; 0xffffffdc
   12db0:	ldr	r3, [pc, #300]	; 12ee4 <__assert_fail@plt+0x1d8c>
   12db4:	ldrb	r3, [r3]
   12db8:	cmp	r3, #0
   12dbc:	beq	12dd8 <__assert_fail@plt+0x1c80>
   12dc0:	ldr	r3, [pc, #288]	; 12ee8 <__assert_fail@plt+0x1d90>
   12dc4:	ldr	r3, [r3]
   12dc8:	mov	r2, #17
   12dcc:	mov	r1, #1
   12dd0:	ldr	r0, [pc, #276]	; 12eec <__assert_fail@plt+0x1d94>
   12dd4:	bl	10f84 <fwrite@plt>
   12dd8:	sub	r3, fp, #24
   12ddc:	mov	r0, r3
   12de0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   12de4:	mov	r1, #0
   12de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dec:	bl	26464 <__assert_fail@plt+0x1530c>
   12df0:	str	r0, [fp, #-8]
   12df4:	ldr	r2, [fp, #-8]
   12df8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e00:	bl	21ed8 <__assert_fail@plt+0x10d80>
   12e04:	b	12e20 <__assert_fail@plt+0x1cc8>
   12e08:	mov	r1, #2
   12e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e10:	bl	121fc <__assert_fail@plt+0x10a4>
   12e14:	ldr	r3, [fp, #-8]
   12e18:	sub	r3, r3, #1
   12e1c:	str	r3, [fp, #-8]
   12e20:	ldr	r3, [fp, #-8]
   12e24:	cmp	r3, #0
   12e28:	bne	12e08 <__assert_fail@plt+0x1cb0>
   12e2c:	mov	r3, #3
   12e30:	str	r3, [fp, #-8]
   12e34:	mov	r3, #1
   12e38:	str	r3, [fp, #-12]
   12e3c:	b	12ec0 <__assert_fail@plt+0x1d68>
   12e40:	ldr	r1, [fp, #-8]
   12e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e48:	bl	225ec <__assert_fail@plt+0x11494>
   12e4c:	mov	r3, r0
   12e50:	cmp	r3, #0
   12e54:	bne	12ea4 <__assert_fail@plt+0x1d4c>
   12e58:	ldr	r3, [fp, #-12]
   12e5c:	add	r2, r3, #1
   12e60:	str	r2, [fp, #-12]
   12e64:	ldr	r2, [pc, #132]	; 12ef0 <__assert_fail@plt+0x1d98>
   12e68:	ldrb	r3, [r2, r3]
   12e6c:	mov	r2, r3
   12e70:	ldr	r3, [fp, #-8]
   12e74:	add	r3, r3, r2
   12e78:	str	r3, [fp, #-8]
   12e7c:	ldr	r3, [fp, #-8]
   12e80:	ldr	r2, [fp, #-8]
   12e84:	mul	r3, r2, r3
   12e88:	mov	r1, r3
   12e8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e90:	bl	204fc <__assert_fail@plt+0xf3a4>
   12e94:	mov	r3, r0
   12e98:	cmp	r3, #0
   12e9c:	bge	12ec0 <__assert_fail@plt+0x1d68>
   12ea0:	b	12ecc <__assert_fail@plt+0x1d74>
   12ea4:	ldr	r2, [fp, #-8]
   12ea8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12eb0:	bl	22364 <__assert_fail@plt+0x1120c>
   12eb4:	ldr	r1, [fp, #-8]
   12eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ebc:	bl	121fc <__assert_fail@plt+0x10a4>
   12ec0:	ldr	r3, [fp, #-12]
   12ec4:	cmp	r3, #668	; 0x29c
   12ec8:	bls	12e40 <__assert_fail@plt+0x1ce8>
   12ecc:	sub	r3, fp, #24
   12ed0:	mov	r0, r3
   12ed4:	bl	1f3e0 <__assert_fail@plt+0xe288>
   12ed8:	nop			; (mov r0, r0)
   12edc:	sub	sp, fp, #4
   12ee0:	pop	{fp, pc}
   12ee4:	muleq	r4, r4, r1
   12ee8:	andeq	r5, r4, r0, lsl #3
   12eec:	andeq	r3, r3, r8, lsr r5
   12ef0:			; <UNDEFINED> instruction: 0x000305bc
   12ef4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ef8:	add	fp, sp, #28
   12efc:	sub	sp, sp, #248	; 0xf8
   12f00:	strd	r0, [fp, #-212]	; 0xffffff2c
   12f04:	strd	r2, [fp, #-220]	; 0xffffff24
   12f08:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   12f0c:	strd	r2, [fp, #-60]	; 0xffffffc4
   12f10:	ldrd	r2, [fp, #-220]	; 0xffffff24
   12f14:	strd	r2, [fp, #-68]	; 0xffffffbc
   12f18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12f1c:	str	r3, [fp, #-72]	; 0xffffffb8
   12f20:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   12f24:	mov	r4, r3
   12f28:	mov	r5, #0
   12f2c:	mov	r3, r4
   12f30:	str	r3, [fp, #-76]	; 0xffffffb4
   12f34:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12f38:	str	r3, [fp, #-80]	; 0xffffffb0
   12f3c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12f40:	mov	r6, r3
   12f44:	mov	r7, #0
   12f48:	mov	r3, r6
   12f4c:	str	r3, [fp, #-84]	; 0xffffffac
   12f50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f54:	mov	r0, r3
   12f58:	mov	r1, #0
   12f5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12f60:	mov	r2, r3
   12f64:	mov	r3, #0
   12f68:	mul	lr, r2, r1
   12f6c:	mul	ip, r0, r3
   12f70:	add	ip, lr, ip
   12f74:	umull	r2, r3, r0, r2
   12f78:	add	r1, ip, r3
   12f7c:	mov	r3, r1
   12f80:	strd	r2, [fp, #-92]	; 0xffffffa4
   12f84:	strd	r2, [fp, #-92]	; 0xffffffa4
   12f88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f8c:	mov	r0, r3
   12f90:	mov	r1, #0
   12f94:	ldr	r3, [fp, #-84]	; 0xffffffac
   12f98:	mov	r2, r3
   12f9c:	mov	r3, #0
   12fa0:	mul	lr, r2, r1
   12fa4:	mul	ip, r0, r3
   12fa8:	add	ip, lr, ip
   12fac:	umull	r2, r3, r0, r2
   12fb0:	add	r1, ip, r3
   12fb4:	mov	r3, r1
   12fb8:	strd	r2, [fp, #-100]	; 0xffffff9c
   12fbc:	strd	r2, [fp, #-100]	; 0xffffff9c
   12fc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12fc4:	mov	r0, r3
   12fc8:	mov	r1, #0
   12fcc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12fd0:	mov	r2, r3
   12fd4:	mov	r3, #0
   12fd8:	mul	lr, r2, r1
   12fdc:	mul	ip, r0, r3
   12fe0:	add	ip, lr, ip
   12fe4:	umull	r2, r3, r0, r2
   12fe8:	add	r1, ip, r3
   12fec:	mov	r3, r1
   12ff0:	strd	r2, [fp, #-108]	; 0xffffff94
   12ff4:	strd	r2, [fp, #-108]	; 0xffffff94
   12ff8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12ffc:	mov	r0, r3
   13000:	mov	r1, #0
   13004:	ldr	r3, [fp, #-84]	; 0xffffffac
   13008:	mov	r2, r3
   1300c:	mov	r3, #0
   13010:	mul	lr, r2, r1
   13014:	mul	ip, r0, r3
   13018:	add	ip, lr, ip
   1301c:	umull	r2, r3, r0, r2
   13020:	add	r1, ip, r3
   13024:	mov	r3, r1
   13028:	strd	r2, [fp, #-44]	; 0xffffffd4
   1302c:	strd	r2, [fp, #-44]	; 0xffffffd4
   13030:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13034:	mov	r8, r3
   13038:	mov	r9, #0
   1303c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   13040:	adds	r2, r2, r8
   13044:	adc	r3, r3, r9
   13048:	strd	r2, [fp, #-100]	; 0xffffff9c
   1304c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   13050:	ldrd	r2, [fp, #-108]	; 0xffffff94
   13054:	adds	r2, r2, r0
   13058:	adc	r3, r3, r1
   1305c:	strd	r2, [fp, #-100]	; 0xffffff9c
   13060:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   13064:	ldrd	r2, [fp, #-108]	; 0xffffff94
   13068:	cmp	r1, r3
   1306c:	cmpeq	r0, r2
   13070:	bcs	13084 <__assert_fail@plt+0x1f2c>
   13074:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13078:	adds	r2, r2, #0
   1307c:	adc	r3, r3, #1
   13080:	strd	r2, [fp, #-44]	; 0xffffffd4
   13084:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   13088:	mov	r3, r3
   1308c:	str	r3, [fp, #-228]	; 0xffffff1c
   13090:	mov	r3, #0
   13094:	str	r3, [fp, #-224]	; 0xffffff20
   13098:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1309c:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   130a0:	adds	r0, r0, r2
   130a4:	adc	r1, r1, r3
   130a8:	mov	r2, r0
   130ac:	mov	r3, r1
   130b0:	strd	r2, [fp, #-116]	; 0xffffff8c
   130b4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   130b8:	mov	r3, r2
   130bc:	str	r3, [fp, #-232]	; 0xffffff18
   130c0:	mov	r3, #0
   130c4:	str	r3, [fp, #-236]	; 0xffffff14
   130c8:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   130cc:	mvn	r2, #0
   130d0:	mov	r3, #0
   130d4:	and	r2, r2, r0
   130d8:	and	r3, r3, r1
   130dc:	ldrd	r0, [fp, #-236]	; 0xffffff14
   130e0:	adds	r0, r0, r2
   130e4:	adc	r1, r1, r3
   130e8:	mov	r2, r0
   130ec:	mov	r3, r1
   130f0:	strd	r2, [fp, #-124]	; 0xffffff84
   130f4:	ldr	r3, [fp, #-120]	; 0xffffff88
   130f8:	ldr	r2, [fp, #12]
   130fc:	mul	r2, r2, r3
   13100:	ldr	r3, [fp, #16]
   13104:	ldr	r1, [fp, #-124]	; 0xffffff84
   13108:	mul	r3, r1, r3
   1310c:	add	r1, r2, r3
   13110:	ldr	r2, [fp, #-124]	; 0xffffff84
   13114:	ldr	r3, [fp, #12]
   13118:	umull	r2, r3, r2, r3
   1311c:	add	r1, r1, r3
   13120:	mov	r3, r1
   13124:	strd	r2, [fp, #-132]	; 0xffffff7c
   13128:	strd	r2, [fp, #-132]	; 0xffffff7c
   1312c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13130:	strd	r2, [fp, #-140]	; 0xffffff74
   13134:	ldrd	r2, [fp, #4]
   13138:	strd	r2, [fp, #-148]	; 0xffffff6c
   1313c:	ldr	r3, [fp, #-140]	; 0xffffff74
   13140:	str	r3, [fp, #-152]	; 0xffffff68
   13144:	ldrd	r2, [fp, #-140]	; 0xffffff74
   13148:	mov	r3, r3
   1314c:	str	r3, [fp, #-244]	; 0xffffff0c
   13150:	mov	r3, #0
   13154:	str	r3, [fp, #-240]	; 0xffffff10
   13158:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1315c:	str	r3, [fp, #-156]	; 0xffffff64
   13160:	ldr	r3, [fp, #-148]	; 0xffffff6c
   13164:	str	r3, [fp, #-160]	; 0xffffff60
   13168:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1316c:	mov	r3, r3
   13170:	str	r3, [fp, #-252]	; 0xffffff04
   13174:	mov	r3, #0
   13178:	str	r3, [fp, #-248]	; 0xffffff08
   1317c:	ldr	r3, [fp, #-252]	; 0xffffff04
   13180:	str	r3, [fp, #-164]	; 0xffffff5c
   13184:	ldr	r3, [fp, #-152]	; 0xffffff68
   13188:	mov	r0, r3
   1318c:	mov	r1, #0
   13190:	ldr	r3, [fp, #-160]	; 0xffffff60
   13194:	mov	r2, r3
   13198:	mov	r3, #0
   1319c:	mul	lr, r2, r1
   131a0:	mul	ip, r0, r3
   131a4:	add	ip, lr, ip
   131a8:	umull	r2, r3, r0, r2
   131ac:	add	r1, ip, r3
   131b0:	mov	r3, r1
   131b4:	strd	r2, [fp, #-172]	; 0xffffff54
   131b8:	strd	r2, [fp, #-172]	; 0xffffff54
   131bc:	ldr	r3, [fp, #-152]	; 0xffffff68
   131c0:	mov	r0, r3
   131c4:	mov	r1, #0
   131c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   131cc:	mov	r2, r3
   131d0:	mov	r3, #0
   131d4:	mul	lr, r2, r1
   131d8:	mul	ip, r0, r3
   131dc:	add	ip, lr, ip
   131e0:	umull	r2, r3, r0, r2
   131e4:	add	r1, ip, r3
   131e8:	mov	r3, r1
   131ec:	strd	r2, [fp, #-180]	; 0xffffff4c
   131f0:	strd	r2, [fp, #-180]	; 0xffffff4c
   131f4:	ldr	r3, [fp, #-156]	; 0xffffff64
   131f8:	mov	r0, r3
   131fc:	mov	r1, #0
   13200:	ldr	r3, [fp, #-160]	; 0xffffff60
   13204:	mov	r2, r3
   13208:	mov	r3, #0
   1320c:	mul	lr, r2, r1
   13210:	mul	ip, r0, r3
   13214:	add	ip, lr, ip
   13218:	umull	r2, r3, r0, r2
   1321c:	add	r1, ip, r3
   13220:	mov	r3, r1
   13224:	strd	r2, [fp, #-188]	; 0xffffff44
   13228:	strd	r2, [fp, #-188]	; 0xffffff44
   1322c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13230:	mov	r0, r3
   13234:	mov	r1, #0
   13238:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1323c:	mov	r2, r3
   13240:	mov	r3, #0
   13244:	mul	lr, r2, r1
   13248:	mul	ip, r0, r3
   1324c:	add	ip, lr, ip
   13250:	umull	r2, r3, r0, r2
   13254:	add	r1, ip, r3
   13258:	mov	r3, r1
   1325c:	strd	r2, [fp, #-52]	; 0xffffffcc
   13260:	strd	r2, [fp, #-52]	; 0xffffffcc
   13264:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13268:	mov	r3, r3
   1326c:	str	r3, [fp, #-260]	; 0xfffffefc
   13270:	mov	r3, #0
   13274:	str	r3, [fp, #-256]	; 0xffffff00
   13278:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1327c:	sub	r1, fp, #260	; 0x104
   13280:	ldrd	r0, [r1]
   13284:	adds	r0, r0, r2
   13288:	adc	r1, r1, r3
   1328c:	mov	r2, r0
   13290:	mov	r3, r1
   13294:	strd	r2, [fp, #-180]	; 0xffffff4c
   13298:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   1329c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   132a0:	adds	r2, r2, r0
   132a4:	adc	r3, r3, r1
   132a8:	strd	r2, [fp, #-180]	; 0xffffff4c
   132ac:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   132b0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   132b4:	cmp	r1, r3
   132b8:	cmpeq	r0, r2
   132bc:	bcs	132d0 <__assert_fail@plt+0x2178>
   132c0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   132c4:	adds	r2, r2, #0
   132c8:	adc	r3, r3, #1
   132cc:	strd	r2, [fp, #-52]	; 0xffffffcc
   132d0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   132d4:	mov	r3, r3
   132d8:	str	r3, [fp, #-268]	; 0xfffffef4
   132dc:	mov	r3, #0
   132e0:	str	r3, [fp, #-264]	; 0xfffffef8
   132e4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   132e8:	sub	r1, fp, #268	; 0x10c
   132ec:	ldrd	r0, [r1]
   132f0:	adds	r0, r0, r2
   132f4:	adc	r1, r1, r3
   132f8:	mov	r2, r0
   132fc:	mov	r3, r1
   13300:	strd	r2, [fp, #-196]	; 0xffffff3c
   13304:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   13308:	mov	r3, r2
   1330c:	str	r3, [fp, #-272]	; 0xfffffef0
   13310:	mov	r3, #0
   13314:	str	r3, [fp, #-276]	; 0xfffffeec
   13318:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1331c:	mvn	r0, #0
   13320:	mov	r1, #0
   13324:	and	r2, r2, r0
   13328:	and	r3, r3, r1
   1332c:	sub	r1, fp, #276	; 0x114
   13330:	ldrd	r0, [r1]
   13334:	adds	r0, r0, r2
   13338:	adc	r1, r1, r3
   1333c:	mov	r2, r0
   13340:	mov	r3, r1
   13344:	strd	r2, [fp, #-204]	; 0xffffff34
   13348:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1334c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13350:	subs	r2, r0, r2
   13354:	sbc	r3, r1, r3
   13358:	strd	r2, [fp, #-36]	; 0xffffffdc
   1335c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   13360:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13364:	cmp	r1, r3
   13368:	cmpeq	r0, r2
   1336c:	bcs	13384 <__assert_fail@plt+0x222c>
   13370:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13374:	ldrd	r2, [fp, #4]
   13378:	adds	r2, r2, r0
   1337c:	adc	r3, r3, r1
   13380:	strd	r2, [fp, #-36]	; 0xffffffdc
   13384:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13388:	mov	r0, r2
   1338c:	mov	r1, r3
   13390:	sub	sp, fp, #28
   13394:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13398:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1339c:	add	fp, sp, #28
   133a0:	sub	sp, sp, #968	; 0x3c8
   133a4:	str	r0, [fp, #-688]	; 0xfffffd50
   133a8:	sub	r1, fp, #700	; 0x2bc
   133ac:	strd	r2, [r1]
   133b0:	ldrd	r2, [fp, #44]	; 0x2c
   133b4:	rsbs	r2, r2, #0
   133b8:	rsc	r3, r3, #0
   133bc:	strd	r2, [fp, #44]	; 0x2c
   133c0:	sub	r3, fp, #700	; 0x2bc
   133c4:	ldrd	r2, [r3]
   133c8:	cmp	r2, #0
   133cc:	sbcs	r3, r3, #0
   133d0:	bge	133e8 <__assert_fail@plt+0x2290>
   133d4:	ldr	r3, [pc, #84]	; 13430 <__assert_fail@plt+0x22d8>
   133d8:	ldr	r2, [pc, #84]	; 13434 <__assert_fail@plt+0x22dc>
   133dc:	ldr	r1, [pc, #84]	; 13438 <__assert_fail@plt+0x22e0>
   133e0:	ldr	r0, [pc, #84]	; 1343c <__assert_fail@plt+0x22e4>
   133e4:	bl	11158 <__assert_fail@plt>
   133e8:	ldrd	r2, [fp, #12]
   133ec:	cmp	r2, #0
   133f0:	sbcs	r3, r3, #0
   133f4:	bge	1340c <__assert_fail@plt+0x22b4>
   133f8:	ldr	r3, [pc, #48]	; 13430 <__assert_fail@plt+0x22d8>
   133fc:	ldr	r2, [pc, #60]	; 13440 <__assert_fail@plt+0x22e8>
   13400:	ldr	r1, [pc, #48]	; 13438 <__assert_fail@plt+0x22e0>
   13404:	ldr	r0, [pc, #56]	; 13444 <__assert_fail@plt+0x22ec>
   13408:	bl	11158 <__assert_fail@plt>
   1340c:	ldrd	r2, [fp, #28]
   13410:	cmp	r2, #0
   13414:	sbcs	r3, r3, #0
   13418:	bge	13450 <__assert_fail@plt+0x22f8>
   1341c:	ldr	r3, [pc, #12]	; 13430 <__assert_fail@plt+0x22d8>
   13420:	ldr	r2, [pc, #32]	; 13448 <__assert_fail@plt+0x22f0>
   13424:	ldr	r1, [pc, #12]	; 13438 <__assert_fail@plt+0x22e0>
   13428:	ldr	r0, [pc, #28]	; 1344c <__assert_fail@plt+0x22f4>
   1342c:	bl	11158 <__assert_fail@plt>
   13430:	andeq	r3, r3, r0, asr r9
   13434:	andeq	r0, r0, r1, ror #7
   13438:	andeq	r0, r3, r4, lsl #11
   1343c:	andeq	r3, r3, ip, asr #11
   13440:	andeq	r0, r0, r2, ror #7
   13444:	andeq	r3, r3, ip, ror #11
   13448:	andeq	r0, r0, r3, ror #7
   1344c:	andeq	r3, r3, ip, lsl #12
   13450:	ldrd	r2, [fp, #4]
   13454:	strd	r2, [fp, #-116]	; 0xffffff8c
   13458:	ldrd	r2, [fp, #20]
   1345c:	strd	r2, [fp, #-124]	; 0xffffff84
   13460:	ldr	r3, [fp, #-116]	; 0xffffff8c
   13464:	str	r3, [fp, #-128]	; 0xffffff80
   13468:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1346c:	mov	r4, r3
   13470:	mov	r5, #0
   13474:	mov	r3, r4
   13478:	str	r3, [fp, #-132]	; 0xffffff7c
   1347c:	ldr	r3, [fp, #-124]	; 0xffffff84
   13480:	str	r3, [fp, #-136]	; 0xffffff78
   13484:	ldrd	r2, [fp, #-124]	; 0xffffff84
   13488:	mov	r6, r3
   1348c:	mov	r7, #0
   13490:	mov	r3, r6
   13494:	str	r3, [fp, #-140]	; 0xffffff74
   13498:	ldr	r3, [fp, #-128]	; 0xffffff80
   1349c:	mov	r0, r3
   134a0:	mov	r1, #0
   134a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   134a8:	mov	r2, r3
   134ac:	mov	r3, #0
   134b0:	mul	lr, r2, r1
   134b4:	mul	ip, r0, r3
   134b8:	add	ip, lr, ip
   134bc:	umull	r2, r3, r0, r2
   134c0:	add	r1, ip, r3
   134c4:	mov	r3, r1
   134c8:	strd	r2, [fp, #-148]	; 0xffffff6c
   134cc:	strd	r2, [fp, #-148]	; 0xffffff6c
   134d0:	ldr	r3, [fp, #-128]	; 0xffffff80
   134d4:	mov	r0, r3
   134d8:	mov	r1, #0
   134dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   134e0:	mov	r2, r3
   134e4:	mov	r3, #0
   134e8:	mul	lr, r2, r1
   134ec:	mul	ip, r0, r3
   134f0:	add	ip, lr, ip
   134f4:	umull	r2, r3, r0, r2
   134f8:	add	r1, ip, r3
   134fc:	mov	r3, r1
   13500:	strd	r2, [fp, #-156]	; 0xffffff64
   13504:	strd	r2, [fp, #-156]	; 0xffffff64
   13508:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1350c:	mov	r0, r3
   13510:	mov	r1, #0
   13514:	ldr	r3, [fp, #-136]	; 0xffffff78
   13518:	mov	r2, r3
   1351c:	mov	r3, #0
   13520:	mul	lr, r2, r1
   13524:	mul	ip, r0, r3
   13528:	add	ip, lr, ip
   1352c:	umull	r2, r3, r0, r2
   13530:	add	r1, ip, r3
   13534:	mov	r3, r1
   13538:	strd	r2, [fp, #-164]	; 0xffffff5c
   1353c:	strd	r2, [fp, #-164]	; 0xffffff5c
   13540:	ldr	r3, [fp, #-132]	; 0xffffff7c
   13544:	mov	r0, r3
   13548:	mov	r1, #0
   1354c:	ldr	r3, [fp, #-140]	; 0xffffff74
   13550:	mov	r2, r3
   13554:	mov	r3, #0
   13558:	mul	lr, r2, r1
   1355c:	mul	ip, r0, r3
   13560:	add	ip, lr, ip
   13564:	umull	r2, r3, r0, r2
   13568:	add	r1, ip, r3
   1356c:	mov	r3, r1
   13570:	strd	r2, [fp, #-52]	; 0xffffffcc
   13574:	strd	r2, [fp, #-52]	; 0xffffffcc
   13578:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   1357c:	mov	r8, r3
   13580:	mov	r9, #0
   13584:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13588:	adds	r2, r2, r8
   1358c:	adc	r3, r3, r9
   13590:	strd	r2, [fp, #-156]	; 0xffffff64
   13594:	ldrd	r0, [fp, #-156]	; 0xffffff64
   13598:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   1359c:	adds	r2, r2, r0
   135a0:	adc	r3, r3, r1
   135a4:	strd	r2, [fp, #-156]	; 0xffffff64
   135a8:	ldrd	r0, [fp, #-156]	; 0xffffff64
   135ac:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   135b0:	cmp	r1, r3
   135b4:	cmpeq	r0, r2
   135b8:	bcs	135cc <__assert_fail@plt+0x2474>
   135bc:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   135c0:	adds	r2, r2, #0
   135c4:	adc	r3, r3, #1
   135c8:	strd	r2, [fp, #-52]	; 0xffffffcc
   135cc:	ldrd	r2, [fp, #-156]	; 0xffffff64
   135d0:	mov	r3, r3
   135d4:	str	r3, [fp, #-708]	; 0xfffffd3c
   135d8:	mov	r3, #0
   135dc:	str	r3, [fp, #-704]	; 0xfffffd40
   135e0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   135e4:	sub	r1, fp, #708	; 0x2c4
   135e8:	ldrd	r0, [r1]
   135ec:	adds	r0, r0, r2
   135f0:	adc	r1, r1, r3
   135f4:	mov	r2, r0
   135f8:	mov	r3, r1
   135fc:	strd	r2, [fp, #-172]	; 0xffffff54
   13600:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13604:	mov	r3, r2
   13608:	str	r3, [fp, #-712]	; 0xfffffd38
   1360c:	mov	r3, #0
   13610:	str	r3, [fp, #-716]	; 0xfffffd34
   13614:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   13618:	mvn	r2, #0
   1361c:	mov	r3, #0
   13620:	and	r2, r2, r0
   13624:	and	r3, r3, r1
   13628:	sub	r1, fp, #716	; 0x2cc
   1362c:	ldrd	r0, [r1]
   13630:	adds	r0, r0, r2
   13634:	adc	r1, r1, r3
   13638:	mov	r2, r0
   1363c:	mov	r3, r1
   13640:	strd	r2, [fp, #-180]	; 0xffffff4c
   13644:	ldrd	r2, [fp, #4]
   13648:	strd	r2, [fp, #-188]	; 0xffffff44
   1364c:	ldrd	r2, [fp, #12]
   13650:	strd	r2, [fp, #-196]	; 0xffffff3c
   13654:	ldr	r3, [fp, #-188]	; 0xffffff44
   13658:	str	r3, [fp, #-200]	; 0xffffff38
   1365c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   13660:	mov	r3, r3
   13664:	str	r3, [fp, #-724]	; 0xfffffd2c
   13668:	mov	r3, #0
   1366c:	str	r3, [fp, #-720]	; 0xfffffd30
   13670:	ldr	r3, [fp, #-724]	; 0xfffffd2c
   13674:	str	r3, [fp, #-204]	; 0xffffff34
   13678:	ldr	r3, [fp, #-196]	; 0xffffff3c
   1367c:	str	r3, [fp, #-208]	; 0xffffff30
   13680:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13684:	mov	r3, r3
   13688:	str	r3, [fp, #-732]	; 0xfffffd24
   1368c:	mov	r3, #0
   13690:	str	r3, [fp, #-728]	; 0xfffffd28
   13694:	ldr	r3, [fp, #-732]	; 0xfffffd24
   13698:	str	r3, [fp, #-212]	; 0xffffff2c
   1369c:	ldr	r3, [fp, #-200]	; 0xffffff38
   136a0:	mov	r0, r3
   136a4:	mov	r1, #0
   136a8:	ldr	r3, [fp, #-208]	; 0xffffff30
   136ac:	mov	r2, r3
   136b0:	mov	r3, #0
   136b4:	mul	lr, r2, r1
   136b8:	mul	ip, r0, r3
   136bc:	add	ip, lr, ip
   136c0:	umull	r2, r3, r0, r2
   136c4:	add	r1, ip, r3
   136c8:	mov	r3, r1
   136cc:	strd	r2, [fp, #-220]	; 0xffffff24
   136d0:	strd	r2, [fp, #-220]	; 0xffffff24
   136d4:	ldr	r3, [fp, #-200]	; 0xffffff38
   136d8:	mov	r0, r3
   136dc:	mov	r1, #0
   136e0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   136e4:	mov	r2, r3
   136e8:	mov	r3, #0
   136ec:	mul	lr, r2, r1
   136f0:	mul	ip, r0, r3
   136f4:	add	ip, lr, ip
   136f8:	umull	r2, r3, r0, r2
   136fc:	add	r1, ip, r3
   13700:	mov	r3, r1
   13704:	strd	r2, [fp, #-228]	; 0xffffff1c
   13708:	strd	r2, [fp, #-228]	; 0xffffff1c
   1370c:	ldr	r3, [fp, #-204]	; 0xffffff34
   13710:	mov	r0, r3
   13714:	mov	r1, #0
   13718:	ldr	r3, [fp, #-208]	; 0xffffff30
   1371c:	mov	r2, r3
   13720:	mov	r3, #0
   13724:	mul	lr, r2, r1
   13728:	mul	ip, r0, r3
   1372c:	add	ip, lr, ip
   13730:	umull	r2, r3, r0, r2
   13734:	add	r1, ip, r3
   13738:	mov	r3, r1
   1373c:	strd	r2, [fp, #-236]	; 0xffffff14
   13740:	strd	r2, [fp, #-236]	; 0xffffff14
   13744:	ldr	r3, [fp, #-204]	; 0xffffff34
   13748:	mov	r0, r3
   1374c:	mov	r1, #0
   13750:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13754:	mov	r2, r3
   13758:	mov	r3, #0
   1375c:	mul	lr, r2, r1
   13760:	mul	ip, r0, r3
   13764:	add	ip, lr, ip
   13768:	umull	r2, r3, r0, r2
   1376c:	add	r1, ip, r3
   13770:	mov	r3, r1
   13774:	strd	r2, [fp, #-60]	; 0xffffffc4
   13778:	strd	r2, [fp, #-60]	; 0xffffffc4
   1377c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   13780:	mov	r3, r3
   13784:	str	r3, [fp, #-740]	; 0xfffffd1c
   13788:	mov	r3, #0
   1378c:	str	r3, [fp, #-736]	; 0xfffffd20
   13790:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   13794:	sub	r1, fp, #740	; 0x2e4
   13798:	ldrd	r0, [r1]
   1379c:	adds	r0, r0, r2
   137a0:	adc	r1, r1, r3
   137a4:	mov	r2, r0
   137a8:	mov	r3, r1
   137ac:	strd	r2, [fp, #-228]	; 0xffffff1c
   137b0:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   137b4:	ldrd	r2, [fp, #-236]	; 0xffffff14
   137b8:	adds	r2, r2, r0
   137bc:	adc	r3, r3, r1
   137c0:	strd	r2, [fp, #-228]	; 0xffffff1c
   137c4:	ldrd	r0, [fp, #-228]	; 0xffffff1c
   137c8:	ldrd	r2, [fp, #-236]	; 0xffffff14
   137cc:	cmp	r1, r3
   137d0:	cmpeq	r0, r2
   137d4:	bcs	137e8 <__assert_fail@plt+0x2690>
   137d8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   137dc:	adds	r2, r2, #0
   137e0:	adc	r3, r3, #1
   137e4:	strd	r2, [fp, #-60]	; 0xffffffc4
   137e8:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   137ec:	mov	r3, r3
   137f0:	str	r3, [fp, #-748]	; 0xfffffd14
   137f4:	mov	r3, #0
   137f8:	str	r3, [fp, #-744]	; 0xfffffd18
   137fc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13800:	sub	r1, fp, #748	; 0x2ec
   13804:	ldrd	r0, [r1]
   13808:	adds	r0, r0, r2
   1380c:	adc	r1, r1, r3
   13810:	mov	r2, r0
   13814:	mov	r3, r1
   13818:	strd	r2, [fp, #-36]	; 0xffffffdc
   1381c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   13820:	mov	r3, r2
   13824:	str	r3, [fp, #-752]	; 0xfffffd10
   13828:	mov	r3, #0
   1382c:	str	r3, [fp, #-756]	; 0xfffffd0c
   13830:	ldrd	r0, [fp, #-220]	; 0xffffff24
   13834:	mvn	r2, #0
   13838:	mov	r3, #0
   1383c:	and	r2, r2, r0
   13840:	and	r3, r3, r1
   13844:	sub	r1, fp, #756	; 0x2f4
   13848:	ldrd	r0, [r1]
   1384c:	adds	r0, r0, r2
   13850:	adc	r1, r1, r3
   13854:	mov	r2, r0
   13858:	mov	r3, r1
   1385c:	strd	r2, [fp, #-44]	; 0xffffffd4
   13860:	ldr	r2, [fp, #48]	; 0x30
   13864:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13868:	mul	r1, r3, r2
   1386c:	ldr	r2, [fp, #-176]	; 0xffffff50
   13870:	ldr	r3, [fp, #44]	; 0x2c
   13874:	mul	r3, r3, r2
   13878:	add	r1, r1, r3
   1387c:	ldr	r2, [fp, #44]	; 0x2c
   13880:	ldr	r3, [fp, #-180]	; 0xffffff4c
   13884:	umull	r2, r3, r2, r3
   13888:	add	r1, r1, r3
   1388c:	mov	r3, r1
   13890:	strd	r2, [fp, #-244]	; 0xffffff0c
   13894:	strd	r2, [fp, #-244]	; 0xffffff0c
   13898:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   1389c:	strd	r2, [fp, #-252]	; 0xffffff04
   138a0:	ldrd	r2, [fp, #36]	; 0x24
   138a4:	sub	r1, fp, #260	; 0x104
   138a8:	strd	r2, [r1]
   138ac:	ldr	r3, [fp, #-252]	; 0xffffff04
   138b0:	str	r3, [fp, #-264]	; 0xfffffef8
   138b4:	ldrd	r2, [fp, #-252]	; 0xffffff04
   138b8:	mov	r3, r3
   138bc:	str	r3, [fp, #-764]	; 0xfffffd04
   138c0:	mov	r3, #0
   138c4:	str	r3, [fp, #-760]	; 0xfffffd08
   138c8:	ldr	r3, [fp, #-764]	; 0xfffffd04
   138cc:	str	r3, [fp, #-268]	; 0xfffffef4
   138d0:	ldr	r3, [fp, #-260]	; 0xfffffefc
   138d4:	str	r3, [fp, #-272]	; 0xfffffef0
   138d8:	sub	r3, fp, #260	; 0x104
   138dc:	ldrd	r2, [r3]
   138e0:	mov	r3, r3
   138e4:	str	r3, [fp, #-772]	; 0xfffffcfc
   138e8:	mov	r3, #0
   138ec:	str	r3, [fp, #-768]	; 0xfffffd00
   138f0:	ldr	r3, [fp, #-772]	; 0xfffffcfc
   138f4:	str	r3, [fp, #-276]	; 0xfffffeec
   138f8:	ldr	r3, [fp, #-264]	; 0xfffffef8
   138fc:	mov	r4, r3
   13900:	mov	r5, #0
   13904:	ldr	r3, [fp, #-272]	; 0xfffffef0
   13908:	mov	r2, r3
   1390c:	mov	r3, #0
   13910:	sub	r1, fp, #284	; 0x11c
   13914:	mov	ip, r1
   13918:	mul	r0, r2, r5
   1391c:	mul	r1, r4, r3
   13920:	add	r1, r0, r1
   13924:	umull	r2, r3, r4, r2
   13928:	add	r1, r1, r3
   1392c:	mov	r3, r1
   13930:	strd	r2, [ip]
   13934:	strd	r2, [ip]
   13938:	ldr	r3, [fp, #-264]	; 0xfffffef8
   1393c:	mov	r4, r3
   13940:	mov	r5, #0
   13944:	ldr	r3, [fp, #-276]	; 0xfffffeec
   13948:	mov	r2, r3
   1394c:	mov	r3, #0
   13950:	sub	r1, fp, #284	; 0x11c
   13954:	mov	ip, r1
   13958:	mul	r0, r2, r5
   1395c:	mul	r1, r4, r3
   13960:	add	r1, r0, r1
   13964:	umull	r2, r3, r4, r2
   13968:	add	r1, r1, r3
   1396c:	mov	r3, r1
   13970:	strd	r2, [ip, #-8]
   13974:	strd	r2, [ip, #-8]
   13978:	ldr	r3, [fp, #-268]	; 0xfffffef4
   1397c:	mov	r4, r3
   13980:	mov	r5, #0
   13984:	ldr	r3, [fp, #-272]	; 0xfffffef0
   13988:	mov	r2, r3
   1398c:	mov	r3, #0
   13990:	sub	r1, fp, #300	; 0x12c
   13994:	mov	ip, r1
   13998:	mul	r0, r2, r5
   1399c:	mul	r1, r4, r3
   139a0:	add	r1, r0, r1
   139a4:	umull	r2, r3, r4, r2
   139a8:	add	r1, r1, r3
   139ac:	mov	r3, r1
   139b0:	strd	r2, [ip]
   139b4:	strd	r2, [ip]
   139b8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   139bc:	mov	r0, r3
   139c0:	mov	r1, #0
   139c4:	ldr	r3, [fp, #-276]	; 0xfffffeec
   139c8:	mov	r2, r3
   139cc:	mov	r3, #0
   139d0:	mul	lr, r2, r1
   139d4:	mul	ip, r0, r3
   139d8:	add	ip, lr, ip
   139dc:	umull	r2, r3, r0, r2
   139e0:	add	r1, ip, r3
   139e4:	mov	r3, r1
   139e8:	strd	r2, [fp, #-68]	; 0xffffffbc
   139ec:	strd	r2, [fp, #-68]	; 0xffffffbc
   139f0:	sub	r3, fp, #284	; 0x11c
   139f4:	ldrd	r2, [r3]
   139f8:	mov	r3, r3
   139fc:	str	r3, [fp, #-780]	; 0xfffffcf4
   13a00:	mov	r3, #0
   13a04:	str	r3, [fp, #-776]	; 0xfffffcf8
   13a08:	sub	r3, fp, #284	; 0x11c
   13a0c:	mov	r1, r3
   13a10:	sub	r3, fp, #284	; 0x11c
   13a14:	ldrd	r2, [r3, #-8]
   13a18:	sub	r0, fp, #780	; 0x30c
   13a1c:	ldrd	r4, [r0]
   13a20:	adds	r4, r4, r2
   13a24:	adc	r5, r5, r3
   13a28:	mov	r2, r4
   13a2c:	mov	r3, r5
   13a30:	strd	r2, [r1, #-8]
   13a34:	sub	r3, fp, #284	; 0x11c
   13a38:	mov	ip, r3
   13a3c:	sub	r3, fp, #284	; 0x11c
   13a40:	mov	r2, r3
   13a44:	sub	r3, fp, #300	; 0x12c
   13a48:	ldrd	r0, [r2, #-8]
   13a4c:	ldrd	r2, [r3]
   13a50:	adds	r2, r2, r0
   13a54:	adc	r3, r3, r1
   13a58:	strd	r2, [ip, #-8]
   13a5c:	sub	r3, fp, #284	; 0x11c
   13a60:	mov	r2, r3
   13a64:	sub	r3, fp, #300	; 0x12c
   13a68:	ldrd	r0, [r2, #-8]
   13a6c:	ldrd	r2, [r3]
   13a70:	cmp	r1, r3
   13a74:	cmpeq	r0, r2
   13a78:	bcs	13a8c <__assert_fail@plt+0x2934>
   13a7c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13a80:	adds	r2, r2, #0
   13a84:	adc	r3, r3, #1
   13a88:	strd	r2, [fp, #-68]	; 0xffffffbc
   13a8c:	sub	r3, fp, #284	; 0x11c
   13a90:	ldrd	r2, [r3, #-8]
   13a94:	mov	r3, r3
   13a98:	str	r3, [fp, #-788]	; 0xfffffcec
   13a9c:	mov	r3, #0
   13aa0:	str	r3, [fp, #-784]	; 0xfffffcf0
   13aa4:	sub	r3, fp, #300	; 0x12c
   13aa8:	mov	r1, r3
   13aac:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   13ab0:	sub	r0, fp, #788	; 0x314
   13ab4:	ldrd	r4, [r0]
   13ab8:	adds	r4, r4, r2
   13abc:	adc	r5, r5, r3
   13ac0:	mov	r2, r4
   13ac4:	mov	r3, r5
   13ac8:	strd	r2, [r1, #-8]
   13acc:	sub	r3, fp, #284	; 0x11c
   13ad0:	ldrd	r2, [r3, #-8]
   13ad4:	mov	r3, r2
   13ad8:	str	r3, [fp, #-792]	; 0xfffffce8
   13adc:	mov	r3, #0
   13ae0:	str	r3, [fp, #-796]	; 0xfffffce4
   13ae4:	sub	r3, fp, #284	; 0x11c
   13ae8:	ldrd	r0, [r3]
   13aec:	mvn	r2, #0
   13af0:	mov	r3, #0
   13af4:	and	r0, r0, r2
   13af8:	and	r1, r1, r3
   13afc:	sub	r3, fp, #316	; 0x13c
   13b00:	mov	ip, r3
   13b04:	sub	r3, fp, #796	; 0x31c
   13b08:	ldrd	r2, [r3]
   13b0c:	adds	r2, r2, r0
   13b10:	adc	r3, r3, r1
   13b14:	strd	r2, [ip]
   13b18:	sub	r3, fp, #316	; 0x13c
   13b1c:	mov	r1, r3
   13b20:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   13b24:	strd	r2, [r1, #-8]
   13b28:	sub	r3, fp, #332	; 0x14c
   13b2c:	mov	r1, r3
   13b30:	ldrd	r2, [fp, #28]
   13b34:	strd	r2, [r1]
   13b38:	sub	r3, fp, #316	; 0x13c
   13b3c:	ldr	r3, [r3, #-8]
   13b40:	str	r3, [fp, #-336]	; 0xfffffeb0
   13b44:	sub	r3, fp, #316	; 0x13c
   13b48:	ldrd	r2, [r3, #-8]
   13b4c:	mov	r3, r3
   13b50:	str	r3, [fp, #-804]	; 0xfffffcdc
   13b54:	mov	r3, #0
   13b58:	str	r3, [fp, #-800]	; 0xfffffce0
   13b5c:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   13b60:	str	r3, [fp, #-340]	; 0xfffffeac
   13b64:	sub	r3, fp, #332	; 0x14c
   13b68:	ldr	r3, [r3]
   13b6c:	str	r3, [fp, #-344]	; 0xfffffea8
   13b70:	sub	r3, fp, #332	; 0x14c
   13b74:	ldrd	r2, [r3]
   13b78:	mov	r3, r3
   13b7c:	str	r3, [fp, #-812]	; 0xfffffcd4
   13b80:	mov	r3, #0
   13b84:	str	r3, [fp, #-808]	; 0xfffffcd8
   13b88:	ldr	r3, [fp, #-812]	; 0xfffffcd4
   13b8c:	str	r3, [fp, #-348]	; 0xfffffea4
   13b90:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   13b94:	mov	r4, r3
   13b98:	mov	r5, #0
   13b9c:	ldr	r3, [fp, #-344]	; 0xfffffea8
   13ba0:	mov	r2, r3
   13ba4:	mov	r3, #0
   13ba8:	sub	r1, fp, #348	; 0x15c
   13bac:	mov	ip, r1
   13bb0:	mul	r0, r2, r5
   13bb4:	mul	r1, r4, r3
   13bb8:	add	r1, r0, r1
   13bbc:	umull	r2, r3, r4, r2
   13bc0:	add	r1, r1, r3
   13bc4:	mov	r3, r1
   13bc8:	strd	r2, [ip, #-8]
   13bcc:	strd	r2, [ip, #-8]
   13bd0:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   13bd4:	mov	r4, r3
   13bd8:	mov	r5, #0
   13bdc:	ldr	r3, [fp, #-348]	; 0xfffffea4
   13be0:	mov	r2, r3
   13be4:	mov	r3, #0
   13be8:	sub	r1, fp, #364	; 0x16c
   13bec:	mov	ip, r1
   13bf0:	mul	r0, r2, r5
   13bf4:	mul	r1, r4, r3
   13bf8:	add	r1, r0, r1
   13bfc:	umull	r2, r3, r4, r2
   13c00:	add	r1, r1, r3
   13c04:	mov	r3, r1
   13c08:	strd	r2, [ip]
   13c0c:	strd	r2, [ip]
   13c10:	ldr	r3, [fp, #-340]	; 0xfffffeac
   13c14:	mov	r4, r3
   13c18:	mov	r5, #0
   13c1c:	ldr	r3, [fp, #-344]	; 0xfffffea8
   13c20:	mov	r2, r3
   13c24:	mov	r3, #0
   13c28:	sub	r1, fp, #364	; 0x16c
   13c2c:	mov	ip, r1
   13c30:	mul	r0, r2, r5
   13c34:	mul	r1, r4, r3
   13c38:	add	r1, r0, r1
   13c3c:	umull	r2, r3, r4, r2
   13c40:	add	r1, r1, r3
   13c44:	mov	r3, r1
   13c48:	strd	r2, [ip, #-8]
   13c4c:	strd	r2, [ip, #-8]
   13c50:	ldr	r3, [fp, #-340]	; 0xfffffeac
   13c54:	mov	r0, r3
   13c58:	mov	r1, #0
   13c5c:	ldr	r3, [fp, #-348]	; 0xfffffea4
   13c60:	mov	r2, r3
   13c64:	mov	r3, #0
   13c68:	mul	lr, r2, r1
   13c6c:	mul	ip, r0, r3
   13c70:	add	ip, lr, ip
   13c74:	umull	r2, r3, r0, r2
   13c78:	add	r1, ip, r3
   13c7c:	mov	r3, r1
   13c80:	strd	r2, [fp, #-76]	; 0xffffffb4
   13c84:	strd	r2, [fp, #-76]	; 0xffffffb4
   13c88:	sub	r3, fp, #348	; 0x15c
   13c8c:	ldrd	r2, [r3, #-8]
   13c90:	mov	r3, r3
   13c94:	str	r3, [fp, #-820]	; 0xfffffccc
   13c98:	mov	r3, #0
   13c9c:	str	r3, [fp, #-816]	; 0xfffffcd0
   13ca0:	sub	r3, fp, #364	; 0x16c
   13ca4:	mov	r1, r3
   13ca8:	sub	r3, fp, #364	; 0x16c
   13cac:	ldrd	r2, [r3]
   13cb0:	sub	r0, fp, #820	; 0x334
   13cb4:	ldrd	r4, [r0]
   13cb8:	adds	r4, r4, r2
   13cbc:	adc	r5, r5, r3
   13cc0:	mov	r2, r4
   13cc4:	mov	r3, r5
   13cc8:	strd	r2, [r1]
   13ccc:	sub	r3, fp, #364	; 0x16c
   13cd0:	mov	ip, r3
   13cd4:	sub	r3, fp, #364	; 0x16c
   13cd8:	mov	r2, r3
   13cdc:	sub	r3, fp, #364	; 0x16c
   13ce0:	ldrd	r0, [r2]
   13ce4:	ldrd	r2, [r3, #-8]
   13ce8:	adds	r2, r2, r0
   13cec:	adc	r3, r3, r1
   13cf0:	strd	r2, [ip]
   13cf4:	sub	r3, fp, #364	; 0x16c
   13cf8:	mov	r2, r3
   13cfc:	sub	r3, fp, #364	; 0x16c
   13d00:	ldrd	r0, [r2]
   13d04:	ldrd	r2, [r3, #-8]
   13d08:	cmp	r1, r3
   13d0c:	cmpeq	r0, r2
   13d10:	bcs	13d24 <__assert_fail@plt+0x2bcc>
   13d14:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   13d18:	adds	r2, r2, #0
   13d1c:	adc	r3, r3, #1
   13d20:	strd	r2, [fp, #-76]	; 0xffffffb4
   13d24:	sub	r3, fp, #364	; 0x16c
   13d28:	ldrd	r2, [r3]
   13d2c:	mov	r3, r3
   13d30:	str	r3, [fp, #-828]	; 0xfffffcc4
   13d34:	mov	r3, #0
   13d38:	str	r3, [fp, #-824]	; 0xfffffcc8
   13d3c:	sub	r3, fp, #380	; 0x17c
   13d40:	mov	r1, r3
   13d44:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   13d48:	sub	r0, fp, #828	; 0x33c
   13d4c:	ldrd	r4, [r0]
   13d50:	adds	r4, r4, r2
   13d54:	adc	r5, r5, r3
   13d58:	mov	r2, r4
   13d5c:	mov	r3, r5
   13d60:	strd	r2, [r1]
   13d64:	sub	r3, fp, #364	; 0x16c
   13d68:	ldrd	r2, [r3]
   13d6c:	mov	r3, r2
   13d70:	str	r3, [fp, #-832]	; 0xfffffcc0
   13d74:	mov	r3, #0
   13d78:	str	r3, [fp, #-836]	; 0xfffffcbc
   13d7c:	sub	r3, fp, #348	; 0x15c
   13d80:	ldrd	r0, [r3, #-8]
   13d84:	mvn	r2, #0
   13d88:	mov	r3, #0
   13d8c:	and	r0, r0, r2
   13d90:	and	r1, r1, r3
   13d94:	sub	r3, fp, #380	; 0x17c
   13d98:	mov	ip, r3
   13d9c:	sub	r3, fp, #836	; 0x344
   13da0:	ldrd	r2, [r3]
   13da4:	adds	r2, r2, r0
   13da8:	adc	r3, r3, r1
   13dac:	strd	r2, [ip, #-8]
   13db0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   13db4:	ldr	r3, [fp, #-176]	; 0xffffff50
   13db8:	orr	r3, r2, r3
   13dbc:	cmp	r3, #0
   13dc0:	movne	r3, #1
   13dc4:	moveq	r3, #0
   13dc8:	uxtb	r3, r3
   13dcc:	uxtb	r0, r3
   13dd0:	mov	r1, #0
   13dd4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13dd8:	adds	r2, r2, r0
   13ddc:	adc	r3, r3, r1
   13de0:	strd	r2, [fp, #-44]	; 0xffffffd4
   13de4:	sub	r3, fp, #396	; 0x18c
   13de8:	mov	ip, r3
   13dec:	sub	r3, fp, #300	; 0x12c
   13df0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13df4:	ldrd	r2, [r3, #-8]
   13df8:	adds	r2, r2, r0
   13dfc:	adc	r3, r3, r1
   13e00:	strd	r2, [ip]
   13e04:	sub	r3, fp, #396	; 0x18c
   13e08:	ldrd	r0, [r3]
   13e0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13e10:	cmp	r1, r3
   13e14:	cmpeq	r0, r2
   13e18:	movcc	r3, #1
   13e1c:	movcs	r3, #0
   13e20:	uxtb	r3, r3
   13e24:	uxtb	r0, r3
   13e28:	mov	r1, #0
   13e2c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13e30:	adds	r2, r2, r0
   13e34:	adc	r3, r3, r1
   13e38:	strd	r2, [fp, #-36]	; 0xffffffdc
   13e3c:	sub	r3, fp, #396	; 0x18c
   13e40:	ldrd	r2, [r3]
   13e44:	strd	r2, [fp, #-44]	; 0xffffffd4
   13e48:	sub	r3, fp, #396	; 0x18c
   13e4c:	mov	ip, r3
   13e50:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13e54:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13e58:	adds	r2, r2, r0
   13e5c:	adc	r3, r3, r1
   13e60:	strd	r2, [ip, #-8]
   13e64:	sub	r3, fp, #396	; 0x18c
   13e68:	ldrd	r0, [r3, #-8]
   13e6c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13e70:	cmp	r1, r3
   13e74:	cmpeq	r0, r2
   13e78:	movcc	r3, #1
   13e7c:	movcs	r3, #0
   13e80:	uxtb	r3, r3
   13e84:	uxtb	r0, r3
   13e88:	mov	r1, #0
   13e8c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13e90:	adds	r2, r2, r0
   13e94:	adc	r3, r3, r1
   13e98:	strd	r2, [fp, #-36]	; 0xffffffdc
   13e9c:	sub	r3, fp, #396	; 0x18c
   13ea0:	ldrd	r2, [r3, #-8]
   13ea4:	strd	r2, [fp, #-44]	; 0xffffffd4
   13ea8:	sub	r3, fp, #412	; 0x19c
   13eac:	mov	ip, r3
   13eb0:	sub	r3, fp, #380	; 0x17c
   13eb4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   13eb8:	ldrd	r2, [r3, #-8]
   13ebc:	adds	r2, r2, r0
   13ec0:	adc	r3, r3, r1
   13ec4:	strd	r2, [ip]
   13ec8:	sub	r3, fp, #380	; 0x17c
   13ecc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13ed0:	ldrd	r2, [r3]
   13ed4:	adds	r4, r0, r2
   13ed8:	adc	r5, r1, r3
   13edc:	sub	r3, fp, #412	; 0x19c
   13ee0:	ldrd	r0, [r3]
   13ee4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   13ee8:	cmp	r1, r3
   13eec:	cmpeq	r0, r2
   13ef0:	movcc	r3, #1
   13ef4:	movcs	r3, #0
   13ef8:	uxtb	r3, r3
   13efc:	uxtb	r2, r3
   13f00:	mov	r3, #0
   13f04:	adds	r2, r2, r4
   13f08:	adc	r3, r3, r5
   13f0c:	strd	r2, [fp, #-36]	; 0xffffffdc
   13f10:	sub	r3, fp, #412	; 0x19c
   13f14:	ldrd	r2, [r3]
   13f18:	strd	r2, [fp, #-44]	; 0xffffffd4
   13f1c:	sub	r3, fp, #412	; 0x19c
   13f20:	mov	r1, r3
   13f24:	sub	r3, fp, #700	; 0x2bc
   13f28:	ldrd	r2, [r3]
   13f2c:	strd	r2, [r1, #-8]
   13f30:	sub	r3, fp, #428	; 0x1ac
   13f34:	mov	r1, r3
   13f38:	ldrd	r2, [fp, #20]
   13f3c:	strd	r2, [r1]
   13f40:	sub	r3, fp, #412	; 0x19c
   13f44:	ldr	r3, [r3, #-8]
   13f48:	str	r3, [fp, #-432]	; 0xfffffe50
   13f4c:	sub	r3, fp, #412	; 0x19c
   13f50:	ldrd	r2, [r3, #-8]
   13f54:	mov	r3, r3
   13f58:	str	r3, [fp, #-844]	; 0xfffffcb4
   13f5c:	mov	r3, #0
   13f60:	str	r3, [fp, #-840]	; 0xfffffcb8
   13f64:	ldr	r3, [fp, #-844]	; 0xfffffcb4
   13f68:	str	r3, [fp, #-436]	; 0xfffffe4c
   13f6c:	sub	r3, fp, #428	; 0x1ac
   13f70:	ldr	r3, [r3]
   13f74:	str	r3, [fp, #-440]	; 0xfffffe48
   13f78:	sub	r3, fp, #428	; 0x1ac
   13f7c:	ldrd	r2, [r3]
   13f80:	mov	r3, r3
   13f84:	str	r3, [fp, #-852]	; 0xfffffcac
   13f88:	mov	r3, #0
   13f8c:	str	r3, [fp, #-848]	; 0xfffffcb0
   13f90:	ldr	r3, [fp, #-852]	; 0xfffffcac
   13f94:	str	r3, [fp, #-444]	; 0xfffffe44
   13f98:	ldr	r3, [fp, #-432]	; 0xfffffe50
   13f9c:	mov	r4, r3
   13fa0:	mov	r5, #0
   13fa4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   13fa8:	mov	r2, r3
   13fac:	mov	r3, #0
   13fb0:	sub	r1, fp, #444	; 0x1bc
   13fb4:	mov	ip, r1
   13fb8:	mul	r0, r2, r5
   13fbc:	mul	r1, r4, r3
   13fc0:	add	r1, r0, r1
   13fc4:	umull	r2, r3, r4, r2
   13fc8:	add	r1, r1, r3
   13fcc:	mov	r3, r1
   13fd0:	strd	r2, [ip, #-8]
   13fd4:	strd	r2, [ip, #-8]
   13fd8:	ldr	r3, [fp, #-432]	; 0xfffffe50
   13fdc:	mov	r4, r3
   13fe0:	mov	r5, #0
   13fe4:	ldr	r3, [fp, #-444]	; 0xfffffe44
   13fe8:	mov	r2, r3
   13fec:	mov	r3, #0
   13ff0:	sub	r1, fp, #460	; 0x1cc
   13ff4:	mov	ip, r1
   13ff8:	mul	r0, r2, r5
   13ffc:	mul	r1, r4, r3
   14000:	add	r1, r0, r1
   14004:	umull	r2, r3, r4, r2
   14008:	add	r1, r1, r3
   1400c:	mov	r3, r1
   14010:	strd	r2, [ip]
   14014:	strd	r2, [ip]
   14018:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1401c:	mov	r4, r3
   14020:	mov	r5, #0
   14024:	ldr	r3, [fp, #-440]	; 0xfffffe48
   14028:	mov	r2, r3
   1402c:	mov	r3, #0
   14030:	sub	r1, fp, #460	; 0x1cc
   14034:	mov	ip, r1
   14038:	mul	r0, r2, r5
   1403c:	mul	r1, r4, r3
   14040:	add	r1, r0, r1
   14044:	umull	r2, r3, r4, r2
   14048:	add	r1, r1, r3
   1404c:	mov	r3, r1
   14050:	strd	r2, [ip, #-8]
   14054:	strd	r2, [ip, #-8]
   14058:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1405c:	mov	r0, r3
   14060:	mov	r1, #0
   14064:	ldr	r3, [fp, #-444]	; 0xfffffe44
   14068:	mov	r2, r3
   1406c:	mov	r3, #0
   14070:	mul	lr, r2, r1
   14074:	mul	ip, r0, r3
   14078:	add	ip, lr, ip
   1407c:	umull	r2, r3, r0, r2
   14080:	add	r1, ip, r3
   14084:	mov	r3, r1
   14088:	strd	r2, [fp, #-84]	; 0xffffffac
   1408c:	strd	r2, [fp, #-84]	; 0xffffffac
   14090:	sub	r3, fp, #444	; 0x1bc
   14094:	ldrd	r2, [r3, #-8]
   14098:	mov	r3, r3
   1409c:	str	r3, [fp, #-860]	; 0xfffffca4
   140a0:	mov	r3, #0
   140a4:	str	r3, [fp, #-856]	; 0xfffffca8
   140a8:	sub	r3, fp, #460	; 0x1cc
   140ac:	mov	r1, r3
   140b0:	sub	r3, fp, #460	; 0x1cc
   140b4:	ldrd	r2, [r3]
   140b8:	sub	r0, fp, #860	; 0x35c
   140bc:	ldrd	r4, [r0]
   140c0:	adds	r4, r4, r2
   140c4:	adc	r5, r5, r3
   140c8:	mov	r2, r4
   140cc:	mov	r3, r5
   140d0:	strd	r2, [r1]
   140d4:	sub	r3, fp, #460	; 0x1cc
   140d8:	mov	ip, r3
   140dc:	sub	r3, fp, #460	; 0x1cc
   140e0:	mov	r2, r3
   140e4:	sub	r3, fp, #460	; 0x1cc
   140e8:	ldrd	r0, [r2]
   140ec:	ldrd	r2, [r3, #-8]
   140f0:	adds	r2, r2, r0
   140f4:	adc	r3, r3, r1
   140f8:	strd	r2, [ip]
   140fc:	sub	r3, fp, #460	; 0x1cc
   14100:	mov	r2, r3
   14104:	sub	r3, fp, #460	; 0x1cc
   14108:	ldrd	r0, [r2]
   1410c:	ldrd	r2, [r3, #-8]
   14110:	cmp	r1, r3
   14114:	cmpeq	r0, r2
   14118:	bcs	1412c <__assert_fail@plt+0x2fd4>
   1411c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14120:	adds	r2, r2, #0
   14124:	adc	r3, r3, #1
   14128:	strd	r2, [fp, #-84]	; 0xffffffac
   1412c:	sub	r3, fp, #460	; 0x1cc
   14130:	ldrd	r2, [r3]
   14134:	mov	r3, r3
   14138:	str	r3, [fp, #-868]	; 0xfffffc9c
   1413c:	mov	r3, #0
   14140:	str	r3, [fp, #-864]	; 0xfffffca0
   14144:	ldrd	r2, [fp, #-84]	; 0xffffffac
   14148:	sub	r1, fp, #868	; 0x364
   1414c:	ldrd	r0, [r1]
   14150:	adds	r0, r0, r2
   14154:	adc	r1, r1, r3
   14158:	mov	r2, r0
   1415c:	mov	r3, r1
   14160:	strd	r2, [fp, #-172]	; 0xffffff54
   14164:	sub	r3, fp, #460	; 0x1cc
   14168:	ldrd	r2, [r3]
   1416c:	mov	r3, r2
   14170:	str	r3, [fp, #-872]	; 0xfffffc98
   14174:	mov	r3, #0
   14178:	str	r3, [fp, #-876]	; 0xfffffc94
   1417c:	sub	r3, fp, #444	; 0x1bc
   14180:	ldrd	r0, [r3, #-8]
   14184:	mvn	r2, #0
   14188:	mov	r3, #0
   1418c:	and	r2, r2, r0
   14190:	and	r3, r3, r1
   14194:	sub	r1, fp, #876	; 0x36c
   14198:	ldrd	r0, [r1]
   1419c:	adds	r0, r0, r2
   141a0:	adc	r1, r1, r3
   141a4:	mov	r2, r0
   141a8:	mov	r3, r1
   141ac:	strd	r2, [fp, #-180]	; 0xffffff4c
   141b0:	sub	r3, fp, #476	; 0x1dc
   141b4:	mov	r1, r3
   141b8:	sub	r3, fp, #700	; 0x2bc
   141bc:	ldrd	r2, [r3]
   141c0:	strd	r2, [r1]
   141c4:	sub	r3, fp, #476	; 0x1dc
   141c8:	mov	r1, r3
   141cc:	ldrd	r2, [fp, #12]
   141d0:	strd	r2, [r1, #-8]
   141d4:	sub	r3, fp, #476	; 0x1dc
   141d8:	ldr	r3, [r3]
   141dc:	str	r3, [fp, #-488]	; 0xfffffe18
   141e0:	sub	r3, fp, #476	; 0x1dc
   141e4:	ldrd	r2, [r3]
   141e8:	mov	r3, r3
   141ec:	str	r3, [fp, #-884]	; 0xfffffc8c
   141f0:	mov	r3, #0
   141f4:	str	r3, [fp, #-880]	; 0xfffffc90
   141f8:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   141fc:	str	r3, [fp, #-492]	; 0xfffffe14
   14200:	sub	r3, fp, #476	; 0x1dc
   14204:	ldr	r3, [r3, #-8]
   14208:	str	r3, [fp, #-496]	; 0xfffffe10
   1420c:	sub	r3, fp, #476	; 0x1dc
   14210:	ldrd	r2, [r3, #-8]
   14214:	mov	r3, r3
   14218:	str	r3, [fp, #-892]	; 0xfffffc84
   1421c:	mov	r3, #0
   14220:	str	r3, [fp, #-888]	; 0xfffffc88
   14224:	ldr	r3, [fp, #-892]	; 0xfffffc84
   14228:	str	r3, [fp, #-500]	; 0xfffffe0c
   1422c:	ldr	r3, [fp, #-488]	; 0xfffffe18
   14230:	mov	r4, r3
   14234:	mov	r5, #0
   14238:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1423c:	mov	r2, r3
   14240:	mov	r3, #0
   14244:	sub	r1, fp, #508	; 0x1fc
   14248:	mov	ip, r1
   1424c:	mul	r0, r2, r5
   14250:	mul	r1, r4, r3
   14254:	add	r1, r0, r1
   14258:	umull	r2, r3, r4, r2
   1425c:	add	r1, r1, r3
   14260:	mov	r3, r1
   14264:	strd	r2, [ip]
   14268:	strd	r2, [ip]
   1426c:	ldr	r3, [fp, #-488]	; 0xfffffe18
   14270:	mov	r4, r3
   14274:	mov	r5, #0
   14278:	ldr	r3, [fp, #-500]	; 0xfffffe0c
   1427c:	mov	r2, r3
   14280:	mov	r3, #0
   14284:	sub	r1, fp, #508	; 0x1fc
   14288:	mov	ip, r1
   1428c:	mul	r0, r2, r5
   14290:	mul	r1, r4, r3
   14294:	add	r1, r0, r1
   14298:	umull	r2, r3, r4, r2
   1429c:	add	r1, r1, r3
   142a0:	mov	r3, r1
   142a4:	strd	r2, [ip, #-8]
   142a8:	strd	r2, [ip, #-8]
   142ac:	ldr	r3, [fp, #-492]	; 0xfffffe14
   142b0:	mov	r4, r3
   142b4:	mov	r5, #0
   142b8:	ldr	r3, [fp, #-496]	; 0xfffffe10
   142bc:	mov	r2, r3
   142c0:	mov	r3, #0
   142c4:	sub	r1, fp, #524	; 0x20c
   142c8:	mov	ip, r1
   142cc:	mul	r0, r2, r5
   142d0:	mul	r1, r4, r3
   142d4:	add	r1, r0, r1
   142d8:	umull	r2, r3, r4, r2
   142dc:	add	r1, r1, r3
   142e0:	mov	r3, r1
   142e4:	strd	r2, [ip]
   142e8:	strd	r2, [ip]
   142ec:	ldr	r3, [fp, #-492]	; 0xfffffe14
   142f0:	mov	r0, r3
   142f4:	mov	r1, #0
   142f8:	ldr	r3, [fp, #-500]	; 0xfffffe0c
   142fc:	mov	r2, r3
   14300:	mov	r3, #0
   14304:	mul	lr, r2, r1
   14308:	mul	ip, r0, r3
   1430c:	add	ip, lr, ip
   14310:	umull	r2, r3, r0, r2
   14314:	add	r1, ip, r3
   14318:	mov	r3, r1
   1431c:	strd	r2, [fp, #-92]	; 0xffffffa4
   14320:	strd	r2, [fp, #-92]	; 0xffffffa4
   14324:	sub	r3, fp, #508	; 0x1fc
   14328:	ldrd	r2, [r3]
   1432c:	mov	r3, r3
   14330:	str	r3, [fp, #-900]	; 0xfffffc7c
   14334:	mov	r3, #0
   14338:	str	r3, [fp, #-896]	; 0xfffffc80
   1433c:	sub	r3, fp, #508	; 0x1fc
   14340:	mov	r1, r3
   14344:	sub	r3, fp, #508	; 0x1fc
   14348:	ldrd	r2, [r3, #-8]
   1434c:	sub	r0, fp, #900	; 0x384
   14350:	ldrd	r4, [r0]
   14354:	adds	r4, r4, r2
   14358:	adc	r5, r5, r3
   1435c:	mov	r2, r4
   14360:	mov	r3, r5
   14364:	strd	r2, [r1, #-8]
   14368:	sub	r3, fp, #508	; 0x1fc
   1436c:	mov	ip, r3
   14370:	sub	r3, fp, #508	; 0x1fc
   14374:	mov	r2, r3
   14378:	sub	r3, fp, #524	; 0x20c
   1437c:	ldrd	r0, [r2, #-8]
   14380:	ldrd	r2, [r3]
   14384:	adds	r2, r2, r0
   14388:	adc	r3, r3, r1
   1438c:	strd	r2, [ip, #-8]
   14390:	sub	r3, fp, #508	; 0x1fc
   14394:	mov	r2, r3
   14398:	sub	r3, fp, #524	; 0x20c
   1439c:	ldrd	r0, [r2, #-8]
   143a0:	ldrd	r2, [r3]
   143a4:	cmp	r1, r3
   143a8:	cmpeq	r0, r2
   143ac:	bcs	143c0 <__assert_fail@plt+0x3268>
   143b0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   143b4:	adds	r2, r2, #0
   143b8:	adc	r3, r3, #1
   143bc:	strd	r2, [fp, #-92]	; 0xffffffa4
   143c0:	sub	r3, fp, #508	; 0x1fc
   143c4:	ldrd	r2, [r3, #-8]
   143c8:	mov	r3, r3
   143cc:	str	r3, [fp, #-908]	; 0xfffffc74
   143d0:	mov	r3, #0
   143d4:	str	r3, [fp, #-904]	; 0xfffffc78
   143d8:	sub	r3, fp, #380	; 0x17c
   143dc:	mov	r1, r3
   143e0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   143e4:	sub	r0, fp, #908	; 0x38c
   143e8:	ldrd	r4, [r0]
   143ec:	adds	r4, r4, r2
   143f0:	adc	r5, r5, r3
   143f4:	mov	r2, r4
   143f8:	mov	r3, r5
   143fc:	strd	r2, [r1]
   14400:	sub	r3, fp, #508	; 0x1fc
   14404:	ldrd	r2, [r3, #-8]
   14408:	mov	r3, r2
   1440c:	str	r3, [fp, #-912]	; 0xfffffc70
   14410:	mov	r3, #0
   14414:	str	r3, [fp, #-916]	; 0xfffffc6c
   14418:	sub	r3, fp, #508	; 0x1fc
   1441c:	ldrd	r0, [r3]
   14420:	mvn	r2, #0
   14424:	mov	r3, #0
   14428:	and	r0, r0, r2
   1442c:	and	r1, r1, r3
   14430:	sub	r3, fp, #380	; 0x17c
   14434:	mov	ip, r3
   14438:	sub	r3, fp, #916	; 0x394
   1443c:	ldrd	r2, [r3]
   14440:	adds	r2, r2, r0
   14444:	adc	r3, r3, r1
   14448:	strd	r2, [ip, #-8]
   1444c:	sub	r3, fp, #524	; 0x20c
   14450:	mov	ip, r3
   14454:	ldrd	r0, [fp, #-180]	; 0xffffff4c
   14458:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1445c:	adds	r2, r2, r0
   14460:	adc	r3, r3, r1
   14464:	strd	r2, [ip, #-8]
   14468:	sub	r3, fp, #524	; 0x20c
   1446c:	ldrd	r0, [r3, #-8]
   14470:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   14474:	cmp	r1, r3
   14478:	cmpeq	r0, r2
   1447c:	movcc	r3, #1
   14480:	movcs	r3, #0
   14484:	uxtb	r3, r3
   14488:	uxtb	r0, r3
   1448c:	mov	r1, #0
   14490:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14494:	adds	r2, r2, r0
   14498:	adc	r3, r3, r1
   1449c:	strd	r2, [fp, #-172]	; 0xffffff54
   144a0:	sub	r3, fp, #524	; 0x20c
   144a4:	ldrd	r2, [r3, #-8]
   144a8:	strd	r2, [fp, #-180]	; 0xffffff4c
   144ac:	ldr	r2, [fp, #48]	; 0x30
   144b0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   144b4:	mul	r1, r3, r2
   144b8:	ldr	r2, [fp, #-176]	; 0xffffff50
   144bc:	ldr	r3, [fp, #44]	; 0x2c
   144c0:	mul	r3, r3, r2
   144c4:	add	r1, r1, r3
   144c8:	ldr	r2, [fp, #44]	; 0x2c
   144cc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   144d0:	umull	r2, r3, r2, r3
   144d4:	add	r1, r1, r3
   144d8:	mov	r3, r1
   144dc:	strd	r2, [fp, #-244]	; 0xffffff0c
   144e0:	strd	r2, [fp, #-244]	; 0xffffff0c
   144e4:	sub	r3, fp, #540	; 0x21c
   144e8:	mov	ip, r3
   144ec:	sub	r3, fp, #380	; 0x17c
   144f0:	ldrd	r0, [r3, #-8]
   144f4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   144f8:	adds	r2, r2, r0
   144fc:	adc	r3, r3, r1
   14500:	strd	r2, [ip]
   14504:	sub	r3, fp, #540	; 0x21c
   14508:	mov	r2, r3
   1450c:	sub	r3, fp, #380	; 0x17c
   14510:	ldrd	r0, [r2]
   14514:	ldrd	r2, [r3, #-8]
   14518:	cmp	r1, r3
   1451c:	cmpeq	r0, r2
   14520:	movcc	r3, #1
   14524:	movcs	r3, #0
   14528:	uxtb	r3, r3
   1452c:	uxtb	r0, r3
   14530:	mov	r1, #0
   14534:	sub	r3, fp, #380	; 0x17c
   14538:	ldrd	r2, [r3]
   1453c:	adds	r2, r2, r0
   14540:	adc	r3, r3, r1
   14544:	strd	r2, [fp, #-36]	; 0xffffffdc
   14548:	sub	r3, fp, #540	; 0x21c
   1454c:	ldrd	r2, [r3]
   14550:	strd	r2, [fp, #-44]	; 0xffffffd4
   14554:	sub	r3, fp, #540	; 0x21c
   14558:	mov	r1, r3
   1455c:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   14560:	strd	r2, [r1, #-8]
   14564:	sub	r3, fp, #556	; 0x22c
   14568:	mov	r1, r3
   1456c:	ldrd	r2, [fp, #36]	; 0x24
   14570:	strd	r2, [r1]
   14574:	sub	r3, fp, #540	; 0x21c
   14578:	ldr	r3, [r3, #-8]
   1457c:	str	r3, [fp, #-560]	; 0xfffffdd0
   14580:	sub	r3, fp, #540	; 0x21c
   14584:	ldrd	r2, [r3, #-8]
   14588:	mov	r3, r3
   1458c:	str	r3, [fp, #-924]	; 0xfffffc64
   14590:	mov	r3, #0
   14594:	str	r3, [fp, #-920]	; 0xfffffc68
   14598:	ldr	r3, [fp, #-924]	; 0xfffffc64
   1459c:	str	r3, [fp, #-564]	; 0xfffffdcc
   145a0:	sub	r3, fp, #556	; 0x22c
   145a4:	ldr	r3, [r3]
   145a8:	str	r3, [fp, #-568]	; 0xfffffdc8
   145ac:	sub	r3, fp, #556	; 0x22c
   145b0:	ldrd	r2, [r3]
   145b4:	mov	r3, r3
   145b8:	str	r3, [fp, #-932]	; 0xfffffc5c
   145bc:	mov	r3, #0
   145c0:	str	r3, [fp, #-928]	; 0xfffffc60
   145c4:	ldr	r3, [fp, #-932]	; 0xfffffc5c
   145c8:	str	r3, [fp, #-572]	; 0xfffffdc4
   145cc:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   145d0:	mov	r4, r3
   145d4:	mov	r5, #0
   145d8:	ldr	r3, [fp, #-568]	; 0xfffffdc8
   145dc:	mov	r2, r3
   145e0:	mov	r3, #0
   145e4:	sub	r1, fp, #572	; 0x23c
   145e8:	mov	ip, r1
   145ec:	mul	r0, r2, r5
   145f0:	mul	r1, r4, r3
   145f4:	add	r1, r0, r1
   145f8:	umull	r2, r3, r4, r2
   145fc:	add	r1, r1, r3
   14600:	mov	r3, r1
   14604:	strd	r2, [ip, #-8]
   14608:	strd	r2, [ip, #-8]
   1460c:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14610:	mov	r4, r3
   14614:	mov	r5, #0
   14618:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   1461c:	mov	r2, r3
   14620:	mov	r3, #0
   14624:	sub	r1, fp, #588	; 0x24c
   14628:	mov	ip, r1
   1462c:	mul	r0, r2, r5
   14630:	mul	r1, r4, r3
   14634:	add	r1, r0, r1
   14638:	umull	r2, r3, r4, r2
   1463c:	add	r1, r1, r3
   14640:	mov	r3, r1
   14644:	strd	r2, [ip]
   14648:	strd	r2, [ip]
   1464c:	ldr	r3, [fp, #-564]	; 0xfffffdcc
   14650:	mov	r4, r3
   14654:	mov	r5, #0
   14658:	ldr	r3, [fp, #-568]	; 0xfffffdc8
   1465c:	mov	r2, r3
   14660:	mov	r3, #0
   14664:	sub	r1, fp, #588	; 0x24c
   14668:	mov	ip, r1
   1466c:	mul	r0, r2, r5
   14670:	mul	r1, r4, r3
   14674:	add	r1, r0, r1
   14678:	umull	r2, r3, r4, r2
   1467c:	add	r1, r1, r3
   14680:	mov	r3, r1
   14684:	strd	r2, [ip, #-8]
   14688:	strd	r2, [ip, #-8]
   1468c:	ldr	r3, [fp, #-564]	; 0xfffffdcc
   14690:	mov	r0, r3
   14694:	mov	r1, #0
   14698:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   1469c:	mov	r2, r3
   146a0:	mov	r3, #0
   146a4:	mul	lr, r2, r1
   146a8:	mul	ip, r0, r3
   146ac:	add	ip, lr, ip
   146b0:	umull	r2, r3, r0, r2
   146b4:	add	r1, ip, r3
   146b8:	mov	r3, r1
   146bc:	strd	r2, [fp, #-100]	; 0xffffff9c
   146c0:	strd	r2, [fp, #-100]	; 0xffffff9c
   146c4:	sub	r3, fp, #572	; 0x23c
   146c8:	ldrd	r2, [r3, #-8]
   146cc:	mov	r3, r3
   146d0:	str	r3, [fp, #-940]	; 0xfffffc54
   146d4:	mov	r3, #0
   146d8:	str	r3, [fp, #-936]	; 0xfffffc58
   146dc:	sub	r3, fp, #588	; 0x24c
   146e0:	mov	r1, r3
   146e4:	sub	r3, fp, #588	; 0x24c
   146e8:	ldrd	r2, [r3]
   146ec:	sub	r0, fp, #940	; 0x3ac
   146f0:	ldrd	r4, [r0]
   146f4:	adds	r4, r4, r2
   146f8:	adc	r5, r5, r3
   146fc:	mov	r2, r4
   14700:	mov	r3, r5
   14704:	strd	r2, [r1]
   14708:	sub	r3, fp, #588	; 0x24c
   1470c:	mov	ip, r3
   14710:	sub	r3, fp, #588	; 0x24c
   14714:	mov	r2, r3
   14718:	sub	r3, fp, #588	; 0x24c
   1471c:	ldrd	r0, [r2]
   14720:	ldrd	r2, [r3, #-8]
   14724:	adds	r2, r2, r0
   14728:	adc	r3, r3, r1
   1472c:	strd	r2, [ip]
   14730:	sub	r3, fp, #588	; 0x24c
   14734:	mov	r2, r3
   14738:	sub	r3, fp, #588	; 0x24c
   1473c:	ldrd	r0, [r2]
   14740:	ldrd	r2, [r3, #-8]
   14744:	cmp	r1, r3
   14748:	cmpeq	r0, r2
   1474c:	bcs	14760 <__assert_fail@plt+0x3608>
   14750:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   14754:	adds	r2, r2, #0
   14758:	adc	r3, r3, #1
   1475c:	strd	r2, [fp, #-100]	; 0xffffff9c
   14760:	sub	r3, fp, #588	; 0x24c
   14764:	ldrd	r2, [r3]
   14768:	mov	r3, r3
   1476c:	str	r3, [fp, #-948]	; 0xfffffc4c
   14770:	mov	r3, #0
   14774:	str	r3, [fp, #-944]	; 0xfffffc50
   14778:	sub	r3, fp, #300	; 0x12c
   1477c:	mov	r1, r3
   14780:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   14784:	sub	r0, fp, #948	; 0x3b4
   14788:	ldrd	r4, [r0]
   1478c:	adds	r4, r4, r2
   14790:	adc	r5, r5, r3
   14794:	mov	r2, r4
   14798:	mov	r3, r5
   1479c:	strd	r2, [r1, #-8]
   147a0:	sub	r3, fp, #588	; 0x24c
   147a4:	ldrd	r2, [r3]
   147a8:	mov	r3, r2
   147ac:	str	r3, [fp, #-952]	; 0xfffffc48
   147b0:	mov	r3, #0
   147b4:	str	r3, [fp, #-956]	; 0xfffffc44
   147b8:	sub	r3, fp, #572	; 0x23c
   147bc:	ldrd	r0, [r3, #-8]
   147c0:	mvn	r2, #0
   147c4:	mov	r3, #0
   147c8:	and	r0, r0, r2
   147cc:	and	r1, r1, r3
   147d0:	sub	r3, fp, #316	; 0x13c
   147d4:	mov	ip, r3
   147d8:	sub	r3, fp, #956	; 0x3bc
   147dc:	ldrd	r2, [r3]
   147e0:	adds	r2, r2, r0
   147e4:	adc	r3, r3, r1
   147e8:	strd	r2, [ip]
   147ec:	sub	r3, fp, #604	; 0x25c
   147f0:	mov	r1, r3
   147f4:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   147f8:	strd	r2, [r1]
   147fc:	sub	r3, fp, #604	; 0x25c
   14800:	mov	r1, r3
   14804:	ldrd	r2, [fp, #28]
   14808:	strd	r2, [r1, #-8]
   1480c:	sub	r3, fp, #604	; 0x25c
   14810:	ldr	r3, [r3]
   14814:	str	r3, [fp, #-616]	; 0xfffffd98
   14818:	sub	r3, fp, #604	; 0x25c
   1481c:	ldrd	r2, [r3]
   14820:	mov	r3, r3
   14824:	str	r3, [fp, #-964]	; 0xfffffc3c
   14828:	mov	r3, #0
   1482c:	str	r3, [fp, #-960]	; 0xfffffc40
   14830:	ldr	r3, [fp, #-964]	; 0xfffffc3c
   14834:	str	r3, [fp, #-620]	; 0xfffffd94
   14838:	sub	r3, fp, #604	; 0x25c
   1483c:	ldr	r3, [r3, #-8]
   14840:	str	r3, [fp, #-624]	; 0xfffffd90
   14844:	sub	r3, fp, #604	; 0x25c
   14848:	ldrd	r2, [r3, #-8]
   1484c:	mov	r3, r3
   14850:	str	r3, [fp, #-972]	; 0xfffffc34
   14854:	mov	r3, #0
   14858:	str	r3, [fp, #-968]	; 0xfffffc38
   1485c:	ldr	r3, [fp, #-972]	; 0xfffffc34
   14860:	str	r3, [fp, #-628]	; 0xfffffd8c
   14864:	ldr	r3, [fp, #-616]	; 0xfffffd98
   14868:	mov	r0, r3
   1486c:	mov	r1, #0
   14870:	ldr	r3, [fp, #-624]	; 0xfffffd90
   14874:	mov	r2, r3
   14878:	mov	r3, #0
   1487c:	sub	ip, fp, #636	; 0x27c
   14880:	mul	r4, r2, r1
   14884:	mul	lr, r0, r3
   14888:	add	lr, r4, lr
   1488c:	umull	r2, r3, r0, r2
   14890:	add	r1, lr, r3
   14894:	mov	r3, r1
   14898:	strd	r2, [ip]
   1489c:	strd	r2, [ip]
   148a0:	ldr	r3, [fp, #-616]	; 0xfffffd98
   148a4:	mov	r0, r3
   148a8:	mov	r1, #0
   148ac:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   148b0:	mov	r2, r3
   148b4:	mov	r3, #0
   148b8:	sub	ip, fp, #636	; 0x27c
   148bc:	mul	r4, r2, r1
   148c0:	mul	lr, r0, r3
   148c4:	add	lr, r4, lr
   148c8:	umull	r2, r3, r0, r2
   148cc:	add	r1, lr, r3
   148d0:	mov	r3, r1
   148d4:	strd	r2, [ip, #-8]
   148d8:	strd	r2, [ip, #-8]
   148dc:	ldr	r3, [fp, #-620]	; 0xfffffd94
   148e0:	mov	r0, r3
   148e4:	mov	r1, #0
   148e8:	ldr	r3, [fp, #-624]	; 0xfffffd90
   148ec:	mov	r2, r3
   148f0:	mov	r3, #0
   148f4:	sub	ip, fp, #652	; 0x28c
   148f8:	mul	r4, r2, r1
   148fc:	mul	lr, r0, r3
   14900:	add	lr, r4, lr
   14904:	umull	r2, r3, r0, r2
   14908:	add	r1, lr, r3
   1490c:	mov	r3, r1
   14910:	strd	r2, [ip]
   14914:	strd	r2, [ip]
   14918:	ldr	r3, [fp, #-620]	; 0xfffffd94
   1491c:	mov	r0, r3
   14920:	mov	r1, #0
   14924:	ldr	r3, [fp, #-628]	; 0xfffffd8c
   14928:	mov	r2, r3
   1492c:	mov	r3, #0
   14930:	mul	lr, r2, r1
   14934:	mul	ip, r0, r3
   14938:	add	ip, lr, ip
   1493c:	umull	r2, r3, r0, r2
   14940:	add	r1, ip, r3
   14944:	mov	r3, r1
   14948:	strd	r2, [fp, #-108]	; 0xffffff94
   1494c:	strd	r2, [fp, #-108]	; 0xffffff94
   14950:	sub	r3, fp, #636	; 0x27c
   14954:	ldrd	r2, [r3]
   14958:	mov	r3, r3
   1495c:	str	r3, [fp, #-980]	; 0xfffffc2c
   14960:	mov	r3, #0
   14964:	str	r3, [fp, #-976]	; 0xfffffc30
   14968:	sub	r3, fp, #636	; 0x27c
   1496c:	mov	r1, r3
   14970:	sub	r3, fp, #636	; 0x27c
   14974:	ldrd	r2, [r3, #-8]
   14978:	sub	r0, fp, #980	; 0x3d4
   1497c:	ldrd	r4, [r0]
   14980:	adds	r4, r4, r2
   14984:	adc	r5, r5, r3
   14988:	mov	r2, r4
   1498c:	mov	r3, r5
   14990:	strd	r2, [r1, #-8]
   14994:	sub	r3, fp, #636	; 0x27c
   14998:	mov	ip, r3
   1499c:	sub	r3, fp, #636	; 0x27c
   149a0:	mov	r2, r3
   149a4:	sub	r3, fp, #652	; 0x28c
   149a8:	ldrd	r0, [r2, #-8]
   149ac:	ldrd	r2, [r3]
   149b0:	adds	r2, r2, r0
   149b4:	adc	r3, r3, r1
   149b8:	strd	r2, [ip, #-8]
   149bc:	sub	r3, fp, #636	; 0x27c
   149c0:	mov	r2, r3
   149c4:	sub	r3, fp, #652	; 0x28c
   149c8:	ldrd	r0, [r2, #-8]
   149cc:	ldrd	r2, [r3]
   149d0:	cmp	r1, r3
   149d4:	cmpeq	r0, r2
   149d8:	bcs	149ec <__assert_fail@plt+0x3894>
   149dc:	ldrd	r2, [fp, #-108]	; 0xffffff94
   149e0:	adds	r2, r2, #0
   149e4:	adc	r3, r3, #1
   149e8:	strd	r2, [fp, #-108]	; 0xffffff94
   149ec:	sub	r3, fp, #636	; 0x27c
   149f0:	ldrd	r2, [r3, #-8]
   149f4:	mov	r3, r3
   149f8:	str	r3, [fp, #-988]	; 0xfffffc24
   149fc:	mov	r3, #0
   14a00:	str	r3, [fp, #-984]	; 0xfffffc28
   14a04:	sub	r3, fp, #380	; 0x17c
   14a08:	mov	r1, r3
   14a0c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   14a10:	sub	r0, fp, #988	; 0x3dc
   14a14:	ldrd	r4, [r0]
   14a18:	adds	r4, r4, r2
   14a1c:	adc	r5, r5, r3
   14a20:	mov	r2, r4
   14a24:	mov	r3, r5
   14a28:	strd	r2, [r1]
   14a2c:	sub	r3, fp, #636	; 0x27c
   14a30:	ldrd	r2, [r3, #-8]
   14a34:	mov	r3, r2
   14a38:	str	r3, [fp, #-992]	; 0xfffffc20
   14a3c:	mov	r3, #0
   14a40:	str	r3, [fp, #-996]	; 0xfffffc1c
   14a44:	sub	r3, fp, #636	; 0x27c
   14a48:	ldrd	r2, [r3]
   14a4c:	mvn	r0, #0
   14a50:	mov	r1, #0
   14a54:	and	r2, r2, r0
   14a58:	and	r3, r3, r1
   14a5c:	sub	r1, fp, #380	; 0x17c
   14a60:	sub	r0, fp, #996	; 0x3e4
   14a64:	ldrd	r4, [r0]
   14a68:	adds	r4, r4, r2
   14a6c:	adc	r5, r5, r3
   14a70:	mov	r2, r4
   14a74:	mov	r3, r5
   14a78:	strd	r2, [r1, #-8]
   14a7c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14a80:	ldr	r3, [fp, #-176]	; 0xffffff50
   14a84:	orr	r3, r2, r3
   14a88:	cmp	r3, #0
   14a8c:	movne	r3, #1
   14a90:	moveq	r3, #0
   14a94:	uxtb	r3, r3
   14a98:	uxtb	r2, r3
   14a9c:	mov	r3, #0
   14aa0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14aa4:	adds	r2, r2, r0
   14aa8:	adc	r3, r3, r1
   14aac:	strd	r2, [fp, #-44]	; 0xffffffd4
   14ab0:	sub	r3, fp, #652	; 0x28c
   14ab4:	mov	ip, r3
   14ab8:	sub	r3, fp, #300	; 0x12c
   14abc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14ac0:	ldrd	r2, [r3, #-8]
   14ac4:	adds	r2, r2, r0
   14ac8:	adc	r3, r3, r1
   14acc:	strd	r2, [ip, #-8]
   14ad0:	sub	r3, fp, #652	; 0x28c
   14ad4:	ldrd	r0, [r3, #-8]
   14ad8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14adc:	cmp	r1, r3
   14ae0:	cmpeq	r0, r2
   14ae4:	movcc	r3, #1
   14ae8:	movcs	r3, #0
   14aec:	uxtb	r3, r3
   14af0:	uxtb	r2, r3
   14af4:	mov	r3, #0
   14af8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14afc:	adds	r2, r2, r0
   14b00:	adc	r3, r3, r1
   14b04:	strd	r2, [fp, #-36]	; 0xffffffdc
   14b08:	sub	r3, fp, #652	; 0x28c
   14b0c:	ldrd	r2, [r3, #-8]
   14b10:	strd	r2, [fp, #-44]	; 0xffffffd4
   14b14:	sub	r3, fp, #668	; 0x29c
   14b18:	mov	ip, r3
   14b1c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14b20:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14b24:	adds	r2, r2, r0
   14b28:	adc	r3, r3, r1
   14b2c:	strd	r2, [ip]
   14b30:	sub	r3, fp, #668	; 0x29c
   14b34:	ldrd	r0, [r3]
   14b38:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14b3c:	cmp	r1, r3
   14b40:	cmpeq	r0, r2
   14b44:	movcc	r3, #1
   14b48:	movcs	r3, #0
   14b4c:	uxtb	r3, r3
   14b50:	uxtb	r2, r3
   14b54:	mov	r3, #0
   14b58:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14b5c:	adds	r2, r2, r0
   14b60:	adc	r3, r3, r1
   14b64:	strd	r2, [fp, #-36]	; 0xffffffdc
   14b68:	sub	r3, fp, #668	; 0x29c
   14b6c:	ldrd	r2, [r3]
   14b70:	strd	r2, [fp, #-44]	; 0xffffffd4
   14b74:	sub	r3, fp, #668	; 0x29c
   14b78:	mov	ip, r3
   14b7c:	sub	r3, fp, #380	; 0x17c
   14b80:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14b84:	ldrd	r2, [r3, #-8]
   14b88:	adds	r2, r2, r0
   14b8c:	adc	r3, r3, r1
   14b90:	strd	r2, [ip, #-8]
   14b94:	sub	r3, fp, #380	; 0x17c
   14b98:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14b9c:	ldrd	r2, [r3]
   14ba0:	adds	r0, r0, r2
   14ba4:	adc	r1, r1, r3
   14ba8:	sub	r3, fp, #668	; 0x29c
   14bac:	ldrd	r4, [r3, #-8]
   14bb0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14bb4:	cmp	r5, r3
   14bb8:	cmpeq	r4, r2
   14bbc:	movcc	r3, #1
   14bc0:	movcs	r3, #0
   14bc4:	uxtb	r3, r3
   14bc8:	uxtb	r2, r3
   14bcc:	mov	r3, #0
   14bd0:	adds	r2, r2, r0
   14bd4:	adc	r3, r3, r1
   14bd8:	strd	r2, [fp, #-36]	; 0xffffffdc
   14bdc:	sub	r3, fp, #668	; 0x29c
   14be0:	ldrd	r2, [r3, #-8]
   14be4:	strd	r2, [fp, #-44]	; 0xffffffd4
   14be8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14bec:	ldrd	r2, [fp, #28]
   14bf0:	cmp	r1, r3
   14bf4:	cmpeq	r0, r2
   14bf8:	bhi	14c24 <__assert_fail@plt+0x3acc>
   14bfc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14c00:	ldrd	r2, [fp, #28]
   14c04:	cmp	r1, r3
   14c08:	cmpeq	r0, r2
   14c0c:	bne	14c8c <__assert_fail@plt+0x3b34>
   14c10:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14c14:	ldrd	r2, [fp, #36]	; 0x24
   14c18:	cmp	r1, r3
   14c1c:	cmpeq	r0, r2
   14c20:	bcc	14c8c <__assert_fail@plt+0x3b34>
   14c24:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14c28:	ldrd	r2, [fp, #36]	; 0x24
   14c2c:	cmp	r1, r3
   14c30:	cmpeq	r0, r2
   14c34:	movcc	r3, #1
   14c38:	movcs	r3, #0
   14c3c:	uxtb	r3, r3
   14c40:	sub	r2, fp, #684	; 0x2ac
   14c44:	mov	r1, r2
   14c48:	uxtb	r2, r3
   14c4c:	mov	r3, #0
   14c50:	strd	r2, [r1]
   14c54:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   14c58:	ldrd	r2, [fp, #36]	; 0x24
   14c5c:	subs	r2, r0, r2
   14c60:	sbc	r3, r1, r3
   14c64:	strd	r2, [fp, #-44]	; 0xffffffd4
   14c68:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14c6c:	ldrd	r2, [fp, #28]
   14c70:	subs	r0, r0, r2
   14c74:	sbc	r1, r1, r3
   14c78:	sub	r3, fp, #684	; 0x2ac
   14c7c:	ldrd	r2, [r3]
   14c80:	subs	r2, r0, r2
   14c84:	sbc	r3, r1, r3
   14c88:	strd	r2, [fp, #-36]	; 0xffffffdc
   14c8c:	ldr	r1, [fp, #-688]	; 0xfffffd50
   14c90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14c94:	strd	r2, [r1]
   14c98:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14c9c:	mov	r0, r2
   14ca0:	mov	r1, r3
   14ca4:	sub	sp, fp, #28
   14ca8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14cac:	push	{fp, lr}
   14cb0:	add	fp, sp, #4
   14cb4:	sub	sp, sp, #40	; 0x28
   14cb8:	strd	r0, [fp, #-20]	; 0xffffffec
   14cbc:	strd	r2, [fp, #-28]	; 0xffffffe4
   14cc0:	ldrd	r2, [fp, #20]
   14cc4:	strd	r2, [fp, #-12]
   14cc8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14ccc:	mov	r0, #1
   14cd0:	mov	r1, #0
   14cd4:	and	r2, r2, r0
   14cd8:	and	r3, r3, r1
   14cdc:	orrs	r3, r2, r3
   14ce0:	beq	14d5c <__assert_fail@plt+0x3c04>
   14ce4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ce8:	strd	r2, [fp, #-12]
   14cec:	b	14d5c <__assert_fail@plt+0x3c04>
   14cf0:	ldrd	r2, [fp, #12]
   14cf4:	strd	r2, [sp, #8]
   14cf8:	ldrd	r2, [fp, #4]
   14cfc:	strd	r2, [sp]
   14d00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14d04:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14d08:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   14d0c:	strd	r0, [fp, #-20]	; 0xffffffec
   14d10:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14d14:	lsrs	r3, r3, #1
   14d18:	rrx	r2, r2
   14d1c:	strd	r2, [fp, #-28]	; 0xffffffe4
   14d20:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14d24:	mov	r0, #1
   14d28:	mov	r1, #0
   14d2c:	and	r2, r2, r0
   14d30:	and	r3, r3, r1
   14d34:	orrs	r3, r2, r3
   14d38:	beq	14d5c <__assert_fail@plt+0x3c04>
   14d3c:	ldrd	r2, [fp, #12]
   14d40:	strd	r2, [sp, #8]
   14d44:	ldrd	r2, [fp, #4]
   14d48:	strd	r2, [sp]
   14d4c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14d50:	ldrd	r0, [fp, #-12]
   14d54:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   14d58:	strd	r0, [fp, #-12]
   14d5c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14d60:	orrs	r3, r2, r3
   14d64:	bne	14cf0 <__assert_fail@plt+0x3b98>
   14d68:	ldrd	r2, [fp, #-12]
   14d6c:	mov	r0, r2
   14d70:	mov	r1, r3
   14d74:	sub	sp, fp, #4
   14d78:	pop	{fp, pc}
   14d7c:	push	{fp, lr}
   14d80:	add	fp, sp, #4
   14d84:	sub	sp, sp, #128	; 0x80
   14d88:	str	r0, [fp, #-72]	; 0xffffffb8
   14d8c:	str	r1, [fp, #-76]	; 0xffffffb4
   14d90:	str	r2, [fp, #-80]	; 0xffffffb0
   14d94:	str	r3, [fp, #-84]	; 0xffffffac
   14d98:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14d9c:	ldrd	r2, [r3]
   14da0:	strd	r2, [fp, #-36]	; 0xffffffdc
   14da4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14da8:	ldrd	r2, [r3, #8]
   14dac:	strd	r2, [fp, #-28]	; 0xffffffe4
   14db0:	ldr	r3, [fp, #-84]	; 0xffffffac
   14db4:	ldrd	r2, [r3]
   14db8:	strd	r2, [fp, #-60]	; 0xffffffc4
   14dbc:	ldr	r3, [fp, #-84]	; 0xffffffac
   14dc0:	ldrd	r2, [r3, #8]
   14dc4:	strd	r2, [fp, #-68]	; 0xffffffbc
   14dc8:	ldr	r3, [fp, #12]
   14dcc:	ldrd	r2, [r3]
   14dd0:	strd	r2, [fp, #-20]	; 0xffffffec
   14dd4:	ldr	r3, [fp, #12]
   14dd8:	ldrd	r2, [r3, #8]
   14ddc:	strd	r2, [fp, #-12]
   14de0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14de4:	ldrd	r2, [r3]
   14de8:	strd	r2, [fp, #-52]	; 0xffffffcc
   14dec:	mov	r3, #64	; 0x40
   14df0:	str	r3, [fp, #-40]	; 0xffffffd8
   14df4:	b	14ec8 <__assert_fail@plt+0x3d70>
   14df8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14dfc:	mov	r0, #1
   14e00:	mov	r1, #0
   14e04:	and	r2, r2, r0
   14e08:	and	r3, r3, r1
   14e0c:	orrs	r3, r2, r3
   14e10:	beq	14e60 <__assert_fail@plt+0x3d08>
   14e14:	ldrd	r2, [fp, #4]
   14e18:	strd	r2, [sp, #40]	; 0x28
   14e1c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14e20:	strd	r2, [sp, #32]
   14e24:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14e28:	strd	r2, [sp, #24]
   14e2c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e30:	strd	r2, [sp, #16]
   14e34:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14e38:	strd	r2, [sp, #8]
   14e3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14e40:	strd	r2, [sp]
   14e44:	ldrd	r2, [fp, #-12]
   14e48:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e4c:	bl	13398 <__assert_fail@plt+0x2240>
   14e50:	strd	r0, [fp, #-20]	; 0xffffffec
   14e54:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14e58:	ldrd	r2, [r3]
   14e5c:	strd	r2, [fp, #-12]
   14e60:	ldrd	r2, [fp, #4]
   14e64:	strd	r2, [sp, #40]	; 0x28
   14e68:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14e6c:	strd	r2, [sp, #32]
   14e70:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14e74:	strd	r2, [sp, #24]
   14e78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e7c:	strd	r2, [sp, #16]
   14e80:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14e84:	strd	r2, [sp, #8]
   14e88:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e8c:	strd	r2, [sp]
   14e90:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14e94:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e98:	bl	13398 <__assert_fail@plt+0x2240>
   14e9c:	strd	r0, [fp, #-36]	; 0xffffffdc
   14ea0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14ea4:	ldrd	r2, [r3]
   14ea8:	strd	r2, [fp, #-28]	; 0xffffffe4
   14eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14eb0:	sub	r3, r3, #1
   14eb4:	str	r3, [fp, #-40]	; 0xffffffd8
   14eb8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14ebc:	lsrs	r3, r3, #1
   14ec0:	rrx	r2, r2
   14ec4:	strd	r2, [fp, #-52]	; 0xffffffcc
   14ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ecc:	cmp	r3, #0
   14ed0:	bne	14df8 <__assert_fail@plt+0x3ca0>
   14ed4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14ed8:	ldrd	r2, [r3, #8]
   14edc:	strd	r2, [fp, #-52]	; 0xffffffcc
   14ee0:	b	14fa8 <__assert_fail@plt+0x3e50>
   14ee4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14ee8:	mov	r0, #1
   14eec:	mov	r1, #0
   14ef0:	and	r2, r2, r0
   14ef4:	and	r3, r3, r1
   14ef8:	orrs	r3, r2, r3
   14efc:	beq	14f4c <__assert_fail@plt+0x3df4>
   14f00:	ldrd	r2, [fp, #4]
   14f04:	strd	r2, [sp, #40]	; 0x28
   14f08:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14f0c:	strd	r2, [sp, #32]
   14f10:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14f14:	strd	r2, [sp, #24]
   14f18:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f1c:	strd	r2, [sp, #16]
   14f20:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14f24:	strd	r2, [sp, #8]
   14f28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14f2c:	strd	r2, [sp]
   14f30:	ldrd	r2, [fp, #-12]
   14f34:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14f38:	bl	13398 <__assert_fail@plt+0x2240>
   14f3c:	strd	r0, [fp, #-20]	; 0xffffffec
   14f40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14f44:	ldrd	r2, [r3]
   14f48:	strd	r2, [fp, #-12]
   14f4c:	ldrd	r2, [fp, #4]
   14f50:	strd	r2, [sp, #40]	; 0x28
   14f54:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   14f58:	strd	r2, [sp, #32]
   14f5c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   14f60:	strd	r2, [sp, #24]
   14f64:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f68:	strd	r2, [sp, #16]
   14f6c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14f70:	strd	r2, [sp, #8]
   14f74:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f78:	strd	r2, [sp]
   14f7c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14f80:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14f84:	bl	13398 <__assert_fail@plt+0x2240>
   14f88:	strd	r0, [fp, #-36]	; 0xffffffdc
   14f8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14f90:	ldrd	r2, [r3]
   14f94:	strd	r2, [fp, #-28]	; 0xffffffe4
   14f98:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14f9c:	lsrs	r3, r3, #1
   14fa0:	rrx	r2, r2
   14fa4:	strd	r2, [fp, #-52]	; 0xffffffcc
   14fa8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   14fac:	orrs	r3, r2, r3
   14fb0:	bne	14ee4 <__assert_fail@plt+0x3d8c>
   14fb4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14fb8:	ldrd	r2, [fp, #-12]
   14fbc:	strd	r2, [r1]
   14fc0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14fc4:	mov	r0, r2
   14fc8:	mov	r1, r3
   14fcc:	sub	sp, fp, #4
   14fd0:	pop	{fp, pc}
   14fd4:	push	{fp, lr}
   14fd8:	add	fp, sp, #4
   14fdc:	sub	sp, sp, #64	; 0x40
   14fe0:	strd	r0, [fp, #-36]	; 0xffffffdc
   14fe4:	strd	r2, [fp, #-44]	; 0xffffffd4
   14fe8:	ldrd	r2, [fp, #28]
   14fec:	strd	r2, [sp, #16]
   14ff0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   14ff4:	strd	r2, [sp, #8]
   14ff8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14ffc:	strd	r2, [sp]
   15000:	ldrd	r2, [fp, #12]
   15004:	ldrd	r0, [fp, #4]
   15008:	bl	14cac <__assert_fail@plt+0x3b54>
   1500c:	strd	r0, [fp, #-12]
   15010:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   15014:	ldrd	r2, [fp, #28]
   15018:	subs	r2, r0, r2
   1501c:	sbc	r3, r1, r3
   15020:	strd	r2, [fp, #-28]	; 0xffffffe4
   15024:	ldrd	r0, [fp, #-12]
   15028:	ldrd	r2, [fp, #28]
   1502c:	cmp	r1, r3
   15030:	cmpeq	r0, r2
   15034:	beq	1504c <__assert_fail@plt+0x3ef4>
   15038:	ldrd	r0, [fp, #-12]
   1503c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15040:	cmp	r1, r3
   15044:	cmpeq	r0, r2
   15048:	bne	15054 <__assert_fail@plt+0x3efc>
   1504c:	mov	r3, #1
   15050:	b	150d8 <__assert_fail@plt+0x3f80>
   15054:	mov	r3, #1
   15058:	str	r3, [fp, #-16]
   1505c:	b	150c4 <__assert_fail@plt+0x3f6c>
   15060:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15064:	strd	r2, [sp, #8]
   15068:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1506c:	strd	r2, [sp]
   15070:	ldrd	r2, [fp, #-12]
   15074:	ldrd	r0, [fp, #-12]
   15078:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   1507c:	strd	r0, [fp, #-12]
   15080:	ldrd	r0, [fp, #-12]
   15084:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15088:	cmp	r1, r3
   1508c:	cmpeq	r0, r2
   15090:	bne	1509c <__assert_fail@plt+0x3f44>
   15094:	mov	r3, #1
   15098:	b	150d8 <__assert_fail@plt+0x3f80>
   1509c:	ldrd	r0, [fp, #-12]
   150a0:	ldrd	r2, [fp, #28]
   150a4:	cmp	r1, r3
   150a8:	cmpeq	r0, r2
   150ac:	bne	150b8 <__assert_fail@plt+0x3f60>
   150b0:	mov	r3, #0
   150b4:	b	150d8 <__assert_fail@plt+0x3f80>
   150b8:	ldr	r3, [fp, #-16]
   150bc:	add	r3, r3, #1
   150c0:	str	r3, [fp, #-16]
   150c4:	ldr	r2, [fp, #-16]
   150c8:	ldr	r3, [fp, #20]
   150cc:	cmp	r2, r3
   150d0:	bcc	15060 <__assert_fail@plt+0x3f08>
   150d4:	mov	r3, #0
   150d8:	mov	r0, r3
   150dc:	sub	sp, fp, #4
   150e0:	pop	{fp, pc}
   150e4:	push	{r4, r5, fp, lr}
   150e8:	add	fp, sp, #12
   150ec:	sub	sp, sp, #120	; 0x78
   150f0:	str	r0, [fp, #-72]	; 0xffffffb8
   150f4:	strd	r2, [fp, #-84]	; 0xffffffac
   150f8:	sub	r0, fp, #68	; 0x44
   150fc:	ldr	r3, [fp, #16]
   15100:	str	r3, [sp, #8]
   15104:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15108:	strd	r2, [sp]
   1510c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15110:	ldr	r2, [fp, #8]
   15114:	ldr	r1, [fp, #4]
   15118:	bl	14d7c <__assert_fail@plt+0x3c24>
   1511c:	strd	r0, [fp, #-28]	; 0xffffffe4
   15120:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15124:	strd	r2, [fp, #-20]	; 0xffffffec
   15128:	ldr	r3, [fp, #16]
   1512c:	ldrd	r0, [r3]
   15130:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15134:	cmp	r1, r3
   15138:	cmpeq	r0, r2
   1513c:	bne	15164 <__assert_fail@plt+0x400c>
   15140:	ldr	r3, [fp, #16]
   15144:	add	r3, r3, #8
   15148:	ldrd	r0, [r3]
   1514c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15150:	cmp	r1, r3
   15154:	cmpeq	r0, r2
   15158:	bne	15164 <__assert_fail@plt+0x400c>
   1515c:	mov	r3, #1
   15160:	b	15300 <__assert_fail@plt+0x41a8>
   15164:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15168:	ldrd	r0, [r3]
   1516c:	ldr	r3, [fp, #16]
   15170:	ldrd	r2, [r3]
   15174:	cmp	r1, r3
   15178:	cmpeq	r0, r2
   1517c:	movcc	r3, #1
   15180:	movcs	r3, #0
   15184:	uxtb	r3, r3
   15188:	uxtb	r2, r3
   1518c:	mov	r3, #0
   15190:	strd	r2, [fp, #-44]	; 0xffffffd4
   15194:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15198:	ldrd	r0, [r3]
   1519c:	ldr	r3, [fp, #16]
   151a0:	ldrd	r2, [r3]
   151a4:	subs	r2, r0, r2
   151a8:	sbc	r3, r1, r3
   151ac:	strd	r2, [fp, #-52]	; 0xffffffcc
   151b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   151b4:	add	r3, r3, #8
   151b8:	ldrd	r0, [r3]
   151bc:	ldr	r3, [fp, #16]
   151c0:	add	r3, r3, #8
   151c4:	ldrd	r2, [r3]
   151c8:	subs	r0, r0, r2
   151cc:	sbc	r1, r1, r3
   151d0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   151d4:	subs	r2, r0, r2
   151d8:	sbc	r3, r1, r3
   151dc:	strd	r2, [fp, #-60]	; 0xffffffc4
   151e0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   151e4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   151e8:	cmp	r1, r3
   151ec:	cmpeq	r0, r2
   151f0:	bne	15210 <__assert_fail@plt+0x40b8>
   151f4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   151f8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   151fc:	cmp	r1, r3
   15200:	cmpeq	r0, r2
   15204:	bne	15210 <__assert_fail@plt+0x40b8>
   15208:	mov	r3, #1
   1520c:	b	15300 <__assert_fail@plt+0x41a8>
   15210:	mov	r3, #1
   15214:	str	r3, [fp, #-32]	; 0xffffffe0
   15218:	b	152ec <__assert_fail@plt+0x4194>
   1521c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15220:	add	r3, r3, #8
   15224:	ldrd	r2, [r3]
   15228:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1522c:	ldrd	r0, [r1]
   15230:	sub	ip, fp, #68	; 0x44
   15234:	ldrd	r4, [fp, #-84]	; 0xffffffac
   15238:	strd	r4, [sp, #40]	; 0x28
   1523c:	strd	r0, [sp, #32]
   15240:	strd	r2, [sp, #24]
   15244:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15248:	strd	r2, [sp, #16]
   1524c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15250:	strd	r2, [sp, #8]
   15254:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15258:	strd	r2, [sp]
   1525c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15260:	mov	r0, ip
   15264:	bl	13398 <__assert_fail@plt+0x2240>
   15268:	strd	r0, [fp, #-28]	; 0xffffffe4
   1526c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15270:	strd	r2, [fp, #-20]	; 0xffffffec
   15274:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   15278:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1527c:	cmp	r1, r3
   15280:	cmpeq	r0, r2
   15284:	bne	152a4 <__assert_fail@plt+0x414c>
   15288:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1528c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15290:	cmp	r1, r3
   15294:	cmpeq	r0, r2
   15298:	bne	152a4 <__assert_fail@plt+0x414c>
   1529c:	mov	r3, #1
   152a0:	b	15300 <__assert_fail@plt+0x41a8>
   152a4:	ldr	r3, [fp, #16]
   152a8:	ldrd	r0, [r3]
   152ac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   152b0:	cmp	r1, r3
   152b4:	cmpeq	r0, r2
   152b8:	bne	152e0 <__assert_fail@plt+0x4188>
   152bc:	ldr	r3, [fp, #16]
   152c0:	add	r3, r3, #8
   152c4:	ldrd	r0, [r3]
   152c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   152cc:	cmp	r1, r3
   152d0:	cmpeq	r0, r2
   152d4:	bne	152e0 <__assert_fail@plt+0x4188>
   152d8:	mov	r3, #0
   152dc:	b	15300 <__assert_fail@plt+0x41a8>
   152e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152e4:	add	r3, r3, #1
   152e8:	str	r3, [fp, #-32]	; 0xffffffe0
   152ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152f0:	ldr	r3, [fp, #12]
   152f4:	cmp	r2, r3
   152f8:	bcc	1521c <__assert_fail@plt+0x40c4>
   152fc:	mov	r3, #0
   15300:	mov	r0, r3
   15304:	sub	sp, fp, #12
   15308:	pop	{r4, r5, fp, pc}
   1530c:	push	{fp, lr}
   15310:	add	fp, sp, #4
   15314:	sub	sp, sp, #24
   15318:	str	r0, [fp, #-16]
   1531c:	str	r1, [fp, #-20]	; 0xffffffec
   15320:	str	r2, [fp, #-24]	; 0xffffffe8
   15324:	str	r3, [fp, #-28]	; 0xffffffe4
   15328:	ldr	r3, [fp, #-16]
   1532c:	ldr	r2, [fp, #4]
   15330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15334:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15338:	bl	23624 <__assert_fail@plt+0x124cc>
   1533c:	mov	r1, #1
   15340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15344:	bl	204fc <__assert_fail@plt+0xf3a4>
   15348:	mov	r3, r0
   1534c:	cmp	r3, #0
   15350:	beq	1536c <__assert_fail@plt+0x4214>
   15354:	ldr	r1, [fp, #-20]	; 0xffffffec
   15358:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1535c:	bl	2054c <__assert_fail@plt+0xf3f4>
   15360:	mov	r3, r0
   15364:	cmp	r3, #0
   15368:	bne	15374 <__assert_fail@plt+0x421c>
   1536c:	mov	r3, #1
   15370:	b	153f4 <__assert_fail@plt+0x429c>
   15374:	mov	r3, #1
   15378:	str	r3, [fp, #-8]
   1537c:	b	153e0 <__assert_fail@plt+0x4288>
   15380:	ldr	r3, [fp, #-16]
   15384:	mov	r2, #2
   15388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1538c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15390:	bl	23a0c <__assert_fail@plt+0x128b4>
   15394:	ldr	r1, [fp, #-20]	; 0xffffffec
   15398:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1539c:	bl	2054c <__assert_fail@plt+0xf3f4>
   153a0:	mov	r3, r0
   153a4:	cmp	r3, #0
   153a8:	bne	153b4 <__assert_fail@plt+0x425c>
   153ac:	mov	r3, #1
   153b0:	b	153f4 <__assert_fail@plt+0x429c>
   153b4:	mov	r1, #1
   153b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153bc:	bl	204fc <__assert_fail@plt+0xf3a4>
   153c0:	mov	r3, r0
   153c4:	cmp	r3, #0
   153c8:	bne	153d4 <__assert_fail@plt+0x427c>
   153cc:	mov	r3, #0
   153d0:	b	153f4 <__assert_fail@plt+0x429c>
   153d4:	ldr	r3, [fp, #-8]
   153d8:	add	r3, r3, #1
   153dc:	str	r3, [fp, #-8]
   153e0:	ldr	r2, [fp, #-8]
   153e4:	ldr	r3, [fp, #8]
   153e8:	cmp	r2, r3
   153ec:	bcc	15380 <__assert_fail@plt+0x4228>
   153f0:	mov	r3, #0
   153f4:	mov	r0, r3
   153f8:	sub	sp, fp, #4
   153fc:	pop	{fp, pc}
   15400:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15404:	add	fp, sp, #28
   15408:	sub	sp, sp, #624	; 0x270
   1540c:	sub	r3, fp, #572	; 0x23c
   15410:	strd	r0, [r3, #-8]
   15414:	sub	r3, fp, #572	; 0x23c
   15418:	ldrd	r2, [r3, #-8]
   1541c:	cmp	r3, #0
   15420:	cmpeq	r2, #1
   15424:	bhi	15430 <__assert_fail@plt+0x42d8>
   15428:	mov	r3, #0
   1542c:	b	15f48 <__assert_fail@plt+0x4df0>
   15430:	sub	r3, fp, #572	; 0x23c
   15434:	ldrd	r0, [r3, #-8]
   15438:	add	r3, pc, #680	; 0x2a8
   1543c:	ldrd	r2, [r3]
   15440:	cmp	r1, r3
   15444:	cmpeq	r0, r2
   15448:	bhi	15454 <__assert_fail@plt+0x42fc>
   1544c:	mov	r3, #1
   15450:	b	15f48 <__assert_fail@plt+0x4df0>
   15454:	sub	r3, fp, #572	; 0x23c
   15458:	ldrd	r2, [r3, #-8]
   1545c:	subs	r2, r2, #1
   15460:	sbc	r3, r3, #0
   15464:	strd	r2, [fp, #-52]	; 0xffffffcc
   15468:	mov	r3, #0
   1546c:	str	r3, [fp, #-32]	; 0xffffffe0
   15470:	b	15490 <__assert_fail@plt+0x4338>
   15474:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15478:	lsrs	r3, r3, #1
   1547c:	rrx	r2, r2
   15480:	strd	r2, [fp, #-52]	; 0xffffffcc
   15484:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15488:	add	r3, r3, #1
   1548c:	str	r3, [fp, #-32]	; 0xffffffe0
   15490:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   15494:	mov	r2, #1
   15498:	mov	r3, #0
   1549c:	and	r2, r2, r0
   154a0:	and	r3, r3, r1
   154a4:	orrs	r3, r2, r3
   154a8:	beq	15474 <__assert_fail@plt+0x431c>
   154ac:	mov	r2, #2
   154b0:	mov	r3, #0
   154b4:	strd	r2, [fp, #-60]	; 0xffffffc4
   154b8:	sub	r3, fp, #572	; 0x23c
   154bc:	ldrd	r2, [r3, #-8]
   154c0:	strd	r2, [fp, #-180]	; 0xffffff4c
   154c4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   154c8:	lsrs	r1, r3, #1
   154cc:	rrx	r0, r2
   154d0:	mov	r2, #127	; 0x7f
   154d4:	mov	r3, #0
   154d8:	and	r2, r2, r0
   154dc:	and	r3, r3, r1
   154e0:	ldr	r1, [pc, #520]	; 156f0 <__assert_fail@plt+0x4598>
   154e4:	add	r3, r1, r2
   154e8:	ldrb	r3, [r3]
   154ec:	uxtb	r2, r3
   154f0:	mov	r3, #0
   154f4:	strd	r2, [fp, #-188]	; 0xffffff44
   154f8:	ldrd	r2, [fp, #-188]	; 0xffffff44
   154fc:	adds	r2, r2, r2
   15500:	adc	r3, r3, r3
   15504:	mov	r4, r2
   15508:	mov	r5, r3
   1550c:	ldr	r2, [fp, #-184]	; 0xffffff48
   15510:	ldr	r3, [fp, #-188]	; 0xffffff44
   15514:	mul	r1, r3, r2
   15518:	ldr	r2, [fp, #-184]	; 0xffffff48
   1551c:	ldr	r3, [fp, #-188]	; 0xffffff44
   15520:	mul	r3, r3, r2
   15524:	add	r1, r1, r3
   15528:	ldr	r2, [fp, #-188]	; 0xffffff44
   1552c:	ldr	r3, [fp, #-188]	; 0xffffff44
   15530:	umull	r2, r3, r2, r3
   15534:	add	r1, r1, r3
   15538:	mov	r3, r1
   1553c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15540:	mul	r0, r3, r1
   15544:	ldr	r1, [fp, #-176]	; 0xffffff50
   15548:	mul	r1, r2, r1
   1554c:	add	ip, r0, r1
   15550:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15554:	umull	r0, r1, r1, r2
   15558:	add	r3, ip, r1
   1555c:	mov	r1, r3
   15560:	mov	r2, r4
   15564:	mov	r3, r5
   15568:	subs	r2, r2, r0
   1556c:	sbc	r3, r3, r1
   15570:	strd	r2, [fp, #-188]	; 0xffffff44
   15574:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15578:	adds	r2, r2, r2
   1557c:	adc	r3, r3, r3
   15580:	mov	r4, r2
   15584:	mov	r5, r3
   15588:	ldr	r2, [fp, #-184]	; 0xffffff48
   1558c:	ldr	r3, [fp, #-188]	; 0xffffff44
   15590:	mul	r1, r3, r2
   15594:	ldr	r2, [fp, #-184]	; 0xffffff48
   15598:	ldr	r3, [fp, #-188]	; 0xffffff44
   1559c:	mul	r3, r3, r2
   155a0:	add	r1, r1, r3
   155a4:	ldr	r2, [fp, #-188]	; 0xffffff44
   155a8:	ldr	r3, [fp, #-188]	; 0xffffff44
   155ac:	umull	r2, r3, r2, r3
   155b0:	add	r1, r1, r3
   155b4:	mov	r3, r1
   155b8:	ldr	r1, [fp, #-180]	; 0xffffff4c
   155bc:	mul	r0, r3, r1
   155c0:	ldr	r1, [fp, #-176]	; 0xffffff50
   155c4:	mul	r1, r2, r1
   155c8:	add	ip, r0, r1
   155cc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   155d0:	umull	r0, r1, r1, r2
   155d4:	add	r3, ip, r1
   155d8:	mov	r1, r3
   155dc:	mov	r2, r4
   155e0:	mov	r3, r5
   155e4:	subs	r2, r2, r0
   155e8:	sbc	r3, r3, r1
   155ec:	strd	r2, [fp, #-188]	; 0xffffff44
   155f0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   155f4:	adds	r2, r2, r2
   155f8:	adc	r3, r3, r3
   155fc:	mov	r4, r2
   15600:	mov	r5, r3
   15604:	ldr	r2, [fp, #-184]	; 0xffffff48
   15608:	ldr	r3, [fp, #-188]	; 0xffffff44
   1560c:	mul	r1, r3, r2
   15610:	ldr	r2, [fp, #-184]	; 0xffffff48
   15614:	ldr	r3, [fp, #-188]	; 0xffffff44
   15618:	mul	r3, r3, r2
   1561c:	add	r1, r1, r3
   15620:	ldr	r2, [fp, #-188]	; 0xffffff44
   15624:	ldr	r3, [fp, #-188]	; 0xffffff44
   15628:	umull	r2, r3, r2, r3
   1562c:	add	r1, r1, r3
   15630:	mov	r3, r1
   15634:	ldr	r1, [fp, #-180]	; 0xffffff4c
   15638:	mul	r0, r3, r1
   1563c:	ldr	r1, [fp, #-176]	; 0xffffff50
   15640:	mul	r1, r2, r1
   15644:	add	ip, r0, r1
   15648:	ldr	r1, [fp, #-180]	; 0xffffff4c
   1564c:	umull	r0, r1, r1, r2
   15650:	add	r3, ip, r1
   15654:	mov	r1, r3
   15658:	mov	r2, r4
   1565c:	mov	r3, r5
   15660:	subs	r2, r2, r0
   15664:	sbc	r3, r3, r1
   15668:	strd	r2, [fp, #-188]	; 0xffffff44
   1566c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   15670:	strd	r2, [fp, #-196]	; 0xffffff3c
   15674:	sub	r3, fp, #572	; 0x23c
   15678:	ldrd	r2, [r3, #-8]
   1567c:	cmp	r3, #0
   15680:	cmpeq	r2, #1
   15684:	bhi	1569c <__assert_fail@plt+0x4544>
   15688:	ldr	r3, [pc, #116]	; 15704 <__assert_fail@plt+0x45ac>
   1568c:	ldr	r2, [pc, #96]	; 156f4 <__assert_fail@plt+0x459c>
   15690:	ldr	r1, [pc, #120]	; 15710 <__assert_fail@plt+0x45b8>
   15694:	ldr	r0, [pc, #92]	; 156f8 <__assert_fail@plt+0x45a0>
   15698:	bl	11158 <__assert_fail@plt>
   1569c:	sub	r3, fp, #572	; 0x23c
   156a0:	ldrd	r2, [r3, #-8]
   156a4:	strd	r2, [fp, #-68]	; 0xffffffbc
   156a8:	mov	r2, #0
   156ac:	mov	r3, #0
   156b0:	strd	r2, [fp, #-76]	; 0xffffffb4
   156b4:	mov	r2, #1
   156b8:	mov	r3, #0
   156bc:	strd	r2, [fp, #-92]	; 0xffffffa4
   156c0:	mov	r2, #0
   156c4:	mov	r3, #0
   156c8:	strd	r2, [fp, #-100]	; 0xffffff9c
   156cc:	mov	r2, #0
   156d0:	mov	r3, #0
   156d4:	strd	r2, [fp, #-84]	; 0xffffffac
   156d8:	mov	r3, #64	; 0x40
   156dc:	str	r3, [fp, #-104]	; 0xffffff98
   156e0:	b	15810 <__assert_fail@plt+0x46b8>
   156e4:	nop			; (mov r0, r0)
   156e8:	cmneq	sp, r8, ror sp
   156ec:	andeq	r0, r0, r0
   156f0:	andeq	r3, r3, ip, asr #10
   156f4:			; <UNDEFINED> instruction: 0x000004be
   156f8:	andeq	r3, r3, ip, lsr #12
   156fc:	andeq	r5, r4, r4, lsl r1
   15700:			; <UNDEFINED> instruction: 0x000305bc
   15704:	andeq	r3, r3, ip, asr r9
   15708:	andeq	r0, r0, lr, ror #9
   1570c:	andeq	r3, r3, r8, lsr r6
   15710:	andeq	r0, r3, r4, lsl #11
   15714:	andeq	r3, r3, r4, asr #12
   15718:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1571c:	lsl	r7, r2, #31
   15720:	mov	r6, #0
   15724:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15728:	lsrs	r3, r3, #1
   1572c:	rrx	r2, r2
   15730:	orr	r2, r2, r6
   15734:	orr	r3, r3, r7
   15738:	strd	r2, [fp, #-76]	; 0xffffffb4
   1573c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15740:	lsrs	r3, r3, #1
   15744:	rrx	r2, r2
   15748:	strd	r2, [fp, #-68]	; 0xffffffbc
   1574c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15750:	adds	r2, r2, r2
   15754:	adc	r3, r3, r3
   15758:	strd	r2, [fp, #-84]	; 0xffffffac
   1575c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   15760:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15764:	cmp	r1, r3
   15768:	cmpeq	r0, r2
   1576c:	bhi	15798 <__assert_fail@plt+0x4640>
   15770:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   15774:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15778:	cmp	r1, r3
   1577c:	cmpeq	r0, r2
   15780:	bne	15804 <__assert_fail@plt+0x46ac>
   15784:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   15788:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1578c:	cmp	r1, r3
   15790:	cmpeq	r0, r2
   15794:	bcc	15804 <__assert_fail@plt+0x46ac>
   15798:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1579c:	adds	r2, r2, #1
   157a0:	adc	r3, r3, #0
   157a4:	strd	r2, [fp, #-84]	; 0xffffffac
   157a8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   157ac:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   157b0:	cmp	r1, r3
   157b4:	cmpeq	r0, r2
   157b8:	movcc	r3, #1
   157bc:	movcs	r3, #0
   157c0:	uxtb	r3, r3
   157c4:	uxtb	r2, r3
   157c8:	mov	r3, #0
   157cc:	strd	r2, [fp, #-204]	; 0xffffff34
   157d0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   157d4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   157d8:	subs	r2, r0, r2
   157dc:	sbc	r3, r1, r3
   157e0:	strd	r2, [fp, #-100]	; 0xffffff9c
   157e4:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   157e8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   157ec:	subs	r0, r0, r2
   157f0:	sbc	r1, r1, r3
   157f4:	ldrd	r2, [fp, #-204]	; 0xffffff34
   157f8:	subs	r2, r0, r2
   157fc:	sbc	r3, r1, r3
   15800:	strd	r2, [fp, #-92]	; 0xffffffa4
   15804:	ldr	r3, [fp, #-104]	; 0xffffff98
   15808:	sub	r3, r3, #1
   1580c:	str	r3, [fp, #-104]	; 0xffffff98
   15810:	ldr	r3, [fp, #-104]	; 0xffffff98
   15814:	cmp	r3, #0
   15818:	bne	15718 <__assert_fail@plt+0x45c0>
   1581c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   15820:	strd	r2, [fp, #-212]	; 0xffffff2c
   15824:	ldrd	r2, [fp, #-84]	; 0xffffffac
   15828:	strd	r2, [fp, #-220]	; 0xffffff24
   1582c:	sub	r3, fp, #572	; 0x23c
   15830:	ldrd	r0, [r3, #-8]
   15834:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   15838:	subs	r0, r0, r2
   1583c:	sbc	r1, r1, r3
   15840:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   15844:	cmp	r1, r3
   15848:	cmpeq	r0, r2
   1584c:	movhi	r3, #1
   15850:	movls	r3, #0
   15854:	uxtb	r3, r3
   15858:	uxtb	r2, r3
   1585c:	mov	r3, #0
   15860:	rsbs	r2, r2, #0
   15864:	rsc	r3, r3, #0
   15868:	strd	r2, [fp, #-228]	; 0xffffff1c
   1586c:	sub	r3, fp, #572	; 0x23c
   15870:	ldrd	r0, [r3, #-8]
   15874:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   15878:	and	r0, r0, r2
   1587c:	and	r1, r1, r3
   15880:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   15884:	adds	r4, r0, r2
   15888:	adc	r5, r1, r3
   1588c:	sub	r3, fp, #572	; 0x23c
   15890:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   15894:	ldrd	r2, [r3, #-8]
   15898:	subs	r2, r0, r2
   1589c:	sbc	r3, r1, r3
   158a0:	adds	r2, r2, r4
   158a4:	adc	r3, r3, r5
   158a8:	strd	r2, [fp, #-44]	; 0xffffffd4
   158ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   158b0:	sub	r3, fp, #572	; 0x23c
   158b4:	mov	r0, r3
   158b8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   158bc:	strd	r2, [sp, #24]
   158c0:	str	r1, [sp, #16]
   158c4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   158c8:	strd	r2, [sp, #8]
   158cc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   158d0:	strd	r2, [sp]
   158d4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   158d8:	ldrd	r0, [r0, #-8]
   158dc:	bl	14fd4 <__assert_fail@plt+0x3e7c>
   158e0:	mov	r3, r0
   158e4:	eor	r3, r3, #1
   158e8:	uxtb	r3, r3
   158ec:	cmp	r3, #0
   158f0:	beq	158fc <__assert_fail@plt+0x47a4>
   158f4:	mov	r3, #0
   158f8:	b	15f48 <__assert_fail@plt+0x4df0>
   158fc:	ldr	r3, [pc, #-520]	; 156fc <__assert_fail@plt+0x45a4>
   15900:	ldrb	r3, [r3]
   15904:	cmp	r3, #0
   15908:	beq	15938 <__assert_fail@plt+0x47e0>
   1590c:	sub	r3, fp, #572	; 0x23c
   15910:	ldrd	r2, [r3, #-8]
   15914:	subs	r0, r2, #1
   15918:	sbc	r1, r3, #0
   1591c:	sub	r3, fp, #572	; 0x23c
   15920:	str	r3, [sp]
   15924:	mov	r2, r0
   15928:	mov	r3, r1
   1592c:	mov	r0, #0
   15930:	mov	r1, #0
   15934:	bl	19a50 <__assert_fail@plt+0x88f8>
   15938:	mov	r3, #0
   1593c:	str	r3, [fp, #-108]	; 0xffffff94
   15940:	b	15f1c <__assert_fail@plt+0x4dc4>
   15944:	ldr	r3, [pc, #-592]	; 156fc <__assert_fail@plt+0x45a4>
   15948:	ldrb	r3, [r3]
   1594c:	cmp	r3, #0
   15950:	beq	15a1c <__assert_fail@plt+0x48c4>
   15954:	mov	r3, #1
   15958:	strb	r3, [fp, #-33]	; 0xffffffdf
   1595c:	mov	r3, #0
   15960:	str	r3, [fp, #-112]	; 0xffffff90
   15964:	b	159f8 <__assert_fail@plt+0x48a0>
   15968:	sub	r3, fp, #572	; 0x23c
   1596c:	ldrd	r2, [r3, #-8]
   15970:	subs	r0, r2, #1
   15974:	sbc	r1, r3, #0
   15978:	sub	r3, fp, #572	; 0x23c
   1597c:	mov	r2, r3
   15980:	ldr	r3, [fp, #-112]	; 0xffffff90
   15984:	add	r3, r3, #2
   15988:	lsl	r3, r3, #3
   1598c:	add	r3, r2, r3
   15990:	ldrd	r2, [r3]
   15994:	bl	3017c <__assert_fail@plt+0x1f024>
   15998:	mov	r2, r0
   1599c:	mov	r3, r1
   159a0:	mov	r0, r2
   159a4:	mov	r1, r3
   159a8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   159ac:	strd	r2, [sp, #16]
   159b0:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   159b4:	strd	r2, [sp, #8]
   159b8:	sub	r3, fp, #572	; 0x23c
   159bc:	ldrd	r2, [r3, #-8]
   159c0:	strd	r2, [sp]
   159c4:	mov	r2, r0
   159c8:	mov	r3, r1
   159cc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   159d0:	bl	14cac <__assert_fail@plt+0x3b54>
   159d4:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   159d8:	cmp	r1, r3
   159dc:	cmpeq	r0, r2
   159e0:	movne	r3, #1
   159e4:	moveq	r3, #0
   159e8:	strb	r3, [fp, #-33]	; 0xffffffdf
   159ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   159f0:	add	r3, r3, #1
   159f4:	str	r3, [fp, #-112]	; 0xffffff90
   159f8:	ldrb	r3, [fp, #-322]	; 0xfffffebe
   159fc:	mov	r2, r3
   15a00:	ldr	r3, [fp, #-112]	; 0xffffff90
   15a04:	cmp	r2, r3
   15a08:	bls	15a30 <__assert_fail@plt+0x48d8>
   15a0c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15a10:	cmp	r3, #0
   15a14:	bne	15968 <__assert_fail@plt+0x4810>
   15a18:	b	15a30 <__assert_fail@plt+0x48d8>
   15a1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a20:	cmp	r3, #24
   15a24:	moveq	r3, #1
   15a28:	movne	r3, #0
   15a2c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15a30:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15a34:	cmp	r3, #0
   15a38:	beq	15a44 <__assert_fail@plt+0x48ec>
   15a3c:	mov	r3, #1
   15a40:	b	15f48 <__assert_fail@plt+0x4df0>
   15a44:	ldr	r2, [pc, #-844]	; 15700 <__assert_fail@plt+0x45a8>
   15a48:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a4c:	add	r3, r2, r3
   15a50:	ldrb	r3, [r3]
   15a54:	uxtb	r0, r3
   15a58:	mov	r1, #0
   15a5c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15a60:	adds	r2, r2, r0
   15a64:	adc	r3, r3, r1
   15a68:	strd	r2, [fp, #-60]	; 0xffffffc4
   15a6c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   15a70:	strd	r2, [fp, #-236]	; 0xffffff14
   15a74:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15a78:	strd	r2, [fp, #-244]	; 0xffffff0c
   15a7c:	ldr	r3, [fp, #-236]	; 0xffffff14
   15a80:	str	r3, [fp, #-248]	; 0xffffff08
   15a84:	ldrd	r2, [fp, #-236]	; 0xffffff14
   15a88:	mov	r3, r3
   15a8c:	str	r3, [fp, #-588]	; 0xfffffdb4
   15a90:	mov	r3, #0
   15a94:	str	r3, [fp, #-584]	; 0xfffffdb8
   15a98:	ldr	r3, [fp, #-588]	; 0xfffffdb4
   15a9c:	str	r3, [fp, #-252]	; 0xffffff04
   15aa0:	ldr	r3, [fp, #-244]	; 0xffffff0c
   15aa4:	str	r3, [fp, #-256]	; 0xffffff00
   15aa8:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   15aac:	mov	r3, r3
   15ab0:	str	r3, [fp, #-596]	; 0xfffffdac
   15ab4:	mov	r3, #0
   15ab8:	str	r3, [fp, #-592]	; 0xfffffdb0
   15abc:	ldr	r3, [fp, #-596]	; 0xfffffdac
   15ac0:	str	r3, [fp, #-260]	; 0xfffffefc
   15ac4:	ldr	r3, [fp, #-248]	; 0xffffff08
   15ac8:	mov	r0, r3
   15acc:	mov	r1, #0
   15ad0:	ldr	r3, [fp, #-256]	; 0xffffff00
   15ad4:	mov	r2, r3
   15ad8:	mov	r3, #0
   15adc:	mul	lr, r2, r1
   15ae0:	mul	ip, r0, r3
   15ae4:	add	ip, lr, ip
   15ae8:	umull	r2, r3, r0, r2
   15aec:	add	r1, ip, r3
   15af0:	mov	r3, r1
   15af4:	sub	r1, fp, #268	; 0x10c
   15af8:	strd	r2, [r1]
   15afc:	sub	r1, fp, #268	; 0x10c
   15b00:	strd	r2, [r1]
   15b04:	ldr	r3, [fp, #-248]	; 0xffffff08
   15b08:	mov	r0, r3
   15b0c:	mov	r1, #0
   15b10:	ldr	r3, [fp, #-260]	; 0xfffffefc
   15b14:	mov	r2, r3
   15b18:	mov	r3, #0
   15b1c:	mul	lr, r2, r1
   15b20:	mul	ip, r0, r3
   15b24:	add	ip, lr, ip
   15b28:	umull	r2, r3, r0, r2
   15b2c:	add	r1, ip, r3
   15b30:	mov	r3, r1
   15b34:	sub	r1, fp, #276	; 0x114
   15b38:	strd	r2, [r1]
   15b3c:	sub	r1, fp, #276	; 0x114
   15b40:	strd	r2, [r1]
   15b44:	ldr	r3, [fp, #-252]	; 0xffffff04
   15b48:	mov	r4, r3
   15b4c:	mov	r5, #0
   15b50:	ldr	r3, [fp, #-256]	; 0xffffff00
   15b54:	mov	r2, r3
   15b58:	mov	r3, #0
   15b5c:	sub	r1, fp, #284	; 0x11c
   15b60:	mov	ip, r1
   15b64:	mul	r0, r2, r5
   15b68:	mul	r1, r4, r3
   15b6c:	add	r1, r0, r1
   15b70:	umull	r2, r3, r4, r2
   15b74:	add	r1, r1, r3
   15b78:	mov	r3, r1
   15b7c:	strd	r2, [ip]
   15b80:	strd	r2, [ip]
   15b84:	ldr	r3, [fp, #-252]	; 0xffffff04
   15b88:	mov	r0, r3
   15b8c:	mov	r1, #0
   15b90:	ldr	r3, [fp, #-260]	; 0xfffffefc
   15b94:	mov	r2, r3
   15b98:	mov	r3, #0
   15b9c:	mul	lr, r2, r1
   15ba0:	mul	ip, r0, r3
   15ba4:	add	ip, lr, ip
   15ba8:	umull	r2, r3, r0, r2
   15bac:	add	r1, ip, r3
   15bb0:	mov	r3, r1
   15bb4:	strd	r2, [fp, #-124]	; 0xffffff84
   15bb8:	strd	r2, [fp, #-124]	; 0xffffff84
   15bbc:	sub	r3, fp, #268	; 0x10c
   15bc0:	ldrd	r2, [r3]
   15bc4:	mov	r8, r3
   15bc8:	mov	r9, #0
   15bcc:	sub	r3, fp, #276	; 0x114
   15bd0:	ldrd	r2, [r3]
   15bd4:	adds	r2, r2, r8
   15bd8:	adc	r3, r3, r9
   15bdc:	sub	r1, fp, #276	; 0x114
   15be0:	strd	r2, [r1]
   15be4:	sub	r3, fp, #284	; 0x11c
   15be8:	sub	r2, fp, #276	; 0x114
   15bec:	ldrd	r0, [r2]
   15bf0:	ldrd	r2, [r3]
   15bf4:	adds	r2, r2, r0
   15bf8:	adc	r3, r3, r1
   15bfc:	sub	r1, fp, #276	; 0x114
   15c00:	strd	r2, [r1]
   15c04:	sub	r3, fp, #284	; 0x11c
   15c08:	sub	r2, fp, #276	; 0x114
   15c0c:	ldrd	r0, [r2]
   15c10:	ldrd	r2, [r3]
   15c14:	cmp	r1, r3
   15c18:	cmpeq	r0, r2
   15c1c:	bcs	15c30 <__assert_fail@plt+0x4ad8>
   15c20:	ldrd	r2, [fp, #-124]	; 0xffffff84
   15c24:	adds	r2, r2, #0
   15c28:	adc	r3, r3, #1
   15c2c:	strd	r2, [fp, #-124]	; 0xffffff84
   15c30:	sub	r3, fp, #276	; 0x114
   15c34:	ldrd	r2, [r3]
   15c38:	mov	r3, r3
   15c3c:	str	r3, [fp, #-604]	; 0xfffffda4
   15c40:	mov	r3, #0
   15c44:	str	r3, [fp, #-600]	; 0xfffffda8
   15c48:	sub	r3, fp, #284	; 0x11c
   15c4c:	mov	r1, r3
   15c50:	ldrd	r2, [fp, #-124]	; 0xffffff84
   15c54:	sub	r0, fp, #604	; 0x25c
   15c58:	ldrd	r4, [r0]
   15c5c:	adds	r4, r4, r2
   15c60:	adc	r5, r5, r3
   15c64:	mov	r2, r4
   15c68:	mov	r3, r5
   15c6c:	strd	r2, [r1, #-8]
   15c70:	sub	r3, fp, #276	; 0x114
   15c74:	ldrd	r2, [r3]
   15c78:	mov	r3, r2
   15c7c:	str	r3, [fp, #-608]	; 0xfffffda0
   15c80:	mov	r3, #0
   15c84:	str	r3, [fp, #-612]	; 0xfffffd9c
   15c88:	sub	r3, fp, #268	; 0x10c
   15c8c:	ldrd	r0, [r3]
   15c90:	mvn	r2, #0
   15c94:	mov	r3, #0
   15c98:	and	r0, r0, r2
   15c9c:	and	r1, r1, r3
   15ca0:	sub	r3, fp, #300	; 0x12c
   15ca4:	mov	ip, r3
   15ca8:	sub	r3, fp, #612	; 0x264
   15cac:	ldrd	r2, [r3]
   15cb0:	adds	r2, r2, r0
   15cb4:	adc	r3, r3, r1
   15cb8:	strd	r2, [ip]
   15cbc:	sub	r3, fp, #284	; 0x11c
   15cc0:	ldr	r2, [r3, #-8]
   15cc4:	ldr	r3, [r3, #-4]
   15cc8:	orr	r3, r2, r3
   15ccc:	cmp	r3, #0
   15cd0:	moveq	r3, #1
   15cd4:	movne	r3, #0
   15cd8:	uxtb	r3, r3
   15cdc:	cmp	r3, #0
   15ce0:	beq	15d04 <__assert_fail@plt+0x4bac>
   15ce4:	sub	r3, fp, #300	; 0x12c
   15ce8:	mov	r2, r3
   15cec:	sub	r3, fp, #572	; 0x23c
   15cf0:	ldrd	r0, [r2]
   15cf4:	ldrd	r2, [r3, #-8]
   15cf8:	bl	3017c <__assert_fail@plt+0x1f024>
   15cfc:	strd	r2, [fp, #-44]	; 0xffffffd4
   15d00:	b	15ec0 <__assert_fail@plt+0x4d68>
   15d04:	sub	r3, fp, #284	; 0x11c
   15d08:	mov	r2, r3
   15d0c:	sub	r3, fp, #572	; 0x23c
   15d10:	ldrd	r0, [r2, #-8]
   15d14:	ldrd	r2, [r3, #-8]
   15d18:	cmp	r1, r3
   15d1c:	cmpeq	r0, r2
   15d20:	bcc	15d38 <__assert_fail@plt+0x4be0>
   15d24:	ldr	r3, [pc, #-1576]	; 15704 <__assert_fail@plt+0x45ac>
   15d28:	ldr	r2, [pc, #-1576]	; 15708 <__assert_fail@plt+0x45b0>
   15d2c:	ldr	r1, [pc, #-1572]	; 15710 <__assert_fail@plt+0x45b8>
   15d30:	ldr	r0, [pc, #-1580]	; 1570c <__assert_fail@plt+0x45b4>
   15d34:	bl	11158 <__assert_fail@plt>
   15d38:	sub	r3, fp, #572	; 0x23c
   15d3c:	ldrd	r2, [r3, #-8]
   15d40:	strd	r2, [fp, #-132]	; 0xffffff7c
   15d44:	mov	r2, #0
   15d48:	mov	r3, #0
   15d4c:	strd	r2, [fp, #-140]	; 0xffffff74
   15d50:	sub	r3, fp, #284	; 0x11c
   15d54:	ldrd	r2, [r3, #-8]
   15d58:	strd	r2, [fp, #-156]	; 0xffffff64
   15d5c:	sub	r3, fp, #300	; 0x12c
   15d60:	ldrd	r2, [r3]
   15d64:	strd	r2, [fp, #-164]	; 0xffffff5c
   15d68:	mov	r2, #0
   15d6c:	mov	r3, #0
   15d70:	strd	r2, [fp, #-148]	; 0xffffff6c
   15d74:	mov	r3, #64	; 0x40
   15d78:	str	r3, [fp, #-168]	; 0xffffff58
   15d7c:	b	15e9c <__assert_fail@plt+0x4d44>
   15d80:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   15d84:	lsl	r3, r2, #31
   15d88:	str	r3, [fp, #-616]	; 0xfffffd98
   15d8c:	mov	r3, #0
   15d90:	str	r3, [fp, #-620]	; 0xfffffd94
   15d94:	ldrd	r2, [fp, #-140]	; 0xffffff74
   15d98:	lsrs	r3, r3, #1
   15d9c:	rrx	r2, r2
   15da0:	sub	r1, fp, #620	; 0x26c
   15da4:	ldrd	r0, [r1]
   15da8:	orr	r0, r0, r2
   15dac:	orr	r1, r1, r3
   15db0:	mov	r2, r0
   15db4:	mov	r3, r1
   15db8:	strd	r2, [fp, #-140]	; 0xffffff74
   15dbc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   15dc0:	lsrs	r3, r3, #1
   15dc4:	rrx	r2, r2
   15dc8:	strd	r2, [fp, #-132]	; 0xffffff7c
   15dcc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   15dd0:	adds	r2, r2, r2
   15dd4:	adc	r3, r3, r3
   15dd8:	strd	r2, [fp, #-148]	; 0xffffff6c
   15ddc:	ldrd	r0, [fp, #-156]	; 0xffffff64
   15de0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   15de4:	cmp	r1, r3
   15de8:	cmpeq	r0, r2
   15dec:	bhi	15e18 <__assert_fail@plt+0x4cc0>
   15df0:	ldrd	r0, [fp, #-156]	; 0xffffff64
   15df4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   15df8:	cmp	r1, r3
   15dfc:	cmpeq	r0, r2
   15e00:	bne	15e90 <__assert_fail@plt+0x4d38>
   15e04:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   15e08:	ldrd	r2, [fp, #-140]	; 0xffffff74
   15e0c:	cmp	r1, r3
   15e10:	cmpeq	r0, r2
   15e14:	bcc	15e90 <__assert_fail@plt+0x4d38>
   15e18:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   15e1c:	adds	r2, r2, #1
   15e20:	adc	r3, r3, #0
   15e24:	strd	r2, [fp, #-148]	; 0xffffff6c
   15e28:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   15e2c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   15e30:	cmp	r1, r3
   15e34:	cmpeq	r0, r2
   15e38:	movcc	r3, #1
   15e3c:	movcs	r3, #0
   15e40:	uxtb	r2, r3
   15e44:	sub	r3, fp, #300	; 0x12c
   15e48:	mov	r1, r3
   15e4c:	uxtb	r2, r2
   15e50:	mov	r3, #0
   15e54:	strd	r2, [r1, #-8]
   15e58:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   15e5c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   15e60:	subs	r2, r0, r2
   15e64:	sbc	r3, r1, r3
   15e68:	strd	r2, [fp, #-164]	; 0xffffff5c
   15e6c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   15e70:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   15e74:	subs	r0, r0, r2
   15e78:	sbc	r1, r1, r3
   15e7c:	sub	r3, fp, #300	; 0x12c
   15e80:	ldrd	r2, [r3, #-8]
   15e84:	subs	r2, r0, r2
   15e88:	sbc	r3, r1, r3
   15e8c:	strd	r2, [fp, #-156]	; 0xffffff64
   15e90:	ldr	r3, [fp, #-168]	; 0xffffff58
   15e94:	sub	r3, r3, #1
   15e98:	str	r3, [fp, #-168]	; 0xffffff58
   15e9c:	ldr	r3, [fp, #-168]	; 0xffffff58
   15ea0:	cmp	r3, #0
   15ea4:	bne	15d80 <__assert_fail@plt+0x4c28>
   15ea8:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   15eac:	strd	r2, [fp, #-44]	; 0xffffffd4
   15eb0:	sub	r3, fp, #316	; 0x13c
   15eb4:	mov	r1, r3
   15eb8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   15ebc:	strd	r2, [r1]
   15ec0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ec4:	sub	r3, fp, #572	; 0x23c
   15ec8:	mov	r0, r3
   15ecc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   15ed0:	strd	r2, [sp, #24]
   15ed4:	str	r1, [sp, #16]
   15ed8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15edc:	strd	r2, [sp, #8]
   15ee0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15ee4:	strd	r2, [sp]
   15ee8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   15eec:	ldrd	r0, [r0, #-8]
   15ef0:	bl	14fd4 <__assert_fail@plt+0x3e7c>
   15ef4:	mov	r3, r0
   15ef8:	eor	r3, r3, #1
   15efc:	uxtb	r3, r3
   15f00:	cmp	r3, #0
   15f04:	beq	15f10 <__assert_fail@plt+0x4db8>
   15f08:	mov	r3, #0
   15f0c:	b	15f48 <__assert_fail@plt+0x4df0>
   15f10:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f14:	add	r3, r3, #1
   15f18:	str	r3, [fp, #-108]	; 0xffffff94
   15f1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f20:	cmp	r3, #668	; 0x29c
   15f24:	bcc	15944 <__assert_fail@plt+0x47ec>
   15f28:	ldr	r0, [pc, #-2076]	; 15714 <__assert_fail@plt+0x45bc>
   15f2c:	bl	11044 <gettext@plt>
   15f30:	mov	r3, r0
   15f34:	mov	r2, r3
   15f38:	mov	r1, #0
   15f3c:	mov	r0, #0
   15f40:	bl	10fcc <error@plt>
   15f44:	bl	11140 <abort@plt>
   15f48:	mov	r0, r3
   15f4c:	sub	sp, fp, #28
   15f50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f58:	add	fp, sp, #28
   15f5c:	sub	sp, sp, #776	; 0x308
   15f60:	sub	ip, fp, #700	; 0x2bc
   15f64:	strd	r0, [ip, #-8]
   15f68:	sub	r1, fp, #716	; 0x2cc
   15f6c:	strd	r2, [r1]
   15f70:	sub	r3, fp, #700	; 0x2bc
   15f74:	ldrd	r2, [r3, #-8]
   15f78:	orrs	r3, r2, r3
   15f7c:	bne	15f94 <__assert_fail@plt+0x4e3c>
   15f80:	sub	r3, fp, #716	; 0x2cc
   15f84:	ldrd	r0, [r3]
   15f88:	bl	15400 <__assert_fail@plt+0x42a8>
   15f8c:	mov	r3, r0
   15f90:	b	172f0 <__assert_fail@plt+0x6198>
   15f94:	sub	r3, fp, #716	; 0x2cc
   15f98:	ldr	r2, [r3]
   15f9c:	ldr	r3, [r3, #4]
   15fa0:	orr	r3, r2, r3
   15fa4:	cmp	r3, #0
   15fa8:	moveq	r3, #1
   15fac:	movne	r3, #0
   15fb0:	uxtb	r3, r3
   15fb4:	uxtb	r0, r3
   15fb8:	mov	r1, #0
   15fbc:	sub	r3, fp, #700	; 0x2bc
   15fc0:	ldrd	r2, [r3, #-8]
   15fc4:	subs	r2, r2, r0
   15fc8:	sbc	r3, r3, r1
   15fcc:	sub	r1, fp, #364	; 0x16c
   15fd0:	strd	r2, [r1, #8]
   15fd4:	sub	r3, fp, #716	; 0x2cc
   15fd8:	ldrd	r2, [r3]
   15fdc:	subs	r2, r2, #1
   15fe0:	sbc	r3, r3, #0
   15fe4:	sub	r1, fp, #364	; 0x16c
   15fe8:	strd	r2, [r1]
   15fec:	sub	r3, fp, #364	; 0x16c
   15ff0:	ldrd	r2, [r3]
   15ff4:	orrs	r3, r2, r3
   15ff8:	bne	160a4 <__assert_fail@plt+0x4f4c>
   15ffc:	sub	r3, fp, #364	; 0x16c
   16000:	ldrd	r2, [r3, #8]
   16004:	strd	r2, [fp, #-44]	; 0xffffffd4
   16008:	mov	r3, #0
   1600c:	str	r3, [fp, #-48]	; 0xffffffd0
   16010:	b	16030 <__assert_fail@plt+0x4ed8>
   16014:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   16018:	lsrs	r3, r3, #1
   1601c:	rrx	r2, r2
   16020:	strd	r2, [fp, #-44]	; 0xffffffd4
   16024:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16028:	add	r3, r3, #1
   1602c:	str	r3, [fp, #-48]	; 0xffffffd0
   16030:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   16034:	mov	r2, #1
   16038:	mov	r3, #0
   1603c:	and	r2, r2, r0
   16040:	and	r3, r3, r1
   16044:	orrs	r3, r2, r3
   16048:	beq	16014 <__assert_fail@plt+0x4ebc>
   1604c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16050:	str	r3, [fp, #-32]	; 0xffffffe0
   16054:	sub	r3, fp, #364	; 0x16c
   16058:	ldrd	r2, [r3, #8]
   1605c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16060:	rsb	ip, r1, #32
   16064:	sub	r0, r1, #32
   16068:	lsr	r4, r2, r1
   1606c:	orr	r4, r4, r3, lsl ip
   16070:	orr	r4, r4, r3, lsr r0
   16074:	lsr	r5, r3, r1
   16078:	sub	r3, fp, #348	; 0x15c
   1607c:	strd	r4, [r3]
   16080:	sub	r3, fp, #348	; 0x15c
   16084:	mov	r1, r3
   16088:	mov	r2, #0
   1608c:	mov	r3, #0
   16090:	strd	r2, [r1, #8]
   16094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16098:	add	r3, r3, #64	; 0x40
   1609c:	str	r3, [fp, #-32]	; 0xffffffe0
   160a0:	b	161a4 <__assert_fail@plt+0x504c>
   160a4:	sub	r3, fp, #364	; 0x16c
   160a8:	ldrd	r2, [r3]
   160ac:	strd	r2, [fp, #-60]	; 0xffffffc4
   160b0:	mov	r3, #0
   160b4:	str	r3, [fp, #-64]	; 0xffffffc0
   160b8:	b	160d8 <__assert_fail@plt+0x4f80>
   160bc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   160c0:	lsrs	r3, r3, #1
   160c4:	rrx	r2, r2
   160c8:	strd	r2, [fp, #-60]	; 0xffffffc4
   160cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160d0:	add	r3, r3, #1
   160d4:	str	r3, [fp, #-64]	; 0xffffffc0
   160d8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   160dc:	mov	r2, #1
   160e0:	mov	r3, #0
   160e4:	and	r2, r2, r0
   160e8:	and	r3, r3, r1
   160ec:	orrs	r3, r2, r3
   160f0:	beq	160bc <__assert_fail@plt+0x4f64>
   160f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160f8:	str	r3, [fp, #-32]	; 0xffffffe0
   160fc:	sub	r3, fp, #364	; 0x16c
   16100:	ldrd	r2, [r3, #8]
   16104:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16108:	rsb	r1, r1, #64	; 0x40
   1610c:	sub	ip, r1, #32
   16110:	rsb	r0, r1, #32
   16114:	lsl	lr, r3, r1
   16118:	str	lr, [fp, #-720]	; 0xfffffd30
   1611c:	ldr	lr, [fp, #-720]	; 0xfffffd30
   16120:	orr	ip, lr, r2, lsl ip
   16124:	str	ip, [fp, #-720]	; 0xfffffd30
   16128:	ldr	ip, [fp, #-720]	; 0xfffffd30
   1612c:	orr	r0, ip, r2, lsr r0
   16130:	str	r0, [fp, #-720]	; 0xfffffd30
   16134:	lsl	r3, r2, r1
   16138:	str	r3, [fp, #-724]	; 0xfffffd2c
   1613c:	sub	r3, fp, #364	; 0x16c
   16140:	ldrd	r2, [r3]
   16144:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16148:	rsb	ip, r1, #32
   1614c:	sub	r0, r1, #32
   16150:	lsr	r6, r2, r1
   16154:	orr	r6, r6, r3, lsl ip
   16158:	orr	r6, r6, r3, lsr r0
   1615c:	lsr	r7, r3, r1
   16160:	sub	r3, fp, #724	; 0x2d4
   16164:	ldrd	r2, [r3]
   16168:	orr	r2, r2, r6
   1616c:	orr	r3, r3, r7
   16170:	sub	r1, fp, #348	; 0x15c
   16174:	strd	r2, [r1]
   16178:	sub	r3, fp, #364	; 0x16c
   1617c:	ldrd	r2, [r3, #8]
   16180:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16184:	rsb	ip, r1, #32
   16188:	sub	r0, r1, #32
   1618c:	lsr	r8, r2, r1
   16190:	orr	r8, r8, r3, lsl ip
   16194:	orr	r8, r8, r3, lsr r0
   16198:	lsr	r9, r3, r1
   1619c:	sub	r3, fp, #348	; 0x15c
   161a0:	strd	r8, [r3, #8]
   161a4:	mov	r2, #2
   161a8:	mov	r3, #0
   161ac:	strd	r2, [fp, #-76]	; 0xffffffb4
   161b0:	sub	r3, fp, #716	; 0x2cc
   161b4:	ldrd	r2, [r3]
   161b8:	strd	r2, [fp, #-156]	; 0xffffff64
   161bc:	ldrd	r2, [fp, #-156]	; 0xffffff64
   161c0:	lsrs	r1, r3, #1
   161c4:	rrx	r0, r2
   161c8:	mov	r2, #127	; 0x7f
   161cc:	mov	r3, #0
   161d0:	and	r2, r2, r0
   161d4:	and	r3, r3, r1
   161d8:	ldr	r1, [pc, #2176]	; 16a60 <__assert_fail@plt+0x5908>
   161dc:	add	r3, r1, r2
   161e0:	ldrb	r3, [r3]
   161e4:	uxtb	r2, r3
   161e8:	mov	r3, #0
   161ec:	strd	r2, [fp, #-164]	; 0xffffff5c
   161f0:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   161f4:	adds	r2, r2, r2
   161f8:	adc	r3, r3, r3
   161fc:	mov	r4, r2
   16200:	mov	r5, r3
   16204:	ldr	r2, [fp, #-160]	; 0xffffff60
   16208:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1620c:	mul	r1, r3, r2
   16210:	ldr	r2, [fp, #-160]	; 0xffffff60
   16214:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16218:	mul	r3, r3, r2
   1621c:	add	r1, r1, r3
   16220:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16224:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16228:	umull	r2, r3, r2, r3
   1622c:	add	r1, r1, r3
   16230:	mov	r3, r1
   16234:	ldr	r1, [fp, #-156]	; 0xffffff64
   16238:	mul	r0, r3, r1
   1623c:	ldr	r1, [fp, #-152]	; 0xffffff68
   16240:	mul	r1, r2, r1
   16244:	add	ip, r0, r1
   16248:	ldr	r1, [fp, #-156]	; 0xffffff64
   1624c:	umull	r0, r1, r1, r2
   16250:	add	r3, ip, r1
   16254:	mov	r1, r3
   16258:	mov	r2, r4
   1625c:	mov	r3, r5
   16260:	subs	r2, r2, r0
   16264:	sbc	r3, r3, r1
   16268:	strd	r2, [fp, #-164]	; 0xffffff5c
   1626c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16270:	adds	r2, r2, r2
   16274:	adc	r3, r3, r3
   16278:	mov	r4, r2
   1627c:	mov	r5, r3
   16280:	ldr	r2, [fp, #-160]	; 0xffffff60
   16284:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16288:	mul	r1, r3, r2
   1628c:	ldr	r2, [fp, #-160]	; 0xffffff60
   16290:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16294:	mul	r3, r3, r2
   16298:	add	r1, r1, r3
   1629c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   162a0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   162a4:	umull	r2, r3, r2, r3
   162a8:	add	r1, r1, r3
   162ac:	mov	r3, r1
   162b0:	ldr	r1, [fp, #-156]	; 0xffffff64
   162b4:	mul	r0, r3, r1
   162b8:	ldr	r1, [fp, #-152]	; 0xffffff68
   162bc:	mul	r1, r2, r1
   162c0:	add	ip, r0, r1
   162c4:	ldr	r1, [fp, #-156]	; 0xffffff64
   162c8:	umull	r0, r1, r1, r2
   162cc:	add	r3, ip, r1
   162d0:	mov	r1, r3
   162d4:	mov	r2, r4
   162d8:	mov	r3, r5
   162dc:	subs	r2, r2, r0
   162e0:	sbc	r3, r3, r1
   162e4:	strd	r2, [fp, #-164]	; 0xffffff5c
   162e8:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   162ec:	adds	r2, r2, r2
   162f0:	adc	r3, r3, r3
   162f4:	mov	r4, r2
   162f8:	mov	r5, r3
   162fc:	ldr	r2, [fp, #-160]	; 0xffffff60
   16300:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16304:	mul	r1, r3, r2
   16308:	ldr	r2, [fp, #-160]	; 0xffffff60
   1630c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16310:	mul	r3, r3, r2
   16314:	add	r1, r1, r3
   16318:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1631c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   16320:	umull	r2, r3, r2, r3
   16324:	add	r1, r1, r3
   16328:	mov	r3, r1
   1632c:	ldr	r1, [fp, #-156]	; 0xffffff64
   16330:	mul	r0, r3, r1
   16334:	ldr	r1, [fp, #-152]	; 0xffffff68
   16338:	mul	r1, r2, r1
   1633c:	add	ip, r0, r1
   16340:	ldr	r1, [fp, #-156]	; 0xffffff64
   16344:	umull	r0, r1, r1, r2
   16348:	add	r3, ip, r1
   1634c:	mov	r1, r3
   16350:	mov	r2, r4
   16354:	mov	r3, r5
   16358:	subs	r2, r2, r0
   1635c:	sbc	r3, r3, r1
   16360:	strd	r2, [fp, #-164]	; 0xffffff5c
   16364:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   16368:	strd	r2, [fp, #-172]	; 0xffffff54
   1636c:	sub	r3, fp, #700	; 0x2bc
   16370:	ldrd	r2, [r3, #-8]
   16374:	cmp	r3, #0
   16378:	cmpeq	r2, #1
   1637c:	bls	163a8 <__assert_fail@plt+0x5250>
   16380:	mov	r2, #1
   16384:	mov	r3, #0
   16388:	strd	r2, [fp, #-84]	; 0xffffffac
   1638c:	mov	r2, #0
   16390:	mov	r3, #0
   16394:	strd	r2, [fp, #-92]	; 0xffffffa4
   16398:	mov	r2, #64	; 0x40
   1639c:	mov	r3, #0
   163a0:	strd	r2, [fp, #-100]	; 0xffffff9c
   163a4:	b	164cc <__assert_fail@plt+0x5374>
   163a8:	mov	r2, #0
   163ac:	mov	r3, #0
   163b0:	strd	r2, [fp, #-84]	; 0xffffffac
   163b4:	mov	r2, #1
   163b8:	mov	r3, #0
   163bc:	strd	r2, [fp, #-92]	; 0xffffffa4
   163c0:	mov	r2, #128	; 0x80
   163c4:	mov	r3, #0
   163c8:	strd	r2, [fp, #-100]	; 0xffffff9c
   163cc:	b	164cc <__assert_fail@plt+0x5374>
   163d0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   163d4:	adds	r2, r2, r2
   163d8:	adc	r3, r3, r3
   163dc:	mov	r0, r2
   163e0:	mov	r1, r3
   163e4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   163e8:	lsr	r3, r3, #31
   163ec:	str	r3, [fp, #-732]	; 0xfffffd24
   163f0:	mov	r3, #0
   163f4:	str	r3, [fp, #-728]	; 0xfffffd28
   163f8:	sub	r3, fp, #732	; 0x2dc
   163fc:	ldrd	r2, [r3]
   16400:	orr	r2, r2, r0
   16404:	orr	r3, r3, r1
   16408:	strd	r2, [fp, #-84]	; 0xffffffac
   1640c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   16410:	adds	r2, r2, r2
   16414:	adc	r3, r3, r3
   16418:	strd	r2, [fp, #-92]	; 0xffffffa4
   1641c:	sub	r3, fp, #700	; 0x2bc
   16420:	ldrd	r0, [fp, #-84]	; 0xffffffac
   16424:	ldrd	r2, [r3, #-8]
   16428:	cmp	r1, r3
   1642c:	cmpeq	r0, r2
   16430:	bhi	16464 <__assert_fail@plt+0x530c>
   16434:	sub	r3, fp, #700	; 0x2bc
   16438:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1643c:	ldrd	r2, [r3, #-8]
   16440:	cmp	r1, r3
   16444:	cmpeq	r0, r2
   16448:	bne	164cc <__assert_fail@plt+0x5374>
   1644c:	sub	r3, fp, #716	; 0x2cc
   16450:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16454:	ldrd	r2, [r3]
   16458:	cmp	r1, r3
   1645c:	cmpeq	r0, r2
   16460:	bcc	164cc <__assert_fail@plt+0x5374>
   16464:	sub	r3, fp, #716	; 0x2cc
   16468:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1646c:	ldrd	r2, [r3]
   16470:	cmp	r1, r3
   16474:	cmpeq	r0, r2
   16478:	movcc	r3, #1
   1647c:	movcs	r3, #0
   16480:	uxtb	r3, r3
   16484:	uxtb	r2, r3
   16488:	mov	r3, #0
   1648c:	strd	r2, [fp, #-180]	; 0xffffff4c
   16490:	sub	r3, fp, #716	; 0x2cc
   16494:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   16498:	ldrd	r2, [r3]
   1649c:	subs	r2, r0, r2
   164a0:	sbc	r3, r1, r3
   164a4:	strd	r2, [fp, #-92]	; 0xffffffa4
   164a8:	sub	r3, fp, #700	; 0x2bc
   164ac:	ldrd	r0, [fp, #-84]	; 0xffffffac
   164b0:	ldrd	r2, [r3, #-8]
   164b4:	subs	r0, r0, r2
   164b8:	sbc	r1, r1, r3
   164bc:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   164c0:	subs	r2, r0, r2
   164c4:	sbc	r3, r1, r3
   164c8:	strd	r2, [fp, #-84]	; 0xffffffac
   164cc:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   164d0:	subs	r2, r0, #1
   164d4:	sbc	r3, r1, #0
   164d8:	strd	r2, [fp, #-100]	; 0xffffff9c
   164dc:	orrs	r3, r0, r1
   164e0:	bne	163d0 <__assert_fail@plt+0x5278>
   164e4:	sub	r3, fp, #396	; 0x18c
   164e8:	mov	r1, r3
   164ec:	ldrd	r2, [fp, #-84]	; 0xffffffac
   164f0:	strd	r2, [r1, #8]
   164f4:	sub	r3, fp, #396	; 0x18c
   164f8:	mov	r1, r3
   164fc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   16500:	strd	r2, [r1]
   16504:	sub	r3, fp, #396	; 0x18c
   16508:	ldrd	r0, [r3]
   1650c:	sub	r3, fp, #396	; 0x18c
   16510:	ldrd	r2, [r3]
   16514:	adds	r2, r2, r0
   16518:	adc	r3, r3, r1
   1651c:	strd	r2, [fp, #-188]	; 0xffffff44
   16520:	sub	r3, fp, #396	; 0x18c
   16524:	ldrd	r0, [r3, #8]
   16528:	sub	r3, fp, #396	; 0x18c
   1652c:	ldrd	r2, [r3, #8]
   16530:	adds	r4, r0, r2
   16534:	adc	r5, r1, r3
   16538:	sub	r3, fp, #396	; 0x18c
   1653c:	ldrd	r0, [r3]
   16540:	ldrd	r2, [fp, #-188]	; 0xffffff44
   16544:	cmp	r1, r3
   16548:	cmpeq	r0, r2
   1654c:	movhi	r3, #1
   16550:	movls	r3, #0
   16554:	uxtb	r3, r3
   16558:	uxtb	r2, r3
   1655c:	mov	r3, #0
   16560:	adds	r2, r2, r4
   16564:	adc	r3, r3, r5
   16568:	sub	r1, fp, #380	; 0x17c
   1656c:	strd	r2, [r1, #8]
   16570:	sub	r3, fp, #380	; 0x17c
   16574:	mov	r1, r3
   16578:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1657c:	strd	r2, [r1]
   16580:	sub	r3, fp, #380	; 0x17c
   16584:	ldrd	r0, [r3, #8]
   16588:	sub	r3, fp, #700	; 0x2bc
   1658c:	ldrd	r2, [r3, #-8]
   16590:	cmp	r1, r3
   16594:	cmpeq	r0, r2
   16598:	bhi	165d4 <__assert_fail@plt+0x547c>
   1659c:	sub	r3, fp, #380	; 0x17c
   165a0:	ldrd	r0, [r3, #8]
   165a4:	sub	r3, fp, #700	; 0x2bc
   165a8:	ldrd	r2, [r3, #-8]
   165ac:	cmp	r1, r3
   165b0:	cmpeq	r0, r2
   165b4:	bne	16650 <__assert_fail@plt+0x54f8>
   165b8:	sub	r3, fp, #380	; 0x17c
   165bc:	ldrd	r0, [r3]
   165c0:	sub	r3, fp, #716	; 0x2cc
   165c4:	ldrd	r2, [r3]
   165c8:	cmp	r1, r3
   165cc:	cmpeq	r0, r2
   165d0:	bcc	16650 <__assert_fail@plt+0x54f8>
   165d4:	sub	r3, fp, #380	; 0x17c
   165d8:	ldrd	r0, [r3]
   165dc:	sub	r3, fp, #716	; 0x2cc
   165e0:	ldrd	r2, [r3]
   165e4:	cmp	r1, r3
   165e8:	cmpeq	r0, r2
   165ec:	movcc	r3, #1
   165f0:	movcs	r3, #0
   165f4:	uxtb	r3, r3
   165f8:	uxtb	r2, r3
   165fc:	mov	r3, #0
   16600:	strd	r2, [fp, #-196]	; 0xffffff3c
   16604:	sub	r3, fp, #380	; 0x17c
   16608:	ldrd	r0, [r3]
   1660c:	sub	r3, fp, #716	; 0x2cc
   16610:	ldrd	r2, [r3]
   16614:	subs	r2, r0, r2
   16618:	sbc	r3, r1, r3
   1661c:	sub	r1, fp, #380	; 0x17c
   16620:	strd	r2, [r1]
   16624:	sub	r3, fp, #380	; 0x17c
   16628:	ldrd	r0, [r3, #8]
   1662c:	sub	r3, fp, #700	; 0x2bc
   16630:	ldrd	r2, [r3, #-8]
   16634:	subs	r0, r0, r2
   16638:	sbc	r1, r1, r3
   1663c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   16640:	subs	r2, r0, r2
   16644:	sbc	r3, r1, r3
   16648:	sub	r1, fp, #380	; 0x17c
   1664c:	strd	r2, [r1, #8]
   16650:	sub	r3, fp, #412	; 0x19c
   16654:	mov	r1, r3
   16658:	sub	r3, fp, #716	; 0x2cc
   1665c:	ldrd	r2, [r3]
   16660:	strd	r2, [r1]
   16664:	sub	r3, fp, #412	; 0x19c
   16668:	mov	r1, r3
   1666c:	sub	r3, fp, #700	; 0x2bc
   16670:	ldrd	r2, [r3, #-8]
   16674:	strd	r2, [r1, #8]
   16678:	sub	r1, fp, #412	; 0x19c
   1667c:	sub	r3, fp, #396	; 0x18c
   16680:	str	r3, [sp, #12]
   16684:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16688:	str	r3, [sp, #8]
   1668c:	sub	r3, fp, #348	; 0x15c
   16690:	str	r3, [sp, #4]
   16694:	sub	r3, fp, #380	; 0x17c
   16698:	str	r3, [sp]
   1669c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   166a0:	mov	r0, r1
   166a4:	bl	150e4 <__assert_fail@plt+0x3f8c>
   166a8:	mov	r3, r0
   166ac:	eor	r3, r3, #1
   166b0:	uxtb	r3, r3
   166b4:	cmp	r3, #0
   166b8:	beq	166c4 <__assert_fail@plt+0x556c>
   166bc:	mov	r3, #0
   166c0:	b	172f0 <__assert_fail@plt+0x6198>
   166c4:	ldr	r3, [pc, #912]	; 16a5c <__assert_fail@plt+0x5904>
   166c8:	ldrb	r3, [r3]
   166cc:	cmp	r3, #0
   166d0:	beq	16700 <__assert_fail@plt+0x55a8>
   166d4:	sub	r3, fp, #364	; 0x16c
   166d8:	ldrd	r4, [r3, #8]
   166dc:	sub	r3, fp, #364	; 0x16c
   166e0:	ldrd	r0, [r3]
   166e4:	sub	r3, fp, #668	; 0x29c
   166e8:	str	r3, [sp]
   166ec:	mov	r2, r0
   166f0:	mov	r3, r1
   166f4:	mov	r0, r4
   166f8:	mov	r1, r5
   166fc:	bl	19a50 <__assert_fail@plt+0x88f8>
   16700:	mov	r3, #0
   16704:	str	r3, [fp, #-104]	; 0xffffff98
   16708:	b	172c4 <__assert_fail@plt+0x616c>
   1670c:	ldr	r3, [pc, #840]	; 16a5c <__assert_fail@plt+0x5904>
   16710:	ldrb	r3, [r3]
   16714:	cmp	r3, #0
   16718:	beq	1707c <__assert_fail@plt+0x5f24>
   1671c:	mov	r3, #1
   16720:	strb	r3, [fp, #-105]	; 0xffffff97
   16724:	sub	r3, fp, #668	; 0x29c
   16728:	ldrd	r2, [r3, #8]
   1672c:	orrs	r3, r2, r3
   16730:	beq	169c4 <__assert_fail@plt+0x586c>
   16734:	sub	r3, fp, #668	; 0x29c
   16738:	ldrd	r2, [r3]
   1673c:	strd	r2, [fp, #-204]	; 0xffffff34
   16740:	ldrd	r2, [fp, #-204]	; 0xffffff34
   16744:	lsrs	r1, r3, #1
   16748:	rrx	r0, r2
   1674c:	mov	r2, #127	; 0x7f
   16750:	mov	r3, #0
   16754:	and	r2, r2, r0
   16758:	and	r3, r3, r1
   1675c:	ldr	r1, [pc, #764]	; 16a60 <__assert_fail@plt+0x5908>
   16760:	add	r3, r1, r2
   16764:	ldrb	r3, [r3]
   16768:	uxtb	r2, r3
   1676c:	mov	r3, #0
   16770:	strd	r2, [fp, #-212]	; 0xffffff2c
   16774:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16778:	adds	r2, r2, r2
   1677c:	adc	r3, r3, r3
   16780:	mov	r4, r2
   16784:	mov	r5, r3
   16788:	ldr	r2, [fp, #-208]	; 0xffffff30
   1678c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16790:	mul	r1, r3, r2
   16794:	ldr	r2, [fp, #-208]	; 0xffffff30
   16798:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1679c:	mul	r3, r3, r2
   167a0:	add	r1, r1, r3
   167a4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   167a8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   167ac:	umull	r2, r3, r2, r3
   167b0:	add	r1, r1, r3
   167b4:	mov	r3, r1
   167b8:	ldr	r1, [fp, #-204]	; 0xffffff34
   167bc:	mul	r0, r3, r1
   167c0:	ldr	r1, [fp, #-200]	; 0xffffff38
   167c4:	mul	r1, r2, r1
   167c8:	add	ip, r0, r1
   167cc:	ldr	r1, [fp, #-204]	; 0xffffff34
   167d0:	umull	r0, r1, r1, r2
   167d4:	add	r3, ip, r1
   167d8:	mov	r1, r3
   167dc:	mov	r2, r4
   167e0:	mov	r3, r5
   167e4:	subs	r2, r2, r0
   167e8:	sbc	r3, r3, r1
   167ec:	strd	r2, [fp, #-212]	; 0xffffff2c
   167f0:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   167f4:	adds	r2, r2, r2
   167f8:	adc	r3, r3, r3
   167fc:	mov	r4, r2
   16800:	mov	r5, r3
   16804:	ldr	r2, [fp, #-208]	; 0xffffff30
   16808:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1680c:	mul	r1, r3, r2
   16810:	ldr	r2, [fp, #-208]	; 0xffffff30
   16814:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16818:	mul	r3, r3, r2
   1681c:	add	r1, r1, r3
   16820:	ldr	r2, [fp, #-212]	; 0xffffff2c
   16824:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16828:	umull	r2, r3, r2, r3
   1682c:	add	r1, r1, r3
   16830:	mov	r3, r1
   16834:	ldr	r1, [fp, #-204]	; 0xffffff34
   16838:	mul	r0, r3, r1
   1683c:	ldr	r1, [fp, #-200]	; 0xffffff38
   16840:	mul	r1, r2, r1
   16844:	add	ip, r0, r1
   16848:	ldr	r1, [fp, #-204]	; 0xffffff34
   1684c:	umull	r0, r1, r1, r2
   16850:	add	r3, ip, r1
   16854:	mov	r1, r3
   16858:	mov	r2, r4
   1685c:	mov	r3, r5
   16860:	subs	r2, r2, r0
   16864:	sbc	r3, r3, r1
   16868:	strd	r2, [fp, #-212]	; 0xffffff2c
   1686c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   16870:	adds	r2, r2, r2
   16874:	adc	r3, r3, r3
   16878:	mov	r4, r2
   1687c:	mov	r5, r3
   16880:	ldr	r2, [fp, #-208]	; 0xffffff30
   16884:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16888:	mul	r1, r3, r2
   1688c:	ldr	r2, [fp, #-208]	; 0xffffff30
   16890:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16894:	mul	r3, r3, r2
   16898:	add	r1, r1, r3
   1689c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   168a0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   168a4:	umull	r2, r3, r2, r3
   168a8:	add	r1, r1, r3
   168ac:	mov	r3, r1
   168b0:	ldr	r1, [fp, #-204]	; 0xffffff34
   168b4:	mul	r0, r3, r1
   168b8:	ldr	r1, [fp, #-200]	; 0xffffff38
   168bc:	mul	r1, r2, r1
   168c0:	add	ip, r0, r1
   168c4:	ldr	r1, [fp, #-204]	; 0xffffff34
   168c8:	umull	r0, r1, r1, r2
   168cc:	add	r3, ip, r1
   168d0:	mov	r1, r3
   168d4:	mov	r2, r4
   168d8:	mov	r3, r5
   168dc:	subs	r2, r2, r0
   168e0:	sbc	r3, r3, r1
   168e4:	strd	r2, [fp, #-212]	; 0xffffff2c
   168e8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   168ec:	strd	r2, [fp, #-220]	; 0xffffff24
   168f0:	sub	r3, fp, #364	; 0x16c
   168f4:	ldrd	r2, [r3]
   168f8:	ldr	r1, [fp, #-220]	; 0xffffff24
   168fc:	mul	r0, r3, r1
   16900:	ldr	r1, [fp, #-216]	; 0xffffff28
   16904:	mul	r1, r2, r1
   16908:	add	r0, r0, r1
   1690c:	ldr	r1, [fp, #-220]	; 0xffffff24
   16910:	umull	r2, r3, r1, r2
   16914:	add	r1, r0, r3
   16918:	mov	r3, r1
   1691c:	sub	r1, fp, #684	; 0x2ac
   16920:	strd	r2, [r1]
   16924:	sub	r3, fp, #684	; 0x2ac
   16928:	mov	r1, r3
   1692c:	mov	r2, #0
   16930:	mov	r3, #0
   16934:	strd	r2, [r1, #8]
   16938:	sub	lr, fp, #412	; 0x19c
   1693c:	sub	ip, fp, #684	; 0x2ac
   16940:	sub	r1, fp, #380	; 0x17c
   16944:	sub	r3, fp, #700	; 0x2bc
   16948:	add	r0, r3, #8
   1694c:	sub	r3, fp, #396	; 0x18c
   16950:	str	r3, [sp, #8]
   16954:	ldrd	r2, [fp, #-172]	; 0xffffff54
   16958:	strd	r2, [sp]
   1695c:	mov	r3, lr
   16960:	mov	r2, ip
   16964:	bl	14d7c <__assert_fail@plt+0x3c24>
   16968:	sub	r3, fp, #700	; 0x2bc
   1696c:	strd	r0, [r3]
   16970:	sub	r3, fp, #700	; 0x2bc
   16974:	ldrd	r0, [r3]
   16978:	sub	r3, fp, #396	; 0x18c
   1697c:	ldrd	r2, [r3]
   16980:	cmp	r1, r3
   16984:	cmpeq	r0, r2
   16988:	bne	169a8 <__assert_fail@plt+0x5850>
   1698c:	sub	r3, fp, #700	; 0x2bc
   16990:	ldrd	r0, [r3, #8]
   16994:	sub	r3, fp, #396	; 0x18c
   16998:	ldrd	r2, [r3, #8]
   1699c:	cmp	r1, r3
   169a0:	cmpeq	r0, r2
   169a4:	beq	169b0 <__assert_fail@plt+0x5858>
   169a8:	mov	r3, #1
   169ac:	b	169b4 <__assert_fail@plt+0x585c>
   169b0:	mov	r3, #0
   169b4:	strb	r3, [fp, #-105]	; 0xffffff97
   169b8:	ldrb	r3, [fp, #-105]	; 0xffffff97
   169bc:	and	r3, r3, #1
   169c0:	strb	r3, [fp, #-105]	; 0xffffff97
   169c4:	mov	r3, #0
   169c8:	str	r3, [fp, #-112]	; 0xffffff90
   169cc:	b	17058 <__assert_fail@plt+0x5f00>
   169d0:	sub	r3, fp, #668	; 0x29c
   169d4:	mov	r2, r3
   169d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   169dc:	add	r3, r3, #2
   169e0:	lsl	r3, r3, #3
   169e4:	add	r3, r2, r3
   169e8:	ldrd	r2, [r3]
   169ec:	cmp	r3, #0
   169f0:	cmpeq	r2, #2
   169f4:	bne	16a6c <__assert_fail@plt+0x5914>
   169f8:	sub	r3, fp, #364	; 0x16c
   169fc:	ldrd	r2, [r3, #8]
   16a00:	lsl	r3, r2, #31
   16a04:	str	r3, [fp, #-736]	; 0xfffffd20
   16a08:	mov	r3, #0
   16a0c:	str	r3, [fp, #-740]	; 0xfffffd1c
   16a10:	sub	r3, fp, #364	; 0x16c
   16a14:	ldrd	r2, [r3]
   16a18:	lsrs	r3, r3, #1
   16a1c:	rrx	r2, r2
   16a20:	sub	r1, fp, #740	; 0x2e4
   16a24:	ldrd	r0, [r1]
   16a28:	orr	r0, r0, r2
   16a2c:	orr	r1, r1, r3
   16a30:	mov	r2, r0
   16a34:	mov	r3, r1
   16a38:	sub	r1, fp, #684	; 0x2ac
   16a3c:	strd	r2, [r1]
   16a40:	sub	r3, fp, #364	; 0x16c
   16a44:	ldrd	r2, [r3, #8]
   16a48:	lsrs	r3, r3, #1
   16a4c:	rrx	r2, r2
   16a50:	sub	r1, fp, #684	; 0x2ac
   16a54:	strd	r2, [r1, #8]
   16a58:	b	16fc0 <__assert_fail@plt+0x5e68>
   16a5c:	andeq	r5, r4, r4, lsl r1
   16a60:	andeq	r3, r3, ip, asr #10
   16a64:			; <UNDEFINED> instruction: 0x000305bc
   16a68:	andeq	r3, r3, r4, asr #12
   16a6c:	sub	r3, fp, #668	; 0x29c
   16a70:	mov	r2, r3
   16a74:	ldr	r3, [fp, #-112]	; 0xffffff90
   16a78:	add	r3, r3, #2
   16a7c:	lsl	r3, r3, #3
   16a80:	add	r3, r2, r3
   16a84:	ldrd	r2, [r3]
   16a88:	strd	r2, [fp, #-228]	; 0xffffff1c
   16a8c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   16a90:	lsrs	r1, r3, #1
   16a94:	rrx	r0, r2
   16a98:	mov	r2, #127	; 0x7f
   16a9c:	mov	r3, #0
   16aa0:	and	r2, r2, r0
   16aa4:	and	r3, r3, r1
   16aa8:	ldr	r1, [pc, #-80]	; 16a60 <__assert_fail@plt+0x5908>
   16aac:	add	r3, r1, r2
   16ab0:	ldrb	r3, [r3]
   16ab4:	uxtb	r2, r3
   16ab8:	mov	r3, #0
   16abc:	strd	r2, [fp, #-236]	; 0xffffff14
   16ac0:	ldrd	r2, [fp, #-236]	; 0xffffff14
   16ac4:	adds	r2, r2, r2
   16ac8:	adc	r3, r3, r3
   16acc:	mov	r4, r2
   16ad0:	mov	r5, r3
   16ad4:	ldr	r2, [fp, #-232]	; 0xffffff18
   16ad8:	ldr	r3, [fp, #-236]	; 0xffffff14
   16adc:	mul	r1, r3, r2
   16ae0:	ldr	r2, [fp, #-232]	; 0xffffff18
   16ae4:	ldr	r3, [fp, #-236]	; 0xffffff14
   16ae8:	mul	r3, r3, r2
   16aec:	add	r1, r1, r3
   16af0:	ldr	r2, [fp, #-236]	; 0xffffff14
   16af4:	ldr	r3, [fp, #-236]	; 0xffffff14
   16af8:	umull	r2, r3, r2, r3
   16afc:	add	r1, r1, r3
   16b00:	mov	r3, r1
   16b04:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16b08:	mul	r0, r3, r1
   16b0c:	ldr	r1, [fp, #-224]	; 0xffffff20
   16b10:	mul	r1, r2, r1
   16b14:	add	ip, r0, r1
   16b18:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16b1c:	umull	r0, r1, r1, r2
   16b20:	add	r3, ip, r1
   16b24:	mov	r1, r3
   16b28:	mov	r2, r4
   16b2c:	mov	r3, r5
   16b30:	subs	r2, r2, r0
   16b34:	sbc	r3, r3, r1
   16b38:	strd	r2, [fp, #-236]	; 0xffffff14
   16b3c:	ldrd	r2, [fp, #-236]	; 0xffffff14
   16b40:	adds	r2, r2, r2
   16b44:	adc	r3, r3, r3
   16b48:	mov	r4, r2
   16b4c:	mov	r5, r3
   16b50:	ldr	r2, [fp, #-232]	; 0xffffff18
   16b54:	ldr	r3, [fp, #-236]	; 0xffffff14
   16b58:	mul	r1, r3, r2
   16b5c:	ldr	r2, [fp, #-232]	; 0xffffff18
   16b60:	ldr	r3, [fp, #-236]	; 0xffffff14
   16b64:	mul	r3, r3, r2
   16b68:	add	r1, r1, r3
   16b6c:	ldr	r2, [fp, #-236]	; 0xffffff14
   16b70:	ldr	r3, [fp, #-236]	; 0xffffff14
   16b74:	umull	r2, r3, r2, r3
   16b78:	add	r1, r1, r3
   16b7c:	mov	r3, r1
   16b80:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16b84:	mul	r0, r3, r1
   16b88:	ldr	r1, [fp, #-224]	; 0xffffff20
   16b8c:	mul	r1, r2, r1
   16b90:	add	ip, r0, r1
   16b94:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16b98:	umull	r0, r1, r1, r2
   16b9c:	add	r3, ip, r1
   16ba0:	mov	r1, r3
   16ba4:	mov	r2, r4
   16ba8:	mov	r3, r5
   16bac:	subs	r2, r2, r0
   16bb0:	sbc	r3, r3, r1
   16bb4:	strd	r2, [fp, #-236]	; 0xffffff14
   16bb8:	ldrd	r2, [fp, #-236]	; 0xffffff14
   16bbc:	adds	r2, r2, r2
   16bc0:	adc	r3, r3, r3
   16bc4:	mov	r4, r2
   16bc8:	mov	r5, r3
   16bcc:	ldr	r2, [fp, #-232]	; 0xffffff18
   16bd0:	ldr	r3, [fp, #-236]	; 0xffffff14
   16bd4:	mul	r1, r3, r2
   16bd8:	ldr	r2, [fp, #-232]	; 0xffffff18
   16bdc:	ldr	r3, [fp, #-236]	; 0xffffff14
   16be0:	mul	r3, r3, r2
   16be4:	add	r1, r1, r3
   16be8:	ldr	r2, [fp, #-236]	; 0xffffff14
   16bec:	ldr	r3, [fp, #-236]	; 0xffffff14
   16bf0:	umull	r2, r3, r2, r3
   16bf4:	add	r1, r1, r3
   16bf8:	mov	r3, r1
   16bfc:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16c00:	mul	r0, r3, r1
   16c04:	ldr	r1, [fp, #-224]	; 0xffffff20
   16c08:	mul	r1, r2, r1
   16c0c:	add	ip, r0, r1
   16c10:	ldr	r1, [fp, #-228]	; 0xffffff1c
   16c14:	umull	r0, r1, r1, r2
   16c18:	add	r3, ip, r1
   16c1c:	mov	r1, r3
   16c20:	mov	r2, r4
   16c24:	mov	r3, r5
   16c28:	subs	r2, r2, r0
   16c2c:	sbc	r3, r3, r1
   16c30:	strd	r2, [fp, #-236]	; 0xffffff14
   16c34:	ldrd	r2, [fp, #-236]	; 0xffffff14
   16c38:	strd	r2, [fp, #-244]	; 0xffffff0c
   16c3c:	sub	r3, fp, #364	; 0x16c
   16c40:	ldrd	r2, [r3]
   16c44:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16c48:	mul	r0, r3, r1
   16c4c:	ldr	r1, [fp, #-240]	; 0xffffff10
   16c50:	mul	r1, r2, r1
   16c54:	add	r0, r0, r1
   16c58:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16c5c:	umull	r2, r3, r1, r2
   16c60:	add	r1, r0, r3
   16c64:	mov	r3, r1
   16c68:	strd	r2, [fp, #-252]	; 0xffffff04
   16c6c:	strd	r2, [fp, #-252]	; 0xffffff04
   16c70:	sub	r3, fp, #364	; 0x16c
   16c74:	ldrd	r0, [r3, #8]
   16c78:	sub	r3, fp, #668	; 0x29c
   16c7c:	mov	r2, r3
   16c80:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c84:	add	r3, r3, #2
   16c88:	lsl	r3, r3, #3
   16c8c:	add	r3, r2, r3
   16c90:	ldrd	r2, [r3]
   16c94:	cmp	r1, r3
   16c98:	cmpeq	r0, r2
   16c9c:	bcc	16f9c <__assert_fail@plt+0x5e44>
   16ca0:	ldrd	r2, [fp, #-252]	; 0xffffff04
   16ca4:	sub	r1, fp, #260	; 0x104
   16ca8:	strd	r2, [r1]
   16cac:	sub	r3, fp, #668	; 0x29c
   16cb0:	mov	r2, r3
   16cb4:	ldr	r3, [fp, #-112]	; 0xffffff90
   16cb8:	add	r3, r3, #2
   16cbc:	lsl	r3, r3, #3
   16cc0:	add	r3, r2, r3
   16cc4:	ldrd	r2, [r3]
   16cc8:	sub	r1, fp, #268	; 0x10c
   16ccc:	strd	r2, [r1]
   16cd0:	ldr	r3, [fp, #-260]	; 0xfffffefc
   16cd4:	str	r3, [fp, #-272]	; 0xfffffef0
   16cd8:	sub	r3, fp, #260	; 0x104
   16cdc:	ldrd	r2, [r3]
   16ce0:	mov	r3, r3
   16ce4:	str	r3, [fp, #-748]	; 0xfffffd14
   16ce8:	mov	r3, #0
   16cec:	str	r3, [fp, #-744]	; 0xfffffd18
   16cf0:	ldr	r3, [fp, #-748]	; 0xfffffd14
   16cf4:	str	r3, [fp, #-276]	; 0xfffffeec
   16cf8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   16cfc:	str	r3, [fp, #-280]	; 0xfffffee8
   16d00:	sub	r3, fp, #268	; 0x10c
   16d04:	ldrd	r2, [r3]
   16d08:	mov	r3, r3
   16d0c:	str	r3, [fp, #-756]	; 0xfffffd0c
   16d10:	mov	r3, #0
   16d14:	str	r3, [fp, #-752]	; 0xfffffd10
   16d18:	ldr	r3, [fp, #-756]	; 0xfffffd0c
   16d1c:	str	r3, [fp, #-284]	; 0xfffffee4
   16d20:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16d24:	mov	r4, r3
   16d28:	mov	r5, #0
   16d2c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   16d30:	mov	r2, r3
   16d34:	mov	r3, #0
   16d38:	sub	r1, fp, #284	; 0x11c
   16d3c:	mov	ip, r1
   16d40:	mul	r0, r2, r5
   16d44:	mul	r1, r4, r3
   16d48:	add	r1, r0, r1
   16d4c:	umull	r2, r3, r4, r2
   16d50:	add	r1, r1, r3
   16d54:	mov	r3, r1
   16d58:	strd	r2, [ip, #-8]
   16d5c:	strd	r2, [ip, #-8]
   16d60:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16d64:	mov	r4, r3
   16d68:	mov	r5, #0
   16d6c:	ldr	r3, [fp, #-284]	; 0xfffffee4
   16d70:	mov	r2, r3
   16d74:	mov	r3, #0
   16d78:	sub	r1, fp, #300	; 0x12c
   16d7c:	mov	ip, r1
   16d80:	mul	r0, r2, r5
   16d84:	mul	r1, r4, r3
   16d88:	add	r1, r0, r1
   16d8c:	umull	r2, r3, r4, r2
   16d90:	add	r1, r1, r3
   16d94:	mov	r3, r1
   16d98:	strd	r2, [ip]
   16d9c:	strd	r2, [ip]
   16da0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   16da4:	mov	r4, r3
   16da8:	mov	r5, #0
   16dac:	ldr	r3, [fp, #-280]	; 0xfffffee8
   16db0:	mov	r2, r3
   16db4:	mov	r3, #0
   16db8:	sub	r1, fp, #300	; 0x12c
   16dbc:	mov	ip, r1
   16dc0:	mul	r0, r2, r5
   16dc4:	mul	r1, r4, r3
   16dc8:	add	r1, r0, r1
   16dcc:	umull	r2, r3, r4, r2
   16dd0:	add	r1, r1, r3
   16dd4:	mov	r3, r1
   16dd8:	strd	r2, [ip, #-8]
   16ddc:	strd	r2, [ip, #-8]
   16de0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   16de4:	mov	r0, r3
   16de8:	mov	r1, #0
   16dec:	ldr	r3, [fp, #-284]	; 0xfffffee4
   16df0:	mov	r2, r3
   16df4:	mov	r3, #0
   16df8:	mul	lr, r2, r1
   16dfc:	mul	ip, r0, r3
   16e00:	add	ip, lr, ip
   16e04:	umull	r2, r3, r0, r2
   16e08:	add	r1, ip, r3
   16e0c:	mov	r3, r1
   16e10:	strd	r2, [fp, #-124]	; 0xffffff84
   16e14:	strd	r2, [fp, #-124]	; 0xffffff84
   16e18:	sub	r3, fp, #284	; 0x11c
   16e1c:	ldrd	r2, [r3, #-8]
   16e20:	mov	r3, r3
   16e24:	str	r3, [fp, #-764]	; 0xfffffd04
   16e28:	mov	r3, #0
   16e2c:	str	r3, [fp, #-760]	; 0xfffffd08
   16e30:	sub	r3, fp, #300	; 0x12c
   16e34:	mov	r1, r3
   16e38:	sub	r3, fp, #300	; 0x12c
   16e3c:	ldrd	r2, [r3]
   16e40:	sub	r0, fp, #764	; 0x2fc
   16e44:	ldrd	r4, [r0]
   16e48:	adds	r4, r4, r2
   16e4c:	adc	r5, r5, r3
   16e50:	mov	r2, r4
   16e54:	mov	r3, r5
   16e58:	strd	r2, [r1]
   16e5c:	sub	r3, fp, #300	; 0x12c
   16e60:	mov	ip, r3
   16e64:	sub	r3, fp, #300	; 0x12c
   16e68:	mov	r2, r3
   16e6c:	sub	r3, fp, #300	; 0x12c
   16e70:	ldrd	r0, [r2]
   16e74:	ldrd	r2, [r3, #-8]
   16e78:	adds	r2, r2, r0
   16e7c:	adc	r3, r3, r1
   16e80:	strd	r2, [ip]
   16e84:	sub	r3, fp, #300	; 0x12c
   16e88:	mov	r2, r3
   16e8c:	sub	r3, fp, #300	; 0x12c
   16e90:	ldrd	r0, [r2]
   16e94:	ldrd	r2, [r3, #-8]
   16e98:	cmp	r1, r3
   16e9c:	cmpeq	r0, r2
   16ea0:	bcs	16eb4 <__assert_fail@plt+0x5d5c>
   16ea4:	ldrd	r2, [fp, #-124]	; 0xffffff84
   16ea8:	adds	r2, r2, #0
   16eac:	adc	r3, r3, #1
   16eb0:	strd	r2, [fp, #-124]	; 0xffffff84
   16eb4:	sub	r3, fp, #300	; 0x12c
   16eb8:	ldrd	r2, [r3]
   16ebc:	mov	r3, r3
   16ec0:	str	r3, [fp, #-772]	; 0xfffffcfc
   16ec4:	mov	r3, #0
   16ec8:	str	r3, [fp, #-768]	; 0xfffffd00
   16ecc:	sub	r3, fp, #316	; 0x13c
   16ed0:	mov	r1, r3
   16ed4:	ldrd	r2, [fp, #-124]	; 0xffffff84
   16ed8:	sub	r0, fp, #772	; 0x304
   16edc:	ldrd	r4, [r0]
   16ee0:	adds	r4, r4, r2
   16ee4:	adc	r5, r5, r3
   16ee8:	mov	r2, r4
   16eec:	mov	r3, r5
   16ef0:	strd	r2, [r1]
   16ef4:	sub	r3, fp, #300	; 0x12c
   16ef8:	ldrd	r2, [r3]
   16efc:	mov	r3, r2
   16f00:	str	r3, [fp, #-776]	; 0xfffffcf8
   16f04:	mov	r3, #0
   16f08:	str	r3, [fp, #-780]	; 0xfffffcf4
   16f0c:	sub	r3, fp, #284	; 0x11c
   16f10:	ldrd	r0, [r3, #-8]
   16f14:	mvn	r2, #0
   16f18:	mov	r3, #0
   16f1c:	and	r2, r2, r0
   16f20:	and	r3, r3, r1
   16f24:	sub	r1, fp, #780	; 0x30c
   16f28:	ldrd	r0, [r1]
   16f2c:	adds	r0, r0, r2
   16f30:	adc	r1, r1, r3
   16f34:	mov	r2, r0
   16f38:	mov	r3, r1
   16f3c:	sub	r1, fp, #316	; 0x13c
   16f40:	strd	r2, [r1, #-8]
   16f44:	sub	r3, fp, #364	; 0x16c
   16f48:	ldrd	r0, [r3, #8]
   16f4c:	sub	r3, fp, #316	; 0x13c
   16f50:	ldrd	r2, [r3]
   16f54:	subs	r2, r0, r2
   16f58:	sbc	r3, r1, r3
   16f5c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16f60:	mul	r0, r3, r1
   16f64:	ldr	r1, [fp, #-240]	; 0xffffff10
   16f68:	mul	r1, r2, r1
   16f6c:	add	r0, r0, r1
   16f70:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16f74:	umull	r2, r3, r1, r2
   16f78:	add	r1, r0, r3
   16f7c:	mov	r3, r1
   16f80:	sub	r1, fp, #684	; 0x2ac
   16f84:	strd	r2, [r1, #8]
   16f88:	sub	r3, fp, #684	; 0x2ac
   16f8c:	mov	r1, r3
   16f90:	ldrd	r2, [fp, #-252]	; 0xffffff04
   16f94:	strd	r2, [r1]
   16f98:	b	16fc0 <__assert_fail@plt+0x5e68>
   16f9c:	sub	r3, fp, #684	; 0x2ac
   16fa0:	mov	r1, r3
   16fa4:	ldrd	r2, [fp, #-252]	; 0xffffff04
   16fa8:	strd	r2, [r1]
   16fac:	sub	r3, fp, #684	; 0x2ac
   16fb0:	mov	r1, r3
   16fb4:	mov	r2, #0
   16fb8:	mov	r3, #0
   16fbc:	strd	r2, [r1, #8]
   16fc0:	sub	lr, fp, #412	; 0x19c
   16fc4:	sub	ip, fp, #684	; 0x2ac
   16fc8:	sub	r1, fp, #380	; 0x17c
   16fcc:	sub	r3, fp, #700	; 0x2bc
   16fd0:	add	r0, r3, #8
   16fd4:	sub	r3, fp, #396	; 0x18c
   16fd8:	str	r3, [sp, #8]
   16fdc:	ldrd	r2, [fp, #-172]	; 0xffffff54
   16fe0:	strd	r2, [sp]
   16fe4:	mov	r3, lr
   16fe8:	mov	r2, ip
   16fec:	bl	14d7c <__assert_fail@plt+0x3c24>
   16ff0:	sub	r3, fp, #700	; 0x2bc
   16ff4:	strd	r0, [r3]
   16ff8:	sub	r3, fp, #700	; 0x2bc
   16ffc:	ldrd	r0, [r3]
   17000:	sub	r3, fp, #396	; 0x18c
   17004:	ldrd	r2, [r3]
   17008:	cmp	r1, r3
   1700c:	cmpeq	r0, r2
   17010:	bne	17030 <__assert_fail@plt+0x5ed8>
   17014:	sub	r3, fp, #700	; 0x2bc
   17018:	ldrd	r0, [r3, #8]
   1701c:	sub	r3, fp, #396	; 0x18c
   17020:	ldrd	r2, [r3, #8]
   17024:	cmp	r1, r3
   17028:	cmpeq	r0, r2
   1702c:	beq	17038 <__assert_fail@plt+0x5ee0>
   17030:	mov	r3, #1
   17034:	b	1703c <__assert_fail@plt+0x5ee4>
   17038:	mov	r3, #0
   1703c:	strb	r3, [fp, #-105]	; 0xffffff97
   17040:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17044:	and	r3, r3, #1
   17048:	strb	r3, [fp, #-105]	; 0xffffff97
   1704c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17050:	add	r3, r3, #1
   17054:	str	r3, [fp, #-112]	; 0xffffff90
   17058:	ldrb	r3, [fp, #-418]	; 0xfffffe5e
   1705c:	mov	r2, r3
   17060:	ldr	r3, [fp, #-112]	; 0xffffff90
   17064:	cmp	r2, r3
   17068:	bls	17090 <__assert_fail@plt+0x5f38>
   1706c:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17070:	cmp	r3, #0
   17074:	bne	169d0 <__assert_fail@plt+0x5878>
   17078:	b	17090 <__assert_fail@plt+0x5f38>
   1707c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17080:	cmp	r3, #24
   17084:	moveq	r3, #1
   17088:	movne	r3, #0
   1708c:	strb	r3, [fp, #-105]	; 0xffffff97
   17090:	ldrb	r3, [fp, #-105]	; 0xffffff97
   17094:	cmp	r3, #0
   17098:	beq	170a4 <__assert_fail@plt+0x5f4c>
   1709c:	mov	r3, #1
   170a0:	b	172f0 <__assert_fail@plt+0x6198>
   170a4:	ldr	r2, [pc, #-1608]	; 16a64 <__assert_fail@plt+0x590c>
   170a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   170ac:	add	r3, r2, r3
   170b0:	ldrb	r3, [r3]
   170b4:	uxtb	r0, r3
   170b8:	mov	r1, #0
   170bc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   170c0:	adds	r2, r2, r0
   170c4:	adc	r3, r3, r1
   170c8:	strd	r2, [fp, #-76]	; 0xffffffb4
   170cc:	sub	r3, fp, #700	; 0x2bc
   170d0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   170d4:	ldrd	r2, [r3, #-8]
   170d8:	cmp	r1, r3
   170dc:	cmpeq	r0, r2
   170e0:	bcs	17108 <__assert_fail@plt+0x5fb0>
   170e4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   170e8:	strd	r2, [fp, #-132]	; 0xffffff7c
   170ec:	mov	r2, #0
   170f0:	mov	r3, #0
   170f4:	strd	r2, [fp, #-140]	; 0xffffff74
   170f8:	mov	r2, #64	; 0x40
   170fc:	mov	r3, #0
   17100:	strd	r2, [fp, #-148]	; 0xffffff6c
   17104:	b	17234 <__assert_fail@plt+0x60dc>
   17108:	mov	r2, #0
   1710c:	mov	r3, #0
   17110:	strd	r2, [fp, #-132]	; 0xffffff7c
   17114:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17118:	strd	r2, [fp, #-140]	; 0xffffff74
   1711c:	mov	r2, #128	; 0x80
   17120:	mov	r3, #0
   17124:	strd	r2, [fp, #-148]	; 0xffffff6c
   17128:	b	17234 <__assert_fail@plt+0x60dc>
   1712c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   17130:	adds	r2, r2, r2
   17134:	adc	r3, r3, r3
   17138:	mov	r0, r2
   1713c:	mov	r1, r3
   17140:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17144:	lsr	r3, r3, #31
   17148:	str	r3, [fp, #-788]	; 0xfffffcec
   1714c:	mov	r3, #0
   17150:	str	r3, [fp, #-784]	; 0xfffffcf0
   17154:	sub	r3, fp, #788	; 0x314
   17158:	ldrd	r2, [r3]
   1715c:	orr	r2, r2, r0
   17160:	orr	r3, r3, r1
   17164:	strd	r2, [fp, #-132]	; 0xffffff7c
   17168:	ldrd	r2, [fp, #-140]	; 0xffffff74
   1716c:	adds	r2, r2, r2
   17170:	adc	r3, r3, r3
   17174:	strd	r2, [fp, #-140]	; 0xffffff74
   17178:	sub	r3, fp, #700	; 0x2bc
   1717c:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17180:	ldrd	r2, [r3, #-8]
   17184:	cmp	r1, r3
   17188:	cmpeq	r0, r2
   1718c:	bhi	171c0 <__assert_fail@plt+0x6068>
   17190:	sub	r3, fp, #700	; 0x2bc
   17194:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17198:	ldrd	r2, [r3, #-8]
   1719c:	cmp	r1, r3
   171a0:	cmpeq	r0, r2
   171a4:	bne	17234 <__assert_fail@plt+0x60dc>
   171a8:	sub	r3, fp, #716	; 0x2cc
   171ac:	ldrd	r0, [fp, #-140]	; 0xffffff74
   171b0:	ldrd	r2, [r3]
   171b4:	cmp	r1, r3
   171b8:	cmpeq	r0, r2
   171bc:	bcc	17234 <__assert_fail@plt+0x60dc>
   171c0:	sub	r3, fp, #716	; 0x2cc
   171c4:	ldrd	r0, [fp, #-140]	; 0xffffff74
   171c8:	ldrd	r2, [r3]
   171cc:	cmp	r1, r3
   171d0:	cmpeq	r0, r2
   171d4:	movcc	r3, #1
   171d8:	movcs	r3, #0
   171dc:	uxtb	r2, r3
   171e0:	sub	r3, fp, #332	; 0x14c
   171e4:	mov	r1, r3
   171e8:	uxtb	r2, r2
   171ec:	mov	r3, #0
   171f0:	strd	r2, [r1]
   171f4:	sub	r3, fp, #716	; 0x2cc
   171f8:	ldrd	r0, [fp, #-140]	; 0xffffff74
   171fc:	ldrd	r2, [r3]
   17200:	subs	r2, r0, r2
   17204:	sbc	r3, r1, r3
   17208:	strd	r2, [fp, #-140]	; 0xffffff74
   1720c:	sub	r3, fp, #700	; 0x2bc
   17210:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17214:	ldrd	r2, [r3, #-8]
   17218:	subs	r0, r0, r2
   1721c:	sbc	r1, r1, r3
   17220:	sub	r3, fp, #332	; 0x14c
   17224:	ldrd	r2, [r3]
   17228:	subs	r2, r0, r2
   1722c:	sbc	r3, r1, r3
   17230:	strd	r2, [fp, #-132]	; 0xffffff7c
   17234:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   17238:	subs	r2, r0, #1
   1723c:	sbc	r3, r1, #0
   17240:	strd	r2, [fp, #-148]	; 0xffffff6c
   17244:	orrs	r3, r0, r1
   17248:	bne	1712c <__assert_fail@plt+0x5fd4>
   1724c:	sub	r3, fp, #380	; 0x17c
   17250:	mov	r1, r3
   17254:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   17258:	strd	r2, [r1, #8]
   1725c:	sub	r3, fp, #380	; 0x17c
   17260:	mov	r1, r3
   17264:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17268:	strd	r2, [r1]
   1726c:	sub	r1, fp, #412	; 0x19c
   17270:	sub	r3, fp, #396	; 0x18c
   17274:	str	r3, [sp, #12]
   17278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1727c:	str	r3, [sp, #8]
   17280:	sub	r3, fp, #348	; 0x15c
   17284:	str	r3, [sp, #4]
   17288:	sub	r3, fp, #380	; 0x17c
   1728c:	str	r3, [sp]
   17290:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17294:	mov	r0, r1
   17298:	bl	150e4 <__assert_fail@plt+0x3f8c>
   1729c:	mov	r3, r0
   172a0:	eor	r3, r3, #1
   172a4:	uxtb	r3, r3
   172a8:	cmp	r3, #0
   172ac:	beq	172b8 <__assert_fail@plt+0x6160>
   172b0:	mov	r3, #0
   172b4:	b	172f0 <__assert_fail@plt+0x6198>
   172b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   172bc:	add	r3, r3, #1
   172c0:	str	r3, [fp, #-104]	; 0xffffff98
   172c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   172c8:	cmp	r3, #668	; 0x29c
   172cc:	bcc	1670c <__assert_fail@plt+0x55b4>
   172d0:	ldr	r0, [pc, #-2160]	; 16a68 <__assert_fail@plt+0x5910>
   172d4:	bl	11044 <gettext@plt>
   172d8:	mov	r3, r0
   172dc:	mov	r2, r3
   172e0:	mov	r1, #0
   172e4:	mov	r0, #0
   172e8:	bl	10fcc <error@plt>
   172ec:	bl	11140 <abort@plt>
   172f0:	mov	r0, r3
   172f4:	sub	sp, fp, #28
   172f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   172fc:	push	{fp, lr}
   17300:	add	fp, sp, #4
   17304:	sub	sp, sp, #96	; 0x60
   17308:	str	r0, [fp, #-88]	; 0xffffffa8
   1730c:	mov	r1, #1
   17310:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17314:	bl	204fc <__assert_fail@plt+0xf3a4>
   17318:	mov	r3, r0
   1731c:	cmp	r3, #0
   17320:	bgt	1732c <__assert_fail@plt+0x61d4>
   17324:	mov	r3, #0
   17328:	b	17610 <__assert_fail@plt+0x64b8>
   1732c:	ldr	r1, [pc, #744]	; 1761c <__assert_fail@plt+0x64c4>
   17330:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17334:	bl	204fc <__assert_fail@plt+0xf3a4>
   17338:	mov	r3, r0
   1733c:	cmp	r3, #0
   17340:	bge	1734c <__assert_fail@plt+0x61f4>
   17344:	mov	r3, #1
   17348:	b	17610 <__assert_fail@plt+0x64b8>
   1734c:	sub	r0, fp, #56	; 0x38
   17350:	sub	r2, fp, #44	; 0x2c
   17354:	sub	r1, fp, #32
   17358:	mov	r3, #0
   1735c:	str	r3, [sp, #4]
   17360:	sub	r3, fp, #68	; 0x44
   17364:	str	r3, [sp]
   17368:	mov	r3, r0
   1736c:	ldr	r0, [pc, #684]	; 17620 <__assert_fail@plt+0x64c8>
   17370:	bl	11e28 <__assert_fail@plt+0xcd0>
   17374:	sub	r3, fp, #56	; 0x38
   17378:	mov	r2, #1
   1737c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17380:	mov	r0, r3
   17384:	bl	20874 <__assert_fail@plt+0xf71c>
   17388:	sub	r3, fp, #56	; 0x38
   1738c:	mov	r1, #0
   17390:	mov	r0, r3
   17394:	bl	26464 <__assert_fail@plt+0x1530c>
   17398:	str	r0, [fp, #-20]	; 0xffffffec
   1739c:	sub	r1, fp, #56	; 0x38
   173a0:	sub	r3, fp, #32
   173a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   173a8:	mov	r0, r3
   173ac:	bl	21f10 <__assert_fail@plt+0x10db8>
   173b0:	sub	r3, fp, #44	; 0x2c
   173b4:	mov	r1, #2
   173b8:	mov	r0, r3
   173bc:	bl	1f56c <__assert_fail@plt+0xe414>
   173c0:	sub	r0, fp, #68	; 0x44
   173c4:	sub	r2, fp, #44	; 0x2c
   173c8:	sub	r1, fp, #56	; 0x38
   173cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   173d0:	str	r3, [sp, #4]
   173d4:	sub	r3, fp, #32
   173d8:	str	r3, [sp]
   173dc:	mov	r3, r0
   173e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   173e4:	bl	1530c <__assert_fail@plt+0x41b4>
   173e8:	mov	r3, r0
   173ec:	eor	r3, r3, #1
   173f0:	uxtb	r3, r3
   173f4:	cmp	r3, #0
   173f8:	beq	17408 <__assert_fail@plt+0x62b0>
   173fc:	mov	r3, #0
   17400:	strb	r3, [fp, #-5]
   17404:	b	175e4 <__assert_fail@plt+0x648c>
   17408:	ldr	r3, [pc, #532]	; 17624 <__assert_fail@plt+0x64cc>
   1740c:	ldrb	r3, [r3]
   17410:	cmp	r3, #0
   17414:	beq	17440 <__assert_fail@plt+0x62e8>
   17418:	sub	r2, fp, #56	; 0x38
   1741c:	sub	r3, fp, #68	; 0x44
   17420:	mov	r1, r2
   17424:	mov	r0, r3
   17428:	bl	1f5e8 <__assert_fail@plt+0xe490>
   1742c:	sub	r2, fp, #80	; 0x50
   17430:	sub	r3, fp, #68	; 0x44
   17434:	mov	r1, r2
   17438:	mov	r0, r3
   1743c:	bl	19b70 <__assert_fail@plt+0x8a18>
   17440:	mov	r3, #0
   17444:	str	r3, [fp, #-12]
   17448:	b	17598 <__assert_fail@plt+0x6440>
   1744c:	ldr	r3, [pc, #464]	; 17624 <__assert_fail@plt+0x64cc>
   17450:	ldrb	r3, [r3]
   17454:	cmp	r3, #0
   17458:	beq	17500 <__assert_fail@plt+0x63a8>
   1745c:	mov	r3, #1
   17460:	strb	r3, [fp, #-5]
   17464:	mov	r3, #0
   17468:	str	r3, [fp, #-16]
   1746c:	b	174e0 <__assert_fail@plt+0x6388>
   17470:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17474:	ldr	r2, [fp, #-16]
   17478:	mov	r3, r2
   1747c:	lsl	r3, r3, #1
   17480:	add	r3, r3, r2
   17484:	lsl	r3, r3, #2
   17488:	add	r2, r1, r3
   1748c:	sub	r1, fp, #56	; 0x38
   17490:	sub	r3, fp, #68	; 0x44
   17494:	mov	r0, r3
   17498:	bl	21ff0 <__assert_fail@plt+0x10e98>
   1749c:	sub	r2, fp, #68	; 0x44
   174a0:	sub	r1, fp, #44	; 0x2c
   174a4:	sub	r0, fp, #68	; 0x44
   174a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   174ac:	bl	23624 <__assert_fail@plt+0x124cc>
   174b0:	sub	r3, fp, #68	; 0x44
   174b4:	mov	r1, #1
   174b8:	mov	r0, r3
   174bc:	bl	204fc <__assert_fail@plt+0xf3a4>
   174c0:	mov	r3, r0
   174c4:	cmp	r3, #0
   174c8:	movne	r3, #1
   174cc:	moveq	r3, #0
   174d0:	strb	r3, [fp, #-5]
   174d4:	ldr	r3, [fp, #-16]
   174d8:	add	r3, r3, #1
   174dc:	str	r3, [fp, #-16]
   174e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   174e4:	ldr	r3, [fp, #-16]
   174e8:	cmp	r2, r3
   174ec:	bls	17514 <__assert_fail@plt+0x63bc>
   174f0:	ldrb	r3, [fp, #-5]
   174f4:	cmp	r3, #0
   174f8:	bne	17470 <__assert_fail@plt+0x6318>
   174fc:	b	17514 <__assert_fail@plt+0x63bc>
   17500:	ldr	r3, [fp, #-12]
   17504:	cmp	r3, #24
   17508:	moveq	r3, #1
   1750c:	movne	r3, #0
   17510:	strb	r3, [fp, #-5]
   17514:	ldrb	r3, [fp, #-5]
   17518:	cmp	r3, #0
   1751c:	bne	175c4 <__assert_fail@plt+0x646c>
   17520:	ldr	r2, [pc, #256]	; 17628 <__assert_fail@plt+0x64d0>
   17524:	ldr	r3, [fp, #-12]
   17528:	add	r3, r2, r3
   1752c:	ldrb	r3, [r3]
   17530:	mov	r2, r3
   17534:	sub	r1, fp, #44	; 0x2c
   17538:	sub	r3, fp, #44	; 0x2c
   1753c:	mov	r0, r3
   17540:	bl	20820 <__assert_fail@plt+0xf6c8>
   17544:	sub	r0, fp, #68	; 0x44
   17548:	sub	r2, fp, #44	; 0x2c
   1754c:	sub	r1, fp, #56	; 0x38
   17550:	ldr	r3, [fp, #-20]	; 0xffffffec
   17554:	str	r3, [sp, #4]
   17558:	sub	r3, fp, #32
   1755c:	str	r3, [sp]
   17560:	mov	r3, r0
   17564:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17568:	bl	1530c <__assert_fail@plt+0x41b4>
   1756c:	mov	r3, r0
   17570:	eor	r3, r3, #1
   17574:	uxtb	r3, r3
   17578:	cmp	r3, #0
   1757c:	beq	1758c <__assert_fail@plt+0x6434>
   17580:	mov	r3, #0
   17584:	strb	r3, [fp, #-5]
   17588:	b	175c8 <__assert_fail@plt+0x6470>
   1758c:	ldr	r3, [fp, #-12]
   17590:	add	r3, r3, #1
   17594:	str	r3, [fp, #-12]
   17598:	ldr	r3, [fp, #-12]
   1759c:	cmp	r3, #668	; 0x29c
   175a0:	bcc	1744c <__assert_fail@plt+0x62f4>
   175a4:	ldr	r0, [pc, #128]	; 1762c <__assert_fail@plt+0x64d4>
   175a8:	bl	11044 <gettext@plt>
   175ac:	mov	r3, r0
   175b0:	mov	r2, r3
   175b4:	mov	r1, #0
   175b8:	mov	r0, #0
   175bc:	bl	10fcc <error@plt>
   175c0:	bl	11140 <abort@plt>
   175c4:	nop			; (mov r0, r0)
   175c8:	ldr	r3, [pc, #84]	; 17624 <__assert_fail@plt+0x64cc>
   175cc:	ldrb	r3, [r3]
   175d0:	cmp	r3, #0
   175d4:	beq	175e4 <__assert_fail@plt+0x648c>
   175d8:	sub	r3, fp, #80	; 0x50
   175dc:	mov	r0, r3
   175e0:	bl	11ec8 <__assert_fail@plt+0xd70>
   175e4:	sub	r0, fp, #56	; 0x38
   175e8:	sub	r2, fp, #44	; 0x2c
   175ec:	sub	r1, fp, #32
   175f0:	mov	r3, #0
   175f4:	str	r3, [sp, #4]
   175f8:	sub	r3, fp, #68	; 0x44
   175fc:	str	r3, [sp]
   17600:	mov	r3, r0
   17604:	ldr	r0, [pc, #36]	; 17630 <__assert_fail@plt+0x64d8>
   17608:	bl	11e28 <__assert_fail@plt+0xcd0>
   1760c:	ldrb	r3, [fp, #-5]
   17610:	mov	r0, r3
   17614:	sub	sp, fp, #4
   17618:	pop	{fp, pc}
   1761c:	cmneq	sp, r9, ror sp
   17620:	andeq	pc, r1, r8, lsl r3	; <UNPREDICTABLE>
   17624:	andeq	r5, r4, r4, lsl r1
   17628:			; <UNDEFINED> instruction: 0x000305bc
   1762c:	andeq	r3, r3, r4, asr #12
   17630:	andeq	pc, r1, r0, ror #7
   17634:	push	{r4, r5, fp, lr}
   17638:	add	fp, sp, #12
   1763c:	sub	sp, sp, #224	; 0xe0
   17640:	strd	r0, [fp, #-212]	; 0xffffff2c
   17644:	str	r2, [fp, #-216]	; 0xffffff28
   17648:	str	r3, [fp, #-220]	; 0xffffff24
   1764c:	mov	r3, #1
   17650:	str	r3, [fp, #-48]	; 0xffffffd0
   17654:	mov	r3, #1
   17658:	str	r3, [fp, #-52]	; 0xffffffcc
   1765c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17660:	cmp	r3, #0
   17664:	cmpeq	r2, #1
   17668:	bhi	17680 <__assert_fail@plt+0x6528>
   1766c:	ldr	r3, [pc, #2116]	; 17eb8 <__assert_fail@plt+0x6d60>
   17670:	ldr	r2, [pc, #2116]	; 17ebc <__assert_fail@plt+0x6d64>
   17674:	ldr	r1, [pc, #2116]	; 17ec0 <__assert_fail@plt+0x6d68>
   17678:	ldr	r0, [pc, #2116]	; 17ec4 <__assert_fail@plt+0x6d6c>
   1767c:	bl	11158 <__assert_fail@plt>
   17680:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17684:	strd	r2, [fp, #-60]	; 0xffffffc4
   17688:	mov	r2, #0
   1768c:	mov	r3, #0
   17690:	strd	r2, [fp, #-68]	; 0xffffffbc
   17694:	mov	r2, #1
   17698:	mov	r3, #0
   1769c:	strd	r2, [fp, #-84]	; 0xffffffac
   176a0:	mov	r2, #0
   176a4:	mov	r3, #0
   176a8:	strd	r2, [fp, #-92]	; 0xffffffa4
   176ac:	mov	r2, #0
   176b0:	mov	r3, #0
   176b4:	strd	r2, [fp, #-76]	; 0xffffffb4
   176b8:	mov	r3, #64	; 0x40
   176bc:	str	r3, [fp, #-96]	; 0xffffffa0
   176c0:	b	177bc <__assert_fail@plt+0x6664>
   176c4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   176c8:	lsl	r5, r2, #31
   176cc:	mov	r4, #0
   176d0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   176d4:	lsrs	r3, r3, #1
   176d8:	rrx	r2, r2
   176dc:	orr	r2, r2, r4
   176e0:	orr	r3, r3, r5
   176e4:	strd	r2, [fp, #-68]	; 0xffffffbc
   176e8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   176ec:	lsrs	r3, r3, #1
   176f0:	rrx	r2, r2
   176f4:	strd	r2, [fp, #-60]	; 0xffffffc4
   176f8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   176fc:	adds	r2, r2, r2
   17700:	adc	r3, r3, r3
   17704:	strd	r2, [fp, #-76]	; 0xffffffb4
   17708:	ldrd	r0, [fp, #-84]	; 0xffffffac
   1770c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17710:	cmp	r1, r3
   17714:	cmpeq	r0, r2
   17718:	bhi	17744 <__assert_fail@plt+0x65ec>
   1771c:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17720:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17724:	cmp	r1, r3
   17728:	cmpeq	r0, r2
   1772c:	bne	177b0 <__assert_fail@plt+0x6658>
   17730:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   17734:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17738:	cmp	r1, r3
   1773c:	cmpeq	r0, r2
   17740:	bcc	177b0 <__assert_fail@plt+0x6658>
   17744:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17748:	adds	r2, r2, #1
   1774c:	adc	r3, r3, #0
   17750:	strd	r2, [fp, #-76]	; 0xffffffb4
   17754:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   17758:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1775c:	cmp	r1, r3
   17760:	cmpeq	r0, r2
   17764:	movcc	r3, #1
   17768:	movcs	r3, #0
   1776c:	uxtb	r3, r3
   17770:	uxtb	r2, r3
   17774:	mov	r3, #0
   17778:	strd	r2, [fp, #-108]	; 0xffffff94
   1777c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   17780:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17784:	subs	r2, r0, r2
   17788:	sbc	r3, r1, r3
   1778c:	strd	r2, [fp, #-92]	; 0xffffffa4
   17790:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17794:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17798:	subs	r0, r0, r2
   1779c:	sbc	r1, r1, r3
   177a0:	ldrd	r2, [fp, #-108]	; 0xffffff94
   177a4:	subs	r2, r0, r2
   177a8:	sbc	r3, r1, r3
   177ac:	strd	r2, [fp, #-84]	; 0xffffffac
   177b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   177b4:	sub	r3, r3, #1
   177b8:	str	r3, [fp, #-96]	; 0xffffffa0
   177bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   177c0:	cmp	r3, #0
   177c4:	bne	176c4 <__assert_fail@plt+0x656c>
   177c8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   177cc:	strd	r2, [fp, #-44]	; 0xffffffd4
   177d0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   177d4:	strd	r2, [fp, #-116]	; 0xffffff8c
   177d8:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   177dc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   177e0:	subs	r0, r0, r2
   177e4:	sbc	r1, r1, r3
   177e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   177ec:	cmp	r1, r3
   177f0:	cmpeq	r0, r2
   177f4:	movhi	r3, #1
   177f8:	movls	r3, #0
   177fc:	uxtb	r3, r3
   17800:	uxtb	r2, r3
   17804:	mov	r3, #0
   17808:	rsbs	r2, r2, #0
   1780c:	rsc	r3, r3, #0
   17810:	strd	r2, [fp, #-124]	; 0xffffff84
   17814:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17818:	ldrd	r2, [fp, #-124]	; 0xffffff84
   1781c:	and	r0, r0, r2
   17820:	and	r1, r1, r3
   17824:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17828:	adds	r0, r0, r2
   1782c:	adc	r1, r1, r3
   17830:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   17834:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17838:	subs	r2, r4, r2
   1783c:	sbc	r3, r5, r3
   17840:	adds	r2, r2, r0
   17844:	adc	r3, r3, r1
   17848:	strd	r2, [fp, #-20]	; 0xffffffec
   1784c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17850:	strd	r2, [fp, #-28]	; 0xffffffe4
   17854:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17858:	strd	r2, [fp, #-36]	; 0xffffffdc
   1785c:	b	17ea0 <__assert_fail@plt+0x6d48>
   17860:	ldr	r3, [fp, #-216]	; 0xffffff28
   17864:	mov	r0, r3
   17868:	mov	r1, #0
   1786c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17870:	cmp	r1, r3
   17874:	cmpeq	r0, r2
   17878:	bcc	17890 <__assert_fail@plt+0x6738>
   1787c:	ldr	r3, [pc, #1588]	; 17eb8 <__assert_fail@plt+0x6d60>
   17880:	mov	r2, #1472	; 0x5c0
   17884:	ldr	r1, [pc, #1588]	; 17ec0 <__assert_fail@plt+0x6d68>
   17888:	ldr	r0, [pc, #1592]	; 17ec8 <__assert_fail@plt+0x6d70>
   1788c:	bl	11158 <__assert_fail@plt>
   17890:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17894:	strd	r2, [fp, #-132]	; 0xffffff7c
   17898:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1789c:	lsrs	r3, r3, #1
   178a0:	rrx	r2, r2
   178a4:	mov	r0, #127	; 0x7f
   178a8:	mov	r1, #0
   178ac:	and	r2, r2, r0
   178b0:	and	r3, r3, r1
   178b4:	ldr	r1, [pc, #1552]	; 17ecc <__assert_fail@plt+0x6d74>
   178b8:	add	r3, r1, r2
   178bc:	ldrb	r3, [r3]
   178c0:	uxtb	r2, r3
   178c4:	mov	r3, #0
   178c8:	strd	r2, [fp, #-140]	; 0xffffff74
   178cc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   178d0:	adds	r2, r2, r2
   178d4:	adc	r3, r3, r3
   178d8:	mov	r0, r2
   178dc:	mov	r1, r3
   178e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   178e4:	ldr	r2, [fp, #-140]	; 0xffffff74
   178e8:	mul	r2, r2, r3
   178ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   178f0:	ldr	ip, [fp, #-140]	; 0xffffff74
   178f4:	mul	r3, ip, r3
   178f8:	add	ip, r2, r3
   178fc:	ldr	r2, [fp, #-140]	; 0xffffff74
   17900:	ldr	r3, [fp, #-140]	; 0xffffff74
   17904:	umull	r2, r3, r2, r3
   17908:	add	ip, ip, r3
   1790c:	mov	r3, ip
   17910:	ldr	ip, [fp, #-132]	; 0xffffff7c
   17914:	mul	lr, r3, ip
   17918:	ldr	ip, [fp, #-128]	; 0xffffff80
   1791c:	mul	ip, r2, ip
   17920:	add	ip, lr, ip
   17924:	ldr	lr, [fp, #-132]	; 0xffffff7c
   17928:	umull	r2, r3, lr, r2
   1792c:	add	ip, ip, r3
   17930:	mov	r3, ip
   17934:	subs	r2, r0, r2
   17938:	sbc	r3, r1, r3
   1793c:	strd	r2, [fp, #-140]	; 0xffffff74
   17940:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17944:	adds	r2, r2, r2
   17948:	adc	r3, r3, r3
   1794c:	mov	r0, r2
   17950:	mov	r1, r3
   17954:	ldr	r3, [fp, #-136]	; 0xffffff78
   17958:	ldr	r2, [fp, #-140]	; 0xffffff74
   1795c:	mul	r2, r2, r3
   17960:	ldr	r3, [fp, #-136]	; 0xffffff78
   17964:	ldr	ip, [fp, #-140]	; 0xffffff74
   17968:	mul	r3, ip, r3
   1796c:	add	ip, r2, r3
   17970:	ldr	r2, [fp, #-140]	; 0xffffff74
   17974:	ldr	r3, [fp, #-140]	; 0xffffff74
   17978:	umull	r2, r3, r2, r3
   1797c:	add	ip, ip, r3
   17980:	mov	r3, ip
   17984:	ldr	ip, [fp, #-132]	; 0xffffff7c
   17988:	mul	lr, r3, ip
   1798c:	ldr	ip, [fp, #-128]	; 0xffffff80
   17990:	mul	ip, r2, ip
   17994:	add	ip, lr, ip
   17998:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1799c:	umull	r2, r3, lr, r2
   179a0:	add	ip, ip, r3
   179a4:	mov	r3, ip
   179a8:	subs	r2, r0, r2
   179ac:	sbc	r3, r1, r3
   179b0:	strd	r2, [fp, #-140]	; 0xffffff74
   179b4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   179b8:	adds	r2, r2, r2
   179bc:	adc	r3, r3, r3
   179c0:	mov	r0, r2
   179c4:	mov	r1, r3
   179c8:	ldr	r3, [fp, #-136]	; 0xffffff78
   179cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   179d0:	mul	r2, r2, r3
   179d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   179d8:	ldr	ip, [fp, #-140]	; 0xffffff74
   179dc:	mul	r3, ip, r3
   179e0:	add	ip, r2, r3
   179e4:	ldr	r2, [fp, #-140]	; 0xffffff74
   179e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   179ec:	umull	r2, r3, r2, r3
   179f0:	add	ip, ip, r3
   179f4:	mov	r3, ip
   179f8:	ldr	ip, [fp, #-132]	; 0xffffff7c
   179fc:	mul	lr, r3, ip
   17a00:	ldr	ip, [fp, #-128]	; 0xffffff80
   17a04:	mul	ip, r2, ip
   17a08:	add	ip, lr, ip
   17a0c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   17a10:	umull	r2, r3, lr, r2
   17a14:	add	ip, ip, r3
   17a18:	mov	r3, ip
   17a1c:	subs	r2, r0, r2
   17a20:	sbc	r3, r1, r3
   17a24:	strd	r2, [fp, #-140]	; 0xffffff74
   17a28:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17a2c:	strd	r2, [fp, #-148]	; 0xffffff6c
   17a30:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   17a34:	strd	r2, [sp, #8]
   17a38:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17a3c:	strd	r2, [sp]
   17a40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a44:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17a48:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   17a4c:	strd	r0, [fp, #-20]	; 0xffffffec
   17a50:	ldr	r3, [fp, #-216]	; 0xffffff28
   17a54:	mov	r2, r3
   17a58:	mov	r3, #0
   17a5c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17a60:	subs	r0, r0, r2
   17a64:	sbc	r1, r1, r3
   17a68:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a6c:	cmp	r1, r3
   17a70:	cmpeq	r0, r2
   17a74:	movhi	r3, #1
   17a78:	movls	r3, #0
   17a7c:	uxtb	r3, r3
   17a80:	uxtb	r2, r3
   17a84:	mov	r3, #0
   17a88:	rsbs	r2, r2, #0
   17a8c:	rsc	r3, r3, #0
   17a90:	strd	r2, [fp, #-156]	; 0xffffff64
   17a94:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17a98:	ldrd	r2, [fp, #-156]	; 0xffffff64
   17a9c:	and	r0, r0, r2
   17aa0:	and	r1, r1, r3
   17aa4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17aa8:	adds	r0, r0, r2
   17aac:	adc	r1, r1, r3
   17ab0:	ldr	r3, [fp, #-216]	; 0xffffff28
   17ab4:	mov	r4, r3
   17ab8:	mov	r5, #0
   17abc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17ac0:	subs	r2, r4, r2
   17ac4:	sbc	r3, r5, r3
   17ac8:	adds	r2, r2, r0
   17acc:	adc	r3, r3, r1
   17ad0:	strd	r2, [fp, #-20]	; 0xffffffec
   17ad4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   17ad8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17adc:	cmp	r1, r3
   17ae0:	cmpeq	r0, r2
   17ae4:	movcc	r3, #1
   17ae8:	movcs	r3, #0
   17aec:	uxtb	r3, r3
   17af0:	uxtb	r2, r3
   17af4:	mov	r3, #0
   17af8:	rsbs	r2, r2, #0
   17afc:	rsc	r3, r3, #0
   17b00:	strd	r2, [fp, #-164]	; 0xffffff5c
   17b04:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17b08:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   17b0c:	and	r0, r0, r2
   17b10:	and	r1, r1, r3
   17b14:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17b18:	adds	r0, r0, r2
   17b1c:	adc	r1, r1, r3
   17b20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b24:	subs	r2, r0, r2
   17b28:	sbc	r3, r1, r3
   17b2c:	strd	r2, [fp, #-172]	; 0xffffff54
   17b30:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   17b34:	strd	r2, [sp, #8]
   17b38:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17b3c:	strd	r2, [sp]
   17b40:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17b44:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   17b48:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   17b4c:	strd	r0, [fp, #-44]	; 0xffffffd4
   17b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17b54:	and	r3, r3, #31
   17b58:	cmp	r3, #1
   17b5c:	bne	17b8c <__assert_fail@plt+0x6a34>
   17b60:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17b64:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   17b68:	bl	1177c <__assert_fail@plt+0x624>
   17b6c:	mov	r2, r0
   17b70:	mov	r3, r1
   17b74:	cmp	r3, #0
   17b78:	cmpeq	r2, #1
   17b7c:	beq	17b84 <__assert_fail@plt+0x6a2c>
   17b80:	b	17c98 <__assert_fail@plt+0x6b40>
   17b84:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b88:	strd	r2, [fp, #-36]	; 0xffffffdc
   17b8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17b90:	sub	r3, r3, #1
   17b94:	str	r3, [fp, #-48]	; 0xffffffd0
   17b98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17b9c:	cmp	r3, #0
   17ba0:	bne	17a30 <__assert_fail@plt+0x68d8>
   17ba4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17ba8:	strd	r2, [fp, #-28]	; 0xffffffe4
   17bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17bb0:	str	r3, [fp, #-48]	; 0xffffffd0
   17bb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17bb8:	lsl	r3, r3, #1
   17bbc:	str	r3, [fp, #-52]	; 0xffffffcc
   17bc0:	mov	r3, #0
   17bc4:	str	r3, [fp, #-100]	; 0xffffff9c
   17bc8:	b	17c7c <__assert_fail@plt+0x6b24>
   17bcc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   17bd0:	strd	r2, [sp, #8]
   17bd4:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17bd8:	strd	r2, [sp]
   17bdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17be0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17be4:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   17be8:	strd	r0, [fp, #-20]	; 0xffffffec
   17bec:	ldr	r3, [fp, #-216]	; 0xffffff28
   17bf0:	mov	r2, r3
   17bf4:	mov	r3, #0
   17bf8:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17bfc:	subs	r0, r0, r2
   17c00:	sbc	r1, r1, r3
   17c04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c08:	cmp	r1, r3
   17c0c:	cmpeq	r0, r2
   17c10:	movhi	r3, #1
   17c14:	movls	r3, #0
   17c18:	uxtb	r3, r3
   17c1c:	uxtb	r2, r3
   17c20:	mov	r3, #0
   17c24:	rsbs	r2, r2, #0
   17c28:	rsc	r3, r3, #0
   17c2c:	strd	r2, [fp, #-180]	; 0xffffff4c
   17c30:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17c34:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17c38:	and	r0, r0, r2
   17c3c:	and	r1, r1, r3
   17c40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c44:	adds	r0, r0, r2
   17c48:	adc	r1, r1, r3
   17c4c:	ldr	r3, [fp, #-216]	; 0xffffff28
   17c50:	mov	r4, r3
   17c54:	mov	r5, #0
   17c58:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17c5c:	subs	r2, r4, r2
   17c60:	sbc	r3, r5, r3
   17c64:	adds	r2, r2, r0
   17c68:	adc	r3, r3, r1
   17c6c:	strd	r2, [fp, #-20]	; 0xffffffec
   17c70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17c74:	add	r3, r3, #1
   17c78:	str	r3, [fp, #-100]	; 0xffffff9c
   17c7c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c84:	cmp	r2, r3
   17c88:	bcc	17bcc <__assert_fail@plt+0x6a74>
   17c8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c90:	strd	r2, [fp, #-36]	; 0xffffffdc
   17c94:	b	17a30 <__assert_fail@plt+0x68d8>
   17c98:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   17c9c:	strd	r2, [sp, #8]
   17ca0:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17ca4:	strd	r2, [sp]
   17ca8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17cac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17cb0:	bl	12ef4 <__assert_fail@plt+0x1d9c>
   17cb4:	strd	r0, [fp, #-36]	; 0xffffffdc
   17cb8:	ldr	r3, [fp, #-216]	; 0xffffff28
   17cbc:	mov	r2, r3
   17cc0:	mov	r3, #0
   17cc4:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17cc8:	subs	r0, r0, r2
   17ccc:	sbc	r1, r1, r3
   17cd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17cd4:	cmp	r1, r3
   17cd8:	cmpeq	r0, r2
   17cdc:	movhi	r3, #1
   17ce0:	movls	r3, #0
   17ce4:	uxtb	r3, r3
   17ce8:	uxtb	r2, r3
   17cec:	mov	r3, #0
   17cf0:	rsbs	r2, r2, #0
   17cf4:	rsc	r3, r3, #0
   17cf8:	strd	r2, [fp, #-188]	; 0xffffff44
   17cfc:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17d00:	ldrd	r2, [fp, #-188]	; 0xffffff44
   17d04:	and	r0, r0, r2
   17d08:	and	r1, r1, r3
   17d0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17d10:	adds	r0, r0, r2
   17d14:	adc	r1, r1, r3
   17d18:	ldr	r3, [fp, #-216]	; 0xffffff28
   17d1c:	mov	r4, r3
   17d20:	mov	r5, #0
   17d24:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17d28:	subs	r2, r4, r2
   17d2c:	sbc	r3, r5, r3
   17d30:	adds	r2, r2, r0
   17d34:	adc	r3, r3, r1
   17d38:	strd	r2, [fp, #-36]	; 0xffffffdc
   17d3c:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   17d40:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17d44:	cmp	r1, r3
   17d48:	cmpeq	r0, r2
   17d4c:	movcc	r3, #1
   17d50:	movcs	r3, #0
   17d54:	uxtb	r3, r3
   17d58:	uxtb	r2, r3
   17d5c:	mov	r3, #0
   17d60:	rsbs	r2, r2, #0
   17d64:	rsc	r3, r3, #0
   17d68:	strd	r2, [fp, #-196]	; 0xffffff3c
   17d6c:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17d70:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17d74:	and	r0, r0, r2
   17d78:	and	r1, r1, r3
   17d7c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17d80:	adds	r0, r0, r2
   17d84:	adc	r1, r1, r3
   17d88:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17d8c:	subs	r2, r0, r2
   17d90:	sbc	r3, r1, r3
   17d94:	strd	r2, [fp, #-172]	; 0xffffff54
   17d98:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17d9c:	ldrd	r0, [fp, #-172]	; 0xffffff54
   17da0:	bl	1177c <__assert_fail@plt+0x624>
   17da4:	strd	r0, [fp, #-204]	; 0xffffff34
   17da8:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17dac:	cmp	r3, #0
   17db0:	cmpeq	r2, #1
   17db4:	beq	17c98 <__assert_fail@plt+0x6b40>
   17db8:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17dbc:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17dc0:	cmp	r1, r3
   17dc4:	cmpeq	r0, r2
   17dc8:	bne	17de4 <__assert_fail@plt+0x6c8c>
   17dcc:	ldr	r3, [fp, #-216]	; 0xffffff28
   17dd0:	add	r2, r3, #1
   17dd4:	ldr	r3, [fp, #-220]	; 0xffffff24
   17dd8:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17ddc:	bl	17634 <__assert_fail@plt+0x64dc>
   17de0:	b	17eb0 <__assert_fail@plt+0x6d58>
   17de4:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17de8:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17dec:	bl	3017c <__assert_fail@plt+0x1f024>
   17df0:	mov	r2, r0
   17df4:	mov	r3, r1
   17df8:	strd	r2, [fp, #-212]	; 0xffffff2c
   17dfc:	ldrd	r0, [fp, #-204]	; 0xffffff34
   17e00:	bl	15400 <__assert_fail@plt+0x42a8>
   17e04:	mov	r3, r0
   17e08:	eor	r3, r3, #1
   17e0c:	uxtb	r3, r3
   17e10:	cmp	r3, #0
   17e14:	beq	17e30 <__assert_fail@plt+0x6cd8>
   17e18:	ldr	r3, [fp, #-216]	; 0xffffff28
   17e1c:	add	r2, r3, #1
   17e20:	ldr	r3, [fp, #-220]	; 0xffffff24
   17e24:	ldrd	r0, [fp, #-204]	; 0xffffff34
   17e28:	bl	17634 <__assert_fail@plt+0x64dc>
   17e2c:	b	17e44 <__assert_fail@plt+0x6cec>
   17e30:	mov	r3, #1
   17e34:	str	r3, [sp]
   17e38:	ldrd	r2, [fp, #-204]	; 0xffffff34
   17e3c:	ldr	r0, [fp, #-220]	; 0xffffff24
   17e40:	bl	11bcc <__assert_fail@plt+0xa74>
   17e44:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   17e48:	bl	15400 <__assert_fail@plt+0x42a8>
   17e4c:	mov	r3, r0
   17e50:	cmp	r3, #0
   17e54:	beq	17e70 <__assert_fail@plt+0x6d18>
   17e58:	mov	r3, #1
   17e5c:	str	r3, [sp]
   17e60:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17e64:	ldr	r0, [fp, #-220]	; 0xffffff24
   17e68:	bl	11bcc <__assert_fail@plt+0xa74>
   17e6c:	b	17eb0 <__assert_fail@plt+0x6d58>
   17e70:	ldrd	r0, [fp, #-20]	; 0xffffffec
   17e74:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17e78:	bl	3017c <__assert_fail@plt+0x1f024>
   17e7c:	strd	r2, [fp, #-20]	; 0xffffffec
   17e80:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   17e84:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17e88:	bl	3017c <__assert_fail@plt+0x1f024>
   17e8c:	strd	r2, [fp, #-28]	; 0xffffffe4
   17e90:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17e94:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17e98:	bl	3017c <__assert_fail@plt+0x1f024>
   17e9c:	strd	r2, [fp, #-36]	; 0xffffffdc
   17ea0:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17ea4:	cmp	r3, #0
   17ea8:	cmpeq	r2, #1
   17eac:	bne	17860 <__assert_fail@plt+0x6708>
   17eb0:	sub	sp, fp, #12
   17eb4:	pop	{r4, r5, fp, pc}
   17eb8:	andeq	r3, r3, r4, ror #18
   17ebc:			; <UNDEFINED> instruction: 0x000005ba
   17ec0:	andeq	r0, r3, r4, lsl #11
   17ec4:	andeq	r3, r3, ip, lsr #12
   17ec8:	andeq	r3, r3, r8, ror r6
   17ecc:	andeq	r3, r3, ip, asr #10
   17ed0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ed4:	add	fp, sp, #28
   17ed8:	sub	sp, sp, #496	; 0x1f0
   17edc:	sub	ip, fp, #444	; 0x1bc
   17ee0:	strd	r0, [ip]
   17ee4:	sub	r1, fp, #444	; 0x1bc
   17ee8:	strd	r2, [r1, #-8]
   17eec:	mov	r3, #1
   17ef0:	str	r3, [fp, #-88]	; 0xffffffa8
   17ef4:	mov	r3, #1
   17ef8:	str	r3, [fp, #-92]	; 0xffffffa4
   17efc:	sub	r3, fp, #444	; 0x1bc
   17f00:	ldrd	r2, [r3]
   17f04:	cmp	r3, #0
   17f08:	cmpeq	r2, #1
   17f0c:	bls	17f38 <__assert_fail@plt+0x6de0>
   17f10:	mov	r2, #1
   17f14:	mov	r3, #0
   17f18:	strd	r2, [fp, #-100]	; 0xffffff9c
   17f1c:	mov	r2, #0
   17f20:	mov	r3, #0
   17f24:	strd	r2, [fp, #-108]	; 0xffffff94
   17f28:	mov	r2, #64	; 0x40
   17f2c:	mov	r3, #0
   17f30:	strd	r2, [fp, #-116]	; 0xffffff8c
   17f34:	b	1804c <__assert_fail@plt+0x6ef4>
   17f38:	mov	r2, #0
   17f3c:	mov	r3, #0
   17f40:	strd	r2, [fp, #-100]	; 0xffffff9c
   17f44:	mov	r2, #1
   17f48:	mov	r3, #0
   17f4c:	strd	r2, [fp, #-108]	; 0xffffff94
   17f50:	mov	r2, #128	; 0x80
   17f54:	mov	r3, #0
   17f58:	strd	r2, [fp, #-116]	; 0xffffff8c
   17f5c:	b	1804c <__assert_fail@plt+0x6ef4>
   17f60:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   17f64:	adds	r2, r2, r2
   17f68:	adc	r3, r3, r3
   17f6c:	mov	r0, r2
   17f70:	mov	r1, r3
   17f74:	ldrd	r2, [fp, #-108]	; 0xffffff94
   17f78:	lsr	r4, r3, #31
   17f7c:	mov	r5, #0
   17f80:	orr	r2, r0, r4
   17f84:	orr	r3, r1, r5
   17f88:	strd	r2, [fp, #-100]	; 0xffffff9c
   17f8c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   17f90:	adds	r2, r2, r2
   17f94:	adc	r3, r3, r3
   17f98:	strd	r2, [fp, #-108]	; 0xffffff94
   17f9c:	sub	r3, fp, #444	; 0x1bc
   17fa0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   17fa4:	ldrd	r2, [r3]
   17fa8:	cmp	r1, r3
   17fac:	cmpeq	r0, r2
   17fb0:	bhi	17fe4 <__assert_fail@plt+0x6e8c>
   17fb4:	sub	r3, fp, #444	; 0x1bc
   17fb8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   17fbc:	ldrd	r2, [r3]
   17fc0:	cmp	r1, r3
   17fc4:	cmpeq	r0, r2
   17fc8:	bne	1804c <__assert_fail@plt+0x6ef4>
   17fcc:	sub	r3, fp, #444	; 0x1bc
   17fd0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   17fd4:	ldrd	r2, [r3, #-8]
   17fd8:	cmp	r1, r3
   17fdc:	cmpeq	r0, r2
   17fe0:	bcc	1804c <__assert_fail@plt+0x6ef4>
   17fe4:	sub	r3, fp, #444	; 0x1bc
   17fe8:	ldrd	r0, [fp, #-108]	; 0xffffff94
   17fec:	ldrd	r2, [r3, #-8]
   17ff0:	cmp	r1, r3
   17ff4:	cmpeq	r0, r2
   17ff8:	movcc	r3, #1
   17ffc:	movcs	r3, #0
   18000:	uxtb	r3, r3
   18004:	uxtb	r2, r3
   18008:	mov	r3, #0
   1800c:	strd	r2, [fp, #-140]	; 0xffffff74
   18010:	sub	r3, fp, #444	; 0x1bc
   18014:	ldrd	r0, [fp, #-108]	; 0xffffff94
   18018:	ldrd	r2, [r3, #-8]
   1801c:	subs	r2, r0, r2
   18020:	sbc	r3, r1, r3
   18024:	strd	r2, [fp, #-108]	; 0xffffff94
   18028:	sub	r3, fp, #444	; 0x1bc
   1802c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   18030:	ldrd	r2, [r3]
   18034:	subs	r0, r0, r2
   18038:	sbc	r1, r1, r3
   1803c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   18040:	subs	r2, r0, r2
   18044:	sbc	r3, r1, r3
   18048:	strd	r2, [fp, #-100]	; 0xffffff9c
   1804c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   18050:	subs	r2, r0, #1
   18054:	sbc	r3, r1, #0
   18058:	strd	r2, [fp, #-116]	; 0xffffff8c
   1805c:	orrs	r3, r0, r1
   18060:	bne	17f60 <__assert_fail@plt+0x6e08>
   18064:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   18068:	strd	r2, [fp, #-60]	; 0xffffffc4
   1806c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   18070:	strd	r2, [fp, #-68]	; 0xffffffbc
   18074:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   18078:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1807c:	adds	r2, r2, r0
   18080:	adc	r3, r3, r1
   18084:	strd	r2, [fp, #-148]	; 0xffffff6c
   18088:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1808c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18090:	adds	r4, r0, r2
   18094:	adc	r5, r1, r3
   18098:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   1809c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   180a0:	cmp	r1, r3
   180a4:	cmpeq	r0, r2
   180a8:	movcc	r3, #1
   180ac:	movcs	r3, #0
   180b0:	uxtb	r3, r3
   180b4:	uxtb	r2, r3
   180b8:	mov	r3, #0
   180bc:	adds	r2, r2, r4
   180c0:	adc	r3, r3, r5
   180c4:	sub	r1, fp, #396	; 0x18c
   180c8:	strd	r2, [r1, #-8]
   180cc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   180d0:	strd	r2, [fp, #-36]	; 0xffffffdc
   180d4:	sub	r3, fp, #396	; 0x18c
   180d8:	ldrd	r0, [r3, #-8]
   180dc:	sub	r3, fp, #444	; 0x1bc
   180e0:	ldrd	r2, [r3]
   180e4:	cmp	r1, r3
   180e8:	cmpeq	r0, r2
   180ec:	bhi	18124 <__assert_fail@plt+0x6fcc>
   180f0:	sub	r3, fp, #396	; 0x18c
   180f4:	ldrd	r0, [r3, #-8]
   180f8:	sub	r3, fp, #444	; 0x1bc
   180fc:	ldrd	r2, [r3]
   18100:	cmp	r1, r3
   18104:	cmpeq	r0, r2
   18108:	bne	18194 <__assert_fail@plt+0x703c>
   1810c:	sub	r3, fp, #444	; 0x1bc
   18110:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18114:	ldrd	r2, [r3, #-8]
   18118:	cmp	r1, r3
   1811c:	cmpeq	r0, r2
   18120:	bcc	18194 <__assert_fail@plt+0x703c>
   18124:	sub	r3, fp, #444	; 0x1bc
   18128:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1812c:	ldrd	r2, [r3, #-8]
   18130:	cmp	r1, r3
   18134:	cmpeq	r0, r2
   18138:	movcc	r3, #1
   1813c:	movcs	r3, #0
   18140:	uxtb	r3, r3
   18144:	uxtb	r2, r3
   18148:	mov	r3, #0
   1814c:	strd	r2, [fp, #-156]	; 0xffffff64
   18150:	sub	r3, fp, #444	; 0x1bc
   18154:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18158:	ldrd	r2, [r3, #-8]
   1815c:	subs	r2, r0, r2
   18160:	sbc	r3, r1, r3
   18164:	strd	r2, [fp, #-36]	; 0xffffffdc
   18168:	sub	r3, fp, #396	; 0x18c
   1816c:	ldrd	r0, [r3, #-8]
   18170:	sub	r3, fp, #444	; 0x1bc
   18174:	ldrd	r2, [r3]
   18178:	subs	r0, r0, r2
   1817c:	sbc	r1, r1, r3
   18180:	ldrd	r2, [fp, #-156]	; 0xffffff64
   18184:	subs	r2, r0, r2
   18188:	sbc	r3, r1, r3
   1818c:	sub	r1, fp, #396	; 0x18c
   18190:	strd	r2, [r1, #-8]
   18194:	sub	r3, fp, #396	; 0x18c
   18198:	ldrd	r2, [r3, #-8]
   1819c:	sub	r1, fp, #412	; 0x19c
   181a0:	strd	r2, [r1]
   181a4:	sub	r3, fp, #412	; 0x19c
   181a8:	ldrd	r2, [r3]
   181ac:	sub	r1, fp, #412	; 0x19c
   181b0:	strd	r2, [r1, #-8]
   181b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   181b8:	strd	r2, [fp, #-44]	; 0xffffffd4
   181bc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   181c0:	strd	r2, [fp, #-52]	; 0xffffffcc
   181c4:	b	195e8 <__assert_fail@plt+0x8490>
   181c8:	sub	r3, fp, #444	; 0x1bc
   181cc:	ldrd	r2, [r3, #-8]
   181d0:	strd	r2, [fp, #-164]	; 0xffffff5c
   181d4:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   181d8:	lsrs	r3, r3, #1
   181dc:	rrx	r2, r2
   181e0:	mov	r0, #127	; 0x7f
   181e4:	mov	r1, #0
   181e8:	and	r2, r2, r0
   181ec:	and	r3, r3, r1
   181f0:	ldr	r1, [pc, #1728]	; 188b8 <__assert_fail@plt+0x7760>
   181f4:	add	r3, r1, r2
   181f8:	ldrb	r3, [r3]
   181fc:	uxtb	r2, r3
   18200:	mov	r3, #0
   18204:	strd	r2, [fp, #-172]	; 0xffffff54
   18208:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1820c:	adds	r2, r2, r2
   18210:	adc	r3, r3, r3
   18214:	mov	r4, r2
   18218:	mov	r5, r3
   1821c:	ldr	r3, [fp, #-168]	; 0xffffff58
   18220:	ldr	r2, [fp, #-172]	; 0xffffff54
   18224:	mul	r1, r2, r3
   18228:	ldr	r2, [fp, #-168]	; 0xffffff58
   1822c:	ldr	r3, [fp, #-172]	; 0xffffff54
   18230:	mul	r3, r3, r2
   18234:	add	r1, r1, r3
   18238:	ldr	r2, [fp, #-172]	; 0xffffff54
   1823c:	ldr	r3, [fp, #-172]	; 0xffffff54
   18240:	umull	r2, r3, r2, r3
   18244:	add	r1, r1, r3
   18248:	mov	r3, r1
   1824c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   18250:	mul	r0, r3, r1
   18254:	ldr	r1, [fp, #-160]	; 0xffffff60
   18258:	mul	r1, r2, r1
   1825c:	add	r0, r0, r1
   18260:	ldr	r1, [fp, #-164]	; 0xffffff5c
   18264:	umull	r2, r3, r1, r2
   18268:	add	r1, r0, r3
   1826c:	mov	r3, r1
   18270:	subs	r2, r4, r2
   18274:	sbc	r3, r5, r3
   18278:	strd	r2, [fp, #-172]	; 0xffffff54
   1827c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18280:	adds	r2, r2, r2
   18284:	adc	r3, r3, r3
   18288:	mov	r4, r2
   1828c:	mov	r5, r3
   18290:	ldr	r3, [fp, #-168]	; 0xffffff58
   18294:	ldr	r2, [fp, #-172]	; 0xffffff54
   18298:	mul	r1, r2, r3
   1829c:	ldr	r2, [fp, #-168]	; 0xffffff58
   182a0:	ldr	r3, [fp, #-172]	; 0xffffff54
   182a4:	mul	r3, r3, r2
   182a8:	add	r1, r1, r3
   182ac:	ldr	r2, [fp, #-172]	; 0xffffff54
   182b0:	ldr	r3, [fp, #-172]	; 0xffffff54
   182b4:	umull	r2, r3, r2, r3
   182b8:	add	r1, r1, r3
   182bc:	mov	r3, r1
   182c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
   182c4:	mul	r0, r3, r1
   182c8:	ldr	r1, [fp, #-160]	; 0xffffff60
   182cc:	mul	r1, r2, r1
   182d0:	add	r0, r0, r1
   182d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   182d8:	umull	r2, r3, r1, r2
   182dc:	add	r1, r0, r3
   182e0:	mov	r3, r1
   182e4:	subs	r2, r4, r2
   182e8:	sbc	r3, r5, r3
   182ec:	strd	r2, [fp, #-172]	; 0xffffff54
   182f0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   182f4:	adds	r2, r2, r2
   182f8:	adc	r3, r3, r3
   182fc:	mov	r4, r2
   18300:	mov	r5, r3
   18304:	ldr	r3, [fp, #-168]	; 0xffffff58
   18308:	ldr	r2, [fp, #-172]	; 0xffffff54
   1830c:	mul	r1, r2, r3
   18310:	ldr	r2, [fp, #-168]	; 0xffffff58
   18314:	ldr	r3, [fp, #-172]	; 0xffffff54
   18318:	mul	r3, r3, r2
   1831c:	add	r1, r1, r3
   18320:	ldr	r2, [fp, #-172]	; 0xffffff54
   18324:	ldr	r3, [fp, #-172]	; 0xffffff54
   18328:	umull	r2, r3, r2, r3
   1832c:	add	r1, r1, r3
   18330:	mov	r3, r1
   18334:	ldr	r1, [fp, #-164]	; 0xffffff5c
   18338:	mul	r0, r3, r1
   1833c:	ldr	r1, [fp, #-160]	; 0xffffff60
   18340:	mul	r1, r2, r1
   18344:	add	r0, r0, r1
   18348:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1834c:	umull	r2, r3, r1, r2
   18350:	add	r1, r0, r3
   18354:	mov	r3, r1
   18358:	subs	r2, r4, r2
   1835c:	sbc	r3, r5, r3
   18360:	strd	r2, [fp, #-172]	; 0xffffff54
   18364:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18368:	strd	r2, [fp, #-180]	; 0xffffff4c
   1836c:	sub	r3, fp, #396	; 0x18c
   18370:	ldrd	r4, [r3, #-8]
   18374:	sub	r3, fp, #396	; 0x18c
   18378:	ldrd	r0, [r3, #-8]
   1837c:	sub	ip, fp, #436	; 0x1b4
   18380:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   18384:	strd	r2, [sp, #40]	; 0x28
   18388:	sub	r3, fp, #444	; 0x1bc
   1838c:	ldrd	r2, [r3, #-8]
   18390:	strd	r2, [sp, #32]
   18394:	sub	r3, fp, #444	; 0x1bc
   18398:	ldrd	r2, [r3]
   1839c:	strd	r2, [sp, #24]
   183a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   183a4:	strd	r2, [sp, #16]
   183a8:	strd	r0, [sp, #8]
   183ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   183b0:	strd	r2, [sp]
   183b4:	mov	r2, r4
   183b8:	mov	r3, r5
   183bc:	mov	r0, ip
   183c0:	bl	13398 <__assert_fail@plt+0x2240>
   183c4:	strd	r0, [fp, #-36]	; 0xffffffdc
   183c8:	sub	r3, fp, #428	; 0x1ac
   183cc:	ldrd	r2, [r3, #-8]
   183d0:	sub	r1, fp, #396	; 0x18c
   183d4:	strd	r2, [r1, #-8]
   183d8:	ldr	r3, [fp, #4]
   183dc:	mov	r0, r3
   183e0:	mov	r1, #0
   183e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   183e8:	adds	r2, r2, r0
   183ec:	adc	r3, r3, r1
   183f0:	strd	r2, [fp, #-188]	; 0xffffff44
   183f4:	ldrd	r0, [fp, #-188]	; 0xffffff44
   183f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   183fc:	cmp	r1, r3
   18400:	cmpeq	r0, r2
   18404:	movcc	r3, #1
   18408:	movcs	r3, #0
   1840c:	uxtb	r3, r3
   18410:	uxtb	r0, r3
   18414:	mov	r1, #0
   18418:	sub	r3, fp, #396	; 0x18c
   1841c:	ldrd	r2, [r3, #-8]
   18420:	adds	r2, r2, r0
   18424:	adc	r3, r3, r1
   18428:	sub	r1, fp, #396	; 0x18c
   1842c:	strd	r2, [r1, #-8]
   18430:	ldrd	r2, [fp, #-188]	; 0xffffff44
   18434:	strd	r2, [fp, #-36]	; 0xffffffdc
   18438:	sub	r3, fp, #396	; 0x18c
   1843c:	ldrd	r0, [r3, #-8]
   18440:	sub	r3, fp, #444	; 0x1bc
   18444:	ldrd	r2, [r3]
   18448:	cmp	r1, r3
   1844c:	cmpeq	r0, r2
   18450:	bhi	18488 <__assert_fail@plt+0x7330>
   18454:	sub	r3, fp, #396	; 0x18c
   18458:	ldrd	r0, [r3, #-8]
   1845c:	sub	r3, fp, #444	; 0x1bc
   18460:	ldrd	r2, [r3]
   18464:	cmp	r1, r3
   18468:	cmpeq	r0, r2
   1846c:	bne	184f8 <__assert_fail@plt+0x73a0>
   18470:	sub	r3, fp, #444	; 0x1bc
   18474:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18478:	ldrd	r2, [r3, #-8]
   1847c:	cmp	r1, r3
   18480:	cmpeq	r0, r2
   18484:	bcc	184f8 <__assert_fail@plt+0x73a0>
   18488:	sub	r3, fp, #444	; 0x1bc
   1848c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18490:	ldrd	r2, [r3, #-8]
   18494:	cmp	r1, r3
   18498:	cmpeq	r0, r2
   1849c:	movcc	r3, #1
   184a0:	movcs	r3, #0
   184a4:	uxtb	r3, r3
   184a8:	uxtb	r2, r3
   184ac:	mov	r3, #0
   184b0:	strd	r2, [fp, #-196]	; 0xffffff3c
   184b4:	sub	r3, fp, #444	; 0x1bc
   184b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   184bc:	ldrd	r2, [r3, #-8]
   184c0:	subs	r2, r0, r2
   184c4:	sbc	r3, r1, r3
   184c8:	strd	r2, [fp, #-36]	; 0xffffffdc
   184cc:	sub	r3, fp, #396	; 0x18c
   184d0:	ldrd	r0, [r3, #-8]
   184d4:	sub	r3, fp, #444	; 0x1bc
   184d8:	ldrd	r2, [r3]
   184dc:	subs	r0, r0, r2
   184e0:	sbc	r1, r1, r3
   184e4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   184e8:	subs	r2, r0, r2
   184ec:	sbc	r3, r1, r3
   184f0:	sub	r1, fp, #396	; 0x18c
   184f4:	strd	r2, [r1, #-8]
   184f8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   184fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18500:	cmp	r1, r3
   18504:	cmpeq	r0, r2
   18508:	movcc	r3, #1
   1850c:	movcs	r3, #0
   18510:	uxtb	r3, r3
   18514:	uxtb	r2, r3
   18518:	mov	r3, #0
   1851c:	strd	r2, [fp, #-204]	; 0xffffff34
   18520:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18524:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18528:	subs	r2, r0, r2
   1852c:	sbc	r3, r1, r3
   18530:	strd	r2, [fp, #-84]	; 0xffffffac
   18534:	sub	r3, fp, #412	; 0x19c
   18538:	ldrd	r0, [r3]
   1853c:	sub	r3, fp, #396	; 0x18c
   18540:	ldrd	r2, [r3, #-8]
   18544:	subs	r0, r0, r2
   18548:	sbc	r1, r1, r3
   1854c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   18550:	subs	r2, r0, r2
   18554:	sbc	r3, r1, r3
   18558:	strd	r2, [fp, #-76]	; 0xffffffb4
   1855c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18560:	cmp	r2, #0
   18564:	sbcs	r3, r3, #0
   18568:	bge	185d0 <__assert_fail@plt+0x7478>
   1856c:	sub	r3, fp, #444	; 0x1bc
   18570:	ldrd	r0, [fp, #-84]	; 0xffffffac
   18574:	ldrd	r2, [r3, #-8]
   18578:	adds	r2, r2, r0
   1857c:	adc	r3, r3, r1
   18580:	strd	r2, [fp, #-212]	; 0xffffff2c
   18584:	sub	r3, fp, #444	; 0x1bc
   18588:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1858c:	ldrd	r2, [r3]
   18590:	adds	r4, r0, r2
   18594:	adc	r5, r1, r3
   18598:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   1859c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   185a0:	cmp	r1, r3
   185a4:	cmpeq	r0, r2
   185a8:	movcc	r3, #1
   185ac:	movcs	r3, #0
   185b0:	uxtb	r3, r3
   185b4:	uxtb	r2, r3
   185b8:	mov	r3, #0
   185bc:	adds	r2, r2, r4
   185c0:	adc	r3, r3, r5
   185c4:	strd	r2, [fp, #-76]	; 0xffffffb4
   185c8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   185cc:	strd	r2, [fp, #-84]	; 0xffffffac
   185d0:	sub	r1, fp, #436	; 0x1b4
   185d4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   185d8:	strd	r2, [sp, #40]	; 0x28
   185dc:	sub	r3, fp, #444	; 0x1bc
   185e0:	ldrd	r2, [r3, #-8]
   185e4:	strd	r2, [sp, #32]
   185e8:	sub	r3, fp, #444	; 0x1bc
   185ec:	ldrd	r2, [r3]
   185f0:	strd	r2, [sp, #24]
   185f4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   185f8:	strd	r2, [sp, #16]
   185fc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18600:	strd	r2, [sp, #8]
   18604:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18608:	strd	r2, [sp]
   1860c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18610:	mov	r0, r1
   18614:	bl	13398 <__assert_fail@plt+0x2240>
   18618:	strd	r0, [fp, #-68]	; 0xffffffbc
   1861c:	sub	r3, fp, #428	; 0x1ac
   18620:	ldrd	r2, [r3, #-8]
   18624:	strd	r2, [fp, #-60]	; 0xffffffc4
   18628:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1862c:	and	r3, r3, #31
   18630:	cmp	r3, #1
   18634:	bne	186a4 <__assert_fail@plt+0x754c>
   18638:	sub	r1, fp, #428	; 0x1ac
   1863c:	sub	r3, fp, #444	; 0x1bc
   18640:	ldrd	r2, [r3, #-8]
   18644:	strd	r2, [sp, #16]
   18648:	sub	r3, fp, #444	; 0x1bc
   1864c:	ldrd	r2, [r3]
   18650:	strd	r2, [sp, #8]
   18654:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18658:	strd	r2, [sp]
   1865c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18660:	mov	r0, r1
   18664:	bl	118c8 <__assert_fail@plt+0x770>
   18668:	strd	r0, [fp, #-236]	; 0xffffff14
   1866c:	sub	r3, fp, #428	; 0x1ac
   18670:	ldrd	r2, [r3]
   18674:	orrs	r3, r2, r3
   18678:	bne	188bc <__assert_fail@plt+0x7764>
   1867c:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18680:	cmp	r3, #0
   18684:	cmpeq	r2, #1
   18688:	bne	188bc <__assert_fail@plt+0x7764>
   1868c:	sub	r3, fp, #396	; 0x18c
   18690:	ldrd	r2, [r3, #-8]
   18694:	sub	r1, fp, #412	; 0x19c
   18698:	strd	r2, [r1, #-8]
   1869c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   186a0:	strd	r2, [fp, #-52]	; 0xffffffcc
   186a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   186a8:	sub	r3, r3, #1
   186ac:	str	r3, [fp, #-88]	; 0xffffffa8
   186b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   186b4:	cmp	r3, #0
   186b8:	bne	1836c <__assert_fail@plt+0x7214>
   186bc:	sub	r3, fp, #396	; 0x18c
   186c0:	ldrd	r2, [r3, #-8]
   186c4:	sub	r1, fp, #412	; 0x19c
   186c8:	strd	r2, [r1]
   186cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   186d0:	strd	r2, [fp, #-44]	; 0xffffffd4
   186d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   186d8:	str	r3, [fp, #-88]	; 0xffffffa8
   186dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   186e0:	lsl	r3, r3, #1
   186e4:	str	r3, [fp, #-92]	; 0xffffffa4
   186e8:	mov	r3, #0
   186ec:	str	r3, [fp, #-120]	; 0xffffff88
   186f0:	b	1888c <__assert_fail@plt+0x7734>
   186f4:	sub	r3, fp, #396	; 0x18c
   186f8:	ldrd	r4, [r3, #-8]
   186fc:	sub	r3, fp, #396	; 0x18c
   18700:	ldrd	r0, [r3, #-8]
   18704:	sub	ip, fp, #436	; 0x1b4
   18708:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1870c:	strd	r2, [sp, #40]	; 0x28
   18710:	sub	r3, fp, #444	; 0x1bc
   18714:	ldrd	r2, [r3, #-8]
   18718:	strd	r2, [sp, #32]
   1871c:	sub	r3, fp, #444	; 0x1bc
   18720:	ldrd	r2, [r3]
   18724:	strd	r2, [sp, #24]
   18728:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1872c:	strd	r2, [sp, #16]
   18730:	strd	r0, [sp, #8]
   18734:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18738:	strd	r2, [sp]
   1873c:	mov	r2, r4
   18740:	mov	r3, r5
   18744:	mov	r0, ip
   18748:	bl	13398 <__assert_fail@plt+0x2240>
   1874c:	strd	r0, [fp, #-36]	; 0xffffffdc
   18750:	sub	r3, fp, #428	; 0x1ac
   18754:	ldrd	r2, [r3, #-8]
   18758:	sub	r1, fp, #396	; 0x18c
   1875c:	strd	r2, [r1, #-8]
   18760:	ldr	r3, [fp, #4]
   18764:	mov	r0, r3
   18768:	mov	r1, #0
   1876c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18770:	adds	r2, r2, r0
   18774:	adc	r3, r3, r1
   18778:	strd	r2, [fp, #-220]	; 0xffffff24
   1877c:	ldrd	r0, [fp, #-220]	; 0xffffff24
   18780:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18784:	cmp	r1, r3
   18788:	cmpeq	r0, r2
   1878c:	movcc	r3, #1
   18790:	movcs	r3, #0
   18794:	uxtb	r3, r3
   18798:	uxtb	r0, r3
   1879c:	mov	r1, #0
   187a0:	sub	r3, fp, #396	; 0x18c
   187a4:	ldrd	r2, [r3, #-8]
   187a8:	adds	r2, r2, r0
   187ac:	adc	r3, r3, r1
   187b0:	sub	r1, fp, #396	; 0x18c
   187b4:	strd	r2, [r1, #-8]
   187b8:	ldrd	r2, [fp, #-220]	; 0xffffff24
   187bc:	strd	r2, [fp, #-36]	; 0xffffffdc
   187c0:	sub	r3, fp, #396	; 0x18c
   187c4:	ldrd	r0, [r3, #-8]
   187c8:	sub	r3, fp, #444	; 0x1bc
   187cc:	ldrd	r2, [r3]
   187d0:	cmp	r1, r3
   187d4:	cmpeq	r0, r2
   187d8:	bhi	18810 <__assert_fail@plt+0x76b8>
   187dc:	sub	r3, fp, #396	; 0x18c
   187e0:	ldrd	r0, [r3, #-8]
   187e4:	sub	r3, fp, #444	; 0x1bc
   187e8:	ldrd	r2, [r3]
   187ec:	cmp	r1, r3
   187f0:	cmpeq	r0, r2
   187f4:	bne	18880 <__assert_fail@plt+0x7728>
   187f8:	sub	r3, fp, #444	; 0x1bc
   187fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18800:	ldrd	r2, [r3, #-8]
   18804:	cmp	r1, r3
   18808:	cmpeq	r0, r2
   1880c:	bcc	18880 <__assert_fail@plt+0x7728>
   18810:	sub	r3, fp, #444	; 0x1bc
   18814:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18818:	ldrd	r2, [r3, #-8]
   1881c:	cmp	r1, r3
   18820:	cmpeq	r0, r2
   18824:	movcc	r3, #1
   18828:	movcs	r3, #0
   1882c:	uxtb	r3, r3
   18830:	uxtb	r2, r3
   18834:	mov	r3, #0
   18838:	strd	r2, [fp, #-228]	; 0xffffff1c
   1883c:	sub	r3, fp, #444	; 0x1bc
   18840:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18844:	ldrd	r2, [r3, #-8]
   18848:	subs	r2, r0, r2
   1884c:	sbc	r3, r1, r3
   18850:	strd	r2, [fp, #-36]	; 0xffffffdc
   18854:	sub	r3, fp, #396	; 0x18c
   18858:	ldrd	r0, [r3, #-8]
   1885c:	sub	r3, fp, #444	; 0x1bc
   18860:	ldrd	r2, [r3]
   18864:	subs	r0, r0, r2
   18868:	sbc	r1, r1, r3
   1886c:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18870:	subs	r2, r0, r2
   18874:	sbc	r3, r1, r3
   18878:	sub	r1, fp, #396	; 0x18c
   1887c:	strd	r2, [r1, #-8]
   18880:	ldr	r3, [fp, #-120]	; 0xffffff88
   18884:	add	r3, r3, #1
   18888:	str	r3, [fp, #-120]	; 0xffffff88
   1888c:	ldr	r2, [fp, #-120]	; 0xffffff88
   18890:	ldr	r3, [fp, #-88]	; 0xffffffa8
   18894:	cmp	r2, r3
   18898:	bcc	186f4 <__assert_fail@plt+0x759c>
   1889c:	sub	r3, fp, #396	; 0x18c
   188a0:	ldrd	r2, [r3, #-8]
   188a4:	sub	r1, fp, #412	; 0x19c
   188a8:	strd	r2, [r1, #-8]
   188ac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   188b0:	strd	r2, [fp, #-52]	; 0xffffffcc
   188b4:	b	1836c <__assert_fail@plt+0x7214>
   188b8:	andeq	r3, r3, ip, asr #10
   188bc:	sub	r3, fp, #412	; 0x19c
   188c0:	ldrd	r4, [r3, #-8]
   188c4:	sub	r3, fp, #412	; 0x19c
   188c8:	ldrd	r0, [r3, #-8]
   188cc:	sub	ip, fp, #436	; 0x1b4
   188d0:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   188d4:	strd	r2, [sp, #40]	; 0x28
   188d8:	sub	r3, fp, #444	; 0x1bc
   188dc:	ldrd	r2, [r3, #-8]
   188e0:	strd	r2, [sp, #32]
   188e4:	sub	r3, fp, #444	; 0x1bc
   188e8:	ldrd	r2, [r3]
   188ec:	strd	r2, [sp, #24]
   188f0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   188f4:	strd	r2, [sp, #16]
   188f8:	strd	r0, [sp, #8]
   188fc:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18900:	strd	r2, [sp]
   18904:	mov	r2, r4
   18908:	mov	r3, r5
   1890c:	mov	r0, ip
   18910:	bl	13398 <__assert_fail@plt+0x2240>
   18914:	strd	r0, [fp, #-52]	; 0xffffffcc
   18918:	sub	r3, fp, #428	; 0x1ac
   1891c:	ldrd	r2, [r3, #-8]
   18920:	sub	r1, fp, #412	; 0x19c
   18924:	strd	r2, [r1, #-8]
   18928:	ldr	r3, [fp, #4]
   1892c:	mov	r0, r3
   18930:	mov	r1, #0
   18934:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18938:	adds	r2, r2, r0
   1893c:	adc	r3, r3, r1
   18940:	strd	r2, [fp, #-244]	; 0xffffff0c
   18944:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   18948:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1894c:	cmp	r1, r3
   18950:	cmpeq	r0, r2
   18954:	movcc	r3, #1
   18958:	movcs	r3, #0
   1895c:	uxtb	r3, r3
   18960:	uxtb	r0, r3
   18964:	mov	r1, #0
   18968:	sub	r3, fp, #412	; 0x19c
   1896c:	ldrd	r2, [r3, #-8]
   18970:	adds	r2, r2, r0
   18974:	adc	r3, r3, r1
   18978:	sub	r1, fp, #412	; 0x19c
   1897c:	strd	r2, [r1, #-8]
   18980:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   18984:	strd	r2, [fp, #-52]	; 0xffffffcc
   18988:	sub	r3, fp, #412	; 0x19c
   1898c:	ldrd	r0, [r3, #-8]
   18990:	sub	r3, fp, #444	; 0x1bc
   18994:	ldrd	r2, [r3]
   18998:	cmp	r1, r3
   1899c:	cmpeq	r0, r2
   189a0:	bhi	189d8 <__assert_fail@plt+0x7880>
   189a4:	sub	r3, fp, #412	; 0x19c
   189a8:	ldrd	r0, [r3, #-8]
   189ac:	sub	r3, fp, #444	; 0x1bc
   189b0:	ldrd	r2, [r3]
   189b4:	cmp	r1, r3
   189b8:	cmpeq	r0, r2
   189bc:	bne	18a48 <__assert_fail@plt+0x78f0>
   189c0:	sub	r3, fp, #444	; 0x1bc
   189c4:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   189c8:	ldrd	r2, [r3, #-8]
   189cc:	cmp	r1, r3
   189d0:	cmpeq	r0, r2
   189d4:	bcc	18a48 <__assert_fail@plt+0x78f0>
   189d8:	sub	r3, fp, #444	; 0x1bc
   189dc:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   189e0:	ldrd	r2, [r3, #-8]
   189e4:	cmp	r1, r3
   189e8:	cmpeq	r0, r2
   189ec:	movcc	r3, #1
   189f0:	movcs	r3, #0
   189f4:	uxtb	r3, r3
   189f8:	uxtb	r2, r3
   189fc:	mov	r3, #0
   18a00:	strd	r2, [fp, #-252]	; 0xffffff04
   18a04:	sub	r3, fp, #444	; 0x1bc
   18a08:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   18a0c:	ldrd	r2, [r3, #-8]
   18a10:	subs	r2, r0, r2
   18a14:	sbc	r3, r1, r3
   18a18:	strd	r2, [fp, #-52]	; 0xffffffcc
   18a1c:	sub	r3, fp, #412	; 0x19c
   18a20:	ldrd	r0, [r3, #-8]
   18a24:	sub	r3, fp, #444	; 0x1bc
   18a28:	ldrd	r2, [r3]
   18a2c:	subs	r0, r0, r2
   18a30:	sbc	r1, r1, r3
   18a34:	ldrd	r2, [fp, #-252]	; 0xffffff04
   18a38:	subs	r2, r0, r2
   18a3c:	sbc	r3, r1, r3
   18a40:	sub	r1, fp, #412	; 0x19c
   18a44:	strd	r2, [r1, #-8]
   18a48:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18a4c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18a50:	cmp	r1, r3
   18a54:	cmpeq	r0, r2
   18a58:	movcc	r3, #1
   18a5c:	movcs	r3, #0
   18a60:	uxtb	r3, r3
   18a64:	uxtb	r2, r3
   18a68:	mov	r3, #0
   18a6c:	sub	r1, fp, #260	; 0x104
   18a70:	strd	r2, [r1]
   18a74:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   18a78:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18a7c:	subs	r2, r0, r2
   18a80:	sbc	r3, r1, r3
   18a84:	strd	r2, [fp, #-84]	; 0xffffffac
   18a88:	sub	r3, fp, #412	; 0x19c
   18a8c:	ldrd	r0, [r3]
   18a90:	sub	r3, fp, #412	; 0x19c
   18a94:	ldrd	r2, [r3, #-8]
   18a98:	subs	r0, r0, r2
   18a9c:	sbc	r1, r1, r3
   18aa0:	sub	r3, fp, #260	; 0x104
   18aa4:	ldrd	r2, [r3]
   18aa8:	subs	r2, r0, r2
   18aac:	sbc	r3, r1, r3
   18ab0:	strd	r2, [fp, #-76]	; 0xffffffb4
   18ab4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18ab8:	cmp	r2, #0
   18abc:	sbcs	r3, r3, #0
   18ac0:	bge	18b34 <__assert_fail@plt+0x79dc>
   18ac4:	sub	r3, fp, #444	; 0x1bc
   18ac8:	ldrd	r0, [fp, #-84]	; 0xffffffac
   18acc:	ldrd	r2, [r3, #-8]
   18ad0:	adds	r2, r2, r0
   18ad4:	adc	r3, r3, r1
   18ad8:	sub	r1, fp, #268	; 0x10c
   18adc:	strd	r2, [r1]
   18ae0:	sub	r3, fp, #444	; 0x1bc
   18ae4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   18ae8:	ldrd	r2, [r3]
   18aec:	adds	r4, r0, r2
   18af0:	adc	r5, r1, r3
   18af4:	sub	r3, fp, #268	; 0x10c
   18af8:	ldrd	r0, [r3]
   18afc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   18b00:	cmp	r1, r3
   18b04:	cmpeq	r0, r2
   18b08:	movcc	r3, #1
   18b0c:	movcs	r3, #0
   18b10:	uxtb	r3, r3
   18b14:	uxtb	r2, r3
   18b18:	mov	r3, #0
   18b1c:	adds	r2, r2, r4
   18b20:	adc	r3, r3, r5
   18b24:	strd	r2, [fp, #-76]	; 0xffffffb4
   18b28:	sub	r3, fp, #268	; 0x10c
   18b2c:	ldrd	r2, [r3]
   18b30:	strd	r2, [fp, #-84]	; 0xffffffac
   18b34:	sub	r1, fp, #428	; 0x1ac
   18b38:	sub	r3, fp, #444	; 0x1bc
   18b3c:	ldrd	r2, [r3, #-8]
   18b40:	strd	r2, [sp, #16]
   18b44:	sub	r3, fp, #444	; 0x1bc
   18b48:	ldrd	r2, [r3]
   18b4c:	strd	r2, [sp, #8]
   18b50:	ldrd	r2, [fp, #-84]	; 0xffffffac
   18b54:	strd	r2, [sp]
   18b58:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18b5c:	mov	r0, r1
   18b60:	bl	118c8 <__assert_fail@plt+0x770>
   18b64:	strd	r0, [fp, #-236]	; 0xffffff14
   18b68:	sub	r3, fp, #428	; 0x1ac
   18b6c:	ldrd	r2, [r3]
   18b70:	orrs	r3, r2, r3
   18b74:	bne	18b88 <__assert_fail@plt+0x7a30>
   18b78:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18b7c:	cmp	r3, #0
   18b80:	cmpeq	r2, #1
   18b84:	beq	188bc <__assert_fail@plt+0x7764>
   18b88:	sub	r3, fp, #428	; 0x1ac
   18b8c:	ldrd	r2, [r3]
   18b90:	orrs	r3, r2, r3
   18b94:	bne	1913c <__assert_fail@plt+0x7fe4>
   18b98:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18b9c:	sub	r1, fp, #276	; 0x114
   18ba0:	strd	r2, [r1]
   18ba4:	sub	r3, fp, #276	; 0x114
   18ba8:	ldrd	r2, [r3]
   18bac:	lsrs	r3, r3, #1
   18bb0:	rrx	r2, r2
   18bb4:	mov	r0, #127	; 0x7f
   18bb8:	mov	r1, #0
   18bbc:	and	r2, r2, r0
   18bc0:	and	r3, r3, r1
   18bc4:	ldr	r1, [pc, #-788]	; 188b8 <__assert_fail@plt+0x7760>
   18bc8:	add	r3, r1, r2
   18bcc:	ldrb	r3, [r3]
   18bd0:	sub	r2, fp, #284	; 0x11c
   18bd4:	mov	r1, r2
   18bd8:	uxtb	r2, r3
   18bdc:	mov	r3, #0
   18be0:	strd	r2, [r1]
   18be4:	sub	r3, fp, #284	; 0x11c
   18be8:	ldrd	r2, [r3]
   18bec:	adds	r2, r2, r2
   18bf0:	adc	r3, r3, r3
   18bf4:	mov	r4, r2
   18bf8:	mov	r5, r3
   18bfc:	sub	r3, fp, #284	; 0x11c
   18c00:	mov	r2, r3
   18c04:	ldr	r1, [r2, #4]
   18c08:	ldr	r3, [r2]
   18c0c:	mul	r0, r3, r1
   18c10:	ldr	r1, [r2, #4]
   18c14:	ldr	r3, [r2]
   18c18:	mul	r3, r3, r1
   18c1c:	add	r0, r0, r3
   18c20:	ldr	r1, [r2]
   18c24:	ldr	r3, [r2]
   18c28:	umull	r2, r3, r1, r3
   18c2c:	add	r1, r0, r3
   18c30:	mov	r3, r1
   18c34:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18c38:	mul	r0, r3, r1
   18c3c:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18c40:	mul	r1, r2, r1
   18c44:	add	r0, r0, r1
   18c48:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18c4c:	umull	r2, r3, r1, r2
   18c50:	add	r1, r0, r3
   18c54:	mov	r3, r1
   18c58:	sub	r1, fp, #284	; 0x11c
   18c5c:	subs	r2, r4, r2
   18c60:	sbc	r3, r5, r3
   18c64:	strd	r2, [r1]
   18c68:	sub	r3, fp, #284	; 0x11c
   18c6c:	ldrd	r2, [r3]
   18c70:	adds	r2, r2, r2
   18c74:	adc	r3, r3, r3
   18c78:	mov	r4, r2
   18c7c:	mov	r5, r3
   18c80:	sub	r3, fp, #284	; 0x11c
   18c84:	mov	r2, r3
   18c88:	ldr	r1, [r2, #4]
   18c8c:	ldr	r3, [r2]
   18c90:	mul	r0, r3, r1
   18c94:	ldr	r1, [r2, #4]
   18c98:	ldr	r3, [r2]
   18c9c:	mul	r3, r3, r1
   18ca0:	add	r0, r0, r3
   18ca4:	ldr	r1, [r2]
   18ca8:	ldr	r3, [r2]
   18cac:	umull	r2, r3, r1, r3
   18cb0:	add	r1, r0, r3
   18cb4:	mov	r3, r1
   18cb8:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18cbc:	mul	r0, r3, r1
   18cc0:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18cc4:	mul	r1, r2, r1
   18cc8:	add	r0, r0, r1
   18ccc:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18cd0:	umull	r2, r3, r1, r2
   18cd4:	add	r1, r0, r3
   18cd8:	mov	r3, r1
   18cdc:	sub	r1, fp, #284	; 0x11c
   18ce0:	subs	r2, r4, r2
   18ce4:	sbc	r3, r5, r3
   18ce8:	strd	r2, [r1]
   18cec:	sub	r3, fp, #284	; 0x11c
   18cf0:	ldrd	r2, [r3]
   18cf4:	adds	r2, r2, r2
   18cf8:	adc	r3, r3, r3
   18cfc:	mov	r4, r2
   18d00:	mov	r5, r3
   18d04:	sub	r3, fp, #284	; 0x11c
   18d08:	mov	r2, r3
   18d0c:	ldr	r1, [r2, #4]
   18d10:	ldr	r3, [r2]
   18d14:	mul	r0, r3, r1
   18d18:	ldr	r1, [r2, #4]
   18d1c:	ldr	r3, [r2]
   18d20:	mul	r3, r3, r1
   18d24:	add	r0, r0, r3
   18d28:	ldr	r1, [r2]
   18d2c:	ldr	r3, [r2]
   18d30:	umull	r2, r3, r1, r3
   18d34:	add	r1, r0, r3
   18d38:	mov	r3, r1
   18d3c:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18d40:	mul	r0, r3, r1
   18d44:	ldr	r1, [fp, #-272]	; 0xfffffef0
   18d48:	mul	r1, r2, r1
   18d4c:	add	r0, r0, r1
   18d50:	ldr	r1, [fp, #-276]	; 0xfffffeec
   18d54:	umull	r2, r3, r1, r2
   18d58:	add	r1, r0, r3
   18d5c:	mov	r3, r1
   18d60:	sub	r1, fp, #284	; 0x11c
   18d64:	subs	r2, r4, r2
   18d68:	sbc	r3, r5, r3
   18d6c:	strd	r2, [r1]
   18d70:	sub	r3, fp, #284	; 0x11c
   18d74:	mov	r1, r3
   18d78:	sub	r3, fp, #284	; 0x11c
   18d7c:	ldrd	r2, [r3]
   18d80:	strd	r2, [r1, #-8]
   18d84:	sub	r3, fp, #300	; 0x12c
   18d88:	mov	lr, r3
   18d8c:	sub	r3, fp, #444	; 0x1bc
   18d90:	mov	r1, r3
   18d94:	sub	r3, fp, #284	; 0x11c
   18d98:	mov	r0, r3
   18d9c:	ldr	r2, [r1, #-4]
   18da0:	ldr	r3, [r0, #-8]
   18da4:	mul	ip, r3, r2
   18da8:	ldr	r2, [r0, #-4]
   18dac:	ldr	r3, [r1, #-8]
   18db0:	mul	r3, r3, r2
   18db4:	add	ip, ip, r3
   18db8:	ldr	r2, [r1, #-8]
   18dbc:	ldr	r3, [r0, #-8]
   18dc0:	umull	r2, r3, r2, r3
   18dc4:	add	r1, ip, r3
   18dc8:	mov	r3, r1
   18dcc:	strd	r2, [lr]
   18dd0:	strd	r2, [lr]
   18dd4:	sub	r3, fp, #444	; 0x1bc
   18dd8:	ldrd	r0, [r3]
   18ddc:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18de0:	cmp	r1, r3
   18de4:	cmpeq	r0, r2
   18de8:	bcc	190c8 <__assert_fail@plt+0x7f70>
   18dec:	sub	r3, fp, #300	; 0x12c
   18df0:	mov	r1, r3
   18df4:	sub	r3, fp, #300	; 0x12c
   18df8:	ldrd	r2, [r3]
   18dfc:	strd	r2, [r1, #-8]
   18e00:	sub	r3, fp, #316	; 0x13c
   18e04:	mov	r1, r3
   18e08:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18e0c:	strd	r2, [r1]
   18e10:	sub	r3, fp, #300	; 0x12c
   18e14:	ldr	r3, [r3, #-8]
   18e18:	str	r3, [fp, #-320]	; 0xfffffec0
   18e1c:	sub	r3, fp, #300	; 0x12c
   18e20:	ldrd	r2, [r3, #-8]
   18e24:	mov	r3, r3
   18e28:	str	r3, [fp, #-460]	; 0xfffffe34
   18e2c:	mov	r3, #0
   18e30:	str	r3, [fp, #-456]	; 0xfffffe38
   18e34:	ldr	r3, [fp, #-460]	; 0xfffffe34
   18e38:	str	r3, [fp, #-324]	; 0xfffffebc
   18e3c:	sub	r3, fp, #316	; 0x13c
   18e40:	ldr	r3, [r3]
   18e44:	str	r3, [fp, #-328]	; 0xfffffeb8
   18e48:	sub	r3, fp, #316	; 0x13c
   18e4c:	ldrd	r2, [r3]
   18e50:	mov	r3, r3
   18e54:	str	r3, [fp, #-468]	; 0xfffffe2c
   18e58:	mov	r3, #0
   18e5c:	str	r3, [fp, #-464]	; 0xfffffe30
   18e60:	ldr	r3, [fp, #-468]	; 0xfffffe2c
   18e64:	str	r3, [fp, #-332]	; 0xfffffeb4
   18e68:	ldr	r3, [fp, #-320]	; 0xfffffec0
   18e6c:	mov	r0, r3
   18e70:	mov	r1, #0
   18e74:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   18e78:	mov	r2, r3
   18e7c:	mov	r3, #0
   18e80:	sub	ip, fp, #332	; 0x14c
   18e84:	mov	r4, ip
   18e88:	mul	lr, r2, r1
   18e8c:	mul	ip, r0, r3
   18e90:	add	ip, lr, ip
   18e94:	umull	r2, r3, r0, r2
   18e98:	add	r1, ip, r3
   18e9c:	mov	r3, r1
   18ea0:	strd	r2, [r4, #-8]
   18ea4:	strd	r2, [r4, #-8]
   18ea8:	ldr	r3, [fp, #-320]	; 0xfffffec0
   18eac:	mov	r0, r3
   18eb0:	mov	r1, #0
   18eb4:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   18eb8:	mov	r2, r3
   18ebc:	mov	r3, #0
   18ec0:	sub	ip, fp, #348	; 0x15c
   18ec4:	mov	r4, ip
   18ec8:	mul	lr, r2, r1
   18ecc:	mul	ip, r0, r3
   18ed0:	add	ip, lr, ip
   18ed4:	umull	r2, r3, r0, r2
   18ed8:	add	r1, ip, r3
   18edc:	mov	r3, r1
   18ee0:	strd	r2, [r4]
   18ee4:	strd	r2, [r4]
   18ee8:	ldr	r3, [fp, #-324]	; 0xfffffebc
   18eec:	mov	r0, r3
   18ef0:	mov	r1, #0
   18ef4:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   18ef8:	mov	r2, r3
   18efc:	mov	r3, #0
   18f00:	sub	ip, fp, #348	; 0x15c
   18f04:	mov	r4, ip
   18f08:	mul	lr, r2, r1
   18f0c:	mul	ip, r0, r3
   18f10:	add	ip, lr, ip
   18f14:	umull	r2, r3, r0, r2
   18f18:	add	r1, ip, r3
   18f1c:	mov	r3, r1
   18f20:	strd	r2, [r4, #-8]
   18f24:	strd	r2, [r4, #-8]
   18f28:	ldr	r3, [fp, #-324]	; 0xfffffebc
   18f2c:	mov	r2, r3
   18f30:	mov	r3, #0
   18f34:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   18f38:	mov	r0, r1
   18f3c:	mov	r1, #0
   18f40:	mul	lr, r0, r3
   18f44:	mul	ip, r2, r1
   18f48:	add	ip, lr, ip
   18f4c:	umull	r2, r3, r2, r0
   18f50:	add	r1, ip, r3
   18f54:	mov	r3, r1
   18f58:	strd	r2, [fp, #-132]	; 0xffffff7c
   18f5c:	strd	r2, [fp, #-132]	; 0xffffff7c
   18f60:	sub	r3, fp, #332	; 0x14c
   18f64:	ldrd	r2, [r3, #-8]
   18f68:	mov	r6, r3
   18f6c:	mov	r7, #0
   18f70:	sub	r3, fp, #348	; 0x15c
   18f74:	mov	r1, r3
   18f78:	sub	r3, fp, #348	; 0x15c
   18f7c:	ldrd	r2, [r3]
   18f80:	adds	r2, r2, r6
   18f84:	adc	r3, r3, r7
   18f88:	strd	r2, [r1]
   18f8c:	sub	r3, fp, #348	; 0x15c
   18f90:	mov	ip, r3
   18f94:	sub	r3, fp, #348	; 0x15c
   18f98:	sub	r2, fp, #348	; 0x15c
   18f9c:	ldrd	r0, [r3]
   18fa0:	ldrd	r2, [r2, #-8]
   18fa4:	adds	r2, r2, r0
   18fa8:	adc	r3, r3, r1
   18fac:	strd	r2, [ip]
   18fb0:	sub	r3, fp, #348	; 0x15c
   18fb4:	mov	r2, r3
   18fb8:	sub	r3, fp, #348	; 0x15c
   18fbc:	ldrd	r0, [r2]
   18fc0:	ldrd	r2, [r3, #-8]
   18fc4:	cmp	r1, r3
   18fc8:	cmpeq	r0, r2
   18fcc:	bcs	18fe0 <__assert_fail@plt+0x7e88>
   18fd0:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   18fd4:	adds	r2, r2, #0
   18fd8:	adc	r3, r3, #1
   18fdc:	strd	r2, [fp, #-132]	; 0xffffff7c
   18fe0:	sub	r3, fp, #348	; 0x15c
   18fe4:	ldrd	r2, [r3]
   18fe8:	mov	r8, r3
   18fec:	mov	r9, #0
   18ff0:	sub	r3, fp, #364	; 0x16c
   18ff4:	mov	r1, r3
   18ff8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   18ffc:	adds	r2, r2, r8
   19000:	adc	r3, r3, r9
   19004:	strd	r2, [r1]
   19008:	sub	r3, fp, #348	; 0x15c
   1900c:	ldrd	r2, [r3]
   19010:	mov	r3, r2
   19014:	str	r3, [fp, #-472]	; 0xfffffe28
   19018:	mov	r3, #0
   1901c:	str	r3, [fp, #-476]	; 0xfffffe24
   19020:	sub	r3, fp, #332	; 0x14c
   19024:	ldrd	r2, [r3, #-8]
   19028:	mvn	r0, #0
   1902c:	mov	r1, #0
   19030:	and	r2, r2, r0
   19034:	and	r3, r3, r1
   19038:	sub	r1, fp, #476	; 0x1dc
   1903c:	ldrd	r0, [r1]
   19040:	adds	r0, r0, r2
   19044:	adc	r1, r1, r3
   19048:	mov	r2, r0
   1904c:	mov	r3, r1
   19050:	sub	r1, fp, #364	; 0x16c
   19054:	strd	r2, [r1, #-8]
   19058:	sub	r3, fp, #444	; 0x1bc
   1905c:	mov	r2, r3
   19060:	sub	r3, fp, #364	; 0x16c
   19064:	ldrd	r0, [r2]
   19068:	ldrd	r2, [r3]
   1906c:	subs	r0, r0, r2
   19070:	sbc	r1, r1, r3
   19074:	sub	r3, fp, #444	; 0x1bc
   19078:	mov	lr, r3
   1907c:	sub	r3, fp, #284	; 0x11c
   19080:	mov	r2, r3
   19084:	ldr	r3, [r2, #-8]
   19088:	mul	ip, r1, r3
   1908c:	ldr	r3, [r2, #-4]
   19090:	mul	r3, r0, r3
   19094:	add	ip, ip, r3
   19098:	ldr	r3, [r2, #-8]
   1909c:	umull	r2, r3, r3, r0
   190a0:	add	r1, ip, r3
   190a4:	mov	r3, r1
   190a8:	strd	r2, [lr]
   190ac:	strd	r2, [lr]
   190b0:	sub	r3, fp, #444	; 0x1bc
   190b4:	mov	r1, r3
   190b8:	sub	r3, fp, #300	; 0x12c
   190bc:	ldrd	r2, [r3]
   190c0:	strd	r2, [r1, #-8]
   190c4:	b	190f0 <__assert_fail@plt+0x7f98>
   190c8:	sub	r3, fp, #444	; 0x1bc
   190cc:	mov	r1, r3
   190d0:	sub	r3, fp, #300	; 0x12c
   190d4:	ldrd	r2, [r3]
   190d8:	strd	r2, [r1, #-8]
   190dc:	sub	r3, fp, #444	; 0x1bc
   190e0:	mov	r1, r3
   190e4:	mov	r2, #0
   190e8:	mov	r3, #0
   190ec:	strd	r2, [r1]
   190f0:	ldrd	r0, [fp, #-236]	; 0xffffff14
   190f4:	bl	15400 <__assert_fail@plt+0x42a8>
   190f8:	mov	r3, r0
   190fc:	eor	r3, r3, #1
   19100:	uxtb	r3, r3
   19104:	cmp	r3, #0
   19108:	beq	19124 <__assert_fail@plt+0x7fcc>
   1910c:	ldr	r3, [fp, #4]
   19110:	add	r2, r3, #1
   19114:	ldr	r3, [fp, #8]
   19118:	ldrd	r0, [fp, #-236]	; 0xffffff14
   1911c:	bl	17634 <__assert_fail@plt+0x64dc>
   19120:	b	1947c <__assert_fail@plt+0x8324>
   19124:	mov	r3, #1
   19128:	str	r3, [sp]
   1912c:	ldrd	r2, [fp, #-236]	; 0xffffff14
   19130:	ldr	r0, [fp, #8]
   19134:	bl	11bcc <__assert_fail@plt+0xa74>
   19138:	b	1947c <__assert_fail@plt+0x8324>
   1913c:	sub	r3, fp, #428	; 0x1ac
   19140:	ldrd	r2, [r3]
   19144:	sub	r1, fp, #444	; 0x1bc
   19148:	ldrd	r0, [r1]
   1914c:	cmp	r1, r3
   19150:	cmpeq	r0, r2
   19154:	bne	191a4 <__assert_fail@plt+0x804c>
   19158:	sub	r3, fp, #444	; 0x1bc
   1915c:	ldrd	r0, [r3, #-8]
   19160:	ldrd	r2, [fp, #-236]	; 0xffffff14
   19164:	cmp	r1, r3
   19168:	cmpeq	r0, r2
   1916c:	bne	191a4 <__assert_fail@plt+0x804c>
   19170:	ldr	r3, [fp, #4]
   19174:	add	r3, r3, #1
   19178:	sub	r2, fp, #444	; 0x1bc
   1917c:	mov	r0, r2
   19180:	sub	r2, fp, #444	; 0x1bc
   19184:	mov	r1, r2
   19188:	ldr	r2, [fp, #8]
   1918c:	str	r2, [sp, #4]
   19190:	str	r3, [sp]
   19194:	ldrd	r2, [r0, #-8]
   19198:	ldrd	r0, [r1]
   1919c:	bl	17ed0 <__assert_fail@plt+0x6d78>
   191a0:	b	1960c <__assert_fail@plt+0x84b4>
   191a4:	sub	r3, fp, #380	; 0x17c
   191a8:	mov	r1, r3
   191ac:	ldrd	r2, [fp, #-236]	; 0xffffff14
   191b0:	strd	r2, [r1]
   191b4:	sub	r3, fp, #380	; 0x17c
   191b8:	ldrd	r2, [r3]
   191bc:	lsrs	r3, r3, #1
   191c0:	rrx	r2, r2
   191c4:	mov	r0, #127	; 0x7f
   191c8:	mov	r1, #0
   191cc:	and	r2, r2, r0
   191d0:	and	r3, r3, r1
   191d4:	ldr	r1, [pc, #-2340]	; 188b8 <__assert_fail@plt+0x7760>
   191d8:	add	r3, r1, r2
   191dc:	ldrb	r3, [r3]
   191e0:	sub	r2, fp, #380	; 0x17c
   191e4:	mov	r1, r2
   191e8:	uxtb	r2, r3
   191ec:	mov	r3, #0
   191f0:	strd	r2, [r1, #-8]
   191f4:	sub	r3, fp, #380	; 0x17c
   191f8:	ldrd	r2, [r3, #-8]
   191fc:	adds	r2, r2, r2
   19200:	adc	r3, r3, r3
   19204:	mov	r4, r2
   19208:	mov	r5, r3
   1920c:	sub	r3, fp, #380	; 0x17c
   19210:	mov	r2, r3
   19214:	ldr	r1, [r2, #-4]
   19218:	ldr	r3, [r2, #-8]
   1921c:	mul	r0, r3, r1
   19220:	ldr	r1, [r2, #-4]
   19224:	ldr	r3, [r2, #-8]
   19228:	mul	r3, r3, r1
   1922c:	add	ip, r0, r3
   19230:	ldr	r1, [r2, #-8]
   19234:	ldr	r3, [r2, #-8]
   19238:	umull	r0, r1, r1, r3
   1923c:	add	r3, ip, r1
   19240:	mov	r1, r3
   19244:	sub	r3, fp, #380	; 0x17c
   19248:	mov	r2, r3
   1924c:	ldr	r3, [r2]
   19250:	mul	ip, r1, r3
   19254:	ldr	r3, [r2, #4]
   19258:	mul	r3, r0, r3
   1925c:	add	ip, ip, r3
   19260:	ldr	r3, [r2]
   19264:	umull	r2, r3, r3, r0
   19268:	add	r1, ip, r3
   1926c:	mov	r3, r1
   19270:	sub	r1, fp, #380	; 0x17c
   19274:	subs	r2, r4, r2
   19278:	sbc	r3, r5, r3
   1927c:	strd	r2, [r1, #-8]
   19280:	sub	r3, fp, #380	; 0x17c
   19284:	ldrd	r2, [r3, #-8]
   19288:	adds	r2, r2, r2
   1928c:	adc	r3, r3, r3
   19290:	mov	r4, r2
   19294:	mov	r5, r3
   19298:	sub	r3, fp, #380	; 0x17c
   1929c:	mov	r2, r3
   192a0:	ldr	r1, [r2, #-4]
   192a4:	ldr	r3, [r2, #-8]
   192a8:	mul	r0, r3, r1
   192ac:	ldr	r1, [r2, #-4]
   192b0:	ldr	r3, [r2, #-8]
   192b4:	mul	r3, r3, r1
   192b8:	add	ip, r0, r3
   192bc:	ldr	r1, [r2, #-8]
   192c0:	ldr	r3, [r2, #-8]
   192c4:	umull	r0, r1, r1, r3
   192c8:	add	r3, ip, r1
   192cc:	mov	r1, r3
   192d0:	sub	r3, fp, #380	; 0x17c
   192d4:	mov	r2, r3
   192d8:	ldr	r3, [r2]
   192dc:	mul	ip, r1, r3
   192e0:	ldr	r3, [r2, #4]
   192e4:	mul	r3, r0, r3
   192e8:	add	ip, ip, r3
   192ec:	ldr	r3, [r2]
   192f0:	umull	r2, r3, r3, r0
   192f4:	add	r1, ip, r3
   192f8:	mov	r3, r1
   192fc:	sub	r1, fp, #380	; 0x17c
   19300:	subs	r2, r4, r2
   19304:	sbc	r3, r5, r3
   19308:	strd	r2, [r1, #-8]
   1930c:	sub	r3, fp, #380	; 0x17c
   19310:	ldrd	r2, [r3, #-8]
   19314:	adds	r2, r2, r2
   19318:	adc	r3, r3, r3
   1931c:	mov	r4, r2
   19320:	mov	r5, r3
   19324:	sub	r3, fp, #380	; 0x17c
   19328:	mov	r2, r3
   1932c:	ldr	r1, [r2, #-4]
   19330:	ldr	r3, [r2, #-8]
   19334:	mul	r0, r3, r1
   19338:	ldr	r1, [r2, #-4]
   1933c:	ldr	r3, [r2, #-8]
   19340:	mul	r3, r3, r1
   19344:	add	ip, r0, r3
   19348:	ldr	r1, [r2, #-8]
   1934c:	ldr	r3, [r2, #-8]
   19350:	umull	r0, r1, r1, r3
   19354:	add	r3, ip, r1
   19358:	mov	r1, r3
   1935c:	sub	r3, fp, #380	; 0x17c
   19360:	mov	r2, r3
   19364:	ldr	r3, [r2]
   19368:	mul	ip, r1, r3
   1936c:	ldr	r3, [r2, #4]
   19370:	mul	r3, r0, r3
   19374:	add	ip, ip, r3
   19378:	ldr	r3, [r2]
   1937c:	umull	r2, r3, r3, r0
   19380:	add	r1, ip, r3
   19384:	mov	r3, r1
   19388:	sub	r1, fp, #380	; 0x17c
   1938c:	subs	r2, r4, r2
   19390:	sbc	r3, r5, r3
   19394:	strd	r2, [r1, #-8]
   19398:	sub	r3, fp, #396	; 0x18c
   1939c:	mov	r1, r3
   193a0:	sub	r3, fp, #380	; 0x17c
   193a4:	ldrd	r2, [r3, #-8]
   193a8:	strd	r2, [r1]
   193ac:	sub	r3, fp, #444	; 0x1bc
   193b0:	mov	lr, r3
   193b4:	sub	r3, fp, #396	; 0x18c
   193b8:	mov	r1, r3
   193bc:	sub	r3, fp, #444	; 0x1bc
   193c0:	mov	r0, r3
   193c4:	ldr	r2, [r1, #4]
   193c8:	ldr	r3, [r0, #-8]
   193cc:	mul	ip, r3, r2
   193d0:	ldr	r2, [r0, #-4]
   193d4:	ldr	r3, [r1]
   193d8:	mul	r3, r3, r2
   193dc:	add	ip, ip, r3
   193e0:	ldr	r2, [r1]
   193e4:	ldr	r3, [r0, #-8]
   193e8:	umull	r2, r3, r2, r3
   193ec:	add	r1, ip, r3
   193f0:	mov	r3, r1
   193f4:	strd	r2, [lr, #-8]
   193f8:	strd	r2, [lr, #-8]
   193fc:	sub	r3, fp, #444	; 0x1bc
   19400:	mov	r1, r3
   19404:	mov	r2, #0
   19408:	mov	r3, #0
   1940c:	strd	r2, [r1]
   19410:	sub	r3, fp, #428	; 0x1ac
   19414:	ldrd	r0, [r3]
   19418:	ldrd	r2, [fp, #-236]	; 0xffffff14
   1941c:	bl	15f54 <__assert_fail@plt+0x4dfc>
   19420:	mov	r3, r0
   19424:	eor	r3, r3, #1
   19428:	uxtb	r3, r3
   1942c:	cmp	r3, #0
   19430:	beq	1945c <__assert_fail@plt+0x8304>
   19434:	sub	r3, fp, #428	; 0x1ac
   19438:	ldrd	r0, [r3]
   1943c:	ldr	r3, [fp, #4]
   19440:	add	r3, r3, #1
   19444:	ldr	r2, [fp, #8]
   19448:	str	r2, [sp, #4]
   1944c:	str	r3, [sp]
   19450:	ldrd	r2, [fp, #-236]	; 0xffffff14
   19454:	bl	17ed0 <__assert_fail@plt+0x6d78>
   19458:	b	1947c <__assert_fail@plt+0x8324>
   1945c:	sub	r3, fp, #428	; 0x1ac
   19460:	ldrd	r0, [r3]
   19464:	ldrd	r2, [fp, #-236]	; 0xffffff14
   19468:	strd	r2, [sp]
   1946c:	mov	r2, r0
   19470:	mov	r3, r1
   19474:	ldr	r0, [fp, #8]
   19478:	bl	11d98 <__assert_fail@plt+0xc40>
   1947c:	sub	r3, fp, #444	; 0x1bc
   19480:	ldrd	r2, [r3]
   19484:	orrs	r3, r2, r3
   19488:	bne	194e0 <__assert_fail@plt+0x8388>
   1948c:	sub	r3, fp, #444	; 0x1bc
   19490:	ldrd	r0, [r3, #-8]
   19494:	bl	15400 <__assert_fail@plt+0x42a8>
   19498:	mov	r3, r0
   1949c:	cmp	r3, #0
   194a0:	beq	194c4 <__assert_fail@plt+0x836c>
   194a4:	sub	r3, fp, #444	; 0x1bc
   194a8:	mov	r2, r3
   194ac:	mov	r3, #1
   194b0:	str	r3, [sp]
   194b4:	ldrd	r2, [r2, #-8]
   194b8:	ldr	r0, [fp, #8]
   194bc:	bl	11bcc <__assert_fail@plt+0xa74>
   194c0:	b	1960c <__assert_fail@plt+0x84b4>
   194c4:	sub	r3, fp, #444	; 0x1bc
   194c8:	mov	r1, r3
   194cc:	ldr	r3, [fp, #8]
   194d0:	ldr	r2, [fp, #4]
   194d4:	ldrd	r0, [r1, #-8]
   194d8:	bl	17634 <__assert_fail@plt+0x64dc>
   194dc:	b	1960c <__assert_fail@plt+0x84b4>
   194e0:	sub	r3, fp, #444	; 0x1bc
   194e4:	sub	r2, fp, #444	; 0x1bc
   194e8:	mov	r1, r2
   194ec:	ldrd	r2, [r3, #-8]
   194f0:	ldrd	r0, [r1]
   194f4:	bl	15f54 <__assert_fail@plt+0x4dfc>
   194f8:	mov	r3, r0
   194fc:	cmp	r3, #0
   19500:	beq	19528 <__assert_fail@plt+0x83d0>
   19504:	sub	r3, fp, #444	; 0x1bc
   19508:	mov	r1, r3
   1950c:	sub	r3, fp, #444	; 0x1bc
   19510:	ldrd	r2, [r3, #-8]
   19514:	strd	r2, [sp]
   19518:	ldrd	r2, [r1]
   1951c:	ldr	r0, [fp, #8]
   19520:	bl	11d98 <__assert_fail@plt+0xc40>
   19524:	b	1960c <__assert_fail@plt+0x84b4>
   19528:	sub	r3, fp, #396	; 0x18c
   1952c:	ldrd	r0, [r3, #-8]
   19530:	sub	ip, fp, #404	; 0x194
   19534:	sub	r3, fp, #444	; 0x1bc
   19538:	ldrd	r2, [r3, #-8]
   1953c:	strd	r2, [sp, #16]
   19540:	sub	r3, fp, #444	; 0x1bc
   19544:	ldrd	r2, [r3]
   19548:	strd	r2, [sp, #8]
   1954c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19550:	strd	r2, [sp]
   19554:	mov	r2, r0
   19558:	mov	r3, r1
   1955c:	mov	r0, ip
   19560:	bl	11430 <__assert_fail@plt+0x2d8>
   19564:	strd	r0, [fp, #-36]	; 0xffffffdc
   19568:	sub	r3, fp, #412	; 0x19c
   1956c:	ldrd	r0, [r3]
   19570:	sub	ip, fp, #412	; 0x19c
   19574:	sub	r3, fp, #444	; 0x1bc
   19578:	ldrd	r2, [r3, #-8]
   1957c:	strd	r2, [sp, #16]
   19580:	sub	r3, fp, #444	; 0x1bc
   19584:	ldrd	r2, [r3]
   19588:	strd	r2, [sp, #8]
   1958c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19590:	strd	r2, [sp]
   19594:	mov	r2, r0
   19598:	mov	r3, r1
   1959c:	mov	r0, ip
   195a0:	bl	11430 <__assert_fail@plt+0x2d8>
   195a4:	strd	r0, [fp, #-44]	; 0xffffffd4
   195a8:	sub	r3, fp, #412	; 0x19c
   195ac:	ldrd	r0, [r3, #-8]
   195b0:	sub	ip, fp, #420	; 0x1a4
   195b4:	sub	r3, fp, #444	; 0x1bc
   195b8:	ldrd	r2, [r3, #-8]
   195bc:	strd	r2, [sp, #16]
   195c0:	sub	r3, fp, #444	; 0x1bc
   195c4:	ldrd	r2, [r3]
   195c8:	strd	r2, [sp, #8]
   195cc:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   195d0:	strd	r2, [sp]
   195d4:	mov	r2, r0
   195d8:	mov	r3, r1
   195dc:	mov	r0, ip
   195e0:	bl	11430 <__assert_fail@plt+0x2d8>
   195e4:	strd	r0, [fp, #-52]	; 0xffffffcc
   195e8:	sub	r3, fp, #444	; 0x1bc
   195ec:	ldrd	r2, [r3]
   195f0:	orrs	r3, r2, r3
   195f4:	bne	181c8 <__assert_fail@plt+0x7070>
   195f8:	sub	r3, fp, #444	; 0x1bc
   195fc:	ldrd	r2, [r3, #-8]
   19600:	cmp	r3, #0
   19604:	cmpeq	r2, #1
   19608:	bne	181c8 <__assert_fail@plt+0x7070>
   1960c:	sub	sp, fp, #28
   19610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19614:	push	{fp, lr}
   19618:	add	fp, sp, #4
   1961c:	sub	sp, sp, #128	; 0x80
   19620:	str	r0, [fp, #-104]	; 0xffffff98
   19624:	str	r1, [fp, #-108]	; 0xffffff94
   19628:	str	r2, [fp, #-112]	; 0xffffff90
   1962c:	ldr	r3, [pc, #1028]	; 19a38 <__assert_fail@plt+0x88e0>
   19630:	ldrb	r3, [r3]
   19634:	cmp	r3, #0
   19638:	beq	19654 <__assert_fail@plt+0x84fc>
   1963c:	ldr	r3, [pc, #1016]	; 19a3c <__assert_fail@plt+0x88e4>
   19640:	ldr	r3, [r3]
   19644:	ldr	r2, [fp, #-108]	; 0xffffff94
   19648:	ldr	r1, [pc, #1008]	; 19a40 <__assert_fail@plt+0x88e8>
   1964c:	mov	r0, r3
   19650:	bl	11068 <fprintf@plt>
   19654:	sub	r2, fp, #100	; 0x64
   19658:	sub	r1, fp, #88	; 0x58
   1965c:	mov	r3, #0
   19660:	ldr	r0, [pc, #988]	; 19a44 <__assert_fail@plt+0x88ec>
   19664:	bl	11e28 <__assert_fail@plt+0xcd0>
   19668:	sub	r3, fp, #64	; 0x40
   1966c:	mov	r1, #2
   19670:	mov	r0, r3
   19674:	bl	1f688 <__assert_fail@plt+0xe530>
   19678:	sub	r3, fp, #40	; 0x28
   1967c:	mov	r1, #2
   19680:	mov	r0, r3
   19684:	bl	1f688 <__assert_fail@plt+0xe530>
   19688:	sub	r3, fp, #52	; 0x34
   1968c:	mov	r1, #2
   19690:	mov	r0, r3
   19694:	bl	1f688 <__assert_fail@plt+0xe530>
   19698:	sub	r3, fp, #76	; 0x4c
   1969c:	mov	r1, #1
   196a0:	mov	r0, r3
   196a4:	bl	1f6bc <__assert_fail@plt+0xe564>
   196a8:	mov	r2, #1
   196ac:	mov	r3, #0
   196b0:	strd	r2, [fp, #-12]
   196b4:	mov	r2, #1
   196b8:	mov	r3, #0
   196bc:	strd	r2, [fp, #-20]	; 0xffffffec
   196c0:	b	199dc <__assert_fail@plt+0x8884>
   196c4:	sub	r2, fp, #40	; 0x28
   196c8:	sub	r1, fp, #40	; 0x28
   196cc:	sub	r3, fp, #88	; 0x58
   196d0:	mov	r0, r3
   196d4:	bl	20dc0 <__assert_fail@plt+0xfc68>
   196d8:	sub	r1, fp, #88	; 0x58
   196dc:	sub	r3, fp, #40	; 0x28
   196e0:	ldr	r2, [fp, #-104]	; 0xffffff98
   196e4:	mov	r0, r3
   196e8:	bl	218e0 <__assert_fail@plt+0x10788>
   196ec:	sub	r1, fp, #40	; 0x28
   196f0:	sub	r3, fp, #40	; 0x28
   196f4:	ldr	r2, [fp, #-108]	; 0xffffff94
   196f8:	mov	r0, r3
   196fc:	bl	20820 <__assert_fail@plt+0xf6c8>
   19700:	sub	r2, fp, #40	; 0x28
   19704:	sub	r1, fp, #52	; 0x34
   19708:	sub	r3, fp, #88	; 0x58
   1970c:	mov	r0, r3
   19710:	bl	20c6c <__assert_fail@plt+0xfb14>
   19714:	sub	r2, fp, #88	; 0x58
   19718:	sub	r1, fp, #76	; 0x4c
   1971c:	sub	r3, fp, #100	; 0x64
   19720:	mov	r0, r3
   19724:	bl	20dc0 <__assert_fail@plt+0xfc68>
   19728:	sub	r1, fp, #100	; 0x64
   1972c:	sub	r3, fp, #76	; 0x4c
   19730:	ldr	r2, [fp, #-104]	; 0xffffff98
   19734:	mov	r0, r3
   19738:	bl	218e0 <__assert_fail@plt+0x10788>
   1973c:	ldrd	r2, [fp, #-12]
   19740:	mov	r0, #31
   19744:	mov	r1, #0
   19748:	and	r2, r2, r0
   1974c:	and	r3, r3, r1
   19750:	cmp	r3, #0
   19754:	cmpeq	r2, #1
   19758:	bne	197a4 <__assert_fail@plt+0x864c>
   1975c:	sub	r1, fp, #76	; 0x4c
   19760:	sub	r3, fp, #88	; 0x58
   19764:	ldr	r2, [fp, #-104]	; 0xffffff98
   19768:	mov	r0, r3
   1976c:	bl	22970 <__assert_fail@plt+0x11818>
   19770:	sub	r3, fp, #88	; 0x58
   19774:	mov	r1, #1
   19778:	mov	r0, r3
   1977c:	bl	204fc <__assert_fail@plt+0xf3a4>
   19780:	mov	r3, r0
   19784:	cmp	r3, #0
   19788:	beq	19790 <__assert_fail@plt+0x8638>
   1978c:	b	19874 <__assert_fail@plt+0x871c>
   19790:	sub	r2, fp, #40	; 0x28
   19794:	sub	r3, fp, #64	; 0x40
   19798:	mov	r1, r2
   1979c:	mov	r0, r3
   197a0:	bl	1f5e8 <__assert_fail@plt+0xe490>
   197a4:	ldrd	r2, [fp, #-12]
   197a8:	subs	r2, r2, #1
   197ac:	sbc	r3, r3, #0
   197b0:	strd	r2, [fp, #-12]
   197b4:	ldrd	r2, [fp, #-12]
   197b8:	orrs	r3, r2, r3
   197bc:	bne	196c4 <__assert_fail@plt+0x856c>
   197c0:	sub	r2, fp, #40	; 0x28
   197c4:	sub	r3, fp, #52	; 0x34
   197c8:	mov	r1, r2
   197cc:	mov	r0, r3
   197d0:	bl	1f5e8 <__assert_fail@plt+0xe490>
   197d4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   197d8:	strd	r2, [fp, #-12]
   197dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   197e0:	adds	r2, r2, r2
   197e4:	adc	r3, r3, r3
   197e8:	strd	r2, [fp, #-20]	; 0xffffffec
   197ec:	mov	r2, #0
   197f0:	mov	r3, #0
   197f4:	strd	r2, [fp, #-28]	; 0xffffffe4
   197f8:	b	19848 <__assert_fail@plt+0x86f0>
   197fc:	sub	r2, fp, #40	; 0x28
   19800:	sub	r1, fp, #40	; 0x28
   19804:	sub	r3, fp, #88	; 0x58
   19808:	mov	r0, r3
   1980c:	bl	20dc0 <__assert_fail@plt+0xfc68>
   19810:	sub	r1, fp, #88	; 0x58
   19814:	sub	r3, fp, #40	; 0x28
   19818:	ldr	r2, [fp, #-104]	; 0xffffff98
   1981c:	mov	r0, r3
   19820:	bl	218e0 <__assert_fail@plt+0x10788>
   19824:	sub	r1, fp, #40	; 0x28
   19828:	sub	r3, fp, #40	; 0x28
   1982c:	ldr	r2, [fp, #-108]	; 0xffffff94
   19830:	mov	r0, r3
   19834:	bl	20820 <__assert_fail@plt+0xf6c8>
   19838:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1983c:	adds	r2, r2, #1
   19840:	adc	r3, r3, #0
   19844:	strd	r2, [fp, #-28]	; 0xffffffe4
   19848:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   1984c:	ldrd	r2, [fp, #-12]
   19850:	cmp	r1, r3
   19854:	cmpeq	r0, r2
   19858:	bcc	197fc <__assert_fail@plt+0x86a4>
   1985c:	sub	r2, fp, #40	; 0x28
   19860:	sub	r3, fp, #64	; 0x40
   19864:	mov	r1, r2
   19868:	mov	r0, r3
   1986c:	bl	1f5e8 <__assert_fail@plt+0xe490>
   19870:	b	196c4 <__assert_fail@plt+0x856c>
   19874:	sub	r2, fp, #64	; 0x40
   19878:	sub	r1, fp, #64	; 0x40
   1987c:	sub	r3, fp, #88	; 0x58
   19880:	mov	r0, r3
   19884:	bl	20dc0 <__assert_fail@plt+0xfc68>
   19888:	sub	r1, fp, #88	; 0x58
   1988c:	sub	r3, fp, #64	; 0x40
   19890:	ldr	r2, [fp, #-104]	; 0xffffff98
   19894:	mov	r0, r3
   19898:	bl	218e0 <__assert_fail@plt+0x10788>
   1989c:	sub	r1, fp, #64	; 0x40
   198a0:	sub	r3, fp, #64	; 0x40
   198a4:	ldr	r2, [fp, #-108]	; 0xffffff94
   198a8:	mov	r0, r3
   198ac:	bl	20820 <__assert_fail@plt+0xf6c8>
   198b0:	sub	r2, fp, #64	; 0x40
   198b4:	sub	r1, fp, #52	; 0x34
   198b8:	sub	r3, fp, #88	; 0x58
   198bc:	mov	r0, r3
   198c0:	bl	20c6c <__assert_fail@plt+0xfb14>
   198c4:	sub	r1, fp, #88	; 0x58
   198c8:	sub	r3, fp, #88	; 0x58
   198cc:	ldr	r2, [fp, #-104]	; 0xffffff98
   198d0:	mov	r0, r3
   198d4:	bl	22970 <__assert_fail@plt+0x11818>
   198d8:	sub	r3, fp, #88	; 0x58
   198dc:	mov	r1, #1
   198e0:	mov	r0, r3
   198e4:	bl	204fc <__assert_fail@plt+0xf3a4>
   198e8:	mov	r3, r0
   198ec:	cmp	r3, #0
   198f0:	beq	19874 <__assert_fail@plt+0x871c>
   198f4:	sub	r3, fp, #88	; 0x58
   198f8:	mov	r2, r3
   198fc:	ldr	r1, [fp, #-104]	; 0xffffff98
   19900:	ldr	r0, [fp, #-104]	; 0xffffff98
   19904:	bl	21ff0 <__assert_fail@plt+0x10e98>
   19908:	sub	r3, fp, #88	; 0x58
   1990c:	mov	r0, r3
   19910:	bl	172fc <__assert_fail@plt+0x61a4>
   19914:	mov	r3, r0
   19918:	eor	r3, r3, #1
   1991c:	uxtb	r3, r3
   19920:	cmp	r3, #0
   19924:	beq	1996c <__assert_fail@plt+0x8814>
   19928:	ldr	r3, [pc, #264]	; 19a38 <__assert_fail@plt+0x88e0>
   1992c:	ldrb	r3, [r3]
   19930:	cmp	r3, #0
   19934:	beq	19950 <__assert_fail@plt+0x87f8>
   19938:	ldr	r3, [pc, #252]	; 19a3c <__assert_fail@plt+0x88e4>
   1993c:	ldr	r3, [r3]
   19940:	mov	r2, #43	; 0x2b
   19944:	mov	r1, #1
   19948:	ldr	r0, [pc, #248]	; 19a48 <__assert_fail@plt+0x88f0>
   1994c:	bl	10f84 <fwrite@plt>
   19950:	ldr	r3, [fp, #-108]	; 0xffffff94
   19954:	add	r1, r3, #1
   19958:	sub	r3, fp, #88	; 0x58
   1995c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19960:	mov	r0, r3
   19964:	bl	19614 <__assert_fail@plt+0x84bc>
   19968:	b	1997c <__assert_fail@plt+0x8824>
   1996c:	sub	r3, fp, #88	; 0x58
   19970:	mov	r1, r3
   19974:	ldr	r0, [fp, #-112]	; 0xffffff90
   19978:	bl	11f58 <__assert_fail@plt+0xe00>
   1997c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19980:	bl	172fc <__assert_fail@plt+0x61a4>
   19984:	mov	r3, r0
   19988:	cmp	r3, #0
   1998c:	beq	199a0 <__assert_fail@plt+0x8848>
   19990:	ldr	r1, [fp, #-104]	; 0xffffff98
   19994:	ldr	r0, [fp, #-112]	; 0xffffff90
   19998:	bl	11f58 <__assert_fail@plt+0xe00>
   1999c:	b	199f4 <__assert_fail@plt+0x889c>
   199a0:	sub	r1, fp, #40	; 0x28
   199a4:	sub	r3, fp, #40	; 0x28
   199a8:	ldr	r2, [fp, #-104]	; 0xffffff98
   199ac:	mov	r0, r3
   199b0:	bl	218e0 <__assert_fail@plt+0x10788>
   199b4:	sub	r1, fp, #52	; 0x34
   199b8:	sub	r3, fp, #52	; 0x34
   199bc:	ldr	r2, [fp, #-104]	; 0xffffff98
   199c0:	mov	r0, r3
   199c4:	bl	218e0 <__assert_fail@plt+0x10788>
   199c8:	sub	r1, fp, #64	; 0x40
   199cc:	sub	r3, fp, #64	; 0x40
   199d0:	ldr	r2, [fp, #-104]	; 0xffffff98
   199d4:	mov	r0, r3
   199d8:	bl	218e0 <__assert_fail@plt+0x10788>
   199dc:	mov	r1, #1
   199e0:	ldr	r0, [fp, #-104]	; 0xffffff98
   199e4:	bl	204fc <__assert_fail@plt+0xf3a4>
   199e8:	mov	r3, r0
   199ec:	cmp	r3, #0
   199f0:	bne	196c4 <__assert_fail@plt+0x856c>
   199f4:	sub	r0, fp, #88	; 0x58
   199f8:	sub	r2, fp, #100	; 0x64
   199fc:	sub	r1, fp, #76	; 0x4c
   19a00:	mov	r3, #0
   19a04:	str	r3, [sp, #12]
   19a08:	sub	r3, fp, #64	; 0x40
   19a0c:	str	r3, [sp, #8]
   19a10:	sub	r3, fp, #40	; 0x28
   19a14:	str	r3, [sp, #4]
   19a18:	sub	r3, fp, #52	; 0x34
   19a1c:	str	r3, [sp]
   19a20:	mov	r3, r0
   19a24:	ldr	r0, [pc, #32]	; 19a4c <__assert_fail@plt+0x88f4>
   19a28:	bl	11e28 <__assert_fail@plt+0xcd0>
   19a2c:	nop			; (mov r0, r0)
   19a30:	sub	sp, fp, #4
   19a34:	pop	{fp, pc}
   19a38:	muleq	r4, r4, r1
   19a3c:	andeq	r5, r4, r0, lsl #3
   19a40:	andeq	r3, r3, r0, lsl #13
   19a44:	andeq	pc, r1, r8, lsl r3	; <UNPREDICTABLE>
   19a48:	muleq	r3, r8, r6
   19a4c:	andeq	pc, r1, r0, ror #7
   19a50:	push	{fp, lr}
   19a54:	add	fp, sp, #4
   19a58:	sub	sp, sp, #32
   19a5c:	strd	r0, [fp, #-12]
   19a60:	strd	r2, [fp, #-20]	; 0xffffffec
   19a64:	ldr	r3, [fp, #4]
   19a68:	mov	r2, #0
   19a6c:	strb	r2, [r3, #250]	; 0xfa
   19a70:	ldr	r1, [fp, #4]
   19a74:	mov	r2, #0
   19a78:	mov	r3, #0
   19a7c:	strd	r2, [r1, #8]
   19a80:	ldrd	r2, [fp, #-12]
   19a84:	orrs	r3, r2, r3
   19a88:	bne	19a9c <__assert_fail@plt+0x8944>
   19a8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19a90:	cmp	r3, #0
   19a94:	cmpeq	r2, #1
   19a98:	bls	19b5c <__assert_fail@plt+0x8a04>
   19a9c:	ldrd	r0, [fp, #-12]
   19aa0:	sub	ip, fp, #12
   19aa4:	ldr	r3, [fp, #4]
   19aa8:	str	r3, [sp, #8]
   19aac:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19ab0:	strd	r2, [sp]
   19ab4:	mov	r2, r0
   19ab8:	mov	r3, r1
   19abc:	mov	r0, ip
   19ac0:	bl	122d4 <__assert_fail@plt+0x117c>
   19ac4:	strd	r0, [fp, #-20]	; 0xffffffec
   19ac8:	ldrd	r2, [fp, #-12]
   19acc:	orrs	r3, r2, r3
   19ad0:	bne	19ae4 <__assert_fail@plt+0x898c>
   19ad4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19ad8:	cmp	r3, #0
   19adc:	cmpeq	r2, #1
   19ae0:	bls	19b64 <__assert_fail@plt+0x8a0c>
   19ae4:	ldrd	r0, [fp, #-12]
   19ae8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19aec:	bl	15f54 <__assert_fail@plt+0x4dfc>
   19af0:	mov	r3, r0
   19af4:	cmp	r3, #0
   19af8:	beq	19b1c <__assert_fail@plt+0x89c4>
   19afc:	ldrd	r0, [fp, #-12]
   19b00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19b04:	strd	r2, [sp]
   19b08:	mov	r2, r0
   19b0c:	mov	r3, r1
   19b10:	ldr	r0, [fp, #4]
   19b14:	bl	11d98 <__assert_fail@plt+0xc40>
   19b18:	b	19b68 <__assert_fail@plt+0x8a10>
   19b1c:	ldrd	r2, [fp, #-12]
   19b20:	orrs	r3, r2, r3
   19b24:	bne	19b3c <__assert_fail@plt+0x89e4>
   19b28:	ldr	r3, [fp, #4]
   19b2c:	mov	r2, #1
   19b30:	ldrd	r0, [fp, #-20]	; 0xffffffec
   19b34:	bl	17634 <__assert_fail@plt+0x64dc>
   19b38:	b	19b68 <__assert_fail@plt+0x8a10>
   19b3c:	ldrd	r0, [fp, #-12]
   19b40:	ldr	r3, [fp, #4]
   19b44:	str	r3, [sp, #4]
   19b48:	mov	r3, #1
   19b4c:	str	r3, [sp]
   19b50:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19b54:	bl	17ed0 <__assert_fail@plt+0x6d78>
   19b58:	b	19b68 <__assert_fail@plt+0x8a10>
   19b5c:	nop			; (mov r0, r0)
   19b60:	b	19b68 <__assert_fail@plt+0x8a10>
   19b64:	nop			; (mov r0, r0)
   19b68:	sub	sp, fp, #4
   19b6c:	pop	{fp, pc}
   19b70:	push	{fp, lr}
   19b74:	add	fp, sp, #4
   19b78:	sub	sp, sp, #8
   19b7c:	str	r0, [fp, #-8]
   19b80:	str	r1, [fp, #-12]
   19b84:	ldr	r0, [fp, #-12]
   19b88:	bl	11e84 <__assert_fail@plt+0xd2c>
   19b8c:	ldr	r0, [fp, #-8]
   19b90:	bl	2042c <__assert_fail@plt+0xf2d4>
   19b94:	mov	r3, r0
   19b98:	cmp	r3, #0
   19b9c:	beq	19c20 <__assert_fail@plt+0x8ac8>
   19ba0:	ldr	r1, [fp, #-12]
   19ba4:	ldr	r0, [fp, #-8]
   19ba8:	bl	12d9c <__assert_fail@plt+0x1c44>
   19bac:	mov	r1, #1
   19bb0:	ldr	r0, [fp, #-8]
   19bb4:	bl	204fc <__assert_fail@plt+0xf3a4>
   19bb8:	mov	r3, r0
   19bbc:	cmp	r3, #0
   19bc0:	beq	19c20 <__assert_fail@plt+0x8ac8>
   19bc4:	ldr	r3, [pc, #96]	; 19c2c <__assert_fail@plt+0x8ad4>
   19bc8:	ldrb	r3, [r3]
   19bcc:	cmp	r3, #0
   19bd0:	beq	19bec <__assert_fail@plt+0x8a94>
   19bd4:	ldr	r3, [pc, #84]	; 19c30 <__assert_fail@plt+0x8ad8>
   19bd8:	ldr	r3, [r3]
   19bdc:	mov	r2, #19
   19be0:	mov	r1, #1
   19be4:	ldr	r0, [pc, #72]	; 19c34 <__assert_fail@plt+0x8adc>
   19be8:	bl	10f84 <fwrite@plt>
   19bec:	ldr	r0, [fp, #-8]
   19bf0:	bl	172fc <__assert_fail@plt+0x61a4>
   19bf4:	mov	r3, r0
   19bf8:	cmp	r3, #0
   19bfc:	beq	19c10 <__assert_fail@plt+0x8ab8>
   19c00:	ldr	r1, [fp, #-8]
   19c04:	ldr	r0, [fp, #-12]
   19c08:	bl	11f58 <__assert_fail@plt+0xe00>
   19c0c:	b	19c20 <__assert_fail@plt+0x8ac8>
   19c10:	ldr	r2, [fp, #-12]
   19c14:	mov	r1, #1
   19c18:	ldr	r0, [fp, #-8]
   19c1c:	bl	19614 <__assert_fail@plt+0x84bc>
   19c20:	nop			; (mov r0, r0)
   19c24:	sub	sp, fp, #4
   19c28:	pop	{fp, pc}
   19c2c:	muleq	r4, r4, r1
   19c30:	andeq	r5, r4, r0, lsl #3
   19c34:	andeq	r3, r3, r4, asr #13
   19c38:	push	{r4, r5, r6, r7, fp}
   19c3c:	add	fp, sp, #16
   19c40:	sub	sp, sp, #60	; 0x3c
   19c44:	str	r0, [fp, #-64]	; 0xffffffc0
   19c48:	str	r1, [fp, #-68]	; 0xffffffbc
   19c4c:	str	r2, [fp, #-72]	; 0xffffffb8
   19c50:	mov	r2, #0
   19c54:	mov	r3, #0
   19c58:	strd	r2, [fp, #-28]	; 0xffffffe4
   19c5c:	mov	r2, #0
   19c60:	mov	r3, #0
   19c64:	strd	r2, [fp, #-36]	; 0xffffffdc
   19c68:	mov	r3, #4
   19c6c:	str	r3, [fp, #-40]	; 0xffffffd8
   19c70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19c74:	str	r3, [fp, #-44]	; 0xffffffd4
   19c78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19c7c:	add	r2, r3, #1
   19c80:	str	r2, [fp, #-44]	; 0xffffffd4
   19c84:	ldrb	r3, [r3]
   19c88:	str	r3, [fp, #-48]	; 0xffffffd0
   19c8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19c90:	cmp	r3, #0
   19c94:	beq	19cd0 <__assert_fail@plt+0x8b78>
   19c98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19c9c:	sub	r3, r3, #48	; 0x30
   19ca0:	cmp	r3, #9
   19ca4:	movhi	r3, #1
   19ca8:	movls	r3, #0
   19cac:	uxtb	r3, r3
   19cb0:	cmp	r3, #0
   19cb4:	beq	19cc4 <__assert_fail@plt+0x8b6c>
   19cb8:	mov	r3, #4
   19cbc:	str	r3, [fp, #-40]	; 0xffffffd8
   19cc0:	b	19cd4 <__assert_fail@plt+0x8b7c>
   19cc4:	mov	r3, #0
   19cc8:	str	r3, [fp, #-40]	; 0xffffffd8
   19ccc:	b	19c78 <__assert_fail@plt+0x8b20>
   19cd0:	nop			; (mov r0, r0)
   19cd4:	b	19ed4 <__assert_fail@plt+0x8d7c>
   19cd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19cdc:	add	r2, r3, #1
   19ce0:	str	r2, [fp, #-72]	; 0xffffffb8
   19ce4:	ldrb	r3, [r3]
   19ce8:	str	r3, [fp, #-52]	; 0xffffffcc
   19cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19cf0:	cmp	r3, #0
   19cf4:	beq	19ee4 <__assert_fail@plt+0x8d8c>
   19cf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19cfc:	sub	r3, r3, #48	; 0x30
   19d00:	str	r3, [fp, #-52]	; 0xffffffcc
   19d04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19d08:	add	r1, pc, #520	; 0x208
   19d0c:	ldrd	r0, [r1]
   19d10:	cmp	r3, r1
   19d14:	cmpeq	r2, r0
   19d18:	movhi	r3, #1
   19d1c:	movls	r3, #0
   19d20:	uxtb	r3, r3
   19d24:	cmp	r3, #0
   19d28:	beq	19d38 <__assert_fail@plt+0x8be0>
   19d2c:	mov	r3, #1
   19d30:	str	r3, [fp, #-40]	; 0xffffffd8
   19d34:	b	19ee8 <__assert_fail@plt+0x8d90>
   19d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d3c:	mov	r2, #10
   19d40:	mul	r2, r2, r3
   19d44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d48:	mov	r1, #0
   19d4c:	mul	r3, r1, r3
   19d50:	add	r1, r2, r3
   19d54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d58:	mov	r2, #10
   19d5c:	umull	r2, r3, r3, r2
   19d60:	add	r1, r1, r3
   19d64:	mov	r3, r1
   19d68:	strd	r2, [fp, #-28]	; 0xffffffe4
   19d6c:	strd	r2, [fp, #-28]	; 0xffffffe4
   19d70:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19d74:	lsr	r4, r3, #29
   19d78:	mov	r5, #0
   19d7c:	mov	r1, r4
   19d80:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19d84:	lsr	r6, r3, #31
   19d88:	mov	r7, #0
   19d8c:	mov	r3, r6
   19d90:	add	r3, r1, r3
   19d94:	str	r3, [fp, #-56]	; 0xffffffc8
   19d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d9c:	mov	r2, #10
   19da0:	mul	r2, r2, r3
   19da4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19da8:	mov	r1, #0
   19dac:	mul	r3, r1, r3
   19db0:	add	r1, r2, r3
   19db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19db8:	mov	r2, #10
   19dbc:	umull	r2, r3, r3, r2
   19dc0:	add	r1, r1, r3
   19dc4:	mov	r3, r1
   19dc8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19dcc:	adds	r0, r0, r0
   19dd0:	adc	r1, r1, r1
   19dd4:	cmp	r3, r1
   19dd8:	cmpeq	r2, r0
   19ddc:	movcc	r3, #1
   19de0:	movcs	r3, #0
   19de4:	uxtb	r3, r3
   19de8:	mov	r2, r3
   19dec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19df0:	add	r3, r3, r2
   19df4:	str	r3, [fp, #-56]	; 0xffffffc8
   19df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19dfc:	mov	r2, #10
   19e00:	mul	r2, r2, r3
   19e04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e08:	mov	r1, #0
   19e0c:	mul	r3, r1, r3
   19e10:	add	r1, r2, r3
   19e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e18:	mov	r2, #10
   19e1c:	umull	r2, r3, r3, r2
   19e20:	add	r1, r1, r3
   19e24:	mov	r3, r1
   19e28:	strd	r2, [fp, #-36]	; 0xffffffdc
   19e2c:	strd	r2, [fp, #-36]	; 0xffffffdc
   19e30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e34:	mov	r2, r3
   19e38:	mov	r3, #0
   19e3c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   19e40:	adds	r2, r2, r0
   19e44:	adc	r3, r3, r1
   19e48:	strd	r2, [fp, #-36]	; 0xffffffdc
   19e4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19e50:	mov	r0, r3
   19e54:	mov	r1, #0
   19e58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19e5c:	cmp	r1, r3
   19e60:	cmpeq	r0, r2
   19e64:	movhi	r3, #1
   19e68:	movls	r3, #0
   19e6c:	uxtb	r3, r3
   19e70:	mov	r2, r3
   19e74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e78:	add	r3, r3, r2
   19e7c:	str	r3, [fp, #-56]	; 0xffffffc8
   19e80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e84:	mov	r2, r3
   19e88:	mov	r3, #0
   19e8c:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   19e90:	adds	r2, r2, r0
   19e94:	adc	r3, r3, r1
   19e98:	strd	r2, [fp, #-28]	; 0xffffffe4
   19e9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19ea0:	mov	r0, r3
   19ea4:	mov	r1, #0
   19ea8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19eac:	cmp	r1, r3
   19eb0:	cmpeq	r0, r2
   19eb4:	movhi	r3, #1
   19eb8:	movls	r3, #0
   19ebc:	uxtb	r3, r3
   19ec0:	cmp	r3, #0
   19ec4:	beq	19ed4 <__assert_fail@plt+0x8d7c>
   19ec8:	mov	r3, #1
   19ecc:	str	r3, [fp, #-40]	; 0xffffffd8
   19ed0:	b	19ee8 <__assert_fail@plt+0x8d90>
   19ed4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ed8:	cmp	r3, #0
   19edc:	beq	19cd8 <__assert_fail@plt+0x8b80>
   19ee0:	b	19ee8 <__assert_fail@plt+0x8d90>
   19ee4:	nop			; (mov r0, r0)
   19ee8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19eec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19ef0:	strd	r2, [r1]
   19ef4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19ef8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19efc:	strd	r2, [r1]
   19f00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f04:	mov	r0, r3
   19f08:	sub	sp, fp, #16
   19f0c:	pop	{r4, r5, r6, r7, fp}
   19f10:	bx	lr
   19f14:	nop			; (mov r0, r0)
   19f18:	ldmibls	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   19f1c:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   19f20:	push	{fp, lr}
   19f24:	add	fp, sp, #4
   19f28:	ldr	r3, [pc, #60]	; 19f6c <__assert_fail@plt+0x8e14>
   19f2c:	ldr	r3, [r3]
   19f30:	cmp	r3, #0
   19f34:	bne	19f64 <__assert_fail@plt+0x8e0c>
   19f38:	mov	r0, #1024	; 0x400
   19f3c:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   19f40:	mov	r3, r0
   19f44:	mov	r2, r3
   19f48:	ldr	r3, [pc, #28]	; 19f6c <__assert_fail@plt+0x8e14>
   19f4c:	str	r2, [r3]
   19f50:	ldr	r3, [pc, #20]	; 19f6c <__assert_fail@plt+0x8e14>
   19f54:	ldr	r3, [r3]
   19f58:	ldr	r2, [pc, #12]	; 19f6c <__assert_fail@plt+0x8e14>
   19f5c:	str	r3, [r2, #4]
   19f60:	b	19f68 <__assert_fail@plt+0x8e10>
   19f64:	nop			; (mov r0, r0)
   19f68:	pop	{fp, pc}
   19f6c:	muleq	r4, r8, r1
   19f70:	push	{r4, fp, lr}
   19f74:	add	fp, sp, #8
   19f78:	sub	sp, sp, #12
   19f7c:	ldr	r3, [pc, #128]	; 1a004 <__assert_fail@plt+0x8eac>
   19f80:	ldr	r3, [r3, #4]
   19f84:	mov	r2, r3
   19f88:	ldr	r3, [pc, #116]	; 1a004 <__assert_fail@plt+0x8eac>
   19f8c:	ldr	r3, [r3]
   19f90:	sub	r3, r2, r3
   19f94:	str	r3, [fp, #-16]
   19f98:	ldr	r3, [pc, #100]	; 1a004 <__assert_fail@plt+0x8eac>
   19f9c:	ldr	r3, [r3]
   19fa0:	ldr	r2, [fp, #-16]
   19fa4:	mov	r1, r3
   19fa8:	mov	r0, #1
   19fac:	bl	1ae04 <__assert_fail@plt+0x9cac>
   19fb0:	mov	r2, r0
   19fb4:	ldr	r3, [fp, #-16]
   19fb8:	cmp	r2, r3
   19fbc:	beq	19fe8 <__assert_fail@plt+0x8e90>
   19fc0:	bl	11074 <__errno_location@plt>
   19fc4:	mov	r3, r0
   19fc8:	ldr	r4, [r3]
   19fcc:	ldr	r0, [pc, #52]	; 1a008 <__assert_fail@plt+0x8eb0>
   19fd0:	bl	11044 <gettext@plt>
   19fd4:	mov	r3, r0
   19fd8:	ldr	r2, [pc, #44]	; 1a00c <__assert_fail@plt+0x8eb4>
   19fdc:	mov	r1, r4
   19fe0:	mov	r0, #1
   19fe4:	bl	10fcc <error@plt>
   19fe8:	ldr	r3, [pc, #20]	; 1a004 <__assert_fail@plt+0x8eac>
   19fec:	ldr	r3, [r3]
   19ff0:	ldr	r2, [pc, #12]	; 1a004 <__assert_fail@plt+0x8eac>
   19ff4:	str	r3, [r2, #4]
   19ff8:	nop			; (mov r0, r0)
   19ffc:	sub	sp, fp, #8
   1a000:	pop	{r4, fp, pc}
   1a004:	muleq	r4, r8, r1
   1a008:	ldrdeq	r3, [r3], -r8
   1a00c:	andeq	r3, r3, r4, ror #13
   1a010:	push	{fp, lr}
   1a014:	add	fp, sp, #4
   1a018:	sub	sp, sp, #24
   1a01c:	mov	r3, r0
   1a020:	strb	r3, [fp, #-21]	; 0xffffffeb
   1a024:	ldr	r3, [pc, #332]	; 1a178 <__assert_fail@plt+0x9020>
   1a028:	ldr	r3, [r3, #4]
   1a02c:	add	r2, r3, #1
   1a030:	ldr	r1, [pc, #320]	; 1a178 <__assert_fail@plt+0x9020>
   1a034:	str	r2, [r1, #4]
   1a038:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   1a03c:	strb	r2, [r3]
   1a040:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1a044:	cmp	r3, #10
   1a048:	bne	1a16c <__assert_fail@plt+0x9014>
   1a04c:	ldr	r3, [pc, #292]	; 1a178 <__assert_fail@plt+0x9020>
   1a050:	ldr	r3, [r3, #4]
   1a054:	mov	r2, r3
   1a058:	ldr	r3, [pc, #280]	; 1a178 <__assert_fail@plt+0x9020>
   1a05c:	ldr	r3, [r3]
   1a060:	sub	r3, r2, r3
   1a064:	str	r3, [fp, #-12]
   1a068:	ldr	r3, [pc, #268]	; 1a17c <__assert_fail@plt+0x9024>
   1a06c:	ldr	r3, [r3]
   1a070:	cmn	r3, #1
   1a074:	bne	1a0b4 <__assert_fail@plt+0x8f5c>
   1a078:	mov	r0, #0
   1a07c:	bl	11128 <isatty@plt>
   1a080:	mov	r3, r0
   1a084:	cmp	r3, #0
   1a088:	bne	1a0a0 <__assert_fail@plt+0x8f48>
   1a08c:	mov	r0, #1
   1a090:	bl	11128 <isatty@plt>
   1a094:	mov	r3, r0
   1a098:	cmp	r3, #0
   1a09c:	beq	1a0a8 <__assert_fail@plt+0x8f50>
   1a0a0:	mov	r3, #1
   1a0a4:	b	1a0ac <__assert_fail@plt+0x8f54>
   1a0a8:	mov	r3, #0
   1a0ac:	ldr	r2, [pc, #200]	; 1a17c <__assert_fail@plt+0x9024>
   1a0b0:	str	r3, [r2]
   1a0b4:	ldr	r3, [pc, #192]	; 1a17c <__assert_fail@plt+0x9024>
   1a0b8:	ldr	r3, [r3]
   1a0bc:	cmp	r3, #0
   1a0c0:	beq	1a0cc <__assert_fail@plt+0x8f74>
   1a0c4:	bl	19f70 <__assert_fail@plt+0x8e18>
   1a0c8:	b	1a16c <__assert_fail@plt+0x9014>
   1a0cc:	ldr	r3, [fp, #-12]
   1a0d0:	cmp	r3, #512	; 0x200
   1a0d4:	bcc	1a16c <__assert_fail@plt+0x9014>
   1a0d8:	ldr	r3, [pc, #152]	; 1a178 <__assert_fail@plt+0x9020>
   1a0dc:	ldr	r3, [r3, #4]
   1a0e0:	str	r3, [fp, #-16]
   1a0e4:	ldr	r3, [pc, #140]	; 1a178 <__assert_fail@plt+0x9020>
   1a0e8:	ldr	r3, [r3]
   1a0ec:	add	r3, r3, #512	; 0x200
   1a0f0:	str	r3, [fp, #-8]
   1a0f4:	ldr	r3, [fp, #-8]
   1a0f8:	sub	r3, r3, #1
   1a0fc:	str	r3, [fp, #-8]
   1a100:	ldr	r3, [fp, #-8]
   1a104:	ldrb	r3, [r3]
   1a108:	cmp	r3, #10
   1a10c:	bne	1a0f4 <__assert_fail@plt+0x8f9c>
   1a110:	ldr	r3, [fp, #-8]
   1a114:	add	r3, r3, #1
   1a118:	str	r3, [fp, #-8]
   1a11c:	ldr	r2, [pc, #84]	; 1a178 <__assert_fail@plt+0x9020>
   1a120:	ldr	r3, [fp, #-8]
   1a124:	str	r3, [r2, #4]
   1a128:	bl	19f70 <__assert_fail@plt+0x8e18>
   1a12c:	ldr	r3, [pc, #68]	; 1a178 <__assert_fail@plt+0x9020>
   1a130:	ldr	r0, [r3]
   1a134:	ldr	r2, [fp, #-16]
   1a138:	ldr	r3, [fp, #-8]
   1a13c:	sub	r3, r2, r3
   1a140:	mov	r2, r3
   1a144:	ldr	r1, [fp, #-8]
   1a148:	bl	10f00 <memcpy@plt>
   1a14c:	ldr	r3, [pc, #36]	; 1a178 <__assert_fail@plt+0x9020>
   1a150:	ldr	r3, [r3]
   1a154:	ldr	r1, [fp, #-16]
   1a158:	ldr	r2, [fp, #-8]
   1a15c:	sub	r2, r1, r2
   1a160:	add	r3, r3, r2
   1a164:	ldr	r2, [pc, #12]	; 1a178 <__assert_fail@plt+0x9020>
   1a168:	str	r3, [r2, #4]
   1a16c:	nop			; (mov r0, r0)
   1a170:	sub	sp, fp, #4
   1a174:	pop	{fp, pc}
   1a178:	muleq	r4, r8, r1
   1a17c:	andeq	r5, r4, r8, lsl r1
   1a180:	push	{fp, lr}
   1a184:	add	fp, sp, #4
   1a188:	sub	sp, sp, #56	; 0x38
   1a18c:	strd	r0, [fp, #-52]	; 0xffffffcc
   1a190:	str	r2, [fp, #-56]	; 0xffffffc8
   1a194:	sub	r3, fp, #40	; 0x28
   1a198:	mov	r2, r3
   1a19c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1a1a0:	bl	1aec4 <__assert_fail@plt+0x9d6c>
   1a1a4:	str	r0, [fp, #-12]
   1a1a8:	ldr	r2, [fp, #-12]
   1a1ac:	sub	r3, fp, #40	; 0x28
   1a1b0:	sub	r3, r2, r3
   1a1b4:	rsb	r3, r3, #20
   1a1b8:	str	r3, [fp, #-16]
   1a1bc:	ldr	r3, [fp, #-16]
   1a1c0:	str	r3, [fp, #-8]
   1a1c4:	b	1a1f0 <__assert_fail@plt+0x9098>
   1a1c8:	ldr	r3, [pc, #108]	; 1a23c <__assert_fail@plt+0x90e4>
   1a1cc:	ldr	r3, [r3, #4]
   1a1d0:	add	r2, r3, #1
   1a1d4:	ldr	r1, [pc, #96]	; 1a23c <__assert_fail@plt+0x90e4>
   1a1d8:	str	r2, [r1, #4]
   1a1dc:	mov	r2, #48	; 0x30
   1a1e0:	strb	r2, [r3]
   1a1e4:	ldr	r3, [fp, #-8]
   1a1e8:	add	r3, r3, #1
   1a1ec:	str	r3, [fp, #-8]
   1a1f0:	ldr	r2, [fp, #-8]
   1a1f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a1f8:	cmp	r2, r3
   1a1fc:	bcc	1a1c8 <__assert_fail@plt+0x9070>
   1a200:	ldr	r3, [pc, #52]	; 1a23c <__assert_fail@plt+0x90e4>
   1a204:	ldr	r3, [r3, #4]
   1a208:	ldr	r2, [fp, #-16]
   1a20c:	ldr	r1, [fp, #-12]
   1a210:	mov	r0, r3
   1a214:	bl	10f00 <memcpy@plt>
   1a218:	ldr	r3, [pc, #28]	; 1a23c <__assert_fail@plt+0x90e4>
   1a21c:	ldr	r2, [r3, #4]
   1a220:	ldr	r3, [fp, #-16]
   1a224:	add	r3, r2, r3
   1a228:	ldr	r2, [pc, #12]	; 1a23c <__assert_fail@plt+0x90e4>
   1a22c:	str	r3, [r2, #4]
   1a230:	nop			; (mov r0, r0)
   1a234:	sub	sp, fp, #4
   1a238:	pop	{fp, pc}
   1a23c:	muleq	r4, r8, r1
   1a240:	push	{r4, r5, fp, lr}
   1a244:	add	fp, sp, #12
   1a248:	sub	sp, sp, #88	; 0x58
   1a24c:	strd	r0, [fp, #-92]	; 0xffffffa4
   1a250:	strd	r2, [fp, #-100]	; 0xffffff9c
   1a254:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1a258:	orrs	r3, r2, r3
   1a25c:	bne	1a270 <__assert_fail@plt+0x9118>
   1a260:	mov	r2, #0
   1a264:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   1a268:	bl	1a180 <__assert_fail@plt+0x9028>
   1a26c:	b	1a438 <__assert_fail@plt+0x92e0>
   1a270:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1a274:	add	r3, pc, #460	; 0x1cc
   1a278:	ldrd	r2, [r3]
   1a27c:	bl	3017c <__assert_fail@plt+0x1f024>
   1a280:	mov	r2, r0
   1a284:	mov	r3, r1
   1a288:	strd	r2, [fp, #-68]	; 0xffffffbc
   1a28c:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1a290:	add	r3, pc, #432	; 0x1b0
   1a294:	ldrd	r2, [r3]
   1a298:	bl	3017c <__assert_fail@plt+0x1f024>
   1a29c:	strd	r2, [fp, #-76]	; 0xffffffb4
   1a2a0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1a2a4:	add	r1, pc, #420	; 0x1a4
   1a2a8:	ldrd	r0, [r1]
   1a2ac:	cmp	r3, r1
   1a2b0:	cmpeq	r2, r0
   1a2b4:	bls	1a2cc <__assert_fail@plt+0x9174>
   1a2b8:	ldr	r3, [pc, #408]	; 1a458 <__assert_fail@plt+0x9300>
   1a2bc:	ldr	r2, [pc, #408]	; 1a45c <__assert_fail@plt+0x9304>
   1a2c0:	ldr	r1, [pc, #408]	; 1a460 <__assert_fail@plt+0x9308>
   1a2c4:	ldr	r0, [pc, #408]	; 1a464 <__assert_fail@plt+0x930c>
   1a2c8:	bl	11158 <__assert_fail@plt>
   1a2cc:	add	r3, pc, #372	; 0x174
   1a2d0:	ldrd	r2, [r3]
   1a2d4:	strd	r2, [fp, #-20]	; 0xffffffec
   1a2d8:	mov	r2, #0
   1a2dc:	mov	r3, #0
   1a2e0:	strd	r2, [fp, #-28]	; 0xffffffe4
   1a2e4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1a2e8:	strd	r2, [fp, #-44]	; 0xffffffd4
   1a2ec:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1a2f0:	strd	r2, [fp, #-52]	; 0xffffffcc
   1a2f4:	mov	r2, #0
   1a2f8:	mov	r3, #0
   1a2fc:	strd	r2, [fp, #-36]	; 0xffffffdc
   1a300:	mov	r3, #64	; 0x40
   1a304:	str	r3, [fp, #-56]	; 0xffffffc8
   1a308:	b	1a404 <__assert_fail@plt+0x92ac>
   1a30c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a310:	lsl	r5, r2, #31
   1a314:	mov	r4, #0
   1a318:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1a31c:	lsrs	r3, r3, #1
   1a320:	rrx	r2, r2
   1a324:	orr	r2, r2, r4
   1a328:	orr	r3, r3, r5
   1a32c:	strd	r2, [fp, #-28]	; 0xffffffe4
   1a330:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a334:	lsrs	r3, r3, #1
   1a338:	rrx	r2, r2
   1a33c:	strd	r2, [fp, #-20]	; 0xffffffec
   1a340:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a344:	adds	r2, r2, r2
   1a348:	adc	r3, r3, r3
   1a34c:	strd	r2, [fp, #-36]	; 0xffffffdc
   1a350:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1a354:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a358:	cmp	r1, r3
   1a35c:	cmpeq	r0, r2
   1a360:	bhi	1a38c <__assert_fail@plt+0x9234>
   1a364:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1a368:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a36c:	cmp	r1, r3
   1a370:	cmpeq	r0, r2
   1a374:	bne	1a3f8 <__assert_fail@plt+0x92a0>
   1a378:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1a37c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1a380:	cmp	r1, r3
   1a384:	cmpeq	r0, r2
   1a388:	bcc	1a3f8 <__assert_fail@plt+0x92a0>
   1a38c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a390:	adds	r2, r2, #1
   1a394:	adc	r3, r3, #0
   1a398:	strd	r2, [fp, #-36]	; 0xffffffdc
   1a39c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1a3a0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1a3a4:	cmp	r1, r3
   1a3a8:	cmpeq	r0, r2
   1a3ac:	movcc	r3, #1
   1a3b0:	movcs	r3, #0
   1a3b4:	uxtb	r3, r3
   1a3b8:	uxtb	r2, r3
   1a3bc:	mov	r3, #0
   1a3c0:	strd	r2, [fp, #-84]	; 0xffffffac
   1a3c4:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   1a3c8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1a3cc:	subs	r2, r0, r2
   1a3d0:	sbc	r3, r1, r3
   1a3d4:	strd	r2, [fp, #-52]	; 0xffffffcc
   1a3d8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1a3dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a3e0:	subs	r0, r0, r2
   1a3e4:	sbc	r1, r1, r3
   1a3e8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1a3ec:	subs	r2, r0, r2
   1a3f0:	sbc	r3, r1, r3
   1a3f4:	strd	r2, [fp, #-44]	; 0xffffffd4
   1a3f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a3fc:	sub	r3, r3, #1
   1a400:	str	r3, [fp, #-56]	; 0xffffffc8
   1a404:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a408:	cmp	r3, #0
   1a40c:	bne	1a30c <__assert_fail@plt+0x91b4>
   1a410:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1a414:	strd	r2, [fp, #-76]	; 0xffffffb4
   1a418:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a41c:	strd	r2, [fp, #-100]	; 0xffffff9c
   1a420:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1a424:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1a428:	bl	1a240 <__assert_fail@plt+0x90e8>
   1a42c:	mov	r2, #9
   1a430:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1a434:	bl	1a180 <__assert_fail@plt+0x9028>
   1a438:	nop			; (mov r0, r0)
   1a43c:	sub	sp, fp, #12
   1a440:	pop	{r4, r5, fp, pc}
   1a444:	nop			; (mov r0, r0)
   1a448:	blcc	fe6ccc50 <stdout@@GLIBC_2.4+0xfe687ac4>
   1a44c:	andeq	r0, r0, r0
   1a450:	blcc	fe6ccc54 <stdout@@GLIBC_2.4+0xfe687ac8>
   1a454:	andeq	r0, r0, r0
   1a458:	andeq	r3, r3, r0, lsl #19
   1a45c:	andeq	r0, r0, r6, lsl #19
   1a460:	andeq	r0, r3, r4, lsl #11
   1a464:	andeq	r3, r3, r8, ror #13
   1a468:	push	{fp, lr}
   1a46c:	add	fp, sp, #4
   1a470:	sub	sp, sp, #288	; 0x120
   1a474:	sub	ip, fp, #276	; 0x114
   1a478:	strd	r0, [ip]
   1a47c:	sub	r1, fp, #276	; 0x114
   1a480:	strd	r2, [r1, #-8]
   1a484:	sub	r3, fp, #276	; 0x114
   1a488:	sub	r2, fp, #276	; 0x114
   1a48c:	mov	r1, r2
   1a490:	ldrd	r2, [r3, #-8]
   1a494:	ldrd	r0, [r1]
   1a498:	bl	1a240 <__assert_fail@plt+0x90e8>
   1a49c:	mov	r0, #58	; 0x3a
   1a4a0:	bl	1a010 <__assert_fail@plt+0x8eb8>
   1a4a4:	sub	r3, fp, #276	; 0x114
   1a4a8:	mov	r2, r3
   1a4ac:	sub	r3, fp, #276	; 0x114
   1a4b0:	mov	r1, r3
   1a4b4:	sub	r3, fp, #268	; 0x10c
   1a4b8:	str	r3, [sp]
   1a4bc:	ldrd	r2, [r2, #-8]
   1a4c0:	ldrd	r0, [r1]
   1a4c4:	bl	19a50 <__assert_fail@plt+0x88f8>
   1a4c8:	mov	r3, #0
   1a4cc:	str	r3, [fp, #-8]
   1a4d0:	b	1a54c <__assert_fail@plt+0x93f4>
   1a4d4:	mov	r3, #0
   1a4d8:	str	r3, [fp, #-12]
   1a4dc:	b	1a520 <__assert_fail@plt+0x93c8>
   1a4e0:	mov	r0, #32
   1a4e4:	bl	1a010 <__assert_fail@plt+0x8eb8>
   1a4e8:	sub	r3, fp, #260	; 0x104
   1a4ec:	mov	r2, r3
   1a4f0:	ldr	r3, [fp, #-8]
   1a4f4:	add	r3, r3, #2
   1a4f8:	lsl	r3, r3, #3
   1a4fc:	add	r3, r2, r3
   1a500:	sub	r3, r3, #8
   1a504:	ldrd	r2, [r3]
   1a508:	mov	r0, #0
   1a50c:	mov	r1, #0
   1a510:	bl	1a240 <__assert_fail@plt+0x90e8>
   1a514:	ldr	r3, [fp, #-12]
   1a518:	add	r3, r3, #1
   1a51c:	str	r3, [fp, #-12]
   1a520:	sub	r2, fp, #44	; 0x2c
   1a524:	ldr	r3, [fp, #-8]
   1a528:	add	r3, r2, r3
   1a52c:	ldrb	r3, [r3]
   1a530:	mov	r2, r3
   1a534:	ldr	r3, [fp, #-12]
   1a538:	cmp	r2, r3
   1a53c:	bhi	1a4e0 <__assert_fail@plt+0x9388>
   1a540:	ldr	r3, [fp, #-8]
   1a544:	add	r3, r3, #1
   1a548:	str	r3, [fp, #-8]
   1a54c:	ldrb	r3, [fp, #-18]	; 0xffffffee
   1a550:	mov	r2, r3
   1a554:	ldr	r3, [fp, #-8]
   1a558:	cmp	r2, r3
   1a55c:	bhi	1a4d4 <__assert_fail@plt+0x937c>
   1a560:	sub	r3, fp, #260	; 0x104
   1a564:	ldrd	r2, [r3]
   1a568:	orrs	r3, r2, r3
   1a56c:	beq	1a58c <__assert_fail@plt+0x9434>
   1a570:	mov	r0, #32
   1a574:	bl	1a010 <__assert_fail@plt+0x8eb8>
   1a578:	sub	r3, fp, #260	; 0x104
   1a57c:	ldrd	r0, [r3]
   1a580:	sub	r3, fp, #260	; 0x104
   1a584:	ldrd	r2, [r3, #-8]
   1a588:	bl	1a240 <__assert_fail@plt+0x90e8>
   1a58c:	mov	r0, #10
   1a590:	bl	1a010 <__assert_fail@plt+0x8eb8>
   1a594:	nop			; (mov r0, r0)
   1a598:	sub	sp, fp, #4
   1a59c:	pop	{fp, pc}
   1a5a0:	push	{r4, fp, lr}
   1a5a4:	add	fp, sp, #8
   1a5a8:	sub	sp, sp, #68	; 0x44
   1a5ac:	str	r0, [fp, #-72]	; 0xffffffb8
   1a5b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a5b4:	str	r3, [fp, #-16]
   1a5b8:	b	1a5c8 <__assert_fail@plt+0x9470>
   1a5bc:	ldr	r3, [fp, #-16]
   1a5c0:	add	r3, r3, #1
   1a5c4:	str	r3, [fp, #-16]
   1a5c8:	ldr	r3, [fp, #-16]
   1a5cc:	ldrb	r3, [r3]
   1a5d0:	cmp	r3, #32
   1a5d4:	beq	1a5bc <__assert_fail@plt+0x9464>
   1a5d8:	ldr	r3, [fp, #-16]
   1a5dc:	ldrb	r3, [r3]
   1a5e0:	cmp	r3, #43	; 0x2b
   1a5e4:	moveq	r3, #1
   1a5e8:	movne	r3, #0
   1a5ec:	uxtb	r3, r3
   1a5f0:	mov	r2, r3
   1a5f4:	ldr	r3, [fp, #-16]
   1a5f8:	add	r3, r3, r2
   1a5fc:	str	r3, [fp, #-16]
   1a600:	sub	r1, fp, #44	; 0x2c
   1a604:	sub	r3, fp, #36	; 0x24
   1a608:	ldr	r2, [fp, #-16]
   1a60c:	mov	r0, r3
   1a610:	bl	19c38 <__assert_fail@plt+0x8ae0>
   1a614:	str	r0, [fp, #-28]	; 0xffffffe4
   1a618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a61c:	cmp	r3, #0
   1a620:	beq	1a630 <__assert_fail@plt+0x94d8>
   1a624:	cmp	r3, #1
   1a628:	beq	1a6c0 <__assert_fail@plt+0x9568>
   1a62c:	b	1a690 <__assert_fail@plt+0x9538>
   1a630:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a634:	mvn	r0, #0
   1a638:	mvn	r1, #-2147483648	; 0x80000000
   1a63c:	and	r0, r0, r2
   1a640:	and	r1, r1, r3
   1a644:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a648:	cmp	r1, r3
   1a64c:	cmpeq	r0, r2
   1a650:	bne	1a6c8 <__assert_fail@plt+0x9570>
   1a654:	ldr	r3, [pc, #440]	; 1a814 <__assert_fail@plt+0x96bc>
   1a658:	ldrb	r3, [r3]
   1a65c:	cmp	r3, #0
   1a660:	beq	1a67c <__assert_fail@plt+0x9524>
   1a664:	ldr	r3, [pc, #428]	; 1a818 <__assert_fail@plt+0x96c0>
   1a668:	ldr	r3, [r3]
   1a66c:	mov	r2, #36	; 0x24
   1a670:	mov	r1, #1
   1a674:	ldr	r0, [pc, #416]	; 1a81c <__assert_fail@plt+0x96c4>
   1a678:	bl	10f84 <fwrite@plt>
   1a67c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1a680:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1a684:	bl	1a468 <__assert_fail@plt+0x9310>
   1a688:	mov	r3, #1
   1a68c:	b	1a808 <__assert_fail@plt+0x96b0>
   1a690:	ldr	r0, [pc, #392]	; 1a820 <__assert_fail@plt+0x96c8>
   1a694:	bl	11044 <gettext@plt>
   1a698:	mov	r4, r0
   1a69c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a6a0:	bl	2a960 <__assert_fail@plt+0x19808>
   1a6a4:	mov	r3, r0
   1a6a8:	mov	r2, r4
   1a6ac:	mov	r1, #0
   1a6b0:	mov	r0, #0
   1a6b4:	bl	10fcc <error@plt>
   1a6b8:	mov	r3, #0
   1a6bc:	b	1a808 <__assert_fail@plt+0x96b0>
   1a6c0:	nop			; (mov r0, r0)
   1a6c4:	b	1a6cc <__assert_fail@plt+0x9574>
   1a6c8:	nop			; (mov r0, r0)
   1a6cc:	ldr	r3, [pc, #320]	; 1a814 <__assert_fail@plt+0x96bc>
   1a6d0:	ldrb	r3, [r3]
   1a6d4:	cmp	r3, #0
   1a6d8:	beq	1a6f4 <__assert_fail@plt+0x959c>
   1a6dc:	ldr	r3, [pc, #308]	; 1a818 <__assert_fail@plt+0x96c0>
   1a6e0:	ldr	r3, [r3]
   1a6e4:	mov	r2, #39	; 0x27
   1a6e8:	mov	r1, #1
   1a6ec:	ldr	r0, [pc, #304]	; 1a824 <__assert_fail@plt+0x96cc>
   1a6f0:	bl	10f84 <fwrite@plt>
   1a6f4:	sub	r3, fp, #56	; 0x38
   1a6f8:	mov	r2, #10
   1a6fc:	ldr	r1, [fp, #-16]
   1a700:	mov	r0, r3
   1a704:	bl	27184 <__assert_fail@plt+0x1602c>
   1a708:	ldr	r3, [pc, #280]	; 1a828 <__assert_fail@plt+0x96d0>
   1a70c:	ldr	r3, [r3]
   1a710:	sub	r2, fp, #56	; 0x38
   1a714:	mov	r1, #10
   1a718:	mov	r0, r3
   1a71c:	bl	271c4 <__assert_fail@plt+0x1606c>
   1a720:	mov	r0, #58	; 0x3a
   1a724:	bl	1114c <putchar_unlocked@plt>
   1a728:	sub	r2, fp, #68	; 0x44
   1a72c:	sub	r3, fp, #56	; 0x38
   1a730:	mov	r1, r2
   1a734:	mov	r0, r3
   1a738:	bl	19b70 <__assert_fail@plt+0x8a18>
   1a73c:	mov	r3, #0
   1a740:	str	r3, [fp, #-20]	; 0xffffffec
   1a744:	b	1a7c4 <__assert_fail@plt+0x966c>
   1a748:	mov	r3, #0
   1a74c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a750:	b	1a798 <__assert_fail@plt+0x9640>
   1a754:	mov	r0, #32
   1a758:	bl	1114c <putchar_unlocked@plt>
   1a75c:	ldr	r3, [pc, #196]	; 1a828 <__assert_fail@plt+0x96d0>
   1a760:	ldr	r0, [r3]
   1a764:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a76c:	mov	r3, r2
   1a770:	lsl	r3, r3, #1
   1a774:	add	r3, r3, r2
   1a778:	lsl	r3, r3, #2
   1a77c:	add	r3, r1, r3
   1a780:	mov	r2, r3
   1a784:	mov	r1, #10
   1a788:	bl	271c4 <__assert_fail@plt+0x1606c>
   1a78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a790:	add	r3, r3, #1
   1a794:	str	r3, [fp, #-24]	; 0xffffffe8
   1a798:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a79c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7a0:	lsl	r3, r3, #2
   1a7a4:	add	r3, r2, r3
   1a7a8:	ldr	r2, [r3]
   1a7ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7b0:	cmp	r2, r3
   1a7b4:	bhi	1a754 <__assert_fail@plt+0x95fc>
   1a7b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7bc:	add	r3, r3, #1
   1a7c0:	str	r3, [fp, #-20]	; 0xffffffec
   1a7c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a7c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a7cc:	cmp	r2, r3
   1a7d0:	bhi	1a748 <__assert_fail@plt+0x95f0>
   1a7d4:	sub	r3, fp, #68	; 0x44
   1a7d8:	mov	r0, r3
   1a7dc:	bl	11ec8 <__assert_fail@plt+0xd70>
   1a7e0:	sub	r3, fp, #56	; 0x38
   1a7e4:	mov	r0, r3
   1a7e8:	bl	1f3e0 <__assert_fail@plt+0xe288>
   1a7ec:	mov	r0, #10
   1a7f0:	bl	1114c <putchar_unlocked@plt>
   1a7f4:	ldr	r3, [pc, #44]	; 1a828 <__assert_fail@plt+0x96d0>
   1a7f8:	ldr	r3, [r3]
   1a7fc:	mov	r0, r3
   1a800:	bl	10f6c <fflush_unlocked@plt>
   1a804:	mov	r3, #1
   1a808:	mov	r0, r3
   1a80c:	sub	sp, fp, #8
   1a810:	pop	{r4, fp, pc}
   1a814:	muleq	r4, r4, r1
   1a818:	andeq	r5, r4, r0, lsl #3
   1a81c:	strdeq	r3, [r3], -ip
   1a820:	andeq	r3, r3, r4, lsr #14
   1a824:	andeq	r3, r3, r8, asr #14
   1a828:	andeq	r5, r4, ip, lsl #3
   1a82c:	push	{r4, fp, lr}
   1a830:	add	fp, sp, #8
   1a834:	sub	sp, sp, #12
   1a838:	str	r0, [fp, #-16]
   1a83c:	ldr	r3, [fp, #-16]
   1a840:	cmp	r3, #0
   1a844:	beq	1a874 <__assert_fail@plt+0x971c>
   1a848:	ldr	r3, [pc, #180]	; 1a904 <__assert_fail@plt+0x97ac>
   1a84c:	ldr	r4, [r3]
   1a850:	ldr	r0, [pc, #176]	; 1a908 <__assert_fail@plt+0x97b0>
   1a854:	bl	11044 <gettext@plt>
   1a858:	mov	r1, r0
   1a85c:	ldr	r3, [pc, #168]	; 1a90c <__assert_fail@plt+0x97b4>
   1a860:	ldr	r3, [r3]
   1a864:	mov	r2, r3
   1a868:	mov	r0, r4
   1a86c:	bl	11068 <fprintf@plt>
   1a870:	b	1a8fc <__assert_fail@plt+0x97a4>
   1a874:	ldr	r0, [pc, #148]	; 1a910 <__assert_fail@plt+0x97b8>
   1a878:	bl	11044 <gettext@plt>
   1a87c:	ldr	r3, [pc, #136]	; 1a90c <__assert_fail@plt+0x97b4>
   1a880:	ldr	r1, [r3]
   1a884:	ldr	r3, [pc, #128]	; 1a90c <__assert_fail@plt+0x97b4>
   1a888:	ldr	r3, [r3]
   1a88c:	mov	r2, r3
   1a890:	bl	10eb8 <printf@plt>
   1a894:	ldr	r0, [pc, #120]	; 1a914 <__assert_fail@plt+0x97bc>
   1a898:	bl	11044 <gettext@plt>
   1a89c:	mov	r2, r0
   1a8a0:	ldr	r3, [pc, #112]	; 1a918 <__assert_fail@plt+0x97c0>
   1a8a4:	ldr	r3, [r3]
   1a8a8:	mov	r1, r3
   1a8ac:	mov	r0, r2
   1a8b0:	bl	10e7c <fputs_unlocked@plt>
   1a8b4:	ldr	r0, [pc, #96]	; 1a91c <__assert_fail@plt+0x97c4>
   1a8b8:	bl	11044 <gettext@plt>
   1a8bc:	mov	r2, r0
   1a8c0:	ldr	r3, [pc, #80]	; 1a918 <__assert_fail@plt+0x97c0>
   1a8c4:	ldr	r3, [r3]
   1a8c8:	mov	r1, r3
   1a8cc:	mov	r0, r2
   1a8d0:	bl	10e7c <fputs_unlocked@plt>
   1a8d4:	ldr	r0, [pc, #68]	; 1a920 <__assert_fail@plt+0x97c8>
   1a8d8:	bl	11044 <gettext@plt>
   1a8dc:	mov	r2, r0
   1a8e0:	ldr	r3, [pc, #48]	; 1a918 <__assert_fail@plt+0x97c0>
   1a8e4:	ldr	r3, [r3]
   1a8e8:	mov	r1, r3
   1a8ec:	mov	r0, r2
   1a8f0:	bl	10e7c <fputs_unlocked@plt>
   1a8f4:	ldr	r0, [pc, #40]	; 1a924 <__assert_fail@plt+0x97cc>
   1a8f8:	bl	11290 <__assert_fail@plt+0x138>
   1a8fc:	ldr	r0, [fp, #-16]
   1a900:	bl	1102c <exit@plt>
   1a904:	andeq	r5, r4, r0, lsl #3
   1a908:	andeq	r3, r3, r0, ror r7
   1a90c:	andeq	r5, r4, r8, lsr #3
   1a910:	muleq	r3, r8, r7
   1a914:	andeq	r3, r3, r0, asr #15
   1a918:	andeq	r5, r4, ip, lsl #3
   1a91c:	andeq	r3, r3, r8, asr #16
   1a920:	andeq	r3, r3, r8, ror r8
   1a924:			; <UNDEFINED> instruction: 0x000338b0
   1a928:	push	{fp, lr}
   1a92c:	add	fp, sp, #4
   1a930:	sub	sp, sp, #16
   1a934:	mov	r3, #1
   1a938:	strb	r3, [fp, #-5]
   1a93c:	sub	r3, fp, #20
   1a940:	mov	r0, r3
   1a944:	bl	2a98c <__assert_fail@plt+0x19834>
   1a948:	ldr	r3, [pc, #112]	; 1a9c0 <__assert_fail@plt+0x9868>
   1a94c:	ldr	r0, [r3]
   1a950:	sub	r3, fp, #20
   1a954:	mov	r2, #3
   1a958:	ldr	r1, [pc, #100]	; 1a9c4 <__assert_fail@plt+0x986c>
   1a95c:	bl	2aa88 <__assert_fail@plt+0x19930>
   1a960:	str	r0, [fp, #-12]
   1a964:	ldr	r3, [fp, #-12]
   1a968:	cmn	r3, #1
   1a96c:	beq	1a9a0 <__assert_fail@plt+0x9848>
   1a970:	ldr	r3, [fp, #-16]
   1a974:	mov	r0, r3
   1a978:	bl	1a5a0 <__assert_fail@plt+0x9448>
   1a97c:	mov	r3, r0
   1a980:	mov	r2, r3
   1a984:	ldrb	r3, [fp, #-5]
   1a988:	and	r3, r3, r2
   1a98c:	cmp	r3, #0
   1a990:	movne	r3, #1
   1a994:	moveq	r3, #0
   1a998:	strb	r3, [fp, #-5]
   1a99c:	b	1a948 <__assert_fail@plt+0x97f0>
   1a9a0:	nop			; (mov r0, r0)
   1a9a4:	ldr	r3, [fp, #-16]
   1a9a8:	mov	r0, r3
   1a9ac:	bl	1ad78 <__assert_fail@plt+0x9c20>
   1a9b0:	ldrb	r3, [fp, #-5]
   1a9b4:	mov	r0, r3
   1a9b8:	sub	sp, fp, #4
   1a9bc:	pop	{fp, pc}
   1a9c0:	andeq	r5, r4, r8, lsl #3
   1a9c4:			; <UNDEFINED> instruction: 0x000338b8
   1a9c8:	push	{r4, r5, r6, fp, lr}
   1a9cc:	add	fp, sp, #16
   1a9d0:	sub	sp, sp, #44	; 0x2c
   1a9d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a9d8:	str	r1, [fp, #-44]	; 0xffffffd4
   1a9dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a9e0:	ldr	r3, [r3]
   1a9e4:	mov	r0, r3
   1a9e8:	bl	279a8 <__assert_fail@plt+0x16850>
   1a9ec:	ldr	r1, [pc, #424]	; 1ab9c <__assert_fail@plt+0x9a44>
   1a9f0:	mov	r0, #6
   1a9f4:	bl	110ec <setlocale@plt>
   1a9f8:	ldr	r1, [pc, #416]	; 1aba0 <__assert_fail@plt+0x9a48>
   1a9fc:	ldr	r0, [pc, #416]	; 1aba4 <__assert_fail@plt+0x9a4c>
   1aa00:	bl	1111c <bindtextdomain@plt>
   1aa04:	ldr	r0, [pc, #408]	; 1aba4 <__assert_fail@plt+0x9a4c>
   1aa08:	bl	10f54 <textdomain@plt>
   1aa0c:	bl	19f20 <__assert_fail@plt+0x8dc8>
   1aa10:	ldr	r0, [pc, #400]	; 1aba8 <__assert_fail@plt+0x9a50>
   1aa14:	bl	30354 <__assert_fail@plt+0x1f1fc>
   1aa18:	ldr	r0, [pc, #396]	; 1abac <__assert_fail@plt+0x9a54>
   1aa1c:	bl	30354 <__assert_fail@plt+0x1f1fc>
   1aa20:	b	1aac8 <__assert_fail@plt+0x9970>
   1aa24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aa28:	cmn	r3, #2
   1aa2c:	beq	1aa54 <__assert_fail@plt+0x98fc>
   1aa30:	cmp	r3, #256	; 0x100
   1aa34:	beq	1aa44 <__assert_fail@plt+0x98ec>
   1aa38:	cmn	r3, #3
   1aa3c:	beq	1aa5c <__assert_fail@plt+0x9904>
   1aa40:	b	1aac0 <__assert_fail@plt+0x9968>
   1aa44:	ldr	r3, [pc, #356]	; 1abb0 <__assert_fail@plt+0x9a58>
   1aa48:	mov	r2, #1
   1aa4c:	strb	r2, [r3]
   1aa50:	b	1aac8 <__assert_fail@plt+0x9970>
   1aa54:	mov	r0, #0
   1aa58:	bl	1a82c <__assert_fail@plt+0x96d4>
   1aa5c:	ldr	r3, [pc, #336]	; 1abb4 <__assert_fail@plt+0x9a5c>
   1aa60:	ldr	r4, [r3]
   1aa64:	ldr	r3, [pc, #332]	; 1abb8 <__assert_fail@plt+0x9a60>
   1aa68:	ldr	r5, [r3]
   1aa6c:	ldr	r1, [pc, #328]	; 1abbc <__assert_fail@plt+0x9a64>
   1aa70:	ldr	r0, [pc, #328]	; 1abc0 <__assert_fail@plt+0x9a68>
   1aa74:	bl	28058 <__assert_fail@plt+0x16f00>
   1aa78:	mov	r6, r0
   1aa7c:	ldr	r1, [pc, #320]	; 1abc4 <__assert_fail@plt+0x9a6c>
   1aa80:	ldr	r0, [pc, #320]	; 1abc8 <__assert_fail@plt+0x9a70>
   1aa84:	bl	28058 <__assert_fail@plt+0x16f00>
   1aa88:	mov	r2, r0
   1aa8c:	mov	r3, #0
   1aa90:	str	r3, [sp, #12]
   1aa94:	str	r2, [sp, #8]
   1aa98:	str	r6, [sp, #4]
   1aa9c:	ldr	r3, [pc, #296]	; 1abcc <__assert_fail@plt+0x9a74>
   1aaa0:	str	r3, [sp]
   1aaa4:	mov	r3, r5
   1aaa8:	ldr	r2, [pc, #288]	; 1abd0 <__assert_fail@plt+0x9a78>
   1aaac:	ldr	r1, [pc, #288]	; 1abd4 <__assert_fail@plt+0x9a7c>
   1aab0:	mov	r0, r4
   1aab4:	bl	2b9dc <__assert_fail@plt+0x1a884>
   1aab8:	mov	r0, #0
   1aabc:	bl	1102c <exit@plt>
   1aac0:	mov	r0, #1
   1aac4:	bl	1a82c <__assert_fail@plt+0x96d4>
   1aac8:	mov	r3, #0
   1aacc:	str	r3, [sp]
   1aad0:	ldr	r3, [pc, #256]	; 1abd8 <__assert_fail@plt+0x9a80>
   1aad4:	ldr	r2, [pc, #192]	; 1ab9c <__assert_fail@plt+0x9a44>
   1aad8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aadc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aae0:	bl	11014 <getopt_long@plt>
   1aae4:	str	r0, [fp, #-32]	; 0xffffffe0
   1aae8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aaec:	cmn	r3, #1
   1aaf0:	bne	1aa24 <__assert_fail@plt+0x98cc>
   1aaf4:	ldr	r3, [pc, #224]	; 1abdc <__assert_fail@plt+0x9a84>
   1aaf8:	ldr	r3, [r3]
   1aafc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ab00:	cmp	r2, r3
   1ab04:	bgt	1ab18 <__assert_fail@plt+0x99c0>
   1ab08:	bl	1a928 <__assert_fail@plt+0x97d0>
   1ab0c:	mov	r3, r0
   1ab10:	strb	r3, [fp, #-21]	; 0xffffffeb
   1ab14:	b	1ab84 <__assert_fail@plt+0x9a2c>
   1ab18:	mov	r3, #1
   1ab1c:	strb	r3, [fp, #-21]	; 0xffffffeb
   1ab20:	ldr	r3, [pc, #180]	; 1abdc <__assert_fail@plt+0x9a84>
   1ab24:	ldr	r3, [r3]
   1ab28:	str	r3, [fp, #-28]	; 0xffffffe4
   1ab2c:	b	1ab74 <__assert_fail@plt+0x9a1c>
   1ab30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab34:	lsl	r3, r3, #2
   1ab38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ab3c:	add	r3, r2, r3
   1ab40:	ldr	r3, [r3]
   1ab44:	mov	r0, r3
   1ab48:	bl	1a5a0 <__assert_fail@plt+0x9448>
   1ab4c:	mov	r3, r0
   1ab50:	eor	r3, r3, #1
   1ab54:	uxtb	r3, r3
   1ab58:	cmp	r3, #0
   1ab5c:	beq	1ab68 <__assert_fail@plt+0x9a10>
   1ab60:	mov	r3, #0
   1ab64:	strb	r3, [fp, #-21]	; 0xffffffeb
   1ab68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab6c:	add	r3, r3, #1
   1ab70:	str	r3, [fp, #-28]	; 0xffffffe4
   1ab74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ab78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab7c:	cmp	r2, r3
   1ab80:	blt	1ab30 <__assert_fail@plt+0x99d8>
   1ab84:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1ab88:	eor	r3, r3, #1
   1ab8c:	uxtb	r3, r3
   1ab90:	mov	r0, r3
   1ab94:	sub	sp, fp, #16
   1ab98:	pop	{r4, r5, r6, fp, pc}
   1ab9c:	andeq	r0, r3, r8, ror r4
   1aba0:			; <UNDEFINED> instruction: 0x000338bc
   1aba4:	muleq	r3, r0, r4
   1aba8:	andeq	sl, r1, r4, asr #24
   1abac:	andeq	r9, r1, r0, ror pc
   1abb0:	muleq	r4, r4, r1
   1abb4:	andeq	r5, r4, ip, lsl #3
   1abb8:	andeq	r5, r4, ip, lsl r1
   1abbc:	ldrdeq	r3, [r3], -r4
   1abc0:	andeq	r3, r3, r8, ror #17
   1abc4:	strdeq	r3, [r3], -ip
   1abc8:	andeq	r3, r3, ip, lsl #18
   1abcc:	andeq	r3, r3, ip, lsl r9
   1abd0:	andeq	r0, r3, r0, asr #7
   1abd4:			; <UNDEFINED> instruction: 0x000338b0
   1abd8:	andeq	r0, r3, r4, asr #10
   1abdc:	andeq	r5, r4, r8, ror r1
   1abe0:	push	{fp}		; (str fp, [sp, #-4]!)
   1abe4:	add	fp, sp, #0
   1abe8:	sub	sp, sp, #12
   1abec:	str	r0, [fp, #-8]
   1abf0:	ldr	r2, [pc, #20]	; 1ac0c <__assert_fail@plt+0x9ab4>
   1abf4:	ldr	r3, [fp, #-8]
   1abf8:	str	r3, [r2]
   1abfc:	nop			; (mov r0, r0)
   1ac00:	add	sp, fp, #0
   1ac04:	pop	{fp}		; (ldr fp, [sp], #4)
   1ac08:	bx	lr
   1ac0c:	andeq	r5, r4, r0, lsr #3
   1ac10:	push	{fp}		; (str fp, [sp, #-4]!)
   1ac14:	add	fp, sp, #0
   1ac18:	sub	sp, sp, #12
   1ac1c:	mov	r3, r0
   1ac20:	strb	r3, [fp, #-5]
   1ac24:	ldr	r2, [pc, #20]	; 1ac40 <__assert_fail@plt+0x9ae8>
   1ac28:	ldrb	r3, [fp, #-5]
   1ac2c:	strb	r3, [r2]
   1ac30:	nop			; (mov r0, r0)
   1ac34:	add	sp, fp, #0
   1ac38:	pop	{fp}		; (ldr fp, [sp], #4)
   1ac3c:	bx	lr
   1ac40:	andeq	r5, r4, r4, lsr #3
   1ac44:	push	{r4, fp, lr}
   1ac48:	add	fp, sp, #8
   1ac4c:	sub	sp, sp, #20
   1ac50:	ldr	r3, [pc, #256]	; 1ad58 <__assert_fail@plt+0x9c00>
   1ac54:	ldr	r3, [r3]
   1ac58:	mov	r0, r3
   1ac5c:	bl	2ca84 <__assert_fail@plt+0x1b92c>
   1ac60:	mov	r3, r0
   1ac64:	cmp	r3, #0
   1ac68:	beq	1ad20 <__assert_fail@plt+0x9bc8>
   1ac6c:	ldr	r3, [pc, #232]	; 1ad5c <__assert_fail@plt+0x9c04>
   1ac70:	ldrb	r3, [r3]
   1ac74:	eor	r3, r3, #1
   1ac78:	uxtb	r3, r3
   1ac7c:	cmp	r3, #0
   1ac80:	bne	1ac98 <__assert_fail@plt+0x9b40>
   1ac84:	bl	11074 <__errno_location@plt>
   1ac88:	mov	r3, r0
   1ac8c:	ldr	r3, [r3]
   1ac90:	cmp	r3, #32
   1ac94:	beq	1ad20 <__assert_fail@plt+0x9bc8>
   1ac98:	ldr	r0, [pc, #192]	; 1ad60 <__assert_fail@plt+0x9c08>
   1ac9c:	bl	11044 <gettext@plt>
   1aca0:	str	r0, [fp, #-16]
   1aca4:	ldr	r3, [pc, #184]	; 1ad64 <__assert_fail@plt+0x9c0c>
   1aca8:	ldr	r3, [r3]
   1acac:	cmp	r3, #0
   1acb0:	beq	1acf4 <__assert_fail@plt+0x9b9c>
   1acb4:	bl	11074 <__errno_location@plt>
   1acb8:	mov	r3, r0
   1acbc:	ldr	r4, [r3]
   1acc0:	ldr	r3, [pc, #156]	; 1ad64 <__assert_fail@plt+0x9c0c>
   1acc4:	ldr	r3, [r3]
   1acc8:	mov	r0, r3
   1accc:	bl	2a690 <__assert_fail@plt+0x19538>
   1acd0:	mov	r2, r0
   1acd4:	ldr	r3, [fp, #-16]
   1acd8:	str	r3, [sp]
   1acdc:	mov	r3, r2
   1ace0:	ldr	r2, [pc, #128]	; 1ad68 <__assert_fail@plt+0x9c10>
   1ace4:	mov	r1, r4
   1ace8:	mov	r0, #0
   1acec:	bl	10fcc <error@plt>
   1acf0:	b	1ad10 <__assert_fail@plt+0x9bb8>
   1acf4:	bl	11074 <__errno_location@plt>
   1acf8:	mov	r3, r0
   1acfc:	ldr	r1, [r3]
   1ad00:	ldr	r3, [fp, #-16]
   1ad04:	ldr	r2, [pc, #96]	; 1ad6c <__assert_fail@plt+0x9c14>
   1ad08:	mov	r0, #0
   1ad0c:	bl	10fcc <error@plt>
   1ad10:	ldr	r3, [pc, #88]	; 1ad70 <__assert_fail@plt+0x9c18>
   1ad14:	ldr	r3, [r3]
   1ad18:	mov	r0, r3
   1ad1c:	bl	10ef4 <_exit@plt>
   1ad20:	ldr	r3, [pc, #76]	; 1ad74 <__assert_fail@plt+0x9c1c>
   1ad24:	ldr	r3, [r3]
   1ad28:	mov	r0, r3
   1ad2c:	bl	2ca84 <__assert_fail@plt+0x1b92c>
   1ad30:	mov	r3, r0
   1ad34:	cmp	r3, #0
   1ad38:	beq	1ad4c <__assert_fail@plt+0x9bf4>
   1ad3c:	ldr	r3, [pc, #44]	; 1ad70 <__assert_fail@plt+0x9c18>
   1ad40:	ldr	r3, [r3]
   1ad44:	mov	r0, r3
   1ad48:	bl	10ef4 <_exit@plt>
   1ad4c:	nop			; (mov r0, r0)
   1ad50:	sub	sp, fp, #8
   1ad54:	pop	{r4, fp, pc}
   1ad58:	andeq	r5, r4, ip, lsl #3
   1ad5c:	andeq	r5, r4, r4, lsr #3
   1ad60:	andeq	r3, r3, r0, lsr #19
   1ad64:	andeq	r5, r4, r0, lsr #3
   1ad68:	andeq	r3, r3, ip, lsr #19
   1ad6c:			; <UNDEFINED> instruction: 0x000339b4
   1ad70:	andeq	r5, r4, r0, lsr #2
   1ad74:	andeq	r5, r4, r0, lsl #3
   1ad78:	push	{r4, fp, lr}
   1ad7c:	add	fp, sp, #8
   1ad80:	sub	sp, sp, #20
   1ad84:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad88:	bl	11074 <__errno_location@plt>
   1ad8c:	mov	r3, r0
   1ad90:	ldr	r3, [r3]
   1ad94:	str	r3, [fp, #-20]	; 0xffffffec
   1ad98:	bl	11074 <__errno_location@plt>
   1ad9c:	mov	r3, r0
   1ada0:	ldr	r3, [r3]
   1ada4:	str	r3, [fp, #-16]
   1ada8:	bl	11074 <__errno_location@plt>
   1adac:	mov	r2, r0
   1adb0:	mov	r3, #0
   1adb4:	str	r3, [r2]
   1adb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adbc:	bl	10ee8 <free@plt>
   1adc0:	bl	11074 <__errno_location@plt>
   1adc4:	mov	r4, r0
   1adc8:	bl	11074 <__errno_location@plt>
   1adcc:	mov	r3, r0
   1add0:	ldr	r3, [r3]
   1add4:	cmp	r3, #0
   1add8:	moveq	r3, #1
   1addc:	movne	r3, #0
   1ade0:	uxtb	r3, r3
   1ade4:	lsl	r3, r3, #2
   1ade8:	sub	r2, fp, #12
   1adec:	add	r3, r2, r3
   1adf0:	ldr	r3, [r3, #-8]
   1adf4:	str	r3, [r4]
   1adf8:	nop			; (mov r0, r0)
   1adfc:	sub	sp, fp, #8
   1ae00:	pop	{r4, fp, pc}
   1ae04:	push	{fp, lr}
   1ae08:	add	fp, sp, #4
   1ae0c:	sub	sp, sp, #32
   1ae10:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae14:	str	r1, [fp, #-28]	; 0xffffffe4
   1ae18:	str	r2, [fp, #-32]	; 0xffffffe0
   1ae1c:	mov	r3, #0
   1ae20:	str	r3, [fp, #-8]
   1ae24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae28:	str	r3, [fp, #-12]
   1ae2c:	b	1aea0 <__assert_fail@plt+0x9d48>
   1ae30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ae34:	ldr	r1, [fp, #-12]
   1ae38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae3c:	bl	2ae78 <__assert_fail@plt+0x19d20>
   1ae40:	str	r0, [fp, #-16]
   1ae44:	ldr	r3, [fp, #-16]
   1ae48:	cmn	r3, #1
   1ae4c:	beq	1aeb0 <__assert_fail@plt+0x9d58>
   1ae50:	ldr	r3, [fp, #-16]
   1ae54:	cmp	r3, #0
   1ae58:	bne	1ae70 <__assert_fail@plt+0x9d18>
   1ae5c:	bl	11074 <__errno_location@plt>
   1ae60:	mov	r2, r0
   1ae64:	mov	r3, #28
   1ae68:	str	r3, [r2]
   1ae6c:	b	1aeb4 <__assert_fail@plt+0x9d5c>
   1ae70:	ldr	r2, [fp, #-8]
   1ae74:	ldr	r3, [fp, #-16]
   1ae78:	add	r3, r2, r3
   1ae7c:	str	r3, [fp, #-8]
   1ae80:	ldr	r2, [fp, #-12]
   1ae84:	ldr	r3, [fp, #-16]
   1ae88:	add	r3, r2, r3
   1ae8c:	str	r3, [fp, #-12]
   1ae90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ae94:	ldr	r3, [fp, #-16]
   1ae98:	sub	r3, r2, r3
   1ae9c:	str	r3, [fp, #-32]	; 0xffffffe0
   1aea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aea4:	cmp	r3, #0
   1aea8:	bne	1ae30 <__assert_fail@plt+0x9cd8>
   1aeac:	b	1aeb4 <__assert_fail@plt+0x9d5c>
   1aeb0:	nop			; (mov r0, r0)
   1aeb4:	ldr	r3, [fp, #-8]
   1aeb8:	mov	r0, r3
   1aebc:	sub	sp, fp, #4
   1aec0:	pop	{fp, pc}
   1aec4:	push	{fp, lr}
   1aec8:	add	fp, sp, #4
   1aecc:	sub	sp, sp, #24
   1aed0:	strd	r0, [fp, #-20]	; 0xffffffec
   1aed4:	str	r2, [fp, #-24]	; 0xffffffe8
   1aed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aedc:	add	r3, r3, #20
   1aee0:	str	r3, [fp, #-8]
   1aee4:	ldr	r3, [fp, #-8]
   1aee8:	mov	r2, #0
   1aeec:	strb	r2, [r3]
   1aef0:	ldr	r3, [fp, #-8]
   1aef4:	sub	r3, r3, #1
   1aef8:	str	r3, [fp, #-8]
   1aefc:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1af00:	mov	r2, #10
   1af04:	mov	r3, #0
   1af08:	bl	3017c <__assert_fail@plt+0x1f024>
   1af0c:	uxtb	r3, r2
   1af10:	add	r3, r3, #48	; 0x30
   1af14:	uxtb	r2, r3
   1af18:	ldr	r3, [fp, #-8]
   1af1c:	strb	r2, [r3]
   1af20:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1af24:	mov	r2, #10
   1af28:	mov	r3, #0
   1af2c:	bl	3017c <__assert_fail@plt+0x1f024>
   1af30:	mov	r2, r0
   1af34:	mov	r3, r1
   1af38:	strd	r2, [fp, #-20]	; 0xffffffec
   1af3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1af40:	orrs	r3, r2, r3
   1af44:	bne	1aef0 <__assert_fail@plt+0x9d98>
   1af48:	ldr	r3, [fp, #-8]
   1af4c:	mov	r0, r3
   1af50:	sub	sp, fp, #4
   1af54:	pop	{fp, pc}
   1af58:	push	{fp, lr}
   1af5c:	add	fp, sp, #4
   1af60:	sub	sp, sp, #8
   1af64:	str	r0, [fp, #-8]
   1af68:	ldr	r3, [pc, #20]	; 1af84 <__assert_fail@plt+0x9e2c>
   1af6c:	ldr	r3, [r3]
   1af70:	ldr	r2, [fp, #-8]
   1af74:	ldr	r1, [pc, #12]	; 1af88 <__assert_fail@plt+0x9e30>
   1af78:	mov	r0, r3
   1af7c:	bl	11068 <fprintf@plt>
   1af80:	bl	11140 <abort@plt>
   1af84:	andeq	r5, r4, r0, lsl #3
   1af88:			; <UNDEFINED> instruction: 0x000339bc
   1af8c:	push	{fp, lr}
   1af90:	add	fp, sp, #4
   1af94:	sub	sp, sp, #16
   1af98:	str	r0, [fp, #-16]
   1af9c:	ldr	r3, [fp, #-16]
   1afa0:	cmp	r3, #0
   1afa4:	bne	1afbc <__assert_fail@plt+0x9e64>
   1afa8:	ldr	r3, [pc, #64]	; 1aff0 <__assert_fail@plt+0x9e98>
   1afac:	ldr	r2, [pc, #64]	; 1aff4 <__assert_fail@plt+0x9e9c>
   1afb0:	ldr	r1, [pc, #64]	; 1aff8 <__assert_fail@plt+0x9ea0>
   1afb4:	ldr	r0, [pc, #64]	; 1affc <__assert_fail@plt+0x9ea4>
   1afb8:	bl	11158 <__assert_fail@plt>
   1afbc:	ldr	r0, [fp, #-16]
   1afc0:	bl	2c874 <__assert_fail@plt+0x1b71c>
   1afc4:	mov	r3, r0
   1afc8:	str	r3, [fp, #-8]
   1afcc:	ldr	r3, [fp, #-8]
   1afd0:	cmp	r3, #0
   1afd4:	bne	1afe0 <__assert_fail@plt+0x9e88>
   1afd8:	ldr	r0, [pc, #32]	; 1b000 <__assert_fail@plt+0x9ea8>
   1afdc:	bl	1af58 <__assert_fail@plt+0x9e00>
   1afe0:	ldr	r3, [fp, #-8]
   1afe4:	mov	r0, r3
   1afe8:	sub	sp, fp, #4
   1afec:	pop	{fp, pc}
   1aff0:	ldrdeq	r3, [r3], -r0
   1aff4:	andeq	r0, r0, r3, lsr #2
   1aff8:	andeq	r3, r3, r0, asr #19
   1affc:	ldrdeq	r3, [r3], -r0
   1b000:	ldrdeq	r3, [r3], -ip
   1b004:	push	{fp, lr}
   1b008:	add	fp, sp, #4
   1b00c:	sub	sp, sp, #24
   1b010:	str	r0, [fp, #-16]
   1b014:	str	r1, [fp, #-20]	; 0xffffffec
   1b018:	str	r2, [fp, #-24]	; 0xffffffe8
   1b01c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b020:	ldr	r0, [fp, #-16]
   1b024:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   1b028:	str	r0, [fp, #-8]
   1b02c:	ldr	r3, [fp, #-8]
   1b030:	cmp	r3, #0
   1b034:	bne	1b040 <__assert_fail@plt+0x9ee8>
   1b038:	ldr	r0, [pc, #16]	; 1b050 <__assert_fail@plt+0x9ef8>
   1b03c:	bl	1af58 <__assert_fail@plt+0x9e00>
   1b040:	ldr	r3, [fp, #-8]
   1b044:	mov	r0, r3
   1b048:	sub	sp, fp, #4
   1b04c:	pop	{fp, pc}
   1b050:	andeq	r3, r3, ip, lsl #20
   1b054:	push	{fp, lr}
   1b058:	add	fp, sp, #4
   1b05c:	sub	sp, sp, #8
   1b060:	str	r0, [fp, #-8]
   1b064:	str	r1, [fp, #-12]
   1b068:	ldr	r0, [fp, #-8]
   1b06c:	bl	1ad78 <__assert_fail@plt+0x9c20>
   1b070:	nop			; (mov r0, r0)
   1b074:	sub	sp, fp, #4
   1b078:	pop	{fp, pc}
   1b07c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b080:	add	fp, sp, #0
   1b084:	sub	sp, sp, #20
   1b088:	str	r0, [fp, #-8]
   1b08c:	str	r1, [fp, #-12]
   1b090:	str	r2, [fp, #-16]
   1b094:	ldr	r3, [fp, #-8]
   1b098:	cmp	r3, #0
   1b09c:	beq	1b0b0 <__assert_fail@plt+0x9f58>
   1b0a0:	ldr	r3, [pc, #80]	; 1b0f8 <__assert_fail@plt+0x9fa0>
   1b0a4:	ldr	r2, [r3]
   1b0a8:	ldr	r3, [fp, #-8]
   1b0ac:	str	r2, [r3]
   1b0b0:	ldr	r3, [fp, #-12]
   1b0b4:	cmp	r3, #0
   1b0b8:	beq	1b0cc <__assert_fail@plt+0x9f74>
   1b0bc:	ldr	r3, [pc, #56]	; 1b0fc <__assert_fail@plt+0x9fa4>
   1b0c0:	ldr	r2, [r3]
   1b0c4:	ldr	r3, [fp, #-12]
   1b0c8:	str	r2, [r3]
   1b0cc:	ldr	r3, [fp, #-16]
   1b0d0:	cmp	r3, #0
   1b0d4:	beq	1b0e8 <__assert_fail@plt+0x9f90>
   1b0d8:	ldr	r3, [pc, #32]	; 1b100 <__assert_fail@plt+0x9fa8>
   1b0dc:	ldr	r2, [r3]
   1b0e0:	ldr	r3, [fp, #-16]
   1b0e4:	str	r2, [r3]
   1b0e8:	nop			; (mov r0, r0)
   1b0ec:	add	sp, fp, #0
   1b0f0:	pop	{fp}		; (ldr fp, [sp], #4)
   1b0f4:	bx	lr
   1b0f8:	andeq	r5, r4, r4, lsr #2
   1b0fc:	andeq	r5, r4, r8, lsr #2
   1b100:	andeq	r5, r4, ip, lsr #2
   1b104:	push	{fp}		; (str fp, [sp, #-4]!)
   1b108:	add	fp, sp, #0
   1b10c:	sub	sp, sp, #20
   1b110:	str	r0, [fp, #-8]
   1b114:	str	r1, [fp, #-12]
   1b118:	str	r2, [fp, #-16]
   1b11c:	ldr	r3, [fp, #-8]
   1b120:	cmp	r3, #0
   1b124:	bne	1b130 <__assert_fail@plt+0x9fd8>
   1b128:	ldr	r3, [pc, #92]	; 1b18c <__assert_fail@plt+0xa034>
   1b12c:	str	r3, [fp, #-8]
   1b130:	ldr	r3, [fp, #-12]
   1b134:	cmp	r3, #0
   1b138:	bne	1b144 <__assert_fail@plt+0x9fec>
   1b13c:	ldr	r3, [pc, #76]	; 1b190 <__assert_fail@plt+0xa038>
   1b140:	str	r3, [fp, #-12]
   1b144:	ldr	r3, [fp, #-16]
   1b148:	cmp	r3, #0
   1b14c:	bne	1b158 <__assert_fail@plt+0xa000>
   1b150:	ldr	r3, [pc, #60]	; 1b194 <__assert_fail@plt+0xa03c>
   1b154:	str	r3, [fp, #-16]
   1b158:	ldr	r2, [pc, #56]	; 1b198 <__assert_fail@plt+0xa040>
   1b15c:	ldr	r3, [fp, #-8]
   1b160:	str	r3, [r2]
   1b164:	ldr	r2, [pc, #48]	; 1b19c <__assert_fail@plt+0xa044>
   1b168:	ldr	r3, [fp, #-12]
   1b16c:	str	r3, [r2]
   1b170:	ldr	r2, [pc, #40]	; 1b1a0 <__assert_fail@plt+0xa048>
   1b174:	ldr	r3, [fp, #-16]
   1b178:	str	r3, [r2]
   1b17c:	nop			; (mov r0, r0)
   1b180:	add	sp, fp, #0
   1b184:	pop	{fp}		; (ldr fp, [sp], #4)
   1b188:	bx	lr
   1b18c:	andeq	sl, r1, ip, lsl #31
   1b190:	andeq	fp, r1, r4
   1b194:	andeq	fp, r1, r4, asr r0
   1b198:	andeq	r5, r4, r4, lsr #2
   1b19c:	andeq	r5, r4, r8, lsr #2
   1b1a0:	andeq	r5, r4, ip, lsr #2
   1b1a4:	push	{fp, lr}
   1b1a8:	add	fp, sp, #4
   1b1ac:	sub	sp, sp, #8
   1b1b0:	str	r0, [fp, #-8]
   1b1b4:	ldr	r3, [pc, #32]	; 1b1dc <__assert_fail@plt+0xa084>
   1b1b8:	ldr	r3, [r3]
   1b1bc:	ldr	r2, [fp, #-8]
   1b1c0:	lsl	r2, r2, #2
   1b1c4:	mov	r0, r2
   1b1c8:	blx	r3
   1b1cc:	mov	r3, r0
   1b1d0:	mov	r0, r3
   1b1d4:	sub	sp, fp, #4
   1b1d8:	pop	{fp, pc}
   1b1dc:	andeq	r5, r4, r4, lsr #2
   1b1e0:	push	{fp, lr}
   1b1e4:	add	fp, sp, #4
   1b1e8:	sub	sp, sp, #16
   1b1ec:	str	r0, [fp, #-8]
   1b1f0:	str	r1, [fp, #-12]
   1b1f4:	str	r2, [fp, #-16]
   1b1f8:	ldr	r3, [fp, #-16]
   1b1fc:	cmp	r3, #0
   1b200:	bgt	1b218 <__assert_fail@plt+0xa0c0>
   1b204:	ldr	r3, [pc, #60]	; 1b248 <__assert_fail@plt+0xa0f0>
   1b208:	mov	r2, #368	; 0x170
   1b20c:	ldr	r1, [pc, #56]	; 1b24c <__assert_fail@plt+0xa0f4>
   1b210:	ldr	r0, [pc, #56]	; 1b250 <__assert_fail@plt+0xa0f8>
   1b214:	bl	11158 <__assert_fail@plt>
   1b218:	ldr	r3, [pc, #52]	; 1b254 <__assert_fail@plt+0xa0fc>
   1b21c:	ldr	r3, [r3]
   1b220:	ldr	r2, [fp, #-12]
   1b224:	lsl	r1, r2, #2
   1b228:	ldr	r2, [fp, #-16]
   1b22c:	lsl	r2, r2, #2
   1b230:	ldr	r0, [fp, #-8]
   1b234:	blx	r3
   1b238:	mov	r3, r0
   1b23c:	mov	r0, r3
   1b240:	sub	sp, fp, #4
   1b244:	pop	{fp, pc}
   1b248:	andeq	r3, r3, r4, ror #31
   1b24c:	andeq	r3, r3, r0, asr #19
   1b250:	ldrdeq	r3, [r3], -r0
   1b254:	andeq	r5, r4, r8, lsr #2
   1b258:	push	{fp, lr}
   1b25c:	add	fp, sp, #4
   1b260:	sub	sp, sp, #8
   1b264:	str	r0, [fp, #-8]
   1b268:	str	r1, [fp, #-12]
   1b26c:	ldr	r3, [pc, #32]	; 1b294 <__assert_fail@plt+0xa13c>
   1b270:	ldr	r3, [r3]
   1b274:	ldr	r2, [fp, #-12]
   1b278:	lsl	r2, r2, #2
   1b27c:	mov	r1, r2
   1b280:	ldr	r0, [fp, #-8]
   1b284:	blx	r3
   1b288:	nop			; (mov r0, r0)
   1b28c:	sub	sp, fp, #4
   1b290:	pop	{fp, pc}
   1b294:	andeq	r5, r4, ip, lsr #2
   1b298:	push	{fp}		; (str fp, [sp, #-4]!)
   1b29c:	add	fp, sp, #0
   1b2a0:	sub	sp, sp, #28
   1b2a4:	str	r0, [fp, #-16]
   1b2a8:	str	r1, [fp, #-20]	; 0xffffffec
   1b2ac:	str	r2, [fp, #-24]	; 0xffffffe8
   1b2b0:	mov	r3, #0
   1b2b4:	str	r3, [fp, #-8]
   1b2b8:	b	1b2f0 <__assert_fail@plt+0xa198>
   1b2bc:	ldr	r3, [fp, #-8]
   1b2c0:	lsl	r3, r3, #2
   1b2c4:	ldr	r2, [fp, #-16]
   1b2c8:	add	r3, r2, r3
   1b2cc:	ldr	r2, [fp, #-8]
   1b2d0:	lsl	r2, r2, #2
   1b2d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b2d8:	add	r2, r1, r2
   1b2dc:	ldr	r2, [r2]
   1b2e0:	str	r2, [r3]
   1b2e4:	ldr	r3, [fp, #-8]
   1b2e8:	add	r3, r3, #1
   1b2ec:	str	r3, [fp, #-8]
   1b2f0:	ldr	r2, [fp, #-8]
   1b2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2f8:	cmp	r2, r3
   1b2fc:	blt	1b2bc <__assert_fail@plt+0xa164>
   1b300:	nop			; (mov r0, r0)
   1b304:	add	sp, fp, #0
   1b308:	pop	{fp}		; (ldr fp, [sp], #4)
   1b30c:	bx	lr
   1b310:	push	{fp}		; (str fp, [sp, #-4]!)
   1b314:	add	fp, sp, #0
   1b318:	sub	sp, sp, #20
   1b31c:	str	r0, [fp, #-8]
   1b320:	str	r1, [fp, #-12]
   1b324:	str	r2, [fp, #-16]
   1b328:	b	1b354 <__assert_fail@plt+0xa1fc>
   1b32c:	ldr	r3, [fp, #-16]
   1b330:	lsl	r3, r3, #2
   1b334:	ldr	r2, [fp, #-8]
   1b338:	add	r3, r2, r3
   1b33c:	ldr	r2, [fp, #-16]
   1b340:	lsl	r2, r2, #2
   1b344:	ldr	r1, [fp, #-12]
   1b348:	add	r2, r1, r2
   1b34c:	ldr	r2, [r2]
   1b350:	str	r2, [r3]
   1b354:	ldr	r3, [fp, #-16]
   1b358:	sub	r3, r3, #1
   1b35c:	str	r3, [fp, #-16]
   1b360:	ldr	r3, [fp, #-16]
   1b364:	cmp	r3, #0
   1b368:	bge	1b32c <__assert_fail@plt+0xa1d4>
   1b36c:	nop			; (mov r0, r0)
   1b370:	add	sp, fp, #0
   1b374:	pop	{fp}		; (ldr fp, [sp], #4)
   1b378:	bx	lr
   1b37c:	push	{fp}		; (str fp, [sp, #-4]!)
   1b380:	add	fp, sp, #0
   1b384:	sub	sp, sp, #20
   1b388:	str	r0, [fp, #-8]
   1b38c:	str	r1, [fp, #-12]
   1b390:	str	r2, [fp, #-16]
   1b394:	b	1b408 <__assert_fail@plt+0xa2b0>
   1b398:	ldr	r3, [fp, #-16]
   1b39c:	lsl	r3, r3, #2
   1b3a0:	ldr	r2, [fp, #-8]
   1b3a4:	add	r3, r2, r3
   1b3a8:	ldr	r2, [r3]
   1b3ac:	ldr	r3, [fp, #-16]
   1b3b0:	lsl	r3, r3, #2
   1b3b4:	ldr	r1, [fp, #-12]
   1b3b8:	add	r3, r1, r3
   1b3bc:	ldr	r3, [r3]
   1b3c0:	cmp	r2, r3
   1b3c4:	beq	1b408 <__assert_fail@plt+0xa2b0>
   1b3c8:	ldr	r3, [fp, #-16]
   1b3cc:	lsl	r3, r3, #2
   1b3d0:	ldr	r2, [fp, #-8]
   1b3d4:	add	r3, r2, r3
   1b3d8:	ldr	r2, [r3]
   1b3dc:	ldr	r3, [fp, #-16]
   1b3e0:	lsl	r3, r3, #2
   1b3e4:	ldr	r1, [fp, #-12]
   1b3e8:	add	r3, r1, r3
   1b3ec:	ldr	r3, [r3]
   1b3f0:	cmp	r2, r3
   1b3f4:	bls	1b400 <__assert_fail@plt+0xa2a8>
   1b3f8:	mov	r3, #1
   1b3fc:	b	1b424 <__assert_fail@plt+0xa2cc>
   1b400:	mvn	r3, #0
   1b404:	b	1b424 <__assert_fail@plt+0xa2cc>
   1b408:	ldr	r3, [fp, #-16]
   1b40c:	sub	r3, r3, #1
   1b410:	str	r3, [fp, #-16]
   1b414:	ldr	r3, [fp, #-16]
   1b418:	cmp	r3, #0
   1b41c:	bge	1b398 <__assert_fail@plt+0xa240>
   1b420:	mov	r3, #0
   1b424:	mov	r0, r3
   1b428:	add	sp, fp, #0
   1b42c:	pop	{fp}		; (ldr fp, [sp], #4)
   1b430:	bx	lr
   1b434:	push	{fp, lr}
   1b438:	add	fp, sp, #4
   1b43c:	sub	sp, sp, #16
   1b440:	str	r0, [fp, #-8]
   1b444:	str	r1, [fp, #-12]
   1b448:	str	r2, [fp, #-16]
   1b44c:	str	r3, [fp, #-20]	; 0xffffffec
   1b450:	ldr	r2, [fp, #-12]
   1b454:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b458:	cmp	r2, r3
   1b45c:	beq	1b480 <__assert_fail@plt+0xa328>
   1b460:	ldr	r2, [fp, #-12]
   1b464:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b468:	cmp	r2, r3
   1b46c:	bge	1b478 <__assert_fail@plt+0xa320>
   1b470:	mvn	r3, #0
   1b474:	b	1b494 <__assert_fail@plt+0xa33c>
   1b478:	mov	r3, #1
   1b47c:	b	1b494 <__assert_fail@plt+0xa33c>
   1b480:	ldr	r2, [fp, #-12]
   1b484:	ldr	r1, [fp, #-16]
   1b488:	ldr	r0, [fp, #-8]
   1b48c:	bl	1b37c <__assert_fail@plt+0xa224>
   1b490:	mov	r3, r0
   1b494:	mov	r0, r3
   1b498:	sub	sp, fp, #4
   1b49c:	pop	{fp, pc}
   1b4a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1b4a4:	add	fp, sp, #0
   1b4a8:	sub	sp, sp, #12
   1b4ac:	str	r0, [fp, #-8]
   1b4b0:	str	r1, [fp, #-12]
   1b4b4:	b	1b4c4 <__assert_fail@plt+0xa36c>
   1b4b8:	ldr	r3, [fp, #-12]
   1b4bc:	sub	r3, r3, #1
   1b4c0:	str	r3, [fp, #-12]
   1b4c4:	ldr	r3, [fp, #-12]
   1b4c8:	cmp	r3, #0
   1b4cc:	ble	1b4f0 <__assert_fail@plt+0xa398>
   1b4d0:	ldr	r3, [fp, #-12]
   1b4d4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1b4d8:	lsl	r3, r3, #2
   1b4dc:	ldr	r2, [fp, #-8]
   1b4e0:	add	r3, r2, r3
   1b4e4:	ldr	r3, [r3]
   1b4e8:	cmp	r3, #0
   1b4ec:	beq	1b4b8 <__assert_fail@plt+0xa360>
   1b4f0:	ldr	r3, [fp, #-12]
   1b4f4:	mov	r0, r3
   1b4f8:	add	sp, fp, #0
   1b4fc:	pop	{fp}		; (ldr fp, [sp], #4)
   1b500:	bx	lr
   1b504:	push	{fp, lr}
   1b508:	add	fp, sp, #4
   1b50c:	sub	sp, sp, #8
   1b510:	str	r0, [fp, #-8]
   1b514:	str	r1, [fp, #-12]
   1b518:	ldr	r1, [fp, #-12]
   1b51c:	ldr	r0, [fp, #-8]
   1b520:	bl	1b4a0 <__assert_fail@plt+0xa348>
   1b524:	mov	r3, r0
   1b528:	cmp	r3, #0
   1b52c:	moveq	r3, #1
   1b530:	movne	r3, #0
   1b534:	uxtb	r3, r3
   1b538:	mov	r0, r3
   1b53c:	sub	sp, fp, #4
   1b540:	pop	{fp, pc}
   1b544:	push	{fp}		; (str fp, [sp, #-4]!)
   1b548:	add	fp, sp, #0
   1b54c:	sub	sp, sp, #12
   1b550:	str	r0, [fp, #-8]
   1b554:	str	r1, [fp, #-12]
   1b558:	b	1b574 <__assert_fail@plt+0xa41c>
   1b55c:	ldr	r3, [fp, #-12]
   1b560:	lsl	r3, r3, #2
   1b564:	ldr	r2, [fp, #-8]
   1b568:	add	r3, r2, r3
   1b56c:	mov	r2, #0
   1b570:	str	r2, [r3]
   1b574:	ldr	r3, [fp, #-12]
   1b578:	sub	r3, r3, #1
   1b57c:	str	r3, [fp, #-12]
   1b580:	ldr	r3, [fp, #-12]
   1b584:	cmp	r3, #0
   1b588:	bge	1b55c <__assert_fail@plt+0xa404>
   1b58c:	nop			; (mov r0, r0)
   1b590:	add	sp, fp, #0
   1b594:	pop	{fp}		; (ldr fp, [sp], #4)
   1b598:	bx	lr
   1b59c:	push	{fp, lr}
   1b5a0:	add	fp, sp, #4
   1b5a4:	sub	sp, sp, #24
   1b5a8:	str	r0, [fp, #-16]
   1b5ac:	str	r1, [fp, #-20]	; 0xffffffec
   1b5b0:	str	r2, [fp, #-24]	; 0xffffffe8
   1b5b4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b5b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5bc:	cmp	r3, #0
   1b5c0:	bgt	1b5d8 <__assert_fail@plt+0xa480>
   1b5c4:	ldr	r3, [pc, #148]	; 1b660 <__assert_fail@plt+0xa508>
   1b5c8:	ldr	r2, [pc, #148]	; 1b664 <__assert_fail@plt+0xa50c>
   1b5cc:	ldr	r1, [pc, #148]	; 1b668 <__assert_fail@plt+0xa510>
   1b5d0:	ldr	r0, [pc, #148]	; 1b66c <__assert_fail@plt+0xa514>
   1b5d4:	bl	11158 <__assert_fail@plt>
   1b5d8:	mov	r3, #0
   1b5dc:	str	r3, [fp, #-8]
   1b5e0:	ldr	r3, [fp, #-8]
   1b5e4:	lsl	r3, r3, #2
   1b5e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b5ec:	add	r3, r2, r3
   1b5f0:	ldr	r2, [r3]
   1b5f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b5f8:	add	r3, r2, r3
   1b5fc:	str	r3, [fp, #-12]
   1b600:	ldr	r2, [fp, #-12]
   1b604:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b608:	cmp	r2, r3
   1b60c:	movcc	r3, #1
   1b610:	movcs	r3, #0
   1b614:	uxtb	r3, r3
   1b618:	str	r3, [fp, #-28]	; 0xffffffe4
   1b61c:	ldr	r3, [fp, #-8]
   1b620:	lsl	r3, r3, #2
   1b624:	ldr	r2, [fp, #-16]
   1b628:	add	r3, r2, r3
   1b62c:	ldr	r2, [fp, #-12]
   1b630:	str	r2, [r3]
   1b634:	ldr	r3, [fp, #-8]
   1b638:	add	r3, r3, #1
   1b63c:	str	r3, [fp, #-8]
   1b640:	ldr	r2, [fp, #-8]
   1b644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b648:	cmp	r2, r3
   1b64c:	blt	1b5e0 <__assert_fail@plt+0xa488>
   1b650:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b654:	mov	r0, r3
   1b658:	sub	sp, fp, #4
   1b65c:	pop	{fp, pc}
   1b660:	strdeq	r3, [r3], -r8
   1b664:			; <UNDEFINED> instruction: 0x000001ba
   1b668:	andeq	r3, r3, r0, asr #19
   1b66c:	andeq	r3, r3, ip, lsr sl
   1b670:	push	{fp}		; (str fp, [sp, #-4]!)
   1b674:	add	fp, sp, #0
   1b678:	sub	sp, sp, #44	; 0x2c
   1b67c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b680:	str	r1, [fp, #-36]	; 0xffffffdc
   1b684:	str	r2, [fp, #-40]	; 0xffffffd8
   1b688:	str	r3, [fp, #-44]	; 0xffffffd4
   1b68c:	mov	r3, #0
   1b690:	str	r3, [fp, #-8]
   1b694:	mov	r3, #0
   1b698:	str	r3, [fp, #-12]
   1b69c:	b	1b758 <__assert_fail@plt+0xa600>
   1b6a0:	ldr	r3, [fp, #-8]
   1b6a4:	lsl	r3, r3, #2
   1b6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b6ac:	add	r3, r2, r3
   1b6b0:	ldr	r3, [r3]
   1b6b4:	str	r3, [fp, #-16]
   1b6b8:	ldr	r3, [fp, #-8]
   1b6bc:	lsl	r3, r3, #2
   1b6c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b6c4:	add	r3, r2, r3
   1b6c8:	ldr	r3, [r3]
   1b6cc:	str	r3, [fp, #-20]	; 0xffffffec
   1b6d0:	ldr	r2, [fp, #-16]
   1b6d4:	ldr	r3, [fp, #-12]
   1b6d8:	add	r3, r2, r3
   1b6dc:	str	r3, [fp, #-24]	; 0xffffffe8
   1b6e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b6e4:	ldr	r3, [fp, #-12]
   1b6e8:	cmp	r2, r3
   1b6ec:	movcc	r3, #1
   1b6f0:	movcs	r3, #0
   1b6f4:	uxtb	r3, r3
   1b6f8:	str	r3, [fp, #-12]
   1b6fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b700:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b704:	add	r3, r2, r3
   1b708:	str	r3, [fp, #-24]	; 0xffffffe8
   1b70c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b714:	cmp	r2, r3
   1b718:	movcc	r3, #1
   1b71c:	movcs	r3, #0
   1b720:	uxtb	r3, r3
   1b724:	mov	r2, r3
   1b728:	ldr	r3, [fp, #-12]
   1b72c:	add	r3, r3, r2
   1b730:	str	r3, [fp, #-12]
   1b734:	ldr	r3, [fp, #-8]
   1b738:	lsl	r3, r3, #2
   1b73c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b740:	add	r3, r2, r3
   1b744:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b748:	str	r2, [r3]
   1b74c:	ldr	r3, [fp, #-8]
   1b750:	add	r3, r3, #1
   1b754:	str	r3, [fp, #-8]
   1b758:	ldr	r2, [fp, #-8]
   1b75c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b760:	cmp	r2, r3
   1b764:	blt	1b6a0 <__assert_fail@plt+0xa548>
   1b768:	ldr	r3, [fp, #-12]
   1b76c:	mov	r0, r3
   1b770:	add	sp, fp, #0
   1b774:	pop	{fp}		; (ldr fp, [sp], #4)
   1b778:	bx	lr
   1b77c:	push	{fp, lr}
   1b780:	add	fp, sp, #4
   1b784:	sub	sp, sp, #24
   1b788:	str	r0, [fp, #-16]
   1b78c:	str	r1, [fp, #-20]	; 0xffffffec
   1b790:	str	r2, [fp, #-24]	; 0xffffffe8
   1b794:	str	r3, [fp, #-28]	; 0xffffffe4
   1b798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b79c:	ldr	r3, [fp, #4]
   1b7a0:	cmp	r2, r3
   1b7a4:	bge	1b7bc <__assert_fail@plt+0xa664>
   1b7a8:	ldr	r3, [pc, #124]	; 1b82c <__assert_fail@plt+0xa6d4>
   1b7ac:	mov	r2, #480	; 0x1e0
   1b7b0:	ldr	r1, [pc, #120]	; 1b830 <__assert_fail@plt+0xa6d8>
   1b7b4:	ldr	r0, [pc, #120]	; 1b834 <__assert_fail@plt+0xa6dc>
   1b7b8:	bl	11158 <__assert_fail@plt>
   1b7bc:	ldr	r3, [fp, #4]
   1b7c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b7c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7c8:	ldr	r0, [fp, #-16]
   1b7cc:	bl	1b670 <__assert_fail@plt+0xa518>
   1b7d0:	str	r0, [fp, #-8]
   1b7d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b7d8:	ldr	r3, [fp, #4]
   1b7dc:	cmp	r2, r3
   1b7e0:	ble	1b81c <__assert_fail@plt+0xa6c4>
   1b7e4:	ldr	r3, [fp, #4]
   1b7e8:	lsl	r3, r3, #2
   1b7ec:	ldr	r2, [fp, #-16]
   1b7f0:	add	r0, r2, r3
   1b7f4:	ldr	r3, [fp, #4]
   1b7f8:	lsl	r3, r3, #2
   1b7fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b800:	add	r1, r2, r3
   1b804:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b808:	ldr	r3, [fp, #4]
   1b80c:	sub	r2, r2, r3
   1b810:	ldr	r3, [fp, #-8]
   1b814:	bl	1b59c <__assert_fail@plt+0xa444>
   1b818:	str	r0, [fp, #-8]
   1b81c:	ldr	r3, [fp, #-8]
   1b820:	mov	r0, r3
   1b824:	sub	sp, fp, #4
   1b828:	pop	{fp, pc}
   1b82c:	andeq	r4, r3, r4
   1b830:	andeq	r3, r3, r0, asr #19
   1b834:	andeq	r3, r3, r4, asr #20
   1b838:	push	{fp, lr}
   1b83c:	add	fp, sp, #4
   1b840:	sub	sp, sp, #32
   1b844:	str	r0, [fp, #-24]	; 0xffffffe8
   1b848:	str	r1, [fp, #-28]	; 0xffffffe4
   1b84c:	str	r2, [fp, #-32]	; 0xffffffe0
   1b850:	str	r3, [fp, #-36]	; 0xffffffdc
   1b854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b858:	cmp	r3, #0
   1b85c:	bgt	1b874 <__assert_fail@plt+0xa71c>
   1b860:	ldr	r3, [pc, #156]	; 1b904 <__assert_fail@plt+0xa7ac>
   1b864:	ldr	r2, [pc, #156]	; 1b908 <__assert_fail@plt+0xa7b0>
   1b868:	ldr	r1, [pc, #156]	; 1b90c <__assert_fail@plt+0xa7b4>
   1b86c:	ldr	r0, [pc, #156]	; 1b910 <__assert_fail@plt+0xa7b8>
   1b870:	bl	11158 <__assert_fail@plt>
   1b874:	mov	r3, #0
   1b878:	str	r3, [fp, #-8]
   1b87c:	ldr	r3, [fp, #-8]
   1b880:	lsl	r3, r3, #2
   1b884:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b888:	add	r3, r2, r3
   1b88c:	ldr	r3, [r3]
   1b890:	str	r3, [fp, #-12]
   1b894:	ldr	r2, [fp, #-12]
   1b898:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b89c:	cmp	r2, r3
   1b8a0:	movcc	r3, #1
   1b8a4:	movcs	r3, #0
   1b8a8:	uxtb	r3, r3
   1b8ac:	str	r3, [fp, #-16]
   1b8b0:	ldr	r3, [fp, #-8]
   1b8b4:	lsl	r3, r3, #2
   1b8b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b8bc:	add	r3, r2, r3
   1b8c0:	ldr	r1, [fp, #-12]
   1b8c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b8c8:	sub	r2, r1, r2
   1b8cc:	str	r2, [r3]
   1b8d0:	ldr	r3, [fp, #-16]
   1b8d4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b8d8:	ldr	r3, [fp, #-8]
   1b8dc:	add	r3, r3, #1
   1b8e0:	str	r3, [fp, #-8]
   1b8e4:	ldr	r2, [fp, #-8]
   1b8e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b8ec:	cmp	r2, r3
   1b8f0:	blt	1b87c <__assert_fail@plt+0xa724>
   1b8f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b8f8:	mov	r0, r3
   1b8fc:	sub	sp, fp, #4
   1b900:	pop	{fp, pc}
   1b904:	andeq	r4, r3, ip
   1b908:	andeq	r0, r0, sp, ror #3
   1b90c:	andeq	r3, r3, r0, asr #19
   1b910:	andeq	r3, r3, ip, lsr sl
   1b914:	push	{fp}		; (str fp, [sp, #-4]!)
   1b918:	add	fp, sp, #0
   1b91c:	sub	sp, sp, #36	; 0x24
   1b920:	str	r0, [fp, #-24]	; 0xffffffe8
   1b924:	str	r1, [fp, #-28]	; 0xffffffe4
   1b928:	str	r2, [fp, #-32]	; 0xffffffe0
   1b92c:	str	r3, [fp, #-36]	; 0xffffffdc
   1b930:	mov	r3, #0
   1b934:	str	r3, [fp, #-8]
   1b938:	mov	r3, #0
   1b93c:	str	r3, [fp, #-12]
   1b940:	b	1b9f4 <__assert_fail@plt+0xa89c>
   1b944:	ldr	r3, [fp, #-8]
   1b948:	lsl	r3, r3, #2
   1b94c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b950:	add	r3, r2, r3
   1b954:	ldr	r3, [r3]
   1b958:	str	r3, [fp, #-16]
   1b95c:	ldr	r3, [fp, #-8]
   1b960:	lsl	r3, r3, #2
   1b964:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b968:	add	r3, r2, r3
   1b96c:	ldr	r3, [r3]
   1b970:	str	r3, [fp, #-20]	; 0xffffffec
   1b974:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b978:	ldr	r3, [fp, #-12]
   1b97c:	add	r3, r2, r3
   1b980:	str	r3, [fp, #-20]	; 0xffffffec
   1b984:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b988:	ldr	r3, [fp, #-12]
   1b98c:	cmp	r2, r3
   1b990:	movcc	r3, #1
   1b994:	movcs	r3, #0
   1b998:	uxtb	r3, r3
   1b99c:	str	r3, [fp, #-12]
   1b9a0:	ldr	r2, [fp, #-16]
   1b9a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b9a8:	cmp	r2, r3
   1b9ac:	movcc	r3, #1
   1b9b0:	movcs	r3, #0
   1b9b4:	uxtb	r3, r3
   1b9b8:	mov	r2, r3
   1b9bc:	ldr	r3, [fp, #-12]
   1b9c0:	add	r3, r3, r2
   1b9c4:	str	r3, [fp, #-12]
   1b9c8:	ldr	r3, [fp, #-8]
   1b9cc:	lsl	r3, r3, #2
   1b9d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b9d4:	add	r3, r2, r3
   1b9d8:	ldr	r1, [fp, #-16]
   1b9dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b9e0:	sub	r2, r1, r2
   1b9e4:	str	r2, [r3]
   1b9e8:	ldr	r3, [fp, #-8]
   1b9ec:	add	r3, r3, #1
   1b9f0:	str	r3, [fp, #-8]
   1b9f4:	ldr	r2, [fp, #-8]
   1b9f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9fc:	cmp	r2, r3
   1ba00:	blt	1b944 <__assert_fail@plt+0xa7ec>
   1ba04:	ldr	r3, [fp, #-12]
   1ba08:	mov	r0, r3
   1ba0c:	add	sp, fp, #0
   1ba10:	pop	{fp}		; (ldr fp, [sp], #4)
   1ba14:	bx	lr
   1ba18:	push	{fp, lr}
   1ba1c:	add	fp, sp, #4
   1ba20:	sub	sp, sp, #24
   1ba24:	str	r0, [fp, #-16]
   1ba28:	str	r1, [fp, #-20]	; 0xffffffec
   1ba2c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ba30:	str	r3, [fp, #-28]	; 0xffffffe4
   1ba34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ba38:	ldr	r3, [fp, #4]
   1ba3c:	cmp	r2, r3
   1ba40:	bge	1ba58 <__assert_fail@plt+0xa900>
   1ba44:	ldr	r3, [pc, #124]	; 1bac8 <__assert_fail@plt+0xa970>
   1ba48:	mov	r2, #532	; 0x214
   1ba4c:	ldr	r1, [pc, #120]	; 1bacc <__assert_fail@plt+0xa974>
   1ba50:	ldr	r0, [pc, #120]	; 1bad0 <__assert_fail@plt+0xa978>
   1ba54:	bl	11158 <__assert_fail@plt>
   1ba58:	ldr	r3, [fp, #4]
   1ba5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ba60:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba64:	ldr	r0, [fp, #-16]
   1ba68:	bl	1b914 <__assert_fail@plt+0xa7bc>
   1ba6c:	str	r0, [fp, #-8]
   1ba70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ba74:	ldr	r3, [fp, #4]
   1ba78:	cmp	r2, r3
   1ba7c:	ble	1bab8 <__assert_fail@plt+0xa960>
   1ba80:	ldr	r3, [fp, #4]
   1ba84:	lsl	r3, r3, #2
   1ba88:	ldr	r2, [fp, #-16]
   1ba8c:	add	r0, r2, r3
   1ba90:	ldr	r3, [fp, #4]
   1ba94:	lsl	r3, r3, #2
   1ba98:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba9c:	add	r1, r2, r3
   1baa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1baa4:	ldr	r3, [fp, #4]
   1baa8:	sub	r2, r2, r3
   1baac:	ldr	r3, [fp, #-8]
   1bab0:	bl	1b838 <__assert_fail@plt+0xa6e0>
   1bab4:	str	r0, [fp, #-8]
   1bab8:	ldr	r3, [fp, #-8]
   1babc:	mov	r0, r3
   1bac0:	sub	sp, fp, #4
   1bac4:	pop	{fp, pc}
   1bac8:	andeq	r4, r3, r8, lsl r0
   1bacc:	andeq	r3, r3, r0, asr #19
   1bad0:	andeq	r3, r3, r4, asr #20
   1bad4:	push	{fp, lr}
   1bad8:	add	fp, sp, #4
   1badc:	sub	sp, sp, #80	; 0x50
   1bae0:	str	r0, [fp, #-72]	; 0xffffffb8
   1bae4:	str	r1, [fp, #-76]	; 0xffffffb4
   1bae8:	str	r2, [fp, #-80]	; 0xffffffb0
   1baec:	str	r3, [fp, #-84]	; 0xffffffac
   1baf0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1baf4:	cmp	r3, #0
   1baf8:	bgt	1bb10 <__assert_fail@plt+0xa9b8>
   1bafc:	ldr	r3, [pc, #400]	; 1bc94 <__assert_fail@plt+0xab3c>
   1bb00:	ldr	r2, [pc, #400]	; 1bc98 <__assert_fail@plt+0xab40>
   1bb04:	ldr	r1, [pc, #400]	; 1bc9c <__assert_fail@plt+0xab44>
   1bb08:	ldr	r0, [pc, #400]	; 1bca0 <__assert_fail@plt+0xab48>
   1bb0c:	bl	11158 <__assert_fail@plt>
   1bb10:	mov	r3, #0
   1bb14:	str	r3, [fp, #-8]
   1bb18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1bb1c:	add	r2, r3, #4
   1bb20:	str	r2, [fp, #-76]	; 0xffffffb4
   1bb24:	ldr	r3, [r3]
   1bb28:	str	r3, [fp, #-16]
   1bb2c:	mov	r3, #32
   1bb30:	str	r3, [fp, #-20]	; 0xffffffec
   1bb34:	ldr	r3, [fp, #-16]
   1bb38:	str	r3, [fp, #-24]	; 0xffffffe8
   1bb3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bb40:	str	r3, [fp, #-28]	; 0xffffffe4
   1bb44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb48:	uxth	r3, r3
   1bb4c:	str	r3, [fp, #-32]	; 0xffffffe0
   1bb50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb54:	lsr	r3, r3, #16
   1bb58:	str	r3, [fp, #-36]	; 0xffffffdc
   1bb5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb60:	uxth	r3, r3
   1bb64:	str	r3, [fp, #-40]	; 0xffffffd8
   1bb68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb6c:	lsr	r3, r3, #16
   1bb70:	str	r3, [fp, #-44]	; 0xffffffd4
   1bb74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bb7c:	mul	r3, r2, r3
   1bb80:	str	r3, [fp, #-48]	; 0xffffffd0
   1bb84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bb8c:	mul	r3, r2, r3
   1bb90:	str	r3, [fp, #-52]	; 0xffffffcc
   1bb94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bb9c:	mul	r3, r2, r3
   1bba0:	str	r3, [fp, #-56]	; 0xffffffc8
   1bba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bba8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bbac:	mul	r3, r2, r3
   1bbb0:	str	r3, [fp, #-12]
   1bbb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bbb8:	lsr	r3, r3, #16
   1bbbc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bbc0:	add	r3, r2, r3
   1bbc4:	str	r3, [fp, #-52]	; 0xffffffcc
   1bbc8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bbcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bbd0:	add	r3, r2, r3
   1bbd4:	str	r3, [fp, #-52]	; 0xffffffcc
   1bbd8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bbdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bbe0:	cmp	r2, r3
   1bbe4:	bcs	1bbf4 <__assert_fail@plt+0xaa9c>
   1bbe8:	ldr	r3, [fp, #-12]
   1bbec:	add	r3, r3, #65536	; 0x10000
   1bbf0:	str	r3, [fp, #-12]
   1bbf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bbf8:	lsr	r2, r3, #16
   1bbfc:	ldr	r3, [fp, #-12]
   1bc00:	add	r3, r2, r3
   1bc04:	str	r3, [fp, #-60]	; 0xffffffc4
   1bc08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bc0c:	lsl	r2, r3, #16
   1bc10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bc14:	uxth	r3, r3
   1bc18:	add	r3, r2, r3
   1bc1c:	str	r3, [fp, #-64]	; 0xffffffc0
   1bc20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bc24:	ldr	r3, [fp, #-8]
   1bc28:	add	r3, r2, r3
   1bc2c:	str	r3, [fp, #-64]	; 0xffffffc0
   1bc30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bc34:	ldr	r3, [fp, #-8]
   1bc38:	cmp	r2, r3
   1bc3c:	movcc	r3, #1
   1bc40:	movcs	r3, #0
   1bc44:	uxtb	r3, r3
   1bc48:	mov	r2, r3
   1bc4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bc50:	add	r3, r2, r3
   1bc54:	str	r3, [fp, #-8]
   1bc58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bc5c:	add	r2, r3, #4
   1bc60:	str	r2, [fp, #-72]	; 0xffffffb8
   1bc64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bc68:	str	r2, [r3]
   1bc6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bc70:	sub	r3, r3, #1
   1bc74:	str	r3, [fp, #-80]	; 0xffffffb0
   1bc78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bc7c:	cmp	r3, #0
   1bc80:	bne	1bb18 <__assert_fail@plt+0xa9c0>
   1bc84:	ldr	r3, [fp, #-8]
   1bc88:	mov	r0, r3
   1bc8c:	sub	sp, fp, #4
   1bc90:	pop	{fp, pc}
   1bc94:	andeq	r4, r3, r0, lsr #32
   1bc98:	andeq	r0, r0, r1, lsr #4
   1bc9c:	andeq	r3, r3, r0, asr #19
   1bca0:	andeq	r3, r3, r0, asr sl
   1bca4:	push	{fp, lr}
   1bca8:	add	fp, sp, #4
   1bcac:	sub	sp, sp, #80	; 0x50
   1bcb0:	str	r0, [fp, #-72]	; 0xffffffb8
   1bcb4:	str	r1, [fp, #-76]	; 0xffffffb4
   1bcb8:	str	r2, [fp, #-80]	; 0xffffffb0
   1bcbc:	str	r3, [fp, #-84]	; 0xffffffac
   1bcc0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bcc4:	cmp	r3, #0
   1bcc8:	bgt	1bce0 <__assert_fail@plt+0xab88>
   1bccc:	ldr	r3, [pc, #468]	; 1bea8 <__assert_fail@plt+0xad50>
   1bcd0:	mov	r2, #568	; 0x238
   1bcd4:	ldr	r1, [pc, #464]	; 1beac <__assert_fail@plt+0xad54>
   1bcd8:	ldr	r0, [pc, #464]	; 1beb0 <__assert_fail@plt+0xad58>
   1bcdc:	bl	11158 <__assert_fail@plt>
   1bce0:	mov	r3, #0
   1bce4:	str	r3, [fp, #-8]
   1bce8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1bcec:	add	r2, r3, #4
   1bcf0:	str	r2, [fp, #-76]	; 0xffffffb4
   1bcf4:	ldr	r3, [r3]
   1bcf8:	str	r3, [fp, #-16]
   1bcfc:	mov	r3, #32
   1bd00:	str	r3, [fp, #-20]	; 0xffffffec
   1bd04:	ldr	r3, [fp, #-16]
   1bd08:	str	r3, [fp, #-24]	; 0xffffffe8
   1bd0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd10:	str	r3, [fp, #-28]	; 0xffffffe4
   1bd14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd18:	uxth	r3, r3
   1bd1c:	str	r3, [fp, #-32]	; 0xffffffe0
   1bd20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd24:	lsr	r3, r3, #16
   1bd28:	str	r3, [fp, #-36]	; 0xffffffdc
   1bd2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd30:	uxth	r3, r3
   1bd34:	str	r3, [fp, #-40]	; 0xffffffd8
   1bd38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd3c:	lsr	r3, r3, #16
   1bd40:	str	r3, [fp, #-44]	; 0xffffffd4
   1bd44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bd4c:	mul	r3, r2, r3
   1bd50:	str	r3, [fp, #-48]	; 0xffffffd0
   1bd54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bd5c:	mul	r3, r2, r3
   1bd60:	str	r3, [fp, #-52]	; 0xffffffcc
   1bd64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bd68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bd6c:	mul	r3, r2, r3
   1bd70:	str	r3, [fp, #-56]	; 0xffffffc8
   1bd74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bd78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bd7c:	mul	r3, r2, r3
   1bd80:	str	r3, [fp, #-12]
   1bd84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bd88:	lsr	r3, r3, #16
   1bd8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bd90:	add	r3, r2, r3
   1bd94:	str	r3, [fp, #-52]	; 0xffffffcc
   1bd98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bd9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bda0:	add	r3, r2, r3
   1bda4:	str	r3, [fp, #-52]	; 0xffffffcc
   1bda8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bdac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bdb0:	cmp	r2, r3
   1bdb4:	bcs	1bdc4 <__assert_fail@plt+0xac6c>
   1bdb8:	ldr	r3, [fp, #-12]
   1bdbc:	add	r3, r3, #65536	; 0x10000
   1bdc0:	str	r3, [fp, #-12]
   1bdc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bdc8:	lsr	r2, r3, #16
   1bdcc:	ldr	r3, [fp, #-12]
   1bdd0:	add	r3, r2, r3
   1bdd4:	str	r3, [fp, #-60]	; 0xffffffc4
   1bdd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bddc:	lsl	r2, r3, #16
   1bde0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bde4:	uxth	r3, r3
   1bde8:	add	r3, r2, r3
   1bdec:	str	r3, [fp, #-64]	; 0xffffffc0
   1bdf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bdf4:	ldr	r3, [fp, #-8]
   1bdf8:	add	r3, r2, r3
   1bdfc:	str	r3, [fp, #-64]	; 0xffffffc0
   1be00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be04:	ldr	r3, [fp, #-8]
   1be08:	cmp	r2, r3
   1be0c:	movcc	r3, #1
   1be10:	movcs	r3, #0
   1be14:	uxtb	r3, r3
   1be18:	mov	r2, r3
   1be1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1be20:	add	r3, r2, r3
   1be24:	str	r3, [fp, #-8]
   1be28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1be2c:	ldr	r3, [r3]
   1be30:	str	r3, [fp, #-68]	; 0xffffffbc
   1be34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1be3c:	add	r3, r2, r3
   1be40:	str	r3, [fp, #-64]	; 0xffffffc0
   1be44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1be4c:	cmp	r2, r3
   1be50:	movcc	r3, #1
   1be54:	movcs	r3, #0
   1be58:	uxtb	r3, r3
   1be5c:	mov	r2, r3
   1be60:	ldr	r3, [fp, #-8]
   1be64:	add	r3, r3, r2
   1be68:	str	r3, [fp, #-8]
   1be6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1be70:	add	r2, r3, #4
   1be74:	str	r2, [fp, #-72]	; 0xffffffb8
   1be78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1be7c:	str	r2, [r3]
   1be80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1be84:	sub	r3, r3, #1
   1be88:	str	r3, [fp, #-80]	; 0xffffffb0
   1be8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1be90:	cmp	r3, #0
   1be94:	bne	1bce8 <__assert_fail@plt+0xab90>
   1be98:	ldr	r3, [fp, #-8]
   1be9c:	mov	r0, r3
   1bea0:	sub	sp, fp, #4
   1bea4:	pop	{fp, pc}
   1bea8:	andeq	r4, r3, ip, lsr #32
   1beac:	andeq	r3, r3, r0, asr #19
   1beb0:	andeq	r3, r3, r0, asr sl
   1beb4:	push	{fp, lr}
   1beb8:	add	fp, sp, #4
   1bebc:	sub	sp, sp, #80	; 0x50
   1bec0:	str	r0, [fp, #-72]	; 0xffffffb8
   1bec4:	str	r1, [fp, #-76]	; 0xffffffb4
   1bec8:	str	r2, [fp, #-80]	; 0xffffffb0
   1becc:	str	r3, [fp, #-84]	; 0xffffffac
   1bed0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bed4:	cmp	r3, #0
   1bed8:	bgt	1bef0 <__assert_fail@plt+0xad98>
   1bedc:	ldr	r3, [pc, #468]	; 1c0b8 <__assert_fail@plt+0xaf60>
   1bee0:	ldr	r2, [pc, #468]	; 1c0bc <__assert_fail@plt+0xaf64>
   1bee4:	ldr	r1, [pc, #468]	; 1c0c0 <__assert_fail@plt+0xaf68>
   1bee8:	ldr	r0, [pc, #468]	; 1c0c4 <__assert_fail@plt+0xaf6c>
   1beec:	bl	11158 <__assert_fail@plt>
   1bef0:	mov	r3, #0
   1bef4:	str	r3, [fp, #-8]
   1bef8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1befc:	add	r2, r3, #4
   1bf00:	str	r2, [fp, #-76]	; 0xffffffb4
   1bf04:	ldr	r3, [r3]
   1bf08:	str	r3, [fp, #-16]
   1bf0c:	mov	r3, #32
   1bf10:	str	r3, [fp, #-20]	; 0xffffffec
   1bf14:	ldr	r3, [fp, #-16]
   1bf18:	str	r3, [fp, #-24]	; 0xffffffe8
   1bf1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bf20:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf28:	uxth	r3, r3
   1bf2c:	str	r3, [fp, #-32]	; 0xffffffe0
   1bf30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf34:	lsr	r3, r3, #16
   1bf38:	str	r3, [fp, #-36]	; 0xffffffdc
   1bf3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf40:	uxth	r3, r3
   1bf44:	str	r3, [fp, #-40]	; 0xffffffd8
   1bf48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf4c:	lsr	r3, r3, #16
   1bf50:	str	r3, [fp, #-44]	; 0xffffffd4
   1bf54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bf5c:	mul	r3, r2, r3
   1bf60:	str	r3, [fp, #-48]	; 0xffffffd0
   1bf64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bf6c:	mul	r3, r2, r3
   1bf70:	str	r3, [fp, #-52]	; 0xffffffcc
   1bf74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bf78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bf7c:	mul	r3, r2, r3
   1bf80:	str	r3, [fp, #-56]	; 0xffffffc8
   1bf84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bf88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bf8c:	mul	r3, r2, r3
   1bf90:	str	r3, [fp, #-12]
   1bf94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bf98:	lsr	r3, r3, #16
   1bf9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bfa0:	add	r3, r2, r3
   1bfa4:	str	r3, [fp, #-52]	; 0xffffffcc
   1bfa8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bfac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bfb0:	add	r3, r2, r3
   1bfb4:	str	r3, [fp, #-52]	; 0xffffffcc
   1bfb8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bfbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bfc0:	cmp	r2, r3
   1bfc4:	bcs	1bfd4 <__assert_fail@plt+0xae7c>
   1bfc8:	ldr	r3, [fp, #-12]
   1bfcc:	add	r3, r3, #65536	; 0x10000
   1bfd0:	str	r3, [fp, #-12]
   1bfd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bfd8:	lsr	r2, r3, #16
   1bfdc:	ldr	r3, [fp, #-12]
   1bfe0:	add	r3, r2, r3
   1bfe4:	str	r3, [fp, #-60]	; 0xffffffc4
   1bfe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bfec:	lsl	r2, r3, #16
   1bff0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bff4:	uxth	r3, r3
   1bff8:	add	r3, r2, r3
   1bffc:	str	r3, [fp, #-64]	; 0xffffffc0
   1c000:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c004:	ldr	r3, [fp, #-8]
   1c008:	add	r3, r2, r3
   1c00c:	str	r3, [fp, #-64]	; 0xffffffc0
   1c010:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c014:	ldr	r3, [fp, #-8]
   1c018:	cmp	r2, r3
   1c01c:	movcc	r3, #1
   1c020:	movcs	r3, #0
   1c024:	uxtb	r3, r3
   1c028:	mov	r2, r3
   1c02c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c030:	add	r3, r2, r3
   1c034:	str	r3, [fp, #-8]
   1c038:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c03c:	ldr	r3, [r3]
   1c040:	str	r3, [fp, #-68]	; 0xffffffbc
   1c044:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c048:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c04c:	sub	r3, r2, r3
   1c050:	str	r3, [fp, #-64]	; 0xffffffc0
   1c054:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c058:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c05c:	cmp	r2, r3
   1c060:	movhi	r3, #1
   1c064:	movls	r3, #0
   1c068:	uxtb	r3, r3
   1c06c:	mov	r2, r3
   1c070:	ldr	r3, [fp, #-8]
   1c074:	add	r3, r3, r2
   1c078:	str	r3, [fp, #-8]
   1c07c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1c080:	add	r2, r3, #4
   1c084:	str	r2, [fp, #-72]	; 0xffffffb8
   1c088:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c08c:	str	r2, [r3]
   1c090:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c094:	sub	r3, r3, #1
   1c098:	str	r3, [fp, #-80]	; 0xffffffb0
   1c09c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c0a0:	cmp	r3, #0
   1c0a4:	bne	1bef8 <__assert_fail@plt+0xada0>
   1c0a8:	ldr	r3, [fp, #-8]
   1c0ac:	mov	r0, r3
   1c0b0:	sub	sp, fp, #4
   1c0b4:	pop	{fp, pc}
   1c0b8:	andeq	r4, r3, ip, lsr r0
   1c0bc:	andeq	r0, r0, r2, asr r2
   1c0c0:	andeq	r3, r3, r0, asr #19
   1c0c4:	andeq	r3, r3, r0, asr sl
   1c0c8:	push	{r4, fp, lr}
   1c0cc:	add	fp, sp, #8
   1c0d0:	sub	sp, sp, #20
   1c0d4:	str	r0, [fp, #-16]
   1c0d8:	str	r1, [fp, #-20]	; 0xffffffec
   1c0dc:	str	r2, [fp, #-24]	; 0xffffffe8
   1c0e0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c0e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c0e8:	ldr	r3, [fp, #4]
   1c0ec:	cmp	r2, r3
   1c0f0:	bge	1c108 <__assert_fail@plt+0xafb0>
   1c0f4:	ldr	r3, [pc, #392]	; 1c284 <__assert_fail@plt+0xb12c>
   1c0f8:	ldr	r2, [pc, #392]	; 1c288 <__assert_fail@plt+0xb130>
   1c0fc:	ldr	r1, [pc, #392]	; 1c28c <__assert_fail@plt+0xb134>
   1c100:	ldr	r0, [pc, #392]	; 1c290 <__assert_fail@plt+0xb138>
   1c104:	bl	11158 <__assert_fail@plt>
   1c108:	ldr	r3, [fp, #4]
   1c10c:	cmp	r3, #0
   1c110:	bgt	1c128 <__assert_fail@plt+0xafd0>
   1c114:	ldr	r3, [pc, #360]	; 1c284 <__assert_fail@plt+0xb12c>
   1c118:	ldr	r2, [pc, #372]	; 1c294 <__assert_fail@plt+0xb13c>
   1c11c:	ldr	r1, [pc, #360]	; 1c28c <__assert_fail@plt+0xb134>
   1c120:	ldr	r0, [pc, #368]	; 1c298 <__assert_fail@plt+0xb140>
   1c124:	bl	11158 <__assert_fail@plt>
   1c128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c12c:	ldr	r3, [fp, #4]
   1c130:	add	r3, r2, r3
   1c134:	lsl	r3, r3, #2
   1c138:	ldr	r2, [fp, #-16]
   1c13c:	add	r2, r2, r3
   1c140:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c144:	cmp	r2, r3
   1c148:	bls	1c17c <__assert_fail@plt+0xb024>
   1c14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c150:	lsl	r3, r3, #2
   1c154:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c158:	add	r2, r2, r3
   1c15c:	ldr	r3, [fp, #-16]
   1c160:	cmp	r2, r3
   1c164:	bls	1c17c <__assert_fail@plt+0xb024>
   1c168:	ldr	r3, [pc, #276]	; 1c284 <__assert_fail@plt+0xb12c>
   1c16c:	mov	r2, #620	; 0x26c
   1c170:	ldr	r1, [pc, #276]	; 1c28c <__assert_fail@plt+0xb134>
   1c174:	ldr	r0, [pc, #288]	; 1c29c <__assert_fail@plt+0xb144>
   1c178:	bl	11158 <__assert_fail@plt>
   1c17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c180:	ldr	r3, [fp, #4]
   1c184:	add	r3, r2, r3
   1c188:	lsl	r3, r3, #2
   1c18c:	ldr	r2, [fp, #-16]
   1c190:	add	r2, r2, r3
   1c194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c198:	cmp	r2, r3
   1c19c:	bls	1c1d0 <__assert_fail@plt+0xb078>
   1c1a0:	ldr	r3, [fp, #4]
   1c1a4:	lsl	r3, r3, #2
   1c1a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c1ac:	add	r2, r2, r3
   1c1b0:	ldr	r3, [fp, #-16]
   1c1b4:	cmp	r2, r3
   1c1b8:	bls	1c1d0 <__assert_fail@plt+0xb078>
   1c1bc:	ldr	r3, [pc, #192]	; 1c284 <__assert_fail@plt+0xb12c>
   1c1c0:	ldr	r2, [pc, #216]	; 1c2a0 <__assert_fail@plt+0xb148>
   1c1c4:	ldr	r1, [pc, #192]	; 1c28c <__assert_fail@plt+0xb134>
   1c1c8:	ldr	r0, [pc, #212]	; 1c2a4 <__assert_fail@plt+0xb14c>
   1c1cc:	bl	11158 <__assert_fail@plt>
   1c1d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1d4:	lsl	r3, r3, #2
   1c1d8:	ldr	r2, [fp, #-16]
   1c1dc:	add	r4, r2, r3
   1c1e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c1e4:	ldr	r3, [r3]
   1c1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c1ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c1f0:	ldr	r0, [fp, #-16]
   1c1f4:	bl	1bad4 <__assert_fail@plt+0xa97c>
   1c1f8:	mov	r3, r0
   1c1fc:	str	r3, [r4]
   1c200:	b	1c24c <__assert_fail@plt+0xb0f4>
   1c204:	ldr	r3, [fp, #-16]
   1c208:	add	r3, r3, #4
   1c20c:	str	r3, [fp, #-16]
   1c210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c214:	add	r3, r3, #4
   1c218:	str	r3, [fp, #-28]	; 0xffffffe4
   1c21c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c220:	lsl	r3, r3, #2
   1c224:	ldr	r2, [fp, #-16]
   1c228:	add	r4, r2, r3
   1c22c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c230:	ldr	r3, [r3]
   1c234:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c238:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c23c:	ldr	r0, [fp, #-16]
   1c240:	bl	1bca4 <__assert_fail@plt+0xab4c>
   1c244:	mov	r3, r0
   1c248:	str	r3, [r4]
   1c24c:	ldr	r3, [fp, #4]
   1c250:	sub	r3, r3, #1
   1c254:	str	r3, [fp, #4]
   1c258:	ldr	r3, [fp, #4]
   1c25c:	cmp	r3, #0
   1c260:	bgt	1c204 <__assert_fail@plt+0xb0ac>
   1c264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c268:	lsl	r3, r3, #2
   1c26c:	ldr	r2, [fp, #-16]
   1c270:	add	r3, r2, r3
   1c274:	ldr	r3, [r3]
   1c278:	mov	r0, r3
   1c27c:	sub	sp, fp, #8
   1c280:	pop	{r4, fp, pc}
   1c284:	andeq	r4, r3, ip, asr #32
   1c288:	andeq	r0, r0, sl, ror #4
   1c28c:	andeq	r3, r3, r0, asr #19
   1c290:	andeq	r3, r3, r8, asr sl
   1c294:	andeq	r0, r0, fp, ror #4
   1c298:	andeq	r3, r3, r4, ror #20
   1c29c:	andeq	r3, r3, ip, ror #20
   1c2a0:	andeq	r0, r0, sp, ror #4
   1c2a4:	muleq	r3, r4, sl
   1c2a8:	push	{fp, lr}
   1c2ac:	add	fp, sp, #4
   1c2b0:	sub	sp, sp, #24
   1c2b4:	str	r0, [fp, #-8]
   1c2b8:	str	r1, [fp, #-12]
   1c2bc:	str	r2, [fp, #-16]
   1c2c0:	str	r3, [fp, #-20]	; 0xffffffec
   1c2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2c8:	str	r3, [sp]
   1c2cc:	ldr	r3, [fp, #-16]
   1c2d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c2d4:	ldr	r1, [fp, #-12]
   1c2d8:	ldr	r0, [fp, #-8]
   1c2dc:	bl	1c0c8 <__assert_fail@plt+0xaf70>
   1c2e0:	nop			; (mov r0, r0)
   1c2e4:	sub	sp, fp, #4
   1c2e8:	pop	{fp, pc}
   1c2ec:	push	{fp, lr}
   1c2f0:	add	fp, sp, #4
   1c2f4:	sub	sp, sp, #24
   1c2f8:	str	r0, [fp, #-8]
   1c2fc:	str	r1, [fp, #-12]
   1c300:	str	r2, [fp, #-16]
   1c304:	ldr	r3, [fp, #-16]
   1c308:	str	r3, [sp]
   1c30c:	ldr	r3, [fp, #-12]
   1c310:	ldr	r2, [fp, #-16]
   1c314:	ldr	r1, [fp, #-12]
   1c318:	ldr	r0, [fp, #-8]
   1c31c:	bl	1c0c8 <__assert_fail@plt+0xaf70>
   1c320:	nop			; (mov r0, r0)
   1c324:	sub	sp, fp, #4
   1c328:	pop	{fp, pc}
   1c32c:	push	{fp, lr}
   1c330:	add	fp, sp, #4
   1c334:	sub	sp, sp, #32
   1c338:	str	r0, [fp, #-24]	; 0xffffffe8
   1c33c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c340:	str	r2, [fp, #-32]	; 0xffffffe0
   1c344:	str	r3, [fp, #-36]	; 0xffffffdc
   1c348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c34c:	cmp	r3, #0
   1c350:	bgt	1c368 <__assert_fail@plt+0xb210>
   1c354:	ldr	r3, [pc, #332]	; 1c4a8 <__assert_fail@plt+0xb350>
   1c358:	ldr	r2, [pc, #332]	; 1c4ac <__assert_fail@plt+0xb354>
   1c35c:	ldr	r1, [pc, #332]	; 1c4b0 <__assert_fail@plt+0xb358>
   1c360:	ldr	r0, [pc, #332]	; 1c4b4 <__assert_fail@plt+0xb35c>
   1c364:	bl	11158 <__assert_fail@plt>
   1c368:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c36c:	cmp	r3, #0
   1c370:	bne	1c388 <__assert_fail@plt+0xb230>
   1c374:	ldr	r3, [pc, #300]	; 1c4a8 <__assert_fail@plt+0xb350>
   1c378:	mov	r2, #660	; 0x294
   1c37c:	ldr	r1, [pc, #300]	; 1c4b0 <__assert_fail@plt+0xb358>
   1c380:	ldr	r0, [pc, #304]	; 1c4b8 <__assert_fail@plt+0xb360>
   1c384:	bl	11158 <__assert_fail@plt>
   1c388:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c38c:	cmp	r3, #31
   1c390:	bls	1c3a8 <__assert_fail@plt+0xb250>
   1c394:	ldr	r3, [pc, #268]	; 1c4a8 <__assert_fail@plt+0xb350>
   1c398:	ldr	r2, [pc, #284]	; 1c4bc <__assert_fail@plt+0xb364>
   1c39c:	ldr	r1, [pc, #268]	; 1c4b0 <__assert_fail@plt+0xb358>
   1c3a0:	ldr	r0, [pc, #280]	; 1c4c0 <__assert_fail@plt+0xb368>
   1c3a4:	bl	11158 <__assert_fail@plt>
   1c3a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3ac:	lsl	r3, r3, #2
   1c3b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c3b4:	add	r3, r2, r3
   1c3b8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c3bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3c0:	lsl	r3, r3, #2
   1c3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c3c8:	add	r3, r2, r3
   1c3cc:	str	r3, [fp, #-24]	; 0xffffffe8
   1c3d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c3d4:	rsb	r3, r3, #32
   1c3d8:	str	r3, [fp, #-12]
   1c3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3e0:	sub	r3, r3, #4
   1c3e4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c3e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3ec:	ldr	r3, [r3]
   1c3f0:	str	r3, [fp, #-16]
   1c3f4:	ldr	r2, [fp, #-16]
   1c3f8:	ldr	r3, [fp, #-12]
   1c3fc:	lsr	r3, r2, r3
   1c400:	str	r3, [fp, #-20]	; 0xffffffec
   1c404:	ldr	r2, [fp, #-16]
   1c408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c40c:	lsl	r3, r2, r3
   1c410:	str	r3, [fp, #-8]
   1c414:	b	1c468 <__assert_fail@plt+0xb310>
   1c418:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c41c:	sub	r3, r3, #4
   1c420:	str	r3, [fp, #-28]	; 0xffffffe4
   1c424:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c428:	ldr	r3, [r3]
   1c42c:	str	r3, [fp, #-16]
   1c430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c434:	sub	r3, r3, #4
   1c438:	str	r3, [fp, #-24]	; 0xffffffe8
   1c43c:	ldr	r2, [fp, #-16]
   1c440:	ldr	r3, [fp, #-12]
   1c444:	lsr	r2, r2, r3
   1c448:	ldr	r3, [fp, #-8]
   1c44c:	orr	r2, r2, r3
   1c450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c454:	str	r2, [r3]
   1c458:	ldr	r2, [fp, #-16]
   1c45c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c460:	lsl	r3, r2, r3
   1c464:	str	r3, [fp, #-8]
   1c468:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c46c:	sub	r3, r3, #1
   1c470:	str	r3, [fp, #-32]	; 0xffffffe0
   1c474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c478:	cmp	r3, #0
   1c47c:	bne	1c418 <__assert_fail@plt+0xb2c0>
   1c480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c484:	sub	r3, r3, #4
   1c488:	str	r3, [fp, #-24]	; 0xffffffe8
   1c48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c490:	ldr	r2, [fp, #-8]
   1c494:	str	r2, [r3]
   1c498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c49c:	mov	r0, r3
   1c4a0:	sub	sp, fp, #4
   1c4a4:	pop	{fp, pc}
   1c4a8:	andeq	r4, r3, r4, asr r0
   1c4ac:	muleq	r0, r3, r2
   1c4b0:	andeq	r3, r3, r0, asr #19
   1c4b4:	andeq	r3, r3, r0, asr sl
   1c4b8:			; <UNDEFINED> instruction: 0x00033abc
   1c4bc:	muleq	r0, r5, r2
   1c4c0:	andeq	r3, r3, r8, asr #21
   1c4c4:	push	{fp, lr}
   1c4c8:	add	fp, sp, #4
   1c4cc:	sub	sp, sp, #32
   1c4d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1c4d8:	str	r2, [fp, #-32]	; 0xffffffe0
   1c4dc:	str	r3, [fp, #-36]	; 0xffffffdc
   1c4e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c4e4:	cmp	r3, #0
   1c4e8:	bgt	1c500 <__assert_fail@plt+0xb3a8>
   1c4ec:	ldr	r3, [pc, #268]	; 1c600 <__assert_fail@plt+0xb4a8>
   1c4f0:	ldr	r2, [pc, #268]	; 1c604 <__assert_fail@plt+0xb4ac>
   1c4f4:	ldr	r1, [pc, #268]	; 1c608 <__assert_fail@plt+0xb4b0>
   1c4f8:	ldr	r0, [pc, #268]	; 1c60c <__assert_fail@plt+0xb4b4>
   1c4fc:	bl	11158 <__assert_fail@plt>
   1c500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c504:	cmp	r3, #0
   1c508:	bne	1c520 <__assert_fail@plt+0xb3c8>
   1c50c:	ldr	r3, [pc, #236]	; 1c600 <__assert_fail@plt+0xb4a8>
   1c510:	ldr	r2, [pc, #248]	; 1c610 <__assert_fail@plt+0xb4b8>
   1c514:	ldr	r1, [pc, #236]	; 1c608 <__assert_fail@plt+0xb4b0>
   1c518:	ldr	r0, [pc, #244]	; 1c614 <__assert_fail@plt+0xb4bc>
   1c51c:	bl	11158 <__assert_fail@plt>
   1c520:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c524:	cmp	r3, #31
   1c528:	bls	1c540 <__assert_fail@plt+0xb3e8>
   1c52c:	ldr	r3, [pc, #204]	; 1c600 <__assert_fail@plt+0xb4a8>
   1c530:	ldr	r2, [pc, #224]	; 1c618 <__assert_fail@plt+0xb4c0>
   1c534:	ldr	r1, [pc, #204]	; 1c608 <__assert_fail@plt+0xb4b0>
   1c538:	ldr	r0, [pc, #220]	; 1c61c <__assert_fail@plt+0xb4c4>
   1c53c:	bl	11158 <__assert_fail@plt>
   1c540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c544:	rsb	r3, r3, #32
   1c548:	str	r3, [fp, #-12]
   1c54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c550:	add	r2, r3, #4
   1c554:	str	r2, [fp, #-28]	; 0xffffffe4
   1c558:	ldr	r3, [r3]
   1c55c:	str	r3, [fp, #-16]
   1c560:	ldr	r2, [fp, #-16]
   1c564:	ldr	r3, [fp, #-12]
   1c568:	lsl	r3, r2, r3
   1c56c:	str	r3, [fp, #-20]	; 0xffffffec
   1c570:	ldr	r2, [fp, #-16]
   1c574:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c578:	lsr	r3, r2, r3
   1c57c:	str	r3, [fp, #-8]
   1c580:	b	1c5cc <__assert_fail@plt+0xb474>
   1c584:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c588:	add	r2, r3, #4
   1c58c:	str	r2, [fp, #-28]	; 0xffffffe4
   1c590:	ldr	r3, [r3]
   1c594:	str	r3, [fp, #-16]
   1c598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c59c:	add	r2, r3, #4
   1c5a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1c5a4:	ldr	r1, [fp, #-16]
   1c5a8:	ldr	r2, [fp, #-12]
   1c5ac:	lsl	r1, r1, r2
   1c5b0:	ldr	r2, [fp, #-8]
   1c5b4:	orr	r2, r1, r2
   1c5b8:	str	r2, [r3]
   1c5bc:	ldr	r2, [fp, #-16]
   1c5c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c5c4:	lsr	r3, r2, r3
   1c5c8:	str	r3, [fp, #-8]
   1c5cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5d0:	sub	r3, r3, #1
   1c5d4:	str	r3, [fp, #-32]	; 0xffffffe0
   1c5d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5dc:	cmp	r3, #0
   1c5e0:	bne	1c584 <__assert_fail@plt+0xb42c>
   1c5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5e8:	ldr	r2, [fp, #-8]
   1c5ec:	str	r2, [r3]
   1c5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5f4:	mov	r0, r3
   1c5f8:	sub	sp, fp, #4
   1c5fc:	pop	{fp, pc}
   1c600:	andeq	r4, r3, r0, rrx
   1c604:			; <UNDEFINED> instruction: 0x000002b1
   1c608:	andeq	r3, r3, r0, asr #19
   1c60c:	andeq	r3, r3, r0, asr sl
   1c610:			; <UNDEFINED> instruction: 0x000002b2
   1c614:			; <UNDEFINED> instruction: 0x00033abc
   1c618:			; <UNDEFINED> instruction: 0x000002b3
   1c61c:	andeq	r3, r3, r8, asr #21
   1c620:	push	{fp, lr}
   1c624:	add	fp, sp, #4
   1c628:	sub	sp, sp, #40	; 0x28
   1c62c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c630:	str	r1, [fp, #-36]	; 0xffffffdc
   1c634:	str	r2, [fp, #-40]	; 0xffffffd8
   1c638:	str	r3, [fp, #-44]	; 0xffffffd4
   1c63c:	ldr	r3, [fp, #4]
   1c640:	cmp	r3, #0
   1c644:	beq	1c668 <__assert_fail@plt+0xb510>
   1c648:	ldr	r3, [fp, #4]
   1c64c:	cmn	r3, #1
   1c650:	beq	1c668 <__assert_fail@plt+0xb510>
   1c654:	ldr	r3, [pc, #368]	; 1c7cc <__assert_fail@plt+0xb674>
   1c658:	ldr	r2, [pc, #368]	; 1c7d0 <__assert_fail@plt+0xb678>
   1c65c:	ldr	r1, [pc, #368]	; 1c7d4 <__assert_fail@plt+0xb67c>
   1c660:	ldr	r0, [pc, #368]	; 1c7d8 <__assert_fail@plt+0xb680>
   1c664:	bl	11158 <__assert_fail@plt>
   1c668:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c66c:	cmp	r3, #0
   1c670:	blt	1c684 <__assert_fail@plt+0xb52c>
   1c674:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c678:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c67c:	cmp	r2, r3
   1c680:	ble	1c698 <__assert_fail@plt+0xb540>
   1c684:	ldr	r3, [pc, #320]	; 1c7cc <__assert_fail@plt+0xb674>
   1c688:	mov	r2, #716	; 0x2cc
   1c68c:	ldr	r1, [pc, #320]	; 1c7d4 <__assert_fail@plt+0xb67c>
   1c690:	ldr	r0, [pc, #324]	; 1c7dc <__assert_fail@plt+0xb684>
   1c694:	bl	11158 <__assert_fail@plt>
   1c698:	b	1c6f8 <__assert_fail@plt+0xb5a0>
   1c69c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c6a0:	add	r3, r3, #1
   1c6a4:	str	r3, [fp, #-36]	; 0xffffffdc
   1c6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c6b0:	cmp	r2, r3
   1c6b4:	bne	1c6d8 <__assert_fail@plt+0xb580>
   1c6b8:	ldr	r3, [fp, #4]
   1c6bc:	cmp	r3, #0
   1c6c0:	beq	1c6d0 <__assert_fail@plt+0xb578>
   1c6c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c6c8:	lsl	r3, r3, #5
   1c6cc:	b	1c7c0 <__assert_fail@plt+0xb668>
   1c6d0:	mvn	r3, #0
   1c6d4:	b	1c7c0 <__assert_fail@plt+0xb668>
   1c6d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c6dc:	lsl	r3, r3, #2
   1c6e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c6e4:	add	r3, r2, r3
   1c6e8:	ldr	r2, [r3]
   1c6ec:	ldr	r3, [fp, #4]
   1c6f0:	eor	r3, r3, r2
   1c6f4:	str	r3, [fp, #-32]	; 0xffffffe0
   1c6f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c6fc:	cmp	r3, #0
   1c700:	beq	1c69c <__assert_fail@plt+0xb544>
   1c704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c708:	str	r3, [fp, #-16]
   1c70c:	mov	r3, #0
   1c710:	str	r3, [fp, #-20]	; 0xffffffec
   1c714:	ldr	r3, [fp, #-16]
   1c718:	rsb	r2, r3, #0
   1c71c:	ldr	r3, [fp, #-16]
   1c720:	and	r3, r3, r2
   1c724:	str	r3, [fp, #-8]
   1c728:	mov	r3, #0
   1c72c:	str	r3, [fp, #-12]
   1c730:	mov	r3, #8
   1c734:	str	r3, [fp, #-24]	; 0xffffffe8
   1c738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c73c:	cmp	r3, #31
   1c740:	bhi	1c790 <__assert_fail@plt+0xb638>
   1c744:	b	1c764 <__assert_fail@plt+0xb60c>
   1c748:	ldr	r2, [fp, #-8]
   1c74c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c750:	lsl	r3, r2, r3
   1c754:	str	r3, [fp, #-8]
   1c758:	ldr	r3, [fp, #-12]
   1c75c:	add	r3, r3, #8
   1c760:	str	r3, [fp, #-12]
   1c764:	ldr	r3, [fp, #-8]
   1c768:	and	r3, r3, #-16777216	; 0xff000000
   1c76c:	cmp	r3, #0
   1c770:	beq	1c748 <__assert_fail@plt+0xb5f0>
   1c774:	b	1c790 <__assert_fail@plt+0xb638>
   1c778:	ldr	r3, [fp, #-8]
   1c77c:	lsl	r3, r3, #1
   1c780:	str	r3, [fp, #-8]
   1c784:	ldr	r3, [fp, #-12]
   1c788:	add	r3, r3, #1
   1c78c:	str	r3, [fp, #-12]
   1c790:	ldr	r3, [fp, #-8]
   1c794:	cmp	r3, #0
   1c798:	bge	1c778 <__assert_fail@plt+0xb620>
   1c79c:	ldr	r3, [fp, #-12]
   1c7a0:	str	r3, [fp, #-20]	; 0xffffffec
   1c7a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7a8:	rsb	r3, r3, #31
   1c7ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1c7b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7b4:	lsl	r2, r3, #5
   1c7b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7bc:	add	r3, r2, r3
   1c7c0:	mov	r0, r3
   1c7c4:	sub	sp, fp, #4
   1c7c8:	pop	{fp, pc}
   1c7cc:	andeq	r4, r3, ip, rrx
   1c7d0:	andeq	r0, r0, fp, asr #5
   1c7d4:	andeq	r3, r3, r0, asr #19
   1c7d8:	ldrdeq	r3, [r3], -ip
   1c7dc:	strdeq	r3, [r3], -ip
   1c7e0:	push	{fp, lr}
   1c7e4:	add	fp, sp, #4
   1c7e8:	sub	sp, sp, #24
   1c7ec:	str	r0, [fp, #-16]
   1c7f0:	str	r1, [fp, #-20]	; 0xffffffec
   1c7f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7f8:	lsr	r3, r3, #5
   1c7fc:	str	r3, [fp, #-8]
   1c800:	ldr	r3, [fp, #-8]
   1c804:	lsl	r3, r3, #2
   1c808:	ldr	r2, [fp, #-16]
   1c80c:	add	r3, r2, r3
   1c810:	ldr	r2, [r3]
   1c814:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c818:	and	r3, r3, #31
   1c81c:	mvn	r1, #0
   1c820:	lsl	r3, r1, r3
   1c824:	and	r0, r2, r3
   1c828:	mov	r3, #0
   1c82c:	str	r3, [sp]
   1c830:	ldr	r3, [fp, #-8]
   1c834:	ldr	r2, [fp, #-16]
   1c838:	ldr	r1, [fp, #-8]
   1c83c:	bl	1c620 <__assert_fail@plt+0xb4c8>
   1c840:	mov	r3, r0
   1c844:	mov	r0, r3
   1c848:	sub	sp, fp, #4
   1c84c:	pop	{fp, pc}
   1c850:	push	{fp, lr}
   1c854:	add	fp, sp, #4
   1c858:	sub	sp, sp, #24
   1c85c:	str	r0, [fp, #-16]
   1c860:	str	r1, [fp, #-20]	; 0xffffffec
   1c864:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c868:	lsr	r3, r3, #5
   1c86c:	str	r3, [fp, #-8]
   1c870:	ldr	r3, [fp, #-8]
   1c874:	lsl	r3, r3, #2
   1c878:	ldr	r2, [fp, #-16]
   1c87c:	add	r3, r2, r3
   1c880:	ldr	r3, [r3]
   1c884:	mvn	r2, r3
   1c888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c88c:	and	r3, r3, #31
   1c890:	mvn	r1, #0
   1c894:	lsl	r3, r1, r3
   1c898:	and	r0, r2, r3
   1c89c:	mvn	r3, #0
   1c8a0:	str	r3, [sp]
   1c8a4:	ldr	r3, [fp, #-8]
   1c8a8:	ldr	r2, [fp, #-16]
   1c8ac:	ldr	r1, [fp, #-8]
   1c8b0:	bl	1c620 <__assert_fail@plt+0xb4c8>
   1c8b4:	mov	r3, r0
   1c8b8:	mov	r0, r3
   1c8bc:	sub	sp, fp, #4
   1c8c0:	pop	{fp, pc}
   1c8c4:	push	{fp}		; (str fp, [sp, #-4]!)
   1c8c8:	add	fp, sp, #0
   1c8cc:	sub	sp, sp, #20
   1c8d0:	str	r0, [fp, #-8]
   1c8d4:	str	r1, [fp, #-12]
   1c8d8:	str	r2, [fp, #-16]
   1c8dc:	b	1c904 <__assert_fail@plt+0xb7ac>
   1c8e0:	ldr	r3, [fp, #-8]
   1c8e4:	add	r2, r3, #4
   1c8e8:	str	r2, [fp, #-8]
   1c8ec:	ldr	r2, [fp, #-12]
   1c8f0:	add	r1, r2, #4
   1c8f4:	str	r1, [fp, #-12]
   1c8f8:	ldr	r2, [r2]
   1c8fc:	mvn	r2, r2
   1c900:	str	r2, [r3]
   1c904:	ldr	r3, [fp, #-16]
   1c908:	sub	r3, r3, #1
   1c90c:	str	r3, [fp, #-16]
   1c910:	ldr	r3, [fp, #-16]
   1c914:	cmp	r3, #0
   1c918:	bge	1c8e0 <__assert_fail@plt+0xb788>
   1c91c:	nop			; (mov r0, r0)
   1c920:	add	sp, fp, #0
   1c924:	pop	{fp}		; (ldr fp, [sp], #4)
   1c928:	bx	lr
   1c92c:	push	{fp, lr}
   1c930:	add	fp, sp, #4
   1c934:	sub	sp, sp, #16
   1c938:	str	r0, [fp, #-8]
   1c93c:	str	r1, [fp, #-12]
   1c940:	str	r2, [fp, #-16]
   1c944:	b	1c98c <__assert_fail@plt+0xb834>
   1c948:	ldr	r3, [fp, #-8]
   1c94c:	mov	r2, #0
   1c950:	str	r2, [r3]
   1c954:	ldr	r3, [fp, #-16]
   1c958:	sub	r3, r3, #1
   1c95c:	str	r3, [fp, #-16]
   1c960:	ldr	r3, [fp, #-16]
   1c964:	cmp	r3, #0
   1c968:	bne	1c974 <__assert_fail@plt+0xb81c>
   1c96c:	mov	r3, #0
   1c970:	b	1c9e8 <__assert_fail@plt+0xb890>
   1c974:	ldr	r3, [fp, #-12]
   1c978:	add	r3, r3, #4
   1c97c:	str	r3, [fp, #-12]
   1c980:	ldr	r3, [fp, #-8]
   1c984:	add	r3, r3, #4
   1c988:	str	r3, [fp, #-8]
   1c98c:	ldr	r3, [fp, #-12]
   1c990:	ldr	r3, [r3]
   1c994:	cmp	r3, #0
   1c998:	beq	1c948 <__assert_fail@plt+0xb7f0>
   1c99c:	ldr	r3, [fp, #-12]
   1c9a0:	ldr	r3, [r3]
   1c9a4:	rsb	r2, r3, #0
   1c9a8:	ldr	r3, [fp, #-8]
   1c9ac:	str	r2, [r3]
   1c9b0:	ldr	r3, [fp, #-8]
   1c9b4:	add	r3, r3, #4
   1c9b8:	str	r3, [fp, #-8]
   1c9bc:	ldr	r3, [fp, #-12]
   1c9c0:	add	r3, r3, #4
   1c9c4:	str	r3, [fp, #-12]
   1c9c8:	ldr	r3, [fp, #-16]
   1c9cc:	sub	r3, r3, #1
   1c9d0:	str	r3, [fp, #-16]
   1c9d4:	ldr	r2, [fp, #-16]
   1c9d8:	ldr	r1, [fp, #-12]
   1c9dc:	ldr	r0, [fp, #-8]
   1c9e0:	bl	1c8c4 <__assert_fail@plt+0xb76c>
   1c9e4:	mov	r3, #1
   1c9e8:	mov	r0, r3
   1c9ec:	sub	sp, fp, #4
   1c9f0:	pop	{fp, pc}
   1c9f4:	push	{fp, lr}
   1c9f8:	add	fp, sp, #4
   1c9fc:	sub	sp, sp, #88	; 0x58
   1ca00:	str	r0, [fp, #-88]	; 0xffffffa8
   1ca04:	str	r1, [fp, #-92]	; 0xffffffa4
   1ca08:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ca0c:	uxth	r3, r3
   1ca10:	str	r3, [fp, #-28]	; 0xffffffe4
   1ca14:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ca18:	lsr	r3, r3, #16
   1ca1c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ca20:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ca24:	mvn	r3, r3
   1ca28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ca2c:	mov	r0, r3
   1ca30:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   1ca34:	mov	r3, r0
   1ca38:	str	r3, [fp, #-20]	; 0xffffffec
   1ca3c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ca40:	mvn	r2, r3
   1ca44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ca4c:	mul	r3, r1, r3
   1ca50:	sub	r3, r2, r3
   1ca54:	lsl	r3, r3, #16
   1ca58:	mvn	r3, r3, lsr #16
   1ca5c:	mvn	r3, r3, lsl #16
   1ca60:	str	r3, [fp, #-8]
   1ca64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ca6c:	mul	r3, r2, r3
   1ca70:	str	r3, [fp, #-36]	; 0xffffffdc
   1ca74:	ldr	r2, [fp, #-8]
   1ca78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ca7c:	cmp	r2, r3
   1ca80:	bcs	1cadc <__assert_fail@plt+0xb984>
   1ca84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca88:	sub	r3, r3, #1
   1ca8c:	str	r3, [fp, #-20]	; 0xffffffec
   1ca90:	ldr	r2, [fp, #-8]
   1ca94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ca98:	add	r3, r2, r3
   1ca9c:	str	r3, [fp, #-8]
   1caa0:	ldr	r2, [fp, #-8]
   1caa4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1caa8:	cmp	r2, r3
   1caac:	bcc	1cadc <__assert_fail@plt+0xb984>
   1cab0:	ldr	r2, [fp, #-8]
   1cab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cab8:	cmp	r2, r3
   1cabc:	bcs	1cadc <__assert_fail@plt+0xb984>
   1cac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cac4:	sub	r3, r3, #1
   1cac8:	str	r3, [fp, #-20]	; 0xffffffec
   1cacc:	ldr	r2, [fp, #-8]
   1cad0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cad4:	add	r3, r2, r3
   1cad8:	str	r3, [fp, #-8]
   1cadc:	ldr	r2, [fp, #-8]
   1cae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cae4:	sub	r3, r2, r3
   1cae8:	str	r3, [fp, #-8]
   1caec:	ldr	r3, [fp, #-8]
   1caf0:	lsr	r3, r3, #16
   1caf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1caf8:	mul	r2, r2, r3
   1cafc:	ldr	r3, [fp, #-8]
   1cb00:	add	r3, r2, r3
   1cb04:	str	r3, [fp, #-36]	; 0xffffffdc
   1cb08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb0c:	lsr	r3, r3, #16
   1cb10:	add	r3, r3, #1
   1cb14:	str	r3, [fp, #-16]
   1cb18:	ldr	r3, [fp, #-8]
   1cb1c:	lsl	r2, r3, #16
   1cb20:	ldr	r3, [fp, #-16]
   1cb24:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1cb28:	mul	r3, r1, r3
   1cb2c:	sub	r3, r2, r3
   1cb30:	add	r3, r3, #65280	; 0xff00
   1cb34:	add	r3, r3, #255	; 0xff
   1cb38:	str	r3, [fp, #-8]
   1cb3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb40:	lsl	r2, r3, #16
   1cb44:	ldr	r3, [fp, #-8]
   1cb48:	cmp	r2, r3
   1cb4c:	bhi	1cb6c <__assert_fail@plt+0xba14>
   1cb50:	ldr	r3, [fp, #-16]
   1cb54:	sub	r3, r3, #1
   1cb58:	str	r3, [fp, #-16]
   1cb5c:	ldr	r2, [fp, #-8]
   1cb60:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cb64:	add	r3, r2, r3
   1cb68:	str	r3, [fp, #-8]
   1cb6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb70:	lsl	r2, r3, #16
   1cb74:	ldr	r3, [fp, #-16]
   1cb78:	add	r3, r2, r3
   1cb7c:	str	r3, [fp, #-12]
   1cb80:	ldr	r2, [fp, #-8]
   1cb84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cb88:	cmp	r2, r3
   1cb8c:	bcc	1cbac <__assert_fail@plt+0xba54>
   1cb90:	ldr	r3, [fp, #-12]
   1cb94:	add	r3, r3, #1
   1cb98:	str	r3, [fp, #-12]
   1cb9c:	ldr	r2, [fp, #-8]
   1cba0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cba4:	sub	r3, r2, r3
   1cba8:	str	r3, [fp, #-8]
   1cbac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cbb0:	cmp	r3, #0
   1cbb4:	beq	1cdb4 <__assert_fail@plt+0xbc5c>
   1cbb8:	ldr	r3, [fp, #-8]
   1cbbc:	mvn	r3, r3
   1cbc0:	str	r3, [fp, #-8]
   1cbc4:	ldr	r2, [fp, #-8]
   1cbc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cbcc:	add	r3, r2, r3
   1cbd0:	str	r3, [fp, #-8]
   1cbd4:	ldr	r2, [fp, #-8]
   1cbd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cbdc:	cmp	r2, r3
   1cbe0:	bcs	1cc2c <__assert_fail@plt+0xbad4>
   1cbe4:	ldr	r3, [fp, #-12]
   1cbe8:	sub	r3, r3, #1
   1cbec:	str	r3, [fp, #-12]
   1cbf0:	ldr	r2, [fp, #-8]
   1cbf4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cbf8:	cmp	r2, r3
   1cbfc:	bcc	1cc1c <__assert_fail@plt+0xbac4>
   1cc00:	ldr	r3, [fp, #-12]
   1cc04:	sub	r3, r3, #1
   1cc08:	str	r3, [fp, #-12]
   1cc0c:	ldr	r2, [fp, #-8]
   1cc10:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cc14:	sub	r3, r2, r3
   1cc18:	str	r3, [fp, #-8]
   1cc1c:	ldr	r2, [fp, #-8]
   1cc20:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cc24:	sub	r3, r2, r3
   1cc28:	str	r3, [fp, #-8]
   1cc2c:	mov	r3, #32
   1cc30:	str	r3, [fp, #-40]	; 0xffffffd8
   1cc34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cc38:	str	r3, [fp, #-44]	; 0xffffffd4
   1cc3c:	ldr	r3, [fp, #-12]
   1cc40:	str	r3, [fp, #-48]	; 0xffffffd0
   1cc44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc48:	uxth	r3, r3
   1cc4c:	str	r3, [fp, #-52]	; 0xffffffcc
   1cc50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc54:	lsr	r3, r3, #16
   1cc58:	str	r3, [fp, #-56]	; 0xffffffc8
   1cc5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cc60:	uxth	r3, r3
   1cc64:	str	r3, [fp, #-60]	; 0xffffffc4
   1cc68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cc6c:	lsr	r3, r3, #16
   1cc70:	str	r3, [fp, #-64]	; 0xffffffc0
   1cc74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cc7c:	mul	r3, r2, r3
   1cc80:	str	r3, [fp, #-68]	; 0xffffffbc
   1cc84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1cc8c:	mul	r3, r2, r3
   1cc90:	str	r3, [fp, #-72]	; 0xffffffb8
   1cc94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cc98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cc9c:	mul	r3, r2, r3
   1cca0:	str	r3, [fp, #-76]	; 0xffffffb4
   1cca4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cca8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ccac:	mul	r3, r2, r3
   1ccb0:	str	r3, [fp, #-24]	; 0xffffffe8
   1ccb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ccb8:	lsr	r3, r3, #16
   1ccbc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ccc0:	add	r3, r2, r3
   1ccc4:	str	r3, [fp, #-72]	; 0xffffffb8
   1ccc8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1cccc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ccd0:	add	r3, r2, r3
   1ccd4:	str	r3, [fp, #-72]	; 0xffffffb8
   1ccd8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ccdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1cce0:	cmp	r2, r3
   1cce4:	bcs	1ccf4 <__assert_fail@plt+0xbb9c>
   1cce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ccec:	add	r3, r3, #65536	; 0x10000
   1ccf0:	str	r3, [fp, #-24]	; 0xffffffe8
   1ccf4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ccf8:	lsr	r2, r3, #16
   1ccfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd00:	add	r3, r2, r3
   1cd04:	str	r3, [fp, #-80]	; 0xffffffb0
   1cd08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1cd0c:	lsl	r2, r3, #16
   1cd10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1cd14:	uxth	r3, r3
   1cd18:	add	r3, r2, r3
   1cd1c:	str	r3, [fp, #-84]	; 0xffffffac
   1cd20:	ldr	r2, [fp, #-8]
   1cd24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cd28:	add	r3, r2, r3
   1cd2c:	str	r3, [fp, #-8]
   1cd30:	ldr	r2, [fp, #-8]
   1cd34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cd38:	cmp	r2, r3
   1cd3c:	bcs	1cdb4 <__assert_fail@plt+0xbc5c>
   1cd40:	ldr	r3, [fp, #-12]
   1cd44:	sub	r3, r3, #1
   1cd48:	str	r3, [fp, #-12]
   1cd4c:	ldr	r2, [fp, #-8]
   1cd50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cd54:	cmp	r2, r3
   1cd58:	movhi	r3, #1
   1cd5c:	movls	r3, #0
   1cd60:	uxtb	r3, r3
   1cd64:	mov	r0, r3
   1cd68:	ldr	r2, [fp, #-8]
   1cd6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cd70:	cmp	r2, r3
   1cd74:	moveq	r3, #1
   1cd78:	movne	r3, #0
   1cd7c:	uxtb	r2, r3
   1cd80:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cd84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cd88:	cmp	r1, r3
   1cd8c:	movhi	r3, #1
   1cd90:	movls	r3, #0
   1cd94:	uxtb	r3, r3
   1cd98:	and	r3, r3, r2
   1cd9c:	uxtb	r3, r3
   1cda0:	orr	r3, r0, r3
   1cda4:	mov	r2, r3
   1cda8:	ldr	r3, [fp, #-12]
   1cdac:	sub	r3, r3, r2
   1cdb0:	str	r3, [fp, #-12]
   1cdb4:	ldr	r3, [fp, #-12]
   1cdb8:	mov	r0, r3
   1cdbc:	sub	sp, fp, #4
   1cdc0:	pop	{fp, pc}
   1cdc4:	push	{fp, lr}
   1cdc8:	add	fp, sp, #4
   1cdcc:	sub	sp, sp, #24
   1cdd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1cdd4:	str	r1, [fp, #-28]	; 0xffffffe4
   1cdd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cddc:	cmp	r3, #0
   1cde0:	bne	1cdf8 <__assert_fail@plt+0xbca0>
   1cde4:	ldr	r3, [pc, #220]	; 1cec8 <__assert_fail@plt+0xbd70>
   1cde8:	ldr	r2, [pc, #220]	; 1cecc <__assert_fail@plt+0xbd74>
   1cdec:	ldr	r1, [pc, #220]	; 1ced0 <__assert_fail@plt+0xbd78>
   1cdf0:	ldr	r0, [pc, #220]	; 1ced4 <__assert_fail@plt+0xbd7c>
   1cdf4:	bl	11158 <__assert_fail@plt>
   1cdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdfc:	str	r3, [fp, #-8]
   1ce00:	mov	r3, #0
   1ce04:	str	r3, [fp, #-12]
   1ce08:	mov	r3, #8
   1ce0c:	str	r3, [fp, #-16]
   1ce10:	ldr	r3, [fp, #-16]
   1ce14:	cmp	r3, #31
   1ce18:	bhi	1ce68 <__assert_fail@plt+0xbd10>
   1ce1c:	b	1ce3c <__assert_fail@plt+0xbce4>
   1ce20:	ldr	r2, [fp, #-8]
   1ce24:	ldr	r3, [fp, #-16]
   1ce28:	lsl	r3, r2, r3
   1ce2c:	str	r3, [fp, #-8]
   1ce30:	ldr	r3, [fp, #-12]
   1ce34:	add	r3, r3, #8
   1ce38:	str	r3, [fp, #-12]
   1ce3c:	ldr	r3, [fp, #-8]
   1ce40:	and	r3, r3, #-16777216	; 0xff000000
   1ce44:	cmp	r3, #0
   1ce48:	beq	1ce20 <__assert_fail@plt+0xbcc8>
   1ce4c:	b	1ce68 <__assert_fail@plt+0xbd10>
   1ce50:	ldr	r3, [fp, #-8]
   1ce54:	lsl	r3, r3, #1
   1ce58:	str	r3, [fp, #-8]
   1ce5c:	ldr	r3, [fp, #-12]
   1ce60:	add	r3, r3, #1
   1ce64:	str	r3, [fp, #-12]
   1ce68:	ldr	r3, [fp, #-8]
   1ce6c:	cmp	r3, #0
   1ce70:	bge	1ce50 <__assert_fail@plt+0xbcf8>
   1ce74:	ldr	r3, [fp, #-12]
   1ce78:	str	r3, [fp, #-20]	; 0xffffffec
   1ce7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce80:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce84:	str	r2, [r3]
   1ce88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce90:	lsl	r2, r2, r3
   1ce94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce98:	str	r2, [r3, #4]
   1ce9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cea0:	ldr	r3, [r3, #4]
   1cea4:	mov	r1, #0
   1cea8:	mov	r0, r3
   1ceac:	bl	1c9f4 <__assert_fail@plt+0xb89c>
   1ceb0:	mov	r2, r0
   1ceb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ceb8:	str	r2, [r3, #12]
   1cebc:	nop			; (mov r0, r0)
   1cec0:	sub	sp, fp, #4
   1cec4:	pop	{fp, pc}
   1cec8:	andeq	r4, r3, ip, ror r0
   1cecc:	andeq	r0, r0, r6, lsl #7
   1ced0:	andeq	r3, r3, r0, asr #19
   1ced4:	andeq	r3, r3, r0, lsl fp
   1ced8:	push	{fp, lr}
   1cedc:	add	fp, sp, #4
   1cee0:	sub	sp, sp, #32
   1cee4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cee8:	str	r1, [fp, #-28]	; 0xffffffe4
   1ceec:	str	r2, [fp, #-32]	; 0xffffffe0
   1cef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cef4:	cmp	r3, #0
   1cef8:	bne	1cf10 <__assert_fail@plt+0xbdb8>
   1cefc:	ldr	r3, [pc, #280]	; 1d01c <__assert_fail@plt+0xbec4>
   1cf00:	ldr	r2, [pc, #280]	; 1d020 <__assert_fail@plt+0xbec8>
   1cf04:	ldr	r1, [pc, #280]	; 1d024 <__assert_fail@plt+0xbecc>
   1cf08:	ldr	r0, [pc, #280]	; 1d028 <__assert_fail@plt+0xbed0>
   1cf0c:	bl	11158 <__assert_fail@plt>
   1cf10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf14:	str	r3, [fp, #-8]
   1cf18:	mov	r3, #0
   1cf1c:	str	r3, [fp, #-12]
   1cf20:	mov	r3, #8
   1cf24:	str	r3, [fp, #-16]
   1cf28:	ldr	r3, [fp, #-16]
   1cf2c:	cmp	r3, #31
   1cf30:	bhi	1cf80 <__assert_fail@plt+0xbe28>
   1cf34:	b	1cf54 <__assert_fail@plt+0xbdfc>
   1cf38:	ldr	r2, [fp, #-8]
   1cf3c:	ldr	r3, [fp, #-16]
   1cf40:	lsl	r3, r2, r3
   1cf44:	str	r3, [fp, #-8]
   1cf48:	ldr	r3, [fp, #-12]
   1cf4c:	add	r3, r3, #8
   1cf50:	str	r3, [fp, #-12]
   1cf54:	ldr	r3, [fp, #-8]
   1cf58:	and	r3, r3, #-16777216	; 0xff000000
   1cf5c:	cmp	r3, #0
   1cf60:	beq	1cf38 <__assert_fail@plt+0xbde0>
   1cf64:	b	1cf80 <__assert_fail@plt+0xbe28>
   1cf68:	ldr	r3, [fp, #-8]
   1cf6c:	lsl	r3, r3, #1
   1cf70:	str	r3, [fp, #-8]
   1cf74:	ldr	r3, [fp, #-12]
   1cf78:	add	r3, r3, #1
   1cf7c:	str	r3, [fp, #-12]
   1cf80:	ldr	r3, [fp, #-8]
   1cf84:	cmp	r3, #0
   1cf88:	bge	1cf68 <__assert_fail@plt+0xbe10>
   1cf8c:	ldr	r3, [fp, #-12]
   1cf90:	str	r3, [fp, #-20]	; 0xffffffec
   1cf94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf98:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf9c:	str	r2, [r3]
   1cfa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfa4:	cmp	r3, #0
   1cfa8:	beq	1cfe0 <__assert_fail@plt+0xbe88>
   1cfac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cfb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfb4:	lsl	r2, r2, r3
   1cfb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfbc:	rsb	r3, r3, #32
   1cfc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cfc4:	lsr	r3, r1, r3
   1cfc8:	orr	r3, r2, r3
   1cfcc:	str	r3, [fp, #-28]	; 0xffffffe4
   1cfd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cfd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfd8:	lsl	r3, r2, r3
   1cfdc:	str	r3, [fp, #-32]	; 0xffffffe0
   1cfe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfe4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cfe8:	str	r2, [r3, #4]
   1cfec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cff0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cff4:	str	r2, [r3, #8]
   1cff8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d000:	bl	1c9f4 <__assert_fail@plt+0xb89c>
   1d004:	mov	r2, r0
   1d008:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d00c:	str	r2, [r3, #12]
   1d010:	nop			; (mov r0, r0)
   1d014:	sub	sp, fp, #4
   1d018:	pop	{fp, pc}
   1d01c:	muleq	r3, r0, r0
   1d020:	muleq	r0, r3, r3
   1d024:	andeq	r3, r3, r0, asr #19
   1d028:	andeq	r3, r3, r8, lsl fp
   1d02c:	push	{fp, lr}
   1d030:	add	fp, sp, #4
   1d034:	sub	sp, sp, #40	; 0x28
   1d038:	str	r0, [fp, #-32]	; 0xffffffe0
   1d03c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d040:	str	r2, [fp, #-40]	; 0xffffffd8
   1d044:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d048:	cmp	r3, #0
   1d04c:	bgt	1d064 <__assert_fail@plt+0xbf0c>
   1d050:	ldr	r3, [pc, #492]	; 1d244 <__assert_fail@plt+0xc0ec>
   1d054:	mov	r2, #932	; 0x3a4
   1d058:	ldr	r1, [pc, #488]	; 1d248 <__assert_fail@plt+0xc0f0>
   1d05c:	ldr	r0, [pc, #488]	; 1d24c <__assert_fail@plt+0xc0f4>
   1d060:	bl	11158 <__assert_fail@plt>
   1d064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d068:	cmp	r3, #1
   1d06c:	bne	1d088 <__assert_fail@plt+0xbf30>
   1d070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d074:	ldr	r3, [r3]
   1d078:	mov	r1, r3
   1d07c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d080:	bl	1cdc4 <__assert_fail@plt+0xbc6c>
   1d084:	b	1d238 <__assert_fail@plt+0xc0e0>
   1d088:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d08c:	cmp	r3, #2
   1d090:	bne	1d0b8 <__assert_fail@plt+0xbf60>
   1d094:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d098:	add	r3, r3, #4
   1d09c:	ldr	r1, [r3]
   1d0a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d0a4:	ldr	r3, [r3]
   1d0a8:	mov	r2, r3
   1d0ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d0b0:	bl	1ced8 <__assert_fail@plt+0xbd80>
   1d0b4:	b	1d238 <__assert_fail@plt+0xc0e0>
   1d0b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d0bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   1d0c0:	lsl	r3, r3, #2
   1d0c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d0c8:	add	r3, r2, r3
   1d0cc:	ldr	r3, [r3]
   1d0d0:	str	r3, [fp, #-8]
   1d0d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d0d8:	sub	r3, r3, #-1073741822	; 0xc0000002
   1d0dc:	lsl	r3, r3, #2
   1d0e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d0e4:	add	r3, r2, r3
   1d0e8:	ldr	r3, [r3]
   1d0ec:	str	r3, [fp, #-12]
   1d0f0:	ldr	r3, [fp, #-8]
   1d0f4:	cmp	r3, #0
   1d0f8:	bne	1d110 <__assert_fail@plt+0xbfb8>
   1d0fc:	ldr	r3, [pc, #320]	; 1d244 <__assert_fail@plt+0xc0ec>
   1d100:	ldr	r2, [pc, #328]	; 1d250 <__assert_fail@plt+0xc0f8>
   1d104:	ldr	r1, [pc, #316]	; 1d248 <__assert_fail@plt+0xc0f0>
   1d108:	ldr	r0, [pc, #324]	; 1d254 <__assert_fail@plt+0xc0fc>
   1d10c:	bl	11158 <__assert_fail@plt>
   1d110:	ldr	r3, [fp, #-8]
   1d114:	str	r3, [fp, #-16]
   1d118:	mov	r3, #0
   1d11c:	str	r3, [fp, #-20]	; 0xffffffec
   1d120:	mov	r3, #8
   1d124:	str	r3, [fp, #-24]	; 0xffffffe8
   1d128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d12c:	cmp	r3, #31
   1d130:	bhi	1d180 <__assert_fail@plt+0xc028>
   1d134:	b	1d154 <__assert_fail@plt+0xbffc>
   1d138:	ldr	r2, [fp, #-16]
   1d13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d140:	lsl	r3, r2, r3
   1d144:	str	r3, [fp, #-16]
   1d148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d14c:	add	r3, r3, #8
   1d150:	str	r3, [fp, #-20]	; 0xffffffec
   1d154:	ldr	r3, [fp, #-16]
   1d158:	and	r3, r3, #-16777216	; 0xff000000
   1d15c:	cmp	r3, #0
   1d160:	beq	1d138 <__assert_fail@plt+0xbfe0>
   1d164:	b	1d180 <__assert_fail@plt+0xc028>
   1d168:	ldr	r3, [fp, #-16]
   1d16c:	lsl	r3, r3, #1
   1d170:	str	r3, [fp, #-16]
   1d174:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d178:	add	r3, r3, #1
   1d17c:	str	r3, [fp, #-20]	; 0xffffffec
   1d180:	ldr	r3, [fp, #-16]
   1d184:	cmp	r3, #0
   1d188:	bge	1d168 <__assert_fail@plt+0xc010>
   1d18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d190:	str	r3, [fp, #-28]	; 0xffffffe4
   1d194:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d198:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d19c:	str	r2, [r3]
   1d1a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1a4:	cmp	r3, #0
   1d1a8:	beq	1d208 <__assert_fail@plt+0xc0b0>
   1d1ac:	ldr	r2, [fp, #-8]
   1d1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1b4:	lsl	r2, r2, r3
   1d1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1bc:	rsb	r3, r3, #32
   1d1c0:	ldr	r1, [fp, #-12]
   1d1c4:	lsr	r3, r1, r3
   1d1c8:	orr	r3, r2, r3
   1d1cc:	str	r3, [fp, #-8]
   1d1d0:	ldr	r2, [fp, #-12]
   1d1d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1d8:	lsl	r2, r2, r3
   1d1dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d1e0:	sub	r3, r3, #-1073741821	; 0xc0000003
   1d1e4:	lsl	r3, r3, #2
   1d1e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d1ec:	add	r3, r1, r3
   1d1f0:	ldr	r1, [r3]
   1d1f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1f8:	rsb	r3, r3, #32
   1d1fc:	lsr	r3, r1, r3
   1d200:	orr	r3, r2, r3
   1d204:	str	r3, [fp, #-12]
   1d208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d20c:	ldr	r2, [fp, #-8]
   1d210:	str	r2, [r3, #4]
   1d214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d218:	ldr	r2, [fp, #-12]
   1d21c:	str	r2, [r3, #8]
   1d220:	ldr	r1, [fp, #-12]
   1d224:	ldr	r0, [fp, #-8]
   1d228:	bl	1c9f4 <__assert_fail@plt+0xb89c>
   1d22c:	mov	r2, r0
   1d230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d234:	str	r2, [r3, #12]
   1d238:	nop			; (mov r0, r0)
   1d23c:	sub	sp, fp, #4
   1d240:	pop	{fp, pc}
   1d244:	andeq	r4, r3, r4, lsr #1
   1d248:	andeq	r3, r3, r0, asr #19
   1d24c:	andeq	r3, r3, r0, lsr #22
   1d250:			; <UNDEFINED> instruction: 0x000003b1
   1d254:	andeq	r3, r3, r8, lsl fp
   1d258:	push	{fp, lr}
   1d25c:	add	fp, sp, #4
   1d260:	sub	sp, sp, #104	; 0x68
   1d264:	str	r0, [fp, #-96]	; 0xffffffa0
   1d268:	str	r1, [fp, #-100]	; 0xffffff9c
   1d26c:	str	r2, [fp, #-104]	; 0xffffff98
   1d270:	str	r3, [fp, #-108]	; 0xffffff94
   1d274:	mov	r3, #0
   1d278:	str	r3, [fp, #-12]
   1d27c:	mov	r3, #0
   1d280:	str	r3, [fp, #-16]
   1d284:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d288:	ldr	r3, [r3]
   1d28c:	cmp	r3, #0
   1d290:	beq	1d2e4 <__assert_fail@plt+0xc18c>
   1d294:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d298:	str	r3, [fp, #-12]
   1d29c:	ldr	r3, [fp, #-12]
   1d2a0:	cmp	r3, #0
   1d2a4:	bne	1d2bc <__assert_fail@plt+0xc164>
   1d2a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d2ac:	str	r3, [fp, #-16]
   1d2b0:	ldr	r0, [fp, #-16]
   1d2b4:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   1d2b8:	str	r0, [fp, #-12]
   1d2bc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d2c0:	ldr	r3, [r3]
   1d2c4:	ldr	r2, [fp, #-104]	; 0xffffff98
   1d2c8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1d2cc:	ldr	r0, [fp, #-12]
   1d2d0:	bl	1c32c <__assert_fail@plt+0xb1d4>
   1d2d4:	str	r0, [fp, #-8]
   1d2d8:	ldr	r3, [fp, #-12]
   1d2dc:	str	r3, [fp, #-100]	; 0xffffff9c
   1d2e0:	b	1d2ec <__assert_fail@plt+0xc194>
   1d2e4:	mov	r3, #0
   1d2e8:	str	r3, [fp, #-8]
   1d2ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d2f0:	ldr	r3, [r3, #4]
   1d2f4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d2f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d2fc:	ldr	r3, [r3, #12]
   1d300:	str	r3, [fp, #-36]	; 0xffffffdc
   1d304:	b	1d524 <__assert_fail@plt+0xc3cc>
   1d308:	mov	r3, #32
   1d30c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d310:	ldr	r3, [fp, #-8]
   1d314:	str	r3, [fp, #-44]	; 0xffffffd4
   1d318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d31c:	str	r3, [fp, #-48]	; 0xffffffd0
   1d320:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d324:	uxth	r3, r3
   1d328:	str	r3, [fp, #-52]	; 0xffffffcc
   1d32c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d330:	lsr	r3, r3, #16
   1d334:	str	r3, [fp, #-56]	; 0xffffffc8
   1d338:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d33c:	uxth	r3, r3
   1d340:	str	r3, [fp, #-60]	; 0xffffffc4
   1d344:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d348:	lsr	r3, r3, #16
   1d34c:	str	r3, [fp, #-64]	; 0xffffffc0
   1d350:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d354:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d358:	mul	r3, r2, r3
   1d35c:	str	r3, [fp, #-68]	; 0xffffffbc
   1d360:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d364:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d368:	mul	r3, r2, r3
   1d36c:	str	r3, [fp, #-72]	; 0xffffffb8
   1d370:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d374:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1d378:	mul	r3, r2, r3
   1d37c:	str	r3, [fp, #-76]	; 0xffffffb4
   1d380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d384:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d388:	mul	r3, r2, r3
   1d38c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d390:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d394:	lsr	r3, r3, #16
   1d398:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d39c:	add	r3, r2, r3
   1d3a0:	str	r3, [fp, #-72]	; 0xffffffb8
   1d3a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d3a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d3ac:	add	r3, r2, r3
   1d3b0:	str	r3, [fp, #-72]	; 0xffffffb8
   1d3b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d3b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d3bc:	cmp	r2, r3
   1d3c0:	bcs	1d3d0 <__assert_fail@plt+0xc278>
   1d3c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3c8:	add	r3, r3, #65536	; 0x10000
   1d3cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1d3d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d3d4:	lsr	r2, r3, #16
   1d3d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3dc:	add	r3, r2, r3
   1d3e0:	str	r3, [fp, #-20]	; 0xffffffec
   1d3e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d3e8:	lsl	r2, r3, #16
   1d3ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d3f0:	uxth	r3, r3
   1d3f4:	add	r3, r2, r3
   1d3f8:	str	r3, [fp, #-80]	; 0xffffffb0
   1d3fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d400:	lsl	r3, r3, #2
   1d404:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1d408:	add	r3, r2, r3
   1d40c:	ldr	r2, [r3]
   1d410:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d414:	add	r3, r2, r3
   1d418:	str	r3, [fp, #-84]	; 0xffffffac
   1d41c:	ldr	r2, [fp, #-8]
   1d420:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d424:	add	r3, r2, r3
   1d428:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d42c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1d430:	cmp	r1, r2
   1d434:	movcc	r2, #1
   1d438:	movcs	r2, #0
   1d43c:	uxtb	r2, r2
   1d440:	add	r3, r3, r2
   1d444:	add	r3, r3, #1
   1d448:	str	r3, [fp, #-20]	; 0xffffffec
   1d44c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d450:	str	r3, [fp, #-80]	; 0xffffffb0
   1d454:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d458:	lsl	r3, r3, #2
   1d45c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1d460:	add	r3, r2, r3
   1d464:	ldr	r2, [r3]
   1d468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d46c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d470:	mul	r3, r1, r3
   1d474:	sub	r3, r2, r3
   1d478:	str	r3, [fp, #-24]	; 0xffffffe8
   1d47c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d480:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d484:	cmp	r2, r3
   1d488:	movhi	r3, #1
   1d48c:	movls	r3, #0
   1d490:	uxtb	r3, r3
   1d494:	rsb	r3, r3, #0
   1d498:	str	r3, [fp, #-88]	; 0xffffffa8
   1d49c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d4a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d4a4:	add	r3, r2, r3
   1d4a8:	str	r3, [fp, #-20]	; 0xffffffec
   1d4ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d4b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4b4:	and	r3, r3, r2
   1d4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4bc:	add	r3, r2, r3
   1d4c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4cc:	cmp	r2, r3
   1d4d0:	bcc	1d4f0 <__assert_fail@plt+0xc398>
   1d4d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4dc:	sub	r3, r2, r3
   1d4e0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d4e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4e8:	add	r3, r3, #1
   1d4ec:	str	r3, [fp, #-20]	; 0xffffffec
   1d4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4f4:	str	r3, [fp, #-8]
   1d4f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4fc:	str	r3, [fp, #-92]	; 0xffffffa4
   1d500:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d504:	cmp	r3, #0
   1d508:	beq	1d524 <__assert_fail@plt+0xc3cc>
   1d50c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d510:	lsl	r3, r3, #2
   1d514:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d518:	add	r3, r2, r3
   1d51c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d520:	str	r2, [r3]
   1d524:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d528:	sub	r3, r3, #1
   1d52c:	str	r3, [fp, #-104]	; 0xffffff98
   1d530:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d534:	cmp	r3, #0
   1d538:	bge	1d308 <__assert_fail@plt+0xc1b0>
   1d53c:	ldr	r3, [fp, #-16]
   1d540:	cmp	r3, #0
   1d544:	beq	1d554 <__assert_fail@plt+0xc3fc>
   1d548:	ldr	r1, [fp, #-16]
   1d54c:	ldr	r0, [fp, #-12]
   1d550:	bl	1b258 <__assert_fail@plt+0xa100>
   1d554:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d558:	ldr	r3, [r3]
   1d55c:	ldr	r2, [fp, #-8]
   1d560:	lsr	r3, r2, r3
   1d564:	mov	r0, r3
   1d568:	sub	sp, fp, #4
   1d56c:	pop	{fp, pc}
   1d570:	push	{fp, lr}
   1d574:	add	fp, sp, #4
   1d578:	sub	sp, sp, #176	; 0xb0
   1d57c:	str	r0, [fp, #-168]	; 0xffffff58
   1d580:	str	r1, [fp, #-172]	; 0xffffff54
   1d584:	str	r2, [fp, #-176]	; 0xffffff50
   1d588:	str	r3, [fp, #-180]	; 0xffffff4c
   1d58c:	ldr	r3, [fp, #-176]	; 0xffffff50
   1d590:	cmp	r3, #1
   1d594:	bgt	1d5ac <__assert_fail@plt+0xc454>
   1d598:	ldr	r3, [pc, #1376]	; 1db00 <__assert_fail@plt+0xc9a8>
   1d59c:	ldr	r2, [pc, #1376]	; 1db04 <__assert_fail@plt+0xc9ac>
   1d5a0:	ldr	r1, [pc, #1376]	; 1db08 <__assert_fail@plt+0xc9b0>
   1d5a4:	ldr	r0, [pc, #1376]	; 1db0c <__assert_fail@plt+0xc9b4>
   1d5a8:	bl	11158 <__assert_fail@plt>
   1d5ac:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1d5b0:	ldr	r3, [r3]
   1d5b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d5b8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1d5bc:	ldr	r3, [r3, #4]
   1d5c0:	str	r3, [fp, #-36]	; 0xffffffdc
   1d5c4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1d5c8:	ldr	r3, [r3, #8]
   1d5cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1d5d0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1d5d4:	ldr	r3, [r3, #12]
   1d5d8:	str	r3, [fp, #-44]	; 0xffffffd4
   1d5dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d5e0:	cmp	r3, #0
   1d5e4:	beq	1d604 <__assert_fail@plt+0xc4ac>
   1d5e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d5ec:	ldr	r2, [fp, #-176]	; 0xffffff50
   1d5f0:	ldr	r1, [fp, #-172]	; 0xffffff54
   1d5f4:	ldr	r0, [fp, #-172]	; 0xffffff54
   1d5f8:	bl	1c32c <__assert_fail@plt+0xb1d4>
   1d5fc:	str	r0, [fp, #-12]
   1d600:	b	1d60c <__assert_fail@plt+0xc4b4>
   1d604:	mov	r3, #0
   1d608:	str	r3, [fp, #-12]
   1d60c:	ldr	r3, [fp, #-176]	; 0xffffff50
   1d610:	sub	r3, r3, #-1073741823	; 0xc0000001
   1d614:	lsl	r3, r3, #2
   1d618:	ldr	r2, [fp, #-172]	; 0xffffff54
   1d61c:	add	r3, r2, r3
   1d620:	ldr	r3, [r3]
   1d624:	str	r3, [fp, #-16]
   1d628:	ldr	r3, [fp, #-176]	; 0xffffff50
   1d62c:	sub	r3, r3, #2
   1d630:	str	r3, [fp, #-8]
   1d634:	ldr	r3, [fp, #-8]
   1d638:	lsl	r3, r3, #2
   1d63c:	ldr	r2, [fp, #-172]	; 0xffffff54
   1d640:	add	r3, r2, r3
   1d644:	ldr	r3, [r3]
   1d648:	str	r3, [fp, #-48]	; 0xffffffd0
   1d64c:	mov	r3, #32
   1d650:	str	r3, [fp, #-52]	; 0xffffffcc
   1d654:	ldr	r3, [fp, #-12]
   1d658:	str	r3, [fp, #-56]	; 0xffffffc8
   1d65c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d660:	str	r3, [fp, #-60]	; 0xffffffc4
   1d664:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d668:	uxth	r3, r3
   1d66c:	str	r3, [fp, #-64]	; 0xffffffc0
   1d670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d674:	lsr	r3, r3, #16
   1d678:	str	r3, [fp, #-68]	; 0xffffffbc
   1d67c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d680:	uxth	r3, r3
   1d684:	str	r3, [fp, #-72]	; 0xffffffb8
   1d688:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d68c:	lsr	r3, r3, #16
   1d690:	str	r3, [fp, #-76]	; 0xffffffb4
   1d694:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d698:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d69c:	mul	r3, r2, r3
   1d6a0:	str	r3, [fp, #-80]	; 0xffffffb0
   1d6a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1d6a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1d6ac:	mul	r3, r2, r3
   1d6b0:	str	r3, [fp, #-84]	; 0xffffffac
   1d6b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d6b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d6bc:	mul	r3, r2, r3
   1d6c0:	str	r3, [fp, #-88]	; 0xffffffa8
   1d6c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d6c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1d6cc:	mul	r3, r2, r3
   1d6d0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d6d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6d8:	lsr	r3, r3, #16
   1d6dc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d6e0:	add	r3, r2, r3
   1d6e4:	str	r3, [fp, #-84]	; 0xffffffac
   1d6e8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d6ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d6f0:	add	r3, r2, r3
   1d6f4:	str	r3, [fp, #-84]	; 0xffffffac
   1d6f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d6fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d700:	cmp	r2, r3
   1d704:	bcs	1d714 <__assert_fail@plt+0xc5bc>
   1d708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d70c:	add	r3, r3, #65536	; 0x10000
   1d710:	str	r3, [fp, #-24]	; 0xffffffe8
   1d714:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d718:	lsr	r2, r3, #16
   1d71c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d720:	add	r3, r2, r3
   1d724:	str	r3, [fp, #-20]	; 0xffffffec
   1d728:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d72c:	lsl	r2, r3, #16
   1d730:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d734:	uxth	r3, r3
   1d738:	add	r3, r2, r3
   1d73c:	str	r3, [fp, #-92]	; 0xffffffa4
   1d740:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d744:	ldr	r3, [fp, #-16]
   1d748:	add	r3, r2, r3
   1d74c:	str	r3, [fp, #-96]	; 0xffffffa0
   1d750:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d754:	ldr	r3, [fp, #-12]
   1d758:	add	r3, r2, r3
   1d75c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1d760:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d764:	cmp	r1, r2
   1d768:	movcc	r2, #1
   1d76c:	movcs	r2, #0
   1d770:	uxtb	r2, r2
   1d774:	add	r3, r3, r2
   1d778:	str	r3, [fp, #-20]	; 0xffffffec
   1d77c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d780:	str	r3, [fp, #-92]	; 0xffffffa4
   1d784:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d78c:	mul	r3, r2, r3
   1d790:	ldr	r2, [fp, #-16]
   1d794:	sub	r3, r2, r3
   1d798:	str	r3, [fp, #-12]
   1d79c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d7a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d7a4:	sub	r3, r2, r3
   1d7a8:	str	r3, [fp, #-100]	; 0xffffff9c
   1d7ac:	ldr	r2, [fp, #-12]
   1d7b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7b4:	sub	r3, r2, r3
   1d7b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d7bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d7c0:	cmp	r1, r2
   1d7c4:	movcc	r2, #1
   1d7c8:	movcs	r2, #0
   1d7cc:	uxtb	r2, r2
   1d7d0:	sub	r3, r3, r2
   1d7d4:	str	r3, [fp, #-12]
   1d7d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1d7dc:	str	r3, [fp, #-16]
   1d7e0:	mov	r3, #32
   1d7e4:	str	r3, [fp, #-104]	; 0xffffff98
   1d7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d7ec:	str	r3, [fp, #-108]	; 0xffffff94
   1d7f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d7f4:	str	r3, [fp, #-112]	; 0xffffff90
   1d7f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d7fc:	uxth	r3, r3
   1d800:	str	r3, [fp, #-116]	; 0xffffff8c
   1d804:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d808:	lsr	r3, r3, #16
   1d80c:	str	r3, [fp, #-120]	; 0xffffff88
   1d810:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d814:	uxth	r3, r3
   1d818:	str	r3, [fp, #-124]	; 0xffffff84
   1d81c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d820:	lsr	r3, r3, #16
   1d824:	str	r3, [fp, #-128]	; 0xffffff80
   1d828:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1d82c:	ldr	r2, [fp, #-124]	; 0xffffff84
   1d830:	mul	r3, r2, r3
   1d834:	str	r3, [fp, #-132]	; 0xffffff7c
   1d838:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1d83c:	ldr	r2, [fp, #-128]	; 0xffffff80
   1d840:	mul	r3, r2, r3
   1d844:	str	r3, [fp, #-136]	; 0xffffff78
   1d848:	ldr	r3, [fp, #-120]	; 0xffffff88
   1d84c:	ldr	r2, [fp, #-124]	; 0xffffff84
   1d850:	mul	r3, r2, r3
   1d854:	str	r3, [fp, #-140]	; 0xffffff74
   1d858:	ldr	r3, [fp, #-120]	; 0xffffff88
   1d85c:	ldr	r2, [fp, #-128]	; 0xffffff80
   1d860:	mul	r3, r2, r3
   1d864:	str	r3, [fp, #-28]	; 0xffffffe4
   1d868:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1d86c:	lsr	r3, r3, #16
   1d870:	ldr	r2, [fp, #-136]	; 0xffffff78
   1d874:	add	r3, r2, r3
   1d878:	str	r3, [fp, #-136]	; 0xffffff78
   1d87c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1d880:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d884:	add	r3, r2, r3
   1d888:	str	r3, [fp, #-136]	; 0xffffff78
   1d88c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1d890:	ldr	r3, [fp, #-140]	; 0xffffff74
   1d894:	cmp	r2, r3
   1d898:	bcs	1d8a8 <__assert_fail@plt+0xc750>
   1d89c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8a0:	add	r3, r3, #65536	; 0x10000
   1d8a4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d8a8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d8ac:	lsr	r2, r3, #16
   1d8b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8b4:	add	r3, r2, r3
   1d8b8:	str	r3, [fp, #-144]	; 0xffffff70
   1d8bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d8c0:	lsl	r2, r3, #16
   1d8c4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1d8c8:	uxth	r3, r3
   1d8cc:	add	r3, r2, r3
   1d8d0:	str	r3, [fp, #-148]	; 0xffffff6c
   1d8d4:	ldr	r2, [fp, #-16]
   1d8d8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1d8dc:	sub	r3, r2, r3
   1d8e0:	str	r3, [fp, #-152]	; 0xffffff68
   1d8e4:	ldr	r2, [fp, #-12]
   1d8e8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d8ec:	sub	r3, r2, r3
   1d8f0:	ldr	r1, [fp, #-16]
   1d8f4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1d8f8:	cmp	r1, r2
   1d8fc:	movcc	r2, #1
   1d900:	movcs	r2, #0
   1d904:	uxtb	r2, r2
   1d908:	sub	r3, r3, r2
   1d90c:	str	r3, [fp, #-12]
   1d910:	ldr	r3, [fp, #-152]	; 0xffffff68
   1d914:	str	r3, [fp, #-16]
   1d918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d91c:	add	r3, r3, #1
   1d920:	str	r3, [fp, #-20]	; 0xffffffec
   1d924:	ldr	r2, [fp, #-12]
   1d928:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d92c:	cmp	r2, r3
   1d930:	movcs	r3, #1
   1d934:	movcc	r3, #0
   1d938:	uxtb	r3, r3
   1d93c:	rsb	r3, r3, #0
   1d940:	str	r3, [fp, #-156]	; 0xffffff64
   1d944:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d948:	ldr	r3, [fp, #-156]	; 0xffffff64
   1d94c:	add	r3, r2, r3
   1d950:	str	r3, [fp, #-20]	; 0xffffffec
   1d954:	ldr	r2, [fp, #-156]	; 0xffffff64
   1d958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d95c:	and	r2, r2, r3
   1d960:	ldr	r3, [fp, #-16]
   1d964:	add	r3, r2, r3
   1d968:	str	r3, [fp, #-160]	; 0xffffff60
   1d96c:	ldr	r2, [fp, #-156]	; 0xffffff64
   1d970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d974:	and	r2, r2, r3
   1d978:	ldr	r3, [fp, #-12]
   1d97c:	add	r3, r2, r3
   1d980:	ldr	r1, [fp, #-160]	; 0xffffff60
   1d984:	ldr	r2, [fp, #-16]
   1d988:	cmp	r1, r2
   1d98c:	movcc	r2, #1
   1d990:	movcs	r2, #0
   1d994:	uxtb	r2, r2
   1d998:	add	r3, r3, r2
   1d99c:	str	r3, [fp, #-12]
   1d9a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1d9a4:	str	r3, [fp, #-16]
   1d9a8:	ldr	r2, [fp, #-12]
   1d9ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9b0:	cmp	r2, r3
   1d9b4:	bcc	1da28 <__assert_fail@plt+0xc8d0>
   1d9b8:	ldr	r2, [fp, #-12]
   1d9bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9c0:	cmp	r2, r3
   1d9c4:	bhi	1d9d8 <__assert_fail@plt+0xc880>
   1d9c8:	ldr	r2, [fp, #-16]
   1d9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d9d0:	cmp	r2, r3
   1d9d4:	bcc	1da28 <__assert_fail@plt+0xc8d0>
   1d9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9dc:	add	r3, r3, #1
   1d9e0:	str	r3, [fp, #-20]	; 0xffffffec
   1d9e4:	ldr	r2, [fp, #-16]
   1d9e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d9ec:	sub	r3, r2, r3
   1d9f0:	str	r3, [fp, #-164]	; 0xffffff5c
   1d9f4:	ldr	r2, [fp, #-12]
   1d9f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9fc:	sub	r3, r2, r3
   1da00:	ldr	r1, [fp, #-16]
   1da04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1da08:	cmp	r1, r2
   1da0c:	movcc	r2, #1
   1da10:	movcs	r2, #0
   1da14:	uxtb	r2, r2
   1da18:	sub	r3, r3, r2
   1da1c:	str	r3, [fp, #-12]
   1da20:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1da24:	str	r3, [fp, #-16]
   1da28:	ldr	r3, [fp, #-168]	; 0xffffff58
   1da2c:	cmp	r3, #0
   1da30:	beq	1da4c <__assert_fail@plt+0xc8f4>
   1da34:	ldr	r3, [fp, #-8]
   1da38:	lsl	r3, r3, #2
   1da3c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1da40:	add	r3, r2, r3
   1da44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1da48:	str	r2, [r3]
   1da4c:	ldr	r3, [fp, #-8]
   1da50:	sub	r3, r3, #1
   1da54:	str	r3, [fp, #-8]
   1da58:	ldr	r3, [fp, #-8]
   1da5c:	cmp	r3, #0
   1da60:	bge	1d634 <__assert_fail@plt+0xc4dc>
   1da64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da68:	cmp	r3, #0
   1da6c:	beq	1dad8 <__assert_fail@plt+0xc980>
   1da70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da74:	rsb	r3, r3, #32
   1da78:	mvn	r2, #0
   1da7c:	lsr	r2, r2, r3
   1da80:	ldr	r3, [fp, #-16]
   1da84:	and	r3, r3, r2
   1da88:	cmp	r3, #0
   1da8c:	beq	1daa4 <__assert_fail@plt+0xc94c>
   1da90:	ldr	r3, [pc, #104]	; 1db00 <__assert_fail@plt+0xc9a8>
   1da94:	ldr	r2, [pc, #116]	; 1db10 <__assert_fail@plt+0xc9b8>
   1da98:	ldr	r1, [pc, #104]	; 1db08 <__assert_fail@plt+0xc9b0>
   1da9c:	ldr	r0, [pc, #112]	; 1db14 <__assert_fail@plt+0xc9bc>
   1daa0:	bl	11158 <__assert_fail@plt>
   1daa4:	ldr	r2, [fp, #-16]
   1daa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1daac:	lsr	r2, r2, r3
   1dab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dab4:	rsb	r3, r3, #32
   1dab8:	ldr	r1, [fp, #-12]
   1dabc:	lsl	r3, r1, r3
   1dac0:	orr	r3, r2, r3
   1dac4:	str	r3, [fp, #-16]
   1dac8:	ldr	r2, [fp, #-12]
   1dacc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dad0:	lsr	r3, r2, r3
   1dad4:	str	r3, [fp, #-12]
   1dad8:	ldr	r3, [fp, #-172]	; 0xffffff54
   1dadc:	add	r3, r3, #4
   1dae0:	ldr	r2, [fp, #-12]
   1dae4:	str	r2, [r3]
   1dae8:	ldr	r3, [fp, #-172]	; 0xffffff54
   1daec:	ldr	r2, [fp, #-16]
   1daf0:	str	r2, [r3]
   1daf4:	nop			; (mov r0, r0)
   1daf8:	sub	sp, fp, #4
   1dafc:	pop	{fp, pc}
   1db00:	strheq	r4, [r3], -r8
   1db04:	strdeq	r0, [r0], -r1
   1db08:	andeq	r3, r3, r0, asr #19
   1db0c:	andeq	r3, r3, r8, lsr #22
   1db10:	andeq	r0, r0, ip, lsl #8
   1db14:	andeq	r3, r3, r0, lsr fp
   1db18:	push	{fp, lr}
   1db1c:	add	fp, sp, #4
   1db20:	sub	sp, sp, #168	; 0xa8
   1db24:	str	r0, [fp, #-160]	; 0xffffff60
   1db28:	str	r1, [fp, #-164]	; 0xffffff5c
   1db2c:	str	r2, [fp, #-168]	; 0xffffff58
   1db30:	str	r3, [fp, #-172]	; 0xffffff54
   1db34:	ldr	r3, [fp, #8]
   1db38:	cmp	r3, #2
   1db3c:	bgt	1db54 <__assert_fail@plt+0xc9fc>
   1db40:	ldr	r3, [pc, #1704]	; 1e1f0 <__assert_fail@plt+0xd098>
   1db44:	ldr	r2, [pc, #1704]	; 1e1f4 <__assert_fail@plt+0xd09c>
   1db48:	ldr	r1, [pc, #1704]	; 1e1f8 <__assert_fail@plt+0xd0a0>
   1db4c:	ldr	r0, [pc, #1704]	; 1e1fc <__assert_fail@plt+0xd0a4>
   1db50:	bl	11158 <__assert_fail@plt>
   1db54:	ldr	r2, [fp, #-168]	; 0xffffff58
   1db58:	ldr	r3, [fp, #8]
   1db5c:	cmp	r2, r3
   1db60:	bge	1db78 <__assert_fail@plt+0xca20>
   1db64:	ldr	r3, [pc, #1668]	; 1e1f0 <__assert_fail@plt+0xd098>
   1db68:	ldr	r2, [pc, #1680]	; 1e200 <__assert_fail@plt+0xd0a8>
   1db6c:	ldr	r1, [pc, #1668]	; 1e1f8 <__assert_fail@plt+0xd0a0>
   1db70:	ldr	r0, [pc, #1676]	; 1e204 <__assert_fail@plt+0xd0ac>
   1db74:	bl	11158 <__assert_fail@plt>
   1db78:	ldr	r3, [fp, #8]
   1db7c:	sub	r3, r3, #-1073741823	; 0xc0000001
   1db80:	lsl	r3, r3, #2
   1db84:	ldr	r2, [fp, #4]
   1db88:	add	r3, r2, r3
   1db8c:	ldr	r3, [r3]
   1db90:	str	r3, [fp, #-28]	; 0xffffffe4
   1db94:	ldr	r3, [fp, #8]
   1db98:	sub	r3, r3, #-1073741822	; 0xc0000002
   1db9c:	lsl	r3, r3, #2
   1dba0:	ldr	r2, [fp, #4]
   1dba4:	add	r3, r2, r3
   1dba8:	ldr	r3, [r3]
   1dbac:	str	r3, [fp, #-32]	; 0xffffffe0
   1dbb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dbb4:	cmp	r3, #0
   1dbb8:	blt	1dbd0 <__assert_fail@plt+0xca78>
   1dbbc:	ldr	r3, [pc, #1580]	; 1e1f0 <__assert_fail@plt+0xd098>
   1dbc0:	ldr	r2, [pc, #1600]	; 1e208 <__assert_fail@plt+0xd0b0>
   1dbc4:	ldr	r1, [pc, #1580]	; 1e1f8 <__assert_fail@plt+0xd0a0>
   1dbc8:	ldr	r0, [pc, #1596]	; 1e20c <__assert_fail@plt+0xd0b4>
   1dbcc:	bl	11158 <__assert_fail@plt>
   1dbd0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1dbd4:	ldr	r3, [fp, #8]
   1dbd8:	sub	r3, r2, r3
   1dbdc:	str	r3, [fp, #-8]
   1dbe0:	ldr	r3, [fp, #8]
   1dbe4:	sub	r2, r3, #1
   1dbe8:	ldr	r3, [fp, #-8]
   1dbec:	add	r3, r2, r3
   1dbf0:	lsl	r3, r3, #2
   1dbf4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dbf8:	add	r3, r2, r3
   1dbfc:	ldr	r3, [r3]
   1dc00:	str	r3, [fp, #-16]
   1dc04:	ldr	r2, [fp, #-172]	; 0xffffff54
   1dc08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc0c:	cmp	r2, r3
   1dc10:	bne	1dc74 <__assert_fail@plt+0xcb1c>
   1dc14:	ldr	r2, [fp, #-16]
   1dc18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dc1c:	cmp	r2, r3
   1dc20:	bne	1dc74 <__assert_fail@plt+0xcb1c>
   1dc24:	mvn	r3, #0
   1dc28:	str	r3, [fp, #-12]
   1dc2c:	ldr	r3, [fp, #-8]
   1dc30:	lsl	r3, r3, #2
   1dc34:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dc38:	add	r0, r2, r3
   1dc3c:	ldr	r3, [fp, #-12]
   1dc40:	ldr	r2, [fp, #8]
   1dc44:	ldr	r1, [fp, #4]
   1dc48:	bl	1beb4 <__assert_fail@plt+0xad5c>
   1dc4c:	ldr	r3, [fp, #8]
   1dc50:	sub	r2, r3, #1
   1dc54:	ldr	r3, [fp, #-8]
   1dc58:	add	r3, r2, r3
   1dc5c:	lsl	r3, r3, #2
   1dc60:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dc64:	add	r3, r2, r3
   1dc68:	ldr	r3, [r3]
   1dc6c:	str	r3, [fp, #-172]	; 0xffffff54
   1dc70:	b	1e18c <__assert_fail@plt+0xd034>
   1dc74:	mov	r3, #32
   1dc78:	str	r3, [fp, #-36]	; 0xffffffdc
   1dc7c:	ldr	r3, [fp, #-172]	; 0xffffff54
   1dc80:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc84:	ldr	r3, [fp, #12]
   1dc88:	str	r3, [fp, #-44]	; 0xffffffd4
   1dc8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc90:	uxth	r3, r3
   1dc94:	str	r3, [fp, #-48]	; 0xffffffd0
   1dc98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc9c:	lsr	r3, r3, #16
   1dca0:	str	r3, [fp, #-52]	; 0xffffffcc
   1dca4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dca8:	uxth	r3, r3
   1dcac:	str	r3, [fp, #-56]	; 0xffffffc8
   1dcb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dcb4:	lsr	r3, r3, #16
   1dcb8:	str	r3, [fp, #-60]	; 0xffffffc4
   1dcbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dcc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dcc4:	mul	r3, r2, r3
   1dcc8:	str	r3, [fp, #-64]	; 0xffffffc0
   1dccc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dcd0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1dcd4:	mul	r3, r2, r3
   1dcd8:	str	r3, [fp, #-68]	; 0xffffffbc
   1dcdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dce0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dce4:	mul	r3, r2, r3
   1dce8:	str	r3, [fp, #-72]	; 0xffffffb8
   1dcec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dcf0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1dcf4:	mul	r3, r2, r3
   1dcf8:	str	r3, [fp, #-20]	; 0xffffffec
   1dcfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1dd00:	lsr	r3, r3, #16
   1dd04:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1dd08:	add	r3, r2, r3
   1dd0c:	str	r3, [fp, #-68]	; 0xffffffbc
   1dd10:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1dd14:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1dd18:	add	r3, r2, r3
   1dd1c:	str	r3, [fp, #-68]	; 0xffffffbc
   1dd20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1dd24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1dd28:	cmp	r2, r3
   1dd2c:	bcs	1dd3c <__assert_fail@plt+0xcbe4>
   1dd30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd34:	add	r3, r3, #65536	; 0x10000
   1dd38:	str	r3, [fp, #-20]	; 0xffffffec
   1dd3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1dd40:	lsr	r2, r3, #16
   1dd44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd48:	add	r3, r2, r3
   1dd4c:	str	r3, [fp, #-12]
   1dd50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1dd54:	lsl	r2, r3, #16
   1dd58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1dd5c:	uxth	r3, r3
   1dd60:	add	r3, r2, r3
   1dd64:	str	r3, [fp, #-76]	; 0xffffffb4
   1dd68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1dd6c:	ldr	r3, [fp, #-16]
   1dd70:	add	r3, r2, r3
   1dd74:	str	r3, [fp, #-80]	; 0xffffffb0
   1dd78:	ldr	r2, [fp, #-12]
   1dd7c:	ldr	r3, [fp, #-172]	; 0xffffff54
   1dd80:	add	r3, r2, r3
   1dd84:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1dd88:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1dd8c:	cmp	r1, r2
   1dd90:	movcc	r2, #1
   1dd94:	movcs	r2, #0
   1dd98:	uxtb	r2, r2
   1dd9c:	add	r3, r3, r2
   1dda0:	str	r3, [fp, #-12]
   1dda4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1dda8:	str	r3, [fp, #-76]	; 0xffffffb4
   1ddac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddb0:	ldr	r2, [fp, #-12]
   1ddb4:	mul	r3, r2, r3
   1ddb8:	ldr	r2, [fp, #-16]
   1ddbc:	sub	r3, r2, r3
   1ddc0:	str	r3, [fp, #-172]	; 0xffffff54
   1ddc4:	ldr	r3, [fp, #8]
   1ddc8:	sub	r2, r3, #2
   1ddcc:	ldr	r3, [fp, #-8]
   1ddd0:	add	r3, r2, r3
   1ddd4:	lsl	r3, r3, #2
   1ddd8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1dddc:	add	r3, r2, r3
   1dde0:	ldr	r2, [r3]
   1dde4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dde8:	sub	r3, r2, r3
   1ddec:	str	r3, [fp, #-84]	; 0xffffffac
   1ddf0:	ldr	r2, [fp, #-172]	; 0xffffff54
   1ddf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddf8:	sub	r3, r2, r3
   1ddfc:	ldr	r2, [fp, #8]
   1de00:	sub	r1, r2, #2
   1de04:	ldr	r2, [fp, #-8]
   1de08:	add	r2, r1, r2
   1de0c:	lsl	r2, r2, #2
   1de10:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1de14:	add	r2, r1, r2
   1de18:	ldr	r1, [r2]
   1de1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1de20:	cmp	r1, r2
   1de24:	movcc	r2, #1
   1de28:	movcs	r2, #0
   1de2c:	uxtb	r2, r2
   1de30:	sub	r3, r3, r2
   1de34:	str	r3, [fp, #-172]	; 0xffffff54
   1de38:	ldr	r3, [fp, #-84]	; 0xffffffac
   1de3c:	str	r3, [fp, #-16]
   1de40:	mov	r3, #32
   1de44:	str	r3, [fp, #-88]	; 0xffffffa8
   1de48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de4c:	str	r3, [fp, #-92]	; 0xffffffa4
   1de50:	ldr	r3, [fp, #-12]
   1de54:	str	r3, [fp, #-96]	; 0xffffffa0
   1de58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1de5c:	uxth	r3, r3
   1de60:	str	r3, [fp, #-100]	; 0xffffff9c
   1de64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1de68:	lsr	r3, r3, #16
   1de6c:	str	r3, [fp, #-104]	; 0xffffff98
   1de70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1de74:	uxth	r3, r3
   1de78:	str	r3, [fp, #-108]	; 0xffffff94
   1de7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1de80:	lsr	r3, r3, #16
   1de84:	str	r3, [fp, #-112]	; 0xffffff90
   1de88:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1de8c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1de90:	mul	r3, r2, r3
   1de94:	str	r3, [fp, #-116]	; 0xffffff8c
   1de98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1de9c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dea0:	mul	r3, r2, r3
   1dea4:	str	r3, [fp, #-120]	; 0xffffff88
   1dea8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1deac:	ldr	r2, [fp, #-108]	; 0xffffff94
   1deb0:	mul	r3, r2, r3
   1deb4:	str	r3, [fp, #-124]	; 0xffffff84
   1deb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1debc:	ldr	r2, [fp, #-112]	; 0xffffff90
   1dec0:	mul	r3, r2, r3
   1dec4:	str	r3, [fp, #-24]	; 0xffffffe8
   1dec8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1decc:	lsr	r3, r3, #16
   1ded0:	ldr	r2, [fp, #-120]	; 0xffffff88
   1ded4:	add	r3, r2, r3
   1ded8:	str	r3, [fp, #-120]	; 0xffffff88
   1dedc:	ldr	r2, [fp, #-120]	; 0xffffff88
   1dee0:	ldr	r3, [fp, #-124]	; 0xffffff84
   1dee4:	add	r3, r2, r3
   1dee8:	str	r3, [fp, #-120]	; 0xffffff88
   1deec:	ldr	r2, [fp, #-120]	; 0xffffff88
   1def0:	ldr	r3, [fp, #-124]	; 0xffffff84
   1def4:	cmp	r2, r3
   1def8:	bcs	1df08 <__assert_fail@plt+0xcdb0>
   1defc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df00:	add	r3, r3, #65536	; 0x10000
   1df04:	str	r3, [fp, #-24]	; 0xffffffe8
   1df08:	ldr	r3, [fp, #-120]	; 0xffffff88
   1df0c:	lsr	r2, r3, #16
   1df10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df14:	add	r3, r2, r3
   1df18:	str	r3, [fp, #-128]	; 0xffffff80
   1df1c:	ldr	r3, [fp, #-120]	; 0xffffff88
   1df20:	lsl	r2, r3, #16
   1df24:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1df28:	uxth	r3, r3
   1df2c:	add	r3, r2, r3
   1df30:	str	r3, [fp, #-132]	; 0xffffff7c
   1df34:	ldr	r2, [fp, #-16]
   1df38:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1df3c:	sub	r3, r2, r3
   1df40:	str	r3, [fp, #-136]	; 0xffffff78
   1df44:	ldr	r2, [fp, #-172]	; 0xffffff54
   1df48:	ldr	r3, [fp, #-128]	; 0xffffff80
   1df4c:	sub	r3, r2, r3
   1df50:	ldr	r1, [fp, #-16]
   1df54:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1df58:	cmp	r1, r2
   1df5c:	movcc	r2, #1
   1df60:	movcs	r2, #0
   1df64:	uxtb	r2, r2
   1df68:	sub	r3, r3, r2
   1df6c:	str	r3, [fp, #-172]	; 0xffffff54
   1df70:	ldr	r3, [fp, #-136]	; 0xffffff78
   1df74:	str	r3, [fp, #-16]
   1df78:	ldr	r3, [fp, #-12]
   1df7c:	add	r3, r3, #1
   1df80:	str	r3, [fp, #-12]
   1df84:	ldr	r2, [fp, #-172]	; 0xffffff54
   1df88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1df8c:	cmp	r2, r3
   1df90:	movcs	r3, #1
   1df94:	movcc	r3, #0
   1df98:	uxtb	r3, r3
   1df9c:	rsb	r3, r3, #0
   1dfa0:	str	r3, [fp, #-140]	; 0xffffff74
   1dfa4:	ldr	r2, [fp, #-12]
   1dfa8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1dfac:	add	r3, r2, r3
   1dfb0:	str	r3, [fp, #-12]
   1dfb4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1dfb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfbc:	and	r2, r2, r3
   1dfc0:	ldr	r3, [fp, #-16]
   1dfc4:	add	r3, r2, r3
   1dfc8:	str	r3, [fp, #-144]	; 0xffffff70
   1dfcc:	ldr	r2, [fp, #-140]	; 0xffffff74
   1dfd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dfd4:	and	r2, r2, r3
   1dfd8:	ldr	r3, [fp, #-172]	; 0xffffff54
   1dfdc:	add	r3, r2, r3
   1dfe0:	ldr	r1, [fp, #-144]	; 0xffffff70
   1dfe4:	ldr	r2, [fp, #-16]
   1dfe8:	cmp	r1, r2
   1dfec:	movcc	r2, #1
   1dff0:	movcs	r2, #0
   1dff4:	uxtb	r2, r2
   1dff8:	add	r3, r3, r2
   1dffc:	str	r3, [fp, #-172]	; 0xffffff54
   1e000:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e004:	str	r3, [fp, #-16]
   1e008:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e00c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e010:	cmp	r2, r3
   1e014:	bcc	1e088 <__assert_fail@plt+0xcf30>
   1e018:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e01c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e020:	cmp	r2, r3
   1e024:	bhi	1e038 <__assert_fail@plt+0xcee0>
   1e028:	ldr	r2, [fp, #-16]
   1e02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e030:	cmp	r2, r3
   1e034:	bcc	1e088 <__assert_fail@plt+0xcf30>
   1e038:	ldr	r3, [fp, #-12]
   1e03c:	add	r3, r3, #1
   1e040:	str	r3, [fp, #-12]
   1e044:	ldr	r2, [fp, #-16]
   1e048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e04c:	sub	r3, r2, r3
   1e050:	str	r3, [fp, #-148]	; 0xffffff6c
   1e054:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e05c:	sub	r3, r2, r3
   1e060:	ldr	r1, [fp, #-16]
   1e064:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e068:	cmp	r1, r2
   1e06c:	movcc	r2, #1
   1e070:	movcs	r2, #0
   1e074:	uxtb	r2, r2
   1e078:	sub	r3, r3, r2
   1e07c:	str	r3, [fp, #-172]	; 0xffffff54
   1e080:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1e084:	str	r3, [fp, #-16]
   1e088:	ldr	r3, [fp, #-8]
   1e08c:	lsl	r3, r3, #2
   1e090:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e094:	add	r0, r2, r3
   1e098:	ldr	r3, [fp, #8]
   1e09c:	sub	r2, r3, #2
   1e0a0:	ldr	r3, [fp, #-12]
   1e0a4:	ldr	r1, [fp, #4]
   1e0a8:	bl	1beb4 <__assert_fail@plt+0xad5c>
   1e0ac:	str	r0, [fp, #-152]	; 0xffffff68
   1e0b0:	ldr	r2, [fp, #-16]
   1e0b4:	ldr	r3, [fp, #-152]	; 0xffffff68
   1e0b8:	cmp	r2, r3
   1e0bc:	movcc	r3, #1
   1e0c0:	movcs	r3, #0
   1e0c4:	uxtb	r3, r3
   1e0c8:	str	r3, [fp, #-156]	; 0xffffff64
   1e0cc:	ldr	r2, [fp, #-16]
   1e0d0:	ldr	r3, [fp, #-152]	; 0xffffff68
   1e0d4:	sub	r3, r2, r3
   1e0d8:	str	r3, [fp, #-16]
   1e0dc:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e0e0:	ldr	r3, [fp, #-156]	; 0xffffff64
   1e0e4:	cmp	r2, r3
   1e0e8:	movcc	r3, #1
   1e0ec:	movcs	r3, #0
   1e0f0:	uxtb	r3, r3
   1e0f4:	str	r3, [fp, #-152]	; 0xffffff68
   1e0f8:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e0fc:	ldr	r3, [fp, #-156]	; 0xffffff64
   1e100:	sub	r3, r2, r3
   1e104:	str	r3, [fp, #-172]	; 0xffffff54
   1e108:	ldr	r3, [fp, #8]
   1e10c:	sub	r2, r3, #2
   1e110:	ldr	r3, [fp, #-8]
   1e114:	add	r3, r2, r3
   1e118:	lsl	r3, r3, #2
   1e11c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e120:	add	r3, r2, r3
   1e124:	ldr	r2, [fp, #-16]
   1e128:	str	r2, [r3]
   1e12c:	ldr	r3, [fp, #-152]	; 0xffffff68
   1e130:	cmp	r3, #0
   1e134:	beq	1e18c <__assert_fail@plt+0xd034>
   1e138:	ldr	r3, [fp, #-8]
   1e13c:	lsl	r3, r3, #2
   1e140:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e144:	add	r0, r2, r3
   1e148:	ldr	r3, [fp, #-8]
   1e14c:	lsl	r3, r3, #2
   1e150:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e154:	add	r1, r2, r3
   1e158:	ldr	r3, [fp, #8]
   1e15c:	sub	r3, r3, #1
   1e160:	ldr	r2, [fp, #4]
   1e164:	bl	1b670 <__assert_fail@plt+0xa518>
   1e168:	mov	r2, r0
   1e16c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e170:	add	r3, r2, r3
   1e174:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e178:	add	r3, r2, r3
   1e17c:	str	r3, [fp, #-172]	; 0xffffff54
   1e180:	ldr	r3, [fp, #-12]
   1e184:	sub	r3, r3, #1
   1e188:	str	r3, [fp, #-12]
   1e18c:	ldr	r3, [fp, #-160]	; 0xffffff60
   1e190:	cmp	r3, #0
   1e194:	beq	1e1b0 <__assert_fail@plt+0xd058>
   1e198:	ldr	r3, [fp, #-8]
   1e19c:	lsl	r3, r3, #2
   1e1a0:	ldr	r2, [fp, #-160]	; 0xffffff60
   1e1a4:	add	r3, r2, r3
   1e1a8:	ldr	r2, [fp, #-12]
   1e1ac:	str	r2, [r3]
   1e1b0:	ldr	r3, [fp, #-8]
   1e1b4:	sub	r3, r3, #1
   1e1b8:	str	r3, [fp, #-8]
   1e1bc:	ldr	r3, [fp, #-8]
   1e1c0:	cmp	r3, #0
   1e1c4:	bge	1dbe0 <__assert_fail@plt+0xca88>
   1e1c8:	ldr	r3, [fp, #8]
   1e1cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   1e1d0:	lsl	r3, r3, #2
   1e1d4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1e1d8:	add	r3, r2, r3
   1e1dc:	ldr	r2, [fp, #-172]	; 0xffffff54
   1e1e0:	str	r2, [r3]
   1e1e4:	nop			; (mov r0, r0)
   1e1e8:	sub	sp, fp, #4
   1e1ec:	pop	{fp, pc}
   1e1f0:	andeq	r4, r3, ip, asr #1
   1e1f4:	andeq	r0, r0, r1, lsr #8
   1e1f8:	andeq	r3, r3, r0, asr #19
   1e1fc:	andeq	r3, r3, r8, ror #22
   1e200:	andeq	r0, r0, r2, lsr #8
   1e204:	andeq	r3, r3, r0, ror fp
   1e208:	andeq	r0, r0, r7, lsr #8
   1e20c:	andeq	r3, r3, ip, ror fp
   1e210:	push	{fp, lr}
   1e214:	add	fp, sp, #4
   1e218:	sub	sp, sp, #48	; 0x30
   1e21c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e220:	str	r1, [fp, #-28]	; 0xffffffe4
   1e224:	str	r2, [fp, #-32]	; 0xffffffe0
   1e228:	str	r3, [fp, #-36]	; 0xffffffdc
   1e22c:	ldr	r3, [fp, #4]
   1e230:	cmp	r3, #0
   1e234:	bgt	1e24c <__assert_fail@plt+0xd0f4>
   1e238:	ldr	r3, [pc, #476]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e23c:	ldr	r2, [pc, #476]	; 1e420 <__assert_fail@plt+0xd2c8>
   1e240:	ldr	r1, [pc, #476]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e244:	ldr	r0, [pc, #476]	; 1e428 <__assert_fail@plt+0xd2d0>
   1e248:	bl	11158 <__assert_fail@plt>
   1e24c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e250:	ldr	r3, [fp, #4]
   1e254:	cmp	r2, r3
   1e258:	bge	1e270 <__assert_fail@plt+0xd118>
   1e25c:	ldr	r3, [pc, #440]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e260:	ldr	r2, [pc, #452]	; 1e42c <__assert_fail@plt+0xd2d4>
   1e264:	ldr	r1, [pc, #440]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e268:	ldr	r0, [pc, #448]	; 1e430 <__assert_fail@plt+0xd2d8>
   1e26c:	bl	11158 <__assert_fail@plt>
   1e270:	ldr	r3, [fp, #4]
   1e274:	cmp	r3, #1
   1e278:	bne	1e2a0 <__assert_fail@plt+0xd148>
   1e27c:	ldr	r3, [fp, #8]
   1e280:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e28c:	bl	1d258 <__assert_fail@plt+0xc100>
   1e290:	mov	r2, r0
   1e294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e298:	str	r2, [r3]
   1e29c:	b	1e410 <__assert_fail@plt+0xd2b8>
   1e2a0:	ldr	r3, [fp, #4]
   1e2a4:	cmp	r3, #2
   1e2a8:	bne	1e2c4 <__assert_fail@plt+0xd16c>
   1e2ac:	ldr	r3, [fp, #8]
   1e2b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e2b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e2b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2bc:	bl	1d570 <__assert_fail@plt+0xc418>
   1e2c0:	b	1e410 <__assert_fail@plt+0xd2b8>
   1e2c4:	ldr	r3, [fp, #8]
   1e2c8:	ldr	r2, [r3, #4]
   1e2cc:	ldr	r3, [fp, #4]
   1e2d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   1e2d4:	lsl	r3, r3, #2
   1e2d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2dc:	add	r3, r1, r3
   1e2e0:	ldr	r3, [r3]
   1e2e4:	cmp	r2, r3
   1e2e8:	beq	1e300 <__assert_fail@plt+0xd1a8>
   1e2ec:	ldr	r3, [pc, #296]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e2f0:	ldr	r2, [pc, #316]	; 1e434 <__assert_fail@plt+0xd2dc>
   1e2f4:	ldr	r1, [pc, #296]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e2f8:	ldr	r0, [pc, #312]	; 1e438 <__assert_fail@plt+0xd2e0>
   1e2fc:	bl	11158 <__assert_fail@plt>
   1e300:	ldr	r3, [fp, #8]
   1e304:	ldr	r2, [r3, #8]
   1e308:	ldr	r3, [fp, #4]
   1e30c:	sub	r3, r3, #-1073741822	; 0xc0000002
   1e310:	lsl	r3, r3, #2
   1e314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e318:	add	r3, r1, r3
   1e31c:	ldr	r3, [r3]
   1e320:	cmp	r2, r3
   1e324:	beq	1e33c <__assert_fail@plt+0xd1e4>
   1e328:	ldr	r3, [pc, #236]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e32c:	ldr	r2, [pc, #264]	; 1e43c <__assert_fail@plt+0xd2e4>
   1e330:	ldr	r1, [pc, #236]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e334:	ldr	r0, [pc, #260]	; 1e440 <__assert_fail@plt+0xd2e8>
   1e338:	bl	11158 <__assert_fail@plt>
   1e33c:	ldr	r3, [fp, #8]
   1e340:	ldr	r3, [r3, #4]
   1e344:	cmp	r3, #0
   1e348:	blt	1e360 <__assert_fail@plt+0xd208>
   1e34c:	ldr	r3, [pc, #200]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e350:	ldr	r2, [pc, #236]	; 1e444 <__assert_fail@plt+0xd2ec>
   1e354:	ldr	r1, [pc, #200]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e358:	ldr	r0, [pc, #232]	; 1e448 <__assert_fail@plt+0xd2f0>
   1e35c:	bl	11158 <__assert_fail@plt>
   1e360:	ldr	r3, [fp, #8]
   1e364:	ldr	r3, [r3]
   1e368:	str	r3, [fp, #-12]
   1e36c:	ldr	r3, [fp, #-12]
   1e370:	cmp	r3, #0
   1e374:	beq	1e394 <__assert_fail@plt+0xd23c>
   1e378:	ldr	r3, [fp, #-12]
   1e37c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e388:	bl	1c32c <__assert_fail@plt+0xb1d4>
   1e38c:	str	r0, [fp, #-8]
   1e390:	b	1e39c <__assert_fail@plt+0xd244>
   1e394:	mov	r3, #0
   1e398:	str	r3, [fp, #-8]
   1e39c:	ldr	r3, [fp, #8]
   1e3a0:	ldr	r3, [r3, #12]
   1e3a4:	str	r3, [sp, #8]
   1e3a8:	ldr	r3, [fp, #4]
   1e3ac:	str	r3, [sp, #4]
   1e3b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e3b4:	str	r3, [sp]
   1e3b8:	ldr	r3, [fp, #-8]
   1e3bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e3c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c8:	bl	1db18 <__assert_fail@plt+0xc9c0>
   1e3cc:	ldr	r3, [fp, #-12]
   1e3d0:	cmp	r3, #0
   1e3d4:	beq	1e410 <__assert_fail@plt+0xd2b8>
   1e3d8:	ldr	r3, [fp, #-12]
   1e3dc:	ldr	r2, [fp, #4]
   1e3e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e3e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e3e8:	bl	1c4c4 <__assert_fail@plt+0xb36c>
   1e3ec:	str	r0, [fp, #-16]
   1e3f0:	ldr	r3, [fp, #-16]
   1e3f4:	cmp	r3, #0
   1e3f8:	beq	1e410 <__assert_fail@plt+0xd2b8>
   1e3fc:	ldr	r3, [pc, #24]	; 1e41c <__assert_fail@plt+0xd2c4>
   1e400:	ldr	r2, [pc, #68]	; 1e44c <__assert_fail@plt+0xd2f4>
   1e404:	ldr	r1, [pc, #24]	; 1e424 <__assert_fail@plt+0xd2cc>
   1e408:	ldr	r0, [pc, #64]	; 1e450 <__assert_fail@plt+0xd2f8>
   1e40c:	bl	11158 <__assert_fail@plt>
   1e410:	nop			; (mov r0, r0)
   1e414:	sub	sp, fp, #4
   1e418:	pop	{fp, pc}
   1e41c:	ldrdeq	r4, [r3], -ip
   1e420:	andeq	r0, r0, r9, asr r4
   1e424:	andeq	r3, r3, r0, asr #19
   1e428:	andeq	r3, r3, r0, lsr #22
   1e42c:	andeq	r0, r0, sl, asr r4
   1e430:	andeq	r3, r3, r0, ror fp
   1e434:	andeq	r0, r0, r5, ror #8
   1e438:	muleq	r3, ip, fp
   1e43c:	andeq	r0, r0, r6, ror #8
   1e440:			; <UNDEFINED> instruction: 0x00033bb0
   1e444:	andeq	r0, r0, r7, ror #8
   1e448:	andeq	r3, r3, r4, asr #23
   1e44c:	andeq	r0, r0, r2, ror r4
   1e450:	andeq	r3, r3, r8, ror #23
   1e454:	push	{fp, lr}
   1e458:	add	fp, sp, #4
   1e45c:	sub	sp, sp, #48	; 0x30
   1e460:	str	r0, [fp, #-32]	; 0xffffffe0
   1e464:	str	r1, [fp, #-36]	; 0xffffffdc
   1e468:	str	r2, [fp, #-40]	; 0xffffffd8
   1e46c:	str	r3, [fp, #-44]	; 0xffffffd4
   1e470:	mov	r3, #0
   1e474:	str	r3, [fp, #-8]
   1e478:	ldr	r3, [fp, #4]
   1e47c:	cmp	r3, #0
   1e480:	bgt	1e498 <__assert_fail@plt+0xd340>
   1e484:	ldr	r3, [pc, #240]	; 1e57c <__assert_fail@plt+0xd424>
   1e488:	ldr	r2, [pc, #240]	; 1e580 <__assert_fail@plt+0xd428>
   1e48c:	ldr	r1, [pc, #240]	; 1e584 <__assert_fail@plt+0xd42c>
   1e490:	ldr	r0, [pc, #240]	; 1e588 <__assert_fail@plt+0xd430>
   1e494:	bl	11158 <__assert_fail@plt>
   1e498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e49c:	ldr	r3, [fp, #4]
   1e4a0:	cmp	r2, r3
   1e4a4:	bge	1e4bc <__assert_fail@plt+0xd364>
   1e4a8:	ldr	r3, [pc, #204]	; 1e57c <__assert_fail@plt+0xd424>
   1e4ac:	ldr	r2, [pc, #216]	; 1e58c <__assert_fail@plt+0xd434>
   1e4b0:	ldr	r1, [pc, #204]	; 1e584 <__assert_fail@plt+0xd42c>
   1e4b4:	ldr	r0, [pc, #212]	; 1e590 <__assert_fail@plt+0xd438>
   1e4b8:	bl	11158 <__assert_fail@plt>
   1e4bc:	sub	r3, fp, #28
   1e4c0:	ldr	r2, [fp, #4]
   1e4c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e4c8:	mov	r0, r3
   1e4cc:	bl	1d02c <__assert_fail@plt+0xbed4>
   1e4d0:	ldr	r3, [fp, #4]
   1e4d4:	cmp	r3, #2
   1e4d8:	ble	1e534 <__assert_fail@plt+0xd3dc>
   1e4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4e0:	cmp	r3, #0
   1e4e4:	beq	1e534 <__assert_fail@plt+0xd3dc>
   1e4e8:	ldr	r0, [fp, #4]
   1e4ec:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   1e4f0:	str	r0, [fp, #-8]
   1e4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4f8:	ldr	r2, [fp, #4]
   1e4fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e500:	ldr	r0, [fp, #-8]
   1e504:	bl	1c32c <__assert_fail@plt+0xb1d4>
   1e508:	str	r0, [fp, #-12]
   1e50c:	ldr	r3, [fp, #-12]
   1e510:	cmp	r3, #0
   1e514:	beq	1e52c <__assert_fail@plt+0xd3d4>
   1e518:	ldr	r3, [pc, #92]	; 1e57c <__assert_fail@plt+0xd424>
   1e51c:	ldr	r2, [pc, #112]	; 1e594 <__assert_fail@plt+0xd43c>
   1e520:	ldr	r1, [pc, #92]	; 1e584 <__assert_fail@plt+0xd42c>
   1e524:	ldr	r0, [pc, #108]	; 1e598 <__assert_fail@plt+0xd440>
   1e528:	bl	11158 <__assert_fail@plt>
   1e52c:	ldr	r3, [fp, #-8]
   1e530:	str	r3, [fp, #-44]	; 0xffffffd4
   1e534:	sub	r3, fp, #28
   1e538:	str	r3, [sp, #4]
   1e53c:	ldr	r3, [fp, #4]
   1e540:	str	r3, [sp]
   1e544:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e548:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e54c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e554:	bl	1e210 <__assert_fail@plt+0xd0b8>
   1e558:	ldr	r3, [fp, #-8]
   1e55c:	cmp	r3, #0
   1e560:	beq	1e570 <__assert_fail@plt+0xd418>
   1e564:	ldr	r1, [fp, #4]
   1e568:	ldr	r0, [fp, #-8]
   1e56c:	bl	1b258 <__assert_fail@plt+0xa100>
   1e570:	nop			; (mov r0, r0)
   1e574:	sub	sp, fp, #4
   1e578:	pop	{fp, pc}
   1e57c:	strdeq	r4, [r3], -r0
   1e580:	andeq	r0, r0, ip, ror r4
   1e584:	andeq	r3, r3, r0, asr #19
   1e588:	andeq	r3, r3, r0, lsr #22
   1e58c:	andeq	r0, r0, sp, ror r4
   1e590:	andeq	r3, r3, r0, ror fp
   1e594:	andeq	r0, r0, r3, lsl #9
   1e598:	andeq	r3, r3, r8, ror #23
   1e59c:	push	{fp}		; (str fp, [sp, #-4]!)
   1e5a0:	add	fp, sp, #0
   1e5a4:	sub	sp, sp, #12
   1e5a8:	str	r0, [fp, #-8]
   1e5ac:	ldr	r3, [fp, #-8]
   1e5b0:	cmp	r3, #16
   1e5b4:	beq	1e624 <__assert_fail@plt+0xd4cc>
   1e5b8:	cmp	r3, #16
   1e5bc:	bhi	1e5dc <__assert_fail@plt+0xd484>
   1e5c0:	cmp	r3, #4
   1e5c4:	beq	1e614 <__assert_fail@plt+0xd4bc>
   1e5c8:	cmp	r3, #8
   1e5cc:	beq	1e61c <__assert_fail@plt+0xd4c4>
   1e5d0:	cmp	r3, #2
   1e5d4:	beq	1e60c <__assert_fail@plt+0xd4b4>
   1e5d8:	b	1e64c <__assert_fail@plt+0xd4f4>
   1e5dc:	cmp	r3, #64	; 0x40
   1e5e0:	beq	1e634 <__assert_fail@plt+0xd4dc>
   1e5e4:	cmp	r3, #64	; 0x40
   1e5e8:	bhi	1e5f8 <__assert_fail@plt+0xd4a0>
   1e5ec:	cmp	r3, #32
   1e5f0:	beq	1e62c <__assert_fail@plt+0xd4d4>
   1e5f4:	b	1e64c <__assert_fail@plt+0xd4f4>
   1e5f8:	cmp	r3, #128	; 0x80
   1e5fc:	beq	1e63c <__assert_fail@plt+0xd4e4>
   1e600:	cmp	r3, #256	; 0x100
   1e604:	beq	1e644 <__assert_fail@plt+0xd4ec>
   1e608:	b	1e64c <__assert_fail@plt+0xd4f4>
   1e60c:	mov	r3, #1
   1e610:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e614:	mov	r3, #2
   1e618:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e61c:	mov	r3, #3
   1e620:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e624:	mov	r3, #4
   1e628:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e62c:	mov	r3, #5
   1e630:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e634:	mov	r3, #6
   1e638:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e63c:	mov	r3, #7
   1e640:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e644:	mov	r3, #8
   1e648:	b	1e650 <__assert_fail@plt+0xd4f8>
   1e64c:	mov	r3, #0
   1e650:	mov	r0, r3
   1e654:	add	sp, fp, #0
   1e658:	pop	{fp}		; (ldr fp, [sp], #4)
   1e65c:	bx	lr
   1e660:	push	{fp, lr}
   1e664:	add	fp, sp, #4
   1e668:	sub	sp, sp, #24
   1e66c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e670:	str	r1, [fp, #-28]	; 0xffffffe4
   1e674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e678:	mvn	r0, #0
   1e67c:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   1e680:	mov	r3, r0
   1e684:	str	r3, [fp, #-16]
   1e688:	mov	r3, #1
   1e68c:	str	r3, [fp, #-12]
   1e690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e694:	str	r3, [fp, #-8]
   1e698:	b	1e6b8 <__assert_fail@plt+0xd560>
   1e69c:	ldr	r3, [fp, #-8]
   1e6a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e6a4:	mul	r3, r2, r3
   1e6a8:	str	r3, [fp, #-8]
   1e6ac:	ldr	r3, [fp, #-12]
   1e6b0:	add	r3, r3, #1
   1e6b4:	str	r3, [fp, #-12]
   1e6b8:	ldr	r2, [fp, #-8]
   1e6bc:	ldr	r3, [fp, #-16]
   1e6c0:	cmp	r2, r3
   1e6c4:	bls	1e69c <__assert_fail@plt+0xd544>
   1e6c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6cc:	ldr	r2, [fp, #-12]
   1e6d0:	str	r2, [r3]
   1e6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6d8:	ldr	r2, [fp, #-8]
   1e6dc:	str	r2, [r3, #4]
   1e6e0:	nop			; (mov r0, r0)
   1e6e4:	sub	sp, fp, #4
   1e6e8:	pop	{fp, pc}
   1e6ec:	push	{fp, lr}
   1e6f0:	add	fp, sp, #4
   1e6f4:	sub	sp, sp, #24
   1e6f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e700:	cmp	r3, #0
   1e704:	bne	1e71c <__assert_fail@plt+0xd5c4>
   1e708:	ldr	r3, [pc, #164]	; 1e7b4 <__assert_fail@plt+0xd65c>
   1e70c:	ldr	r2, [pc, #164]	; 1e7b8 <__assert_fail@plt+0xd660>
   1e710:	ldr	r1, [pc, #164]	; 1e7bc <__assert_fail@plt+0xd664>
   1e714:	ldr	r0, [pc, #164]	; 1e7c0 <__assert_fail@plt+0xd668>
   1e718:	bl	11158 <__assert_fail@plt>
   1e71c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e720:	str	r3, [fp, #-8]
   1e724:	mov	r3, #0
   1e728:	str	r3, [fp, #-12]
   1e72c:	mov	r3, #8
   1e730:	str	r3, [fp, #-16]
   1e734:	ldr	r3, [fp, #-16]
   1e738:	cmp	r3, #31
   1e73c:	bhi	1e78c <__assert_fail@plt+0xd634>
   1e740:	b	1e760 <__assert_fail@plt+0xd608>
   1e744:	ldr	r2, [fp, #-8]
   1e748:	ldr	r3, [fp, #-16]
   1e74c:	lsl	r3, r2, r3
   1e750:	str	r3, [fp, #-8]
   1e754:	ldr	r3, [fp, #-12]
   1e758:	add	r3, r3, #8
   1e75c:	str	r3, [fp, #-12]
   1e760:	ldr	r3, [fp, #-8]
   1e764:	and	r3, r3, #-16777216	; 0xff000000
   1e768:	cmp	r3, #0
   1e76c:	beq	1e744 <__assert_fail@plt+0xd5ec>
   1e770:	b	1e78c <__assert_fail@plt+0xd634>
   1e774:	ldr	r3, [fp, #-8]
   1e778:	lsl	r3, r3, #1
   1e77c:	str	r3, [fp, #-8]
   1e780:	ldr	r3, [fp, #-12]
   1e784:	add	r3, r3, #1
   1e788:	str	r3, [fp, #-12]
   1e78c:	ldr	r3, [fp, #-8]
   1e790:	cmp	r3, #0
   1e794:	bge	1e774 <__assert_fail@plt+0xd61c>
   1e798:	ldr	r3, [fp, #-12]
   1e79c:	str	r3, [fp, #-20]	; 0xffffffec
   1e7a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7a4:	rsb	r3, r3, #32
   1e7a8:	mov	r0, r3
   1e7ac:	sub	sp, fp, #4
   1e7b0:	pop	{fp, pc}
   1e7b4:	strdeq	r4, [r3], -ip
   1e7b8:			; <UNDEFINED> instruction: 0x000004ba
   1e7bc:	andeq	r3, r3, r0, asr #19
   1e7c0:	strdeq	r3, [r3], -r4
   1e7c4:	push	{r4, fp, lr}
   1e7c8:	add	fp, sp, #8
   1e7cc:	sub	sp, sp, #44	; 0x2c
   1e7d0:	str	r0, [fp, #-40]	; 0xffffffd8
   1e7d4:	str	r1, [fp, #-44]	; 0xffffffd4
   1e7d8:	str	r2, [fp, #-48]	; 0xffffffd0
   1e7dc:	str	r3, [fp, #-52]	; 0xffffffcc
   1e7e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e7e4:	sub	r3, r3, #1
   1e7e8:	lsl	r4, r3, #5
   1e7ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e7f0:	sub	r3, r3, #-1073741823	; 0xc0000001
   1e7f4:	lsl	r3, r3, #2
   1e7f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e7fc:	add	r3, r2, r3
   1e800:	ldr	r3, [r3]
   1e804:	mov	r0, r3
   1e808:	bl	1e6ec <__assert_fail@plt+0xd594>
   1e80c:	mov	r3, r0
   1e810:	add	r2, r4, r3
   1e814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e818:	add	r3, r2, r3
   1e81c:	sub	r3, r3, #1
   1e820:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e824:	mov	r0, r3
   1e828:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   1e82c:	mov	r3, r0
   1e830:	str	r3, [fp, #-32]	; 0xffffffe0
   1e834:	mov	r2, #1
   1e838:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e83c:	lsl	r3, r2, r3
   1e840:	uxtb	r3, r3
   1e844:	sub	r3, r3, #1
   1e848:	strb	r3, [fp, #-33]	; 0xffffffdf
   1e84c:	mov	r3, #0
   1e850:	str	r3, [fp, #-20]	; 0xffffffec
   1e854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e858:	str	r3, [fp, #-16]
   1e85c:	mov	r3, #0
   1e860:	str	r3, [fp, #-24]	; 0xffffffe8
   1e864:	b	1e920 <__assert_fail@plt+0xd7c8>
   1e868:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e86c:	lsl	r3, r3, #2
   1e870:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e874:	add	r3, r2, r3
   1e878:	ldr	r2, [r3]
   1e87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e880:	lsr	r3, r2, r3
   1e884:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e888:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e88c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e890:	add	r3, r2, r3
   1e894:	str	r3, [fp, #-24]	; 0xffffffe8
   1e898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e89c:	cmp	r3, #31
   1e8a0:	bls	1e900 <__assert_fail@plt+0xd7a8>
   1e8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8a8:	add	r3, r3, #1
   1e8ac:	str	r3, [fp, #-20]	; 0xffffffec
   1e8b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e8b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e8b8:	cmp	r2, r3
   1e8bc:	bge	1e900 <__assert_fail@plt+0xd7a8>
   1e8c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8c4:	sub	r3, r3, #32
   1e8c8:	str	r3, [fp, #-24]	; 0xffffffe8
   1e8cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8d0:	lsl	r3, r3, #2
   1e8d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e8d8:	add	r3, r2, r3
   1e8dc:	ldr	r2, [r3]
   1e8e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e8e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8e8:	sub	r3, r1, r3
   1e8ec:	lsl	r3, r2, r3
   1e8f0:	uxtb	r2, r3
   1e8f4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1e8f8:	orr	r3, r2, r3
   1e8fc:	strb	r3, [fp, #-25]	; 0xffffffe7
   1e900:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e904:	ldr	r3, [fp, #-16]
   1e908:	add	r3, r2, r3
   1e90c:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   1e910:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   1e914:	and	r2, r2, r1
   1e918:	uxtb	r2, r2
   1e91c:	strb	r2, [r3]
   1e920:	ldr	r3, [fp, #-16]
   1e924:	sub	r2, r3, #1
   1e928:	str	r2, [fp, #-16]
   1e92c:	cmp	r3, #0
   1e930:	bne	1e868 <__assert_fail@plt+0xd710>
   1e934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e938:	mov	r0, r3
   1e93c:	sub	sp, fp, #8
   1e940:	pop	{r4, fp, pc}
   1e944:	push	{fp, lr}
   1e948:	add	fp, sp, #4
   1e94c:	sub	sp, sp, #96	; 0x60
   1e950:	str	r0, [fp, #-88]	; 0xffffffa8
   1e954:	str	r1, [fp, #-92]	; 0xffffffa4
   1e958:	str	r2, [fp, #-96]	; 0xffffffa0
   1e95c:	mov	r3, #0
   1e960:	str	r3, [fp, #-8]
   1e964:	b	1ebf0 <__assert_fail@plt+0xda98>
   1e968:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1e96c:	ldr	r3, [r3]
   1e970:	rsb	r3, r3, #32
   1e974:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1e978:	lsr	r3, r2, r3
   1e97c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e980:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1e984:	ldr	r3, [r3]
   1e988:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1e98c:	lsl	r3, r2, r3
   1e990:	str	r3, [fp, #-28]	; 0xffffffe4
   1e994:	mov	r3, #32
   1e998:	str	r3, [fp, #-32]	; 0xffffffe0
   1e99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9a0:	str	r3, [fp, #-36]	; 0xffffffdc
   1e9a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1e9a8:	ldr	r3, [r3, #12]
   1e9ac:	str	r3, [fp, #-40]	; 0xffffffd8
   1e9b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e9b4:	uxth	r3, r3
   1e9b8:	str	r3, [fp, #-44]	; 0xffffffd4
   1e9bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e9c0:	lsr	r3, r3, #16
   1e9c4:	str	r3, [fp, #-48]	; 0xffffffd0
   1e9c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9cc:	uxth	r3, r3
   1e9d0:	str	r3, [fp, #-52]	; 0xffffffcc
   1e9d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e9d8:	lsr	r3, r3, #16
   1e9dc:	str	r3, [fp, #-56]	; 0xffffffc8
   1e9e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e9e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e9e8:	mul	r3, r2, r3
   1e9ec:	str	r3, [fp, #-60]	; 0xffffffc4
   1e9f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e9f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e9f8:	mul	r3, r2, r3
   1e9fc:	str	r3, [fp, #-64]	; 0xffffffc0
   1ea00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ea04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ea08:	mul	r3, r2, r3
   1ea0c:	str	r3, [fp, #-68]	; 0xffffffbc
   1ea10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ea14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ea18:	mul	r3, r2, r3
   1ea1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ea20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ea24:	lsr	r3, r3, #16
   1ea28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea2c:	add	r3, r2, r3
   1ea30:	str	r3, [fp, #-64]	; 0xffffffc0
   1ea34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ea3c:	add	r3, r2, r3
   1ea40:	str	r3, [fp, #-64]	; 0xffffffc0
   1ea44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ea48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ea4c:	cmp	r2, r3
   1ea50:	bcs	1ea60 <__assert_fail@plt+0xd908>
   1ea54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea58:	add	r3, r3, #65536	; 0x10000
   1ea5c:	str	r3, [fp, #-20]	; 0xffffffec
   1ea60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ea64:	lsr	r2, r3, #16
   1ea68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea6c:	add	r3, r2, r3
   1ea70:	str	r3, [fp, #-12]
   1ea74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ea78:	lsl	r2, r3, #16
   1ea7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ea80:	uxth	r3, r3
   1ea84:	add	r3, r2, r3
   1ea88:	str	r3, [fp, #-72]	; 0xffffffb8
   1ea8c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1ea90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea94:	add	r3, r2, r3
   1ea98:	str	r3, [fp, #-76]	; 0xffffffb4
   1ea9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eaa0:	ldr	r3, [fp, #-12]
   1eaa4:	add	r3, r2, r3
   1eaa8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1eaac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1eab0:	cmp	r1, r2
   1eab4:	movcc	r2, #1
   1eab8:	movcs	r2, #0
   1eabc:	uxtb	r2, r2
   1eac0:	add	r3, r3, r2
   1eac4:	add	r3, r3, #1
   1eac8:	str	r3, [fp, #-12]
   1eacc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ead0:	str	r3, [fp, #-72]	; 0xffffffb8
   1ead4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ead8:	ldr	r3, [r3, #4]
   1eadc:	ldr	r2, [fp, #-12]
   1eae0:	mul	r3, r2, r3
   1eae4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eae8:	sub	r3, r2, r3
   1eaec:	str	r3, [fp, #-16]
   1eaf0:	ldr	r2, [fp, #-16]
   1eaf4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1eaf8:	cmp	r2, r3
   1eafc:	movhi	r3, #1
   1eb00:	movls	r3, #0
   1eb04:	uxtb	r3, r3
   1eb08:	rsb	r3, r3, #0
   1eb0c:	str	r3, [fp, #-80]	; 0xffffffb0
   1eb10:	ldr	r2, [fp, #-12]
   1eb14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1eb18:	add	r3, r2, r3
   1eb1c:	str	r3, [fp, #-12]
   1eb20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1eb24:	ldr	r2, [r3, #4]
   1eb28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1eb2c:	and	r3, r3, r2
   1eb30:	ldr	r2, [fp, #-16]
   1eb34:	add	r3, r2, r3
   1eb38:	str	r3, [fp, #-16]
   1eb3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1eb40:	ldr	r2, [r3, #4]
   1eb44:	ldr	r3, [fp, #-16]
   1eb48:	cmp	r2, r3
   1eb4c:	bhi	1eb70 <__assert_fail@plt+0xda18>
   1eb50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1eb54:	ldr	r3, [r3, #4]
   1eb58:	ldr	r2, [fp, #-16]
   1eb5c:	sub	r3, r2, r3
   1eb60:	str	r3, [fp, #-16]
   1eb64:	ldr	r3, [fp, #-12]
   1eb68:	add	r3, r3, #1
   1eb6c:	str	r3, [fp, #-12]
   1eb70:	ldr	r3, [fp, #-16]
   1eb74:	str	r3, [fp, #-84]	; 0xffffffac
   1eb78:	ldr	r3, [fp, #-12]
   1eb7c:	str	r3, [fp, #-92]	; 0xffffffa4
   1eb80:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1eb84:	ldr	r3, [r3]
   1eb88:	rsb	r3, r3, #32
   1eb8c:	mvn	r2, #0
   1eb90:	lsr	r2, r2, r3
   1eb94:	ldr	r3, [fp, #-84]	; 0xffffffac
   1eb98:	and	r3, r3, r2
   1eb9c:	cmp	r3, #0
   1eba0:	beq	1ebb8 <__assert_fail@plt+0xda60>
   1eba4:	ldr	r3, [pc, #96]	; 1ec0c <__assert_fail@plt+0xdab4>
   1eba8:	ldr	r2, [pc, #96]	; 1ec10 <__assert_fail@plt+0xdab8>
   1ebac:	ldr	r1, [pc, #96]	; 1ec14 <__assert_fail@plt+0xdabc>
   1ebb0:	ldr	r0, [pc, #96]	; 1ec18 <__assert_fail@plt+0xdac0>
   1ebb4:	bl	11158 <__assert_fail@plt>
   1ebb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1ebbc:	ldr	r3, [r3]
   1ebc0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ebc4:	lsr	r3, r2, r3
   1ebc8:	str	r3, [fp, #-84]	; 0xffffffac
   1ebcc:	ldr	r3, [fp, #-8]
   1ebd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ebd4:	add	r3, r2, r3
   1ebd8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ebdc:	uxtb	r2, r2
   1ebe0:	strb	r2, [r3]
   1ebe4:	ldr	r3, [fp, #-8]
   1ebe8:	add	r3, r3, #1
   1ebec:	str	r3, [fp, #-8]
   1ebf0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1ebf4:	cmp	r3, #0
   1ebf8:	bne	1e968 <__assert_fail@plt+0xd810>
   1ebfc:	ldr	r3, [fp, #-8]
   1ec00:	mov	r0, r3
   1ec04:	sub	sp, fp, #4
   1ec08:	pop	{fp, pc}
   1ec0c:	andeq	r4, r3, r4, lsl r1
   1ec10:	andeq	r0, r0, fp, ror #9
   1ec14:	andeq	r3, r3, r0, asr #19
   1ec18:	strdeq	r3, [r3], -ip
   1ec1c:	push	{fp, lr}
   1ec20:	add	fp, sp, #4
   1ec24:	sub	sp, sp, #72	; 0x48
   1ec28:	str	r0, [fp, #-64]	; 0xffffffc0
   1ec2c:	str	r1, [fp, #-68]	; 0xffffffbc
   1ec30:	str	r2, [fp, #-72]	; 0xffffffb8
   1ec34:	str	r3, [fp, #-76]	; 0xffffffb4
   1ec38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ec3c:	sub	r3, fp, #40	; 0x28
   1ec40:	mov	r1, r2
   1ec44:	mov	r0, r3
   1ec48:	bl	1cdc4 <__assert_fail@plt+0xbc6c>
   1ec4c:	mov	r3, #0
   1ec50:	str	r3, [fp, #-8]
   1ec54:	ldr	r3, [fp, #4]
   1ec58:	cmp	r3, #1
   1ec5c:	ble	1ed44 <__assert_fail@plt+0xdbec>
   1ec60:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ec64:	ldr	r2, [r3, #4]
   1ec68:	sub	r3, fp, #56	; 0x38
   1ec6c:	mov	r1, r2
   1ec70:	mov	r0, r3
   1ec74:	bl	1cdc4 <__assert_fail@plt+0xbc6c>
   1ec78:	sub	r3, fp, #56	; 0x38
   1ec7c:	ldr	r2, [fp, #4]
   1ec80:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ec84:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1ec88:	bl	1d258 <__assert_fail@plt+0xc100>
   1ec8c:	str	r0, [fp, #-20]	; 0xffffffec
   1ec90:	ldr	r3, [fp, #4]
   1ec94:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ec98:	lsl	r3, r3, #2
   1ec9c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1eca0:	add	r3, r2, r3
   1eca4:	ldr	r3, [r3]
   1eca8:	cmp	r3, #0
   1ecac:	moveq	r3, #1
   1ecb0:	movne	r3, #0
   1ecb4:	uxtb	r3, r3
   1ecb8:	mov	r2, r3
   1ecbc:	ldr	r3, [fp, #4]
   1ecc0:	sub	r3, r3, r2
   1ecc4:	str	r3, [fp, #4]
   1ecc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1eccc:	ldr	r3, [fp, #-8]
   1ecd0:	add	r3, r2, r3
   1ecd4:	sub	r2, fp, #40	; 0x28
   1ecd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ecdc:	mov	r0, r3
   1ece0:	bl	1e944 <__assert_fail@plt+0xd7ec>
   1ece4:	str	r0, [fp, #-16]
   1ece8:	ldr	r2, [fp, #-8]
   1ecec:	ldr	r3, [fp, #-16]
   1ecf0:	add	r3, r2, r3
   1ecf4:	str	r3, [fp, #-8]
   1ecf8:	b	1ed24 <__assert_fail@plt+0xdbcc>
   1ecfc:	ldr	r3, [fp, #-8]
   1ed00:	add	r2, r3, #1
   1ed04:	str	r2, [fp, #-8]
   1ed08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ed0c:	add	r3, r2, r3
   1ed10:	mov	r2, #0
   1ed14:	strb	r2, [r3]
   1ed18:	ldr	r3, [fp, #-16]
   1ed1c:	add	r3, r3, #1
   1ed20:	str	r3, [fp, #-16]
   1ed24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ed28:	ldr	r2, [r3]
   1ed2c:	ldr	r3, [fp, #-16]
   1ed30:	cmp	r2, r3
   1ed34:	bhi	1ecfc <__assert_fail@plt+0xdba4>
   1ed38:	ldr	r3, [fp, #4]
   1ed3c:	cmp	r3, #1
   1ed40:	bgt	1ec78 <__assert_fail@plt+0xdb20>
   1ed44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ed48:	ldr	r3, [fp, #-8]
   1ed4c:	add	r0, r2, r3
   1ed50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ed54:	ldr	r3, [r3]
   1ed58:	sub	r2, fp, #40	; 0x28
   1ed5c:	mov	r1, r3
   1ed60:	bl	1e944 <__assert_fail@plt+0xd7ec>
   1ed64:	mov	r2, r0
   1ed68:	ldr	r3, [fp, #-8]
   1ed6c:	add	r3, r3, r2
   1ed70:	str	r3, [fp, #-8]
   1ed74:	mov	r3, #0
   1ed78:	str	r3, [fp, #-12]
   1ed7c:	b	1edec <__assert_fail@plt+0xdc94>
   1ed80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ed84:	ldr	r3, [fp, #-12]
   1ed88:	add	r3, r2, r3
   1ed8c:	ldrb	r3, [r3]
   1ed90:	strb	r3, [fp, #-21]	; 0xffffffeb
   1ed94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ed98:	ldr	r3, [fp, #-12]
   1ed9c:	add	r3, r2, r3
   1eda0:	ldr	r1, [fp, #-8]
   1eda4:	ldr	r2, [fp, #-12]
   1eda8:	sub	r2, r1, r2
   1edac:	sub	r2, r2, #1
   1edb0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1edb4:	add	r2, r1, r2
   1edb8:	ldrb	r2, [r2]
   1edbc:	strb	r2, [r3]
   1edc0:	ldr	r2, [fp, #-8]
   1edc4:	ldr	r3, [fp, #-12]
   1edc8:	sub	r3, r2, r3
   1edcc:	sub	r3, r3, #1
   1edd0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1edd4:	add	r3, r2, r3
   1edd8:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   1eddc:	strb	r2, [r3]
   1ede0:	ldr	r3, [fp, #-12]
   1ede4:	add	r3, r3, #1
   1ede8:	str	r3, [fp, #-12]
   1edec:	ldr	r3, [fp, #-12]
   1edf0:	lsl	r3, r3, #1
   1edf4:	add	r2, r3, #1
   1edf8:	ldr	r3, [fp, #-8]
   1edfc:	cmp	r2, r3
   1ee00:	bcc	1ed80 <__assert_fail@plt+0xdc28>
   1ee04:	ldr	r3, [fp, #-8]
   1ee08:	mov	r0, r3
   1ee0c:	sub	sp, fp, #4
   1ee10:	pop	{fp, pc}
   1ee14:	push	{fp, lr}
   1ee18:	add	fp, sp, #4
   1ee1c:	sub	sp, sp, #40	; 0x28
   1ee20:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee24:	str	r1, [fp, #-28]	; 0xffffffe4
   1ee28:	str	r2, [fp, #-32]	; 0xffffffe0
   1ee2c:	str	r3, [fp, #-36]	; 0xffffffdc
   1ee30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ee34:	cmp	r3, #0
   1ee38:	bgt	1ee50 <__assert_fail@plt+0xdcf8>
   1ee3c:	ldr	r3, [pc, #184]	; 1eefc <__assert_fail@plt+0xdda4>
   1ee40:	ldr	r2, [pc, #184]	; 1ef00 <__assert_fail@plt+0xdda8>
   1ee44:	ldr	r1, [pc, #184]	; 1ef04 <__assert_fail@plt+0xddac>
   1ee48:	ldr	r0, [pc, #184]	; 1ef08 <__assert_fail@plt+0xddb0>
   1ee4c:	bl	11158 <__assert_fail@plt>
   1ee50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ee54:	sub	r3, r3, #-1073741823	; 0xc0000001
   1ee58:	lsl	r3, r3, #2
   1ee5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ee60:	add	r3, r2, r3
   1ee64:	ldr	r3, [r3]
   1ee68:	cmp	r3, #0
   1ee6c:	bne	1ee84 <__assert_fail@plt+0xdd2c>
   1ee70:	ldr	r3, [pc, #132]	; 1eefc <__assert_fail@plt+0xdda4>
   1ee74:	ldr	r2, [pc, #144]	; 1ef0c <__assert_fail@plt+0xddb4>
   1ee78:	ldr	r1, [pc, #132]	; 1ef04 <__assert_fail@plt+0xddac>
   1ee7c:	ldr	r0, [pc, #140]	; 1ef10 <__assert_fail@plt+0xddb8>
   1ee80:	bl	11158 <__assert_fail@plt>
   1ee84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ee88:	mov	r0, r3
   1ee8c:	bl	1e59c <__assert_fail@plt+0xd444>
   1ee90:	str	r0, [fp, #-8]
   1ee94:	ldr	r3, [fp, #-8]
   1ee98:	cmp	r3, #0
   1ee9c:	beq	1eebc <__assert_fail@plt+0xdd64>
   1eea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eea4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eea8:	ldr	r1, [fp, #-8]
   1eeac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eeb0:	bl	1e7c4 <__assert_fail@plt+0xd66c>
   1eeb4:	mov	r3, r0
   1eeb8:	b	1eef0 <__assert_fail@plt+0xdd98>
   1eebc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eec0:	sub	r3, fp, #16
   1eec4:	mov	r1, r2
   1eec8:	mov	r0, r3
   1eecc:	bl	1e660 <__assert_fail@plt+0xd508>
   1eed0:	sub	r2, fp, #16
   1eed4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eed8:	str	r3, [sp]
   1eedc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eee8:	bl	1ec1c <__assert_fail@plt+0xdac4>
   1eeec:	mov	r3, r0
   1eef0:	mov	r0, r3
   1eef4:	sub	sp, fp, #4
   1eef8:	pop	{fp, pc}
   1eefc:	andeq	r4, r3, r8, lsr #2
   1ef00:	andeq	r0, r0, r4, lsr #10
   1ef04:	andeq	r3, r3, r0, asr #19
   1ef08:	andeq	r3, r3, r8, lsr ip
   1ef0c:	andeq	r0, r0, r5, lsr #10
   1ef10:	andeq	r3, r3, r0, asr #24
   1ef14:	push	{fp, lr}
   1ef18:	add	fp, sp, #4
   1ef1c:	sub	sp, sp, #32
   1ef20:	str	r0, [fp, #-24]	; 0xffffffe8
   1ef24:	str	r1, [fp, #-28]	; 0xffffffe4
   1ef28:	str	r2, [fp, #-32]	; 0xffffffe0
   1ef2c:	str	r3, [fp, #-36]	; 0xffffffdc
   1ef30:	mov	r3, #0
   1ef34:	str	r3, [fp, #-12]
   1ef38:	mov	r3, #0
   1ef3c:	str	r3, [fp, #-8]
   1ef40:	mov	r3, #0
   1ef44:	str	r3, [fp, #-16]
   1ef48:	b	1efe4 <__assert_fail@plt+0xde8c>
   1ef4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ef50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ef54:	add	r3, r2, r3
   1ef58:	ldrb	r3, [r3]
   1ef5c:	mov	r2, r3
   1ef60:	ldr	r3, [fp, #-16]
   1ef64:	lsl	r3, r2, r3
   1ef68:	ldr	r2, [fp, #-12]
   1ef6c:	orr	r3, r2, r3
   1ef70:	str	r3, [fp, #-12]
   1ef74:	ldr	r2, [fp, #-16]
   1ef78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ef7c:	add	r3, r2, r3
   1ef80:	str	r3, [fp, #-16]
   1ef84:	ldr	r3, [fp, #-16]
   1ef88:	cmp	r3, #31
   1ef8c:	bls	1efe4 <__assert_fail@plt+0xde8c>
   1ef90:	ldr	r3, [fp, #-16]
   1ef94:	sub	r3, r3, #32
   1ef98:	str	r3, [fp, #-16]
   1ef9c:	ldr	r3, [fp, #-8]
   1efa0:	add	r2, r3, #1
   1efa4:	str	r2, [fp, #-8]
   1efa8:	lsl	r3, r3, #2
   1efac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1efb0:	add	r3, r2, r3
   1efb4:	ldr	r2, [fp, #-12]
   1efb8:	str	r2, [r3]
   1efbc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1efc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1efc4:	add	r3, r2, r3
   1efc8:	ldrb	r3, [r3]
   1efcc:	mov	r1, r3
   1efd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1efd4:	ldr	r3, [fp, #-16]
   1efd8:	sub	r3, r2, r3
   1efdc:	lsr	r3, r1, r3
   1efe0:	str	r3, [fp, #-12]
   1efe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1efe8:	sub	r2, r3, #1
   1efec:	str	r2, [fp, #-32]	; 0xffffffe0
   1eff0:	cmp	r3, #0
   1eff4:	bne	1ef4c <__assert_fail@plt+0xddf4>
   1eff8:	ldr	r3, [fp, #-12]
   1effc:	cmp	r3, #0
   1f000:	beq	1f028 <__assert_fail@plt+0xded0>
   1f004:	ldr	r3, [fp, #-8]
   1f008:	add	r2, r3, #1
   1f00c:	str	r2, [fp, #-8]
   1f010:	lsl	r3, r3, #2
   1f014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f018:	add	r3, r2, r3
   1f01c:	ldr	r2, [fp, #-12]
   1f020:	str	r2, [r3]
   1f024:	b	1f038 <__assert_fail@plt+0xdee0>
   1f028:	ldr	r1, [fp, #-8]
   1f02c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f030:	bl	1b4a0 <__assert_fail@plt+0xa348>
   1f034:	str	r0, [fp, #-8]
   1f038:	ldr	r3, [fp, #-8]
   1f03c:	mov	r0, r3
   1f040:	sub	sp, fp, #4
   1f044:	pop	{fp, pc}
   1f048:	push	{fp, lr}
   1f04c:	add	fp, sp, #4
   1f050:	sub	sp, sp, #40	; 0x28
   1f054:	str	r0, [fp, #-32]	; 0xffffffe0
   1f058:	str	r1, [fp, #-36]	; 0xffffffdc
   1f05c:	str	r2, [fp, #-40]	; 0xffffffd8
   1f060:	str	r3, [fp, #-44]	; 0xffffffd4
   1f064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f068:	cmp	r3, #0
   1f06c:	bne	1f084 <__assert_fail@plt+0xdf2c>
   1f070:	ldr	r3, [pc, #476]	; 1f254 <__assert_fail@plt+0xe0fc>
   1f074:	ldr	r2, [pc, #476]	; 1f258 <__assert_fail@plt+0xe100>
   1f078:	ldr	r1, [pc, #476]	; 1f25c <__assert_fail@plt+0xe104>
   1f07c:	ldr	r0, [pc, #476]	; 1f260 <__assert_fail@plt+0xe108>
   1f080:	bl	11158 <__assert_fail@plt>
   1f084:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f088:	sub	r2, r3, #1
   1f08c:	ldr	r3, [fp, #4]
   1f090:	ldr	r3, [r3]
   1f094:	mov	r1, r3
   1f098:	mov	r0, r2
   1f09c:	bl	2ff1c <__assert_fail@plt+0x1edc4>
   1f0a0:	mov	r3, r1
   1f0a4:	add	r3, r3, #1
   1f0a8:	str	r3, [fp, #-16]
   1f0ac:	mov	r3, #0
   1f0b0:	str	r3, [fp, #-20]	; 0xffffffec
   1f0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0b8:	add	r2, r3, #1
   1f0bc:	str	r2, [fp, #-20]	; 0xffffffec
   1f0c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f0c4:	add	r3, r2, r3
   1f0c8:	ldrb	r3, [r3]
   1f0cc:	str	r3, [fp, #-12]
   1f0d0:	b	1f100 <__assert_fail@plt+0xdfa8>
   1f0d4:	ldr	r3, [fp, #-12]
   1f0d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f0dc:	mul	r2, r2, r3
   1f0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0e4:	add	r1, r3, #1
   1f0e8:	str	r1, [fp, #-20]	; 0xffffffec
   1f0ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f0f0:	add	r3, r1, r3
   1f0f4:	ldrb	r3, [r3]
   1f0f8:	add	r3, r2, r3
   1f0fc:	str	r3, [fp, #-12]
   1f100:	ldr	r3, [fp, #-16]
   1f104:	sub	r3, r3, #1
   1f108:	str	r3, [fp, #-16]
   1f10c:	ldr	r3, [fp, #-16]
   1f110:	cmp	r3, #0
   1f114:	bne	1f0d4 <__assert_fail@plt+0xdf7c>
   1f118:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f11c:	ldr	r2, [fp, #-12]
   1f120:	str	r2, [r3]
   1f124:	mov	r3, #1
   1f128:	str	r3, [fp, #-8]
   1f12c:	b	1f210 <__assert_fail@plt+0xe0b8>
   1f130:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f134:	add	r2, r3, #1
   1f138:	str	r2, [fp, #-20]	; 0xffffffec
   1f13c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f140:	add	r3, r2, r3
   1f144:	ldrb	r3, [r3]
   1f148:	str	r3, [fp, #-12]
   1f14c:	mov	r3, #1
   1f150:	str	r3, [fp, #-16]
   1f154:	b	1f190 <__assert_fail@plt+0xe038>
   1f158:	ldr	r3, [fp, #-12]
   1f15c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f160:	mul	r2, r2, r3
   1f164:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f168:	add	r1, r3, #1
   1f16c:	str	r1, [fp, #-20]	; 0xffffffec
   1f170:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f174:	add	r3, r1, r3
   1f178:	ldrb	r3, [r3]
   1f17c:	add	r3, r2, r3
   1f180:	str	r3, [fp, #-12]
   1f184:	ldr	r3, [fp, #-16]
   1f188:	add	r3, r3, #1
   1f18c:	str	r3, [fp, #-16]
   1f190:	ldr	r3, [fp, #4]
   1f194:	ldr	r2, [r3]
   1f198:	ldr	r3, [fp, #-16]
   1f19c:	cmp	r2, r3
   1f1a0:	bhi	1f158 <__assert_fail@plt+0xe000>
   1f1a4:	ldr	r3, [fp, #4]
   1f1a8:	ldr	r3, [r3, #4]
   1f1ac:	ldr	r2, [fp, #-8]
   1f1b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f1b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f1b8:	bl	1bad4 <__assert_fail@plt+0xa97c>
   1f1bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1f1c0:	ldr	r3, [fp, #-12]
   1f1c4:	ldr	r2, [fp, #-8]
   1f1c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f1cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f1d0:	bl	1b59c <__assert_fail@plt+0xa444>
   1f1d4:	mov	r2, r0
   1f1d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1dc:	add	r3, r3, r2
   1f1e0:	str	r3, [fp, #-24]	; 0xffffffe8
   1f1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1e8:	cmp	r3, #0
   1f1ec:	beq	1f210 <__assert_fail@plt+0xe0b8>
   1f1f0:	ldr	r3, [fp, #-8]
   1f1f4:	add	r2, r3, #1
   1f1f8:	str	r2, [fp, #-8]
   1f1fc:	lsl	r3, r3, #2
   1f200:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f204:	add	r3, r2, r3
   1f208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f20c:	str	r2, [r3]
   1f210:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f214:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f218:	cmp	r2, r3
   1f21c:	bcc	1f130 <__assert_fail@plt+0xdfd8>
   1f220:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f224:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f228:	cmp	r2, r3
   1f22c:	beq	1f244 <__assert_fail@plt+0xe0ec>
   1f230:	ldr	r3, [pc, #28]	; 1f254 <__assert_fail@plt+0xe0fc>
   1f234:	ldr	r2, [pc, #40]	; 1f264 <__assert_fail@plt+0xe10c>
   1f238:	ldr	r1, [pc, #28]	; 1f25c <__assert_fail@plt+0xe104>
   1f23c:	ldr	r0, [pc, #36]	; 1f268 <__assert_fail@plt+0xe110>
   1f240:	bl	11158 <__assert_fail@plt>
   1f244:	ldr	r3, [fp, #-8]
   1f248:	mov	r0, r3
   1f24c:	sub	sp, fp, #4
   1f250:	pop	{fp, pc}
   1f254:	andeq	r4, r3, r4, lsr r1
   1f258:	andeq	r0, r0, sl, asr r5
   1f25c:	andeq	r3, r3, r0, asr #19
   1f260:	andeq	r3, r3, r0, asr ip
   1f264:	andeq	r0, r0, r2, ror r5
   1f268:	andeq	r3, r3, r8, asr ip
   1f26c:	push	{fp, lr}
   1f270:	add	fp, sp, #4
   1f274:	sub	sp, sp, #40	; 0x28
   1f278:	str	r0, [fp, #-24]	; 0xffffffe8
   1f27c:	str	r1, [fp, #-28]	; 0xffffffe4
   1f280:	str	r2, [fp, #-32]	; 0xffffffe0
   1f284:	str	r3, [fp, #-36]	; 0xffffffdc
   1f288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f28c:	cmp	r3, #0
   1f290:	bne	1f29c <__assert_fail@plt+0xe144>
   1f294:	mov	r3, #0
   1f298:	b	1f30c <__assert_fail@plt+0xe1b4>
   1f29c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2a0:	mov	r0, r3
   1f2a4:	bl	1e59c <__assert_fail@plt+0xd444>
   1f2a8:	str	r0, [fp, #-8]
   1f2ac:	ldr	r3, [fp, #-8]
   1f2b0:	cmp	r3, #0
   1f2b4:	beq	1f2d4 <__assert_fail@plt+0xe17c>
   1f2b8:	ldr	r3, [fp, #-8]
   1f2bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f2c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f2c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f2c8:	bl	1ef14 <__assert_fail@plt+0xddbc>
   1f2cc:	mov	r3, r0
   1f2d0:	b	1f30c <__assert_fail@plt+0xe1b4>
   1f2d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f2d8:	sub	r3, fp, #16
   1f2dc:	mov	r1, r2
   1f2e0:	mov	r0, r3
   1f2e4:	bl	1e660 <__assert_fail@plt+0xd508>
   1f2e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f2ec:	sub	r3, fp, #16
   1f2f0:	str	r3, [sp]
   1f2f4:	mov	r3, r2
   1f2f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f2fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f304:	bl	1f048 <__assert_fail@plt+0xdef0>
   1f308:	mov	r3, r0
   1f30c:	mov	r0, r3
   1f310:	sub	sp, fp, #4
   1f314:	pop	{fp, pc}
   1f318:	push	{fp}		; (str fp, [sp, #-4]!)
   1f31c:	add	fp, sp, #0
   1f320:	sub	sp, sp, #12
   1f324:	str	r0, [fp, #-8]
   1f328:	ldr	r3, [fp, #-8]
   1f32c:	mov	r2, #0
   1f330:	str	r2, [r3]
   1f334:	ldr	r3, [fp, #-8]
   1f338:	mov	r2, #0
   1f33c:	str	r2, [r3, #4]
   1f340:	ldr	r3, [fp, #-8]
   1f344:	ldr	r2, [pc, #16]	; 1f35c <__assert_fail@plt+0xe204>
   1f348:	str	r2, [r3, #8]
   1f34c:	nop			; (mov r0, r0)
   1f350:	add	sp, fp, #0
   1f354:	pop	{fp}		; (ldr fp, [sp], #4)
   1f358:	bx	lr
   1f35c:	andeq	r4, r3, r8, asr #2
   1f360:	push	{fp, lr}
   1f364:	add	fp, sp, #4
   1f368:	sub	sp, sp, #16
   1f36c:	str	r0, [fp, #-16]
   1f370:	str	r1, [fp, #-20]	; 0xffffffec
   1f374:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f378:	cmp	r3, #0
   1f37c:	movne	r3, #1
   1f380:	moveq	r3, #0
   1f384:	uxtb	r3, r3
   1f388:	mov	r2, r3
   1f38c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f390:	sub	r3, r3, r2
   1f394:	str	r3, [fp, #-20]	; 0xffffffec
   1f398:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f39c:	lsr	r3, r3, #5
   1f3a0:	add	r3, r3, #1
   1f3a4:	str	r3, [fp, #-8]
   1f3a8:	ldr	r3, [fp, #-16]
   1f3ac:	ldr	r2, [fp, #-8]
   1f3b0:	str	r2, [r3]
   1f3b4:	ldr	r3, [fp, #-16]
   1f3b8:	mov	r2, #0
   1f3bc:	str	r2, [r3, #4]
   1f3c0:	ldr	r0, [fp, #-8]
   1f3c4:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   1f3c8:	mov	r2, r0
   1f3cc:	ldr	r3, [fp, #-16]
   1f3d0:	str	r2, [r3, #8]
   1f3d4:	nop			; (mov r0, r0)
   1f3d8:	sub	sp, fp, #4
   1f3dc:	pop	{fp, pc}
   1f3e0:	push	{fp, lr}
   1f3e4:	add	fp, sp, #4
   1f3e8:	sub	sp, sp, #8
   1f3ec:	str	r0, [fp, #-8]
   1f3f0:	ldr	r3, [fp, #-8]
   1f3f4:	ldr	r3, [r3]
   1f3f8:	cmp	r3, #0
   1f3fc:	beq	1f41c <__assert_fail@plt+0xe2c4>
   1f400:	ldr	r3, [fp, #-8]
   1f404:	ldr	r2, [r3, #8]
   1f408:	ldr	r3, [fp, #-8]
   1f40c:	ldr	r3, [r3]
   1f410:	mov	r1, r3
   1f414:	mov	r0, r2
   1f418:	bl	1b258 <__assert_fail@plt+0xa100>
   1f41c:	nop			; (mov r0, r0)
   1f420:	sub	sp, fp, #4
   1f424:	pop	{fp, pc}
   1f428:	push	{fp, lr}
   1f42c:	add	fp, sp, #4
   1f430:	sub	sp, sp, #8
   1f434:	str	r0, [fp, #-8]
   1f438:	str	r1, [fp, #-12]
   1f43c:	ldr	r3, [fp, #-12]
   1f440:	cmp	r3, #1
   1f444:	movge	r3, r3
   1f448:	movlt	r3, #1
   1f44c:	str	r3, [fp, #-12]
   1f450:	ldr	r3, [fp, #-8]
   1f454:	ldr	r3, [r3]
   1f458:	cmp	r3, #0
   1f45c:	beq	1f48c <__assert_fail@plt+0xe334>
   1f460:	ldr	r3, [fp, #-8]
   1f464:	ldr	r0, [r3, #8]
   1f468:	ldr	r3, [fp, #-8]
   1f46c:	ldr	r3, [r3]
   1f470:	ldr	r2, [fp, #-12]
   1f474:	mov	r1, r3
   1f478:	bl	1b1e0 <__assert_fail@plt+0xa088>
   1f47c:	mov	r2, r0
   1f480:	ldr	r3, [fp, #-8]
   1f484:	str	r2, [r3, #8]
   1f488:	b	1f4a0 <__assert_fail@plt+0xe348>
   1f48c:	ldr	r0, [fp, #-12]
   1f490:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   1f494:	mov	r2, r0
   1f498:	ldr	r3, [fp, #-8]
   1f49c:	str	r2, [r3, #8]
   1f4a0:	ldr	r3, [fp, #-8]
   1f4a4:	ldr	r2, [fp, #-12]
   1f4a8:	str	r2, [r3]
   1f4ac:	ldr	r3, [fp, #-8]
   1f4b0:	ldr	r3, [r3, #4]
   1f4b4:	eor	r2, r3, r3, asr #31
   1f4b8:	sub	r2, r2, r3, asr #31
   1f4bc:	ldr	r3, [fp, #-12]
   1f4c0:	cmp	r2, r3
   1f4c4:	ble	1f4d4 <__assert_fail@plt+0xe37c>
   1f4c8:	ldr	r3, [fp, #-8]
   1f4cc:	mov	r2, #0
   1f4d0:	str	r2, [r3, #4]
   1f4d4:	ldr	r3, [fp, #-8]
   1f4d8:	ldr	r3, [r3, #8]
   1f4dc:	mov	r0, r3
   1f4e0:	sub	sp, fp, #4
   1f4e4:	pop	{fp, pc}
   1f4e8:	push	{fp, lr}
   1f4ec:	add	fp, sp, #4
   1f4f0:	sub	sp, sp, #8
   1f4f4:	str	r0, [fp, #-8]
   1f4f8:	str	r1, [fp, #-12]
   1f4fc:	ldr	r3, [fp, #-12]
   1f500:	cmp	r3, #0
   1f504:	blt	1f51c <__assert_fail@plt+0xe3c4>
   1f508:	ldr	r3, [fp, #-12]
   1f50c:	mov	r1, r3
   1f510:	ldr	r0, [fp, #-8]
   1f514:	bl	1f56c <__assert_fail@plt+0xe414>
   1f518:	b	1f560 <__assert_fail@plt+0xe408>
   1f51c:	ldr	r3, [fp, #-8]
   1f520:	mvn	r2, #0
   1f524:	str	r2, [r3, #4]
   1f528:	ldr	r3, [fp, #-8]
   1f52c:	ldr	r3, [r3]
   1f530:	cmp	r3, #0
   1f534:	bgt	1f54c <__assert_fail@plt+0xe3f4>
   1f538:	mov	r1, #1
   1f53c:	ldr	r0, [fp, #-8]
   1f540:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1f544:	mov	r3, r0
   1f548:	b	1f554 <__assert_fail@plt+0xe3fc>
   1f54c:	ldr	r3, [fp, #-8]
   1f550:	ldr	r3, [r3, #8]
   1f554:	ldr	r2, [fp, #-12]
   1f558:	rsb	r2, r2, #0
   1f55c:	str	r2, [r3]
   1f560:	nop			; (mov r0, r0)
   1f564:	sub	sp, fp, #4
   1f568:	pop	{fp, pc}
   1f56c:	push	{fp, lr}
   1f570:	add	fp, sp, #4
   1f574:	sub	sp, sp, #8
   1f578:	str	r0, [fp, #-8]
   1f57c:	str	r1, [fp, #-12]
   1f580:	ldr	r3, [fp, #-12]
   1f584:	cmp	r3, #0
   1f588:	beq	1f5d0 <__assert_fail@plt+0xe478>
   1f58c:	ldr	r3, [fp, #-8]
   1f590:	mov	r2, #1
   1f594:	str	r2, [r3, #4]
   1f598:	ldr	r3, [fp, #-8]
   1f59c:	ldr	r3, [r3]
   1f5a0:	cmp	r3, #0
   1f5a4:	bgt	1f5bc <__assert_fail@plt+0xe464>
   1f5a8:	mov	r1, #1
   1f5ac:	ldr	r0, [fp, #-8]
   1f5b0:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1f5b4:	mov	r3, r0
   1f5b8:	b	1f5c4 <__assert_fail@plt+0xe46c>
   1f5bc:	ldr	r3, [fp, #-8]
   1f5c0:	ldr	r3, [r3, #8]
   1f5c4:	ldr	r2, [fp, #-12]
   1f5c8:	str	r2, [r3]
   1f5cc:	b	1f5dc <__assert_fail@plt+0xe484>
   1f5d0:	ldr	r3, [fp, #-8]
   1f5d4:	mov	r2, #0
   1f5d8:	str	r2, [r3, #4]
   1f5dc:	nop			; (mov r0, r0)
   1f5e0:	sub	sp, fp, #4
   1f5e4:	pop	{fp, pc}
   1f5e8:	push	{fp, lr}
   1f5ec:	add	fp, sp, #4
   1f5f0:	sub	sp, sp, #16
   1f5f4:	str	r0, [fp, #-16]
   1f5f8:	str	r1, [fp, #-20]	; 0xffffffec
   1f5fc:	ldr	r2, [fp, #-16]
   1f600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f604:	cmp	r2, r3
   1f608:	beq	1f67c <__assert_fail@plt+0xe524>
   1f60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f610:	ldr	r3, [r3, #4]
   1f614:	cmp	r3, #0
   1f618:	rsblt	r3, r3, #0
   1f61c:	str	r3, [fp, #-8]
   1f620:	ldr	r3, [fp, #-16]
   1f624:	ldr	r2, [r3]
   1f628:	ldr	r3, [fp, #-8]
   1f62c:	cmp	r2, r3
   1f630:	bge	1f648 <__assert_fail@plt+0xe4f0>
   1f634:	ldr	r1, [fp, #-8]
   1f638:	ldr	r0, [fp, #-16]
   1f63c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1f640:	mov	r3, r0
   1f644:	b	1f650 <__assert_fail@plt+0xe4f8>
   1f648:	ldr	r3, [fp, #-16]
   1f64c:	ldr	r3, [r3, #8]
   1f650:	str	r3, [fp, #-12]
   1f654:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f658:	ldr	r3, [r3, #8]
   1f65c:	ldr	r2, [fp, #-8]
   1f660:	mov	r1, r3
   1f664:	ldr	r0, [fp, #-12]
   1f668:	bl	1b298 <__assert_fail@plt+0xa140>
   1f66c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f670:	ldr	r2, [r3, #4]
   1f674:	ldr	r3, [fp, #-16]
   1f678:	str	r2, [r3, #4]
   1f67c:	nop			; (mov r0, r0)
   1f680:	sub	sp, fp, #4
   1f684:	pop	{fp, pc}
   1f688:	push	{fp, lr}
   1f68c:	add	fp, sp, #4
   1f690:	sub	sp, sp, #8
   1f694:	str	r0, [fp, #-8]
   1f698:	str	r1, [fp, #-12]
   1f69c:	ldr	r0, [fp, #-8]
   1f6a0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   1f6a4:	ldr	r1, [fp, #-12]
   1f6a8:	ldr	r0, [fp, #-8]
   1f6ac:	bl	1f4e8 <__assert_fail@plt+0xe390>
   1f6b0:	nop			; (mov r0, r0)
   1f6b4:	sub	sp, fp, #4
   1f6b8:	pop	{fp, pc}
   1f6bc:	push	{fp, lr}
   1f6c0:	add	fp, sp, #4
   1f6c4:	sub	sp, sp, #8
   1f6c8:	str	r0, [fp, #-8]
   1f6cc:	str	r1, [fp, #-12]
   1f6d0:	ldr	r0, [fp, #-8]
   1f6d4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   1f6d8:	ldr	r1, [fp, #-12]
   1f6dc:	ldr	r0, [fp, #-8]
   1f6e0:	bl	1f56c <__assert_fail@plt+0xe414>
   1f6e4:	nop			; (mov r0, r0)
   1f6e8:	sub	sp, fp, #4
   1f6ec:	pop	{fp, pc}
   1f6f0:	push	{fp, lr}
   1f6f4:	add	fp, sp, #4
   1f6f8:	sub	sp, sp, #8
   1f6fc:	str	r0, [fp, #-8]
   1f700:	str	r1, [fp, #-12]
   1f704:	ldr	r0, [fp, #-8]
   1f708:	bl	1f318 <__assert_fail@plt+0xe1c0>
   1f70c:	ldr	r1, [fp, #-12]
   1f710:	ldr	r0, [fp, #-8]
   1f714:	bl	1f5e8 <__assert_fail@plt+0xe490>
   1f718:	nop			; (mov r0, r0)
   1f71c:	sub	sp, fp, #4
   1f720:	pop	{fp, pc}
   1f724:	push	{fp, lr}
   1f728:	add	fp, sp, #4
   1f72c:	sub	sp, sp, #8
   1f730:	str	r0, [fp, #-8]
   1f734:	mvn	r1, #-2147483648	; 0x80000000
   1f738:	ldr	r0, [fp, #-8]
   1f73c:	bl	2047c <__assert_fail@plt+0xf324>
   1f740:	mov	r3, r0
   1f744:	cmp	r3, #0
   1f748:	bgt	1f76c <__assert_fail@plt+0xe614>
   1f74c:	mov	r1, #-2147483648	; 0x80000000
   1f750:	ldr	r0, [fp, #-8]
   1f754:	bl	2047c <__assert_fail@plt+0xf324>
   1f758:	mov	r3, r0
   1f75c:	cmp	r3, #0
   1f760:	blt	1f76c <__assert_fail@plt+0xe614>
   1f764:	mov	r3, #1
   1f768:	b	1f770 <__assert_fail@plt+0xe618>
   1f76c:	mov	r3, #0
   1f770:	mov	r0, r3
   1f774:	sub	sp, fp, #4
   1f778:	pop	{fp, pc}
   1f77c:	push	{fp}		; (str fp, [sp, #-4]!)
   1f780:	add	fp, sp, #0
   1f784:	sub	sp, sp, #20
   1f788:	str	r0, [fp, #-16]
   1f78c:	str	r1, [fp, #-20]	; 0xffffffec
   1f790:	mov	r3, #1
   1f794:	str	r3, [fp, #-8]
   1f798:	mov	r3, #0
   1f79c:	str	r3, [fp, #-12]
   1f7a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f7a4:	ldr	r3, [fp, #-8]
   1f7a8:	cmp	r2, r3
   1f7ac:	ble	1f7e4 <__assert_fail@plt+0xe68c>
   1f7b0:	ldr	r3, [fp, #-8]
   1f7b4:	lsl	r3, r3, #2
   1f7b8:	ldr	r2, [fp, #-16]
   1f7bc:	add	r3, r2, r3
   1f7c0:	ldr	r2, [r3]
   1f7c4:	ldr	r3, [fp, #-12]
   1f7c8:	cmp	r2, r3
   1f7cc:	bcs	1f7ec <__assert_fail@plt+0xe694>
   1f7d0:	ldr	r3, [fp, #-8]
   1f7d4:	add	r2, r3, #1
   1f7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f7dc:	cmp	r2, r3
   1f7e0:	bne	1f7ec <__assert_fail@plt+0xe694>
   1f7e4:	mov	r3, #1
   1f7e8:	b	1f7f0 <__assert_fail@plt+0xe698>
   1f7ec:	mov	r3, #0
   1f7f0:	mov	r0, r3
   1f7f4:	add	sp, fp, #0
   1f7f8:	pop	{fp}		; (ldr fp, [sp], #4)
   1f7fc:	bx	lr
   1f800:	push	{fp, lr}
   1f804:	add	fp, sp, #4
   1f808:	sub	sp, sp, #16
   1f80c:	str	r0, [fp, #-16]
   1f810:	ldr	r3, [fp, #-16]
   1f814:	ldr	r3, [r3, #4]
   1f818:	str	r3, [fp, #-8]
   1f81c:	ldr	r3, [fp, #-8]
   1f820:	cmp	r3, #0
   1f824:	blt	1f850 <__assert_fail@plt+0xe6f8>
   1f828:	ldr	r3, [fp, #-16]
   1f82c:	ldr	r3, [r3, #8]
   1f830:	ldr	r1, [fp, #-8]
   1f834:	mov	r0, r3
   1f838:	bl	1f77c <__assert_fail@plt+0xe624>
   1f83c:	mov	r3, r0
   1f840:	cmp	r3, #0
   1f844:	beq	1f850 <__assert_fail@plt+0xe6f8>
   1f848:	mov	r3, #1
   1f84c:	b	1f854 <__assert_fail@plt+0xe6fc>
   1f850:	mov	r3, #0
   1f854:	mov	r0, r3
   1f858:	sub	sp, fp, #4
   1f85c:	pop	{fp, pc}
   1f860:	push	{fp, lr}
   1f864:	add	fp, sp, #4
   1f868:	sub	sp, sp, #8
   1f86c:	str	r0, [fp, #-8]
   1f870:	mvn	r1, #-2147483648	; 0x80000000
   1f874:	ldr	r0, [fp, #-8]
   1f878:	bl	2047c <__assert_fail@plt+0xf324>
   1f87c:	mov	r3, r0
   1f880:	cmp	r3, #0
   1f884:	bgt	1f8a8 <__assert_fail@plt+0xe750>
   1f888:	mov	r1, #-2147483648	; 0x80000000
   1f88c:	ldr	r0, [fp, #-8]
   1f890:	bl	2047c <__assert_fail@plt+0xf324>
   1f894:	mov	r3, r0
   1f898:	cmp	r3, #0
   1f89c:	blt	1f8a8 <__assert_fail@plt+0xe750>
   1f8a0:	mov	r3, #1
   1f8a4:	b	1f8ac <__assert_fail@plt+0xe754>
   1f8a8:	mov	r3, #0
   1f8ac:	mov	r0, r3
   1f8b0:	sub	sp, fp, #4
   1f8b4:	pop	{fp, pc}
   1f8b8:	push	{fp, lr}
   1f8bc:	add	fp, sp, #4
   1f8c0:	sub	sp, sp, #8
   1f8c4:	str	r0, [fp, #-8]
   1f8c8:	ldr	r3, [fp, #-8]
   1f8cc:	ldr	r3, [r3, #4]
   1f8d0:	cmp	r3, #0
   1f8d4:	blt	1f8f8 <__assert_fail@plt+0xe7a0>
   1f8d8:	mvn	r1, #0
   1f8dc:	ldr	r0, [fp, #-8]
   1f8e0:	bl	20608 <__assert_fail@plt+0xf4b0>
   1f8e4:	mov	r3, r0
   1f8e8:	cmp	r3, #0
   1f8ec:	bgt	1f8f8 <__assert_fail@plt+0xe7a0>
   1f8f0:	mov	r3, #1
   1f8f4:	b	1f8fc <__assert_fail@plt+0xe7a4>
   1f8f8:	mov	r3, #0
   1f8fc:	mov	r0, r3
   1f900:	sub	sp, fp, #4
   1f904:	pop	{fp, pc}
   1f908:	push	{fp, lr}
   1f90c:	add	fp, sp, #4
   1f910:	sub	sp, sp, #8
   1f914:	str	r0, [fp, #-8]
   1f918:	ldr	r1, [pc, #64]	; 1f960 <__assert_fail@plt+0xe808>
   1f91c:	ldr	r0, [fp, #-8]
   1f920:	bl	2047c <__assert_fail@plt+0xf324>
   1f924:	mov	r3, r0
   1f928:	cmp	r3, #0
   1f92c:	bgt	1f950 <__assert_fail@plt+0xe7f8>
   1f930:	ldr	r1, [pc, #44]	; 1f964 <__assert_fail@plt+0xe80c>
   1f934:	ldr	r0, [fp, #-8]
   1f938:	bl	2047c <__assert_fail@plt+0xf324>
   1f93c:	mov	r3, r0
   1f940:	cmp	r3, #0
   1f944:	blt	1f950 <__assert_fail@plt+0xe7f8>
   1f948:	mov	r3, #1
   1f94c:	b	1f954 <__assert_fail@plt+0xe7fc>
   1f950:	mov	r3, #0
   1f954:	mov	r0, r3
   1f958:	sub	sp, fp, #4
   1f95c:	pop	{fp, pc}
   1f960:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   1f964:			; <UNDEFINED> instruction: 0xffff8000
   1f968:	push	{fp, lr}
   1f96c:	add	fp, sp, #4
   1f970:	sub	sp, sp, #8
   1f974:	str	r0, [fp, #-8]
   1f978:	ldr	r3, [fp, #-8]
   1f97c:	ldr	r3, [r3, #4]
   1f980:	cmp	r3, #0
   1f984:	blt	1f9a8 <__assert_fail@plt+0xe850>
   1f988:	ldr	r1, [pc, #40]	; 1f9b8 <__assert_fail@plt+0xe860>
   1f98c:	ldr	r0, [fp, #-8]
   1f990:	bl	20608 <__assert_fail@plt+0xf4b0>
   1f994:	mov	r3, r0
   1f998:	cmp	r3, #0
   1f99c:	bgt	1f9a8 <__assert_fail@plt+0xe850>
   1f9a0:	mov	r3, #1
   1f9a4:	b	1f9ac <__assert_fail@plt+0xe854>
   1f9a8:	mov	r3, #0
   1f9ac:	mov	r0, r3
   1f9b0:	sub	sp, fp, #4
   1f9b4:	pop	{fp, pc}
   1f9b8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1f9bc:	push	{fp, lr}
   1f9c0:	add	fp, sp, #4
   1f9c4:	sub	sp, sp, #16
   1f9c8:	str	r0, [fp, #-16]
   1f9cc:	ldr	r0, [fp, #-16]
   1f9d0:	bl	1fa24 <__assert_fail@plt+0xe8cc>
   1f9d4:	str	r0, [fp, #-8]
   1f9d8:	mov	r3, #1
   1f9dc:	str	r3, [fp, #-12]
   1f9e0:	ldr	r3, [fp, #-16]
   1f9e4:	ldr	r3, [r3, #4]
   1f9e8:	cmp	r3, #0
   1f9ec:	bge	1fa10 <__assert_fail@plt+0xe8b8>
   1f9f0:	ldr	r3, [fp, #-12]
   1f9f4:	rsb	r2, r3, #0
   1f9f8:	ldr	r1, [fp, #-8]
   1f9fc:	ldr	r3, [fp, #-12]
   1fa00:	sub	r3, r1, r3
   1fa04:	bic	r3, r3, #-2147483648	; 0x80000000
   1fa08:	sub	r3, r2, r3
   1fa0c:	b	1fa18 <__assert_fail@plt+0xe8c0>
   1fa10:	ldr	r3, [fp, #-8]
   1fa14:	bic	r3, r3, #-2147483648	; 0x80000000
   1fa18:	mov	r0, r3
   1fa1c:	sub	sp, fp, #4
   1fa20:	pop	{fp, pc}
   1fa24:	push	{fp}		; (str fp, [sp, #-4]!)
   1fa28:	add	fp, sp, #0
   1fa2c:	sub	sp, sp, #12
   1fa30:	str	r0, [fp, #-8]
   1fa34:	ldr	r3, [fp, #-8]
   1fa38:	ldr	r3, [r3, #4]
   1fa3c:	cmp	r3, #0
   1fa40:	beq	1fa54 <__assert_fail@plt+0xe8fc>
   1fa44:	ldr	r3, [fp, #-8]
   1fa48:	ldr	r3, [r3, #8]
   1fa4c:	ldr	r3, [r3]
   1fa50:	b	1fa58 <__assert_fail@plt+0xe900>
   1fa54:	mov	r3, #0
   1fa58:	mov	r0, r3
   1fa5c:	add	sp, fp, #0
   1fa60:	pop	{fp}		; (ldr fp, [sp], #4)
   1fa64:	bx	lr
   1fa68:	push	{fp}		; (str fp, [sp, #-4]!)
   1fa6c:	add	fp, sp, #0
   1fa70:	sub	sp, sp, #12
   1fa74:	str	r0, [fp, #-8]
   1fa78:	ldr	r3, [fp, #-8]
   1fa7c:	ldr	r3, [r3, #4]
   1fa80:	cmp	r3, #0
   1fa84:	rsblt	r3, r3, #0
   1fa88:	mov	r0, r3
   1fa8c:	add	sp, fp, #0
   1fa90:	pop	{fp}		; (ldr fp, [sp], #4)
   1fa94:	bx	lr
   1fa98:	push	{fp}		; (str fp, [sp, #-4]!)
   1fa9c:	add	fp, sp, #0
   1faa0:	sub	sp, sp, #12
   1faa4:	str	r0, [fp, #-8]
   1faa8:	str	r1, [fp, #-12]
   1faac:	ldr	r3, [fp, #-12]
   1fab0:	cmp	r3, #0
   1fab4:	blt	1faf0 <__assert_fail@plt+0xe998>
   1fab8:	ldr	r3, [fp, #-8]
   1fabc:	ldr	r3, [r3, #4]
   1fac0:	eor	r2, r3, r3, asr #31
   1fac4:	sub	r2, r2, r3, asr #31
   1fac8:	ldr	r3, [fp, #-12]
   1facc:	cmp	r2, r3
   1fad0:	ble	1faf0 <__assert_fail@plt+0xe998>
   1fad4:	ldr	r3, [fp, #-8]
   1fad8:	ldr	r2, [r3, #8]
   1fadc:	ldr	r3, [fp, #-12]
   1fae0:	lsl	r3, r3, #2
   1fae4:	add	r3, r2, r3
   1fae8:	ldr	r3, [r3]
   1faec:	b	1faf4 <__assert_fail@plt+0xe99c>
   1faf0:	mov	r3, #0
   1faf4:	mov	r0, r3
   1faf8:	add	sp, fp, #0
   1fafc:	pop	{fp}		; (ldr fp, [sp], #4)
   1fb00:	bx	lr
   1fb04:	push	{fp, lr}
   1fb08:	add	fp, sp, #4
   1fb0c:	sub	sp, sp, #8
   1fb10:	str	r0, [fp, #-8]
   1fb14:	str	r1, [fp, #-12]
   1fb18:	ldr	r3, [fp, #-12]
   1fb1c:	cmp	r3, #0
   1fb20:	movne	r3, #1
   1fb24:	moveq	r3, #0
   1fb28:	uxtb	r3, r3
   1fb2c:	mov	r2, r3
   1fb30:	ldr	r3, [fp, #-12]
   1fb34:	sub	r3, r3, r2
   1fb38:	lsr	r3, r3, #5
   1fb3c:	add	r3, r3, #1
   1fb40:	mov	r1, r3
   1fb44:	ldr	r0, [fp, #-8]
   1fb48:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1fb4c:	nop			; (mov r0, r0)
   1fb50:	sub	sp, fp, #4
   1fb54:	pop	{fp, pc}
   1fb58:	push	{fp}		; (str fp, [sp, #-4]!)
   1fb5c:	add	fp, sp, #0
   1fb60:	sub	sp, sp, #12
   1fb64:	str	r0, [fp, #-8]
   1fb68:	ldr	r3, [fp, #-8]
   1fb6c:	ldr	r3, [r3, #8]
   1fb70:	mov	r0, r3
   1fb74:	add	sp, fp, #0
   1fb78:	pop	{fp}		; (ldr fp, [sp], #4)
   1fb7c:	bx	lr
   1fb80:	push	{fp, lr}
   1fb84:	add	fp, sp, #4
   1fb88:	sub	sp, sp, #8
   1fb8c:	str	r0, [fp, #-8]
   1fb90:	str	r1, [fp, #-12]
   1fb94:	ldr	r3, [fp, #-12]
   1fb98:	cmp	r3, #0
   1fb9c:	bgt	1fbb4 <__assert_fail@plt+0xea5c>
   1fba0:	ldr	r3, [pc, #72]	; 1fbf0 <__assert_fail@plt+0xea98>
   1fba4:	ldr	r2, [pc, #72]	; 1fbf4 <__assert_fail@plt+0xea9c>
   1fba8:	ldr	r1, [pc, #72]	; 1fbf8 <__assert_fail@plt+0xeaa0>
   1fbac:	ldr	r0, [pc, #72]	; 1fbfc <__assert_fail@plt+0xeaa4>
   1fbb0:	bl	11158 <__assert_fail@plt>
   1fbb4:	ldr	r3, [fp, #-8]
   1fbb8:	ldr	r2, [r3]
   1fbbc:	ldr	r3, [fp, #-12]
   1fbc0:	cmp	r2, r3
   1fbc4:	bge	1fbdc <__assert_fail@plt+0xea84>
   1fbc8:	ldr	r1, [fp, #-12]
   1fbcc:	ldr	r0, [fp, #-8]
   1fbd0:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1fbd4:	mov	r3, r0
   1fbd8:	b	1fbe4 <__assert_fail@plt+0xea8c>
   1fbdc:	ldr	r3, [fp, #-8]
   1fbe0:	ldr	r3, [r3, #8]
   1fbe4:	mov	r0, r3
   1fbe8:	sub	sp, fp, #4
   1fbec:	pop	{fp, pc}
   1fbf0:	andeq	r4, r3, ip, asr #2
   1fbf4:	andeq	r0, r0, pc, ror r6
   1fbf8:	andeq	r3, r3, r0, asr #19
   1fbfc:	andeq	r3, r3, ip, lsr sl
   1fc00:	push	{fp, lr}
   1fc04:	add	fp, sp, #4
   1fc08:	sub	sp, sp, #8
   1fc0c:	str	r0, [fp, #-8]
   1fc10:	str	r1, [fp, #-12]
   1fc14:	ldr	r1, [fp, #-12]
   1fc18:	ldr	r0, [fp, #-8]
   1fc1c:	bl	1fb80 <__assert_fail@plt+0xea28>
   1fc20:	mov	r3, r0
   1fc24:	mov	r0, r3
   1fc28:	sub	sp, fp, #4
   1fc2c:	pop	{fp, pc}
   1fc30:	push	{fp, lr}
   1fc34:	add	fp, sp, #4
   1fc38:	sub	sp, sp, #16
   1fc3c:	str	r0, [fp, #-16]
   1fc40:	str	r1, [fp, #-20]	; 0xffffffec
   1fc44:	ldr	r3, [fp, #-16]
   1fc48:	ldr	r2, [r3, #8]
   1fc4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc50:	cmp	r3, #0
   1fc54:	rsblt	r3, r3, #0
   1fc58:	mov	r1, r3
   1fc5c:	mov	r0, r2
   1fc60:	bl	1b4a0 <__assert_fail@plt+0xa348>
   1fc64:	str	r0, [fp, #-8]
   1fc68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc6c:	cmp	r3, #0
   1fc70:	bge	1fc80 <__assert_fail@plt+0xeb28>
   1fc74:	ldr	r3, [fp, #-8]
   1fc78:	rsb	r3, r3, #0
   1fc7c:	b	1fc84 <__assert_fail@plt+0xeb2c>
   1fc80:	ldr	r3, [fp, #-8]
   1fc84:	ldr	r2, [fp, #-16]
   1fc88:	str	r3, [r2, #4]
   1fc8c:	nop			; (mov r0, r0)
   1fc90:	sub	sp, fp, #4
   1fc94:	pop	{fp, pc}
   1fc98:	push	{fp}		; (str fp, [sp, #-4]!)
   1fc9c:	add	fp, sp, #0
   1fca0:	sub	sp, sp, #20
   1fca4:	str	r0, [fp, #-8]
   1fca8:	str	r1, [fp, #-12]
   1fcac:	str	r2, [fp, #-16]
   1fcb0:	ldr	r3, [fp, #-8]
   1fcb4:	mov	r2, #0
   1fcb8:	str	r2, [r3]
   1fcbc:	ldr	r3, [fp, #-8]
   1fcc0:	ldr	r2, [fp, #-12]
   1fcc4:	str	r2, [r3, #8]
   1fcc8:	ldr	r3, [fp, #-8]
   1fccc:	ldr	r2, [fp, #-16]
   1fcd0:	str	r2, [r3, #4]
   1fcd4:	ldr	r3, [fp, #-8]
   1fcd8:	mov	r0, r3
   1fcdc:	add	sp, fp, #0
   1fce0:	pop	{fp}		; (ldr fp, [sp], #4)
   1fce4:	bx	lr
   1fce8:	push	{fp, lr}
   1fcec:	add	fp, sp, #4
   1fcf0:	sub	sp, sp, #16
   1fcf4:	str	r0, [fp, #-8]
   1fcf8:	str	r1, [fp, #-12]
   1fcfc:	str	r2, [fp, #-16]
   1fd00:	ldr	r2, [fp, #-16]
   1fd04:	ldr	r1, [fp, #-12]
   1fd08:	ldr	r0, [fp, #-8]
   1fd0c:	bl	1fc98 <__assert_fail@plt+0xeb40>
   1fd10:	ldr	r1, [fp, #-16]
   1fd14:	ldr	r0, [fp, #-8]
   1fd18:	bl	1fc30 <__assert_fail@plt+0xead8>
   1fd1c:	ldr	r3, [fp, #-8]
   1fd20:	mov	r0, r3
   1fd24:	sub	sp, fp, #4
   1fd28:	pop	{fp, pc}
   1fd2c:	push	{fp, lr}
   1fd30:	add	fp, sp, #4
   1fd34:	sub	sp, sp, #56	; 0x38
   1fd38:	str	r0, [fp, #-48]	; 0xffffffd0
   1fd3c:	vstr	d0, [fp, #-60]	; 0xffffffc4
   1fd40:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1fd44:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fd48:	vcmp.f64	d6, d7
   1fd4c:	vmrs	APSR_nzcv, fpscr
   1fd50:	bne	1fd70 <__assert_fail@plt+0xec18>
   1fd54:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fd58:	vldr	d6, [pc, #568]	; 1ff98 <__assert_fail@plt+0xee40>
   1fd5c:	vmul.f64	d6, d7, d6
   1fd60:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fd64:	vcmp.f64	d6, d7
   1fd68:	vmrs	APSR_nzcv, fpscr
   1fd6c:	bne	1fd80 <__assert_fail@plt+0xec28>
   1fd70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fd74:	mov	r2, #0
   1fd78:	str	r2, [r3, #4]
   1fd7c:	b	1ff90 <__assert_fail@plt+0xee38>
   1fd80:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fd84:	vcmpe.f64	d7, #0.0
   1fd88:	vmrs	APSR_nzcv, fpscr
   1fd8c:	movmi	r3, #1
   1fd90:	movpl	r3, #0
   1fd94:	uxtb	r3, r3
   1fd98:	str	r3, [fp, #-16]
   1fd9c:	ldr	r3, [fp, #-16]
   1fda0:	cmp	r3, #0
   1fda4:	beq	1fdb4 <__assert_fail@plt+0xec5c>
   1fda8:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fdac:	vneg.f64	d7, d7
   1fdb0:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1fdb4:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fdb8:	vldr	d6, [pc, #480]	; 1ffa0 <__assert_fail@plt+0xee48>
   1fdbc:	vcmpe.f64	d7, d6
   1fdc0:	vmrs	APSR_nzcv, fpscr
   1fdc4:	bpl	1fdd8 <__assert_fail@plt+0xec80>
   1fdc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fdcc:	mov	r2, #0
   1fdd0:	str	r2, [r3, #4]
   1fdd4:	b	1ff90 <__assert_fail@plt+0xee38>
   1fdd8:	mov	r2, #0
   1fddc:	ldr	r3, [pc, #452]	; 1ffa8 <__assert_fail@plt+0xee50>
   1fde0:	strd	r2, [fp, #-28]	; 0xffffffe4
   1fde4:	vldr	d5, [pc, #436]	; 1ffa0 <__assert_fail@plt+0xee48>
   1fde8:	vldr	d6, [fp, #-28]	; 0xffffffe4
   1fdec:	vdiv.f64	d7, d5, d6
   1fdf0:	vstr	d7, [fp, #-36]	; 0xffffffdc
   1fdf4:	mov	r3, #1
   1fdf8:	str	r3, [fp, #-8]
   1fdfc:	b	1fe1c <__assert_fail@plt+0xecc4>
   1fe00:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1fe04:	vldr	d7, [fp, #-36]	; 0xffffffdc
   1fe08:	vmul.f64	d7, d6, d7
   1fe0c:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1fe10:	ldr	r3, [fp, #-8]
   1fe14:	add	r3, r3, #1
   1fe18:	str	r3, [fp, #-8]
   1fe1c:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1fe20:	vldr	d7, [fp, #-28]	; 0xffffffe4
   1fe24:	vcmpe.f64	d6, d7
   1fe28:	vmrs	APSR_nzcv, fpscr
   1fe2c:	bge	1fe00 <__assert_fail@plt+0xeca8>
   1fe30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fe34:	ldr	r2, [r3]
   1fe38:	ldr	r3, [fp, #-8]
   1fe3c:	cmp	r2, r3
   1fe40:	bge	1fe58 <__assert_fail@plt+0xed00>
   1fe44:	ldr	r1, [fp, #-8]
   1fe48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fe4c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   1fe50:	mov	r3, r0
   1fe54:	b	1fe60 <__assert_fail@plt+0xed08>
   1fe58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fe5c:	ldr	r3, [r3, #8]
   1fe60:	str	r3, [fp, #-40]	; 0xffffffd8
   1fe64:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fe68:	vcvt.u32.f64	s15, d7
   1fe6c:	vmov	r3, s15
   1fe70:	str	r3, [fp, #-44]	; 0xffffffd4
   1fe74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fe78:	vmov	s15, r3
   1fe7c:	vcvt.f64.u32	d7, s15
   1fe80:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1fe84:	vsub.f64	d7, d6, d7
   1fe88:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1fe8c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fe90:	vldr	d6, [pc, #264]	; 1ffa0 <__assert_fail@plt+0xee48>
   1fe94:	vcmpe.f64	d7, d6
   1fe98:	vmrs	APSR_nzcv, fpscr
   1fe9c:	bmi	1feb4 <__assert_fail@plt+0xed5c>
   1fea0:	ldr	r3, [pc, #260]	; 1ffac <__assert_fail@plt+0xee54>
   1fea4:	ldr	r2, [pc, #260]	; 1ffb0 <__assert_fail@plt+0xee58>
   1fea8:	ldr	r1, [pc, #260]	; 1ffb4 <__assert_fail@plt+0xee5c>
   1feac:	ldr	r0, [pc, #260]	; 1ffb8 <__assert_fail@plt+0xee60>
   1feb0:	bl	11158 <__assert_fail@plt>
   1feb4:	ldr	r3, [fp, #-8]
   1feb8:	sub	r3, r3, #1
   1febc:	str	r3, [fp, #-12]
   1fec0:	ldr	r3, [fp, #-12]
   1fec4:	lsl	r3, r3, #2
   1fec8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fecc:	add	r3, r2, r3
   1fed0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fed4:	str	r2, [r3]
   1fed8:	b	1ff54 <__assert_fail@plt+0xedfc>
   1fedc:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1fee0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   1fee4:	vmul.f64	d7, d6, d7
   1fee8:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1feec:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1fef0:	vcvt.u32.f64	s15, d7
   1fef4:	vmov	r3, s15
   1fef8:	str	r3, [fp, #-44]	; 0xffffffd4
   1fefc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ff00:	vmov	s15, r3
   1ff04:	vcvt.f64.u32	d7, s15
   1ff08:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1ff0c:	vsub.f64	d7, d6, d7
   1ff10:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1ff14:	vldr	d7, [fp, #-60]	; 0xffffffc4
   1ff18:	vldr	d6, [pc, #128]	; 1ffa0 <__assert_fail@plt+0xee48>
   1ff1c:	vcmpe.f64	d7, d6
   1ff20:	vmrs	APSR_nzcv, fpscr
   1ff24:	bmi	1ff3c <__assert_fail@plt+0xede4>
   1ff28:	ldr	r3, [pc, #124]	; 1ffac <__assert_fail@plt+0xee54>
   1ff2c:	mov	r2, #1744	; 0x6d0
   1ff30:	ldr	r1, [pc, #124]	; 1ffb4 <__assert_fail@plt+0xee5c>
   1ff34:	ldr	r0, [pc, #124]	; 1ffb8 <__assert_fail@plt+0xee60>
   1ff38:	bl	11158 <__assert_fail@plt>
   1ff3c:	ldr	r3, [fp, #-12]
   1ff40:	lsl	r3, r3, #2
   1ff44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ff48:	add	r3, r2, r3
   1ff4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ff50:	str	r2, [r3]
   1ff54:	ldr	r3, [fp, #-12]
   1ff58:	sub	r3, r3, #1
   1ff5c:	str	r3, [fp, #-12]
   1ff60:	ldr	r3, [fp, #-12]
   1ff64:	cmp	r3, #0
   1ff68:	bge	1fedc <__assert_fail@plt+0xed84>
   1ff6c:	ldr	r3, [fp, #-16]
   1ff70:	cmp	r3, #0
   1ff74:	beq	1ff84 <__assert_fail@plt+0xee2c>
   1ff78:	ldr	r3, [fp, #-8]
   1ff7c:	rsb	r3, r3, #0
   1ff80:	b	1ff88 <__assert_fail@plt+0xee30>
   1ff84:	ldr	r3, [fp, #-8]
   1ff88:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ff8c:	str	r3, [r2, #4]
   1ff90:	sub	sp, fp, #4
   1ff94:	pop	{fp, pc}
   1ff98:	andeq	r0, r0, r0
   1ff9c:	svccc	0x00e00000
   1ffa0:	andeq	r0, r0, r0
   1ffa4:	svccc	0x00f00000	; IMB
   1ffa8:	mvnsmi	r0, r0
   1ffac:	andeq	r4, r3, r0, ror #2
   1ffb0:	andeq	r0, r0, r8, asr #13
   1ffb4:	andeq	r3, r3, r0, asr #19
   1ffb8:	andeq	r3, r3, r0, ror #24
   1ffbc:	push	{fp, lr}
   1ffc0:	add	fp, sp, #4
   1ffc4:	sub	sp, sp, #16
   1ffc8:	str	r0, [fp, #-8]
   1ffcc:	vstr	d0, [fp, #-20]	; 0xffffffec
   1ffd0:	ldr	r0, [fp, #-8]
   1ffd4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   1ffd8:	vldr	d0, [fp, #-20]	; 0xffffffec
   1ffdc:	ldr	r0, [fp, #-8]
   1ffe0:	bl	1fd2c <__assert_fail@plt+0xebd4>
   1ffe4:	nop			; (mov r0, r0)
   1ffe8:	sub	sp, fp, #4
   1ffec:	pop	{fp, pc}
   1fff0:	push	{fp}		; (str fp, [sp, #-4]!)
   1fff4:	add	fp, sp, #0
   1fff8:	sub	sp, sp, #60	; 0x3c
   1fffc:	str	r0, [fp, #-56]	; 0xffffffc8
   20000:	mov	r2, #0
   20004:	ldr	r3, [pc, #496]	; 201fc <__assert_fail@plt+0xf0a4>
   20008:	strd	r2, [fp, #-44]	; 0xffffffd4
   2000c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20010:	ldr	r3, [r3, #4]
   20014:	cmp	r3, #0
   20018:	rsblt	r3, r3, #0
   2001c:	str	r3, [fp, #-16]
   20020:	ldr	r3, [fp, #-16]
   20024:	cmp	r3, #0
   20028:	bne	20038 <__assert_fail@plt+0xeee0>
   2002c:	mov	r2, #0
   20030:	mov	r3, #0
   20034:	b	201e8 <__assert_fail@plt+0xf090>
   20038:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2003c:	ldr	r2, [r3, #8]
   20040:	ldr	r3, [fp, #-16]
   20044:	sub	r3, r3, #1
   20048:	str	r3, [fp, #-16]
   2004c:	ldr	r3, [fp, #-16]
   20050:	lsl	r3, r3, #2
   20054:	add	r3, r2, r3
   20058:	ldr	r3, [r3]
   2005c:	str	r3, [fp, #-12]
   20060:	ldr	r3, [fp, #-12]
   20064:	str	r3, [fp, #-32]	; 0xffffffe0
   20068:	mov	r3, #0
   2006c:	str	r3, [fp, #-36]	; 0xffffffdc
   20070:	mov	r3, #8
   20074:	str	r3, [fp, #-48]	; 0xffffffd0
   20078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2007c:	cmp	r3, #31
   20080:	bhi	200d0 <__assert_fail@plt+0xef78>
   20084:	b	200a4 <__assert_fail@plt+0xef4c>
   20088:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2008c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20090:	lsl	r3, r2, r3
   20094:	str	r3, [fp, #-32]	; 0xffffffe0
   20098:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2009c:	add	r3, r3, #8
   200a0:	str	r3, [fp, #-36]	; 0xffffffdc
   200a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200a8:	and	r3, r3, #-16777216	; 0xff000000
   200ac:	cmp	r3, #0
   200b0:	beq	20088 <__assert_fail@plt+0xef30>
   200b4:	b	200d0 <__assert_fail@plt+0xef78>
   200b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200bc:	lsl	r3, r3, #1
   200c0:	str	r3, [fp, #-32]	; 0xffffffe0
   200c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   200c8:	add	r3, r3, #1
   200cc:	str	r3, [fp, #-36]	; 0xffffffdc
   200d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200d4:	cmp	r3, #0
   200d8:	bge	200b8 <__assert_fail@plt+0xef60>
   200dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   200e0:	str	r3, [fp, #-8]
   200e4:	ldr	r3, [fp, #-8]
   200e8:	add	r3, r3, #21
   200ec:	str	r3, [fp, #-8]
   200f0:	ldr	r3, [fp, #-8]
   200f4:	cmp	r3, #0
   200f8:	bge	20118 <__assert_fail@plt+0xefc0>
   200fc:	ldr	r3, [fp, #-8]
   20100:	rsb	r3, r3, #0
   20104:	mvn	r2, #0
   20108:	lsl	r3, r2, r3
   2010c:	ldr	r2, [fp, #-12]
   20110:	and	r3, r3, r2
   20114:	str	r3, [fp, #-12]
   20118:	ldr	r3, [fp, #-12]
   2011c:	vmov	s15, r3
   20120:	vcvt.f64.u32	d7, s15
   20124:	vstr	d7, [fp, #-28]	; 0xffffffe4
   20128:	b	201b0 <__assert_fail@plt+0xf058>
   2012c:	vldr	d6, [fp, #-28]	; 0xffffffe4
   20130:	vldr	d7, [fp, #-44]	; 0xffffffd4
   20134:	vmul.f64	d7, d6, d7
   20138:	vstr	d7, [fp, #-28]	; 0xffffffe4
   2013c:	ldr	r3, [fp, #-8]
   20140:	cmp	r3, #0
   20144:	ble	201b0 <__assert_fail@plt+0xf058>
   20148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2014c:	ldr	r2, [r3, #8]
   20150:	ldr	r3, [fp, #-16]
   20154:	lsl	r3, r3, #2
   20158:	add	r3, r2, r3
   2015c:	ldr	r3, [r3]
   20160:	str	r3, [fp, #-12]
   20164:	ldr	r3, [fp, #-8]
   20168:	sub	r3, r3, #32
   2016c:	str	r3, [fp, #-8]
   20170:	ldr	r3, [fp, #-8]
   20174:	cmp	r3, #0
   20178:	bge	20198 <__assert_fail@plt+0xf040>
   2017c:	ldr	r3, [fp, #-8]
   20180:	rsb	r3, r3, #0
   20184:	mvn	r2, #0
   20188:	lsl	r3, r2, r3
   2018c:	ldr	r2, [fp, #-12]
   20190:	and	r3, r3, r2
   20194:	str	r3, [fp, #-12]
   20198:	ldr	r3, [fp, #-12]
   2019c:	vmov	s15, r3
   201a0:	vcvt.f64.u32	d7, s15
   201a4:	vldr	d6, [fp, #-28]	; 0xffffffe4
   201a8:	vadd.f64	d7, d6, d7
   201ac:	vstr	d7, [fp, #-28]	; 0xffffffe4
   201b0:	ldr	r3, [fp, #-16]
   201b4:	sub	r3, r3, #1
   201b8:	str	r3, [fp, #-16]
   201bc:	ldr	r3, [fp, #-16]
   201c0:	cmp	r3, #0
   201c4:	bge	2012c <__assert_fail@plt+0xefd4>
   201c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   201cc:	ldr	r3, [r3, #4]
   201d0:	cmp	r3, #0
   201d4:	bge	201e4 <__assert_fail@plt+0xf08c>
   201d8:	vldr	d7, [fp, #-28]	; 0xffffffe4
   201dc:	vneg.f64	d7, d7
   201e0:	vstr	d7, [fp, #-28]	; 0xffffffe4
   201e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   201e8:	vmov	d7, r2, r3
   201ec:	vmov.f64	d0, d7
   201f0:	add	sp, fp, #0
   201f4:	pop	{fp}		; (ldr fp, [sp], #4)
   201f8:	bx	lr
   201fc:	mvnsmi	r0, r0
   20200:	push	{fp}		; (str fp, [sp, #-4]!)
   20204:	add	fp, sp, #0
   20208:	sub	sp, sp, #52	; 0x34
   2020c:	str	r0, [fp, #-40]	; 0xffffffd8
   20210:	vstr	d0, [fp, #-52]	; 0xffffffcc
   20214:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20218:	ldr	r3, [r3, #4]
   2021c:	str	r3, [fp, #-12]
   20220:	vldr	d7, [fp, #-52]	; 0xffffffcc
   20224:	vcmpe.f64	d7, #0.0
   20228:	vmrs	APSR_nzcv, fpscr
   2022c:	blt	20238 <__assert_fail@plt+0xf0e0>
   20230:	vldr	d7, [fp, #-52]	; 0xffffffcc
   20234:	b	20240 <__assert_fail@plt+0xf0e8>
   20238:	vldr	d7, [fp, #-52]	; 0xffffffcc
   2023c:	vneg.f64	d7, d7
   20240:	vstr	d7, [fp, #-52]	; 0xffffffcc
   20244:	ldr	r3, [fp, #-12]
   20248:	cmp	r3, #0
   2024c:	beq	2036c <__assert_fail@plt+0xf214>
   20250:	ldr	r3, [fp, #-12]
   20254:	cmp	r3, #0
   20258:	rsblt	r3, r3, #0
   2025c:	str	r3, [fp, #-12]
   20260:	mov	r2, #0
   20264:	ldr	r3, [pc, #308]	; 203a0 <__assert_fail@plt+0xf248>
   20268:	strd	r2, [fp, #-20]	; 0xffffffec
   2026c:	vldr	d5, [pc, #292]	; 20398 <__assert_fail@plt+0xf240>
   20270:	vldr	d6, [fp, #-20]	; 0xffffffec
   20274:	vdiv.f64	d7, d5, d6
   20278:	vstr	d7, [fp, #-28]	; 0xffffffe4
   2027c:	mov	r3, #1
   20280:	str	r3, [fp, #-8]
   20284:	b	202a4 <__assert_fail@plt+0xf14c>
   20288:	vldr	d6, [fp, #-52]	; 0xffffffcc
   2028c:	vldr	d7, [fp, #-28]	; 0xffffffe4
   20290:	vmul.f64	d7, d6, d7
   20294:	vstr	d7, [fp, #-52]	; 0xffffffcc
   20298:	ldr	r3, [fp, #-8]
   2029c:	add	r3, r3, #1
   202a0:	str	r3, [fp, #-8]
   202a4:	ldr	r2, [fp, #-8]
   202a8:	ldr	r3, [fp, #-12]
   202ac:	cmp	r2, r3
   202b0:	blt	20288 <__assert_fail@plt+0xf130>
   202b4:	vldr	d6, [fp, #-52]	; 0xffffffcc
   202b8:	vldr	d7, [fp, #-20]	; 0xffffffec
   202bc:	vcmpe.f64	d6, d7
   202c0:	vmrs	APSR_nzcv, fpscr
   202c4:	blt	202d0 <__assert_fail@plt+0xf178>
   202c8:	mvn	r3, #0
   202cc:	b	20388 <__assert_fail@plt+0xf230>
   202d0:	ldr	r3, [fp, #-12]
   202d4:	str	r3, [fp, #-8]
   202d8:	b	20358 <__assert_fail@plt+0xf200>
   202dc:	vldr	d7, [fp, #-52]	; 0xffffffcc
   202e0:	vcvt.u32.f64	s15, d7
   202e4:	vmov	r3, s15
   202e8:	str	r3, [fp, #-32]	; 0xffffffe0
   202ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   202f0:	ldr	r2, [r3, #8]
   202f4:	ldr	r3, [fp, #-8]
   202f8:	lsl	r3, r3, #2
   202fc:	add	r3, r2, r3
   20300:	ldr	r3, [r3]
   20304:	str	r3, [fp, #-36]	; 0xffffffdc
   20308:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2030c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20310:	cmp	r2, r3
   20314:	bls	20320 <__assert_fail@plt+0xf1c8>
   20318:	mov	r3, #1
   2031c:	b	20388 <__assert_fail@plt+0xf230>
   20320:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20324:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20328:	cmp	r2, r3
   2032c:	bcs	20338 <__assert_fail@plt+0xf1e0>
   20330:	mvn	r3, #0
   20334:	b	20388 <__assert_fail@plt+0xf230>
   20338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2033c:	vmov	s15, r3
   20340:	vcvt.f64.u32	d7, s15
   20344:	vldr	d6, [fp, #-52]	; 0xffffffcc
   20348:	vsub.f64	d6, d6, d7
   2034c:	vldr	d7, [fp, #-20]	; 0xffffffec
   20350:	vmul.f64	d7, d6, d7
   20354:	vstr	d7, [fp, #-52]	; 0xffffffcc
   20358:	ldr	r3, [fp, #-8]
   2035c:	sub	r2, r3, #1
   20360:	str	r2, [fp, #-8]
   20364:	cmp	r3, #0
   20368:	bgt	202dc <__assert_fail@plt+0xf184>
   2036c:	vldr	d7, [fp, #-52]	; 0xffffffcc
   20370:	vcmpe.f64	d7, #0.0
   20374:	vmrs	APSR_nzcv, fpscr
   20378:	movgt	r3, #1
   2037c:	movle	r3, #0
   20380:	uxtb	r3, r3
   20384:	rsb	r3, r3, #0
   20388:	mov	r0, r3
   2038c:	add	sp, fp, #0
   20390:	pop	{fp}		; (ldr fp, [sp], #4)
   20394:	bx	lr
   20398:	andeq	r0, r0, r0
   2039c:	svccc	0x00f00000	; IMB
   203a0:	mvnsmi	r0, r0
   203a4:	push	{fp, lr}
   203a8:	add	fp, sp, #4
   203ac:	sub	sp, sp, #16
   203b0:	str	r0, [fp, #-8]
   203b4:	vstr	d0, [fp, #-20]	; 0xffffffec
   203b8:	ldr	r3, [fp, #-8]
   203bc:	ldr	r3, [r3, #4]
   203c0:	cmp	r3, #0
   203c4:	bge	203f8 <__assert_fail@plt+0xf2a0>
   203c8:	vldr	d7, [fp, #-20]	; 0xffffffec
   203cc:	vcmpe.f64	d7, #0.0
   203d0:	vmrs	APSR_nzcv, fpscr
   203d4:	blt	203e0 <__assert_fail@plt+0xf288>
   203d8:	mvn	r3, #0
   203dc:	b	20420 <__assert_fail@plt+0xf2c8>
   203e0:	vldr	d0, [fp, #-20]	; 0xffffffec
   203e4:	ldr	r0, [fp, #-8]
   203e8:	bl	20200 <__assert_fail@plt+0xf0a8>
   203ec:	mov	r3, r0
   203f0:	rsb	r3, r3, #0
   203f4:	b	20420 <__assert_fail@plt+0xf2c8>
   203f8:	vldr	d7, [fp, #-20]	; 0xffffffec
   203fc:	vcmpe.f64	d7, #0.0
   20400:	vmrs	APSR_nzcv, fpscr
   20404:	bpl	20410 <__assert_fail@plt+0xf2b8>
   20408:	mov	r3, #1
   2040c:	b	20420 <__assert_fail@plt+0xf2c8>
   20410:	vldr	d0, [fp, #-20]	; 0xffffffec
   20414:	ldr	r0, [fp, #-8]
   20418:	bl	20200 <__assert_fail@plt+0xf0a8>
   2041c:	mov	r3, r0
   20420:	mov	r0, r3
   20424:	sub	sp, fp, #4
   20428:	pop	{fp, pc}
   2042c:	push	{fp}		; (str fp, [sp, #-4]!)
   20430:	add	fp, sp, #0
   20434:	sub	sp, sp, #12
   20438:	str	r0, [fp, #-8]
   2043c:	ldr	r3, [fp, #-8]
   20440:	ldr	r3, [r3, #4]
   20444:	cmp	r3, #0
   20448:	movgt	r3, #1
   2044c:	movle	r3, #0
   20450:	uxtb	r3, r3
   20454:	mov	r2, r3
   20458:	ldr	r3, [fp, #-8]
   2045c:	ldr	r3, [r3, #4]
   20460:	lsr	r3, r3, #31
   20464:	uxtb	r3, r3
   20468:	sub	r3, r2, r3
   2046c:	mov	r0, r3
   20470:	add	sp, fp, #0
   20474:	pop	{fp}		; (ldr fp, [sp], #4)
   20478:	bx	lr
   2047c:	push	{fp, lr}
   20480:	add	fp, sp, #4
   20484:	sub	sp, sp, #16
   20488:	str	r0, [fp, #-16]
   2048c:	str	r1, [fp, #-20]	; 0xffffffec
   20490:	ldr	r3, [fp, #-16]
   20494:	ldr	r3, [r3, #4]
   20498:	str	r3, [fp, #-8]
   2049c:	ldr	r3, [fp, #-20]	; 0xffffffec
   204a0:	cmp	r3, #0
   204a4:	blt	204c0 <__assert_fail@plt+0xf368>
   204a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   204ac:	mov	r1, r3
   204b0:	ldr	r0, [fp, #-16]
   204b4:	bl	204fc <__assert_fail@plt+0xf3a4>
   204b8:	mov	r3, r0
   204bc:	b	204f0 <__assert_fail@plt+0xf398>
   204c0:	ldr	r3, [fp, #-8]
   204c4:	cmp	r3, #0
   204c8:	blt	204d4 <__assert_fail@plt+0xf37c>
   204cc:	mov	r3, #1
   204d0:	b	204f0 <__assert_fail@plt+0xf398>
   204d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   204d8:	rsb	r3, r3, #0
   204dc:	mov	r1, r3
   204e0:	ldr	r0, [fp, #-16]
   204e4:	bl	20608 <__assert_fail@plt+0xf4b0>
   204e8:	mov	r3, r0
   204ec:	rsb	r3, r3, #0
   204f0:	mov	r0, r3
   204f4:	sub	sp, fp, #4
   204f8:	pop	{fp, pc}
   204fc:	push	{fp, lr}
   20500:	add	fp, sp, #4
   20504:	sub	sp, sp, #16
   20508:	str	r0, [fp, #-16]
   2050c:	str	r1, [fp, #-20]	; 0xffffffec
   20510:	ldr	r3, [fp, #-16]
   20514:	ldr	r3, [r3, #4]
   20518:	str	r3, [fp, #-8]
   2051c:	ldr	r3, [fp, #-8]
   20520:	cmp	r3, #0
   20524:	bge	20530 <__assert_fail@plt+0xf3d8>
   20528:	mvn	r3, #0
   2052c:	b	20540 <__assert_fail@plt+0xf3e8>
   20530:	ldr	r1, [fp, #-20]	; 0xffffffec
   20534:	ldr	r0, [fp, #-16]
   20538:	bl	20608 <__assert_fail@plt+0xf4b0>
   2053c:	mov	r3, r0
   20540:	mov	r0, r3
   20544:	sub	sp, fp, #4
   20548:	pop	{fp, pc}
   2054c:	push	{fp, lr}
   20550:	add	fp, sp, #4
   20554:	sub	sp, sp, #16
   20558:	str	r0, [fp, #-16]
   2055c:	str	r1, [fp, #-20]	; 0xffffffec
   20560:	ldr	r3, [fp, #-16]
   20564:	ldr	r3, [r3, #4]
   20568:	str	r3, [fp, #-8]
   2056c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20570:	ldr	r3, [r3, #4]
   20574:	str	r3, [fp, #-12]
   20578:	ldr	r2, [fp, #-8]
   2057c:	ldr	r3, [fp, #-12]
   20580:	cmp	r2, r3
   20584:	beq	205a8 <__assert_fail@plt+0xf450>
   20588:	ldr	r2, [fp, #-8]
   2058c:	ldr	r3, [fp, #-12]
   20590:	cmp	r2, r3
   20594:	bge	205a0 <__assert_fail@plt+0xf448>
   20598:	mvn	r3, #0
   2059c:	b	205fc <__assert_fail@plt+0xf4a4>
   205a0:	mov	r3, #1
   205a4:	b	205fc <__assert_fail@plt+0xf4a4>
   205a8:	ldr	r3, [fp, #-8]
   205ac:	cmp	r3, #0
   205b0:	blt	205d8 <__assert_fail@plt+0xf480>
   205b4:	ldr	r3, [fp, #-16]
   205b8:	ldr	r0, [r3, #8]
   205bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   205c0:	ldr	r3, [r3, #8]
   205c4:	ldr	r2, [fp, #-8]
   205c8:	mov	r1, r3
   205cc:	bl	1b37c <__assert_fail@plt+0xa224>
   205d0:	mov	r3, r0
   205d4:	b	205fc <__assert_fail@plt+0xf4a4>
   205d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   205dc:	ldr	r0, [r3, #8]
   205e0:	ldr	r3, [fp, #-16]
   205e4:	ldr	r1, [r3, #8]
   205e8:	ldr	r3, [fp, #-8]
   205ec:	rsb	r3, r3, #0
   205f0:	mov	r2, r3
   205f4:	bl	1b37c <__assert_fail@plt+0xa224>
   205f8:	mov	r3, r0
   205fc:	mov	r0, r3
   20600:	sub	sp, fp, #4
   20604:	pop	{fp, pc}
   20608:	push	{fp, lr}
   2060c:	add	fp, sp, #4
   20610:	sub	sp, sp, #16
   20614:	str	r0, [fp, #-16]
   20618:	str	r1, [fp, #-20]	; 0xffffffec
   2061c:	ldr	r3, [fp, #-16]
   20620:	ldr	r3, [r3, #4]
   20624:	cmp	r3, #0
   20628:	rsblt	r3, r3, #0
   2062c:	str	r3, [fp, #-8]
   20630:	ldr	r3, [fp, #-16]
   20634:	ldr	r3, [r3, #8]
   20638:	ldr	r1, [fp, #-8]
   2063c:	mov	r0, r3
   20640:	bl	1f77c <__assert_fail@plt+0xe624>
   20644:	mov	r3, r0
   20648:	cmp	r3, #0
   2064c:	bne	20658 <__assert_fail@plt+0xf500>
   20650:	mov	r3, #1
   20654:	b	2069c <__assert_fail@plt+0xf544>
   20658:	ldr	r0, [fp, #-16]
   2065c:	bl	1fa24 <__assert_fail@plt+0xe8cc>
   20660:	str	r0, [fp, #-12]
   20664:	ldr	r2, [fp, #-12]
   20668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2066c:	cmp	r2, r3
   20670:	movhi	r3, #1
   20674:	movls	r3, #0
   20678:	uxtb	r3, r3
   2067c:	mov	r1, r3
   20680:	ldr	r2, [fp, #-12]
   20684:	ldr	r3, [fp, #-20]	; 0xffffffec
   20688:	cmp	r2, r3
   2068c:	movcc	r3, #1
   20690:	movcs	r3, #0
   20694:	uxtb	r3, r3
   20698:	sub	r3, r1, r3
   2069c:	mov	r0, r3
   206a0:	sub	sp, fp, #4
   206a4:	pop	{fp, pc}
   206a8:	push	{fp, lr}
   206ac:	add	fp, sp, #4
   206b0:	sub	sp, sp, #8
   206b4:	str	r0, [fp, #-8]
   206b8:	str	r1, [fp, #-12]
   206bc:	ldr	r3, [fp, #-8]
   206c0:	ldr	r0, [r3, #8]
   206c4:	ldr	r3, [fp, #-8]
   206c8:	ldr	r3, [r3, #4]
   206cc:	eor	r1, r3, r3, asr #31
   206d0:	sub	r1, r1, r3, asr #31
   206d4:	ldr	r3, [fp, #-12]
   206d8:	ldr	r2, [r3, #8]
   206dc:	ldr	r3, [fp, #-12]
   206e0:	ldr	r3, [r3, #4]
   206e4:	cmp	r3, #0
   206e8:	rsblt	r3, r3, #0
   206ec:	bl	1b434 <__assert_fail@plt+0xa2dc>
   206f0:	mov	r3, r0
   206f4:	mov	r0, r3
   206f8:	sub	sp, fp, #4
   206fc:	pop	{fp, pc}
   20700:	push	{fp, lr}
   20704:	add	fp, sp, #4
   20708:	sub	sp, sp, #8
   2070c:	str	r0, [fp, #-8]
   20710:	str	r1, [fp, #-12]
   20714:	ldr	r1, [fp, #-12]
   20718:	ldr	r0, [fp, #-8]
   2071c:	bl	1f5e8 <__assert_fail@plt+0xe490>
   20720:	ldr	r3, [fp, #-8]
   20724:	ldr	r3, [r3, #4]
   20728:	eor	r2, r3, r3, asr #31
   2072c:	sub	r2, r2, r3, asr #31
   20730:	ldr	r3, [fp, #-8]
   20734:	str	r2, [r3, #4]
   20738:	nop			; (mov r0, r0)
   2073c:	sub	sp, fp, #4
   20740:	pop	{fp, pc}
   20744:	push	{fp, lr}
   20748:	add	fp, sp, #4
   2074c:	sub	sp, sp, #8
   20750:	str	r0, [fp, #-8]
   20754:	str	r1, [fp, #-12]
   20758:	ldr	r1, [fp, #-12]
   2075c:	ldr	r0, [fp, #-8]
   20760:	bl	1f5e8 <__assert_fail@plt+0xe490>
   20764:	ldr	r3, [fp, #-8]
   20768:	ldr	r3, [r3, #4]
   2076c:	rsb	r2, r3, #0
   20770:	ldr	r3, [fp, #-8]
   20774:	str	r2, [r3, #4]
   20778:	nop			; (mov r0, r0)
   2077c:	sub	sp, fp, #4
   20780:	pop	{fp, pc}
   20784:	push	{fp}		; (str fp, [sp, #-4]!)
   20788:	add	fp, sp, #0
   2078c:	sub	sp, sp, #28
   20790:	str	r0, [fp, #-24]	; 0xffffffe8
   20794:	str	r1, [fp, #-28]	; 0xffffffe4
   20798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2079c:	ldr	r3, [r3, #4]
   207a0:	str	r3, [fp, #-8]
   207a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207a8:	ldr	r2, [r3, #4]
   207ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207b0:	str	r2, [r3, #4]
   207b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207b8:	ldr	r2, [fp, #-8]
   207bc:	str	r2, [r3, #4]
   207c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207c4:	ldr	r3, [r3]
   207c8:	str	r3, [fp, #-12]
   207cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207d0:	ldr	r2, [r3]
   207d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207d8:	str	r2, [r3]
   207dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207e0:	ldr	r2, [fp, #-12]
   207e4:	str	r2, [r3]
   207e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207ec:	ldr	r3, [r3, #8]
   207f0:	str	r3, [fp, #-16]
   207f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   207f8:	ldr	r2, [r3, #8]
   207fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20800:	str	r2, [r3, #8]
   20804:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20808:	ldr	r2, [fp, #-16]
   2080c:	str	r2, [r3, #8]
   20810:	nop			; (mov r0, r0)
   20814:	add	sp, fp, #0
   20818:	pop	{fp}		; (ldr fp, [sp], #4)
   2081c:	bx	lr
   20820:	push	{fp, lr}
   20824:	add	fp, sp, #4
   20828:	sub	sp, sp, #32
   2082c:	str	r0, [fp, #-24]	; 0xffffffe8
   20830:	str	r1, [fp, #-28]	; 0xffffffe4
   20834:	str	r2, [fp, #-32]	; 0xffffffe0
   20838:	sub	r3, fp, #16
   2083c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20840:	mov	r0, r3
   20844:	bl	1f6bc <__assert_fail@plt+0xe564>
   20848:	sub	r3, fp, #16
   2084c:	mov	r2, r3
   20850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20858:	bl	20bd8 <__assert_fail@plt+0xfa80>
   2085c:	sub	r3, fp, #16
   20860:	mov	r0, r3
   20864:	bl	1f3e0 <__assert_fail@plt+0xe288>
   20868:	nop			; (mov r0, r0)
   2086c:	sub	sp, fp, #4
   20870:	pop	{fp, pc}
   20874:	push	{fp, lr}
   20878:	add	fp, sp, #4
   2087c:	sub	sp, sp, #16
   20880:	str	r0, [fp, #-8]
   20884:	str	r1, [fp, #-12]
   20888:	str	r2, [fp, #-16]
   2088c:	ldr	r2, [fp, #-12]
   20890:	ldr	r1, [fp, #-16]
   20894:	ldr	r0, [fp, #-8]
   20898:	bl	208b4 <__assert_fail@plt+0xf75c>
   2089c:	ldr	r1, [fp, #-8]
   208a0:	ldr	r0, [fp, #-8]
   208a4:	bl	20744 <__assert_fail@plt+0xf5ec>
   208a8:	nop			; (mov r0, r0)
   208ac:	sub	sp, fp, #4
   208b0:	pop	{fp, pc}
   208b4:	push	{fp, lr}
   208b8:	add	fp, sp, #4
   208bc:	sub	sp, sp, #16
   208c0:	str	r0, [fp, #-8]
   208c4:	str	r1, [fp, #-12]
   208c8:	str	r2, [fp, #-16]
   208cc:	ldr	r1, [fp, #-16]
   208d0:	ldr	r0, [fp, #-8]
   208d4:	bl	20744 <__assert_fail@plt+0xf5ec>
   208d8:	ldr	r2, [fp, #-12]
   208dc:	ldr	r1, [fp, #-8]
   208e0:	ldr	r0, [fp, #-8]
   208e4:	bl	20820 <__assert_fail@plt+0xf6c8>
   208e8:	nop			; (mov r0, r0)
   208ec:	sub	sp, fp, #4
   208f0:	pop	{fp, pc}
   208f4:	push	{fp, lr}
   208f8:	add	fp, sp, #4
   208fc:	sub	sp, sp, #48	; 0x30
   20900:	str	r0, [fp, #-32]	; 0xffffffe0
   20904:	str	r1, [fp, #-36]	; 0xffffffdc
   20908:	str	r2, [fp, #-40]	; 0xffffffd8
   2090c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20910:	ldr	r3, [r3, #4]
   20914:	cmp	r3, #0
   20918:	rsblt	r3, r3, #0
   2091c:	str	r3, [fp, #-8]
   20920:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20924:	ldr	r3, [r3, #4]
   20928:	cmp	r3, #0
   2092c:	rsblt	r3, r3, #0
   20930:	str	r3, [fp, #-12]
   20934:	ldr	r2, [fp, #-8]
   20938:	ldr	r3, [fp, #-12]
   2093c:	cmp	r2, r3
   20940:	bge	20974 <__assert_fail@plt+0xf81c>
   20944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20948:	str	r3, [fp, #-16]
   2094c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20950:	str	r3, [fp, #-36]	; 0xffffffdc
   20954:	ldr	r3, [fp, #-16]
   20958:	str	r3, [fp, #-40]	; 0xffffffd8
   2095c:	ldr	r3, [fp, #-8]
   20960:	str	r3, [fp, #-20]	; 0xffffffec
   20964:	ldr	r3, [fp, #-12]
   20968:	str	r3, [fp, #-8]
   2096c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20970:	str	r3, [fp, #-12]
   20974:	ldr	r3, [fp, #-8]
   20978:	add	r2, r3, #1
   2097c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20980:	ldr	r3, [r3]
   20984:	cmp	r2, r3
   20988:	ble	209a8 <__assert_fail@plt+0xf850>
   2098c:	ldr	r3, [fp, #-8]
   20990:	add	r3, r3, #1
   20994:	mov	r1, r3
   20998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2099c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   209a0:	mov	r3, r0
   209a4:	b	209b0 <__assert_fail@plt+0xf858>
   209a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   209ac:	ldr	r3, [r3, #8]
   209b0:	str	r3, [fp, #-24]	; 0xffffffe8
   209b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   209b8:	ldr	r1, [r3, #8]
   209bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   209c0:	ldr	r2, [r3, #8]
   209c4:	ldr	r3, [fp, #-12]
   209c8:	str	r3, [sp]
   209cc:	mov	r3, r2
   209d0:	ldr	r2, [fp, #-8]
   209d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   209d8:	bl	1b77c <__assert_fail@plt+0xa624>
   209dc:	str	r0, [fp, #-28]	; 0xffffffe4
   209e0:	ldr	r3, [fp, #-8]
   209e4:	lsl	r3, r3, #2
   209e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   209ec:	add	r3, r2, r3
   209f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   209f4:	str	r2, [r3]
   209f8:	ldr	r2, [fp, #-8]
   209fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20a00:	add	r3, r2, r3
   20a04:	mov	r0, r3
   20a08:	sub	sp, fp, #4
   20a0c:	pop	{fp, pc}
   20a10:	push	{fp, lr}
   20a14:	add	fp, sp, #4
   20a18:	sub	sp, sp, #48	; 0x30
   20a1c:	str	r0, [fp, #-32]	; 0xffffffe0
   20a20:	str	r1, [fp, #-36]	; 0xffffffdc
   20a24:	str	r2, [fp, #-40]	; 0xffffffd8
   20a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a2c:	ldr	r3, [r3, #4]
   20a30:	cmp	r3, #0
   20a34:	rsblt	r3, r3, #0
   20a38:	str	r3, [fp, #-8]
   20a3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a40:	ldr	r3, [r3, #4]
   20a44:	cmp	r3, #0
   20a48:	rsblt	r3, r3, #0
   20a4c:	str	r3, [fp, #-12]
   20a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a54:	ldr	r0, [r3, #8]
   20a58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20a5c:	ldr	r2, [r3, #8]
   20a60:	ldr	r3, [fp, #-12]
   20a64:	ldr	r1, [fp, #-8]
   20a68:	bl	1b434 <__assert_fail@plt+0xa2dc>
   20a6c:	str	r0, [fp, #-16]
   20a70:	ldr	r3, [fp, #-16]
   20a74:	cmp	r3, #0
   20a78:	ble	20b10 <__assert_fail@plt+0xf9b8>
   20a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20a80:	ldr	r2, [r3]
   20a84:	ldr	r3, [fp, #-8]
   20a88:	cmp	r2, r3
   20a8c:	bge	20aa4 <__assert_fail@plt+0xf94c>
   20a90:	ldr	r1, [fp, #-8]
   20a94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20a98:	bl	1f428 <__assert_fail@plt+0xe2d0>
   20a9c:	mov	r3, r0
   20aa0:	b	20aac <__assert_fail@plt+0xf954>
   20aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20aa8:	ldr	r3, [r3, #8]
   20aac:	str	r3, [fp, #-20]	; 0xffffffec
   20ab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20ab4:	ldr	r1, [r3, #8]
   20ab8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20abc:	ldr	r2, [r3, #8]
   20ac0:	ldr	r3, [fp, #-12]
   20ac4:	str	r3, [sp]
   20ac8:	mov	r3, r2
   20acc:	ldr	r2, [fp, #-8]
   20ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ad4:	bl	1ba18 <__assert_fail@plt+0xa8c0>
   20ad8:	str	r0, [fp, #-24]	; 0xffffffe8
   20adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ae0:	cmp	r3, #0
   20ae4:	beq	20afc <__assert_fail@plt+0xf9a4>
   20ae8:	ldr	r3, [pc, #212]	; 20bc4 <__assert_fail@plt+0xfa6c>
   20aec:	ldr	r2, [pc, #212]	; 20bc8 <__assert_fail@plt+0xfa70>
   20af0:	ldr	r1, [pc, #212]	; 20bcc <__assert_fail@plt+0xfa74>
   20af4:	ldr	r0, [pc, #212]	; 20bd0 <__assert_fail@plt+0xfa78>
   20af8:	bl	11158 <__assert_fail@plt>
   20afc:	ldr	r1, [fp, #-8]
   20b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b04:	bl	1b4a0 <__assert_fail@plt+0xa348>
   20b08:	mov	r3, r0
   20b0c:	b	20bb8 <__assert_fail@plt+0xfa60>
   20b10:	ldr	r3, [fp, #-16]
   20b14:	cmp	r3, #0
   20b18:	bge	20bb4 <__assert_fail@plt+0xfa5c>
   20b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20b20:	ldr	r2, [r3]
   20b24:	ldr	r3, [fp, #-12]
   20b28:	cmp	r2, r3
   20b2c:	bge	20b44 <__assert_fail@plt+0xf9ec>
   20b30:	ldr	r1, [fp, #-12]
   20b34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20b38:	bl	1f428 <__assert_fail@plt+0xe2d0>
   20b3c:	mov	r3, r0
   20b40:	b	20b4c <__assert_fail@plt+0xf9f4>
   20b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20b48:	ldr	r3, [r3, #8]
   20b4c:	str	r3, [fp, #-20]	; 0xffffffec
   20b50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b54:	ldr	r1, [r3, #8]
   20b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20b5c:	ldr	r2, [r3, #8]
   20b60:	ldr	r3, [fp, #-8]
   20b64:	str	r3, [sp]
   20b68:	mov	r3, r2
   20b6c:	ldr	r2, [fp, #-12]
   20b70:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b74:	bl	1ba18 <__assert_fail@plt+0xa8c0>
   20b78:	str	r0, [fp, #-28]	; 0xffffffe4
   20b7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b80:	cmp	r3, #0
   20b84:	beq	20b9c <__assert_fail@plt+0xfa44>
   20b88:	ldr	r3, [pc, #52]	; 20bc4 <__assert_fail@plt+0xfa6c>
   20b8c:	ldr	r2, [pc, #64]	; 20bd4 <__assert_fail@plt+0xfa7c>
   20b90:	ldr	r1, [pc, #52]	; 20bcc <__assert_fail@plt+0xfa74>
   20b94:	ldr	r0, [pc, #52]	; 20bd0 <__assert_fail@plt+0xfa78>
   20b98:	bl	11158 <__assert_fail@plt>
   20b9c:	ldr	r1, [fp, #-12]
   20ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ba4:	bl	1b4a0 <__assert_fail@plt+0xa348>
   20ba8:	mov	r3, r0
   20bac:	rsb	r3, r3, #0
   20bb0:	b	20bb8 <__assert_fail@plt+0xfa60>
   20bb4:	mov	r3, #0
   20bb8:	mov	r0, r3
   20bbc:	sub	sp, fp, #4
   20bc0:	pop	{fp, pc}
   20bc4:	andeq	r4, r3, ip, ror #2
   20bc8:	ldrdeq	r0, [r0], -r6
   20bcc:	andeq	r3, r3, r0, asr #19
   20bd0:	andeq	r3, r3, r8, ror #23
   20bd4:	ldrdeq	r0, [r0], -ip
   20bd8:	push	{fp, lr}
   20bdc:	add	fp, sp, #4
   20be0:	sub	sp, sp, #24
   20be4:	str	r0, [fp, #-16]
   20be8:	str	r1, [fp, #-20]	; 0xffffffec
   20bec:	str	r2, [fp, #-24]	; 0xffffffe8
   20bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   20bf4:	ldr	r2, [r3, #4]
   20bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20bfc:	ldr	r3, [r3, #4]
   20c00:	eor	r3, r3, r2
   20c04:	cmp	r3, #0
   20c08:	blt	20c24 <__assert_fail@plt+0xfacc>
   20c0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c10:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c14:	ldr	r0, [fp, #-16]
   20c18:	bl	208f4 <__assert_fail@plt+0xf79c>
   20c1c:	str	r0, [fp, #-8]
   20c20:	b	20c38 <__assert_fail@plt+0xfae0>
   20c24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c28:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c2c:	ldr	r0, [fp, #-16]
   20c30:	bl	20a10 <__assert_fail@plt+0xf8b8>
   20c34:	str	r0, [fp, #-8]
   20c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   20c3c:	ldr	r3, [r3, #4]
   20c40:	cmp	r3, #0
   20c44:	bge	20c54 <__assert_fail@plt+0xfafc>
   20c48:	ldr	r3, [fp, #-8]
   20c4c:	rsb	r3, r3, #0
   20c50:	b	20c58 <__assert_fail@plt+0xfb00>
   20c54:	ldr	r3, [fp, #-8]
   20c58:	ldr	r2, [fp, #-16]
   20c5c:	str	r3, [r2, #4]
   20c60:	nop			; (mov r0, r0)
   20c64:	sub	sp, fp, #4
   20c68:	pop	{fp, pc}
   20c6c:	push	{fp, lr}
   20c70:	add	fp, sp, #4
   20c74:	sub	sp, sp, #24
   20c78:	str	r0, [fp, #-16]
   20c7c:	str	r1, [fp, #-20]	; 0xffffffec
   20c80:	str	r2, [fp, #-24]	; 0xffffffe8
   20c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   20c88:	ldr	r2, [r3, #4]
   20c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c90:	ldr	r3, [r3, #4]
   20c94:	eor	r3, r3, r2
   20c98:	cmp	r3, #0
   20c9c:	blt	20cb8 <__assert_fail@plt+0xfb60>
   20ca0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20ca4:	ldr	r1, [fp, #-20]	; 0xffffffec
   20ca8:	ldr	r0, [fp, #-16]
   20cac:	bl	20a10 <__assert_fail@plt+0xf8b8>
   20cb0:	str	r0, [fp, #-8]
   20cb4:	b	20ccc <__assert_fail@plt+0xfb74>
   20cb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20cc0:	ldr	r0, [fp, #-16]
   20cc4:	bl	208f4 <__assert_fail@plt+0xf79c>
   20cc8:	str	r0, [fp, #-8]
   20ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   20cd0:	ldr	r3, [r3, #4]
   20cd4:	cmp	r3, #0
   20cd8:	bge	20ce8 <__assert_fail@plt+0xfb90>
   20cdc:	ldr	r3, [fp, #-8]
   20ce0:	rsb	r3, r3, #0
   20ce4:	b	20cec <__assert_fail@plt+0xfb94>
   20ce8:	ldr	r3, [fp, #-8]
   20cec:	ldr	r2, [fp, #-16]
   20cf0:	str	r3, [r2, #4]
   20cf4:	nop			; (mov r0, r0)
   20cf8:	sub	sp, fp, #4
   20cfc:	pop	{fp, pc}
   20d00:	push	{fp, lr}
   20d04:	add	fp, sp, #4
   20d08:	sub	sp, sp, #16
   20d0c:	str	r0, [fp, #-8]
   20d10:	str	r1, [fp, #-12]
   20d14:	str	r2, [fp, #-16]
   20d18:	ldr	r3, [fp, #-16]
   20d1c:	cmp	r3, #0
   20d20:	bge	20d4c <__assert_fail@plt+0xfbf4>
   20d24:	ldr	r3, [fp, #-16]
   20d28:	rsb	r3, r3, #0
   20d2c:	mov	r2, r3
   20d30:	ldr	r1, [fp, #-12]
   20d34:	ldr	r0, [fp, #-8]
   20d38:	bl	20d6c <__assert_fail@plt+0xfc14>
   20d3c:	ldr	r1, [fp, #-8]
   20d40:	ldr	r0, [fp, #-8]
   20d44:	bl	20744 <__assert_fail@plt+0xf5ec>
   20d48:	b	20d60 <__assert_fail@plt+0xfc08>
   20d4c:	ldr	r3, [fp, #-16]
   20d50:	mov	r2, r3
   20d54:	ldr	r1, [fp, #-12]
   20d58:	ldr	r0, [fp, #-8]
   20d5c:	bl	20d6c <__assert_fail@plt+0xfc14>
   20d60:	nop			; (mov r0, r0)
   20d64:	sub	sp, fp, #4
   20d68:	pop	{fp, pc}
   20d6c:	push	{fp, lr}
   20d70:	add	fp, sp, #4
   20d74:	sub	sp, sp, #32
   20d78:	str	r0, [fp, #-24]	; 0xffffffe8
   20d7c:	str	r1, [fp, #-28]	; 0xffffffe4
   20d80:	str	r2, [fp, #-32]	; 0xffffffe0
   20d84:	sub	r3, fp, #16
   20d88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20d8c:	mov	r0, r3
   20d90:	bl	1f6bc <__assert_fail@plt+0xe564>
   20d94:	sub	r3, fp, #16
   20d98:	mov	r2, r3
   20d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20da4:	bl	20dc0 <__assert_fail@plt+0xfc68>
   20da8:	sub	r3, fp, #16
   20dac:	mov	r0, r3
   20db0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   20db4:	nop			; (mov r0, r0)
   20db8:	sub	sp, fp, #4
   20dbc:	pop	{fp, pc}
   20dc0:	push	{fp, lr}
   20dc4:	add	fp, sp, #4
   20dc8:	sub	sp, sp, #56	; 0x38
   20dcc:	str	r0, [fp, #-40]	; 0xffffffd8
   20dd0:	str	r1, [fp, #-44]	; 0xffffffd4
   20dd4:	str	r2, [fp, #-48]	; 0xffffffd0
   20dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20ddc:	ldr	r3, [r3, #4]
   20de0:	str	r3, [fp, #-8]
   20de4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20de8:	ldr	r3, [r3, #4]
   20dec:	str	r3, [fp, #-12]
   20df0:	ldr	r3, [fp, #-8]
   20df4:	cmp	r3, #0
   20df8:	beq	20e08 <__assert_fail@plt+0xfcb0>
   20dfc:	ldr	r3, [fp, #-12]
   20e00:	cmp	r3, #0
   20e04:	bne	20e18 <__assert_fail@plt+0xfcc0>
   20e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20e0c:	mov	r2, #0
   20e10:	str	r2, [r3, #4]
   20e14:	b	20f60 <__assert_fail@plt+0xfe08>
   20e18:	ldr	r2, [fp, #-8]
   20e1c:	ldr	r3, [fp, #-12]
   20e20:	eor	r3, r3, r2
   20e24:	lsr	r3, r3, #31
   20e28:	uxtb	r3, r3
   20e2c:	str	r3, [fp, #-16]
   20e30:	ldr	r3, [fp, #-8]
   20e34:	cmp	r3, #0
   20e38:	rsblt	r3, r3, #0
   20e3c:	str	r3, [fp, #-8]
   20e40:	ldr	r3, [fp, #-12]
   20e44:	cmp	r3, #0
   20e48:	rsblt	r3, r3, #0
   20e4c:	str	r3, [fp, #-12]
   20e50:	ldr	r2, [fp, #-8]
   20e54:	ldr	r3, [fp, #-12]
   20e58:	add	r3, r2, r3
   20e5c:	lsl	r2, r3, #5
   20e60:	sub	r3, fp, #36	; 0x24
   20e64:	mov	r1, r2
   20e68:	mov	r0, r3
   20e6c:	bl	1f360 <__assert_fail@plt+0xe208>
   20e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20e74:	str	r3, [fp, #-20]	; 0xffffffec
   20e78:	ldr	r2, [fp, #-8]
   20e7c:	ldr	r3, [fp, #-12]
   20e80:	cmp	r2, r3
   20e84:	blt	20eb4 <__assert_fail@plt+0xfd5c>
   20e88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20e8c:	ldr	r1, [r3, #8]
   20e90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20e94:	ldr	r2, [r3, #8]
   20e98:	ldr	r3, [fp, #-12]
   20e9c:	str	r3, [sp]
   20ea0:	mov	r3, r2
   20ea4:	ldr	r2, [fp, #-8]
   20ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
   20eac:	bl	1c0c8 <__assert_fail@plt+0xaf70>
   20eb0:	b	20edc <__assert_fail@plt+0xfd84>
   20eb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20eb8:	ldr	r1, [r3, #8]
   20ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20ec0:	ldr	r2, [r3, #8]
   20ec4:	ldr	r3, [fp, #-8]
   20ec8:	str	r3, [sp]
   20ecc:	mov	r3, r2
   20ed0:	ldr	r2, [fp, #-12]
   20ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ed8:	bl	1c0c8 <__assert_fail@plt+0xaf70>
   20edc:	ldr	r2, [fp, #-8]
   20ee0:	ldr	r3, [fp, #-12]
   20ee4:	add	r3, r2, r3
   20ee8:	str	r3, [fp, #-24]	; 0xffffffe8
   20eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ef0:	sub	r3, r3, #-1073741823	; 0xc0000001
   20ef4:	lsl	r3, r3, #2
   20ef8:	ldr	r2, [fp, #-20]	; 0xffffffec
   20efc:	add	r3, r2, r3
   20f00:	ldr	r3, [r3]
   20f04:	cmp	r3, #0
   20f08:	moveq	r3, #1
   20f0c:	movne	r3, #0
   20f10:	uxtb	r3, r3
   20f14:	mov	r2, r3
   20f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f1c:	sub	r3, r3, r2
   20f20:	str	r3, [fp, #-24]	; 0xffffffe8
   20f24:	ldr	r3, [fp, #-16]
   20f28:	cmp	r3, #0
   20f2c:	beq	20f3c <__assert_fail@plt+0xfde4>
   20f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f34:	rsb	r3, r3, #0
   20f38:	b	20f40 <__assert_fail@plt+0xfde8>
   20f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f40:	str	r3, [fp, #-32]	; 0xffffffe0
   20f44:	sub	r3, fp, #36	; 0x24
   20f48:	mov	r1, r3
   20f4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f50:	bl	20784 <__assert_fail@plt+0xf62c>
   20f54:	sub	r3, fp, #36	; 0x24
   20f58:	mov	r0, r3
   20f5c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   20f60:	sub	sp, fp, #4
   20f64:	pop	{fp, pc}
   20f68:	push	{fp, lr}
   20f6c:	add	fp, sp, #4
   20f70:	sub	sp, sp, #40	; 0x28
   20f74:	str	r0, [fp, #-32]	; 0xffffffe0
   20f78:	str	r1, [fp, #-36]	; 0xffffffdc
   20f7c:	str	r2, [fp, #-40]	; 0xffffffd8
   20f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20f84:	ldr	r3, [r3, #4]
   20f88:	cmp	r3, #0
   20f8c:	rsblt	r3, r3, #0
   20f90:	str	r3, [fp, #-12]
   20f94:	ldr	r3, [fp, #-12]
   20f98:	cmp	r3, #0
   20f9c:	bne	20fb0 <__assert_fail@plt+0xfe58>
   20fa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20fa4:	mov	r2, #0
   20fa8:	str	r2, [r3, #4]
   20fac:	b	210f4 <__assert_fail@plt+0xff9c>
   20fb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20fb4:	lsr	r3, r3, #5
   20fb8:	str	r3, [fp, #-16]
   20fbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20fc0:	and	r3, r3, #31
   20fc4:	str	r3, [fp, #-20]	; 0xffffffec
   20fc8:	ldr	r2, [fp, #-12]
   20fcc:	ldr	r3, [fp, #-16]
   20fd0:	add	r3, r2, r3
   20fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   20fd8:	cmp	r2, #0
   20fdc:	movne	r2, #1
   20fe0:	moveq	r2, #0
   20fe4:	uxtb	r2, r2
   20fe8:	add	r3, r3, r2
   20fec:	str	r3, [fp, #-8]
   20ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20ff4:	ldr	r2, [r3]
   20ff8:	ldr	r3, [fp, #-8]
   20ffc:	cmp	r2, r3
   21000:	bge	21018 <__assert_fail@plt+0xfec0>
   21004:	ldr	r1, [fp, #-8]
   21008:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2100c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   21010:	mov	r3, r0
   21014:	b	21020 <__assert_fail@plt+0xfec8>
   21018:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2101c:	ldr	r3, [r3, #8]
   21020:	str	r3, [fp, #-24]	; 0xffffffe8
   21024:	ldr	r3, [fp, #-20]	; 0xffffffec
   21028:	cmp	r3, #0
   2102c:	beq	2109c <__assert_fail@plt+0xff44>
   21030:	ldr	r3, [fp, #-16]
   21034:	lsl	r3, r3, #2
   21038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2103c:	add	r0, r2, r3
   21040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21044:	ldr	r1, [r3, #8]
   21048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2104c:	ldr	r2, [fp, #-12]
   21050:	bl	1c32c <__assert_fail@plt+0xb1d4>
   21054:	str	r0, [fp, #-28]	; 0xffffffe4
   21058:	ldr	r3, [fp, #-8]
   2105c:	sub	r3, r3, #-1073741823	; 0xc0000001
   21060:	lsl	r3, r3, #2
   21064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21068:	add	r3, r2, r3
   2106c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21070:	str	r2, [r3]
   21074:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21078:	cmp	r3, #0
   2107c:	moveq	r3, #1
   21080:	movne	r3, #0
   21084:	uxtb	r3, r3
   21088:	mov	r2, r3
   2108c:	ldr	r3, [fp, #-8]
   21090:	sub	r3, r3, r2
   21094:	str	r3, [fp, #-8]
   21098:	b	210c0 <__assert_fail@plt+0xff68>
   2109c:	ldr	r3, [fp, #-16]
   210a0:	lsl	r3, r3, #2
   210a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   210a8:	add	r0, r2, r3
   210ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   210b0:	ldr	r3, [r3, #8]
   210b4:	ldr	r2, [fp, #-12]
   210b8:	mov	r1, r3
   210bc:	bl	1b310 <__assert_fail@plt+0xa1b8>
   210c0:	ldr	r1, [fp, #-16]
   210c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   210c8:	bl	1b544 <__assert_fail@plt+0xa3ec>
   210cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   210d0:	ldr	r3, [r3, #4]
   210d4:	cmp	r3, #0
   210d8:	bge	210e8 <__assert_fail@plt+0xff90>
   210dc:	ldr	r3, [fp, #-8]
   210e0:	rsb	r3, r3, #0
   210e4:	b	210ec <__assert_fail@plt+0xff94>
   210e8:	ldr	r3, [fp, #-8]
   210ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   210f0:	str	r3, [r2, #4]
   210f4:	sub	sp, fp, #4
   210f8:	pop	{fp, pc}
   210fc:	push	{fp, lr}
   21100:	add	fp, sp, #4
   21104:	sub	sp, sp, #32
   21108:	str	r0, [fp, #-24]	; 0xffffffe8
   2110c:	str	r1, [fp, #-28]	; 0xffffffe4
   21110:	str	r2, [fp, #-32]	; 0xffffffe0
   21114:	sub	r3, fp, #16
   21118:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2111c:	mov	r0, r3
   21120:	bl	1f6bc <__assert_fail@plt+0xe564>
   21124:	sub	r2, fp, #16
   21128:	sub	r3, fp, #16
   2112c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21130:	mov	r0, r3
   21134:	bl	20dc0 <__assert_fail@plt+0xfc68>
   21138:	sub	r3, fp, #16
   2113c:	mov	r2, r3
   21140:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21148:	bl	20bd8 <__assert_fail@plt+0xfa80>
   2114c:	sub	r3, fp, #16
   21150:	mov	r0, r3
   21154:	bl	1f3e0 <__assert_fail@plt+0xe288>
   21158:	nop			; (mov r0, r0)
   2115c:	sub	sp, fp, #4
   21160:	pop	{fp, pc}
   21164:	push	{fp, lr}
   21168:	add	fp, sp, #4
   2116c:	sub	sp, sp, #32
   21170:	str	r0, [fp, #-24]	; 0xffffffe8
   21174:	str	r1, [fp, #-28]	; 0xffffffe4
   21178:	str	r2, [fp, #-32]	; 0xffffffe0
   2117c:	sub	r3, fp, #16
   21180:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21184:	mov	r0, r3
   21188:	bl	1f6bc <__assert_fail@plt+0xe564>
   2118c:	sub	r2, fp, #16
   21190:	sub	r3, fp, #16
   21194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21198:	mov	r0, r3
   2119c:	bl	20dc0 <__assert_fail@plt+0xfc68>
   211a0:	sub	r3, fp, #16
   211a4:	mov	r2, r3
   211a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   211ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   211b0:	bl	20c6c <__assert_fail@plt+0xfb14>
   211b4:	sub	r3, fp, #16
   211b8:	mov	r0, r3
   211bc:	bl	1f3e0 <__assert_fail@plt+0xe288>
   211c0:	nop			; (mov r0, r0)
   211c4:	sub	sp, fp, #4
   211c8:	pop	{fp, pc}
   211cc:	push	{fp, lr}
   211d0:	add	fp, sp, #4
   211d4:	sub	sp, sp, #32
   211d8:	str	r0, [fp, #-24]	; 0xffffffe8
   211dc:	str	r1, [fp, #-28]	; 0xffffffe4
   211e0:	str	r2, [fp, #-32]	; 0xffffffe0
   211e4:	sub	r3, fp, #16
   211e8:	mov	r0, r3
   211ec:	bl	1f318 <__assert_fail@plt+0xe1c0>
   211f0:	sub	r3, fp, #16
   211f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   211f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   211fc:	mov	r0, r3
   21200:	bl	20dc0 <__assert_fail@plt+0xfc68>
   21204:	sub	r3, fp, #16
   21208:	mov	r2, r3
   2120c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21214:	bl	20bd8 <__assert_fail@plt+0xfa80>
   21218:	sub	r3, fp, #16
   2121c:	mov	r0, r3
   21220:	bl	1f3e0 <__assert_fail@plt+0xe288>
   21224:	nop			; (mov r0, r0)
   21228:	sub	sp, fp, #4
   2122c:	pop	{fp, pc}
   21230:	push	{fp, lr}
   21234:	add	fp, sp, #4
   21238:	sub	sp, sp, #32
   2123c:	str	r0, [fp, #-24]	; 0xffffffe8
   21240:	str	r1, [fp, #-28]	; 0xffffffe4
   21244:	str	r2, [fp, #-32]	; 0xffffffe0
   21248:	sub	r3, fp, #16
   2124c:	mov	r0, r3
   21250:	bl	1f318 <__assert_fail@plt+0xe1c0>
   21254:	sub	r3, fp, #16
   21258:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2125c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21260:	mov	r0, r3
   21264:	bl	20dc0 <__assert_fail@plt+0xfc68>
   21268:	sub	r3, fp, #16
   2126c:	mov	r2, r3
   21270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21278:	bl	20c6c <__assert_fail@plt+0xfb14>
   2127c:	sub	r3, fp, #16
   21280:	mov	r0, r3
   21284:	bl	1f3e0 <__assert_fail@plt+0xe288>
   21288:	nop			; (mov r0, r0)
   2128c:	sub	sp, fp, #4
   21290:	pop	{fp, pc}
   21294:	push	{fp, lr}
   21298:	add	fp, sp, #4
   2129c:	sub	sp, sp, #88	; 0x58
   212a0:	str	r0, [fp, #-72]	; 0xffffffb8
   212a4:	str	r1, [fp, #-76]	; 0xffffffb4
   212a8:	str	r2, [fp, #-80]	; 0xffffffb0
   212ac:	str	r3, [fp, #-84]	; 0xffffffac
   212b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   212b4:	ldr	r3, [r3, #4]
   212b8:	str	r3, [fp, #-12]
   212bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   212c0:	ldr	r3, [r3, #4]
   212c4:	str	r3, [fp, #-16]
   212c8:	ldr	r3, [fp, #-16]
   212cc:	cmp	r3, #0
   212d0:	bne	212dc <__assert_fail@plt+0x10184>
   212d4:	ldr	r0, [pc, #948]	; 21690 <__assert_fail@plt+0x10538>
   212d8:	bl	1af58 <__assert_fail@plt+0x9e00>
   212dc:	ldr	r3, [fp, #-12]
   212e0:	cmp	r3, #0
   212e4:	bne	21320 <__assert_fail@plt+0x101c8>
   212e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   212ec:	cmp	r3, #0
   212f0:	beq	21300 <__assert_fail@plt+0x101a8>
   212f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   212f8:	mov	r2, #0
   212fc:	str	r2, [r3, #4]
   21300:	ldr	r3, [fp, #-76]	; 0xffffffb4
   21304:	cmp	r3, #0
   21308:	beq	21318 <__assert_fail@plt+0x101c0>
   2130c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   21310:	mov	r2, #0
   21314:	str	r2, [r3, #4]
   21318:	mov	r3, #0
   2131c:	b	21684 <__assert_fail@plt+0x1052c>
   21320:	ldr	r3, [fp, #-12]
   21324:	cmp	r3, #0
   21328:	rsblt	r3, r3, #0
   2132c:	str	r3, [fp, #-20]	; 0xffffffec
   21330:	ldr	r3, [fp, #-16]
   21334:	cmp	r3, #0
   21338:	rsblt	r3, r3, #0
   2133c:	str	r3, [fp, #-24]	; 0xffffffe8
   21340:	ldr	r2, [fp, #-16]
   21344:	ldr	r3, [fp, #-12]
   21348:	eor	r3, r3, r2
   2134c:	str	r3, [fp, #-28]	; 0xffffffe4
   21350:	ldr	r2, [fp, #-20]	; 0xffffffec
   21354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21358:	cmp	r2, r3
   2135c:	bge	21438 <__assert_fail@plt+0x102e0>
   21360:	ldr	r3, [fp, #4]
   21364:	cmp	r3, #1
   21368:	bne	213b0 <__assert_fail@plt+0x10258>
   2136c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21370:	cmp	r3, #0
   21374:	blt	213b0 <__assert_fail@plt+0x10258>
   21378:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2137c:	cmp	r3, #0
   21380:	beq	21394 <__assert_fail@plt+0x1023c>
   21384:	ldr	r2, [fp, #-84]	; 0xffffffac
   21388:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2138c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   21390:	bl	20c6c <__assert_fail@plt+0xfb14>
   21394:	ldr	r3, [fp, #-72]	; 0xffffffb8
   21398:	cmp	r3, #0
   2139c:	beq	21430 <__assert_fail@plt+0x102d8>
   213a0:	mov	r1, #1
   213a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   213a8:	bl	1f56c <__assert_fail@plt+0xe414>
   213ac:	b	21430 <__assert_fail@plt+0x102d8>
   213b0:	ldr	r3, [fp, #4]
   213b4:	cmp	r3, #0
   213b8:	bne	21400 <__assert_fail@plt+0x102a8>
   213bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   213c0:	cmp	r3, #0
   213c4:	bge	21400 <__assert_fail@plt+0x102a8>
   213c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   213cc:	cmp	r3, #0
   213d0:	beq	213e4 <__assert_fail@plt+0x1028c>
   213d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   213d8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   213dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   213e0:	bl	20bd8 <__assert_fail@plt+0xfa80>
   213e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   213e8:	cmp	r3, #0
   213ec:	beq	21430 <__assert_fail@plt+0x102d8>
   213f0:	mvn	r1, #0
   213f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   213f8:	bl	1f4e8 <__assert_fail@plt+0xe390>
   213fc:	b	21430 <__assert_fail@plt+0x102d8>
   21400:	ldr	r3, [fp, #-76]	; 0xffffffb4
   21404:	cmp	r3, #0
   21408:	beq	21418 <__assert_fail@plt+0x102c0>
   2140c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   21410:	ldr	r0, [fp, #-76]	; 0xffffffb4
   21414:	bl	1f5e8 <__assert_fail@plt+0xe490>
   21418:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2141c:	cmp	r3, #0
   21420:	beq	21430 <__assert_fail@plt+0x102d8>
   21424:	ldr	r3, [fp, #-72]	; 0xffffffb8
   21428:	mov	r2, #0
   2142c:	str	r2, [r3, #4]
   21430:	mov	r3, #1
   21434:	b	21684 <__assert_fail@plt+0x1052c>
   21438:	sub	r3, fp, #64	; 0x40
   2143c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   21440:	mov	r0, r3
   21444:	bl	1f6f0 <__assert_fail@plt+0xe598>
   21448:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2144c:	str	r3, [fp, #-32]	; 0xffffffe0
   21450:	ldr	r2, [fp, #-20]	; 0xffffffec
   21454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21458:	sub	r3, r2, r3
   2145c:	add	r3, r3, #1
   21460:	str	r3, [fp, #-36]	; 0xffffffdc
   21464:	ldr	r3, [fp, #-72]	; 0xffffffb8
   21468:	cmp	r3, #0
   2146c:	beq	21494 <__assert_fail@plt+0x1033c>
   21470:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21474:	lsl	r2, r3, #5
   21478:	sub	r3, fp, #52	; 0x34
   2147c:	mov	r1, r2
   21480:	mov	r0, r3
   21484:	bl	1f360 <__assert_fail@plt+0xe208>
   21488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2148c:	str	r3, [fp, #-8]
   21490:	b	2149c <__assert_fail@plt+0x10344>
   21494:	mov	r3, #0
   21498:	str	r3, [fp, #-8]
   2149c:	ldr	r3, [fp, #-84]	; 0xffffffac
   214a0:	ldr	r2, [r3, #8]
   214a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   214a8:	str	r3, [sp]
   214ac:	mov	r3, r2
   214b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   214b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   214b8:	ldr	r0, [fp, #-8]
   214bc:	bl	1e454 <__assert_fail@plt+0xd2fc>
   214c0:	ldr	r3, [fp, #-8]
   214c4:	cmp	r3, #0
   214c8:	beq	21524 <__assert_fail@plt+0x103cc>
   214cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   214d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   214d4:	lsl	r3, r3, #2
   214d8:	ldr	r2, [fp, #-8]
   214dc:	add	r3, r2, r3
   214e0:	ldr	r3, [r3]
   214e4:	cmp	r3, #0
   214e8:	moveq	r3, #1
   214ec:	movne	r3, #0
   214f0:	uxtb	r3, r3
   214f4:	mov	r2, r3
   214f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   214fc:	sub	r3, r3, r2
   21500:	str	r3, [fp, #-36]	; 0xffffffdc
   21504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21508:	cmp	r3, #0
   2150c:	bge	2151c <__assert_fail@plt+0x103c4>
   21510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21514:	rsb	r3, r3, #0
   21518:	b	21520 <__assert_fail@plt+0x103c8>
   2151c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21520:	str	r3, [fp, #-48]	; 0xffffffd0
   21524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2152c:	bl	1b4a0 <__assert_fail@plt+0xa348>
   21530:	str	r0, [fp, #-40]	; 0xffffffd8
   21534:	ldr	r3, [fp, #-12]
   21538:	cmp	r3, #0
   2153c:	bge	2154c <__assert_fail@plt+0x103f4>
   21540:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21544:	rsb	r3, r3, #0
   21548:	b	21550 <__assert_fail@plt+0x103f8>
   2154c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21550:	str	r3, [fp, #-60]	; 0xffffffc4
   21554:	ldr	r3, [fp, #4]
   21558:	cmp	r3, #0
   2155c:	bne	215bc <__assert_fail@plt+0x10464>
   21560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21564:	cmp	r3, #0
   21568:	bge	215bc <__assert_fail@plt+0x10464>
   2156c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21570:	cmp	r3, #0
   21574:	beq	215bc <__assert_fail@plt+0x10464>
   21578:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2157c:	cmp	r3, #0
   21580:	beq	21598 <__assert_fail@plt+0x10440>
   21584:	sub	r1, fp, #52	; 0x34
   21588:	sub	r3, fp, #52	; 0x34
   2158c:	mov	r2, #1
   21590:	mov	r0, r3
   21594:	bl	20874 <__assert_fail@plt+0xf71c>
   21598:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2159c:	cmp	r3, #0
   215a0:	beq	21620 <__assert_fail@plt+0x104c8>
   215a4:	sub	r1, fp, #64	; 0x40
   215a8:	sub	r3, fp, #64	; 0x40
   215ac:	ldr	r2, [fp, #-84]	; 0xffffffac
   215b0:	mov	r0, r3
   215b4:	bl	20bd8 <__assert_fail@plt+0xfa80>
   215b8:	b	21620 <__assert_fail@plt+0x104c8>
   215bc:	ldr	r3, [fp, #4]
   215c0:	cmp	r3, #1
   215c4:	bne	21620 <__assert_fail@plt+0x104c8>
   215c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   215cc:	cmp	r3, #0
   215d0:	blt	21620 <__assert_fail@plt+0x104c8>
   215d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   215d8:	cmp	r3, #0
   215dc:	beq	21620 <__assert_fail@plt+0x104c8>
   215e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   215e4:	cmp	r3, #0
   215e8:	beq	21600 <__assert_fail@plt+0x104a8>
   215ec:	sub	r1, fp, #52	; 0x34
   215f0:	sub	r3, fp, #52	; 0x34
   215f4:	mov	r2, #1
   215f8:	mov	r0, r3
   215fc:	bl	20820 <__assert_fail@plt+0xf6c8>
   21600:	ldr	r3, [fp, #-76]	; 0xffffffb4
   21604:	cmp	r3, #0
   21608:	beq	21620 <__assert_fail@plt+0x104c8>
   2160c:	sub	r1, fp, #64	; 0x40
   21610:	sub	r3, fp, #64	; 0x40
   21614:	ldr	r2, [fp, #-84]	; 0xffffffac
   21618:	mov	r0, r3
   2161c:	bl	20c6c <__assert_fail@plt+0xfb14>
   21620:	ldr	r3, [fp, #-72]	; 0xffffffb8
   21624:	cmp	r3, #0
   21628:	beq	21648 <__assert_fail@plt+0x104f0>
   2162c:	sub	r3, fp, #52	; 0x34
   21630:	ldr	r1, [fp, #-72]	; 0xffffffb8
   21634:	mov	r0, r3
   21638:	bl	20784 <__assert_fail@plt+0xf62c>
   2163c:	sub	r3, fp, #52	; 0x34
   21640:	mov	r0, r3
   21644:	bl	1f3e0 <__assert_fail@plt+0xe288>
   21648:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2164c:	cmp	r3, #0
   21650:	beq	21664 <__assert_fail@plt+0x1050c>
   21654:	sub	r3, fp, #64	; 0x40
   21658:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2165c:	mov	r0, r3
   21660:	bl	20784 <__assert_fail@plt+0xf62c>
   21664:	sub	r3, fp, #64	; 0x40
   21668:	mov	r0, r3
   2166c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   21670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21674:	cmp	r3, #0
   21678:	movne	r3, #1
   2167c:	moveq	r3, #0
   21680:	uxtb	r3, r3
   21684:	mov	r0, r3
   21688:	sub	sp, fp, #4
   2168c:	pop	{fp, pc}
   21690:	andeq	r3, r3, r8, ror #24
   21694:	push	{fp, lr}
   21698:	add	fp, sp, #4
   2169c:	sub	sp, sp, #24
   216a0:	str	r0, [fp, #-8]
   216a4:	str	r1, [fp, #-12]
   216a8:	str	r2, [fp, #-16]
   216ac:	str	r3, [fp, #-20]	; 0xffffffec
   216b0:	mov	r3, #1
   216b4:	str	r3, [sp]
   216b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   216bc:	ldr	r2, [fp, #-16]
   216c0:	ldr	r1, [fp, #-12]
   216c4:	ldr	r0, [fp, #-8]
   216c8:	bl	21294 <__assert_fail@plt+0x1013c>
   216cc:	nop			; (mov r0, r0)
   216d0:	sub	sp, fp, #4
   216d4:	pop	{fp, pc}
   216d8:	push	{fp, lr}
   216dc:	add	fp, sp, #4
   216e0:	sub	sp, sp, #24
   216e4:	str	r0, [fp, #-8]
   216e8:	str	r1, [fp, #-12]
   216ec:	str	r2, [fp, #-16]
   216f0:	str	r3, [fp, #-20]	; 0xffffffec
   216f4:	mov	r3, #0
   216f8:	str	r3, [sp]
   216fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   21700:	ldr	r2, [fp, #-16]
   21704:	ldr	r1, [fp, #-12]
   21708:	ldr	r0, [fp, #-8]
   2170c:	bl	21294 <__assert_fail@plt+0x1013c>
   21710:	nop			; (mov r0, r0)
   21714:	sub	sp, fp, #4
   21718:	pop	{fp, pc}
   2171c:	push	{fp, lr}
   21720:	add	fp, sp, #4
   21724:	sub	sp, sp, #24
   21728:	str	r0, [fp, #-8]
   2172c:	str	r1, [fp, #-12]
   21730:	str	r2, [fp, #-16]
   21734:	str	r3, [fp, #-20]	; 0xffffffec
   21738:	mov	r3, #2
   2173c:	str	r3, [sp]
   21740:	ldr	r3, [fp, #-20]	; 0xffffffec
   21744:	ldr	r2, [fp, #-16]
   21748:	ldr	r1, [fp, #-12]
   2174c:	ldr	r0, [fp, #-8]
   21750:	bl	21294 <__assert_fail@plt+0x1013c>
   21754:	nop			; (mov r0, r0)
   21758:	sub	sp, fp, #4
   2175c:	pop	{fp, pc}
   21760:	push	{fp, lr}
   21764:	add	fp, sp, #4
   21768:	sub	sp, sp, #24
   2176c:	str	r0, [fp, #-8]
   21770:	str	r1, [fp, #-12]
   21774:	str	r2, [fp, #-16]
   21778:	mov	r3, #1
   2177c:	str	r3, [sp]
   21780:	ldr	r3, [fp, #-16]
   21784:	ldr	r2, [fp, #-12]
   21788:	mov	r1, #0
   2178c:	ldr	r0, [fp, #-8]
   21790:	bl	21294 <__assert_fail@plt+0x1013c>
   21794:	nop			; (mov r0, r0)
   21798:	sub	sp, fp, #4
   2179c:	pop	{fp, pc}
   217a0:	push	{fp, lr}
   217a4:	add	fp, sp, #4
   217a8:	sub	sp, sp, #24
   217ac:	str	r0, [fp, #-8]
   217b0:	str	r1, [fp, #-12]
   217b4:	str	r2, [fp, #-16]
   217b8:	mov	r3, #0
   217bc:	str	r3, [sp]
   217c0:	ldr	r3, [fp, #-16]
   217c4:	ldr	r2, [fp, #-12]
   217c8:	mov	r1, #0
   217cc:	ldr	r0, [fp, #-8]
   217d0:	bl	21294 <__assert_fail@plt+0x1013c>
   217d4:	nop			; (mov r0, r0)
   217d8:	sub	sp, fp, #4
   217dc:	pop	{fp, pc}
   217e0:	push	{fp, lr}
   217e4:	add	fp, sp, #4
   217e8:	sub	sp, sp, #24
   217ec:	str	r0, [fp, #-8]
   217f0:	str	r1, [fp, #-12]
   217f4:	str	r2, [fp, #-16]
   217f8:	mov	r3, #2
   217fc:	str	r3, [sp]
   21800:	ldr	r3, [fp, #-16]
   21804:	ldr	r2, [fp, #-12]
   21808:	mov	r1, #0
   2180c:	ldr	r0, [fp, #-8]
   21810:	bl	21294 <__assert_fail@plt+0x1013c>
   21814:	nop			; (mov r0, r0)
   21818:	sub	sp, fp, #4
   2181c:	pop	{fp, pc}
   21820:	push	{fp, lr}
   21824:	add	fp, sp, #4
   21828:	sub	sp, sp, #24
   2182c:	str	r0, [fp, #-8]
   21830:	str	r1, [fp, #-12]
   21834:	str	r2, [fp, #-16]
   21838:	mov	r3, #1
   2183c:	str	r3, [sp]
   21840:	ldr	r3, [fp, #-16]
   21844:	ldr	r2, [fp, #-12]
   21848:	ldr	r1, [fp, #-8]
   2184c:	mov	r0, #0
   21850:	bl	21294 <__assert_fail@plt+0x1013c>
   21854:	nop			; (mov r0, r0)
   21858:	sub	sp, fp, #4
   2185c:	pop	{fp, pc}
   21860:	push	{fp, lr}
   21864:	add	fp, sp, #4
   21868:	sub	sp, sp, #24
   2186c:	str	r0, [fp, #-8]
   21870:	str	r1, [fp, #-12]
   21874:	str	r2, [fp, #-16]
   21878:	mov	r3, #0
   2187c:	str	r3, [sp]
   21880:	ldr	r3, [fp, #-16]
   21884:	ldr	r2, [fp, #-12]
   21888:	ldr	r1, [fp, #-8]
   2188c:	mov	r0, #0
   21890:	bl	21294 <__assert_fail@plt+0x1013c>
   21894:	nop			; (mov r0, r0)
   21898:	sub	sp, fp, #4
   2189c:	pop	{fp, pc}
   218a0:	push	{fp, lr}
   218a4:	add	fp, sp, #4
   218a8:	sub	sp, sp, #24
   218ac:	str	r0, [fp, #-8]
   218b0:	str	r1, [fp, #-12]
   218b4:	str	r2, [fp, #-16]
   218b8:	mov	r3, #2
   218bc:	str	r3, [sp]
   218c0:	ldr	r3, [fp, #-16]
   218c4:	ldr	r2, [fp, #-12]
   218c8:	ldr	r1, [fp, #-8]
   218cc:	mov	r0, #0
   218d0:	bl	21294 <__assert_fail@plt+0x1013c>
   218d4:	nop			; (mov r0, r0)
   218d8:	sub	sp, fp, #4
   218dc:	pop	{fp, pc}
   218e0:	push	{fp, lr}
   218e4:	add	fp, sp, #4
   218e8:	sub	sp, sp, #24
   218ec:	str	r0, [fp, #-8]
   218f0:	str	r1, [fp, #-12]
   218f4:	str	r2, [fp, #-16]
   218f8:	ldr	r3, [fp, #-16]
   218fc:	ldr	r3, [r3, #4]
   21900:	lsr	r3, r3, #31
   21904:	uxtb	r3, r3
   21908:	str	r3, [sp]
   2190c:	ldr	r3, [fp, #-16]
   21910:	ldr	r2, [fp, #-12]
   21914:	ldr	r1, [fp, #-8]
   21918:	mov	r0, #0
   2191c:	bl	21294 <__assert_fail@plt+0x1013c>
   21920:	nop			; (mov r0, r0)
   21924:	sub	sp, fp, #4
   21928:	pop	{fp, pc}
   2192c:	push	{fp, lr}
   21930:	add	fp, sp, #4
   21934:	sub	sp, sp, #40	; 0x28
   21938:	str	r0, [fp, #-32]	; 0xffffffe0
   2193c:	str	r1, [fp, #-36]	; 0xffffffdc
   21940:	str	r2, [fp, #-40]	; 0xffffffd8
   21944:	str	r3, [fp, #-44]	; 0xffffffd4
   21948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2194c:	ldr	r3, [r3, #4]
   21950:	str	r3, [fp, #-16]
   21954:	ldr	r3, [fp, #-16]
   21958:	cmp	r3, #0
   2195c:	bne	21970 <__assert_fail@plt+0x10818>
   21960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21964:	mov	r2, #0
   21968:	str	r2, [r3, #4]
   2196c:	b	21b5c <__assert_fail@plt+0x10a04>
   21970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21974:	lsr	r3, r3, #5
   21978:	str	r3, [fp, #-20]	; 0xffffffec
   2197c:	ldr	r3, [fp, #-16]
   21980:	eor	r2, r3, r3, asr #31
   21984:	sub	r2, r2, r3, asr #31
   21988:	ldr	r3, [fp, #-20]	; 0xffffffec
   2198c:	sub	r3, r2, r3
   21990:	str	r3, [fp, #-8]
   21994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21998:	and	r3, r3, #31
   2199c:	str	r3, [fp, #-40]	; 0xffffffd8
   219a0:	ldr	r3, [fp, #-16]
   219a4:	cmp	r3, #0
   219a8:	ble	219b4 <__assert_fail@plt+0x1085c>
   219ac:	mov	r2, #1
   219b0:	b	219b8 <__assert_fail@plt+0x10860>
   219b4:	mov	r2, #0
   219b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   219bc:	cmp	r2, r3
   219c0:	bne	21a38 <__assert_fail@plt+0x108e0>
   219c4:	ldr	r3, [fp, #-8]
   219c8:	cmp	r3, #0
   219cc:	ble	21a24 <__assert_fail@plt+0x108cc>
   219d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219d4:	ldr	r3, [r3, #8]
   219d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   219dc:	mov	r0, r3
   219e0:	bl	1b504 <__assert_fail@plt+0xa3ac>
   219e4:	mov	r3, r0
   219e8:	cmp	r3, #0
   219ec:	beq	21a24 <__assert_fail@plt+0x108cc>
   219f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219f4:	ldr	r2, [r3, #8]
   219f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   219fc:	lsl	r3, r3, #2
   21a00:	add	r3, r2, r3
   21a04:	ldr	r2, [r3]
   21a08:	mov	r1, #1
   21a0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a10:	lsl	r3, r1, r3
   21a14:	sub	r3, r3, #1
   21a18:	and	r3, r3, r2
   21a1c:	cmp	r3, #0
   21a20:	beq	21a2c <__assert_fail@plt+0x108d4>
   21a24:	mov	r3, #1
   21a28:	b	21a30 <__assert_fail@plt+0x108d8>
   21a2c:	mov	r3, #0
   21a30:	str	r3, [fp, #-12]
   21a34:	b	21a40 <__assert_fail@plt+0x108e8>
   21a38:	mov	r3, #0
   21a3c:	str	r3, [fp, #-12]
   21a40:	ldr	r3, [fp, #-8]
   21a44:	cmp	r3, #0
   21a48:	bgt	21a58 <__assert_fail@plt+0x10900>
   21a4c:	mov	r3, #0
   21a50:	str	r3, [fp, #-8]
   21a54:	b	21b1c <__assert_fail@plt+0x109c4>
   21a58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a5c:	ldr	r2, [r3]
   21a60:	ldr	r3, [fp, #-8]
   21a64:	cmp	r2, r3
   21a68:	bge	21a80 <__assert_fail@plt+0x10928>
   21a6c:	ldr	r1, [fp, #-8]
   21a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21a74:	bl	1f428 <__assert_fail@plt+0xe2d0>
   21a78:	mov	r3, r0
   21a7c:	b	21a88 <__assert_fail@plt+0x10930>
   21a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a84:	ldr	r3, [r3, #8]
   21a88:	str	r3, [fp, #-24]	; 0xffffffe8
   21a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a90:	cmp	r3, #0
   21a94:	beq	21af8 <__assert_fail@plt+0x109a0>
   21a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a9c:	ldr	r2, [r3, #8]
   21aa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21aa4:	lsl	r3, r3, #2
   21aa8:	add	r1, r2, r3
   21aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ab0:	ldr	r2, [fp, #-8]
   21ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ab8:	bl	1c4c4 <__assert_fail@plt+0xb36c>
   21abc:	ldr	r3, [fp, #-8]
   21ac0:	sub	r3, r3, #-1073741823	; 0xc0000001
   21ac4:	lsl	r3, r3, #2
   21ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21acc:	add	r3, r2, r3
   21ad0:	ldr	r3, [r3]
   21ad4:	cmp	r3, #0
   21ad8:	moveq	r3, #1
   21adc:	movne	r3, #0
   21ae0:	uxtb	r3, r3
   21ae4:	mov	r2, r3
   21ae8:	ldr	r3, [fp, #-8]
   21aec:	sub	r3, r3, r2
   21af0:	str	r3, [fp, #-8]
   21af4:	b	21b1c <__assert_fail@plt+0x109c4>
   21af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21afc:	ldr	r2, [r3, #8]
   21b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b04:	lsl	r3, r3, #2
   21b08:	add	r3, r2, r3
   21b0c:	ldr	r2, [fp, #-8]
   21b10:	mov	r1, r3
   21b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21b18:	bl	1b298 <__assert_fail@plt+0xa140>
   21b1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21b20:	ldr	r2, [fp, #-8]
   21b24:	str	r2, [r3, #4]
   21b28:	ldr	r3, [fp, #-12]
   21b2c:	cmp	r3, #0
   21b30:	beq	21b44 <__assert_fail@plt+0x109ec>
   21b34:	mov	r2, #1
   21b38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21b40:	bl	20820 <__assert_fail@plt+0xf6c8>
   21b44:	ldr	r3, [fp, #-16]
   21b48:	cmp	r3, #0
   21b4c:	bge	21b5c <__assert_fail@plt+0x10a04>
   21b50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21b58:	bl	20744 <__assert_fail@plt+0xf5ec>
   21b5c:	sub	sp, fp, #4
   21b60:	pop	{fp, pc}
   21b64:	push	{fp, lr}
   21b68:	add	fp, sp, #4
   21b6c:	sub	sp, sp, #48	; 0x30
   21b70:	str	r0, [fp, #-40]	; 0xffffffd8
   21b74:	str	r1, [fp, #-44]	; 0xffffffd4
   21b78:	str	r2, [fp, #-48]	; 0xffffffd0
   21b7c:	str	r3, [fp, #-52]	; 0xffffffcc
   21b80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21b84:	ldr	r3, [r3, #4]
   21b88:	str	r3, [fp, #-8]
   21b8c:	ldr	r3, [fp, #-8]
   21b90:	cmp	r3, #0
   21b94:	beq	21ba4 <__assert_fail@plt+0x10a4c>
   21b98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21b9c:	cmp	r3, #0
   21ba0:	bne	21bb4 <__assert_fail@plt+0x10a5c>
   21ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ba8:	mov	r2, #0
   21bac:	str	r2, [r3, #4]
   21bb0:	b	21e80 <__assert_fail@plt+0x10d28>
   21bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21bb8:	add	r3, r3, #31
   21bbc:	lsr	r3, r3, #5
   21bc0:	str	r3, [fp, #-12]
   21bc4:	ldr	r3, [fp, #-12]
   21bc8:	cmp	r3, #0
   21bcc:	bgt	21be4 <__assert_fail@plt+0x10a8c>
   21bd0:	ldr	r3, [pc, #688]	; 21e88 <__assert_fail@plt+0x10d30>
   21bd4:	ldr	r2, [pc, #688]	; 21e8c <__assert_fail@plt+0x10d34>
   21bd8:	ldr	r1, [pc, #688]	; 21e90 <__assert_fail@plt+0x10d38>
   21bdc:	ldr	r0, [pc, #688]	; 21e94 <__assert_fail@plt+0x10d3c>
   21be0:	bl	11158 <__assert_fail@plt>
   21be4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21be8:	ldr	r2, [r3]
   21bec:	ldr	r3, [fp, #-12]
   21bf0:	cmp	r2, r3
   21bf4:	bge	21c0c <__assert_fail@plt+0x10ab4>
   21bf8:	ldr	r1, [fp, #-12]
   21bfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21c00:	bl	1f428 <__assert_fail@plt+0xe2d0>
   21c04:	mov	r3, r0
   21c08:	b	21c14 <__assert_fail@plt+0x10abc>
   21c0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21c10:	ldr	r3, [r3, #8]
   21c14:	str	r3, [fp, #-20]	; 0xffffffec
   21c18:	ldr	r3, [fp, #-8]
   21c1c:	cmp	r3, #0
   21c20:	rsblt	r3, r3, #0
   21c24:	str	r3, [fp, #-24]	; 0xffffffe8
   21c28:	ldr	r3, [fp, #-12]
   21c2c:	lsl	r2, r3, #5
   21c30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21c34:	sub	r3, r2, r3
   21c38:	mvn	r2, #0
   21c3c:	lsr	r3, r2, r3
   21c40:	str	r3, [fp, #-28]	; 0xffffffe4
   21c44:	ldr	r2, [fp, #-12]
   21c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c4c:	cmp	r2, r3
   21c50:	ble	21d6c <__assert_fail@plt+0x10c14>
   21c54:	ldr	r3, [fp, #-8]
   21c58:	cmp	r3, #0
   21c5c:	ble	21c68 <__assert_fail@plt+0x10b10>
   21c60:	mov	r2, #1
   21c64:	b	21c6c <__assert_fail@plt+0x10b14>
   21c68:	mov	r2, #0
   21c6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21c70:	cmp	r2, r3
   21c74:	bne	21d38 <__assert_fail@plt+0x10be0>
   21c78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21c7c:	ldr	r3, [r3, #8]
   21c80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21c84:	mov	r1, r3
   21c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c8c:	bl	1c92c <__assert_fail@plt+0xb7d4>
   21c90:	mov	r3, r0
   21c94:	cmp	r3, #0
   21c98:	moveq	r3, #1
   21c9c:	movne	r3, #0
   21ca0:	uxtb	r3, r3
   21ca4:	str	r3, [fp, #-32]	; 0xffffffe0
   21ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21cac:	cmp	r3, #0
   21cb0:	beq	21cc8 <__assert_fail@plt+0x10b70>
   21cb4:	ldr	r3, [pc, #460]	; 21e88 <__assert_fail@plt+0x10d30>
   21cb8:	ldr	r2, [pc, #472]	; 21e98 <__assert_fail@plt+0x10d40>
   21cbc:	ldr	r1, [pc, #460]	; 21e90 <__assert_fail@plt+0x10d38>
   21cc0:	ldr	r0, [pc, #468]	; 21e9c <__assert_fail@plt+0x10d44>
   21cc4:	bl	11158 <__assert_fail@plt>
   21cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ccc:	str	r3, [fp, #-16]
   21cd0:	b	21cf8 <__assert_fail@plt+0x10ba0>
   21cd4:	ldr	r3, [fp, #-16]
   21cd8:	lsl	r3, r3, #2
   21cdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   21ce0:	add	r3, r2, r3
   21ce4:	mvn	r2, #0
   21ce8:	str	r2, [r3]
   21cec:	ldr	r3, [fp, #-16]
   21cf0:	add	r3, r3, #1
   21cf4:	str	r3, [fp, #-16]
   21cf8:	ldr	r3, [fp, #-12]
   21cfc:	sub	r2, r3, #1
   21d00:	ldr	r3, [fp, #-16]
   21d04:	cmp	r2, r3
   21d08:	bgt	21cd4 <__assert_fail@plt+0x10b7c>
   21d0c:	ldr	r3, [fp, #-12]
   21d10:	sub	r3, r3, #-1073741823	; 0xc0000001
   21d14:	lsl	r3, r3, #2
   21d18:	ldr	r2, [fp, #-20]	; 0xffffffec
   21d1c:	add	r3, r2, r3
   21d20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21d24:	str	r2, [r3]
   21d28:	ldr	r3, [fp, #-8]
   21d2c:	rsb	r3, r3, #0
   21d30:	str	r3, [fp, #-8]
   21d34:	b	21e4c <__assert_fail@plt+0x10cf4>
   21d38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d40:	cmp	r2, r3
   21d44:	beq	21d60 <__assert_fail@plt+0x10c08>
   21d48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d4c:	ldr	r3, [r3, #8]
   21d50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21d54:	mov	r1, r3
   21d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d5c:	bl	1b298 <__assert_fail@plt+0xa140>
   21d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d64:	str	r3, [fp, #-12]
   21d68:	b	21e4c <__assert_fail@plt+0x10cf4>
   21d6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21d70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d74:	cmp	r2, r3
   21d78:	beq	21d98 <__assert_fail@plt+0x10c40>
   21d7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d80:	ldr	r1, [r3, #8]
   21d84:	ldr	r3, [fp, #-12]
   21d88:	sub	r3, r3, #1
   21d8c:	mov	r2, r3
   21d90:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d94:	bl	1b298 <__assert_fail@plt+0xa140>
   21d98:	ldr	r3, [fp, #-12]
   21d9c:	sub	r3, r3, #-1073741823	; 0xc0000001
   21da0:	lsl	r3, r3, #2
   21da4:	ldr	r2, [fp, #-20]	; 0xffffffec
   21da8:	add	r3, r2, r3
   21dac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   21db0:	ldr	r1, [r2, #8]
   21db4:	ldr	r2, [fp, #-12]
   21db8:	sub	r2, r2, #-1073741823	; 0xc0000001
   21dbc:	lsl	r2, r2, #2
   21dc0:	add	r2, r1, r2
   21dc4:	ldr	r1, [r2]
   21dc8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21dcc:	and	r2, r2, r1
   21dd0:	str	r2, [r3]
   21dd4:	ldr	r3, [fp, #-8]
   21dd8:	cmp	r3, #0
   21ddc:	ble	21de8 <__assert_fail@plt+0x10c90>
   21de0:	mov	r2, #1
   21de4:	b	21dec <__assert_fail@plt+0x10c94>
   21de8:	mov	r2, #0
   21dec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   21df0:	cmp	r2, r3
   21df4:	bne	21e4c <__assert_fail@plt+0x10cf4>
   21df8:	ldr	r2, [fp, #-12]
   21dfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   21e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e04:	bl	1c92c <__assert_fail@plt+0xb7d4>
   21e08:	ldr	r3, [fp, #-12]
   21e0c:	sub	r3, r3, #-1073741823	; 0xc0000001
   21e10:	lsl	r3, r3, #2
   21e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e18:	add	r3, r2, r3
   21e1c:	ldr	r2, [fp, #-12]
   21e20:	sub	r2, r2, #-1073741823	; 0xc0000001
   21e24:	lsl	r2, r2, #2
   21e28:	ldr	r1, [fp, #-20]	; 0xffffffec
   21e2c:	add	r2, r1, r2
   21e30:	ldr	r1, [r2]
   21e34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21e38:	and	r2, r2, r1
   21e3c:	str	r2, [r3]
   21e40:	ldr	r3, [fp, #-8]
   21e44:	rsb	r3, r3, #0
   21e48:	str	r3, [fp, #-8]
   21e4c:	ldr	r1, [fp, #-12]
   21e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e54:	bl	1b4a0 <__assert_fail@plt+0xa348>
   21e58:	str	r0, [fp, #-12]
   21e5c:	ldr	r3, [fp, #-8]
   21e60:	cmp	r3, #0
   21e64:	bge	21e74 <__assert_fail@plt+0x10d1c>
   21e68:	ldr	r3, [fp, #-12]
   21e6c:	rsb	r3, r3, #0
   21e70:	b	21e78 <__assert_fail@plt+0x10d20>
   21e74:	ldr	r3, [fp, #-12]
   21e78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21e7c:	str	r3, [r2, #4]
   21e80:	sub	sp, fp, #4
   21e84:	pop	{fp, pc}
   21e88:	andeq	r4, r3, r8, ror r1
   21e8c:	andeq	r0, r0, fp, ror r9
   21e90:	andeq	r3, r3, r0, asr #19
   21e94:	andeq	r3, r3, r4, lsl #25
   21e98:	andeq	r0, r0, fp, lsl #19
   21e9c:	andeq	r3, r3, r8, ror #23
   21ea0:	push	{fp, lr}
   21ea4:	add	fp, sp, #4
   21ea8:	sub	sp, sp, #16
   21eac:	str	r0, [fp, #-8]
   21eb0:	str	r1, [fp, #-12]
   21eb4:	str	r2, [fp, #-16]
   21eb8:	mov	r3, #1
   21ebc:	ldr	r2, [fp, #-16]
   21ec0:	ldr	r1, [fp, #-12]
   21ec4:	ldr	r0, [fp, #-8]
   21ec8:	bl	2192c <__assert_fail@plt+0x107d4>
   21ecc:	nop			; (mov r0, r0)
   21ed0:	sub	sp, fp, #4
   21ed4:	pop	{fp, pc}
   21ed8:	push	{fp, lr}
   21edc:	add	fp, sp, #4
   21ee0:	sub	sp, sp, #16
   21ee4:	str	r0, [fp, #-8]
   21ee8:	str	r1, [fp, #-12]
   21eec:	str	r2, [fp, #-16]
   21ef0:	mov	r3, #0
   21ef4:	ldr	r2, [fp, #-16]
   21ef8:	ldr	r1, [fp, #-12]
   21efc:	ldr	r0, [fp, #-8]
   21f00:	bl	2192c <__assert_fail@plt+0x107d4>
   21f04:	nop			; (mov r0, r0)
   21f08:	sub	sp, fp, #4
   21f0c:	pop	{fp, pc}
   21f10:	push	{fp, lr}
   21f14:	add	fp, sp, #4
   21f18:	sub	sp, sp, #16
   21f1c:	str	r0, [fp, #-8]
   21f20:	str	r1, [fp, #-12]
   21f24:	str	r2, [fp, #-16]
   21f28:	mov	r3, #2
   21f2c:	ldr	r2, [fp, #-16]
   21f30:	ldr	r1, [fp, #-12]
   21f34:	ldr	r0, [fp, #-8]
   21f38:	bl	2192c <__assert_fail@plt+0x107d4>
   21f3c:	nop			; (mov r0, r0)
   21f40:	sub	sp, fp, #4
   21f44:	pop	{fp, pc}
   21f48:	push	{fp, lr}
   21f4c:	add	fp, sp, #4
   21f50:	sub	sp, sp, #16
   21f54:	str	r0, [fp, #-8]
   21f58:	str	r1, [fp, #-12]
   21f5c:	str	r2, [fp, #-16]
   21f60:	mov	r3, #1
   21f64:	ldr	r2, [fp, #-16]
   21f68:	ldr	r1, [fp, #-12]
   21f6c:	ldr	r0, [fp, #-8]
   21f70:	bl	21b64 <__assert_fail@plt+0x10a0c>
   21f74:	nop			; (mov r0, r0)
   21f78:	sub	sp, fp, #4
   21f7c:	pop	{fp, pc}
   21f80:	push	{fp, lr}
   21f84:	add	fp, sp, #4
   21f88:	sub	sp, sp, #16
   21f8c:	str	r0, [fp, #-8]
   21f90:	str	r1, [fp, #-12]
   21f94:	str	r2, [fp, #-16]
   21f98:	mov	r3, #0
   21f9c:	ldr	r2, [fp, #-16]
   21fa0:	ldr	r1, [fp, #-12]
   21fa4:	ldr	r0, [fp, #-8]
   21fa8:	bl	21b64 <__assert_fail@plt+0x10a0c>
   21fac:	nop			; (mov r0, r0)
   21fb0:	sub	sp, fp, #4
   21fb4:	pop	{fp, pc}
   21fb8:	push	{fp, lr}
   21fbc:	add	fp, sp, #4
   21fc0:	sub	sp, sp, #16
   21fc4:	str	r0, [fp, #-8]
   21fc8:	str	r1, [fp, #-12]
   21fcc:	str	r2, [fp, #-16]
   21fd0:	mov	r3, #2
   21fd4:	ldr	r2, [fp, #-16]
   21fd8:	ldr	r1, [fp, #-12]
   21fdc:	ldr	r0, [fp, #-8]
   21fe0:	bl	21b64 <__assert_fail@plt+0x10a0c>
   21fe4:	nop			; (mov r0, r0)
   21fe8:	sub	sp, fp, #4
   21fec:	pop	{fp, pc}
   21ff0:	push	{fp, lr}
   21ff4:	add	fp, sp, #4
   21ff8:	sub	sp, sp, #32
   21ffc:	str	r0, [fp, #-16]
   22000:	str	r1, [fp, #-20]	; 0xffffffec
   22004:	str	r2, [fp, #-24]	; 0xffffffe8
   22008:	mov	r3, #2
   2200c:	str	r3, [sp]
   22010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22014:	ldr	r2, [fp, #-20]	; 0xffffffec
   22018:	mov	r1, #0
   2201c:	ldr	r0, [fp, #-16]
   22020:	bl	21294 <__assert_fail@plt+0x1013c>
   22024:	mov	r3, r0
   22028:	str	r3, [fp, #-8]
   2202c:	ldr	r3, [fp, #-8]
   22030:	cmp	r3, #0
   22034:	beq	2204c <__assert_fail@plt+0x10ef4>
   22038:	ldr	r3, [pc, #24]	; 22058 <__assert_fail@plt+0x10f00>
   2203c:	ldr	r2, [pc, #24]	; 2205c <__assert_fail@plt+0x10f04>
   22040:	ldr	r1, [pc, #24]	; 22060 <__assert_fail@plt+0x10f08>
   22044:	ldr	r0, [pc, #24]	; 22064 <__assert_fail@plt+0x10f0c>
   22048:	bl	11158 <__assert_fail@plt>
   2204c:	nop			; (mov r0, r0)
   22050:	sub	sp, fp, #4
   22054:	pop	{fp, pc}
   22058:	andeq	r4, r3, r8, lsl #3
   2205c:	ldrdeq	r0, [r0], -r9
   22060:	andeq	r3, r3, r0, asr #19
   22064:	andeq	r3, r3, r8, ror #23
   22068:	push	{fp, lr}
   2206c:	add	fp, sp, #4
   22070:	sub	sp, sp, #16
   22074:	str	r0, [fp, #-8]
   22078:	str	r1, [fp, #-12]
   2207c:	mov	r3, #2
   22080:	str	r3, [sp]
   22084:	ldr	r3, [fp, #-12]
   22088:	ldr	r2, [fp, #-8]
   2208c:	mov	r1, #0
   22090:	mov	r0, #0
   22094:	bl	21294 <__assert_fail@plt+0x1013c>
   22098:	mov	r3, r0
   2209c:	cmp	r3, #0
   220a0:	moveq	r3, #1
   220a4:	movne	r3, #0
   220a8:	uxtb	r3, r3
   220ac:	mov	r0, r3
   220b0:	sub	sp, fp, #4
   220b4:	pop	{fp, pc}
   220b8:	push	{fp, lr}
   220bc:	add	fp, sp, #4
   220c0:	sub	sp, sp, #32
   220c4:	str	r0, [fp, #-24]	; 0xffffffe8
   220c8:	str	r1, [fp, #-28]	; 0xffffffe4
   220cc:	str	r2, [fp, #-32]	; 0xffffffe0
   220d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   220d4:	bl	2042c <__assert_fail@plt+0xf2d4>
   220d8:	mov	r3, r0
   220dc:	cmp	r3, #0
   220e0:	bne	22108 <__assert_fail@plt+0x10fb0>
   220e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   220e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   220ec:	bl	2054c <__assert_fail@plt+0xf3f4>
   220f0:	mov	r3, r0
   220f4:	cmp	r3, #0
   220f8:	moveq	r3, #1
   220fc:	movne	r3, #0
   22100:	uxtb	r3, r3
   22104:	b	2214c <__assert_fail@plt+0x10ff4>
   22108:	sub	r3, fp, #20
   2210c:	mov	r0, r3
   22110:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22114:	sub	r3, fp, #20
   22118:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2211c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22120:	mov	r0, r3
   22124:	bl	20c6c <__assert_fail@plt+0xfb14>
   22128:	sub	r3, fp, #20
   2212c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22130:	mov	r0, r3
   22134:	bl	22068 <__assert_fail@plt+0x10f10>
   22138:	str	r0, [fp, #-8]
   2213c:	sub	r3, fp, #20
   22140:	mov	r0, r3
   22144:	bl	1f3e0 <__assert_fail@plt+0xe288>
   22148:	ldr	r3, [fp, #-8]
   2214c:	mov	r0, r3
   22150:	sub	sp, fp, #4
   22154:	pop	{fp, pc}
   22158:	push	{fp, lr}
   2215c:	add	fp, sp, #4
   22160:	sub	sp, sp, #56	; 0x38
   22164:	str	r0, [fp, #-40]	; 0xffffffd8
   22168:	str	r1, [fp, #-44]	; 0xffffffd4
   2216c:	str	r2, [fp, #-48]	; 0xffffffd0
   22170:	str	r3, [fp, #-52]	; 0xffffffcc
   22174:	sub	r3, fp, #20
   22178:	mov	r0, r3
   2217c:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22180:	sub	r3, fp, #32
   22184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   22188:	mov	r0, r3
   2218c:	bl	1f6bc <__assert_fail@plt+0xe564>
   22190:	sub	r2, fp, #32
   22194:	sub	r1, fp, #20
   22198:	ldr	r3, [fp, #4]
   2219c:	str	r3, [sp]
   221a0:	mov	r3, r2
   221a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   221a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   221ac:	bl	21294 <__assert_fail@plt+0x1013c>
   221b0:	sub	r3, fp, #32
   221b4:	mov	r0, r3
   221b8:	bl	1f3e0 <__assert_fail@plt+0xe288>
   221bc:	sub	r3, fp, #20
   221c0:	mov	r0, r3
   221c4:	bl	1fa24 <__assert_fail@plt+0xe8cc>
   221c8:	str	r0, [fp, #-8]
   221cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   221d0:	cmp	r3, #0
   221d4:	beq	221e8 <__assert_fail@plt+0x11090>
   221d8:	sub	r3, fp, #20
   221dc:	mov	r1, r3
   221e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   221e4:	bl	20784 <__assert_fail@plt+0xf62c>
   221e8:	sub	r3, fp, #20
   221ec:	mov	r0, r3
   221f0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   221f4:	ldr	r3, [fp, #-8]
   221f8:	mov	r0, r3
   221fc:	sub	sp, fp, #4
   22200:	pop	{fp, pc}
   22204:	push	{fp, lr}
   22208:	add	fp, sp, #4
   2220c:	sub	sp, sp, #24
   22210:	str	r0, [fp, #-8]
   22214:	str	r1, [fp, #-12]
   22218:	str	r2, [fp, #-16]
   2221c:	str	r3, [fp, #-20]	; 0xffffffec
   22220:	mov	r3, #1
   22224:	str	r3, [sp]
   22228:	ldr	r3, [fp, #-20]	; 0xffffffec
   2222c:	ldr	r2, [fp, #-16]
   22230:	ldr	r1, [fp, #-12]
   22234:	ldr	r0, [fp, #-8]
   22238:	bl	22158 <__assert_fail@plt+0x11000>
   2223c:	mov	r3, r0
   22240:	mov	r0, r3
   22244:	sub	sp, fp, #4
   22248:	pop	{fp, pc}
   2224c:	push	{fp, lr}
   22250:	add	fp, sp, #4
   22254:	sub	sp, sp, #24
   22258:	str	r0, [fp, #-8]
   2225c:	str	r1, [fp, #-12]
   22260:	str	r2, [fp, #-16]
   22264:	str	r3, [fp, #-20]	; 0xffffffec
   22268:	mov	r3, #0
   2226c:	str	r3, [sp]
   22270:	ldr	r3, [fp, #-20]	; 0xffffffec
   22274:	ldr	r2, [fp, #-16]
   22278:	ldr	r1, [fp, #-12]
   2227c:	ldr	r0, [fp, #-8]
   22280:	bl	22158 <__assert_fail@plt+0x11000>
   22284:	mov	r3, r0
   22288:	mov	r0, r3
   2228c:	sub	sp, fp, #4
   22290:	pop	{fp, pc}
   22294:	push	{fp, lr}
   22298:	add	fp, sp, #4
   2229c:	sub	sp, sp, #24
   222a0:	str	r0, [fp, #-8]
   222a4:	str	r1, [fp, #-12]
   222a8:	str	r2, [fp, #-16]
   222ac:	str	r3, [fp, #-20]	; 0xffffffec
   222b0:	mov	r3, #2
   222b4:	str	r3, [sp]
   222b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   222bc:	ldr	r2, [fp, #-16]
   222c0:	ldr	r1, [fp, #-12]
   222c4:	ldr	r0, [fp, #-8]
   222c8:	bl	22158 <__assert_fail@plt+0x11000>
   222cc:	mov	r3, r0
   222d0:	mov	r0, r3
   222d4:	sub	sp, fp, #4
   222d8:	pop	{fp, pc}
   222dc:	push	{fp, lr}
   222e0:	add	fp, sp, #4
   222e4:	sub	sp, sp, #24
   222e8:	str	r0, [fp, #-8]
   222ec:	str	r1, [fp, #-12]
   222f0:	str	r2, [fp, #-16]
   222f4:	mov	r3, #1
   222f8:	str	r3, [sp]
   222fc:	ldr	r3, [fp, #-16]
   22300:	ldr	r2, [fp, #-12]
   22304:	mov	r1, #0
   22308:	ldr	r0, [fp, #-8]
   2230c:	bl	22158 <__assert_fail@plt+0x11000>
   22310:	mov	r3, r0
   22314:	mov	r0, r3
   22318:	sub	sp, fp, #4
   2231c:	pop	{fp, pc}
   22320:	push	{fp, lr}
   22324:	add	fp, sp, #4
   22328:	sub	sp, sp, #24
   2232c:	str	r0, [fp, #-8]
   22330:	str	r1, [fp, #-12]
   22334:	str	r2, [fp, #-16]
   22338:	mov	r3, #0
   2233c:	str	r3, [sp]
   22340:	ldr	r3, [fp, #-16]
   22344:	ldr	r2, [fp, #-12]
   22348:	mov	r1, #0
   2234c:	ldr	r0, [fp, #-8]
   22350:	bl	22158 <__assert_fail@plt+0x11000>
   22354:	mov	r3, r0
   22358:	mov	r0, r3
   2235c:	sub	sp, fp, #4
   22360:	pop	{fp, pc}
   22364:	push	{fp, lr}
   22368:	add	fp, sp, #4
   2236c:	sub	sp, sp, #24
   22370:	str	r0, [fp, #-8]
   22374:	str	r1, [fp, #-12]
   22378:	str	r2, [fp, #-16]
   2237c:	mov	r3, #2
   22380:	str	r3, [sp]
   22384:	ldr	r3, [fp, #-16]
   22388:	ldr	r2, [fp, #-12]
   2238c:	mov	r1, #0
   22390:	ldr	r0, [fp, #-8]
   22394:	bl	22158 <__assert_fail@plt+0x11000>
   22398:	mov	r3, r0
   2239c:	mov	r0, r3
   223a0:	sub	sp, fp, #4
   223a4:	pop	{fp, pc}
   223a8:	push	{fp, lr}
   223ac:	add	fp, sp, #4
   223b0:	sub	sp, sp, #24
   223b4:	str	r0, [fp, #-8]
   223b8:	str	r1, [fp, #-12]
   223bc:	str	r2, [fp, #-16]
   223c0:	mov	r3, #1
   223c4:	str	r3, [sp]
   223c8:	ldr	r3, [fp, #-16]
   223cc:	ldr	r2, [fp, #-12]
   223d0:	ldr	r1, [fp, #-8]
   223d4:	mov	r0, #0
   223d8:	bl	22158 <__assert_fail@plt+0x11000>
   223dc:	mov	r3, r0
   223e0:	mov	r0, r3
   223e4:	sub	sp, fp, #4
   223e8:	pop	{fp, pc}
   223ec:	push	{fp, lr}
   223f0:	add	fp, sp, #4
   223f4:	sub	sp, sp, #24
   223f8:	str	r0, [fp, #-8]
   223fc:	str	r1, [fp, #-12]
   22400:	str	r2, [fp, #-16]
   22404:	mov	r3, #0
   22408:	str	r3, [sp]
   2240c:	ldr	r3, [fp, #-16]
   22410:	ldr	r2, [fp, #-12]
   22414:	ldr	r1, [fp, #-8]
   22418:	mov	r0, #0
   2241c:	bl	22158 <__assert_fail@plt+0x11000>
   22420:	mov	r3, r0
   22424:	mov	r0, r3
   22428:	sub	sp, fp, #4
   2242c:	pop	{fp, pc}
   22430:	push	{fp, lr}
   22434:	add	fp, sp, #4
   22438:	sub	sp, sp, #24
   2243c:	str	r0, [fp, #-8]
   22440:	str	r1, [fp, #-12]
   22444:	str	r2, [fp, #-16]
   22448:	mov	r3, #2
   2244c:	str	r3, [sp]
   22450:	ldr	r3, [fp, #-16]
   22454:	ldr	r2, [fp, #-12]
   22458:	ldr	r1, [fp, #-8]
   2245c:	mov	r0, #0
   22460:	bl	22158 <__assert_fail@plt+0x11000>
   22464:	mov	r3, r0
   22468:	mov	r0, r3
   2246c:	sub	sp, fp, #4
   22470:	pop	{fp, pc}
   22474:	push	{fp, lr}
   22478:	add	fp, sp, #4
   2247c:	sub	sp, sp, #16
   22480:	str	r0, [fp, #-8]
   22484:	str	r1, [fp, #-12]
   22488:	mov	r3, #1
   2248c:	str	r3, [sp]
   22490:	ldr	r3, [fp, #-12]
   22494:	ldr	r2, [fp, #-8]
   22498:	mov	r1, #0
   2249c:	mov	r0, #0
   224a0:	bl	22158 <__assert_fail@plt+0x11000>
   224a4:	mov	r3, r0
   224a8:	mov	r0, r3
   224ac:	sub	sp, fp, #4
   224b0:	pop	{fp, pc}
   224b4:	push	{fp, lr}
   224b8:	add	fp, sp, #4
   224bc:	sub	sp, sp, #16
   224c0:	str	r0, [fp, #-8]
   224c4:	str	r1, [fp, #-12]
   224c8:	mov	r3, #0
   224cc:	str	r3, [sp]
   224d0:	ldr	r3, [fp, #-12]
   224d4:	ldr	r2, [fp, #-8]
   224d8:	mov	r1, #0
   224dc:	mov	r0, #0
   224e0:	bl	22158 <__assert_fail@plt+0x11000>
   224e4:	mov	r3, r0
   224e8:	mov	r0, r3
   224ec:	sub	sp, fp, #4
   224f0:	pop	{fp, pc}
   224f4:	push	{fp, lr}
   224f8:	add	fp, sp, #4
   224fc:	sub	sp, sp, #16
   22500:	str	r0, [fp, #-8]
   22504:	str	r1, [fp, #-12]
   22508:	mov	r3, #2
   2250c:	str	r3, [sp]
   22510:	ldr	r3, [fp, #-12]
   22514:	ldr	r2, [fp, #-8]
   22518:	mov	r1, #0
   2251c:	mov	r0, #0
   22520:	bl	22158 <__assert_fail@plt+0x11000>
   22524:	mov	r3, r0
   22528:	mov	r0, r3
   2252c:	sub	sp, fp, #4
   22530:	pop	{fp, pc}
   22534:	push	{fp, lr}
   22538:	add	fp, sp, #4
   2253c:	sub	sp, sp, #24
   22540:	str	r0, [fp, #-8]
   22544:	str	r1, [fp, #-12]
   22548:	str	r2, [fp, #-16]
   2254c:	mov	r3, #0
   22550:	str	r3, [sp]
   22554:	ldr	r3, [fp, #-16]
   22558:	ldr	r2, [fp, #-12]
   2255c:	ldr	r1, [fp, #-8]
   22560:	mov	r0, #0
   22564:	bl	22158 <__assert_fail@plt+0x11000>
   22568:	mov	r3, r0
   2256c:	mov	r0, r3
   22570:	sub	sp, fp, #4
   22574:	pop	{fp, pc}
   22578:	push	{fp, lr}
   2257c:	add	fp, sp, #4
   22580:	sub	sp, sp, #32
   22584:	str	r0, [fp, #-16]
   22588:	str	r1, [fp, #-20]	; 0xffffffec
   2258c:	str	r2, [fp, #-24]	; 0xffffffe8
   22590:	mov	r3, #2
   22594:	str	r3, [sp]
   22598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2259c:	ldr	r2, [fp, #-20]	; 0xffffffec
   225a0:	mov	r1, #0
   225a4:	ldr	r0, [fp, #-16]
   225a8:	bl	22158 <__assert_fail@plt+0x11000>
   225ac:	str	r0, [fp, #-8]
   225b0:	ldr	r3, [fp, #-8]
   225b4:	cmp	r3, #0
   225b8:	beq	225d0 <__assert_fail@plt+0x11478>
   225bc:	ldr	r3, [pc, #24]	; 225dc <__assert_fail@plt+0x11484>
   225c0:	ldr	r2, [pc, #24]	; 225e0 <__assert_fail@plt+0x11488>
   225c4:	ldr	r1, [pc, #24]	; 225e4 <__assert_fail@plt+0x1148c>
   225c8:	ldr	r0, [pc, #24]	; 225e8 <__assert_fail@plt+0x11490>
   225cc:	bl	11158 <__assert_fail@plt>
   225d0:	nop			; (mov r0, r0)
   225d4:	sub	sp, fp, #4
   225d8:	pop	{fp, pc}
   225dc:	muleq	r3, r8, r1
   225e0:	andeq	r0, r0, r7, asr sl
   225e4:	andeq	r3, r3, r0, asr #19
   225e8:	andeq	r3, r3, r8, ror #23
   225ec:	push	{fp, lr}
   225f0:	add	fp, sp, #4
   225f4:	sub	sp, sp, #16
   225f8:	str	r0, [fp, #-8]
   225fc:	str	r1, [fp, #-12]
   22600:	mov	r3, #2
   22604:	str	r3, [sp]
   22608:	ldr	r3, [fp, #-12]
   2260c:	ldr	r2, [fp, #-8]
   22610:	mov	r1, #0
   22614:	mov	r0, #0
   22618:	bl	22158 <__assert_fail@plt+0x11000>
   2261c:	mov	r3, r0
   22620:	cmp	r3, #0
   22624:	moveq	r3, #1
   22628:	movne	r3, #0
   2262c:	uxtb	r3, r3
   22630:	mov	r0, r3
   22634:	sub	sp, fp, #4
   22638:	pop	{fp, pc}
   2263c:	push	{fp, lr}
   22640:	add	fp, sp, #4
   22644:	sub	sp, sp, #40	; 0x28
   22648:	str	r0, [fp, #-40]	; 0xffffffd8
   2264c:	str	r1, [fp, #-44]	; 0xffffffd4
   22650:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22658:	orr	r3, r2, r3
   2265c:	cmp	r3, #0
   22660:	bne	22678 <__assert_fail@plt+0x11520>
   22664:	ldr	r3, [pc, #488]	; 22854 <__assert_fail@plt+0x116fc>
   22668:	ldr	r2, [pc, #488]	; 22858 <__assert_fail@plt+0x11700>
   2266c:	ldr	r1, [pc, #488]	; 2285c <__assert_fail@plt+0x11704>
   22670:	ldr	r0, [pc, #488]	; 22860 <__assert_fail@plt+0x11708>
   22674:	bl	11158 <__assert_fail@plt>
   22678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2267c:	cmp	r3, #0
   22680:	bne	2268c <__assert_fail@plt+0x11534>
   22684:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22688:	b	22848 <__assert_fail@plt+0x116f0>
   2268c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22690:	cmp	r3, #0
   22694:	bne	226a0 <__assert_fail@plt+0x11548>
   22698:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2269c:	b	22848 <__assert_fail@plt+0x116f0>
   226a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   226a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   226a8:	orr	r3, r2, r3
   226ac:	str	r3, [fp, #-16]
   226b0:	mov	r3, #0
   226b4:	str	r3, [fp, #-20]	; 0xffffffec
   226b8:	ldr	r3, [fp, #-16]
   226bc:	rsb	r2, r3, #0
   226c0:	ldr	r3, [fp, #-16]
   226c4:	and	r3, r3, r2
   226c8:	str	r3, [fp, #-8]
   226cc:	mov	r3, #0
   226d0:	str	r3, [fp, #-12]
   226d4:	mov	r3, #8
   226d8:	str	r3, [fp, #-24]	; 0xffffffe8
   226dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   226e0:	cmp	r3, #31
   226e4:	bhi	22734 <__assert_fail@plt+0x115dc>
   226e8:	b	22708 <__assert_fail@plt+0x115b0>
   226ec:	ldr	r2, [fp, #-8]
   226f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   226f4:	lsl	r3, r2, r3
   226f8:	str	r3, [fp, #-8]
   226fc:	ldr	r3, [fp, #-12]
   22700:	add	r3, r3, #8
   22704:	str	r3, [fp, #-12]
   22708:	ldr	r3, [fp, #-8]
   2270c:	and	r3, r3, #-16777216	; 0xff000000
   22710:	cmp	r3, #0
   22714:	beq	226ec <__assert_fail@plt+0x11594>
   22718:	b	22734 <__assert_fail@plt+0x115dc>
   2271c:	ldr	r3, [fp, #-8]
   22720:	lsl	r3, r3, #1
   22724:	str	r3, [fp, #-8]
   22728:	ldr	r3, [fp, #-12]
   2272c:	add	r3, r3, #1
   22730:	str	r3, [fp, #-12]
   22734:	ldr	r3, [fp, #-8]
   22738:	cmp	r3, #0
   2273c:	bge	2271c <__assert_fail@plt+0x115c4>
   22740:	ldr	r3, [fp, #-12]
   22744:	str	r3, [fp, #-20]	; 0xffffffec
   22748:	ldr	r3, [fp, #-20]	; 0xffffffec
   2274c:	rsb	r3, r3, #31
   22750:	str	r3, [fp, #-28]	; 0xffffffe4
   22754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22758:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2275c:	lsr	r3, r2, r3
   22760:	str	r3, [fp, #-40]	; 0xffffffd8
   22764:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22768:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2276c:	lsr	r3, r2, r3
   22770:	str	r3, [fp, #-44]	; 0xffffffd4
   22774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22778:	and	r3, r3, #1
   2277c:	cmp	r3, #0
   22780:	bne	227ac <__assert_fail@plt+0x11654>
   22784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22788:	str	r3, [fp, #-32]	; 0xffffffe0
   2278c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22790:	str	r3, [fp, #-40]	; 0xffffffd8
   22794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22798:	str	r3, [fp, #-44]	; 0xffffffd4
   2279c:	b	227ac <__assert_fail@plt+0x11654>
   227a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227a4:	lsr	r3, r3, #1
   227a8:	str	r3, [fp, #-44]	; 0xffffffd4
   227ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227b0:	and	r3, r3, #1
   227b4:	cmp	r3, #0
   227b8:	beq	227a0 <__assert_fail@plt+0x11648>
   227bc:	b	2282c <__assert_fail@plt+0x116d4>
   227c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227c8:	cmp	r2, r3
   227cc:	bls	22800 <__assert_fail@plt+0x116a8>
   227d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   227d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   227d8:	sub	r3, r2, r3
   227dc:	str	r3, [fp, #-40]	; 0xffffffd8
   227e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227e4:	lsr	r3, r3, #1
   227e8:	str	r3, [fp, #-40]	; 0xffffffd8
   227ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227f0:	and	r3, r3, #1
   227f4:	cmp	r3, #0
   227f8:	beq	227e0 <__assert_fail@plt+0x11688>
   227fc:	b	2282c <__assert_fail@plt+0x116d4>
   22800:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22808:	sub	r3, r2, r3
   2280c:	str	r3, [fp, #-44]	; 0xffffffd4
   22810:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22814:	lsr	r3, r3, #1
   22818:	str	r3, [fp, #-44]	; 0xffffffd4
   2281c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22820:	and	r3, r3, #1
   22824:	cmp	r3, #0
   22828:	beq	22810 <__assert_fail@plt+0x116b8>
   2282c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22834:	cmp	r2, r3
   22838:	bne	227c0 <__assert_fail@plt+0x11668>
   2283c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22840:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22844:	lsl	r3, r2, r3
   22848:	mov	r0, r3
   2284c:	sub	sp, fp, #4
   22850:	pop	{fp, pc}
   22854:	andeq	r4, r3, r8, lsr #3
   22858:	andeq	r0, r0, r7, ror #20
   2285c:	andeq	r3, r3, r0, asr #19
   22860:	andeq	r3, r3, ip, lsl #25
   22864:	push	{fp, lr}
   22868:	add	fp, sp, #4
   2286c:	sub	sp, sp, #32
   22870:	str	r0, [fp, #-24]	; 0xffffffe8
   22874:	str	r1, [fp, #-28]	; 0xffffffe4
   22878:	str	r2, [fp, #-32]	; 0xffffffe0
   2287c:	sub	r3, fp, #16
   22880:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22884:	mov	r0, r3
   22888:	bl	1f6bc <__assert_fail@plt+0xe564>
   2288c:	sub	r2, fp, #16
   22890:	sub	r3, fp, #16
   22894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22898:	mov	r0, r3
   2289c:	bl	22970 <__assert_fail@plt+0x11818>
   228a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228a4:	cmp	r3, #0
   228a8:	beq	228bc <__assert_fail@plt+0x11764>
   228ac:	sub	r3, fp, #16
   228b0:	mov	r0, r3
   228b4:	bl	1fa24 <__assert_fail@plt+0xe8cc>
   228b8:	str	r0, [fp, #-32]	; 0xffffffe0
   228bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228c0:	cmp	r3, #0
   228c4:	beq	228d8 <__assert_fail@plt+0x11780>
   228c8:	sub	r3, fp, #16
   228cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   228d0:	mov	r0, r3
   228d4:	bl	20784 <__assert_fail@plt+0xf62c>
   228d8:	sub	r3, fp, #16
   228dc:	mov	r0, r3
   228e0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   228e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   228e8:	mov	r0, r3
   228ec:	sub	sp, fp, #4
   228f0:	pop	{fp, pc}
   228f4:	push	{fp, lr}
   228f8:	add	fp, sp, #4
   228fc:	sub	sp, sp, #16
   22900:	str	r0, [fp, #-16]
   22904:	ldr	r3, [fp, #-16]
   22908:	ldr	r3, [r3, #4]
   2290c:	cmp	r3, #0
   22910:	bgt	22928 <__assert_fail@plt+0x117d0>
   22914:	ldr	r3, [pc, #68]	; 22960 <__assert_fail@plt+0x11808>
   22918:	ldr	r2, [pc, #68]	; 22964 <__assert_fail@plt+0x1180c>
   2291c:	ldr	r1, [pc, #68]	; 22968 <__assert_fail@plt+0x11810>
   22920:	ldr	r0, [pc, #68]	; 2296c <__assert_fail@plt+0x11814>
   22924:	bl	11158 <__assert_fail@plt>
   22928:	ldr	r3, [fp, #-16]
   2292c:	ldr	r3, [r3, #8]
   22930:	mov	r1, #0
   22934:	mov	r0, r3
   22938:	bl	1c7e0 <__assert_fail@plt+0xb688>
   2293c:	str	r0, [fp, #-8]
   22940:	ldr	r2, [fp, #-8]
   22944:	ldr	r1, [fp, #-16]
   22948:	ldr	r0, [fp, #-16]
   2294c:	bl	21f10 <__assert_fail@plt+0x10db8>
   22950:	ldr	r3, [fp, #-8]
   22954:	mov	r0, r3
   22958:	sub	sp, fp, #4
   2295c:	pop	{fp, pc}
   22960:			; <UNDEFINED> instruction: 0x000341b4
   22964:	andeq	r0, r0, r3, lsr #21
   22968:	andeq	r3, r3, r0, asr #19
   2296c:	muleq	r3, r8, ip
   22970:	push	{fp, lr}
   22974:	add	fp, sp, #4
   22978:	sub	sp, sp, #64	; 0x40
   2297c:	str	r0, [fp, #-56]	; 0xffffffc8
   22980:	str	r1, [fp, #-60]	; 0xffffffc4
   22984:	str	r2, [fp, #-64]	; 0xffffffc0
   22988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2298c:	ldr	r3, [r3, #4]
   22990:	cmp	r3, #0
   22994:	bne	229a8 <__assert_fail@plt+0x11850>
   22998:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2299c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   229a0:	bl	20700 <__assert_fail@plt+0xf5a8>
   229a4:	b	22bd4 <__assert_fail@plt+0x11a7c>
   229a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   229ac:	ldr	r3, [r3, #4]
   229b0:	cmp	r3, #0
   229b4:	bne	229c8 <__assert_fail@plt+0x11870>
   229b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   229bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   229c0:	bl	20700 <__assert_fail@plt+0xf5a8>
   229c4:	b	22bd4 <__assert_fail@plt+0x11a7c>
   229c8:	sub	r3, fp, #36	; 0x24
   229cc:	mov	r0, r3
   229d0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   229d4:	sub	r3, fp, #48	; 0x30
   229d8:	mov	r0, r3
   229dc:	bl	1f318 <__assert_fail@plt+0xe1c0>
   229e0:	sub	r3, fp, #36	; 0x24
   229e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   229e8:	mov	r0, r3
   229ec:	bl	20700 <__assert_fail@plt+0xf5a8>
   229f0:	sub	r3, fp, #36	; 0x24
   229f4:	mov	r0, r3
   229f8:	bl	228f4 <__assert_fail@plt+0x1179c>
   229fc:	str	r0, [fp, #-8]
   22a00:	sub	r3, fp, #48	; 0x30
   22a04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22a08:	mov	r0, r3
   22a0c:	bl	20700 <__assert_fail@plt+0xf5a8>
   22a10:	sub	r3, fp, #48	; 0x30
   22a14:	mov	r0, r3
   22a18:	bl	228f4 <__assert_fail@plt+0x1179c>
   22a1c:	str	r0, [fp, #-12]
   22a20:	ldr	r2, [fp, #-12]
   22a24:	ldr	r3, [fp, #-8]
   22a28:	cmp	r2, r3
   22a2c:	movcc	r3, r2
   22a30:	movcs	r3, r3
   22a34:	str	r3, [fp, #-16]
   22a38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22a3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22a40:	cmp	r2, r3
   22a44:	bge	22a5c <__assert_fail@plt+0x11904>
   22a48:	sub	r2, fp, #48	; 0x30
   22a4c:	sub	r3, fp, #36	; 0x24
   22a50:	mov	r1, r2
   22a54:	mov	r0, r3
   22a58:	bl	20784 <__assert_fail@plt+0xf62c>
   22a5c:	sub	r2, fp, #48	; 0x30
   22a60:	sub	r1, fp, #36	; 0x24
   22a64:	sub	r3, fp, #36	; 0x24
   22a68:	mov	r0, r3
   22a6c:	bl	218a0 <__assert_fail@plt+0x10748>
   22a70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a74:	cmp	r3, #0
   22a78:	bne	22a90 <__assert_fail@plt+0x11938>
   22a7c:	sub	r3, fp, #48	; 0x30
   22a80:	mov	r1, r3
   22a84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22a88:	bl	20784 <__assert_fail@plt+0xf62c>
   22a8c:	b	22bac <__assert_fail@plt+0x11a54>
   22a90:	sub	r3, fp, #36	; 0x24
   22a94:	mov	r0, r3
   22a98:	bl	228f4 <__assert_fail@plt+0x1179c>
   22a9c:	sub	r2, fp, #48	; 0x30
   22aa0:	sub	r3, fp, #36	; 0x24
   22aa4:	mov	r1, r2
   22aa8:	mov	r0, r3
   22aac:	bl	2054c <__assert_fail@plt+0xf3f4>
   22ab0:	str	r0, [fp, #-20]	; 0xffffffec
   22ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ab8:	cmp	r3, #0
   22abc:	bne	22ad4 <__assert_fail@plt+0x1197c>
   22ac0:	sub	r3, fp, #36	; 0x24
   22ac4:	mov	r1, r3
   22ac8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22acc:	bl	20784 <__assert_fail@plt+0xf62c>
   22ad0:	b	22bac <__assert_fail@plt+0x11a54>
   22ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ad8:	cmp	r3, #0
   22adc:	bge	22af4 <__assert_fail@plt+0x1199c>
   22ae0:	sub	r2, fp, #48	; 0x30
   22ae4:	sub	r3, fp, #36	; 0x24
   22ae8:	mov	r1, r2
   22aec:	mov	r0, r3
   22af0:	bl	20784 <__assert_fail@plt+0xf62c>
   22af4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22af8:	cmp	r3, #1
   22afc:	bne	22b94 <__assert_fail@plt+0x11a3c>
   22b00:	sub	r2, fp, #48	; 0x30
   22b04:	sub	r1, fp, #36	; 0x24
   22b08:	sub	r3, fp, #36	; 0x24
   22b0c:	mov	r0, r3
   22b10:	bl	218a0 <__assert_fail@plt+0x10748>
   22b14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22b18:	ldr	r3, [r3]
   22b1c:	cmp	r3, #0
   22b20:	bgt	22b38 <__assert_fail@plt+0x119e0>
   22b24:	mov	r1, #1
   22b28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22b2c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   22b30:	mov	r3, r0
   22b34:	b	22b40 <__assert_fail@plt+0x119e8>
   22b38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22b3c:	ldr	r3, [r3, #8]
   22b40:	str	r3, [fp, #-24]	; 0xffffffe8
   22b44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22b48:	ldr	r2, [r3]
   22b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22b50:	ldr	r3, [r3]
   22b54:	mov	r1, r3
   22b58:	mov	r0, r2
   22b5c:	bl	2263c <__assert_fail@plt+0x114e4>
   22b60:	mov	r2, r0
   22b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22b68:	str	r2, [r3]
   22b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22b70:	ldr	r3, [r3]
   22b74:	cmp	r3, #0
   22b78:	movne	r3, #1
   22b7c:	moveq	r3, #0
   22b80:	uxtb	r3, r3
   22b84:	mov	r2, r3
   22b88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22b8c:	str	r2, [r3, #4]
   22b90:	b	22bac <__assert_fail@plt+0x11a54>
   22b94:	sub	r2, fp, #48	; 0x30
   22b98:	sub	r1, fp, #36	; 0x24
   22b9c:	sub	r3, fp, #36	; 0x24
   22ba0:	mov	r0, r3
   22ba4:	bl	20c6c <__assert_fail@plt+0xfb14>
   22ba8:	b	22a90 <__assert_fail@plt+0x11938>
   22bac:	sub	r3, fp, #36	; 0x24
   22bb0:	mov	r0, r3
   22bb4:	bl	1f3e0 <__assert_fail@plt+0xe288>
   22bb8:	sub	r3, fp, #48	; 0x30
   22bbc:	mov	r0, r3
   22bc0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   22bc4:	ldr	r2, [fp, #-16]
   22bc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   22bcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22bd0:	bl	20f68 <__assert_fail@plt+0xfe10>
   22bd4:	sub	sp, fp, #4
   22bd8:	pop	{fp, pc}
   22bdc:	push	{fp, lr}
   22be0:	add	fp, sp, #4
   22be4:	sub	sp, sp, #136	; 0x88
   22be8:	str	r0, [fp, #-128]	; 0xffffff80
   22bec:	str	r1, [fp, #-132]	; 0xffffff7c
   22bf0:	str	r2, [fp, #-136]	; 0xffffff78
   22bf4:	str	r3, [fp, #-140]	; 0xffffff74
   22bf8:	ldr	r3, [fp, #-140]	; 0xffffff74
   22bfc:	ldr	r3, [r3, #4]
   22c00:	cmp	r3, #0
   22c04:	bne	22c54 <__assert_fail@plt+0x11afc>
   22c08:	ldr	r0, [fp, #4]
   22c0c:	bl	2042c <__assert_fail@plt+0xf2d4>
   22c10:	str	r0, [fp, #-48]	; 0xffffffd0
   22c14:	ldr	r1, [fp, #4]
   22c18:	ldr	r0, [fp, #-128]	; 0xffffff80
   22c1c:	bl	20700 <__assert_fail@plt+0xf5a8>
   22c20:	ldr	r3, [fp, #-132]	; 0xffffff7c
   22c24:	cmp	r3, #0
   22c28:	beq	22c38 <__assert_fail@plt+0x11ae0>
   22c2c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   22c30:	mov	r2, #0
   22c34:	str	r2, [r3, #4]
   22c38:	ldr	r3, [fp, #-136]	; 0xffffff78
   22c3c:	cmp	r3, #0
   22c40:	beq	23290 <__assert_fail@plt+0x12138>
   22c44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22c48:	ldr	r0, [fp, #-136]	; 0xffffff78
   22c4c:	bl	1f4e8 <__assert_fail@plt+0xe390>
   22c50:	b	23290 <__assert_fail@plt+0x12138>
   22c54:	ldr	r3, [fp, #4]
   22c58:	ldr	r3, [r3, #4]
   22c5c:	cmp	r3, #0
   22c60:	bne	22cb0 <__assert_fail@plt+0x11b58>
   22c64:	ldr	r0, [fp, #-140]	; 0xffffff74
   22c68:	bl	2042c <__assert_fail@plt+0xf2d4>
   22c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   22c70:	ldr	r1, [fp, #-140]	; 0xffffff74
   22c74:	ldr	r0, [fp, #-128]	; 0xffffff80
   22c78:	bl	20700 <__assert_fail@plt+0xf5a8>
   22c7c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   22c80:	cmp	r3, #0
   22c84:	beq	22c94 <__assert_fail@plt+0x11b3c>
   22c88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22c8c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   22c90:	bl	1f4e8 <__assert_fail@plt+0xe390>
   22c94:	ldr	r3, [fp, #-136]	; 0xffffff78
   22c98:	cmp	r3, #0
   22c9c:	beq	23298 <__assert_fail@plt+0x12140>
   22ca0:	ldr	r3, [fp, #-136]	; 0xffffff78
   22ca4:	mov	r2, #0
   22ca8:	str	r2, [r3, #4]
   22cac:	b	23298 <__assert_fail@plt+0x12140>
   22cb0:	sub	r3, fp, #60	; 0x3c
   22cb4:	mov	r0, r3
   22cb8:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22cbc:	sub	r3, fp, #72	; 0x48
   22cc0:	mov	r0, r3
   22cc4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22cc8:	sub	r3, fp, #84	; 0x54
   22ccc:	mov	r0, r3
   22cd0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22cd4:	sub	r3, fp, #96	; 0x60
   22cd8:	mov	r0, r3
   22cdc:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22ce0:	sub	r3, fp, #108	; 0x6c
   22ce4:	mov	r0, r3
   22ce8:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22cec:	sub	r3, fp, #120	; 0x78
   22cf0:	mov	r0, r3
   22cf4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   22cf8:	sub	r3, fp, #60	; 0x3c
   22cfc:	ldr	r1, [fp, #-140]	; 0xffffff74
   22d00:	mov	r0, r3
   22d04:	bl	20700 <__assert_fail@plt+0xf5a8>
   22d08:	sub	r3, fp, #60	; 0x3c
   22d0c:	mov	r0, r3
   22d10:	bl	228f4 <__assert_fail@plt+0x1179c>
   22d14:	str	r0, [fp, #-8]
   22d18:	sub	r3, fp, #72	; 0x48
   22d1c:	ldr	r1, [fp, #4]
   22d20:	mov	r0, r3
   22d24:	bl	20700 <__assert_fail@plt+0xf5a8>
   22d28:	sub	r3, fp, #72	; 0x48
   22d2c:	mov	r0, r3
   22d30:	bl	228f4 <__assert_fail@plt+0x1179c>
   22d34:	str	r0, [fp, #-12]
   22d38:	ldr	r2, [fp, #-12]
   22d3c:	ldr	r3, [fp, #-8]
   22d40:	cmp	r2, r3
   22d44:	movcc	r3, r2
   22d48:	movcs	r3, r3
   22d4c:	str	r3, [fp, #-24]	; 0xffffffe8
   22d50:	ldr	r2, [fp, #-8]
   22d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d58:	sub	r3, r2, r3
   22d5c:	str	r3, [fp, #-8]
   22d60:	ldr	r2, [fp, #-12]
   22d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22d68:	sub	r3, r2, r3
   22d6c:	str	r3, [fp, #-12]
   22d70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22d74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22d78:	cmp	r2, r3
   22d7c:	bge	22ddc <__assert_fail@plt+0x11c84>
   22d80:	sub	r2, fp, #72	; 0x48
   22d84:	sub	r3, fp, #60	; 0x3c
   22d88:	mov	r1, r2
   22d8c:	mov	r0, r3
   22d90:	bl	20784 <__assert_fail@plt+0xf62c>
   22d94:	ldr	r3, [fp, #-140]	; 0xffffff74
   22d98:	str	r3, [fp, #-28]	; 0xffffffe4
   22d9c:	ldr	r3, [fp, #4]
   22da0:	str	r3, [fp, #-140]	; 0xffffff74
   22da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22da8:	str	r3, [fp, #4]
   22dac:	ldr	r3, [fp, #-132]	; 0xffffff7c
   22db0:	str	r3, [fp, #-32]	; 0xffffffe0
   22db4:	ldr	r3, [fp, #-136]	; 0xffffff78
   22db8:	str	r3, [fp, #-132]	; 0xffffff7c
   22dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22dc0:	str	r3, [fp, #-136]	; 0xffffff78
   22dc4:	ldr	r3, [fp, #-8]
   22dc8:	str	r3, [fp, #-36]	; 0xffffffdc
   22dcc:	ldr	r3, [fp, #-12]
   22dd0:	str	r3, [fp, #-8]
   22dd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22dd8:	str	r3, [fp, #-12]
   22ddc:	sub	r3, fp, #72	; 0x48
   22de0:	sub	r2, fp, #60	; 0x3c
   22de4:	sub	r1, fp, #60	; 0x3c
   22de8:	sub	r0, fp, #120	; 0x78
   22dec:	bl	2171c <__assert_fail@plt+0x105c4>
   22df0:	sub	r1, fp, #120	; 0x78
   22df4:	sub	r3, fp, #120	; 0x78
   22df8:	ldr	r2, [fp, #-8]
   22dfc:	mov	r0, r3
   22e00:	bl	20f68 <__assert_fail@plt+0xfe10>
   22e04:	sub	r3, fp, #96	; 0x60
   22e08:	ldr	r1, [fp, #-12]
   22e0c:	mov	r0, r3
   22e10:	bl	2535c <__assert_fail@plt+0x14204>
   22e14:	ldr	r2, [fp, #-8]
   22e18:	ldr	r3, [fp, #-12]
   22e1c:	add	r3, r2, r3
   22e20:	str	r3, [fp, #-16]
   22e24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22e28:	cmp	r3, #0
   22e2c:	ble	22f9c <__assert_fail@plt+0x11e44>
   22e30:	sub	r3, fp, #60	; 0x3c
   22e34:	mov	r0, r3
   22e38:	bl	228f4 <__assert_fail@plt+0x1179c>
   22e3c:	str	r0, [fp, #-20]	; 0xffffffec
   22e40:	ldr	r2, [fp, #-8]
   22e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   22e48:	add	r2, r2, r3
   22e4c:	sub	r3, fp, #108	; 0x6c
   22e50:	mov	r1, r2
   22e54:	mov	r0, r3
   22e58:	bl	2535c <__assert_fail@plt+0x14204>
   22e5c:	ldr	r2, [fp, #-16]
   22e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   22e64:	add	r3, r2, r3
   22e68:	str	r3, [fp, #-16]
   22e6c:	sub	r2, fp, #72	; 0x48
   22e70:	sub	r3, fp, #60	; 0x3c
   22e74:	mov	r1, r2
   22e78:	mov	r0, r3
   22e7c:	bl	2054c <__assert_fail@plt+0xf3f4>
   22e80:	str	r0, [fp, #-40]	; 0xffffffd8
   22e84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22e88:	cmp	r3, #0
   22e8c:	beq	22fb0 <__assert_fail@plt+0x11e58>
   22e90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22e94:	cmp	r3, #0
   22e98:	bge	22f14 <__assert_fail@plt+0x11dbc>
   22e9c:	sub	r2, fp, #60	; 0x3c
   22ea0:	sub	r1, fp, #72	; 0x48
   22ea4:	sub	r3, fp, #72	; 0x48
   22ea8:	mov	r0, r3
   22eac:	bl	20c6c <__assert_fail@plt+0xfb14>
   22eb0:	sub	r2, fp, #120	; 0x78
   22eb4:	sub	r1, fp, #108	; 0x6c
   22eb8:	sub	r3, fp, #108	; 0x6c
   22ebc:	mov	r0, r3
   22ec0:	bl	20bd8 <__assert_fail@plt+0xfa80>
   22ec4:	sub	r2, fp, #96	; 0x60
   22ec8:	sub	r1, fp, #84	; 0x54
   22ecc:	sub	r3, fp, #84	; 0x54
   22ed0:	mov	r0, r3
   22ed4:	bl	20bd8 <__assert_fail@plt+0xfa80>
   22ed8:	sub	r3, fp, #72	; 0x48
   22edc:	mov	r0, r3
   22ee0:	bl	228f4 <__assert_fail@plt+0x1179c>
   22ee4:	str	r0, [fp, #-20]	; 0xffffffec
   22ee8:	sub	r1, fp, #120	; 0x78
   22eec:	sub	r3, fp, #120	; 0x78
   22ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   22ef4:	mov	r0, r3
   22ef8:	bl	20f68 <__assert_fail@plt+0xfe10>
   22efc:	sub	r1, fp, #96	; 0x60
   22f00:	sub	r3, fp, #96	; 0x60
   22f04:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f08:	mov	r0, r3
   22f0c:	bl	20f68 <__assert_fail@plt+0xfe10>
   22f10:	b	22f88 <__assert_fail@plt+0x11e30>
   22f14:	sub	r2, fp, #72	; 0x48
   22f18:	sub	r1, fp, #60	; 0x3c
   22f1c:	sub	r3, fp, #60	; 0x3c
   22f20:	mov	r0, r3
   22f24:	bl	20c6c <__assert_fail@plt+0xfb14>
   22f28:	sub	r2, fp, #120	; 0x78
   22f2c:	sub	r1, fp, #108	; 0x6c
   22f30:	sub	r3, fp, #120	; 0x78
   22f34:	mov	r0, r3
   22f38:	bl	20bd8 <__assert_fail@plt+0xfa80>
   22f3c:	sub	r2, fp, #96	; 0x60
   22f40:	sub	r1, fp, #84	; 0x54
   22f44:	sub	r3, fp, #96	; 0x60
   22f48:	mov	r0, r3
   22f4c:	bl	20bd8 <__assert_fail@plt+0xfa80>
   22f50:	sub	r3, fp, #60	; 0x3c
   22f54:	mov	r0, r3
   22f58:	bl	228f4 <__assert_fail@plt+0x1179c>
   22f5c:	str	r0, [fp, #-20]	; 0xffffffec
   22f60:	sub	r1, fp, #108	; 0x6c
   22f64:	sub	r3, fp, #108	; 0x6c
   22f68:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f6c:	mov	r0, r3
   22f70:	bl	20f68 <__assert_fail@plt+0xfe10>
   22f74:	sub	r1, fp, #84	; 0x54
   22f78:	sub	r3, fp, #84	; 0x54
   22f7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22f80:	mov	r0, r3
   22f84:	bl	20f68 <__assert_fail@plt+0xfe10>
   22f88:	ldr	r2, [fp, #-16]
   22f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22f90:	add	r3, r2, r3
   22f94:	str	r3, [fp, #-16]
   22f98:	b	22e6c <__assert_fail@plt+0x11d14>
   22f9c:	sub	r3, fp, #108	; 0x6c
   22fa0:	ldr	r1, [fp, #-8]
   22fa4:	mov	r0, r3
   22fa8:	bl	2535c <__assert_fail@plt+0x14204>
   22fac:	b	22fb4 <__assert_fail@plt+0x11e5c>
   22fb0:	nop			; (mov r0, r0)
   22fb4:	sub	r1, fp, #72	; 0x48
   22fb8:	sub	r3, fp, #72	; 0x48
   22fbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22fc0:	mov	r0, r3
   22fc4:	bl	20f68 <__assert_fail@plt+0xfe10>
   22fc8:	sub	r2, fp, #84	; 0x54
   22fcc:	sub	r3, fp, #84	; 0x54
   22fd0:	mov	r1, r2
   22fd4:	mov	r0, r3
   22fd8:	bl	20744 <__assert_fail@plt+0xf5ec>
   22fdc:	sub	r2, fp, #72	; 0x48
   22fe0:	sub	r3, fp, #96	; 0x60
   22fe4:	ldr	r1, [fp, #4]
   22fe8:	mov	r0, r3
   22fec:	bl	21ff0 <__assert_fail@plt+0x10e98>
   22ff0:	sub	r2, fp, #96	; 0x60
   22ff4:	sub	r3, fp, #96	; 0x60
   22ff8:	mov	r1, r2
   22ffc:	mov	r0, r3
   23000:	bl	20700 <__assert_fail@plt+0xf5a8>
   23004:	sub	r2, fp, #72	; 0x48
   23008:	sub	r3, fp, #120	; 0x78
   2300c:	ldr	r1, [fp, #-140]	; 0xffffff74
   23010:	mov	r0, r3
   23014:	bl	21ff0 <__assert_fail@plt+0x10e98>
   23018:	sub	r2, fp, #120	; 0x78
   2301c:	sub	r3, fp, #120	; 0x78
   23020:	mov	r1, r2
   23024:	mov	r0, r3
   23028:	bl	20700 <__assert_fail@plt+0xf5a8>
   2302c:	b	23144 <__assert_fail@plt+0x11fec>
   23030:	ldr	r3, [fp, #-80]	; 0xffffffb0
   23034:	cmp	r3, #0
   23038:	movne	r3, #1
   2303c:	moveq	r3, #0
   23040:	uxtb	r3, r3
   23044:	mov	r2, r3
   23048:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2304c:	ldr	r3, [r3]
   23050:	and	r3, r3, r2
   23054:	cmp	r3, #0
   23058:	bne	23088 <__assert_fail@plt+0x11f30>
   2305c:	ldr	r3, [fp, #-104]	; 0xffffff98
   23060:	cmp	r3, #0
   23064:	movne	r3, #1
   23068:	moveq	r3, #0
   2306c:	uxtb	r3, r3
   23070:	mov	r2, r3
   23074:	ldr	r3, [fp, #-100]	; 0xffffff9c
   23078:	ldr	r3, [r3]
   2307c:	and	r3, r3, r2
   23080:	cmp	r3, #0
   23084:	beq	230b0 <__assert_fail@plt+0x11f58>
   23088:	sub	r2, fp, #96	; 0x60
   2308c:	sub	r1, fp, #84	; 0x54
   23090:	sub	r3, fp, #84	; 0x54
   23094:	mov	r0, r3
   23098:	bl	20c6c <__assert_fail@plt+0xfb14>
   2309c:	sub	r2, fp, #120	; 0x78
   230a0:	sub	r1, fp, #108	; 0x6c
   230a4:	sub	r3, fp, #108	; 0x6c
   230a8:	mov	r0, r3
   230ac:	bl	20bd8 <__assert_fail@plt+0xfa80>
   230b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   230b4:	cmp	r3, #0
   230b8:	movne	r3, #1
   230bc:	moveq	r3, #0
   230c0:	uxtb	r3, r3
   230c4:	mov	r2, r3
   230c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   230cc:	ldr	r3, [r3]
   230d0:	and	r3, r3, r2
   230d4:	cmp	r3, #0
   230d8:	bne	23108 <__assert_fail@plt+0x11fb0>
   230dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   230e0:	cmp	r3, #0
   230e4:	movne	r3, #1
   230e8:	moveq	r3, #0
   230ec:	uxtb	r3, r3
   230f0:	mov	r2, r3
   230f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   230f8:	ldr	r3, [r3]
   230fc:	and	r3, r3, r2
   23100:	cmp	r3, #0
   23104:	beq	2311c <__assert_fail@plt+0x11fc4>
   23108:	ldr	r3, [pc, #404]	; 232a4 <__assert_fail@plt+0x1214c>
   2310c:	ldr	r2, [pc, #404]	; 232a8 <__assert_fail@plt+0x12150>
   23110:	ldr	r1, [pc, #404]	; 232ac <__assert_fail@plt+0x12154>
   23114:	ldr	r0, [pc, #404]	; 232b0 <__assert_fail@plt+0x12158>
   23118:	bl	11158 <__assert_fail@plt>
   2311c:	sub	r1, fp, #84	; 0x54
   23120:	sub	r3, fp, #84	; 0x54
   23124:	mov	r2, #1
   23128:	mov	r0, r3
   2312c:	bl	21f10 <__assert_fail@plt+0x10db8>
   23130:	sub	r1, fp, #108	; 0x6c
   23134:	sub	r3, fp, #108	; 0x6c
   23138:	mov	r2, #1
   2313c:	mov	r0, r3
   23140:	bl	21f10 <__assert_fail@plt+0x10db8>
   23144:	ldr	r3, [fp, #-16]
   23148:	sub	r2, r3, #1
   2314c:	str	r2, [fp, #-16]
   23150:	cmp	r3, #0
   23154:	bne	23030 <__assert_fail@plt+0x11ed8>
   23158:	sub	r2, fp, #96	; 0x60
   2315c:	sub	r1, fp, #84	; 0x54
   23160:	sub	r3, fp, #96	; 0x60
   23164:	mov	r0, r3
   23168:	bl	20bd8 <__assert_fail@plt+0xfa80>
   2316c:	sub	r2, fp, #96	; 0x60
   23170:	sub	r3, fp, #84	; 0x54
   23174:	mov	r1, r2
   23178:	mov	r0, r3
   2317c:	bl	206a8 <__assert_fail@plt+0xf550>
   23180:	mov	r3, r0
   23184:	cmp	r3, #0
   23188:	ble	231b4 <__assert_fail@plt+0x1205c>
   2318c:	sub	r2, fp, #96	; 0x60
   23190:	sub	r3, fp, #84	; 0x54
   23194:	mov	r1, r2
   23198:	mov	r0, r3
   2319c:	bl	20784 <__assert_fail@plt+0xf62c>
   231a0:	sub	r2, fp, #120	; 0x78
   231a4:	sub	r1, fp, #108	; 0x6c
   231a8:	sub	r3, fp, #108	; 0x6c
   231ac:	mov	r0, r3
   231b0:	bl	20c6c <__assert_fail@plt+0xfb14>
   231b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   231b8:	ldr	r3, [r3, #4]
   231bc:	cmp	r3, #0
   231c0:	bge	231d8 <__assert_fail@plt+0x12080>
   231c4:	sub	r2, fp, #84	; 0x54
   231c8:	sub	r3, fp, #84	; 0x54
   231cc:	mov	r1, r2
   231d0:	mov	r0, r3
   231d4:	bl	20744 <__assert_fail@plt+0xf5ec>
   231d8:	ldr	r3, [fp, #4]
   231dc:	ldr	r3, [r3, #4]
   231e0:	cmp	r3, #0
   231e4:	bge	231fc <__assert_fail@plt+0x120a4>
   231e8:	sub	r2, fp, #108	; 0x6c
   231ec:	sub	r3, fp, #108	; 0x6c
   231f0:	mov	r1, r2
   231f4:	mov	r0, r3
   231f8:	bl	20744 <__assert_fail@plt+0xf5ec>
   231fc:	sub	r3, fp, #72	; 0x48
   23200:	mov	r1, r3
   23204:	ldr	r0, [fp, #-128]	; 0xffffff80
   23208:	bl	20784 <__assert_fail@plt+0xf62c>
   2320c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   23210:	cmp	r3, #0
   23214:	beq	23228 <__assert_fail@plt+0x120d0>
   23218:	sub	r3, fp, #84	; 0x54
   2321c:	mov	r1, r3
   23220:	ldr	r0, [fp, #-132]	; 0xffffff7c
   23224:	bl	20784 <__assert_fail@plt+0xf62c>
   23228:	ldr	r3, [fp, #-136]	; 0xffffff78
   2322c:	cmp	r3, #0
   23230:	beq	23244 <__assert_fail@plt+0x120ec>
   23234:	sub	r3, fp, #108	; 0x6c
   23238:	mov	r1, r3
   2323c:	ldr	r0, [fp, #-136]	; 0xffffff78
   23240:	bl	20784 <__assert_fail@plt+0xf62c>
   23244:	sub	r3, fp, #60	; 0x3c
   23248:	mov	r0, r3
   2324c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23250:	sub	r3, fp, #72	; 0x48
   23254:	mov	r0, r3
   23258:	bl	1f3e0 <__assert_fail@plt+0xe288>
   2325c:	sub	r3, fp, #84	; 0x54
   23260:	mov	r0, r3
   23264:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23268:	sub	r3, fp, #96	; 0x60
   2326c:	mov	r0, r3
   23270:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23274:	sub	r3, fp, #108	; 0x6c
   23278:	mov	r0, r3
   2327c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23280:	sub	r3, fp, #120	; 0x78
   23284:	mov	r0, r3
   23288:	bl	1f3e0 <__assert_fail@plt+0xe288>
   2328c:	b	2329c <__assert_fail@plt+0x12144>
   23290:	nop			; (mov r0, r0)
   23294:	b	2329c <__assert_fail@plt+0x12144>
   23298:	nop			; (mov r0, r0)
   2329c:	sub	sp, fp, #4
   232a0:	pop	{fp, pc}
   232a4:	andeq	r4, r3, r4, asr #3
   232a8:	andeq	r0, r0, r6, lsl #23
   232ac:	andeq	r3, r3, r0, asr #19
   232b0:	andeq	r3, r3, r8, lsr #25
   232b4:	push	{fp, lr}
   232b8:	add	fp, sp, #4
   232bc:	sub	sp, sp, #32
   232c0:	str	r0, [fp, #-24]	; 0xffffffe8
   232c4:	str	r1, [fp, #-28]	; 0xffffffe4
   232c8:	str	r2, [fp, #-32]	; 0xffffffe0
   232cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   232d0:	ldr	r3, [r3, #4]
   232d4:	cmp	r3, #0
   232d8:	beq	232ec <__assert_fail@plt+0x12194>
   232dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232e0:	ldr	r3, [r3, #4]
   232e4:	cmp	r3, #0
   232e8:	bne	232fc <__assert_fail@plt+0x121a4>
   232ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   232f0:	mov	r2, #0
   232f4:	str	r2, [r3, #4]
   232f8:	b	2335c <__assert_fail@plt+0x12204>
   232fc:	sub	r3, fp, #16
   23300:	mov	r0, r3
   23304:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23308:	sub	r3, fp, #16
   2330c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23314:	mov	r0, r3
   23318:	bl	22970 <__assert_fail@plt+0x11818>
   2331c:	sub	r2, fp, #16
   23320:	sub	r3, fp, #16
   23324:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23328:	mov	r0, r3
   2332c:	bl	21ff0 <__assert_fail@plt+0x10e98>
   23330:	sub	r3, fp, #16
   23334:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23338:	mov	r1, r3
   2333c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23340:	bl	20dc0 <__assert_fail@plt+0xfc68>
   23344:	sub	r3, fp, #16
   23348:	mov	r0, r3
   2334c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23358:	bl	20700 <__assert_fail@plt+0xf5a8>
   2335c:	sub	sp, fp, #4
   23360:	pop	{fp, pc}
   23364:	push	{fp, lr}
   23368:	add	fp, sp, #4
   2336c:	sub	sp, sp, #16
   23370:	str	r0, [fp, #-8]
   23374:	str	r1, [fp, #-12]
   23378:	str	r2, [fp, #-16]
   2337c:	ldr	r3, [fp, #-16]
   23380:	cmp	r3, #0
   23384:	beq	23398 <__assert_fail@plt+0x12240>
   23388:	ldr	r3, [fp, #-12]
   2338c:	ldr	r3, [r3, #4]
   23390:	cmp	r3, #0
   23394:	bne	233a8 <__assert_fail@plt+0x12250>
   23398:	ldr	r3, [fp, #-8]
   2339c:	mov	r2, #0
   233a0:	str	r2, [r3, #4]
   233a4:	b	233ec <__assert_fail@plt+0x12294>
   233a8:	ldr	r2, [fp, #-16]
   233ac:	ldr	r1, [fp, #-12]
   233b0:	mov	r0, #0
   233b4:	bl	22864 <__assert_fail@plt+0x1170c>
   233b8:	mov	r3, r0
   233bc:	mov	r1, r3
   233c0:	ldr	r0, [fp, #-16]
   233c4:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   233c8:	mov	r3, r0
   233cc:	str	r3, [fp, #-16]
   233d0:	ldr	r2, [fp, #-16]
   233d4:	ldr	r1, [fp, #-12]
   233d8:	ldr	r0, [fp, #-8]
   233dc:	bl	20d6c <__assert_fail@plt+0xfc14>
   233e0:	ldr	r1, [fp, #-8]
   233e4:	ldr	r0, [fp, #-8]
   233e8:	bl	20700 <__assert_fail@plt+0xf5a8>
   233ec:	sub	sp, fp, #4
   233f0:	pop	{fp, pc}
   233f4:	push	{fp, lr}
   233f8:	add	fp, sp, #4
   233fc:	sub	sp, sp, #56	; 0x38
   23400:	str	r0, [fp, #-40]	; 0xffffffd8
   23404:	str	r1, [fp, #-44]	; 0xffffffd4
   23408:	str	r2, [fp, #-48]	; 0xffffffd0
   2340c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23410:	ldr	r3, [r3, #4]
   23414:	cmp	r3, #0
   23418:	beq	23434 <__assert_fail@plt+0x122dc>
   2341c:	mov	r1, #1
   23420:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23424:	bl	20608 <__assert_fail@plt+0xf4b0>
   23428:	mov	r3, r0
   2342c:	cmp	r3, #0
   23430:	bgt	2343c <__assert_fail@plt+0x122e4>
   23434:	mov	r3, #0
   23438:	b	23518 <__assert_fail@plt+0x123c0>
   2343c:	sub	r3, fp, #20
   23440:	mov	r0, r3
   23444:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23448:	sub	r3, fp, #32
   2344c:	mov	r0, r3
   23450:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23454:	sub	r1, fp, #32
   23458:	sub	r0, fp, #20
   2345c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23460:	str	r3, [sp]
   23464:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23468:	mov	r2, #0
   2346c:	bl	22bdc <__assert_fail@plt+0x11a84>
   23470:	sub	r3, fp, #20
   23474:	mov	r1, #1
   23478:	mov	r0, r3
   2347c:	bl	204fc <__assert_fail@plt+0xf3a4>
   23480:	mov	r3, r0
   23484:	cmp	r3, #0
   23488:	moveq	r3, #1
   2348c:	movne	r3, #0
   23490:	uxtb	r3, r3
   23494:	str	r3, [fp, #-8]
   23498:	ldr	r3, [fp, #-8]
   2349c:	cmp	r3, #0
   234a0:	beq	234fc <__assert_fail@plt+0x123a4>
   234a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   234a8:	cmp	r3, #0
   234ac:	bge	234ec <__assert_fail@plt+0x12394>
   234b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   234b4:	ldr	r3, [r3, #4]
   234b8:	cmp	r3, #0
   234bc:	blt	234d8 <__assert_fail@plt+0x12380>
   234c0:	sub	r1, fp, #32
   234c4:	sub	r3, fp, #32
   234c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   234cc:	mov	r0, r3
   234d0:	bl	20bd8 <__assert_fail@plt+0xfa80>
   234d4:	b	234ec <__assert_fail@plt+0x12394>
   234d8:	sub	r1, fp, #32
   234dc:	sub	r3, fp, #32
   234e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   234e4:	mov	r0, r3
   234e8:	bl	20c6c <__assert_fail@plt+0xfb14>
   234ec:	sub	r3, fp, #32
   234f0:	mov	r1, r3
   234f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   234f8:	bl	20784 <__assert_fail@plt+0xf62c>
   234fc:	sub	r3, fp, #20
   23500:	mov	r0, r3
   23504:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23508:	sub	r3, fp, #32
   2350c:	mov	r0, r3
   23510:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23514:	ldr	r3, [fp, #-8]
   23518:	mov	r0, r3
   2351c:	sub	sp, fp, #4
   23520:	pop	{fp, pc}
   23524:	push	{fp, lr}
   23528:	add	fp, sp, #4
   2352c:	sub	sp, sp, #32
   23530:	str	r0, [fp, #-24]	; 0xffffffe8
   23534:	str	r1, [fp, #-28]	; 0xffffffe4
   23538:	str	r2, [fp, #-32]	; 0xffffffe0
   2353c:	sub	r3, fp, #20
   23540:	mov	r1, #1
   23544:	mov	r0, r3
   23548:	bl	1f6bc <__assert_fail@plt+0xe564>
   2354c:	mov	r3, #-2147483648	; 0x80000000
   23550:	str	r3, [fp, #-8]
   23554:	sub	r2, fp, #20
   23558:	sub	r1, fp, #20
   2355c:	sub	r3, fp, #20
   23560:	mov	r0, r3
   23564:	bl	20dc0 <__assert_fail@plt+0xfc68>
   23568:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2356c:	ldr	r3, [fp, #-8]
   23570:	and	r3, r3, r2
   23574:	cmp	r3, #0
   23578:	beq	23590 <__assert_fail@plt+0x12438>
   2357c:	sub	r1, fp, #20
   23580:	sub	r3, fp, #20
   23584:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23588:	mov	r0, r3
   2358c:	bl	20dc0 <__assert_fail@plt+0xfc68>
   23590:	ldr	r3, [fp, #-8]
   23594:	lsr	r3, r3, #1
   23598:	str	r3, [fp, #-8]
   2359c:	ldr	r3, [fp, #-8]
   235a0:	cmp	r3, #0
   235a4:	bne	23554 <__assert_fail@plt+0x123fc>
   235a8:	sub	r3, fp, #20
   235ac:	mov	r1, r3
   235b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   235b4:	bl	20784 <__assert_fail@plt+0xf62c>
   235b8:	sub	r3, fp, #20
   235bc:	mov	r0, r3
   235c0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   235c4:	nop			; (mov r0, r0)
   235c8:	sub	sp, fp, #4
   235cc:	pop	{fp, pc}
   235d0:	push	{fp, lr}
   235d4:	add	fp, sp, #4
   235d8:	sub	sp, sp, #32
   235dc:	str	r0, [fp, #-24]	; 0xffffffe8
   235e0:	str	r1, [fp, #-28]	; 0xffffffe4
   235e4:	str	r2, [fp, #-32]	; 0xffffffe0
   235e8:	sub	r3, fp, #16
   235ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   235f0:	mov	r0, r3
   235f4:	bl	1f6bc <__assert_fail@plt+0xe564>
   235f8:	sub	r3, fp, #16
   235fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23600:	mov	r1, r3
   23604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23608:	bl	23524 <__assert_fail@plt+0x123cc>
   2360c:	sub	r3, fp, #16
   23610:	mov	r0, r3
   23614:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23618:	nop			; (mov r0, r0)
   2361c:	sub	sp, fp, #4
   23620:	pop	{fp, pc}
   23624:	push	{fp, lr}
   23628:	add	fp, sp, #4
   2362c:	sub	sp, sp, #112	; 0x70
   23630:	str	r0, [fp, #-96]	; 0xffffffa0
   23634:	str	r1, [fp, #-100]	; 0xffffff9c
   23638:	str	r2, [fp, #-104]	; 0xffffff98
   2363c:	str	r3, [fp, #-108]	; 0xffffff94
   23640:	mov	r3, #0
   23644:	str	r3, [fp, #-16]
   23648:	ldr	r3, [fp, #-104]	; 0xffffff98
   2364c:	ldr	r3, [r3, #4]
   23650:	cmp	r3, #0
   23654:	rsblt	r3, r3, #0
   23658:	str	r3, [fp, #-8]
   2365c:	ldr	r3, [fp, #-108]	; 0xffffff94
   23660:	ldr	r3, [r3, #4]
   23664:	cmp	r3, #0
   23668:	rsblt	r3, r3, #0
   2366c:	str	r3, [fp, #-28]	; 0xffffffe4
   23670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23674:	cmp	r3, #0
   23678:	bne	23684 <__assert_fail@plt+0x1252c>
   2367c:	ldr	r0, [pc, #876]	; 239f0 <__assert_fail@plt+0x12898>
   23680:	bl	1af58 <__assert_fail@plt+0x9e00>
   23684:	ldr	r3, [fp, #-8]
   23688:	cmp	r3, #0
   2368c:	bne	236a0 <__assert_fail@plt+0x12548>
   23690:	mov	r1, #1
   23694:	ldr	r0, [fp, #-96]	; 0xffffffa0
   23698:	bl	1f56c <__assert_fail@plt+0xe414>
   2369c:	b	239e8 <__assert_fail@plt+0x12890>
   236a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   236a4:	ldr	r3, [r3, #8]
   236a8:	str	r3, [fp, #-12]
   236ac:	sub	r3, fp, #88	; 0x58
   236b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   236b4:	ldr	r1, [fp, #-12]
   236b8:	mov	r0, r3
   236bc:	bl	1d02c <__assert_fail@plt+0xbed4>
   236c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   236c4:	str	r3, [fp, #-32]	; 0xffffffe0
   236c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   236cc:	cmp	r3, #0
   236d0:	beq	23728 <__assert_fail@plt+0x125d0>
   236d4:	mov	r3, #0
   236d8:	str	r3, [fp, #-88]	; 0xffffffa8
   236dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   236e0:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   236e4:	str	r0, [fp, #-16]
   236e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   236ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   236f0:	ldr	r1, [fp, #-12]
   236f4:	ldr	r0, [fp, #-16]
   236f8:	bl	1c32c <__assert_fail@plt+0xb1d4>
   236fc:	str	r0, [fp, #-36]	; 0xffffffdc
   23700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23704:	cmp	r3, #0
   23708:	beq	23720 <__assert_fail@plt+0x125c8>
   2370c:	ldr	r3, [pc, #736]	; 239f4 <__assert_fail@plt+0x1289c>
   23710:	ldr	r2, [pc, #736]	; 239f8 <__assert_fail@plt+0x128a0>
   23714:	ldr	r1, [pc, #736]	; 239fc <__assert_fail@plt+0x128a4>
   23718:	ldr	r0, [pc, #736]	; 23a00 <__assert_fail@plt+0x128a8>
   2371c:	bl	11158 <__assert_fail@plt>
   23720:	ldr	r3, [fp, #-16]
   23724:	str	r3, [fp, #-12]
   23728:	sub	r3, fp, #72	; 0x48
   2372c:	mov	r0, r3
   23730:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23734:	ldr	r3, [fp, #-104]	; 0xffffff98
   23738:	ldr	r3, [r3, #4]
   2373c:	cmp	r3, #0
   23740:	bge	23770 <__assert_fail@plt+0x12618>
   23744:	sub	r3, fp, #72	; 0x48
   23748:	ldr	r2, [fp, #-108]	; 0xffffff94
   2374c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   23750:	mov	r0, r3
   23754:	bl	233f4 <__assert_fail@plt+0x1229c>
   23758:	mov	r3, r0
   2375c:	cmp	r3, #0
   23760:	bne	23864 <__assert_fail@plt+0x1270c>
   23764:	ldr	r0, [pc, #664]	; 23a04 <__assert_fail@plt+0x128ac>
   23768:	bl	1af58 <__assert_fail@plt+0x9e00>
   2376c:	b	23864 <__assert_fail@plt+0x1270c>
   23770:	sub	r3, fp, #72	; 0x48
   23774:	ldr	r1, [fp, #-100]	; 0xffffff9c
   23778:	mov	r0, r3
   2377c:	bl	20700 <__assert_fail@plt+0xf5a8>
   23780:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23784:	str	r3, [fp, #-20]	; 0xffffffec
   23788:	ldr	r2, [fp, #-20]	; 0xffffffec
   2378c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23790:	cmp	r2, r3
   23794:	blt	237c4 <__assert_fail@plt+0x1266c>
   23798:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2379c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   237a0:	sub	r3, fp, #88	; 0x58
   237a4:	str	r3, [sp, #4]
   237a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   237ac:	str	r3, [sp]
   237b0:	ldr	r3, [fp, #-12]
   237b4:	mov	r0, #0
   237b8:	bl	1e210 <__assert_fail@plt+0xd0b8>
   237bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   237c0:	str	r3, [fp, #-20]	; 0xffffffec
   237c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   237c8:	ldr	r3, [r3, #4]
   237cc:	cmp	r3, #0
   237d0:	bge	2384c <__assert_fail@plt+0x126f4>
   237d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   237d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   237dc:	cmp	r2, r3
   237e0:	bge	237fc <__assert_fail@plt+0x126a4>
   237e4:	sub	r3, fp, #72	; 0x48
   237e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   237ec:	mov	r0, r3
   237f0:	bl	1f428 <__assert_fail@plt+0xe2d0>
   237f4:	mov	r3, r0
   237f8:	b	23800 <__assert_fail@plt+0x126a8>
   237fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   23800:	str	r3, [fp, #-40]	; 0xffffffd8
   23804:	ldr	r3, [fp, #-20]	; 0xffffffec
   23808:	str	r3, [sp]
   2380c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23810:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23814:	ldr	r1, [fp, #-12]
   23818:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2381c:	bl	1ba18 <__assert_fail@plt+0xa8c0>
   23820:	str	r0, [fp, #-44]	; 0xffffffd4
   23824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23828:	cmp	r3, #0
   2382c:	beq	23844 <__assert_fail@plt+0x126ec>
   23830:	ldr	r3, [pc, #444]	; 239f4 <__assert_fail@plt+0x1289c>
   23834:	ldr	r2, [pc, #460]	; 23a08 <__assert_fail@plt+0x128b0>
   23838:	ldr	r1, [pc, #444]	; 239fc <__assert_fail@plt+0x128a4>
   2383c:	ldr	r0, [pc, #444]	; 23a00 <__assert_fail@plt+0x128a8>
   23840:	bl	11158 <__assert_fail@plt>
   23844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23848:	str	r3, [fp, #-20]	; 0xffffffec
   2384c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   23850:	ldr	r1, [fp, #-20]	; 0xffffffec
   23854:	mov	r0, r3
   23858:	bl	1b4a0 <__assert_fail@plt+0xa348>
   2385c:	mov	r3, r0
   23860:	str	r3, [fp, #-68]	; 0xffffffbc
   23864:	sub	r3, fp, #60	; 0x3c
   23868:	mov	r1, #1
   2386c:	mov	r0, r3
   23870:	bl	1f6bc <__assert_fail@plt+0xe564>
   23874:	b	2393c <__assert_fail@plt+0x127e4>
   23878:	ldr	r3, [fp, #-104]	; 0xffffff98
   2387c:	ldr	r2, [r3, #8]
   23880:	ldr	r3, [fp, #-8]
   23884:	lsl	r3, r3, #2
   23888:	add	r3, r2, r3
   2388c:	ldr	r3, [r3]
   23890:	str	r3, [fp, #-48]	; 0xffffffd0
   23894:	mov	r3, #-2147483648	; 0x80000000
   23898:	str	r3, [fp, #-24]	; 0xffffffe8
   2389c:	sub	r2, fp, #60	; 0x3c
   238a0:	sub	r1, fp, #60	; 0x3c
   238a4:	sub	r3, fp, #60	; 0x3c
   238a8:	mov	r0, r3
   238ac:	bl	20dc0 <__assert_fail@plt+0xfc68>
   238b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   238b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238b8:	and	r3, r3, r2
   238bc:	cmp	r3, #0
   238c0:	beq	238d8 <__assert_fail@plt+0x12780>
   238c4:	sub	r2, fp, #72	; 0x48
   238c8:	sub	r1, fp, #60	; 0x3c
   238cc:	sub	r3, fp, #60	; 0x3c
   238d0:	mov	r0, r3
   238d4:	bl	20dc0 <__assert_fail@plt+0xfc68>
   238d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   238dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   238e0:	cmp	r2, r3
   238e4:	ble	23924 <__assert_fail@plt+0x127cc>
   238e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   238ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   238f0:	sub	r3, fp, #88	; 0x58
   238f4:	str	r3, [sp, #4]
   238f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   238fc:	str	r3, [sp]
   23900:	ldr	r3, [fp, #-12]
   23904:	mov	r0, #0
   23908:	bl	1e210 <__assert_fail@plt+0xd0b8>
   2390c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23910:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23914:	mov	r0, r3
   23918:	bl	1b4a0 <__assert_fail@plt+0xa348>
   2391c:	mov	r3, r0
   23920:	str	r3, [fp, #-56]	; 0xffffffc8
   23924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23928:	lsr	r3, r3, #1
   2392c:	str	r3, [fp, #-24]	; 0xffffffe8
   23930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23934:	cmp	r3, #0
   23938:	bne	2389c <__assert_fail@plt+0x12744>
   2393c:	ldr	r3, [fp, #-8]
   23940:	sub	r3, r3, #1
   23944:	str	r3, [fp, #-8]
   23948:	ldr	r3, [fp, #-8]
   2394c:	cmp	r3, #0
   23950:	bge	23878 <__assert_fail@plt+0x12720>
   23954:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2395c:	cmp	r2, r3
   23960:	blt	239a8 <__assert_fail@plt+0x12850>
   23964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23968:	str	r3, [fp, #-88]	; 0xffffffa8
   2396c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23970:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23974:	sub	r3, fp, #88	; 0x58
   23978:	str	r3, [sp, #4]
   2397c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23980:	str	r3, [sp]
   23984:	ldr	r3, [fp, #-12]
   23988:	mov	r0, #0
   2398c:	bl	1e210 <__assert_fail@plt+0xd0b8>
   23990:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23998:	mov	r0, r3
   2399c:	bl	1b4a0 <__assert_fail@plt+0xa348>
   239a0:	mov	r3, r0
   239a4:	str	r3, [fp, #-56]	; 0xffffffc8
   239a8:	ldr	r3, [fp, #-16]
   239ac:	cmp	r3, #0
   239b0:	beq	239c0 <__assert_fail@plt+0x12868>
   239b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   239b8:	ldr	r0, [fp, #-16]
   239bc:	bl	1b258 <__assert_fail@plt+0xa100>
   239c0:	sub	r3, fp, #60	; 0x3c
   239c4:	mov	r1, r3
   239c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   239cc:	bl	20784 <__assert_fail@plt+0xf62c>
   239d0:	sub	r3, fp, #60	; 0x3c
   239d4:	mov	r0, r3
   239d8:	bl	1f3e0 <__assert_fail@plt+0xe288>
   239dc:	sub	r3, fp, #72	; 0x48
   239e0:	mov	r0, r3
   239e4:	bl	1f3e0 <__assert_fail@plt+0xe288>
   239e8:	sub	sp, fp, #4
   239ec:	pop	{fp, pc}
   239f0:	andeq	r3, r3, ip, asr #25
   239f4:	ldrdeq	r4, [r3], -r0
   239f8:	andeq	r0, r0, ip, lsr #24
   239fc:	andeq	r3, r3, r0, asr #19
   23a00:	andeq	r3, r3, r8, ror #23
   23a04:	andeq	r3, r3, r4, ror #25
   23a08:	andeq	r0, r0, r9, asr #24
   23a0c:	push	{fp, lr}
   23a10:	add	fp, sp, #4
   23a14:	sub	sp, sp, #32
   23a18:	str	r0, [fp, #-24]	; 0xffffffe8
   23a1c:	str	r1, [fp, #-28]	; 0xffffffe4
   23a20:	str	r2, [fp, #-32]	; 0xffffffe0
   23a24:	str	r3, [fp, #-36]	; 0xffffffdc
   23a28:	sub	r3, fp, #16
   23a2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23a30:	mov	r0, r3
   23a34:	bl	1f6bc <__assert_fail@plt+0xe564>
   23a38:	sub	r2, fp, #16
   23a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23a48:	bl	23624 <__assert_fail@plt+0x124cc>
   23a4c:	sub	r3, fp, #16
   23a50:	mov	r0, r3
   23a54:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23a58:	nop			; (mov r0, r0)
   23a5c:	sub	sp, fp, #4
   23a60:	pop	{fp, pc}
   23a64:	push	{fp, lr}
   23a68:	add	fp, sp, #4
   23a6c:	sub	sp, sp, #64	; 0x40
   23a70:	str	r0, [fp, #-56]	; 0xffffffc8
   23a74:	str	r1, [fp, #-60]	; 0xffffffc4
   23a78:	str	r2, [fp, #-64]	; 0xffffffc0
   23a7c:	str	r3, [fp, #-68]	; 0xffffffbc
   23a80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   23a84:	ldr	r3, [r3, #4]
   23a88:	lsr	r3, r3, #31
   23a8c:	uxtb	r3, r3
   23a90:	str	r3, [fp, #-8]
   23a94:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23a98:	mvn	r2, r3
   23a9c:	ldr	r3, [fp, #-8]
   23aa0:	and	r3, r3, r2
   23aa4:	cmp	r3, #0
   23aa8:	beq	23ab4 <__assert_fail@plt+0x1295c>
   23aac:	ldr	r0, [pc, #644]	; 23d38 <__assert_fail@plt+0x12be0>
   23ab0:	bl	1af58 <__assert_fail@plt+0x9e00>
   23ab4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23ab8:	cmp	r3, #0
   23abc:	bne	23ac8 <__assert_fail@plt+0x12970>
   23ac0:	ldr	r0, [pc, #628]	; 23d3c <__assert_fail@plt+0x12be4>
   23ac4:	bl	1af58 <__assert_fail@plt+0x9e00>
   23ac8:	mov	r1, #1
   23acc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23ad0:	bl	20608 <__assert_fail@plt+0xf4b0>
   23ad4:	mov	r3, r0
   23ad8:	cmp	r3, #0
   23adc:	bgt	23b14 <__assert_fail@plt+0x129bc>
   23ae0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23ae4:	cmp	r3, #0
   23ae8:	beq	23af8 <__assert_fail@plt+0x129a0>
   23aec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23af0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23af4:	bl	1f5e8 <__assert_fail@plt+0xe490>
   23af8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23afc:	cmp	r3, #0
   23b00:	beq	23d2c <__assert_fail@plt+0x12bd4>
   23b04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23b08:	mov	r2, #0
   23b0c:	str	r2, [r3, #4]
   23b10:	b	23d30 <__assert_fail@plt+0x12bd8>
   23b14:	sub	r3, fp, #36	; 0x24
   23b18:	mov	r0, r3
   23b1c:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23b20:	sub	r3, fp, #24
   23b24:	mov	r0, r3
   23b28:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23b2c:	mov	r1, #2
   23b30:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23b34:	bl	266c0 <__assert_fail@plt+0x15568>
   23b38:	mov	r3, r0
   23b3c:	sub	r3, r3, #1
   23b40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   23b44:	mov	r0, r3
   23b48:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   23b4c:	mov	r3, r0
   23b50:	add	r3, r3, #1
   23b54:	str	r3, [fp, #-12]
   23b58:	sub	r3, fp, #24
   23b5c:	ldr	r1, [fp, #-12]
   23b60:	mov	r0, r3
   23b64:	bl	2535c <__assert_fail@plt+0x14204>
   23b68:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23b6c:	cmp	r3, #2
   23b70:	bne	23be8 <__assert_fail@plt+0x12a90>
   23b74:	sub	r2, fp, #24
   23b78:	sub	r3, fp, #36	; 0x24
   23b7c:	mov	r1, r2
   23b80:	mov	r0, r3
   23b84:	bl	20784 <__assert_fail@plt+0xf62c>
   23b88:	sub	r2, fp, #36	; 0x24
   23b8c:	sub	r3, fp, #24
   23b90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23b94:	mov	r0, r3
   23b98:	bl	217e0 <__assert_fail@plt+0x10688>
   23b9c:	sub	r2, fp, #36	; 0x24
   23ba0:	sub	r1, fp, #24
   23ba4:	sub	r3, fp, #24
   23ba8:	mov	r0, r3
   23bac:	bl	20bd8 <__assert_fail@plt+0xfa80>
   23bb0:	sub	r1, fp, #24
   23bb4:	sub	r3, fp, #24
   23bb8:	mov	r2, #1
   23bbc:	mov	r0, r3
   23bc0:	bl	21f10 <__assert_fail@plt+0x10db8>
   23bc4:	sub	r2, fp, #36	; 0x24
   23bc8:	sub	r3, fp, #24
   23bcc:	mov	r1, r2
   23bd0:	mov	r0, r3
   23bd4:	bl	206a8 <__assert_fail@plt+0xf550>
   23bd8:	mov	r3, r0
   23bdc:	cmp	r3, #0
   23be0:	blt	23b74 <__assert_fail@plt+0x12a1c>
   23be4:	b	23cc0 <__assert_fail@plt+0x12b68>
   23be8:	sub	r3, fp, #48	; 0x30
   23bec:	mov	r0, r3
   23bf0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23bf4:	ldr	r3, [fp, #-8]
   23bf8:	cmp	r3, #0
   23bfc:	beq	23c14 <__assert_fail@plt+0x12abc>
   23c00:	sub	r2, fp, #24
   23c04:	sub	r3, fp, #24
   23c08:	mov	r1, r2
   23c0c:	mov	r0, r3
   23c10:	bl	20744 <__assert_fail@plt+0xf5ec>
   23c14:	sub	r2, fp, #24
   23c18:	sub	r3, fp, #36	; 0x24
   23c1c:	mov	r1, r2
   23c20:	mov	r0, r3
   23c24:	bl	20784 <__assert_fail@plt+0xf62c>
   23c28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23c2c:	sub	r2, r3, #1
   23c30:	sub	r1, fp, #36	; 0x24
   23c34:	sub	r3, fp, #24
   23c38:	mov	r0, r3
   23c3c:	bl	23524 <__assert_fail@plt+0x123cc>
   23c40:	sub	r2, fp, #24
   23c44:	sub	r3, fp, #24
   23c48:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23c4c:	mov	r0, r3
   23c50:	bl	217e0 <__assert_fail@plt+0x10688>
   23c54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23c58:	sub	r2, r3, #1
   23c5c:	sub	r1, fp, #36	; 0x24
   23c60:	sub	r3, fp, #48	; 0x30
   23c64:	mov	r0, r3
   23c68:	bl	20d6c <__assert_fail@plt+0xfc14>
   23c6c:	sub	r2, fp, #48	; 0x30
   23c70:	sub	r1, fp, #24
   23c74:	sub	r3, fp, #24
   23c78:	mov	r0, r3
   23c7c:	bl	20bd8 <__assert_fail@plt+0xfa80>
   23c80:	sub	r1, fp, #24
   23c84:	sub	r3, fp, #24
   23c88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   23c8c:	mov	r0, r3
   23c90:	bl	22364 <__assert_fail@plt+0x1120c>
   23c94:	sub	r2, fp, #36	; 0x24
   23c98:	sub	r3, fp, #24
   23c9c:	mov	r1, r2
   23ca0:	mov	r0, r3
   23ca4:	bl	206a8 <__assert_fail@plt+0xf550>
   23ca8:	mov	r3, r0
   23cac:	cmp	r3, #0
   23cb0:	blt	23c14 <__assert_fail@plt+0x12abc>
   23cb4:	sub	r3, fp, #48	; 0x30
   23cb8:	mov	r0, r3
   23cbc:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23cc4:	cmp	r3, #0
   23cc8:	beq	23cf4 <__assert_fail@plt+0x12b9c>
   23ccc:	sub	r1, fp, #36	; 0x24
   23cd0:	sub	r3, fp, #24
   23cd4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   23cd8:	mov	r0, r3
   23cdc:	bl	23524 <__assert_fail@plt+0x123cc>
   23ce0:	sub	r3, fp, #24
   23ce4:	mov	r2, r3
   23ce8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   23cec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   23cf0:	bl	20c6c <__assert_fail@plt+0xfb14>
   23cf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23cf8:	cmp	r3, #0
   23cfc:	beq	23d10 <__assert_fail@plt+0x12bb8>
   23d00:	sub	r3, fp, #36	; 0x24
   23d04:	mov	r1, r3
   23d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23d0c:	bl	20784 <__assert_fail@plt+0xf62c>
   23d10:	sub	r3, fp, #36	; 0x24
   23d14:	mov	r0, r3
   23d18:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23d1c:	sub	r3, fp, #24
   23d20:	mov	r0, r3
   23d24:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23d28:	b	23d30 <__assert_fail@plt+0x12bd8>
   23d2c:	nop			; (mov r0, r0)
   23d30:	sub	sp, fp, #4
   23d34:	pop	{fp, pc}
   23d38:	andeq	r3, r3, ip, lsl sp
   23d3c:	andeq	r3, r3, ip, asr #26
   23d40:	push	{fp, lr}
   23d44:	add	fp, sp, #4
   23d48:	sub	sp, sp, #32
   23d4c:	str	r0, [fp, #-24]	; 0xffffffe8
   23d50:	str	r1, [fp, #-28]	; 0xffffffe4
   23d54:	str	r2, [fp, #-32]	; 0xffffffe0
   23d58:	sub	r3, fp, #20
   23d5c:	mov	r0, r3
   23d60:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23d64:	sub	r1, fp, #20
   23d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23d74:	bl	23a64 <__assert_fail@plt+0x1290c>
   23d78:	ldr	r3, [fp, #-16]
   23d7c:	cmp	r3, #0
   23d80:	moveq	r3, #1
   23d84:	movne	r3, #0
   23d88:	uxtb	r3, r3
   23d8c:	str	r3, [fp, #-8]
   23d90:	sub	r3, fp, #20
   23d94:	mov	r0, r3
   23d98:	bl	1f3e0 <__assert_fail@plt+0xe288>
   23d9c:	ldr	r3, [fp, #-8]
   23da0:	mov	r0, r3
   23da4:	sub	sp, fp, #4
   23da8:	pop	{fp, pc}
   23dac:	push	{fp, lr}
   23db0:	add	fp, sp, #4
   23db4:	sub	sp, sp, #16
   23db8:	str	r0, [fp, #-8]
   23dbc:	str	r1, [fp, #-12]
   23dc0:	str	r2, [fp, #-16]
   23dc4:	mov	r3, #2
   23dc8:	ldr	r2, [fp, #-16]
   23dcc:	ldr	r1, [fp, #-12]
   23dd0:	ldr	r0, [fp, #-8]
   23dd4:	bl	23a64 <__assert_fail@plt+0x1290c>
   23dd8:	nop			; (mov r0, r0)
   23ddc:	sub	sp, fp, #4
   23de0:	pop	{fp, pc}
   23de4:	push	{fp, lr}
   23de8:	add	fp, sp, #4
   23dec:	sub	sp, sp, #8
   23df0:	str	r0, [fp, #-8]
   23df4:	str	r1, [fp, #-12]
   23df8:	mov	r3, #2
   23dfc:	ldr	r2, [fp, #-12]
   23e00:	mov	r1, #0
   23e04:	ldr	r0, [fp, #-8]
   23e08:	bl	23a64 <__assert_fail@plt+0x1290c>
   23e0c:	nop			; (mov r0, r0)
   23e10:	sub	sp, fp, #4
   23e14:	pop	{fp, pc}
   23e18:	push	{fp, lr}
   23e1c:	add	fp, sp, #4
   23e20:	sub	sp, sp, #8
   23e24:	str	r0, [fp, #-8]
   23e28:	ldr	r3, [fp, #-8]
   23e2c:	ldr	r3, [r3, #4]
   23e30:	cmp	r3, #0
   23e34:	bgt	23e54 <__assert_fail@plt+0x12cfc>
   23e38:	ldr	r3, [fp, #-8]
   23e3c:	ldr	r3, [r3, #4]
   23e40:	cmp	r3, #0
   23e44:	moveq	r3, #1
   23e48:	movne	r3, #0
   23e4c:	uxtb	r3, r3
   23e50:	b	23e68 <__assert_fail@plt+0x12d10>
   23e54:	mov	r2, #2
   23e58:	ldr	r1, [fp, #-8]
   23e5c:	mov	r0, #0
   23e60:	bl	23d40 <__assert_fail@plt+0x12be8>
   23e64:	mov	r3, r0
   23e68:	mov	r0, r3
   23e6c:	sub	sp, fp, #4
   23e70:	pop	{fp, pc}
   23e74:	push	{fp, lr}
   23e78:	add	fp, sp, #4
   23e7c:	sub	sp, sp, #24
   23e80:	str	r0, [fp, #-24]	; 0xffffffe8
   23e84:	str	r1, [fp, #-28]	; 0xffffffe4
   23e88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23e8c:	cmp	r3, #0
   23e90:	bgt	23ea8 <__assert_fail@plt+0x12d50>
   23e94:	ldr	r3, [pc, #120]	; 23f14 <__assert_fail@plt+0x12dbc>
   23e98:	ldr	r2, [pc, #120]	; 23f18 <__assert_fail@plt+0x12dc0>
   23e9c:	ldr	r1, [pc, #120]	; 23f1c <__assert_fail@plt+0x12dc4>
   23ea0:	ldr	r0, [pc, #120]	; 23f20 <__assert_fail@plt+0x12dc8>
   23ea4:	bl	11158 <__assert_fail@plt>
   23ea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23eac:	sub	r3, r3, #-1073741823	; 0xc0000001
   23eb0:	lsl	r3, r3, #2
   23eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23eb8:	add	r3, r2, r3
   23ebc:	ldr	r3, [r3]
   23ec0:	cmp	r3, #0
   23ec4:	bne	23edc <__assert_fail@plt+0x12d84>
   23ec8:	ldr	r3, [pc, #68]	; 23f14 <__assert_fail@plt+0x12dbc>
   23ecc:	ldr	r2, [pc, #80]	; 23f24 <__assert_fail@plt+0x12dcc>
   23ed0:	ldr	r1, [pc, #68]	; 23f1c <__assert_fail@plt+0x12dc4>
   23ed4:	ldr	r0, [pc, #76]	; 23f28 <__assert_fail@plt+0x12dd0>
   23ed8:	bl	11158 <__assert_fail@plt>
   23edc:	sub	r3, fp, #16
   23ee0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23ee8:	mov	r0, r3
   23eec:	bl	1fc98 <__assert_fail@plt+0xeb40>
   23ef0:	mov	r3, r0
   23ef4:	mov	r2, #2
   23ef8:	mov	r1, r3
   23efc:	mov	r0, #0
   23f00:	bl	23d40 <__assert_fail@plt+0x12be8>
   23f04:	mov	r3, r0
   23f08:	mov	r0, r3
   23f0c:	sub	sp, fp, #4
   23f10:	pop	{fp, pc}
   23f14:	ldrdeq	r4, [r3], -ip
   23f18:	andeq	r0, r0, r6, ror #25
   23f1c:	andeq	r3, r3, r0, asr #19
   23f20:	andeq	r3, r3, ip, lsr sl
   23f24:	andeq	r0, r0, r7, ror #25
   23f28:	andeq	r3, r3, r8, ror #26
   23f2c:	push	{fp, lr}
   23f30:	add	fp, sp, #4
   23f34:	sub	sp, sp, #56	; 0x38
   23f38:	str	r0, [fp, #-48]	; 0xffffffd0
   23f3c:	str	r1, [fp, #-52]	; 0xffffffcc
   23f40:	str	r2, [fp, #-56]	; 0xffffffc8
   23f44:	str	r3, [fp, #-60]	; 0xffffffc4
   23f48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23f4c:	cmp	r3, #0
   23f50:	bgt	23f68 <__assert_fail@plt+0x12e10>
   23f54:	ldr	r3, [pc, #280]	; 24074 <__assert_fail@plt+0x12f1c>
   23f58:	ldr	r2, [pc, #280]	; 24078 <__assert_fail@plt+0x12f20>
   23f5c:	ldr	r1, [pc, #280]	; 2407c <__assert_fail@plt+0x12f24>
   23f60:	ldr	r0, [pc, #280]	; 24080 <__assert_fail@plt+0x12f28>
   23f64:	bl	11158 <__assert_fail@plt>
   23f68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23f6c:	sub	r3, r3, #-1073741823	; 0xc0000001
   23f70:	lsl	r3, r3, #2
   23f74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23f78:	add	r3, r2, r3
   23f7c:	ldr	r3, [r3]
   23f80:	cmp	r3, #0
   23f84:	bne	23f9c <__assert_fail@plt+0x12e44>
   23f88:	ldr	r3, [pc, #228]	; 24074 <__assert_fail@plt+0x12f1c>
   23f8c:	ldr	r2, [pc, #240]	; 24084 <__assert_fail@plt+0x12f2c>
   23f90:	ldr	r1, [pc, #228]	; 2407c <__assert_fail@plt+0x12f24>
   23f94:	ldr	r0, [pc, #236]	; 24088 <__assert_fail@plt+0x12f30>
   23f98:	bl	11158 <__assert_fail@plt>
   23f9c:	sub	r3, fp, #32
   23fa0:	mov	r0, r3
   23fa4:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23fa8:	sub	r3, fp, #20
   23fac:	mov	r0, r3
   23fb0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   23fb4:	sub	r3, fp, #44	; 0x2c
   23fb8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   23fbc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23fc0:	mov	r0, r3
   23fc4:	bl	1fc98 <__assert_fail@plt+0xeb40>
   23fc8:	mov	r2, r0
   23fcc:	sub	r1, fp, #32
   23fd0:	sub	r0, fp, #20
   23fd4:	mov	r3, #2
   23fd8:	bl	23a64 <__assert_fail@plt+0x1290c>
   23fdc:	ldr	r2, [fp, #-16]
   23fe0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23fe4:	add	r3, r3, #1
   23fe8:	lsr	r1, r3, #31
   23fec:	add	r3, r1, r3
   23ff0:	asr	r3, r3, #1
   23ff4:	cmp	r2, r3
   23ff8:	beq	24010 <__assert_fail@plt+0x12eb8>
   23ffc:	ldr	r3, [pc, #112]	; 24074 <__assert_fail@plt+0x12f1c>
   24000:	ldr	r2, [pc, #132]	; 2408c <__assert_fail@plt+0x12f34>
   24004:	ldr	r1, [pc, #112]	; 2407c <__assert_fail@plt+0x12f24>
   24008:	ldr	r0, [pc, #128]	; 24090 <__assert_fail@plt+0x12f38>
   2400c:	bl	11158 <__assert_fail@plt>
   24010:	ldr	r3, [fp, #-12]
   24014:	ldr	r2, [fp, #-16]
   24018:	mov	r1, r3
   2401c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24020:	bl	1b310 <__assert_fail@plt+0xa1b8>
   24024:	sub	r3, fp, #20
   24028:	mov	r0, r3
   2402c:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24034:	str	r3, [fp, #-8]
   24038:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2403c:	cmp	r3, #0
   24040:	beq	24058 <__assert_fail@plt+0x12f00>
   24044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24048:	ldr	r2, [fp, #-8]
   2404c:	mov	r1, r3
   24050:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24054:	bl	1b310 <__assert_fail@plt+0xa1b8>
   24058:	sub	r3, fp, #32
   2405c:	mov	r0, r3
   24060:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24064:	ldr	r3, [fp, #-8]
   24068:	mov	r0, r3
   2406c:	sub	sp, fp, #4
   24070:	pop	{fp, pc}
   24074:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   24078:	strdeq	r0, [r0], -r1
   2407c:	andeq	r3, r3, r0, asr #19
   24080:	andeq	r3, r3, ip, lsr sl
   24084:	strdeq	r0, [r0], -r2
   24088:	andeq	r3, r3, r8, ror #26
   2408c:	strdeq	r0, [r0], -r8
   24090:	andeq	r3, r3, r8, ror sp
   24094:	push	{fp, lr}
   24098:	add	fp, sp, #4
   2409c:	sub	sp, sp, #16
   240a0:	str	r0, [fp, #-8]
   240a4:	str	r1, [fp, #-12]
   240a8:	str	r2, [fp, #-16]
   240ac:	ldr	r3, [fp, #-12]
   240b0:	cmp	r3, #0
   240b4:	moveq	r3, #1
   240b8:	movne	r3, #0
   240bc:	uxtb	r3, r3
   240c0:	mov	r2, r3
   240c4:	ldr	r3, [fp, #-12]
   240c8:	add	r3, r2, r3
   240cc:	mov	r1, r3
   240d0:	ldr	r0, [fp, #-8]
   240d4:	bl	1f56c <__assert_fail@plt+0xe414>
   240d8:	ldr	r3, [fp, #-16]
   240dc:	add	r3, r3, #1
   240e0:	cmp	r3, #1
   240e4:	bls	24124 <__assert_fail@plt+0x12fcc>
   240e8:	b	2410c <__assert_fail@plt+0x12fb4>
   240ec:	ldr	r2, [fp, #-12]
   240f0:	ldr	r3, [fp, #-16]
   240f4:	sub	r3, r2, r3
   240f8:	str	r3, [fp, #-12]
   240fc:	ldr	r2, [fp, #-12]
   24100:	ldr	r1, [fp, #-8]
   24104:	ldr	r0, [fp, #-8]
   24108:	bl	20d6c <__assert_fail@plt+0xfc14>
   2410c:	ldr	r3, [fp, #-16]
   24110:	add	r2, r3, #1
   24114:	ldr	r3, [fp, #-12]
   24118:	cmp	r2, r3
   2411c:	bcc	240ec <__assert_fail@plt+0x12f94>
   24120:	b	24128 <__assert_fail@plt+0x12fd0>
   24124:	nop			; (mov r0, r0)
   24128:	sub	sp, fp, #4
   2412c:	pop	{fp, pc}
   24130:	push	{fp, lr}
   24134:	add	fp, sp, #4
   24138:	sub	sp, sp, #8
   2413c:	str	r0, [fp, #-8]
   24140:	str	r1, [fp, #-12]
   24144:	mov	r2, #2
   24148:	ldr	r1, [fp, #-12]
   2414c:	ldr	r0, [fp, #-8]
   24150:	bl	24094 <__assert_fail@plt+0x12f3c>
   24154:	nop			; (mov r0, r0)
   24158:	sub	sp, fp, #4
   2415c:	pop	{fp, pc}
   24160:	push	{fp, lr}
   24164:	add	fp, sp, #4
   24168:	sub	sp, sp, #8
   2416c:	str	r0, [fp, #-8]
   24170:	str	r1, [fp, #-12]
   24174:	mov	r2, #1
   24178:	ldr	r1, [fp, #-12]
   2417c:	ldr	r0, [fp, #-8]
   24180:	bl	24094 <__assert_fail@plt+0x12f3c>
   24184:	nop			; (mov r0, r0)
   24188:	sub	sp, fp, #4
   2418c:	pop	{fp, pc}
   24190:	push	{fp, lr}
   24194:	add	fp, sp, #4
   24198:	sub	sp, sp, #32
   2419c:	str	r0, [fp, #-24]	; 0xffffffe8
   241a0:	str	r1, [fp, #-28]	; 0xffffffe4
   241a4:	str	r2, [fp, #-32]	; 0xffffffe0
   241a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   241ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   241b0:	cmp	r2, r3
   241b4:	movls	r3, #1
   241b8:	movhi	r3, #0
   241bc:	uxtb	r3, r3
   241c0:	mov	r1, r3
   241c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   241c8:	bl	1f56c <__assert_fail@plt+0xe414>
   241cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   241d0:	lsr	r2, r3, #1
   241d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   241d8:	cmp	r2, r3
   241dc:	bcs	24208 <__assert_fail@plt+0x130b0>
   241e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   241e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   241e8:	cmp	r2, r3
   241ec:	bhi	24200 <__assert_fail@plt+0x130a8>
   241f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   241f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   241f8:	sub	r3, r2, r3
   241fc:	b	24204 <__assert_fail@plt+0x130ac>
   24200:	mov	r3, #0
   24204:	str	r3, [fp, #-32]	; 0xffffffe0
   24208:	sub	r3, fp, #16
   2420c:	mov	r0, r3
   24210:	bl	1f318 <__assert_fail@plt+0xe1c0>
   24214:	sub	r3, fp, #16
   24218:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2421c:	mov	r0, r3
   24220:	bl	24160 <__assert_fail@plt+0x13008>
   24224:	b	24250 <__assert_fail@plt+0x130f8>
   24228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2422c:	sub	r2, r3, #1
   24230:	str	r2, [fp, #-28]	; 0xffffffe4
   24234:	mov	r2, r3
   24238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2423c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24240:	bl	20d6c <__assert_fail@plt+0xfc14>
   24244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24248:	sub	r3, r3, #1
   2424c:	str	r3, [fp, #-32]	; 0xffffffe0
   24250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24254:	cmp	r3, #0
   24258:	bne	24228 <__assert_fail@plt+0x130d0>
   2425c:	sub	r3, fp, #16
   24260:	mov	r2, r3
   24264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2426c:	bl	21ff0 <__assert_fail@plt+0x10e98>
   24270:	sub	r3, fp, #16
   24274:	mov	r0, r3
   24278:	bl	1f3e0 <__assert_fail@plt+0xe288>
   2427c:	nop			; (mov r0, r0)
   24280:	sub	sp, fp, #4
   24284:	pop	{fp, pc}
   24288:	push	{fp, lr}
   2428c:	add	fp, sp, #4
   24290:	sub	sp, sp, #56	; 0x38
   24294:	str	r0, [fp, #-56]	; 0xffffffc8
   24298:	str	r1, [fp, #-60]	; 0xffffffc4
   2429c:	mov	r3, #0
   242a0:	str	r3, [fp, #-12]
   242a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   242a8:	and	r3, r3, #1
   242ac:	cmp	r3, #0
   242b0:	bne	242c8 <__assert_fail@plt+0x13170>
   242b4:	ldr	r3, [pc, #660]	; 24550 <__assert_fail@plt+0x133f8>
   242b8:	ldr	r2, [pc, #660]	; 24554 <__assert_fail@plt+0x133fc>
   242bc:	ldr	r1, [pc, #660]	; 24558 <__assert_fail@plt+0x13400>
   242c0:	ldr	r0, [pc, #660]	; 2455c <__assert_fail@plt+0x13404>
   242c4:	bl	11158 <__assert_fail@plt>
   242c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   242cc:	cmp	r3, #0
   242d0:	bne	242e8 <__assert_fail@plt+0x13190>
   242d4:	ldr	r3, [pc, #628]	; 24550 <__assert_fail@plt+0x133f8>
   242d8:	ldr	r2, [pc, #640]	; 24560 <__assert_fail@plt+0x13408>
   242dc:	ldr	r1, [pc, #628]	; 24558 <__assert_fail@plt+0x13400>
   242e0:	ldr	r0, [pc, #636]	; 24564 <__assert_fail@plt+0x1340c>
   242e4:	bl	11158 <__assert_fail@plt>
   242e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   242ec:	lsr	r3, r3, #1
   242f0:	str	r3, [fp, #-60]	; 0xffffffc4
   242f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   242f8:	str	r3, [fp, #-32]	; 0xffffffe0
   242fc:	mov	r3, #0
   24300:	str	r3, [fp, #-36]	; 0xffffffdc
   24304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24308:	rsb	r2, r3, #0
   2430c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24310:	and	r3, r3, r2
   24314:	str	r3, [fp, #-16]
   24318:	mov	r3, #0
   2431c:	str	r3, [fp, #-20]	; 0xffffffec
   24320:	mov	r3, #8
   24324:	str	r3, [fp, #-40]	; 0xffffffd8
   24328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2432c:	cmp	r3, #31
   24330:	bhi	24380 <__assert_fail@plt+0x13228>
   24334:	b	24354 <__assert_fail@plt+0x131fc>
   24338:	ldr	r2, [fp, #-16]
   2433c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24340:	lsl	r3, r2, r3
   24344:	str	r3, [fp, #-16]
   24348:	ldr	r3, [fp, #-20]	; 0xffffffec
   2434c:	add	r3, r3, #8
   24350:	str	r3, [fp, #-20]	; 0xffffffec
   24354:	ldr	r3, [fp, #-16]
   24358:	and	r3, r3, #-16777216	; 0xff000000
   2435c:	cmp	r3, #0
   24360:	beq	24338 <__assert_fail@plt+0x131e0>
   24364:	b	24380 <__assert_fail@plt+0x13228>
   24368:	ldr	r3, [fp, #-16]
   2436c:	lsl	r3, r3, #1
   24370:	str	r3, [fp, #-16]
   24374:	ldr	r3, [fp, #-20]	; 0xffffffec
   24378:	add	r3, r3, #1
   2437c:	str	r3, [fp, #-20]	; 0xffffffec
   24380:	ldr	r3, [fp, #-16]
   24384:	cmp	r3, #0
   24388:	bge	24368 <__assert_fail@plt+0x13210>
   2438c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24390:	str	r3, [fp, #-36]	; 0xffffffdc
   24394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24398:	rsb	r3, r3, #31
   2439c:	str	r3, [fp, #-8]
   243a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   243a4:	lsr	r3, r3, #1
   243a8:	str	r3, [fp, #-56]	; 0xffffffc8
   243ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   243b0:	ldr	r3, [fp, #-8]
   243b4:	lsr	r3, r2, r3
   243b8:	str	r3, [fp, #-56]	; 0xffffffc8
   243bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   243c0:	lsr	r2, r3, #1
   243c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   243c8:	eor	r2, r2, r3
   243cc:	ldr	r3, [fp, #-8]
   243d0:	and	r2, r2, r3
   243d4:	ldr	r3, [fp, #-12]
   243d8:	eor	r3, r3, r2
   243dc:	str	r3, [fp, #-12]
   243e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   243e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   243e8:	cmp	r2, r3
   243ec:	bcs	24458 <__assert_fail@plt+0x13300>
   243f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   243f4:	cmp	r3, #0
   243f8:	bne	2441c <__assert_fail@plt+0x132c4>
   243fc:	ldr	r3, [fp, #-12]
   24400:	and	r3, r3, #1
   24404:	cmp	r3, #0
   24408:	beq	24414 <__assert_fail@plt+0x132bc>
   2440c:	mvn	r3, #0
   24410:	b	24544 <__assert_fail@plt+0x133ec>
   24414:	mov	r3, #1
   24418:	b	24544 <__assert_fail@plt+0x133ec>
   2441c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   24420:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24424:	and	r2, r2, r3
   24428:	ldr	r3, [fp, #-12]
   2442c:	eor	r3, r3, r2
   24430:	str	r3, [fp, #-12]
   24434:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24438:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2443c:	sub	r3, r2, r3
   24440:	str	r3, [fp, #-56]	; 0xffffffc8
   24444:	ldr	r2, [fp, #-60]	; 0xffffffc4
   24448:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2444c:	sub	r3, r2, r3
   24450:	str	r3, [fp, #-60]	; 0xffffffc4
   24454:	b	24488 <__assert_fail@plt+0x13330>
   24458:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2445c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24460:	sub	r3, r2, r3
   24464:	str	r3, [fp, #-56]	; 0xffffffc8
   24468:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2446c:	cmp	r3, #0
   24470:	bne	24488 <__assert_fail@plt+0x13330>
   24474:	ldr	r3, [pc, #212]	; 24550 <__assert_fail@plt+0x133f8>
   24478:	ldr	r2, [pc, #232]	; 24568 <__assert_fail@plt+0x13410>
   2447c:	ldr	r1, [pc, #212]	; 24558 <__assert_fail@plt+0x13400>
   24480:	ldr	r0, [pc, #220]	; 24564 <__assert_fail@plt+0x1340c>
   24484:	bl	11158 <__assert_fail@plt>
   24488:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2448c:	str	r3, [fp, #-44]	; 0xffffffd4
   24490:	mov	r3, #0
   24494:	str	r3, [fp, #-48]	; 0xffffffd0
   24498:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2449c:	rsb	r2, r3, #0
   244a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   244a4:	and	r3, r3, r2
   244a8:	str	r3, [fp, #-24]	; 0xffffffe8
   244ac:	mov	r3, #0
   244b0:	str	r3, [fp, #-28]	; 0xffffffe4
   244b4:	mov	r3, #8
   244b8:	str	r3, [fp, #-52]	; 0xffffffcc
   244bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   244c0:	cmp	r3, #31
   244c4:	bhi	24514 <__assert_fail@plt+0x133bc>
   244c8:	b	244e8 <__assert_fail@plt+0x13390>
   244cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   244d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   244d4:	lsl	r3, r2, r3
   244d8:	str	r3, [fp, #-24]	; 0xffffffe8
   244dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244e0:	add	r3, r3, #8
   244e4:	str	r3, [fp, #-28]	; 0xffffffe4
   244e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244ec:	and	r3, r3, #-16777216	; 0xff000000
   244f0:	cmp	r3, #0
   244f4:	beq	244cc <__assert_fail@plt+0x13374>
   244f8:	b	24514 <__assert_fail@plt+0x133bc>
   244fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24500:	lsl	r3, r3, #1
   24504:	str	r3, [fp, #-24]	; 0xffffffe8
   24508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2450c:	add	r3, r3, #1
   24510:	str	r3, [fp, #-28]	; 0xffffffe4
   24514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24518:	cmp	r3, #0
   2451c:	bge	244fc <__assert_fail@plt+0x133a4>
   24520:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24524:	str	r3, [fp, #-48]	; 0xffffffd0
   24528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2452c:	rsb	r3, r3, #31
   24530:	str	r3, [fp, #-8]
   24534:	ldr	r3, [fp, #-8]
   24538:	add	r3, r3, #1
   2453c:	str	r3, [fp, #-8]
   24540:	b	243ac <__assert_fail@plt+0x13254>
   24544:	mov	r0, r3
   24548:	sub	sp, fp, #4
   2454c:	pop	{fp, pc}
   24550:	andeq	r4, r3, r0, lsl #4
   24554:	andeq	r0, r0, r7, lsr sp
   24558:	andeq	r3, r3, r0, asr #19
   2455c:	muleq	r3, r0, sp
   24560:	andeq	r0, r0, r8, lsr sp
   24564:	muleq	r3, r8, sp
   24568:	andeq	r0, r0, r2, asr sp
   2456c:	push	{fp, lr}
   24570:	add	fp, sp, #4
   24574:	sub	sp, sp, #16
   24578:	str	r0, [fp, #-8]
   2457c:	str	r1, [fp, #-12]
   24580:	str	r2, [fp, #-16]
   24584:	ldr	r2, [fp, #-16]
   24588:	ldr	r1, [fp, #-12]
   2458c:	ldr	r0, [fp, #-12]
   24590:	bl	218e0 <__assert_fail@plt+0x10788>
   24594:	ldr	r2, [fp, #-8]
   24598:	ldr	r1, [fp, #-8]
   2459c:	ldr	r0, [fp, #-8]
   245a0:	bl	20dc0 <__assert_fail@plt+0xfc68>
   245a4:	mov	r2, #2
   245a8:	ldr	r1, [fp, #-12]
   245ac:	ldr	r0, [fp, #-8]
   245b0:	bl	21164 <__assert_fail@plt+0x1000c>
   245b4:	ldr	r2, [fp, #-16]
   245b8:	ldr	r1, [fp, #-8]
   245bc:	ldr	r0, [fp, #-8]
   245c0:	bl	218a0 <__assert_fail@plt+0x10748>
   245c4:	ldr	r2, [fp, #-12]
   245c8:	ldr	r1, [fp, #-12]
   245cc:	ldr	r0, [fp, #-12]
   245d0:	bl	20dc0 <__assert_fail@plt+0xfc68>
   245d4:	nop			; (mov r0, r0)
   245d8:	sub	sp, fp, #4
   245dc:	pop	{fp, pc}
   245e0:	push	{fp, lr}
   245e4:	add	fp, sp, #4
   245e8:	sub	sp, sp, #40	; 0x28
   245ec:	str	r0, [fp, #-32]	; 0xffffffe0
   245f0:	str	r1, [fp, #-36]	; 0xffffffdc
   245f4:	str	r2, [fp, #-40]	; 0xffffffd8
   245f8:	str	r3, [fp, #-44]	; 0xffffffd4
   245fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24600:	cmp	r3, #0
   24604:	bne	2461c <__assert_fail@plt+0x134c4>
   24608:	ldr	r3, [pc, #644]	; 24894 <__assert_fail@plt+0x1373c>
   2460c:	ldr	r2, [pc, #644]	; 24898 <__assert_fail@plt+0x13740>
   24610:	ldr	r1, [pc, #644]	; 2489c <__assert_fail@plt+0x13744>
   24614:	ldr	r0, [pc, #644]	; 248a0 <__assert_fail@plt+0x13748>
   24618:	bl	11158 <__assert_fail@plt>
   2461c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24620:	cmp	r3, #1073741824	; 0x40000000
   24624:	ble	2463c <__assert_fail@plt+0x134e4>
   24628:	ldr	r3, [pc, #612]	; 24894 <__assert_fail@plt+0x1373c>
   2462c:	ldr	r2, [pc, #624]	; 248a4 <__assert_fail@plt+0x1374c>
   24630:	ldr	r1, [pc, #612]	; 2489c <__assert_fail@plt+0x13744>
   24634:	ldr	r0, [pc, #620]	; 248a8 <__assert_fail@plt+0x13750>
   24638:	bl	11158 <__assert_fail@plt>
   2463c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24640:	cmp	r3, #-1073741823	; 0xc0000001
   24644:	bge	2465c <__assert_fail@plt+0x13504>
   24648:	ldr	r3, [pc, #580]	; 24894 <__assert_fail@plt+0x1373c>
   2464c:	ldr	r2, [pc, #600]	; 248ac <__assert_fail@plt+0x13754>
   24650:	ldr	r1, [pc, #580]	; 2489c <__assert_fail@plt+0x13744>
   24654:	ldr	r0, [pc, #596]	; 248b0 <__assert_fail@plt+0x13758>
   24658:	bl	11158 <__assert_fail@plt>
   2465c:	mov	r1, #4
   24660:	ldr	r0, [fp, #4]
   24664:	bl	204fc <__assert_fail@plt+0xf3a4>
   24668:	mov	r3, r0
   2466c:	cmp	r3, #0
   24670:	bgt	24688 <__assert_fail@plt+0x13530>
   24674:	ldr	r3, [pc, #536]	; 24894 <__assert_fail@plt+0x1373c>
   24678:	ldr	r2, [pc, #564]	; 248b4 <__assert_fail@plt+0x1375c>
   2467c:	ldr	r1, [pc, #536]	; 2489c <__assert_fail@plt+0x13744>
   24680:	ldr	r0, [pc, #560]	; 248b8 <__assert_fail@plt+0x13760>
   24684:	bl	11158 <__assert_fail@plt>
   24688:	ldr	r3, [fp, #4]
   2468c:	ldr	r3, [r3, #4]
   24690:	cmp	r3, #0
   24694:	movne	r3, #1
   24698:	moveq	r3, #0
   2469c:	uxtb	r3, r3
   246a0:	mov	r2, r3
   246a4:	ldr	r3, [fp, #4]
   246a8:	ldr	r3, [r3, #8]
   246ac:	ldr	r3, [r3]
   246b0:	and	r3, r3, r2
   246b4:	cmp	r3, #0
   246b8:	bne	246d0 <__assert_fail@plt+0x13578>
   246bc:	ldr	r3, [pc, #464]	; 24894 <__assert_fail@plt+0x1373c>
   246c0:	ldr	r2, [pc, #500]	; 248bc <__assert_fail@plt+0x13764>
   246c4:	ldr	r1, [pc, #464]	; 2489c <__assert_fail@plt+0x13744>
   246c8:	ldr	r0, [pc, #496]	; 248c0 <__assert_fail@plt+0x13768>
   246cc:	bl	11158 <__assert_fail@plt>
   246d0:	sub	r3, fp, #24
   246d4:	mov	r1, #1
   246d8:	mov	r0, r3
   246dc:	bl	1f6bc <__assert_fail@plt+0xe564>
   246e0:	mov	r1, #1
   246e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246e8:	bl	1f56c <__assert_fail@plt+0xe414>
   246ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   246f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   246f4:	bl	1f4e8 <__assert_fail@plt+0xe390>
   246f8:	mov	r1, #2
   246fc:	ldr	r0, [fp, #4]
   24700:	bl	266c0 <__assert_fail@plt+0x15568>
   24704:	mov	r3, r0
   24708:	sub	r3, r3, #1
   2470c:	str	r3, [fp, #-8]
   24710:	b	24844 <__assert_fail@plt+0x136ec>
   24714:	sub	r1, fp, #24
   24718:	sub	r3, fp, #24
   2471c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24720:	mov	r0, r3
   24724:	bl	20dc0 <__assert_fail@plt+0xfc68>
   24728:	ldr	r2, [fp, #4]
   2472c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24734:	bl	2456c <__assert_fail@plt+0x13414>
   24738:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2473c:	ldr	r3, [fp, #-8]
   24740:	cmp	r2, r3
   24744:	beq	24760 <__assert_fail@plt+0x13608>
   24748:	ldr	r1, [fp, #-8]
   2474c:	ldr	r0, [fp, #4]
   24750:	bl	24f20 <__assert_fail@plt+0x13dc8>
   24754:	mov	r3, r0
   24758:	cmp	r3, #0
   2475c:	beq	24830 <__assert_fail@plt+0x136d8>
   24760:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24764:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24768:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2476c:	bl	20d00 <__assert_fail@plt+0xfba8>
   24770:	sub	r3, fp, #24
   24774:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24778:	mov	r0, r3
   2477c:	bl	20784 <__assert_fail@plt+0xf62c>
   24780:	sub	r1, fp, #24
   24784:	sub	r3, fp, #24
   24788:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2478c:	mov	r0, r3
   24790:	bl	20bd8 <__assert_fail@plt+0xfa80>
   24794:	ldr	r3, [fp, #-20]	; 0xffffffec
   24798:	cmp	r3, #0
   2479c:	movne	r3, #1
   247a0:	moveq	r3, #0
   247a4:	uxtb	r3, r3
   247a8:	mov	r2, r3
   247ac:	ldr	r3, [fp, #-16]
   247b0:	ldr	r3, [r3]
   247b4:	and	r3, r3, r2
   247b8:	cmp	r3, #0
   247bc:	beq	247d4 <__assert_fail@plt+0x1367c>
   247c0:	sub	r1, fp, #24
   247c4:	sub	r3, fp, #24
   247c8:	ldr	r2, [fp, #4]
   247cc:	mov	r0, r3
   247d0:	bl	20bd8 <__assert_fail@plt+0xfa80>
   247d4:	sub	r1, fp, #24
   247d8:	sub	r3, fp, #24
   247dc:	mov	r2, #1
   247e0:	mov	r0, r3
   247e4:	bl	21f10 <__assert_fail@plt+0x10db8>
   247e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247ec:	mov	r3, r2
   247f0:	lsl	r3, r3, #31
   247f4:	sub	r3, r3, r2
   247f8:	lsl	r3, r3, #1
   247fc:	mov	r2, r3
   24800:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24804:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24808:	bl	20d00 <__assert_fail@plt+0xfba8>
   2480c:	sub	r3, fp, #24
   24810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24814:	mov	r1, r3
   24818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2481c:	bl	20bd8 <__assert_fail@plt+0xfa80>
   24820:	ldr	r2, [fp, #4]
   24824:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24828:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2482c:	bl	218a0 <__assert_fail@plt+0x10748>
   24830:	sub	r1, fp, #24
   24834:	sub	r3, fp, #24
   24838:	ldr	r2, [fp, #4]
   2483c:	mov	r0, r3
   24840:	bl	218a0 <__assert_fail@plt+0x10748>
   24844:	ldr	r3, [fp, #-8]
   24848:	sub	r3, r3, #1
   2484c:	str	r3, [fp, #-8]
   24850:	ldr	r2, [fp, #-8]
   24854:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24858:	cmp	r2, r3
   2485c:	bcs	24714 <__assert_fail@plt+0x135bc>
   24860:	ldr	r3, [fp, #-20]	; 0xffffffec
   24864:	cmp	r3, #0
   24868:	moveq	r3, #1
   2486c:	movne	r3, #0
   24870:	uxtb	r3, r3
   24874:	str	r3, [fp, #-12]
   24878:	sub	r3, fp, #24
   2487c:	mov	r0, r3
   24880:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24884:	ldr	r3, [fp, #-12]
   24888:	mov	r0, r3
   2488c:	sub	sp, fp, #4
   24890:	pop	{fp, pc}
   24894:	andeq	r4, r3, r4, lsl r2
   24898:	andeq	r0, r0, r2, ror sp
   2489c:	andeq	r3, r3, r0, asr #19
   248a0:	andeq	r3, r3, r0, lsr #27
   248a4:	andeq	r0, r0, r3, ror sp
   248a8:	andeq	r3, r3, r8, lsr #27
   248ac:	andeq	r0, r0, r4, ror sp
   248b0:	andeq	r3, r3, r0, asr #27
   248b4:	andeq	r0, r0, r5, ror sp
   248b8:	ldrdeq	r3, [r3], -r8
   248bc:	andeq	r0, r0, r6, ror sp
   248c0:	strdeq	r3, [r3], -r0
   248c4:	push	{fp, lr}
   248c8:	add	fp, sp, #4
   248cc:	sub	sp, sp, #64	; 0x40
   248d0:	str	r0, [fp, #-56]	; 0xffffffc8
   248d4:	str	r1, [fp, #-60]	; 0xffffffc4
   248d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   248dc:	ldr	r1, [r3, #8]
   248e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   248e4:	ldr	r3, [r3, #4]
   248e8:	eor	r2, r3, r3, asr #31
   248ec:	sub	r2, r2, r3, asr #31
   248f0:	sub	r3, fp, #48	; 0x30
   248f4:	mov	r0, r3
   248f8:	bl	1fc98 <__assert_fail@plt+0xeb40>
   248fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24900:	cmp	r3, #0
   24904:	movne	r3, #1
   24908:	moveq	r3, #0
   2490c:	uxtb	r3, r3
   24910:	mov	r2, r3
   24914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24918:	ldr	r3, [r3]
   2491c:	and	r3, r3, r2
   24920:	cmp	r3, #0
   24924:	bne	2493c <__assert_fail@plt+0x137e4>
   24928:	ldr	r3, [pc, #472]	; 24b08 <__assert_fail@plt+0x139b0>
   2492c:	mov	r2, #3504	; 0xdb0
   24930:	ldr	r1, [pc, #468]	; 24b0c <__assert_fail@plt+0x139b4>
   24934:	ldr	r0, [pc, #468]	; 24b10 <__assert_fail@plt+0x139b8>
   24938:	bl	11158 <__assert_fail@plt>
   2493c:	sub	r3, fp, #48	; 0x30
   24940:	mov	r2, #2
   24944:	mov	r1, r3
   24948:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2494c:	bl	23d40 <__assert_fail@plt+0x12be8>
   24950:	mov	r3, r0
   24954:	cmp	r3, #0
   24958:	beq	24964 <__assert_fail@plt+0x1380c>
   2495c:	mov	r3, #0
   24960:	b	24afc <__assert_fail@plt+0x139a4>
   24964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24968:	ldr	r3, [r3, #4]
   2496c:	cmp	r3, #1
   24970:	bne	24988 <__assert_fail@plt+0x13830>
   24974:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24978:	ldr	r3, [r3, #8]
   2497c:	ldr	r3, [r3]
   24980:	sub	r3, r3, #1
   24984:	b	2498c <__assert_fail@plt+0x13834>
   24988:	mvn	r3, #0
   2498c:	str	r3, [fp, #-16]
   24990:	mov	r3, #3
   24994:	str	r3, [fp, #-12]
   24998:	ldr	r2, [fp, #-12]
   2499c:	ldr	r3, [fp, #-16]
   249a0:	cmp	r2, r3
   249a4:	bcc	249c4 <__assert_fail@plt+0x1386c>
   249a8:	ldr	r3, [fp, #-12]
   249ac:	cmn	r3, #1
   249b0:	beq	249bc <__assert_fail@plt+0x13864>
   249b4:	mov	r3, #2
   249b8:	b	24afc <__assert_fail@plt+0x139a4>
   249bc:	mov	r3, #1
   249c0:	b	24afc <__assert_fail@plt+0x139a4>
   249c4:	ldr	r3, [fp, #-12]
   249c8:	add	r3, r3, #2
   249cc:	str	r3, [fp, #-12]
   249d0:	sub	r3, fp, #48	; 0x30
   249d4:	ldr	r1, [fp, #-12]
   249d8:	mov	r0, r3
   249dc:	bl	224f4 <__assert_fail@plt+0x1139c>
   249e0:	str	r0, [fp, #-20]	; 0xffffffec
   249e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   249e8:	cmp	r3, #0
   249ec:	bne	249f8 <__assert_fail@plt+0x138a0>
   249f0:	mov	r3, #0
   249f4:	b	24afc <__assert_fail@plt+0x139a4>
   249f8:	ldr	r1, [fp, #-12]
   249fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   24a00:	bl	24288 <__assert_fail@plt+0x13130>
   24a04:	mov	r3, r0
   24a08:	cmp	r3, #1
   24a0c:	beq	24998 <__assert_fail@plt+0x13840>
   24a10:	sub	r3, fp, #36	; 0x24
   24a14:	mov	r0, r3
   24a18:	bl	1f318 <__assert_fail@plt+0xe1c0>
   24a1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24a20:	ldr	r3, [r3]
   24a24:	mvn	r0, r3
   24a28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   24a30:	mvn	r3, #0
   24a34:	str	r3, [sp]
   24a38:	mov	r3, r1
   24a3c:	mov	r1, #0
   24a40:	bl	1c620 <__assert_fail@plt+0xb4c8>
   24a44:	str	r0, [fp, #-8]
   24a48:	ldr	r3, [fp, #-12]
   24a4c:	and	r3, r3, #2
   24a50:	cmp	r3, #0
   24a54:	beq	24a68 <__assert_fail@plt+0x13910>
   24a58:	ldr	r3, [fp, #-12]
   24a5c:	lsr	r3, r3, #2
   24a60:	add	r3, r3, #1
   24a64:	b	24a74 <__assert_fail@plt+0x1391c>
   24a68:	ldr	r3, [fp, #-12]
   24a6c:	lsr	r3, r3, #2
   24a70:	rsb	r3, r3, #0
   24a74:	str	r3, [fp, #-24]	; 0xffffffe8
   24a78:	sub	r0, fp, #36	; 0x24
   24a7c:	sub	r3, fp, #48	; 0x30
   24a80:	str	r3, [sp]
   24a84:	ldr	r3, [fp, #-8]
   24a88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24a8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24a90:	bl	245e0 <__assert_fail@plt+0x13488>
   24a94:	mov	r3, r0
   24a98:	cmp	r3, #0
   24a9c:	bne	24adc <__assert_fail@plt+0x13984>
   24aa0:	b	24ab8 <__assert_fail@plt+0x13960>
   24aa4:	sub	r2, fp, #48	; 0x30
   24aa8:	sub	r3, fp, #36	; 0x24
   24aac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   24ab0:	mov	r0, r3
   24ab4:	bl	2456c <__assert_fail@plt+0x13414>
   24ab8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24abc:	cmp	r3, #0
   24ac0:	beq	24adc <__assert_fail@plt+0x13984>
   24ac4:	ldr	r3, [fp, #-8]
   24ac8:	sub	r3, r3, #1
   24acc:	str	r3, [fp, #-8]
   24ad0:	ldr	r3, [fp, #-8]
   24ad4:	cmp	r3, #0
   24ad8:	bne	24aa4 <__assert_fail@plt+0x1394c>
   24adc:	sub	r3, fp, #36	; 0x24
   24ae0:	mov	r0, r3
   24ae4:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24ae8:	ldr	r3, [fp, #-8]
   24aec:	cmp	r3, #0
   24af0:	movne	r3, #1
   24af4:	moveq	r3, #0
   24af8:	uxtb	r3, r3
   24afc:	mov	r0, r3
   24b00:	sub	sp, fp, #4
   24b04:	pop	{fp, pc}
   24b08:	andeq	r4, r3, r4, lsr #4
   24b0c:	andeq	r3, r3, r0, asr #19
   24b10:	strdeq	r3, [r3], -r0
   24b14:	push	{fp, lr}
   24b18:	add	fp, sp, #4
   24b1c:	sub	sp, sp, #16
   24b20:	str	r0, [fp, #-8]
   24b24:	str	r1, [fp, #-12]
   24b28:	str	r2, [fp, #-16]
   24b2c:	str	r3, [fp, #-20]	; 0xffffffec
   24b30:	ldr	r3, [fp, #4]
   24b34:	cmp	r3, #0
   24b38:	bne	24b50 <__assert_fail@plt+0x139f8>
   24b3c:	ldr	r3, [pc, #180]	; 24bf8 <__assert_fail@plt+0x13aa0>
   24b40:	ldr	r2, [pc, #180]	; 24bfc <__assert_fail@plt+0x13aa4>
   24b44:	ldr	r1, [pc, #180]	; 24c00 <__assert_fail@plt+0x13aa8>
   24b48:	ldr	r0, [pc, #180]	; 24c04 <__assert_fail@plt+0x13aac>
   24b4c:	bl	11158 <__assert_fail@plt>
   24b50:	ldr	r3, [fp, #-8]
   24b54:	ldr	r2, [fp, #-20]	; 0xffffffec
   24b58:	ldr	r1, [fp, #-16]
   24b5c:	ldr	r0, [fp, #-16]
   24b60:	bl	23624 <__assert_fail@plt+0x124cc>
   24b64:	mov	r1, #1
   24b68:	ldr	r0, [fp, #-16]
   24b6c:	bl	204fc <__assert_fail@plt+0xf3a4>
   24b70:	mov	r3, r0
   24b74:	cmp	r3, #0
   24b78:	beq	24b94 <__assert_fail@plt+0x13a3c>
   24b7c:	ldr	r1, [fp, #-12]
   24b80:	ldr	r0, [fp, #-16]
   24b84:	bl	2054c <__assert_fail@plt+0xf3f4>
   24b88:	mov	r3, r0
   24b8c:	cmp	r3, #0
   24b90:	bne	24bd0 <__assert_fail@plt+0x13a78>
   24b94:	mov	r3, #1
   24b98:	b	24bec <__assert_fail@plt+0x13a94>
   24b9c:	ldr	r3, [fp, #-8]
   24ba0:	mov	r2, #2
   24ba4:	ldr	r1, [fp, #-16]
   24ba8:	ldr	r0, [fp, #-16]
   24bac:	bl	23a0c <__assert_fail@plt+0x128b4>
   24bb0:	ldr	r1, [fp, #-12]
   24bb4:	ldr	r0, [fp, #-16]
   24bb8:	bl	2054c <__assert_fail@plt+0xf3f4>
   24bbc:	mov	r3, r0
   24bc0:	cmp	r3, #0
   24bc4:	bne	24bd0 <__assert_fail@plt+0x13a78>
   24bc8:	mov	r3, #1
   24bcc:	b	24bec <__assert_fail@plt+0x13a94>
   24bd0:	ldr	r3, [fp, #4]
   24bd4:	sub	r3, r3, #1
   24bd8:	str	r3, [fp, #4]
   24bdc:	ldr	r3, [fp, #4]
   24be0:	cmp	r3, #0
   24be4:	bne	24b9c <__assert_fail@plt+0x13a44>
   24be8:	mov	r3, #0
   24bec:	mov	r0, r3
   24bf0:	sub	sp, fp, #4
   24bf4:	pop	{fp, pc}
   24bf8:	andeq	r4, r3, r4, lsr r2
   24bfc:	ldrdeq	r0, [r0], -lr
   24c00:	andeq	r3, r3, r0, asr #19
   24c04:	andeq	r3, r3, r0, lsl #28
   24c08:	push	{fp, lr}
   24c0c:	add	fp, sp, #4
   24c10:	sub	sp, sp, #64	; 0x40
   24c14:	str	r0, [fp, #-56]	; 0xffffffc8
   24c18:	str	r1, [fp, #-60]	; 0xffffffc4
   24c1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c20:	ldr	r3, [r3, #4]
   24c24:	cmp	r3, #0
   24c28:	movne	r3, #1
   24c2c:	moveq	r3, #0
   24c30:	uxtb	r3, r3
   24c34:	mov	r2, r3
   24c38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c3c:	ldr	r3, [r3, #8]
   24c40:	ldr	r3, [r3]
   24c44:	and	r3, r3, r2
   24c48:	cmp	r3, #0
   24c4c:	bne	24c78 <__assert_fail@plt+0x13b20>
   24c50:	mov	r1, #2
   24c54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24c58:	bl	20608 <__assert_fail@plt+0xf4b0>
   24c5c:	mov	r3, r0
   24c60:	cmp	r3, #0
   24c64:	bne	24c70 <__assert_fail@plt+0x13b18>
   24c68:	mov	r3, #2
   24c6c:	b	24ef0 <__assert_fail@plt+0x13d98>
   24c70:	mov	r3, #0
   24c74:	b	24ef0 <__assert_fail@plt+0x13d98>
   24c78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c7c:	ldr	r3, [r3, #4]
   24c80:	cmp	r3, #0
   24c84:	bne	24c9c <__assert_fail@plt+0x13b44>
   24c88:	ldr	r3, [pc, #620]	; 24efc <__assert_fail@plt+0x13da4>
   24c8c:	ldr	r2, [pc, #620]	; 24f00 <__assert_fail@plt+0x13da8>
   24c90:	ldr	r1, [pc, #620]	; 24f04 <__assert_fail@plt+0x13dac>
   24c94:	ldr	r0, [pc, #620]	; 24f08 <__assert_fail@plt+0x13db0>
   24c98:	bl	11158 <__assert_fail@plt>
   24c9c:	mov	r1, #64	; 0x40
   24ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24ca4:	bl	20608 <__assert_fail@plt+0xf4b0>
   24ca8:	mov	r3, r0
   24cac:	cmp	r3, #0
   24cb0:	bge	24cd4 <__assert_fail@plt+0x13b7c>
   24cb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24cb8:	ldr	r3, [r3, #8]
   24cbc:	ldr	r3, [r3]
   24cc0:	lsr	r3, r3, #1
   24cc4:	ldr	r2, [pc, #576]	; 24f0c <__assert_fail@plt+0x13db4>
   24cc8:	lsr	r3, r2, r3
   24ccc:	and	r3, r3, #2
   24cd0:	b	24ef0 <__assert_fail@plt+0x13d98>
   24cd4:	ldr	r2, [pc, #564]	; 24f10 <__assert_fail@plt+0x13db8>
   24cd8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24cdc:	mov	r0, #0
   24ce0:	bl	22864 <__assert_fail@plt+0x1170c>
   24ce4:	mov	r3, r0
   24ce8:	cmp	r3, #1
   24cec:	beq	24cf8 <__assert_fail@plt+0x13ba0>
   24cf0:	mov	r3, #0
   24cf4:	b	24ef0 <__assert_fail@plt+0x13d98>
   24cf8:	ldr	r1, [pc, #532]	; 24f14 <__assert_fail@plt+0x13dbc>
   24cfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24d00:	bl	20608 <__assert_fail@plt+0xf4b0>
   24d04:	mov	r3, r0
   24d08:	cmp	r3, #0
   24d0c:	bge	24d18 <__assert_fail@plt+0x13bc0>
   24d10:	mov	r3, #2
   24d14:	b	24ef0 <__assert_fail@plt+0x13d98>
   24d18:	sub	r3, fp, #28
   24d1c:	mov	r0, r3
   24d20:	bl	1f318 <__assert_fail@plt+0xe1c0>
   24d24:	sub	r3, fp, #40	; 0x28
   24d28:	mov	r0, r3
   24d2c:	bl	1f318 <__assert_fail@plt+0xe1c0>
   24d30:	sub	r3, fp, #28
   24d34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24d38:	mov	r0, r3
   24d3c:	bl	20700 <__assert_fail@plt+0xf5a8>
   24d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   24d44:	ldr	r2, [fp, #-20]	; 0xffffffec
   24d48:	ldr	r2, [r2]
   24d4c:	sub	r2, r2, #1
   24d50:	str	r2, [r3]
   24d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   24d58:	mov	r1, #0
   24d5c:	mov	r0, r3
   24d60:	bl	1c7e0 <__assert_fail@plt+0xb688>
   24d64:	str	r0, [fp, #-16]
   24d68:	sub	r1, fp, #28
   24d6c:	sub	r3, fp, #40	; 0x28
   24d70:	ldr	r2, [fp, #-16]
   24d74:	mov	r0, r3
   24d78:	bl	21f10 <__assert_fail@plt+0x10db8>
   24d7c:	sub	r3, fp, #52	; 0x34
   24d80:	mov	r1, #2
   24d84:	mov	r0, r3
   24d88:	bl	1f6bc <__assert_fail@plt+0xe564>
   24d8c:	sub	r0, fp, #40	; 0x28
   24d90:	sub	r2, fp, #52	; 0x34
   24d94:	sub	r1, fp, #28
   24d98:	ldr	r3, [fp, #-16]
   24d9c:	str	r3, [sp]
   24da0:	mov	r3, r0
   24da4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24da8:	bl	24b14 <__assert_fail@plt+0x139bc>
   24dac:	mov	r3, r0
   24db0:	cmp	r3, #0
   24db4:	beq	24ddc <__assert_fail@plt+0x13c84>
   24db8:	sub	r3, fp, #52	; 0x34
   24dbc:	mov	r1, r3
   24dc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24dc4:	bl	248c4 <__assert_fail@plt+0x1376c>
   24dc8:	mov	r3, r0
   24dcc:	cmp	r3, #0
   24dd0:	beq	24ddc <__assert_fail@plt+0x13c84>
   24dd4:	mov	r3, #1
   24dd8:	b	24de0 <__assert_fail@plt+0x13c88>
   24ddc:	mov	r3, #0
   24de0:	str	r3, [fp, #-8]
   24de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24de8:	sub	r3, r3, #24
   24dec:	str	r3, [fp, #-60]	; 0xffffffc4
   24df0:	mov	r3, #0
   24df4:	str	r3, [fp, #-12]
   24df8:	b	24e94 <__assert_fail@plt+0x13d3c>
   24dfc:	ldr	r3, [fp, #-12]
   24e00:	ldr	r2, [fp, #-12]
   24e04:	mul	r2, r2, r3
   24e08:	ldr	r3, [fp, #-12]
   24e0c:	add	r3, r2, r3
   24e10:	add	r2, r3, #41	; 0x29
   24e14:	sub	r3, fp, #52	; 0x34
   24e18:	mov	r1, r2
   24e1c:	mov	r0, r3
   24e20:	bl	1f56c <__assert_fail@plt+0xe414>
   24e24:	sub	r2, fp, #28
   24e28:	sub	r3, fp, #52	; 0x34
   24e2c:	mov	r1, r2
   24e30:	mov	r0, r3
   24e34:	bl	2054c <__assert_fail@plt+0xf3f4>
   24e38:	mov	r3, r0
   24e3c:	cmp	r3, #0
   24e40:	blt	24e64 <__assert_fail@plt+0x13d0c>
   24e44:	ldr	r3, [fp, #-12]
   24e48:	cmp	r3, #29
   24e4c:	bgt	24ec4 <__assert_fail@plt+0x13d6c>
   24e50:	ldr	r3, [pc, #164]	; 24efc <__assert_fail@plt+0x13da4>
   24e54:	ldr	r2, [pc, #188]	; 24f18 <__assert_fail@plt+0x13dc0>
   24e58:	ldr	r1, [pc, #164]	; 24f04 <__assert_fail@plt+0x13dac>
   24e5c:	ldr	r0, [pc, #184]	; 24f1c <__assert_fail@plt+0x13dc4>
   24e60:	bl	11158 <__assert_fail@plt>
   24e64:	sub	r0, fp, #40	; 0x28
   24e68:	sub	r2, fp, #52	; 0x34
   24e6c:	sub	r1, fp, #28
   24e70:	ldr	r3, [fp, #-16]
   24e74:	str	r3, [sp]
   24e78:	mov	r3, r0
   24e7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   24e80:	bl	24b14 <__assert_fail@plt+0x139bc>
   24e84:	str	r0, [fp, #-8]
   24e88:	ldr	r3, [fp, #-12]
   24e8c:	add	r3, r3, #1
   24e90:	str	r3, [fp, #-12]
   24e94:	ldr	r2, [fp, #-12]
   24e98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24e9c:	cmp	r2, r3
   24ea0:	movlt	r3, #1
   24ea4:	movge	r3, #0
   24ea8:	uxtb	r3, r3
   24eac:	mov	r2, r3
   24eb0:	ldr	r3, [fp, #-8]
   24eb4:	and	r3, r3, r2
   24eb8:	cmp	r3, #0
   24ebc:	bne	24dfc <__assert_fail@plt+0x13ca4>
   24ec0:	b	24ec8 <__assert_fail@plt+0x13d70>
   24ec4:	nop			; (mov r0, r0)
   24ec8:	sub	r3, fp, #28
   24ecc:	mov	r0, r3
   24ed0:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24ed4:	sub	r3, fp, #40	; 0x28
   24ed8:	mov	r0, r3
   24edc:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24ee0:	sub	r3, fp, #52	; 0x34
   24ee4:	mov	r0, r3
   24ee8:	bl	1f3e0 <__assert_fail@plt+0xe288>
   24eec:	ldr	r3, [fp, #-8]
   24ef0:	mov	r0, r3
   24ef4:	sub	sp, fp, #4
   24ef8:	pop	{fp, pc}
   24efc:	andeq	r4, r3, r4, asr #4
   24f00:	andeq	r0, r0, r6, lsl #28
   24f04:	andeq	r3, r3, r0, asr #19
   24f08:	andeq	r3, r3, r8, lsl #28
   24f0c:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   24f10:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   24f14:	andeq	r0, r0, r1, asr #7
   24f18:	andeq	r0, r0, sp, lsr #28
   24f1c:	andeq	r3, r3, ip, lsl lr
   24f20:	push	{fp}		; (str fp, [sp, #-4]!)
   24f24:	add	fp, sp, #0
   24f28:	sub	sp, sp, #36	; 0x24
   24f2c:	str	r0, [fp, #-32]	; 0xffffffe0
   24f30:	str	r1, [fp, #-36]	; 0xffffffdc
   24f34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f38:	ldr	r3, [r3, #4]
   24f3c:	str	r3, [fp, #-12]
   24f40:	ldr	r3, [fp, #-12]
   24f44:	cmp	r3, #0
   24f48:	rsblt	r3, r3, #0
   24f4c:	str	r3, [fp, #-16]
   24f50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24f54:	lsr	r3, r3, #5
   24f58:	str	r3, [fp, #-8]
   24f5c:	ldr	r2, [fp, #-8]
   24f60:	ldr	r3, [fp, #-16]
   24f64:	cmp	r2, r3
   24f68:	blt	24f7c <__assert_fail@plt+0x13e24>
   24f6c:	ldr	r3, [fp, #-12]
   24f70:	lsr	r3, r3, #31
   24f74:	uxtb	r3, r3
   24f78:	b	2503c <__assert_fail@plt+0x13ee4>
   24f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24f80:	and	r3, r3, #31
   24f84:	str	r3, [fp, #-20]	; 0xffffffec
   24f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f8c:	ldr	r2, [r3, #8]
   24f90:	ldr	r3, [fp, #-8]
   24f94:	lsl	r3, r3, #2
   24f98:	add	r3, r2, r3
   24f9c:	ldr	r3, [r3]
   24fa0:	str	r3, [fp, #-24]	; 0xffffffe8
   24fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   24fac:	lsr	r3, r2, r3
   24fb0:	and	r3, r3, #1
   24fb4:	str	r3, [fp, #-28]	; 0xffffffe4
   24fb8:	ldr	r3, [fp, #-12]
   24fbc:	cmp	r3, #0
   24fc0:	bge	25038 <__assert_fail@plt+0x13ee0>
   24fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   24fc8:	cmp	r3, #0
   24fcc:	beq	25020 <__assert_fail@plt+0x13ec8>
   24fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   24fd4:	rsb	r3, r3, #32
   24fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24fdc:	lsl	r3, r2, r3
   24fe0:	cmp	r3, #0
   24fe4:	beq	25020 <__assert_fail@plt+0x13ec8>
   24fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24fec:	eor	r3, r3, #1
   24ff0:	b	2503c <__assert_fail@plt+0x13ee4>
   24ff4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24ff8:	ldr	r2, [r3, #8]
   24ffc:	ldr	r3, [fp, #-8]
   25000:	lsl	r3, r3, #2
   25004:	add	r3, r2, r3
   25008:	ldr	r3, [r3]
   2500c:	cmp	r3, #0
   25010:	beq	25020 <__assert_fail@plt+0x13ec8>
   25014:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25018:	eor	r3, r3, #1
   2501c:	b	2503c <__assert_fail@plt+0x13ee4>
   25020:	ldr	r3, [fp, #-8]
   25024:	sub	r3, r3, #1
   25028:	str	r3, [fp, #-8]
   2502c:	ldr	r3, [fp, #-8]
   25030:	cmp	r3, #0
   25034:	bge	24ff4 <__assert_fail@plt+0x13e9c>
   25038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2503c:	mov	r0, r3
   25040:	add	sp, fp, #0
   25044:	pop	{fp}		; (ldr fp, [sp], #4)
   25048:	bx	lr
   2504c:	push	{fp, lr}
   25050:	add	fp, sp, #4
   25054:	sub	sp, sp, #32
   25058:	str	r0, [fp, #-32]	; 0xffffffe0
   2505c:	str	r1, [fp, #-36]	; 0xffffffdc
   25060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25064:	ldr	r3, [r3, #4]
   25068:	cmp	r3, #0
   2506c:	rsblt	r3, r3, #0
   25070:	str	r3, [fp, #-8]
   25074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25078:	lsr	r3, r3, #5
   2507c:	str	r3, [fp, #-16]
   25080:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25084:	and	r3, r3, #31
   25088:	mov	r2, #1
   2508c:	lsl	r3, r2, r3
   25090:	str	r3, [fp, #-20]	; 0xffffffec
   25094:	ldr	r2, [fp, #-16]
   25098:	ldr	r3, [fp, #-8]
   2509c:	cmp	r2, r3
   250a0:	blt	2514c <__assert_fail@plt+0x13ff4>
   250a4:	ldr	r3, [fp, #-16]
   250a8:	add	r2, r3, #1
   250ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   250b0:	ldr	r3, [r3]
   250b4:	cmp	r2, r3
   250b8:	ble	250d8 <__assert_fail@plt+0x13f80>
   250bc:	ldr	r3, [fp, #-16]
   250c0:	add	r3, r3, #1
   250c4:	mov	r1, r3
   250c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   250cc:	bl	1f428 <__assert_fail@plt+0xe2d0>
   250d0:	mov	r3, r0
   250d4:	b	250e0 <__assert_fail@plt+0x13f88>
   250d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   250dc:	ldr	r3, [r3, #8]
   250e0:	str	r3, [fp, #-24]	; 0xffffffe8
   250e4:	ldr	r3, [fp, #-16]
   250e8:	lsl	r3, r3, #2
   250ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   250f0:	add	r3, r2, r3
   250f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   250f8:	str	r2, [r3]
   250fc:	ldr	r3, [fp, #-8]
   25100:	str	r3, [fp, #-12]
   25104:	b	2512c <__assert_fail@plt+0x13fd4>
   25108:	ldr	r3, [fp, #-12]
   2510c:	lsl	r3, r3, #2
   25110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25114:	add	r3, r2, r3
   25118:	mov	r2, #0
   2511c:	str	r2, [r3]
   25120:	ldr	r3, [fp, #-12]
   25124:	add	r3, r3, #1
   25128:	str	r3, [fp, #-12]
   2512c:	ldr	r2, [fp, #-12]
   25130:	ldr	r3, [fp, #-16]
   25134:	cmp	r2, r3
   25138:	blt	25108 <__assert_fail@plt+0x13fb0>
   2513c:	ldr	r3, [fp, #-16]
   25140:	add	r3, r3, #1
   25144:	str	r3, [fp, #-8]
   25148:	b	251fc <__assert_fail@plt+0x140a4>
   2514c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25150:	ldr	r3, [r3, #8]
   25154:	str	r3, [fp, #-24]	; 0xffffffe8
   25158:	ldr	r3, [fp, #-16]
   2515c:	lsl	r3, r3, #2
   25160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25164:	add	r0, r2, r3
   25168:	ldr	r3, [fp, #-16]
   2516c:	lsl	r3, r3, #2
   25170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25174:	add	r1, r2, r3
   25178:	ldr	r2, [fp, #-8]
   2517c:	ldr	r3, [fp, #-16]
   25180:	sub	r2, r2, r3
   25184:	ldr	r3, [fp, #-20]	; 0xffffffec
   25188:	bl	1b59c <__assert_fail@plt+0xa444>
   2518c:	str	r0, [fp, #-28]	; 0xffffffe4
   25190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25194:	cmp	r3, #0
   25198:	beq	251fc <__assert_fail@plt+0x140a4>
   2519c:	ldr	r3, [fp, #-8]
   251a0:	add	r2, r3, #1
   251a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251a8:	ldr	r3, [r3]
   251ac:	cmp	r2, r3
   251b0:	ble	251d0 <__assert_fail@plt+0x14078>
   251b4:	ldr	r3, [fp, #-8]
   251b8:	add	r3, r3, #1
   251bc:	mov	r1, r3
   251c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251c4:	bl	1f428 <__assert_fail@plt+0xe2d0>
   251c8:	mov	r3, r0
   251cc:	b	251d8 <__assert_fail@plt+0x14080>
   251d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251d4:	ldr	r3, [r3, #8]
   251d8:	str	r3, [fp, #-24]	; 0xffffffe8
   251dc:	ldr	r3, [fp, #-8]
   251e0:	add	r2, r3, #1
   251e4:	str	r2, [fp, #-8]
   251e8:	lsl	r3, r3, #2
   251ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   251f0:	add	r3, r2, r3
   251f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   251f8:	str	r2, [r3]
   251fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25200:	ldr	r3, [r3, #4]
   25204:	cmp	r3, #0
   25208:	bge	25218 <__assert_fail@plt+0x140c0>
   2520c:	ldr	r3, [fp, #-8]
   25210:	rsb	r3, r3, #0
   25214:	b	2521c <__assert_fail@plt+0x140c4>
   25218:	ldr	r3, [fp, #-8]
   2521c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25220:	str	r3, [r2, #4]
   25224:	nop			; (mov r0, r0)
   25228:	sub	sp, fp, #4
   2522c:	pop	{fp, pc}
   25230:	push	{fp, lr}
   25234:	add	fp, sp, #4
   25238:	sub	sp, sp, #32
   2523c:	str	r0, [fp, #-32]	; 0xffffffe0
   25240:	str	r1, [fp, #-36]	; 0xffffffdc
   25244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25248:	ldr	r3, [r3, #4]
   2524c:	cmp	r3, #0
   25250:	rsblt	r3, r3, #0
   25254:	str	r3, [fp, #-8]
   25258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2525c:	ldr	r3, [r3, #8]
   25260:	str	r3, [fp, #-12]
   25264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25268:	lsr	r3, r3, #5
   2526c:	str	r3, [fp, #-16]
   25270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25274:	and	r3, r3, #31
   25278:	mov	r2, #1
   2527c:	lsl	r3, r2, r3
   25280:	str	r3, [fp, #-20]	; 0xffffffec
   25284:	ldr	r2, [fp, #-16]
   25288:	ldr	r3, [fp, #-8]
   2528c:	cmp	r2, r3
   25290:	blt	252a8 <__assert_fail@plt+0x14150>
   25294:	ldr	r3, [pc, #168]	; 25344 <__assert_fail@plt+0x141ec>
   25298:	ldr	r2, [pc, #168]	; 25348 <__assert_fail@plt+0x141f0>
   2529c:	ldr	r1, [pc, #168]	; 2534c <__assert_fail@plt+0x141f4>
   252a0:	ldr	r0, [pc, #168]	; 25350 <__assert_fail@plt+0x141f8>
   252a4:	bl	11158 <__assert_fail@plt>
   252a8:	ldr	r3, [fp, #-16]
   252ac:	lsl	r3, r3, #2
   252b0:	ldr	r2, [fp, #-12]
   252b4:	add	r0, r2, r3
   252b8:	ldr	r3, [fp, #-16]
   252bc:	lsl	r3, r3, #2
   252c0:	ldr	r2, [fp, #-12]
   252c4:	add	r1, r2, r3
   252c8:	ldr	r2, [fp, #-8]
   252cc:	ldr	r3, [fp, #-16]
   252d0:	sub	r2, r2, r3
   252d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   252d8:	bl	1b838 <__assert_fail@plt+0xa6e0>
   252dc:	str	r0, [fp, #-24]	; 0xffffffe8
   252e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   252e4:	cmp	r3, #0
   252e8:	beq	25300 <__assert_fail@plt+0x141a8>
   252ec:	ldr	r3, [pc, #80]	; 25344 <__assert_fail@plt+0x141ec>
   252f0:	ldr	r2, [pc, #92]	; 25354 <__assert_fail@plt+0x141fc>
   252f4:	ldr	r1, [pc, #80]	; 2534c <__assert_fail@plt+0x141f4>
   252f8:	ldr	r0, [pc, #88]	; 25358 <__assert_fail@plt+0x14200>
   252fc:	bl	11158 <__assert_fail@plt>
   25300:	ldr	r1, [fp, #-8]
   25304:	ldr	r0, [fp, #-12]
   25308:	bl	1b4a0 <__assert_fail@plt+0xa348>
   2530c:	str	r0, [fp, #-8]
   25310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25314:	ldr	r3, [r3, #4]
   25318:	cmp	r3, #0
   2531c:	bge	2532c <__assert_fail@plt+0x141d4>
   25320:	ldr	r3, [fp, #-8]
   25324:	rsb	r3, r3, #0
   25328:	b	25330 <__assert_fail@plt+0x141d8>
   2532c:	ldr	r3, [fp, #-8]
   25330:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25334:	str	r3, [r2, #4]
   25338:	nop			; (mov r0, r0)
   2533c:	sub	sp, fp, #4
   25340:	pop	{fp, pc}
   25344:	andeq	r4, r3, r8, asr r2
   25348:	andeq	r0, r0, r9, lsr #29
   2534c:	andeq	r3, r3, r0, asr #19
   25350:	andeq	r3, r3, r4, lsr #28
   25354:	andeq	r0, r0, ip, lsr #29
   25358:	andeq	r3, r3, r8, ror #23
   2535c:	push	{fp, lr}
   25360:	add	fp, sp, #4
   25364:	sub	sp, sp, #8
   25368:	str	r0, [fp, #-8]
   2536c:	str	r1, [fp, #-12]
   25370:	ldr	r1, [fp, #-12]
   25374:	ldr	r0, [fp, #-8]
   25378:	bl	24f20 <__assert_fail@plt+0x13dc8>
   2537c:	mov	r3, r0
   25380:	cmp	r3, #0
   25384:	bne	253b4 <__assert_fail@plt+0x1425c>
   25388:	ldr	r3, [fp, #-8]
   2538c:	ldr	r3, [r3, #4]
   25390:	cmp	r3, #0
   25394:	blt	253a8 <__assert_fail@plt+0x14250>
   25398:	ldr	r1, [fp, #-12]
   2539c:	ldr	r0, [fp, #-8]
   253a0:	bl	2504c <__assert_fail@plt+0x13ef4>
   253a4:	b	253b4 <__assert_fail@plt+0x1425c>
   253a8:	ldr	r1, [fp, #-12]
   253ac:	ldr	r0, [fp, #-8]
   253b0:	bl	25230 <__assert_fail@plt+0x140d8>
   253b4:	nop			; (mov r0, r0)
   253b8:	sub	sp, fp, #4
   253bc:	pop	{fp, pc}
   253c0:	push	{fp, lr}
   253c4:	add	fp, sp, #4
   253c8:	sub	sp, sp, #8
   253cc:	str	r0, [fp, #-8]
   253d0:	str	r1, [fp, #-12]
   253d4:	ldr	r1, [fp, #-12]
   253d8:	ldr	r0, [fp, #-8]
   253dc:	bl	24f20 <__assert_fail@plt+0x13dc8>
   253e0:	mov	r3, r0
   253e4:	cmp	r3, #0
   253e8:	beq	25418 <__assert_fail@plt+0x142c0>
   253ec:	ldr	r3, [fp, #-8]
   253f0:	ldr	r3, [r3, #4]
   253f4:	cmp	r3, #0
   253f8:	blt	2540c <__assert_fail@plt+0x142b4>
   253fc:	ldr	r1, [fp, #-12]
   25400:	ldr	r0, [fp, #-8]
   25404:	bl	25230 <__assert_fail@plt+0x140d8>
   25408:	b	25418 <__assert_fail@plt+0x142c0>
   2540c:	ldr	r1, [fp, #-12]
   25410:	ldr	r0, [fp, #-8]
   25414:	bl	2504c <__assert_fail@plt+0x13ef4>
   25418:	nop			; (mov r0, r0)
   2541c:	sub	sp, fp, #4
   25420:	pop	{fp, pc}
   25424:	push	{fp, lr}
   25428:	add	fp, sp, #4
   2542c:	sub	sp, sp, #8
   25430:	str	r0, [fp, #-8]
   25434:	str	r1, [fp, #-12]
   25438:	ldr	r1, [fp, #-12]
   2543c:	ldr	r0, [fp, #-8]
   25440:	bl	24f20 <__assert_fail@plt+0x13dc8>
   25444:	mov	r2, r0
   25448:	ldr	r3, [fp, #-8]
   2544c:	ldr	r3, [r3, #4]
   25450:	lsr	r3, r3, #31
   25454:	uxtb	r3, r3
   25458:	cmp	r2, r3
   2545c:	beq	25470 <__assert_fail@plt+0x14318>
   25460:	ldr	r1, [fp, #-12]
   25464:	ldr	r0, [fp, #-8]
   25468:	bl	25230 <__assert_fail@plt+0x140d8>
   2546c:	b	2547c <__assert_fail@plt+0x14324>
   25470:	ldr	r1, [fp, #-12]
   25474:	ldr	r0, [fp, #-8]
   25478:	bl	2504c <__assert_fail@plt+0x13ef4>
   2547c:	nop			; (mov r0, r0)
   25480:	sub	sp, fp, #4
   25484:	pop	{fp, pc}
   25488:	push	{fp, lr}
   2548c:	add	fp, sp, #4
   25490:	sub	sp, sp, #8
   25494:	str	r0, [fp, #-8]
   25498:	str	r1, [fp, #-12]
   2549c:	mov	r2, #1
   254a0:	ldr	r1, [fp, #-12]
   254a4:	ldr	r0, [fp, #-8]
   254a8:	bl	20820 <__assert_fail@plt+0xf6c8>
   254ac:	ldr	r1, [fp, #-8]
   254b0:	ldr	r0, [fp, #-8]
   254b4:	bl	20744 <__assert_fail@plt+0xf5ec>
   254b8:	nop			; (mov r0, r0)
   254bc:	sub	sp, fp, #4
   254c0:	pop	{fp, pc}
   254c4:	push	{fp, lr}
   254c8:	add	fp, sp, #4
   254cc:	sub	sp, sp, #88	; 0x58
   254d0:	str	r0, [fp, #-80]	; 0xffffffb0
   254d4:	str	r1, [fp, #-84]	; 0xffffffac
   254d8:	str	r2, [fp, #-88]	; 0xffffffa8
   254dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   254e0:	ldr	r3, [r3, #4]
   254e4:	cmp	r3, #0
   254e8:	rsblt	r3, r3, #0
   254ec:	str	r3, [fp, #-8]
   254f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   254f4:	ldr	r3, [r3, #4]
   254f8:	cmp	r3, #0
   254fc:	rsblt	r3, r3, #0
   25500:	str	r3, [fp, #-12]
   25504:	ldr	r2, [fp, #-8]
   25508:	ldr	r3, [fp, #-12]
   2550c:	cmp	r2, r3
   25510:	bge	25544 <__assert_fail@plt+0x143ec>
   25514:	ldr	r3, [fp, #-84]	; 0xffffffac
   25518:	str	r3, [fp, #-36]	; 0xffffffdc
   2551c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25520:	str	r3, [fp, #-84]	; 0xffffffac
   25524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25528:	str	r3, [fp, #-88]	; 0xffffffa8
   2552c:	ldr	r3, [fp, #-8]
   25530:	str	r3, [fp, #-40]	; 0xffffffd8
   25534:	ldr	r3, [fp, #-12]
   25538:	str	r3, [fp, #-8]
   2553c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25540:	str	r3, [fp, #-12]
   25544:	ldr	r3, [fp, #-12]
   25548:	cmp	r3, #0
   2554c:	bne	25560 <__assert_fail@plt+0x14408>
   25550:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25554:	mov	r2, #0
   25558:	str	r2, [r3, #4]
   2555c:	b	25870 <__assert_fail@plt+0x14718>
   25560:	ldr	r3, [fp, #-84]	; 0xffffffac
   25564:	ldr	r3, [r3, #4]
   25568:	lsr	r3, r3, #31
   2556c:	uxtb	r3, r3
   25570:	str	r3, [fp, #-24]	; 0xffffffe8
   25574:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25578:	ldr	r3, [r3, #4]
   2557c:	lsr	r3, r3, #31
   25580:	uxtb	r3, r3
   25584:	str	r3, [fp, #-28]	; 0xffffffe4
   25588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2558c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25590:	and	r3, r3, r2
   25594:	str	r3, [fp, #-32]	; 0xffffffe0
   25598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2559c:	rsb	r3, r3, #0
   255a0:	str	r3, [fp, #-44]	; 0xffffffd4
   255a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255a8:	rsb	r3, r3, #0
   255ac:	str	r3, [fp, #-48]	; 0xffffffd0
   255b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   255b4:	rsb	r3, r3, #0
   255b8:	str	r3, [fp, #-52]	; 0xffffffcc
   255bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   255c0:	cmp	r3, #0
   255c4:	beq	255d0 <__assert_fail@plt+0x14478>
   255c8:	ldr	r3, [fp, #-8]
   255cc:	b	255d4 <__assert_fail@plt+0x1447c>
   255d0:	ldr	r3, [fp, #-12]
   255d4:	str	r3, [fp, #-16]
   255d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   255dc:	ldr	r3, [fp, #-16]
   255e0:	add	r2, r2, r3
   255e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   255e8:	ldr	r3, [r3]
   255ec:	cmp	r2, r3
   255f0:	ble	25614 <__assert_fail@plt+0x144bc>
   255f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   255f8:	ldr	r3, [fp, #-16]
   255fc:	add	r3, r2, r3
   25600:	mov	r1, r3
   25604:	ldr	r0, [fp, #-80]	; 0xffffffb0
   25608:	bl	1f428 <__assert_fail@plt+0xe2d0>
   2560c:	mov	r3, r0
   25610:	b	2561c <__assert_fail@plt+0x144c4>
   25614:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25618:	ldr	r3, [r3, #8]
   2561c:	str	r3, [fp, #-56]	; 0xffffffc8
   25620:	ldr	r3, [fp, #-84]	; 0xffffffac
   25624:	ldr	r3, [r3, #8]
   25628:	str	r3, [fp, #-60]	; 0xffffffc4
   2562c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25630:	ldr	r3, [r3, #8]
   25634:	str	r3, [fp, #-64]	; 0xffffffc0
   25638:	mov	r3, #0
   2563c:	str	r3, [fp, #-20]	; 0xffffffec
   25640:	ldr	r3, [fp, #-20]	; 0xffffffec
   25644:	lsl	r3, r3, #2
   25648:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2564c:	add	r3, r2, r3
   25650:	ldr	r2, [r3]
   25654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25658:	eor	r2, r2, r3
   2565c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25660:	add	r3, r2, r3
   25664:	str	r3, [fp, #-68]	; 0xffffffbc
   25668:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2566c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25670:	cmp	r2, r3
   25674:	movcc	r3, #1
   25678:	movcs	r3, #0
   2567c:	uxtb	r3, r3
   25680:	str	r3, [fp, #-24]	; 0xffffffe8
   25684:	ldr	r3, [fp, #-20]	; 0xffffffec
   25688:	lsl	r3, r3, #2
   2568c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25690:	add	r3, r2, r3
   25694:	ldr	r2, [r3]
   25698:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2569c:	eor	r2, r2, r3
   256a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   256a4:	add	r3, r2, r3
   256a8:	str	r3, [fp, #-72]	; 0xffffffb8
   256ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   256b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   256b4:	cmp	r2, r3
   256b8:	movcc	r3, #1
   256bc:	movcs	r3, #0
   256c0:	uxtb	r3, r3
   256c4:	str	r3, [fp, #-28]	; 0xffffffe4
   256c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   256cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   256d0:	and	r2, r2, r3
   256d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   256d8:	eor	r2, r2, r3
   256dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   256e0:	add	r3, r2, r3
   256e4:	str	r3, [fp, #-76]	; 0xffffffb4
   256e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   256ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   256f0:	cmp	r2, r3
   256f4:	movcc	r3, #1
   256f8:	movcs	r3, #0
   256fc:	uxtb	r3, r3
   25700:	str	r3, [fp, #-32]	; 0xffffffe0
   25704:	ldr	r3, [fp, #-20]	; 0xffffffec
   25708:	lsl	r3, r3, #2
   2570c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25710:	add	r3, r2, r3
   25714:	ldr	r2, [fp, #-76]	; 0xffffffb4
   25718:	str	r2, [r3]
   2571c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25720:	add	r3, r3, #1
   25724:	str	r3, [fp, #-20]	; 0xffffffec
   25728:	ldr	r2, [fp, #-20]	; 0xffffffec
   2572c:	ldr	r3, [fp, #-12]
   25730:	cmp	r2, r3
   25734:	blt	25640 <__assert_fail@plt+0x144e8>
   25738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2573c:	cmp	r3, #0
   25740:	beq	257fc <__assert_fail@plt+0x146a4>
   25744:	ldr	r3, [pc, #300]	; 25878 <__assert_fail@plt+0x14720>
   25748:	ldr	r2, [pc, #300]	; 2587c <__assert_fail@plt+0x14724>
   2574c:	ldr	r1, [pc, #300]	; 25880 <__assert_fail@plt+0x14728>
   25750:	ldr	r0, [pc, #300]	; 25884 <__assert_fail@plt+0x1472c>
   25754:	bl	11158 <__assert_fail@plt>
   25758:	ldr	r3, [fp, #-20]	; 0xffffffec
   2575c:	lsl	r3, r3, #2
   25760:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25764:	add	r3, r2, r3
   25768:	ldr	r2, [r3]
   2576c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25770:	eor	r2, r2, r3
   25774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25778:	add	r3, r2, r3
   2577c:	str	r3, [fp, #-68]	; 0xffffffbc
   25780:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25788:	cmp	r2, r3
   2578c:	movcc	r3, #1
   25790:	movcs	r3, #0
   25794:	uxtb	r3, r3
   25798:	str	r3, [fp, #-24]	; 0xffffffe8
   2579c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   257a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   257a4:	and	r2, r2, r3
   257a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   257ac:	eor	r2, r2, r3
   257b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257b4:	add	r3, r2, r3
   257b8:	str	r3, [fp, #-76]	; 0xffffffb4
   257bc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   257c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257c4:	cmp	r2, r3
   257c8:	movcc	r3, #1
   257cc:	movcs	r3, #0
   257d0:	uxtb	r3, r3
   257d4:	str	r3, [fp, #-32]	; 0xffffffe0
   257d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   257dc:	lsl	r3, r3, #2
   257e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   257e4:	add	r3, r2, r3
   257e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   257ec:	str	r2, [r3]
   257f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   257f4:	add	r3, r3, #1
   257f8:	str	r3, [fp, #-20]	; 0xffffffec
   257fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   25800:	ldr	r3, [fp, #-16]
   25804:	cmp	r2, r3
   25808:	blt	25758 <__assert_fail@plt+0x14600>
   2580c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25810:	cmp	r3, #0
   25814:	beq	2583c <__assert_fail@plt+0x146e4>
   25818:	ldr	r3, [fp, #-16]
   2581c:	add	r2, r3, #1
   25820:	str	r2, [fp, #-16]
   25824:	lsl	r3, r3, #2
   25828:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2582c:	add	r3, r2, r3
   25830:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25834:	str	r2, [r3]
   25838:	b	2584c <__assert_fail@plt+0x146f4>
   2583c:	ldr	r1, [fp, #-16]
   25840:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25844:	bl	1b4a0 <__assert_fail@plt+0xa348>
   25848:	str	r0, [fp, #-16]
   2584c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25850:	cmp	r3, #0
   25854:	beq	25864 <__assert_fail@plt+0x1470c>
   25858:	ldr	r3, [fp, #-16]
   2585c:	rsb	r3, r3, #0
   25860:	b	25868 <__assert_fail@plt+0x14710>
   25864:	ldr	r3, [fp, #-16]
   25868:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2586c:	str	r3, [r2, #4]
   25870:	sub	sp, fp, #4
   25874:	pop	{fp, pc}
   25878:	andeq	r4, r3, r8, ror #4
   2587c:	andeq	r0, r0, lr, lsl #30
   25880:	andeq	r3, r3, r0, asr #19
   25884:	andeq	r3, r3, r4, lsr lr
   25888:	push	{fp, lr}
   2588c:	add	fp, sp, #4
   25890:	sub	sp, sp, #88	; 0x58
   25894:	str	r0, [fp, #-80]	; 0xffffffb0
   25898:	str	r1, [fp, #-84]	; 0xffffffac
   2589c:	str	r2, [fp, #-88]	; 0xffffffa8
   258a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   258a4:	ldr	r3, [r3, #4]
   258a8:	cmp	r3, #0
   258ac:	rsblt	r3, r3, #0
   258b0:	str	r3, [fp, #-8]
   258b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   258b8:	ldr	r3, [r3, #4]
   258bc:	cmp	r3, #0
   258c0:	rsblt	r3, r3, #0
   258c4:	str	r3, [fp, #-12]
   258c8:	ldr	r2, [fp, #-8]
   258cc:	ldr	r3, [fp, #-12]
   258d0:	cmp	r2, r3
   258d4:	bge	25908 <__assert_fail@plt+0x147b0>
   258d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   258dc:	str	r3, [fp, #-36]	; 0xffffffdc
   258e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   258e4:	str	r3, [fp, #-84]	; 0xffffffac
   258e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   258ec:	str	r3, [fp, #-88]	; 0xffffffa8
   258f0:	ldr	r3, [fp, #-8]
   258f4:	str	r3, [fp, #-40]	; 0xffffffd8
   258f8:	ldr	r3, [fp, #-12]
   258fc:	str	r3, [fp, #-8]
   25900:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25904:	str	r3, [fp, #-12]
   25908:	ldr	r3, [fp, #-12]
   2590c:	cmp	r3, #0
   25910:	bne	25924 <__assert_fail@plt+0x147cc>
   25914:	ldr	r1, [fp, #-84]	; 0xffffffac
   25918:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2591c:	bl	1f5e8 <__assert_fail@plt+0xe490>
   25920:	b	25c34 <__assert_fail@plt+0x14adc>
   25924:	ldr	r3, [fp, #-84]	; 0xffffffac
   25928:	ldr	r3, [r3, #4]
   2592c:	lsr	r3, r3, #31
   25930:	uxtb	r3, r3
   25934:	str	r3, [fp, #-24]	; 0xffffffe8
   25938:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2593c:	ldr	r3, [r3, #4]
   25940:	lsr	r3, r3, #31
   25944:	uxtb	r3, r3
   25948:	str	r3, [fp, #-28]	; 0xffffffe4
   2594c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25954:	orr	r3, r2, r3
   25958:	str	r3, [fp, #-32]	; 0xffffffe0
   2595c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25960:	rsb	r3, r3, #0
   25964:	str	r3, [fp, #-44]	; 0xffffffd4
   25968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2596c:	rsb	r3, r3, #0
   25970:	str	r3, [fp, #-48]	; 0xffffffd0
   25974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25978:	rsb	r3, r3, #0
   2597c:	str	r3, [fp, #-52]	; 0xffffffcc
   25980:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25984:	cmp	r3, #0
   25988:	beq	25994 <__assert_fail@plt+0x1483c>
   2598c:	ldr	r3, [fp, #-12]
   25990:	b	25998 <__assert_fail@plt+0x14840>
   25994:	ldr	r3, [fp, #-8]
   25998:	str	r3, [fp, #-16]
   2599c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   259a0:	ldr	r3, [fp, #-16]
   259a4:	add	r2, r2, r3
   259a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   259ac:	ldr	r3, [r3]
   259b0:	cmp	r2, r3
   259b4:	ble	259d8 <__assert_fail@plt+0x14880>
   259b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   259bc:	ldr	r3, [fp, #-16]
   259c0:	add	r3, r2, r3
   259c4:	mov	r1, r3
   259c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   259cc:	bl	1f428 <__assert_fail@plt+0xe2d0>
   259d0:	mov	r3, r0
   259d4:	b	259e0 <__assert_fail@plt+0x14888>
   259d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   259dc:	ldr	r3, [r3, #8]
   259e0:	str	r3, [fp, #-56]	; 0xffffffc8
   259e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   259e8:	ldr	r3, [r3, #8]
   259ec:	str	r3, [fp, #-60]	; 0xffffffc4
   259f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   259f4:	ldr	r3, [r3, #8]
   259f8:	str	r3, [fp, #-64]	; 0xffffffc0
   259fc:	mov	r3, #0
   25a00:	str	r3, [fp, #-20]	; 0xffffffec
   25a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a08:	lsl	r3, r3, #2
   25a0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25a10:	add	r3, r2, r3
   25a14:	ldr	r2, [r3]
   25a18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25a1c:	eor	r2, r2, r3
   25a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25a24:	add	r3, r2, r3
   25a28:	str	r3, [fp, #-68]	; 0xffffffbc
   25a2c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25a34:	cmp	r2, r3
   25a38:	movcc	r3, #1
   25a3c:	movcs	r3, #0
   25a40:	uxtb	r3, r3
   25a44:	str	r3, [fp, #-24]	; 0xffffffe8
   25a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a4c:	lsl	r3, r3, #2
   25a50:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25a54:	add	r3, r2, r3
   25a58:	ldr	r2, [r3]
   25a5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25a60:	eor	r2, r2, r3
   25a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25a68:	add	r3, r2, r3
   25a6c:	str	r3, [fp, #-72]	; 0xffffffb8
   25a70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25a78:	cmp	r2, r3
   25a7c:	movcc	r3, #1
   25a80:	movcs	r3, #0
   25a84:	uxtb	r3, r3
   25a88:	str	r3, [fp, #-28]	; 0xffffffe4
   25a8c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25a90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   25a94:	orr	r2, r2, r3
   25a98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25a9c:	eor	r2, r2, r3
   25aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25aa4:	add	r3, r2, r3
   25aa8:	str	r3, [fp, #-76]	; 0xffffffb4
   25aac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   25ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25ab4:	cmp	r2, r3
   25ab8:	movcc	r3, #1
   25abc:	movcs	r3, #0
   25ac0:	uxtb	r3, r3
   25ac4:	str	r3, [fp, #-32]	; 0xffffffe0
   25ac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25acc:	lsl	r3, r3, #2
   25ad0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25ad4:	add	r3, r2, r3
   25ad8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   25adc:	str	r2, [r3]
   25ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ae4:	add	r3, r3, #1
   25ae8:	str	r3, [fp, #-20]	; 0xffffffec
   25aec:	ldr	r2, [fp, #-20]	; 0xffffffec
   25af0:	ldr	r3, [fp, #-12]
   25af4:	cmp	r2, r3
   25af8:	blt	25a04 <__assert_fail@plt+0x148ac>
   25afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25b00:	cmp	r3, #0
   25b04:	beq	25bc0 <__assert_fail@plt+0x14a68>
   25b08:	ldr	r3, [pc, #300]	; 25c3c <__assert_fail@plt+0x14ae4>
   25b0c:	ldr	r2, [pc, #300]	; 25c40 <__assert_fail@plt+0x14ae8>
   25b10:	ldr	r1, [pc, #300]	; 25c44 <__assert_fail@plt+0x14aec>
   25b14:	ldr	r0, [pc, #300]	; 25c48 <__assert_fail@plt+0x14af0>
   25b18:	bl	11158 <__assert_fail@plt>
   25b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b20:	lsl	r3, r3, #2
   25b24:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25b28:	add	r3, r2, r3
   25b2c:	ldr	r2, [r3]
   25b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25b34:	eor	r2, r2, r3
   25b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b3c:	add	r3, r2, r3
   25b40:	str	r3, [fp, #-68]	; 0xffffffbc
   25b44:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b4c:	cmp	r2, r3
   25b50:	movcc	r3, #1
   25b54:	movcs	r3, #0
   25b58:	uxtb	r3, r3
   25b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   25b60:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25b68:	orr	r2, r2, r3
   25b6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25b70:	eor	r2, r2, r3
   25b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25b78:	add	r3, r2, r3
   25b7c:	str	r3, [fp, #-76]	; 0xffffffb4
   25b80:	ldr	r2, [fp, #-76]	; 0xffffffb4
   25b84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25b88:	cmp	r2, r3
   25b8c:	movcc	r3, #1
   25b90:	movcs	r3, #0
   25b94:	uxtb	r3, r3
   25b98:	str	r3, [fp, #-32]	; 0xffffffe0
   25b9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ba0:	lsl	r3, r3, #2
   25ba4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25ba8:	add	r3, r2, r3
   25bac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   25bb0:	str	r2, [r3]
   25bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   25bb8:	add	r3, r3, #1
   25bbc:	str	r3, [fp, #-20]	; 0xffffffec
   25bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   25bc4:	ldr	r3, [fp, #-16]
   25bc8:	cmp	r2, r3
   25bcc:	blt	25b1c <__assert_fail@plt+0x149c4>
   25bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25bd4:	cmp	r3, #0
   25bd8:	beq	25c00 <__assert_fail@plt+0x14aa8>
   25bdc:	ldr	r3, [fp, #-16]
   25be0:	add	r2, r3, #1
   25be4:	str	r2, [fp, #-16]
   25be8:	lsl	r3, r3, #2
   25bec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25bf0:	add	r3, r2, r3
   25bf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25bf8:	str	r2, [r3]
   25bfc:	b	25c10 <__assert_fail@plt+0x14ab8>
   25c00:	ldr	r1, [fp, #-16]
   25c04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   25c08:	bl	1b4a0 <__assert_fail@plt+0xa348>
   25c0c:	str	r0, [fp, #-16]
   25c10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25c14:	cmp	r3, #0
   25c18:	beq	25c28 <__assert_fail@plt+0x14ad0>
   25c1c:	ldr	r3, [fp, #-16]
   25c20:	rsb	r3, r3, #0
   25c24:	b	25c2c <__assert_fail@plt+0x14ad4>
   25c28:	ldr	r3, [fp, #-16]
   25c2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   25c30:	str	r3, [r2, #4]
   25c34:	sub	sp, fp, #4
   25c38:	pop	{fp, pc}
   25c3c:	andeq	r4, r3, r0, ror r2
   25c40:	andeq	r0, r0, r7, asr pc
   25c44:	andeq	r3, r3, r0, asr #19
   25c48:	andeq	r3, r3, r4, lsr lr
   25c4c:	push	{fp, lr}
   25c50:	add	fp, sp, #4
   25c54:	sub	sp, sp, #88	; 0x58
   25c58:	str	r0, [fp, #-80]	; 0xffffffb0
   25c5c:	str	r1, [fp, #-84]	; 0xffffffac
   25c60:	str	r2, [fp, #-88]	; 0xffffffa8
   25c64:	ldr	r3, [fp, #-84]	; 0xffffffac
   25c68:	ldr	r3, [r3, #4]
   25c6c:	cmp	r3, #0
   25c70:	rsblt	r3, r3, #0
   25c74:	str	r3, [fp, #-8]
   25c78:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25c7c:	ldr	r3, [r3, #4]
   25c80:	cmp	r3, #0
   25c84:	rsblt	r3, r3, #0
   25c88:	str	r3, [fp, #-12]
   25c8c:	ldr	r2, [fp, #-8]
   25c90:	ldr	r3, [fp, #-12]
   25c94:	cmp	r2, r3
   25c98:	bge	25ccc <__assert_fail@plt+0x14b74>
   25c9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   25ca0:	str	r3, [fp, #-32]	; 0xffffffe0
   25ca4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25ca8:	str	r3, [fp, #-84]	; 0xffffffac
   25cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25cb0:	str	r3, [fp, #-88]	; 0xffffffa8
   25cb4:	ldr	r3, [fp, #-8]
   25cb8:	str	r3, [fp, #-36]	; 0xffffffdc
   25cbc:	ldr	r3, [fp, #-12]
   25cc0:	str	r3, [fp, #-8]
   25cc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25cc8:	str	r3, [fp, #-12]
   25ccc:	ldr	r3, [fp, #-12]
   25cd0:	cmp	r3, #0
   25cd4:	bne	25ce8 <__assert_fail@plt+0x14b90>
   25cd8:	ldr	r1, [fp, #-84]	; 0xffffffac
   25cdc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   25ce0:	bl	1f5e8 <__assert_fail@plt+0xe490>
   25ce4:	b	25fd4 <__assert_fail@plt+0x14e7c>
   25ce8:	ldr	r3, [fp, #-84]	; 0xffffffac
   25cec:	ldr	r3, [r3, #4]
   25cf0:	lsr	r3, r3, #31
   25cf4:	uxtb	r3, r3
   25cf8:	str	r3, [fp, #-20]	; 0xffffffec
   25cfc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25d00:	ldr	r3, [r3, #4]
   25d04:	lsr	r3, r3, #31
   25d08:	uxtb	r3, r3
   25d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   25d10:	ldr	r2, [fp, #-20]	; 0xffffffec
   25d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d18:	eor	r3, r3, r2
   25d1c:	str	r3, [fp, #-28]	; 0xffffffe4
   25d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   25d24:	rsb	r3, r3, #0
   25d28:	str	r3, [fp, #-40]	; 0xffffffd8
   25d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d30:	rsb	r3, r3, #0
   25d34:	str	r3, [fp, #-44]	; 0xffffffd4
   25d38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25d3c:	rsb	r3, r3, #0
   25d40:	str	r3, [fp, #-48]	; 0xffffffd0
   25d44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25d48:	ldr	r3, [fp, #-8]
   25d4c:	add	r2, r2, r3
   25d50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25d54:	ldr	r3, [r3]
   25d58:	cmp	r2, r3
   25d5c:	ble	25d80 <__assert_fail@plt+0x14c28>
   25d60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25d64:	ldr	r3, [fp, #-8]
   25d68:	add	r3, r2, r3
   25d6c:	mov	r1, r3
   25d70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   25d74:	bl	1f428 <__assert_fail@plt+0xe2d0>
   25d78:	mov	r3, r0
   25d7c:	b	25d88 <__assert_fail@plt+0x14c30>
   25d80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25d84:	ldr	r3, [r3, #8]
   25d88:	str	r3, [fp, #-52]	; 0xffffffcc
   25d8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   25d90:	ldr	r3, [r3, #8]
   25d94:	str	r3, [fp, #-56]	; 0xffffffc8
   25d98:	ldr	r3, [fp, #-88]	; 0xffffffa8
   25d9c:	ldr	r3, [r3, #8]
   25da0:	str	r3, [fp, #-60]	; 0xffffffc4
   25da4:	mov	r3, #0
   25da8:	str	r3, [fp, #-16]
   25dac:	ldr	r3, [fp, #-16]
   25db0:	lsl	r3, r3, #2
   25db4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25db8:	add	r3, r2, r3
   25dbc:	ldr	r2, [r3]
   25dc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25dc4:	eor	r2, r2, r3
   25dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25dcc:	add	r3, r2, r3
   25dd0:	str	r3, [fp, #-64]	; 0xffffffc0
   25dd4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ddc:	cmp	r2, r3
   25de0:	movcc	r3, #1
   25de4:	movcs	r3, #0
   25de8:	uxtb	r3, r3
   25dec:	str	r3, [fp, #-20]	; 0xffffffec
   25df0:	ldr	r3, [fp, #-16]
   25df4:	lsl	r3, r3, #2
   25df8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   25dfc:	add	r3, r2, r3
   25e00:	ldr	r2, [r3]
   25e04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25e08:	eor	r2, r2, r3
   25e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e10:	add	r3, r2, r3
   25e14:	str	r3, [fp, #-68]	; 0xffffffbc
   25e18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   25e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e20:	cmp	r2, r3
   25e24:	movcc	r3, #1
   25e28:	movcs	r3, #0
   25e2c:	uxtb	r3, r3
   25e30:	str	r3, [fp, #-24]	; 0xffffffe8
   25e34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25e38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25e3c:	eor	r2, r2, r3
   25e40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25e44:	eor	r2, r2, r3
   25e48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25e4c:	add	r3, r2, r3
   25e50:	str	r3, [fp, #-72]	; 0xffffffb8
   25e54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25e5c:	cmp	r2, r3
   25e60:	movcc	r3, #1
   25e64:	movcs	r3, #0
   25e68:	uxtb	r3, r3
   25e6c:	str	r3, [fp, #-28]	; 0xffffffe4
   25e70:	ldr	r3, [fp, #-16]
   25e74:	lsl	r3, r3, #2
   25e78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25e7c:	add	r3, r2, r3
   25e80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25e84:	str	r2, [r3]
   25e88:	ldr	r3, [fp, #-16]
   25e8c:	add	r3, r3, #1
   25e90:	str	r3, [fp, #-16]
   25e94:	ldr	r2, [fp, #-16]
   25e98:	ldr	r3, [fp, #-12]
   25e9c:	cmp	r2, r3
   25ea0:	blt	25dac <__assert_fail@plt+0x14c54>
   25ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ea8:	cmp	r3, #0
   25eac:	beq	25f60 <__assert_fail@plt+0x14e08>
   25eb0:	ldr	r3, [pc, #292]	; 25fdc <__assert_fail@plt+0x14e84>
   25eb4:	ldr	r2, [pc, #292]	; 25fe0 <__assert_fail@plt+0x14e88>
   25eb8:	ldr	r1, [pc, #292]	; 25fe4 <__assert_fail@plt+0x14e8c>
   25ebc:	ldr	r0, [pc, #292]	; 25fe8 <__assert_fail@plt+0x14e90>
   25ec0:	bl	11158 <__assert_fail@plt>
   25ec4:	ldr	r3, [fp, #-16]
   25ec8:	lsl	r3, r3, #2
   25ecc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25ed0:	add	r3, r2, r3
   25ed4:	ldr	r2, [r3]
   25ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25edc:	eor	r2, r2, r3
   25ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ee4:	add	r3, r2, r3
   25ee8:	str	r3, [fp, #-64]	; 0xffffffc0
   25eec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ef4:	cmp	r2, r3
   25ef8:	movcc	r3, #1
   25efc:	movcs	r3, #0
   25f00:	uxtb	r3, r3
   25f04:	str	r3, [fp, #-20]	; 0xffffffec
   25f08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   25f0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25f10:	eor	r2, r2, r3
   25f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25f18:	add	r3, r2, r3
   25f1c:	str	r3, [fp, #-72]	; 0xffffffb8
   25f20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25f28:	cmp	r2, r3
   25f2c:	movcc	r3, #1
   25f30:	movcs	r3, #0
   25f34:	uxtb	r3, r3
   25f38:	str	r3, [fp, #-28]	; 0xffffffe4
   25f3c:	ldr	r3, [fp, #-16]
   25f40:	lsl	r3, r3, #2
   25f44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25f48:	add	r3, r2, r3
   25f4c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   25f50:	str	r2, [r3]
   25f54:	ldr	r3, [fp, #-16]
   25f58:	add	r3, r3, #1
   25f5c:	str	r3, [fp, #-16]
   25f60:	ldr	r2, [fp, #-16]
   25f64:	ldr	r3, [fp, #-8]
   25f68:	cmp	r2, r3
   25f6c:	blt	25ec4 <__assert_fail@plt+0x14d6c>
   25f70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25f74:	cmp	r3, #0
   25f78:	beq	25fa0 <__assert_fail@plt+0x14e48>
   25f7c:	ldr	r3, [fp, #-8]
   25f80:	add	r2, r3, #1
   25f84:	str	r2, [fp, #-8]
   25f88:	lsl	r3, r3, #2
   25f8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25f90:	add	r3, r2, r3
   25f94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25f98:	str	r2, [r3]
   25f9c:	b	25fb0 <__assert_fail@plt+0x14e58>
   25fa0:	ldr	r1, [fp, #-8]
   25fa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25fa8:	bl	1b4a0 <__assert_fail@plt+0xa348>
   25fac:	str	r0, [fp, #-8]
   25fb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   25fb4:	cmp	r3, #0
   25fb8:	beq	25fc8 <__assert_fail@plt+0x14e70>
   25fbc:	ldr	r3, [fp, #-8]
   25fc0:	rsb	r3, r3, #0
   25fc4:	b	25fcc <__assert_fail@plt+0x14e74>
   25fc8:	ldr	r3, [fp, #-8]
   25fcc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   25fd0:	str	r3, [r2, #4]
   25fd4:	sub	sp, fp, #4
   25fd8:	pop	{fp, pc}
   25fdc:	andeq	r4, r3, r8, ror r2
   25fe0:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   25fe4:	andeq	r3, r3, r0, asr #19
   25fe8:	andeq	r3, r3, r4, lsr lr
   25fec:	push	{fp}		; (str fp, [sp, #-4]!)
   25ff0:	add	fp, sp, #0
   25ff4:	sub	sp, sp, #28
   25ff8:	str	r0, [fp, #-24]	; 0xffffffe8
   25ffc:	mov	r3, #16
   26000:	str	r3, [fp, #-12]
   26004:	mov	r3, #0
   26008:	str	r3, [fp, #-8]
   2600c:	b	260b8 <__assert_fail@plt+0x14f60>
   26010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26014:	lsr	r2, r3, #1
   26018:	ldr	r3, [pc, #184]	; 260d8 <__assert_fail@plt+0x14f80>
   2601c:	and	r3, r3, r2
   26020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26024:	sub	r3, r2, r3
   26028:	str	r3, [fp, #-16]
   2602c:	ldr	r3, [fp, #-16]
   26030:	lsr	r3, r3, #2
   26034:	ldr	r2, [pc, #160]	; 260dc <__assert_fail@plt+0x14f84>
   26038:	and	r2, r2, r3
   2603c:	ldr	r1, [fp, #-16]
   26040:	ldr	r3, [pc, #148]	; 260dc <__assert_fail@plt+0x14f84>
   26044:	and	r3, r3, r1
   26048:	add	r3, r2, r3
   2604c:	str	r3, [fp, #-16]
   26050:	ldr	r3, [fp, #-16]
   26054:	lsr	r3, r3, #4
   26058:	ldr	r2, [fp, #-16]
   2605c:	add	r3, r2, r3
   26060:	str	r3, [fp, #-16]
   26064:	ldr	r3, [fp, #-16]
   26068:	lsr	r3, r3, #8
   2606c:	and	r2, r3, #15
   26070:	ldr	r3, [fp, #-16]
   26074:	and	r3, r3, #15
   26078:	add	r3, r2, r3
   2607c:	str	r3, [fp, #-16]
   26080:	ldr	r2, [fp, #-8]
   26084:	ldr	r3, [fp, #-16]
   26088:	add	r3, r2, r3
   2608c:	str	r3, [fp, #-8]
   26090:	ldr	r3, [fp, #-12]
   26094:	cmp	r3, #31
   26098:	bhi	260b0 <__assert_fail@plt+0x14f58>
   2609c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   260a0:	ldr	r3, [fp, #-12]
   260a4:	lsr	r3, r2, r3
   260a8:	str	r3, [fp, #-24]	; 0xffffffe8
   260ac:	b	260b8 <__assert_fail@plt+0x14f60>
   260b0:	mov	r3, #0
   260b4:	str	r3, [fp, #-24]	; 0xffffffe8
   260b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260bc:	cmp	r3, #0
   260c0:	bne	26010 <__assert_fail@plt+0x14eb8>
   260c4:	ldr	r3, [fp, #-8]
   260c8:	mov	r0, r3
   260cc:	add	sp, fp, #0
   260d0:	pop	{fp}		; (ldr fp, [sp], #4)
   260d4:	bx	lr
   260d8:	andeq	r5, r0, r5, asr r5
   260dc:	andeq	r3, r0, r3, lsr r3
   260e0:	push	{fp, lr}
   260e4:	add	fp, sp, #4
   260e8:	sub	sp, sp, #16
   260ec:	str	r0, [fp, #-16]
   260f0:	str	r1, [fp, #-20]	; 0xffffffec
   260f4:	mov	r3, #0
   260f8:	str	r3, [fp, #-12]
   260fc:	mov	r3, #0
   26100:	str	r3, [fp, #-8]
   26104:	b	26140 <__assert_fail@plt+0x14fe8>
   26108:	ldr	r3, [fp, #-8]
   2610c:	lsl	r3, r3, #2
   26110:	ldr	r2, [fp, #-16]
   26114:	add	r3, r2, r3
   26118:	ldr	r3, [r3]
   2611c:	mov	r0, r3
   26120:	bl	25fec <__assert_fail@plt+0x14e94>
   26124:	mov	r2, r0
   26128:	ldr	r3, [fp, #-12]
   2612c:	add	r3, r3, r2
   26130:	str	r3, [fp, #-12]
   26134:	ldr	r3, [fp, #-8]
   26138:	add	r3, r3, #1
   2613c:	str	r3, [fp, #-8]
   26140:	ldr	r2, [fp, #-8]
   26144:	ldr	r3, [fp, #-20]	; 0xffffffec
   26148:	cmp	r2, r3
   2614c:	blt	26108 <__assert_fail@plt+0x14fb0>
   26150:	ldr	r3, [fp, #-12]
   26154:	mov	r0, r3
   26158:	sub	sp, fp, #4
   2615c:	pop	{fp, pc}
   26160:	push	{fp, lr}
   26164:	add	fp, sp, #4
   26168:	sub	sp, sp, #16
   2616c:	str	r0, [fp, #-16]
   26170:	ldr	r3, [fp, #-16]
   26174:	ldr	r3, [r3, #4]
   26178:	str	r3, [fp, #-8]
   2617c:	ldr	r3, [fp, #-8]
   26180:	cmp	r3, #0
   26184:	bge	26190 <__assert_fail@plt+0x15038>
   26188:	mvn	r3, #0
   2618c:	b	261a8 <__assert_fail@plt+0x15050>
   26190:	ldr	r3, [fp, #-16]
   26194:	ldr	r3, [r3, #8]
   26198:	ldr	r1, [fp, #-8]
   2619c:	mov	r0, r3
   261a0:	bl	260e0 <__assert_fail@plt+0x14f88>
   261a4:	mov	r3, r0
   261a8:	mov	r0, r3
   261ac:	sub	sp, fp, #4
   261b0:	pop	{fp, pc}
   261b4:	push	{fp, lr}
   261b8:	add	fp, sp, #4
   261bc:	sub	sp, sp, #64	; 0x40
   261c0:	str	r0, [fp, #-64]	; 0xffffffc0
   261c4:	str	r1, [fp, #-68]	; 0xffffffbc
   261c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   261cc:	ldr	r3, [r3, #4]
   261d0:	str	r3, [fp, #-8]
   261d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   261d8:	ldr	r3, [r3, #4]
   261dc:	str	r3, [fp, #-12]
   261e0:	ldr	r2, [fp, #-8]
   261e4:	ldr	r3, [fp, #-12]
   261e8:	eor	r3, r3, r2
   261ec:	cmp	r3, #0
   261f0:	bge	261fc <__assert_fail@plt+0x150a4>
   261f4:	mvn	r3, #0
   261f8:	b	26440 <__assert_fail@plt+0x152e8>
   261fc:	ldr	r3, [fp, #-8]
   26200:	lsr	r3, r3, #31
   26204:	uxtb	r3, r3
   26208:	str	r3, [fp, #-24]	; 0xffffffe8
   2620c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26210:	str	r3, [fp, #-20]	; 0xffffffec
   26214:	ldr	r3, [fp, #-20]	; 0xffffffec
   26218:	rsb	r3, r3, #0
   2621c:	str	r3, [fp, #-40]	; 0xffffffd8
   26220:	ldr	r3, [fp, #-20]	; 0xffffffec
   26224:	cmp	r3, #0
   26228:	beq	26264 <__assert_fail@plt+0x1510c>
   2622c:	ldr	r3, [fp, #-12]
   26230:	cmp	r3, #0
   26234:	blt	2624c <__assert_fail@plt+0x150f4>
   26238:	ldr	r3, [pc, #524]	; 2644c <__assert_fail@plt+0x152f4>
   2623c:	ldr	r2, [pc, #524]	; 26450 <__assert_fail@plt+0x152f8>
   26240:	ldr	r1, [pc, #524]	; 26454 <__assert_fail@plt+0x152fc>
   26244:	ldr	r0, [pc, #524]	; 26458 <__assert_fail@plt+0x15300>
   26248:	bl	11158 <__assert_fail@plt>
   2624c:	ldr	r3, [fp, #-8]
   26250:	rsb	r3, r3, #0
   26254:	str	r3, [fp, #-8]
   26258:	ldr	r3, [fp, #-12]
   2625c:	rsb	r3, r3, #0
   26260:	str	r3, [fp, #-12]
   26264:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26268:	ldr	r3, [r3, #8]
   2626c:	str	r3, [fp, #-28]	; 0xffffffe4
   26270:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26274:	ldr	r3, [r3, #8]
   26278:	str	r3, [fp, #-32]	; 0xffffffe0
   2627c:	ldr	r2, [fp, #-8]
   26280:	ldr	r3, [fp, #-12]
   26284:	cmp	r2, r3
   26288:	bge	262bc <__assert_fail@plt+0x15164>
   2628c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26290:	str	r3, [fp, #-44]	; 0xffffffd4
   26294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26298:	str	r3, [fp, #-28]	; 0xffffffe4
   2629c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   262a0:	str	r3, [fp, #-32]	; 0xffffffe0
   262a4:	ldr	r3, [fp, #-8]
   262a8:	str	r3, [fp, #-48]	; 0xffffffd0
   262ac:	ldr	r3, [fp, #-12]
   262b0:	str	r3, [fp, #-8]
   262b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   262b8:	str	r3, [fp, #-12]
   262bc:	mov	r3, #0
   262c0:	str	r3, [fp, #-16]
   262c4:	mov	r3, #0
   262c8:	str	r3, [fp, #-36]	; 0xffffffdc
   262cc:	b	26388 <__assert_fail@plt+0x15230>
   262d0:	ldr	r3, [fp, #-16]
   262d4:	lsl	r3, r3, #2
   262d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   262dc:	add	r3, r2, r3
   262e0:	ldr	r2, [r3]
   262e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   262e8:	eor	r2, r2, r3
   262ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   262f0:	add	r3, r2, r3
   262f4:	str	r3, [fp, #-52]	; 0xffffffcc
   262f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   262fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26300:	cmp	r2, r3
   26304:	movcc	r3, #1
   26308:	movcs	r3, #0
   2630c:	uxtb	r3, r3
   26310:	str	r3, [fp, #-20]	; 0xffffffec
   26314:	ldr	r3, [fp, #-16]
   26318:	lsl	r3, r3, #2
   2631c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26320:	add	r3, r2, r3
   26324:	ldr	r2, [r3]
   26328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2632c:	eor	r2, r2, r3
   26330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26334:	add	r3, r2, r3
   26338:	str	r3, [fp, #-56]	; 0xffffffc8
   2633c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   26340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26344:	cmp	r2, r3
   26348:	movcc	r3, #1
   2634c:	movcs	r3, #0
   26350:	uxtb	r3, r3
   26354:	str	r3, [fp, #-24]	; 0xffffffe8
   26358:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2635c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26360:	eor	r3, r3, r2
   26364:	mov	r0, r3
   26368:	bl	25fec <__assert_fail@plt+0x14e94>
   2636c:	mov	r2, r0
   26370:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26374:	add	r3, r3, r2
   26378:	str	r3, [fp, #-36]	; 0xffffffdc
   2637c:	ldr	r3, [fp, #-16]
   26380:	add	r3, r3, #1
   26384:	str	r3, [fp, #-16]
   26388:	ldr	r2, [fp, #-16]
   2638c:	ldr	r3, [fp, #-12]
   26390:	cmp	r2, r3
   26394:	blt	262d0 <__assert_fail@plt+0x15178>
   26398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2639c:	cmp	r3, #0
   263a0:	beq	2642c <__assert_fail@plt+0x152d4>
   263a4:	ldr	r3, [pc, #160]	; 2644c <__assert_fail@plt+0x152f4>
   263a8:	ldr	r2, [pc, #172]	; 2645c <__assert_fail@plt+0x15304>
   263ac:	ldr	r1, [pc, #160]	; 26454 <__assert_fail@plt+0x152fc>
   263b0:	ldr	r0, [pc, #168]	; 26460 <__assert_fail@plt+0x15308>
   263b4:	bl	11158 <__assert_fail@plt>
   263b8:	ldr	r3, [fp, #-16]
   263bc:	lsl	r3, r3, #2
   263c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   263c4:	add	r3, r2, r3
   263c8:	ldr	r2, [r3]
   263cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   263d0:	eor	r2, r2, r3
   263d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263d8:	add	r3, r2, r3
   263dc:	str	r3, [fp, #-52]	; 0xffffffcc
   263e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   263e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263e8:	cmp	r2, r3
   263ec:	movcc	r3, #1
   263f0:	movcs	r3, #0
   263f4:	uxtb	r3, r3
   263f8:	str	r3, [fp, #-20]	; 0xffffffec
   263fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26404:	eor	r3, r3, r2
   26408:	mov	r0, r3
   2640c:	bl	25fec <__assert_fail@plt+0x14e94>
   26410:	mov	r2, r0
   26414:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26418:	add	r3, r3, r2
   2641c:	str	r3, [fp, #-36]	; 0xffffffdc
   26420:	ldr	r3, [fp, #-16]
   26424:	add	r3, r3, #1
   26428:	str	r3, [fp, #-16]
   2642c:	ldr	r2, [fp, #-16]
   26430:	ldr	r3, [fp, #-8]
   26434:	cmp	r2, r3
   26438:	blt	263b8 <__assert_fail@plt+0x15260>
   2643c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26440:	mov	r0, r3
   26444:	sub	sp, fp, #4
   26448:	pop	{fp, pc}
   2644c:	andeq	r4, r3, r0, lsl #5
   26450:	andeq	r0, r0, pc, ror #31
   26454:	andeq	r3, r3, r0, asr #19
   26458:	andeq	r3, r3, ip, lsr lr
   2645c:	andeq	r1, r0, r4
   26460:	andeq	r3, r3, r4, lsr lr
   26464:	push	{fp, lr}
   26468:	add	fp, sp, #4
   2646c:	sub	sp, sp, #40	; 0x28
   26470:	str	r0, [fp, #-32]	; 0xffffffe0
   26474:	str	r1, [fp, #-36]	; 0xffffffdc
   26478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2647c:	ldr	r3, [r3, #4]
   26480:	str	r3, [fp, #-16]
   26484:	ldr	r3, [fp, #-16]
   26488:	cmp	r3, #0
   2648c:	rsblt	r3, r3, #0
   26490:	str	r3, [fp, #-20]	; 0xffffffec
   26494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26498:	lsr	r3, r3, #5
   2649c:	str	r3, [fp, #-24]	; 0xffffffe8
   264a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   264a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   264a8:	cmp	r2, r3
   264ac:	blt	264cc <__assert_fail@plt+0x15374>
   264b0:	ldr	r3, [fp, #-16]
   264b4:	cmp	r3, #0
   264b8:	bge	264c4 <__assert_fail@plt+0x1536c>
   264bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   264c0:	b	26594 <__assert_fail@plt+0x1543c>
   264c4:	mvn	r3, #0
   264c8:	b	26594 <__assert_fail@plt+0x1543c>
   264cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   264d0:	ldr	r3, [r3, #8]
   264d4:	str	r3, [fp, #-28]	; 0xffffffe4
   264d8:	mov	r3, #0
   264dc:	str	r3, [fp, #-12]
   264e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   264e4:	lsl	r3, r3, #2
   264e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   264ec:	add	r3, r2, r3
   264f0:	ldr	r3, [r3]
   264f4:	str	r3, [fp, #-8]
   264f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   264fc:	cmp	r3, #0
   26500:	beq	26574 <__assert_fail@plt+0x1541c>
   26504:	ldr	r3, [fp, #-16]
   26508:	cmp	r3, #0
   2650c:	bge	26558 <__assert_fail@plt+0x15400>
   26510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26514:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26518:	bl	1b504 <__assert_fail@plt+0xa3ac>
   2651c:	mov	r3, r0
   26520:	str	r3, [fp, #-12]
   26524:	ldr	r2, [fp, #-12]
   26528:	ldr	r3, [fp, #-8]
   2652c:	sub	r3, r2, r3
   26530:	sub	r3, r3, #1
   26534:	str	r3, [fp, #-8]
   26538:	ldr	r2, [fp, #-8]
   2653c:	ldr	r3, [fp, #-12]
   26540:	cmp	r2, r3
   26544:	movcs	r3, #1
   26548:	movcc	r3, #0
   2654c:	uxtb	r3, r3
   26550:	rsb	r3, r3, #0
   26554:	str	r3, [fp, #-12]
   26558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2655c:	and	r3, r3, #31
   26560:	mvn	r2, #0
   26564:	lsl	r3, r2, r3
   26568:	ldr	r2, [fp, #-8]
   2656c:	and	r3, r3, r2
   26570:	str	r3, [fp, #-8]
   26574:	ldr	r3, [fp, #-12]
   26578:	str	r3, [sp]
   2657c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26580:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26588:	ldr	r0, [fp, #-8]
   2658c:	bl	1c620 <__assert_fail@plt+0xb4c8>
   26590:	mov	r3, r0
   26594:	mov	r0, r3
   26598:	sub	sp, fp, #4
   2659c:	pop	{fp, pc}
   265a0:	push	{fp, lr}
   265a4:	add	fp, sp, #4
   265a8:	sub	sp, sp, #40	; 0x28
   265ac:	str	r0, [fp, #-32]	; 0xffffffe0
   265b0:	str	r1, [fp, #-36]	; 0xffffffdc
   265b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   265b8:	ldr	r3, [r3, #4]
   265bc:	str	r3, [fp, #-12]
   265c0:	ldr	r3, [fp, #-12]
   265c4:	mvn	r3, r3
   265c8:	lsr	r3, r3, #31
   265cc:	uxtb	r3, r3
   265d0:	rsb	r3, r3, #0
   265d4:	str	r3, [fp, #-16]
   265d8:	ldr	r3, [fp, #-12]
   265dc:	cmp	r3, #0
   265e0:	rsblt	r3, r3, #0
   265e4:	str	r3, [fp, #-20]	; 0xffffffec
   265e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   265ec:	lsr	r3, r3, #5
   265f0:	str	r3, [fp, #-24]	; 0xffffffe8
   265f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   265f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   265fc:	cmp	r2, r3
   26600:	blt	26620 <__assert_fail@plt+0x154c8>
   26604:	ldr	r3, [fp, #-16]
   26608:	cmp	r3, #0
   2660c:	beq	26618 <__assert_fail@plt+0x154c0>
   26610:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26614:	b	266b4 <__assert_fail@plt+0x1555c>
   26618:	mvn	r3, #0
   2661c:	b	266b4 <__assert_fail@plt+0x1555c>
   26620:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26624:	ldr	r3, [r3, #8]
   26628:	str	r3, [fp, #-28]	; 0xffffffe4
   2662c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26630:	lsl	r3, r3, #2
   26634:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26638:	add	r3, r2, r3
   2663c:	ldr	r2, [r3]
   26640:	ldr	r3, [fp, #-16]
   26644:	eor	r3, r3, r2
   26648:	str	r3, [fp, #-8]
   2664c:	ldr	r3, [fp, #-16]
   26650:	cmp	r3, #0
   26654:	bne	26678 <__assert_fail@plt+0x15520>
   26658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2665c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26660:	bl	1b504 <__assert_fail@plt+0xa3ac>
   26664:	mov	r3, r0
   26668:	mov	r2, r3
   2666c:	ldr	r3, [fp, #-8]
   26670:	sub	r3, r3, r2
   26674:	str	r3, [fp, #-8]
   26678:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2667c:	and	r3, r3, #31
   26680:	mvn	r2, #0
   26684:	lsl	r3, r2, r3
   26688:	ldr	r2, [fp, #-8]
   2668c:	and	r3, r3, r2
   26690:	str	r3, [fp, #-8]
   26694:	ldr	r3, [fp, #-16]
   26698:	str	r3, [sp]
   2669c:	ldr	r3, [fp, #-20]	; 0xffffffec
   266a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   266a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   266a8:	ldr	r0, [fp, #-8]
   266ac:	bl	1c620 <__assert_fail@plt+0xb4c8>
   266b0:	mov	r3, r0
   266b4:	mov	r0, r3
   266b8:	sub	sp, fp, #4
   266bc:	pop	{fp, pc}
   266c0:	push	{r4, fp, lr}
   266c4:	add	fp, sp, #8
   266c8:	sub	sp, sp, #52	; 0x34
   266cc:	str	r0, [fp, #-56]	; 0xffffffc8
   266d0:	str	r1, [fp, #-60]	; 0xffffffc4
   266d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   266d8:	cmp	r3, #1
   266dc:	bgt	266f4 <__assert_fail@plt+0x1559c>
   266e0:	ldr	r3, [pc, #576]	; 26928 <__assert_fail@plt+0x157d0>
   266e4:	ldr	r2, [pc, #576]	; 2692c <__assert_fail@plt+0x157d4>
   266e8:	ldr	r1, [pc, #576]	; 26930 <__assert_fail@plt+0x157d8>
   266ec:	ldr	r0, [pc, #576]	; 26934 <__assert_fail@plt+0x157dc>
   266f0:	bl	11158 <__assert_fail@plt>
   266f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   266f8:	cmp	r3, #62	; 0x3e
   266fc:	ble	26714 <__assert_fail@plt+0x155bc>
   26700:	ldr	r3, [pc, #544]	; 26928 <__assert_fail@plt+0x157d0>
   26704:	ldr	r2, [pc, #556]	; 26938 <__assert_fail@plt+0x157e0>
   26708:	ldr	r1, [pc, #544]	; 26930 <__assert_fail@plt+0x157d8>
   2670c:	ldr	r0, [pc, #552]	; 2693c <__assert_fail@plt+0x157e4>
   26710:	bl	11158 <__assert_fail@plt>
   26714:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26718:	ldr	r3, [r3, #4]
   2671c:	cmp	r3, #0
   26720:	rsblt	r3, r3, #0
   26724:	str	r3, [fp, #-24]	; 0xffffffe8
   26728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2672c:	cmp	r3, #0
   26730:	bne	2673c <__assert_fail@plt+0x155e4>
   26734:	mov	r3, #1
   26738:	b	2691c <__assert_fail@plt+0x157c4>
   2673c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26740:	ldr	r3, [r3, #8]
   26744:	str	r3, [fp, #-28]	; 0xffffffe4
   26748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2674c:	sub	r3, r3, #1
   26750:	lsl	r4, r3, #5
   26754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26758:	sub	r3, r3, #-1073741823	; 0xc0000001
   2675c:	lsl	r3, r3, #2
   26760:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26764:	add	r3, r2, r3
   26768:	ldr	r3, [r3]
   2676c:	mov	r0, r3
   26770:	bl	1e6ec <__assert_fail@plt+0xd594>
   26774:	mov	r3, r0
   26778:	add	r3, r4, r3
   2677c:	str	r3, [fp, #-32]	; 0xffffffe0
   26780:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26784:	sub	r3, r3, #2
   26788:	cmp	r3, #30
   2678c:	ldrls	pc, [pc, r3, lsl #2]
   26790:	b	26868 <__assert_fail@plt+0x15710>
   26794:	andeq	r6, r2, r0, lsl r8
   26798:	andeq	r6, r2, r8, ror #16
   2679c:	andeq	r6, r2, r8, lsl r8
   267a0:	andeq	r6, r2, r8, ror #16
   267a4:	andeq	r6, r2, r8, ror #16
   267a8:	andeq	r6, r2, r8, ror #16
   267ac:	andeq	r6, r2, r8, lsr #16
   267b0:	andeq	r6, r2, r8, ror #16
   267b4:	andeq	r6, r2, r8, ror #16
   267b8:	andeq	r6, r2, r8, ror #16
   267bc:	andeq	r6, r2, r8, ror #16
   267c0:	andeq	r6, r2, r8, ror #16
   267c4:	andeq	r6, r2, r8, ror #16
   267c8:	andeq	r6, r2, r8, ror #16
   267cc:	andeq	r6, r2, r0, asr #16
   267d0:	andeq	r6, r2, r8, ror #16
   267d4:	andeq	r6, r2, r8, ror #16
   267d8:	andeq	r6, r2, r8, ror #16
   267dc:	andeq	r6, r2, r8, ror #16
   267e0:	andeq	r6, r2, r8, ror #16
   267e4:	andeq	r6, r2, r8, ror #16
   267e8:	andeq	r6, r2, r8, ror #16
   267ec:	andeq	r6, r2, r8, ror #16
   267f0:	andeq	r6, r2, r8, ror #16
   267f4:	andeq	r6, r2, r8, ror #16
   267f8:	andeq	r6, r2, r8, ror #16
   267fc:	andeq	r6, r2, r8, ror #16
   26800:	andeq	r6, r2, r8, ror #16
   26804:	andeq	r6, r2, r8, ror #16
   26808:	andeq	r6, r2, r8, ror #16
   2680c:	andeq	r6, r2, r0, asr r8
   26810:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26814:	b	2691c <__assert_fail@plt+0x157c4>
   26818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2681c:	add	r3, r3, #1
   26820:	lsr	r3, r3, #1
   26824:	b	2691c <__assert_fail@plt+0x157c4>
   26828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2682c:	add	r3, r3, #2
   26830:	ldr	r2, [pc, #264]	; 26940 <__assert_fail@plt+0x157e8>
   26834:	umull	r2, r3, r2, r3
   26838:	lsr	r3, r3, #1
   2683c:	b	2691c <__assert_fail@plt+0x157c4>
   26840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26844:	add	r3, r3, #3
   26848:	lsr	r3, r3, #2
   2684c:	b	2691c <__assert_fail@plt+0x157c4>
   26850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26854:	add	r3, r3, #4
   26858:	ldr	r2, [pc, #228]	; 26944 <__assert_fail@plt+0x157ec>
   2685c:	umull	r2, r3, r2, r3
   26860:	lsr	r3, r3, #2
   26864:	b	2691c <__assert_fail@plt+0x157c4>
   26868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2686c:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   26870:	str	r0, [fp, #-36]	; 0xffffffdc
   26874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2687c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26880:	bl	1b298 <__assert_fail@plt+0xa140>
   26884:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26888:	sub	r3, fp, #52	; 0x34
   2688c:	mov	r1, r2
   26890:	mov	r0, r3
   26894:	bl	1cdc4 <__assert_fail@plt+0xbc6c>
   26898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2689c:	str	r3, [fp, #-16]
   268a0:	mov	r3, #0
   268a4:	str	r3, [fp, #-20]	; 0xffffffec
   268a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   268ac:	add	r3, r3, #1
   268b0:	str	r3, [fp, #-20]	; 0xffffffec
   268b4:	sub	r3, fp, #52	; 0x34
   268b8:	ldr	r2, [fp, #-16]
   268bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   268c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   268c4:	bl	1d258 <__assert_fail@plt+0xc100>
   268c8:	ldr	r3, [fp, #-16]
   268cc:	sub	r3, r3, #-1073741823	; 0xc0000001
   268d0:	lsl	r3, r3, #2
   268d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   268d8:	add	r3, r2, r3
   268dc:	ldr	r3, [r3]
   268e0:	cmp	r3, #0
   268e4:	moveq	r3, #1
   268e8:	movne	r3, #0
   268ec:	uxtb	r3, r3
   268f0:	mov	r2, r3
   268f4:	ldr	r3, [fp, #-16]
   268f8:	sub	r3, r3, r2
   268fc:	str	r3, [fp, #-16]
   26900:	ldr	r3, [fp, #-16]
   26904:	cmp	r3, #0
   26908:	bgt	268a8 <__assert_fail@plt+0x15750>
   2690c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26910:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26914:	bl	1b258 <__assert_fail@plt+0xa100>
   26918:	ldr	r3, [fp, #-20]	; 0xffffffec
   2691c:	mov	r0, r3
   26920:	sub	sp, fp, #8
   26924:	pop	{r4, fp, pc}
   26928:	andeq	r4, r3, ip, lsl #5
   2692c:	andeq	r1, r0, pc, asr r0
   26930:	andeq	r3, r3, r0, asr #19
   26934:	andeq	r3, r3, r4, asr #28
   26938:	andeq	r1, r0, r0, rrx
   2693c:	andeq	r3, r3, r0, asr lr
   26940:	bge	fead13f4 <stdout@@GLIBC_2.4+0xfea8c268>
   26944:	stclgt	12, cr12, [ip], {205}	; 0xcd
   26948:	push	{fp, lr}
   2694c:	add	fp, sp, #4
   26950:	sub	sp, sp, #64	; 0x40
   26954:	str	r0, [fp, #-48]	; 0xffffffd0
   26958:	str	r1, [fp, #-52]	; 0xffffffcc
   2695c:	str	r2, [fp, #-56]	; 0xffffffc8
   26960:	ldr	r3, [pc, #680]	; 26c10 <__assert_fail@plt+0x15ab8>
   26964:	str	r3, [fp, #-8]
   26968:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2696c:	cmp	r3, #1
   26970:	ble	269a0 <__assert_fail@plt+0x15848>
   26974:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26978:	cmp	r3, #36	; 0x24
   2697c:	bgt	2698c <__assert_fail@plt+0x15834>
   26980:	ldr	r3, [pc, #652]	; 26c14 <__assert_fail@plt+0x15abc>
   26984:	str	r3, [fp, #-8]
   26988:	b	269d8 <__assert_fail@plt+0x15880>
   2698c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26990:	cmp	r3, #62	; 0x3e
   26994:	ble	269d8 <__assert_fail@plt+0x15880>
   26998:	mov	r3, #0
   2699c:	b	26c04 <__assert_fail@plt+0x15aac>
   269a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   269a4:	cmn	r3, #1
   269a8:	blt	269b8 <__assert_fail@plt+0x15860>
   269ac:	mov	r3, #10
   269b0:	str	r3, [fp, #-52]	; 0xffffffcc
   269b4:	b	269d8 <__assert_fail@plt+0x15880>
   269b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   269bc:	rsb	r3, r3, #0
   269c0:	str	r3, [fp, #-52]	; 0xffffffcc
   269c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   269c8:	cmp	r3, #36	; 0x24
   269cc:	ble	269d8 <__assert_fail@plt+0x15880>
   269d0:	mov	r3, #0
   269d4:	b	26c04 <__assert_fail@plt+0x15aac>
   269d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   269dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   269e0:	bl	266c0 <__assert_fail@plt+0x15568>
   269e4:	mov	r3, r0
   269e8:	add	r3, r3, #1
   269ec:	str	r3, [fp, #-16]
   269f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   269f4:	cmp	r3, #0
   269f8:	bne	26a20 <__assert_fail@plt+0x158c8>
   269fc:	ldr	r3, [fp, #-16]
   26a00:	add	r3, r3, #1
   26a04:	str	r3, [fp, #-20]	; 0xffffffec
   26a08:	ldr	r3, [pc, #520]	; 26c18 <__assert_fail@plt+0x15ac0>
   26a0c:	ldr	r3, [r3]
   26a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   26a14:	blx	r3
   26a18:	str	r0, [fp, #-48]	; 0xffffffd0
   26a1c:	b	26a28 <__assert_fail@plt+0x158d0>
   26a20:	mov	r3, #0
   26a24:	str	r3, [fp, #-20]	; 0xffffffec
   26a28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26a2c:	ldr	r3, [r3, #4]
   26a30:	cmp	r3, #0
   26a34:	rsblt	r3, r3, #0
   26a38:	str	r3, [fp, #-24]	; 0xffffffe8
   26a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26a40:	cmp	r3, #0
   26a44:	bne	26a60 <__assert_fail@plt+0x15908>
   26a48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26a4c:	mov	r2, #48	; 0x30
   26a50:	strb	r2, [r3]
   26a54:	mov	r3, #1
   26a58:	str	r3, [fp, #-16]
   26a5c:	b	26bac <__assert_fail@plt+0x15a54>
   26a60:	mov	r3, #0
   26a64:	str	r3, [fp, #-12]
   26a68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26a6c:	ldr	r3, [r3, #4]
   26a70:	cmp	r3, #0
   26a74:	bge	26a94 <__assert_fail@plt+0x1593c>
   26a78:	ldr	r3, [fp, #-12]
   26a7c:	add	r2, r3, #1
   26a80:	str	r2, [fp, #-12]
   26a84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26a88:	add	r3, r2, r3
   26a8c:	mov	r2, #45	; 0x2d
   26a90:	strb	r2, [r3]
   26a94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26a98:	mov	r0, r3
   26a9c:	bl	1e59c <__assert_fail@plt+0xd444>
   26aa0:	str	r0, [fp, #-28]	; 0xffffffe4
   26aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26aa8:	cmp	r3, #0
   26aac:	beq	26ae4 <__assert_fail@plt+0x1598c>
   26ab0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26ab4:	ldr	r3, [fp, #-12]
   26ab8:	add	r0, r2, r3
   26abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26ac0:	ldr	r2, [r3, #8]
   26ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26acc:	bl	1e7c4 <__assert_fail@plt+0xd66c>
   26ad0:	mov	r2, r0
   26ad4:	ldr	r3, [fp, #-12]
   26ad8:	add	r3, r2, r3
   26adc:	str	r3, [fp, #-16]
   26ae0:	b	26b9c <__assert_fail@plt+0x15a44>
   26ae4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26ae8:	sub	r3, fp, #40	; 0x28
   26aec:	mov	r1, r2
   26af0:	mov	r0, r3
   26af4:	bl	1e660 <__assert_fail@plt+0xd508>
   26af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26afc:	bl	1b1a4 <__assert_fail@plt+0xa04c>
   26b00:	str	r0, [fp, #-32]	; 0xffffffe0
   26b04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26b08:	ldr	r3, [r3, #8]
   26b0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26b10:	mov	r1, r3
   26b14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26b18:	bl	1b298 <__assert_fail@plt+0xa140>
   26b1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26b20:	ldr	r3, [fp, #-12]
   26b24:	add	r0, r2, r3
   26b28:	sub	r2, fp, #40	; 0x28
   26b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b30:	str	r3, [sp]
   26b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   26b3c:	bl	1ec1c <__assert_fail@plt+0xdac4>
   26b40:	mov	r2, r0
   26b44:	ldr	r3, [fp, #-12]
   26b48:	add	r3, r2, r3
   26b4c:	str	r3, [fp, #-16]
   26b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26b58:	bl	1b258 <__assert_fail@plt+0xa100>
   26b5c:	b	26b9c <__assert_fail@plt+0x15a44>
   26b60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26b64:	ldr	r3, [fp, #-12]
   26b68:	add	r3, r2, r3
   26b6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26b70:	ldr	r2, [fp, #-12]
   26b74:	add	r2, r1, r2
   26b78:	ldrb	r2, [r2]
   26b7c:	mov	r1, r2
   26b80:	ldr	r2, [fp, #-8]
   26b84:	add	r2, r2, r1
   26b88:	ldrb	r2, [r2]
   26b8c:	strb	r2, [r3]
   26b90:	ldr	r3, [fp, #-12]
   26b94:	add	r3, r3, #1
   26b98:	str	r3, [fp, #-12]
   26b9c:	ldr	r2, [fp, #-12]
   26ba0:	ldr	r3, [fp, #-16]
   26ba4:	cmp	r2, r3
   26ba8:	bcc	26b60 <__assert_fail@plt+0x15a08>
   26bac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26bb0:	ldr	r3, [fp, #-16]
   26bb4:	add	r3, r2, r3
   26bb8:	mov	r2, #0
   26bbc:	strb	r2, [r3]
   26bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bc4:	cmp	r3, #0
   26bc8:	beq	26c00 <__assert_fail@plt+0x15aa8>
   26bcc:	ldr	r3, [fp, #-16]
   26bd0:	add	r2, r3, #1
   26bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bd8:	cmp	r2, r3
   26bdc:	beq	26c00 <__assert_fail@plt+0x15aa8>
   26be0:	ldr	r3, [pc, #52]	; 26c1c <__assert_fail@plt+0x15ac4>
   26be4:	ldr	r3, [r3]
   26be8:	ldr	r2, [fp, #-16]
   26bec:	add	r2, r2, #1
   26bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26bf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   26bf8:	blx	r3
   26bfc:	str	r0, [fp, #-48]	; 0xffffffd0
   26c00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26c04:	mov	r0, r3
   26c08:	sub	sp, fp, #4
   26c0c:	pop	{fp, pc}
   26c10:	andeq	r3, r3, ip, asr lr
   26c14:	muleq	r3, ip, lr
   26c18:	andeq	r5, r4, r4, lsr #2
   26c1c:	andeq	r5, r4, r8, lsr #2
   26c20:	push	{fp, lr}
   26c24:	add	fp, sp, #4
   26c28:	sub	sp, sp, #72	; 0x48
   26c2c:	str	r0, [fp, #-56]	; 0xffffffc8
   26c30:	str	r1, [fp, #-60]	; 0xffffffc4
   26c34:	str	r2, [fp, #-64]	; 0xffffffc0
   26c38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c3c:	cmp	r3, #0
   26c40:	beq	26c80 <__assert_fail@plt+0x15b28>
   26c44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c48:	cmp	r3, #1
   26c4c:	ble	26c5c <__assert_fail@plt+0x15b04>
   26c50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26c54:	cmp	r3, #62	; 0x3e
   26c58:	ble	26c70 <__assert_fail@plt+0x15b18>
   26c5c:	ldr	r3, [pc, #1272]	; 2715c <__assert_fail@plt+0x16004>
   26c60:	ldr	r2, [pc, #1272]	; 27160 <__assert_fail@plt+0x16008>
   26c64:	ldr	r1, [pc, #1272]	; 27164 <__assert_fail@plt+0x1600c>
   26c68:	ldr	r0, [pc, #1272]	; 27168 <__assert_fail@plt+0x16010>
   26c6c:	bl	11158 <__assert_fail@plt>
   26c70:	b	26c80 <__assert_fail@plt+0x15b28>
   26c74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26c78:	add	r3, r3, #1
   26c7c:	str	r3, [fp, #-60]	; 0xffffffc4
   26c80:	bl	11020 <__ctype_b_loc@plt>
   26c84:	mov	r3, r0
   26c88:	ldr	r2, [r3]
   26c8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26c90:	ldrb	r3, [r3]
   26c94:	lsl	r3, r3, #1
   26c98:	add	r3, r2, r3
   26c9c:	ldrh	r3, [r3]
   26ca0:	and	r3, r3, #8192	; 0x2000
   26ca4:	cmp	r3, #0
   26ca8:	bne	26c74 <__assert_fail@plt+0x15b1c>
   26cac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26cb0:	ldrb	r3, [r3]
   26cb4:	cmp	r3, #45	; 0x2d
   26cb8:	moveq	r3, #1
   26cbc:	movne	r3, #0
   26cc0:	uxtb	r3, r3
   26cc4:	str	r3, [fp, #-24]	; 0xffffffe8
   26cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26ccc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26cd0:	add	r3, r2, r3
   26cd4:	str	r3, [fp, #-60]	; 0xffffffc4
   26cd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26cdc:	cmp	r3, #0
   26ce0:	bne	26d88 <__assert_fail@plt+0x15c30>
   26ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ce8:	ldrb	r3, [r3]
   26cec:	cmp	r3, #48	; 0x30
   26cf0:	bne	26d80 <__assert_fail@plt+0x15c28>
   26cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26cf8:	add	r3, r3, #1
   26cfc:	ldrb	r3, [r3]
   26d00:	cmp	r3, #120	; 0x78
   26d04:	beq	26d1c <__assert_fail@plt+0x15bc4>
   26d08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d0c:	add	r3, r3, #1
   26d10:	ldrb	r3, [r3]
   26d14:	cmp	r3, #88	; 0x58
   26d18:	bne	26d34 <__assert_fail@plt+0x15bdc>
   26d1c:	mov	r3, #16
   26d20:	str	r3, [fp, #-64]	; 0xffffffc0
   26d24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d28:	add	r3, r3, #2
   26d2c:	str	r3, [fp, #-60]	; 0xffffffc4
   26d30:	b	26d88 <__assert_fail@plt+0x15c30>
   26d34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d38:	add	r3, r3, #1
   26d3c:	ldrb	r3, [r3]
   26d40:	cmp	r3, #98	; 0x62
   26d44:	beq	26d5c <__assert_fail@plt+0x15c04>
   26d48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d4c:	add	r3, r3, #1
   26d50:	ldrb	r3, [r3]
   26d54:	cmp	r3, #66	; 0x42
   26d58:	bne	26d74 <__assert_fail@plt+0x15c1c>
   26d5c:	mov	r3, #2
   26d60:	str	r3, [fp, #-64]	; 0xffffffc0
   26d64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d68:	add	r3, r3, #2
   26d6c:	str	r3, [fp, #-60]	; 0xffffffc4
   26d70:	b	26d88 <__assert_fail@plt+0x15c30>
   26d74:	mov	r3, #8
   26d78:	str	r3, [fp, #-64]	; 0xffffffc0
   26d7c:	b	26d88 <__assert_fail@plt+0x15c30>
   26d80:	mov	r3, #10
   26d84:	str	r3, [fp, #-64]	; 0xffffffc0
   26d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26d8c:	ldrb	r3, [r3]
   26d90:	cmp	r3, #0
   26d94:	bne	26dac <__assert_fail@plt+0x15c54>
   26d98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26d9c:	mov	r2, #0
   26da0:	str	r2, [r3, #4]
   26da4:	mvn	r3, #0
   26da8:	b	27150 <__assert_fail@plt+0x15ff8>
   26dac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26db0:	bl	11050 <strlen@plt>
   26db4:	str	r0, [fp, #-28]	; 0xffffffe4
   26db8:	ldr	r3, [pc, #940]	; 2716c <__assert_fail@plt+0x16014>
   26dbc:	ldr	r3, [r3]
   26dc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26dc4:	blx	r3
   26dc8:	str	r0, [fp, #-32]	; 0xffffffe0
   26dcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26dd0:	cmp	r3, #36	; 0x24
   26dd4:	ble	26de0 <__assert_fail@plt+0x15c88>
   26dd8:	mov	r3, #36	; 0x24
   26ddc:	b	26de4 <__assert_fail@plt+0x15c8c>
   26de0:	mov	r3, #10
   26de4:	str	r3, [fp, #-36]	; 0xffffffdc
   26de8:	mov	r3, #0
   26dec:	str	r3, [fp, #-16]
   26df0:	b	26f3c <__assert_fail@plt+0x15de4>
   26df4:	bl	11020 <__ctype_b_loc@plt>
   26df8:	mov	r3, r0
   26dfc:	ldr	r2, [r3]
   26e00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e04:	ldrb	r3, [r3]
   26e08:	lsl	r3, r3, #1
   26e0c:	add	r3, r2, r3
   26e10:	ldrh	r3, [r3]
   26e14:	and	r3, r3, #8192	; 0x2000
   26e18:	cmp	r3, #0
   26e1c:	bne	26f2c <__assert_fail@plt+0x15dd4>
   26e20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e24:	ldrb	r3, [r3]
   26e28:	cmp	r3, #47	; 0x2f
   26e2c:	bls	26e54 <__assert_fail@plt+0x15cfc>
   26e30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e34:	ldrb	r3, [r3]
   26e38:	cmp	r3, #57	; 0x39
   26e3c:	bhi	26e54 <__assert_fail@plt+0x15cfc>
   26e40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e44:	ldrb	r3, [r3]
   26e48:	sub	r3, r3, #48	; 0x30
   26e4c:	str	r3, [fp, #-20]	; 0xffffffec
   26e50:	b	26ed0 <__assert_fail@plt+0x15d78>
   26e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e58:	ldrb	r3, [r3]
   26e5c:	cmp	r3, #96	; 0x60
   26e60:	bls	26e94 <__assert_fail@plt+0x15d3c>
   26e64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e68:	ldrb	r3, [r3]
   26e6c:	cmp	r3, #122	; 0x7a
   26e70:	bhi	26e94 <__assert_fail@plt+0x15d3c>
   26e74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e78:	ldrb	r3, [r3]
   26e7c:	mov	r2, r3
   26e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26e84:	add	r3, r2, r3
   26e88:	sub	r3, r3, #97	; 0x61
   26e8c:	str	r3, [fp, #-20]	; 0xffffffec
   26e90:	b	26ed0 <__assert_fail@plt+0x15d78>
   26e94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26e98:	ldrb	r3, [r3]
   26e9c:	cmp	r3, #64	; 0x40
   26ea0:	bls	26ec8 <__assert_fail@plt+0x15d70>
   26ea4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ea8:	ldrb	r3, [r3]
   26eac:	cmp	r3, #90	; 0x5a
   26eb0:	bhi	26ec8 <__assert_fail@plt+0x15d70>
   26eb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26eb8:	ldrb	r3, [r3]
   26ebc:	sub	r3, r3, #55	; 0x37
   26ec0:	str	r3, [fp, #-20]	; 0xffffffec
   26ec4:	b	26ed0 <__assert_fail@plt+0x15d78>
   26ec8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26ecc:	str	r3, [fp, #-20]	; 0xffffffec
   26ed0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26ed4:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ed8:	cmp	r2, r3
   26edc:	bcc	26f08 <__assert_fail@plt+0x15db0>
   26ee0:	ldr	r3, [pc, #648]	; 27170 <__assert_fail@plt+0x16018>
   26ee4:	ldr	r3, [r3]
   26ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26ef0:	blx	r3
   26ef4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26ef8:	mov	r2, #0
   26efc:	str	r2, [r3, #4]
   26f00:	mvn	r3, #0
   26f04:	b	27150 <__assert_fail@plt+0x15ff8>
   26f08:	ldr	r3, [fp, #-16]
   26f0c:	add	r2, r3, #1
   26f10:	str	r2, [fp, #-16]
   26f14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26f18:	add	r3, r2, r3
   26f1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26f20:	uxtb	r2, r2
   26f24:	strb	r2, [r3]
   26f28:	b	26f30 <__assert_fail@plt+0x15dd8>
   26f2c:	nop			; (mov r0, r0)
   26f30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26f34:	add	r3, r3, #1
   26f38:	str	r3, [fp, #-60]	; 0xffffffc4
   26f3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26f40:	ldrb	r3, [r3]
   26f44:	cmp	r3, #0
   26f48:	bne	26df4 <__assert_fail@plt+0x15c9c>
   26f4c:	ldr	r3, [fp, #-16]
   26f50:	cmp	r3, #0
   26f54:	bne	26f80 <__assert_fail@plt+0x15e28>
   26f58:	ldr	r3, [pc, #528]	; 27170 <__assert_fail@plt+0x16018>
   26f5c:	ldr	r3, [r3]
   26f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26f68:	blx	r3
   26f6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26f70:	mov	r2, #0
   26f74:	str	r2, [r3, #4]
   26f78:	mvn	r3, #0
   26f7c:	b	27150 <__assert_fail@plt+0x15ff8>
   26f80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26f84:	mov	r0, r3
   26f88:	bl	1e59c <__assert_fail@plt+0xd444>
   26f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   26f90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26f94:	cmp	r3, #0
   26f98:	beq	27004 <__assert_fail@plt+0x15eac>
   26f9c:	ldr	r3, [fp, #-16]
   26fa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26fa4:	mul	r3, r2, r3
   26fa8:	add	r3, r3, #31
   26fac:	lsr	r3, r3, #5
   26fb0:	str	r3, [fp, #-12]
   26fb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26fb8:	ldr	r2, [r3]
   26fbc:	ldr	r3, [fp, #-12]
   26fc0:	cmp	r2, r3
   26fc4:	bge	26fdc <__assert_fail@plt+0x15e84>
   26fc8:	ldr	r1, [fp, #-12]
   26fcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26fd0:	bl	1f428 <__assert_fail@plt+0xe2d0>
   26fd4:	mov	r3, r0
   26fd8:	b	26fe4 <__assert_fail@plt+0x15e8c>
   26fdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26fe0:	ldr	r3, [r3, #8]
   26fe4:	str	r3, [fp, #-44]	; 0xffffffd4
   26fe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26fec:	ldr	r2, [fp, #-16]
   26ff0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26ff8:	bl	1ef14 <__assert_fail@plt+0xddbc>
   26ffc:	str	r0, [fp, #-8]
   27000:	b	270f0 <__assert_fail@plt+0x15f98>
   27004:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27008:	sub	r3, fp, #52	; 0x34
   2700c:	mov	r1, r2
   27010:	mov	r0, r3
   27014:	bl	1e660 <__assert_fail@plt+0xd508>
   27018:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2701c:	ldr	r3, [fp, #-16]
   27020:	add	r3, r2, r3
   27024:	sub	r3, r3, #1
   27028:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2702c:	mov	r1, r2
   27030:	mov	r0, r3
   27034:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   27038:	mov	r3, r0
   2703c:	str	r3, [fp, #-12]
   27040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27044:	ldr	r2, [r3]
   27048:	ldr	r3, [fp, #-12]
   2704c:	cmp	r2, r3
   27050:	bge	27068 <__assert_fail@plt+0x15f10>
   27054:	ldr	r1, [fp, #-12]
   27058:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2705c:	bl	1f428 <__assert_fail@plt+0xe2d0>
   27060:	mov	r3, r0
   27064:	b	27070 <__assert_fail@plt+0x15f18>
   27068:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2706c:	ldr	r3, [r3, #8]
   27070:	str	r3, [fp, #-44]	; 0xffffffd4
   27074:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27078:	sub	r3, fp, #52	; 0x34
   2707c:	str	r3, [sp]
   27080:	mov	r3, r2
   27084:	ldr	r2, [fp, #-16]
   27088:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2708c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27090:	bl	1f048 <__assert_fail@plt+0xdef0>
   27094:	str	r0, [fp, #-8]
   27098:	ldr	r3, [fp, #-8]
   2709c:	cmp	r3, #0
   270a0:	bgt	270b8 <__assert_fail@plt+0x15f60>
   270a4:	ldr	r3, [pc, #176]	; 2715c <__assert_fail@plt+0x16004>
   270a8:	ldr	r2, [pc, #196]	; 27174 <__assert_fail@plt+0x1601c>
   270ac:	ldr	r1, [pc, #176]	; 27164 <__assert_fail@plt+0x1600c>
   270b0:	ldr	r0, [pc, #192]	; 27178 <__assert_fail@plt+0x16020>
   270b4:	bl	11158 <__assert_fail@plt>
   270b8:	ldr	r3, [fp, #-8]
   270bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   270c0:	lsl	r3, r3, #2
   270c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   270c8:	add	r3, r2, r3
   270cc:	ldr	r3, [r3]
   270d0:	cmp	r3, #0
   270d4:	moveq	r3, #1
   270d8:	movne	r3, #0
   270dc:	uxtb	r3, r3
   270e0:	mov	r2, r3
   270e4:	ldr	r3, [fp, #-8]
   270e8:	sub	r3, r3, r2
   270ec:	str	r3, [fp, #-8]
   270f0:	ldr	r2, [fp, #-8]
   270f4:	ldr	r3, [fp, #-12]
   270f8:	cmp	r2, r3
   270fc:	ble	27114 <__assert_fail@plt+0x15fbc>
   27100:	ldr	r3, [pc, #84]	; 2715c <__assert_fail@plt+0x16004>
   27104:	ldr	r2, [pc, #112]	; 2717c <__assert_fail@plt+0x16024>
   27108:	ldr	r1, [pc, #84]	; 27164 <__assert_fail@plt+0x1600c>
   2710c:	ldr	r0, [pc, #108]	; 27180 <__assert_fail@plt+0x16028>
   27110:	bl	11158 <__assert_fail@plt>
   27114:	ldr	r3, [pc, #84]	; 27170 <__assert_fail@plt+0x16018>
   27118:	ldr	r3, [r3]
   2711c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27120:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27124:	blx	r3
   27128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2712c:	cmp	r3, #0
   27130:	beq	27140 <__assert_fail@plt+0x15fe8>
   27134:	ldr	r3, [fp, #-8]
   27138:	rsb	r3, r3, #0
   2713c:	b	27144 <__assert_fail@plt+0x15fec>
   27140:	ldr	r3, [fp, #-8]
   27144:	ldr	r2, [fp, #-56]	; 0xffffffc8
   27148:	str	r3, [r2, #4]
   2714c:	mov	r3, #0
   27150:	mov	r0, r3
   27154:	sub	sp, fp, #4
   27158:	pop	{fp, pc}
   2715c:	muleq	r3, ip, r2
   27160:	andeq	r1, r0, r0, ror #1
   27164:	andeq	r3, r3, r0, asr #19
   27168:	andeq	r3, r3, r4, asr #29
   2716c:	andeq	r5, r4, r4, lsr #2
   27170:	andeq	r5, r4, ip, lsr #2
   27174:	andeq	r1, r0, r5, lsr r1
   27178:	andeq	r3, r3, r4, lsl #25
   2717c:	andeq	r1, r0, r8, lsr r1
   27180:	andeq	r3, r3, ip, ror #29
   27184:	push	{fp, lr}
   27188:	add	fp, sp, #4
   2718c:	sub	sp, sp, #16
   27190:	str	r0, [fp, #-8]
   27194:	str	r1, [fp, #-12]
   27198:	str	r2, [fp, #-16]
   2719c:	ldr	r0, [fp, #-8]
   271a0:	bl	1f318 <__assert_fail@plt+0xe1c0>
   271a4:	ldr	r2, [fp, #-16]
   271a8:	ldr	r1, [fp, #-12]
   271ac:	ldr	r0, [fp, #-8]
   271b0:	bl	26c20 <__assert_fail@plt+0x15ac8>
   271b4:	mov	r3, r0
   271b8:	mov	r0, r3
   271bc:	sub	sp, fp, #4
   271c0:	pop	{fp, pc}
   271c4:	push	{fp, lr}
   271c8:	add	fp, sp, #4
   271cc:	sub	sp, sp, #32
   271d0:	str	r0, [fp, #-24]	; 0xffffffe8
   271d4:	str	r1, [fp, #-28]	; 0xffffffe4
   271d8:	str	r2, [fp, #-32]	; 0xffffffe0
   271dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   271e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   271e4:	mov	r0, #0
   271e8:	bl	26948 <__assert_fail@plt+0x157f0>
   271ec:	str	r0, [fp, #-8]
   271f0:	ldr	r3, [fp, #-8]
   271f4:	cmp	r3, #0
   271f8:	bne	27204 <__assert_fail@plt+0x160ac>
   271fc:	mov	r3, #0
   27200:	b	27248 <__assert_fail@plt+0x160f0>
   27204:	ldr	r0, [fp, #-8]
   27208:	bl	11050 <strlen@plt>
   2720c:	str	r0, [fp, #-12]
   27210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27214:	ldr	r2, [fp, #-12]
   27218:	mov	r1, #1
   2721c:	ldr	r0, [fp, #-8]
   27220:	bl	10f84 <fwrite@plt>
   27224:	str	r0, [fp, #-16]
   27228:	ldr	r3, [pc, #36]	; 27254 <__assert_fail@plt+0x160fc>
   2722c:	ldr	r3, [r3]
   27230:	ldr	r2, [fp, #-12]
   27234:	add	r2, r2, #1
   27238:	mov	r1, r2
   2723c:	ldr	r0, [fp, #-8]
   27240:	blx	r3
   27244:	ldr	r3, [fp, #-16]
   27248:	mov	r0, r3
   2724c:	sub	sp, fp, #4
   27250:	pop	{fp, pc}
   27254:	andeq	r5, r4, ip, lsr #2
   27258:	push	{fp}		; (str fp, [sp, #-4]!)
   2725c:	add	fp, sp, #0
   27260:	sub	sp, sp, #12
   27264:	ldr	r3, [pc, #28]	; 27288 <__assert_fail@plt+0x16130>
   27268:	str	r3, [fp, #-8]
   2726c:	ldr	r3, [fp, #-8]
   27270:	ldrb	r3, [r3]
   27274:	rsb	r3, r3, #1
   27278:	mov	r0, r3
   2727c:	add	sp, fp, #0
   27280:	pop	{fp}		; (ldr fp, [sp], #4)
   27284:	bx	lr
   27288:	andeq	r4, r3, r8, lsr #5
   2728c:	push	{fp, lr}
   27290:	add	fp, sp, #4
   27294:	sub	sp, sp, #48	; 0x30
   27298:	str	r0, [fp, #-40]	; 0xffffffd8
   2729c:	str	r1, [fp, #-44]	; 0xffffffd4
   272a0:	str	r2, [fp, #-48]	; 0xffffffd0
   272a4:	str	r3, [fp, #-52]	; 0xffffffcc
   272a8:	ldr	r3, [fp, #8]
   272ac:	cmp	r3, #0
   272b0:	beq	272bc <__assert_fail@plt+0x16164>
   272b4:	ldr	r0, [pc, #696]	; 27574 <__assert_fail@plt+0x1641c>
   272b8:	bl	1af58 <__assert_fail@plt+0x9e00>
   272bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   272c0:	cmp	r3, #1
   272c4:	beq	272e8 <__assert_fail@plt+0x16190>
   272c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   272cc:	cmn	r3, #1
   272d0:	beq	272e8 <__assert_fail@plt+0x16190>
   272d4:	ldr	r3, [pc, #668]	; 27578 <__assert_fail@plt+0x16420>
   272d8:	ldr	r2, [pc, #668]	; 2757c <__assert_fail@plt+0x16424>
   272dc:	ldr	r1, [pc, #668]	; 27580 <__assert_fail@plt+0x16428>
   272e0:	ldr	r0, [pc, #668]	; 27584 <__assert_fail@plt+0x1642c>
   272e4:	bl	11158 <__assert_fail@plt>
   272e8:	ldr	r3, [fp, #4]
   272ec:	cmn	r3, #1
   272f0:	blt	27300 <__assert_fail@plt+0x161a8>
   272f4:	ldr	r3, [fp, #4]
   272f8:	cmp	r3, #1
   272fc:	ble	27314 <__assert_fail@plt+0x161bc>
   27300:	ldr	r3, [pc, #624]	; 27578 <__assert_fail@plt+0x16420>
   27304:	ldr	r2, [pc, #636]	; 27588 <__assert_fail@plt+0x16430>
   27308:	ldr	r1, [pc, #624]	; 27580 <__assert_fail@plt+0x16428>
   2730c:	ldr	r0, [pc, #632]	; 2758c <__assert_fail@plt+0x16434>
   27310:	bl	11158 <__assert_fail@plt>
   27314:	ldr	r3, [fp, #4]
   27318:	cmp	r3, #0
   2731c:	bne	27328 <__assert_fail@plt+0x161d0>
   27320:	bl	27258 <__assert_fail@plt+0x16100>
   27324:	str	r0, [fp, #4]
   27328:	ldr	r3, [fp, #12]
   2732c:	str	r3, [fp, #-8]
   27330:	ldr	r2, [fp, #-48]	; 0xffffffd0
   27334:	ldr	r3, [fp, #4]
   27338:	cmp	r2, r3
   2733c:	beq	2734c <__assert_fail@plt+0x161f4>
   27340:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27344:	lsl	r3, r3, #1
   27348:	b	27350 <__assert_fail@plt+0x161f8>
   2734c:	mov	r3, #0
   27350:	str	r3, [fp, #-12]
   27354:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27358:	cmp	r3, #1
   2735c:	bne	27388 <__assert_fail@plt+0x16230>
   27360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27364:	sub	r3, r3, #1
   27368:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2736c:	mul	r3, r2, r3
   27370:	ldr	r2, [fp, #-8]
   27374:	add	r3, r2, r3
   27378:	str	r3, [fp, #-8]
   2737c:	ldr	r3, [fp, #-12]
   27380:	rsb	r3, r3, #0
   27384:	str	r3, [fp, #-12]
   27388:	ldr	r3, [fp, #4]
   2738c:	cmp	r3, #1
   27390:	bne	273a8 <__assert_fail@plt+0x16250>
   27394:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27398:	sub	r3, r3, #1
   2739c:	ldr	r2, [fp, #-8]
   273a0:	add	r3, r2, r3
   273a4:	str	r3, [fp, #-8]
   273a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   273ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   273b0:	mul	r3, r2, r3
   273b4:	add	r3, r3, #3
   273b8:	lsr	r3, r3, #2
   273bc:	str	r3, [fp, #-32]	; 0xffffffe0
   273c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   273c4:	ldr	r2, [r3]
   273c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   273cc:	cmp	r2, r3
   273d0:	bge	273e8 <__assert_fail@plt+0x16290>
   273d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   273d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   273dc:	bl	1f428 <__assert_fail@plt+0xe2d0>
   273e0:	mov	r3, r0
   273e4:	b	273f0 <__assert_fail@plt+0x16298>
   273e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   273ec:	ldr	r3, [r3, #8]
   273f0:	str	r3, [fp, #-36]	; 0xffffffdc
   273f4:	mov	r3, #0
   273f8:	str	r3, [fp, #-16]
   273fc:	mov	r3, #0
   27400:	str	r3, [fp, #-20]	; 0xffffffec
   27404:	mov	r3, #0
   27408:	str	r3, [fp, #-24]	; 0xffffffe8
   2740c:	b	274d0 <__assert_fail@plt+0x16378>
   27410:	mov	r3, #0
   27414:	str	r3, [fp, #-28]	; 0xffffffe4
   27418:	b	274a4 <__assert_fail@plt+0x1634c>
   2741c:	ldr	r3, [fp, #-8]
   27420:	ldrb	r3, [r3]
   27424:	mov	r1, r3
   27428:	ldr	r3, [fp, #-20]	; 0xffffffec
   2742c:	add	r2, r3, #1
   27430:	str	r2, [fp, #-20]	; 0xffffffec
   27434:	lsl	r3, r3, #3
   27438:	lsl	r3, r1, r3
   2743c:	ldr	r2, [fp, #-16]
   27440:	orr	r3, r2, r3
   27444:	str	r3, [fp, #-16]
   27448:	ldr	r3, [fp, #-20]	; 0xffffffec
   2744c:	cmp	r3, #4
   27450:	bne	27484 <__assert_fail@plt+0x1632c>
   27454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27458:	add	r2, r3, #1
   2745c:	str	r2, [fp, #-24]	; 0xffffffe8
   27460:	lsl	r3, r3, #2
   27464:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27468:	add	r3, r2, r3
   2746c:	ldr	r2, [fp, #-16]
   27470:	str	r2, [r3]
   27474:	mov	r3, #0
   27478:	str	r3, [fp, #-20]	; 0xffffffec
   2747c:	mov	r3, #0
   27480:	str	r3, [fp, #-16]
   27484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27488:	add	r3, r3, #1
   2748c:	str	r3, [fp, #-28]	; 0xffffffe4
   27490:	ldr	r3, [fp, #4]
   27494:	rsb	r3, r3, #0
   27498:	ldr	r2, [fp, #-8]
   2749c:	add	r3, r2, r3
   274a0:	str	r3, [fp, #-8]
   274a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   274a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   274ac:	cmp	r2, r3
   274b0:	bcc	2741c <__assert_fail@plt+0x162c4>
   274b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   274b8:	sub	r3, r3, #1
   274bc:	str	r3, [fp, #-44]	; 0xffffffd4
   274c0:	ldr	r3, [fp, #-12]
   274c4:	ldr	r2, [fp, #-8]
   274c8:	add	r3, r2, r3
   274cc:	str	r3, [fp, #-8]
   274d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   274d4:	cmp	r3, #0
   274d8:	bne	27410 <__assert_fail@plt+0x162b8>
   274dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   274e0:	cmp	r3, #0
   274e4:	movne	r3, #1
   274e8:	moveq	r3, #0
   274ec:	uxtb	r3, r3
   274f0:	mov	r2, r3
   274f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274f8:	add	r2, r2, r3
   274fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27500:	cmp	r2, r3
   27504:	beq	2751c <__assert_fail@plt+0x163c4>
   27508:	ldr	r3, [pc, #104]	; 27578 <__assert_fail@plt+0x16420>
   2750c:	ldr	r2, [pc, #124]	; 27590 <__assert_fail@plt+0x16438>
   27510:	ldr	r1, [pc, #104]	; 27580 <__assert_fail@plt+0x16428>
   27514:	ldr	r0, [pc, #120]	; 27594 <__assert_fail@plt+0x1643c>
   27518:	bl	11158 <__assert_fail@plt>
   2751c:	ldr	r3, [fp, #-16]
   27520:	cmp	r3, #0
   27524:	beq	2754c <__assert_fail@plt+0x163f4>
   27528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2752c:	add	r2, r3, #1
   27530:	str	r2, [fp, #-24]	; 0xffffffe8
   27534:	lsl	r3, r3, #2
   27538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2753c:	add	r3, r2, r3
   27540:	ldr	r2, [fp, #-16]
   27544:	str	r2, [r3]
   27548:	b	2755c <__assert_fail@plt+0x16404>
   2754c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27554:	bl	1b4a0 <__assert_fail@plt+0xa348>
   27558:	str	r0, [fp, #-24]	; 0xffffffe8
   2755c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27560:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27564:	str	r2, [r3, #4]
   27568:	nop			; (mov r0, r0)
   2756c:	sub	sp, fp, #4
   27570:	pop	{fp, pc}
   27574:	strdeq	r3, [r3], -r8
   27578:	andeq	r4, r3, ip, lsr #5
   2757c:	andeq	r1, r0, r4, ror r1
   27580:	andeq	r3, r3, r0, asr #19
   27584:	andeq	r3, r3, ip, lsl pc
   27588:	andeq	r1, r0, r5, ror r1
   2758c:	andeq	r3, r3, r8, lsr pc
   27590:	muleq	r0, fp, r1
   27594:	andeq	r3, r3, r4, asr pc
   27598:	push	{fp, lr}
   2759c:	add	fp, sp, #4
   275a0:	sub	sp, sp, #64	; 0x40
   275a4:	str	r0, [fp, #-56]	; 0xffffffc8
   275a8:	str	r1, [fp, #-60]	; 0xffffffc4
   275ac:	str	r2, [fp, #-64]	; 0xffffffc0
   275b0:	str	r3, [fp, #-68]	; 0xffffffbc
   275b4:	ldr	r3, [fp, #8]
   275b8:	cmp	r3, #0
   275bc:	beq	275c8 <__assert_fail@plt+0x16470>
   275c0:	ldr	r0, [pc, #928]	; 27968 <__assert_fail@plt+0x16810>
   275c4:	bl	1af58 <__assert_fail@plt+0x9e00>
   275c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   275cc:	cmp	r3, #1
   275d0:	beq	275f4 <__assert_fail@plt+0x1649c>
   275d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   275d8:	cmn	r3, #1
   275dc:	beq	275f4 <__assert_fail@plt+0x1649c>
   275e0:	ldr	r3, [pc, #900]	; 2796c <__assert_fail@plt+0x16814>
   275e4:	ldr	r2, [pc, #900]	; 27970 <__assert_fail@plt+0x16818>
   275e8:	ldr	r1, [pc, #900]	; 27974 <__assert_fail@plt+0x1681c>
   275ec:	ldr	r0, [pc, #900]	; 27978 <__assert_fail@plt+0x16820>
   275f0:	bl	11158 <__assert_fail@plt>
   275f4:	ldr	r3, [fp, #4]
   275f8:	cmn	r3, #1
   275fc:	blt	2760c <__assert_fail@plt+0x164b4>
   27600:	ldr	r3, [fp, #4]
   27604:	cmp	r3, #1
   27608:	ble	27620 <__assert_fail@plt+0x164c8>
   2760c:	ldr	r3, [pc, #856]	; 2796c <__assert_fail@plt+0x16814>
   27610:	ldr	r2, [pc, #868]	; 2797c <__assert_fail@plt+0x16824>
   27614:	ldr	r1, [pc, #856]	; 27974 <__assert_fail@plt+0x1681c>
   27618:	ldr	r0, [pc, #864]	; 27980 <__assert_fail@plt+0x16828>
   2761c:	bl	11158 <__assert_fail@plt>
   27620:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27624:	cmp	r3, #0
   27628:	bne	27650 <__assert_fail@plt+0x164f8>
   2762c:	ldr	r3, [fp, #12]
   27630:	ldr	r3, [r3, #4]
   27634:	cmp	r3, #0
   27638:	beq	27650 <__assert_fail@plt+0x164f8>
   2763c:	ldr	r3, [pc, #808]	; 2796c <__assert_fail@plt+0x16814>
   27640:	ldr	r2, [pc, #828]	; 27984 <__assert_fail@plt+0x1682c>
   27644:	ldr	r1, [pc, #808]	; 27974 <__assert_fail@plt+0x1681c>
   27648:	ldr	r0, [pc, #824]	; 27988 <__assert_fail@plt+0x16830>
   2764c:	bl	11158 <__assert_fail@plt>
   27650:	ldr	r3, [fp, #12]
   27654:	ldr	r3, [r3, #4]
   27658:	str	r3, [fp, #-40]	; 0xffffffd8
   2765c:	mov	r3, #0
   27660:	str	r3, [fp, #-8]
   27664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27668:	cmp	r3, #0
   2766c:	beq	27940 <__assert_fail@plt+0x167e8>
   27670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27674:	cmp	r3, #0
   27678:	rsblt	r3, r3, #0
   2767c:	str	r3, [fp, #-40]	; 0xffffffd8
   27680:	ldr	r3, [fp, #12]
   27684:	ldr	r2, [r3, #8]
   27688:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2768c:	sub	r3, r3, #-1073741823	; 0xc0000001
   27690:	lsl	r3, r3, #2
   27694:	add	r3, r2, r3
   27698:	ldr	r3, [r3]
   2769c:	str	r3, [fp, #-24]	; 0xffffffe8
   276a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276a4:	cmp	r3, #0
   276a8:	bne	276c0 <__assert_fail@plt+0x16568>
   276ac:	ldr	r3, [pc, #696]	; 2796c <__assert_fail@plt+0x16814>
   276b0:	ldr	r2, [pc, #724]	; 2798c <__assert_fail@plt+0x16834>
   276b4:	ldr	r1, [pc, #696]	; 27974 <__assert_fail@plt+0x1681c>
   276b8:	ldr	r0, [pc, #720]	; 27990 <__assert_fail@plt+0x16838>
   276bc:	bl	11158 <__assert_fail@plt>
   276c0:	mov	r3, #0
   276c4:	str	r3, [fp, #-12]
   276c8:	ldr	r3, [fp, #-12]
   276cc:	cmp	r3, #0
   276d0:	bne	27704 <__assert_fail@plt+0x165ac>
   276d4:	mov	r3, #8
   276d8:	str	r3, [fp, #-44]	; 0xffffffd4
   276dc:	ldr	r3, [fp, #-12]
   276e0:	add	r3, r3, #1
   276e4:	str	r3, [fp, #-12]
   276e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   276ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   276f0:	lsr	r3, r2, r3
   276f4:	str	r3, [fp, #-24]	; 0xffffffe8
   276f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276fc:	cmp	r3, #0
   27700:	bne	276d4 <__assert_fail@plt+0x1657c>
   27704:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27708:	sub	r3, r3, #1
   2770c:	lsl	r2, r3, #2
   27710:	ldr	r3, [fp, #-12]
   27714:	add	r2, r2, r3
   27718:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2771c:	add	r3, r2, r3
   27720:	sub	r3, r3, #1
   27724:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27728:	mov	r0, r3
   2772c:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   27730:	mov	r3, r0
   27734:	str	r3, [fp, #-8]
   27738:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2773c:	cmp	r3, #0
   27740:	bne	27764 <__assert_fail@plt+0x1660c>
   27744:	ldr	r3, [pc, #584]	; 27994 <__assert_fail@plt+0x1683c>
   27748:	ldr	r3, [r3]
   2774c:	ldr	r2, [fp, #-8]
   27750:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27754:	mul	r2, r1, r2
   27758:	mov	r0, r2
   2775c:	blx	r3
   27760:	str	r0, [fp, #-56]	; 0xffffffc8
   27764:	ldr	r3, [fp, #4]
   27768:	cmp	r3, #0
   2776c:	bne	27778 <__assert_fail@plt+0x16620>
   27770:	bl	27258 <__assert_fail@plt+0x16100>
   27774:	str	r0, [fp, #4]
   27778:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2777c:	str	r3, [fp, #-16]
   27780:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27784:	ldr	r3, [fp, #4]
   27788:	cmp	r2, r3
   2778c:	beq	2779c <__assert_fail@plt+0x16644>
   27790:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27794:	lsl	r3, r3, #1
   27798:	b	277a0 <__assert_fail@plt+0x16648>
   2779c:	mov	r3, #0
   277a0:	str	r3, [fp, #-20]	; 0xffffffec
   277a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   277a8:	cmp	r3, #1
   277ac:	bne	277d8 <__assert_fail@plt+0x16680>
   277b0:	ldr	r3, [fp, #-8]
   277b4:	sub	r3, r3, #1
   277b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   277bc:	mul	r3, r2, r3
   277c0:	ldr	r2, [fp, #-16]
   277c4:	add	r3, r2, r3
   277c8:	str	r3, [fp, #-16]
   277cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   277d0:	rsb	r3, r3, #0
   277d4:	str	r3, [fp, #-20]	; 0xffffffec
   277d8:	ldr	r3, [fp, #4]
   277dc:	cmp	r3, #1
   277e0:	bne	277f8 <__assert_fail@plt+0x166a0>
   277e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   277e8:	sub	r3, r3, #1
   277ec:	ldr	r2, [fp, #-16]
   277f0:	add	r3, r2, r3
   277f4:	str	r3, [fp, #-16]
   277f8:	mov	r3, #0
   277fc:	str	r3, [fp, #-28]	; 0xffffffe4
   27800:	mov	r3, #0
   27804:	str	r3, [fp, #-32]	; 0xffffffe0
   27808:	mov	r3, #0
   2780c:	str	r3, [fp, #-12]
   27810:	b	278e8 <__assert_fail@plt+0x16790>
   27814:	mov	r3, #0
   27818:	str	r3, [fp, #-36]	; 0xffffffdc
   2781c:	b	278bc <__assert_fail@plt+0x16764>
   27820:	mov	r3, #8
   27824:	str	r3, [fp, #-48]	; 0xffffffd0
   27828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2782c:	cmp	r3, #0
   27830:	bne	27870 <__assert_fail@plt+0x16718>
   27834:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27838:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2783c:	cmp	r2, r3
   27840:	bge	27868 <__assert_fail@plt+0x16710>
   27844:	ldr	r3, [fp, #12]
   27848:	ldr	r2, [r3, #8]
   2784c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27850:	add	r1, r3, #1
   27854:	str	r1, [fp, #-32]	; 0xffffffe0
   27858:	lsl	r3, r3, #2
   2785c:	add	r3, r2, r3
   27860:	ldr	r3, [r3]
   27864:	str	r3, [fp, #-24]	; 0xffffffe8
   27868:	mov	r3, #4
   2786c:	str	r3, [fp, #-28]	; 0xffffffe4
   27870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27874:	uxtb	r2, r3
   27878:	ldr	r3, [fp, #-16]
   2787c:	strb	r2, [r3]
   27880:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27884:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27888:	lsr	r3, r2, r3
   2788c:	str	r3, [fp, #-24]	; 0xffffffe8
   27890:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27894:	sub	r3, r3, #1
   27898:	str	r3, [fp, #-28]	; 0xffffffe4
   2789c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   278a0:	add	r3, r3, #1
   278a4:	str	r3, [fp, #-36]	; 0xffffffdc
   278a8:	ldr	r3, [fp, #4]
   278ac:	rsb	r3, r3, #0
   278b0:	ldr	r2, [fp, #-16]
   278b4:	add	r3, r2, r3
   278b8:	str	r3, [fp, #-16]
   278bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   278c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   278c4:	cmp	r2, r3
   278c8:	bcc	27820 <__assert_fail@plt+0x166c8>
   278cc:	ldr	r3, [fp, #-12]
   278d0:	add	r3, r3, #1
   278d4:	str	r3, [fp, #-12]
   278d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   278dc:	ldr	r2, [fp, #-16]
   278e0:	add	r3, r2, r3
   278e4:	str	r3, [fp, #-16]
   278e8:	ldr	r2, [fp, #-12]
   278ec:	ldr	r3, [fp, #-8]
   278f0:	cmp	r2, r3
   278f4:	bcc	27814 <__assert_fail@plt+0x166bc>
   278f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   278fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27900:	cmp	r2, r3
   27904:	beq	2791c <__assert_fail@plt+0x167c4>
   27908:	ldr	r3, [pc, #92]	; 2796c <__assert_fail@plt+0x16814>
   2790c:	ldr	r2, [pc, #132]	; 27998 <__assert_fail@plt+0x16840>
   27910:	ldr	r1, [pc, #92]	; 27974 <__assert_fail@plt+0x1681c>
   27914:	ldr	r0, [pc, #128]	; 2799c <__assert_fail@plt+0x16844>
   27918:	bl	11158 <__assert_fail@plt>
   2791c:	ldr	r2, [fp, #-12]
   27920:	ldr	r3, [fp, #-8]
   27924:	cmp	r2, r3
   27928:	beq	27940 <__assert_fail@plt+0x167e8>
   2792c:	ldr	r3, [pc, #56]	; 2796c <__assert_fail@plt+0x16814>
   27930:	ldr	r2, [pc, #104]	; 279a0 <__assert_fail@plt+0x16848>
   27934:	ldr	r1, [pc, #56]	; 27974 <__assert_fail@plt+0x1681c>
   27938:	ldr	r0, [pc, #100]	; 279a4 <__assert_fail@plt+0x1684c>
   2793c:	bl	11158 <__assert_fail@plt>
   27940:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27944:	cmp	r3, #0
   27948:	beq	27958 <__assert_fail@plt+0x16800>
   2794c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27950:	ldr	r2, [fp, #-8]
   27954:	str	r2, [r3]
   27958:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2795c:	mov	r0, r3
   27960:	sub	sp, fp, #4
   27964:	pop	{fp, pc}
   27968:	andeq	r3, r3, ip, ror #30
   2796c:			; <UNDEFINED> instruction: 0x000342b8
   27970:	andeq	r1, r0, lr, lsr #3
   27974:	andeq	r3, r3, r0, asr #19
   27978:	andeq	r3, r3, ip, lsl pc
   2797c:	andeq	r1, r0, pc, lsr #3
   27980:	andeq	r3, r3, r8, lsr pc
   27984:			; <UNDEFINED> instruction: 0x000011b0
   27988:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   2798c:	andeq	r1, r0, r4, asr #3
   27990:			; <UNDEFINED> instruction: 0x00033fb0
   27994:	andeq	r5, r4, r4, lsr #2
   27998:	andeq	r1, r0, r3, lsl #4
   2799c:			; <UNDEFINED> instruction: 0x00033fbc
   279a0:	andeq	r1, r0, r4, lsl #4
   279a4:	andeq	r3, r3, r4, asr #31
   279a8:	push	{fp, lr}
   279ac:	add	fp, sp, #4
   279b0:	sub	sp, sp, #16
   279b4:	str	r0, [fp, #-16]
   279b8:	ldr	r3, [fp, #-16]
   279bc:	cmp	r3, #0
   279c0:	bne	279e0 <__assert_fail@plt+0x16888>
   279c4:	ldr	r3, [pc, #220]	; 27aa8 <__assert_fail@plt+0x16950>
   279c8:	ldr	r3, [r3]
   279cc:	mov	r2, #55	; 0x37
   279d0:	mov	r1, #1
   279d4:	ldr	r0, [pc, #208]	; 27aac <__assert_fail@plt+0x16954>
   279d8:	bl	10f84 <fwrite@plt>
   279dc:	bl	11140 <abort@plt>
   279e0:	mov	r1, #47	; 0x2f
   279e4:	ldr	r0, [fp, #-16]
   279e8:	bl	110f8 <strrchr@plt>
   279ec:	str	r0, [fp, #-8]
   279f0:	ldr	r3, [fp, #-8]
   279f4:	cmp	r3, #0
   279f8:	beq	27a08 <__assert_fail@plt+0x168b0>
   279fc:	ldr	r3, [fp, #-8]
   27a00:	add	r3, r3, #1
   27a04:	b	27a0c <__assert_fail@plt+0x168b4>
   27a08:	ldr	r3, [fp, #-16]
   27a0c:	str	r3, [fp, #-12]
   27a10:	ldr	r2, [fp, #-12]
   27a14:	ldr	r3, [fp, #-16]
   27a18:	sub	r3, r2, r3
   27a1c:	cmp	r3, #6
   27a20:	ble	27a84 <__assert_fail@plt+0x1692c>
   27a24:	ldr	r3, [fp, #-12]
   27a28:	sub	r3, r3, #7
   27a2c:	mov	r2, #7
   27a30:	ldr	r1, [pc, #120]	; 27ab0 <__assert_fail@plt+0x16958>
   27a34:	mov	r0, r3
   27a38:	bl	11134 <strncmp@plt>
   27a3c:	mov	r3, r0
   27a40:	cmp	r3, #0
   27a44:	bne	27a84 <__assert_fail@plt+0x1692c>
   27a48:	ldr	r3, [fp, #-12]
   27a4c:	str	r3, [fp, #-16]
   27a50:	mov	r2, #3
   27a54:	ldr	r1, [pc, #88]	; 27ab4 <__assert_fail@plt+0x1695c>
   27a58:	ldr	r0, [fp, #-12]
   27a5c:	bl	11134 <strncmp@plt>
   27a60:	mov	r3, r0
   27a64:	cmp	r3, #0
   27a68:	bne	27a84 <__assert_fail@plt+0x1692c>
   27a6c:	ldr	r3, [fp, #-12]
   27a70:	add	r3, r3, #3
   27a74:	str	r3, [fp, #-16]
   27a78:	ldr	r2, [pc, #56]	; 27ab8 <__assert_fail@plt+0x16960>
   27a7c:	ldr	r3, [fp, #-16]
   27a80:	str	r3, [r2]
   27a84:	ldr	r2, [pc, #48]	; 27abc <__assert_fail@plt+0x16964>
   27a88:	ldr	r3, [fp, #-16]
   27a8c:	str	r3, [r2]
   27a90:	ldr	r2, [pc, #40]	; 27ac0 <__assert_fail@plt+0x16968>
   27a94:	ldr	r3, [fp, #-16]
   27a98:	str	r3, [r2]
   27a9c:	nop			; (mov r0, r0)
   27aa0:	sub	sp, fp, #4
   27aa4:	pop	{fp, pc}
   27aa8:	andeq	r5, r4, r0, lsl #3
   27aac:	andeq	r4, r3, r4, asr #5
   27ab0:	strdeq	r4, [r3], -ip
   27ab4:	andeq	r4, r3, r4, lsl #6
   27ab8:	andeq	r5, r4, r0, ror r1
   27abc:	andeq	r5, r4, r8, lsr #3
   27ac0:	andeq	r5, r4, r4, ror r1
   27ac4:	push	{fp, lr}
   27ac8:	add	fp, sp, #4
   27acc:	sub	sp, sp, #144	; 0x90
   27ad0:	str	r0, [fp, #-144]	; 0xffffff70
   27ad4:	str	r1, [fp, #-148]	; 0xffffff6c
   27ad8:	mov	r1, #2
   27adc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   27ae0:	bl	2af1c <__assert_fail@plt+0x19dc4>
   27ae4:	mov	r3, r0
   27ae8:	str	r3, [fp, #-16]
   27aec:	mov	r3, #0
   27af0:	strb	r3, [fp, #-5]
   27af4:	b	27f6c <__assert_fail@plt+0x16e14>
   27af8:	ldr	r1, [fp, #-16]
   27afc:	ldr	r0, [fp, #-144]	; 0xffffff70
   27b00:	bl	2ddc4 <__assert_fail@plt+0x1cc6c>
   27b04:	str	r0, [fp, #-20]	; 0xffffffec
   27b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b0c:	cmp	r3, #0
   27b10:	beq	27f80 <__assert_fail@plt+0x16e28>
   27b14:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   27b18:	mov	r3, r0
   27b1c:	cmp	r3, #1
   27b20:	bls	27e78 <__assert_fail@plt+0x16d20>
   27b24:	ldr	r3, [fp, #-144]	; 0xffffff70
   27b28:	str	r3, [fp, #-120]	; 0xffffff88
   27b2c:	mov	r3, #0
   27b30:	strb	r3, [fp, #-136]	; 0xffffff78
   27b34:	sub	r3, fp, #136	; 0x88
   27b38:	add	r3, r3, #4
   27b3c:	mov	r2, #8
   27b40:	mov	r1, #0
   27b44:	mov	r0, r3
   27b48:	bl	11098 <memset@plt>
   27b4c:	mov	r3, #0
   27b50:	strb	r3, [fp, #-124]	; 0xffffff84
   27b54:	mov	r3, #1
   27b58:	strb	r3, [fp, #-6]
   27b5c:	ldr	r2, [fp, #-120]	; 0xffffff88
   27b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b64:	cmp	r2, r3
   27b68:	bcs	27c24 <__assert_fail@plt+0x16acc>
   27b6c:	sub	r3, fp, #136	; 0x88
   27b70:	mov	r0, r3
   27b74:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   27b78:	ldrb	r3, [fp, #-112]	; 0xffffff90
   27b7c:	eor	r3, r3, #1
   27b80:	uxtb	r3, r3
   27b84:	cmp	r3, #0
   27b88:	bne	27b98 <__assert_fail@plt+0x16a40>
   27b8c:	ldr	r3, [fp, #-108]	; 0xffffff94
   27b90:	cmp	r3, #0
   27b94:	beq	27ba0 <__assert_fail@plt+0x16a48>
   27b98:	mov	r3, #1
   27b9c:	b	27ba4 <__assert_fail@plt+0x16a4c>
   27ba0:	mov	r3, #0
   27ba4:	cmp	r3, #0
   27ba8:	bne	27bb0 <__assert_fail@plt+0x16a58>
   27bac:	bl	11140 <abort@plt>
   27bb0:	sub	ip, fp, #80	; 0x50
   27bb4:	sub	lr, fp, #120	; 0x78
   27bb8:	ldm	lr!, {r0, r1, r2, r3}
   27bbc:	stmia	ip!, {r0, r1, r2, r3}
   27bc0:	ldm	lr!, {r0, r1, r2, r3}
   27bc4:	stmia	ip!, {r0, r1, r2, r3}
   27bc8:	ldm	lr, {r0, r1}
   27bcc:	stm	ip, {r0, r1}
   27bd0:	ldr	r2, [fp, #-120]	; 0xffffff88
   27bd4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27bd8:	add	r3, r2, r3
   27bdc:	str	r3, [fp, #-120]	; 0xffffff88
   27be0:	mov	r3, #0
   27be4:	strb	r3, [fp, #-124]	; 0xffffff84
   27be8:	ldr	r2, [fp, #-120]	; 0xffffff88
   27bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   27bf0:	cmp	r2, r3
   27bf4:	bcc	27b6c <__assert_fail@plt+0x16a14>
   27bf8:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   27bfc:	cmp	r3, #0
   27c00:	beq	27c24 <__assert_fail@plt+0x16acc>
   27c04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27c08:	mov	r0, r3
   27c0c:	bl	11080 <iswalnum@plt>
   27c10:	mov	r3, r0
   27c14:	cmp	r3, #0
   27c18:	beq	27c24 <__assert_fail@plt+0x16acc>
   27c1c:	mov	r3, #0
   27c20:	strb	r3, [fp, #-6]
   27c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   27c28:	str	r3, [fp, #-120]	; 0xffffff88
   27c2c:	mov	r3, #0
   27c30:	strb	r3, [fp, #-136]	; 0xffffff78
   27c34:	sub	r3, fp, #136	; 0x88
   27c38:	add	r3, r3, #4
   27c3c:	mov	r2, #8
   27c40:	mov	r1, #0
   27c44:	mov	r0, r3
   27c48:	bl	11098 <memset@plt>
   27c4c:	mov	r3, #0
   27c50:	strb	r3, [fp, #-124]	; 0xffffff84
   27c54:	ldr	r3, [fp, #-16]
   27c58:	str	r3, [fp, #-64]	; 0xffffffc0
   27c5c:	mov	r3, #0
   27c60:	strb	r3, [fp, #-80]	; 0xffffffb0
   27c64:	sub	r3, fp, #80	; 0x50
   27c68:	add	r3, r3, #4
   27c6c:	mov	r2, #8
   27c70:	mov	r1, #0
   27c74:	mov	r0, r3
   27c78:	bl	11098 <memset@plt>
   27c7c:	mov	r3, #0
   27c80:	strb	r3, [fp, #-68]	; 0xffffffbc
   27c84:	b	27cfc <__assert_fail@plt+0x16ba4>
   27c88:	sub	r3, fp, #136	; 0x88
   27c8c:	mov	r0, r3
   27c90:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   27c94:	ldrb	r3, [fp, #-112]	; 0xffffff90
   27c98:	eor	r3, r3, #1
   27c9c:	uxtb	r3, r3
   27ca0:	cmp	r3, #0
   27ca4:	bne	27cb4 <__assert_fail@plt+0x16b5c>
   27ca8:	ldr	r3, [fp, #-108]	; 0xffffff94
   27cac:	cmp	r3, #0
   27cb0:	beq	27cbc <__assert_fail@plt+0x16b64>
   27cb4:	mov	r3, #1
   27cb8:	b	27cc0 <__assert_fail@plt+0x16b68>
   27cbc:	mov	r3, #0
   27cc0:	cmp	r3, #0
   27cc4:	bne	27ccc <__assert_fail@plt+0x16b74>
   27cc8:	bl	11140 <abort@plt>
   27ccc:	ldr	r2, [fp, #-120]	; 0xffffff88
   27cd0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27cd4:	add	r3, r2, r3
   27cd8:	str	r3, [fp, #-120]	; 0xffffff88
   27cdc:	mov	r3, #0
   27ce0:	strb	r3, [fp, #-124]	; 0xffffff84
   27ce4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   27ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27cec:	add	r3, r2, r3
   27cf0:	str	r3, [fp, #-64]	; 0xffffffc0
   27cf4:	mov	r3, #0
   27cf8:	strb	r3, [fp, #-68]	; 0xffffffbc
   27cfc:	sub	r3, fp, #80	; 0x50
   27d00:	mov	r0, r3
   27d04:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   27d08:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   27d0c:	eor	r3, r3, #1
   27d10:	uxtb	r3, r3
   27d14:	cmp	r3, #0
   27d18:	bne	27d28 <__assert_fail@plt+0x16bd0>
   27d1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27d20:	cmp	r3, #0
   27d24:	beq	27d30 <__assert_fail@plt+0x16bd8>
   27d28:	mov	r3, #1
   27d2c:	b	27d34 <__assert_fail@plt+0x16bdc>
   27d30:	mov	r3, #0
   27d34:	cmp	r3, #0
   27d38:	bne	27c88 <__assert_fail@plt+0x16b30>
   27d3c:	mov	r3, #1
   27d40:	strb	r3, [fp, #-7]
   27d44:	sub	r3, fp, #136	; 0x88
   27d48:	mov	r0, r3
   27d4c:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   27d50:	ldrb	r3, [fp, #-112]	; 0xffffff90
   27d54:	eor	r3, r3, #1
   27d58:	uxtb	r3, r3
   27d5c:	cmp	r3, #0
   27d60:	bne	27d70 <__assert_fail@plt+0x16c18>
   27d64:	ldr	r3, [fp, #-108]	; 0xffffff94
   27d68:	cmp	r3, #0
   27d6c:	beq	27d78 <__assert_fail@plt+0x16c20>
   27d70:	mov	r3, #1
   27d74:	b	27d7c <__assert_fail@plt+0x16c24>
   27d78:	mov	r3, #0
   27d7c:	cmp	r3, #0
   27d80:	beq	27dd0 <__assert_fail@plt+0x16c78>
   27d84:	sub	ip, fp, #80	; 0x50
   27d88:	sub	lr, fp, #120	; 0x78
   27d8c:	ldm	lr!, {r0, r1, r2, r3}
   27d90:	stmia	ip!, {r0, r1, r2, r3}
   27d94:	ldm	lr!, {r0, r1, r2, r3}
   27d98:	stmia	ip!, {r0, r1, r2, r3}
   27d9c:	ldm	lr, {r0, r1}
   27da0:	stm	ip, {r0, r1}
   27da4:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   27da8:	cmp	r3, #0
   27dac:	beq	27dd0 <__assert_fail@plt+0x16c78>
   27db0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   27db4:	mov	r0, r3
   27db8:	bl	11080 <iswalnum@plt>
   27dbc:	mov	r3, r0
   27dc0:	cmp	r3, #0
   27dc4:	beq	27dd0 <__assert_fail@plt+0x16c78>
   27dc8:	mov	r3, #0
   27dcc:	strb	r3, [fp, #-7]
   27dd0:	ldrb	r3, [fp, #-6]
   27dd4:	cmp	r3, #0
   27dd8:	beq	27df4 <__assert_fail@plt+0x16c9c>
   27ddc:	ldrb	r3, [fp, #-7]
   27de0:	cmp	r3, #0
   27de4:	beq	27df4 <__assert_fail@plt+0x16c9c>
   27de8:	mov	r3, #1
   27dec:	strb	r3, [fp, #-5]
   27df0:	b	27f94 <__assert_fail@plt+0x16e3c>
   27df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27df8:	str	r3, [fp, #-120]	; 0xffffff88
   27dfc:	mov	r3, #0
   27e00:	strb	r3, [fp, #-136]	; 0xffffff78
   27e04:	sub	r3, fp, #136	; 0x88
   27e08:	add	r3, r3, #4
   27e0c:	mov	r2, #8
   27e10:	mov	r1, #0
   27e14:	mov	r0, r3
   27e18:	bl	11098 <memset@plt>
   27e1c:	mov	r3, #0
   27e20:	strb	r3, [fp, #-124]	; 0xffffff84
   27e24:	sub	r3, fp, #136	; 0x88
   27e28:	mov	r0, r3
   27e2c:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   27e30:	ldrb	r3, [fp, #-112]	; 0xffffff90
   27e34:	eor	r3, r3, #1
   27e38:	uxtb	r3, r3
   27e3c:	cmp	r3, #0
   27e40:	bne	27e50 <__assert_fail@plt+0x16cf8>
   27e44:	ldr	r3, [fp, #-108]	; 0xffffff94
   27e48:	cmp	r3, #0
   27e4c:	beq	27e58 <__assert_fail@plt+0x16d00>
   27e50:	mov	r3, #1
   27e54:	b	27e5c <__assert_fail@plt+0x16d04>
   27e58:	mov	r3, #0
   27e5c:	cmp	r3, #0
   27e60:	beq	27f88 <__assert_fail@plt+0x16e30>
   27e64:	ldr	r3, [fp, #-116]	; 0xffffff8c
   27e68:	ldr	r2, [fp, #-20]	; 0xffffffec
   27e6c:	add	r3, r2, r3
   27e70:	str	r3, [fp, #-144]	; 0xffffff70
   27e74:	b	27f6c <__assert_fail@plt+0x16e14>
   27e78:	mov	r3, #1
   27e7c:	strb	r3, [fp, #-8]
   27e80:	ldr	r2, [fp, #-144]	; 0xffffff70
   27e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   27e88:	cmp	r2, r3
   27e8c:	bcs	27ec8 <__assert_fail@plt+0x16d70>
   27e90:	bl	11020 <__ctype_b_loc@plt>
   27e94:	mov	r3, r0
   27e98:	ldr	r2, [r3]
   27e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27ea0:	sub	r3, r3, #1
   27ea4:	ldrb	r3, [r3]
   27ea8:	lsl	r3, r3, #1
   27eac:	add	r3, r2, r3
   27eb0:	ldrh	r3, [r3]
   27eb4:	and	r3, r3, #8
   27eb8:	cmp	r3, #0
   27ebc:	beq	27ec8 <__assert_fail@plt+0x16d70>
   27ec0:	mov	r3, #0
   27ec4:	strb	r3, [fp, #-8]
   27ec8:	ldr	r0, [fp, #-16]
   27ecc:	bl	11050 <strlen@plt>
   27ed0:	mov	r2, r0
   27ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27ed8:	add	r3, r3, r2
   27edc:	str	r3, [fp, #-24]	; 0xffffffe8
   27ee0:	mov	r3, #1
   27ee4:	strb	r3, [fp, #-9]
   27ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27eec:	ldrb	r3, [r3]
   27ef0:	cmp	r3, #0
   27ef4:	beq	27f2c <__assert_fail@plt+0x16dd4>
   27ef8:	bl	11020 <__ctype_b_loc@plt>
   27efc:	mov	r3, r0
   27f00:	ldr	r2, [r3]
   27f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27f08:	ldrb	r3, [r3]
   27f0c:	lsl	r3, r3, #1
   27f10:	add	r3, r2, r3
   27f14:	ldrh	r3, [r3]
   27f18:	and	r3, r3, #8
   27f1c:	cmp	r3, #0
   27f20:	beq	27f2c <__assert_fail@plt+0x16dd4>
   27f24:	mov	r3, #0
   27f28:	strb	r3, [fp, #-9]
   27f2c:	ldrb	r3, [fp, #-8]
   27f30:	cmp	r3, #0
   27f34:	beq	27f50 <__assert_fail@plt+0x16df8>
   27f38:	ldrb	r3, [fp, #-9]
   27f3c:	cmp	r3, #0
   27f40:	beq	27f50 <__assert_fail@plt+0x16df8>
   27f44:	mov	r3, #1
   27f48:	strb	r3, [fp, #-5]
   27f4c:	b	27f94 <__assert_fail@plt+0x16e3c>
   27f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f54:	ldrb	r3, [r3]
   27f58:	cmp	r3, #0
   27f5c:	beq	27f90 <__assert_fail@plt+0x16e38>
   27f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f64:	add	r3, r3, #1
   27f68:	str	r3, [fp, #-144]	; 0xffffff70
   27f6c:	ldr	r3, [fp, #-144]	; 0xffffff70
   27f70:	ldrb	r3, [r3]
   27f74:	cmp	r3, #0
   27f78:	bne	27af8 <__assert_fail@plt+0x169a0>
   27f7c:	b	27f94 <__assert_fail@plt+0x16e3c>
   27f80:	nop			; (mov r0, r0)
   27f84:	b	27f94 <__assert_fail@plt+0x16e3c>
   27f88:	nop			; (mov r0, r0)
   27f8c:	b	27f94 <__assert_fail@plt+0x16e3c>
   27f90:	nop			; (mov r0, r0)
   27f94:	ldr	r0, [fp, #-16]
   27f98:	bl	1ad78 <__assert_fail@plt+0x9c20>
   27f9c:	ldrb	r3, [fp, #-5]
   27fa0:	mov	r0, r3
   27fa4:	sub	sp, fp, #4
   27fa8:	pop	{fp, pc}
   27fac:	push	{r4, fp, lr}
   27fb0:	add	fp, sp, #8
   27fb4:	sub	sp, sp, #20
   27fb8:	str	r0, [fp, #-24]	; 0xffffffe8
   27fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27fc0:	bl	11044 <gettext@plt>
   27fc4:	str	r0, [fp, #-16]
   27fc8:	ldr	r2, [fp, #-16]
   27fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27fd0:	cmp	r2, r3
   27fd4:	beq	28044 <__assert_fail@plt+0x16eec>
   27fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27fdc:	ldr	r0, [fp, #-16]
   27fe0:	bl	27ac4 <__assert_fail@plt+0x1696c>
   27fe4:	mov	r3, r0
   27fe8:	cmp	r3, #0
   27fec:	beq	27ff8 <__assert_fail@plt+0x16ea0>
   27ff0:	ldr	r3, [fp, #-16]
   27ff4:	b	28048 <__assert_fail@plt+0x16ef0>
   27ff8:	ldr	r0, [fp, #-16]
   27ffc:	bl	11050 <strlen@plt>
   28000:	mov	r4, r0
   28004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28008:	bl	11050 <strlen@plt>
   2800c:	mov	r3, r0
   28010:	add	r3, r4, r3
   28014:	add	r3, r3, #4
   28018:	mov	r0, r3
   2801c:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   28020:	mov	r3, r0
   28024:	str	r3, [fp, #-20]	; 0xffffffec
   28028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2802c:	ldr	r2, [fp, #-16]
   28030:	ldr	r1, [pc, #28]	; 28054 <__assert_fail@plt+0x16efc>
   28034:	ldr	r0, [fp, #-20]	; 0xffffffec
   28038:	bl	11110 <sprintf@plt>
   2803c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28040:	b	28048 <__assert_fail@plt+0x16ef0>
   28044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28048:	mov	r0, r3
   2804c:	sub	sp, fp, #8
   28050:	pop	{r4, fp, pc}
   28054:	andeq	r4, r3, r8, lsl #6
   28058:	push	{r4, fp, lr}
   2805c:	add	fp, sp, #8
   28060:	sub	sp, sp, #60	; 0x3c
   28064:	str	r0, [fp, #-64]	; 0xffffffc0
   28068:	str	r1, [fp, #-68]	; 0xffffffbc
   2806c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28070:	bl	11044 <gettext@plt>
   28074:	str	r0, [fp, #-32]	; 0xffffffe0
   28078:	bl	2cf1c <__assert_fail@plt+0x1bdc4>
   2807c:	str	r0, [fp, #-36]	; 0xffffffdc
   28080:	mov	r3, #0
   28084:	str	r3, [fp, #-16]
   28088:	mov	r3, #0
   2808c:	str	r3, [fp, #-20]	; 0xffffffec
   28090:	mov	r3, #0
   28094:	str	r3, [fp, #-24]	; 0xffffffe8
   28098:	mov	r3, #0
   2809c:	str	r3, [fp, #-28]	; 0xffffffe4
   280a0:	ldr	r1, [pc, #664]	; 28340 <__assert_fail@plt+0x171e8>
   280a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   280a8:	bl	2c9ec <__assert_fail@plt+0x1b894>
   280ac:	mov	r3, r0
   280b0:	cmp	r3, #0
   280b4:	beq	2818c <__assert_fail@plt+0x17034>
   280b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   280bc:	ldr	r1, [pc, #636]	; 28340 <__assert_fail@plt+0x171e8>
   280c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   280c4:	bl	2c74c <__assert_fail@plt+0x1b5f4>
   280c8:	mov	r3, r0
   280cc:	str	r3, [fp, #-16]
   280d0:	ldr	r3, [fp, #-16]
   280d4:	str	r3, [fp, #-24]	; 0xffffffe8
   280d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   280dc:	bl	11050 <strlen@plt>
   280e0:	str	r0, [fp, #-40]	; 0xffffffd8
   280e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   280e8:	add	r3, r3, #11
   280ec:	mov	r0, r3
   280f0:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   280f4:	mov	r3, r0
   280f8:	str	r3, [fp, #-44]	; 0xffffffd4
   280fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28100:	ldr	r1, [fp, #-36]	; 0xffffffdc
   28104:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28108:	bl	10f00 <memcpy@plt>
   2810c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28110:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28114:	add	r3, r2, r3
   28118:	mov	r2, #11
   2811c:	ldr	r1, [pc, #544]	; 28344 <__assert_fail@plt+0x171ec>
   28120:	mov	r0, r3
   28124:	bl	10f00 <memcpy@plt>
   28128:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2812c:	ldr	r1, [pc, #524]	; 28340 <__assert_fail@plt+0x171e8>
   28130:	ldr	r0, [fp, #-68]	; 0xffffffbc
   28134:	bl	2c74c <__assert_fail@plt+0x1b5f4>
   28138:	mov	r3, r0
   2813c:	str	r3, [fp, #-48]	; 0xffffffd0
   28140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   28144:	bl	1ad78 <__assert_fail@plt+0x9c20>
   28148:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2814c:	cmp	r3, #0
   28150:	beq	2819c <__assert_fail@plt+0x17044>
   28154:	mov	r1, #63	; 0x3f
   28158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2815c:	bl	1105c <strchr@plt>
   28160:	mov	r3, r0
   28164:	cmp	r3, #0
   28168:	beq	28178 <__assert_fail@plt+0x17020>
   2816c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   28170:	bl	1ad78 <__assert_fail@plt+0x9c20>
   28174:	b	2819c <__assert_fail@plt+0x17044>
   28178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2817c:	str	r3, [fp, #-20]	; 0xffffffec
   28180:	ldr	r3, [fp, #-20]	; 0xffffffec
   28184:	str	r3, [fp, #-28]	; 0xffffffe4
   28188:	b	2819c <__assert_fail@plt+0x17044>
   2818c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28190:	str	r3, [fp, #-24]	; 0xffffffe8
   28194:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28198:	str	r3, [fp, #-28]	; 0xffffffe4
   2819c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281a0:	cmp	r3, #0
   281a4:	bne	281c4 <__assert_fail@plt+0x1706c>
   281a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281ac:	cmp	r3, #0
   281b0:	beq	281bc <__assert_fail@plt+0x17064>
   281b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281b8:	b	281c8 <__assert_fail@plt+0x17070>
   281bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   281c0:	b	281c8 <__assert_fail@plt+0x17070>
   281c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281c8:	str	r3, [fp, #-52]	; 0xffffffcc
   281cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   281d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   281d4:	bl	10eac <strcmp@plt>
   281d8:	mov	r3, r0
   281dc:	cmp	r3, #0
   281e0:	beq	282e8 <__assert_fail@plt+0x17190>
   281e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   281e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   281ec:	bl	27ac4 <__assert_fail@plt+0x1696c>
   281f0:	mov	r3, r0
   281f4:	cmp	r3, #0
   281f8:	bne	28244 <__assert_fail@plt+0x170ec>
   281fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28200:	cmp	r3, #0
   28204:	beq	28220 <__assert_fail@plt+0x170c8>
   28208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2820c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28210:	bl	27ac4 <__assert_fail@plt+0x1696c>
   28214:	mov	r3, r0
   28218:	cmp	r3, #0
   2821c:	bne	28244 <__assert_fail@plt+0x170ec>
   28220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28224:	cmp	r3, #0
   28228:	beq	28274 <__assert_fail@plt+0x1711c>
   2822c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28234:	bl	27ac4 <__assert_fail@plt+0x1696c>
   28238:	mov	r3, r0
   2823c:	cmp	r3, #0
   28240:	beq	28274 <__assert_fail@plt+0x1711c>
   28244:	ldr	r3, [fp, #-16]
   28248:	cmp	r3, #0
   2824c:	beq	28258 <__assert_fail@plt+0x17100>
   28250:	ldr	r0, [fp, #-16]
   28254:	bl	1ad78 <__assert_fail@plt+0x9c20>
   28258:	ldr	r3, [fp, #-20]	; 0xffffffec
   2825c:	cmp	r3, #0
   28260:	beq	2826c <__assert_fail@plt+0x17114>
   28264:	ldr	r0, [fp, #-20]	; 0xffffffec
   28268:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2826c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28270:	b	28334 <__assert_fail@plt+0x171dc>
   28274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28278:	bl	11050 <strlen@plt>
   2827c:	mov	r4, r0
   28280:	ldr	r0, [fp, #-52]	; 0xffffffcc
   28284:	bl	11050 <strlen@plt>
   28288:	mov	r3, r0
   2828c:	add	r3, r4, r3
   28290:	add	r3, r3, #4
   28294:	mov	r0, r3
   28298:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   2829c:	mov	r3, r0
   282a0:	str	r3, [fp, #-56]	; 0xffffffc8
   282a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   282a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   282ac:	ldr	r1, [pc, #148]	; 28348 <__assert_fail@plt+0x171f0>
   282b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   282b4:	bl	11110 <sprintf@plt>
   282b8:	ldr	r3, [fp, #-16]
   282bc:	cmp	r3, #0
   282c0:	beq	282cc <__assert_fail@plt+0x17174>
   282c4:	ldr	r0, [fp, #-16]
   282c8:	bl	1ad78 <__assert_fail@plt+0x9c20>
   282cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   282d0:	cmp	r3, #0
   282d4:	beq	282e0 <__assert_fail@plt+0x17188>
   282d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   282dc:	bl	1ad78 <__assert_fail@plt+0x9c20>
   282e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   282e4:	b	28334 <__assert_fail@plt+0x171dc>
   282e8:	ldr	r3, [fp, #-16]
   282ec:	cmp	r3, #0
   282f0:	beq	2830c <__assert_fail@plt+0x171b4>
   282f4:	ldr	r2, [fp, #-16]
   282f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   282fc:	cmp	r2, r3
   28300:	beq	2830c <__assert_fail@plt+0x171b4>
   28304:	ldr	r0, [fp, #-16]
   28308:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2830c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28310:	cmp	r3, #0
   28314:	beq	28330 <__assert_fail@plt+0x171d8>
   28318:	ldr	r2, [fp, #-20]	; 0xffffffec
   2831c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28320:	cmp	r2, r3
   28324:	beq	28330 <__assert_fail@plt+0x171d8>
   28328:	ldr	r0, [fp, #-20]	; 0xffffffec
   2832c:	bl	1ad78 <__assert_fail@plt+0x9c20>
   28330:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28334:	mov	r0, r3
   28338:	sub	sp, fp, #8
   2833c:	pop	{r4, fp, pc}
   28340:	andeq	r4, r3, r0, lsl r3
   28344:	andeq	r4, r3, r8, lsl r3
   28348:	andeq	r4, r3, r8, lsl #6
   2834c:	push	{fp, lr}
   28350:	add	fp, sp, #4
   28354:	sub	sp, sp, #16
   28358:	str	r0, [fp, #-16]
   2835c:	bl	11074 <__errno_location@plt>
   28360:	mov	r3, r0
   28364:	ldr	r3, [r3]
   28368:	str	r3, [fp, #-8]
   2836c:	ldr	r3, [fp, #-16]
   28370:	cmp	r3, #0
   28374:	beq	28380 <__assert_fail@plt+0x17228>
   28378:	ldr	r3, [fp, #-16]
   2837c:	b	28384 <__assert_fail@plt+0x1722c>
   28380:	ldr	r3, [pc, #48]	; 283b8 <__assert_fail@plt+0x17260>
   28384:	mov	r1, #48	; 0x30
   28388:	mov	r0, r3
   2838c:	bl	2c520 <__assert_fail@plt+0x1b3c8>
   28390:	mov	r3, r0
   28394:	str	r3, [fp, #-12]
   28398:	bl	11074 <__errno_location@plt>
   2839c:	mov	r2, r0
   283a0:	ldr	r3, [fp, #-8]
   283a4:	str	r3, [r2]
   283a8:	ldr	r3, [fp, #-12]
   283ac:	mov	r0, r3
   283b0:	sub	sp, fp, #4
   283b4:	pop	{fp, pc}
   283b8:	andeq	r5, r4, ip, lsr #3
   283bc:	push	{fp}		; (str fp, [sp, #-4]!)
   283c0:	add	fp, sp, #0
   283c4:	sub	sp, sp, #12
   283c8:	str	r0, [fp, #-8]
   283cc:	ldr	r3, [fp, #-8]
   283d0:	cmp	r3, #0
   283d4:	beq	283e0 <__assert_fail@plt+0x17288>
   283d8:	ldr	r3, [fp, #-8]
   283dc:	b	283e4 <__assert_fail@plt+0x1728c>
   283e0:	ldr	r3, [pc, #16]	; 283f8 <__assert_fail@plt+0x172a0>
   283e4:	ldr	r3, [r3]
   283e8:	mov	r0, r3
   283ec:	add	sp, fp, #0
   283f0:	pop	{fp}		; (ldr fp, [sp], #4)
   283f4:	bx	lr
   283f8:	andeq	r5, r4, ip, lsr #3
   283fc:	push	{fp}		; (str fp, [sp, #-4]!)
   28400:	add	fp, sp, #0
   28404:	sub	sp, sp, #12
   28408:	str	r0, [fp, #-8]
   2840c:	str	r1, [fp, #-12]
   28410:	ldr	r3, [fp, #-8]
   28414:	cmp	r3, #0
   28418:	beq	28424 <__assert_fail@plt+0x172cc>
   2841c:	ldr	r3, [fp, #-8]
   28420:	b	28428 <__assert_fail@plt+0x172d0>
   28424:	ldr	r3, [pc, #20]	; 28440 <__assert_fail@plt+0x172e8>
   28428:	ldr	r2, [fp, #-12]
   2842c:	str	r2, [r3]
   28430:	nop			; (mov r0, r0)
   28434:	add	sp, fp, #0
   28438:	pop	{fp}		; (ldr fp, [sp], #4)
   2843c:	bx	lr
   28440:	andeq	r5, r4, ip, lsr #3
   28444:	push	{fp}		; (str fp, [sp, #-4]!)
   28448:	add	fp, sp, #0
   2844c:	sub	sp, sp, #36	; 0x24
   28450:	str	r0, [fp, #-24]	; 0xffffffe8
   28454:	mov	r3, r1
   28458:	str	r2, [fp, #-32]	; 0xffffffe0
   2845c:	strb	r3, [fp, #-25]	; 0xffffffe7
   28460:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   28464:	strb	r3, [fp, #-5]
   28468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2846c:	cmp	r3, #0
   28470:	beq	2847c <__assert_fail@plt+0x17324>
   28474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28478:	b	28480 <__assert_fail@plt+0x17328>
   2847c:	ldr	r3, [pc, #124]	; 28500 <__assert_fail@plt+0x173a8>
   28480:	add	r2, r3, #8
   28484:	ldrb	r3, [fp, #-5]
   28488:	lsr	r3, r3, #5
   2848c:	uxtb	r3, r3
   28490:	lsl	r3, r3, #2
   28494:	add	r3, r2, r3
   28498:	str	r3, [fp, #-12]
   2849c:	ldrb	r3, [fp, #-5]
   284a0:	and	r3, r3, #31
   284a4:	str	r3, [fp, #-16]
   284a8:	ldr	r3, [fp, #-12]
   284ac:	ldr	r2, [r3]
   284b0:	ldr	r3, [fp, #-16]
   284b4:	lsr	r3, r2, r3
   284b8:	and	r3, r3, #1
   284bc:	str	r3, [fp, #-20]	; 0xffffffec
   284c0:	ldr	r3, [fp, #-12]
   284c4:	ldr	r3, [r3]
   284c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   284cc:	and	r1, r2, #1
   284d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   284d4:	eor	r1, r1, r2
   284d8:	ldr	r2, [fp, #-16]
   284dc:	lsl	r2, r1, r2
   284e0:	eor	r2, r2, r3
   284e4:	ldr	r3, [fp, #-12]
   284e8:	str	r2, [r3]
   284ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   284f0:	mov	r0, r3
   284f4:	add	sp, fp, #0
   284f8:	pop	{fp}		; (ldr fp, [sp], #4)
   284fc:	bx	lr
   28500:	andeq	r5, r4, ip, lsr #3
   28504:	push	{fp}		; (str fp, [sp, #-4]!)
   28508:	add	fp, sp, #0
   2850c:	sub	sp, sp, #20
   28510:	str	r0, [fp, #-16]
   28514:	str	r1, [fp, #-20]	; 0xffffffec
   28518:	ldr	r3, [fp, #-16]
   2851c:	cmp	r3, #0
   28520:	bne	2852c <__assert_fail@plt+0x173d4>
   28524:	ldr	r3, [pc, #44]	; 28558 <__assert_fail@plt+0x17400>
   28528:	str	r3, [fp, #-16]
   2852c:	ldr	r3, [fp, #-16]
   28530:	ldr	r3, [r3, #4]
   28534:	str	r3, [fp, #-8]
   28538:	ldr	r3, [fp, #-16]
   2853c:	ldr	r2, [fp, #-20]	; 0xffffffec
   28540:	str	r2, [r3, #4]
   28544:	ldr	r3, [fp, #-8]
   28548:	mov	r0, r3
   2854c:	add	sp, fp, #0
   28550:	pop	{fp}		; (ldr fp, [sp], #4)
   28554:	bx	lr
   28558:	andeq	r5, r4, ip, lsr #3
   2855c:	push	{fp, lr}
   28560:	add	fp, sp, #4
   28564:	sub	sp, sp, #16
   28568:	str	r0, [fp, #-8]
   2856c:	str	r1, [fp, #-12]
   28570:	str	r2, [fp, #-16]
   28574:	ldr	r3, [fp, #-8]
   28578:	cmp	r3, #0
   2857c:	bne	28588 <__assert_fail@plt+0x17430>
   28580:	ldr	r3, [pc, #76]	; 285d4 <__assert_fail@plt+0x1747c>
   28584:	str	r3, [fp, #-8]
   28588:	ldr	r3, [fp, #-8]
   2858c:	mov	r2, #10
   28590:	str	r2, [r3]
   28594:	ldr	r3, [fp, #-12]
   28598:	cmp	r3, #0
   2859c:	beq	285ac <__assert_fail@plt+0x17454>
   285a0:	ldr	r3, [fp, #-16]
   285a4:	cmp	r3, #0
   285a8:	bne	285b0 <__assert_fail@plt+0x17458>
   285ac:	bl	11140 <abort@plt>
   285b0:	ldr	r3, [fp, #-8]
   285b4:	ldr	r2, [fp, #-12]
   285b8:	str	r2, [r3, #40]	; 0x28
   285bc:	ldr	r3, [fp, #-8]
   285c0:	ldr	r2, [fp, #-16]
   285c4:	str	r2, [r3, #44]	; 0x2c
   285c8:	nop			; (mov r0, r0)
   285cc:	sub	sp, fp, #4
   285d0:	pop	{fp, pc}
   285d4:	andeq	r5, r4, ip, lsr #3
   285d8:	push	{fp, lr}
   285dc:	add	fp, sp, #4
   285e0:	sub	sp, sp, #56	; 0x38
   285e4:	str	r0, [fp, #-56]	; 0xffffffc8
   285e8:	str	r1, [fp, #-60]	; 0xffffffc4
   285ec:	sub	r3, fp, #52	; 0x34
   285f0:	mov	r2, #48	; 0x30
   285f4:	mov	r1, #0
   285f8:	mov	r0, r3
   285fc:	bl	11098 <memset@plt>
   28600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28604:	cmp	r3, #10
   28608:	bne	28610 <__assert_fail@plt+0x174b8>
   2860c:	bl	11140 <abort@plt>
   28610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28614:	str	r3, [fp, #-52]	; 0xffffffcc
   28618:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2861c:	mov	lr, r3
   28620:	sub	ip, fp, #52	; 0x34
   28624:	ldm	ip!, {r0, r1, r2, r3}
   28628:	stmia	lr!, {r0, r1, r2, r3}
   2862c:	ldm	ip!, {r0, r1, r2, r3}
   28630:	stmia	lr!, {r0, r1, r2, r3}
   28634:	ldm	ip, {r0, r1, r2, r3}
   28638:	stm	lr, {r0, r1, r2, r3}
   2863c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28640:	sub	sp, fp, #4
   28644:	pop	{fp, pc}
   28648:	push	{fp, lr}
   2864c:	add	fp, sp, #4
   28650:	sub	sp, sp, #16
   28654:	str	r0, [fp, #-16]
   28658:	str	r1, [fp, #-20]	; 0xffffffec
   2865c:	ldr	r0, [fp, #-16]
   28660:	bl	11044 <gettext@plt>
   28664:	str	r0, [fp, #-8]
   28668:	ldr	r2, [fp, #-8]
   2866c:	ldr	r3, [fp, #-16]
   28670:	cmp	r2, r3
   28674:	beq	28680 <__assert_fail@plt+0x17528>
   28678:	ldr	r3, [fp, #-8]
   2867c:	b	28710 <__assert_fail@plt+0x175b8>
   28680:	bl	2cf1c <__assert_fail@plt+0x1bdc4>
   28684:	str	r0, [fp, #-12]
   28688:	ldr	r1, [pc, #140]	; 2871c <__assert_fail@plt+0x175c4>
   2868c:	ldr	r0, [fp, #-12]
   28690:	bl	2c9ec <__assert_fail@plt+0x1b894>
   28694:	mov	r3, r0
   28698:	cmp	r3, #0
   2869c:	bne	286c0 <__assert_fail@plt+0x17568>
   286a0:	ldr	r3, [fp, #-16]
   286a4:	ldrb	r3, [r3]
   286a8:	cmp	r3, #96	; 0x60
   286ac:	bne	286b8 <__assert_fail@plt+0x17560>
   286b0:	ldr	r3, [pc, #104]	; 28720 <__assert_fail@plt+0x175c8>
   286b4:	b	28710 <__assert_fail@plt+0x175b8>
   286b8:	ldr	r3, [pc, #100]	; 28724 <__assert_fail@plt+0x175cc>
   286bc:	b	28710 <__assert_fail@plt+0x175b8>
   286c0:	ldr	r1, [pc, #96]	; 28728 <__assert_fail@plt+0x175d0>
   286c4:	ldr	r0, [fp, #-12]
   286c8:	bl	2c9ec <__assert_fail@plt+0x1b894>
   286cc:	mov	r3, r0
   286d0:	cmp	r3, #0
   286d4:	bne	286f8 <__assert_fail@plt+0x175a0>
   286d8:	ldr	r3, [fp, #-16]
   286dc:	ldrb	r3, [r3]
   286e0:	cmp	r3, #96	; 0x60
   286e4:	bne	286f0 <__assert_fail@plt+0x17598>
   286e8:	ldr	r3, [pc, #60]	; 2872c <__assert_fail@plt+0x175d4>
   286ec:	b	28710 <__assert_fail@plt+0x175b8>
   286f0:	ldr	r3, [pc, #56]	; 28730 <__assert_fail@plt+0x175d8>
   286f4:	b	28710 <__assert_fail@plt+0x175b8>
   286f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   286fc:	cmp	r3, #9
   28700:	bne	2870c <__assert_fail@plt+0x175b4>
   28704:	ldr	r3, [pc, #40]	; 28734 <__assert_fail@plt+0x175dc>
   28708:	b	28710 <__assert_fail@plt+0x175b8>
   2870c:	ldr	r3, [pc, #36]	; 28738 <__assert_fail@plt+0x175e0>
   28710:	mov	r0, r3
   28714:	sub	sp, fp, #4
   28718:	pop	{fp, pc}
   2871c:	andeq	r4, r3, r0, ror #7
   28720:	andeq	r4, r3, r8, ror #7
   28724:	andeq	r4, r3, ip, ror #7
   28728:	strdeq	r4, [r3], -r0
   2872c:	strdeq	r4, [r3], -r8
   28730:	strdeq	r4, [r3], -ip
   28734:	andeq	r4, r3, r0, lsl #8
   28738:	andeq	r4, r3, r4, lsl #8
   2873c:	push	{r4, fp, lr}
   28740:	add	fp, sp, #8
   28744:	sub	sp, sp, #116	; 0x74
   28748:	str	r0, [fp, #-88]	; 0xffffffa8
   2874c:	str	r1, [fp, #-92]	; 0xffffffa4
   28750:	str	r2, [fp, #-96]	; 0xffffffa0
   28754:	str	r3, [fp, #-100]	; 0xffffff9c
   28758:	mov	r3, #0
   2875c:	str	r3, [fp, #-20]	; 0xffffffec
   28760:	mov	r3, #0
   28764:	str	r3, [fp, #-24]	; 0xffffffe8
   28768:	mov	r3, #0
   2876c:	str	r3, [fp, #-28]	; 0xffffffe4
   28770:	mov	r3, #0
   28774:	str	r3, [fp, #-32]	; 0xffffffe0
   28778:	mov	r3, #0
   2877c:	strb	r3, [fp, #-33]	; 0xffffffdf
   28780:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   28784:	mov	r3, r0
   28788:	cmp	r3, #1
   2878c:	moveq	r3, #1
   28790:	movne	r3, #0
   28794:	strb	r3, [fp, #-57]	; 0xffffffc7
   28798:	ldr	r3, [fp, #8]
   2879c:	and	r3, r3, #2
   287a0:	cmp	r3, #0
   287a4:	movne	r3, #1
   287a8:	moveq	r3, #0
   287ac:	strb	r3, [fp, #-34]	; 0xffffffde
   287b0:	mov	r3, #0
   287b4:	strb	r3, [fp, #-35]	; 0xffffffdd
   287b8:	mov	r3, #0
   287bc:	strb	r3, [fp, #-36]	; 0xffffffdc
   287c0:	mov	r3, #1
   287c4:	strb	r3, [fp, #-37]	; 0xffffffdb
   287c8:	ldr	r3, [fp, #4]
   287cc:	cmp	r3, #10
   287d0:	ldrls	pc, [pc, r3, lsl #2]
   287d4:	b	289dc <__assert_fail@plt+0x17884>
   287d8:	ldrdeq	r8, [r2], -r0
   287dc:	andeq	r8, r2, ip, asr #18
   287e0:	andeq	r8, r2, r0, ror r9
   287e4:	andeq	r8, r2, r4, asr #18
   287e8:	andeq	r8, r2, r4, asr r9
   287ec:	andeq	r8, r2, r4, lsl r8
   287f0:	andeq	r8, r2, r4, lsl #16
   287f4:	andeq	r8, r2, r4, ror r8
   287f8:	andeq	r8, r2, r8, lsl #17
   287fc:	andeq	r8, r2, r8, lsl #17
   28800:	andeq	r8, r2, r8, lsl #17
   28804:	mov	r3, #5
   28808:	str	r3, [fp, #4]
   2880c:	mov	r3, #1
   28810:	strb	r3, [fp, #-34]	; 0xffffffde
   28814:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28818:	eor	r3, r3, #1
   2881c:	uxtb	r3, r3
   28820:	cmp	r3, #0
   28824:	beq	28858 <__assert_fail@plt+0x17700>
   28828:	ldr	r2, [fp, #-20]	; 0xffffffec
   2882c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28830:	cmp	r2, r3
   28834:	bcs	2884c <__assert_fail@plt+0x176f4>
   28838:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2883c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28840:	add	r3, r2, r3
   28844:	mov	r2, #34	; 0x22
   28848:	strb	r2, [r3]
   2884c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28850:	add	r3, r3, #1
   28854:	str	r3, [fp, #-20]	; 0xffffffec
   28858:	mov	r3, #1
   2885c:	strb	r3, [fp, #-33]	; 0xffffffdf
   28860:	ldr	r3, [pc, #3872]	; 29788 <__assert_fail@plt+0x18630>
   28864:	str	r3, [fp, #-28]	; 0xffffffe4
   28868:	mov	r3, #1
   2886c:	str	r3, [fp, #-32]	; 0xffffffe0
   28870:	b	289e0 <__assert_fail@plt+0x17888>
   28874:	mov	r3, #1
   28878:	strb	r3, [fp, #-33]	; 0xffffffdf
   2887c:	mov	r3, #0
   28880:	strb	r3, [fp, #-34]	; 0xffffffde
   28884:	b	289e0 <__assert_fail@plt+0x17888>
   28888:	ldr	r3, [fp, #4]
   2888c:	cmp	r3, #10
   28890:	beq	288b4 <__assert_fail@plt+0x1775c>
   28894:	ldr	r1, [fp, #4]
   28898:	ldr	r0, [pc, #3820]	; 2978c <__assert_fail@plt+0x18634>
   2889c:	bl	28648 <__assert_fail@plt+0x174f0>
   288a0:	str	r0, [fp, #16]
   288a4:	ldr	r1, [fp, #4]
   288a8:	ldr	r0, [pc, #3808]	; 29790 <__assert_fail@plt+0x18638>
   288ac:	bl	28648 <__assert_fail@plt+0x174f0>
   288b0:	str	r0, [fp, #20]
   288b4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   288b8:	eor	r3, r3, #1
   288bc:	uxtb	r3, r3
   288c0:	cmp	r3, #0
   288c4:	beq	28924 <__assert_fail@plt+0x177cc>
   288c8:	ldr	r3, [fp, #16]
   288cc:	str	r3, [fp, #-28]	; 0xffffffe4
   288d0:	b	28914 <__assert_fail@plt+0x177bc>
   288d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   288d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   288dc:	cmp	r2, r3
   288e0:	bcs	288fc <__assert_fail@plt+0x177a4>
   288e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   288e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   288ec:	add	r3, r2, r3
   288f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   288f4:	ldrb	r2, [r2]
   288f8:	strb	r2, [r3]
   288fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   28900:	add	r3, r3, #1
   28904:	str	r3, [fp, #-20]	; 0xffffffec
   28908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2890c:	add	r3, r3, #1
   28910:	str	r3, [fp, #-28]	; 0xffffffe4
   28914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28918:	ldrb	r3, [r3]
   2891c:	cmp	r3, #0
   28920:	bne	288d4 <__assert_fail@plt+0x1777c>
   28924:	mov	r3, #1
   28928:	strb	r3, [fp, #-33]	; 0xffffffdf
   2892c:	ldr	r3, [fp, #20]
   28930:	str	r3, [fp, #-28]	; 0xffffffe4
   28934:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28938:	bl	11050 <strlen@plt>
   2893c:	str	r0, [fp, #-32]	; 0xffffffe0
   28940:	b	289e0 <__assert_fail@plt+0x17888>
   28944:	mov	r3, #1
   28948:	strb	r3, [fp, #-33]	; 0xffffffdf
   2894c:	mov	r3, #1
   28950:	strb	r3, [fp, #-34]	; 0xffffffde
   28954:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28958:	eor	r3, r3, #1
   2895c:	uxtb	r3, r3
   28960:	cmp	r3, #0
   28964:	beq	28970 <__assert_fail@plt+0x17818>
   28968:	mov	r3, #1
   2896c:	strb	r3, [fp, #-33]	; 0xffffffdf
   28970:	mov	r3, #2
   28974:	str	r3, [fp, #4]
   28978:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2897c:	eor	r3, r3, #1
   28980:	uxtb	r3, r3
   28984:	cmp	r3, #0
   28988:	beq	289bc <__assert_fail@plt+0x17864>
   2898c:	ldr	r2, [fp, #-20]	; 0xffffffec
   28990:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28994:	cmp	r2, r3
   28998:	bcs	289b0 <__assert_fail@plt+0x17858>
   2899c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   289a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   289a4:	add	r3, r2, r3
   289a8:	mov	r2, #39	; 0x27
   289ac:	strb	r2, [r3]
   289b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   289b4:	add	r3, r3, #1
   289b8:	str	r3, [fp, #-20]	; 0xffffffec
   289bc:	ldr	r3, [pc, #3532]	; 29790 <__assert_fail@plt+0x18638>
   289c0:	str	r3, [fp, #-28]	; 0xffffffe4
   289c4:	mov	r3, #1
   289c8:	str	r3, [fp, #-32]	; 0xffffffe0
   289cc:	b	289e0 <__assert_fail@plt+0x17888>
   289d0:	mov	r3, #0
   289d4:	strb	r3, [fp, #-34]	; 0xffffffde
   289d8:	b	289e0 <__assert_fail@plt+0x17888>
   289dc:	bl	11140 <abort@plt>
   289e0:	mov	r3, #0
   289e4:	str	r3, [fp, #-16]
   289e8:	b	29b78 <__assert_fail@plt+0x18a20>
   289ec:	mov	r3, #0
   289f0:	strb	r3, [fp, #-40]	; 0xffffffd8
   289f4:	mov	r3, #0
   289f8:	strb	r3, [fp, #-41]	; 0xffffffd7
   289fc:	mov	r3, #0
   28a00:	strb	r3, [fp, #-42]	; 0xffffffd6
   28a04:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   28a08:	cmp	r3, #0
   28a0c:	beq	28aa8 <__assert_fail@plt+0x17950>
   28a10:	ldr	r3, [fp, #4]
   28a14:	cmp	r3, #2
   28a18:	beq	28aa8 <__assert_fail@plt+0x17950>
   28a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a20:	cmp	r3, #0
   28a24:	beq	28aa8 <__assert_fail@plt+0x17950>
   28a28:	ldr	r2, [fp, #-16]
   28a2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a30:	add	r4, r2, r3
   28a34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28a38:	cmn	r3, #1
   28a3c:	bne	28a60 <__assert_fail@plt+0x17908>
   28a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28a44:	cmp	r3, #1
   28a48:	bls	28a60 <__assert_fail@plt+0x17908>
   28a4c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   28a50:	bl	11050 <strlen@plt>
   28a54:	str	r0, [fp, #-100]	; 0xffffff9c
   28a58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28a5c:	b	28a64 <__assert_fail@plt+0x1790c>
   28a60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28a64:	cmp	r4, r3
   28a68:	bhi	28aa8 <__assert_fail@plt+0x17950>
   28a6c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28a70:	ldr	r3, [fp, #-16]
   28a74:	add	r3, r2, r3
   28a78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28a7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28a80:	mov	r0, r3
   28a84:	bl	10f18 <memcmp@plt>
   28a88:	mov	r3, r0
   28a8c:	cmp	r3, #0
   28a90:	bne	28aa8 <__assert_fail@plt+0x17950>
   28a94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28a98:	cmp	r3, #0
   28a9c:	bne	29d34 <__assert_fail@plt+0x18bdc>
   28aa0:	mov	r3, #1
   28aa4:	strb	r3, [fp, #-40]	; 0xffffffd8
   28aa8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28aac:	ldr	r3, [fp, #-16]
   28ab0:	add	r3, r2, r3
   28ab4:	ldrb	r3, [r3]
   28ab8:	strb	r3, [fp, #-38]	; 0xffffffda
   28abc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   28ac0:	cmp	r3, #126	; 0x7e
   28ac4:	ldrls	pc, [pc, r3, lsl #2]
   28ac8:	b	292f4 <__assert_fail@plt+0x1819c>
   28acc:	andeq	r8, r2, r8, asr #25
   28ad0:	strdeq	r9, [r2], -r4
   28ad4:	strdeq	r9, [r2], -r4
   28ad8:	strdeq	r9, [r2], -r4
   28adc:	strdeq	r9, [r2], -r4
   28ae0:	strdeq	r9, [r2], -r4
   28ae4:	strdeq	r9, [r2], -r4
   28ae8:	strheq	r9, [r2], -r8
   28aec:	andeq	r9, r2, r4, asr #1
   28af0:	strdeq	r9, [r2], -r4
   28af4:	ldrdeq	r9, [r2], -ip
   28af8:	andeq	r9, r2, r0, lsl #2
   28afc:	ldrdeq	r9, [r2], -r0
   28b00:	andeq	r9, r2, r8, ror #1
   28b04:	strdeq	r9, [r2], -r4
   28b08:	strdeq	r9, [r2], -r4
   28b0c:	strdeq	r9, [r2], -r4
   28b10:	strdeq	r9, [r2], -r4
   28b14:	strdeq	r9, [r2], -r4
   28b18:	strdeq	r9, [r2], -r4
   28b1c:	strdeq	r9, [r2], -r4
   28b20:	strdeq	r9, [r2], -r4
   28b24:	strdeq	r9, [r2], -r4
   28b28:	strdeq	r9, [r2], -r4
   28b2c:	strdeq	r9, [r2], -r4
   28b30:	strdeq	r9, [r2], -r4
   28b34:	strdeq	r9, [r2], -r4
   28b38:	strdeq	r9, [r2], -r4
   28b3c:	strdeq	r9, [r2], -r4
   28b40:	strdeq	r9, [r2], -r4
   28b44:	strdeq	r9, [r2], -r4
   28b48:	strdeq	r9, [r2], -r4
   28b4c:	ldrdeq	r9, [r2], -r8
   28b50:	andeq	r9, r2, r0, ror #3
   28b54:	andeq	r9, r2, r0, ror #3
   28b58:	andeq	r9, r2, ip, asr #3
   28b5c:	andeq	r9, r2, r0, ror #3
   28b60:	andeq	r9, r2, r8, ror #5
   28b64:	andeq	r9, r2, r0, ror #3
   28b68:	strdeq	r9, [r2], -ip
   28b6c:	andeq	r9, r2, r0, ror #3
   28b70:	andeq	r9, r2, r0, ror #3
   28b74:	andeq	r9, r2, r0, ror #3
   28b78:	andeq	r9, r2, r8, ror #5
   28b7c:	andeq	r9, r2, r8, ror #5
   28b80:	andeq	r9, r2, r8, ror #5
   28b84:	andeq	r9, r2, r8, ror #5
   28b88:	andeq	r9, r2, r8, ror #5
   28b8c:	andeq	r9, r2, r8, ror #5
   28b90:	andeq	r9, r2, r8, ror #5
   28b94:	andeq	r9, r2, r8, ror #5
   28b98:	andeq	r9, r2, r8, ror #5
   28b9c:	andeq	r9, r2, r8, ror #5
   28ba0:	andeq	r9, r2, r8, ror #5
   28ba4:	andeq	r9, r2, r8, ror #5
   28ba8:	andeq	r9, r2, r8, ror #5
   28bac:	andeq	r9, r2, r8, ror #5
   28bb0:	andeq	r9, r2, r8, ror #5
   28bb4:	andeq	r9, r2, r8, ror #5
   28bb8:	andeq	r9, r2, r0, ror #3
   28bbc:	andeq	r9, r2, r0, ror #3
   28bc0:	andeq	r9, r2, r0, ror #3
   28bc4:	andeq	r9, r2, r0, ror #3
   28bc8:	andeq	r8, r2, r8, lsr #29
   28bcc:	strdeq	r9, [r2], -r4
   28bd0:	andeq	r9, r2, r8, ror #5
   28bd4:	andeq	r9, r2, r8, ror #5
   28bd8:	andeq	r9, r2, r8, ror #5
   28bdc:	andeq	r9, r2, r8, ror #5
   28be0:	andeq	r9, r2, r8, ror #5
   28be4:	andeq	r9, r2, r8, ror #5
   28be8:	andeq	r9, r2, r8, ror #5
   28bec:	andeq	r9, r2, r8, ror #5
   28bf0:	andeq	r9, r2, r8, ror #5
   28bf4:	andeq	r9, r2, r8, ror #5
   28bf8:	andeq	r9, r2, r8, ror #5
   28bfc:	andeq	r9, r2, r8, ror #5
   28c00:	andeq	r9, r2, r8, ror #5
   28c04:	andeq	r9, r2, r8, ror #5
   28c08:	andeq	r9, r2, r8, ror #5
   28c0c:	andeq	r9, r2, r8, ror #5
   28c10:	andeq	r9, r2, r8, ror #5
   28c14:	andeq	r9, r2, r8, ror #5
   28c18:	andeq	r9, r2, r8, ror #5
   28c1c:	andeq	r9, r2, r8, ror #5
   28c20:	andeq	r9, r2, r8, ror #5
   28c24:	andeq	r9, r2, r8, ror #5
   28c28:	andeq	r9, r2, r8, ror #5
   28c2c:	andeq	r9, r2, r8, ror #5
   28c30:	andeq	r9, r2, r8, ror #5
   28c34:	andeq	r9, r2, r8, ror #5
   28c38:	andeq	r9, r2, r0, ror #3
   28c3c:	andeq	r9, r2, ip, lsl #2
   28c40:	andeq	r9, r2, r8, ror #5
   28c44:	andeq	r9, r2, r0, ror #3
   28c48:	andeq	r9, r2, r8, ror #5
   28c4c:	andeq	r9, r2, r0, ror #3
   28c50:	andeq	r9, r2, r8, ror #5
   28c54:	andeq	r9, r2, r8, ror #5
   28c58:	andeq	r9, r2, r8, ror #5
   28c5c:	andeq	r9, r2, r8, ror #5
   28c60:	andeq	r9, r2, r8, ror #5
   28c64:	andeq	r9, r2, r8, ror #5
   28c68:	andeq	r9, r2, r8, ror #5
   28c6c:	andeq	r9, r2, r8, ror #5
   28c70:	andeq	r9, r2, r8, ror #5
   28c74:	andeq	r9, r2, r8, ror #5
   28c78:	andeq	r9, r2, r8, ror #5
   28c7c:	andeq	r9, r2, r8, ror #5
   28c80:	andeq	r9, r2, r8, ror #5
   28c84:	andeq	r9, r2, r8, ror #5
   28c88:	andeq	r9, r2, r8, ror #5
   28c8c:	andeq	r9, r2, r8, ror #5
   28c90:	andeq	r9, r2, r8, ror #5
   28c94:	andeq	r9, r2, r8, ror #5
   28c98:	andeq	r9, r2, r8, ror #5
   28c9c:	andeq	r9, r2, r8, ror #5
   28ca0:	andeq	r9, r2, r8, ror #5
   28ca4:	andeq	r9, r2, r8, ror #5
   28ca8:	andeq	r9, r2, r8, ror #5
   28cac:	andeq	r9, r2, r8, ror #5
   28cb0:	andeq	r9, r2, r8, ror #5
   28cb4:	andeq	r9, r2, r8, ror #5
   28cb8:	andeq	r9, r2, r4, lsl #3
   28cbc:	andeq	r9, r2, r0, ror #3
   28cc0:	andeq	r9, r2, r4, lsl #3
   28cc4:	andeq	r9, r2, ip, asr #3
   28cc8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   28ccc:	cmp	r3, #0
   28cd0:	beq	28e94 <__assert_fail@plt+0x17d3c>
   28cd4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28cd8:	cmp	r3, #0
   28cdc:	bne	29d3c <__assert_fail@plt+0x18be4>
   28ce0:	mov	r3, #1
   28ce4:	strb	r3, [fp, #-41]	; 0xffffffd7
   28ce8:	ldr	r3, [fp, #4]
   28cec:	cmp	r3, #2
   28cf0:	bne	28da0 <__assert_fail@plt+0x17c48>
   28cf4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   28cf8:	eor	r3, r3, #1
   28cfc:	uxtb	r3, r3
   28d00:	cmp	r3, #0
   28d04:	beq	28da0 <__assert_fail@plt+0x17c48>
   28d08:	ldr	r2, [fp, #-20]	; 0xffffffec
   28d0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28d10:	cmp	r2, r3
   28d14:	bcs	28d2c <__assert_fail@plt+0x17bd4>
   28d18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d20:	add	r3, r2, r3
   28d24:	mov	r2, #39	; 0x27
   28d28:	strb	r2, [r3]
   28d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d30:	add	r3, r3, #1
   28d34:	str	r3, [fp, #-20]	; 0xffffffec
   28d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   28d3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28d40:	cmp	r2, r3
   28d44:	bcs	28d5c <__assert_fail@plt+0x17c04>
   28d48:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d50:	add	r3, r2, r3
   28d54:	mov	r2, #36	; 0x24
   28d58:	strb	r2, [r3]
   28d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d60:	add	r3, r3, #1
   28d64:	str	r3, [fp, #-20]	; 0xffffffec
   28d68:	ldr	r2, [fp, #-20]	; 0xffffffec
   28d6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28d70:	cmp	r2, r3
   28d74:	bcs	28d8c <__assert_fail@plt+0x17c34>
   28d78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d80:	add	r3, r2, r3
   28d84:	mov	r2, #39	; 0x27
   28d88:	strb	r2, [r3]
   28d8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28d90:	add	r3, r3, #1
   28d94:	str	r3, [fp, #-20]	; 0xffffffec
   28d98:	mov	r3, #1
   28d9c:	strb	r3, [fp, #-35]	; 0xffffffdd
   28da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   28da4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28da8:	cmp	r2, r3
   28dac:	bcs	28dc4 <__assert_fail@plt+0x17c6c>
   28db0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28db4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28db8:	add	r3, r2, r3
   28dbc:	mov	r2, #92	; 0x5c
   28dc0:	strb	r2, [r3]
   28dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28dc8:	add	r3, r3, #1
   28dcc:	str	r3, [fp, #-20]	; 0xffffffec
   28dd0:	ldr	r3, [fp, #4]
   28dd4:	cmp	r3, #2
   28dd8:	beq	28e88 <__assert_fail@plt+0x17d30>
   28ddc:	ldr	r3, [fp, #-16]
   28de0:	add	r2, r3, #1
   28de4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28de8:	cmp	r2, r3
   28dec:	bcs	28e88 <__assert_fail@plt+0x17d30>
   28df0:	ldr	r3, [fp, #-16]
   28df4:	add	r3, r3, #1
   28df8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28dfc:	add	r3, r2, r3
   28e00:	ldrb	r3, [r3]
   28e04:	cmp	r3, #47	; 0x2f
   28e08:	bls	28e88 <__assert_fail@plt+0x17d30>
   28e0c:	ldr	r3, [fp, #-16]
   28e10:	add	r3, r3, #1
   28e14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28e18:	add	r3, r2, r3
   28e1c:	ldrb	r3, [r3]
   28e20:	cmp	r3, #57	; 0x39
   28e24:	bhi	28e88 <__assert_fail@plt+0x17d30>
   28e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   28e2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28e30:	cmp	r2, r3
   28e34:	bcs	28e4c <__assert_fail@plt+0x17cf4>
   28e38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e40:	add	r3, r2, r3
   28e44:	mov	r2, #48	; 0x30
   28e48:	strb	r2, [r3]
   28e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e50:	add	r3, r3, #1
   28e54:	str	r3, [fp, #-20]	; 0xffffffec
   28e58:	ldr	r2, [fp, #-20]	; 0xffffffec
   28e5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28e60:	cmp	r2, r3
   28e64:	bcs	28e7c <__assert_fail@plt+0x17d24>
   28e68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e70:	add	r3, r2, r3
   28e74:	mov	r2, #48	; 0x30
   28e78:	strb	r2, [r3]
   28e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e80:	add	r3, r3, #1
   28e84:	str	r3, [fp, #-20]	; 0xffffffec
   28e88:	mov	r3, #48	; 0x30
   28e8c:	strb	r3, [fp, #-38]	; 0xffffffda
   28e90:	b	298d0 <__assert_fail@plt+0x18778>
   28e94:	ldr	r3, [fp, #8]
   28e98:	and	r3, r3, #1
   28e9c:	cmp	r3, #0
   28ea0:	beq	298d0 <__assert_fail@plt+0x18778>
   28ea4:	b	29b6c <__assert_fail@plt+0x18a14>
   28ea8:	ldr	r3, [fp, #4]
   28eac:	cmp	r3, #2
   28eb0:	beq	28ec0 <__assert_fail@plt+0x17d68>
   28eb4:	cmp	r3, #5
   28eb8:	beq	28ed0 <__assert_fail@plt+0x17d78>
   28ebc:	b	290b4 <__assert_fail@plt+0x17f5c>
   28ec0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28ec4:	cmp	r3, #0
   28ec8:	beq	290a8 <__assert_fail@plt+0x17f50>
   28ecc:	b	29d78 <__assert_fail@plt+0x18c20>
   28ed0:	ldr	r3, [fp, #8]
   28ed4:	and	r3, r3, #4
   28ed8:	cmp	r3, #0
   28edc:	beq	290b0 <__assert_fail@plt+0x17f58>
   28ee0:	ldr	r3, [fp, #-16]
   28ee4:	add	r2, r3, #2
   28ee8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28eec:	cmp	r2, r3
   28ef0:	bcs	290b0 <__assert_fail@plt+0x17f58>
   28ef4:	ldr	r3, [fp, #-16]
   28ef8:	add	r3, r3, #1
   28efc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28f00:	add	r3, r2, r3
   28f04:	ldrb	r3, [r3]
   28f08:	cmp	r3, #63	; 0x3f
   28f0c:	bne	290b0 <__assert_fail@plt+0x17f58>
   28f10:	ldr	r3, [fp, #-16]
   28f14:	add	r3, r3, #2
   28f18:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28f1c:	add	r3, r2, r3
   28f20:	ldrb	r3, [r3]
   28f24:	sub	r3, r3, #33	; 0x21
   28f28:	cmp	r3, #29
   28f2c:	ldrls	pc, [pc, r3, lsl #2]
   28f30:	b	290a0 <__assert_fail@plt+0x17f48>
   28f34:	andeq	r8, r2, ip, lsr #31
   28f38:	andeq	r9, r2, r0, lsr #1
   28f3c:	andeq	r9, r2, r0, lsr #1
   28f40:	andeq	r9, r2, r0, lsr #1
   28f44:	andeq	r9, r2, r0, lsr #1
   28f48:	andeq	r9, r2, r0, lsr #1
   28f4c:	andeq	r8, r2, ip, lsr #31
   28f50:	andeq	r8, r2, ip, lsr #31
   28f54:	andeq	r8, r2, ip, lsr #31
   28f58:	andeq	r9, r2, r0, lsr #1
   28f5c:	andeq	r9, r2, r0, lsr #1
   28f60:	andeq	r9, r2, r0, lsr #1
   28f64:	andeq	r8, r2, ip, lsr #31
   28f68:	andeq	r9, r2, r0, lsr #1
   28f6c:	andeq	r8, r2, ip, lsr #31
   28f70:	andeq	r9, r2, r0, lsr #1
   28f74:	andeq	r9, r2, r0, lsr #1
   28f78:	andeq	r9, r2, r0, lsr #1
   28f7c:	andeq	r9, r2, r0, lsr #1
   28f80:	andeq	r9, r2, r0, lsr #1
   28f84:	andeq	r9, r2, r0, lsr #1
   28f88:	andeq	r9, r2, r0, lsr #1
   28f8c:	andeq	r9, r2, r0, lsr #1
   28f90:	andeq	r9, r2, r0, lsr #1
   28f94:	andeq	r9, r2, r0, lsr #1
   28f98:	andeq	r9, r2, r0, lsr #1
   28f9c:	andeq	r9, r2, r0, lsr #1
   28fa0:	andeq	r8, r2, ip, lsr #31
   28fa4:	andeq	r8, r2, ip, lsr #31
   28fa8:	andeq	r8, r2, ip, lsr #31
   28fac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   28fb0:	cmp	r3, #0
   28fb4:	bne	29d44 <__assert_fail@plt+0x18bec>
   28fb8:	ldr	r3, [fp, #-16]
   28fbc:	add	r3, r3, #2
   28fc0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   28fc4:	add	r3, r2, r3
   28fc8:	ldrb	r3, [r3]
   28fcc:	strb	r3, [fp, #-38]	; 0xffffffda
   28fd0:	ldr	r3, [fp, #-16]
   28fd4:	add	r3, r3, #2
   28fd8:	str	r3, [fp, #-16]
   28fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   28fe0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28fe4:	cmp	r2, r3
   28fe8:	bcs	29000 <__assert_fail@plt+0x17ea8>
   28fec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   28ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ff4:	add	r3, r2, r3
   28ff8:	mov	r2, #63	; 0x3f
   28ffc:	strb	r2, [r3]
   29000:	ldr	r3, [fp, #-20]	; 0xffffffec
   29004:	add	r3, r3, #1
   29008:	str	r3, [fp, #-20]	; 0xffffffec
   2900c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29010:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29014:	cmp	r2, r3
   29018:	bcs	29030 <__assert_fail@plt+0x17ed8>
   2901c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29020:	ldr	r3, [fp, #-20]	; 0xffffffec
   29024:	add	r3, r2, r3
   29028:	mov	r2, #34	; 0x22
   2902c:	strb	r2, [r3]
   29030:	ldr	r3, [fp, #-20]	; 0xffffffec
   29034:	add	r3, r3, #1
   29038:	str	r3, [fp, #-20]	; 0xffffffec
   2903c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29040:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29044:	cmp	r2, r3
   29048:	bcs	29060 <__assert_fail@plt+0x17f08>
   2904c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29050:	ldr	r3, [fp, #-20]	; 0xffffffec
   29054:	add	r3, r2, r3
   29058:	mov	r2, #34	; 0x22
   2905c:	strb	r2, [r3]
   29060:	ldr	r3, [fp, #-20]	; 0xffffffec
   29064:	add	r3, r3, #1
   29068:	str	r3, [fp, #-20]	; 0xffffffec
   2906c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29070:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29074:	cmp	r2, r3
   29078:	bcs	29090 <__assert_fail@plt+0x17f38>
   2907c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29080:	ldr	r3, [fp, #-20]	; 0xffffffec
   29084:	add	r3, r2, r3
   29088:	mov	r2, #63	; 0x3f
   2908c:	strb	r2, [r3]
   29090:	ldr	r3, [fp, #-20]	; 0xffffffec
   29094:	add	r3, r3, #1
   29098:	str	r3, [fp, #-20]	; 0xffffffec
   2909c:	b	290a4 <__assert_fail@plt+0x17f4c>
   290a0:	nop			; (mov r0, r0)
   290a4:	b	290b0 <__assert_fail@plt+0x17f58>
   290a8:	nop			; (mov r0, r0)
   290ac:	b	298fc <__assert_fail@plt+0x187a4>
   290b0:	nop			; (mov r0, r0)
   290b4:	b	298fc <__assert_fail@plt+0x187a4>
   290b8:	mov	r3, #97	; 0x61
   290bc:	strb	r3, [fp, #-39]	; 0xffffffd9
   290c0:	b	2916c <__assert_fail@plt+0x18014>
   290c4:	mov	r3, #98	; 0x62
   290c8:	strb	r3, [fp, #-39]	; 0xffffffd9
   290cc:	b	2916c <__assert_fail@plt+0x18014>
   290d0:	mov	r3, #102	; 0x66
   290d4:	strb	r3, [fp, #-39]	; 0xffffffd9
   290d8:	b	2916c <__assert_fail@plt+0x18014>
   290dc:	mov	r3, #110	; 0x6e
   290e0:	strb	r3, [fp, #-39]	; 0xffffffd9
   290e4:	b	29154 <__assert_fail@plt+0x17ffc>
   290e8:	mov	r3, #114	; 0x72
   290ec:	strb	r3, [fp, #-39]	; 0xffffffd9
   290f0:	b	29154 <__assert_fail@plt+0x17ffc>
   290f4:	mov	r3, #116	; 0x74
   290f8:	strb	r3, [fp, #-39]	; 0xffffffd9
   290fc:	b	29154 <__assert_fail@plt+0x17ffc>
   29100:	mov	r3, #118	; 0x76
   29104:	strb	r3, [fp, #-39]	; 0xffffffd9
   29108:	b	2916c <__assert_fail@plt+0x18014>
   2910c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   29110:	strb	r3, [fp, #-39]	; 0xffffffd9
   29114:	ldr	r3, [fp, #4]
   29118:	cmp	r3, #2
   2911c:	bne	29130 <__assert_fail@plt+0x17fd8>
   29120:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29124:	cmp	r3, #0
   29128:	beq	29a84 <__assert_fail@plt+0x1892c>
   2912c:	b	29d78 <__assert_fail@plt+0x18c20>
   29130:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   29134:	cmp	r3, #0
   29138:	beq	29154 <__assert_fail@plt+0x17ffc>
   2913c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29140:	cmp	r3, #0
   29144:	beq	29154 <__assert_fail@plt+0x17ffc>
   29148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2914c:	cmp	r3, #0
   29150:	bne	29a8c <__assert_fail@plt+0x18934>
   29154:	ldr	r3, [fp, #4]
   29158:	cmp	r3, #2
   2915c:	bne	2916c <__assert_fail@plt+0x18014>
   29160:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29164:	cmp	r3, #0
   29168:	bne	29d4c <__assert_fail@plt+0x18bf4>
   2916c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   29170:	cmp	r3, #0
   29174:	beq	298d8 <__assert_fail@plt+0x18780>
   29178:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   2917c:	strb	r3, [fp, #-38]	; 0xffffffda
   29180:	b	29984 <__assert_fail@plt+0x1882c>
   29184:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29188:	cmn	r3, #1
   2918c:	bne	291b0 <__assert_fail@plt+0x18058>
   29190:	ldr	r3, [fp, #-96]	; 0xffffffa0
   29194:	add	r3, r3, #1
   29198:	ldrb	r3, [r3]
   2919c:	cmp	r3, #0
   291a0:	movne	r3, #1
   291a4:	moveq	r3, #0
   291a8:	uxtb	r3, r3
   291ac:	b	291c4 <__assert_fail@plt+0x1806c>
   291b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   291b4:	cmp	r3, #1
   291b8:	movne	r3, #1
   291bc:	moveq	r3, #0
   291c0:	uxtb	r3, r3
   291c4:	cmp	r3, #0
   291c8:	bne	298e0 <__assert_fail@plt+0x18788>
   291cc:	ldr	r3, [fp, #-16]
   291d0:	cmp	r3, #0
   291d4:	bne	298e8 <__assert_fail@plt+0x18790>
   291d8:	mov	r3, #1
   291dc:	strb	r3, [fp, #-42]	; 0xffffffd6
   291e0:	ldr	r3, [fp, #4]
   291e4:	cmp	r3, #2
   291e8:	bne	298f0 <__assert_fail@plt+0x18798>
   291ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   291f0:	cmp	r3, #0
   291f4:	beq	298f0 <__assert_fail@plt+0x18798>
   291f8:	b	29d78 <__assert_fail@plt+0x18c20>
   291fc:	mov	r3, #1
   29200:	strb	r3, [fp, #-36]	; 0xffffffdc
   29204:	mov	r3, #1
   29208:	strb	r3, [fp, #-42]	; 0xffffffd6
   2920c:	ldr	r3, [fp, #4]
   29210:	cmp	r3, #2
   29214:	bne	298f8 <__assert_fail@plt+0x187a0>
   29218:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2921c:	cmp	r3, #0
   29220:	bne	29d54 <__assert_fail@plt+0x18bfc>
   29224:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29228:	cmp	r3, #0
   2922c:	beq	2924c <__assert_fail@plt+0x180f4>
   29230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29234:	cmp	r3, #0
   29238:	bne	2924c <__assert_fail@plt+0x180f4>
   2923c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29240:	str	r3, [fp, #-24]	; 0xffffffe8
   29244:	mov	r3, #0
   29248:	str	r3, [fp, #-92]	; 0xffffffa4
   2924c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29250:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29254:	cmp	r2, r3
   29258:	bcs	29270 <__assert_fail@plt+0x18118>
   2925c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29260:	ldr	r3, [fp, #-20]	; 0xffffffec
   29264:	add	r3, r2, r3
   29268:	mov	r2, #39	; 0x27
   2926c:	strb	r2, [r3]
   29270:	ldr	r3, [fp, #-20]	; 0xffffffec
   29274:	add	r3, r3, #1
   29278:	str	r3, [fp, #-20]	; 0xffffffec
   2927c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29280:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29284:	cmp	r2, r3
   29288:	bcs	292a0 <__assert_fail@plt+0x18148>
   2928c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29290:	ldr	r3, [fp, #-20]	; 0xffffffec
   29294:	add	r3, r2, r3
   29298:	mov	r2, #92	; 0x5c
   2929c:	strb	r2, [r3]
   292a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   292a4:	add	r3, r3, #1
   292a8:	str	r3, [fp, #-20]	; 0xffffffec
   292ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   292b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   292b4:	cmp	r2, r3
   292b8:	bcs	292d0 <__assert_fail@plt+0x18178>
   292bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   292c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   292c4:	add	r3, r2, r3
   292c8:	mov	r2, #39	; 0x27
   292cc:	strb	r2, [r3]
   292d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   292d4:	add	r3, r3, #1
   292d8:	str	r3, [fp, #-20]	; 0xffffffec
   292dc:	mov	r3, #0
   292e0:	strb	r3, [fp, #-35]	; 0xffffffdd
   292e4:	b	298f8 <__assert_fail@plt+0x187a0>
   292e8:	mov	r3, #1
   292ec:	strb	r3, [fp, #-42]	; 0xffffffd6
   292f0:	b	298fc <__assert_fail@plt+0x187a4>
   292f4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   292f8:	cmp	r3, #0
   292fc:	beq	2933c <__assert_fail@plt+0x181e4>
   29300:	mov	r3, #1
   29304:	str	r3, [fp, #-48]	; 0xffffffd0
   29308:	bl	11020 <__ctype_b_loc@plt>
   2930c:	mov	r3, r0
   29310:	ldr	r2, [r3]
   29314:	ldrb	r3, [fp, #-38]	; 0xffffffda
   29318:	lsl	r3, r3, #1
   2931c:	add	r3, r2, r3
   29320:	ldrh	r3, [r3]
   29324:	and	r3, r3, #16384	; 0x4000
   29328:	cmp	r3, #0
   2932c:	movne	r3, #1
   29330:	moveq	r3, #0
   29334:	strb	r3, [fp, #-49]	; 0xffffffcf
   29338:	b	29588 <__assert_fail@plt+0x18430>
   2933c:	sub	r3, fp, #76	; 0x4c
   29340:	mov	r2, #8
   29344:	mov	r1, #0
   29348:	mov	r0, r3
   2934c:	bl	11098 <memset@plt>
   29350:	mov	r3, #0
   29354:	str	r3, [fp, #-48]	; 0xffffffd0
   29358:	mov	r3, #1
   2935c:	strb	r3, [fp, #-49]	; 0xffffffcf
   29360:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29364:	cmn	r3, #1
   29368:	bne	29378 <__assert_fail@plt+0x18220>
   2936c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   29370:	bl	11050 <strlen@plt>
   29374:	str	r0, [fp, #-100]	; 0xffffff9c
   29378:	ldr	r2, [fp, #-16]
   2937c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29380:	add	r3, r2, r3
   29384:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29388:	add	r1, r2, r3
   2938c:	ldr	r2, [fp, #-16]
   29390:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29394:	add	r3, r2, r3
   29398:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2939c:	sub	r2, r2, r3
   293a0:	sub	r3, fp, #76	; 0x4c
   293a4:	sub	r0, fp, #80	; 0x50
   293a8:	bl	2d2c8 <__assert_fail@plt+0x1c170>
   293ac:	str	r0, [fp, #-64]	; 0xffffffc0
   293b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   293b4:	cmp	r3, #0
   293b8:	beq	2957c <__assert_fail@plt+0x18424>
   293bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   293c0:	cmn	r3, #1
   293c4:	bne	293d4 <__assert_fail@plt+0x1827c>
   293c8:	mov	r3, #0
   293cc:	strb	r3, [fp, #-49]	; 0xffffffcf
   293d0:	b	29588 <__assert_fail@plt+0x18430>
   293d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   293d8:	cmn	r3, #2
   293dc:	bne	29434 <__assert_fail@plt+0x182dc>
   293e0:	mov	r3, #0
   293e4:	strb	r3, [fp, #-49]	; 0xffffffcf
   293e8:	b	293f8 <__assert_fail@plt+0x182a0>
   293ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   293f0:	add	r3, r3, #1
   293f4:	str	r3, [fp, #-48]	; 0xffffffd0
   293f8:	ldr	r2, [fp, #-16]
   293fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29400:	add	r2, r2, r3
   29404:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29408:	cmp	r2, r3
   2940c:	bcs	29584 <__assert_fail@plt+0x1842c>
   29410:	ldr	r2, [fp, #-16]
   29414:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29418:	add	r3, r2, r3
   2941c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29420:	add	r3, r2, r3
   29424:	ldrb	r3, [r3]
   29428:	cmp	r3, #0
   2942c:	bne	293ec <__assert_fail@plt+0x18294>
   29430:	b	29584 <__assert_fail@plt+0x1842c>
   29434:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29438:	cmp	r3, #0
   2943c:	beq	29530 <__assert_fail@plt+0x183d8>
   29440:	ldr	r3, [fp, #4]
   29444:	cmp	r3, #2
   29448:	bne	29530 <__assert_fail@plt+0x183d8>
   2944c:	mov	r3, #1
   29450:	str	r3, [fp, #-56]	; 0xffffffc8
   29454:	b	29520 <__assert_fail@plt+0x183c8>
   29458:	ldr	r2, [fp, #-16]
   2945c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29460:	add	r2, r2, r3
   29464:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29468:	add	r3, r2, r3
   2946c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29470:	add	r3, r2, r3
   29474:	ldrb	r3, [r3]
   29478:	sub	r3, r3, #91	; 0x5b
   2947c:	cmp	r3, #33	; 0x21
   29480:	ldrls	pc, [pc, r3, lsl #2]
   29484:	b	29510 <__assert_fail@plt+0x183b8>
   29488:	andeq	r9, r2, ip, asr sp
   2948c:	andeq	r9, r2, ip, asr sp
   29490:	andeq	r9, r2, r0, lsl r5
   29494:	andeq	r9, r2, ip, asr sp
   29498:	andeq	r9, r2, r0, lsl r5
   2949c:	andeq	r9, r2, ip, asr sp
   294a0:	andeq	r9, r2, r0, lsl r5
   294a4:	andeq	r9, r2, r0, lsl r5
   294a8:	andeq	r9, r2, r0, lsl r5
   294ac:	andeq	r9, r2, r0, lsl r5
   294b0:	andeq	r9, r2, r0, lsl r5
   294b4:	andeq	r9, r2, r0, lsl r5
   294b8:	andeq	r9, r2, r0, lsl r5
   294bc:	andeq	r9, r2, r0, lsl r5
   294c0:	andeq	r9, r2, r0, lsl r5
   294c4:	andeq	r9, r2, r0, lsl r5
   294c8:	andeq	r9, r2, r0, lsl r5
   294cc:	andeq	r9, r2, r0, lsl r5
   294d0:	andeq	r9, r2, r0, lsl r5
   294d4:	andeq	r9, r2, r0, lsl r5
   294d8:	andeq	r9, r2, r0, lsl r5
   294dc:	andeq	r9, r2, r0, lsl r5
   294e0:	andeq	r9, r2, r0, lsl r5
   294e4:	andeq	r9, r2, r0, lsl r5
   294e8:	andeq	r9, r2, r0, lsl r5
   294ec:	andeq	r9, r2, r0, lsl r5
   294f0:	andeq	r9, r2, r0, lsl r5
   294f4:	andeq	r9, r2, r0, lsl r5
   294f8:	andeq	r9, r2, r0, lsl r5
   294fc:	andeq	r9, r2, r0, lsl r5
   29500:	andeq	r9, r2, r0, lsl r5
   29504:	andeq	r9, r2, r0, lsl r5
   29508:	andeq	r9, r2, r0, lsl r5
   2950c:	andeq	r9, r2, ip, asr sp
   29510:	nop			; (mov r0, r0)
   29514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29518:	add	r3, r3, #1
   2951c:	str	r3, [fp, #-56]	; 0xffffffc8
   29520:	ldr	r2, [fp, #-56]	; 0xffffffc8
   29524:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29528:	cmp	r2, r3
   2952c:	bcc	29458 <__assert_fail@plt+0x18300>
   29530:	ldr	r3, [fp, #-80]	; 0xffffffb0
   29534:	mov	r0, r3
   29538:	bl	10f78 <iswprint@plt>
   2953c:	mov	r3, r0
   29540:	cmp	r3, #0
   29544:	bne	29550 <__assert_fail@plt+0x183f8>
   29548:	mov	r3, #0
   2954c:	strb	r3, [fp, #-49]	; 0xffffffcf
   29550:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29554:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29558:	add	r3, r2, r3
   2955c:	str	r3, [fp, #-48]	; 0xffffffd0
   29560:	sub	r3, fp, #76	; 0x4c
   29564:	mov	r0, r3
   29568:	bl	10f0c <mbsinit@plt>
   2956c:	mov	r3, r0
   29570:	cmp	r3, #0
   29574:	beq	29378 <__assert_fail@plt+0x18220>
   29578:	b	29588 <__assert_fail@plt+0x18430>
   2957c:	nop			; (mov r0, r0)
   29580:	b	29588 <__assert_fail@plt+0x18430>
   29584:	nop			; (mov r0, r0)
   29588:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2958c:	strb	r3, [fp, #-42]	; 0xffffffd6
   29590:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29594:	cmp	r3, #1
   29598:	bhi	295bc <__assert_fail@plt+0x18464>
   2959c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   295a0:	cmp	r3, #0
   295a4:	beq	298fc <__assert_fail@plt+0x187a4>
   295a8:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   295ac:	eor	r3, r3, #1
   295b0:	uxtb	r3, r3
   295b4:	cmp	r3, #0
   295b8:	beq	298fc <__assert_fail@plt+0x187a4>
   295bc:	ldr	r2, [fp, #-16]
   295c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   295c4:	add	r3, r2, r3
   295c8:	str	r3, [fp, #-68]	; 0xffffffbc
   295cc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   295d0:	cmp	r3, #0
   295d4:	beq	29794 <__assert_fail@plt+0x1863c>
   295d8:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   295dc:	eor	r3, r3, #1
   295e0:	uxtb	r3, r3
   295e4:	cmp	r3, #0
   295e8:	beq	29794 <__assert_fail@plt+0x1863c>
   295ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   295f0:	cmp	r3, #0
   295f4:	bne	29d64 <__assert_fail@plt+0x18c0c>
   295f8:	mov	r3, #1
   295fc:	strb	r3, [fp, #-41]	; 0xffffffd7
   29600:	ldr	r3, [fp, #4]
   29604:	cmp	r3, #2
   29608:	bne	296b8 <__assert_fail@plt+0x18560>
   2960c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   29610:	eor	r3, r3, #1
   29614:	uxtb	r3, r3
   29618:	cmp	r3, #0
   2961c:	beq	296b8 <__assert_fail@plt+0x18560>
   29620:	ldr	r2, [fp, #-20]	; 0xffffffec
   29624:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29628:	cmp	r2, r3
   2962c:	bcs	29644 <__assert_fail@plt+0x184ec>
   29630:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29634:	ldr	r3, [fp, #-20]	; 0xffffffec
   29638:	add	r3, r2, r3
   2963c:	mov	r2, #39	; 0x27
   29640:	strb	r2, [r3]
   29644:	ldr	r3, [fp, #-20]	; 0xffffffec
   29648:	add	r3, r3, #1
   2964c:	str	r3, [fp, #-20]	; 0xffffffec
   29650:	ldr	r2, [fp, #-20]	; 0xffffffec
   29654:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29658:	cmp	r2, r3
   2965c:	bcs	29674 <__assert_fail@plt+0x1851c>
   29660:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29664:	ldr	r3, [fp, #-20]	; 0xffffffec
   29668:	add	r3, r2, r3
   2966c:	mov	r2, #36	; 0x24
   29670:	strb	r2, [r3]
   29674:	ldr	r3, [fp, #-20]	; 0xffffffec
   29678:	add	r3, r3, #1
   2967c:	str	r3, [fp, #-20]	; 0xffffffec
   29680:	ldr	r2, [fp, #-20]	; 0xffffffec
   29684:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29688:	cmp	r2, r3
   2968c:	bcs	296a4 <__assert_fail@plt+0x1854c>
   29690:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29694:	ldr	r3, [fp, #-20]	; 0xffffffec
   29698:	add	r3, r2, r3
   2969c:	mov	r2, #39	; 0x27
   296a0:	strb	r2, [r3]
   296a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   296a8:	add	r3, r3, #1
   296ac:	str	r3, [fp, #-20]	; 0xffffffec
   296b0:	mov	r3, #1
   296b4:	strb	r3, [fp, #-35]	; 0xffffffdd
   296b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   296bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   296c0:	cmp	r2, r3
   296c4:	bcs	296dc <__assert_fail@plt+0x18584>
   296c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   296cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   296d0:	add	r3, r2, r3
   296d4:	mov	r2, #92	; 0x5c
   296d8:	strb	r2, [r3]
   296dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   296e0:	add	r3, r3, #1
   296e4:	str	r3, [fp, #-20]	; 0xffffffec
   296e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   296ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   296f0:	cmp	r2, r3
   296f4:	bcs	2971c <__assert_fail@plt+0x185c4>
   296f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   296fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29700:	add	r3, r2, r3
   29704:	ldrb	r2, [fp, #-38]	; 0xffffffda
   29708:	lsr	r2, r2, #6
   2970c:	uxtb	r2, r2
   29710:	add	r2, r2, #48	; 0x30
   29714:	uxtb	r2, r2
   29718:	strb	r2, [r3]
   2971c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29720:	add	r3, r3, #1
   29724:	str	r3, [fp, #-20]	; 0xffffffec
   29728:	ldr	r2, [fp, #-20]	; 0xffffffec
   2972c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29730:	cmp	r2, r3
   29734:	bcs	29764 <__assert_fail@plt+0x1860c>
   29738:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2973c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29740:	add	r3, r2, r3
   29744:	ldrb	r2, [fp, #-38]	; 0xffffffda
   29748:	lsr	r2, r2, #3
   2974c:	uxtb	r2, r2
   29750:	and	r2, r2, #7
   29754:	uxtb	r2, r2
   29758:	add	r2, r2, #48	; 0x30
   2975c:	uxtb	r2, r2
   29760:	strb	r2, [r3]
   29764:	ldr	r3, [fp, #-20]	; 0xffffffec
   29768:	add	r3, r3, #1
   2976c:	str	r3, [fp, #-20]	; 0xffffffec
   29770:	ldrb	r3, [fp, #-38]	; 0xffffffda
   29774:	and	r3, r3, #7
   29778:	uxtb	r3, r3
   2977c:	add	r3, r3, #48	; 0x30
   29780:	strb	r3, [fp, #-38]	; 0xffffffda
   29784:	b	297d8 <__assert_fail@plt+0x18680>
   29788:	andeq	r4, r3, r0, lsl #8
   2978c:	andeq	r4, r3, r8, lsl #8
   29790:	andeq	r4, r3, r4, lsl #8
   29794:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   29798:	cmp	r3, #0
   2979c:	beq	297d8 <__assert_fail@plt+0x18680>
   297a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   297a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   297a8:	cmp	r2, r3
   297ac:	bcs	297c4 <__assert_fail@plt+0x1866c>
   297b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   297b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   297b8:	add	r3, r2, r3
   297bc:	mov	r2, #92	; 0x5c
   297c0:	strb	r2, [r3]
   297c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   297c8:	add	r3, r3, #1
   297cc:	str	r3, [fp, #-20]	; 0xffffffec
   297d0:	mov	r3, #0
   297d4:	strb	r3, [fp, #-40]	; 0xffffffd8
   297d8:	ldr	r3, [fp, #-16]
   297dc:	add	r2, r3, #1
   297e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   297e4:	cmp	r2, r3
   297e8:	bcs	298c8 <__assert_fail@plt+0x18770>
   297ec:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   297f0:	cmp	r3, #0
   297f4:	beq	29874 <__assert_fail@plt+0x1871c>
   297f8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   297fc:	eor	r3, r3, #1
   29800:	uxtb	r3, r3
   29804:	cmp	r3, #0
   29808:	beq	29874 <__assert_fail@plt+0x1871c>
   2980c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29814:	cmp	r2, r3
   29818:	bcs	29830 <__assert_fail@plt+0x186d8>
   2981c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29820:	ldr	r3, [fp, #-20]	; 0xffffffec
   29824:	add	r3, r2, r3
   29828:	mov	r2, #39	; 0x27
   2982c:	strb	r2, [r3]
   29830:	ldr	r3, [fp, #-20]	; 0xffffffec
   29834:	add	r3, r3, #1
   29838:	str	r3, [fp, #-20]	; 0xffffffec
   2983c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29840:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29844:	cmp	r2, r3
   29848:	bcs	29860 <__assert_fail@plt+0x18708>
   2984c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29850:	ldr	r3, [fp, #-20]	; 0xffffffec
   29854:	add	r3, r2, r3
   29858:	mov	r2, #39	; 0x27
   2985c:	strb	r2, [r3]
   29860:	ldr	r3, [fp, #-20]	; 0xffffffec
   29864:	add	r3, r3, #1
   29868:	str	r3, [fp, #-20]	; 0xffffffec
   2986c:	mov	r3, #0
   29870:	strb	r3, [fp, #-35]	; 0xffffffdd
   29874:	ldr	r2, [fp, #-20]	; 0xffffffec
   29878:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2987c:	cmp	r2, r3
   29880:	bcs	29898 <__assert_fail@plt+0x18740>
   29884:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29888:	ldr	r3, [fp, #-20]	; 0xffffffec
   2988c:	add	r3, r2, r3
   29890:	ldrb	r2, [fp, #-38]	; 0xffffffda
   29894:	strb	r2, [r3]
   29898:	ldr	r3, [fp, #-20]	; 0xffffffec
   2989c:	add	r3, r3, #1
   298a0:	str	r3, [fp, #-20]	; 0xffffffec
   298a4:	ldr	r3, [fp, #-16]
   298a8:	add	r3, r3, #1
   298ac:	str	r3, [fp, #-16]
   298b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   298b4:	ldr	r3, [fp, #-16]
   298b8:	add	r3, r2, r3
   298bc:	ldrb	r3, [r3]
   298c0:	strb	r3, [fp, #-38]	; 0xffffffda
   298c4:	b	295cc <__assert_fail@plt+0x18474>
   298c8:	nop			; (mov r0, r0)
   298cc:	b	29a98 <__assert_fail@plt+0x18940>
   298d0:	nop			; (mov r0, r0)
   298d4:	b	298fc <__assert_fail@plt+0x187a4>
   298d8:	nop			; (mov r0, r0)
   298dc:	b	298fc <__assert_fail@plt+0x187a4>
   298e0:	nop			; (mov r0, r0)
   298e4:	b	298fc <__assert_fail@plt+0x187a4>
   298e8:	nop			; (mov r0, r0)
   298ec:	b	298fc <__assert_fail@plt+0x187a4>
   298f0:	nop			; (mov r0, r0)
   298f4:	b	298fc <__assert_fail@plt+0x187a4>
   298f8:	nop			; (mov r0, r0)
   298fc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   29900:	eor	r3, r3, #1
   29904:	uxtb	r3, r3
   29908:	cmp	r3, #0
   2990c:	bne	2991c <__assert_fail@plt+0x187c4>
   29910:	ldr	r3, [fp, #4]
   29914:	cmp	r3, #2
   29918:	bne	29930 <__assert_fail@plt+0x187d8>
   2991c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29920:	eor	r3, r3, #1
   29924:	uxtb	r3, r3
   29928:	cmp	r3, #0
   2992c:	bne	29970 <__assert_fail@plt+0x18818>
   29930:	ldr	r3, [fp, #12]
   29934:	cmp	r3, #0
   29938:	beq	29970 <__assert_fail@plt+0x18818>
   2993c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   29940:	lsr	r3, r3, #5
   29944:	uxtb	r3, r3
   29948:	lsl	r3, r3, #2
   2994c:	ldr	r2, [fp, #12]
   29950:	add	r3, r2, r3
   29954:	ldr	r2, [r3]
   29958:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2995c:	and	r3, r3, #31
   29960:	lsr	r3, r2, r3
   29964:	and	r3, r3, #1
   29968:	cmp	r3, #0
   2996c:	bne	29984 <__assert_fail@plt+0x1882c>
   29970:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   29974:	eor	r3, r3, #1
   29978:	uxtb	r3, r3
   2997c:	cmp	r3, #0
   29980:	bne	29a94 <__assert_fail@plt+0x1893c>
   29984:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29988:	cmp	r3, #0
   2998c:	bne	29d6c <__assert_fail@plt+0x18c14>
   29990:	mov	r3, #1
   29994:	strb	r3, [fp, #-41]	; 0xffffffd7
   29998:	ldr	r3, [fp, #4]
   2999c:	cmp	r3, #2
   299a0:	bne	29a50 <__assert_fail@plt+0x188f8>
   299a4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   299a8:	eor	r3, r3, #1
   299ac:	uxtb	r3, r3
   299b0:	cmp	r3, #0
   299b4:	beq	29a50 <__assert_fail@plt+0x188f8>
   299b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   299bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   299c0:	cmp	r2, r3
   299c4:	bcs	299dc <__assert_fail@plt+0x18884>
   299c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   299cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   299d0:	add	r3, r2, r3
   299d4:	mov	r2, #39	; 0x27
   299d8:	strb	r2, [r3]
   299dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   299e0:	add	r3, r3, #1
   299e4:	str	r3, [fp, #-20]	; 0xffffffec
   299e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   299ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   299f0:	cmp	r2, r3
   299f4:	bcs	29a0c <__assert_fail@plt+0x188b4>
   299f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   299fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a00:	add	r3, r2, r3
   29a04:	mov	r2, #36	; 0x24
   29a08:	strb	r2, [r3]
   29a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a10:	add	r3, r3, #1
   29a14:	str	r3, [fp, #-20]	; 0xffffffec
   29a18:	ldr	r2, [fp, #-20]	; 0xffffffec
   29a1c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29a20:	cmp	r2, r3
   29a24:	bcs	29a3c <__assert_fail@plt+0x188e4>
   29a28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a30:	add	r3, r2, r3
   29a34:	mov	r2, #39	; 0x27
   29a38:	strb	r2, [r3]
   29a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a40:	add	r3, r3, #1
   29a44:	str	r3, [fp, #-20]	; 0xffffffec
   29a48:	mov	r3, #1
   29a4c:	strb	r3, [fp, #-35]	; 0xffffffdd
   29a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   29a54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29a58:	cmp	r2, r3
   29a5c:	bcs	29a74 <__assert_fail@plt+0x1891c>
   29a60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a68:	add	r3, r2, r3
   29a6c:	mov	r2, #92	; 0x5c
   29a70:	strb	r2, [r3]
   29a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   29a78:	add	r3, r3, #1
   29a7c:	str	r3, [fp, #-20]	; 0xffffffec
   29a80:	b	29a98 <__assert_fail@plt+0x18940>
   29a84:	nop			; (mov r0, r0)
   29a88:	b	29a98 <__assert_fail@plt+0x18940>
   29a8c:	nop			; (mov r0, r0)
   29a90:	b	29a98 <__assert_fail@plt+0x18940>
   29a94:	nop			; (mov r0, r0)
   29a98:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   29a9c:	cmp	r3, #0
   29aa0:	beq	29b20 <__assert_fail@plt+0x189c8>
   29aa4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   29aa8:	eor	r3, r3, #1
   29aac:	uxtb	r3, r3
   29ab0:	cmp	r3, #0
   29ab4:	beq	29b20 <__assert_fail@plt+0x189c8>
   29ab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   29abc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29ac0:	cmp	r2, r3
   29ac4:	bcs	29adc <__assert_fail@plt+0x18984>
   29ac8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ad0:	add	r3, r2, r3
   29ad4:	mov	r2, #39	; 0x27
   29ad8:	strb	r2, [r3]
   29adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ae0:	add	r3, r3, #1
   29ae4:	str	r3, [fp, #-20]	; 0xffffffec
   29ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   29aec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29af0:	cmp	r2, r3
   29af4:	bcs	29b0c <__assert_fail@plt+0x189b4>
   29af8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b00:	add	r3, r2, r3
   29b04:	mov	r2, #39	; 0x27
   29b08:	strb	r2, [r3]
   29b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b10:	add	r3, r3, #1
   29b14:	str	r3, [fp, #-20]	; 0xffffffec
   29b18:	mov	r3, #0
   29b1c:	strb	r3, [fp, #-35]	; 0xffffffdd
   29b20:	ldr	r2, [fp, #-20]	; 0xffffffec
   29b24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29b28:	cmp	r2, r3
   29b2c:	bcs	29b44 <__assert_fail@plt+0x189ec>
   29b30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b38:	add	r3, r2, r3
   29b3c:	ldrb	r2, [fp, #-38]	; 0xffffffda
   29b40:	strb	r2, [r3]
   29b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b48:	add	r3, r3, #1
   29b4c:	str	r3, [fp, #-20]	; 0xffffffec
   29b50:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   29b54:	eor	r3, r3, #1
   29b58:	uxtb	r3, r3
   29b5c:	cmp	r3, #0
   29b60:	beq	29b6c <__assert_fail@plt+0x18a14>
   29b64:	mov	r3, #0
   29b68:	strb	r3, [fp, #-37]	; 0xffffffdb
   29b6c:	ldr	r3, [fp, #-16]
   29b70:	add	r3, r3, #1
   29b74:	str	r3, [fp, #-16]
   29b78:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29b7c:	cmn	r3, #1
   29b80:	bne	29ba8 <__assert_fail@plt+0x18a50>
   29b84:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29b88:	ldr	r3, [fp, #-16]
   29b8c:	add	r3, r2, r3
   29b90:	ldrb	r3, [r3]
   29b94:	cmp	r3, #0
   29b98:	movne	r3, #1
   29b9c:	moveq	r3, #0
   29ba0:	uxtb	r3, r3
   29ba4:	b	29bc0 <__assert_fail@plt+0x18a68>
   29ba8:	ldr	r2, [fp, #-16]
   29bac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29bb0:	cmp	r2, r3
   29bb4:	movne	r3, #1
   29bb8:	moveq	r3, #0
   29bbc:	uxtb	r3, r3
   29bc0:	cmp	r3, #0
   29bc4:	bne	289ec <__assert_fail@plt+0x17894>
   29bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   29bcc:	cmp	r3, #0
   29bd0:	bne	29bec <__assert_fail@plt+0x18a94>
   29bd4:	ldr	r3, [fp, #4]
   29bd8:	cmp	r3, #2
   29bdc:	bne	29bec <__assert_fail@plt+0x18a94>
   29be0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29be4:	cmp	r3, #0
   29be8:	bne	29d74 <__assert_fail@plt+0x18c1c>
   29bec:	ldr	r3, [fp, #4]
   29bf0:	cmp	r3, #2
   29bf4:	bne	29c94 <__assert_fail@plt+0x18b3c>
   29bf8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29bfc:	eor	r3, r3, #1
   29c00:	uxtb	r3, r3
   29c04:	cmp	r3, #0
   29c08:	beq	29c94 <__assert_fail@plt+0x18b3c>
   29c0c:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   29c10:	cmp	r3, #0
   29c14:	beq	29c94 <__assert_fail@plt+0x18b3c>
   29c18:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   29c1c:	cmp	r3, #0
   29c20:	beq	29c68 <__assert_fail@plt+0x18b10>
   29c24:	ldr	r3, [fp, #20]
   29c28:	str	r3, [sp, #16]
   29c2c:	ldr	r3, [fp, #16]
   29c30:	str	r3, [sp, #12]
   29c34:	ldr	r3, [fp, #12]
   29c38:	str	r3, [sp, #8]
   29c3c:	ldr	r3, [fp, #8]
   29c40:	str	r3, [sp, #4]
   29c44:	mov	r3, #5
   29c48:	str	r3, [sp]
   29c4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29c50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29c58:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29c5c:	bl	2873c <__assert_fail@plt+0x175e4>
   29c60:	mov	r3, r0
   29c64:	b	29ddc <__assert_fail@plt+0x18c84>
   29c68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29c6c:	cmp	r3, #0
   29c70:	bne	29c94 <__assert_fail@plt+0x18b3c>
   29c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c78:	cmp	r3, #0
   29c7c:	beq	29c94 <__assert_fail@plt+0x18b3c>
   29c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29c84:	str	r3, [fp, #-92]	; 0xffffffa4
   29c88:	mov	r3, #0
   29c8c:	str	r3, [fp, #-20]	; 0xffffffec
   29c90:	b	287c8 <__assert_fail@plt+0x17670>
   29c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29c98:	cmp	r3, #0
   29c9c:	beq	29d08 <__assert_fail@plt+0x18bb0>
   29ca0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   29ca4:	eor	r3, r3, #1
   29ca8:	uxtb	r3, r3
   29cac:	cmp	r3, #0
   29cb0:	beq	29d08 <__assert_fail@plt+0x18bb0>
   29cb4:	b	29cf8 <__assert_fail@plt+0x18ba0>
   29cb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   29cbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29cc0:	cmp	r2, r3
   29cc4:	bcs	29ce0 <__assert_fail@plt+0x18b88>
   29cc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   29cd0:	add	r3, r2, r3
   29cd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29cd8:	ldrb	r2, [r2]
   29cdc:	strb	r2, [r3]
   29ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ce4:	add	r3, r3, #1
   29ce8:	str	r3, [fp, #-20]	; 0xffffffec
   29cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29cf0:	add	r3, r3, #1
   29cf4:	str	r3, [fp, #-28]	; 0xffffffe4
   29cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29cfc:	ldrb	r3, [r3]
   29d00:	cmp	r3, #0
   29d04:	bne	29cb8 <__assert_fail@plt+0x18b60>
   29d08:	ldr	r2, [fp, #-20]	; 0xffffffec
   29d0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29d10:	cmp	r2, r3
   29d14:	bcs	29d2c <__assert_fail@plt+0x18bd4>
   29d18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d20:	add	r3, r2, r3
   29d24:	mov	r2, #0
   29d28:	strb	r2, [r3]
   29d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29d30:	b	29ddc <__assert_fail@plt+0x18c84>
   29d34:	nop			; (mov r0, r0)
   29d38:	b	29d78 <__assert_fail@plt+0x18c20>
   29d3c:	nop			; (mov r0, r0)
   29d40:	b	29d78 <__assert_fail@plt+0x18c20>
   29d44:	nop			; (mov r0, r0)
   29d48:	b	29d78 <__assert_fail@plt+0x18c20>
   29d4c:	nop			; (mov r0, r0)
   29d50:	b	29d78 <__assert_fail@plt+0x18c20>
   29d54:	nop			; (mov r0, r0)
   29d58:	b	29d78 <__assert_fail@plt+0x18c20>
   29d5c:	nop			; (mov r0, r0)
   29d60:	b	29d78 <__assert_fail@plt+0x18c20>
   29d64:	nop			; (mov r0, r0)
   29d68:	b	29d78 <__assert_fail@plt+0x18c20>
   29d6c:	nop			; (mov r0, r0)
   29d70:	b	29d78 <__assert_fail@plt+0x18c20>
   29d74:	nop			; (mov r0, r0)
   29d78:	ldr	r3, [fp, #4]
   29d7c:	cmp	r3, #2
   29d80:	bne	29d98 <__assert_fail@plt+0x18c40>
   29d84:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   29d88:	cmp	r3, #0
   29d8c:	beq	29d98 <__assert_fail@plt+0x18c40>
   29d90:	mov	r3, #4
   29d94:	str	r3, [fp, #4]
   29d98:	ldr	r3, [fp, #8]
   29d9c:	bic	r3, r3, #2
   29da0:	ldr	r2, [fp, #20]
   29da4:	str	r2, [sp, #16]
   29da8:	ldr	r2, [fp, #16]
   29dac:	str	r2, [sp, #12]
   29db0:	mov	r2, #0
   29db4:	str	r2, [sp, #8]
   29db8:	str	r3, [sp, #4]
   29dbc:	ldr	r3, [fp, #4]
   29dc0:	str	r3, [sp]
   29dc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   29dc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29dcc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   29dd0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29dd4:	bl	2873c <__assert_fail@plt+0x175e4>
   29dd8:	mov	r3, r0
   29ddc:	mov	r0, r3
   29de0:	sub	sp, fp, #8
   29de4:	pop	{r4, fp, pc}
   29de8:	push	{fp, lr}
   29dec:	add	fp, sp, #4
   29df0:	sub	sp, sp, #56	; 0x38
   29df4:	str	r0, [fp, #-24]	; 0xffffffe8
   29df8:	str	r1, [fp, #-28]	; 0xffffffe4
   29dfc:	str	r2, [fp, #-32]	; 0xffffffe0
   29e00:	str	r3, [fp, #-36]	; 0xffffffdc
   29e04:	ldr	r3, [fp, #4]
   29e08:	cmp	r3, #0
   29e0c:	beq	29e18 <__assert_fail@plt+0x18cc0>
   29e10:	ldr	r3, [fp, #4]
   29e14:	b	29e1c <__assert_fail@plt+0x18cc4>
   29e18:	ldr	r3, [pc, #132]	; 29ea4 <__assert_fail@plt+0x18d4c>
   29e1c:	str	r3, [fp, #-8]
   29e20:	bl	11074 <__errno_location@plt>
   29e24:	mov	r3, r0
   29e28:	ldr	r3, [r3]
   29e2c:	str	r3, [fp, #-12]
   29e30:	ldr	r3, [fp, #-8]
   29e34:	ldr	r3, [r3]
   29e38:	ldr	r2, [fp, #-8]
   29e3c:	ldr	r2, [r2, #4]
   29e40:	ldr	r1, [fp, #-8]
   29e44:	add	r1, r1, #8
   29e48:	ldr	r0, [fp, #-8]
   29e4c:	ldr	r0, [r0, #40]	; 0x28
   29e50:	ldr	ip, [fp, #-8]
   29e54:	ldr	ip, [ip, #44]	; 0x2c
   29e58:	str	ip, [sp, #16]
   29e5c:	str	r0, [sp, #12]
   29e60:	str	r1, [sp, #8]
   29e64:	str	r2, [sp, #4]
   29e68:	str	r3, [sp]
   29e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29e70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29e7c:	bl	2873c <__assert_fail@plt+0x175e4>
   29e80:	str	r0, [fp, #-16]
   29e84:	bl	11074 <__errno_location@plt>
   29e88:	mov	r2, r0
   29e8c:	ldr	r3, [fp, #-12]
   29e90:	str	r3, [r2]
   29e94:	ldr	r3, [fp, #-16]
   29e98:	mov	r0, r3
   29e9c:	sub	sp, fp, #4
   29ea0:	pop	{fp, pc}
   29ea4:	andeq	r5, r4, ip, lsr #3
   29ea8:	push	{fp, lr}
   29eac:	add	fp, sp, #4
   29eb0:	sub	sp, sp, #16
   29eb4:	str	r0, [fp, #-8]
   29eb8:	str	r1, [fp, #-12]
   29ebc:	str	r2, [fp, #-16]
   29ec0:	ldr	r3, [fp, #-16]
   29ec4:	mov	r2, #0
   29ec8:	ldr	r1, [fp, #-12]
   29ecc:	ldr	r0, [fp, #-8]
   29ed0:	bl	29ee4 <__assert_fail@plt+0x18d8c>
   29ed4:	mov	r3, r0
   29ed8:	mov	r0, r3
   29edc:	sub	sp, fp, #4
   29ee0:	pop	{fp, pc}
   29ee4:	push	{fp, lr}
   29ee8:	add	fp, sp, #4
   29eec:	sub	sp, sp, #64	; 0x40
   29ef0:	str	r0, [fp, #-32]	; 0xffffffe0
   29ef4:	str	r1, [fp, #-36]	; 0xffffffdc
   29ef8:	str	r2, [fp, #-40]	; 0xffffffd8
   29efc:	str	r3, [fp, #-44]	; 0xffffffd4
   29f00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29f04:	cmp	r3, #0
   29f08:	beq	29f14 <__assert_fail@plt+0x18dbc>
   29f0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29f10:	b	29f18 <__assert_fail@plt+0x18dc0>
   29f14:	ldr	r3, [pc, #292]	; 2a040 <__assert_fail@plt+0x18ee8>
   29f18:	str	r3, [fp, #-8]
   29f1c:	bl	11074 <__errno_location@plt>
   29f20:	mov	r3, r0
   29f24:	ldr	r3, [r3]
   29f28:	str	r3, [fp, #-12]
   29f2c:	ldr	r3, [fp, #-8]
   29f30:	ldr	r3, [r3, #4]
   29f34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29f38:	cmp	r2, #0
   29f3c:	moveq	r2, #1
   29f40:	movne	r2, #0
   29f44:	uxtb	r2, r2
   29f48:	orr	r3, r3, r2
   29f4c:	str	r3, [fp, #-16]
   29f50:	ldr	r3, [fp, #-8]
   29f54:	ldr	r3, [r3]
   29f58:	ldr	r2, [fp, #-8]
   29f5c:	add	r2, r2, #8
   29f60:	ldr	r1, [fp, #-8]
   29f64:	ldr	r1, [r1, #40]	; 0x28
   29f68:	ldr	r0, [fp, #-8]
   29f6c:	ldr	r0, [r0, #44]	; 0x2c
   29f70:	str	r0, [sp, #16]
   29f74:	str	r1, [sp, #12]
   29f78:	str	r2, [sp, #8]
   29f7c:	ldr	r2, [fp, #-16]
   29f80:	str	r2, [sp, #4]
   29f84:	str	r3, [sp]
   29f88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29f8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29f90:	mov	r1, #0
   29f94:	mov	r0, #0
   29f98:	bl	2873c <__assert_fail@plt+0x175e4>
   29f9c:	mov	r3, r0
   29fa0:	add	r3, r3, #1
   29fa4:	str	r3, [fp, #-20]	; 0xffffffec
   29fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   29fac:	bl	2bb90 <__assert_fail@plt+0x1aa38>
   29fb0:	mov	r3, r0
   29fb4:	str	r3, [fp, #-24]	; 0xffffffe8
   29fb8:	ldr	r3, [fp, #-8]
   29fbc:	ldr	r3, [r3]
   29fc0:	ldr	r2, [fp, #-8]
   29fc4:	add	r2, r2, #8
   29fc8:	ldr	r1, [fp, #-8]
   29fcc:	ldr	r1, [r1, #40]	; 0x28
   29fd0:	ldr	r0, [fp, #-8]
   29fd4:	ldr	r0, [r0, #44]	; 0x2c
   29fd8:	str	r0, [sp, #16]
   29fdc:	str	r1, [sp, #12]
   29fe0:	str	r2, [sp, #8]
   29fe4:	ldr	r2, [fp, #-16]
   29fe8:	str	r2, [sp, #4]
   29fec:	str	r3, [sp]
   29ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29ff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
   29ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a000:	bl	2873c <__assert_fail@plt+0x175e4>
   2a004:	bl	11074 <__errno_location@plt>
   2a008:	mov	r2, r0
   2a00c:	ldr	r3, [fp, #-12]
   2a010:	str	r3, [r2]
   2a014:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a018:	cmp	r3, #0
   2a01c:	beq	2a030 <__assert_fail@plt+0x18ed8>
   2a020:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a024:	sub	r2, r3, #1
   2a028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a02c:	str	r2, [r3]
   2a030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a034:	mov	r0, r3
   2a038:	sub	sp, fp, #4
   2a03c:	pop	{fp, pc}
   2a040:	andeq	r5, r4, ip, lsr #3
   2a044:	push	{fp, lr}
   2a048:	add	fp, sp, #4
   2a04c:	sub	sp, sp, #8
   2a050:	ldr	r3, [pc, #196]	; 2a11c <__assert_fail@plt+0x18fc4>
   2a054:	ldr	r3, [r3]
   2a058:	str	r3, [fp, #-12]
   2a05c:	mov	r3, #1
   2a060:	str	r3, [fp, #-8]
   2a064:	b	2a090 <__assert_fail@plt+0x18f38>
   2a068:	ldr	r3, [fp, #-8]
   2a06c:	lsl	r3, r3, #3
   2a070:	ldr	r2, [fp, #-12]
   2a074:	add	r3, r2, r3
   2a078:	ldr	r3, [r3, #4]
   2a07c:	mov	r0, r3
   2a080:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2a084:	ldr	r3, [fp, #-8]
   2a088:	add	r3, r3, #1
   2a08c:	str	r3, [fp, #-8]
   2a090:	ldr	r3, [pc, #136]	; 2a120 <__assert_fail@plt+0x18fc8>
   2a094:	ldr	r3, [r3]
   2a098:	ldr	r2, [fp, #-8]
   2a09c:	cmp	r2, r3
   2a0a0:	blt	2a068 <__assert_fail@plt+0x18f10>
   2a0a4:	ldr	r3, [fp, #-12]
   2a0a8:	ldr	r3, [r3, #4]
   2a0ac:	ldr	r2, [pc, #112]	; 2a124 <__assert_fail@plt+0x18fcc>
   2a0b0:	cmp	r3, r2
   2a0b4:	beq	2a0e0 <__assert_fail@plt+0x18f88>
   2a0b8:	ldr	r3, [fp, #-12]
   2a0bc:	ldr	r3, [r3, #4]
   2a0c0:	mov	r0, r3
   2a0c4:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2a0c8:	ldr	r3, [pc, #88]	; 2a128 <__assert_fail@plt+0x18fd0>
   2a0cc:	mov	r2, #256	; 0x100
   2a0d0:	str	r2, [r3]
   2a0d4:	ldr	r3, [pc, #76]	; 2a128 <__assert_fail@plt+0x18fd0>
   2a0d8:	ldr	r2, [pc, #68]	; 2a124 <__assert_fail@plt+0x18fcc>
   2a0dc:	str	r2, [r3, #4]
   2a0e0:	ldr	r3, [fp, #-12]
   2a0e4:	ldr	r2, [pc, #60]	; 2a128 <__assert_fail@plt+0x18fd0>
   2a0e8:	cmp	r3, r2
   2a0ec:	beq	2a104 <__assert_fail@plt+0x18fac>
   2a0f0:	ldr	r0, [fp, #-12]
   2a0f4:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2a0f8:	ldr	r3, [pc, #28]	; 2a11c <__assert_fail@plt+0x18fc4>
   2a0fc:	ldr	r2, [pc, #36]	; 2a128 <__assert_fail@plt+0x18fd0>
   2a100:	str	r2, [r3]
   2a104:	ldr	r3, [pc, #20]	; 2a120 <__assert_fail@plt+0x18fc8>
   2a108:	mov	r2, #1
   2a10c:	str	r2, [r3]
   2a110:	nop			; (mov r0, r0)
   2a114:	sub	sp, fp, #4
   2a118:	pop	{fp, pc}
   2a11c:	andeq	r5, r4, ip, lsr r1
   2a120:	andeq	r5, r4, r0, lsr r1
   2a124:	ldrdeq	r5, [r4], -ip
   2a128:	andeq	r5, r4, r4, lsr r1
   2a12c:	push	{r4, fp, lr}
   2a130:	add	fp, sp, #8
   2a134:	sub	sp, sp, #84	; 0x54
   2a138:	str	r0, [fp, #-56]	; 0xffffffc8
   2a13c:	str	r1, [fp, #-60]	; 0xffffffc4
   2a140:	str	r2, [fp, #-64]	; 0xffffffc0
   2a144:	str	r3, [fp, #-68]	; 0xffffffbc
   2a148:	bl	11074 <__errno_location@plt>
   2a14c:	mov	r3, r0
   2a150:	ldr	r3, [r3]
   2a154:	str	r3, [fp, #-24]	; 0xffffffe8
   2a158:	ldr	r3, [pc, #640]	; 2a3e0 <__assert_fail@plt+0x19288>
   2a15c:	ldr	r3, [r3]
   2a160:	str	r3, [fp, #-16]
   2a164:	mvn	r3, #-2147483648	; 0x80000000
   2a168:	str	r3, [fp, #-28]	; 0xffffffe4
   2a16c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a170:	cmp	r3, #0
   2a174:	blt	2a188 <__assert_fail@plt+0x19030>
   2a178:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2a17c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a180:	cmp	r2, r3
   2a184:	blt	2a18c <__assert_fail@plt+0x19034>
   2a188:	bl	11140 <abort@plt>
   2a18c:	ldr	r3, [pc, #592]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a190:	ldr	r2, [r3]
   2a194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a198:	cmp	r2, r3
   2a19c:	bgt	2a270 <__assert_fail@plt+0x19118>
   2a1a0:	ldr	r3, [fp, #-16]
   2a1a4:	ldr	r2, [pc, #572]	; 2a3e8 <__assert_fail@plt+0x19290>
   2a1a8:	cmp	r3, r2
   2a1ac:	moveq	r3, #1
   2a1b0:	movne	r3, #0
   2a1b4:	strb	r3, [fp, #-29]	; 0xffffffe3
   2a1b8:	ldr	r3, [pc, #548]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a1bc:	ldr	r3, [r3]
   2a1c0:	str	r3, [fp, #-48]	; 0xffffffd0
   2a1c4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2a1c8:	cmp	r3, #0
   2a1cc:	beq	2a1d8 <__assert_fail@plt+0x19080>
   2a1d0:	mov	r0, #0
   2a1d4:	b	2a1dc <__assert_fail@plt+0x19084>
   2a1d8:	ldr	r0, [fp, #-16]
   2a1dc:	ldr	r3, [pc, #512]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a1e0:	ldr	r3, [r3]
   2a1e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2a1e8:	sub	r3, r2, r3
   2a1ec:	add	r2, r3, #1
   2a1f0:	sub	r1, fp, #48	; 0x30
   2a1f4:	mov	r3, #8
   2a1f8:	str	r3, [sp]
   2a1fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a200:	bl	2beb0 <__assert_fail@plt+0x1ad58>
   2a204:	str	r0, [fp, #-16]
   2a208:	ldr	r2, [pc, #464]	; 2a3e0 <__assert_fail@plt+0x19288>
   2a20c:	ldr	r3, [fp, #-16]
   2a210:	str	r3, [r2]
   2a214:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2a218:	cmp	r3, #0
   2a21c:	beq	2a230 <__assert_fail@plt+0x190d8>
   2a220:	ldr	r3, [fp, #-16]
   2a224:	ldr	r2, [pc, #444]	; 2a3e8 <__assert_fail@plt+0x19290>
   2a228:	ldm	r2, {r0, r1}
   2a22c:	stm	r3, {r0, r1}
   2a230:	ldr	r3, [pc, #428]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a234:	ldr	r3, [r3]
   2a238:	lsl	r3, r3, #3
   2a23c:	ldr	r2, [fp, #-16]
   2a240:	add	r0, r2, r3
   2a244:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a248:	ldr	r3, [pc, #404]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a24c:	ldr	r3, [r3]
   2a250:	sub	r3, r2, r3
   2a254:	lsl	r3, r3, #3
   2a258:	mov	r2, r3
   2a25c:	mov	r1, #0
   2a260:	bl	11098 <memset@plt>
   2a264:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a268:	ldr	r2, [pc, #372]	; 2a3e4 <__assert_fail@plt+0x1928c>
   2a26c:	str	r3, [r2]
   2a270:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a274:	lsl	r3, r3, #3
   2a278:	ldr	r2, [fp, #-16]
   2a27c:	add	r3, r2, r3
   2a280:	ldr	r3, [r3]
   2a284:	str	r3, [fp, #-36]	; 0xffffffdc
   2a288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a28c:	lsl	r3, r3, #3
   2a290:	ldr	r2, [fp, #-16]
   2a294:	add	r3, r2, r3
   2a298:	ldr	r3, [r3, #4]
   2a29c:	str	r3, [fp, #-20]	; 0xffffffec
   2a2a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a2a4:	ldr	r3, [r3, #4]
   2a2a8:	orr	r3, r3, #1
   2a2ac:	str	r3, [fp, #-40]	; 0xffffffd8
   2a2b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a2b4:	ldr	r3, [r3]
   2a2b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a2bc:	add	r2, r2, #8
   2a2c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a2c4:	ldr	r1, [r1, #40]	; 0x28
   2a2c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a2cc:	ldr	r0, [r0, #44]	; 0x2c
   2a2d0:	str	r0, [sp, #16]
   2a2d4:	str	r1, [sp, #12]
   2a2d8:	str	r2, [sp, #8]
   2a2dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a2e0:	str	r2, [sp, #4]
   2a2e4:	str	r3, [sp]
   2a2e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a2ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2a2f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a2f8:	bl	2873c <__assert_fail@plt+0x175e4>
   2a2fc:	str	r0, [fp, #-44]	; 0xffffffd4
   2a300:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a308:	cmp	r2, r3
   2a30c:	bhi	2a3c0 <__assert_fail@plt+0x19268>
   2a310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a314:	lsl	r3, r3, #3
   2a318:	ldr	r2, [fp, #-16]
   2a31c:	add	r3, r2, r3
   2a320:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a324:	add	r2, r2, #1
   2a328:	str	r2, [fp, #-36]	; 0xffffffdc
   2a32c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a330:	str	r2, [r3]
   2a334:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a338:	ldr	r2, [pc, #172]	; 2a3ec <__assert_fail@plt+0x19294>
   2a33c:	cmp	r3, r2
   2a340:	beq	2a34c <__assert_fail@plt+0x191f4>
   2a344:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a348:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2a34c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a350:	lsl	r3, r3, #3
   2a354:	ldr	r2, [fp, #-16]
   2a358:	add	r4, r2, r3
   2a35c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a360:	bl	2bb90 <__assert_fail@plt+0x1aa38>
   2a364:	mov	r3, r0
   2a368:	str	r3, [fp, #-20]	; 0xffffffec
   2a36c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a370:	str	r3, [r4, #4]
   2a374:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2a378:	ldr	r3, [r3]
   2a37c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a380:	add	r2, r2, #8
   2a384:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a388:	ldr	r1, [r1, #40]	; 0x28
   2a38c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a390:	ldr	r0, [r0, #44]	; 0x2c
   2a394:	str	r0, [sp, #16]
   2a398:	str	r1, [sp, #12]
   2a39c:	str	r2, [sp, #8]
   2a3a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a3a4:	str	r2, [sp, #4]
   2a3a8:	str	r3, [sp]
   2a3ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a3b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2a3b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a3b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a3bc:	bl	2873c <__assert_fail@plt+0x175e4>
   2a3c0:	bl	11074 <__errno_location@plt>
   2a3c4:	mov	r2, r0
   2a3c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3cc:	str	r3, [r2]
   2a3d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a3d4:	mov	r0, r3
   2a3d8:	sub	sp, fp, #8
   2a3dc:	pop	{r4, fp, pc}
   2a3e0:	andeq	r5, r4, ip, lsr r1
   2a3e4:	andeq	r5, r4, r0, lsr r1
   2a3e8:	andeq	r5, r4, r4, lsr r1
   2a3ec:	ldrdeq	r5, [r4], -ip
   2a3f0:	push	{fp, lr}
   2a3f4:	add	fp, sp, #4
   2a3f8:	sub	sp, sp, #8
   2a3fc:	str	r0, [fp, #-8]
   2a400:	str	r1, [fp, #-12]
   2a404:	ldr	r3, [pc, #28]	; 2a428 <__assert_fail@plt+0x192d0>
   2a408:	mvn	r2, #0
   2a40c:	ldr	r1, [fp, #-12]
   2a410:	ldr	r0, [fp, #-8]
   2a414:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a418:	mov	r3, r0
   2a41c:	mov	r0, r3
   2a420:	sub	sp, fp, #4
   2a424:	pop	{fp, pc}
   2a428:	andeq	r5, r4, ip, lsr #3
   2a42c:	push	{fp, lr}
   2a430:	add	fp, sp, #4
   2a434:	sub	sp, sp, #16
   2a438:	str	r0, [fp, #-8]
   2a43c:	str	r1, [fp, #-12]
   2a440:	str	r2, [fp, #-16]
   2a444:	ldr	r3, [pc, #28]	; 2a468 <__assert_fail@plt+0x19310>
   2a448:	ldr	r2, [fp, #-16]
   2a44c:	ldr	r1, [fp, #-12]
   2a450:	ldr	r0, [fp, #-8]
   2a454:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a458:	mov	r3, r0
   2a45c:	mov	r0, r3
   2a460:	sub	sp, fp, #4
   2a464:	pop	{fp, pc}
   2a468:	andeq	r5, r4, ip, lsr #3
   2a46c:	push	{fp, lr}
   2a470:	add	fp, sp, #4
   2a474:	sub	sp, sp, #8
   2a478:	str	r0, [fp, #-8]
   2a47c:	ldr	r1, [fp, #-8]
   2a480:	mov	r0, #0
   2a484:	bl	2a3f0 <__assert_fail@plt+0x19298>
   2a488:	mov	r3, r0
   2a48c:	mov	r0, r3
   2a490:	sub	sp, fp, #4
   2a494:	pop	{fp, pc}
   2a498:	push	{fp, lr}
   2a49c:	add	fp, sp, #4
   2a4a0:	sub	sp, sp, #8
   2a4a4:	str	r0, [fp, #-8]
   2a4a8:	str	r1, [fp, #-12]
   2a4ac:	ldr	r2, [fp, #-12]
   2a4b0:	ldr	r1, [fp, #-8]
   2a4b4:	mov	r0, #0
   2a4b8:	bl	2a42c <__assert_fail@plt+0x192d4>
   2a4bc:	mov	r3, r0
   2a4c0:	mov	r0, r3
   2a4c4:	sub	sp, fp, #4
   2a4c8:	pop	{fp, pc}
   2a4cc:	push	{fp, lr}
   2a4d0:	add	fp, sp, #4
   2a4d4:	sub	sp, sp, #64	; 0x40
   2a4d8:	str	r0, [fp, #-56]	; 0xffffffc8
   2a4dc:	str	r1, [fp, #-60]	; 0xffffffc4
   2a4e0:	str	r2, [fp, #-64]	; 0xffffffc0
   2a4e4:	sub	r3, fp, #52	; 0x34
   2a4e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2a4ec:	mov	r0, r3
   2a4f0:	bl	285d8 <__assert_fail@plt+0x17480>
   2a4f4:	sub	r3, fp, #52	; 0x34
   2a4f8:	mvn	r2, #0
   2a4fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2a500:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a504:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a508:	mov	r3, r0
   2a50c:	mov	r0, r3
   2a510:	sub	sp, fp, #4
   2a514:	pop	{fp, pc}
   2a518:	push	{fp, lr}
   2a51c:	add	fp, sp, #4
   2a520:	sub	sp, sp, #64	; 0x40
   2a524:	str	r0, [fp, #-56]	; 0xffffffc8
   2a528:	str	r1, [fp, #-60]	; 0xffffffc4
   2a52c:	str	r2, [fp, #-64]	; 0xffffffc0
   2a530:	str	r3, [fp, #-68]	; 0xffffffbc
   2a534:	sub	r3, fp, #52	; 0x34
   2a538:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2a53c:	mov	r0, r3
   2a540:	bl	285d8 <__assert_fail@plt+0x17480>
   2a544:	sub	r3, fp, #52	; 0x34
   2a548:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a54c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2a550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a554:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a558:	mov	r3, r0
   2a55c:	mov	r0, r3
   2a560:	sub	sp, fp, #4
   2a564:	pop	{fp, pc}
   2a568:	push	{fp, lr}
   2a56c:	add	fp, sp, #4
   2a570:	sub	sp, sp, #8
   2a574:	str	r0, [fp, #-8]
   2a578:	str	r1, [fp, #-12]
   2a57c:	ldr	r2, [fp, #-12]
   2a580:	ldr	r1, [fp, #-8]
   2a584:	mov	r0, #0
   2a588:	bl	2a4cc <__assert_fail@plt+0x19374>
   2a58c:	mov	r3, r0
   2a590:	mov	r0, r3
   2a594:	sub	sp, fp, #4
   2a598:	pop	{fp, pc}
   2a59c:	push	{fp, lr}
   2a5a0:	add	fp, sp, #4
   2a5a4:	sub	sp, sp, #16
   2a5a8:	str	r0, [fp, #-8]
   2a5ac:	str	r1, [fp, #-12]
   2a5b0:	str	r2, [fp, #-16]
   2a5b4:	ldr	r3, [fp, #-16]
   2a5b8:	ldr	r2, [fp, #-12]
   2a5bc:	ldr	r1, [fp, #-8]
   2a5c0:	mov	r0, #0
   2a5c4:	bl	2a518 <__assert_fail@plt+0x193c0>
   2a5c8:	mov	r3, r0
   2a5cc:	mov	r0, r3
   2a5d0:	sub	sp, fp, #4
   2a5d4:	pop	{fp, pc}
   2a5d8:	push	{fp, lr}
   2a5dc:	add	fp, sp, #4
   2a5e0:	sub	sp, sp, #64	; 0x40
   2a5e4:	str	r0, [fp, #-56]	; 0xffffffc8
   2a5e8:	str	r1, [fp, #-60]	; 0xffffffc4
   2a5ec:	mov	r3, r2
   2a5f0:	strb	r3, [fp, #-61]	; 0xffffffc3
   2a5f4:	ldr	r3, [pc, #84]	; 2a650 <__assert_fail@plt+0x194f8>
   2a5f8:	sub	ip, fp, #52	; 0x34
   2a5fc:	mov	lr, r3
   2a600:	ldm	lr!, {r0, r1, r2, r3}
   2a604:	stmia	ip!, {r0, r1, r2, r3}
   2a608:	ldm	lr!, {r0, r1, r2, r3}
   2a60c:	stmia	ip!, {r0, r1, r2, r3}
   2a610:	ldm	lr, {r0, r1, r2, r3}
   2a614:	stm	ip, {r0, r1, r2, r3}
   2a618:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   2a61c:	sub	r3, fp, #52	; 0x34
   2a620:	mov	r2, #1
   2a624:	mov	r0, r3
   2a628:	bl	28444 <__assert_fail@plt+0x172ec>
   2a62c:	sub	r3, fp, #52	; 0x34
   2a630:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2a634:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a638:	mov	r0, #0
   2a63c:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a640:	mov	r3, r0
   2a644:	mov	r0, r3
   2a648:	sub	sp, fp, #4
   2a64c:	pop	{fp, pc}
   2a650:	andeq	r5, r4, ip, lsr #3
   2a654:	push	{fp, lr}
   2a658:	add	fp, sp, #4
   2a65c:	sub	sp, sp, #8
   2a660:	str	r0, [fp, #-8]
   2a664:	mov	r3, r1
   2a668:	strb	r3, [fp, #-9]
   2a66c:	ldrb	r3, [fp, #-9]
   2a670:	mov	r2, r3
   2a674:	mvn	r1, #0
   2a678:	ldr	r0, [fp, #-8]
   2a67c:	bl	2a5d8 <__assert_fail@plt+0x19480>
   2a680:	mov	r3, r0
   2a684:	mov	r0, r3
   2a688:	sub	sp, fp, #4
   2a68c:	pop	{fp, pc}
   2a690:	push	{fp, lr}
   2a694:	add	fp, sp, #4
   2a698:	sub	sp, sp, #8
   2a69c:	str	r0, [fp, #-8]
   2a6a0:	mov	r1, #58	; 0x3a
   2a6a4:	ldr	r0, [fp, #-8]
   2a6a8:	bl	2a654 <__assert_fail@plt+0x194fc>
   2a6ac:	mov	r3, r0
   2a6b0:	mov	r0, r3
   2a6b4:	sub	sp, fp, #4
   2a6b8:	pop	{fp, pc}
   2a6bc:	push	{fp, lr}
   2a6c0:	add	fp, sp, #4
   2a6c4:	sub	sp, sp, #8
   2a6c8:	str	r0, [fp, #-8]
   2a6cc:	str	r1, [fp, #-12]
   2a6d0:	mov	r2, #58	; 0x3a
   2a6d4:	ldr	r1, [fp, #-12]
   2a6d8:	ldr	r0, [fp, #-8]
   2a6dc:	bl	2a5d8 <__assert_fail@plt+0x19480>
   2a6e0:	mov	r3, r0
   2a6e4:	mov	r0, r3
   2a6e8:	sub	sp, fp, #4
   2a6ec:	pop	{fp, pc}
   2a6f0:	push	{fp, lr}
   2a6f4:	add	fp, sp, #4
   2a6f8:	sub	sp, sp, #112	; 0x70
   2a6fc:	str	r0, [fp, #-56]	; 0xffffffc8
   2a700:	str	r1, [fp, #-60]	; 0xffffffc4
   2a704:	str	r2, [fp, #-64]	; 0xffffffc0
   2a708:	sub	r3, fp, #116	; 0x74
   2a70c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2a710:	mov	r0, r3
   2a714:	bl	285d8 <__assert_fail@plt+0x17480>
   2a718:	sub	ip, fp, #52	; 0x34
   2a71c:	sub	lr, fp, #116	; 0x74
   2a720:	ldm	lr!, {r0, r1, r2, r3}
   2a724:	stmia	ip!, {r0, r1, r2, r3}
   2a728:	ldm	lr!, {r0, r1, r2, r3}
   2a72c:	stmia	ip!, {r0, r1, r2, r3}
   2a730:	ldm	lr, {r0, r1, r2, r3}
   2a734:	stm	ip, {r0, r1, r2, r3}
   2a738:	sub	r3, fp, #52	; 0x34
   2a73c:	mov	r2, #1
   2a740:	mov	r1, #58	; 0x3a
   2a744:	mov	r0, r3
   2a748:	bl	28444 <__assert_fail@plt+0x172ec>
   2a74c:	sub	r3, fp, #52	; 0x34
   2a750:	mvn	r2, #0
   2a754:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2a758:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a75c:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a760:	mov	r3, r0
   2a764:	mov	r0, r3
   2a768:	sub	sp, fp, #4
   2a76c:	pop	{fp, pc}
   2a770:	push	{fp, lr}
   2a774:	add	fp, sp, #4
   2a778:	sub	sp, sp, #24
   2a77c:	str	r0, [fp, #-8]
   2a780:	str	r1, [fp, #-12]
   2a784:	str	r2, [fp, #-16]
   2a788:	str	r3, [fp, #-20]	; 0xffffffec
   2a78c:	mvn	r3, #0
   2a790:	str	r3, [sp]
   2a794:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a798:	ldr	r2, [fp, #-16]
   2a79c:	ldr	r1, [fp, #-12]
   2a7a0:	ldr	r0, [fp, #-8]
   2a7a4:	bl	2a7b8 <__assert_fail@plt+0x19660>
   2a7a8:	mov	r3, r0
   2a7ac:	mov	r0, r3
   2a7b0:	sub	sp, fp, #4
   2a7b4:	pop	{fp, pc}
   2a7b8:	push	{fp, lr}
   2a7bc:	add	fp, sp, #4
   2a7c0:	sub	sp, sp, #64	; 0x40
   2a7c4:	str	r0, [fp, #-56]	; 0xffffffc8
   2a7c8:	str	r1, [fp, #-60]	; 0xffffffc4
   2a7cc:	str	r2, [fp, #-64]	; 0xffffffc0
   2a7d0:	str	r3, [fp, #-68]	; 0xffffffbc
   2a7d4:	ldr	r3, [pc, #84]	; 2a830 <__assert_fail@plt+0x196d8>
   2a7d8:	sub	ip, fp, #52	; 0x34
   2a7dc:	mov	lr, r3
   2a7e0:	ldm	lr!, {r0, r1, r2, r3}
   2a7e4:	stmia	ip!, {r0, r1, r2, r3}
   2a7e8:	ldm	lr!, {r0, r1, r2, r3}
   2a7ec:	stmia	ip!, {r0, r1, r2, r3}
   2a7f0:	ldm	lr, {r0, r1, r2, r3}
   2a7f4:	stm	ip, {r0, r1, r2, r3}
   2a7f8:	sub	r3, fp, #52	; 0x34
   2a7fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2a800:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2a804:	mov	r0, r3
   2a808:	bl	2855c <__assert_fail@plt+0x17404>
   2a80c:	sub	r3, fp, #52	; 0x34
   2a810:	ldr	r2, [fp, #4]
   2a814:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a818:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2a81c:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a820:	mov	r3, r0
   2a824:	mov	r0, r3
   2a828:	sub	sp, fp, #4
   2a82c:	pop	{fp, pc}
   2a830:	andeq	r5, r4, ip, lsr #3
   2a834:	push	{fp, lr}
   2a838:	add	fp, sp, #4
   2a83c:	sub	sp, sp, #16
   2a840:	str	r0, [fp, #-8]
   2a844:	str	r1, [fp, #-12]
   2a848:	str	r2, [fp, #-16]
   2a84c:	ldr	r3, [fp, #-16]
   2a850:	ldr	r2, [fp, #-12]
   2a854:	ldr	r1, [fp, #-8]
   2a858:	mov	r0, #0
   2a85c:	bl	2a770 <__assert_fail@plt+0x19618>
   2a860:	mov	r3, r0
   2a864:	mov	r0, r3
   2a868:	sub	sp, fp, #4
   2a86c:	pop	{fp, pc}
   2a870:	push	{fp, lr}
   2a874:	add	fp, sp, #4
   2a878:	sub	sp, sp, #24
   2a87c:	str	r0, [fp, #-8]
   2a880:	str	r1, [fp, #-12]
   2a884:	str	r2, [fp, #-16]
   2a888:	str	r3, [fp, #-20]	; 0xffffffec
   2a88c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a890:	str	r3, [sp]
   2a894:	ldr	r3, [fp, #-16]
   2a898:	ldr	r2, [fp, #-12]
   2a89c:	ldr	r1, [fp, #-8]
   2a8a0:	mov	r0, #0
   2a8a4:	bl	2a7b8 <__assert_fail@plt+0x19660>
   2a8a8:	mov	r3, r0
   2a8ac:	mov	r0, r3
   2a8b0:	sub	sp, fp, #4
   2a8b4:	pop	{fp, pc}
   2a8b8:	push	{fp, lr}
   2a8bc:	add	fp, sp, #4
   2a8c0:	sub	sp, sp, #16
   2a8c4:	str	r0, [fp, #-8]
   2a8c8:	str	r1, [fp, #-12]
   2a8cc:	str	r2, [fp, #-16]
   2a8d0:	ldr	r3, [pc, #28]	; 2a8f4 <__assert_fail@plt+0x1979c>
   2a8d4:	ldr	r2, [fp, #-16]
   2a8d8:	ldr	r1, [fp, #-12]
   2a8dc:	ldr	r0, [fp, #-8]
   2a8e0:	bl	2a12c <__assert_fail@plt+0x18fd4>
   2a8e4:	mov	r3, r0
   2a8e8:	mov	r0, r3
   2a8ec:	sub	sp, fp, #4
   2a8f0:	pop	{fp, pc}
   2a8f4:	andeq	r5, r4, r0, asr #2
   2a8f8:	push	{fp, lr}
   2a8fc:	add	fp, sp, #4
   2a900:	sub	sp, sp, #8
   2a904:	str	r0, [fp, #-8]
   2a908:	str	r1, [fp, #-12]
   2a90c:	ldr	r2, [fp, #-12]
   2a910:	ldr	r1, [fp, #-8]
   2a914:	mov	r0, #0
   2a918:	bl	2a8b8 <__assert_fail@plt+0x19760>
   2a91c:	mov	r3, r0
   2a920:	mov	r0, r3
   2a924:	sub	sp, fp, #4
   2a928:	pop	{fp, pc}
   2a92c:	push	{fp, lr}
   2a930:	add	fp, sp, #4
   2a934:	sub	sp, sp, #8
   2a938:	str	r0, [fp, #-8]
   2a93c:	str	r1, [fp, #-12]
   2a940:	mvn	r2, #0
   2a944:	ldr	r1, [fp, #-12]
   2a948:	ldr	r0, [fp, #-8]
   2a94c:	bl	2a8b8 <__assert_fail@plt+0x19760>
   2a950:	mov	r3, r0
   2a954:	mov	r0, r3
   2a958:	sub	sp, fp, #4
   2a95c:	pop	{fp, pc}
   2a960:	push	{fp, lr}
   2a964:	add	fp, sp, #4
   2a968:	sub	sp, sp, #8
   2a96c:	str	r0, [fp, #-8]
   2a970:	ldr	r1, [fp, #-8]
   2a974:	mov	r0, #0
   2a978:	bl	2a92c <__assert_fail@plt+0x197d4>
   2a97c:	mov	r3, r0
   2a980:	mov	r0, r3
   2a984:	sub	sp, fp, #4
   2a988:	pop	{fp, pc}
   2a98c:	push	{fp}		; (str fp, [sp, #-4]!)
   2a990:	add	fp, sp, #0
   2a994:	sub	sp, sp, #12
   2a998:	str	r0, [fp, #-8]
   2a99c:	ldr	r3, [fp, #-8]
   2a9a0:	mov	r2, #0
   2a9a4:	str	r2, [r3]
   2a9a8:	ldr	r3, [fp, #-8]
   2a9ac:	mov	r2, #0
   2a9b0:	str	r2, [r3, #4]
   2a9b4:	nop			; (mov r0, r0)
   2a9b8:	add	sp, fp, #0
   2a9bc:	pop	{fp}		; (ldr fp, [sp], #4)
   2a9c0:	bx	lr
   2a9c4:	push	{fp}		; (str fp, [sp, #-4]!)
   2a9c8:	add	fp, sp, #0
   2a9cc:	sub	sp, sp, #12
   2a9d0:	str	r0, [fp, #-8]
   2a9d4:	str	r1, [fp, #-12]
   2a9d8:	ldr	r3, [fp, #-8]
   2a9dc:	lsr	r3, r3, #5
   2a9e0:	lsl	r3, r3, #2
   2a9e4:	ldr	r2, [fp, #-12]
   2a9e8:	add	r3, r2, r3
   2a9ec:	ldr	r2, [r3]
   2a9f0:	ldr	r3, [fp, #-8]
   2a9f4:	and	r3, r3, #31
   2a9f8:	lsr	r3, r2, r3
   2a9fc:	and	r3, r3, #1
   2aa00:	cmp	r3, #0
   2aa04:	movne	r3, #1
   2aa08:	moveq	r3, #0
   2aa0c:	uxtb	r3, r3
   2aa10:	mov	r0, r3
   2aa14:	add	sp, fp, #0
   2aa18:	pop	{fp}		; (ldr fp, [sp], #4)
   2aa1c:	bx	lr
   2aa20:	push	{fp}		; (str fp, [sp, #-4]!)
   2aa24:	add	fp, sp, #0
   2aa28:	sub	sp, sp, #20
   2aa2c:	str	r0, [fp, #-16]
   2aa30:	str	r1, [fp, #-20]	; 0xffffffec
   2aa34:	mov	r3, #1
   2aa38:	str	r3, [fp, #-8]
   2aa3c:	ldr	r3, [fp, #-16]
   2aa40:	lsr	r3, r3, #5
   2aa44:	lsl	r2, r3, #2
   2aa48:	ldr	r1, [fp, #-20]	; 0xffffffec
   2aa4c:	add	r2, r1, r2
   2aa50:	lsl	r3, r3, #2
   2aa54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2aa58:	add	r3, r1, r3
   2aa5c:	ldr	r1, [r3]
   2aa60:	ldr	r3, [fp, #-16]
   2aa64:	and	r3, r3, #31
   2aa68:	ldr	r0, [fp, #-8]
   2aa6c:	lsl	r3, r0, r3
   2aa70:	orr	r3, r1, r3
   2aa74:	str	r3, [r2]
   2aa78:	nop			; (mov r0, r0)
   2aa7c:	add	sp, fp, #0
   2aa80:	pop	{fp}		; (ldr fp, [sp], #4)
   2aa84:	bx	lr
   2aa88:	push	{fp, lr}
   2aa8c:	add	fp, sp, #4
   2aa90:	sub	sp, sp, #80	; 0x50
   2aa94:	str	r0, [fp, #-64]	; 0xffffffc0
   2aa98:	str	r1, [fp, #-68]	; 0xffffffbc
   2aa9c:	str	r2, [fp, #-72]	; 0xffffffb8
   2aaa0:	str	r3, [fp, #-76]	; 0xffffffb4
   2aaa4:	sub	r3, fp, #52	; 0x34
   2aaa8:	mov	r2, #32
   2aaac:	mov	r1, #0
   2aab0:	mov	r0, r3
   2aab4:	bl	11098 <memset@plt>
   2aab8:	mov	r3, #0
   2aabc:	str	r3, [fp, #-12]
   2aac0:	b	2aaf8 <__assert_fail@plt+0x199a0>
   2aac4:	ldr	r3, [fp, #-12]
   2aac8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2aacc:	add	r3, r2, r3
   2aad0:	ldrb	r3, [r3]
   2aad4:	strb	r3, [fp, #-17]	; 0xffffffef
   2aad8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2aadc:	sub	r2, fp, #52	; 0x34
   2aae0:	mov	r1, r2
   2aae4:	mov	r0, r3
   2aae8:	bl	2aa20 <__assert_fail@plt+0x198c8>
   2aaec:	ldr	r3, [fp, #-12]
   2aaf0:	add	r3, r3, #1
   2aaf4:	str	r3, [fp, #-12]
   2aaf8:	ldr	r2, [fp, #-12]
   2aafc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ab00:	cmp	r2, r3
   2ab04:	bcc	2aac4 <__assert_fail@plt+0x1996c>
   2ab08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ab0c:	bl	10f30 <getc_unlocked@plt>
   2ab10:	str	r0, [fp, #-8]
   2ab14:	b	2ab24 <__assert_fail@plt+0x199cc>
   2ab18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ab1c:	bl	10f30 <getc_unlocked@plt>
   2ab20:	str	r0, [fp, #-8]
   2ab24:	ldr	r3, [fp, #-8]
   2ab28:	cmp	r3, #0
   2ab2c:	blt	2ab50 <__assert_fail@plt+0x199f8>
   2ab30:	ldr	r3, [fp, #-8]
   2ab34:	sub	r2, fp, #52	; 0x34
   2ab38:	mov	r1, r2
   2ab3c:	mov	r0, r3
   2ab40:	bl	2a9c4 <__assert_fail@plt+0x1986c>
   2ab44:	mov	r3, r0
   2ab48:	cmp	r3, #0
   2ab4c:	bne	2ab18 <__assert_fail@plt+0x199c0>
   2ab50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ab54:	ldr	r3, [r3, #4]
   2ab58:	str	r3, [fp, #-16]
   2ab5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ab60:	ldr	r3, [r3]
   2ab64:	str	r3, [fp, #-56]	; 0xffffffc8
   2ab68:	mov	r3, #0
   2ab6c:	str	r3, [fp, #-12]
   2ab70:	ldr	r3, [fp, #-8]
   2ab74:	cmp	r3, #0
   2ab78:	bge	2ab90 <__assert_fail@plt+0x19a38>
   2ab7c:	ldr	r3, [fp, #-12]
   2ab80:	cmp	r3, #0
   2ab84:	bne	2ab90 <__assert_fail@plt+0x19a38>
   2ab88:	mvn	r3, #0
   2ab8c:	b	2ac70 <__assert_fail@plt+0x19b18>
   2ab90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ab94:	ldr	r2, [fp, #-12]
   2ab98:	cmp	r2, r3
   2ab9c:	bne	2abc0 <__assert_fail@plt+0x19a68>
   2aba0:	sub	r1, fp, #56	; 0x38
   2aba4:	mov	r3, #1
   2aba8:	str	r3, [sp]
   2abac:	mvn	r3, #0
   2abb0:	mov	r2, #1
   2abb4:	ldr	r0, [fp, #-16]
   2abb8:	bl	2beb0 <__assert_fail@plt+0x1ad58>
   2abbc:	str	r0, [fp, #-16]
   2abc0:	ldr	r3, [fp, #-8]
   2abc4:	cmp	r3, #0
   2abc8:	bge	2abe4 <__assert_fail@plt+0x19a8c>
   2abcc:	ldr	r3, [fp, #-12]
   2abd0:	ldr	r2, [fp, #-16]
   2abd4:	add	r3, r2, r3
   2abd8:	mov	r2, #0
   2abdc:	strb	r2, [r3]
   2abe0:	b	2ac50 <__assert_fail@plt+0x19af8>
   2abe4:	ldr	r3, [fp, #-8]
   2abe8:	sub	r2, fp, #52	; 0x34
   2abec:	mov	r1, r2
   2abf0:	mov	r0, r3
   2abf4:	bl	2a9c4 <__assert_fail@plt+0x1986c>
   2abf8:	mov	r3, r0
   2abfc:	cmp	r3, #0
   2ac00:	beq	2ac1c <__assert_fail@plt+0x19ac4>
   2ac04:	ldr	r3, [fp, #-12]
   2ac08:	ldr	r2, [fp, #-16]
   2ac0c:	add	r3, r2, r3
   2ac10:	mov	r2, #0
   2ac14:	strb	r2, [r3]
   2ac18:	b	2ac50 <__assert_fail@plt+0x19af8>
   2ac1c:	ldr	r3, [fp, #-12]
   2ac20:	add	r2, r3, #1
   2ac24:	str	r2, [fp, #-12]
   2ac28:	mov	r2, r3
   2ac2c:	ldr	r3, [fp, #-16]
   2ac30:	add	r3, r3, r2
   2ac34:	ldr	r2, [fp, #-8]
   2ac38:	uxtb	r2, r2
   2ac3c:	strb	r2, [r3]
   2ac40:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ac44:	bl	10f30 <getc_unlocked@plt>
   2ac48:	str	r0, [fp, #-8]
   2ac4c:	b	2ab70 <__assert_fail@plt+0x19a18>
   2ac50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ac54:	ldr	r2, [fp, #-16]
   2ac58:	str	r2, [r3, #4]
   2ac5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ac60:	mov	r2, r3
   2ac64:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ac68:	str	r2, [r3]
   2ac6c:	ldr	r3, [fp, #-12]
   2ac70:	mov	r0, r3
   2ac74:	sub	sp, fp, #4
   2ac78:	pop	{fp, pc}
   2ac7c:	push	{r4, fp, lr}
   2ac80:	add	fp, sp, #8
   2ac84:	sub	sp, sp, #68	; 0x44
   2ac88:	str	r0, [fp, #-56]	; 0xffffffc8
   2ac8c:	str	r1, [fp, #-60]	; 0xffffffc4
   2ac90:	str	r2, [fp, #-64]	; 0xffffffc0
   2ac94:	str	r3, [fp, #-68]	; 0xffffffbc
   2ac98:	sub	r3, fp, #44	; 0x2c
   2ac9c:	str	r3, [fp, #-28]	; 0xffffffe4
   2aca0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2aca4:	cmp	r3, #0
   2aca8:	bne	2acb8 <__assert_fail@plt+0x19b60>
   2acac:	mov	r3, #64	; 0x40
   2acb0:	str	r3, [fp, #-60]	; 0xffffffc4
   2acb4:	b	2acc4 <__assert_fail@plt+0x19b6c>
   2acb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2acbc:	add	r3, r3, #1
   2acc0:	str	r3, [fp, #-60]	; 0xffffffc4
   2acc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2acc8:	str	r3, [fp, #-48]	; 0xffffffd0
   2accc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2acd0:	mov	r1, #4
   2acd4:	mov	r0, r3
   2acd8:	bl	2bd04 <__assert_fail@plt+0x1abac>
   2acdc:	mov	r3, r0
   2ace0:	str	r3, [fp, #-16]
   2ace4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ace8:	mov	r1, #4
   2acec:	mov	r0, r3
   2acf0:	bl	2bd04 <__assert_fail@plt+0x1abac>
   2acf4:	mov	r3, r0
   2acf8:	str	r3, [fp, #-20]	; 0xffffffec
   2acfc:	mov	r3, #0
   2ad00:	str	r3, [fp, #-24]	; 0xffffffe8
   2ad04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ad08:	bl	2a98c <__assert_fail@plt+0x19834>
   2ad0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad10:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2ad14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2ad18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ad1c:	bl	2aa88 <__assert_fail@plt+0x19930>
   2ad20:	str	r0, [fp, #-32]	; 0xffffffe0
   2ad24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ad28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ad2c:	cmp	r2, r3
   2ad30:	blt	2ad6c <__assert_fail@plt+0x19c14>
   2ad34:	sub	r1, fp, #48	; 0x30
   2ad38:	mov	r3, #4
   2ad3c:	str	r3, [sp]
   2ad40:	mvn	r3, #0
   2ad44:	mov	r2, #1
   2ad48:	ldr	r0, [fp, #-16]
   2ad4c:	bl	2beb0 <__assert_fail@plt+0x1ad58>
   2ad50:	str	r0, [fp, #-16]
   2ad54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ad58:	mov	r2, #4
   2ad5c:	mov	r1, r3
   2ad60:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ad64:	bl	2bc50 <__assert_fail@plt+0x1aaf8>
   2ad68:	str	r0, [fp, #-20]	; 0xffffffec
   2ad6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ad70:	cmn	r3, #1
   2ad74:	bne	2add8 <__assert_fail@plt+0x19c80>
   2ad78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad7c:	lsl	r3, r3, #2
   2ad80:	ldr	r2, [fp, #-16]
   2ad84:	add	r3, r2, r3
   2ad88:	mov	r2, #0
   2ad8c:	str	r2, [r3]
   2ad90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ad94:	lsl	r3, r3, #2
   2ad98:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ad9c:	add	r3, r2, r3
   2ada0:	mov	r2, #0
   2ada4:	str	r2, [r3]
   2ada8:	nop			; (mov r0, r0)
   2adac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2adb0:	ldr	r3, [r3, #4]
   2adb4:	mov	r0, r3
   2adb8:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2adbc:	ldr	r3, [fp, #4]
   2adc0:	ldr	r2, [fp, #-16]
   2adc4:	str	r2, [r3]
   2adc8:	ldr	r3, [fp, #8]
   2adcc:	cmp	r3, #0
   2add0:	beq	2ae60 <__assert_fail@plt+0x19d08>
   2add4:	b	2ae50 <__assert_fail@plt+0x19cf8>
   2add8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2addc:	add	r3, r3, #1
   2ade0:	mov	r1, #1
   2ade4:	mov	r0, r3
   2ade8:	bl	2bd04 <__assert_fail@plt+0x1abac>
   2adec:	mov	r3, r0
   2adf0:	str	r3, [fp, #-36]	; 0xffffffdc
   2adf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2adf8:	lsl	r3, r3, #2
   2adfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae00:	add	r3, r2, r3
   2ae04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ae08:	str	r2, [r3]
   2ae0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae10:	lsl	r3, r3, #2
   2ae14:	ldr	r2, [fp, #-16]
   2ae18:	add	r4, r2, r3
   2ae1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae20:	ldr	r1, [r3, #4]
   2ae24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ae28:	add	r3, r3, #1
   2ae2c:	mov	r2, r3
   2ae30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ae34:	bl	10f00 <memcpy@plt>
   2ae38:	mov	r3, r0
   2ae3c:	str	r3, [r4]
   2ae40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae44:	add	r3, r3, #1
   2ae48:	str	r3, [fp, #-24]	; 0xffffffe8
   2ae4c:	b	2ad0c <__assert_fail@plt+0x19bb4>
   2ae50:	ldr	r3, [fp, #8]
   2ae54:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ae58:	str	r2, [r3]
   2ae5c:	b	2ae68 <__assert_fail@plt+0x19d10>
   2ae60:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ae64:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2ae68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae6c:	mov	r0, r3
   2ae70:	sub	sp, fp, #8
   2ae74:	pop	{r4, fp, pc}
   2ae78:	push	{fp, lr}
   2ae7c:	add	fp, sp, #4
   2ae80:	sub	sp, sp, #24
   2ae84:	str	r0, [fp, #-16]
   2ae88:	str	r1, [fp, #-20]	; 0xffffffec
   2ae8c:	str	r2, [fp, #-24]	; 0xffffffe8
   2ae90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ae94:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ae98:	ldr	r0, [fp, #-16]
   2ae9c:	bl	110a4 <write@plt>
   2aea0:	str	r0, [fp, #-8]
   2aea4:	ldr	r3, [fp, #-8]
   2aea8:	cmp	r3, #0
   2aeac:	blt	2aeb8 <__assert_fail@plt+0x19d60>
   2aeb0:	ldr	r3, [fp, #-8]
   2aeb4:	b	2af0c <__assert_fail@plt+0x19db4>
   2aeb8:	bl	11074 <__errno_location@plt>
   2aebc:	mov	r3, r0
   2aec0:	ldr	r3, [r3]
   2aec4:	cmp	r3, #4
   2aec8:	beq	2af04 <__assert_fail@plt+0x19dac>
   2aecc:	bl	11074 <__errno_location@plt>
   2aed0:	mov	r3, r0
   2aed4:	ldr	r3, [r3]
   2aed8:	cmp	r3, #22
   2aedc:	bne	2aefc <__assert_fail@plt+0x19da4>
   2aee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aee4:	ldr	r2, [pc, #44]	; 2af18 <__assert_fail@plt+0x19dc0>
   2aee8:	cmp	r3, r2
   2aeec:	bls	2aefc <__assert_fail@plt+0x19da4>
   2aef0:	ldr	r3, [pc, #32]	; 2af18 <__assert_fail@plt+0x19dc0>
   2aef4:	str	r3, [fp, #-24]	; 0xffffffe8
   2aef8:	b	2af08 <__assert_fail@plt+0x19db0>
   2aefc:	ldr	r3, [fp, #-8]
   2af00:	b	2af0c <__assert_fail@plt+0x19db4>
   2af04:	nop			; (mov r0, r0)
   2af08:	b	2ae90 <__assert_fail@plt+0x19d38>
   2af0c:	mov	r0, r3
   2af10:	sub	sp, fp, #4
   2af14:	pop	{fp, pc}
   2af18:	svcvc	0x00f00000	; IMB
   2af1c:	push	{r4, fp, lr}
   2af20:	add	fp, sp, #8
   2af24:	sub	sp, sp, #92	; 0x5c
   2af28:	str	r0, [fp, #-96]	; 0xffffffa0
   2af2c:	str	r1, [fp, #-100]	; 0xffffff9c
   2af30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2af34:	bl	10f3c <strdup@plt>
   2af38:	mov	r3, r0
   2af3c:	str	r3, [fp, #-28]	; 0xffffffe4
   2af40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2af44:	cmp	r3, #0
   2af48:	bne	2af50 <__assert_fail@plt+0x19df8>
   2af4c:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2af50:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2af54:	mov	r3, r0
   2af58:	cmp	r3, #1
   2af5c:	bls	2b22c <__assert_fail@plt+0x1a0d4>
   2af60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2af64:	cmp	r3, #0
   2af68:	beq	2b038 <__assert_fail@plt+0x19ee0>
   2af6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2af70:	str	r3, [fp, #-68]	; 0xffffffbc
   2af74:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2af78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2af7c:	bl	11050 <strlen@plt>
   2af80:	mov	r3, r0
   2af84:	add	r3, r4, r3
   2af88:	str	r3, [fp, #-88]	; 0xffffffa8
   2af8c:	mov	r3, #0
   2af90:	strb	r3, [fp, #-84]	; 0xffffffac
   2af94:	sub	r3, fp, #88	; 0x58
   2af98:	add	r3, r3, #8
   2af9c:	mov	r2, #8
   2afa0:	mov	r1, #0
   2afa4:	mov	r0, r3
   2afa8:	bl	11098 <memset@plt>
   2afac:	mov	r3, #0
   2afb0:	strb	r3, [fp, #-72]	; 0xffffffb8
   2afb4:	b	2afd0 <__assert_fail@plt+0x19e78>
   2afb8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2afbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2afc0:	add	r3, r2, r3
   2afc4:	str	r3, [fp, #-68]	; 0xffffffbc
   2afc8:	mov	r3, #0
   2afcc:	strb	r3, [fp, #-72]	; 0xffffffb8
   2afd0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2afd4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2afd8:	cmp	r2, r3
   2afdc:	bcs	2b010 <__assert_fail@plt+0x19eb8>
   2afe0:	sub	r3, fp, #88	; 0x58
   2afe4:	mov	r0, r3
   2afe8:	bl	2cf78 <__assert_fail@plt+0x1be20>
   2afec:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2aff0:	cmp	r3, #0
   2aff4:	beq	2b010 <__assert_fail@plt+0x19eb8>
   2aff8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2affc:	mov	r0, r3
   2b000:	bl	11038 <iswspace@plt>
   2b004:	mov	r3, r0
   2b008:	cmp	r3, #0
   2b00c:	bne	2afb8 <__assert_fail@plt+0x19e60>
   2b010:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2b014:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b018:	mov	r0, r3
   2b01c:	bl	11050 <strlen@plt>
   2b020:	mov	r3, r0
   2b024:	add	r3, r3, #1
   2b028:	mov	r2, r3
   2b02c:	mov	r1, r4
   2b030:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b034:	bl	10edc <memmove@plt>
   2b038:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b03c:	cmp	r3, #1
   2b040:	beq	2b32c <__assert_fail@plt+0x1a1d4>
   2b044:	mov	r3, #0
   2b048:	str	r3, [fp, #-16]
   2b04c:	mov	r3, #0
   2b050:	str	r3, [fp, #-20]	; 0xffffffec
   2b054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b058:	str	r3, [fp, #-68]	; 0xffffffbc
   2b05c:	ldr	r4, [fp, #-68]	; 0xffffffbc
   2b060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b064:	bl	11050 <strlen@plt>
   2b068:	mov	r3, r0
   2b06c:	add	r3, r4, r3
   2b070:	str	r3, [fp, #-88]	; 0xffffffa8
   2b074:	mov	r3, #0
   2b078:	strb	r3, [fp, #-84]	; 0xffffffac
   2b07c:	sub	r3, fp, #88	; 0x58
   2b080:	add	r3, r3, #8
   2b084:	mov	r2, #8
   2b088:	mov	r1, #0
   2b08c:	mov	r0, r3
   2b090:	bl	11098 <memset@plt>
   2b094:	mov	r3, #0
   2b098:	strb	r3, [fp, #-72]	; 0xffffffb8
   2b09c:	b	2b1e4 <__assert_fail@plt+0x1a08c>
   2b0a0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2b0a4:	cmp	r3, #0
   2b0a8:	beq	2b0c4 <__assert_fail@plt+0x19f6c>
   2b0ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0b0:	mov	r0, r3
   2b0b4:	bl	11038 <iswspace@plt>
   2b0b8:	mov	r3, r0
   2b0bc:	cmp	r3, #0
   2b0c0:	bne	2b1c0 <__assert_fail@plt+0x1a068>
   2b0c4:	ldr	r3, [fp, #-16]
   2b0c8:	cmp	r3, #0
   2b0cc:	bne	2b108 <__assert_fail@plt+0x19fb0>
   2b0d0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2b0d4:	eor	r3, r3, #1
   2b0d8:	uxtb	r3, r3
   2b0dc:	cmp	r3, #0
   2b0e0:	bne	2b0fc <__assert_fail@plt+0x19fa4>
   2b0e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0e8:	mov	r0, r3
   2b0ec:	bl	11038 <iswspace@plt>
   2b0f0:	mov	r3, r0
   2b0f4:	cmp	r3, #0
   2b0f8:	bne	2b108 <__assert_fail@plt+0x19fb0>
   2b0fc:	mov	r3, #1
   2b100:	str	r3, [fp, #-16]
   2b104:	b	2b1cc <__assert_fail@plt+0x1a074>
   2b108:	ldr	r3, [fp, #-16]
   2b10c:	cmp	r3, #1
   2b110:	bne	2b140 <__assert_fail@plt+0x19fe8>
   2b114:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2b118:	eor	r3, r3, #1
   2b11c:	uxtb	r3, r3
   2b120:	cmp	r3, #0
   2b124:	bne	2b1c8 <__assert_fail@plt+0x1a070>
   2b128:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b12c:	mov	r0, r3
   2b130:	bl	11038 <iswspace@plt>
   2b134:	mov	r3, r0
   2b138:	cmp	r3, #0
   2b13c:	beq	2b1c8 <__assert_fail@plt+0x1a070>
   2b140:	ldr	r3, [fp, #-16]
   2b144:	cmp	r3, #1
   2b148:	bne	2b184 <__assert_fail@plt+0x1a02c>
   2b14c:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2b150:	cmp	r3, #0
   2b154:	beq	2b184 <__assert_fail@plt+0x1a02c>
   2b158:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b15c:	mov	r0, r3
   2b160:	bl	11038 <iswspace@plt>
   2b164:	mov	r3, r0
   2b168:	cmp	r3, #0
   2b16c:	beq	2b184 <__assert_fail@plt+0x1a02c>
   2b170:	mov	r3, #2
   2b174:	str	r3, [fp, #-16]
   2b178:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b17c:	str	r3, [fp, #-20]	; 0xffffffec
   2b180:	b	2b1cc <__assert_fail@plt+0x1a074>
   2b184:	ldr	r3, [fp, #-16]
   2b188:	cmp	r3, #2
   2b18c:	bne	2b1b4 <__assert_fail@plt+0x1a05c>
   2b190:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   2b194:	cmp	r3, #0
   2b198:	beq	2b1b4 <__assert_fail@plt+0x1a05c>
   2b19c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b1a0:	mov	r0, r3
   2b1a4:	bl	11038 <iswspace@plt>
   2b1a8:	mov	r3, r0
   2b1ac:	cmp	r3, #0
   2b1b0:	bne	2b1cc <__assert_fail@plt+0x1a074>
   2b1b4:	mov	r3, #1
   2b1b8:	str	r3, [fp, #-16]
   2b1bc:	b	2b1cc <__assert_fail@plt+0x1a074>
   2b1c0:	nop			; (mov r0, r0)
   2b1c4:	b	2b1cc <__assert_fail@plt+0x1a074>
   2b1c8:	nop			; (mov r0, r0)
   2b1cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2b1d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b1d4:	add	r3, r2, r3
   2b1d8:	str	r3, [fp, #-68]	; 0xffffffbc
   2b1dc:	mov	r3, #0
   2b1e0:	strb	r3, [fp, #-72]	; 0xffffffb8
   2b1e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2b1e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b1ec:	cmp	r2, r3
   2b1f0:	bcs	2b210 <__assert_fail@plt+0x1a0b8>
   2b1f4:	sub	r3, fp, #88	; 0x58
   2b1f8:	mov	r0, r3
   2b1fc:	bl	2cf78 <__assert_fail@plt+0x1be20>
   2b200:	ldr	r3, [fp, #-16]
   2b204:	cmp	r3, #0
   2b208:	bne	2b0c4 <__assert_fail@plt+0x19f6c>
   2b20c:	b	2b0a0 <__assert_fail@plt+0x19f48>
   2b210:	ldr	r3, [fp, #-16]
   2b214:	cmp	r3, #2
   2b218:	bne	2b32c <__assert_fail@plt+0x1a1d4>
   2b21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b220:	mov	r2, #0
   2b224:	strb	r2, [r3]
   2b228:	b	2b32c <__assert_fail@plt+0x1a1d4>
   2b22c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b230:	cmp	r3, #0
   2b234:	beq	2b2ac <__assert_fail@plt+0x1a154>
   2b238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b23c:	str	r3, [fp, #-24]	; 0xffffffe8
   2b240:	b	2b250 <__assert_fail@plt+0x1a0f8>
   2b244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b248:	add	r3, r3, #1
   2b24c:	str	r3, [fp, #-24]	; 0xffffffe8
   2b250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b254:	ldrb	r3, [r3]
   2b258:	cmp	r3, #0
   2b25c:	beq	2b28c <__assert_fail@plt+0x1a134>
   2b260:	bl	11020 <__ctype_b_loc@plt>
   2b264:	mov	r3, r0
   2b268:	ldr	r2, [r3]
   2b26c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b270:	ldrb	r3, [r3]
   2b274:	lsl	r3, r3, #1
   2b278:	add	r3, r2, r3
   2b27c:	ldrh	r3, [r3]
   2b280:	and	r3, r3, #8192	; 0x2000
   2b284:	cmp	r3, #0
   2b288:	bne	2b244 <__assert_fail@plt+0x1a0ec>
   2b28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b290:	bl	11050 <strlen@plt>
   2b294:	mov	r3, r0
   2b298:	add	r3, r3, #1
   2b29c:	mov	r2, r3
   2b2a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b2a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b2a8:	bl	10edc <memmove@plt>
   2b2ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b2b0:	cmp	r3, #1
   2b2b4:	beq	2b32c <__assert_fail@plt+0x1a1d4>
   2b2b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b2bc:	bl	11050 <strlen@plt>
   2b2c0:	mov	r3, r0
   2b2c4:	sub	r3, r3, #1
   2b2c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b2cc:	add	r3, r2, r3
   2b2d0:	str	r3, [fp, #-24]	; 0xffffffe8
   2b2d4:	b	2b2f0 <__assert_fail@plt+0x1a198>
   2b2d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2dc:	mov	r2, #0
   2b2e0:	strb	r2, [r3]
   2b2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2e8:	sub	r3, r3, #1
   2b2ec:	str	r3, [fp, #-24]	; 0xffffffe8
   2b2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b2f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b2f8:	cmp	r2, r3
   2b2fc:	bcc	2b32c <__assert_fail@plt+0x1a1d4>
   2b300:	bl	11020 <__ctype_b_loc@plt>
   2b304:	mov	r3, r0
   2b308:	ldr	r2, [r3]
   2b30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b310:	ldrb	r3, [r3]
   2b314:	lsl	r3, r3, #1
   2b318:	add	r3, r2, r3
   2b31c:	ldrh	r3, [r3]
   2b320:	and	r3, r3, #8192	; 0x2000
   2b324:	cmp	r3, #0
   2b328:	bne	2b2d8 <__assert_fail@plt+0x1a180>
   2b32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b330:	mov	r0, r3
   2b334:	sub	sp, fp, #8
   2b338:	pop	{r4, fp, pc}
   2b33c:	push	{r4, r5, r6, r7, fp, lr}
   2b340:	add	fp, sp, #20
   2b344:	sub	sp, sp, #48	; 0x30
   2b348:	str	r0, [fp, #-24]	; 0xffffffe8
   2b34c:	str	r1, [fp, #-28]	; 0xffffffe4
   2b350:	str	r2, [fp, #-32]	; 0xffffffe0
   2b354:	str	r3, [fp, #-36]	; 0xffffffdc
   2b358:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b35c:	cmp	r3, #0
   2b360:	beq	2b384 <__assert_fail@plt+0x1a22c>
   2b364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b368:	str	r3, [sp]
   2b36c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b370:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b374:	ldr	r1, [pc, #1260]	; 2b868 <__assert_fail@plt+0x1a710>
   2b378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b37c:	bl	11068 <fprintf@plt>
   2b380:	b	2b398 <__assert_fail@plt+0x1a240>
   2b384:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b388:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b38c:	ldr	r1, [pc, #1240]	; 2b86c <__assert_fail@plt+0x1a714>
   2b390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b394:	bl	11068 <fprintf@plt>
   2b398:	ldr	r0, [pc, #1232]	; 2b870 <__assert_fail@plt+0x1a718>
   2b39c:	bl	11044 <gettext@plt>
   2b3a0:	mov	r2, r0
   2b3a4:	ldr	r3, [pc, #1224]	; 2b874 <__assert_fail@plt+0x1a71c>
   2b3a8:	ldr	r1, [pc, #1224]	; 2b878 <__assert_fail@plt+0x1a720>
   2b3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b3b0:	bl	11068 <fprintf@plt>
   2b3b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b3b8:	mov	r0, #10
   2b3bc:	bl	10f24 <fputc_unlocked@plt>
   2b3c0:	ldr	r0, [pc, #1204]	; 2b87c <__assert_fail@plt+0x1a724>
   2b3c4:	bl	11044 <gettext@plt>
   2b3c8:	mov	r3, r0
   2b3cc:	ldr	r2, [pc, #1196]	; 2b880 <__assert_fail@plt+0x1a728>
   2b3d0:	mov	r1, r3
   2b3d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b3d8:	bl	11068 <fprintf@plt>
   2b3dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b3e0:	mov	r0, #10
   2b3e4:	bl	10f24 <fputc_unlocked@plt>
   2b3e8:	ldr	r3, [fp, #8]
   2b3ec:	cmp	r3, #9
   2b3f0:	ldrls	pc, [pc, r3, lsl #2]
   2b3f4:	b	2b7b0 <__assert_fail@plt+0x1a658>
   2b3f8:	andeq	fp, r2, r8, asr r8
   2b3fc:	andeq	fp, r2, r0, lsr #8
   2b400:	andeq	fp, r2, r4, asr #8
   2b404:	andeq	fp, r2, r0, ror r4
   2b408:			; <UNDEFINED> instruction: 0x0002b4b0
   2b40c:	andeq	fp, r2, r8, lsl #10
   2b410:	andeq	fp, r2, r0, ror r5
   2b414:	andeq	fp, r2, r8, ror #11
   2b418:	andeq	fp, r2, r0, ror r6
   2b41c:	andeq	fp, r2, r8, lsl #14
   2b420:	ldr	r0, [pc, #1116]	; 2b884 <__assert_fail@plt+0x1a72c>
   2b424:	bl	11044 <gettext@plt>
   2b428:	mov	r1, r0
   2b42c:	ldr	r3, [fp, #4]
   2b430:	ldr	r3, [r3]
   2b434:	mov	r2, r3
   2b438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b43c:	bl	11068 <fprintf@plt>
   2b440:	b	2b85c <__assert_fail@plt+0x1a704>
   2b444:	ldr	r0, [pc, #1084]	; 2b888 <__assert_fail@plt+0x1a730>
   2b448:	bl	11044 <gettext@plt>
   2b44c:	mov	r1, r0
   2b450:	ldr	r3, [fp, #4]
   2b454:	ldr	r2, [r3]
   2b458:	ldr	r3, [fp, #4]
   2b45c:	add	r3, r3, #4
   2b460:	ldr	r3, [r3]
   2b464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b468:	bl	11068 <fprintf@plt>
   2b46c:	b	2b85c <__assert_fail@plt+0x1a704>
   2b470:	ldr	r0, [pc, #1044]	; 2b88c <__assert_fail@plt+0x1a734>
   2b474:	bl	11044 <gettext@plt>
   2b478:	ldr	r3, [fp, #4]
   2b47c:	ldr	r2, [r3]
   2b480:	ldr	r3, [fp, #4]
   2b484:	add	r3, r3, #4
   2b488:	ldr	r1, [r3]
   2b48c:	ldr	r3, [fp, #4]
   2b490:	add	r3, r3, #8
   2b494:	ldr	r3, [r3]
   2b498:	str	r3, [sp]
   2b49c:	mov	r3, r1
   2b4a0:	mov	r1, r0
   2b4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b4a8:	bl	11068 <fprintf@plt>
   2b4ac:	b	2b85c <__assert_fail@plt+0x1a704>
   2b4b0:	ldr	r0, [pc, #984]	; 2b890 <__assert_fail@plt+0x1a738>
   2b4b4:	bl	11044 <gettext@plt>
   2b4b8:	mov	ip, r0
   2b4bc:	ldr	r3, [fp, #4]
   2b4c0:	ldr	r1, [r3]
   2b4c4:	ldr	r3, [fp, #4]
   2b4c8:	add	r3, r3, #4
   2b4cc:	ldr	r0, [r3]
   2b4d0:	ldr	r3, [fp, #4]
   2b4d4:	add	r3, r3, #8
   2b4d8:	ldr	r3, [r3]
   2b4dc:	ldr	r2, [fp, #4]
   2b4e0:	add	r2, r2, #12
   2b4e4:	ldr	r2, [r2]
   2b4e8:	str	r2, [sp, #4]
   2b4ec:	str	r3, [sp]
   2b4f0:	mov	r3, r0
   2b4f4:	mov	r2, r1
   2b4f8:	mov	r1, ip
   2b4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b500:	bl	11068 <fprintf@plt>
   2b504:	b	2b85c <__assert_fail@plt+0x1a704>
   2b508:	ldr	r0, [pc, #900]	; 2b894 <__assert_fail@plt+0x1a73c>
   2b50c:	bl	11044 <gettext@plt>
   2b510:	mov	lr, r0
   2b514:	ldr	r3, [fp, #4]
   2b518:	ldr	r0, [r3]
   2b51c:	ldr	r3, [fp, #4]
   2b520:	add	r3, r3, #4
   2b524:	ldr	ip, [r3]
   2b528:	ldr	r3, [fp, #4]
   2b52c:	add	r3, r3, #8
   2b530:	ldr	r3, [r3]
   2b534:	ldr	r2, [fp, #4]
   2b538:	add	r2, r2, #12
   2b53c:	ldr	r2, [r2]
   2b540:	ldr	r1, [fp, #4]
   2b544:	add	r1, r1, #16
   2b548:	ldr	r1, [r1]
   2b54c:	str	r1, [sp, #8]
   2b550:	str	r2, [sp, #4]
   2b554:	str	r3, [sp]
   2b558:	mov	r3, ip
   2b55c:	mov	r2, r0
   2b560:	mov	r1, lr
   2b564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b568:	bl	11068 <fprintf@plt>
   2b56c:	b	2b85c <__assert_fail@plt+0x1a704>
   2b570:	ldr	r0, [pc, #800]	; 2b898 <__assert_fail@plt+0x1a740>
   2b574:	bl	11044 <gettext@plt>
   2b578:	mov	r4, r0
   2b57c:	ldr	r3, [fp, #4]
   2b580:	ldr	ip, [r3]
   2b584:	ldr	r3, [fp, #4]
   2b588:	add	r3, r3, #4
   2b58c:	ldr	lr, [r3]
   2b590:	ldr	r3, [fp, #4]
   2b594:	add	r3, r3, #8
   2b598:	ldr	r3, [r3]
   2b59c:	ldr	r2, [fp, #4]
   2b5a0:	add	r2, r2, #12
   2b5a4:	ldr	r2, [r2]
   2b5a8:	ldr	r1, [fp, #4]
   2b5ac:	add	r1, r1, #16
   2b5b0:	ldr	r1, [r1]
   2b5b4:	ldr	r0, [fp, #4]
   2b5b8:	add	r0, r0, #20
   2b5bc:	ldr	r0, [r0]
   2b5c0:	str	r0, [sp, #12]
   2b5c4:	str	r1, [sp, #8]
   2b5c8:	str	r2, [sp, #4]
   2b5cc:	str	r3, [sp]
   2b5d0:	mov	r3, lr
   2b5d4:	mov	r2, ip
   2b5d8:	mov	r1, r4
   2b5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b5e0:	bl	11068 <fprintf@plt>
   2b5e4:	b	2b85c <__assert_fail@plt+0x1a704>
   2b5e8:	ldr	r0, [pc, #684]	; 2b89c <__assert_fail@plt+0x1a744>
   2b5ec:	bl	11044 <gettext@plt>
   2b5f0:	mov	r5, r0
   2b5f4:	ldr	r3, [fp, #4]
   2b5f8:	ldr	lr, [r3]
   2b5fc:	ldr	r3, [fp, #4]
   2b600:	add	r3, r3, #4
   2b604:	ldr	r4, [r3]
   2b608:	ldr	r3, [fp, #4]
   2b60c:	add	r3, r3, #8
   2b610:	ldr	r3, [r3]
   2b614:	ldr	r2, [fp, #4]
   2b618:	add	r2, r2, #12
   2b61c:	ldr	r2, [r2]
   2b620:	ldr	r1, [fp, #4]
   2b624:	add	r1, r1, #16
   2b628:	ldr	r1, [r1]
   2b62c:	ldr	r0, [fp, #4]
   2b630:	add	r0, r0, #20
   2b634:	ldr	r0, [r0]
   2b638:	ldr	ip, [fp, #4]
   2b63c:	add	ip, ip, #24
   2b640:	ldr	ip, [ip]
   2b644:	str	ip, [sp, #16]
   2b648:	str	r0, [sp, #12]
   2b64c:	str	r1, [sp, #8]
   2b650:	str	r2, [sp, #4]
   2b654:	str	r3, [sp]
   2b658:	mov	r3, r4
   2b65c:	mov	r2, lr
   2b660:	mov	r1, r5
   2b664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b668:	bl	11068 <fprintf@plt>
   2b66c:	b	2b85c <__assert_fail@plt+0x1a704>
   2b670:	ldr	r0, [pc, #552]	; 2b8a0 <__assert_fail@plt+0x1a748>
   2b674:	bl	11044 <gettext@plt>
   2b678:	mov	r6, r0
   2b67c:	ldr	r3, [fp, #4]
   2b680:	ldr	r4, [r3]
   2b684:	ldr	r3, [fp, #4]
   2b688:	add	r3, r3, #4
   2b68c:	ldr	r5, [r3]
   2b690:	ldr	r3, [fp, #4]
   2b694:	add	r3, r3, #8
   2b698:	ldr	r3, [r3]
   2b69c:	ldr	r2, [fp, #4]
   2b6a0:	add	r2, r2, #12
   2b6a4:	ldr	r2, [r2]
   2b6a8:	ldr	r1, [fp, #4]
   2b6ac:	add	r1, r1, #16
   2b6b0:	ldr	r1, [r1]
   2b6b4:	ldr	r0, [fp, #4]
   2b6b8:	add	r0, r0, #20
   2b6bc:	ldr	r0, [r0]
   2b6c0:	ldr	ip, [fp, #4]
   2b6c4:	add	ip, ip, #24
   2b6c8:	ldr	ip, [ip]
   2b6cc:	ldr	lr, [fp, #4]
   2b6d0:	add	lr, lr, #28
   2b6d4:	ldr	lr, [lr]
   2b6d8:	str	lr, [sp, #20]
   2b6dc:	str	ip, [sp, #16]
   2b6e0:	str	r0, [sp, #12]
   2b6e4:	str	r1, [sp, #8]
   2b6e8:	str	r2, [sp, #4]
   2b6ec:	str	r3, [sp]
   2b6f0:	mov	r3, r5
   2b6f4:	mov	r2, r4
   2b6f8:	mov	r1, r6
   2b6fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b700:	bl	11068 <fprintf@plt>
   2b704:	b	2b85c <__assert_fail@plt+0x1a704>
   2b708:	ldr	r0, [pc, #404]	; 2b8a4 <__assert_fail@plt+0x1a74c>
   2b70c:	bl	11044 <gettext@plt>
   2b710:	mov	r7, r0
   2b714:	ldr	r3, [fp, #4]
   2b718:	ldr	r5, [r3]
   2b71c:	ldr	r3, [fp, #4]
   2b720:	add	r3, r3, #4
   2b724:	ldr	r6, [r3]
   2b728:	ldr	r3, [fp, #4]
   2b72c:	add	r3, r3, #8
   2b730:	ldr	r3, [r3]
   2b734:	ldr	r2, [fp, #4]
   2b738:	add	r2, r2, #12
   2b73c:	ldr	r2, [r2]
   2b740:	ldr	r1, [fp, #4]
   2b744:	add	r1, r1, #16
   2b748:	ldr	r1, [r1]
   2b74c:	ldr	r0, [fp, #4]
   2b750:	add	r0, r0, #20
   2b754:	ldr	r0, [r0]
   2b758:	ldr	ip, [fp, #4]
   2b75c:	add	ip, ip, #24
   2b760:	ldr	ip, [ip]
   2b764:	ldr	lr, [fp, #4]
   2b768:	add	lr, lr, #28
   2b76c:	ldr	lr, [lr]
   2b770:	ldr	r4, [fp, #4]
   2b774:	add	r4, r4, #32
   2b778:	ldr	r4, [r4]
   2b77c:	str	r4, [sp, #24]
   2b780:	str	lr, [sp, #20]
   2b784:	str	ip, [sp, #16]
   2b788:	str	r0, [sp, #12]
   2b78c:	str	r1, [sp, #8]
   2b790:	str	r2, [sp, #4]
   2b794:	str	r3, [sp]
   2b798:	mov	r3, r6
   2b79c:	mov	r2, r5
   2b7a0:	mov	r1, r7
   2b7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b7a8:	bl	11068 <fprintf@plt>
   2b7ac:	b	2b85c <__assert_fail@plt+0x1a704>
   2b7b0:	ldr	r0, [pc, #240]	; 2b8a8 <__assert_fail@plt+0x1a750>
   2b7b4:	bl	11044 <gettext@plt>
   2b7b8:	mov	r7, r0
   2b7bc:	ldr	r3, [fp, #4]
   2b7c0:	ldr	r5, [r3]
   2b7c4:	ldr	r3, [fp, #4]
   2b7c8:	add	r3, r3, #4
   2b7cc:	ldr	r6, [r3]
   2b7d0:	ldr	r3, [fp, #4]
   2b7d4:	add	r3, r3, #8
   2b7d8:	ldr	r3, [r3]
   2b7dc:	ldr	r2, [fp, #4]
   2b7e0:	add	r2, r2, #12
   2b7e4:	ldr	r2, [r2]
   2b7e8:	ldr	r1, [fp, #4]
   2b7ec:	add	r1, r1, #16
   2b7f0:	ldr	r1, [r1]
   2b7f4:	ldr	r0, [fp, #4]
   2b7f8:	add	r0, r0, #20
   2b7fc:	ldr	r0, [r0]
   2b800:	ldr	ip, [fp, #4]
   2b804:	add	ip, ip, #24
   2b808:	ldr	ip, [ip]
   2b80c:	ldr	lr, [fp, #4]
   2b810:	add	lr, lr, #28
   2b814:	ldr	lr, [lr]
   2b818:	ldr	r4, [fp, #4]
   2b81c:	add	r4, r4, #32
   2b820:	ldr	r4, [r4]
   2b824:	str	r4, [sp, #24]
   2b828:	str	lr, [sp, #20]
   2b82c:	str	ip, [sp, #16]
   2b830:	str	r0, [sp, #12]
   2b834:	str	r1, [sp, #8]
   2b838:	str	r2, [sp, #4]
   2b83c:	str	r3, [sp]
   2b840:	mov	r3, r6
   2b844:	mov	r2, r5
   2b848:	mov	r1, r7
   2b84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b850:	bl	11068 <fprintf@plt>
   2b854:	b	2b85c <__assert_fail@plt+0x1a704>
   2b858:	nop			; (mov r0, r0)
   2b85c:	nop			; (mov r0, r0)
   2b860:	sub	sp, fp, #20
   2b864:	pop	{r4, r5, r6, r7, fp, pc}
   2b868:	andeq	r4, r3, ip, lsl #8
   2b86c:	andeq	r4, r3, r8, lsl r4
   2b870:	andeq	r4, r3, r0, lsr #8
   2b874:	andeq	r0, r0, r6, ror #15
   2b878:	andeq	r4, r3, r0, lsr r7
   2b87c:	andeq	r4, r3, r4, lsr #8
   2b880:	ldrdeq	r4, [r3], -r0
   2b884:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2b888:	andeq	r4, r3, r4, lsl #10
   2b88c:	andeq	r4, r3, ip, lsl r5
   2b890:	andeq	r4, r3, r8, lsr r5
   2b894:	andeq	r4, r3, r8, asr r5
   2b898:	andeq	r4, r3, ip, ror r5
   2b89c:	andeq	r4, r3, r4, lsr #11
   2b8a0:	ldrdeq	r4, [r3], -r0
   2b8a4:	andeq	r4, r3, r0, lsl #12
   2b8a8:	andeq	r4, r3, r4, lsr r6
   2b8ac:	push	{fp, lr}
   2b8b0:	add	fp, sp, #4
   2b8b4:	sub	sp, sp, #32
   2b8b8:	str	r0, [fp, #-16]
   2b8bc:	str	r1, [fp, #-20]	; 0xffffffec
   2b8c0:	str	r2, [fp, #-24]	; 0xffffffe8
   2b8c4:	str	r3, [fp, #-28]	; 0xffffffe4
   2b8c8:	mov	r3, #0
   2b8cc:	str	r3, [fp, #-8]
   2b8d0:	b	2b8e0 <__assert_fail@plt+0x1a788>
   2b8d4:	ldr	r3, [fp, #-8]
   2b8d8:	add	r3, r3, #1
   2b8dc:	str	r3, [fp, #-8]
   2b8e0:	ldr	r3, [fp, #-8]
   2b8e4:	lsl	r3, r3, #2
   2b8e8:	ldr	r2, [fp, #4]
   2b8ec:	add	r3, r2, r3
   2b8f0:	ldr	r3, [r3]
   2b8f4:	cmp	r3, #0
   2b8f8:	bne	2b8d4 <__assert_fail@plt+0x1a77c>
   2b8fc:	ldr	r3, [fp, #-8]
   2b900:	str	r3, [sp, #4]
   2b904:	ldr	r3, [fp, #4]
   2b908:	str	r3, [sp]
   2b90c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b914:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b918:	ldr	r0, [fp, #-16]
   2b91c:	bl	2b33c <__assert_fail@plt+0x1a1e4>
   2b920:	nop			; (mov r0, r0)
   2b924:	sub	sp, fp, #4
   2b928:	pop	{fp, pc}
   2b92c:	push	{fp, lr}
   2b930:	add	fp, sp, #4
   2b934:	sub	sp, sp, #72	; 0x48
   2b938:	str	r0, [fp, #-56]	; 0xffffffc8
   2b93c:	str	r1, [fp, #-60]	; 0xffffffc4
   2b940:	str	r2, [fp, #-64]	; 0xffffffc0
   2b944:	str	r3, [fp, #-68]	; 0xffffffbc
   2b948:	mov	r3, #0
   2b94c:	str	r3, [fp, #-8]
   2b950:	b	2b960 <__assert_fail@plt+0x1a808>
   2b954:	ldr	r3, [fp, #-8]
   2b958:	add	r3, r3, #1
   2b95c:	str	r3, [fp, #-8]
   2b960:	ldr	r3, [fp, #-8]
   2b964:	cmp	r3, #9
   2b968:	bhi	2b9ac <__assert_fail@plt+0x1a854>
   2b96c:	ldr	r3, [fp, #4]
   2b970:	add	r2, r3, #4
   2b974:	str	r2, [fp, #4]
   2b978:	ldr	r2, [r3]
   2b97c:	ldr	r3, [fp, #-8]
   2b980:	lsl	r3, r3, #2
   2b984:	sub	r1, fp, #4
   2b988:	add	r3, r1, r3
   2b98c:	str	r2, [r3, #-44]	; 0xffffffd4
   2b990:	ldr	r3, [fp, #-8]
   2b994:	lsl	r3, r3, #2
   2b998:	sub	r2, fp, #4
   2b99c:	add	r3, r2, r3
   2b9a0:	ldr	r3, [r3, #-44]	; 0xffffffd4
   2b9a4:	cmp	r3, #0
   2b9a8:	bne	2b954 <__assert_fail@plt+0x1a7fc>
   2b9ac:	ldr	r3, [fp, #-8]
   2b9b0:	str	r3, [sp, #4]
   2b9b4:	sub	r3, fp, #48	; 0x30
   2b9b8:	str	r3, [sp]
   2b9bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b9c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b9c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2b9c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2b9cc:	bl	2b33c <__assert_fail@plt+0x1a1e4>
   2b9d0:	nop			; (mov r0, r0)
   2b9d4:	sub	sp, fp, #4
   2b9d8:	pop	{fp, pc}
   2b9dc:	push	{r3}		; (str r3, [sp, #-4]!)
   2b9e0:	push	{fp, lr}
   2b9e4:	add	fp, sp, #4
   2b9e8:	sub	sp, sp, #36	; 0x24
   2b9ec:	str	r0, [fp, #-20]	; 0xffffffec
   2b9f0:	str	r1, [fp, #-24]	; 0xffffffe8
   2b9f4:	str	r2, [fp, #-28]	; 0xffffffe4
   2b9f8:	add	r3, fp, #8
   2b9fc:	str	r3, [fp, #-12]
   2ba00:	ldr	r3, [fp, #-12]
   2ba04:	str	r3, [sp]
   2ba08:	ldr	r3, [fp, #4]
   2ba0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ba10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ba14:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ba18:	bl	2b92c <__assert_fail@plt+0x1a7d4>
   2ba1c:	nop			; (mov r0, r0)
   2ba20:	sub	sp, fp, #4
   2ba24:	pop	{fp, lr}
   2ba28:	add	sp, sp, #4
   2ba2c:	bx	lr
   2ba30:	push	{fp, lr}
   2ba34:	add	fp, sp, #4
   2ba38:	ldr	r3, [pc, #96]	; 2baa0 <__assert_fail@plt+0x1a948>
   2ba3c:	ldr	r3, [r3]
   2ba40:	mov	r1, r3
   2ba44:	mov	r0, #10
   2ba48:	bl	10f24 <fputc_unlocked@plt>
   2ba4c:	ldr	r0, [pc, #80]	; 2baa4 <__assert_fail@plt+0x1a94c>
   2ba50:	bl	11044 <gettext@plt>
   2ba54:	mov	r3, r0
   2ba58:	ldr	r1, [pc, #72]	; 2baa8 <__assert_fail@plt+0x1a950>
   2ba5c:	mov	r0, r3
   2ba60:	bl	10eb8 <printf@plt>
   2ba64:	ldr	r0, [pc, #64]	; 2baac <__assert_fail@plt+0x1a954>
   2ba68:	bl	11044 <gettext@plt>
   2ba6c:	mov	r3, r0
   2ba70:	ldr	r2, [pc, #56]	; 2bab0 <__assert_fail@plt+0x1a958>
   2ba74:	ldr	r1, [pc, #56]	; 2bab4 <__assert_fail@plt+0x1a95c>
   2ba78:	mov	r0, r3
   2ba7c:	bl	10eb8 <printf@plt>
   2ba80:	ldr	r0, [pc, #48]	; 2bab8 <__assert_fail@plt+0x1a960>
   2ba84:	bl	11044 <gettext@plt>
   2ba88:	mov	r3, r0
   2ba8c:	ldr	r1, [pc, #40]	; 2babc <__assert_fail@plt+0x1a964>
   2ba90:	mov	r0, r3
   2ba94:	bl	10eb8 <printf@plt>
   2ba98:	nop			; (mov r0, r0)
   2ba9c:	pop	{fp, pc}
   2baa0:	andeq	r5, r4, ip, lsl #3
   2baa4:	andeq	r4, r3, r0, ror r6
   2baa8:	andeq	r4, r3, r4, lsl #13
   2baac:	muleq	r3, ip, r6
   2bab0:			; <UNDEFINED> instruction: 0x000346b0
   2bab4:	ldrdeq	r4, [r3], -r8
   2bab8:	andeq	r4, r3, r8, ror #13
   2babc:	andeq	r4, r3, r0, lsl r7
   2bac0:	push	{fp, lr}
   2bac4:	add	fp, sp, #4
   2bac8:	sub	sp, sp, #16
   2bacc:	str	r0, [fp, #-8]
   2bad0:	str	r1, [fp, #-12]
   2bad4:	str	r2, [fp, #-16]
   2bad8:	ldr	r2, [fp, #-16]
   2badc:	ldr	r1, [fp, #-12]
   2bae0:	ldr	r0, [fp, #-8]
   2bae4:	bl	2bc50 <__assert_fail@plt+0x1aaf8>
   2bae8:	mov	r3, r0
   2baec:	mov	r0, r3
   2baf0:	sub	sp, fp, #4
   2baf4:	pop	{fp, pc}
   2baf8:	push	{fp, lr}
   2bafc:	add	fp, sp, #4
   2bb00:	sub	sp, sp, #8
   2bb04:	str	r0, [fp, #-8]
   2bb08:	ldr	r3, [fp, #-8]
   2bb0c:	cmp	r3, #0
   2bb10:	bne	2bb18 <__assert_fail@plt+0x1a9c0>
   2bb14:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2bb18:	ldr	r3, [fp, #-8]
   2bb1c:	mov	r0, r3
   2bb20:	sub	sp, fp, #4
   2bb24:	pop	{fp, pc}
   2bb28:	push	{fp, lr}
   2bb2c:	add	fp, sp, #4
   2bb30:	sub	sp, sp, #8
   2bb34:	str	r0, [fp, #-8]
   2bb38:	ldr	r0, [fp, #-8]
   2bb3c:	bl	2c874 <__assert_fail@plt+0x1b71c>
   2bb40:	mov	r3, r0
   2bb44:	mov	r0, r3
   2bb48:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2bb4c:	mov	r3, r0
   2bb50:	mov	r0, r3
   2bb54:	sub	sp, fp, #4
   2bb58:	pop	{fp, pc}
   2bb5c:	push	{fp, lr}
   2bb60:	add	fp, sp, #4
   2bb64:	sub	sp, sp, #8
   2bb68:	str	r0, [fp, #-8]
   2bb6c:	ldr	r0, [fp, #-8]
   2bb70:	bl	2ce04 <__assert_fail@plt+0x1bcac>
   2bb74:	mov	r3, r0
   2bb78:	mov	r0, r3
   2bb7c:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2bb80:	mov	r3, r0
   2bb84:	mov	r0, r3
   2bb88:	sub	sp, fp, #4
   2bb8c:	pop	{fp, pc}
   2bb90:	push	{fp, lr}
   2bb94:	add	fp, sp, #4
   2bb98:	sub	sp, sp, #8
   2bb9c:	str	r0, [fp, #-8]
   2bba0:	ldr	r0, [fp, #-8]
   2bba4:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   2bba8:	mov	r3, r0
   2bbac:	mov	r0, r3
   2bbb0:	sub	sp, fp, #4
   2bbb4:	pop	{fp, pc}
   2bbb8:	push	{fp, lr}
   2bbbc:	add	fp, sp, #4
   2bbc0:	sub	sp, sp, #16
   2bbc4:	str	r0, [fp, #-16]
   2bbc8:	str	r1, [fp, #-20]	; 0xffffffec
   2bbcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bbd0:	ldr	r0, [fp, #-16]
   2bbd4:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2bbd8:	str	r0, [fp, #-8]
   2bbdc:	ldr	r3, [fp, #-8]
   2bbe0:	cmp	r3, #0
   2bbe4:	bne	2bc04 <__assert_fail@plt+0x1aaac>
   2bbe8:	ldr	r3, [fp, #-16]
   2bbec:	cmp	r3, #0
   2bbf0:	beq	2bc00 <__assert_fail@plt+0x1aaa8>
   2bbf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbf8:	cmp	r3, #0
   2bbfc:	beq	2bc04 <__assert_fail@plt+0x1aaac>
   2bc00:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2bc04:	ldr	r3, [fp, #-8]
   2bc08:	mov	r0, r3
   2bc0c:	sub	sp, fp, #4
   2bc10:	pop	{fp, pc}
   2bc14:	push	{fp, lr}
   2bc18:	add	fp, sp, #4
   2bc1c:	sub	sp, sp, #8
   2bc20:	str	r0, [fp, #-8]
   2bc24:	str	r1, [fp, #-12]
   2bc28:	ldr	r1, [fp, #-12]
   2bc2c:	ldr	r0, [fp, #-8]
   2bc30:	bl	2ce30 <__assert_fail@plt+0x1bcd8>
   2bc34:	mov	r3, r0
   2bc38:	mov	r0, r3
   2bc3c:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2bc40:	mov	r3, r0
   2bc44:	mov	r0, r3
   2bc48:	sub	sp, fp, #4
   2bc4c:	pop	{fp, pc}
   2bc50:	push	{fp, lr}
   2bc54:	add	fp, sp, #4
   2bc58:	sub	sp, sp, #24
   2bc5c:	str	r0, [fp, #-16]
   2bc60:	str	r1, [fp, #-20]	; 0xffffffec
   2bc64:	str	r2, [fp, #-24]	; 0xffffffe8
   2bc68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bc6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bc70:	ldr	r0, [fp, #-16]
   2bc74:	bl	2e87c <__assert_fail@plt+0x1d724>
   2bc78:	str	r0, [fp, #-8]
   2bc7c:	ldr	r3, [fp, #-8]
   2bc80:	cmp	r3, #0
   2bc84:	bne	2bcb0 <__assert_fail@plt+0x1ab58>
   2bc88:	ldr	r3, [fp, #-16]
   2bc8c:	cmp	r3, #0
   2bc90:	beq	2bcac <__assert_fail@plt+0x1ab54>
   2bc94:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc98:	cmp	r3, #0
   2bc9c:	beq	2bcb0 <__assert_fail@plt+0x1ab58>
   2bca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bca4:	cmp	r3, #0
   2bca8:	beq	2bcb0 <__assert_fail@plt+0x1ab58>
   2bcac:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2bcb0:	ldr	r3, [fp, #-8]
   2bcb4:	mov	r0, r3
   2bcb8:	sub	sp, fp, #4
   2bcbc:	pop	{fp, pc}
   2bcc0:	push	{fp, lr}
   2bcc4:	add	fp, sp, #4
   2bcc8:	sub	sp, sp, #16
   2bccc:	str	r0, [fp, #-8]
   2bcd0:	str	r1, [fp, #-12]
   2bcd4:	str	r2, [fp, #-16]
   2bcd8:	ldr	r2, [fp, #-16]
   2bcdc:	ldr	r1, [fp, #-12]
   2bce0:	ldr	r0, [fp, #-8]
   2bce4:	bl	2ceb8 <__assert_fail@plt+0x1bd60>
   2bce8:	mov	r3, r0
   2bcec:	mov	r0, r3
   2bcf0:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2bcf4:	mov	r3, r0
   2bcf8:	mov	r0, r3
   2bcfc:	sub	sp, fp, #4
   2bd00:	pop	{fp, pc}
   2bd04:	push	{fp, lr}
   2bd08:	add	fp, sp, #4
   2bd0c:	sub	sp, sp, #8
   2bd10:	str	r0, [fp, #-8]
   2bd14:	str	r1, [fp, #-12]
   2bd18:	ldr	r2, [fp, #-12]
   2bd1c:	ldr	r1, [fp, #-8]
   2bd20:	mov	r0, #0
   2bd24:	bl	2bc50 <__assert_fail@plt+0x1aaf8>
   2bd28:	mov	r3, r0
   2bd2c:	mov	r0, r3
   2bd30:	sub	sp, fp, #4
   2bd34:	pop	{fp, pc}
   2bd38:	push	{fp, lr}
   2bd3c:	add	fp, sp, #4
   2bd40:	sub	sp, sp, #8
   2bd44:	str	r0, [fp, #-8]
   2bd48:	str	r1, [fp, #-12]
   2bd4c:	ldr	r2, [fp, #-12]
   2bd50:	ldr	r1, [fp, #-8]
   2bd54:	mov	r0, #0
   2bd58:	bl	2bcc0 <__assert_fail@plt+0x1ab68>
   2bd5c:	mov	r3, r0
   2bd60:	mov	r0, r3
   2bd64:	sub	sp, fp, #4
   2bd68:	pop	{fp, pc}
   2bd6c:	push	{fp, lr}
   2bd70:	add	fp, sp, #4
   2bd74:	sub	sp, sp, #8
   2bd78:	str	r0, [fp, #-8]
   2bd7c:	str	r1, [fp, #-12]
   2bd80:	mov	r2, #1
   2bd84:	ldr	r1, [fp, #-12]
   2bd88:	ldr	r0, [fp, #-8]
   2bd8c:	bl	2bda0 <__assert_fail@plt+0x1ac48>
   2bd90:	mov	r3, r0
   2bd94:	mov	r0, r3
   2bd98:	sub	sp, fp, #4
   2bd9c:	pop	{fp, pc}
   2bda0:	push	{fp, lr}
   2bda4:	add	fp, sp, #4
   2bda8:	sub	sp, sp, #24
   2bdac:	str	r0, [fp, #-16]
   2bdb0:	str	r1, [fp, #-20]	; 0xffffffec
   2bdb4:	str	r2, [fp, #-24]	; 0xffffffe8
   2bdb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdbc:	ldr	r3, [r3]
   2bdc0:	str	r3, [fp, #-8]
   2bdc4:	ldr	r3, [fp, #-16]
   2bdc8:	cmp	r3, #0
   2bdcc:	bne	2be18 <__assert_fail@plt+0x1acc0>
   2bdd0:	ldr	r3, [fp, #-8]
   2bdd4:	cmp	r3, #0
   2bdd8:	bne	2be7c <__assert_fail@plt+0x1ad24>
   2bddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bde0:	mov	r0, #64	; 0x40
   2bde4:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   2bde8:	mov	r3, r0
   2bdec:	str	r3, [fp, #-8]
   2bdf0:	ldr	r3, [fp, #-8]
   2bdf4:	cmp	r3, #0
   2bdf8:	moveq	r3, #1
   2bdfc:	movne	r3, #0
   2be00:	uxtb	r3, r3
   2be04:	mov	r2, r3
   2be08:	ldr	r3, [fp, #-8]
   2be0c:	add	r3, r2, r3
   2be10:	str	r3, [fp, #-8]
   2be14:	b	2be7c <__assert_fail@plt+0x1ad24>
   2be18:	ldr	r3, [fp, #-8]
   2be1c:	lsr	r3, r3, #1
   2be20:	add	r3, r3, #1
   2be24:	mvn	r2, r3
   2be28:	ldr	r3, [fp, #-8]
   2be2c:	cmp	r2, r3
   2be30:	bcs	2be54 <__assert_fail@plt+0x1acfc>
   2be34:	ldr	r3, [fp, #-8]
   2be38:	lsr	r2, r3, #1
   2be3c:	ldr	r3, [fp, #-8]
   2be40:	add	r3, r2, r3
   2be44:	add	r3, r3, #1
   2be48:	str	r3, [fp, #-8]
   2be4c:	mov	r3, #1
   2be50:	b	2be70 <__assert_fail@plt+0x1ad18>
   2be54:	ldr	r3, [fp, #-8]
   2be58:	lsr	r2, r3, #1
   2be5c:	ldr	r3, [fp, #-8]
   2be60:	add	r3, r2, r3
   2be64:	add	r3, r3, #1
   2be68:	str	r3, [fp, #-8]
   2be6c:	mov	r3, #0
   2be70:	cmp	r3, #0
   2be74:	beq	2be7c <__assert_fail@plt+0x1ad24>
   2be78:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2be7c:	ldr	r3, [fp, #-8]
   2be80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2be84:	mov	r1, r3
   2be88:	ldr	r0, [fp, #-16]
   2be8c:	bl	2bc50 <__assert_fail@plt+0x1aaf8>
   2be90:	str	r0, [fp, #-16]
   2be94:	ldr	r2, [fp, #-8]
   2be98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be9c:	str	r2, [r3]
   2bea0:	ldr	r3, [fp, #-16]
   2bea4:	mov	r0, r3
   2bea8:	sub	sp, fp, #4
   2beac:	pop	{fp, pc}
   2beb0:	push	{fp, lr}
   2beb4:	add	fp, sp, #4
   2beb8:	sub	sp, sp, #32
   2bebc:	str	r0, [fp, #-24]	; 0xffffffe8
   2bec0:	str	r1, [fp, #-28]	; 0xffffffe4
   2bec4:	str	r2, [fp, #-32]	; 0xffffffe0
   2bec8:	str	r3, [fp, #-36]	; 0xffffffdc
   2becc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bed0:	ldr	r3, [r3]
   2bed4:	str	r3, [fp, #-8]
   2bed8:	ldr	r3, [fp, #-8]
   2bedc:	asr	r3, r3, #1
   2bee0:	cmp	r3, #0
   2bee4:	bge	2bf0c <__assert_fail@plt+0x1adb4>
   2bee8:	ldr	r3, [fp, #-8]
   2beec:	asr	r3, r3, #1
   2bef0:	rsb	r2, r3, #-2147483648	; 0x80000000
   2bef4:	ldr	r3, [fp, #-8]
   2bef8:	cmp	r2, r3
   2befc:	movgt	r3, #1
   2bf00:	movle	r3, #0
   2bf04:	uxtb	r3, r3
   2bf08:	b	2bf60 <__assert_fail@plt+0x1ae08>
   2bf0c:	ldr	r3, [fp, #-8]
   2bf10:	cmp	r3, #0
   2bf14:	bge	2bf3c <__assert_fail@plt+0x1ade4>
   2bf18:	ldr	r3, [fp, #-8]
   2bf1c:	asr	r2, r3, #1
   2bf20:	ldr	r3, [fp, #-8]
   2bf24:	rsb	r3, r3, #-2147483648	; 0x80000000
   2bf28:	cmp	r2, r3
   2bf2c:	movlt	r3, #1
   2bf30:	movge	r3, #0
   2bf34:	uxtb	r3, r3
   2bf38:	b	2bf60 <__assert_fail@plt+0x1ae08>
   2bf3c:	ldr	r3, [fp, #-8]
   2bf40:	asr	r2, r3, #1
   2bf44:	mvn	r3, #-2147483648	; 0x80000000
   2bf48:	sub	r3, r3, r2
   2bf4c:	ldr	r2, [fp, #-8]
   2bf50:	cmp	r3, r2
   2bf54:	movlt	r3, #1
   2bf58:	movge	r3, #0
   2bf5c:	uxtb	r3, r3
   2bf60:	cmp	r3, #0
   2bf64:	beq	2bf88 <__assert_fail@plt+0x1ae30>
   2bf68:	ldr	r3, [fp, #-8]
   2bf6c:	asr	r3, r3, #1
   2bf70:	mov	r2, r3
   2bf74:	ldr	r3, [fp, #-8]
   2bf78:	add	r3, r2, r3
   2bf7c:	str	r3, [fp, #-16]
   2bf80:	mov	r3, #1
   2bf84:	b	2bfa4 <__assert_fail@plt+0x1ae4c>
   2bf88:	ldr	r3, [fp, #-8]
   2bf8c:	asr	r3, r3, #1
   2bf90:	mov	r2, r3
   2bf94:	ldr	r3, [fp, #-8]
   2bf98:	add	r3, r2, r3
   2bf9c:	str	r3, [fp, #-16]
   2bfa0:	mov	r3, #0
   2bfa4:	cmp	r3, #0
   2bfa8:	beq	2bfb4 <__assert_fail@plt+0x1ae5c>
   2bfac:	mvn	r3, #-2147483648	; 0x80000000
   2bfb0:	str	r3, [fp, #-16]
   2bfb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bfb8:	cmp	r3, #0
   2bfbc:	blt	2bfd8 <__assert_fail@plt+0x1ae80>
   2bfc0:	ldr	r3, [fp, #-16]
   2bfc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2bfc8:	cmp	r2, r3
   2bfcc:	bge	2bfd8 <__assert_fail@plt+0x1ae80>
   2bfd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2bfd4:	str	r3, [fp, #-16]
   2bfd8:	ldr	r3, [fp, #4]
   2bfdc:	cmp	r3, #0
   2bfe0:	bge	2c070 <__assert_fail@plt+0x1af18>
   2bfe4:	ldr	r3, [fp, #-16]
   2bfe8:	cmp	r3, #0
   2bfec:	bge	2c01c <__assert_fail@plt+0x1aec4>
   2bff0:	ldr	r1, [fp, #4]
   2bff4:	mvn	r0, #-2147483648	; 0x80000000
   2bff8:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2bffc:	mov	r3, r0
   2c000:	mov	r2, r3
   2c004:	ldr	r3, [fp, #-16]
   2c008:	cmp	r2, r3
   2c00c:	movgt	r3, #1
   2c010:	movle	r3, #0
   2c014:	uxtb	r3, r3
   2c018:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c01c:	ldr	r3, [fp, #4]
   2c020:	cmn	r3, #1
   2c024:	bne	2c044 <__assert_fail@plt+0x1aeec>
   2c028:	ldr	r3, [fp, #-16]
   2c02c:	add	r3, r3, #-2147483648	; 0x80000000
   2c030:	cmp	r3, #0
   2c034:	movgt	r3, #1
   2c038:	movle	r3, #0
   2c03c:	uxtb	r3, r3
   2c040:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c044:	ldr	r1, [fp, #4]
   2c048:	mov	r0, #-2147483648	; 0x80000000
   2c04c:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c050:	mov	r3, r0
   2c054:	mov	r2, r3
   2c058:	ldr	r3, [fp, #-16]
   2c05c:	cmp	r2, r3
   2c060:	movlt	r3, #1
   2c064:	movge	r3, #0
   2c068:	uxtb	r3, r3
   2c06c:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c070:	ldr	r3, [fp, #4]
   2c074:	cmp	r3, #0
   2c078:	beq	2c10c <__assert_fail@plt+0x1afb4>
   2c07c:	ldr	r3, [fp, #-16]
   2c080:	cmp	r3, #0
   2c084:	bge	2c0e0 <__assert_fail@plt+0x1af88>
   2c088:	ldr	r3, [fp, #-16]
   2c08c:	cmn	r3, #1
   2c090:	bne	2c0b0 <__assert_fail@plt+0x1af58>
   2c094:	ldr	r3, [fp, #4]
   2c098:	add	r3, r3, #-2147483648	; 0x80000000
   2c09c:	cmp	r3, #0
   2c0a0:	movgt	r3, #1
   2c0a4:	movle	r3, #0
   2c0a8:	uxtb	r3, r3
   2c0ac:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c0b0:	ldr	r3, [fp, #-16]
   2c0b4:	mov	r1, r3
   2c0b8:	mov	r0, #-2147483648	; 0x80000000
   2c0bc:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c0c0:	mov	r3, r0
   2c0c4:	mov	r2, r3
   2c0c8:	ldr	r3, [fp, #4]
   2c0cc:	cmp	r2, r3
   2c0d0:	movlt	r3, #1
   2c0d4:	movge	r3, #0
   2c0d8:	uxtb	r3, r3
   2c0dc:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c0e0:	ldr	r1, [fp, #4]
   2c0e4:	mvn	r0, #-2147483648	; 0x80000000
   2c0e8:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c0ec:	mov	r3, r0
   2c0f0:	mov	r2, r3
   2c0f4:	ldr	r3, [fp, #-16]
   2c0f8:	cmp	r2, r3
   2c0fc:	movlt	r3, #1
   2c100:	movge	r3, #0
   2c104:	uxtb	r3, r3
   2c108:	b	2c110 <__assert_fail@plt+0x1afb8>
   2c10c:	mov	r3, #0
   2c110:	cmp	r3, #0
   2c114:	beq	2c134 <__assert_fail@plt+0x1afdc>
   2c118:	ldr	r3, [fp, #-16]
   2c11c:	mov	r2, r3
   2c120:	ldr	r3, [fp, #4]
   2c124:	mul	r3, r3, r2
   2c128:	str	r3, [fp, #-20]	; 0xffffffec
   2c12c:	mov	r3, #1
   2c130:	b	2c14c <__assert_fail@plt+0x1aff4>
   2c134:	ldr	r3, [fp, #-16]
   2c138:	mov	r2, r3
   2c13c:	ldr	r3, [fp, #4]
   2c140:	mul	r3, r3, r2
   2c144:	str	r3, [fp, #-20]	; 0xffffffec
   2c148:	mov	r3, #0
   2c14c:	cmp	r3, #0
   2c150:	beq	2c15c <__assert_fail@plt+0x1b004>
   2c154:	mvn	r3, #-2147483648	; 0x80000000
   2c158:	b	2c174 <__assert_fail@plt+0x1b01c>
   2c15c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c160:	cmp	r3, #63	; 0x3f
   2c164:	bgt	2c170 <__assert_fail@plt+0x1b018>
   2c168:	mov	r3, #64	; 0x40
   2c16c:	b	2c174 <__assert_fail@plt+0x1b01c>
   2c170:	mov	r3, #0
   2c174:	str	r3, [fp, #-12]
   2c178:	ldr	r3, [fp, #-12]
   2c17c:	cmp	r3, #0
   2c180:	beq	2c1bc <__assert_fail@plt+0x1b064>
   2c184:	ldr	r1, [fp, #4]
   2c188:	ldr	r0, [fp, #-12]
   2c18c:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c190:	mov	r3, r0
   2c194:	str	r3, [fp, #-16]
   2c198:	ldr	r3, [fp, #-12]
   2c19c:	ldr	r1, [fp, #4]
   2c1a0:	mov	r0, r3
   2c1a4:	bl	3015c <__assert_fail@plt+0x1f004>
   2c1a8:	mov	r3, r1
   2c1ac:	mov	r2, r3
   2c1b0:	ldr	r3, [fp, #-12]
   2c1b4:	sub	r3, r3, r2
   2c1b8:	str	r3, [fp, #-20]	; 0xffffffec
   2c1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c1c0:	cmp	r3, #0
   2c1c4:	bne	2c1d4 <__assert_fail@plt+0x1b07c>
   2c1c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c1cc:	mov	r2, #0
   2c1d0:	str	r2, [r3]
   2c1d4:	ldr	r2, [fp, #-16]
   2c1d8:	ldr	r3, [fp, #-8]
   2c1dc:	sub	r2, r2, r3
   2c1e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c1e4:	cmp	r2, r3
   2c1e8:	bge	2c420 <__assert_fail@plt+0x1b2c8>
   2c1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c1f0:	cmp	r3, #0
   2c1f4:	bge	2c218 <__assert_fail@plt+0x1b0c0>
   2c1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c1fc:	rsb	r2, r3, #-2147483648	; 0x80000000
   2c200:	ldr	r3, [fp, #-8]
   2c204:	cmp	r2, r3
   2c208:	movgt	r3, #1
   2c20c:	movle	r3, #0
   2c210:	uxtb	r3, r3
   2c214:	b	2c264 <__assert_fail@plt+0x1b10c>
   2c218:	ldr	r3, [fp, #-8]
   2c21c:	cmp	r3, #0
   2c220:	bge	2c244 <__assert_fail@plt+0x1b0ec>
   2c224:	ldr	r3, [fp, #-8]
   2c228:	rsb	r2, r3, #-2147483648	; 0x80000000
   2c22c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c230:	cmp	r2, r3
   2c234:	movgt	r3, #1
   2c238:	movle	r3, #0
   2c23c:	uxtb	r3, r3
   2c240:	b	2c264 <__assert_fail@plt+0x1b10c>
   2c244:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c248:	mvn	r3, #-2147483648	; 0x80000000
   2c24c:	sub	r3, r3, r2
   2c250:	ldr	r2, [fp, #-8]
   2c254:	cmp	r3, r2
   2c258:	movlt	r3, #1
   2c25c:	movge	r3, #0
   2c260:	uxtb	r3, r3
   2c264:	cmp	r3, #0
   2c268:	beq	2c280 <__assert_fail@plt+0x1b128>
   2c26c:	ldr	r2, [fp, #-8]
   2c270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c274:	add	r3, r2, r3
   2c278:	str	r3, [fp, #-16]
   2c27c:	b	2c41c <__assert_fail@plt+0x1b2c4>
   2c280:	ldr	r2, [fp, #-8]
   2c284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c288:	add	r3, r2, r3
   2c28c:	str	r3, [fp, #-16]
   2c290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c294:	cmp	r3, #0
   2c298:	blt	2c2ac <__assert_fail@plt+0x1b154>
   2c29c:	ldr	r3, [fp, #-16]
   2c2a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c2a4:	cmp	r2, r3
   2c2a8:	blt	2c41c <__assert_fail@plt+0x1b2c4>
   2c2ac:	ldr	r3, [fp, #4]
   2c2b0:	cmp	r3, #0
   2c2b4:	bge	2c344 <__assert_fail@plt+0x1b1ec>
   2c2b8:	ldr	r3, [fp, #-16]
   2c2bc:	cmp	r3, #0
   2c2c0:	bge	2c2f0 <__assert_fail@plt+0x1b198>
   2c2c4:	ldr	r1, [fp, #4]
   2c2c8:	mvn	r0, #-2147483648	; 0x80000000
   2c2cc:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c2d0:	mov	r3, r0
   2c2d4:	mov	r2, r3
   2c2d8:	ldr	r3, [fp, #-16]
   2c2dc:	cmp	r2, r3
   2c2e0:	movgt	r3, #1
   2c2e4:	movle	r3, #0
   2c2e8:	uxtb	r3, r3
   2c2ec:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c2f0:	ldr	r3, [fp, #4]
   2c2f4:	cmn	r3, #1
   2c2f8:	bne	2c318 <__assert_fail@plt+0x1b1c0>
   2c2fc:	ldr	r3, [fp, #-16]
   2c300:	add	r3, r3, #-2147483648	; 0x80000000
   2c304:	cmp	r3, #0
   2c308:	movgt	r3, #1
   2c30c:	movle	r3, #0
   2c310:	uxtb	r3, r3
   2c314:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c318:	ldr	r1, [fp, #4]
   2c31c:	mov	r0, #-2147483648	; 0x80000000
   2c320:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c324:	mov	r3, r0
   2c328:	mov	r2, r3
   2c32c:	ldr	r3, [fp, #-16]
   2c330:	cmp	r2, r3
   2c334:	movlt	r3, #1
   2c338:	movge	r3, #0
   2c33c:	uxtb	r3, r3
   2c340:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c344:	ldr	r3, [fp, #4]
   2c348:	cmp	r3, #0
   2c34c:	beq	2c3e0 <__assert_fail@plt+0x1b288>
   2c350:	ldr	r3, [fp, #-16]
   2c354:	cmp	r3, #0
   2c358:	bge	2c3b4 <__assert_fail@plt+0x1b25c>
   2c35c:	ldr	r3, [fp, #-16]
   2c360:	cmn	r3, #1
   2c364:	bne	2c384 <__assert_fail@plt+0x1b22c>
   2c368:	ldr	r3, [fp, #4]
   2c36c:	add	r3, r3, #-2147483648	; 0x80000000
   2c370:	cmp	r3, #0
   2c374:	movgt	r3, #1
   2c378:	movle	r3, #0
   2c37c:	uxtb	r3, r3
   2c380:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c384:	ldr	r3, [fp, #-16]
   2c388:	mov	r1, r3
   2c38c:	mov	r0, #-2147483648	; 0x80000000
   2c390:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c394:	mov	r3, r0
   2c398:	mov	r2, r3
   2c39c:	ldr	r3, [fp, #4]
   2c3a0:	cmp	r2, r3
   2c3a4:	movlt	r3, #1
   2c3a8:	movge	r3, #0
   2c3ac:	uxtb	r3, r3
   2c3b0:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c3b4:	ldr	r1, [fp, #4]
   2c3b8:	mvn	r0, #-2147483648	; 0x80000000
   2c3bc:	bl	2ff3c <__assert_fail@plt+0x1ede4>
   2c3c0:	mov	r3, r0
   2c3c4:	mov	r2, r3
   2c3c8:	ldr	r3, [fp, #-16]
   2c3cc:	cmp	r2, r3
   2c3d0:	movlt	r3, #1
   2c3d4:	movge	r3, #0
   2c3d8:	uxtb	r3, r3
   2c3dc:	b	2c3e4 <__assert_fail@plt+0x1b28c>
   2c3e0:	mov	r3, #0
   2c3e4:	cmp	r3, #0
   2c3e8:	beq	2c404 <__assert_fail@plt+0x1b2ac>
   2c3ec:	ldr	r3, [fp, #-16]
   2c3f0:	mov	r2, r3
   2c3f4:	ldr	r3, [fp, #4]
   2c3f8:	mul	r3, r3, r2
   2c3fc:	str	r3, [fp, #-20]	; 0xffffffec
   2c400:	b	2c41c <__assert_fail@plt+0x1b2c4>
   2c404:	ldr	r3, [fp, #-16]
   2c408:	mov	r2, r3
   2c40c:	ldr	r3, [fp, #4]
   2c410:	mul	r3, r3, r2
   2c414:	str	r3, [fp, #-20]	; 0xffffffec
   2c418:	b	2c420 <__assert_fail@plt+0x1b2c8>
   2c41c:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2c420:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c424:	mov	r1, r3
   2c428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c42c:	bl	2bbb8 <__assert_fail@plt+0x1aa60>
   2c430:	str	r0, [fp, #-24]	; 0xffffffe8
   2c434:	ldr	r2, [fp, #-16]
   2c438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c43c:	str	r2, [r3]
   2c440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c444:	mov	r0, r3
   2c448:	sub	sp, fp, #4
   2c44c:	pop	{fp, pc}
   2c450:	push	{fp, lr}
   2c454:	add	fp, sp, #4
   2c458:	sub	sp, sp, #8
   2c45c:	str	r0, [fp, #-8]
   2c460:	mov	r1, #1
   2c464:	ldr	r0, [fp, #-8]
   2c468:	bl	2c4a8 <__assert_fail@plt+0x1b350>
   2c46c:	mov	r3, r0
   2c470:	mov	r0, r3
   2c474:	sub	sp, fp, #4
   2c478:	pop	{fp, pc}
   2c47c:	push	{fp, lr}
   2c480:	add	fp, sp, #4
   2c484:	sub	sp, sp, #8
   2c488:	str	r0, [fp, #-8]
   2c48c:	mov	r1, #1
   2c490:	ldr	r0, [fp, #-8]
   2c494:	bl	2c4e4 <__assert_fail@plt+0x1b38c>
   2c498:	mov	r3, r0
   2c49c:	mov	r0, r3
   2c4a0:	sub	sp, fp, #4
   2c4a4:	pop	{fp, pc}
   2c4a8:	push	{fp, lr}
   2c4ac:	add	fp, sp, #4
   2c4b0:	sub	sp, sp, #8
   2c4b4:	str	r0, [fp, #-8]
   2c4b8:	str	r1, [fp, #-12]
   2c4bc:	ldr	r1, [fp, #-12]
   2c4c0:	ldr	r0, [fp, #-8]
   2c4c4:	bl	2c7b0 <__assert_fail@plt+0x1b658>
   2c4c8:	mov	r3, r0
   2c4cc:	mov	r0, r3
   2c4d0:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2c4d4:	mov	r3, r0
   2c4d8:	mov	r0, r3
   2c4dc:	sub	sp, fp, #4
   2c4e0:	pop	{fp, pc}
   2c4e4:	push	{fp, lr}
   2c4e8:	add	fp, sp, #4
   2c4ec:	sub	sp, sp, #8
   2c4f0:	str	r0, [fp, #-8]
   2c4f4:	str	r1, [fp, #-12]
   2c4f8:	ldr	r1, [fp, #-12]
   2c4fc:	ldr	r0, [fp, #-8]
   2c500:	bl	2ce80 <__assert_fail@plt+0x1bd28>
   2c504:	mov	r3, r0
   2c508:	mov	r0, r3
   2c50c:	bl	2baf8 <__assert_fail@plt+0x1a9a0>
   2c510:	mov	r3, r0
   2c514:	mov	r0, r3
   2c518:	sub	sp, fp, #4
   2c51c:	pop	{fp, pc}
   2c520:	push	{fp, lr}
   2c524:	add	fp, sp, #4
   2c528:	sub	sp, sp, #8
   2c52c:	str	r0, [fp, #-8]
   2c530:	str	r1, [fp, #-12]
   2c534:	ldr	r0, [fp, #-12]
   2c538:	bl	2bb28 <__assert_fail@plt+0x1a9d0>
   2c53c:	mov	r3, r0
   2c540:	ldr	r2, [fp, #-12]
   2c544:	ldr	r1, [fp, #-8]
   2c548:	mov	r0, r3
   2c54c:	bl	10f00 <memcpy@plt>
   2c550:	mov	r3, r0
   2c554:	mov	r0, r3
   2c558:	sub	sp, fp, #4
   2c55c:	pop	{fp, pc}
   2c560:	push	{fp, lr}
   2c564:	add	fp, sp, #4
   2c568:	sub	sp, sp, #8
   2c56c:	str	r0, [fp, #-8]
   2c570:	str	r1, [fp, #-12]
   2c574:	ldr	r0, [fp, #-12]
   2c578:	bl	2bb5c <__assert_fail@plt+0x1aa04>
   2c57c:	mov	r3, r0
   2c580:	mov	r0, r3
   2c584:	ldr	r3, [fp, #-12]
   2c588:	mov	r2, r3
   2c58c:	ldr	r1, [fp, #-8]
   2c590:	bl	10f00 <memcpy@plt>
   2c594:	mov	r3, r0
   2c598:	mov	r0, r3
   2c59c:	sub	sp, fp, #4
   2c5a0:	pop	{fp, pc}
   2c5a4:	push	{fp, lr}
   2c5a8:	add	fp, sp, #4
   2c5ac:	sub	sp, sp, #16
   2c5b0:	str	r0, [fp, #-16]
   2c5b4:	str	r1, [fp, #-20]	; 0xffffffec
   2c5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5bc:	add	r3, r3, #1
   2c5c0:	mov	r0, r3
   2c5c4:	bl	2bb5c <__assert_fail@plt+0x1aa04>
   2c5c8:	mov	r3, r0
   2c5cc:	str	r3, [fp, #-8]
   2c5d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5d4:	ldr	r2, [fp, #-8]
   2c5d8:	add	r3, r2, r3
   2c5dc:	mov	r2, #0
   2c5e0:	strb	r2, [r3]
   2c5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c5e8:	mov	r2, r3
   2c5ec:	ldr	r1, [fp, #-16]
   2c5f0:	ldr	r0, [fp, #-8]
   2c5f4:	bl	10f00 <memcpy@plt>
   2c5f8:	mov	r3, r0
   2c5fc:	mov	r0, r3
   2c600:	sub	sp, fp, #4
   2c604:	pop	{fp, pc}
   2c608:	push	{fp, lr}
   2c60c:	add	fp, sp, #4
   2c610:	sub	sp, sp, #8
   2c614:	str	r0, [fp, #-8]
   2c618:	ldr	r0, [fp, #-8]
   2c61c:	bl	11050 <strlen@plt>
   2c620:	mov	r3, r0
   2c624:	add	r3, r3, #1
   2c628:	mov	r1, r3
   2c62c:	ldr	r0, [fp, #-8]
   2c630:	bl	2c520 <__assert_fail@plt+0x1b3c8>
   2c634:	mov	r3, r0
   2c638:	mov	r0, r3
   2c63c:	sub	sp, fp, #4
   2c640:	pop	{fp, pc}
   2c644:	push	{r4, r5, fp, lr}
   2c648:	add	fp, sp, #12
   2c64c:	ldr	r3, [pc, #32]	; 2c674 <__assert_fail@plt+0x1b51c>
   2c650:	ldr	r4, [r3]
   2c654:	ldr	r0, [pc, #28]	; 2c678 <__assert_fail@plt+0x1b520>
   2c658:	bl	11044 <gettext@plt>
   2c65c:	mov	r3, r0
   2c660:	ldr	r2, [pc, #20]	; 2c67c <__assert_fail@plt+0x1b524>
   2c664:	mov	r1, #0
   2c668:	mov	r0, r4
   2c66c:	bl	10fcc <error@plt>
   2c670:	bl	11140 <abort@plt>
   2c674:	andeq	r5, r4, r0, lsr #2
   2c678:	andeq	r4, r3, r0, ror #14
   2c67c:	andeq	r4, r3, r4, ror r7
   2c680:	push	{fp, lr}
   2c684:	add	fp, sp, #4
   2c688:	sub	sp, sp, #32
   2c68c:	str	r0, [fp, #-16]
   2c690:	str	r1, [fp, #-20]	; 0xffffffec
   2c694:	str	r2, [fp, #-24]	; 0xffffffe8
   2c698:	str	r3, [fp, #-28]	; 0xffffffe4
   2c69c:	ldr	r3, [fp, #4]
   2c6a0:	str	r3, [sp]
   2c6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c6a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c6ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6b0:	ldr	r0, [fp, #-16]
   2c6b4:	bl	2e92c <__assert_fail@plt+0x1d7d4>
   2c6b8:	str	r0, [fp, #-8]
   2c6bc:	ldr	r3, [fp, #-8]
   2c6c0:	cmp	r3, #0
   2c6c4:	bge	2c6e0 <__assert_fail@plt+0x1b588>
   2c6c8:	bl	11074 <__errno_location@plt>
   2c6cc:	mov	r3, r0
   2c6d0:	ldr	r3, [r3]
   2c6d4:	cmp	r3, #12
   2c6d8:	bne	2c6e0 <__assert_fail@plt+0x1b588>
   2c6dc:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2c6e0:	ldr	r3, [fp, #-8]
   2c6e4:	mov	r0, r3
   2c6e8:	sub	sp, fp, #4
   2c6ec:	pop	{fp, pc}
   2c6f0:	push	{fp, lr}
   2c6f4:	add	fp, sp, #4
   2c6f8:	sub	sp, sp, #16
   2c6fc:	str	r0, [fp, #-16]
   2c700:	str	r1, [fp, #-20]	; 0xffffffec
   2c704:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c708:	ldr	r0, [fp, #-16]
   2c70c:	bl	2ed14 <__assert_fail@plt+0x1dbbc>
   2c710:	mov	r3, r0
   2c714:	str	r3, [fp, #-8]
   2c718:	ldr	r3, [fp, #-8]
   2c71c:	cmp	r3, #0
   2c720:	bne	2c73c <__assert_fail@plt+0x1b5e4>
   2c724:	bl	11074 <__errno_location@plt>
   2c728:	mov	r3, r0
   2c72c:	ldr	r3, [r3]
   2c730:	cmp	r3, #12
   2c734:	bne	2c73c <__assert_fail@plt+0x1b5e4>
   2c738:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2c73c:	ldr	r3, [fp, #-8]
   2c740:	mov	r0, r3
   2c744:	sub	sp, fp, #4
   2c748:	pop	{fp, pc}
   2c74c:	push	{fp, lr}
   2c750:	add	fp, sp, #4
   2c754:	sub	sp, sp, #24
   2c758:	str	r0, [fp, #-16]
   2c75c:	str	r1, [fp, #-20]	; 0xffffffec
   2c760:	str	r2, [fp, #-24]	; 0xffffffe8
   2c764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c768:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c76c:	ldr	r0, [fp, #-16]
   2c770:	bl	2f06c <__assert_fail@plt+0x1df14>
   2c774:	mov	r3, r0
   2c778:	str	r3, [fp, #-8]
   2c77c:	ldr	r3, [fp, #-8]
   2c780:	cmp	r3, #0
   2c784:	bne	2c7a0 <__assert_fail@plt+0x1b648>
   2c788:	bl	11074 <__errno_location@plt>
   2c78c:	mov	r3, r0
   2c790:	ldr	r3, [r3]
   2c794:	cmp	r3, #12
   2c798:	bne	2c7a0 <__assert_fail@plt+0x1b648>
   2c79c:	bl	2c644 <__assert_fail@plt+0x1b4ec>
   2c7a0:	ldr	r3, [fp, #-8]
   2c7a4:	mov	r0, r3
   2c7a8:	sub	sp, fp, #4
   2c7ac:	pop	{fp, pc}
   2c7b0:	push	{r4, r5, fp, lr}
   2c7b4:	add	fp, sp, #12
   2c7b8:	sub	sp, sp, #16
   2c7bc:	str	r0, [fp, #-24]	; 0xffffffe8
   2c7c0:	str	r1, [fp, #-28]	; 0xffffffe4
   2c7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c7c8:	cmp	r3, #0
   2c7cc:	beq	2c7dc <__assert_fail@plt+0x1b684>
   2c7d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c7d4:	cmp	r3, #0
   2c7d8:	bne	2c7ec <__assert_fail@plt+0x1b694>
   2c7dc:	mov	r3, #1
   2c7e0:	str	r3, [fp, #-28]	; 0xffffffe4
   2c7e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c7e8:	str	r3, [fp, #-24]	; 0xffffffe8
   2c7ec:	mov	r1, #0
   2c7f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c7f8:	umull	r2, r3, r2, r3
   2c7fc:	mov	r4, r3
   2c800:	mov	r5, #0
   2c804:	cmp	r4, #0
   2c808:	beq	2c810 <__assert_fail@plt+0x1b6b8>
   2c80c:	mov	r1, #1
   2c810:	cmp	r2, #0
   2c814:	bge	2c81c <__assert_fail@plt+0x1b6c4>
   2c818:	mov	r1, #1
   2c81c:	mov	r3, r2
   2c820:	str	r3, [fp, #-20]	; 0xffffffec
   2c824:	mov	r3, r1
   2c828:	and	r3, r3, #1
   2c82c:	uxtb	r3, r3
   2c830:	cmp	r3, #0
   2c834:	beq	2c850 <__assert_fail@plt+0x1b6f8>
   2c838:	bl	11074 <__errno_location@plt>
   2c83c:	mov	r2, r0
   2c840:	mov	r3, #12
   2c844:	str	r3, [r2]
   2c848:	mov	r3, #0
   2c84c:	b	2c868 <__assert_fail@plt+0x1b710>
   2c850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c858:	bl	10e70 <calloc@plt>
   2c85c:	mov	r3, r0
   2c860:	str	r3, [fp, #-16]
   2c864:	ldr	r3, [fp, #-16]
   2c868:	mov	r0, r3
   2c86c:	sub	sp, fp, #12
   2c870:	pop	{r4, r5, fp, pc}
   2c874:	push	{r4, r5, fp, lr}
   2c878:	add	fp, sp, #12
   2c87c:	sub	sp, sp, #16
   2c880:	str	r0, [fp, #-24]	; 0xffffffe8
   2c884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c888:	cmp	r3, #0
   2c88c:	bne	2c898 <__assert_fail@plt+0x1b740>
   2c890:	mov	r3, #1
   2c894:	str	r3, [fp, #-24]	; 0xffffffe8
   2c898:	mov	r1, #0
   2c89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8a0:	mov	r2, r3
   2c8a4:	mov	r3, #0
   2c8a8:	mov	r4, r3
   2c8ac:	mov	r5, #0
   2c8b0:	cmp	r4, #0
   2c8b4:	beq	2c8bc <__assert_fail@plt+0x1b764>
   2c8b8:	mov	r1, #1
   2c8bc:	cmp	r2, #0
   2c8c0:	bge	2c8c8 <__assert_fail@plt+0x1b770>
   2c8c4:	mov	r1, #1
   2c8c8:	mov	r3, r2
   2c8cc:	str	r3, [fp, #-20]	; 0xffffffec
   2c8d0:	mov	r3, r1
   2c8d4:	and	r3, r3, #1
   2c8d8:	uxtb	r3, r3
   2c8dc:	cmp	r3, #0
   2c8e0:	beq	2c8fc <__assert_fail@plt+0x1b7a4>
   2c8e4:	bl	11074 <__errno_location@plt>
   2c8e8:	mov	r2, r0
   2c8ec:	mov	r3, #12
   2c8f0:	str	r3, [r2]
   2c8f4:	mov	r3, #0
   2c8f8:	b	2c910 <__assert_fail@plt+0x1b7b8>
   2c8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c900:	bl	10fd8 <malloc@plt>
   2c904:	mov	r3, r0
   2c908:	str	r3, [fp, #-16]
   2c90c:	ldr	r3, [fp, #-16]
   2c910:	mov	r0, r3
   2c914:	sub	sp, fp, #12
   2c918:	pop	{r4, r5, fp, pc}
   2c91c:	push	{r4, r5, fp, lr}
   2c920:	add	fp, sp, #12
   2c924:	sub	sp, sp, #16
   2c928:	str	r0, [fp, #-24]	; 0xffffffe8
   2c92c:	str	r1, [fp, #-28]	; 0xffffffe4
   2c930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c934:	cmp	r3, #0
   2c938:	bne	2c94c <__assert_fail@plt+0x1b7f4>
   2c93c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c940:	bl	2c874 <__assert_fail@plt+0x1b71c>
   2c944:	mov	r3, r0
   2c948:	b	2c9e0 <__assert_fail@plt+0x1b888>
   2c94c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c950:	cmp	r3, #0
   2c954:	bne	2c968 <__assert_fail@plt+0x1b810>
   2c958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c95c:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2c960:	mov	r3, #0
   2c964:	b	2c9e0 <__assert_fail@plt+0x1b888>
   2c968:	mov	r1, #0
   2c96c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c970:	mov	r2, r3
   2c974:	mov	r3, #0
   2c978:	mov	r4, r3
   2c97c:	mov	r5, #0
   2c980:	cmp	r4, #0
   2c984:	beq	2c98c <__assert_fail@plt+0x1b834>
   2c988:	mov	r1, #1
   2c98c:	cmp	r2, #0
   2c990:	bge	2c998 <__assert_fail@plt+0x1b840>
   2c994:	mov	r1, #1
   2c998:	mov	r3, r2
   2c99c:	str	r3, [fp, #-20]	; 0xffffffec
   2c9a0:	mov	r3, r1
   2c9a4:	and	r3, r3, #1
   2c9a8:	uxtb	r3, r3
   2c9ac:	cmp	r3, #0
   2c9b0:	beq	2c9cc <__assert_fail@plt+0x1b874>
   2c9b4:	bl	11074 <__errno_location@plt>
   2c9b8:	mov	r2, r0
   2c9bc:	mov	r3, #12
   2c9c0:	str	r3, [r2]
   2c9c4:	mov	r3, #0
   2c9c8:	b	2c9e0 <__assert_fail@plt+0x1b888>
   2c9cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c9d4:	bl	10f48 <realloc@plt>
   2c9d8:	str	r0, [fp, #-16]
   2c9dc:	ldr	r3, [fp, #-16]
   2c9e0:	mov	r0, r3
   2c9e4:	sub	sp, fp, #12
   2c9e8:	pop	{r4, r5, fp, pc}
   2c9ec:	push	{r4, r5, fp, lr}
   2c9f0:	add	fp, sp, #12
   2c9f4:	sub	sp, sp, #16
   2c9f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9fc:	str	r1, [fp, #-28]	; 0xffffffe4
   2ca00:	ldr	r5, [fp, #-24]	; 0xffffffe8
   2ca04:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2ca08:	cmp	r5, r4
   2ca0c:	bne	2ca18 <__assert_fail@plt+0x1b8c0>
   2ca10:	mov	r3, #0
   2ca14:	b	2ca78 <__assert_fail@plt+0x1b920>
   2ca18:	ldrb	r3, [r5]
   2ca1c:	mov	r0, r3
   2ca20:	bl	2f650 <__assert_fail@plt+0x1e4f8>
   2ca24:	mov	r3, r0
   2ca28:	strb	r3, [fp, #-13]
   2ca2c:	ldrb	r3, [r4]
   2ca30:	mov	r0, r3
   2ca34:	bl	2f650 <__assert_fail@plt+0x1e4f8>
   2ca38:	mov	r3, r0
   2ca3c:	strb	r3, [fp, #-14]
   2ca40:	ldrb	r3, [fp, #-13]
   2ca44:	cmp	r3, #0
   2ca48:	beq	2ca68 <__assert_fail@plt+0x1b910>
   2ca4c:	add	r5, r5, #1
   2ca50:	add	r4, r4, #1
   2ca54:	ldrb	r2, [fp, #-13]
   2ca58:	ldrb	r3, [fp, #-14]
   2ca5c:	cmp	r2, r3
   2ca60:	beq	2ca18 <__assert_fail@plt+0x1b8c0>
   2ca64:	b	2ca6c <__assert_fail@plt+0x1b914>
   2ca68:	nop			; (mov r0, r0)
   2ca6c:	ldrb	r2, [fp, #-13]
   2ca70:	ldrb	r3, [fp, #-14]
   2ca74:	sub	r3, r2, r3
   2ca78:	mov	r0, r3
   2ca7c:	sub	sp, fp, #12
   2ca80:	pop	{r4, r5, fp, pc}
   2ca84:	push	{fp, lr}
   2ca88:	add	fp, sp, #4
   2ca8c:	sub	sp, sp, #16
   2ca90:	str	r0, [fp, #-16]
   2ca94:	ldr	r0, [fp, #-16]
   2ca98:	bl	10fa8 <__fpending@plt>
   2ca9c:	mov	r3, r0
   2caa0:	cmp	r3, #0
   2caa4:	movne	r3, #1
   2caa8:	moveq	r3, #0
   2caac:	strb	r3, [fp, #-5]
   2cab0:	ldr	r0, [fp, #-16]
   2cab4:	bl	10fb4 <ferror_unlocked@plt>
   2cab8:	mov	r3, r0
   2cabc:	cmp	r3, #0
   2cac0:	movne	r3, #1
   2cac4:	moveq	r3, #0
   2cac8:	strb	r3, [fp, #-6]
   2cacc:	ldr	r0, [fp, #-16]
   2cad0:	bl	2cb5c <__assert_fail@plt+0x1ba04>
   2cad4:	mov	r3, r0
   2cad8:	cmp	r3, #0
   2cadc:	movne	r3, #1
   2cae0:	moveq	r3, #0
   2cae4:	strb	r3, [fp, #-7]
   2cae8:	ldrb	r3, [fp, #-6]
   2caec:	cmp	r3, #0
   2caf0:	bne	2cb20 <__assert_fail@plt+0x1b9c8>
   2caf4:	ldrb	r3, [fp, #-7]
   2caf8:	cmp	r3, #0
   2cafc:	beq	2cb4c <__assert_fail@plt+0x1b9f4>
   2cb00:	ldrb	r3, [fp, #-5]
   2cb04:	cmp	r3, #0
   2cb08:	bne	2cb20 <__assert_fail@plt+0x1b9c8>
   2cb0c:	bl	11074 <__errno_location@plt>
   2cb10:	mov	r3, r0
   2cb14:	ldr	r3, [r3]
   2cb18:	cmp	r3, #9
   2cb1c:	beq	2cb4c <__assert_fail@plt+0x1b9f4>
   2cb20:	ldrb	r3, [fp, #-7]
   2cb24:	eor	r3, r3, #1
   2cb28:	uxtb	r3, r3
   2cb2c:	cmp	r3, #0
   2cb30:	beq	2cb44 <__assert_fail@plt+0x1b9ec>
   2cb34:	bl	11074 <__errno_location@plt>
   2cb38:	mov	r2, r0
   2cb3c:	mov	r3, #0
   2cb40:	str	r3, [r2]
   2cb44:	mvn	r3, #0
   2cb48:	b	2cb50 <__assert_fail@plt+0x1b9f8>
   2cb4c:	mov	r3, #0
   2cb50:	mov	r0, r3
   2cb54:	sub	sp, fp, #4
   2cb58:	pop	{fp, pc}
   2cb5c:	push	{fp, lr}
   2cb60:	add	fp, sp, #4
   2cb64:	sub	sp, sp, #32
   2cb68:	str	r0, [fp, #-24]	; 0xffffffe8
   2cb6c:	mov	r3, #0
   2cb70:	str	r3, [fp, #-8]
   2cb74:	mov	r3, #0
   2cb78:	str	r3, [fp, #-12]
   2cb7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb80:	bl	110b0 <fileno@plt>
   2cb84:	str	r0, [fp, #-16]
   2cb88:	ldr	r3, [fp, #-16]
   2cb8c:	cmp	r3, #0
   2cb90:	bge	2cba4 <__assert_fail@plt+0x1ba4c>
   2cb94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb98:	bl	110c8 <fclose@plt>
   2cb9c:	mov	r3, r0
   2cba0:	b	2cc48 <__assert_fail@plt+0x1baf0>
   2cba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cba8:	bl	10ffc <__freading@plt>
   2cbac:	mov	r3, r0
   2cbb0:	cmp	r3, #0
   2cbb4:	beq	2cbf0 <__assert_fail@plt+0x1ba98>
   2cbb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbbc:	bl	110b0 <fileno@plt>
   2cbc0:	mov	r1, r0
   2cbc4:	mov	r3, #1
   2cbc8:	str	r3, [sp]
   2cbcc:	mov	r2, #0
   2cbd0:	mov	r3, #0
   2cbd4:	mov	r0, r1
   2cbd8:	bl	10f90 <lseek64@plt>
   2cbdc:	mvn	r2, #0
   2cbe0:	mvn	r3, #0
   2cbe4:	cmp	r1, r3
   2cbe8:	cmpeq	r0, r2
   2cbec:	beq	2cc14 <__assert_fail@plt+0x1babc>
   2cbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cbf4:	bl	2cc9c <__assert_fail@plt+0x1bb44>
   2cbf8:	mov	r3, r0
   2cbfc:	cmp	r3, #0
   2cc00:	beq	2cc14 <__assert_fail@plt+0x1babc>
   2cc04:	bl	11074 <__errno_location@plt>
   2cc08:	mov	r3, r0
   2cc0c:	ldr	r3, [r3]
   2cc10:	str	r3, [fp, #-8]
   2cc14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cc18:	bl	110c8 <fclose@plt>
   2cc1c:	str	r0, [fp, #-12]
   2cc20:	ldr	r3, [fp, #-8]
   2cc24:	cmp	r3, #0
   2cc28:	beq	2cc44 <__assert_fail@plt+0x1baec>
   2cc2c:	bl	11074 <__errno_location@plt>
   2cc30:	mov	r2, r0
   2cc34:	ldr	r3, [fp, #-8]
   2cc38:	str	r3, [r2]
   2cc3c:	mvn	r3, #0
   2cc40:	str	r3, [fp, #-12]
   2cc44:	ldr	r3, [fp, #-12]
   2cc48:	mov	r0, r3
   2cc4c:	sub	sp, fp, #4
   2cc50:	pop	{fp, pc}
   2cc54:	push	{fp, lr}
   2cc58:	add	fp, sp, #4
   2cc5c:	sub	sp, sp, #16
   2cc60:	str	r0, [fp, #-8]
   2cc64:	ldr	r3, [fp, #-8]
   2cc68:	ldr	r3, [r3]
   2cc6c:	and	r3, r3, #256	; 0x100
   2cc70:	cmp	r3, #0
   2cc74:	beq	2cc90 <__assert_fail@plt+0x1bb38>
   2cc78:	mov	r3, #1
   2cc7c:	str	r3, [sp]
   2cc80:	mov	r2, #0
   2cc84:	mov	r3, #0
   2cc88:	ldr	r0, [fp, #-8]
   2cc8c:	bl	2ccfc <__assert_fail@plt+0x1bba4>
   2cc90:	nop			; (mov r0, r0)
   2cc94:	sub	sp, fp, #4
   2cc98:	pop	{fp, pc}
   2cc9c:	push	{fp, lr}
   2cca0:	add	fp, sp, #4
   2cca4:	sub	sp, sp, #8
   2cca8:	str	r0, [fp, #-8]
   2ccac:	ldr	r3, [fp, #-8]
   2ccb0:	cmp	r3, #0
   2ccb4:	beq	2cccc <__assert_fail@plt+0x1bb74>
   2ccb8:	ldr	r0, [fp, #-8]
   2ccbc:	bl	10ffc <__freading@plt>
   2ccc0:	mov	r3, r0
   2ccc4:	cmp	r3, #0
   2ccc8:	bne	2ccdc <__assert_fail@plt+0x1bb84>
   2cccc:	ldr	r0, [fp, #-8]
   2ccd0:	bl	10ec4 <fflush@plt>
   2ccd4:	mov	r3, r0
   2ccd8:	b	2ccf0 <__assert_fail@plt+0x1bb98>
   2ccdc:	ldr	r0, [fp, #-8]
   2cce0:	bl	2cc54 <__assert_fail@plt+0x1bafc>
   2cce4:	ldr	r0, [fp, #-8]
   2cce8:	bl	10ec4 <fflush@plt>
   2ccec:	mov	r3, r0
   2ccf0:	mov	r0, r3
   2ccf4:	sub	sp, fp, #4
   2ccf8:	pop	{fp, pc}
   2ccfc:	push	{fp, lr}
   2cd00:	add	fp, sp, #4
   2cd04:	sub	sp, sp, #32
   2cd08:	str	r0, [fp, #-16]
   2cd0c:	strd	r2, [fp, #-28]	; 0xffffffe4
   2cd10:	ldr	r3, [fp, #-16]
   2cd14:	ldr	r2, [r3, #8]
   2cd18:	ldr	r3, [fp, #-16]
   2cd1c:	ldr	r3, [r3, #4]
   2cd20:	cmp	r2, r3
   2cd24:	bne	2cdbc <__assert_fail@plt+0x1bc64>
   2cd28:	ldr	r3, [fp, #-16]
   2cd2c:	ldr	r2, [r3, #20]
   2cd30:	ldr	r3, [fp, #-16]
   2cd34:	ldr	r3, [r3, #16]
   2cd38:	cmp	r2, r3
   2cd3c:	bne	2cdbc <__assert_fail@plt+0x1bc64>
   2cd40:	ldr	r3, [fp, #-16]
   2cd44:	ldr	r3, [r3, #36]	; 0x24
   2cd48:	cmp	r3, #0
   2cd4c:	bne	2cdbc <__assert_fail@plt+0x1bc64>
   2cd50:	ldr	r0, [fp, #-16]
   2cd54:	bl	110b0 <fileno@plt>
   2cd58:	mov	r1, r0
   2cd5c:	ldr	r3, [fp, #4]
   2cd60:	str	r3, [sp]
   2cd64:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cd68:	mov	r0, r1
   2cd6c:	bl	10f90 <lseek64@plt>
   2cd70:	strd	r0, [fp, #-12]
   2cd74:	ldrd	r2, [fp, #-12]
   2cd78:	mvn	r0, #0
   2cd7c:	mvn	r1, #0
   2cd80:	cmp	r3, r1
   2cd84:	cmpeq	r2, r0
   2cd88:	bne	2cd94 <__assert_fail@plt+0x1bc3c>
   2cd8c:	mvn	r3, #0
   2cd90:	b	2cdd4 <__assert_fail@plt+0x1bc7c>
   2cd94:	ldr	r3, [fp, #-16]
   2cd98:	ldr	r3, [r3]
   2cd9c:	bic	r2, r3, #16
   2cda0:	ldr	r3, [fp, #-16]
   2cda4:	str	r2, [r3]
   2cda8:	ldr	r1, [fp, #-16]
   2cdac:	ldrd	r2, [fp, #-12]
   2cdb0:	strd	r2, [r1, #80]	; 0x50
   2cdb4:	mov	r3, #0
   2cdb8:	b	2cdd4 <__assert_fail@plt+0x1bc7c>
   2cdbc:	ldr	r3, [fp, #4]
   2cdc0:	str	r3, [sp]
   2cdc4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2cdc8:	ldr	r0, [fp, #-16]
   2cdcc:	bl	110e0 <fseeko64@plt>
   2cdd0:	mov	r3, r0
   2cdd4:	mov	r0, r3
   2cdd8:	sub	sp, fp, #4
   2cddc:	pop	{fp, pc}
   2cde0:	push	{fp, lr}
   2cde4:	add	fp, sp, #4
   2cde8:	bl	11074 <__errno_location@plt>
   2cdec:	mov	r2, r0
   2cdf0:	mov	r3, #12
   2cdf4:	str	r3, [r2]
   2cdf8:	mov	r3, #0
   2cdfc:	mov	r0, r3
   2ce00:	pop	{fp, pc}
   2ce04:	push	{fp, lr}
   2ce08:	add	fp, sp, #4
   2ce0c:	sub	sp, sp, #8
   2ce10:	str	r0, [fp, #-8]
   2ce14:	ldr	r3, [fp, #-8]
   2ce18:	mov	r0, r3
   2ce1c:	bl	2c874 <__assert_fail@plt+0x1b71c>
   2ce20:	mov	r3, r0
   2ce24:	mov	r0, r3
   2ce28:	sub	sp, fp, #4
   2ce2c:	pop	{fp, pc}
   2ce30:	push	{fp, lr}
   2ce34:	add	fp, sp, #4
   2ce38:	sub	sp, sp, #8
   2ce3c:	str	r0, [fp, #-8]
   2ce40:	str	r1, [fp, #-12]
   2ce44:	ldr	r3, [fp, #-12]
   2ce48:	cmp	r3, #0
   2ce4c:	moveq	r3, #1
   2ce50:	movne	r3, #0
   2ce54:	uxtb	r3, r3
   2ce58:	mov	r2, r3
   2ce5c:	ldr	r3, [fp, #-12]
   2ce60:	orr	r3, r2, r3
   2ce64:	mov	r1, r3
   2ce68:	ldr	r0, [fp, #-8]
   2ce6c:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2ce70:	mov	r3, r0
   2ce74:	mov	r0, r3
   2ce78:	sub	sp, fp, #4
   2ce7c:	pop	{fp, pc}
   2ce80:	push	{fp, lr}
   2ce84:	add	fp, sp, #4
   2ce88:	sub	sp, sp, #8
   2ce8c:	str	r0, [fp, #-8]
   2ce90:	str	r1, [fp, #-12]
   2ce94:	ldr	r3, [fp, #-8]
   2ce98:	ldr	r2, [fp, #-12]
   2ce9c:	mov	r1, r2
   2cea0:	mov	r0, r3
   2cea4:	bl	2c7b0 <__assert_fail@plt+0x1b658>
   2cea8:	mov	r3, r0
   2ceac:	mov	r0, r3
   2ceb0:	sub	sp, fp, #4
   2ceb4:	pop	{fp, pc}
   2ceb8:	push	{fp, lr}
   2cebc:	add	fp, sp, #4
   2cec0:	sub	sp, sp, #16
   2cec4:	str	r0, [fp, #-8]
   2cec8:	str	r1, [fp, #-12]
   2cecc:	str	r2, [fp, #-16]
   2ced0:	ldr	r3, [fp, #-12]
   2ced4:	cmp	r3, #0
   2ced8:	beq	2cee8 <__assert_fail@plt+0x1bd90>
   2cedc:	ldr	r3, [fp, #-16]
   2cee0:	cmp	r3, #0
   2cee4:	bne	2cef8 <__assert_fail@plt+0x1bda0>
   2cee8:	mov	r3, #1
   2ceec:	str	r3, [fp, #-16]
   2cef0:	ldr	r3, [fp, #-16]
   2cef4:	str	r3, [fp, #-12]
   2cef8:	ldr	r3, [fp, #-12]
   2cefc:	ldr	r2, [fp, #-16]
   2cf00:	mov	r1, r3
   2cf04:	ldr	r0, [fp, #-8]
   2cf08:	bl	2e87c <__assert_fail@plt+0x1d724>
   2cf0c:	mov	r3, r0
   2cf10:	mov	r0, r3
   2cf14:	sub	sp, fp, #4
   2cf18:	pop	{fp, pc}
   2cf1c:	push	{fp, lr}
   2cf20:	add	fp, sp, #4
   2cf24:	sub	sp, sp, #8
   2cf28:	mov	r0, #14
   2cf2c:	bl	11104 <nl_langinfo@plt>
   2cf30:	str	r0, [fp, #-8]
   2cf34:	ldr	r3, [fp, #-8]
   2cf38:	cmp	r3, #0
   2cf3c:	bne	2cf48 <__assert_fail@plt+0x1bdf0>
   2cf40:	ldr	r3, [pc, #40]	; 2cf70 <__assert_fail@plt+0x1be18>
   2cf44:	str	r3, [fp, #-8]
   2cf48:	ldr	r3, [fp, #-8]
   2cf4c:	ldrb	r3, [r3]
   2cf50:	cmp	r3, #0
   2cf54:	bne	2cf60 <__assert_fail@plt+0x1be08>
   2cf58:	ldr	r3, [pc, #20]	; 2cf74 <__assert_fail@plt+0x1be1c>
   2cf5c:	str	r3, [fp, #-8]
   2cf60:	ldr	r3, [fp, #-8]
   2cf64:	mov	r0, r3
   2cf68:	sub	sp, fp, #4
   2cf6c:	pop	{fp, pc}
   2cf70:	andeq	r4, r3, r8, ror r7
   2cf74:	andeq	r4, r3, ip, ror r7
   2cf78:	push	{fp, lr}
   2cf7c:	add	fp, sp, #4
   2cf80:	sub	sp, sp, #8
   2cf84:	str	r0, [fp, #-8]
   2cf88:	ldr	r3, [fp, #-8]
   2cf8c:	ldrb	r3, [r3, #16]
   2cf90:	cmp	r3, #0
   2cf94:	bne	2d1a0 <__assert_fail@plt+0x1c048>
   2cf98:	ldr	r3, [fp, #-8]
   2cf9c:	ldrb	r3, [r3, #4]
   2cfa0:	cmp	r3, #0
   2cfa4:	bne	2d03c <__assert_fail@plt+0x1bee4>
   2cfa8:	ldr	r3, [fp, #-8]
   2cfac:	ldr	r3, [r3, #20]
   2cfb0:	ldrb	r3, [r3]
   2cfb4:	mov	r0, r3
   2cfb8:	bl	2fa88 <__assert_fail@plt+0x1e930>
   2cfbc:	mov	r3, r0
   2cfc0:	cmp	r3, #0
   2cfc4:	beq	2cffc <__assert_fail@plt+0x1bea4>
   2cfc8:	ldr	r3, [fp, #-8]
   2cfcc:	mov	r2, #1
   2cfd0:	str	r2, [r3, #24]
   2cfd4:	ldr	r3, [fp, #-8]
   2cfd8:	ldr	r3, [r3, #20]
   2cfdc:	ldrb	r3, [r3]
   2cfe0:	mov	r2, r3
   2cfe4:	ldr	r3, [fp, #-8]
   2cfe8:	str	r2, [r3, #32]
   2cfec:	ldr	r3, [fp, #-8]
   2cff0:	mov	r2, #1
   2cff4:	strb	r2, [r3, #28]
   2cff8:	b	2d190 <__assert_fail@plt+0x1c038>
   2cffc:	ldr	r3, [fp, #-8]
   2d000:	add	r3, r3, #8
   2d004:	mov	r0, r3
   2d008:	bl	10f0c <mbsinit@plt>
   2d00c:	mov	r3, r0
   2d010:	cmp	r3, #0
   2d014:	bne	2d02c <__assert_fail@plt+0x1bed4>
   2d018:	ldr	r3, [pc, #396]	; 2d1ac <__assert_fail@plt+0x1c054>
   2d01c:	mov	r2, #135	; 0x87
   2d020:	ldr	r1, [pc, #392]	; 2d1b0 <__assert_fail@plt+0x1c058>
   2d024:	ldr	r0, [pc, #392]	; 2d1b4 <__assert_fail@plt+0x1c05c>
   2d028:	bl	11158 <__assert_fail@plt>
   2d02c:	ldr	r3, [fp, #-8]
   2d030:	mov	r2, #1
   2d034:	strb	r2, [r3, #4]
   2d038:	b	2d040 <__assert_fail@plt+0x1bee8>
   2d03c:	nop			; (mov r0, r0)
   2d040:	ldr	r3, [fp, #-8]
   2d044:	add	r0, r3, #32
   2d048:	ldr	r3, [fp, #-8]
   2d04c:	ldr	r1, [r3, #20]
   2d050:	ldr	r3, [fp, #-8]
   2d054:	ldr	r3, [r3]
   2d058:	mov	r2, r3
   2d05c:	ldr	r3, [fp, #-8]
   2d060:	ldr	r3, [r3, #20]
   2d064:	sub	r3, r2, r3
   2d068:	mov	r2, r3
   2d06c:	ldr	r3, [fp, #-8]
   2d070:	add	r3, r3, #8
   2d074:	bl	2d2c8 <__assert_fail@plt+0x1c170>
   2d078:	mov	r2, r0
   2d07c:	ldr	r3, [fp, #-8]
   2d080:	str	r2, [r3, #24]
   2d084:	ldr	r3, [fp, #-8]
   2d088:	ldr	r3, [r3, #24]
   2d08c:	cmn	r3, #1
   2d090:	bne	2d0b0 <__assert_fail@plt+0x1bf58>
   2d094:	ldr	r3, [fp, #-8]
   2d098:	mov	r2, #1
   2d09c:	str	r2, [r3, #24]
   2d0a0:	ldr	r3, [fp, #-8]
   2d0a4:	mov	r2, #0
   2d0a8:	strb	r2, [r3, #28]
   2d0ac:	b	2d190 <__assert_fail@plt+0x1c038>
   2d0b0:	ldr	r3, [fp, #-8]
   2d0b4:	ldr	r3, [r3, #24]
   2d0b8:	cmn	r3, #2
   2d0bc:	bne	2d0f4 <__assert_fail@plt+0x1bf9c>
   2d0c0:	ldr	r3, [fp, #-8]
   2d0c4:	ldr	r3, [r3]
   2d0c8:	mov	r2, r3
   2d0cc:	ldr	r3, [fp, #-8]
   2d0d0:	ldr	r3, [r3, #20]
   2d0d4:	sub	r3, r2, r3
   2d0d8:	mov	r2, r3
   2d0dc:	ldr	r3, [fp, #-8]
   2d0e0:	str	r2, [r3, #24]
   2d0e4:	ldr	r3, [fp, #-8]
   2d0e8:	mov	r2, #0
   2d0ec:	strb	r2, [r3, #28]
   2d0f0:	b	2d190 <__assert_fail@plt+0x1c038>
   2d0f4:	ldr	r3, [fp, #-8]
   2d0f8:	ldr	r3, [r3, #24]
   2d0fc:	cmp	r3, #0
   2d100:	bne	2d15c <__assert_fail@plt+0x1c004>
   2d104:	ldr	r3, [fp, #-8]
   2d108:	mov	r2, #1
   2d10c:	str	r2, [r3, #24]
   2d110:	ldr	r3, [fp, #-8]
   2d114:	ldr	r3, [r3, #20]
   2d118:	ldrb	r3, [r3]
   2d11c:	cmp	r3, #0
   2d120:	beq	2d138 <__assert_fail@plt+0x1bfe0>
   2d124:	ldr	r3, [pc, #128]	; 2d1ac <__assert_fail@plt+0x1c054>
   2d128:	mov	r2, #162	; 0xa2
   2d12c:	ldr	r1, [pc, #124]	; 2d1b0 <__assert_fail@plt+0x1c058>
   2d130:	ldr	r0, [pc, #128]	; 2d1b8 <__assert_fail@plt+0x1c060>
   2d134:	bl	11158 <__assert_fail@plt>
   2d138:	ldr	r3, [fp, #-8]
   2d13c:	ldr	r3, [r3, #32]
   2d140:	cmp	r3, #0
   2d144:	beq	2d15c <__assert_fail@plt+0x1c004>
   2d148:	ldr	r3, [pc, #92]	; 2d1ac <__assert_fail@plt+0x1c054>
   2d14c:	mov	r2, #163	; 0xa3
   2d150:	ldr	r1, [pc, #88]	; 2d1b0 <__assert_fail@plt+0x1c058>
   2d154:	ldr	r0, [pc, #96]	; 2d1bc <__assert_fail@plt+0x1c064>
   2d158:	bl	11158 <__assert_fail@plt>
   2d15c:	ldr	r3, [fp, #-8]
   2d160:	mov	r2, #1
   2d164:	strb	r2, [r3, #28]
   2d168:	ldr	r3, [fp, #-8]
   2d16c:	add	r3, r3, #8
   2d170:	mov	r0, r3
   2d174:	bl	10f0c <mbsinit@plt>
   2d178:	mov	r3, r0
   2d17c:	cmp	r3, #0
   2d180:	beq	2d190 <__assert_fail@plt+0x1c038>
   2d184:	ldr	r3, [fp, #-8]
   2d188:	mov	r2, #0
   2d18c:	strb	r2, [r3, #4]
   2d190:	ldr	r3, [fp, #-8]
   2d194:	mov	r2, #1
   2d198:	strb	r2, [r3, #16]
   2d19c:	b	2d1a4 <__assert_fail@plt+0x1c04c>
   2d1a0:	nop			; (mov r0, r0)
   2d1a4:	sub	sp, fp, #4
   2d1a8:	pop	{fp, pc}
   2d1ac:	ldrdeq	r4, [r3], -r8
   2d1b0:	andeq	r4, r3, r4, lsl #15
   2d1b4:	muleq	r3, r4, r7
   2d1b8:	andeq	r4, r3, ip, lsr #15
   2d1bc:	andeq	r4, r3, r4, asr #15
   2d1c0:	push	{fp}		; (str fp, [sp, #-4]!)
   2d1c4:	add	fp, sp, #0
   2d1c8:	sub	sp, sp, #12
   2d1cc:	str	r0, [fp, #-8]
   2d1d0:	str	r1, [fp, #-12]
   2d1d4:	ldr	r3, [fp, #-8]
   2d1d8:	ldr	r2, [r3, #20]
   2d1dc:	ldr	r3, [fp, #-12]
   2d1e0:	add	r2, r2, r3
   2d1e4:	ldr	r3, [fp, #-8]
   2d1e8:	str	r2, [r3, #20]
   2d1ec:	ldr	r3, [fp, #-8]
   2d1f0:	ldr	r2, [r3]
   2d1f4:	ldr	r3, [fp, #-12]
   2d1f8:	add	r2, r2, r3
   2d1fc:	ldr	r3, [fp, #-8]
   2d200:	str	r2, [r3]
   2d204:	nop			; (mov r0, r0)
   2d208:	add	sp, fp, #0
   2d20c:	pop	{fp}		; (ldr fp, [sp], #4)
   2d210:	bx	lr
   2d214:	push	{fp, lr}
   2d218:	add	fp, sp, #4
   2d21c:	sub	sp, sp, #8
   2d220:	str	r0, [fp, #-8]
   2d224:	str	r1, [fp, #-12]
   2d228:	ldr	r3, [fp, #-12]
   2d22c:	ldr	r2, [r3]
   2d230:	ldr	r3, [fp, #-8]
   2d234:	str	r2, [r3]
   2d238:	ldr	r3, [fp, #-12]
   2d23c:	ldrb	r2, [r3, #4]
   2d240:	ldr	r3, [fp, #-8]
   2d244:	strb	r2, [r3, #4]
   2d248:	ldr	r3, [fp, #-8]
   2d24c:	ldrb	r3, [r3, #4]
   2d250:	cmp	r3, #0
   2d254:	beq	2d278 <__assert_fail@plt+0x1c120>
   2d258:	ldr	r3, [fp, #-8]
   2d25c:	add	r0, r3, #8
   2d260:	ldr	r3, [fp, #-12]
   2d264:	add	r3, r3, #8
   2d268:	mov	r2, #8
   2d26c:	mov	r1, r3
   2d270:	bl	10f00 <memcpy@plt>
   2d274:	b	2d290 <__assert_fail@plt+0x1c138>
   2d278:	ldr	r3, [fp, #-8]
   2d27c:	add	r3, r3, #8
   2d280:	mov	r2, #8
   2d284:	mov	r1, #0
   2d288:	mov	r0, r3
   2d28c:	bl	11098 <memset@plt>
   2d290:	ldr	r3, [fp, #-12]
   2d294:	ldrb	r2, [r3, #16]
   2d298:	ldr	r3, [fp, #-8]
   2d29c:	strb	r2, [r3, #16]
   2d2a0:	ldr	r3, [fp, #-8]
   2d2a4:	add	r2, r3, #20
   2d2a8:	ldr	r3, [fp, #-12]
   2d2ac:	add	r3, r3, #20
   2d2b0:	mov	r1, r3
   2d2b4:	mov	r0, r2
   2d2b8:	bl	2f9cc <__assert_fail@plt+0x1e874>
   2d2bc:	nop			; (mov r0, r0)
   2d2c0:	sub	sp, fp, #4
   2d2c4:	pop	{fp, pc}
   2d2c8:	push	{fp, lr}
   2d2cc:	add	fp, sp, #4
   2d2d0:	sub	sp, sp, #32
   2d2d4:	str	r0, [fp, #-24]	; 0xffffffe8
   2d2d8:	str	r1, [fp, #-28]	; 0xffffffe4
   2d2dc:	str	r2, [fp, #-32]	; 0xffffffe0
   2d2e0:	str	r3, [fp, #-36]	; 0xffffffdc
   2d2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2e8:	cmp	r3, #0
   2d2ec:	bne	2d2f8 <__assert_fail@plt+0x1c1a0>
   2d2f0:	sub	r3, fp, #16
   2d2f4:	str	r3, [fp, #-24]	; 0xffffffe8
   2d2f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d2fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d308:	bl	10fc0 <mbrtowc@plt>
   2d30c:	str	r0, [fp, #-8]
   2d310:	ldr	r3, [fp, #-8]
   2d314:	cmn	r3, #3
   2d318:	bls	2d364 <__assert_fail@plt+0x1c20c>
   2d31c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d320:	cmp	r3, #0
   2d324:	beq	2d364 <__assert_fail@plt+0x1c20c>
   2d328:	mov	r0, #0
   2d32c:	bl	2f6d0 <__assert_fail@plt+0x1e578>
   2d330:	mov	r3, r0
   2d334:	eor	r3, r3, #1
   2d338:	uxtb	r3, r3
   2d33c:	cmp	r3, #0
   2d340:	beq	2d364 <__assert_fail@plt+0x1c20c>
   2d344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d348:	ldrb	r3, [r3]
   2d34c:	strb	r3, [fp, #-9]
   2d350:	ldrb	r2, [fp, #-9]
   2d354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d358:	str	r2, [r3]
   2d35c:	mov	r3, #1
   2d360:	b	2d368 <__assert_fail@plt+0x1c210>
   2d364:	ldr	r3, [fp, #-8]
   2d368:	mov	r0, r3
   2d36c:	sub	sp, fp, #4
   2d370:	pop	{fp, pc}
   2d374:	push	{r4, r5, r6, r7, fp, lr}
   2d378:	add	fp, sp, #20
   2d37c:	sub	sp, sp, #56	; 0x38
   2d380:	str	r0, [fp, #-64]	; 0xffffffc0
   2d384:	str	r1, [fp, #-68]	; 0xffffffbc
   2d388:	str	r2, [fp, #-72]	; 0xffffffb8
   2d38c:	str	r3, [fp, #-76]	; 0xffffffb4
   2d390:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d394:	str	r3, [fp, #-44]	; 0xffffffd4
   2d398:	mov	r1, #0
   2d39c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d3a0:	mov	r2, r3
   2d3a4:	mov	r3, #0
   2d3a8:	lsl	r5, r3, #2
   2d3ac:	orr	r5, r5, r2, lsr #30
   2d3b0:	lsl	r4, r2, #2
   2d3b4:	mov	r6, r5
   2d3b8:	mov	r7, #0
   2d3bc:	cmp	r6, #0
   2d3c0:	beq	2d3c8 <__assert_fail@plt+0x1c270>
   2d3c4:	mov	r1, #1
   2d3c8:	cmp	r4, #0
   2d3cc:	bge	2d3d4 <__assert_fail@plt+0x1c27c>
   2d3d0:	mov	r1, #1
   2d3d4:	mov	r3, r4
   2d3d8:	str	r3, [fp, #-56]	; 0xffffffc8
   2d3dc:	mov	r3, r1
   2d3e0:	and	r3, r3, #1
   2d3e4:	uxtb	r3, r3
   2d3e8:	cmp	r3, #0
   2d3ec:	bne	2d458 <__assert_fail@plt+0x1c300>
   2d3f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d3f4:	lsl	r3, r3, #2
   2d3f8:	cmp	r3, #4016	; 0xfb0
   2d3fc:	bhi	2d440 <__assert_fail@plt+0x1c2e8>
   2d400:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d404:	add	r3, r3, #4
   2d408:	lsl	r3, r3, #2
   2d40c:	sub	r3, r3, #1
   2d410:	add	r3, r3, #7
   2d414:	add	r3, r3, #7
   2d418:	lsr	r3, r3, #3
   2d41c:	lsl	r3, r3, #3
   2d420:	sub	sp, sp, r3
   2d424:	mov	r3, sp
   2d428:	add	r3, r3, #7
   2d42c:	lsr	r3, r3, #3
   2d430:	lsl	r3, r3, #3
   2d434:	add	r3, r3, #15
   2d438:	bic	r3, r3, #15
   2d43c:	b	2d45c <__assert_fail@plt+0x1c304>
   2d440:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d444:	lsl	r3, r3, #2
   2d448:	mov	r0, r3
   2d44c:	bl	2f76c <__assert_fail@plt+0x1e614>
   2d450:	mov	r3, r0
   2d454:	b	2d45c <__assert_fail@plt+0x1c304>
   2d458:	mov	r3, #0
   2d45c:	str	r3, [fp, #-48]	; 0xffffffd0
   2d460:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d464:	cmp	r3, #0
   2d468:	bne	2d474 <__assert_fail@plt+0x1c31c>
   2d46c:	mov	r3, #0
   2d470:	b	2d668 <__assert_fail@plt+0x1c510>
   2d474:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d478:	add	r3, r3, #4
   2d47c:	mov	r2, #1
   2d480:	str	r2, [r3]
   2d484:	mov	r3, #0
   2d488:	str	r3, [fp, #-28]	; 0xffffffe4
   2d48c:	mov	r3, #2
   2d490:	str	r3, [fp, #-24]	; 0xffffffe8
   2d494:	b	2d554 <__assert_fail@plt+0x1c3fc>
   2d498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d49c:	sub	r3, r3, #1
   2d4a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d4a4:	add	r3, r2, r3
   2d4a8:	ldrb	r3, [r3]
   2d4ac:	strb	r3, [fp, #-49]	; 0xffffffcf
   2d4b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d4b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d4b8:	add	r3, r2, r3
   2d4bc:	ldrb	r3, [r3]
   2d4c0:	ldrb	r2, [fp, #-49]	; 0xffffffcf
   2d4c4:	cmp	r2, r3
   2d4c8:	bne	2d4fc <__assert_fail@plt+0x1c3a4>
   2d4cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4d0:	lsl	r3, r3, #2
   2d4d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d4d8:	add	r3, r2, r3
   2d4dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d4e0:	add	r2, r2, #1
   2d4e4:	str	r2, [fp, #-28]	; 0xffffffe4
   2d4e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d4ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d4f0:	sub	r2, r1, r2
   2d4f4:	str	r2, [r3]
   2d4f8:	b	2d548 <__assert_fail@plt+0x1c3f0>
   2d4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d500:	cmp	r3, #0
   2d504:	bne	2d524 <__assert_fail@plt+0x1c3cc>
   2d508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d50c:	lsl	r3, r3, #2
   2d510:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d514:	add	r3, r2, r3
   2d518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d51c:	str	r2, [r3]
   2d520:	b	2d548 <__assert_fail@plt+0x1c3f0>
   2d524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d528:	lsl	r3, r3, #2
   2d52c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d530:	add	r3, r2, r3
   2d534:	ldr	r3, [r3]
   2d538:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d53c:	sub	r3, r2, r3
   2d540:	str	r3, [fp, #-28]	; 0xffffffe4
   2d544:	b	2d4b0 <__assert_fail@plt+0x1c358>
   2d548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d54c:	add	r3, r3, #1
   2d550:	str	r3, [fp, #-24]	; 0xffffffe8
   2d554:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d55c:	cmp	r2, r3
   2d560:	bcc	2d498 <__assert_fail@plt+0x1c340>
   2d564:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2d568:	mov	r2, #0
   2d56c:	str	r2, [r3]
   2d570:	mov	r3, #0
   2d574:	str	r3, [fp, #-32]	; 0xffffffe0
   2d578:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d57c:	str	r3, [fp, #-36]	; 0xffffffdc
   2d580:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d584:	str	r3, [fp, #-40]	; 0xffffffd8
   2d588:	b	2d64c <__assert_fail@plt+0x1c4f4>
   2d58c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d594:	add	r3, r2, r3
   2d598:	ldrb	r2, [r3]
   2d59c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d5a0:	ldrb	r3, [r3]
   2d5a4:	cmp	r2, r3
   2d5a8:	bne	2d5e4 <__assert_fail@plt+0x1c48c>
   2d5ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d5b0:	add	r3, r3, #1
   2d5b4:	str	r3, [fp, #-32]	; 0xffffffe0
   2d5b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d5bc:	add	r3, r3, #1
   2d5c0:	str	r3, [fp, #-40]	; 0xffffffd8
   2d5c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d5c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d5cc:	cmp	r2, r3
   2d5d0:	bne	2d64c <__assert_fail@plt+0x1c4f4>
   2d5d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2d5d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d5dc:	str	r2, [r3]
   2d5e0:	b	2d65c <__assert_fail@plt+0x1c504>
   2d5e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d5e8:	cmp	r3, #0
   2d5ec:	beq	2d634 <__assert_fail@plt+0x1c4dc>
   2d5f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d5f4:	lsl	r3, r3, #2
   2d5f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d5fc:	add	r3, r2, r3
   2d600:	ldr	r3, [r3]
   2d604:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d608:	add	r3, r2, r3
   2d60c:	str	r3, [fp, #-36]	; 0xffffffdc
   2d610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d614:	lsl	r3, r3, #2
   2d618:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d61c:	add	r3, r2, r3
   2d620:	ldr	r3, [r3]
   2d624:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d628:	sub	r3, r2, r3
   2d62c:	str	r3, [fp, #-32]	; 0xffffffe0
   2d630:	b	2d64c <__assert_fail@plt+0x1c4f4>
   2d634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d638:	add	r3, r3, #1
   2d63c:	str	r3, [fp, #-36]	; 0xffffffdc
   2d640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d644:	add	r3, r3, #1
   2d648:	str	r3, [fp, #-40]	; 0xffffffd8
   2d64c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d650:	ldrb	r3, [r3]
   2d654:	cmp	r3, #0
   2d658:	bne	2d58c <__assert_fail@plt+0x1c434>
   2d65c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d660:	bl	2f910 <__assert_fail@plt+0x1e7b8>
   2d664:	mov	r3, #1
   2d668:	mov	r0, r3
   2d66c:	sub	sp, fp, #20
   2d670:	pop	{r4, r5, r6, r7, fp, pc}
   2d674:	push	{r4, r5, fp, lr}
   2d678:	add	fp, sp, #12
   2d67c:	sub	sp, sp, #176	; 0xb0
   2d680:	str	r0, [fp, #-176]	; 0xffffff50
   2d684:	str	r1, [fp, #-180]	; 0xffffff4c
   2d688:	str	r2, [fp, #-184]	; 0xffffff48
   2d68c:	ldr	r0, [fp, #-180]	; 0xffffff4c
   2d690:	bl	2fae8 <__assert_fail@plt+0x1e990>
   2d694:	str	r0, [fp, #-36]	; 0xffffffdc
   2d698:	mov	r1, #0
   2d69c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d6a0:	mov	r2, #44	; 0x2c
   2d6a4:	umull	r2, r3, r3, r2
   2d6a8:	mov	r4, r3
   2d6ac:	mov	r5, #0
   2d6b0:	cmp	r4, #0
   2d6b4:	beq	2d6bc <__assert_fail@plt+0x1c564>
   2d6b8:	mov	r1, #1
   2d6bc:	cmp	r2, #0
   2d6c0:	bge	2d6c8 <__assert_fail@plt+0x1c570>
   2d6c4:	mov	r1, #1
   2d6c8:	mov	r3, r2
   2d6cc:	str	r3, [fp, #-60]	; 0xffffffc4
   2d6d0:	mov	r3, r1
   2d6d4:	and	r3, r3, #1
   2d6d8:	uxtb	r3, r3
   2d6dc:	cmp	r3, #0
   2d6e0:	bne	2d754 <__assert_fail@plt+0x1c5fc>
   2d6e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d6e8:	mov	r2, #44	; 0x2c
   2d6ec:	mul	r3, r2, r3
   2d6f0:	cmp	r3, #4016	; 0xfb0
   2d6f4:	bhi	2d738 <__assert_fail@plt+0x1c5e0>
   2d6f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d6fc:	mov	r2, #44	; 0x2c
   2d700:	mul	r3, r2, r3
   2d704:	add	r3, r3, #15
   2d708:	add	r3, r3, #7
   2d70c:	add	r3, r3, #7
   2d710:	lsr	r3, r3, #3
   2d714:	lsl	r3, r3, #3
   2d718:	sub	sp, sp, r3
   2d71c:	mov	r3, sp
   2d720:	add	r3, r3, #7
   2d724:	lsr	r3, r3, #3
   2d728:	lsl	r3, r3, #3
   2d72c:	add	r3, r3, #15
   2d730:	bic	r3, r3, #15
   2d734:	b	2d758 <__assert_fail@plt+0x1c600>
   2d738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d73c:	mov	r2, #44	; 0x2c
   2d740:	mul	r3, r2, r3
   2d744:	mov	r0, r3
   2d748:	bl	2f76c <__assert_fail@plt+0x1e614>
   2d74c:	mov	r3, r0
   2d750:	b	2d758 <__assert_fail@plt+0x1c600>
   2d754:	mov	r3, #0
   2d758:	str	r3, [fp, #-40]	; 0xffffffd8
   2d75c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d760:	cmp	r3, #0
   2d764:	bne	2d770 <__assert_fail@plt+0x1c618>
   2d768:	mov	r3, #0
   2d76c:	b	2ddb8 <__assert_fail@plt+0x1cc60>
   2d770:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d774:	str	r3, [fp, #-44]	; 0xffffffd4
   2d778:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d77c:	mov	r3, r2
   2d780:	lsl	r3, r3, #2
   2d784:	add	r3, r3, r2
   2d788:	lsl	r3, r3, #3
   2d78c:	mov	r2, r3
   2d790:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d794:	add	r3, r3, r2
   2d798:	str	r3, [fp, #-48]	; 0xffffffd0
   2d79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d7a0:	str	r3, [fp, #-52]	; 0xffffffcc
   2d7a4:	mov	r3, #0
   2d7a8:	str	r3, [fp, #-16]
   2d7ac:	ldr	r3, [fp, #-180]	; 0xffffff4c
   2d7b0:	str	r3, [fp, #-100]	; 0xffffff9c
   2d7b4:	mov	r3, #0
   2d7b8:	strb	r3, [fp, #-116]	; 0xffffff8c
   2d7bc:	sub	r3, fp, #116	; 0x74
   2d7c0:	add	r3, r3, #4
   2d7c4:	mov	r2, #8
   2d7c8:	mov	r1, #0
   2d7cc:	mov	r0, r3
   2d7d0:	bl	11098 <memset@plt>
   2d7d4:	mov	r3, #0
   2d7d8:	strb	r3, [fp, #-104]	; 0xffffff98
   2d7dc:	b	2d838 <__assert_fail@plt+0x1c6e0>
   2d7e0:	ldr	r2, [fp, #-16]
   2d7e4:	mov	r3, r2
   2d7e8:	lsl	r3, r3, #2
   2d7ec:	add	r3, r3, r2
   2d7f0:	lsl	r3, r3, #3
   2d7f4:	mov	r2, r3
   2d7f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d7fc:	add	r2, r3, r2
   2d800:	sub	r3, fp, #116	; 0x74
   2d804:	add	r3, r3, #16
   2d808:	mov	r1, r3
   2d80c:	mov	r0, r2
   2d810:	bl	2f9cc <__assert_fail@plt+0x1e874>
   2d814:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2d818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d81c:	add	r3, r2, r3
   2d820:	str	r3, [fp, #-100]	; 0xffffff9c
   2d824:	mov	r3, #0
   2d828:	strb	r3, [fp, #-104]	; 0xffffff98
   2d82c:	ldr	r3, [fp, #-16]
   2d830:	add	r3, r3, #1
   2d834:	str	r3, [fp, #-16]
   2d838:	sub	r3, fp, #116	; 0x74
   2d83c:	mov	r0, r3
   2d840:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2d844:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2d848:	eor	r3, r3, #1
   2d84c:	uxtb	r3, r3
   2d850:	cmp	r3, #0
   2d854:	bne	2d864 <__assert_fail@plt+0x1c70c>
   2d858:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2d85c:	cmp	r3, #0
   2d860:	beq	2d86c <__assert_fail@plt+0x1c714>
   2d864:	mov	r3, #1
   2d868:	b	2d870 <__assert_fail@plt+0x1c718>
   2d86c:	mov	r3, #0
   2d870:	cmp	r3, #0
   2d874:	bne	2d7e0 <__assert_fail@plt+0x1c688>
   2d878:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d87c:	add	r3, r3, #4
   2d880:	mov	r2, #1
   2d884:	str	r2, [r3]
   2d888:	mov	r3, #0
   2d88c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d890:	mov	r3, #2
   2d894:	str	r3, [fp, #-20]	; 0xffffffec
   2d898:	b	2da5c <__assert_fail@plt+0x1c904>
   2d89c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d8a0:	mov	r3, r2
   2d8a4:	lsl	r3, r3, #2
   2d8a8:	add	r3, r3, r2
   2d8ac:	lsl	r3, r3, #3
   2d8b0:	sub	r3, r3, #40	; 0x28
   2d8b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2d8b8:	add	r3, r2, r3
   2d8bc:	str	r3, [fp, #-56]	; 0xffffffc8
   2d8c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d8c4:	ldrb	r3, [r3, #8]
   2d8c8:	cmp	r3, #0
   2d8cc:	beq	2d93c <__assert_fail@plt+0x1c7e4>
   2d8d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d8d4:	mov	r3, r2
   2d8d8:	lsl	r3, r3, #2
   2d8dc:	add	r3, r3, r2
   2d8e0:	lsl	r3, r3, #3
   2d8e4:	mov	r2, r3
   2d8e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d8ec:	add	r3, r3, r2
   2d8f0:	ldrb	r3, [r3, #8]
   2d8f4:	cmp	r3, #0
   2d8f8:	beq	2d93c <__assert_fail@plt+0x1c7e4>
   2d8fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d900:	ldr	r1, [r3, #12]
   2d904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d908:	mov	r3, r2
   2d90c:	lsl	r3, r3, #2
   2d910:	add	r3, r3, r2
   2d914:	lsl	r3, r3, #3
   2d918:	mov	r2, r3
   2d91c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d920:	add	r3, r3, r2
   2d924:	ldr	r3, [r3, #12]
   2d928:	cmp	r1, r3
   2d92c:	moveq	r3, #1
   2d930:	movne	r3, #0
   2d934:	uxtb	r3, r3
   2d938:	b	2d9cc <__assert_fail@plt+0x1c874>
   2d93c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d940:	ldr	r1, [r3, #4]
   2d944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d948:	mov	r3, r2
   2d94c:	lsl	r3, r3, #2
   2d950:	add	r3, r3, r2
   2d954:	lsl	r3, r3, #3
   2d958:	mov	r2, r3
   2d95c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d960:	add	r3, r3, r2
   2d964:	ldr	r3, [r3, #4]
   2d968:	cmp	r1, r3
   2d96c:	bne	2d9c0 <__assert_fail@plt+0x1c868>
   2d970:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d974:	ldr	r0, [r3]
   2d978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d97c:	mov	r3, r2
   2d980:	lsl	r3, r3, #2
   2d984:	add	r3, r3, r2
   2d988:	lsl	r3, r3, #3
   2d98c:	mov	r2, r3
   2d990:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d994:	add	r3, r3, r2
   2d998:	ldr	r1, [r3]
   2d99c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d9a0:	ldr	r3, [r3, #4]
   2d9a4:	mov	r2, r3
   2d9a8:	bl	10f18 <memcmp@plt>
   2d9ac:	mov	r3, r0
   2d9b0:	cmp	r3, #0
   2d9b4:	bne	2d9c0 <__assert_fail@plt+0x1c868>
   2d9b8:	mov	r3, #1
   2d9bc:	b	2d9c4 <__assert_fail@plt+0x1c86c>
   2d9c0:	mov	r3, #0
   2d9c4:	and	r3, r3, #1
   2d9c8:	uxtb	r3, r3
   2d9cc:	cmp	r3, #0
   2d9d0:	beq	2da04 <__assert_fail@plt+0x1c8ac>
   2d9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9d8:	lsl	r3, r3, #2
   2d9dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2d9e0:	add	r3, r2, r3
   2d9e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d9e8:	add	r2, r2, #1
   2d9ec:	str	r2, [fp, #-24]	; 0xffffffe8
   2d9f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d9f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d9f8:	sub	r2, r1, r2
   2d9fc:	str	r2, [r3]
   2da00:	b	2da50 <__assert_fail@plt+0x1c8f8>
   2da04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da08:	cmp	r3, #0
   2da0c:	bne	2da2c <__assert_fail@plt+0x1c8d4>
   2da10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da14:	lsl	r3, r3, #2
   2da18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2da1c:	add	r3, r2, r3
   2da20:	ldr	r2, [fp, #-20]	; 0xffffffec
   2da24:	str	r2, [r3]
   2da28:	b	2da50 <__assert_fail@plt+0x1c8f8>
   2da2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2da30:	lsl	r3, r3, #2
   2da34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2da38:	add	r3, r2, r3
   2da3c:	ldr	r3, [r3]
   2da40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da44:	sub	r3, r2, r3
   2da48:	str	r3, [fp, #-24]	; 0xffffffe8
   2da4c:	b	2d8c0 <__assert_fail@plt+0x1c768>
   2da50:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da54:	add	r3, r3, #1
   2da58:	str	r3, [fp, #-20]	; 0xffffffec
   2da5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2da60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2da64:	cmp	r2, r3
   2da68:	bcc	2d89c <__assert_fail@plt+0x1c744>
   2da6c:	ldr	r3, [fp, #-184]	; 0xffffff48
   2da70:	mov	r2, #0
   2da74:	str	r2, [r3]
   2da78:	mov	r3, #0
   2da7c:	str	r3, [fp, #-28]	; 0xffffffe4
   2da80:	ldr	r3, [fp, #-176]	; 0xffffff50
   2da84:	str	r3, [fp, #-156]	; 0xffffff64
   2da88:	mov	r3, #0
   2da8c:	strb	r3, [fp, #-172]	; 0xffffff54
   2da90:	sub	r3, fp, #172	; 0xac
   2da94:	add	r3, r3, #4
   2da98:	mov	r2, #8
   2da9c:	mov	r1, #0
   2daa0:	mov	r0, r3
   2daa4:	bl	11098 <memset@plt>
   2daa8:	mov	r3, #0
   2daac:	strb	r3, [fp, #-160]	; 0xffffff60
   2dab0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2dab4:	str	r3, [fp, #-100]	; 0xffffff9c
   2dab8:	mov	r3, #0
   2dabc:	strb	r3, [fp, #-116]	; 0xffffff8c
   2dac0:	sub	r3, fp, #116	; 0x74
   2dac4:	add	r3, r3, #4
   2dac8:	mov	r2, #8
   2dacc:	mov	r1, #0
   2dad0:	mov	r0, r3
   2dad4:	bl	11098 <memset@plt>
   2dad8:	mov	r3, #0
   2dadc:	strb	r3, [fp, #-104]	; 0xffffff98
   2dae0:	b	2dd6c <__assert_fail@plt+0x1cc14>
   2dae4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dae8:	mov	r3, r2
   2daec:	lsl	r3, r3, #2
   2daf0:	add	r3, r3, r2
   2daf4:	lsl	r3, r3, #3
   2daf8:	mov	r2, r3
   2dafc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2db00:	add	r3, r3, r2
   2db04:	ldrb	r3, [r3, #8]
   2db08:	cmp	r3, #0
   2db0c:	beq	2db58 <__assert_fail@plt+0x1ca00>
   2db10:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2db14:	cmp	r3, #0
   2db18:	beq	2db58 <__assert_fail@plt+0x1ca00>
   2db1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2db20:	mov	r3, r2
   2db24:	lsl	r3, r3, #2
   2db28:	add	r3, r3, r2
   2db2c:	lsl	r3, r3, #3
   2db30:	mov	r2, r3
   2db34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2db38:	add	r3, r3, r2
   2db3c:	ldr	r2, [r3, #12]
   2db40:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2db44:	cmp	r2, r3
   2db48:	moveq	r3, #1
   2db4c:	movne	r3, #0
   2db50:	uxtb	r3, r3
   2db54:	b	2dbfc <__assert_fail@plt+0x1caa4>
   2db58:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2db5c:	mov	r3, r2
   2db60:	lsl	r3, r3, #2
   2db64:	add	r3, r3, r2
   2db68:	lsl	r3, r3, #3
   2db6c:	mov	r2, r3
   2db70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2db74:	add	r3, r3, r2
   2db78:	ldr	r2, [r3, #4]
   2db7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2db80:	cmp	r2, r3
   2db84:	bne	2dbf0 <__assert_fail@plt+0x1ca98>
   2db88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2db8c:	mov	r3, r2
   2db90:	lsl	r3, r3, #2
   2db94:	add	r3, r3, r2
   2db98:	lsl	r3, r3, #3
   2db9c:	mov	r2, r3
   2dba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dba4:	add	r3, r3, r2
   2dba8:	ldr	r0, [r3]
   2dbac:	ldr	r1, [fp, #-100]	; 0xffffff9c
   2dbb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dbb4:	mov	r3, r2
   2dbb8:	lsl	r3, r3, #2
   2dbbc:	add	r3, r3, r2
   2dbc0:	lsl	r3, r3, #3
   2dbc4:	mov	r2, r3
   2dbc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dbcc:	add	r3, r3, r2
   2dbd0:	ldr	r3, [r3, #4]
   2dbd4:	mov	r2, r3
   2dbd8:	bl	10f18 <memcmp@plt>
   2dbdc:	mov	r3, r0
   2dbe0:	cmp	r3, #0
   2dbe4:	bne	2dbf0 <__assert_fail@plt+0x1ca98>
   2dbe8:	mov	r3, #1
   2dbec:	b	2dbf4 <__assert_fail@plt+0x1ca9c>
   2dbf0:	mov	r3, #0
   2dbf4:	and	r3, r3, #1
   2dbf8:	uxtb	r3, r3
   2dbfc:	cmp	r3, #0
   2dc00:	beq	2dc48 <__assert_fail@plt+0x1caf0>
   2dc04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dc08:	add	r3, r3, #1
   2dc0c:	str	r3, [fp, #-28]	; 0xffffffe4
   2dc10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2dc14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2dc18:	add	r3, r2, r3
   2dc1c:	str	r3, [fp, #-100]	; 0xffffff9c
   2dc20:	mov	r3, #0
   2dc24:	strb	r3, [fp, #-104]	; 0xffffff98
   2dc28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dc2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dc30:	cmp	r2, r3
   2dc34:	bne	2dd6c <__assert_fail@plt+0x1cc14>
   2dc38:	ldr	r2, [fp, #-156]	; 0xffffff64
   2dc3c:	ldr	r3, [fp, #-184]	; 0xffffff48
   2dc40:	str	r2, [r3]
   2dc44:	b	2ddac <__assert_fail@plt+0x1cc54>
   2dc48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dc4c:	cmp	r3, #0
   2dc50:	beq	2dcf8 <__assert_fail@plt+0x1cba0>
   2dc54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dc58:	lsl	r3, r3, #2
   2dc5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2dc60:	add	r3, r2, r3
   2dc64:	ldr	r3, [r3]
   2dc68:	str	r3, [fp, #-32]	; 0xffffffe0
   2dc6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dc70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc74:	sub	r3, r2, r3
   2dc78:	str	r3, [fp, #-28]	; 0xffffffe4
   2dc7c:	b	2dce8 <__assert_fail@plt+0x1cb90>
   2dc80:	sub	r3, fp, #172	; 0xac
   2dc84:	mov	r0, r3
   2dc88:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dc8c:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   2dc90:	eor	r3, r3, #1
   2dc94:	uxtb	r3, r3
   2dc98:	cmp	r3, #0
   2dc9c:	bne	2dcac <__assert_fail@plt+0x1cb54>
   2dca0:	ldr	r3, [fp, #-144]	; 0xffffff70
   2dca4:	cmp	r3, #0
   2dca8:	beq	2dcb4 <__assert_fail@plt+0x1cb5c>
   2dcac:	mov	r3, #1
   2dcb0:	b	2dcb8 <__assert_fail@plt+0x1cb60>
   2dcb4:	mov	r3, #0
   2dcb8:	cmp	r3, #0
   2dcbc:	bne	2dcc4 <__assert_fail@plt+0x1cb6c>
   2dcc0:	bl	11140 <abort@plt>
   2dcc4:	ldr	r2, [fp, #-156]	; 0xffffff64
   2dcc8:	ldr	r3, [fp, #-152]	; 0xffffff68
   2dccc:	add	r3, r2, r3
   2dcd0:	str	r3, [fp, #-156]	; 0xffffff64
   2dcd4:	mov	r3, #0
   2dcd8:	strb	r3, [fp, #-160]	; 0xffffff60
   2dcdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dce0:	sub	r3, r3, #1
   2dce4:	str	r3, [fp, #-32]	; 0xffffffe0
   2dce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcec:	cmp	r3, #0
   2dcf0:	bne	2dc80 <__assert_fail@plt+0x1cb28>
   2dcf4:	b	2dd6c <__assert_fail@plt+0x1cc14>
   2dcf8:	sub	r3, fp, #172	; 0xac
   2dcfc:	mov	r0, r3
   2dd00:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dd04:	ldrb	r3, [fp, #-148]	; 0xffffff6c
   2dd08:	eor	r3, r3, #1
   2dd0c:	uxtb	r3, r3
   2dd10:	cmp	r3, #0
   2dd14:	bne	2dd24 <__assert_fail@plt+0x1cbcc>
   2dd18:	ldr	r3, [fp, #-144]	; 0xffffff70
   2dd1c:	cmp	r3, #0
   2dd20:	beq	2dd2c <__assert_fail@plt+0x1cbd4>
   2dd24:	mov	r3, #1
   2dd28:	b	2dd30 <__assert_fail@plt+0x1cbd8>
   2dd2c:	mov	r3, #0
   2dd30:	cmp	r3, #0
   2dd34:	bne	2dd3c <__assert_fail@plt+0x1cbe4>
   2dd38:	bl	11140 <abort@plt>
   2dd3c:	ldr	r2, [fp, #-156]	; 0xffffff64
   2dd40:	ldr	r3, [fp, #-152]	; 0xffffff68
   2dd44:	add	r3, r2, r3
   2dd48:	str	r3, [fp, #-156]	; 0xffffff64
   2dd4c:	mov	r3, #0
   2dd50:	strb	r3, [fp, #-160]	; 0xffffff60
   2dd54:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2dd58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2dd5c:	add	r3, r2, r3
   2dd60:	str	r3, [fp, #-100]	; 0xffffff9c
   2dd64:	mov	r3, #0
   2dd68:	strb	r3, [fp, #-104]	; 0xffffff98
   2dd6c:	sub	r3, fp, #116	; 0x74
   2dd70:	mov	r0, r3
   2dd74:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dd78:	ldrb	r3, [fp, #-92]	; 0xffffffa4
   2dd7c:	eor	r3, r3, #1
   2dd80:	uxtb	r3, r3
   2dd84:	cmp	r3, #0
   2dd88:	bne	2dd98 <__assert_fail@plt+0x1cc40>
   2dd8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2dd90:	cmp	r3, #0
   2dd94:	beq	2dda0 <__assert_fail@plt+0x1cc48>
   2dd98:	mov	r3, #1
   2dd9c:	b	2dda4 <__assert_fail@plt+0x1cc4c>
   2dda0:	mov	r3, #0
   2dda4:	cmp	r3, #0
   2dda8:	bne	2dae4 <__assert_fail@plt+0x1c98c>
   2ddac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ddb0:	bl	2f910 <__assert_fail@plt+0x1e7b8>
   2ddb4:	mov	r3, #1
   2ddb8:	mov	r0, r3
   2ddbc:	sub	sp, fp, #12
   2ddc0:	pop	{r4, r5, fp, pc}
   2ddc4:	push	{r4, fp, lr}
   2ddc8:	add	fp, sp, #8
   2ddcc:	sub	sp, sp, #356	; 0x164
   2ddd0:	str	r0, [fp, #-360]	; 0xfffffe98
   2ddd4:	str	r1, [fp, #-364]	; 0xfffffe94
   2ddd8:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2dddc:	mov	r3, r0
   2dde0:	cmp	r3, #1
   2dde4:	bls	2e334 <__assert_fail@plt+0x1d1dc>
   2dde8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2ddec:	str	r3, [fp, #-336]	; 0xfffffeb0
   2ddf0:	mov	r3, #0
   2ddf4:	strb	r3, [fp, #-352]	; 0xfffffea0
   2ddf8:	sub	r3, fp, #352	; 0x160
   2ddfc:	add	r3, r3, #4
   2de00:	mov	r2, #8
   2de04:	mov	r1, #0
   2de08:	mov	r0, r3
   2de0c:	bl	11098 <memset@plt>
   2de10:	mov	r3, #0
   2de14:	strb	r3, [fp, #-340]	; 0xfffffeac
   2de18:	sub	r3, fp, #352	; 0x160
   2de1c:	mov	r0, r3
   2de20:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2de24:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   2de28:	eor	r3, r3, #1
   2de2c:	uxtb	r3, r3
   2de30:	cmp	r3, #0
   2de34:	bne	2de44 <__assert_fail@plt+0x1ccec>
   2de38:	ldr	r3, [fp, #-324]	; 0xfffffebc
   2de3c:	cmp	r3, #0
   2de40:	beq	2de4c <__assert_fail@plt+0x1ccf4>
   2de44:	mov	r3, #1
   2de48:	b	2de50 <__assert_fail@plt+0x1ccf8>
   2de4c:	mov	r3, #0
   2de50:	cmp	r3, #0
   2de54:	beq	2e32c <__assert_fail@plt+0x1d1d4>
   2de58:	mov	r3, #1
   2de5c:	strb	r3, [fp, #-13]
   2de60:	mov	r3, #0
   2de64:	str	r3, [fp, #-20]	; 0xffffffec
   2de68:	mov	r3, #0
   2de6c:	str	r3, [fp, #-24]	; 0xffffffe8
   2de70:	mov	r3, #0
   2de74:	str	r3, [fp, #-28]	; 0xffffffe4
   2de78:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2de7c:	str	r3, [fp, #-280]	; 0xfffffee8
   2de80:	mov	r3, #0
   2de84:	strb	r3, [fp, #-296]	; 0xfffffed8
   2de88:	sub	r3, fp, #296	; 0x128
   2de8c:	add	r3, r3, #4
   2de90:	mov	r2, #8
   2de94:	mov	r1, #0
   2de98:	mov	r0, r3
   2de9c:	bl	11098 <memset@plt>
   2dea0:	mov	r3, #0
   2dea4:	strb	r3, [fp, #-284]	; 0xfffffee4
   2dea8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2deac:	str	r3, [fp, #-224]	; 0xffffff20
   2deb0:	mov	r3, #0
   2deb4:	strb	r3, [fp, #-240]	; 0xffffff10
   2deb8:	sub	r3, fp, #240	; 0xf0
   2debc:	add	r3, r3, #4
   2dec0:	mov	r2, #8
   2dec4:	mov	r1, #0
   2dec8:	mov	r0, r3
   2decc:	bl	11098 <memset@plt>
   2ded0:	mov	r3, #0
   2ded4:	strb	r3, [fp, #-228]	; 0xffffff1c
   2ded8:	sub	r3, fp, #240	; 0xf0
   2dedc:	mov	r0, r3
   2dee0:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dee4:	ldrb	r3, [fp, #-216]	; 0xffffff28
   2dee8:	eor	r3, r3, #1
   2deec:	uxtb	r3, r3
   2def0:	cmp	r3, #0
   2def4:	bne	2df04 <__assert_fail@plt+0x1cdac>
   2def8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2defc:	cmp	r3, #0
   2df00:	beq	2df0c <__assert_fail@plt+0x1cdb4>
   2df04:	mov	r3, #1
   2df08:	b	2df10 <__assert_fail@plt+0x1cdb8>
   2df0c:	mov	r3, #0
   2df10:	cmp	r3, #0
   2df14:	bne	2df20 <__assert_fail@plt+0x1cdc8>
   2df18:	mov	r3, #0
   2df1c:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2df20:	ldrb	r3, [fp, #-13]
   2df24:	cmp	r3, #0
   2df28:	beq	2e058 <__assert_fail@plt+0x1cf00>
   2df2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2df30:	cmp	r3, #9
   2df34:	bls	2e058 <__assert_fail@plt+0x1cf00>
   2df38:	ldr	r2, [fp, #-20]	; 0xffffffec
   2df3c:	mov	r3, r2
   2df40:	lsl	r3, r3, #2
   2df44:	add	r2, r3, r2
   2df48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2df4c:	cmp	r2, r3
   2df50:	bhi	2e058 <__assert_fail@plt+0x1cf00>
   2df54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2df58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2df5c:	sub	r3, r2, r3
   2df60:	str	r3, [fp, #-32]	; 0xffffffe0
   2df64:	b	2df8c <__assert_fail@plt+0x1ce34>
   2df68:	ldr	r2, [fp, #-280]	; 0xfffffee8
   2df6c:	ldr	r3, [fp, #-276]	; 0xfffffeec
   2df70:	add	r3, r2, r3
   2df74:	str	r3, [fp, #-280]	; 0xfffffee8
   2df78:	mov	r3, #0
   2df7c:	strb	r3, [fp, #-284]	; 0xfffffee4
   2df80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df84:	sub	r3, r3, #1
   2df88:	str	r3, [fp, #-32]	; 0xffffffe0
   2df8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df90:	cmp	r3, #0
   2df94:	beq	2dfd8 <__assert_fail@plt+0x1ce80>
   2df98:	sub	r3, fp, #296	; 0x128
   2df9c:	mov	r0, r3
   2dfa0:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dfa4:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   2dfa8:	eor	r3, r3, #1
   2dfac:	uxtb	r3, r3
   2dfb0:	cmp	r3, #0
   2dfb4:	bne	2dfc4 <__assert_fail@plt+0x1ce6c>
   2dfb8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   2dfbc:	cmp	r3, #0
   2dfc0:	beq	2dfcc <__assert_fail@plt+0x1ce74>
   2dfc4:	mov	r3, #1
   2dfc8:	b	2dfd0 <__assert_fail@plt+0x1ce78>
   2dfcc:	mov	r3, #0
   2dfd0:	cmp	r3, #0
   2dfd4:	bne	2df68 <__assert_fail@plt+0x1ce10>
   2dfd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dfdc:	str	r3, [fp, #-28]	; 0xffffffe4
   2dfe0:	sub	r3, fp, #296	; 0x128
   2dfe4:	mov	r0, r3
   2dfe8:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2dfec:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   2dff0:	eor	r3, r3, #1
   2dff4:	uxtb	r3, r3
   2dff8:	cmp	r3, #0
   2dffc:	bne	2e00c <__assert_fail@plt+0x1ceb4>
   2e000:	ldr	r3, [fp, #-268]	; 0xfffffef4
   2e004:	cmp	r3, #0
   2e008:	beq	2e014 <__assert_fail@plt+0x1cebc>
   2e00c:	mov	r3, #1
   2e010:	b	2e018 <__assert_fail@plt+0x1cec0>
   2e014:	mov	r3, #0
   2e018:	cmp	r3, #0
   2e01c:	bne	2e058 <__assert_fail@plt+0x1cf00>
   2e020:	sub	r3, fp, #68	; 0x44
   2e024:	mov	r2, r3
   2e028:	ldr	r1, [fp, #-364]	; 0xfffffe94
   2e02c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   2e030:	bl	2d674 <__assert_fail@plt+0x1c51c>
   2e034:	mov	r3, r0
   2e038:	strb	r3, [fp, #-61]	; 0xffffffc3
   2e03c:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   2e040:	cmp	r3, #0
   2e044:	beq	2e050 <__assert_fail@plt+0x1cef8>
   2e048:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2e04c:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e050:	mov	r3, #0
   2e054:	strb	r3, [fp, #-13]
   2e058:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e05c:	add	r3, r3, #1
   2e060:	str	r3, [fp, #-20]	; 0xffffffec
   2e064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e068:	add	r3, r3, #1
   2e06c:	str	r3, [fp, #-24]	; 0xffffffe8
   2e070:	ldrb	r3, [fp, #-216]	; 0xffffff28
   2e074:	cmp	r3, #0
   2e078:	beq	2e0a4 <__assert_fail@plt+0x1cf4c>
   2e07c:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   2e080:	cmp	r3, #0
   2e084:	beq	2e0a4 <__assert_fail@plt+0x1cf4c>
   2e088:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2e08c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   2e090:	cmp	r2, r3
   2e094:	moveq	r3, #1
   2e098:	movne	r3, #0
   2e09c:	uxtb	r3, r3
   2e0a0:	b	2e0e8 <__assert_fail@plt+0x1cf90>
   2e0a4:	ldr	r2, [fp, #-220]	; 0xffffff24
   2e0a8:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   2e0ac:	cmp	r2, r3
   2e0b0:	bne	2e0dc <__assert_fail@plt+0x1cf84>
   2e0b4:	ldr	r3, [fp, #-224]	; 0xffffff20
   2e0b8:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   2e0bc:	ldr	r2, [fp, #-220]	; 0xffffff24
   2e0c0:	mov	r0, r3
   2e0c4:	bl	10f18 <memcmp@plt>
   2e0c8:	mov	r3, r0
   2e0cc:	cmp	r3, #0
   2e0d0:	bne	2e0dc <__assert_fail@plt+0x1cf84>
   2e0d4:	mov	r3, #1
   2e0d8:	b	2e0e0 <__assert_fail@plt+0x1cf88>
   2e0dc:	mov	r3, #0
   2e0e0:	and	r3, r3, #1
   2e0e4:	uxtb	r3, r3
   2e0e8:	cmp	r3, #0
   2e0ec:	beq	2e310 <__assert_fail@plt+0x1d1b8>
   2e0f0:	sub	ip, fp, #184	; 0xb8
   2e0f4:	sub	lr, fp, #240	; 0xf0
   2e0f8:	ldm	lr!, {r0, r1, r2, r3}
   2e0fc:	stmia	ip!, {r0, r1, r2, r3}
   2e100:	ldm	lr!, {r0, r1, r2, r3}
   2e104:	stmia	ip!, {r0, r1, r2, r3}
   2e108:	ldm	lr!, {r0, r1, r2, r3}
   2e10c:	stmia	ip!, {r0, r1, r2, r3}
   2e110:	ldm	lr, {r0, r1}
   2e114:	stm	ip, {r0, r1}
   2e118:	ldr	r2, [fp, #-168]	; 0xffffff58
   2e11c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2e120:	add	r3, r2, r3
   2e124:	str	r3, [fp, #-168]	; 0xffffff58
   2e128:	mov	r3, #0
   2e12c:	strb	r3, [fp, #-172]	; 0xffffff54
   2e130:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e134:	str	r3, [fp, #-112]	; 0xffffff90
   2e138:	mov	r3, #0
   2e13c:	strb	r3, [fp, #-128]	; 0xffffff80
   2e140:	sub	r3, fp, #128	; 0x80
   2e144:	add	r3, r3, #4
   2e148:	mov	r2, #8
   2e14c:	mov	r1, #0
   2e150:	mov	r0, r3
   2e154:	bl	11098 <memset@plt>
   2e158:	mov	r3, #0
   2e15c:	strb	r3, [fp, #-116]	; 0xffffff8c
   2e160:	sub	r3, fp, #128	; 0x80
   2e164:	mov	r0, r3
   2e168:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2e16c:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2e170:	eor	r3, r3, #1
   2e174:	uxtb	r3, r3
   2e178:	cmp	r3, #0
   2e17c:	bne	2e18c <__assert_fail@plt+0x1d034>
   2e180:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2e184:	cmp	r3, #0
   2e188:	beq	2e194 <__assert_fail@plt+0x1d03c>
   2e18c:	mov	r3, #1
   2e190:	b	2e198 <__assert_fail@plt+0x1d040>
   2e194:	mov	r3, #0
   2e198:	cmp	r3, #0
   2e19c:	bne	2e1a4 <__assert_fail@plt+0x1d04c>
   2e1a0:	bl	11140 <abort@plt>
   2e1a4:	ldr	r2, [fp, #-112]	; 0xffffff90
   2e1a8:	ldr	r3, [fp, #-108]	; 0xffffff94
   2e1ac:	add	r3, r2, r3
   2e1b0:	str	r3, [fp, #-112]	; 0xffffff90
   2e1b4:	mov	r3, #0
   2e1b8:	strb	r3, [fp, #-116]	; 0xffffff8c
   2e1bc:	sub	r3, fp, #128	; 0x80
   2e1c0:	mov	r0, r3
   2e1c4:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2e1c8:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2e1cc:	eor	r3, r3, #1
   2e1d0:	uxtb	r3, r3
   2e1d4:	cmp	r3, #0
   2e1d8:	bne	2e1e8 <__assert_fail@plt+0x1d090>
   2e1dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2e1e0:	cmp	r3, #0
   2e1e4:	beq	2e1f0 <__assert_fail@plt+0x1d098>
   2e1e8:	mov	r3, #1
   2e1ec:	b	2e1f4 <__assert_fail@plt+0x1d09c>
   2e1f0:	mov	r3, #0
   2e1f4:	cmp	r3, #0
   2e1f8:	bne	2e204 <__assert_fail@plt+0x1d0ac>
   2e1fc:	ldr	r3, [fp, #-224]	; 0xffffff20
   2e200:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e204:	sub	r3, fp, #184	; 0xb8
   2e208:	mov	r0, r3
   2e20c:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2e210:	ldrb	r3, [fp, #-160]	; 0xffffff60
   2e214:	eor	r3, r3, #1
   2e218:	uxtb	r3, r3
   2e21c:	cmp	r3, #0
   2e220:	bne	2e230 <__assert_fail@plt+0x1d0d8>
   2e224:	ldr	r3, [fp, #-156]	; 0xffffff64
   2e228:	cmp	r3, #0
   2e22c:	beq	2e238 <__assert_fail@plt+0x1d0e0>
   2e230:	mov	r3, #1
   2e234:	b	2e23c <__assert_fail@plt+0x1d0e4>
   2e238:	mov	r3, #0
   2e23c:	cmp	r3, #0
   2e240:	bne	2e24c <__assert_fail@plt+0x1d0f4>
   2e244:	mov	r3, #0
   2e248:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e250:	add	r3, r3, #1
   2e254:	str	r3, [fp, #-24]	; 0xffffffe8
   2e258:	ldrb	r3, [fp, #-160]	; 0xffffff60
   2e25c:	cmp	r3, #0
   2e260:	beq	2e28c <__assert_fail@plt+0x1d134>
   2e264:	ldrb	r3, [fp, #-104]	; 0xffffff98
   2e268:	cmp	r3, #0
   2e26c:	beq	2e28c <__assert_fail@plt+0x1d134>
   2e270:	ldr	r2, [fp, #-156]	; 0xffffff64
   2e274:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2e278:	cmp	r2, r3
   2e27c:	movne	r3, #1
   2e280:	moveq	r3, #0
   2e284:	uxtb	r3, r3
   2e288:	b	2e2d0 <__assert_fail@plt+0x1d178>
   2e28c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2e290:	ldr	r3, [fp, #-108]	; 0xffffff94
   2e294:	cmp	r2, r3
   2e298:	bne	2e2bc <__assert_fail@plt+0x1d164>
   2e29c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2e2a0:	ldr	r1, [fp, #-112]	; 0xffffff90
   2e2a4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2e2a8:	mov	r0, r3
   2e2ac:	bl	10f18 <memcmp@plt>
   2e2b0:	mov	r3, r0
   2e2b4:	cmp	r3, #0
   2e2b8:	beq	2e2c4 <__assert_fail@plt+0x1d16c>
   2e2bc:	mov	r3, #1
   2e2c0:	b	2e2c8 <__assert_fail@plt+0x1d170>
   2e2c4:	mov	r3, #0
   2e2c8:	and	r3, r3, #1
   2e2cc:	uxtb	r3, r3
   2e2d0:	cmp	r3, #0
   2e2d4:	bne	2e30c <__assert_fail@plt+0x1d1b4>
   2e2d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   2e2dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   2e2e0:	add	r3, r2, r3
   2e2e4:	str	r3, [fp, #-168]	; 0xffffff58
   2e2e8:	mov	r3, #0
   2e2ec:	strb	r3, [fp, #-172]	; 0xffffff54
   2e2f0:	ldr	r2, [fp, #-112]	; 0xffffff90
   2e2f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   2e2f8:	add	r3, r2, r3
   2e2fc:	str	r3, [fp, #-112]	; 0xffffff90
   2e300:	mov	r3, #0
   2e304:	strb	r3, [fp, #-116]	; 0xffffff8c
   2e308:	b	2e1bc <__assert_fail@plt+0x1d064>
   2e30c:	nop			; (mov r0, r0)
   2e310:	ldr	r2, [fp, #-224]	; 0xffffff20
   2e314:	ldr	r3, [fp, #-220]	; 0xffffff24
   2e318:	add	r3, r2, r3
   2e31c:	str	r3, [fp, #-224]	; 0xffffff20
   2e320:	mov	r3, #0
   2e324:	strb	r3, [fp, #-228]	; 0xffffff1c
   2e328:	b	2ded8 <__assert_fail@plt+0x1cd80>
   2e32c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e330:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e334:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e338:	ldrb	r3, [r3]
   2e33c:	cmp	r3, #0
   2e340:	beq	2e540 <__assert_fail@plt+0x1d3e8>
   2e344:	mov	r3, #1
   2e348:	strb	r3, [fp, #-33]	; 0xffffffdf
   2e34c:	mov	r3, #0
   2e350:	str	r3, [fp, #-40]	; 0xffffffd8
   2e354:	mov	r3, #0
   2e358:	str	r3, [fp, #-44]	; 0xffffffd4
   2e35c:	mov	r3, #0
   2e360:	str	r3, [fp, #-48]	; 0xffffffd0
   2e364:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e368:	str	r3, [fp, #-52]	; 0xffffffcc
   2e36c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e370:	add	r2, r3, #1
   2e374:	str	r2, [fp, #-364]	; 0xfffffe94
   2e378:	ldrb	r3, [r3]
   2e37c:	strb	r3, [fp, #-62]	; 0xffffffc2
   2e380:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e384:	ldrb	r3, [r3]
   2e388:	cmp	r3, #0
   2e38c:	bne	2e398 <__assert_fail@plt+0x1d240>
   2e390:	mov	r3, #0
   2e394:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e398:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2e39c:	cmp	r3, #0
   2e3a0:	beq	2e47c <__assert_fail@plt+0x1d324>
   2e3a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e3a8:	cmp	r3, #9
   2e3ac:	bls	2e47c <__assert_fail@plt+0x1d324>
   2e3b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e3b4:	mov	r3, r2
   2e3b8:	lsl	r3, r3, #2
   2e3bc:	add	r2, r3, r2
   2e3c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e3c4:	cmp	r2, r3
   2e3c8:	bhi	2e47c <__assert_fail@plt+0x1d324>
   2e3cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e3d0:	cmp	r3, #0
   2e3d4:	beq	2e420 <__assert_fail@plt+0x1d2c8>
   2e3d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2e3dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e3e0:	sub	r3, r2, r3
   2e3e4:	mov	r1, r3
   2e3e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2e3ec:	bl	110d4 <strnlen@plt>
   2e3f0:	mov	r2, r0
   2e3f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e3f8:	add	r3, r3, r2
   2e3fc:	str	r3, [fp, #-52]	; 0xffffffcc
   2e400:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e404:	ldrb	r3, [r3]
   2e408:	cmp	r3, #0
   2e40c:	bne	2e418 <__assert_fail@plt+0x1d2c0>
   2e410:	mov	r3, #0
   2e414:	str	r3, [fp, #-52]	; 0xffffffcc
   2e418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e41c:	str	r3, [fp, #-48]	; 0xffffffd0
   2e420:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e424:	cmp	r3, #0
   2e428:	bne	2e47c <__assert_fail@plt+0x1d324>
   2e42c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e430:	sub	r4, r3, #1
   2e434:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e438:	sub	r3, r3, #1
   2e43c:	mov	r0, r3
   2e440:	bl	11050 <strlen@plt>
   2e444:	mov	r2, r0
   2e448:	sub	r3, fp, #72	; 0x48
   2e44c:	mov	r1, r4
   2e450:	ldr	r0, [fp, #-360]	; 0xfffffe98
   2e454:	bl	2d374 <__assert_fail@plt+0x1c21c>
   2e458:	mov	r3, r0
   2e45c:	strb	r3, [fp, #-63]	; 0xffffffc1
   2e460:	ldrb	r3, [fp, #-63]	; 0xffffffc1
   2e464:	cmp	r3, #0
   2e468:	beq	2e474 <__assert_fail@plt+0x1d31c>
   2e46c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2e470:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e474:	mov	r3, #0
   2e478:	strb	r3, [fp, #-33]	; 0xffffffdf
   2e47c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e480:	add	r3, r3, #1
   2e484:	str	r3, [fp, #-40]	; 0xffffffd8
   2e488:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e48c:	add	r3, r3, #1
   2e490:	str	r3, [fp, #-44]	; 0xffffffd4
   2e494:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e498:	ldrb	r3, [r3]
   2e49c:	ldrb	r2, [fp, #-62]	; 0xffffffc2
   2e4a0:	cmp	r2, r3
   2e4a4:	bne	2e530 <__assert_fail@plt+0x1d3d8>
   2e4a8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e4ac:	add	r3, r3, #1
   2e4b0:	str	r3, [fp, #-56]	; 0xffffffc8
   2e4b4:	ldr	r3, [fp, #-364]	; 0xfffffe94
   2e4b8:	str	r3, [fp, #-60]	; 0xffffffc4
   2e4bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e4c0:	ldrb	r3, [r3]
   2e4c4:	cmp	r3, #0
   2e4c8:	bne	2e4d4 <__assert_fail@plt+0x1d37c>
   2e4cc:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e4d0:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e4d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e4d8:	ldrb	r3, [r3]
   2e4dc:	cmp	r3, #0
   2e4e0:	bne	2e4ec <__assert_fail@plt+0x1d394>
   2e4e4:	mov	r3, #0
   2e4e8:	b	2e544 <__assert_fail@plt+0x1d3ec>
   2e4ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e4f0:	add	r3, r3, #1
   2e4f4:	str	r3, [fp, #-44]	; 0xffffffd4
   2e4f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e4fc:	ldrb	r2, [r3]
   2e500:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e504:	ldrb	r3, [r3]
   2e508:	cmp	r2, r3
   2e50c:	bne	2e52c <__assert_fail@plt+0x1d3d4>
   2e510:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2e514:	add	r3, r3, #1
   2e518:	str	r3, [fp, #-56]	; 0xffffffc8
   2e51c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e520:	add	r3, r3, #1
   2e524:	str	r3, [fp, #-60]	; 0xffffffc4
   2e528:	b	2e4bc <__assert_fail@plt+0x1d364>
   2e52c:	nop			; (mov r0, r0)
   2e530:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e534:	add	r3, r3, #1
   2e538:	str	r3, [fp, #-360]	; 0xfffffe98
   2e53c:	b	2e380 <__assert_fail@plt+0x1d228>
   2e540:	ldr	r3, [fp, #-360]	; 0xfffffe98
   2e544:	mov	r0, r3
   2e548:	sub	sp, fp, #8
   2e54c:	pop	{r4, fp, pc}
   2e550:	push	{r4, r5, r6, fp, lr}
   2e554:	add	fp, sp, #16
   2e558:	sub	sp, sp, #12
   2e55c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e564:	ldrb	r3, [r3, #12]
   2e568:	cmp	r3, #0
   2e56c:	bne	2e77c <__assert_fail@plt+0x1d624>
   2e570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e574:	ldrb	r3, [r3]
   2e578:	cmp	r3, #0
   2e57c:	bne	2e614 <__assert_fail@plt+0x1d4bc>
   2e580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e584:	ldr	r3, [r3, #16]
   2e588:	ldrb	r3, [r3]
   2e58c:	mov	r0, r3
   2e590:	bl	2fa88 <__assert_fail@plt+0x1e930>
   2e594:	mov	r3, r0
   2e598:	cmp	r3, #0
   2e59c:	beq	2e5d4 <__assert_fail@plt+0x1d47c>
   2e5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5a4:	mov	r2, #1
   2e5a8:	str	r2, [r3, #20]
   2e5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5b0:	ldr	r3, [r3, #16]
   2e5b4:	ldrb	r3, [r3]
   2e5b8:	mov	r2, r3
   2e5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5c0:	str	r2, [r3, #28]
   2e5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5c8:	mov	r2, #1
   2e5cc:	strb	r2, [r3, #24]
   2e5d0:	b	2e76c <__assert_fail@plt+0x1d614>
   2e5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e5d8:	add	r3, r3, #4
   2e5dc:	mov	r0, r3
   2e5e0:	bl	10f0c <mbsinit@plt>
   2e5e4:	mov	r3, r0
   2e5e8:	cmp	r3, #0
   2e5ec:	bne	2e604 <__assert_fail@plt+0x1d4ac>
   2e5f0:	ldr	r3, [pc, #400]	; 2e788 <__assert_fail@plt+0x1d630>
   2e5f4:	mov	r2, #143	; 0x8f
   2e5f8:	ldr	r1, [pc, #396]	; 2e78c <__assert_fail@plt+0x1d634>
   2e5fc:	ldr	r0, [pc, #396]	; 2e790 <__assert_fail@plt+0x1d638>
   2e600:	bl	11158 <__assert_fail@plt>
   2e604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e608:	mov	r2, #1
   2e60c:	strb	r2, [r3]
   2e610:	b	2e618 <__assert_fail@plt+0x1d4c0>
   2e614:	nop			; (mov r0, r0)
   2e618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e61c:	add	r4, r3, #28
   2e620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e624:	ldr	r5, [r3, #16]
   2e628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e62c:	ldr	r6, [r3, #16]
   2e630:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2e634:	mov	r3, r0
   2e638:	mov	r1, r3
   2e63c:	mov	r0, r6
   2e640:	bl	2f184 <__assert_fail@plt+0x1e02c>
   2e644:	mov	r2, r0
   2e648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e64c:	add	r3, r3, #4
   2e650:	mov	r1, r5
   2e654:	mov	r0, r4
   2e658:	bl	2d2c8 <__assert_fail@plt+0x1c170>
   2e65c:	mov	r2, r0
   2e660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e664:	str	r2, [r3, #20]
   2e668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e66c:	ldr	r3, [r3, #20]
   2e670:	cmn	r3, #1
   2e674:	bne	2e694 <__assert_fail@plt+0x1d53c>
   2e678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e67c:	mov	r2, #1
   2e680:	str	r2, [r3, #20]
   2e684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e688:	mov	r2, #0
   2e68c:	strb	r2, [r3, #24]
   2e690:	b	2e76c <__assert_fail@plt+0x1d614>
   2e694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e698:	ldr	r3, [r3, #20]
   2e69c:	cmn	r3, #2
   2e6a0:	bne	2e6d0 <__assert_fail@plt+0x1d578>
   2e6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6a8:	ldr	r3, [r3, #16]
   2e6ac:	mov	r0, r3
   2e6b0:	bl	11050 <strlen@plt>
   2e6b4:	mov	r2, r0
   2e6b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6bc:	str	r2, [r3, #20]
   2e6c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6c4:	mov	r2, #0
   2e6c8:	strb	r2, [r3, #24]
   2e6cc:	b	2e76c <__assert_fail@plt+0x1d614>
   2e6d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6d4:	ldr	r3, [r3, #20]
   2e6d8:	cmp	r3, #0
   2e6dc:	bne	2e738 <__assert_fail@plt+0x1d5e0>
   2e6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6e4:	mov	r2, #1
   2e6e8:	str	r2, [r3, #20]
   2e6ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e6f0:	ldr	r3, [r3, #16]
   2e6f4:	ldrb	r3, [r3]
   2e6f8:	cmp	r3, #0
   2e6fc:	beq	2e714 <__assert_fail@plt+0x1d5bc>
   2e700:	ldr	r3, [pc, #128]	; 2e788 <__assert_fail@plt+0x1d630>
   2e704:	mov	r2, #171	; 0xab
   2e708:	ldr	r1, [pc, #124]	; 2e78c <__assert_fail@plt+0x1d634>
   2e70c:	ldr	r0, [pc, #128]	; 2e794 <__assert_fail@plt+0x1d63c>
   2e710:	bl	11158 <__assert_fail@plt>
   2e714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e718:	ldr	r3, [r3, #28]
   2e71c:	cmp	r3, #0
   2e720:	beq	2e738 <__assert_fail@plt+0x1d5e0>
   2e724:	ldr	r3, [pc, #92]	; 2e788 <__assert_fail@plt+0x1d630>
   2e728:	mov	r2, #172	; 0xac
   2e72c:	ldr	r1, [pc, #88]	; 2e78c <__assert_fail@plt+0x1d634>
   2e730:	ldr	r0, [pc, #96]	; 2e798 <__assert_fail@plt+0x1d640>
   2e734:	bl	11158 <__assert_fail@plt>
   2e738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e73c:	mov	r2, #1
   2e740:	strb	r2, [r3, #24]
   2e744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e748:	add	r3, r3, #4
   2e74c:	mov	r0, r3
   2e750:	bl	10f0c <mbsinit@plt>
   2e754:	mov	r3, r0
   2e758:	cmp	r3, #0
   2e75c:	beq	2e76c <__assert_fail@plt+0x1d614>
   2e760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e764:	mov	r2, #0
   2e768:	strb	r2, [r3]
   2e76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e770:	mov	r2, #1
   2e774:	strb	r2, [r3, #12]
   2e778:	b	2e780 <__assert_fail@plt+0x1d628>
   2e77c:	nop			; (mov r0, r0)
   2e780:	sub	sp, fp, #16
   2e784:	pop	{r4, r5, r6, fp, pc}
   2e788:	andeq	r4, r3, r0, asr #16
   2e78c:	andeq	r4, r3, ip, ror #15
   2e790:	strdeq	r4, [r3], -ip
   2e794:	andeq	r4, r3, r4, lsl r8
   2e798:	andeq	r4, r3, ip, lsr #16
   2e79c:	push	{fp}		; (str fp, [sp, #-4]!)
   2e7a0:	add	fp, sp, #0
   2e7a4:	sub	sp, sp, #12
   2e7a8:	str	r0, [fp, #-8]
   2e7ac:	str	r1, [fp, #-12]
   2e7b0:	ldr	r3, [fp, #-8]
   2e7b4:	ldr	r2, [r3, #16]
   2e7b8:	ldr	r3, [fp, #-12]
   2e7bc:	add	r2, r2, r3
   2e7c0:	ldr	r3, [fp, #-8]
   2e7c4:	str	r2, [r3, #16]
   2e7c8:	nop			; (mov r0, r0)
   2e7cc:	add	sp, fp, #0
   2e7d0:	pop	{fp}		; (ldr fp, [sp], #4)
   2e7d4:	bx	lr
   2e7d8:	push	{fp, lr}
   2e7dc:	add	fp, sp, #4
   2e7e0:	sub	sp, sp, #8
   2e7e4:	str	r0, [fp, #-8]
   2e7e8:	str	r1, [fp, #-12]
   2e7ec:	ldr	r3, [fp, #-12]
   2e7f0:	ldrb	r2, [r3]
   2e7f4:	ldr	r3, [fp, #-8]
   2e7f8:	strb	r2, [r3]
   2e7fc:	ldr	r3, [fp, #-8]
   2e800:	ldrb	r3, [r3]
   2e804:	cmp	r3, #0
   2e808:	beq	2e82c <__assert_fail@plt+0x1d6d4>
   2e80c:	ldr	r3, [fp, #-8]
   2e810:	add	r0, r3, #4
   2e814:	ldr	r3, [fp, #-12]
   2e818:	add	r3, r3, #4
   2e81c:	mov	r2, #8
   2e820:	mov	r1, r3
   2e824:	bl	10f00 <memcpy@plt>
   2e828:	b	2e844 <__assert_fail@plt+0x1d6ec>
   2e82c:	ldr	r3, [fp, #-8]
   2e830:	add	r3, r3, #4
   2e834:	mov	r2, #8
   2e838:	mov	r1, #0
   2e83c:	mov	r0, r3
   2e840:	bl	11098 <memset@plt>
   2e844:	ldr	r3, [fp, #-12]
   2e848:	ldrb	r2, [r3, #12]
   2e84c:	ldr	r3, [fp, #-8]
   2e850:	strb	r2, [r3, #12]
   2e854:	ldr	r3, [fp, #-8]
   2e858:	add	r2, r3, #16
   2e85c:	ldr	r3, [fp, #-12]
   2e860:	add	r3, r3, #16
   2e864:	mov	r1, r3
   2e868:	mov	r0, r2
   2e86c:	bl	2f9cc <__assert_fail@plt+0x1e874>
   2e870:	nop			; (mov r0, r0)
   2e874:	sub	sp, fp, #4
   2e878:	pop	{fp, pc}
   2e87c:	push	{fp, lr}
   2e880:	add	fp, sp, #4
   2e884:	sub	sp, sp, #24
   2e888:	str	r0, [fp, #-16]
   2e88c:	str	r1, [fp, #-20]	; 0xffffffec
   2e890:	str	r2, [fp, #-24]	; 0xffffffe8
   2e894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e898:	cmp	r3, #0
   2e89c:	beq	2e8d8 <__assert_fail@plt+0x1d780>
   2e8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e8a4:	mvn	r0, #0
   2e8a8:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   2e8ac:	mov	r3, r0
   2e8b0:	mov	r2, r3
   2e8b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8b8:	cmp	r2, r3
   2e8bc:	bcs	2e8d8 <__assert_fail@plt+0x1d780>
   2e8c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8c8:	mul	r3, r2, r3
   2e8cc:	str	r3, [fp, #-8]
   2e8d0:	mov	r3, #1
   2e8d4:	b	2e8ec <__assert_fail@plt+0x1d794>
   2e8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e8dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8e0:	mul	r3, r2, r3
   2e8e4:	str	r3, [fp, #-8]
   2e8e8:	mov	r3, #0
   2e8ec:	cmp	r3, #0
   2e8f0:	beq	2e90c <__assert_fail@plt+0x1d7b4>
   2e8f4:	bl	11074 <__errno_location@plt>
   2e8f8:	mov	r2, r0
   2e8fc:	mov	r3, #12
   2e900:	str	r3, [r2]
   2e904:	mov	r3, #0
   2e908:	b	2e920 <__assert_fail@plt+0x1d7c8>
   2e90c:	ldr	r3, [fp, #-8]
   2e910:	mov	r1, r3
   2e914:	ldr	r0, [fp, #-16]
   2e918:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2e91c:	mov	r3, r0
   2e920:	mov	r0, r3
   2e924:	sub	sp, fp, #4
   2e928:	pop	{fp, pc}
   2e92c:	push	{fp, lr}
   2e930:	add	fp, sp, #4
   2e934:	sub	sp, sp, #4160	; 0x1040
   2e938:	sub	sp, sp, #32
   2e93c:	sub	ip, fp, #4096	; 0x1000
   2e940:	sub	ip, ip, #4
   2e944:	str	r0, [ip, #-76]	; 0xffffffb4
   2e948:	sub	r0, fp, #4096	; 0x1000
   2e94c:	sub	r0, r0, #4
   2e950:	str	r1, [r0, #-80]	; 0xffffffb0
   2e954:	sub	r1, fp, #4096	; 0x1000
   2e958:	sub	r1, r1, #4
   2e95c:	str	r2, [r1, #-84]	; 0xffffffac
   2e960:	sub	r2, fp, #4096	; 0x1000
   2e964:	sub	r2, r2, #4
   2e968:	str	r3, [r2, #-88]	; 0xffffffa8
   2e96c:	sub	r3, fp, #4096	; 0x1000
   2e970:	sub	r3, r3, #4
   2e974:	mov	r0, r3
   2e978:	mov	r3, #0
   2e97c:	str	r3, [sp]
   2e980:	mov	r3, #0
   2e984:	mov	r2, #0
   2e988:	mov	r1, #0
   2e98c:	ldr	r0, [r0, #-84]	; 0xffffffac
   2e990:	bl	10ea0 <iconv@plt>
   2e994:	mov	r3, #0
   2e998:	str	r3, [fp, #-12]
   2e99c:	sub	r3, fp, #4096	; 0x1000
   2e9a0:	sub	r3, r3, #4
   2e9a4:	ldr	r3, [r3, #-76]	; 0xffffffb4
   2e9a8:	str	r3, [fp, #-36]	; 0xffffffdc
   2e9ac:	sub	r3, fp, #4096	; 0x1000
   2e9b0:	sub	r3, r3, #4
   2e9b4:	ldr	r3, [r3, #-80]	; 0xffffffb0
   2e9b8:	str	r3, [fp, #-40]	; 0xffffffd8
   2e9bc:	b	2ea6c <__assert_fail@plt+0x1d914>
   2e9c0:	sub	r3, fp, #4160	; 0x1040
   2e9c4:	sub	r3, r3, #4
   2e9c8:	sub	r3, r3, #4
   2e9cc:	str	r3, [fp, #-44]	; 0xffffffd4
   2e9d0:	mov	r3, #4096	; 0x1000
   2e9d4:	str	r3, [fp, #-48]	; 0xffffffd0
   2e9d8:	sub	ip, fp, #44	; 0x2c
   2e9dc:	sub	r2, fp, #40	; 0x28
   2e9e0:	sub	r1, fp, #36	; 0x24
   2e9e4:	sub	r3, fp, #4096	; 0x1000
   2e9e8:	sub	r3, r3, #4
   2e9ec:	mov	r0, r3
   2e9f0:	sub	r3, fp, #48	; 0x30
   2e9f4:	str	r3, [sp]
   2e9f8:	mov	r3, ip
   2e9fc:	ldr	r0, [r0, #-84]	; 0xffffffac
   2ea00:	bl	10ea0 <iconv@plt>
   2ea04:	str	r0, [fp, #-16]
   2ea08:	ldr	r3, [fp, #-16]
   2ea0c:	cmn	r3, #1
   2ea10:	bne	2ea44 <__assert_fail@plt+0x1d8ec>
   2ea14:	bl	11074 <__errno_location@plt>
   2ea18:	mov	r3, r0
   2ea1c:	ldr	r3, [r3]
   2ea20:	cmp	r3, #7
   2ea24:	beq	2ea44 <__assert_fail@plt+0x1d8ec>
   2ea28:	bl	11074 <__errno_location@plt>
   2ea2c:	mov	r3, r0
   2ea30:	ldr	r3, [r3]
   2ea34:	cmp	r3, #22
   2ea38:	beq	2ea7c <__assert_fail@plt+0x1d924>
   2ea3c:	mvn	r3, #0
   2ea40:	b	2ed08 <__assert_fail@plt+0x1dbb0>
   2ea44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ea48:	mov	r2, r3
   2ea4c:	sub	r3, fp, #4160	; 0x1040
   2ea50:	sub	r3, r3, #4
   2ea54:	sub	r3, r3, #4
   2ea58:	sub	r3, r2, r3
   2ea5c:	mov	r2, r3
   2ea60:	ldr	r3, [fp, #-12]
   2ea64:	add	r3, r3, r2
   2ea68:	str	r3, [fp, #-12]
   2ea6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ea70:	cmp	r3, #0
   2ea74:	bne	2e9c0 <__assert_fail@plt+0x1d868>
   2ea78:	b	2ea80 <__assert_fail@plt+0x1d928>
   2ea7c:	nop			; (mov r0, r0)
   2ea80:	sub	r3, fp, #4160	; 0x1040
   2ea84:	sub	r3, r3, #4
   2ea88:	sub	r3, r3, #4
   2ea8c:	str	r3, [fp, #-52]	; 0xffffffcc
   2ea90:	mov	r3, #4096	; 0x1000
   2ea94:	str	r3, [fp, #-56]	; 0xffffffc8
   2ea98:	sub	r2, fp, #52	; 0x34
   2ea9c:	sub	r3, fp, #4096	; 0x1000
   2eaa0:	sub	r3, r3, #4
   2eaa4:	mov	r0, r3
   2eaa8:	sub	r3, fp, #56	; 0x38
   2eaac:	str	r3, [sp]
   2eab0:	mov	r3, r2
   2eab4:	mov	r2, #0
   2eab8:	mov	r1, #0
   2eabc:	ldr	r0, [r0, #-84]	; 0xffffffac
   2eac0:	bl	10ea0 <iconv@plt>
   2eac4:	str	r0, [fp, #-20]	; 0xffffffec
   2eac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eacc:	cmn	r3, #1
   2ead0:	bne	2eadc <__assert_fail@plt+0x1d984>
   2ead4:	mvn	r3, #0
   2ead8:	b	2ed08 <__assert_fail@plt+0x1dbb0>
   2eadc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eae0:	mov	r2, r3
   2eae4:	sub	r3, fp, #4160	; 0x1040
   2eae8:	sub	r3, r3, #4
   2eaec:	sub	r3, r3, #4
   2eaf0:	sub	r3, r2, r3
   2eaf4:	mov	r2, r3
   2eaf8:	ldr	r3, [fp, #-12]
   2eafc:	add	r3, r3, r2
   2eb00:	str	r3, [fp, #-12]
   2eb04:	ldr	r3, [fp, #-12]
   2eb08:	str	r3, [fp, #-24]	; 0xffffffe8
   2eb0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb10:	cmp	r3, #0
   2eb14:	bne	2eb2c <__assert_fail@plt+0x1d9d4>
   2eb18:	ldr	r3, [fp, #4]
   2eb1c:	mov	r2, #0
   2eb20:	str	r2, [r3]
   2eb24:	mov	r3, #0
   2eb28:	b	2ed08 <__assert_fail@plt+0x1dbb0>
   2eb2c:	sub	r3, fp, #4096	; 0x1000
   2eb30:	sub	r3, r3, #4
   2eb34:	ldr	r3, [r3, #-88]	; 0xffffffa8
   2eb38:	ldr	r3, [r3]
   2eb3c:	cmp	r3, #0
   2eb40:	beq	2eb70 <__assert_fail@plt+0x1da18>
   2eb44:	ldr	r3, [fp, #4]
   2eb48:	ldr	r2, [r3]
   2eb4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb50:	cmp	r2, r3
   2eb54:	bcc	2eb70 <__assert_fail@plt+0x1da18>
   2eb58:	sub	r3, fp, #4096	; 0x1000
   2eb5c:	sub	r3, r3, #4
   2eb60:	ldr	r3, [r3, #-88]	; 0xffffffa8
   2eb64:	ldr	r3, [r3]
   2eb68:	str	r3, [fp, #-8]
   2eb6c:	b	2eba4 <__assert_fail@plt+0x1da4c>
   2eb70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb74:	bl	2c874 <__assert_fail@plt+0x1b71c>
   2eb78:	mov	r3, r0
   2eb7c:	str	r3, [fp, #-8]
   2eb80:	ldr	r3, [fp, #-8]
   2eb84:	cmp	r3, #0
   2eb88:	bne	2eba4 <__assert_fail@plt+0x1da4c>
   2eb8c:	bl	11074 <__errno_location@plt>
   2eb90:	mov	r2, r0
   2eb94:	mov	r3, #12
   2eb98:	str	r3, [r2]
   2eb9c:	mvn	r3, #0
   2eba0:	b	2ed08 <__assert_fail@plt+0x1dbb0>
   2eba4:	sub	r3, fp, #4096	; 0x1000
   2eba8:	sub	r3, r3, #4
   2ebac:	mov	r0, r3
   2ebb0:	mov	r3, #0
   2ebb4:	str	r3, [sp]
   2ebb8:	mov	r3, #0
   2ebbc:	mov	r2, #0
   2ebc0:	mov	r1, #0
   2ebc4:	ldr	r0, [r0, #-84]	; 0xffffffac
   2ebc8:	bl	10ea0 <iconv@plt>
   2ebcc:	sub	r3, fp, #4096	; 0x1000
   2ebd0:	sub	r3, r3, #4
   2ebd4:	ldr	r3, [r3, #-76]	; 0xffffffb4
   2ebd8:	str	r3, [fp, #-60]	; 0xffffffc4
   2ebdc:	sub	r3, fp, #4096	; 0x1000
   2ebe0:	sub	r3, r3, #4
   2ebe4:	ldr	r3, [r3, #-80]	; 0xffffffb0
   2ebe8:	str	r3, [fp, #-64]	; 0xffffffc0
   2ebec:	ldr	r3, [fp, #-8]
   2ebf0:	str	r3, [fp, #-68]	; 0xffffffbc
   2ebf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ebf8:	str	r3, [fp, #-72]	; 0xffffffb8
   2ebfc:	b	2ec54 <__assert_fail@plt+0x1dafc>
   2ec00:	sub	ip, fp, #68	; 0x44
   2ec04:	sub	r2, fp, #64	; 0x40
   2ec08:	sub	r1, fp, #60	; 0x3c
   2ec0c:	sub	r3, fp, #4096	; 0x1000
   2ec10:	sub	r3, r3, #4
   2ec14:	mov	r0, r3
   2ec18:	sub	r3, fp, #72	; 0x48
   2ec1c:	str	r3, [sp]
   2ec20:	mov	r3, ip
   2ec24:	ldr	r0, [r0, #-84]	; 0xffffffac
   2ec28:	bl	10ea0 <iconv@plt>
   2ec2c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ec34:	cmn	r3, #1
   2ec38:	bne	2ec54 <__assert_fail@plt+0x1dafc>
   2ec3c:	bl	11074 <__errno_location@plt>
   2ec40:	mov	r3, r0
   2ec44:	ldr	r3, [r3]
   2ec48:	cmp	r3, #22
   2ec4c:	bne	2ecd4 <__assert_fail@plt+0x1db7c>
   2ec50:	b	2ec60 <__assert_fail@plt+0x1db08>
   2ec54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ec58:	cmp	r3, #0
   2ec5c:	bne	2ec00 <__assert_fail@plt+0x1daa8>
   2ec60:	sub	r2, fp, #68	; 0x44
   2ec64:	sub	r3, fp, #4096	; 0x1000
   2ec68:	sub	r3, r3, #4
   2ec6c:	mov	r0, r3
   2ec70:	sub	r3, fp, #72	; 0x48
   2ec74:	str	r3, [sp]
   2ec78:	mov	r3, r2
   2ec7c:	mov	r2, #0
   2ec80:	mov	r1, #0
   2ec84:	ldr	r0, [r0, #-84]	; 0xffffffac
   2ec88:	bl	10ea0 <iconv@plt>
   2ec8c:	str	r0, [fp, #-32]	; 0xffffffe0
   2ec90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ec94:	cmn	r3, #1
   2ec98:	beq	2ecdc <__assert_fail@plt+0x1db84>
   2ec9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2eca0:	cmp	r3, #0
   2eca4:	beq	2ecac <__assert_fail@plt+0x1db54>
   2eca8:	bl	11140 <abort@plt>
   2ecac:	sub	r3, fp, #4096	; 0x1000
   2ecb0:	sub	r3, r3, #4
   2ecb4:	ldr	r3, [r3, #-88]	; 0xffffffa8
   2ecb8:	ldr	r2, [fp, #-8]
   2ecbc:	str	r2, [r3]
   2ecc0:	ldr	r3, [fp, #4]
   2ecc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ecc8:	str	r2, [r3]
   2eccc:	mov	r3, #0
   2ecd0:	b	2ed08 <__assert_fail@plt+0x1dbb0>
   2ecd4:	nop			; (mov r0, r0)
   2ecd8:	b	2ece0 <__assert_fail@plt+0x1db88>
   2ecdc:	nop			; (mov r0, r0)
   2ece0:	sub	r3, fp, #4096	; 0x1000
   2ece4:	sub	r3, r3, #4
   2ece8:	ldr	r3, [r3, #-88]	; 0xffffffa8
   2ecec:	ldr	r2, [r3]
   2ecf0:	ldr	r3, [fp, #-8]
   2ecf4:	cmp	r2, r3
   2ecf8:	beq	2ed04 <__assert_fail@plt+0x1dbac>
   2ecfc:	ldr	r0, [fp, #-8]
   2ed00:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2ed04:	mvn	r3, #0
   2ed08:	mov	r0, r3
   2ed0c:	sub	sp, fp, #4
   2ed10:	pop	{fp, pc}
   2ed14:	push	{fp, lr}
   2ed18:	add	fp, sp, #4
   2ed1c:	sub	sp, sp, #88	; 0x58
   2ed20:	str	r0, [fp, #-80]	; 0xffffffb0
   2ed24:	str	r1, [fp, #-84]	; 0xffffffac
   2ed28:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ed2c:	str	r3, [fp, #-60]	; 0xffffffc4
   2ed30:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2ed34:	bl	11050 <strlen@plt>
   2ed38:	mov	r3, r0
   2ed3c:	str	r3, [fp, #-64]	; 0xffffffc0
   2ed40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ed44:	str	r3, [fp, #-12]
   2ed48:	ldr	r3, [pc, #792]	; 2f068 <__assert_fail@plt+0x1df10>
   2ed4c:	str	r3, [fp, #-16]
   2ed50:	ldr	r3, [fp, #-16]
   2ed54:	lsr	r2, r3, #4
   2ed58:	ldr	r3, [fp, #-12]
   2ed5c:	cmp	r2, r3
   2ed60:	bcc	2ed70 <__assert_fail@plt+0x1dc18>
   2ed64:	ldr	r3, [fp, #-12]
   2ed68:	lsl	r3, r3, #4
   2ed6c:	str	r3, [fp, #-12]
   2ed70:	ldr	r3, [fp, #-12]
   2ed74:	add	r3, r3, #1
   2ed78:	str	r3, [fp, #-12]
   2ed7c:	ldr	r0, [fp, #-12]
   2ed80:	bl	2c874 <__assert_fail@plt+0x1b71c>
   2ed84:	mov	r3, r0
   2ed88:	str	r3, [fp, #-8]
   2ed8c:	ldr	r3, [fp, #-8]
   2ed90:	cmp	r3, #0
   2ed94:	bne	2edb0 <__assert_fail@plt+0x1dc58>
   2ed98:	bl	11074 <__errno_location@plt>
   2ed9c:	mov	r2, r0
   2eda0:	mov	r3, #12
   2eda4:	str	r3, [r2]
   2eda8:	mov	r3, #0
   2edac:	b	2f05c <__assert_fail@plt+0x1df04>
   2edb0:	mov	r3, #0
   2edb4:	str	r3, [sp]
   2edb8:	mov	r3, #0
   2edbc:	mov	r2, #0
   2edc0:	mov	r1, #0
   2edc4:	ldr	r0, [fp, #-84]	; 0xffffffac
   2edc8:	bl	10ea0 <iconv@plt>
   2edcc:	ldr	r3, [fp, #-8]
   2edd0:	str	r3, [fp, #-68]	; 0xffffffbc
   2edd4:	ldr	r3, [fp, #-12]
   2edd8:	sub	r3, r3, #1
   2eddc:	str	r3, [fp, #-72]	; 0xffffffb8
   2ede0:	sub	r0, fp, #68	; 0x44
   2ede4:	sub	r2, fp, #64	; 0x40
   2ede8:	sub	r1, fp, #60	; 0x3c
   2edec:	sub	r3, fp, #72	; 0x48
   2edf0:	str	r3, [sp]
   2edf4:	mov	r3, r0
   2edf8:	ldr	r0, [fp, #-84]	; 0xffffffac
   2edfc:	bl	10ea0 <iconv@plt>
   2ee00:	str	r0, [fp, #-20]	; 0xffffffec
   2ee04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ee08:	cmn	r3, #1
   2ee0c:	bne	2eee8 <__assert_fail@plt+0x1dd90>
   2ee10:	bl	11074 <__errno_location@plt>
   2ee14:	mov	r3, r0
   2ee18:	ldr	r3, [r3]
   2ee1c:	cmp	r3, #22
   2ee20:	bne	2ee28 <__assert_fail@plt+0x1dcd0>
   2ee24:	b	2eee8 <__assert_fail@plt+0x1dd90>
   2ee28:	bl	11074 <__errno_location@plt>
   2ee2c:	mov	r3, r0
   2ee30:	ldr	r3, [r3]
   2ee34:	cmp	r3, #7
   2ee38:	bne	2f018 <__assert_fail@plt+0x1dec0>
   2ee3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ee40:	mov	r2, r3
   2ee44:	ldr	r3, [fp, #-8]
   2ee48:	sub	r3, r2, r3
   2ee4c:	str	r3, [fp, #-24]	; 0xffffffe8
   2ee50:	ldr	r3, [fp, #-12]
   2ee54:	lsl	r3, r3, #1
   2ee58:	str	r3, [fp, #-28]	; 0xffffffe4
   2ee5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ee60:	ldr	r3, [fp, #-12]
   2ee64:	cmp	r2, r3
   2ee68:	bhi	2ee80 <__assert_fail@plt+0x1dd28>
   2ee6c:	bl	11074 <__errno_location@plt>
   2ee70:	mov	r2, r0
   2ee74:	mov	r3, #12
   2ee78:	str	r3, [r2]
   2ee7c:	b	2f024 <__assert_fail@plt+0x1decc>
   2ee80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ee84:	ldr	r0, [fp, #-8]
   2ee88:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2ee8c:	str	r0, [fp, #-32]	; 0xffffffe0
   2ee90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ee94:	cmp	r3, #0
   2ee98:	bne	2eeb0 <__assert_fail@plt+0x1dd58>
   2ee9c:	bl	11074 <__errno_location@plt>
   2eea0:	mov	r2, r0
   2eea4:	mov	r3, #12
   2eea8:	str	r3, [r2]
   2eeac:	b	2f024 <__assert_fail@plt+0x1decc>
   2eeb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eeb4:	str	r3, [fp, #-8]
   2eeb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eebc:	str	r3, [fp, #-12]
   2eec0:	ldr	r2, [fp, #-8]
   2eec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eec8:	add	r3, r2, r3
   2eecc:	str	r3, [fp, #-68]	; 0xffffffbc
   2eed0:	ldr	r2, [fp, #-12]
   2eed4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eed8:	sub	r3, r2, r3
   2eedc:	sub	r3, r3, #1
   2eee0:	str	r3, [fp, #-72]	; 0xffffffb8
   2eee4:	b	2ede0 <__assert_fail@plt+0x1dc88>
   2eee8:	sub	r2, fp, #68	; 0x44
   2eeec:	sub	r3, fp, #72	; 0x48
   2eef0:	str	r3, [sp]
   2eef4:	mov	r3, r2
   2eef8:	mov	r2, #0
   2eefc:	mov	r1, #0
   2ef00:	ldr	r0, [fp, #-84]	; 0xffffffac
   2ef04:	bl	10ea0 <iconv@plt>
   2ef08:	str	r0, [fp, #-36]	; 0xffffffdc
   2ef0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ef10:	cmn	r3, #1
   2ef14:	bne	2efd8 <__assert_fail@plt+0x1de80>
   2ef18:	bl	11074 <__errno_location@plt>
   2ef1c:	mov	r3, r0
   2ef20:	ldr	r3, [r3]
   2ef24:	cmp	r3, #7
   2ef28:	bne	2f020 <__assert_fail@plt+0x1dec8>
   2ef2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ef30:	mov	r2, r3
   2ef34:	ldr	r3, [fp, #-8]
   2ef38:	sub	r3, r2, r3
   2ef3c:	str	r3, [fp, #-40]	; 0xffffffd8
   2ef40:	ldr	r3, [fp, #-12]
   2ef44:	lsl	r3, r3, #1
   2ef48:	str	r3, [fp, #-44]	; 0xffffffd4
   2ef4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2ef50:	ldr	r3, [fp, #-12]
   2ef54:	cmp	r2, r3
   2ef58:	bhi	2ef70 <__assert_fail@plt+0x1de18>
   2ef5c:	bl	11074 <__errno_location@plt>
   2ef60:	mov	r2, r0
   2ef64:	mov	r3, #12
   2ef68:	str	r3, [r2]
   2ef6c:	b	2f024 <__assert_fail@plt+0x1decc>
   2ef70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ef74:	ldr	r0, [fp, #-8]
   2ef78:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2ef7c:	str	r0, [fp, #-48]	; 0xffffffd0
   2ef80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ef84:	cmp	r3, #0
   2ef88:	bne	2efa0 <__assert_fail@plt+0x1de48>
   2ef8c:	bl	11074 <__errno_location@plt>
   2ef90:	mov	r2, r0
   2ef94:	mov	r3, #12
   2ef98:	str	r3, [r2]
   2ef9c:	b	2f024 <__assert_fail@plt+0x1decc>
   2efa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2efa4:	str	r3, [fp, #-8]
   2efa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2efac:	str	r3, [fp, #-12]
   2efb0:	ldr	r2, [fp, #-8]
   2efb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2efb8:	add	r3, r2, r3
   2efbc:	str	r3, [fp, #-68]	; 0xffffffbc
   2efc0:	ldr	r2, [fp, #-12]
   2efc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2efc8:	sub	r3, r2, r3
   2efcc:	sub	r3, r3, #1
   2efd0:	str	r3, [fp, #-72]	; 0xffffffb8
   2efd4:	b	2eee8 <__assert_fail@plt+0x1dd90>
   2efd8:	nop			; (mov r0, r0)
   2efdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2efe0:	add	r2, r3, #1
   2efe4:	str	r2, [fp, #-68]	; 0xffffffbc
   2efe8:	mov	r2, #0
   2efec:	strb	r2, [r3]
   2eff0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2eff4:	mov	r2, r3
   2eff8:	ldr	r3, [fp, #-8]
   2effc:	sub	r3, r2, r3
   2f000:	str	r3, [fp, #-52]	; 0xffffffcc
   2f004:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2f008:	ldr	r3, [fp, #-12]
   2f00c:	cmp	r2, r3
   2f010:	bcc	2f034 <__assert_fail@plt+0x1dedc>
   2f014:	b	2f058 <__assert_fail@plt+0x1df00>
   2f018:	nop			; (mov r0, r0)
   2f01c:	b	2f024 <__assert_fail@plt+0x1decc>
   2f020:	nop			; (mov r0, r0)
   2f024:	ldr	r0, [fp, #-8]
   2f028:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2f02c:	mov	r3, #0
   2f030:	b	2f05c <__assert_fail@plt+0x1df04>
   2f034:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2f038:	ldr	r0, [fp, #-8]
   2f03c:	bl	2c91c <__assert_fail@plt+0x1b7c4>
   2f040:	str	r0, [fp, #-56]	; 0xffffffc8
   2f044:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f048:	cmp	r3, #0
   2f04c:	beq	2f058 <__assert_fail@plt+0x1df00>
   2f050:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f054:	str	r3, [fp, #-8]
   2f058:	ldr	r3, [fp, #-8]
   2f05c:	mov	r0, r3
   2f060:	sub	sp, fp, #4
   2f064:	pop	{fp, pc}
   2f068:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2f06c:	push	{fp, lr}
   2f070:	add	fp, sp, #4
   2f074:	sub	sp, sp, #32
   2f078:	str	r0, [fp, #-24]	; 0xffffffe8
   2f07c:	str	r1, [fp, #-28]	; 0xffffffe4
   2f080:	str	r2, [fp, #-32]	; 0xffffffe0
   2f084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f088:	ldrb	r3, [r3]
   2f08c:	cmp	r3, #0
   2f090:	beq	2f0ac <__assert_fail@plt+0x1df54>
   2f094:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f098:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f09c:	bl	2c9ec <__assert_fail@plt+0x1b894>
   2f0a0:	mov	r3, r0
   2f0a4:	cmp	r3, #0
   2f0a8:	bne	2f0e0 <__assert_fail@plt+0x1df88>
   2f0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0b0:	bl	10f3c <strdup@plt>
   2f0b4:	mov	r3, r0
   2f0b8:	str	r3, [fp, #-20]	; 0xffffffec
   2f0bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f0c0:	cmp	r3, #0
   2f0c4:	bne	2f0d8 <__assert_fail@plt+0x1df80>
   2f0c8:	bl	11074 <__errno_location@plt>
   2f0cc:	mov	r2, r0
   2f0d0:	mov	r3, #12
   2f0d4:	str	r3, [r2]
   2f0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f0dc:	b	2f178 <__assert_fail@plt+0x1e020>
   2f0e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f0e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f0e8:	bl	10fe4 <iconv_open@plt>
   2f0ec:	str	r0, [fp, #-8]
   2f0f0:	ldr	r3, [fp, #-8]
   2f0f4:	cmn	r3, #1
   2f0f8:	bne	2f104 <__assert_fail@plt+0x1dfac>
   2f0fc:	mov	r3, #0
   2f100:	b	2f178 <__assert_fail@plt+0x1e020>
   2f104:	ldr	r1, [fp, #-8]
   2f108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f10c:	bl	2ed14 <__assert_fail@plt+0x1dbbc>
   2f110:	mov	r3, r0
   2f114:	str	r3, [fp, #-12]
   2f118:	ldr	r3, [fp, #-12]
   2f11c:	cmp	r3, #0
   2f120:	bne	2f150 <__assert_fail@plt+0x1dff8>
   2f124:	bl	11074 <__errno_location@plt>
   2f128:	mov	r3, r0
   2f12c:	ldr	r3, [r3]
   2f130:	str	r3, [fp, #-16]
   2f134:	ldr	r0, [fp, #-8]
   2f138:	bl	10e94 <iconv_close@plt>
   2f13c:	bl	11074 <__errno_location@plt>
   2f140:	mov	r2, r0
   2f144:	ldr	r3, [fp, #-16]
   2f148:	str	r3, [r2]
   2f14c:	b	2f174 <__assert_fail@plt+0x1e01c>
   2f150:	ldr	r0, [fp, #-8]
   2f154:	bl	10e94 <iconv_close@plt>
   2f158:	mov	r3, r0
   2f15c:	cmp	r3, #0
   2f160:	bge	2f174 <__assert_fail@plt+0x1e01c>
   2f164:	ldr	r0, [fp, #-12]
   2f168:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2f16c:	mov	r3, #0
   2f170:	b	2f178 <__assert_fail@plt+0x1e020>
   2f174:	ldr	r3, [fp, #-12]
   2f178:	mov	r0, r3
   2f17c:	sub	sp, fp, #4
   2f180:	pop	{fp, pc}
   2f184:	push	{fp, lr}
   2f188:	add	fp, sp, #4
   2f18c:	sub	sp, sp, #16
   2f190:	str	r0, [fp, #-16]
   2f194:	str	r1, [fp, #-20]	; 0xffffffec
   2f198:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f19c:	mov	r1, #0
   2f1a0:	ldr	r0, [fp, #-16]
   2f1a4:	bl	110bc <memchr@plt>
   2f1a8:	str	r0, [fp, #-8]
   2f1ac:	ldr	r3, [fp, #-8]
   2f1b0:	cmp	r3, #0
   2f1b4:	beq	2f1cc <__assert_fail@plt+0x1e074>
   2f1b8:	ldr	r2, [fp, #-8]
   2f1bc:	ldr	r3, [fp, #-16]
   2f1c0:	sub	r3, r2, r3
   2f1c4:	add	r3, r3, #1
   2f1c8:	b	2f1d0 <__assert_fail@plt+0x1e078>
   2f1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f1d0:	mov	r0, r3
   2f1d4:	sub	sp, fp, #4
   2f1d8:	pop	{fp, pc}
   2f1dc:	push	{fp}		; (str fp, [sp, #-4]!)
   2f1e0:	add	fp, sp, #0
   2f1e4:	sub	sp, sp, #12
   2f1e8:	str	r0, [fp, #-8]
   2f1ec:	ldr	r3, [fp, #-8]
   2f1f0:	cmp	r3, #90	; 0x5a
   2f1f4:	bgt	2f210 <__assert_fail@plt+0x1e0b8>
   2f1f8:	cmp	r3, #65	; 0x41
   2f1fc:	bge	2f21c <__assert_fail@plt+0x1e0c4>
   2f200:	sub	r3, r3, #48	; 0x30
   2f204:	cmp	r3, #9
   2f208:	bhi	2f224 <__assert_fail@plt+0x1e0cc>
   2f20c:	b	2f21c <__assert_fail@plt+0x1e0c4>
   2f210:	sub	r3, r3, #97	; 0x61
   2f214:	cmp	r3, #25
   2f218:	bhi	2f224 <__assert_fail@plt+0x1e0cc>
   2f21c:	mov	r3, #1
   2f220:	b	2f228 <__assert_fail@plt+0x1e0d0>
   2f224:	mov	r3, #0
   2f228:	mov	r0, r3
   2f22c:	add	sp, fp, #0
   2f230:	pop	{fp}		; (ldr fp, [sp], #4)
   2f234:	bx	lr
   2f238:	push	{fp}		; (str fp, [sp, #-4]!)
   2f23c:	add	fp, sp, #0
   2f240:	sub	sp, sp, #12
   2f244:	str	r0, [fp, #-8]
   2f248:	ldr	r3, [fp, #-8]
   2f24c:	cmp	r3, #65	; 0x41
   2f250:	blt	2f270 <__assert_fail@plt+0x1e118>
   2f254:	cmp	r3, #90	; 0x5a
   2f258:	ble	2f268 <__assert_fail@plt+0x1e110>
   2f25c:	sub	r3, r3, #97	; 0x61
   2f260:	cmp	r3, #25
   2f264:	bhi	2f270 <__assert_fail@plt+0x1e118>
   2f268:	mov	r3, #1
   2f26c:	b	2f274 <__assert_fail@plt+0x1e11c>
   2f270:	mov	r3, #0
   2f274:	mov	r0, r3
   2f278:	add	sp, fp, #0
   2f27c:	pop	{fp}		; (ldr fp, [sp], #4)
   2f280:	bx	lr
   2f284:	push	{fp}		; (str fp, [sp, #-4]!)
   2f288:	add	fp, sp, #0
   2f28c:	sub	sp, sp, #12
   2f290:	str	r0, [fp, #-8]
   2f294:	ldr	r3, [fp, #-8]
   2f298:	add	r3, r3, #0
   2f29c:	cmp	r3, #127	; 0x7f
   2f2a0:	bhi	2f2ac <__assert_fail@plt+0x1e154>
   2f2a4:	mov	r3, #1
   2f2a8:	b	2f2b0 <__assert_fail@plt+0x1e158>
   2f2ac:	mov	r3, #0
   2f2b0:	mov	r0, r3
   2f2b4:	add	sp, fp, #0
   2f2b8:	pop	{fp}		; (ldr fp, [sp], #4)
   2f2bc:	bx	lr
   2f2c0:	push	{fp}		; (str fp, [sp, #-4]!)
   2f2c4:	add	fp, sp, #0
   2f2c8:	sub	sp, sp, #12
   2f2cc:	str	r0, [fp, #-8]
   2f2d0:	ldr	r3, [fp, #-8]
   2f2d4:	cmp	r3, #32
   2f2d8:	beq	2f2e8 <__assert_fail@plt+0x1e190>
   2f2dc:	ldr	r3, [fp, #-8]
   2f2e0:	cmp	r3, #9
   2f2e4:	bne	2f2f0 <__assert_fail@plt+0x1e198>
   2f2e8:	mov	r3, #1
   2f2ec:	b	2f2f4 <__assert_fail@plt+0x1e19c>
   2f2f0:	mov	r3, #0
   2f2f4:	and	r3, r3, #1
   2f2f8:	uxtb	r3, r3
   2f2fc:	mov	r0, r3
   2f300:	add	sp, fp, #0
   2f304:	pop	{fp}		; (ldr fp, [sp], #4)
   2f308:	bx	lr
   2f30c:	push	{fp}		; (str fp, [sp, #-4]!)
   2f310:	add	fp, sp, #0
   2f314:	sub	sp, sp, #12
   2f318:	str	r0, [fp, #-8]
   2f31c:	ldr	r3, [fp, #-8]
   2f320:	cmp	r3, #0
   2f324:	blt	2f340 <__assert_fail@plt+0x1e1e8>
   2f328:	cmp	r3, #31
   2f32c:	ble	2f338 <__assert_fail@plt+0x1e1e0>
   2f330:	cmp	r3, #127	; 0x7f
   2f334:	bne	2f340 <__assert_fail@plt+0x1e1e8>
   2f338:	mov	r3, #1
   2f33c:	b	2f344 <__assert_fail@plt+0x1e1ec>
   2f340:	mov	r3, #0
   2f344:	mov	r0, r3
   2f348:	add	sp, fp, #0
   2f34c:	pop	{fp}		; (ldr fp, [sp], #4)
   2f350:	bx	lr
   2f354:	push	{fp}		; (str fp, [sp, #-4]!)
   2f358:	add	fp, sp, #0
   2f35c:	sub	sp, sp, #12
   2f360:	str	r0, [fp, #-8]
   2f364:	ldr	r3, [fp, #-8]
   2f368:	sub	r3, r3, #48	; 0x30
   2f36c:	cmp	r3, #9
   2f370:	bhi	2f37c <__assert_fail@plt+0x1e224>
   2f374:	mov	r3, #1
   2f378:	b	2f380 <__assert_fail@plt+0x1e228>
   2f37c:	mov	r3, #0
   2f380:	mov	r0, r3
   2f384:	add	sp, fp, #0
   2f388:	pop	{fp}		; (ldr fp, [sp], #4)
   2f38c:	bx	lr
   2f390:	push	{fp}		; (str fp, [sp, #-4]!)
   2f394:	add	fp, sp, #0
   2f398:	sub	sp, sp, #12
   2f39c:	str	r0, [fp, #-8]
   2f3a0:	ldr	r3, [fp, #-8]
   2f3a4:	sub	r3, r3, #33	; 0x21
   2f3a8:	cmp	r3, #93	; 0x5d
   2f3ac:	bhi	2f3b8 <__assert_fail@plt+0x1e260>
   2f3b0:	mov	r3, #1
   2f3b4:	b	2f3bc <__assert_fail@plt+0x1e264>
   2f3b8:	mov	r3, #0
   2f3bc:	mov	r0, r3
   2f3c0:	add	sp, fp, #0
   2f3c4:	pop	{fp}		; (ldr fp, [sp], #4)
   2f3c8:	bx	lr
   2f3cc:	push	{fp}		; (str fp, [sp, #-4]!)
   2f3d0:	add	fp, sp, #0
   2f3d4:	sub	sp, sp, #12
   2f3d8:	str	r0, [fp, #-8]
   2f3dc:	ldr	r3, [fp, #-8]
   2f3e0:	sub	r3, r3, #97	; 0x61
   2f3e4:	cmp	r3, #25
   2f3e8:	bhi	2f3f4 <__assert_fail@plt+0x1e29c>
   2f3ec:	mov	r3, #1
   2f3f0:	b	2f3f8 <__assert_fail@plt+0x1e2a0>
   2f3f4:	mov	r3, #0
   2f3f8:	mov	r0, r3
   2f3fc:	add	sp, fp, #0
   2f400:	pop	{fp}		; (ldr fp, [sp], #4)
   2f404:	bx	lr
   2f408:	push	{fp}		; (str fp, [sp, #-4]!)
   2f40c:	add	fp, sp, #0
   2f410:	sub	sp, sp, #12
   2f414:	str	r0, [fp, #-8]
   2f418:	ldr	r3, [fp, #-8]
   2f41c:	sub	r3, r3, #32
   2f420:	cmp	r3, #94	; 0x5e
   2f424:	bhi	2f430 <__assert_fail@plt+0x1e2d8>
   2f428:	mov	r3, #1
   2f42c:	b	2f434 <__assert_fail@plt+0x1e2dc>
   2f430:	mov	r3, #0
   2f434:	mov	r0, r3
   2f438:	add	sp, fp, #0
   2f43c:	pop	{fp}		; (ldr fp, [sp], #4)
   2f440:	bx	lr
   2f444:	push	{fp}		; (str fp, [sp, #-4]!)
   2f448:	add	fp, sp, #0
   2f44c:	sub	sp, sp, #12
   2f450:	str	r0, [fp, #-8]
   2f454:	ldr	r3, [fp, #-8]
   2f458:	cmp	r3, #64	; 0x40
   2f45c:	bgt	2f478 <__assert_fail@plt+0x1e320>
   2f460:	cmp	r3, #58	; 0x3a
   2f464:	bge	2f494 <__assert_fail@plt+0x1e33c>
   2f468:	sub	r3, r3, #33	; 0x21
   2f46c:	cmp	r3, #14
   2f470:	bhi	2f49c <__assert_fail@plt+0x1e344>
   2f474:	b	2f494 <__assert_fail@plt+0x1e33c>
   2f478:	cmp	r3, #91	; 0x5b
   2f47c:	blt	2f49c <__assert_fail@plt+0x1e344>
   2f480:	cmp	r3, #96	; 0x60
   2f484:	ble	2f494 <__assert_fail@plt+0x1e33c>
   2f488:	sub	r3, r3, #123	; 0x7b
   2f48c:	cmp	r3, #3
   2f490:	bhi	2f49c <__assert_fail@plt+0x1e344>
   2f494:	mov	r3, #1
   2f498:	b	2f4a0 <__assert_fail@plt+0x1e348>
   2f49c:	mov	r3, #0
   2f4a0:	mov	r0, r3
   2f4a4:	add	sp, fp, #0
   2f4a8:	pop	{fp}		; (ldr fp, [sp], #4)
   2f4ac:	bx	lr
   2f4b0:	push	{fp}		; (str fp, [sp, #-4]!)
   2f4b4:	add	fp, sp, #0
   2f4b8:	sub	sp, sp, #12
   2f4bc:	str	r0, [fp, #-8]
   2f4c0:	ldr	r3, [fp, #-8]
   2f4c4:	cmp	r3, #9
   2f4c8:	blt	2f4e4 <__assert_fail@plt+0x1e38c>
   2f4cc:	cmp	r3, #13
   2f4d0:	ble	2f4dc <__assert_fail@plt+0x1e384>
   2f4d4:	cmp	r3, #32
   2f4d8:	bne	2f4e4 <__assert_fail@plt+0x1e38c>
   2f4dc:	mov	r3, #1
   2f4e0:	b	2f4e8 <__assert_fail@plt+0x1e390>
   2f4e4:	mov	r3, #0
   2f4e8:	mov	r0, r3
   2f4ec:	add	sp, fp, #0
   2f4f0:	pop	{fp}		; (ldr fp, [sp], #4)
   2f4f4:	bx	lr
   2f4f8:	push	{fp}		; (str fp, [sp, #-4]!)
   2f4fc:	add	fp, sp, #0
   2f500:	sub	sp, sp, #12
   2f504:	str	r0, [fp, #-8]
   2f508:	ldr	r3, [fp, #-8]
   2f50c:	sub	r3, r3, #65	; 0x41
   2f510:	cmp	r3, #25
   2f514:	bhi	2f520 <__assert_fail@plt+0x1e3c8>
   2f518:	mov	r3, #1
   2f51c:	b	2f524 <__assert_fail@plt+0x1e3cc>
   2f520:	mov	r3, #0
   2f524:	mov	r0, r3
   2f528:	add	sp, fp, #0
   2f52c:	pop	{fp}		; (ldr fp, [sp], #4)
   2f530:	bx	lr
   2f534:	push	{fp}		; (str fp, [sp, #-4]!)
   2f538:	add	fp, sp, #0
   2f53c:	sub	sp, sp, #12
   2f540:	str	r0, [fp, #-8]
   2f544:	ldr	r3, [fp, #-8]
   2f548:	sub	r3, r3, #48	; 0x30
   2f54c:	cmp	r3, #54	; 0x36
   2f550:	addls	pc, pc, r3, lsl #2
   2f554:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f558:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f55c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f560:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f564:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f568:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f56c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f570:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f574:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f578:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f57c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f580:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f584:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f588:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f58c:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f590:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f594:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f598:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f59c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5a0:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5a4:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5a8:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5ac:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5b0:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f5b4:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5b8:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5bc:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5c0:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5c4:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5c8:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5cc:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5d0:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5d4:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5d8:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5dc:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5e0:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5e4:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5e8:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5ec:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5f0:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5f4:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5f8:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f5fc:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f600:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f604:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f608:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f60c:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f610:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f614:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f618:	b	2f63c <__assert_fail@plt+0x1e4e4>
   2f61c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f620:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f624:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f628:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f62c:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f630:	b	2f634 <__assert_fail@plt+0x1e4dc>
   2f634:	mov	r3, #1
   2f638:	b	2f640 <__assert_fail@plt+0x1e4e8>
   2f63c:	mov	r3, #0
   2f640:	mov	r0, r3
   2f644:	add	sp, fp, #0
   2f648:	pop	{fp}		; (ldr fp, [sp], #4)
   2f64c:	bx	lr
   2f650:	push	{fp}		; (str fp, [sp, #-4]!)
   2f654:	add	fp, sp, #0
   2f658:	sub	sp, sp, #12
   2f65c:	str	r0, [fp, #-8]
   2f660:	ldr	r3, [fp, #-8]
   2f664:	sub	r3, r3, #65	; 0x41
   2f668:	cmp	r3, #25
   2f66c:	bhi	2f67c <__assert_fail@plt+0x1e524>
   2f670:	ldr	r3, [fp, #-8]
   2f674:	add	r3, r3, #32
   2f678:	b	2f680 <__assert_fail@plt+0x1e528>
   2f67c:	ldr	r3, [fp, #-8]
   2f680:	mov	r0, r3
   2f684:	add	sp, fp, #0
   2f688:	pop	{fp}		; (ldr fp, [sp], #4)
   2f68c:	bx	lr
   2f690:	push	{fp}		; (str fp, [sp, #-4]!)
   2f694:	add	fp, sp, #0
   2f698:	sub	sp, sp, #12
   2f69c:	str	r0, [fp, #-8]
   2f6a0:	ldr	r3, [fp, #-8]
   2f6a4:	sub	r3, r3, #97	; 0x61
   2f6a8:	cmp	r3, #25
   2f6ac:	bhi	2f6bc <__assert_fail@plt+0x1e564>
   2f6b0:	ldr	r3, [fp, #-8]
   2f6b4:	sub	r3, r3, #32
   2f6b8:	b	2f6c0 <__assert_fail@plt+0x1e568>
   2f6bc:	ldr	r3, [fp, #-8]
   2f6c0:	mov	r0, r3
   2f6c4:	add	sp, fp, #0
   2f6c8:	pop	{fp}		; (ldr fp, [sp], #4)
   2f6cc:	bx	lr
   2f6d0:	push	{fp, lr}
   2f6d4:	add	fp, sp, #4
   2f6d8:	sub	sp, sp, #272	; 0x110
   2f6dc:	str	r0, [fp, #-272]	; 0xfffffef0
   2f6e0:	sub	r3, fp, #264	; 0x108
   2f6e4:	ldr	r2, [pc, #116]	; 2f760 <__assert_fail@plt+0x1e608>
   2f6e8:	mov	r1, r3
   2f6ec:	ldr	r0, [fp, #-272]	; 0xfffffef0
   2f6f0:	bl	2fcd0 <__assert_fail@plt+0x1eb78>
   2f6f4:	mov	r3, r0
   2f6f8:	cmp	r3, #0
   2f6fc:	beq	2f708 <__assert_fail@plt+0x1e5b0>
   2f700:	mov	r3, #0
   2f704:	b	2f754 <__assert_fail@plt+0x1e5fc>
   2f708:	sub	r3, fp, #264	; 0x108
   2f70c:	ldr	r1, [pc, #80]	; 2f764 <__assert_fail@plt+0x1e60c>
   2f710:	mov	r0, r3
   2f714:	bl	10eac <strcmp@plt>
   2f718:	mov	r3, r0
   2f71c:	cmp	r3, #0
   2f720:	beq	2f748 <__assert_fail@plt+0x1e5f0>
   2f724:	sub	r3, fp, #264	; 0x108
   2f728:	ldr	r1, [pc, #56]	; 2f768 <__assert_fail@plt+0x1e610>
   2f72c:	mov	r0, r3
   2f730:	bl	10eac <strcmp@plt>
   2f734:	mov	r3, r0
   2f738:	cmp	r3, #0
   2f73c:	beq	2f748 <__assert_fail@plt+0x1e5f0>
   2f740:	mov	r3, #1
   2f744:	b	2f74c <__assert_fail@plt+0x1e5f4>
   2f748:	mov	r3, #0
   2f74c:	and	r3, r3, #1
   2f750:	uxtb	r3, r3
   2f754:	mov	r0, r3
   2f758:	sub	sp, fp, #4
   2f75c:	pop	{fp, pc}
   2f760:	andeq	r0, r0, r1, lsl #2
   2f764:	andeq	r4, r3, r4, asr r8
   2f768:	andeq	r4, r3, r8, asr r8
   2f76c:	push	{fp, lr}
   2f770:	add	fp, sp, #4
   2f774:	sub	sp, sp, #48	; 0x30
   2f778:	str	r0, [fp, #-48]	; 0xffffffd0
   2f77c:	mov	r3, #15
   2f780:	str	r3, [fp, #-8]
   2f784:	ldr	r3, [fp, #-8]
   2f788:	add	r3, r3, #1
   2f78c:	str	r3, [fp, #-12]
   2f790:	ldr	r3, [fp, #-12]
   2f794:	cmp	r3, #0
   2f798:	bge	2f7d4 <__assert_fail@plt+0x1e67c>
   2f79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f7a0:	cmp	r3, #0
   2f7a4:	bge	2f7c4 <__assert_fail@plt+0x1e66c>
   2f7a8:	ldr	r2, [fp, #-12]
   2f7ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f7b0:	add	r3, r2, r3
   2f7b4:	cmp	r3, #0
   2f7b8:	bge	2f7c4 <__assert_fail@plt+0x1e66c>
   2f7bc:	mov	r3, #1
   2f7c0:	b	2f7c8 <__assert_fail@plt+0x1e670>
   2f7c4:	mov	r3, #0
   2f7c8:	and	r3, r3, #1
   2f7cc:	uxtb	r3, r3
   2f7d0:	b	2f7f8 <__assert_fail@plt+0x1e6a0>
   2f7d4:	ldr	r2, [fp, #-12]
   2f7d8:	mvn	r3, #-2147483648	; 0x80000000
   2f7dc:	sub	r3, r3, r2
   2f7e0:	mov	r2, r3
   2f7e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f7e8:	cmp	r2, r3
   2f7ec:	movcc	r3, #1
   2f7f0:	movcs	r3, #0
   2f7f4:	uxtb	r3, r3
   2f7f8:	cmp	r3, #0
   2f7fc:	beq	2f818 <__assert_fail@plt+0x1e6c0>
   2f800:	ldr	r2, [fp, #-12]
   2f804:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f808:	add	r3, r2, r3
   2f80c:	str	r3, [fp, #-36]	; 0xffffffdc
   2f810:	mov	r3, #0
   2f814:	b	2f82c <__assert_fail@plt+0x1e6d4>
   2f818:	ldr	r2, [fp, #-12]
   2f81c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f820:	add	r3, r2, r3
   2f824:	str	r3, [fp, #-36]	; 0xffffffdc
   2f828:	mov	r3, #1
   2f82c:	cmp	r3, #0
   2f830:	beq	2f900 <__assert_fail@plt+0x1e7a8>
   2f834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f838:	mov	r2, #0
   2f83c:	str	r3, [fp, #-40]	; 0xffffffd8
   2f840:	mov	r3, r2
   2f844:	and	r3, r3, #1
   2f848:	uxtb	r3, r3
   2f84c:	eor	r3, r3, #1
   2f850:	uxtb	r3, r3
   2f854:	cmp	r3, #0
   2f858:	beq	2f900 <__assert_fail@plt+0x1e7a8>
   2f85c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f860:	mov	r0, r3
   2f864:	bl	10fd8 <malloc@plt>
   2f868:	mov	r3, r0
   2f86c:	str	r3, [fp, #-16]
   2f870:	ldr	r3, [fp, #-16]
   2f874:	cmp	r3, #0
   2f878:	beq	2f900 <__assert_fail@plt+0x1e7a8>
   2f87c:	ldr	r3, [fp, #-16]
   2f880:	str	r3, [fp, #-20]	; 0xffffffec
   2f884:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f888:	cmn	r3, #9
   2f88c:	bls	2f8a0 <__assert_fail@plt+0x1e748>
   2f890:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f894:	add	r3, r3, #8
   2f898:	str	r3, [fp, #-44]	; 0xffffffd4
   2f89c:	b	2f8ac <__assert_fail@plt+0x1e754>
   2f8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f8a4:	add	r3, r3, #8
   2f8a8:	str	r3, [fp, #-44]	; 0xffffffd4
   2f8ac:	ldr	r3, [fp, #-8]
   2f8b0:	mvn	r2, r3
   2f8b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f8b8:	and	r2, r2, r3
   2f8bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f8c0:	sub	r3, r2, r3
   2f8c4:	add	r3, r3, #8
   2f8c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2f8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f8d0:	ldr	r2, [fp, #-16]
   2f8d4:	add	r3, r2, r3
   2f8d8:	str	r3, [fp, #-28]	; 0xffffffe4
   2f8dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f8e0:	str	r3, [fp, #-32]	; 0xffffffe0
   2f8e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8e8:	sub	r3, r3, #1
   2f8ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f8f0:	uxtb	r2, r2
   2f8f4:	strb	r2, [r3]
   2f8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8fc:	b	2f904 <__assert_fail@plt+0x1e7ac>
   2f900:	mov	r3, #0
   2f904:	mov	r0, r3
   2f908:	sub	sp, fp, #4
   2f90c:	pop	{fp, pc}
   2f910:	push	{fp, lr}
   2f914:	add	fp, sp, #4
   2f918:	sub	sp, sp, #16
   2f91c:	str	r0, [fp, #-16]
   2f920:	ldr	r3, [fp, #-16]
   2f924:	and	r3, r3, #7
   2f928:	cmp	r3, #0
   2f92c:	beq	2f934 <__assert_fail@plt+0x1e7dc>
   2f930:	bl	11140 <abort@plt>
   2f934:	ldr	r3, [fp, #-16]
   2f938:	and	r3, r3, #8
   2f93c:	cmp	r3, #0
   2f940:	beq	2f968 <__assert_fail@plt+0x1e810>
   2f944:	ldr	r3, [fp, #-16]
   2f948:	sub	r3, r3, #1
   2f94c:	ldrb	r3, [r3]
   2f950:	rsb	r3, r3, #0
   2f954:	ldr	r2, [fp, #-16]
   2f958:	add	r3, r2, r3
   2f95c:	str	r3, [fp, #-8]
   2f960:	ldr	r0, [fp, #-8]
   2f964:	bl	1ad78 <__assert_fail@plt+0x9c20>
   2f968:	nop			; (mov r0, r0)
   2f96c:	sub	sp, fp, #4
   2f970:	pop	{fp, pc}
   2f974:	push	{fp, lr}
   2f978:	add	fp, sp, #4
   2f97c:	sub	sp, sp, #16
   2f980:	str	r0, [fp, #-16]
   2f984:	ldr	r0, [fp, #-16]
   2f988:	bl	10ed0 <wcwidth@plt>
   2f98c:	str	r0, [fp, #-8]
   2f990:	ldr	r3, [fp, #-8]
   2f994:	cmp	r3, #0
   2f998:	bge	2f9bc <__assert_fail@plt+0x1e864>
   2f99c:	ldr	r0, [fp, #-16]
   2f9a0:	bl	10f60 <iswcntrl@plt>
   2f9a4:	mov	r3, r0
   2f9a8:	cmp	r3, #0
   2f9ac:	moveq	r3, #1
   2f9b0:	movne	r3, #0
   2f9b4:	uxtb	r3, r3
   2f9b8:	b	2f9c0 <__assert_fail@plt+0x1e868>
   2f9bc:	ldr	r3, [fp, #-8]
   2f9c0:	mov	r0, r3
   2f9c4:	sub	sp, fp, #4
   2f9c8:	pop	{fp, pc}
   2f9cc:	push	{fp, lr}
   2f9d0:	add	fp, sp, #4
   2f9d4:	sub	sp, sp, #8
   2f9d8:	str	r0, [fp, #-8]
   2f9dc:	str	r1, [fp, #-12]
   2f9e0:	ldr	r3, [fp, #-12]
   2f9e4:	ldr	r2, [r3]
   2f9e8:	ldr	r3, [fp, #-12]
   2f9ec:	add	r3, r3, #16
   2f9f0:	cmp	r2, r3
   2f9f4:	bne	2fa2c <__assert_fail@plt+0x1e8d4>
   2f9f8:	ldr	r3, [fp, #-8]
   2f9fc:	add	r0, r3, #16
   2fa00:	ldr	r3, [fp, #-12]
   2fa04:	add	r1, r3, #16
   2fa08:	ldr	r3, [fp, #-12]
   2fa0c:	ldr	r3, [r3, #4]
   2fa10:	mov	r2, r3
   2fa14:	bl	10f00 <memcpy@plt>
   2fa18:	ldr	r3, [fp, #-8]
   2fa1c:	add	r2, r3, #16
   2fa20:	ldr	r3, [fp, #-8]
   2fa24:	str	r2, [r3]
   2fa28:	b	2fa3c <__assert_fail@plt+0x1e8e4>
   2fa2c:	ldr	r3, [fp, #-12]
   2fa30:	ldr	r2, [r3]
   2fa34:	ldr	r3, [fp, #-8]
   2fa38:	str	r2, [r3]
   2fa3c:	ldr	r3, [fp, #-12]
   2fa40:	ldr	r2, [r3, #4]
   2fa44:	ldr	r3, [fp, #-8]
   2fa48:	str	r2, [r3, #4]
   2fa4c:	ldr	r3, [fp, #-12]
   2fa50:	ldrb	r2, [r3, #8]
   2fa54:	ldr	r3, [fp, #-8]
   2fa58:	strb	r2, [r3, #8]
   2fa5c:	ldr	r3, [fp, #-8]
   2fa60:	ldrb	r3, [r3, #8]
   2fa64:	cmp	r3, #0
   2fa68:	beq	2fa7c <__assert_fail@plt+0x1e924>
   2fa6c:	ldr	r3, [fp, #-12]
   2fa70:	ldr	r2, [r3, #12]
   2fa74:	ldr	r3, [fp, #-8]
   2fa78:	str	r2, [r3, #12]
   2fa7c:	nop			; (mov r0, r0)
   2fa80:	sub	sp, fp, #4
   2fa84:	pop	{fp, pc}
   2fa88:	push	{fp}		; (str fp, [sp, #-4]!)
   2fa8c:	add	fp, sp, #0
   2fa90:	sub	sp, sp, #12
   2fa94:	mov	r3, r0
   2fa98:	strb	r3, [fp, #-5]
   2fa9c:	ldrb	r3, [fp, #-5]
   2faa0:	lsr	r3, r3, #5
   2faa4:	uxtb	r3, r3
   2faa8:	mov	r2, r3
   2faac:	ldr	r3, [pc, #48]	; 2fae4 <__assert_fail@plt+0x1e98c>
   2fab0:	ldr	r2, [r3, r2, lsl #2]
   2fab4:	ldrb	r3, [fp, #-5]
   2fab8:	and	r3, r3, #31
   2fabc:	lsr	r3, r2, r3
   2fac0:	and	r3, r3, #1
   2fac4:	cmp	r3, #0
   2fac8:	movne	r3, #1
   2facc:	moveq	r3, #0
   2fad0:	uxtb	r3, r3
   2fad4:	mov	r0, r3
   2fad8:	add	sp, fp, #0
   2fadc:	pop	{fp}		; (ldr fp, [sp], #4)
   2fae0:	bx	lr
   2fae4:	andeq	r4, r3, r0, ror #16
   2fae8:	push	{fp, lr}
   2faec:	add	fp, sp, #4
   2faf0:	sub	sp, sp, #72	; 0x48
   2faf4:	str	r0, [fp, #-72]	; 0xffffffb8
   2faf8:	bl	10f9c <__ctype_get_mb_cur_max@plt>
   2fafc:	mov	r3, r0
   2fb00:	cmp	r3, #1
   2fb04:	bls	2fbb0 <__assert_fail@plt+0x1ea58>
   2fb08:	mov	r3, #0
   2fb0c:	str	r3, [fp, #-8]
   2fb10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2fb14:	str	r3, [fp, #-48]	; 0xffffffd0
   2fb18:	mov	r3, #0
   2fb1c:	strb	r3, [fp, #-64]	; 0xffffffc0
   2fb20:	sub	r3, fp, #64	; 0x40
   2fb24:	add	r3, r3, #4
   2fb28:	mov	r2, #8
   2fb2c:	mov	r1, #0
   2fb30:	mov	r0, r3
   2fb34:	bl	11098 <memset@plt>
   2fb38:	mov	r3, #0
   2fb3c:	strb	r3, [fp, #-52]	; 0xffffffcc
   2fb40:	b	2fb68 <__assert_fail@plt+0x1ea10>
   2fb44:	ldr	r3, [fp, #-8]
   2fb48:	add	r3, r3, #1
   2fb4c:	str	r3, [fp, #-8]
   2fb50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2fb54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fb58:	add	r3, r2, r3
   2fb5c:	str	r3, [fp, #-48]	; 0xffffffd0
   2fb60:	mov	r3, #0
   2fb64:	strb	r3, [fp, #-52]	; 0xffffffcc
   2fb68:	sub	r3, fp, #64	; 0x40
   2fb6c:	mov	r0, r3
   2fb70:	bl	2e550 <__assert_fail@plt+0x1d3f8>
   2fb74:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   2fb78:	eor	r3, r3, #1
   2fb7c:	uxtb	r3, r3
   2fb80:	cmp	r3, #0
   2fb84:	bne	2fb94 <__assert_fail@plt+0x1ea3c>
   2fb88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fb8c:	cmp	r3, #0
   2fb90:	beq	2fb9c <__assert_fail@plt+0x1ea44>
   2fb94:	mov	r3, #1
   2fb98:	b	2fba0 <__assert_fail@plt+0x1ea48>
   2fb9c:	mov	r3, #0
   2fba0:	cmp	r3, #0
   2fba4:	bne	2fb44 <__assert_fail@plt+0x1e9ec>
   2fba8:	ldr	r3, [fp, #-8]
   2fbac:	b	2fbbc <__assert_fail@plt+0x1ea64>
   2fbb0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2fbb4:	bl	11050 <strlen@plt>
   2fbb8:	mov	r3, r0
   2fbbc:	mov	r0, r3
   2fbc0:	sub	sp, fp, #4
   2fbc4:	pop	{fp, pc}
   2fbc8:	push	{fp, lr}
   2fbcc:	add	fp, sp, #4
   2fbd0:	sub	sp, sp, #16
   2fbd4:	str	r0, [fp, #-16]
   2fbd8:	mov	r1, #0
   2fbdc:	ldr	r0, [fp, #-16]
   2fbe0:	bl	110ec <setlocale@plt>
   2fbe4:	str	r0, [fp, #-8]
   2fbe8:	ldr	r3, [fp, #-8]
   2fbec:	mov	r0, r3
   2fbf0:	sub	sp, fp, #4
   2fbf4:	pop	{fp, pc}
   2fbf8:	push	{fp, lr}
   2fbfc:	add	fp, sp, #4
   2fc00:	sub	sp, sp, #24
   2fc04:	str	r0, [fp, #-16]
   2fc08:	str	r1, [fp, #-20]	; 0xffffffec
   2fc0c:	str	r2, [fp, #-24]	; 0xffffffe8
   2fc10:	ldr	r0, [fp, #-16]
   2fc14:	bl	2fbc8 <__assert_fail@plt+0x1ea70>
   2fc18:	str	r0, [fp, #-8]
   2fc1c:	ldr	r3, [fp, #-8]
   2fc20:	cmp	r3, #0
   2fc24:	bne	2fc48 <__assert_fail@plt+0x1eaf0>
   2fc28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc2c:	cmp	r3, #0
   2fc30:	beq	2fc40 <__assert_fail@plt+0x1eae8>
   2fc34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fc38:	mov	r2, #0
   2fc3c:	strb	r2, [r3]
   2fc40:	mov	r3, #22
   2fc44:	b	2fcc4 <__assert_fail@plt+0x1eb6c>
   2fc48:	ldr	r0, [fp, #-8]
   2fc4c:	bl	11050 <strlen@plt>
   2fc50:	str	r0, [fp, #-12]
   2fc54:	ldr	r2, [fp, #-12]
   2fc58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc5c:	cmp	r2, r3
   2fc60:	bcs	2fc84 <__assert_fail@plt+0x1eb2c>
   2fc64:	ldr	r3, [fp, #-12]
   2fc68:	add	r3, r3, #1
   2fc6c:	mov	r2, r3
   2fc70:	ldr	r1, [fp, #-8]
   2fc74:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fc78:	bl	10f00 <memcpy@plt>
   2fc7c:	mov	r3, #0
   2fc80:	b	2fcc4 <__assert_fail@plt+0x1eb6c>
   2fc84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc88:	cmp	r3, #0
   2fc8c:	beq	2fcc0 <__assert_fail@plt+0x1eb68>
   2fc90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc94:	sub	r3, r3, #1
   2fc98:	mov	r2, r3
   2fc9c:	ldr	r1, [fp, #-8]
   2fca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fca4:	bl	10f00 <memcpy@plt>
   2fca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fcac:	sub	r3, r3, #1
   2fcb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fcb4:	add	r3, r2, r3
   2fcb8:	mov	r2, #0
   2fcbc:	strb	r2, [r3]
   2fcc0:	mov	r3, #34	; 0x22
   2fcc4:	mov	r0, r3
   2fcc8:	sub	sp, fp, #4
   2fccc:	pop	{fp, pc}
   2fcd0:	push	{fp, lr}
   2fcd4:	add	fp, sp, #4
   2fcd8:	sub	sp, sp, #16
   2fcdc:	str	r0, [fp, #-8]
   2fce0:	str	r1, [fp, #-12]
   2fce4:	str	r2, [fp, #-16]
   2fce8:	ldr	r2, [fp, #-16]
   2fcec:	ldr	r1, [fp, #-12]
   2fcf0:	ldr	r0, [fp, #-8]
   2fcf4:	bl	2fbf8 <__assert_fail@plt+0x1eaa0>
   2fcf8:	mov	r3, r0
   2fcfc:	mov	r0, r3
   2fd00:	sub	sp, fp, #4
   2fd04:	pop	{fp, pc}
   2fd08:	push	{fp, lr}
   2fd0c:	add	fp, sp, #4
   2fd10:	sub	sp, sp, #8
   2fd14:	str	r0, [fp, #-8]
   2fd18:	ldr	r0, [fp, #-8]
   2fd1c:	bl	2fbc8 <__assert_fail@plt+0x1ea70>
   2fd20:	mov	r3, r0
   2fd24:	mov	r0, r3
   2fd28:	sub	sp, fp, #4
   2fd2c:	pop	{fp, pc}
   2fd30:	subs	r2, r1, #1
   2fd34:	bxeq	lr
   2fd38:	bcc	2ff10 <__assert_fail@plt+0x1edb8>
   2fd3c:	cmp	r0, r1
   2fd40:	bls	2fef4 <__assert_fail@plt+0x1ed9c>
   2fd44:	tst	r1, r2
   2fd48:	beq	2ff00 <__assert_fail@plt+0x1eda8>
   2fd4c:	clz	r3, r0
   2fd50:	clz	r2, r1
   2fd54:	sub	r3, r2, r3
   2fd58:	rsbs	r3, r3, #31
   2fd5c:	addne	r3, r3, r3, lsl #1
   2fd60:	mov	r2, #0
   2fd64:	addne	pc, pc, r3, lsl #2
   2fd68:	nop			; (mov r0, r0)
   2fd6c:	cmp	r0, r1, lsl #31
   2fd70:	adc	r2, r2, r2
   2fd74:	subcs	r0, r0, r1, lsl #31
   2fd78:	cmp	r0, r1, lsl #30
   2fd7c:	adc	r2, r2, r2
   2fd80:	subcs	r0, r0, r1, lsl #30
   2fd84:	cmp	r0, r1, lsl #29
   2fd88:	adc	r2, r2, r2
   2fd8c:	subcs	r0, r0, r1, lsl #29
   2fd90:	cmp	r0, r1, lsl #28
   2fd94:	adc	r2, r2, r2
   2fd98:	subcs	r0, r0, r1, lsl #28
   2fd9c:	cmp	r0, r1, lsl #27
   2fda0:	adc	r2, r2, r2
   2fda4:	subcs	r0, r0, r1, lsl #27
   2fda8:	cmp	r0, r1, lsl #26
   2fdac:	adc	r2, r2, r2
   2fdb0:	subcs	r0, r0, r1, lsl #26
   2fdb4:	cmp	r0, r1, lsl #25
   2fdb8:	adc	r2, r2, r2
   2fdbc:	subcs	r0, r0, r1, lsl #25
   2fdc0:	cmp	r0, r1, lsl #24
   2fdc4:	adc	r2, r2, r2
   2fdc8:	subcs	r0, r0, r1, lsl #24
   2fdcc:	cmp	r0, r1, lsl #23
   2fdd0:	adc	r2, r2, r2
   2fdd4:	subcs	r0, r0, r1, lsl #23
   2fdd8:	cmp	r0, r1, lsl #22
   2fddc:	adc	r2, r2, r2
   2fde0:	subcs	r0, r0, r1, lsl #22
   2fde4:	cmp	r0, r1, lsl #21
   2fde8:	adc	r2, r2, r2
   2fdec:	subcs	r0, r0, r1, lsl #21
   2fdf0:	cmp	r0, r1, lsl #20
   2fdf4:	adc	r2, r2, r2
   2fdf8:	subcs	r0, r0, r1, lsl #20
   2fdfc:	cmp	r0, r1, lsl #19
   2fe00:	adc	r2, r2, r2
   2fe04:	subcs	r0, r0, r1, lsl #19
   2fe08:	cmp	r0, r1, lsl #18
   2fe0c:	adc	r2, r2, r2
   2fe10:	subcs	r0, r0, r1, lsl #18
   2fe14:	cmp	r0, r1, lsl #17
   2fe18:	adc	r2, r2, r2
   2fe1c:	subcs	r0, r0, r1, lsl #17
   2fe20:	cmp	r0, r1, lsl #16
   2fe24:	adc	r2, r2, r2
   2fe28:	subcs	r0, r0, r1, lsl #16
   2fe2c:	cmp	r0, r1, lsl #15
   2fe30:	adc	r2, r2, r2
   2fe34:	subcs	r0, r0, r1, lsl #15
   2fe38:	cmp	r0, r1, lsl #14
   2fe3c:	adc	r2, r2, r2
   2fe40:	subcs	r0, r0, r1, lsl #14
   2fe44:	cmp	r0, r1, lsl #13
   2fe48:	adc	r2, r2, r2
   2fe4c:	subcs	r0, r0, r1, lsl #13
   2fe50:	cmp	r0, r1, lsl #12
   2fe54:	adc	r2, r2, r2
   2fe58:	subcs	r0, r0, r1, lsl #12
   2fe5c:	cmp	r0, r1, lsl #11
   2fe60:	adc	r2, r2, r2
   2fe64:	subcs	r0, r0, r1, lsl #11
   2fe68:	cmp	r0, r1, lsl #10
   2fe6c:	adc	r2, r2, r2
   2fe70:	subcs	r0, r0, r1, lsl #10
   2fe74:	cmp	r0, r1, lsl #9
   2fe78:	adc	r2, r2, r2
   2fe7c:	subcs	r0, r0, r1, lsl #9
   2fe80:	cmp	r0, r1, lsl #8
   2fe84:	adc	r2, r2, r2
   2fe88:	subcs	r0, r0, r1, lsl #8
   2fe8c:	cmp	r0, r1, lsl #7
   2fe90:	adc	r2, r2, r2
   2fe94:	subcs	r0, r0, r1, lsl #7
   2fe98:	cmp	r0, r1, lsl #6
   2fe9c:	adc	r2, r2, r2
   2fea0:	subcs	r0, r0, r1, lsl #6
   2fea4:	cmp	r0, r1, lsl #5
   2fea8:	adc	r2, r2, r2
   2feac:	subcs	r0, r0, r1, lsl #5
   2feb0:	cmp	r0, r1, lsl #4
   2feb4:	adc	r2, r2, r2
   2feb8:	subcs	r0, r0, r1, lsl #4
   2febc:	cmp	r0, r1, lsl #3
   2fec0:	adc	r2, r2, r2
   2fec4:	subcs	r0, r0, r1, lsl #3
   2fec8:	cmp	r0, r1, lsl #2
   2fecc:	adc	r2, r2, r2
   2fed0:	subcs	r0, r0, r1, lsl #2
   2fed4:	cmp	r0, r1, lsl #1
   2fed8:	adc	r2, r2, r2
   2fedc:	subcs	r0, r0, r1, lsl #1
   2fee0:	cmp	r0, r1
   2fee4:	adc	r2, r2, r2
   2fee8:	subcs	r0, r0, r1
   2feec:	mov	r0, r2
   2fef0:	bx	lr
   2fef4:	moveq	r0, #1
   2fef8:	movne	r0, #0
   2fefc:	bx	lr
   2ff00:	clz	r2, r1
   2ff04:	rsb	r2, r2, #31
   2ff08:	lsr	r0, r0, r2
   2ff0c:	bx	lr
   2ff10:	cmp	r0, #0
   2ff14:	mvnne	r0, #0
   2ff18:	b	301b8 <__assert_fail@plt+0x1f060>
   2ff1c:	cmp	r1, #0
   2ff20:	beq	2ff10 <__assert_fail@plt+0x1edb8>
   2ff24:	push	{r0, r1, lr}
   2ff28:	bl	2fd30 <__assert_fail@plt+0x1ebd8>
   2ff2c:	pop	{r1, r2, lr}
   2ff30:	mul	r3, r2, r0
   2ff34:	sub	r1, r1, r3
   2ff38:	bx	lr
   2ff3c:	cmp	r1, #0
   2ff40:	beq	3014c <__assert_fail@plt+0x1eff4>
   2ff44:	eor	ip, r0, r1
   2ff48:	rsbmi	r1, r1, #0
   2ff4c:	subs	r2, r1, #1
   2ff50:	beq	30118 <__assert_fail@plt+0x1efc0>
   2ff54:	movs	r3, r0
   2ff58:	rsbmi	r3, r0, #0
   2ff5c:	cmp	r3, r1
   2ff60:	bls	30124 <__assert_fail@plt+0x1efcc>
   2ff64:	tst	r1, r2
   2ff68:	beq	30134 <__assert_fail@plt+0x1efdc>
   2ff6c:	clz	r2, r3
   2ff70:	clz	r0, r1
   2ff74:	sub	r2, r0, r2
   2ff78:	rsbs	r2, r2, #31
   2ff7c:	addne	r2, r2, r2, lsl #1
   2ff80:	mov	r0, #0
   2ff84:	addne	pc, pc, r2, lsl #2
   2ff88:	nop			; (mov r0, r0)
   2ff8c:	cmp	r3, r1, lsl #31
   2ff90:	adc	r0, r0, r0
   2ff94:	subcs	r3, r3, r1, lsl #31
   2ff98:	cmp	r3, r1, lsl #30
   2ff9c:	adc	r0, r0, r0
   2ffa0:	subcs	r3, r3, r1, lsl #30
   2ffa4:	cmp	r3, r1, lsl #29
   2ffa8:	adc	r0, r0, r0
   2ffac:	subcs	r3, r3, r1, lsl #29
   2ffb0:	cmp	r3, r1, lsl #28
   2ffb4:	adc	r0, r0, r0
   2ffb8:	subcs	r3, r3, r1, lsl #28
   2ffbc:	cmp	r3, r1, lsl #27
   2ffc0:	adc	r0, r0, r0
   2ffc4:	subcs	r3, r3, r1, lsl #27
   2ffc8:	cmp	r3, r1, lsl #26
   2ffcc:	adc	r0, r0, r0
   2ffd0:	subcs	r3, r3, r1, lsl #26
   2ffd4:	cmp	r3, r1, lsl #25
   2ffd8:	adc	r0, r0, r0
   2ffdc:	subcs	r3, r3, r1, lsl #25
   2ffe0:	cmp	r3, r1, lsl #24
   2ffe4:	adc	r0, r0, r0
   2ffe8:	subcs	r3, r3, r1, lsl #24
   2ffec:	cmp	r3, r1, lsl #23
   2fff0:	adc	r0, r0, r0
   2fff4:	subcs	r3, r3, r1, lsl #23
   2fff8:	cmp	r3, r1, lsl #22
   2fffc:	adc	r0, r0, r0
   30000:	subcs	r3, r3, r1, lsl #22
   30004:	cmp	r3, r1, lsl #21
   30008:	adc	r0, r0, r0
   3000c:	subcs	r3, r3, r1, lsl #21
   30010:	cmp	r3, r1, lsl #20
   30014:	adc	r0, r0, r0
   30018:	subcs	r3, r3, r1, lsl #20
   3001c:	cmp	r3, r1, lsl #19
   30020:	adc	r0, r0, r0
   30024:	subcs	r3, r3, r1, lsl #19
   30028:	cmp	r3, r1, lsl #18
   3002c:	adc	r0, r0, r0
   30030:	subcs	r3, r3, r1, lsl #18
   30034:	cmp	r3, r1, lsl #17
   30038:	adc	r0, r0, r0
   3003c:	subcs	r3, r3, r1, lsl #17
   30040:	cmp	r3, r1, lsl #16
   30044:	adc	r0, r0, r0
   30048:	subcs	r3, r3, r1, lsl #16
   3004c:	cmp	r3, r1, lsl #15
   30050:	adc	r0, r0, r0
   30054:	subcs	r3, r3, r1, lsl #15
   30058:	cmp	r3, r1, lsl #14
   3005c:	adc	r0, r0, r0
   30060:	subcs	r3, r3, r1, lsl #14
   30064:	cmp	r3, r1, lsl #13
   30068:	adc	r0, r0, r0
   3006c:	subcs	r3, r3, r1, lsl #13
   30070:	cmp	r3, r1, lsl #12
   30074:	adc	r0, r0, r0
   30078:	subcs	r3, r3, r1, lsl #12
   3007c:	cmp	r3, r1, lsl #11
   30080:	adc	r0, r0, r0
   30084:	subcs	r3, r3, r1, lsl #11
   30088:	cmp	r3, r1, lsl #10
   3008c:	adc	r0, r0, r0
   30090:	subcs	r3, r3, r1, lsl #10
   30094:	cmp	r3, r1, lsl #9
   30098:	adc	r0, r0, r0
   3009c:	subcs	r3, r3, r1, lsl #9
   300a0:	cmp	r3, r1, lsl #8
   300a4:	adc	r0, r0, r0
   300a8:	subcs	r3, r3, r1, lsl #8
   300ac:	cmp	r3, r1, lsl #7
   300b0:	adc	r0, r0, r0
   300b4:	subcs	r3, r3, r1, lsl #7
   300b8:	cmp	r3, r1, lsl #6
   300bc:	adc	r0, r0, r0
   300c0:	subcs	r3, r3, r1, lsl #6
   300c4:	cmp	r3, r1, lsl #5
   300c8:	adc	r0, r0, r0
   300cc:	subcs	r3, r3, r1, lsl #5
   300d0:	cmp	r3, r1, lsl #4
   300d4:	adc	r0, r0, r0
   300d8:	subcs	r3, r3, r1, lsl #4
   300dc:	cmp	r3, r1, lsl #3
   300e0:	adc	r0, r0, r0
   300e4:	subcs	r3, r3, r1, lsl #3
   300e8:	cmp	r3, r1, lsl #2
   300ec:	adc	r0, r0, r0
   300f0:	subcs	r3, r3, r1, lsl #2
   300f4:	cmp	r3, r1, lsl #1
   300f8:	adc	r0, r0, r0
   300fc:	subcs	r3, r3, r1, lsl #1
   30100:	cmp	r3, r1
   30104:	adc	r0, r0, r0
   30108:	subcs	r3, r3, r1
   3010c:	cmp	ip, #0
   30110:	rsbmi	r0, r0, #0
   30114:	bx	lr
   30118:	teq	ip, r0
   3011c:	rsbmi	r0, r0, #0
   30120:	bx	lr
   30124:	movcc	r0, #0
   30128:	asreq	r0, ip, #31
   3012c:	orreq	r0, r0, #1
   30130:	bx	lr
   30134:	clz	r2, r1
   30138:	rsb	r2, r2, #31
   3013c:	cmp	ip, #0
   30140:	lsr	r0, r3, r2
   30144:	rsbmi	r0, r0, #0
   30148:	bx	lr
   3014c:	cmp	r0, #0
   30150:	mvngt	r0, #-2147483648	; 0x80000000
   30154:	movlt	r0, #-2147483648	; 0x80000000
   30158:	b	301b8 <__assert_fail@plt+0x1f060>
   3015c:	cmp	r1, #0
   30160:	beq	3014c <__assert_fail@plt+0x1eff4>
   30164:	push	{r0, r1, lr}
   30168:	bl	2ff44 <__assert_fail@plt+0x1edec>
   3016c:	pop	{r1, r2, lr}
   30170:	mul	r3, r2, r0
   30174:	sub	r1, r1, r3
   30178:	bx	lr
   3017c:	cmp	r3, #0
   30180:	cmpeq	r2, #0
   30184:	bne	3019c <__assert_fail@plt+0x1f044>
   30188:	cmp	r1, #0
   3018c:	cmpeq	r0, #0
   30190:	mvnne	r1, #0
   30194:	mvnne	r0, #0
   30198:	b	301b8 <__assert_fail@plt+0x1f060>
   3019c:	sub	sp, sp, #8
   301a0:	push	{sp, lr}
   301a4:	bl	301c8 <__assert_fail@plt+0x1f070>
   301a8:	ldr	lr, [sp, #4]
   301ac:	add	sp, sp, #8
   301b0:	pop	{r2, r3}
   301b4:	bx	lr
   301b8:	push	{r1, lr}
   301bc:	mov	r0, #8
   301c0:	bl	10e88 <raise@plt>
   301c4:	pop	{r1, pc}
   301c8:	cmp	r1, r3
   301cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   301d0:	cmpeq	r0, r2
   301d4:	mov	r4, r0
   301d8:	mov	r5, r1
   301dc:	ldr	r9, [sp, #28]
   301e0:	movcc	r0, #0
   301e4:	movcc	r1, #0
   301e8:	bcc	302e0 <__assert_fail@plt+0x1f188>
   301ec:	cmp	r3, #0
   301f0:	clzeq	ip, r2
   301f4:	clzne	ip, r3
   301f8:	addeq	ip, ip, #32
   301fc:	cmp	r5, #0
   30200:	clzeq	r1, r4
   30204:	addeq	r1, r1, #32
   30208:	clzne	r1, r5
   3020c:	sub	ip, ip, r1
   30210:	sub	lr, ip, #32
   30214:	lsl	r7, r3, ip
   30218:	rsb	r8, ip, #32
   3021c:	orr	r7, r7, r2, lsl lr
   30220:	orr	r7, r7, r2, lsr r8
   30224:	lsl	r6, r2, ip
   30228:	cmp	r5, r7
   3022c:	cmpeq	r4, r6
   30230:	movcc	r0, #0
   30234:	movcc	r1, #0
   30238:	bcc	30254 <__assert_fail@plt+0x1f0fc>
   3023c:	mov	r3, #1
   30240:	subs	r4, r4, r6
   30244:	lsl	r1, r3, lr
   30248:	lsl	r0, r3, ip
   3024c:	orr	r1, r1, r3, lsr r8
   30250:	sbc	r5, r5, r7
   30254:	cmp	ip, #0
   30258:	beq	302e0 <__assert_fail@plt+0x1f188>
   3025c:	lsrs	r3, r7, #1
   30260:	rrx	r2, r6
   30264:	mov	r6, ip
   30268:	b	3028c <__assert_fail@plt+0x1f134>
   3026c:	subs	r4, r4, r2
   30270:	sbc	r5, r5, r3
   30274:	adds	r4, r4, r4
   30278:	adc	r5, r5, r5
   3027c:	adds	r4, r4, #1
   30280:	adc	r5, r5, #0
   30284:	subs	r6, r6, #1
   30288:	beq	302a8 <__assert_fail@plt+0x1f150>
   3028c:	cmp	r5, r3
   30290:	cmpeq	r4, r2
   30294:	bcs	3026c <__assert_fail@plt+0x1f114>
   30298:	adds	r4, r4, r4
   3029c:	adc	r5, r5, r5
   302a0:	subs	r6, r6, #1
   302a4:	bne	3028c <__assert_fail@plt+0x1f134>
   302a8:	lsr	r6, r4, ip
   302ac:	lsr	r7, r5, ip
   302b0:	orr	r6, r6, r5, lsl r8
   302b4:	adds	r2, r0, r4
   302b8:	orr	r6, r6, r5, lsr lr
   302bc:	adc	r3, r1, r5
   302c0:	lsl	r1, r7, ip
   302c4:	orr	r1, r1, r6, lsl lr
   302c8:	lsl	r0, r6, ip
   302cc:	orr	r1, r1, r6, lsr r8
   302d0:	subs	r0, r2, r0
   302d4:	mov	r4, r6
   302d8:	mov	r5, r7
   302dc:	sbc	r1, r3, r1
   302e0:	cmp	r9, #0
   302e4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   302e8:	strd	r4, [r9]
   302ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   302f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   302f4:	mov	r7, r0
   302f8:	ldr	r6, [pc, #72]	; 30348 <__assert_fail@plt+0x1f1f0>
   302fc:	ldr	r5, [pc, #72]	; 3034c <__assert_fail@plt+0x1f1f4>
   30300:	add	r6, pc, r6
   30304:	add	r5, pc, r5
   30308:	sub	r6, r6, r5
   3030c:	mov	r8, r1
   30310:	mov	r9, r2
   30314:	bl	10e50 <calloc@plt-0x20>
   30318:	asrs	r6, r6, #2
   3031c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   30320:	mov	r4, #0
   30324:	add	r4, r4, #1
   30328:	ldr	r3, [r5], #4
   3032c:	mov	r2, r9
   30330:	mov	r1, r8
   30334:	mov	r0, r7
   30338:	blx	r3
   3033c:	cmp	r6, r4
   30340:	bne	30324 <__assert_fail@plt+0x1f1cc>
   30344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30348:	andeq	r4, r1, r8, lsl #24
   3034c:	andeq	r4, r1, r0, lsl #24
   30350:	bx	lr
   30354:	ldr	r3, [pc, #12]	; 30368 <__assert_fail@plt+0x1f210>
   30358:	mov	r1, #0
   3035c:	add	r3, pc, r3
   30360:	ldr	r2, [r3]
   30364:	b	1108c <__cxa_atexit@plt>
   30368:	andeq	r4, r1, ip, lsr #27

Disassembly of section .fini:

0003036c <.fini>:
   3036c:	push	{r3, lr}
   30370:	pop	{r3, pc}
