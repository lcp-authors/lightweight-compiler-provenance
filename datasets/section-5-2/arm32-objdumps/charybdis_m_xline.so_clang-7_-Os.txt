
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init>:
 c54:	push	{r3, lr}
 c58:	bl	e3c <call_weak_fn>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <.plt>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <.plt+0x10>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:	.word	0x00012390

00000c74 <propagate_generic@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #912]!	; 0x390

00000c80 <make_conf@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #904]!	; 0x388

00000c8c <rb_current_time@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #896]!	; 0x380

00000c98 <sendto_match_servs@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #888]!	; 0x378

00000ca4 <__cxa_finalize@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #880]!	; 0x370

00000cb0 <sendto_one@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #872]!	; 0x368

00000cbc <replace_old_ban@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #864]!	; 0x360

00000cc8 <rb_outofmemory@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #856]!	; 0x358

00000cd4 <operhash_delete@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #848]!	; 0x350

00000ce0 <sendto_realops_snomask@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #840]!	; 0x348

00000cec <bandb_add@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #832]!	; 0x340

00000cf8 <deactivate_conf@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #824]!	; 0x338

00000d04 <check_xlines@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #816]!	; 0x330

00000d10 <get_oper_name@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #808]!	; 0x328

00000d1c <rb_free_rb_dlink_node@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #800]!	; 0x320

00000d28 <cluster_generic@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #792]!	; 0x318

00000d34 <operhash_add@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #784]!	; 0x310

00000d40 <strcpy@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #776]!	; 0x308

00000d4c <sendto_server@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #768]!	; 0x300

00000d58 <malloc@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #760]!	; 0x2f8

00000d64 <__gmon_start__@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d70 <free_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #744]!	; 0x2e8

00000d7c <rb_make_rb_dlink_node@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #736]!	; 0x2e0

00000d88 <strlen@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #728]!	; 0x2d8

00000d94 <find_xline_mask@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00000da0 <ilog@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #712]!	; 0x2c8

00000dac <collapse@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #704]!	; 0x2c0

00000db8 <match@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00000dc4 <valid_temp_time@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00000dd0 <remove_reject_mask@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00000ddc <sendto_one_notice@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #672]!	; 0x2a0

00000de8 <bandb_del@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #664]!	; 0x298

00000df4 <atoi@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #656]!	; 0x290

00000e00 <valid_wild_card_simple@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #648]!	; 0x288

00000e0c <find_shared_conf@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #640]!	; 0x280

00000e18 <privilegeset_in_set@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #632]!	; 0x278

00000e24 <irccmp@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #624]!	; 0x270

00000e30 <__assert_fail@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #616]!	; 0x268

Disassembly of section .text:

00000e3c <call_weak_fn>:
     e3c:	ldr	r3, [pc, #20]	; e58 <call_weak_fn+0x1c>
     e40:	ldr	r2, [pc, #20]	; e5c <call_weak_fn+0x20>
     e44:	add	r3, pc, r3
     e48:	ldr	r2, [r3, r2]
     e4c:	cmp	r2, #0
     e50:	bxeq	lr
     e54:	b	d64 <__gmon_start__@plt>
     e58:	.word	0x000121b4
     e5c:	.word	0x000000c0

00000e60 <deregister_tm_clones>:
     e60:	ldr	r0, [pc, #44]	; e94 <deregister_tm_clones+0x34>
     e64:	ldr	r3, [pc, #44]	; e98 <deregister_tm_clones+0x38>
     e68:	add	r0, pc, r0
     e6c:	add	r3, pc, r3
     e70:	cmp	r3, r0
     e74:	ldr	r3, [pc, #32]	; e9c <deregister_tm_clones+0x3c>
     e78:	add	r3, pc, r3
     e7c:	bxeq	lr
     e80:	ldr	r2, [pc, #24]	; ea0 <deregister_tm_clones+0x40>
     e84:	ldr	r3, [r3, r2]
     e88:	cmp	r3, #0
     e8c:	bxeq	lr
     e90:	bx	r3
     e94:	.word	0x00012328
     e98:	.word	0x00012324
     e9c:	.word	0x00012180
     ea0:	.word	0x000000a8

00000ea4 <register_tm_clones>:
     ea4:	ldr	r0, [pc, #56]	; ee4 <register_tm_clones+0x40>
     ea8:	ldr	r3, [pc, #56]	; ee8 <register_tm_clones+0x44>
     eac:	add	r0, pc, r0
     eb0:	add	r3, pc, r3
     eb4:	sub	r1, r3, r0
     eb8:	ldr	r3, [pc, #44]	; eec <register_tm_clones+0x48>
     ebc:	asr	r1, r1, #2
     ec0:	add	r3, pc, r3
     ec4:	add	r1, r1, r1, lsr #31
     ec8:	asrs	r1, r1, #1
     ecc:	bxeq	lr
     ed0:	ldr	r2, [pc, #24]	; ef0 <register_tm_clones+0x4c>
     ed4:	ldr	r3, [r3, r2]
     ed8:	cmp	r3, #0
     edc:	bxeq	lr
     ee0:	bx	r3
     ee4:	.word	0x000122e4
     ee8:	.word	0x000122e0
     eec:	.word	0x00012138
     ef0:	.word	0x000000c8

00000ef4 <__do_global_dtors_aux>:
     ef4:	ldr	r3, [pc, #76]	; f48 <__do_global_dtors_aux+0x54>
     ef8:	ldr	r2, [pc, #76]	; f4c <__do_global_dtors_aux+0x58>
     efc:	add	r3, pc, r3
     f00:	add	r2, pc, r2
     f04:	ldrb	r3, [r3]
     f08:	cmp	r3, #0
     f0c:	bxne	lr
     f10:	ldr	r3, [pc, #56]	; f50 <__do_global_dtors_aux+0x5c>
     f14:	push	{r4, lr}
     f18:	ldr	r3, [r2, r3]
     f1c:	cmp	r3, #0
     f20:	beq	f30 <__do_global_dtors_aux+0x3c>
     f24:	ldr	r3, [pc, #40]	; f54 <__do_global_dtors_aux+0x60>
     f28:	ldr	r0, [pc, r3]
     f2c:	bl	ca4 <__cxa_finalize@plt>
     f30:	bl	e60 <deregister_tm_clones>
     f34:	ldr	r3, [pc, #28]	; f58 <__do_global_dtors_aux+0x64>
     f38:	mov	r2, #1
     f3c:	add	r3, pc, r3
     f40:	strb	r2, [r3]
     f44:	pop	{r4, pc}
     f48:	.word	0x00012294
     f4c:	.word	0x000120f8
     f50:	.word	0x000000a4
     f54:	.word	0x000121a8
     f58:	.word	0x00012254

00000f5c <frame_dummy>:
     f5c:	b	ea4 <register_tm_clones>

00000f60 <ms_xline>:
     f60:	push	{r4, r5, fp, lr}
     f64:	add	fp, sp, #8
     f68:	sub	sp, sp, #8
     f6c:	ldr	r5, [fp, #8]
     f70:	mov	r4, r2
     f74:	ldmib	r5, {r1, r3}
     f78:	ldr	r0, [r5, #12]
     f7c:	ldr	r2, [r5, #16]
     f80:	stm	sp, {r0, r2}
     f84:	mov	r0, r4
     f88:	mov	r2, #0
     f8c:	bl	1638 <propagate_xline>
     f90:	ldrh	r0, [r4, #80]	; 0x50
     f94:	cmp	r0, #64	; 0x40
     f98:	bne	fe0 <ms_xline+0x80>
     f9c:	ldr	r0, [r4, #24]
     fa0:	cmp	r0, #0
     fa4:	beq	fe0 <ms_xline+0x80>
     fa8:	ldr	r0, [r5, #4]
     fac:	ldr	r1, [pc, #52]	; fe8 <ms_xline+0x88>
     fb0:	ldr	r1, [pc, r1]
     fb4:	add	r1, r1, #88	; 0x58
     fb8:	bl	db8 <match@plt>
     fbc:	cmp	r0, #0
     fc0:	beq	fe0 <ms_xline+0x80>
     fc4:	ldr	r2, [r5, #8]
     fc8:	ldr	r3, [r5, #16]
     fcc:	mov	r0, r4
     fd0:	mov	r1, #0
     fd4:	sub	sp, fp, #8
     fd8:	pop	{r4, r5, fp, lr}
     fdc:	b	1c0c <handle_remote_xline>
     fe0:	sub	sp, fp, #8
     fe4:	pop	{r4, r5, fp, pc}
     fe8:	.word	0x00012114

00000fec <me_xline>:
     fec:	push	{r4, r5, fp, lr}
     ff0:	add	fp, sp, #8
     ff4:	ldrh	r0, [r2, #80]	; 0x50
     ff8:	cmp	r0, #64	; 0x40
     ffc:	popne	{r4, r5, fp, pc}
    1000:	ldr	r0, [r2, #24]
    1004:	mov	r4, r2
    1008:	cmp	r0, #0
    100c:	beq	1034 <me_xline+0x48>
    1010:	ldr	r5, [fp, #8]
    1014:	ldr	r0, [r5, #4]
    1018:	bl	df4 <atoi@plt>
    101c:	ldr	r2, [r5, #8]
    1020:	ldr	r3, [r5, #16]
    1024:	mov	r1, r0
    1028:	mov	r0, r4
    102c:	pop	{r4, r5, fp, lr}
    1030:	b	1c0c <handle_remote_xline>
    1034:	pop	{r4, r5, fp, pc}

00001038 <mo_xline>:
    1038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    103c:	add	fp, sp, #28
    1040:	sub	sp, sp, #36	; 0x24
    1044:	ldr	r0, [r2, #24]
    1048:	ldr	r1, [pc, #848]	; 13a0 <mo_xline+0x368>
    104c:	mov	r4, r2
    1050:	ldr	r1, [pc, r1]
    1054:	ldr	r5, [r1, #324]	; 0x144
    1058:	cmp	r5, #0
    105c:	mov	r6, r5
    1060:	movwne	r6, #1
    1064:	cmp	r0, #0
    1068:	ldrne	r0, [r0, #36]	; 0x24
    106c:	cmpne	r0, #0
    1070:	bne	10a8 <mo_xline+0x70>
    1074:	ldr	r0, [pc, #812]	; 13a8 <mo_xline+0x370>
    1078:	add	r0, pc, r0
    107c:	str	r0, [sp]
    1080:	add	r3, r4, #88	; 0x58
    1084:	ldr	r0, [pc, #800]	; 13ac <mo_xline+0x374>
    1088:	ldr	r0, [pc, r0]
    108c:	ldr	r1, [pc, #796]	; 13b0 <mo_xline+0x378>
    1090:	add	r2, r0, #88	; 0x58
    1094:	add	r1, pc, r1
    1098:	mov	r0, r4
    109c:	bl	cb0 <sendto_one@plt>
    10a0:	sub	sp, fp, #28
    10a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10a8:	ldr	r8, [fp, #8]
    10ac:	ldr	r1, [pc, #752]	; 13a4 <mo_xline+0x36c>
    10b0:	mov	r7, r3
    10b4:	add	r1, pc, r1
    10b8:	bl	e18 <privilegeset_in_set@plt>
    10bc:	cmp	r0, #0
    10c0:	beq	1074 <mo_xline+0x3c>
    10c4:	ldr	r0, [r8, #4]
    10c8:	bl	dc4 <valid_temp_time@plt>
    10cc:	cmn	r0, #1
    10d0:	mov	r9, #1
    10d4:	mov	r3, r0
    10d8:	mov	r1, #0
    10dc:	movwgt	r9, #2
    10e0:	movle	r3, r1
    10e4:	ldr	r0, [r8, r9, lsl #2]
    10e8:	add	sl, r9, #1
    10ec:	str	r0, [sp, #32]
    10f0:	add	r0, r9, #3
    10f4:	cmp	r0, r7
    10f8:	bgt	1124 <mo_xline+0xec>
    10fc:	str	r0, [sp, #24]
    1100:	ldr	r0, [r8, sl, lsl #2]
    1104:	ldr	r1, [pc, #680]	; 13b4 <mo_xline+0x37c>
    1108:	str	r3, [sp, #28]
    110c:	add	r1, pc, r1
    1110:	bl	e24 <irccmp@plt>
    1114:	ldr	r3, [sp, #28]
    1118:	mov	r1, #0
    111c:	cmp	r0, #0
    1120:	beq	1168 <mo_xline+0x130>
    1124:	cmp	sl, r7
    1128:	bge	1140 <mo_xline+0x108>
    112c:	ldr	r9, [r8, sl, lsl #2]
    1130:	cmp	r9, #0
    1134:	ldrbne	r0, [r9]
    1138:	cmpne	r0, #0
    113c:	bne	1188 <mo_xline+0x150>
    1140:	ldr	r0, [pc, #632]	; 13c0 <mo_xline+0x388>
    1144:	add	r3, r4, #88	; 0x58
    1148:	add	r0, pc, r0
    114c:	str	r0, [sp]
    1150:	ldr	r0, [pc, #620]	; 13c4 <mo_xline+0x38c>
    1154:	ldr	r0, [pc, r0]
    1158:	ldr	r1, [pc, #616]	; 13c8 <mo_xline+0x390>
    115c:	add	r2, r0, #88	; 0x58
    1160:	add	r1, pc, r1
    1164:	b	1098 <mo_xline+0x60>
    1168:	ldr	r0, [r4, #24]
    116c:	cmp	r0, #0
    1170:	ldrne	r0, [r0, #36]	; 0x24
    1174:	cmpne	r0, #0
    1178:	bne	1314 <mo_xline+0x2dc>
    117c:	ldr	r0, [pc, #568]	; 13bc <mo_xline+0x384>
    1180:	add	r0, pc, r0
    1184:	b	107c <mo_xline+0x44>
    1188:	cmp	r1, #0
    118c:	beq	11dc <mo_xline+0x1a4>
    1190:	ldr	r0, [pc, #564]	; 13cc <mo_xline+0x394>
    1194:	mov	r5, r3
    1198:	mov	r2, r3
    119c:	mov	r6, r1
    11a0:	add	r0, pc, r0
    11a4:	stm	sp, {r0, r9}
    11a8:	mov	r0, r4
    11ac:	ldr	r8, [sp, #32]
    11b0:	mov	r3, r8
    11b4:	bl	1638 <propagate_xline>
    11b8:	ldr	r0, [pc, #528]	; 13d0 <mo_xline+0x398>
    11bc:	ldr	r0, [pc, r0]
    11c0:	add	r1, r0, #88	; 0x58
    11c4:	mov	r0, r6
    11c8:	bl	db8 <match@plt>
    11cc:	mov	r6, #0
    11d0:	cmp	r0, #0
    11d4:	bne	12d4 <mo_xline+0x29c>
    11d8:	b	10a0 <mo_xline+0x68>
    11dc:	ldr	r0, [pc, #496]	; 13d4 <mo_xline+0x39c>
    11e0:	ldr	r0, [pc, r0]
    11e4:	ldr	r8, [sp, #32]
    11e8:	ldr	r1, [r0, #8]
    11ec:	cmp	r1, #0
    11f0:	beq	12d0 <mo_xline+0x298>
    11f4:	cmp	r5, #0
    11f8:	bne	12d0 <mo_xline+0x298>
    11fc:	ldr	r5, [r0]
    1200:	cmp	r5, #0
    1204:	beq	12d0 <mo_xline+0x298>
    1208:	ldr	sl, [pc, #456]	; 13d8 <mo_xline+0x3a0>
    120c:	ldr	sl, [pc, sl]
    1210:	ldr	r7, [r5]
    1214:	cmp	r3, #0
    1218:	ldr	r0, [r7, #12]
    121c:	beq	1254 <mo_xline+0x21c>
    1220:	tst	r0, #16
    1224:	beq	12c4 <mo_xline+0x28c>
    1228:	ldr	r1, [r7, #8]
    122c:	ldr	r2, [sl]
    1230:	ldr	r0, [pc, #436]	; 13ec <mo_xline+0x3b4>
    1234:	mov	r7, r3
    1238:	add	r0, pc, r0
    123c:	stm	sp, {r0, r1, r3, r8, r9}
    1240:	mov	r0, r4
    1244:	mov	r3, #0
    1248:	bl	c98 <sendto_match_servs@plt>
    124c:	mov	r3, r7
    1250:	b	12c4 <mo_xline+0x28c>
    1254:	tst	r0, #32
    1258:	beq	12c4 <mo_xline+0x28c>
    125c:	ldr	r0, [pc, #376]	; 13dc <mo_xline+0x3a4>
    1260:	ldr	r0, [pc, r0]
    1264:	ldr	r1, [r7, #8]
    1268:	ldr	r2, [r0]
    126c:	ldr	r0, [pc, #364]	; 13e0 <mo_xline+0x3a8>
    1270:	add	r0, pc, r0
    1274:	stm	sp, {r0, r1, r8, r9}
    1278:	mov	r8, r3
    127c:	mov	r0, r4
    1280:	mov	r3, #0
    1284:	bl	c98 <sendto_match_servs@plt>
    1288:	ldr	r0, [pc, #340]	; 13e4 <mo_xline+0x3ac>
    128c:	ldr	r0, [pc, r0]
    1290:	ldr	r2, [sl]
    1294:	ldr	r1, [r7, #8]
    1298:	ldr	r3, [r0]
    129c:	ldr	r0, [pc, #324]	; 13e8 <mo_xline+0x3b0>
    12a0:	add	r0, pc, r0
    12a4:	stm	sp, {r0, r1}
    12a8:	ldr	r0, [sp, #32]
    12ac:	str	r9, [sp, #12]
    12b0:	str	r0, [sp, #8]
    12b4:	mov	r0, r4
    12b8:	bl	c98 <sendto_match_servs@plt>
    12bc:	mov	r3, r8
    12c0:	ldr	r8, [sp, #32]
    12c4:	ldr	r5, [r5, #8]
    12c8:	cmp	r5, #0
    12cc:	bne	1210 <mo_xline+0x1d8>
    12d0:	mov	r5, r3
    12d4:	mov	r0, r8
    12d8:	bl	d94 <find_xline_mask@plt>
    12dc:	cmp	r0, #0
    12e0:	beq	133c <mo_xline+0x304>
    12e4:	ldr	r1, [r0, #16]
    12e8:	ldr	r0, [r0, #20]
    12ec:	str	r8, [sp]
    12f0:	add	r3, r4, #88	; 0x58
    12f4:	str	r1, [sp, #4]
    12f8:	str	r0, [sp, #8]
    12fc:	ldr	r0, [pc, #236]	; 13f0 <mo_xline+0x3b8>
    1300:	ldr	r0, [pc, r0]
    1304:	ldr	r1, [pc, #232]	; 13f4 <mo_xline+0x3bc>
    1308:	add	r2, r0, #88	; 0x58
    130c:	add	r1, pc, r1
    1310:	b	1098 <mo_xline+0x60>
    1314:	ldr	r1, [pc, #156]	; 13b8 <mo_xline+0x380>
    1318:	add	r1, pc, r1
    131c:	bl	e18 <privilegeset_in_set@plt>
    1320:	ldr	r3, [sp, #28]
    1324:	cmp	r0, #0
    1328:	beq	117c <mo_xline+0x144>
    132c:	add	r0, r8, r9, lsl #2
    1330:	ldr	sl, [sp, #24]
    1334:	ldr	r1, [r0, #8]
    1338:	b	1124 <mo_xline+0xec>
    133c:	mov	r0, r4
    1340:	mov	r1, r8
    1344:	mov	r2, r9
    1348:	bl	1720 <valid_xline>
    134c:	cmp	r0, #0
    1350:	beq	10a0 <mo_xline+0x68>
    1354:	cmp	r5, #0
    1358:	mov	r1, r5
    135c:	eor	r0, r6, #1
    1360:	movwne	r1, #1
    1364:	orrs	r0, r1, r0
    1368:	bne	1384 <mo_xline+0x34c>
    136c:	ldr	r1, [pc, #132]	; 13f8 <mo_xline+0x3c0>
    1370:	mov	r0, r4
    1374:	add	r1, pc, r1
    1378:	sub	sp, fp, #28
    137c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1380:	b	ddc <sendto_one_notice@plt>
    1384:	mov	r3, r5
    1388:	mov	r0, r4
    138c:	mov	r1, r8
    1390:	mov	r2, r9
    1394:	str	r6, [sp]
    1398:	bl	180c <apply_xline>
    139c:	b	10a0 <mo_xline+0x68>
    13a0:	.word	0x0001207c
    13a4:	.word	0x00001048
    13a8:	.word	0x000011f6
    13ac:	.word	0x0001203c
    13b0:	.word	0x00001073
    13b4:	.word	0x00001022
    13b8:	.word	0x00000e19
    13bc:	.word	0x00000fb6
    13c0:	.word	0x00000fae
    13c4:	.word	0x00011f70
    13c8:	.word	0x00000fe0
    13cc:	.word	0x00000fc5
    13d0:	.word	0x00011f08
    13d4:	.word	0x00011edc
    13d8:	.word	0x00011ebc
    13dc:	.word	0x00011e4c
    13e0:	.word	0x00000f95
    13e4:	.word	0x00011e20
    13e8:	.word	0x00000f77
    13ec:	.word	0x00000f96
    13f0:	.word	0x00011dc4
    13f4:	.word	0x00000e5b
    13f8:	.word	0x00000e24

000013fc <ms_unxline>:
    13fc:	push	{r4, r5, fp, lr}
    1400:	add	fp, sp, #8
    1404:	sub	sp, sp, #8
    1408:	ldr	r0, [pc, #132]	; 1494 <ms_unxline+0x98>
    140c:	mov	r4, r2
    1410:	ldr	r0, [pc, r0]
    1414:	ldr	r5, [fp, #8]
    1418:	ldr	r3, [r0]
    141c:	ldr	r2, [r5, #4]
    1420:	ldr	r0, [r5, #8]
    1424:	ldr	r1, [pc, #108]	; 1498 <ms_unxline+0x9c>
    1428:	add	r1, pc, r1
    142c:	str	r0, [sp, #4]
    1430:	mov	r0, r4
    1434:	str	r1, [sp]
    1438:	ldr	r1, [pc, #92]	; 149c <ms_unxline+0xa0>
    143c:	add	r1, pc, r1
    1440:	bl	c74 <propagate_generic@plt>
    1444:	ldr	r0, [r5, #4]
    1448:	ldr	r1, [pc, #80]	; 14a0 <ms_unxline+0xa4>
    144c:	ldr	r1, [pc, r1]
    1450:	add	r1, r1, #88	; 0x58
    1454:	bl	db8 <match@plt>
    1458:	cmp	r0, #0
    145c:	beq	148c <ms_unxline+0x90>
    1460:	ldrh	r0, [r4, #80]	; 0x50
    1464:	cmp	r0, #64	; 0x40
    1468:	bne	148c <ms_unxline+0x90>
    146c:	ldr	r0, [r4, #24]
    1470:	cmp	r0, #0
    1474:	beq	148c <ms_unxline+0x90>
    1478:	ldr	r1, [r5, #8]
    147c:	mov	r0, r4
    1480:	sub	sp, fp, #8
    1484:	pop	{r4, r5, fp, lr}
    1488:	b	20b0 <handle_remote_unxline>
    148c:	sub	sp, fp, #8
    1490:	pop	{r4, r5, fp, pc}
    1494:	.word	0x00011c9c
    1498:	.word	0x00000d6d
    149c:	.word	0x00000cb8
    14a0:	.word	0x00011c78

000014a4 <me_unxline>:
    14a4:	ldrh	r0, [r2, #80]	; 0x50
    14a8:	cmp	r0, #64	; 0x40
    14ac:	bxne	lr
    14b0:	ldr	r0, [r2, #24]
    14b4:	cmp	r0, #0
    14b8:	beq	14cc <me_unxline+0x28>
    14bc:	ldr	r0, [sp]
    14c0:	ldr	r1, [r0, #4]
    14c4:	mov	r0, r2
    14c8:	b	20b0 <handle_remote_unxline>
    14cc:	bx	lr

000014d0 <mo_unxline>:
    14d0:	push	{r4, r5, r6, r7, fp, lr}
    14d4:	add	fp, sp, #16
    14d8:	sub	sp, sp, #8
    14dc:	ldr	r0, [r2, #24]
    14e0:	mov	r4, r2
    14e4:	cmp	r0, #0
    14e8:	ldrne	r0, [r0, #36]	; 0x24
    14ec:	cmpne	r0, #0
    14f0:	bne	1528 <mo_unxline+0x58>
    14f4:	ldr	r0, [pc, #276]	; 1610 <mo_unxline+0x140>
    14f8:	add	r0, pc, r0
    14fc:	str	r0, [sp]
    1500:	add	r3, r4, #88	; 0x58
    1504:	ldr	r0, [pc, #264]	; 1614 <mo_unxline+0x144>
    1508:	ldr	r0, [pc, r0]
    150c:	ldr	r1, [pc, #260]	; 1618 <mo_unxline+0x148>
    1510:	add	r2, r0, #88	; 0x58
    1514:	add	r1, pc, r1
    1518:	mov	r0, r4
    151c:	bl	cb0 <sendto_one@plt>
    1520:	sub	sp, fp, #16
    1524:	pop	{r4, r5, r6, r7, fp, pc}
    1528:	ldr	r7, [fp, #8]
    152c:	ldr	r1, [pc, #216]	; 160c <mo_unxline+0x13c>
    1530:	mov	r6, r3
    1534:	add	r1, pc, r1
    1538:	bl	e18 <privilegeset_in_set@plt>
    153c:	cmp	r0, #0
    1540:	beq	14f4 <mo_unxline+0x24>
    1544:	mov	r5, #1
    1548:	cmp	r6, #4
    154c:	bne	1568 <mo_unxline+0x98>
    1550:	ldr	r0, [r7, #8]
    1554:	ldr	r1, [pc, #192]	; 161c <mo_unxline+0x14c>
    1558:	add	r1, pc, r1
    155c:	bl	e24 <irccmp@plt>
    1560:	cmp	r0, #0
    1564:	beq	1580 <mo_unxline+0xb0>
    1568:	ldr	r1, [r7, #4]
    156c:	mov	r0, r4
    1570:	mov	r2, r5
    1574:	sub	sp, fp, #16
    1578:	pop	{r4, r5, r6, r7, fp, lr}
    157c:	b	1cc4 <remove_xline>
    1580:	ldr	r0, [r4, #24]
    1584:	cmp	r0, #0
    1588:	ldrne	r0, [r0, #36]	; 0x24
    158c:	cmpne	r0, #0
    1590:	bne	15a0 <mo_unxline+0xd0>
    1594:	ldr	r0, [pc, #136]	; 1624 <mo_unxline+0x154>
    1598:	add	r0, pc, r0
    159c:	b	14fc <mo_unxline+0x2c>
    15a0:	ldr	r1, [pc, #120]	; 1620 <mo_unxline+0x150>
    15a4:	add	r1, pc, r1
    15a8:	bl	e18 <privilegeset_in_set@plt>
    15ac:	cmp	r0, #0
    15b0:	beq	1594 <mo_unxline+0xc4>
    15b4:	ldr	r0, [pc, #108]	; 1628 <mo_unxline+0x158>
    15b8:	ldr	r0, [pc, r0]
    15bc:	ldr	r2, [r7, #12]
    15c0:	ldr	r3, [r0]
    15c4:	ldr	r0, [r7, #4]
    15c8:	ldr	r1, [pc, #92]	; 162c <mo_unxline+0x15c>
    15cc:	add	r1, pc, r1
    15d0:	str	r0, [sp, #4]
    15d4:	mov	r0, r4
    15d8:	str	r1, [sp]
    15dc:	ldr	r1, [pc, #76]	; 1630 <mo_unxline+0x160>
    15e0:	add	r1, pc, r1
    15e4:	bl	c74 <propagate_generic@plt>
    15e8:	ldr	r0, [r7, #12]
    15ec:	ldr	r1, [pc, #64]	; 1634 <mo_unxline+0x164>
    15f0:	ldr	r1, [pc, r1]
    15f4:	add	r1, r1, #88	; 0x58
    15f8:	bl	db8 <match@plt>
    15fc:	mov	r5, #0
    1600:	cmp	r0, #0
    1604:	bne	1568 <mo_unxline+0x98>
    1608:	b	1520 <mo_unxline+0x50>
    160c:	.word	0x00000bc8
    1610:	.word	0x00000d76
    1614:	.word	0x00011bbc
    1618:	.word	0x00000bf3
    161c:	.word	0x00000bd6
    1620:	.word	0x00000b8d
    1624:	.word	0x00000b9e
    1628:	.word	0x00011af4
    162c:	.word	0x00000bc9
    1630:	.word	0x00000b14
    1634:	.word	0x00011ad4

00001638 <propagate_xline>:
    1638:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    163c:	add	fp, sp, #24
    1640:	sub	sp, sp, #24
    1644:	mov	r5, r0
    1648:	ldr	r7, [fp, #12]
    164c:	ldr	r0, [fp, #8]
    1650:	mov	r6, r3
    1654:	mov	r4, r1
    1658:	cmp	r2, #0
    165c:	beq	169c <propagate_xline+0x64>
    1660:	ldr	r1, [pc, #176]	; 1718 <propagate_xline+0xe0>
    1664:	ldr	r1, [pc, r1]
    1668:	ldr	r3, [r1]
    166c:	ldr	r1, [pc, #168]	; 171c <propagate_xline+0xe4>
    1670:	add	r1, pc, r1
    1674:	stm	sp, {r1, r4}
    1678:	str	r2, [sp, #8]
    167c:	str	r0, [sp, #16]
    1680:	mov	r2, r3
    1684:	mov	r0, r5
    1688:	mov	r1, r4
    168c:	mov	r3, #0
    1690:	str	r6, [sp, #12]
    1694:	str	r7, [sp, #20]
    1698:	b	16fc <propagate_xline+0xc4>
    169c:	ldr	r8, [pc, #100]	; 1708 <propagate_xline+0xd0>
    16a0:	mov	r3, #0
    16a4:	mov	r9, #0
    16a8:	ldr	r8, [pc, r8]
    16ac:	ldr	r2, [r8]
    16b0:	ldr	r1, [pc, #84]	; 170c <propagate_xline+0xd4>
    16b4:	add	r1, pc, r1
    16b8:	stm	sp, {r1, r4, r6}
    16bc:	str	r0, [sp, #12]
    16c0:	mov	r0, r5
    16c4:	mov	r1, r4
    16c8:	str	r7, [sp, #16]
    16cc:	bl	c98 <sendto_match_servs@plt>
    16d0:	ldr	r3, [r8]
    16d4:	ldr	r0, [pc, #52]	; 1710 <propagate_xline+0xd8>
    16d8:	mov	r1, r4
    16dc:	ldr	r0, [pc, r0]
    16e0:	ldr	r2, [r0]
    16e4:	ldr	r0, [pc, #40]	; 1714 <propagate_xline+0xdc>
    16e8:	add	r0, pc, r0
    16ec:	stm	sp, {r0, r4, r9}
    16f0:	str	r6, [sp, #12]
    16f4:	str	r7, [sp, #16]
    16f8:	mov	r0, r5
    16fc:	bl	c98 <sendto_match_servs@plt>
    1700:	sub	sp, fp, #24
    1704:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1708:	.word	0x00011a04
    170c:	.word	0x00000b07
    1710:	.word	0x000119ec
    1714:	.word	0x00000ae6
    1718:	.word	0x00011a64
    171c:	.word	0x00000b79

00001720 <valid_xline>:
    1720:	push	{r4, sl, fp, lr}
    1724:	add	fp, sp, #8
    1728:	sub	sp, sp, #8
    172c:	cmp	r2, #0
    1730:	mov	r4, r0
    1734:	ldrbne	r0, [r2]
    1738:	cmpne	r0, #0
    173c:	bne	17b4 <valid_xline+0x94>
    1740:	ldr	r0, [r4, #36]	; 0x24
    1744:	ldrh	r1, [r0, #80]	; 0x50
    1748:	cmp	r1, #32
    174c:	bne	1784 <valid_xline+0x64>
    1750:	ldrb	r0, [r0, #396]	; 0x18c
    1754:	cmp	r0, #0
    1758:	beq	1784 <valid_xline+0x64>
    175c:	mov	r3, r4
    1760:	ldrb	r0, [r3, #396]!	; 0x18c
    1764:	ldr	r2, [pc, #136]	; 17f4 <valid_xline+0xd4>
    1768:	ldr	r2, [pc, r2]
    176c:	cmp	r0, #0
    1770:	subeq	r3, r3, #308	; 0x134
    1774:	ldrb	r0, [r2, #396]!	; 0x18c
    1778:	cmp	r0, #0
    177c:	subeq	r2, r2, #308	; 0x134
    1780:	b	1794 <valid_xline+0x74>
    1784:	ldr	r0, [pc, #108]	; 17f8 <valid_xline+0xd8>
    1788:	add	r3, r4, #88	; 0x58
    178c:	ldr	r0, [pc, r0]
    1790:	add	r2, r0, #88	; 0x58
    1794:	ldr	r0, [pc, #96]	; 17fc <valid_xline+0xdc>
    1798:	add	r0, pc, r0
    179c:	str	r0, [sp]
    17a0:	mov	r0, r4
    17a4:	ldr	r1, [pc, #84]	; 1800 <valid_xline+0xe0>
    17a8:	add	r1, pc, r1
    17ac:	bl	cb0 <sendto_one@plt>
    17b0:	b	17e8 <valid_xline+0xc8>
    17b4:	mov	r0, r1
    17b8:	bl	e00 <valid_wild_card_simple@plt>
    17bc:	mov	r1, r0
    17c0:	mov	r0, #1
    17c4:	cmp	r1, #0
    17c8:	bne	17ec <valid_xline+0xcc>
    17cc:	ldr	r0, [pc, #48]	; 1804 <valid_xline+0xe4>
    17d0:	ldr	r0, [pc, r0]
    17d4:	ldr	r2, [r0, #240]	; 0xf0
    17d8:	ldr	r1, [pc, #40]	; 1808 <valid_xline+0xe8>
    17dc:	mov	r0, r4
    17e0:	add	r1, pc, r1
    17e4:	bl	ddc <sendto_one_notice@plt>
    17e8:	mov	r0, #0
    17ec:	sub	sp, fp, #8
    17f0:	pop	{r4, sl, fp, pc}
    17f4:	.word	0x0001195c
    17f8:	.word	0x00011938
    17fc:	.word	0x0000095e
    1800:	.word	0x00000998
    1804:	.word	0x000118fc
    1808:	.word	0x00000a51

0000180c <apply_xline>:
    180c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1810:	add	fp, sp, #28
    1814:	sub	sp, sp, #28
    1818:	mov	r9, r3
    181c:	mov	r8, r2
    1820:	mov	r7, r1
    1824:	mov	sl, r0
    1828:	bl	c80 <make_conf@plt>
    182c:	mov	r4, r0
    1830:	mov	r0, #128	; 0x80
    1834:	str	r0, [r4]
    1838:	bl	c8c <rb_current_time@plt>
    183c:	str	r0, [r4, #40]	; 0x28
    1840:	mov	r0, r7
    1844:	bl	d88 <strlen@plt>
    1848:	add	r0, r0, #1
    184c:	bl	d58 <malloc@plt>
    1850:	cmp	r0, #0
    1854:	beq	1ba4 <apply_xline+0x398>
    1858:	ldr	r5, [fp, #8]
    185c:	mov	r1, r7
    1860:	mov	r6, r0
    1864:	bl	d40 <strcpy@plt>
    1868:	mov	r0, r8
    186c:	str	r6, [r4, #16]
    1870:	bl	d88 <strlen@plt>
    1874:	add	r0, r0, #1
    1878:	bl	d58 <malloc@plt>
    187c:	cmp	r0, #0
    1880:	beq	1ba4 <apply_xline+0x398>
    1884:	mov	r1, r8
    1888:	mov	r6, r0
    188c:	bl	d40 <strcpy@plt>
    1890:	str	r6, [r4, #20]
    1894:	ldr	r0, [r4, #16]
    1898:	bl	dac <collapse@plt>
    189c:	mov	r0, sl
    18a0:	bl	d10 <get_oper_name@plt>
    18a4:	bl	d34 <operhash_add@plt>
    18a8:	cmp	r5, #0
    18ac:	str	r0, [r4, #12]
    18b0:	beq	1914 <apply_xline+0x108>
    18b4:	ldr	r0, [r4, #4]
    18b8:	orr	r0, r0, #8912896	; 0x880000
    18bc:	str	r0, [r4, #4]
    18c0:	bl	c8c <rb_current_time@plt>
    18c4:	add	r0, r0, r9
    18c8:	str	r0, [r4, #36]	; 0x24
    18cc:	str	r0, [r4, #44]	; 0x2c
    18d0:	mov	r0, r4
    18d4:	bl	cbc <replace_old_ban@plt>
    18d8:	bl	d7c <rb_make_rb_dlink_node@plt>
    18dc:	cmp	r0, #0
    18e0:	beq	1ba8 <apply_xline+0x39c>
    18e4:	mov	r1, #0
    18e8:	str	r1, [r0, #4]
    18ec:	str	r4, [r0]
    18f0:	ldr	r1, [pc, #720]	; 1bc8 <apply_xline+0x3bc>
    18f4:	ldr	r1, [pc, r1]
    18f8:	ldr	r2, [r1]
    18fc:	cmp	r2, #0
    1900:	str	r2, [r0, #8]
    1904:	beq	1a38 <apply_xline+0x22c>
    1908:	add	r2, r2, #4
    190c:	str	r0, [r2]
    1910:	b	1a48 <apply_xline+0x23c>
    1914:	cmp	r9, #1
    1918:	blt	19a4 <apply_xline+0x198>
    191c:	bl	c8c <rb_current_time@plt>
    1920:	add	r0, r0, r9
    1924:	str	r0, [r4, #36]	; 0x24
    1928:	mov	r0, sl
    192c:	bl	d10 <get_oper_name@plt>
    1930:	movw	r1, #34953	; 0x8889
    1934:	mov	r3, r0
    1938:	ldr	r0, [r4, #16]
    193c:	movt	r1, #34952	; 0x8888
    1940:	umull	r1, r2, r9, r1
    1944:	lsr	r6, r2, #5
    1948:	mov	r1, #0
    194c:	str	r6, [sp]
    1950:	stmib	sp, {r0, r8}
    1954:	mov	r0, #256	; 0x100
    1958:	ldr	r2, [pc, #644]	; 1be4 <apply_xline+0x3d8>
    195c:	add	r2, pc, r2
    1960:	bl	ce0 <sendto_realops_snomask@plt>
    1964:	mov	r0, sl
    1968:	bl	d10 <get_oper_name@plt>
    196c:	stm	sp, {r7, r8}
    1970:	mov	r2, r0
    1974:	mov	r0, #7
    1978:	mov	r3, r6
    197c:	ldr	r1, [pc, #612]	; 1be8 <apply_xline+0x3dc>
    1980:	add	r1, pc, r1
    1984:	bl	da0 <ilog@plt>
    1988:	ldr	r3, [r4, #16]
    198c:	ldr	r1, [pc, #600]	; 1bec <apply_xline+0x3e0>
    1990:	mov	r0, sl
    1994:	mov	r2, r6
    1998:	add	r1, pc, r1
    199c:	bl	ddc <sendto_one_notice@plt>
    19a0:	b	1b3c <apply_xline+0x330>
    19a4:	mov	r0, sl
    19a8:	bl	d10 <get_oper_name@plt>
    19ac:	mov	r3, r0
    19b0:	ldr	r0, [r4, #16]
    19b4:	ldr	r1, [r4, #20]
    19b8:	mov	r5, #0
    19bc:	stm	sp, {r0, r1}
    19c0:	mov	r0, #256	; 0x100
    19c4:	mov	r1, #0
    19c8:	ldr	r2, [pc, #544]	; 1bf0 <apply_xline+0x3e4>
    19cc:	add	r2, pc, r2
    19d0:	bl	ce0 <sendto_realops_snomask@plt>
    19d4:	ldr	r2, [r4, #16]
    19d8:	ldr	r3, [r4, #20]
    19dc:	ldr	r1, [pc, #528]	; 1bf4 <apply_xline+0x3e8>
    19e0:	mov	r0, sl
    19e4:	add	r1, pc, r1
    19e8:	bl	ddc <sendto_one_notice@plt>
    19ec:	ldr	r0, [r4, #20]
    19f0:	ldr	r2, [r4, #16]
    19f4:	mov	r1, sl
    19f8:	mov	r3, #0
    19fc:	stm	sp, {r0, r5}
    1a00:	mov	r0, #2
    1a04:	str	r5, [sp, #8]
    1a08:	bl	cec <bandb_add@plt>
    1a0c:	mov	r0, sl
    1a10:	bl	d10 <get_oper_name@plt>
    1a14:	mov	r2, r0
    1a18:	ldr	r0, [r4, #20]
    1a1c:	mov	r3, r7
    1a20:	str	r0, [sp]
    1a24:	mov	r0, #7
    1a28:	ldr	r1, [pc, #456]	; 1bf8 <apply_xline+0x3ec>
    1a2c:	add	r1, pc, r1
    1a30:	bl	da0 <ilog@plt>
    1a34:	b	1b3c <apply_xline+0x330>
    1a38:	mov	r2, r1
    1a3c:	ldr	r3, [r2, #4]!
    1a40:	cmp	r3, #0
    1a44:	streq	r0, [r2]
    1a48:	str	r0, [r1]
    1a4c:	ldr	r0, [r1, #8]
    1a50:	add	r0, r0, #1
    1a54:	str	r0, [r1, #8]
    1a58:	mov	r0, sl
    1a5c:	bl	d10 <get_oper_name@plt>
    1a60:	movw	r1, #34953	; 0x8889
    1a64:	mov	r3, r0
    1a68:	ldr	r0, [r4, #16]
    1a6c:	movt	r1, #34952	; 0x8888
    1a70:	smmla	r1, r9, r1, r9
    1a74:	asr	r2, r1, #5
    1a78:	add	r6, r2, r1, lsr #31
    1a7c:	mov	r1, #0
    1a80:	str	r6, [sp]
    1a84:	stmib	sp, {r0, r8}
    1a88:	mov	r0, #256	; 0x100
    1a8c:	ldr	r2, [pc, #312]	; 1bcc <apply_xline+0x3c0>
    1a90:	add	r2, pc, r2
    1a94:	bl	ce0 <sendto_realops_snomask@plt>
    1a98:	mov	r0, sl
    1a9c:	bl	d10 <get_oper_name@plt>
    1aa0:	stm	sp, {r7, r8}
    1aa4:	mov	r2, r0
    1aa8:	mov	r0, #7
    1aac:	mov	r3, r6
    1ab0:	ldr	r1, [pc, #280]	; 1bd0 <apply_xline+0x3c4>
    1ab4:	add	r1, pc, r1
    1ab8:	bl	da0 <ilog@plt>
    1abc:	ldr	r3, [r4, #16]
    1ac0:	ldr	r1, [pc, #268]	; 1bd4 <apply_xline+0x3c8>
    1ac4:	mov	r0, sl
    1ac8:	mov	r2, r6
    1acc:	add	r1, pc, r1
    1ad0:	bl	ddc <sendto_one_notice@plt>
    1ad4:	ldr	r0, [pc, #252]	; 1bd8 <apply_xline+0x3cc>
    1ad8:	add	r7, sl, #396	; 0x18c
    1adc:	ldr	r0, [pc, r0]
    1ae0:	ldr	r0, [r0]
    1ae4:	ldr	r1, [pc, #240]	; 1bdc <apply_xline+0x3d0>
    1ae8:	ldr	r1, [pc, r1]
    1aec:	ldr	r2, [r4, #16]
    1af0:	ldr	r3, [r4, #36]	; 0x24
    1af4:	ldr	r6, [r4, #40]	; 0x28
    1af8:	ldr	r5, [r4, #44]	; 0x2c
    1afc:	ldr	r1, [r1]
    1b00:	ldr	ip, [pc, #216]	; 1be0 <apply_xline+0x3d4>
    1b04:	str	r2, [sp, #8]
    1b08:	sub	r5, r5, r6
    1b0c:	sub	r3, r3, r6
    1b10:	add	r2, sp, #16
    1b14:	str	r7, [sp, #4]
    1b18:	str	r6, [sp, #12]
    1b1c:	add	ip, pc, ip
    1b20:	str	ip, [sp]
    1b24:	stm	r2, {r3, r5, r8}
    1b28:	orr	r2, r0, r1
    1b2c:	mov	r0, #0
    1b30:	mov	r1, #0
    1b34:	mov	r3, #0
    1b38:	bl	d4c <sendto_server@plt>
    1b3c:	bl	d7c <rb_make_rb_dlink_node@plt>
    1b40:	cmp	r0, #0
    1b44:	beq	1ba8 <apply_xline+0x39c>
    1b48:	mov	r1, #0
    1b4c:	str	r1, [r0, #4]
    1b50:	str	r4, [r0]
    1b54:	ldr	r1, [pc, #160]	; 1bfc <apply_xline+0x3f0>
    1b58:	ldr	r1, [pc, r1]
    1b5c:	ldr	r2, [r1]
    1b60:	cmp	r2, #0
    1b64:	str	r2, [r0, #8]
    1b68:	beq	1b78 <apply_xline+0x36c>
    1b6c:	add	r2, r2, #4
    1b70:	str	r0, [r2]
    1b74:	b	1b88 <apply_xline+0x37c>
    1b78:	mov	r2, r1
    1b7c:	ldr	r3, [r2, #4]!
    1b80:	cmp	r3, #0
    1b84:	streq	r0, [r2]
    1b88:	str	r0, [r1]
    1b8c:	ldr	r0, [r1, #8]
    1b90:	add	r0, r0, #1
    1b94:	str	r0, [r1, #8]
    1b98:	sub	sp, fp, #28
    1b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ba0:	b	d04 <check_xlines@plt>
    1ba4:	bl	cc8 <rb_outofmemory@plt>
    1ba8:	ldr	r0, [pc, #80]	; 1c00 <apply_xline+0x3f4>
    1bac:	ldr	r1, [pc, #80]	; 1c04 <apply_xline+0x3f8>
    1bb0:	ldr	r3, [pc, #80]	; 1c08 <apply_xline+0x3fc>
    1bb4:	mov	r2, #144	; 0x90
    1bb8:	add	r0, pc, r0
    1bbc:	add	r1, pc, r1
    1bc0:	add	r3, pc, r3
    1bc4:	bl	e30 <__assert_fail@plt>
    1bc8:	.word	0x000117b0
    1bcc:	.word	0x000007e4
    1bd0:	.word	0x000007ed
    1bd4:	.word	0x000007e3
    1bd8:	.word	0x000115d8
    1bdc:	.word	0x000115c8
    1be0:	.word	0x000007b5
    1be4:	.word	0x00000994
    1be8:	.word	0x00000921
    1bec:	.word	0x00000988
    1bf0:	.word	0x00000979
    1bf4:	.word	0x0000097f
    1bf8:	.word	0x00000953
    1bfc:	.word	0x00011550
    1c00:	.word	0x0000082b
    1c04:	.word	0x000007d0
    1c08:	.word	0x000007e8

00001c0c <handle_remote_xline>:
    1c0c:	push	{r4, r5, r6, r7, fp, lr}
    1c10:	add	fp, sp, #16
    1c14:	sub	sp, sp, #8
    1c18:	mov	r4, r2
    1c1c:	ldr	r2, [r0, #32]
    1c20:	mov	r6, r3
    1c24:	mov	r5, r0
    1c28:	mov	r3, #32
    1c2c:	cmp	r1, #0
    1c30:	mov	r7, r1
    1c34:	add	r0, r0, #152	; 0x98
    1c38:	movwgt	r3, #16
    1c3c:	add	r1, r5, #163	; 0xa3
    1c40:	add	r2, r2, #88	; 0x58
    1c44:	bl	e0c <find_shared_conf@plt>
    1c48:	cmp	r0, #0
    1c4c:	beq	1cb8 <handle_remote_xline+0xac>
    1c50:	mov	r0, r5
    1c54:	mov	r1, r4
    1c58:	mov	r2, r6
    1c5c:	bl	1720 <valid_xline>
    1c60:	cmp	r0, #0
    1c64:	beq	1cb8 <handle_remote_xline+0xac>
    1c68:	mov	r0, r4
    1c6c:	bl	d94 <find_xline_mask@plt>
    1c70:	cmp	r0, #0
    1c74:	beq	1c9c <handle_remote_xline+0x90>
    1c78:	ldr	r3, [r0, #16]
    1c7c:	ldr	r0, [r0, #20]
    1c80:	mov	r2, r4
    1c84:	str	r0, [sp]
    1c88:	mov	r0, r5
    1c8c:	ldr	r1, [pc, #44]	; 1cc0 <handle_remote_xline+0xb4>
    1c90:	add	r1, pc, r1
    1c94:	bl	ddc <sendto_one_notice@plt>
    1c98:	b	1cb8 <handle_remote_xline+0xac>
    1c9c:	mov	r0, #0
    1ca0:	mov	r1, r4
    1ca4:	mov	r2, r6
    1ca8:	mov	r3, r7
    1cac:	str	r0, [sp]
    1cb0:	mov	r0, r5
    1cb4:	bl	180c <apply_xline>
    1cb8:	sub	sp, fp, #16
    1cbc:	pop	{r4, r5, r6, r7, fp, pc}
    1cc0:	.word	0x000004e5

00001cc4 <remove_xline>:
    1cc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1cc8:	add	fp, sp, #28
    1ccc:	sub	sp, sp, #28
    1cd0:	ldr	r9, [pc, #888]	; 2050 <remove_xline+0x38c>
    1cd4:	mov	r5, r2
    1cd8:	mov	r6, r1
    1cdc:	mov	r8, r0
    1ce0:	ldr	r9, [pc, r9]
    1ce4:	ldr	r7, [r9]
    1ce8:	b	1d08 <remove_xline+0x44>
    1cec:	ldr	r4, [r7]
    1cf0:	mov	r1, r6
    1cf4:	ldr	r0, [r4, #16]
    1cf8:	bl	e24 <irccmp@plt>
    1cfc:	cmp	r0, #0
    1d00:	beq	1d70 <remove_xline+0xac>
    1d04:	ldr	r7, [r7, #8]
    1d08:	cmp	r7, #0
    1d0c:	bne	1cec <remove_xline+0x28>
    1d10:	ldr	r0, [pc, #900]	; 209c <remove_xline+0x3d8>
    1d14:	ldr	r0, [pc, r0]
    1d18:	ldr	r0, [r0, #8]
    1d1c:	cmp	r0, #0
    1d20:	cmpne	r5, #0
    1d24:	beq	1d54 <remove_xline+0x90>
    1d28:	ldr	r0, [pc, #880]	; 20a0 <remove_xline+0x3dc>
    1d2c:	mov	r2, #64	; 0x40
    1d30:	ldr	r0, [pc, r0]
    1d34:	ldr	r3, [r0]
    1d38:	ldr	r0, [pc, #868]	; 20a4 <remove_xline+0x3e0>
    1d3c:	add	r0, pc, r0
    1d40:	stm	sp, {r0, r6}
    1d44:	mov	r0, r8
    1d48:	ldr	r1, [pc, #856]	; 20a8 <remove_xline+0x3e4>
    1d4c:	add	r1, pc, r1
    1d50:	bl	d28 <cluster_generic@plt>
    1d54:	ldr	r1, [pc, #848]	; 20ac <remove_xline+0x3e8>
    1d58:	add	r1, pc, r1
    1d5c:	mov	r0, r8
    1d60:	mov	r2, r6
    1d64:	sub	sp, fp, #28
    1d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d6c:	b	ddc <sendto_one_notice@plt>
    1d70:	ldr	r0, [r4, #44]	; 0x2c
    1d74:	cmp	r0, #0
    1d78:	beq	1ecc <remove_xline+0x208>
    1d7c:	cmp	r5, #0
    1d80:	beq	1f74 <remove_xline+0x2b0>
    1d84:	ldr	r0, [pc, #716]	; 2058 <remove_xline+0x394>
    1d88:	ldr	r0, [pc, r0]
    1d8c:	ldr	r7, [r0]
    1d90:	b	1d98 <remove_xline+0xd4>
    1d94:	ldr	r7, [r7, #8]
    1d98:	cmp	r7, #0
    1d9c:	subeq	sp, fp, #28
    1da0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1da4:	ldr	r0, [r7]
    1da8:	cmp	r0, r4
    1dac:	bne	1d94 <remove_xline+0xd0>
    1db0:	ldr	r1, [pc, #676]	; 205c <remove_xline+0x398>
    1db4:	mov	r0, r8
    1db8:	mov	r2, r6
    1dbc:	add	r1, pc, r1
    1dc0:	bl	ddc <sendto_one_notice@plt>
    1dc4:	mov	r0, r8
    1dc8:	bl	d10 <get_oper_name@plt>
    1dcc:	str	r6, [sp]
    1dd0:	mov	r3, r0
    1dd4:	mov	r0, #256	; 0x100
    1dd8:	mov	r1, #0
    1ddc:	mov	r9, #0
    1de0:	ldr	r2, [pc, #632]	; 2060 <remove_xline+0x39c>
    1de4:	add	r2, pc, r2
    1de8:	bl	ce0 <sendto_realops_snomask@plt>
    1dec:	mov	r0, r8
    1df0:	bl	d10 <get_oper_name@plt>
    1df4:	ldr	r1, [pc, #616]	; 2064 <remove_xline+0x3a0>
    1df8:	mov	r2, r0
    1dfc:	mov	r0, #7
    1e00:	mov	r3, r6
    1e04:	add	r1, pc, r1
    1e08:	bl	da0 <ilog@plt>
    1e0c:	bl	c8c <rb_current_time@plt>
    1e10:	ldr	r1, [r4, #40]	; 0x28
    1e14:	mov	sl, r0
    1e18:	ldr	r0, [r4, #12]
    1e1c:	mov	r2, sl
    1e20:	cmp	r1, sl
    1e24:	addge	r2, r1, #1
    1e28:	str	r2, [r4, #36]	; 0x24
    1e2c:	str	r2, [r4, #40]	; 0x28
    1e30:	bl	cd4 <operhash_delete@plt>
    1e34:	mov	r0, r8
    1e38:	bl	d10 <get_oper_name@plt>
    1e3c:	bl	d34 <operhash_add@plt>
    1e40:	str	r0, [r4, #12]
    1e44:	add	r6, r8, #396	; 0x18c
    1e48:	ldr	r0, [r4, #4]
    1e4c:	ldr	ip, [r4, #16]
    1e50:	ldr	r2, [r4, #40]	; 0x28
    1e54:	ldr	r3, [r4, #44]	; 0x2c
    1e58:	orr	r0, r0, #8912896	; 0x880000
    1e5c:	sub	r3, r3, r2
    1e60:	str	r0, [r4, #4]
    1e64:	ldr	r0, [pc, #508]	; 2068 <remove_xline+0x3a4>
    1e68:	ldr	r0, [pc, r0]
    1e6c:	ldr	r0, [r0]
    1e70:	ldr	r5, [pc, #500]	; 206c <remove_xline+0x3a8>
    1e74:	ldr	r5, [pc, r5]
    1e78:	ldr	r5, [r5]
    1e7c:	ldr	r1, [pc, #492]	; 2070 <remove_xline+0x3ac>
    1e80:	add	r1, pc, r1
    1e84:	stm	sp, {r1, r6, ip}
    1e88:	str	r2, [sp, #12]
    1e8c:	str	r3, [sp, #20]
    1e90:	orr	r2, r0, r5
    1e94:	mov	r0, #0
    1e98:	mov	r1, #0
    1e9c:	mov	r3, #0
    1ea0:	str	r9, [sp, #16]
    1ea4:	bl	d4c <sendto_server@plt>
    1ea8:	ldr	r0, [r4, #16]
    1eac:	mov	r1, #0
    1eb0:	bl	dd0 <remove_reject_mask@plt>
    1eb4:	mov	r0, r4
    1eb8:	mov	r1, r7
    1ebc:	mov	r2, sl
    1ec0:	sub	sp, fp, #28
    1ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ec8:	b	cf8 <deactivate_conf@plt>
    1ecc:	ldr	r0, [pc, #416]	; 2074 <remove_xline+0x3b0>
    1ed0:	ldr	r0, [pc, r0]
    1ed4:	ldr	r0, [r0, #8]
    1ed8:	cmp	r0, #0
    1edc:	cmpne	r5, #0
    1ee0:	beq	1f10 <remove_xline+0x24c>
    1ee4:	ldr	r0, [pc, #396]	; 2078 <remove_xline+0x3b4>
    1ee8:	mov	r2, #64	; 0x40
    1eec:	ldr	r0, [pc, r0]
    1ef0:	ldr	r3, [r0]
    1ef4:	ldr	r0, [pc, #384]	; 207c <remove_xline+0x3b8>
    1ef8:	add	r0, pc, r0
    1efc:	stm	sp, {r0, r6}
    1f00:	mov	r0, r8
    1f04:	ldr	r1, [pc, #372]	; 2080 <remove_xline+0x3bc>
    1f08:	add	r1, pc, r1
    1f0c:	bl	d28 <cluster_generic@plt>
    1f10:	ldr	r0, [r4, #36]	; 0x24
    1f14:	cmp	r0, #0
    1f18:	beq	1f80 <remove_xline+0x2bc>
    1f1c:	ldr	r1, [pc, #364]	; 2090 <remove_xline+0x3cc>
    1f20:	mov	r0, r8
    1f24:	mov	r2, r6
    1f28:	add	r1, pc, r1
    1f2c:	bl	ddc <sendto_one_notice@plt>
    1f30:	mov	r0, r8
    1f34:	bl	d10 <get_oper_name@plt>
    1f38:	str	r6, [sp]
    1f3c:	mov	r3, r0
    1f40:	mov	r0, #256	; 0x100
    1f44:	mov	r1, #0
    1f48:	ldr	r2, [pc, #324]	; 2094 <remove_xline+0x3d0>
    1f4c:	add	r2, pc, r2
    1f50:	bl	ce0 <sendto_realops_snomask@plt>
    1f54:	mov	r0, r8
    1f58:	bl	d10 <get_oper_name@plt>
    1f5c:	ldr	r1, [pc, #308]	; 2098 <remove_xline+0x3d4>
    1f60:	mov	r2, r0
    1f64:	mov	r0, #7
    1f68:	mov	r3, r6
    1f6c:	add	r1, pc, r1
    1f70:	b	1fe8 <remove_xline+0x324>
    1f74:	ldr	r1, [pc, #216]	; 2054 <remove_xline+0x390>
    1f78:	add	r1, pc, r1
    1f7c:	b	1d5c <remove_xline+0x98>
    1f80:	ldr	r1, [r4, #16]
    1f84:	mov	r0, #2
    1f88:	mov	r2, #0
    1f8c:	bl	de8 <bandb_del@plt>
    1f90:	ldr	r2, [r4, #16]
    1f94:	ldr	r1, [pc, #232]	; 2084 <remove_xline+0x3c0>
    1f98:	mov	r0, r8
    1f9c:	add	r1, pc, r1
    1fa0:	bl	ddc <sendto_one_notice@plt>
    1fa4:	mov	r0, r8
    1fa8:	bl	d10 <get_oper_name@plt>
    1fac:	mov	r3, r0
    1fb0:	ldr	r0, [r4, #16]
    1fb4:	mov	r1, #0
    1fb8:	str	r0, [sp]
    1fbc:	mov	r0, #256	; 0x100
    1fc0:	ldr	r2, [pc, #192]	; 2088 <remove_xline+0x3c4>
    1fc4:	add	r2, pc, r2
    1fc8:	bl	ce0 <sendto_realops_snomask@plt>
    1fcc:	mov	r0, r8
    1fd0:	bl	d10 <get_oper_name@plt>
    1fd4:	ldr	r3, [r4, #16]
    1fd8:	ldr	r1, [pc, #172]	; 208c <remove_xline+0x3c8>
    1fdc:	mov	r2, r0
    1fe0:	mov	r0, #7
    1fe4:	add	r1, pc, r1
    1fe8:	bl	da0 <ilog@plt>
    1fec:	ldr	r0, [r4, #16]
    1ff0:	mov	r1, #0
    1ff4:	bl	dd0 <remove_reject_mask@plt>
    1ff8:	mov	r0, r4
    1ffc:	bl	d70 <free_conf@plt>
    2000:	ldr	r0, [r7, #8]
    2004:	ldr	r1, [r7, #4]
    2008:	mov	r2, r9
    200c:	cmp	r0, #0
    2010:	streq	r1, [r9, #4]
    2014:	strne	r1, [r0, #4]
    2018:	ldrne	r1, [r7, #4]
    201c:	cmp	r1, #0
    2020:	addne	r2, r1, #8
    2024:	str	r0, [r2]
    2028:	mov	r0, #0
    202c:	str	r0, [r7, #4]
    2030:	str	r0, [r7, #8]
    2034:	ldr	r0, [r9, #8]
    2038:	sub	r0, r0, #1
    203c:	str	r0, [r9, #8]
    2040:	mov	r0, r7
    2044:	sub	sp, fp, #28
    2048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    204c:	b	d1c <rb_free_rb_dlink_node@plt>
    2050:	.word	0x000113c8
    2054:	.word	0x00000475
    2058:	.word	0x0001131c
    205c:	.word	0x00000665
    2060:	.word	0x00000659
    2064:	.word	0x00000664
    2068:	.word	0x0001124c
    206c:	.word	0x0001123c
    2070:	.word	0x000005f1
    2074:	.word	0x000111ec
    2078:	.word	0x000111c0
    207c:	.word	0x0000029d
    2080:	.word	0x000001ec
    2084:	.word	0x00000485
    2088:	.word	0x000004cb
    208c:	.word	0x00000484
    2090:	.word	0x000004f9
    2094:	.word	0x00000567
    2098:	.word	0x000004fc
    209c:	.word	0x000113a8
    20a0:	.word	0x0001137c
    20a4:	.word	0x00000459
    20a8:	.word	0x000003a8
    20ac:	.word	0x00000789

000020b0 <handle_remote_unxline>:
    20b0:	push	{r4, r5, fp, lr}
    20b4:	add	fp, sp, #8
    20b8:	ldr	r2, [r0, #32]
    20bc:	mov	r5, r0
    20c0:	mov	r4, r1
    20c4:	add	r0, r0, #152	; 0x98
    20c8:	mov	r3, #64	; 0x40
    20cc:	add	r1, r5, #163	; 0xa3
    20d0:	add	r2, r2, #88	; 0x58
    20d4:	bl	e0c <find_shared_conf@plt>
    20d8:	cmp	r0, #0
    20dc:	popeq	{r4, r5, fp, pc}
    20e0:	mov	r0, r5
    20e4:	mov	r1, r4
    20e8:	mov	r2, #0
    20ec:	pop	{r4, r5, fp, lr}
    20f0:	b	1cc4 <remove_xline>

Disassembly of section .fini:

000020f4 <_fini>:
    20f4:	push	{r3, lr}
    20f8:	pop	{r3, pc}
