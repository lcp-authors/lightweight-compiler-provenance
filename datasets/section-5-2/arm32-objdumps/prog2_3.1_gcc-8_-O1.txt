
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10b70 <_start@@Base+0x3c>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <calloc@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <calloc@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <calloc@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <strstr@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <strcmp@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <printf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <fopen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <free@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <fgets@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <time@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <realloc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <strcat@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <strcpy@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <strlen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <srand@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <rand@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <abort@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010b34 <_start@@Base>:
   10b34:	mov	fp, #0
   10b38:	mov	lr, #0
   10b3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b40:	mov	r2, sp
   10b44:	push	{r2}		; (str r2, [sp, #-4]!)
   10b48:	push	{r0}		; (str r0, [sp, #-4]!)
   10b4c:	ldr	ip, [pc, #16]	; 10b64 <_start@@Base+0x30>
   10b50:	push	{ip}		; (str ip, [sp, #-4]!)
   10b54:	ldr	r0, [pc, #12]	; 10b68 <_start@@Base+0x34>
   10b58:	ldr	r3, [pc, #12]	; 10b6c <_start@@Base+0x38>
   10b5c:	bl	10ae0 <__libc_start_main@plt>
   10b60:	bl	10b28 <abort@plt>
   10b64:			; <UNDEFINED> instruction: 0x000116b0
   10b68:	muleq	r1, r4, lr
   10b6c:	andeq	r1, r1, r0, asr r6
   10b70:	ldr	r3, [pc, #20]	; 10b8c <_start@@Base+0x58>
   10b74:	ldr	r2, [pc, #20]	; 10b90 <_start@@Base+0x5c>
   10b78:	add	r3, pc, r3
   10b7c:	ldr	r2, [r3, r2]
   10b80:	cmp	r2, #0
   10b84:	bxeq	lr
   10b88:	b	10aec <__gmon_start__@plt>
   10b8c:	andeq	r1, r1, r0, lsl #9
   10b90:	andeq	r0, r0, ip, asr r0
   10b94:	ldr	r0, [pc, #24]	; 10bb4 <_start@@Base+0x80>
   10b98:	ldr	r3, [pc, #24]	; 10bb8 <_start@@Base+0x84>
   10b9c:	cmp	r3, r0
   10ba0:	bxeq	lr
   10ba4:	ldr	r3, [pc, #16]	; 10bbc <_start@@Base+0x88>
   10ba8:	cmp	r3, #0
   10bac:	bxeq	lr
   10bb0:	bx	r3
   10bb4:	andeq	r2, r2, r8, rrx
   10bb8:	andeq	r2, r2, r8, rrx
   10bbc:	andeq	r0, r0, r0
   10bc0:	ldr	r0, [pc, #36]	; 10bec <_start@@Base+0xb8>
   10bc4:	ldr	r1, [pc, #36]	; 10bf0 <_start@@Base+0xbc>
   10bc8:	sub	r1, r1, r0
   10bcc:	asr	r1, r1, #2
   10bd0:	add	r1, r1, r1, lsr #31
   10bd4:	asrs	r1, r1, #1
   10bd8:	bxeq	lr
   10bdc:	ldr	r3, [pc, #16]	; 10bf4 <_start@@Base+0xc0>
   10be0:	cmp	r3, #0
   10be4:	bxeq	lr
   10be8:	bx	r3
   10bec:	andeq	r2, r2, r8, rrx
   10bf0:	andeq	r2, r2, r8, rrx
   10bf4:	andeq	r0, r0, r0
   10bf8:	push	{r4, lr}
   10bfc:	ldr	r4, [pc, #24]	; 10c1c <_start@@Base+0xe8>
   10c00:	ldrb	r3, [r4]
   10c04:	cmp	r3, #0
   10c08:	popne	{r4, pc}
   10c0c:	bl	10b94 <_start@@Base+0x60>
   10c10:	mov	r3, #1
   10c14:	strb	r3, [r4]
   10c18:	pop	{r4, pc}
   10c1c:	andeq	r2, r2, r8, rrx
   10c20:	b	10bc0 <_start@@Base+0x8c>

00010c24 <vetor_imprime@@Base>:
   10c24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10c28:	strd	r6, [sp, #8]
   10c2c:	str	r8, [sp, #16]
   10c30:	str	lr, [sp, #20]
   10c34:	ldr	r7, [r0]
   10c38:	cmp	r7, #0
   10c3c:	ble	10c78 <vetor_imprime@@Base+0x54>
   10c40:	mov	r5, r0
   10c44:	mov	r4, #0
   10c48:	movw	r6, #5824	; 0x16c0
   10c4c:	movt	r6, #1
   10c50:	mov	r1, r4
   10c54:	mov	r0, r5
   10c58:	bl	1118c <vetor_elemento@@Base>
   10c5c:	mov	r2, r0
   10c60:	mov	r1, r4
   10c64:	mov	r0, r6
   10c68:	bl	10a68 <printf@plt>
   10c6c:	add	r4, r4, #1
   10c70:	cmp	r7, r4
   10c74:	bne	10c50 <vetor_imprime@@Base+0x2c>
   10c78:	ldrd	r4, [sp]
   10c7c:	ldrd	r6, [sp, #8]
   10c80:	ldr	r8, [sp, #16]
   10c84:	add	sp, sp, #20
   10c88:	pop	{pc}		; (ldr pc, [sp], #4)

00010c8c <vetor_num_ocorrencias@@Base>:
   10c8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10c90:	strd	r6, [sp, #8]
   10c94:	str	r8, [sp, #16]
   10c98:	str	lr, [sp, #20]
   10c9c:	ldr	r7, [r0]
   10ca0:	cmp	r7, #0
   10ca4:	ble	10cfc <vetor_num_ocorrencias@@Base+0x70>
   10ca8:	mov	r6, r1
   10cac:	mov	r5, r0
   10cb0:	mov	r4, #0
   10cb4:	mov	r8, r4
   10cb8:	mov	r1, r4
   10cbc:	mov	r0, r5
   10cc0:	bl	1118c <vetor_elemento@@Base>
   10cc4:	mov	r1, r0
   10cc8:	mov	r0, r6
   10ccc:	bl	10a5c <strcmp@plt>
   10cd0:	cmp	r0, #0
   10cd4:	addeq	r8, r8, #1
   10cd8:	add	r4, r4, #1
   10cdc:	cmp	r7, r4
   10ce0:	bne	10cb8 <vetor_num_ocorrencias@@Base+0x2c>
   10ce4:	mov	r0, r8
   10ce8:	ldrd	r4, [sp]
   10cec:	ldrd	r6, [sp, #8]
   10cf0:	ldr	r8, [sp, #16]
   10cf4:	add	sp, sp, #20
   10cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   10cfc:	mov	r8, #0
   10d00:	b	10ce4 <vetor_num_ocorrencias@@Base+0x58>

00010d04 <vetor_remove_repetidas@@Base>:
   10d04:	ldr	r3, [r0]
   10d08:	cmp	r3, #0
   10d0c:	bxle	lr
   10d10:	strd	r4, [sp, #-20]!	; 0xffffffec
   10d14:	strd	r6, [sp, #8]
   10d18:	str	lr, [sp, #16]
   10d1c:	sub	sp, sp, #108	; 0x6c
   10d20:	mov	r5, r0
   10d24:	mov	r6, #0
   10d28:	movw	r7, #5840	; 0x16d0
   10d2c:	movt	r7, #1
   10d30:	b	10d94 <vetor_remove_repetidas@@Base+0x90>
   10d34:	add	r4, r4, #1
   10d38:	ldr	r3, [r5]
   10d3c:	cmp	r3, r4
   10d40:	ble	10d88 <vetor_remove_repetidas@@Base+0x84>
   10d44:	mov	r1, r4
   10d48:	mov	r0, r5
   10d4c:	bl	1118c <vetor_elemento@@Base>
   10d50:	mov	r1, r0
   10d54:	add	r0, sp, #4
   10d58:	bl	10a5c <strcmp@plt>
   10d5c:	cmp	r0, #0
   10d60:	bne	10d34 <vetor_remove_repetidas@@Base+0x30>
   10d64:	mov	r1, r4
   10d68:	mov	r0, r5
   10d6c:	bl	112ec <vetor_remove@@Base>
   10d70:	cmn	r0, #1
   10d74:	subne	r4, r4, #1
   10d78:	bne	10d34 <vetor_remove_repetidas@@Base+0x30>
   10d7c:	mov	r0, r7
   10d80:	bl	10ac8 <puts@plt>
   10d84:	b	10d34 <vetor_remove_repetidas@@Base+0x30>
   10d88:	ldr	r3, [r5]
   10d8c:	cmp	r3, r6
   10d90:	ble	10dc4 <vetor_remove_repetidas@@Base+0xc0>
   10d94:	mov	r1, r6
   10d98:	mov	r0, r5
   10d9c:	bl	1118c <vetor_elemento@@Base>
   10da0:	mov	r1, r0
   10da4:	add	r0, sp, #4
   10da8:	bl	10abc <strcpy@plt>
   10dac:	add	r6, r6, #1
   10db0:	ldr	r3, [r5]
   10db4:	cmp	r6, r3
   10db8:	bge	10d88 <vetor_remove_repetidas@@Base+0x84>
   10dbc:	mov	r4, r6
   10dc0:	b	10d44 <vetor_remove_repetidas@@Base+0x40>
   10dc4:	add	sp, sp, #108	; 0x6c
   10dc8:	ldrd	r4, [sp]
   10dcc:	ldrd	r6, [sp, #8]
   10dd0:	add	sp, sp, #16
   10dd4:	pop	{pc}		; (ldr pc, [sp], #4)

00010dd8 <vetor_pesquisa_parcial@@Base>:
   10dd8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10ddc:	strd	r6, [sp, #8]
   10de0:	strd	r8, [sp, #16]
   10de4:	str	sl, [sp, #24]
   10de8:	str	lr, [sp, #28]
   10dec:	mov	r5, r0
   10df0:	mov	r6, r1
   10df4:	bl	11020 <vetor_novo@@Base>
   10df8:	mov	r7, r0
   10dfc:	ldr	r3, [r5]
   10e00:	cmp	r3, #0
   10e04:	ble	10e78 <vetor_pesquisa_parcial@@Base+0xa0>
   10e08:	mov	r4, #0
   10e0c:	mov	r8, r4
   10e10:	movw	r9, #5884	; 0x16fc
   10e14:	movt	r9, #1
   10e18:	b	10e2c <vetor_pesquisa_parcial@@Base+0x54>
   10e1c:	add	r4, r4, #1
   10e20:	ldr	r3, [r5]
   10e24:	cmp	r3, r4
   10e28:	ble	10e78 <vetor_pesquisa_parcial@@Base+0xa0>
   10e2c:	mov	r1, r4
   10e30:	mov	r0, r5
   10e34:	bl	1118c <vetor_elemento@@Base>
   10e38:	mov	r1, r6
   10e3c:	bl	10a50 <strstr@plt>
   10e40:	cmp	r0, #0
   10e44:	beq	10e1c <vetor_pesquisa_parcial@@Base+0x44>
   10e48:	mov	r1, r4
   10e4c:	mov	r0, r5
   10e50:	bl	1118c <vetor_elemento@@Base>
   10e54:	mov	r2, r8
   10e58:	mov	r1, r0
   10e5c:	mov	r0, r7
   10e60:	bl	111cc <vetor_insere@@Base>
   10e64:	cmn	r0, #1
   10e68:	bne	10e1c <vetor_pesquisa_parcial@@Base+0x44>
   10e6c:	mov	r0, r9
   10e70:	bl	10ac8 <puts@plt>
   10e74:	b	10e1c <vetor_pesquisa_parcial@@Base+0x44>
   10e78:	mov	r0, r7
   10e7c:	ldrd	r4, [sp]
   10e80:	ldrd	r6, [sp, #8]
   10e84:	ldrd	r8, [sp, #16]
   10e88:	ldr	sl, [sp, #24]
   10e8c:	add	sp, sp, #28
   10e90:	pop	{pc}		; (ldr pc, [sp], #4)

00010e94 <main@@Base>:
   10e94:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10e98:	strd	r6, [sp, #8]
   10e9c:	strd	r8, [sp, #16]
   10ea0:	str	lr, [sp, #24]
   10ea4:	sub	sp, sp, #108	; 0x6c
   10ea8:	bl	11020 <vetor_novo@@Base>
   10eac:	mov	r6, r0
   10eb0:	movw	r1, #6188	; 0x182c
   10eb4:	movt	r1, #1
   10eb8:	movw	r0, #5944	; 0x1738
   10ebc:	movt	r0, #1
   10ec0:	bl	10a74 <fopen@plt>
   10ec4:	mov	r7, r0
   10ec8:	mov	r4, #0
   10ecc:	mov	r8, #100	; 0x64
   10ed0:	mov	r9, r4
   10ed4:	mov	r2, r7
   10ed8:	mov	r1, r8
   10edc:	add	r0, sp, #4
   10ee0:	bl	10a8c <fgets@plt>
   10ee4:	cmp	r0, #0
   10ee8:	beq	10f34 <main@@Base+0xa0>
   10eec:	add	r0, sp, #4
   10ef0:	bl	10af8 <strlen@plt>
   10ef4:	add	r3, sp, #104	; 0x68
   10ef8:	add	r0, r3, r0
   10efc:	strb	r9, [r0, #-101]	; 0xffffff9b
   10f00:	mov	r2, r4
   10f04:	add	r1, sp, #4
   10f08:	mov	r0, r6
   10f0c:	bl	111cc <vetor_insere@@Base>
   10f10:	mov	r5, r0
   10f14:	cmn	r0, #1
   10f18:	beq	10f24 <main@@Base+0x90>
   10f1c:	add	r4, r4, #1
   10f20:	b	10ed4 <main@@Base+0x40>
   10f24:	movw	r0, #5968	; 0x1750
   10f28:	movt	r0, #1
   10f2c:	bl	10ac8 <puts@plt>
   10f30:	b	10ff4 <main@@Base+0x160>
   10f34:	mov	r1, r4
   10f38:	movw	r0, #6016	; 0x1780
   10f3c:	movt	r0, #1
   10f40:	bl	10a68 <printf@plt>
   10f44:	mov	r0, r6
   10f48:	bl	10c24 <vetor_imprime@@Base>
   10f4c:	movw	r1, #6044	; 0x179c
   10f50:	movt	r1, #1
   10f54:	mov	r0, r6
   10f58:	bl	11394 <vetor_pesquisa@@Base>
   10f5c:	mov	r1, r0
   10f60:	movw	r0, #6080	; 0x17c0
   10f64:	movt	r0, #1
   10f68:	bl	10a68 <printf@plt>
   10f6c:	mov	r0, r6
   10f70:	bl	11414 <vetor_ordena@@Base>
   10f74:	cmp	r0, #0
   10f78:	bne	11010 <main@@Base+0x17c>
   10f7c:	mov	r0, r6
   10f80:	bl	10c24 <vetor_imprime@@Base>
   10f84:	movw	r1, #6192	; 0x1830
   10f88:	movt	r1, #1
   10f8c:	mov	r0, r6
   10f90:	bl	10c8c <vetor_num_ocorrencias@@Base>
   10f94:	mov	r1, r0
   10f98:	movw	r0, #6212	; 0x1844
   10f9c:	movt	r0, #1
   10fa0:	bl	10a68 <printf@plt>
   10fa4:	mov	r0, r6
   10fa8:	bl	10d04 <vetor_remove_repetidas@@Base>
   10fac:	ldr	r1, [r6]
   10fb0:	sub	r1, r1, #1
   10fb4:	movw	r0, #6268	; 0x187c
   10fb8:	movt	r0, #1
   10fbc:	bl	10a68 <printf@plt>
   10fc0:	movw	r1, #6332	; 0x18bc
   10fc4:	movt	r1, #1
   10fc8:	mov	r0, r6
   10fcc:	bl	10dd8 <vetor_pesquisa_parcial@@Base>
   10fd0:	mov	r4, r0
   10fd4:	bl	10c24 <vetor_imprime@@Base>
   10fd8:	mov	r0, r4
   10fdc:	bl	11054 <vetor_apaga@@Base>
   10fe0:	mov	r0, r6
   10fe4:	bl	11054 <vetor_apaga@@Base>
   10fe8:	mov	r0, r7
   10fec:	bl	10b1c <fclose@plt>
   10ff0:	mov	r5, #0
   10ff4:	mov	r0, r5
   10ff8:	add	sp, sp, #108	; 0x6c
   10ffc:	ldrd	r4, [sp]
   11000:	ldrd	r6, [sp, #8]
   11004:	ldrd	r8, [sp, #16]
   11008:	add	sp, sp, #24
   1100c:	pop	{pc}		; (ldr pc, [sp], #4)
   11010:	movw	r0, #6152	; 0x1808
   11014:	movt	r0, #1
   11018:	bl	10ac8 <puts@plt>
   1101c:	b	10f84 <main@@Base+0xf0>

00011020 <vetor_novo@@Base>:
   11020:	str	r4, [sp, #-8]!
   11024:	str	lr, [sp, #4]
   11028:	mov	r0, #12
   1102c:	bl	10ad4 <malloc@plt>
   11030:	cmp	r0, #0
   11034:	beq	11048 <vetor_novo@@Base+0x28>
   11038:	mov	r3, #0
   1103c:	str	r3, [r0]
   11040:	str	r3, [r0, #4]
   11044:	str	r3, [r0, #8]
   11048:	ldr	r4, [sp]
   1104c:	add	sp, sp, #4
   11050:	pop	{pc}		; (ldr pc, [sp], #4)

00011054 <vetor_apaga@@Base>:
   11054:	strd	r4, [sp, #-16]!
   11058:	str	r6, [sp, #8]
   1105c:	str	lr, [sp, #12]
   11060:	subs	r5, r0, #0
   11064:	beq	110a4 <vetor_apaga@@Base+0x50>
   11068:	ldr	r3, [r5]
   1106c:	cmp	r3, #0
   11070:	ble	11094 <vetor_apaga@@Base+0x40>
   11074:	mov	r4, #0
   11078:	ldr	r3, [r5, #8]
   1107c:	ldr	r0, [r3, r4, lsl #2]
   11080:	bl	10a80 <free@plt>
   11084:	add	r4, r4, #1
   11088:	ldr	r3, [r5]
   1108c:	cmp	r3, r4
   11090:	bgt	11078 <vetor_apaga@@Base+0x24>
   11094:	ldr	r0, [r5, #8]
   11098:	bl	10a80 <free@plt>
   1109c:	mov	r0, r5
   110a0:	bl	10a80 <free@plt>
   110a4:	ldrd	r4, [sp]
   110a8:	ldr	r6, [sp, #8]
   110ac:	add	sp, sp, #12
   110b0:	pop	{pc}		; (ldr pc, [sp], #4)

000110b4 <vetor_atribui@@Base>:
   110b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   110b8:	strd	r6, [sp, #8]
   110bc:	strd	r8, [sp, #16]
   110c0:	str	sl, [sp, #24]
   110c4:	str	lr, [sp, #28]
   110c8:	mov	r5, r0
   110cc:	cmp	r0, #0
   110d0:	lsrne	r0, r1, #31
   110d4:	moveq	r0, #1
   110d8:	cmp	r0, #0
   110dc:	bne	11164 <vetor_atribui@@Base+0xb0>
   110e0:	ldr	r3, [r5]
   110e4:	cmp	r3, r1
   110e8:	ble	1116c <vetor_atribui@@Base+0xb8>
   110ec:	mov	r6, r2
   110f0:	mov	r4, r1
   110f4:	mov	r0, r2
   110f8:	bl	10af8 <strlen@plt>
   110fc:	mov	r9, r0
   11100:	ldr	r7, [r5, #8]
   11104:	ldr	r8, [r7, r4, lsl #2]
   11108:	mov	r0, r8
   1110c:	bl	10af8 <strlen@plt>
   11110:	cmp	r0, r9
   11114:	bcs	11138 <vetor_atribui@@Base+0x84>
   11118:	add	r1, r9, #1
   1111c:	mov	r0, r8
   11120:	bl	10aa4 <realloc@plt>
   11124:	str	r0, [r7, r4, lsl #2]
   11128:	ldr	r3, [r5, #8]
   1112c:	ldr	r3, [r3, r4, lsl #2]
   11130:	cmp	r3, #0
   11134:	beq	11174 <vetor_atribui@@Base+0xc0>
   11138:	ldr	r3, [r5, #8]
   1113c:	mov	r1, r6
   11140:	ldr	r0, [r3, r4, lsl #2]
   11144:	bl	10abc <strcpy@plt>
   11148:	mov	r0, r4
   1114c:	ldrd	r4, [sp]
   11150:	ldrd	r6, [sp, #8]
   11154:	ldrd	r8, [sp, #16]
   11158:	ldr	sl, [sp, #24]
   1115c:	add	sp, sp, #28
   11160:	pop	{pc}		; (ldr pc, [sp], #4)
   11164:	mvn	r0, #0
   11168:	b	1114c <vetor_atribui@@Base+0x98>
   1116c:	mvn	r0, #0
   11170:	b	1114c <vetor_atribui@@Base+0x98>
   11174:	mvn	r0, #0
   11178:	b	1114c <vetor_atribui@@Base+0x98>

0001117c <vetor_tamanho@@Base>:
   1117c:	cmp	r0, #0
   11180:	ldrne	r0, [r0]
   11184:	mvneq	r0, #0
   11188:	bx	lr

0001118c <vetor_elemento@@Base>:
   1118c:	mov	r3, r0
   11190:	cmp	r0, #0
   11194:	lsrne	r0, r1, #31
   11198:	moveq	r0, #1
   1119c:	cmp	r0, #0
   111a0:	bne	111bc <vetor_elemento@@Base+0x30>
   111a4:	ldr	r2, [r3]
   111a8:	cmp	r2, r1
   111ac:	ble	111c4 <vetor_elemento@@Base+0x38>
   111b0:	ldr	r3, [r3, #8]
   111b4:	ldr	r0, [r3, r1, lsl #2]
   111b8:	bx	lr
   111bc:	mov	r0, #0
   111c0:	bx	lr
   111c4:	mov	r0, #0
   111c8:	bx	lr

000111cc <vetor_insere@@Base>:
   111cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   111d0:	strd	r6, [sp, #8]
   111d4:	str	r8, [sp, #16]
   111d8:	str	lr, [sp, #20]
   111dc:	mov	r4, r0
   111e0:	cmp	r0, #0
   111e4:	lsrne	r0, r2, #31
   111e8:	moveq	r0, #1
   111ec:	cmp	r0, #0
   111f0:	bne	112d4 <vetor_insere@@Base+0x108>
   111f4:	ldr	r3, [r4]
   111f8:	cmp	r3, r2
   111fc:	blt	112dc <vetor_insere@@Base+0x110>
   11200:	mov	r6, r2
   11204:	mov	r7, r1
   11208:	ldr	r1, [r4, #4]
   1120c:	cmp	r3, r1
   11210:	beq	112a4 <vetor_insere@@Base+0xd8>
   11214:	ldr	ip, [r4]
   11218:	sub	ip, ip, #1
   1121c:	cmp	r6, ip
   11220:	bgt	1124c <vetor_insere@@Base+0x80>
   11224:	lsl	r3, ip, #2
   11228:	sub	r1, r6, #1
   1122c:	ldr	lr, [r4, #8]
   11230:	add	r5, lr, r3
   11234:	ldr	r2, [lr, r3]
   11238:	str	r2, [r5, #4]
   1123c:	sub	ip, ip, #1
   11240:	sub	r3, r3, #4
   11244:	cmp	ip, r1
   11248:	bne	1122c <vetor_insere@@Base+0x60>
   1124c:	mov	r0, r7
   11250:	bl	10af8 <strlen@plt>
   11254:	ldr	r5, [r4, #8]
   11258:	mov	r1, #1
   1125c:	add	r0, r0, r1
   11260:	bl	10a44 <calloc@plt>
   11264:	str	r0, [r5, r6, lsl #2]
   11268:	ldr	r3, [r4, #8]
   1126c:	ldr	r0, [r3, r6, lsl #2]
   11270:	cmp	r0, #0
   11274:	beq	112e4 <vetor_insere@@Base+0x118>
   11278:	mov	r1, r7
   1127c:	bl	10abc <strcpy@plt>
   11280:	ldr	r3, [r4]
   11284:	add	r3, r3, #1
   11288:	str	r3, [r4]
   1128c:	mov	r0, r6
   11290:	ldrd	r4, [sp]
   11294:	ldrd	r6, [sp, #8]
   11298:	ldr	r8, [sp, #16]
   1129c:	add	sp, sp, #20
   112a0:	pop	{pc}		; (ldr pc, [sp], #4)
   112a4:	cmp	r1, #0
   112a8:	lslne	r1, r1, #1
   112ac:	moveq	r1, #1
   112b0:	str	r1, [r4, #4]
   112b4:	lsl	r1, r1, #2
   112b8:	ldr	r0, [r4, #8]
   112bc:	bl	10aa4 <realloc@plt>
   112c0:	str	r0, [r4, #8]
   112c4:	cmp	r0, #0
   112c8:	bne	11214 <vetor_insere@@Base+0x48>
   112cc:	mvn	r0, #0
   112d0:	b	11290 <vetor_insere@@Base+0xc4>
   112d4:	mvn	r0, #0
   112d8:	b	11290 <vetor_insere@@Base+0xc4>
   112dc:	mvn	r0, #0
   112e0:	b	11290 <vetor_insere@@Base+0xc4>
   112e4:	mvn	r0, #0
   112e8:	b	11290 <vetor_insere@@Base+0xc4>

000112ec <vetor_remove@@Base>:
   112ec:	strd	r4, [sp, #-16]!
   112f0:	str	r6, [sp, #8]
   112f4:	str	lr, [sp, #12]
   112f8:	mov	r6, r0
   112fc:	cmp	r0, #0
   11300:	lsrne	r0, r1, #31
   11304:	moveq	r0, #1
   11308:	cmp	r0, #0
   1130c:	bne	11384 <vetor_remove@@Base+0x98>
   11310:	ldr	r3, [r6]
   11314:	cmp	r3, r1
   11318:	ble	1138c <vetor_remove@@Base+0xa0>
   1131c:	mov	r5, r1
   11320:	lsl	r4, r1, #2
   11324:	ldr	r3, [r6, #8]
   11328:	ldr	r0, [r3, r1, lsl #2]
   1132c:	bl	10a80 <free@plt>
   11330:	add	r1, r5, #1
   11334:	ldr	r2, [r6]
   11338:	cmp	r1, r2
   1133c:	bge	11368 <vetor_remove@@Base+0x7c>
   11340:	add	r3, r4, #4
   11344:	ldr	r2, [r6, #8]
   11348:	add	r0, r2, r3
   1134c:	ldr	r2, [r2, r3]
   11350:	str	r2, [r0, #-4]
   11354:	add	r1, r1, #1
   11358:	ldr	r2, [r6]
   1135c:	add	r3, r3, #4
   11360:	cmp	r2, r1
   11364:	bgt	11344 <vetor_remove@@Base+0x58>
   11368:	sub	r2, r2, #1
   1136c:	str	r2, [r6]
   11370:	mov	r0, #0
   11374:	ldrd	r4, [sp]
   11378:	ldr	r6, [sp, #8]
   1137c:	add	sp, sp, #12
   11380:	pop	{pc}		; (ldr pc, [sp], #4)
   11384:	mvn	r0, #0
   11388:	b	11374 <vetor_remove@@Base+0x88>
   1138c:	mvn	r0, #0
   11390:	b	11374 <vetor_remove@@Base+0x88>

00011394 <vetor_pesquisa@@Base>:
   11394:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11398:	strd	r6, [sp, #8]
   1139c:	str	r8, [sp, #16]
   113a0:	str	lr, [sp, #20]
   113a4:	cmp	r0, #0
   113a8:	beq	11404 <vetor_pesquisa@@Base+0x70>
   113ac:	ldr	r7, [r0]
   113b0:	cmp	r7, #0
   113b4:	ble	1140c <vetor_pesquisa@@Base+0x78>
   113b8:	mov	r6, r1
   113bc:	ldr	r5, [r0, #8]
   113c0:	sub	r5, r5, #4
   113c4:	mov	r4, #0
   113c8:	mov	r1, r6
   113cc:	ldr	r0, [r5, #4]!
   113d0:	bl	10a5c <strcmp@plt>
   113d4:	cmp	r0, #0
   113d8:	beq	113ec <vetor_pesquisa@@Base+0x58>
   113dc:	add	r4, r4, #1
   113e0:	cmp	r4, r7
   113e4:	bne	113c8 <vetor_pesquisa@@Base+0x34>
   113e8:	mvn	r4, #0
   113ec:	mov	r0, r4
   113f0:	ldrd	r4, [sp]
   113f4:	ldrd	r6, [sp, #8]
   113f8:	ldr	r8, [sp, #16]
   113fc:	add	sp, sp, #20
   11400:	pop	{pc}		; (ldr pc, [sp], #4)
   11404:	mvn	r4, #0
   11408:	b	113ec <vetor_pesquisa@@Base+0x58>
   1140c:	mvn	r4, #0
   11410:	b	113ec <vetor_pesquisa@@Base+0x58>

00011414 <vetor_ordena@@Base>:
   11414:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11418:	strd	r6, [sp, #8]
   1141c:	strd	r8, [sp, #16]
   11420:	str	sl, [sp, #24]
   11424:	str	lr, [sp, #28]
   11428:	subs	r7, r0, #0
   1142c:	beq	114cc <vetor_ordena@@Base+0xb8>
   11430:	ldr	r3, [r7]
   11434:	cmp	r3, #1
   11438:	ble	114d4 <vetor_ordena@@Base+0xc0>
   1143c:	mov	sl, #4
   11440:	mov	r9, #1
   11444:	b	11468 <vetor_ordena@@Base+0x54>
   11448:	mov	r4, r9
   1144c:	ldr	r3, [r7, #8]
   11450:	str	r8, [r3, r4, lsl #2]
   11454:	add	r9, r9, #1
   11458:	add	sl, sl, #4
   1145c:	ldr	r3, [r7]
   11460:	cmp	r3, r9
   11464:	ble	114b0 <vetor_ordena@@Base+0x9c>
   11468:	ldr	r3, [r7, #8]
   1146c:	ldr	r8, [r3, sl]
   11470:	cmp	r9, #0
   11474:	ble	11448 <vetor_ordena@@Base+0x34>
   11478:	sub	r5, sl, #4
   1147c:	mov	r4, r9
   11480:	ldr	r6, [r7, #8]
   11484:	ldr	r1, [r6, r5]
   11488:	mov	r0, r8
   1148c:	bl	10a5c <strcmp@plt>
   11490:	cmp	r0, #0
   11494:	bge	1144c <vetor_ordena@@Base+0x38>
   11498:	ldr	r3, [r6, r5]
   1149c:	str	r3, [r6, r4, lsl #2]
   114a0:	sub	r5, r5, #4
   114a4:	subs	r4, r4, #1
   114a8:	bne	11480 <vetor_ordena@@Base+0x6c>
   114ac:	b	1144c <vetor_ordena@@Base+0x38>
   114b0:	mov	r0, #0
   114b4:	ldrd	r4, [sp]
   114b8:	ldrd	r6, [sp, #8]
   114bc:	ldrd	r8, [sp, #16]
   114c0:	ldr	sl, [sp, #24]
   114c4:	add	sp, sp, #28
   114c8:	pop	{pc}		; (ldr pc, [sp], #4)
   114cc:	mvn	r0, #0
   114d0:	b	114b4 <vetor_ordena@@Base+0xa0>
   114d4:	mov	r0, #0
   114d8:	b	114b4 <vetor_ordena@@Base+0xa0>

000114dc <vetor_concatena@@Base>:
   114dc:	strd	r4, [sp, #-16]!
   114e0:	str	r6, [sp, #8]
   114e4:	str	lr, [sp, #12]
   114e8:	cmp	r1, #0
   114ec:	cmpne	r0, #0
   114f0:	moveq	r6, #0
   114f4:	beq	1154c <vetor_concatena@@Base+0x70>
   114f8:	mov	r5, r0
   114fc:	mov	r4, r1
   11500:	bl	11020 <vetor_novo@@Base>
   11504:	mov	r6, r0
   11508:	ldr	r0, [r4]
   1150c:	ldr	r2, [r5]
   11510:	add	r3, r2, r0, lsl #2
   11514:	str	r3, [r6, #8]
   11518:	ldr	r3, [r5, #4]
   1151c:	ldr	r1, [r4, #4]
   11520:	add	r3, r3, r1
   11524:	str	r3, [r6, #4]
   11528:	ldr	r3, [r5, #8]
   1152c:	ldr	r1, [r3]
   11530:	ldr	r0, [r2, r0, lsl #2]
   11534:	bl	10abc <strcpy@plt>
   11538:	ldr	r2, [r4, #8]
   1153c:	ldr	r3, [r6, #8]
   11540:	ldr	r1, [r2]
   11544:	ldr	r0, [r3]
   11548:	bl	10ab0 <strcat@plt>
   1154c:	mov	r0, r6
   11550:	ldrd	r4, [sp]
   11554:	ldr	r6, [sp, #8]
   11558:	add	sp, sp, #12
   1155c:	pop	{pc}		; (ldr pc, [sp], #4)

00011560 <vetor_inverte@@Base>:
   11560:	cmp	r0, #0
   11564:	beq	115c8 <vetor_inverte@@Base+0x68>
   11568:	ldr	ip, [r0]
   1156c:	cmp	ip, #0
   11570:	ble	115c8 <vetor_inverte@@Base+0x68>
   11574:	str	r4, [sp, #-8]!
   11578:	str	lr, [sp, #4]
   1157c:	mov	r3, ip
   11580:	mov	r2, #0
   11584:	ldr	r1, [r0, #8]
   11588:	ldr	lr, [r1, r2, lsl #2]
   1158c:	ldr	r4, [r1, r3, lsl #2]
   11590:	str	r4, [r1, r2, lsl #2]
   11594:	ldr	r1, [r0, #8]
   11598:	str	lr, [r1, r3, lsl #2]
   1159c:	sub	r3, r3, #1
   115a0:	add	r2, r2, #1
   115a4:	cmp	r3, ip
   115a8:	movlt	r1, r3
   115ac:	movge	r1, ip
   115b0:	cmp	r1, r2
   115b4:	bgt	11584 <vetor_inverte@@Base+0x24>
   115b8:	mov	r0, #0
   115bc:	ldr	r4, [sp]
   115c0:	add	sp, sp, #4
   115c4:	pop	{pc}		; (ldr pc, [sp], #4)
   115c8:	mov	r0, #0
   115cc:	bx	lr

000115d0 <vetor_baralha@@Base>:
   115d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   115d4:	strd	r6, [sp, #8]
   115d8:	str	lr, [sp, #16]
   115dc:	sub	sp, sp, #12
   115e0:	ldr	r7, [r0]
   115e4:	bl	11020 <vetor_novo@@Base>
   115e8:	mov	r5, r0
   115ec:	add	r0, sp, #4
   115f0:	bl	10a98 <time@plt>
   115f4:	bl	10b04 <srand@plt>
   115f8:	cmp	r7, #0
   115fc:	ble	11638 <vetor_baralha@@Base+0x68>
   11600:	mov	r4, #0
   11604:	add	r6, r7, #1
   11608:	bl	10b10 <rand@plt>
   1160c:	ldr	r2, [r5, #8]
   11610:	ldr	r1, [r2, r4, lsl #2]
   11614:	sdiv	r3, r0, r6
   11618:	mls	r0, r3, r6, r0
   1161c:	ldr	r3, [r2, r0, lsl #2]
   11620:	str	r3, [r2, r4, lsl #2]
   11624:	ldr	r3, [r5, #8]
   11628:	str	r1, [r3, r0, lsl #2]
   1162c:	add	r4, r4, #1
   11630:	cmp	r7, r4
   11634:	bne	11608 <vetor_baralha@@Base+0x38>
   11638:	mov	r0, r5
   1163c:	add	sp, sp, #12
   11640:	ldrd	r4, [sp]
   11644:	ldrd	r6, [sp, #8]
   11648:	add	sp, sp, #16
   1164c:	pop	{pc}		; (ldr pc, [sp], #4)

00011650 <__libc_csu_init@@Base>:
   11650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11654:	mov	r7, r0
   11658:	ldr	r6, [pc, #72]	; 116a8 <__libc_csu_init@@Base+0x58>
   1165c:	ldr	r5, [pc, #72]	; 116ac <__libc_csu_init@@Base+0x5c>
   11660:	add	r6, pc, r6
   11664:	add	r5, pc, r5
   11668:	sub	r6, r6, r5
   1166c:	mov	r8, r1
   11670:	mov	r9, r2
   11674:	bl	10a24 <calloc@plt-0x20>
   11678:	asrs	r6, r6, #2
   1167c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11680:	mov	r4, #0
   11684:	add	r4, r4, #1
   11688:	ldr	r3, [r5], #4
   1168c:	mov	r2, r9
   11690:	mov	r1, r8
   11694:	mov	r0, r7
   11698:	blx	r3
   1169c:	cmp	r6, r4
   116a0:	bne	11684 <__libc_csu_init@@Base+0x34>
   116a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116a8:	andeq	r0, r1, ip, lsr #17
   116ac:	andeq	r0, r1, r4, lsr #17

000116b0 <__libc_csu_fini@@Base>:
   116b0:	bx	lr

Disassembly of section .fini:

000116b4 <.fini>:
   116b4:	push	{r3, lr}
   116b8:	pop	{r3, pc}
