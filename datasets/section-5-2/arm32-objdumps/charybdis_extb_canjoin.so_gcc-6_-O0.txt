
../repos/charybdis/extensions/.libs/extb_canjoin.so:     file format elf32-littlearm


Disassembly of section .init:

000003c4 <_init>:
 3c4:	push	{r3, lr}
 3c8:	bl	414 <call_weak_fn>
 3cc:	pop	{r3, pc}

Disassembly of section .plt:

000003d0 <.plt>:
 3d0:	push	{lr}		; (str lr, [sp, #-4]!)
 3d4:	ldr	lr, [pc, #4]	; 3e0 <.plt+0x10>
 3d8:	add	lr, pc, lr
 3dc:	ldr	pc, [lr, #8]!
 3e0:	.word	0x00010c20

000003e4 <__cxa_finalize@plt>:
 3e4:	add	ip, pc, #0, 12
 3e8:	add	ip, ip, #16, 20	; 0x10000
 3ec:	ldr	pc, [ip, #3104]!	; 0xc20

000003f0 <find_channel@plt>:
 3f0:	add	ip, pc, #0, 12
 3f4:	add	ip, ip, #16, 20	; 0x10000
 3f8:	ldr	pc, [ip, #3096]!	; 0xc18

000003fc <__gmon_start__@plt>:
 3fc:	add	ip, pc, #0, 12
 400:	add	ip, ip, #16, 20	; 0x10000
 404:	ldr	pc, [ip, #3088]!	; 0xc10

00000408 <is_banned@plt>:
 408:	add	ip, pc, #0, 12
 40c:	add	ip, ip, #16, 20	; 0x10000
 410:	ldr	pc, [ip, #3080]!	; 0xc08

Disassembly of section .text:

00000414 <call_weak_fn>:
 414:	ldr	r3, [pc, #20]	; 430 <call_weak_fn+0x1c>
 418:	ldr	r2, [pc, #20]	; 434 <call_weak_fn+0x20>
 41c:	add	r3, pc, r3
 420:	ldr	r2, [r3, r2]
 424:	cmp	r2, #0
 428:	bxeq	lr
 42c:	b	3fc <__gmon_start__@plt>
 430:	.word	0x00010bdc
 434:	.word	0x00000024

00000438 <deregister_tm_clones>:
 438:	ldr	r3, [pc, #52]	; 474 <deregister_tm_clones+0x3c>
 43c:	ldr	r0, [pc, #52]	; 478 <deregister_tm_clones+0x40>
 440:	add	r3, pc, r3
 444:	add	r0, pc, r0
 448:	add	r3, r3, #3
 44c:	sub	r3, r3, r0
 450:	cmp	r3, #6
 454:	ldr	r3, [pc, #32]	; 47c <deregister_tm_clones+0x44>
 458:	add	r3, pc, r3
 45c:	bxls	lr
 460:	ldr	r2, [pc, #24]	; 480 <deregister_tm_clones+0x48>
 464:	ldr	r3, [r3, r2]
 468:	cmp	r3, #0
 46c:	bxeq	lr
 470:	bx	r3
 474:	.word	0x00010c18
 478:	.word	0x00010c14
 47c:	.word	0x00010ba0
 480:	.word	0x00000020

00000484 <register_tm_clones>:
 484:	ldr	r1, [pc, #56]	; 4c4 <register_tm_clones+0x40>
 488:	ldr	r0, [pc, #56]	; 4c8 <register_tm_clones+0x44>
 48c:	add	r1, pc, r1
 490:	add	r0, pc, r0
 494:	sub	r1, r1, r0
 498:	ldr	r3, [pc, #44]	; 4cc <register_tm_clones+0x48>
 49c:	asr	r1, r1, #2
 4a0:	add	r3, pc, r3
 4a4:	add	r1, r1, r1, lsr #31
 4a8:	asrs	r1, r1, #1
 4ac:	bxeq	lr
 4b0:	ldr	r2, [pc, #24]	; 4d0 <register_tm_clones+0x4c>
 4b4:	ldr	r3, [r3, r2]
 4b8:	cmp	r3, #0
 4bc:	bxeq	lr
 4c0:	bx	r3
 4c4:	.word	0x00010bcc
 4c8:	.word	0x00010bc8
 4cc:	.word	0x00010b58
 4d0:	.word	0x00000030

000004d4 <__do_global_dtors_aux>:
 4d4:	ldr	r3, [pc, #76]	; 528 <__do_global_dtors_aux+0x54>
 4d8:	ldr	r2, [pc, #76]	; 52c <__do_global_dtors_aux+0x58>
 4dc:	add	r3, pc, r3
 4e0:	add	r2, pc, r2
 4e4:	ldrb	r3, [r3]
 4e8:	cmp	r3, #0
 4ec:	bxne	lr
 4f0:	ldr	r3, [pc, #56]	; 530 <__do_global_dtors_aux+0x5c>
 4f4:	push	{r4, lr}
 4f8:	ldr	r3, [r2, r3]
 4fc:	cmp	r3, #0
 500:	beq	510 <__do_global_dtors_aux+0x3c>
 504:	ldr	r3, [pc, #40]	; 534 <__do_global_dtors_aux+0x60>
 508:	ldr	r0, [pc, r3]
 50c:	bl	3e4 <__cxa_finalize@plt>
 510:	bl	438 <deregister_tm_clones>
 514:	ldr	r3, [pc, #28]	; 538 <__do_global_dtors_aux+0x64>
 518:	mov	r2, #1
 51c:	add	r3, pc, r3
 520:	strb	r2, [r3]
 524:	pop	{r4, pc}
 528:	.word	0x00010b7c
 52c:	.word	0x00010b18
 530:	.word	0x0000001c
 534:	.word	0x00010b24
 538:	.word	0x00010b3c

0000053c <frame_dummy>:
 53c:	ldr	r0, [pc, #56]	; 57c <frame_dummy+0x40>
 540:	ldr	r3, [pc, #56]	; 580 <frame_dummy+0x44>
 544:	add	r0, pc, r0
 548:	ldr	r2, [r0]
 54c:	add	r3, pc, r3
 550:	cmp	r2, #0
 554:	bne	55c <frame_dummy+0x20>
 558:	b	484 <register_tm_clones>
 55c:	ldr	r2, [pc, #32]	; 584 <frame_dummy+0x48>
 560:	ldr	r3, [r3, r2]
 564:	cmp	r3, #0
 568:	beq	558 <frame_dummy+0x1c>
 56c:	push	{r4, lr}
 570:	blx	r3
 574:	pop	{r4, lr}
 578:	b	484 <register_tm_clones>
 57c:	.word	0x000109b0
 580:	.word	0x00010aac
 584:	.word	0x00000028

00000588 <_modinit>:
 588:	push	{fp}		; (str fp, [sp, #-4]!)
 58c:	add	fp, sp, #0
 590:	ldr	r2, [pc, #40]	; 5c0 <_modinit+0x38>
 594:	add	r2, pc, r2
 598:	ldr	r3, [pc, #36]	; 5c4 <_modinit+0x3c>
 59c:	ldr	r3, [r2, r3]
 5a0:	ldr	r2, [pc, #32]	; 5c8 <_modinit+0x40>
 5a4:	add	r2, pc, r2
 5a8:	str	r2, [r3, #424]	; 0x1a8
 5ac:	mov	r3, #0
 5b0:	mov	r0, r3
 5b4:	add	sp, fp, #0
 5b8:	pop	{fp}		; (ldr fp, [sp], #4)
 5bc:	bx	lr
 5c0:	.word	0x00010a64
 5c4:	.word	0x0000002c
 5c8:	.word	0x00000058

000005cc <_moddeinit>:
 5cc:	push	{fp}		; (str fp, [sp, #-4]!)
 5d0:	add	fp, sp, #0
 5d4:	ldr	r2, [pc, #32]	; 5fc <_moddeinit+0x30>
 5d8:	add	r2, pc, r2
 5dc:	ldr	r3, [pc, #28]	; 600 <_moddeinit+0x34>
 5e0:	ldr	r3, [r2, r3]
 5e4:	mov	r2, #0
 5e8:	str	r2, [r3, #424]	; 0x1a8
 5ec:	nop			; (mov r0, r0)
 5f0:	add	sp, fp, #0
 5f4:	pop	{fp}		; (ldr fp, [sp], #4)
 5f8:	bx	lr
 5fc:	.word	0x00010a20
 600:	.word	0x0000002c

00000604 <eb_canjoin>:
 604:	push	{fp, lr}
 608:	add	fp, sp, #4
 60c:	sub	sp, sp, #32
 610:	str	r0, [fp, #-16]
 614:	str	r1, [fp, #-20]	; 0xffffffec
 618:	str	r2, [fp, #-24]	; 0xffffffe8
 61c:	str	r3, [fp, #-28]	; 0xffffffe4
 620:	ldr	r3, [pc, #232]	; 710 <eb_canjoin+0x10c>
 624:	add	r3, pc, r3
 628:	ldr	r3, [r3]
 62c:	cmp	r3, #0
 630:	beq	63c <eb_canjoin+0x38>
 634:	mvn	r3, #0
 638:	b	704 <eb_canjoin+0x100>
 63c:	ldr	r3, [fp, #-16]
 640:	cmp	r3, #0
 644:	bne	650 <eb_canjoin+0x4c>
 648:	mvn	r3, #0
 64c:	b	704 <eb_canjoin+0x100>
 650:	ldr	r0, [fp, #-16]
 654:	bl	3f0 <find_channel@plt>
 658:	str	r0, [fp, #-8]
 65c:	ldr	r3, [fp, #-8]
 660:	cmp	r3, #0
 664:	beq	678 <eb_canjoin+0x74>
 668:	ldr	r2, [fp, #-8]
 66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 670:	cmp	r2, r3
 674:	bne	680 <eb_canjoin+0x7c>
 678:	mvn	r3, #0
 67c:	b	704 <eb_canjoin+0x100>
 680:	ldr	r3, [fp, #-24]	; 0xffffffe8
 684:	ldr	r3, [r3, #236]	; 0xec
 688:	ldrb	r3, [r3]
 68c:	cmp	r3, #35	; 0x23
 690:	bne	6ac <eb_canjoin+0xa8>
 694:	ldr	r3, [fp, #-16]
 698:	ldrb	r3, [r3]
 69c:	cmp	r3, #38	; 0x26
 6a0:	bne	6ac <eb_canjoin+0xa8>
 6a4:	mvn	r3, #0
 6a8:	b	704 <eb_canjoin+0x100>
 6ac:	ldr	r3, [pc, #96]	; 714 <eb_canjoin+0x110>
 6b0:	add	r3, pc, r3
 6b4:	mov	r2, #1
 6b8:	str	r2, [r3]
 6bc:	mov	r3, #0
 6c0:	str	r3, [sp]
 6c4:	mov	r3, #0
 6c8:	mov	r2, #0
 6cc:	ldr	r1, [fp, #-20]	; 0xffffffec
 6d0:	ldr	r0, [fp, #-8]
 6d4:	bl	408 <is_banned@plt>
 6d8:	mov	r3, r0
 6dc:	cmp	r3, #268435456	; 0x10000000
 6e0:	moveq	r3, #1
 6e4:	movne	r3, #0
 6e8:	uxtb	r3, r3
 6ec:	str	r3, [fp, #-12]
 6f0:	ldr	r3, [pc, #32]	; 718 <eb_canjoin+0x114>
 6f4:	add	r3, pc, r3
 6f8:	mov	r2, #0
 6fc:	str	r2, [r3]
 700:	ldr	r3, [fp, #-12]
 704:	mov	r0, r3
 708:	sub	sp, fp, #4
 70c:	pop	{fp, pc}
 710:	.word	0x00010a38
 714:	.word	0x000109ac
 718:	.word	0x00010968

Disassembly of section .fini:

0000071c <_fini>:
 71c:	push	{r3, lr}
 720:	pop	{r3, pc}
