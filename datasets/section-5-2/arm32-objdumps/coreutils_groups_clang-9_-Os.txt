
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010da0 <.init>:
   10da0:	push	{r3, lr}
   10da4:	bl	1106c <putchar_unlocked@plt+0x48>
   10da8:	pop	{r3, pc}

Disassembly of section .plt:

00010dac <calloc@plt-0x14>:
   10dac:	push	{lr}		; (str lr, [sp, #-4]!)
   10db0:	ldr	lr, [pc, #4]	; 10dbc <calloc@plt-0x4>
   10db4:	add	lr, pc, lr
   10db8:	ldr	pc, [lr, #8]!
   10dbc:	andeq	r5, r1, r4, asr #4

00010dc0 <calloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #580]!	; 0x244

00010dcc <fputs_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #572]!	; 0x23c

00010dd8 <raise@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #564]!	; 0x234

00010de4 <getpwnam@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #556]!	; 0x22c

00010df0 <strcmp@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #548]!	; 0x224

00010dfc <getpwuid@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #540]!	; 0x21c

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #532]!	; 0x214

00010e14 <getuid@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #524]!	; 0x20c

00010e20 <free@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #516]!	; 0x204

00010e2c <_exit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #508]!	; 0x1fc

00010e38 <memcpy@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #500]!	; 0x1f4

00010e44 <mbsinit@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #492]!	; 0x1ec

00010e50 <dcgettext@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #484]!	; 0x1e4

00010e5c <realloc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #476]!	; 0x1dc

00010e68 <textdomain@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #468]!	; 0x1d4

00010e74 <iswprint@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #460]!	; 0x1cc

00010e80 <getegid@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #452]!	; 0x1c4

00010e8c <lseek64@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #444]!	; 0x1bc

00010e98 <__ctype_get_mb_cur_max@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea4 <__fpending@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb0 <ferror_unlocked@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #420]!	; 0x1a4

00010ebc <mbrtowc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #412]!	; 0x19c

00010ec8 <error@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #404]!	; 0x194

00010ed4 <malloc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #396]!	; 0x18c

00010ee0 <__libc_start_main@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #388]!	; 0x184

00010eec <__freading@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #380]!	; 0x17c

00010ef8 <__gmon_start__@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #372]!	; 0x174

00010f04 <getopt_long@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #364]!	; 0x16c

00010f10 <__ctype_b_loc@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #356]!	; 0x164

00010f1c <exit@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #348]!	; 0x15c

00010f28 <bcmp@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #340]!	; 0x154

00010f34 <strlen@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #332]!	; 0x14c

00010f40 <__errno_location@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #324]!	; 0x144

00010f4c <__cxa_atexit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #316]!	; 0x13c

00010f58 <getgid@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #308]!	; 0x134

00010f64 <getgrouplist@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #300]!	; 0x12c

00010f70 <memset@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #292]!	; 0x124

00010f7c <__printf_chk@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #86016	; 0x15000
   10f84:	ldr	pc, [ip, #284]!	; 0x11c

00010f88 <fileno@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #86016	; 0x15000
   10f90:	ldr	pc, [ip, #276]!	; 0x114

00010f94 <__fprintf_chk@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #86016	; 0x15000
   10f9c:	ldr	pc, [ip, #268]!	; 0x10c

00010fa0 <fclose@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #86016	; 0x15000
   10fa8:	ldr	pc, [ip, #260]!	; 0x104

00010fac <fseeko64@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #86016	; 0x15000
   10fb4:	ldr	pc, [ip, #252]!	; 0xfc

00010fb8 <setlocale@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #86016	; 0x15000
   10fc0:	ldr	pc, [ip, #244]!	; 0xf4

00010fc4 <strrchr@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #86016	; 0x15000
   10fcc:	ldr	pc, [ip, #236]!	; 0xec

00010fd0 <nl_langinfo@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #86016	; 0x15000
   10fd8:	ldr	pc, [ip, #228]!	; 0xe4

00010fdc <getgroups@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #86016	; 0x15000
   10fe4:	ldr	pc, [ip, #220]!	; 0xdc

00010fe8 <bindtextdomain@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #86016	; 0x15000
   10ff0:	ldr	pc, [ip, #212]!	; 0xd4

00010ff4 <fputs@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #86016	; 0x15000
   10ffc:	ldr	pc, [ip, #204]!	; 0xcc

00011000 <strncmp@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #86016	; 0x15000
   11008:	ldr	pc, [ip, #196]!	; 0xc4

0001100c <abort@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #86016	; 0x15000
   11014:	ldr	pc, [ip, #188]!	; 0xbc

00011018 <getgrgid@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #86016	; 0x15000
   11020:	ldr	pc, [ip, #180]!	; 0xb4

00011024 <putchar_unlocked@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #86016	; 0x15000
   1102c:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00011030 <.text>:
   11030:	mov	fp, #0
   11034:	mov	lr, #0
   11038:	pop	{r1}		; (ldr r1, [sp], #4)
   1103c:	mov	r2, sp
   11040:	push	{r2}		; (str r2, [sp, #-4]!)
   11044:	push	{r0}		; (str r0, [sp, #-4]!)
   11048:	ldr	ip, [pc, #16]	; 11060 <putchar_unlocked@plt+0x3c>
   1104c:	push	{ip}		; (str ip, [sp, #-4]!)
   11050:	ldr	r0, [pc, #12]	; 11064 <putchar_unlocked@plt+0x40>
   11054:	ldr	r3, [pc, #12]	; 11068 <putchar_unlocked@plt+0x44>
   11058:	bl	10ee0 <__libc_start_main@plt>
   1105c:	bl	1100c <abort@plt>
   11060:	andeq	r4, r1, r0, lsl #14
   11064:	andeq	r1, r1, r4, asr #6
   11068:	andeq	r4, r1, r0, lsr #13
   1106c:	ldr	r3, [pc, #20]	; 11088 <putchar_unlocked@plt+0x64>
   11070:	ldr	r2, [pc, #20]	; 1108c <putchar_unlocked@plt+0x68>
   11074:	add	r3, pc, r3
   11078:	ldr	r2, [r3, r2]
   1107c:	cmp	r2, #0
   11080:	bxeq	lr
   11084:	b	10ef8 <__gmon_start__@plt>
   11088:	andeq	r4, r1, r4, lsl #31
   1108c:	ldrdeq	r0, [r0], -ip
   11090:	ldr	r0, [pc, #24]	; 110b0 <putchar_unlocked@plt+0x8c>
   11094:	ldr	r3, [pc, #24]	; 110b4 <putchar_unlocked@plt+0x90>
   11098:	cmp	r3, r0
   1109c:	bxeq	lr
   110a0:	ldr	r3, [pc, #16]	; 110b8 <putchar_unlocked@plt+0x94>
   110a4:	cmp	r3, #0
   110a8:	bxeq	lr
   110ac:	bx	r3
   110b0:	andeq	r6, r2, r0, lsr r1
   110b4:	andeq	r6, r2, r0, lsr r1
   110b8:	andeq	r0, r0, r0
   110bc:	ldr	r0, [pc, #36]	; 110e8 <putchar_unlocked@plt+0xc4>
   110c0:	ldr	r1, [pc, #36]	; 110ec <putchar_unlocked@plt+0xc8>
   110c4:	sub	r1, r1, r0
   110c8:	asr	r1, r1, #2
   110cc:	add	r1, r1, r1, lsr #31
   110d0:	asrs	r1, r1, #1
   110d4:	bxeq	lr
   110d8:	ldr	r3, [pc, #16]	; 110f0 <putchar_unlocked@plt+0xcc>
   110dc:	cmp	r3, #0
   110e0:	bxeq	lr
   110e4:	bx	r3
   110e8:	andeq	r6, r2, r0, lsr r1
   110ec:	andeq	r6, r2, r0, lsr r1
   110f0:	andeq	r0, r0, r0
   110f4:	push	{r4, lr}
   110f8:	ldr	r4, [pc, #24]	; 11118 <putchar_unlocked@plt+0xf4>
   110fc:	ldrb	r3, [r4]
   11100:	cmp	r3, #0
   11104:	popne	{r4, pc}
   11108:	bl	11090 <putchar_unlocked@plt+0x6c>
   1110c:	mov	r3, #1
   11110:	strb	r3, [r4]
   11114:	pop	{r4, pc}
   11118:	andeq	r6, r2, r8, asr #2
   1111c:	b	110bc <putchar_unlocked@plt+0x98>
   11120:	push	{fp, lr}
   11124:	mov	fp, sp
   11128:	sub	sp, sp, #56	; 0x38
   1112c:	mov	r8, r0
   11130:	cmp	r0, #0
   11134:	bne	11304 <putchar_unlocked@plt+0x2e0>
   11138:	movw	r1, #18259	; 0x4753
   1113c:	mov	r0, #0
   11140:	mov	r2, #5
   11144:	movt	r1, #1
   11148:	bl	10e50 <dcgettext@plt>
   1114c:	mov	r1, r0
   11150:	movw	r0, #24936	; 0x6168
   11154:	movt	r0, #2
   11158:	ldr	r2, [r0]
   1115c:	mov	r0, #1
   11160:	bl	10f7c <__printf_chk@plt>
   11164:	movw	r1, #18296	; 0x4778
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	movt	r1, #1
   11174:	bl	10e50 <dcgettext@plt>
   11178:	movw	r9, #24900	; 0x6144
   1117c:	movt	r9, #2
   11180:	ldr	r1, [r9]
   11184:	bl	10dcc <fputs_unlocked@plt>
   11188:	movw	r1, #18451	; 0x4813
   1118c:	mov	r0, #0
   11190:	mov	r2, #5
   11194:	movt	r1, #1
   11198:	bl	10e50 <dcgettext@plt>
   1119c:	ldr	r1, [r9]
   111a0:	bl	10dcc <fputs_unlocked@plt>
   111a4:	movw	r1, #18496	; 0x4840
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e50 <dcgettext@plt>
   111b8:	ldr	r1, [r9]
   111bc:	bl	10dcc <fputs_unlocked@plt>
   111c0:	movw	r0, #19088	; 0x4a90
   111c4:	mov	r6, sp
   111c8:	movt	r0, #1
   111cc:	mov	r1, r6
   111d0:	ldm	r0!, {r2, r3, r4, r5}
   111d4:	stmia	r1!, {r2, r3, r4, r5}
   111d8:	ldm	r0!, {r2, r3, r4, r5, r7}
   111dc:	stmia	r1!, {r2, r3, r4, r5, r7}
   111e0:	ldm	r0, {r2, r3, r4, r5, r7}
   111e4:	stm	r1, {r2, r3, r4, r5, r7}
   111e8:	movw	r1, #18714	; 0x491a
   111ec:	movw	r5, #18550	; 0x4876
   111f0:	movt	r1, #1
   111f4:	movt	r5, #1
   111f8:	mov	r0, r5
   111fc:	bl	10df0 <strcmp@plt>
   11200:	cmp	r0, #0
   11204:	ldrne	r1, [r6, #8]!
   11208:	cmpne	r1, #0
   1120c:	bne	111f8 <putchar_unlocked@plt+0x1d4>
   11210:	movw	r1, #18809	; 0x4979
   11214:	ldr	r6, [r6, #4]
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e50 <dcgettext@plt>
   11228:	movw	r2, #18581	; 0x4895
   1122c:	movw	r3, #18832	; 0x4990
   11230:	mov	r1, r0
   11234:	mov	r0, #1
   11238:	movt	r2, #1
   1123c:	movt	r3, #1
   11240:	bl	10f7c <__printf_chk@plt>
   11244:	cmp	r6, #0
   11248:	mov	r0, #5
   1124c:	mov	r1, #0
   11250:	moveq	r6, r5
   11254:	bl	10fb8 <setlocale@plt>
   11258:	cmp	r0, #0
   1125c:	beq	11294 <putchar_unlocked@plt+0x270>
   11260:	movw	r1, #18872	; 0x49b8
   11264:	mov	r2, #3
   11268:	movt	r1, #1
   1126c:	bl	11000 <strncmp@plt>
   11270:	cmp	r0, #0
   11274:	beq	11294 <putchar_unlocked@plt+0x270>
   11278:	movw	r1, #18876	; 0x49bc
   1127c:	mov	r0, #0
   11280:	mov	r2, #5
   11284:	movt	r1, #1
   11288:	bl	10e50 <dcgettext@plt>
   1128c:	ldr	r1, [r9]
   11290:	bl	10dcc <fputs_unlocked@plt>
   11294:	movw	r1, #18947	; 0x4a03
   11298:	mov	r0, #0
   1129c:	mov	r2, #5
   112a0:	movt	r1, #1
   112a4:	bl	10e50 <dcgettext@plt>
   112a8:	movw	r2, #18832	; 0x4990
   112ac:	mov	r1, r0
   112b0:	mov	r0, #1
   112b4:	mov	r3, r5
   112b8:	movt	r2, #1
   112bc:	bl	10f7c <__printf_chk@plt>
   112c0:	movw	r1, #18974	; 0x4a1e
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10e50 <dcgettext@plt>
   112d4:	mov	r1, r0
   112d8:	movw	r0, #18742	; 0x4936
   112dc:	movw	r3, #19024	; 0x4a50
   112e0:	cmp	r6, r5
   112e4:	mov	r2, r6
   112e8:	movt	r0, #1
   112ec:	movt	r3, #1
   112f0:	moveq	r3, r0
   112f4:	mov	r0, #1
   112f8:	bl	10f7c <__printf_chk@plt>
   112fc:	mov	r0, r8
   11300:	bl	10f1c <exit@plt>
   11304:	movw	r0, #24896	; 0x6140
   11308:	movw	r1, #18220	; 0x472c
   1130c:	mov	r2, #5
   11310:	movt	r0, #2
   11314:	movt	r1, #1
   11318:	ldr	r5, [r0]
   1131c:	mov	r0, #0
   11320:	bl	10e50 <dcgettext@plt>
   11324:	mov	r2, r0
   11328:	movw	r0, #24936	; 0x6168
   1132c:	mov	r1, #1
   11330:	movt	r0, #2
   11334:	ldr	r3, [r0]
   11338:	mov	r0, r5
   1133c:	bl	10f94 <__fprintf_chk@plt>
   11340:	b	112fc <putchar_unlocked@plt+0x2d8>
   11344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11348:	add	fp, sp, #28
   1134c:	sub	sp, sp, #12
   11350:	mov	sl, r0
   11354:	ldr	r0, [r1]
   11358:	mov	r4, r1
   1135c:	bl	119b8 <putchar_unlocked@plt+0x994>
   11360:	movw	r6, #19024	; 0x4a50
   11364:	mov	r0, #6
   11368:	movt	r6, #1
   1136c:	mov	r1, r6
   11370:	bl	10fb8 <setlocale@plt>
   11374:	movw	r7, #18585	; 0x4899
   11378:	movw	r1, #18557	; 0x487d
   1137c:	movt	r7, #1
   11380:	movt	r1, #1
   11384:	mov	r0, r7
   11388:	bl	10fe8 <bindtextdomain@plt>
   1138c:	mov	r0, r7
   11390:	bl	10e68 <textdomain@plt>
   11394:	movw	r0, #6220	; 0x184c
   11398:	movt	r0, #1
   1139c:	bl	14704 <putchar_unlocked@plt+0x36e0>
   113a0:	movw	r3, #19040	; 0x4a60
   113a4:	mov	r0, #0
   113a8:	mov	r1, r4
   113ac:	mov	r2, r6
   113b0:	movt	r3, #1
   113b4:	str	r0, [sp]
   113b8:	mov	r0, sl
   113bc:	bl	10f04 <getopt_long@plt>
   113c0:	cmn	r0, #1
   113c4:	bne	11554 <putchar_unlocked@plt+0x530>
   113c8:	movw	r8, #24888	; 0x6138
   113cc:	movt	r8, #2
   113d0:	ldr	r0, [r8]
   113d4:	cmp	r0, sl
   113d8:	bne	1147c <putchar_unlocked@plt+0x458>
   113dc:	bl	10f40 <__errno_location@plt>
   113e0:	mov	r7, #0
   113e4:	mov	r5, r0
   113e8:	str	r7, [r0]
   113ec:	bl	10e14 <getuid@plt>
   113f0:	mov	r4, r0
   113f4:	cmn	r0, #1
   113f8:	bne	11408 <putchar_unlocked@plt+0x3e4>
   113fc:	ldr	r6, [r5]
   11400:	cmp	r6, #0
   11404:	bne	115c8 <putchar_unlocked@plt+0x5a4>
   11408:	str	r7, [r5]
   1140c:	bl	10e80 <getegid@plt>
   11410:	mov	r6, r0
   11414:	cmn	r0, #1
   11418:	bne	11428 <putchar_unlocked@plt+0x404>
   1141c:	ldr	r7, [r5]
   11420:	cmp	r7, #0
   11424:	bne	115ec <putchar_unlocked@plt+0x5c8>
   11428:	mov	r0, #0
   1142c:	str	r0, [r5]
   11430:	bl	10f58 <getgid@plt>
   11434:	mov	r2, r0
   11438:	cmn	r0, #1
   1143c:	bne	1144c <putchar_unlocked@plt+0x428>
   11440:	ldr	r5, [r5]
   11444:	cmp	r5, #0
   11448:	bne	11610 <putchar_unlocked@plt+0x5ec>
   1144c:	mov	r0, #32
   11450:	mov	r1, #1
   11454:	mov	r3, r6
   11458:	str	r1, [sp]
   1145c:	str	r0, [sp, #4]
   11460:	mov	r0, #0
   11464:	mov	r1, r4
   11468:	bl	11634 <putchar_unlocked@plt+0x610>
   1146c:	mov	r6, r0
   11470:	mov	r0, #10
   11474:	bl	11024 <putchar_unlocked@plt>
   11478:	b	11548 <putchar_unlocked@plt+0x524>
   1147c:	mov	r6, #1
   11480:	bge	11548 <putchar_unlocked@plt+0x524>
   11484:	movw	r9, #18708	; 0x4914
   11488:	mov	r6, #1
   1148c:	movt	r9, #1
   11490:	ldr	r0, [r4, r0, lsl #2]
   11494:	bl	10de4 <getpwnam@plt>
   11498:	cmp	r0, #0
   1149c:	beq	114f8 <putchar_unlocked@plt+0x4d4>
   114a0:	ldr	r1, [r8]
   114a4:	ldr	r7, [r0, #8]
   114a8:	ldr	r5, [r0, #12]
   114ac:	mov	r0, #1
   114b0:	ldr	r2, [r4, r1, lsl #2]
   114b4:	mov	r1, r9
   114b8:	bl	10f7c <__printf_chk@plt>
   114bc:	ldr	r0, [r8]
   114c0:	mov	r1, #1
   114c4:	mov	r2, r5
   114c8:	mov	r3, r5
   114cc:	ldr	r0, [r4, r0, lsl #2]
   114d0:	str	r1, [sp]
   114d4:	mov	r1, #32
   114d8:	str	r1, [sp, #4]
   114dc:	mov	r1, r7
   114e0:	bl	11634 <putchar_unlocked@plt+0x610>
   114e4:	mov	r5, r0
   114e8:	mov	r0, #10
   114ec:	bl	11024 <putchar_unlocked@plt>
   114f0:	and	r6, r6, r5
   114f4:	b	11534 <putchar_unlocked@plt+0x510>
   114f8:	movw	r1, #18691	; 0x4903
   114fc:	mov	r0, #0
   11500:	mov	r2, #5
   11504:	mov	r6, #0
   11508:	movt	r1, #1
   1150c:	bl	10e50 <dcgettext@plt>
   11510:	mov	r7, r0
   11514:	ldr	r0, [r8]
   11518:	ldr	r0, [r4, r0, lsl #2]
   1151c:	bl	133a4 <putchar_unlocked@plt+0x2380>
   11520:	mov	r3, r0
   11524:	mov	r0, #0
   11528:	mov	r1, #0
   1152c:	mov	r2, r7
   11530:	bl	10ec8 <error@plt>
   11534:	ldr	r0, [r8]
   11538:	add	r0, r0, #1
   1153c:	cmp	r0, sl
   11540:	str	r0, [r8]
   11544:	blt	11490 <putchar_unlocked@plt+0x46c>
   11548:	eor	r0, r6, #1
   1154c:	sub	sp, fp, #28
   11550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11554:	cmn	r0, #3
   11558:	beq	1156c <putchar_unlocked@plt+0x548>
   1155c:	cmn	r0, #2
   11560:	bne	115c0 <putchar_unlocked@plt+0x59c>
   11564:	mov	r0, #0
   11568:	bl	11120 <putchar_unlocked@plt+0xfc>
   1156c:	movw	r0, #24808	; 0x60e8
   11570:	movw	r2, #18611	; 0x48b3
   11574:	mov	r1, #0
   11578:	movw	r7, #18595	; 0x48a3
   1157c:	movt	r0, #2
   11580:	movt	r2, #1
   11584:	str	r1, [sp, #8]
   11588:	movw	r1, #18550	; 0x4876
   1158c:	movt	r7, #1
   11590:	movt	r1, #1
   11594:	ldr	r3, [r0]
   11598:	movw	r0, #24900	; 0x6144
   1159c:	str	r2, [sp, #4]
   115a0:	movw	r2, #18581	; 0x4895
   115a4:	str	r7, [sp]
   115a8:	movt	r0, #2
   115ac:	movt	r2, #1
   115b0:	ldr	r0, [r0]
   115b4:	bl	138a8 <putchar_unlocked@plt+0x2884>
   115b8:	mov	r0, #0
   115bc:	bl	10f1c <exit@plt>
   115c0:	mov	r0, #1
   115c4:	bl	11120 <putchar_unlocked@plt+0xfc>
   115c8:	movw	r1, #18626	; 0x48c2
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	movt	r1, #1
   115d8:	bl	10e50 <dcgettext@plt>
   115dc:	mov	r2, r0
   115e0:	mov	r0, #1
   115e4:	mov	r1, r6
   115e8:	bl	10ec8 <error@plt>
   115ec:	movw	r1, #18646	; 0x48d6
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	10e50 <dcgettext@plt>
   11600:	mov	r2, r0
   11604:	mov	r0, #1
   11608:	mov	r1, r7
   1160c:	bl	10ec8 <error@plt>
   11610:	movw	r1, #18671	; 0x48ef
   11614:	mov	r0, #0
   11618:	mov	r2, #5
   1161c:	movt	r1, #1
   11620:	bl	10e50 <dcgettext@plt>
   11624:	mov	r2, r0
   11628:	mov	r0, #1
   1162c:	mov	r1, r5
   11630:	bl	10ec8 <error@plt>
   11634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11638:	add	fp, sp, #28
   1163c:	sub	sp, sp, #4
   11640:	ldr	r9, [fp, #8]
   11644:	mov	r8, r3
   11648:	mov	r5, r2
   1164c:	mov	r4, r0
   11650:	cmp	r0, #0
   11654:	beq	11674 <putchar_unlocked@plt+0x650>
   11658:	mov	r0, r1
   1165c:	bl	10dfc <getpwuid@plt>
   11660:	cmp	r0, #0
   11664:	mov	r7, r0
   11668:	mov	r6, r0
   1166c:	movwne	r7, #1
   11670:	b	1167c <putchar_unlocked@plt+0x658>
   11674:	mov	r6, #0
   11678:	mov	r7, #1
   1167c:	ldr	sl, [fp, #12]
   11680:	mov	r0, r5
   11684:	mov	r1, r9
   11688:	bl	117a0 <putchar_unlocked@plt+0x77c>
   1168c:	and	r7, r7, r0
   11690:	cmp	r8, r5
   11694:	beq	116b0 <putchar_unlocked@plt+0x68c>
   11698:	mov	r0, sl
   1169c:	bl	11024 <putchar_unlocked@plt>
   116a0:	mov	r0, r8
   116a4:	mov	r1, r9
   116a8:	bl	117a0 <putchar_unlocked@plt+0x77c>
   116ac:	and	r7, r7, r0
   116b0:	cmp	r6, #0
   116b4:	mov	r1, r8
   116b8:	mov	r2, sp
   116bc:	mov	r0, r4
   116c0:	ldrne	r1, [r6, #12]
   116c4:	bl	13e20 <putchar_unlocked@plt+0x2dfc>
   116c8:	cmp	r0, #0
   116cc:	bmi	11724 <putchar_unlocked@plt+0x700>
   116d0:	beq	11718 <putchar_unlocked@plt+0x6f4>
   116d4:	mov	r6, r0
   116d8:	mov	r4, #0
   116dc:	ldr	r0, [sp]
   116e0:	ldr	r0, [r0, r4, lsl #2]
   116e4:	cmp	r0, r5
   116e8:	cmpne	r0, r8
   116ec:	beq	1170c <putchar_unlocked@plt+0x6e8>
   116f0:	mov	r0, sl
   116f4:	bl	11024 <putchar_unlocked@plt>
   116f8:	ldr	r0, [sp]
   116fc:	mov	r1, r9
   11700:	ldr	r0, [r0, r4, lsl #2]
   11704:	bl	117a0 <putchar_unlocked@plt+0x77c>
   11708:	and	r7, r7, r0
   1170c:	add	r4, r4, #1
   11710:	cmp	r6, r4
   11714:	bne	116dc <putchar_unlocked@plt+0x6b8>
   11718:	ldr	r0, [sp]
   1171c:	bl	11934 <putchar_unlocked@plt+0x910>
   11720:	b	11794 <putchar_unlocked@plt+0x770>
   11724:	bl	10f40 <__errno_location@plt>
   11728:	ldr	r6, [r0]
   1172c:	mov	r7, #0
   11730:	cmp	r4, #0
   11734:	beq	11770 <putchar_unlocked@plt+0x74c>
   11738:	movw	r1, #19144	; 0x4ac8
   1173c:	mov	r0, #0
   11740:	mov	r2, #5
   11744:	movt	r1, #1
   11748:	bl	10e50 <dcgettext@plt>
   1174c:	mov	r5, r0
   11750:	mov	r0, r4
   11754:	bl	133a4 <putchar_unlocked@plt+0x2380>
   11758:	mov	r3, r0
   1175c:	mov	r0, #0
   11760:	mov	r1, r6
   11764:	mov	r2, r5
   11768:	bl	10ec8 <error@plt>
   1176c:	b	11794 <putchar_unlocked@plt+0x770>
   11770:	movw	r1, #19177	; 0x4ae9
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	10e50 <dcgettext@plt>
   11784:	mov	r2, r0
   11788:	mov	r0, #0
   1178c:	mov	r1, r6
   11790:	bl	10ec8 <error@plt>
   11794:	and	r0, r7, #1
   11798:	sub	sp, fp, #28
   1179c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117a0:	push	{r4, r5, fp, lr}
   117a4:	add	fp, sp, #8
   117a8:	mov	r5, r0
   117ac:	mov	r4, #1
   117b0:	cmp	r1, #0
   117b4:	beq	11800 <putchar_unlocked@plt+0x7dc>
   117b8:	mov	r0, r5
   117bc:	bl	11018 <getgrgid@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	117d4 <putchar_unlocked@plt+0x7b0>
   117c8:	ldr	r0, [r0]
   117cc:	mov	r4, #1
   117d0:	b	11814 <putchar_unlocked@plt+0x7f0>
   117d4:	movw	r1, #19222	; 0x4b16
   117d8:	mov	r0, #0
   117dc:	mov	r2, #5
   117e0:	mov	r4, #0
   117e4:	movt	r1, #1
   117e8:	bl	10e50 <dcgettext@plt>
   117ec:	mov	r2, r0
   117f0:	mov	r0, #0
   117f4:	mov	r1, #0
   117f8:	mov	r3, r5
   117fc:	bl	10ec8 <error@plt>
   11800:	movw	r2, #24905	; 0x6149
   11804:	mov	r0, r5
   11808:	mov	r1, #0
   1180c:	movt	r2, #2
   11810:	bl	1195c <putchar_unlocked@plt+0x938>
   11814:	movw	r1, #24900	; 0x6144
   11818:	movt	r1, #2
   1181c:	ldr	r1, [r1]
   11820:	bl	10dcc <fputs_unlocked@plt>
   11824:	mov	r0, r4
   11828:	pop	{r4, r5, fp, pc}
   1182c:	movw	r1, #24928	; 0x6160
   11830:	movt	r1, #2
   11834:	str	r0, [r1]
   11838:	bx	lr
   1183c:	movw	r1, #24932	; 0x6164
   11840:	movt	r1, #2
   11844:	strb	r0, [r1]
   11848:	bx	lr
   1184c:	push	{r4, r5, r6, sl, fp, lr}
   11850:	add	fp, sp, #16
   11854:	sub	sp, sp, #8
   11858:	movw	r0, #24900	; 0x6144
   1185c:	movt	r0, #2
   11860:	ldr	r0, [r0]
   11864:	bl	13f28 <putchar_unlocked@plt+0x2f04>
   11868:	cmp	r0, #0
   1186c:	beq	11894 <putchar_unlocked@plt+0x870>
   11870:	movw	r0, #24932	; 0x6164
   11874:	movt	r0, #2
   11878:	ldrb	r0, [r0]
   1187c:	cmp	r0, #0
   11880:	beq	118b4 <putchar_unlocked@plt+0x890>
   11884:	bl	10f40 <__errno_location@plt>
   11888:	ldr	r0, [r0]
   1188c:	cmp	r0, #32
   11890:	bne	118b4 <putchar_unlocked@plt+0x890>
   11894:	movw	r0, #24896	; 0x6140
   11898:	movt	r0, #2
   1189c:	ldr	r0, [r0]
   118a0:	bl	13f28 <putchar_unlocked@plt+0x2f04>
   118a4:	cmp	r0, #0
   118a8:	subeq	sp, fp, #16
   118ac:	popeq	{r4, r5, r6, sl, fp, pc}
   118b0:	b	11924 <putchar_unlocked@plt+0x900>
   118b4:	movw	r1, #19271	; 0x4b47
   118b8:	mov	r0, #0
   118bc:	mov	r2, #5
   118c0:	movt	r1, #1
   118c4:	bl	10e50 <dcgettext@plt>
   118c8:	mov	r4, r0
   118cc:	movw	r0, #24928	; 0x6160
   118d0:	movt	r0, #2
   118d4:	ldr	r6, [r0]
   118d8:	bl	10f40 <__errno_location@plt>
   118dc:	ldr	r5, [r0]
   118e0:	cmp	r6, #0
   118e4:	bne	11900 <putchar_unlocked@plt+0x8dc>
   118e8:	movw	r2, #19287	; 0x4b57
   118ec:	mov	r0, #0
   118f0:	mov	r1, r5
   118f4:	mov	r3, r4
   118f8:	movt	r2, #1
   118fc:	b	11920 <putchar_unlocked@plt+0x8fc>
   11900:	mov	r0, r6
   11904:	bl	13164 <putchar_unlocked@plt+0x2140>
   11908:	movw	r2, #19283	; 0x4b53
   1190c:	mov	r3, r0
   11910:	str	r4, [sp]
   11914:	mov	r0, #0
   11918:	mov	r1, r5
   1191c:	movt	r2, #1
   11920:	bl	10ec8 <error@plt>
   11924:	movw	r0, #24812	; 0x60ec
   11928:	movt	r0, #2
   1192c:	ldr	r0, [r0]
   11930:	bl	10e2c <_exit@plt>
   11934:	push	{r4, r5, r6, sl, fp, lr}
   11938:	add	fp, sp, #16
   1193c:	mov	r4, r0
   11940:	bl	10f40 <__errno_location@plt>
   11944:	ldr	r6, [r0]
   11948:	mov	r5, r0
   1194c:	mov	r0, r4
   11950:	bl	10e20 <free@plt>
   11954:	str	r6, [r5]
   11958:	pop	{r4, r5, r6, sl, fp, pc}
   1195c:	push	{r4, r5, r6, sl, fp, lr}
   11960:	add	fp, sp, #16
   11964:	mov	r5, r0
   11968:	mov	r0, #0
   1196c:	mov	r4, r1
   11970:	add	r6, r2, #19
   11974:	strb	r0, [r2, #20]
   11978:	mov	r0, r5
   1197c:	mov	r1, r4
   11980:	mov	r2, #10
   11984:	mov	r3, #0
   11988:	bl	1452c <putchar_unlocked@plt+0x3508>
   1198c:	add	r2, r0, r0, lsl #2
   11990:	sub	r2, r5, r2, lsl #1
   11994:	orr	r2, r2, #48	; 0x30
   11998:	strb	r2, [r6], #-1
   1199c:	rsbs	r2, r5, #9
   119a0:	mov	r5, r0
   119a4:	rscs	r2, r4, #0
   119a8:	mov	r4, r1
   119ac:	bcc	11978 <putchar_unlocked@plt+0x954>
   119b0:	add	r0, r6, #1
   119b4:	pop	{r4, r5, r6, sl, fp, pc}
   119b8:	push	{r4, r5, fp, lr}
   119bc:	add	fp, sp, #8
   119c0:	cmp	r0, #0
   119c4:	beq	11a58 <putchar_unlocked@plt+0xa34>
   119c8:	mov	r1, #47	; 0x2f
   119cc:	mov	r4, r0
   119d0:	bl	10fc4 <strrchr@plt>
   119d4:	cmp	r0, #0
   119d8:	mov	r5, r4
   119dc:	addne	r5, r0, #1
   119e0:	sub	r0, r5, r4
   119e4:	cmp	r0, #7
   119e8:	blt	11a3c <putchar_unlocked@plt+0xa18>
   119ec:	movw	r1, #19346	; 0x4b92
   119f0:	sub	r0, r5, #7
   119f4:	mov	r2, #7
   119f8:	movt	r1, #1
   119fc:	bl	11000 <strncmp@plt>
   11a00:	cmp	r0, #0
   11a04:	bne	11a3c <putchar_unlocked@plt+0xa18>
   11a08:	movw	r1, #19354	; 0x4b9a
   11a0c:	mov	r0, r5
   11a10:	mov	r2, #3
   11a14:	movt	r1, #1
   11a18:	bl	11000 <strncmp@plt>
   11a1c:	cmp	r0, #0
   11a20:	beq	11a2c <putchar_unlocked@plt+0xa08>
   11a24:	mov	r4, r5
   11a28:	b	11a3c <putchar_unlocked@plt+0xa18>
   11a2c:	movw	r0, #24880	; 0x6130
   11a30:	add	r4, r5, #3
   11a34:	movt	r0, #2
   11a38:	str	r4, [r0]
   11a3c:	movw	r0, #24884	; 0x6134
   11a40:	movt	r0, #2
   11a44:	str	r4, [r0]
   11a48:	movw	r0, #24936	; 0x6168
   11a4c:	movt	r0, #2
   11a50:	str	r4, [r0]
   11a54:	pop	{r4, r5, fp, pc}
   11a58:	movw	r0, #24896	; 0x6140
   11a5c:	movt	r0, #2
   11a60:	ldr	r1, [r0]
   11a64:	movw	r0, #19290	; 0x4b5a
   11a68:	movt	r0, #1
   11a6c:	bl	10ff4 <fputs@plt>
   11a70:	bl	1100c <abort@plt>
   11a74:	push	{r4, r5, r6, sl, fp, lr}
   11a78:	add	fp, sp, #16
   11a7c:	mov	r4, r0
   11a80:	movw	r0, #24944	; 0x6170
   11a84:	movt	r0, #2
   11a88:	cmp	r4, #0
   11a8c:	moveq	r4, r0
   11a90:	bl	10f40 <__errno_location@plt>
   11a94:	ldr	r6, [r0]
   11a98:	mov	r5, r0
   11a9c:	mov	r0, r4
   11aa0:	mov	r1, #48	; 0x30
   11aa4:	bl	13d00 <putchar_unlocked@plt+0x2cdc>
   11aa8:	str	r6, [r5]
   11aac:	pop	{r4, r5, r6, sl, fp, pc}
   11ab0:	movw	r1, #24944	; 0x6170
   11ab4:	cmp	r0, #0
   11ab8:	movt	r1, #2
   11abc:	movne	r1, r0
   11ac0:	ldr	r0, [r1]
   11ac4:	bx	lr
   11ac8:	movw	r2, #24944	; 0x6170
   11acc:	cmp	r0, #0
   11ad0:	movt	r2, #2
   11ad4:	movne	r2, r0
   11ad8:	str	r1, [r2]
   11adc:	bx	lr
   11ae0:	movw	r3, #24944	; 0x6170
   11ae4:	cmp	r0, #0
   11ae8:	and	r2, r2, #1
   11aec:	movt	r3, #2
   11af0:	movne	r3, r0
   11af4:	ubfx	r0, r1, #5, #3
   11af8:	and	r1, r1, #31
   11afc:	add	ip, r3, r0, lsl #2
   11b00:	mov	r0, #1
   11b04:	ldr	r3, [ip, #8]
   11b08:	and	r0, r0, r3, lsr r1
   11b0c:	eor	r2, r0, r2
   11b10:	eor	r1, r3, r2, lsl r1
   11b14:	str	r1, [ip, #8]
   11b18:	bx	lr
   11b1c:	movw	r2, #24944	; 0x6170
   11b20:	cmp	r0, #0
   11b24:	movt	r2, #2
   11b28:	movne	r2, r0
   11b2c:	ldr	r0, [r2, #4]
   11b30:	str	r1, [r2, #4]
   11b34:	bx	lr
   11b38:	push	{fp, lr}
   11b3c:	mov	fp, sp
   11b40:	movw	r3, #24944	; 0x6170
   11b44:	cmp	r0, #0
   11b48:	movt	r3, #2
   11b4c:	movne	r3, r0
   11b50:	cmp	r1, #0
   11b54:	mov	r0, #10
   11b58:	cmpne	r2, #0
   11b5c:	str	r0, [r3]
   11b60:	bne	11b68 <putchar_unlocked@plt+0xb44>
   11b64:	bl	1100c <abort@plt>
   11b68:	str	r1, [r3, #40]	; 0x28
   11b6c:	str	r2, [r3, #44]	; 0x2c
   11b70:	pop	{fp, pc}
   11b74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b78:	add	fp, sp, #28
   11b7c:	sub	sp, sp, #20
   11b80:	mov	r7, r0
   11b84:	ldr	r0, [fp, #8]
   11b88:	movw	r5, #24944	; 0x6170
   11b8c:	mov	r8, r3
   11b90:	mov	r9, r2
   11b94:	mov	sl, r1
   11b98:	movt	r5, #2
   11b9c:	cmp	r0, #0
   11ba0:	movne	r5, r0
   11ba4:	bl	10f40 <__errno_location@plt>
   11ba8:	ldr	r2, [r5, #40]	; 0x28
   11bac:	ldr	r3, [r5, #44]	; 0x2c
   11bb0:	mov	r4, r0
   11bb4:	ldm	r5, {r0, r1}
   11bb8:	add	r5, r5, #8
   11bbc:	ldr	r6, [r4]
   11bc0:	stm	sp, {r0, r1, r5}
   11bc4:	mov	r0, r7
   11bc8:	mov	r1, sl
   11bcc:	str	r2, [sp, #12]
   11bd0:	str	r3, [sp, #16]
   11bd4:	mov	r2, r9
   11bd8:	mov	r3, r8
   11bdc:	bl	11bec <putchar_unlocked@plt+0xbc8>
   11be0:	str	r6, [r4]
   11be4:	sub	sp, fp, #28
   11be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf0:	add	fp, sp, #28
   11bf4:	sub	sp, sp, #156	; 0x9c
   11bf8:	mov	r5, r0
   11bfc:	add	r0, r2, #1
   11c00:	mov	r6, r1
   11c04:	mov	sl, r3
   11c08:	str	r2, [fp, #-80]	; 0xffffffb0
   11c0c:	str	r0, [sp, #72]	; 0x48
   11c10:	ldr	r0, [fp, #12]
   11c14:	and	r1, r0, #1
   11c18:	str	r1, [sp, #32]
   11c1c:	and	r1, r0, #4
   11c20:	str	r1, [sp, #28]
   11c24:	ubfx	r9, r0, #1, #1
   11c28:	bl	10e98 <__ctype_get_mb_cur_max@plt>
   11c2c:	str	r0, [sp, #40]	; 0x28
   11c30:	ldr	r0, [fp, #24]
   11c34:	ldr	r7, [fp, #8]
   11c38:	mov	r1, #0
   11c3c:	mov	lr, #0
   11c40:	str	r5, [fp, #-84]	; 0xffffffac
   11c44:	str	r1, [sp, #60]	; 0x3c
   11c48:	mov	r1, #1
   11c4c:	str	r1, [fp, #-48]	; 0xffffffd0
   11c50:	str	r0, [sp, #80]	; 0x50
   11c54:	ldr	r0, [fp, #20]
   11c58:	str	r0, [sp, #76]	; 0x4c
   11c5c:	mov	r0, #0
   11c60:	str	r0, [sp, #56]	; 0x38
   11c64:	mov	r0, #0
   11c68:	str	r0, [fp, #-88]	; 0xffffffa8
   11c6c:	mov	r0, #0
   11c70:	str	r0, [fp, #-72]	; 0xffffffb8
   11c74:	mov	r0, #0
   11c78:	cmp	r7, #10
   11c7c:	bhi	12c58 <putchar_unlocked@plt+0x1c34>
   11c80:	add	r1, pc, #24
   11c84:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11c88:	mov	ip, r6
   11c8c:	mov	r8, #0
   11c90:	mov	r2, #1
   11c94:	mov	r6, #0
   11c98:	mov	r3, sl
   11c9c:	ldr	pc, [r1, r7, lsl #2]
   11ca0:	andeq	r1, r1, ip, lsl #27
   11ca4:	andeq	r1, r1, r0, ror #27
   11ca8:	andeq	r1, r1, r0, lsr #27
   11cac:	andeq	r1, r1, r4, lsl #27
   11cb0:	ldrdeq	r1, [r1], -r4
   11cb4:	andeq	r1, r1, r8, lsl #28
   11cb8:			; <UNDEFINED> instruction: 0x00011db0
   11cbc:	andeq	r1, r1, ip, lsl #29
   11cc0:	andeq	r1, r1, ip, asr #25
   11cc4:	andeq	r1, r1, ip, asr #25
   11cc8:	andeq	r1, r1, ip, lsl #26
   11ccc:	movw	r0, #19438	; 0x4bee
   11cd0:	mov	r1, r7
   11cd4:	mov	r6, r5
   11cd8:	mov	r4, ip
   11cdc:	mov	r5, lr
   11ce0:	movt	r0, #1
   11ce4:	bl	133bc <putchar_unlocked@plt+0x2398>
   11ce8:	str	r0, [sp, #76]	; 0x4c
   11cec:	movw	r0, #19440	; 0x4bf0
   11cf0:	mov	r1, r7
   11cf4:	movt	r0, #1
   11cf8:	bl	133bc <putchar_unlocked@plt+0x2398>
   11cfc:	mov	lr, r5
   11d00:	mov	r5, r6
   11d04:	mov	ip, r4
   11d08:	str	r0, [sp, #80]	; 0x50
   11d0c:	mov	r8, #0
   11d10:	tst	r9, #1
   11d14:	str	lr, [sp, #44]	; 0x2c
   11d18:	bne	11d50 <putchar_unlocked@plt+0xd2c>
   11d1c:	ldr	r0, [sp, #76]	; 0x4c
   11d20:	ldrb	r0, [r0]
   11d24:	cmp	r0, #0
   11d28:	beq	11d50 <putchar_unlocked@plt+0xd2c>
   11d2c:	ldr	r1, [sp, #76]	; 0x4c
   11d30:	mov	r8, #0
   11d34:	add	r1, r1, #1
   11d38:	cmp	r8, ip
   11d3c:	strbcc	r0, [r5, r8]
   11d40:	ldrb	r0, [r1, r8]
   11d44:	add	r8, r8, #1
   11d48:	cmp	r0, #0
   11d4c:	bne	11d38 <putchar_unlocked@plt+0xd14>
   11d50:	ldr	r6, [sp, #80]	; 0x50
   11d54:	mov	r4, ip
   11d58:	mov	r0, r6
   11d5c:	bl	10f34 <strlen@plt>
   11d60:	mov	ip, r4
   11d64:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11d68:	ldr	lr, [sp, #44]	; 0x2c
   11d6c:	str	r6, [fp, #-88]	; 0xffffffa8
   11d70:	str	r0, [fp, #-72]	; 0xffffffb8
   11d74:	mov	r2, #1
   11d78:	mov	r6, r9
   11d7c:	mov	r3, sl
   11d80:	b	11e8c <putchar_unlocked@plt+0xe68>
   11d84:	mov	r0, #1
   11d88:	b	11de0 <putchar_unlocked@plt+0xdbc>
   11d8c:	mov	r7, #0
   11d90:	mov	r8, #0
   11d94:	mov	r2, r0
   11d98:	mov	r6, #0
   11d9c:	b	11e8c <putchar_unlocked@plt+0xe68>
   11da0:	tst	r9, #1
   11da4:	bne	11de0 <putchar_unlocked@plt+0xdbc>
   11da8:	mov	r2, r0
   11dac:	b	11e38 <putchar_unlocked@plt+0xe14>
   11db0:	mov	r0, #1
   11db4:	mov	r8, #0
   11db8:	mov	r7, #5
   11dbc:	mov	r2, #1
   11dc0:	str	r0, [fp, #-72]	; 0xffffffb8
   11dc4:	movw	r0, #19436	; 0x4bec
   11dc8:	movt	r0, #1
   11dcc:	str	r0, [fp, #-88]	; 0xffffffa8
   11dd0:	b	11e00 <putchar_unlocked@plt+0xddc>
   11dd4:	mov	r2, #1
   11dd8:	tst	r9, #1
   11ddc:	beq	11e38 <putchar_unlocked@plt+0xe14>
   11de0:	mov	r1, #1
   11de4:	mov	r8, #0
   11de8:	mov	r7, #2
   11dec:	mov	r2, r0
   11df0:	str	r1, [fp, #-72]	; 0xffffffb8
   11df4:	movw	r1, #19440	; 0x4bf0
   11df8:	movt	r1, #1
   11dfc:	str	r1, [fp, #-88]	; 0xffffffa8
   11e00:	mov	r6, #1
   11e04:	b	11e8c <putchar_unlocked@plt+0xe68>
   11e08:	tst	r9, #1
   11e0c:	beq	11e5c <putchar_unlocked@plt+0xe38>
   11e10:	mov	r0, #1
   11e14:	mov	r8, #0
   11e18:	mov	r2, #1
   11e1c:	mov	r6, #1
   11e20:	mov	r7, #5
   11e24:	str	r0, [fp, #-72]	; 0xffffffb8
   11e28:	movw	r0, #19436	; 0x4bec
   11e2c:	movt	r0, #1
   11e30:	str	r0, [fp, #-88]	; 0xffffffa8
   11e34:	b	11e8c <putchar_unlocked@plt+0xe68>
   11e38:	cmp	ip, #0
   11e3c:	mov	r8, #1
   11e40:	mov	r6, #0
   11e44:	mov	r7, #2
   11e48:	movne	r0, #39	; 0x27
   11e4c:	strbne	r0, [r5]
   11e50:	movw	r0, #19440	; 0x4bf0
   11e54:	movt	r0, #1
   11e58:	b	11e80 <putchar_unlocked@plt+0xe5c>
   11e5c:	cmp	ip, #0
   11e60:	mov	r8, #1
   11e64:	mov	r2, #1
   11e68:	mov	r7, #5
   11e6c:	mov	r6, #0
   11e70:	movne	r0, #34	; 0x22
   11e74:	strbne	r0, [r5]
   11e78:	movw	r0, #19436	; 0x4bec
   11e7c:	movt	r0, #1
   11e80:	str	r0, [fp, #-88]	; 0xffffffa8
   11e84:	mov	r0, #1
   11e88:	str	r0, [fp, #-72]	; 0xffffffb8
   11e8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11e90:	str	r7, [fp, #-68]	; 0xffffffbc
   11e94:	str	r6, [fp, #-76]	; 0xffffffb4
   11e98:	str	r2, [sp, #84]	; 0x54
   11e9c:	cmp	r0, #0
   11ea0:	movwne	r0, #1
   11ea4:	and	r1, r0, r6
   11ea8:	and	r1, r2, r1
   11eac:	str	r1, [sp, #48]	; 0x30
   11eb0:	sub	r1, r7, #2
   11eb4:	clz	r1, r1
   11eb8:	lsr	r1, r1, #5
   11ebc:	and	r1, r1, r6
   11ec0:	str	r1, [sp, #64]	; 0x40
   11ec4:	subs	r1, r7, #2
   11ec8:	eor	r7, r6, #1
   11ecc:	movwne	r1, #1
   11ed0:	str	r7, [sp, #92]	; 0x5c
   11ed4:	orr	r7, r1, r7
   11ed8:	and	r1, r1, r2
   11edc:	and	r0, r0, r1
   11ee0:	str	r7, [sp, #68]	; 0x44
   11ee4:	mov	r7, #0
   11ee8:	str	r0, [fp, #-60]	; 0xffffffc4
   11eec:	orr	r0, r1, r6
   11ef0:	ldr	r1, [fp, #16]
   11ef4:	eor	r0, r0, #1
   11ef8:	clz	r1, r1
   11efc:	lsr	r1, r1, #5
   11f00:	orr	r0, r1, r0
   11f04:	str	r0, [fp, #-64]	; 0xffffffc0
   11f08:	eor	r0, r2, #1
   11f0c:	str	r0, [sp, #52]	; 0x34
   11f10:	cmn	r3, #1
   11f14:	beq	11f24 <putchar_unlocked@plt+0xf00>
   11f18:	cmp	r7, r3
   11f1c:	bne	11f30 <putchar_unlocked@plt+0xf0c>
   11f20:	b	12a8c <putchar_unlocked@plt+0x1a68>
   11f24:	ldrb	r0, [r4, r7]
   11f28:	cmp	r0, #0
   11f2c:	beq	12a94 <putchar_unlocked@plt+0x1a70>
   11f30:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11f34:	cmp	r0, #0
   11f38:	beq	11f80 <putchar_unlocked@plt+0xf5c>
   11f3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f40:	add	r5, r7, r0
   11f44:	cmp	r0, #2
   11f48:	bcc	11f94 <putchar_unlocked@plt+0xf70>
   11f4c:	mov	r0, #0
   11f50:	cmn	r3, #1
   11f54:	str	r0, [fp, #-56]	; 0xffffffc8
   11f58:	bne	11f9c <putchar_unlocked@plt+0xf78>
   11f5c:	mov	r0, r4
   11f60:	mov	r4, ip
   11f64:	mov	r6, lr
   11f68:	bl	10f34 <strlen@plt>
   11f6c:	mov	ip, r4
   11f70:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11f74:	mov	lr, r6
   11f78:	mov	r3, r0
   11f7c:	b	11f9c <putchar_unlocked@plt+0xf78>
   11f80:	mov	r0, #0
   11f84:	mov	sl, r3
   11f88:	str	r0, [fp, #-56]	; 0xffffffc8
   11f8c:	mov	r0, #0
   11f90:	b	12008 <putchar_unlocked@plt+0xfe4>
   11f94:	mov	r0, #0
   11f98:	str	r0, [fp, #-56]	; 0xffffffc8
   11f9c:	cmp	r5, r3
   11fa0:	bls	11fb4 <putchar_unlocked@plt+0xf90>
   11fa4:	ldr	r5, [fp, #-84]	; 0xffffffac
   11fa8:	mov	r0, #0
   11fac:	mov	sl, r3
   11fb0:	b	12008 <putchar_unlocked@plt+0xfe4>
   11fb4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11fb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11fbc:	add	r0, r4, r7
   11fc0:	mov	r5, lr
   11fc4:	mov	r6, ip
   11fc8:	mov	sl, r3
   11fcc:	bl	10f28 <bcmp@plt>
   11fd0:	ldr	r2, [sp, #92]	; 0x5c
   11fd4:	cmp	r0, #0
   11fd8:	ldr	r3, [fp, #-84]	; 0xffffffac
   11fdc:	mov	r1, r0
   11fe0:	movwne	r1, #1
   11fe4:	orr	r1, r1, r2
   11fe8:	tst	r1, #1
   11fec:	beq	12b18 <putchar_unlocked@plt+0x1af4>
   11ff0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   11ff4:	clz	r0, r0
   11ff8:	mov	lr, r5
   11ffc:	mov	ip, r6
   12000:	mov	r5, r3
   12004:	lsr	r0, r0, #5
   12008:	str	r0, [fp, #-52]	; 0xffffffcc
   1200c:	ldrb	r6, [r4, r7]
   12010:	cmp	r6, #126	; 0x7e
   12014:	bhi	1253c <putchar_unlocked@plt+0x1518>
   12018:	add	r3, pc, #16
   1201c:	mov	r9, #1
   12020:	mov	r2, #110	; 0x6e
   12024:	mov	r0, #97	; 0x61
   12028:	mov	r1, #0
   1202c:	ldr	pc, [r3, r6, lsl #2]
   12030:	andeq	r2, r1, r0, lsr #7
   12034:	andeq	r2, r1, ip, lsr r5
   12038:	andeq	r2, r1, ip, lsr r5
   1203c:	andeq	r2, r1, ip, lsr r5
   12040:	andeq	r2, r1, ip, lsr r5
   12044:	andeq	r2, r1, ip, lsr r5
   12048:	andeq	r2, r1, ip, lsr r5
   1204c:			; <UNDEFINED> instruction: 0x000125bc
   12050:	andeq	r2, r1, r0, lsl #7
   12054:	andeq	r2, r1, r8, ror r3
   12058:	andeq	r2, r1, ip, lsl #7
   1205c:	andeq	r2, r1, r4, lsr #9
   12060:	andeq	r2, r1, r0, ror r3
   12064:	andeq	r2, r1, r8, lsl #7
   12068:	andeq	r2, r1, ip, lsr r5
   1206c:	andeq	r2, r1, ip, lsr r5
   12070:	andeq	r2, r1, ip, lsr r5
   12074:	andeq	r2, r1, ip, lsr r5
   12078:	andeq	r2, r1, ip, lsr r5
   1207c:	andeq	r2, r1, ip, lsr r5
   12080:	andeq	r2, r1, ip, lsr r5
   12084:	andeq	r2, r1, ip, lsr r5
   12088:	andeq	r2, r1, ip, lsr r5
   1208c:	andeq	r2, r1, ip, lsr r5
   12090:	andeq	r2, r1, ip, lsr r5
   12094:	andeq	r2, r1, ip, lsr r5
   12098:	andeq	r2, r1, ip, lsr r5
   1209c:	andeq	r2, r1, ip, lsr r5
   120a0:	andeq	r2, r1, ip, lsr r5
   120a4:	andeq	r2, r1, ip, lsr r5
   120a8:	andeq	r2, r1, ip, lsr r5
   120ac:	andeq	r2, r1, ip, lsr r5
   120b0:	andeq	r2, r1, r0, lsr #6
   120b4:	andeq	r2, r1, r4, lsr #6
   120b8:	andeq	r2, r1, r4, lsr #6
   120bc:	andeq	r2, r1, r8, lsl #6
   120c0:	andeq	r2, r1, r4, lsr #6
   120c4:	andeq	r2, r1, ip, lsr #4
   120c8:	andeq	r2, r1, r4, lsr #6
   120cc:	andeq	r2, r1, ip, lsr #9
   120d0:	andeq	r2, r1, r4, lsr #6
   120d4:	andeq	r2, r1, r4, lsr #6
   120d8:	andeq	r2, r1, r4, lsr #6
   120dc:	andeq	r2, r1, ip, lsr #4
   120e0:	andeq	r2, r1, ip, lsr #4
   120e4:	andeq	r2, r1, ip, lsr #4
   120e8:	andeq	r2, r1, ip, lsr #4
   120ec:	andeq	r2, r1, ip, lsr #4
   120f0:	andeq	r2, r1, ip, lsr #4
   120f4:	andeq	r2, r1, ip, lsr #4
   120f8:	andeq	r2, r1, ip, lsr #4
   120fc:	andeq	r2, r1, ip, lsr #4
   12100:	andeq	r2, r1, ip, lsr #4
   12104:	andeq	r2, r1, ip, lsr #4
   12108:	andeq	r2, r1, ip, lsr #4
   1210c:	andeq	r2, r1, ip, lsr #4
   12110:	andeq	r2, r1, ip, lsr #4
   12114:	andeq	r2, r1, ip, lsr #4
   12118:	andeq	r2, r1, ip, lsr #4
   1211c:	andeq	r2, r1, r4, lsr #6
   12120:	andeq	r2, r1, r4, lsr #6
   12124:	andeq	r2, r1, r4, lsr #6
   12128:	andeq	r2, r1, r4, lsr #6
   1212c:	andeq	r2, r1, r8, ror r4
   12130:	andeq	r2, r1, ip, lsr r5
   12134:	andeq	r2, r1, ip, lsr #4
   12138:	andeq	r2, r1, ip, lsr #4
   1213c:	andeq	r2, r1, ip, lsr #4
   12140:	andeq	r2, r1, ip, lsr #4
   12144:	andeq	r2, r1, ip, lsr #4
   12148:	andeq	r2, r1, ip, lsr #4
   1214c:	andeq	r2, r1, ip, lsr #4
   12150:	andeq	r2, r1, ip, lsr #4
   12154:	andeq	r2, r1, ip, lsr #4
   12158:	andeq	r2, r1, ip, lsr #4
   1215c:	andeq	r2, r1, ip, lsr #4
   12160:	andeq	r2, r1, ip, lsr #4
   12164:	andeq	r2, r1, ip, lsr #4
   12168:	andeq	r2, r1, ip, lsr #4
   1216c:	andeq	r2, r1, ip, lsr #4
   12170:	andeq	r2, r1, ip, lsr #4
   12174:	andeq	r2, r1, ip, lsr #4
   12178:	andeq	r2, r1, ip, lsr #4
   1217c:	andeq	r2, r1, ip, lsr #4
   12180:	andeq	r2, r1, ip, lsr #4
   12184:	andeq	r2, r1, ip, lsr #4
   12188:	andeq	r2, r1, ip, lsr #4
   1218c:	andeq	r2, r1, ip, lsr #4
   12190:	andeq	r2, r1, ip, lsr #4
   12194:	andeq	r2, r1, ip, lsr #4
   12198:	andeq	r2, r1, ip, lsr #4
   1219c:	andeq	r2, r1, r4, lsr #6
   121a0:	andeq	r2, r1, ip, asr #6
   121a4:	andeq	r2, r1, ip, lsr #4
   121a8:	andeq	r2, r1, r4, lsr #6
   121ac:	andeq	r2, r1, ip, lsr #4
   121b0:	andeq	r2, r1, r4, lsr #6
   121b4:	andeq	r2, r1, ip, lsr #4
   121b8:	andeq	r2, r1, ip, lsr #4
   121bc:	andeq	r2, r1, ip, lsr #4
   121c0:	andeq	r2, r1, ip, lsr #4
   121c4:	andeq	r2, r1, ip, lsr #4
   121c8:	andeq	r2, r1, ip, lsr #4
   121cc:	andeq	r2, r1, ip, lsr #4
   121d0:	andeq	r2, r1, ip, lsr #4
   121d4:	andeq	r2, r1, ip, lsr #4
   121d8:	andeq	r2, r1, ip, lsr #4
   121dc:	andeq	r2, r1, ip, lsr #4
   121e0:	andeq	r2, r1, ip, lsr #4
   121e4:	andeq	r2, r1, ip, lsr #4
   121e8:	andeq	r2, r1, ip, lsr #4
   121ec:	andeq	r2, r1, ip, lsr #4
   121f0:	andeq	r2, r1, ip, lsr #4
   121f4:	andeq	r2, r1, ip, lsr #4
   121f8:	andeq	r2, r1, ip, lsr #4
   121fc:	andeq	r2, r1, ip, lsr #4
   12200:	andeq	r2, r1, ip, lsr #4
   12204:	andeq	r2, r1, ip, lsr #4
   12208:	andeq	r2, r1, ip, lsr #4
   1220c:	andeq	r2, r1, ip, lsr #4
   12210:	andeq	r2, r1, ip, lsr #4
   12214:	andeq	r2, r1, ip, lsr #4
   12218:	andeq	r2, r1, ip, lsr #4
   1221c:	andeq	r2, r1, r0, ror #5
   12220:	andeq	r2, r1, r4, lsr #6
   12224:	andeq	r2, r1, r0, ror #5
   12228:	andeq	r2, r1, r8, lsl #6
   1222c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12230:	tst	r0, #1
   12234:	bne	12260 <putchar_unlocked@plt+0x123c>
   12238:	ldr	r1, [fp, #16]
   1223c:	ubfx	r0, r6, #5, #3
   12240:	mov	r2, #1
   12244:	ldr	r0, [r1, r0, lsl #2]
   12248:	and	r1, r6, #31
   1224c:	tst	r0, r2, lsl r1
   12250:	beq	12260 <putchar_unlocked@plt+0x123c>
   12254:	mov	r0, r6
   12258:	mov	r1, r9
   1225c:	b	12274 <putchar_unlocked@plt+0x1250>
   12260:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12264:	mov	r1, r9
   12268:	cmp	r0, #0
   1226c:	mov	r0, r6
   12270:	beq	129c0 <putchar_unlocked@plt+0x199c>
   12274:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12278:	tst	r2, #1
   1227c:	bne	12b5c <putchar_unlocked@plt+0x1b38>
   12280:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12284:	subs	r2, r2, #2
   12288:	movwne	r2, #1
   1228c:	orr	r2, r2, lr
   12290:	tst	r2, #1
   12294:	bne	122cc <putchar_unlocked@plt+0x12a8>
   12298:	cmp	r8, ip
   1229c:	mov	lr, #1
   122a0:	movcc	r2, #39	; 0x27
   122a4:	strbcc	r2, [r5, r8]
   122a8:	add	r2, r8, #1
   122ac:	cmp	r2, ip
   122b0:	movcc	r3, #36	; 0x24
   122b4:	strbcc	r3, [r5, r2]
   122b8:	add	r2, r8, #2
   122bc:	add	r8, r8, #3
   122c0:	cmp	r2, ip
   122c4:	movcc	r3, #39	; 0x27
   122c8:	strbcc	r3, [r5, r2]
   122cc:	cmp	r8, ip
   122d0:	movcc	r2, #92	; 0x5c
   122d4:	strbcc	r2, [r5, r8]
   122d8:	add	r8, r8, #1
   122dc:	b	12a00 <putchar_unlocked@plt+0x19dc>
   122e0:	cmp	sl, #1
   122e4:	beq	12308 <putchar_unlocked@plt+0x12e4>
   122e8:	mov	r9, #0
   122ec:	cmn	sl, #1
   122f0:	bne	12314 <putchar_unlocked@plt+0x12f0>
   122f4:	ldrb	r0, [r4, #1]
   122f8:	cmp	r0, #0
   122fc:	beq	12308 <putchar_unlocked@plt+0x12e4>
   12300:	mvn	sl, #0
   12304:	b	12314 <putchar_unlocked@plt+0x12f0>
   12308:	mov	r9, #0
   1230c:	cmp	r7, #0
   12310:	beq	12320 <putchar_unlocked@plt+0x12fc>
   12314:	mov	r0, #0
   12318:	str	r0, [fp, #-56]	; 0xffffffc8
   1231c:	b	1222c <putchar_unlocked@plt+0x1208>
   12320:	mov	r1, #1
   12324:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12328:	cmp	r0, #2
   1232c:	bne	12344 <putchar_unlocked@plt+0x1320>
   12330:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12334:	mov	r9, r1
   12338:	tst	r0, #1
   1233c:	beq	1222c <putchar_unlocked@plt+0x1208>
   12340:	b	12b5c <putchar_unlocked@plt+0x1b38>
   12344:	mov	r9, r1
   12348:	b	1222c <putchar_unlocked@plt+0x1208>
   1234c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12350:	cmp	r0, #2
   12354:	bne	12598 <putchar_unlocked@plt+0x1574>
   12358:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1235c:	tst	r0, #1
   12360:	bne	12b5c <putchar_unlocked@plt+0x1b38>
   12364:	mov	r0, #0
   12368:	str	r0, [fp, #-56]	; 0xffffffc8
   1236c:	b	125b0 <putchar_unlocked@plt+0x158c>
   12370:	mov	r0, #102	; 0x66
   12374:	b	125bc <putchar_unlocked@plt+0x1598>
   12378:	mov	r2, #116	; 0x74
   1237c:	b	1238c <putchar_unlocked@plt+0x1368>
   12380:	mov	r0, #98	; 0x62
   12384:	b	125bc <putchar_unlocked@plt+0x1598>
   12388:	mov	r2, #114	; 0x72
   1238c:	ldr	r0, [sp, #68]	; 0x44
   12390:	tst	r0, #1
   12394:	mov	r0, r2
   12398:	bne	125bc <putchar_unlocked@plt+0x1598>
   1239c:	b	12b5c <putchar_unlocked@plt+0x1b38>
   123a0:	ldr	r0, [sp, #84]	; 0x54
   123a4:	tst	r0, #1
   123a8:	beq	125dc <putchar_unlocked@plt+0x15b8>
   123ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   123b0:	tst	r0, #1
   123b4:	bne	12c48 <putchar_unlocked@plt+0x1c24>
   123b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   123bc:	mov	r2, sl
   123c0:	subs	r0, r0, #2
   123c4:	movwne	r0, #1
   123c8:	orr	r0, r0, lr
   123cc:	tst	r0, #1
   123d0:	bne	12408 <putchar_unlocked@plt+0x13e4>
   123d4:	cmp	r8, ip
   123d8:	mov	lr, #1
   123dc:	movcc	r0, #39	; 0x27
   123e0:	strbcc	r0, [r5, r8]
   123e4:	add	r0, r8, #1
   123e8:	cmp	r0, ip
   123ec:	movcc	r1, #36	; 0x24
   123f0:	strbcc	r1, [r5, r0]
   123f4:	add	r0, r8, #2
   123f8:	add	r8, r8, #3
   123fc:	cmp	r0, ip
   12400:	movcc	r1, #39	; 0x27
   12404:	strbcc	r1, [r5, r0]
   12408:	mov	r1, #1
   1240c:	cmp	r8, ip
   12410:	mov	r9, #0
   12414:	mov	r6, #48	; 0x30
   12418:	str	r1, [fp, #-56]	; 0xffffffc8
   1241c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12420:	movcc	r0, #92	; 0x5c
   12424:	strbcc	r0, [r5, r8]
   12428:	add	r0, r8, #1
   1242c:	cmp	r1, #2
   12430:	beq	12738 <putchar_unlocked@plt+0x1714>
   12434:	add	r1, r7, #1
   12438:	cmp	r1, r2
   1243c:	bcs	12738 <putchar_unlocked@plt+0x1714>
   12440:	ldrb	r1, [r4, r1]
   12444:	sub	r1, r1, #48	; 0x30
   12448:	uxtb	r1, r1
   1244c:	cmp	r1, #9
   12450:	bhi	12738 <putchar_unlocked@plt+0x1714>
   12454:	cmp	r0, ip
   12458:	movcc	r1, #48	; 0x30
   1245c:	strbcc	r1, [r5, r0]
   12460:	add	r0, r8, #2
   12464:	add	r8, r8, #3
   12468:	cmp	r0, ip
   1246c:	movcc	r1, #48	; 0x30
   12470:	strbcc	r1, [r5, r0]
   12474:	b	1222c <putchar_unlocked@plt+0x1208>
   12478:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1247c:	mov	r6, #63	; 0x3f
   12480:	cmp	r0, #5
   12484:	beq	12740 <putchar_unlocked@plt+0x171c>
   12488:	mov	r1, #0
   1248c:	cmp	r0, #2
   12490:	str	r1, [fp, #-56]	; 0xffffffc8
   12494:	bne	127f4 <putchar_unlocked@plt+0x17d0>
   12498:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1249c:	mov	r9, #0
   124a0:	b	12338 <putchar_unlocked@plt+0x1314>
   124a4:	mov	r0, #118	; 0x76
   124a8:	b	125bc <putchar_unlocked@plt+0x1598>
   124ac:	mov	r0, #1
   124b0:	mov	r6, #39	; 0x27
   124b4:	str	r0, [sp, #60]	; 0x3c
   124b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   124bc:	cmp	r0, #2
   124c0:	bne	12534 <putchar_unlocked@plt+0x1510>
   124c4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   124c8:	tst	r0, #1
   124cc:	bne	12b5c <putchar_unlocked@plt+0x1b38>
   124d0:	ldr	r2, [sp, #56]	; 0x38
   124d4:	clz	r1, ip
   124d8:	mov	lr, #0
   124dc:	lsr	r1, r1, #5
   124e0:	cmp	r2, #0
   124e4:	mov	r0, r2
   124e8:	movwne	r0, #1
   124ec:	orrs	r0, r0, r1
   124f0:	moveq	r2, ip
   124f4:	moveq	ip, r0
   124f8:	cmp	r8, ip
   124fc:	str	r2, [sp, #56]	; 0x38
   12500:	movcc	r0, #39	; 0x27
   12504:	strbcc	r0, [r5, r8]
   12508:	add	r0, r8, #1
   1250c:	cmp	r0, ip
   12510:	movcc	r1, #92	; 0x5c
   12514:	strbcc	r1, [r5, r0]
   12518:	add	r0, r8, #2
   1251c:	add	r8, r8, #3
   12520:	cmp	r0, ip
   12524:	movcc	r1, #39	; 0x27
   12528:	strbcc	r1, [r5, r0]
   1252c:	mov	r0, #0
   12530:	str	r0, [fp, #-56]	; 0xffffffc8
   12534:	mov	r9, #1
   12538:	b	1222c <putchar_unlocked@plt+0x1208>
   1253c:	ldr	r0, [sp, #40]	; 0x28
   12540:	str	lr, [sp, #44]	; 0x2c
   12544:	str	ip, [sp, #88]	; 0x58
   12548:	cmp	r0, #1
   1254c:	bne	125fc <putchar_unlocked@plt+0x15d8>
   12550:	str	sl, [sp, #36]	; 0x24
   12554:	bl	10f10 <__ctype_b_loc@plt>
   12558:	ldr	r0, [r0]
   1255c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12560:	mov	r1, #1
   12564:	add	r0, r0, r6, lsl #1
   12568:	ldrb	r0, [r0, #1]
   1256c:	ubfx	r9, r0, #6, #1
   12570:	ldr	r0, [sp, #52]	; 0x34
   12574:	ldr	lr, [sp, #44]	; 0x2c
   12578:	cmp	r1, #1
   1257c:	orr	r3, r9, r0
   12580:	bhi	127fc <putchar_unlocked@plt+0x17d8>
   12584:	tst	r3, #1
   12588:	beq	127fc <putchar_unlocked@plt+0x17d8>
   1258c:	ldr	sl, [sp, #36]	; 0x24
   12590:	ldr	ip, [sp, #88]	; 0x58
   12594:	b	1222c <putchar_unlocked@plt+0x1208>
   12598:	ldr	r1, [sp, #48]	; 0x30
   1259c:	mov	r0, #0
   125a0:	str	r0, [fp, #-56]	; 0xffffffc8
   125a4:	mov	r0, #92	; 0x5c
   125a8:	cmp	r1, #0
   125ac:	beq	125bc <putchar_unlocked@plt+0x1598>
   125b0:	mov	r6, #92	; 0x5c
   125b4:	mov	r9, #0
   125b8:	b	129c0 <putchar_unlocked@plt+0x199c>
   125bc:	mov	r1, #0
   125c0:	mov	r9, #0
   125c4:	str	r1, [fp, #-56]	; 0xffffffc8
   125c8:	ldr	r1, [sp, #84]	; 0x54
   125cc:	tst	r1, #1
   125d0:	mov	r1, #0
   125d4:	beq	1222c <putchar_unlocked@plt+0x1208>
   125d8:	b	12274 <putchar_unlocked@plt+0x1250>
   125dc:	ldr	r0, [sp, #32]
   125e0:	mov	r6, #0
   125e4:	mov	r9, #0
   125e8:	cmp	r0, #0
   125ec:	mov	r0, #0
   125f0:	str	r0, [fp, #-56]	; 0xffffffc8
   125f4:	beq	1222c <putchar_unlocked@plt+0x1208>
   125f8:	b	12a18 <putchar_unlocked@plt+0x19f4>
   125fc:	mov	r0, #0
   12600:	cmn	sl, #1
   12604:	sub	r3, fp, #40	; 0x28
   12608:	str	r0, [fp, #-36]	; 0xffffffdc
   1260c:	str	r0, [fp, #-40]	; 0xffffffd8
   12610:	bne	12628 <putchar_unlocked@plt+0x1604>
   12614:	mov	r0, r4
   12618:	bl	10f34 <strlen@plt>
   1261c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12620:	sub	r3, fp, #40	; 0x28
   12624:	mov	sl, r0
   12628:	ldr	r0, [sp, #72]	; 0x48
   1262c:	mov	r9, #1
   12630:	mov	r1, #0
   12634:	str	sl, [sp, #36]	; 0x24
   12638:	add	r0, r0, r7
   1263c:	str	r0, [sp, #20]
   12640:	add	r0, r1, r7
   12644:	str	r1, [sp, #24]
   12648:	add	r1, r4, r0
   1264c:	mov	r4, r0
   12650:	sub	r2, sl, r0
   12654:	sub	r0, fp, #44	; 0x2c
   12658:	bl	1417c <putchar_unlocked@plt+0x3158>
   1265c:	cmp	r0, #0
   12660:	beq	12a6c <putchar_unlocked@plt+0x1a48>
   12664:	cmn	r0, #1
   12668:	beq	12a24 <putchar_unlocked@plt+0x1a00>
   1266c:	ldr	r2, [sp, #36]	; 0x24
   12670:	cmn	r0, #2
   12674:	beq	12a2c <putchar_unlocked@plt+0x1a08>
   12678:	ldr	r2, [sp, #64]	; 0x40
   1267c:	ldr	ip, [sp, #88]	; 0x58
   12680:	ldr	r4, [sp, #84]	; 0x54
   12684:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12688:	cmp	r0, #2
   1268c:	mov	r1, #0
   12690:	movwcc	r1, #1
   12694:	eor	r2, r2, #1
   12698:	orrs	r1, r2, r1
   1269c:	bne	126ec <putchar_unlocked@plt+0x16c8>
   126a0:	ldr	r1, [sp, #24]
   126a4:	ldr	r2, [sp, #20]
   126a8:	add	r1, r2, r1
   126ac:	sub	r2, r0, #1
   126b0:	ldrb	r3, [r1]
   126b4:	sub	r5, r3, #94	; 0x5e
   126b8:	cmp	r5, #30
   126bc:	bhi	126d4 <putchar_unlocked@plt+0x16b0>
   126c0:	mov	r4, #1
   126c4:	mov	sl, #1073741829	; 0x40000005
   126c8:	tst	sl, r4, lsl r5
   126cc:	ldr	r4, [sp, #84]	; 0x54
   126d0:	bne	12b34 <putchar_unlocked@plt+0x1b10>
   126d4:	sub	r3, r3, #91	; 0x5b
   126d8:	cmp	r3, #2
   126dc:	bcc	12b34 <putchar_unlocked@plt+0x1b10>
   126e0:	add	r1, r1, #1
   126e4:	subs	r2, r2, #1
   126e8:	bne	126b0 <putchar_unlocked@plt+0x168c>
   126ec:	ldr	r5, [sp, #24]
   126f0:	str	lr, [fp, #-48]	; 0xffffffd0
   126f4:	add	r5, r0, r5
   126f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126fc:	bl	10e74 <iswprint@plt>
   12700:	cmp	r0, #0
   12704:	sub	r4, fp, #40	; 0x28
   12708:	movwne	r0, #1
   1270c:	and	r9, r9, r0
   12710:	mov	r0, r4
   12714:	bl	10e44 <mbsinit@plt>
   12718:	mov	r1, r5
   1271c:	mov	r3, r4
   12720:	ldr	sl, [sp, #36]	; 0x24
   12724:	ldr	r5, [fp, #-84]	; 0xffffffac
   12728:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1272c:	cmp	r0, #0
   12730:	beq	12640 <putchar_unlocked@plt+0x161c>
   12734:	b	12570 <putchar_unlocked@plt+0x154c>
   12738:	mov	r8, r0
   1273c:	b	1222c <putchar_unlocked@plt+0x1208>
   12740:	mov	r0, #0
   12744:	str	r0, [fp, #-56]	; 0xffffffc8
   12748:	ldr	r0, [sp, #28]
   1274c:	cmp	r0, #0
   12750:	beq	127f4 <putchar_unlocked@plt+0x17d0>
   12754:	add	r0, r7, #2
   12758:	mov	r1, sl
   1275c:	cmp	r0, sl
   12760:	bcs	127f4 <putchar_unlocked@plt+0x17d0>
   12764:	add	r1, r7, r4
   12768:	ldrb	r1, [r1, #1]
   1276c:	cmp	r1, #63	; 0x3f
   12770:	bne	127f4 <putchar_unlocked@plt+0x17d0>
   12774:	ldrb	r9, [r4, r0]
   12778:	sub	r2, r9, #33	; 0x21
   1277c:	cmp	r2, #29
   12780:	bhi	127f4 <putchar_unlocked@plt+0x17d0>
   12784:	mov	r1, r4
   12788:	movw	r4, #20929	; 0x51c1
   1278c:	mov	r3, #1
   12790:	movt	r4, #14336	; 0x3800
   12794:	tst	r4, r3, lsl r2
   12798:	beq	12a80 <putchar_unlocked@plt+0x1a5c>
   1279c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   127a0:	tst	r2, #1
   127a4:	bne	12c50 <putchar_unlocked@plt+0x1c2c>
   127a8:	cmp	r8, ip
   127ac:	mov	r4, r1
   127b0:	mov	r7, r0
   127b4:	mov	r6, r9
   127b8:	movcc	r2, #63	; 0x3f
   127bc:	strbcc	r2, [r5, r8]
   127c0:	add	r2, r8, #1
   127c4:	cmp	r2, ip
   127c8:	movcc	r3, #34	; 0x22
   127cc:	strbcc	r3, [r5, r2]
   127d0:	add	r2, r8, #2
   127d4:	cmp	r2, ip
   127d8:	movcc	r3, #34	; 0x22
   127dc:	strbcc	r3, [r5, r2]
   127e0:	add	r2, r8, #3
   127e4:	add	r8, r8, #4
   127e8:	cmp	r2, ip
   127ec:	movcc	r3, #63	; 0x3f
   127f0:	strbcc	r3, [r5, r2]
   127f4:	mov	r9, #0
   127f8:	b	1222c <putchar_unlocked@plt+0x1208>
   127fc:	ldr	sl, [sp, #36]	; 0x24
   12800:	add	r0, r1, r7
   12804:	mov	r2, #0
   12808:	str	r3, [sp, #24]
   1280c:	str	r0, [fp, #-56]	; 0xffffffc8
   12810:	tst	r3, #1
   12814:	beq	12840 <putchar_unlocked@plt+0x181c>
   12818:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1281c:	tst	r0, #1
   12820:	beq	12908 <putchar_unlocked@plt+0x18e4>
   12824:	ldr	r1, [sp, #88]	; 0x58
   12828:	mov	r0, r3
   1282c:	cmp	r8, r1
   12830:	movcc	r1, #92	; 0x5c
   12834:	strbcc	r1, [r5, r8]
   12838:	add	r8, r8, #1
   1283c:	b	1290c <putchar_unlocked@plt+0x18e8>
   12840:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12844:	tst	r1, #1
   12848:	bne	12b58 <putchar_unlocked@plt+0x1b34>
   1284c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12850:	subs	r2, r1, #2
   12854:	movwne	r2, #1
   12858:	orr	r2, r2, lr
   1285c:	tst	r2, #1
   12860:	bne	128a4 <putchar_unlocked@plt+0x1880>
   12864:	ldr	r1, [sp, #88]	; 0x58
   12868:	add	r2, r8, #1
   1286c:	mov	lr, #1
   12870:	cmp	r8, r1
   12874:	movcc	r1, #39	; 0x27
   12878:	strbcc	r1, [r5, r8]
   1287c:	ldr	r1, [sp, #88]	; 0x58
   12880:	cmp	r2, r1
   12884:	movcc	r1, #36	; 0x24
   12888:	strbcc	r1, [r5, r2]
   1288c:	ldr	r1, [sp, #88]	; 0x58
   12890:	add	r2, r8, #2
   12894:	add	r8, r8, #3
   12898:	cmp	r2, r1
   1289c:	movcc	r1, #39	; 0x27
   128a0:	strbcc	r1, [r5, r2]
   128a4:	ldr	r1, [sp, #88]	; 0x58
   128a8:	add	r2, r8, #1
   128ac:	mov	r0, r3
   128b0:	cmp	r8, r1
   128b4:	movcc	r1, #92	; 0x5c
   128b8:	strbcc	r1, [r5, r8]
   128bc:	ldr	r1, [sp, #88]	; 0x58
   128c0:	cmp	r2, r1
   128c4:	bcs	128d8 <putchar_unlocked@plt+0x18b4>
   128c8:	uxtb	r3, r6
   128cc:	mov	r1, #48	; 0x30
   128d0:	orr	r3, r1, r3, lsr #6
   128d4:	strb	r3, [r5, r2]
   128d8:	ldr	r1, [sp, #88]	; 0x58
   128dc:	add	r2, r8, #2
   128e0:	add	r8, r8, #3
   128e4:	cmp	r2, r1
   128e8:	lsrcc	r3, r6, #3
   128ec:	movcc	r1, #6
   128f0:	bficc	r3, r1, #3, #29
   128f4:	mov	r1, #6
   128f8:	bfi	r6, r1, #3, #29
   128fc:	strbcc	r3, [r5, r2]
   12900:	mov	r2, #1
   12904:	b	12914 <putchar_unlocked@plt+0x18f0>
   12908:	mov	r0, r3
   1290c:	mov	r1, #0
   12910:	str	r1, [fp, #-52]	; 0xffffffcc
   12914:	mov	ip, r2
   12918:	and	r1, r2, #1
   1291c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12920:	add	r3, r7, #1
   12924:	cmp	r2, r3
   12928:	bls	129b0 <putchar_unlocked@plt+0x198c>
   1292c:	cmp	r1, #0
   12930:	mvn	r5, lr
   12934:	movwne	r1, #1
   12938:	orr	r5, r5, r1
   1293c:	tst	r5, #1
   12940:	bne	12984 <putchar_unlocked@plt+0x1960>
   12944:	ldr	r1, [sp, #88]	; 0x58
   12948:	ldr	r5, [fp, #-84]	; 0xffffffac
   1294c:	mov	r2, r4
   12950:	ldr	r4, [sp, #88]	; 0x58
   12954:	ldr	r0, [sp, #24]
   12958:	mov	lr, #0
   1295c:	cmp	r8, r1
   12960:	movcc	r1, #39	; 0x27
   12964:	strbcc	r1, [r5, r8]
   12968:	add	r1, r8, #1
   1296c:	add	r8, r8, #2
   12970:	cmp	r1, r4
   12974:	movcc	r4, #39	; 0x27
   12978:	strbcc	r4, [r5, r1]
   1297c:	mov	r4, r2
   12980:	b	12988 <putchar_unlocked@plt+0x1964>
   12984:	ldr	r5, [fp, #-84]	; 0xffffffac
   12988:	ldr	r1, [sp, #88]	; 0x58
   1298c:	mov	r2, ip
   12990:	cmp	r8, r1
   12994:	ldr	r1, [sp, #72]	; 0x48
   12998:	strbcc	r6, [r5, r8]
   1299c:	add	r8, r8, #1
   129a0:	ldrb	r6, [r1, r7]
   129a4:	mov	r7, r3
   129a8:	mov	r3, r0
   129ac:	b	12810 <putchar_unlocked@plt+0x17ec>
   129b0:	ldr	ip, [sp, #88]	; 0x58
   129b4:	cmp	r1, #0
   129b8:	movwne	r1, #1
   129bc:	str	r1, [fp, #-56]	; 0xffffffc8
   129c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   129c4:	cmp	r0, #0
   129c8:	bne	129f8 <putchar_unlocked@plt+0x19d4>
   129cc:	tst	lr, #1
   129d0:	beq	129f8 <putchar_unlocked@plt+0x19d4>
   129d4:	cmp	r8, ip
   129d8:	mov	lr, #0
   129dc:	movcc	r0, #39	; 0x27
   129e0:	strbcc	r0, [r5, r8]
   129e4:	add	r0, r8, #1
   129e8:	add	r8, r8, #2
   129ec:	cmp	r0, ip
   129f0:	movcc	r1, #39	; 0x27
   129f4:	strbcc	r1, [r5, r0]
   129f8:	mov	r1, r9
   129fc:	mov	r0, r6
   12a00:	cmp	r8, ip
   12a04:	strbcc	r0, [r5, r8]
   12a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a0c:	add	r8, r8, #1
   12a10:	and	r0, r0, r1
   12a14:	str	r0, [fp, #-48]	; 0xffffffd0
   12a18:	mov	r3, sl
   12a1c:	add	r7, r7, #1
   12a20:	b	11f10 <putchar_unlocked@plt+0xeec>
   12a24:	mov	r9, #0
   12a28:	b	12a6c <putchar_unlocked@plt+0x1a48>
   12a2c:	mov	r9, #0
   12a30:	cmp	r2, r4
   12a34:	bls	12a6c <putchar_unlocked@plt+0x1a48>
   12a38:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12a3c:	ldr	r1, [sp, #24]
   12a40:	add	r0, r4, r7
   12a44:	mov	r3, r1
   12a48:	ldrb	r1, [r0, r1]
   12a4c:	cmp	r1, #0
   12a50:	beq	12a78 <putchar_unlocked@plt+0x1a54>
   12a54:	add	r3, r3, #1
   12a58:	add	r1, r7, r3
   12a5c:	cmp	r1, r2
   12a60:	mov	r1, r3
   12a64:	bcc	12a44 <putchar_unlocked@plt+0x1a20>
   12a68:	b	12570 <putchar_unlocked@plt+0x154c>
   12a6c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12a70:	ldr	r1, [sp, #24]
   12a74:	b	12570 <putchar_unlocked@plt+0x154c>
   12a78:	mov	r1, r3
   12a7c:	b	12570 <putchar_unlocked@plt+0x154c>
   12a80:	mov	r9, #0
   12a84:	mov	r4, r1
   12a88:	b	1222c <putchar_unlocked@plt+0x1208>
   12a8c:	mov	sl, r7
   12a90:	b	12a98 <putchar_unlocked@plt+0x1a74>
   12a94:	mvn	sl, #0
   12a98:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12a9c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12aa0:	eor	r0, r1, #2
   12aa4:	orr	r0, r0, r8
   12aa8:	clz	r0, r0
   12aac:	lsr	r0, r0, #5
   12ab0:	tst	r2, r0
   12ab4:	bne	12b5c <putchar_unlocked@plt+0x1b38>
   12ab8:	subs	r0, r1, #2
   12abc:	movwne	r0, #1
   12ac0:	orr	r0, r2, r0
   12ac4:	tst	r0, #1
   12ac8:	ldreq	r0, [sp, #60]	; 0x3c
   12acc:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   12ad0:	eoreq	r0, r0, #1
   12ad4:	tsteq	r0, #1
   12ad8:	bne	12bf0 <putchar_unlocked@plt+0x1bcc>
   12adc:	tst	r1, #1
   12ae0:	bne	12bbc <putchar_unlocked@plt+0x1b98>
   12ae4:	ldr	r6, [sp, #56]	; 0x38
   12ae8:	mov	r9, #0
   12aec:	cmp	r6, #0
   12af0:	beq	12be8 <putchar_unlocked@plt+0x1bc4>
   12af4:	ldr	r0, [sp, #84]	; 0x54
   12af8:	mov	r1, #0
   12afc:	mov	r7, #2
   12b00:	cmp	ip, #0
   12b04:	str	r1, [fp, #-48]	; 0xffffffd0
   12b08:	mov	r1, #0
   12b0c:	str	r1, [fp, #-76]	; 0xffffffb4
   12b10:	beq	11c78 <putchar_unlocked@plt+0xc54>
   12b14:	b	12bf0 <putchar_unlocked@plt+0x1bcc>
   12b18:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12b1c:	ldr	r1, [fp, #12]
   12b20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12b24:	mov	r5, r3
   12b28:	mov	ip, r6
   12b2c:	mov	r3, sl
   12b30:	b	12b80 <putchar_unlocked@plt+0x1b5c>
   12b34:	tst	r4, #1
   12b38:	ldr	r5, [fp, #-84]	; 0xffffffac
   12b3c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12b40:	ldr	r1, [fp, #12]
   12b44:	ldr	r3, [sp, #36]	; 0x24
   12b48:	mov	r0, #2
   12b4c:	movwne	r0, #4
   12b50:	mov	r2, r0
   12b54:	b	12b80 <putchar_unlocked@plt+0x1b5c>
   12b58:	ldr	ip, [sp, #88]	; 0x58
   12b5c:	ldr	r1, [sp, #84]	; 0x54
   12b60:	mov	r0, #2
   12b64:	tst	r1, #1
   12b68:	movwne	r0, #4
   12b6c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12b70:	ldr	r1, [fp, #12]
   12b74:	mov	r3, sl
   12b78:	cmp	r2, #2
   12b7c:	moveq	r2, r0
   12b80:	mov	r0, #0
   12b84:	bic	r1, r1, #2
   12b88:	str	r2, [sp]
   12b8c:	mov	r2, r4
   12b90:	str	r0, [sp, #8]
   12b94:	ldr	r0, [sp, #76]	; 0x4c
   12b98:	str	r1, [sp, #4]
   12b9c:	mov	r1, ip
   12ba0:	str	r0, [sp, #12]
   12ba4:	ldr	r0, [sp, #80]	; 0x50
   12ba8:	str	r0, [sp, #16]
   12bac:	mov	r0, r5
   12bb0:	bl	11bec <putchar_unlocked@plt+0xbc8>
   12bb4:	mov	r8, r0
   12bb8:	b	12c3c <putchar_unlocked@plt+0x1c18>
   12bbc:	mov	r0, #5
   12bc0:	ldr	r1, [sp, #56]	; 0x38
   12bc4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12bc8:	mov	r3, sl
   12bcc:	str	r0, [sp]
   12bd0:	ldr	r0, [fp, #12]
   12bd4:	str	r0, [sp, #4]
   12bd8:	ldr	r0, [fp, #16]
   12bdc:	str	r0, [sp, #8]
   12be0:	ldr	r0, [sp, #76]	; 0x4c
   12be4:	b	12ba0 <putchar_unlocked@plt+0x1b7c>
   12be8:	mov	r0, #0
   12bec:	str	r0, [fp, #-76]	; 0xffffffb4
   12bf0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12bf4:	cmp	r1, #0
   12bf8:	beq	12c30 <putchar_unlocked@plt+0x1c0c>
   12bfc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c00:	tst	r0, #1
   12c04:	bne	12c30 <putchar_unlocked@plt+0x1c0c>
   12c08:	ldrb	r0, [r1]
   12c0c:	cmp	r0, #0
   12c10:	beq	12c30 <putchar_unlocked@plt+0x1c0c>
   12c14:	add	r1, r1, #1
   12c18:	cmp	r8, ip
   12c1c:	strbcc	r0, [r5, r8]
   12c20:	add	r8, r8, #1
   12c24:	ldrb	r0, [r1], #1
   12c28:	cmp	r0, #0
   12c2c:	bne	12c18 <putchar_unlocked@plt+0x1bf4>
   12c30:	cmp	r8, ip
   12c34:	movcc	r0, #0
   12c38:	strbcc	r0, [r5, r8]
   12c3c:	mov	r0, r8
   12c40:	sub	sp, fp, #28
   12c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c48:	mov	r0, #4
   12c4c:	b	12b6c <putchar_unlocked@plt+0x1b48>
   12c50:	mov	r4, r1
   12c54:	b	12b5c <putchar_unlocked@plt+0x1b38>
   12c58:	bl	1100c <abort@plt>
   12c5c:	mov	r3, r2
   12c60:	mov	r2, #0
   12c64:	b	12c68 <putchar_unlocked@plt+0x1c44>
   12c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c6c:	add	fp, sp, #28
   12c70:	sub	sp, sp, #36	; 0x24
   12c74:	movw	r8, #24944	; 0x6170
   12c78:	cmp	r3, #0
   12c7c:	mov	r4, r2
   12c80:	str	r2, [sp, #24]
   12c84:	mov	r5, r1
   12c88:	mov	r6, r0
   12c8c:	str	r0, [sp, #20]
   12c90:	movt	r8, #2
   12c94:	movne	r8, r3
   12c98:	bl	10f40 <__errno_location@plt>
   12c9c:	str	r0, [sp, #28]
   12ca0:	ldr	r1, [r8, #40]	; 0x28
   12ca4:	ldr	r2, [r8, #44]	; 0x2c
   12ca8:	ldr	r7, [r0]
   12cac:	cmp	r4, #0
   12cb0:	add	sl, r8, #8
   12cb4:	mov	r0, #0
   12cb8:	ldm	r8, {r3, r9}
   12cbc:	orreq	r9, r9, #1
   12cc0:	stm	sp, {r3, r9, sl}
   12cc4:	str	r1, [sp, #12]
   12cc8:	str	r2, [sp, #16]
   12ccc:	mov	r1, #0
   12cd0:	mov	r2, r6
   12cd4:	mov	r3, r5
   12cd8:	str	r7, [sp, #32]
   12cdc:	mov	r7, r5
   12ce0:	bl	11bec <putchar_unlocked@plt+0xbc8>
   12ce4:	add	r4, r0, #1
   12ce8:	mov	r5, r0
   12cec:	mov	r0, r4
   12cf0:	bl	139e0 <putchar_unlocked@plt+0x29bc>
   12cf4:	mov	r6, r0
   12cf8:	ldr	r0, [r8]
   12cfc:	ldr	r2, [r8, #44]	; 0x2c
   12d00:	ldr	r1, [r8, #40]	; 0x28
   12d04:	mov	r3, r7
   12d08:	stm	sp, {r0, r9, sl}
   12d0c:	str	r2, [sp, #16]
   12d10:	ldr	r2, [sp, #20]
   12d14:	str	r1, [sp, #12]
   12d18:	mov	r0, r6
   12d1c:	mov	r1, r4
   12d20:	bl	11bec <putchar_unlocked@plt+0xbc8>
   12d24:	ldr	r0, [sp, #24]
   12d28:	ldr	r1, [sp, #32]
   12d2c:	ldr	r2, [sp, #28]
   12d30:	cmp	r0, #0
   12d34:	str	r1, [r2]
   12d38:	strne	r5, [r0]
   12d3c:	mov	r0, r6
   12d40:	sub	sp, fp, #28
   12d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d4c:	add	fp, sp, #24
   12d50:	movw	r5, #24820	; 0x60f4
   12d54:	movw	r8, #24816	; 0x60f0
   12d58:	movt	r5, #2
   12d5c:	movt	r8, #2
   12d60:	ldr	r0, [r5]
   12d64:	ldr	r4, [r8]
   12d68:	cmp	r0, #2
   12d6c:	blt	12d98 <putchar_unlocked@plt+0x1d74>
   12d70:	add	r7, r4, #12
   12d74:	mov	r6, #0
   12d78:	ldr	r0, [r7, r6, lsl #3]
   12d7c:	bl	11934 <putchar_unlocked@plt+0x910>
   12d80:	ldr	r1, [r5]
   12d84:	add	r2, r6, #2
   12d88:	add	r0, r6, #1
   12d8c:	mov	r6, r0
   12d90:	cmp	r2, r1
   12d94:	blt	12d78 <putchar_unlocked@plt+0x1d54>
   12d98:	ldr	r0, [r4, #4]
   12d9c:	movw	r9, #24992	; 0x61a0
   12da0:	movw	r7, #24824	; 0x60f8
   12da4:	movt	r9, #2
   12da8:	movt	r7, #2
   12dac:	cmp	r0, r9
   12db0:	beq	12dc0 <putchar_unlocked@plt+0x1d9c>
   12db4:	bl	11934 <putchar_unlocked@plt+0x910>
   12db8:	mov	r0, #256	; 0x100
   12dbc:	stm	r7, {r0, r9}
   12dc0:	cmp	r4, r7
   12dc4:	beq	12dd4 <putchar_unlocked@plt+0x1db0>
   12dc8:	mov	r0, r4
   12dcc:	bl	11934 <putchar_unlocked@plt+0x910>
   12dd0:	str	r7, [r8]
   12dd4:	mov	r0, #1
   12dd8:	str	r0, [r5]
   12ddc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12de0:	movw	r3, #24944	; 0x6170
   12de4:	mvn	r2, #0
   12de8:	movt	r3, #2
   12dec:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   12df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12df4:	add	fp, sp, #28
   12df8:	sub	sp, sp, #44	; 0x2c
   12dfc:	mov	r7, r3
   12e00:	str	r2, [sp, #36]	; 0x24
   12e04:	str	r1, [sp, #32]
   12e08:	mov	r5, r0
   12e0c:	bl	10f40 <__errno_location@plt>
   12e10:	cmp	r5, #0
   12e14:	bmi	12f84 <putchar_unlocked@plt+0x1f60>
   12e18:	cmn	r5, #-2147483647	; 0x80000001
   12e1c:	beq	12f84 <putchar_unlocked@plt+0x1f60>
   12e20:	movw	r8, #24820	; 0x60f4
   12e24:	movw	r4, #24816	; 0x60f0
   12e28:	str	r0, [sp, #28]
   12e2c:	ldr	r0, [r0]
   12e30:	movt	r8, #2
   12e34:	movt	r4, #2
   12e38:	ldr	r1, [r8]
   12e3c:	ldr	r6, [r4]
   12e40:	str	r0, [sp, #24]
   12e44:	cmp	r1, r5
   12e48:	ble	12e54 <putchar_unlocked@plt+0x1e30>
   12e4c:	mov	sl, r6
   12e50:	b	12ec0 <putchar_unlocked@plt+0x1e9c>
   12e54:	movw	r9, #24824	; 0x60f8
   12e58:	mov	r0, #8
   12e5c:	str	r1, [fp, #-32]	; 0xffffffe0
   12e60:	sub	r1, r5, r1
   12e64:	mvn	r3, #-2147483648	; 0x80000000
   12e68:	movt	r9, #2
   12e6c:	str	r0, [sp]
   12e70:	add	r2, r1, #1
   12e74:	sub	r1, fp, #32
   12e78:	subs	r0, r6, r9
   12e7c:	movne	r0, r6
   12e80:	bl	13b10 <putchar_unlocked@plt+0x2aec>
   12e84:	mov	sl, r0
   12e88:	cmp	r6, r9
   12e8c:	str	r0, [r4]
   12e90:	bne	12e9c <putchar_unlocked@plt+0x1e78>
   12e94:	ldrd	r0, [r9]
   12e98:	stm	sl, {r0, r1}
   12e9c:	ldr	r1, [r8]
   12ea0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ea4:	add	r0, sl, r1, lsl #3
   12ea8:	sub	r1, r2, r1
   12eac:	lsl	r2, r1, #3
   12eb0:	mov	r1, #0
   12eb4:	bl	10f70 <memset@plt>
   12eb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ebc:	str	r0, [r8]
   12ec0:	mov	r9, sl
   12ec4:	ldm	r7, {r0, r1}
   12ec8:	orr	r8, r1, #1
   12ecc:	add	r1, r7, #8
   12ed0:	ldr	r2, [r7, #40]	; 0x28
   12ed4:	ldr	r3, [r7, #44]	; 0x2c
   12ed8:	ldr	r6, [r9, r5, lsl #3]!
   12edc:	str	r1, [sp, #20]
   12ee0:	ldr	r4, [r9, #4]!
   12ee4:	stm	sp, {r0, r8}
   12ee8:	add	r0, sp, #8
   12eec:	stm	r0, {r1, r2, r3}
   12ef0:	ldr	r2, [sp, #32]
   12ef4:	ldr	r3, [sp, #36]	; 0x24
   12ef8:	mov	r1, r6
   12efc:	mov	r0, r4
   12f00:	bl	11bec <putchar_unlocked@plt+0xbc8>
   12f04:	cmp	r6, r0
   12f08:	bhi	12f6c <putchar_unlocked@plt+0x1f48>
   12f0c:	add	r6, r0, #1
   12f10:	movw	r0, #24992	; 0x61a0
   12f14:	movt	r0, #2
   12f18:	str	r6, [sl, r5, lsl #3]
   12f1c:	cmp	r4, r0
   12f20:	beq	12f2c <putchar_unlocked@plt+0x1f08>
   12f24:	mov	r0, r4
   12f28:	bl	11934 <putchar_unlocked@plt+0x910>
   12f2c:	mov	r0, r6
   12f30:	bl	139e0 <putchar_unlocked@plt+0x29bc>
   12f34:	str	r0, [r9]
   12f38:	mov	r4, r0
   12f3c:	add	r3, sp, #8
   12f40:	ldr	r0, [r7]
   12f44:	ldr	r1, [r7, #40]	; 0x28
   12f48:	ldr	r2, [r7, #44]	; 0x2c
   12f4c:	stm	sp, {r0, r8}
   12f50:	ldr	r0, [sp, #20]
   12f54:	stm	r3, {r0, r1, r2}
   12f58:	ldr	r2, [sp, #32]
   12f5c:	ldr	r3, [sp, #36]	; 0x24
   12f60:	mov	r0, r4
   12f64:	mov	r1, r6
   12f68:	bl	11bec <putchar_unlocked@plt+0xbc8>
   12f6c:	ldr	r0, [sp, #28]
   12f70:	ldr	r1, [sp, #24]
   12f74:	str	r1, [r0]
   12f78:	mov	r0, r4
   12f7c:	sub	sp, fp, #28
   12f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f84:	bl	1100c <abort@plt>
   12f88:	movw	r3, #24944	; 0x6170
   12f8c:	movt	r3, #2
   12f90:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   12f94:	movw	r3, #24944	; 0x6170
   12f98:	mov	r1, r0
   12f9c:	mov	r0, #0
   12fa0:	mvn	r2, #0
   12fa4:	movt	r3, #2
   12fa8:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   12fac:	movw	r3, #24944	; 0x6170
   12fb0:	mov	r2, r1
   12fb4:	mov	r1, r0
   12fb8:	mov	r0, #0
   12fbc:	movt	r3, #2
   12fc0:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   12fc4:	push	{fp, lr}
   12fc8:	mov	fp, sp
   12fcc:	sub	sp, sp, #48	; 0x30
   12fd0:	vmov.i32	q8, #0	; 0x00000000
   12fd4:	mov	ip, #32
   12fd8:	mov	r3, sp
   12fdc:	mov	lr, r2
   12fe0:	cmp	r1, #10
   12fe4:	add	r2, r3, #16
   12fe8:	vst1.64	{d16-d17}, [r3], ip
   12fec:	vst1.64	{d16-d17}, [r2]
   12ff0:	vst1.64	{d16-d17}, [r3]
   12ff4:	beq	13014 <putchar_unlocked@plt+0x1ff0>
   12ff8:	str	r1, [sp]
   12ffc:	mov	r3, sp
   13000:	mov	r1, lr
   13004:	mvn	r2, #0
   13008:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   1300c:	mov	sp, fp
   13010:	pop	{fp, pc}
   13014:	bl	1100c <abort@plt>
   13018:	push	{r4, sl, fp, lr}
   1301c:	add	fp, sp, #8
   13020:	sub	sp, sp, #48	; 0x30
   13024:	vmov.i32	q8, #0	; 0x00000000
   13028:	mov	ip, r3
   1302c:	mov	r3, sp
   13030:	mov	lr, #32
   13034:	cmp	r1, #10
   13038:	add	r4, r3, #16
   1303c:	vst1.64	{d16-d17}, [r3], lr
   13040:	vst1.64	{d16-d17}, [r4]
   13044:	vst1.64	{d16-d17}, [r3]
   13048:	beq	13068 <putchar_unlocked@plt+0x2044>
   1304c:	str	r1, [sp]
   13050:	mov	r1, r2
   13054:	mov	r3, sp
   13058:	mov	r2, ip
   1305c:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   13060:	sub	sp, fp, #8
   13064:	pop	{r4, sl, fp, pc}
   13068:	bl	1100c <abort@plt>
   1306c:	mov	r2, r1
   13070:	mov	r1, r0
   13074:	mov	r0, #0
   13078:	b	12fc4 <putchar_unlocked@plt+0x1fa0>
   1307c:	mov	r3, r2
   13080:	mov	r2, r1
   13084:	mov	r1, r0
   13088:	mov	r0, #0
   1308c:	b	13018 <putchar_unlocked@plt+0x1ff4>
   13090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13094:	add	fp, sp, #24
   13098:	sub	sp, sp, #48	; 0x30
   1309c:	movw	r8, #24944	; 0x6170
   130a0:	mov	lr, r0
   130a4:	mov	r3, sp
   130a8:	mov	ip, r1
   130ac:	movt	r8, #2
   130b0:	mov	r1, r3
   130b4:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   130b8:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   130bc:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   130c0:	stm	r1, {r0, r4, r5, r6, r7, r9}
   130c4:	ubfx	r0, r2, #5, #3
   130c8:	and	r2, r2, #31
   130cc:	mov	r4, #1
   130d0:	add	r0, r3, r0, lsl #2
   130d4:	ldr	r1, [r0, #8]
   130d8:	bic	r4, r4, r1, lsr r2
   130dc:	eor	r1, r1, r4, lsl r2
   130e0:	mov	r2, ip
   130e4:	str	r1, [r0, #8]
   130e8:	mov	r0, #0
   130ec:	mov	r1, lr
   130f0:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   130f4:	sub	sp, fp, #24
   130f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13100:	add	fp, sp, #24
   13104:	sub	sp, sp, #48	; 0x30
   13108:	movw	lr, #24944	; 0x6170
   1310c:	mov	ip, r0
   13110:	mov	r3, sp
   13114:	movt	lr, #2
   13118:	mov	r2, r3
   1311c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   13120:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13124:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13128:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1312c:	ubfx	r0, r1, #5, #3
   13130:	and	r1, r1, #31
   13134:	mov	r7, #1
   13138:	add	r0, r3, r0, lsl #2
   1313c:	ldr	r2, [r0, #8]
   13140:	bic	r7, r7, r2, lsr r1
   13144:	eor	r1, r2, r7, lsl r1
   13148:	mvn	r2, #0
   1314c:	str	r1, [r0, #8]
   13150:	mov	r0, #0
   13154:	mov	r1, ip
   13158:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   1315c:	sub	sp, fp, #24
   13160:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13164:	push	{r4, r5, r6, r7, fp, lr}
   13168:	add	fp, sp, #16
   1316c:	sub	sp, sp, #48	; 0x30
   13170:	movw	lr, #24944	; 0x6170
   13174:	mov	ip, r0
   13178:	mov	r3, sp
   1317c:	movt	lr, #2
   13180:	mov	r2, r3
   13184:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13188:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1318c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13190:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13194:	mov	r1, ip
   13198:	mvn	r2, #0
   1319c:	ldr	r0, [sp, #12]
   131a0:	orr	r0, r0, #67108864	; 0x4000000
   131a4:	str	r0, [sp, #12]
   131a8:	mov	r0, #0
   131ac:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   131b0:	sub	sp, fp, #16
   131b4:	pop	{r4, r5, r6, r7, fp, pc}
   131b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131bc:	add	fp, sp, #24
   131c0:	sub	sp, sp, #48	; 0x30
   131c4:	movw	r8, #24944	; 0x6170
   131c8:	mov	ip, r1
   131cc:	mov	lr, r0
   131d0:	mov	r3, sp
   131d4:	movt	r8, #2
   131d8:	mov	r2, r3
   131dc:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   131e0:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   131e4:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   131e8:	stm	r2, {r0, r1, r4, r5, r6, r7}
   131ec:	mov	r1, lr
   131f0:	mov	r2, ip
   131f4:	ldr	r0, [sp, #12]
   131f8:	orr	r0, r0, #67108864	; 0x4000000
   131fc:	str	r0, [sp, #12]
   13200:	mov	r0, #0
   13204:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   13208:	sub	sp, fp, #24
   1320c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13210:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13214:	add	fp, sp, #24
   13218:	sub	sp, sp, #96	; 0x60
   1321c:	vmov.i32	q8, #0	; 0x00000000
   13220:	mov	lr, sp
   13224:	mov	ip, r2
   13228:	cmp	r1, #10
   1322c:	add	r3, lr, #16
   13230:	mov	r2, lr
   13234:	vst1.64	{d16-d17}, [r3]
   13238:	mov	r3, #28
   1323c:	vst1.64	{d16-d17}, [r2], r3
   13240:	vst1.32	{d16-d17}, [r2]
   13244:	beq	13284 <putchar_unlocked@plt+0x2260>
   13248:	str	r1, [sp, #48]	; 0x30
   1324c:	add	r3, sp, #48	; 0x30
   13250:	ldm	lr!, {r2, r4, r5, r6, r7}
   13254:	add	r1, r3, #4
   13258:	stmia	r1!, {r2, r4, r5, r6, r7}
   1325c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13260:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13264:	mvn	r2, #0
   13268:	ldr	r1, [sp, #60]	; 0x3c
   1326c:	orr	r1, r1, #67108864	; 0x4000000
   13270:	str	r1, [sp, #60]	; 0x3c
   13274:	mov	r1, ip
   13278:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   1327c:	sub	sp, fp, #24
   13280:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13284:	bl	1100c <abort@plt>
   13288:	push	{fp, lr}
   1328c:	mov	fp, sp
   13290:	sub	sp, sp, #8
   13294:	mvn	ip, #0
   13298:	str	ip, [sp]
   1329c:	bl	132a8 <putchar_unlocked@plt+0x2284>
   132a0:	mov	sp, fp
   132a4:	pop	{fp, pc}
   132a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132ac:	add	fp, sp, #24
   132b0:	sub	sp, sp, #48	; 0x30
   132b4:	movw	ip, #24944	; 0x6170
   132b8:	mov	lr, r3
   132bc:	mov	r3, sp
   132c0:	cmp	r1, #0
   132c4:	movt	ip, #2
   132c8:	cmpne	r2, #0
   132cc:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   132d0:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   132d4:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   132d8:	stm	r3, {r4, r5, r6, r7, r8, r9}
   132dc:	mov	r3, #10
   132e0:	str	r3, [sp]
   132e4:	bne	132ec <putchar_unlocked@plt+0x22c8>
   132e8:	bl	1100c <abort@plt>
   132ec:	ldr	ip, [fp, #8]
   132f0:	str	r2, [sp, #44]	; 0x2c
   132f4:	str	r1, [sp, #40]	; 0x28
   132f8:	mov	r3, sp
   132fc:	mov	r1, lr
   13300:	mov	r2, ip
   13304:	bl	12df0 <putchar_unlocked@plt+0x1dcc>
   13308:	sub	sp, fp, #24
   1330c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13310:	push	{fp, lr}
   13314:	mov	fp, sp
   13318:	sub	sp, sp, #8
   1331c:	mov	r3, r2
   13320:	mov	r2, r1
   13324:	mov	r1, r0
   13328:	mvn	r0, #0
   1332c:	str	r0, [sp]
   13330:	mov	r0, #0
   13334:	bl	132a8 <putchar_unlocked@plt+0x2284>
   13338:	mov	sp, fp
   1333c:	pop	{fp, pc}
   13340:	push	{fp, lr}
   13344:	mov	fp, sp
   13348:	sub	sp, sp, #8
   1334c:	mov	ip, r2
   13350:	mov	r2, r1
   13354:	mov	r1, r0
   13358:	str	r3, [sp]
   1335c:	mov	r0, #0
   13360:	mov	r3, ip
   13364:	bl	132a8 <putchar_unlocked@plt+0x2284>
   13368:	mov	sp, fp
   1336c:	pop	{fp, pc}
   13370:	movw	r3, #24832	; 0x6100
   13374:	movt	r3, #2
   13378:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   1337c:	movw	r3, #24832	; 0x6100
   13380:	mov	r2, r1
   13384:	mov	r1, r0
   13388:	mov	r0, #0
   1338c:	movt	r3, #2
   13390:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   13394:	movw	r3, #24832	; 0x6100
   13398:	mvn	r2, #0
   1339c:	movt	r3, #2
   133a0:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   133a4:	movw	r3, #24832	; 0x6100
   133a8:	mov	r1, r0
   133ac:	mov	r0, #0
   133b0:	mvn	r2, #0
   133b4:	movt	r3, #2
   133b8:	b	12df0 <putchar_unlocked@plt+0x1dcc>
   133bc:	push	{r4, r5, fp, lr}
   133c0:	add	fp, sp, #8
   133c4:	mov	r5, r0
   133c8:	mov	r4, r1
   133cc:	mov	r0, #0
   133d0:	mov	r2, #5
   133d4:	mov	r1, r5
   133d8:	bl	10e50 <dcgettext@plt>
   133dc:	cmp	r0, r5
   133e0:	popne	{r4, r5, fp, pc}
   133e4:	bl	14144 <putchar_unlocked@plt+0x3120>
   133e8:	ldrb	r1, [r0]
   133ec:	and	r1, r1, #223	; 0xdf
   133f0:	cmp	r1, #71	; 0x47
   133f4:	beq	1345c <putchar_unlocked@plt+0x2438>
   133f8:	cmp	r1, #85	; 0x55
   133fc:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13400:	ldrb	r1, [r0, #1]
   13404:	and	r1, r1, #223	; 0xdf
   13408:	cmp	r1, #84	; 0x54
   1340c:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13410:	ldrb	r1, [r0, #2]
   13414:	and	r1, r1, #223	; 0xdf
   13418:	cmp	r1, #70	; 0x46
   1341c:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13420:	ldrb	r1, [r0, #3]
   13424:	cmp	r1, #45	; 0x2d
   13428:	bne	134b4 <putchar_unlocked@plt+0x2490>
   1342c:	ldrb	r1, [r0, #4]
   13430:	cmp	r1, #56	; 0x38
   13434:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13438:	ldrb	r0, [r0, #5]
   1343c:	cmp	r0, #0
   13440:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13444:	ldrb	r1, [r5]
   13448:	movw	r2, #19442	; 0x4bf2
   1344c:	movw	r0, #19446	; 0x4bf6
   13450:	movt	r2, #1
   13454:	movt	r0, #1
   13458:	b	134e4 <putchar_unlocked@plt+0x24c0>
   1345c:	ldrb	r1, [r0, #1]
   13460:	and	r1, r1, #223	; 0xdf
   13464:	cmp	r1, #66	; 0x42
   13468:	bne	134b4 <putchar_unlocked@plt+0x2490>
   1346c:	ldrb	r1, [r0, #2]
   13470:	cmp	r1, #49	; 0x31
   13474:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13478:	ldrb	r1, [r0, #3]
   1347c:	cmp	r1, #56	; 0x38
   13480:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13484:	ldrb	r1, [r0, #4]
   13488:	cmp	r1, #48	; 0x30
   1348c:	bne	134b4 <putchar_unlocked@plt+0x2490>
   13490:	ldrb	r1, [r0, #5]
   13494:	cmp	r1, #51	; 0x33
   13498:	bne	134b4 <putchar_unlocked@plt+0x2490>
   1349c:	ldrb	r1, [r0, #6]
   134a0:	cmp	r1, #48	; 0x30
   134a4:	bne	134b4 <putchar_unlocked@plt+0x2490>
   134a8:	ldrb	r0, [r0, #7]
   134ac:	cmp	r0, #0
   134b0:	beq	134d0 <putchar_unlocked@plt+0x24ac>
   134b4:	movw	r1, #19436	; 0x4bec
   134b8:	movw	r0, #19440	; 0x4bf0
   134bc:	cmp	r4, #9
   134c0:	movt	r1, #1
   134c4:	movt	r0, #1
   134c8:	moveq	r0, r1
   134cc:	pop	{r4, r5, fp, pc}
   134d0:	ldrb	r1, [r5]
   134d4:	movw	r2, #19450	; 0x4bfa
   134d8:	movw	r0, #19454	; 0x4bfe
   134dc:	movt	r2, #1
   134e0:	movt	r0, #1
   134e4:	cmp	r1, #96	; 0x60
   134e8:	moveq	r0, r2
   134ec:	pop	{r4, r5, fp, pc}
   134f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134f4:	add	fp, sp, #24
   134f8:	sub	sp, sp, #32
   134fc:	ldr	r6, [fp, #12]
   13500:	ldr	r7, [fp, #8]
   13504:	mov	r4, r2
   13508:	mov	r8, r0
   1350c:	cmp	r1, #0
   13510:	beq	13538 <putchar_unlocked@plt+0x2514>
   13514:	movw	r2, #19544	; 0x4c58
   13518:	mov	r5, r1
   1351c:	str	r3, [sp, #4]
   13520:	str	r4, [sp]
   13524:	mov	r0, r8
   13528:	mov	r1, #1
   1352c:	movt	r2, #1
   13530:	mov	r3, r5
   13534:	b	13550 <putchar_unlocked@plt+0x252c>
   13538:	movw	r2, #19556	; 0x4c64
   1353c:	str	r3, [sp]
   13540:	mov	r0, r8
   13544:	mov	r1, #1
   13548:	mov	r3, r4
   1354c:	movt	r2, #1
   13550:	bl	10f94 <__fprintf_chk@plt>
   13554:	movw	r1, #19563	; 0x4c6b
   13558:	mov	r0, #0
   1355c:	mov	r2, #5
   13560:	movt	r1, #1
   13564:	bl	10e50 <dcgettext@plt>
   13568:	movw	r2, #20281	; 0x4f39
   1356c:	mov	r3, r0
   13570:	movw	r0, #2022	; 0x7e6
   13574:	mov	r1, #1
   13578:	movt	r2, #1
   1357c:	str	r0, [sp]
   13580:	mov	r0, r8
   13584:	bl	10f94 <__fprintf_chk@plt>
   13588:	movw	r4, #19023	; 0x4a4f
   1358c:	mov	r1, r8
   13590:	movt	r4, #1
   13594:	mov	r0, r4
   13598:	bl	10dcc <fputs_unlocked@plt>
   1359c:	movw	r1, #19567	; 0x4c6f
   135a0:	mov	r0, #0
   135a4:	mov	r2, #5
   135a8:	movt	r1, #1
   135ac:	bl	10e50 <dcgettext@plt>
   135b0:	movw	r3, #19738	; 0x4d1a
   135b4:	mov	r2, r0
   135b8:	mov	r0, r8
   135bc:	mov	r1, #1
   135c0:	movt	r3, #1
   135c4:	bl	10f94 <__fprintf_chk@plt>
   135c8:	mov	r0, r4
   135cc:	mov	r1, r8
   135d0:	bl	10dcc <fputs_unlocked@plt>
   135d4:	cmp	r6, #9
   135d8:	bhi	1363c <putchar_unlocked@plt+0x2618>
   135dc:	add	r0, pc, #0
   135e0:	ldr	pc, [r0, r6, lsl #2]
   135e4:	andeq	r3, r1, r4, lsl r8
   135e8:	andeq	r3, r1, ip, lsl #12
   135ec:	andeq	r3, r1, r8, asr #12
   135f0:	andeq	r3, r1, r0, ror r6
   135f4:	muleq	r1, r8, r6
   135f8:	andeq	r3, r1, r0, asr #13
   135fc:	andeq	r3, r1, r8, ror #13
   13600:	andeq	r3, r1, r0, lsr #14
   13604:	andeq	r3, r1, r0, asr #15
   13608:	andeq	r3, r1, r8, ror #14
   1360c:	movw	r1, #19772	; 0x4d3c
   13610:	mov	r0, #0
   13614:	mov	r2, #5
   13618:	movt	r1, #1
   1361c:	bl	10e50 <dcgettext@plt>
   13620:	ldr	r3, [r7]
   13624:	mov	r2, r0
   13628:	mov	r0, r8
   1362c:	mov	r1, #1
   13630:	sub	sp, fp, #24
   13634:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13638:	b	10f94 <__fprintf_chk@plt>
   1363c:	movw	r1, #20091	; 0x4e7b
   13640:	movt	r1, #1
   13644:	b	13770 <putchar_unlocked@plt+0x274c>
   13648:	movw	r1, #19788	; 0x4d4c
   1364c:	mov	r0, #0
   13650:	mov	r2, #5
   13654:	movt	r1, #1
   13658:	bl	10e50 <dcgettext@plt>
   1365c:	mov	r2, r0
   13660:	ldr	r3, [r7]
   13664:	ldr	r0, [r7, #4]
   13668:	str	r0, [sp]
   1366c:	b	1375c <putchar_unlocked@plt+0x2738>
   13670:	movw	r1, #19811	; 0x4d63
   13674:	mov	r0, #0
   13678:	mov	r2, #5
   1367c:	movt	r1, #1
   13680:	bl	10e50 <dcgettext@plt>
   13684:	mov	r2, r0
   13688:	ldr	r3, [r7]
   1368c:	ldmib	r7, {r0, r1}
   13690:	stm	sp, {r0, r1}
   13694:	b	1375c <putchar_unlocked@plt+0x2738>
   13698:	movw	r1, #19839	; 0x4d7f
   1369c:	mov	r0, #0
   136a0:	mov	r2, #5
   136a4:	movt	r1, #1
   136a8:	bl	10e50 <dcgettext@plt>
   136ac:	ldr	r3, [r7]
   136b0:	mov	r2, r0
   136b4:	ldmib	r7, {r0, r1, r7}
   136b8:	stm	sp, {r0, r1, r7}
   136bc:	b	1375c <putchar_unlocked@plt+0x2738>
   136c0:	movw	r1, #19871	; 0x4d9f
   136c4:	mov	r0, #0
   136c8:	mov	r2, #5
   136cc:	movt	r1, #1
   136d0:	bl	10e50 <dcgettext@plt>
   136d4:	ldr	r3, [r7]
   136d8:	mov	r2, r0
   136dc:	ldmib	r7, {r0, r1, r6, r7}
   136e0:	stm	sp, {r0, r1, r6, r7}
   136e4:	b	1375c <putchar_unlocked@plt+0x2738>
   136e8:	movw	r1, #19907	; 0x4dc3
   136ec:	mov	r0, #0
   136f0:	mov	r2, #5
   136f4:	movt	r1, #1
   136f8:	bl	10e50 <dcgettext@plt>
   136fc:	mov	r2, r0
   13700:	ldr	r3, [r7]
   13704:	ldmib	r7, {r0, r1, r6}
   13708:	ldr	r5, [r7, #16]
   1370c:	ldr	r7, [r7, #20]
   13710:	stm	sp, {r0, r1, r6}
   13714:	str	r5, [sp, #12]
   13718:	str	r7, [sp, #16]
   1371c:	b	1375c <putchar_unlocked@plt+0x2738>
   13720:	movw	r1, #19947	; 0x4deb
   13724:	mov	r0, #0
   13728:	mov	r2, #5
   1372c:	movt	r1, #1
   13730:	bl	10e50 <dcgettext@plt>
   13734:	mov	r2, r0
   13738:	ldr	r3, [r7]
   1373c:	ldmib	r7, {r0, r1, r6}
   13740:	ldr	r5, [r7, #16]
   13744:	ldr	r4, [r7, #20]
   13748:	ldr	r7, [r7, #24]
   1374c:	stm	sp, {r0, r1, r6}
   13750:	str	r5, [sp, #12]
   13754:	str	r4, [sp, #16]
   13758:	str	r7, [sp, #20]
   1375c:	mov	r0, r8
   13760:	mov	r1, #1
   13764:	b	13810 <putchar_unlocked@plt+0x27ec>
   13768:	movw	r1, #20039	; 0x4e47
   1376c:	movt	r1, #1
   13770:	mov	r0, #0
   13774:	mov	r2, #5
   13778:	bl	10e50 <dcgettext@plt>
   1377c:	mov	ip, r0
   13780:	ldr	r3, [r7]
   13784:	ldr	r0, [r7, #4]
   13788:	ldr	r1, [r7, #8]
   1378c:	ldr	r6, [r7, #12]
   13790:	ldr	r5, [r7, #16]
   13794:	ldr	r4, [r7, #20]
   13798:	ldr	r2, [r7, #24]
   1379c:	ldr	lr, [r7, #28]
   137a0:	ldr	r7, [r7, #32]
   137a4:	stm	sp, {r0, r1, r6}
   137a8:	str	r5, [sp, #12]
   137ac:	str	r4, [sp, #16]
   137b0:	str	r2, [sp, #20]
   137b4:	str	lr, [sp, #24]
   137b8:	str	r7, [sp, #28]
   137bc:	b	13804 <putchar_unlocked@plt+0x27e0>
   137c0:	movw	r1, #19991	; 0x4e17
   137c4:	mov	r0, #0
   137c8:	mov	r2, #5
   137cc:	movt	r1, #1
   137d0:	bl	10e50 <dcgettext@plt>
   137d4:	mov	ip, r0
   137d8:	ldr	r3, [r7]
   137dc:	ldmib	r7, {r0, r1, r6}
   137e0:	ldr	r5, [r7, #16]
   137e4:	ldr	r4, [r7, #20]
   137e8:	ldr	r2, [r7, #24]
   137ec:	ldr	r7, [r7, #28]
   137f0:	stm	sp, {r0, r1, r6}
   137f4:	str	r5, [sp, #12]
   137f8:	str	r4, [sp, #16]
   137fc:	str	r2, [sp, #20]
   13800:	str	r7, [sp, #24]
   13804:	mov	r0, r8
   13808:	mov	r1, #1
   1380c:	mov	r2, ip
   13810:	bl	10f94 <__fprintf_chk@plt>
   13814:	sub	sp, fp, #24
   13818:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1381c:	push	{r4, sl, fp, lr}
   13820:	add	fp, sp, #8
   13824:	sub	sp, sp, #8
   13828:	ldr	ip, [fp, #8]
   1382c:	mov	lr, #0
   13830:	ldr	r4, [ip, lr, lsl #2]
   13834:	add	lr, lr, #1
   13838:	cmp	r4, #0
   1383c:	bne	13830 <putchar_unlocked@plt+0x280c>
   13840:	sub	r4, lr, #1
   13844:	str	ip, [sp]
   13848:	str	r4, [sp, #4]
   1384c:	bl	134f0 <putchar_unlocked@plt+0x24cc>
   13850:	sub	sp, fp, #8
   13854:	pop	{r4, sl, fp, pc}
   13858:	push	{r4, r5, fp, lr}
   1385c:	add	fp, sp, #8
   13860:	sub	sp, sp, #48	; 0x30
   13864:	ldr	r4, [fp, #8]
   13868:	mov	ip, #0
   1386c:	add	lr, sp, #8
   13870:	ldr	r5, [r4]
   13874:	cmp	r5, #0
   13878:	str	r5, [lr, ip, lsl #2]
   1387c:	beq	13894 <putchar_unlocked@plt+0x2870>
   13880:	add	ip, ip, #1
   13884:	add	r4, r4, #4
   13888:	cmp	ip, #10
   1388c:	bne	13870 <putchar_unlocked@plt+0x284c>
   13890:	mov	ip, #10
   13894:	str	lr, [sp]
   13898:	str	ip, [sp, #4]
   1389c:	bl	134f0 <putchar_unlocked@plt+0x24cc>
   138a0:	sub	sp, fp, #8
   138a4:	pop	{r4, r5, fp, pc}
   138a8:	push	{fp, lr}
   138ac:	mov	fp, sp
   138b0:	sub	sp, sp, #8
   138b4:	add	ip, fp, #8
   138b8:	str	ip, [sp, #4]
   138bc:	str	ip, [sp]
   138c0:	bl	13858 <putchar_unlocked@plt+0x2834>
   138c4:	mov	sp, fp
   138c8:	pop	{fp, pc}
   138cc:	push	{fp, lr}
   138d0:	mov	fp, sp
   138d4:	movw	r0, #24900	; 0x6144
   138d8:	movt	r0, #2
   138dc:	ldr	r1, [r0]
   138e0:	movw	r0, #19023	; 0x4a4f
   138e4:	movt	r0, #1
   138e8:	bl	10dcc <fputs_unlocked@plt>
   138ec:	movw	r1, #20151	; 0x4eb7
   138f0:	mov	r0, #0
   138f4:	mov	r2, #5
   138f8:	movt	r1, #1
   138fc:	bl	10e50 <dcgettext@plt>
   13900:	movw	r2, #20171	; 0x4ecb
   13904:	mov	r1, r0
   13908:	mov	r0, #1
   1390c:	movt	r2, #1
   13910:	bl	10f7c <__printf_chk@plt>
   13914:	movw	r1, #20193	; 0x4ee1
   13918:	mov	r0, #0
   1391c:	mov	r2, #5
   13920:	movt	r1, #1
   13924:	bl	10e50 <dcgettext@plt>
   13928:	movw	r2, #18581	; 0x4895
   1392c:	movw	r3, #18832	; 0x4990
   13930:	mov	r1, r0
   13934:	mov	r0, #1
   13938:	movt	r2, #1
   1393c:	movt	r3, #1
   13940:	bl	10f7c <__printf_chk@plt>
   13944:	movw	r1, #20213	; 0x4ef5
   13948:	mov	r0, #0
   1394c:	mov	r2, #5
   13950:	movt	r1, #1
   13954:	bl	10e50 <dcgettext@plt>
   13958:	movw	r2, #20252	; 0x4f1c
   1395c:	mov	r1, r0
   13960:	mov	r0, #1
   13964:	movt	r2, #1
   13968:	pop	{fp, lr}
   1396c:	b	10f7c <__printf_chk@plt>
   13970:	b	13974 <putchar_unlocked@plt+0x2950>
   13974:	push	{r4, r5, r6, sl, fp, lr}
   13978:	add	fp, sp, #16
   1397c:	mov	r4, r2
   13980:	mov	r5, r1
   13984:	mov	r6, r0
   13988:	bl	143f0 <putchar_unlocked@plt+0x33cc>
   1398c:	cmp	r0, #0
   13990:	popne	{r4, r5, r6, sl, fp, pc}
   13994:	cmp	r6, #0
   13998:	beq	139ac <putchar_unlocked@plt+0x2988>
   1399c:	cmp	r5, #0
   139a0:	cmpne	r4, #0
   139a4:	bne	139ac <putchar_unlocked@plt+0x2988>
   139a8:	pop	{r4, r5, r6, sl, fp, pc}
   139ac:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   139b0:	push	{fp, lr}
   139b4:	mov	fp, sp
   139b8:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   139bc:	cmp	r0, #0
   139c0:	popne	{fp, pc}
   139c4:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   139c8:	push	{fp, lr}
   139cc:	mov	fp, sp
   139d0:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   139d4:	cmp	r0, #0
   139d8:	popne	{fp, pc}
   139dc:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   139e0:	push	{fp, lr}
   139e4:	mov	fp, sp
   139e8:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   139ec:	cmp	r0, #0
   139f0:	popne	{fp, pc}
   139f4:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   139f8:	push	{r4, r5, fp, lr}
   139fc:	add	fp, sp, #8
   13a00:	mov	r4, r1
   13a04:	mov	r5, r0
   13a08:	bl	13ed8 <putchar_unlocked@plt+0x2eb4>
   13a0c:	cmp	r0, #0
   13a10:	popne	{r4, r5, fp, pc}
   13a14:	cmp	r5, #0
   13a18:	beq	13a28 <putchar_unlocked@plt+0x2a04>
   13a1c:	cmp	r4, #0
   13a20:	bne	13a28 <putchar_unlocked@plt+0x2a04>
   13a24:	pop	{r4, r5, fp, pc}
   13a28:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13a2c:	push	{fp, lr}
   13a30:	mov	fp, sp
   13a34:	cmp	r1, #0
   13a38:	orreq	r1, r1, #1
   13a3c:	bl	13ed8 <putchar_unlocked@plt+0x2eb4>
   13a40:	cmp	r0, #0
   13a44:	popne	{fp, pc}
   13a48:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13a4c:	push	{fp, lr}
   13a50:	mov	fp, sp
   13a54:	clz	r3, r2
   13a58:	lsr	ip, r3, #5
   13a5c:	clz	r3, r1
   13a60:	lsr	r3, r3, #5
   13a64:	orrs	r3, r3, ip
   13a68:	movwne	r1, #1
   13a6c:	movwne	r2, #1
   13a70:	bl	143f0 <putchar_unlocked@plt+0x33cc>
   13a74:	cmp	r0, #0
   13a78:	popne	{fp, pc}
   13a7c:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13a80:	push	{fp, lr}
   13a84:	mov	fp, sp
   13a88:	mov	r2, r1
   13a8c:	mov	r1, r0
   13a90:	mov	r0, #0
   13a94:	bl	143f0 <putchar_unlocked@plt+0x33cc>
   13a98:	cmp	r0, #0
   13a9c:	popne	{fp, pc}
   13aa0:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13aa4:	mov	r2, r1
   13aa8:	mov	r1, r0
   13aac:	mov	r0, #0
   13ab0:	b	13a4c <putchar_unlocked@plt+0x2a28>
   13ab4:	mov	r2, #1
   13ab8:	b	13abc <putchar_unlocked@plt+0x2a98>
   13abc:	push	{r4, r5, fp, lr}
   13ac0:	add	fp, sp, #8
   13ac4:	ldr	r5, [r1]
   13ac8:	mov	r4, r1
   13acc:	cmp	r0, #0
   13ad0:	beq	13ae8 <putchar_unlocked@plt+0x2ac4>
   13ad4:	mov	r1, #1
   13ad8:	add	r1, r1, r5, lsr #1
   13adc:	adds	r5, r5, r1
   13ae0:	bcc	13b00 <putchar_unlocked@plt+0x2adc>
   13ae4:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13ae8:	cmp	r5, #0
   13aec:	bne	13b00 <putchar_unlocked@plt+0x2adc>
   13af0:	mov	r1, #64	; 0x40
   13af4:	cmp	r2, #64	; 0x40
   13af8:	udiv	r5, r1, r2
   13afc:	addhi	r5, r5, #1
   13b00:	mov	r1, r5
   13b04:	bl	13974 <putchar_unlocked@plt+0x2950>
   13b08:	str	r5, [r4]
   13b0c:	pop	{r4, r5, fp, pc}
   13b10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b14:	add	fp, sp, #24
   13b18:	ldr	r6, [r1]
   13b1c:	mov	r8, r1
   13b20:	ldr	r4, [fp, #8]
   13b24:	add	r1, r6, r6, asr #1
   13b28:	cmp	r1, r6
   13b2c:	mvnvs	r1, #-2147483648	; 0x80000000
   13b30:	cmp	r1, r3
   13b34:	mov	r5, r1
   13b38:	movgt	r5, r3
   13b3c:	cmn	r3, #1
   13b40:	movle	r5, r1
   13b44:	cmn	r4, #1
   13b48:	ble	13b68 <putchar_unlocked@plt+0x2b44>
   13b4c:	cmp	r4, #0
   13b50:	beq	13bbc <putchar_unlocked@plt+0x2b98>
   13b54:	cmn	r5, #1
   13b58:	ble	13b90 <putchar_unlocked@plt+0x2b6c>
   13b5c:	mvn	r7, #-2147483648	; 0x80000000
   13b60:	udiv	r1, r7, r4
   13b64:	b	13b84 <putchar_unlocked@plt+0x2b60>
   13b68:	cmn	r5, #1
   13b6c:	ble	13bac <putchar_unlocked@plt+0x2b88>
   13b70:	cmn	r4, #1
   13b74:	beq	13bbc <putchar_unlocked@plt+0x2b98>
   13b78:	mov	r1, #-2147483648	; 0x80000000
   13b7c:	mvn	r7, #-2147483648	; 0x80000000
   13b80:	sdiv	r1, r1, r4
   13b84:	cmp	r1, r5
   13b88:	bge	13bbc <putchar_unlocked@plt+0x2b98>
   13b8c:	b	13bcc <putchar_unlocked@plt+0x2ba8>
   13b90:	beq	13bbc <putchar_unlocked@plt+0x2b98>
   13b94:	mov	r1, #-2147483648	; 0x80000000
   13b98:	mvn	r7, #-2147483648	; 0x80000000
   13b9c:	sdiv	r1, r1, r5
   13ba0:	cmp	r1, r4
   13ba4:	bge	13bbc <putchar_unlocked@plt+0x2b98>
   13ba8:	b	13bcc <putchar_unlocked@plt+0x2ba8>
   13bac:	mvn	r7, #-2147483648	; 0x80000000
   13bb0:	sdiv	r1, r7, r4
   13bb4:	cmp	r5, r1
   13bb8:	blt	13bcc <putchar_unlocked@plt+0x2ba8>
   13bbc:	mul	r1, r5, r4
   13bc0:	mov	r7, #64	; 0x40
   13bc4:	cmp	r1, #63	; 0x3f
   13bc8:	bgt	13bd4 <putchar_unlocked@plt+0x2bb0>
   13bcc:	sdiv	r5, r7, r4
   13bd0:	mul	r1, r5, r4
   13bd4:	cmp	r0, #0
   13bd8:	moveq	r7, #0
   13bdc:	streq	r7, [r8]
   13be0:	sub	r7, r5, r6
   13be4:	cmp	r7, r2
   13be8:	bge	13c8c <putchar_unlocked@plt+0x2c68>
   13bec:	add	r5, r6, r2
   13bf0:	mov	r2, #0
   13bf4:	mov	r1, #0
   13bf8:	cmp	r5, r3
   13bfc:	movwgt	r2, #1
   13c00:	cmn	r3, #1
   13c04:	movwgt	r1, #1
   13c08:	cmp	r5, r6
   13c0c:	bvs	13c74 <putchar_unlocked@plt+0x2c50>
   13c10:	ands	r1, r1, r2
   13c14:	bne	13c74 <putchar_unlocked@plt+0x2c50>
   13c18:	cmn	r4, #1
   13c1c:	ble	13c3c <putchar_unlocked@plt+0x2c18>
   13c20:	cmp	r4, #0
   13c24:	beq	13c88 <putchar_unlocked@plt+0x2c64>
   13c28:	cmn	r5, #1
   13c2c:	ble	13c60 <putchar_unlocked@plt+0x2c3c>
   13c30:	mvn	r1, #-2147483648	; 0x80000000
   13c34:	udiv	r1, r1, r4
   13c38:	b	13c54 <putchar_unlocked@plt+0x2c30>
   13c3c:	cmn	r5, #1
   13c40:	ble	13c78 <putchar_unlocked@plt+0x2c54>
   13c44:	cmn	r4, #1
   13c48:	beq	13c88 <putchar_unlocked@plt+0x2c64>
   13c4c:	mov	r1, #-2147483648	; 0x80000000
   13c50:	sdiv	r1, r1, r4
   13c54:	cmp	r1, r5
   13c58:	bge	13c88 <putchar_unlocked@plt+0x2c64>
   13c5c:	b	13c74 <putchar_unlocked@plt+0x2c50>
   13c60:	beq	13c88 <putchar_unlocked@plt+0x2c64>
   13c64:	mov	r1, #-2147483648	; 0x80000000
   13c68:	sdiv	r1, r1, r5
   13c6c:	cmp	r1, r4
   13c70:	bge	13c88 <putchar_unlocked@plt+0x2c64>
   13c74:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13c78:	mvn	r1, #-2147483648	; 0x80000000
   13c7c:	sdiv	r1, r1, r4
   13c80:	cmp	r5, r1
   13c84:	blt	13c74 <putchar_unlocked@plt+0x2c50>
   13c88:	mul	r1, r5, r4
   13c8c:	bl	139f8 <putchar_unlocked@plt+0x29d4>
   13c90:	str	r5, [r8]
   13c94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	mov	r1, #1
   13ca4:	bl	13e54 <putchar_unlocked@plt+0x2e30>
   13ca8:	cmp	r0, #0
   13cac:	popne	{fp, pc}
   13cb0:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13cb4:	push	{fp, lr}
   13cb8:	mov	fp, sp
   13cbc:	bl	13e54 <putchar_unlocked@plt+0x2e30>
   13cc0:	cmp	r0, #0
   13cc4:	popne	{fp, pc}
   13cc8:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13ccc:	push	{fp, lr}
   13cd0:	mov	fp, sp
   13cd4:	mov	r1, #1
   13cd8:	bl	13e54 <putchar_unlocked@plt+0x2e30>
   13cdc:	cmp	r0, #0
   13ce0:	popne	{fp, pc}
   13ce4:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13ce8:	push	{fp, lr}
   13cec:	mov	fp, sp
   13cf0:	bl	13e54 <putchar_unlocked@plt+0x2e30>
   13cf4:	cmp	r0, #0
   13cf8:	popne	{fp, pc}
   13cfc:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13d00:	push	{r4, r5, fp, lr}
   13d04:	add	fp, sp, #8
   13d08:	mov	r5, r0
   13d0c:	mov	r0, r1
   13d10:	mov	r4, r1
   13d14:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   13d18:	cmp	r0, #0
   13d1c:	beq	13d30 <putchar_unlocked@plt+0x2d0c>
   13d20:	mov	r1, r5
   13d24:	mov	r2, r4
   13d28:	pop	{r4, r5, fp, lr}
   13d2c:	b	10e38 <memcpy@plt>
   13d30:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13d34:	push	{r4, r5, fp, lr}
   13d38:	add	fp, sp, #8
   13d3c:	mov	r5, r0
   13d40:	mov	r0, r1
   13d44:	mov	r4, r1
   13d48:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   13d4c:	cmp	r0, #0
   13d50:	beq	13d64 <putchar_unlocked@plt+0x2d40>
   13d54:	mov	r1, r5
   13d58:	mov	r2, r4
   13d5c:	pop	{r4, r5, fp, lr}
   13d60:	b	10e38 <memcpy@plt>
   13d64:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13d68:	push	{r4, r5, fp, lr}
   13d6c:	add	fp, sp, #8
   13d70:	mov	r5, r0
   13d74:	add	r0, r1, #1
   13d78:	mov	r4, r1
   13d7c:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   13d80:	cmp	r0, #0
   13d84:	beq	13da0 <putchar_unlocked@plt+0x2d7c>
   13d88:	mov	r1, #0
   13d8c:	mov	r2, r4
   13d90:	strb	r1, [r0, r4]
   13d94:	mov	r1, r5
   13d98:	pop	{r4, r5, fp, lr}
   13d9c:	b	10e38 <memcpy@plt>
   13da0:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13da4:	push	{r4, r5, fp, lr}
   13da8:	add	fp, sp, #8
   13dac:	mov	r4, r0
   13db0:	bl	10f34 <strlen@plt>
   13db4:	add	r5, r0, #1
   13db8:	mov	r0, r5
   13dbc:	bl	13ea8 <putchar_unlocked@plt+0x2e84>
   13dc0:	cmp	r0, #0
   13dc4:	beq	13dd8 <putchar_unlocked@plt+0x2db4>
   13dc8:	mov	r1, r4
   13dcc:	mov	r2, r5
   13dd0:	pop	{r4, r5, fp, lr}
   13dd4:	b	10e38 <memcpy@plt>
   13dd8:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	movw	r0, #24812	; 0x60ec
   13de8:	movw	r1, #20328	; 0x4f68
   13dec:	mov	r2, #5
   13df0:	movt	r0, #2
   13df4:	movt	r1, #1
   13df8:	ldr	r4, [r0]
   13dfc:	mov	r0, #0
   13e00:	bl	10e50 <dcgettext@plt>
   13e04:	movw	r2, #19287	; 0x4b57
   13e08:	mov	r3, r0
   13e0c:	mov	r0, r4
   13e10:	mov	r1, #0
   13e14:	movt	r2, #1
   13e18:	bl	10ec8 <error@plt>
   13e1c:	bl	1100c <abort@plt>
   13e20:	push	{r4, sl, fp, lr}
   13e24:	add	fp, sp, #8
   13e28:	bl	141e0 <putchar_unlocked@plt+0x31bc>
   13e2c:	mov	r4, r0
   13e30:	cmn	r0, #1
   13e34:	bne	13e48 <putchar_unlocked@plt+0x2e24>
   13e38:	bl	10f40 <__errno_location@plt>
   13e3c:	ldr	r0, [r0]
   13e40:	cmp	r0, #12
   13e44:	beq	13e50 <putchar_unlocked@plt+0x2e2c>
   13e48:	mov	r0, r4
   13e4c:	pop	{r4, sl, fp, pc}
   13e50:	bl	13ddc <putchar_unlocked@plt+0x2db8>
   13e54:	clz	r2, r1
   13e58:	clz	r3, r0
   13e5c:	lsr	r2, r2, #5
   13e60:	lsr	r3, r3, #5
   13e64:	orrs	r2, r3, r2
   13e68:	movwne	r1, #1
   13e6c:	movwne	r0, #1
   13e70:	cmp	r1, #0
   13e74:	beq	13ea4 <putchar_unlocked@plt+0x2e80>
   13e78:	mvn	r2, #-2147483648	; 0x80000000
   13e7c:	udiv	r2, r2, r1
   13e80:	cmp	r2, r0
   13e84:	bcs	13ea4 <putchar_unlocked@plt+0x2e80>
   13e88:	push	{fp, lr}
   13e8c:	mov	fp, sp
   13e90:	bl	10f40 <__errno_location@plt>
   13e94:	mov	r1, #12
   13e98:	str	r1, [r0]
   13e9c:	mov	r0, #0
   13ea0:	pop	{fp, pc}
   13ea4:	b	10dc0 <calloc@plt>
   13ea8:	cmp	r0, #0
   13eac:	movweq	r0, #1
   13eb0:	cmn	r0, #1
   13eb4:	ble	13ebc <putchar_unlocked@plt+0x2e98>
   13eb8:	b	10ed4 <malloc@plt>
   13ebc:	push	{fp, lr}
   13ec0:	mov	fp, sp
   13ec4:	bl	10f40 <__errno_location@plt>
   13ec8:	mov	r1, #12
   13ecc:	str	r1, [r0]
   13ed0:	mov	r0, #0
   13ed4:	pop	{fp, pc}
   13ed8:	push	{fp, lr}
   13edc:	mov	fp, sp
   13ee0:	cmp	r0, #0
   13ee4:	beq	13f00 <putchar_unlocked@plt+0x2edc>
   13ee8:	cmp	r1, #0
   13eec:	beq	13f0c <putchar_unlocked@plt+0x2ee8>
   13ef0:	cmn	r1, #1
   13ef4:	ble	13f14 <putchar_unlocked@plt+0x2ef0>
   13ef8:	pop	{fp, lr}
   13efc:	b	10e5c <realloc@plt>
   13f00:	mov	r0, r1
   13f04:	pop	{fp, lr}
   13f08:	b	13ea8 <putchar_unlocked@plt+0x2e84>
   13f0c:	bl	11934 <putchar_unlocked@plt+0x910>
   13f10:	b	13f20 <putchar_unlocked@plt+0x2efc>
   13f14:	bl	10f40 <__errno_location@plt>
   13f18:	mov	r1, #12
   13f1c:	str	r1, [r0]
   13f20:	mov	r0, #0
   13f24:	pop	{fp, pc}
   13f28:	push	{r4, r5, r6, sl, fp, lr}
   13f2c:	add	fp, sp, #16
   13f30:	mov	r4, r0
   13f34:	bl	10ea4 <__fpending@plt>
   13f38:	mov	r5, r0
   13f3c:	mov	r0, r4
   13f40:	bl	10eb0 <ferror_unlocked@plt>
   13f44:	mov	r6, r0
   13f48:	mov	r0, r4
   13f4c:	bl	13fa8 <putchar_unlocked@plt+0x2f84>
   13f50:	cmp	r6, #0
   13f54:	beq	13f74 <putchar_unlocked@plt+0x2f50>
   13f58:	mvn	r4, #0
   13f5c:	cmp	r0, #0
   13f60:	bne	13fa0 <putchar_unlocked@plt+0x2f7c>
   13f64:	bl	10f40 <__errno_location@plt>
   13f68:	mov	r1, #0
   13f6c:	str	r1, [r0]
   13f70:	b	13fa0 <putchar_unlocked@plt+0x2f7c>
   13f74:	cmp	r0, #0
   13f78:	mov	r4, r0
   13f7c:	mvnne	r4, #0
   13f80:	cmp	r5, #0
   13f84:	bne	13fa0 <putchar_unlocked@plt+0x2f7c>
   13f88:	cmp	r0, #0
   13f8c:	beq	13fa0 <putchar_unlocked@plt+0x2f7c>
   13f90:	bl	10f40 <__errno_location@plt>
   13f94:	ldr	r0, [r0]
   13f98:	subs	r4, r0, #9
   13f9c:	mvnne	r4, #0
   13fa0:	mov	r0, r4
   13fa4:	pop	{r4, r5, r6, sl, fp, pc}
   13fa8:	push	{r4, r5, r6, sl, fp, lr}
   13fac:	add	fp, sp, #16
   13fb0:	sub	sp, sp, #8
   13fb4:	mov	r4, r0
   13fb8:	bl	10f88 <fileno@plt>
   13fbc:	cmn	r0, #1
   13fc0:	ble	14034 <putchar_unlocked@plt+0x3010>
   13fc4:	mov	r0, r4
   13fc8:	bl	10eec <__freading@plt>
   13fcc:	cmp	r0, #0
   13fd0:	beq	13ffc <putchar_unlocked@plt+0x2fd8>
   13fd4:	mov	r0, r4
   13fd8:	bl	10f88 <fileno@plt>
   13fdc:	mov	r1, #1
   13fe0:	mov	r2, #0
   13fe4:	mov	r3, #0
   13fe8:	str	r1, [sp]
   13fec:	bl	10e8c <lseek64@plt>
   13ff0:	and	r0, r0, r1
   13ff4:	cmn	r0, #1
   13ff8:	beq	14034 <putchar_unlocked@plt+0x3010>
   13ffc:	mov	r0, r4
   14000:	bl	14044 <putchar_unlocked@plt+0x3020>
   14004:	cmp	r0, #0
   14008:	beq	14034 <putchar_unlocked@plt+0x3010>
   1400c:	bl	10f40 <__errno_location@plt>
   14010:	ldr	r6, [r0]
   14014:	mov	r5, r0
   14018:	mov	r0, r4
   1401c:	bl	10fa0 <fclose@plt>
   14020:	cmp	r6, #0
   14024:	strne	r6, [r5]
   14028:	mvnne	r0, #0
   1402c:	sub	sp, fp, #16
   14030:	pop	{r4, r5, r6, sl, fp, pc}
   14034:	mov	r0, r4
   14038:	sub	sp, fp, #16
   1403c:	pop	{r4, r5, r6, sl, fp, lr}
   14040:	b	10fa0 <fclose@plt>
   14044:	push	{r4, sl, fp, lr}
   14048:	add	fp, sp, #8
   1404c:	sub	sp, sp, #8
   14050:	mov	r4, r0
   14054:	cmp	r0, #0
   14058:	beq	14090 <putchar_unlocked@plt+0x306c>
   1405c:	mov	r0, r4
   14060:	bl	10eec <__freading@plt>
   14064:	cmp	r0, #0
   14068:	beq	14090 <putchar_unlocked@plt+0x306c>
   1406c:	ldrb	r0, [r4, #1]
   14070:	tst	r0, #1
   14074:	beq	14090 <putchar_unlocked@plt+0x306c>
   14078:	mov	r0, #1
   1407c:	mov	r2, #0
   14080:	mov	r3, #0
   14084:	str	r0, [sp]
   14088:	mov	r0, r4
   1408c:	bl	140a0 <putchar_unlocked@plt+0x307c>
   14090:	mov	r0, r4
   14094:	sub	sp, fp, #8
   14098:	pop	{r4, sl, fp, lr}
   1409c:	b	10e08 <fflush@plt>
   140a0:	push	{r4, r5, r6, r7, fp, lr}
   140a4:	add	fp, sp, #16
   140a8:	sub	sp, sp, #8
   140ac:	mov	r4, r0
   140b0:	ldr	r0, [r0, #4]
   140b4:	mov	r5, r3
   140b8:	mov	r6, r2
   140bc:	ldr	r1, [r4, #8]
   140c0:	cmp	r1, r0
   140c4:	bne	140e0 <putchar_unlocked@plt+0x30bc>
   140c8:	ldrd	r0, [r4, #16]
   140cc:	cmp	r1, r0
   140d0:	bne	140e0 <putchar_unlocked@plt+0x30bc>
   140d4:	ldr	r0, [r4, #36]	; 0x24
   140d8:	cmp	r0, #0
   140dc:	beq	140f8 <putchar_unlocked@plt+0x30d4>
   140e0:	mov	r0, r4
   140e4:	mov	r2, r6
   140e8:	mov	r3, r5
   140ec:	sub	sp, fp, #16
   140f0:	pop	{r4, r5, r6, r7, fp, lr}
   140f4:	b	10fac <fseeko64@plt>
   140f8:	ldr	r7, [fp, #8]
   140fc:	mov	r0, r4
   14100:	bl	10f88 <fileno@plt>
   14104:	mov	r2, r6
   14108:	mov	r3, r5
   1410c:	str	r7, [sp]
   14110:	bl	10e8c <lseek64@plt>
   14114:	and	r2, r0, r1
   14118:	cmn	r2, #1
   1411c:	beq	14138 <putchar_unlocked@plt+0x3114>
   14120:	strd	r0, [r4, #80]	; 0x50
   14124:	ldr	r0, [r4]
   14128:	bic	r0, r0, #16
   1412c:	str	r0, [r4]
   14130:	mov	r0, #0
   14134:	b	1413c <putchar_unlocked@plt+0x3118>
   14138:	mvn	r0, #0
   1413c:	sub	sp, fp, #16
   14140:	pop	{r4, r5, r6, r7, fp, pc}
   14144:	push	{fp, lr}
   14148:	mov	fp, sp
   1414c:	mov	r0, #14
   14150:	bl	10fd0 <nl_langinfo@plt>
   14154:	movw	r1, #19024	; 0x4a50
   14158:	cmp	r0, #0
   1415c:	movt	r1, #1
   14160:	movne	r1, r0
   14164:	movw	r0, #20345	; 0x4f79
   14168:	ldrb	r2, [r1]
   1416c:	movt	r0, #1
   14170:	cmp	r2, #0
   14174:	movne	r0, r1
   14178:	pop	{fp, pc}
   1417c:	push	{r4, r5, r6, r7, fp, lr}
   14180:	add	fp, sp, #16
   14184:	sub	sp, sp, #8
   14188:	cmp	r0, #0
   1418c:	add	r5, sp, #4
   14190:	mov	r7, r2
   14194:	mov	r4, r1
   14198:	movne	r5, r0
   1419c:	mov	r0, r5
   141a0:	bl	10ebc <mbrtowc@plt>
   141a4:	mov	r6, r0
   141a8:	cmp	r7, #0
   141ac:	beq	141d4 <putchar_unlocked@plt+0x31b0>
   141b0:	cmn	r6, #2
   141b4:	bcc	141d4 <putchar_unlocked@plt+0x31b0>
   141b8:	mov	r0, #0
   141bc:	bl	1442c <putchar_unlocked@plt+0x3408>
   141c0:	cmp	r0, #0
   141c4:	bne	141d4 <putchar_unlocked@plt+0x31b0>
   141c8:	ldrb	r0, [r4]
   141cc:	mov	r6, #1
   141d0:	str	r0, [r5]
   141d4:	mov	r0, r6
   141d8:	sub	sp, fp, #16
   141dc:	pop	{r4, r5, r6, r7, fp, pc}
   141e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141e4:	add	fp, sp, #28
   141e8:	sub	sp, sp, #12
   141ec:	mov	r5, r2
   141f0:	mov	sl, r1
   141f4:	cmp	r0, #0
   141f8:	beq	14280 <putchar_unlocked@plt+0x325c>
   141fc:	mov	r7, r0
   14200:	mov	r8, #10
   14204:	mov	r0, #0
   14208:	mov	r1, #40	; 0x28
   1420c:	str	r8, [sp, #8]
   14210:	bl	13ed8 <putchar_unlocked@plt+0x2eb4>
   14214:	mvn	r9, #0
   14218:	cmp	r0, #0
   1421c:	beq	143b0 <putchar_unlocked@plt+0x338c>
   14220:	str	r5, [sp, #4]
   14224:	mov	r4, r0
   14228:	add	r5, sp, #8
   1422c:	mov	r0, r7
   14230:	mov	r1, sl
   14234:	mov	r2, r4
   14238:	mov	r3, r5
   1423c:	bl	10f64 <getgrouplist@plt>
   14240:	ldr	r1, [sp, #8]
   14244:	mov	r6, r0
   14248:	cmn	r0, #1
   1424c:	bgt	1425c <putchar_unlocked@plt+0x3238>
   14250:	cmp	r8, r1
   14254:	lsleq	r1, r8, #1
   14258:	streq	r1, [sp, #8]
   1425c:	mov	r0, r4
   14260:	bl	143c4 <putchar_unlocked@plt+0x33a0>
   14264:	cmp	r0, #0
   14268:	beq	14348 <putchar_unlocked@plt+0x3324>
   1426c:	cmn	r6, #1
   14270:	bgt	14350 <putchar_unlocked@plt+0x332c>
   14274:	ldr	r8, [sp, #8]
   14278:	mov	r4, r0
   1427c:	b	1422c <putchar_unlocked@plt+0x3208>
   14280:	mov	r0, #0
   14284:	mov	r1, #0
   14288:	bl	10fdc <getgroups@plt>
   1428c:	cmn	r0, #1
   14290:	str	r0, [sp, #8]
   14294:	ble	14360 <putchar_unlocked@plt+0x333c>
   14298:	mov	r4, r0
   1429c:	cmn	sl, #1
   142a0:	bne	142ac <putchar_unlocked@plt+0x3288>
   142a4:	cmp	r4, #0
   142a8:	bne	142b4 <putchar_unlocked@plt+0x3290>
   142ac:	add	r4, r4, #1
   142b0:	str	r4, [sp, #8]
   142b4:	mov	r0, #0
   142b8:	mov	r1, r4
   142bc:	bl	143c4 <putchar_unlocked@plt+0x33a0>
   142c0:	cmp	r0, #0
   142c4:	beq	143a0 <putchar_unlocked@plt+0x337c>
   142c8:	mvn	r9, #0
   142cc:	mov	r7, r0
   142d0:	subs	r1, sl, r9
   142d4:	movwne	r1, #1
   142d8:	sub	r0, r4, r1
   142dc:	add	r1, r7, r1, lsl #2
   142e0:	bl	10fdc <getgroups@plt>
   142e4:	cmn	r0, #1
   142e8:	ble	143a8 <putchar_unlocked@plt+0x3384>
   142ec:	cmn	sl, #1
   142f0:	addne	r0, r0, #1
   142f4:	strne	sl, [r7]
   142f8:	str	r7, [r5]
   142fc:	cmp	r0, #2
   14300:	blt	143bc <putchar_unlocked@plt+0x3398>
   14304:	mov	r2, r7
   14308:	add	r1, r7, r0, lsl #2
   1430c:	mov	r9, r0
   14310:	ldr	r6, [r2], #4
   14314:	mov	r3, r6
   14318:	ldr	r0, [r2]
   1431c:	cmp	r0, r6
   14320:	cmpne	r0, r3
   14324:	bne	14330 <putchar_unlocked@plt+0x330c>
   14328:	sub	r9, r9, #1
   1432c:	b	14338 <putchar_unlocked@plt+0x3314>
   14330:	str	r0, [r7, #4]!
   14334:	mov	r3, r0
   14338:	add	r2, r2, #4
   1433c:	cmp	r2, r1
   14340:	bcc	14318 <putchar_unlocked@plt+0x32f4>
   14344:	b	143b0 <putchar_unlocked@plt+0x338c>
   14348:	mov	r0, r4
   1434c:	b	143ac <putchar_unlocked@plt+0x3388>
   14350:	ldr	r1, [sp, #4]
   14354:	str	r0, [r1]
   14358:	ldr	r9, [sp, #8]
   1435c:	b	143b0 <putchar_unlocked@plt+0x338c>
   14360:	bl	10f40 <__errno_location@plt>
   14364:	ldr	r0, [r0]
   14368:	mvn	r9, #0
   1436c:	cmp	r0, #38	; 0x26
   14370:	bne	143b0 <putchar_unlocked@plt+0x338c>
   14374:	mov	r0, #0
   14378:	mov	r1, #4
   1437c:	bl	13ed8 <putchar_unlocked@plt+0x2eb4>
   14380:	cmp	r0, #0
   14384:	beq	143b0 <putchar_unlocked@plt+0x338c>
   14388:	str	r0, [r5]
   1438c:	str	sl, [r0]
   14390:	mvn	r0, #0
   14394:	subs	r9, sl, r0
   14398:	movwne	r9, #1
   1439c:	b	143b0 <putchar_unlocked@plt+0x338c>
   143a0:	mvn	r9, #0
   143a4:	b	143b0 <putchar_unlocked@plt+0x338c>
   143a8:	mov	r0, r7
   143ac:	bl	11934 <putchar_unlocked@plt+0x910>
   143b0:	mov	r0, r9
   143b4:	sub	sp, fp, #28
   143b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143bc:	mov	r9, r0
   143c0:	b	143b0 <putchar_unlocked@plt+0x338c>
   143c4:	cmp	r1, #536870912	; 0x20000000
   143c8:	bcc	143e8 <putchar_unlocked@plt+0x33c4>
   143cc:	push	{fp, lr}
   143d0:	mov	fp, sp
   143d4:	bl	10f40 <__errno_location@plt>
   143d8:	mov	r1, #12
   143dc:	str	r1, [r0]
   143e0:	mov	r0, #0
   143e4:	pop	{fp, pc}
   143e8:	lsl	r1, r1, #2
   143ec:	b	13ed8 <putchar_unlocked@plt+0x2eb4>
   143f0:	cmp	r2, #0
   143f4:	beq	14424 <putchar_unlocked@plt+0x3400>
   143f8:	mvn	r3, #0
   143fc:	udiv	r3, r3, r2
   14400:	cmp	r3, r1
   14404:	bcs	14424 <putchar_unlocked@plt+0x3400>
   14408:	push	{fp, lr}
   1440c:	mov	fp, sp
   14410:	bl	10f40 <__errno_location@plt>
   14414:	mov	r1, #12
   14418:	str	r1, [r0]
   1441c:	mov	r0, #0
   14420:	pop	{fp, pc}
   14424:	mul	r1, r2, r1
   14428:	b	13ed8 <putchar_unlocked@plt+0x2eb4>
   1442c:	push	{r4, sl, fp, lr}
   14430:	add	fp, sp, #8
   14434:	sub	sp, sp, #264	; 0x108
   14438:	add	r1, sp, #7
   1443c:	movw	r2, #257	; 0x101
   14440:	bl	14498 <putchar_unlocked@plt+0x3474>
   14444:	mov	r4, #0
   14448:	cmp	r0, #0
   1444c:	bne	1448c <putchar_unlocked@plt+0x3468>
   14450:	movw	r1, #20351	; 0x4f7f
   14454:	add	r0, sp, #7
   14458:	mov	r2, #2
   1445c:	movt	r1, #1
   14460:	bl	10f28 <bcmp@plt>
   14464:	cmp	r0, #0
   14468:	beq	1448c <putchar_unlocked@plt+0x3468>
   1446c:	movw	r1, #20353	; 0x4f81
   14470:	add	r0, sp, #7
   14474:	mov	r2, #6
   14478:	movt	r1, #1
   1447c:	bl	10f28 <bcmp@plt>
   14480:	cmp	r0, #0
   14484:	mov	r4, r0
   14488:	movwne	r4, #1
   1448c:	mov	r0, r4
   14490:	sub	sp, fp, #8
   14494:	pop	{r4, sl, fp, pc}
   14498:	push	{r4, r5, r6, r7, fp, lr}
   1449c:	add	fp, sp, #16
   144a0:	mov	r4, r1
   144a4:	mov	r1, #0
   144a8:	mov	r6, r2
   144ac:	bl	10fb8 <setlocale@plt>
   144b0:	cmp	r0, #0
   144b4:	beq	144e0 <putchar_unlocked@plt+0x34bc>
   144b8:	mov	r7, r0
   144bc:	bl	10f34 <strlen@plt>
   144c0:	cmp	r0, r6
   144c4:	bcs	144f4 <putchar_unlocked@plt+0x34d0>
   144c8:	add	r2, r0, #1
   144cc:	mov	r0, r4
   144d0:	mov	r1, r7
   144d4:	bl	10e38 <memcpy@plt>
   144d8:	mov	r5, #0
   144dc:	b	1451c <putchar_unlocked@plt+0x34f8>
   144e0:	cmp	r6, #0
   144e4:	mov	r5, #22
   144e8:	movne	r0, #0
   144ec:	strbne	r0, [r4]
   144f0:	b	1451c <putchar_unlocked@plt+0x34f8>
   144f4:	mov	r5, #34	; 0x22
   144f8:	cmp	r6, #0
   144fc:	beq	1451c <putchar_unlocked@plt+0x34f8>
   14500:	sub	r6, r6, #1
   14504:	mov	r0, r4
   14508:	mov	r1, r7
   1450c:	mov	r2, r6
   14510:	bl	10e38 <memcpy@plt>
   14514:	mov	r0, #0
   14518:	strb	r0, [r4, r6]
   1451c:	mov	r0, r5
   14520:	pop	{r4, r5, r6, r7, fp, pc}
   14524:	mov	r1, #0
   14528:	b	10fb8 <setlocale@plt>
   1452c:	cmp	r3, #0
   14530:	cmpeq	r2, #0
   14534:	bne	1454c <putchar_unlocked@plt+0x3528>
   14538:	cmp	r1, #0
   1453c:	cmpeq	r0, #0
   14540:	mvnne	r1, #0
   14544:	mvnne	r0, #0
   14548:	b	14568 <putchar_unlocked@plt+0x3544>
   1454c:	sub	sp, sp, #8
   14550:	push	{sp, lr}
   14554:	bl	14578 <putchar_unlocked@plt+0x3554>
   14558:	ldr	lr, [sp, #4]
   1455c:	add	sp, sp, #8
   14560:	pop	{r2, r3}
   14564:	bx	lr
   14568:	push	{r1, lr}
   1456c:	mov	r0, #8
   14570:	bl	10dd8 <raise@plt>
   14574:	pop	{r1, pc}
   14578:	cmp	r1, r3
   1457c:	cmpeq	r0, r2
   14580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14584:	mov	r4, r0
   14588:	movcc	r0, #0
   1458c:	mov	r5, r1
   14590:	ldr	lr, [sp, #36]	; 0x24
   14594:	movcc	r1, r0
   14598:	bcc	14694 <putchar_unlocked@plt+0x3670>
   1459c:	cmp	r3, #0
   145a0:	clzeq	ip, r2
   145a4:	clzne	ip, r3
   145a8:	addeq	ip, ip, #32
   145ac:	cmp	r5, #0
   145b0:	clzeq	r1, r4
   145b4:	addeq	r1, r1, #32
   145b8:	clzne	r1, r5
   145bc:	sub	ip, ip, r1
   145c0:	sub	sl, ip, #32
   145c4:	lsl	r9, r3, ip
   145c8:	rsb	fp, ip, #32
   145cc:	orr	r9, r9, r2, lsl sl
   145d0:	orr	r9, r9, r2, lsr fp
   145d4:	lsl	r8, r2, ip
   145d8:	cmp	r5, r9
   145dc:	cmpeq	r4, r8
   145e0:	movcc	r0, #0
   145e4:	movcc	r1, r0
   145e8:	bcc	14604 <putchar_unlocked@plt+0x35e0>
   145ec:	mov	r0, #1
   145f0:	subs	r4, r4, r8
   145f4:	lsl	r1, r0, sl
   145f8:	orr	r1, r1, r0, lsr fp
   145fc:	lsl	r0, r0, ip
   14600:	sbc	r5, r5, r9
   14604:	cmp	ip, #0
   14608:	beq	14694 <putchar_unlocked@plt+0x3670>
   1460c:	lsr	r6, r8, #1
   14610:	orr	r6, r6, r9, lsl #31
   14614:	lsr	r7, r9, #1
   14618:	mov	r2, ip
   1461c:	b	14640 <putchar_unlocked@plt+0x361c>
   14620:	subs	r3, r4, r6
   14624:	sbc	r8, r5, r7
   14628:	adds	r3, r3, r3
   1462c:	adc	r8, r8, r8
   14630:	adds	r4, r3, #1
   14634:	adc	r5, r8, #0
   14638:	subs	r2, r2, #1
   1463c:	beq	1465c <putchar_unlocked@plt+0x3638>
   14640:	cmp	r5, r7
   14644:	cmpeq	r4, r6
   14648:	bcs	14620 <putchar_unlocked@plt+0x35fc>
   1464c:	adds	r4, r4, r4
   14650:	adc	r5, r5, r5
   14654:	subs	r2, r2, #1
   14658:	bne	14640 <putchar_unlocked@plt+0x361c>
   1465c:	lsr	r3, r4, ip
   14660:	orr	r3, r3, r5, lsl fp
   14664:	lsr	r2, r5, ip
   14668:	orr	r3, r3, r5, lsr sl
   1466c:	adds	r0, r0, r4
   14670:	mov	r4, r3
   14674:	lsl	r3, r2, ip
   14678:	orr	r3, r3, r4, lsl sl
   1467c:	lsl	ip, r4, ip
   14680:	orr	r3, r3, r4, lsr fp
   14684:	adc	r1, r1, r5
   14688:	subs	r0, r0, ip
   1468c:	mov	r5, r2
   14690:	sbc	r1, r1, r3
   14694:	cmp	lr, #0
   14698:	strdne	r4, [lr]
   1469c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146a4:	mov	r7, r0
   146a8:	ldr	r6, [pc, #72]	; 146f8 <putchar_unlocked@plt+0x36d4>
   146ac:	ldr	r5, [pc, #72]	; 146fc <putchar_unlocked@plt+0x36d8>
   146b0:	add	r6, pc, r6
   146b4:	add	r5, pc, r5
   146b8:	sub	r6, r6, r5
   146bc:	mov	r8, r1
   146c0:	mov	r9, r2
   146c4:	bl	10da0 <calloc@plt-0x20>
   146c8:	asrs	r6, r6, #2
   146cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   146d0:	mov	r4, #0
   146d4:	add	r4, r4, #1
   146d8:	ldr	r3, [r5], #4
   146dc:	mov	r2, r9
   146e0:	mov	r1, r8
   146e4:	mov	r0, r7
   146e8:	blx	r3
   146ec:	cmp	r6, r4
   146f0:	bne	146d4 <putchar_unlocked@plt+0x36b0>
   146f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146f8:	andeq	r1, r1, r4, asr r8
   146fc:	andeq	r1, r1, ip, asr #16
   14700:	bx	lr
   14704:	ldr	r3, [pc, #12]	; 14718 <putchar_unlocked@plt+0x36f4>
   14708:	mov	r1, #0
   1470c:	add	r3, pc, r3
   14710:	ldr	r2, [r3]
   14714:	b	10f4c <__cxa_atexit@plt>
   14718:	ldrdeq	r1, [r1], -r0

Disassembly of section .fini:

0001471c <.fini>:
   1471c:	push	{r3, lr}
   14720:	pop	{r3, pc}
