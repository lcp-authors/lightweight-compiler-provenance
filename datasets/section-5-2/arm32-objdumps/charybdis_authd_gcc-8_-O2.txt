
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000111bc <.init>:
   111bc:	push	{r3, lr}
   111c0:	bl	116e8 <sprintf@plt+0x140>
   111c4:	pop	{r3, pc}

Disassembly of section .plt:

000111c8 <sigemptyset@plt-0x14>:
   111c8:	push	{lr}		; (str lr, [sp, #-4]!)
   111cc:	ldr	lr, [pc, #4]	; 111d8 <sigemptyset@plt-0x4>
   111d0:	add	lr, pc, lr
   111d4:	ldr	pc, [lr, #8]!
   111d8:	andeq	r9, r1, r8, lsr #28

000111dc <sigemptyset@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #102400	; 0x19000
   111e4:	ldr	pc, [ip, #3624]!	; 0xe28

000111e8 <strerror@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #102400	; 0x19000
   111f0:	ldr	pc, [ip, #3616]!	; 0xe20

000111f4 <rb_helper_loop@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #102400	; 0x19000
   111fc:	ldr	pc, [ip, #3608]!	; 0xe18

00011200 <abort@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #102400	; 0x19000
   11208:	ldr	pc, [ip, #3600]!	; 0xe10

0001120c <rb_event_addish@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #102400	; 0x19000
   11214:	ldr	pc, [ip, #3592]!	; 0xe08

00011218 <getsockname@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #102400	; 0x19000
   11220:	ldr	pc, [ip, #3584]!	; 0xe00

00011224 <rb_ignore_errno@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #102400	; 0x19000
   1122c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011230 <rb_connect_tcp_ssl@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #102400	; 0x19000
   11238:	ldr	pc, [ip, #3568]!	; 0xdf0

0001123c <rb_connect_tcp@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #102400	; 0x19000
   11244:	ldr	pc, [ip, #3560]!	; 0xde8

00011248 <memcmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #102400	; 0x19000
   11250:	ldr	pc, [ip, #3552]!	; 0xde0

00011254 <__libc_start_main@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #102400	; 0x19000
   1125c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011260 <rb_event_delete@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #102400	; 0x19000
   11268:	ldr	pc, [ip, #3536]!	; 0xdd0

0001126c <rb_setselect@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #102400	; 0x19000
   11274:	ldr	pc, [ip, #3528]!	; 0xdc8

00011278 <rb_get_fd@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #102400	; 0x19000
   11280:	ldr	pc, [ip, #3520]!	; 0xdc0

00011284 <__gmon_start__@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #102400	; 0x19000
   1128c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011290 <vsnprintf@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #102400	; 0x19000
   11298:	ldr	pc, [ip, #3504]!	; 0xdb0

0001129c <rb_socket@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #102400	; 0x19000
   112a4:	ldr	pc, [ip, #3496]!	; 0xda8

000112a8 <fclose@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #102400	; 0x19000
   112b0:	ldr	pc, [ip, #3488]!	; 0xda0

000112b4 <fgets@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #102400	; 0x19000
   112bc:	ldr	pc, [ip, #3480]!	; 0xd98

000112c0 <rb_strtok_r@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #102400	; 0x19000
   112c8:	ldr	pc, [ip, #3472]!	; 0xd90

000112cc <strchr@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #102400	; 0x19000
   112d4:	ldr	pc, [ip, #3464]!	; 0xd88

000112d8 <rb_dictionary_foreach_cur@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #102400	; 0x19000
   112e0:	ldr	pc, [ip, #3456]!	; 0xd80

000112e4 <strcasecmp@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #102400	; 0x19000
   112ec:	ldr	pc, [ip, #3448]!	; 0xd78

000112f0 <calloc@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #102400	; 0x19000
   112f8:	ldr	pc, [ip, #3440]!	; 0xd70

000112fc <rb_helper_child@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #102400	; 0x19000
   11304:	ldr	pc, [ip, #3432]!	; 0xd68

00011308 <sendto@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #102400	; 0x19000
   11310:	ldr	pc, [ip, #3424]!	; 0xd60

00011314 <fopen@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #102400	; 0x19000
   1131c:	ldr	pc, [ip, #3416]!	; 0xd58

00011320 <memset@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #102400	; 0x19000
   11328:	ldr	pc, [ip, #3408]!	; 0xd50

0001132c <freeaddrinfo@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #102400	; 0x19000
   11334:	ldr	pc, [ip, #3400]!	; 0xd48

00011338 <strrchr@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #102400	; 0x19000
   11340:	ldr	pc, [ip, #3392]!	; 0xd40

00011344 <rb_write@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #102400	; 0x19000
   1134c:	ldr	pc, [ip, #3384]!	; 0xd38

00011350 <__assert_fail@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #102400	; 0x19000
   11358:	ldr	pc, [ip, #3376]!	; 0xd30

0001135c <rb_strlcpy@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #102400	; 0x19000
   11364:	ldr	pc, [ip, #3368]!	; 0xd28

00011368 <strtoull@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #102400	; 0x19000
   11370:	ldr	pc, [ip, #3360]!	; 0xd20

00011374 <rb_dictionary_foreach_next@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #102400	; 0x19000
   1137c:	ldr	pc, [ip, #3352]!	; 0xd18

00011380 <free@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #102400	; 0x19000
   11388:	ldr	pc, [ip, #3344]!	; 0xd10

0001138c <rb_string_to_array@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #102400	; 0x19000
   11394:	ldr	pc, [ip, #3336]!	; 0xd08

00011398 <rb_read@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #102400	; 0x19000
   113a0:	ldr	pc, [ip, #3328]!	; 0xd00

000113a4 <rb_strcasecmp@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #102400	; 0x19000
   113ac:	ldr	pc, [ip, #3320]!	; 0xcf8

000113b0 <getaddrinfo@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #102400	; 0x19000
   113b8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113bc <rb_dictionary_foreach_start@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #102400	; 0x19000
   113c4:	ldr	pc, [ip, #3304]!	; 0xce8

000113c8 <rb_inet_pton_sock@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #102400	; 0x19000
   113d0:	ldr	pc, [ip, #3296]!	; 0xce0

000113d4 <strlen@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #102400	; 0x19000
   113dc:	ldr	pc, [ip, #3288]!	; 0xcd8

000113e0 <rb_current_time@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #102400	; 0x19000
   113e8:	ldr	pc, [ip, #3280]!	; 0xcd0

000113ec <rb_dictionary_delete@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #102400	; 0x19000
   113f4:	ldr	pc, [ip, #3272]!	; 0xcc8

000113f8 <memcpy@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #102400	; 0x19000
   11400:	ldr	pc, [ip, #3264]!	; 0xcc0

00011404 <rb_free_rb_dlink_node@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #102400	; 0x19000
   1140c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011410 <rb_close@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #102400	; 0x19000
   11418:	ldr	pc, [ip, #3248]!	; 0xcb0

0001141c <strtol@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #102400	; 0x19000
   11424:	ldr	pc, [ip, #3240]!	; 0xca8

00011428 <sigaddset@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #102400	; 0x19000
   11430:	ldr	pc, [ip, #3232]!	; 0xca0

00011434 <rb_dictionary_destroy@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #102400	; 0x19000
   1143c:	ldr	pc, [ip, #3224]!	; 0xc98

00011440 <bind@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #102400	; 0x19000
   11448:	ldr	pc, [ip, #3216]!	; 0xc90

0001144c <strstr@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #102400	; 0x19000
   11454:	ldr	pc, [ip, #3208]!	; 0xc88

00011458 <fwrite@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #102400	; 0x19000
   11460:	ldr	pc, [ip, #3200]!	; 0xc80

00011464 <rb_init_prng@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #102400	; 0x19000
   1146c:	ldr	pc, [ip, #3192]!	; 0xc78

00011470 <rb_dictionary_retrieve@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #102400	; 0x19000
   11478:	ldr	pc, [ip, #3184]!	; 0xc70

0001147c <rb_outofmemory@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #102400	; 0x19000
   11484:	ldr	pc, [ip, #3176]!	; 0xc68

00011488 <__ctype_b_loc@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #102400	; 0x19000
   11490:	ldr	pc, [ip, #3168]!	; 0xc60

00011494 <rb_dictionary_add@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #102400	; 0x19000
   1149c:	ldr	pc, [ip, #3160]!	; 0xc58

000114a0 <rb_set_time@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #102400	; 0x19000
   114a8:	ldr	pc, [ip, #3152]!	; 0xc50

000114ac <malloc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #102400	; 0x19000
   114b4:	ldr	pc, [ip, #3144]!	; 0xc48

000114b8 <sigaction@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #102400	; 0x19000
   114c0:	ldr	pc, [ip, #3136]!	; 0xc40

000114c4 <rb_helper_read@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #102400	; 0x19000
   114cc:	ldr	pc, [ip, #3128]!	; 0xc38

000114d0 <rb_inet_ntop_sock@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #102400	; 0x19000
   114d8:	ldr	pc, [ip, #3120]!	; 0xc30

000114dc <rb_dictionary_find@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #102400	; 0x19000
   114e4:	ldr	pc, [ip, #3112]!	; 0xc28

000114e8 <rb_dictionary_create@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #102400	; 0x19000
   114f0:	ldr	pc, [ip, #3104]!	; 0xc20

000114f4 <memmove@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #102400	; 0x19000
   114fc:	ldr	pc, [ip, #3096]!	; 0xc18

00011500 <rb_accept_tcp@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #102400	; 0x19000
   11508:	ldr	pc, [ip, #3088]!	; 0xc10

0001150c <rb_helper_write@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #102400	; 0x19000
   11514:	ldr	pc, [ip, #3080]!	; 0xc08

00011518 <rb_event_add@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #102400	; 0x19000
   11520:	ldr	pc, [ip, #3072]!	; 0xc00

00011524 <rb_get_random@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #102400	; 0x19000
   1152c:	ldr	pc, [ip, #3064]!	; 0xbf8

00011530 <rb_make_rb_dlink_node@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #102400	; 0x19000
   11538:	ldr	pc, [ip, #3056]!	; 0xbf0

0001153c <snprintf@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #102400	; 0x19000
   11544:	ldr	pc, [ip, #3048]!	; 0xbe8

00011548 <rb_listen@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #102400	; 0x19000
   11550:	ldr	pc, [ip, #3040]!	; 0xbe0

00011554 <strncmp@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #102400	; 0x19000
   1155c:	ldr	pc, [ip, #3032]!	; 0xbd8

00011560 <recvfrom@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #102400	; 0x19000
   11568:	ldr	pc, [ip, #3024]!	; 0xbd0

0001156c <setsockopt@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #102400	; 0x19000
   11574:	ldr	pc, [ip, #3016]!	; 0xbc8

00011578 <strpbrk@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #102400	; 0x19000
   11580:	ldr	pc, [ip, #3008]!	; 0xbc0

00011584 <strcmp@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #102400	; 0x19000
   1158c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011590 <exit@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #102400	; 0x19000
   11598:	ldr	pc, [ip, #2992]!	; 0xbb0

0001159c <__errno_location@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #102400	; 0x19000
   115a4:	ldr	pc, [ip, #2984]!	; 0xba8

000115a8 <sprintf@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #102400	; 0x19000
   115b0:	ldr	pc, [ip, #2976]!	; 0xba0

Disassembly of section .text:

000115b4 <.text>:
   115b4:	strd	r4, [sp, #-16]!
   115b8:	mov	r4, #0
   115bc:	str	r6, [sp, #8]
   115c0:	str	lr, [sp, #12]
   115c4:	sub	sp, sp, #16
   115c8:	bl	11858 <sprintf@plt+0x2b0>
   115cc:	mov	r0, #256	; 0x100
   115d0:	ldr	r1, [pc, #176]	; 11688 <sprintf@plt+0xe0>
   115d4:	mov	r3, r4
   115d8:	mov	r2, r4
   115dc:	str	r4, [sp]
   115e0:	str	r0, [sp, #4]
   115e4:	str	r0, [sp, #8]
   115e8:	str	r0, [sp, #12]
   115ec:	ldr	r0, [pc, #152]	; 1168c <sprintf@plt+0xe4>
   115f0:	add	r1, pc, r1
   115f4:	ldr	r5, [pc, #148]	; 11690 <sprintf@plt+0xe8>
   115f8:	add	r0, pc, r0
   115fc:	bl	112fc <rb_helper_child@plt>
   11600:	ldr	r3, [pc, #140]	; 11694 <sprintf@plt+0xec>
   11604:	add	r5, pc, r5
   11608:	cmp	r0, r4
   1160c:	ldr	r6, [r5, r3]
   11610:	str	r0, [r6]
   11614:	beq	11660 <sprintf@plt+0xb8>
   11618:	bl	114a0 <rb_set_time@plt>
   1161c:	bl	11858 <sprintf@plt+0x2b0>
   11620:	ldr	r3, [pc, #112]	; 11698 <sprintf@plt+0xf0>
   11624:	ldr	r0, [pc, #112]	; 1169c <sprintf@plt+0xf4>
   11628:	ldr	r1, [r5, r3]
   1162c:	add	r0, pc, r0
   11630:	bl	114e8 <rb_dictionary_create@plt>
   11634:	ldr	r3, [pc, #100]	; 116a0 <sprintf@plt+0xf8>
   11638:	ldr	r3, [r5, r3]
   1163c:	str	r0, [r3]
   11640:	bl	139b0 <sprintf@plt+0x2408>
   11644:	bl	1273c <sprintf@plt+0x1194>
   11648:	mov	r1, #1
   1164c:	mov	r0, r4
   11650:	bl	11464 <rb_init_prng@plt>
   11654:	mov	r1, r4
   11658:	ldr	r0, [r6]
   1165c:	bl	111f4 <rb_helper_loop@plt>
   11660:	ldr	r3, [pc, #60]	; 116a4 <sprintf@plt+0xfc>
   11664:	mov	r2, #46	; 0x2e
   11668:	mov	r1, #1
   1166c:	ldr	r0, [pc, #52]	; 116a8 <sprintf@plt+0x100>
   11670:	ldr	r3, [r5, r3]
   11674:	add	r0, pc, r0
   11678:	ldr	r3, [r3]
   1167c:	bl	11458 <fwrite@plt>
   11680:	mov	r0, #1
   11684:	bl	11590 <exit@plt>
   11688:	andeq	r0, r0, r8, lsr #3
   1168c:			; <UNDEFINED> instruction: 0x000001b0
   11690:	strdeq	r9, [r1], -r4
   11694:	muleq	r0, r0, r1
   11698:	andeq	r0, r0, r8, ror r1
   1169c:	andeq	r8, r0, ip, lsr r4
   116a0:	andeq	r0, r0, ip, ror r1
   116a4:	andeq	r0, r0, ip, lsl #3
   116a8:	andeq	r8, r0, r4, asr #7
   116ac:	mov	fp, #0
   116b0:	mov	lr, #0
   116b4:	pop	{r1}		; (ldr r1, [sp], #4)
   116b8:	mov	r2, sp
   116bc:	push	{r2}		; (str r2, [sp, #-4]!)
   116c0:	push	{r0}		; (str r0, [sp, #-4]!)
   116c4:	ldr	ip, [pc, #16]	; 116dc <sprintf@plt+0x134>
   116c8:	push	{ip}		; (str ip, [sp, #-4]!)
   116cc:	ldr	r0, [pc, #12]	; 116e0 <sprintf@plt+0x138>
   116d0:	ldr	r3, [pc, #12]	; 116e4 <sprintf@plt+0x13c>
   116d4:	bl	11254 <__libc_start_main@plt>
   116d8:	bl	11200 <abort@plt>
   116dc:	andeq	r9, r1, r0, ror #17
   116e0:			; <UNDEFINED> instruction: 0x000115b4
   116e4:	andeq	r9, r1, r0, lsl #17
   116e8:	ldr	r3, [pc, #20]	; 11704 <sprintf@plt+0x15c>
   116ec:	ldr	r2, [pc, #20]	; 11708 <sprintf@plt+0x160>
   116f0:	add	r3, pc, r3
   116f4:	ldr	r2, [r3, r2]
   116f8:	cmp	r2, #0
   116fc:	bxeq	lr
   11700:	b	11284 <__gmon_start__@plt>
   11704:	andeq	r9, r1, r8, lsl #18
   11708:	andeq	r0, r0, r8, asr r1
   1170c:	ldr	r0, [pc, #24]	; 1172c <sprintf@plt+0x184>
   11710:	ldr	r3, [pc, #24]	; 11730 <sprintf@plt+0x188>
   11714:	cmp	r3, r0
   11718:	bxeq	lr
   1171c:	ldr	r3, [pc, #16]	; 11734 <sprintf@plt+0x18c>
   11720:	cmp	r3, #0
   11724:	bxeq	lr
   11728:	bx	r3
   1172c:	andeq	fp, r2, r4, lsl #31
   11730:	andeq	fp, r2, r4, lsl #31
   11734:	andeq	r0, r0, r0
   11738:	ldr	r0, [pc, #36]	; 11764 <sprintf@plt+0x1bc>
   1173c:	ldr	r1, [pc, #36]	; 11768 <sprintf@plt+0x1c0>
   11740:	sub	r1, r1, r0
   11744:	asr	r1, r1, #2
   11748:	add	r1, r1, r1, lsr #31
   1174c:	asrs	r1, r1, #1
   11750:	bxeq	lr
   11754:	ldr	r3, [pc, #16]	; 1176c <sprintf@plt+0x1c4>
   11758:	cmp	r3, #0
   1175c:	bxeq	lr
   11760:	bx	r3
   11764:	andeq	fp, r2, r4, lsl #31
   11768:	andeq	fp, r2, r4, lsl #31
   1176c:	andeq	r0, r0, r0
   11770:	push	{r4, lr}
   11774:	ldr	r4, [pc, #24]	; 11794 <sprintf@plt+0x1ec>
   11778:	ldrb	r3, [r4]
   1177c:	cmp	r3, #0
   11780:	popne	{r4, pc}
   11784:	bl	1170c <sprintf@plt+0x164>
   11788:	mov	r3, #1
   1178c:	strb	r3, [r4]
   11790:	pop	{r4, pc}
   11794:	andeq	fp, r2, r8, lsl #31
   11798:	b	11738 <sprintf@plt+0x190>
   1179c:	bx	lr
   117a0:	mov	r0, #1
   117a4:	str	r4, [sp, #-8]!
   117a8:	str	lr, [sp, #4]
   117ac:	bl	11590 <exit@plt>
   117b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117b4:	ldr	r5, [pc, #140]	; 11848 <sprintf@plt+0x2a0>
   117b8:	strd	r6, [sp, #8]
   117bc:	mov	r6, r0
   117c0:	ldr	r4, [pc, #132]	; 1184c <sprintf@plt+0x2a4>
   117c4:	str	r8, [sp, #16]
   117c8:	ldr	r7, [pc, #128]	; 11850 <sprintf@plt+0x2a8>
   117cc:	add	r5, pc, r5
   117d0:	str	lr, [sp, #20]
   117d4:	add	r4, pc, r4
   117d8:	add	r7, pc, r7
   117dc:	mov	r2, #16384	; 0x4000
   117e0:	mov	r1, r5
   117e4:	mov	r0, r6
   117e8:	bl	114c4 <rb_helper_read@plt>
   117ec:	cmp	r0, #0
   117f0:	mov	r2, #10
   117f4:	mov	r1, r4
   117f8:	mov	r0, r5
   117fc:	ble	11834 <sprintf@plt+0x28c>
   11800:	bl	1138c <rb_string_to_array@plt>
   11804:	cmp	r0, #0
   11808:	ldr	r3, [pc, #68]	; 11854 <sprintf@plt+0x2ac>
   1180c:	mov	r1, r4
   11810:	ble	117dc <sprintf@plt+0x234>
   11814:	ldr	r2, [r4]
   11818:	ldr	r3, [r7, r3]
   1181c:	ldrb	r2, [r2]
   11820:	ldr	r3, [r3, r2, lsl #2]
   11824:	cmp	r3, #0
   11828:	beq	117dc <sprintf@plt+0x234>
   1182c:	blx	r3
   11830:	b	117dc <sprintf@plt+0x234>
   11834:	ldrd	r4, [sp]
   11838:	ldrd	r6, [sp, #8]
   1183c:	ldr	r8, [sp, #16]
   11840:	add	sp, sp, #20
   11844:	pop	{pc}		; (ldr pc, [sp], #4)
   11848:	andeq	sl, r1, r4, ror #15
   1184c:			; <UNDEFINED> instruction: 0x0001a7b0
   11850:	andeq	r9, r1, r0, lsr #16
   11854:	andeq	r0, r0, ip, asr r1
   11858:	strd	r4, [sp, #-12]!
   1185c:	mov	r3, #1
   11860:	mov	r5, #0
   11864:	str	lr, [sp, #8]
   11868:	sub	sp, sp, #148	; 0x94
   1186c:	add	r4, sp, #8
   11870:	mov	r0, r4
   11874:	str	r3, [sp, #4]
   11878:	str	r5, [sp, #136]	; 0x88
   1187c:	bl	111dc <sigemptyset@plt>
   11880:	mov	r0, r4
   11884:	mov	r1, #13
   11888:	bl	11428 <sigaddset@plt>
   1188c:	mov	r0, r4
   11890:	mov	r1, #14
   11894:	bl	11428 <sigaddset@plt>
   11898:	mov	r0, r4
   1189c:	mov	r1, #5
   118a0:	bl	11428 <sigaddset@plt>
   118a4:	mov	r0, r4
   118a8:	mov	r1, #28
   118ac:	add	r4, sp, #4
   118b0:	bl	11428 <sigaddset@plt>
   118b4:	mov	r2, r5
   118b8:	mov	r1, r4
   118bc:	mov	r0, #28
   118c0:	bl	114b8 <sigaction@plt>
   118c4:	mov	r2, r5
   118c8:	mov	r1, r4
   118cc:	mov	r0, #13
   118d0:	bl	114b8 <sigaction@plt>
   118d4:	mov	r2, r5
   118d8:	mov	r1, r4
   118dc:	mov	r0, #5
   118e0:	bl	114b8 <sigaction@plt>
   118e4:	ldr	r3, [pc, #36]	; 11910 <sprintf@plt+0x368>
   118e8:	mov	r2, r5
   118ec:	mov	r1, r4
   118f0:	mov	r0, #14
   118f4:	add	r3, pc, r3
   118f8:	str	r3, [sp, #4]
   118fc:	bl	114b8 <sigaction@plt>
   11900:	add	sp, sp, #148	; 0x94
   11904:	ldrd	r4, [sp]
   11908:	add	sp, sp, #8
   1190c:	pop	{pc}		; (ldr pc, [sp], #4)
   11910:			; <UNDEFINED> instruction: 0xfffffea0
   11914:	ldr	r3, [pc, #112]	; 1198c <sprintf@plt+0x3e4>
   11918:	cmp	r0, #2
   1191c:	add	r3, pc, r3
   11920:	ble	11944 <sprintf@plt+0x39c>
   11924:	ldr	r2, [pc, #100]	; 11990 <sprintf@plt+0x3e8>
   11928:	ldr	r1, [r1, #4]
   1192c:	ldr	r3, [r3, r2]
   11930:	ldrb	r0, [r1]
   11934:	ldr	r3, [r3, r0, lsl #2]
   11938:	cmp	r3, #0
   1193c:	bxeq	lr
   11940:	bx	r3
   11944:	ldr	r2, [pc, #68]	; 11990 <sprintf@plt+0x3e8>
   11948:	strd	r4, [sp, #-16]!
   1194c:	str	r6, [sp, #8]
   11950:	str	lr, [sp, #12]
   11954:	ldr	r5, [r3, r2]
   11958:	sub	r4, r5, #4
   1195c:	add	r5, r5, #1020	; 0x3fc
   11960:	ldr	r3, [r4, #4]!
   11964:	mov	r0, #0
   11968:	cmp	r3, r0
   1196c:	beq	11974 <sprintf@plt+0x3cc>
   11970:	blx	r3
   11974:	cmp	r4, r5
   11978:	bne	11960 <sprintf@plt+0x3b8>
   1197c:	ldrd	r4, [sp]
   11980:	ldr	r6, [sp, #8]
   11984:	add	sp, sp, #12
   11988:	pop	{pc}		; (ldr pc, [sp], #4)
   1198c:	ldrdeq	r9, [r1], -ip
   11990:	andeq	r0, r0, r8, lsl #3
   11994:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11998:	cmp	r0, #2
   1199c:	ldr	r5, [pc, #200]	; 11a6c <sprintf@plt+0x4c4>
   119a0:	strd	r6, [sp, #8]
   119a4:	str	r8, [sp, #16]
   119a8:	str	lr, [sp, #20]
   119ac:	add	r5, pc, r5
   119b0:	ble	11a1c <sprintf@plt+0x474>
   119b4:	mov	r4, r1
   119b8:	mov	r2, #16
   119bc:	mov	r1, #0
   119c0:	ldr	r0, [r4, #4]
   119c4:	bl	11368 <strtoull@plt>
   119c8:	mov	r3, #0
   119cc:	mvn	r2, #0
   119d0:	cmp	r1, r3
   119d4:	mov	r6, r0
   119d8:	cmpeq	r0, r2
   119dc:	bhi	11a58 <sprintf@plt+0x4b0>
   119e0:	ldr	r3, [pc, #136]	; 11a70 <sprintf@plt+0x4c8>
   119e4:	ldr	r2, [r4, #8]
   119e8:	ldr	r3, [r5, r3]
   119ec:	ldrb	r2, [r2]
   119f0:	ldr	r3, [r3, r2, lsl #2]
   119f4:	cmp	r3, #0
   119f8:	beq	11a44 <sprintf@plt+0x49c>
   119fc:	mov	r0, r6
   11a00:	mov	r1, r2
   11a04:	ldrd	r4, [sp]
   11a08:	ldrd	r6, [sp, #8]
   11a0c:	ldr	r8, [sp, #16]
   11a10:	ldr	lr, [sp, #20]
   11a14:	add	sp, sp, #24
   11a18:	bx	r3
   11a1c:	ldr	r1, [pc, #80]	; 11a74 <sprintf@plt+0x4cc>
   11a20:	mov	r2, r0
   11a24:	mov	r0, #67	; 0x43
   11a28:	add	r1, pc, r1
   11a2c:	ldrd	r4, [sp]
   11a30:	ldrd	r6, [sp, #8]
   11a34:	ldr	r8, [sp, #16]
   11a38:	ldr	lr, [sp, #20]
   11a3c:	add	sp, sp, #24
   11a40:	b	123a0 <sprintf@plt+0xdf8>
   11a44:	ldrd	r4, [sp]
   11a48:	ldrd	r6, [sp, #8]
   11a4c:	ldr	r8, [sp, #16]
   11a50:	add	sp, sp, #20
   11a54:	pop	{pc}		; (ldr pc, [sp], #4)
   11a58:	ldr	r1, [pc, #24]	; 11a78 <sprintf@plt+0x4d0>
   11a5c:	mov	r0, #67	; 0x43
   11a60:	ldr	r2, [r4, #4]
   11a64:	add	r1, pc, r1
   11a68:	b	11a2c <sprintf@plt+0x484>
   11a6c:	andeq	r9, r1, ip, asr #12
   11a70:	muleq	r0, r4, r1
   11a74:	andeq	r7, r0, r0, asr #29
   11a78:	ldrdeq	r7, [r0], -r0
   11a7c:	ldr	r2, [pc, #200]	; 11b4c <sprintf@plt+0x5a4>
   11a80:	cmp	r0, #1
   11a84:	add	r2, pc, r2
   11a88:	ble	11af0 <sprintf@plt+0x548>
   11a8c:	ldr	r3, [pc, #188]	; 11b50 <sprintf@plt+0x5a8>
   11a90:	strd	r4, [sp, #-16]!
   11a94:	mov	r5, r1
   11a98:	mov	r4, r0
   11a9c:	ldr	r1, [r1, #4]
   11aa0:	str	r6, [sp, #8]
   11aa4:	str	lr, [sp, #12]
   11aa8:	ldr	r3, [r2, r3]
   11aac:	ldr	r0, [r3]
   11ab0:	bl	11470 <rb_dictionary_retrieve@plt>
   11ab4:	subs	r3, r0, #0
   11ab8:	beq	11b28 <sprintf@plt+0x580>
   11abc:	ldr	r2, [r3, #4]
   11ac0:	sub	r1, r4, #1
   11ac4:	cmp	r1, r2
   11ac8:	ble	11b04 <sprintf@plt+0x55c>
   11acc:	sub	r1, r4, #2
   11ad0:	add	r2, r5, #8
   11ad4:	ldr	r0, [r5, #4]
   11ad8:	ldrd	r4, [sp]
   11adc:	ldr	r6, [sp, #8]
   11ae0:	ldr	r3, [r3, #8]
   11ae4:	ldr	lr, [sp, #12]
   11ae8:	add	sp, sp, #16
   11aec:	bx	r3
   11af0:	ldr	r1, [pc, #92]	; 11b54 <sprintf@plt+0x5ac>
   11af4:	mov	r2, r0
   11af8:	mov	r0, #67	; 0x43
   11afc:	add	r1, pc, r1
   11b00:	b	123a0 <sprintf@plt+0xdf8>
   11b04:	ldr	r1, [pc, #76]	; 11b58 <sprintf@plt+0x5b0>
   11b08:	mov	r3, r4
   11b0c:	mov	r0, #67	; 0x43
   11b10:	ldrd	r4, [sp]
   11b14:	ldr	r6, [sp, #8]
   11b18:	add	r1, pc, r1
   11b1c:	ldr	lr, [sp, #12]
   11b20:	add	sp, sp, #16
   11b24:	b	123a0 <sprintf@plt+0xdf8>
   11b28:	ldr	r1, [pc, #44]	; 11b5c <sprintf@plt+0x5b4>
   11b2c:	mov	r0, #67	; 0x43
   11b30:	ldr	r2, [r5, #4]
   11b34:	ldrd	r4, [sp]
   11b38:	add	r1, pc, r1
   11b3c:	ldr	r6, [sp, #8]
   11b40:	ldr	lr, [sp, #12]
   11b44:	add	sp, sp, #16
   11b48:	b	123a0 <sprintf@plt+0xdf8>
   11b4c:	andeq	r9, r1, r4, ror r5
   11b50:	andeq	r0, r0, ip, ror r1
   11b54:	andeq	r7, r0, ip, ror #28
   11b58:	ldrdeq	r7, [r0], -r0
   11b5c:	andeq	r7, r0, r0, lsl #29
   11b60:	mov	r3, #42	; 0x2a
   11b64:	strd	r4, [sp, #-16]!
   11b68:	mov	r2, #49	; 0x31
   11b6c:	str	r6, [sp, #8]
   11b70:	mov	r4, r0
   11b74:	mov	r5, r1
   11b78:	str	lr, [sp, #12]
   11b7c:	sub	sp, sp, #56	; 0x38
   11b80:	mov	r1, #0
   11b84:	add	r0, sp, #4
   11b88:	str	r3, [sp]
   11b8c:	bl	11320 <memset@plt>
   11b90:	cmp	r4, #0
   11b94:	beq	11c68 <sprintf@plt+0x6c0>
   11b98:	cmp	r5, #0
   11b9c:	beq	11bc0 <sprintf@plt+0x618>
   11ba0:	ldr	r2, [r4, #8]
   11ba4:	cmp	r2, #52	; 0x34
   11ba8:	beq	11c04 <sprintf@plt+0x65c>
   11bac:	cmp	r2, #54	; 0x36
   11bb0:	bne	11c80 <sprintf@plt+0x6d8>
   11bb4:	ldrh	r3, [r5, #4]
   11bb8:	cmp	r3, #10
   11bbc:	beq	11c24 <sprintf@plt+0x67c>
   11bc0:	ldr	r5, [r4, #152]	; 0x98
   11bc4:	cmp	r5, #0
   11bc8:	beq	11be8 <sprintf@plt+0x640>
   11bcc:	ldrb	r1, [sp]
   11bd0:	mov	r0, sp
   11bd4:	ldr	r2, [r4, #8]
   11bd8:	ldr	r3, [r4, #156]	; 0x9c
   11bdc:	subs	r1, r1, #42	; 0x2a
   11be0:	movne	r1, #1
   11be4:	blx	r5
   11be8:	mov	r0, r4
   11bec:	add	sp, sp, #56	; 0x38
   11bf0:	ldrd	r4, [sp]
   11bf4:	ldr	r6, [sp, #8]
   11bf8:	ldr	lr, [sp, #12]
   11bfc:	add	sp, sp, #16
   11c00:	b	11380 <free@plt>
   11c04:	ldrh	r3, [r5, #4]
   11c08:	cmp	r3, #2
   11c0c:	bne	11bc0 <sprintf@plt+0x618>
   11c10:	add	r0, r5, #4
   11c14:	mov	r2, #53	; 0x35
   11c18:	mov	r1, sp
   11c1c:	bl	114d0 <rb_inet_ntop_sock@plt>
   11c20:	b	11bc0 <sprintf@plt+0x618>
   11c24:	mov	r6, sp
   11c28:	add	r0, r5, #4
   11c2c:	mov	r1, r6
   11c30:	mov	r2, #53	; 0x35
   11c34:	bl	114d0 <rb_inet_ntop_sock@plt>
   11c38:	ldrb	r3, [sp]
   11c3c:	cmp	r3, #58	; 0x3a
   11c40:	bne	11bc0 <sprintf@plt+0x618>
   11c44:	mov	r0, r6
   11c48:	bl	113d4 <strlen@plt>
   11c4c:	mov	r2, r0
   11c50:	mov	r1, r6
   11c54:	add	r0, sp, #1
   11c58:	bl	114f4 <memmove@plt>
   11c5c:	mov	r3, #48	; 0x30
   11c60:	strb	r3, [sp]
   11c64:	b	11bc0 <sprintf@plt+0x618>
   11c68:	ldr	r1, [pc, #40]	; 11c98 <sprintf@plt+0x6f0>
   11c6c:	mov	r0, #67	; 0x43
   11c70:	add	r1, pc, r1
   11c74:	bl	123a0 <sprintf@plt+0xdf8>
   11c78:	mov	r0, #2
   11c7c:	bl	11590 <exit@plt>
   11c80:	ldr	r1, [pc, #20]	; 11c9c <sprintf@plt+0x6f4>
   11c84:	mov	r0, #67	; 0x43
   11c88:	add	r1, pc, r1
   11c8c:	bl	123a0 <sprintf@plt+0xdf8>
   11c90:	mov	r0, #2
   11c94:	bl	11590 <exit@plt>
   11c98:	andeq	r7, r0, r0, lsl lr
   11c9c:	andeq	r7, r0, r4, lsr #28
   11ca0:	strd	r4, [sp, #-16]!
   11ca4:	subs	r4, r0, #0
   11ca8:	str	r6, [sp, #8]
   11cac:	str	lr, [sp, #12]
   11cb0:	beq	11d44 <sprintf@plt+0x79c>
   11cb4:	cmp	r1, #0
   11cb8:	mov	r5, r1
   11cbc:	beq	11cf0 <sprintf@plt+0x748>
   11cc0:	ldr	r2, [r4, #8]
   11cc4:	cmp	r2, #82	; 0x52
   11cc8:	beq	11d2c <sprintf@plt+0x784>
   11ccc:	cmp	r2, #83	; 0x53
   11cd0:	bne	11d5c <sprintf@plt+0x7b4>
   11cd4:	mov	r2, #16
   11cd8:	add	r1, r1, #12
   11cdc:	add	r0, r4, #20
   11ce0:	bl	11248 <memcmp@plt>
   11ce4:	cmp	r0, #0
   11ce8:	bne	11d3c <sprintf@plt+0x794>
   11cec:	ldr	r5, [r5]
   11cf0:	ldr	r6, [r4, #152]	; 0x98
   11cf4:	cmp	r6, #0
   11cf8:	beq	11d14 <sprintf@plt+0x76c>
   11cfc:	adds	r1, r5, #0
   11d00:	mov	r0, r5
   11d04:	ldr	r2, [r4, #8]
   11d08:	movne	r1, #1
   11d0c:	ldr	r3, [r4, #156]	; 0x9c
   11d10:	blx	r6
   11d14:	mov	r0, r4
   11d18:	ldrd	r4, [sp]
   11d1c:	ldr	r6, [sp, #8]
   11d20:	ldr	lr, [sp, #12]
   11d24:	add	sp, sp, #16
   11d28:	b	11380 <free@plt>
   11d2c:	ldr	r3, [r1, #8]
   11d30:	ldr	r2, [r4, #16]
   11d34:	cmp	r2, r3
   11d38:	beq	11cec <sprintf@plt+0x744>
   11d3c:	mov	r5, #0
   11d40:	b	11cf0 <sprintf@plt+0x748>
   11d44:	ldr	r1, [pc, #40]	; 11d74 <sprintf@plt+0x7cc>
   11d48:	mov	r0, #67	; 0x43
   11d4c:	add	r1, pc, r1
   11d50:	bl	123a0 <sprintf@plt+0xdf8>
   11d54:	mov	r0, #2
   11d58:	bl	11590 <exit@plt>
   11d5c:	ldr	r1, [pc, #20]	; 11d78 <sprintf@plt+0x7d0>
   11d60:	mov	r0, #67	; 0x43
   11d64:	add	r1, pc, r1
   11d68:	bl	123a0 <sprintf@plt+0xdf8>
   11d6c:	mov	r0, #2
   11d70:	bl	11590 <exit@plt>
   11d74:	muleq	r0, r4, sp
   11d78:			; <UNDEFINED> instruction: 0x00007db0
   11d7c:	ldr	ip, [pc, #156]	; 11e20 <sprintf@plt+0x878>
   11d80:	cmp	r2, #0
   11d84:	cmpne	r3, #0
   11d88:	str	r4, [sp, #-8]!
   11d8c:	str	lr, [sp, #4]
   11d90:	sub	sp, sp, #8
   11d94:	add	ip, pc, ip
   11d98:	beq	11e08 <sprintf@plt+0x860>
   11d9c:	mov	lr, r0
   11da0:	ldr	r0, [pc, #124]	; 11e24 <sprintf@plt+0x87c>
   11da4:	mov	r4, r3
   11da8:	eor	r1, r1, #1
   11dac:	cmp	lr, #0
   11db0:	orreq	r1, r1, #1
   11db4:	cmp	r1, #0
   11db8:	ldr	r3, [ip, r0]
   11dbc:	ldr	r0, [r3]
   11dc0:	mov	r3, r2
   11dc4:	bne	11df4 <sprintf@plt+0x84c>
   11dc8:	mov	r2, r4
   11dcc:	str	lr, [sp]
   11dd0:	ldr	r1, [pc, #80]	; 11e28 <sprintf@plt+0x880>
   11dd4:	add	r1, pc, r1
   11dd8:	bl	1150c <rb_helper_write@plt>
   11ddc:	mov	r0, r4
   11de0:	add	sp, sp, #8
   11de4:	ldr	r4, [sp]
   11de8:	ldr	lr, [sp, #4]
   11dec:	add	sp, sp, #8
   11df0:	b	11380 <free@plt>
   11df4:	ldr	r1, [pc, #48]	; 11e2c <sprintf@plt+0x884>
   11df8:	mov	r2, r4
   11dfc:	add	r1, pc, r1
   11e00:	bl	1150c <rb_helper_write@plt>
   11e04:	b	11ddc <sprintf@plt+0x834>
   11e08:	ldr	r1, [pc, #32]	; 11e30 <sprintf@plt+0x888>
   11e0c:	mov	r0, #67	; 0x43
   11e10:	add	r1, pc, r1
   11e14:	bl	123a0 <sprintf@plt+0xdf8>
   11e18:	mov	r0, #2
   11e1c:	bl	11590 <exit@plt>
   11e20:	andeq	r9, r1, r4, ror #4
   11e24:	muleq	r0, r0, r1
   11e28:			; <UNDEFINED> instruction: 0x00007db4
   11e2c:	andeq	r7, r0, r0, lsl #27
   11e30:	andeq	r7, r0, r0, asr #26
   11e34:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e38:	ldr	r5, [pc, #204]	; 11f0c <sprintf@plt+0x964>
   11e3c:	strd	r6, [sp, #8]
   11e40:	mov	r6, r2
   11e44:	mov	r7, r3
   11e48:	strd	r8, [sp, #16]
   11e4c:	mov	r9, r0
   11e50:	mov	r8, r1
   11e54:	mov	r0, #1
   11e58:	mov	r1, #160	; 0xa0
   11e5c:	str	sl, [sp, #24]
   11e60:	str	lr, [sp, #28]
   11e64:	bl	112f0 <calloc@plt>
   11e68:	subs	r4, r0, #0
   11e6c:	add	r5, pc, r5
   11e70:	beq	11f08 <sprintf@plt+0x960>
   11e74:	cmp	r8, #2
   11e78:	moveq	r3, #52	; 0x34
   11e7c:	moveq	r2, #1
   11e80:	streq	r3, [r4, #8]
   11e84:	beq	11e9c <sprintf@plt+0x8f4>
   11e88:	cmp	r8, #10
   11e8c:	bne	11efc <sprintf@plt+0x954>
   11e90:	mov	r3, #54	; 0x36
   11e94:	mov	r2, #28
   11e98:	str	r3, [r4, #8]
   11e9c:	ldr	ip, [pc, #108]	; 11f10 <sprintf@plt+0x968>
   11ea0:	mov	r0, r9
   11ea4:	mov	r1, r4
   11ea8:	ldr	lr, [pc, #100]	; 11f14 <sprintf@plt+0x96c>
   11eac:	ldr	ip, [r5, ip]
   11eb0:	strd	r6, [r4, #152]	; 0x98
   11eb4:	add	lr, pc, lr
   11eb8:	stm	r4, {r4, lr}
   11ebc:	ldr	r3, [ip]
   11ec0:	ldr	lr, [ip, #4]
   11ec4:	adds	r5, r3, #1
   11ec8:	str	r3, [r4, #144]	; 0x90
   11ecc:	adc	r3, lr, #0
   11ed0:	str	lr, [r4, #148]	; 0x94
   11ed4:	str	r5, [ip]
   11ed8:	str	r3, [ip, #4]
   11edc:	bl	139f0 <sprintf@plt+0x2448>
   11ee0:	mov	r0, r4
   11ee4:	ldrd	r4, [sp]
   11ee8:	ldrd	r6, [sp, #8]
   11eec:	ldrd	r8, [sp, #16]
   11ef0:	ldr	sl, [sp, #24]
   11ef4:	add	sp, sp, #28
   11ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   11efc:	bl	11380 <free@plt>
   11f00:	mov	r4, #0
   11f04:	b	11ee0 <sprintf@plt+0x938>
   11f08:	bl	1147c <rb_outofmemory@plt>
   11f0c:	andeq	r9, r1, ip, lsl #3
   11f10:	muleq	r0, r8, r1
   11f14:			; <UNDEFINED> instruction: 0xfffffca4
   11f18:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11f1c:	ldr	r5, [pc, #232]	; 1200c <sprintf@plt+0xa64>
   11f20:	strd	r6, [sp, #8]
   11f24:	mov	r7, r1
   11f28:	mov	r1, #160	; 0xa0
   11f2c:	strd	r8, [sp, #16]
   11f30:	mov	r9, r0
   11f34:	mov	r0, #1
   11f38:	mov	r6, r2
   11f3c:	str	sl, [sp, #24]
   11f40:	str	lr, [sp, #28]
   11f44:	bl	112f0 <calloc@plt>
   11f48:	subs	r4, r0, #0
   11f4c:	add	r5, pc, r5
   11f50:	beq	12008 <sprintf@plt+0xa60>
   11f54:	add	r8, r4, #12
   11f58:	mov	r0, r9
   11f5c:	mov	r1, r8
   11f60:	bl	113c8 <rb_inet_pton_sock@plt>
   11f64:	subs	r3, r0, #0
   11f68:	beq	11ff8 <sprintf@plt+0xa50>
   11f6c:	ldrh	r3, [r4, #12]
   11f70:	cmp	r3, #2
   11f74:	moveq	r3, #82	; 0x52
   11f78:	streq	r3, [r4, #8]
   11f7c:	beq	11f90 <sprintf@plt+0x9e8>
   11f80:	cmp	r3, #10
   11f84:	bne	11ff8 <sprintf@plt+0xa50>
   11f88:	mov	r3, #83	; 0x53
   11f8c:	str	r3, [r4, #8]
   11f90:	ldr	r3, [pc, #120]	; 12010 <sprintf@plt+0xa68>
   11f94:	mov	r0, r8
   11f98:	mov	r1, r4
   11f9c:	ldr	r2, [pc, #112]	; 12014 <sprintf@plt+0xa6c>
   11fa0:	ldr	r3, [r5, r3]
   11fa4:	str	r4, [r4]
   11fa8:	add	r2, pc, r2
   11fac:	str	r2, [r4, #4]
   11fb0:	ldr	r2, [r3]
   11fb4:	str	r7, [r4, #152]	; 0x98
   11fb8:	ldr	ip, [r3, #4]
   11fbc:	adds	lr, r2, #1
   11fc0:	str	r2, [r4, #144]	; 0x90
   11fc4:	str	r6, [r4, #156]	; 0x9c
   11fc8:	adc	r2, ip, #0
   11fcc:	str	ip, [r4, #148]	; 0x94
   11fd0:	str	lr, [r3]
   11fd4:	str	r2, [r3, #4]
   11fd8:	bl	14584 <sprintf@plt+0x2fdc>
   11fdc:	mov	r0, r4
   11fe0:	ldrd	r4, [sp]
   11fe4:	ldrd	r6, [sp, #8]
   11fe8:	ldrd	r8, [sp, #16]
   11fec:	ldr	sl, [sp, #24]
   11ff0:	add	sp, sp, #28
   11ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff8:	mov	r0, r4
   11ffc:	mov	r4, #0
   12000:	bl	11380 <free@plt>
   12004:	b	11fdc <sprintf@plt+0xa34>
   12008:	bl	1147c <rb_outofmemory@plt>
   1200c:	andeq	r9, r1, ip, lsr #1
   12010:	muleq	r0, r8, r1
   12014:			; <UNDEFINED> instruction: 0xfffffcf0
   12018:	mov	r3, #0
   1201c:	str	r3, [r0, #152]	; 0x98
   12020:	str	r3, [r0, #156]	; 0x9c
   12024:	bx	lr
   12028:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1202c:	mov	r4, r1
   12030:	ldr	r5, [r1, #4]
   12034:	strd	r6, [sp, #8]
   12038:	str	r8, [sp, #16]
   1203c:	str	lr, [sp, #20]
   12040:	mov	r0, r5
   12044:	bl	113d4 <strlen@plt>
   12048:	add	r6, r0, #1
   1204c:	mov	r0, r6
   12050:	bl	114ac <malloc@plt>
   12054:	subs	r7, r0, #0
   12058:	beq	12174 <sprintf@plt+0xbcc>
   1205c:	mov	r2, r6
   12060:	mov	r1, r5
   12064:	bl	113f8 <memcpy@plt>
   12068:	ldr	r3, [r4, #8]
   1206c:	ldr	r0, [r4, #12]
   12070:	ldrb	r4, [r3]
   12074:	sub	r2, r4, #52	; 0x34
   12078:	cmp	r2, #31
   1207c:	addls	pc, pc, r2, lsl #2
   12080:	b	12178 <sprintf@plt+0xbd0>
   12084:	b	1216c <sprintf@plt+0xbc4>
   12088:	b	12178 <sprintf@plt+0xbd0>
   1208c:	b	12130 <sprintf@plt+0xb88>
   12090:	b	12178 <sprintf@plt+0xbd0>
   12094:	b	12178 <sprintf@plt+0xbd0>
   12098:	b	12178 <sprintf@plt+0xbd0>
   1209c:	b	12178 <sprintf@plt+0xbd0>
   120a0:	b	12178 <sprintf@plt+0xbd0>
   120a4:	b	12178 <sprintf@plt+0xbd0>
   120a8:	b	12178 <sprintf@plt+0xbd0>
   120ac:	b	12178 <sprintf@plt+0xbd0>
   120b0:	b	12178 <sprintf@plt+0xbd0>
   120b4:	b	12178 <sprintf@plt+0xbd0>
   120b8:	b	12178 <sprintf@plt+0xbd0>
   120bc:	b	12178 <sprintf@plt+0xbd0>
   120c0:	b	12178 <sprintf@plt+0xbd0>
   120c4:	b	12178 <sprintf@plt+0xbd0>
   120c8:	b	12178 <sprintf@plt+0xbd0>
   120cc:	b	12178 <sprintf@plt+0xbd0>
   120d0:	b	12178 <sprintf@plt+0xbd0>
   120d4:	b	12178 <sprintf@plt+0xbd0>
   120d8:	b	12178 <sprintf@plt+0xbd0>
   120dc:	b	12178 <sprintf@plt+0xbd0>
   120e0:	b	12178 <sprintf@plt+0xbd0>
   120e4:	b	12178 <sprintf@plt+0xbd0>
   120e8:	b	12178 <sprintf@plt+0xbd0>
   120ec:	b	12178 <sprintf@plt+0xbd0>
   120f0:	b	12178 <sprintf@plt+0xbd0>
   120f4:	b	12178 <sprintf@plt+0xbd0>
   120f8:	b	12178 <sprintf@plt+0xbd0>
   120fc:	b	12104 <sprintf@plt+0xb5c>
   12100:	b	12104 <sprintf@plt+0xb5c>
   12104:	ldr	r1, [pc, #136]	; 12194 <sprintf@plt+0xbec>
   12108:	mov	r2, r7
   1210c:	add	r1, pc, r1
   12110:	bl	11f18 <sprintf@plt+0x970>
   12114:	subs	r3, r0, #0
   12118:	beq	1214c <sprintf@plt+0xba4>
   1211c:	ldrd	r4, [sp]
   12120:	ldrd	r6, [sp, #8]
   12124:	ldr	r8, [sp, #16]
   12128:	add	sp, sp, #20
   1212c:	pop	{pc}		; (ldr pc, [sp], #4)
   12130:	mov	r1, #10
   12134:	ldr	r2, [pc, #92]	; 12198 <sprintf@plt+0xbf0>
   12138:	mov	r3, r7
   1213c:	add	r2, pc, r2
   12140:	bl	11e34 <sprintf@plt+0x88c>
   12144:	subs	r3, r0, #0
   12148:	bne	1211c <sprintf@plt+0xb74>
   1214c:	mov	r2, r4
   12150:	mov	r1, r3
   12154:	ldrd	r4, [sp]
   12158:	ldrd	r6, [sp, #8]
   1215c:	ldr	r8, [sp, #16]
   12160:	ldr	lr, [sp, #20]
   12164:	add	sp, sp, #24
   12168:	b	11d7c <sprintf@plt+0x7d4>
   1216c:	mov	r1, #2
   12170:	b	12134 <sprintf@plt+0xb8c>
   12174:	bl	1147c <rb_outofmemory@plt>
   12178:	ldr	r1, [pc, #28]	; 1219c <sprintf@plt+0xbf4>
   1217c:	mov	r0, #67	; 0x43
   12180:	mov	r2, r4
   12184:	add	r1, pc, r1
   12188:	bl	123a0 <sprintf@plt+0xdf8>
   1218c:	mov	r0, #2
   12190:	bl	11590 <exit@plt>
   12194:			; <UNDEFINED> instruction: 0xfffffc68
   12198:			; <UNDEFINED> instruction: 0xfffffc38
   1219c:	andeq	r7, r0, r4, lsl sl
   121a0:	ldr	r3, [pc, #336]	; 122f8 <sprintf@plt+0xd50>
   121a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   121a8:	ldr	r2, [pc, #332]	; 122fc <sprintf@plt+0xd54>
   121ac:	strd	r6, [sp, #8]
   121b0:	strd	r8, [sp, #16]
   121b4:	strd	sl, [sp, #24]
   121b8:	add	r3, pc, r3
   121bc:	str	lr, [sp, #32]
   121c0:	sub	sp, sp, #620	; 0x26c
   121c4:	strd	r0, [sp, #8]
   121c8:	ldr	sl, [r3, r2]
   121cc:	ldr	r2, [sl]
   121d0:	cmp	r2, #0
   121d4:	beq	122d0 <sprintf@plt+0xd28>
   121d8:	addle	r9, sp, #76	; 0x4c
   121dc:	ble	12278 <sprintf@plt+0xcd0>
   121e0:	ldr	r1, [pc, #280]	; 12300 <sprintf@plt+0xd58>
   121e4:	mov	r6, #0
   121e8:	add	r8, sp, #20
   121ec:	mov	r4, r6
   121f0:	add	fp, sp, #76	; 0x4c
   121f4:	ldr	r2, [pc, #264]	; 12304 <sprintf@plt+0xd5c>
   121f8:	add	r1, pc, r1
   121fc:	str	r1, [sp, #4]
   12200:	ldr	r7, [r3, r2]
   12204:	mov	r2, #53	; 0x35
   12208:	mov	r1, r8
   1220c:	mov	r0, r7
   12210:	bl	114d0 <rb_inet_ntop_sock@plt>
   12214:	ldrb	r3, [sp, #20]
   12218:	cmp	r3, #0
   1221c:	beq	122a8 <sprintf@plt+0xd00>
   12220:	mov	r0, r8
   12224:	add	r6, r6, #1
   12228:	bl	113d4 <strlen@plt>
   1222c:	mov	r5, r0
   12230:	mov	r3, r8
   12234:	ldr	r2, [sp, #4]
   12238:	add	r0, fp, r4
   1223c:	rsb	r1, r4, #540	; 0x21c
   12240:	bl	1153c <snprintf@plt>
   12244:	ldr	r3, [sl]
   12248:	add	r5, r5, #1
   1224c:	mov	r9, fp
   12250:	add	r7, r7, #128	; 0x80
   12254:	add	r4, r4, r5
   12258:	cmp	r3, r6
   1225c:	bgt	12204 <sprintf@plt+0xc5c>
   12260:	cmp	r4, #0
   12264:	beq	12278 <sprintf@plt+0xcd0>
   12268:	add	r3, sp, #616	; 0x268
   1226c:	add	r4, r3, r4
   12270:	mov	r3, #0
   12274:	strb	r3, [r4, #-541]	; 0xfffffde3
   12278:	ldr	r2, [pc, #136]	; 12308 <sprintf@plt+0xd60>
   1227c:	mov	r3, r9
   12280:	ldrd	r0, [sp, #8]
   12284:	add	r2, pc, r2
   12288:	bl	12420 <sprintf@plt+0xe78>
   1228c:	add	sp, sp, #620	; 0x26c
   12290:	ldrd	r4, [sp]
   12294:	ldrd	r6, [sp, #8]
   12298:	ldrd	r8, [sp, #16]
   1229c:	ldrd	sl, [sp, #24]
   122a0:	add	sp, sp, #32
   122a4:	pop	{pc}		; (ldr pc, [sp], #4)
   122a8:	ldr	r1, [pc, #92]	; 1230c <sprintf@plt+0xd64>
   122ac:	mov	r0, #67	; 0x43
   122b0:	add	r1, pc, r1
   122b4:	bl	123a0 <sprintf@plt+0xdf8>
   122b8:	ldr	r2, [pc, #80]	; 12310 <sprintf@plt+0xd68>
   122bc:	ldrd	r0, [sp, #8]
   122c0:	add	r2, pc, r2
   122c4:	bl	124b0 <sprintf@plt+0xf08>
   122c8:	mov	r0, #2
   122cc:	bl	11590 <exit@plt>
   122d0:	ldr	r1, [pc, #60]	; 12314 <sprintf@plt+0xd6c>
   122d4:	mov	r0, #67	; 0x43
   122d8:	add	r1, pc, r1
   122dc:	bl	123a0 <sprintf@plt+0xdf8>
   122e0:	ldr	r2, [pc, #48]	; 12318 <sprintf@plt+0xd70>
   122e4:	ldrd	r0, [sp, #8]
   122e8:	add	r2, pc, r2
   122ec:	bl	124b0 <sprintf@plt+0xf08>
   122f0:	mov	r0, #2
   122f4:	bl	11590 <exit@plt>
   122f8:	andeq	r8, r1, r0, asr #28
   122fc:	andeq	r0, r0, r8, ror #2
   12300:	andeq	r7, r0, r8, lsr #20
   12304:	andeq	r0, r0, r4, ror r1
   12308:	andeq	r8, r0, r0, ror r4
   1230c:	andeq	r7, r0, r4, asr #18
   12310:	andeq	r7, r0, ip, asr #18
   12314:	strdeq	r7, [r0], -r4
   12318:	strdeq	r7, [r0], -ip
   1231c:	b	139b4 <sprintf@plt+0x240c>
   12320:	push	{r1, r2, r3}
   12324:	mov	r1, #512	; 0x200
   12328:	strd	r4, [sp, #-12]!
   1232c:	mov	r5, r0
   12330:	str	lr, [sp, #8]
   12334:	sub	sp, sp, #520	; 0x208
   12338:	add	ip, sp, #536	; 0x218
   1233c:	add	r4, sp, #8
   12340:	ldr	r2, [sp, #532]	; 0x214
   12344:	mov	r3, ip
   12348:	mov	r0, r4
   1234c:	str	ip, [sp, #4]
   12350:	bl	11290 <vsnprintf@plt>
   12354:	ldr	r0, [pc, #56]	; 12394 <sprintf@plt+0xdec>
   12358:	mov	r3, r4
   1235c:	mov	r2, r5
   12360:	ldr	ip, [pc, #48]	; 12398 <sprintf@plt+0xdf0>
   12364:	ldr	r1, [pc, #48]	; 1239c <sprintf@plt+0xdf4>
   12368:	add	r0, pc, r0
   1236c:	ldr	r0, [r0, ip]
   12370:	add	r1, pc, r1
   12374:	ldr	r0, [r0]
   12378:	bl	1150c <rb_helper_write@plt>
   1237c:	add	sp, sp, #520	; 0x208
   12380:	ldrd	r4, [sp]
   12384:	ldr	lr, [sp, #8]
   12388:	add	sp, sp, #12
   1238c:	add	sp, sp, #12
   12390:	bx	lr
   12394:	muleq	r1, r0, ip
   12398:	muleq	r0, r0, r1
   1239c:			; <UNDEFINED> instruction: 0x000078b4
   123a0:	push	{r1, r2, r3}
   123a4:	mov	r1, #512	; 0x200
   123a8:	strd	r4, [sp, #-12]!
   123ac:	mov	r5, r0
   123b0:	str	lr, [sp, #8]
   123b4:	sub	sp, sp, #520	; 0x208
   123b8:	add	ip, sp, #536	; 0x218
   123bc:	add	r4, sp, #8
   123c0:	ldr	r2, [sp, #532]	; 0x214
   123c4:	mov	r3, ip
   123c8:	mov	r0, r4
   123cc:	str	ip, [sp, #4]
   123d0:	bl	11290 <vsnprintf@plt>
   123d4:	ldr	r0, [pc, #56]	; 12414 <sprintf@plt+0xe6c>
   123d8:	mov	r3, r4
   123dc:	mov	r2, r5
   123e0:	ldr	ip, [pc, #48]	; 12418 <sprintf@plt+0xe70>
   123e4:	ldr	r1, [pc, #48]	; 1241c <sprintf@plt+0xe74>
   123e8:	add	r0, pc, r0
   123ec:	ldr	r0, [r0, ip]
   123f0:	add	r1, pc, r1
   123f4:	ldr	r0, [r0]
   123f8:	bl	1150c <rb_helper_write@plt>
   123fc:	add	sp, sp, #520	; 0x208
   12400:	ldrd	r4, [sp]
   12404:	ldr	lr, [sp, #8]
   12408:	add	sp, sp, #12
   1240c:	add	sp, sp, #12
   12410:	bx	lr
   12414:	andeq	r8, r1, r0, lsl ip
   12418:	muleq	r0, r0, r1
   1241c:	andeq	r7, r0, r0, asr #16
   12420:	push	{r2, r3}
   12424:	strd	r4, [sp, #-20]!	; 0xffffffec
   12428:	strd	r6, [sp, #8]
   1242c:	mov	r6, r0
   12430:	mov	r7, r1
   12434:	str	lr, [sp, #16]
   12438:	sub	sp, sp, #532	; 0x214
   1243c:	mov	r1, #512	; 0x200
   12440:	add	ip, sp, #556	; 0x22c
   12444:	add	r4, sp, #16
   12448:	ldr	r5, [pc, #84]	; 124a4 <sprintf@plt+0xefc>
   1244c:	mov	r3, ip
   12450:	mov	r0, r4
   12454:	ldr	r2, [sp, #552]	; 0x228
   12458:	str	ip, [sp, #12]
   1245c:	bl	11290 <vsnprintf@plt>
   12460:	ldr	r0, [pc, #64]	; 124a8 <sprintf@plt+0xf00>
   12464:	add	r5, pc, r5
   12468:	mov	r3, r7
   1246c:	mov	r2, r6
   12470:	ldr	r1, [pc, #52]	; 124ac <sprintf@plt+0xf04>
   12474:	ldr	r0, [r5, r0]
   12478:	str	r4, [sp]
   1247c:	add	r1, pc, r1
   12480:	ldr	r0, [r0]
   12484:	bl	1150c <rb_helper_write@plt>
   12488:	add	sp, sp, #532	; 0x214
   1248c:	ldrd	r4, [sp]
   12490:	ldrd	r6, [sp, #8]
   12494:	ldr	lr, [sp, #16]
   12498:	add	sp, sp, #20
   1249c:	add	sp, sp, #8
   124a0:	bx	lr
   124a4:	muleq	r1, r4, fp
   124a8:	muleq	r0, r0, r1
   124ac:	andeq	r7, r0, r0, asr #15
   124b0:	push	{r2, r3}
   124b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   124b8:	strd	r6, [sp, #8]
   124bc:	mov	r6, r0
   124c0:	mov	r7, r1
   124c4:	str	lr, [sp, #16]
   124c8:	sub	sp, sp, #532	; 0x214
   124cc:	mov	r1, #512	; 0x200
   124d0:	add	ip, sp, #556	; 0x22c
   124d4:	add	r4, sp, #16
   124d8:	ldr	r5, [pc, #84]	; 12534 <sprintf@plt+0xf8c>
   124dc:	mov	r3, ip
   124e0:	mov	r0, r4
   124e4:	ldr	r2, [sp, #552]	; 0x228
   124e8:	str	ip, [sp, #12]
   124ec:	bl	11290 <vsnprintf@plt>
   124f0:	ldr	r0, [pc, #64]	; 12538 <sprintf@plt+0xf90>
   124f4:	add	r5, pc, r5
   124f8:	mov	r3, r7
   124fc:	mov	r2, r6
   12500:	ldr	r1, [pc, #52]	; 1253c <sprintf@plt+0xf94>
   12504:	ldr	r0, [r5, r0]
   12508:	str	r4, [sp]
   1250c:	add	r1, pc, r1
   12510:	ldr	r0, [r0]
   12514:	bl	1150c <rb_helper_write@plt>
   12518:	add	sp, sp, #532	; 0x214
   1251c:	ldrd	r4, [sp]
   12520:	ldrd	r6, [sp, #8]
   12524:	ldr	lr, [sp, #16]
   12528:	add	sp, sp, #20
   1252c:	add	sp, sp, #8
   12530:	bx	lr
   12534:	andeq	r8, r1, r4, lsl #22
   12538:	muleq	r0, r0, r1
   1253c:	andeq	r7, r0, ip, lsr r7
   12540:	ldr	ip, [pc, #36]	; 1256c <sprintf@plt+0xfc4>
   12544:	mov	r2, r0
   12548:	mov	r3, r1
   1254c:	ldr	r1, [pc, #28]	; 12570 <sprintf@plt+0xfc8>
   12550:	add	ip, pc, ip
   12554:	mov	r0, ip
   12558:	ldr	ip, [pc, #20]	; 12574 <sprintf@plt+0xfcc>
   1255c:	add	r1, pc, r1
   12560:	ldr	r0, [r0, ip]
   12564:	ldr	r0, [r0]
   12568:	b	1150c <rb_helper_write@plt>
   1256c:	andeq	r8, r1, r8, lsr #21
   12570:	strdeq	r7, [r0], -r8
   12574:	muleq	r0, r0, r1
   12578:	sub	r0, r1, r0
   1257c:	bx	lr
   12580:	ldr	r3, [pc, #404]	; 1271c <sprintf@plt+0x1174>
   12584:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12588:	mov	r5, r0
   1258c:	add	r3, pc, r3
   12590:	ldr	r2, [r3, #8]
   12594:	strd	r6, [sp, #8]
   12598:	ldr	r7, [pc, #384]	; 12720 <sprintf@plt+0x1178>
   1259c:	str	r8, [sp, #16]
   125a0:	str	lr, [sp, #20]
   125a4:	cmp	r2, #0
   125a8:	add	r7, pc, r7
   125ac:	bne	12680 <sprintf@plt+0x10d8>
   125b0:	ldr	r2, [r3, #12]
   125b4:	cmn	r2, #1
   125b8:	cmpne	r2, #32
   125bc:	addne	r1, r2, #1
   125c0:	strne	r2, [r0, #12]
   125c4:	strne	r1, [r3, #12]
   125c8:	beq	126e8 <sprintf@plt+0x1140>
   125cc:	ldr	r4, [r5, #56]	; 0x38
   125d0:	cmp	r4, #0
   125d4:	beq	12604 <sprintf@plt+0x105c>
   125d8:	ldr	r1, [r4]
   125dc:	cmp	r1, #0
   125e0:	beq	12604 <sprintf@plt+0x105c>
   125e4:	ldr	r3, [pc, #312]	; 12724 <sprintf@plt+0x117c>
   125e8:	ldr	r6, [r7, r3]
   125ec:	mov	r2, r4
   125f0:	ldr	r0, [r6]
   125f4:	bl	11494 <rb_dictionary_add@plt>
   125f8:	ldr	r1, [r4, #12]!
   125fc:	cmp	r1, #0
   12600:	bne	125ec <sprintf@plt+0x1044>
   12604:	ldrb	r3, [r5, #48]	; 0x30
   12608:	cmp	r3, #0
   1260c:	bne	1266c <sprintf@plt+0x10c4>
   12610:	ldr	r3, [r5, #24]
   12614:	cmp	r3, #0
   12618:	beq	12620 <sprintf@plt+0x1078>
   1261c:	blx	r3
   12620:	ldr	r3, [pc, #256]	; 12728 <sprintf@plt+0x1180>
   12624:	mov	r2, #0
   12628:	str	r5, [r5]
   1262c:	str	r2, [r5, #4]
   12630:	ldr	r3, [r7, r3]
   12634:	ldr	r2, [r3]
   12638:	cmp	r2, #0
   1263c:	str	r2, [r5, #8]
   12640:	strne	r5, [r2, #4]
   12644:	beq	126d8 <sprintf@plt+0x1130>
   12648:	ldr	r2, [r3, #8]
   1264c:	ldrd	r6, [sp, #8]
   12650:	ldr	r8, [sp, #16]
   12654:	add	r2, r2, #1
   12658:	str	r5, [r3]
   1265c:	ldrd	r4, [sp]
   12660:	add	sp, sp, #20
   12664:	str	r2, [r3, #8]
   12668:	pop	{pc}		; (ldr pc, [sp], #4)
   1266c:	ldr	r2, [pc, #184]	; 1272c <sprintf@plt+0x1184>
   12670:	ldr	r1, [r5, #52]	; 0x34
   12674:	ldr	r2, [r7, r2]
   12678:	str	r1, [r2, r3, lsl #2]
   1267c:	b	12610 <sprintf@plt+0x1068>
   12680:	ldr	r1, [r3]
   12684:	ldr	lr, [r1]
   12688:	ldr	r0, [r1, #8]
   1268c:	ldr	ip, [r1, #4]
   12690:	str	lr, [r5, #12]
   12694:	cmp	r0, #0
   12698:	strne	ip, [r0, #4]
   1269c:	ldrne	ip, [r1, #4]
   126a0:	streq	ip, [r3, #4]
   126a4:	cmp	ip, #0
   126a8:	beq	1270c <sprintf@plt+0x1164>
   126ac:	str	r0, [ip, #8]
   126b0:	mov	r0, r1
   126b4:	ldr	r3, [pc, #116]	; 12730 <sprintf@plt+0x1188>
   126b8:	mov	ip, #0
   126bc:	sub	r2, r2, #1
   126c0:	str	ip, [r1, #4]
   126c4:	str	ip, [r1, #8]
   126c8:	add	r3, pc, r3
   126cc:	str	r2, [r3, #8]
   126d0:	bl	11404 <rb_free_rb_dlink_node@plt>
   126d4:	b	125cc <sprintf@plt+0x1024>
   126d8:	ldr	r2, [r3, #4]
   126dc:	cmp	r2, #0
   126e0:	streq	r5, [r3, #4]
   126e4:	b	12648 <sprintf@plt+0x10a0>
   126e8:	ldr	r1, [pc, #68]	; 12734 <sprintf@plt+0x118c>
   126ec:	mov	r0, #87	; 0x57
   126f0:	ldrd	r4, [sp]
   126f4:	ldrd	r6, [sp, #8]
   126f8:	add	r1, pc, r1
   126fc:	ldr	r8, [sp, #16]
   12700:	ldr	lr, [sp, #20]
   12704:	add	sp, sp, #24
   12708:	b	123a0 <sprintf@plt+0xdf8>
   1270c:	ldr	r3, [pc, #36]	; 12738 <sprintf@plt+0x1190>
   12710:	add	r3, pc, r3
   12714:	str	r0, [r3]
   12718:	b	126b4 <sprintf@plt+0x110c>
   1271c:	andeq	sp, r1, r4, lsr sl
   12720:	andeq	r8, r1, r0, asr sl
   12724:	andeq	r0, r0, ip, ror r1
   12728:	muleq	r0, ip, r1
   1272c:	muleq	r0, r4, r1
   12730:	strdeq	sp, [r1], -r8
   12734:	andeq	r7, r0, r0, ror r5
   12738:			; <UNDEFINED> instruction: 0x0001d8b0
   1273c:	ldr	r1, [pc, #140]	; 127d0 <sprintf@plt+0x1228>
   12740:	str	r4, [sp, #-8]!
   12744:	ldr	r0, [pc, #136]	; 127d4 <sprintf@plt+0x122c>
   12748:	str	lr, [sp, #4]
   1274c:	ldr	r4, [pc, #132]	; 127d8 <sprintf@plt+0x1230>
   12750:	add	r1, pc, r1
   12754:	add	r0, pc, r0
   12758:	bl	114e8 <rb_dictionary_create@plt>
   1275c:	ldr	ip, [pc, #120]	; 127dc <sprintf@plt+0x1234>
   12760:	add	r4, pc, r4
   12764:	mov	r3, #1
   12768:	mov	r2, #0
   1276c:	ldr	r1, [pc, #108]	; 127e0 <sprintf@plt+0x1238>
   12770:	ldr	ip, [r4, ip]
   12774:	add	r1, pc, r1
   12778:	str	r0, [ip]
   1277c:	ldr	r0, [pc, #96]	; 127e4 <sprintf@plt+0x123c>
   12780:	add	r0, pc, r0
   12784:	bl	1120c <rb_event_addish@plt>
   12788:	ldr	r2, [pc, #88]	; 127e8 <sprintf@plt+0x1240>
   1278c:	ldr	r3, [pc, #88]	; 127ec <sprintf@plt+0x1244>
   12790:	add	r2, pc, r2
   12794:	str	r0, [r2, #16]
   12798:	ldr	r0, [r4, r3]
   1279c:	bl	12580 <sprintf@plt+0xfd8>
   127a0:	ldr	r3, [pc, #72]	; 127f0 <sprintf@plt+0x1248>
   127a4:	ldr	r0, [r4, r3]
   127a8:	bl	12580 <sprintf@plt+0xfd8>
   127ac:	ldr	r3, [pc, #64]	; 127f4 <sprintf@plt+0x124c>
   127b0:	ldr	r0, [r4, r3]
   127b4:	bl	12580 <sprintf@plt+0xfd8>
   127b8:	ldr	r3, [pc, #56]	; 127f8 <sprintf@plt+0x1250>
   127bc:	ldr	lr, [sp, #4]
   127c0:	ldr	r0, [r4, r3]
   127c4:	ldr	r4, [sp]
   127c8:	add	sp, sp, #8
   127cc:	b	12580 <sprintf@plt+0xfd8>
   127d0:			; <UNDEFINED> instruction: 0xfffffe20
   127d4:	andeq	r7, r0, r4, asr #10
   127d8:	muleq	r1, r8, r8
   127dc:	andeq	r0, r0, r4, asr r1
   127e0:	muleq	r0, r0, r2
   127e4:	andeq	r7, r0, r0, lsr r5
   127e8:	andeq	sp, r1, r0, lsr r8
   127ec:	andeq	r0, r0, r4, lsl #3
   127f0:	andeq	r0, r0, r0, lsl #3
   127f4:	andeq	r0, r0, r4, ror #2
   127f8:	andeq	r0, r0, r0, ror #2
   127fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12800:	mov	r5, r0
   12804:	ldr	r4, [r0, #56]	; 0x38
   12808:	strd	r6, [sp, #8]
   1280c:	ldr	r7, [pc, #372]	; 12988 <sprintf@plt+0x13e0>
   12810:	str	r8, [sp, #16]
   12814:	str	lr, [sp, #20]
   12818:	cmp	r4, #0
   1281c:	add	r7, pc, r7
   12820:	beq	1284c <sprintf@plt+0x12a4>
   12824:	ldr	r1, [r4]
   12828:	cmp	r1, #0
   1282c:	beq	1284c <sprintf@plt+0x12a4>
   12830:	ldr	r3, [pc, #340]	; 1298c <sprintf@plt+0x13e4>
   12834:	ldr	r6, [r7, r3]
   12838:	ldr	r0, [r6]
   1283c:	bl	113ec <rb_dictionary_delete@plt>
   12840:	ldr	r1, [r4, #12]!
   12844:	cmp	r1, #0
   12848:	bne	12838 <sprintf@plt+0x1290>
   1284c:	ldrb	r3, [r5, #48]	; 0x30
   12850:	cmp	r3, #0
   12854:	bne	12914 <sprintf@plt+0x136c>
   12858:	ldr	r3, [r5, #28]
   1285c:	cmp	r3, #0
   12860:	beq	12868 <sprintf@plt+0x12c0>
   12864:	blx	r3
   12868:	ldr	r3, [r5, #4]
   1286c:	ldr	r2, [r5, #8]
   12870:	cmp	r2, #0
   12874:	beq	12938 <sprintf@plt+0x1390>
   12878:	ldr	r1, [pc, #272]	; 12990 <sprintf@plt+0x13e8>
   1287c:	str	r3, [r2, #4]
   12880:	ldr	r3, [r5, #4]
   12884:	ldr	r1, [r7, r1]
   12888:	cmp	r3, #0
   1288c:	mov	r4, #0
   12890:	ldr	r6, [r5, #12]
   12894:	strne	r2, [r3, #8]
   12898:	ldr	r3, [r1, #8]
   1289c:	str	r4, [r5, #4]
   128a0:	str	r4, [r5, #8]
   128a4:	streq	r2, [r1]
   128a8:	sub	r3, r3, #1
   128ac:	str	r3, [r1, #8]
   128b0:	bl	11530 <rb_make_rb_dlink_node@plt>
   128b4:	cmp	r6, r4
   128b8:	beq	12968 <sprintf@plt+0x13c0>
   128bc:	cmp	r0, #0
   128c0:	beq	12948 <sprintf@plt+0x13a0>
   128c4:	ldr	r2, [pc, #200]	; 12994 <sprintf@plt+0x13ec>
   128c8:	str	r4, [r0, #4]
   128cc:	add	r2, pc, r2
   128d0:	ldr	r3, [r2]
   128d4:	str	r6, [r0]
   128d8:	cmp	r3, #0
   128dc:	str	r3, [r0, #8]
   128e0:	strne	r0, [r3, #4]
   128e4:	beq	12928 <sprintf@plt+0x1380>
   128e8:	ldr	r3, [pc, #168]	; 12998 <sprintf@plt+0x13f0>
   128ec:	ldrd	r4, [sp]
   128f0:	ldrd	r6, [sp, #8]
   128f4:	add	r3, pc, r3
   128f8:	ldr	r2, [r3, #8]
   128fc:	ldr	r8, [sp, #16]
   12900:	add	sp, sp, #20
   12904:	str	r0, [r3]
   12908:	add	r2, r2, #1
   1290c:	str	r2, [r3, #8]
   12910:	pop	{pc}		; (ldr pc, [sp], #4)
   12914:	ldr	r2, [pc, #128]	; 1299c <sprintf@plt+0x13f4>
   12918:	mov	r1, #0
   1291c:	ldr	r2, [r7, r2]
   12920:	str	r1, [r2, r3, lsl #2]
   12924:	b	12858 <sprintf@plt+0x12b0>
   12928:	ldr	r3, [r2, #4]
   1292c:	cmp	r3, #0
   12930:	streq	r0, [r2, #4]
   12934:	b	128e8 <sprintf@plt+0x1340>
   12938:	ldr	r1, [pc, #80]	; 12990 <sprintf@plt+0x13e8>
   1293c:	ldr	r1, [r7, r1]
   12940:	str	r3, [r1, #4]
   12944:	b	12888 <sprintf@plt+0x12e0>
   12948:	ldr	r3, [pc, #80]	; 129a0 <sprintf@plt+0x13f8>
   1294c:	mov	r2, #144	; 0x90
   12950:	ldr	r1, [pc, #76]	; 129a4 <sprintf@plt+0x13fc>
   12954:	ldr	r0, [pc, #76]	; 129a8 <sprintf@plt+0x1400>
   12958:	add	r3, pc, r3
   1295c:	add	r1, pc, r1
   12960:	add	r0, pc, r0
   12964:	bl	11350 <__assert_fail@plt>
   12968:	ldr	r3, [pc, #60]	; 129ac <sprintf@plt+0x1404>
   1296c:	mov	r2, #143	; 0x8f
   12970:	ldr	r1, [pc, #56]	; 129b0 <sprintf@plt+0x1408>
   12974:	ldr	r0, [pc, #56]	; 129b4 <sprintf@plt+0x140c>
   12978:	add	r3, pc, r3
   1297c:	add	r1, pc, r1
   12980:	add	r0, pc, r0
   12984:	bl	11350 <__assert_fail@plt>
   12988:	ldrdeq	r8, [r1], -ip
   1298c:	andeq	r0, r0, ip, ror r1
   12990:	muleq	r0, ip, r1
   12994:	strdeq	sp, [r1], -r4
   12998:	andeq	sp, r1, ip, asr #13
   1299c:	muleq	r0, r4, r1
   129a0:	andeq	r7, r0, r4, lsl #6
   129a4:	andeq	r7, r0, ip, ror #6
   129a8:	muleq	r0, r4, r3
   129ac:	andeq	r7, r0, r4, ror #5
   129b0:	andeq	r7, r0, ip, asr #6
   129b4:	andeq	r7, r0, r4, ror #6
   129b8:	ldr	r3, [pc, #68]	; 12a04 <sprintf@plt+0x145c>
   129bc:	str	r4, [sp, #-8]!
   129c0:	mov	r4, r0
   129c4:	ldr	r2, [pc, #60]	; 12a08 <sprintf@plt+0x1460>
   129c8:	ldr	r1, [r0]
   129cc:	add	r3, pc, r3
   129d0:	str	lr, [sp, #4]
   129d4:	ldr	r3, [r3, r2]
   129d8:	ldr	r0, [r3]
   129dc:	bl	113ec <rb_dictionary_delete@plt>
   129e0:	ldr	r0, [r4, #464]	; 0x1d0
   129e4:	cmp	r0, #0
   129e8:	beq	129f0 <sprintf@plt+0x1448>
   129ec:	bl	11380 <free@plt>
   129f0:	mov	r0, r4
   129f4:	ldr	r4, [sp]
   129f8:	ldr	lr, [sp, #4]
   129fc:	add	sp, sp, #8
   12a00:	b	11380 <free@plt>
   12a04:	andeq	r8, r1, ip, lsr #12
   12a08:	andeq	r0, r0, r4, asr r1
   12a0c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12a10:	strd	r6, [sp, #8]
   12a14:	strd	r8, [sp, #16]
   12a18:	ldr	r8, [pc, #256]	; 12b20 <sprintf@plt+0x1578>
   12a1c:	str	lr, [sp, #24]
   12a20:	sub	sp, sp, #12
   12a24:	bl	113e0 <rb_current_time@plt>
   12a28:	ldr	r3, [pc, #244]	; 12b24 <sprintf@plt+0x157c>
   12a2c:	mov	r6, sp
   12a30:	mov	r7, r0
   12a34:	mov	r1, r6
   12a38:	add	r8, pc, r8
   12a3c:	ldr	r5, [r8, r3]
   12a40:	ldr	r0, [r5]
   12a44:	bl	113bc <rb_dictionary_foreach_start@plt>
   12a48:	mov	r1, r6
   12a4c:	ldr	r0, [r5]
   12a50:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   12a54:	subs	r9, r0, #0
   12a58:	beq	12b08 <sprintf@plt+0x1560>
   12a5c:	ldr	r3, [r9, #460]	; 0x1cc
   12a60:	ldr	r2, [pc, #192]	; 12b28 <sprintf@plt+0x1580>
   12a64:	add	r1, r3, #1
   12a68:	str	r1, [r9, #460]	; 0x1cc
   12a6c:	ldr	r2, [r8, r2]
   12a70:	ldr	r4, [r2]
   12a74:	cmp	r4, #0
   12a78:	bne	12a8c <sprintf@plt+0x14e4>
   12a7c:	b	12ae0 <sprintf@plt+0x1538>
   12a80:	ldr	r4, [r4, #8]
   12a84:	cmp	r4, #0
   12a88:	beq	12ad8 <sprintf@plt+0x1530>
   12a8c:	ldr	r2, [r4]
   12a90:	ldr	r3, [r9, #464]	; 0x1d0
   12a94:	ldr	r1, [r2, #12]
   12a98:	add	r3, r3, r1, lsl #4
   12a9c:	ldr	r1, [r3, #12]
   12aa0:	cmp	r1, #1
   12aa4:	bne	12a80 <sprintf@plt+0x14d8>
   12aa8:	ldr	r2, [r2, #40]	; 0x28
   12aac:	cmp	r2, #0
   12ab0:	beq	12a80 <sprintf@plt+0x14d8>
   12ab4:	ldr	r3, [r3, #4]
   12ab8:	mov	r0, r9
   12abc:	cmp	r3, #0
   12ac0:	cmpgt	r7, r3
   12ac4:	ble	12a80 <sprintf@plt+0x14d8>
   12ac8:	blx	r2
   12acc:	ldr	r4, [r4, #8]
   12ad0:	cmp	r4, #0
   12ad4:	bne	12a8c <sprintf@plt+0x14e4>
   12ad8:	ldr	r3, [r9, #460]	; 0x1cc
   12adc:	sub	r3, r3, #1
   12ae0:	cmp	r3, #0
   12ae4:	str	r3, [r9, #460]	; 0x1cc
   12ae8:	beq	12afc <sprintf@plt+0x1554>
   12aec:	mov	r1, r6
   12af0:	ldr	r0, [r5]
   12af4:	bl	11374 <rb_dictionary_foreach_next@plt>
   12af8:	b	12a48 <sprintf@plt+0x14a0>
   12afc:	mov	r0, r9
   12b00:	bl	129b8 <sprintf@plt+0x1410>
   12b04:	b	12aec <sprintf@plt+0x1544>
   12b08:	add	sp, sp, #12
   12b0c:	ldrd	r4, [sp]
   12b10:	ldrd	r6, [sp, #8]
   12b14:	ldrd	r8, [sp, #16]
   12b18:	add	sp, sp, #24
   12b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b20:	andeq	r8, r1, r0, asr #11
   12b24:	andeq	r0, r0, r4, asr r1
   12b28:	muleq	r0, ip, r1
   12b2c:	ldrb	r2, [r0, #452]	; 0x1c4
   12b30:	ldr	r3, [pc, #140]	; 12bc4 <sprintf@plt+0x161c>
   12b34:	cmp	r2, #0
   12b38:	add	r3, pc, r3
   12b3c:	bxne	lr
   12b40:	mov	r1, #1
   12b44:	ldr	r2, [r0, #456]	; 0x1c8
   12b48:	strb	r1, [r0, #452]	; 0x1c4
   12b4c:	cmp	r2, #0
   12b50:	bxeq	lr
   12b54:	strd	r4, [sp, #-16]!
   12b58:	mov	r5, r0
   12b5c:	ldr	r2, [pc, #100]	; 12bc8 <sprintf@plt+0x1620>
   12b60:	str	r6, [sp, #8]
   12b64:	str	lr, [sp, #12]
   12b68:	ldr	r3, [r3, r2]
   12b6c:	ldr	r4, [r3]
   12b70:	cmp	r4, #0
   12b74:	beq	12bb4 <sprintf@plt+0x160c>
   12b78:	ldr	r3, [r4]
   12b7c:	ldr	r2, [r3, #36]	; 0x24
   12b80:	cmp	r2, #0
   12b84:	beq	12ba8 <sprintf@plt+0x1600>
   12b88:	ldr	r1, [r3, #12]
   12b8c:	ldr	r3, [r5, #464]	; 0x1d0
   12b90:	add	r3, r3, r1, lsl #4
   12b94:	ldr	r3, [r3, #12]
   12b98:	cmp	r3, #1
   12b9c:	bne	12ba8 <sprintf@plt+0x1600>
   12ba0:	mov	r0, r5
   12ba4:	blx	r2
   12ba8:	ldr	r4, [r4, #8]
   12bac:	cmp	r4, #0
   12bb0:	bne	12b78 <sprintf@plt+0x15d0>
   12bb4:	ldrd	r4, [sp]
   12bb8:	ldr	r6, [sp, #8]
   12bbc:	add	sp, sp, #12
   12bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bc4:	andeq	r8, r1, r0, asr #9
   12bc8:	muleq	r0, ip, r1
   12bcc:	push	{r3}		; (str r3, [sp, #-4]!)
   12bd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12bd4:	mov	r4, r0
   12bd8:	strd	r6, [sp, #8]
   12bdc:	mov	r6, r1
   12be0:	mov	r1, #512	; 0x200
   12be4:	str	r8, [sp, #16]
   12be8:	mov	r8, r2
   12bec:	str	lr, [sp, #20]
   12bf0:	sub	sp, sp, #540	; 0x21c
   12bf4:	add	ip, sp, #568	; 0x238
   12bf8:	add	r7, sp, #24
   12bfc:	ldr	r5, [pc, #276]	; 12d18 <sprintf@plt+0x1770>
   12c00:	mov	r3, ip
   12c04:	mov	r0, r7
   12c08:	ldr	r2, [sp, #564]	; 0x234
   12c0c:	str	ip, [sp, #20]
   12c10:	bl	11290 <vsnprintf@plt>
   12c14:	ldr	r3, [pc, #256]	; 12d1c <sprintf@plt+0x1774>
   12c18:	add	r5, pc, r5
   12c1c:	mov	r1, r4
   12c20:	cmn	r6, #1
   12c24:	add	ip, r4, #376	; 0x178
   12c28:	ldr	r2, [r1], #440	; 0x1b8
   12c2c:	ldr	r3, [r5, r3]
   12c30:	ldr	r0, [r3]
   12c34:	beq	12cac <sprintf@plt+0x1704>
   12c38:	cmp	r8, #0
   12c3c:	lsl	r5, r6, #4
   12c40:	ldr	r3, [r4, #464]	; 0x1d0
   12c44:	ldr	r3, [r3, r6, lsl #4]
   12c48:	ldrb	r3, [r3, #20]
   12c4c:	beq	12cd4 <sprintf@plt+0x172c>
   12c50:	stm	sp, {r1, ip}
   12c54:	ldr	r1, [pc, #196]	; 12d20 <sprintf@plt+0x1778>
   12c58:	str	r8, [sp, #8]
   12c5c:	str	r7, [sp, #12]
   12c60:	add	r1, pc, r1
   12c64:	bl	1150c <rb_helper_write@plt>
   12c68:	ldr	r3, [r4, #456]	; 0x1c8
   12c6c:	mov	r1, #2
   12c70:	ldr	r2, [r4, #464]	; 0x1d0
   12c74:	sub	r3, r3, #1
   12c78:	add	r2, r2, r5
   12c7c:	str	r1, [r2, #12]
   12c80:	str	r3, [r4, #456]	; 0x1c8
   12c84:	mov	r0, r4
   12c88:	bl	12b2c <sprintf@plt+0x1584>
   12c8c:	add	sp, sp, #540	; 0x21c
   12c90:	ldrd	r4, [sp]
   12c94:	ldrd	r6, [sp, #8]
   12c98:	ldr	r8, [sp, #16]
   12c9c:	ldr	lr, [sp, #20]
   12ca0:	add	sp, sp, #24
   12ca4:	add	sp, sp, #4
   12ca8:	bx	lr
   12cac:	cmp	r8, #0
   12cb0:	beq	12cf4 <sprintf@plt+0x174c>
   12cb4:	stm	sp, {r1, ip}
   12cb8:	mov	r3, #42	; 0x2a
   12cbc:	ldr	r1, [pc, #96]	; 12d24 <sprintf@plt+0x177c>
   12cc0:	str	r8, [sp, #8]
   12cc4:	str	r7, [sp, #12]
   12cc8:	add	r1, pc, r1
   12ccc:	bl	1150c <rb_helper_write@plt>
   12cd0:	b	12c84 <sprintf@plt+0x16dc>
   12cd4:	ldr	lr, [pc, #76]	; 12d28 <sprintf@plt+0x1780>
   12cd8:	str	r7, [sp, #12]
   12cdc:	add	lr, pc, lr
   12ce0:	stm	sp, {r1, ip, lr}
   12ce4:	ldr	r1, [pc, #64]	; 12d2c <sprintf@plt+0x1784>
   12ce8:	add	r1, pc, r1
   12cec:	bl	1150c <rb_helper_write@plt>
   12cf0:	b	12c68 <sprintf@plt+0x16c0>
   12cf4:	ldr	lr, [pc, #52]	; 12d30 <sprintf@plt+0x1788>
   12cf8:	mov	r3, #42	; 0x2a
   12cfc:	str	r7, [sp, #12]
   12d00:	add	lr, pc, lr
   12d04:	stm	sp, {r1, ip, lr}
   12d08:	ldr	r1, [pc, #36]	; 12d34 <sprintf@plt+0x178c>
   12d0c:	add	r1, pc, r1
   12d10:	bl	1150c <rb_helper_write@plt>
   12d14:	b	12c84 <sprintf@plt+0x16dc>
   12d18:	andeq	r8, r1, r0, ror #7
   12d1c:	muleq	r0, r0, r1
   12d20:	andeq	r7, r0, r0, lsr #1
   12d24:	andeq	r7, r0, r8, lsr r0
   12d28:	andeq	r7, r0, ip, lsr r0
   12d2c:	andeq	r7, r0, r8, lsl r0
   12d30:	andeq	r7, r0, r8, lsl r0
   12d34:	strdeq	r6, [r0], -r4
   12d38:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12d3c:	ldr	r3, [pc, #344]	; 12e9c <sprintf@plt+0x18f4>
   12d40:	strd	r8, [sp, #16]
   12d44:	ldr	r9, [pc, #340]	; 12ea0 <sprintf@plt+0x18f8>
   12d48:	strd	r6, [sp, #8]
   12d4c:	str	lr, [sp, #24]
   12d50:	sub	sp, sp, #12
   12d54:	ldr	r8, [pc, #328]	; 12ea4 <sprintf@plt+0x18fc>
   12d58:	mov	r5, sp
   12d5c:	mov	r1, r5
   12d60:	add	r9, pc, r9
   12d64:	ldr	r7, [pc, #316]	; 12ea8 <sprintf@plt+0x1900>
   12d68:	ldr	r6, [r9, r3]
   12d6c:	add	r8, pc, r8
   12d70:	add	r7, pc, r7
   12d74:	ldr	r0, [r6]
   12d78:	bl	113bc <rb_dictionary_foreach_start@plt>
   12d7c:	b	12d8c <sprintf@plt+0x17e4>
   12d80:	mov	r1, r5
   12d84:	ldr	r0, [r6]
   12d88:	bl	11374 <rb_dictionary_foreach_next@plt>
   12d8c:	mov	r1, r5
   12d90:	ldr	r0, [r6]
   12d94:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   12d98:	subs	r4, r0, #0
   12d9c:	mov	r3, r8
   12da0:	mov	r2, r7
   12da4:	mvn	r1, #0
   12da8:	beq	12ddc <sprintf@plt+0x1834>
   12dac:	ldr	ip, [r4, #460]	; 0x1cc
   12db0:	add	ip, ip, #1
   12db4:	str	ip, [r4, #460]	; 0x1cc
   12db8:	bl	12bcc <sprintf@plt+0x1624>
   12dbc:	ldr	r3, [r4, #460]	; 0x1cc
   12dc0:	sub	r3, r3, #1
   12dc4:	cmp	r3, #0
   12dc8:	str	r3, [r4, #460]	; 0x1cc
   12dcc:	bne	12d80 <sprintf@plt+0x17d8>
   12dd0:	mov	r0, r4
   12dd4:	bl	129b8 <sprintf@plt+0x1410>
   12dd8:	b	12d80 <sprintf@plt+0x17d8>
   12ddc:	ldr	r3, [pc, #200]	; 12eac <sprintf@plt+0x1904>
   12de0:	ldr	r8, [r9, r3]
   12de4:	ldr	r5, [r8]
   12de8:	cmp	r5, #0
   12dec:	beq	12e64 <sprintf@plt+0x18bc>
   12df0:	ldr	r3, [r5]
   12df4:	ldr	r7, [r5, #8]
   12df8:	ldr	r3, [r3, #28]
   12dfc:	cmp	r3, #0
   12e00:	beq	12e08 <sprintf@plt+0x1860>
   12e04:	blx	r3
   12e08:	ldr	r3, [r5, #4]
   12e0c:	ldr	r2, [r5, #8]
   12e10:	cmp	r2, #0
   12e14:	strne	r3, [r2, #4]
   12e18:	ldrne	r3, [r5, #4]
   12e1c:	streq	r3, [r8, #4]
   12e20:	cmp	r3, #0
   12e24:	strne	r2, [r3, #8]
   12e28:	ldr	r3, [r8, #8]
   12e2c:	streq	r2, [r8]
   12e30:	cmp	r7, #0
   12e34:	str	r4, [r5, #4]
   12e38:	str	r4, [r5, #8]
   12e3c:	mov	r5, r7
   12e40:	sub	r3, r3, #1
   12e44:	str	r3, [r8, #8]
   12e48:	beq	12e64 <sprintf@plt+0x18bc>
   12e4c:	ldr	r3, [r5]
   12e50:	ldr	r7, [r7, #8]
   12e54:	ldr	r3, [r3, #28]
   12e58:	cmp	r3, #0
   12e5c:	bne	12e04 <sprintf@plt+0x185c>
   12e60:	b	12e08 <sprintf@plt+0x1860>
   12e64:	mov	r2, #0
   12e68:	ldr	r0, [r6]
   12e6c:	mov	r1, r2
   12e70:	bl	11434 <rb_dictionary_destroy@plt>
   12e74:	ldr	r3, [pc, #52]	; 12eb0 <sprintf@plt+0x1908>
   12e78:	add	r3, pc, r3
   12e7c:	ldr	r0, [r3, #16]
   12e80:	bl	11260 <rb_event_delete@plt>
   12e84:	add	sp, sp, #12
   12e88:	ldrd	r4, [sp]
   12e8c:	ldrd	r6, [sp, #8]
   12e90:	ldrd	r8, [sp, #16]
   12e94:	add	sp, sp, #24
   12e98:	pop	{pc}		; (ldr pc, [sp], #4)
   12e9c:	andeq	r0, r0, r4, asr r1
   12ea0:	muleq	r1, r8, r2
   12ea4:			; <UNDEFINED> instruction: 0x00006fb0
   12ea8:	strdeq	r6, [r0], -r0
   12eac:	muleq	r0, ip, r1
   12eb0:	andeq	sp, r1, r8, asr #2
   12eb4:	ldr	r1, [pc, #76]	; 12f08 <sprintf@plt+0x1960>
   12eb8:	add	r3, r0, #440	; 0x1b8
   12ebc:	str	r4, [sp, #-8]!
   12ec0:	mov	r4, r0
   12ec4:	ldr	ip, [pc, #64]	; 12f0c <sprintf@plt+0x1964>
   12ec8:	ldr	r2, [r0], #376	; 0x178
   12ecc:	add	r1, pc, r1
   12ed0:	str	lr, [sp, #4]
   12ed4:	sub	sp, sp, #8
   12ed8:	ldr	ip, [r1, ip]
   12edc:	ldr	r1, [pc, #44]	; 12f10 <sprintf@plt+0x1968>
   12ee0:	str	r0, [sp]
   12ee4:	ldr	r0, [ip]
   12ee8:	add	r1, pc, r1
   12eec:	bl	1150c <rb_helper_write@plt>
   12ef0:	mov	r0, r4
   12ef4:	add	sp, sp, #8
   12ef8:	ldr	r4, [sp]
   12efc:	ldr	lr, [sp, #4]
   12f00:	add	sp, sp, #8
   12f04:	b	12b2c <sprintf@plt+0x1584>
   12f08:	andeq	r8, r1, ip, lsr #2
   12f0c:	muleq	r0, r0, r1
   12f10:	andeq	r6, r0, r0, lsl #29
   12f14:	ldr	r3, [r0, #456]	; 0x1c8
   12f18:	strd	r4, [sp, #-16]!
   12f1c:	mov	r5, r0
   12f20:	ldr	r2, [r0, #464]	; 0x1d0
   12f24:	str	r6, [sp, #8]
   12f28:	ldr	ip, [pc, #168]	; 12fd8 <sprintf@plt+0x1a30>
   12f2c:	sub	r3, r3, #1
   12f30:	str	lr, [sp, #12]
   12f34:	mov	lr, #2
   12f38:	cmp	r3, #0
   12f3c:	add	r2, r2, r1, lsl #4
   12f40:	add	ip, pc, ip
   12f44:	str	lr, [r2, #12]
   12f48:	str	r3, [r0, #456]	; 0x1c8
   12f4c:	bne	12f5c <sprintf@plt+0x19b4>
   12f50:	ldrb	r3, [r0, #451]	; 0x1c3
   12f54:	cmp	r3, #0
   12f58:	beq	12fc4 <sprintf@plt+0x1a1c>
   12f5c:	ldr	r3, [pc, #120]	; 12fdc <sprintf@plt+0x1a34>
   12f60:	mov	r6, r1
   12f64:	ldr	r3, [ip, r3]
   12f68:	ldr	r4, [r3]
   12f6c:	cmp	r4, #0
   12f70:	beq	12fb4 <sprintf@plt+0x1a0c>
   12f74:	ldr	r3, [r4]
   12f78:	ldr	r2, [r3, #44]	; 0x2c
   12f7c:	cmp	r2, #0
   12f80:	beq	12fa8 <sprintf@plt+0x1a00>
   12f84:	ldr	r1, [r3, #12]
   12f88:	ldr	r3, [r5, #464]	; 0x1d0
   12f8c:	add	r3, r3, r1, lsl #4
   12f90:	ldr	r3, [r3, #12]
   12f94:	cmp	r3, #1
   12f98:	bne	12fa8 <sprintf@plt+0x1a00>
   12f9c:	mov	r1, r6
   12fa0:	mov	r0, r5
   12fa4:	blx	r2
   12fa8:	ldr	r4, [r4, #8]
   12fac:	cmp	r4, #0
   12fb0:	bne	12f74 <sprintf@plt+0x19cc>
   12fb4:	ldrd	r4, [sp]
   12fb8:	ldr	r6, [sp, #8]
   12fbc:	add	sp, sp, #12
   12fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12fc4:	ldrd	r4, [sp]
   12fc8:	ldr	r6, [sp, #8]
   12fcc:	ldr	lr, [sp, #12]
   12fd0:	add	sp, sp, #16
   12fd4:	b	12eb4 <sprintf@plt+0x190c>
   12fd8:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   12fdc:	muleq	r0, ip, r1
   12fe0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12fe4:	cmp	r0, #5
   12fe8:	strd	r6, [sp, #8]
   12fec:	ldr	r6, [pc, #712]	; 132bc <sprintf@plt+0x1d14>
   12ff0:	strd	r8, [sp, #16]
   12ff4:	strd	sl, [sp, #24]
   12ff8:	str	lr, [sp, #32]
   12ffc:	sub	sp, sp, #20
   13000:	add	r6, pc, r6
   13004:	ble	13284 <sprintf@plt+0x1cdc>
   13008:	cmp	r0, #6
   1300c:	ldmib	r1, {r7, r9, fp}
   13010:	ldr	r3, [r1, #20]
   13014:	ldr	r8, [r1, #16]
   13018:	str	r3, [sp, #8]
   1301c:	bne	13230 <sprintf@plt+0x1c88>
   13020:	ldr	r3, [pc, #664]	; 132c0 <sprintf@plt+0x1d18>
   13024:	add	r3, pc, r3
   13028:	str	r3, [sp, #12]
   1302c:	mov	r2, #16
   13030:	mov	r1, #0
   13034:	mov	r0, r7
   13038:	bl	11368 <strtoull@plt>
   1303c:	subs	r4, r0, #1
   13040:	mov	r3, r1
   13044:	sbc	r5, r3, #0
   13048:	mov	r1, #0
   1304c:	mov	r2, r0
   13050:	cmp	r5, r1
   13054:	mvn	r0, #1
   13058:	cmpeq	r4, r0
   1305c:	str	r2, [sp, #4]
   13060:	bhi	13214 <sprintf@plt+0x1c6c>
   13064:	mov	r1, #468	; 0x1d4
   13068:	mov	r0, #1
   1306c:	bl	112f0 <calloc@plt>
   13070:	subs	sl, r0, #0
   13074:	ldr	r2, [sp, #4]
   13078:	beq	13280 <sprintf@plt+0x1cd8>
   1307c:	ldr	r0, [sl, #460]	; 0x1cc
   13080:	mov	r1, r2
   13084:	str	r2, [sl]
   13088:	ldr	r2, [pc, #564]	; 132c4 <sprintf@plt+0x1d1c>
   1308c:	add	r0, r0, #1
   13090:	str	r0, [sl, #460]	; 0x1cc
   13094:	ldr	r5, [r6, r2]
   13098:	ldr	r0, [r5]
   1309c:	bl	114dc <rb_dictionary_find@plt>
   130a0:	subs	r4, r0, #0
   130a4:	bne	132a0 <sprintf@plt+0x1cf8>
   130a8:	mov	r2, sl
   130ac:	ldr	r1, [sl]
   130b0:	ldr	r0, [r5]
   130b4:	bl	11494 <rb_dictionary_add@plt>
   130b8:	mov	r2, #16
   130bc:	mov	r1, r4
   130c0:	ldr	r0, [sp, #12]
   130c4:	bl	11368 <strtoull@plt>
   130c8:	mov	r2, #54	; 0x36
   130cc:	mov	r1, r9
   130d0:	str	r0, [sl, #4]
   130d4:	add	r0, sl, #8
   130d8:	bl	1135c <rb_strlcpy@plt>
   130dc:	mov	r1, r4
   130e0:	mov	r2, #10
   130e4:	ldr	r4, [pc, #476]	; 132c8 <sprintf@plt+0x1d20>
   130e8:	mov	r0, fp
   130ec:	bl	1141c <strtol@plt>
   130f0:	add	r1, sl, #64	; 0x40
   130f4:	strh	r0, [sl, #62]	; 0x3e
   130f8:	mov	r0, r9
   130fc:	bl	113c8 <rb_inet_pton_sock@plt>
   13100:	ldrh	r2, [sl, #62]	; 0x3e
   13104:	mov	r1, r8
   13108:	add	r0, sl, #192	; 0xc0
   1310c:	add	r4, pc, r4
   13110:	rev16	r2, r2
   13114:	strh	r2, [sl, #66]	; 0x42
   13118:	mov	r2, #54	; 0x36
   1311c:	bl	1135c <rb_strlcpy@plt>
   13120:	mov	r2, #10
   13124:	mov	r1, #0
   13128:	ldr	r0, [sp, #8]
   1312c:	bl	1141c <strtol@plt>
   13130:	add	r1, sl, #248	; 0xf8
   13134:	strh	r0, [sl, #246]	; 0xf6
   13138:	mov	r0, r8
   1313c:	bl	113c8 <rb_inet_pton_sock@plt>
   13140:	ldrh	r2, [sl, #246]	; 0xf6
   13144:	mov	r1, r4
   13148:	add	r0, sl, #376	; 0x178
   1314c:	rev16	r2, r2
   13150:	strh	r2, [sl, #250]	; 0xfa
   13154:	mov	r2, #64	; 0x40
   13158:	bl	1135c <rb_strlcpy@plt>
   1315c:	mov	r1, r4
   13160:	mov	r2, #11
   13164:	add	r0, sl, #440	; 0x1b8
   13168:	bl	1135c <rb_strlcpy@plt>
   1316c:	ldr	r2, [pc, #344]	; 132cc <sprintf@plt+0x1d24>
   13170:	mov	r0, #1
   13174:	add	r2, pc, r2
   13178:	ldr	r1, [r2, #12]
   1317c:	lsl	r1, r1, #4
   13180:	bl	112f0 <calloc@plt>
   13184:	subs	lr, r0, #0
   13188:	beq	13280 <sprintf@plt+0x1cd8>
   1318c:	ldr	r2, [pc, #316]	; 132d0 <sprintf@plt+0x1d28>
   13190:	mov	r5, #1
   13194:	strb	r5, [sl, #451]	; 0x1c3
   13198:	str	lr, [sl, #464]	; 0x1d0
   1319c:	ldr	r2, [r6, r2]
   131a0:	ldr	r4, [r2]
   131a4:	cmp	r4, #0
   131a8:	bne	131cc <sprintf@plt+0x1c24>
   131ac:	b	1323c <sprintf@plt+0x1c94>
   131b0:	ldrb	r2, [sl, #452]	; 0x1c4
   131b4:	cmp	r2, #0
   131b8:	bne	1323c <sprintf@plt+0x1c94>
   131bc:	ldr	r4, [r4, #8]
   131c0:	cmp	r4, #0
   131c4:	beq	1323c <sprintf@plt+0x1c94>
   131c8:	ldr	lr, [sl, #464]	; 0x1d0
   131cc:	mov	r0, sl
   131d0:	ldr	ip, [r4]
   131d4:	ldr	r1, [sl, #456]	; 0x1c8
   131d8:	ldr	r2, [ip, #12]
   131dc:	ldr	r6, [ip, #32]
   131e0:	add	r1, r1, #1
   131e4:	str	ip, [lr, r2, lsl #4]
   131e8:	add	r2, lr, r2, lsl #4
   131ec:	str	r1, [sl, #456]	; 0x1c8
   131f0:	str	r5, [r2, #12]
   131f4:	blx	r6
   131f8:	cmp	r0, #0
   131fc:	bne	131b0 <sprintf@plt+0x1c08>
   13200:	ldr	r2, [sl, #460]	; 0x1cc
   13204:	sub	r2, r2, #1
   13208:	cmp	r2, #0
   1320c:	str	r2, [sl, #460]	; 0x1cc
   13210:	beq	1325c <sprintf@plt+0x1cb4>
   13214:	add	sp, sp, #20
   13218:	ldrd	r4, [sp]
   1321c:	ldrd	r6, [sp, #8]
   13220:	ldrd	r8, [sp, #16]
   13224:	ldrd	sl, [sp, #24]
   13228:	add	sp, sp, #32
   1322c:	pop	{pc}		; (ldr pc, [sp], #4)
   13230:	ldr	r3, [r1, #24]
   13234:	str	r3, [sp, #12]
   13238:	b	1302c <sprintf@plt+0x1a84>
   1323c:	ldr	r2, [sl, #456]	; 0x1c8
   13240:	mov	r1, #0
   13244:	strb	r1, [sl, #451]	; 0x1c3
   13248:	cmp	r2, r1
   1324c:	bne	13200 <sprintf@plt+0x1c58>
   13250:	mov	r0, sl
   13254:	bl	12eb4 <sprintf@plt+0x190c>
   13258:	b	13200 <sprintf@plt+0x1c58>
   1325c:	mov	r0, sl
   13260:	add	sp, sp, #20
   13264:	ldrd	r4, [sp]
   13268:	ldrd	r6, [sp, #8]
   1326c:	ldrd	r8, [sp, #16]
   13270:	ldrd	sl, [sp, #24]
   13274:	ldr	lr, [sp, #32]
   13278:	add	sp, sp, #36	; 0x24
   1327c:	b	129b8 <sprintf@plt+0x1410>
   13280:	bl	1147c <rb_outofmemory@plt>
   13284:	ldr	r1, [pc, #72]	; 132d4 <sprintf@plt+0x1d2c>
   13288:	mov	r2, r0
   1328c:	mov	r0, #67	; 0x43
   13290:	add	r1, pc, r1
   13294:	bl	123a0 <sprintf@plt+0xdf8>
   13298:	mov	r0, #3
   1329c:	bl	11590 <exit@plt>
   132a0:	ldr	r1, [pc, #48]	; 132d8 <sprintf@plt+0x1d30>
   132a4:	mov	r0, #67	; 0x43
   132a8:	mov	r2, r7
   132ac:	add	r1, pc, r1
   132b0:	bl	123a0 <sprintf@plt+0xdf8>
   132b4:	mov	r0, #3
   132b8:	bl	11590 <exit@plt>
   132bc:	strdeq	r7, [r1], -r8
   132c0:	andeq	r6, r0, ip, asr #29
   132c4:	andeq	r0, r0, r4, asr r1
   132c8:	andeq	r6, r0, ip, lsl #24
   132cc:	andeq	ip, r1, ip, asr #28
   132d0:	muleq	r0, ip, r1
   132d4:	andeq	r6, r0, r4, ror #21
   132d8:	andeq	r6, r0, r4, lsl fp
   132dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   132e0:	cmp	r0, #1
   132e4:	ldr	r4, [pc, #232]	; 133d4 <sprintf@plt+0x1e2c>
   132e8:	strd	r6, [sp, #8]
   132ec:	str	r8, [sp, #16]
   132f0:	str	lr, [sp, #20]
   132f4:	add	r4, pc, r4
   132f8:	ble	133b8 <sprintf@plt+0x1e10>
   132fc:	mov	r5, r1
   13300:	mov	r2, #16
   13304:	mov	r1, #0
   13308:	ldr	r0, [r5, #4]
   1330c:	bl	11368 <strtoull@plt>
   13310:	subs	r6, r0, #1
   13314:	mov	r3, #0
   13318:	sbc	r7, r1, #0
   1331c:	mvn	r2, #1
   13320:	cmp	r7, r3
   13324:	cmpeq	r6, r2
   13328:	bhi	1339c <sprintf@plt+0x1df4>
   1332c:	ldr	r3, [pc, #164]	; 133d8 <sprintf@plt+0x1e30>
   13330:	mov	r1, r0
   13334:	ldr	r3, [r4, r3]
   13338:	ldr	r0, [r3]
   1333c:	bl	11470 <rb_dictionary_retrieve@plt>
   13340:	subs	r4, r0, #0
   13344:	beq	1336c <sprintf@plt+0x1dc4>
   13348:	ldr	r3, [r4, #460]	; 0x1cc
   1334c:	add	r3, r3, #1
   13350:	str	r3, [r4, #460]	; 0x1cc
   13354:	bl	12b2c <sprintf@plt+0x1584>
   13358:	ldr	r3, [r4, #460]	; 0x1cc
   1335c:	sub	r3, r3, #1
   13360:	cmp	r3, #0
   13364:	str	r3, [r4, #460]	; 0x1cc
   13368:	beq	13380 <sprintf@plt+0x1dd8>
   1336c:	ldrd	r4, [sp]
   13370:	ldrd	r6, [sp, #8]
   13374:	ldr	r8, [sp, #16]
   13378:	add	sp, sp, #20
   1337c:	pop	{pc}		; (ldr pc, [sp], #4)
   13380:	mov	r0, r4
   13384:	ldrd	r4, [sp]
   13388:	ldrd	r6, [sp, #8]
   1338c:	ldr	r8, [sp, #16]
   13390:	ldr	lr, [sp, #20]
   13394:	add	sp, sp, #24
   13398:	b	129b8 <sprintf@plt+0x1410>
   1339c:	ldr	r1, [pc, #56]	; 133dc <sprintf@plt+0x1e34>
   133a0:	mov	r0, #67	; 0x43
   133a4:	ldr	r2, [r5, #4]
   133a8:	add	r1, pc, r1
   133ac:	bl	123a0 <sprintf@plt+0xdf8>
   133b0:	mov	r0, #3
   133b4:	bl	11590 <exit@plt>
   133b8:	ldr	r1, [pc, #32]	; 133e0 <sprintf@plt+0x1e38>
   133bc:	mov	r2, r0
   133c0:	mov	r0, #67	; 0x43
   133c4:	add	r1, pc, r1
   133c8:	bl	123a0 <sprintf@plt+0xdf8>
   133cc:	mov	r0, #3
   133d0:	bl	11590 <exit@plt>
   133d4:	andeq	r7, r1, r4, lsl #26
   133d8:	andeq	r0, r0, r4, asr r1
   133dc:	muleq	r0, r8, sl
   133e0:	andeq	r6, r0, r0, lsr sl
   133e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   133e8:	mov	r4, #1024	; 0x400
   133ec:	mov	r1, #0
   133f0:	strd	r6, [sp, #8]
   133f4:	mov	r2, r4
   133f8:	mov	r7, r0
   133fc:	strd	r8, [sp, #16]
   13400:	strd	sl, [sp, #24]
   13404:	str	lr, [sp, #32]
   13408:	sub	sp, sp, #1040	; 0x410
   1340c:	sub	sp, sp, #12
   13410:	ldr	r8, [pc, #516]	; 1361c <sprintf@plt+0x2074>
   13414:	add	r5, sp, #24
   13418:	mov	r0, r5
   1341c:	bl	11320 <memset@plt>
   13420:	ldrb	r2, [r7, #20]
   13424:	mov	r3, r5
   13428:	add	r0, r7, #21
   1342c:	mov	r1, #1
   13430:	str	r4, [sp]
   13434:	add	r8, pc, r8
   13438:	bl	14fe0 <sprintf@plt+0x3a38>
   1343c:	subs	r6, r0, #0
   13440:	bgt	13464 <sprintf@plt+0x1ebc>
   13444:	add	sp, sp, #1040	; 0x410
   13448:	add	sp, sp, #12
   1344c:	ldrd	r4, [sp]
   13450:	ldrd	r6, [sp, #8]
   13454:	ldrd	r8, [sp, #16]
   13458:	ldrd	sl, [sp, #24]
   1345c:	add	sp, sp, #32
   13460:	pop	{pc}		; (ldr pc, [sp], #4)
   13464:	ldr	sl, [pc, #436]	; 13620 <sprintf@plt+0x2078>
   13468:	ldrb	r2, [r7, #278]	; 0x116
   1346c:	ldr	r3, [pc, #432]	; 13624 <sprintf@plt+0x207c>
   13470:	add	sl, pc, sl
   13474:	ldr	r1, [sl]
   13478:	add	r2, r2, #1
   1347c:	ldr	r0, [r7, #12]
   13480:	uxtb	r2, r2
   13484:	strb	r2, [r7, #278]	; 0x116
   13488:	add	r1, r1, #1
   1348c:	strh	r0, [r5]
   13490:	str	r1, [sl]
   13494:	ldr	r3, [r8, r3]
   13498:	str	r3, [sp, #12]
   1349c:	ldr	r3, [r3]
   134a0:	cmp	r3, #0
   134a4:	ble	13444 <sprintf@plt+0x1e9c>
   134a8:	sub	r2, r2, #1
   134ac:	ldr	r1, [pc, #372]	; 13628 <sprintf@plt+0x2080>
   134b0:	mov	r9, #0
   134b4:	str	r2, [sp, #8]
   134b8:	ldr	r2, [pc, #364]	; 1362c <sprintf@plt+0x2084>
   134bc:	add	r1, pc, r1
   134c0:	str	r1, [sp, #16]
   134c4:	add	r2, pc, r2
   134c8:	str	r2, [sp, #20]
   134cc:	ldr	r2, [sp, #8]
   134d0:	add	r4, r9, r2
   134d4:	sdiv	r2, r4, r3
   134d8:	mls	r4, r3, r2, r4
   134dc:	add	r3, sl, r4, lsl #2
   134e0:	ldr	r2, [r3, #4]
   134e4:	cmp	r2, #0
   134e8:	sub	r3, r2, #1
   134ec:	beq	13514 <sprintf@plt+0x1f6c>
   134f0:	cmp	r3, #3
   134f4:	mov	r2, #243	; 0xf3
   134f8:	ldr	r1, [sl]
   134fc:	ldrls	r2, [sp, #20]
   13500:	ldrls	r2, [r2, r3, lsl #2]
   13504:	sdiv	r3, r1, r2
   13508:	mls	r3, r2, r3, r1
   1350c:	cmp	r3, #0
   13510:	bne	13560 <sprintf@plt+0x1fb8>
   13514:	ldr	r3, [sp, #16]
   13518:	ldr	r0, [r3, #44]	; 0x2c
   1351c:	bl	11278 <rb_get_fd@plt>
   13520:	ldr	lr, [pc, #264]	; 13630 <sprintf@plt+0x2088>
   13524:	lsl	ip, r4, #7
   13528:	mov	r3, #0
   1352c:	mov	r2, r6
   13530:	mov	r1, r5
   13534:	ldr	lr, [r8, lr]
   13538:	ldrh	fp, [ip, lr]
   1353c:	add	ip, ip, lr
   13540:	str	ip, [sp]
   13544:	cmp	fp, #2
   13548:	moveq	ip, #16
   1354c:	movne	ip, #28
   13550:	str	ip, [sp, #4]
   13554:	bl	11308 <sendto@plt>
   13558:	cmp	r6, r0
   1355c:	beq	13610 <sprintf@plt+0x2068>
   13560:	ldr	r3, [sp, #12]
   13564:	add	r9, r9, #1
   13568:	ldr	r3, [r3]
   1356c:	cmp	r3, r9
   13570:	bgt	134cc <sprintf@plt+0x1f24>
   13574:	cmp	r3, #0
   13578:	ble	13444 <sprintf@plt+0x1e9c>
   1357c:	ldr	sl, [pc, #176]	; 13634 <sprintf@plt+0x208c>
   13580:	mov	r9, #0
   13584:	str	r7, [sp, #16]
   13588:	ldr	r7, [sp, #12]
   1358c:	add	sl, pc, sl
   13590:	b	135a0 <sprintf@plt+0x1ff8>
   13594:	ldr	r3, [r7]
   13598:	cmp	r3, r9
   1359c:	ble	13444 <sprintf@plt+0x1e9c>
   135a0:	ldr	r2, [sp, #8]
   135a4:	add	r4, r9, r2
   135a8:	add	r9, r9, #1
   135ac:	sdiv	r2, r4, r3
   135b0:	mls	r4, r3, r2, r4
   135b4:	add	r3, sl, r4, lsl #2
   135b8:	ldr	r3, [r3, #4]
   135bc:	cmp	r3, #0
   135c0:	beq	13594 <sprintf@plt+0x1fec>
   135c4:	ldr	r0, [sl, #44]	; 0x2c
   135c8:	bl	11278 <rb_get_fd@plt>
   135cc:	ldr	lr, [pc, #92]	; 13630 <sprintf@plt+0x2088>
   135d0:	lsl	ip, r4, #7
   135d4:	mov	r3, #0
   135d8:	mov	r2, r6
   135dc:	mov	r1, r5
   135e0:	ldr	lr, [r8, lr]
   135e4:	ldrh	fp, [ip, lr]
   135e8:	add	ip, ip, lr
   135ec:	str	ip, [sp]
   135f0:	cmp	fp, #2
   135f4:	moveq	ip, #16
   135f8:	movne	ip, #28
   135fc:	str	ip, [sp, #4]
   13600:	bl	11308 <sendto@plt>
   13604:	cmp	r6, r0
   13608:	bne	13594 <sprintf@plt+0x1fec>
   1360c:	ldr	r7, [sp, #16]
   13610:	cmn	r4, #1
   13614:	strne	r4, [r7, #288]	; 0x120
   13618:	b	13444 <sprintf@plt+0x1e9c>
   1361c:	andeq	r7, r1, r4, asr #23
   13620:	andeq	ip, r1, r4, ror #22
   13624:	andeq	r0, r0, r8, ror #2
   13628:	andeq	ip, r1, r8, lsl fp
   1362c:	andeq	r6, r0, r0, asr #19
   13630:	andeq	r0, r0, r4, ror r1
   13634:	andeq	ip, r1, r8, asr #20
   13638:	strd	r4, [sp, #-16]!
   1363c:	str	r6, [sp, #8]
   13640:	str	lr, [sp, #12]
   13644:	bl	146b8 <sprintf@plt+0x3110>
   13648:	ldr	r0, [pc, #200]	; 13718 <sprintf@plt+0x2170>
   1364c:	ldr	r3, [pc, #200]	; 1371c <sprintf@plt+0x2174>
   13650:	add	r0, pc, r0
   13654:	ldr	r3, [r0, r3]
   13658:	ldr	r2, [r3]
   1365c:	cmp	r2, #0
   13660:	ble	13684 <sprintf@plt+0x20dc>
   13664:	ldr	r3, [pc, #180]	; 13720 <sprintf@plt+0x2178>
   13668:	mov	r1, #0
   1366c:	add	r3, pc, r3
   13670:	add	r3, r3, #4
   13674:	add	r2, r3, r2, lsl #2
   13678:	str	r1, [r3], #4
   1367c:	cmp	r3, r2
   13680:	bne	13678 <sprintf@plt+0x20d0>
   13684:	ldr	r5, [pc, #152]	; 13724 <sprintf@plt+0x217c>
   13688:	add	r5, pc, r5
   1368c:	ldr	r4, [r5, #44]	; 0x2c
   13690:	cmp	r4, #0
   13694:	beq	136a8 <sprintf@plt+0x2100>
   13698:	ldrd	r4, [sp]
   1369c:	ldr	r6, [sp, #8]
   136a0:	add	sp, sp, #12
   136a4:	pop	{pc}		; (ldr pc, [sp], #4)
   136a8:	ldr	ip, [pc, #120]	; 13728 <sprintf@plt+0x2180>
   136ac:	mov	r2, r4
   136b0:	mov	r1, #2
   136b4:	ldr	r3, [pc, #112]	; 1372c <sprintf@plt+0x2184>
   136b8:	ldr	r0, [r0, ip]
   136bc:	add	r3, pc, r3
   136c0:	ldrh	r0, [r0]
   136c4:	bl	1129c <rb_socket@plt>
   136c8:	cmp	r0, #0
   136cc:	str	r0, [r5, #44]	; 0x2c
   136d0:	beq	13698 <sprintf@plt+0x20f0>
   136d4:	ldr	r2, [pc, #84]	; 13730 <sprintf@plt+0x2188>
   136d8:	mov	r3, r4
   136dc:	mov	r1, #1
   136e0:	add	r2, pc, r2
   136e4:	bl	1126c <rb_setselect@plt>
   136e8:	ldr	r1, [pc, #68]	; 13734 <sprintf@plt+0x218c>
   136ec:	mov	r2, r4
   136f0:	mov	r3, #1
   136f4:	ldr	r0, [pc, #60]	; 13738 <sprintf@plt+0x2190>
   136f8:	add	r1, pc, r1
   136fc:	add	r0, pc, r0
   13700:	bl	11518 <rb_event_add@plt>
   13704:	str	r0, [r5, #48]	; 0x30
   13708:	ldrd	r4, [sp]
   1370c:	ldr	r6, [sp, #8]
   13710:	add	sp, sp, #12
   13714:	pop	{pc}		; (ldr pc, [sp], #4)
   13718:	andeq	r7, r1, r8, lsr #19
   1371c:	andeq	r0, r0, r8, ror #2
   13720:	andeq	ip, r1, r8, ror #18
   13724:	andeq	ip, r1, ip, asr #18
   13728:	andeq	r0, r0, r4, ror r1
   1372c:	strdeq	r6, [r0], -ip
   13730:	andeq	r0, r0, ip, asr lr
   13734:			; <UNDEFINED> instruction: 0x000007b4
   13738:	ldrdeq	r6, [r0], -r0
   1373c:	str	r4, [sp, #-8]!
   13740:	subs	r4, r0, #0
   13744:	str	lr, [sp, #4]
   13748:	beq	137dc <sprintf@plt+0x2234>
   1374c:	ldr	r3, [r4, #4]
   13750:	ldr	r2, [r4, #8]
   13754:	cmp	r2, #0
   13758:	beq	137b4 <sprintf@plt+0x220c>
   1375c:	str	r3, [r2, #4]
   13760:	ldr	r3, [r4, #4]
   13764:	cmp	r3, #0
   13768:	strne	r2, [r3, #8]
   1376c:	beq	137cc <sprintf@plt+0x2224>
   13770:	ldr	r2, [pc, #136]	; 13800 <sprintf@plt+0x2258>
   13774:	mov	r3, #0
   13778:	str	r3, [r4, #4]
   1377c:	str	r3, [r4, #8]
   13780:	ldr	r0, [r4, #420]	; 0x1a4
   13784:	add	r2, pc, r2
   13788:	ldr	r3, [r2, #60]	; 0x3c
   1378c:	cmp	r0, #0
   13790:	sub	r3, r3, #1
   13794:	str	r3, [r2, #60]	; 0x3c
   13798:	beq	137a0 <sprintf@plt+0x21f8>
   1379c:	bl	11380 <free@plt>
   137a0:	mov	r0, r4
   137a4:	ldr	r4, [sp]
   137a8:	ldr	lr, [sp, #4]
   137ac:	add	sp, sp, #8
   137b0:	b	11380 <free@plt>
   137b4:	ldr	r1, [pc, #72]	; 13804 <sprintf@plt+0x225c>
   137b8:	cmp	r3, #0
   137bc:	strne	r2, [r3, #8]
   137c0:	add	r1, pc, r1
   137c4:	str	r3, [r1, #56]	; 0x38
   137c8:	bne	13770 <sprintf@plt+0x21c8>
   137cc:	ldr	r3, [pc, #52]	; 13808 <sprintf@plt+0x2260>
   137d0:	add	r3, pc, r3
   137d4:	str	r2, [r3, #52]	; 0x34
   137d8:	b	13770 <sprintf@plt+0x21c8>
   137dc:	ldr	r3, [pc, #40]	; 1380c <sprintf@plt+0x2264>
   137e0:	mov	r2, #235	; 0xeb
   137e4:	ldr	r1, [pc, #36]	; 13810 <sprintf@plt+0x2268>
   137e8:	ldr	r0, [pc, #36]	; 13814 <sprintf@plt+0x226c>
   137ec:	add	r3, pc, r3
   137f0:	add	r3, r3, #16
   137f4:	add	r1, pc, r1
   137f8:	add	r0, pc, r0
   137fc:	bl	11350 <__assert_fail@plt>
   13800:	andeq	ip, r1, r0, asr r8
   13804:	andeq	ip, r1, r4, lsl r8
   13808:	andeq	ip, r1, r4, lsl #16
   1380c:	muleq	r0, r8, r6
   13810:	ldrdeq	r6, [r0], -r4
   13814:	strdeq	r6, [r0], -ip
   13818:	mov	r1, #428	; 0x1ac
   1381c:	strd	r4, [sp, #-20]!	; 0xffffffec
   13820:	strd	r6, [sp, #8]
   13824:	mov	r7, r0
   13828:	mov	r0, #1
   1382c:	str	lr, [sp, #16]
   13830:	sub	sp, sp, #12
   13834:	bl	112f0 <calloc@plt>
   13838:	subs	r4, r0, #0
   1383c:	beq	13918 <sprintf@plt+0x2370>
   13840:	ldr	r5, [pc, #212]	; 1391c <sprintf@plt+0x2374>
   13844:	add	r6, sp, #6
   13848:	bl	113e0 <rb_current_time@plt>
   1384c:	mov	r2, #3
   13850:	mov	r3, #4
   13854:	strb	r2, [r4, #277]	; 0x115
   13858:	add	r5, pc, r5
   1385c:	str	r0, [r4, #280]	; 0x118
   13860:	str	r3, [r4, #284]	; 0x11c
   13864:	str	r7, [r4, #424]	; 0x1a8
   13868:	mov	r1, #2
   1386c:	mov	r0, r6
   13870:	bl	11524 <rb_get_random@plt>
   13874:	ldr	r3, [r5, #52]	; 0x34
   13878:	ldrh	r1, [sp, #6]
   1387c:	cmp	r3, #0
   13880:	beq	138f8 <sprintf@plt+0x2350>
   13884:	ldr	r2, [r3]
   13888:	ldr	r2, [r2, #12]
   1388c:	cmp	r1, r2
   13890:	beq	13868 <sprintf@plt+0x22c0>
   13894:	mov	r2, r3
   13898:	b	138ac <sprintf@plt+0x2304>
   1389c:	ldr	r0, [r2]
   138a0:	ldr	r0, [r0, #12]
   138a4:	cmp	r1, r0
   138a8:	beq	13868 <sprintf@plt+0x22c0>
   138ac:	ldr	r2, [r2, #8]
   138b0:	cmp	r2, #0
   138b4:	bne	1389c <sprintf@plt+0x22f4>
   138b8:	str	r4, [r4]
   138bc:	strd	r2, [r4, #4]
   138c0:	str	r1, [r4, #12]
   138c4:	str	r4, [r3, #4]
   138c8:	ldr	r3, [pc, #80]	; 13920 <sprintf@plt+0x2378>
   138cc:	mov	r0, r4
   138d0:	add	r3, pc, r3
   138d4:	ldr	r2, [r3, #60]	; 0x3c
   138d8:	str	r4, [r3, #52]	; 0x34
   138dc:	add	r2, r2, #1
   138e0:	str	r2, [r3, #60]	; 0x3c
   138e4:	add	sp, sp, #12
   138e8:	ldrd	r4, [sp]
   138ec:	ldrd	r6, [sp, #8]
   138f0:	add	sp, sp, #16
   138f4:	pop	{pc}		; (ldr pc, [sp], #4)
   138f8:	ldr	r2, [r5, #56]	; 0x38
   138fc:	str	r4, [r4]
   13900:	str	r3, [r4, #4]
   13904:	str	r3, [r4, #8]
   13908:	str	r1, [r4, #12]
   1390c:	cmp	r2, #0
   13910:	streq	r4, [r5, #56]	; 0x38
   13914:	b	138c8 <sprintf@plt+0x2320>
   13918:	bl	1147c <rb_outofmemory@plt>
   1391c:	andeq	ip, r1, ip, ror r7
   13920:	andeq	ip, r1, r4, lsl #14
   13924:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13928:	subs	r4, r2, #0
   1392c:	mov	r5, r1
   13930:	strd	r6, [sp, #8]
   13934:	mov	r6, r3
   13938:	str	r8, [sp, #16]
   1393c:	str	lr, [sp, #20]
   13940:	beq	13974 <sprintf@plt+0x23cc>
   13944:	mov	r1, r5
   13948:	add	r0, r4, #21
   1394c:	mov	r2, #256	; 0x100
   13950:	bl	1135c <rb_strlcpy@plt>
   13954:	strb	r6, [r4, #20]
   13958:	mov	r0, r4
   1395c:	ldrd	r4, [sp]
   13960:	ldrd	r6, [sp, #8]
   13964:	ldr	r8, [sp, #16]
   13968:	ldr	lr, [sp, #20]
   1396c:	add	sp, sp, #24
   13970:	b	133e4 <sprintf@plt+0x1e3c>
   13974:	bl	13818 <sprintf@plt+0x2270>
   13978:	mov	r4, r0
   1397c:	mov	r0, r5
   13980:	bl	113d4 <strlen@plt>
   13984:	add	r7, r0, #1
   13988:	mov	r0, r7
   1398c:	bl	114ac <malloc@plt>
   13990:	subs	r8, r0, #0
   13994:	beq	139ac <sprintf@plt+0x2404>
   13998:	mov	r2, r7
   1399c:	mov	r1, r5
   139a0:	bl	113f8 <memcpy@plt>
   139a4:	str	r8, [r4, #420]	; 0x1a4
   139a8:	b	13944 <sprintf@plt+0x239c>
   139ac:	bl	1147c <rb_outofmemory@plt>
   139b0:	b	13638 <sprintf@plt+0x2090>
   139b4:	str	r4, [sp, #-8]!
   139b8:	ldr	r4, [pc, #44]	; 139ec <sprintf@plt+0x2444>
   139bc:	add	r4, pc, r4
   139c0:	ldr	r0, [r4, #44]	; 0x2c
   139c4:	str	lr, [sp, #4]
   139c8:	bl	11410 <rb_close@plt>
   139cc:	mov	r3, #0
   139d0:	ldr	r0, [r4, #48]	; 0x30
   139d4:	str	r3, [r4, #44]	; 0x2c
   139d8:	bl	11260 <rb_event_delete@plt>
   139dc:	ldr	r4, [sp]
   139e0:	ldr	lr, [sp, #4]
   139e4:	add	sp, sp, #8
   139e8:	b	13638 <sprintf@plt+0x2090>
   139ec:	andeq	ip, r1, r8, lsl r6
   139f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   139f4:	cmp	r0, #0
   139f8:	ldr	r5, [pc, #244]	; 13af4 <sprintf@plt+0x254c>
   139fc:	strd	r6, [sp, #8]
   13a00:	str	r8, [sp, #16]
   13a04:	str	lr, [sp, #20]
   13a08:	sub	sp, sp, #256	; 0x100
   13a0c:	add	r5, pc, r5
   13a10:	beq	13ad0 <sprintf@plt+0x2528>
   13a14:	mov	r4, sp
   13a18:	mov	r6, r1
   13a1c:	mov	r7, r2
   13a20:	mov	r1, r0
   13a24:	mov	r2, #256	; 0x100
   13a28:	mov	r0, r4
   13a2c:	bl	1135c <rb_strlcpy@plt>
   13a30:	mov	r0, r4
   13a34:	mov	r1, #46	; 0x2e
   13a38:	bl	112cc <strchr@plt>
   13a3c:	cmp	r0, #0
   13a40:	beq	13a70 <sprintf@plt+0x24c8>
   13a44:	mov	r3, r7
   13a48:	mov	r1, r4
   13a4c:	mov	r0, r6
   13a50:	mov	r2, #0
   13a54:	bl	13924 <sprintf@plt+0x237c>
   13a58:	add	sp, sp, #256	; 0x100
   13a5c:	ldrd	r4, [sp]
   13a60:	ldrd	r6, [sp, #8]
   13a64:	ldr	r8, [sp, #16]
   13a68:	add	sp, sp, #20
   13a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a70:	ldr	r3, [pc, #128]	; 13af8 <sprintf@plt+0x2550>
   13a74:	ldr	r5, [r5, r3]
   13a78:	ldrb	r3, [r5]
   13a7c:	cmp	r3, #0
   13a80:	beq	13a44 <sprintf@plt+0x249c>
   13a84:	mov	r0, r4
   13a88:	bl	113d4 <strlen@plt>
   13a8c:	mov	r8, r0
   13a90:	mov	r0, r5
   13a94:	bl	113d4 <strlen@plt>
   13a98:	add	r3, r8, r0
   13a9c:	add	r3, r3, #2
   13aa0:	cmp	r3, #254	; 0xfe
   13aa4:	bhi	13a44 <sprintf@plt+0x249c>
   13aa8:	add	r3, sp, #256	; 0x100
   13aac:	mov	ip, #46	; 0x2e
   13ab0:	add	r3, r3, r8
   13ab4:	add	r8, r8, #1
   13ab8:	add	r2, r0, #1
   13abc:	mov	r1, r5
   13ac0:	add	r0, r4, r8
   13ac4:	strb	ip, [r3, #-256]	; 0xffffff00
   13ac8:	bl	113f8 <memcpy@plt>
   13acc:	b	13a44 <sprintf@plt+0x249c>
   13ad0:	ldr	r3, [pc, #36]	; 13afc <sprintf@plt+0x2554>
   13ad4:	mov	r2, #412	; 0x19c
   13ad8:	ldr	r1, [pc, #32]	; 13b00 <sprintf@plt+0x2558>
   13adc:	ldr	r0, [pc, #32]	; 13b04 <sprintf@plt+0x255c>
   13ae0:	add	r3, pc, r3
   13ae4:	add	r3, r3, #32
   13ae8:	add	r1, pc, r1
   13aec:	add	r0, pc, r0
   13af0:	bl	11350 <__assert_fail@plt>
   13af4:	andeq	r7, r1, ip, ror #11
   13af8:	andeq	r0, r0, ip, ror #2
   13afc:	andeq	r6, r0, r4, lsr #7
   13b00:	strdeq	r6, [r0], -r8
   13b04:	strdeq	r6, [r0], -ip
   13b08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13b0c:	mov	ip, r3
   13b10:	strd	r6, [sp, #8]
   13b14:	str	lr, [sp, #32]
   13b18:	mov	lr, r2
   13b1c:	ldrh	r2, [r2]
   13b20:	strd	r8, [sp, #16]
   13b24:	strd	sl, [sp, #24]
   13b28:	sub	sp, sp, #220	; 0xdc
   13b2c:	cmp	r2, #2
   13b30:	beq	13d5c <sprintf@plt+0x27b4>
   13b34:	cmp	r2, #10
   13b38:	beq	13b58 <sprintf@plt+0x25b0>
   13b3c:	add	sp, sp, #220	; 0xdc
   13b40:	ldrd	r4, [sp]
   13b44:	ldrd	r6, [sp, #8]
   13b48:	ldrd	r8, [sp, #16]
   13b4c:	ldrd	sl, [sp, #24]
   13b50:	add	sp, sp, #32
   13b54:	pop	{pc}		; (ldr pc, [sp], #4)
   13b58:	ldrb	r4, [lr, #22]
   13b5c:	cmp	r3, #0
   13b60:	ldrb	r6, [lr, #21]
   13b64:	ldrb	r5, [lr, #20]
   13b68:	and	r7, r4, #15
   13b6c:	lsr	r4, r4, #4
   13b70:	ldrb	r2, [lr, #23]
   13b74:	str	r7, [sp, #128]	; 0x80
   13b78:	and	r7, r6, #15
   13b7c:	lsr	r6, r6, #4
   13b80:	str	r4, [sp, #132]	; 0x84
   13b84:	ldrb	r4, [lr, #19]
   13b88:	str	r7, [sp, #136]	; 0x88
   13b8c:	and	r7, r5, #15
   13b90:	lsr	r5, r5, #4
   13b94:	str	r6, [sp, #140]	; 0x8c
   13b98:	and	r3, r2, #15
   13b9c:	lsr	r2, r2, #4
   13ba0:	ldrb	r6, [lr, #18]
   13ba4:	str	r7, [sp, #144]	; 0x90
   13ba8:	and	r7, r4, #15
   13bac:	lsr	r4, r4, #4
   13bb0:	str	r5, [sp, #148]	; 0x94
   13bb4:	ldrb	r5, [lr, #17]
   13bb8:	str	r7, [sp, #152]	; 0x98
   13bbc:	and	r7, r6, #15
   13bc0:	lsr	r6, r6, #4
   13bc4:	str	r4, [sp, #156]	; 0x9c
   13bc8:	ldrb	r4, [lr, #16]
   13bcc:	str	r7, [sp, #160]	; 0xa0
   13bd0:	and	r7, r5, #15
   13bd4:	lsr	r5, r5, #4
   13bd8:	str	r6, [sp, #164]	; 0xa4
   13bdc:	ldrb	r6, [lr, #15]
   13be0:	str	r7, [sp, #168]	; 0xa8
   13be4:	and	r7, r4, #15
   13be8:	lsr	r4, r4, #4
   13bec:	str	r5, [sp, #172]	; 0xac
   13bf0:	ldrb	r5, [lr, #14]
   13bf4:	str	r7, [sp, #176]	; 0xb0
   13bf8:	and	r7, r6, #15
   13bfc:	lsr	r6, r6, #4
   13c00:	str	r4, [sp, #180]	; 0xb4
   13c04:	ldrb	r4, [lr, #13]
   13c08:	str	r7, [sp, #184]	; 0xb8
   13c0c:	str	r6, [sp, #188]	; 0xbc
   13c10:	and	r6, r5, #15
   13c14:	lsr	r5, r5, #4
   13c18:	ldrb	r7, [lr, #12]
   13c1c:	str	r6, [sp, #192]	; 0xc0
   13c20:	str	r5, [sp, #196]	; 0xc4
   13c24:	and	r5, r4, #15
   13c28:	lsr	r4, r4, #4
   13c2c:	ldrb	r6, [lr, #11]
   13c30:	str	r5, [sp, #200]	; 0xc8
   13c34:	str	r4, [sp, #204]	; 0xcc
   13c38:	and	r4, r7, #15
   13c3c:	lsr	r7, r7, #4
   13c40:	ldrb	r5, [lr, #10]
   13c44:	str	r4, [sp, #208]	; 0xd0
   13c48:	ldrb	r4, [lr, #9]
   13c4c:	and	fp, r6, #15
   13c50:	lsr	r6, r6, #4
   13c54:	ldrb	lr, [lr, #8]
   13c58:	and	sl, r5, #15
   13c5c:	lsr	r5, r5, #4
   13c60:	and	r9, r4, #15
   13c64:	lsr	r4, r4, #4
   13c68:	and	r8, lr, #15
   13c6c:	lsr	lr, lr, #4
   13c70:	str	lr, [sp, #212]	; 0xd4
   13c74:	beq	13d8c <sprintf@plt+0x27e4>
   13c78:	ldr	lr, [sp, #128]	; 0x80
   13c7c:	stm	sp, {r2, lr}
   13c80:	ldr	lr, [sp, #132]	; 0x84
   13c84:	ldr	r2, [pc, #280]	; 13da4 <sprintf@plt+0x27fc>
   13c88:	str	lr, [sp, #8]
   13c8c:	ldr	lr, [sp, #136]	; 0x88
   13c90:	add	r2, pc, r2
   13c94:	str	lr, [sp, #12]
   13c98:	ldr	lr, [sp, #140]	; 0x8c
   13c9c:	str	lr, [sp, #16]
   13ca0:	ldr	lr, [sp, #144]	; 0x90
   13ca4:	str	lr, [sp, #20]
   13ca8:	ldr	lr, [sp, #148]	; 0x94
   13cac:	str	lr, [sp, #24]
   13cb0:	ldr	lr, [sp, #152]	; 0x98
   13cb4:	str	lr, [sp, #28]
   13cb8:	ldr	lr, [sp, #156]	; 0x9c
   13cbc:	str	lr, [sp, #32]
   13cc0:	ldr	lr, [sp, #160]	; 0xa0
   13cc4:	str	lr, [sp, #36]	; 0x24
   13cc8:	ldr	lr, [sp, #164]	; 0xa4
   13ccc:	str	lr, [sp, #40]	; 0x28
   13cd0:	ldr	lr, [sp, #168]	; 0xa8
   13cd4:	str	lr, [sp, #44]	; 0x2c
   13cd8:	ldr	lr, [sp, #172]	; 0xac
   13cdc:	str	lr, [sp, #48]	; 0x30
   13ce0:	ldr	lr, [sp, #176]	; 0xb0
   13ce4:	str	lr, [sp, #52]	; 0x34
   13ce8:	ldr	lr, [sp, #180]	; 0xb4
   13cec:	str	lr, [sp, #56]	; 0x38
   13cf0:	ldr	lr, [sp, #184]	; 0xb8
   13cf4:	str	lr, [sp, #60]	; 0x3c
   13cf8:	ldr	lr, [sp, #188]	; 0xbc
   13cfc:	str	lr, [sp, #64]	; 0x40
   13d00:	ldr	lr, [sp, #192]	; 0xc0
   13d04:	str	lr, [sp, #68]	; 0x44
   13d08:	ldr	lr, [sp, #196]	; 0xc4
   13d0c:	str	r7, [sp, #88]	; 0x58
   13d10:	str	fp, [sp, #92]	; 0x5c
   13d14:	str	r6, [sp, #96]	; 0x60
   13d18:	str	sl, [sp, #100]	; 0x64
   13d1c:	str	lr, [sp, #72]	; 0x48
   13d20:	ldr	lr, [sp, #200]	; 0xc8
   13d24:	str	r5, [sp, #104]	; 0x68
   13d28:	str	r9, [sp, #108]	; 0x6c
   13d2c:	str	r4, [sp, #112]	; 0x70
   13d30:	str	r8, [sp, #116]	; 0x74
   13d34:	str	lr, [sp, #76]	; 0x4c
   13d38:	ldr	lr, [sp, #204]	; 0xcc
   13d3c:	str	ip, [sp, #124]	; 0x7c
   13d40:	str	lr, [sp, #80]	; 0x50
   13d44:	ldr	lr, [sp, #208]	; 0xd0
   13d48:	str	lr, [sp, #84]	; 0x54
   13d4c:	ldr	lr, [sp, #212]	; 0xd4
   13d50:	str	lr, [sp, #120]	; 0x78
   13d54:	bl	1153c <snprintf@plt>
   13d58:	b	13b3c <sprintf@plt+0x2594>
   13d5c:	cmp	r3, #0
   13d60:	ldrb	r2, [lr, #6]
   13d64:	ldrb	r3, [lr, #7]
   13d68:	ldrb	r4, [lr, #5]
   13d6c:	ldrb	lr, [lr, #4]
   13d70:	beq	13d98 <sprintf@plt+0x27f0>
   13d74:	stm	sp, {r2, r4, lr}
   13d78:	ldr	r2, [pc, #40]	; 13da8 <sprintf@plt+0x2800>
   13d7c:	str	ip, [sp, #12]
   13d80:	add	r2, pc, r2
   13d84:	bl	1153c <snprintf@plt>
   13d88:	b	13b3c <sprintf@plt+0x2594>
   13d8c:	ldr	ip, [pc, #24]	; 13dac <sprintf@plt+0x2804>
   13d90:	add	ip, pc, ip
   13d94:	b	13c78 <sprintf@plt+0x26d0>
   13d98:	ldr	ip, [pc, #16]	; 13db0 <sprintf@plt+0x2808>
   13d9c:	add	ip, pc, ip
   13da0:	b	13d74 <sprintf@plt+0x27cc>
   13da4:	muleq	r0, r0, r2
   13da8:	muleq	r0, r0, r1
   13dac:	andeq	r6, r0, r4, ror r1
   13db0:	andeq	r6, r0, r8, asr r1
   13db4:	strd	r4, [sp, #-16]!
   13db8:	subs	r4, r2, #0
   13dbc:	mov	r5, r1
   13dc0:	str	r6, [sp, #8]
   13dc4:	str	lr, [sp, #12]
   13dc8:	beq	13e00 <sprintf@plt+0x2858>
   13dcc:	add	r0, r4, #21
   13dd0:	mov	r2, r5
   13dd4:	mov	r3, #0
   13dd8:	mov	r1, #256	; 0x100
   13ddc:	bl	13b08 <sprintf@plt+0x2560>
   13de0:	mov	r3, #12
   13de4:	mov	r0, r4
   13de8:	strb	r3, [r4, #20]
   13dec:	ldrd	r4, [sp]
   13df0:	ldr	r6, [sp, #8]
   13df4:	ldr	lr, [sp, #12]
   13df8:	add	sp, sp, #16
   13dfc:	b	133e4 <sprintf@plt+0x1e3c>
   13e00:	bl	13818 <sprintf@plt+0x2270>
   13e04:	mov	r4, r0
   13e08:	mov	r2, #128	; 0x80
   13e0c:	mov	r1, r5
   13e10:	add	r0, r0, #292	; 0x124
   13e14:	bl	113f8 <memcpy@plt>
   13e18:	mov	r1, #256	; 0x100
   13e1c:	mov	r0, #1
   13e20:	bl	112f0 <calloc@plt>
   13e24:	cmp	r0, #0
   13e28:	strne	r0, [r4, #420]	; 0x1a4
   13e2c:	bne	13dcc <sprintf@plt+0x2824>
   13e30:	bl	1147c <rb_outofmemory@plt>
   13e34:	ldrb	r1, [r0, #277]	; 0x115
   13e38:	sub	r1, r1, #1
   13e3c:	uxtb	r1, r1
   13e40:	cmp	r1, #0
   13e44:	strb	r1, [r0, #277]	; 0x115
   13e48:	beq	13e88 <sprintf@plt+0x28e0>
   13e4c:	ldrb	r3, [r0, #20]
   13e50:	cmp	r3, #12
   13e54:	beq	13e78 <sprintf@plt+0x28d0>
   13e58:	cmp	r3, #28
   13e5c:	beq	13e68 <sprintf@plt+0x28c0>
   13e60:	cmp	r3, #1
   13e64:	bxne	lr
   13e68:	mov	r2, r0
   13e6c:	mov	r0, #0
   13e70:	ldr	r1, [r2, #420]	; 0x1a4
   13e74:	b	13924 <sprintf@plt+0x237c>
   13e78:	mov	r2, r0
   13e7c:	add	r1, r0, #292	; 0x124
   13e80:	mov	r0, #0
   13e84:	b	13db4 <sprintf@plt+0x280c>
   13e88:	ldr	r3, [r0, #424]	; 0x1a8
   13e8c:	str	r4, [sp, #-8]!
   13e90:	mov	r4, r0
   13e94:	ldm	r3, {r0, r3}
   13e98:	str	lr, [sp, #4]
   13e9c:	blx	r3
   13ea0:	mov	r0, r4
   13ea4:	ldr	r4, [sp]
   13ea8:	ldr	lr, [sp, #4]
   13eac:	add	sp, sp, #8
   13eb0:	b	1373c <sprintf@plt+0x2194>
   13eb4:	strd	r4, [sp, #-16]!
   13eb8:	str	r6, [sp, #8]
   13ebc:	str	lr, [sp, #12]
   13ec0:	bl	113e0 <rb_current_time@plt>
   13ec4:	ldr	r3, [pc, #132]	; 13f50 <sprintf@plt+0x29a8>
   13ec8:	add	r3, pc, r3
   13ecc:	ldr	r3, [r3, #52]	; 0x34
   13ed0:	cmp	r3, #0
   13ed4:	beq	13f14 <sprintf@plt+0x296c>
   13ed8:	ldr	r5, [pc, #116]	; 13f54 <sprintf@plt+0x29ac>
   13edc:	mov	r6, r0
   13ee0:	ldr	r4, [r3, #8]
   13ee4:	add	r5, pc, r5
   13ee8:	ldr	r3, [r3]
   13eec:	ldr	r2, [r3, #280]	; 0x118
   13ef0:	ldr	r1, [r3, #284]	; 0x11c
   13ef4:	add	r2, r1, r2
   13ef8:	cmp	r6, r2
   13efc:	bge	13f24 <sprintf@plt+0x297c>
   13f00:	cmp	r4, #0
   13f04:	mov	r3, r4
   13f08:	beq	13f14 <sprintf@plt+0x296c>
   13f0c:	ldr	r4, [r4, #8]
   13f10:	b	13ee8 <sprintf@plt+0x2940>
   13f14:	ldrd	r4, [sp]
   13f18:	ldr	r6, [sp, #8]
   13f1c:	add	sp, sp, #12
   13f20:	pop	{pc}		; (ldr pc, [sp], #4)
   13f24:	ldr	r2, [r3, #288]	; 0x120
   13f28:	lsl	r1, r1, #1
   13f2c:	mov	r0, r3
   13f30:	str	r6, [r3, #280]	; 0x118
   13f34:	str	r1, [r3, #284]	; 0x11c
   13f38:	add	r3, r5, r2, lsl #2
   13f3c:	ldr	r2, [r3, #4]
   13f40:	add	r2, r2, #1
   13f44:	str	r2, [r3, #4]
   13f48:	bl	13e34 <sprintf@plt+0x288c>
   13f4c:	b	13f00 <sprintf@plt+0x2958>
   13f50:	andeq	ip, r1, ip, lsl #2
   13f54:	strdeq	ip, [r1], -r0
   13f58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f5c:	mov	r3, #128	; 0x80
   13f60:	strd	r6, [sp, #8]
   13f64:	strd	r8, [sp, #16]
   13f68:	strd	sl, [sp, #24]
   13f6c:	str	lr, [sp, #32]
   13f70:	sub	sp, sp, #1552	; 0x610
   13f74:	sub	sp, sp, #12
   13f78:	ldr	fp, [pc, #1432]	; 14518 <sprintf@plt+0x2f70>
   13f7c:	add	r2, sp, #536	; 0x218
   13f80:	add	r4, sp, #40	; 0x28
   13f84:	add	r8, sp, #524	; 0x20c
   13f88:	str	r2, [sp, #12]
   13f8c:	str	r3, [sp, #36]	; 0x24
   13f90:	bl	11278 <rb_get_fd@plt>
   13f94:	sub	r2, r4, #4
   13f98:	mov	r3, #0
   13f9c:	str	r4, [sp]
   13fa0:	mov	r1, r8
   13fa4:	add	fp, pc, fp
   13fa8:	str	r2, [sp, #4]
   13fac:	movw	r2, #1036	; 0x40c
   13fb0:	bl	11560 <recvfrom@plt>
   13fb4:	add	r3, r0, #1
   13fb8:	cmp	r3, #1
   13fbc:	bls	1427c <sprintf@plt+0x2cd4>
   13fc0:	cmp	r0, #12
   13fc4:	mov	sl, r0
   13fc8:	ble	14118 <sprintf@plt+0x2b70>
   13fcc:	ldrh	r2, [r8, #6]
   13fd0:	ldr	r3, [pc, #1348]	; 1451c <sprintf@plt+0x2f74>
   13fd4:	ldrh	r0, [r8, #4]
   13fd8:	rev16	r2, r2
   13fdc:	ldrh	r1, [r8, #8]
   13fe0:	add	r3, pc, r3
   13fe4:	strh	r2, [r8, #6]
   13fe8:	ldrh	r2, [r8, #10]
   13fec:	rev16	r0, r0
   13ff0:	ldr	r3, [r3, #52]	; 0x34
   13ff4:	rev16	r1, r1
   13ff8:	strh	r0, [r8, #4]
   13ffc:	uxth	r0, r0
   14000:	rev16	r2, r2
   14004:	strh	r1, [r8, #8]
   14008:	ldrh	r1, [r8]
   1400c:	cmp	r3, #0
   14010:	strh	r2, [r8, #10]
   14014:	str	r0, [sp, #16]
   14018:	bne	1402c <sprintf@plt+0x2a84>
   1401c:	b	14118 <sprintf@plt+0x2b70>
   14020:	ldr	r3, [r3, #8]
   14024:	cmp	r3, #0
   14028:	beq	14118 <sprintf@plt+0x2b70>
   1402c:	ldr	r6, [r3]
   14030:	ldr	r2, [r6, #12]
   14034:	cmp	r1, r2
   14038:	bne	14020 <sprintf@plt+0x2a78>
   1403c:	ldr	r3, [pc, #1244]	; 14520 <sprintf@plt+0x2f78>
   14040:	ldr	r3, [fp, r3]
   14044:	ldr	r9, [r3]
   14048:	cmp	r9, #0
   1404c:	ble	14190 <sprintf@plt+0x2be8>
   14050:	ldr	r2, [pc, #1228]	; 14524 <sprintf@plt+0x2f7c>
   14054:	add	r3, r4, #8
   14058:	mov	r5, #0
   1405c:	str	r3, [sp, #20]
   14060:	ldrh	r7, [r4]
   14064:	ldrh	r3, [r4, #2]
   14068:	ldr	r4, [fp, r2]
   1406c:	str	r6, [sp, #28]
   14070:	ldr	r2, [sp, #44]	; 0x2c
   14074:	mov	r6, r3
   14078:	add	r4, r4, #8
   1407c:	str	r2, [sp, #24]
   14080:	b	140a4 <sprintf@plt+0x2afc>
   14084:	cmp	r2, #10
   14088:	bne	14094 <sprintf@plt+0x2aec>
   1408c:	cmp	r7, #10
   14090:	beq	1413c <sprintf@plt+0x2b94>
   14094:	add	r5, r5, #1
   14098:	add	r4, r4, #128	; 0x80
   1409c:	cmp	r9, r5
   140a0:	beq	1418c <sprintf@plt+0x2be4>
   140a4:	ldrh	r2, [r4, #-8]
   140a8:	cmp	r2, #2
   140ac:	bne	14084 <sprintf@plt+0x2adc>
   140b0:	cmp	r7, #2
   140b4:	bne	14094 <sprintf@plt+0x2aec>
   140b8:	ldrh	r2, [r4, #-6]
   140bc:	cmp	r2, r6
   140c0:	bne	14094 <sprintf@plt+0x2aec>
   140c4:	ldr	r2, [r4, #-4]
   140c8:	cmp	r2, #0
   140cc:	beq	140dc <sprintf@plt+0x2b34>
   140d0:	ldr	r3, [sp, #24]
   140d4:	cmp	r2, r3
   140d8:	bne	14094 <sprintf@plt+0x2aec>
   140dc:	mov	r4, #1
   140e0:	ldr	r6, [sp, #28]
   140e4:	b	14194 <sprintf@plt+0x2bec>
   140e8:	sub	r2, r3, #4
   140ec:	cmp	r3, #2
   140f0:	cmpne	r2, #1
   140f4:	bhi	14284 <sprintf@plt+0x2cdc>
   140f8:	ldr	r3, [pc, #1064]	; 14528 <sprintf@plt+0x2f80>
   140fc:	add	r3, pc, r3
   14100:	add	r4, r3, r4, lsl #2
   14104:	mov	r0, r6
   14108:	ldr	r3, [r4, #4]
   1410c:	add	r3, r3, #1
   14110:	str	r3, [r4, #4]
   14114:	bl	13e34 <sprintf@plt+0x288c>
   14118:	mov	r0, #1
   1411c:	add	sp, sp, #1552	; 0x610
   14120:	add	sp, sp, #12
   14124:	ldrd	r4, [sp]
   14128:	ldrd	r6, [sp, #8]
   1412c:	ldrd	r8, [sp, #16]
   14130:	ldrd	sl, [sp, #24]
   14134:	add	sp, sp, #32
   14138:	pop	{pc}		; (ldr pc, [sp], #4)
   1413c:	ldrh	r2, [r4, #-6]
   14140:	cmp	r2, r6
   14144:	bne	14094 <sprintf@plt+0x2aec>
   14148:	mov	r2, #16
   1414c:	mov	r0, r4
   14150:	ldr	r1, [sp, #20]
   14154:	bl	11248 <memcmp@plt>
   14158:	cmp	r0, #0
   1415c:	beq	140dc <sprintf@plt+0x2b34>
   14160:	ldr	r1, [pc, #964]	; 1452c <sprintf@plt+0x2f84>
   14164:	mov	r2, #16
   14168:	mov	r0, r4
   1416c:	ldr	r1, [fp, r1]
   14170:	bl	11248 <memcmp@plt>
   14174:	cmp	r0, #0
   14178:	beq	140dc <sprintf@plt+0x2b34>
   1417c:	add	r5, r5, #1
   14180:	add	r4, r4, #128	; 0x80
   14184:	cmp	r9, r5
   14188:	bne	140a4 <sprintf@plt+0x2afc>
   1418c:	ldr	r6, [sp, #28]
   14190:	mov	r4, #0
   14194:	ldr	r3, [r6, #288]	; 0x120
   14198:	cmp	r3, r4
   1419c:	beq	141b8 <sprintf@plt+0x2c10>
   141a0:	ldr	r3, [pc, #904]	; 14530 <sprintf@plt+0x2f88>
   141a4:	add	r3, pc, r3
   141a8:	add	r3, r3, r4, lsl #2
   141ac:	ldr	r2, [r3, #4]
   141b0:	add	r2, r2, #3
   141b4:	str	r2, [r3, #4]
   141b8:	ldr	r3, [sp, #16]
   141bc:	cmp	r3, #1
   141c0:	bne	14118 <sprintf@plt+0x2b70>
   141c4:	mov	r0, #256	; 0x100
   141c8:	add	sl, r8, sl
   141cc:	ldr	r2, [sp, #12]
   141d0:	add	r5, sp, #168	; 0xa8
   141d4:	mov	r1, sl
   141d8:	mov	r3, r5
   141dc:	str	r0, [sp]
   141e0:	mov	r0, r8
   141e4:	bl	148d0 <sprintf@plt+0x3328>
   141e8:	cmp	r0, #0
   141ec:	ble	14118 <sprintf@plt+0x2b70>
   141f0:	add	r1, r6, #21
   141f4:	mov	r0, r5
   141f8:	bl	113a4 <rb_strcasecmp@plt>
   141fc:	cmp	r0, #0
   14200:	bne	14118 <sprintf@plt+0x2b70>
   14204:	ldrb	r3, [sp, #527]	; 0x20f
   14208:	ands	r3, r3, #15
   1420c:	bne	140e8 <sprintf@plt+0x2b40>
   14210:	ldrh	r3, [r8, #6]
   14214:	cmp	r3, #0
   14218:	beq	142b0 <sprintf@plt+0x2d08>
   1421c:	ldrh	r2, [r8, #4]
   14220:	cmp	r2, #0
   14224:	ldreq	r7, [sp, #12]
   14228:	beq	142d4 <sprintf@plt+0x2d2c>
   1422c:	ldr	r3, [sp, #12]
   14230:	mov	r7, r3
   14234:	sub	r8, r3, #12
   14238:	b	1425c <sprintf@plt+0x2cb4>
   1423c:	ldrh	r3, [r8, #4]
   14240:	add	r0, r0, #4
   14244:	add	r7, r7, r0
   14248:	sub	r3, r3, #1
   1424c:	uxth	r3, r3
   14250:	cmp	r3, #0
   14254:	strh	r3, [r8, #4]
   14258:	beq	142d0 <sprintf@plt+0x2d28>
   1425c:	mov	r1, sl
   14260:	mov	r0, r7
   14264:	bl	14ee4 <sprintf@plt+0x393c>
   14268:	cmp	r0, #0
   1426c:	bge	1423c <sprintf@plt+0x2c94>
   14270:	ldr	r3, [pc, #700]	; 14534 <sprintf@plt+0x2f8c>
   14274:	add	r3, pc, r3
   14278:	b	14100 <sprintf@plt+0x2b58>
   1427c:	mov	r0, #0
   14280:	b	1411c <sprintf@plt+0x2b74>
   14284:	cmp	r3, #3
   14288:	bne	142b0 <sprintf@plt+0x2d08>
   1428c:	ldr	r3, [pc, #676]	; 14538 <sprintf@plt+0x2f90>
   14290:	add	r3, pc, r3
   14294:	add	r4, r3, r4, lsl #2
   14298:	ldr	r3, [r4, #4]
   1429c:	add	r2, r3, #3
   142a0:	cmp	r3, #0
   142a4:	movlt	r3, r2
   142a8:	asr	r3, r3, #2
   142ac:	str	r3, [r4, #4]
   142b0:	ldr	r3, [r6, #424]	; 0x1a8
   142b4:	mov	r1, #0
   142b8:	ldm	r3, {r0, r3}
   142bc:	blx	r3
   142c0:	mov	r0, r6
   142c4:	bl	1373c <sprintf@plt+0x2194>
   142c8:	mov	r0, #1
   142cc:	b	1411c <sprintf@plt+0x2b74>
   142d0:	ldrh	r3, [r8, #6]
   142d4:	cmp	r3, #0
   142d8:	cmpne	sl, r7
   142dc:	bls	14390 <sprintf@plt+0x2de8>
   142e0:	ldr	r2, [sp, #12]
   142e4:	movw	r9, #355	; 0x163
   142e8:	mov	fp, #0
   142ec:	str	r4, [sp, #12]
   142f0:	sub	r8, r2, #12
   142f4:	sub	ip, r3, #1
   142f8:	mov	r2, r7
   142fc:	str	r9, [sp]
   14300:	mov	r3, r5
   14304:	mov	r1, sl
   14308:	mov	r0, r8
   1430c:	strh	ip, [r8, #6]
   14310:	bl	148d0 <sprintf@plt+0x3328>
   14314:	cmp	r0, #0
   14318:	ble	1450c <sprintf@plt+0x2f64>
   1431c:	add	r7, r7, r0
   14320:	strb	fp, [sp, #423]	; 0x1a7
   14324:	add	r4, r7, #10
   14328:	cmp	sl, r4
   1432c:	bls	1438c <sprintf@plt+0x2de4>
   14330:	mov	r0, r7
   14334:	bl	14f94 <sprintf@plt+0x39ec>
   14338:	mov	r3, r0
   1433c:	add	r0, r7, #2
   14340:	str	r3, [sp, #16]
   14344:	bl	14f94 <sprintf@plt+0x39ec>
   14348:	add	r0, r7, #4
   1434c:	bl	14fa4 <sprintf@plt+0x39fc>
   14350:	str	r0, [r6, #16]
   14354:	add	r0, r7, #8
   14358:	bl	14f94 <sprintf@plt+0x39ec>
   1435c:	ldr	r3, [sp, #16]
   14360:	cmp	r3, #12
   14364:	beq	144bc <sprintf@plt+0x2f14>
   14368:	cmp	r3, #28
   1436c:	beq	14470 <sprintf@plt+0x2ec8>
   14370:	cmp	r3, #1
   14374:	beq	143fc <sprintf@plt+0x2e54>
   14378:	ldrh	r3, [r8, #6]
   1437c:	add	r7, r4, r0
   14380:	cmp	r3, #0
   14384:	cmpne	sl, r7
   14388:	bhi	142f4 <sprintf@plt+0x2d4c>
   1438c:	ldr	r4, [sp, #12]
   14390:	ldrb	r3, [r6, #20]
   14394:	cmp	r3, #12
   14398:	bne	14428 <sprintf@plt+0x2e80>
   1439c:	ldr	r1, [r6, #420]	; 0x1a4
   143a0:	cmp	r1, #0
   143a4:	beq	14500 <sprintf@plt+0x2f58>
   143a8:	add	r3, r6, #292	; 0x124
   143ac:	mov	r2, #0
   143b0:	ldr	r0, [r6, #424]	; 0x1a8
   143b4:	ldrh	r3, [r3]
   143b8:	cmp	r3, #10
   143bc:	moveq	r3, #28
   143c0:	movne	r3, #1
   143c4:	bl	13924 <sprintf@plt+0x237c>
   143c8:	mov	r0, r6
   143cc:	bl	1373c <sprintf@plt+0x2194>
   143d0:	ldr	r3, [pc, #356]	; 1453c <sprintf@plt+0x2f94>
   143d4:	mov	r0, #1
   143d8:	add	r3, pc, r3
   143dc:	add	r4, r3, r4, lsl #2
   143e0:	ldr	r3, [r4, #4]
   143e4:	add	r2, r3, #3
   143e8:	cmp	r3, #0
   143ec:	movlt	r3, r2
   143f0:	asr	r3, r3, #2
   143f4:	str	r3, [r4, #4]
   143f8:	b	1411c <sprintf@plt+0x2b74>
   143fc:	ldrb	r3, [r6, #20]
   14400:	ldr	r4, [sp, #12]
   14404:	cmp	r3, #1
   14408:	bne	14270 <sprintf@plt+0x2cc8>
   1440c:	cmp	r0, #4
   14410:	bne	14270 <sprintf@plt+0x2cc8>
   14414:	add	r3, r6, #292	; 0x124
   14418:	mov	r2, #2
   1441c:	strh	r2, [r3]
   14420:	ldr	r3, [r7, #10]
   14424:	str	r3, [r6, #296]	; 0x128
   14428:	mov	r1, #132	; 0x84
   1442c:	mov	r0, #1
   14430:	bl	112f0 <calloc@plt>
   14434:	subs	r5, r0, #0
   14438:	beq	14514 <sprintf@plt+0x2f6c>
   1443c:	ldr	r3, [r6, #420]	; 0x1a4
   14440:	mov	r0, r5
   14444:	mov	r2, #128	; 0x80
   14448:	add	r1, r6, #292	; 0x124
   1444c:	str	r3, [r0], #4
   14450:	bl	113f8 <memcpy@plt>
   14454:	ldr	r3, [r6, #424]	; 0x1a8
   14458:	mov	r1, r5
   1445c:	ldm	r3, {r0, r3}
   14460:	blx	r3
   14464:	mov	r0, r5
   14468:	bl	11380 <free@plt>
   1446c:	b	143c8 <sprintf@plt+0x2e20>
   14470:	ldrb	r3, [r6, #20]
   14474:	mov	r2, r4
   14478:	ldr	r4, [sp, #12]
   1447c:	cmp	r3, #28
   14480:	bne	14270 <sprintf@plt+0x2cc8>
   14484:	cmp	r0, #16
   14488:	bne	14270 <sprintf@plt+0x2cc8>
   1448c:	add	r1, r6, #292	; 0x124
   14490:	mov	r0, #10
   14494:	strh	r0, [r1]
   14498:	ldr	ip, [r2]
   1449c:	ldr	r0, [r2, #4]
   144a0:	ldr	r1, [r2, #8]
   144a4:	ldr	r2, [r2, #12]
   144a8:	str	ip, [r6, #300]	; 0x12c
   144ac:	str	r0, [r6, #304]	; 0x130
   144b0:	str	r1, [r6, #308]	; 0x134
   144b4:	str	r2, [r6, #312]	; 0x138
   144b8:	b	14428 <sprintf@plt+0x2e80>
   144bc:	ldrb	r3, [r6, #20]
   144c0:	mov	r2, r4
   144c4:	ldr	r4, [sp, #12]
   144c8:	cmp	r3, #12
   144cc:	bne	14270 <sprintf@plt+0x2cc8>
   144d0:	mov	r1, sl
   144d4:	mov	r0, r8
   144d8:	str	r9, [sp]
   144dc:	mov	r3, r5
   144e0:	bl	148d0 <sprintf@plt+0x3328>
   144e4:	cmp	r0, #0
   144e8:	ble	14270 <sprintf@plt+0x2cc8>
   144ec:	mov	r1, r5
   144f0:	mov	r2, #256	; 0x100
   144f4:	ldr	r0, [r6, #420]	; 0x1a4
   144f8:	bl	1135c <rb_strlcpy@plt>
   144fc:	b	14390 <sprintf@plt+0x2de8>
   14500:	ldr	r3, [pc, #56]	; 14540 <sprintf@plt+0x2f98>
   14504:	add	r3, pc, r3
   14508:	b	14100 <sprintf@plt+0x2b58>
   1450c:	ldr	r4, [sp, #12]
   14510:	b	14270 <sprintf@plt+0x2cc8>
   14514:	bl	1147c <rb_outofmemory@plt>
   14518:	andeq	r7, r1, r4, asr r0
   1451c:	strdeq	fp, [r1], -r4
   14520:	andeq	r0, r0, r8, ror #2
   14524:	andeq	r0, r0, r4, ror r1
   14528:	ldrdeq	fp, [r1], -r8
   1452c:	andeq	r0, r0, r0, ror r1
   14530:	andeq	fp, r1, r0, lsr lr
   14534:	andeq	fp, r1, r0, ror #26
   14538:	andeq	fp, r1, r4, asr #26
   1453c:	strdeq	fp, [r1], -ip
   14540:	ldrdeq	fp, [r1], -r0
   14544:	str	r4, [sp, #-8]!
   14548:	mov	r4, r0
   1454c:	str	lr, [sp, #4]
   14550:	mov	r0, r4
   14554:	bl	13f58 <sprintf@plt+0x29b0>
   14558:	subs	r3, r0, #0
   1455c:	bne	14550 <sprintf@plt+0x2fa8>
   14560:	ldr	r2, [pc, #24]	; 14580 <sprintf@plt+0x2fd8>
   14564:	mov	r0, r4
   14568:	mov	r1, #1
   1456c:	ldr	r4, [sp]
   14570:	ldr	lr, [sp, #4]
   14574:	add	sp, sp, #8
   14578:	add	r2, pc, r2
   1457c:	b	1126c <rb_setselect@plt>
   14580:			; <UNDEFINED> instruction: 0xffffffc4
   14584:	mov	r3, r1
   14588:	mov	r2, #0
   1458c:	mov	r1, r0
   14590:	mov	r0, r3
   14594:	b	13db4 <sprintf@plt+0x280c>
   14598:	strd	r4, [sp, #-20]!	; 0xffffffec
   1459c:	ldr	r4, [pc, #184]	; 1465c <sprintf@plt+0x30b4>
   145a0:	strd	r6, [sp, #8]
   145a4:	ldr	r3, [pc, #180]	; 14660 <sprintf@plt+0x30b8>
   145a8:	str	lr, [sp, #16]
   145ac:	sub	sp, sp, #44	; 0x2c
   145b0:	add	r4, pc, r4
   145b4:	ldr	r5, [r4, r3]
   145b8:	ldr	r3, [r5]
   145bc:	cmp	r3, #9
   145c0:	ble	145d8 <sprintf@plt+0x3030>
   145c4:	add	sp, sp, #44	; 0x2c
   145c8:	ldrd	r4, [sp]
   145cc:	ldrd	r6, [sp, #8]
   145d0:	add	sp, sp, #16
   145d4:	pop	{pc}		; (ldr pc, [sp], #4)
   145d8:	ldr	r1, [pc, #132]	; 14664 <sprintf@plt+0x30bc>
   145dc:	mov	r2, #2
   145e0:	mov	r3, #5
   145e4:	mov	lr, #0
   145e8:	str	r3, [sp, #8]
   145ec:	add	r3, sp, #4
   145f0:	str	lr, [sp, #12]
   145f4:	str	r2, [sp, #16]
   145f8:	add	r2, sp, #8
   145fc:	add	r1, pc, r1
   14600:	str	lr, [sp, #20]
   14604:	str	lr, [sp, #24]
   14608:	str	lr, [sp, #28]
   1460c:	str	lr, [sp, #32]
   14610:	str	lr, [sp, #36]	; 0x24
   14614:	bl	113b0 <getaddrinfo@plt>
   14618:	cmp	r0, #0
   1461c:	bne	145c4 <sprintf@plt+0x301c>
   14620:	ldr	r6, [sp, #4]
   14624:	cmp	r6, #0
   14628:	beq	145c4 <sprintf@plt+0x301c>
   1462c:	ldr	r3, [pc, #52]	; 14668 <sprintf@plt+0x30c0>
   14630:	ldr	r7, [r5]
   14634:	ldr	r2, [r6, #16]
   14638:	ldr	r0, [r4, r3]
   1463c:	ldr	r1, [r6, #20]
   14640:	add	r0, r0, r7, lsl #7
   14644:	add	r7, r7, #1
   14648:	bl	113f8 <memcpy@plt>
   1464c:	mov	r0, r6
   14650:	str	r7, [r5]
   14654:	bl	1132c <freeaddrinfo@plt>
   14658:	b	145c4 <sprintf@plt+0x301c>
   1465c:	andeq	r6, r1, r8, asr #20
   14660:	andeq	r0, r0, r8, ror #2
   14664:	muleq	r0, r4, sl
   14668:	andeq	r0, r0, r4, ror r1
   1466c:	ldrb	r3, [r0]
   14670:	and	r2, r3, #192	; 0xc0
   14674:	cmp	r2, #192	; 0xc0
   14678:	beq	146b0 <sprintf@plt+0x3108>
   1467c:	cmp	r2, #64	; 0x40
   14680:	beq	1468c <sprintf@plt+0x30e4>
   14684:	mov	r0, r3
   14688:	bx	lr
   1468c:	cmp	r3, #65	; 0x41
   14690:	bne	146b0 <sprintf@plt+0x3108>
   14694:	ldrb	r3, [r0, #1]
   14698:	cmp	r3, #0
   1469c:	addne	r3, r3, #7
   146a0:	asrne	r3, r3, #3
   146a4:	addne	r0, r3, #1
   146a8:	moveq	r0, #33	; 0x21
   146ac:	bx	lr
   146b0:	mvn	r0, #0
   146b4:	bx	lr
   146b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   146bc:	mov	r2, #0
   146c0:	strd	r6, [sp, #8]
   146c4:	ldr	r6, [pc, #476]	; 148a8 <sprintf@plt+0x3300>
   146c8:	strd	r8, [sp, #16]
   146cc:	ldr	r3, [pc, #472]	; 148ac <sprintf@plt+0x3304>
   146d0:	strd	sl, [sp, #24]
   146d4:	ldr	r1, [pc, #468]	; 148b0 <sprintf@plt+0x3308>
   146d8:	add	r6, pc, r6
   146dc:	str	lr, [sp, #32]
   146e0:	sub	sp, sp, #140	; 0x8c
   146e4:	ldr	r0, [pc, #456]	; 148b4 <sprintf@plt+0x330c>
   146e8:	ldr	r3, [r6, r3]
   146ec:	add	r1, pc, r1
   146f0:	add	r0, pc, r0
   146f4:	str	r2, [r3]
   146f8:	str	r3, [sp, #4]
   146fc:	bl	11314 <fopen@plt>
   14700:	subs	r8, r0, #0
   14704:	beq	14844 <sprintf@plt+0x329c>
   14708:	ldr	r9, [pc, #424]	; 148b8 <sprintf@plt+0x3310>
   1470c:	add	r5, sp, #8
   14710:	ldr	fp, [pc, #420]	; 148bc <sprintf@plt+0x3314>
   14714:	ldr	sl, [pc, #420]	; 148c0 <sprintf@plt+0x3318>
   14718:	add	r9, pc, r9
   1471c:	add	fp, pc, fp
   14720:	add	sl, pc, sl
   14724:	mov	r2, r8
   14728:	mov	r1, #128	; 0x80
   1472c:	mov	r0, r5
   14730:	bl	112b4 <fgets@plt>
   14734:	cmp	r0, #0
   14738:	beq	1483c <sprintf@plt+0x3294>
   1473c:	mov	r1, r9
   14740:	mov	r0, r5
   14744:	bl	11578 <strpbrk@plt>
   14748:	cmp	r0, #0
   1474c:	movne	r3, #0
   14750:	strbne	r3, [r0]
   14754:	bl	11488 <__ctype_b_loc@plt>
   14758:	ldr	r1, [r0]
   1475c:	mov	r0, r5
   14760:	mov	r7, r0
   14764:	add	r0, r0, #1
   14768:	ldrb	r2, [r0, #-1]
   1476c:	lsl	ip, r2, #1
   14770:	ldrh	ip, [r1, ip]
   14774:	tst	ip, #8192	; 0x2000
   14778:	bne	14760 <sprintf@plt+0x31b8>
   1477c:	cmp	r2, #0
   14780:	beq	14724 <sprintf@plt+0x317c>
   14784:	cmp	r2, #59	; 0x3b
   14788:	cmpne	r2, #35	; 0x23
   1478c:	beq	14724 <sprintf@plt+0x317c>
   14790:	mov	r4, r7
   14794:	b	147a4 <sprintf@plt+0x31fc>
   14798:	cmp	r2, #0
   1479c:	mov	r4, r0
   147a0:	beq	14724 <sprintf@plt+0x317c>
   147a4:	ldrb	r2, [r4, #1]
   147a8:	add	r0, r4, #1
   147ac:	lsl	ip, r2, #1
   147b0:	ldrh	ip, [r1, ip]
   147b4:	tst	ip, #8192	; 0x2000
   147b8:	beq	14798 <sprintf@plt+0x31f0>
   147bc:	cmp	r2, #0
   147c0:	beq	14724 <sprintf@plt+0x317c>
   147c4:	ldrb	r2, [r0, #1]
   147c8:	mov	ip, #0
   147cc:	add	r4, r4, #2
   147d0:	strb	ip, [r0]
   147d4:	lsl	r2, r2, #1
   147d8:	ldrh	r2, [r1, r2]
   147dc:	tst	r2, #8192	; 0x2000
   147e0:	beq	147f8 <sprintf@plt+0x3250>
   147e4:	ldrb	r2, [r4, #1]!
   147e8:	lsl	r2, r2, #1
   147ec:	ldrh	r2, [r1, r2]
   147f0:	tst	r2, #8192	; 0x2000
   147f4:	bne	147e4 <sprintf@plt+0x323c>
   147f8:	mov	r1, fp
   147fc:	mov	r0, r4
   14800:	bl	11578 <strpbrk@plt>
   14804:	cmp	r0, #0
   14808:	mov	r1, sl
   1480c:	movne	r2, #0
   14810:	strbne	r2, [r0]
   14814:	mov	r0, r7
   14818:	bl	113a4 <rb_strcasecmp@plt>
   1481c:	cmp	r0, #0
   14820:	bne	14874 <sprintf@plt+0x32cc>
   14824:	ldr	r3, [pc, #152]	; 148c4 <sprintf@plt+0x331c>
   14828:	mov	r1, r4
   1482c:	mov	r2, #256	; 0x100
   14830:	ldr	r0, [r6, r3]
   14834:	bl	1135c <rb_strlcpy@plt>
   14838:	b	14724 <sprintf@plt+0x317c>
   1483c:	mov	r0, r8
   14840:	bl	112a8 <fclose@plt>
   14844:	ldr	r3, [sp, #4]
   14848:	ldr	r3, [r3]
   1484c:	cmp	r3, #0
   14850:	beq	14898 <sprintf@plt+0x32f0>
   14854:	mov	r0, #0
   14858:	add	sp, sp, #140	; 0x8c
   1485c:	ldrd	r4, [sp]
   14860:	ldrd	r6, [sp, #8]
   14864:	ldrd	r8, [sp, #16]
   14868:	ldrd	sl, [sp, #24]
   1486c:	add	sp, sp, #32
   14870:	pop	{pc}		; (ldr pc, [sp], #4)
   14874:	ldr	r1, [pc, #76]	; 148c8 <sprintf@plt+0x3320>
   14878:	mov	r0, r7
   1487c:	add	r1, pc, r1
   14880:	bl	113a4 <rb_strcasecmp@plt>
   14884:	cmp	r0, #0
   14888:	bne	14724 <sprintf@plt+0x317c>
   1488c:	mov	r0, r4
   14890:	bl	14598 <sprintf@plt+0x2ff0>
   14894:	b	14724 <sprintf@plt+0x317c>
   14898:	ldr	r0, [pc, #44]	; 148cc <sprintf@plt+0x3324>
   1489c:	add	r0, pc, r0
   148a0:	bl	14598 <sprintf@plt+0x2ff0>
   148a4:	b	14854 <sprintf@plt+0x32ac>
   148a8:	andeq	r6, r1, r0, lsr #18
   148ac:	andeq	r0, r0, r8, ror #2
   148b0:	andeq	r5, r0, ip, lsr #19
   148b4:	andeq	r5, r0, ip, lsr #19
   148b8:	muleq	r0, r8, r9
   148bc:	muleq	r0, r8, r9
   148c0:	andeq	r5, r0, r0, ror r9
   148c4:	andeq	r0, r0, ip, ror #2
   148c8:	andeq	r5, r0, ip, lsr r8
   148cc:	andeq	r5, r0, r8, lsr #16
   148d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   148d4:	cmp	r0, r2
   148d8:	cmpls	r2, r1
   148dc:	strd	r6, [sp, #8]
   148e0:	movcs	r7, #1
   148e4:	movcc	r7, #0
   148e8:	strd	r8, [sp, #16]
   148ec:	strd	sl, [sp, #24]
   148f0:	str	lr, [sp, #32]
   148f4:	sub	sp, sp, #284	; 0x11c
   148f8:	str	r3, [sp, #8]
   148fc:	bcs	14eb0 <sprintf@plt+0x3908>
   14900:	mvn	r3, #0
   14904:	add	r4, sp, #24
   14908:	mov	r9, r0
   1490c:	mov	sl, r2
   14910:	str	r3, [sp, #4]
   14914:	add	r3, sp, #276	; 0x114
   14918:	mov	fp, r1
   1491c:	add	r3, r3, #3
   14920:	mov	r8, r4
   14924:	mov	r5, r2
   14928:	str	r3, [sp, #12]
   1492c:	sub	r3, r1, r0
   14930:	str	r3, [sp, #16]
   14934:	mov	r1, r5
   14938:	ldrb	r6, [r1], #1
   1493c:	cmp	r6, #0
   14940:	beq	14a40 <sprintf@plt+0x3498>
   14944:	and	r3, r6, #192	; 0xc0
   14948:	cmp	r3, #64	; 0x40
   1494c:	beq	149e8 <sprintf@plt+0x3440>
   14950:	cmp	r3, #192	; 0xc0
   14954:	beq	14994 <sprintf@plt+0x33ec>
   14958:	cmp	r3, #0
   1495c:	beq	149e8 <sprintf@plt+0x3440>
   14960:	bl	1159c <__errno_location@plt>
   14964:	mov	r3, #90	; 0x5a
   14968:	str	r3, [r0]
   1496c:	mvn	r3, #0
   14970:	str	r3, [sp, #4]
   14974:	ldr	r0, [sp, #4]
   14978:	add	sp, sp, #284	; 0x11c
   1497c:	ldrd	r4, [sp]
   14980:	ldrd	r6, [sp, #8]
   14984:	ldrd	r8, [sp, #16]
   14988:	ldrd	sl, [sp, #24]
   1498c:	add	sp, sp, #32
   14990:	pop	{pc}		; (ldr pc, [sp], #4)
   14994:	cmp	fp, r1
   14998:	bls	14960 <sprintf@plt+0x33b8>
   1499c:	ldr	r3, [sp, #4]
   149a0:	cmp	r3, #0
   149a4:	blt	14a30 <sprintf@plt+0x3488>
   149a8:	ldrb	r3, [r5, #1]
   149ac:	lsl	r5, r6, #8
   149b0:	and	r5, r5, #16128	; 0x3f00
   149b4:	orr	r5, r5, r3
   149b8:	adds	r5, r9, r5
   149bc:	movcs	r3, #1
   149c0:	movcc	r3, #0
   149c4:	cmp	fp, r5
   149c8:	orrls	r3, r3, #1
   149cc:	cmp	r3, #0
   149d0:	bne	14960 <sprintf@plt+0x33b8>
   149d4:	ldr	r3, [sp, #16]
   149d8:	add	r7, r7, #2
   149dc:	cmp	r7, r3
   149e0:	blt	14934 <sprintf@plt+0x338c>
   149e4:	b	14960 <sprintf@plt+0x33b8>
   149e8:	mov	r0, r5
   149ec:	bl	1466c <sprintf@plt+0x30c4>
   149f0:	subs	r2, r0, #0
   149f4:	blt	14960 <sprintf@plt+0x33b8>
   149f8:	ldr	ip, [sp, #12]
   149fc:	add	r3, r2, #1
   14a00:	add	r0, r8, r3
   14a04:	cmp	ip, r0
   14a08:	bls	14960 <sprintf@plt+0x33b8>
   14a0c:	add	r5, r1, r2
   14a10:	cmp	fp, r5
   14a14:	bls	14960 <sprintf@plt+0x33b8>
   14a18:	mov	r0, r8
   14a1c:	add	r7, r7, r3
   14a20:	strb	r6, [r0], #1
   14a24:	add	r8, r0, r2
   14a28:	bl	113f8 <memcpy@plt>
   14a2c:	b	14934 <sprintf@plt+0x338c>
   14a30:	sub	r1, r1, sl
   14a34:	add	r3, r1, #1
   14a38:	str	r3, [sp, #4]
   14a3c:	b	149a8 <sprintf@plt+0x3400>
   14a40:	ldr	r3, [sp, #4]
   14a44:	strb	r6, [r8]
   14a48:	cmp	r3, #0
   14a4c:	blt	14e74 <sprintf@plt+0x38cc>
   14a50:	ldr	r6, [sp, #8]
   14a54:	movw	sl, #34079	; 0x851f
   14a58:	movt	sl, #20971	; 0x51eb
   14a5c:	movw	fp, #52429	; 0xcccd
   14a60:	movt	fp, #52428	; 0xcccc
   14a64:	ldr	r3, [sp, #320]	; 0x140
   14a68:	str	sl, [sp, #16]
   14a6c:	add	r7, r6, r3
   14a70:	ldr	r3, [pc, #1104]	; 14ec8 <sprintf@plt+0x3920>
   14a74:	add	r3, pc, r3
   14a78:	str	r3, [sp, #20]
   14a7c:	ldr	r3, [pc, #1096]	; 14ecc <sprintf@plt+0x3924>
   14a80:	add	r3, pc, r3
   14a84:	str	r3, [sp, #12]
   14a88:	ldrb	r1, [r4]
   14a8c:	cmp	r1, #0
   14a90:	beq	14e20 <sprintf@plt+0x3878>
   14a94:	and	r5, r1, #192	; 0xc0
   14a98:	cmp	r5, #192	; 0xc0
   14a9c:	beq	14960 <sprintf@plt+0x33b8>
   14aa0:	ldr	r3, [sp, #8]
   14aa4:	cmp	r3, r6
   14aa8:	beq	14abc <sprintf@plt+0x3514>
   14aac:	cmp	r7, r6
   14ab0:	bls	14960 <sprintf@plt+0x33b8>
   14ab4:	mov	r3, #46	; 0x2e
   14ab8:	strb	r3, [r6], #1
   14abc:	mov	r0, r4
   14ac0:	bl	1466c <sprintf@plt+0x30c4>
   14ac4:	cmp	r0, #0
   14ac8:	blt	14960 <sprintf@plt+0x33b8>
   14acc:	add	r3, r6, r0
   14ad0:	cmp	r7, r3
   14ad4:	bls	14960 <sprintf@plt+0x33b8>
   14ad8:	cmp	r5, #64	; 0x40
   14adc:	bne	14bb8 <sprintf@plt+0x3610>
   14ae0:	cmp	r1, #65	; 0x41
   14ae4:	bne	14ea0 <sprintf@plt+0x38f8>
   14ae8:	ldrb	r9, [r4, #1]
   14aec:	cmp	r9, #0
   14af0:	beq	14d8c <sprintf@plt+0x37e4>
   14af4:	add	r3, r9, #3
   14af8:	cmp	r9, #99	; 0x63
   14afc:	asr	r3, r3, #2
   14b00:	bgt	14e18 <sprintf@plt+0x3870>
   14b04:	cmp	r9, #9
   14b08:	addgt	r3, r3, #8
   14b0c:	bgt	14d94 <sprintf@plt+0x37ec>
   14b10:	mov	r2, #7
   14b14:	add	r3, r2, r3
   14b18:	add	r3, r6, r3
   14b1c:	cmp	r7, r3
   14b20:	bls	14960 <sprintf@plt+0x33b8>
   14b24:	ldr	r3, [pc, #932]	; 14ed0 <sprintf@plt+0x3928>
   14b28:	mov	r5, r6
   14b2c:	cmp	r9, #7
   14b30:	add	r4, r4, #2
   14b34:	add	r3, pc, r3
   14b38:	ldr	r3, [r3]
   14b3c:	str	r3, [r5], #3
   14b40:	ble	14db8 <sprintf@plt+0x3810>
   14b44:	ldr	r3, [pc, #904]	; 14ed4 <sprintf@plt+0x392c>
   14b48:	mov	sl, r4
   14b4c:	mov	r8, r9
   14b50:	add	r3, pc, r3
   14b54:	mov	r4, r3
   14b58:	mov	r0, r5
   14b5c:	sub	r8, r8, #8
   14b60:	ldrb	r2, [sl], #1
   14b64:	mov	r1, r4
   14b68:	add	r5, r5, #2
   14b6c:	bl	115a8 <sprintf@plt>
   14b70:	cmp	r8, #7
   14b74:	bgt	14b58 <sprintf@plt+0x35b0>
   14b78:	cmp	r8, #4
   14b7c:	mov	r4, sl
   14b80:	bgt	14dc4 <sprintf@plt+0x381c>
   14b84:	cmp	r8, #0
   14b88:	bne	14dec <sprintf@plt+0x3844>
   14b8c:	ldr	r1, [pc, #836]	; 14ed8 <sprintf@plt+0x3930>
   14b90:	mov	r2, r9
   14b94:	mov	r0, r5
   14b98:	add	r1, pc, r1
   14b9c:	bl	115a8 <sprintf@plt>
   14ba0:	add	r0, r5, r0
   14ba4:	sub	r6, r0, r6
   14ba8:	cmp	r6, #0
   14bac:	blt	14960 <sprintf@plt+0x33b8>
   14bb0:	mov	r6, r0
   14bb4:	b	14a88 <sprintf@plt+0x34e0>
   14bb8:	cmp	r0, #0
   14bbc:	add	ip, r4, #1
   14bc0:	moveq	r4, ip
   14bc4:	moveq	r0, r6
   14bc8:	beq	14bb0 <sprintf@plt+0x3608>
   14bcc:	ldr	r1, [sp, #12]
   14bd0:	add	r3, r0, #1
   14bd4:	mov	r5, #92	; 0x5c
   14bd8:	mov	r0, r6
   14bdc:	add	r4, r4, r3
   14be0:	mov	r6, #100	; 0x64
   14be4:	ldrb	r2, [ip], #1
   14be8:	add	r8, r0, #1
   14bec:	mov	r3, r0
   14bf0:	sub	lr, r2, #34	; 0x22
   14bf4:	cmp	lr, #58	; 0x3a
   14bf8:	addls	pc, pc, lr, lsl #2
   14bfc:	b	14d0c <sprintf@plt+0x3764>
   14c00:	b	14cec <sprintf@plt+0x3744>
   14c04:	b	14d0c <sprintf@plt+0x3764>
   14c08:	b	14cec <sprintf@plt+0x3744>
   14c0c:	b	14d0c <sprintf@plt+0x3764>
   14c10:	b	14d0c <sprintf@plt+0x3764>
   14c14:	b	14d0c <sprintf@plt+0x3764>
   14c18:	b	14cec <sprintf@plt+0x3744>
   14c1c:	b	14cec <sprintf@plt+0x3744>
   14c20:	b	14d0c <sprintf@plt+0x3764>
   14c24:	b	14d0c <sprintf@plt+0x3764>
   14c28:	b	14d0c <sprintf@plt+0x3764>
   14c2c:	b	14d0c <sprintf@plt+0x3764>
   14c30:	b	14cec <sprintf@plt+0x3744>
   14c34:	b	14d0c <sprintf@plt+0x3764>
   14c38:	b	14d0c <sprintf@plt+0x3764>
   14c3c:	b	14d0c <sprintf@plt+0x3764>
   14c40:	b	14d0c <sprintf@plt+0x3764>
   14c44:	b	14d0c <sprintf@plt+0x3764>
   14c48:	b	14d0c <sprintf@plt+0x3764>
   14c4c:	b	14d0c <sprintf@plt+0x3764>
   14c50:	b	14d0c <sprintf@plt+0x3764>
   14c54:	b	14d0c <sprintf@plt+0x3764>
   14c58:	b	14d0c <sprintf@plt+0x3764>
   14c5c:	b	14d0c <sprintf@plt+0x3764>
   14c60:	b	14d0c <sprintf@plt+0x3764>
   14c64:	b	14cec <sprintf@plt+0x3744>
   14c68:	b	14d0c <sprintf@plt+0x3764>
   14c6c:	b	14d0c <sprintf@plt+0x3764>
   14c70:	b	14d0c <sprintf@plt+0x3764>
   14c74:	b	14d0c <sprintf@plt+0x3764>
   14c78:	b	14cec <sprintf@plt+0x3744>
   14c7c:	b	14d0c <sprintf@plt+0x3764>
   14c80:	b	14d0c <sprintf@plt+0x3764>
   14c84:	b	14d0c <sprintf@plt+0x3764>
   14c88:	b	14d0c <sprintf@plt+0x3764>
   14c8c:	b	14d0c <sprintf@plt+0x3764>
   14c90:	b	14d0c <sprintf@plt+0x3764>
   14c94:	b	14d0c <sprintf@plt+0x3764>
   14c98:	b	14d0c <sprintf@plt+0x3764>
   14c9c:	b	14d0c <sprintf@plt+0x3764>
   14ca0:	b	14d0c <sprintf@plt+0x3764>
   14ca4:	b	14d0c <sprintf@plt+0x3764>
   14ca8:	b	14d0c <sprintf@plt+0x3764>
   14cac:	b	14d0c <sprintf@plt+0x3764>
   14cb0:	b	14d0c <sprintf@plt+0x3764>
   14cb4:	b	14d0c <sprintf@plt+0x3764>
   14cb8:	b	14d0c <sprintf@plt+0x3764>
   14cbc:	b	14d0c <sprintf@plt+0x3764>
   14cc0:	b	14d0c <sprintf@plt+0x3764>
   14cc4:	b	14d0c <sprintf@plt+0x3764>
   14cc8:	b	14d0c <sprintf@plt+0x3764>
   14ccc:	b	14d0c <sprintf@plt+0x3764>
   14cd0:	b	14d0c <sprintf@plt+0x3764>
   14cd4:	b	14d0c <sprintf@plt+0x3764>
   14cd8:	b	14d0c <sprintf@plt+0x3764>
   14cdc:	b	14d0c <sprintf@plt+0x3764>
   14ce0:	b	14d0c <sprintf@plt+0x3764>
   14ce4:	b	14d0c <sprintf@plt+0x3764>
   14ce8:	b	14cec <sprintf@plt+0x3744>
   14cec:	cmp	r7, r8
   14cf0:	bls	14960 <sprintf@plt+0x33b8>
   14cf4:	strb	r5, [r3], #2
   14cf8:	strb	r2, [r0, #1]
   14cfc:	mov	r0, r3
   14d00:	cmp	ip, r4
   14d04:	bne	14be4 <sprintf@plt+0x363c>
   14d08:	b	14bb0 <sprintf@plt+0x3608>
   14d0c:	ldr	r3, [sp, #16]
   14d10:	sub	r8, r2, #33	; 0x21
   14d14:	add	r9, r0, #3
   14d18:	cmp	r8, #93	; 0x5d
   14d1c:	umull	r3, lr, r3, r2
   14d20:	umull	sl, r3, fp, r2
   14d24:	bls	14d74 <sprintf@plt+0x37cc>
   14d28:	cmp	r7, r9
   14d2c:	lsr	lr, lr, #5
   14d30:	lsr	r3, r3, #3
   14d34:	bls	14960 <sprintf@plt+0x33b8>
   14d38:	mls	r8, r6, lr, r2
   14d3c:	ldrb	lr, [r1, lr]
   14d40:	add	r0, r0, #4
   14d44:	add	r3, r3, r3, lsl #2
   14d48:	strb	r5, [r0, #-4]
   14d4c:	uxtb	r8, r8
   14d50:	sub	r3, r2, r3, lsl #1
   14d54:	umull	r8, r2, fp, r8
   14d58:	uxtb	r3, r3
   14d5c:	strb	lr, [r0, #-3]
   14d60:	ldrb	lr, [r1, r3]
   14d64:	ldrb	r3, [r1, r2, lsr #3]
   14d68:	strb	r3, [r0, #-2]
   14d6c:	strb	lr, [r0, #-1]
   14d70:	b	14d00 <sprintf@plt+0x3758>
   14d74:	cmp	r7, r0
   14d78:	mov	r3, r0
   14d7c:	bls	14960 <sprintf@plt+0x33b8>
   14d80:	strb	r2, [r3], #1
   14d84:	mov	r0, r3
   14d88:	b	14d00 <sprintf@plt+0x3758>
   14d8c:	mov	r3, #73	; 0x49
   14d90:	mov	r9, #256	; 0x100
   14d94:	add	r3, r6, r3
   14d98:	cmp	r7, r3
   14d9c:	bls	14960 <sprintf@plt+0x33b8>
   14da0:	ldr	r3, [sp, #20]
   14da4:	mov	r5, r6
   14da8:	add	r4, r4, #2
   14dac:	ldr	r3, [r3]
   14db0:	str	r3, [r5], #3
   14db4:	b	14b44 <sprintf@plt+0x359c>
   14db8:	cmp	r9, #4
   14dbc:	mov	r8, r9
   14dc0:	ble	14dec <sprintf@plt+0x3844>
   14dc4:	ldrb	r3, [r4], #1
   14dc8:	rsb	r8, r8, #8
   14dcc:	mov	r2, #255	; 0xff
   14dd0:	mov	r0, r5
   14dd4:	add	r5, r5, #2
   14dd8:	ldr	r1, [pc, #252]	; 14edc <sprintf@plt+0x3934>
   14ddc:	and	r2, r3, r2, lsl r8
   14de0:	add	r1, pc, r1
   14de4:	bl	115a8 <sprintf@plt>
   14de8:	b	14b8c <sprintf@plt+0x35e4>
   14dec:	ldrb	r2, [r4], #1
   14df0:	mov	r3, #15
   14df4:	rsb	r8, r8, #4
   14df8:	lsl	r8, r3, r8
   14dfc:	mov	r0, r5
   14e00:	add	r5, r5, #1
   14e04:	ldr	r1, [pc, #212]	; 14ee0 <sprintf@plt+0x3938>
   14e08:	and	r2, r8, r2, lsr #4
   14e0c:	add	r1, pc, r1
   14e10:	bl	115a8 <sprintf@plt>
   14e14:	b	14b8c <sprintf@plt+0x35e4>
   14e18:	mov	r2, #9
   14e1c:	b	14b14 <sprintf@plt+0x356c>
   14e20:	ldr	r3, [sp, #8]
   14e24:	cmp	r3, r6
   14e28:	beq	14e88 <sprintf@plt+0x38e0>
   14e2c:	cmp	r7, r6
   14e30:	bls	14960 <sprintf@plt+0x33b8>
   14e34:	ldr	r3, [sp, #8]
   14e38:	mov	r2, #0
   14e3c:	strb	r2, [r6], #1
   14e40:	sub	r6, r6, r3
   14e44:	cmn	r6, #1
   14e48:	beq	1496c <sprintf@plt+0x33c4>
   14e4c:	ldr	r3, [sp, #4]
   14e50:	cmp	r3, #0
   14e54:	ble	14974 <sprintf@plt+0x33cc>
   14e58:	ldr	r3, [sp, #8]
   14e5c:	ldrb	r3, [r3]
   14e60:	cmp	r3, #46	; 0x2e
   14e64:	bne	14974 <sprintf@plt+0x33cc>
   14e68:	ldr	r3, [sp, #8]
   14e6c:	strb	r2, [r3]
   14e70:	b	14974 <sprintf@plt+0x33cc>
   14e74:	sub	r3, r1, sl
   14e78:	cmn	r3, #1
   14e7c:	str	r3, [sp, #4]
   14e80:	bne	14a50 <sprintf@plt+0x34a8>
   14e84:	b	1496c <sprintf@plt+0x33c4>
   14e88:	cmp	r7, r3
   14e8c:	bls	14960 <sprintf@plt+0x33b8>
   14e90:	ldr	r6, [sp, #8]
   14e94:	mov	r3, #46	; 0x2e
   14e98:	strb	r3, [r6], #1
   14e9c:	b	14e2c <sprintf@plt+0x3884>
   14ea0:	bl	1159c <__errno_location@plt>
   14ea4:	mov	r3, #22
   14ea8:	str	r3, [r0]
   14eac:	b	1496c <sprintf@plt+0x33c4>
   14eb0:	bl	1159c <__errno_location@plt>
   14eb4:	mov	r3, #90	; 0x5a
   14eb8:	mvn	r2, #0
   14ebc:	str	r3, [r0]
   14ec0:	str	r2, [sp, #4]
   14ec4:	b	14974 <sprintf@plt+0x33cc>
   14ec8:	andeq	r5, r0, ip, asr r6
   14ecc:	andeq	r5, r0, r4, lsl #10
   14ed0:	muleq	r0, ip, r5
   14ed4:	andeq	r5, r0, r4, lsl #11
   14ed8:	andeq	r5, r0, r8, asr #10
   14edc:	strdeq	r5, [r0], -r4
   14ee0:	ldrdeq	r5, [r0], -r0
   14ee4:	cmp	r1, r0
   14ee8:	strd	r4, [sp, #-16]!
   14eec:	mov	r5, r0
   14ef0:	mov	r4, r0
   14ef4:	str	r6, [sp, #8]
   14ef8:	str	lr, [sp, #12]
   14efc:	bls	14f50 <sprintf@plt+0x39a8>
   14f00:	ldrb	r3, [r4], #1
   14f04:	cmp	r3, #0
   14f08:	beq	14f50 <sprintf@plt+0x39a8>
   14f0c:	and	r2, r3, #192	; 0xc0
   14f10:	cmp	r2, #64	; 0x40
   14f14:	beq	14f60 <sprintf@plt+0x39b8>
   14f18:	cmp	r2, #192	; 0xc0
   14f1c:	beq	14f4c <sprintf@plt+0x39a4>
   14f20:	cmp	r2, #0
   14f24:	beq	14f8c <sprintf@plt+0x39e4>
   14f28:	bl	1159c <__errno_location@plt>
   14f2c:	mvn	r4, #0
   14f30:	mov	r3, #90	; 0x5a
   14f34:	str	r3, [r0]
   14f38:	mov	r0, r4
   14f3c:	ldrd	r4, [sp]
   14f40:	ldr	r6, [sp, #8]
   14f44:	add	sp, sp, #12
   14f48:	pop	{pc}		; (ldr pc, [sp], #4)
   14f4c:	add	r4, r0, #2
   14f50:	cmp	r1, r4
   14f54:	bcc	14f28 <sprintf@plt+0x3980>
   14f58:	sub	r4, r4, r5
   14f5c:	b	14f38 <sprintf@plt+0x3990>
   14f60:	bl	1466c <sprintf@plt+0x30c4>
   14f64:	cmp	r0, #0
   14f68:	blt	14f28 <sprintf@plt+0x3980>
   14f6c:	add	r0, r4, r0
   14f70:	cmp	r1, r0
   14f74:	mov	r4, r0
   14f78:	bls	14f50 <sprintf@plt+0x39a8>
   14f7c:	ldrb	r3, [r4], #1
   14f80:	cmp	r3, #0
   14f84:	bne	14f0c <sprintf@plt+0x3964>
   14f88:	b	14f50 <sprintf@plt+0x39a8>
   14f8c:	add	r0, r4, r3
   14f90:	b	14f70 <sprintf@plt+0x39c8>
   14f94:	ldrh	r0, [r0]
   14f98:	rev16	r0, r0
   14f9c:	uxth	r0, r0
   14fa0:	bx	lr
   14fa4:	ldr	r0, [r0]
   14fa8:	rev	r0, r0
   14fac:	bx	lr
   14fb0:	ubfx	r3, r0, #8, #8
   14fb4:	strb	r3, [r1]
   14fb8:	strb	r0, [r1, #1]
   14fbc:	bx	lr
   14fc0:	lsr	r2, r0, #24
   14fc4:	lsr	r3, r0, #16
   14fc8:	strb	r0, [r1, #3]
   14fcc:	lsr	r0, r0, #8
   14fd0:	strb	r2, [r1]
   14fd4:	strb	r3, [r1, #1]
   14fd8:	strb	r0, [r1, #2]
   14fdc:	bx	lr
   14fe0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14fe4:	strd	r6, [sp, #8]
   14fe8:	strd	r8, [sp, #16]
   14fec:	strd	sl, [sp, #24]
   14ff0:	mov	fp, r3
   14ff4:	str	lr, [sp, #32]
   14ff8:	sub	sp, sp, #404	; 0x194
   14ffc:	ldr	ip, [sp, #440]	; 0x1b8
   15000:	stm	sp, {r1, r2}
   15004:	cmp	ip, #11
   15008:	movgt	r3, #0
   1500c:	movle	r3, #1
   15010:	cmp	fp, #0
   15014:	moveq	r3, #1
   15018:	cmp	r3, #0
   1501c:	bne	15170 <sprintf@plt+0x3bc8>
   15020:	str	r3, [fp, #2]
   15024:	subs	r2, ip, #16
   15028:	ldr	r1, [fp]
   1502c:	str	r2, [sp, #8]
   15030:	mov	r2, #0
   15034:	movt	r2, #61574	; 0xf086
   15038:	str	r3, [fp, #6]
   1503c:	strh	r3, [fp, #10]
   15040:	str	fp, [sp, #64]	; 0x40
   15044:	and	r2, r2, r1
   15048:	str	r3, [sp, #68]	; 0x44
   1504c:	orr	r2, r2, #65536	; 0x10000
   15050:	str	r2, [fp]
   15054:	bmi	15170 <sprintf@plt+0x3bc8>
   15058:	mov	r4, r0
   1505c:	add	r3, sp, #145	; 0x91
   15060:	ldrb	r8, [r4], #1
   15064:	add	sl, sp, #144	; 0x90
   15068:	str	r3, [sp, #56]	; 0x38
   1506c:	cmp	r8, #0
   15070:	moveq	r7, sl
   15074:	beq	15144 <sprintf@plt+0x3b9c>
   15078:	ldr	r3, [pc, #2156]	; 158ec <sprintf@plt+0x4344>
   1507c:	mov	r7, sl
   15080:	mov	r6, r8
   15084:	ldr	r5, [pc, #2148]	; 158f0 <sprintf@plt+0x4348>
   15088:	add	r3, pc, r3
   1508c:	add	r5, pc, r5
   15090:	str	r3, [sp, #12]
   15094:	b	150cc <sprintf@plt+0x3b24>
   15098:	add	r2, sp, #396	; 0x18c
   1509c:	add	r2, r2, #3
   150a0:	cmp	r3, r2
   150a4:	bcs	15164 <sprintf@plt+0x3bbc>
   150a8:	add	r1, r3, #1
   150ac:	mov	r2, r4
   150b0:	str	r1, [sp, #56]	; 0x38
   150b4:	strb	r6, [r3]
   150b8:	ldrb	r6, [r2], #1
   150bc:	cmp	r6, #0
   150c0:	beq	15150 <sprintf@plt+0x3ba8>
   150c4:	mov	r0, r4
   150c8:	mov	r4, r2
   150cc:	cmp	r6, #92	; 0x5c
   150d0:	beq	15194 <sprintf@plt+0x3bec>
   150d4:	cmp	r6, #46	; 0x2e
   150d8:	ldr	r3, [sp, #56]	; 0x38
   150dc:	bne	15098 <sprintf@plt+0x3af0>
   150e0:	sub	r3, r3, r7
   150e4:	sub	r3, r3, #1
   150e8:	tst	r3, #192	; 0xc0
   150ec:	bne	15164 <sprintf@plt+0x3bbc>
   150f0:	add	r8, sp, #396	; 0x18c
   150f4:	add	r8, r8, #3
   150f8:	cmp	r7, r8
   150fc:	bcs	15164 <sprintf@plt+0x3bbc>
   15100:	strb	r3, [r7]
   15104:	ldrb	r2, [r0, #1]
   15108:	cmp	r2, #0
   1510c:	beq	1589c <sprintf@plt+0x42f4>
   15110:	cmp	r3, #0
   15114:	cmpne	r2, #46	; 0x2e
   15118:	beq	15164 <sprintf@plt+0x3bbc>
   1511c:	mov	r2, r4
   15120:	ldr	r7, [sp, #56]	; 0x38
   15124:	ldrb	r6, [r2], #1
   15128:	add	r3, r7, #1
   1512c:	cmp	r6, #0
   15130:	str	r3, [sp, #56]	; 0x38
   15134:	bne	150c4 <sprintf@plt+0x3b1c>
   15138:	cmp	r7, r8
   1513c:	mov	r9, r8
   15140:	bcs	15164 <sprintf@plt+0x3bbc>
   15144:	mov	r3, #0
   15148:	strb	r3, [r7]
   1514c:	b	154cc <sprintf@plt+0x3f24>
   15150:	ldr	r3, [sp, #56]	; 0x38
   15154:	sub	r3, r3, r7
   15158:	sub	r3, r3, #1
   1515c:	ands	r1, r3, #192	; 0xc0
   15160:	beq	15498 <sprintf@plt+0x3ef0>
   15164:	bl	1159c <__errno_location@plt>
   15168:	mov	r3, #90	; 0x5a
   1516c:	str	r3, [r0]
   15170:	mvn	r2, #0
   15174:	mov	r0, r2
   15178:	add	sp, sp, #404	; 0x194
   1517c:	ldrd	r4, [sp]
   15180:	ldrd	r6, [sp, #8]
   15184:	ldrd	r8, [sp, #16]
   15188:	ldrd	sl, [sp, #24]
   1518c:	add	sp, sp, #32
   15190:	pop	{pc}		; (ldr pc, [sp], #4)
   15194:	mov	r8, r4
   15198:	ldrb	r6, [r8], #1
   1519c:	cmp	r6, #0
   151a0:	beq	15150 <sprintf@plt+0x3ba8>
   151a4:	cmp	r6, #91	; 0x5b
   151a8:	beq	1522c <sprintf@plt+0x3c84>
   151ac:	mov	r1, r6
   151b0:	mov	r0, r5
   151b4:	bl	112cc <strchr@plt>
   151b8:	cmp	r0, #0
   151bc:	beq	153e0 <sprintf@plt+0x3e38>
   151c0:	ldrb	r1, [r4, #1]
   151c4:	sub	r0, r0, r5
   151c8:	mov	r6, #100	; 0x64
   151cc:	mul	r6, r6, r0
   151d0:	cmp	r1, #0
   151d4:	beq	15164 <sprintf@plt+0x3bbc>
   151d8:	mov	r0, r5
   151dc:	bl	112cc <strchr@plt>
   151e0:	cmp	r0, #0
   151e4:	beq	15164 <sprintf@plt+0x3bbc>
   151e8:	ldrb	r1, [r4, #2]
   151ec:	sub	r0, r0, r5
   151f0:	add	r4, r4, #3
   151f4:	add	r0, r0, r0, lsl #2
   151f8:	add	r6, r6, r0, lsl #1
   151fc:	cmp	r1, #0
   15200:	beq	15164 <sprintf@plt+0x3bbc>
   15204:	mov	r0, r5
   15208:	bl	112cc <strchr@plt>
   1520c:	cmp	r0, #0
   15210:	beq	15164 <sprintf@plt+0x3bbc>
   15214:	sub	r0, r0, r5
   15218:	add	r6, r0, r6
   1521c:	cmp	r6, #255	; 0xff
   15220:	bgt	15164 <sprintf@plt+0x3bbc>
   15224:	ldr	r3, [sp, #56]	; 0x38
   15228:	b	15098 <sprintf@plt+0x3af0>
   1522c:	mov	r1, #93	; 0x5d
   15230:	mov	r0, r8
   15234:	bl	112cc <strchr@plt>
   15238:	cmp	r0, #0
   1523c:	beq	153d0 <sprintf@plt+0x3e28>
   15240:	add	r6, r0, #2
   15244:	mov	r9, #0
   15248:	sub	r8, r6, r8
   1524c:	cmp	r8, #1
   15250:	str	r9, [sp, #60]	; 0x3c
   15254:	ble	153c0 <sprintf@plt+0x3e18>
   15258:	ldrb	r3, [r4, #1]
   1525c:	cmp	r3, #120	; 0x78
   15260:	bne	153c0 <sprintf@plt+0x3e18>
   15264:	bl	11488 <__ctype_b_loc@plt>
   15268:	ldrb	r2, [r4, #2]
   1526c:	ldr	ip, [r0]
   15270:	lsl	r3, r2, #1
   15274:	ldrh	r3, [ip, r3]
   15278:	tst	r3, #4096	; 0x1000
   1527c:	beq	153c0 <sprintf@plt+0x3e18>
   15280:	add	r8, sp, #396	; 0x18c
   15284:	add	r4, r4, #2
   15288:	add	r8, r8, #3
   1528c:	add	r1, sp, #60	; 0x3c
   15290:	cmp	r8, r1
   15294:	cmphi	r6, r4
   15298:	bls	158c8 <sprintf@plt+0x4320>
   1529c:	mov	r3, r9
   152a0:	mov	r9, r1
   152a4:	mov	r0, r3
   152a8:	str	r3, [sp, #16]
   152ac:	str	r3, [sp, #20]
   152b0:	str	r3, [sp, #24]
   152b4:	cmp	r2, #47	; 0x2f
   152b8:	beq	153ec <sprintf@plt+0x3e44>
   152bc:	cmp	r2, #93	; 0x5d
   152c0:	bne	15418 <sprintf@plt+0x3e70>
   152c4:	cmp	r0, #0
   152c8:	beq	152fc <sprintf@plt+0x3d54>
   152cc:	str	r3, [sp, #28]
   152d0:	ldr	r3, [sp, #24]
   152d4:	cmp	r3, #0
   152d8:	beq	153c0 <sprintf@plt+0x3e18>
   152dc:	mov	r0, r3
   152e0:	mov	r2, #10
   152e4:	bl	1141c <strtol@plt>
   152e8:	ldr	r3, [sp, #28]
   152ec:	ldr	r2, [sp, #60]	; 0x3c
   152f0:	ldrb	r2, [r2]
   152f4:	cmp	r2, #93	; 0x5d
   152f8:	bne	153c0 <sprintf@plt+0x3e18>
   152fc:	ldr	r2, [sp, #16]
   15300:	cmp	r2, #0
   15304:	beq	15314 <sprintf@plt+0x3d6c>
   15308:	ldr	r2, [sp, #20]
   1530c:	lsl	r2, r2, #4
   15310:	strb	r2, [r9], #1
   15314:	cmp	r9, r8
   15318:	add	r4, r4, #1
   1531c:	movcc	r2, #0
   15320:	movcs	r2, #1
   15324:	cmp	r6, r4
   15328:	movhi	r6, r2
   1532c:	orrls	r6, r2, #1
   15330:	cmp	r6, #0
   15334:	bne	1587c <sprintf@plt+0x42d4>
   15338:	cmp	r0, #0
   1533c:	ble	1536c <sprintf@plt+0x3dc4>
   15340:	add	r2, r0, #3
   15344:	bic	r2, r2, #3
   15348:	cmp	r2, r3
   1534c:	bne	153c0 <sprintf@plt+0x3e18>
   15350:	ldr	r2, [sp, #20]
   15354:	sub	r3, r3, r0
   15358:	rsb	r3, r3, #8
   1535c:	lsl	r3, r2, r3
   15360:	tst	r3, #255	; 0xff
   15364:	bne	153c0 <sprintf@plt+0x3e18>
   15368:	mov	r3, r0
   1536c:	cmp	r3, #256	; 0x100
   15370:	uxtbne	r3, r3
   15374:	moveq	r3, #0
   15378:	mov	r2, #65	; 0x41
   1537c:	add	r1, r9, #1
   15380:	strb	r2, [r7]
   15384:	ldr	r2, [sp, #56]	; 0x38
   15388:	strb	r3, [r2]
   1538c:	ldrb	r2, [r4]
   15390:	str	r1, [sp, #56]	; 0x38
   15394:	cmp	r2, #0
   15398:	beq	15884 <sprintf@plt+0x42dc>
   1539c:	cmp	r2, #46	; 0x2e
   153a0:	bne	153d0 <sprintf@plt+0x3e28>
   153a4:	ldrb	r6, [r4, #1]
   153a8:	add	r2, r4, #2
   153ac:	cmp	r6, #0
   153b0:	beq	158e4 <sprintf@plt+0x433c>
   153b4:	add	r4, r4, #1
   153b8:	mov	r7, r9
   153bc:	b	150c4 <sprintf@plt+0x3b1c>
   153c0:	mov	r4, #22
   153c4:	bl	1159c <__errno_location@plt>
   153c8:	str	r4, [r0]
   153cc:	b	15170 <sprintf@plt+0x3bc8>
   153d0:	bl	1159c <__errno_location@plt>
   153d4:	mov	r3, #22
   153d8:	str	r3, [r0]
   153dc:	b	15170 <sprintf@plt+0x3bc8>
   153e0:	mov	r4, r8
   153e4:	ldr	r3, [sp, #56]	; 0x38
   153e8:	b	15098 <sprintf@plt+0x3af0>
   153ec:	mov	r0, #1
   153f0:	add	r4, r4, #1
   153f4:	cmp	r6, r4
   153f8:	movls	r2, #0
   153fc:	movhi	r2, #1
   15400:	cmp	r9, r8
   15404:	movcs	r2, #0
   15408:	cmp	r2, #0
   1540c:	beq	1585c <sprintf@plt+0x42b4>
   15410:	ldrb	r2, [r4]
   15414:	b	152b4 <sprintf@plt+0x3d0c>
   15418:	lsl	lr, r2, #1
   1541c:	cmp	r0, #0
   15420:	ldrh	lr, [ip, lr]
   15424:	bne	15474 <sprintf@plt+0x3ecc>
   15428:	tst	lr, #4096	; 0x1000
   1542c:	beq	153c0 <sprintf@plt+0x3e18>
   15430:	ldr	lr, [sp, #12]
   15434:	add	r3, r3, #4
   15438:	cmp	r3, #256	; 0x100
   1543c:	add	r2, lr, r2
   15440:	ldr	lr, [sp, #16]
   15444:	ldrb	r2, [r2, #12]
   15448:	add	lr, lr, #4
   1544c:	str	lr, [sp, #16]
   15450:	ldr	lr, [sp, #20]
   15454:	add	r2, r2, lr, lsl #4
   15458:	str	r2, [sp, #20]
   1545c:	bgt	153c0 <sprintf@plt+0x3e18>
   15460:	ldr	lr, [sp, #16]
   15464:	cmp	lr, #8
   15468:	strbeq	r2, [r9], #1
   1546c:	streq	r0, [sp, #16]
   15470:	b	153f0 <sprintf@plt+0x3e48>
   15474:	tst	lr, #2048	; 0x800
   15478:	beq	153c0 <sprintf@plt+0x3e18>
   1547c:	ldr	lr, [sp, #24]
   15480:	cmp	lr, #0
   15484:	bne	153f0 <sprintf@plt+0x3e48>
   15488:	cmp	r2, #48	; 0x30
   1548c:	beq	153c0 <sprintf@plt+0x3e18>
   15490:	str	r4, [sp, #24]
   15494:	b	153f0 <sprintf@plt+0x3e48>
   15498:	add	r2, sp, #396	; 0x18c
   1549c:	add	r2, r2, #3
   154a0:	cmp	r7, r2
   154a4:	bcs	15164 <sprintf@plt+0x3bbc>
   154a8:	cmp	r3, #0
   154ac:	strb	r3, [r7]
   154b0:	beq	154cc <sprintf@plt+0x3f24>
   154b4:	ldr	r3, [sp, #56]	; 0x38
   154b8:	cmp	r3, r2
   154bc:	addcc	r2, r3, #1
   154c0:	strcc	r2, [sp, #56]	; 0x38
   154c4:	strbcc	r1, [r3]
   154c8:	bcs	15164 <sprintf@plt+0x3bbc>
   154cc:	ldr	r3, [sp, #56]	; 0x38
   154d0:	sub	r3, r3, sl
   154d4:	cmp	r3, #255	; 0xff
   154d8:	bgt	15164 <sprintf@plt+0x3bbc>
   154dc:	ldr	r8, [sp, #64]	; 0x40
   154e0:	cmp	r8, #0
   154e4:	moveq	r9, r8
   154e8:	beq	15508 <sprintf@plt+0x3f60>
   154ec:	ldr	r3, [sp, #68]	; 0x44
   154f0:	add	r9, sp, #68	; 0x44
   154f4:	cmp	r3, #0
   154f8:	beq	15508 <sprintf@plt+0x3f60>
   154fc:	ldr	r3, [r9, #4]!
   15500:	cmp	r3, #0
   15504:	bne	154fc <sprintf@plt+0x3f54>
   15508:	mov	r5, #0
   1550c:	mov	r1, sl
   15510:	b	1553c <sprintf@plt+0x3f94>
   15514:	bl	1466c <sprintf@plt+0x30c4>
   15518:	cmp	r0, #0
   1551c:	add	r0, r0, #1
   15520:	blt	15564 <sprintf@plt+0x3fbc>
   15524:	add	r5, r5, r0
   15528:	add	r1, r1, r0
   1552c:	cmp	r5, #255	; 0xff
   15530:	bgt	15550 <sprintf@plt+0x3fa8>
   15534:	cmp	r4, #0
   15538:	beq	15578 <sprintf@plt+0x3fd0>
   1553c:	ldrb	r4, [r1]
   15540:	mov	r0, r1
   15544:	and	r3, r4, #192	; 0xc0
   15548:	cmp	r3, #192	; 0xc0
   1554c:	bne	15514 <sprintf@plt+0x3f6c>
   15550:	bl	1159c <__errno_location@plt>
   15554:	mov	r3, #90	; 0x5a
   15558:	mvn	r2, #0
   1555c:	str	r3, [r0]
   15560:	b	15174 <sprintf@plt+0x3bcc>
   15564:	bl	1159c <__errno_location@plt>
   15568:	mov	r3, #22
   1556c:	mvn	r2, #0
   15570:	str	r3, [r0]
   15574:	b	15174 <sprintf@plt+0x3bcc>
   15578:	ldr	r3, [sp, #8]
   1557c:	add	r6, fp, #12
   15580:	mov	r7, sl
   15584:	str	r6, [sp, #16]
   15588:	str	r9, [sp, #28]
   1558c:	str	r9, [sp, #32]
   15590:	add	r3, r6, r3
   15594:	str	r4, [sp, #48]	; 0x30
   15598:	str	fp, [sp, #52]	; 0x34
   1559c:	mov	fp, r8
   155a0:	str	r3, [sp, #20]
   155a4:	adds	r3, r8, #0
   155a8:	movne	r3, #1
   155ac:	str	r3, [sp, #24]
   155b0:	mov	r3, #1
   155b4:	str	r3, [sp, #44]	; 0x2c
   155b8:	add	r3, sp, #64	; 0x40
   155bc:	str	r3, [sp, #36]	; 0x24
   155c0:	b	15610 <sprintf@plt+0x4068>
   155c4:	and	r3, r9, #192	; 0xc0
   155c8:	cmp	r3, #192	; 0xc0
   155cc:	beq	15550 <sprintf@plt+0x3fa8>
   155d0:	mov	r0, r7
   155d4:	bl	1466c <sprintf@plt+0x30c4>
   155d8:	ldr	r2, [sp, #20]
   155dc:	add	r4, r0, #1
   155e0:	mov	r5, r0
   155e4:	add	r3, r6, r4
   155e8:	cmp	r2, r3
   155ec:	bls	15550 <sprintf@plt+0x3fa8>
   155f0:	mov	r0, r6
   155f4:	mov	r1, r7
   155f8:	mov	r2, r4
   155fc:	mov	r6, r3
   15600:	bl	113f8 <memcpy@plt>
   15604:	cmp	r5, #0
   15608:	add	r7, r7, r4
   1560c:	beq	1584c <sprintf@plt+0x42a4>
   15610:	ldrb	r9, [r7]
   15614:	ldr	r3, [sp, #24]
   15618:	cmp	r9, #0
   1561c:	moveq	r3, #0
   15620:	cmp	r3, #0
   15624:	beq	155c4 <sprintf@plt+0x401c>
   15628:	ldr	r2, [sp, #28]
   1562c:	add	r3, sp, #68	; 0x44
   15630:	cmp	r2, r3
   15634:	bls	156e8 <sprintf@plt+0x4140>
   15638:	ldr	r3, [sp, #36]	; 0x24
   1563c:	str	r3, [sp, #8]
   15640:	str	r6, [sp, #12]
   15644:	ldr	r3, [sp, #8]
   15648:	ldr	r5, [r3, #4]
   1564c:	add	r3, r3, #4
   15650:	str	r3, [sp, #40]	; 0x28
   15654:	ldrb	r1, [r5]
   15658:	cmp	r1, #0
   1565c:	beq	156c8 <sprintf@plt+0x4120>
   15660:	tst	r1, #192	; 0xc0
   15664:	bne	156c8 <sprintf@plt+0x4120>
   15668:	sub	r8, r5, fp
   1566c:	cmp	r8, #16384	; 0x4000
   15670:	bge	156c8 <sprintf@plt+0x4120>
   15674:	mov	r3, r1
   15678:	mov	r6, r5
   1567c:	cmp	r3, #0
   15680:	mov	r4, r7
   15684:	beq	156b8 <sprintf@plt+0x4110>
   15688:	ands	r2, r3, #192	; 0xc0
   1568c:	beq	15750 <sprintf@plt+0x41a8>
   15690:	cmp	r2, #192	; 0xc0
   15694:	bne	1573c <sprintf@plt+0x4194>
   15698:	ldrb	r2, [r6, #1]
   1569c:	lsl	r3, r3, #8
   156a0:	and	r3, r3, #16128	; 0x3f00
   156a4:	orr	r3, r3, r2
   156a8:	add	r6, fp, r3
   156ac:	ldrb	r3, [r6]
   156b0:	cmp	r3, #0
   156b4:	bne	15688 <sprintf@plt+0x40e0>
   156b8:	add	r1, r1, #1
   156bc:	ldrb	r1, [r5, r1]!
   156c0:	cmp	r1, #0
   156c4:	bne	15660 <sprintf@plt+0x40b8>
   156c8:	ldr	r3, [sp, #8]
   156cc:	ldr	r2, [sp, #40]	; 0x28
   156d0:	add	r3, r3, #8
   156d4:	str	r2, [sp, #8]
   156d8:	ldr	r2, [sp, #28]
   156dc:	cmp	r2, r3
   156e0:	bhi	15644 <sprintf@plt+0x409c>
   156e4:	ldr	r6, [sp, #12]
   156e8:	bl	1159c <__errno_location@plt>
   156ec:	mov	r3, #2
   156f0:	str	r3, [r0]
   156f4:	ldr	r2, [sp, #32]
   156f8:	add	r3, sp, #140	; 0x8c
   156fc:	cmp	r2, r3
   15700:	bcs	155c4 <sprintf@plt+0x401c>
   15704:	sub	r3, r6, fp
   15708:	cmp	r3, #16384	; 0x4000
   1570c:	bge	155c4 <sprintf@plt+0x401c>
   15710:	ldr	r3, [sp, #44]	; 0x2c
   15714:	cmp	r3, #0
   15718:	beq	155c4 <sprintf@plt+0x401c>
   1571c:	mov	r1, #0
   15720:	mov	r3, r2
   15724:	str	r1, [sp, #44]	; 0x2c
   15728:	ldr	r1, [sp, #48]	; 0x30
   1572c:	str	r6, [r3], #4
   15730:	str	r3, [sp, #32]
   15734:	str	r1, [r2, #4]
   15738:	b	155c4 <sprintf@plt+0x401c>
   1573c:	bl	1159c <__errno_location@plt>
   15740:	mov	r3, #90	; 0x5a
   15744:	ldr	r6, [sp, #12]
   15748:	str	r3, [r0]
   1574c:	b	156f4 <sprintf@plt+0x414c>
   15750:	mov	r0, r6
   15754:	bl	1466c <sprintf@plt+0x30c4>
   15758:	ldrb	lr, [r4], #1
   1575c:	cmp	r0, lr
   15760:	bne	156b8 <sprintf@plt+0x4110>
   15764:	cmp	lr, #0
   15768:	add	r0, r6, #1
   1576c:	bne	1577c <sprintf@plt+0x41d4>
   15770:	b	157b0 <sprintf@plt+0x4208>
   15774:	cmn	ip, lr
   15778:	beq	157b0 <sprintf@plt+0x4208>
   1577c:	ldrb	r3, [r4], #1
   15780:	sub	r2, r3, #65	; 0x41
   15784:	cmp	r2, #25
   15788:	ldrb	r2, [r0], #1
   1578c:	addls	r3, r3, #32
   15790:	sub	sl, r2, #65	; 0x41
   15794:	rsb	ip, r0, #1
   15798:	cmp	sl, #25
   1579c:	add	ip, r6, ip
   157a0:	addls	r2, r2, #32
   157a4:	cmp	r2, r3
   157a8:	beq	15774 <sprintf@plt+0x41cc>
   157ac:	b	156b8 <sprintf@plt+0x4110>
   157b0:	ldrb	r3, [r4]
   157b4:	cmp	r3, #0
   157b8:	bne	15844 <sprintf@plt+0x429c>
   157bc:	ldrb	r3, [r0]
   157c0:	cmp	r3, #0
   157c4:	bne	156b8 <sprintf@plt+0x4110>
   157c8:	cmp	r8, #0
   157cc:	ldr	r6, [sp, #12]
   157d0:	blt	156f4 <sprintf@plt+0x414c>
   157d4:	ldr	r2, [sp, #20]
   157d8:	add	r3, r6, #1
   157dc:	ldr	fp, [sp, #52]	; 0x34
   157e0:	cmp	r2, r3
   157e4:	bls	15550 <sprintf@plt+0x3fa8>
   157e8:	mvn	r3, #63	; 0x3f
   157ec:	strb	r8, [r6, #1]
   157f0:	add	r2, r6, #2
   157f4:	orr	r8, r3, r8, asr #8
   157f8:	ldr	r3, [sp, #16]
   157fc:	strb	r8, [r6]
   15800:	sub	r2, r2, r3
   15804:	cmp	r2, #0
   15808:	blt	15170 <sprintf@plt+0x3bc8>
   1580c:	ldm	sp, {r5, lr}
   15810:	mov	r1, #256	; 0x100
   15814:	ldr	r4, [sp, #16]
   15818:	ubfx	ip, lr, #8, #8
   1581c:	ubfx	r0, r5, #8, #8
   15820:	add	r3, r4, r2
   15824:	strb	ip, [r4, r2]
   15828:	add	r2, r3, #4
   1582c:	sub	r2, r2, fp
   15830:	strb	lr, [r3, #1]
   15834:	strb	r0, [r3, #2]
   15838:	strb	r5, [r3, #3]
   1583c:	strh	r1, [fp, #4]
   15840:	b	15174 <sprintf@plt+0x3bcc>
   15844:	mov	r6, r0
   15848:	b	156ac <sprintf@plt+0x4104>
   1584c:	ldr	r3, [sp, #16]
   15850:	ldr	fp, [sp, #52]	; 0x34
   15854:	sub	r2, r6, r3
   15858:	b	15804 <sprintf@plt+0x425c>
   1585c:	cmp	r9, r8
   15860:	movcc	r2, #0
   15864:	movcs	r2, #1
   15868:	cmp	r6, r4
   1586c:	movhi	r6, r2
   15870:	orrls	r6, r2, #1
   15874:	cmp	r6, #0
   15878:	beq	1536c <sprintf@plt+0x3dc4>
   1587c:	mov	r4, #90	; 0x5a
   15880:	b	153c4 <sprintf@plt+0x3e1c>
   15884:	mov	r3, r9
   15888:	mov	r9, r8
   1588c:	cmp	r3, r8
   15890:	strbcc	r2, [r3]
   15894:	bcc	154cc <sprintf@plt+0x3f24>
   15898:	b	15164 <sprintf@plt+0x3bbc>
   1589c:	cmp	r3, #0
   158a0:	mov	r9, r8
   158a4:	ldr	r3, [sp, #56]	; 0x38
   158a8:	beq	154d0 <sprintf@plt+0x3f28>
   158ac:	cmp	r3, r8
   158b0:	bcs	15164 <sprintf@plt+0x3bbc>
   158b4:	add	r1, r3, #1
   158b8:	str	r1, [sp, #56]	; 0x38
   158bc:	strb	r2, [r3]
   158c0:	ldr	r3, [sp, #56]	; 0x38
   158c4:	b	154d0 <sprintf@plt+0x3f28>
   158c8:	cmp	r8, r1
   158cc:	cmphi	r6, r4
   158d0:	movls	r3, #1
   158d4:	movhi	r3, #0
   158d8:	bls	1587c <sprintf@plt+0x42d4>
   158dc:	mov	r9, r1
   158e0:	b	15378 <sprintf@plt+0x3dd0>
   158e4:	mov	r7, r9
   158e8:	b	15138 <sprintf@plt+0x3b90>
   158ec:	strdeq	r4, [r0], -ip
   158f0:	strdeq	r4, [r0], -r8
   158f4:	mov	r1, #0
   158f8:	str	r4, [sp, #-8]!
   158fc:	ldr	r0, [r2]
   15900:	mov	r2, #10
   15904:	str	lr, [sp, #4]
   15908:	bl	1141c <strtol@plt>
   1590c:	cmp	r0, #0
   15910:	blt	1592c <sprintf@plt+0x4384>
   15914:	ldr	r3, [pc, #44]	; 15948 <sprintf@plt+0x43a0>
   15918:	ldr	r4, [sp]
   1591c:	add	sp, sp, #4
   15920:	add	r3, pc, r3
   15924:	str	r0, [r3]
   15928:	pop	{pc}		; (ldr pc, [sp], #4)
   1592c:	ldr	r1, [pc, #24]	; 1594c <sprintf@plt+0x43a4>
   15930:	mov	r2, r0
   15934:	mov	r0, #67	; 0x43
   15938:	add	r1, pc, r1
   1593c:	bl	123a0 <sprintf@plt+0xdf8>
   15940:	mov	r0, #3
   15944:	bl	11590 <exit@plt>
   15948:	andeq	r6, r1, r0, lsl #9
   1594c:	andeq	r4, r0, r0, ror #15
   15950:	ldr	r3, [pc, #92]	; 159b4 <sprintf@plt+0x440c>
   15954:	strd	r4, [sp, #-16]!
   15958:	ldr	r4, [pc, r3]
   1595c:	str	r6, [sp, #8]
   15960:	str	lr, [sp, #12]
   15964:	cmp	r4, #0
   15968:	beq	159ac <sprintf@plt+0x4404>
   1596c:	mov	r6, r0
   15970:	b	15980 <sprintf@plt+0x43d8>
   15974:	ldr	r4, [r4, #8]
   15978:	cmp	r4, #0
   1597c:	beq	159ac <sprintf@plt+0x4404>
   15980:	ldr	r5, [r4]
   15984:	mov	r1, r6
   15988:	mov	r0, r5
   1598c:	bl	112e4 <strcasecmp@plt>
   15990:	cmp	r0, #0
   15994:	bne	15974 <sprintf@plt+0x43cc>
   15998:	mov	r0, r5
   1599c:	ldrd	r4, [sp]
   159a0:	ldr	r6, [sp, #8]
   159a4:	add	sp, sp, #12
   159a8:	pop	{pc}		; (ldr pc, [sp], #4)
   159ac:	mov	r5, r4
   159b0:	b	15998 <sprintf@plt+0x43f0>
   159b4:	andeq	sl, r1, r0, asr #13
   159b8:	ldr	r3, [pc, #32]	; 159e0 <sprintf@plt+0x4438>
   159bc:	mov	r2, #236	; 0xec
   159c0:	str	r4, [sp, #-8]!
   159c4:	ldr	r1, [pc, #24]	; 159e4 <sprintf@plt+0x443c>
   159c8:	str	lr, [sp, #4]
   159cc:	ldr	r0, [pc, #20]	; 159e8 <sprintf@plt+0x4440>
   159d0:	add	r3, pc, r3
   159d4:	add	r1, pc, r1
   159d8:	add	r0, pc, r0
   159dc:	bl	11350 <__assert_fail@plt>
   159e0:	andeq	r4, r0, r8, lsl r7
   159e4:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   159e8:	andeq	r4, r0, r8, ror #14
   159ec:	ldr	r3, [pc, #36]	; 15a18 <sprintf@plt+0x4470>
   159f0:	mov	r2, #288	; 0x120
   159f4:	str	r4, [sp, #-8]!
   159f8:	ldr	r1, [pc, #28]	; 15a1c <sprintf@plt+0x4474>
   159fc:	str	lr, [sp, #4]
   15a00:	ldr	r0, [pc, #24]	; 15a20 <sprintf@plt+0x4478>
   15a04:	add	r3, pc, r3
   15a08:	add	r3, r3, #16
   15a0c:	add	r1, pc, r1
   15a10:	add	r0, pc, r0
   15a14:	bl	11350 <__assert_fail@plt>
   15a18:	andeq	r4, r0, r4, ror #13
   15a1c:			; <UNDEFINED> instruction: 0x000042bc
   15a20:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   15a24:	strd	r4, [sp, #-16]!
   15a28:	ldr	r5, [r2]
   15a2c:	str	r6, [sp, #8]
   15a30:	str	lr, [sp, #12]
   15a34:	mov	r0, r5
   15a38:	bl	15950 <sprintf@plt+0x43a8>
   15a3c:	subs	r4, r0, #0
   15a40:	beq	15b0c <sprintf@plt+0x4564>
   15a44:	ldr	r3, [r4, #788]	; 0x314
   15a48:	cmp	r3, #0
   15a4c:	ble	15a68 <sprintf@plt+0x44c0>
   15a50:	mov	r3, #1
   15a54:	ldr	r6, [sp, #8]
   15a58:	strb	r3, [r4, #784]	; 0x310
   15a5c:	ldrd	r4, [sp]
   15a60:	add	sp, sp, #12
   15a64:	pop	{pc}		; (ldr pc, [sp], #4)
   15a68:	ldr	r3, [pc, #208]	; 15b40 <sprintf@plt+0x4598>
   15a6c:	add	r3, pc, r3
   15a70:	ldr	r3, [r3]
   15a74:	cmp	r3, #0
   15a78:	beq	15a94 <sprintf@plt+0x44ec>
   15a7c:	ldr	r2, [r3]
   15a80:	cmp	r4, r2
   15a84:	beq	15aac <sprintf@plt+0x4504>
   15a88:	ldr	r3, [r3, #8]
   15a8c:	cmp	r3, #0
   15a90:	bne	15a7c <sprintf@plt+0x44d4>
   15a94:	mov	r0, r4
   15a98:	ldrd	r4, [sp]
   15a9c:	ldr	r6, [sp, #8]
   15aa0:	ldr	lr, [sp, #12]
   15aa4:	add	sp, sp, #16
   15aa8:	b	11380 <free@plt>
   15aac:	ldr	r2, [r3, #4]
   15ab0:	ldr	r1, [r3, #8]
   15ab4:	cmp	r1, #0
   15ab8:	beq	15afc <sprintf@plt+0x4554>
   15abc:	str	r2, [r1, #4]
   15ac0:	ldr	r2, [r3, #4]
   15ac4:	cmp	r2, #0
   15ac8:	strne	r1, [r2, #8]
   15acc:	beq	15b30 <sprintf@plt+0x4588>
   15ad0:	ldr	r2, [pc, #108]	; 15b44 <sprintf@plt+0x459c>
   15ad4:	mov	r1, #0
   15ad8:	mov	r0, r3
   15adc:	str	r1, [r3, #4]
   15ae0:	str	r1, [r3, #8]
   15ae4:	add	r2, pc, r2
   15ae8:	ldr	r3, [r2, #8]
   15aec:	sub	r3, r3, #1
   15af0:	str	r3, [r2, #8]
   15af4:	bl	11404 <rb_free_rb_dlink_node@plt>
   15af8:	b	15a94 <sprintf@plt+0x44ec>
   15afc:	ldr	r0, [pc, #68]	; 15b48 <sprintf@plt+0x45a0>
   15b00:	add	r0, pc, r0
   15b04:	str	r2, [r0, #4]
   15b08:	b	15ac4 <sprintf@plt+0x451c>
   15b0c:	ldr	r1, [pc, #56]	; 15b4c <sprintf@plt+0x45a4>
   15b10:	mov	r2, r5
   15b14:	mov	r0, #87	; 0x57
   15b18:	ldrd	r4, [sp]
   15b1c:	ldr	r6, [sp, #8]
   15b20:	add	r1, pc, r1
   15b24:	ldr	lr, [sp, #12]
   15b28:	add	sp, sp, #16
   15b2c:	b	123a0 <sprintf@plt+0xdf8>
   15b30:	ldr	r2, [pc, #24]	; 15b50 <sprintf@plt+0x45a8>
   15b34:	add	r2, pc, r2
   15b38:	str	r1, [r2]
   15b3c:	b	15ad0 <sprintf@plt+0x4528>
   15b40:	andeq	sl, r1, ip, lsr #11
   15b44:	andeq	sl, r1, r4, lsr r5
   15b48:	andeq	sl, r1, r8, lsl r5
   15b4c:	andeq	r4, r0, r0, lsr r6
   15b50:	andeq	sl, r1, r4, ror #9
   15b54:	ldr	r3, [pc, #280]	; 15c74 <sprintf@plt+0x46cc>
   15b58:	add	r3, pc, r3
   15b5c:	ldr	r3, [r3]
   15b60:	cmp	r3, #0
   15b64:	bxeq	lr
   15b68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b6c:	ldr	r4, [r3]
   15b70:	ldr	r5, [r3, #8]
   15b74:	strd	r6, [sp, #8]
   15b78:	ldr	r7, [pc, #248]	; 15c78 <sprintf@plt+0x46d0>
   15b7c:	str	r8, [sp, #16]
   15b80:	ldr	r3, [r4, #788]	; 0x314
   15b84:	str	lr, [sp, #20]
   15b88:	ldr	r6, [pc, #236]	; 15c7c <sprintf@plt+0x46d4>
   15b8c:	add	r7, pc, r7
   15b90:	ldr	r8, [pc, #232]	; 15c80 <sprintf@plt+0x46d8>
   15b94:	cmp	r3, #0
   15b98:	add	r6, pc, r6
   15b9c:	add	r8, pc, r8
   15ba0:	ble	15bcc <sprintf@plt+0x4624>
   15ba4:	mov	r3, #1
   15ba8:	cmp	r5, #0
   15bac:	strb	r3, [r4, #784]	; 0x310
   15bb0:	beq	15c00 <sprintf@plt+0x4658>
   15bb4:	mov	r3, r5
   15bb8:	ldr	r5, [r5, #8]
   15bbc:	ldr	r4, [r3]
   15bc0:	ldr	r3, [r4, #788]	; 0x314
   15bc4:	cmp	r3, #0
   15bc8:	bgt	15ba4 <sprintf@plt+0x45fc>
   15bcc:	ldr	r3, [r7]
   15bd0:	cmp	r3, #0
   15bd4:	beq	15bf0 <sprintf@plt+0x4648>
   15bd8:	ldr	r2, [r3]
   15bdc:	cmp	r4, r2
   15be0:	beq	15c14 <sprintf@plt+0x466c>
   15be4:	ldr	r3, [r3, #8]
   15be8:	cmp	r3, #0
   15bec:	bne	15bd8 <sprintf@plt+0x4630>
   15bf0:	mov	r0, r4
   15bf4:	bl	11380 <free@plt>
   15bf8:	cmp	r5, #0
   15bfc:	bne	15bb4 <sprintf@plt+0x460c>
   15c00:	ldrd	r4, [sp]
   15c04:	ldrd	r6, [sp, #8]
   15c08:	ldr	r8, [sp, #16]
   15c0c:	add	sp, sp, #20
   15c10:	pop	{pc}		; (ldr pc, [sp], #4)
   15c14:	ldr	r2, [r3, #4]
   15c18:	ldr	r1, [r3, #8]
   15c1c:	cmp	r1, #0
   15c20:	beq	15c64 <sprintf@plt+0x46bc>
   15c24:	str	r2, [r1, #4]
   15c28:	ldr	r2, [r3, #4]
   15c2c:	cmp	r2, #0
   15c30:	mov	r0, r3
   15c34:	strne	r1, [r2, #8]
   15c38:	ldr	r2, [r6, #8]
   15c3c:	streq	r1, [r8]
   15c40:	mov	r1, #0
   15c44:	str	r1, [r3, #4]
   15c48:	str	r1, [r3, #8]
   15c4c:	sub	r3, r2, #1
   15c50:	str	r3, [r6, #8]
   15c54:	bl	11404 <rb_free_rb_dlink_node@plt>
   15c58:	mov	r0, r4
   15c5c:	bl	11380 <free@plt>
   15c60:	b	15bf8 <sprintf@plt+0x4650>
   15c64:	ldr	r0, [pc, #24]	; 15c84 <sprintf@plt+0x46dc>
   15c68:	add	r0, pc, r0
   15c6c:	str	r2, [r0, #4]
   15c70:	b	15c2c <sprintf@plt+0x4684>
   15c74:	andeq	sl, r1, r0, asr #9
   15c78:	andeq	sl, r1, ip, lsl #9
   15c7c:	andeq	sl, r1, r0, lsl #9
   15c80:	andeq	sl, r1, ip, ror r4
   15c84:			; <UNDEFINED> instruction: 0x0001a3b0
   15c88:	b	15b54 <sprintf@plt+0x45ac>
   15c8c:	strd	r4, [sp, #-16]!
   15c90:	mov	r5, r0
   15c94:	ldr	r0, [r0, #772]	; 0x304
   15c98:	str	r6, [sp, #8]
   15c9c:	str	lr, [sp, #12]
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cf8 <sprintf@plt+0x4750>
   15ca8:	ldr	r4, [r0, #8]
   15cac:	mov	r6, r4
   15cb0:	ldr	r3, [r0, #4]
   15cb4:	cmp	r4, #0
   15cb8:	strne	r3, [r4, #4]
   15cbc:	ldrne	r3, [r0, #4]
   15cc0:	streq	r3, [r5, #776]	; 0x308
   15cc4:	cmp	r3, #0
   15cc8:	strne	r4, [r3, #8]
   15ccc:	ldr	r3, [r5, #780]	; 0x30c
   15cd0:	streq	r4, [r5, #772]	; 0x304
   15cd4:	sub	r3, r3, #1
   15cd8:	str	r3, [r5, #780]	; 0x30c
   15cdc:	bl	11380 <free@plt>
   15ce0:	cmp	r4, #0
   15ce4:	mov	r0, r6
   15ce8:	beq	15cf8 <sprintf@plt+0x4750>
   15cec:	ldr	r4, [r4, #8]
   15cf0:	mov	r6, r4
   15cf4:	b	15cb0 <sprintf@plt+0x4708>
   15cf8:	ldr	r3, [pc, #180]	; 15db4 <sprintf@plt+0x480c>
   15cfc:	add	r3, pc, r3
   15d00:	ldr	r3, [r3]
   15d04:	cmp	r3, #0
   15d08:	beq	15d24 <sprintf@plt+0x477c>
   15d0c:	ldr	r2, [r3]
   15d10:	cmp	r5, r2
   15d14:	beq	15d3c <sprintf@plt+0x4794>
   15d18:	ldr	r3, [r3, #8]
   15d1c:	cmp	r3, #0
   15d20:	bne	15d0c <sprintf@plt+0x4764>
   15d24:	mov	r0, r5
   15d28:	ldrd	r4, [sp]
   15d2c:	ldr	r6, [sp, #8]
   15d30:	ldr	lr, [sp, #12]
   15d34:	add	sp, sp, #16
   15d38:	b	11380 <free@plt>
   15d3c:	ldr	r2, [r3, #4]
   15d40:	ldr	r1, [r3, #8]
   15d44:	cmp	r1, #0
   15d48:	beq	15d8c <sprintf@plt+0x47e4>
   15d4c:	str	r2, [r1, #4]
   15d50:	ldr	r2, [r3, #4]
   15d54:	cmp	r2, #0
   15d58:	strne	r1, [r2, #8]
   15d5c:	beq	15da4 <sprintf@plt+0x47fc>
   15d60:	ldr	r2, [pc, #80]	; 15db8 <sprintf@plt+0x4810>
   15d64:	mov	r1, #0
   15d68:	mov	r0, r3
   15d6c:	str	r1, [r3, #4]
   15d70:	str	r1, [r3, #8]
   15d74:	add	r2, pc, r2
   15d78:	ldr	r3, [r2, #8]
   15d7c:	sub	r3, r3, #1
   15d80:	str	r3, [r2, #8]
   15d84:	bl	11404 <rb_free_rb_dlink_node@plt>
   15d88:	b	15d24 <sprintf@plt+0x477c>
   15d8c:	ldr	r0, [pc, #40]	; 15dbc <sprintf@plt+0x4814>
   15d90:	cmp	r2, #0
   15d94:	strne	r1, [r2, #8]
   15d98:	add	r0, pc, r0
   15d9c:	str	r2, [r0, #4]
   15da0:	bne	15d60 <sprintf@plt+0x47b8>
   15da4:	ldr	r2, [pc, #20]	; 15dc0 <sprintf@plt+0x4818>
   15da8:	add	r2, pc, r2
   15dac:	str	r1, [r2]
   15db0:	b	15d60 <sprintf@plt+0x47b8>
   15db4:	andeq	sl, r1, ip, lsl r3
   15db8:	andeq	sl, r1, r4, lsr #5
   15dbc:	andeq	sl, r1, r0, lsl #5
   15dc0:	andeq	sl, r1, r0, ror r2
   15dc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15dc8:	ldr	r4, [r2, #8]
   15dcc:	strd	r6, [sp, #8]
   15dd0:	strd	r8, [sp, #16]
   15dd4:	strd	sl, [sp, #24]
   15dd8:	str	lr, [sp, #32]
   15ddc:	sub	sp, sp, #36	; 0x24
   15de0:	mov	r0, r4
   15de4:	str	r2, [sp, #20]
   15de8:	bl	113d4 <strlen@plt>
   15dec:	add	r5, r0, #1
   15df0:	mov	r0, r5
   15df4:	bl	114ac <malloc@plt>
   15df8:	subs	r3, r0, #0
   15dfc:	str	r3, [sp, #16]
   15e00:	beq	16018 <sprintf@plt+0x4a70>
   15e04:	mov	r2, r5
   15e08:	mov	r1, r4
   15e0c:	bl	113f8 <memcpy@plt>
   15e10:	ldr	r0, [sp, #16]
   15e14:	ldrb	r3, [r0]
   15e18:	cmp	r3, #42	; 0x2a
   15e1c:	beq	1601c <sprintf@plt+0x4a74>
   15e20:	ldr	r1, [pc, #788]	; 1613c <sprintf@plt+0x4b94>
   15e24:	add	r3, sp, #28
   15e28:	mov	r2, r3
   15e2c:	str	r3, [sp, #4]
   15e30:	add	r1, pc, r1
   15e34:	bl	112c0 <rb_strtok_r@plt>
   15e38:	subs	r7, r0, #0
   15e3c:	beq	1601c <sprintf@plt+0x4a74>
   15e40:	ldr	r3, [pc, #760]	; 16140 <sprintf@plt+0x4b98>
   15e44:	mov	r9, #0
   15e48:	mov	r8, r9
   15e4c:	str	r9, [sp, #12]
   15e50:	add	r3, pc, r3
   15e54:	str	r3, [sp, #8]
   15e58:	mov	r1, #72	; 0x48
   15e5c:	mov	r0, #1
   15e60:	bl	112f0 <calloc@plt>
   15e64:	subs	r6, r0, #0
   15e68:	beq	16018 <sprintf@plt+0x4a70>
   15e6c:	ldrb	sl, [r7]
   15e70:	cmp	sl, #0
   15e74:	beq	1602c <sprintf@plt+0x4a84>
   15e78:	mov	fp, r7
   15e7c:	mov	r5, #2
   15e80:	mov	r4, #0
   15e84:	b	15eac <sprintf@plt+0x4904>
   15e88:	bl	11488 <__ctype_b_loc@plt>
   15e8c:	ldr	r2, [r0]
   15e90:	lsl	r3, sl, #1
   15e94:	ldrh	r3, [r2, r3]
   15e98:	tst	r3, #2048	; 0x800
   15e9c:	beq	160a4 <sprintf@plt+0x4afc>
   15ea0:	ldrb	sl, [fp, #1]!
   15ea4:	cmp	sl, #0
   15ea8:	beq	15ed0 <sprintf@plt+0x4928>
   15eac:	cmp	sl, #46	; 0x2e
   15eb0:	bne	15e88 <sprintf@plt+0x48e0>
   15eb4:	add	r4, r4, #1
   15eb8:	cmp	r4, #3
   15ebc:	bgt	160d8 <sprintf@plt+0x4b30>
   15ec0:	ldrb	sl, [fp, #1]!
   15ec4:	mov	r5, #1
   15ec8:	cmp	sl, #0
   15ecc:	bne	15eac <sprintf@plt+0x4904>
   15ed0:	sub	r4, r4, #1
   15ed4:	cmp	r4, #1
   15ed8:	bls	160c0 <sprintf@plt+0x4b18>
   15edc:	mov	r0, r6
   15ee0:	mov	r1, r7
   15ee4:	mov	r2, #53	; 0x35
   15ee8:	add	r4, r6, #60	; 0x3c
   15eec:	str	r5, [r0], #4
   15ef0:	bl	1135c <rb_strlcpy@plt>
   15ef4:	mov	r3, #0
   15ef8:	str	r6, [r6, #60]	; 0x3c
   15efc:	cmp	r8, r3
   15f00:	str	r3, [r6, #64]	; 0x40
   15f04:	str	r8, [r6, #68]	; 0x44
   15f08:	strne	r4, [r8, #4]
   15f0c:	beq	16004 <sprintf@plt+0x4a5c>
   15f10:	mov	r0, #0
   15f14:	ldr	r2, [sp, #4]
   15f18:	add	r9, r9, #1
   15f1c:	mov	r8, r4
   15f20:	ldr	r1, [sp, #8]
   15f24:	bl	112c0 <rb_strtok_r@plt>
   15f28:	subs	r7, r0, #0
   15f2c:	bne	15e58 <sprintf@plt+0x48b0>
   15f30:	ldr	r0, [sp, #16]
   15f34:	bl	11380 <free@plt>
   15f38:	ldr	r5, [sp, #20]
   15f3c:	mov	r2, #10
   15f40:	mov	r1, #0
   15f44:	ldr	r0, [r5, #4]
   15f48:	bl	1141c <strtol@plt>
   15f4c:	ldr	r7, [r5]
   15f50:	ldr	r8, [r5, #12]
   15f54:	cmp	r7, #0
   15f58:	clz	r3, r8
   15f5c:	lsr	r3, r3, #5
   15f60:	moveq	r3, #1
   15f64:	ands	fp, r0, #3
   15f68:	moveq	r6, #1
   15f6c:	movne	r6, r3
   15f70:	cmp	r6, #0
   15f74:	bne	160f0 <sprintf@plt+0x4b48>
   15f78:	mov	r0, r7
   15f7c:	bl	15950 <sprintf@plt+0x43a8>
   15f80:	subs	r5, r0, #0
   15f84:	strbne	r6, [r5, #784]	; 0x310
   15f88:	beq	16048 <sprintf@plt+0x4aa0>
   15f8c:	mov	r1, r7
   15f90:	mov	r2, #256	; 0x100
   15f94:	mov	r0, r5
   15f98:	bl	1135c <rb_strlcpy@plt>
   15f9c:	mov	r1, r8
   15fa0:	mov	r2, #512	; 0x200
   15fa4:	add	r0, r5, #256	; 0x100
   15fa8:	bl	1135c <rb_strlcpy@plt>
   15fac:	cmp	r4, #0
   15fb0:	strb	fp, [r5, #768]	; 0x300
   15fb4:	beq	15fe0 <sprintf@plt+0x4a38>
   15fb8:	ldr	r2, [r5, #772]	; 0x304
   15fbc:	cmp	r2, #0
   15fc0:	beq	16034 <sprintf@plt+0x4a8c>
   15fc4:	ldr	r3, [r5, #780]	; 0x30c
   15fc8:	ldr	r1, [sp, #12]
   15fcc:	add	r9, r3, r9
   15fd0:	str	r2, [r1, #8]
   15fd4:	str	r1, [r2, #4]
   15fd8:	str	r4, [r5, #772]	; 0x304
   15fdc:	str	r9, [r5, #780]	; 0x30c
   15fe0:	mov	r3, #0
   15fe4:	str	r3, [r5, #796]	; 0x31c
   15fe8:	add	sp, sp, #36	; 0x24
   15fec:	ldrd	r4, [sp]
   15ff0:	ldrd	r6, [sp, #8]
   15ff4:	ldrd	r8, [sp, #16]
   15ff8:	ldrd	sl, [sp, #24]
   15ffc:	add	sp, sp, #32
   16000:	pop	{pc}		; (ldr pc, [sp], #4)
   16004:	ldr	r2, [sp, #12]
   16008:	subs	r3, r2, #0
   1600c:	moveq	r3, r4
   16010:	str	r3, [sp, #12]
   16014:	b	15f10 <sprintf@plt+0x4968>
   16018:	bl	1147c <rb_outofmemory@plt>
   1601c:	mov	r9, #0
   16020:	mov	r4, r9
   16024:	str	r9, [sp, #12]
   16028:	b	15f30 <sprintf@plt+0x4988>
   1602c:	mov	r5, #2
   16030:	b	15edc <sprintf@plt+0x4934>
   16034:	ldr	r3, [sp, #12]
   16038:	str	r4, [r5, #772]	; 0x304
   1603c:	str	r3, [r5, #776]	; 0x308
   16040:	str	r9, [r5, #780]	; 0x30c
   16044:	b	15fe0 <sprintf@plt+0x4a38>
   16048:	mov	r1, #800	; 0x320
   1604c:	mov	r0, #1
   16050:	bl	112f0 <calloc@plt>
   16054:	subs	r5, r0, #0
   16058:	beq	16018 <sprintf@plt+0x4a70>
   1605c:	bl	11530 <rb_make_rb_dlink_node@plt>
   16060:	cmp	r0, #0
   16064:	beq	16118 <sprintf@plt+0x4b70>
   16068:	ldr	r3, [pc, #212]	; 16144 <sprintf@plt+0x4b9c>
   1606c:	add	r3, pc, r3
   16070:	ldr	r2, [r3]
   16074:	stm	r0, {r5, r6}
   16078:	cmp	r2, #0
   1607c:	str	r2, [r0, #8]
   16080:	strne	r0, [r2, #4]
   16084:	beq	16108 <sprintf@plt+0x4b60>
   16088:	ldr	r3, [pc, #184]	; 16148 <sprintf@plt+0x4ba0>
   1608c:	add	r3, pc, r3
   16090:	ldr	r2, [r3, #8]
   16094:	str	r0, [r3]
   16098:	add	r2, r2, #1
   1609c:	str	r2, [r3, #8]
   160a0:	b	15f8c <sprintf@plt+0x49e4>
   160a4:	ldr	r1, [pc, #160]	; 1614c <sprintf@plt+0x4ba4>
   160a8:	mov	r0, #67	; 0x43
   160ac:	mov	r2, sl
   160b0:	add	r1, pc, r1
   160b4:	bl	123a0 <sprintf@plt+0xdf8>
   160b8:	mov	r0, #3
   160bc:	bl	11590 <exit@plt>
   160c0:	ldr	r1, [pc, #136]	; 16150 <sprintf@plt+0x4ba8>
   160c4:	mov	r0, #67	; 0x43
   160c8:	add	r1, pc, r1
   160cc:	bl	123a0 <sprintf@plt+0xdf8>
   160d0:	mov	r0, #3
   160d4:	bl	11590 <exit@plt>
   160d8:	ldr	r1, [pc, #116]	; 16154 <sprintf@plt+0x4bac>
   160dc:	mov	r0, #67	; 0x43
   160e0:	add	r1, pc, r1
   160e4:	bl	123a0 <sprintf@plt+0xdf8>
   160e8:	mov	r0, #3
   160ec:	bl	11590 <exit@plt>
   160f0:	ldr	r1, [pc, #96]	; 16158 <sprintf@plt+0x4bb0>
   160f4:	mov	r0, #67	; 0x43
   160f8:	add	r1, pc, r1
   160fc:	bl	123a0 <sprintf@plt+0xdf8>
   16100:	mov	r0, #3
   16104:	bl	11590 <exit@plt>
   16108:	ldr	r2, [r3, #4]
   1610c:	cmp	r2, #0
   16110:	streq	r0, [r3, #4]
   16114:	b	16088 <sprintf@plt+0x4ae0>
   16118:	ldr	r3, [pc, #60]	; 1615c <sprintf@plt+0x4bb4>
   1611c:	mov	r2, #144	; 0x90
   16120:	ldr	r1, [pc, #56]	; 16160 <sprintf@plt+0x4bb8>
   16124:	ldr	r0, [pc, #56]	; 16164 <sprintf@plt+0x4bbc>
   16128:	add	r3, pc, r3
   1612c:	add	r3, r3, #36	; 0x24
   16130:	add	r1, pc, r1
   16134:	add	r0, pc, r0
   16138:	bl	11350 <__assert_fail@plt>
   1613c:	andeq	r4, r0, ip, asr #6
   16140:	andeq	r4, r0, ip, lsr #6
   16144:	andeq	r9, r1, ip, lsr #31
   16148:	andeq	r9, r1, ip, lsl #31
   1614c:	andeq	r4, r0, ip, lsl #2
   16150:	andeq	r4, r0, r4, asr #2
   16154:	andeq	r4, r0, r0, lsr #1
   16158:	andeq	r4, r0, r4, asr r1
   1615c:	andeq	r3, r0, r0, asr #31
   16160:	muleq	r0, r8, fp
   16164:	andeq	r3, r0, r0, asr #23
   16168:	ldr	r2, [pc, #896]	; 164f0 <sprintf@plt+0x4f48>
   1616c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16170:	ldr	ip, [pc, #892]	; 164f4 <sprintf@plt+0x4f4c>
   16174:	strd	r6, [sp, #8]
   16178:	strd	r8, [sp, #16]
   1617c:	add	r2, pc, r2
   16180:	strd	sl, [sp, #24]
   16184:	str	lr, [sp, #32]
   16188:	sub	sp, sp, #12
   1618c:	ldr	r2, [r2, ip]
   16190:	ldr	r6, [r3, #4]
   16194:	str	r2, [sp, #4]
   16198:	ldr	r9, [r2, #12]
   1619c:	ldr	r2, [r6, #464]	; 0x1d0
   161a0:	add	r2, r2, r9, lsl #4
   161a4:	ldr	r5, [r2, #8]
   161a8:	cmp	r5, #0
   161ac:	beq	16240 <sprintf@plt+0x4c98>
   161b0:	cmp	r0, #0
   161b4:	moveq	r1, #0
   161b8:	andne	r1, r1, #1
   161bc:	mov	r7, r0
   161c0:	ldr	sl, [r3]
   161c4:	cmp	r1, #0
   161c8:	mov	r4, r3
   161cc:	bne	1625c <sprintf@plt+0x4cb4>
   161d0:	ldr	r3, [sl, #788]	; 0x314
   161d4:	ldrb	r2, [sl, #784]	; 0x310
   161d8:	sub	r3, r3, #1
   161dc:	cmp	r3, #0
   161e0:	movgt	r2, #0
   161e4:	andle	r2, r2, #1
   161e8:	str	r3, [sl, #788]	; 0x314
   161ec:	cmp	r2, #0
   161f0:	bne	163e0 <sprintf@plt+0x4e38>
   161f4:	ldr	r0, [r4, #8]
   161f8:	bl	12018 <sprintf@plt+0xa70>
   161fc:	ldr	r3, [r4, #20]
   16200:	cmp	r3, #0
   16204:	beq	16354 <sprintf@plt+0x4dac>
   16208:	ldr	r2, [r4, #16]
   1620c:	str	r2, [r3, #4]
   16210:	ldr	r2, [r4, #16]
   16214:	cmp	r2, #0
   16218:	mov	r0, r4
   1621c:	strne	r3, [r2, #8]
   16220:	streq	r3, [r5, #4]
   16224:	ldr	r3, [r5, #12]
   16228:	sub	r3, r3, #1
   1622c:	str	r3, [r5, #12]
   16230:	bl	11380 <free@plt>
   16234:	ldr	r4, [r5, #12]
   16238:	cmp	r4, #0
   1623c:	beq	162d8 <sprintf@plt+0x4d30>
   16240:	add	sp, sp, #12
   16244:	ldrd	r4, [sp]
   16248:	ldrd	r6, [sp, #8]
   1624c:	ldrd	r8, [sp, #16]
   16250:	ldrd	sl, [sp, #24]
   16254:	add	sp, sp, #32
   16258:	pop	{pc}		; (ldr pc, [sp], #4)
   1625c:	ldr	r3, [sl, #780]	; 0x30c
   16260:	cmp	r3, #0
   16264:	beq	16360 <sprintf@plt+0x4db8>
   16268:	mov	r1, #46	; 0x2e
   1626c:	bl	11338 <strrchr@plt>
   16270:	cmp	r0, #0
   16274:	beq	163ec <sprintf@plt+0x4e44>
   16278:	ldrb	r3, [r0, #1]
   1627c:	cmp	r3, #0
   16280:	beq	163ec <sprintf@plt+0x4e44>
   16284:	ldr	r8, [sl, #772]	; 0x304
   16288:	cmp	r8, #0
   1628c:	beq	161d0 <sprintf@plt+0x4c28>
   16290:	add	fp, r0, #1
   16294:	b	162c0 <sprintf@plt+0x4d18>
   16298:	cmp	r3, #2
   1629c:	bne	164d4 <sprintf@plt+0x4f2c>
   162a0:	mov	r0, fp
   162a4:	add	r1, r1, #4
   162a8:	bl	11584 <strcmp@plt>
   162ac:	cmp	r0, #0
   162b0:	beq	16360 <sprintf@plt+0x4db8>
   162b4:	ldr	r8, [r8, #8]
   162b8:	cmp	r8, #0
   162bc:	beq	161d0 <sprintf@plt+0x4c28>
   162c0:	ldr	r1, [r8]
   162c4:	ldr	r3, [r1]
   162c8:	cmp	r3, #1
   162cc:	bne	16298 <sprintf@plt+0x4cf0>
   162d0:	mov	r0, r7
   162d4:	b	162a4 <sprintf@plt+0x4cfc>
   162d8:	ldr	r1, [pc, #536]	; 164f8 <sprintf@plt+0x4f50>
   162dc:	ldr	r0, [r6]
   162e0:	add	r1, pc, r1
   162e4:	bl	12320 <sprintf@plt+0xd78>
   162e8:	mov	r0, r5
   162ec:	bl	11380 <free@plt>
   162f0:	ldr	r3, [sp, #4]
   162f4:	mov	r0, r6
   162f8:	ldr	r2, [r6, #464]	; 0x1d0
   162fc:	ldr	r1, [r3, #12]
   16300:	lsl	ip, r1, #4
   16304:	add	r2, r2, ip
   16308:	str	r4, [r2, #8]
   1630c:	ldr	r3, [r6, #464]	; 0x1d0
   16310:	add	r3, r3, ip
   16314:	str	r4, [r3, #4]
   16318:	bl	12f14 <sprintf@plt+0x196c>
   1631c:	ldr	r3, [r6, #460]	; 0x1cc
   16320:	sub	r3, r3, #1
   16324:	cmp	r3, #0
   16328:	str	r3, [r6, #460]	; 0x1cc
   1632c:	bne	16240 <sprintf@plt+0x4c98>
   16330:	mov	r0, r6
   16334:	add	sp, sp, #12
   16338:	ldrd	r4, [sp]
   1633c:	ldrd	r6, [sp, #8]
   16340:	ldrd	r8, [sp, #16]
   16344:	ldrd	sl, [sp, #24]
   16348:	ldr	lr, [sp, #32]
   1634c:	add	sp, sp, #36	; 0x24
   16350:	b	129b8 <sprintf@plt+0x1410>
   16354:	ldr	r2, [r4, #16]
   16358:	str	r2, [r5, #8]
   1635c:	b	16214 <sprintf@plt+0x4c6c>
   16360:	ldr	ip, [sl, #792]	; 0x318
   16364:	add	r3, sl, #256	; 0x100
   16368:	mov	r2, sl
   1636c:	mov	r1, r9
   16370:	mov	r0, r6
   16374:	add	ip, ip, #1
   16378:	str	ip, [sl, #792]	; 0x318
   1637c:	bl	12bcc <sprintf@plt+0x1624>
   16380:	ldr	r3, [sp, #4]
   16384:	ldr	r2, [r3, #12]
   16388:	ldr	r3, [r6, #464]	; 0x1d0
   1638c:	add	r3, r3, r2, lsl #4
   16390:	ldr	r5, [r3, #8]
   16394:	cmp	r5, #0
   16398:	beq	16240 <sprintf@plt+0x4c98>
   1639c:	ldr	r3, [r5, #12]
   163a0:	cmp	r3, #0
   163a4:	bne	16424 <sprintf@plt+0x4e7c>
   163a8:	mov	r0, r5
   163ac:	bl	11380 <free@plt>
   163b0:	ldr	r3, [sp, #4]
   163b4:	mov	ip, #0
   163b8:	mov	r0, r6
   163bc:	ldr	r2, [r6, #464]	; 0x1d0
   163c0:	ldr	r1, [r3, #12]
   163c4:	lsl	lr, r1, #4
   163c8:	add	r2, r2, lr
   163cc:	str	ip, [r2, #8]
   163d0:	ldr	r3, [r6, #464]	; 0x1d0
   163d4:	add	r3, r3, lr
   163d8:	str	ip, [r3, #4]
   163dc:	b	16318 <sprintf@plt+0x4d70>
   163e0:	mov	r0, sl
   163e4:	bl	15c8c <sprintf@plt+0x46e4>
   163e8:	b	161f4 <sprintf@plt+0x4c4c>
   163ec:	ldr	r9, [sl, #796]	; 0x31c
   163f0:	bl	113e0 <rb_current_time@plt>
   163f4:	add	r9, r9, #3600	; 0xe10
   163f8:	cmp	r9, r0
   163fc:	bge	161d0 <sprintf@plt+0x4c28>
   16400:	ldr	r1, [pc, #244]	; 164fc <sprintf@plt+0x4f54>
   16404:	mov	r3, r7
   16408:	mov	r2, sl
   1640c:	mov	r0, #87	; 0x57
   16410:	add	r1, pc, r1
   16414:	bl	123a0 <sprintf@plt+0xdf8>
   16418:	bl	113e0 <rb_current_time@plt>
   1641c:	str	r0, [sl, #796]	; 0x31c
   16420:	b	161d0 <sprintf@plt+0x4c28>
   16424:	ldr	r1, [pc, #212]	; 16500 <sprintf@plt+0x4f58>
   16428:	ldr	r0, [r6]
   1642c:	add	r1, pc, r1
   16430:	bl	12320 <sprintf@plt+0xd78>
   16434:	ldr	r3, [r5, #4]
   16438:	cmp	r3, #0
   1643c:	beq	163a8 <sprintf@plt+0x4e00>
   16440:	ldr	r7, [r3, #8]
   16444:	ldr	r4, [r3]
   16448:	ldr	r0, [r4, #8]
   1644c:	bl	12018 <sprintf@plt+0xa70>
   16450:	ldr	r0, [r4]
   16454:	ldr	r3, [r0, #788]	; 0x314
   16458:	ldrb	r2, [r0, #784]	; 0x310
   1645c:	sub	r3, r3, #1
   16460:	cmp	r3, #0
   16464:	movgt	r2, #0
   16468:	andle	r2, r2, #1
   1646c:	str	r3, [r0, #788]	; 0x314
   16470:	cmp	r2, #0
   16474:	bne	164cc <sprintf@plt+0x4f24>
   16478:	ldr	r3, [r4, #16]
   1647c:	ldr	r2, [r4, #20]
   16480:	cmp	r2, #0
   16484:	beq	164c4 <sprintf@plt+0x4f1c>
   16488:	str	r3, [r2, #4]
   1648c:	ldr	r3, [r4, #16]
   16490:	cmp	r3, #0
   16494:	mov	r0, r4
   16498:	strne	r2, [r3, #8]
   1649c:	ldr	r3, [r5, #12]
   164a0:	streq	r2, [r5, #4]
   164a4:	sub	r3, r3, #1
   164a8:	str	r3, [r5, #12]
   164ac:	bl	11380 <free@plt>
   164b0:	cmp	r7, #0
   164b4:	beq	163a8 <sprintf@plt+0x4e00>
   164b8:	mov	r3, r7
   164bc:	ldr	r7, [r7, #8]
   164c0:	b	16444 <sprintf@plt+0x4e9c>
   164c4:	str	r3, [r5, #8]
   164c8:	b	16490 <sprintf@plt+0x4ee8>
   164cc:	bl	15c8c <sprintf@plt+0x46e4>
   164d0:	b	16478 <sprintf@plt+0x4ed0>
   164d4:	ldr	r1, [pc, #40]	; 16504 <sprintf@plt+0x4f5c>
   164d8:	mov	r0, #67	; 0x43
   164dc:	mov	r2, sl
   164e0:	add	r1, pc, r1
   164e4:	bl	123a0 <sprintf@plt+0xdf8>
   164e8:	mov	r0, #3
   164ec:	bl	11590 <exit@plt>
   164f0:	andeq	r4, r1, ip, ror lr
   164f4:	andeq	r0, r0, r4, lsl #3
   164f8:	andeq	r4, r0, r8, lsr #32
   164fc:	muleq	r0, ip, lr
   16500:	andeq	r3, r0, r0, asr #29
   16504:	muleq	r0, ip, sp
   16508:	strd	r4, [sp, #-20]!	; 0xffffffec
   1650c:	mov	r5, r0
   16510:	mov	r0, #1
   16514:	strd	r6, [sp, #8]
   16518:	mov	r7, r1
   1651c:	mov	r1, #24
   16520:	ldr	r6, [pc, #316]	; 16664 <sprintf@plt+0x50bc>
   16524:	str	lr, [sp, #16]
   16528:	sub	sp, sp, #260	; 0x104
   1652c:	bl	112f0 <calloc@plt>
   16530:	subs	r4, r0, #0
   16534:	add	r6, pc, r6
   16538:	beq	1663c <sprintf@plt+0x5094>
   1653c:	ldr	r2, [pc, #292]	; 16668 <sprintf@plt+0x50c0>
   16540:	ldr	r3, [r7, #464]	; 0x1d0
   16544:	ldr	r1, [r6, r2]
   16548:	ldrh	r2, [r7, #248]	; 0xf8
   1654c:	ldr	r1, [r1, #12]
   16550:	cmp	r2, #2
   16554:	add	r3, r3, r1, lsl #4
   16558:	ldr	r6, [r3, #8]
   1655c:	stm	r4, {r5, r7}
   16560:	beq	16604 <sprintf@plt+0x505c>
   16564:	cmp	r2, #10
   16568:	bne	16578 <sprintf@plt+0x4fd0>
   1656c:	ldrb	r3, [r5, #768]	; 0x300
   16570:	tst	r3, #2
   16574:	beq	16610 <sprintf@plt+0x5068>
   16578:	add	r2, r7, #248	; 0xf8
   1657c:	mov	r7, sp
   16580:	mov	r0, r7
   16584:	mov	r3, r5
   16588:	mov	r1, #256	; 0x100
   1658c:	bl	13b08 <sprintf@plt+0x2560>
   16590:	ldr	r2, [pc, #212]	; 1666c <sprintf@plt+0x50c4>
   16594:	mov	r1, #2
   16598:	mov	r3, r4
   1659c:	mov	r0, r7
   165a0:	add	r2, pc, r2
   165a4:	bl	11e34 <sprintf@plt+0x88c>
   165a8:	cmn	r6, #4
   165ac:	add	r1, r4, #12
   165b0:	str	r0, [r4, #8]
   165b4:	beq	16640 <sprintf@plt+0x5098>
   165b8:	ldr	r3, [r6, #4]
   165bc:	mov	r2, #0
   165c0:	str	r4, [r4, #12]
   165c4:	cmp	r3, r2
   165c8:	strd	r2, [r4, #16]
   165cc:	strne	r1, [r3, #4]
   165d0:	beq	1662c <sprintf@plt+0x5084>
   165d4:	ldr	r2, [r6, #12]
   165d8:	ldr	r3, [r5, #788]	; 0x314
   165dc:	str	r1, [r6, #4]
   165e0:	add	r2, r2, #1
   165e4:	add	r3, r3, #1
   165e8:	str	r2, [r6, #12]
   165ec:	str	r3, [r5, #788]	; 0x314
   165f0:	add	sp, sp, #260	; 0x104
   165f4:	ldrd	r4, [sp]
   165f8:	ldrd	r6, [sp, #8]
   165fc:	add	sp, sp, #16
   16600:	pop	{pc}		; (ldr pc, [sp], #4)
   16604:	ldrb	r3, [r5, #768]	; 0x300
   16608:	tst	r3, #1
   1660c:	bne	16578 <sprintf@plt+0x4fd0>
   16610:	mov	r0, r4
   16614:	add	sp, sp, #260	; 0x104
   16618:	ldrd	r4, [sp]
   1661c:	ldrd	r6, [sp, #8]
   16620:	ldr	lr, [sp, #16]
   16624:	add	sp, sp, #20
   16628:	b	11380 <free@plt>
   1662c:	ldr	r3, [r6, #8]
   16630:	cmp	r3, #0
   16634:	streq	r1, [r6, #8]
   16638:	b	165d4 <sprintf@plt+0x502c>
   1663c:	bl	1147c <rb_outofmemory@plt>
   16640:	ldr	r3, [pc, #40]	; 16670 <sprintf@plt+0x50c8>
   16644:	mov	r2, #145	; 0x91
   16648:	ldr	r1, [pc, #36]	; 16674 <sprintf@plt+0x50cc>
   1664c:	ldr	r0, [pc, #36]	; 16678 <sprintf@plt+0x50d0>
   16650:	add	r3, pc, r3
   16654:	add	r3, r3, #36	; 0x24
   16658:	add	r1, pc, r1
   1665c:	add	r0, pc, r0
   16660:	bl	11350 <__assert_fail@plt>
   16664:	andeq	r4, r1, r4, asr #21
   16668:	andeq	r0, r0, r4, lsl #3
   1666c:			; <UNDEFINED> instruction: 0xfffffbc0
   16670:	muleq	r0, r8, sl
   16674:	andeq	r3, r0, r0, ror r6
   16678:	andeq	r3, r0, r4, ror #21
   1667c:	ldr	r2, [pc, #440]	; 1683c <sprintf@plt+0x5294>
   16680:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16684:	ldr	r3, [pc, #436]	; 16840 <sprintf@plt+0x5298>
   16688:	strd	sl, [sp, #24]
   1668c:	ldr	sl, [pc, #432]	; 16844 <sprintf@plt+0x529c>
   16690:	add	r2, pc, r2
   16694:	strd	r6, [sp, #8]
   16698:	mov	r7, #0
   1669c:	strd	r8, [sp, #16]
   166a0:	str	lr, [sp, #32]
   166a4:	sub	sp, sp, #20
   166a8:	add	r9, sp, #8
   166ac:	add	sl, pc, sl
   166b0:	str	r2, [sp, #4]
   166b4:	mov	r1, r9
   166b8:	ldr	r3, [sl, r3]
   166bc:	ldr	r0, [r3]
   166c0:	str	r3, [sp]
   166c4:	bl	113bc <rb_dictionary_foreach_start@plt>
   166c8:	b	166dc <sprintf@plt+0x5134>
   166cc:	ldr	r3, [sp]
   166d0:	mov	r1, r9
   166d4:	ldr	r0, [r3]
   166d8:	bl	11374 <rb_dictionary_foreach_next@plt>
   166dc:	ldr	r3, [sp]
   166e0:	mov	r1, r9
   166e4:	ldr	r0, [r3]
   166e8:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   166ec:	subs	r4, r0, #0
   166f0:	beq	1681c <sprintf@plt+0x5274>
   166f4:	ldr	r2, [pc, #332]	; 16848 <sprintf@plt+0x52a0>
   166f8:	ldr	r3, [r4, #464]	; 0x1d0
   166fc:	ldr	r6, [sl, r2]
   16700:	ldr	r2, [r6, #12]
   16704:	add	r3, r3, r2, lsl #4
   16708:	ldr	fp, [r3, #8]
   1670c:	cmp	fp, #0
   16710:	beq	166cc <sprintf@plt+0x5124>
   16714:	ldr	r3, [fp, #12]
   16718:	cmp	r3, #0
   1671c:	bne	16770 <sprintf@plt+0x51c8>
   16720:	mov	r0, fp
   16724:	bl	11380 <free@plt>
   16728:	ldr	r1, [r6, #12]
   1672c:	mov	r0, r4
   16730:	ldr	r2, [r4, #464]	; 0x1d0
   16734:	lsl	ip, r1, #4
   16738:	add	r2, r2, ip
   1673c:	str	r7, [r2, #8]
   16740:	ldr	r3, [r4, #464]	; 0x1d0
   16744:	add	r3, r3, ip
   16748:	str	r7, [r3, #4]
   1674c:	bl	12f14 <sprintf@plt+0x196c>
   16750:	ldr	r3, [r4, #460]	; 0x1cc
   16754:	sub	r3, r3, #1
   16758:	cmp	r3, #0
   1675c:	str	r3, [r4, #460]	; 0x1cc
   16760:	bne	166cc <sprintf@plt+0x5124>
   16764:	mov	r0, r4
   16768:	bl	129b8 <sprintf@plt+0x1410>
   1676c:	b	166cc <sprintf@plt+0x5124>
   16770:	ldr	r0, [r4]
   16774:	ldr	r1, [sp, #4]
   16778:	bl	12320 <sprintf@plt+0xd78>
   1677c:	ldr	r3, [fp, #4]
   16780:	cmp	r3, #0
   16784:	beq	16720 <sprintf@plt+0x5178>
   16788:	ldr	r5, [r3, #8]
   1678c:	ldr	r8, [r3]
   16790:	ldr	r0, [r8, #8]
   16794:	bl	12018 <sprintf@plt+0xa70>
   16798:	ldr	r0, [r8]
   1679c:	ldr	r1, [r0, #788]	; 0x314
   167a0:	ldrb	ip, [r0, #784]	; 0x310
   167a4:	sub	r1, r1, #1
   167a8:	cmp	r1, #0
   167ac:	movgt	ip, #0
   167b0:	andle	ip, ip, #1
   167b4:	str	r1, [r0, #788]	; 0x314
   167b8:	cmp	ip, #0
   167bc:	bne	16814 <sprintf@plt+0x526c>
   167c0:	ldr	r1, [r8, #16]
   167c4:	ldr	r0, [r8, #20]
   167c8:	cmp	r0, #0
   167cc:	beq	1680c <sprintf@plt+0x5264>
   167d0:	str	r1, [r0, #4]
   167d4:	ldr	r1, [r8, #16]
   167d8:	cmp	r1, #0
   167dc:	strne	r0, [r1, #8]
   167e0:	ldr	r1, [fp, #12]
   167e4:	streq	r0, [fp, #4]
   167e8:	mov	r0, r8
   167ec:	sub	r3, r1, #1
   167f0:	str	r3, [fp, #12]
   167f4:	bl	11380 <free@plt>
   167f8:	cmp	r5, #0
   167fc:	beq	16720 <sprintf@plt+0x5178>
   16800:	mov	r3, r5
   16804:	ldr	r5, [r5, #8]
   16808:	b	1678c <sprintf@plt+0x51e4>
   1680c:	str	r1, [fp, #8]
   16810:	b	167d8 <sprintf@plt+0x5230>
   16814:	bl	15c8c <sprintf@plt+0x46e4>
   16818:	b	167c0 <sprintf@plt+0x5218>
   1681c:	bl	15b54 <sprintf@plt+0x45ac>
   16820:	add	sp, sp, #20
   16824:	ldrd	r4, [sp]
   16828:	ldrd	r6, [sp, #8]
   1682c:	ldrd	r8, [sp, #16]
   16830:	ldrd	sl, [sp, #24]
   16834:	add	sp, sp, #32
   16838:	pop	{pc}		; (ldr pc, [sp], #4)
   1683c:	andeq	r3, r0, ip, asr ip
   16840:	andeq	r0, r0, r4, asr r1
   16844:	andeq	r4, r1, ip, asr #18
   16848:	andeq	r0, r0, r4, lsl #3
   1684c:	ldr	r3, [pc, #360]	; 169bc <sprintf@plt+0x5414>
   16850:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16854:	ldr	r1, [pc, #356]	; 169c0 <sprintf@plt+0x5418>
   16858:	ldr	r2, [r0, #464]	; 0x1d0
   1685c:	add	r3, pc, r3
   16860:	strd	r6, [sp, #8]
   16864:	str	r8, [sp, #16]
   16868:	str	lr, [sp, #20]
   1686c:	ldr	r8, [r3, r1]
   16870:	ldr	r3, [r8, #12]
   16874:	add	r3, r2, r3, lsl #4
   16878:	ldr	r5, [r3, #8]
   1687c:	cmp	r5, #0
   16880:	beq	168dc <sprintf@plt+0x5334>
   16884:	ldr	r3, [r5, #12]
   16888:	mov	r4, r0
   1688c:	cmp	r3, #0
   16890:	bne	168f0 <sprintf@plt+0x5348>
   16894:	mov	r0, r5
   16898:	bl	11380 <free@plt>
   1689c:	ldr	r1, [r8, #12]
   168a0:	mov	ip, #0
   168a4:	mov	r0, r4
   168a8:	ldr	r2, [r4, #464]	; 0x1d0
   168ac:	lsl	lr, r1, #4
   168b0:	add	r2, r2, lr
   168b4:	str	ip, [r2, #8]
   168b8:	ldr	r3, [r4, #464]	; 0x1d0
   168bc:	add	r3, r3, lr
   168c0:	str	ip, [r3, #4]
   168c4:	bl	12f14 <sprintf@plt+0x196c>
   168c8:	ldr	r3, [r4, #460]	; 0x1cc
   168cc:	sub	r3, r3, #1
   168d0:	cmp	r3, #0
   168d4:	str	r3, [r4, #460]	; 0x1cc
   168d8:	beq	16990 <sprintf@plt+0x53e8>
   168dc:	ldrd	r4, [sp]
   168e0:	ldrd	r6, [sp, #8]
   168e4:	ldr	r8, [sp, #16]
   168e8:	add	sp, sp, #20
   168ec:	pop	{pc}		; (ldr pc, [sp], #4)
   168f0:	ldr	r1, [pc, #204]	; 169c4 <sprintf@plt+0x541c>
   168f4:	ldr	r0, [r0]
   168f8:	add	r1, pc, r1
   168fc:	bl	12320 <sprintf@plt+0xd78>
   16900:	ldr	r3, [r5, #4]
   16904:	cmp	r3, #0
   16908:	beq	16894 <sprintf@plt+0x52ec>
   1690c:	ldr	r7, [r3, #8]
   16910:	ldr	r6, [r3]
   16914:	ldr	r0, [r6, #8]
   16918:	bl	12018 <sprintf@plt+0xa70>
   1691c:	ldr	r0, [r6]
   16920:	ldr	r3, [r0, #788]	; 0x314
   16924:	ldrb	r2, [r0, #784]	; 0x310
   16928:	sub	r3, r3, #1
   1692c:	cmp	r3, #0
   16930:	movgt	r2, #0
   16934:	andle	r2, r2, #1
   16938:	str	r3, [r0, #788]	; 0x314
   1693c:	cmp	r2, #0
   16940:	bne	169b4 <sprintf@plt+0x540c>
   16944:	ldr	r3, [r6, #16]
   16948:	ldr	r2, [r6, #20]
   1694c:	cmp	r2, #0
   16950:	beq	169ac <sprintf@plt+0x5404>
   16954:	str	r3, [r2, #4]
   16958:	ldr	r3, [r6, #16]
   1695c:	cmp	r3, #0
   16960:	mov	r0, r6
   16964:	strne	r2, [r3, #8]
   16968:	ldr	r3, [r5, #12]
   1696c:	streq	r2, [r5, #4]
   16970:	sub	r3, r3, #1
   16974:	str	r3, [r5, #12]
   16978:	bl	11380 <free@plt>
   1697c:	cmp	r7, #0
   16980:	beq	16894 <sprintf@plt+0x52ec>
   16984:	mov	r3, r7
   16988:	ldr	r7, [r7, #8]
   1698c:	b	16910 <sprintf@plt+0x5368>
   16990:	mov	r0, r4
   16994:	ldrd	r4, [sp]
   16998:	ldrd	r6, [sp, #8]
   1699c:	ldr	r8, [sp, #16]
   169a0:	ldr	lr, [sp, #20]
   169a4:	add	sp, sp, #24
   169a8:	b	129b8 <sprintf@plt+0x1410>
   169ac:	str	r3, [r5, #8]
   169b0:	b	1695c <sprintf@plt+0x53b4>
   169b4:	bl	15c8c <sprintf@plt+0x46e4>
   169b8:	b	16944 <sprintf@plt+0x539c>
   169bc:	muleq	r1, ip, r7
   169c0:	andeq	r0, r0, r4, lsl #3
   169c4:	strdeq	r3, [r0], -r4
   169c8:	ldr	r3, [pc, #360]	; 16b38 <sprintf@plt+0x5590>
   169cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   169d0:	ldr	r1, [pc, #356]	; 16b3c <sprintf@plt+0x5594>
   169d4:	ldr	r2, [r0, #464]	; 0x1d0
   169d8:	add	r3, pc, r3
   169dc:	strd	r6, [sp, #8]
   169e0:	str	r8, [sp, #16]
   169e4:	str	lr, [sp, #20]
   169e8:	ldr	r8, [r3, r1]
   169ec:	ldr	r3, [r8, #12]
   169f0:	add	r3, r2, r3, lsl #4
   169f4:	ldr	r5, [r3, #8]
   169f8:	cmp	r5, #0
   169fc:	beq	16a58 <sprintf@plt+0x54b0>
   16a00:	ldr	r3, [r5, #12]
   16a04:	mov	r4, r0
   16a08:	cmp	r3, #0
   16a0c:	bne	16a6c <sprintf@plt+0x54c4>
   16a10:	mov	r0, r5
   16a14:	bl	11380 <free@plt>
   16a18:	ldr	r1, [r8, #12]
   16a1c:	mov	ip, #0
   16a20:	mov	r0, r4
   16a24:	ldr	r2, [r4, #464]	; 0x1d0
   16a28:	lsl	lr, r1, #4
   16a2c:	add	r2, r2, lr
   16a30:	str	ip, [r2, #8]
   16a34:	ldr	r3, [r4, #464]	; 0x1d0
   16a38:	add	r3, r3, lr
   16a3c:	str	ip, [r3, #4]
   16a40:	bl	12f14 <sprintf@plt+0x196c>
   16a44:	ldr	r3, [r4, #460]	; 0x1cc
   16a48:	sub	r3, r3, #1
   16a4c:	cmp	r3, #0
   16a50:	str	r3, [r4, #460]	; 0x1cc
   16a54:	beq	16b0c <sprintf@plt+0x5564>
   16a58:	ldrd	r4, [sp]
   16a5c:	ldrd	r6, [sp, #8]
   16a60:	ldr	r8, [sp, #16]
   16a64:	add	sp, sp, #20
   16a68:	pop	{pc}		; (ldr pc, [sp], #4)
   16a6c:	ldr	r1, [pc, #204]	; 16b40 <sprintf@plt+0x5598>
   16a70:	ldr	r0, [r0]
   16a74:	add	r1, pc, r1
   16a78:	bl	12320 <sprintf@plt+0xd78>
   16a7c:	ldr	r3, [r5, #4]
   16a80:	cmp	r3, #0
   16a84:	beq	16a10 <sprintf@plt+0x5468>
   16a88:	ldr	r7, [r3, #8]
   16a8c:	ldr	r6, [r3]
   16a90:	ldr	r0, [r6, #8]
   16a94:	bl	12018 <sprintf@plt+0xa70>
   16a98:	ldr	r0, [r6]
   16a9c:	ldr	r3, [r0, #788]	; 0x314
   16aa0:	ldrb	r2, [r0, #784]	; 0x310
   16aa4:	sub	r3, r3, #1
   16aa8:	cmp	r3, #0
   16aac:	movgt	r2, #0
   16ab0:	andle	r2, r2, #1
   16ab4:	str	r3, [r0, #788]	; 0x314
   16ab8:	cmp	r2, #0
   16abc:	bne	16b30 <sprintf@plt+0x5588>
   16ac0:	ldr	r3, [r6, #16]
   16ac4:	ldr	r2, [r6, #20]
   16ac8:	cmp	r2, #0
   16acc:	beq	16b28 <sprintf@plt+0x5580>
   16ad0:	str	r3, [r2, #4]
   16ad4:	ldr	r3, [r6, #16]
   16ad8:	cmp	r3, #0
   16adc:	mov	r0, r6
   16ae0:	strne	r2, [r3, #8]
   16ae4:	ldr	r3, [r5, #12]
   16ae8:	streq	r2, [r5, #4]
   16aec:	sub	r3, r3, #1
   16af0:	str	r3, [r5, #12]
   16af4:	bl	11380 <free@plt>
   16af8:	cmp	r7, #0
   16afc:	beq	16a10 <sprintf@plt+0x5468>
   16b00:	mov	r3, r7
   16b04:	ldr	r7, [r7, #8]
   16b08:	b	16a8c <sprintf@plt+0x54e4>
   16b0c:	mov	r0, r4
   16b10:	ldrd	r4, [sp]
   16b14:	ldrd	r6, [sp, #8]
   16b18:	ldr	r8, [sp, #16]
   16b1c:	ldr	lr, [sp, #20]
   16b20:	add	sp, sp, #24
   16b24:	b	129b8 <sprintf@plt+0x1410>
   16b28:	str	r3, [r5, #8]
   16b2c:	b	16ad8 <sprintf@plt+0x5530>
   16b30:	bl	15c8c <sprintf@plt+0x46e4>
   16b34:	b	16ac0 <sprintf@plt+0x5518>
   16b38:	andeq	r4, r1, r0, lsr #12
   16b3c:	andeq	r0, r0, r4, lsl #3
   16b40:			; <UNDEFINED> instruction: 0x000038bc
   16b44:	ldr	r2, [pc, #812]	; 16e78 <sprintf@plt+0x58d0>
   16b48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16b4c:	ldr	r4, [pc, #808]	; 16e7c <sprintf@plt+0x58d4>
   16b50:	ldr	r3, [pc, #808]	; 16e80 <sprintf@plt+0x58d8>
   16b54:	add	r2, pc, r2
   16b58:	ldr	r2, [r2, #8]
   16b5c:	add	r4, pc, r4
   16b60:	strd	r6, [sp, #8]
   16b64:	strd	r8, [sp, #16]
   16b68:	str	sl, [sp, #24]
   16b6c:	str	lr, [sp, #28]
   16b70:	ldr	r8, [r4, r3]
   16b74:	cmp	r2, #0
   16b78:	ldr	r7, [r8, #12]
   16b7c:	beq	16d80 <sprintf@plt+0x57d8>
   16b80:	mov	r5, r0
   16b84:	mov	r0, #1
   16b88:	ldr	r3, [r5, #460]	; 0x1cc
   16b8c:	mov	r1, #16
   16b90:	add	r3, r3, r0
   16b94:	str	r3, [r5, #460]	; 0x1cc
   16b98:	bl	112f0 <calloc@plt>
   16b9c:	cmp	r0, #0
   16ba0:	beq	16db4 <sprintf@plt+0x580c>
   16ba4:	ldr	r2, [r5, #464]	; 0x1d0
   16ba8:	lsl	r7, r7, #4
   16bac:	ldr	r3, [pc, #720]	; 16e84 <sprintf@plt+0x58dc>
   16bb0:	add	r2, r2, r7
   16bb4:	str	r0, [r2, #8]
   16bb8:	ldr	r3, [r4, r3]
   16bbc:	ldr	r4, [r3]
   16bc0:	cmp	r4, #0
   16bc4:	beq	16dc0 <sprintf@plt+0x5818>
   16bc8:	ldr	sl, [pc, #696]	; 16e88 <sprintf@plt+0x58e0>
   16bcc:	mov	r6, r4
   16bd0:	add	sl, pc, sl
   16bd4:	b	16be4 <sprintf@plt+0x563c>
   16bd8:	ldr	r6, [r6, #8]
   16bdc:	cmp	r6, #0
   16be0:	beq	16d8c <sprintf@plt+0x57e4>
   16be4:	ldr	r9, [r6]
   16be8:	mov	r1, sl
   16bec:	ldr	r0, [r9, #16]
   16bf0:	bl	112e4 <strcasecmp@plt>
   16bf4:	cmp	r0, #0
   16bf8:	bne	16bd8 <sprintf@plt+0x5630>
   16bfc:	ldr	r3, [r9, #12]
   16c00:	ldr	r9, [r5, #464]	; 0x1d0
   16c04:	add	r3, r9, r3, lsl #4
   16c08:	ldr	r3, [r3, #12]
   16c0c:	cmp	r3, #2
   16c10:	bne	16d64 <sprintf@plt+0x57bc>
   16c14:	ldr	sl, [pc, #624]	; 16e8c <sprintf@plt+0x58e4>
   16c18:	add	sl, pc, sl
   16c1c:	b	16c2c <sprintf@plt+0x5684>
   16c20:	ldr	r4, [r4, #8]
   16c24:	cmp	r4, #0
   16c28:	beq	16c58 <sprintf@plt+0x56b0>
   16c2c:	ldr	r6, [r4]
   16c30:	mov	r1, sl
   16c34:	ldr	r0, [r6, #16]
   16c38:	bl	112e4 <strcasecmp@plt>
   16c3c:	cmp	r0, #0
   16c40:	bne	16c20 <sprintf@plt+0x5678>
   16c44:	ldr	r3, [r6, #12]
   16c48:	add	r3, r9, r3, lsl #4
   16c4c:	ldr	r3, [r3, #12]
   16c50:	cmp	r3, #2
   16c54:	bne	16d64 <sprintf@plt+0x57bc>
   16c58:	ldrh	r3, [r5, #248]	; 0xf8
   16c5c:	add	r7, r9, r7
   16c60:	ldr	r6, [r7, #8]
   16c64:	cmp	r3, #2
   16c68:	beq	16db8 <sprintf@plt+0x5810>
   16c6c:	cmp	r3, #10
   16c70:	moveq	r7, #2
   16c74:	bne	16d00 <sprintf@plt+0x5758>
   16c78:	ldr	r1, [pc, #528]	; 16e90 <sprintf@plt+0x58e8>
   16c7c:	mov	r3, #1
   16c80:	ldr	r0, [r5]
   16c84:	strb	r3, [r6]
   16c88:	add	r1, pc, r1
   16c8c:	bl	12320 <sprintf@plt+0xd78>
   16c90:	ldr	r3, [pc, #508]	; 16e94 <sprintf@plt+0x58ec>
   16c94:	ldr	r4, [pc, r3]
   16c98:	cmp	r4, #0
   16c9c:	bne	16cb0 <sprintf@plt+0x5708>
   16ca0:	b	16ce0 <sprintf@plt+0x5738>
   16ca4:	ldr	r4, [r4, #8]
   16ca8:	cmp	r4, #0
   16cac:	beq	16ce0 <sprintf@plt+0x5738>
   16cb0:	ldr	r0, [r4]
   16cb4:	ldrb	r3, [r0, #784]	; 0x310
   16cb8:	cmp	r3, #0
   16cbc:	bne	16ca4 <sprintf@plt+0x56fc>
   16cc0:	ldrb	r3, [r0, #768]	; 0x300
   16cc4:	tst	r3, r7
   16cc8:	beq	16ca4 <sprintf@plt+0x56fc>
   16ccc:	mov	r1, r5
   16cd0:	bl	16508 <sprintf@plt+0x4f60>
   16cd4:	ldr	r4, [r4, #8]
   16cd8:	cmp	r4, #0
   16cdc:	bne	16cb0 <sprintf@plt+0x5708>
   16ce0:	ldr	r3, [r6, #12]
   16ce4:	ldr	r4, [r8, #12]
   16ce8:	cmp	r3, #0
   16cec:	lsl	r4, r4, #4
   16cf0:	bne	16d94 <sprintf@plt+0x57ec>
   16cf4:	ldr	r3, [r5, #464]	; 0x1d0
   16cf8:	add	r4, r3, r4
   16cfc:	ldr	r6, [r4, #8]
   16d00:	cmp	r6, #0
   16d04:	beq	16d64 <sprintf@plt+0x57bc>
   16d08:	ldr	r3, [r6, #12]
   16d0c:	cmp	r3, #0
   16d10:	bne	16dc8 <sprintf@plt+0x5820>
   16d14:	mov	r0, r6
   16d18:	bl	11380 <free@plt>
   16d1c:	ldr	r1, [r8, #12]
   16d20:	mov	ip, #0
   16d24:	mov	r0, r5
   16d28:	ldr	r2, [r5, #464]	; 0x1d0
   16d2c:	lsl	lr, r1, #4
   16d30:	add	r2, r2, lr
   16d34:	str	ip, [r2, #8]
   16d38:	ldr	r3, [r5, #464]	; 0x1d0
   16d3c:	add	r3, r3, lr
   16d40:	str	ip, [r3, #4]
   16d44:	bl	12f14 <sprintf@plt+0x196c>
   16d48:	ldr	r3, [r5, #460]	; 0x1cc
   16d4c:	sub	r3, r3, #1
   16d50:	cmp	r3, #0
   16d54:	str	r3, [r5, #460]	; 0x1cc
   16d58:	bne	16d64 <sprintf@plt+0x57bc>
   16d5c:	mov	r0, r5
   16d60:	bl	129b8 <sprintf@plt+0x1410>
   16d64:	ldrd	r4, [sp]
   16d68:	mov	r0, #1
   16d6c:	ldrd	r6, [sp, #8]
   16d70:	ldrd	r8, [sp, #16]
   16d74:	ldr	sl, [sp, #24]
   16d78:	add	sp, sp, #28
   16d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d80:	mov	r1, r7
   16d84:	bl	12f14 <sprintf@plt+0x196c>
   16d88:	b	16d64 <sprintf@plt+0x57bc>
   16d8c:	ldr	r9, [r5, #464]	; 0x1d0
   16d90:	b	16c14 <sprintf@plt+0x566c>
   16d94:	ldr	r3, [pc, #252]	; 16e98 <sprintf@plt+0x58f0>
   16d98:	ldr	r6, [pc, r3]
   16d9c:	bl	113e0 <rb_current_time@plt>
   16da0:	ldr	r3, [r5, #464]	; 0x1d0
   16da4:	add	r0, r6, r0
   16da8:	add	r4, r3, r4
   16dac:	str	r0, [r4, #4]
   16db0:	b	16d64 <sprintf@plt+0x57bc>
   16db4:	bl	1147c <rb_outofmemory@plt>
   16db8:	mov	r7, #1
   16dbc:	b	16c78 <sprintf@plt+0x56d0>
   16dc0:	ldr	r9, [r5, #464]	; 0x1d0
   16dc4:	b	16c58 <sprintf@plt+0x56b0>
   16dc8:	ldr	r1, [pc, #204]	; 16e9c <sprintf@plt+0x58f4>
   16dcc:	ldr	r0, [r5]
   16dd0:	add	r1, pc, r1
   16dd4:	bl	12320 <sprintf@plt+0xd78>
   16dd8:	ldr	r3, [r6, #4]
   16ddc:	cmp	r3, #0
   16de0:	beq	16d14 <sprintf@plt+0x576c>
   16de4:	ldr	r7, [r3, #8]
   16de8:	ldr	r4, [r3]
   16dec:	ldr	r0, [r4, #8]
   16df0:	bl	12018 <sprintf@plt+0xa70>
   16df4:	ldr	r0, [r4]
   16df8:	ldr	r3, [r0, #788]	; 0x314
   16dfc:	ldrb	r2, [r0, #784]	; 0x310
   16e00:	sub	r3, r3, #1
   16e04:	cmp	r3, #0
   16e08:	movgt	r2, #0
   16e0c:	andle	r2, r2, #1
   16e10:	str	r3, [r0, #788]	; 0x314
   16e14:	cmp	r2, #0
   16e18:	bne	16e70 <sprintf@plt+0x58c8>
   16e1c:	ldr	r3, [r4, #16]
   16e20:	ldr	r2, [r4, #20]
   16e24:	cmp	r2, #0
   16e28:	beq	16e68 <sprintf@plt+0x58c0>
   16e2c:	str	r3, [r2, #4]
   16e30:	ldr	r3, [r4, #16]
   16e34:	cmp	r3, #0
   16e38:	mov	r0, r4
   16e3c:	strne	r2, [r3, #8]
   16e40:	ldr	r3, [r6, #12]
   16e44:	streq	r2, [r6, #4]
   16e48:	sub	r3, r3, #1
   16e4c:	str	r3, [r6, #12]
   16e50:	bl	11380 <free@plt>
   16e54:	cmp	r7, #0
   16e58:	beq	16d14 <sprintf@plt+0x576c>
   16e5c:	mov	r3, r7
   16e60:	ldr	r7, [r7, #8]
   16e64:	b	16de8 <sprintf@plt+0x5840>
   16e68:	str	r3, [r6, #8]
   16e6c:	b	16e34 <sprintf@plt+0x588c>
   16e70:	bl	15c8c <sprintf@plt+0x46e4>
   16e74:	b	16e1c <sprintf@plt+0x5874>
   16e78:	andeq	r9, r1, r4, asr #9
   16e7c:	muleq	r1, ip, r4
   16e80:	andeq	r0, r0, r4, lsl #3
   16e84:	muleq	r0, ip, r1
   16e88:	andeq	r3, r0, ip, ror r7
   16e8c:	andeq	r3, r0, ip, lsr r7
   16e90:	ldrdeq	r3, [r0], -r4
   16e94:	andeq	r9, r1, r4, lsl #7
   16e98:	andeq	r5, r1, r8
   16e9c:			; <UNDEFINED> instruction: 0x000035b0
   16ea0:	ldr	r2, [pc, #756]	; 1719c <sprintf@plt+0x5bf4>
   16ea4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16ea8:	ldr	r3, [pc, #752]	; 171a0 <sprintf@plt+0x5bf8>
   16eac:	strd	r6, [sp, #8]
   16eb0:	strd	r8, [sp, #16]
   16eb4:	add	r2, pc, r2
   16eb8:	strd	sl, [sp, #24]
   16ebc:	str	lr, [sp, #32]
   16ec0:	sub	sp, sp, #4
   16ec4:	ldr	r7, [r2, r3]
   16ec8:	ldr	r6, [r0, #464]	; 0x1d0
   16ecc:	ldr	r3, [r7, #12]
   16ed0:	add	r3, r6, r3, lsl #4
   16ed4:	ldr	r8, [r3, #8]
   16ed8:	cmp	r8, #0
   16edc:	beq	16eec <sprintf@plt+0x5944>
   16ee0:	ldrb	r3, [r8]
   16ee4:	cmp	r3, #0
   16ee8:	beq	16f08 <sprintf@plt+0x5960>
   16eec:	add	sp, sp, #4
   16ef0:	ldrd	r4, [sp]
   16ef4:	ldrd	r6, [sp, #8]
   16ef8:	ldrd	r8, [sp, #16]
   16efc:	ldrd	sl, [sp, #24]
   16f00:	add	sp, sp, #32
   16f04:	pop	{pc}		; (ldr pc, [sp], #4)
   16f08:	ldr	r3, [pc, #660]	; 171a4 <sprintf@plt+0x5bfc>
   16f0c:	mov	r9, r0
   16f10:	ldr	r3, [r2, r3]
   16f14:	ldr	r4, [r3]
   16f18:	cmp	r4, #0
   16f1c:	beq	16fac <sprintf@plt+0x5a04>
   16f20:	ldr	fp, [pc, #640]	; 171a8 <sprintf@plt+0x5c00>
   16f24:	mov	r5, r4
   16f28:	add	fp, pc, fp
   16f2c:	b	16f3c <sprintf@plt+0x5994>
   16f30:	ldr	r5, [r5, #8]
   16f34:	cmp	r5, #0
   16f38:	beq	16f68 <sprintf@plt+0x59c0>
   16f3c:	ldr	sl, [r5]
   16f40:	mov	r1, fp
   16f44:	ldr	r0, [sl, #16]
   16f48:	bl	112e4 <strcasecmp@plt>
   16f4c:	cmp	r0, #0
   16f50:	bne	16f30 <sprintf@plt+0x5988>
   16f54:	ldr	r3, [sl, #12]
   16f58:	add	r3, r6, r3, lsl #4
   16f5c:	ldr	r3, [r3, #12]
   16f60:	cmp	r3, #2
   16f64:	bne	16eec <sprintf@plt+0x5944>
   16f68:	ldr	sl, [pc, #572]	; 171ac <sprintf@plt+0x5c04>
   16f6c:	add	sl, pc, sl
   16f70:	b	16f80 <sprintf@plt+0x59d8>
   16f74:	ldr	r4, [r4, #8]
   16f78:	cmp	r4, #0
   16f7c:	beq	16fac <sprintf@plt+0x5a04>
   16f80:	ldr	r5, [r4]
   16f84:	mov	r1, sl
   16f88:	ldr	r0, [r5, #16]
   16f8c:	bl	112e4 <strcasecmp@plt>
   16f90:	cmp	r0, #0
   16f94:	bne	16f74 <sprintf@plt+0x59cc>
   16f98:	ldr	r3, [r5, #12]
   16f9c:	add	r6, r6, r3, lsl #4
   16fa0:	ldr	r3, [r6, #12]
   16fa4:	cmp	r3, #2
   16fa8:	bne	16eec <sprintf@plt+0x5944>
   16fac:	ldrh	r3, [r9, #248]	; 0xf8
   16fb0:	cmp	r3, #2
   16fb4:	beq	1703c <sprintf@plt+0x5a94>
   16fb8:	cmp	r3, #10
   16fbc:	moveq	r5, #2
   16fc0:	beq	17040 <sprintf@plt+0x5a98>
   16fc4:	ldr	r3, [r8, #12]
   16fc8:	cmp	r3, #0
   16fcc:	bne	170cc <sprintf@plt+0x5b24>
   16fd0:	mov	r0, r8
   16fd4:	bl	11380 <free@plt>
   16fd8:	ldr	r1, [r7, #12]
   16fdc:	mov	ip, #0
   16fe0:	mov	r0, r9
   16fe4:	ldr	r2, [r9, #464]	; 0x1d0
   16fe8:	lsl	lr, r1, #4
   16fec:	add	r2, r2, lr
   16ff0:	str	ip, [r2, #8]
   16ff4:	ldr	r3, [r9, #464]	; 0x1d0
   16ff8:	add	r3, r3, lr
   16ffc:	str	ip, [r3, #4]
   17000:	bl	12f14 <sprintf@plt+0x196c>
   17004:	ldr	r3, [r9, #460]	; 0x1cc
   17008:	sub	r3, r3, #1
   1700c:	cmp	r3, #0
   17010:	str	r3, [r9, #460]	; 0x1cc
   17014:	bne	16eec <sprintf@plt+0x5944>
   17018:	mov	r0, r9
   1701c:	add	sp, sp, #4
   17020:	ldrd	r4, [sp]
   17024:	ldrd	r6, [sp, #8]
   17028:	ldrd	r8, [sp, #16]
   1702c:	ldrd	sl, [sp, #24]
   17030:	ldr	lr, [sp, #32]
   17034:	add	sp, sp, #36	; 0x24
   17038:	b	129b8 <sprintf@plt+0x1410>
   1703c:	mov	r5, #1
   17040:	ldr	r1, [pc, #360]	; 171b0 <sprintf@plt+0x5c08>
   17044:	mov	r3, #1
   17048:	ldr	r0, [r9]
   1704c:	strb	r3, [r8]
   17050:	add	r1, pc, r1
   17054:	bl	12320 <sprintf@plt+0xd78>
   17058:	ldr	r3, [pc, #340]	; 171b4 <sprintf@plt+0x5c0c>
   1705c:	ldr	r4, [pc, r3]
   17060:	cmp	r4, #0
   17064:	bne	17078 <sprintf@plt+0x5ad0>
   17068:	b	170a0 <sprintf@plt+0x5af8>
   1706c:	ldr	r4, [r4, #8]
   17070:	cmp	r4, #0
   17074:	beq	170a0 <sprintf@plt+0x5af8>
   17078:	ldr	r0, [r4]
   1707c:	ldrb	r3, [r0, #784]	; 0x310
   17080:	cmp	r3, #0
   17084:	bne	1706c <sprintf@plt+0x5ac4>
   17088:	ldrb	r3, [r0, #768]	; 0x300
   1708c:	tst	r3, r5
   17090:	beq	1706c <sprintf@plt+0x5ac4>
   17094:	mov	r1, r9
   17098:	bl	16508 <sprintf@plt+0x4f60>
   1709c:	b	1706c <sprintf@plt+0x5ac4>
   170a0:	ldr	r2, [r8, #12]
   170a4:	ldr	r3, [r7, #12]
   170a8:	cmp	r2, #0
   170ac:	lsl	r4, r3, #4
   170b0:	bne	1716c <sprintf@plt+0x5bc4>
   170b4:	ldr	r3, [r9, #464]	; 0x1d0
   170b8:	add	r3, r3, r4
   170bc:	ldr	r8, [r3, #8]
   170c0:	cmp	r8, #0
   170c4:	beq	16eec <sprintf@plt+0x5944>
   170c8:	b	16fc4 <sprintf@plt+0x5a1c>
   170cc:	ldr	r1, [pc, #228]	; 171b8 <sprintf@plt+0x5c10>
   170d0:	ldr	r0, [r9]
   170d4:	add	r1, pc, r1
   170d8:	bl	12320 <sprintf@plt+0xd78>
   170dc:	ldr	r3, [r8, #4]
   170e0:	cmp	r3, #0
   170e4:	beq	16fd0 <sprintf@plt+0x5a28>
   170e8:	ldr	r5, [r3, #8]
   170ec:	ldr	r4, [r3]
   170f0:	ldr	r0, [r4, #8]
   170f4:	bl	12018 <sprintf@plt+0xa70>
   170f8:	ldr	r0, [r4]
   170fc:	ldr	r3, [r0, #788]	; 0x314
   17100:	ldrb	r2, [r0, #784]	; 0x310
   17104:	sub	r3, r3, #1
   17108:	cmp	r3, #0
   1710c:	movgt	r2, #0
   17110:	andle	r2, r2, #1
   17114:	str	r3, [r0, #788]	; 0x314
   17118:	cmp	r2, #0
   1711c:	bne	17194 <sprintf@plt+0x5bec>
   17120:	ldr	r3, [r4, #16]
   17124:	ldr	r2, [r4, #20]
   17128:	cmp	r2, #0
   1712c:	beq	1718c <sprintf@plt+0x5be4>
   17130:	str	r3, [r2, #4]
   17134:	ldr	r3, [r4, #16]
   17138:	cmp	r3, #0
   1713c:	mov	r0, r4
   17140:	strne	r2, [r3, #8]
   17144:	ldr	r3, [r8, #12]
   17148:	streq	r2, [r8, #4]
   1714c:	sub	r3, r3, #1
   17150:	str	r3, [r8, #12]
   17154:	bl	11380 <free@plt>
   17158:	cmp	r5, #0
   1715c:	beq	16fd0 <sprintf@plt+0x5a28>
   17160:	mov	r3, r5
   17164:	ldr	r5, [r5, #8]
   17168:	b	170ec <sprintf@plt+0x5b44>
   1716c:	ldr	r3, [pc, #72]	; 171bc <sprintf@plt+0x5c14>
   17170:	ldr	r5, [pc, r3]
   17174:	bl	113e0 <rb_current_time@plt>
   17178:	ldr	r3, [r9, #464]	; 0x1d0
   1717c:	add	r0, r5, r0
   17180:	add	r3, r3, r4
   17184:	str	r0, [r3, #4]
   17188:	b	16eec <sprintf@plt+0x5944>
   1718c:	str	r3, [r8, #8]
   17190:	b	17138 <sprintf@plt+0x5b90>
   17194:	bl	15c8c <sprintf@plt+0x46e4>
   17198:	b	17120 <sprintf@plt+0x5b78>
   1719c:	andeq	r4, r1, r4, asr #2
   171a0:	andeq	r0, r0, r4, lsl #3
   171a4:	muleq	r0, ip, r1
   171a8:	andeq	r3, r0, r4, lsr #8
   171ac:	andeq	r3, r0, r8, ror #7
   171b0:	andeq	r3, r0, ip, lsl #6
   171b4:			; <UNDEFINED> instruction: 0x00018fbc
   171b8:	andeq	r3, r0, ip, lsr #5
   171bc:	andeq	r4, r1, r0, lsr ip
   171c0:	ldr	r2, [r2]
   171c4:	ldr	r3, [pc, #24]	; 171e4 <sprintf@plt+0x5c3c>
   171c8:	ldrb	r2, [r2]
   171cc:	add	r3, pc, r3
   171d0:	sub	r2, r2, #49	; 0x31
   171d4:	clz	r2, r2
   171d8:	lsr	r2, r2, #5
   171dc:	strb	r2, [r3]
   171e0:	bx	lr
   171e4:	andeq	r4, r1, r0, asr ip
   171e8:	mov	r1, #0
   171ec:	str	r4, [sp, #-8]!
   171f0:	ldr	r0, [r2]
   171f4:	mov	r2, #10
   171f8:	str	lr, [sp, #4]
   171fc:	bl	1141c <strtol@plt>
   17200:	cmp	r0, #0
   17204:	blt	17220 <sprintf@plt+0x5c78>
   17208:	ldr	r3, [pc, #44]	; 1723c <sprintf@plt+0x5c94>
   1720c:	ldr	r4, [sp]
   17210:	add	sp, sp, #4
   17214:	add	r3, pc, r3
   17218:	str	r0, [r3, #4]
   1721c:	pop	{pc}		; (ldr pc, [sp], #4)
   17220:	ldr	r1, [pc, #24]	; 17240 <sprintf@plt+0x5c98>
   17224:	mov	r2, r0
   17228:	mov	r0, #67	; 0x43
   1722c:	add	r1, pc, r1
   17230:	bl	123a0 <sprintf@plt+0xdf8>
   17234:	mov	r0, #3
   17238:	bl	11590 <exit@plt>
   1723c:	andeq	r4, r1, r8, lsl #24
   17240:	muleq	r0, ip, r1
   17244:	ldr	r3, [pc, #228]	; 17330 <sprintf@plt+0x5d88>
   17248:	mov	r2, #11
   1724c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17250:	mov	r4, r0
   17254:	add	r0, r0, #440	; 0x1b8
   17258:	ldr	ip, [r4, #464]	; 0x1d0
   1725c:	strd	r6, [sp, #8]
   17260:	mov	r6, r1
   17264:	str	lr, [sp, #20]
   17268:	ldr	lr, [pc, #196]	; 17334 <sprintf@plt+0x5d8c>
   1726c:	add	r3, pc, r3
   17270:	str	r8, [sp, #16]
   17274:	ldr	r1, [pc, #188]	; 17338 <sprintf@plt+0x5d90>
   17278:	ldr	r5, [r3, lr]
   1727c:	add	r1, pc, r1
   17280:	ldr	r3, [r5, #12]
   17284:	add	r3, ip, r3, lsl #4
   17288:	ldr	r7, [r3, #8]
   1728c:	bl	1135c <rb_strlcpy@plt>
   17290:	ldr	r0, [r7]
   17294:	cmp	r0, #0
   17298:	beq	172a0 <sprintf@plt+0x5cf8>
   1729c:	bl	11410 <rb_close@plt>
   172a0:	mov	r0, r7
   172a4:	bl	11380 <free@plt>
   172a8:	ldr	r3, [r5, #12]
   172ac:	mov	ip, #0
   172b0:	ldr	r0, [r4]
   172b4:	ldr	r2, [r4, #464]	; 0x1d0
   172b8:	lsl	r3, r3, #4
   172bc:	ldr	r1, [pc, #120]	; 1733c <sprintf@plt+0x5d94>
   172c0:	add	r2, r2, r3
   172c4:	str	ip, [r2, #8]
   172c8:	add	r1, pc, r1
   172cc:	ldr	r2, [r4, #464]	; 0x1d0
   172d0:	ldr	r1, [r1, r6, lsl #2]
   172d4:	add	r3, r2, r3
   172d8:	str	ip, [r3, #4]
   172dc:	bl	12320 <sprintf@plt+0xd78>
   172e0:	mov	r0, r4
   172e4:	ldr	r1, [r5, #12]
   172e8:	bl	12f14 <sprintf@plt+0x196c>
   172ec:	ldr	r3, [r4, #460]	; 0x1cc
   172f0:	sub	r3, r3, #1
   172f4:	cmp	r3, #0
   172f8:	str	r3, [r4, #460]	; 0x1cc
   172fc:	beq	17314 <sprintf@plt+0x5d6c>
   17300:	ldrd	r4, [sp]
   17304:	ldrd	r6, [sp, #8]
   17308:	ldr	r8, [sp, #16]
   1730c:	add	sp, sp, #20
   17310:	pop	{pc}		; (ldr pc, [sp], #4)
   17314:	mov	r0, r4
   17318:	ldrd	r4, [sp]
   1731c:	ldrd	r6, [sp, #8]
   17320:	ldr	r8, [sp, #16]
   17324:	ldr	lr, [sp, #20]
   17328:	add	sp, sp, #24
   1732c:	b	129b8 <sprintf@plt+0x1410>
   17330:	andeq	r3, r1, ip, lsl #27
   17334:	andeq	r0, r0, r0, ror #2
   17338:	muleq	r0, ip, sl
   1733c:	andeq	r3, r1, r0, lsl ip
   17340:	ldr	r1, [pc, #44]	; 17374 <sprintf@plt+0x5dcc>
   17344:	ldr	r2, [pc, #44]	; 17378 <sprintf@plt+0x5dd0>
   17348:	ldr	r3, [r0, #464]	; 0x1d0
   1734c:	add	r1, pc, r1
   17350:	ldr	r2, [r1, r2]
   17354:	ldr	r2, [r2, #12]
   17358:	add	r3, r3, r2, lsl #4
   1735c:	ldr	r3, [r3, #8]
   17360:	cmp	r3, #0
   17364:	beq	17370 <sprintf@plt+0x5dc8>
   17368:	mov	r1, #2
   1736c:	b	17244 <sprintf@plt+0x5c9c>
   17370:	bx	lr
   17374:	andeq	r3, r1, ip, lsr #25
   17378:	andeq	r0, r0, r0, ror #2
   1737c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17380:	mov	r2, #129	; 0x81
   17384:	mov	r4, r1
   17388:	strd	r6, [sp, #8]
   1738c:	mov	r1, #0
   17390:	mov	r7, r0
   17394:	strd	r8, [sp, #16]
   17398:	str	sl, [sp, #24]
   1739c:	str	lr, [sp, #28]
   173a0:	sub	sp, sp, #136	; 0x88
   173a4:	add	r6, sp, #4
   173a8:	ldr	r5, [pc, #632]	; 17628 <sprintf@plt+0x6080>
   173ac:	mov	r0, r6
   173b0:	bl	11320 <memset@plt>
   173b4:	mov	r1, r6
   173b8:	mov	r0, r7
   173bc:	mov	r2, #128	; 0x80
   173c0:	bl	11398 <rb_read@plt>
   173c4:	cmp	r0, #0
   173c8:	add	r5, pc, r5
   173cc:	blt	17558 <sprintf@plt+0x5fb0>
   173d0:	beq	1756c <sprintf@plt+0x5fc4>
   173d4:	mov	r1, #58	; 0x3a
   173d8:	mov	r0, r6
   173dc:	bl	112cc <strchr@plt>
   173e0:	subs	r7, r0, #0
   173e4:	beq	17530 <sprintf@plt+0x5f88>
   173e8:	mov	r8, #0
   173ec:	mov	r1, #58	; 0x3a
   173f0:	strb	r8, [r7], #1
   173f4:	mov	r0, r7
   173f8:	bl	112cc <strchr@plt>
   173fc:	subs	r9, r0, #0
   17400:	beq	17530 <sprintf@plt+0x5f88>
   17404:	mov	r1, #44	; 0x2c
   17408:	mov	r0, r6
   1740c:	strb	r8, [r9]
   17410:	bl	112cc <strchr@plt>
   17414:	subs	sl, r0, #0
   17418:	beq	17530 <sprintf@plt+0x5f88>
   1741c:	mov	r0, r6
   17420:	mov	r2, #10
   17424:	strb	r8, [sl]
   17428:	mov	r1, r8
   1742c:	bl	1141c <strtol@plt>
   17430:	cmp	r0, r8
   17434:	beq	17530 <sprintf@plt+0x5f88>
   17438:	add	r0, sl, #1
   1743c:	mov	r2, #10
   17440:	mov	r1, r8
   17444:	bl	1141c <strtol@plt>
   17448:	cmp	r0, r8
   1744c:	beq	17530 <sprintf@plt+0x5f88>
   17450:	ldr	r1, [pc, #468]	; 1762c <sprintf@plt+0x6084>
   17454:	mov	r0, r7
   17458:	add	r1, pc, r1
   1745c:	bl	1144c <strstr@plt>
   17460:	cmp	r0, r8
   17464:	beq	17530 <sprintf@plt+0x5f88>
   17468:	add	r0, r9, #1
   1746c:	mov	r1, #58	; 0x3a
   17470:	bl	112cc <strchr@plt>
   17474:	cmp	r0, #0
   17478:	beq	17530 <sprintf@plt+0x5f88>
   1747c:	mov	r2, r0
   17480:	strb	r8, [r2], #1
   17484:	cmp	r2, r8
   17488:	beq	17530 <sprintf@plt+0x5f88>
   1748c:	ldrb	r3, [r0, #1]
   17490:	add	r0, r4, #440	; 0x1b8
   17494:	and	r1, r3, #223	; 0xdf
   17498:	cmp	r1, #94	; 0x5e
   1749c:	bne	174b0 <sprintf@plt+0x5f08>
   174a0:	ldrb	r3, [r2, #1]!
   174a4:	and	r1, r3, #223	; 0xdf
   174a8:	cmp	r1, #94	; 0x5e
   174ac:	beq	174a0 <sprintf@plt+0x5ef8>
   174b0:	tst	r3, #191	; 0xbf
   174b4:	beq	17590 <sprintf@plt+0x5fe8>
   174b8:	cmp	r3, #10
   174bc:	cmpne	r3, #13
   174c0:	beq	17590 <sprintf@plt+0x5fe8>
   174c4:	mov	ip, #10
   174c8:	b	174f8 <sprintf@plt+0x5f50>
   174cc:	ldrb	r3, [r2, #1]!
   174d0:	tst	r3, #191	; 0xbf
   174d4:	movne	r1, #1
   174d8:	moveq	r1, #0
   174dc:	cmp	ip, #0
   174e0:	moveq	r1, #0
   174e4:	cmp	r1, #0
   174e8:	beq	17590 <sprintf@plt+0x5fe8>
   174ec:	cmp	r3, #10
   174f0:	cmpne	r3, #13
   174f4:	beq	17590 <sprintf@plt+0x5fe8>
   174f8:	cmp	r3, #32
   174fc:	cmpne	r3, #58	; 0x3a
   17500:	movne	r1, #1
   17504:	moveq	r1, #0
   17508:	cmp	r3, #91	; 0x5b
   1750c:	moveq	r1, #0
   17510:	andne	r1, r1, #1
   17514:	cmp	r1, #0
   17518:	beq	174cc <sprintf@plt+0x5f24>
   1751c:	mov	r1, r0
   17520:	sub	ip, ip, #1
   17524:	strb	r3, [r1], #1
   17528:	mov	r0, r1
   1752c:	b	174cc <sprintf@plt+0x5f24>
   17530:	mov	r1, #3
   17534:	mov	r0, r4
   17538:	bl	17244 <sprintf@plt+0x5c9c>
   1753c:	add	sp, sp, #136	; 0x88
   17540:	ldrd	r4, [sp]
   17544:	ldrd	r6, [sp, #8]
   17548:	ldrd	r8, [sp, #16]
   1754c:	ldr	sl, [sp, #24]
   17550:	add	sp, sp, #28
   17554:	pop	{pc}		; (ldr pc, [sp], #4)
   17558:	bl	1159c <__errno_location@plt>
   1755c:	ldr	r0, [r0]
   17560:	bl	11224 <rb_ignore_errno@plt>
   17564:	cmp	r0, #0
   17568:	bne	17574 <sprintf@plt+0x5fcc>
   1756c:	mov	r1, #2
   17570:	b	17534 <sprintf@plt+0x5f8c>
   17574:	ldr	r2, [pc, #180]	; 17630 <sprintf@plt+0x6088>
   17578:	mov	r3, r4
   1757c:	mov	r0, r7
   17580:	mov	r1, #1
   17584:	add	r2, pc, r2
   17588:	bl	1126c <rb_setselect@plt>
   1758c:	b	1753c <sprintf@plt+0x5f94>
   17590:	ldr	r2, [pc, #156]	; 17634 <sprintf@plt+0x608c>
   17594:	mov	r3, #0
   17598:	strb	r3, [r0]
   1759c:	ldr	r3, [r4, #464]	; 0x1d0
   175a0:	ldr	r5, [r5, r2]
   175a4:	ldr	r2, [r5, #12]
   175a8:	add	r3, r3, r2, lsl #4
   175ac:	ldr	r6, [r3, #8]
   175b0:	ldr	r0, [r6]
   175b4:	cmp	r0, #0
   175b8:	beq	175c0 <sprintf@plt+0x6018>
   175bc:	bl	11410 <rb_close@plt>
   175c0:	mov	r0, r6
   175c4:	bl	11380 <free@plt>
   175c8:	ldr	r3, [r5, #12]
   175cc:	mov	ip, #0
   175d0:	ldr	r0, [r4]
   175d4:	ldr	r2, [r4, #464]	; 0x1d0
   175d8:	lsl	r3, r3, #4
   175dc:	ldr	r1, [pc, #84]	; 17638 <sprintf@plt+0x6090>
   175e0:	add	r2, r2, r3
   175e4:	str	ip, [r2, #8]
   175e8:	add	r1, pc, r1
   175ec:	ldr	r2, [r4, #464]	; 0x1d0
   175f0:	add	r3, r2, r3
   175f4:	str	ip, [r3, #4]
   175f8:	bl	12320 <sprintf@plt+0xd78>
   175fc:	mov	r0, r4
   17600:	ldr	r1, [r5, #12]
   17604:	bl	12f14 <sprintf@plt+0x196c>
   17608:	ldr	r3, [r4, #460]	; 0x1cc
   1760c:	sub	r3, r3, #1
   17610:	cmp	r3, #0
   17614:	str	r3, [r4, #460]	; 0x1cc
   17618:	bne	1753c <sprintf@plt+0x5f94>
   1761c:	mov	r0, r4
   17620:	bl	129b8 <sprintf@plt+0x1410>
   17624:	b	1753c <sprintf@plt+0x5f94>
   17628:	andeq	r3, r1, r0, lsr ip
   1762c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   17630:			; <UNDEFINED> instruction: 0xfffffdf0
   17634:	andeq	r0, r0, r0, ror #2
   17638:	andeq	r2, r0, r0, lsl lr
   1763c:	ldr	r3, [pc, #172]	; 176f0 <sprintf@plt+0x6148>
   17640:	cmp	r1, #0
   17644:	strd	r4, [sp, #-20]!	; 0xffffffec
   17648:	mov	r4, r2
   1764c:	strd	r6, [sp, #8]
   17650:	str	lr, [sp, #16]
   17654:	sub	sp, sp, #44	; 0x2c
   17658:	add	r3, pc, r3
   1765c:	bne	176c0 <sprintf@plt+0x6118>
   17660:	ldr	r2, [pc, #140]	; 176f4 <sprintf@plt+0x614c>
   17664:	add	r5, sp, #8
   17668:	mov	r1, #32
   1766c:	mov	r0, r5
   17670:	ldr	ip, [r4, #464]	; 0x1d0
   17674:	ldrh	lr, [r4, #62]	; 0x3e
   17678:	ldr	r2, [r3, r2]
   1767c:	ldrh	r3, [r4, #246]	; 0xf6
   17680:	ldr	r6, [r2, #12]
   17684:	ldr	r2, [pc, #108]	; 176f8 <sprintf@plt+0x6150>
   17688:	add	ip, ip, r6, lsl #4
   1768c:	ldr	r7, [ip, #8]
   17690:	add	r2, pc, r2
   17694:	str	lr, [sp]
   17698:	bl	1153c <snprintf@plt>
   1769c:	mov	r0, r5
   176a0:	bl	113d4 <strlen@plt>
   176a4:	mov	r6, r0
   176a8:	mov	r2, r0
   176ac:	ldr	r0, [r7]
   176b0:	mov	r1, r5
   176b4:	bl	11344 <rb_write@plt>
   176b8:	cmp	r0, r6
   176bc:	beq	176e0 <sprintf@plt+0x6138>
   176c0:	mov	r0, r4
   176c4:	mov	r1, #2
   176c8:	bl	17244 <sprintf@plt+0x5c9c>
   176cc:	add	sp, sp, #44	; 0x2c
   176d0:	ldrd	r4, [sp]
   176d4:	ldrd	r6, [sp, #8]
   176d8:	add	sp, sp, #16
   176dc:	pop	{pc}		; (ldr pc, [sp], #4)
   176e0:	mov	r1, r4
   176e4:	ldr	r0, [r7]
   176e8:	bl	1737c <sprintf@plt+0x5dd4>
   176ec:	b	176cc <sprintf@plt+0x6124>
   176f0:	andeq	r3, r1, r0, lsr #19
   176f4:	andeq	r0, r0, r0, ror #2
   176f8:	andeq	r2, r0, r0, lsl #27
   176fc:	strd	r4, [sp, #-16]!
   17700:	str	r6, [sp, #8]
   17704:	ldr	r6, [pc, #128]	; 1778c <sprintf@plt+0x61e4>
   17708:	str	lr, [sp, #12]
   1770c:	sub	sp, sp, #8
   17710:	ldr	r3, [pc, #120]	; 17790 <sprintf@plt+0x61e8>
   17714:	mov	r5, sp
   17718:	mov	r1, r5
   1771c:	add	r6, pc, r6
   17720:	ldr	r4, [r6, r3]
   17724:	ldr	r0, [r4]
   17728:	bl	113bc <rb_dictionary_foreach_start@plt>
   1772c:	b	1775c <sprintf@plt+0x61b4>
   17730:	ldr	r2, [r6, r2]
   17734:	ldr	r3, [r3, #464]	; 0x1d0
   17738:	ldr	r2, [r2, #12]
   1773c:	add	r3, r3, r2, lsl #4
   17740:	ldr	r3, [r3, #8]
   17744:	cmp	r3, #0
   17748:	beq	17750 <sprintf@plt+0x61a8>
   1774c:	bl	17244 <sprintf@plt+0x5c9c>
   17750:	mov	r1, r5
   17754:	ldr	r0, [r4]
   17758:	bl	11374 <rb_dictionary_foreach_next@plt>
   1775c:	mov	r1, r5
   17760:	ldr	r0, [r4]
   17764:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17768:	subs	r3, r0, #0
   1776c:	ldr	r2, [pc, #32]	; 17794 <sprintf@plt+0x61ec>
   17770:	mov	r1, #2
   17774:	bne	17730 <sprintf@plt+0x6188>
   17778:	add	sp, sp, #8
   1777c:	ldrd	r4, [sp]
   17780:	ldr	r6, [sp, #8]
   17784:	add	sp, sp, #12
   17788:	pop	{pc}		; (ldr pc, [sp], #4)
   1778c:	ldrdeq	r3, [r1], -ip
   17790:	andeq	r0, r0, r4, asr r1
   17794:	andeq	r0, r0, r0, ror #2
   17798:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1779c:	mov	r1, #4
   177a0:	mov	r4, r0
   177a4:	ldr	r5, [pc, #404]	; 17940 <sprintf@plt+0x6398>
   177a8:	mov	r0, #1
   177ac:	strd	r6, [sp, #8]
   177b0:	str	r8, [sp, #16]
   177b4:	str	lr, [sp, #20]
   177b8:	sub	sp, sp, #264	; 0x108
   177bc:	bl	112f0 <calloc@plt>
   177c0:	subs	r7, r0, #0
   177c4:	add	r5, pc, r5
   177c8:	beq	1790c <sprintf@plt+0x6364>
   177cc:	ldr	r6, [pc, #368]	; 17944 <sprintf@plt+0x639c>
   177d0:	ldr	r8, [r4]
   177d4:	add	r6, pc, r6
   177d8:	ldrb	r3, [r6]
   177dc:	cmp	r3, #0
   177e0:	bne	17828 <sprintf@plt+0x6280>
   177e4:	bl	11380 <free@plt>
   177e8:	ldr	r1, [pc, #344]	; 17948 <sprintf@plt+0x63a0>
   177ec:	mov	r0, r8
   177f0:	add	r1, pc, r1
   177f4:	bl	12320 <sprintf@plt+0xd78>
   177f8:	ldr	r3, [pc, #332]	; 1794c <sprintf@plt+0x63a4>
   177fc:	mov	r0, r4
   17800:	ldr	r3, [r5, r3]
   17804:	ldr	r1, [r3, #12]
   17808:	bl	12f14 <sprintf@plt+0x196c>
   1780c:	mov	r0, #1
   17810:	add	sp, sp, #264	; 0x108
   17814:	ldrd	r4, [sp]
   17818:	ldrd	r6, [sp, #8]
   1781c:	ldr	r8, [sp, #16]
   17820:	add	sp, sp, #20
   17824:	pop	{pc}		; (ldr pc, [sp], #4)
   17828:	ldr	r3, [r4, #460]	; 0x1cc
   1782c:	mov	r0, r8
   17830:	ldr	r1, [pc, #280]	; 17950 <sprintf@plt+0x63a8>
   17834:	ldrh	r8, [r4, #248]	; 0xf8
   17838:	add	r3, r3, #1
   1783c:	add	r1, pc, r1
   17840:	str	r3, [r4, #460]	; 0x1cc
   17844:	bl	12320 <sprintf@plt+0xd78>
   17848:	ldr	r2, [pc, #252]	; 1794c <sprintf@plt+0x63a4>
   1784c:	ldr	r3, [r4, #464]	; 0x1d0
   17850:	ldr	r6, [r6, #4]
   17854:	ldr	r2, [r5, r2]
   17858:	ldr	r5, [r2, #12]
   1785c:	lsl	r5, r5, #4
   17860:	add	r3, r3, r5
   17864:	str	r7, [r3, #8]
   17868:	bl	113e0 <rb_current_time@plt>
   1786c:	ldr	r2, [r4, #464]	; 0x1d0
   17870:	add	r6, r6, r0
   17874:	mov	r1, #1
   17878:	mov	r0, r8
   1787c:	ldr	r3, [pc, #208]	; 17954 <sprintf@plt+0x63ac>
   17880:	add	r5, r2, r5
   17884:	ldr	r2, [r4, #4]
   17888:	add	r3, pc, r3
   1788c:	str	r6, [r5, #4]
   17890:	bl	1129c <rb_socket@plt>
   17894:	cmp	r0, #0
   17898:	mov	r6, r0
   1789c:	str	r0, [r7]
   178a0:	beq	17910 <sprintf@plt+0x6368>
   178a4:	add	r5, sp, #8
   178a8:	add	r1, r4, #64	; 0x40
   178ac:	add	r7, sp, #136	; 0x88
   178b0:	mov	r2, #128	; 0x80
   178b4:	mov	r0, r5
   178b8:	bl	113f8 <memcpy@plt>
   178bc:	add	r1, r4, #248	; 0xf8
   178c0:	mov	r0, r7
   178c4:	mov	r2, #128	; 0x80
   178c8:	bl	113f8 <memcpy@plt>
   178cc:	ldr	ip, [pc, #132]	; 17958 <sprintf@plt+0x63b0>
   178d0:	mov	r3, #0
   178d4:	mov	r2, r5
   178d8:	mov	r1, r7
   178dc:	mov	r0, r6
   178e0:	strh	r3, [r5, #2]
   178e4:	mov	r3, #28928	; 0x7100
   178e8:	str	r4, [sp]
   178ec:	add	ip, pc, ip
   178f0:	ldr	ip, [ip, #4]
   178f4:	strh	r3, [sp, #138]	; 0x8a
   178f8:	ldr	r3, [pc, #92]	; 1795c <sprintf@plt+0x63b4>
   178fc:	str	ip, [sp, #4]
   17900:	add	r3, pc, r3
   17904:	bl	1123c <rb_connect_tcp@plt>
   17908:	b	1780c <sprintf@plt+0x6264>
   1790c:	bl	1147c <rb_outofmemory@plt>
   17910:	bl	1159c <__errno_location@plt>
   17914:	ldr	r0, [r0]
   17918:	bl	111e8 <strerror@plt>
   1791c:	ldr	r1, [pc, #60]	; 17960 <sprintf@plt+0x63b8>
   17920:	mov	r2, r0
   17924:	mov	r0, #68	; 0x44
   17928:	add	r1, pc, r1
   1792c:	bl	123a0 <sprintf@plt+0xdf8>
   17930:	mov	r0, r4
   17934:	mov	r1, #2
   17938:	bl	17244 <sprintf@plt+0x5c9c>
   1793c:	b	1780c <sprintf@plt+0x6264>
   17940:	andeq	r3, r1, r4, lsr r8
   17944:	andeq	r4, r1, r8, asr #12
   17948:	andeq	r2, r0, ip, lsr #24
   1794c:	andeq	r0, r0, r0, ror #2
   17950:	andeq	r2, r0, r8, lsl #24
   17954:	andeq	r2, r0, ip, asr #21
   17958:	andeq	r4, r1, r0, lsr r5
   1795c:			; <UNDEFINED> instruction: 0xfffffd34
   17960:	andeq	r2, r0, r0, lsr fp
   17964:	mov	r1, #0
   17968:	str	r4, [sp, #-8]!
   1796c:	ldr	r0, [r2]
   17970:	mov	r2, #10
   17974:	str	lr, [sp, #4]
   17978:	bl	1141c <strtol@plt>
   1797c:	cmp	r0, #0
   17980:	blt	1799c <sprintf@plt+0x63f4>
   17984:	ldr	r3, [pc, #44]	; 179b8 <sprintf@plt+0x6410>
   17988:	ldr	r4, [sp]
   1798c:	add	sp, sp, #4
   17990:	add	r3, pc, r3
   17994:	str	r0, [r3]
   17998:	pop	{pc}		; (ldr pc, [sp], #4)
   1799c:	ldr	r1, [pc, #24]	; 179bc <sprintf@plt+0x6414>
   179a0:	mov	r2, r0
   179a4:	mov	r0, #67	; 0x43
   179a8:	add	r1, pc, r1
   179ac:	bl	123a0 <sprintf@plt+0xdf8>
   179b0:	mov	r0, #3
   179b4:	bl	11590 <exit@plt>
   179b8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   179bc:	andeq	r2, r0, r0, asr #22
   179c0:	ldr	r3, [pc, #216]	; 17aa0 <sprintf@plt+0x64f8>
   179c4:	mov	r2, #64	; 0x40
   179c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   179cc:	mov	r4, r0
   179d0:	mov	r5, r1
   179d4:	ldr	ip, [r4, #464]	; 0x1d0
   179d8:	add	r0, r0, #376	; 0x178
   179dc:	strd	r6, [sp, #8]
   179e0:	str	lr, [sp, #20]
   179e4:	ldr	lr, [pc, #184]	; 17aa4 <sprintf@plt+0x64fc>
   179e8:	add	r3, pc, r3
   179ec:	str	r8, [sp, #16]
   179f0:	ldr	r1, [pc, #176]	; 17aa8 <sprintf@plt+0x6500>
   179f4:	ldr	r6, [r3, lr]
   179f8:	add	r1, pc, r1
   179fc:	ldr	r3, [r6, #12]
   17a00:	add	r3, ip, r3, lsl #4
   17a04:	ldr	r7, [r3, #8]
   17a08:	bl	1135c <rb_strlcpy@plt>
   17a0c:	ldr	r3, [pc, #152]	; 17aac <sprintf@plt+0x6504>
   17a10:	ldr	r0, [r4]
   17a14:	add	r3, pc, r3
   17a18:	ldr	r1, [r3, r5, lsl #2]
   17a1c:	bl	12320 <sprintf@plt+0xd78>
   17a20:	ldr	r0, [r7]
   17a24:	bl	12018 <sprintf@plt+0xa70>
   17a28:	mov	r0, r7
   17a2c:	bl	11380 <free@plt>
   17a30:	ldr	r1, [r6, #12]
   17a34:	mov	ip, #0
   17a38:	mov	r0, r4
   17a3c:	ldr	r2, [r4, #464]	; 0x1d0
   17a40:	lsl	lr, r1, #4
   17a44:	add	r2, r2, lr
   17a48:	str	ip, [r2, #8]
   17a4c:	ldr	r3, [r4, #464]	; 0x1d0
   17a50:	add	r3, r3, lr
   17a54:	str	ip, [r3, #4]
   17a58:	bl	12f14 <sprintf@plt+0x196c>
   17a5c:	ldr	r3, [r4, #460]	; 0x1cc
   17a60:	sub	r3, r3, #1
   17a64:	cmp	r3, #0
   17a68:	str	r3, [r4, #460]	; 0x1cc
   17a6c:	beq	17a84 <sprintf@plt+0x64dc>
   17a70:	ldrd	r4, [sp]
   17a74:	ldrd	r6, [sp, #8]
   17a78:	ldr	r8, [sp, #16]
   17a7c:	add	sp, sp, #20
   17a80:	pop	{pc}		; (ldr pc, [sp], #4)
   17a84:	mov	r0, r4
   17a88:	ldrd	r4, [sp]
   17a8c:	ldrd	r6, [sp, #8]
   17a90:	ldr	r8, [sp, #16]
   17a94:	ldr	lr, [sp, #20]
   17a98:	add	sp, sp, #24
   17a9c:	b	129b8 <sprintf@plt+0x1410>
   17aa0:	andeq	r3, r1, r0, lsl r6
   17aa4:	andeq	r0, r0, r4, ror #2
   17aa8:	andeq	r2, r0, r0, lsr #6
   17aac:	ldrdeq	r3, [r1], -r8
   17ab0:	ldr	r1, [pc, #44]	; 17ae4 <sprintf@plt+0x653c>
   17ab4:	ldr	r2, [pc, #44]	; 17ae8 <sprintf@plt+0x6540>
   17ab8:	ldr	r3, [r0, #464]	; 0x1d0
   17abc:	add	r1, pc, r1
   17ac0:	ldr	r2, [r1, r2]
   17ac4:	ldr	r2, [r2, #12]
   17ac8:	add	r3, r3, r2, lsl #4
   17acc:	ldr	r3, [r3, #8]
   17ad0:	cmp	r3, #0
   17ad4:	beq	17ae0 <sprintf@plt+0x6538>
   17ad8:	mov	r1, #1
   17adc:	b	179c0 <sprintf@plt+0x6418>
   17ae0:	bx	lr
   17ae4:	andeq	r3, r1, ip, lsr r5
   17ae8:	andeq	r0, r0, r4, ror #2
   17aec:	strd	r4, [sp, #-16]!
   17af0:	str	r6, [sp, #8]
   17af4:	ldr	r6, [pc, #128]	; 17b7c <sprintf@plt+0x65d4>
   17af8:	str	lr, [sp, #12]
   17afc:	sub	sp, sp, #8
   17b00:	ldr	r3, [pc, #120]	; 17b80 <sprintf@plt+0x65d8>
   17b04:	mov	r5, sp
   17b08:	mov	r1, r5
   17b0c:	add	r6, pc, r6
   17b10:	ldr	r4, [r6, r3]
   17b14:	ldr	r0, [r4]
   17b18:	bl	113bc <rb_dictionary_foreach_start@plt>
   17b1c:	b	17b4c <sprintf@plt+0x65a4>
   17b20:	ldr	r2, [r6, r2]
   17b24:	ldr	r3, [r3, #464]	; 0x1d0
   17b28:	ldr	r2, [r2, #12]
   17b2c:	add	r3, r3, r2, lsl #4
   17b30:	ldr	r3, [r3, #8]
   17b34:	cmp	r3, #0
   17b38:	beq	17b40 <sprintf@plt+0x6598>
   17b3c:	bl	179c0 <sprintf@plt+0x6418>
   17b40:	mov	r1, r5
   17b44:	ldr	r0, [r4]
   17b48:	bl	11374 <rb_dictionary_foreach_next@plt>
   17b4c:	mov	r1, r5
   17b50:	ldr	r0, [r4]
   17b54:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17b58:	subs	r3, r0, #0
   17b5c:	ldr	r2, [pc, #32]	; 17b84 <sprintf@plt+0x65dc>
   17b60:	mov	r1, #1
   17b64:	bne	17b20 <sprintf@plt+0x6578>
   17b68:	add	sp, sp, #8
   17b6c:	ldrd	r4, [sp]
   17b70:	ldr	r6, [sp, #8]
   17b74:	add	sp, sp, #12
   17b78:	pop	{pc}		; (ldr pc, [sp], #4)
   17b7c:	andeq	r3, r1, ip, ror #9
   17b80:	andeq	r0, r0, r4, asr r1
   17b84:	andeq	r0, r0, r4, ror #2
   17b88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17b8c:	eor	r1, r1, #1
   17b90:	strd	r6, [sp, #8]
   17b94:	cmp	r0, #0
   17b98:	movne	r6, r1
   17b9c:	orreq	r6, r1, #1
   17ba0:	ldr	r7, [pc, #268]	; 17cb4 <sprintf@plt+0x670c>
   17ba4:	cmp	r6, #0
   17ba8:	movne	r0, r3
   17bac:	movne	r1, #1
   17bb0:	str	r8, [sp, #16]
   17bb4:	str	lr, [sp, #20]
   17bb8:	add	r7, pc, r7
   17bbc:	bne	17c80 <sprintf@plt+0x66d8>
   17bc0:	mov	r5, r0
   17bc4:	mov	r4, r3
   17bc8:	bl	113d4 <strlen@plt>
   17bcc:	cmp	r0, #63	; 0x3f
   17bd0:	bhi	17c78 <sprintf@plt+0x66d0>
   17bd4:	add	r3, r4, #376	; 0x178
   17bd8:	mov	r1, r5
   17bdc:	mov	r0, r3
   17be0:	mov	r2, #64	; 0x40
   17be4:	mov	r5, r3
   17be8:	bl	1135c <rb_strlcpy@plt>
   17bec:	ldr	r0, [pc, #196]	; 17cb8 <sprintf@plt+0x6710>
   17bf0:	mov	r2, r5
   17bf4:	ldr	r3, [r4, #464]	; 0x1d0
   17bf8:	ldr	r1, [pc, #188]	; 17cbc <sprintf@plt+0x6714>
   17bfc:	ldr	r5, [r7, r0]
   17c00:	ldr	r0, [r4]
   17c04:	add	r1, pc, r1
   17c08:	ldr	ip, [r5, #12]
   17c0c:	add	r3, r3, ip, lsl #4
   17c10:	ldr	r7, [r3, #8]
   17c14:	bl	12320 <sprintf@plt+0xd78>
   17c18:	ldr	r0, [r7]
   17c1c:	bl	12018 <sprintf@plt+0xa70>
   17c20:	mov	r0, r7
   17c24:	bl	11380 <free@plt>
   17c28:	ldr	r1, [r5, #12]
   17c2c:	mov	r0, r4
   17c30:	ldr	r2, [r4, #464]	; 0x1d0
   17c34:	lsl	ip, r1, #4
   17c38:	add	r2, r2, ip
   17c3c:	str	r6, [r2, #8]
   17c40:	ldr	r3, [r4, #464]	; 0x1d0
   17c44:	add	r3, r3, ip
   17c48:	str	r6, [r3, #4]
   17c4c:	bl	12f14 <sprintf@plt+0x196c>
   17c50:	ldr	r3, [r4, #460]	; 0x1cc
   17c54:	sub	r3, r3, #1
   17c58:	cmp	r3, #0
   17c5c:	str	r3, [r4, #460]	; 0x1cc
   17c60:	beq	17c98 <sprintf@plt+0x66f0>
   17c64:	ldrd	r4, [sp]
   17c68:	ldrd	r6, [sp, #8]
   17c6c:	ldr	r8, [sp, #16]
   17c70:	add	sp, sp, #20
   17c74:	pop	{pc}		; (ldr pc, [sp], #4)
   17c78:	mov	r0, r4
   17c7c:	mov	r1, #2
   17c80:	ldrd	r4, [sp]
   17c84:	ldrd	r6, [sp, #8]
   17c88:	ldr	r8, [sp, #16]
   17c8c:	ldr	lr, [sp, #20]
   17c90:	add	sp, sp, #24
   17c94:	b	179c0 <sprintf@plt+0x6418>
   17c98:	mov	r0, r4
   17c9c:	ldrd	r4, [sp]
   17ca0:	ldrd	r6, [sp, #8]
   17ca4:	ldr	r8, [sp, #16]
   17ca8:	ldr	lr, [sp, #20]
   17cac:	add	sp, sp, #24
   17cb0:	b	129b8 <sprintf@plt+0x1410>
   17cb4:	andeq	r3, r1, r0, asr #8
   17cb8:	andeq	r0, r0, r4, ror #2
   17cbc:	andeq	r2, r0, r8, lsl #18
   17cc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17cc4:	mov	r1, #4
   17cc8:	mov	r4, r0
   17ccc:	ldr	r5, [pc, #168]	; 17d7c <sprintf@plt+0x67d4>
   17cd0:	mov	r0, #1
   17cd4:	strd	r6, [sp, #8]
   17cd8:	str	r8, [sp, #16]
   17cdc:	str	lr, [sp, #20]
   17ce0:	bl	112f0 <calloc@plt>
   17ce4:	subs	r7, r0, #0
   17ce8:	add	r5, pc, r5
   17cec:	beq	17d78 <sprintf@plt+0x67d0>
   17cf0:	ldr	r1, [r4, #460]	; 0x1cc
   17cf4:	ldr	r2, [pc, #132]	; 17d80 <sprintf@plt+0x67d8>
   17cf8:	ldr	r3, [r4, #464]	; 0x1d0
   17cfc:	add	r1, r1, #1
   17d00:	str	r1, [r4, #460]	; 0x1cc
   17d04:	ldr	r1, [r5, r2]
   17d08:	ldr	r2, [pc, #116]	; 17d84 <sprintf@plt+0x67dc>
   17d0c:	ldr	r5, [r1, #12]
   17d10:	add	r2, pc, r2
   17d14:	ldr	r6, [r2]
   17d18:	lsl	r5, r5, #4
   17d1c:	add	r3, r3, r5
   17d20:	str	r7, [r3, #8]
   17d24:	bl	113e0 <rb_current_time@plt>
   17d28:	ldr	r3, [r4, #464]	; 0x1d0
   17d2c:	add	r6, r6, r0
   17d30:	mov	r2, r4
   17d34:	add	r0, r4, #192	; 0xc0
   17d38:	ldr	r1, [pc, #72]	; 17d88 <sprintf@plt+0x67e0>
   17d3c:	add	r5, r3, r5
   17d40:	add	r1, pc, r1
   17d44:	str	r6, [r5, #4]
   17d48:	bl	11f18 <sprintf@plt+0x970>
   17d4c:	ldr	r1, [pc, #56]	; 17d8c <sprintf@plt+0x67e4>
   17d50:	str	r0, [r7]
   17d54:	ldr	r0, [r4]
   17d58:	add	r1, pc, r1
   17d5c:	bl	12320 <sprintf@plt+0xd78>
   17d60:	ldrd	r4, [sp]
   17d64:	mov	r0, #1
   17d68:	ldrd	r6, [sp, #8]
   17d6c:	ldr	r8, [sp, #16]
   17d70:	add	sp, sp, #20
   17d74:	pop	{pc}		; (ldr pc, [sp], #4)
   17d78:	bl	1147c <rb_outofmemory@plt>
   17d7c:	andeq	r3, r1, r0, lsl r3
   17d80:	andeq	r0, r0, r4, ror #2
   17d84:	andeq	r4, r1, r4, ror r1
   17d88:			; <UNDEFINED> instruction: 0xfffffe40
   17d8c:	ldrdeq	r2, [r0], -r0
   17d90:	ldr	r3, [pc, #244]	; 17e8c <sprintf@plt+0x68e4>
   17d94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d98:	ldr	r1, [pc, #240]	; 17e90 <sprintf@plt+0x68e8>
   17d9c:	ldr	r2, [r0, #464]	; 0x1d0
   17da0:	add	r3, pc, r3
   17da4:	strd	r6, [sp, #8]
   17da8:	str	r8, [sp, #16]
   17dac:	str	lr, [sp, #20]
   17db0:	ldr	r8, [r3, r1]
   17db4:	ldr	r3, [r8, #12]
   17db8:	add	r3, r2, r3, lsl #4
   17dbc:	ldr	r7, [r3, #8]
   17dc0:	cmp	r7, #0
   17dc4:	beq	17e5c <sprintf@plt+0x68b4>
   17dc8:	ldr	r1, [pc, #196]	; 17e94 <sprintf@plt+0x68ec>
   17dcc:	mov	r6, r0
   17dd0:	ldr	r0, [r0]
   17dd4:	add	r1, pc, r1
   17dd8:	bl	12320 <sprintf@plt+0xd78>
   17ddc:	ldr	r3, [r7]
   17de0:	cmp	r3, #0
   17de4:	beq	17e14 <sprintf@plt+0x686c>
   17de8:	ldr	r4, [r3, #8]
   17dec:	ldr	r5, [r3]
   17df0:	ldr	r0, [r5, #4]
   17df4:	bl	11410 <rb_close@plt>
   17df8:	mov	r0, r5
   17dfc:	bl	11380 <free@plt>
   17e00:	cmp	r4, #0
   17e04:	mov	r3, r4
   17e08:	beq	17e14 <sprintf@plt+0x686c>
   17e0c:	ldr	r4, [r4, #8]
   17e10:	b	17dec <sprintf@plt+0x6844>
   17e14:	mov	r0, r7
   17e18:	bl	11380 <free@plt>
   17e1c:	ldr	r1, [r8, #12]
   17e20:	mov	ip, #0
   17e24:	mov	r0, r6
   17e28:	ldr	r2, [r6, #464]	; 0x1d0
   17e2c:	lsl	lr, r1, #4
   17e30:	add	r2, r2, lr
   17e34:	str	ip, [r2, #8]
   17e38:	ldr	r3, [r6, #464]	; 0x1d0
   17e3c:	add	r3, r3, lr
   17e40:	str	ip, [r3, #4]
   17e44:	bl	12f14 <sprintf@plt+0x196c>
   17e48:	ldr	r3, [r6, #460]	; 0x1cc
   17e4c:	sub	r3, r3, #1
   17e50:	cmp	r3, #0
   17e54:	str	r3, [r6, #460]	; 0x1cc
   17e58:	beq	17e70 <sprintf@plt+0x68c8>
   17e5c:	ldrd	r4, [sp]
   17e60:	ldrd	r6, [sp, #8]
   17e64:	ldr	r8, [sp, #16]
   17e68:	add	sp, sp, #20
   17e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e70:	mov	r0, r6
   17e74:	ldrd	r4, [sp]
   17e78:	ldrd	r6, [sp, #8]
   17e7c:	ldr	r8, [sp, #16]
   17e80:	ldr	lr, [sp, #20]
   17e84:	add	sp, sp, #24
   17e88:	b	129b8 <sprintf@plt+0x1410>
   17e8c:	andeq	r3, r1, r8, asr r2
   17e90:	andeq	r0, r0, r0, lsl #3
   17e94:	andeq	r2, r0, r0, lsl #16
   17e98:	ldr	r3, [pc, #92]	; 17efc <sprintf@plt+0x6954>
   17e9c:	strd	r4, [sp, #-12]!
   17ea0:	ldr	r2, [pc, #88]	; 17f00 <sprintf@plt+0x6958>
   17ea4:	str	lr, [sp, #8]
   17ea8:	sub	sp, sp, #12
   17eac:	mov	r5, sp
   17eb0:	add	r3, pc, r3
   17eb4:	mov	r1, r5
   17eb8:	ldr	r4, [r3, r2]
   17ebc:	ldr	r0, [r4]
   17ec0:	bl	113bc <rb_dictionary_foreach_start@plt>
   17ec4:	b	17ed8 <sprintf@plt+0x6930>
   17ec8:	bl	17d90 <sprintf@plt+0x67e8>
   17ecc:	mov	r1, r5
   17ed0:	ldr	r0, [r4]
   17ed4:	bl	11374 <rb_dictionary_foreach_next@plt>
   17ed8:	mov	r1, r5
   17edc:	ldr	r0, [r4]
   17ee0:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17ee4:	cmp	r0, #0
   17ee8:	bne	17ec8 <sprintf@plt+0x6920>
   17eec:	add	sp, sp, #12
   17ef0:	ldrd	r4, [sp]
   17ef4:	add	sp, sp, #8
   17ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   17efc:	andeq	r3, r1, r8, asr #2
   17f00:	andeq	r0, r0, r4, asr r1
   17f04:	mov	r1, #0
   17f08:	str	r4, [sp, #-8]!
   17f0c:	ldr	r0, [r2]
   17f10:	mov	r2, #10
   17f14:	str	lr, [sp, #4]
   17f18:	bl	1141c <strtol@plt>
   17f1c:	subs	r2, r0, #0
   17f20:	blt	17f3c <sprintf@plt+0x6994>
   17f24:	ldr	r3, [pc, #44]	; 17f58 <sprintf@plt+0x69b0>
   17f28:	ldr	r4, [sp]
   17f2c:	add	sp, sp, #4
   17f30:	add	r3, pc, r3
   17f34:	str	r2, [r3]
   17f38:	pop	{pc}		; (ldr pc, [sp], #4)
   17f3c:	ldr	r1, [pc, #24]	; 17f5c <sprintf@plt+0x69b4>
   17f40:	mov	r0, #67	; 0x43
   17f44:	ldr	r4, [sp]
   17f48:	ldr	lr, [sp, #4]
   17f4c:	add	sp, sp, #8
   17f50:	add	r1, pc, r1
   17f54:	b	123a0 <sprintf@plt+0xdf8>
   17f58:	andeq	r3, r1, ip, lsr #31
   17f5c:	andeq	r2, r0, r4, lsr #13
   17f60:	ldr	r3, [pc, #80]	; 17fb8 <sprintf@plt+0x6a10>
   17f64:	str	r4, [sp, #-8]!
   17f68:	add	r3, pc, r3
   17f6c:	ldr	r0, [r3, #184]	; 0xb8
   17f70:	str	lr, [sp, #4]
   17f74:	cmp	r0, #0
   17f78:	beq	17f80 <sprintf@plt+0x69d8>
   17f7c:	bl	11410 <rb_close@plt>
   17f80:	ldr	r3, [pc, #52]	; 17fbc <sprintf@plt+0x6a14>
   17f84:	add	r3, pc, r3
   17f88:	ldr	r0, [r3, #372]	; 0x174
   17f8c:	cmp	r0, #0
   17f90:	beq	17f98 <sprintf@plt+0x69f0>
   17f94:	bl	11410 <rb_close@plt>
   17f98:	ldr	r0, [pc, #32]	; 17fc0 <sprintf@plt+0x6a18>
   17f9c:	mov	r2, #376	; 0x178
   17fa0:	mov	r1, #0
   17fa4:	ldr	r4, [sp]
   17fa8:	ldr	lr, [sp, #4]
   17fac:	add	sp, sp, #8
   17fb0:	add	r0, pc, r0
   17fb4:	b	11320 <memset@plt>
   17fb8:	strheq	r8, [r1], -ip
   17fbc:	andeq	r8, r1, r0, lsr #1
   17fc0:	andeq	r8, r1, r4, ror r0
   17fc4:	strd	r4, [sp, #-16]!
   17fc8:	cmp	r1, #0
   17fcc:	mov	r2, #128	; 0x80
   17fd0:	str	r6, [sp, #8]
   17fd4:	movne	r1, #1
   17fd8:	mov	r6, r0
   17fdc:	str	lr, [sp, #12]
   17fe0:	sub	sp, sp, #144	; 0x90
   17fe4:	ldr	r3, [sp, #160]	; 0xa0
   17fe8:	str	r2, [sp, #4]
   17fec:	ldr	r4, [pc, #324]	; 18138 <sprintf@plt+0x6b90>
   17ff0:	clz	r3, r3
   17ff4:	lsr	r3, r3, #5
   17ff8:	add	r4, pc, r4
   17ffc:	moveq	r1, r3
   18000:	cmp	r1, #0
   18004:	bne	180e8 <sprintf@plt+0x6b40>
   18008:	bl	11278 <rb_get_fd@plt>
   1800c:	add	r2, sp, #4
   18010:	add	r1, sp, #16
   18014:	bl	11218 <getsockname@plt>
   18018:	cmp	r0, #0
   1801c:	bne	180e8 <sprintf@plt+0x6b40>
   18020:	ldr	r3, [pc, #276]	; 1813c <sprintf@plt+0x6b94>
   18024:	add	r5, sp, #8
   18028:	mov	r1, r5
   1802c:	ldr	r4, [r4, r3]
   18030:	ldr	r0, [r4]
   18034:	bl	113bc <rb_dictionary_foreach_start@plt>
   18038:	b	18058 <sprintf@plt+0x6ab0>
   1803c:	ldr	r2, [sp, #20]
   18040:	ldr	r3, [r0, #252]	; 0xfc
   18044:	cmp	r2, r3
   18048:	beq	18104 <sprintf@plt+0x6b5c>
   1804c:	mov	r1, r5
   18050:	ldr	r0, [r4]
   18054:	bl	11374 <rb_dictionary_foreach_next@plt>
   18058:	mov	r1, r5
   1805c:	ldr	r0, [r4]
   18060:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   18064:	cmp	r0, #0
   18068:	beq	180e8 <sprintf@plt+0x6b40>
   1806c:	ldrh	r3, [sp, #16]
   18070:	ldrh	r2, [r0, #248]	; 0xf8
   18074:	cmp	r2, r3
   18078:	bne	1804c <sprintf@plt+0x6aa4>
   1807c:	cmp	r2, #2
   18080:	beq	1803c <sprintf@plt+0x6a94>
   18084:	cmp	r2, #10
   18088:	bne	18120 <sprintf@plt+0x6b78>
   1808c:	ldr	r2, [sp, #24]
   18090:	ldr	r3, [r0, #256]	; 0x100
   18094:	cmp	r2, r3
   18098:	bne	1804c <sprintf@plt+0x6aa4>
   1809c:	ldr	r2, [sp, #28]
   180a0:	ldr	r3, [r0, #260]	; 0x104
   180a4:	cmp	r2, r3
   180a8:	bne	1804c <sprintf@plt+0x6aa4>
   180ac:	ldr	r2, [sp, #32]
   180b0:	ldr	r3, [r0, #264]	; 0x108
   180b4:	cmp	r2, r3
   180b8:	bne	1804c <sprintf@plt+0x6aa4>
   180bc:	ldr	r2, [sp, #36]	; 0x24
   180c0:	ldr	r3, [r0, #268]	; 0x10c
   180c4:	cmp	r2, r3
   180c8:	bne	1804c <sprintf@plt+0x6aa4>
   180cc:	ldr	r2, [pc, #108]	; 18140 <sprintf@plt+0x6b98>
   180d0:	mov	r3, r0
   180d4:	mov	r1, #1
   180d8:	mov	r0, r6
   180dc:	add	r2, pc, r2
   180e0:	bl	1126c <rb_setselect@plt>
   180e4:	b	180f0 <sprintf@plt+0x6b48>
   180e8:	mov	r0, r6
   180ec:	bl	11410 <rb_close@plt>
   180f0:	add	sp, sp, #144	; 0x90
   180f4:	ldrd	r4, [sp]
   180f8:	ldr	r6, [sp, #8]
   180fc:	add	sp, sp, #12
   18100:	pop	{pc}		; (ldr pc, [sp], #4)
   18104:	ldr	r2, [pc, #56]	; 18144 <sprintf@plt+0x6b9c>
   18108:	mov	r3, r0
   1810c:	mov	r1, #1
   18110:	mov	r0, r6
   18114:	add	r2, pc, r2
   18118:	bl	1126c <rb_setselect@plt>
   1811c:	b	180f0 <sprintf@plt+0x6b48>
   18120:	ldr	r1, [pc, #32]	; 18148 <sprintf@plt+0x6ba0>
   18124:	mov	r0, #67	; 0x43
   18128:	add	r1, pc, r1
   1812c:	bl	123a0 <sprintf@plt+0xdf8>
   18130:	mov	r0, #3
   18134:	bl	11590 <exit@plt>
   18138:	andeq	r3, r1, r0
   1813c:	andeq	r0, r0, r4, asr r1
   18140:	andeq	r0, r0, r8, rrx
   18144:	andeq	r0, r0, r0, lsr r0
   18148:	strdeq	r2, [r0], -r0
   1814c:	ldr	r3, [pc, #328]	; 1829c <sprintf@plt+0x6cf4>
   18150:	mov	r2, #128	; 0x80
   18154:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18158:	strd	r6, [sp, #8]
   1815c:	mov	r7, r1
   18160:	str	lr, [sp, #28]
   18164:	ldr	lr, [pc, #308]	; 182a0 <sprintf@plt+0x6cf8>
   18168:	add	r3, pc, r3
   1816c:	strd	r8, [sp, #16]
   18170:	str	sl, [sp, #24]
   18174:	sub	sp, sp, #128	; 0x80
   18178:	mov	sl, r0
   1817c:	ldr	ip, [r7, #464]	; 0x1d0
   18180:	mov	r6, sp
   18184:	mov	r1, r6
   18188:	ldr	r8, [r3, lr]
   1818c:	ldr	r3, [r8, #12]
   18190:	add	r3, ip, r3, lsl #4
   18194:	ldr	r9, [r3, #8]
   18198:	bl	11398 <rb_read@plt>
   1819c:	cmp	r0, #0
   181a0:	blt	1826c <sprintf@plt+0x6cc4>
   181a4:	beq	18248 <sprintf@plt+0x6ca0>
   181a8:	ldr	r3, [pc, #244]	; 182a4 <sprintf@plt+0x6cfc>
   181ac:	add	r3, pc, r3
   181b0:	ldr	r4, [r3, #376]	; 0x178
   181b4:	cmp	r4, #0
   181b8:	bne	181cc <sprintf@plt+0x6c24>
   181bc:	b	18248 <sprintf@plt+0x6ca0>
   181c0:	ldr	r4, [r4, #8]
   181c4:	cmp	r4, #0
   181c8:	beq	18248 <sprintf@plt+0x6ca0>
   181cc:	ldr	r5, [r4]
   181d0:	mov	r0, r5
   181d4:	bl	113d4 <strlen@plt>
   181d8:	mov	r2, r0
   181dc:	mov	r1, r6
   181e0:	mov	r0, r5
   181e4:	bl	11554 <strncmp@plt>
   181e8:	cmp	r0, #0
   181ec:	bne	181c0 <sprintf@plt+0x6c18>
   181f0:	ldr	r3, [r9]
   181f4:	cmp	r3, #0
   181f8:	beq	18228 <sprintf@plt+0x6c80>
   181fc:	ldr	r4, [r3, #8]
   18200:	ldr	r5, [r3]
   18204:	ldr	r0, [r5, #4]
   18208:	bl	11410 <rb_close@plt>
   1820c:	mov	r0, r5
   18210:	bl	11380 <free@plt>
   18214:	cmp	r4, #0
   18218:	mov	r3, r4
   1821c:	beq	18228 <sprintf@plt+0x6c80>
   18220:	ldr	r4, [r4, #8]
   18224:	b	18200 <sprintf@plt+0x6c58>
   18228:	mov	r0, r9
   1822c:	bl	11380 <free@plt>
   18230:	ldr	r3, [pc, #112]	; 182a8 <sprintf@plt+0x6d00>
   18234:	mov	r2, r6
   18238:	mov	r0, r7
   1823c:	ldr	r1, [r8, #12]
   18240:	add	r3, pc, r3
   18244:	bl	12bcc <sprintf@plt+0x1624>
   18248:	mov	r0, sl
   1824c:	bl	11410 <rb_close@plt>
   18250:	add	sp, sp, #128	; 0x80
   18254:	ldrd	r4, [sp]
   18258:	ldrd	r6, [sp, #8]
   1825c:	ldrd	r8, [sp, #16]
   18260:	ldr	sl, [sp, #24]
   18264:	add	sp, sp, #28
   18268:	pop	{pc}		; (ldr pc, [sp], #4)
   1826c:	bl	1159c <__errno_location@plt>
   18270:	ldr	r0, [r0]
   18274:	bl	11224 <rb_ignore_errno@plt>
   18278:	cmp	r0, #0
   1827c:	beq	18248 <sprintf@plt+0x6ca0>
   18280:	ldr	r2, [pc, #36]	; 182ac <sprintf@plt+0x6d04>
   18284:	mov	r3, r7
   18288:	mov	r0, sl
   1828c:	mov	r1, #1
   18290:	add	r2, pc, r2
   18294:	bl	1126c <rb_setselect@plt>
   18298:	b	18250 <sprintf@plt+0x6ca8>
   1829c:	muleq	r1, r0, lr
   182a0:	andeq	r0, r0, r0, lsl #3
   182a4:	andeq	r7, r1, r8, ror lr
   182a8:	andeq	r2, r0, r8, lsl #8
   182ac:			; <UNDEFINED> instruction: 0xfffffeb4
   182b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   182b4:	mov	r3, #1
   182b8:	strd	r6, [sp, #8]
   182bc:	ldr	r7, [pc, #816]	; 185f4 <sprintf@plt+0x704c>
   182c0:	strd	r8, [sp, #16]
   182c4:	mov	r9, r1
   182c8:	strd	sl, [sp, #24]
   182cc:	mov	sl, r0
   182d0:	str	lr, [sp, #32]
   182d4:	sub	sp, sp, #156	; 0x9c
   182d8:	add	r8, sp, #24
   182dc:	mov	r1, r8
   182e0:	str	r3, [sp, #12]
   182e4:	add	r7, pc, r7
   182e8:	bl	113c8 <rb_inet_pton_sock@plt>
   182ec:	cmp	r0, #0
   182f0:	beq	18584 <sprintf@plt+0x6fdc>
   182f4:	ldrh	r0, [sp, #24]
   182f8:	rev16	r3, r9
   182fc:	uxth	r1, r3
   18300:	cmp	r0, #2
   18304:	beq	18494 <sprintf@plt+0x6eec>
   18308:	cmp	r0, #10
   1830c:	strh	r3, [sp, #26]
   18310:	bne	18470 <sprintf@plt+0x6ec8>
   18314:	ldr	r6, [pc, #732]	; 185f8 <sprintf@plt+0x7050>
   18318:	ldr	r2, [sp, #32]
   1831c:	add	r6, pc, r6
   18320:	ldr	r3, [r6, #252]	; 0xfc
   18324:	cmp	r2, r3
   18328:	beq	18538 <sprintf@plt+0x6f90>
   1832c:	add	r6, r6, #188	; 0xbc
   18330:	ldr	r3, [pc, #708]	; 185fc <sprintf@plt+0x7054>
   18334:	mov	r2, #0
   18338:	mov	r1, #1
   1833c:	add	r3, pc, r3
   18340:	bl	1129c <rb_socket@plt>
   18344:	subs	fp, r0, #0
   18348:	beq	185a4 <sprintf@plt+0x6ffc>
   1834c:	bl	11278 <rb_get_fd@plt>
   18350:	mov	ip, #4
   18354:	add	r3, sp, #12
   18358:	mov	r2, #2
   1835c:	mov	r1, #1
   18360:	str	ip, [sp]
   18364:	bl	1156c <setsockopt@plt>
   18368:	subs	r4, r0, #0
   1836c:	bne	185cc <sprintf@plt+0x7024>
   18370:	mov	r0, fp
   18374:	bl	11278 <rb_get_fd@plt>
   18378:	ldrh	r3, [sp, #24]
   1837c:	mov	r1, r8
   18380:	cmp	r3, #2
   18384:	moveq	r2, #16
   18388:	movne	r2, #28
   1838c:	bl	11440 <bind@plt>
   18390:	subs	r5, r0, #0
   18394:	bne	184d8 <sprintf@plt+0x6f30>
   18398:	mov	r2, r5
   1839c:	mov	r1, #128	; 0x80
   183a0:	mov	r0, fp
   183a4:	bl	11548 <rb_listen@plt>
   183a8:	cmp	r0, #0
   183ac:	bne	18508 <sprintf@plt+0x6f60>
   183b0:	ldr	r0, [r6, #184]	; 0xb8
   183b4:	cmp	r0, #0
   183b8:	beq	183c0 <sprintf@plt+0x6e18>
   183bc:	bl	11410 <rb_close@plt>
   183c0:	ldr	r3, [pc, #568]	; 18600 <sprintf@plt+0x7058>
   183c4:	add	r5, sp, #16
   183c8:	str	fp, [r6, #184]	; 0xb8
   183cc:	mov	r1, r5
   183d0:	ldr	r4, [r7, r3]
   183d4:	ldr	r0, [r4]
   183d8:	bl	113bc <rb_dictionary_foreach_start@plt>
   183dc:	b	183f0 <sprintf@plt+0x6e48>
   183e0:	bl	17d90 <sprintf@plt+0x67e8>
   183e4:	mov	r1, r5
   183e8:	ldr	r0, [r4]
   183ec:	bl	11374 <rb_dictionary_foreach_next@plt>
   183f0:	mov	r1, r5
   183f4:	ldr	r0, [r4]
   183f8:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   183fc:	subs	r7, r0, #0
   18400:	bne	183e0 <sprintf@plt+0x6e38>
   18404:	mov	r1, sl
   18408:	mov	r2, #53	; 0x35
   1840c:	mov	r0, r6
   18410:	mov	r4, #1
   18414:	bl	1135c <rb_strlcpy@plt>
   18418:	mov	r1, r8
   1841c:	mov	r2, #128	; 0x80
   18420:	strh	r9, [r6, #54]	; 0x36
   18424:	add	r0, r6, #56	; 0x38
   18428:	bl	113f8 <memcpy@plt>
   1842c:	ldr	ip, [pc, #464]	; 18604 <sprintf@plt+0x705c>
   18430:	mov	r1, r7
   18434:	mov	r3, r6
   18438:	ldr	r2, [pc, #456]	; 18608 <sprintf@plt+0x7060>
   1843c:	ldr	r0, [r6, #184]	; 0xb8
   18440:	add	ip, pc, ip
   18444:	add	r2, pc, r2
   18448:	strb	r4, [ip, #388]	; 0x184
   1844c:	bl	11500 <rb_accept_tcp@plt>
   18450:	mov	r0, r4
   18454:	add	sp, sp, #156	; 0x9c
   18458:	ldrd	r4, [sp]
   1845c:	ldrd	r6, [sp, #8]
   18460:	ldrd	r8, [sp, #16]
   18464:	ldrd	sl, [sp, #24]
   18468:	add	sp, sp, #32
   1846c:	pop	{pc}		; (ldr pc, [sp], #4)
   18470:	ldr	r3, [pc, #404]	; 1860c <sprintf@plt+0x7064>
   18474:	ldr	r2, [sp, #28]
   18478:	add	r3, pc, r3
   1847c:	ldr	r3, [r3, #60]	; 0x3c
   18480:	cmp	r2, r3
   18484:	beq	184b0 <sprintf@plt+0x6f08>
   18488:	ldr	r6, [pc, #384]	; 18610 <sprintf@plt+0x7068>
   1848c:	add	r6, pc, r6
   18490:	b	18330 <sprintf@plt+0x6d88>
   18494:	ldr	r2, [pc, #376]	; 18614 <sprintf@plt+0x706c>
   18498:	strh	r3, [sp, #26]
   1849c:	ldr	ip, [sp, #28]
   184a0:	add	r2, pc, r2
   184a4:	ldr	r3, [r2, #60]	; 0x3c
   184a8:	cmp	r3, ip
   184ac:	bne	18488 <sprintf@plt+0x6ee0>
   184b0:	ldr	r3, [pc, #352]	; 18618 <sprintf@plt+0x7070>
   184b4:	add	r3, pc, r3
   184b8:	ldrh	r2, [r3, #58]	; 0x3a
   184bc:	cmp	r1, r2
   184c0:	bne	18488 <sprintf@plt+0x6ee0>
   184c4:	ldr	r3, [r3, #184]	; 0xb8
   184c8:	cmp	r3, #0
   184cc:	beq	18488 <sprintf@plt+0x6ee0>
   184d0:	mov	r0, #0
   184d4:	b	18454 <sprintf@plt+0x6eac>
   184d8:	bl	1159c <__errno_location@plt>
   184dc:	ldr	r0, [r0]
   184e0:	bl	111e8 <strerror@plt>
   184e4:	ldr	r1, [pc, #304]	; 1861c <sprintf@plt+0x7074>
   184e8:	mov	r2, r0
   184ec:	mov	r0, #87	; 0x57
   184f0:	add	r1, pc, r1
   184f4:	bl	123a0 <sprintf@plt+0xdf8>
   184f8:	mov	r0, fp
   184fc:	bl	11410 <rb_close@plt>
   18500:	mov	r0, r4
   18504:	b	18454 <sprintf@plt+0x6eac>
   18508:	bl	1159c <__errno_location@plt>
   1850c:	ldr	r0, [r0]
   18510:	bl	111e8 <strerror@plt>
   18514:	ldr	r1, [pc, #260]	; 18620 <sprintf@plt+0x7078>
   18518:	mov	r2, r0
   1851c:	mov	r0, #87	; 0x57
   18520:	add	r1, pc, r1
   18524:	bl	123a0 <sprintf@plt+0xdf8>
   18528:	mov	r0, fp
   1852c:	bl	11410 <rb_close@plt>
   18530:	mov	r0, r5
   18534:	b	18454 <sprintf@plt+0x6eac>
   18538:	ldr	r2, [sp, #36]	; 0x24
   1853c:	ldr	r3, [r6, #256]	; 0x100
   18540:	cmp	r2, r3
   18544:	bne	1832c <sprintf@plt+0x6d84>
   18548:	ldr	r2, [sp, #40]	; 0x28
   1854c:	ldr	r3, [r6, #260]	; 0x104
   18550:	cmp	r2, r3
   18554:	bne	1832c <sprintf@plt+0x6d84>
   18558:	ldr	r2, [sp, #44]	; 0x2c
   1855c:	ldr	r3, [r6, #264]	; 0x108
   18560:	cmp	r2, r3
   18564:	bne	1832c <sprintf@plt+0x6d84>
   18568:	ldrh	r3, [r6, #246]	; 0xf6
   1856c:	cmp	r3, r1
   18570:	bne	1832c <sprintf@plt+0x6d84>
   18574:	ldr	r3, [r6, #372]	; 0x174
   18578:	cmp	r3, #0
   1857c:	bne	184d0 <sprintf@plt+0x6f28>
   18580:	b	1832c <sprintf@plt+0x6d84>
   18584:	ldr	r1, [pc, #152]	; 18624 <sprintf@plt+0x707c>
   18588:	mov	r0, #67	; 0x43
   1858c:	mov	r3, r9
   18590:	mov	r2, sl
   18594:	add	r1, pc, r1
   18598:	bl	123a0 <sprintf@plt+0xdf8>
   1859c:	mov	r0, #3
   185a0:	bl	11590 <exit@plt>
   185a4:	bl	1159c <__errno_location@plt>
   185a8:	ldr	r0, [r0]
   185ac:	bl	111e8 <strerror@plt>
   185b0:	ldr	r1, [pc, #112]	; 18628 <sprintf@plt+0x7080>
   185b4:	mov	r2, r0
   185b8:	mov	r0, #67	; 0x43
   185bc:	add	r1, pc, r1
   185c0:	bl	123a0 <sprintf@plt+0xdf8>
   185c4:	mov	r0, #3
   185c8:	bl	11590 <exit@plt>
   185cc:	bl	1159c <__errno_location@plt>
   185d0:	ldr	r0, [r0]
   185d4:	bl	111e8 <strerror@plt>
   185d8:	ldr	r1, [pc, #76]	; 1862c <sprintf@plt+0x7084>
   185dc:	mov	r2, r0
   185e0:	mov	r0, #67	; 0x43
   185e4:	add	r1, pc, r1
   185e8:	bl	123a0 <sprintf@plt+0xdf8>
   185ec:	mov	r0, #3
   185f0:	bl	11590 <exit@plt>
   185f4:	andeq	r2, r1, r4, lsl sp
   185f8:	andeq	r7, r1, r8, lsl #26
   185fc:	andeq	r2, r0, r0, asr #6
   18600:	andeq	r0, r0, r4, asr r1
   18604:	andeq	r7, r1, r4, ror #23
   18608:			; <UNDEFINED> instruction: 0xfffffb78
   1860c:	andeq	r7, r1, ip, lsr #23
   18610:	muleq	r1, r8, fp
   18614:	andeq	r7, r1, r4, lsl #23
   18618:	andeq	r7, r1, r0, ror fp
   1861c:	andeq	r2, r0, r8, ror #3
   18620:	ldrdeq	r2, [r0], -r8
   18624:	andeq	r2, r0, r8, asr #1
   18628:	ldrdeq	r2, [r0], -r4
   1862c:	andeq	r2, r0, ip, asr #1
   18630:	ldr	r3, [r2]
   18634:	strd	r4, [sp, #-16]!
   18638:	str	r6, [sp, #8]
   1863c:	str	lr, [sp, #12]
   18640:	sub	sp, sp, #8
   18644:	ldr	r4, [pc, #300]	; 18778 <sprintf@plt+0x71d0>
   18648:	ldrb	r3, [r3]
   1864c:	add	r4, pc, r4
   18650:	cmp	r3, #49	; 0x31
   18654:	moveq	r6, #1
   18658:	movne	r6, #0
   1865c:	beq	186f8 <sprintf@plt+0x7150>
   18660:	ldr	r5, [pc, #276]	; 1877c <sprintf@plt+0x71d4>
   18664:	add	r5, pc, r5
   18668:	ldr	r0, [r5, #184]	; 0xb8
   1866c:	cmp	r0, #0
   18670:	beq	1875c <sprintf@plt+0x71b4>
   18674:	bl	11410 <rb_close@plt>
   18678:	ldr	r0, [r5, #372]	; 0x174
   1867c:	cmp	r0, #0
   18680:	bne	18768 <sprintf@plt+0x71c0>
   18684:	ldr	r3, [pc, #244]	; 18780 <sprintf@plt+0x71d8>
   18688:	mov	r0, #0
   1868c:	mov	r5, sp
   18690:	mov	r1, r5
   18694:	ldr	r2, [pc, #232]	; 18784 <sprintf@plt+0x71dc>
   18698:	add	r3, pc, r3
   1869c:	str	r0, [r3, #184]	; 0xb8
   186a0:	str	r0, [r3, #372]	; 0x174
   186a4:	ldr	r4, [r4, r2]
   186a8:	ldr	r0, [r4]
   186ac:	bl	113bc <rb_dictionary_foreach_start@plt>
   186b0:	b	186c4 <sprintf@plt+0x711c>
   186b4:	bl	17d90 <sprintf@plt+0x67e8>
   186b8:	mov	r1, r5
   186bc:	ldr	r0, [r4]
   186c0:	bl	11374 <rb_dictionary_foreach_next@plt>
   186c4:	mov	r1, r5
   186c8:	ldr	r0, [r4]
   186cc:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   186d0:	cmp	r0, #0
   186d4:	bne	186b4 <sprintf@plt+0x710c>
   186d8:	ldr	r3, [pc, #168]	; 18788 <sprintf@plt+0x71e0>
   186dc:	add	r3, pc, r3
   186e0:	strb	r6, [r3, #388]	; 0x184
   186e4:	add	sp, sp, #8
   186e8:	ldrd	r4, [sp]
   186ec:	ldr	r6, [sp, #8]
   186f0:	add	sp, sp, #12
   186f4:	pop	{pc}		; (ldr pc, [sp], #4)
   186f8:	ldr	r0, [pc, #140]	; 1878c <sprintf@plt+0x71e4>
   186fc:	add	r0, pc, r0
   18700:	ldrb	r3, [r0]
   18704:	cmp	r3, #0
   18708:	beq	18724 <sprintf@plt+0x717c>
   1870c:	ldrh	r1, [r0, #54]	; 0x36
   18710:	cmp	r1, #0
   18714:	beq	18724 <sprintf@plt+0x717c>
   18718:	ldr	r3, [r0, #184]	; 0xb8
   1871c:	cmp	r3, #0
   18720:	beq	18770 <sprintf@plt+0x71c8>
   18724:	ldr	r0, [pc, #100]	; 18790 <sprintf@plt+0x71e8>
   18728:	add	r0, pc, r0
   1872c:	ldrb	r3, [r0, #188]	; 0xbc
   18730:	cmp	r3, #0
   18734:	beq	186d8 <sprintf@plt+0x7130>
   18738:	ldrh	r1, [r0, #242]	; 0xf2
   1873c:	cmp	r1, #0
   18740:	beq	186d8 <sprintf@plt+0x7130>
   18744:	ldr	r3, [r0, #372]	; 0x174
   18748:	cmp	r3, #0
   1874c:	bne	186d8 <sprintf@plt+0x7130>
   18750:	add	r0, r0, #188	; 0xbc
   18754:	bl	182b0 <sprintf@plt+0x6d08>
   18758:	b	186d8 <sprintf@plt+0x7130>
   1875c:	ldr	r0, [r5, #372]	; 0x174
   18760:	cmp	r0, #0
   18764:	beq	186d8 <sprintf@plt+0x7130>
   18768:	bl	11410 <rb_close@plt>
   1876c:	b	18684 <sprintf@plt+0x70dc>
   18770:	bl	182b0 <sprintf@plt+0x6d08>
   18774:	b	18724 <sprintf@plt+0x717c>
   18778:	andeq	r2, r1, ip, lsr #19
   1877c:	andeq	r7, r1, r0, asr #19
   18780:	andeq	r7, r1, ip, lsl #19
   18784:	andeq	r0, r0, r4, asr r1
   18788:	andeq	r7, r1, r8, asr #18
   1878c:	andeq	r7, r1, r8, lsr #18
   18790:	strdeq	r7, [r1], -ip
   18794:	ldr	r3, [pc, #32]	; 187bc <sprintf@plt+0x7214>
   18798:	mov	r2, #236	; 0xec
   1879c:	str	r4, [sp, #-8]!
   187a0:	ldr	r1, [pc, #24]	; 187c0 <sprintf@plt+0x7218>
   187a4:	str	lr, [sp, #4]
   187a8:	ldr	r0, [pc, #20]	; 187c4 <sprintf@plt+0x721c>
   187ac:	add	r3, pc, r3
   187b0:	add	r1, pc, r1
   187b4:	add	r0, pc, r0
   187b8:	bl	11350 <__assert_fail@plt>
   187bc:	andeq	r1, r0, r4, lsl #28
   187c0:	andeq	r1, r0, r8, lsl r5
   187c4:	andeq	r1, r0, ip, lsl #19
   187c8:	ldr	r3, [pc, #560]	; 18a00 <sprintf@plt+0x7458>
   187cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   187d0:	mov	r5, r0
   187d4:	mov	r0, #1
   187d8:	ldr	ip, [pc, #548]	; 18a04 <sprintf@plt+0x745c>
   187dc:	ldr	r2, [r5, #464]	; 0x1d0
   187e0:	add	r3, pc, r3
   187e4:	strd	r6, [sp, #8]
   187e8:	mov	r6, r1
   187ec:	strd	r8, [sp, #16]
   187f0:	mov	r1, #28
   187f4:	strd	sl, [sp, #24]
   187f8:	str	lr, [sp, #32]
   187fc:	sub	sp, sp, #276	; 0x114
   18800:	ldr	r3, [r3, ip]
   18804:	ldr	r3, [r3, #12]
   18808:	add	r3, r2, r3, lsl #4
   1880c:	ldr	r7, [r3, #8]
   18810:	bl	112f0 <calloc@plt>
   18814:	subs	r4, r0, #0
   18818:	beq	189d8 <sprintf@plt+0x7430>
   1881c:	ldrh	sl, [r5, #248]	; 0xf8
   18820:	mov	r3, #1
   18824:	str	r3, [sp, #12]
   18828:	cmp	sl, #10
   1882c:	beq	18998 <sprintf@plt+0x73f0>
   18830:	ldr	r8, [pc, #464]	; 18a08 <sprintf@plt+0x7460>
   18834:	add	r8, pc, r8
   18838:	ldr	r3, [r8, #184]	; 0xb8
   1883c:	cmp	r3, #0
   18840:	beq	18974 <sprintf@plt+0x73cc>
   18844:	add	r9, sp, #16
   18848:	mov	r2, #128	; 0x80
   1884c:	add	r1, r5, #248	; 0xf8
   18850:	mov	r0, r9
   18854:	add	fp, sp, #144	; 0x90
   18858:	bl	113f8 <memcpy@plt>
   1885c:	mov	r2, #128	; 0x80
   18860:	add	r1, r8, #56	; 0x38
   18864:	mov	r0, fp
   18868:	bl	113f8 <memcpy@plt>
   1886c:	mov	r0, sl
   18870:	mov	r3, r6
   18874:	str	r5, [r4]
   18878:	mov	r2, #0
   1887c:	mov	r1, #1
   18880:	str	r6, [r4, #8]
   18884:	str	r8, [r4, #12]
   18888:	bl	1129c <rb_socket@plt>
   1888c:	cmp	r0, #0
   18890:	str	r0, [r4, #4]
   18894:	beq	18950 <sprintf@plt+0x73a8>
   18898:	bl	11278 <rb_get_fd@plt>
   1889c:	mov	ip, #4
   188a0:	add	r3, sp, #12
   188a4:	mov	r1, #6
   188a8:	mov	r2, #1
   188ac:	str	ip, [sp]
   188b0:	bl	1156c <setsockopt@plt>
   188b4:	mov	r3, #0
   188b8:	cmp	r7, #0
   188bc:	add	r1, r4, #16
   188c0:	strh	r3, [sp, #146]	; 0x92
   188c4:	ldrh	r3, [r6, #20]
   188c8:	rev16	r3, r3
   188cc:	strh	r3, [r9, #2]
   188d0:	beq	189dc <sprintf@plt+0x7434>
   188d4:	ldr	r3, [r7]
   188d8:	mov	r2, #0
   188dc:	str	r4, [r4, #16]
   188e0:	cmp	r3, r2
   188e4:	strd	r2, [r4, #20]
   188e8:	strne	r1, [r3, #4]
   188ec:	beq	189c8 <sprintf@plt+0x7420>
   188f0:	ldr	r3, [pc, #276]	; 18a0c <sprintf@plt+0x7464>
   188f4:	ldr	r2, [r7, #8]
   188f8:	ldr	r0, [r4, #4]
   188fc:	ldr	ip, [pc, r3]
   18900:	str	r1, [r7]
   18904:	add	r2, r2, #1
   18908:	ldrb	r1, [r6, #22]
   1890c:	str	r2, [r7, #8]
   18910:	mov	r2, fp
   18914:	str	r4, [sp]
   18918:	cmp	r1, #0
   1891c:	mov	r1, r9
   18920:	bne	189b4 <sprintf@plt+0x740c>
   18924:	ldr	r3, [pc, #228]	; 18a10 <sprintf@plt+0x7468>
   18928:	str	ip, [sp, #4]
   1892c:	add	r3, pc, r3
   18930:	bl	1123c <rb_connect_tcp@plt>
   18934:	add	sp, sp, #276	; 0x114
   18938:	ldrd	r4, [sp]
   1893c:	ldrd	r6, [sp, #8]
   18940:	ldrd	r8, [sp, #16]
   18944:	ldrd	sl, [sp, #24]
   18948:	add	sp, sp, #32
   1894c:	pop	{pc}		; (ldr pc, [sp], #4)
   18950:	bl	1159c <__errno_location@plt>
   18954:	ldr	r0, [r0]
   18958:	bl	111e8 <strerror@plt>
   1895c:	ldr	r1, [pc, #176]	; 18a14 <sprintf@plt+0x746c>
   18960:	mov	r3, r0
   18964:	mov	r2, r6
   18968:	mov	r0, #87	; 0x57
   1896c:	add	r1, pc, r1
   18970:	bl	123a0 <sprintf@plt+0xdf8>
   18974:	mov	r0, r4
   18978:	add	sp, sp, #276	; 0x114
   1897c:	ldrd	r4, [sp]
   18980:	ldrd	r6, [sp, #8]
   18984:	ldrd	r8, [sp, #16]
   18988:	ldrd	sl, [sp, #24]
   1898c:	ldr	lr, [sp, #32]
   18990:	add	sp, sp, #36	; 0x24
   18994:	b	11380 <free@plt>
   18998:	ldr	r3, [r6, #16]
   1899c:	cmp	r3, #1
   189a0:	beq	18978 <sprintf@plt+0x73d0>
   189a4:	ldr	r8, [pc, #108]	; 18a18 <sprintf@plt+0x7470>
   189a8:	add	r8, pc, r8
   189ac:	add	r8, r8, #188	; 0xbc
   189b0:	b	18838 <sprintf@plt+0x7290>
   189b4:	ldr	r3, [pc, #96]	; 18a1c <sprintf@plt+0x7474>
   189b8:	str	ip, [sp, #4]
   189bc:	add	r3, pc, r3
   189c0:	bl	11230 <rb_connect_tcp_ssl@plt>
   189c4:	b	18934 <sprintf@plt+0x738c>
   189c8:	ldr	r3, [r7, #4]
   189cc:	cmp	r3, #0
   189d0:	streq	r1, [r7, #4]
   189d4:	b	188f0 <sprintf@plt+0x7348>
   189d8:	bl	1147c <rb_outofmemory@plt>
   189dc:	ldr	r3, [pc, #60]	; 18a20 <sprintf@plt+0x7478>
   189e0:	mov	r2, #145	; 0x91
   189e4:	ldr	r1, [pc, #56]	; 18a24 <sprintf@plt+0x747c>
   189e8:	ldr	r0, [pc, #56]	; 18a28 <sprintf@plt+0x7480>
   189ec:	add	r3, pc, r3
   189f0:	add	r3, r3, #16
   189f4:	add	r1, pc, r1
   189f8:	add	r0, pc, r0
   189fc:	bl	11350 <__assert_fail@plt>
   18a00:	andeq	r2, r1, r8, lsl r8
   18a04:	andeq	r0, r0, r0, lsl #3
   18a08:	strdeq	r7, [r1], -r0
   18a0c:	andeq	r3, r1, r0, ror #11
   18a10:	andeq	r0, r0, r0, lsl #22
   18a14:			; <UNDEFINED> instruction: 0x00001db0
   18a18:	andeq	r7, r1, ip, ror r6
   18a1c:	andeq	r0, r0, r0, ror sl
   18a20:	andeq	r1, r0, r4, asr #23
   18a24:	ldrdeq	r1, [r0], -r4
   18a28:	andeq	r1, r0, r8, asr #14
   18a2c:	ldr	r3, [pc, #164]	; 18ad8 <sprintf@plt+0x7530>
   18a30:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18a34:	mov	r5, r0
   18a38:	ldr	r1, [pc, #156]	; 18adc <sprintf@plt+0x7534>
   18a3c:	ldr	r0, [pc, #156]	; 18ae0 <sprintf@plt+0x7538>
   18a40:	add	r3, pc, r3
   18a44:	ldr	r2, [r5, #464]	; 0x1d0
   18a48:	ldr	r4, [pc, r1]
   18a4c:	strd	r6, [sp, #8]
   18a50:	str	r8, [sp, #16]
   18a54:	str	lr, [sp, #20]
   18a58:	ldr	r0, [r3, r0]
   18a5c:	ldr	r6, [r0, #12]
   18a60:	lsl	r6, r6, #4
   18a64:	add	r3, r2, r6
   18a68:	ldr	r7, [r3, #8]
   18a6c:	bl	113e0 <rb_current_time@plt>
   18a70:	ldr	r2, [pc, #108]	; 18ae4 <sprintf@plt+0x753c>
   18a74:	add	r0, r4, r0
   18a78:	mov	r1, #1
   18a7c:	ldr	r3, [r5, #464]	; 0x1d0
   18a80:	add	r2, pc, r2
   18a84:	ldr	r4, [r2, #376]	; 0x178
   18a88:	add	r6, r3, r6
   18a8c:	str	r0, [r6, #4]
   18a90:	strb	r1, [r7, #12]
   18a94:	cmp	r4, #0
   18a98:	beq	18ab4 <sprintf@plt+0x750c>
   18a9c:	mov	r0, r5
   18aa0:	ldr	r1, [r4]
   18aa4:	bl	187c8 <sprintf@plt+0x7220>
   18aa8:	ldr	r4, [r4, #8]
   18aac:	cmp	r4, #0
   18ab0:	bne	18a9c <sprintf@plt+0x74f4>
   18ab4:	ldr	r1, [pc, #44]	; 18ae8 <sprintf@plt+0x7540>
   18ab8:	ldr	r0, [r5]
   18abc:	ldrd	r4, [sp]
   18ac0:	add	r1, pc, r1
   18ac4:	ldrd	r6, [sp, #8]
   18ac8:	ldr	r8, [sp, #16]
   18acc:	ldr	lr, [sp, #20]
   18ad0:	add	sp, sp, #24
   18ad4:	b	12320 <sprintf@plt+0xd78>
   18ad8:			; <UNDEFINED> instruction: 0x000125b8
   18adc:	muleq	r1, r4, r4
   18ae0:	andeq	r0, r0, r0, lsl #3
   18ae4:	andeq	r7, r1, r4, lsr #11
   18ae8:	andeq	r1, r0, ip, lsl #25
   18aec:	ldr	r3, [r0, #12]
   18af0:	mov	r1, #128	; 0x80
   18af4:	strd	r4, [sp, #-12]!
   18af8:	mov	r5, r0
   18afc:	ldr	r2, [pc, #148]	; 18b98 <sprintf@plt+0x75f0>
   18b00:	ldrh	ip, [r3, #54]	; 0x36
   18b04:	str	lr, [sp, #8]
   18b08:	sub	sp, sp, #140	; 0x8c
   18b0c:	add	r4, sp, #8
   18b10:	add	r2, pc, r2
   18b14:	mov	r0, r4
   18b18:	str	ip, [sp]
   18b1c:	bl	1153c <snprintf@plt>
   18b20:	mov	r0, r4
   18b24:	bl	113d4 <strlen@plt>
   18b28:	mov	r2, r0
   18b2c:	mov	r1, r4
   18b30:	ldr	r0, [r5, #4]
   18b34:	bl	11344 <rb_write@plt>
   18b38:	cmp	r0, #0
   18b3c:	ble	18b64 <sprintf@plt+0x75bc>
   18b40:	ldr	r4, [r5, #8]
   18b44:	mov	r0, r4
   18b48:	bl	113d4 <strlen@plt>
   18b4c:	add	r2, r0, #1
   18b50:	mov	r1, r4
   18b54:	ldr	r0, [r5, #4]
   18b58:	bl	11344 <rb_write@plt>
   18b5c:	cmp	r0, #0
   18b60:	bgt	18b74 <sprintf@plt+0x75cc>
   18b64:	add	sp, sp, #140	; 0x8c
   18b68:	ldrd	r4, [sp]
   18b6c:	add	sp, sp, #8
   18b70:	pop	{pc}		; (ldr pc, [sp], #4)
   18b74:	ldr	r1, [pc, #32]	; 18b9c <sprintf@plt+0x75f4>
   18b78:	mov	r2, #2
   18b7c:	ldr	r0, [r5, #4]
   18b80:	add	r1, pc, r1
   18b84:	bl	11344 <rb_write@plt>
   18b88:	add	sp, sp, #140	; 0x8c
   18b8c:	ldrd	r4, [sp]
   18b90:	add	sp, sp, #8
   18b94:	pop	{pc}		; (ldr pc, [sp], #4)
   18b98:	andeq	r1, r0, r0, ror #24
   18b9c:	andeq	r1, r0, r0, lsr r5
   18ba0:	ldr	r3, [pc, #228]	; 18c8c <sprintf@plt+0x76e4>
   18ba4:	strd	r4, [sp, #-12]!
   18ba8:	ldr	r2, [r0]
   18bac:	add	r3, pc, r3
   18bb0:	ldr	ip, [r3, #28]
   18bb4:	ldrh	r2, [r2, #248]	; 0xf8
   18bb8:	str	lr, [sp, #8]
   18bbc:	sub	sp, sp, #36	; 0x24
   18bc0:	ldrh	r3, [r3, #32]
   18bc4:	add	r1, sp, #4
   18bc8:	str	ip, [sp, #4]
   18bcc:	cmp	r2, #2
   18bd0:	strh	r3, [r1, #4]
   18bd4:	beq	18c68 <sprintf@plt+0x76c0>
   18bd8:	cmp	r2, #10
   18bdc:	bne	18c2c <sprintf@plt+0x7684>
   18be0:	ldr	r3, [r0, #12]
   18be4:	mov	r2, #4
   18be8:	strb	r2, [sp, #10]
   18bec:	mvn	r2, #24
   18bf0:	ldrh	lr, [r3, #58]	; 0x3a
   18bf4:	ldr	ip, [r3, #64]!	; 0x40
   18bf8:	ldr	r4, [r3, #4]
   18bfc:	str	ip, [sp, #11]
   18c00:	ldr	ip, [r3, #12]
   18c04:	strh	lr, [sp, #27]
   18c08:	ldr	lr, [r3, #8]
   18c0c:	str	r4, [sp, #15]
   18c10:	str	lr, [sp, #19]
   18c14:	str	ip, [sp, #23]
   18c18:	mov	r4, r0
   18c1c:	ldr	r0, [r0, #4]
   18c20:	bl	11344 <rb_write@plt>
   18c24:	cmp	r0, #0
   18c28:	bgt	18c3c <sprintf@plt+0x7694>
   18c2c:	add	sp, sp, #36	; 0x24
   18c30:	ldrd	r4, [sp]
   18c34:	add	sp, sp, #8
   18c38:	pop	{pc}		; (ldr pc, [sp], #4)
   18c3c:	ldr	r5, [r4, #8]
   18c40:	mov	r0, r5
   18c44:	bl	113d4 <strlen@plt>
   18c48:	add	r2, r0, #1
   18c4c:	mov	r1, r5
   18c50:	ldr	r0, [r4, #4]
   18c54:	bl	11344 <rb_write@plt>
   18c58:	add	sp, sp, #36	; 0x24
   18c5c:	ldrd	r4, [sp]
   18c60:	add	sp, sp, #8
   18c64:	pop	{pc}		; (ldr pc, [sp], #4)
   18c68:	ldr	r3, [r0, #12]
   18c6c:	mov	ip, #1
   18c70:	mvn	r2, #12
   18c74:	strb	ip, [sp, #10]
   18c78:	ldr	ip, [r3, #60]	; 0x3c
   18c7c:	ldrh	r3, [r3, #58]	; 0x3a
   18c80:	str	ip, [sp, #11]
   18c84:	strh	r3, [sp, #15]
   18c88:	b	18c18 <sprintf@plt+0x7670>
   18c8c:	andeq	r1, r0, r4, lsl #20
   18c90:	ldr	r3, [r0, #12]
   18c94:	mov	r1, #260	; 0x104
   18c98:	mov	r2, #9
   18c9c:	strd	r4, [sp, #-12]!
   18ca0:	mov	r4, r0
   18ca4:	mov	r0, #0
   18ca8:	str	lr, [sp, #8]
   18cac:	sub	sp, sp, #20
   18cb0:	strh	r1, [sp, #4]
   18cb4:	add	r1, sp, #4
   18cb8:	ldrh	ip, [r3, #58]	; 0x3a
   18cbc:	ldr	r3, [r3, #60]	; 0x3c
   18cc0:	strb	r0, [sp, #12]
   18cc4:	ldr	r0, [r4, #4]
   18cc8:	strh	ip, [sp, #6]
   18ccc:	str	r3, [sp, #8]
   18cd0:	bl	11344 <rb_write@plt>
   18cd4:	cmp	r0, #0
   18cd8:	blt	18cf8 <sprintf@plt+0x7750>
   18cdc:	ldr	r5, [r4, #8]
   18ce0:	mov	r0, r5
   18ce4:	bl	113d4 <strlen@plt>
   18ce8:	add	r2, r0, #1
   18cec:	mov	r1, r5
   18cf0:	ldr	r0, [r4, #4]
   18cf4:	bl	11344 <rb_write@plt>
   18cf8:	add	sp, sp, #20
   18cfc:	ldrd	r4, [sp]
   18d00:	add	sp, sp, #8
   18d04:	pop	{pc}		; (ldr pc, [sp], #4)
   18d08:	strd	r4, [sp, #-16]!
   18d0c:	mov	r4, r2
   18d10:	mov	r1, #0
   18d14:	mov	r2, #10
   18d18:	ldr	r5, [r4]
   18d1c:	ldr	r0, [r4, #4]
   18d20:	str	r6, [sp, #8]
   18d24:	str	lr, [sp, #12]
   18d28:	bl	1141c <strtol@plt>
   18d2c:	sub	r2, r0, #1
   18d30:	movw	r3, #65534	; 0xfffe
   18d34:	cmp	r2, r3
   18d38:	bhi	18d58 <sprintf@plt+0x77b0>
   18d3c:	uxth	r1, r0
   18d40:	mov	r0, r5
   18d44:	ldrd	r4, [sp]
   18d48:	ldr	r6, [sp, #8]
   18d4c:	ldr	lr, [sp, #12]
   18d50:	add	sp, sp, #16
   18d54:	b	182b0 <sprintf@plt+0x6d08>
   18d58:	ldr	r1, [pc, #20]	; 18d74 <sprintf@plt+0x77cc>
   18d5c:	mov	r0, #67	; 0x43
   18d60:	ldrd	r2, [r4]
   18d64:	add	r1, pc, r1
   18d68:	bl	123a0 <sprintf@plt+0xdf8>
   18d6c:	mov	r0, #3
   18d70:	bl	11590 <exit@plt>
   18d74:	andeq	r1, r0, r8, lsr #20
   18d78:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18d7c:	ldr	r5, [pc, #264]	; 18e8c <sprintf@plt+0x78e4>
   18d80:	strd	r8, [sp, #16]
   18d84:	ldr	r9, [pc, #260]	; 18e90 <sprintf@plt+0x78e8>
   18d88:	strd	r6, [sp, #8]
   18d8c:	str	lr, [sp, #24]
   18d90:	sub	sp, sp, #12
   18d94:	add	r5, pc, r5
   18d98:	add	r9, pc, r9
   18d9c:	ldr	r4, [r9, #376]	; 0x178
   18da0:	cmp	r4, #0
   18da4:	beq	18e28 <sprintf@plt+0x7880>
   18da8:	ldr	r3, [r4]
   18dac:	ldr	r7, [pc, #224]	; 18e94 <sprintf@plt+0x78ec>
   18db0:	ldr	r6, [pc, #224]	; 18e98 <sprintf@plt+0x78f0>
   18db4:	subs	r0, r3, #0
   18db8:	ldr	r8, [r4, #8]
   18dbc:	add	r7, pc, r7
   18dc0:	add	r6, pc, r6
   18dc4:	beq	18dcc <sprintf@plt+0x7824>
   18dc8:	bl	11380 <free@plt>
   18dcc:	ldr	r3, [r4, #4]
   18dd0:	ldr	r2, [r4, #8]
   18dd4:	cmp	r2, #0
   18dd8:	strne	r3, [r2, #4]
   18ddc:	ldrne	r3, [r4, #4]
   18de0:	streq	r3, [r7, #380]	; 0x17c
   18de4:	cmp	r3, #0
   18de8:	strne	r2, [r3, #8]
   18dec:	ldr	r3, [r9, #384]	; 0x180
   18df0:	streq	r2, [r6, #376]	; 0x178
   18df4:	mov	r2, #0
   18df8:	cmp	r8, r2
   18dfc:	str	r2, [r4, #4]
   18e00:	str	r2, [r4, #8]
   18e04:	mov	r4, r8
   18e08:	sub	r3, r3, #1
   18e0c:	str	r3, [r9, #384]	; 0x180
   18e10:	beq	18e28 <sprintf@plt+0x7880>
   18e14:	ldr	r3, [r4]
   18e18:	ldr	r8, [r8, #8]
   18e1c:	subs	r0, r3, #0
   18e20:	bne	18dc8 <sprintf@plt+0x7820>
   18e24:	b	18dcc <sprintf@plt+0x7824>
   18e28:	ldr	r3, [pc, #108]	; 18e9c <sprintf@plt+0x78f4>
   18e2c:	mov	r6, sp
   18e30:	mov	r1, r6
   18e34:	ldr	r4, [r5, r3]
   18e38:	ldr	r0, [r4]
   18e3c:	bl	113bc <rb_dictionary_foreach_start@plt>
   18e40:	b	18e54 <sprintf@plt+0x78ac>
   18e44:	bl	17d90 <sprintf@plt+0x67e8>
   18e48:	mov	r1, r6
   18e4c:	ldr	r0, [r4]
   18e50:	bl	11374 <rb_dictionary_foreach_next@plt>
   18e54:	mov	r1, r6
   18e58:	ldr	r0, [r4]
   18e5c:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   18e60:	subs	r3, r0, #0
   18e64:	bne	18e44 <sprintf@plt+0x789c>
   18e68:	ldr	r2, [pc, #48]	; 18ea0 <sprintf@plt+0x78f8>
   18e6c:	add	r2, pc, r2
   18e70:	strb	r3, [r2, #388]	; 0x184
   18e74:	add	sp, sp, #12
   18e78:	ldrd	r4, [sp]
   18e7c:	ldrd	r6, [sp, #8]
   18e80:	ldrd	r8, [sp, #16]
   18e84:	add	sp, sp, #24
   18e88:	pop	{pc}		; (ldr pc, [sp], #4)
   18e8c:	andeq	r2, r1, r4, ror #4
   18e90:	andeq	r7, r1, ip, lsl #5
   18e94:	andeq	r7, r1, r8, ror #4
   18e98:	andeq	r7, r1, r4, ror #4
   18e9c:	andeq	r0, r0, r4, asr r1
   18ea0:			; <UNDEFINED> instruction: 0x000171b8
   18ea4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18ea8:	mov	r5, r2
   18eac:	mov	r1, #0
   18eb0:	mov	r2, #10
   18eb4:	ldr	r0, [r5, #4]
   18eb8:	strd	r6, [sp, #8]
   18ebc:	str	r8, [sp, #16]
   18ec0:	str	lr, [sp, #20]
   18ec4:	bl	1141c <strtol@plt>
   18ec8:	mov	r6, r0
   18ecc:	mov	r1, #40	; 0x28
   18ed0:	mov	r0, #1
   18ed4:	bl	112f0 <calloc@plt>
   18ed8:	subs	r4, r0, #0
   18edc:	beq	1912c <sprintf@plt+0x7b84>
   18ee0:	sub	r2, r6, #1
   18ee4:	movw	r3, #65534	; 0xfffe
   18ee8:	ldr	r7, [r5]
   18eec:	cmp	r2, r3
   18ef0:	bhi	19130 <sprintf@plt+0x7b88>
   18ef4:	ldr	r1, [pc, #596]	; 19150 <sprintf@plt+0x7ba8>
   18ef8:	mov	r0, r7
   18efc:	strh	r6, [r4, #20]
   18f00:	add	r1, pc, r1
   18f04:	bl	112e4 <strcasecmp@plt>
   18f08:	subs	r8, r0, #0
   18f0c:	beq	1902c <sprintf@plt+0x7a84>
   18f10:	ldr	r1, [pc, #572]	; 19154 <sprintf@plt+0x7bac>
   18f14:	mov	r0, r7
   18f18:	add	r1, pc, r1
   18f1c:	bl	112e4 <strcasecmp@plt>
   18f20:	subs	r8, r0, #0
   18f24:	beq	18f80 <sprintf@plt+0x79d8>
   18f28:	ldr	r1, [pc, #552]	; 19158 <sprintf@plt+0x7bb0>
   18f2c:	mov	r0, r7
   18f30:	add	r1, pc, r1
   18f34:	bl	112e4 <strcasecmp@plt>
   18f38:	subs	r8, r0, #0
   18f3c:	beq	190d8 <sprintf@plt+0x7b30>
   18f40:	ldr	r1, [pc, #532]	; 1915c <sprintf@plt+0x7bb4>
   18f44:	mov	r0, r7
   18f48:	add	r1, pc, r1
   18f4c:	bl	112e4 <strcasecmp@plt>
   18f50:	cmp	r0, #0
   18f54:	beq	190a0 <sprintf@plt+0x7af8>
   18f58:	ldr	r1, [pc, #512]	; 19160 <sprintf@plt+0x7bb8>
   18f5c:	mov	ip, #0
   18f60:	mov	r0, #67	; 0x43
   18f64:	mov	r3, r6
   18f68:	mov	r2, r7
   18f6c:	str	ip, [r4, #16]
   18f70:	add	r1, pc, r1
   18f74:	bl	123a0 <sprintf@plt+0xdf8>
   18f78:	mov	r0, #3
   18f7c:	bl	11590 <exit@plt>
   18f80:	ldr	r2, [pc, #476]	; 19164 <sprintf@plt+0x7bbc>
   18f84:	mov	ip, #2
   18f88:	mov	r3, r6
   18f8c:	mov	r1, #16
   18f90:	mov	r0, r4
   18f94:	str	ip, [r4, #16]
   18f98:	add	r2, pc, r2
   18f9c:	bl	1153c <snprintf@plt>
   18fa0:	ldr	r3, [pc, #448]	; 19168 <sprintf@plt+0x7bc0>
   18fa4:	strb	r8, [r4, #22]
   18fa8:	add	r3, pc, r3
   18fac:	str	r3, [r4, #24]
   18fb0:	ldr	r2, [pc, #436]	; 1916c <sprintf@plt+0x7bc4>
   18fb4:	ldrh	r3, [r4, #20]
   18fb8:	ldr	ip, [r4, #16]
   18fbc:	add	r2, pc, r2
   18fc0:	ldr	lr, [r2, #376]	; 0x178
   18fc4:	cmp	lr, #0
   18fc8:	beq	1910c <sprintf@plt+0x7b64>
   18fcc:	mov	r2, lr
   18fd0:	b	18fe0 <sprintf@plt+0x7a38>
   18fd4:	ldr	r2, [r2, #8]
   18fd8:	cmp	r2, #0
   18fdc:	beq	19060 <sprintf@plt+0x7ab8>
   18fe0:	ldr	r1, [r2]
   18fe4:	ldr	r0, [r1, #16]
   18fe8:	cmp	ip, r0
   18fec:	bne	18fd4 <sprintf@plt+0x7a2c>
   18ff0:	ldrh	r1, [r1, #20]
   18ff4:	cmp	r1, r3
   18ff8:	bne	18fd4 <sprintf@plt+0x7a2c>
   18ffc:	ldr	r1, [pc, #364]	; 19170 <sprintf@plt+0x7bc8>
   19000:	mov	r0, #67	; 0x43
   19004:	ldr	r2, [r5]
   19008:	add	r1, pc, r1
   1900c:	bl	123a0 <sprintf@plt+0xdf8>
   19010:	mov	r0, r4
   19014:	ldrd	r4, [sp]
   19018:	ldrd	r6, [sp, #8]
   1901c:	ldr	r8, [sp, #16]
   19020:	ldr	lr, [sp, #20]
   19024:	add	sp, sp, #24
   19028:	b	11380 <free@plt>
   1902c:	ldr	r2, [pc, #320]	; 19174 <sprintf@plt+0x7bcc>
   19030:	mov	ip, #1
   19034:	mov	r3, r6
   19038:	mov	r1, #16
   1903c:	mov	r0, r4
   19040:	str	ip, [r4, #16]
   19044:	add	r2, pc, r2
   19048:	bl	1153c <snprintf@plt>
   1904c:	ldr	r3, [pc, #292]	; 19178 <sprintf@plt+0x7bd0>
   19050:	strb	r8, [r4, #22]
   19054:	add	r3, pc, r3
   19058:	str	r3, [r4, #24]
   1905c:	b	18fb0 <sprintf@plt+0x7a08>
   19060:	add	r1, r4, #28
   19064:	str	r4, [r4, #28]
   19068:	str	r2, [r4, #32]
   1906c:	str	lr, [r4, #36]	; 0x24
   19070:	str	r1, [lr, #4]
   19074:	ldr	r3, [pc, #256]	; 1917c <sprintf@plt+0x7bd4>
   19078:	ldrd	r4, [sp]
   1907c:	ldrd	r6, [sp, #8]
   19080:	add	r3, pc, r3
   19084:	ldr	r2, [r3, #384]	; 0x180
   19088:	ldr	r8, [sp, #16]
   1908c:	add	sp, sp, #20
   19090:	str	r1, [r3, #376]	; 0x178
   19094:	add	r2, r2, #1
   19098:	str	r2, [r3, #384]	; 0x180
   1909c:	pop	{pc}		; (ldr pc, [sp], #4)
   190a0:	ldr	r2, [pc, #216]	; 19180 <sprintf@plt+0x7bd8>
   190a4:	mov	ip, #4
   190a8:	mov	r3, r6
   190ac:	mov	r1, #16
   190b0:	mov	r0, r4
   190b4:	str	ip, [r4, #16]
   190b8:	add	r2, pc, r2
   190bc:	bl	1153c <snprintf@plt>
   190c0:	ldr	r3, [pc, #188]	; 19184 <sprintf@plt+0x7bdc>
   190c4:	mov	r2, #1
   190c8:	strb	r2, [r4, #22]
   190cc:	add	r3, pc, r3
   190d0:	str	r3, [r4, #24]
   190d4:	b	18fb0 <sprintf@plt+0x7a08>
   190d8:	ldr	r2, [pc, #168]	; 19188 <sprintf@plt+0x7be0>
   190dc:	mov	ip, #3
   190e0:	mov	r3, r6
   190e4:	mov	r1, #16
   190e8:	mov	r0, r4
   190ec:	str	ip, [r4, #16]
   190f0:	add	r2, pc, r2
   190f4:	bl	1153c <snprintf@plt>
   190f8:	ldr	r3, [pc, #140]	; 1918c <sprintf@plt+0x7be4>
   190fc:	strb	r8, [r4, #22]
   19100:	add	r3, pc, r3
   19104:	str	r3, [r4, #24]
   19108:	b	18fb0 <sprintf@plt+0x7a08>
   1910c:	ldr	r3, [r2, #380]	; 0x17c
   19110:	add	r1, r4, #28
   19114:	str	r4, [r4, #28]
   19118:	str	lr, [r4, #32]
   1911c:	str	lr, [r4, #36]	; 0x24
   19120:	cmp	r3, #0
   19124:	streq	r1, [r2, #380]	; 0x17c
   19128:	b	19074 <sprintf@plt+0x7acc>
   1912c:	bl	1147c <rb_outofmemory@plt>
   19130:	ldr	r1, [pc, #88]	; 19190 <sprintf@plt+0x7be8>
   19134:	mov	r0, #67	; 0x43
   19138:	mov	r2, r7
   1913c:	ldr	r3, [r5, #4]
   19140:	add	r1, pc, r1
   19144:	bl	123a0 <sprintf@plt+0xdf8>
   19148:	mov	r0, #3
   1914c:	bl	11590 <exit@plt>
   19150:	ldrdeq	r1, [r0], -r4
   19154:	ldrdeq	r1, [r0], -r0
   19158:	andeq	r1, r0, r0, asr #17
   1915c:			; <UNDEFINED> instruction: 0x000018b4
   19160:			; <UNDEFINED> instruction: 0x000018b0
   19164:	andeq	r1, r0, r8, asr #17
   19168:			; <UNDEFINED> instruction: 0xfffffbf0
   1916c:	andeq	r7, r1, r8, rrx
   19170:	andeq	r1, r0, r4, ror #16
   19174:	muleq	r0, r8, r7
   19178:			; <UNDEFINED> instruction: 0xfffffc34
   1917c:	andeq	r6, r1, r4, lsr #31
   19180:	andeq	r1, r0, r4, asr r7
   19184:			; <UNDEFINED> instruction: 0xfffffa18
   19188:	andeq	r1, r0, r0, ror #14
   1918c:			; <UNDEFINED> instruction: 0xfffff9e4
   19190:	andeq	r1, r0, ip, ror #12
   19194:	ldr	r2, [pc, #328]	; 192e4 <sprintf@plt+0x7d3c>
   19198:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1919c:	ldr	r4, [pc, #324]	; 192e8 <sprintf@plt+0x7d40>
   191a0:	ldr	r3, [pc, #324]	; 192ec <sprintf@plt+0x7d44>
   191a4:	add	r2, pc, r2
   191a8:	ldrb	r1, [r2, #388]	; 0x184
   191ac:	add	r4, pc, r4
   191b0:	strd	r6, [sp, #8]
   191b4:	mov	r6, r0
   191b8:	str	r8, [sp, #16]
   191bc:	str	lr, [sp, #20]
   191c0:	ldr	r3, [r4, r3]
   191c4:	cmp	r1, #0
   191c8:	ldr	r5, [r3, #12]
   191cc:	beq	191dc <sprintf@plt+0x7c34>
   191d0:	ldr	r3, [r2, #384]	; 0x180
   191d4:	cmp	r3, #0
   191d8:	bne	19200 <sprintf@plt+0x7c58>
   191dc:	mov	r1, r5
   191e0:	mov	r0, r6
   191e4:	bl	12f14 <sprintf@plt+0x196c>
   191e8:	ldrd	r4, [sp]
   191ec:	mov	r0, #1
   191f0:	ldrd	r6, [sp, #8]
   191f4:	ldr	r8, [sp, #16]
   191f8:	add	sp, sp, #20
   191fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19200:	ldr	r3, [r6, #460]	; 0x1cc
   19204:	mov	r0, #1
   19208:	mov	r1, #16
   1920c:	add	r3, r3, r0
   19210:	str	r3, [r6, #460]	; 0x1cc
   19214:	bl	112f0 <calloc@plt>
   19218:	cmp	r0, #0
   1921c:	beq	192e0 <sprintf@plt+0x7d38>
   19220:	ldr	r2, [r6, #464]	; 0x1d0
   19224:	ldr	r3, [pc, #196]	; 192f0 <sprintf@plt+0x7d48>
   19228:	add	r5, r2, r5, lsl #4
   1922c:	str	r0, [r5, #8]
   19230:	ldr	r3, [r4, r3]
   19234:	ldr	r4, [r3]
   19238:	cmp	r4, #0
   1923c:	beq	192d4 <sprintf@plt+0x7d2c>
   19240:	ldr	r8, [pc, #172]	; 192f4 <sprintf@plt+0x7d4c>
   19244:	mov	r5, r4
   19248:	add	r8, pc, r8
   1924c:	b	1925c <sprintf@plt+0x7cb4>
   19250:	ldr	r5, [r5, #8]
   19254:	cmp	r5, #0
   19258:	beq	1928c <sprintf@plt+0x7ce4>
   1925c:	ldr	r7, [r5]
   19260:	mov	r1, r8
   19264:	ldr	r0, [r7, #16]
   19268:	bl	112e4 <strcasecmp@plt>
   1926c:	cmp	r0, #0
   19270:	bne	19250 <sprintf@plt+0x7ca8>
   19274:	ldr	r2, [r7, #12]
   19278:	ldr	r3, [r6, #464]	; 0x1d0
   1927c:	add	r3, r3, r2, lsl #4
   19280:	ldr	r3, [r3, #12]
   19284:	cmp	r3, #2
   19288:	bne	191e8 <sprintf@plt+0x7c40>
   1928c:	ldr	r7, [pc, #100]	; 192f8 <sprintf@plt+0x7d50>
   19290:	add	r7, pc, r7
   19294:	b	192a4 <sprintf@plt+0x7cfc>
   19298:	ldr	r4, [r4, #8]
   1929c:	cmp	r4, #0
   192a0:	beq	192d4 <sprintf@plt+0x7d2c>
   192a4:	ldr	r5, [r4]
   192a8:	mov	r1, r7
   192ac:	ldr	r0, [r5, #16]
   192b0:	bl	112e4 <strcasecmp@plt>
   192b4:	cmp	r0, #0
   192b8:	bne	19298 <sprintf@plt+0x7cf0>
   192bc:	ldr	r2, [r5, #12]
   192c0:	ldr	r3, [r6, #464]	; 0x1d0
   192c4:	add	r3, r3, r2, lsl #4
   192c8:	ldr	r3, [r3, #12]
   192cc:	cmp	r3, #2
   192d0:	bne	191e8 <sprintf@plt+0x7c40>
   192d4:	mov	r0, r6
   192d8:	bl	18a2c <sprintf@plt+0x7484>
   192dc:	b	191e8 <sprintf@plt+0x7c40>
   192e0:	bl	1147c <rb_outofmemory@plt>
   192e4:	andeq	r6, r1, r0, lsl #29
   192e8:	andeq	r1, r1, ip, asr #28
   192ec:	andeq	r0, r0, r0, lsl #3
   192f0:	muleq	r0, ip, r1
   192f4:	andeq	r1, r0, r4, lsl #2
   192f8:	andeq	r1, r0, r4, asr #1
   192fc:	ldr	r2, [pc, #284]	; 19420 <sprintf@plt+0x7e78>
   19300:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19304:	ldr	r3, [pc, #280]	; 19424 <sprintf@plt+0x7e7c>
   19308:	strd	r6, [sp, #8]
   1930c:	strd	r8, [sp, #16]
   19310:	add	r2, pc, r2
   19314:	str	sl, [sp, #24]
   19318:	str	lr, [sp, #28]
   1931c:	ldr	r3, [r2, r3]
   19320:	ldr	r6, [r0, #464]	; 0x1d0
   19324:	ldr	r3, [r3, #12]
   19328:	add	r3, r6, r3, lsl #4
   1932c:	ldr	r3, [r3, #8]
   19330:	cmp	r3, #0
   19334:	beq	19344 <sprintf@plt+0x7d9c>
   19338:	ldrb	r3, [r3, #12]
   1933c:	cmp	r3, #0
   19340:	beq	1935c <sprintf@plt+0x7db4>
   19344:	ldrd	r4, [sp]
   19348:	ldrd	r6, [sp, #8]
   1934c:	ldrd	r8, [sp, #16]
   19350:	ldr	sl, [sp, #24]
   19354:	add	sp, sp, #28
   19358:	pop	{pc}		; (ldr pc, [sp], #4)
   1935c:	ldr	r3, [pc, #196]	; 19428 <sprintf@plt+0x7e80>
   19360:	mov	r7, r0
   19364:	ldr	r3, [r2, r3]
   19368:	ldr	r4, [r3]
   1936c:	cmp	r4, #0
   19370:	beq	19400 <sprintf@plt+0x7e58>
   19374:	ldr	r9, [pc, #176]	; 1942c <sprintf@plt+0x7e84>
   19378:	mov	r5, r4
   1937c:	add	r9, pc, r9
   19380:	b	19390 <sprintf@plt+0x7de8>
   19384:	ldr	r5, [r5, #8]
   19388:	cmp	r5, #0
   1938c:	beq	193bc <sprintf@plt+0x7e14>
   19390:	ldr	r8, [r5]
   19394:	mov	r1, r9
   19398:	ldr	r0, [r8, #16]
   1939c:	bl	112e4 <strcasecmp@plt>
   193a0:	cmp	r0, #0
   193a4:	bne	19384 <sprintf@plt+0x7ddc>
   193a8:	ldr	r3, [r8, #12]
   193ac:	add	r3, r6, r3, lsl #4
   193b0:	ldr	r3, [r3, #12]
   193b4:	cmp	r3, #2
   193b8:	bne	19344 <sprintf@plt+0x7d9c>
   193bc:	ldr	r8, [pc, #108]	; 19430 <sprintf@plt+0x7e88>
   193c0:	add	r8, pc, r8
   193c4:	b	193d4 <sprintf@plt+0x7e2c>
   193c8:	ldr	r4, [r4, #8]
   193cc:	cmp	r4, #0
   193d0:	beq	19400 <sprintf@plt+0x7e58>
   193d4:	ldr	r5, [r4]
   193d8:	mov	r1, r8
   193dc:	ldr	r0, [r5, #16]
   193e0:	bl	112e4 <strcasecmp@plt>
   193e4:	cmp	r0, #0
   193e8:	bne	193c8 <sprintf@plt+0x7e20>
   193ec:	ldr	r3, [r5, #12]
   193f0:	add	r6, r6, r3, lsl #4
   193f4:	ldr	r3, [r6, #12]
   193f8:	cmp	r3, #2
   193fc:	bne	19344 <sprintf@plt+0x7d9c>
   19400:	mov	r0, r7
   19404:	ldrd	r4, [sp]
   19408:	ldrd	r6, [sp, #8]
   1940c:	ldrd	r8, [sp, #16]
   19410:	ldr	sl, [sp, #24]
   19414:	ldr	lr, [sp, #28]
   19418:	add	sp, sp, #32
   1941c:	b	18a2c <sprintf@plt+0x7484>
   19420:	andeq	r1, r1, r8, ror #25
   19424:	andeq	r0, r0, r0, lsl #3
   19428:	muleq	r0, ip, r1
   1942c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   19430:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   19434:	ldr	r3, [pc, #240]	; 1952c <sprintf@plt+0x7f84>
   19438:	cmp	r1, #0
   1943c:	strd	r4, [sp, #-16]!
   19440:	mov	r4, r2
   19444:	ldr	r2, [pc, #228]	; 19530 <sprintf@plt+0x7f88>
   19448:	ldr	r1, [r4]
   1944c:	add	r3, pc, r3
   19450:	str	r6, [sp, #8]
   19454:	str	lr, [sp, #12]
   19458:	ldr	r2, [r3, r2]
   1945c:	ldr	r3, [r1, #464]	; 0x1d0
   19460:	ldr	r2, [r2, #12]
   19464:	add	r3, r3, r2, lsl #4
   19468:	ldr	r5, [r3, #8]
   1946c:	bne	194c0 <sprintf@plt+0x7f18>
   19470:	ldr	r3, [pc, #188]	; 19534 <sprintf@plt+0x7f8c>
   19474:	add	r3, pc, r3
   19478:	ldrb	r2, [r3, #388]	; 0x184
   1947c:	cmp	r2, #0
   19480:	beq	194c0 <sprintf@plt+0x7f18>
   19484:	ldrh	r2, [r1, #248]	; 0xf8
   19488:	ldr	r1, [r4, #8]
   1948c:	cmp	r2, #2
   19490:	beq	19518 <sprintf@plt+0x7f70>
   19494:	cmp	r2, #10
   19498:	bne	194c0 <sprintf@plt+0x7f18>
   1949c:	ldrb	r2, [r1, #23]
   194a0:	cmp	r2, #0
   194a4:	beq	194c0 <sprintf@plt+0x7f18>
   194a8:	ldr	r3, [r3, #372]	; 0x174
   194ac:	cmp	r3, #0
   194b0:	beq	194c0 <sprintf@plt+0x7f18>
   194b4:	mov	r0, r4
   194b8:	ldr	r3, [r1, #24]
   194bc:	blx	r3
   194c0:	ldr	r0, [r4, #4]
   194c4:	bl	11410 <rb_close@plt>
   194c8:	cmp	r5, #0
   194cc:	beq	19528 <sprintf@plt+0x7f80>
   194d0:	ldr	r3, [r4, #20]
   194d4:	mov	r0, r4
   194d8:	ldr	r2, [r4, #24]
   194dc:	ldr	r6, [sp, #8]
   194e0:	ldr	lr, [sp, #12]
   194e4:	cmp	r2, #0
   194e8:	strne	r3, [r2, #4]
   194ec:	ldrne	r3, [r4, #20]
   194f0:	streq	r3, [r5, #4]
   194f4:	cmp	r3, #0
   194f8:	strne	r2, [r3, #8]
   194fc:	ldr	r3, [r5, #8]
   19500:	streq	r2, [r5]
   19504:	sub	r3, r3, #1
   19508:	str	r3, [r5, #8]
   1950c:	ldrd	r4, [sp]
   19510:	add	sp, sp, #16
   19514:	b	11380 <free@plt>
   19518:	ldr	r3, [r3, #184]	; 0xb8
   1951c:	cmp	r3, #0
   19520:	bne	194b4 <sprintf@plt+0x7f0c>
   19524:	b	194c0 <sprintf@plt+0x7f18>
   19528:	bl	18794 <sprintf@plt+0x71ec>
   1952c:	andeq	r1, r1, ip, lsr #23
   19530:	andeq	r0, r0, r0, lsl #3
   19534:			; <UNDEFINED> instruction: 0x00016bb0
   19538:	ldr	r1, [pc, #776]	; 19848 <sprintf@plt+0x82a0>
   1953c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19540:	mov	r5, r2
   19544:	ldr	r4, [r2]
   19548:	strd	r6, [sp, #8]
   1954c:	ldr	r6, [pc, #760]	; 1984c <sprintf@plt+0x82a4>
   19550:	add	r1, pc, r1
   19554:	strd	r8, [sp, #16]
   19558:	str	lr, [sp, #24]
   1955c:	sub	sp, sp, #12
   19560:	mov	r0, r4
   19564:	bl	112e4 <strcasecmp@plt>
   19568:	cmp	r0, #0
   1956c:	add	r6, pc, r6
   19570:	ldr	r7, [r5, #4]
   19574:	beq	195fc <sprintf@plt+0x8054>
   19578:	ldr	r1, [pc, #720]	; 19850 <sprintf@plt+0x82a8>
   1957c:	mov	r0, r4
   19580:	add	r1, pc, r1
   19584:	bl	112e4 <strcasecmp@plt>
   19588:	cmp	r0, #0
   1958c:	beq	19810 <sprintf@plt+0x8268>
   19590:	ldr	r1, [pc, #700]	; 19854 <sprintf@plt+0x82ac>
   19594:	mov	r0, r4
   19598:	add	r1, pc, r1
   1959c:	bl	112e4 <strcasecmp@plt>
   195a0:	cmp	r0, #0
   195a4:	beq	19800 <sprintf@plt+0x8258>
   195a8:	ldr	r1, [pc, #680]	; 19858 <sprintf@plt+0x82b0>
   195ac:	mov	r0, r4
   195b0:	add	r1, pc, r1
   195b4:	bl	112e4 <strcasecmp@plt>
   195b8:	cmp	r0, #0
   195bc:	beq	19808 <sprintf@plt+0x8260>
   195c0:	mov	r2, #10
   195c4:	mov	r0, r7
   195c8:	mov	r1, #0
   195cc:	bl	1141c <strtol@plt>
   195d0:	sub	r2, r0, #1
   195d4:	movw	r3, #65534	; 0xfffe
   195d8:	cmp	r2, r3
   195dc:	bls	19818 <sprintf@plt+0x8270>
   195e0:	ldr	r1, [pc, #628]	; 1985c <sprintf@plt+0x82b4>
   195e4:	mov	r0, #67	; 0x43
   195e8:	ldrd	r2, [r5]
   195ec:	add	r1, pc, r1
   195f0:	bl	123a0 <sprintf@plt+0xdf8>
   195f4:	mov	r0, #3
   195f8:	bl	11590 <exit@plt>
   195fc:	mov	r4, #1
   19600:	mov	r2, #10
   19604:	mov	r0, r7
   19608:	mov	r1, #0
   1960c:	bl	1141c <strtol@plt>
   19610:	sub	r2, r0, #1
   19614:	movw	r3, #65534	; 0xfffe
   19618:	cmp	r2, r3
   1961c:	bhi	195e0 <sprintf@plt+0x8038>
   19620:	ldr	r2, [pc, #568]	; 19860 <sprintf@plt+0x82b8>
   19624:	uxth	ip, r0
   19628:	add	r2, pc, r2
   1962c:	ldr	r2, [r2, #376]	; 0x178
   19630:	cmp	r2, #0
   19634:	bne	19648 <sprintf@plt+0x80a0>
   19638:	b	19838 <sprintf@plt+0x8290>
   1963c:	ldr	r2, [r2, #8]
   19640:	cmp	r2, #0
   19644:	beq	19838 <sprintf@plt+0x8290>
   19648:	ldr	r7, [r2]
   1964c:	ldr	r1, [r7, #16]
   19650:	cmp	r1, r4
   19654:	bne	1963c <sprintf@plt+0x8094>
   19658:	ldrh	r1, [r7, #20]
   1965c:	cmp	r1, ip
   19660:	bne	1963c <sprintf@plt+0x8094>
   19664:	ldr	r3, [pc, #504]	; 19864 <sprintf@plt+0x82bc>
   19668:	mov	r5, sp
   1966c:	mov	r1, r5
   19670:	ldr	r4, [r6, r3]
   19674:	ldr	r0, [r4]
   19678:	bl	113bc <rb_dictionary_foreach_start@plt>
   1967c:	mov	r1, r5
   19680:	ldr	r0, [r4]
   19684:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   19688:	subs	r8, r0, #0
   1968c:	beq	19770 <sprintf@plt+0x81c8>
   19690:	ldr	r2, [pc, #464]	; 19868 <sprintf@plt+0x82c0>
   19694:	ldr	r3, [r8, #464]	; 0x1d0
   19698:	ldr	r2, [r6, r2]
   1969c:	ldr	r2, [r2, #12]
   196a0:	add	r3, r3, r2, lsl #4
   196a4:	ldr	r9, [r3, #8]
   196a8:	cmp	r9, #0
   196ac:	beq	19754 <sprintf@plt+0x81ac>
   196b0:	ldr	lr, [r8, #460]	; 0x1cc
   196b4:	ldr	r3, [r9]
   196b8:	add	r2, lr, #1
   196bc:	cmp	r3, #0
   196c0:	str	r2, [r8, #460]	; 0x1cc
   196c4:	beq	19748 <sprintf@plt+0x81a0>
   196c8:	ldrh	ip, [r7, #20]
   196cc:	b	196dc <sprintf@plt+0x8134>
   196d0:	ldr	r3, [r3, #8]
   196d4:	cmp	r3, #0
   196d8:	beq	19748 <sprintf@plt+0x81a0>
   196dc:	ldr	r0, [r3]
   196e0:	ldr	r2, [r0, #8]
   196e4:	ldrh	r1, [r2, #20]
   196e8:	cmp	r1, ip
   196ec:	bne	196d0 <sprintf@plt+0x8128>
   196f0:	ldr	r1, [r2, #16]
   196f4:	ldr	r2, [r7, #16]
   196f8:	cmp	r1, r2
   196fc:	bne	196d0 <sprintf@plt+0x8128>
   19700:	ldr	r3, [r0, #20]
   19704:	ldr	r2, [r0, #24]
   19708:	cmp	r2, #0
   1970c:	strne	r3, [r2, #4]
   19710:	ldrne	r3, [r0, #20]
   19714:	streq	r3, [r9, #4]
   19718:	cmp	r3, #0
   1971c:	strne	r2, [r3, #8]
   19720:	ldr	r3, [r9, #8]
   19724:	streq	r2, [r9]
   19728:	sub	r3, r3, #1
   1972c:	str	r3, [r9, #8]
   19730:	bl	11380 <free@plt>
   19734:	ldr	r3, [r9, #8]
   19738:	cmp	r3, #0
   1973c:	beq	197d4 <sprintf@plt+0x822c>
   19740:	ldr	lr, [r8, #460]	; 0x1cc
   19744:	sub	lr, lr, #1
   19748:	cmp	lr, #0
   1974c:	str	lr, [r8, #460]	; 0x1cc
   19750:	beq	19764 <sprintf@plt+0x81bc>
   19754:	mov	r1, r5
   19758:	ldr	r0, [r4]
   1975c:	bl	11374 <rb_dictionary_foreach_next@plt>
   19760:	b	1967c <sprintf@plt+0x80d4>
   19764:	mov	r0, r8
   19768:	bl	129b8 <sprintf@plt+0x1410>
   1976c:	b	19754 <sprintf@plt+0x81ac>
   19770:	ldr	r3, [r7, #32]
   19774:	ldr	r2, [r7, #36]	; 0x24
   19778:	cmp	r2, #0
   1977c:	beq	197f0 <sprintf@plt+0x8248>
   19780:	str	r3, [r2, #4]
   19784:	ldr	r3, [r7, #32]
   19788:	cmp	r3, #0
   1978c:	strne	r2, [r3, #8]
   19790:	beq	197e0 <sprintf@plt+0x8238>
   19794:	ldr	r4, [pc, #208]	; 1986c <sprintf@plt+0x82c4>
   19798:	mov	r0, r7
   1979c:	add	r4, pc, r4
   197a0:	ldr	r3, [r4, #384]	; 0x180
   197a4:	sub	r3, r3, #1
   197a8:	str	r3, [r4, #384]	; 0x180
   197ac:	bl	11380 <free@plt>
   197b0:	ldr	r3, [r4, #384]	; 0x180
   197b4:	cmp	r3, #0
   197b8:	strbeq	r3, [r4, #388]	; 0x184
   197bc:	add	sp, sp, #12
   197c0:	ldrd	r4, [sp]
   197c4:	ldrd	r6, [sp, #8]
   197c8:	ldrd	r8, [sp, #16]
   197cc:	add	sp, sp, #24
   197d0:	pop	{pc}		; (ldr pc, [sp], #4)
   197d4:	mov	r0, r8
   197d8:	bl	17d90 <sprintf@plt+0x67e8>
   197dc:	b	19740 <sprintf@plt+0x8198>
   197e0:	ldr	r3, [pc, #136]	; 19870 <sprintf@plt+0x82c8>
   197e4:	add	r3, pc, r3
   197e8:	str	r2, [r3, #376]	; 0x178
   197ec:	b	19794 <sprintf@plt+0x81ec>
   197f0:	ldr	r1, [pc, #124]	; 19874 <sprintf@plt+0x82cc>
   197f4:	add	r1, pc, r1
   197f8:	str	r3, [r1, #380]	; 0x17c
   197fc:	b	19788 <sprintf@plt+0x81e0>
   19800:	mov	r4, #3
   19804:	b	19600 <sprintf@plt+0x8058>
   19808:	mov	r4, #4
   1980c:	b	19600 <sprintf@plt+0x8058>
   19810:	mov	r4, #2
   19814:	b	19600 <sprintf@plt+0x8058>
   19818:	ldr	r1, [pc, #88]	; 19878 <sprintf@plt+0x82d0>
   1981c:	mov	r3, r0
   19820:	add	r1, pc, r1
   19824:	mov	r0, #67	; 0x43
   19828:	ldr	r2, [r5]
   1982c:	bl	123a0 <sprintf@plt+0xdf8>
   19830:	mov	r0, #3
   19834:	bl	11590 <exit@plt>
   19838:	ldr	r1, [pc, #60]	; 1987c <sprintf@plt+0x82d4>
   1983c:	mov	r3, r0
   19840:	add	r1, pc, r1
   19844:	b	19824 <sprintf@plt+0x827c>
   19848:	andeq	r1, r0, r4, lsl #5
   1984c:	andeq	r1, r1, ip, lsl #21
   19850:	andeq	r1, r0, r8, ror #4
   19854:	andeq	r1, r0, r8, asr r2
   19858:	andeq	r1, r0, ip, asr #4
   1985c:	andeq	r1, r0, ip, lsr #5
   19860:	strdeq	r6, [r1], -ip
   19864:	andeq	r0, r0, r4, asr r1
   19868:	andeq	r0, r0, r0, lsl #3
   1986c:	andeq	r6, r1, r8, lsl #17
   19870:	andeq	r6, r1, r0, asr #16
   19874:	andeq	r6, r1, r0, lsr r8
   19878:	andeq	r1, r0, r8, lsr #1
   1987c:	andeq	r1, r0, r0, asr #1
   19880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19884:	mov	r7, r0
   19888:	ldr	r6, [pc, #72]	; 198d8 <sprintf@plt+0x8330>
   1988c:	ldr	r5, [pc, #72]	; 198dc <sprintf@plt+0x8334>
   19890:	add	r6, pc, r6
   19894:	add	r5, pc, r5
   19898:	sub	r6, r6, r5
   1989c:	mov	r8, r1
   198a0:	mov	r9, r2
   198a4:	bl	111bc <sigemptyset@plt-0x20>
   198a8:	asrs	r6, r6, #2
   198ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   198b0:	mov	r4, #0
   198b4:	add	r4, r4, #1
   198b8:	ldr	r3, [r5], #4
   198bc:	mov	r2, r9
   198c0:	mov	r1, r8
   198c4:	mov	r0, r7
   198c8:	blx	r3
   198cc:	cmp	r6, r4
   198d0:	bne	198b4 <sprintf@plt+0x830c>
   198d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   198d8:	andeq	r1, r1, r4, asr #12
   198dc:	andeq	r1, r1, ip, lsr r6
   198e0:	bx	lr

Disassembly of section .fini:

000198e4 <.fini>:
   198e4:	push	{r3, lr}
   198e8:	pop	{r3, pc}
