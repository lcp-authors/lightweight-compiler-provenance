
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a70 <.init>:
   10a70:	push	{r3, lr}
   10a74:	bl	10d38 <_start@@Base+0x3c>
   10a78:	pop	{r3, pc}

Disassembly of section .plt:

00010a7c <calloc@plt-0x14>:
   10a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a80:	ldr	lr, [pc, #4]	; 10a8c <calloc@plt-0x4>
   10a84:	add	lr, pc, lr
   10a88:	ldr	pc, [lr, #8]!
   10a8c:	andeq	r1, r1, r4, ror r5

00010a90 <calloc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1396]!	; 0x574

00010a9c <strstr@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa8 <raise@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1380]!	; 0x564

00010ab4 <strcmp@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ac0 <printf@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1364]!	; 0x554

00010acc <fopen@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1348]!	; 0x544

00010ae4 <fgets@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1340]!	; 0x53c

00010af0 <time@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1332]!	; 0x534

00010afc <realloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1324]!	; 0x52c

00010b08 <strcat@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1316]!	; 0x524

00010b14 <strcpy@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b20 <puts@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1300]!	; 0x514

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1292]!	; 0x50c

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1284]!	; 0x504

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b5c <srand@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b68 <rand@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b74 <fclose@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b80 <abort@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1236]!	; 0x4d4

Disassembly of section .text:

00010b8c <main@@Base>:
   10b8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10b90:	sub	sp, sp, #108	; 0x6c
   10b94:	bl	10fe4 <vetor_novo@@Base>
   10b98:	ldr	r1, [pc, #304]	; 10cd0 <main@@Base+0x144>
   10b9c:	mov	r5, #0
   10ba0:	mov	r8, #100	; 0x64
   10ba4:	mov	r9, r5
   10ba8:	mov	r4, r0
   10bac:	ldr	r0, [pc, #288]	; 10cd4 <main@@Base+0x148>
   10bb0:	bl	10acc <fopen@plt>
   10bb4:	mov	r7, r0
   10bb8:	mov	r2, r7
   10bbc:	mov	r1, r8
   10bc0:	add	r0, sp, #4
   10bc4:	bl	10ae4 <fgets@plt>
   10bc8:	cmp	r0, #0
   10bcc:	bne	10c78 <main@@Base+0xec>
   10bd0:	mov	r1, r5
   10bd4:	ldr	r0, [pc, #252]	; 10cd8 <main@@Base+0x14c>
   10bd8:	bl	10ac0 <printf@plt>
   10bdc:	mov	r0, r4
   10be0:	bl	10e24 <vetor_imprime@@Base>
   10be4:	ldr	r1, [pc, #240]	; 10cdc <main@@Base+0x150>
   10be8:	mov	r0, r4
   10bec:	bl	11280 <vetor_pesquisa@@Base>
   10bf0:	mov	r1, r0
   10bf4:	ldr	r0, [pc, #228]	; 10ce0 <main@@Base+0x154>
   10bf8:	bl	10ac0 <printf@plt>
   10bfc:	mov	r0, r4
   10c00:	bl	112cc <vetor_ordena@@Base>
   10c04:	cmp	r0, #0
   10c08:	bne	10cc4 <main@@Base+0x138>
   10c0c:	mov	r0, r4
   10c10:	bl	10e24 <vetor_imprime@@Base>
   10c14:	ldr	r1, [pc, #200]	; 10ce4 <main@@Base+0x158>
   10c18:	mov	r0, r4
   10c1c:	bl	10e6c <vetor_num_ocorrencias@@Base>
   10c20:	mov	r6, #0
   10c24:	mov	r1, r0
   10c28:	ldr	r0, [pc, #184]	; 10ce8 <main@@Base+0x15c>
   10c2c:	bl	10ac0 <printf@plt>
   10c30:	mov	r0, r4
   10c34:	bl	10ebc <vetor_remove_repetidas@@Base>
   10c38:	ldr	r1, [r4]
   10c3c:	ldr	r0, [pc, #168]	; 10cec <main@@Base+0x160>
   10c40:	sub	r1, r1, #1
   10c44:	bl	10ac0 <printf@plt>
   10c48:	ldr	r1, [pc, #160]	; 10cf0 <main@@Base+0x164>
   10c4c:	mov	r0, r4
   10c50:	bl	10f5c <vetor_pesquisa_parcial@@Base>
   10c54:	mov	r5, r0
   10c58:	bl	10e24 <vetor_imprime@@Base>
   10c5c:	mov	r0, r5
   10c60:	bl	11008 <vetor_apaga@@Base>
   10c64:	mov	r0, r4
   10c68:	bl	11008 <vetor_apaga@@Base>
   10c6c:	mov	r0, r7
   10c70:	bl	10b74 <fclose@plt>
   10c74:	b	10cb0 <main@@Base+0x124>
   10c78:	add	r0, sp, #4
   10c7c:	bl	10b50 <strlen@plt>
   10c80:	add	r3, sp, #104	; 0x68
   10c84:	mov	r2, r5
   10c88:	add	r1, sp, #4
   10c8c:	add	r0, r3, r0
   10c90:	strb	r9, [r0, #-101]	; 0xffffff9b
   10c94:	mov	r0, r4
   10c98:	bl	11128 <vetor_insere@@Base>
   10c9c:	cmn	r0, #1
   10ca0:	mov	r6, r0
   10ca4:	bne	10cbc <main@@Base+0x130>
   10ca8:	ldr	r0, [pc, #68]	; 10cf4 <main@@Base+0x168>
   10cac:	bl	10b20 <puts@plt>
   10cb0:	mov	r0, r6
   10cb4:	add	sp, sp, #108	; 0x6c
   10cb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10cbc:	add	r5, r5, #1
   10cc0:	b	10bb8 <main@@Base+0x2c>
   10cc4:	ldr	r0, [pc, #44]	; 10cf8 <main@@Base+0x16c>
   10cc8:	bl	10b20 <puts@plt>
   10ccc:	b	10c14 <main@@Base+0x88>
   10cd0:	andeq	r1, r1, pc, ror r8
   10cd4:	muleq	r1, r5, r7
   10cd8:	ldrdeq	r1, [r1], -r8
   10cdc:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10ce0:	andeq	r1, r1, r4, lsl r8
   10ce4:	andeq	r1, r1, r1, lsl #17
   10ce8:	muleq	r1, r4, r8
   10cec:	andeq	r1, r1, ip, asr #17
   10cf0:	andeq	r1, r1, r9, lsl #18
   10cf4:	andeq	r1, r1, fp, lsr #15
   10cf8:	andeq	r1, r1, fp, asr r8

00010cfc <_start@@Base>:
   10cfc:	mov	fp, #0
   10d00:	mov	lr, #0
   10d04:	pop	{r1}		; (ldr r1, [sp], #4)
   10d08:	mov	r2, sp
   10d0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d10:	push	{r0}		; (str r0, [sp, #-4]!)
   10d14:	ldr	ip, [pc, #16]	; 10d2c <_start@@Base+0x30>
   10d18:	push	{ip}		; (str ip, [sp, #-4]!)
   10d1c:	ldr	r0, [pc, #12]	; 10d30 <_start@@Base+0x34>
   10d20:	ldr	r3, [pc, #12]	; 10d34 <_start@@Base+0x38>
   10d24:	bl	10b38 <__libc_start_main@plt>
   10d28:	bl	10b80 <abort@plt>
   10d2c:	andeq	r1, r1, r4, lsl r7
   10d30:	andeq	r0, r1, ip, lsl #23
   10d34:			; <UNDEFINED> instruction: 0x000116b4
   10d38:	ldr	r3, [pc, #20]	; 10d54 <_start@@Base+0x58>
   10d3c:	ldr	r2, [pc, #20]	; 10d58 <_start@@Base+0x5c>
   10d40:	add	r3, pc, r3
   10d44:	ldr	r2, [r3, r2]
   10d48:	cmp	r2, #0
   10d4c:	bxeq	lr
   10d50:	b	10b44 <__gmon_start__@plt>
   10d54:			; <UNDEFINED> instruction: 0x000112b8
   10d58:	andeq	r0, r0, r0, rrx
   10d5c:	ldr	r3, [pc, #28]	; 10d80 <_start@@Base+0x84>
   10d60:	ldr	r0, [pc, #28]	; 10d84 <_start@@Base+0x88>
   10d64:	sub	r3, r3, r0
   10d68:	cmp	r3, #6
   10d6c:	bxls	lr
   10d70:	ldr	r3, [pc, #16]	; 10d88 <_start@@Base+0x8c>
   10d74:	cmp	r3, #0
   10d78:	bxeq	lr
   10d7c:	bx	r3
   10d80:	andeq	r2, r2, pc, rrx
   10d84:	andeq	r2, r2, ip, rrx
   10d88:	andeq	r0, r0, r0
   10d8c:	ldr	r1, [pc, #36]	; 10db8 <_start@@Base+0xbc>
   10d90:	ldr	r0, [pc, #36]	; 10dbc <_start@@Base+0xc0>
   10d94:	sub	r1, r1, r0
   10d98:	asr	r1, r1, #2
   10d9c:	add	r1, r1, r1, lsr #31
   10da0:	asrs	r1, r1, #1
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <_start@@Base+0xc4>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	andeq	r2, r2, ip, rrx
   10dbc:	andeq	r2, r2, ip, rrx
   10dc0:	andeq	r0, r0, r0
   10dc4:	push	{r4, lr}
   10dc8:	ldr	r4, [pc, #24]	; 10de8 <_start@@Base+0xec>
   10dcc:	ldrb	r3, [r4]
   10dd0:	cmp	r3, #0
   10dd4:	popne	{r4, pc}
   10dd8:	bl	10d5c <_start@@Base+0x60>
   10ddc:	mov	r3, #1
   10de0:	strb	r3, [r4]
   10de4:	pop	{r4, pc}
   10de8:	andeq	r2, r2, ip, rrx
   10dec:	ldr	r0, [pc, #40]	; 10e1c <_start@@Base+0x120>
   10df0:	ldr	r3, [r0]
   10df4:	cmp	r3, #0
   10df8:	bne	10e00 <_start@@Base+0x104>
   10dfc:	b	10d8c <_start@@Base+0x90>
   10e00:	ldr	r3, [pc, #24]	; 10e20 <_start@@Base+0x124>
   10e04:	cmp	r3, #0
   10e08:	beq	10dfc <_start@@Base+0x100>
   10e0c:	push	{r4, lr}
   10e10:	blx	r3
   10e14:	pop	{r4, lr}
   10e18:	b	10d8c <_start@@Base+0x90>
   10e1c:	andeq	r1, r2, r4, lsl pc
   10e20:	andeq	r0, r0, r0

00010e24 <vetor_imprime@@Base>:
   10e24:	push	{r4, r5, r6, r7, r8, lr}
   10e28:	mov	r5, r0
   10e2c:	ldr	r6, [r0]
   10e30:	ldr	r7, [pc, #48]	; 10e68 <vetor_imprime@@Base+0x44>
   10e34:	mov	r4, #0
   10e38:	cmp	r4, r6
   10e3c:	blt	10e44 <vetor_imprime@@Base+0x20>
   10e40:	pop	{r4, r5, r6, r7, r8, pc}
   10e44:	mov	r1, r4
   10e48:	mov	r0, r5
   10e4c:	bl	110f4 <vetor_elemento@@Base>
   10e50:	mov	r1, r4
   10e54:	add	r4, r4, #1
   10e58:	mov	r2, r0
   10e5c:	mov	r0, r7
   10e60:	bl	10ac0 <printf@plt>
   10e64:	b	10e38 <vetor_imprime@@Base+0x14>
   10e68:	andeq	r1, r1, r4, lsr #14

00010e6c <vetor_num_ocorrencias@@Base>:
   10e6c:	push	{r4, r5, r6, r7, r8, lr}
   10e70:	mov	r4, #0
   10e74:	ldr	r7, [r0]
   10e78:	mov	r6, r0
   10e7c:	mov	r8, r1
   10e80:	mov	r5, r4
   10e84:	cmp	r4, r7
   10e88:	blt	10e94 <vetor_num_ocorrencias@@Base+0x28>
   10e8c:	mov	r0, r5
   10e90:	pop	{r4, r5, r6, r7, r8, pc}
   10e94:	mov	r1, r4
   10e98:	mov	r0, r6
   10e9c:	bl	110f4 <vetor_elemento@@Base>
   10ea0:	add	r4, r4, #1
   10ea4:	mov	r1, r0
   10ea8:	mov	r0, r8
   10eac:	bl	10ab4 <strcmp@plt>
   10eb0:	cmp	r0, #0
   10eb4:	addeq	r5, r5, #1
   10eb8:	b	10e84 <vetor_num_ocorrencias@@Base+0x18>

00010ebc <vetor_remove_repetidas@@Base>:
   10ebc:	push	{r4, r5, r6, r7, lr}
   10ec0:	mov	r6, r0
   10ec4:	ldr	r7, [pc, #140]	; 10f58 <vetor_remove_repetidas@@Base+0x9c>
   10ec8:	sub	sp, sp, #108	; 0x6c
   10ecc:	mov	r5, #0
   10ed0:	ldr	r3, [r6]
   10ed4:	cmp	r5, r3
   10ed8:	blt	10ee4 <vetor_remove_repetidas@@Base+0x28>
   10edc:	add	sp, sp, #108	; 0x6c
   10ee0:	pop	{r4, r5, r6, r7, pc}
   10ee4:	mov	r1, r5
   10ee8:	mov	r0, r6
   10eec:	bl	110f4 <vetor_elemento@@Base>
   10ef0:	add	r5, r5, #1
   10ef4:	mov	r4, r5
   10ef8:	mov	r1, r0
   10efc:	add	r0, sp, #4
   10f00:	bl	10b14 <strcpy@plt>
   10f04:	ldr	r3, [r6]
   10f08:	cmp	r4, r3
   10f0c:	bge	10ed0 <vetor_remove_repetidas@@Base+0x14>
   10f10:	mov	r1, r4
   10f14:	mov	r0, r6
   10f18:	bl	110f4 <vetor_elemento@@Base>
   10f1c:	mov	r1, r0
   10f20:	add	r0, sp, #4
   10f24:	bl	10ab4 <strcmp@plt>
   10f28:	cmp	r0, #0
   10f2c:	bne	10f50 <vetor_remove_repetidas@@Base+0x94>
   10f30:	mov	r1, r4
   10f34:	mov	r0, r6
   10f38:	bl	11200 <vetor_remove@@Base>
   10f3c:	cmn	r0, #1
   10f40:	subne	r4, r4, #1
   10f44:	bne	10f50 <vetor_remove_repetidas@@Base+0x94>
   10f48:	mov	r0, r7
   10f4c:	bl	10b20 <puts@plt>
   10f50:	add	r4, r4, #1
   10f54:	b	10f04 <vetor_remove_repetidas@@Base+0x48>
   10f58:	andeq	r1, r1, r1, lsr r7

00010f5c <vetor_pesquisa_parcial@@Base>:
   10f5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f60:	mov	r5, r0
   10f64:	mov	r7, r1
   10f68:	bl	10fe4 <vetor_novo@@Base>
   10f6c:	mov	r4, #0
   10f70:	ldr	r9, [pc, #104]	; 10fe0 <vetor_pesquisa_parcial@@Base+0x84>
   10f74:	mov	r8, r4
   10f78:	mov	r6, r0
   10f7c:	ldr	r3, [r5]
   10f80:	cmp	r4, r3
   10f84:	blt	10f90 <vetor_pesquisa_parcial@@Base+0x34>
   10f88:	mov	r0, r6
   10f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f90:	mov	r1, r4
   10f94:	mov	r0, r5
   10f98:	bl	110f4 <vetor_elemento@@Base>
   10f9c:	mov	r1, r7
   10fa0:	bl	10a9c <strstr@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fd8 <vetor_pesquisa_parcial@@Base+0x7c>
   10fac:	mov	r1, r4
   10fb0:	mov	r0, r5
   10fb4:	bl	110f4 <vetor_elemento@@Base>
   10fb8:	mov	r2, r8
   10fbc:	mov	r1, r0
   10fc0:	mov	r0, r6
   10fc4:	bl	11128 <vetor_insere@@Base>
   10fc8:	cmn	r0, #1
   10fcc:	bne	10fd8 <vetor_pesquisa_parcial@@Base+0x7c>
   10fd0:	mov	r0, r9
   10fd4:	bl	10b20 <puts@plt>
   10fd8:	add	r4, r4, #1
   10fdc:	b	10f7c <vetor_pesquisa_parcial@@Base+0x20>
   10fe0:	andeq	r1, r1, fp, asr r7

00010fe4 <vetor_novo@@Base>:
   10fe4:	push	{r4, lr}
   10fe8:	mov	r0, #12
   10fec:	bl	10b2c <malloc@plt>
   10ff0:	cmp	r0, #0
   10ff4:	movne	r3, #0
   10ff8:	strne	r3, [r0]
   10ffc:	strne	r3, [r0, #4]
   11000:	strne	r3, [r0, #8]
   11004:	pop	{r4, pc}

00011008 <vetor_apaga@@Base>:
   11008:	push	{r4, r5, r6, lr}
   1100c:	subs	r4, r0, #0
   11010:	movne	r5, #0
   11014:	bne	1102c <vetor_apaga@@Base+0x24>
   11018:	pop	{r4, r5, r6, pc}
   1101c:	ldr	r3, [r4, #8]
   11020:	ldr	r0, [r3, r5, lsl #2]
   11024:	bl	10ad8 <free@plt>
   11028:	add	r5, r5, #1
   1102c:	ldr	r3, [r4]
   11030:	cmp	r5, r3
   11034:	blt	1101c <vetor_apaga@@Base+0x14>
   11038:	ldr	r0, [r4, #8]
   1103c:	bl	10ad8 <free@plt>
   11040:	mov	r0, r4
   11044:	pop	{r4, r5, r6, lr}
   11048:	b	10ad8 <free@plt>

0001104c <vetor_atribui@@Base>:
   1104c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11050:	mov	r5, r0
   11054:	clz	r0, r0
   11058:	lsr	r0, r0, #5
   1105c:	orrs	r3, r0, r1, lsr #31
   11060:	beq	11070 <vetor_atribui@@Base+0x24>
   11064:	mvn	r4, #0
   11068:	mov	r0, r4
   1106c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11070:	ldr	r3, [r5]
   11074:	mov	r4, r1
   11078:	cmp	r1, r3
   1107c:	bge	11064 <vetor_atribui@@Base+0x18>
   11080:	mov	r0, r2
   11084:	mov	r9, r2
   11088:	bl	10b50 <strlen@plt>
   1108c:	ldr	r6, [r5, #8]
   11090:	lsl	sl, r4, #2
   11094:	ldr	r7, [r6, r4, lsl #2]
   11098:	mov	r8, r0
   1109c:	mov	r0, r7
   110a0:	bl	10b50 <strlen@plt>
   110a4:	cmp	r8, r0
   110a8:	bhi	110c0 <vetor_atribui@@Base+0x74>
   110ac:	ldr	r3, [r5, #8]
   110b0:	mov	r1, r9
   110b4:	ldr	r0, [r3, sl]
   110b8:	bl	10b14 <strcpy@plt>
   110bc:	b	11068 <vetor_atribui@@Base+0x1c>
   110c0:	add	r1, r8, #1
   110c4:	mov	r0, r7
   110c8:	bl	10afc <realloc@plt>
   110cc:	ldr	r3, [r5, #8]
   110d0:	str	r0, [r6, r4, lsl #2]
   110d4:	ldr	r3, [r3, r4, lsl #2]
   110d8:	cmp	r3, #0
   110dc:	bne	110ac <vetor_atribui@@Base+0x60>
   110e0:	b	11064 <vetor_atribui@@Base+0x18>

000110e4 <vetor_tamanho@@Base>:
   110e4:	cmp	r0, #0
   110e8:	ldrne	r0, [r0]
   110ec:	mvneq	r0, #0
   110f0:	bx	lr

000110f4 <vetor_elemento@@Base>:
   110f4:	lsr	r3, r1, #31
   110f8:	cmp	r0, #0
   110fc:	orreq	r3, r3, #1
   11100:	cmp	r3, #0
   11104:	bne	11120 <vetor_elemento@@Base+0x2c>
   11108:	ldr	r2, [r0]
   1110c:	cmp	r1, r2
   11110:	bge	11120 <vetor_elemento@@Base+0x2c>
   11114:	ldr	r3, [r0, #8]
   11118:	ldr	r0, [r3, r1, lsl #2]
   1111c:	bx	lr
   11120:	mov	r0, #0
   11124:	bx	lr

00011128 <vetor_insere@@Base>:
   11128:	push	{r4, r5, r6, r7, r8, lr}
   1112c:	mov	r4, r0
   11130:	clz	r0, r0
   11134:	lsr	r0, r0, #5
   11138:	orrs	r3, r0, r2, lsr #31
   1113c:	beq	1114c <vetor_insere@@Base+0x24>
   11140:	mvn	r5, #0
   11144:	mov	r0, r5
   11148:	pop	{r4, r5, r6, r7, r8, pc}
   1114c:	ldr	r3, [r4]
   11150:	mov	r5, r2
   11154:	cmp	r2, r3
   11158:	bgt	11140 <vetor_insere@@Base+0x18>
   1115c:	ldr	r2, [r4, #4]
   11160:	mov	r8, r1
   11164:	cmp	r3, r2
   11168:	beq	111bc <vetor_insere@@Base+0x94>
   1116c:	ldr	r6, [r4]
   11170:	sub	r3, r6, #1
   11174:	lsl	r2, r6, #2
   11178:	cmp	r3, r5
   1117c:	sub	r1, r2, #4
   11180:	ldr	r7, [r4, #8]
   11184:	bge	111ec <vetor_insere@@Base+0xc4>
   11188:	mov	r0, r8
   1118c:	bl	10b50 <strlen@plt>
   11190:	mov	r1, #1
   11194:	add	r0, r0, r1
   11198:	bl	10a90 <calloc@plt>
   1119c:	cmp	r0, #0
   111a0:	str	r0, [r7, r5, lsl #2]
   111a4:	beq	11140 <vetor_insere@@Base+0x18>
   111a8:	mov	r1, r8
   111ac:	add	r6, r6, #1
   111b0:	bl	10b14 <strcpy@plt>
   111b4:	str	r6, [r4]
   111b8:	b	11144 <vetor_insere@@Base+0x1c>
   111bc:	cmp	r3, #0
   111c0:	moveq	r3, #1
   111c4:	lslne	r3, r3, #1
   111c8:	str	r3, [r4, #4]
   111cc:	ldr	r1, [r4, #4]
   111d0:	ldr	r0, [r4, #8]
   111d4:	lsl	r1, r1, #2
   111d8:	bl	10afc <realloc@plt>
   111dc:	cmp	r0, #0
   111e0:	str	r0, [r4, #8]
   111e4:	bne	1116c <vetor_insere@@Base+0x44>
   111e8:	b	11140 <vetor_insere@@Base+0x18>
   111ec:	ldr	r0, [r7, r1]
   111f0:	sub	r3, r3, #1
   111f4:	str	r0, [r7, r2]
   111f8:	mov	r2, r1
   111fc:	b	11178 <vetor_insere@@Base+0x50>

00011200 <vetor_remove@@Base>:
   11200:	push	{r4, r5, r6, lr}
   11204:	mov	r5, r0
   11208:	clz	r0, r0
   1120c:	lsr	r0, r0, #5
   11210:	orrs	r3, r0, r1, lsr #31
   11214:	bne	11278 <vetor_remove@@Base+0x78>
   11218:	ldr	r3, [r5]
   1121c:	cmp	r1, r3
   11220:	bge	11278 <vetor_remove@@Base+0x78>
   11224:	ldr	r3, [r5, #8]
   11228:	mov	r4, r1
   1122c:	lsl	r6, r1, #2
   11230:	ldr	r0, [r3, r1, lsl #2]
   11234:	bl	10ad8 <free@plt>
   11238:	add	r4, r4, #1
   1123c:	mov	r3, r6
   11240:	ldr	r2, [r5]
   11244:	add	r1, r3, #4
   11248:	cmp	r4, r2
   1124c:	blt	11260 <vetor_remove@@Base+0x60>
   11250:	sub	r2, r2, #1
   11254:	str	r2, [r5]
   11258:	mov	r0, #0
   1125c:	pop	{r4, r5, r6, pc}
   11260:	ldr	r2, [r5, #8]
   11264:	add	r4, r4, #1
   11268:	ldr	r0, [r2, r1]
   1126c:	str	r0, [r2, r3]
   11270:	mov	r3, r1
   11274:	b	11240 <vetor_remove@@Base+0x40>
   11278:	mvn	r0, #0
   1127c:	pop	{r4, r5, r6, pc}

00011280 <vetor_pesquisa@@Base>:
   11280:	push	{r4, r5, r6, r7, r8, lr}
   11284:	subs	r5, r0, #0
   11288:	movne	r6, r1
   1128c:	ldrne	r7, [r5]
   11290:	movne	r4, #0
   11294:	bne	112c0 <vetor_pesquisa@@Base+0x40>
   11298:	mvn	r4, #0
   1129c:	mov	r0, r4
   112a0:	pop	{r4, r5, r6, r7, r8, pc}
   112a4:	ldr	r3, [r5, #8]
   112a8:	mov	r1, r6
   112ac:	ldr	r0, [r3, r4, lsl #2]
   112b0:	bl	10ab4 <strcmp@plt>
   112b4:	cmp	r0, #0
   112b8:	beq	1129c <vetor_pesquisa@@Base+0x1c>
   112bc:	add	r4, r4, #1
   112c0:	cmp	r4, r7
   112c4:	blt	112a4 <vetor_pesquisa@@Base+0x24>
   112c8:	b	11298 <vetor_pesquisa@@Base+0x18>

000112cc <vetor_ordena@@Base>:
   112cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112d0:	subs	r5, r0, #0
   112d4:	movne	r4, #1
   112d8:	bne	11320 <vetor_ordena@@Base+0x54>
   112dc:	mvn	r0, #0
   112e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112e4:	ldr	r8, [r5, #8]
   112e8:	mov	r6, r4
   112ec:	add	r7, r8, r4, lsl #2
   112f0:	ldr	r9, [r8, r4, lsl #2]
   112f4:	ldr	r1, [r7, #-4]
   112f8:	mov	r0, r9
   112fc:	bl	10ab4 <strcmp@plt>
   11300:	cmp	r0, #0
   11304:	bge	11318 <vetor_ordena@@Base+0x4c>
   11308:	ldr	r3, [r7, #-4]!
   1130c:	subs	r6, r6, #1
   11310:	str	r3, [r7, #4]
   11314:	bne	112f4 <vetor_ordena@@Base+0x28>
   11318:	add	r4, r4, #1
   1131c:	str	r9, [r8, r6, lsl #2]
   11320:	ldr	r3, [r5]
   11324:	cmp	r4, r3
   11328:	blt	112e4 <vetor_ordena@@Base+0x18>
   1132c:	mov	r0, #0
   11330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011334 <vetor_concatena@@Base>:
   11334:	cmp	r1, #0
   11338:	cmpne	r0, #0
   1133c:	push	{r4, r5, r6, lr}
   11340:	moveq	r6, #0
   11344:	beq	1139c <vetor_concatena@@Base+0x68>
   11348:	mov	r4, r1
   1134c:	mov	r5, r0
   11350:	bl	10fe4 <vetor_novo@@Base>
   11354:	ldr	r2, [r5]
   11358:	ldr	r1, [r4, #4]
   1135c:	mov	r6, r0
   11360:	ldr	r0, [r4]
   11364:	add	r3, r2, r0, lsl #2
   11368:	str	r3, [r6, #8]
   1136c:	ldr	r3, [r5, #4]
   11370:	ldr	r0, [r2, r0, lsl #2]
   11374:	add	r3, r3, r1
   11378:	str	r3, [r6, #4]
   1137c:	ldr	r3, [r5, #8]
   11380:	ldr	r1, [r3]
   11384:	bl	10b14 <strcpy@plt>
   11388:	ldr	r2, [r4, #8]
   1138c:	ldr	r3, [r6, #8]
   11390:	ldr	r1, [r2]
   11394:	ldr	r0, [r3]
   11398:	bl	10b08 <strcat@plt>
   1139c:	mov	r0, r6
   113a0:	pop	{r4, r5, r6, pc}

000113a4 <vetor_inverte@@Base>:
   113a4:	cmp	r0, #0
   113a8:	beq	113fc <vetor_inverte@@Base+0x58>
   113ac:	ldr	r2, [r0]
   113b0:	cmp	r2, #0
   113b4:	ble	113fc <vetor_inverte@@Base+0x58>
   113b8:	mov	r3, #0
   113bc:	push	{r4, lr}
   113c0:	sub	r1, r2, r3
   113c4:	cmp	r1, r2
   113c8:	movlt	ip, r1
   113cc:	movge	ip, r2
   113d0:	cmp	r3, ip
   113d4:	blt	113e0 <vetor_inverte@@Base+0x3c>
   113d8:	mov	r0, #0
   113dc:	pop	{r4, pc}
   113e0:	ldr	ip, [r0, #8]
   113e4:	ldr	lr, [ip, r3, lsl #2]
   113e8:	ldr	r4, [ip, r1, lsl #2]
   113ec:	str	r4, [ip, r3, lsl #2]
   113f0:	str	lr, [ip, r1, lsl #2]
   113f4:	add	r3, r3, #1
   113f8:	b	113c0 <vetor_inverte@@Base+0x1c>
   113fc:	mov	r0, #0
   11400:	bx	lr

00011404 <vetor_baralha@@Base>:
   11404:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11408:	mov	r4, #0
   1140c:	ldr	r7, [r0]
   11410:	bl	10fe4 <vetor_novo@@Base>
   11414:	add	r8, r7, #1
   11418:	mov	r6, r0
   1141c:	add	r0, sp, #4
   11420:	bl	10af0 <time@plt>
   11424:	bl	10b5c <srand@plt>
   11428:	cmp	r4, r7
   1142c:	blt	1143c <vetor_baralha@@Base+0x38>
   11430:	mov	r0, r6
   11434:	add	sp, sp, #12
   11438:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1143c:	bl	10b68 <rand@plt>
   11440:	mov	r1, r8
   11444:	bl	11684 <vetor_baralha@@Base+0x280>
   11448:	ldr	r5, [r6, #8]
   1144c:	ldr	r9, [r5, r4, lsl #2]
   11450:	ldr	r3, [r5, r1, lsl #2]
   11454:	str	r3, [r5, r4, lsl #2]
   11458:	str	r9, [r5, r1, lsl #2]
   1145c:	add	r4, r4, #1
   11460:	b	11428 <vetor_baralha@@Base+0x24>
   11464:	cmp	r1, #0
   11468:	beq	11674 <vetor_baralha@@Base+0x270>
   1146c:	eor	ip, r0, r1
   11470:	rsbmi	r1, r1, #0
   11474:	subs	r2, r1, #1
   11478:	beq	11640 <vetor_baralha@@Base+0x23c>
   1147c:	movs	r3, r0
   11480:	rsbmi	r3, r0, #0
   11484:	cmp	r3, r1
   11488:	bls	1164c <vetor_baralha@@Base+0x248>
   1148c:	tst	r1, r2
   11490:	beq	1165c <vetor_baralha@@Base+0x258>
   11494:	clz	r2, r3
   11498:	clz	r0, r1
   1149c:	sub	r2, r0, r2
   114a0:	rsbs	r2, r2, #31
   114a4:	addne	r2, r2, r2, lsl #1
   114a8:	mov	r0, #0
   114ac:	addne	pc, pc, r2, lsl #2
   114b0:	nop			; (mov r0, r0)
   114b4:	cmp	r3, r1, lsl #31
   114b8:	adc	r0, r0, r0
   114bc:	subcs	r3, r3, r1, lsl #31
   114c0:	cmp	r3, r1, lsl #30
   114c4:	adc	r0, r0, r0
   114c8:	subcs	r3, r3, r1, lsl #30
   114cc:	cmp	r3, r1, lsl #29
   114d0:	adc	r0, r0, r0
   114d4:	subcs	r3, r3, r1, lsl #29
   114d8:	cmp	r3, r1, lsl #28
   114dc:	adc	r0, r0, r0
   114e0:	subcs	r3, r3, r1, lsl #28
   114e4:	cmp	r3, r1, lsl #27
   114e8:	adc	r0, r0, r0
   114ec:	subcs	r3, r3, r1, lsl #27
   114f0:	cmp	r3, r1, lsl #26
   114f4:	adc	r0, r0, r0
   114f8:	subcs	r3, r3, r1, lsl #26
   114fc:	cmp	r3, r1, lsl #25
   11500:	adc	r0, r0, r0
   11504:	subcs	r3, r3, r1, lsl #25
   11508:	cmp	r3, r1, lsl #24
   1150c:	adc	r0, r0, r0
   11510:	subcs	r3, r3, r1, lsl #24
   11514:	cmp	r3, r1, lsl #23
   11518:	adc	r0, r0, r0
   1151c:	subcs	r3, r3, r1, lsl #23
   11520:	cmp	r3, r1, lsl #22
   11524:	adc	r0, r0, r0
   11528:	subcs	r3, r3, r1, lsl #22
   1152c:	cmp	r3, r1, lsl #21
   11530:	adc	r0, r0, r0
   11534:	subcs	r3, r3, r1, lsl #21
   11538:	cmp	r3, r1, lsl #20
   1153c:	adc	r0, r0, r0
   11540:	subcs	r3, r3, r1, lsl #20
   11544:	cmp	r3, r1, lsl #19
   11548:	adc	r0, r0, r0
   1154c:	subcs	r3, r3, r1, lsl #19
   11550:	cmp	r3, r1, lsl #18
   11554:	adc	r0, r0, r0
   11558:	subcs	r3, r3, r1, lsl #18
   1155c:	cmp	r3, r1, lsl #17
   11560:	adc	r0, r0, r0
   11564:	subcs	r3, r3, r1, lsl #17
   11568:	cmp	r3, r1, lsl #16
   1156c:	adc	r0, r0, r0
   11570:	subcs	r3, r3, r1, lsl #16
   11574:	cmp	r3, r1, lsl #15
   11578:	adc	r0, r0, r0
   1157c:	subcs	r3, r3, r1, lsl #15
   11580:	cmp	r3, r1, lsl #14
   11584:	adc	r0, r0, r0
   11588:	subcs	r3, r3, r1, lsl #14
   1158c:	cmp	r3, r1, lsl #13
   11590:	adc	r0, r0, r0
   11594:	subcs	r3, r3, r1, lsl #13
   11598:	cmp	r3, r1, lsl #12
   1159c:	adc	r0, r0, r0
   115a0:	subcs	r3, r3, r1, lsl #12
   115a4:	cmp	r3, r1, lsl #11
   115a8:	adc	r0, r0, r0
   115ac:	subcs	r3, r3, r1, lsl #11
   115b0:	cmp	r3, r1, lsl #10
   115b4:	adc	r0, r0, r0
   115b8:	subcs	r3, r3, r1, lsl #10
   115bc:	cmp	r3, r1, lsl #9
   115c0:	adc	r0, r0, r0
   115c4:	subcs	r3, r3, r1, lsl #9
   115c8:	cmp	r3, r1, lsl #8
   115cc:	adc	r0, r0, r0
   115d0:	subcs	r3, r3, r1, lsl #8
   115d4:	cmp	r3, r1, lsl #7
   115d8:	adc	r0, r0, r0
   115dc:	subcs	r3, r3, r1, lsl #7
   115e0:	cmp	r3, r1, lsl #6
   115e4:	adc	r0, r0, r0
   115e8:	subcs	r3, r3, r1, lsl #6
   115ec:	cmp	r3, r1, lsl #5
   115f0:	adc	r0, r0, r0
   115f4:	subcs	r3, r3, r1, lsl #5
   115f8:	cmp	r3, r1, lsl #4
   115fc:	adc	r0, r0, r0
   11600:	subcs	r3, r3, r1, lsl #4
   11604:	cmp	r3, r1, lsl #3
   11608:	adc	r0, r0, r0
   1160c:	subcs	r3, r3, r1, lsl #3
   11610:	cmp	r3, r1, lsl #2
   11614:	adc	r0, r0, r0
   11618:	subcs	r3, r3, r1, lsl #2
   1161c:	cmp	r3, r1, lsl #1
   11620:	adc	r0, r0, r0
   11624:	subcs	r3, r3, r1, lsl #1
   11628:	cmp	r3, r1
   1162c:	adc	r0, r0, r0
   11630:	subcs	r3, r3, r1
   11634:	cmp	ip, #0
   11638:	rsbmi	r0, r0, #0
   1163c:	bx	lr
   11640:	teq	ip, r0
   11644:	rsbmi	r0, r0, #0
   11648:	bx	lr
   1164c:	movcc	r0, #0
   11650:	asreq	r0, ip, #31
   11654:	orreq	r0, r0, #1
   11658:	bx	lr
   1165c:	clz	r2, r1
   11660:	rsb	r2, r2, #31
   11664:	cmp	ip, #0
   11668:	lsr	r0, r3, r2
   1166c:	rsbmi	r0, r0, #0
   11670:	bx	lr
   11674:	cmp	r0, #0
   11678:	mvngt	r0, #-2147483648	; 0x80000000
   1167c:	movlt	r0, #-2147483648	; 0x80000000
   11680:	b	116a4 <vetor_baralha@@Base+0x2a0>
   11684:	cmp	r1, #0
   11688:	beq	11674 <vetor_baralha@@Base+0x270>
   1168c:	push	{r0, r1, lr}
   11690:	bl	1146c <vetor_baralha@@Base+0x68>
   11694:	pop	{r1, r2, lr}
   11698:	mul	r3, r2, r0
   1169c:	sub	r1, r1, r3
   116a0:	bx	lr
   116a4:	push	{r1, lr}
   116a8:	mov	r0, #8
   116ac:	bl	10aa8 <raise@plt>
   116b0:	pop	{r1, pc}

000116b4 <__libc_csu_init@@Base>:
   116b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116b8:	mov	r7, r0
   116bc:	ldr	r6, [pc, #72]	; 1170c <__libc_csu_init@@Base+0x58>
   116c0:	ldr	r5, [pc, #72]	; 11710 <__libc_csu_init@@Base+0x5c>
   116c4:	add	r6, pc, r6
   116c8:	add	r5, pc, r5
   116cc:	sub	r6, r6, r5
   116d0:	mov	r8, r1
   116d4:	mov	r9, r2
   116d8:	bl	10a70 <calloc@plt-0x20>
   116dc:	asrs	r6, r6, #2
   116e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116e4:	mov	r4, #0
   116e8:	add	r4, r4, #1
   116ec:	ldr	r3, [r5], #4
   116f0:	mov	r2, r9
   116f4:	mov	r1, r8
   116f8:	mov	r0, r7
   116fc:	blx	r3
   11700:	cmp	r6, r4
   11704:	bne	116e8 <__libc_csu_init@@Base+0x34>
   11708:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1170c:	andeq	r0, r1, r4, asr #16
   11710:	andeq	r0, r1, ip, lsr r8

00011714 <__libc_csu_fini@@Base>:
   11714:	bx	lr

Disassembly of section .fini:

00011718 <.fini>:
   11718:	push	{r3, lr}
   1171c:	pop	{r3, pc}
