
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

000106b4 <.init>:
   106b4:	push	{r3, lr}
   106b8:	bl	10880 <abort@plt+0xbc>
   106bc:	pop	{r3, pc}

Disassembly of section .plt:

000106c0 <calloc@plt-0x14>:
   106c0:	push	{lr}		; (str lr, [sp, #-4]!)
   106c4:	ldr	lr, [pc, #4]	; 106d0 <calloc@plt-0x4>
   106c8:	add	lr, pc, lr
   106cc:	ldr	pc, [lr, #8]!
   106d0:	andeq	r1, r1, r0, lsr r9

000106d4 <calloc@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2352]!	; 0x930

000106e0 <strcmp@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2344]!	; 0x928

000106ec <fopen@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2336]!	; 0x920

000106f8 <free@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2328]!	; 0x918

00010704 <fgets@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2320]!	; 0x910

00010710 <strdup@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2312]!	; 0x908

0001071c <unlink@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2304]!	; 0x900

00010728 <__xstat@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2296]!	; 0x8f8

00010734 <__libc_start_main@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010740 <__sysv_signal@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2280]!	; 0x8e8

0001074c <__gmon_start__@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2272]!	; 0x8e0

00010758 <getpid@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2264]!	; 0x8d8

00010764 <exit@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010770 <strlen@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2248]!	; 0x8c8

0001077c <fprintf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2240]!	; 0x8c0

00010788 <__isoc99_sscanf@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2232]!	; 0x8b8

00010794 <fclose@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2224]!	; 0x8b0

000107a0 <sprintf@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2216]!	; 0x8a8

000107ac <fputs@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107b8 <strncmp@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2200]!	; 0x898

000107c4 <abort@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2192]!	; 0x890

Disassembly of section .text:

000107d0 <error@@Base-0x678>:
   107d0:	push	{r0, r1, r4, r5, r6, lr}
   107d4:	add	ip, sp, #8
   107d8:	mov	r3, #0
   107dc:	str	r0, [ip, #-4]!
   107e0:	ldr	r2, [pc, #80]	; 10838 <abort@plt+0x74>
   107e4:	mov	r0, ip
   107e8:	mov	r5, r1
   107ec:	bl	10f6c <error@@Base+0x124>
   107f0:	ldr	r3, [sp, #4]
   107f4:	cmp	r3, #1
   107f8:	movgt	r4, #0
   107fc:	ldrgt	r6, [pc, #56]	; 1083c <abort@plt+0x78>
   10800:	bgt	1081c <abort@plt+0x58>
   10804:	ldr	r0, [pc, #52]	; 10840 <abort@plt+0x7c>
   10808:	bl	10e48 <error@@Base>
   1080c:	ldr	r1, [r5, r4, lsl #2]
   10810:	mov	r0, r6
   10814:	bl	109e4 <abort@plt+0x220>
   10818:	add	r4, r4, #1
   1081c:	ldr	r3, [sp, #4]
   10820:	cmp	r4, r3
   10824:	blt	1080c <abort@plt+0x48>
   10828:	mov	r1, #0
   1082c:	ldr	r0, [pc, #8]	; 1083c <abort@plt+0x78>
   10830:	bl	10b64 <abort@plt+0x3a0>
   10834:	bl	10df0 <abort@plt+0x62c>
   10838:	andeq	r1, r1, ip, ror #3
   1083c:	strdeq	r2, [r2], -r4
   10840:	andeq	r1, r1, sp, lsl r2
   10844:	mov	fp, #0
   10848:	mov	lr, #0
   1084c:	pop	{r1}		; (ldr r1, [sp], #4)
   10850:	mov	r2, sp
   10854:	push	{r2}		; (str r2, [sp, #-4]!)
   10858:	push	{r0}		; (str r0, [sp, #-4]!)
   1085c:	ldr	ip, [pc, #16]	; 10874 <abort@plt+0xb0>
   10860:	push	{ip}		; (str ip, [sp, #-4]!)
   10864:	ldr	r0, [pc, #12]	; 10878 <abort@plt+0xb4>
   10868:	ldr	r3, [pc, #12]	; 1087c <abort@plt+0xb8>
   1086c:	bl	10734 <__libc_start_main@plt>
   10870:	bl	107c4 <abort@plt>
   10874:	andeq	r1, r1, ip, asr #3
   10878:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1087c:	andeq	r1, r1, ip, ror #2
   10880:	ldr	r3, [pc, #20]	; 1089c <abort@plt+0xd8>
   10884:	ldr	r2, [pc, #20]	; 108a0 <abort@plt+0xdc>
   10888:	add	r3, pc, r3
   1088c:	ldr	r2, [r3, r2]
   10890:	cmp	r2, #0
   10894:	bxeq	lr
   10898:	b	1074c <__gmon_start__@plt>
   1089c:	andeq	r1, r1, r0, ror r7
   108a0:	andeq	r0, r0, r0, rrx
   108a4:	ldr	r3, [pc, #28]	; 108c8 <abort@plt+0x104>
   108a8:	ldr	r0, [pc, #28]	; 108cc <abort@plt+0x108>
   108ac:	sub	r3, r3, r0
   108b0:	cmp	r3, #6
   108b4:	bxls	lr
   108b8:	ldr	r3, [pc, #16]	; 108d0 <abort@plt+0x10c>
   108bc:	cmp	r3, #0
   108c0:	bxeq	lr
   108c4:	bx	r3
   108c8:	andeq	r2, r2, r7, ror r0
   108cc:	andeq	r2, r2, r4, ror r0
   108d0:	andeq	r0, r0, r0
   108d4:	ldr	r1, [pc, #36]	; 10900 <abort@plt+0x13c>
   108d8:	ldr	r0, [pc, #36]	; 10904 <abort@plt+0x140>
   108dc:	sub	r1, r1, r0
   108e0:	asr	r1, r1, #2
   108e4:	add	r1, r1, r1, lsr #31
   108e8:	asrs	r1, r1, #1
   108ec:	bxeq	lr
   108f0:	ldr	r3, [pc, #16]	; 10908 <abort@plt+0x144>
   108f4:	cmp	r3, #0
   108f8:	bxeq	lr
   108fc:	bx	r3
   10900:	andeq	r2, r2, r4, ror r0
   10904:	andeq	r2, r2, r4, ror r0
   10908:	andeq	r0, r0, r0
   1090c:	push	{r4, lr}
   10910:	ldr	r4, [pc, #24]	; 10930 <abort@plt+0x16c>
   10914:	ldrb	r3, [r4]
   10918:	cmp	r3, #0
   1091c:	popne	{r4, pc}
   10920:	bl	108a4 <abort@plt+0xe0>
   10924:	mov	r3, #1
   10928:	strb	r3, [r4]
   1092c:	pop	{r4, pc}
   10930:	andeq	r2, r2, r8, lsl #1
   10934:	ldr	r0, [pc, #40]	; 10964 <abort@plt+0x1a0>
   10938:	ldr	r3, [r0]
   1093c:	cmp	r3, #0
   10940:	bne	10948 <abort@plt+0x184>
   10944:	b	108d4 <abort@plt+0x110>
   10948:	ldr	r3, [pc, #24]	; 10968 <abort@plt+0x1a4>
   1094c:	cmp	r3, #0
   10950:	beq	10944 <abort@plt+0x180>
   10954:	push	{r4, lr}
   10958:	blx	r3
   1095c:	pop	{r4, lr}
   10960:	b	108d4 <abort@plt+0x110>
   10964:	andeq	r1, r2, r4, lsl #30
   10968:	andeq	r0, r0, r0
   1096c:	mov	r2, r0
   10970:	push	{r4, lr}
   10974:	mov	r1, #99	; 0x63
   10978:	ldr	r0, [pc, #12]	; 1098c <abort@plt+0x1c8>
   1097c:	bl	10704 <fgets@plt>
   10980:	adds	r0, r0, #0
   10984:	movne	r0, #1
   10988:	pop	{r4, pc}
   1098c:	andeq	r2, r2, r9, lsl #1
   10990:	push	{r4, r5, r6, lr}
   10994:	mov	r5, r1
   10998:	mov	r4, r2
   1099c:	bl	1096c <abort@plt+0x1a8>
   109a0:	cmp	r0, #0
   109a4:	bne	109b0 <abort@plt+0x1ec>
   109a8:	mov	r0, #0
   109ac:	pop	{r4, r5, r6, pc}
   109b0:	mov	r2, r5
   109b4:	ldr	r1, [pc, #32]	; 109dc <abort@plt+0x218>
   109b8:	ldr	r0, [pc, #32]	; 109e0 <abort@plt+0x21c>
   109bc:	bl	10788 <__isoc99_sscanf@plt>
   109c0:	cmp	r0, #1
   109c4:	bne	109a8 <abort@plt+0x1e4>
   109c8:	ldr	r3, [r4]
   109cc:	ldr	r2, [r5]
   109d0:	add	r3, r3, r2
   109d4:	str	r3, [r4]
   109d8:	pop	{r4, r5, r6, pc}
   109dc:	muleq	r1, sl, r2
   109e0:	andeq	r2, r2, r9, lsl #1
   109e4:	push	{r4, r5, r6, r7, lr}
   109e8:	mov	r6, r1
   109ec:	sub	sp, sp, #20
   109f0:	ldr	r1, [pc, #336]	; 10b48 <abort@plt+0x384>
   109f4:	mov	r5, r0
   109f8:	mov	r0, r6
   109fc:	bl	10f10 <error@@Base+0xc8>
   10a00:	mov	r4, r0
   10a04:	bl	1096c <abort@plt+0x1a8>
   10a08:	cmp	r0, #0
   10a0c:	beq	10b34 <abort@plt+0x370>
   10a10:	mov	r2, #42	; 0x2a
   10a14:	ldr	r1, [pc, #304]	; 10b4c <abort@plt+0x388>
   10a18:	ldr	r0, [pc, #304]	; 10b50 <abort@plt+0x38c>
   10a1c:	bl	107b8 <strncmp@plt>
   10a20:	cmp	r0, #0
   10a24:	bne	10b34 <abort@plt+0x370>
   10a28:	mov	r0, r4
   10a2c:	bl	1096c <abort@plt+0x1a8>
   10a30:	cmp	r0, #0
   10a34:	beq	10b34 <abort@plt+0x370>
   10a38:	ldr	r1, [pc, #276]	; 10b54 <abort@plt+0x390>
   10a3c:	ldr	r0, [pc, #268]	; 10b50 <abort@plt+0x38c>
   10a40:	bl	106e0 <strcmp@plt>
   10a44:	cmp	r0, #0
   10a48:	bne	10b34 <abort@plt+0x370>
   10a4c:	mov	r2, r5
   10a50:	add	r1, sp, #8
   10a54:	mov	r0, r4
   10a58:	bl	10990 <abort@plt+0x1cc>
   10a5c:	cmp	r0, #0
   10a60:	beq	10b34 <abort@plt+0x370>
   10a64:	add	r2, r5, #4
   10a68:	add	r1, sp, #8
   10a6c:	mov	r0, r4
   10a70:	bl	10990 <abort@plt+0x1cc>
   10a74:	cmp	r0, #0
   10a78:	beq	10b34 <abort@plt+0x370>
   10a7c:	add	r2, r5, #8
   10a80:	add	r1, sp, #4
   10a84:	mov	r0, r4
   10a88:	bl	10990 <abort@plt+0x1cc>
   10a8c:	cmp	r0, #0
   10a90:	beq	10b34 <abort@plt+0x370>
   10a94:	ldr	r3, [sp, #4]
   10a98:	cmp	r3, #0
   10a9c:	ble	10ad0 <abort@plt+0x30c>
   10aa0:	mov	r0, r4
   10aa4:	bl	1096c <abort@plt+0x1a8>
   10aa8:	cmp	r0, #0
   10aac:	beq	10ad0 <abort@plt+0x30c>
   10ab0:	mov	r0, r4
   10ab4:	bl	1096c <abort@plt+0x1a8>
   10ab8:	cmp	r0, #0
   10abc:	beq	10ad0 <abort@plt+0x30c>
   10ac0:	mov	r0, r4
   10ac4:	bl	1096c <abort@plt+0x1a8>
   10ac8:	cmp	r0, #0
   10acc:	bne	10b28 <abort@plt+0x364>
   10ad0:	mov	r0, r4
   10ad4:	bl	10d40 <abort@plt+0x57c>
   10ad8:	add	sp, sp, #20
   10adc:	pop	{r4, r5, r6, r7, pc}
   10ae0:	ldr	r3, [sp, #12]
   10ae4:	ldr	r1, [sp, #8]
   10ae8:	add	r3, r5, r3, lsl #2
   10aec:	ldr	r2, [r3, #12]
   10af0:	add	r2, r2, r1
   10af4:	str	r2, [r3, #12]
   10af8:	mov	r0, r4
   10afc:	bl	1096c <abort@plt+0x1a8>
   10b00:	cmp	r0, #0
   10b04:	beq	10ad0 <abort@plt+0x30c>
   10b08:	add	r3, sp, #12
   10b0c:	add	r2, sp, #8
   10b10:	mov	r1, r7
   10b14:	mov	r0, r6
   10b18:	bl	10788 <__isoc99_sscanf@plt>
   10b1c:	cmp	r0, #2
   10b20:	beq	10ae0 <abort@plt+0x31c>
   10b24:	b	10ad0 <abort@plt+0x30c>
   10b28:	ldr	r7, [pc, #40]	; 10b58 <abort@plt+0x394>
   10b2c:	ldr	r6, [pc, #28]	; 10b50 <abort@plt+0x38c>
   10b30:	b	10af8 <abort@plt+0x334>
   10b34:	cmp	r6, #0
   10b38:	ldr	r1, [pc, #28]	; 10b5c <abort@plt+0x398>
   10b3c:	ldr	r0, [pc, #28]	; 10b60 <abort@plt+0x39c>
   10b40:	movne	r1, r6
   10b44:	bl	10ed0 <error@@Base+0x88>
   10b48:	andeq	r1, r1, sl, lsr r2
   10b4c:	andeq	r1, r1, ip, lsr r2
   10b50:	andeq	r2, r2, r9, lsl #1
   10b54:	andeq	r1, r1, r9, ror #4
   10b58:	muleq	r1, r6, r2
   10b5c:	andeq	r1, r1, r4, lsr r2
   10b60:	muleq	r1, lr, r2
   10b64:	push	{r4, r5, r6, r7, r8, lr}
   10b68:	mov	r4, r0
   10b6c:	mov	r0, r1
   10b70:	ldr	r1, [pc, #172]	; 10c24 <abort@plt+0x460>
   10b74:	bl	10f10 <error@@Base+0xc8>
   10b78:	ldr	r3, [pc, #168]	; 10c28 <abort@plt+0x464>
   10b7c:	ldr	r2, [pc, #168]	; 10c2c <abort@plt+0x468>
   10b80:	ldr	r1, [pc, #168]	; 10c30 <abort@plt+0x46c>
   10b84:	mov	r5, r0
   10b88:	bl	1077c <fprintf@plt>
   10b8c:	ldr	r3, [pc, #160]	; 10c34 <abort@plt+0x470>
   10b90:	ldr	r2, [r4]
   10b94:	ldr	r1, [pc, #156]	; 10c38 <abort@plt+0x474>
   10b98:	mov	r0, r5
   10b9c:	bl	1077c <fprintf@plt>
   10ba0:	ldr	r3, [pc, #148]	; 10c3c <abort@plt+0x478>
   10ba4:	ldr	r2, [r4, #4]
   10ba8:	ldr	r1, [pc, #136]	; 10c38 <abort@plt+0x474>
   10bac:	mov	r0, r5
   10bb0:	bl	1077c <fprintf@plt>
   10bb4:	ldr	r3, [pc, #132]	; 10c40 <abort@plt+0x47c>
   10bb8:	ldr	r2, [r4, #8]
   10bbc:	ldr	r1, [pc, #116]	; 10c38 <abort@plt+0x474>
   10bc0:	mov	r0, r5
   10bc4:	bl	1077c <fprintf@plt>
   10bc8:	ldr	r3, [r4, #8]
   10bcc:	cmp	r3, #0
   10bd0:	bgt	10be0 <abort@plt+0x41c>
   10bd4:	mov	r0, r5
   10bd8:	pop	{r4, r5, r6, r7, r8, lr}
   10bdc:	b	10d40 <abort@plt+0x57c>
   10be0:	mov	r1, r5
   10be4:	ldr	r0, [pc, #88]	; 10c44 <abort@plt+0x480>
   10be8:	bl	107ac <fputs@plt>
   10bec:	ldr	r7, [pc, #84]	; 10c48 <abort@plt+0x484>
   10bf0:	add	r4, r4, #16
   10bf4:	mov	r6, #1
   10bf8:	ldr	r2, [r4], #4
   10bfc:	cmp	r2, #0
   10c00:	ble	10c14 <abort@plt+0x450>
   10c04:	mov	r3, r6
   10c08:	mov	r1, r7
   10c0c:	mov	r0, r5
   10c10:	bl	1077c <fprintf@plt>
   10c14:	add	r6, r6, #1
   10c18:	cmp	r6, #101	; 0x65
   10c1c:	bne	10bf8 <abort@plt+0x434>
   10c20:	b	10bd4 <abort@plt+0x410>
   10c24:			; <UNDEFINED> instruction: 0x000112b0
   10c28:	andeq	r1, r1, r9, ror #4
   10c2c:	andeq	r1, r1, ip, lsr r2
   10c30:			; <UNDEFINED> instruction: 0x000112b2
   10c34:			; <UNDEFINED> instruction: 0x000112b7
   10c38:	andeq	r1, r1, r2, asr #5
   10c3c:	andeq	r1, r1, sp, asr #5
   10c40:	ldrdeq	r1, [r1], -r7
   10c44:	ldrdeq	r1, [r1], -sp
   10c48:	strdeq	r1, [r1], -r7
   10c4c:	ldr	r3, [pc, #56]	; 10c8c <abort@plt+0x4c8>
   10c50:	push	{r4, r5, lr}
   10c54:	sub	sp, sp, #116	; 0x74
   10c58:	ldr	r4, [r3]
   10c5c:	mov	r5, r0
   10c60:	bl	10758 <getpid@plt>
   10c64:	mov	r2, r4
   10c68:	ldr	r1, [pc, #32]	; 10c90 <abort@plt+0x4cc>
   10c6c:	str	r5, [sp]
   10c70:	mov	r3, r0
   10c74:	add	r0, sp, #12
   10c78:	bl	107a0 <sprintf@plt>
   10c7c:	add	r0, sp, #12
   10c80:	bl	10710 <strdup@plt>
   10c84:	add	sp, sp, #116	; 0x74
   10c88:	pop	{r4, r5, pc}
   10c8c:	muleq	r2, r8, r2
   10c90:	andeq	r1, r1, r2, lsl #6
   10c94:	ldr	r3, [pc, #84]	; 10cf0 <abort@plt+0x52c>
   10c98:	push	{r7, lr}
   10c9c:	mov	r5, r0
   10ca0:	ldr	r3, [r3]
   10ca4:	cmp	r3, #0
   10ca8:	beq	10cb0 <abort@plt+0x4ec>
   10cac:	blx	r3
   10cb0:	ldr	r6, [pc, #60]	; 10cf4 <abort@plt+0x530>
   10cb4:	mov	r4, #1
   10cb8:	ldrsh	r3, [r6]
   10cbc:	cmp	r3, r4
   10cc0:	bge	10ccc <abort@plt+0x508>
   10cc4:	mov	r0, r5
   10cc8:	bl	10764 <exit@plt>
   10ccc:	mov	r0, r4
   10cd0:	bl	10c4c <abort@plt+0x488>
   10cd4:	add	r4, r4, #1
   10cd8:	sxth	r4, r4
   10cdc:	mov	r7, r0
   10ce0:	bl	1071c <unlink@plt>
   10ce4:	mov	r0, r7
   10ce8:	bl	106f8 <free@plt>
   10cec:	b	10cb8 <abort@plt+0x4f4>
   10cf0:	muleq	r2, ip, r2
   10cf4:	andeq	r2, r2, lr, ror #1
   10cf8:	mov	r3, #0
   10cfc:	ldrb	r2, [r0, r3]
   10d00:	cmp	r2, #0
   10d04:	beq	10d30 <abort@plt+0x56c>
   10d08:	ldrb	ip, [r1, r3]
   10d0c:	cmp	ip, r2
   10d10:	beq	10d28 <abort@plt+0x564>
   10d14:	ldrb	r3, [r1, r3]
   10d18:	cmp	r3, r2
   10d1c:	mvnhi	r0, #0
   10d20:	movls	r0, #1
   10d24:	bx	lr
   10d28:	add	r3, r3, #1
   10d2c:	b	10cfc <abort@plt+0x538>
   10d30:	ldrb	r0, [r1, r3]
   10d34:	cmp	r0, #0
   10d38:	bne	10d14 <abort@plt+0x550>
   10d3c:	bx	lr
   10d40:	ldr	r2, [pc, #28]	; 10d64 <abort@plt+0x5a0>
   10d44:	ldr	r2, [r2]
   10d48:	cmp	r2, r0
   10d4c:	bxeq	lr
   10d50:	ldr	r2, [pc, #16]	; 10d68 <abort@plt+0x5a4>
   10d54:	ldr	r2, [r2]
   10d58:	cmp	r0, r2
   10d5c:	bxeq	lr
   10d60:	b	10794 <fclose@plt>
   10d64:	andeq	r2, r2, r0, lsl #1
   10d68:	andeq	r2, r2, r4, lsl #1
   10d6c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d70:	sub	sp, sp, #92	; 0x5c
   10d74:	mov	r1, sp
   10d78:	bl	111d0 <error@@Base+0x388>
   10d7c:	clz	r0, r0
   10d80:	lsr	r0, r0, #5
   10d84:	add	sp, sp, #92	; 0x5c
   10d88:	pop	{pc}		; (ldr pc, [sp], #4)
   10d8c:	ldr	r3, [pc, #36]	; 10db8 <abort@plt+0x5f4>
   10d90:	push	{r4, lr}
   10d94:	ldrh	r0, [r3]
   10d98:	add	r0, r0, #1
   10d9c:	sxth	r0, r0
   10da0:	strh	r0, [r3]
   10da4:	bl	10c4c <abort@plt+0x488>
   10da8:	mov	r4, r0
   10dac:	bl	1071c <unlink@plt>
   10db0:	mov	r0, r4
   10db4:	pop	{r4, pc}
   10db8:	andeq	r2, r2, lr, ror #1
   10dbc:	push	{r4, lr}
   10dc0:	mov	r4, r0
   10dc4:	bl	10770 <strlen@plt>
   10dc8:	sub	r0, r0, #1
   10dcc:	sxth	r0, r0
   10dd0:	cmp	r0, #0
   10dd4:	blt	10de4 <abort@plt+0x620>
   10dd8:	ldrb	r3, [r4, r0]
   10ddc:	cmp	r3, #47	; 0x2f
   10de0:	bne	10dc8 <abort@plt+0x604>
   10de4:	add	r0, r0, #1
   10de8:	add	r0, r4, r0
   10dec:	pop	{r4, pc}
   10df0:	push	{r4, lr}
   10df4:	mov	r0, #0
   10df8:	bl	10c94 <abort@plt+0x4d0>
   10dfc:	ldr	r2, [pc, #52]	; 10e38 <abort@plt+0x674>
   10e00:	push	{r4, lr}
   10e04:	ldr	r2, [r2]
   10e08:	cmp	r2, #0
   10e0c:	beq	10e18 <abort@plt+0x654>
   10e10:	blx	r2
   10e14:	bl	10df0 <abort@plt+0x62c>
   10e18:	mov	r3, r0
   10e1c:	ldr	r2, [pc, #24]	; 10e3c <abort@plt+0x678>
   10e20:	ldr	r0, [pc, #24]	; 10e40 <abort@plt+0x67c>
   10e24:	ldr	r1, [pc, #24]	; 10e44 <abort@plt+0x680>
   10e28:	ldr	r2, [r2]
   10e2c:	ldr	r0, [r0]
   10e30:	bl	1077c <fprintf@plt>
   10e34:	b	10e14 <abort@plt+0x650>
   10e38:	muleq	r2, r4, r2
   10e3c:	muleq	r2, r8, r2
   10e40:	andeq	r2, r2, r8, ror r0
   10e44:	andeq	r1, r1, r0, lsl r3

00010e48 <error@@Base>:
   10e48:	mov	r3, r0
   10e4c:	ldr	r2, [pc, #32]	; 10e74 <error@@Base+0x2c>
   10e50:	ldr	r0, [pc, #32]	; 10e78 <error@@Base+0x30>
   10e54:	push	{r4, lr}
   10e58:	ldr	r2, [r2]
   10e5c:	ldr	r1, [pc, #24]	; 10e7c <error@@Base+0x34>
   10e60:	ldr	r0, [r0]
   10e64:	bl	1077c <fprintf@plt>
   10e68:	ldr	r3, [pc, #16]	; 10e80 <error@@Base+0x38>
   10e6c:	ldr	r0, [r3]
   10e70:	bl	10c94 <abort@plt+0x4d0>
   10e74:	muleq	r2, r8, r2
   10e78:	andeq	r2, r2, r8, ror r0
   10e7c:	andeq	r1, r1, pc, lsl r3
   10e80:	andeq	r2, r2, ip, rrx
   10e84:	push	{r4, lr}
   10e88:	bl	106d4 <calloc@plt>
   10e8c:	cmp	r0, #0
   10e90:	popne	{r4, pc}
   10e94:	ldr	r0, [pc]	; 10e9c <error@@Base+0x54>
   10e98:	bl	10e48 <error@@Base>
   10e9c:	andeq	r1, r1, r7, lsr #6
   10ea0:	ldr	r3, [pc, #32]	; 10ec8 <error@@Base+0x80>
   10ea4:	ldrb	r2, [r3, #2]
   10ea8:	cmp	r2, #0
   10eac:	bne	10ec4 <error@@Base+0x7c>
   10eb0:	push	{r4, lr}
   10eb4:	mov	r2, #1
   10eb8:	ldr	r0, [pc, #12]	; 10ecc <error@@Base+0x84>
   10ebc:	strb	r2, [r3, #2]
   10ec0:	bl	10e48 <error@@Base>
   10ec4:	bx	lr
   10ec8:	andeq	r2, r2, lr, ror #1
   10ecc:	andeq	r1, r1, r1, asr #6
   10ed0:	push	{r0, r1, r2, lr}
   10ed4:	mov	r3, r0
   10ed8:	ldr	r2, [pc, #32]	; 10f00 <error@@Base+0xb8>
   10edc:	ldr	r0, [pc, #32]	; 10f04 <error@@Base+0xbc>
   10ee0:	str	r1, [sp]
   10ee4:	ldr	r1, [pc, #28]	; 10f08 <error@@Base+0xc0>
   10ee8:	ldr	r2, [r2]
   10eec:	ldr	r0, [r0]
   10ef0:	bl	1077c <fprintf@plt>
   10ef4:	ldr	r3, [pc, #16]	; 10f0c <error@@Base+0xc4>
   10ef8:	ldr	r0, [r3]
   10efc:	bl	10c94 <abort@plt+0x4d0>
   10f00:	muleq	r2, r8, r2
   10f04:	andeq	r2, r2, r8, ror r0
   10f08:	andeq	r1, r1, r0, asr r3
   10f0c:	andeq	r2, r2, ip, rrx
   10f10:	push	{r4, r5, r6, lr}
   10f14:	subs	r4, r0, #0
   10f18:	mov	r5, r1
   10f1c:	bne	10f38 <error@@Base+0xf0>
   10f20:	ldrb	r3, [r1]
   10f24:	cmp	r3, #114	; 0x72
   10f28:	ldreq	r3, [pc, #44]	; 10f5c <error@@Base+0x114>
   10f2c:	ldrne	r3, [pc, #44]	; 10f60 <error@@Base+0x118>
   10f30:	ldr	r0, [r3]
   10f34:	pop	{r4, r5, r6, pc}
   10f38:	bl	106ec <fopen@plt>
   10f3c:	cmp	r0, #0
   10f40:	popne	{r4, r5, r6, pc}
   10f44:	ldrb	r3, [r5]
   10f48:	mov	r1, r4
   10f4c:	cmp	r3, #119	; 0x77
   10f50:	ldreq	r0, [pc, #12]	; 10f64 <error@@Base+0x11c>
   10f54:	ldrne	r0, [pc, #12]	; 10f68 <error@@Base+0x120>
   10f58:	bl	10ed0 <error@@Base+0x88>
   10f5c:	andeq	r2, r2, r0, lsl #1
   10f60:	andeq	r2, r2, r4, lsl #1
   10f64:	andeq	r1, r1, sp, asr r3
   10f68:	andeq	r1, r1, r3, ror r3
   10f6c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f70:	mov	r8, r0
   10f74:	ldr	r0, [r1]
   10f78:	str	r2, [sp]
   10f7c:	mov	r7, r1
   10f80:	mov	r9, r3
   10f84:	bl	10dbc <abort@plt+0x5f8>
   10f88:	ldr	r3, [pc, #396]	; 1111c <error@@Base+0x2d4>
   10f8c:	ldr	r1, [pc, #396]	; 11120 <error@@Base+0x2d8>
   10f90:	str	r0, [r3]
   10f94:	mov	r0, #2
   10f98:	bl	10740 <__sysv_signal@plt>
   10f9c:	ldr	r1, [pc, #380]	; 11120 <error@@Base+0x2d8>
   10fa0:	mov	r0, #15
   10fa4:	bl	10740 <__sysv_signal@plt>
   10fa8:	ldr	r3, [r8]
   10fac:	cmp	r3, #1
   10fb0:	movne	r6, #0
   10fb4:	movne	r5, #1
   10fb8:	bne	110dc <error@@Base+0x294>
   10fbc:	ldr	r3, [pc, #352]	; 11124 <error@@Base+0x2dc>
   10fc0:	ldrb	r6, [r3, #4]
   10fc4:	cmp	r6, #0
   10fc8:	beq	110e8 <error@@Base+0x2a0>
   10fcc:	ldr	r0, [sp]
   10fd0:	bl	10dfc <abort@plt+0x638>
   10fd4:	ldr	r4, [r7, r5, lsl #2]
   10fd8:	lsl	sl, r5, #2
   10fdc:	ldrb	r3, [r4]
   10fe0:	cmp	r3, #45	; 0x2d
   10fe4:	bne	1110c <error@@Base+0x2c4>
   10fe8:	ldrb	r3, [r4, #1]
   10fec:	cmp	r3, #0
   10ff0:	str	r3, [sp, #4]
   10ff4:	beq	1110c <error@@Base+0x2c4>
   10ff8:	mov	r0, r4
   10ffc:	bl	10770 <strlen@plt>
   11000:	mov	r1, r4
   11004:	mov	r2, r0
   11008:	ldr	r0, [pc, #280]	; 11128 <error@@Base+0x2e0>
   1100c:	bl	107b8 <strncmp@plt>
   11010:	cmp	r0, #0
   11014:	beq	10fcc <error@@Base+0x184>
   11018:	add	r0, r5, #1
   1101c:	cmp	r0, fp
   11020:	addlt	sl, r7, sl
   11024:	movge	r1, #0
   11028:	ldrlt	r1, [sl, #4]
   1102c:	cmp	r9, #0
   11030:	ldr	r3, [sp, #4]
   11034:	beq	110f4 <error@@Base+0x2ac>
   11038:	mov	r2, #0
   1103c:	add	lr, r2, r2, lsl #1
   11040:	add	ip, r9, lr, lsl #2
   11044:	ldrb	lr, [r9, lr, lsl #2]
   11048:	cmp	lr, #0
   1104c:	beq	110f4 <error@@Base+0x2ac>
   11050:	cmp	r3, lr
   11054:	bne	11094 <error@@Base+0x24c>
   11058:	ldr	r3, [ip, #4]
   1105c:	cmp	r3, #0
   11060:	bne	110a0 <error@@Base+0x258>
   11064:	ldr	r3, [ip, #8]
   11068:	cmp	r3, #0
   1106c:	beq	110f4 <error@@Base+0x2ac>
   11070:	ldrb	r2, [r4, #2]
   11074:	cmp	r2, #0
   11078:	bne	110f4 <error@@Base+0x2ac>
   1107c:	ldrb	r2, [r3]
   11080:	cmp	r2, #0
   11084:	bne	11100 <error@@Base+0x2b8>
   11088:	mov	r2, #1
   1108c:	strb	r2, [r3]
   11090:	b	110d4 <error@@Base+0x28c>
   11094:	add	r2, r2, #1
   11098:	sxth	r2, r2
   1109c:	b	1103c <error@@Base+0x1f4>
   110a0:	ldrb	r2, [r4, #2]
   110a4:	cmp	r2, #0
   110a8:	cmpeq	r1, #0
   110ac:	beq	11064 <error@@Base+0x21c>
   110b0:	ldr	ip, [r3]
   110b4:	cmp	ip, #0
   110b8:	bne	11100 <error@@Base+0x2b8>
   110bc:	cmp	r2, #0
   110c0:	addne	r1, r4, #2
   110c4:	str	r1, [r3]
   110c8:	ldrb	r3, [r4, #2]
   110cc:	cmp	r3, #0
   110d0:	sxtheq	r5, r0
   110d4:	add	r5, r5, #1
   110d8:	sxth	r5, r5
   110dc:	ldr	fp, [r8]
   110e0:	cmp	r5, fp
   110e4:	blt	10fd4 <error@@Base+0x18c>
   110e8:	str	r6, [r8]
   110ec:	add	sp, sp, #12
   110f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110f4:	ldr	r0, [pc, #48]	; 1112c <error@@Base+0x2e4>
   110f8:	mov	r1, r4
   110fc:	bl	10ed0 <error@@Base+0x88>
   11100:	mov	r1, r4
   11104:	ldr	r0, [pc, #36]	; 11130 <error@@Base+0x2e8>
   11108:	b	110fc <error@@Base+0x2b4>
   1110c:	add	r3, r6, #1
   11110:	str	r4, [r7, r6, lsl #2]
   11114:	sxth	r6, r3
   11118:	b	110d4 <error@@Base+0x28c>
   1111c:	muleq	r2, r8, r2
   11120:	andeq	r0, r1, r0, lsr #29
   11124:	andeq	r2, r2, ip, rrx
   11128:	andeq	r1, r1, r7, lsl #7
   1112c:	andeq	r1, r1, sp, lsl #7
   11130:	muleq	r1, ip, r3
   11134:	push	{r0, r1, r2, lr}
   11138:	mov	r3, r0
   1113c:	ldr	r2, [pc, #28]	; 11160 <error@@Base+0x318>
   11140:	ldr	r0, [pc, #28]	; 11164 <error@@Base+0x31c>
   11144:	str	r1, [sp]
   11148:	ldr	r1, [pc, #24]	; 11168 <error@@Base+0x320>
   1114c:	ldr	r2, [r2]
   11150:	ldr	r0, [r0]
   11154:	bl	1077c <fprintf@plt>
   11158:	add	sp, sp, #12
   1115c:	pop	{pc}		; (ldr pc, [sp], #4)
   11160:	muleq	r2, r8, r2
   11164:	andeq	r2, r2, r8, ror r0
   11168:	andeq	r1, r1, r0, asr r3
   1116c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11170:	mov	r7, r0
   11174:	ldr	r6, [pc, #72]	; 111c4 <error@@Base+0x37c>
   11178:	ldr	r5, [pc, #72]	; 111c8 <error@@Base+0x380>
   1117c:	add	r6, pc, r6
   11180:	add	r5, pc, r5
   11184:	sub	r6, r6, r5
   11188:	mov	r8, r1
   1118c:	mov	r9, r2
   11190:	bl	106b4 <calloc@plt-0x20>
   11194:	asrs	r6, r6, #2
   11198:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1119c:	mov	r4, #0
   111a0:	add	r4, r4, #1
   111a4:	ldr	r3, [r5], #4
   111a8:	mov	r2, r9
   111ac:	mov	r1, r8
   111b0:	mov	r0, r7
   111b4:	blx	r3
   111b8:	cmp	r6, r4
   111bc:	bne	111a0 <error@@Base+0x358>
   111c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111c4:	andeq	r0, r1, ip, ror sp
   111c8:	andeq	r0, r1, r4, ror sp
   111cc:	bx	lr
   111d0:	mov	r2, r1
   111d4:	mov	r1, r0
   111d8:	mov	r0, #3
   111dc:	b	10728 <__xstat@plt>

Disassembly of section .fini:

000111e0 <.fini>:
   111e0:	push	{r3, lr}
   111e4:	pop	{r3, pc}
