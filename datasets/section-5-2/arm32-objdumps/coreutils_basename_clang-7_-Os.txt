
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eac <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <memcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <dcgettext@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <realloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <textdomain@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <iswprint@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <lseek64@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <__ctype_get_mb_cur_max@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <__fpending@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <ferror_unlocked@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <mbrtowc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <error@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <malloc@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <__libc_start_main@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__freading@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__gmon_start__@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <getopt_long@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <__ctype_b_loc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <exit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <strlen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <__errno_location@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__cxa_atexit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <memset@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__printf_chk@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <fileno@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <__fprintf_chk@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <fclose@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <fseeko64@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <setlocale@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <strrchr@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <nl_langinfo@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <bindtextdomain@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <fputs@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <strncmp@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <abort@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <putchar_unlocked@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

Disassembly of section .text:

00010e70 <.text>:
   10e70:	mov	fp, #0
   10e74:	mov	lr, #0
   10e78:	pop	{r1}		; (ldr r1, [sp], #4)
   10e7c:	mov	r2, sp
   10e80:	push	{r2}		; (str r2, [sp, #-4]!)
   10e84:	push	{r0}		; (str r0, [sp, #-4]!)
   10e88:	ldr	ip, [pc, #16]	; 10ea0 <putchar_unlocked@plt+0x3c>
   10e8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10e90:	ldr	r0, [pc, #12]	; 10ea4 <putchar_unlocked@plt+0x40>
   10e94:	ldr	r3, [pc, #12]	; 10ea8 <putchar_unlocked@plt+0x44>
   10e98:	bl	10d5c <__libc_start_main@plt>
   10e9c:	bl	10e58 <abort@plt>
   10ea0:	andeq	r4, r1, r4, ror #1
   10ea4:	strdeq	r1, [r1], -r0
   10ea8:	andeq	r4, r1, r4, lsl #1
   10eac:	ldr	r3, [pc, #20]	; 10ec8 <putchar_unlocked@plt+0x64>
   10eb0:	ldr	r2, [pc, #20]	; 10ecc <putchar_unlocked@plt+0x68>
   10eb4:	add	r3, pc, r3
   10eb8:	ldr	r2, [r3, r2]
   10ebc:	cmp	r2, #0
   10ec0:	bxeq	lr
   10ec4:	b	10d74 <__gmon_start__@plt>
   10ec8:	andeq	r4, r1, r4, asr #2
   10ecc:	strheq	r0, [r0], -r8
   10ed0:	ldr	r0, [pc, #24]	; 10ef0 <putchar_unlocked@plt+0x8c>
   10ed4:	ldr	r3, [pc, #24]	; 10ef4 <putchar_unlocked@plt+0x90>
   10ed8:	cmp	r3, r0
   10edc:	bxeq	lr
   10ee0:	ldr	r3, [pc, #16]	; 10ef8 <putchar_unlocked@plt+0x94>
   10ee4:	cmp	r3, #0
   10ee8:	bxeq	lr
   10eec:	bx	r3
   10ef0:	andeq	r5, r2, r0, lsl r1
   10ef4:	andeq	r5, r2, r0, lsl r1
   10ef8:	andeq	r0, r0, r0
   10efc:	ldr	r0, [pc, #36]	; 10f28 <putchar_unlocked@plt+0xc4>
   10f00:	ldr	r1, [pc, #36]	; 10f2c <putchar_unlocked@plt+0xc8>
   10f04:	sub	r1, r1, r0
   10f08:	asr	r1, r1, #2
   10f0c:	add	r1, r1, r1, lsr #31
   10f10:	asrs	r1, r1, #1
   10f14:	bxeq	lr
   10f18:	ldr	r3, [pc, #16]	; 10f30 <putchar_unlocked@plt+0xcc>
   10f1c:	cmp	r3, #0
   10f20:	bxeq	lr
   10f24:	bx	r3
   10f28:	andeq	r5, r2, r0, lsl r1
   10f2c:	andeq	r5, r2, r0, lsl r1
   10f30:	andeq	r0, r0, r0
   10f34:	push	{r4, lr}
   10f38:	ldr	r4, [pc, #24]	; 10f58 <putchar_unlocked@plt+0xf4>
   10f3c:	ldrb	r3, [r4]
   10f40:	cmp	r3, #0
   10f44:	popne	{r4, pc}
   10f48:	bl	10ed0 <putchar_unlocked@plt+0x6c>
   10f4c:	mov	r3, #1
   10f50:	strb	r3, [r4]
   10f54:	pop	{r4, pc}
   10f58:	andeq	r5, r2, ip, lsr #2
   10f5c:	b	10efc <putchar_unlocked@plt+0x98>
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	sub	sp, sp, #64	; 0x40
   10f6c:	mov	r8, r0
   10f70:	cmp	r0, #0
   10f74:	bne	111b0 <putchar_unlocked@plt+0x34c>
   10f78:	movw	r1, #16691	; 0x4133
   10f7c:	mov	r0, #0
   10f80:	mov	r2, #5
   10f84:	movt	r1, #1
   10f88:	bl	10cd8 <dcgettext@plt>
   10f8c:	movw	r5, #20792	; 0x5138
   10f90:	mov	r1, r0
   10f94:	mov	r0, #1
   10f98:	movt	r5, #2
   10f9c:	ldr	r2, [r5]
   10fa0:	mov	r3, r2
   10fa4:	bl	10dd4 <__printf_chk@plt>
   10fa8:	movw	r1, #16744	; 0x4168
   10fac:	mov	r0, #0
   10fb0:	mov	r2, #5
   10fb4:	movt	r1, #1
   10fb8:	bl	10cd8 <dcgettext@plt>
   10fbc:	movw	r9, #20772	; 0x5124
   10fc0:	movt	r9, #2
   10fc4:	ldr	r1, [r9]
   10fc8:	bl	10c78 <fputs_unlocked@plt>
   10fcc:	movw	r1, #17436	; 0x441c
   10fd0:	mov	r0, #0
   10fd4:	mov	r2, #5
   10fd8:	movt	r1, #1
   10fdc:	bl	10cd8 <dcgettext@plt>
   10fe0:	ldr	r1, [r9]
   10fe4:	bl	10c78 <fputs_unlocked@plt>
   10fe8:	movw	r1, #16848	; 0x41d0
   10fec:	mov	r0, #0
   10ff0:	mov	r2, #5
   10ff4:	movt	r1, #1
   10ff8:	bl	10cd8 <dcgettext@plt>
   10ffc:	ldr	r1, [r9]
   11000:	bl	10c78 <fputs_unlocked@plt>
   11004:	movw	r1, #17050	; 0x429a
   11008:	mov	r0, #0
   1100c:	mov	r2, #5
   11010:	movt	r1, #1
   11014:	bl	10cd8 <dcgettext@plt>
   11018:	ldr	r1, [r9]
   1101c:	bl	10c78 <fputs_unlocked@plt>
   11020:	movw	r1, #17095	; 0x42c7
   11024:	mov	r0, #0
   11028:	mov	r2, #5
   1102c:	movt	r1, #1
   11030:	bl	10cd8 <dcgettext@plt>
   11034:	ldr	r1, [r9]
   11038:	bl	10c78 <fputs_unlocked@plt>
   1103c:	movw	r1, #17149	; 0x42fd
   11040:	mov	r0, #0
   11044:	mov	r2, #5
   11048:	movt	r1, #1
   1104c:	bl	10cd8 <dcgettext@plt>
   11050:	ldr	r2, [r5]
   11054:	mov	r1, r0
   11058:	mov	r0, #1
   1105c:	mov	r3, r2
   11060:	str	r2, [sp]
   11064:	str	r2, [sp, #4]
   11068:	bl	10dd4 <__printf_chk@plt>
   1106c:	movw	r0, #17952	; 0x4620
   11070:	add	r6, sp, #8
   11074:	movt	r0, #1
   11078:	mov	r1, r6
   1107c:	ldm	r0!, {r2, r3, r4, r5}
   11080:	stmia	r1!, {r2, r3, r4, r5}
   11084:	ldm	r0!, {r2, r3, r4, r5, r7}
   11088:	stmia	r1!, {r2, r3, r4, r5, r7}
   1108c:	ldm	r0, {r2, r3, r4, r5, r7}
   11090:	stm	r1, {r2, r3, r4, r5, r7}
   11094:	movw	r1, #17511	; 0x4467
   11098:	movw	r5, #17334	; 0x43b6
   1109c:	movt	r1, #1
   110a0:	movt	r5, #1
   110a4:	mov	r0, r5
   110a8:	bl	10c84 <strcmp@plt>
   110ac:	cmp	r0, #0
   110b0:	ldrne	r1, [r6, #8]!
   110b4:	cmpne	r1, #0
   110b8:	bne	110a4 <putchar_unlocked@plt+0x240>
   110bc:	ldr	r6, [r6, #4]
   110c0:	movw	r1, #17606	; 0x44c6
   110c4:	mov	r0, #0
   110c8:	mov	r2, #5
   110cc:	movt	r1, #1
   110d0:	bl	10cd8 <dcgettext@plt>
   110d4:	movw	r2, #17373	; 0x43dd
   110d8:	movw	r3, #17629	; 0x44dd
   110dc:	mov	r1, r0
   110e0:	mov	r0, #1
   110e4:	movt	r2, #1
   110e8:	movt	r3, #1
   110ec:	bl	10dd4 <__printf_chk@plt>
   110f0:	cmp	r6, #0
   110f4:	mov	r0, #5
   110f8:	mov	r1, #0
   110fc:	moveq	r6, r5
   11100:	bl	10e10 <setlocale@plt>
   11104:	cmp	r0, #0
   11108:	beq	11140 <putchar_unlocked@plt+0x2dc>
   1110c:	movw	r1, #17669	; 0x4505
   11110:	mov	r2, #3
   11114:	movt	r1, #1
   11118:	bl	10e4c <strncmp@plt>
   1111c:	cmp	r0, #0
   11120:	beq	11140 <putchar_unlocked@plt+0x2dc>
   11124:	movw	r1, #17673	; 0x4509
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	movt	r1, #1
   11134:	bl	10cd8 <dcgettext@plt>
   11138:	ldr	r1, [r9]
   1113c:	bl	10c78 <fputs_unlocked@plt>
   11140:	movw	r1, #17744	; 0x4550
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	movt	r1, #1
   11150:	bl	10cd8 <dcgettext@plt>
   11154:	movw	r2, #17629	; 0x44dd
   11158:	mov	r1, r0
   1115c:	mov	r0, #1
   11160:	mov	r3, r5
   11164:	movt	r2, #1
   11168:	bl	10dd4 <__printf_chk@plt>
   1116c:	movw	r1, #17771	; 0x456b
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	movt	r1, #1
   1117c:	bl	10cd8 <dcgettext@plt>
   11180:	movw	r3, #17333	; 0x43b5
   11184:	mov	r1, r0
   11188:	movw	r0, #17539	; 0x4483
   1118c:	cmp	r6, r5
   11190:	mov	r2, r6
   11194:	movt	r0, #1
   11198:	movt	r3, #1
   1119c:	moveq	r3, r0
   111a0:	mov	r0, #1
   111a4:	bl	10dd4 <__printf_chk@plt>
   111a8:	mov	r0, r8
   111ac:	bl	10d98 <exit@plt>
   111b0:	movw	r0, #20768	; 0x5120
   111b4:	movw	r1, #16652	; 0x410c
   111b8:	mov	r2, #5
   111bc:	movt	r0, #2
   111c0:	movt	r1, #1
   111c4:	ldr	r5, [r0]
   111c8:	mov	r0, #0
   111cc:	bl	10cd8 <dcgettext@plt>
   111d0:	mov	r2, r0
   111d4:	movw	r0, #20792	; 0x5138
   111d8:	mov	r1, #1
   111dc:	movt	r0, #2
   111e0:	ldr	r3, [r0]
   111e4:	mov	r0, r5
   111e8:	bl	10dec <__fprintf_chk@plt>
   111ec:	b	111a8 <putchar_unlocked@plt+0x344>
   111f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111f4:	add	fp, sp, #28
   111f8:	sub	sp, sp, #12
   111fc:	mov	r5, r0
   11200:	ldr	r0, [r1]
   11204:	mov	r8, r1
   11208:	bl	116bc <putchar_unlocked@plt+0x858>
   1120c:	movw	r1, #17333	; 0x43b5
   11210:	mov	r0, #6
   11214:	movt	r1, #1
   11218:	bl	10e10 <setlocale@plt>
   1121c:	movw	r6, #17377	; 0x43e1
   11220:	movw	r1, #17343	; 0x43bf
   11224:	movt	r6, #1
   11228:	movt	r1, #1
   1122c:	mov	r0, r6
   11230:	bl	10e34 <bindtextdomain@plt>
   11234:	mov	r0, r6
   11238:	bl	10cf0 <textdomain@plt>
   1123c:	movw	r0, #5364	; 0x14f4
   11240:	movt	r0, #1
   11244:	bl	140e8 <putchar_unlocked@plt+0x3284>
   11248:	movw	r4, #17367	; 0x43d7
   1124c:	movw	r9, #17856	; 0x45c0
   11250:	mov	r2, #0
   11254:	mov	r6, #0
   11258:	mov	sl, #0
   1125c:	mov	r1, #0
   11260:	movt	r4, #1
   11264:	movt	r9, #1
   11268:	b	112b0 <putchar_unlocked@plt+0x44c>
   1126c:	cmp	r0, #97	; 0x61
   11270:	beq	112a4 <putchar_unlocked@plt+0x440>
   11274:	mov	r1, #1
   11278:	cmp	r0, #122	; 0x7a
   1127c:	mov	r2, #0
   11280:	beq	112b0 <putchar_unlocked@plt+0x44c>
   11284:	cmp	r0, #115	; 0x73
   11288:	bne	11428 <putchar_unlocked@plt+0x5c4>
   1128c:	movw	r0, #20776	; 0x5128
   11290:	mov	sl, #1
   11294:	mov	r1, r7
   11298:	movt	r0, #2
   1129c:	ldr	r6, [r0]
   112a0:	b	112b0 <putchar_unlocked@plt+0x44c>
   112a4:	mov	sl, #1
   112a8:	mov	r1, r7
   112ac:	mov	r2, #0
   112b0:	mov	r7, r1
   112b4:	str	r2, [sp]
   112b8:	mov	r0, r5
   112bc:	mov	r1, r8
   112c0:	mov	r2, r4
   112c4:	mov	r3, r9
   112c8:	bl	10d80 <getopt_long@plt>
   112cc:	cmp	r0, #96	; 0x60
   112d0:	bgt	1126c <putchar_unlocked@plt+0x408>
   112d4:	cmn	r0, #1
   112d8:	bne	11364 <putchar_unlocked@plt+0x500>
   112dc:	movw	r4, #20760	; 0x5118
   112e0:	movt	r4, #2
   112e4:	ldr	r2, [r4]
   112e8:	cmp	r2, r5
   112ec:	bge	113c4 <putchar_unlocked@plt+0x560>
   112f0:	add	r3, r2, #2
   112f4:	cmp	r3, r5
   112f8:	bge	11308 <putchar_unlocked@plt+0x4a4>
   112fc:	eor	r0, sl, #1
   11300:	tst	r0, #1
   11304:	bne	113ec <putchar_unlocked@plt+0x588>
   11308:	tst	sl, #1
   1130c:	beq	1133c <putchar_unlocked@plt+0x4d8>
   11310:	and	r7, r7, #1
   11314:	ldr	r0, [r8, r2, lsl #2]
   11318:	mov	r1, r6
   1131c:	mov	r2, r7
   11320:	bl	11430 <putchar_unlocked@plt+0x5cc>
   11324:	ldr	r0, [r4]
   11328:	add	r2, r0, #1
   1132c:	cmp	r2, r5
   11330:	str	r2, [r4]
   11334:	blt	11314 <putchar_unlocked@plt+0x4b0>
   11338:	b	11358 <putchar_unlocked@plt+0x4f4>
   1133c:	mov	r1, #0
   11340:	cmp	r3, r5
   11344:	ldr	r0, [r8, r2, lsl #2]
   11348:	addeq	r1, r8, r2, lsl #2
   1134c:	and	r2, r7, #1
   11350:	ldreq	r1, [r1, #4]
   11354:	bl	11430 <putchar_unlocked@plt+0x5cc>
   11358:	mov	r0, #0
   1135c:	sub	sp, fp, #28
   11360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11364:	cmn	r0, #3
   11368:	bne	113b4 <putchar_unlocked@plt+0x550>
   1136c:	movw	r0, #20680	; 0x50c8
   11370:	movw	r2, #17387	; 0x43eb
   11374:	mov	r1, #0
   11378:	movt	r0, #2
   1137c:	movt	r2, #1
   11380:	str	r1, [sp, #4]
   11384:	movw	r1, #17334	; 0x43b6
   11388:	ldr	r3, [r0]
   1138c:	movw	r0, #20772	; 0x5124
   11390:	str	r2, [sp]
   11394:	movw	r2, #17373	; 0x43dd
   11398:	movt	r1, #1
   1139c:	movt	r0, #2
   113a0:	movt	r2, #1
   113a4:	ldr	r0, [r0]
   113a8:	bl	135ac <putchar_unlocked@plt+0x2748>
   113ac:	mov	r0, #0
   113b0:	bl	10d98 <exit@plt>
   113b4:	cmn	r0, #2
   113b8:	bne	11428 <putchar_unlocked@plt+0x5c4>
   113bc:	mov	r0, #0
   113c0:	bl	10f60 <putchar_unlocked@plt+0xfc>
   113c4:	movw	r1, #17403	; 0x43fb
   113c8:	mov	r0, #0
   113cc:	mov	r2, #5
   113d0:	movt	r1, #1
   113d4:	bl	10cd8 <dcgettext@plt>
   113d8:	mov	r2, r0
   113dc:	mov	r0, #0
   113e0:	mov	r1, #0
   113e4:	bl	10d44 <error@plt>
   113e8:	b	11428 <putchar_unlocked@plt+0x5c4>
   113ec:	movw	r1, #17419	; 0x440b
   113f0:	mov	r0, #0
   113f4:	mov	r2, #5
   113f8:	movt	r1, #1
   113fc:	bl	10cd8 <dcgettext@plt>
   11400:	mov	r5, r0
   11404:	ldr	r0, [r4]
   11408:	add	r0, r8, r0, lsl #2
   1140c:	ldr	r0, [r0, #8]
   11410:	bl	130c0 <putchar_unlocked@plt+0x225c>
   11414:	mov	r3, r0
   11418:	mov	r0, #0
   1141c:	mov	r1, #0
   11420:	mov	r2, r5
   11424:	bl	10d44 <error@plt>
   11428:	mov	r0, #1
   1142c:	bl	10f60 <putchar_unlocked@plt+0xfc>
   11430:	push	{r4, r5, r6, r7, fp, lr}
   11434:	add	fp, sp, #16
   11438:	mov	r5, r2
   1143c:	mov	r6, r1
   11440:	bl	115dc <putchar_unlocked@plt+0x778>
   11444:	mov	r4, r0
   11448:	bl	11650 <putchar_unlocked@plt+0x7ec>
   1144c:	cmp	r6, #0
   11450:	ldrbne	r0, [r4]
   11454:	cmpne	r0, #47	; 0x2f
   11458:	bne	1148c <putchar_unlocked@plt+0x628>
   1145c:	movw	r0, #20772	; 0x5124
   11460:	movt	r0, #2
   11464:	ldr	r1, [r0]
   11468:	mov	r0, r4
   1146c:	bl	10c78 <fputs_unlocked@plt>
   11470:	mov	r0, #10
   11474:	cmp	r5, #0
   11478:	movwne	r0, #0
   1147c:	bl	10e64 <putchar_unlocked@plt>
   11480:	mov	r0, r4
   11484:	pop	{r4, r5, r6, r7, fp, lr}
   11488:	b	11694 <putchar_unlocked@plt+0x830>
   1148c:	mov	r0, r4
   11490:	bl	10da4 <strlen@plt>
   11494:	add	r7, r4, r0
   11498:	mov	r0, r6
   1149c:	bl	10da4 <strlen@plt>
   114a0:	add	r0, r6, r0
   114a4:	cmp	r7, r4
   114a8:	cmphi	r0, r6
   114ac:	bls	114c4 <putchar_unlocked@plt+0x660>
   114b0:	ldrb	r1, [r0, #-1]!
   114b4:	ldrb	r2, [r7, #-1]!
   114b8:	cmp	r2, r1
   114bc:	beq	114a4 <putchar_unlocked@plt+0x640>
   114c0:	b	1145c <putchar_unlocked@plt+0x5f8>
   114c4:	cmp	r7, r4
   114c8:	movhi	r0, #0
   114cc:	strbhi	r0, [r7]
   114d0:	b	1145c <putchar_unlocked@plt+0x5f8>
   114d4:	movw	r1, #20784	; 0x5130
   114d8:	movt	r1, #2
   114dc:	str	r0, [r1]
   114e0:	bx	lr
   114e4:	movw	r1, #20788	; 0x5134
   114e8:	movt	r1, #2
   114ec:	strb	r0, [r1]
   114f0:	bx	lr
   114f4:	push	{r4, r5, r6, sl, fp, lr}
   114f8:	add	fp, sp, #16
   114fc:	sub	sp, sp, #8
   11500:	movw	r0, #20772	; 0x5124
   11504:	movt	r0, #2
   11508:	ldr	r0, [r0]
   1150c:	bl	13c9c <putchar_unlocked@plt+0x2e38>
   11510:	cmp	r0, #0
   11514:	beq	1153c <putchar_unlocked@plt+0x6d8>
   11518:	movw	r0, #20788	; 0x5134
   1151c:	movt	r0, #2
   11520:	ldrb	r0, [r0]
   11524:	cmp	r0, #0
   11528:	beq	1155c <putchar_unlocked@plt+0x6f8>
   1152c:	bl	10db0 <__errno_location@plt>
   11530:	ldr	r0, [r0]
   11534:	cmp	r0, #32
   11538:	bne	1155c <putchar_unlocked@plt+0x6f8>
   1153c:	movw	r0, #20768	; 0x5120
   11540:	movt	r0, #2
   11544:	ldr	r0, [r0]
   11548:	bl	13c9c <putchar_unlocked@plt+0x2e38>
   1154c:	cmp	r0, #0
   11550:	subeq	sp, fp, #16
   11554:	popeq	{r4, r5, r6, sl, fp, pc}
   11558:	b	115cc <putchar_unlocked@plt+0x768>
   1155c:	movw	r1, #18023	; 0x4667
   11560:	mov	r0, #0
   11564:	mov	r2, #5
   11568:	movt	r1, #1
   1156c:	bl	10cd8 <dcgettext@plt>
   11570:	mov	r4, r0
   11574:	movw	r0, #20784	; 0x5130
   11578:	movt	r0, #2
   1157c:	ldr	r6, [r0]
   11580:	bl	10db0 <__errno_location@plt>
   11584:	ldr	r5, [r0]
   11588:	cmp	r6, #0
   1158c:	bne	115a8 <putchar_unlocked@plt+0x744>
   11590:	movw	r2, #18039	; 0x4677
   11594:	mov	r0, #0
   11598:	mov	r1, r5
   1159c:	mov	r3, r4
   115a0:	movt	r2, #1
   115a4:	b	115c8 <putchar_unlocked@plt+0x764>
   115a8:	mov	r0, r6
   115ac:	bl	12e80 <putchar_unlocked@plt+0x201c>
   115b0:	movw	r2, #18035	; 0x4673
   115b4:	mov	r3, r0
   115b8:	str	r4, [sp]
   115bc:	mov	r0, #0
   115c0:	mov	r1, r5
   115c4:	movt	r2, #1
   115c8:	bl	10d44 <error@plt>
   115cc:	movw	r0, #20684	; 0x50cc
   115d0:	movt	r0, #2
   115d4:	ldr	r0, [r0]
   115d8:	bl	10ca8 <_exit@plt>
   115dc:	push	{r4, r5, r6, sl, fp, lr}
   115e0:	add	fp, sp, #16
   115e4:	mov	r6, r0
   115e8:	bl	13c1c <putchar_unlocked@plt+0x2db8>
   115ec:	mov	r4, r0
   115f0:	ldrb	r0, [r0]
   115f4:	cmp	r0, #0
   115f8:	beq	11618 <putchar_unlocked@plt+0x7b4>
   115fc:	mov	r0, r4
   11600:	bl	13c64 <putchar_unlocked@plt+0x2e00>
   11604:	mov	r5, r0
   11608:	ldrb	r0, [r4, r0]
   1160c:	cmp	r0, #47	; 0x2f
   11610:	addeq	r5, r5, #1
   11614:	b	11628 <putchar_unlocked@plt+0x7c4>
   11618:	mov	r0, r6
   1161c:	bl	13c64 <putchar_unlocked@plt+0x2e00>
   11620:	mov	r5, r0
   11624:	mov	r4, r6
   11628:	add	r0, r5, #1
   1162c:	bl	136cc <putchar_unlocked@plt+0x2868>
   11630:	mov	r1, r4
   11634:	mov	r2, r5
   11638:	mov	r6, r0
   1163c:	bl	10cb4 <memcpy@plt>
   11640:	mov	r0, #0
   11644:	strb	r0, [r6, r5]
   11648:	mov	r0, r6
   1164c:	pop	{r4, r5, r6, sl, fp, pc}
   11650:	push	{r4, r5, fp, lr}
   11654:	add	fp, sp, #8
   11658:	mov	r4, r0
   1165c:	bl	13c1c <putchar_unlocked@plt+0x2db8>
   11660:	mov	r5, r0
   11664:	ldrb	r0, [r0]
   11668:	cmp	r0, #0
   1166c:	moveq	r5, r4
   11670:	mov	r0, r5
   11674:	bl	13c64 <putchar_unlocked@plt+0x2e00>
   11678:	ldrb	r1, [r5, r0]
   1167c:	mov	r2, #0
   11680:	strb	r2, [r5, r0]
   11684:	cmp	r1, #0
   11688:	movwne	r1, #1
   1168c:	mov	r0, r1
   11690:	pop	{r4, r5, fp, pc}
   11694:	push	{r4, r5, r6, sl, fp, lr}
   11698:	add	fp, sp, #16
   1169c:	mov	r4, r0
   116a0:	bl	10db0 <__errno_location@plt>
   116a4:	ldr	r6, [r0]
   116a8:	mov	r5, r0
   116ac:	mov	r0, r4
   116b0:	bl	10c9c <free@plt>
   116b4:	str	r6, [r5]
   116b8:	pop	{r4, r5, r6, sl, fp, pc}
   116bc:	push	{r4, r5, fp, lr}
   116c0:	add	fp, sp, #8
   116c4:	cmp	r0, #0
   116c8:	beq	1175c <putchar_unlocked@plt+0x8f8>
   116cc:	mov	r1, #47	; 0x2f
   116d0:	mov	r4, r0
   116d4:	bl	10e1c <strrchr@plt>
   116d8:	cmp	r0, #0
   116dc:	mov	r5, r4
   116e0:	addne	r5, r0, #1
   116e4:	sub	r0, r5, r4
   116e8:	cmp	r0, #7
   116ec:	blt	11740 <putchar_unlocked@plt+0x8dc>
   116f0:	movw	r1, #18098	; 0x46b2
   116f4:	sub	r0, r5, #7
   116f8:	mov	r2, #7
   116fc:	movt	r1, #1
   11700:	bl	10e4c <strncmp@plt>
   11704:	cmp	r0, #0
   11708:	bne	11740 <putchar_unlocked@plt+0x8dc>
   1170c:	movw	r1, #18106	; 0x46ba
   11710:	mov	r0, r5
   11714:	mov	r2, #3
   11718:	movt	r1, #1
   1171c:	bl	10e4c <strncmp@plt>
   11720:	cmp	r0, #0
   11724:	beq	11730 <putchar_unlocked@plt+0x8cc>
   11728:	mov	r4, r5
   1172c:	b	11740 <putchar_unlocked@plt+0x8dc>
   11730:	movw	r0, #20752	; 0x5110
   11734:	add	r4, r5, #3
   11738:	movt	r0, #2
   1173c:	str	r4, [r0]
   11740:	movw	r0, #20756	; 0x5114
   11744:	movt	r0, #2
   11748:	str	r4, [r0]
   1174c:	movw	r0, #20792	; 0x5138
   11750:	movt	r0, #2
   11754:	str	r4, [r0]
   11758:	pop	{r4, r5, fp, pc}
   1175c:	movw	r0, #20768	; 0x5120
   11760:	movt	r0, #2
   11764:	ldr	r1, [r0]
   11768:	movw	r0, #18042	; 0x467a
   1176c:	movt	r0, #1
   11770:	bl	10e40 <fputs@plt>
   11774:	bl	10e58 <abort@plt>
   11778:	push	{r4, r5, r6, sl, fp, lr}
   1177c:	add	fp, sp, #16
   11780:	mov	r4, r0
   11784:	movw	r0, #20800	; 0x5140
   11788:	movt	r0, #2
   1178c:	cmp	r4, #0
   11790:	moveq	r4, r0
   11794:	bl	10db0 <__errno_location@plt>
   11798:	ldr	r6, [r0]
   1179c:	mov	r5, r0
   117a0:	mov	r0, r4
   117a4:	mov	r1, #48	; 0x30
   117a8:	bl	13a04 <putchar_unlocked@plt+0x2ba0>
   117ac:	str	r6, [r5]
   117b0:	pop	{r4, r5, r6, sl, fp, pc}
   117b4:	movw	r1, #20800	; 0x5140
   117b8:	cmp	r0, #0
   117bc:	movt	r1, #2
   117c0:	movne	r1, r0
   117c4:	ldr	r0, [r1]
   117c8:	bx	lr
   117cc:	movw	r2, #20800	; 0x5140
   117d0:	cmp	r0, #0
   117d4:	movt	r2, #2
   117d8:	movne	r2, r0
   117dc:	str	r1, [r2]
   117e0:	bx	lr
   117e4:	movw	r3, #20800	; 0x5140
   117e8:	cmp	r0, #0
   117ec:	movt	r3, #2
   117f0:	movne	r3, r0
   117f4:	ubfx	r0, r1, #5, #3
   117f8:	and	r1, r1, #31
   117fc:	add	r0, r3, r0, lsl #2
   11800:	ldr	r3, [r0, #8]
   11804:	eor	r2, r2, r3, lsr r1
   11808:	and	r2, r2, #1
   1180c:	eor	r2, r3, r2, lsl r1
   11810:	str	r2, [r0, #8]
   11814:	mov	r0, #1
   11818:	and	r0, r0, r3, lsr r1
   1181c:	bx	lr
   11820:	movw	r2, #20800	; 0x5140
   11824:	cmp	r0, #0
   11828:	movt	r2, #2
   1182c:	movne	r2, r0
   11830:	ldr	r0, [r2, #4]
   11834:	str	r1, [r2, #4]
   11838:	bx	lr
   1183c:	movw	r3, #20800	; 0x5140
   11840:	cmp	r0, #0
   11844:	movt	r3, #2
   11848:	movne	r3, r0
   1184c:	cmp	r1, #0
   11850:	mov	r0, #10
   11854:	cmpne	r2, #0
   11858:	str	r0, [r3]
   1185c:	bne	1186c <putchar_unlocked@plt+0xa08>
   11860:	push	{fp, lr}
   11864:	mov	fp, sp
   11868:	bl	10e58 <abort@plt>
   1186c:	str	r1, [r3, #40]	; 0x28
   11870:	str	r2, [r3, #44]	; 0x2c
   11874:	bx	lr
   11878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1187c:	add	fp, sp, #28
   11880:	sub	sp, sp, #20
   11884:	mov	r7, r0
   11888:	ldr	r0, [fp, #8]
   1188c:	movw	r5, #20800	; 0x5140
   11890:	mov	r8, r3
   11894:	mov	r9, r2
   11898:	mov	sl, r1
   1189c:	movt	r5, #2
   118a0:	cmp	r0, #0
   118a4:	movne	r5, r0
   118a8:	bl	10db0 <__errno_location@plt>
   118ac:	mov	r4, r0
   118b0:	ldm	r5, {r0, r1}
   118b4:	ldr	r2, [r5, #40]	; 0x28
   118b8:	ldr	r3, [r5, #44]	; 0x2c
   118bc:	add	r5, r5, #8
   118c0:	ldr	r6, [r4]
   118c4:	stm	sp, {r0, r1, r5}
   118c8:	str	r2, [sp, #12]
   118cc:	str	r3, [sp, #16]
   118d0:	mov	r0, r7
   118d4:	mov	r1, sl
   118d8:	mov	r2, r9
   118dc:	mov	r3, r8
   118e0:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   118e4:	str	r6, [r4]
   118e8:	sub	sp, fp, #28
   118ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f4:	add	fp, sp, #28
   118f8:	sub	sp, sp, #156	; 0x9c
   118fc:	str	r0, [fp, #-56]	; 0xffffffc8
   11900:	ldr	r0, [fp, #12]
   11904:	mov	r4, r1
   11908:	str	r3, [sp, #80]	; 0x50
   1190c:	str	r2, [fp, #-84]	; 0xffffffac
   11910:	and	r1, r0, #4
   11914:	str	r1, [sp, #24]
   11918:	and	r1, r0, #1
   1191c:	str	r1, [sp, #28]
   11920:	ubfx	r7, r0, #1, #1
   11924:	bl	10d14 <__ctype_get_mb_cur_max@plt>
   11928:	str	r0, [sp, #32]
   1192c:	ldr	r0, [fp, #24]
   11930:	ldr	r9, [fp, #8]
   11934:	mov	r2, #0
   11938:	mov	r1, #0
   1193c:	mov	r5, #0
   11940:	str	r2, [sp, #52]	; 0x34
   11944:	mov	r2, #1
   11948:	str	r0, [sp, #72]	; 0x48
   1194c:	ldr	r0, [fp, #20]
   11950:	str	r0, [sp, #64]	; 0x40
   11954:	mov	r0, #0
   11958:	str	r0, [sp, #92]	; 0x5c
   1195c:	mov	r0, #0
   11960:	str	r0, [fp, #-76]	; 0xffffffb4
   11964:	mov	r0, #0
   11968:	cmp	r9, #10
   1196c:	str	r1, [sp, #68]	; 0x44
   11970:	bhi	12970 <putchar_unlocked@plt+0x1b0c>
   11974:	add	r1, pc, #28
   11978:	ldr	ip, [fp, #-84]	; 0xffffffac
   1197c:	ldr	lr, [sp, #80]	; 0x50
   11980:	mov	r6, r4
   11984:	mov	r8, #0
   11988:	mov	r3, #1
   1198c:	mov	sl, #0
   11990:	mov	r4, r2
   11994:	ldr	pc, [r1, r9, lsl #2]
   11998:	andeq	r1, r1, r8, ror #20
   1199c:	andeq	r1, r1, r4, lsr #21
   119a0:	andeq	r1, r1, r8, ror sl
   119a4:	andeq	r1, r1, r0, ror #20
   119a8:	muleq	r1, r8, sl
   119ac:	strdeq	r1, [r1], -r0
   119b0:	andeq	r1, r1, r8, lsl #21
   119b4:	andeq	r1, r1, r0, asr fp
   119b8:	andeq	r1, r1, r4, asr #19
   119bc:	andeq	r1, r1, r4, asr #19
   119c0:	andeq	r1, r1, ip, ror #19
   119c4:	movw	r0, #18190	; 0x470e
   119c8:	mov	r1, r9
   119cc:	movt	r0, #1
   119d0:	bl	130d8 <putchar_unlocked@plt+0x2274>
   119d4:	str	r0, [sp, #64]	; 0x40
   119d8:	movw	r0, #18192	; 0x4710
   119dc:	mov	r1, r9
   119e0:	movt	r0, #1
   119e4:	bl	130d8 <putchar_unlocked@plt+0x2274>
   119e8:	str	r0, [sp, #72]	; 0x48
   119ec:	mov	r8, #0
   119f0:	mov	sl, r7
   119f4:	tst	r7, #1
   119f8:	str	r5, [fp, #-48]	; 0xffffffd0
   119fc:	bne	11a38 <putchar_unlocked@plt+0xbd4>
   11a00:	ldr	r0, [sp, #64]	; 0x40
   11a04:	ldrb	r0, [r0]
   11a08:	cmp	r0, #0
   11a0c:	beq	11a38 <putchar_unlocked@plt+0xbd4>
   11a10:	ldr	r1, [sp, #64]	; 0x40
   11a14:	mov	r8, #0
   11a18:	add	r1, r1, #1
   11a1c:	cmp	r8, r6
   11a20:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   11a24:	strbcc	r0, [r2, r8]
   11a28:	ldrb	r0, [r1, r8]
   11a2c:	add	r8, r8, #1
   11a30:	cmp	r0, #0
   11a34:	bne	11a1c <putchar_unlocked@plt+0xbb8>
   11a38:	ldr	r7, [sp, #72]	; 0x48
   11a3c:	mov	r0, r7
   11a40:	bl	10da4 <strlen@plt>
   11a44:	ldr	ip, [fp, #-84]	; 0xffffffac
   11a48:	ldr	lr, [sp, #80]	; 0x50
   11a4c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   11a50:	str	r0, [fp, #-76]	; 0xffffffb4
   11a54:	str	r7, [sp, #92]	; 0x5c
   11a58:	mov	r3, #1
   11a5c:	b	11b50 <putchar_unlocked@plt+0xcec>
   11a60:	mov	r0, #1
   11a64:	b	11aa4 <putchar_unlocked@plt+0xc40>
   11a68:	mov	r9, #0
   11a6c:	mov	r8, #0
   11a70:	mov	r3, r0
   11a74:	b	11b4c <putchar_unlocked@plt+0xce8>
   11a78:	tst	r7, #1
   11a7c:	bne	11aa4 <putchar_unlocked@plt+0xc40>
   11a80:	mov	r3, r0
   11a84:	b	11acc <putchar_unlocked@plt+0xc68>
   11a88:	mov	r0, #1
   11a8c:	mov	r8, #0
   11a90:	mov	r9, #5
   11a94:	b	11b04 <putchar_unlocked@plt+0xca0>
   11a98:	mov	r3, #1
   11a9c:	tst	r7, #1
   11aa0:	beq	11acc <putchar_unlocked@plt+0xc68>
   11aa4:	mov	r1, #1
   11aa8:	mov	r8, #0
   11aac:	mov	r9, #2
   11ab0:	mov	r3, r0
   11ab4:	mov	sl, #1
   11ab8:	str	r1, [fp, #-76]	; 0xffffffb4
   11abc:	movw	r1, #18192	; 0x4710
   11ac0:	movt	r1, #1
   11ac4:	str	r1, [sp, #92]	; 0x5c
   11ac8:	b	11b50 <putchar_unlocked@plt+0xcec>
   11acc:	cmp	r6, #0
   11ad0:	mov	r8, #1
   11ad4:	mov	r9, #2
   11ad8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11adc:	movne	r0, #39	; 0x27
   11ae0:	strbne	r0, [r1]
   11ae4:	movw	r0, #18192	; 0x4710
   11ae8:	movt	r0, #1
   11aec:	b	11b40 <putchar_unlocked@plt+0xcdc>
   11af0:	mov	r9, #5
   11af4:	tst	r7, #1
   11af8:	beq	11b20 <putchar_unlocked@plt+0xcbc>
   11afc:	mov	r0, #1
   11b00:	mov	r8, #0
   11b04:	str	r0, [fp, #-76]	; 0xffffffb4
   11b08:	movw	r0, #18188	; 0x470c
   11b0c:	mov	r3, #1
   11b10:	mov	sl, #1
   11b14:	movt	r0, #1
   11b18:	str	r0, [sp, #92]	; 0x5c
   11b1c:	b	11b50 <putchar_unlocked@plt+0xcec>
   11b20:	cmp	r6, #0
   11b24:	mov	r8, #1
   11b28:	mov	r3, #1
   11b2c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11b30:	movne	r0, #34	; 0x22
   11b34:	strbne	r0, [r1]
   11b38:	movw	r0, #18188	; 0x470c
   11b3c:	movt	r0, #1
   11b40:	str	r0, [sp, #92]	; 0x5c
   11b44:	mov	r0, #1
   11b48:	str	r0, [fp, #-76]	; 0xffffffb4
   11b4c:	mov	sl, #0
   11b50:	ldr	r0, [fp, #16]
   11b54:	mov	r7, #0
   11b58:	str	r9, [fp, #-64]	; 0xffffffc0
   11b5c:	str	sl, [fp, #-72]	; 0xffffffb8
   11b60:	str	r3, [sp, #84]	; 0x54
   11b64:	cmp	r0, #0
   11b68:	movwne	r0, #1
   11b6c:	and	r0, r0, sl
   11b70:	str	r0, [fp, #-88]	; 0xffffffa8
   11b74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11b78:	cmp	r0, #0
   11b7c:	movwne	r0, #1
   11b80:	subs	r2, r9, #2
   11b84:	and	r1, r0, sl
   11b88:	str	r2, [fp, #-80]	; 0xffffffb0
   11b8c:	and	r1, r3, r1
   11b90:	str	r1, [sp, #44]	; 0x2c
   11b94:	clz	r1, r2
   11b98:	lsr	r1, r1, #5
   11b9c:	and	r1, r1, sl
   11ba0:	str	r1, [sp, #56]	; 0x38
   11ba4:	mov	r1, r2
   11ba8:	eor	r2, sl, #1
   11bac:	movwne	r1, #1
   11bb0:	str	r2, [sp, #88]	; 0x58
   11bb4:	orr	r2, r1, r2
   11bb8:	and	r1, r1, r3
   11bbc:	and	r0, r0, r1
   11bc0:	str	r2, [sp, #60]	; 0x3c
   11bc4:	str	r1, [fp, #-68]	; 0xffffffbc
   11bc8:	str	r0, [fp, #-60]	; 0xffffffc4
   11bcc:	eor	r0, r3, #1
   11bd0:	str	r0, [sp, #48]	; 0x30
   11bd4:	cmn	lr, #1
   11bd8:	beq	11be8 <putchar_unlocked@plt+0xd84>
   11bdc:	cmp	r7, lr
   11be0:	bne	11bf4 <putchar_unlocked@plt+0xd90>
   11be4:	b	127a0 <putchar_unlocked@plt+0x193c>
   11be8:	ldrb	r0, [ip, r7]
   11bec:	cmp	r0, #0
   11bf0:	beq	127a8 <putchar_unlocked@plt+0x1944>
   11bf4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11bf8:	mov	r9, #0
   11bfc:	str	r5, [fp, #-48]	; 0xffffffd0
   11c00:	str	r6, [fp, #-52]	; 0xffffffcc
   11c04:	cmp	r0, #0
   11c08:	beq	11c48 <putchar_unlocked@plt+0xde4>
   11c0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11c10:	mov	r5, r4
   11c14:	add	r4, r7, r0
   11c18:	cmp	r0, #2
   11c1c:	bcc	11c38 <putchar_unlocked@plt+0xdd4>
   11c20:	cmn	lr, #1
   11c24:	bne	11c38 <putchar_unlocked@plt+0xdd4>
   11c28:	mov	r0, ip
   11c2c:	bl	10da4 <strlen@plt>
   11c30:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c34:	mov	lr, r0
   11c38:	cmp	r4, lr
   11c3c:	bls	11c50 <putchar_unlocked@plt+0xdec>
   11c40:	mov	r6, #0
   11c44:	b	11c90 <putchar_unlocked@plt+0xe2c>
   11c48:	mov	r6, #0
   11c4c:	b	11c94 <putchar_unlocked@plt+0xe30>
   11c50:	ldr	r1, [sp, #92]	; 0x5c
   11c54:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11c58:	add	r0, ip, r7
   11c5c:	mov	r4, lr
   11c60:	bl	10ccc <memcmp@plt>
   11c64:	ldr	r2, [sp, #88]	; 0x58
   11c68:	cmp	r0, #0
   11c6c:	mov	r1, r0
   11c70:	movwne	r1, #1
   11c74:	orr	r1, r1, r2
   11c78:	tst	r1, #1
   11c7c:	beq	1283c <putchar_unlocked@plt+0x19d8>
   11c80:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c84:	clz	r0, r0
   11c88:	mov	lr, r4
   11c8c:	lsr	r6, r0, #5
   11c90:	mov	r4, r5
   11c94:	ldrb	r5, [ip, r7]
   11c98:	cmp	r5, #126	; 0x7e
   11c9c:	bhi	12064 <putchar_unlocked@plt+0x1200>
   11ca0:	add	r3, pc, #16
   11ca4:	mov	sl, #1
   11ca8:	mov	r2, #110	; 0x6e
   11cac:	mov	r0, #97	; 0x61
   11cb0:	mov	r1, #0
   11cb4:	ldr	pc, [r3, r5, lsl #2]
   11cb8:	andeq	r1, r1, r8, asr #30
   11cbc:	andeq	r2, r1, r4, rrx
   11cc0:	andeq	r2, r1, r4, rrx
   11cc4:	andeq	r2, r1, r4, rrx
   11cc8:	andeq	r2, r1, r4, rrx
   11ccc:	andeq	r2, r1, r4, rrx
   11cd0:	andeq	r2, r1, r4, rrx
   11cd4:	andeq	r2, r1, r8, lsl #2
   11cd8:	andeq	r1, r1, r8, lsr #30
   11cdc:	andeq	r1, r1, r0, lsr #30
   11ce0:	andeq	r1, r1, r4, lsr pc
   11ce4:			; <UNDEFINED> instruction: 0x00011fb8
   11ce8:	andeq	r1, r1, r8, lsl pc
   11cec:	andeq	r1, r1, r0, lsr pc
   11cf0:	andeq	r2, r1, r4, rrx
   11cf4:	andeq	r2, r1, r4, rrx
   11cf8:	andeq	r2, r1, r4, rrx
   11cfc:	andeq	r2, r1, r4, rrx
   11d00:	andeq	r2, r1, r4, rrx
   11d04:	andeq	r2, r1, r4, rrx
   11d08:	andeq	r2, r1, r4, rrx
   11d0c:	andeq	r2, r1, r4, rrx
   11d10:	andeq	r2, r1, r4, rrx
   11d14:	andeq	r2, r1, r4, rrx
   11d18:	andeq	r2, r1, r4, rrx
   11d1c:	andeq	r2, r1, r4, rrx
   11d20:	andeq	r2, r1, r4, rrx
   11d24:	andeq	r2, r1, r4, rrx
   11d28:	andeq	r2, r1, r4, rrx
   11d2c:	andeq	r2, r1, r4, rrx
   11d30:	andeq	r2, r1, r4, rrx
   11d34:	andeq	r2, r1, r4, rrx
   11d38:	andeq	r2, r1, r8, asr #1
   11d3c:	andeq	r2, r1, ip, asr #1
   11d40:	andeq	r2, r1, ip, asr #1
   11d44:	andeq	r1, r1, r8, asr #29
   11d48:	andeq	r2, r1, ip, asr #1
   11d4c:			; <UNDEFINED> instruction: 0x00011eb4
   11d50:	andeq	r2, r1, ip, asr #1
   11d54:	andeq	r1, r1, r0, asr #31
   11d58:	andeq	r2, r1, ip, asr #1
   11d5c:	andeq	r2, r1, ip, asr #1
   11d60:	andeq	r2, r1, ip, asr #1
   11d64:			; <UNDEFINED> instruction: 0x00011eb4
   11d68:			; <UNDEFINED> instruction: 0x00011eb4
   11d6c:			; <UNDEFINED> instruction: 0x00011eb4
   11d70:			; <UNDEFINED> instruction: 0x00011eb4
   11d74:			; <UNDEFINED> instruction: 0x00011eb4
   11d78:			; <UNDEFINED> instruction: 0x00011eb4
   11d7c:			; <UNDEFINED> instruction: 0x00011eb4
   11d80:			; <UNDEFINED> instruction: 0x00011eb4
   11d84:			; <UNDEFINED> instruction: 0x00011eb4
   11d88:			; <UNDEFINED> instruction: 0x00011eb4
   11d8c:			; <UNDEFINED> instruction: 0x00011eb4
   11d90:			; <UNDEFINED> instruction: 0x00011eb4
   11d94:			; <UNDEFINED> instruction: 0x00011eb4
   11d98:			; <UNDEFINED> instruction: 0x00011eb4
   11d9c:			; <UNDEFINED> instruction: 0x00011eb4
   11da0:			; <UNDEFINED> instruction: 0x00011eb4
   11da4:	andeq	r2, r1, ip, asr #1
   11da8:	andeq	r2, r1, ip, asr #1
   11dac:	andeq	r2, r1, ip, asr #1
   11db0:	andeq	r2, r1, ip, asr #1
   11db4:	andeq	r1, r1, ip, lsl #31
   11db8:	andeq	r2, r1, r4, rrx
   11dbc:			; <UNDEFINED> instruction: 0x00011eb4
   11dc0:			; <UNDEFINED> instruction: 0x00011eb4
   11dc4:			; <UNDEFINED> instruction: 0x00011eb4
   11dc8:			; <UNDEFINED> instruction: 0x00011eb4
   11dcc:			; <UNDEFINED> instruction: 0x00011eb4
   11dd0:			; <UNDEFINED> instruction: 0x00011eb4
   11dd4:			; <UNDEFINED> instruction: 0x00011eb4
   11dd8:			; <UNDEFINED> instruction: 0x00011eb4
   11ddc:			; <UNDEFINED> instruction: 0x00011eb4
   11de0:			; <UNDEFINED> instruction: 0x00011eb4
   11de4:			; <UNDEFINED> instruction: 0x00011eb4
   11de8:			; <UNDEFINED> instruction: 0x00011eb4
   11dec:			; <UNDEFINED> instruction: 0x00011eb4
   11df0:			; <UNDEFINED> instruction: 0x00011eb4
   11df4:			; <UNDEFINED> instruction: 0x00011eb4
   11df8:			; <UNDEFINED> instruction: 0x00011eb4
   11dfc:			; <UNDEFINED> instruction: 0x00011eb4
   11e00:			; <UNDEFINED> instruction: 0x00011eb4
   11e04:			; <UNDEFINED> instruction: 0x00011eb4
   11e08:			; <UNDEFINED> instruction: 0x00011eb4
   11e0c:			; <UNDEFINED> instruction: 0x00011eb4
   11e10:			; <UNDEFINED> instruction: 0x00011eb4
   11e14:			; <UNDEFINED> instruction: 0x00011eb4
   11e18:			; <UNDEFINED> instruction: 0x00011eb4
   11e1c:			; <UNDEFINED> instruction: 0x00011eb4
   11e20:			; <UNDEFINED> instruction: 0x00011eb4
   11e24:	andeq	r2, r1, ip, asr #1
   11e28:	strdeq	r1, [r1], -r4
   11e2c:			; <UNDEFINED> instruction: 0x00011eb4
   11e30:	andeq	r2, r1, ip, asr #1
   11e34:			; <UNDEFINED> instruction: 0x00011eb4
   11e38:	andeq	r2, r1, ip, asr #1
   11e3c:			; <UNDEFINED> instruction: 0x00011eb4
   11e40:			; <UNDEFINED> instruction: 0x00011eb4
   11e44:			; <UNDEFINED> instruction: 0x00011eb4
   11e48:			; <UNDEFINED> instruction: 0x00011eb4
   11e4c:			; <UNDEFINED> instruction: 0x00011eb4
   11e50:			; <UNDEFINED> instruction: 0x00011eb4
   11e54:			; <UNDEFINED> instruction: 0x00011eb4
   11e58:			; <UNDEFINED> instruction: 0x00011eb4
   11e5c:			; <UNDEFINED> instruction: 0x00011eb4
   11e60:			; <UNDEFINED> instruction: 0x00011eb4
   11e64:			; <UNDEFINED> instruction: 0x00011eb4
   11e68:			; <UNDEFINED> instruction: 0x00011eb4
   11e6c:			; <UNDEFINED> instruction: 0x00011eb4
   11e70:			; <UNDEFINED> instruction: 0x00011eb4
   11e74:			; <UNDEFINED> instruction: 0x00011eb4
   11e78:			; <UNDEFINED> instruction: 0x00011eb4
   11e7c:			; <UNDEFINED> instruction: 0x00011eb4
   11e80:			; <UNDEFINED> instruction: 0x00011eb4
   11e84:			; <UNDEFINED> instruction: 0x00011eb4
   11e88:			; <UNDEFINED> instruction: 0x00011eb4
   11e8c:			; <UNDEFINED> instruction: 0x00011eb4
   11e90:			; <UNDEFINED> instruction: 0x00011eb4
   11e94:			; <UNDEFINED> instruction: 0x00011eb4
   11e98:			; <UNDEFINED> instruction: 0x00011eb4
   11e9c:			; <UNDEFINED> instruction: 0x00011eb4
   11ea0:			; <UNDEFINED> instruction: 0x00011eb4
   11ea4:	ldrdeq	r1, [r1], -r8
   11ea8:	andeq	r2, r1, ip, asr #1
   11eac:	ldrdeq	r1, [r1], -r8
   11eb0:	andeq	r1, r1, r8, asr #29
   11eb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11eb8:	cmp	r0, #0
   11ebc:	beq	1211c <putchar_unlocked@plt+0x12b8>
   11ec0:	ldr	r0, [fp, #16]
   11ec4:	b	12120 <putchar_unlocked@plt+0x12bc>
   11ec8:	mov	sl, #0
   11ecc:	cmp	r7, #0
   11ed0:	bne	12338 <putchar_unlocked@plt+0x14d4>
   11ed4:	b	120c8 <putchar_unlocked@plt+0x1264>
   11ed8:	mov	sl, #0
   11edc:	cmn	lr, #1
   11ee0:	beq	120b4 <putchar_unlocked@plt+0x1250>
   11ee4:	cmp	r7, #0
   11ee8:	cmpeq	lr, #1
   11eec:	bne	12338 <putchar_unlocked@plt+0x14d4>
   11ef0:	b	120c8 <putchar_unlocked@plt+0x1264>
   11ef4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11ef8:	cmp	r0, #2
   11efc:	bne	120ec <putchar_unlocked@plt+0x1288>
   11f00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f04:	tst	r0, #1
   11f08:	bne	12858 <putchar_unlocked@plt+0x19f4>
   11f0c:	mov	r9, #0
   11f10:	mov	r0, #92	; 0x5c
   11f14:	b	12100 <putchar_unlocked@plt+0x129c>
   11f18:	mov	r0, #102	; 0x66
   11f1c:	b	12108 <putchar_unlocked@plt+0x12a4>
   11f20:	mov	r2, #116	; 0x74
   11f24:	b	11f34 <putchar_unlocked@plt+0x10d0>
   11f28:	mov	r0, #98	; 0x62
   11f2c:	b	12108 <putchar_unlocked@plt+0x12a4>
   11f30:	mov	r2, #114	; 0x72
   11f34:	ldr	r0, [sp, #60]	; 0x3c
   11f38:	tst	r0, #1
   11f3c:	mov	r0, r2
   11f40:	bne	12108 <putchar_unlocked@plt+0x12a4>
   11f44:	b	12858 <putchar_unlocked@plt+0x19f4>
   11f48:	ldr	r0, [sp, #84]	; 0x54
   11f4c:	tst	r0, #1
   11f50:	beq	121f4 <putchar_unlocked@plt+0x1390>
   11f54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f58:	tst	r0, #1
   11f5c:	bne	12960 <putchar_unlocked@plt+0x1afc>
   11f60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11f68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f6c:	cmp	r0, #2
   11f70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11f74:	movwne	r0, #1
   11f78:	orr	r0, r0, r3
   11f7c:	tst	r0, #1
   11f80:	beq	12674 <putchar_unlocked@plt+0x1810>
   11f84:	mov	r0, r8
   11f88:	b	126b4 <putchar_unlocked@plt+0x1850>
   11f8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f90:	mov	r9, #0
   11f94:	mov	r5, #63	; 0x3f
   11f98:	cmp	r0, #5
   11f9c:	beq	12340 <putchar_unlocked@plt+0x14dc>
   11fa0:	cmp	r0, #2
   11fa4:	bne	12400 <putchar_unlocked@plt+0x159c>
   11fa8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11fac:	tst	r0, #1
   11fb0:	beq	12404 <putchar_unlocked@plt+0x15a0>
   11fb4:	b	12858 <putchar_unlocked@plt+0x19f4>
   11fb8:	mov	r0, #118	; 0x76
   11fbc:	b	12108 <putchar_unlocked@plt+0x12a4>
   11fc0:	mov	r0, #1
   11fc4:	mov	r5, #39	; 0x27
   11fc8:	str	r0, [sp, #52]	; 0x34
   11fcc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11fd0:	cmp	r0, #2
   11fd4:	bne	1205c <putchar_unlocked@plt+0x11f8>
   11fd8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11fdc:	tst	r0, #1
   11fe0:	bne	12858 <putchar_unlocked@plt+0x19f4>
   11fe4:	ldr	r3, [sp, #68]	; 0x44
   11fe8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11fec:	mov	r9, #0
   11ff0:	clz	r1, r2
   11ff4:	cmp	r3, #0
   11ff8:	mov	r0, r3
   11ffc:	movwne	r0, #1
   12000:	lsr	r1, r1, #5
   12004:	orrs	r0, r0, r1
   12008:	moveq	r3, r2
   1200c:	moveq	r2, r0
   12010:	cmp	r8, r2
   12014:	str	r3, [sp, #68]	; 0x44
   12018:	str	r2, [fp, #-52]	; 0xffffffcc
   1201c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12020:	movcc	r0, #39	; 0x27
   12024:	strbcc	r0, [r1, r8]
   12028:	add	r0, r8, #1
   1202c:	cmp	r0, r2
   12030:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12034:	movcc	r1, #92	; 0x5c
   12038:	strbcc	r1, [r3, r0]
   1203c:	add	r0, r8, #2
   12040:	add	r8, r8, #3
   12044:	cmp	r0, r2
   12048:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1204c:	movcc	r1, #39	; 0x27
   12050:	strbcc	r1, [r2, r0]
   12054:	mov	r0, #0
   12058:	str	r0, [fp, #-48]	; 0xffffffd0
   1205c:	mov	sl, #1
   12060:	b	11eb4 <putchar_unlocked@plt+0x1050>
   12064:	ldr	r0, [sp, #32]
   12068:	cmp	r0, #1
   1206c:	bne	12218 <putchar_unlocked@plt+0x13b4>
   12070:	str	lr, [sp, #80]	; 0x50
   12074:	bl	10d8c <__ctype_b_loc@plt>
   12078:	ldr	r0, [r0]
   1207c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12080:	mov	r1, #1
   12084:	add	r0, r0, r5, lsl #1
   12088:	ldrb	r0, [r0, #1]
   1208c:	ubfx	sl, r0, #6, #1
   12090:	ldr	r0, [sp, #48]	; 0x30
   12094:	mov	r2, r1
   12098:	cmp	r1, #1
   1209c:	orr	r0, sl, r0
   120a0:	bhi	1240c <putchar_unlocked@plt+0x15a8>
   120a4:	tst	r0, #1
   120a8:	beq	1240c <putchar_unlocked@plt+0x15a8>
   120ac:	ldr	lr, [sp, #80]	; 0x50
   120b0:	b	11eb4 <putchar_unlocked@plt+0x1050>
   120b4:	cmp	r7, #0
   120b8:	bne	12334 <putchar_unlocked@plt+0x14d0>
   120bc:	ldrb	r0, [ip, #1]
   120c0:	cmp	r0, #0
   120c4:	bne	12334 <putchar_unlocked@plt+0x14d0>
   120c8:	mov	r1, #1
   120cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120d0:	cmp	r0, #2
   120d4:	bne	120e4 <putchar_unlocked@plt+0x1280>
   120d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   120dc:	tst	r0, #1
   120e0:	bne	12858 <putchar_unlocked@plt+0x19f4>
   120e4:	mov	sl, r1
   120e8:	b	11eb4 <putchar_unlocked@plt+0x1050>
   120ec:	ldr	r1, [sp, #44]	; 0x2c
   120f0:	mov	r9, #0
   120f4:	mov	r0, #92	; 0x5c
   120f8:	cmp	r1, #0
   120fc:	beq	12108 <putchar_unlocked@plt+0x12a4>
   12100:	mov	sl, #0
   12104:	b	12620 <putchar_unlocked@plt+0x17bc>
   12108:	ldr	r1, [sp, #84]	; 0x54
   1210c:	mov	sl, #0
   12110:	mov	r9, #0
   12114:	tst	r1, #1
   12118:	bne	12154 <putchar_unlocked@plt+0x12f0>
   1211c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12120:	cmp	r0, #0
   12124:	mov	r0, r5
   12128:	beq	1214c <putchar_unlocked@plt+0x12e8>
   1212c:	ldr	r1, [fp, #16]
   12130:	ubfx	r0, r5, #5, #3
   12134:	mov	r2, #1
   12138:	ldr	r0, [r1, r0, lsl #2]
   1213c:	and	r1, r5, #31
   12140:	tst	r0, r2, lsl r1
   12144:	mov	r0, r5
   12148:	bne	12154 <putchar_unlocked@plt+0x12f0>
   1214c:	cmp	r6, #0
   12150:	beq	12620 <putchar_unlocked@plt+0x17bc>
   12154:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12158:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1215c:	tst	r1, #1
   12160:	bne	12834 <putchar_unlocked@plt+0x19d0>
   12164:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12168:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1216c:	cmp	r1, #2
   12170:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12174:	movwne	r1, #1
   12178:	orr	r1, r1, r5
   1217c:	tst	r1, #1
   12180:	bne	121c4 <putchar_unlocked@plt+0x1360>
   12184:	cmp	r8, r6
   12188:	mov	r5, #1
   1218c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12190:	movcc	r1, #39	; 0x27
   12194:	strbcc	r1, [r2, r8]
   12198:	add	r1, r8, #1
   1219c:	cmp	r1, r6
   121a0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   121a4:	movcc	r2, #36	; 0x24
   121a8:	strbcc	r2, [r3, r1]
   121ac:	add	r1, r8, #2
   121b0:	add	r8, r8, #3
   121b4:	cmp	r1, r6
   121b8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   121bc:	movcc	r2, #39	; 0x27
   121c0:	strbcc	r2, [r3, r1]
   121c4:	cmp	r8, r6
   121c8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   121cc:	movcc	r1, #92	; 0x5c
   121d0:	strbcc	r1, [r2, r8]
   121d4:	add	r8, r8, #1
   121d8:	cmp	r8, r6
   121dc:	and	r4, r4, sl
   121e0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   121e4:	strbcc	r0, [r1, r8]
   121e8:	add	r8, r8, #1
   121ec:	add	r7, r7, #1
   121f0:	b	11bd4 <putchar_unlocked@plt+0xd70>
   121f4:	ldr	r0, [sp, #28]
   121f8:	mov	sl, #0
   121fc:	mov	r9, #0
   12200:	mov	r5, #0
   12204:	cmp	r0, #0
   12208:	beq	1211c <putchar_unlocked@plt+0x12b8>
   1220c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12210:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12214:	b	121ec <putchar_unlocked@plt+0x1388>
   12218:	mov	r0, #0
   1221c:	cmn	lr, #1
   12220:	str	r6, [sp, #76]	; 0x4c
   12224:	str	r4, [sp, #20]
   12228:	str	r0, [fp, #-36]	; 0xffffffdc
   1222c:	str	r0, [fp, #-40]	; 0xffffffd8
   12230:	bne	12244 <putchar_unlocked@plt+0x13e0>
   12234:	mov	r0, ip
   12238:	bl	10da4 <strlen@plt>
   1223c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12240:	mov	lr, r0
   12244:	add	r0, ip, r7
   12248:	mov	sl, #1
   1224c:	mov	r6, #0
   12250:	sub	r4, fp, #40	; 0x28
   12254:	str	lr, [sp, #80]	; 0x50
   12258:	str	r0, [sp, #36]	; 0x24
   1225c:	str	r6, [sp, #40]	; 0x28
   12260:	add	r6, r6, r7
   12264:	sub	r0, fp, #44	; 0x2c
   12268:	mov	r3, r4
   1226c:	add	r1, ip, r6
   12270:	sub	r2, lr, r6
   12274:	bl	13ef0 <putchar_unlocked@plt+0x308c>
   12278:	cmp	r0, #0
   1227c:	beq	12788 <putchar_unlocked@plt+0x1924>
   12280:	cmn	r0, #1
   12284:	beq	12748 <putchar_unlocked@plt+0x18e4>
   12288:	ldr	lr, [sp, #80]	; 0x50
   1228c:	cmn	r0, #2
   12290:	beq	12750 <putchar_unlocked@plt+0x18ec>
   12294:	ldr	r2, [sp, #56]	; 0x38
   12298:	cmp	r0, #2
   1229c:	mov	r1, #0
   122a0:	movwcc	r1, #1
   122a4:	eor	r2, r2, #1
   122a8:	orrs	r1, r2, r1
   122ac:	bne	122f8 <putchar_unlocked@plt+0x1494>
   122b0:	ldr	r1, [sp, #40]	; 0x28
   122b4:	ldr	r2, [sp, #36]	; 0x24
   122b8:	add	ip, r2, r1
   122bc:	mov	r2, #1
   122c0:	ldrb	r3, [ip, r2]
   122c4:	sub	r6, r3, #94	; 0x5e
   122c8:	cmp	r6, #30
   122cc:	bhi	122e0 <putchar_unlocked@plt+0x147c>
   122d0:	mov	r4, #1
   122d4:	mov	r1, #1073741829	; 0x40000005
   122d8:	tst	r1, r4, lsl r6
   122dc:	bne	12854 <putchar_unlocked@plt+0x19f0>
   122e0:	sub	r3, r3, #91	; 0x5b
   122e4:	cmp	r3, #2
   122e8:	bcc	12854 <putchar_unlocked@plt+0x19f0>
   122ec:	add	r2, r2, #1
   122f0:	cmp	r2, r0
   122f4:	bcc	122c0 <putchar_unlocked@plt+0x145c>
   122f8:	ldr	r6, [sp, #40]	; 0x28
   122fc:	add	r6, r0, r6
   12300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12304:	bl	10cfc <iswprint@plt>
   12308:	cmp	r0, #0
   1230c:	sub	r4, fp, #40	; 0x28
   12310:	movwne	r0, #1
   12314:	and	sl, sl, r0
   12318:	mov	r0, r4
   1231c:	bl	10cc0 <mbsinit@plt>
   12320:	ldr	lr, [sp, #80]	; 0x50
   12324:	ldr	ip, [fp, #-84]	; 0xffffffac
   12328:	cmp	r0, #0
   1232c:	beq	1225c <putchar_unlocked@plt+0x13f8>
   12330:	b	12790 <putchar_unlocked@plt+0x192c>
   12334:	mvn	lr, #0
   12338:	mov	r9, #0
   1233c:	b	11eb4 <putchar_unlocked@plt+0x1050>
   12340:	ldr	r0, [sp, #24]
   12344:	cmp	r0, #0
   12348:	beq	12400 <putchar_unlocked@plt+0x159c>
   1234c:	add	r0, r7, #2
   12350:	cmp	r0, lr
   12354:	bcs	12400 <putchar_unlocked@plt+0x159c>
   12358:	add	r1, ip, r7
   1235c:	ldrb	r1, [r1, #1]
   12360:	cmp	r1, #63	; 0x3f
   12364:	bne	12400 <putchar_unlocked@plt+0x159c>
   12368:	ldrb	r5, [ip, r0]
   1236c:	sub	r1, r5, #33	; 0x21
   12370:	cmp	r1, #29
   12374:	bhi	12400 <putchar_unlocked@plt+0x159c>
   12378:	movw	r3, #20929	; 0x51c1
   1237c:	mov	r2, #1
   12380:	movt	r3, #14336	; 0x3800
   12384:	tst	r3, r2, lsl r1
   12388:	beq	12400 <putchar_unlocked@plt+0x159c>
   1238c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12390:	tst	r1, #1
   12394:	bne	12968 <putchar_unlocked@plt+0x1b04>
   12398:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1239c:	mov	r7, r0
   123a0:	cmp	r8, r1
   123a4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   123a8:	movcc	r1, #63	; 0x3f
   123ac:	strbcc	r1, [r2, r8]
   123b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123b4:	add	r1, r8, #1
   123b8:	cmp	r1, r2
   123bc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   123c0:	movcc	r2, #34	; 0x22
   123c4:	strbcc	r2, [r3, r1]
   123c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123cc:	add	r1, r8, #2
   123d0:	cmp	r1, r2
   123d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   123d8:	movcc	r2, #34	; 0x22
   123dc:	strbcc	r2, [r3, r1]
   123e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123e4:	add	r1, r8, #3
   123e8:	add	r8, r8, #4
   123ec:	cmp	r1, r2
   123f0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   123f4:	movcc	r2, #63	; 0x3f
   123f8:	strbcc	r2, [r3, r1]
   123fc:	b	12404 <putchar_unlocked@plt+0x15a0>
   12400:	mov	r5, #63	; 0x3f
   12404:	mov	sl, #0
   12408:	b	11eb4 <putchar_unlocked@plt+0x1050>
   1240c:	str	r0, [sp, #40]	; 0x28
   12410:	add	r0, r2, r7
   12414:	str	r6, [sp, #76]	; 0x4c
   12418:	add	r1, r7, #1
   1241c:	ldr	lr, [sp, #80]	; 0x50
   12420:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12424:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12428:	mov	r3, #0
   1242c:	str	r0, [sp, #36]	; 0x24
   12430:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12434:	b	124c8 <putchar_unlocked@plt+0x1664>
   12438:	str	r0, [sp, #76]	; 0x4c
   1243c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12440:	cmp	r9, #0
   12444:	movwne	r9, #1
   12448:	mvn	r7, r0
   1244c:	orr	r7, r7, r9
   12450:	tst	r7, #1
   12454:	bne	124a4 <putchar_unlocked@plt+0x1640>
   12458:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1245c:	cmp	r8, r6
   12460:	bcs	12478 <putchar_unlocked@plt+0x1614>
   12464:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12468:	mov	r2, r4
   1246c:	mov	r4, #39	; 0x27
   12470:	strb	r4, [r7, r8]
   12474:	mov	r4, r2
   12478:	add	r7, r8, #1
   1247c:	cmp	r7, r6
   12480:	bcs	12498 <putchar_unlocked@plt+0x1634>
   12484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12488:	mov	r2, r4
   1248c:	mov	r4, #39	; 0x27
   12490:	strb	r4, [r0, r7]
   12494:	mov	r4, r2
   12498:	add	r8, r8, #2
   1249c:	mov	r0, #0
   124a0:	b	124ac <putchar_unlocked@plt+0x1648>
   124a4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   124a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124ac:	cmp	r8, r6
   124b0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   124b4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   124b8:	strbcc	r5, [r2, r8]
   124bc:	add	r8, r8, #1
   124c0:	ldrb	r5, [ip, r1]
   124c4:	add	r1, r1, #1
   124c8:	ldr	r2, [sp, #40]	; 0x28
   124cc:	tst	r2, #1
   124d0:	beq	1250c <putchar_unlocked@plt+0x16a8>
   124d4:	ldr	r2, [sp, #76]	; 0x4c
   124d8:	str	r0, [fp, #-48]	; 0xffffffd0
   124dc:	tst	r2, #1
   124e0:	beq	12504 <putchar_unlocked@plt+0x16a0>
   124e4:	cmp	r8, r6
   124e8:	bcs	12500 <putchar_unlocked@plt+0x169c>
   124ec:	ldr	r6, [fp, #-56]	; 0xffffffc8
   124f0:	mov	r2, r4
   124f4:	mov	r4, #92	; 0x5c
   124f8:	strb	r4, [r6, r8]
   124fc:	mov	r4, r2
   12500:	add	r8, r8, #1
   12504:	mov	r0, #0
   12508:	b	12600 <putchar_unlocked@plt+0x179c>
   1250c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12510:	tst	r2, #1
   12514:	bne	12860 <putchar_unlocked@plt+0x19fc>
   12518:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1251c:	cmp	r7, #2
   12520:	movwne	r3, #1
   12524:	orr	r3, r3, r0
   12528:	tst	r3, #1
   1252c:	bne	12588 <putchar_unlocked@plt+0x1724>
   12530:	cmp	r8, r6
   12534:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12538:	movcc	r3, #39	; 0x27
   1253c:	strbcc	r3, [r2, r8]
   12540:	add	r3, r8, #1
   12544:	cmp	r3, r6
   12548:	bcs	12560 <putchar_unlocked@plt+0x16fc>
   1254c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12550:	mov	r7, r4
   12554:	mov	r4, #36	; 0x24
   12558:	strb	r4, [r2, r3]
   1255c:	mov	r4, r7
   12560:	add	r3, r8, #2
   12564:	cmp	r3, r6
   12568:	bcs	12580 <putchar_unlocked@plt+0x171c>
   1256c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12570:	mov	r7, r4
   12574:	mov	r4, #39	; 0x27
   12578:	strb	r4, [r2, r3]
   1257c:	mov	r4, r7
   12580:	add	r8, r8, #3
   12584:	mov	r0, #1
   12588:	cmp	r8, r6
   1258c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12590:	movcc	r3, #92	; 0x5c
   12594:	strbcc	r3, [r2, r8]
   12598:	add	r3, r8, #1
   1259c:	cmp	r3, r6
   125a0:	bcs	125c0 <putchar_unlocked@plt+0x175c>
   125a4:	mov	r2, r4
   125a8:	and	r7, r5, #192	; 0xc0
   125ac:	mov	r4, #48	; 0x30
   125b0:	orr	r7, r4, r7, lsr #6
   125b4:	mov	r4, r2
   125b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   125bc:	strb	r7, [r2, r3]
   125c0:	add	r3, r8, #2
   125c4:	cmp	r3, r6
   125c8:	bcs	125e8 <putchar_unlocked@plt+0x1784>
   125cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   125d0:	mov	r6, r4
   125d4:	lsr	r7, r5, #3
   125d8:	mov	r4, #6
   125dc:	bfi	r7, r4, #3, #29
   125e0:	mov	r4, r6
   125e4:	strb	r7, [r2, r3]
   125e8:	str	r0, [fp, #-48]	; 0xffffffd0
   125ec:	ldr	r0, [sp, #76]	; 0x4c
   125f0:	mov	r3, #6
   125f4:	add	r8, r8, #3
   125f8:	bfi	r5, r3, #3, #29
   125fc:	mov	r3, #1
   12600:	ldr	r2, [sp, #36]	; 0x24
   12604:	and	r9, r3, #1
   12608:	cmp	r2, r1
   1260c:	bhi	12438 <putchar_unlocked@plt+0x15d4>
   12610:	cmp	r9, #0
   12614:	sub	r7, r1, #1
   12618:	mov	r0, r5
   1261c:	movwne	r9, #1
   12620:	cmp	r9, #0
   12624:	bne	12668 <putchar_unlocked@plt+0x1804>
   12628:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1262c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12630:	tst	r5, #1
   12634:	beq	121d8 <putchar_unlocked@plt+0x1374>
   12638:	cmp	r8, r6
   1263c:	mov	r5, #0
   12640:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12644:	movcc	r1, #39	; 0x27
   12648:	strbcc	r1, [r2, r8]
   1264c:	add	r1, r8, #1
   12650:	add	r8, r8, #2
   12654:	cmp	r1, r6
   12658:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1265c:	movcc	r2, #39	; 0x27
   12660:	strbcc	r2, [r3, r1]
   12664:	b	121d8 <putchar_unlocked@plt+0x1374>
   12668:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1266c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12670:	b	121d8 <putchar_unlocked@plt+0x1374>
   12674:	cmp	r8, r1
   12678:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1267c:	movcc	r0, #39	; 0x27
   12680:	strbcc	r0, [r2, r8]
   12684:	add	r0, r8, #1
   12688:	cmp	r0, r1
   1268c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12690:	movcc	r2, #36	; 0x24
   12694:	strbcc	r2, [r3, r0]
   12698:	add	r0, r8, #2
   1269c:	cmp	r0, r1
   126a0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126a4:	movcc	r2, #39	; 0x27
   126a8:	strbcc	r2, [r3, r0]
   126ac:	add	r0, r8, #3
   126b0:	mov	r3, #1
   126b4:	cmp	r0, r1
   126b8:	add	r8, r0, #1
   126bc:	str	r3, [fp, #-48]	; 0xffffffd0
   126c0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   126c4:	movcc	r1, #92	; 0x5c
   126c8:	strbcc	r1, [r2, r0]
   126cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   126d0:	cmp	r1, #2
   126d4:	beq	12738 <putchar_unlocked@plt+0x18d4>
   126d8:	add	r1, r7, #1
   126dc:	mov	sl, #0
   126e0:	mov	r9, #1
   126e4:	mov	r5, #48	; 0x30
   126e8:	cmp	r1, lr
   126ec:	bcs	11eb4 <putchar_unlocked@plt+0x1050>
   126f0:	ldrb	r1, [ip, r1]
   126f4:	sub	r1, r1, #48	; 0x30
   126f8:	uxtb	r1, r1
   126fc:	cmp	r1, #9
   12700:	bhi	11eb4 <putchar_unlocked@plt+0x1050>
   12704:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12708:	cmp	r8, r1
   1270c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12710:	movcc	r1, #48	; 0x30
   12714:	strbcc	r1, [r2, r8]
   12718:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1271c:	add	r1, r0, #2
   12720:	add	r8, r0, #3
   12724:	cmp	r1, r2
   12728:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1272c:	movcc	r2, #48	; 0x30
   12730:	strbcc	r2, [r3, r1]
   12734:	b	11eb4 <putchar_unlocked@plt+0x1050>
   12738:	mov	r0, #48	; 0x30
   1273c:	mov	r9, #1
   12740:	mov	sl, #0
   12744:	b	1214c <putchar_unlocked@plt+0x12e8>
   12748:	mov	sl, #0
   1274c:	b	12788 <putchar_unlocked@plt+0x1924>
   12750:	mov	sl, #0
   12754:	cmp	lr, r6
   12758:	bls	12788 <putchar_unlocked@plt+0x1924>
   1275c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12760:	ldr	r6, [sp, #40]	; 0x28
   12764:	ldr	r0, [sp, #36]	; 0x24
   12768:	ldrb	r0, [r0, r6]
   1276c:	cmp	r0, #0
   12770:	beq	12790 <putchar_unlocked@plt+0x192c>
   12774:	add	r6, r6, #1
   12778:	add	r0, r7, r6
   1277c:	cmp	r0, lr
   12780:	bcc	12764 <putchar_unlocked@plt+0x1900>
   12784:	b	12790 <putchar_unlocked@plt+0x192c>
   12788:	ldr	ip, [fp, #-84]	; 0xffffffac
   1278c:	ldr	r6, [sp, #40]	; 0x28
   12790:	mov	r1, r6
   12794:	ldr	r4, [sp, #20]
   12798:	ldr	r6, [sp, #76]	; 0x4c
   1279c:	b	12090 <putchar_unlocked@plt+0x122c>
   127a0:	mov	lr, r7
   127a4:	b	127ac <putchar_unlocked@plt+0x1948>
   127a8:	mvn	lr, #0
   127ac:	ldr	r9, [fp, #-64]	; 0xffffffc0
   127b0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   127b4:	eor	r0, r9, #2
   127b8:	orr	r0, r0, r8
   127bc:	clz	r0, r0
   127c0:	lsr	r0, r0, #5
   127c4:	tst	r1, r0
   127c8:	bne	128c4 <putchar_unlocked@plt+0x1a60>
   127cc:	mov	r0, r1
   127d0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   127d4:	cmp	r9, #2
   127d8:	movwne	r1, #1
   127dc:	orr	r0, r0, r1
   127e0:	tst	r0, #1
   127e4:	bne	12904 <putchar_unlocked@plt+0x1aa0>
   127e8:	ldr	r0, [sp, #52]	; 0x34
   127ec:	ldr	r1, [sp, #68]	; 0x44
   127f0:	str	lr, [sp, #80]	; 0x50
   127f4:	eor	r0, r0, #1
   127f8:	tst	r0, #1
   127fc:	bne	12904 <putchar_unlocked@plt+0x1aa0>
   12800:	tst	r4, #1
   12804:	bne	128cc <putchar_unlocked@plt+0x1a68>
   12808:	mov	r7, #0
   1280c:	cmp	r1, #0
   12810:	beq	128fc <putchar_unlocked@plt+0x1a98>
   12814:	ldr	r0, [sp, #84]	; 0x54
   12818:	mov	r3, #0
   1281c:	cmp	r6, #0
   12820:	mov	r2, #0
   12824:	mov	r4, r1
   12828:	str	r3, [fp, #-72]	; 0xffffffb8
   1282c:	beq	11968 <putchar_unlocked@plt+0xb04>
   12830:	b	12904 <putchar_unlocked@plt+0x1aa0>
   12834:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12838:	b	12860 <putchar_unlocked@plt+0x19fc>
   1283c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12840:	mov	r2, #1
   12844:	mov	lr, r4
   12848:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1284c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12850:	b	12864 <putchar_unlocked@plt+0x1a00>
   12854:	ldr	ip, [fp, #-84]	; 0xffffffac
   12858:	mov	r7, #2
   1285c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12860:	ldr	r2, [sp, #84]	; 0x54
   12864:	mov	r0, #0
   12868:	ldr	r1, [fp, #12]
   1286c:	tst	r2, #1
   12870:	mov	r2, r7
   12874:	mov	r3, lr
   12878:	str	r0, [sp, #8]
   1287c:	ldr	r0, [sp, #64]	; 0x40
   12880:	movwne	r2, #4
   12884:	cmp	r7, #2
   12888:	movne	r2, r7
   1288c:	str	r2, [sp]
   12890:	mov	r2, ip
   12894:	bic	r1, r1, #2
   12898:	str	r0, [sp, #12]
   1289c:	ldr	r0, [sp, #72]	; 0x48
   128a0:	str	r1, [sp, #4]
   128a4:	mov	r1, r6
   128a8:	str	r0, [sp, #16]
   128ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   128b0:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   128b4:	mov	r8, r0
   128b8:	mov	r0, r8
   128bc:	sub	sp, fp, #28
   128c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128c4:	mov	r7, #2
   128c8:	b	12860 <putchar_unlocked@plt+0x19fc>
   128cc:	mov	r0, #5
   128d0:	ldr	r2, [fp, #-84]	; 0xffffffac
   128d4:	ldr	r3, [sp, #80]	; 0x50
   128d8:	str	r0, [sp]
   128dc:	ldr	r0, [fp, #12]
   128e0:	str	r0, [sp, #4]
   128e4:	ldr	r0, [fp, #16]
   128e8:	str	r0, [sp, #8]
   128ec:	ldr	r0, [sp, #64]	; 0x40
   128f0:	str	r0, [sp, #12]
   128f4:	ldr	r0, [sp, #72]	; 0x48
   128f8:	b	128a8 <putchar_unlocked@plt+0x1a44>
   128fc:	mov	r0, #0
   12900:	str	r0, [fp, #-72]	; 0xffffffb8
   12904:	ldr	r1, [sp, #92]	; 0x5c
   12908:	cmp	r1, #0
   1290c:	beq	1294c <putchar_unlocked@plt+0x1ae8>
   12910:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12914:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12918:	tst	r0, #1
   1291c:	bne	12950 <putchar_unlocked@plt+0x1aec>
   12920:	ldrb	r0, [r1]
   12924:	cmp	r0, #0
   12928:	beq	12950 <putchar_unlocked@plt+0x1aec>
   1292c:	add	r1, r1, #1
   12930:	cmp	r8, r6
   12934:	strbcc	r0, [r2, r8]
   12938:	add	r8, r8, #1
   1293c:	ldrb	r0, [r1], #1
   12940:	cmp	r0, #0
   12944:	bne	12930 <putchar_unlocked@plt+0x1acc>
   12948:	b	12950 <putchar_unlocked@plt+0x1aec>
   1294c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12950:	cmp	r8, r6
   12954:	movcc	r0, #0
   12958:	strbcc	r0, [r2, r8]
   1295c:	b	128b8 <putchar_unlocked@plt+0x1a54>
   12960:	mov	r2, #1
   12964:	b	12848 <putchar_unlocked@plt+0x19e4>
   12968:	mov	r7, #5
   1296c:	b	1285c <putchar_unlocked@plt+0x19f8>
   12970:	bl	10e58 <abort@plt>
   12974:	mov	r3, r2
   12978:	mov	r2, #0
   1297c:	b	12980 <putchar_unlocked@plt+0x1b1c>
   12980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12984:	add	fp, sp, #28
   12988:	sub	sp, sp, #36	; 0x24
   1298c:	movw	r8, #20800	; 0x5140
   12990:	cmp	r3, #0
   12994:	mov	r4, r2
   12998:	str	r2, [sp, #24]
   1299c:	mov	r5, r1
   129a0:	mov	r6, r0
   129a4:	str	r0, [sp, #20]
   129a8:	movt	r8, #2
   129ac:	movne	r8, r3
   129b0:	bl	10db0 <__errno_location@plt>
   129b4:	str	r0, [sp, #28]
   129b8:	cmp	r4, #0
   129bc:	add	sl, r8, #8
   129c0:	ldm	r8, {r3, r9}
   129c4:	ldr	r7, [r0]
   129c8:	ldr	r1, [r8, #40]	; 0x28
   129cc:	ldr	r2, [r8, #44]	; 0x2c
   129d0:	mov	r0, #0
   129d4:	orreq	r9, r9, #1
   129d8:	str	r7, [sp, #32]
   129dc:	mov	r7, r5
   129e0:	stm	sp, {r3, r9, sl}
   129e4:	str	r1, [sp, #12]
   129e8:	str	r2, [sp, #16]
   129ec:	mov	r1, #0
   129f0:	mov	r2, r6
   129f4:	mov	r3, r5
   129f8:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   129fc:	add	r4, r0, #1
   12a00:	mov	r5, r0
   12a04:	mov	r0, r4
   12a08:	bl	136e4 <putchar_unlocked@plt+0x2880>
   12a0c:	mov	r6, r0
   12a10:	ldr	r0, [r8]
   12a14:	ldr	r2, [r8, #44]	; 0x2c
   12a18:	ldr	r1, [r8, #40]	; 0x28
   12a1c:	mov	r3, r7
   12a20:	stm	sp, {r0, r9, sl}
   12a24:	str	r2, [sp, #16]
   12a28:	str	r1, [sp, #12]
   12a2c:	mov	r0, r6
   12a30:	mov	r1, r4
   12a34:	ldr	r2, [sp, #20]
   12a38:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   12a3c:	ldr	r0, [sp, #24]
   12a40:	ldr	r1, [sp, #32]
   12a44:	ldr	r2, [sp, #28]
   12a48:	cmp	r0, #0
   12a4c:	str	r1, [r2]
   12a50:	strne	r5, [r0]
   12a54:	mov	r0, r6
   12a58:	sub	sp, fp, #28
   12a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a64:	add	fp, sp, #24
   12a68:	movw	r5, #20692	; 0x50d4
   12a6c:	movw	r8, #20688	; 0x50d0
   12a70:	movt	r5, #2
   12a74:	movt	r8, #2
   12a78:	ldr	r0, [r5]
   12a7c:	ldr	r4, [r8]
   12a80:	cmp	r0, #2
   12a84:	blt	12ab0 <putchar_unlocked@plt+0x1c4c>
   12a88:	add	r7, r4, #12
   12a8c:	mov	r6, #0
   12a90:	ldr	r0, [r7, r6, lsl #3]
   12a94:	bl	11694 <putchar_unlocked@plt+0x830>
   12a98:	ldr	r1, [r5]
   12a9c:	add	r2, r6, #2
   12aa0:	add	r0, r6, #1
   12aa4:	mov	r6, r0
   12aa8:	cmp	r2, r1
   12aac:	blt	12a90 <putchar_unlocked@plt+0x1c2c>
   12ab0:	ldr	r0, [r4, #4]
   12ab4:	movw	r7, #20848	; 0x5170
   12ab8:	movt	r7, #2
   12abc:	cmp	r0, r7
   12ac0:	beq	12ad8 <putchar_unlocked@plt+0x1c74>
   12ac4:	bl	11694 <putchar_unlocked@plt+0x830>
   12ac8:	movw	r0, #20696	; 0x50d8
   12acc:	mov	r6, #256	; 0x100
   12ad0:	movt	r0, #2
   12ad4:	strd	r6, [r0]
   12ad8:	movw	r6, #20696	; 0x50d8
   12adc:	movt	r6, #2
   12ae0:	cmp	r4, r6
   12ae4:	beq	12af4 <putchar_unlocked@plt+0x1c90>
   12ae8:	mov	r0, r4
   12aec:	bl	11694 <putchar_unlocked@plt+0x830>
   12af0:	str	r6, [r8]
   12af4:	mov	r0, #1
   12af8:	str	r0, [r5]
   12afc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12b00:	movw	r3, #20800	; 0x5140
   12b04:	mvn	r2, #0
   12b08:	movt	r3, #2
   12b0c:	b	12b10 <putchar_unlocked@plt+0x1cac>
   12b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b14:	add	fp, sp, #28
   12b18:	sub	sp, sp, #44	; 0x2c
   12b1c:	mov	r7, r3
   12b20:	str	r2, [sp, #36]	; 0x24
   12b24:	str	r1, [sp, #32]
   12b28:	mov	r5, r0
   12b2c:	bl	10db0 <__errno_location@plt>
   12b30:	cmp	r5, #0
   12b34:	blt	12ca0 <putchar_unlocked@plt+0x1e3c>
   12b38:	cmn	r5, #-2147483647	; 0x80000001
   12b3c:	beq	12ca0 <putchar_unlocked@plt+0x1e3c>
   12b40:	movw	r8, #20692	; 0x50d4
   12b44:	movw	r4, #20688	; 0x50d0
   12b48:	str	r0, [sp, #28]
   12b4c:	ldr	r0, [r0]
   12b50:	movt	r8, #2
   12b54:	movt	r4, #2
   12b58:	ldr	r1, [r8]
   12b5c:	ldr	r6, [r4]
   12b60:	str	r0, [sp, #24]
   12b64:	cmp	r1, r5
   12b68:	ble	12b74 <putchar_unlocked@plt+0x1d10>
   12b6c:	mov	sl, r6
   12b70:	b	12bdc <putchar_unlocked@plt+0x1d78>
   12b74:	movw	r9, #20696	; 0x50d8
   12b78:	mov	r0, #8
   12b7c:	add	r2, r5, #1
   12b80:	str	r1, [fp, #-32]	; 0xffffffe0
   12b84:	mvn	r3, #-2147483648	; 0x80000000
   12b88:	movt	r9, #2
   12b8c:	str	r0, [sp]
   12b90:	sub	r2, r2, r1
   12b94:	sub	r1, fp, #32
   12b98:	subs	r0, r6, r9
   12b9c:	movne	r0, r6
   12ba0:	bl	13814 <putchar_unlocked@plt+0x29b0>
   12ba4:	cmp	r6, r9
   12ba8:	mov	sl, r0
   12bac:	str	r0, [r4]
   12bb0:	ldrdeq	r0, [r9]
   12bb4:	stmeq	sl, {r0, r1}
   12bb8:	ldr	r1, [r8]
   12bbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12bc0:	add	r0, sl, r1, lsl #3
   12bc4:	sub	r1, r2, r1
   12bc8:	lsl	r2, r1, #3
   12bcc:	mov	r1, #0
   12bd0:	bl	10dc8 <memset@plt>
   12bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bd8:	str	r0, [r8]
   12bdc:	mov	r9, sl
   12be0:	ldr	r6, [r9, r5, lsl #3]!
   12be4:	ldr	r4, [r9, #4]!
   12be8:	ldm	r7, {r0, r1}
   12bec:	ldr	r2, [r7, #40]	; 0x28
   12bf0:	ldr	r3, [r7, #44]	; 0x2c
   12bf4:	orr	r8, r1, #1
   12bf8:	add	r1, r7, #8
   12bfc:	stm	sp, {r0, r8}
   12c00:	add	r0, sp, #8
   12c04:	str	r1, [sp, #20]
   12c08:	stm	r0, {r1, r2, r3}
   12c0c:	mov	r0, r4
   12c10:	mov	r1, r6
   12c14:	ldr	r2, [sp, #32]
   12c18:	ldr	r3, [sp, #36]	; 0x24
   12c1c:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   12c20:	cmp	r6, r0
   12c24:	bhi	12c88 <putchar_unlocked@plt+0x1e24>
   12c28:	add	r6, r0, #1
   12c2c:	movw	r0, #20848	; 0x5170
   12c30:	movt	r0, #2
   12c34:	str	r6, [sl, r5, lsl #3]
   12c38:	cmp	r4, r0
   12c3c:	beq	12c48 <putchar_unlocked@plt+0x1de4>
   12c40:	mov	r0, r4
   12c44:	bl	11694 <putchar_unlocked@plt+0x830>
   12c48:	mov	r0, r6
   12c4c:	bl	136e4 <putchar_unlocked@plt+0x2880>
   12c50:	str	r0, [r9]
   12c54:	mov	r4, r0
   12c58:	add	r3, sp, #8
   12c5c:	ldr	r0, [r7]
   12c60:	ldr	r1, [r7, #40]	; 0x28
   12c64:	ldr	r2, [r7, #44]	; 0x2c
   12c68:	stm	sp, {r0, r8}
   12c6c:	ldr	r0, [sp, #20]
   12c70:	stm	r3, {r0, r1, r2}
   12c74:	mov	r0, r4
   12c78:	mov	r1, r6
   12c7c:	ldr	r2, [sp, #32]
   12c80:	ldr	r3, [sp, #36]	; 0x24
   12c84:	bl	118f0 <putchar_unlocked@plt+0xa8c>
   12c88:	ldr	r0, [sp, #28]
   12c8c:	ldr	r1, [sp, #24]
   12c90:	str	r1, [r0]
   12c94:	mov	r0, r4
   12c98:	sub	sp, fp, #28
   12c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ca0:	bl	10e58 <abort@plt>
   12ca4:	movw	r3, #20800	; 0x5140
   12ca8:	movt	r3, #2
   12cac:	b	12b10 <putchar_unlocked@plt+0x1cac>
   12cb0:	movw	r3, #20800	; 0x5140
   12cb4:	mov	r1, r0
   12cb8:	mov	r0, #0
   12cbc:	mvn	r2, #0
   12cc0:	movt	r3, #2
   12cc4:	b	12b10 <putchar_unlocked@plt+0x1cac>
   12cc8:	movw	r3, #20800	; 0x5140
   12ccc:	mov	r2, r1
   12cd0:	mov	r1, r0
   12cd4:	mov	r0, #0
   12cd8:	movt	r3, #2
   12cdc:	b	12b10 <putchar_unlocked@plt+0x1cac>
   12ce0:	push	{fp, lr}
   12ce4:	mov	fp, sp
   12ce8:	sub	sp, sp, #48	; 0x30
   12cec:	vmov.i32	q8, #0	; 0x00000000
   12cf0:	mov	ip, #32
   12cf4:	mov	r3, sp
   12cf8:	mov	lr, r2
   12cfc:	cmp	r1, #10
   12d00:	add	r2, r3, #16
   12d04:	vst1.64	{d16-d17}, [r3], ip
   12d08:	vst1.64	{d16-d17}, [r3]
   12d0c:	vst1.64	{d16-d17}, [r2]
   12d10:	beq	12d30 <putchar_unlocked@plt+0x1ecc>
   12d14:	str	r1, [sp]
   12d18:	mov	r3, sp
   12d1c:	mov	r1, lr
   12d20:	mvn	r2, #0
   12d24:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12d28:	mov	sp, fp
   12d2c:	pop	{fp, pc}
   12d30:	bl	10e58 <abort@plt>
   12d34:	push	{r4, sl, fp, lr}
   12d38:	add	fp, sp, #8
   12d3c:	sub	sp, sp, #48	; 0x30
   12d40:	mov	ip, r3
   12d44:	mov	r3, sp
   12d48:	vmov.i32	q8, #0	; 0x00000000
   12d4c:	mov	lr, #32
   12d50:	cmp	r1, #10
   12d54:	add	r4, r3, #16
   12d58:	vst1.64	{d16-d17}, [r3], lr
   12d5c:	vst1.64	{d16-d17}, [r3]
   12d60:	vst1.64	{d16-d17}, [r4]
   12d64:	beq	12d84 <putchar_unlocked@plt+0x1f20>
   12d68:	str	r1, [sp]
   12d6c:	mov	r1, r2
   12d70:	mov	r3, sp
   12d74:	mov	r2, ip
   12d78:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12d7c:	sub	sp, fp, #8
   12d80:	pop	{r4, sl, fp, pc}
   12d84:	bl	10e58 <abort@plt>
   12d88:	mov	r2, r1
   12d8c:	mov	r1, r0
   12d90:	mov	r0, #0
   12d94:	b	12ce0 <putchar_unlocked@plt+0x1e7c>
   12d98:	mov	r3, r2
   12d9c:	mov	r2, r1
   12da0:	mov	r1, r0
   12da4:	mov	r0, #0
   12da8:	b	12d34 <putchar_unlocked@plt+0x1ed0>
   12dac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12db0:	add	fp, sp, #24
   12db4:	sub	sp, sp, #48	; 0x30
   12db8:	movw	r8, #20800	; 0x5140
   12dbc:	mov	lr, r0
   12dc0:	mov	r3, sp
   12dc4:	mov	ip, r1
   12dc8:	movt	r8, #2
   12dcc:	mov	r1, r3
   12dd0:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   12dd4:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   12dd8:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   12ddc:	stm	r1, {r0, r4, r5, r6, r7, r9}
   12de0:	ubfx	r0, r2, #5, #3
   12de4:	and	r2, r2, #31
   12de8:	mov	r4, #1
   12dec:	add	r0, r3, r0, lsl #2
   12df0:	ldr	r1, [r0, #8]
   12df4:	bic	r4, r4, r1, lsr r2
   12df8:	eor	r1, r1, r4, lsl r2
   12dfc:	mov	r2, ip
   12e00:	str	r1, [r0, #8]
   12e04:	mov	r0, #0
   12e08:	mov	r1, lr
   12e0c:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12e10:	sub	sp, fp, #24
   12e14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e1c:	add	fp, sp, #24
   12e20:	sub	sp, sp, #48	; 0x30
   12e24:	movw	lr, #20800	; 0x5140
   12e28:	mov	ip, r0
   12e2c:	mov	r3, sp
   12e30:	movt	lr, #2
   12e34:	mov	r2, r3
   12e38:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   12e3c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   12e40:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   12e44:	stm	r2, {r0, r4, r5, r6, r7, r8}
   12e48:	ubfx	r0, r1, #5, #3
   12e4c:	and	r1, r1, #31
   12e50:	mov	r7, #1
   12e54:	add	r0, r3, r0, lsl #2
   12e58:	ldr	r2, [r0, #8]
   12e5c:	bic	r7, r7, r2, lsr r1
   12e60:	eor	r1, r2, r7, lsl r1
   12e64:	mvn	r2, #0
   12e68:	str	r1, [r0, #8]
   12e6c:	mov	r0, #0
   12e70:	mov	r1, ip
   12e74:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12e78:	sub	sp, fp, #24
   12e7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e80:	push	{r4, r5, r6, r7, fp, lr}
   12e84:	add	fp, sp, #16
   12e88:	sub	sp, sp, #48	; 0x30
   12e8c:	movw	lr, #20800	; 0x5140
   12e90:	mov	ip, r0
   12e94:	mov	r3, sp
   12e98:	movt	lr, #2
   12e9c:	mov	r2, r3
   12ea0:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   12ea4:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12ea8:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   12eac:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12eb0:	mov	r1, ip
   12eb4:	mvn	r2, #0
   12eb8:	ldr	r0, [sp, #12]
   12ebc:	orr	r0, r0, #67108864	; 0x4000000
   12ec0:	str	r0, [sp, #12]
   12ec4:	mov	r0, #0
   12ec8:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12ecc:	sub	sp, fp, #16
   12ed0:	pop	{r4, r5, r6, r7, fp, pc}
   12ed4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ed8:	add	fp, sp, #24
   12edc:	sub	sp, sp, #48	; 0x30
   12ee0:	movw	r8, #20800	; 0x5140
   12ee4:	mov	ip, r1
   12ee8:	mov	lr, r0
   12eec:	mov	r3, sp
   12ef0:	movt	r8, #2
   12ef4:	mov	r2, r3
   12ef8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   12efc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12f00:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   12f04:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12f08:	mov	r1, lr
   12f0c:	mov	r2, ip
   12f10:	ldr	r0, [sp, #12]
   12f14:	orr	r0, r0, #67108864	; 0x4000000
   12f18:	str	r0, [sp, #12]
   12f1c:	mov	r0, #0
   12f20:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12f24:	sub	sp, fp, #24
   12f28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f30:	add	fp, sp, #24
   12f34:	sub	sp, sp, #96	; 0x60
   12f38:	mov	lr, sp
   12f3c:	vmov.i32	q8, #0	; 0x00000000
   12f40:	mov	ip, r2
   12f44:	cmp	r1, #10
   12f48:	add	r3, lr, #16
   12f4c:	mov	r2, lr
   12f50:	vst1.64	{d16-d17}, [r3]
   12f54:	mov	r3, #28
   12f58:	vst1.64	{d16-d17}, [r2], r3
   12f5c:	vst1.32	{d16-d17}, [r2]
   12f60:	beq	12fa0 <putchar_unlocked@plt+0x213c>
   12f64:	str	r1, [sp, #48]	; 0x30
   12f68:	add	r3, sp, #48	; 0x30
   12f6c:	ldm	lr!, {r2, r4, r5, r6, r7}
   12f70:	add	r1, r3, #4
   12f74:	stmia	r1!, {r2, r4, r5, r6, r7}
   12f78:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   12f7c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   12f80:	mvn	r2, #0
   12f84:	ldr	r1, [sp, #60]	; 0x3c
   12f88:	orr	r1, r1, #67108864	; 0x4000000
   12f8c:	str	r1, [sp, #60]	; 0x3c
   12f90:	mov	r1, ip
   12f94:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   12f98:	sub	sp, fp, #24
   12f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fa0:	bl	10e58 <abort@plt>
   12fa4:	push	{fp, lr}
   12fa8:	mov	fp, sp
   12fac:	sub	sp, sp, #8
   12fb0:	mvn	ip, #0
   12fb4:	str	ip, [sp]
   12fb8:	bl	12fc4 <putchar_unlocked@plt+0x2160>
   12fbc:	mov	sp, fp
   12fc0:	pop	{fp, pc}
   12fc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fc8:	add	fp, sp, #24
   12fcc:	sub	sp, sp, #48	; 0x30
   12fd0:	movw	ip, #20800	; 0x5140
   12fd4:	mov	lr, r3
   12fd8:	mov	r3, sp
   12fdc:	cmp	r1, #0
   12fe0:	movt	ip, #2
   12fe4:	cmpne	r2, #0
   12fe8:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   12fec:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   12ff0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   12ff4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   12ff8:	mov	r3, #10
   12ffc:	str	r3, [sp]
   13000:	bne	13008 <putchar_unlocked@plt+0x21a4>
   13004:	bl	10e58 <abort@plt>
   13008:	ldr	ip, [fp, #8]
   1300c:	str	r2, [sp, #44]	; 0x2c
   13010:	str	r1, [sp, #40]	; 0x28
   13014:	mov	r3, sp
   13018:	mov	r1, lr
   1301c:	mov	r2, ip
   13020:	bl	12b10 <putchar_unlocked@plt+0x1cac>
   13024:	sub	sp, fp, #24
   13028:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1302c:	push	{fp, lr}
   13030:	mov	fp, sp
   13034:	sub	sp, sp, #8
   13038:	mov	r3, r2
   1303c:	mov	r2, r1
   13040:	mov	r1, r0
   13044:	mvn	r0, #0
   13048:	str	r0, [sp]
   1304c:	mov	r0, #0
   13050:	bl	12fc4 <putchar_unlocked@plt+0x2160>
   13054:	mov	sp, fp
   13058:	pop	{fp, pc}
   1305c:	push	{fp, lr}
   13060:	mov	fp, sp
   13064:	sub	sp, sp, #8
   13068:	mov	ip, r2
   1306c:	mov	r2, r1
   13070:	mov	r1, r0
   13074:	str	r3, [sp]
   13078:	mov	r0, #0
   1307c:	mov	r3, ip
   13080:	bl	12fc4 <putchar_unlocked@plt+0x2160>
   13084:	mov	sp, fp
   13088:	pop	{fp, pc}
   1308c:	movw	r3, #20704	; 0x50e0
   13090:	movt	r3, #2
   13094:	b	12b10 <putchar_unlocked@plt+0x1cac>
   13098:	movw	r3, #20704	; 0x50e0
   1309c:	mov	r2, r1
   130a0:	mov	r1, r0
   130a4:	mov	r0, #0
   130a8:	movt	r3, #2
   130ac:	b	12b10 <putchar_unlocked@plt+0x1cac>
   130b0:	movw	r3, #20704	; 0x50e0
   130b4:	mvn	r2, #0
   130b8:	movt	r3, #2
   130bc:	b	12b10 <putchar_unlocked@plt+0x1cac>
   130c0:	movw	r3, #20704	; 0x50e0
   130c4:	mov	r1, r0
   130c8:	mov	r0, #0
   130cc:	mvn	r2, #0
   130d0:	movt	r3, #2
   130d4:	b	12b10 <putchar_unlocked@plt+0x1cac>
   130d8:	push	{r4, r5, fp, lr}
   130dc:	add	fp, sp, #8
   130e0:	mov	r5, r0
   130e4:	mov	r4, r1
   130e8:	mov	r0, #0
   130ec:	mov	r2, #5
   130f0:	mov	r1, r5
   130f4:	bl	10cd8 <dcgettext@plt>
   130f8:	cmp	r0, r5
   130fc:	popne	{r4, r5, fp, pc}
   13100:	bl	13eb8 <putchar_unlocked@plt+0x3054>
   13104:	ldrb	r1, [r0]
   13108:	and	r1, r1, #223	; 0xdf
   1310c:	cmp	r1, #71	; 0x47
   13110:	beq	13178 <putchar_unlocked@plt+0x2314>
   13114:	cmp	r1, #85	; 0x55
   13118:	bne	1319c <putchar_unlocked@plt+0x2338>
   1311c:	ldrb	r1, [r0, #1]
   13120:	and	r1, r1, #223	; 0xdf
   13124:	cmp	r1, #84	; 0x54
   13128:	bne	1319c <putchar_unlocked@plt+0x2338>
   1312c:	ldrb	r1, [r0, #2]
   13130:	and	r1, r1, #223	; 0xdf
   13134:	cmp	r1, #70	; 0x46
   13138:	ldrbeq	r1, [r0, #3]
   1313c:	cmpeq	r1, #45	; 0x2d
   13140:	bne	1319c <putchar_unlocked@plt+0x2338>
   13144:	ldrb	r1, [r0, #4]
   13148:	cmp	r1, #56	; 0x38
   1314c:	ldrbeq	r0, [r0, #5]
   13150:	cmpeq	r0, #0
   13154:	bne	1319c <putchar_unlocked@plt+0x2338>
   13158:	ldrb	r1, [r5]
   1315c:	movw	r2, #18194	; 0x4712
   13160:	movw	r0, #18198	; 0x4716
   13164:	movt	r2, #1
   13168:	movt	r0, #1
   1316c:	cmp	r1, #96	; 0x60
   13170:	moveq	r0, r2
   13174:	pop	{r4, r5, fp, pc}
   13178:	ldrb	r1, [r0, #1]
   1317c:	and	r1, r1, #223	; 0xdf
   13180:	cmp	r1, #66	; 0x42
   13184:	bne	1319c <putchar_unlocked@plt+0x2338>
   13188:	ldrb	r1, [r0, #2]
   1318c:	cmp	r1, #49	; 0x31
   13190:	ldrbeq	r1, [r0, #3]
   13194:	cmpeq	r1, #56	; 0x38
   13198:	beq	131b8 <putchar_unlocked@plt+0x2354>
   1319c:	movw	r1, #18188	; 0x470c
   131a0:	movw	r0, #18192	; 0x4710
   131a4:	cmp	r4, #9
   131a8:	movt	r1, #1
   131ac:	movt	r0, #1
   131b0:	moveq	r0, r1
   131b4:	pop	{r4, r5, fp, pc}
   131b8:	ldrb	r1, [r0, #4]
   131bc:	cmp	r1, #48	; 0x30
   131c0:	ldrbeq	r1, [r0, #5]
   131c4:	cmpeq	r1, #51	; 0x33
   131c8:	bne	1319c <putchar_unlocked@plt+0x2338>
   131cc:	ldrb	r1, [r0, #6]
   131d0:	cmp	r1, #48	; 0x30
   131d4:	ldrbeq	r0, [r0, #7]
   131d8:	cmpeq	r0, #0
   131dc:	bne	1319c <putchar_unlocked@plt+0x2338>
   131e0:	ldrb	r1, [r5]
   131e4:	movw	r2, #18202	; 0x471a
   131e8:	movw	r0, #18206	; 0x471e
   131ec:	movt	r2, #1
   131f0:	movt	r0, #1
   131f4:	b	1316c <putchar_unlocked@plt+0x2308>
   131f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131fc:	add	fp, sp, #24
   13200:	sub	sp, sp, #32
   13204:	ldr	r6, [fp, #12]
   13208:	ldr	r7, [fp, #8]
   1320c:	mov	r4, r2
   13210:	mov	r8, r0
   13214:	cmp	r1, #0
   13218:	beq	13240 <putchar_unlocked@plt+0x23dc>
   1321c:	movw	r2, #18296	; 0x4778
   13220:	mov	r5, r1
   13224:	str	r3, [sp, #4]
   13228:	str	r4, [sp]
   1322c:	mov	r0, r8
   13230:	mov	r1, #1
   13234:	movt	r2, #1
   13238:	mov	r3, r5
   1323c:	b	13258 <putchar_unlocked@plt+0x23f4>
   13240:	movw	r2, #18308	; 0x4784
   13244:	str	r3, [sp]
   13248:	mov	r0, r8
   1324c:	mov	r1, #1
   13250:	mov	r3, r4
   13254:	movt	r2, #1
   13258:	bl	10dec <__fprintf_chk@plt>
   1325c:	movw	r1, #18315	; 0x478b
   13260:	mov	r0, #0
   13264:	mov	r2, #5
   13268:	movt	r1, #1
   1326c:	bl	10cd8 <dcgettext@plt>
   13270:	movw	r2, #19033	; 0x4a59
   13274:	mov	r3, r0
   13278:	movw	r0, #2022	; 0x7e6
   1327c:	mov	r1, #1
   13280:	str	r0, [sp]
   13284:	movt	r2, #1
   13288:	mov	r0, r8
   1328c:	bl	10dec <__fprintf_chk@plt>
   13290:	movw	r4, #17332	; 0x43b4
   13294:	mov	r1, r8
   13298:	movt	r4, #1
   1329c:	mov	r0, r4
   132a0:	bl	10c78 <fputs_unlocked@plt>
   132a4:	movw	r1, #18319	; 0x478f
   132a8:	mov	r0, #0
   132ac:	mov	r2, #5
   132b0:	movt	r1, #1
   132b4:	bl	10cd8 <dcgettext@plt>
   132b8:	movw	r3, #18490	; 0x483a
   132bc:	mov	r2, r0
   132c0:	mov	r0, r8
   132c4:	mov	r1, #1
   132c8:	movt	r3, #1
   132cc:	bl	10dec <__fprintf_chk@plt>
   132d0:	mov	r0, r4
   132d4:	mov	r1, r8
   132d8:	bl	10c78 <fputs_unlocked@plt>
   132dc:	cmp	r6, #9
   132e0:	bhi	13344 <putchar_unlocked@plt+0x24e0>
   132e4:	add	r0, pc, #0
   132e8:	ldr	pc, [r0, r6, lsl #2]
   132ec:	andeq	r3, r1, ip, lsl r5
   132f0:	andeq	r3, r1, r4, lsl r3
   132f4:	andeq	r3, r1, r0, asr r3
   132f8:	andeq	r3, r1, r8, ror r3
   132fc:	andeq	r3, r1, r0, lsr #7
   13300:	andeq	r3, r1, r8, asr #7
   13304:	strdeq	r3, [r1], -r0
   13308:	andeq	r3, r1, r8, lsr #8
   1330c:	andeq	r3, r1, r8, asr #9
   13310:	andeq	r3, r1, r0, ror r4
   13314:	movw	r1, #18524	; 0x485c
   13318:	mov	r0, #0
   1331c:	mov	r2, #5
   13320:	movt	r1, #1
   13324:	bl	10cd8 <dcgettext@plt>
   13328:	ldr	r3, [r7]
   1332c:	mov	r2, r0
   13330:	mov	r0, r8
   13334:	mov	r1, #1
   13338:	sub	sp, fp, #24
   1333c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13340:	b	10dec <__fprintf_chk@plt>
   13344:	movw	r1, #18843	; 0x499b
   13348:	movt	r1, #1
   1334c:	b	13478 <putchar_unlocked@plt+0x2614>
   13350:	movw	r1, #18540	; 0x486c
   13354:	mov	r0, #0
   13358:	mov	r2, #5
   1335c:	movt	r1, #1
   13360:	bl	10cd8 <dcgettext@plt>
   13364:	mov	r2, r0
   13368:	ldr	r3, [r7]
   1336c:	ldr	r0, [r7, #4]
   13370:	str	r0, [sp]
   13374:	b	13464 <putchar_unlocked@plt+0x2600>
   13378:	movw	r1, #18563	; 0x4883
   1337c:	mov	r0, #0
   13380:	mov	r2, #5
   13384:	movt	r1, #1
   13388:	bl	10cd8 <dcgettext@plt>
   1338c:	ldr	r3, [r7]
   13390:	mov	r2, r0
   13394:	ldmib	r7, {r0, r1}
   13398:	stm	sp, {r0, r1}
   1339c:	b	13464 <putchar_unlocked@plt+0x2600>
   133a0:	movw	r1, #18591	; 0x489f
   133a4:	mov	r0, #0
   133a8:	mov	r2, #5
   133ac:	movt	r1, #1
   133b0:	bl	10cd8 <dcgettext@plt>
   133b4:	ldr	r3, [r7]
   133b8:	mov	r2, r0
   133bc:	ldmib	r7, {r0, r1, r7}
   133c0:	stm	sp, {r0, r1, r7}
   133c4:	b	13464 <putchar_unlocked@plt+0x2600>
   133c8:	movw	r1, #18623	; 0x48bf
   133cc:	mov	r0, #0
   133d0:	mov	r2, #5
   133d4:	movt	r1, #1
   133d8:	bl	10cd8 <dcgettext@plt>
   133dc:	ldr	r3, [r7]
   133e0:	mov	r2, r0
   133e4:	ldmib	r7, {r0, r1, r6, r7}
   133e8:	stm	sp, {r0, r1, r6, r7}
   133ec:	b	13464 <putchar_unlocked@plt+0x2600>
   133f0:	movw	r1, #18659	; 0x48e3
   133f4:	mov	r0, #0
   133f8:	mov	r2, #5
   133fc:	movt	r1, #1
   13400:	bl	10cd8 <dcgettext@plt>
   13404:	ldr	r3, [r7]
   13408:	mov	r2, r0
   1340c:	ldmib	r7, {r0, r1, r6}
   13410:	ldr	r5, [r7, #16]
   13414:	ldr	r7, [r7, #20]
   13418:	stm	sp, {r0, r1, r6}
   1341c:	str	r5, [sp, #12]
   13420:	str	r7, [sp, #16]
   13424:	b	13464 <putchar_unlocked@plt+0x2600>
   13428:	movw	r1, #18699	; 0x490b
   1342c:	mov	r0, #0
   13430:	mov	r2, #5
   13434:	movt	r1, #1
   13438:	bl	10cd8 <dcgettext@plt>
   1343c:	ldr	r3, [r7]
   13440:	mov	r2, r0
   13444:	ldmib	r7, {r0, r1, r6}
   13448:	ldr	r5, [r7, #16]
   1344c:	ldr	r4, [r7, #20]
   13450:	ldr	r7, [r7, #24]
   13454:	stm	sp, {r0, r1, r6}
   13458:	str	r5, [sp, #12]
   1345c:	str	r4, [sp, #16]
   13460:	str	r7, [sp, #20]
   13464:	mov	r0, r8
   13468:	mov	r1, #1
   1346c:	b	13518 <putchar_unlocked@plt+0x26b4>
   13470:	movw	r1, #18791	; 0x4967
   13474:	movt	r1, #1
   13478:	mov	r0, #0
   1347c:	mov	r2, #5
   13480:	bl	10cd8 <dcgettext@plt>
   13484:	mov	ip, r0
   13488:	ldr	r3, [r7]
   1348c:	ldr	r0, [r7, #4]
   13490:	ldr	r1, [r7, #8]
   13494:	ldr	r6, [r7, #12]
   13498:	ldr	r5, [r7, #16]
   1349c:	ldr	r4, [r7, #20]
   134a0:	ldr	r2, [r7, #24]
   134a4:	ldr	lr, [r7, #28]
   134a8:	ldr	r7, [r7, #32]
   134ac:	stm	sp, {r0, r1, r6}
   134b0:	str	r5, [sp, #12]
   134b4:	str	r4, [sp, #16]
   134b8:	str	r2, [sp, #20]
   134bc:	str	lr, [sp, #24]
   134c0:	str	r7, [sp, #28]
   134c4:	b	1350c <putchar_unlocked@plt+0x26a8>
   134c8:	movw	r1, #18743	; 0x4937
   134cc:	mov	r0, #0
   134d0:	mov	r2, #5
   134d4:	movt	r1, #1
   134d8:	bl	10cd8 <dcgettext@plt>
   134dc:	mov	ip, r0
   134e0:	ldr	r3, [r7]
   134e4:	ldmib	r7, {r0, r1, r6}
   134e8:	ldr	r5, [r7, #16]
   134ec:	ldr	r4, [r7, #20]
   134f0:	ldr	r2, [r7, #24]
   134f4:	ldr	r7, [r7, #28]
   134f8:	stm	sp, {r0, r1, r6}
   134fc:	str	r5, [sp, #12]
   13500:	str	r4, [sp, #16]
   13504:	str	r2, [sp, #20]
   13508:	str	r7, [sp, #24]
   1350c:	mov	r0, r8
   13510:	mov	r1, #1
   13514:	mov	r2, ip
   13518:	bl	10dec <__fprintf_chk@plt>
   1351c:	sub	sp, fp, #24
   13520:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13524:	push	{r4, sl, fp, lr}
   13528:	add	fp, sp, #8
   1352c:	sub	sp, sp, #8
   13530:	ldr	ip, [fp, #8]
   13534:	mov	lr, #0
   13538:	ldr	r4, [ip, lr, lsl #2]
   1353c:	add	lr, lr, #1
   13540:	cmp	r4, #0
   13544:	bne	13538 <putchar_unlocked@plt+0x26d4>
   13548:	sub	r4, lr, #1
   1354c:	str	ip, [sp]
   13550:	str	r4, [sp, #4]
   13554:	bl	131f8 <putchar_unlocked@plt+0x2394>
   13558:	sub	sp, fp, #8
   1355c:	pop	{r4, sl, fp, pc}
   13560:	push	{r4, r5, fp, lr}
   13564:	add	fp, sp, #8
   13568:	sub	sp, sp, #48	; 0x30
   1356c:	ldr	r4, [fp, #8]
   13570:	mov	ip, #0
   13574:	add	lr, sp, #8
   13578:	ldr	r5, [r4]
   1357c:	cmp	r5, #0
   13580:	str	r5, [lr, ip, lsl #2]
   13584:	beq	13598 <putchar_unlocked@plt+0x2734>
   13588:	add	ip, ip, #1
   1358c:	add	r4, r4, #4
   13590:	cmp	ip, #10
   13594:	bcc	13578 <putchar_unlocked@plt+0x2714>
   13598:	str	lr, [sp]
   1359c:	str	ip, [sp, #4]
   135a0:	bl	131f8 <putchar_unlocked@plt+0x2394>
   135a4:	sub	sp, fp, #8
   135a8:	pop	{r4, r5, fp, pc}
   135ac:	push	{fp, lr}
   135b0:	mov	fp, sp
   135b4:	sub	sp, sp, #8
   135b8:	add	ip, fp, #8
   135bc:	str	ip, [sp, #4]
   135c0:	str	ip, [sp]
   135c4:	bl	13560 <putchar_unlocked@plt+0x26fc>
   135c8:	mov	sp, fp
   135cc:	pop	{fp, pc}
   135d0:	push	{fp, lr}
   135d4:	mov	fp, sp
   135d8:	movw	r0, #20772	; 0x5124
   135dc:	movt	r0, #2
   135e0:	ldr	r1, [r0]
   135e4:	movw	r0, #17332	; 0x43b4
   135e8:	movt	r0, #1
   135ec:	bl	10c78 <fputs_unlocked@plt>
   135f0:	movw	r1, #18903	; 0x49d7
   135f4:	mov	r0, #0
   135f8:	mov	r2, #5
   135fc:	movt	r1, #1
   13600:	bl	10cd8 <dcgettext@plt>
   13604:	movw	r2, #18923	; 0x49eb
   13608:	mov	r1, r0
   1360c:	mov	r0, #1
   13610:	movt	r2, #1
   13614:	bl	10dd4 <__printf_chk@plt>
   13618:	movw	r1, #18945	; 0x4a01
   1361c:	mov	r0, #0
   13620:	mov	r2, #5
   13624:	movt	r1, #1
   13628:	bl	10cd8 <dcgettext@plt>
   1362c:	movw	r2, #17373	; 0x43dd
   13630:	movw	r3, #17629	; 0x44dd
   13634:	mov	r1, r0
   13638:	mov	r0, #1
   1363c:	movt	r2, #1
   13640:	movt	r3, #1
   13644:	bl	10dd4 <__printf_chk@plt>
   13648:	movw	r1, #18965	; 0x4a15
   1364c:	mov	r0, #0
   13650:	mov	r2, #5
   13654:	movt	r1, #1
   13658:	bl	10cd8 <dcgettext@plt>
   1365c:	movw	r2, #19004	; 0x4a3c
   13660:	mov	r1, r0
   13664:	mov	r0, #1
   13668:	movt	r2, #1
   1366c:	pop	{fp, lr}
   13670:	b	10dd4 <__printf_chk@plt>
   13674:	b	13678 <putchar_unlocked@plt+0x2814>
   13678:	push	{r4, r5, r6, sl, fp, lr}
   1367c:	add	fp, sp, #16
   13680:	mov	r4, r2
   13684:	mov	r5, r1
   13688:	mov	r6, r0
   1368c:	bl	13f50 <putchar_unlocked@plt+0x30ec>
   13690:	cmp	r0, #0
   13694:	popne	{r4, r5, r6, sl, fp, pc}
   13698:	cmp	r6, #0
   1369c:	beq	136b0 <putchar_unlocked@plt+0x284c>
   136a0:	cmp	r5, #0
   136a4:	cmpne	r4, #0
   136a8:	bne	136b0 <putchar_unlocked@plt+0x284c>
   136ac:	pop	{r4, r5, r6, sl, fp, pc}
   136b0:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   136b4:	push	{fp, lr}
   136b8:	mov	fp, sp
   136bc:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   136c0:	cmp	r0, #0
   136c4:	popne	{fp, pc}
   136c8:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   136cc:	push	{fp, lr}
   136d0:	mov	fp, sp
   136d4:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   136d8:	cmp	r0, #0
   136dc:	popne	{fp, pc}
   136e0:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   136e4:	push	{fp, lr}
   136e8:	mov	fp, sp
   136ec:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   136f0:	cmp	r0, #0
   136f4:	popne	{fp, pc}
   136f8:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   136fc:	push	{r4, r5, fp, lr}
   13700:	add	fp, sp, #8
   13704:	mov	r4, r1
   13708:	mov	r5, r0
   1370c:	bl	13bcc <putchar_unlocked@plt+0x2d68>
   13710:	cmp	r0, #0
   13714:	popne	{r4, r5, fp, pc}
   13718:	cmp	r5, #0
   1371c:	beq	1372c <putchar_unlocked@plt+0x28c8>
   13720:	cmp	r4, #0
   13724:	bne	1372c <putchar_unlocked@plt+0x28c8>
   13728:	pop	{r4, r5, fp, pc}
   1372c:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	cmp	r1, #0
   1373c:	orreq	r1, r1, #1
   13740:	bl	13bcc <putchar_unlocked@plt+0x2d68>
   13744:	cmp	r0, #0
   13748:	popne	{fp, pc}
   1374c:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13750:	push	{fp, lr}
   13754:	mov	fp, sp
   13758:	clz	r3, r2
   1375c:	lsr	ip, r3, #5
   13760:	clz	r3, r1
   13764:	lsr	r3, r3, #5
   13768:	orrs	r3, r3, ip
   1376c:	movwne	r1, #1
   13770:	movwne	r2, #1
   13774:	bl	13f50 <putchar_unlocked@plt+0x30ec>
   13778:	cmp	r0, #0
   1377c:	popne	{fp, pc}
   13780:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	mov	r2, r1
   13790:	mov	r1, r0
   13794:	mov	r0, #0
   13798:	bl	13f50 <putchar_unlocked@plt+0x30ec>
   1379c:	cmp	r0, #0
   137a0:	popne	{fp, pc}
   137a4:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   137a8:	mov	r2, r1
   137ac:	mov	r1, r0
   137b0:	mov	r0, #0
   137b4:	b	13750 <putchar_unlocked@plt+0x28ec>
   137b8:	mov	r2, #1
   137bc:	b	137c0 <putchar_unlocked@plt+0x295c>
   137c0:	push	{r4, r5, fp, lr}
   137c4:	add	fp, sp, #8
   137c8:	ldr	r5, [r1]
   137cc:	mov	r4, r1
   137d0:	cmp	r0, #0
   137d4:	beq	137ec <putchar_unlocked@plt+0x2988>
   137d8:	mov	r1, #1
   137dc:	add	r1, r1, r5, lsr #1
   137e0:	adds	r5, r5, r1
   137e4:	bcc	13804 <putchar_unlocked@plt+0x29a0>
   137e8:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   137ec:	cmp	r5, #0
   137f0:	bne	13804 <putchar_unlocked@plt+0x29a0>
   137f4:	mov	r1, #64	; 0x40
   137f8:	cmp	r2, #64	; 0x40
   137fc:	udiv	r5, r1, r2
   13800:	addhi	r5, r5, #1
   13804:	mov	r1, r5
   13808:	bl	13678 <putchar_unlocked@plt+0x2814>
   1380c:	str	r5, [r4]
   13810:	pop	{r4, r5, fp, pc}
   13814:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13818:	add	fp, sp, #24
   1381c:	ldr	r6, [r1]
   13820:	mov	r8, r1
   13824:	ldr	r4, [fp, #8]
   13828:	add	r1, r6, r6, asr #1
   1382c:	cmp	r1, r6
   13830:	mvnvs	r1, #-2147483648	; 0x80000000
   13834:	cmp	r1, r3
   13838:	mov	r5, r1
   1383c:	movgt	r5, r3
   13840:	cmn	r3, #1
   13844:	movle	r5, r1
   13848:	cmn	r4, #1
   1384c:	ble	1386c <putchar_unlocked@plt+0x2a08>
   13850:	cmp	r4, #0
   13854:	beq	138c0 <putchar_unlocked@plt+0x2a5c>
   13858:	cmn	r5, #1
   1385c:	ble	13894 <putchar_unlocked@plt+0x2a30>
   13860:	mvn	r7, #-2147483648	; 0x80000000
   13864:	udiv	r1, r7, r4
   13868:	b	13888 <putchar_unlocked@plt+0x2a24>
   1386c:	cmn	r5, #1
   13870:	ble	138b0 <putchar_unlocked@plt+0x2a4c>
   13874:	cmn	r4, #1
   13878:	beq	138c0 <putchar_unlocked@plt+0x2a5c>
   1387c:	mov	r1, #-2147483648	; 0x80000000
   13880:	mvn	r7, #-2147483648	; 0x80000000
   13884:	sdiv	r1, r1, r4
   13888:	cmp	r1, r5
   1388c:	bge	138c0 <putchar_unlocked@plt+0x2a5c>
   13890:	b	138d0 <putchar_unlocked@plt+0x2a6c>
   13894:	beq	138c0 <putchar_unlocked@plt+0x2a5c>
   13898:	mov	r1, #-2147483648	; 0x80000000
   1389c:	mvn	r7, #-2147483648	; 0x80000000
   138a0:	sdiv	r1, r1, r5
   138a4:	cmp	r1, r4
   138a8:	bge	138c0 <putchar_unlocked@plt+0x2a5c>
   138ac:	b	138d0 <putchar_unlocked@plt+0x2a6c>
   138b0:	mvn	r7, #-2147483648	; 0x80000000
   138b4:	sdiv	r1, r7, r4
   138b8:	cmp	r5, r1
   138bc:	blt	138d0 <putchar_unlocked@plt+0x2a6c>
   138c0:	mul	r1, r5, r4
   138c4:	mov	r7, #64	; 0x40
   138c8:	cmp	r1, #63	; 0x3f
   138cc:	bgt	138d8 <putchar_unlocked@plt+0x2a74>
   138d0:	sdiv	r5, r7, r4
   138d4:	mul	r1, r5, r4
   138d8:	cmp	r0, #0
   138dc:	moveq	r7, #0
   138e0:	streq	r7, [r8]
   138e4:	sub	r7, r5, r6
   138e8:	cmp	r7, r2
   138ec:	bge	13990 <putchar_unlocked@plt+0x2b2c>
   138f0:	add	r5, r6, r2
   138f4:	mov	r2, #0
   138f8:	mov	r1, #0
   138fc:	cmp	r5, r3
   13900:	movwgt	r2, #1
   13904:	cmn	r3, #1
   13908:	movwgt	r1, #1
   1390c:	cmp	r5, r6
   13910:	bvs	13978 <putchar_unlocked@plt+0x2b14>
   13914:	ands	r1, r1, r2
   13918:	bne	13978 <putchar_unlocked@plt+0x2b14>
   1391c:	cmn	r4, #1
   13920:	ble	13940 <putchar_unlocked@plt+0x2adc>
   13924:	cmp	r4, #0
   13928:	beq	1398c <putchar_unlocked@plt+0x2b28>
   1392c:	cmn	r5, #1
   13930:	ble	13964 <putchar_unlocked@plt+0x2b00>
   13934:	mvn	r1, #-2147483648	; 0x80000000
   13938:	udiv	r1, r1, r4
   1393c:	b	13958 <putchar_unlocked@plt+0x2af4>
   13940:	cmn	r5, #1
   13944:	ble	1397c <putchar_unlocked@plt+0x2b18>
   13948:	cmn	r4, #1
   1394c:	beq	1398c <putchar_unlocked@plt+0x2b28>
   13950:	mov	r1, #-2147483648	; 0x80000000
   13954:	sdiv	r1, r1, r4
   13958:	cmp	r1, r5
   1395c:	bge	1398c <putchar_unlocked@plt+0x2b28>
   13960:	b	13978 <putchar_unlocked@plt+0x2b14>
   13964:	beq	1398c <putchar_unlocked@plt+0x2b28>
   13968:	mov	r1, #-2147483648	; 0x80000000
   1396c:	sdiv	r1, r1, r5
   13970:	cmp	r1, r4
   13974:	bge	1398c <putchar_unlocked@plt+0x2b28>
   13978:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   1397c:	mvn	r1, #-2147483648	; 0x80000000
   13980:	sdiv	r1, r1, r4
   13984:	cmp	r5, r1
   13988:	blt	13978 <putchar_unlocked@plt+0x2b14>
   1398c:	mul	r1, r5, r4
   13990:	bl	136fc <putchar_unlocked@plt+0x2898>
   13994:	str	r5, [r8]
   13998:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1399c:	push	{fp, lr}
   139a0:	mov	fp, sp
   139a4:	mov	r1, #1
   139a8:	bl	13b48 <putchar_unlocked@plt+0x2ce4>
   139ac:	cmp	r0, #0
   139b0:	popne	{fp, pc}
   139b4:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   139b8:	push	{fp, lr}
   139bc:	mov	fp, sp
   139c0:	bl	13b48 <putchar_unlocked@plt+0x2ce4>
   139c4:	cmp	r0, #0
   139c8:	popne	{fp, pc}
   139cc:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   139d0:	push	{fp, lr}
   139d4:	mov	fp, sp
   139d8:	mov	r1, #1
   139dc:	bl	13b48 <putchar_unlocked@plt+0x2ce4>
   139e0:	cmp	r0, #0
   139e4:	popne	{fp, pc}
   139e8:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   139ec:	push	{fp, lr}
   139f0:	mov	fp, sp
   139f4:	bl	13b48 <putchar_unlocked@plt+0x2ce4>
   139f8:	cmp	r0, #0
   139fc:	popne	{fp, pc}
   13a00:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13a04:	push	{r4, r5, r6, sl, fp, lr}
   13a08:	add	fp, sp, #16
   13a0c:	mov	r5, r0
   13a10:	mov	r0, r1
   13a14:	mov	r4, r1
   13a18:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   13a1c:	cmp	r0, #0
   13a20:	beq	13a3c <putchar_unlocked@plt+0x2bd8>
   13a24:	mov	r1, r5
   13a28:	mov	r2, r4
   13a2c:	mov	r6, r0
   13a30:	bl	10cb4 <memcpy@plt>
   13a34:	mov	r0, r6
   13a38:	pop	{r4, r5, r6, sl, fp, pc}
   13a3c:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13a40:	push	{r4, r5, r6, sl, fp, lr}
   13a44:	add	fp, sp, #16
   13a48:	mov	r5, r0
   13a4c:	mov	r0, r1
   13a50:	mov	r4, r1
   13a54:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   13a58:	cmp	r0, #0
   13a5c:	beq	13a78 <putchar_unlocked@plt+0x2c14>
   13a60:	mov	r1, r5
   13a64:	mov	r2, r4
   13a68:	mov	r6, r0
   13a6c:	bl	10cb4 <memcpy@plt>
   13a70:	mov	r0, r6
   13a74:	pop	{r4, r5, r6, sl, fp, pc}
   13a78:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13a7c:	push	{r4, r5, r6, sl, fp, lr}
   13a80:	add	fp, sp, #16
   13a84:	mov	r5, r0
   13a88:	add	r0, r1, #1
   13a8c:	mov	r4, r1
   13a90:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   13a94:	cmp	r0, #0
   13a98:	beq	13ac0 <putchar_unlocked@plt+0x2c5c>
   13a9c:	mov	r6, r0
   13aa0:	mov	r0, #0
   13aa4:	mov	r1, r5
   13aa8:	mov	r2, r4
   13aac:	strb	r0, [r6, r4]
   13ab0:	mov	r0, r6
   13ab4:	bl	10cb4 <memcpy@plt>
   13ab8:	mov	r0, r6
   13abc:	pop	{r4, r5, r6, sl, fp, pc}
   13ac0:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13ac4:	push	{r4, r5, r6, sl, fp, lr}
   13ac8:	add	fp, sp, #16
   13acc:	mov	r4, r0
   13ad0:	bl	10da4 <strlen@plt>
   13ad4:	add	r5, r0, #1
   13ad8:	mov	r0, r5
   13adc:	bl	13b9c <putchar_unlocked@plt+0x2d38>
   13ae0:	cmp	r0, #0
   13ae4:	beq	13b00 <putchar_unlocked@plt+0x2c9c>
   13ae8:	mov	r1, r4
   13aec:	mov	r2, r5
   13af0:	mov	r6, r0
   13af4:	bl	10cb4 <memcpy@plt>
   13af8:	mov	r0, r6
   13afc:	pop	{r4, r5, r6, sl, fp, pc}
   13b00:	bl	13b04 <putchar_unlocked@plt+0x2ca0>
   13b04:	push	{fp, lr}
   13b08:	mov	fp, sp
   13b0c:	movw	r0, #20684	; 0x50cc
   13b10:	movw	r1, #19080	; 0x4a88
   13b14:	mov	r2, #5
   13b18:	movt	r0, #2
   13b1c:	movt	r1, #1
   13b20:	ldr	r4, [r0]
   13b24:	mov	r0, #0
   13b28:	bl	10cd8 <dcgettext@plt>
   13b2c:	movw	r2, #18039	; 0x4677
   13b30:	mov	r3, r0
   13b34:	mov	r0, r4
   13b38:	mov	r1, #0
   13b3c:	movt	r2, #1
   13b40:	bl	10d44 <error@plt>
   13b44:	bl	10e58 <abort@plt>
   13b48:	clz	r2, r1
   13b4c:	clz	r3, r0
   13b50:	lsr	r2, r2, #5
   13b54:	lsr	r3, r3, #5
   13b58:	orrs	r2, r3, r2
   13b5c:	movwne	r1, #1
   13b60:	movwne	r0, #1
   13b64:	cmp	r1, #0
   13b68:	beq	13b98 <putchar_unlocked@plt+0x2d34>
   13b6c:	mvn	r2, #-2147483648	; 0x80000000
   13b70:	udiv	r2, r2, r1
   13b74:	cmp	r2, r0
   13b78:	bcs	13b98 <putchar_unlocked@plt+0x2d34>
   13b7c:	push	{fp, lr}
   13b80:	mov	fp, sp
   13b84:	bl	10db0 <__errno_location@plt>
   13b88:	mov	r1, #12
   13b8c:	str	r1, [r0]
   13b90:	mov	r0, #0
   13b94:	pop	{fp, pc}
   13b98:	b	10c6c <calloc@plt>
   13b9c:	cmp	r0, #0
   13ba0:	movweq	r0, #1
   13ba4:	cmn	r0, #1
   13ba8:	ble	13bb0 <putchar_unlocked@plt+0x2d4c>
   13bac:	b	10d50 <malloc@plt>
   13bb0:	push	{fp, lr}
   13bb4:	mov	fp, sp
   13bb8:	bl	10db0 <__errno_location@plt>
   13bbc:	mov	r1, #12
   13bc0:	str	r1, [r0]
   13bc4:	mov	r0, #0
   13bc8:	pop	{fp, pc}
   13bcc:	push	{fp, lr}
   13bd0:	mov	fp, sp
   13bd4:	cmp	r0, #0
   13bd8:	beq	13bf4 <putchar_unlocked@plt+0x2d90>
   13bdc:	cmp	r1, #0
   13be0:	beq	13c00 <putchar_unlocked@plt+0x2d9c>
   13be4:	cmn	r1, #1
   13be8:	ble	13c08 <putchar_unlocked@plt+0x2da4>
   13bec:	pop	{fp, lr}
   13bf0:	b	10ce4 <realloc@plt>
   13bf4:	mov	r0, r1
   13bf8:	pop	{fp, lr}
   13bfc:	b	13b9c <putchar_unlocked@plt+0x2d38>
   13c00:	bl	11694 <putchar_unlocked@plt+0x830>
   13c04:	b	13c14 <putchar_unlocked@plt+0x2db0>
   13c08:	bl	10db0 <__errno_location@plt>
   13c0c:	mov	r1, #12
   13c10:	str	r1, [r0]
   13c14:	mov	r0, #0
   13c18:	pop	{fp, pc}
   13c1c:	sub	r0, r0, #1
   13c20:	ldrb	r3, [r0, #1]!
   13c24:	cmp	r3, #47	; 0x2f
   13c28:	beq	13c20 <putchar_unlocked@plt+0x2dbc>
   13c2c:	mov	r2, #0
   13c30:	mov	r1, r0
   13c34:	uxtb	r3, r3
   13c38:	cmp	r3, #47	; 0x2f
   13c3c:	beq	13c58 <putchar_unlocked@plt+0x2df4>
   13c40:	cmp	r3, #0
   13c44:	bxeq	lr
   13c48:	tst	r2, #1
   13c4c:	mov	r2, #0
   13c50:	movne	r0, r1
   13c54:	b	13c5c <putchar_unlocked@plt+0x2df8>
   13c58:	mov	r2, #1
   13c5c:	ldrb	r3, [r1, #1]!
   13c60:	b	13c34 <putchar_unlocked@plt+0x2dd0>
   13c64:	push	{r4, sl, fp, lr}
   13c68:	add	fp, sp, #8
   13c6c:	mov	r4, r0
   13c70:	bl	10da4 <strlen@plt>
   13c74:	mov	r1, r0
   13c78:	sub	r2, r4, #1
   13c7c:	mov	r0, r1
   13c80:	cmp	r1, #2
   13c84:	popcc	{r4, sl, fp, pc}
   13c88:	ldrb	r3, [r2, r0]
   13c8c:	sub	r1, r0, #1
   13c90:	cmp	r3, #47	; 0x2f
   13c94:	beq	13c7c <putchar_unlocked@plt+0x2e18>
   13c98:	pop	{r4, sl, fp, pc}
   13c9c:	push	{r4, r5, r6, sl, fp, lr}
   13ca0:	add	fp, sp, #16
   13ca4:	mov	r4, r0
   13ca8:	bl	10d20 <__fpending@plt>
   13cac:	mov	r5, r0
   13cb0:	mov	r0, r4
   13cb4:	bl	10d2c <ferror_unlocked@plt>
   13cb8:	mov	r6, r0
   13cbc:	mov	r0, r4
   13cc0:	bl	13d1c <putchar_unlocked@plt+0x2eb8>
   13cc4:	cmp	r6, #0
   13cc8:	beq	13ce8 <putchar_unlocked@plt+0x2e84>
   13ccc:	mvn	r4, #0
   13cd0:	cmp	r0, #0
   13cd4:	bne	13d14 <putchar_unlocked@plt+0x2eb0>
   13cd8:	bl	10db0 <__errno_location@plt>
   13cdc:	mov	r1, #0
   13ce0:	str	r1, [r0]
   13ce4:	b	13d14 <putchar_unlocked@plt+0x2eb0>
   13ce8:	cmp	r0, #0
   13cec:	mov	r4, r0
   13cf0:	mvnne	r4, #0
   13cf4:	cmp	r5, #0
   13cf8:	bne	13d14 <putchar_unlocked@plt+0x2eb0>
   13cfc:	cmp	r0, #0
   13d00:	beq	13d14 <putchar_unlocked@plt+0x2eb0>
   13d04:	bl	10db0 <__errno_location@plt>
   13d08:	ldr	r0, [r0]
   13d0c:	subs	r4, r0, #9
   13d10:	mvnne	r4, #0
   13d14:	mov	r0, r4
   13d18:	pop	{r4, r5, r6, sl, fp, pc}
   13d1c:	push	{r4, r5, r6, sl, fp, lr}
   13d20:	add	fp, sp, #16
   13d24:	sub	sp, sp, #8
   13d28:	mov	r4, r0
   13d2c:	bl	10de0 <fileno@plt>
   13d30:	cmn	r0, #1
   13d34:	ble	13da8 <putchar_unlocked@plt+0x2f44>
   13d38:	mov	r0, r4
   13d3c:	bl	10d68 <__freading@plt>
   13d40:	cmp	r0, #0
   13d44:	beq	13d70 <putchar_unlocked@plt+0x2f0c>
   13d48:	mov	r0, r4
   13d4c:	bl	10de0 <fileno@plt>
   13d50:	mov	r1, #1
   13d54:	mov	r2, #0
   13d58:	mov	r3, #0
   13d5c:	str	r1, [sp]
   13d60:	bl	10d08 <lseek64@plt>
   13d64:	and	r0, r0, r1
   13d68:	cmn	r0, #1
   13d6c:	beq	13da8 <putchar_unlocked@plt+0x2f44>
   13d70:	mov	r0, r4
   13d74:	bl	13db8 <putchar_unlocked@plt+0x2f54>
   13d78:	cmp	r0, #0
   13d7c:	beq	13da8 <putchar_unlocked@plt+0x2f44>
   13d80:	bl	10db0 <__errno_location@plt>
   13d84:	ldr	r6, [r0]
   13d88:	mov	r5, r0
   13d8c:	mov	r0, r4
   13d90:	bl	10df8 <fclose@plt>
   13d94:	cmp	r6, #0
   13d98:	strne	r6, [r5]
   13d9c:	mvnne	r0, #0
   13da0:	sub	sp, fp, #16
   13da4:	pop	{r4, r5, r6, sl, fp, pc}
   13da8:	mov	r0, r4
   13dac:	sub	sp, fp, #16
   13db0:	pop	{r4, r5, r6, sl, fp, lr}
   13db4:	b	10df8 <fclose@plt>
   13db8:	push	{r4, sl, fp, lr}
   13dbc:	add	fp, sp, #8
   13dc0:	sub	sp, sp, #8
   13dc4:	mov	r4, r0
   13dc8:	cmp	r0, #0
   13dcc:	beq	13de8 <putchar_unlocked@plt+0x2f84>
   13dd0:	mov	r0, r4
   13dd4:	bl	10d68 <__freading@plt>
   13dd8:	cmp	r0, #0
   13ddc:	ldrbne	r0, [r4, #1]
   13de0:	tstne	r0, #1
   13de4:	bne	13df8 <putchar_unlocked@plt+0x2f94>
   13de8:	mov	r0, r4
   13dec:	sub	sp, fp, #8
   13df0:	pop	{r4, sl, fp, lr}
   13df4:	b	10c90 <fflush@plt>
   13df8:	mov	r0, #1
   13dfc:	mov	r2, #0
   13e00:	mov	r3, #0
   13e04:	str	r0, [sp]
   13e08:	mov	r0, r4
   13e0c:	bl	13e14 <putchar_unlocked@plt+0x2fb0>
   13e10:	b	13de8 <putchar_unlocked@plt+0x2f84>
   13e14:	push	{r4, r5, r6, r7, fp, lr}
   13e18:	add	fp, sp, #16
   13e1c:	sub	sp, sp, #8
   13e20:	mov	r4, r0
   13e24:	ldr	r0, [r0, #4]
   13e28:	mov	r5, r3
   13e2c:	mov	r6, r2
   13e30:	ldr	r1, [r4, #8]
   13e34:	cmp	r1, r0
   13e38:	bne	13e54 <putchar_unlocked@plt+0x2ff0>
   13e3c:	ldrd	r0, [r4, #16]
   13e40:	cmp	r1, r0
   13e44:	bne	13e54 <putchar_unlocked@plt+0x2ff0>
   13e48:	ldr	r0, [r4, #36]	; 0x24
   13e4c:	cmp	r0, #0
   13e50:	beq	13e6c <putchar_unlocked@plt+0x3008>
   13e54:	mov	r0, r4
   13e58:	mov	r2, r6
   13e5c:	mov	r3, r5
   13e60:	sub	sp, fp, #16
   13e64:	pop	{r4, r5, r6, r7, fp, lr}
   13e68:	b	10e04 <fseeko64@plt>
   13e6c:	ldr	r7, [fp, #8]
   13e70:	mov	r0, r4
   13e74:	bl	10de0 <fileno@plt>
   13e78:	mov	r2, r6
   13e7c:	mov	r3, r5
   13e80:	str	r7, [sp]
   13e84:	bl	10d08 <lseek64@plt>
   13e88:	and	r2, r0, r1
   13e8c:	cmn	r2, #1
   13e90:	beq	13eac <putchar_unlocked@plt+0x3048>
   13e94:	strd	r0, [r4, #80]	; 0x50
   13e98:	ldr	r0, [r4]
   13e9c:	bic	r0, r0, #16
   13ea0:	str	r0, [r4]
   13ea4:	mov	r0, #0
   13ea8:	b	13eb0 <putchar_unlocked@plt+0x304c>
   13eac:	mvn	r0, #0
   13eb0:	sub	sp, fp, #16
   13eb4:	pop	{r4, r5, r6, r7, fp, pc}
   13eb8:	push	{fp, lr}
   13ebc:	mov	fp, sp
   13ec0:	mov	r0, #14
   13ec4:	bl	10e28 <nl_langinfo@plt>
   13ec8:	movw	r1, #17333	; 0x43b5
   13ecc:	cmp	r0, #0
   13ed0:	movt	r1, #1
   13ed4:	movne	r1, r0
   13ed8:	movw	r0, #19097	; 0x4a99
   13edc:	ldrb	r2, [r1]
   13ee0:	movt	r0, #1
   13ee4:	cmp	r2, #0
   13ee8:	movne	r0, r1
   13eec:	pop	{fp, pc}
   13ef0:	push	{r4, r5, r6, r7, fp, lr}
   13ef4:	add	fp, sp, #16
   13ef8:	sub	sp, sp, #8
   13efc:	add	r5, sp, #4
   13f00:	cmp	r0, #0
   13f04:	mov	r7, r2
   13f08:	mov	r4, r1
   13f0c:	movne	r5, r0
   13f10:	mov	r0, r5
   13f14:	bl	10d38 <mbrtowc@plt>
   13f18:	mov	r6, r0
   13f1c:	cmp	r7, #0
   13f20:	beq	13f44 <putchar_unlocked@plt+0x30e0>
   13f24:	cmn	r6, #2
   13f28:	bcc	13f44 <putchar_unlocked@plt+0x30e0>
   13f2c:	mov	r0, #0
   13f30:	bl	13f8c <putchar_unlocked@plt+0x3128>
   13f34:	cmp	r0, #0
   13f38:	ldrbeq	r0, [r4]
   13f3c:	moveq	r6, #1
   13f40:	streq	r0, [r5]
   13f44:	mov	r0, r6
   13f48:	sub	sp, fp, #16
   13f4c:	pop	{r4, r5, r6, r7, fp, pc}
   13f50:	cmp	r2, #0
   13f54:	beq	13f84 <putchar_unlocked@plt+0x3120>
   13f58:	mvn	r3, #0
   13f5c:	udiv	r3, r3, r2
   13f60:	cmp	r3, r1
   13f64:	bcs	13f84 <putchar_unlocked@plt+0x3120>
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	bl	10db0 <__errno_location@plt>
   13f74:	mov	r1, #12
   13f78:	str	r1, [r0]
   13f7c:	mov	r0, #0
   13f80:	pop	{fp, pc}
   13f84:	mul	r1, r2, r1
   13f88:	b	13bcc <putchar_unlocked@plt+0x2d68>
   13f8c:	push	{r4, sl, fp, lr}
   13f90:	add	fp, sp, #8
   13f94:	sub	sp, sp, #264	; 0x108
   13f98:	add	r1, sp, #7
   13f9c:	movw	r2, #257	; 0x101
   13fa0:	bl	13ff0 <putchar_unlocked@plt+0x318c>
   13fa4:	mov	r4, #0
   13fa8:	cmp	r0, #0
   13fac:	bne	13fe4 <putchar_unlocked@plt+0x3180>
   13fb0:	movw	r1, #19103	; 0x4a9f
   13fb4:	add	r0, sp, #7
   13fb8:	movt	r1, #1
   13fbc:	bl	10c84 <strcmp@plt>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fe4 <putchar_unlocked@plt+0x3180>
   13fc8:	movw	r1, #19105	; 0x4aa1
   13fcc:	add	r0, sp, #7
   13fd0:	movt	r1, #1
   13fd4:	bl	10c84 <strcmp@plt>
   13fd8:	mov	r4, r0
   13fdc:	cmp	r0, #0
   13fe0:	movwne	r4, #1
   13fe4:	mov	r0, r4
   13fe8:	sub	sp, fp, #8
   13fec:	pop	{r4, sl, fp, pc}
   13ff0:	push	{r4, r5, r6, r7, fp, lr}
   13ff4:	add	fp, sp, #16
   13ff8:	mov	r4, r1
   13ffc:	mov	r1, #0
   14000:	mov	r6, r2
   14004:	bl	10e10 <setlocale@plt>
   14008:	cmp	r0, #0
   1400c:	beq	14038 <putchar_unlocked@plt+0x31d4>
   14010:	mov	r7, r0
   14014:	bl	10da4 <strlen@plt>
   14018:	cmp	r0, r6
   1401c:	bcs	1404c <putchar_unlocked@plt+0x31e8>
   14020:	add	r2, r0, #1
   14024:	mov	r0, r4
   14028:	mov	r1, r7
   1402c:	bl	10cb4 <memcpy@plt>
   14030:	mov	r5, #0
   14034:	b	14074 <putchar_unlocked@plt+0x3210>
   14038:	cmp	r6, #0
   1403c:	mov	r5, #22
   14040:	movne	r0, #0
   14044:	strbne	r0, [r4]
   14048:	b	14074 <putchar_unlocked@plt+0x3210>
   1404c:	mov	r5, #34	; 0x22
   14050:	cmp	r6, #0
   14054:	beq	14074 <putchar_unlocked@plt+0x3210>
   14058:	sub	r6, r6, #1
   1405c:	mov	r0, r4
   14060:	mov	r1, r7
   14064:	mov	r2, r6
   14068:	bl	10cb4 <memcpy@plt>
   1406c:	mov	r0, #0
   14070:	strb	r0, [r4, r6]
   14074:	mov	r0, r5
   14078:	pop	{r4, r5, r6, r7, fp, pc}
   1407c:	mov	r1, #0
   14080:	b	10e10 <setlocale@plt>
   14084:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14088:	mov	r7, r0
   1408c:	ldr	r6, [pc, #72]	; 140dc <putchar_unlocked@plt+0x3278>
   14090:	ldr	r5, [pc, #72]	; 140e0 <putchar_unlocked@plt+0x327c>
   14094:	add	r6, pc, r6
   14098:	add	r5, pc, r5
   1409c:	sub	r6, r6, r5
   140a0:	mov	r8, r1
   140a4:	mov	r9, r2
   140a8:	bl	10c4c <calloc@plt-0x20>
   140ac:	asrs	r6, r6, #2
   140b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   140b4:	mov	r4, #0
   140b8:	add	r4, r4, #1
   140bc:	ldr	r3, [r5], #4
   140c0:	mov	r2, r9
   140c4:	mov	r1, r8
   140c8:	mov	r0, r7
   140cc:	blx	r3
   140d0:	cmp	r6, r4
   140d4:	bne	140b8 <putchar_unlocked@plt+0x3254>
   140d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140dc:	andeq	r0, r1, r0, ror lr
   140e0:	andeq	r0, r1, r8, ror #28
   140e4:	bx	lr
   140e8:	ldr	r3, [pc, #12]	; 140fc <putchar_unlocked@plt+0x3298>
   140ec:	mov	r1, #0
   140f0:	add	r3, pc, r3
   140f4:	ldr	r2, [r3]
   140f8:	b	10dbc <__cxa_atexit@plt>
   140fc:	andeq	r0, r1, ip, asr #31

Disassembly of section .fini:

00014100 <.fini>:
   14100:	push	{r3, lr}
   14104:	pop	{r3, pc}
