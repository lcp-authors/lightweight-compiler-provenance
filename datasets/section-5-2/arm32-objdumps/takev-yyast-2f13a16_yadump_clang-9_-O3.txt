
../repos/takev-yyast-2f13a16/yyast/yadump:     file format elf32-littlearm


Disassembly of section .init:

00010540 <.init>:
   10540:	push	{r3, lr}
   10544:	bl	10650 <close@plt+0x48>
   10548:	pop	{r3, pc}

Disassembly of section .plt:

0001054c <free@plt-0x14>:
   1054c:	push	{lr}		; (str lr, [sp, #-4]!)
   10550:	ldr	lr, [pc, #4]	; 1055c <free@plt-0x4>
   10554:	add	lr, pc, lr
   10558:	ldr	pc, [lr, #8]!
   1055c:	andeq	r0, r1, r4, lsr #21

00010560 <free@plt>:
   10560:	add	ip, pc, #0, 12
   10564:	add	ip, ip, #16, 20	; 0x10000
   10568:	ldr	pc, [ip, #2724]!	; 0xaa4

0001056c <strndup@plt>:
   1056c:	add	ip, pc, #0, 12
   10570:	add	ip, ip, #16, 20	; 0x10000
   10574:	ldr	pc, [ip, #2716]!	; 0xa9c

00010578 <perror@plt>:
   10578:	add	ip, pc, #0, 12
   1057c:	add	ip, ip, #16, 20	; 0x10000
   10580:	ldr	pc, [ip, #2708]!	; 0xa94

00010584 <fwrite@plt>:
   10584:	add	ip, pc, #0, 12
   10588:	add	ip, ip, #16, 20	; 0x10000
   1058c:	ldr	pc, [ip, #2700]!	; 0xa8c

00010590 <__libc_start_main@plt>:
   10590:	add	ip, pc, #0, 12
   10594:	add	ip, ip, #16, 20	; 0x10000
   10598:	ldr	pc, [ip, #2692]!	; 0xa84

0001059c <__fxstat@plt>:
   1059c:	add	ip, pc, #0, 12
   105a0:	add	ip, ip, #16, 20	; 0x10000
   105a4:	ldr	pc, [ip, #2684]!	; 0xa7c

000105a8 <__gmon_start__@plt>:
   105a8:	add	ip, pc, #0, 12
   105ac:	add	ip, ip, #16, 20	; 0x10000
   105b0:	ldr	pc, [ip, #2676]!	; 0xa74

000105b4 <open@plt>:
   105b4:	add	ip, pc, #0, 12
   105b8:	add	ip, ip, #16, 20	; 0x10000
   105bc:	ldr	pc, [ip, #2668]!	; 0xa6c

000105c0 <exit@plt>:
   105c0:	add	ip, pc, #0, 12
   105c4:	add	ip, ip, #16, 20	; 0x10000
   105c8:	ldr	pc, [ip, #2660]!	; 0xa64

000105cc <mmap@plt>:
   105cc:	add	ip, pc, #0, 12
   105d0:	add	ip, ip, #16, 20	; 0x10000
   105d4:	ldr	pc, [ip, #2652]!	; 0xa5c

000105d8 <fprintf@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #16, 20	; 0x10000
   105e0:	ldr	pc, [ip, #2644]!	; 0xa54

000105e4 <munmap@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2636]!	; 0xa4c

000105f0 <fputc@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2628]!	; 0xa44

000105fc <abort@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2620]!	; 0xa3c

00010608 <close@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2612]!	; 0xa34

Disassembly of section .text:

00010614 <.text>:
   10614:	mov	fp, #0
   10618:	mov	lr, #0
   1061c:	pop	{r1}		; (ldr r1, [sp], #4)
   10620:	mov	r2, sp
   10624:	push	{r2}		; (str r2, [sp, #-4]!)
   10628:	push	{r0}		; (str r0, [sp, #-4]!)
   1062c:	ldr	ip, [pc, #16]	; 10644 <close@plt+0x3c>
   10630:	push	{ip}		; (str ip, [sp, #-4]!)
   10634:	ldr	r0, [pc, #12]	; 10648 <close@plt+0x40>
   10638:	ldr	r3, [pc, #12]	; 1064c <close@plt+0x44>
   1063c:	bl	10590 <__libc_start_main@plt>
   10640:	bl	105fc <abort@plt>
   10644:	muleq	r1, r8, ip
   10648:	andeq	r0, r1, r0, lsl #22
   1064c:	andeq	r0, r1, r8, lsr ip
   10650:	ldr	r3, [pc, #20]	; 1066c <close@plt+0x64>
   10654:	ldr	r2, [pc, #20]	; 10670 <close@plt+0x68>
   10658:	add	r3, pc, r3
   1065c:	ldr	r2, [r3, r2]
   10660:	cmp	r2, #0
   10664:	bxeq	lr
   10668:	b	105a8 <__gmon_start__@plt>
   1066c:	andeq	r0, r1, r0, lsr #19
   10670:	andeq	r0, r0, r8, asr #32
   10674:	ldr	r0, [pc, #24]	; 10694 <close@plt+0x8c>
   10678:	ldr	r3, [pc, #24]	; 10698 <close@plt+0x90>
   1067c:	cmp	r3, r0
   10680:	bxeq	lr
   10684:	ldr	r3, [pc, #16]	; 1069c <close@plt+0x94>
   10688:	cmp	r3, #0
   1068c:	bxeq	lr
   10690:	bx	r3
   10694:	andeq	r1, r2, r4, asr r0
   10698:	andeq	r1, r2, r4, asr r0
   1069c:	andeq	r0, r0, r0
   106a0:	ldr	r0, [pc, #36]	; 106cc <close@plt+0xc4>
   106a4:	ldr	r1, [pc, #36]	; 106d0 <close@plt+0xc8>
   106a8:	sub	r1, r1, r0
   106ac:	asr	r1, r1, #2
   106b0:	add	r1, r1, r1, lsr #31
   106b4:	asrs	r1, r1, #1
   106b8:	bxeq	lr
   106bc:	ldr	r3, [pc, #16]	; 106d4 <close@plt+0xcc>
   106c0:	cmp	r3, #0
   106c4:	bxeq	lr
   106c8:	bx	r3
   106cc:	andeq	r1, r2, r4, asr r0
   106d0:	andeq	r1, r2, r4, asr r0
   106d4:	andeq	r0, r0, r0
   106d8:	push	{r4, lr}
   106dc:	ldr	r4, [pc, #24]	; 106fc <close@plt+0xf4>
   106e0:	ldrb	r3, [r4]
   106e4:	cmp	r3, #0
   106e8:	popne	{r4, pc}
   106ec:	bl	10674 <close@plt+0x6c>
   106f0:	mov	r3, #1
   106f4:	strb	r3, [r4]
   106f8:	pop	{r4, pc}
   106fc:	andeq	r1, r2, r0, rrx
   10700:	b	106a0 <close@plt+0x98>
   10704:	push	{r4, r5, r6, sl, fp, lr}
   10708:	add	fp, sp, #16
   1070c:	cmp	r0, #0
   10710:	beq	10744 <close@plt+0x13c>
   10714:	movw	r6, #4188	; 0x105c
   10718:	movw	r5, #3380	; 0xd34
   1071c:	mov	r4, r0
   10720:	movt	r6, #2
   10724:	movt	r5, #1
   10728:	ldr	r3, [r6]
   1072c:	mov	r0, r5
   10730:	mov	r1, #2
   10734:	mov	r2, #1
   10738:	bl	10584 <fwrite@plt>
   1073c:	subs	r4, r4, #1
   10740:	bne	10728 <close@plt+0x120>
   10744:	pop	{r4, r5, r6, sl, fp, pc}
   10748:	push	{fp, lr}
   1074c:	mov	fp, sp
   10750:	sub	sp, sp, #24
   10754:	movw	r2, #4188	; 0x105c
   10758:	movt	r2, #2
   1075c:	ldr	ip, [r2]
   10760:	uxtb	r2, r0
   10764:	str	r2, [sp, #20]
   10768:	ubfx	r2, r0, #8, #8
   1076c:	str	r2, [sp, #16]
   10770:	ubfx	r2, r0, #16, #8
   10774:	lsr	r0, r0, #24
   10778:	str	r0, [sp, #8]
   1077c:	uxtb	r0, r1
   10780:	str	r2, [sp, #12]
   10784:	lsr	r2, r1, #24
   10788:	str	r0, [sp, #4]
   1078c:	ubfx	r0, r1, #8, #8
   10790:	str	r0, [sp]
   10794:	ubfx	r3, r1, #16, #8
   10798:	movw	r1, #3240	; 0xca8
   1079c:	mov	r0, ip
   107a0:	movt	r1, #1
   107a4:	bl	105d8 <fprintf@plt>
   107a8:	mov	sp, fp
   107ac:	pop	{fp, pc}
   107b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107b4:	add	fp, sp, #28
   107b8:	sub	sp, sp, #36	; 0x24
   107bc:	cmp	r1, #31
   107c0:	bls	10aa8 <close@plt+0x4a0>
   107c4:	mov	sl, r2
   107c8:	add	r2, r0, #8
   107cc:	mov	r5, r0
   107d0:	ldr	r0, [r2, #4]
   107d4:	rev	r0, r0
   107d8:	sub	r4, r0, #32
   107dc:	cmp	r4, r1
   107e0:	bhi	10ad0 <close@plt+0x4c8>
   107e4:	ldrb	r0, [r5, #31]
   107e8:	movw	r6, #4188	; 0x105c
   107ec:	movt	r6, #2
   107f0:	ldr	r7, [r6]
   107f4:	str	r0, [sp, #28]
   107f8:	ldr	r0, [r5, #24]
   107fc:	ldrd	r8, [r5]
   10800:	str	r2, [sp, #32]
   10804:	cmn	r0, #1
   10808:	beq	10834 <close@plt+0x22c>
   1080c:	ldrd	r2, [r5, #16]
   10810:	rev	r1, r3
   10814:	rev	r3, r2
   10818:	rev	r2, r0
   1081c:	mov	r0, r7
   10820:	str	r1, [sp]
   10824:	movw	r1, #3356	; 0xd1c
   10828:	movt	r1, #1
   1082c:	bl	105d8 <fprintf@plt>
   10830:	b	1084c <close@plt+0x244>
   10834:	movw	r0, #3371	; 0xd2b
   10838:	mov	r1, #11
   1083c:	mov	r2, #1
   10840:	mov	r3, r7
   10844:	movt	r0, #1
   10848:	bl	10584 <fwrite@plt>
   1084c:	ldr	r0, [r6]
   10850:	movw	r1, #3383	; 0xd37
   10854:	mov	r2, r4
   10858:	mov	r3, #0
   1085c:	rev	r8, r8
   10860:	rev	r9, r9
   10864:	movt	r1, #1
   10868:	bl	105d8 <fprintf@plt>
   1086c:	cmp	sl, #0
   10870:	str	sl, [sp, #24]
   10874:	beq	108a0 <close@plt+0x298>
   10878:	ldr	sl, [sp, #24]
   1087c:	movw	r7, #3380	; 0xd34
   10880:	movt	r7, #1
   10884:	ldr	r3, [r6]
   10888:	mov	r0, r7
   1088c:	mov	r1, #2
   10890:	mov	r2, #1
   10894:	bl	10584 <fwrite@plt>
   10898:	subs	sl, sl, #1
   1089c:	bne	10884 <close@plt+0x27c>
   108a0:	ldr	r1, [r6]
   108a4:	mov	r0, #32
   108a8:	bl	105f0 <fputc@plt>
   108ac:	uxtb	r1, r9
   108b0:	ldr	r0, [r6]
   108b4:	lsr	r2, r8, #24
   108b8:	str	r1, [sp, #20]
   108bc:	ubfx	r1, r9, #8, #8
   108c0:	str	r1, [sp, #16]
   108c4:	ubfx	r1, r9, #16, #8
   108c8:	str	r1, [sp, #12]
   108cc:	lsr	r1, r9, #24
   108d0:	str	r1, [sp, #8]
   108d4:	uxtb	r1, r8
   108d8:	str	r1, [sp, #4]
   108dc:	ubfx	r1, r8, #8, #8
   108e0:	str	r1, [sp]
   108e4:	movw	r1, #3240	; 0xca8
   108e8:	ubfx	r3, r8, #16, #8
   108ec:	movt	r1, #1
   108f0:	bl	105d8 <fprintf@plt>
   108f4:	ldr	r1, [sp, #28]
   108f8:	cmp	r1, #6
   108fc:	bhi	10a6c <close@plt+0x464>
   10900:	add	r0, pc, #0
   10904:	ldr	pc, [r0, r1, lsl #2]
   10908:	andeq	r0, r1, r4, lsr #18
   1090c:	andeq	r0, r1, ip, ror #20
   10910:	andeq	r0, r1, r8, lsr r9
   10914:	andeq	r0, r1, ip, lsr #19
   10918:	andeq	r0, r1, r0, lsl #19
   1091c:	ldrdeq	r0, [r1], -ip
   10920:	andeq	r0, r1, r8, lsl #20
   10924:	ldr	r3, [r6]
   10928:	movw	r0, #3442	; 0xd72
   1092c:	mov	r1, #6
   10930:	movt	r0, #1
   10934:	b	10a84 <close@plt+0x47c>
   10938:	ldr	r1, [r6]
   1093c:	mov	r0, #10
   10940:	bl	105f0 <fputc@plt>
   10944:	ldr	r8, [sp, #32]
   10948:	cmp	r4, #0
   1094c:	beq	10a90 <close@plt+0x488>
   10950:	ldr	r0, [sp, #24]
   10954:	add	r5, r5, #32
   10958:	mov	r7, #0
   1095c:	add	r6, r0, #1
   10960:	add	r0, r5, r7
   10964:	sub	r1, r4, r7
   10968:	mov	r2, r6
   1096c:	bl	107b0 <close@plt+0x1a8>
   10970:	add	r7, r0, r7
   10974:	cmp	r4, r7
   10978:	bhi	10960 <close@plt+0x358>
   1097c:	b	10a90 <close@plt+0x488>
   10980:	ldr	r8, [sp, #32]
   10984:	cmp	r4, #8
   10988:	bne	10a34 <close@plt+0x42c>
   1098c:	ldrd	r4, [r8, #24]
   10990:	ldr	r0, [r6]
   10994:	movw	r1, #3392	; 0xd40
   10998:	movt	r1, #1
   1099c:	rev	r2, r5
   109a0:	rev	r3, r4
   109a4:	bl	105d8 <fprintf@plt>
   109a8:	b	10a90 <close@plt+0x488>
   109ac:	add	r0, r5, #32
   109b0:	mov	r1, r4
   109b4:	bl	1056c <strndup@plt>
   109b8:	mov	r4, r0
   109bc:	ldr	r0, [r6]
   109c0:	movw	r1, #3435	; 0xd6b
   109c4:	movt	r1, #1
   109c8:	mov	r2, r4
   109cc:	bl	105d8 <fprintf@plt>
   109d0:	mov	r0, r4
   109d4:	bl	10560 <free@plt>
   109d8:	b	10a8c <close@plt+0x484>
   109dc:	ldr	r8, [sp, #32]
   109e0:	cmp	r4, #8
   109e4:	bne	10a44 <close@plt+0x43c>
   109e8:	ldrd	r4, [r8, #24]
   109ec:	ldr	r0, [r6]
   109f0:	movw	r1, #3407	; 0xd4f
   109f4:	movt	r1, #1
   109f8:	rev	r2, r5
   109fc:	rev	r3, r4
   10a00:	bl	105d8 <fprintf@plt>
   10a04:	b	10a90 <close@plt+0x488>
   10a08:	ldr	r8, [sp, #32]
   10a0c:	cmp	r4, #8
   10a10:	bne	10a54 <close@plt+0x44c>
   10a14:	ldrd	r4, [r8, #24]
   10a18:	ldr	r0, [r6]
   10a1c:	movw	r1, #3422	; 0xd5e
   10a20:	movt	r1, #1
   10a24:	rev	r2, r5
   10a28:	rev	r3, r4
   10a2c:	bl	105d8 <fprintf@plt>
   10a30:	b	10a90 <close@plt+0x488>
   10a34:	ldr	r0, [r6]
   10a38:	movw	r1, #3400	; 0xd48
   10a3c:	movt	r1, #1
   10a40:	b	10a60 <close@plt+0x458>
   10a44:	ldr	r0, [r6]
   10a48:	movw	r1, #3415	; 0xd57
   10a4c:	movt	r1, #1
   10a50:	b	10a60 <close@plt+0x458>
   10a54:	ldr	r0, [r6]
   10a58:	movw	r1, #3428	; 0xd64
   10a5c:	movt	r1, #1
   10a60:	mov	r2, r4
   10a64:	bl	105d8 <fprintf@plt>
   10a68:	b	10a90 <close@plt+0x488>
   10a6c:	movw	r0, #4184	; 0x1058
   10a70:	mov	r1, #11
   10a74:	movt	r0, #2
   10a78:	ldr	r3, [r0]
   10a7c:	movw	r0, #3449	; 0xd79
   10a80:	movt	r0, #1
   10a84:	mov	r2, #1
   10a88:	bl	10584 <fwrite@plt>
   10a8c:	ldr	r8, [sp, #32]
   10a90:	ldr	r0, [r8, #4]
   10a94:	rev	r0, r0
   10a98:	add	r0, r0, #7
   10a9c:	bic	r0, r0, #7
   10aa0:	sub	sp, fp, #28
   10aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10aa8:	movw	r0, #4188	; 0x105c
   10aac:	mov	r1, #39	; 0x27
   10ab0:	mov	r2, #1
   10ab4:	movt	r0, #2
   10ab8:	ldr	r3, [r0]
   10abc:	movw	r0, #3259	; 0xcbb
   10ac0:	movt	r0, #1
   10ac4:	bl	10584 <fwrite@plt>
   10ac8:	mov	r0, #1
   10acc:	bl	105c0 <exit@plt>
   10ad0:	movw	r0, #4188	; 0x105c
   10ad4:	mov	r2, #0
   10ad8:	stm	sp, {r1, r2}
   10adc:	movw	r1, #3299	; 0xce3
   10ae0:	mov	r2, r4
   10ae4:	mov	r3, #0
   10ae8:	movt	r0, #2
   10aec:	movt	r1, #1
   10af0:	ldr	r0, [r0]
   10af4:	bl	105d8 <fprintf@plt>
   10af8:	mov	r0, #1
   10afc:	bl	105c0 <exit@plt>
   10b00:	push	{r4, r5, r6, sl, fp, lr}
   10b04:	add	fp, sp, #16
   10b08:	sub	sp, sp, #96	; 0x60
   10b0c:	cmp	r0, #2
   10b10:	bne	10bc0 <close@plt+0x5b8>
   10b14:	ldr	r0, [r1, #4]
   10b18:	mov	r1, #0
   10b1c:	bl	105b4 <open@plt>
   10b20:	cmn	r0, #1
   10b24:	beq	10be8 <close@plt+0x5e0>
   10b28:	mov	r4, r0
   10b2c:	add	r2, sp, #8
   10b30:	mov	r0, #3
   10b34:	mov	r1, r4
   10b38:	bl	1059c <__fxstat@plt>
   10b3c:	cmn	r0, #1
   10b40:	beq	10bfc <close@plt+0x5f4>
   10b44:	ldr	r5, [sp, #52]	; 0x34
   10b48:	mov	r0, #0
   10b4c:	mov	r2, #1
   10b50:	mov	r3, #1
   10b54:	str	r4, [sp]
   10b58:	str	r0, [sp, #4]
   10b5c:	mov	r0, #0
   10b60:	mov	r1, r5
   10b64:	bl	105cc <mmap@plt>
   10b68:	cmn	r0, #1
   10b6c:	beq	10c10 <close@plt+0x608>
   10b70:	mov	r1, r5
   10b74:	mov	r2, #0
   10b78:	mov	r6, r0
   10b7c:	bl	107b0 <close@plt+0x1a8>
   10b80:	mov	r0, r6
   10b84:	mov	r1, r5
   10b88:	bl	105e4 <munmap@plt>
   10b8c:	cmn	r0, #1
   10b90:	beq	10c24 <close@plt+0x61c>
   10b94:	mov	r0, r4
   10b98:	bl	10608 <close@plt>
   10b9c:	cmn	r0, #1
   10ba0:	movne	r0, #0
   10ba4:	subne	sp, fp, #16
   10ba8:	popne	{r4, r5, r6, sl, fp, pc}
   10bac:	movw	r0, #3611	; 0xe1b
   10bb0:	movt	r0, #1
   10bb4:	bl	10578 <perror@plt>
   10bb8:	mov	r0, #1
   10bbc:	bl	105c0 <exit@plt>
   10bc0:	movw	r0, #4184	; 0x1058
   10bc4:	mov	r1, #31
   10bc8:	mov	r2, #1
   10bcc:	movt	r0, #2
   10bd0:	ldr	r3, [r0]
   10bd4:	movw	r0, #3461	; 0xd85
   10bd8:	movt	r0, #1
   10bdc:	bl	10584 <fwrite@plt>
   10be0:	mov	r0, #1
   10be4:	bl	105c0 <exit@plt>
   10be8:	movw	r0, #3493	; 0xda5
   10bec:	movt	r0, #1
   10bf0:	bl	10578 <perror@plt>
   10bf4:	mov	r0, #1
   10bf8:	bl	105c0 <exit@plt>
   10bfc:	movw	r0, #3514	; 0xdba
   10c00:	movt	r0, #1
   10c04:	bl	10578 <perror@plt>
   10c08:	mov	r0, #1
   10c0c:	bl	105c0 <exit@plt>
   10c10:	movw	r0, #3539	; 0xdd3
   10c14:	movt	r0, #1
   10c18:	bl	10578 <perror@plt>
   10c1c:	mov	r0, #1
   10c20:	bl	105c0 <exit@plt>
   10c24:	movw	r0, #3573	; 0xdf5
   10c28:	movt	r0, #1
   10c2c:	bl	10578 <perror@plt>
   10c30:	mov	r0, #1
   10c34:	bl	105c0 <exit@plt>
   10c38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c3c:	mov	r7, r0
   10c40:	ldr	r6, [pc, #72]	; 10c90 <close@plt+0x688>
   10c44:	ldr	r5, [pc, #72]	; 10c94 <close@plt+0x68c>
   10c48:	add	r6, pc, r6
   10c4c:	add	r5, pc, r5
   10c50:	sub	r6, r6, r5
   10c54:	mov	r8, r1
   10c58:	mov	r9, r2
   10c5c:	bl	10540 <free@plt-0x20>
   10c60:	asrs	r6, r6, #2
   10c64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c68:	mov	r4, #0
   10c6c:	add	r4, r4, #1
   10c70:	ldr	r3, [r5], #4
   10c74:	mov	r2, r9
   10c78:	mov	r1, r8
   10c7c:	mov	r0, r7
   10c80:	blx	r3
   10c84:	cmp	r6, r4
   10c88:	bne	10c6c <close@plt+0x664>
   10c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c90:			; <UNDEFINED> instruction: 0x000102bc
   10c94:			; <UNDEFINED> instruction: 0x000102b4
   10c98:	bx	lr

Disassembly of section .fini:

00010c9c <.fini>:
   10c9c:	push	{r3, lr}
   10ca0:	pop	{r3, pc}
