
../repos/charybdis/extensions/.libs/example_module.so:     file format elf32-littlearm


Disassembly of section .init:

00000468 <_init>:
 468:	push	{r3, lr}
 46c:	bl	4c4 <call_weak_fn>
 470:	pop	{r3, pc}

Disassembly of section .plt:

00000474 <.plt>:
 474:	push	{lr}		; (str lr, [sp, #-4]!)
 478:	ldr	lr, [pc, #4]	; 484 <.plt+0x10>
 47c:	add	lr, pc, lr
 480:	ldr	pc, [lr, #8]!
 484:	.word	0x00010b7c

00000488 <__cxa_finalize@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2940]!	; 0xb7c

00000494 <sendto_realops_snomask@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2932]!	; 0xb74

000004a0 <__gmon_start__@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2924]!	; 0xb6c

000004ac <sendto_one_notice@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2916]!	; 0xb64

000004b8 <call_hook@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2908]!	; 0xb5c

Disassembly of section .text:

000004c4 <call_weak_fn>:
 4c4:	ldr	r3, [pc, #20]	; 4e0 <call_weak_fn+0x1c>
 4c8:	ldr	r2, [pc, #20]	; 4e4 <call_weak_fn+0x20>
 4cc:	add	r3, pc, r3
 4d0:	ldr	r2, [r3, r2]
 4d4:	cmp	r2, #0
 4d8:	bxeq	lr
 4dc:	b	4a0 <__gmon_start__@plt>
 4e0:	.word	0x00010b2c
 4e4:	.word	0x0000002c

000004e8 <deregister_tm_clones>:
 4e8:	ldr	r0, [pc, #44]	; 51c <deregister_tm_clones+0x34>
 4ec:	ldr	r3, [pc, #44]	; 520 <deregister_tm_clones+0x38>
 4f0:	add	r0, pc, r0
 4f4:	add	r3, pc, r3
 4f8:	cmp	r3, r0
 4fc:	ldr	r3, [pc, #32]	; 524 <deregister_tm_clones+0x3c>
 500:	add	r3, pc, r3
 504:	bxeq	lr
 508:	ldr	r2, [pc, #24]	; 528 <deregister_tm_clones+0x40>
 50c:	ldr	r3, [r3, r2]
 510:	cmp	r3, #0
 514:	bxeq	lr
 518:	bx	r3
 51c:	.word	0x00010c0c
 520:	.word	0x00010c08
 524:	.word	0x00010af8
 528:	.word	0x00000028

0000052c <register_tm_clones>:
 52c:	ldr	r0, [pc, #56]	; 56c <register_tm_clones+0x40>
 530:	ldr	r3, [pc, #56]	; 570 <register_tm_clones+0x44>
 534:	add	r0, pc, r0
 538:	add	r3, pc, r3
 53c:	sub	r1, r3, r0
 540:	ldr	r3, [pc, #44]	; 574 <register_tm_clones+0x48>
 544:	asr	r1, r1, #2
 548:	add	r3, pc, r3
 54c:	add	r1, r1, r1, lsr #31
 550:	asrs	r1, r1, #1
 554:	bxeq	lr
 558:	ldr	r2, [pc, #24]	; 578 <register_tm_clones+0x4c>
 55c:	ldr	r3, [r3, r2]
 560:	cmp	r3, #0
 564:	bxeq	lr
 568:	bx	r3
 56c:	.word	0x00010bc8
 570:	.word	0x00010bc4
 574:	.word	0x00010ab0
 578:	.word	0x00000030

0000057c <__do_global_dtors_aux>:
 57c:	ldr	r3, [pc, #76]	; 5d0 <__do_global_dtors_aux+0x54>
 580:	ldr	r2, [pc, #76]	; 5d4 <__do_global_dtors_aux+0x58>
 584:	add	r3, pc, r3
 588:	add	r2, pc, r2
 58c:	ldrb	r3, [r3]
 590:	cmp	r3, #0
 594:	bxne	lr
 598:	ldr	r3, [pc, #56]	; 5d8 <__do_global_dtors_aux+0x5c>
 59c:	push	{r4, lr}
 5a0:	ldr	r3, [r2, r3]
 5a4:	cmp	r3, #0
 5a8:	beq	5b8 <__do_global_dtors_aux+0x3c>
 5ac:	ldr	r3, [pc, #40]	; 5dc <__do_global_dtors_aux+0x60>
 5b0:	ldr	r0, [pc, r3]
 5b4:	bl	488 <__cxa_finalize@plt>
 5b8:	bl	4e8 <deregister_tm_clones>
 5bc:	ldr	r3, [pc, #28]	; 5e0 <__do_global_dtors_aux+0x64>
 5c0:	mov	r2, #1
 5c4:	add	r3, pc, r3
 5c8:	strb	r2, [r3]
 5cc:	pop	{r4, pc}
 5d0:	.word	0x00010b78
 5d4:	.word	0x00010a70
 5d8:	.word	0x00000024
 5dc:	.word	0x00010a7c
 5e0:	.word	0x00010b38

000005e4 <frame_dummy>:
 5e4:	b	52c <register_tm_clones>

000005e8 <modinit>:
 5e8:	push	{fp}		; (str fp, [sp, #-4]!)
 5ec:	add	fp, sp, #0
 5f0:	mov	r3, #0
 5f4:	mov	r0, r3
 5f8:	add	sp, fp, #0
 5fc:	pop	{fp}		; (ldr fp, [sp], #4)
 600:	bx	lr

00000604 <moddeinit>:
 604:	push	{fp}		; (str fp, [sp, #-4]!)
 608:	add	fp, sp, #0
 60c:	nop	{0}
 610:	add	sp, fp, #0
 614:	pop	{fp}		; (ldr fp, [sp], #4)
 618:	bx	lr

0000061c <munreg_test>:
 61c:	str	r4, [sp, #-12]!
 620:	str	fp, [sp, #4]
 624:	str	lr, [sp, #8]
 628:	add	fp, sp, #8
 62c:	sub	sp, sp, #20
 630:	str	r0, [fp, #-16]
 634:	str	r1, [fp, #-20]	; 0xffffffec
 638:	str	r2, [fp, #-24]	; 0xffffffe8
 63c:	str	r3, [fp, #-28]	; 0xffffffe4
 640:	ldr	r4, [pc, #120]	; 6c0 <munreg_test+0xa4>
 644:	add	r4, pc, r4
 648:	ldr	r3, [fp, #-28]	; 0xffffffe4
 64c:	cmp	r3, #1
 650:	bgt	66c <munreg_test+0x50>
 654:	ldr	r3, [pc, #104]	; 6c4 <munreg_test+0xa8>
 658:	add	r3, pc, r3
 65c:	mov	r1, r3
 660:	ldr	r0, [fp, #-24]	; 0xffffffe8
 664:	bl	4ac <sendto_one_notice@plt>
 668:	b	690 <munreg_test+0x74>
 66c:	ldr	r3, [fp, #4]
 670:	add	r3, r3, #4
 674:	ldr	r3, [r3]
 678:	mov	r2, r3
 67c:	ldr	r3, [pc, #68]	; 6c8 <munreg_test+0xac>
 680:	add	r3, pc, r3
 684:	mov	r1, r3
 688:	ldr	r0, [fp, #-24]	; 0xffffffe8
 68c:	bl	4ac <sendto_one_notice@plt>
 690:	ldr	r3, [pc, #52]	; 6cc <munreg_test+0xb0>
 694:	ldr	r3, [r4, r3]
 698:	ldr	r3, [r3]
 69c:	mov	r1, #0
 6a0:	mov	r0, r3
 6a4:	bl	4b8 <call_hook@plt>
 6a8:	nop	{0}
 6ac:	sub	sp, fp, #8
 6b0:	ldr	r4, [sp]
 6b4:	ldr	fp, [sp, #4]
 6b8:	add	sp, sp, #8
 6bc:	pop	{pc}		; (ldr pc, [sp], #4)
 6c0:	.word	0x000109b4
 6c4:	.word	0x00000350
 6c8:	.word	0x00000358
 6cc:	.word	0x00000020

000006d0 <mclient_test>:
 6d0:	str	r4, [sp, #-12]!
 6d4:	str	fp, [sp, #4]
 6d8:	str	lr, [sp, #8]
 6dc:	add	fp, sp, #8
 6e0:	sub	sp, sp, #20
 6e4:	str	r0, [fp, #-16]
 6e8:	str	r1, [fp, #-20]	; 0xffffffec
 6ec:	str	r2, [fp, #-24]	; 0xffffffe8
 6f0:	str	r3, [fp, #-28]	; 0xffffffe4
 6f4:	ldr	r4, [pc, #120]	; 774 <mclient_test+0xa4>
 6f8:	add	r4, pc, r4
 6fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 700:	cmp	r3, #1
 704:	bgt	720 <mclient_test+0x50>
 708:	ldr	r3, [pc, #104]	; 778 <mclient_test+0xa8>
 70c:	add	r3, pc, r3
 710:	mov	r1, r3
 714:	ldr	r0, [fp, #-24]	; 0xffffffe8
 718:	bl	4ac <sendto_one_notice@plt>
 71c:	b	744 <mclient_test+0x74>
 720:	ldr	r3, [fp, #4]
 724:	add	r3, r3, #4
 728:	ldr	r3, [r3]
 72c:	mov	r2, r3
 730:	ldr	r3, [pc, #68]	; 77c <mclient_test+0xac>
 734:	add	r3, pc, r3
 738:	mov	r1, r3
 73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 740:	bl	4ac <sendto_one_notice@plt>
 744:	ldr	r3, [pc, #52]	; 780 <mclient_test+0xb0>
 748:	ldr	r3, [r4, r3]
 74c:	ldr	r3, [r3]
 750:	mov	r1, #0
 754:	mov	r0, r3
 758:	bl	4b8 <call_hook@plt>
 75c:	nop	{0}
 760:	sub	sp, fp, #8
 764:	ldr	r4, [sp]
 768:	ldr	fp, [sp, #4]
 76c:	add	sp, sp, #8
 770:	pop	{pc}		; (ldr pc, [sp], #4)
 774:	.word	0x00010900
 778:	.word	0x000002fc
 77c:	.word	0x00000304
 780:	.word	0x00000020

00000784 <mrclient_test>:
 784:	str	fp, [sp, #-8]!
 788:	str	lr, [sp, #4]
 78c:	add	fp, sp, #4
 790:	sub	sp, sp, #16
 794:	str	r0, [fp, #-8]
 798:	str	r1, [fp, #-12]
 79c:	str	r2, [fp, #-16]
 7a0:	str	r3, [fp, #-20]	; 0xffffffec
 7a4:	ldr	r3, [fp, #-20]	; 0xffffffec
 7a8:	cmp	r3, #1
 7ac:	bgt	7c8 <mrclient_test+0x44>
 7b0:	ldr	r3, [pc, #72]	; 800 <mrclient_test+0x7c>
 7b4:	add	r3, pc, r3
 7b8:	mov	r1, r3
 7bc:	ldr	r0, [fp, #-16]
 7c0:	bl	4ac <sendto_one_notice@plt>
 7c4:	b	7ec <mrclient_test+0x68>
 7c8:	ldr	r3, [fp, #4]
 7cc:	add	r3, r3, #4
 7d0:	ldr	r3, [r3]
 7d4:	mov	r2, r3
 7d8:	ldr	r3, [pc, #36]	; 804 <mrclient_test+0x80>
 7dc:	add	r3, pc, r3
 7e0:	mov	r1, r3
 7e4:	ldr	r0, [fp, #-16]
 7e8:	bl	4ac <sendto_one_notice@plt>
 7ec:	nop	{0}
 7f0:	sub	sp, fp, #4
 7f4:	ldr	fp, [sp]
 7f8:	add	sp, sp, #4
 7fc:	pop	{pc}		; (ldr pc, [sp], #4)
 800:	.word	0x000002b4
 804:	.word	0x000002c0

00000808 <mserver_test>:
 808:	str	fp, [sp, #-8]!
 80c:	str	lr, [sp, #4]
 810:	add	fp, sp, #4
 814:	sub	sp, sp, #16
 818:	str	r0, [fp, #-8]
 81c:	str	r1, [fp, #-12]
 820:	str	r2, [fp, #-16]
 824:	str	r3, [fp, #-20]	; 0xffffffec
 828:	ldr	r3, [fp, #-20]	; 0xffffffec
 82c:	cmp	r3, #1
 830:	bgt	84c <mserver_test+0x44>
 834:	ldr	r3, [pc, #72]	; 884 <mserver_test+0x7c>
 838:	add	r3, pc, r3
 83c:	mov	r1, r3
 840:	ldr	r0, [fp, #-16]
 844:	bl	4ac <sendto_one_notice@plt>
 848:	b	870 <mserver_test+0x68>
 84c:	ldr	r3, [fp, #4]
 850:	add	r3, r3, #4
 854:	ldr	r3, [r3]
 858:	mov	r2, r3
 85c:	ldr	r3, [pc, #36]	; 888 <mserver_test+0x80>
 860:	add	r3, pc, r3
 864:	mov	r1, r3
 868:	ldr	r0, [fp, #-16]
 86c:	bl	4ac <sendto_one_notice@plt>
 870:	nop	{0}
 874:	sub	sp, fp, #4
 878:	ldr	fp, [sp]
 87c:	add	sp, sp, #4
 880:	pop	{pc}		; (ldr pc, [sp], #4)
 884:	.word	0x00000298
 888:	.word	0x0000029c

0000088c <moper_test>:
 88c:	str	fp, [sp, #-8]!
 890:	str	lr, [sp, #4]
 894:	add	fp, sp, #4
 898:	sub	sp, sp, #16
 89c:	str	r0, [fp, #-8]
 8a0:	str	r1, [fp, #-12]
 8a4:	str	r2, [fp, #-16]
 8a8:	str	r3, [fp, #-20]	; 0xffffffec
 8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
 8b0:	cmp	r3, #1
 8b4:	bgt	8d0 <moper_test+0x44>
 8b8:	ldr	r3, [pc, #72]	; 908 <moper_test+0x7c>
 8bc:	add	r3, pc, r3
 8c0:	mov	r1, r3
 8c4:	ldr	r0, [fp, #-16]
 8c8:	bl	4ac <sendto_one_notice@plt>
 8cc:	b	8f4 <moper_test+0x68>
 8d0:	ldr	r3, [fp, #4]
 8d4:	add	r3, r3, #4
 8d8:	ldr	r3, [r3]
 8dc:	mov	r2, r3
 8e0:	ldr	r3, [pc, #36]	; 90c <moper_test+0x80>
 8e4:	add	r3, pc, r3
 8e8:	mov	r1, r3
 8ec:	ldr	r0, [fp, #-16]
 8f0:	bl	4ac <sendto_one_notice@plt>
 8f4:	nop	{0}
 8f8:	sub	sp, fp, #4
 8fc:	ldr	fp, [sp]
 900:	add	sp, sp, #4
 904:	pop	{pc}		; (ldr pc, [sp], #4)
 908:	.word	0x0000026c
 90c:	.word	0x00000274

00000910 <show_example_hook>:
 910:	str	fp, [sp, #-8]!
 914:	str	lr, [sp, #4]
 918:	add	fp, sp, #4
 91c:	sub	sp, sp, #8
 920:	str	r0, [fp, #-8]
 924:	ldr	r3, [pc, #36]	; 950 <show_example_hook+0x40>
 928:	add	r3, pc, r3
 92c:	mov	r2, r3
 930:	mov	r1, #0
 934:	mov	r0, #256	; 0x100
 938:	bl	494 <sendto_realops_snomask@plt>
 93c:	nop	{0}
 940:	sub	sp, fp, #4
 944:	ldr	fp, [sp]
 948:	add	sp, sp, #4
 94c:	pop	{pc}		; (ldr pc, [sp], #4)
 950:	.word	0x00000260

Disassembly of section .fini:

00000954 <_fini>:
 954:	push	{r3, lr}
 958:	pop	{r3, pc}
