
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010938 <.init>:
   10938:	push	{r3, lr}
   1093c:	bl	10ac4 <_start@@Base+0x3c>
   10940:	pop	{r3, pc}

Disassembly of section .plt:

00010944 <strcmp@plt-0x14>:
   10944:	push	{lr}		; (str lr, [sp, #-4]!)
   10948:	ldr	lr, [pc, #4]	; 10954 <strcmp@plt-0x4>
   1094c:	add	lr, pc, lr
   10950:	ldr	pc, [lr, #8]!
   10954:	andeq	r1, r1, ip, lsr #13

00010958 <strcmp@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1708]!	; 0x6ac

00010964 <printf@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010970 <free@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1692]!	; 0x69c

0001097c <strdup@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1684]!	; 0x694

00010988 <strcpy@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1676]!	; 0x68c

00010994 <puts@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1668]!	; 0x684

000109a0 <malloc@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1660]!	; 0x67c

000109ac <__libc_start_main@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1652]!	; 0x674

000109b8 <__gmon_start__@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1644]!	; 0x66c

000109c4 <strlen@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1636]!	; 0x664

000109d0 <setvbuf@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1628]!	; 0x65c

000109dc <putchar@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1620]!	; 0x654

000109e8 <abort@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1612]!	; 0x64c

Disassembly of section .text:

000109f4 <main@@Base>:
   109f4:	ldr	r0, [pc, #124]	; 10a78 <main@@Base+0x84>
   109f8:	mov	r3, #0
   109fc:	mov	r2, #2
   10a00:	push	{r4, lr}
   10a04:	mov	r1, r3
   10a08:	ldr	r0, [r0]
   10a0c:	bl	109d0 <setvbuf@plt>
   10a10:	ldr	r0, [pc, #100]	; 10a7c <main@@Base+0x88>
   10a14:	mov	r3, #0
   10a18:	mov	r2, #2
   10a1c:	mov	r1, r3
   10a20:	ldr	r0, [r0]
   10a24:	bl	109d0 <setvbuf@plt>
   10a28:	bl	10c70 <teste_lista_nova@@Base>
   10a2c:	mov	r4, r0
   10a30:	bl	10cf4 <teste_lista_insere@@Base>
   10a34:	add	r4, r4, r0
   10a38:	bl	10fa0 <teste_lista_remove@@Base>
   10a3c:	add	r4, r4, r0
   10a40:	bl	11108 <teste_lista_pesquisa@@Base>
   10a44:	add	r4, r4, r0
   10a48:	bl	11250 <teste_lista_ordena@@Base>
   10a4c:	add	r4, r4, r0
   10a50:	bl	1140c <teste_lista_inverte@@Base>
   10a54:	adds	r1, r4, r0
   10a58:	bne	10a6c <main@@Base+0x78>
   10a5c:	ldr	r0, [pc, #28]	; 10a80 <main@@Base+0x8c>
   10a60:	bl	10994 <puts@plt>
   10a64:	mov	r0, #0
   10a68:	pop	{r4, pc}
   10a6c:	ldr	r0, [pc, #16]	; 10a84 <main@@Base+0x90>
   10a70:	bl	10964 <printf@plt>
   10a74:	b	10a64 <main@@Base+0x70>
   10a78:	andeq	r2, r2, r4, asr r0
   10a7c:	andeq	r2, r2, r0, asr r0
   10a80:	andeq	r1, r1, ip, asr lr
   10a84:	andeq	r1, r1, r4, ror lr

00010a88 <_start@@Base>:
   10a88:	mov	fp, #0
   10a8c:	mov	lr, #0
   10a90:	pop	{r1}		; (ldr r1, [sp], #4)
   10a94:	mov	r2, sp
   10a98:	push	{r2}		; (str r2, [sp, #-4]!)
   10a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10aa0:	ldr	ip, [pc, #16]	; 10ab8 <_start@@Base+0x30>
   10aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa8:	ldr	r0, [pc, #12]	; 10abc <_start@@Base+0x34>
   10aac:	ldr	r3, [pc, #12]	; 10ac0 <_start@@Base+0x38>
   10ab0:	bl	109ac <__libc_start_main@plt>
   10ab4:	bl	109e8 <abort@plt>
   10ab8:	andeq	r1, r1, r0, lsl #19
   10abc:	strdeq	r0, [r1], -r4
   10ac0:	andeq	r1, r1, r0, lsr #18
   10ac4:	ldr	r3, [pc, #20]	; 10ae0 <_start@@Base+0x58>
   10ac8:	ldr	r2, [pc, #20]	; 10ae4 <_start@@Base+0x5c>
   10acc:	add	r3, pc, r3
   10ad0:	ldr	r2, [r3, r2]
   10ad4:	cmp	r2, #0
   10ad8:	bxeq	lr
   10adc:	b	109b8 <__gmon_start__@plt>
   10ae0:	andeq	r1, r1, ip, lsr #10
   10ae4:	andeq	r0, r0, r0, asr #32
   10ae8:	ldr	r0, [pc, #24]	; 10b08 <_start@@Base+0x80>
   10aec:	ldr	r3, [pc, #24]	; 10b0c <_start@@Base+0x84>
   10af0:	cmp	r3, r0
   10af4:	bxeq	lr
   10af8:	ldr	r3, [pc, #16]	; 10b10 <_start@@Base+0x88>
   10afc:	cmp	r3, #0
   10b00:	bxeq	lr
   10b04:	bx	r3
   10b08:	andeq	r2, r2, ip, asr #32
   10b0c:	andeq	r2, r2, ip, asr #32
   10b10:	andeq	r0, r0, r0
   10b14:	ldr	r0, [pc, #36]	; 10b40 <_start@@Base+0xb8>
   10b18:	ldr	r1, [pc, #36]	; 10b44 <_start@@Base+0xbc>
   10b1c:	sub	r1, r1, r0
   10b20:	asr	r1, r1, #2
   10b24:	add	r1, r1, r1, lsr #31
   10b28:	asrs	r1, r1, #1
   10b2c:	bxeq	lr
   10b30:	ldr	r3, [pc, #16]	; 10b48 <_start@@Base+0xc0>
   10b34:	cmp	r3, #0
   10b38:	bxeq	lr
   10b3c:	bx	r3
   10b40:	andeq	r2, r2, ip, asr #32
   10b44:	andeq	r2, r2, ip, asr #32
   10b48:	andeq	r0, r0, r0
   10b4c:	push	{r4, lr}
   10b50:	ldr	r4, [pc, #24]	; 10b70 <_start@@Base+0xe8>
   10b54:	ldrb	r3, [r4]
   10b58:	cmp	r3, #0
   10b5c:	popne	{r4, pc}
   10b60:	bl	10ae8 <_start@@Base+0x60>
   10b64:	mov	r3, #1
   10b68:	strb	r3, [r4]
   10b6c:	pop	{r4, pc}
   10b70:	andeq	r2, r2, r8, asr r0
   10b74:	b	10b14 <_start@@Base+0x8c>

00010b78 <_l@@Base>:
   10b78:	push	{r0, r1, r2, r3}
   10b7c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10b80:	mov	r0, #12
   10b84:	mov	r4, #0
   10b88:	ldr	r8, [sp, #40]	; 0x28
   10b8c:	bl	109a0 <malloc@plt>
   10b90:	mov	r6, r0
   10b94:	add	r3, sp, #44	; 0x2c
   10b98:	str	r4, [r0]
   10b9c:	str	r3, [sp, #4]
   10ba0:	stmib	r0, {r4, r8}
   10ba4:	cmp	r4, r8
   10ba8:	blt	10bcc <_l@@Base+0x54>
   10bac:	mov	r3, #0
   10bb0:	mov	r0, r6
   10bb4:	str	r7, [r6, #4]
   10bb8:	str	r3, [r7, #4]
   10bbc:	add	sp, sp, #12
   10bc0:	pop	{r4, r5, r6, r7, r8, r9, lr}
   10bc4:	add	sp, sp, #16
   10bc8:	bx	lr
   10bcc:	ldr	r3, [sp, #4]
   10bd0:	cmp	r4, #0
   10bd4:	mov	r0, #12
   10bd8:	add	r2, r3, #4
   10bdc:	ldr	r9, [r3]
   10be0:	str	r2, [sp, #4]
   10be4:	bne	10c20 <_l@@Base+0xa8>
   10be8:	bl	109a0 <malloc@plt>
   10bec:	mov	r5, r0
   10bf0:	str	r0, [r6]
   10bf4:	str	r4, [r0, #8]
   10bf8:	mov	r0, r9
   10bfc:	add	r4, r4, #1
   10c00:	bl	109c4 <strlen@plt>
   10c04:	add	r0, r0, #1
   10c08:	mov	r7, r5
   10c0c:	bl	109a0 <malloc@plt>
   10c10:	mov	r1, r9
   10c14:	str	r0, [r5]
   10c18:	bl	10988 <strcpy@plt>
   10c1c:	b	10ba4 <_l@@Base+0x2c>
   10c20:	bl	109a0 <malloc@plt>
   10c24:	mov	r5, r0
   10c28:	str	r0, [r7, #4]
   10c2c:	str	r7, [r0, #8]
   10c30:	b	10bf8 <_l@@Base+0x80>

00010c34 <_f@@Base>:
   10c34:	cmp	r0, #0
   10c38:	movne	r2, #0
   10c3c:	ldrne	r3, [r0]
   10c40:	bxeq	lr
   10c44:	cmp	r3, #0
   10c48:	cmpne	r2, r1
   10c4c:	blt	10c60 <_f@@Base+0x2c>
   10c50:	cmp	r2, r1
   10c54:	ldreq	r0, [r3]
   10c58:	ldrne	r0, [pc, #12]	; 10c6c <_f@@Base+0x38>
   10c5c:	bx	lr
   10c60:	add	r2, r2, #1
   10c64:	ldr	r3, [r3, #4]
   10c68:	b	10c44 <_f@@Base+0x10>
   10c6c:	muleq	r1, r9, lr

00010c70 <teste_lista_nova@@Base>:
   10c70:	push	{r4, r5, r6, lr}
   10c74:	ldr	r0, [pc, #104]	; 10ce4 <teste_lista_nova@@Base+0x74>
   10c78:	bl	10964 <printf@plt>
   10c7c:	bl	115e4 <lista_nova@@Base>
   10c80:	subs	r5, r0, #0
   10c84:	bne	10ca4 <teste_lista_nova@@Base+0x34>
   10c88:	ldr	r0, [pc, #88]	; 10ce8 <teste_lista_nova@@Base+0x78>
   10c8c:	mov	r4, #1
   10c90:	bl	10964 <printf@plt>
   10c94:	mov	r0, #10
   10c98:	bl	109dc <putchar@plt>
   10c9c:	mov	r0, r4
   10ca0:	pop	{r4, r5, r6, pc}
   10ca4:	ldr	r4, [r5, #8]
   10ca8:	cmp	r4, #0
   10cac:	beq	10cbc <teste_lista_nova@@Base+0x4c>
   10cb0:	ldr	r0, [pc, #52]	; 10cec <teste_lista_nova@@Base+0x7c>
   10cb4:	mov	r4, #1
   10cb8:	bl	10964 <printf@plt>
   10cbc:	mov	r0, r5
   10cc0:	bl	11600 <lista_apaga@@Base>
   10cc4:	cmp	r4, #0
   10cc8:	bne	10cd8 <teste_lista_nova@@Base+0x68>
   10ccc:	ldr	r0, [pc, #28]	; 10cf0 <teste_lista_nova@@Base+0x80>
   10cd0:	bl	10994 <puts@plt>
   10cd4:	b	10c9c <teste_lista_nova@@Base+0x2c>
   10cd8:	mov	r0, #10
   10cdc:	bl	109dc <putchar@plt>
   10ce0:	b	10c9c <teste_lista_nova@@Base+0x2c>
   10ce4:	muleq	r1, r0, r9
   10ce8:	muleq	r1, pc, r9	; <UNPREDICTABLE>
   10cec:			; <UNDEFINED> instruction: 0x000119b5
   10cf0:	ldrdeq	r1, [r1], -r8

00010cf4 <teste_lista_insere@@Base>:
   10cf4:	ldr	r2, [pc, #632]	; 10f74 <teste_lista_insere@@Base+0x280>
   10cf8:	mov	r0, #2
   10cfc:	push	{r4, r5, r6, lr}
   10d00:	mov	r1, r2
   10d04:	bl	10b78 <_l@@Base>
   10d08:	mov	r5, r0
   10d0c:	ldr	r0, [pc, #612]	; 10f78 <teste_lista_insere@@Base+0x284>
   10d10:	bl	10964 <printf@plt>
   10d14:	ldr	r3, [r5]
   10d18:	mov	r0, r5
   10d1c:	ldr	r1, [pc, #600]	; 10f7c <teste_lista_insere@@Base+0x288>
   10d20:	ldr	r2, [r3, #4]
   10d24:	bl	1167c <lista_insere@@Base>
   10d28:	cmp	r0, #0
   10d2c:	movne	r4, #0
   10d30:	bne	10d40 <teste_lista_insere@@Base+0x4c>
   10d34:	ldr	r0, [pc, #580]	; 10f80 <teste_lista_insere@@Base+0x28c>
   10d38:	mov	r4, #1
   10d3c:	bl	10964 <printf@plt>
   10d40:	ldr	r3, [r5, #8]
   10d44:	cmp	r3, #3
   10d48:	beq	10d70 <teste_lista_insere@@Base+0x7c>
   10d4c:	ldr	r0, [pc, #560]	; 10f84 <teste_lista_insere@@Base+0x290>
   10d50:	add	r4, r4, #1
   10d54:	bl	10964 <printf@plt>
   10d58:	ldr	r3, [r5, #8]
   10d5c:	cmp	r3, #3
   10d60:	beq	10d70 <teste_lista_insere@@Base+0x7c>
   10d64:	mov	r0, #10
   10d68:	bl	109dc <putchar@plt>
   10d6c:	b	10f3c <teste_lista_insere@@Base+0x248>
   10d70:	ldr	r6, [r5]
   10d74:	ldr	r1, [pc, #504]	; 10f74 <teste_lista_insere@@Base+0x280>
   10d78:	ldr	r0, [r6]
   10d7c:	bl	10958 <strcmp@plt>
   10d80:	cmp	r0, #0
   10d84:	bne	10db8 <teste_lista_insere@@Base+0xc4>
   10d88:	ldr	r6, [r6, #4]
   10d8c:	ldr	r1, [pc, #488]	; 10f7c <teste_lista_insere@@Base+0x288>
   10d90:	ldr	r0, [r6]
   10d94:	bl	10958 <strcmp@plt>
   10d98:	cmp	r0, #0
   10d9c:	bne	10db8 <teste_lista_insere@@Base+0xc4>
   10da0:	ldr	r3, [r6, #4]
   10da4:	ldr	r1, [pc, #456]	; 10f74 <teste_lista_insere@@Base+0x280>
   10da8:	ldr	r0, [r3]
   10dac:	bl	10958 <strcmp@plt>
   10db0:	cmp	r0, #0
   10db4:	beq	10dc4 <teste_lista_insere@@Base+0xd0>
   10db8:	ldr	r0, [pc, #456]	; 10f88 <teste_lista_insere@@Base+0x294>
   10dbc:	add	r4, r4, #1
   10dc0:	bl	10964 <printf@plt>
   10dc4:	ldr	r1, [pc, #432]	; 10f7c <teste_lista_insere@@Base+0x288>
   10dc8:	mov	r0, r5
   10dcc:	ldr	r2, [r5]
   10dd0:	bl	1167c <lista_insere@@Base>
   10dd4:	ldr	r3, [r5]
   10dd8:	cmp	r3, r0
   10ddc:	beq	10dec <teste_lista_insere@@Base+0xf8>
   10de0:	ldr	r0, [pc, #420]	; 10f8c <teste_lista_insere@@Base+0x298>
   10de4:	add	r4, r4, #1
   10de8:	bl	10964 <printf@plt>
   10dec:	ldr	r3, [r5, #8]
   10df0:	cmp	r3, #4
   10df4:	beq	10e10 <teste_lista_insere@@Base+0x11c>
   10df8:	ldr	r0, [pc, #400]	; 10f90 <teste_lista_insere@@Base+0x29c>
   10dfc:	add	r4, r4, #1
   10e00:	bl	10964 <printf@plt>
   10e04:	ldr	r3, [r5, #8]
   10e08:	cmp	r3, #4
   10e0c:	bne	10d64 <teste_lista_insere@@Base+0x70>
   10e10:	ldr	r6, [r5]
   10e14:	ldr	r1, [pc, #352]	; 10f7c <teste_lista_insere@@Base+0x288>
   10e18:	ldr	r0, [r6]
   10e1c:	bl	10958 <strcmp@plt>
   10e20:	cmp	r0, #0
   10e24:	bne	10e70 <teste_lista_insere@@Base+0x17c>
   10e28:	ldr	r6, [r6, #4]
   10e2c:	ldr	r1, [pc, #320]	; 10f74 <teste_lista_insere@@Base+0x280>
   10e30:	ldr	r0, [r6]
   10e34:	bl	10958 <strcmp@plt>
   10e38:	cmp	r0, #0
   10e3c:	bne	10e70 <teste_lista_insere@@Base+0x17c>
   10e40:	ldr	r6, [r6, #4]
   10e44:	ldr	r1, [pc, #304]	; 10f7c <teste_lista_insere@@Base+0x288>
   10e48:	ldr	r0, [r6]
   10e4c:	bl	10958 <strcmp@plt>
   10e50:	cmp	r0, #0
   10e54:	bne	10e70 <teste_lista_insere@@Base+0x17c>
   10e58:	ldr	r3, [r6, #4]
   10e5c:	ldr	r1, [pc, #272]	; 10f74 <teste_lista_insere@@Base+0x280>
   10e60:	ldr	r0, [r3]
   10e64:	bl	10958 <strcmp@plt>
   10e68:	cmp	r0, #0
   10e6c:	beq	10e7c <teste_lista_insere@@Base+0x188>
   10e70:	ldr	r0, [pc, #272]	; 10f88 <teste_lista_insere@@Base+0x294>
   10e74:	add	r4, r4, #1
   10e78:	bl	10964 <printf@plt>
   10e7c:	mov	r2, #0
   10e80:	ldr	r1, [pc, #244]	; 10f7c <teste_lista_insere@@Base+0x288>
   10e84:	mov	r0, r5
   10e88:	bl	1167c <lista_insere@@Base>
   10e8c:	ldr	r3, [r5, #8]
   10e90:	cmp	r3, #5
   10e94:	beq	10eb0 <teste_lista_insere@@Base+0x1bc>
   10e98:	ldr	r0, [pc, #244]	; 10f94 <teste_lista_insere@@Base+0x2a0>
   10e9c:	add	r4, r4, #1
   10ea0:	bl	10964 <printf@plt>
   10ea4:	ldr	r3, [r5, #8]
   10ea8:	cmp	r3, #5
   10eac:	bne	10d64 <teste_lista_insere@@Base+0x70>
   10eb0:	ldr	r3, [r5]
   10eb4:	ldr	r1, [pc, #192]	; 10f7c <teste_lista_insere@@Base+0x288>
   10eb8:	ldr	r3, [r3, #4]
   10ebc:	ldr	r3, [r3, #4]
   10ec0:	ldr	r3, [r3, #4]
   10ec4:	ldr	r3, [r3, #4]
   10ec8:	ldr	r0, [r3]
   10ecc:	bl	10958 <strcmp@plt>
   10ed0:	cmp	r0, #0
   10ed4:	beq	10ee4 <teste_lista_insere@@Base+0x1f0>
   10ed8:	ldr	r0, [pc, #168]	; 10f88 <teste_lista_insere@@Base+0x294>
   10edc:	add	r4, r4, #1
   10ee0:	bl	10964 <printf@plt>
   10ee4:	mov	r0, r5
   10ee8:	bl	11600 <lista_apaga@@Base>
   10eec:	bl	115e4 <lista_nova@@Base>
   10ef0:	mov	r5, r0
   10ef4:	mov	r2, #0
   10ef8:	ldr	r1, [pc, #124]	; 10f7c <teste_lista_insere@@Base+0x288>
   10efc:	bl	1167c <lista_insere@@Base>
   10f00:	ldr	r3, [r5, #8]
   10f04:	cmp	r3, #1
   10f08:	beq	10f18 <teste_lista_insere@@Base+0x224>
   10f0c:	ldr	r0, [pc, #132]	; 10f98 <teste_lista_insere@@Base+0x2a4>
   10f10:	add	r4, r4, #1
   10f14:	bl	10964 <printf@plt>
   10f18:	mov	r0, r5
   10f1c:	bl	11654 <lista_tamanho@@Base>
   10f20:	cmp	r0, #1
   10f24:	beq	10f44 <teste_lista_insere@@Base+0x250>
   10f28:	cmp	r4, #0
   10f2c:	bne	10d64 <teste_lista_insere@@Base+0x70>
   10f30:	ldr	r0, [pc, #100]	; 10f9c <teste_lista_insere@@Base+0x2a8>
   10f34:	mov	r4, #0
   10f38:	bl	10994 <puts@plt>
   10f3c:	mov	r0, r4
   10f40:	pop	{r4, r5, r6, pc}
   10f44:	ldr	r3, [r5]
   10f48:	ldr	r1, [pc, #44]	; 10f7c <teste_lista_insere@@Base+0x288>
   10f4c:	ldr	r0, [r3]
   10f50:	bl	10958 <strcmp@plt>
   10f54:	cmp	r0, #0
   10f58:	beq	10f68 <teste_lista_insere@@Base+0x274>
   10f5c:	ldr	r0, [pc, #36]	; 10f88 <teste_lista_insere@@Base+0x294>
   10f60:	add	r4, r4, #1
   10f64:	bl	10964 <printf@plt>
   10f68:	mov	r0, r5
   10f6c:	bl	11600 <lista_apaga@@Base>
   10f70:	b	10f28 <teste_lista_insere@@Base+0x234>
   10f74:	ldrdeq	r1, [r1], -fp
   10f78:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10f7c:	strdeq	r1, [r1], -r0
   10f80:	strdeq	r1, [r1], -r6
   10f84:	andeq	r1, r1, r0, lsr #20
   10f88:	andeq	r1, r1, ip, asr sl
   10f8c:	muleq	r1, r2, sl
   10f90:	andeq	r1, r1, r2, asr #21
   10f94:	strdeq	r1, [r1], -lr
   10f98:	andeq	r1, r1, sl, lsr fp
   10f9c:	ldrdeq	r1, [r1], -r8

00010fa0 <teste_lista_remove@@Base>:
   10fa0:	ldr	r3, [pc, #308]	; 110dc <teste_lista_remove@@Base+0x13c>
   10fa4:	push	{r0, r1, r4, r5, r6, lr}
   10fa8:	mov	r0, #5
   10fac:	ldr	r2, [pc, #300]	; 110e0 <teste_lista_remove@@Base+0x140>
   10fb0:	str	r3, [sp, #4]
   10fb4:	ldr	r3, [pc, #296]	; 110e4 <teste_lista_remove@@Base+0x144>
   10fb8:	ldr	r1, [pc, #296]	; 110e8 <teste_lista_remove@@Base+0x148>
   10fbc:	str	r3, [sp]
   10fc0:	ldr	r3, [pc, #292]	; 110ec <teste_lista_remove@@Base+0x14c>
   10fc4:	bl	10b78 <_l@@Base>
   10fc8:	mov	r5, r0
   10fcc:	ldr	r0, [pc, #284]	; 110f0 <teste_lista_remove@@Base+0x150>
   10fd0:	bl	10964 <printf@plt>
   10fd4:	ldr	r3, [r5]
   10fd8:	mov	r0, r5
   10fdc:	ldr	r3, [r3, #4]
   10fe0:	ldr	r3, [r3, #4]
   10fe4:	ldr	r1, [r3, #4]
   10fe8:	bl	11728 <lista_remove@@Base>
   10fec:	ldr	r3, [r5, #4]
   10ff0:	cmp	r3, r0
   10ff4:	moveq	r4, #0
   10ff8:	beq	11008 <teste_lista_remove@@Base+0x68>
   10ffc:	ldr	r0, [pc, #240]	; 110f4 <teste_lista_remove@@Base+0x154>
   11000:	mov	r4, #1
   11004:	bl	10964 <printf@plt>
   11008:	ldr	r3, [r5, #8]
   1100c:	cmp	r3, #4
   11010:	beq	11020 <teste_lista_remove@@Base+0x80>
   11014:	ldr	r0, [pc, #220]	; 110f8 <teste_lista_remove@@Base+0x158>
   11018:	add	r4, r4, #1
   1101c:	bl	10964 <printf@plt>
   11020:	ldr	r6, [r5]
   11024:	ldr	r1, [pc, #188]	; 110e8 <teste_lista_remove@@Base+0x148>
   11028:	ldr	r0, [r6]
   1102c:	bl	10958 <strcmp@plt>
   11030:	cmp	r0, #0
   11034:	bne	11080 <teste_lista_remove@@Base+0xe0>
   11038:	ldr	r6, [r6, #4]
   1103c:	ldr	r1, [pc, #156]	; 110e0 <teste_lista_remove@@Base+0x140>
   11040:	ldr	r0, [r6]
   11044:	bl	10958 <strcmp@plt>
   11048:	cmp	r0, #0
   1104c:	bne	11080 <teste_lista_remove@@Base+0xe0>
   11050:	ldr	r6, [r6, #4]
   11054:	ldr	r1, [pc, #144]	; 110ec <teste_lista_remove@@Base+0x14c>
   11058:	ldr	r0, [r6]
   1105c:	bl	10958 <strcmp@plt>
   11060:	cmp	r0, #0
   11064:	bne	11080 <teste_lista_remove@@Base+0xe0>
   11068:	ldr	r3, [r6, #4]
   1106c:	ldr	r1, [pc, #104]	; 110dc <teste_lista_remove@@Base+0x13c>
   11070:	ldr	r0, [r3]
   11074:	bl	10958 <strcmp@plt>
   11078:	cmp	r0, #0
   1107c:	beq	1108c <teste_lista_remove@@Base+0xec>
   11080:	ldr	r0, [pc, #116]	; 110fc <teste_lista_remove@@Base+0x15c>
   11084:	add	r4, r4, #1
   11088:	bl	10964 <printf@plt>
   1108c:	mov	r1, #0
   11090:	mov	r0, r5
   11094:	bl	11728 <lista_remove@@Base>
   11098:	cmp	r0, #0
   1109c:	beq	110ac <teste_lista_remove@@Base+0x10c>
   110a0:	ldr	r0, [pc, #88]	; 11100 <teste_lista_remove@@Base+0x160>
   110a4:	add	r4, r4, #1
   110a8:	bl	10964 <printf@plt>
   110ac:	mov	r0, r5
   110b0:	bl	11600 <lista_apaga@@Base>
   110b4:	cmp	r4, #0
   110b8:	bne	110d0 <teste_lista_remove@@Base+0x130>
   110bc:	ldr	r0, [pc, #64]	; 11104 <teste_lista_remove@@Base+0x164>
   110c0:	bl	10994 <puts@plt>
   110c4:	mov	r0, r4
   110c8:	add	sp, sp, #8
   110cc:	pop	{r4, r5, r6, pc}
   110d0:	mov	r0, #10
   110d4:	bl	109dc <putchar@plt>
   110d8:	b	110c4 <teste_lista_remove@@Base+0x124>
   110dc:	andeq	r1, r1, pc, ror fp
   110e0:	andeq	r1, r1, r9, ror fp
   110e4:	andeq	r1, r1, r2, lsl #23
   110e8:	andeq	r1, r1, ip, ror fp
   110ec:	andeq	r1, r1, r6, ror fp
   110f0:	andeq	r1, r1, r5, lsl #23
   110f4:	muleq	r1, r6, fp
   110f8:	andeq	r1, r1, pc, asr #23
   110fc:	andeq	r1, r1, fp, lsl #24
   11100:	andeq	r1, r1, r1, asr #24
   11104:	ldrdeq	r1, [r1], -r8

00011108 <teste_lista_pesquisa@@Base>:
   11108:	push	{r4, r5, lr}
   1110c:	sub	sp, sp, #20
   11110:	mov	r0, #7
   11114:	ldr	r3, [pc, #280]	; 11234 <teste_lista_pesquisa@@Base+0x12c>
   11118:	ldr	r4, [pc, #280]	; 11238 <teste_lista_pesquisa@@Base+0x130>
   1111c:	mov	r2, r3
   11120:	mov	r1, r3
   11124:	stm	sp, {r3, r4}
   11128:	str	r3, [sp, #8]
   1112c:	str	r3, [sp, #12]
   11130:	bl	10b78 <_l@@Base>
   11134:	mov	r5, r0
   11138:	ldr	r0, [pc, #252]	; 1123c <teste_lista_pesquisa@@Base+0x134>
   1113c:	bl	10964 <printf@plt>
   11140:	mov	r1, r4
   11144:	mov	r2, #0
   11148:	mov	r0, r5
   1114c:	bl	1179c <lista_pesquisa@@Base>
   11150:	ldr	r3, [r5]
   11154:	ldr	r3, [r3, #4]
   11158:	ldr	r3, [r3, #4]
   1115c:	ldr	r3, [r3, #4]
   11160:	ldr	r3, [r3, #4]
   11164:	cmp	r3, r0
   11168:	moveq	r4, #0
   1116c:	beq	1117c <teste_lista_pesquisa@@Base+0x74>
   11170:	ldr	r0, [pc, #200]	; 11240 <teste_lista_pesquisa@@Base+0x138>
   11174:	mov	r4, #1
   11178:	bl	10964 <printf@plt>
   1117c:	mov	r2, #0
   11180:	ldr	r1, [pc, #188]	; 11244 <teste_lista_pesquisa@@Base+0x13c>
   11184:	mov	r0, r5
   11188:	bl	1179c <lista_pesquisa@@Base>
   1118c:	cmp	r0, #0
   11190:	beq	111a0 <teste_lista_pesquisa@@Base+0x98>
   11194:	ldr	r0, [pc, #172]	; 11248 <teste_lista_pesquisa@@Base+0x140>
   11198:	add	r4, r4, #1
   1119c:	bl	10964 <printf@plt>
   111a0:	mov	r2, #1
   111a4:	ldr	r1, [pc, #136]	; 11234 <teste_lista_pesquisa@@Base+0x12c>
   111a8:	mov	r0, r5
   111ac:	bl	1179c <lista_pesquisa@@Base>
   111b0:	ldr	r3, [r5]
   111b4:	ldr	r3, [r3, #4]
   111b8:	ldr	r3, [r3, #4]
   111bc:	ldr	r3, [r3, #4]
   111c0:	ldr	r3, [r3, #4]
   111c4:	ldr	r3, [r3, #4]
   111c8:	ldr	r3, [r3, #4]
   111cc:	cmp	r3, r0
   111d0:	beq	111e0 <teste_lista_pesquisa@@Base+0xd8>
   111d4:	ldr	r0, [pc, #100]	; 11240 <teste_lista_pesquisa@@Base+0x138>
   111d8:	add	r4, r4, #1
   111dc:	bl	10964 <printf@plt>
   111e0:	mov	r2, #1
   111e4:	ldr	r1, [pc, #88]	; 11244 <teste_lista_pesquisa@@Base+0x13c>
   111e8:	mov	r0, r5
   111ec:	bl	1179c <lista_pesquisa@@Base>
   111f0:	cmp	r0, #0
   111f4:	beq	11204 <teste_lista_pesquisa@@Base+0xfc>
   111f8:	ldr	r0, [pc, #72]	; 11248 <teste_lista_pesquisa@@Base+0x140>
   111fc:	add	r4, r4, #1
   11200:	bl	10964 <printf@plt>
   11204:	mov	r0, r5
   11208:	bl	11600 <lista_apaga@@Base>
   1120c:	cmp	r4, #0
   11210:	bne	11228 <teste_lista_pesquisa@@Base+0x120>
   11214:	ldr	r0, [pc, #48]	; 1124c <teste_lista_pesquisa@@Base+0x144>
   11218:	bl	10994 <puts@plt>
   1121c:	mov	r0, r4
   11220:	add	sp, sp, #20
   11224:	pop	{r4, r5, pc}
   11228:	mov	r0, #10
   1122c:	bl	109dc <putchar@plt>
   11230:	b	1121c <teste_lista_pesquisa@@Base+0x114>
   11234:	ldrdeq	r1, [r1], -fp
   11238:	andeq	r1, r1, r3, ror ip
   1123c:	andeq	r1, r1, r6, ror ip
   11240:	andeq	r1, r1, r9, lsl #25
   11244:	ldrdeq	r1, [r1], -r0
   11248:	ldrdeq	r1, [r1], -r7
   1124c:	ldrdeq	r1, [r1], -r8

00011250 <teste_lista_ordena@@Base>:
   11250:	ldr	r3, [pc, #396]	; 113e4 <teste_lista_ordena@@Base+0x194>
   11254:	push	{r0, r1, r4, r5, r6, lr}
   11258:	mov	r0, #5
   1125c:	ldr	r2, [pc, #388]	; 113e8 <teste_lista_ordena@@Base+0x198>
   11260:	str	r3, [sp, #4]
   11264:	ldr	r3, [pc, #384]	; 113ec <teste_lista_ordena@@Base+0x19c>
   11268:	ldr	r1, [pc, #384]	; 113f0 <teste_lista_ordena@@Base+0x1a0>
   1126c:	str	r3, [sp]
   11270:	ldr	r3, [pc, #380]	; 113f4 <teste_lista_ordena@@Base+0x1a4>
   11274:	bl	10b78 <_l@@Base>
   11278:	mov	r5, r0
   1127c:	ldr	r0, [pc, #372]	; 113f8 <teste_lista_ordena@@Base+0x1a8>
   11280:	bl	10964 <printf@plt>
   11284:	mov	r0, #0
   11288:	bl	11828 <lista_ordena@@Base>
   1128c:	cmn	r0, #1
   11290:	moveq	r4, #0
   11294:	beq	112a4 <teste_lista_ordena@@Base+0x54>
   11298:	ldr	r0, [pc, #348]	; 113fc <teste_lista_ordena@@Base+0x1ac>
   1129c:	mov	r4, #1
   112a0:	bl	10964 <printf@plt>
   112a4:	mov	r0, r5
   112a8:	bl	11828 <lista_ordena@@Base>
   112ac:	ldr	r6, [r5]
   112b0:	ldr	r1, [pc, #312]	; 113f0 <teste_lista_ordena@@Base+0x1a0>
   112b4:	ldr	r0, [r6]
   112b8:	bl	10958 <strcmp@plt>
   112bc:	cmp	r0, #0
   112c0:	bne	11324 <teste_lista_ordena@@Base+0xd4>
   112c4:	ldr	r6, [r6, #4]
   112c8:	ldr	r1, [pc, #280]	; 113e8 <teste_lista_ordena@@Base+0x198>
   112cc:	ldr	r0, [r6]
   112d0:	bl	10958 <strcmp@plt>
   112d4:	cmp	r0, #0
   112d8:	bne	11324 <teste_lista_ordena@@Base+0xd4>
   112dc:	ldr	r6, [r6, #4]
   112e0:	ldr	r1, [pc, #260]	; 113ec <teste_lista_ordena@@Base+0x19c>
   112e4:	ldr	r0, [r6]
   112e8:	bl	10958 <strcmp@plt>
   112ec:	cmp	r0, #0
   112f0:	bne	11324 <teste_lista_ordena@@Base+0xd4>
   112f4:	ldr	r6, [r6, #4]
   112f8:	ldr	r1, [pc, #228]	; 113e4 <teste_lista_ordena@@Base+0x194>
   112fc:	ldr	r0, [r6]
   11300:	bl	10958 <strcmp@plt>
   11304:	cmp	r0, #0
   11308:	bne	11324 <teste_lista_ordena@@Base+0xd4>
   1130c:	ldr	r3, [r6, #4]
   11310:	ldr	r1, [pc, #220]	; 113f4 <teste_lista_ordena@@Base+0x1a4>
   11314:	ldr	r0, [r3]
   11318:	bl	10958 <strcmp@plt>
   1131c:	cmp	r0, #0
   11320:	beq	11330 <teste_lista_ordena@@Base+0xe0>
   11324:	ldr	r0, [pc, #212]	; 11400 <teste_lista_ordena@@Base+0x1b0>
   11328:	add	r4, r4, #1
   1132c:	bl	10964 <printf@plt>
   11330:	ldr	r6, [r5, #4]
   11334:	ldr	r1, [pc, #184]	; 113f4 <teste_lista_ordena@@Base+0x1a4>
   11338:	ldr	r0, [r6]
   1133c:	bl	10958 <strcmp@plt>
   11340:	cmp	r0, #0
   11344:	bne	113a8 <teste_lista_ordena@@Base+0x158>
   11348:	ldr	r6, [r6, #8]
   1134c:	ldr	r1, [pc, #144]	; 113e4 <teste_lista_ordena@@Base+0x194>
   11350:	ldr	r0, [r6]
   11354:	bl	10958 <strcmp@plt>
   11358:	cmp	r0, #0
   1135c:	bne	113a8 <teste_lista_ordena@@Base+0x158>
   11360:	ldr	r6, [r6, #8]
   11364:	ldr	r1, [pc, #128]	; 113ec <teste_lista_ordena@@Base+0x19c>
   11368:	ldr	r0, [r6]
   1136c:	bl	10958 <strcmp@plt>
   11370:	cmp	r0, #0
   11374:	bne	113a8 <teste_lista_ordena@@Base+0x158>
   11378:	ldr	r6, [r6, #8]
   1137c:	ldr	r1, [pc, #100]	; 113e8 <teste_lista_ordena@@Base+0x198>
   11380:	ldr	r0, [r6]
   11384:	bl	10958 <strcmp@plt>
   11388:	cmp	r0, #0
   1138c:	bne	113a8 <teste_lista_ordena@@Base+0x158>
   11390:	ldr	r3, [r6, #8]
   11394:	ldr	r1, [pc, #84]	; 113f0 <teste_lista_ordena@@Base+0x1a0>
   11398:	ldr	r0, [r3]
   1139c:	bl	10958 <strcmp@plt>
   113a0:	cmp	r0, #0
   113a4:	beq	113b4 <teste_lista_ordena@@Base+0x164>
   113a8:	ldr	r0, [pc, #84]	; 11404 <teste_lista_ordena@@Base+0x1b4>
   113ac:	add	r4, r4, #1
   113b0:	bl	10964 <printf@plt>
   113b4:	mov	r0, r5
   113b8:	bl	11600 <lista_apaga@@Base>
   113bc:	cmp	r4, #0
   113c0:	bne	113d8 <teste_lista_ordena@@Base+0x188>
   113c4:	ldr	r0, [pc, #60]	; 11408 <teste_lista_ordena@@Base+0x1b8>
   113c8:	bl	10994 <puts@plt>
   113cc:	mov	r0, r4
   113d0:	add	sp, sp, #8
   113d4:	pop	{r4, r5, r6, pc}
   113d8:	mov	r0, #10
   113dc:	bl	109dc <putchar@plt>
   113e0:	b	113cc <teste_lista_ordena@@Base+0x17c>
   113e4:	andeq	r1, r1, r0, lsr #26
   113e8:	andeq	r1, r1, sl, lsl sp
   113ec:	andeq	r1, r1, r3, lsr #26
   113f0:	andeq	r1, r1, sp, lsl sp
   113f4:	andeq	r1, r1, r7, lsl sp
   113f8:	andeq	r1, r1, r6, lsr #26
   113fc:	andeq	r1, r1, r7, lsr sp
   11400:	andeq	r1, r1, r5, ror #26
   11404:	andeq	r1, r1, r2, lsr #27
   11408:	ldrdeq	r1, [r1], -r8

0001140c <teste_lista_inverte@@Base>:
   1140c:	ldr	r3, [pc, #420]	; 115b8 <teste_lista_inverte@@Base+0x1ac>
   11410:	push	{r0, r1, r4, r5, r6, lr}
   11414:	mov	r0, #5
   11418:	ldr	r2, [pc, #412]	; 115bc <teste_lista_inverte@@Base+0x1b0>
   1141c:	str	r3, [sp, #4]
   11420:	ldr	r3, [pc, #408]	; 115c0 <teste_lista_inverte@@Base+0x1b4>
   11424:	ldr	r1, [pc, #408]	; 115c4 <teste_lista_inverte@@Base+0x1b8>
   11428:	str	r3, [sp]
   1142c:	ldr	r3, [pc, #404]	; 115c8 <teste_lista_inverte@@Base+0x1bc>
   11430:	bl	10b78 <_l@@Base>
   11434:	mov	r5, r0
   11438:	ldr	r0, [pc, #396]	; 115cc <teste_lista_inverte@@Base+0x1c0>
   1143c:	bl	10964 <printf@plt>
   11440:	mov	r0, #0
   11444:	bl	118a4 <lista_inverte@@Base>
   11448:	cmn	r0, #1
   1144c:	moveq	r4, #0
   11450:	beq	11460 <teste_lista_inverte@@Base+0x54>
   11454:	ldr	r0, [pc, #372]	; 115d0 <teste_lista_inverte@@Base+0x1c4>
   11458:	mov	r4, #1
   1145c:	bl	10964 <printf@plt>
   11460:	mov	r0, r5
   11464:	bl	118a4 <lista_inverte@@Base>
   11468:	ldr	r3, [r5, #8]
   1146c:	cmp	r3, #5
   11470:	beq	11480 <teste_lista_inverte@@Base+0x74>
   11474:	ldr	r0, [pc, #344]	; 115d4 <teste_lista_inverte@@Base+0x1c8>
   11478:	add	r4, r4, #1
   1147c:	bl	10964 <printf@plt>
   11480:	ldr	r6, [r5]
   11484:	ldr	r1, [pc, #300]	; 115b8 <teste_lista_inverte@@Base+0x1ac>
   11488:	ldr	r0, [r6]
   1148c:	bl	10958 <strcmp@plt>
   11490:	cmp	r0, #0
   11494:	bne	114f8 <teste_lista_inverte@@Base+0xec>
   11498:	ldr	r6, [r6, #4]
   1149c:	ldr	r1, [pc, #284]	; 115c0 <teste_lista_inverte@@Base+0x1b4>
   114a0:	ldr	r0, [r6]
   114a4:	bl	10958 <strcmp@plt>
   114a8:	cmp	r0, #0
   114ac:	bne	114f8 <teste_lista_inverte@@Base+0xec>
   114b0:	ldr	r6, [r6, #4]
   114b4:	ldr	r1, [pc, #268]	; 115c8 <teste_lista_inverte@@Base+0x1bc>
   114b8:	ldr	r0, [r6]
   114bc:	bl	10958 <strcmp@plt>
   114c0:	cmp	r0, #0
   114c4:	bne	114f8 <teste_lista_inverte@@Base+0xec>
   114c8:	ldr	r6, [r6, #4]
   114cc:	ldr	r1, [pc, #232]	; 115bc <teste_lista_inverte@@Base+0x1b0>
   114d0:	ldr	r0, [r6]
   114d4:	bl	10958 <strcmp@plt>
   114d8:	cmp	r0, #0
   114dc:	bne	114f8 <teste_lista_inverte@@Base+0xec>
   114e0:	ldr	r3, [r6, #4]
   114e4:	ldr	r1, [pc, #216]	; 115c4 <teste_lista_inverte@@Base+0x1b8>
   114e8:	ldr	r0, [r3]
   114ec:	bl	10958 <strcmp@plt>
   114f0:	cmp	r0, #0
   114f4:	beq	11504 <teste_lista_inverte@@Base+0xf8>
   114f8:	ldr	r0, [pc, #216]	; 115d8 <teste_lista_inverte@@Base+0x1cc>
   114fc:	add	r4, r4, #1
   11500:	bl	10964 <printf@plt>
   11504:	ldr	r6, [r5, #4]
   11508:	ldr	r1, [pc, #180]	; 115c4 <teste_lista_inverte@@Base+0x1b8>
   1150c:	ldr	r0, [r6]
   11510:	bl	10958 <strcmp@plt>
   11514:	cmp	r0, #0
   11518:	bne	1157c <teste_lista_inverte@@Base+0x170>
   1151c:	ldr	r6, [r6, #8]
   11520:	ldr	r1, [pc, #148]	; 115bc <teste_lista_inverte@@Base+0x1b0>
   11524:	ldr	r0, [r6]
   11528:	bl	10958 <strcmp@plt>
   1152c:	cmp	r0, #0
   11530:	bne	1157c <teste_lista_inverte@@Base+0x170>
   11534:	ldr	r6, [r6, #8]
   11538:	ldr	r1, [pc, #136]	; 115c8 <teste_lista_inverte@@Base+0x1bc>
   1153c:	ldr	r0, [r6]
   11540:	bl	10958 <strcmp@plt>
   11544:	cmp	r0, #0
   11548:	bne	1157c <teste_lista_inverte@@Base+0x170>
   1154c:	ldr	r6, [r6, #8]
   11550:	ldr	r1, [pc, #104]	; 115c0 <teste_lista_inverte@@Base+0x1b4>
   11554:	ldr	r0, [r6]
   11558:	bl	10958 <strcmp@plt>
   1155c:	cmp	r0, #0
   11560:	bne	1157c <teste_lista_inverte@@Base+0x170>
   11564:	ldr	r3, [r6, #8]
   11568:	ldr	r1, [pc, #72]	; 115b8 <teste_lista_inverte@@Base+0x1ac>
   1156c:	ldr	r0, [r3]
   11570:	bl	10958 <strcmp@plt>
   11574:	cmp	r0, #0
   11578:	beq	11588 <teste_lista_inverte@@Base+0x17c>
   1157c:	ldr	r0, [pc, #88]	; 115dc <teste_lista_inverte@@Base+0x1d0>
   11580:	add	r4, r4, #1
   11584:	bl	10964 <printf@plt>
   11588:	mov	r0, r5
   1158c:	bl	11600 <lista_apaga@@Base>
   11590:	cmp	r4, #0
   11594:	bne	115ac <teste_lista_inverte@@Base+0x1a0>
   11598:	ldr	r0, [pc, #64]	; 115e0 <teste_lista_inverte@@Base+0x1d4>
   1159c:	bl	10994 <puts@plt>
   115a0:	mov	r0, r4
   115a4:	add	sp, sp, #8
   115a8:	pop	{r4, r5, r6, pc}
   115ac:	mov	r0, #10
   115b0:	bl	109dc <putchar@plt>
   115b4:	b	115a0 <teste_lista_inverte@@Base+0x194>
   115b8:	andeq	r1, r1, r0, lsr #26
   115bc:	andeq	r1, r1, sl, lsl sp
   115c0:	andeq	r1, r1, r3, lsr #26
   115c4:	andeq	r1, r1, sp, lsl sp
   115c8:	andeq	r1, r1, r7, lsl sp
   115cc:	andeq	r1, r1, r0, ror #27
   115d0:	andeq	r1, r1, r7, lsr sp
   115d4:	strdeq	r1, [r1], -r2
   115d8:	andeq	r1, r1, lr, lsl lr
   115dc:	andeq	r1, r1, r2, lsr #27
   115e0:	ldrdeq	r1, [r1], -r8

000115e4 <lista_nova@@Base>:
   115e4:	push	{r4, lr}
   115e8:	mov	r0, #12
   115ec:	bl	109a0 <malloc@plt>
   115f0:	cmp	r0, #0
   115f4:	movne	r3, #0
   115f8:	strne	r3, [r0, #8]
   115fc:	pop	{r4, pc}

00011600 <lista_apaga@@Base>:
   11600:	push	{r4, r5, r6, lr}
   11604:	subs	r5, r0, #0
   11608:	popeq	{r4, r5, r6, pc}
   1160c:	ldr	r3, [r5, #8]
   11610:	cmp	r3, #0
   11614:	bne	11624 <lista_apaga@@Base+0x24>
   11618:	mov	r0, r5
   1161c:	pop	{r4, r5, r6, lr}
   11620:	b	10970 <free@plt>
   11624:	ldr	r4, [r5]
   11628:	cmp	r4, #0
   1162c:	ldrne	r6, [r4, #4]
   11630:	beq	11618 <lista_apaga@@Base+0x18>
   11634:	cmp	r6, #0
   11638:	beq	11618 <lista_apaga@@Base+0x18>
   1163c:	ldm	r4, {r0, r6}
   11640:	bl	10970 <free@plt>
   11644:	mov	r0, r4
   11648:	bl	10970 <free@plt>
   1164c:	mov	r4, r6
   11650:	b	11634 <lista_apaga@@Base+0x34>

00011654 <lista_tamanho@@Base>:
   11654:	cmp	r0, #0
   11658:	ldrne	r0, [r0, #8]
   1165c:	mvneq	r0, #0
   11660:	bx	lr

00011664 <lista_inicio@@Base>:
   11664:	cmp	r0, #0
   11668:	ldrne	r0, [r0]
   1166c:	bx	lr

00011670 <lista_fim@@Base>:
   11670:	cmp	r0, #0
   11674:	ldrne	r0, [r0, #4]
   11678:	bx	lr

0001167c <lista_insere@@Base>:
   1167c:	push	{r4, r5, r6, r7, r8, lr}
   11680:	subs	r5, r0, #0
   11684:	beq	116f8 <lista_insere@@Base+0x7c>
   11688:	mov	r0, #12
   1168c:	mov	r7, r1
   11690:	mov	r6, r2
   11694:	bl	109a0 <malloc@plt>
   11698:	mov	r4, r0
   1169c:	mov	r0, r7
   116a0:	bl	109c4 <strlen@plt>
   116a4:	add	r0, r0, #1
   116a8:	bl	109a0 <malloc@plt>
   116ac:	mov	r1, r7
   116b0:	str	r0, [r4]
   116b4:	bl	10988 <strcpy@plt>
   116b8:	ldr	r3, [r5, #8]
   116bc:	cmp	r3, #0
   116c0:	streq	r3, [r4, #4]
   116c4:	streq	r3, [r4, #8]
   116c8:	streq	r4, [r5]
   116cc:	beq	116e8 <lista_insere@@Base+0x6c>
   116d0:	cmp	r6, #0
   116d4:	bne	11700 <lista_insere@@Base+0x84>
   116d8:	ldr	r2, [r5, #4]
   116dc:	str	r6, [r4, #4]
   116e0:	str	r2, [r4, #8]
   116e4:	str	r4, [r2, #4]
   116e8:	str	r4, [r5, #4]
   116ec:	add	r3, r3, #1
   116f0:	str	r3, [r5, #8]
   116f4:	mov	r5, r4
   116f8:	mov	r0, r5
   116fc:	pop	{r4, r5, r6, r7, r8, pc}
   11700:	ldr	r2, [r5]
   11704:	cmp	r2, r6
   11708:	ldrne	r2, [r6, #8]
   1170c:	stmibeq	r4, {r2, r4}
   11710:	streq	r4, [r5]
   11714:	strne	r4, [r2, #4]
   11718:	strne	r6, [r4, #4]
   1171c:	strne	r2, [r4, #8]
   11720:	strne	r4, [r6, #8]
   11724:	b	116ec <lista_insere@@Base+0x70>

00011728 <lista_remove@@Base>:
   11728:	push	{r4, r5, r6, lr}
   1172c:	subs	r4, r1, #0
   11730:	beq	11794 <lista_remove@@Base+0x6c>
   11734:	mov	r5, r0
   11738:	ldr	r3, [r0]
   1173c:	ldr	r6, [r4, #4]
   11740:	cmp	r3, r4
   11744:	moveq	r3, #0
   11748:	streq	r3, [r6, #8]
   1174c:	streq	r6, [r0]
   11750:	beq	11774 <lista_remove@@Base+0x4c>
   11754:	ldr	r2, [r0, #4]
   11758:	ldr	r3, [r4, #8]
   1175c:	cmp	r2, r4
   11760:	moveq	r2, #0
   11764:	strne	r6, [r3, #4]
   11768:	streq	r2, [r3, #4]
   1176c:	strne	r3, [r6, #8]
   11770:	streq	r3, [r0, #4]
   11774:	ldr	r0, [r4]
   11778:	bl	10970 <free@plt>
   1177c:	mov	r0, r4
   11780:	mov	r4, r6
   11784:	bl	10970 <free@plt>
   11788:	ldr	r3, [r5, #8]
   1178c:	sub	r3, r3, #1
   11790:	str	r3, [r5, #8]
   11794:	mov	r0, r4
   11798:	pop	{r4, r5, r6, pc}

0001179c <lista_pesquisa@@Base>:
   1179c:	push	{r4, r5, r6, r7, r8, lr}
   117a0:	subs	r4, r0, #0
   117a4:	beq	11820 <lista_pesquisa@@Base+0x84>
   117a8:	cmp	r2, #0
   117ac:	mov	r6, r1
   117b0:	ldreq	r7, [r4, #8]
   117b4:	mov	r5, r2
   117b8:	ldreq	r4, [r4]
   117bc:	beq	11814 <lista_pesquisa@@Base+0x78>
   117c0:	cmp	r2, #1
   117c4:	bne	1181c <lista_pesquisa@@Base+0x80>
   117c8:	ldmib	r4, {r4, r7}
   117cc:	mov	r5, #0
   117d0:	cmp	r7, r5
   117d4:	ble	1181c <lista_pesquisa@@Base+0x80>
   117d8:	mov	r1, r6
   117dc:	ldr	r0, [r4]
   117e0:	bl	10958 <strcmp@plt>
   117e4:	cmp	r0, #0
   117e8:	beq	11820 <lista_pesquisa@@Base+0x84>
   117ec:	add	r5, r5, #1
   117f0:	ldr	r4, [r4, #8]
   117f4:	b	117d0 <lista_pesquisa@@Base+0x34>
   117f8:	mov	r1, r6
   117fc:	ldr	r0, [r4]
   11800:	bl	10958 <strcmp@plt>
   11804:	cmp	r0, #0
   11808:	beq	11820 <lista_pesquisa@@Base+0x84>
   1180c:	ldr	r4, [r4, #4]
   11810:	add	r5, r5, #1
   11814:	cmp	r7, r5
   11818:	bgt	117f8 <lista_pesquisa@@Base+0x5c>
   1181c:	mov	r4, #0
   11820:	mov	r0, r4
   11824:	pop	{r4, r5, r6, r7, r8, pc}

00011828 <lista_ordena@@Base>:
   11828:	cmp	r0, #0
   1182c:	beq	1189c <lista_ordena@@Base+0x74>
   11830:	ldr	r3, [r0, #8]
   11834:	cmp	r3, #0
   11838:	bne	11844 <lista_ordena@@Base+0x1c>
   1183c:	mov	r0, #0
   11840:	bx	lr
   11844:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11848:	ldm	r0, {r6, sl}
   1184c:	mov	r5, r6
   11850:	cmp	sl, r5
   11854:	bne	11894 <lista_ordena@@Base+0x6c>
   11858:	mov	r0, #0
   1185c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11860:	cmp	r4, r6
   11864:	str	r8, [r4]
   11868:	ldrne	r4, [r4, #8]
   1186c:	str	r7, [r9]
   11870:	ldm	r4, {r7, r9}
   11874:	ldr	r8, [r9]
   11878:	mov	r0, r7
   1187c:	mov	r1, r8
   11880:	bl	10958 <strcmp@plt>
   11884:	cmp	r0, #0
   11888:	bgt	11860 <lista_ordena@@Base+0x38>
   1188c:	ldr	r5, [r5, #4]
   11890:	b	11850 <lista_ordena@@Base+0x28>
   11894:	mov	r4, r5
   11898:	b	11870 <lista_ordena@@Base+0x48>
   1189c:	mvn	r0, #0
   118a0:	bx	lr

000118a4 <lista_inverte@@Base>:
   118a4:	cmp	r0, #0
   118a8:	beq	11918 <lista_inverte@@Base+0x74>
   118ac:	ldr	r3, [r0, #8]
   118b0:	cmp	r3, #0
   118b4:	bne	118c0 <lista_inverte@@Base+0x1c>
   118b8:	mov	r0, #0
   118bc:	bx	lr
   118c0:	push	{r4, r5, r6, r7, r8, lr}
   118c4:	add	r3, r3, r3, lsr #31
   118c8:	mov	r7, #0
   118cc:	asr	r4, r3, #1
   118d0:	ldm	r0, {r5, r6}
   118d4:	cmp	r4, r7
   118d8:	bgt	118e4 <lista_inverte@@Base+0x40>
   118dc:	mov	r0, #0
   118e0:	pop	{r4, r5, r6, r7, r8, pc}
   118e4:	ldr	r0, [r5]
   118e8:	add	r7, r7, #1
   118ec:	bl	1097c <strdup@plt>
   118f0:	mov	r8, r0
   118f4:	ldr	r0, [r6]
   118f8:	bl	1097c <strdup@plt>
   118fc:	str	r0, [r5]
   11900:	mov	r0, r8
   11904:	bl	1097c <strdup@plt>
   11908:	ldr	r5, [r5, #4]
   1190c:	str	r0, [r6]
   11910:	ldr	r6, [r6, #8]
   11914:	b	118d4 <lista_inverte@@Base+0x30>
   11918:	mvn	r0, #0
   1191c:	bx	lr

00011920 <__libc_csu_init@@Base>:
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11924:	mov	r7, r0
   11928:	ldr	r6, [pc, #72]	; 11978 <__libc_csu_init@@Base+0x58>
   1192c:	ldr	r5, [pc, #72]	; 1197c <__libc_csu_init@@Base+0x5c>
   11930:	add	r6, pc, r6
   11934:	add	r5, pc, r5
   11938:	sub	r6, r6, r5
   1193c:	mov	r8, r1
   11940:	mov	r9, r2
   11944:	bl	10938 <strcmp@plt-0x20>
   11948:	asrs	r6, r6, #2
   1194c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11950:	mov	r4, #0
   11954:	add	r4, r4, #1
   11958:	ldr	r3, [r5], #4
   1195c:	mov	r2, r9
   11960:	mov	r1, r8
   11964:	mov	r0, r7
   11968:	blx	r3
   1196c:	cmp	r6, r4
   11970:	bne	11954 <__libc_csu_init@@Base+0x34>
   11974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11978:	ldrdeq	r0, [r1], -ip
   1197c:	ldrdeq	r0, [r1], -r4

00011980 <__libc_csu_fini@@Base>:
   11980:	bx	lr

Disassembly of section .fini:

00011984 <.fini>:
   11984:	push	{r3, lr}
   11988:	pop	{r3, pc}
