
../repos/charybdis/extensions/.libs/extb_combi.so:     file format elf32-littlearm


Disassembly of section .init:

00000368 <_init>:
 368:	push	{r3, lr}
 36c:	bl	3ac <call_weak_fn>
 370:	pop	{r3, pc}

Disassembly of section .plt:

00000374 <.plt>:
 374:	push	{lr}		; (str lr, [sp, #-4]!)
 378:	ldr	lr, [pc, #4]	; 384 <.plt+0x10>
 37c:	add	lr, pc, lr
 380:	ldr	pc, [lr, #8]!
 384:	.word	0x00010c7c

00000388 <__cxa_finalize@plt>:
 388:	add	ip, pc, #0, 12
 38c:	add	ip, ip, #16, 20	; 0x10000
 390:	ldr	pc, [ip, #3196]!	; 0xc7c

00000394 <__gmon_start__@plt>:
 394:	add	ip, pc, #0, 12
 398:	add	ip, ip, #16, 20	; 0x10000
 39c:	ldr	pc, [ip, #3188]!	; 0xc74

000003a0 <strlen@plt>:
 3a0:	add	ip, pc, #0, 12
 3a4:	add	ip, ip, #16, 20	; 0x10000
 3a8:	ldr	pc, [ip, #3180]!	; 0xc6c

Disassembly of section .text:

000003ac <call_weak_fn>:
 3ac:	ldr	r3, [pc, #20]	; 3c8 <call_weak_fn+0x1c>
 3b0:	ldr	r2, [pc, #20]	; 3cc <call_weak_fn+0x20>
 3b4:	add	r3, pc, r3
 3b8:	ldr	r2, [r3, r2]
 3bc:	cmp	r2, #0
 3c0:	bxeq	lr
 3c4:	b	394 <__gmon_start__@plt>
 3c8:	.word	0x00010c44
 3cc:	.word	0x00000020

000003d0 <deregister_tm_clones>:
 3d0:	ldr	r0, [pc, #44]	; 404 <deregister_tm_clones+0x34>
 3d4:	ldr	r3, [pc, #44]	; 408 <deregister_tm_clones+0x38>
 3d8:	add	r0, pc, r0
 3dc:	add	r3, pc, r3
 3e0:	cmp	r3, r0
 3e4:	ldr	r3, [pc, #32]	; 40c <deregister_tm_clones+0x3c>
 3e8:	add	r3, pc, r3
 3ec:	bxeq	lr
 3f0:	ldr	r2, [pc, #24]	; 410 <deregister_tm_clones+0x40>
 3f4:	ldr	r3, [r3, r2]
 3f8:	cmp	r3, #0
 3fc:	bxeq	lr
 400:	bx	r3
 404:	.word	0x00010c78
 408:	.word	0x00010c74
 40c:	.word	0x00010c10
 410:	.word	0x0000001c

00000414 <register_tm_clones>:
 414:	ldr	r0, [pc, #56]	; 454 <register_tm_clones+0x40>
 418:	ldr	r3, [pc, #56]	; 458 <register_tm_clones+0x44>
 41c:	add	r0, pc, r0
 420:	add	r3, pc, r3
 424:	sub	r1, r3, r0
 428:	ldr	r3, [pc, #44]	; 45c <register_tm_clones+0x48>
 42c:	asr	r1, r1, #2
 430:	add	r3, pc, r3
 434:	add	r1, r1, r1, lsr #31
 438:	asrs	r1, r1, #1
 43c:	bxeq	lr
 440:	ldr	r2, [pc, #24]	; 460 <register_tm_clones+0x4c>
 444:	ldr	r3, [r3, r2]
 448:	cmp	r3, #0
 44c:	bxeq	lr
 450:	bx	r3
 454:	.word	0x00010c34
 458:	.word	0x00010c30
 45c:	.word	0x00010bc8
 460:	.word	0x00000028

00000464 <__do_global_dtors_aux>:
 464:	ldr	r3, [pc, #76]	; 4b8 <__do_global_dtors_aux+0x54>
 468:	ldr	r2, [pc, #76]	; 4bc <__do_global_dtors_aux+0x58>
 46c:	add	r3, pc, r3
 470:	add	r2, pc, r2
 474:	ldrb	r3, [r3]
 478:	cmp	r3, #0
 47c:	bxne	lr
 480:	ldr	r3, [pc, #56]	; 4c0 <__do_global_dtors_aux+0x5c>
 484:	push	{r4, lr}
 488:	ldr	r3, [r2, r3]
 48c:	cmp	r3, #0
 490:	beq	4a0 <__do_global_dtors_aux+0x3c>
 494:	ldr	r3, [pc, #40]	; 4c4 <__do_global_dtors_aux+0x60>
 498:	ldr	r0, [pc, r3]
 49c:	bl	388 <__cxa_finalize@plt>
 4a0:	bl	3d0 <deregister_tm_clones>
 4a4:	ldr	r3, [pc, #28]	; 4c8 <__do_global_dtors_aux+0x64>
 4a8:	mov	r2, #1
 4ac:	add	r3, pc, r3
 4b0:	strb	r2, [r3]
 4b4:	pop	{r4, pc}
 4b8:	.word	0x00010be4
 4bc:	.word	0x00010b88
 4c0:	.word	0x00000018
 4c4:	.word	0x00010b8c
 4c8:	.word	0x00010ba4

000004cc <frame_dummy>:
 4cc:	b	414 <register_tm_clones>

000004d0 <_modinit>:
 4d0:	ldr	r3, [pc, #40]	; 500 <_modinit+0x30>
 4d4:	add	r3, pc, r3
 4d8:	ldr	r2, [pc, #36]	; 504 <_modinit+0x34>
 4dc:	ldr	r3, [r3, r2]
 4e0:	ldr	r2, [pc, #32]	; 508 <_modinit+0x38>
 4e4:	add	r2, pc, r2
 4e8:	str	r2, [r3, #152]	; 0x98
 4ec:	ldr	r2, [pc, #24]	; 50c <_modinit+0x3c>
 4f0:	add	r2, pc, r2
 4f4:	str	r2, [r3, #496]	; 0x1f0
 4f8:	mov	r0, #0
 4fc:	bx	lr
 500:	.word	0x00010b24
 504:	.word	0x00000024
 508:	.word	0x00000454
 50c:	.word	0x0000042c

00000510 <_moddeinit>:
 510:	ldr	r3, [pc, #24]	; 530 <_moddeinit+0x20>
 514:	add	r3, pc, r3
 518:	ldr	r2, [pc, #20]	; 534 <_moddeinit+0x24>
 51c:	ldr	r3, [r3, r2]
 520:	mov	r2, #0
 524:	str	r2, [r3, #152]	; 0x98
 528:	str	r2, [r3, #496]	; 0x1f0
 52c:	bx	lr
 530:	.word	0x00010ae4
 534:	.word	0x00000024

00000538 <eb_combi>:
 538:	strd	r4, [sp, #-36]!	; 0xffffffdc
 53c:	strd	r6, [sp, #8]
 540:	strd	r8, [sp, #16]
 544:	strd	sl, [sp, #24]
 548:	str	lr, [sp, #32]
 54c:	sub	sp, sp, #228	; 0xe4
 550:	str	r1, [sp, #8]
 554:	str	r2, [sp, #12]
 558:	str	r3, [sp, #16]
 55c:	ldrb	sl, [sp, #264]	; 0x108
 560:	ldr	r5, [pc, #904]	; 8f0 <eb_combi+0x3b8>
 564:	add	r5, pc, r5
 568:	ldr	r3, [pc, #900]	; 8f4 <eb_combi+0x3bc>
 56c:	add	r3, pc, r3
 570:	ldr	r7, [r3]
 574:	cmp	r7, #4
 578:	movle	r6, #0
 57c:	movgt	r6, #1
 580:	cmp	r0, #0
 584:	moveq	r6, #1
 588:	cmp	r6, #0
 58c:	mvnne	r0, #0
 590:	bne	658 <eb_combi+0x120>
 594:	mov	r9, r0
 598:	ldrb	r8, [r0]
 59c:	cmp	r8, #0
 5a0:	mvneq	r0, #0
 5a4:	beq	658 <eb_combi+0x120>
 5a8:	mov	r0, r9
 5ac:	bl	3a0 <strlen@plt>
 5b0:	cmp	r0, #195	; 0xc3
 5b4:	mvnhi	r0, #0
 5b8:	bhi	658 <eb_combi+0x120>
 5bc:	add	r4, r9, r0
 5c0:	cmp	r8, #40	; 0x28
 5c4:	beq	5f8 <eb_combi+0xc0>
 5c8:	cmp	r9, r4
 5cc:	mvneq	r0, #0
 5d0:	beq	658 <eb_combi+0x120>
 5d4:	add	r7, r7, #1
 5d8:	ldr	r3, [pc, #792]	; 8f8 <eb_combi+0x3c0>
 5dc:	add	r3, pc, r3
 5e0:	str	r7, [r3]
 5e4:	mov	ip, r6
 5e8:	mov	r7, #10
 5ec:	str	r6, [sp, #4]
 5f0:	str	sl, [sp, #20]
 5f4:	b	800 <eb_combi+0x2c8>
 5f8:	ldrb	r3, [r4, #-1]
 5fc:	cmp	r3, #41	; 0x29
 600:	mvnne	r0, #0
 604:	bne	658 <eb_combi+0x120>
 608:	add	r9, r9, #1
 60c:	sub	r4, r4, #1
 610:	b	5c8 <eb_combi+0x90>
 614:	add	r9, r9, #1
 618:	cmp	r4, r9
 61c:	beq	628 <eb_combi+0xf0>
 620:	mov	sl, #1
 624:	b	810 <eb_combi+0x2d8>
 628:	ldr	r2, [pc, #716]	; 8fc <eb_combi+0x3c4>
 62c:	add	r2, pc, r2
 630:	ldr	r3, [r2]
 634:	sub	r3, r3, #1
 638:	str	r3, [r2]
 63c:	b	654 <eb_combi+0x11c>
 640:	ldr	r2, [pc, #696]	; 900 <eb_combi+0x3c8>
 644:	add	r2, pc, r2
 648:	ldr	r3, [r2]
 64c:	sub	r3, r3, #1
 650:	str	r3, [r2]
 654:	mvn	r0, #0
 658:	add	sp, sp, #228	; 0xe4
 65c:	ldrd	r4, [sp]
 660:	ldrd	r6, [sp, #8]
 664:	ldrd	r8, [sp, #16]
 668:	ldrd	sl, [sp, #24]
 66c:	add	sp, sp, #32
 670:	pop	{pc}		; (ldr pc, [sp], #4)
 674:	add	r6, r9, #2
 678:	cmp	r4, r6
 67c:	beq	7ac <eb_combi+0x274>
 680:	add	r3, r9, #2
 684:	ldr	fp, [sp, #4]
 688:	add	r2, sp, #28
 68c:	mov	r0, #0
 690:	mov	r9, #40	; 0x28
 694:	mov	lr, #92	; 0x5c
 698:	b	71c <eb_combi+0x1e4>
 69c:	cmp	r0, #0
 6a0:	bne	6b8 <eb_combi+0x180>
 6a4:	mov	r6, r4
 6a8:	mov	r3, #0
 6ac:	strb	r3, [r2]
 6b0:	add	r0, sp, #28
 6b4:	b	83c <eb_combi+0x304>
 6b8:	ldr	r2, [pc, #580]	; 904 <eb_combi+0x3cc>
 6bc:	add	r2, pc, r2
 6c0:	ldr	r3, [r2]
 6c4:	sub	r3, r3, #1
 6c8:	str	r3, [r2]
 6cc:	b	654 <eb_combi+0x11c>
 6d0:	ldrb	r1, [r3]
 6d4:	cmp	r1, #41	; 0x29
 6d8:	beq	768 <eb_combi+0x230>
 6dc:	bls	6fc <eb_combi+0x1c4>
 6e0:	cmp	r1, #44	; 0x2c
 6e4:	beq	798 <eb_combi+0x260>
 6e8:	cmp	r1, #92	; 0x5c
 6ec:	moveq	fp, #1
 6f0:	beq	70c <eb_combi+0x1d4>
 6f4:	strb	r1, [r2], #1
 6f8:	b	70c <eb_combi+0x1d4>
 6fc:	cmp	r1, #40	; 0x28
 700:	addeq	r0, r0, #1
 704:	strbeq	r9, [r2], #1
 708:	bne	6f4 <eb_combi+0x1bc>
 70c:	add	r6, r3, #1
 710:	add	r3, r3, #1
 714:	cmp	r6, r4
 718:	beq	69c <eb_combi+0x164>
 71c:	mov	r6, r3
 720:	cmp	fp, #0
 724:	beq	6d0 <eb_combi+0x198>
 728:	ldrb	r1, [r3]
 72c:	cmp	r1, #92	; 0x5c
 730:	cmpne	r1, #44	; 0x2c
 734:	movne	r6, #1
 738:	moveq	r6, #0
 73c:	sub	fp, r1, #40	; 0x28
 740:	uxtb	fp, fp
 744:	cmp	fp, #1
 748:	movls	r6, #0
 74c:	andhi	r6, r6, #1
 750:	cmp	r6, #0
 754:	strbne	lr, [r2], #1
 758:	add	r6, r3, #1
 75c:	strb	r1, [r2], #1
 760:	ldr	fp, [sp, #4]
 764:	b	710 <eb_combi+0x1d8>
 768:	cmp	r0, #0
 76c:	beq	780 <eb_combi+0x248>
 770:	sub	r0, r0, #1
 774:	mov	r1, #41	; 0x29
 778:	strb	r1, [r2], #1
 77c:	b	70c <eb_combi+0x1d4>
 780:	ldr	r2, [pc, #384]	; 908 <eb_combi+0x3d0>
 784:	add	r2, pc, r2
 788:	ldr	r3, [r2]
 78c:	sub	r3, r3, #1
 790:	str	r3, [r2]
 794:	b	654 <eb_combi+0x11c>
 798:	cmp	r0, #0
 79c:	beq	6a8 <eb_combi+0x170>
 7a0:	mov	r1, #44	; 0x2c
 7a4:	strb	r1, [r2], #1
 7a8:	b	70c <eb_combi+0x1d4>
 7ac:	add	r2, sp, #28
 7b0:	b	6a8 <eb_combi+0x170>
 7b4:	ldr	r2, [pc, #336]	; 90c <eb_combi+0x3d4>
 7b8:	add	r2, pc, r2
 7bc:	ldr	r3, [r2]
 7c0:	sub	r3, r3, #1
 7c4:	str	r3, [r2]
 7c8:	b	654 <eb_combi+0x11c>
 7cc:	ldr	r3, [sp, #20]
 7d0:	cmp	r3, #0
 7d4:	eorne	ip, ip, #1
 7d8:	cmp	r6, r4
 7dc:	beq	8ac <eb_combi+0x374>
 7e0:	mov	r9, r6
 7e4:	ldrb	r3, [r9], #1
 7e8:	cmp	r3, #44	; 0x2c
 7ec:	bne	87c <eb_combi+0x344>
 7f0:	cmp	r4, r9
 7f4:	beq	894 <eb_combi+0x35c>
 7f8:	subs	r7, r7, #1
 7fc:	beq	8d4 <eb_combi+0x39c>
 800:	ldrb	r3, [r9]
 804:	cmp	r3, #126	; 0x7e
 808:	beq	614 <eb_combi+0xdc>
 80c:	ldr	sl, [sp, #4]
 810:	ldr	r3, [pc, #248]	; 910 <eb_combi+0x3d8>
 814:	ldr	r3, [r5, r3]
 818:	ldrb	r2, [r9]
 81c:	ldr	r8, [r3, r2, lsl #2]
 820:	cmp	r8, #0
 824:	beq	640 <eb_combi+0x108>
 828:	ldrb	r3, [r9, #1]
 82c:	cmp	r3, #58	; 0x3a
 830:	beq	674 <eb_combi+0x13c>
 834:	add	r6, r9, #1
 838:	mov	r0, #0
 83c:	cmp	ip, #0
 840:	bne	7d8 <eb_combi+0x2a0>
 844:	ldr	r3, [sp, #16]
 848:	ldr	r2, [sp, #12]
 84c:	ldr	r1, [sp, #8]
 850:	blx	r8
 854:	cmn	r0, #1
 858:	beq	7b4 <eb_combi+0x27c>
 85c:	cmp	sl, #0
 860:	clzne	ip, r0
 864:	lsrne	ip, ip, #5
 868:	bne	7cc <eb_combi+0x294>
 86c:	cmp	r0, #1
 870:	movne	ip, #0
 874:	moveq	ip, #1
 878:	b	7cc <eb_combi+0x294>
 87c:	ldr	r2, [pc, #144]	; 914 <eb_combi+0x3dc>
 880:	add	r2, pc, r2
 884:	ldr	r3, [r2]
 888:	sub	r3, r3, #1
 88c:	str	r3, [r2]
 890:	b	654 <eb_combi+0x11c>
 894:	ldr	r2, [pc, #124]	; 918 <eb_combi+0x3e0>
 898:	add	r2, pc, r2
 89c:	ldr	r3, [r2]
 8a0:	sub	r3, r3, #1
 8a4:	str	r3, [r2]
 8a8:	b	654 <eb_combi+0x11c>
 8ac:	ldr	sl, [sp, #20]
 8b0:	ldr	r2, [pc, #100]	; 91c <eb_combi+0x3e4>
 8b4:	add	r2, pc, r2
 8b8:	ldr	r3, [r2]
 8bc:	sub	r3, r3, #1
 8c0:	str	r3, [r2]
 8c4:	cmp	sl, #0
 8c8:	eorne	r0, ip, #1
 8cc:	moveq	r0, ip
 8d0:	b	658 <eb_combi+0x120>
 8d4:	ldr	r2, [pc, #68]	; 920 <eb_combi+0x3e8>
 8d8:	add	r2, pc, r2
 8dc:	ldr	r3, [r2]
 8e0:	sub	r3, r3, #1
 8e4:	str	r3, [r2]
 8e8:	mvn	r0, #0
 8ec:	b	658 <eb_combi+0x120>
 8f0:	.word	0x00010a94
 8f4:	.word	0x00010ae8
 8f8:	.word	0x00010a78
 8fc:	.word	0x00010a28
 900:	.word	0x00010a10
 904:	.word	0x00010998
 908:	.word	0x000108d0
 90c:	.word	0x0001089c
 910:	.word	0x00000024
 914:	.word	0x000107d4
 918:	.word	0x000107bc
 91c:	.word	0x000107a0
 920:	.word	0x0001077c

00000924 <eb_or>:
 924:	push	{lr}		; (str lr, [sp, #-4]!)
 928:	sub	sp, sp, #12
 92c:	mov	ip, #0
 930:	str	ip, [sp]
 934:	bl	538 <eb_combi>
 938:	add	sp, sp, #12
 93c:	pop	{pc}		; (ldr pc, [sp], #4)

00000940 <eb_and>:
 940:	push	{lr}		; (str lr, [sp, #-4]!)
 944:	sub	sp, sp, #12
 948:	mov	ip, #1
 94c:	str	ip, [sp]
 950:	bl	538 <eb_combi>
 954:	add	sp, sp, #12
 958:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0000095c <_fini>:
 95c:	push	{r3, lr}
 960:	pop	{r3, pc}
