
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

000112e0 <.init>:
   112e0:	push	{r3, lr}
   112e4:	bl	1163c <__assert_fail@plt+0x48>
   112e8:	pop	{r3, pc}

Disassembly of section .plt:

000112ec <fdopen@plt-0x14>:
   112ec:	push	{lr}		; (str lr, [sp, #-4]!)
   112f0:	ldr	lr, [pc, #4]	; 112fc <fdopen@plt-0x4>
   112f4:	add	lr, pc, lr
   112f8:	ldr	pc, [lr, #8]!
   112fc:	andeq	ip, r1, r4, lsl #26

00011300 <fdopen@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #28, 20	; 0x1c000
   11308:	ldr	pc, [ip, #3332]!	; 0xd04

0001130c <calloc@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #28, 20	; 0x1c000
   11314:	ldr	pc, [ip, #3324]!	; 0xcfc

00011318 <fputs_unlocked@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #28, 20	; 0x1c000
   11320:	ldr	pc, [ip, #3316]!	; 0xcf4

00011324 <inet_aton@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #28, 20	; 0x1c000
   1132c:	ldr	pc, [ip, #3308]!	; 0xcec

00011330 <strcmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #28, 20	; 0x1c000
   11338:	ldr	pc, [ip, #3300]!	; 0xce4

0001133c <strtol@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #28, 20	; 0x1c000
   11344:	ldr	pc, [ip, #3292]!	; 0xcdc

00011348 <printf@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #28, 20	; 0x1c000
   11350:	ldr	pc, [ip, #3284]!	; 0xcd4

00011354 <memmove@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #28, 20	; 0x1c000
   1135c:	ldr	pc, [ip, #3276]!	; 0xccc

00011360 <strchrnul@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #28, 20	; 0x1c000
   11368:	ldr	pc, [ip, #3268]!	; 0xcc4

0001136c <free@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #28, 20	; 0x1c000
   11374:	ldr	pc, [ip, #3260]!	; 0xcbc

00011378 <gai_strerror@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #28, 20	; 0x1c000
   11380:	ldr	pc, [ip, #3252]!	; 0xcb4

00011384 <fgets@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #28, 20	; 0x1c000
   1138c:	ldr	pc, [ip, #3244]!	; 0xcac

00011390 <ferror@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #28, 20	; 0x1c000
   11398:	ldr	pc, [ip, #3236]!	; 0xca4

0001139c <strndup@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #28, 20	; 0x1c000
   113a4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113a8 <memcpy@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #28, 20	; 0x1c000
   113b0:	ldr	pc, [ip, #3220]!	; 0xc94

000113b4 <signal@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #28, 20	; 0x1c000
   113bc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113c0 <fwrite_unlocked@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #28, 20	; 0x1c000
   113c8:	ldr	pc, [ip, #3204]!	; 0xc84

000113cc <sleep@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #28, 20	; 0x1c000
   113d4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113d8 <realloc@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #28, 20	; 0x1c000
   113e0:	ldr	pc, [ip, #3188]!	; 0xc74

000113e4 <strcasecmp@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #28, 20	; 0x1c000
   113ec:	ldr	pc, [ip, #3180]!	; 0xc6c

000113f0 <funlockfile@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #28, 20	; 0x1c000
   113f8:	ldr	pc, [ip, #3172]!	; 0xc64

000113fc <fwrite@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #28, 20	; 0x1c000
   11404:	ldr	pc, [ip, #3164]!	; 0xc5c

00011408 <strcat@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #28, 20	; 0x1c000
   11410:	ldr	pc, [ip, #3156]!	; 0xc54

00011414 <strcpy@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #28, 20	; 0x1c000
   1141c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011420 <error@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #28, 20	; 0x1c000
   11428:	ldr	pc, [ip, #3140]!	; 0xc44

0001142c <getenv@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #28, 20	; 0x1c000
   11434:	ldr	pc, [ip, #3132]!	; 0xc3c

00011438 <puts@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #28, 20	; 0x1c000
   11440:	ldr	pc, [ip, #3124]!	; 0xc34

00011444 <malloc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #28, 20	; 0x1c000
   1144c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011450 <__libc_start_main@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #28, 20	; 0x1c000
   11458:	ldr	pc, [ip, #3108]!	; 0xc24

0001145c <strerror@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #28, 20	; 0x1c000
   11464:	ldr	pc, [ip, #3100]!	; 0xc1c

00011468 <__ctype_tolower_loc@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #28, 20	; 0x1c000
   11470:	ldr	pc, [ip, #3092]!	; 0xc14

00011474 <__gmon_start__@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #28, 20	; 0x1c000
   1147c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011480 <__ctype_b_loc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #28, 20	; 0x1c000
   11488:	ldr	pc, [ip, #3076]!	; 0xc04

0001148c <exit@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #28, 20	; 0x1c000
   11494:	ldr	pc, [ip, #3068]!	; 0xbfc

00011498 <bcmp@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #28, 20	; 0x1c000
   114a0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114a4 <strlen@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #28, 20	; 0x1c000
   114ac:	ldr	pc, [ip, #3052]!	; 0xbec

000114b0 <strchr@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #28, 20	; 0x1c000
   114b8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114bc <fprintf@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #28, 20	; 0x1c000
   114c4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114c8 <__errno_location@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #28, 20	; 0x1c000
   114d0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114d4 <strncasecmp@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #28, 20	; 0x1c000
   114dc:	ldr	pc, [ip, #3020]!	; 0xbcc

000114e0 <strerror_r@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #28, 20	; 0x1c000
   114e8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114ec <memset@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #28, 20	; 0x1c000
   114f4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114f8 <write@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #28, 20	; 0x1c000
   11500:	ldr	pc, [ip, #2996]!	; 0xbb4

00011504 <memchr@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #28, 20	; 0x1c000
   1150c:	ldr	pc, [ip, #2988]!	; 0xbac

00011510 <__overflow@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #28, 20	; 0x1c000
   11518:	ldr	pc, [ip, #2980]!	; 0xba4

0001151c <strrchr@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #28, 20	; 0x1c000
   11524:	ldr	pc, [ip, #2972]!	; 0xb9c

00011528 <vfprintf@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #28, 20	; 0x1c000
   11530:	ldr	pc, [ip, #2964]!	; 0xb94

00011534 <fputc@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #28, 20	; 0x1c000
   1153c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011540 <sscanf@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #28, 20	; 0x1c000
   11548:	ldr	pc, [ip, #2948]!	; 0xb84

0001154c <sprintf@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #28, 20	; 0x1c000
   11554:	ldr	pc, [ip, #2940]!	; 0xb7c

00011558 <flockfile@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #28, 20	; 0x1c000
   11560:	ldr	pc, [ip, #2932]!	; 0xb74

00011564 <vsnprintf@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #28, 20	; 0x1c000
   1156c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011570 <qsort@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #28, 20	; 0x1c000
   11578:	ldr	pc, [ip, #2916]!	; 0xb64

0001157c <strpbrk@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #28, 20	; 0x1c000
   11584:	ldr	pc, [ip, #2908]!	; 0xb5c

00011588 <freeaddrinfo@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #28, 20	; 0x1c000
   11590:	ldr	pc, [ip, #2900]!	; 0xb54

00011594 <getaddrinfo@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #28, 20	; 0x1c000
   1159c:	ldr	pc, [ip, #2892]!	; 0xb4c

000115a0 <socket@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #28, 20	; 0x1c000
   115a8:	ldr	pc, [ip, #2884]!	; 0xb44

000115ac <gethostbyname@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #28, 20	; 0x1c000
   115b4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115b8 <fputs@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #28, 20	; 0x1c000
   115c0:	ldr	pc, [ip, #2868]!	; 0xb34

000115c4 <strncmp@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #28, 20	; 0x1c000
   115cc:	ldr	pc, [ip, #2860]!	; 0xb2c

000115d0 <abort@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #28, 20	; 0x1c000
   115d8:	ldr	pc, [ip, #2852]!	; 0xb24

000115dc <close@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #28, 20	; 0x1c000
   115e4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115e8 <connect@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #28, 20	; 0x1c000
   115f0:	ldr	pc, [ip, #2836]!	; 0xb14

000115f4 <__assert_fail@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #28, 20	; 0x1c000
   115fc:	ldr	pc, [ip, #2828]!	; 0xb0c

Disassembly of section .text:

00011600 <argp_parse@@Base-0x18f4>:
   11600:	mov	fp, #0
   11604:	mov	lr, #0
   11608:	pop	{r1}		; (ldr r1, [sp], #4)
   1160c:	mov	r2, sp
   11610:	push	{r2}		; (str r2, [sp, #-4]!)
   11614:	push	{r0}		; (str r0, [sp, #-4]!)
   11618:	ldr	ip, [pc, #16]	; 11630 <__assert_fail@plt+0x3c>
   1161c:	push	{ip}		; (str ip, [sp, #-4]!)
   11620:	ldr	r0, [pc, #12]	; 11634 <__assert_fail@plt+0x40>
   11624:	ldr	r3, [pc, #12]	; 11638 <__assert_fail@plt+0x44>
   11628:	bl	11450 <__libc_start_main@plt>
   1162c:	bl	115d0 <abort@plt>
   11630:	andeq	sl, r1, r4, lsr lr
   11634:	strdeq	r1, [r1], -r0
   11638:	ldrdeq	sl, [r1], -r4
   1163c:	ldr	r3, [pc, #20]	; 11658 <__assert_fail@plt+0x64>
   11640:	ldr	r2, [pc, #20]	; 1165c <__assert_fail@plt+0x68>
   11644:	add	r3, pc, r3
   11648:	ldr	r2, [r3, r2]
   1164c:	cmp	r2, #0
   11650:	bxeq	lr
   11654:	b	11474 <__gmon_start__@plt>
   11658:			; <UNDEFINED> instruction: 0x0001c9b4
   1165c:	andeq	r0, r0, ip, lsl #2
   11660:	ldr	r0, [pc, #24]	; 11680 <__assert_fail@plt+0x8c>
   11664:	ldr	r3, [pc, #24]	; 11684 <__assert_fail@plt+0x90>
   11668:	cmp	r3, r0
   1166c:	bxeq	lr
   11670:	ldr	r3, [pc, #16]	; 11688 <__assert_fail@plt+0x94>
   11674:	cmp	r3, #0
   11678:	bxeq	lr
   1167c:	bx	r3
   11680:	andeq	r1, r3, ip, lsr #17
   11684:	andeq	r1, r3, ip, lsr #17
   11688:	andeq	r0, r0, r0
   1168c:	ldr	r0, [pc, #36]	; 116b8 <__assert_fail@plt+0xc4>
   11690:	ldr	r1, [pc, #36]	; 116bc <__assert_fail@plt+0xc8>
   11694:	sub	r1, r1, r0
   11698:	asr	r1, r1, #2
   1169c:	add	r1, r1, r1, lsr #31
   116a0:	asrs	r1, r1, #1
   116a4:	bxeq	lr
   116a8:	ldr	r3, [pc, #16]	; 116c0 <__assert_fail@plt+0xcc>
   116ac:	cmp	r3, #0
   116b0:	bxeq	lr
   116b4:	bx	r3
   116b8:	andeq	r1, r3, ip, lsr #17
   116bc:	andeq	r1, r3, ip, lsr #17
   116c0:	andeq	r0, r0, r0
   116c4:	push	{r4, lr}
   116c8:	ldr	r4, [pc, #24]	; 116e8 <__assert_fail@plt+0xf4>
   116cc:	ldrb	r3, [r4]
   116d0:	cmp	r3, #0
   116d4:	popne	{r4, pc}
   116d8:	bl	11660 <__assert_fail@plt+0x6c>
   116dc:	mov	r3, #1
   116e0:	strb	r3, [r4]
   116e4:	pop	{r4, pc}
   116e8:	andeq	r1, r3, r0, asr #17
   116ec:	b	1168c <__assert_fail@plt+0x98>
   116f0:	push	{fp, lr}
   116f4:	mov	fp, sp
   116f8:	sub	sp, sp, #16
   116fc:	mov	r9, r0
   11700:	ldr	r0, [r1]
   11704:	mov	r7, r1
   11708:	bl	147bc <_obstack_memory_used@@Base+0x60>
   1170c:	movw	r0, #17104	; 0x42d0
   11710:	movw	r8, #6412	; 0x190c
   11714:	movw	r3, #21560	; 0x5438
   11718:	mov	r1, #0
   1171c:	mov	r2, #0
   11720:	mov	r4, #0
   11724:	movt	r0, #1
   11728:	movt	r8, #3
   1172c:	movt	r3, #1
   11730:	str	r0, [sp]
   11734:	mov	r0, r8
   11738:	bl	143c0 <_obstack_begin@@Base>
   1173c:	movw	r0, #6460	; 0x193c
   11740:	movw	r1, #49179	; 0xc01b
   11744:	movw	r6, #6164	; 0x1814
   11748:	movt	r0, #3
   1174c:	movt	r1, #1
   11750:	movt	r6, #3
   11754:	str	r1, [r0]
   11758:	movw	r0, #48902	; 0xbf06
   1175c:	add	r1, r6, #4
   11760:	movt	r0, #1
   11764:	bl	141dc <argp_parse@@Base+0x12e8>
   11768:	sub	r0, fp, #4
   1176c:	mov	r1, r9
   11770:	mov	r2, r7
   11774:	mov	r3, #8
   11778:	stm	sp, {r0, r4}
   1177c:	add	r0, r6, #28
   11780:	bl	12ef4 <argp_parse@@Base>
   11784:	ldr	r0, [r8, #12]
   11788:	ldr	r1, [r8, #16]
   1178c:	cmp	r1, r0
   11790:	bne	117a4 <__assert_fail@plt+0x1b0>
   11794:	mov	r0, r8
   11798:	mov	r1, #1
   1179c:	bl	14514 <_obstack_newchunk@@Base>
   117a0:	ldr	r0, [r8, #12]
   117a4:	add	r1, r0, #1
   117a8:	str	r1, [r8, #12]
   117ac:	strb	r4, [r0]
   117b0:	ldr	r1, [r8, #8]
   117b4:	ldr	r0, [r8, #12]
   117b8:	cmp	r0, r1
   117bc:	str	r1, [sp, #8]
   117c0:	bne	117d0 <__assert_fail@plt+0x1dc>
   117c4:	ldrb	r1, [r8, #40]	; 0x28
   117c8:	orr	r1, r1, #2
   117cc:	strb	r1, [r8, #40]	; 0x28
   117d0:	ldr	r3, [r8, #24]
   117d4:	ldr	r1, [r8, #4]
   117d8:	ldr	r2, [r8, #16]
   117dc:	movw	r5, #6340	; 0x18c4
   117e0:	ldr	r4, [fp, #-4]
   117e4:	movt	r5, #3
   117e8:	add	r0, r3, r0
   117ec:	sub	r6, r9, r4
   117f0:	bic	r0, r0, r3
   117f4:	sub	r3, r0, r1
   117f8:	sub	r1, r2, r1
   117fc:	cmp	r3, r1
   11800:	movhi	r0, r2
   11804:	str	r0, [r8, #8]
   11808:	str	r0, [r8, #12]
   1180c:	ldr	r0, [r5, #12]
   11810:	orrs	r1, r6, r0
   11814:	bne	11830 <__assert_fail@plt+0x23c>
   11818:	movw	r2, #49203	; 0xc033
   1181c:	mov	r0, #1
   11820:	mov	r1, #0
   11824:	movt	r2, #1
   11828:	bl	11420 <error@plt>
   1182c:	ldr	r0, [r5, #12]
   11830:	cmp	r0, #0
   11834:	bne	118d8 <__assert_fail@plt+0x2e4>
   11838:	cmp	r6, #0
   1183c:	beq	118d8 <__assert_fail@plt+0x2e4>
   11840:	sub	r0, r4, r9
   11844:	add	sl, r7, r4, lsl #2
   11848:	mov	r4, #32
   1184c:	add	r6, r0, #1
   11850:	b	11864 <__assert_fail@plt+0x270>
   11854:	add	r1, r0, #1
   11858:	add	r6, r6, #1
   1185c:	str	r1, [r8, #12]
   11860:	strb	r4, [r0]
   11864:	ldr	r5, [sl], #4
   11868:	mov	r0, r5
   1186c:	bl	114a4 <strlen@plt>
   11870:	mov	r7, r0
   11874:	ldr	r0, [r8, #12]
   11878:	ldr	r1, [r8, #16]
   1187c:	sub	r1, r1, r0
   11880:	cmp	r1, r7
   11884:	bcs	11898 <__assert_fail@plt+0x2a4>
   11888:	mov	r0, r8
   1188c:	mov	r1, r7
   11890:	bl	14514 <_obstack_newchunk@@Base>
   11894:	ldr	r0, [r8, #12]
   11898:	mov	r1, r5
   1189c:	mov	r2, r7
   118a0:	bl	113a8 <memcpy@plt>
   118a4:	ldr	r0, [r8, #12]
   118a8:	cmp	r6, #0
   118ac:	add	r0, r0, r7
   118b0:	str	r0, [r8, #12]
   118b4:	beq	118d8 <__assert_fail@plt+0x2e4>
   118b8:	ldr	r1, [r8, #16]
   118bc:	cmp	r1, r0
   118c0:	bne	11854 <__assert_fail@plt+0x260>
   118c4:	mov	r0, r8
   118c8:	mov	r1, #1
   118cc:	bl	14514 <_obstack_newchunk@@Base>
   118d0:	ldr	r0, [r8, #12]
   118d4:	b	11854 <__assert_fail@plt+0x260>
   118d8:	ldr	r0, [r8, #12]
   118dc:	ldr	r1, [r8, #16]
   118e0:	cmp	r1, r0
   118e4:	bne	118f8 <__assert_fail@plt+0x304>
   118e8:	mov	r0, r8
   118ec:	mov	r1, #1
   118f0:	bl	14514 <_obstack_newchunk@@Base>
   118f4:	ldr	r0, [r8, #12]
   118f8:	add	r1, r0, #1
   118fc:	movw	r7, #6340	; 0x18c4
   11900:	str	r1, [r8, #12]
   11904:	mov	r1, #0
   11908:	movt	r7, #3
   1190c:	strb	r1, [r0]
   11910:	ldr	r5, [r8, #8]
   11914:	ldr	r0, [r8, #12]
   11918:	cmp	r0, r5
   1191c:	bne	1192c <__assert_fail@plt+0x338>
   11920:	ldrb	r1, [r8, #40]	; 0x28
   11924:	orr	r1, r1, #2
   11928:	strb	r1, [r8, #40]	; 0x28
   1192c:	ldr	r3, [r8, #24]
   11930:	ldr	r1, [r8, #4]
   11934:	ldr	r2, [r8, #16]
   11938:	add	r0, r3, r0
   1193c:	bic	r0, r0, r3
   11940:	sub	r3, r0, r1
   11944:	sub	r1, r2, r1
   11948:	cmp	r3, r1
   1194c:	movhi	r0, r2
   11950:	str	r0, [r8, #8]
   11954:	str	r0, [r8, #12]
   11958:	ldr	r0, [r7, #4]
   1195c:	cmp	r0, #0
   11960:	bne	11b50 <__assert_fail@plt+0x55c>
   11964:	movw	r0, #6164	; 0x1814
   11968:	movt	r0, #3
   1196c:	ldr	r7, [r0, #12]
   11970:	cmp	r7, #0
   11974:	beq	11a90 <__assert_fail@plt+0x49c>
   11978:	sub	r6, r5, #1
   1197c:	mov	r8, #0
   11980:	b	119a0 <__assert_fail@plt+0x3ac>
   11984:	movw	r0, #6164	; 0x1814
   11988:	add	r8, r8, #1
   1198c:	movt	r0, #3
   11990:	add	r0, r0, r8, lsl #2
   11994:	ldr	r7, [r0, #12]
   11998:	cmp	r7, #0
   1199c:	beq	11a90 <__assert_fail@plt+0x49c>
   119a0:	mov	r0, r6
   119a4:	mov	r4, r0
   119a8:	ldrb	r1, [r0, #1]!
   119ac:	cmp	r1, #0
   119b0:	bne	119a4 <__assert_fail@plt+0x3b0>
   119b4:	sub	r0, r7, #1
   119b8:	mov	r1, #1
   119bc:	ldrb	r2, [r0, #1]!
   119c0:	mov	sl, r1
   119c4:	add	r1, r1, #1
   119c8:	cmp	r2, #0
   119cc:	bne	119bc <__assert_fail@plt+0x3c8>
   119d0:	sub	r9, r7, #2
   119d4:	add	r0, r9, sl
   119d8:	cmp	r0, r7
   119dc:	cmpcs	r4, r5
   119e0:	bcc	11984 <__assert_fail@plt+0x390>
   119e4:	bl	11468 <__ctype_tolower_loc@plt>
   119e8:	ldrb	r2, [r4]
   119ec:	ldr	r0, [r0]
   119f0:	ldrb	r1, [r9, sl]
   119f4:	ldr	r0, [r0, r2, lsl #2]
   119f8:	cmp	r0, r1
   119fc:	bne	11984 <__assert_fail@plt+0x390>
   11a00:	sub	sl, sl, #1
   11a04:	sub	r4, r4, #1
   11a08:	cmp	sl, #1
   11a0c:	bne	119d4 <__assert_fail@plt+0x3e0>
   11a10:	movw	r4, #6340	; 0x18c4
   11a14:	movt	r4, #3
   11a18:	ldr	r0, [r4]
   11a1c:	cmp	r0, #0
   11a20:	beq	11a30 <__assert_fail@plt+0x43c>
   11a24:	movw	r0, #49224	; 0xc048
   11a28:	movt	r0, #1
   11a2c:	bl	11438 <puts@plt>
   11a30:	movw	r0, #49258	; 0xc06a
   11a34:	mov	r1, #0
   11a38:	movt	r0, #1
   11a3c:	bl	11cdc <__assert_fail@plt+0x6e8>
   11a40:	movw	r1, #6456	; 0x1938
   11a44:	movt	r1, #3
   11a48:	mov	r6, r1
   11a4c:	str	r0, [r1]
   11a50:	mov	r1, r5
   11a54:	bl	11df8 <__assert_fail@plt+0x804>
   11a58:	str	r0, [r4, #4]
   11a5c:	ldr	r0, [r6]
   11a60:	bl	115dc <close@plt>
   11a64:	ldr	r1, [r4, #4]
   11a68:	cmp	r1, #0
   11a6c:	bne	11a78 <__assert_fail@plt+0x484>
   11a70:	mov	r0, #0
   11a74:	bl	1148c <exit@plt>
   11a78:	movw	r0, #49277	; 0xc07d
   11a7c:	movt	r0, #1
   11a80:	bl	11348 <printf@plt>
   11a84:	ldr	r0, [r4, #4]
   11a88:	cmp	r0, #0
   11a8c:	bne	11b50 <__assert_fail@plt+0x55c>
   11a90:	mov	r0, r5
   11a94:	bl	11fac <__assert_fail@plt+0x9b8>
   11a98:	movw	r4, #6340	; 0x18c4
   11a9c:	mov	r1, r0
   11aa0:	movt	r4, #3
   11aa4:	str	r0, [r4, #4]
   11aa8:	ldrb	r0, [r0]
   11aac:	cmp	r0, #3
   11ab0:	bhi	11b38 <__assert_fail@plt+0x544>
   11ab4:	add	r2, pc, #0
   11ab8:	ldr	pc, [r2, r0, lsl #2]
   11abc:	andeq	r1, r1, ip, asr #21
   11ac0:	andeq	r1, r1, r4, lsl #22
   11ac4:	andeq	r1, r1, r4, lsl fp
   11ac8:	andeq	r1, r1, r4, lsr #22
   11acc:	movw	r0, #49311	; 0xc09f
   11ad0:	movt	r0, #1
   11ad4:	bl	1142c <getenv@plt>
   11ad8:	movw	r1, #49258	; 0xc06a
   11adc:	cmp	r0, #0
   11ae0:	movt	r1, #1
   11ae4:	movne	r1, r0
   11ae8:	str	r1, [r4, #4]
   11aec:	ldr	r0, [r4]
   11af0:	cmp	r0, #0
   11af4:	beq	11b50 <__assert_fail@plt+0x55c>
   11af8:	movw	r0, #49324	; 0xc0ac
   11afc:	movt	r0, #1
   11b00:	b	11b4c <__assert_fail@plt+0x558>
   11b04:	movw	r0, #49350	; 0xc0c6
   11b08:	movt	r0, #1
   11b0c:	bl	11438 <puts@plt>
   11b10:	ldr	r1, [r4, #4]
   11b14:	add	r0, r1, #1
   11b18:	bl	11438 <puts@plt>
   11b1c:	mov	r0, #0
   11b20:	bl	1148c <exit@plt>
   11b24:	movw	r0, #49421	; 0xc10d
   11b28:	movt	r0, #1
   11b2c:	bl	11438 <puts@plt>
   11b30:	mov	r0, #0
   11b34:	bl	1148c <exit@plt>
   11b38:	ldr	r0, [r4]
   11b3c:	cmp	r0, #0
   11b40:	beq	11b50 <__assert_fail@plt+0x55c>
   11b44:	movw	r0, #49451	; 0xc12b
   11b48:	movt	r0, #1
   11b4c:	bl	11348 <printf@plt>
   11b50:	movw	r0, #49469	; 0xc13d
   11b54:	movt	r0, #1
   11b58:	bl	1142c <getenv@plt>
   11b5c:	cmp	r0, #0
   11b60:	movw	r6, #6340	; 0x18c4
   11b64:	mov	r2, r5
   11b68:	movwne	r1, #6164	; 0x1814
   11b6c:	movt	r6, #3
   11b70:	movne	r0, #0
   11b74:	movtne	r1, #3
   11b78:	strne	r0, [r1]
   11b7c:	ldr	r0, [r6, #4]
   11b80:	ldr	r1, [sp, #8]
   11b84:	bl	124b0 <__assert_fail@plt+0xebc>
   11b88:	mov	r4, r0
   11b8c:	ldr	r0, [r6]
   11b90:	cmp	r0, #0
   11b94:	beq	11ba8 <__assert_fail@plt+0x5b4>
   11b98:	movw	r0, #49480	; 0xc148
   11b9c:	mov	r1, r4
   11ba0:	movt	r0, #1
   11ba4:	bl	11348 <printf@plt>
   11ba8:	mov	r0, r4
   11bac:	bl	114a4 <strlen@plt>
   11bb0:	movw	r5, #9984	; 0x2700
   11bb4:	movw	r1, #2573	; 0xa0d
   11bb8:	mov	r2, r4
   11bbc:	movt	r5, #1
   11bc0:	strh	r1, [r2, r0]!
   11bc4:	mov	r0, #0
   11bc8:	strb	r0, [r2, #2]
   11bcc:	mov	r0, #15
   11bd0:	mov	r1, r5
   11bd4:	bl	113b4 <signal@plt>
   11bd8:	mov	r0, #2
   11bdc:	mov	r1, r5
   11be0:	bl	113b4 <signal@plt>
   11be4:	ldmib	r6, {r0, r1}
   11be8:	bl	11cdc <__assert_fail@plt+0x6e8>
   11bec:	movw	r1, #6456	; 0x1938
   11bf0:	movt	r1, #3
   11bf4:	mov	r5, r1
   11bf8:	str	r0, [r1]
   11bfc:	mov	r1, r4
   11c00:	bl	1272c <__assert_fail@plt+0x1138>
   11c04:	ldr	r0, [r5]
   11c08:	bl	11fa8 <__assert_fail@plt+0x9b4>
   11c0c:	mov	r0, #0
   11c10:	bl	1148c <exit@plt>
   11c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c18:	add	fp, sp, #28
   11c1c:	sub	sp, sp, #4
   11c20:	ldr	r6, [r1]
   11c24:	cmp	r6, #0
   11c28:	beq	11cd0 <__assert_fail@plt+0x6dc>
   11c2c:	mov	r5, r0
   11c30:	sub	r0, r0, #1
   11c34:	mov	r9, r1
   11c38:	mov	sl, #0
   11c3c:	str	r0, [sp]
   11c40:	b	11c54 <__assert_fail@plt+0x660>
   11c44:	add	sl, sl, #1
   11c48:	ldr	r6, [r9, sl, lsl #2]
   11c4c:	cmp	r6, #0
   11c50:	beq	11cd0 <__assert_fail@plt+0x6dc>
   11c54:	ldr	r0, [sp]
   11c58:	mov	r4, r0
   11c5c:	ldrb	r1, [r0, #1]!
   11c60:	cmp	r1, #0
   11c64:	bne	11c58 <__assert_fail@plt+0x664>
   11c68:	sub	r0, r6, #1
   11c6c:	mov	r1, #1
   11c70:	ldrb	r2, [r0, #1]!
   11c74:	mov	r7, r1
   11c78:	add	r1, r1, #1
   11c7c:	cmp	r2, #0
   11c80:	bne	11c70 <__assert_fail@plt+0x67c>
   11c84:	sub	r8, r6, #2
   11c88:	add	r0, r8, r7
   11c8c:	cmp	r0, r6
   11c90:	cmpcs	r4, r5
   11c94:	bcc	11c44 <__assert_fail@plt+0x650>
   11c98:	bl	11468 <__ctype_tolower_loc@plt>
   11c9c:	ldrb	r2, [r4]
   11ca0:	ldr	r0, [r0]
   11ca4:	ldrb	r1, [r8, r7]
   11ca8:	ldr	r0, [r0, r2, lsl #2]
   11cac:	cmp	r0, r1
   11cb0:	bne	11c44 <__assert_fail@plt+0x650>
   11cb4:	sub	r7, r7, #1
   11cb8:	sub	r4, r4, #1
   11cbc:	cmp	r7, #1
   11cc0:	bne	11c88 <__assert_fail@plt+0x694>
   11cc4:	mov	r0, #1
   11cc8:	sub	sp, fp, #28
   11ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cd0:	mov	r0, #0
   11cd4:	sub	sp, fp, #28
   11cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cdc:	push	{r4, r5, fp, lr}
   11ce0:	add	fp, sp, #8
   11ce4:	sub	sp, sp, #40	; 0x28
   11ce8:	vmov.i32	q8, #0	; 0x00000000
   11cec:	add	r2, sp, #8
   11cf0:	mov	r4, r0
   11cf4:	mov	r5, r1
   11cf8:	movw	r1, #48902	; 0xbf06
   11cfc:	add	r3, sp, #4
   11d00:	mov	r0, r2
   11d04:	cmp	r5, #0
   11d08:	movt	r1, #1
   11d0c:	movne	r1, r5
   11d10:	vst1.64	{d16-d17}, [r0]!
   11d14:	vst1.64	{d16-d17}, [r0]
   11d18:	mov	r0, #1
   11d1c:	str	r0, [sp, #16]
   11d20:	mov	r0, r4
   11d24:	bl	11594 <getaddrinfo@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d58 <__assert_fail@plt+0x764>
   11d30:	movw	r1, #50202	; 0xc41a
   11d34:	cmp	r5, #0
   11d38:	add	r2, sp, #8
   11d3c:	add	r3, sp, #4
   11d40:	mov	r0, r4
   11d44:	movt	r1, #1
   11d48:	movne	r1, r5
   11d4c:	bl	11594 <getaddrinfo@plt>
   11d50:	cmp	r0, #0
   11d54:	bne	11de4 <__assert_fail@plt+0x7f0>
   11d58:	ldr	r4, [sp, #4]
   11d5c:	cmp	r4, #0
   11d60:	beq	11dd8 <__assert_fail@plt+0x7e4>
   11d64:	mov	r2, r4
   11d68:	b	11d88 <__assert_fail@plt+0x794>
   11d6c:	mov	r0, r5
   11d70:	bl	115dc <close@plt>
   11d74:	ldr	r0, [sp, #4]
   11d78:	ldr	r2, [r0, #28]
   11d7c:	cmp	r2, #0
   11d80:	str	r2, [sp, #4]
   11d84:	beq	11dbc <__assert_fail@plt+0x7c8>
   11d88:	ldmib	r2, {r0, r1, r2}
   11d8c:	bl	115a0 <socket@plt>
   11d90:	mov	r5, r0
   11d94:	cmp	r0, #0
   11d98:	bmi	11d74 <__assert_fail@plt+0x780>
   11d9c:	ldr	r0, [sp, #4]
   11da0:	ldr	r2, [r0, #16]
   11da4:	ldr	r1, [r0, #20]
   11da8:	mov	r0, r5
   11dac:	bl	115e8 <connect@plt>
   11db0:	cmp	r0, #0
   11db4:	bne	11d6c <__assert_fail@plt+0x778>
   11db8:	ldr	r2, [sp, #4]
   11dbc:	cmp	r2, #0
   11dc0:	beq	11dd8 <__assert_fail@plt+0x7e4>
   11dc4:	mov	r0, r4
   11dc8:	bl	11588 <freeaddrinfo@plt>
   11dcc:	mov	r0, r5
   11dd0:	sub	sp, fp, #8
   11dd4:	pop	{r4, r5, fp, pc}
   11dd8:	movw	r0, #50226	; 0xc432
   11ddc:	movt	r0, #1
   11de0:	bl	12c20 <__assert_fail@plt+0x162c>
   11de4:	bl	11378 <gai_strerror@plt>
   11de8:	mov	r1, r0
   11dec:	movw	r0, #50210	; 0xc422
   11df0:	movt	r0, #1
   11df4:	bl	12c84 <__assert_fail@plt+0x1690>
   11df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dfc:	add	fp, sp, #28
   11e00:	sub	sp, sp, #108	; 0x6c
   11e04:	mov	r4, r0
   11e08:	mov	r0, r1
   11e0c:	mov	r5, r1
   11e10:	bl	114a4 <strlen@plt>
   11e14:	add	r0, r0, #4
   11e18:	bl	14e78 <_obstack_memory_used@@Base+0x71c>
   11e1c:	mov	r1, #61	; 0x3d
   11e20:	mov	r6, r0
   11e24:	strb	r1, [r0], #1
   11e28:	mov	r1, r5
   11e2c:	bl	11414 <strcpy@plt>
   11e30:	mov	r0, r6
   11e34:	bl	114a4 <strlen@plt>
   11e38:	movw	r1, #2573	; 0xa0d
   11e3c:	mov	r2, r6
   11e40:	mov	r7, #0
   11e44:	strh	r1, [r2, r0]!
   11e48:	movw	r1, #45999	; 0xb3af
   11e4c:	mov	r0, r4
   11e50:	movt	r1, #1
   11e54:	strb	r7, [r2, #2]
   11e58:	bl	11300 <fdopen@plt>
   11e5c:	mov	r5, r0
   11e60:	mov	r0, r6
   11e64:	bl	114a4 <strlen@plt>
   11e68:	mov	r2, r0
   11e6c:	mov	r0, r4
   11e70:	mov	r1, r6
   11e74:	str	r6, [sp, #4]
   11e78:	bl	114f8 <write@plt>
   11e7c:	cmp	r0, #0
   11e80:	bmi	11f90 <__assert_fail@plt+0x99c>
   11e84:	add	r6, sp, #8
   11e88:	mov	r1, #100	; 0x64
   11e8c:	mov	r2, r5
   11e90:	mov	r0, r6
   11e94:	bl	11384 <fgets@plt>
   11e98:	cmp	r0, #0
   11e9c:	beq	11f6c <__assert_fail@plt+0x978>
   11ea0:	movw	r9, #50185	; 0xc409
   11ea4:	movw	r8, #6332	; 0x18bc
   11ea8:	add	r4, r6, #1
   11eac:	mov	r7, #0
   11eb0:	movt	r9, #1
   11eb4:	movt	r8, #3
   11eb8:	b	11ee0 <__assert_fail@plt+0x8ec>
   11ebc:	ldr	r1, [r8]
   11ec0:	mov	r0, r6
   11ec4:	bl	115b8 <fputs@plt>
   11ec8:	mov	r0, r6
   11ecc:	mov	r1, #100	; 0x64
   11ed0:	mov	r2, r5
   11ed4:	bl	11384 <fgets@plt>
   11ed8:	cmp	r0, #0
   11edc:	beq	11f6c <__assert_fail@plt+0x978>
   11ee0:	mov	r0, r6
   11ee4:	mov	r1, r9
   11ee8:	mov	r2, #16
   11eec:	bl	11498 <bcmp@plt>
   11ef0:	cmp	r7, #0
   11ef4:	cmpeq	r0, #0
   11ef8:	bne	11ebc <__assert_fail@plt+0x8c8>
   11efc:	mov	r1, r4
   11f00:	mov	r2, r6
   11f04:	mov	r0, r2
   11f08:	ldrb	r3, [r2], #1
   11f0c:	mov	sl, r1
   11f10:	add	r1, r1, #1
   11f14:	cmp	r3, #58	; 0x3a
   11f18:	bne	11f04 <__assert_fail@plt+0x910>
   11f1c:	ldrb	r1, [r0, #1]!
   11f20:	add	sl, sl, #1
   11f24:	cmp	r1, #32
   11f28:	beq	11f1c <__assert_fail@plt+0x928>
   11f2c:	bl	114a4 <strlen@plt>
   11f30:	add	r0, r0, #1
   11f34:	bl	14e78 <_obstack_memory_used@@Base+0x71c>
   11f38:	mov	r7, r0
   11f3c:	mov	r0, #0
   11f40:	b	11f4c <__assert_fail@plt+0x958>
   11f44:	strb	r1, [r7, r0]
   11f48:	add	r0, r0, #1
   11f4c:	add	r1, sl, r0
   11f50:	ldrb	r1, [r1, #-1]
   11f54:	cmp	r1, #10
   11f58:	cmpne	r1, #13
   11f5c:	bne	11f44 <__assert_fail@plt+0x950>
   11f60:	mov	r1, #0
   11f64:	strb	r1, [r7, r0]
   11f68:	b	11ebc <__assert_fail@plt+0x8c8>
   11f6c:	mov	r0, r5
   11f70:	bl	11390 <ferror@plt>
   11f74:	cmp	r0, #0
   11f78:	bne	11f9c <__assert_fail@plt+0x9a8>
   11f7c:	ldr	r0, [sp, #4]
   11f80:	bl	142d0 <argp_parse@@Base+0x13dc>
   11f84:	mov	r0, r7
   11f88:	sub	sp, fp, #28
   11f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f90:	movw	r0, #50000	; 0xc350
   11f94:	movt	r0, #1
   11f98:	bl	12c20 <__assert_fail@plt+0x162c>
   11f9c:	movw	r0, #50095	; 0xc3af
   11fa0:	movt	r0, #1
   11fa4:	bl	12c20 <__assert_fail@plt+0x162c>
   11fa8:	b	115dc <close@plt>
   11fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb0:	add	fp, sp, #28
   11fb4:	sub	sp, sp, #28
   11fb8:	ldrb	r6, [r0]
   11fbc:	movw	r4, #44612	; 0xae44
   11fc0:	movt	r4, #1
   11fc4:	cmp	r6, #0
   11fc8:	beq	1201c <__assert_fail@plt+0xa28>
   11fcc:	ldrb	r1, [r0, #1]
   11fd0:	cmp	r1, #32
   11fd4:	bne	11ffc <__assert_fail@plt+0xa08>
   11fd8:	mov	r5, r0
   11fdc:	ldrb	r6, [r5, #2]!
   11fe0:	cmp	r6, #0
   11fe4:	beq	1201c <__assert_fail@plt+0xa28>
   11fe8:	ldrb	r0, [r0, #3]
   11fec:	cmp	r0, #32
   11ff0:	mov	r0, r5
   11ff4:	beq	11fdc <__assert_fail@plt+0x9e8>
   11ff8:	b	12000 <__assert_fail@plt+0xa0c>
   11ffc:	mov	r5, r0
   12000:	mov	r0, r5
   12004:	mov	r1, #64	; 0x40
   12008:	bl	114b0 <strchr@plt>
   1200c:	movw	r4, #45780	; 0xb2d4
   12010:	cmp	r0, #0
   12014:	movt	r4, #1
   12018:	beq	12028 <__assert_fail@plt+0xa34>
   1201c:	mov	r0, r4
   12020:	sub	sp, fp, #28
   12024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12028:	movw	r1, #49504	; 0xc160
   1202c:	mov	r0, r5
   12030:	movt	r1, #1
   12034:	bl	1157c <strpbrk@plt>
   12038:	cmp	r0, #0
   1203c:	beq	120d8 <__assert_fail@plt+0xae4>
   12040:	mov	r0, r5
   12044:	mov	r1, #58	; 0x3a
   12048:	bl	114b0 <strchr@plt>
   1204c:	cmp	r0, #0
   12050:	beq	121e4 <__assert_fail@plt+0xbf0>
   12054:	movw	r1, #49524	; 0xc174
   12058:	mov	r0, #0
   1205c:	add	r2, sp, #24
   12060:	add	r3, sp, #20
   12064:	movt	r1, #1
   12068:	str	r0, [sp, #24]
   1206c:	str	r0, [sp, #20]
   12070:	mov	r0, r5
   12074:	bl	11540 <sscanf@plt>
   12078:	cmp	r0, #0
   1207c:	beq	1228c <__assert_fail@plt+0xc98>
   12080:	movw	r1, #3040	; 0xbe0
   12084:	movt	r1, #3
   12088:	ldr	r4, [r1, #8]
   1208c:	cmp	r4, #0
   12090:	beq	122a0 <__assert_fail@plt+0xcac>
   12094:	ldr	r0, [sp, #24]
   12098:	ldrh	r2, [sp, #20]
   1209c:	orr	r0, r2, r0, lsl #16
   120a0:	ldm	r1, {r2, r3}
   120a4:	and	r3, r3, r0
   120a8:	cmp	r3, r2
   120ac:	beq	1201c <__assert_fail@plt+0xa28>
   120b0:	add	r1, r1, #12
   120b4:	ldr	r4, [r1, #8]
   120b8:	cmp	r4, #0
   120bc:	beq	122a0 <__assert_fail@plt+0xcac>
   120c0:	ldm	r1, {r2, r3}
   120c4:	and	r3, r3, r0
   120c8:	add	r1, r1, #12
   120cc:	cmp	r3, r2
   120d0:	bne	120b4 <__assert_fail@plt+0xac0>
   120d4:	b	1201c <__assert_fail@plt+0xa28>
   120d8:	cmp	r6, #0
   120dc:	mov	r4, r5
   120e0:	beq	120f4 <__assert_fail@plt+0xb00>
   120e4:	mov	r4, r5
   120e8:	ldrb	r0, [r4, #1]!
   120ec:	cmp	r0, #0
   120f0:	bne	120e8 <__assert_fail@plt+0xaf4>
   120f4:	movw	r1, #46052	; 0xb3e4
   120f8:	mov	r0, r5
   120fc:	mov	r2, #2
   12100:	movt	r1, #1
   12104:	bl	114d4 <strncasecmp@plt>
   12108:	cmp	r0, #0
   1210c:	bne	121ac <__assert_fail@plt+0xbb8>
   12110:	ldrb	r0, [r5, #2]!
   12114:	cmp	r0, #32
   12118:	subne	r0, r0, #48	; 0x30
   1211c:	uxtbne	r0, r0
   12120:	cmpne	r0, #9
   12124:	bhi	121ac <__assert_fail@plt+0xbb8>
   12128:	mov	r0, r5
   1212c:	mov	r1, #0
   12130:	mov	r2, #10
   12134:	bl	1133c <strtol@plt>
   12138:	mov	r5, r0
   1213c:	movw	r0, #5072	; 0x13d0
   12140:	movt	r0, #6
   12144:	cmp	r5, r0
   12148:	blt	12158 <__assert_fail@plt+0xb64>
   1214c:	movw	r0, #49834	; 0xc2aa
   12150:	movt	r0, #1
   12154:	bl	11438 <puts@plt>
   12158:	movw	r1, #3328	; 0xd00
   1215c:	movw	r0, #45440	; 0xb180
   12160:	movt	r1, #3
   12164:	movt	r0, #1
   12168:	ldr	r4, [r1, #4]
   1216c:	cmp	r4, #0
   12170:	beq	12410 <__assert_fail@plt+0xe1c>
   12174:	add	r1, r1, #12
   12178:	ldrh	r2, [r1, #-12]
   1217c:	cmp	r5, r2
   12180:	bge	1219c <__assert_fail@plt+0xba8>
   12184:	ldr	r4, [r1], #8
   12188:	cmp	r4, #0
   1218c:	beq	12410 <__assert_fail@plt+0xe1c>
   12190:	ldrh	r2, [r1, #-12]
   12194:	cmp	r5, r2
   12198:	blt	12184 <__assert_fail@plt+0xb90>
   1219c:	ldrh	r2, [r1, #-10]
   121a0:	cmp	r5, r2
   121a4:	bgt	12184 <__assert_fail@plt+0xb90>
   121a8:	b	1201c <__assert_fail@plt+0xa28>
   121ac:	movw	r1, #49521	; 0xc171
   121b0:	sub	r0, r4, #2
   121b4:	mov	r2, #2
   121b8:	movt	r1, #1
   121bc:	bl	114d4 <strncasecmp@plt>
   121c0:	movw	r2, #49508	; 0xc164
   121c4:	movw	r1, #45780	; 0xb2d4
   121c8:	cmp	r0, #0
   121cc:	movt	r2, #1
   121d0:	movt	r1, #1
   121d4:	moveq	r1, r2
   121d8:	mov	r0, r1
   121dc:	sub	sp, fp, #28
   121e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121e4:	add	r1, sp, #16
   121e8:	add	r0, sp, #12
   121ec:	add	r2, sp, #24
   121f0:	add	r3, sp, #20
   121f4:	str	r1, [sp]
   121f8:	movw	r1, #50262	; 0xc456
   121fc:	str	r0, [sp, #4]
   12200:	mov	r0, r5
   12204:	movt	r1, #1
   12208:	bl	11540 <sscanf@plt>
   1220c:	mov	r1, #0
   12210:	cmp	r0, #4
   12214:	bne	12238 <__assert_fail@plt+0xc44>
   12218:	ldr	r0, [sp, #20]
   1221c:	ldr	r1, [sp, #24]
   12220:	lsl	r0, r0, #16
   12224:	add	r0, r0, r1, lsl #24
   12228:	ldr	r1, [sp, #16]
   1222c:	add	r0, r0, r1, lsl #8
   12230:	ldr	r1, [sp, #12]
   12234:	add	r1, r0, r1
   12238:	cmp	r1, #0
   1223c:	beq	122d4 <__assert_fail@plt+0xce0>
   12240:	movw	r0, #57860	; 0xe204
   12244:	movt	r0, #2
   12248:	ldr	r4, [r0, #8]
   1224c:	cmp	r4, #0
   12250:	beq	1239c <__assert_fail@plt+0xda8>
   12254:	ldm	r0, {r2, r3}
   12258:	and	r3, r3, r1
   1225c:	cmp	r3, r2
   12260:	beq	1201c <__assert_fail@plt+0xa28>
   12264:	add	r0, r0, #12
   12268:	ldr	r4, [r0, #8]
   1226c:	cmp	r4, #0
   12270:	beq	1239c <__assert_fail@plt+0xda8>
   12274:	ldm	r0, {r2, r3}
   12278:	and	r3, r3, r1
   1227c:	add	r0, r0, #12
   12280:	cmp	r3, r2
   12284:	bne	12268 <__assert_fail@plt+0xc74>
   12288:	b	1201c <__assert_fail@plt+0xa28>
   1228c:	movw	r4, #45780	; 0xb2d4
   12290:	movt	r4, #1
   12294:	mov	r0, r4
   12298:	sub	sp, fp, #28
   1229c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122a0:	movw	r0, #6340	; 0x18c4
   122a4:	movw	r4, #45440	; 0xb180
   122a8:	movt	r0, #3
   122ac:	movt	r4, #1
   122b0:	ldr	r0, [r0]
   122b4:	cmp	r0, #0
   122b8:	beq	1201c <__assert_fail@plt+0xa28>
   122bc:	movw	r0, #49531	; 0xc17b
   122c0:	movt	r0, #1
   122c4:	bl	11438 <puts@plt>
   122c8:	mov	r0, r4
   122cc:	sub	sp, fp, #28
   122d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122d4:	movw	r0, #3552	; 0xde0
   122d8:	movt	r0, #3
   122dc:	ldr	r7, [r0]
   122e0:	cmp	r7, #0
   122e4:	beq	123d0 <__assert_fail@plt+0xddc>
   122e8:	sub	r0, r5, #1
   122ec:	mov	sl, #0
   122f0:	str	r0, [sp, #8]
   122f4:	b	12310 <__assert_fail@plt+0xd1c>
   122f8:	movw	r0, #3552	; 0xde0
   122fc:	add	sl, sl, #2
   12300:	movt	r0, #3
   12304:	ldr	r7, [r0, sl, lsl #2]
   12308:	cmp	r7, #0
   1230c:	beq	123d0 <__assert_fail@plt+0xddc>
   12310:	ldr	r0, [sp, #8]
   12314:	mov	r6, r0
   12318:	ldrb	r1, [r0, #1]!
   1231c:	cmp	r1, #0
   12320:	bne	12314 <__assert_fail@plt+0xd20>
   12324:	sub	r0, r7, #1
   12328:	mov	r1, #1
   1232c:	ldrb	r2, [r0, #1]!
   12330:	mov	r8, r1
   12334:	add	r1, r1, #1
   12338:	cmp	r2, #0
   1233c:	bne	1232c <__assert_fail@plt+0xd38>
   12340:	sub	r9, r7, #2
   12344:	add	r0, r9, r8
   12348:	cmp	r0, r7
   1234c:	cmpcs	r6, r5
   12350:	bcc	122f8 <__assert_fail@plt+0xd04>
   12354:	bl	11468 <__ctype_tolower_loc@plt>
   12358:	ldrb	r2, [r6]
   1235c:	ldr	r0, [r0]
   12360:	ldrb	r1, [r9, r8]
   12364:	ldr	r0, [r0, r2, lsl #2]
   12368:	cmp	r0, r1
   1236c:	bne	122f8 <__assert_fail@plt+0xd04>
   12370:	sub	r8, r8, #1
   12374:	sub	r6, r6, #1
   12378:	cmp	r8, #1
   1237c:	bne	12344 <__assert_fail@plt+0xd50>
   12380:	movw	r1, #3552	; 0xde0
   12384:	orr	r0, sl, #1
   12388:	movt	r1, #3
   1238c:	ldr	r4, [r1, r0, lsl #2]
   12390:	mov	r0, r4
   12394:	sub	sp, fp, #28
   12398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1239c:	movw	r0, #6340	; 0x18c4
   123a0:	movw	r4, #45440	; 0xb180
   123a4:	movt	r0, #3
   123a8:	movt	r4, #1
   123ac:	ldr	r0, [r0]
   123b0:	cmp	r0, #0
   123b4:	beq	1201c <__assert_fail@plt+0xa28>
   123b8:	movw	r0, #49621	; 0xc1d5
   123bc:	movt	r0, #1
   123c0:	bl	11438 <puts@plt>
   123c4:	mov	r0, r4
   123c8:	sub	sp, fp, #28
   123cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123d0:	mov	r0, r5
   123d4:	mov	r1, #46	; 0x2e
   123d8:	bl	114b0 <strchr@plt>
   123dc:	cmp	r0, #0
   123e0:	beq	12420 <__assert_fail@plt+0xe2c>
   123e4:	movw	r0, #6340	; 0x18c4
   123e8:	movt	r0, #3
   123ec:	ldr	r0, [r0]
   123f0:	cmp	r0, #0
   123f4:	beq	1201c <__assert_fail@plt+0xa28>
   123f8:	movw	r0, #49774	; 0xc26e
   123fc:	movt	r0, #1
   12400:	bl	11438 <puts@plt>
   12404:	mov	r0, r4
   12408:	sub	sp, fp, #28
   1240c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12410:	mov	r4, r0
   12414:	mov	r0, r4
   12418:	sub	sp, fp, #28
   1241c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12420:	movw	r0, #57788	; 0xe1bc
   12424:	movt	r0, #2
   12428:	ldr	r4, [r0]
   1242c:	cmp	r4, #0
   12430:	beq	1246c <__assert_fail@plt+0xe78>
   12434:	add	r6, r0, #4
   12438:	mov	r0, r4
   1243c:	bl	114a4 <strlen@plt>
   12440:	mov	r2, r0
   12444:	mov	r0, r5
   12448:	mov	r1, r4
   1244c:	bl	114d4 <strncasecmp@plt>
   12450:	cmp	r0, #0
   12454:	beq	124a0 <__assert_fail@plt+0xeac>
   12458:	ldr	r4, [r6, #4]
   1245c:	add	r0, r6, #8
   12460:	mov	r6, r0
   12464:	cmp	r4, #0
   12468:	bne	12438 <__assert_fail@plt+0xe44>
   1246c:	movw	r0, #6340	; 0x18c4
   12470:	movw	r4, #45440	; 0xb180
   12474:	movt	r0, #3
   12478:	movt	r4, #1
   1247c:	ldr	r0, [r0]
   12480:	cmp	r0, #0
   12484:	beq	1201c <__assert_fail@plt+0xa28>
   12488:	movw	r0, #49707	; 0xc22b
   1248c:	movt	r0, #1
   12490:	bl	11438 <puts@plt>
   12494:	mov	r0, r4
   12498:	sub	sp, fp, #28
   1249c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a0:	ldr	r4, [r6]
   124a4:	mov	r0, r4
   124a8:	sub	sp, fp, #28
   124ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   124b4:	add	fp, sp, #24
   124b8:	mov	r6, r0
   124bc:	mov	r0, r1
   124c0:	mov	r8, r2
   124c4:	mov	r7, r1
   124c8:	bl	114a4 <strlen@plt>
   124cc:	mov	r4, r0
   124d0:	mov	r0, r8
   124d4:	bl	114a4 <strlen@plt>
   124d8:	add	r0, r4, r0
   124dc:	add	r0, r0, #13
   124e0:	bl	14e78 <_obstack_memory_used@@Base+0x71c>
   124e4:	mov	r5, #0
   124e8:	mov	r4, r0
   124ec:	mov	r1, r6
   124f0:	strb	r5, [r0]
   124f4:	movw	r0, #57624	; 0xe118
   124f8:	movt	r0, #2
   124fc:	bl	12b3c <__assert_fail@plt+0x1548>
   12500:	cmp	r0, #0
   12504:	bne	12524 <__assert_fail@plt+0xf30>
   12508:	movw	r0, #6164	; 0x1814
   1250c:	mov	r1, r6
   12510:	movt	r0, #3
   12514:	add	r0, r0, #56	; 0x38
   12518:	bl	12b3c <__assert_fail@plt+0x1548>
   1251c:	cmp	r0, #0
   12520:	beq	12548 <__assert_fail@plt+0xf54>
   12524:	mov	r0, r4
   12528:	bl	114a4 <strlen@plt>
   1252c:	movw	r1, #51152	; 0xc7d0
   12530:	add	r0, r4, r0
   12534:	movt	r1, #1
   12538:	strb	r5, [r0, #8]
   1253c:	mov	r5, #1
   12540:	vldr	d16, [r1]
   12544:	vst1.8	{d16}, [r0]
   12548:	ldrb	r0, [r7]
   1254c:	cmp	r0, #0
   12550:	beq	12578 <__assert_fail@plt+0xf84>
   12554:	cmp	r5, #0
   12558:	beq	12584 <__assert_fail@plt+0xf90>
   1255c:	mov	r0, r4
   12560:	mov	r1, r7
   12564:	bl	11408 <strcat@plt>
   12568:	mov	r0, r4
   1256c:	mov	r1, r8
   12570:	bl	11408 <strcat@plt>
   12574:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12578:	cmp	r5, #0
   1257c:	beq	125b8 <__assert_fail@plt+0xfc4>
   12580:	b	12690 <__assert_fail@plt+0x109c>
   12584:	movw	r1, #45483	; 0xb1ab
   12588:	mov	r0, r6
   1258c:	movt	r1, #1
   12590:	bl	11330 <strcmp@plt>
   12594:	cmp	r0, #0
   12598:	beq	125ac <__assert_fail@plt+0xfb8>
   1259c:	movw	r0, #49882	; 0xc2da
   125a0:	movt	r0, #1
   125a4:	bl	11438 <puts@plt>
   125a8:	b	125b8 <__assert_fail@plt+0xfc4>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r7
   125b4:	bl	11408 <strcat@plt>
   125b8:	movw	r1, #45440	; 0xb180
   125bc:	mov	r0, r6
   125c0:	movt	r1, #1
   125c4:	bl	11330 <strcmp@plt>
   125c8:	cmp	r0, #0
   125cc:	beq	125e8 <__assert_fail@plt+0xff4>
   125d0:	movw	r1, #45748	; 0xb2b4
   125d4:	mov	r0, r6
   125d8:	movt	r1, #1
   125dc:	bl	11330 <strcmp@plt>
   125e0:	cmp	r0, #0
   125e4:	bne	12634 <__assert_fail@plt+0x1040>
   125e8:	movw	r1, #49936	; 0xc310
   125ec:	mov	r0, r8
   125f0:	mov	r2, #2
   125f4:	movt	r1, #1
   125f8:	bl	114d4 <strncasecmp@plt>
   125fc:	cmp	r0, #0
   12600:	bne	12634 <__assert_fail@plt+0x1040>
   12604:	mov	r2, r8
   12608:	ldrb	r0, [r2, #2]!
   1260c:	sub	r0, r0, #48	; 0x30
   12610:	uxtb	r0, r0
   12614:	cmp	r0, #9
   12618:	bhi	12634 <__assert_fail@plt+0x1040>
   1261c:	movw	r1, #49939	; 0xc313
   12620:	mov	r0, r4
   12624:	movt	r1, #1
   12628:	bl	1154c <sprintf@plt>
   1262c:	mov	r0, r4
   12630:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12634:	movw	r1, #45483	; 0xb1ab
   12638:	mov	r0, r6
   1263c:	movt	r1, #1
   12640:	bl	11330 <strcmp@plt>
   12644:	cmp	r0, #0
   12648:	beq	126a0 <__assert_fail@plt+0x10ac>
   1264c:	movw	r1, #49957	; 0xc325
   12650:	mov	r0, r6
   12654:	movt	r1, #1
   12658:	bl	11330 <strcmp@plt>
   1265c:	cmp	r0, #0
   12660:	bne	12678 <__assert_fail@plt+0x1084>
   12664:	mov	r0, r8
   12668:	mov	r1, #32
   1266c:	bl	114b0 <strchr@plt>
   12670:	cmp	r0, #0
   12674:	beq	126e4 <__assert_fail@plt+0x10f0>
   12678:	movw	r1, #49508	; 0xc164
   1267c:	mov	r0, r6
   12680:	movt	r1, #1
   12684:	bl	11330 <strcmp@plt>
   12688:	cmp	r0, #0
   1268c:	beq	126ac <__assert_fail@plt+0x10b8>
   12690:	mov	r0, r4
   12694:	mov	r1, r8
   12698:	bl	11408 <strcat@plt>
   1269c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   126a0:	movw	r1, #49944	; 0xc318
   126a4:	movt	r1, #1
   126a8:	b	126ec <__assert_fail@plt+0x10f8>
   126ac:	movw	r0, #49987	; 0xc343
   126b0:	movt	r0, #1
   126b4:	bl	1142c <getenv@plt>
   126b8:	cmp	r0, #0
   126bc:	beq	126d8 <__assert_fail@plt+0x10e4>
   126c0:	movw	r1, #49992	; 0xc348
   126c4:	mov	r2, #2
   126c8:	movt	r1, #1
   126cc:	bl	115c4 <strncmp@plt>
   126d0:	cmp	r0, #0
   126d4:	beq	12690 <__assert_fail@plt+0x109c>
   126d8:	movw	r1, #49995	; 0xc34b
   126dc:	movt	r1, #1
   126e0:	b	126ec <__assert_fail@plt+0x10f8>
   126e4:	movw	r1, #49977	; 0xc339
   126e8:	movt	r1, #1
   126ec:	mov	r0, r4
   126f0:	mov	r2, r8
   126f4:	bl	1154c <sprintf@plt>
   126f8:	mov	r0, r4
   126fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12700:	push	{fp, lr}
   12704:	mov	fp, sp
   12708:	mov	r4, r0
   1270c:	movw	r0, #6456	; 0x1938
   12710:	movt	r0, #3
   12714:	ldr	r0, [r0]
   12718:	bl	11fa8 <__assert_fail@plt+0x9b4>
   1271c:	movw	r0, #50234	; 0xc43a
   12720:	mov	r1, r4
   12724:	movt	r0, #1
   12728:	bl	12c84 <__assert_fail@plt+0x1690>
   1272c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12730:	add	fp, sp, #28
   12734:	sub	sp, sp, #484	; 0x1e4
   12738:	sub	sp, sp, #1024	; 0x400
   1273c:	mov	r7, r0
   12740:	movw	r0, #6164	; 0x1814
   12744:	mov	r5, r1
   12748:	movw	r1, #45999	; 0xb3af
   1274c:	movt	r0, #3
   12750:	movt	r1, #1
   12754:	ldr	r6, [r0]
   12758:	mov	r0, r7
   1275c:	bl	11300 <fdopen@plt>
   12760:	mov	r4, r0
   12764:	mov	r0, r5
   12768:	bl	114a4 <strlen@plt>
   1276c:	mov	r2, r0
   12770:	mov	r0, r7
   12774:	mov	r1, r5
   12778:	bl	114f8 <write@plt>
   1277c:	cmp	r0, #0
   12780:	bmi	129a0 <__assert_fail@plt+0x13ac>
   12784:	sub	r5, fp, #232	; 0xe8
   12788:	mov	r1, #200	; 0xc8
   1278c:	mov	r2, r4
   12790:	mov	r0, r5
   12794:	bl	11384 <fgets@plt>
   12798:	cmp	r0, #0
   1279c:	beq	12978 <__assert_fail@plt+0x1384>
   127a0:	movw	r9, #57684	; 0xe154
   127a4:	movw	r7, #9217	; 0x2401
   127a8:	mov	sl, #0
   127ac:	movt	r9, #2
   127b0:	add	r8, sl, #1
   127b4:	cmp	r6, #1
   127b8:	bne	12800 <__assert_fail@plt+0x120c>
   127bc:	ldr	r6, [r9, r8, lsl #2]
   127c0:	mov	r0, r6
   127c4:	bl	114a4 <strlen@plt>
   127c8:	mov	r2, r0
   127cc:	mov	r0, r5
   127d0:	mov	r1, r6
   127d4:	bl	115c4 <strncmp@plt>
   127d8:	mov	r6, r0
   127dc:	cmp	r0, #0
   127e0:	mov	r0, r5
   127e4:	mov	r1, #200	; 0xc8
   127e8:	mov	r2, r4
   127ec:	movwne	r6, #1
   127f0:	bl	11384 <fgets@plt>
   127f4:	cmp	r0, #0
   127f8:	bne	127b4 <__assert_fail@plt+0x11c0>
   127fc:	b	12978 <__assert_fail@plt+0x1384>
   12800:	cmp	r6, #0
   12804:	bne	12858 <__assert_fail@plt+0x1264>
   12808:	ldr	r6, [r9]
   1280c:	add	r8, sp, #8
   12810:	mov	sl, #0
   12814:	cmp	r6, #0
   12818:	beq	12850 <__assert_fail@plt+0x125c>
   1281c:	mov	r0, r6
   12820:	bl	114a4 <strlen@plt>
   12824:	mov	r2, r0
   12828:	mov	r0, r5
   1282c:	mov	r1, r6
   12830:	bl	115c4 <strncmp@plt>
   12834:	cmp	r0, #0
   12838:	beq	12970 <__assert_fail@plt+0x137c>
   1283c:	add	r0, r9, sl, lsl #2
   12840:	add	sl, sl, #2
   12844:	ldr	r6, [r0, #8]
   12848:	cmp	r6, #0
   1284c:	bne	1281c <__assert_fail@plt+0x1228>
   12850:	mov	r6, #0
   12854:	b	1285c <__assert_fail@plt+0x1268>
   12858:	add	r8, sp, #8
   1285c:	movw	r1, #50006	; 0xc356
   12860:	mov	r0, r5
   12864:	mov	r2, #10
   12868:	movt	r1, #1
   1286c:	bl	11498 <bcmp@plt>
   12870:	cmp	r0, #0
   12874:	bne	12904 <__assert_fail@plt+0x1310>
   12878:	movw	r1, #50017	; 0xc361
   1287c:	mov	r0, r5
   12880:	sub	r2, fp, #488	; 0x1e8
   12884:	sub	r3, fp, #504	; 0x1f8
   12888:	str	r8, [sp]
   1288c:	movt	r1, #1
   12890:	bl	11540 <sscanf@plt>
   12894:	cmp	r0, #3
   12898:	bne	12904 <__assert_fail@plt+0x1310>
   1289c:	movw	r0, #6340	; 0x18c4
   128a0:	movt	r0, #3
   128a4:	ldr	r0, [r0]
   128a8:	cmp	r0, #0
   128ac:	beq	128c4 <__assert_fail@plt+0x12d0>
   128b0:	movw	r0, #50063	; 0xc38f
   128b4:	mov	r1, r8
   128b8:	sub	r2, fp, #488	; 0x1e8
   128bc:	movt	r0, #1
   128c0:	bl	11348 <printf@plt>
   128c4:	mov	r0, r8
   128c8:	bl	114a4 <strlen@plt>
   128cc:	add	r0, r8, r0
   128d0:	movw	r1, #2573	; 0xa0d
   128d4:	strh	r1, [r0]
   128d8:	mov	r1, #0
   128dc:	strb	r1, [r0, #2]
   128e0:	sub	r0, fp, #488	; 0x1e8
   128e4:	sub	r1, fp, #504	; 0x1f8
   128e8:	bl	11cdc <__assert_fail@plt+0x6e8>
   128ec:	mov	r1, r8
   128f0:	str	r0, [sp, #4]
   128f4:	bl	1272c <__assert_fail@plt+0x1138>
   128f8:	ldr	r0, [sp, #4]
   128fc:	bl	115dc <close@plt>
   12900:	b	12954 <__assert_fail@plt+0x1360>
   12904:	mov	r0, r5
   12908:	mov	r2, #1
   1290c:	ldrb	r1, [r0]
   12910:	cmp	r1, #13
   12914:	bls	12928 <__assert_fail@plt+0x1334>
   12918:	add	r0, r0, #1
   1291c:	ldrb	r1, [r0]
   12920:	cmp	r1, #13
   12924:	bhi	12918 <__assert_fail@plt+0x1324>
   12928:	tst	r7, r2, lsl r1
   1292c:	beq	12918 <__assert_fail@plt+0x1324>
   12930:	mov	r1, #0
   12934:	mov	r2, r5
   12938:	strb	r1, [r0]
   1293c:	movw	r0, #6332	; 0x18bc
   12940:	movw	r1, #51820	; 0xca6c
   12944:	movt	r0, #3
   12948:	movt	r1, #1
   1294c:	ldr	r0, [r0]
   12950:	bl	114bc <fprintf@plt>
   12954:	mov	r0, r5
   12958:	mov	r1, #200	; 0xc8
   1295c:	mov	r2, r4
   12960:	bl	11384 <fgets@plt>
   12964:	cmp	r0, #0
   12968:	bne	127b0 <__assert_fail@plt+0x11bc>
   1296c:	b	12978 <__assert_fail@plt+0x1384>
   12970:	mov	r6, #1
   12974:	b	12954 <__assert_fail@plt+0x1360>
   12978:	mov	r0, r4
   1297c:	bl	11390 <ferror@plt>
   12980:	cmp	r0, #0
   12984:	bne	129ac <__assert_fail@plt+0x13b8>
   12988:	cmp	r6, #1
   1298c:	subne	sp, fp, #28
   12990:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12994:	movw	r0, #50101	; 0xc3b5
   12998:	movt	r0, #1
   1299c:	bl	12c84 <__assert_fail@plt+0x1690>
   129a0:	movw	r0, #50000	; 0xc350
   129a4:	movt	r0, #1
   129a8:	bl	12c20 <__assert_fail@plt+0x162c>
   129ac:	movw	r0, #50095	; 0xc3af
   129b0:	movt	r0, #1
   129b4:	bl	12c20 <__assert_fail@plt+0x162c>
   129b8:	push	{r4, r5, fp, lr}
   129bc:	add	fp, sp, #8
   129c0:	mov	r4, r0
   129c4:	movw	r0, #5072	; 0x13d0
   129c8:	mov	r5, r1
   129cc:	movt	r0, #6
   129d0:	cmp	r4, r0
   129d4:	blt	129e4 <__assert_fail@plt+0x13f0>
   129d8:	movw	r0, #49834	; 0xc2aa
   129dc:	movt	r0, #1
   129e0:	bl	11438 <puts@plt>
   129e4:	ldr	r0, [r5, #4]
   129e8:	movw	r1, #45440	; 0xb180
   129ec:	movt	r1, #1
   129f0:	cmp	r0, #0
   129f4:	beq	12a30 <__assert_fail@plt+0x143c>
   129f8:	add	r2, r5, #12
   129fc:	ldrh	r3, [r2, #-12]
   12a00:	cmp	r3, r4
   12a04:	ble	12a20 <__assert_fail@plt+0x142c>
   12a08:	ldr	r0, [r2], #8
   12a0c:	cmp	r0, #0
   12a10:	beq	12a30 <__assert_fail@plt+0x143c>
   12a14:	ldrh	r3, [r2, #-12]
   12a18:	cmp	r3, r4
   12a1c:	bgt	12a08 <__assert_fail@plt+0x1414>
   12a20:	ldrh	r3, [r2, #-10]
   12a24:	cmp	r3, r4
   12a28:	blt	12a08 <__assert_fail@plt+0x1414>
   12a2c:	pop	{r4, r5, fp, pc}
   12a30:	mov	r0, r1
   12a34:	pop	{r4, r5, fp, pc}
   12a38:	push	{r4, sl, fp, lr}
   12a3c:	add	fp, sp, #8
   12a40:	sub	sp, sp, #24
   12a44:	mov	r4, #0
   12a48:	cmp	r0, #0
   12a4c:	beq	12a9c <__assert_fail@plt+0x14a8>
   12a50:	add	r1, sp, #8
   12a54:	add	r2, sp, #12
   12a58:	add	r3, sp, #16
   12a5c:	str	r1, [sp, #4]
   12a60:	movw	r1, #50262	; 0xc456
   12a64:	str	r2, [sp]
   12a68:	sub	r2, fp, #12
   12a6c:	movt	r1, #1
   12a70:	bl	11540 <sscanf@plt>
   12a74:	cmp	r0, #4
   12a78:	bne	12a9c <__assert_fail@plt+0x14a8>
   12a7c:	ldr	r0, [sp, #16]
   12a80:	ldr	r1, [fp, #-12]
   12a84:	lsl	r0, r0, #16
   12a88:	add	r0, r0, r1, lsl #24
   12a8c:	ldr	r1, [sp, #12]
   12a90:	add	r0, r0, r1, lsl #8
   12a94:	ldr	r1, [sp, #8]
   12a98:	add	r4, r0, r1
   12a9c:	mov	r0, r4
   12aa0:	sub	sp, fp, #8
   12aa4:	pop	{r4, sl, fp, pc}
   12aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aac:	add	fp, sp, #28
   12ab0:	sub	sp, sp, #4
   12ab4:	mov	r9, r1
   12ab8:	mov	r8, r0
   12abc:	mov	r7, r0
   12ac0:	ldrb	r0, [r7], #1
   12ac4:	cmp	r0, #0
   12ac8:	bne	12ac0 <__assert_fail@plt+0x14cc>
   12acc:	mov	r0, #0
   12ad0:	mov	r4, r9
   12ad4:	ldrb	r1, [r4], #1
   12ad8:	mov	r5, r0
   12adc:	sub	r0, r0, #1
   12ae0:	cmp	r1, #0
   12ae4:	bne	12ad4 <__assert_fail@plt+0x14e0>
   12ae8:	mvn	r6, #1
   12aec:	mov	sl, #0
   12af0:	add	r0, r4, r6
   12af4:	cmp	r0, r9
   12af8:	addcs	r0, r7, r6
   12afc:	cmpcs	r0, r8
   12b00:	bcc	12b30 <__assert_fail@plt+0x153c>
   12b04:	bl	11468 <__ctype_tolower_loc@plt>
   12b08:	ldrb	r2, [r7, r6]
   12b0c:	ldr	r0, [r0]
   12b10:	ldrb	r1, [r4, r6]
   12b14:	ldr	r0, [r0, r2, lsl #2]
   12b18:	cmp	r0, r1
   12b1c:	bne	12b30 <__assert_fail@plt+0x153c>
   12b20:	adds	r5, r5, #1
   12b24:	sub	r6, r6, #1
   12b28:	bne	12af0 <__assert_fail@plt+0x14fc>
   12b2c:	mov	sl, #1
   12b30:	mov	r0, sl
   12b34:	sub	sp, fp, #28
   12b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b3c:	push	{r4, r5, r6, r7, fp, lr}
   12b40:	add	fp, sp, #16
   12b44:	sub	sp, sp, #8
   12b48:	mov	r5, r1
   12b4c:	mov	r6, r0
   12b50:	add	r1, sp, #4
   12b54:	mov	r0, r5
   12b58:	bl	11324 <inet_aton@plt>
   12b5c:	ldr	r7, [r6]
   12b60:	mov	r4, #0
   12b64:	cmp	r7, #0
   12b68:	beq	12c04 <__assert_fail@plt+0x1610>
   12b6c:	cmp	r0, #0
   12b70:	bne	12ba8 <__assert_fail@plt+0x15b4>
   12b74:	add	r6, r6, #4
   12b78:	mov	r0, r7
   12b7c:	mov	r1, r5
   12b80:	bl	11330 <strcmp@plt>
   12b84:	cmp	r0, #0
   12b88:	beq	12c10 <__assert_fail@plt+0x161c>
   12b8c:	ldr	r7, [r6], #4
   12b90:	cmp	r7, #0
   12b94:	bne	12b78 <__assert_fail@plt+0x1584>
   12b98:	b	12c04 <__assert_fail@plt+0x1610>
   12b9c:	ldr	r7, [r6, #4]!
   12ba0:	cmp	r7, #0
   12ba4:	beq	12c04 <__assert_fail@plt+0x1610>
   12ba8:	mov	r0, r7
   12bac:	mov	r1, r5
   12bb0:	bl	11330 <strcmp@plt>
   12bb4:	cmp	r0, #0
   12bb8:	beq	12c10 <__assert_fail@plt+0x161c>
   12bbc:	mov	r0, r7
   12bc0:	bl	115ac <gethostbyname@plt>
   12bc4:	cmp	r0, #0
   12bc8:	beq	12b9c <__assert_fail@plt+0x15a8>
   12bcc:	ldr	r0, [r0, #16]
   12bd0:	ldr	r1, [r0]
   12bd4:	cmp	r1, #0
   12bd8:	beq	12b9c <__assert_fail@plt+0x15a8>
   12bdc:	ldr	r2, [sp, #4]
   12be0:	add	r0, r0, #4
   12be4:	ldr	r1, [r1]
   12be8:	cmp	r1, r2
   12bec:	beq	12c00 <__assert_fail@plt+0x160c>
   12bf0:	ldr	r1, [r0], #4
   12bf4:	cmp	r1, #0
   12bf8:	bne	12be4 <__assert_fail@plt+0x15f0>
   12bfc:	b	12b9c <__assert_fail@plt+0x15a8>
   12c00:	mov	r4, #1
   12c04:	mov	r0, r4
   12c08:	sub	sp, fp, #16
   12c0c:	pop	{r4, r5, r6, r7, fp, pc}
   12c10:	mov	r4, #1
   12c14:	mov	r0, r4
   12c18:	sub	sp, fp, #16
   12c1c:	pop	{r4, r5, r6, r7, fp, pc}
   12c20:	sub	sp, sp, #12
   12c24:	push	{fp, lr}
   12c28:	mov	fp, sp
   12c2c:	sub	sp, sp, #4
   12c30:	movw	r4, #6328	; 0x18b8
   12c34:	mov	ip, r0
   12c38:	add	r0, fp, #8
   12c3c:	movt	r4, #3
   12c40:	stm	r0, {r1, r2, r3}
   12c44:	add	r2, fp, #8
   12c48:	mov	r1, ip
   12c4c:	str	r2, [sp]
   12c50:	ldr	r0, [r4]
   12c54:	bl	11528 <vfprintf@plt>
   12c58:	ldr	r4, [r4]
   12c5c:	bl	114c8 <__errno_location@plt>
   12c60:	ldr	r0, [r0]
   12c64:	bl	1145c <strerror@plt>
   12c68:	movw	r1, #52433	; 0xccd1
   12c6c:	mov	r2, r0
   12c70:	mov	r0, r4
   12c74:	movt	r1, #1
   12c78:	bl	114bc <fprintf@plt>
   12c7c:	mov	r0, #1
   12c80:	bl	1148c <exit@plt>
   12c84:	sub	sp, sp, #12
   12c88:	push	{fp, lr}
   12c8c:	mov	fp, sp
   12c90:	sub	sp, sp, #4
   12c94:	movw	r4, #6328	; 0x18b8
   12c98:	mov	ip, r0
   12c9c:	add	r0, fp, #8
   12ca0:	movt	r4, #3
   12ca4:	stm	r0, {r1, r2, r3}
   12ca8:	add	r2, fp, #8
   12cac:	mov	r1, ip
   12cb0:	str	r2, [sp]
   12cb4:	ldr	r0, [r4]
   12cb8:	bl	11528 <vfprintf@plt>
   12cbc:	ldr	r1, [r4]
   12cc0:	mov	r0, #10
   12cc4:	bl	11534 <fputc@plt>
   12cc8:	mov	r0, #1
   12ccc:	bl	1148c <exit@plt>
   12cd0:	push	{r4, r5, r6, r7, fp, lr}
   12cd4:	add	fp, sp, #16
   12cd8:	mov	r6, #7
   12cdc:	cmp	r0, #1
   12ce0:	blt	12e00 <__assert_fail@plt+0x180c>
   12ce4:	mov	r7, r0
   12ce8:	cmp	r0, #127	; 0x7f
   12cec:	bhi	12e00 <__assert_fail@plt+0x180c>
   12cf0:	mov	r4, r1
   12cf4:	sub	r1, r7, #113	; 0x71
   12cf8:	cmp	r1, #5
   12cfc:	bhi	12d18 <__assert_fail@plt+0x1724>
   12d00:	mov	r0, #1
   12d04:	mov	r2, #41	; 0x29
   12d08:	tst	r2, r0, lsl r1
   12d0c:	movwne	r1, #6340	; 0x18c4
   12d10:	movtne	r1, #3
   12d14:	strne	r0, [r1, #12]
   12d18:	movw	r5, #6412	; 0x190c
   12d1c:	movt	r5, #3
   12d20:	ldr	r0, [r5, #12]
   12d24:	ldr	r1, [r5, #16]
   12d28:	cmp	r1, r0
   12d2c:	bne	12d40 <__assert_fail@plt+0x174c>
   12d30:	mov	r0, r5
   12d34:	mov	r1, #1
   12d38:	bl	14514 <_obstack_newchunk@@Base>
   12d3c:	ldr	r0, [r5, #12]
   12d40:	add	r1, r0, #1
   12d44:	str	r1, [r5, #12]
   12d48:	mov	r1, #45	; 0x2d
   12d4c:	strb	r1, [r0]
   12d50:	ldr	r0, [r5, #12]
   12d54:	ldr	r1, [r5, #16]
   12d58:	cmp	r1, r0
   12d5c:	bne	12d70 <__assert_fail@plt+0x177c>
   12d60:	mov	r0, r5
   12d64:	mov	r1, #1
   12d68:	bl	14514 <_obstack_newchunk@@Base>
   12d6c:	ldr	r0, [r5, #12]
   12d70:	add	r1, r0, #1
   12d74:	mov	r6, #0
   12d78:	cmp	r4, #0
   12d7c:	str	r1, [r5, #12]
   12d80:	strb	r7, [r0]
   12d84:	beq	12e00 <__assert_fail@plt+0x180c>
   12d88:	ldr	r0, [r5, #12]
   12d8c:	ldr	r1, [r5, #16]
   12d90:	cmp	r1, r0
   12d94:	bne	12da8 <__assert_fail@plt+0x17b4>
   12d98:	mov	r0, r5
   12d9c:	mov	r1, #1
   12da0:	bl	14514 <_obstack_newchunk@@Base>
   12da4:	ldr	r0, [r5, #12]
   12da8:	add	r1, r0, #1
   12dac:	str	r1, [r5, #12]
   12db0:	mov	r1, #32
   12db4:	strb	r1, [r0]
   12db8:	mov	r0, r4
   12dbc:	bl	114a4 <strlen@plt>
   12dc0:	mov	r7, r0
   12dc4:	ldr	r0, [r5, #12]
   12dc8:	ldr	r1, [r5, #16]
   12dcc:	sub	r1, r1, r0
   12dd0:	cmp	r1, r7
   12dd4:	bcs	12de8 <__assert_fail@plt+0x17f4>
   12dd8:	mov	r0, r5
   12ddc:	mov	r1, r7
   12de0:	bl	14514 <_obstack_newchunk@@Base>
   12de4:	ldr	r0, [r5, #12]
   12de8:	mov	r1, r4
   12dec:	mov	r2, r7
   12df0:	bl	113a8 <memcpy@plt>
   12df4:	ldr	r0, [r5, #12]
   12df8:	add	r0, r0, r7
   12dfc:	str	r0, [r5, #12]
   12e00:	mov	r0, r6
   12e04:	pop	{r4, r5, r6, r7, fp, pc}
   12e08:	push	{r4, r5, r6, r7, fp, lr}
   12e0c:	add	fp, sp, #16
   12e10:	mov	r5, r1
   12e14:	mov	r1, r0
   12e18:	mov	r0, #7
   12e1c:	cmp	r1, #103	; 0x67
   12e20:	bgt	12e48 <__assert_fail@plt+0x1854>
   12e24:	cmp	r1, #72	; 0x48
   12e28:	beq	12ebc <__assert_fail@plt+0x18c8>
   12e2c:	cmp	r1, #86	; 0x56
   12e30:	bne	12ee0 <__assert_fail@plt+0x18ec>
   12e34:	movw	r0, #6340	; 0x18c4
   12e38:	mov	r1, #1
   12e3c:	movt	r0, #3
   12e40:	str	r1, [r0]
   12e44:	b	12edc <__assert_fail@plt+0x18e8>
   12e48:	cmp	r1, #112	; 0x70
   12e4c:	beq	12ed0 <__assert_fail@plt+0x18dc>
   12e50:	cmp	r1, #104	; 0x68
   12e54:	bne	12ee0 <__assert_fail@plt+0x18ec>
   12e58:	mov	r0, r5
   12e5c:	bl	114a4 <strlen@plt>
   12e60:	add	r0, r0, #1
   12e64:	bl	14e78 <_obstack_memory_used@@Base+0x71c>
   12e68:	movw	r6, #6340	; 0x18c4
   12e6c:	mov	r4, r0
   12e70:	movt	r6, #3
   12e74:	str	r0, [r6, #4]
   12e78:	add	r5, r5, #1
   12e7c:	ldrb	r7, [r5, #-1]
   12e80:	cmp	r7, #0
   12e84:	beq	12eb0 <__assert_fail@plt+0x18bc>
   12e88:	cmp	r7, #58	; 0x3a
   12e8c:	beq	12ee4 <__assert_fail@plt+0x18f0>
   12e90:	bl	11468 <__ctype_tolower_loc@plt>
   12e94:	ldr	r0, [r0]
   12e98:	ldr	r0, [r0, r7, lsl #2]
   12e9c:	strb	r0, [r4], #1
   12ea0:	add	r5, r5, #1
   12ea4:	ldrb	r7, [r5, #-1]
   12ea8:	cmp	r7, #0
   12eac:	bne	12e88 <__assert_fail@plt+0x1894>
   12eb0:	mov	r0, #0
   12eb4:	strb	r0, [r4]
   12eb8:	pop	{r4, r5, r6, r7, fp, pc}
   12ebc:	movw	r1, #6164	; 0x1814
   12ec0:	mov	r0, #0
   12ec4:	movt	r1, #3
   12ec8:	str	r0, [r1]
   12ecc:	pop	{r4, r5, r6, r7, fp, pc}
   12ed0:	movw	r0, #6340	; 0x18c4
   12ed4:	movt	r0, #3
   12ed8:	str	r5, [r0, #8]
   12edc:	mov	r0, #0
   12ee0:	pop	{r4, r5, r6, r7, fp, pc}
   12ee4:	str	r5, [r6, #8]
   12ee8:	mov	r0, #0
   12eec:	strb	r0, [r4]
   12ef0:	pop	{r4, r5, r6, r7, fp, pc}

00012ef4 <argp_parse@@Base>:
   12ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ef8:	add	fp, sp, #28
   12efc:	sub	sp, sp, #212	; 0xd4
   12f00:	mov	r4, r3
   12f04:	mov	r6, r2
   12f08:	mov	r7, r1
   12f0c:	mov	r5, r0
   12f10:	tst	r3, #1
   12f14:	bne	12f48 <argp_parse@@Base+0x54>
   12f18:	movw	r0, #6324	; 0x18b4
   12f1c:	movt	r0, #3
   12f20:	ldr	r1, [r0]
   12f24:	cmp	r1, #0
   12f28:	bne	12f34 <argp_parse@@Base+0x40>
   12f2c:	ldr	r1, [r6]
   12f30:	str	r1, [r0]
   12f34:	movw	r8, #6320	; 0x18b0
   12f38:	movt	r8, #3
   12f3c:	ldr	r0, [r8]
   12f40:	cmp	r0, #0
   12f44:	beq	13004 <argp_parse@@Base+0x110>
   12f48:	tst	r4, #16
   12f4c:	str	r6, [fp, #-228]	; 0xffffff1c
   12f50:	str	r7, [fp, #-232]	; 0xffffff18
   12f54:	bne	13020 <argp_parse@@Base+0x12c>
   12f58:	mov	r1, sp
   12f5c:	sub	r3, r1, #64	; 0x40
   12f60:	mov	sp, r3
   12f64:	mov	r2, sp
   12f68:	sub	r0, r2, #32
   12f6c:	mov	sp, r0
   12f70:	vmov.i32	q8, #0	; 0x00000000
   12f74:	sub	r2, r2, #20
   12f78:	cmp	r5, #0
   12f7c:	vst1.32	{d16-d17}, [r2]
   12f80:	mov	r2, r0
   12f84:	vst1.64	{d16-d17}, [r2]!
   12f88:	str	r3, [r2]
   12f8c:	sub	r2, r1, #32
   12f90:	sub	r1, r1, #48	; 0x30
   12f94:	vst1.64	{d16-d17}, [r2]
   12f98:	vst1.64	{d16-d17}, [r1]
   12f9c:	mov	r1, #48	; 0x30
   12fa0:	mov	r2, r3
   12fa4:	vst1.64	{d16-d17}, [r2], r1
   12fa8:	vst1.64	{d16-d17}, [r2]
   12fac:	movw	r2, #51164	; 0xc7dc
   12fb0:	strne	r5, [r3], #16
   12fb4:	movt	r2, #1
   12fb8:	mov	r1, r3
   12fbc:	str	r2, [r1], #16
   12fc0:	movw	r2, #6464	; 0x1940
   12fc4:	movt	r2, #3
   12fc8:	ldr	r2, [r2]
   12fcc:	cmp	r2, #0
   12fd0:	bne	12fe8 <argp_parse@@Base+0xf4>
   12fd4:	movw	r2, #6360	; 0x18d8
   12fd8:	movt	r2, #3
   12fdc:	ldr	r2, [r2]
   12fe0:	cmp	r2, #0
   12fe4:	beq	12ff8 <argp_parse@@Base+0x104>
   12fe8:	movw	r2, #51192	; 0xc7f8
   12fec:	mov	r3, r1
   12ff0:	movt	r2, #1
   12ff4:	str	r2, [r1]
   12ff8:	mov	r1, #0
   12ffc:	str	r1, [r3, #16]
   13000:	b	13024 <argp_parse@@Base+0x130>
   13004:	ldr	r0, [r6]
   13008:	bl	14238 <argp_parse@@Base+0x1344>
   1300c:	str	r0, [r8]
   13010:	tst	r4, #16
   13014:	str	r6, [fp, #-228]	; 0xffffff1c
   13018:	str	r7, [fp, #-232]	; 0xffffff18
   1301c:	beq	12f58 <argp_parse@@Base+0x64>
   13020:	mov	r0, r5
   13024:	vmov.i32	q8, #0	; 0x00000000
   13028:	sub	r9, fp, #96	; 0x60
   1302c:	mov	r7, #12
   13030:	mov	r5, #0
   13034:	cmp	r0, #0
   13038:	str	r4, [fp, #-224]	; 0xffffff20
   1303c:	str	r0, [fp, #-236]	; 0xffffff14
   13040:	mov	r1, r9
   13044:	str	r5, [fp, #-52]	; 0xffffffcc
   13048:	str	r5, [fp, #-56]	; 0xffffffc8
   1304c:	str	r5, [fp, #-60]	; 0xffffffc4
   13050:	vst1.64	{d16-d17}, [r1], r7
   13054:	vst1.32	{d16-d17}, [r1]
   13058:	mov	r1, #1
   1305c:	bic	r3, r1, r4, lsr #2
   13060:	str	r3, [fp, #-64]	; 0xffffffc0
   13064:	beq	1309c <argp_parse@@Base+0x1a8>
   13068:	sub	r1, fp, #64	; 0x40
   1306c:	bl	13e30 <argp_parse@@Base+0xf3c>
   13070:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13074:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13078:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1307c:	mov	r6, #16
   13080:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13084:	add	r2, r2, r2, lsl #3
   13088:	add	r1, r6, r1, lsl #4
   1308c:	mov	r6, #36	; 0x24
   13090:	lsl	r5, r0, #2
   13094:	add	r8, r6, r2, lsl #2
   13098:	b	130a4 <argp_parse@@Base+0x1b0>
   1309c:	mov	r8, #36	; 0x24
   130a0:	mov	r1, #16
   130a4:	add	r4, r8, r5
   130a8:	add	sl, r4, r1
   130ac:	add	r0, r3, sl
   130b0:	add	r0, r0, #1
   130b4:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   130b8:	cmp	r0, #0
   130bc:	str	r0, [fp, #-100]	; 0xffffff9c
   130c0:	beq	13ba8 <argp_parse@@Base+0xcb4>
   130c4:	mov	r6, r0
   130c8:	mov	r0, #12
   130cc:	sub	r1, fp, #220	; 0xdc
   130d0:	mov	r2, r5
   130d4:	vld1.64	{d16-d17}, [r9], r0
   130d8:	add	r0, r1, #20
   130dc:	add	r7, r6, r8
   130e0:	add	r8, r6, r4
   130e4:	add	r4, r6, sl
   130e8:	vld1.32	{d18-d19}, [r9]
   130ec:	mov	r9, r1
   130f0:	vst1.32	{d16-d17}, [r0]
   130f4:	add	r0, r1, #32
   130f8:	mov	r1, #0
   130fc:	vst1.32	{d18-d19}, [r0]
   13100:	mov	r0, #1
   13104:	str	r6, [fp, #-172]	; 0xffffff54
   13108:	str	r0, [fp, #-204]	; 0xffffff34
   1310c:	str	r0, [fp, #-208]	; 0xffffff30
   13110:	mov	r0, r7
   13114:	str	r7, [fp, #-164]	; 0xffffff5c
   13118:	str	r8, [fp, #-212]	; 0xffffff2c
   1311c:	str	r4, [fp, #-216]	; 0xffffff28
   13120:	bl	114ec <memset@plt>
   13124:	ldr	sl, [fp, #-224]	; 0xffffff20
   13128:	mov	r0, #45	; 0x2d
   1312c:	str	r7, [fp, #-36]	; 0xffffffdc
   13130:	str	r8, [fp, #-40]	; 0xffffffd8
   13134:	str	r4, [fp, #-44]	; 0xffffffd4
   13138:	str	r9, [fp, #-48]	; 0xffffffd0
   1313c:	tst	sl, #8
   13140:	moveq	r0, #43	; 0x2b
   13144:	tsteq	sl, #4
   13148:	beq	1377c <argp_parse@@Base+0x888>
   1314c:	add	r1, r4, #1
   13150:	strb	r0, [r4]
   13154:	str	r1, [fp, #-44]	; 0xffffffd4
   13158:	ldr	r0, [fp, #-236]	; 0xffffff14
   1315c:	ldr	r5, [fp, #-228]	; 0xffffff1c
   13160:	ldr	r9, [fp, #-232]	; 0xffffff18
   13164:	mov	r3, #0
   13168:	strb	r3, [r1]
   1316c:	str	r3, [r8]
   13170:	cmp	r0, #0
   13174:	str	r0, [fp, #-220]	; 0xffffff24
   13178:	beq	131b0 <argp_parse@@Base+0x2bc>
   1317c:	sub	sp, sp, #8
   13180:	sub	r1, fp, #48	; 0x30
   13184:	mov	r2, #0
   13188:	mov	r3, r6
   1318c:	str	r1, [sp]
   13190:	mov	r1, #0
   13194:	bl	13f1c <argp_parse@@Base+0x1028>
   13198:	add	sp, sp, #8
   1319c:	str	r0, [fp, #-168]	; 0xffffff58
   131a0:	mov	r6, r0
   131a4:	ldr	r3, [fp, #-220]	; 0xffffff24
   131a8:	ldr	r4, [fp, #-172]	; 0xffffff54
   131ac:	b	131b8 <argp_parse@@Base+0x2c4>
   131b0:	mov	r4, r6
   131b4:	str	r6, [fp, #-168]	; 0xffffff58
   131b8:	vmov.i32	q8, #0	; 0x00000000
   131bc:	sub	r1, fp, #220	; 0xdc
   131c0:	mov	r7, #0
   131c4:	mov	r0, #1
   131c8:	mov	r8, r5
   131cc:	cmp	r4, r6
   131d0:	mov	r2, r1
   131d4:	add	r1, r1, #84	; 0x54
   131d8:	str	r7, [fp, #-116]	; 0xffffff8c
   131dc:	str	r7, [fp, #-120]	; 0xffffff88
   131e0:	vst1.32	{d16-d17}, [r1]
   131e4:	str	sl, [fp, #-140]	; 0xffffff74
   131e8:	str	r5, [fp, #-148]	; 0xffffff6c
   131ec:	str	r9, [fp, #-152]	; 0xffffff68
   131f0:	str	r3, [fp, #-156]	; 0xffffff64
   131f4:	str	r2, [fp, #-104]	; 0xffffff98
   131f8:	str	r7, [fp, #-144]	; 0xffffff70
   131fc:	str	r0, [fp, #-160]	; 0xffffff60
   13200:	movw	r0, #6328	; 0x18b8
   13204:	add	sl, r2, #64	; 0x40
   13208:	movt	r0, #3
   1320c:	ldr	r0, [r0]
   13210:	str	r0, [fp, #-112]	; 0xffffff90
   13214:	movw	r0, #6332	; 0x18bc
   13218:	movt	r0, #3
   1321c:	ldr	r0, [r0]
   13220:	str	r0, [fp, #-108]	; 0xffffff94
   13224:	bcs	13310 <argp_parse@@Base+0x41c>
   13228:	ldr	r0, [fp, #12]
   1322c:	str	r0, [r4, #24]
   13230:	cmp	r7, #7
   13234:	cmpne	r7, #0
   13238:	beq	132a0 <argp_parse@@Base+0x3ac>
   1323c:	b	13ba8 <argp_parse@@Base+0xcb4>
   13240:	ldr	r0, [r4, #32]
   13244:	mov	r1, #0
   13248:	mov	r2, sl
   1324c:	str	r0, [fp, #-120]	; 0xffffff88
   13250:	ldr	r0, [r4, #24]
   13254:	str	r0, [fp, #-128]	; 0xffffff80
   13258:	ldr	r0, [r4, #28]
   1325c:	str	r0, [fp, #-124]	; 0xffffff84
   13260:	ldr	r0, [r4, #12]
   13264:	str	r0, [fp, #-136]	; 0xffffff78
   13268:	movw	r0, #6
   1326c:	movt	r0, #256	; 0x100
   13270:	sub	r0, r0, #3
   13274:	blx	r3
   13278:	mov	r7, r0
   1327c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13280:	str	r0, [r4, #32]
   13284:	ldr	r0, [fp, #-168]	; 0xffffff58
   13288:	add	r4, r4, #36	; 0x24
   1328c:	cmp	r4, r0
   13290:	bcs	13304 <argp_parse@@Base+0x410>
   13294:	cmp	r7, #7
   13298:	cmpne	r7, #0
   1329c:	bne	13ba8 <argp_parse@@Base+0xcb4>
   132a0:	ldr	r0, [r4, #16]
   132a4:	cmp	r0, #0
   132a8:	beq	132bc <argp_parse@@Base+0x3c8>
   132ac:	ldr	r1, [r4, #20]
   132b0:	ldr	r0, [r0, #28]
   132b4:	ldr	r0, [r0, r1, lsl #2]
   132b8:	str	r0, [r4, #24]
   132bc:	ldr	r3, [r4]
   132c0:	cmp	r3, #0
   132c4:	bne	13240 <argp_parse@@Base+0x34c>
   132c8:	ldr	r0, [r4, #4]
   132cc:	mov	r7, #7
   132d0:	ldr	r0, [r0, #16]
   132d4:	cmp	r0, #0
   132d8:	beq	13284 <argp_parse@@Base+0x390>
   132dc:	ldr	r0, [r0]
   132e0:	cmp	r0, #0
   132e4:	beq	13284 <argp_parse@@Base+0x390>
   132e8:	ldr	r0, [r4, #24]
   132ec:	ldr	r1, [r4, #28]
   132f0:	str	r0, [r1]
   132f4:	ldr	r3, [r4]
   132f8:	cmp	r3, #0
   132fc:	bne	13240 <argp_parse@@Base+0x34c>
   13300:	b	13284 <argp_parse@@Base+0x390>
   13304:	cmp	r7, #7
   13308:	cmpne	r7, #0
   1330c:	bne	13ba8 <argp_parse@@Base+0xcb4>
   13310:	ldr	r0, [fp, #-140]	; 0xffffff74
   13314:	tst	r0, #2
   13318:	bne	13344 <argp_parse@@Base+0x450>
   1331c:	mov	r0, #1
   13320:	str	r0, [fp, #-204]	; 0xffffff34
   13324:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13328:	cmp	r0, r8
   1332c:	bne	13378 <argp_parse@@Base+0x484>
   13330:	ldr	r0, [r8]
   13334:	cmp	r0, #0
   13338:	beq	13378 <argp_parse@@Base+0x484>
   1333c:	bl	14238 <argp_parse@@Base+0x1344>
   13340:	b	13384 <argp_parse@@Base+0x490>
   13344:	mov	r1, #0
   13348:	tst	r0, #1
   1334c:	str	r1, [fp, #-204]	; 0xffffff34
   13350:	beq	1336c <argp_parse@@Base+0x478>
   13354:	ldr	r0, [fp, #-152]	; 0xffffff68
   13358:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1335c:	sub	r1, r1, #4
   13360:	add	r0, r0, #1
   13364:	str	r1, [fp, #-148]	; 0xffffff6c
   13368:	str	r0, [fp, #-152]	; 0xffffff68
   1336c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13370:	cmp	r0, r8
   13374:	beq	13330 <argp_parse@@Base+0x43c>
   13378:	movw	r0, #6320	; 0x18b0
   1337c:	movt	r0, #3
   13380:	ldr	r0, [r0]
   13384:	str	r0, [fp, #-116]	; 0xffffff8c
   13388:	sub	r0, fp, #220	; 0xdc
   1338c:	mov	r8, #0
   13390:	add	r6, r0, #12
   13394:	ldr	r0, [fp, #-132]	; 0xffffff7c
   13398:	cmp	r0, #0
   1339c:	bne	133c0 <argp_parse@@Base+0x4cc>
   133a0:	b	133d0 <argp_parse@@Base+0x4dc>
   133a4:	cmp	r0, #7
   133a8:	beq	13784 <argp_parse@@Base+0x890>
   133ac:	cmp	r0, #0
   133b0:	bne	139f8 <argp_parse@@Base+0xb04>
   133b4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   133b8:	cmp	r0, #0
   133bc:	beq	133d0 <argp_parse@@Base+0x4dc>
   133c0:	ldr	r9, [fp, #-144]	; 0xffffff70
   133c4:	cmp	r9, r0
   133c8:	bge	13484 <argp_parse@@Base+0x590>
   133cc:	str	r8, [fp, #-132]	; 0xffffff7c
   133d0:	ldr	r0, [fp, #-160]	; 0xffffff60
   133d4:	ldr	r9, [fp, #-144]	; 0xffffff70
   133d8:	cmp	r0, #0
   133dc:	beq	13484 <argp_parse@@Base+0x590>
   133e0:	mvn	r0, #0
   133e4:	str	r0, [fp, #-200]	; 0xffffff38
   133e8:	str	r9, [fp, #-208]	; 0xffffff30
   133ec:	ldr	r2, [fp, #-216]	; 0xffffff28
   133f0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   133f4:	ldr	r0, [fp, #-152]	; 0xffffff68
   133f8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   133fc:	ldrb	r7, [fp, #-140]	; 0xffffff74
   13400:	sub	sp, sp, #8
   13404:	tst	r7, #64	; 0x40
   13408:	bne	1341c <argp_parse@@Base+0x528>
   1340c:	str	r8, [sp]
   13410:	str	r6, [sp, #4]
   13414:	bl	14324 <argp_parse@@Base+0x1430>
   13418:	b	13428 <argp_parse@@Base+0x534>
   1341c:	str	r8, [sp]
   13420:	str	r6, [sp, #4]
   13424:	bl	14388 <argp_parse@@Base+0x1494>
   13428:	add	sp, sp, #8
   1342c:	ldr	r9, [fp, #-208]	; 0xffffff30
   13430:	mov	r7, r0
   13434:	cmn	r0, #1
   13438:	str	r9, [fp, #-144]	; 0xffffff70
   1343c:	beq	13458 <argp_parse@@Base+0x564>
   13440:	cmp	r7, #63	; 0x3f
   13444:	beq	13628 <argp_parse@@Base+0x734>
   13448:	cmp	r7, #1
   1344c:	bne	13638 <argp_parse@@Base+0x744>
   13450:	ldr	r7, [fp, #-196]	; 0xffffff3c
   13454:	b	134bc <argp_parse@@Base+0x5c8>
   13458:	cmp	r9, #2
   1345c:	str	r8, [fp, #-160]	; 0xffffff60
   13460:	blt	13484 <argp_parse@@Base+0x590>
   13464:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13468:	movw	r1, #51652	; 0xc9c4
   1346c:	movt	r1, #1
   13470:	add	r0, r0, r9, lsl #2
   13474:	ldr	r0, [r0, #-4]
   13478:	bl	11330 <strcmp@plt>
   1347c:	cmp	r0, #0
   13480:	streq	r9, [fp, #-132]	; 0xffffff7c
   13484:	ldr	r2, [fp, #-152]	; 0xffffff68
   13488:	mov	r1, #1
   1348c:	mov	r0, #7
   13490:	cmp	r9, r2
   13494:	bge	137a0 <argp_parse@@Base+0x8ac>
   13498:	ldrb	r2, [fp, #-140]	; 0xffffff74
   1349c:	tst	r2, #4
   134a0:	bne	137a0 <argp_parse@@Base+0x8ac>
   134a4:	add	r0, r9, #1
   134a8:	str	r0, [fp, #-144]	; 0xffffff70
   134ac:	ldr	r1, [fp, #-148]	; 0xffffff6c
   134b0:	ldr	r7, [r1, r9, lsl #2]
   134b4:	mov	r9, r0
   134b8:	str	r7, [fp, #-196]	; 0xffffff3c
   134bc:	sub	r0, r9, #1
   134c0:	str	r0, [fp, #-144]	; 0xffffff70
   134c4:	ldr	r1, [fp, #-172]	; 0xffffff54
   134c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   134cc:	cmp	r1, r2
   134d0:	bcs	13784 <argp_parse@@Base+0x890>
   134d4:	add	r4, r1, #24
   134d8:	add	r1, r0, #1
   134dc:	str	r1, [fp, #-144]	; 0xffffff70
   134e0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   134e4:	cmp	r3, #0
   134e8:	beq	135a0 <argp_parse@@Base+0x6ac>
   134ec:	ldr	r0, [r4, #8]
   134f0:	mov	r1, r7
   134f4:	mov	r2, sl
   134f8:	mov	r5, #0
   134fc:	str	r0, [fp, #-120]	; 0xffffff88
   13500:	ldr	r0, [r4]
   13504:	str	r0, [fp, #-128]	; 0xffffff80
   13508:	ldr	r0, [r4, #4]
   1350c:	str	r0, [fp, #-124]	; 0xffffff84
   13510:	ldr	r0, [r4, #-12]
   13514:	str	r0, [fp, #-136]	; 0xffffff78
   13518:	mov	r0, #0
   1351c:	blx	r3
   13520:	ldr	r1, [fp, #-120]	; 0xffffff88
   13524:	cmp	r0, #7
   13528:	str	r1, [r4, #8]
   1352c:	bne	135b8 <argp_parse@@Base+0x6c4>
   13530:	ldr	r0, [fp, #-144]	; 0xffffff70
   13534:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13538:	sub	r0, r0, #1
   1353c:	cmp	r3, #0
   13540:	str	r0, [fp, #-144]	; 0xffffff70
   13544:	beq	135a4 <argp_parse@@Base+0x6b0>
   13548:	ldr	r0, [r4]
   1354c:	mov	r1, #0
   13550:	mov	r2, sl
   13554:	str	r0, [fp, #-128]	; 0xffffff80
   13558:	ldr	r0, [r4, #4]
   1355c:	str	r0, [fp, #-124]	; 0xffffff84
   13560:	ldr	r0, [r4, #-12]
   13564:	str	r0, [fp, #-136]	; 0xffffff78
   13568:	movw	r0, #6
   1356c:	movt	r0, #256	; 0x100
   13570:	blx	r3
   13574:	ldr	r1, [fp, #-120]	; 0xffffff88
   13578:	str	r1, [r4, #8]
   1357c:	cmp	r0, #7
   13580:	bne	135b0 <argp_parse@@Base+0x6bc>
   13584:	ldr	r2, [fp, #-168]	; 0xffffff58
   13588:	add	r1, r4, #12
   1358c:	cmp	r1, r2
   13590:	bcs	135b0 <argp_parse@@Base+0x6bc>
   13594:	ldr	r0, [fp, #-144]	; 0xffffff70
   13598:	add	r4, r4, #36	; 0x24
   1359c:	b	134d8 <argp_parse@@Base+0x5e4>
   135a0:	str	r0, [fp, #-144]	; 0xffffff70
   135a4:	mov	r0, #7
   135a8:	cmp	r0, #7
   135ac:	beq	13584 <argp_parse@@Base+0x690>
   135b0:	movw	r5, #6
   135b4:	movt	r5, #256	; 0x100
   135b8:	cmp	r0, #0
   135bc:	bne	133a4 <argp_parse@@Base+0x4b0>
   135c0:	movw	r0, #6
   135c4:	movt	r0, #256	; 0x100
   135c8:	cmp	r5, r0
   135cc:	bne	13604 <argp_parse@@Base+0x710>
   135d0:	ldr	r0, [fp, #-152]	; 0xffffff68
   135d4:	str	r0, [fp, #-144]	; 0xffffff70
   135d8:	cmp	r0, r9
   135dc:	blt	13610 <argp_parse@@Base+0x71c>
   135e0:	ldr	r1, [r4, #-12]
   135e4:	sub	r0, r0, r9
   135e8:	add	r0, r0, r1
   135ec:	add	r0, r0, #1
   135f0:	str	r0, [r4, #-12]
   135f4:	mov	r0, #0
   135f8:	cmp	r0, #0
   135fc:	beq	133b4 <argp_parse@@Base+0x4c0>
   13600:	b	139f8 <argp_parse@@Base+0xb04>
   13604:	ldr	r0, [fp, #-144]	; 0xffffff70
   13608:	cmp	r0, r9
   1360c:	bge	135e0 <argp_parse@@Base+0x6ec>
   13610:	mov	r0, #1
   13614:	str	r0, [fp, #-160]	; 0xffffff60
   13618:	mov	r0, #0
   1361c:	cmp	r0, #0
   13620:	beq	133b4 <argp_parse@@Base+0x4c0>
   13624:	b	139f8 <argp_parse@@Base+0xb04>
   13628:	ldr	r0, [fp, #-200]	; 0xffffff38
   1362c:	cmn	r0, #1
   13630:	beq	136b0 <argp_parse@@Base+0x7bc>
   13634:	b	13be8 <argp_parse@@Base+0xcf4>
   13638:	cmp	r8, r7, asr #24
   1363c:	beq	136b0 <argp_parse@@Base+0x7bc>
   13640:	asr	r0, r7, #24
   13644:	ldr	r1, [fp, #-172]	; 0xffffff54
   13648:	sub	r0, r0, #1
   1364c:	add	r0, r0, r0, lsl #3
   13650:	ldr	r3, [r1, r0, lsl #2]
   13654:	cmp	r3, #0
   13658:	beq	13bb4 <argp_parse@@Base+0xcc0>
   1365c:	add	r4, r1, r0, lsl #2
   13660:	tst	r7, #8388608	; 0x800000
   13664:	mov	r2, sl
   13668:	ldr	r0, [r4, #32]!
   1366c:	str	r0, [fp, #-120]	; 0xffffff88
   13670:	ldr	r0, [r4, #-8]
   13674:	str	r0, [fp, #-128]	; 0xffffff80
   13678:	ldr	r0, [r4, #-4]
   1367c:	str	r0, [fp, #-124]	; 0xffffff84
   13680:	ldr	r0, [r4, #-20]	; 0xffffffec
   13684:	str	r0, [fp, #-136]	; 0xffffff78
   13688:	bic	r0, r7, #-16777216	; 0xff000000
   1368c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13690:	orrne	r0, r0, #-16777216	; 0xff000000
   13694:	blx	r3
   13698:	mov	r1, #0
   1369c:	ldr	r2, [fp, #-120]	; 0xffffff88
   136a0:	cmp	r0, #7
   136a4:	str	r2, [r4]
   136a8:	bne	133ac <argp_parse@@Base+0x4b8>
   136ac:	b	13750 <argp_parse@@Base+0x85c>
   136b0:	ldr	r0, [fp, #-216]	; 0xffffff28
   136b4:	mov	r1, r7
   136b8:	bl	114b0 <strchr@plt>
   136bc:	cmp	r0, #0
   136c0:	beq	13758 <argp_parse@@Base+0x864>
   136c4:	ldr	r1, [fp, #-172]	; 0xffffff54
   136c8:	ldr	r2, [fp, #-168]	; 0xffffff58
   136cc:	cmp	r1, r2
   136d0:	bcs	13758 <argp_parse@@Base+0x864>
   136d4:	add	r1, r1, #24
   136d8:	ldr	r3, [r1, #-16]
   136dc:	cmp	r3, r0
   136e0:	bhi	136fc <argp_parse@@Base+0x808>
   136e4:	add	r3, r1, #36	; 0x24
   136e8:	add	r1, r1, #12
   136ec:	cmp	r1, r2
   136f0:	mov	r1, r3
   136f4:	bcc	136d8 <argp_parse@@Base+0x7e4>
   136f8:	b	13758 <argp_parse@@Base+0x864>
   136fc:	ldr	r3, [r1, #-24]	; 0xffffffe8
   13700:	cmp	r3, #0
   13704:	beq	13758 <argp_parse@@Base+0x864>
   13708:	mov	r4, r1
   1370c:	mov	r2, sl
   13710:	ldr	r0, [r4, #8]!
   13714:	str	r0, [fp, #-120]	; 0xffffff88
   13718:	ldr	r0, [r1]
   1371c:	str	r0, [fp, #-128]	; 0xffffff80
   13720:	ldr	r0, [r1, #4]
   13724:	str	r0, [fp, #-124]	; 0xffffff84
   13728:	ldr	r0, [r1, #-12]
   1372c:	str	r0, [fp, #-136]	; 0xffffff78
   13730:	mov	r0, r7
   13734:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13738:	blx	r3
   1373c:	mov	r1, #1
   13740:	ldr	r2, [fp, #-120]	; 0xffffff88
   13744:	cmp	r0, #7
   13748:	str	r2, [r4]
   1374c:	bne	133ac <argp_parse@@Base+0x4b8>
   13750:	cmp	r1, #0
   13754:	beq	13bb4 <argp_parse@@Base+0xcc0>
   13758:	movw	r1, #51655	; 0xc9c7
   1375c:	movw	r3, #51388	; 0xc8bc
   13760:	mov	r0, sl
   13764:	mov	r2, r7
   13768:	movt	r1, #1
   1376c:	movt	r3, #1
   13770:	bl	16d70 <argp_error@@Base>
   13774:	mov	r0, #0
   13778:	b	1378c <argp_parse@@Base+0x898>
   1377c:	mov	r1, r4
   13780:	b	13158 <argp_parse@@Base+0x264>
   13784:	mov	r7, #1
   13788:	mov	r0, #1
   1378c:	add	r1, r7, #1
   13790:	clz	r1, r1
   13794:	lsr	r1, r1, #5
   13798:	orr	r1, r1, r0
   1379c:	mov	r0, #7
   137a0:	subs	r7, r0, #7
   137a4:	movne	r7, r0
   137a8:	cmp	r1, #0
   137ac:	moveq	r7, r0
   137b0:	cmp	r7, #0
   137b4:	beq	1387c <argp_parse@@Base+0x988>
   137b8:	cmp	r7, #0
   137bc:	beq	13a48 <argp_parse@@Base+0xb54>
   137c0:	cmp	r7, #7
   137c4:	bne	137dc <argp_parse@@Base+0x8e8>
   137c8:	ldr	r1, [fp, #-112]	; 0xffffff90
   137cc:	mov	r0, sl
   137d0:	mov	r2, #260	; 0x104
   137d4:	bl	16cb4 <argp_state_help@@Base>
   137d8:	mov	r7, #7
   137dc:	ldr	r4, [fp, #-172]	; 0xffffff54
   137e0:	ldr	r0, [fp, #-168]	; 0xffffff58
   137e4:	cmp	r4, r0
   137e8:	bcs	13b10 <argp_parse@@Base+0xc1c>
   137ec:	movw	r1, #6
   137f0:	movt	r1, #256	; 0x100
   137f4:	sub	r6, r1, #1
   137f8:	ldr	r3, [r4]
   137fc:	cmp	r3, #0
   13800:	bne	1381c <argp_parse@@Base+0x928>
   13804:	add	r4, r4, #36	; 0x24
   13808:	cmp	r4, r0
   1380c:	bcs	13864 <argp_parse@@Base+0x970>
   13810:	ldr	r3, [r4]
   13814:	cmp	r3, #0
   13818:	beq	13804 <argp_parse@@Base+0x910>
   1381c:	ldr	r0, [r4, #32]
   13820:	mov	r1, #0
   13824:	mov	r2, sl
   13828:	str	r0, [fp, #-120]	; 0xffffff88
   1382c:	ldr	r0, [r4, #24]
   13830:	str	r0, [fp, #-128]	; 0xffffff80
   13834:	ldr	r0, [r4, #28]
   13838:	str	r0, [fp, #-124]	; 0xffffff84
   1383c:	ldr	r0, [r4, #12]
   13840:	str	r0, [fp, #-136]	; 0xffffff78
   13844:	mov	r0, r6
   13848:	blx	r3
   1384c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13850:	str	r0, [r4, #32]
   13854:	ldr	r0, [fp, #-168]	; 0xffffff58
   13858:	add	r4, r4, #36	; 0x24
   1385c:	cmp	r4, r0
   13860:	bcc	13810 <argp_parse@@Base+0x91c>
   13864:	ldr	r4, [fp, #-172]	; 0xffffff54
   13868:	ldr	r0, [fp, #-168]	; 0xffffff58
   1386c:	sub	r6, r0, #36	; 0x24
   13870:	cmp	r6, r4
   13874:	bcs	13b20 <argp_parse@@Base+0xc2c>
   13878:	b	13b98 <argp_parse@@Base+0xca4>
   1387c:	ldr	r1, [fp, #-152]	; 0xffffff68
   13880:	ldr	r0, [fp, #-144]	; 0xffffff70
   13884:	cmp	r0, r1
   13888:	bne	139e4 <argp_parse@@Base+0xaf0>
   1388c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13890:	ldr	r1, [fp, #-168]	; 0xffffff58
   13894:	mov	r0, #0
   13898:	cmp	r4, r1
   1389c:	bcs	13940 <argp_parse@@Base+0xa4c>
   138a0:	movw	r0, #6
   138a4:	mov	r7, #0
   138a8:	movt	r0, #256	; 0x100
   138ac:	sub	r6, r0, #4
   138b0:	mov	r0, #0
   138b4:	cmp	r0, #7
   138b8:	cmpne	r0, #0
   138bc:	beq	13914 <argp_parse@@Base+0xa20>
   138c0:	b	1393c <argp_parse@@Base+0xa48>
   138c4:	ldr	r0, [r4, #32]
   138c8:	mov	r1, #0
   138cc:	mov	r2, sl
   138d0:	str	r0, [fp, #-120]	; 0xffffff88
   138d4:	ldr	r0, [r4, #24]
   138d8:	str	r0, [fp, #-128]	; 0xffffff80
   138dc:	ldr	r0, [r4, #28]
   138e0:	str	r7, [fp, #-136]	; 0xffffff78
   138e4:	str	r0, [fp, #-124]	; 0xffffff84
   138e8:	mov	r0, r6
   138ec:	blx	r3
   138f0:	ldr	r1, [fp, #-120]	; 0xffffff88
   138f4:	str	r1, [r4, #32]
   138f8:	ldr	r1, [fp, #-168]	; 0xffffff58
   138fc:	add	r4, r4, #36	; 0x24
   13900:	cmp	r4, r1
   13904:	bcs	1393c <argp_parse@@Base+0xa48>
   13908:	cmp	r0, #7
   1390c:	cmpne	r0, #0
   13910:	bne	1393c <argp_parse@@Base+0xa48>
   13914:	ldr	r2, [r4, #12]
   13918:	cmp	r2, #0
   1391c:	bne	138fc <argp_parse@@Base+0xa08>
   13920:	ldr	r3, [r4]
   13924:	cmp	r3, #0
   13928:	bne	138c4 <argp_parse@@Base+0x9d0>
   1392c:	mov	r0, #7
   13930:	add	r4, r4, #36	; 0x24
   13934:	cmp	r4, r1
   13938:	bcc	13908 <argp_parse@@Base+0xa14>
   1393c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13940:	sub	r7, r1, #36	; 0x24
   13944:	cmp	r7, r4
   13948:	bcc	139d8 <argp_parse@@Base+0xae4>
   1394c:	movw	r1, #6
   13950:	movt	r1, #256	; 0x100
   13954:	sub	r6, r1, #5
   13958:	cmp	r0, #7
   1395c:	cmpne	r0, #0
   13960:	beq	13984 <argp_parse@@Base+0xa90>
   13964:	b	13a2c <argp_parse@@Base+0xb38>
   13968:	mov	r0, #7
   1396c:	sub	r7, r7, #36	; 0x24
   13970:	cmp	r7, r4
   13974:	bcc	139d8 <argp_parse@@Base+0xae4>
   13978:	cmp	r0, #7
   1397c:	cmpne	r0, #0
   13980:	bne	13a2c <argp_parse@@Base+0xb38>
   13984:	ldr	r3, [r7]
   13988:	cmp	r3, #0
   1398c:	beq	13968 <argp_parse@@Base+0xa74>
   13990:	ldr	r0, [r7, #32]
   13994:	mov	r1, #0
   13998:	mov	r2, sl
   1399c:	str	r0, [fp, #-120]	; 0xffffff88
   139a0:	ldr	r0, [r7, #24]
   139a4:	str	r0, [fp, #-128]	; 0xffffff80
   139a8:	ldr	r0, [r7, #28]
   139ac:	str	r0, [fp, #-124]	; 0xffffff84
   139b0:	ldr	r0, [r7, #12]
   139b4:	str	r0, [fp, #-136]	; 0xffffff78
   139b8:	mov	r0, r6
   139bc:	blx	r3
   139c0:	ldr	r1, [fp, #-120]	; 0xffffff88
   139c4:	str	r1, [r7, #32]
   139c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   139cc:	sub	r7, r7, #36	; 0x24
   139d0:	cmp	r7, r4
   139d4:	bcs	13978 <argp_parse@@Base+0xa84>
   139d8:	subs	r7, r0, #7
   139dc:	movne	r7, r0
   139e0:	b	13a30 <argp_parse@@Base+0xb3c>
   139e4:	ldr	r1, [fp, #8]
   139e8:	cmp	r1, #0
   139ec:	beq	13a00 <argp_parse@@Base+0xb0c>
   139f0:	str	r0, [r1]
   139f4:	b	13a48 <argp_parse@@Base+0xb54>
   139f8:	mov	r1, #0
   139fc:	b	137a0 <argp_parse@@Base+0x8ac>
   13a00:	ldrb	r0, [fp, #-140]	; 0xffffff74
   13a04:	tst	r0, #2
   13a08:	bne	137c8 <argp_parse@@Base+0x8d4>
   13a0c:	ldr	r0, [fp, #-112]	; 0xffffff90
   13a10:	cmp	r0, #0
   13a14:	beq	137c8 <argp_parse@@Base+0x8d4>
   13a18:	ldr	r2, [fp, #-116]	; 0xffffff8c
   13a1c:	movw	r1, #51676	; 0xc9dc
   13a20:	movt	r1, #1
   13a24:	bl	114bc <fprintf@plt>
   13a28:	b	137c8 <argp_parse@@Base+0x8d4>
   13a2c:	mov	r7, r0
   13a30:	ldr	r1, [fp, #8]
   13a34:	cmp	r1, #0
   13a38:	ldrne	r0, [fp, #-144]	; 0xffffff70
   13a3c:	strne	r0, [r1]
   13a40:	cmp	r7, #0
   13a44:	bne	137c0 <argp_parse@@Base+0x8cc>
   13a48:	ldr	r0, [fp, #-168]	; 0xffffff58
   13a4c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13a50:	mov	r7, #0
   13a54:	sub	r5, r0, #36	; 0x24
   13a58:	cmp	r5, r4
   13a5c:	bcc	13b10 <argp_parse@@Base+0xc1c>
   13a60:	movw	r1, #6
   13a64:	mov	r0, #0
   13a68:	movt	r1, #256	; 0x100
   13a6c:	sub	r6, r1, #2
   13a70:	cmp	r0, #7
   13a74:	cmpne	r0, #0
   13a78:	beq	13a9c <argp_parse@@Base+0xba8>
   13a7c:	b	13b0c <argp_parse@@Base+0xc18>
   13a80:	mov	r0, #7
   13a84:	sub	r5, r5, #36	; 0x24
   13a88:	cmp	r5, r4
   13a8c:	bcc	13af0 <argp_parse@@Base+0xbfc>
   13a90:	cmp	r0, #7
   13a94:	cmpne	r0, #0
   13a98:	bne	13b0c <argp_parse@@Base+0xc18>
   13a9c:	ldr	r3, [r5]
   13aa0:	cmp	r3, #0
   13aa4:	beq	13a80 <argp_parse@@Base+0xb8c>
   13aa8:	ldr	r0, [r5, #32]
   13aac:	mov	r1, #0
   13ab0:	mov	r2, sl
   13ab4:	str	r0, [fp, #-120]	; 0xffffff88
   13ab8:	ldr	r0, [r5, #24]
   13abc:	str	r0, [fp, #-128]	; 0xffffff80
   13ac0:	ldr	r0, [r5, #28]
   13ac4:	str	r0, [fp, #-124]	; 0xffffff84
   13ac8:	ldr	r0, [r5, #12]
   13acc:	str	r0, [fp, #-136]	; 0xffffff78
   13ad0:	mov	r0, r6
   13ad4:	blx	r3
   13ad8:	ldr	r1, [fp, #-120]	; 0xffffff88
   13adc:	str	r1, [r5, #32]
   13ae0:	ldr	r4, [fp, #-172]	; 0xffffff54
   13ae4:	sub	r5, r5, #36	; 0x24
   13ae8:	cmp	r5, r4
   13aec:	bcs	13a90 <argp_parse@@Base+0xb9c>
   13af0:	subs	r7, r0, #7
   13af4:	movne	r7, r0
   13af8:	ldr	r0, [fp, #-168]	; 0xffffff58
   13afc:	sub	r6, r0, #36	; 0x24
   13b00:	cmp	r6, r4
   13b04:	bcc	13b98 <argp_parse@@Base+0xca4>
   13b08:	b	13b20 <argp_parse@@Base+0xc2c>
   13b0c:	mov	r7, r0
   13b10:	ldr	r0, [fp, #-168]	; 0xffffff58
   13b14:	sub	r6, r0, #36	; 0x24
   13b18:	cmp	r6, r4
   13b1c:	bcc	13b98 <argp_parse@@Base+0xca4>
   13b20:	movw	r0, #6
   13b24:	movt	r0, #256	; 0x100
   13b28:	add	r5, r0, #1
   13b2c:	ldr	r3, [r6]
   13b30:	cmp	r3, #0
   13b34:	bne	13b50 <argp_parse@@Base+0xc5c>
   13b38:	sub	r6, r6, #36	; 0x24
   13b3c:	cmp	r6, r4
   13b40:	bcc	13b98 <argp_parse@@Base+0xca4>
   13b44:	ldr	r3, [r6]
   13b48:	cmp	r3, #0
   13b4c:	beq	13b38 <argp_parse@@Base+0xc44>
   13b50:	ldr	r0, [r6, #32]
   13b54:	mov	r1, #0
   13b58:	mov	r2, sl
   13b5c:	str	r0, [fp, #-120]	; 0xffffff88
   13b60:	ldr	r0, [r6, #24]
   13b64:	str	r0, [fp, #-128]	; 0xffffff80
   13b68:	ldr	r0, [r6, #28]
   13b6c:	str	r0, [fp, #-124]	; 0xffffff84
   13b70:	ldr	r0, [r6, #12]
   13b74:	str	r0, [fp, #-136]	; 0xffffff78
   13b78:	mov	r0, r5
   13b7c:	blx	r3
   13b80:	ldr	r0, [fp, #-120]	; 0xffffff88
   13b84:	str	r0, [r6, #32]
   13b88:	ldr	r4, [fp, #-172]	; 0xffffff54
   13b8c:	sub	r6, r6, #36	; 0x24
   13b90:	cmp	r6, r4
   13b94:	bcs	13b44 <argp_parse@@Base+0xc50>
   13b98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13b9c:	bl	142d0 <argp_parse@@Base+0x13dc>
   13ba0:	cmp	r7, #7
   13ba4:	movweq	r7, #22
   13ba8:	mov	r0, r7
   13bac:	sub	sp, fp, #28
   13bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bb4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   13bb8:	ldr	r1, [r0, #12]
   13bbc:	cmp	r1, r7
   13bc0:	beq	13bf0 <argp_parse@@Base+0xcfc>
   13bc4:	ldr	r1, [r0]
   13bc8:	cmp	r1, #0
   13bcc:	beq	13bf0 <argp_parse@@Base+0xcfc>
   13bd0:	add	r1, r0, #16
   13bd4:	ldr	r0, [r0, #28]
   13bd8:	cmp	r0, r7
   13bdc:	mov	r0, r1
   13be0:	bne	13bc4 <argp_parse@@Base+0xcd0>
   13be4:	b	13bf4 <argp_parse@@Base+0xd00>
   13be8:	mov	r1, #0
   13bec:	b	1379c <argp_parse@@Base+0x8a8>
   13bf0:	mov	r1, r0
   13bf4:	ldr	r0, [r1]
   13bf8:	movw	r1, #51663	; 0xc9cf
   13bfc:	movw	r3, #51388	; 0xc8bc
   13c00:	movw	r2, #51672	; 0xc9d8
   13c04:	movt	r1, #1
   13c08:	movt	r3, #1
   13c0c:	movt	r2, #1
   13c10:	cmp	r0, #0
   13c14:	movne	r2, r0
   13c18:	mov	r0, sl
   13c1c:	b	13770 <argp_parse@@Base+0x87c>
   13c20:	mov	ip, r0
   13c24:	mov	r0, #0
   13c28:	cmp	r1, #0
   13c2c:	beq	13c5c <argp_parse@@Base+0xd68>
   13c30:	ldr	r3, [r1, #52]	; 0x34
   13c34:	ldr	r1, [r3, #48]	; 0x30
   13c38:	ldr	r3, [r3, #52]	; 0x34
   13c3c:	cmp	r1, r3
   13c40:	bxcs	lr
   13c44:	ldr	r2, [r1, #4]
   13c48:	cmp	r2, ip
   13c4c:	beq	13c58 <argp_parse@@Base+0xd64>
   13c50:	add	r1, r1, #36	; 0x24
   13c54:	b	13c3c <argp_parse@@Base+0xd48>
   13c58:	ldr	r0, [r1, #24]
   13c5c:	bx	lr
   13c60:	push	{r4, r5, r6, sl, fp, lr}
   13c64:	add	fp, sp, #16
   13c68:	mov	r5, r2
   13c6c:	mov	r6, r1
   13c70:	mov	r4, #7
   13c74:	cmn	r0, #3
   13c78:	bgt	13ca8 <argp_parse@@Base+0xdb4>
   13c7c:	cmn	r0, #4
   13c80:	beq	13cd4 <argp_parse@@Base+0xde0>
   13c84:	cmn	r0, #3
   13c88:	bne	13d70 <argp_parse@@Base+0xe7c>
   13c8c:	ldr	r1, [r5, #48]	; 0x30
   13c90:	mov	r0, r5
   13c94:	movw	r2, #513	; 0x201
   13c98:	bl	16cb4 <argp_state_help@@Base>
   13c9c:	mov	r4, #0
   13ca0:	mov	r0, r4
   13ca4:	pop	{r4, r5, r6, sl, fp, pc}
   13ca8:	cmn	r0, #2
   13cac:	beq	13d30 <argp_parse@@Base+0xe3c>
   13cb0:	cmp	r0, #63	; 0x3f
   13cb4:	bne	13d70 <argp_parse@@Base+0xe7c>
   13cb8:	ldr	r1, [r5, #48]	; 0x30
   13cbc:	mov	r0, r5
   13cc0:	movw	r2, #634	; 0x27a
   13cc4:	bl	16cb4 <argp_state_help@@Base>
   13cc8:	mov	r4, #0
   13ccc:	mov	r0, r4
   13cd0:	pop	{r4, r5, r6, sl, fp, pc}
   13cd4:	movw	r0, #51590	; 0xc986
   13cd8:	cmp	r6, #0
   13cdc:	mov	r1, #0
   13ce0:	mov	r2, #10
   13ce4:	mov	r4, #0
   13ce8:	movt	r0, #1
   13cec:	movne	r0, r6
   13cf0:	bl	1133c <strtol@plt>
   13cf4:	movw	r5, #6356	; 0x18d4
   13cf8:	movt	r5, #3
   13cfc:	str	r0, [r5]
   13d00:	ldr	r0, [r5]
   13d04:	subs	r0, r0, #1
   13d08:	str	r0, [r5]
   13d0c:	blt	13d70 <argp_parse@@Base+0xe7c>
   13d10:	mov	r0, #1
   13d14:	bl	113cc <sleep@plt>
   13d18:	ldr	r0, [r5]
   13d1c:	sub	r1, r0, #1
   13d20:	cmp	r0, #0
   13d24:	str	r1, [r5]
   13d28:	bgt	13d10 <argp_parse@@Base+0xe1c>
   13d2c:	b	13d70 <argp_parse@@Base+0xe7c>
   13d30:	movw	r0, #6324	; 0x18b4
   13d34:	movt	r0, #3
   13d38:	str	r6, [r0]
   13d3c:	mov	r0, r6
   13d40:	bl	14238 <argp_parse@@Base+0x1344>
   13d44:	movw	r1, #6320	; 0x18b0
   13d48:	str	r0, [r5, #40]	; 0x28
   13d4c:	mov	r4, #0
   13d50:	movt	r1, #3
   13d54:	str	r0, [r1]
   13d58:	ldr	r0, [r5, #16]
   13d5c:	and	r0, r0, #3
   13d60:	cmp	r0, #1
   13d64:	bne	13d70 <argp_parse@@Base+0xe7c>
   13d68:	ldr	r0, [r5, #8]
   13d6c:	str	r6, [r0]
   13d70:	mov	r0, r4
   13d74:	pop	{r4, r5, r6, sl, fp, pc}
   13d78:	push	{r4, sl, fp, lr}
   13d7c:	add	fp, sp, #8
   13d80:	mov	r1, r0
   13d84:	mov	r0, #7
   13d88:	cmp	r1, #86	; 0x56
   13d8c:	popne	{r4, sl, fp, pc}
   13d90:	movw	r0, #6360	; 0x18d8
   13d94:	mov	r4, r2
   13d98:	movt	r0, #3
   13d9c:	ldr	r2, [r0]
   13da0:	cmp	r2, #0
   13da4:	beq	13dc8 <argp_parse@@Base+0xed4>
   13da8:	ldr	r0, [r4, #48]	; 0x30
   13dac:	mov	r1, r4
   13db0:	blx	r2
   13db4:	ldrb	r1, [r4, #16]
   13db8:	mov	r0, #0
   13dbc:	tst	r1, #32
   13dc0:	beq	13dfc <argp_parse@@Base+0xf08>
   13dc4:	pop	{r4, sl, fp, pc}
   13dc8:	movw	r0, #6464	; 0x1940
   13dcc:	movt	r0, #3
   13dd0:	ldr	r2, [r0]
   13dd4:	cmp	r2, #0
   13dd8:	beq	13e04 <argp_parse@@Base+0xf10>
   13ddc:	ldr	r0, [r4, #48]	; 0x30
   13de0:	movw	r1, #51820	; 0xca6c
   13de4:	movt	r1, #1
   13de8:	bl	114bc <fprintf@plt>
   13dec:	ldrb	r1, [r4, #16]
   13df0:	mov	r0, #0
   13df4:	tst	r1, #32
   13df8:	bne	13dc4 <argp_parse@@Base+0xed0>
   13dfc:	mov	r0, #0
   13e00:	bl	1148c <exit@plt>
   13e04:	movw	r1, #52876	; 0xce8c
   13e08:	movw	r2, #51617	; 0xc9a1
   13e0c:	mov	r0, r4
   13e10:	movt	r1, #1
   13e14:	movt	r2, #1
   13e18:	bl	16d70 <argp_error@@Base>
   13e1c:	ldrb	r1, [r4, #16]
   13e20:	mov	r0, #0
   13e24:	tst	r1, #32
   13e28:	bne	13dc4 <argp_parse@@Base+0xed0>
   13e2c:	b	13dfc <argp_parse@@Base+0xf08>
   13e30:	push	{r4, r5, fp, lr}
   13e34:	add	fp, sp, #8
   13e38:	ldr	r2, [r0]
   13e3c:	ldr	ip, [r0, #16]
   13e40:	mov	r4, r1
   13e44:	cmp	r2, #0
   13e48:	beq	13ec0 <argp_parse@@Base+0xfcc>
   13e4c:	ldr	r0, [r4, #8]
   13e50:	mov	r3, #0
   13e54:	add	r0, r0, #1
   13e58:	str	r0, [r4, #8]
   13e5c:	mov	r0, #0
   13e60:	add	r5, r2, r3, lsl #3
   13e64:	ldr	r1, [r5, #4]
   13e68:	cmp	r1, #0
   13e6c:	beq	13e88 <argp_parse@@Base+0xf94>
   13e70:	add	r3, r3, #3
   13e74:	add	r0, r0, #1
   13e78:	add	r5, r2, r3, lsl #3
   13e7c:	ldr	r1, [r5, #4]
   13e80:	cmp	r1, #0
   13e84:	bne	13e70 <argp_parse@@Base+0xf7c>
   13e88:	ldr	r1, [r2, r3, lsl #3]
   13e8c:	cmp	r1, #0
   13e90:	bne	13e70 <argp_parse@@Base+0xf7c>
   13e94:	ldr	r1, [r5, #16]
   13e98:	cmp	r1, #0
   13e9c:	bne	13e70 <argp_parse@@Base+0xf7c>
   13ea0:	ldr	r1, [r5, #20]
   13ea4:	cmp	r1, #0
   13ea8:	bne	13e70 <argp_parse@@Base+0xf7c>
   13eac:	ldr	r1, [r4]
   13eb0:	mov	r2, r4
   13eb4:	add	r1, r1, r3
   13eb8:	str	r1, [r2], #4
   13ebc:	b	13ed4 <argp_parse@@Base+0xfe0>
   13ec0:	ldr	r0, [r0, #4]
   13ec4:	cmp	r0, #0
   13ec8:	beq	13ee0 <argp_parse@@Base+0xfec>
   13ecc:	add	r2, r4, #8
   13ed0:	mov	r0, #1
   13ed4:	ldr	r1, [r2]
   13ed8:	add	r0, r1, r0
   13edc:	str	r0, [r2]
   13ee0:	cmp	ip, #0
   13ee4:	beq	13f18 <argp_parse@@Base+0x1024>
   13ee8:	ldr	r0, [ip]
   13eec:	cmp	r0, #0
   13ef0:	popeq	{r4, r5, fp, pc}
   13ef4:	add	r5, ip, #16
   13ef8:	mov	r1, r4
   13efc:	bl	13e30 <argp_parse@@Base+0xf3c>
   13f00:	ldr	r0, [r4, #12]
   13f04:	add	r0, r0, #1
   13f08:	str	r0, [r4, #12]
   13f0c:	ldr	r0, [r5], #16
   13f10:	cmp	r0, #0
   13f14:	bne	13ef8 <argp_parse@@Base+0x1004>
   13f18:	pop	{r4, r5, fp, pc}
   13f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f20:	add	fp, sp, #28
   13f24:	sub	sp, sp, #28
   13f28:	ldr	sl, [r0]
   13f2c:	ldr	r5, [r0, #16]
   13f30:	ldr	r6, [fp, #8]
   13f34:	mov	r7, r3
   13f38:	cmp	sl, #0
   13f3c:	beq	14118 <argp_parse@@Base+0x1224>
   13f40:	str	r0, [sp, #8]
   13f44:	add	r0, sp, #16
   13f48:	mov	r8, sl
   13f4c:	str	r2, [sp, #12]
   13f50:	stm	r0, {r1, r5, r7}
   13f54:	ldr	r5, [r8, #4]
   13f58:	cmp	r5, #0
   13f5c:	bne	14004 <argp_parse@@Base+0x1110>
   13f60:	b	13fe0 <argp_parse@@Base+0x10ec>
   13f64:	ldr	r0, [r6, #8]
   13f68:	str	r5, [r0]
   13f6c:	ldr	r1, [sl, #8]
   13f70:	cmp	r1, #0
   13f74:	beq	140f8 <argp_parse@@Base+0x1204>
   13f78:	ldrb	r1, [sl, #12]
   13f7c:	tst	r1, #1
   13f80:	mov	r1, #2
   13f84:	movweq	r1, #1
   13f88:	mov	r5, #0
   13f8c:	stmib	r0, {r1, r5}
   13f90:	ldr	r1, [r8, #4]
   13f94:	ldr	r2, [r7, #48]	; 0x30
   13f98:	ldr	r3, [sp, #24]
   13f9c:	cmp	r1, #0
   13fa0:	sub	r2, r3, r2
   13fa4:	mov	r3, #956301312	; 0x39000000
   13fa8:	ldreq	r1, [sl, #4]
   13fac:	lsr	r2, r2, #2
   13fb0:	mul	r2, r2, r3
   13fb4:	bic	r1, r1, #-16777216	; 0xff000000
   13fb8:	orr	r1, r2, r1
   13fbc:	add	r1, r1, #16777216	; 0x1000000
   13fc0:	str	r1, [r0, #12]
   13fc4:	add	r1, r0, #16
   13fc8:	str	r1, [r6, #8]
   13fcc:	str	r5, [r0, #16]
   13fd0:	add	r8, r8, #24
   13fd4:	ldr	r5, [r8, #4]
   13fd8:	cmp	r5, #0
   13fdc:	bne	14004 <argp_parse@@Base+0x1110>
   13fe0:	ldr	r0, [r8]
   13fe4:	cmp	r0, #0
   13fe8:	bne	14004 <argp_parse@@Base+0x1110>
   13fec:	ldr	r0, [r8, #16]
   13ff0:	cmp	r0, #0
   13ff4:	bne	14004 <argp_parse@@Base+0x1110>
   13ff8:	ldr	r0, [r8, #20]
   13ffc:	cmp	r0, #0
   14000:	beq	14100 <argp_parse@@Base+0x120c>
   14004:	ldr	r0, [r8, #12]
   14008:	tst	r0, #4
   1400c:	moveq	sl, r8
   14010:	ldrb	r1, [sl, #12]
   14014:	tst	r1, #8
   14018:	bne	13fd0 <argp_parse@@Base+0x10dc>
   1401c:	sub	r1, r5, #1
   14020:	cmp	r1, #254	; 0xfe
   14024:	bhi	140a4 <argp_parse@@Base+0x11b0>
   14028:	ands	r0, r0, #8
   1402c:	bne	140a4 <argp_parse@@Base+0x11b0>
   14030:	bl	11480 <__ctype_b_loc@plt>
   14034:	ldr	r0, [r0]
   14038:	add	r0, r0, r5, lsl #1
   1403c:	ldrb	r0, [r0, #1]
   14040:	tst	r0, #64	; 0x40
   14044:	beq	140a4 <argp_parse@@Base+0x11b0>
   14048:	ldr	r0, [r6, #4]
   1404c:	add	r1, r0, #1
   14050:	str	r1, [r6, #4]
   14054:	strb	r5, [r0]
   14058:	ldr	r0, [sl, #8]
   1405c:	cmp	r0, #0
   14060:	beq	14098 <argp_parse@@Base+0x11a4>
   14064:	ldr	r0, [r6, #4]
   14068:	add	r1, r0, #1
   1406c:	str	r1, [r6, #4]
   14070:	mov	r1, #58	; 0x3a
   14074:	strb	r1, [r0]
   14078:	ldrb	r0, [sl, #12]
   1407c:	tst	r0, #1
   14080:	beq	14098 <argp_parse@@Base+0x11a4>
   14084:	ldr	r0, [r6, #4]
   14088:	add	r1, r0, #1
   1408c:	str	r1, [r6, #4]
   14090:	mov	r1, #58	; 0x3a
   14094:	strb	r1, [r0]
   14098:	ldr	r0, [r6, #4]
   1409c:	mov	r1, #0
   140a0:	strb	r1, [r0]
   140a4:	ldr	r5, [r8]
   140a8:	cmp	r5, #0
   140ac:	beq	13fd0 <argp_parse@@Base+0x10dc>
   140b0:	ldr	r7, [r6]
   140b4:	ldr	r9, [r7, #8]
   140b8:	ldr	r0, [r9]
   140bc:	cmp	r0, #0
   140c0:	beq	13f64 <argp_parse@@Base+0x1070>
   140c4:	mov	r4, r9
   140c8:	mov	r1, r5
   140cc:	bl	11330 <strcmp@plt>
   140d0:	cmp	r0, #0
   140d4:	beq	140e8 <argp_parse@@Base+0x11f4>
   140d8:	ldr	r0, [r4, #16]!
   140dc:	cmp	r0, #0
   140e0:	bne	140c8 <argp_parse@@Base+0x11d4>
   140e4:	b	13f64 <argp_parse@@Base+0x1070>
   140e8:	sub	r0, r4, r9
   140ec:	cmn	r0, #1
   140f0:	bgt	13fd0 <argp_parse@@Base+0x10dc>
   140f4:	b	13f64 <argp_parse@@Base+0x1070>
   140f8:	mov	r1, #0
   140fc:	b	13f88 <argp_parse@@Base+0x1094>
   14100:	ldr	r0, [sp, #8]
   14104:	add	r7, sp, #16
   14108:	ldr	r2, [sp, #12]
   1410c:	ldm	r7, {r1, r5, r7}
   14110:	ldr	r3, [r0, #4]
   14114:	b	14124 <argp_parse@@Base+0x1230>
   14118:	ldr	r3, [r0, #4]
   1411c:	cmp	r3, #0
   14120:	beq	141c8 <argp_parse@@Base+0x12d4>
   14124:	str	r0, [r7, #4]
   14128:	str	r3, [r7]
   1412c:	mov	r0, #0
   14130:	cmp	r5, #0
   14134:	add	ip, r7, #12
   14138:	ldr	r3, [r6, #4]
   1413c:	str	r0, [r7, #32]
   14140:	str	r0, [r7, #24]
   14144:	stm	ip, {r0, r1, r2}
   14148:	str	r0, [r7, #28]
   1414c:	str	r3, [r7, #8]
   14150:	beq	14178 <argp_parse@@Base+0x1284>
   14154:	ldr	r1, [r5, r0, lsl #2]
   14158:	add	r0, r0, #4
   1415c:	cmp	r1, #0
   14160:	bne	14154 <argp_parse@@Base+0x1260>
   14164:	ldr	r1, [r6, #12]
   14168:	add	r0, r1, r0
   1416c:	str	r1, [r7, #28]
   14170:	sub	r0, r0, #4
   14174:	str	r0, [r6, #12]
   14178:	add	r3, r7, #36	; 0x24
   1417c:	cmp	r5, #0
   14180:	beq	141bc <argp_parse@@Base+0x12c8>
   14184:	ldr	r0, [r5]
   14188:	cmp	r0, #0
   1418c:	beq	141bc <argp_parse@@Base+0x12c8>
   14190:	add	r4, r5, #16
   14194:	mov	r5, #0
   14198:	mov	r1, r7
   1419c:	mov	r2, r5
   141a0:	str	r6, [sp]
   141a4:	bl	13f1c <argp_parse@@Base+0x1028>
   141a8:	mov	r3, r0
   141ac:	ldr	r0, [r4, r5, lsl #4]
   141b0:	add	r5, r5, #1
   141b4:	cmp	r0, #0
   141b8:	bne	14198 <argp_parse@@Base+0x12a4>
   141bc:	mov	r0, r3
   141c0:	sub	sp, fp, #28
   141c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141c8:	mov	r3, r7
   141cc:	mov	r7, #0
   141d0:	cmp	r5, #0
   141d4:	bne	14184 <argp_parse@@Base+0x1290>
   141d8:	b	141bc <argp_parse@@Base+0x12c8>
   141dc:	movw	r2, #6364	; 0x18dc
   141e0:	movt	r2, #3
   141e4:	stm	r2, {r0, r1}
   141e8:	movw	r0, #6360	; 0x18d8
   141ec:	movw	r1, #16896	; 0x4200
   141f0:	movt	r0, #3
   141f4:	movt	r1, #1
   141f8:	str	r1, [r0]
   141fc:	bx	lr
   14200:	push	{fp, lr}
   14204:	mov	fp, sp
   14208:	sub	sp, sp, #8
   1420c:	movw	r2, #6364	; 0x18dc
   14210:	movw	r3, #51714	; 0xca02
   14214:	movt	r2, #3
   14218:	movt	r3, #1
   1421c:	ldm	r2, {r1, r2}
   14220:	str	r2, [sp]
   14224:	movw	r2, #51700	; 0xc9f4
   14228:	movt	r2, #1
   1422c:	bl	14b34 <_obstack_memory_used@@Base+0x3d8>
   14230:	mov	sp, fp
   14234:	pop	{fp, pc}
   14238:	sub	r0, r0, #1
   1423c:	ldrb	r3, [r0, #1]!
   14240:	cmp	r3, #47	; 0x2f
   14244:	beq	1423c <argp_parse@@Base+0x1348>
   14248:	mov	r2, #0
   1424c:	mov	r1, r0
   14250:	uxtb	r3, r3
   14254:	cmp	r3, #47	; 0x2f
   14258:	bne	14270 <argp_parse@@Base+0x137c>
   1425c:	ldrb	r3, [r1, #1]!
   14260:	mov	r2, #1
   14264:	uxtb	r3, r3
   14268:	cmp	r3, #47	; 0x2f
   1426c:	beq	1425c <argp_parse@@Base+0x1368>
   14270:	cmp	r3, #0
   14274:	bxeq	lr
   14278:	tst	r2, #1
   1427c:	mov	r2, #0
   14280:	movne	r0, r1
   14284:	ldrb	r3, [r1, #1]!
   14288:	uxtb	r3, r3
   1428c:	cmp	r3, #47	; 0x2f
   14290:	bne	14270 <argp_parse@@Base+0x137c>
   14294:	b	1425c <argp_parse@@Base+0x1368>
   14298:	push	{r4, sl, fp, lr}
   1429c:	add	fp, sp, #8
   142a0:	mov	r4, r0
   142a4:	bl	114a4 <strlen@plt>
   142a8:	mov	r1, r0
   142ac:	sub	r2, r4, #1
   142b0:	mov	r0, r1
   142b4:	cmp	r1, #2
   142b8:	bcc	142cc <argp_parse@@Base+0x13d8>
   142bc:	ldrb	r3, [r2, r0]
   142c0:	sub	r1, r0, #1
   142c4:	cmp	r3, #47	; 0x2f
   142c8:	beq	142b0 <argp_parse@@Base+0x13bc>
   142cc:	pop	{r4, sl, fp, pc}
   142d0:	push	{r4, r5, r6, sl, fp, lr}
   142d4:	add	fp, sp, #16
   142d8:	mov	r4, r0
   142dc:	bl	114c8 <__errno_location@plt>
   142e0:	ldr	r6, [r0]
   142e4:	mov	r5, r0
   142e8:	mov	r0, r4
   142ec:	bl	1136c <free@plt>
   142f0:	str	r6, [r5]
   142f4:	pop	{r4, r5, r6, sl, fp, pc}
   142f8:	push	{fp, lr}
   142fc:	mov	fp, sp
   14300:	sub	sp, sp, #16
   14304:	mov	ip, #0
   14308:	str	ip, [sp, #8]
   1430c:	str	ip, [sp, #4]
   14310:	ldr	ip, [fp, #8]
   14314:	str	ip, [sp]
   14318:	bl	1a4fc <argp_failure@@Base+0x3624>
   1431c:	mov	sp, fp
   14320:	pop	{fp, pc}
   14324:	push	{fp, lr}
   14328:	mov	fp, sp
   1432c:	sub	sp, sp, #16
   14330:	mov	ip, #0
   14334:	str	ip, [sp, #12]
   14338:	str	ip, [sp, #4]
   1433c:	ldr	ip, [fp, #12]
   14340:	str	ip, [sp, #8]
   14344:	ldr	ip, [fp, #8]
   14348:	str	ip, [sp]
   1434c:	bl	18fdc <argp_failure@@Base+0x2104>
   14350:	mov	sp, fp
   14354:	pop	{fp, pc}
   14358:	push	{fp, lr}
   1435c:	mov	fp, sp
   14360:	sub	sp, sp, #16
   14364:	mov	ip, #0
   14368:	str	ip, [sp, #8]
   1436c:	mov	ip, #1
   14370:	str	ip, [sp, #4]
   14374:	ldr	ip, [fp, #8]
   14378:	str	ip, [sp]
   1437c:	bl	1a4fc <argp_failure@@Base+0x3624>
   14380:	mov	sp, fp
   14384:	pop	{fp, pc}
   14388:	push	{fp, lr}
   1438c:	mov	fp, sp
   14390:	sub	sp, sp, #16
   14394:	mov	ip, #0
   14398:	str	ip, [sp, #12]
   1439c:	mov	ip, #1
   143a0:	str	ip, [sp, #4]
   143a4:	ldr	ip, [fp, #12]
   143a8:	str	ip, [sp, #8]
   143ac:	ldr	ip, [fp, #8]
   143b0:	str	ip, [sp]
   143b4:	bl	18fdc <argp_failure@@Base+0x2104>
   143b8:	mov	sp, fp
   143bc:	pop	{fp, pc}

000143c0 <_obstack_begin@@Base>:
   143c0:	push	{r4, r5, r6, sl, fp, lr}
   143c4:	add	fp, sp, #16
   143c8:	cmp	r1, #0
   143cc:	mov	r4, r0
   143d0:	str	r3, [r0, #28]
   143d4:	mov	r5, r2
   143d8:	movweq	r1, #4072	; 0xfe8
   143dc:	cmp	r2, #0
   143e0:	str	r1, [r0]
   143e4:	ldr	r0, [fp, #8]
   143e8:	movweq	r5, #8
   143ec:	sub	r6, r5, #1
   143f0:	str	r0, [r4, #32]
   143f4:	str	r6, [r4, #24]
   143f8:	ldrb	r0, [r4, #40]	; 0x28
   143fc:	and	r0, r0, #254	; 0xfe
   14400:	strb	r0, [r4, #40]	; 0x28
   14404:	mov	r0, r1
   14408:	blx	r3
   1440c:	cmp	r0, #0
   14410:	str	r0, [r4, #4]
   14414:	addne	r1, r0, r6
   14418:	rsbne	r2, r5, #0
   1441c:	addne	r1, r1, #8
   14420:	andne	r1, r1, r2
   14424:	strne	r1, [r4, #12]
   14428:	strne	r1, [r4, #8]
   1442c:	ldrne	r1, [r4]
   14430:	addne	r1, r0, r1
   14434:	strne	r1, [r0]
   14438:	strne	r1, [r4, #16]
   1443c:	movne	r1, #0
   14440:	strne	r1, [r0, #4]
   14444:	ldrbne	r0, [r4, #40]	; 0x28
   14448:	andne	r0, r0, #249	; 0xf9
   1444c:	strbne	r0, [r4, #40]	; 0x28
   14450:	movne	r0, #1
   14454:	popne	{r4, r5, r6, sl, fp, pc}
   14458:	movw	r0, #6252	; 0x186c
   1445c:	movt	r0, #3
   14460:	ldr	r0, [r0]
   14464:	blx	r0

00014468 <_obstack_begin_1@@Base>:
   14468:	push	{r4, r5, r6, sl, fp, lr}
   1446c:	add	fp, sp, #16
   14470:	cmp	r1, #0
   14474:	mov	r5, r2
   14478:	mov	r4, r0
   1447c:	str	r3, [r0, #28]
   14480:	ldr	r2, [fp, #8]
   14484:	movweq	r1, #4072	; 0xfe8
   14488:	cmp	r5, #0
   1448c:	str	r1, [r0]
   14490:	ldr	r0, [fp, #12]
   14494:	movweq	r5, #8
   14498:	sub	r6, r5, #1
   1449c:	str	r0, [r4, #36]	; 0x24
   144a0:	str	r2, [r4, #32]
   144a4:	str	r6, [r4, #24]
   144a8:	ldrb	r2, [r4, #40]	; 0x28
   144ac:	orr	r2, r2, #1
   144b0:	strb	r2, [r4, #40]	; 0x28
   144b4:	blx	r3
   144b8:	cmp	r0, #0
   144bc:	str	r0, [r4, #4]
   144c0:	addne	r1, r0, r6
   144c4:	rsbne	r2, r5, #0
   144c8:	addne	r1, r1, #8
   144cc:	andne	r1, r1, r2
   144d0:	strne	r1, [r4, #12]
   144d4:	strne	r1, [r4, #8]
   144d8:	ldrne	r1, [r4]
   144dc:	addne	r1, r0, r1
   144e0:	strne	r1, [r0]
   144e4:	strne	r1, [r4, #16]
   144e8:	movne	r1, #0
   144ec:	strne	r1, [r0, #4]
   144f0:	ldrbne	r0, [r4, #40]	; 0x28
   144f4:	andne	r0, r0, #249	; 0xf9
   144f8:	strbne	r0, [r4, #40]	; 0x28
   144fc:	movne	r0, #1
   14500:	popne	{r4, r5, r6, sl, fp, pc}
   14504:	movw	r0, #6252	; 0x186c
   14508:	movt	r0, #3
   1450c:	ldr	r0, [r0]
   14510:	blx	r0

00014514 <_obstack_newchunk@@Base>:
   14514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14518:	add	fp, sp, #28
   1451c:	sub	sp, sp, #4
   14520:	mov	r4, r0
   14524:	ldr	r2, [r0]
   14528:	ldr	r0, [r0, #8]
   1452c:	ldr	r3, [r4, #12]
   14530:	sub	r9, r3, r0
   14534:	ldr	r0, [r4, #24]
   14538:	mov	r3, #0
   1453c:	add	r1, r9, r1
   14540:	adds	r6, r1, r0
   14544:	adc	r0, r3, #0
   14548:	mov	r3, #100	; 0x64
   1454c:	add	r3, r3, r9, lsr #3
   14550:	adds	r7, r3, r6
   14554:	movcs	r7, r6
   14558:	cmp	r7, r2
   1455c:	movcc	r7, r2
   14560:	cmp	r1, r9
   14564:	bcc	14668 <_obstack_newchunk@@Base+0x154>
   14568:	cmp	r0, #0
   1456c:	bne	14668 <_obstack_newchunk@@Base+0x154>
   14570:	ldrb	r0, [r4, #40]	; 0x28
   14574:	ldr	r8, [r4, #4]
   14578:	tst	r0, #1
   1457c:	bne	1459c <_obstack_newchunk@@Base+0x88>
   14580:	ldr	r1, [r4, #28]
   14584:	mov	r0, r7
   14588:	blx	r1
   1458c:	mov	r6, r0
   14590:	cmp	r0, #0
   14594:	bne	145b8 <_obstack_newchunk@@Base+0xa4>
   14598:	b	14668 <_obstack_newchunk@@Base+0x154>
   1459c:	ldr	r2, [r4, #28]
   145a0:	ldr	r0, [r4, #36]	; 0x24
   145a4:	mov	r1, r7
   145a8:	blx	r2
   145ac:	mov	r6, r0
   145b0:	cmp	r0, #0
   145b4:	beq	14668 <_obstack_newchunk@@Base+0x154>
   145b8:	add	r0, r6, r7
   145bc:	str	r6, [r4, #4]
   145c0:	str	r8, [r6, #4]
   145c4:	mov	r2, r9
   145c8:	str	r0, [r4, #16]
   145cc:	str	r0, [r6]
   145d0:	ldr	r5, [r4, #24]
   145d4:	ldr	sl, [r4, #8]
   145d8:	add	r0, r6, r5
   145dc:	mov	r1, sl
   145e0:	add	r0, r0, #8
   145e4:	bic	r7, r0, r5
   145e8:	mov	r0, r7
   145ec:	bl	113a8 <memcpy@plt>
   145f0:	ldrb	r0, [r4, #40]	; 0x28
   145f4:	tst	r0, #2
   145f8:	bne	14648 <_obstack_newchunk@@Base+0x134>
   145fc:	add	r1, r8, r5
   14600:	mvn	r0, r5
   14604:	add	r1, r1, #8
   14608:	and	r0, r1, r0
   1460c:	cmp	sl, r0
   14610:	bne	14648 <_obstack_newchunk@@Base+0x134>
   14614:	ldr	r0, [r8, #4]
   14618:	str	r0, [r6, #4]
   1461c:	ldrb	r0, [r4, #40]	; 0x28
   14620:	tst	r0, #1
   14624:	bne	14638 <_obstack_newchunk@@Base+0x124>
   14628:	ldr	r1, [r4, #32]
   1462c:	mov	r0, r8
   14630:	blx	r1
   14634:	b	14648 <_obstack_newchunk@@Base+0x134>
   14638:	ldr	r2, [r4, #32]
   1463c:	ldr	r0, [r4, #36]	; 0x24
   14640:	mov	r1, r8
   14644:	blx	r2
   14648:	add	r0, r7, r9
   1464c:	str	r7, [r4, #8]
   14650:	str	r0, [r4, #12]
   14654:	ldrb	r0, [r4, #40]	; 0x28
   14658:	and	r0, r0, #253	; 0xfd
   1465c:	strb	r0, [r4, #40]	; 0x28
   14660:	sub	sp, fp, #28
   14664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14668:	movw	r0, #6252	; 0x186c
   1466c:	movt	r0, #3
   14670:	ldr	r0, [r0]
   14674:	blx	r0

00014678 <_obstack_allocated_p@@Base>:
   14678:	ldr	r2, [r0, #4]
   1467c:	mov	r0, #0
   14680:	cmp	r2, #0
   14684:	bxeq	lr
   14688:	cmp	r2, r1
   1468c:	bcc	146a4 <_obstack_allocated_p@@Base+0x2c>
   14690:	ldr	r2, [r2, #4]
   14694:	cmp	r2, #0
   14698:	bxeq	lr
   1469c:	cmp	r2, r1
   146a0:	bcs	14690 <_obstack_allocated_p@@Base+0x18>
   146a4:	ldr	r3, [r2]
   146a8:	cmp	r3, r1
   146ac:	bcc	14690 <_obstack_allocated_p@@Base+0x18>
   146b0:	mov	r0, #1
   146b4:	bx	lr

000146b8 <_obstack_free@@Base>:
   146b8:	push	{r4, r5, r6, sl, fp, lr}
   146bc:	add	fp, sp, #16
   146c0:	mov	r5, r1
   146c4:	ldr	r1, [r0, #4]
   146c8:	cmp	r1, #0
   146cc:	beq	14738 <_obstack_free@@Base+0x80>
   146d0:	mov	r4, r0
   146d4:	cmp	r1, r5
   146d8:	bcs	14718 <_obstack_free@@Base+0x60>
   146dc:	b	1470c <_obstack_free@@Base+0x54>
   146e0:	ldr	r2, [r4, #32]
   146e4:	mov	r0, r1
   146e8:	blx	r2
   146ec:	ldrb	r0, [r4, #40]	; 0x28
   146f0:	cmp	r6, #0
   146f4:	mov	r1, r6
   146f8:	orr	r0, r0, #2
   146fc:	strb	r0, [r4, #40]	; 0x28
   14700:	beq	14738 <_obstack_free@@Base+0x80>
   14704:	cmp	r1, r5
   14708:	bcs	14718 <_obstack_free@@Base+0x60>
   1470c:	ldr	r0, [r1]
   14710:	cmp	r0, r5
   14714:	bcs	14744 <_obstack_free@@Base+0x8c>
   14718:	ldrb	r0, [r4, #40]	; 0x28
   1471c:	ldr	r6, [r1, #4]
   14720:	tst	r0, #1
   14724:	beq	146e0 <_obstack_free@@Base+0x28>
   14728:	ldr	r2, [r4, #32]
   1472c:	ldr	r0, [r4, #36]	; 0x24
   14730:	blx	r2
   14734:	b	146ec <_obstack_free@@Base+0x34>
   14738:	cmp	r5, #0
   1473c:	popeq	{r4, r5, r6, sl, fp, pc}
   14740:	bl	115d0 <abort@plt>
   14744:	str	r5, [r4, #8]
   14748:	str	r5, [r4, #12]
   1474c:	ldr	r0, [r1]
   14750:	str	r1, [r4, #4]
   14754:	str	r0, [r4, #16]
   14758:	pop	{r4, r5, r6, sl, fp, pc}

0001475c <_obstack_memory_used@@Base>:
   1475c:	ldr	r1, [r0, #4]
   14760:	mov	r0, #0
   14764:	b	14778 <_obstack_memory_used@@Base+0x1c>
   14768:	ldr	r2, [r1]
   1476c:	sub	r0, r0, r1
   14770:	ldr	r1, [r1, #4]
   14774:	add	r0, r0, r2
   14778:	cmp	r1, #0
   1477c:	bxeq	lr
   14780:	b	14768 <_obstack_memory_used@@Base+0xc>
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	movw	r0, #6328	; 0x18b8
   14790:	movw	r1, #51820	; 0xca6c
   14794:	movw	r2, #51727	; 0xca0f
   14798:	movt	r0, #3
   1479c:	movt	r1, #1
   147a0:	movt	r2, #1
   147a4:	ldr	r0, [r0]
   147a8:	bl	114bc <fprintf@plt>
   147ac:	movw	r0, #6296	; 0x1898
   147b0:	movt	r0, #3
   147b4:	ldr	r0, [r0]
   147b8:	bl	1148c <exit@plt>
   147bc:	push	{r4, r5, fp, lr}
   147c0:	add	fp, sp, #8
   147c4:	cmp	r0, #0
   147c8:	beq	1485c <_obstack_memory_used@@Base+0x100>
   147cc:	mov	r1, #47	; 0x2f
   147d0:	mov	r4, r0
   147d4:	bl	1151c <strrchr@plt>
   147d8:	cmp	r0, #0
   147dc:	mov	r5, r4
   147e0:	addne	r5, r0, #1
   147e4:	sub	r0, r5, r4
   147e8:	cmp	r0, #7
   147ec:	blt	14840 <_obstack_memory_used@@Base+0xe4>
   147f0:	movw	r1, #51800	; 0xca58
   147f4:	sub	r0, r5, #7
   147f8:	mov	r2, #7
   147fc:	movt	r1, #1
   14800:	bl	115c4 <strncmp@plt>
   14804:	cmp	r0, #0
   14808:	bne	14840 <_obstack_memory_used@@Base+0xe4>
   1480c:	movw	r1, #51808	; 0xca60
   14810:	mov	r0, r5
   14814:	mov	r2, #3
   14818:	movt	r1, #1
   1481c:	bl	115c4 <strncmp@plt>
   14820:	cmp	r0, #0
   14824:	beq	14830 <_obstack_memory_used@@Base+0xd4>
   14828:	mov	r4, r5
   1482c:	b	14840 <_obstack_memory_used@@Base+0xe4>
   14830:	movw	r0, #6320	; 0x18b0
   14834:	add	r4, r5, #3
   14838:	movt	r0, #3
   1483c:	str	r4, [r0]
   14840:	movw	r0, #6324	; 0x18b4
   14844:	movt	r0, #3
   14848:	str	r4, [r0]
   1484c:	movw	r0, #6372	; 0x18e4
   14850:	movt	r0, #3
   14854:	str	r4, [r0]
   14858:	pop	{r4, r5, fp, pc}
   1485c:	movw	r0, #6328	; 0x18b8
   14860:	mov	r1, #55	; 0x37
   14864:	mov	r2, #1
   14868:	movt	r0, #3
   1486c:	ldr	r3, [r0]
   14870:	movw	r0, #51744	; 0xca20
   14874:	movt	r0, #1
   14878:	bl	113fc <fwrite@plt>
   1487c:	bl	115d0 <abort@plt>
   14880:	push	{r4, r5, r6, r7, fp, lr}
   14884:	add	fp, sp, #16
   14888:	sub	sp, sp, #32
   1488c:	ldr	r7, [fp, #12]
   14890:	ldr	r6, [fp, #8]
   14894:	mov	r4, r2
   14898:	mov	r5, r0
   1489c:	cmp	r1, #0
   148a0:	beq	148c0 <_obstack_memory_used@@Base+0x164>
   148a4:	mov	r2, r1
   148a8:	movw	r1, #51812	; 0xca64
   148ac:	str	r3, [sp]
   148b0:	mov	r0, r5
   148b4:	mov	r3, r4
   148b8:	movt	r1, #1
   148bc:	b	148d0 <_obstack_memory_used@@Base+0x174>
   148c0:	movw	r1, #51824	; 0xca70
   148c4:	mov	r0, r5
   148c8:	mov	r2, r4
   148cc:	movt	r1, #1
   148d0:	bl	114bc <fprintf@plt>
   148d4:	movw	r1, #52588	; 0xcd6c
   148d8:	movw	r2, #51831	; 0xca77
   148dc:	mov	r0, r5
   148e0:	movw	r3, #2022	; 0x7e6
   148e4:	movt	r1, #1
   148e8:	movt	r2, #1
   148ec:	bl	114bc <fprintf@plt>
   148f0:	mov	r0, #10
   148f4:	mov	r1, r5
   148f8:	bl	11534 <fputc@plt>
   148fc:	movw	r1, #51835	; 0xca7b
   14900:	movw	r2, #52006	; 0xcb26
   14904:	mov	r0, r5
   14908:	movt	r1, #1
   1490c:	movt	r2, #1
   14910:	bl	114bc <fprintf@plt>
   14914:	mov	r0, #10
   14918:	mov	r1, r5
   1491c:	bl	11534 <fputc@plt>
   14920:	cmp	r7, #9
   14924:	bhi	14960 <_obstack_memory_used@@Base+0x204>
   14928:	add	r0, pc, #0
   1492c:	ldr	pc, [r0, r7, lsl #2]
   14930:	andeq	r4, r1, r8, asr r9
   14934:	andeq	r4, r1, r0, lsr #19
   14938:			; <UNDEFINED> instruction: 0x000149bc
   1493c:	ldrdeq	r4, [r1], -r8
   14940:	strdeq	r4, [r1], -ip
   14944:	andeq	r4, r1, r4, lsr #20
   14948:	andeq	r4, r1, ip, asr #20
   1494c:	andeq	r4, r1, ip, ror sl
   14950:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14954:			; <UNDEFINED> instruction: 0x00014ab4
   14958:	sub	sp, fp, #16
   1495c:	pop	{r4, r5, r6, r7, fp, pc}
   14960:	add	r7, r6, #8
   14964:	add	lr, r6, #20
   14968:	ldm	r6, {r2, r3}
   1496c:	ldr	r6, [r6, #32]
   14970:	ldm	r7, {r0, r1, r7}
   14974:	ldm	lr, {r4, ip, lr}
   14978:	stm	sp, {r0, r1, r7}
   1497c:	movw	r1, #52359	; 0xcc87
   14980:	add	r0, sp, #12
   14984:	stm	r0, {r4, ip, lr}
   14988:	str	r6, [sp, #24]
   1498c:	movt	r1, #1
   14990:	mov	r0, r5
   14994:	bl	114bc <fprintf@plt>
   14998:	sub	sp, fp, #16
   1499c:	pop	{r4, r5, r6, r7, fp, pc}
   149a0:	ldr	r2, [r6]
   149a4:	movw	r1, #52040	; 0xcb48
   149a8:	mov	r0, r5
   149ac:	movt	r1, #1
   149b0:	sub	sp, fp, #16
   149b4:	pop	{r4, r5, r6, r7, fp, lr}
   149b8:	b	114bc <fprintf@plt>
   149bc:	ldm	r6, {r2, r3}
   149c0:	movw	r1, #52056	; 0xcb58
   149c4:	mov	r0, r5
   149c8:	movt	r1, #1
   149cc:	sub	sp, fp, #16
   149d0:	pop	{r4, r5, r6, r7, fp, lr}
   149d4:	b	114bc <fprintf@plt>
   149d8:	ldr	r0, [r6, #8]
   149dc:	movw	r1, #52079	; 0xcb6f
   149e0:	ldm	r6, {r2, r3}
   149e4:	movt	r1, #1
   149e8:	str	r0, [sp]
   149ec:	mov	r0, r5
   149f0:	bl	114bc <fprintf@plt>
   149f4:	sub	sp, fp, #16
   149f8:	pop	{r4, r5, r6, r7, fp, pc}
   149fc:	ldr	r0, [r6, #8]
   14a00:	ldm	r6, {r2, r3}
   14a04:	ldr	r1, [r6, #12]
   14a08:	stm	sp, {r0, r1}
   14a0c:	movw	r1, #52107	; 0xcb8b
   14a10:	movt	r1, #1
   14a14:	mov	r0, r5
   14a18:	bl	114bc <fprintf@plt>
   14a1c:	sub	sp, fp, #16
   14a20:	pop	{r4, r5, r6, r7, fp, pc}
   14a24:	add	r7, r6, #8
   14a28:	ldm	r6, {r2, r3}
   14a2c:	ldm	r7, {r0, r1, r7}
   14a30:	stm	sp, {r0, r1, r7}
   14a34:	movw	r1, #52139	; 0xcbab
   14a38:	movt	r1, #1
   14a3c:	mov	r0, r5
   14a40:	bl	114bc <fprintf@plt>
   14a44:	sub	sp, fp, #16
   14a48:	pop	{r4, r5, r6, r7, fp, pc}
   14a4c:	add	r7, r6, #8
   14a50:	ldm	r6, {r2, r3}
   14a54:	ldr	r6, [r6, #20]
   14a58:	ldm	r7, {r0, r1, r7}
   14a5c:	stm	sp, {r0, r1, r7}
   14a60:	movw	r1, #52175	; 0xcbcf
   14a64:	str	r6, [sp, #12]
   14a68:	movt	r1, #1
   14a6c:	mov	r0, r5
   14a70:	bl	114bc <fprintf@plt>
   14a74:	sub	sp, fp, #16
   14a78:	pop	{r4, r5, r6, r7, fp, pc}
   14a7c:	add	r7, r6, #8
   14a80:	ldm	r6, {r2, r3}
   14a84:	ldr	r4, [r6, #20]
   14a88:	ldr	r6, [r6, #24]
   14a8c:	ldm	r7, {r0, r1, r7}
   14a90:	stm	sp, {r0, r1, r7}
   14a94:	movw	r1, #52215	; 0xcbf7
   14a98:	str	r4, [sp, #12]
   14a9c:	str	r6, [sp, #16]
   14aa0:	movt	r1, #1
   14aa4:	mov	r0, r5
   14aa8:	bl	114bc <fprintf@plt>
   14aac:	sub	sp, fp, #16
   14ab0:	pop	{r4, r5, r6, r7, fp, pc}
   14ab4:	add	r7, r6, #8
   14ab8:	add	lr, r6, #20
   14abc:	ldm	r6, {r2, r3}
   14ac0:	ldr	r6, [r6, #32]
   14ac4:	ldm	r7, {r0, r1, r7}
   14ac8:	ldm	lr, {r4, ip, lr}
   14acc:	stm	sp, {r0, r1, r7}
   14ad0:	movw	r1, #52307	; 0xcc53
   14ad4:	add	r0, sp, #12
   14ad8:	stm	r0, {r4, ip, lr}
   14adc:	str	r6, [sp, #24]
   14ae0:	movt	r1, #1
   14ae4:	mov	r0, r5
   14ae8:	bl	114bc <fprintf@plt>
   14aec:	sub	sp, fp, #16
   14af0:	pop	{r4, r5, r6, r7, fp, pc}
   14af4:	add	r7, r6, #8
   14af8:	ldm	r6, {r2, r3}
   14afc:	ldr	r4, [r6, #20]
   14b00:	ldr	ip, [r6, #24]
   14b04:	ldr	r6, [r6, #28]
   14b08:	ldm	r7, {r0, r1, r7}
   14b0c:	stm	sp, {r0, r1, r7}
   14b10:	movw	r1, #52259	; 0xcc23
   14b14:	str	r4, [sp, #12]
   14b18:	str	ip, [sp, #16]
   14b1c:	str	r6, [sp, #20]
   14b20:	movt	r1, #1
   14b24:	mov	r0, r5
   14b28:	bl	114bc <fprintf@plt>
   14b2c:	sub	sp, fp, #16
   14b30:	pop	{r4, r5, r6, r7, fp, pc}
   14b34:	push	{r4, sl, fp, lr}
   14b38:	add	fp, sp, #8
   14b3c:	sub	sp, sp, #8
   14b40:	ldr	ip, [fp, #8]
   14b44:	mov	lr, #0
   14b48:	ldr	r4, [ip, lr, lsl #2]
   14b4c:	add	lr, lr, #1
   14b50:	cmp	r4, #0
   14b54:	bne	14b48 <_obstack_memory_used@@Base+0x3ec>
   14b58:	sub	r4, lr, #1
   14b5c:	str	ip, [sp]
   14b60:	str	r4, [sp, #4]
   14b64:	bl	14880 <_obstack_memory_used@@Base+0x124>
   14b68:	sub	sp, fp, #8
   14b6c:	pop	{r4, sl, fp, pc}
   14b70:	push	{fp, lr}
   14b74:	mov	fp, sp
   14b78:	sub	sp, sp, #48	; 0x30
   14b7c:	ldr	ip, [fp, #8]
   14b80:	ldr	lr, [ip]
   14b84:	cmp	lr, #0
   14b88:	str	lr, [sp, #8]
   14b8c:	beq	14c28 <_obstack_memory_used@@Base+0x4cc>
   14b90:	ldr	lr, [ip, #4]
   14b94:	cmp	lr, #0
   14b98:	str	lr, [sp, #12]
   14b9c:	beq	14c30 <_obstack_memory_used@@Base+0x4d4>
   14ba0:	ldr	lr, [ip, #8]
   14ba4:	cmp	lr, #0
   14ba8:	str	lr, [sp, #16]
   14bac:	beq	14c38 <_obstack_memory_used@@Base+0x4dc>
   14bb0:	ldr	lr, [ip, #12]
   14bb4:	cmp	lr, #0
   14bb8:	str	lr, [sp, #20]
   14bbc:	beq	14c40 <_obstack_memory_used@@Base+0x4e4>
   14bc0:	ldr	lr, [ip, #16]
   14bc4:	cmp	lr, #0
   14bc8:	str	lr, [sp, #24]
   14bcc:	beq	14c48 <_obstack_memory_used@@Base+0x4ec>
   14bd0:	ldr	lr, [ip, #20]
   14bd4:	cmp	lr, #0
   14bd8:	str	lr, [sp, #28]
   14bdc:	beq	14c50 <_obstack_memory_used@@Base+0x4f4>
   14be0:	ldr	lr, [ip, #24]
   14be4:	cmp	lr, #0
   14be8:	str	lr, [sp, #32]
   14bec:	beq	14c58 <_obstack_memory_used@@Base+0x4fc>
   14bf0:	ldr	lr, [ip, #28]
   14bf4:	cmp	lr, #0
   14bf8:	str	lr, [sp, #36]	; 0x24
   14bfc:	beq	14c60 <_obstack_memory_used@@Base+0x504>
   14c00:	ldr	lr, [ip, #32]
   14c04:	cmp	lr, #0
   14c08:	str	lr, [sp, #40]	; 0x28
   14c0c:	beq	14c68 <_obstack_memory_used@@Base+0x50c>
   14c10:	ldr	lr, [ip, #36]	; 0x24
   14c14:	mov	ip, #10
   14c18:	cmp	lr, #0
   14c1c:	str	lr, [sp, #44]	; 0x2c
   14c20:	movweq	ip, #9
   14c24:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c28:	mov	ip, #0
   14c2c:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c30:	mov	ip, #1
   14c34:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c38:	mov	ip, #2
   14c3c:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c40:	mov	ip, #3
   14c44:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c48:	mov	ip, #4
   14c4c:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c50:	mov	ip, #5
   14c54:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c58:	mov	ip, #6
   14c5c:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c60:	mov	ip, #7
   14c64:	b	14c6c <_obstack_memory_used@@Base+0x510>
   14c68:	mov	ip, #8
   14c6c:	add	lr, sp, #8
   14c70:	str	ip, [sp, #4]
   14c74:	str	lr, [sp]
   14c78:	bl	14880 <_obstack_memory_used@@Base+0x124>
   14c7c:	mov	sp, fp
   14c80:	pop	{fp, pc}
   14c84:	push	{fp, lr}
   14c88:	mov	fp, sp
   14c8c:	sub	sp, sp, #56	; 0x38
   14c90:	add	ip, fp, #8
   14c94:	str	ip, [sp, #12]
   14c98:	ldr	lr, [fp, #8]
   14c9c:	cmp	lr, #0
   14ca0:	str	lr, [sp, #16]
   14ca4:	beq	14d40 <_obstack_memory_used@@Base+0x5e4>
   14ca8:	ldr	lr, [ip, #4]
   14cac:	cmp	lr, #0
   14cb0:	str	lr, [sp, #20]
   14cb4:	beq	14d48 <_obstack_memory_used@@Base+0x5ec>
   14cb8:	ldr	lr, [ip, #8]
   14cbc:	cmp	lr, #0
   14cc0:	str	lr, [sp, #24]
   14cc4:	beq	14d50 <_obstack_memory_used@@Base+0x5f4>
   14cc8:	ldr	lr, [ip, #12]
   14ccc:	cmp	lr, #0
   14cd0:	str	lr, [sp, #28]
   14cd4:	beq	14d58 <_obstack_memory_used@@Base+0x5fc>
   14cd8:	ldr	lr, [ip, #16]
   14cdc:	cmp	lr, #0
   14ce0:	str	lr, [sp, #32]
   14ce4:	beq	14d60 <_obstack_memory_used@@Base+0x604>
   14ce8:	ldr	lr, [ip, #20]
   14cec:	cmp	lr, #0
   14cf0:	str	lr, [sp, #36]	; 0x24
   14cf4:	beq	14d68 <_obstack_memory_used@@Base+0x60c>
   14cf8:	ldr	lr, [ip, #24]
   14cfc:	cmp	lr, #0
   14d00:	str	lr, [sp, #40]	; 0x28
   14d04:	beq	14d70 <_obstack_memory_used@@Base+0x614>
   14d08:	ldr	lr, [ip, #28]
   14d0c:	cmp	lr, #0
   14d10:	str	lr, [sp, #44]	; 0x2c
   14d14:	beq	14d78 <_obstack_memory_used@@Base+0x61c>
   14d18:	ldr	lr, [ip, #32]
   14d1c:	cmp	lr, #0
   14d20:	str	lr, [sp, #48]	; 0x30
   14d24:	beq	14d80 <_obstack_memory_used@@Base+0x624>
   14d28:	ldr	lr, [ip, #36]	; 0x24
   14d2c:	mov	ip, #10
   14d30:	cmp	lr, #0
   14d34:	str	lr, [sp, #52]	; 0x34
   14d38:	movweq	ip, #9
   14d3c:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d40:	mov	ip, #0
   14d44:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d48:	mov	ip, #1
   14d4c:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d50:	mov	ip, #2
   14d54:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d58:	mov	ip, #3
   14d5c:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d60:	mov	ip, #4
   14d64:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d68:	mov	ip, #5
   14d6c:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d70:	mov	ip, #6
   14d74:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d78:	mov	ip, #7
   14d7c:	b	14d84 <_obstack_memory_used@@Base+0x628>
   14d80:	mov	ip, #8
   14d84:	add	lr, sp, #16
   14d88:	str	ip, [sp, #4]
   14d8c:	str	lr, [sp]
   14d90:	bl	14880 <_obstack_memory_used@@Base+0x124>
   14d94:	mov	sp, fp
   14d98:	pop	{fp, pc}
   14d9c:	push	{fp, lr}
   14da0:	mov	fp, sp
   14da4:	movw	r0, #6332	; 0x18bc
   14da8:	movt	r0, #3
   14dac:	ldr	r1, [r0]
   14db0:	mov	r0, #10
   14db4:	bl	11534 <fputc@plt>
   14db8:	movw	r0, #52419	; 0xccc3
   14dbc:	movw	r1, #52439	; 0xccd7
   14dc0:	movt	r0, #1
   14dc4:	movt	r1, #1
   14dc8:	bl	11348 <printf@plt>
   14dcc:	movw	r0, #52461	; 0xcced
   14dd0:	movw	r1, #51700	; 0xc9f4
   14dd4:	movw	r2, #52481	; 0xcd01
   14dd8:	movt	r0, #1
   14ddc:	movt	r1, #1
   14de0:	movt	r2, #1
   14de4:	bl	11348 <printf@plt>
   14de8:	movw	r0, #52520	; 0xcd28
   14dec:	movw	r1, #52559	; 0xcd4f
   14df0:	movt	r0, #1
   14df4:	movt	r1, #1
   14df8:	pop	{fp, lr}
   14dfc:	b	11348 <printf@plt>
   14e00:	push	{r4, r5, r6, sl, fp, lr}
   14e04:	add	fp, sp, #16
   14e08:	mov	r4, r2
   14e0c:	mov	r5, r1
   14e10:	mov	r6, r0
   14e14:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14e18:	cmp	r0, #0
   14e1c:	popne	{r4, r5, r6, sl, fp, pc}
   14e20:	cmp	r6, #0
   14e24:	beq	14e38 <_obstack_memory_used@@Base+0x6dc>
   14e28:	cmp	r5, #0
   14e2c:	cmpne	r4, #0
   14e30:	bne	14e38 <_obstack_memory_used@@Base+0x6dc>
   14e34:	pop	{r4, r5, r6, sl, fp, pc}
   14e38:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14e3c:	push	{r4, r5, r6, sl, fp, lr}
   14e40:	add	fp, sp, #16
   14e44:	mov	r4, r2
   14e48:	mov	r5, r1
   14e4c:	mov	r6, r0
   14e50:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14e54:	cmp	r0, #0
   14e58:	popne	{r4, r5, r6, sl, fp, pc}
   14e5c:	cmp	r6, #0
   14e60:	beq	14e74 <_obstack_memory_used@@Base+0x718>
   14e64:	cmp	r5, #0
   14e68:	cmpne	r4, #0
   14e6c:	bne	14e74 <_obstack_memory_used@@Base+0x718>
   14e70:	pop	{r4, r5, r6, sl, fp, pc}
   14e74:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14e78:	push	{fp, lr}
   14e7c:	mov	fp, sp
   14e80:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   14e84:	cmp	r0, #0
   14e88:	popne	{fp, pc}
   14e8c:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   14e9c:	cmp	r0, #0
   14ea0:	popne	{fp, pc}
   14ea4:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14ea8:	push	{fp, lr}
   14eac:	mov	fp, sp
   14eb0:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   14eb4:	cmp	r0, #0
   14eb8:	popne	{fp, pc}
   14ebc:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14ec0:	push	{r4, r5, fp, lr}
   14ec4:	add	fp, sp, #8
   14ec8:	mov	r4, r1
   14ecc:	mov	r5, r0
   14ed0:	bl	15468 <_obstack_memory_used@@Base+0xd0c>
   14ed4:	cmp	r0, #0
   14ed8:	popne	{r4, r5, fp, pc}
   14edc:	cmp	r5, #0
   14ee0:	beq	14ef0 <_obstack_memory_used@@Base+0x794>
   14ee4:	cmp	r4, #0
   14ee8:	bne	14ef0 <_obstack_memory_used@@Base+0x794>
   14eec:	pop	{r4, r5, fp, pc}
   14ef0:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14ef4:	push	{fp, lr}
   14ef8:	mov	fp, sp
   14efc:	cmp	r1, #0
   14f00:	orreq	r1, r1, #1
   14f04:	bl	15468 <_obstack_memory_used@@Base+0xd0c>
   14f08:	cmp	r0, #0
   14f0c:	popne	{fp, pc}
   14f10:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14f14:	push	{fp, lr}
   14f18:	mov	fp, sp
   14f1c:	clz	r3, r2
   14f20:	lsr	ip, r3, #5
   14f24:	clz	r3, r1
   14f28:	lsr	r3, r3, #5
   14f2c:	orrs	r3, r3, ip
   14f30:	movwne	r1, #1
   14f34:	movwne	r2, #1
   14f38:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14f3c:	cmp	r0, #0
   14f40:	popne	{fp, pc}
   14f44:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14f48:	push	{fp, lr}
   14f4c:	mov	fp, sp
   14f50:	mov	r2, r1
   14f54:	mov	r1, r0
   14f58:	mov	r0, #0
   14f5c:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14f60:	cmp	r0, #0
   14f64:	popne	{fp, pc}
   14f68:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14f6c:	push	{fp, lr}
   14f70:	mov	fp, sp
   14f74:	mov	r2, r1
   14f78:	mov	r1, r0
   14f7c:	clz	r0, r2
   14f80:	clz	r3, r1
   14f84:	lsr	r0, r0, #5
   14f88:	lsr	r3, r3, #5
   14f8c:	orrs	r0, r3, r0
   14f90:	mov	r0, #0
   14f94:	movwne	r1, #1
   14f98:	movwne	r2, #1
   14f9c:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14fa0:	cmp	r0, #0
   14fa4:	popne	{fp, pc}
   14fa8:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   14fac:	push	{r4, r5, r6, sl, fp, lr}
   14fb0:	add	fp, sp, #16
   14fb4:	ldr	r5, [r1]
   14fb8:	mov	r4, r1
   14fbc:	mov	r6, r0
   14fc0:	cmp	r0, #0
   14fc4:	beq	14fdc <_obstack_memory_used@@Base+0x880>
   14fc8:	mov	r0, #1
   14fcc:	add	r0, r0, r5, lsr #1
   14fd0:	adds	r5, r5, r0
   14fd4:	bcc	14fe4 <_obstack_memory_used@@Base+0x888>
   14fd8:	b	15020 <_obstack_memory_used@@Base+0x8c4>
   14fdc:	cmp	r5, #0
   14fe0:	movweq	r5, #64	; 0x40
   14fe4:	mov	r0, r6
   14fe8:	mov	r1, r5
   14fec:	mov	r2, #1
   14ff0:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   14ff4:	cmp	r5, #0
   14ff8:	mov	r1, r5
   14ffc:	movwne	r1, #1
   15000:	cmp	r0, #0
   15004:	bne	15018 <_obstack_memory_used@@Base+0x8bc>
   15008:	clz	r2, r6
   1500c:	lsr	r2, r2, #5
   15010:	orrs	r1, r2, r1
   15014:	bne	15020 <_obstack_memory_used@@Base+0x8c4>
   15018:	str	r5, [r4]
   1501c:	pop	{r4, r5, r6, sl, fp, pc}
   15020:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   15024:	push	{r4, r5, r6, r7, fp, lr}
   15028:	add	fp, sp, #16
   1502c:	ldr	r5, [r1]
   15030:	mov	r6, r2
   15034:	mov	r4, r1
   15038:	mov	r7, r0
   1503c:	cmp	r0, #0
   15040:	beq	15058 <_obstack_memory_used@@Base+0x8fc>
   15044:	mov	r0, #1
   15048:	add	r0, r0, r5, lsr #1
   1504c:	adds	r5, r5, r0
   15050:	bcc	15070 <_obstack_memory_used@@Base+0x914>
   15054:	b	150a4 <_obstack_memory_used@@Base+0x948>
   15058:	cmp	r5, #0
   1505c:	bne	15070 <_obstack_memory_used@@Base+0x914>
   15060:	mov	r0, #64	; 0x40
   15064:	cmp	r6, #64	; 0x40
   15068:	udiv	r5, r0, r6
   1506c:	addhi	r5, r5, #1
   15070:	mov	r0, r7
   15074:	mov	r1, r5
   15078:	mov	r2, r6
   1507c:	bl	1a5d0 <argp_failure@@Base+0x36f8>
   15080:	cmp	r0, #0
   15084:	bne	1509c <_obstack_memory_used@@Base+0x940>
   15088:	cmp	r7, #0
   1508c:	beq	150a4 <_obstack_memory_used@@Base+0x948>
   15090:	cmp	r6, #0
   15094:	cmpne	r5, #0
   15098:	bne	150a4 <_obstack_memory_used@@Base+0x948>
   1509c:	str	r5, [r4]
   150a0:	pop	{r4, r5, r6, r7, fp, pc}
   150a4:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   150a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150ac:	add	fp, sp, #24
   150b0:	mov	r8, r1
   150b4:	ldr	r1, [r1]
   150b8:	mov	r5, r0
   150bc:	add	r0, r1, r1, asr #1
   150c0:	cmp	r0, r1
   150c4:	mvnvs	r0, #-2147483648	; 0x80000000
   150c8:	cmp	r0, r3
   150cc:	mov	r7, r0
   150d0:	movgt	r7, r3
   150d4:	cmn	r3, #1
   150d8:	movle	r7, r0
   150dc:	ldr	r0, [fp, #8]
   150e0:	cmn	r0, #1
   150e4:	ble	1510c <_obstack_memory_used@@Base+0x9b0>
   150e8:	cmp	r0, #0
   150ec:	beq	15160 <_obstack_memory_used@@Base+0xa04>
   150f0:	cmn	r7, #1
   150f4:	ble	15134 <_obstack_memory_used@@Base+0x9d8>
   150f8:	mvn	r4, #-2147483648	; 0x80000000
   150fc:	udiv	r6, r4, r0
   15100:	cmp	r6, r7
   15104:	bge	15160 <_obstack_memory_used@@Base+0xa04>
   15108:	b	15170 <_obstack_memory_used@@Base+0xa14>
   1510c:	cmn	r7, #1
   15110:	ble	15150 <_obstack_memory_used@@Base+0x9f4>
   15114:	cmn	r0, #1
   15118:	beq	15160 <_obstack_memory_used@@Base+0xa04>
   1511c:	mov	r6, #-2147483648	; 0x80000000
   15120:	mvn	r4, #-2147483648	; 0x80000000
   15124:	sdiv	r6, r6, r0
   15128:	cmp	r6, r7
   1512c:	bge	15160 <_obstack_memory_used@@Base+0xa04>
   15130:	b	15170 <_obstack_memory_used@@Base+0xa14>
   15134:	beq	15160 <_obstack_memory_used@@Base+0xa04>
   15138:	mov	r6, #-2147483648	; 0x80000000
   1513c:	mvn	r4, #-2147483648	; 0x80000000
   15140:	sdiv	r6, r6, r7
   15144:	cmp	r6, r0
   15148:	bge	15160 <_obstack_memory_used@@Base+0xa04>
   1514c:	b	15170 <_obstack_memory_used@@Base+0xa14>
   15150:	mvn	r4, #-2147483648	; 0x80000000
   15154:	sdiv	r6, r4, r0
   15158:	cmp	r7, r6
   1515c:	blt	15170 <_obstack_memory_used@@Base+0xa14>
   15160:	mul	r6, r7, r0
   15164:	mov	r4, #64	; 0x40
   15168:	cmp	r6, #63	; 0x3f
   1516c:	bgt	15178 <_obstack_memory_used@@Base+0xa1c>
   15170:	sdiv	r7, r4, r0
   15174:	mul	r6, r7, r0
   15178:	cmp	r5, #0
   1517c:	moveq	r4, #0
   15180:	streq	r4, [r8]
   15184:	sub	r4, r7, r1
   15188:	cmp	r4, r2
   1518c:	bge	15238 <_obstack_memory_used@@Base+0xadc>
   15190:	add	r7, r1, r2
   15194:	mov	r6, #0
   15198:	mov	r2, #0
   1519c:	cmp	r7, r3
   151a0:	movwgt	r6, #1
   151a4:	cmn	r3, #1
   151a8:	movwgt	r2, #1
   151ac:	cmp	r7, r1
   151b0:	bvs	1526c <_obstack_memory_used@@Base+0xb10>
   151b4:	ands	r1, r2, r6
   151b8:	bne	1526c <_obstack_memory_used@@Base+0xb10>
   151bc:	cmn	r0, #1
   151c0:	ble	151e8 <_obstack_memory_used@@Base+0xa8c>
   151c4:	cmp	r0, #0
   151c8:	beq	15234 <_obstack_memory_used@@Base+0xad8>
   151cc:	cmn	r7, #1
   151d0:	ble	1520c <_obstack_memory_used@@Base+0xab0>
   151d4:	mvn	r1, #-2147483648	; 0x80000000
   151d8:	udiv	r1, r1, r0
   151dc:	cmp	r1, r7
   151e0:	bge	15234 <_obstack_memory_used@@Base+0xad8>
   151e4:	b	1526c <_obstack_memory_used@@Base+0xb10>
   151e8:	cmn	r7, #1
   151ec:	ble	15224 <_obstack_memory_used@@Base+0xac8>
   151f0:	cmn	r0, #1
   151f4:	beq	15234 <_obstack_memory_used@@Base+0xad8>
   151f8:	mov	r1, #-2147483648	; 0x80000000
   151fc:	sdiv	r1, r1, r0
   15200:	cmp	r1, r7
   15204:	bge	15234 <_obstack_memory_used@@Base+0xad8>
   15208:	b	1526c <_obstack_memory_used@@Base+0xb10>
   1520c:	beq	15234 <_obstack_memory_used@@Base+0xad8>
   15210:	mov	r1, #-2147483648	; 0x80000000
   15214:	sdiv	r1, r1, r7
   15218:	cmp	r1, r0
   1521c:	bge	15234 <_obstack_memory_used@@Base+0xad8>
   15220:	b	1526c <_obstack_memory_used@@Base+0xb10>
   15224:	mvn	r1, #-2147483648	; 0x80000000
   15228:	sdiv	r1, r1, r0
   1522c:	cmp	r7, r1
   15230:	blt	1526c <_obstack_memory_used@@Base+0xb10>
   15234:	mul	r6, r7, r0
   15238:	mov	r0, r5
   1523c:	mov	r1, r6
   15240:	bl	15468 <_obstack_memory_used@@Base+0xd0c>
   15244:	cmp	r6, #0
   15248:	movwne	r6, #1
   1524c:	cmp	r0, #0
   15250:	bne	15264 <_obstack_memory_used@@Base+0xb08>
   15254:	clz	r1, r5
   15258:	lsr	r1, r1, #5
   1525c:	orrs	r1, r1, r6
   15260:	bne	1526c <_obstack_memory_used@@Base+0xb10>
   15264:	str	r7, [r8]
   15268:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1526c:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   15270:	push	{fp, lr}
   15274:	mov	fp, sp
   15278:	mov	r1, #1
   1527c:	bl	153e4 <_obstack_memory_used@@Base+0xc88>
   15280:	cmp	r0, #0
   15284:	popne	{fp, pc}
   15288:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   1528c:	push	{fp, lr}
   15290:	mov	fp, sp
   15294:	bl	153e4 <_obstack_memory_used@@Base+0xc88>
   15298:	cmp	r0, #0
   1529c:	popne	{fp, pc}
   152a0:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   152a4:	push	{fp, lr}
   152a8:	mov	fp, sp
   152ac:	mov	r1, #1
   152b0:	bl	153e4 <_obstack_memory_used@@Base+0xc88>
   152b4:	cmp	r0, #0
   152b8:	popne	{fp, pc}
   152bc:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   152c0:	push	{fp, lr}
   152c4:	mov	fp, sp
   152c8:	bl	153e4 <_obstack_memory_used@@Base+0xc88>
   152cc:	cmp	r0, #0
   152d0:	popne	{fp, pc}
   152d4:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   152d8:	push	{r4, r5, fp, lr}
   152dc:	add	fp, sp, #8
   152e0:	mov	r5, r0
   152e4:	mov	r0, r1
   152e8:	mov	r4, r1
   152ec:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   152f0:	cmp	r0, #0
   152f4:	beq	15308 <_obstack_memory_used@@Base+0xbac>
   152f8:	mov	r1, r5
   152fc:	mov	r2, r4
   15300:	pop	{r4, r5, fp, lr}
   15304:	b	113a8 <memcpy@plt>
   15308:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   1530c:	push	{r4, r5, fp, lr}
   15310:	add	fp, sp, #8
   15314:	mov	r5, r0
   15318:	mov	r0, r1
   1531c:	mov	r4, r1
   15320:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   15324:	cmp	r0, #0
   15328:	beq	1533c <_obstack_memory_used@@Base+0xbe0>
   1532c:	mov	r1, r5
   15330:	mov	r2, r4
   15334:	pop	{r4, r5, fp, lr}
   15338:	b	113a8 <memcpy@plt>
   1533c:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   15340:	push	{r4, r5, fp, lr}
   15344:	add	fp, sp, #8
   15348:	mov	r5, r0
   1534c:	add	r0, r1, #1
   15350:	mov	r4, r1
   15354:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   15358:	cmp	r0, #0
   1535c:	beq	15378 <_obstack_memory_used@@Base+0xc1c>
   15360:	mov	r1, #0
   15364:	mov	r2, r4
   15368:	strb	r1, [r0, r4]
   1536c:	mov	r1, r5
   15370:	pop	{r4, r5, fp, lr}
   15374:	b	113a8 <memcpy@plt>
   15378:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   1537c:	push	{r4, r5, fp, lr}
   15380:	add	fp, sp, #8
   15384:	mov	r4, r0
   15388:	bl	114a4 <strlen@plt>
   1538c:	add	r5, r0, #1
   15390:	mov	r0, r5
   15394:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   15398:	cmp	r0, #0
   1539c:	beq	153b0 <_obstack_memory_used@@Base+0xc54>
   153a0:	mov	r1, r4
   153a4:	mov	r2, r5
   153a8:	pop	{r4, r5, fp, lr}
   153ac:	b	113a8 <memcpy@plt>
   153b0:	bl	153b4 <_obstack_memory_used@@Base+0xc58>
   153b4:	push	{fp, lr}
   153b8:	mov	fp, sp
   153bc:	movw	r0, #6296	; 0x1898
   153c0:	movw	r2, #52876	; 0xce8c
   153c4:	movw	r3, #51727	; 0xca0f
   153c8:	mov	r1, #0
   153cc:	movt	r0, #3
   153d0:	movt	r2, #1
   153d4:	movt	r3, #1
   153d8:	ldr	r0, [r0]
   153dc:	bl	11420 <error@plt>
   153e0:	bl	115d0 <abort@plt>
   153e4:	clz	r2, r1
   153e8:	clz	r3, r0
   153ec:	lsr	r2, r2, #5
   153f0:	lsr	r3, r3, #5
   153f4:	orrs	r2, r3, r2
   153f8:	movwne	r1, #1
   153fc:	movwne	r0, #1
   15400:	cmp	r1, #0
   15404:	beq	15434 <_obstack_memory_used@@Base+0xcd8>
   15408:	mvn	r2, #-2147483648	; 0x80000000
   1540c:	udiv	r2, r2, r1
   15410:	cmp	r2, r0
   15414:	bcs	15434 <_obstack_memory_used@@Base+0xcd8>
   15418:	push	{fp, lr}
   1541c:	mov	fp, sp
   15420:	bl	114c8 <__errno_location@plt>
   15424:	mov	r1, #12
   15428:	str	r1, [r0]
   1542c:	mov	r0, #0
   15430:	pop	{fp, pc}
   15434:	b	1130c <calloc@plt>
   15438:	cmp	r0, #0
   1543c:	movweq	r0, #1
   15440:	cmn	r0, #1
   15444:	ble	1544c <_obstack_memory_used@@Base+0xcf0>
   15448:	b	11444 <malloc@plt>
   1544c:	push	{fp, lr}
   15450:	mov	fp, sp
   15454:	bl	114c8 <__errno_location@plt>
   15458:	mov	r1, #12
   1545c:	str	r1, [r0]
   15460:	mov	r0, #0
   15464:	pop	{fp, pc}
   15468:	push	{fp, lr}
   1546c:	mov	fp, sp
   15470:	cmp	r0, #0
   15474:	beq	15490 <_obstack_memory_used@@Base+0xd34>
   15478:	cmp	r1, #0
   1547c:	beq	1549c <_obstack_memory_used@@Base+0xd40>
   15480:	cmn	r1, #1
   15484:	ble	154a8 <_obstack_memory_used@@Base+0xd4c>
   15488:	pop	{fp, lr}
   1548c:	b	113d8 <realloc@plt>
   15490:	mov	r0, r1
   15494:	pop	{fp, lr}
   15498:	b	15438 <_obstack_memory_used@@Base+0xcdc>
   1549c:	bl	142d0 <argp_parse@@Base+0x13dc>
   154a0:	mov	r0, #0
   154a4:	pop	{fp, pc}
   154a8:	bl	114c8 <__errno_location@plt>
   154ac:	mov	r1, #12
   154b0:	str	r1, [r0]
   154b4:	mov	r0, #0
   154b8:	pop	{fp, pc}

000154bc <argp_help@@Base>:
   154bc:	push	{fp, lr}
   154c0:	mov	fp, sp
   154c4:	sub	sp, sp, #8
   154c8:	mov	ip, r2
   154cc:	mov	r2, r1
   154d0:	str	r3, [sp]
   154d4:	mov	r1, #0
   154d8:	mov	r3, ip
   154dc:	bl	154e8 <argp_help@@Base+0x2c>
   154e0:	mov	sp, fp
   154e4:	pop	{fp, pc}
   154e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154ec:	add	fp, sp, #28
   154f0:	sub	sp, sp, #108	; 0x6c
   154f4:	cmp	r2, #0
   154f8:	str	r1, [fp, #-96]	; 0xffffffa0
   154fc:	str	r0, [fp, #-104]	; 0xffffff98
   15500:	beq	16ae0 <argp_help@@Base+0x1624>
   15504:	ldr	r0, [fp, #8]
   15508:	mov	r6, r3
   1550c:	mov	r5, r2
   15510:	str	r0, [fp, #-92]	; 0xffffffa4
   15514:	mov	r0, r2
   15518:	bl	11558 <flockfile@plt>
   1551c:	movw	sl, #6256	; 0x1870
   15520:	str	r6, [fp, #-128]	; 0xffffff80
   15524:	movt	sl, #3
   15528:	ldr	r0, [sl, #36]	; 0x24
   1552c:	cmp	r0, #0
   15530:	bne	15af8 <argp_help@@Base+0x63c>
   15534:	movw	r0, #52751	; 0xce0f
   15538:	movt	r0, #1
   1553c:	bl	1142c <getenv@plt>
   15540:	mov	r8, r0
   15544:	mov	r0, #32
   15548:	mov	r1, sl
   1554c:	add	r3, sl, #16
   15550:	sub	r2, fp, #88	; 0x58
   15554:	vld1.64	{d16-d17}, [r1], r0
   15558:	vld1.64	{d18-d19}, [r3]
   1555c:	add	r7, r2, #16
   15560:	cmp	r8, #0
   15564:	vldr	d20, [r1]
   15568:	mov	r1, r2
   1556c:	vst1.64	{d16-d17}, [r1], r0
   15570:	vst1.64	{d18-d19}, [r7]
   15574:	vstr	d20, [r1]
   15578:	beq	15af8 <argp_help@@Base+0x63c>
   1557c:	str	r7, [fp, #-112]	; 0xffffff90
   15580:	str	r3, [fp, #-108]	; 0xffffff94
   15584:	str	r5, [fp, #-132]	; 0xffffff7c
   15588:	ldrb	r5, [r8]
   1558c:	cmp	r5, #0
   15590:	beq	159f4 <argp_help@@Base+0x538>
   15594:	movw	r7, #53416	; 0xd0a8
   15598:	movt	r7, #1
   1559c:	bl	11480 <__ctype_b_loc@plt>
   155a0:	str	r0, [fp, #-100]	; 0xffffff9c
   155a4:	b	155dc <argp_help@@Base+0x120>
   155a8:	ldrb	r0, [r5, #15]
   155ac:	sub	r1, fp, #88	; 0x58
   155b0:	str	r6, [r1, r0]
   155b4:	ldr	r6, [fp, #-128]	; 0xffffff80
   155b8:	movw	sl, #6256	; 0x1870
   155bc:	movt	sl, #3
   155c0:	mov	r8, r4
   155c4:	ldrb	r0, [r8], #1
   155c8:	cmp	r0, #44	; 0x2c
   155cc:	movne	r8, r4
   155d0:	ldrb	r5, [r8]
   155d4:	cmp	r5, #0
   155d8:	beq	159f4 <argp_help@@Base+0x538>
   155dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   155e0:	uxtb	r1, r5
   155e4:	ldr	r0, [r0]
   155e8:	add	r1, r0, r1, lsl #1
   155ec:	ldrh	r1, [r1]
   155f0:	tst	r1, #8192	; 0x2000
   155f4:	beq	1560c <argp_help@@Base+0x150>
   155f8:	ldrb	r5, [r8, #1]!
   155fc:	add	r1, r0, r5, lsl #1
   15600:	ldrh	r1, [r1]
   15604:	tst	r1, #8192	; 0x2000
   15608:	bne	155f8 <argp_help@@Base+0x13c>
   1560c:	tst	r1, #1024	; 0x400
   15610:	beq	159b0 <argp_help@@Base+0x4f4>
   15614:	mov	r3, r5
   15618:	mov	r2, r8
   1561c:	b	15624 <argp_help@@Base+0x168>
   15620:	ldrb	r3, [r2, #1]!
   15624:	uxtb	r6, r3
   15628:	add	r1, r0, r6, lsl #1
   1562c:	ldrh	r1, [r1]
   15630:	tst	r1, #8
   15634:	bne	15620 <argp_help@@Base+0x164>
   15638:	cmp	r6, #95	; 0x5f
   1563c:	cmpne	r6, #45	; 0x2d
   15640:	beq	15620 <argp_help@@Base+0x164>
   15644:	tst	r1, #8192	; 0x2000
   15648:	mov	r4, r2
   1564c:	beq	15668 <argp_help@@Base+0x1ac>
   15650:	mov	r4, r2
   15654:	ldrb	r3, [r4, #1]!
   15658:	add	r1, r0, r3, lsl #1
   1565c:	ldrh	r1, [r1]
   15660:	tst	r1, #8192	; 0x2000
   15664:	bne	15654 <argp_help@@Base+0x198>
   15668:	sub	r9, r2, r8
   1566c:	uxtb	r2, r3
   15670:	cmp	r2, #0
   15674:	cmpne	r2, #44	; 0x2c
   15678:	bne	156e8 <argp_help@@Base+0x22c>
   1567c:	uxtb	r0, r5
   15680:	mov	sl, #1
   15684:	cmp	r0, #110	; 0x6e
   15688:	bne	156d0 <argp_help@@Base+0x214>
   1568c:	ldrb	r0, [r8, #1]
   15690:	mov	sl, #1
   15694:	cmp	r0, #111	; 0x6f
   15698:	bne	156d0 <argp_help@@Base+0x214>
   1569c:	ldrb	r0, [r8, #2]
   156a0:	mov	sl, #1
   156a4:	cmp	r0, #45	; 0x2d
   156a8:	bne	156d0 <argp_help@@Base+0x214>
   156ac:	sub	r9, r9, #3
   156b0:	add	r8, r8, #3
   156b4:	mov	r6, #0
   156b8:	mov	sl, #1
   156bc:	mov	r0, r7
   156c0:	bl	114a4 <strlen@plt>
   156c4:	cmp	r0, r9
   156c8:	beq	1578c <argp_help@@Base+0x2d0>
   156cc:	b	157a8 <argp_help@@Base+0x2ec>
   156d0:	mov	r6, #1
   156d4:	mov	r0, r7
   156d8:	bl	114a4 <strlen@plt>
   156dc:	cmp	r0, r9
   156e0:	beq	1578c <argp_help@@Base+0x2d0>
   156e4:	b	157a8 <argp_help@@Base+0x2ec>
   156e8:	cmp	r2, #61	; 0x3d
   156ec:	bne	15704 <argp_help@@Base+0x248>
   156f0:	ldrb	r1, [r4, #1]!
   156f4:	add	r1, r0, r1, lsl #1
   156f8:	ldrh	r1, [r1]
   156fc:	tst	r1, #8192	; 0x2000
   15700:	bne	156f0 <argp_help@@Base+0x234>
   15704:	mov	sl, #0
   15708:	tst	r1, #2048	; 0x800
   1570c:	bne	15728 <argp_help@@Base+0x26c>
   15710:	mov	r6, #0
   15714:	mov	r0, r7
   15718:	bl	114a4 <strlen@plt>
   1571c:	cmp	r0, r9
   15720:	beq	1578c <argp_help@@Base+0x2d0>
   15724:	b	157a8 <argp_help@@Base+0x2ec>
   15728:	mov	r0, r4
   1572c:	mov	r1, #0
   15730:	mov	r2, #10
   15734:	bl	1133c <strtol@plt>
   15738:	mov	r6, r0
   1573c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15740:	sub	r4, r4, #1
   15744:	ldr	r0, [r0]
   15748:	ldrb	r1, [r4, #1]!
   1574c:	add	r1, r0, r1, lsl #1
   15750:	ldrh	r1, [r1]
   15754:	tst	r1, #2048	; 0x800
   15758:	bne	15748 <argp_help@@Base+0x28c>
   1575c:	mov	sl, #0
   15760:	tst	r1, #8192	; 0x2000
   15764:	beq	1577c <argp_help@@Base+0x2c0>
   15768:	ldrb	r1, [r4, #1]!
   1576c:	add	r1, r0, r1, lsl #1
   15770:	ldrb	r1, [r1, #1]
   15774:	tst	r1, #32
   15778:	bne	15768 <argp_help@@Base+0x2ac>
   1577c:	mov	r0, r7
   15780:	bl	114a4 <strlen@plt>
   15784:	cmp	r0, r9
   15788:	bne	157a8 <argp_help@@Base+0x2ec>
   1578c:	mov	r0, r8
   15790:	mov	r1, r7
   15794:	mov	r2, r9
   15798:	bl	115c4 <strncmp@plt>
   1579c:	cmp	r0, #0
   157a0:	mov	r5, r7
   157a4:	beq	1592c <argp_help@@Base+0x470>
   157a8:	add	r5, r7, #16
   157ac:	mov	r0, r5
   157b0:	bl	114a4 <strlen@plt>
   157b4:	cmp	r0, r9
   157b8:	bne	157d4 <argp_help@@Base+0x318>
   157bc:	mov	r0, r8
   157c0:	mov	r1, r5
   157c4:	mov	r2, r9
   157c8:	bl	115c4 <strncmp@plt>
   157cc:	cmp	r0, #0
   157d0:	beq	1592c <argp_help@@Base+0x470>
   157d4:	add	r5, r7, #32
   157d8:	mov	r0, r5
   157dc:	bl	114a4 <strlen@plt>
   157e0:	cmp	r0, r9
   157e4:	bne	15800 <argp_help@@Base+0x344>
   157e8:	mov	r0, r8
   157ec:	mov	r1, r5
   157f0:	mov	r2, r9
   157f4:	bl	115c4 <strncmp@plt>
   157f8:	cmp	r0, #0
   157fc:	beq	1592c <argp_help@@Base+0x470>
   15800:	add	r5, r7, #48	; 0x30
   15804:	mov	r0, r5
   15808:	bl	114a4 <strlen@plt>
   1580c:	cmp	r0, r9
   15810:	bne	1582c <argp_help@@Base+0x370>
   15814:	mov	r0, r8
   15818:	mov	r1, r5
   1581c:	mov	r2, r9
   15820:	bl	115c4 <strncmp@plt>
   15824:	cmp	r0, #0
   15828:	beq	1592c <argp_help@@Base+0x470>
   1582c:	add	r5, r7, #64	; 0x40
   15830:	mov	r0, r5
   15834:	bl	114a4 <strlen@plt>
   15838:	cmp	r0, r9
   1583c:	bne	15858 <argp_help@@Base+0x39c>
   15840:	mov	r0, r8
   15844:	mov	r1, r5
   15848:	mov	r2, r9
   1584c:	bl	115c4 <strncmp@plt>
   15850:	cmp	r0, #0
   15854:	beq	1592c <argp_help@@Base+0x470>
   15858:	add	r5, r7, #80	; 0x50
   1585c:	mov	r0, r5
   15860:	bl	114a4 <strlen@plt>
   15864:	cmp	r0, r9
   15868:	bne	15884 <argp_help@@Base+0x3c8>
   1586c:	mov	r0, r8
   15870:	mov	r1, r5
   15874:	mov	r2, r9
   15878:	bl	115c4 <strncmp@plt>
   1587c:	cmp	r0, #0
   15880:	beq	1592c <argp_help@@Base+0x470>
   15884:	add	r5, r7, #96	; 0x60
   15888:	mov	r0, r5
   1588c:	bl	114a4 <strlen@plt>
   15890:	cmp	r0, r9
   15894:	bne	158b0 <argp_help@@Base+0x3f4>
   15898:	mov	r0, r8
   1589c:	mov	r1, r5
   158a0:	mov	r2, r9
   158a4:	bl	115c4 <strncmp@plt>
   158a8:	cmp	r0, #0
   158ac:	beq	1592c <argp_help@@Base+0x470>
   158b0:	add	r5, r7, #112	; 0x70
   158b4:	mov	r0, r5
   158b8:	bl	114a4 <strlen@plt>
   158bc:	cmp	r0, r9
   158c0:	bne	158dc <argp_help@@Base+0x420>
   158c4:	mov	r0, r8
   158c8:	mov	r1, r5
   158cc:	mov	r2, r9
   158d0:	bl	115c4 <strncmp@plt>
   158d4:	cmp	r0, #0
   158d8:	beq	1592c <argp_help@@Base+0x470>
   158dc:	add	r5, r7, #128	; 0x80
   158e0:	mov	r0, r5
   158e4:	bl	114a4 <strlen@plt>
   158e8:	cmp	r0, r9
   158ec:	bne	15908 <argp_help@@Base+0x44c>
   158f0:	mov	r0, r8
   158f4:	mov	r1, r5
   158f8:	mov	r2, r9
   158fc:	bl	115c4 <strncmp@plt>
   15900:	cmp	r0, #0
   15904:	beq	1592c <argp_help@@Base+0x470>
   15908:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1590c:	movw	sl, #6256	; 0x1870
   15910:	movt	sl, #3
   15914:	cmp	r0, #0
   15918:	sub	sp, sp, #8
   1591c:	beq	15984 <argp_help@@Base+0x4c8>
   15920:	str	r9, [sp]
   15924:	str	r8, [sp, #4]
   15928:	b	15990 <argp_help@@Base+0x4d4>
   1592c:	cmp	sl, #0
   15930:	beq	155a8 <argp_help@@Base+0xec>
   15934:	ldrb	r0, [r5, #14]
   15938:	cmp	r0, #0
   1593c:	bne	155a8 <argp_help@@Base+0xec>
   15940:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15944:	sub	sp, sp, #8
   15948:	cmp	r0, #0
   1594c:	beq	1595c <argp_help@@Base+0x4a0>
   15950:	str	r9, [sp]
   15954:	str	r8, [sp, #4]
   15958:	b	15968 <argp_help@@Base+0x4ac>
   1595c:	str	r9, [sp]
   15960:	str	r8, [sp, #4]
   15964:	mov	r0, #0
   15968:	movw	r3, #52765	; 0xce1d
   1596c:	mov	r1, #0
   15970:	mov	r2, #0
   15974:	movt	r3, #1
   15978:	bl	16ed8 <argp_failure@@Base>
   1597c:	add	sp, sp, #8
   15980:	b	155b4 <argp_help@@Base+0xf8>
   15984:	str	r9, [sp]
   15988:	str	r8, [sp, #4]
   1598c:	mov	r0, #0
   15990:	movw	r3, #52812	; 0xce4c
   15994:	mov	r1, #0
   15998:	mov	r2, #0
   1599c:	movt	r3, #1
   159a0:	bl	16ed8 <argp_failure@@Base>
   159a4:	add	sp, sp, #8
   159a8:	ldr	r6, [fp, #-128]	; 0xffffff80
   159ac:	b	155c0 <argp_help@@Base+0x104>
   159b0:	tst	r5, #255	; 0xff
   159b4:	beq	159f4 <argp_help@@Base+0x538>
   159b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   159bc:	sub	sp, sp, #8
   159c0:	cmp	r0, #0
   159c4:	beq	159d4 <argp_help@@Base+0x518>
   159c8:	movw	r3, #52850	; 0xce72
   159cc:	str	r8, [sp]
   159d0:	b	159e0 <argp_help@@Base+0x524>
   159d4:	movw	r3, #52850	; 0xce72
   159d8:	str	r8, [sp]
   159dc:	mov	r0, #0
   159e0:	movt	r3, #1
   159e4:	mov	r1, #0
   159e8:	mov	r2, #0
   159ec:	bl	16ed8 <argp_failure@@Base>
   159f0:	add	sp, sp, #8
   159f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   159f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   159fc:	movw	r0, #53416	; 0xd0a8
   15a00:	movt	r0, #1
   15a04:	cmp	r2, r1
   15a08:	bge	15a8c <argp_help@@Base+0x5d0>
   15a0c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15a10:	cmp	r2, r1
   15a14:	bge	15a94 <argp_help@@Base+0x5d8>
   15a18:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15a1c:	cmp	r2, r1
   15a20:	bge	15a9c <argp_help@@Base+0x5e0>
   15a24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15a28:	cmp	r2, r1
   15a2c:	bge	15aa4 <argp_help@@Base+0x5e8>
   15a30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15a34:	cmp	r2, r1
   15a38:	bge	15aac <argp_help@@Base+0x5f0>
   15a3c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15a40:	ldr	r5, [fp, #-132]	; 0xffffff7c
   15a44:	cmp	r2, r1
   15a48:	bge	16cac <argp_help@@Base+0x17f0>
   15a4c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15a50:	sub	r1, fp, #88	; 0x58
   15a54:	mov	r2, r1
   15a58:	mov	r1, sl
   15a5c:	vld1.64	{d16-d17}, [r0]
   15a60:	mov	r0, #32
   15a64:	vld1.64	{d18-d19}, [r2], r0
   15a68:	ldr	r0, [fp, #-108]	; 0xffffff94
   15a6c:	vst1.64	{d16-d17}, [r0]
   15a70:	mov	r0, #36	; 0x24
   15a74:	vst1.64	{d18-d19}, [r1], r0
   15a78:	mov	r0, #1
   15a7c:	str	r0, [r1]
   15a80:	ldr	r0, [r2]
   15a84:	str	r0, [sl, #32]
   15a88:	b	15af8 <argp_help@@Base+0x63c>
   15a8c:	add	r2, r0, #32
   15a90:	b	15ab0 <argp_help@@Base+0x5f4>
   15a94:	add	r2, r0, #48	; 0x30
   15a98:	b	15ab0 <argp_help@@Base+0x5f4>
   15a9c:	add	r2, r0, #64	; 0x40
   15aa0:	b	15ab0 <argp_help@@Base+0x5f4>
   15aa4:	add	r2, r0, #80	; 0x50
   15aa8:	b	15ab0 <argp_help@@Base+0x5f4>
   15aac:	add	r2, r0, #96	; 0x60
   15ab0:	ldr	r5, [fp, #-132]	; 0xffffff7c
   15ab4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15ab8:	sub	sp, sp, #8
   15abc:	movw	r1, #52931	; 0xcec3
   15ac0:	cmp	r0, #0
   15ac4:	movt	r1, #1
   15ac8:	beq	15ad8 <argp_help@@Base+0x61c>
   15acc:	movw	r3, #52879	; 0xce8f
   15ad0:	stm	sp, {r1, r2}
   15ad4:	b	15ae4 <argp_help@@Base+0x628>
   15ad8:	movw	r3, #52879	; 0xce8f
   15adc:	stm	sp, {r1, r2}
   15ae0:	mov	r0, #0
   15ae4:	movt	r3, #1
   15ae8:	mov	r1, #0
   15aec:	mov	r2, #0
   15af0:	bl	16ed8 <argp_failure@@Base>
   15af4:	add	sp, sp, #8
   15af8:	ldr	r2, [sl, #32]
   15afc:	mov	r0, #0
   15b00:	mov	r1, #0
   15b04:	mov	r3, #0
   15b08:	str	r0, [fp, #-108]	; 0xffffff94
   15b0c:	mov	r0, r5
   15b10:	bl	1a60c <argp_failure@@Base+0x3734>
   15b14:	cmp	r0, #0
   15b18:	beq	169ac <argp_help@@Base+0x14f0>
   15b1c:	mov	r9, r0
   15b20:	tst	r6, #11
   15b24:	str	r5, [fp, #-132]	; 0xffffff7c
   15b28:	beq	15cf4 <argp_help@@Base+0x838>
   15b2c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b30:	mov	r1, #0
   15b34:	bl	170fc <argp_failure@@Base+0x224>
   15b38:	ldr	r4, [r0, #4]
   15b3c:	str	r0, [fp, #-108]	; 0xffffff94
   15b40:	cmp	r4, #0
   15b44:	beq	15cf4 <argp_help@@Base+0x838>
   15b48:	ldr	r6, [r0]
   15b4c:	movw	sl, #51446	; 0xc8f6
   15b50:	mov	r5, r4
   15b54:	movt	sl, #1
   15b58:	str	r6, [fp, #-100]	; 0xffffff9c
   15b5c:	ldr	r7, [r6, #4]
   15b60:	cmp	r7, #0
   15b64:	bne	15b80 <argp_help@@Base+0x6c4>
   15b68:	subs	r5, r5, #1
   15b6c:	add	r6, r6, #28
   15b70:	beq	15bd4 <argp_help@@Base+0x718>
   15b74:	ldr	r7, [r6, #4]
   15b78:	cmp	r7, #0
   15b7c:	beq	15b68 <argp_help@@Base+0x6ac>
   15b80:	ldr	r0, [r6]
   15b84:	add	r8, r0, #12
   15b88:	ldr	r0, [r8, #-12]
   15b8c:	cmp	r0, #0
   15b90:	bne	15bac <argp_help@@Base+0x6f0>
   15b94:	subs	r7, r7, #1
   15b98:	add	r8, r8, #24
   15b9c:	beq	15b68 <argp_help@@Base+0x6ac>
   15ba0:	ldr	r0, [r8, #-12]
   15ba4:	cmp	r0, #0
   15ba8:	beq	15b94 <argp_help@@Base+0x6d8>
   15bac:	ldrb	r1, [r8]
   15bb0:	tst	r1, #2
   15bb4:	bne	15b94 <argp_help@@Base+0x6d8>
   15bb8:	mov	r1, sl
   15bbc:	bl	11330 <strcmp@plt>
   15bc0:	cmp	r0, #0
   15bc4:	bne	15b94 <argp_help@@Base+0x6d8>
   15bc8:	cmp	r6, #0
   15bcc:	mvnne	r0, #0
   15bd0:	strne	r0, [r6, #12]
   15bd4:	ldr	r6, [fp, #-100]	; 0xffffff9c
   15bd8:	movw	sl, #51609	; 0xc999
   15bdc:	mov	r8, r4
   15be0:	movt	sl, #1
   15be4:	ldr	r7, [r6, #4]
   15be8:	cmp	r7, #0
   15bec:	bne	15c08 <argp_help@@Base+0x74c>
   15bf0:	subs	r8, r8, #1
   15bf4:	add	r6, r6, #28
   15bf8:	beq	15c5c <argp_help@@Base+0x7a0>
   15bfc:	ldr	r7, [r6, #4]
   15c00:	cmp	r7, #0
   15c04:	beq	15bf0 <argp_help@@Base+0x734>
   15c08:	ldr	r0, [r6]
   15c0c:	add	r5, r0, #12
   15c10:	ldr	r0, [r5, #-12]
   15c14:	cmp	r0, #0
   15c18:	bne	15c34 <argp_help@@Base+0x778>
   15c1c:	subs	r7, r7, #1
   15c20:	add	r5, r5, #24
   15c24:	beq	15bf0 <argp_help@@Base+0x734>
   15c28:	ldr	r0, [r5, #-12]
   15c2c:	cmp	r0, #0
   15c30:	beq	15c1c <argp_help@@Base+0x760>
   15c34:	ldrb	r1, [r5]
   15c38:	tst	r1, #2
   15c3c:	bne	15c1c <argp_help@@Base+0x760>
   15c40:	mov	r1, sl
   15c44:	bl	11330 <strcmp@plt>
   15c48:	cmp	r0, #0
   15c4c:	bne	15c1c <argp_help@@Base+0x760>
   15c50:	cmp	r6, #0
   15c54:	mvnne	r0, #0
   15c58:	strne	r0, [r6, #12]
   15c5c:	cmp	r4, #0
   15c60:	beq	16b10 <argp_help@@Base+0x1654>
   15c64:	sub	r2, r4, #1
   15c68:	ldr	r6, [fp, #-128]	; 0xffffff80
   15c6c:	movw	sl, #6256	; 0x1870
   15c70:	and	r0, r4, #3
   15c74:	mov	r1, #0
   15c78:	cmp	r2, #3
   15c7c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15c80:	movt	sl, #3
   15c84:	bcc	15cc0 <argp_help@@Base+0x804>
   15c88:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15c8c:	sub	r3, r4, r0
   15c90:	mov	r1, #0
   15c94:	add	r7, r1, #3
   15c98:	str	r1, [r2, #24]
   15c9c:	str	r7, [r2, #108]	; 0x6c
   15ca0:	add	r7, r1, #2
   15ca4:	str	r7, [r2, #80]	; 0x50
   15ca8:	add	r7, r1, #1
   15cac:	add	r1, r1, #4
   15cb0:	str	r7, [r2, #52]	; 0x34
   15cb4:	add	r2, r2, #112	; 0x70
   15cb8:	cmp	r3, r1
   15cbc:	bne	15c94 <argp_help@@Base+0x7d8>
   15cc0:	cmp	r0, #0
   15cc4:	beq	15cdc <argp_help@@Base+0x820>
   15cc8:	add	r2, r2, #24
   15ccc:	str	r1, [r2], #28
   15cd0:	subs	r0, r0, #1
   15cd4:	add	r1, r1, #1
   15cd8:	bne	15ccc <argp_help@@Base+0x810>
   15cdc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15ce0:	movw	r3, #34080	; 0x8520
   15ce4:	mov	r1, r4
   15ce8:	mov	r2, #28
   15cec:	movt	r3, #1
   15cf0:	bl	11570 <qsort@plt>
   15cf4:	tst	r6, #3
   15cf8:	beq	16b24 <argp_help@@Base+0x1668>
   15cfc:	ldr	r1, [fp, #-104]	; 0xffffff98
   15d00:	ldr	r0, [r1, #8]
   15d04:	ldr	r1, [r1, #16]
   15d08:	bl	17898 <argp_failure@@Base+0x9c0>
   15d0c:	mov	r2, r0
   15d10:	add	r0, r0, #7
   15d14:	bic	r0, r0, #7
   15d18:	sub	r5, sp, r0
   15d1c:	mov	sp, r5
   15d20:	mov	r0, r5
   15d24:	mov	r1, #0
   15d28:	bl	114ec <memset@plt>
   15d2c:	movw	r7, #52662	; 0xcdb6
   15d30:	movt	r7, #1
   15d34:	b	15d58 <argp_help@@Base+0x89c>
   15d38:	add	r1, r0, #1
   15d3c:	str	r1, [r9, #28]
   15d40:	mov	r1, #10
   15d44:	strb	r1, [r0]
   15d48:	cmp	r7, #0
   15d4c:	movw	r7, #52669	; 0xcdbd
   15d50:	movt	r7, #1
   15d54:	beq	15f1c <argp_help@@Base+0xa60>
   15d58:	movw	r0, #6256	; 0x1870
   15d5c:	ldr	r1, [r9, #24]
   15d60:	ldr	r2, [r9, #28]
   15d64:	mov	sl, r6
   15d68:	movt	r0, #3
   15d6c:	ldr	r6, [r0, #28]
   15d70:	ldr	r0, [r9, #16]
   15d74:	sub	r1, r2, r1
   15d78:	cmp	r1, r0
   15d7c:	bls	15d88 <argp_help@@Base+0x8cc>
   15d80:	mov	r0, r9
   15d84:	bl	1a6d8 <argp_failure@@Base+0x3800>
   15d88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d8c:	movw	r1, #52656	; 0xcdb0
   15d90:	ldr	r4, [r9, #12]
   15d94:	mov	r0, r9
   15d98:	mov	r2, r7
   15d9c:	str	r6, [r9, #12]
   15da0:	str	r5, [fp, #-88]	; 0xffffffa8
   15da4:	movt	r1, #1
   15da8:	bl	1ad40 <argp_failure@@Base+0x3e68>
   15dac:	movw	r0, #6256	; 0x1870
   15db0:	ldr	r1, [r9, #24]
   15db4:	ldr	r2, [r9, #28]
   15db8:	movt	r0, #3
   15dbc:	ldr	r6, [r0, #28]
   15dc0:	ldr	r0, [r9, #16]
   15dc4:	sub	r1, r2, r1
   15dc8:	cmp	r1, r0
   15dcc:	bls	15dd8 <argp_help@@Base+0x91c>
   15dd0:	mov	r0, r9
   15dd4:	bl	1a6d8 <argp_failure@@Base+0x3800>
   15dd8:	ldr	r8, [r9, #4]
   15ddc:	str	r6, [r9, #4]
   15de0:	mov	r6, sl
   15de4:	tst	sl, #2
   15de8:	bne	15e00 <argp_help@@Base+0x944>
   15dec:	ldr	r0, [fp, #-108]	; 0xffffff94
   15df0:	mov	r1, r9
   15df4:	bl	1790c <argp_failure@@Base+0xa34>
   15df8:	orr	r6, r6, #2
   15dfc:	b	15e64 <argp_help@@Base+0x9a8>
   15e00:	ldr	r0, [fp, #-108]	; 0xffffff94
   15e04:	ldr	r0, [r0, #4]
   15e08:	cmp	r0, #0
   15e0c:	beq	15e64 <argp_help@@Base+0x9a8>
   15e10:	ldr	r0, [r9, #28]
   15e14:	ldr	r1, [r9, #32]
   15e18:	add	r2, r0, #12
   15e1c:	cmp	r2, r1
   15e20:	bls	15e3c <argp_help@@Base+0x980>
   15e24:	mov	r0, r9
   15e28:	mov	r1, #12
   15e2c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   15e30:	cmp	r0, #0
   15e34:	beq	15e64 <argp_help@@Base+0x9a8>
   15e38:	ldr	r0, [r9, #28]
   15e3c:	movw	r1, #53400	; 0xd098
   15e40:	movt	r1, #1
   15e44:	vldr	d16, [r1]
   15e48:	movw	r1, #11822	; 0x2e2e
   15e4c:	movt	r1, #23854	; 0x5d2e
   15e50:	str	r1, [r0, #8]
   15e54:	vst1.8	{d16}, [r0]
   15e58:	ldr	r0, [r9, #28]
   15e5c:	add	r0, r0, #12
   15e60:	str	r0, [r9, #28]
   15e64:	sub	sp, sp, #8
   15e68:	str	r9, [sp]
   15e6c:	sub	r2, fp, #88	; 0x58
   15e70:	mov	r3, #1
   15e74:	ldr	r0, [fp, #-104]	; 0xffffff98
   15e78:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15e7c:	bl	17d28 <argp_failure@@Base+0xe50>
   15e80:	add	sp, sp, #8
   15e84:	mov	r7, r0
   15e88:	ldr	r2, [r9, #24]
   15e8c:	ldr	r0, [r9, #28]
   15e90:	ldr	r1, [r9, #16]
   15e94:	sub	r2, r0, r2
   15e98:	cmp	r2, r1
   15e9c:	bls	15ed8 <argp_help@@Base+0xa1c>
   15ea0:	mov	r0, r9
   15ea4:	bl	1a6d8 <argp_failure@@Base+0x3800>
   15ea8:	ldr	r2, [r9, #24]
   15eac:	ldr	r0, [r9, #28]
   15eb0:	ldr	r1, [r9, #16]
   15eb4:	sub	r2, r0, r2
   15eb8:	cmp	r2, r1
   15ebc:	str	r4, [r9, #12]
   15ec0:	bhi	15ee4 <argp_help@@Base+0xa28>
   15ec4:	str	r8, [r9, #4]
   15ec8:	ldr	r1, [r9, #32]
   15ecc:	cmp	r0, r1
   15ed0:	bcc	15d38 <argp_help@@Base+0x87c>
   15ed4:	b	15f00 <argp_help@@Base+0xa44>
   15ed8:	cmp	r2, r1
   15edc:	str	r4, [r9, #12]
   15ee0:	bls	15ec4 <argp_help@@Base+0xa08>
   15ee4:	mov	r0, r9
   15ee8:	bl	1a6d8 <argp_failure@@Base+0x3800>
   15eec:	ldr	r0, [r9, #28]
   15ef0:	str	r8, [r9, #4]
   15ef4:	ldr	r1, [r9, #32]
   15ef8:	cmp	r0, r1
   15efc:	bcc	15d38 <argp_help@@Base+0x87c>
   15f00:	mov	r0, r9
   15f04:	mov	r1, #1
   15f08:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   15f0c:	cmp	r0, #0
   15f10:	beq	15d48 <argp_help@@Base+0x88c>
   15f14:	ldr	r0, [r9, #28]
   15f18:	b	15d38 <argp_help@@Base+0x87c>
   15f1c:	movw	sl, #6256	; 0x1870
   15f20:	mov	r5, #1
   15f24:	movt	sl, #3
   15f28:	tst	r6, #16
   15f2c:	beq	15f58 <argp_help@@Base+0xa9c>
   15f30:	sub	sp, sp, #8
   15f34:	mov	r0, #1
   15f38:	mov	r2, #0
   15f3c:	mov	r3, #0
   15f40:	stm	sp, {r0, r9}
   15f44:	ldr	r0, [fp, #-104]	; 0xffffff98
   15f48:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15f4c:	bl	1803c <argp_failure@@Base+0x1164>
   15f50:	add	sp, sp, #8
   15f54:	orr	r5, r0, r5
   15f58:	tst	r6, #4
   15f5c:	bne	169bc <argp_help@@Base+0x1500>
   15f60:	tst	r6, #8
   15f64:	beq	169e0 <argp_help@@Base+0x1524>
   15f68:	ldr	r0, [fp, #-108]	; 0xffffff94
   15f6c:	ldr	r1, [r0, #4]
   15f70:	cmp	r1, #0
   15f74:	beq	169e0 <argp_help@@Base+0x1524>
   15f78:	str	r6, [fp, #-128]	; 0xffffff80
   15f7c:	cmp	r5, #0
   15f80:	ldr	r4, [fp, #-108]	; 0xffffff94
   15f84:	beq	15fc4 <argp_help@@Base+0xb08>
   15f88:	ldr	r0, [r9, #28]
   15f8c:	ldr	r1, [r9, #32]
   15f90:	cmp	r0, r1
   15f94:	bcc	15fb0 <argp_help@@Base+0xaf4>
   15f98:	mov	r0, r9
   15f9c:	mov	r1, #1
   15fa0:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   15fa4:	cmp	r0, #0
   15fa8:	beq	15fc0 <argp_help@@Base+0xb04>
   15fac:	ldr	r0, [r9, #28]
   15fb0:	add	r1, r0, #1
   15fb4:	str	r1, [r9, #28]
   15fb8:	mov	r1, #10
   15fbc:	strb	r1, [r0]
   15fc0:	ldr	r1, [r4, #4]
   15fc4:	ldr	r5, [r4]
   15fc8:	mov	r0, #0
   15fcc:	cmp	r1, #0
   15fd0:	str	r0, [fp, #-44]	; 0xffffffd4
   15fd4:	str	r0, [fp, #-48]	; 0xffffffd0
   15fd8:	str	r0, [fp, #-40]	; 0xffffffd8
   15fdc:	beq	16afc <argp_help@@Base+0x1640>
   15fe0:	add	r0, r9, #28
   15fe4:	str	r0, [fp, #-100]	; 0xffffff9c
   15fe8:	b	16004 <argp_help@@Base+0xb48>
   15fec:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15ff0:	ldr	r0, [fp, #-120]	; 0xffffff88
   15ff4:	add	r5, r5, #28
   15ff8:	subs	r1, r1, #1
   15ffc:	str	r0, [r9, #12]
   16000:	beq	16ae8 <argp_help@@Base+0x162c>
   16004:	ldr	r0, [r5, #8]
   16008:	str	r1, [fp, #-116]	; 0xffffff8c
   1600c:	ldr	r1, [r9, #24]
   16010:	ldr	r2, [r9, #28]
   16014:	ldr	r4, [r5]
   16018:	str	r0, [fp, #-92]	; 0xffffffa4
   1601c:	ldr	r0, [r9, #16]
   16020:	sub	r1, r2, r1
   16024:	cmp	r1, r0
   16028:	bls	16034 <argp_help@@Base+0xb78>
   1602c:	mov	r0, r9
   16030:	bl	1a6d8 <argp_failure@@Base+0x3800>
   16034:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16038:	mov	r7, #0
   1603c:	ldr	r1, [r9, #12]
   16040:	ldr	r2, [r9, #4]
   16044:	mov	r8, r4
   16048:	str	r7, [r9, #4]
   1604c:	str	r0, [fp, #-72]	; 0xffffffb8
   16050:	mov	r0, #1
   16054:	str	r1, [fp, #-120]	; 0xffffff88
   16058:	str	r2, [fp, #-124]	; 0xffffff84
   1605c:	str	r0, [fp, #-76]	; 0xffffffb4
   16060:	sub	r0, fp, #48	; 0x30
   16064:	str	r0, [fp, #-80]	; 0xffffffb0
   16068:	str	r9, [fp, #-84]	; 0xffffffac
   1606c:	str	r5, [fp, #-88]	; 0xffffffa8
   16070:	ldrb	r0, [r4, #12]
   16074:	tst	r0, #8
   16078:	bne	160c0 <argp_help@@Base+0xc04>
   1607c:	ldr	r0, [r5, #4]
   16080:	cmp	r0, #0
   16084:	beq	160c0 <argp_help@@Base+0xc04>
   16088:	add	r1, r4, #12
   1608c:	ldr	r2, [r1, #-12]
   16090:	cmp	r2, #0
   16094:	bne	160b0 <argp_help@@Base+0xbf4>
   16098:	add	r1, r1, #24
   1609c:	subs	r0, r0, #1
   160a0:	beq	160c0 <argp_help@@Base+0xc04>
   160a4:	ldr	r2, [r1, #-12]
   160a8:	cmp	r2, #0
   160ac:	beq	16098 <argp_help@@Base+0xbdc>
   160b0:	ldrb	r2, [r1]
   160b4:	tst	r2, #2
   160b8:	bne	16098 <argp_help@@Base+0xbdc>
   160bc:	mov	r7, #1
   160c0:	ldr	r1, [r9, #24]
   160c4:	ldr	r2, [r9, #28]
   160c8:	ldr	r0, [r9, #16]
   160cc:	ldr	r4, [sl, #8]
   160d0:	sub	r1, r2, r1
   160d4:	cmp	r1, r0
   160d8:	bls	160e4 <argp_help@@Base+0xc28>
   160dc:	mov	r0, r9
   160e0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   160e4:	str	r4, [r9, #12]
   160e8:	mov	r4, r8
   160ec:	str	r5, [fp, #-112]	; 0xffffff90
   160f0:	ldr	r6, [r5, #4]
   160f4:	cmp	r6, #0
   160f8:	beq	163fc <argp_help@@Base+0xf40>
   160fc:	cmp	r7, #0
   16100:	beq	162a0 <argp_help@@Base+0xde4>
   16104:	add	r7, r4, #12
   16108:	ldr	r5, [r7]
   1610c:	tst	r5, #8
   16110:	bne	1611c <argp_help@@Base+0xc60>
   16114:	b	16134 <argp_help@@Base+0xc78>
   16118:	mov	r4, r8
   1611c:	add	r7, r7, #24
   16120:	subs	r6, r6, #1
   16124:	beq	163fc <argp_help@@Base+0xf40>
   16128:	ldr	r5, [r7]
   1612c:	tst	r5, #8
   16130:	bne	1611c <argp_help@@Base+0xc60>
   16134:	ldr	r4, [r7, #-8]
   16138:	sub	r0, r4, #1
   1613c:	cmp	r0, #254	; 0xfe
   16140:	bhi	16118 <argp_help@@Base+0xc5c>
   16144:	bl	11480 <__ctype_b_loc@plt>
   16148:	ldr	r0, [r0]
   1614c:	add	r0, r0, r4, lsl #1
   16150:	ldrb	r0, [r0, #1]
   16154:	tst	r0, #64	; 0x40
   16158:	bne	16170 <argp_help@@Base+0xcb4>
   1615c:	mov	r4, r8
   16160:	add	r7, r7, #24
   16164:	subs	r6, r6, #1
   16168:	bne	16128 <argp_help@@Base+0xc6c>
   1616c:	b	163fc <argp_help@@Base+0xf40>
   16170:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16174:	ldrb	r0, [r0]
   16178:	cmp	r4, r0
   1617c:	bne	16250 <argp_help@@Base+0xd94>
   16180:	tst	r5, #2
   16184:	mov	r4, r8
   16188:	bne	16284 <argp_help@@Base+0xdc8>
   1618c:	ldr	r0, [sl, #8]
   16190:	sub	r1, fp, #88	; 0x58
   16194:	bl	18b24 <argp_failure@@Base+0x1c4c>
   16198:	ldr	r0, [r9, #28]
   1619c:	ldr	r1, [r9, #32]
   161a0:	cmp	r0, r1
   161a4:	bcc	161c4 <argp_help@@Base+0xd08>
   161a8:	mov	r0, r9
   161ac:	mov	r1, #1
   161b0:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   161b4:	cmp	r0, #0
   161b8:	beq	161d8 <argp_help@@Base+0xd1c>
   161bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   161c0:	ldr	r0, [r0]
   161c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   161c8:	add	r1, r0, #1
   161cc:	str	r1, [r2]
   161d0:	mov	r1, #45	; 0x2d
   161d4:	strb	r1, [r0]
   161d8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   161dc:	ldr	r0, [r9, #28]
   161e0:	ldr	r1, [r9, #32]
   161e4:	ldrb	r5, [r2]
   161e8:	cmp	r0, r1
   161ec:	bcc	1620c <argp_help@@Base+0xd50>
   161f0:	mov	r0, r9
   161f4:	mov	r1, #1
   161f8:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   161fc:	cmp	r0, #0
   16200:	beq	1621c <argp_help@@Base+0xd60>
   16204:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16208:	ldr	r0, [r0]
   1620c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16210:	add	r1, r0, #1
   16214:	str	r1, [r2]
   16218:	strb	r5, [r0]
   1621c:	ldr	r0, [sl]
   16220:	ldr	r2, [r4, #8]
   16224:	cmp	r0, #0
   16228:	beq	16264 <argp_help@@Base+0xda8>
   1622c:	cmp	r2, #0
   16230:	beq	16284 <argp_help@@Base+0xdc8>
   16234:	ldrb	r0, [r4, #12]
   16238:	tst	r0, #1
   1623c:	bne	16274 <argp_help@@Base+0xdb8>
   16240:	movw	r1, #52875	; 0xce8b
   16244:	mov	r0, r9
   16248:	movt	r1, #1
   1624c:	b	16280 <argp_help@@Base+0xdc4>
   16250:	mov	r4, r8
   16254:	add	r7, r7, #24
   16258:	subs	r6, r6, #1
   1625c:	bne	16128 <argp_help@@Base+0xc6c>
   16260:	b	163fc <argp_help@@Base+0xf40>
   16264:	cmp	r2, #0
   16268:	movne	r0, #1
   1626c:	strne	r0, [fp, #-40]	; 0xffffffd8
   16270:	b	16284 <argp_help@@Base+0xdc8>
   16274:	movw	r1, #53371	; 0xd07b
   16278:	mov	r0, r9
   1627c:	movt	r1, #1
   16280:	bl	1ad40 <argp_failure@@Base+0x3e68>
   16284:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16288:	add	r0, r0, #1
   1628c:	str	r0, [fp, #-92]	; 0xffffffa4
   16290:	add	r7, r7, #24
   16294:	subs	r6, r6, #1
   16298:	bne	16128 <argp_help@@Base+0xc6c>
   1629c:	b	163fc <argp_help@@Base+0xf40>
   162a0:	add	r7, r4, #12
   162a4:	ldr	r5, [r7]
   162a8:	tst	r5, #8
   162ac:	bne	162bc <argp_help@@Base+0xe00>
   162b0:	b	162d4 <argp_help@@Base+0xe18>
   162b4:	movw	sl, #6256	; 0x1870
   162b8:	movt	sl, #3
   162bc:	add	r7, r7, #24
   162c0:	subs	r6, r6, #1
   162c4:	beq	163fc <argp_help@@Base+0xf40>
   162c8:	ldr	r5, [r7]
   162cc:	tst	r5, #8
   162d0:	bne	162bc <argp_help@@Base+0xe00>
   162d4:	ldr	sl, [r7, #-8]
   162d8:	sub	r0, sl, #1
   162dc:	cmp	r0, #254	; 0xfe
   162e0:	bhi	162b4 <argp_help@@Base+0xdf8>
   162e4:	bl	11480 <__ctype_b_loc@plt>
   162e8:	ldr	r0, [r0]
   162ec:	add	r0, r0, sl, lsl #1
   162f0:	ldrb	r0, [r0, #1]
   162f4:	tst	r0, #64	; 0x40
   162f8:	beq	162b4 <argp_help@@Base+0xdf8>
   162fc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16300:	ldrb	r0, [r0]
   16304:	cmp	sl, r0
   16308:	bne	162b4 <argp_help@@Base+0xdf8>
   1630c:	movw	sl, #6256	; 0x1870
   16310:	tst	r5, #2
   16314:	movt	sl, #3
   16318:	bne	163e4 <argp_help@@Base+0xf28>
   1631c:	ldr	r0, [sl, #8]
   16320:	sub	r1, fp, #88	; 0x58
   16324:	bl	18b24 <argp_failure@@Base+0x1c4c>
   16328:	ldr	r0, [r9, #28]
   1632c:	ldr	r1, [r9, #32]
   16330:	cmp	r0, r1
   16334:	bcc	16354 <argp_help@@Base+0xe98>
   16338:	mov	r0, r9
   1633c:	mov	r1, #1
   16340:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16344:	cmp	r0, #0
   16348:	beq	16368 <argp_help@@Base+0xeac>
   1634c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16350:	ldr	r0, [r0]
   16354:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16358:	add	r1, r0, #1
   1635c:	str	r1, [r2]
   16360:	mov	r1, #45	; 0x2d
   16364:	strb	r1, [r0]
   16368:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1636c:	ldr	r0, [r9, #28]
   16370:	ldr	r1, [r9, #32]
   16374:	ldrb	r5, [r2]
   16378:	cmp	r0, r1
   1637c:	bcc	1639c <argp_help@@Base+0xee0>
   16380:	mov	r0, r9
   16384:	mov	r1, #1
   16388:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   1638c:	cmp	r0, #0
   16390:	beq	163ac <argp_help@@Base+0xef0>
   16394:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16398:	ldr	r0, [r0]
   1639c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   163a0:	add	r1, r0, #1
   163a4:	str	r1, [r2]
   163a8:	strb	r5, [r0]
   163ac:	ldr	r2, [r4, #8]
   163b0:	cmp	r2, #0
   163b4:	beq	163e4 <argp_help@@Base+0xf28>
   163b8:	ldrb	r0, [r4, #12]
   163bc:	tst	r0, #1
   163c0:	bne	163d4 <argp_help@@Base+0xf18>
   163c4:	movw	r1, #52875	; 0xce8b
   163c8:	mov	r0, r9
   163cc:	movt	r1, #1
   163d0:	b	163e0 <argp_help@@Base+0xf24>
   163d4:	movw	r1, #53371	; 0xd07b
   163d8:	mov	r0, r9
   163dc:	movt	r1, #1
   163e0:	bl	1ad40 <argp_failure@@Base+0x3e68>
   163e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   163e8:	add	r0, r0, #1
   163ec:	str	r0, [fp, #-92]	; 0xffffffa4
   163f0:	add	r7, r7, #24
   163f4:	subs	r6, r6, #1
   163f8:	bne	162c8 <argp_help@@Base+0xe0c>
   163fc:	ldrb	r0, [r4, #12]
   16400:	tst	r0, #8
   16404:	bne	164d4 <argp_help@@Base+0x1018>
   16408:	ldr	r1, [r9, #24]
   1640c:	ldr	r2, [r9, #28]
   16410:	ldr	r0, [r9, #16]
   16414:	ldr	r4, [sl, #12]
   16418:	sub	r1, r2, r1
   1641c:	cmp	r1, r0
   16420:	bls	1642c <argp_help@@Base+0xf70>
   16424:	mov	r0, r9
   16428:	bl	1a6d8 <argp_failure@@Base+0x3800>
   1642c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16430:	str	r4, [r9, #12]
   16434:	mov	r4, r8
   16438:	ldr	r5, [r0, #4]
   1643c:	cmp	r5, #0
   16440:	beq	165bc <argp_help@@Base+0x1100>
   16444:	add	r6, r4, #12
   16448:	ldr	r0, [r6, #-12]
   1644c:	cmp	r0, #0
   16450:	bne	16480 <argp_help@@Base+0xfc4>
   16454:	b	16468 <argp_help@@Base+0xfac>
   16458:	movw	r1, #53381	; 0xd085
   1645c:	mov	r0, r9
   16460:	movt	r1, #1
   16464:	bl	1ad40 <argp_failure@@Base+0x3e68>
   16468:	add	r6, r6, #24
   1646c:	subs	r5, r5, #1
   16470:	beq	165bc <argp_help@@Base+0x1100>
   16474:	ldr	r0, [r6, #-12]
   16478:	cmp	r0, #0
   1647c:	beq	16468 <argp_help@@Base+0xfac>
   16480:	ldrb	r0, [r6]
   16484:	tst	r0, #2
   16488:	bne	16468 <argp_help@@Base+0xfac>
   1648c:	ldr	r0, [sl, #12]
   16490:	sub	r1, fp, #88	; 0x58
   16494:	bl	18b24 <argp_failure@@Base+0x1c4c>
   16498:	ldr	r2, [r6, #-12]
   1649c:	movw	r1, #53376	; 0xd080
   164a0:	mov	r0, r9
   164a4:	movt	r1, #1
   164a8:	bl	1ad40 <argp_failure@@Base+0x3e68>
   164ac:	ldr	r2, [r4, #8]
   164b0:	cmp	r2, #0
   164b4:	beq	16468 <argp_help@@Base+0xfac>
   164b8:	ldrb	r0, [r4, #12]
   164bc:	tst	r0, #1
   164c0:	beq	16458 <argp_help@@Base+0xf9c>
   164c4:	movw	r1, #53385	; 0xd089
   164c8:	mov	r0, r9
   164cc:	movt	r1, #1
   164d0:	b	16464 <argp_help@@Base+0xfa8>
   164d4:	ldr	r1, [r9, #24]
   164d8:	ldr	r2, [r9, #28]
   164dc:	ldr	r0, [r9, #16]
   164e0:	ldr	r4, [sl, #16]
   164e4:	sub	r1, r2, r1
   164e8:	cmp	r1, r0
   164ec:	bls	164f8 <argp_help@@Base+0x103c>
   164f0:	mov	r0, r9
   164f4:	bl	1a6d8 <argp_failure@@Base+0x3800>
   164f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   164fc:	str	r4, [r9, #12]
   16500:	mov	r4, r8
   16504:	ldr	r6, [r0, #4]
   16508:	cmp	r6, #0
   1650c:	beq	165bc <argp_help@@Base+0x1100>
   16510:	add	r8, r4, #12
   16514:	ldr	r0, [r8, #-12]
   16518:	cmp	r0, #0
   1651c:	bne	16558 <argp_help@@Base+0x109c>
   16520:	b	16540 <argp_help@@Base+0x1084>
   16524:	mov	r1, r5
   16528:	mov	r2, r7
   1652c:	bl	113a8 <memcpy@plt>
   16530:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16534:	ldr	r0, [r1]
   16538:	add	r0, r0, r7
   1653c:	str	r0, [r1]
   16540:	add	r8, r8, #24
   16544:	subs	r6, r6, #1
   16548:	beq	165bc <argp_help@@Base+0x1100>
   1654c:	ldr	r0, [r8, #-12]
   16550:	cmp	r0, #0
   16554:	beq	16540 <argp_help@@Base+0x1084>
   16558:	ldrb	r0, [r8]
   1655c:	tst	r0, #2
   16560:	bne	16540 <argp_help@@Base+0x1084>
   16564:	ldr	r0, [sl, #16]
   16568:	sub	r1, fp, #88	; 0x58
   1656c:	bl	18b24 <argp_failure@@Base+0x1c4c>
   16570:	ldr	r5, [r8, #-12]
   16574:	mov	r0, r5
   16578:	bl	114a4 <strlen@plt>
   1657c:	cmp	r0, #0
   16580:	beq	16540 <argp_help@@Base+0x1084>
   16584:	mov	r7, r0
   16588:	ldr	r0, [r9, #28]
   1658c:	ldr	r1, [r9, #32]
   16590:	add	r2, r0, r7
   16594:	cmp	r2, r1
   16598:	bls	16524 <argp_help@@Base+0x1068>
   1659c:	mov	r0, r9
   165a0:	mov	r1, r7
   165a4:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   165a8:	cmp	r0, #0
   165ac:	beq	16540 <argp_help@@Base+0x1084>
   165b0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   165b4:	ldr	r0, [r0]
   165b8:	b	16524 <argp_help@@Base+0x1068>
   165bc:	ldr	r1, [r9, #24]
   165c0:	ldr	r2, [r9, #28]
   165c4:	ldr	r0, [r9, #16]
   165c8:	sub	r1, r2, r1
   165cc:	cmp	r1, r0
   165d0:	bls	165dc <argp_help@@Base+0x1120>
   165d4:	mov	r0, r9
   165d8:	bl	1a6d8 <argp_failure@@Base+0x3800>
   165dc:	mov	r0, #0
   165e0:	ldr	r5, [fp, #-112]	; 0xffffff90
   165e4:	str	r0, [r9, #4]
   165e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   165ec:	cmp	r0, #0
   165f0:	beq	1664c <argp_help@@Base+0x1190>
   165f4:	ldrb	r0, [r4, #12]
   165f8:	mov	r6, r4
   165fc:	tst	r0, #8
   16600:	bne	1662c <argp_help@@Base+0x1170>
   16604:	ldr	r4, [r6, #4]
   16608:	sub	r0, r4, #1
   1660c:	cmp	r0, #254	; 0xfe
   16610:	bhi	1662c <argp_help@@Base+0x1170>
   16614:	bl	11480 <__ctype_b_loc@plt>
   16618:	ldr	r0, [r0]
   1661c:	add	r0, r0, r4, lsl #1
   16620:	ldrb	r0, [r0, #1]
   16624:	tst	r0, #64	; 0x40
   16628:	bne	16960 <argp_help@@Base+0x14a4>
   1662c:	ldr	r0, [r6]
   16630:	cmp	r0, #0
   16634:	bne	16960 <argp_help@@Base+0x14a4>
   16638:	ldr	r1, [r5, #20]
   1663c:	ldr	r0, [r6, #16]
   16640:	sub	r2, fp, #88	; 0x58
   16644:	bl	18d30 <argp_failure@@Base+0x1e58>
   16648:	b	1695c <argp_help@@Base+0x14a0>
   1664c:	ldr	r6, [r5, #20]
   16650:	ldr	r5, [r4, #16]
   16654:	cmp	r6, #0
   16658:	mov	r8, r5
   1665c:	beq	16698 <argp_help@@Base+0x11dc>
   16660:	ldr	r0, [r6, #20]
   16664:	mov	r8, r5
   16668:	cmp	r0, #0
   1666c:	beq	16698 <argp_help@@Base+0x11dc>
   16670:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16674:	ldr	r7, [r4, #4]
   16678:	mov	r0, r6
   1667c:	bl	13c20 <argp_parse@@Base+0xd2c>
   16680:	ldr	r3, [r6, #20]
   16684:	mov	r2, r0
   16688:	mov	r0, r7
   1668c:	mov	r1, r5
   16690:	blx	r3
   16694:	mov	r8, r0
   16698:	cmp	r8, #0
   1669c:	beq	168f0 <argp_help@@Base+0x1434>
   166a0:	ldrb	r0, [r8]
   166a4:	cmp	r0, #0
   166a8:	beq	168e0 <argp_help@@Base+0x1424>
   166ac:	ldr	r1, [r9, #24]
   166b0:	ldr	r2, [r9, #28]
   166b4:	ldr	r0, [r9, #16]
   166b8:	str	r5, [fp, #-92]	; 0xffffffa4
   166bc:	sub	r1, r2, r1
   166c0:	cmp	r1, r0
   166c4:	bls	166e0 <argp_help@@Base+0x1224>
   166c8:	mov	r0, r9
   166cc:	bl	1a6d8 <argp_failure@@Base+0x3800>
   166d0:	ldr	r1, [r9, #24]
   166d4:	ldr	r2, [r9, #28]
   166d8:	ldr	r0, [r9, #16]
   166dc:	sub	r1, r2, r1
   166e0:	ldr	r6, [sl, #20]
   166e4:	ldr	r4, [r9, #20]
   166e8:	cmp	r1, r0
   166ec:	mov	r5, r6
   166f0:	bls	16710 <argp_help@@Base+0x1254>
   166f4:	mov	r0, r9
   166f8:	bl	1a6d8 <argp_failure@@Base+0x3800>
   166fc:	ldr	r1, [r9, #24]
   16700:	ldr	r2, [r9, #28]
   16704:	ldr	r5, [sl, #20]
   16708:	ldr	r0, [r9, #16]
   1670c:	sub	r1, r2, r1
   16710:	bic	r7, r4, r4, asr #31
   16714:	str	r6, [r9, #4]
   16718:	cmp	r1, r0
   1671c:	mov	r6, r5
   16720:	bls	16730 <argp_help@@Base+0x1274>
   16724:	mov	r0, r9
   16728:	bl	1a6d8 <argp_failure@@Base+0x3800>
   1672c:	ldr	r6, [sl, #20]
   16730:	add	r0, r6, #3
   16734:	str	r5, [r9, #12]
   16738:	cmp	r7, r0
   1673c:	bls	16798 <argp_help@@Base+0x12dc>
   16740:	ldr	r0, [r9, #28]
   16744:	ldr	r1, [r9, #32]
   16748:	ldr	r5, [fp, #-92]	; 0xffffffa4
   1674c:	cmp	r0, r1
   16750:	bcc	16770 <argp_help@@Base+0x12b4>
   16754:	mov	r0, r9
   16758:	mov	r1, #1
   1675c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16760:	cmp	r0, #0
   16764:	beq	16880 <argp_help@@Base+0x13c4>
   16768:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1676c:	ldr	r0, [r0]
   16770:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16774:	add	r1, r0, #1
   16778:	str	r1, [r2]
   1677c:	mov	r1, #10
   16780:	strb	r1, [r0]
   16784:	mov	r0, r8
   16788:	bl	114a4 <strlen@plt>
   1678c:	cmp	r0, #0
   16790:	bne	16890 <argp_help@@Base+0x13d4>
   16794:	b	168e0 <argp_help@@Base+0x1424>
   16798:	cmp	r7, r6
   1679c:	bcs	1682c <argp_help@@Base+0x1370>
   167a0:	ldr	r1, [r9, #24]
   167a4:	ldr	r2, [r9, #28]
   167a8:	ldr	r0, [r9, #16]
   167ac:	ldr	r5, [fp, #-92]	; 0xffffffa4
   167b0:	sub	r1, r2, r1
   167b4:	cmp	r1, r0
   167b8:	bls	167c4 <argp_help@@Base+0x1308>
   167bc:	mov	r0, r9
   167c0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   167c4:	ldr	r0, [r9, #20]
   167c8:	cmp	r0, #0
   167cc:	subgt	r6, r6, r0
   167d0:	cmp	r6, #1
   167d4:	bge	16800 <argp_help@@Base+0x1344>
   167d8:	b	16880 <argp_help@@Base+0x13c4>
   167dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   167e0:	ldr	r0, [r0]
   167e4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   167e8:	add	r1, r0, #1
   167ec:	str	r1, [r2]
   167f0:	mov	r1, #32
   167f4:	strb	r1, [r0]
   167f8:	cmp	r6, #0
   167fc:	ble	16880 <argp_help@@Base+0x13c4>
   16800:	ldr	r0, [r9, #28]
   16804:	ldr	r1, [r9, #32]
   16808:	sub	r6, r6, #1
   1680c:	cmp	r0, r1
   16810:	bcc	167e4 <argp_help@@Base+0x1328>
   16814:	mov	r0, r9
   16818:	mov	r1, #1
   1681c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16820:	cmp	r0, #0
   16824:	bne	167dc <argp_help@@Base+0x1320>
   16828:	b	167f8 <argp_help@@Base+0x133c>
   1682c:	ldr	r0, [r9, #28]
   16830:	ldr	r1, [r9, #32]
   16834:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16838:	add	r2, r0, #3
   1683c:	cmp	r2, r1
   16840:	bls	16860 <argp_help@@Base+0x13a4>
   16844:	mov	r0, r9
   16848:	mov	r1, #3
   1684c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16850:	cmp	r0, #0
   16854:	beq	16880 <argp_help@@Base+0x13c4>
   16858:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1685c:	ldr	r0, [r0]
   16860:	mov	r1, #32
   16864:	strb	r1, [r0, #2]
   16868:	movw	r1, #8224	; 0x2020
   1686c:	strh	r1, [r0]
   16870:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16874:	ldr	r0, [r1]
   16878:	add	r0, r0, #3
   1687c:	str	r0, [r1]
   16880:	mov	r0, r8
   16884:	bl	114a4 <strlen@plt>
   16888:	cmp	r0, #0
   1688c:	beq	168e0 <argp_help@@Base+0x1424>
   16890:	mov	r6, r0
   16894:	ldr	r0, [r9, #28]
   16898:	ldr	r1, [r9, #32]
   1689c:	add	r2, r0, r6
   168a0:	cmp	r2, r1
   168a4:	bls	168c4 <argp_help@@Base+0x1408>
   168a8:	mov	r0, r9
   168ac:	mov	r1, r6
   168b0:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   168b4:	cmp	r0, #0
   168b8:	beq	168e0 <argp_help@@Base+0x1424>
   168bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   168c0:	ldr	r0, [r0]
   168c4:	mov	r1, r8
   168c8:	mov	r2, r6
   168cc:	bl	113a8 <memcpy@plt>
   168d0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   168d4:	ldr	r0, [r1]
   168d8:	add	r0, r0, r6
   168dc:	str	r0, [r1]
   168e0:	cmp	r8, r5
   168e4:	beq	168f0 <argp_help@@Base+0x1434>
   168e8:	mov	r0, r8
   168ec:	bl	142d0 <argp_parse@@Base+0x13dc>
   168f0:	ldr	r2, [r9, #24]
   168f4:	ldr	r0, [r9, #28]
   168f8:	ldr	r1, [r9, #16]
   168fc:	sub	r2, r0, r2
   16900:	cmp	r2, r1
   16904:	bls	16914 <argp_help@@Base+0x1458>
   16908:	mov	r0, r9
   1690c:	bl	1a6d8 <argp_failure@@Base+0x3800>
   16910:	ldr	r0, [r9, #28]
   16914:	mov	r1, #0
   16918:	ldr	r5, [fp, #-112]	; 0xffffff90
   1691c:	str	r1, [r9, #4]
   16920:	ldr	r1, [r9, #32]
   16924:	cmp	r0, r1
   16928:	bcc	16948 <argp_help@@Base+0x148c>
   1692c:	mov	r0, r9
   16930:	mov	r1, #1
   16934:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16938:	cmp	r0, #0
   1693c:	beq	1695c <argp_help@@Base+0x14a0>
   16940:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16944:	ldr	r0, [r0]
   16948:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1694c:	add	r1, r0, #1
   16950:	str	r1, [r2]
   16954:	mov	r1, #10
   16958:	strb	r1, [r0]
   1695c:	str	r5, [fp, #-48]	; 0xffffffd0
   16960:	ldr	r1, [r9, #24]
   16964:	ldr	r2, [r9, #28]
   16968:	ldr	r0, [r9, #16]
   1696c:	sub	r1, r2, r1
   16970:	cmp	r1, r0
   16974:	bls	16990 <argp_help@@Base+0x14d4>
   16978:	mov	r0, r9
   1697c:	bl	1a6d8 <argp_failure@@Base+0x3800>
   16980:	ldr	r1, [r9, #24]
   16984:	ldr	r2, [r9, #28]
   16988:	ldr	r0, [r9, #16]
   1698c:	sub	r1, r2, r1
   16990:	ldr	r2, [fp, #-124]	; 0xffffff84
   16994:	cmp	r1, r0
   16998:	str	r2, [r9, #4]
   1699c:	bls	15fec <argp_help@@Base+0xb30>
   169a0:	mov	r0, r9
   169a4:	bl	1a6d8 <argp_failure@@Base+0x3800>
   169a8:	b	15fec <argp_help@@Base+0xb30>
   169ac:	mov	r0, r5
   169b0:	sub	sp, fp, #28
   169b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169b8:	b	113f0 <funlockfile@plt>
   169bc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   169c0:	movw	r1, #52676	; 0xcdc4
   169c4:	mov	r0, r9
   169c8:	movt	r1, #1
   169cc:	mov	r3, r2
   169d0:	bl	1ad40 <argp_failure@@Base+0x3e68>
   169d4:	mov	r5, #1
   169d8:	tst	r6, #8
   169dc:	bne	15f68 <argp_help@@Base+0xaac>
   169e0:	tst	r6, #32
   169e4:	beq	16a10 <argp_help@@Base+0x1554>
   169e8:	sub	sp, sp, #8
   169ec:	mov	r0, #0
   169f0:	mov	r2, #1
   169f4:	mov	r3, r5
   169f8:	stm	sp, {r0, r9}
   169fc:	ldr	r0, [fp, #-104]	; 0xffffff98
   16a00:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16a04:	bl	1803c <argp_failure@@Base+0x1164>
   16a08:	add	sp, sp, #8
   16a0c:	orr	r5, r0, r5
   16a10:	tst	r6, #64	; 0x40
   16a14:	beq	16a80 <argp_help@@Base+0x15c4>
   16a18:	movw	r6, #6460	; 0x193c
   16a1c:	movt	r6, #3
   16a20:	ldr	r0, [r6]
   16a24:	cmp	r0, #0
   16a28:	beq	16a80 <argp_help@@Base+0x15c4>
   16a2c:	cmp	r5, #0
   16a30:	beq	16a6c <argp_help@@Base+0x15b0>
   16a34:	ldr	r0, [r9, #28]
   16a38:	ldr	r1, [r9, #32]
   16a3c:	cmp	r0, r1
   16a40:	bcc	16a5c <argp_help@@Base+0x15a0>
   16a44:	mov	r0, r9
   16a48:	mov	r1, #1
   16a4c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16a50:	cmp	r0, #0
   16a54:	beq	16a6c <argp_help@@Base+0x15b0>
   16a58:	ldr	r0, [r9, #28]
   16a5c:	add	r1, r0, #1
   16a60:	str	r1, [r9, #28]
   16a64:	mov	r1, #10
   16a68:	strb	r1, [r0]
   16a6c:	ldr	r2, [r6]
   16a70:	movw	r1, #52731	; 0xcdfb
   16a74:	mov	r0, r9
   16a78:	movt	r1, #1
   16a7c:	bl	1ad40 <argp_failure@@Base+0x3e68>
   16a80:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16a84:	bl	113f0 <funlockfile@plt>
   16a88:	ldr	r5, [fp, #-108]	; 0xffffff94
   16a8c:	cmp	r5, #0
   16a90:	beq	16ad8 <argp_help@@Base+0x161c>
   16a94:	ldr	r0, [r5, #12]
   16a98:	cmp	r0, #0
   16a9c:	beq	16ab4 <argp_help@@Base+0x15f8>
   16aa0:	ldr	r4, [r0, #24]
   16aa4:	bl	142d0 <argp_parse@@Base+0x13dc>
   16aa8:	cmp	r4, #0
   16aac:	mov	r0, r4
   16ab0:	bne	16aa0 <argp_help@@Base+0x15e4>
   16ab4:	ldr	r0, [r5, #4]
   16ab8:	cmp	r0, #0
   16abc:	beq	16ad0 <argp_help@@Base+0x1614>
   16ac0:	ldr	r0, [r5]
   16ac4:	bl	142d0 <argp_parse@@Base+0x13dc>
   16ac8:	ldr	r0, [r5, #8]
   16acc:	bl	142d0 <argp_parse@@Base+0x13dc>
   16ad0:	mov	r0, r5
   16ad4:	bl	142d0 <argp_parse@@Base+0x13dc>
   16ad8:	mov	r0, r9
   16adc:	bl	1a694 <argp_failure@@Base+0x37bc>
   16ae0:	sub	sp, fp, #28
   16ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16aec:	cmp	r0, #0
   16af0:	ldrne	r0, [sl, #4]
   16af4:	cmpne	r0, #0
   16af8:	bne	16b34 <argp_help@@Base+0x1678>
   16afc:	ldr	r6, [fp, #-128]	; 0xffffff80
   16b00:	mov	r5, #1
   16b04:	tst	r6, #32
   16b08:	bne	169e8 <argp_help@@Base+0x152c>
   16b0c:	b	16a10 <argp_help@@Base+0x1554>
   16b10:	ldr	r6, [fp, #-128]	; 0xffffff80
   16b14:	movw	sl, #6256	; 0x1870
   16b18:	movt	sl, #3
   16b1c:	tst	r6, #3
   16b20:	bne	15cfc <argp_help@@Base+0x840>
   16b24:	mov	r5, #0
   16b28:	tst	r6, #16
   16b2c:	bne	15f30 <argp_help@@Base+0xa74>
   16b30:	b	15f58 <argp_help@@Base+0xa9c>
   16b34:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16b38:	movw	r5, #53255	; 0xd007
   16b3c:	movt	r5, #1
   16b40:	cmp	r0, #0
   16b44:	beq	16b94 <argp_help@@Base+0x16d8>
   16b48:	ldr	r6, [r0]
   16b4c:	cmp	r6, #0
   16b50:	beq	16b94 <argp_help@@Base+0x16d8>
   16b54:	ldr	r0, [r6, #20]
   16b58:	cmp	r0, #0
   16b5c:	beq	16b94 <argp_help@@Base+0x16d8>
   16b60:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16b64:	mov	r0, r6
   16b68:	bl	13c20 <argp_parse@@Base+0xd2c>
   16b6c:	ldr	r3, [r6, #20]
   16b70:	movw	r1, #53255	; 0xd007
   16b74:	mov	r2, r0
   16b78:	movw	r0, #5
   16b7c:	movt	r0, #512	; 0x200
   16b80:	movt	r1, #1
   16b84:	blx	r3
   16b88:	mov	r5, r0
   16b8c:	cmp	r0, #0
   16b90:	beq	16afc <argp_help@@Base+0x1640>
   16b94:	ldrb	r0, [r5]
   16b98:	cmp	r0, #0
   16b9c:	beq	16c80 <argp_help@@Base+0x17c4>
   16ba0:	ldr	r0, [r9, #28]
   16ba4:	ldr	r1, [r9, #32]
   16ba8:	cmp	r0, r1
   16bac:	bcc	16bcc <argp_help@@Base+0x1710>
   16bb0:	mov	r0, r9
   16bb4:	mov	r1, #1
   16bb8:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16bbc:	cmp	r0, #0
   16bc0:	beq	16be0 <argp_help@@Base+0x1724>
   16bc4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16bc8:	ldr	r0, [r0]
   16bcc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16bd0:	add	r1, r0, #1
   16bd4:	str	r1, [r2]
   16bd8:	mov	r1, #10
   16bdc:	strb	r1, [r0]
   16be0:	mov	r0, r5
   16be4:	bl	114a4 <strlen@plt>
   16be8:	cmp	r0, #0
   16bec:	beq	16c40 <argp_help@@Base+0x1784>
   16bf0:	mov	r6, r0
   16bf4:	ldr	r0, [r9, #28]
   16bf8:	ldr	r1, [r9, #32]
   16bfc:	add	r2, r0, r6
   16c00:	cmp	r2, r1
   16c04:	bls	16c24 <argp_help@@Base+0x1768>
   16c08:	mov	r0, r9
   16c0c:	mov	r1, r6
   16c10:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16c14:	cmp	r0, #0
   16c18:	beq	16c40 <argp_help@@Base+0x1784>
   16c1c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16c20:	ldr	r0, [r0]
   16c24:	mov	r1, r5
   16c28:	mov	r2, r6
   16c2c:	bl	113a8 <memcpy@plt>
   16c30:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16c34:	ldr	r0, [r1]
   16c38:	add	r0, r0, r6
   16c3c:	str	r0, [r1]
   16c40:	ldr	r0, [r9, #28]
   16c44:	ldr	r1, [r9, #32]
   16c48:	cmp	r0, r1
   16c4c:	bcc	16c6c <argp_help@@Base+0x17b0>
   16c50:	mov	r0, r9
   16c54:	mov	r1, #1
   16c58:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   16c5c:	cmp	r0, #0
   16c60:	beq	16c80 <argp_help@@Base+0x17c4>
   16c64:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16c68:	ldr	r0, [r0]
   16c6c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16c70:	add	r1, r0, #1
   16c74:	str	r1, [r2]
   16c78:	mov	r1, #10
   16c7c:	strb	r1, [r0]
   16c80:	movw	r0, #53255	; 0xd007
   16c84:	movt	r0, #1
   16c88:	cmp	r5, r0
   16c8c:	beq	16afc <argp_help@@Base+0x1640>
   16c90:	mov	r0, r5
   16c94:	bl	142d0 <argp_parse@@Base+0x13dc>
   16c98:	ldr	r6, [fp, #-128]	; 0xffffff80
   16c9c:	mov	r5, #1
   16ca0:	tst	r6, #32
   16ca4:	bne	169e8 <argp_help@@Base+0x152c>
   16ca8:	b	16a10 <argp_help@@Base+0x1554>
   16cac:	add	r2, r0, #112	; 0x70
   16cb0:	b	15ab4 <argp_help@@Base+0x5f8>

00016cb4 <argp_state_help@@Base>:
   16cb4:	push	{r4, r5, fp, lr}
   16cb8:	add	fp, sp, #8
   16cbc:	sub	sp, sp, #8
   16cc0:	mov	r4, r2
   16cc4:	mov	r2, r1
   16cc8:	cmp	r0, #0
   16ccc:	beq	16d18 <argp_state_help@@Base+0x64>
   16cd0:	cmp	r2, #0
   16cd4:	beq	16d50 <argp_state_help@@Base+0x9c>
   16cd8:	ldr	r1, [r0, #16]
   16cdc:	mov	r5, r0
   16ce0:	ands	r0, r1, #2
   16ce4:	bne	16d50 <argp_state_help@@Base+0x9c>
   16ce8:	ldr	r3, [r5, #40]	; 0x28
   16cec:	ldr	r0, [r5]
   16cf0:	and	r1, r1, #64	; 0x40
   16cf4:	orr	r4, r4, r1, lsl #1
   16cf8:	mov	r1, r5
   16cfc:	str	r3, [sp]
   16d00:	mov	r3, r4
   16d04:	bl	154e8 <argp_help@@Base+0x2c>
   16d08:	ldrb	r0, [r5, #16]
   16d0c:	tst	r0, #32
   16d10:	beq	16d40 <argp_state_help@@Base+0x8c>
   16d14:	b	16d50 <argp_state_help@@Base+0x9c>
   16d18:	cmp	r2, #0
   16d1c:	beq	16d50 <argp_state_help@@Base+0x9c>
   16d20:	movw	r0, #6320	; 0x18b0
   16d24:	mov	r1, #0
   16d28:	mov	r3, r4
   16d2c:	movt	r0, #3
   16d30:	ldr	r0, [r0]
   16d34:	str	r0, [sp]
   16d38:	mov	r0, #0
   16d3c:	bl	154e8 <argp_help@@Base+0x2c>
   16d40:	tst	r4, #256	; 0x100
   16d44:	bne	16d58 <argp_state_help@@Base+0xa4>
   16d48:	tst	r4, #512	; 0x200
   16d4c:	bne	16d68 <argp_state_help@@Base+0xb4>
   16d50:	sub	sp, fp, #8
   16d54:	pop	{r4, r5, fp, pc}
   16d58:	movw	r0, #6312	; 0x18a8
   16d5c:	movt	r0, #3
   16d60:	ldr	r0, [r0]
   16d64:	bl	1148c <exit@plt>
   16d68:	mov	r0, #0
   16d6c:	bl	1148c <exit@plt>

00016d70 <argp_error@@Base>:
   16d70:	sub	sp, sp, #8
   16d74:	push	{r4, r5, r6, sl, fp, lr}
   16d78:	add	fp, sp, #16
   16d7c:	sub	sp, sp, #8
   16d80:	mov	r6, r1
   16d84:	mov	r4, r0
   16d88:	cmp	r0, #0
   16d8c:	str	r2, [fp, #8]
   16d90:	str	r3, [fp, #12]
   16d94:	beq	16dc4 <argp_error@@Base+0x54>
   16d98:	ldrb	r0, [r4, #16]
   16d9c:	tst	r0, #2
   16da0:	bne	16db4 <argp_error@@Base+0x44>
   16da4:	add	r0, r4, #44	; 0x2c
   16da8:	ldr	r5, [r0]
   16dac:	cmp	r5, #0
   16db0:	bne	16dd8 <argp_error@@Base+0x68>
   16db4:	sub	sp, fp, #16
   16db8:	pop	{r4, r5, r6, sl, fp, lr}
   16dbc:	add	sp, sp, #8
   16dc0:	bx	lr
   16dc4:	movw	r0, #6328	; 0x18b8
   16dc8:	movt	r0, #3
   16dcc:	ldr	r5, [r0]
   16dd0:	cmp	r5, #0
   16dd4:	beq	16db4 <argp_error@@Base+0x44>
   16dd8:	mov	r0, r5
   16ddc:	bl	11558 <flockfile@plt>
   16de0:	add	r0, fp, #8
   16de4:	cmp	r4, #0
   16de8:	mov	r1, r5
   16dec:	str	r0, [sp, #4]
   16df0:	movw	r0, #6320	; 0x18b0
   16df4:	movt	r0, #3
   16df8:	addne	r0, r4, #40	; 0x28
   16dfc:	ldr	r0, [r0]
   16e00:	bl	11318 <fputs_unlocked@plt>
   16e04:	ldr	r0, [r5, #20]
   16e08:	ldr	r1, [r5, #24]
   16e0c:	cmp	r0, r1
   16e10:	bcs	16e9c <argp_error@@Base+0x12c>
   16e14:	add	r1, r0, #1
   16e18:	str	r1, [r5, #20]
   16e1c:	mov	r1, #58	; 0x3a
   16e20:	strb	r1, [r0]
   16e24:	ldr	r0, [r5, #20]
   16e28:	ldr	r1, [r5, #24]
   16e2c:	cmp	r0, r1
   16e30:	bcs	16eb8 <argp_error@@Base+0x148>
   16e34:	add	r1, r0, #1
   16e38:	str	r1, [r5, #20]
   16e3c:	mov	r1, #32
   16e40:	strb	r1, [r0]
   16e44:	ldr	r2, [sp, #4]
   16e48:	mov	r0, r5
   16e4c:	mov	r1, r6
   16e50:	bl	11528 <vfprintf@plt>
   16e54:	ldr	r0, [r5, #20]
   16e58:	ldr	r1, [r5, #24]
   16e5c:	cmp	r0, r1
   16e60:	bcs	16ec8 <argp_error@@Base+0x158>
   16e64:	add	r1, r0, #1
   16e68:	str	r1, [r5, #20]
   16e6c:	mov	r1, #10
   16e70:	strb	r1, [r0]
   16e74:	mov	r0, r4
   16e78:	mov	r1, r5
   16e7c:	mov	r2, #260	; 0x104
   16e80:	bl	16cb4 <argp_state_help@@Base>
   16e84:	mov	r0, r5
   16e88:	bl	113f0 <funlockfile@plt>
   16e8c:	sub	sp, fp, #16
   16e90:	pop	{r4, r5, r6, sl, fp, lr}
   16e94:	add	sp, sp, #8
   16e98:	bx	lr
   16e9c:	mov	r0, r5
   16ea0:	mov	r1, #58	; 0x3a
   16ea4:	bl	11510 <__overflow@plt>
   16ea8:	ldr	r0, [r5, #20]
   16eac:	ldr	r1, [r5, #24]
   16eb0:	cmp	r0, r1
   16eb4:	bcc	16e34 <argp_error@@Base+0xc4>
   16eb8:	mov	r0, r5
   16ebc:	mov	r1, #32
   16ec0:	bl	11510 <__overflow@plt>
   16ec4:	b	16e44 <argp_error@@Base+0xd4>
   16ec8:	mov	r0, r5
   16ecc:	mov	r1, #10
   16ed0:	bl	11510 <__overflow@plt>
   16ed4:	b	16e74 <argp_error@@Base+0x104>

00016ed8 <argp_failure@@Base>:
   16ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16edc:	add	fp, sp, #24
   16ee0:	sub	sp, sp, #200	; 0xc8
   16ee4:	mov	r4, r3
   16ee8:	mov	r7, r2
   16eec:	mov	r8, r1
   16ef0:	mov	r5, r0
   16ef4:	cmp	r0, #0
   16ef8:	beq	16f1c <argp_failure@@Base+0x44>
   16efc:	ldrb	r0, [r5, #16]
   16f00:	tst	r0, #2
   16f04:	bne	1709c <argp_failure@@Base+0x1c4>
   16f08:	add	r0, r5, #44	; 0x2c
   16f0c:	ldr	r6, [r0]
   16f10:	cmp	r6, #0
   16f14:	bne	16f30 <argp_failure@@Base+0x58>
   16f18:	b	1709c <argp_failure@@Base+0x1c4>
   16f1c:	movw	r0, #6328	; 0x18b8
   16f20:	movt	r0, #3
   16f24:	ldr	r6, [r0]
   16f28:	cmp	r6, #0
   16f2c:	beq	1709c <argp_failure@@Base+0x1c4>
   16f30:	mov	r0, r6
   16f34:	bl	11558 <flockfile@plt>
   16f38:	movw	r0, #6320	; 0x18b0
   16f3c:	cmp	r5, #0
   16f40:	mov	r1, r6
   16f44:	movt	r0, #3
   16f48:	addne	r0, r5, #40	; 0x28
   16f4c:	ldr	r0, [r0]
   16f50:	bl	11318 <fputs_unlocked@plt>
   16f54:	cmp	r4, #0
   16f58:	beq	16fb4 <argp_failure@@Base+0xdc>
   16f5c:	add	r0, fp, #8
   16f60:	str	r0, [sp]
   16f64:	ldr	r0, [r6, #20]
   16f68:	ldr	r1, [r6, #24]
   16f6c:	cmp	r0, r1
   16f70:	bcs	170a4 <argp_failure@@Base+0x1cc>
   16f74:	add	r1, r0, #1
   16f78:	str	r1, [r6, #20]
   16f7c:	mov	r1, #58	; 0x3a
   16f80:	strb	r1, [r0]
   16f84:	ldr	r0, [r6, #20]
   16f88:	ldr	r1, [r6, #24]
   16f8c:	cmp	r0, r1
   16f90:	bcs	170c0 <argp_failure@@Base+0x1e8>
   16f94:	add	r1, r0, #1
   16f98:	str	r1, [r6, #20]
   16f9c:	mov	r1, #32
   16fa0:	strb	r1, [r0]
   16fa4:	ldr	r2, [sp]
   16fa8:	mov	r0, r6
   16fac:	mov	r1, r4
   16fb0:	bl	11528 <vfprintf@plt>
   16fb4:	cmp	r7, #0
   16fb8:	beq	17038 <argp_failure@@Base+0x160>
   16fbc:	ldr	r0, [r6, #20]
   16fc0:	ldr	r1, [r6, #24]
   16fc4:	cmp	r0, r1
   16fc8:	bcs	170d0 <argp_failure@@Base+0x1f8>
   16fcc:	add	r1, r0, #1
   16fd0:	str	r1, [r6, #20]
   16fd4:	mov	r1, #58	; 0x3a
   16fd8:	strb	r1, [r0]
   16fdc:	ldr	r0, [r6, #20]
   16fe0:	ldr	r1, [r6, #24]
   16fe4:	cmp	r0, r1
   16fe8:	bcs	170ec <argp_failure@@Base+0x214>
   16fec:	add	r1, r0, #1
   16ff0:	str	r1, [r6, #20]
   16ff4:	mov	r1, #32
   16ff8:	strb	r1, [r0]
   16ffc:	mov	r1, sp
   17000:	mov	r0, r7
   17004:	mov	r2, #200	; 0xc8
   17008:	bl	114e0 <strerror_r@plt>
   1700c:	cmp	r0, #0
   17010:	bne	17030 <argp_failure@@Base+0x158>
   17014:	mov	r0, r7
   17018:	bl	1145c <strerror@plt>
   1701c:	mov	r1, r0
   17020:	movw	r0, #52635	; 0xcd9b
   17024:	cmp	r1, #0
   17028:	movt	r0, #1
   1702c:	movne	r0, r1
   17030:	mov	r1, r6
   17034:	bl	11318 <fputs_unlocked@plt>
   17038:	ldr	r0, [r6, #20]
   1703c:	ldr	r1, [r6, #24]
   17040:	cmp	r0, r1
   17044:	bcs	17080 <argp_failure@@Base+0x1a8>
   17048:	add	r1, r0, #1
   1704c:	str	r1, [r6, #20]
   17050:	mov	r1, #10
   17054:	strb	r1, [r0]
   17058:	mov	r0, r6
   1705c:	bl	113f0 <funlockfile@plt>
   17060:	cmp	r8, #0
   17064:	beq	1709c <argp_failure@@Base+0x1c4>
   17068:	cmp	r5, #0
   1706c:	ldrbne	r0, [r5, #16]
   17070:	tstne	r0, #32
   17074:	bne	1709c <argp_failure@@Base+0x1c4>
   17078:	mov	r0, r8
   1707c:	bl	1148c <exit@plt>
   17080:	mov	r0, r6
   17084:	mov	r1, #10
   17088:	bl	11510 <__overflow@plt>
   1708c:	mov	r0, r6
   17090:	bl	113f0 <funlockfile@plt>
   17094:	cmp	r8, #0
   17098:	bne	17068 <argp_failure@@Base+0x190>
   1709c:	sub	sp, fp, #24
   170a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   170a4:	mov	r0, r6
   170a8:	mov	r1, #58	; 0x3a
   170ac:	bl	11510 <__overflow@plt>
   170b0:	ldr	r0, [r6, #20]
   170b4:	ldr	r1, [r6, #24]
   170b8:	cmp	r0, r1
   170bc:	bcc	16f94 <argp_failure@@Base+0xbc>
   170c0:	mov	r0, r6
   170c4:	mov	r1, #32
   170c8:	bl	11510 <__overflow@plt>
   170cc:	b	16fa4 <argp_failure@@Base+0xcc>
   170d0:	mov	r0, r6
   170d4:	mov	r1, #58	; 0x3a
   170d8:	bl	11510 <__overflow@plt>
   170dc:	ldr	r0, [r6, #20]
   170e0:	ldr	r1, [r6, #24]
   170e4:	cmp	r0, r1
   170e8:	bcc	16fec <argp_failure@@Base+0x114>
   170ec:	mov	r0, r6
   170f0:	mov	r1, #32
   170f4:	bl	11510 <__overflow@plt>
   170f8:	b	16ffc <argp_failure@@Base+0x124>
   170fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17100:	add	fp, sp, #28
   17104:	sub	sp, sp, #52	; 0x34
   17108:	ldr	r4, [r0]
   1710c:	ldr	r7, [r0, #16]
   17110:	mov	r8, r0
   17114:	mov	r0, #16
   17118:	mov	sl, r1
   1711c:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   17120:	cmp	r0, #0
   17124:	beq	17818 <argp_failure@@Base+0x940>
   17128:	mov	r9, r0
   1712c:	mov	r0, #0
   17130:	cmp	r4, #0
   17134:	str	r8, [sp, #40]	; 0x28
   17138:	mov	r1, r9
   1713c:	str	r9, [fp, #-32]	; 0xffffffe0
   17140:	str	r0, [r1, #12]!
   17144:	str	r1, [sp, #28]
   17148:	str	r0, [r1, #-8]
   1714c:	beq	173ac <argp_failure@@Base+0x4d4>
   17150:	ldrb	r0, [r4, #12]
   17154:	str	r7, [sp, #12]
   17158:	tst	r0, #4
   1715c:	bne	17838 <argp_failure@@Base+0x960>
   17160:	add	r5, r4, #12
   17164:	mov	r6, #0
   17168:	mov	r8, #0
   1716c:	ldr	r7, [r5, #-8]
   17170:	cmp	r7, #0
   17174:	bne	171b0 <argp_failure@@Base+0x2d8>
   17178:	b	1718c <argp_failure@@Base+0x2b4>
   1717c:	add	r5, r5, #24
   17180:	ldr	r7, [r5, #-8]
   17184:	cmp	r7, #0
   17188:	bne	171b0 <argp_failure@@Base+0x2d8>
   1718c:	ldr	r0, [r5, #-12]
   17190:	cmp	r0, #0
   17194:	bne	171b0 <argp_failure@@Base+0x2d8>
   17198:	ldr	r0, [r5, #4]
   1719c:	cmp	r0, #0
   171a0:	bne	171b0 <argp_failure@@Base+0x2d8>
   171a4:	ldr	r0, [r5, #8]
   171a8:	cmp	r0, #0
   171ac:	beq	171f0 <argp_failure@@Base+0x318>
   171b0:	ldr	r0, [r5]
   171b4:	sub	r1, r7, #1
   171b8:	tst	r0, #4
   171bc:	addeq	r6, r6, #1
   171c0:	streq	r6, [r9, #4]
   171c4:	cmp	r1, #254	; 0xfe
   171c8:	bhi	1717c <argp_failure@@Base+0x2a4>
   171cc:	ands	r0, r0, #8
   171d0:	bne	1717c <argp_failure@@Base+0x2a4>
   171d4:	bl	11480 <__ctype_b_loc@plt>
   171d8:	ldr	r0, [r0]
   171dc:	add	r0, r0, r7, lsl #1
   171e0:	ldrb	r0, [r0, #1]
   171e4:	tst	r0, #64	; 0x40
   171e8:	addne	r8, r8, #1
   171ec:	b	1717c <argp_failure@@Base+0x2a4>
   171f0:	rsb	r0, r6, r6, lsl #3
   171f4:	lsl	r0, r0, #2
   171f8:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   171fc:	mov	r5, r0
   17200:	str	r0, [r9]
   17204:	add	r0, r8, #1
   17208:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   1720c:	cmp	r5, #0
   17210:	str	r0, [r9, #8]
   17214:	movne	r7, r0
   17218:	cmpne	r0, #0
   1721c:	bne	17240 <argp_failure@@Base+0x368>
   17220:	movw	r0, #53035	; 0xcf2b
   17224:	movw	r1, #52943	; 0xcecf
   17228:	movw	r3, #52955	; 0xcedb
   1722c:	movw	r2, #474	; 0x1da
   17230:	movt	r0, #1
   17234:	movt	r1, #1
   17238:	movt	r3, #1
   1723c:	bl	115f4 <__assert_fail@plt>
   17240:	movw	r0, #37450	; 0x924a
   17244:	movt	r0, #2340	; 0x924
   17248:	cmp	r6, r0
   1724c:	bcs	17858 <argp_failure@@Base+0x980>
   17250:	mov	r8, #0
   17254:	mov	r0, #0
   17258:	ldr	r1, [r4, #4]
   1725c:	cmp	r1, #0
   17260:	bne	172a4 <argp_failure@@Base+0x3cc>
   17264:	b	17280 <argp_failure@@Base+0x3a8>
   17268:	mov	r4, r0
   1726c:	add	r5, r5, #28
   17270:	mov	r0, r9
   17274:	ldr	r1, [r4, #4]
   17278:	cmp	r1, #0
   1727c:	bne	172a4 <argp_failure@@Base+0x3cc>
   17280:	ldr	r2, [r4]
   17284:	cmp	r2, #0
   17288:	bne	172a4 <argp_failure@@Base+0x3cc>
   1728c:	ldr	r2, [r4, #16]
   17290:	cmp	r2, #0
   17294:	bne	172a4 <argp_failure@@Base+0x3cc>
   17298:	ldr	r2, [r4, #20]
   1729c:	cmp	r2, #0
   172a0:	beq	17398 <argp_failure@@Base+0x4c0>
   172a4:	stm	r5, {r4, r8}
   172a8:	str	r7, [r5, #8]
   172ac:	ldr	r9, [r4, #20]
   172b0:	cmp	r9, #0
   172b4:	bne	172d0 <argp_failure@@Base+0x3f8>
   172b8:	ldr	r2, [r4]
   172bc:	cmp	r2, #0
   172c0:	bne	172cc <argp_failure@@Base+0x3f4>
   172c4:	cmp	r1, #0
   172c8:	addeq	r0, r0, #1
   172cc:	mov	r9, r0
   172d0:	ldr	r0, [sp, #40]	; 0x28
   172d4:	mov	r1, #0
   172d8:	str	r9, [r5, #12]
   172dc:	str	sl, [r5, #16]
   172e0:	str	r0, [r5, #20]
   172e4:	add	r0, r1, #1
   172e8:	str	r0, [r5, #4]
   172ec:	ldrb	r0, [r4, #12]
   172f0:	tst	r0, #8
   172f4:	bne	1734c <argp_failure@@Base+0x474>
   172f8:	ldr	r6, [r4, #4]
   172fc:	sub	r0, r6, #1
   17300:	cmp	r0, #254	; 0xfe
   17304:	bhi	1734c <argp_failure@@Base+0x474>
   17308:	bl	11480 <__ctype_b_loc@plt>
   1730c:	ldr	r0, [r0]
   17310:	add	r0, r0, r6, lsl #1
   17314:	ldrb	r0, [r0, #1]
   17318:	tst	r0, #64	; 0x40
   1731c:	beq	1734c <argp_failure@@Base+0x474>
   17320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17324:	ldr	r0, [r0, #8]
   17328:	cmp	r0, r7
   1732c:	bcs	17348 <argp_failure@@Base+0x470>
   17330:	ldrb	r1, [r0], #1
   17334:	uxtb	r2, r6
   17338:	cmp	r1, r2
   1733c:	beq	1734c <argp_failure@@Base+0x474>
   17340:	cmp	r7, r0
   17344:	bne	17330 <argp_failure@@Base+0x458>
   17348:	strb	r6, [r7], #1
   1734c:	ldr	r1, [r4, #28]
   17350:	add	r0, r4, #24
   17354:	cmp	r1, #0
   17358:	bne	17380 <argp_failure@@Base+0x4a8>
   1735c:	ldr	r1, [r0]
   17360:	cmp	r1, #0
   17364:	bne	17380 <argp_failure@@Base+0x4a8>
   17368:	ldr	r1, [r4, #40]	; 0x28
   1736c:	cmp	r1, #0
   17370:	bne	17380 <argp_failure@@Base+0x4a8>
   17374:	ldr	r1, [r4, #44]	; 0x2c
   17378:	cmp	r1, #0
   1737c:	beq	17268 <argp_failure@@Base+0x390>
   17380:	ldrb	r1, [r4, #36]	; 0x24
   17384:	tst	r1, #4
   17388:	beq	17268 <argp_failure@@Base+0x390>
   1738c:	ldr	r1, [r5, #4]
   17390:	mov	r4, r0
   17394:	b	172e4 <argp_failure@@Base+0x40c>
   17398:	mov	r0, #0
   1739c:	ldr	r8, [sp, #40]	; 0x28
   173a0:	ldr	r9, [fp, #-32]	; 0xffffffe0
   173a4:	strb	r0, [r7]
   173a8:	ldr	r7, [sp, #12]
   173ac:	cmp	r7, #0
   173b0:	beq	177ec <argp_failure@@Base+0x914>
   173b4:	ldr	r0, [r7]
   173b8:	cmp	r0, #0
   173bc:	beq	177ec <argp_failure@@Base+0x914>
   173c0:	str	sl, [sp, #4]
   173c4:	ldr	r4, [r7, #12]
   173c8:	cmp	r4, #0
   173cc:	bne	1740c <argp_failure@@Base+0x534>
   173d0:	b	17414 <argp_failure@@Base+0x53c>
   173d4:	ldr	r1, [r6]
   173d8:	ldr	r2, [r6, #8]
   173dc:	str	r1, [r9]
   173e0:	stmib	r9, {r0, r2}
   173e4:	mov	r0, #0
   173e8:	str	r0, [r6, #4]
   173ec:	mov	r0, r6
   173f0:	bl	142d0 <argp_parse@@Base+0x13dc>
   173f4:	ldr	r0, [r7, #16]!
   173f8:	cmp	r0, #0
   173fc:	beq	177ec <argp_failure@@Base+0x914>
   17400:	ldr	r4, [r7, #12]
   17404:	cmp	r4, #0
   17408:	beq	17414 <argp_failure@@Base+0x53c>
   1740c:	ldr	r5, [r7, #8]
   17410:	b	17424 <argp_failure@@Base+0x54c>
   17414:	ldr	r5, [r7, #8]
   17418:	mov	r1, sl
   1741c:	cmp	r5, #0
   17420:	beq	1747c <argp_failure@@Base+0x5a4>
   17424:	ldr	r6, [r8, #16]
   17428:	mov	r0, #28
   1742c:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   17430:	mov	r1, r0
   17434:	cmp	r0, #0
   17438:	beq	1747c <argp_failure@@Base+0x5a4>
   1743c:	sub	r0, r7, r6
   17440:	cmp	sl, #0
   17444:	str	r5, [r1]
   17448:	asr	r0, r0, #4
   1744c:	stmib	r1, {r0, r4, sl}
   17450:	str	r8, [r1, #16]
   17454:	beq	17464 <argp_failure@@Base+0x58c>
   17458:	ldr	r0, [sl, #20]
   1745c:	add	r0, r0, #1
   17460:	b	17468 <argp_failure@@Base+0x590>
   17464:	mov	r0, #0
   17468:	ldr	r3, [sp, #28]
   1746c:	str	r0, [r1, #20]
   17470:	ldr	r2, [r3]
   17474:	str	r1, [r3]
   17478:	str	r2, [r1, #24]
   1747c:	ldr	r0, [r7]
   17480:	bl	170fc <argp_failure@@Base+0x224>
   17484:	ldr	r1, [sp, #28]
   17488:	mov	r6, r0
   1748c:	ldr	r2, [r1]
   17490:	mov	r0, r1
   17494:	add	r1, r2, #24
   17498:	cmp	r2, #0
   1749c:	bne	1748c <argp_failure@@Base+0x5b4>
   174a0:	ldr	r1, [r6, #12]
   174a4:	str	r1, [r0]
   174a8:	mov	r0, #0
   174ac:	str	r0, [r6, #12]
   174b0:	ldr	r0, [r6, #4]
   174b4:	cmp	r0, #0
   174b8:	beq	173ec <argp_failure@@Base+0x514>
   174bc:	ldr	r1, [r9, #4]
   174c0:	cmp	r1, #0
   174c4:	beq	173d4 <argp_failure@@Base+0x4fc>
   174c8:	add	r5, r1, r0
   174cc:	str	r1, [fp, #-36]	; 0xffffffdc
   174d0:	rsb	r0, r5, r5, lsl #3
   174d4:	lsl	r0, r0, #2
   174d8:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   174dc:	ldr	r4, [r9, #8]
   174e0:	str	r0, [sp, #24]
   174e4:	mov	r0, r4
   174e8:	bl	114a4 <strlen@plt>
   174ec:	mov	r8, r0
   174f0:	ldr	r0, [r6, #8]
   174f4:	bl	114a4 <strlen@plt>
   174f8:	add	r0, r8, r0
   174fc:	str	r8, [sp, #16]
   17500:	ldr	r8, [sp, #24]
   17504:	add	r0, r0, #1
   17508:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   1750c:	cmp	r8, #0
   17510:	cmpne	r0, #0
   17514:	beq	177f8 <argp_failure@@Base+0x920>
   17518:	str	r0, [sp, #36]	; 0x24
   1751c:	movw	r0, #37450	; 0x924a
   17520:	str	r6, [sp, #20]
   17524:	str	r7, [sp, #12]
   17528:	str	r5, [sp, #8]
   1752c:	movt	r0, #2340	; 0x924
   17530:	cmp	r5, r0
   17534:	bcs	17878 <argp_failure@@Base+0x9a0>
   17538:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1753c:	ldr	r1, [r9]
   17540:	mov	r0, r8
   17544:	rsb	r6, r5, r5, lsl #3
   17548:	lsl	r2, r6, #2
   1754c:	bl	113a8 <memcpy@plt>
   17550:	add	r0, r8, r6, lsl #2
   17554:	ldr	r6, [sp, #20]
   17558:	ldm	r6, {r1, r2}
   1755c:	rsb	r2, r2, r2, lsl #3
   17560:	lsl	r2, r2, #2
   17564:	bl	113a8 <memcpy@plt>
   17568:	ldr	r0, [sp, #36]	; 0x24
   1756c:	ldr	r2, [sp, #16]
   17570:	mov	r1, r4
   17574:	bl	113a8 <memcpy@plt>
   17578:	tst	r5, #1
   1757c:	mov	r0, r5
   17580:	beq	175a4 <argp_failure@@Base+0x6cc>
   17584:	ldr	r1, [sp, #24]
   17588:	ldr	r2, [sp, #36]	; 0x24
   1758c:	ldr	r0, [r1, #8]
   17590:	add	r8, r1, #28
   17594:	sub	r0, r0, r4
   17598:	add	r0, r2, r0
   1759c:	str	r0, [r1, #8]
   175a0:	sub	r0, r5, #1
   175a4:	ldr	r3, [sp, #36]	; 0x24
   175a8:	cmp	r5, #1
   175ac:	beq	175dc <argp_failure@@Base+0x704>
   175b0:	ldr	r1, [r8, #8]
   175b4:	ldr	r2, [r8, #36]	; 0x24
   175b8:	subs	r0, r0, #2
   175bc:	sub	r1, r1, r4
   175c0:	add	r1, r3, r1
   175c4:	str	r1, [r8, #8]
   175c8:	sub	r1, r2, r4
   175cc:	add	r1, r3, r1
   175d0:	str	r1, [r8, #36]	; 0x24
   175d4:	add	r8, r8, #56	; 0x38
   175d8:	bne	175b0 <argp_failure@@Base+0x6d8>
   175dc:	ldr	r4, [sp, #16]
   175e0:	add	r0, r3, r4
   175e4:	str	r0, [fp, #-36]	; 0xffffffdc
   175e8:	ldr	r0, [r6, #4]
   175ec:	cmp	r0, #0
   175f0:	beq	17768 <argp_failure@@Base+0x890>
   175f4:	ldr	sl, [r6, #8]
   175f8:	cmp	r4, #0
   175fc:	str	r0, [sp, #32]
   17600:	bgt	17620 <argp_failure@@Base+0x748>
   17604:	b	176d8 <argp_failure@@Base+0x800>
   17608:	ldr	r0, [sp, #32]
   1760c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   17610:	add	r8, r8, #28
   17614:	subs	r0, r0, #1
   17618:	str	r0, [sp, #32]
   1761c:	beq	17768 <argp_failure@@Base+0x890>
   17620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17624:	str	r0, [r8, #8]
   17628:	ldr	r6, [r8, #4]
   1762c:	cmp	r6, #0
   17630:	beq	17608 <argp_failure@@Base+0x730>
   17634:	ldr	r9, [r8]
   17638:	ldrb	r0, [r9, #12]
   1763c:	tst	r0, #8
   17640:	bne	17658 <argp_failure@@Base+0x780>
   17644:	b	17670 <argp_failure@@Base+0x798>
   17648:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1764c:	strb	r7, [r0], #1
   17650:	str	r0, [fp, #-36]	; 0xffffffdc
   17654:	add	sl, sl, #1
   17658:	subs	r6, r6, #1
   1765c:	add	r9, r9, #24
   17660:	beq	17608 <argp_failure@@Base+0x730>
   17664:	ldrb	r0, [r9, #12]
   17668:	tst	r0, #8
   1766c:	bne	17658 <argp_failure@@Base+0x780>
   17670:	ldr	r5, [r9, #4]
   17674:	sub	r0, r5, #1
   17678:	cmp	r0, #254	; 0xfe
   1767c:	bhi	17658 <argp_failure@@Base+0x780>
   17680:	ldrb	r7, [sl]
   17684:	bl	11480 <__ctype_b_loc@plt>
   17688:	cmp	r5, r7
   1768c:	bne	17658 <argp_failure@@Base+0x780>
   17690:	ldr	r0, [r0]
   17694:	ldr	r1, [sp, #36]	; 0x24
   17698:	add	r0, r0, r5, lsl #1
   1769c:	ldrh	r0, [r0]
   176a0:	ands	r0, r0, #16384	; 0x4000
   176a4:	mov	r0, r4
   176a8:	beq	17658 <argp_failure@@Base+0x780>
   176ac:	ldrb	r2, [r1], #1
   176b0:	cmp	r2, r7
   176b4:	beq	17654 <argp_failure@@Base+0x77c>
   176b8:	subs	r0, r0, #1
   176bc:	bne	176ac <argp_failure@@Base+0x7d4>
   176c0:	b	17648 <argp_failure@@Base+0x770>
   176c4:	ldr	r0, [sp, #32]
   176c8:	add	r8, r8, #28
   176cc:	subs	r0, r0, #1
   176d0:	str	r0, [sp, #32]
   176d4:	beq	17768 <argp_failure@@Base+0x890>
   176d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   176dc:	str	r0, [r8, #8]
   176e0:	ldr	r6, [r8, #4]
   176e4:	cmp	r6, #0
   176e8:	beq	176c4 <argp_failure@@Base+0x7ec>
   176ec:	ldr	r0, [r8]
   176f0:	add	r7, r0, #12
   176f4:	ldrb	r0, [r7]
   176f8:	tst	r0, #8
   176fc:	beq	17718 <argp_failure@@Base+0x840>
   17700:	add	r7, r7, #24
   17704:	subs	r6, r6, #1
   17708:	beq	176c4 <argp_failure@@Base+0x7ec>
   1770c:	ldrb	r0, [r7]
   17710:	tst	r0, #8
   17714:	bne	17700 <argp_failure@@Base+0x828>
   17718:	ldr	r4, [r7, #-8]
   1771c:	sub	r0, r4, #1
   17720:	cmp	r0, #254	; 0xfe
   17724:	bhi	17700 <argp_failure@@Base+0x828>
   17728:	ldrb	r5, [sl]
   1772c:	bl	11480 <__ctype_b_loc@plt>
   17730:	cmp	r4, r5
   17734:	bne	17700 <argp_failure@@Base+0x828>
   17738:	ldr	r0, [r0]
   1773c:	add	r0, r0, r4, lsl #1
   17740:	ldrh	r0, [r0]
   17744:	ands	r0, r0, #16384	; 0x4000
   17748:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   1774c:	addne	sl, sl, #1
   17750:	strbne	r5, [r0], #1
   17754:	strne	r0, [fp, #-36]	; 0xffffffdc
   17758:	add	r7, r7, #24
   1775c:	subs	r6, r6, #1
   17760:	bne	1770c <argp_failure@@Base+0x834>
   17764:	b	176c4 <argp_failure@@Base+0x7ec>
   17768:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1776c:	mov	r0, #0
   17770:	strb	r0, [r1]
   17774:	ldr	r0, [r9]
   17778:	bl	142d0 <argp_parse@@Base+0x13dc>
   1777c:	ldr	r0, [r9, #8]
   17780:	bl	142d0 <argp_parse@@Base+0x13dc>
   17784:	ldr	r0, [sp, #24]
   17788:	ldr	r6, [sp, #20]
   1778c:	str	r0, [r9]
   17790:	ldr	r0, [sp, #8]
   17794:	str	r0, [r9, #4]
   17798:	ldr	r0, [sp, #36]	; 0x24
   1779c:	str	r0, [r9, #8]
   177a0:	ldr	r0, [r6, #12]
   177a4:	cmp	r0, #0
   177a8:	beq	177c0 <argp_failure@@Base+0x8e8>
   177ac:	ldr	r4, [r0, #24]
   177b0:	bl	142d0 <argp_parse@@Base+0x13dc>
   177b4:	cmp	r4, #0
   177b8:	mov	r0, r4
   177bc:	bne	177ac <argp_failure@@Base+0x8d4>
   177c0:	ldr	r0, [r6, #4]
   177c4:	ldr	sl, [sp, #4]
   177c8:	ldr	r8, [sp, #40]	; 0x28
   177cc:	ldr	r7, [sp, #12]
   177d0:	cmp	r0, #0
   177d4:	beq	173ec <argp_failure@@Base+0x514>
   177d8:	ldr	r0, [r6]
   177dc:	bl	142d0 <argp_parse@@Base+0x13dc>
   177e0:	ldr	r0, [r6, #8]
   177e4:	bl	142d0 <argp_parse@@Base+0x13dc>
   177e8:	b	173ec <argp_failure@@Base+0x514>
   177ec:	mov	r0, r9
   177f0:	sub	sp, fp, #28
   177f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177f8:	movw	r0, #53127	; 0xcf87
   177fc:	movw	r1, #52943	; 0xcecf
   17800:	movw	r3, #53152	; 0xcfa0
   17804:	movw	r2, #970	; 0x3ca
   17808:	movt	r0, #1
   1780c:	movt	r1, #1
   17810:	movt	r3, #1
   17814:	bl	115f4 <__assert_fail@plt>
   17818:	movw	r0, #52939	; 0xcecb
   1781c:	movw	r1, #52943	; 0xcecf
   17820:	movw	r3, #52955	; 0xcedb
   17824:	movw	r2, #450	; 0x1c2
   17828:	movt	r0, #1
   1782c:	movt	r1, #1
   17830:	movt	r3, #1
   17834:	bl	115f4 <__assert_fail@plt>
   17838:	movw	r0, #53019	; 0xcf1b
   1783c:	movw	r1, #52943	; 0xcecf
   17840:	movw	r3, #52955	; 0xcedb
   17844:	mov	r2, #460	; 0x1cc
   17848:	movt	r0, #1
   1784c:	movt	r1, #1
   17850:	movt	r3, #1
   17854:	bl	115f4 <__assert_fail@plt>
   17858:	movw	r0, #53070	; 0xcf4e
   1785c:	movw	r1, #52943	; 0xcecf
   17860:	movw	r3, #52955	; 0xcedb
   17864:	mov	r2, #476	; 0x1dc
   17868:	movt	r0, #1
   1786c:	movt	r1, #1
   17870:	movt	r3, #1
   17874:	bl	115f4 <__assert_fail@plt>
   17878:	movw	r0, #53075	; 0xcf53
   1787c:	movw	r1, #52943	; 0xcecf
   17880:	movw	r3, #53152	; 0xcfa0
   17884:	mov	r2, #972	; 0x3cc
   17888:	movt	r0, #1
   1788c:	movt	r1, #1
   17890:	movt	r3, #1
   17894:	bl	115f4 <__assert_fail@plt>
   17898:	push	{r4, r5, fp, lr}
   1789c:	add	fp, sp, #8
   178a0:	mov	r5, r1
   178a4:	cmp	r0, #0
   178a8:	beq	178f8 <argp_failure@@Base+0xa20>
   178ac:	mov	r1, #10
   178b0:	bl	114b0 <strchr@plt>
   178b4:	cmp	r0, #0
   178b8:	mov	r4, r0
   178bc:	movwne	r4, #1
   178c0:	cmp	r5, #0
   178c4:	beq	17904 <argp_failure@@Base+0xa2c>
   178c8:	ldr	r1, [r5]
   178cc:	cmp	r1, #0
   178d0:	beq	17904 <argp_failure@@Base+0xa2c>
   178d4:	add	r5, r5, #16
   178d8:	ldr	r0, [r1, #8]
   178dc:	ldr	r1, [r1, #16]
   178e0:	bl	17898 <argp_failure@@Base+0x9c0>
   178e4:	ldr	r1, [r5], #16
   178e8:	add	r4, r0, r4
   178ec:	cmp	r1, #0
   178f0:	bne	178d8 <argp_failure@@Base+0xa00>
   178f4:	b	17904 <argp_failure@@Base+0xa2c>
   178f8:	mov	r4, #0
   178fc:	cmp	r5, #0
   17900:	bne	178c8 <argp_failure@@Base+0x9f0>
   17904:	mov	r0, r4
   17908:	pop	{r4, r5, fp, pc}
   1790c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17910:	add	fp, sp, #28
   17914:	sub	sp, sp, #28
   17918:	ldr	r4, [r0, #4]
   1791c:	str	r1, [fp, #-40]	; 0xffffffd8
   17920:	cmp	r4, #0
   17924:	beq	17d20 <argp_failure@@Base+0xe48>
   17928:	mov	r5, r0
   1792c:	ldr	r0, [r0, #8]
   17930:	bl	114a4 <strlen@plt>
   17934:	add	r0, r0, #8
   17938:	bic	r0, r0, #7
   1793c:	sub	r0, sp, r0
   17940:	mov	sp, r0
   17944:	ldr	r7, [r5]
   17948:	str	r0, [fp, #-52]	; 0xffffffcc
   1794c:	str	r0, [fp, #-48]	; 0xffffffd0
   17950:	str	r5, [fp, #-44]	; 0xffffffd4
   17954:	ldr	r6, [r7, #4]
   17958:	str	r4, [fp, #-36]	; 0xffffffdc
   1795c:	cmp	r6, #0
   17960:	bne	17988 <argp_failure@@Base+0xab0>
   17964:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17968:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1796c:	add	r7, r7, #28
   17970:	subs	r4, r4, #1
   17974:	beq	17a3c <argp_failure@@Base+0xb64>
   17978:	ldr	r6, [r7, #4]
   1797c:	str	r4, [fp, #-36]	; 0xffffffdc
   17980:	cmp	r6, #0
   17984:	beq	17964 <argp_failure@@Base+0xa8c>
   17988:	ldr	r4, [r7]
   1798c:	ldr	r5, [r7, #8]
   17990:	mov	sl, r4
   17994:	ldr	r8, [sl, #12]
   17998:	tst	r8, #8
   1799c:	bne	179a8 <argp_failure@@Base+0xad0>
   179a0:	b	179c0 <argp_failure@@Base+0xae8>
   179a4:	add	r5, r5, #1
   179a8:	subs	r6, r6, #1
   179ac:	add	sl, sl, #24
   179b0:	beq	17964 <argp_failure@@Base+0xa8c>
   179b4:	ldr	r8, [sl, #12]
   179b8:	tst	r8, #8
   179bc:	bne	179a8 <argp_failure@@Base+0xad0>
   179c0:	ldr	r9, [sl, #4]
   179c4:	sub	r0, r9, #1
   179c8:	cmp	r0, #254	; 0xfe
   179cc:	bhi	179a8 <argp_failure@@Base+0xad0>
   179d0:	bl	11480 <__ctype_b_loc@plt>
   179d4:	ldr	r0, [r0]
   179d8:	add	r0, r0, r9, lsl #1
   179dc:	ldrb	r0, [r0, #1]
   179e0:	tst	r0, #64	; 0x40
   179e4:	beq	179a8 <argp_failure@@Base+0xad0>
   179e8:	ldrb	r0, [r5]
   179ec:	cmp	r9, r0
   179f0:	bne	179a8 <argp_failure@@Base+0xad0>
   179f4:	tst	r8, #4
   179f8:	moveq	r4, sl
   179fc:	tst	r8, #2
   17a00:	bne	179a4 <argp_failure@@Base+0xacc>
   17a04:	ldr	r0, [sl, #8]
   17a08:	cmp	r0, #0
   17a0c:	bne	179a4 <argp_failure@@Base+0xacc>
   17a10:	ldr	r0, [r4, #8]
   17a14:	cmp	r0, #0
   17a18:	bne	179a4 <argp_failure@@Base+0xacc>
   17a1c:	ldr	r0, [r4, #12]
   17a20:	orr	r0, r0, r8
   17a24:	tst	r0, #16
   17a28:	bne	179a4 <argp_failure@@Base+0xacc>
   17a2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17a30:	strb	r9, [r0], #1
   17a34:	str	r0, [fp, #-48]	; 0xffffffd0
   17a38:	b	179a4 <argp_failure@@Base+0xacc>
   17a3c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17a44:	cmp	r1, r2
   17a48:	bls	17a64 <argp_failure@@Base+0xb8c>
   17a4c:	mov	r0, #0
   17a50:	strb	r0, [r1]
   17a54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a58:	movw	r1, #53196	; 0xcfcc
   17a5c:	movt	r1, #1
   17a60:	bl	1ad40 <argp_failure@@Base+0x3e68>
   17a64:	ldr	r5, [r6, #4]
   17a68:	cmp	r5, #0
   17a6c:	beq	17d20 <argp_failure@@Base+0xe48>
   17a70:	ldr	r8, [r6]
   17a74:	ldr	r9, [r8, #4]
   17a78:	cmp	r9, #0
   17a7c:	bne	17a98 <argp_failure@@Base+0xbc0>
   17a80:	subs	r5, r5, #1
   17a84:	add	r8, r8, #28
   17a88:	beq	17c3c <argp_failure@@Base+0xd64>
   17a8c:	ldr	r9, [r8, #4]
   17a90:	cmp	r9, #0
   17a94:	beq	17a80 <argp_failure@@Base+0xba8>
   17a98:	ldr	sl, [r8]
   17a9c:	ldr	r4, [r8, #8]
   17aa0:	str	sl, [fp, #-36]	; 0xffffffdc
   17aa4:	ldr	r6, [sl, #12]
   17aa8:	tst	r6, #8
   17aac:	bne	17acc <argp_failure@@Base+0xbf4>
   17ab0:	b	17ae4 <argp_failure@@Base+0xc0c>
   17ab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ab8:	movw	r1, #53203	; 0xcfd3
   17abc:	mov	r2, r7
   17ac0:	movt	r1, #1
   17ac4:	bl	1ad40 <argp_failure@@Base+0x3e68>
   17ac8:	add	r4, r4, #1
   17acc:	subs	r9, r9, #1
   17ad0:	add	sl, sl, #24
   17ad4:	beq	17a80 <argp_failure@@Base+0xba8>
   17ad8:	ldr	r6, [sl, #12]
   17adc:	tst	r6, #8
   17ae0:	bne	17acc <argp_failure@@Base+0xbf4>
   17ae4:	ldr	r7, [sl, #4]
   17ae8:	sub	r0, r7, #1
   17aec:	cmp	r0, #254	; 0xfe
   17af0:	bhi	17acc <argp_failure@@Base+0xbf4>
   17af4:	bl	11480 <__ctype_b_loc@plt>
   17af8:	ldr	r0, [r0]
   17afc:	add	r0, r0, r7, lsl #1
   17b00:	ldrb	r0, [r0, #1]
   17b04:	tst	r0, #64	; 0x40
   17b08:	beq	17acc <argp_failure@@Base+0xbf4>
   17b0c:	ldrb	r0, [r4]
   17b10:	cmp	r7, r0
   17b14:	bne	17acc <argp_failure@@Base+0xbf4>
   17b18:	tst	r6, #4
   17b1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b20:	moveq	r0, sl
   17b24:	tst	r6, #2
   17b28:	str	r0, [fp, #-36]	; 0xffffffdc
   17b2c:	bne	17ac8 <argp_failure@@Base+0xbf0>
   17b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b34:	ldr	r3, [sl, #8]
   17b38:	ldr	r0, [r0, #12]
   17b3c:	cmp	r3, #0
   17b40:	orr	r0, r0, r6
   17b44:	bne	17b50 <argp_failure@@Base+0xc78>
   17b48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17b4c:	ldr	r3, [r1, #8]
   17b50:	tst	r0, #16
   17b54:	bne	17ac8 <argp_failure@@Base+0xbf0>
   17b58:	cmp	r3, #0
   17b5c:	beq	17ac8 <argp_failure@@Base+0xbf0>
   17b60:	tst	r0, #1
   17b64:	bne	17ab4 <argp_failure@@Base+0xbdc>
   17b68:	mov	r0, r3
   17b6c:	str	r3, [fp, #-48]	; 0xffffffd0
   17b70:	bl	114a4 <strlen@plt>
   17b74:	ldr	r7, [fp, #-40]	; 0xffffffd8
   17b78:	add	r6, r0, #6
   17b7c:	ldr	r2, [r7, #24]
   17b80:	ldr	r0, [r7, #28]
   17b84:	ldr	r1, [r7, #16]
   17b88:	sub	r2, r0, r2
   17b8c:	cmp	r2, r1
   17b90:	bls	17ba0 <argp_failure@@Base+0xcc8>
   17b94:	mov	r0, r7
   17b98:	bl	1a6d8 <argp_failure@@Base+0x3800>
   17b9c:	ldr	r0, [r7, #28]
   17ba0:	ldr	r3, [r7, #20]
   17ba4:	ldr	r2, [r7, #8]
   17ba8:	ldr	r1, [r7, #32]
   17bac:	cmp	r3, #0
   17bb0:	addgt	r6, r6, r3
   17bb4:	cmp	r6, r2
   17bb8:	bcs	17bf0 <argp_failure@@Base+0xd18>
   17bbc:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17bc0:	cmp	r0, r1
   17bc4:	bcc	17be0 <argp_failure@@Base+0xd08>
   17bc8:	mov	r0, r7
   17bcc:	mov	r1, #1
   17bd0:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   17bd4:	cmp	r0, #0
   17bd8:	beq	17c24 <argp_failure@@Base+0xd4c>
   17bdc:	ldr	r0, [r7, #28]
   17be0:	add	r1, r0, #1
   17be4:	str	r1, [r7, #28]
   17be8:	mov	r1, #32
   17bec:	b	17c20 <argp_failure@@Base+0xd48>
   17bf0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   17bf4:	cmp	r0, r1
   17bf8:	bcc	17c14 <argp_failure@@Base+0xd3c>
   17bfc:	mov	r0, r7
   17c00:	mov	r1, #1
   17c04:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   17c08:	cmp	r0, #0
   17c0c:	beq	17c24 <argp_failure@@Base+0xd4c>
   17c10:	ldr	r0, [r7, #28]
   17c14:	add	r1, r0, #1
   17c18:	str	r1, [r7, #28]
   17c1c:	mov	r1, #10
   17c20:	strb	r1, [r0]
   17c24:	ldr	r2, [sl, #4]
   17c28:	movw	r1, #53214	; 0xcfde
   17c2c:	mov	r0, r7
   17c30:	mov	r3, r6
   17c34:	movt	r1, #1
   17c38:	b	17ac4 <argp_failure@@Base+0xbec>
   17c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c40:	ldr	r4, [r0, #4]
   17c44:	cmp	r4, #0
   17c48:	beq	17d20 <argp_failure@@Base+0xe48>
   17c4c:	ldr	r6, [r0]
   17c50:	movw	sl, #53247	; 0xcfff
   17c54:	movw	r9, #53223	; 0xcfe7
   17c58:	movt	sl, #1
   17c5c:	movt	r9, #1
   17c60:	ldr	r7, [r6, #4]
   17c64:	cmp	r7, #0
   17c68:	bne	17c84 <argp_failure@@Base+0xdac>
   17c6c:	subs	r4, r4, #1
   17c70:	add	r6, r6, #28
   17c74:	beq	17d20 <argp_failure@@Base+0xe48>
   17c78:	ldr	r7, [r6, #4]
   17c7c:	cmp	r7, #0
   17c80:	beq	17c6c <argp_failure@@Base+0xd94>
   17c84:	ldr	r8, [r6]
   17c88:	mov	r5, r8
   17c8c:	ldr	r2, [r5]
   17c90:	cmp	r2, #0
   17c94:	bne	17cc0 <argp_failure@@Base+0xde8>
   17c98:	b	17ca8 <argp_failure@@Base+0xdd0>
   17c9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ca0:	mov	r1, sl
   17ca4:	bl	1ad40 <argp_failure@@Base+0x3e68>
   17ca8:	subs	r7, r7, #1
   17cac:	add	r5, r5, #24
   17cb0:	beq	17c6c <argp_failure@@Base+0xd94>
   17cb4:	ldr	r2, [r5]
   17cb8:	cmp	r2, #0
   17cbc:	beq	17ca8 <argp_failure@@Base+0xdd0>
   17cc0:	ldr	r0, [r5, #12]
   17cc4:	tst	r0, #4
   17cc8:	moveq	r8, r5
   17ccc:	tst	r0, #2
   17cd0:	bne	17ca8 <argp_failure@@Base+0xdd0>
   17cd4:	ldr	r3, [r5, #8]
   17cd8:	ldr	r1, [r8, #12]
   17cdc:	cmp	r3, #0
   17ce0:	orr	r0, r1, r0
   17ce4:	ldreq	r3, [r8, #8]
   17ce8:	tst	r0, #16
   17cec:	bne	17ca8 <argp_failure@@Base+0xdd0>
   17cf0:	cmp	r3, #0
   17cf4:	beq	17c9c <argp_failure@@Base+0xdc4>
   17cf8:	tst	r0, #1
   17cfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d00:	movne	r1, r9
   17d04:	movweq	r1, #53236	; 0xcff4
   17d08:	movteq	r1, #1
   17d0c:	bl	1ad40 <argp_failure@@Base+0x3e68>
   17d10:	subs	r7, r7, #1
   17d14:	add	r5, r5, #24
   17d18:	bne	17cb4 <argp_failure@@Base+0xddc>
   17d1c:	b	17c6c <argp_failure@@Base+0xd94>
   17d20:	sub	sp, fp, #28
   17d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d2c:	add	fp, sp, #28
   17d30:	sub	sp, sp, #28
   17d34:	ldr	r5, [r0, #8]
   17d38:	mov	r7, r0
   17d3c:	ldr	sl, [r0, #16]
   17d40:	ldr	r0, [r2]
   17d44:	mov	r4, r3
   17d48:	mov	r9, r2
   17d4c:	mov	r8, r1
   17d50:	cmp	r7, #0
   17d54:	mov	r6, r5
   17d58:	str	r0, [sp, #20]
   17d5c:	beq	17d98 <argp_failure@@Base+0xec0>
   17d60:	ldr	r0, [r7, #20]
   17d64:	mov	r6, r5
   17d68:	cmp	r0, #0
   17d6c:	beq	17d98 <argp_failure@@Base+0xec0>
   17d70:	mov	r0, r7
   17d74:	mov	r1, r8
   17d78:	bl	13c20 <argp_parse@@Base+0xd2c>
   17d7c:	ldr	r3, [r7, #20]
   17d80:	mov	r2, r0
   17d84:	movw	r0, #6
   17d88:	mov	r1, r5
   17d8c:	movt	r0, #512	; 0x200
   17d90:	blx	r3
   17d94:	mov	r6, r0
   17d98:	cmp	r6, #0
   17d9c:	beq	17e00 <argp_failure@@Base+0xf28>
   17da0:	mov	r0, r6
   17da4:	mov	r1, #10
   17da8:	bl	11360 <strchrnul@plt>
   17dac:	mov	r7, r0
   17db0:	ldrb	r0, [r0]
   17db4:	str	r5, [sp, #12]
   17db8:	str	r6, [sp, #16]
   17dbc:	stmib	sp, {r8, sl}
   17dc0:	cmp	r0, #0
   17dc4:	beq	17e70 <argp_failure@@Base+0xf98>
   17dc8:	ldr	r0, [sp, #20]
   17dcc:	ldrb	r6, [r0]
   17dd0:	cmp	r6, #0
   17dd4:	beq	17e7c <argp_failure@@Base+0xfa4>
   17dd8:	mov	r8, #0
   17ddc:	add	sl, r7, #1
   17de0:	mov	r1, #10
   17de4:	mov	r0, sl
   17de8:	bl	11360 <strchrnul@plt>
   17dec:	add	r8, r8, #1
   17df0:	mov	r7, r0
   17df4:	cmp	r8, r6
   17df8:	bcc	17ddc <argp_failure@@Base+0xf04>
   17dfc:	b	17e80 <argp_failure@@Base+0xfa8>
   17e00:	mov	r0, #0
   17e04:	mov	r7, #0
   17e08:	str	r0, [sp, #24]
   17e0c:	cmp	sl, #0
   17e10:	beq	17fe0 <argp_failure@@Base+0x1108>
   17e14:	ldr	r0, [sl]
   17e18:	cmp	r0, #0
   17e1c:	beq	17fe0 <argp_failure@@Base+0x1108>
   17e20:	add	r6, sl, #16
   17e24:	ldr	r5, [fp, #8]
   17e28:	ldr	sl, [sp, #24]
   17e2c:	mov	r1, r8
   17e30:	mov	r2, r9
   17e34:	mov	r3, r4
   17e38:	str	r5, [sp]
   17e3c:	bl	17d28 <argp_failure@@Base+0xe50>
   17e40:	clz	r0, r0
   17e44:	lsr	r4, r0, #5
   17e48:	ldr	r0, [r6], #16
   17e4c:	cmp	r0, #0
   17e50:	bne	17e2c <argp_failure@@Base+0xf54>
   17e54:	cmp	sl, #0
   17e58:	cmpne	r4, #0
   17e5c:	bne	17ff0 <argp_failure@@Base+0x1118>
   17e60:	clz	r0, r4
   17e64:	lsr	r0, r0, #5
   17e68:	sub	sp, fp, #28
   17e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e70:	mov	r0, #0
   17e74:	mov	sl, r6
   17e78:	b	17e90 <argp_failure@@Base+0xfb8>
   17e7c:	ldr	sl, [sp, #16]
   17e80:	ldr	r0, [r9]
   17e84:	add	r0, r0, #1
   17e88:	str	r0, [r9]
   17e8c:	mov	r0, #1
   17e90:	str	r0, [sp, #24]
   17e94:	ldr	r8, [fp, #8]
   17e98:	sub	r2, r7, sl
   17e9c:	add	r6, r2, #1
   17ea0:	ldr	r3, [r8, #24]
   17ea4:	ldr	r0, [r8, #28]
   17ea8:	ldr	r1, [r8, #16]
   17eac:	sub	r3, r0, r3
   17eb0:	cmp	r3, r1
   17eb4:	bls	17ecc <argp_failure@@Base+0xff4>
   17eb8:	mov	r0, r8
   17ebc:	mov	r5, r2
   17ec0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   17ec4:	ldr	r0, [r8, #28]
   17ec8:	mov	r2, r5
   17ecc:	ldr	r3, [r8, #20]
   17ed0:	ldr	r5, [r8, #8]
   17ed4:	ldr	r1, [r8, #32]
   17ed8:	cmp	r3, #0
   17edc:	addgt	r6, r6, r3
   17ee0:	cmp	r6, r5
   17ee4:	bcs	17f2c <argp_failure@@Base+0x1054>
   17ee8:	ldr	r8, [sp, #4]
   17eec:	cmp	r0, r1
   17ef0:	bcc	17f18 <argp_failure@@Base+0x1040>
   17ef4:	ldr	r6, [fp, #8]
   17ef8:	mov	r1, #1
   17efc:	mov	r5, r2
   17f00:	mov	r0, r6
   17f04:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   17f08:	mov	r2, r5
   17f0c:	cmp	r0, #0
   17f10:	beq	17f70 <argp_failure@@Base+0x1098>
   17f14:	ldr	r0, [r6, #28]
   17f18:	ldr	r6, [fp, #8]
   17f1c:	add	r1, r0, #1
   17f20:	str	r1, [r6, #28]
   17f24:	mov	r1, #32
   17f28:	b	17f6c <argp_failure@@Base+0x1094>
   17f2c:	ldr	r8, [sp, #4]
   17f30:	cmp	r0, r1
   17f34:	bcc	17f5c <argp_failure@@Base+0x1084>
   17f38:	ldr	r6, [fp, #8]
   17f3c:	mov	r1, #1
   17f40:	mov	r5, r2
   17f44:	mov	r0, r6
   17f48:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   17f4c:	mov	r2, r5
   17f50:	cmp	r0, #0
   17f54:	beq	17f70 <argp_failure@@Base+0x1098>
   17f58:	ldr	r0, [r6, #28]
   17f5c:	ldr	r6, [fp, #8]
   17f60:	add	r1, r0, #1
   17f64:	str	r1, [r6, #28]
   17f68:	mov	r1, #10
   17f6c:	strb	r1, [r0]
   17f70:	ldr	r0, [r6, #28]
   17f74:	ldr	r1, [r6, #32]
   17f78:	add	r3, r0, r2
   17f7c:	cmp	r3, r1
   17f80:	bls	17fa8 <argp_failure@@Base+0x10d0>
   17f84:	mov	r0, r6
   17f88:	mov	r1, r2
   17f8c:	mov	r5, r2
   17f90:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   17f94:	cmp	r0, #0
   17f98:	beq	17fc0 <argp_failure@@Base+0x10e8>
   17f9c:	ldr	r6, [fp, #8]
   17fa0:	mov	r2, r5
   17fa4:	ldr	r0, [r6, #28]
   17fa8:	mov	r1, sl
   17fac:	mov	r5, r2
   17fb0:	bl	113a8 <memcpy@plt>
   17fb4:	ldr	r0, [r6, #28]
   17fb8:	add	r0, r0, r5
   17fbc:	str	r0, [r6, #28]
   17fc0:	ldr	r0, [sp, #16]
   17fc4:	ldr	r1, [sp, #12]
   17fc8:	cmp	r0, r1
   17fcc:	beq	17fd4 <argp_failure@@Base+0x10fc>
   17fd0:	bl	142d0 <argp_parse@@Base+0x13dc>
   17fd4:	ldr	sl, [sp, #8]
   17fd8:	cmp	sl, #0
   17fdc:	bne	17e14 <argp_failure@@Base+0xf3c>
   17fe0:	ldr	sl, [sp, #24]
   17fe4:	cmp	sl, #0
   17fe8:	cmpne	r4, #0
   17fec:	beq	17e60 <argp_failure@@Base+0xf88>
   17ff0:	ldr	r2, [sp, #20]
   17ff4:	ldrb	r1, [r7]
   17ff8:	ldrb	r0, [r2]
   17ffc:	cmp	r1, #0
   18000:	beq	18020 <argp_failure@@Base+0x1148>
   18004:	add	r0, r0, #1
   18008:	mov	r4, #0
   1800c:	strb	r0, [r2]
   18010:	clz	r0, r4
   18014:	lsr	r0, r0, #5
   18018:	sub	sp, fp, #28
   1801c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18020:	cmp	r0, #0
   18024:	movne	r0, #0
   18028:	strbne	r0, [r2]
   1802c:	clz	r0, r4
   18030:	lsr	r0, r0, #5
   18034:	sub	sp, fp, #28
   18038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1803c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18040:	add	fp, sp, #28
   18044:	sub	sp, sp, #28
   18048:	ldr	r6, [r0, #12]
   1804c:	mov	r5, r0
   18050:	ldr	r0, [r0, #16]
   18054:	mov	sl, r2
   18058:	mov	r7, #0
   1805c:	str	r3, [sp, #24]
   18060:	str	r1, [sp, #20]
   18064:	cmp	r6, #0
   18068:	str	r0, [sp, #16]
   1806c:	beq	180a8 <argp_failure@@Base+0x11d0>
   18070:	mov	r0, r6
   18074:	mov	r1, #11
   18078:	bl	114b0 <strchr@plt>
   1807c:	cmp	r0, #0
   18080:	mov	r9, r0
   18084:	mov	r4, r0
   18088:	subne	r9, r9, r6
   1808c:	cmp	sl, #0
   18090:	movne	r9, #0
   18094:	cmp	r0, #0
   18098:	addne	r4, r4, #1
   1809c:	cmp	sl, #0
   180a0:	moveq	r4, r6
   180a4:	b	180b0 <argp_failure@@Base+0x11d8>
   180a8:	mov	r9, #0
   180ac:	mov	r4, #0
   180b0:	ldr	r0, [r5, #20]
   180b4:	movw	r6, #1
   180b8:	movt	r6, #512	; 0x200
   180bc:	cmp	r0, #0
   180c0:	beq	181c8 <argp_failure@@Base+0x12f0>
   180c4:	cmp	r9, #0
   180c8:	beq	180dc <argp_failure@@Base+0x1204>
   180cc:	mov	r0, r4
   180d0:	mov	r1, r9
   180d4:	bl	1139c <strndup@plt>
   180d8:	mov	r4, r0
   180dc:	ldr	r1, [sp, #20]
   180e0:	mov	r0, r5
   180e4:	bl	13c20 <argp_parse@@Base+0xd2c>
   180e8:	ldr	r3, [r5, #20]
   180ec:	mov	r7, r0
   180f0:	cmp	sl, #0
   180f4:	mov	r0, r6
   180f8:	mov	r1, r4
   180fc:	addne	r0, r0, #1
   18100:	mov	r2, r7
   18104:	blx	r3
   18108:	mov	r3, r0
   1810c:	cmp	r3, #0
   18110:	str	r7, [sp, #8]
   18114:	beq	181d8 <argp_failure@@Base+0x1300>
   18118:	ldr	r0, [sp, #24]
   1811c:	str	r3, [sp, #12]
   18120:	cmp	r0, #0
   18124:	beq	18168 <argp_failure@@Base+0x1290>
   18128:	ldr	r0, [fp, #12]
   1812c:	ldr	r2, [r0, #28]
   18130:	ldr	r1, [r0, #32]
   18134:	cmp	r2, r1
   18138:	bcc	18158 <argp_failure@@Base+0x1280>
   1813c:	mov	r1, #1
   18140:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18144:	ldr	r3, [sp, #12]
   18148:	cmp	r0, #0
   1814c:	beq	18168 <argp_failure@@Base+0x1290>
   18150:	ldr	r0, [fp, #12]
   18154:	ldr	r2, [r0, #28]
   18158:	add	r1, r2, #1
   1815c:	str	r1, [r0, #28]
   18160:	mov	r1, #10
   18164:	strb	r1, [r2]
   18168:	cmp	r9, #0
   1816c:	beq	181ec <argp_failure@@Base+0x1314>
   18170:	cmp	r3, r4
   18174:	bne	181ec <argp_failure@@Base+0x1314>
   18178:	mov	r7, r5
   1817c:	ldr	r5, [fp, #12]
   18180:	mov	r8, r6
   18184:	ldr	r0, [r5, #28]
   18188:	ldr	r1, [r5, #32]
   1818c:	add	r2, r0, r9
   18190:	cmp	r2, r1
   18194:	bls	181b0 <argp_failure@@Base+0x12d8>
   18198:	mov	r0, r5
   1819c:	mov	r1, r9
   181a0:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   181a4:	cmp	r0, #0
   181a8:	beq	18250 <argp_failure@@Base+0x1378>
   181ac:	ldr	r0, [r5, #28]
   181b0:	mov	r1, r4
   181b4:	mov	r2, r9
   181b8:	bl	113a8 <memcpy@plt>
   181bc:	ldr	r0, [r5, #28]
   181c0:	add	r0, r0, r9
   181c4:	b	1824c <argp_failure@@Base+0x1374>
   181c8:	mov	r3, r4
   181cc:	cmp	r3, #0
   181d0:	str	r7, [sp, #8]
   181d4:	bne	18118 <argp_failure@@Base+0x1240>
   181d8:	mov	r8, #0
   181dc:	cmp	r9, #0
   181e0:	cmpne	r4, #0
   181e4:	beq	18300 <argp_failure@@Base+0x1428>
   181e8:	b	182ec <argp_failure@@Base+0x1414>
   181ec:	mov	r0, r3
   181f0:	mov	r8, r6
   181f4:	mov	r7, r5
   181f8:	bl	114a4 <strlen@plt>
   181fc:	ldr	r5, [fp, #12]
   18200:	cmp	r0, #0
   18204:	beq	18250 <argp_failure@@Base+0x1378>
   18208:	mov	r6, r0
   1820c:	ldr	r0, [r5, #28]
   18210:	ldr	r1, [r5, #32]
   18214:	add	r2, r0, r6
   18218:	cmp	r2, r1
   1821c:	bls	18238 <argp_failure@@Base+0x1360>
   18220:	mov	r0, r5
   18224:	mov	r1, r6
   18228:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   1822c:	cmp	r0, #0
   18230:	beq	18250 <argp_failure@@Base+0x1378>
   18234:	ldr	r0, [r5, #28]
   18238:	ldr	r1, [sp, #12]
   1823c:	mov	r2, r6
   18240:	bl	113a8 <memcpy@plt>
   18244:	ldr	r0, [r5, #28]
   18248:	add	r0, r0, r6
   1824c:	str	r0, [r5, #28]
   18250:	ldr	r1, [r5, #24]
   18254:	ldr	r2, [r5, #28]
   18258:	ldr	r0, [r5, #16]
   1825c:	sub	r1, r2, r1
   18260:	cmp	r1, r0
   18264:	bls	18270 <argp_failure@@Base+0x1398>
   18268:	mov	r0, r5
   1826c:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18270:	ldr	r1, [r5, #20]
   18274:	ldr	r0, [r5, #4]
   18278:	ldr	r2, [sp, #12]
   1827c:	mov	r6, r8
   18280:	bic	r1, r1, r1, asr #31
   18284:	cmp	r1, r0
   18288:	bls	182c8 <argp_failure@@Base+0x13f0>
   1828c:	ldr	r0, [r5, #28]
   18290:	ldr	r1, [r5, #32]
   18294:	cmp	r0, r1
   18298:	bcc	182b8 <argp_failure@@Base+0x13e0>
   1829c:	mov	r0, r5
   182a0:	mov	r1, #1
   182a4:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   182a8:	ldr	r2, [sp, #12]
   182ac:	cmp	r0, #0
   182b0:	beq	182c8 <argp_failure@@Base+0x13f0>
   182b4:	ldr	r0, [r5, #28]
   182b8:	add	r1, r0, #1
   182bc:	str	r1, [r5, #28]
   182c0:	mov	r1, #10
   182c4:	strb	r1, [r0]
   182c8:	mov	r8, #1
   182cc:	cmp	r2, r4
   182d0:	beq	182dc <argp_failure@@Base+0x1404>
   182d4:	mov	r0, r2
   182d8:	bl	142d0 <argp_parse@@Base+0x13dc>
   182dc:	mov	r5, r7
   182e0:	cmp	r9, #0
   182e4:	cmpne	r4, #0
   182e8:	beq	18300 <argp_failure@@Base+0x1428>
   182ec:	ldr	r0, [r5, #20]
   182f0:	cmp	r0, #0
   182f4:	beq	18300 <argp_failure@@Base+0x1428>
   182f8:	mov	r0, r4
   182fc:	bl	142d0 <argp_parse@@Base+0x13dc>
   18300:	str	sl, [sp, #12]
   18304:	cmp	sl, #0
   18308:	ldr	r9, [sp, #24]
   1830c:	ldr	sl, [sp, #20]
   18310:	ldr	r4, [sp, #16]
   18314:	beq	18470 <argp_failure@@Base+0x1598>
   18318:	ldr	r3, [r5, #20]
   1831c:	cmp	r3, #0
   18320:	beq	18470 <argp_failure@@Base+0x1598>
   18324:	ldr	r2, [sp, #8]
   18328:	add	r0, r6, #3
   1832c:	mov	r1, #0
   18330:	blx	r3
   18334:	cmp	r0, #0
   18338:	beq	18470 <argp_failure@@Base+0x1598>
   1833c:	mov	r7, r0
   18340:	orrs	r0, r8, r9
   18344:	beq	18384 <argp_failure@@Base+0x14ac>
   18348:	ldr	r0, [fp, #12]
   1834c:	ldr	r2, [r0, #28]
   18350:	ldr	r1, [r0, #32]
   18354:	cmp	r2, r1
   18358:	bcc	18374 <argp_failure@@Base+0x149c>
   1835c:	mov	r1, #1
   18360:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18364:	cmp	r0, #0
   18368:	beq	18384 <argp_failure@@Base+0x14ac>
   1836c:	ldr	r0, [fp, #12]
   18370:	ldr	r2, [r0, #28]
   18374:	add	r1, r2, #1
   18378:	str	r1, [r0, #28]
   1837c:	mov	r1, #10
   18380:	strb	r1, [r2]
   18384:	mov	r0, r7
   18388:	mov	r5, r4
   1838c:	bl	114a4 <strlen@plt>
   18390:	ldr	r4, [fp, #12]
   18394:	cmp	r0, #0
   18398:	beq	183e4 <argp_failure@@Base+0x150c>
   1839c:	mov	r6, r0
   183a0:	ldr	r0, [r4, #28]
   183a4:	ldr	r1, [r4, #32]
   183a8:	add	r2, r0, r6
   183ac:	cmp	r2, r1
   183b0:	bls	183cc <argp_failure@@Base+0x14f4>
   183b4:	mov	r0, r4
   183b8:	mov	r1, r6
   183bc:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   183c0:	cmp	r0, #0
   183c4:	beq	183e4 <argp_failure@@Base+0x150c>
   183c8:	ldr	r0, [r4, #28]
   183cc:	mov	r1, r7
   183d0:	mov	r2, r6
   183d4:	bl	113a8 <memcpy@plt>
   183d8:	ldr	r0, [r4, #28]
   183dc:	add	r0, r0, r6
   183e0:	str	r0, [r4, #28]
   183e4:	mov	r0, r7
   183e8:	bl	142d0 <argp_parse@@Base+0x13dc>
   183ec:	ldr	r1, [r4, #24]
   183f0:	ldr	r2, [r4, #28]
   183f4:	ldr	r0, [r4, #16]
   183f8:	sub	r1, r2, r1
   183fc:	cmp	r1, r0
   18400:	bls	1840c <argp_failure@@Base+0x1534>
   18404:	mov	r0, r4
   18408:	bl	1a6d8 <argp_failure@@Base+0x3800>
   1840c:	ldr	r1, [r4, #20]
   18410:	ldr	r0, [r4, #4]
   18414:	mov	r8, #1
   18418:	bic	r1, r1, r1, asr #31
   1841c:	cmp	r1, r0
   18420:	bls	1846c <argp_failure@@Base+0x1594>
   18424:	ldr	r0, [r4, #28]
   18428:	ldr	r1, [r4, #32]
   1842c:	cmp	r0, r1
   18430:	bcc	18458 <argp_failure@@Base+0x1580>
   18434:	mov	r0, r4
   18438:	mov	r1, #1
   1843c:	mov	r8, #1
   18440:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18444:	cmp	r0, #0
   18448:	mov	r4, r5
   1844c:	beq	18470 <argp_failure@@Base+0x1598>
   18450:	ldr	r4, [fp, #12]
   18454:	ldr	r0, [r4, #28]
   18458:	add	r1, r0, #1
   1845c:	mov	r8, #1
   18460:	str	r1, [r4, #28]
   18464:	mov	r1, #10
   18468:	strb	r1, [r0]
   1846c:	mov	r4, r5
   18470:	cmp	r4, #0
   18474:	beq	18514 <argp_failure@@Base+0x163c>
   18478:	ldr	r0, [r4]
   1847c:	cmp	r0, #0
   18480:	beq	18514 <argp_failure@@Base+0x163c>
   18484:	ldr	r7, [fp, #8]
   18488:	cmp	r7, #0
   1848c:	beq	184d8 <argp_failure@@Base+0x1600>
   18490:	add	r6, r4, #16
   18494:	ldr	r4, [fp, #12]
   18498:	ldr	r5, [sp, #12]
   1849c:	cmp	r9, #0
   184a0:	movwne	r9, #1
   184a4:	cmp	r8, #0
   184a8:	bne	18514 <argp_failure@@Base+0x163c>
   184ac:	mov	r1, sl
   184b0:	mov	r2, r5
   184b4:	mov	r3, r9
   184b8:	str	r7, [sp]
   184bc:	str	r4, [sp, #4]
   184c0:	bl	1803c <argp_failure@@Base+0x1164>
   184c4:	mov	r8, r0
   184c8:	ldr	r0, [r6], #16
   184cc:	cmp	r0, #0
   184d0:	bne	184a4 <argp_failure@@Base+0x15cc>
   184d4:	b	18514 <argp_failure@@Base+0x163c>
   184d8:	ldr	r5, [fp, #12]
   184dc:	ldr	r7, [sp, #12]
   184e0:	add	r4, r4, #16
   184e4:	mov	r6, #0
   184e8:	orrs	r3, r8, r9
   184ec:	mov	r1, sl
   184f0:	mov	r2, r7
   184f4:	str	r6, [sp]
   184f8:	str	r5, [sp, #4]
   184fc:	movwne	r3, #1
   18500:	bl	1803c <argp_failure@@Base+0x1164>
   18504:	orr	r8, r0, r8
   18508:	ldr	r0, [r4], #16
   1850c:	cmp	r0, #0
   18510:	bne	184e8 <argp_failure@@Base+0x1610>
   18514:	mov	r0, r8
   18518:	sub	sp, fp, #28
   1851c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18524:	add	fp, sp, #28
   18528:	sub	sp, sp, #28
   1852c:	mov	r7, r0
   18530:	ldr	r0, [r0, #16]
   18534:	mov	r6, r1
   18538:	cmp	r0, #0
   1853c:	beq	18584 <argp_failure@@Base+0x16ac>
   18540:	mov	r2, r0
   18544:	mov	r1, r2
   18548:	ldr	r2, [r2, #12]
   1854c:	cmp	r2, #0
   18550:	bne	18544 <argp_failure@@Base+0x166c>
   18554:	add	r2, r1, #8
   18558:	ldr	r1, [r6, #16]
   1855c:	ldr	r3, [r2]
   18560:	cmp	r1, #0
   18564:	beq	18598 <argp_failure@@Base+0x16c0>
   18568:	mov	r2, r1
   1856c:	mov	r5, r2
   18570:	ldr	r2, [r2, #12]
   18574:	cmp	r2, #0
   18578:	bne	1856c <argp_failure@@Base+0x1694>
   1857c:	add	r2, r5, #8
   18580:	b	1859c <argp_failure@@Base+0x16c4>
   18584:	add	r2, r7, #12
   18588:	ldr	r1, [r6, #16]
   1858c:	ldr	r3, [r2]
   18590:	cmp	r1, #0
   18594:	bne	18568 <argp_failure@@Base+0x1690>
   18598:	add	r2, r6, #12
   1859c:	ldr	r5, [r2]
   185a0:	orr	r4, r5, r3
   185a4:	sub	r2, r3, r5
   185a8:	cmn	r4, #1
   185ac:	mov	r4, r2
   185b0:	suble	r4, r5, r3
   185b4:	ands	r3, r5, r3
   185b8:	movmi	r4, r2
   185bc:	cmp	r4, #0
   185c0:	bne	185e0 <argp_failure@@Base+0x1708>
   185c4:	cmp	r0, #0
   185c8:	mov	r4, r0
   185cc:	movwne	r4, #1
   185d0:	cmp	r1, #0
   185d4:	subne	r4, r4, #1
   185d8:	cmp	r4, #0
   185dc:	beq	185ec <argp_failure@@Base+0x1714>
   185e0:	mov	r0, r4
   185e4:	sub	sp, fp, #28
   185e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185ec:	cmp	r0, #0
   185f0:	beq	18670 <argp_failure@@Base+0x1798>
   185f4:	ldr	r3, [r1, #20]
   185f8:	ldr	r2, [r0, #20]
   185fc:	cmp	r2, r3
   18600:	ble	18630 <argp_failure@@Base+0x1758>
   18604:	ldr	r0, [r0, #12]
   18608:	ldr	r2, [r0, #20]
   1860c:	cmp	r2, r3
   18610:	bgt	18604 <argp_failure@@Base+0x172c>
   18614:	bl	18ab8 <argp_failure@@Base+0x1be0>
   18618:	cmp	r0, #0
   1861c:	mov	r4, r0
   18620:	movweq	r4, #1
   18624:	mov	r0, r4
   18628:	sub	sp, fp, #28
   1862c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18630:	bge	18660 <argp_failure@@Base+0x1788>
   18634:	ldr	r1, [r1, #12]
   18638:	ldr	r3, [r1, #20]
   1863c:	cmp	r2, r3
   18640:	blt	18634 <argp_failure@@Base+0x175c>
   18644:	bl	18ab8 <argp_failure@@Base+0x1be0>
   18648:	cmp	r0, #0
   1864c:	mov	r4, r0
   18650:	mvneq	r4, #0
   18654:	mov	r0, r4
   18658:	sub	sp, fp, #28
   1865c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18660:	bl	18ab8 <argp_failure@@Base+0x1be0>
   18664:	mov	r4, r0
   18668:	cmp	r0, #0
   1866c:	bne	185e0 <argp_failure@@Base+0x1708>
   18670:	ldr	r0, [r7, #12]
   18674:	ldr	r1, [r6, #12]
   18678:	orr	r2, r1, r0
   1867c:	sub	r3, r0, r1
   18680:	cmn	r2, #1
   18684:	mov	r4, r3
   18688:	suble	r4, r1, r0
   1868c:	ands	r0, r1, r0
   18690:	movmi	r4, r3
   18694:	cmp	r4, #0
   18698:	bne	185e0 <argp_failure@@Base+0x1708>
   1869c:	ldr	r4, [r7, #4]
   186a0:	ldr	sl, [r7]
   186a4:	mov	r9, #0
   186a8:	cmp	r4, #0
   186ac:	beq	186f0 <argp_failure@@Base+0x1818>
   186b0:	add	r0, sl, #12
   186b4:	mov	r1, r4
   186b8:	ldr	r9, [r0, #-12]
   186bc:	cmp	r9, #0
   186c0:	bne	186dc <argp_failure@@Base+0x1804>
   186c4:	add	r0, r0, #24
   186c8:	subs	r1, r1, #1
   186cc:	beq	186ec <argp_failure@@Base+0x1814>
   186d0:	ldr	r9, [r0, #-12]
   186d4:	cmp	r9, #0
   186d8:	beq	186c4 <argp_failure@@Base+0x17ec>
   186dc:	ldrb	r2, [r0]
   186e0:	tst	r2, #2
   186e4:	bne	186c4 <argp_failure@@Base+0x17ec>
   186e8:	b	186f0 <argp_failure@@Base+0x1818>
   186ec:	mov	r9, #0
   186f0:	ldr	r3, [r6, #4]
   186f4:	ldr	ip, [r6]
   186f8:	cmp	r3, #0
   186fc:	beq	1873c <argp_failure@@Base+0x1864>
   18700:	add	r0, ip, #12
   18704:	mov	r1, r3
   18708:	ldr	r5, [r0, #-12]
   1870c:	cmp	r5, #0
   18710:	bne	1872c <argp_failure@@Base+0x1854>
   18714:	add	r0, r0, #24
   18718:	subs	r1, r1, #1
   1871c:	beq	1873c <argp_failure@@Base+0x1864>
   18720:	ldr	r5, [r0, #-12]
   18724:	cmp	r5, #0
   18728:	beq	18714 <argp_failure@@Base+0x183c>
   1872c:	ldrb	r2, [r0]
   18730:	tst	r2, #2
   18734:	bne	18714 <argp_failure@@Base+0x183c>
   18738:	b	18740 <argp_failure@@Base+0x1868>
   1873c:	mov	r5, #0
   18740:	ldr	r1, [sl, #12]
   18744:	mov	r8, #0
   18748:	cmp	r9, #0
   1874c:	str	r4, [sp, #12]
   18750:	str	r3, [sp, #16]
   18754:	str	sl, [sp, #8]
   18758:	str	r1, [sp, #24]
   1875c:	beq	187d4 <argp_failure@@Base+0x18fc>
   18760:	ands	r0, r1, #8
   18764:	beq	187d4 <argp_failure@@Base+0x18fc>
   18768:	str	ip, [sp, #20]
   1876c:	bl	11480 <__ctype_b_loc@plt>
   18770:	ldrb	r1, [r9]
   18774:	ldr	r0, [r0]
   18778:	add	r2, r0, r1, lsl #1
   1877c:	ldrb	r2, [r2, #1]
   18780:	tst	r2, #32
   18784:	beq	1879c <argp_failure@@Base+0x18c4>
   18788:	ldrb	r1, [r9, #1]!
   1878c:	add	r2, r0, r1, lsl #1
   18790:	ldrb	r2, [r2, #1]
   18794:	tst	r2, #32
   18798:	bne	18788 <argp_failure@@Base+0x18b0>
   1879c:	ldr	ip, [sp, #20]
   187a0:	subs	r4, r1, #45	; 0x2d
   187a4:	movwne	r4, #1
   187a8:	cmp	r1, #0
   187ac:	beq	187cc <argp_failure@@Base+0x18f4>
   187b0:	uxtb	r1, r1
   187b4:	ldrb	r1, [r0, r1, lsl #1]
   187b8:	tst	r1, #8
   187bc:	bne	187cc <argp_failure@@Base+0x18f4>
   187c0:	ldrb	r1, [r9, #1]!
   187c4:	cmp	r1, #0
   187c8:	bne	187b0 <argp_failure@@Base+0x18d8>
   187cc:	ldr	r1, [sp, #24]
   187d0:	b	187d8 <argp_failure@@Base+0x1900>
   187d4:	mov	r4, #0
   187d8:	ldr	r0, [ip, #12]
   187dc:	cmp	r5, #0
   187e0:	str	r0, [sp, #4]
   187e4:	andsne	r0, r0, #8
   187e8:	beq	18854 <argp_failure@@Base+0x197c>
   187ec:	mov	sl, ip
   187f0:	bl	11480 <__ctype_b_loc@plt>
   187f4:	ldrb	r1, [r5]
   187f8:	ldr	r0, [r0]
   187fc:	add	r2, r0, r1, lsl #1
   18800:	ldrb	r2, [r2, #1]
   18804:	tst	r2, #32
   18808:	beq	18820 <argp_failure@@Base+0x1948>
   1880c:	ldrb	r1, [r5, #1]!
   18810:	add	r2, r0, r1, lsl #1
   18814:	ldrb	r2, [r2, #1]
   18818:	tst	r2, #32
   1881c:	bne	1880c <argp_failure@@Base+0x1934>
   18820:	subs	r8, r1, #45	; 0x2d
   18824:	mov	ip, sl
   18828:	movwne	r8, #1
   1882c:	cmp	r1, #0
   18830:	beq	18850 <argp_failure@@Base+0x1978>
   18834:	uxtb	r1, r1
   18838:	ldrb	r1, [r0, r1, lsl #1]
   1883c:	tst	r1, #8
   18840:	bne	18850 <argp_failure@@Base+0x1978>
   18844:	ldrb	r1, [r5, #1]!
   18848:	cmp	r1, #0
   1884c:	bne	18834 <argp_failure@@Base+0x195c>
   18850:	ldr	r1, [sp, #24]
   18854:	subs	r4, r4, r8
   18858:	bne	185e0 <argp_failure@@Base+0x1708>
   1885c:	ldr	r0, [sp, #12]
   18860:	mov	r2, #0
   18864:	str	ip, [sp, #20]
   18868:	cmp	r0, #0
   1886c:	beq	18904 <argp_failure@@Base+0x1a2c>
   18870:	sub	sl, r0, #1
   18874:	ldr	r0, [sp, #8]
   18878:	ldr	r4, [r7, #8]
   1887c:	add	r8, r0, #36	; 0x24
   18880:	tst	r1, #8
   18884:	beq	188ac <argp_failure@@Base+0x19d4>
   18888:	mov	r2, #0
   1888c:	cmp	sl, #0
   18890:	beq	18904 <argp_failure@@Base+0x1a2c>
   18894:	cmp	r2, #0
   18898:	bne	18904 <argp_failure@@Base+0x1a2c>
   1889c:	ldr	r1, [r8], #24
   188a0:	sub	sl, sl, #1
   188a4:	tst	r1, #8
   188a8:	bne	18888 <argp_failure@@Base+0x19b0>
   188ac:	ldr	r7, [r8, #-32]	; 0xffffffe0
   188b0:	sub	r0, r7, #1
   188b4:	cmp	r0, #254	; 0xfe
   188b8:	bhi	18888 <argp_failure@@Base+0x19b0>
   188bc:	str	r1, [sp, #24]
   188c0:	bl	11480 <__ctype_b_loc@plt>
   188c4:	ldr	r0, [r0]
   188c8:	add	r0, r0, r7, lsl #1
   188cc:	ldrb	r0, [r0, #1]
   188d0:	tst	r0, #64	; 0x40
   188d4:	beq	18888 <argp_failure@@Base+0x19b0>
   188d8:	ldrb	r0, [r4]
   188dc:	mov	r2, r7
   188e0:	cmp	r7, r0
   188e4:	bne	18888 <argp_failure@@Base+0x19b0>
   188e8:	ldr	r0, [sp, #24]
   188ec:	add	r4, r4, #1
   188f0:	tst	r0, #2
   188f4:	mov	r0, #0
   188f8:	movne	r2, r0
   188fc:	cmp	sl, #0
   18900:	bne	18894 <argp_failure@@Base+0x19bc>
   18904:	ldr	r0, [sp, #16]
   18908:	mov	sl, #0
   1890c:	mov	r1, r2
   18910:	str	r2, [sp, #24]
   18914:	cmp	r0, #0
   18918:	beq	189b4 <argp_failure@@Base+0x1adc>
   1891c:	sub	r7, r0, #1
   18920:	ldr	r0, [sp, #20]
   18924:	ldr	r6, [r6, #8]
   18928:	ldr	r4, [sp, #4]
   1892c:	add	r8, r0, #36	; 0x24
   18930:	tst	r4, #8
   18934:	bne	18940 <argp_failure@@Base+0x1a68>
   18938:	b	18964 <argp_failure@@Base+0x1a8c>
   1893c:	ldr	r2, [sp, #24]
   18940:	mov	sl, #0
   18944:	cmp	r7, #0
   18948:	beq	189b4 <argp_failure@@Base+0x1adc>
   1894c:	cmp	sl, #0
   18950:	bne	189b4 <argp_failure@@Base+0x1adc>
   18954:	ldr	r4, [r8], #24
   18958:	sub	r7, r7, #1
   1895c:	tst	r4, #8
   18960:	bne	18940 <argp_failure@@Base+0x1a68>
   18964:	ldr	sl, [r8, #-32]	; 0xffffffe0
   18968:	sub	r0, sl, #1
   1896c:	cmp	r0, #254	; 0xfe
   18970:	bhi	18940 <argp_failure@@Base+0x1a68>
   18974:	bl	11480 <__ctype_b_loc@plt>
   18978:	ldr	r0, [r0]
   1897c:	add	r0, r0, sl, lsl #1
   18980:	ldrb	r0, [r0, #1]
   18984:	tst	r0, #64	; 0x40
   18988:	beq	1893c <argp_failure@@Base+0x1a64>
   1898c:	ldrb	r0, [r6]
   18990:	ldr	r2, [sp, #24]
   18994:	cmp	sl, r0
   18998:	bne	18940 <argp_failure@@Base+0x1a68>
   1899c:	tst	r4, #2
   189a0:	mov	r0, #0
   189a4:	add	r6, r6, #1
   189a8:	movne	sl, r0
   189ac:	cmp	r7, #0
   189b0:	bne	1894c <argp_failure@@Base+0x1a74>
   189b4:	tst	r2, #255	; 0xff
   189b8:	mov	r6, r2
   189bc:	beq	189dc <argp_failure@@Base+0x1b04>
   189c0:	tst	sl, #255	; 0xff
   189c4:	mov	r7, sl
   189c8:	bne	18a10 <argp_failure@@Base+0x1b38>
   189cc:	cmp	r5, #0
   189d0:	beq	189f8 <argp_failure@@Base+0x1b20>
   189d4:	ldrb	r7, [r5]
   189d8:	b	18a10 <argp_failure@@Base+0x1b38>
   189dc:	cmp	r9, #0
   189e0:	beq	18a00 <argp_failure@@Base+0x1b28>
   189e4:	ldrb	r6, [r9]
   189e8:	tst	sl, #255	; 0xff
   189ec:	mov	r7, sl
   189f0:	bne	18a10 <argp_failure@@Base+0x1b38>
   189f4:	b	189cc <argp_failure@@Base+0x1af4>
   189f8:	mov	r7, #0
   189fc:	b	18a10 <argp_failure@@Base+0x1b38>
   18a00:	mov	r6, #0
   18a04:	tst	sl, #255	; 0xff
   18a08:	mov	r7, sl
   18a0c:	beq	189cc <argp_failure@@Base+0x1af4>
   18a10:	bl	11468 <__ctype_tolower_loc@plt>
   18a14:	ldr	r2, [r0]
   18a18:	uxtb	r0, r7
   18a1c:	uxtb	r1, r6
   18a20:	ldr	r3, [r2, r0, lsl #2]
   18a24:	ldr	r2, [r2, r1, lsl #2]
   18a28:	subs	r4, r2, r3
   18a2c:	subseq	r4, r0, r1
   18a30:	bne	185e0 <argp_failure@@Base+0x1708>
   18a34:	ldr	r0, [sp, #24]
   18a38:	uxtb	r4, r0
   18a3c:	cmp	r4, #0
   18a40:	movwne	r4, #1
   18a44:	tst	sl, #255	; 0xff
   18a48:	subne	r4, r4, #1
   18a4c:	cmp	r4, #0
   18a50:	bne	185e0 <argp_failure@@Base+0x1708>
   18a54:	ldr	r0, [sp, #24]
   18a58:	tst	r0, #255	; 0xff
   18a5c:	beq	18a70 <argp_failure@@Base+0x1b98>
   18a60:	mov	r4, #0
   18a64:	mov	r0, r4
   18a68:	sub	sp, fp, #28
   18a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a70:	cmp	r9, #0
   18a74:	mov	r4, r9
   18a78:	movwne	r4, #1
   18a7c:	cmp	r5, #0
   18a80:	subne	r4, r4, #1
   18a84:	cmp	r4, #0
   18a88:	bne	185e0 <argp_failure@@Base+0x1708>
   18a8c:	cmp	r9, #0
   18a90:	beq	18a60 <argp_failure@@Base+0x1b88>
   18a94:	mov	r0, r9
   18a98:	mov	r1, r5
   18a9c:	bl	113e4 <strcasecmp@plt>
   18aa0:	cmp	r0, #0
   18aa4:	mov	r4, r0
   18aa8:	moveq	r4, #0
   18aac:	mov	r0, r4
   18ab0:	sub	sp, fp, #28
   18ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ab8:	push	{r4, r5, fp, lr}
   18abc:	add	fp, sp, #8
   18ac0:	mov	r4, r1
   18ac4:	mov	r5, r0
   18ac8:	ldr	r1, [r1, #12]
   18acc:	ldr	r0, [r0, #12]
   18ad0:	cmp	r0, r1
   18ad4:	beq	18ae8 <argp_failure@@Base+0x1c10>
   18ad8:	bl	18ab8 <argp_failure@@Base+0x1be0>
   18adc:	cmp	r0, #0
   18ae0:	beq	18ae8 <argp_failure@@Base+0x1c10>
   18ae4:	pop	{r4, r5, fp, pc}
   18ae8:	ldr	r1, [r5, #8]
   18aec:	ldr	r2, [r4, #8]
   18af0:	orr	r0, r2, r1
   18af4:	sub	r3, r1, r2
   18af8:	cmn	r0, #1
   18afc:	mov	r0, r3
   18b00:	suble	r0, r2, r1
   18b04:	ands	r1, r2, r1
   18b08:	movmi	r0, r3
   18b0c:	cmp	r0, #0
   18b10:	popne	{r4, r5, fp, pc}
   18b14:	ldr	r0, [r5, #4]
   18b18:	ldr	r1, [r4, #4]
   18b1c:	sub	r0, r1, r0
   18b20:	pop	{r4, r5, fp, pc}
   18b24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18b28:	add	fp, sp, #24
   18b2c:	mov	r4, r0
   18b30:	ldr	r0, [r1, #12]
   18b34:	mov	r5, r1
   18b38:	cmp	r0, #0
   18b3c:	beq	18bb8 <argp_failure@@Base+0x1ce0>
   18b40:	ldr	r1, [r5, #8]
   18b44:	ldr	r0, [r5]
   18b48:	ldr	r6, [r1]
   18b4c:	ldr	r7, [r0, #16]
   18b50:	cmp	r6, #0
   18b54:	ldrne	r1, [r1, #4]
   18b58:	cmpne	r1, #0
   18b5c:	bne	18c00 <argp_failure@@Base+0x1d28>
   18b60:	cmp	r7, #0
   18b64:	beq	18ca0 <argp_failure@@Base+0x1dc8>
   18b68:	ldr	r0, [r7]
   18b6c:	cmp	r0, #0
   18b70:	beq	18ca0 <argp_failure@@Base+0x1dc8>
   18b74:	ldrb	r1, [r0]
   18b78:	cmp	r1, #0
   18b7c:	beq	18ca0 <argp_failure@@Base+0x1dc8>
   18b80:	cmp	r6, #0
   18b84:	beq	18c64 <argp_failure@@Base+0x1d8c>
   18b88:	ldr	r1, [r6, #16]
   18b8c:	cmp	r1, r7
   18b90:	beq	18ca0 <argp_failure@@Base+0x1dc8>
   18b94:	cmp	r1, #0
   18b98:	beq	18c58 <argp_failure@@Base+0x1d80>
   18b9c:	ldr	r1, [r1, #12]
   18ba0:	cmp	r1, r7
   18ba4:	cmpne	r1, #0
   18ba8:	bne	18b9c <argp_failure@@Base+0x1cc4>
   18bac:	cmp	r1, r7
   18bb0:	bne	18c64 <argp_failure@@Base+0x1d8c>
   18bb4:	b	18ca0 <argp_failure@@Base+0x1dc8>
   18bb8:	ldr	r6, [r5, #4]
   18bbc:	ldr	r0, [r6, #28]
   18bc0:	ldr	r1, [r6, #32]
   18bc4:	add	r2, r0, #2
   18bc8:	cmp	r2, r1
   18bcc:	bls	18be8 <argp_failure@@Base+0x1d10>
   18bd0:	mov	r0, r6
   18bd4:	mov	r1, #2
   18bd8:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18bdc:	cmp	r0, #0
   18be0:	beq	18ca8 <argp_failure@@Base+0x1dd0>
   18be4:	ldr	r0, [r6, #28]
   18be8:	movw	r1, #8236	; 0x202c
   18bec:	strh	r1, [r0]
   18bf0:	ldr	r0, [r6, #28]
   18bf4:	add	r0, r0, #2
   18bf8:	str	r0, [r6, #28]
   18bfc:	b	18ca8 <argp_failure@@Base+0x1dd0>
   18c00:	ldr	r1, [r6, #12]
   18c04:	ldr	r0, [r0, #12]
   18c08:	cmp	r0, r1
   18c0c:	beq	18b60 <argp_failure@@Base+0x1c88>
   18c10:	ldr	r8, [r5, #4]
   18c14:	ldr	r0, [r8, #28]
   18c18:	ldr	r1, [r8, #32]
   18c1c:	cmp	r0, r1
   18c20:	bcc	18c3c <argp_failure@@Base+0x1d64>
   18c24:	mov	r0, r8
   18c28:	mov	r1, #1
   18c2c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18c30:	cmp	r0, #0
   18c34:	beq	18b60 <argp_failure@@Base+0x1c88>
   18c38:	ldr	r0, [r8, #28]
   18c3c:	add	r1, r0, #1
   18c40:	str	r1, [r8, #28]
   18c44:	mov	r1, #10
   18c48:	strb	r1, [r0]
   18c4c:	cmp	r7, #0
   18c50:	bne	18b68 <argp_failure@@Base+0x1c90>
   18c54:	b	18ca0 <argp_failure@@Base+0x1dc8>
   18c58:	mov	r1, #0
   18c5c:	cmp	r1, r7
   18c60:	beq	18ca0 <argp_failure@@Base+0x1dc8>
   18c64:	ldr	r1, [r5, #4]
   18c68:	mov	r2, r5
   18c6c:	ldr	r8, [r1, #12]
   18c70:	ldr	r1, [r7, #16]
   18c74:	bl	18d30 <argp_failure@@Base+0x1e58>
   18c78:	ldr	r6, [r5, #4]
   18c7c:	ldr	r1, [r6, #24]
   18c80:	ldr	r2, [r6, #28]
   18c84:	ldr	r0, [r6, #16]
   18c88:	sub	r1, r2, r1
   18c8c:	cmp	r1, r0
   18c90:	bls	18c9c <argp_failure@@Base+0x1dc4>
   18c94:	mov	r0, r6
   18c98:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18c9c:	str	r8, [r6, #12]
   18ca0:	mov	r0, #0
   18ca4:	str	r0, [r5, #12]
   18ca8:	ldr	r5, [r5, #4]
   18cac:	ldr	r1, [r5, #24]
   18cb0:	ldr	r2, [r5, #28]
   18cb4:	ldr	r0, [r5, #16]
   18cb8:	sub	r1, r2, r1
   18cbc:	cmp	r1, r0
   18cc0:	bls	18ccc <argp_failure@@Base+0x1df4>
   18cc4:	mov	r0, r5
   18cc8:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18ccc:	ldr	r0, [r5, #20]
   18cd0:	cmp	r0, #0
   18cd4:	subgt	r4, r4, r0
   18cd8:	cmp	r4, #1
   18cdc:	blt	18d2c <argp_failure@@Base+0x1e54>
   18ce0:	mov	r6, #32
   18ce4:	b	18cfc <argp_failure@@Base+0x1e24>
   18ce8:	add	r1, r0, #1
   18cec:	str	r1, [r5, #28]
   18cf0:	strb	r6, [r0]
   18cf4:	cmp	r4, #0
   18cf8:	ble	18d2c <argp_failure@@Base+0x1e54>
   18cfc:	ldr	r0, [r5, #28]
   18d00:	ldr	r1, [r5, #32]
   18d04:	sub	r4, r4, #1
   18d08:	cmp	r0, r1
   18d0c:	bcc	18ce8 <argp_failure@@Base+0x1e10>
   18d10:	mov	r0, r5
   18d14:	mov	r1, #1
   18d18:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18d1c:	cmp	r0, #0
   18d20:	beq	18cf4 <argp_failure@@Base+0x1e1c>
   18d24:	ldr	r0, [r5, #28]
   18d28:	b	18ce8 <argp_failure@@Base+0x1e10>
   18d2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d34:	add	fp, sp, #28
   18d38:	sub	sp, sp, #4
   18d3c:	mov	r9, r2
   18d40:	mov	r8, r0
   18d44:	cmp	r1, #0
   18d48:	mov	r6, r0
   18d4c:	beq	18d8c <argp_failure@@Base+0x1eb4>
   18d50:	ldr	r0, [r1, #20]
   18d54:	mov	r4, r1
   18d58:	mov	r6, r8
   18d5c:	cmp	r0, #0
   18d60:	beq	18d8c <argp_failure@@Base+0x1eb4>
   18d64:	ldr	r1, [r9, #16]
   18d68:	mov	r0, r4
   18d6c:	bl	13c20 <argp_parse@@Base+0xd2c>
   18d70:	ldr	r3, [r4, #20]
   18d74:	mov	r2, r0
   18d78:	movw	r0, #3
   18d7c:	mov	r1, r8
   18d80:	movt	r0, #512	; 0x200
   18d84:	blx	r3
   18d88:	mov	r6, r0
   18d8c:	cmp	r6, #0
   18d90:	beq	18fbc <argp_failure@@Base+0x20e4>
   18d94:	ldrb	r0, [r6]
   18d98:	cmp	r0, #0
   18d9c:	beq	18fb0 <argp_failure@@Base+0x20d8>
   18da0:	ldr	r0, [r9, #8]
   18da4:	ldr	r0, [r0]
   18da8:	cmp	r0, #0
   18dac:	beq	18dec <argp_failure@@Base+0x1f14>
   18db0:	ldr	r4, [r9, #4]
   18db4:	ldr	r0, [r4, #28]
   18db8:	ldr	r1, [r4, #32]
   18dbc:	cmp	r0, r1
   18dc0:	bcc	18ddc <argp_failure@@Base+0x1f04>
   18dc4:	mov	r0, r4
   18dc8:	mov	r1, #1
   18dcc:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18dd0:	cmp	r0, #0
   18dd4:	beq	18dec <argp_failure@@Base+0x1f14>
   18dd8:	ldr	r0, [r4, #28]
   18ddc:	add	r1, r0, #1
   18de0:	str	r1, [r4, #28]
   18de4:	mov	r1, #10
   18de8:	strb	r1, [r0]
   18dec:	ldr	r7, [r9, #4]
   18df0:	movw	sl, #6256	; 0x1870
   18df4:	movt	sl, #3
   18df8:	ldr	r4, [sl, #24]
   18dfc:	ldr	r1, [r7, #24]
   18e00:	ldr	r2, [r7, #28]
   18e04:	ldr	r0, [r7, #16]
   18e08:	sub	r1, r2, r1
   18e0c:	cmp	r1, r0
   18e10:	bls	18e1c <argp_failure@@Base+0x1f44>
   18e14:	mov	r0, r7
   18e18:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18e1c:	ldr	r0, [r7, #20]
   18e20:	cmp	r0, #0
   18e24:	subgt	r4, r4, r0
   18e28:	cmp	r4, #1
   18e2c:	blt	18e7c <argp_failure@@Base+0x1fa4>
   18e30:	mov	r5, #32
   18e34:	b	18e4c <argp_failure@@Base+0x1f74>
   18e38:	add	r1, r0, #1
   18e3c:	str	r1, [r7, #28]
   18e40:	strb	r5, [r0]
   18e44:	cmp	r4, #0
   18e48:	ble	18e7c <argp_failure@@Base+0x1fa4>
   18e4c:	ldr	r0, [r7, #28]
   18e50:	ldr	r1, [r7, #32]
   18e54:	sub	r4, r4, #1
   18e58:	cmp	r0, r1
   18e5c:	bcc	18e38 <argp_failure@@Base+0x1f60>
   18e60:	mov	r0, r7
   18e64:	mov	r1, #1
   18e68:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18e6c:	cmp	r0, #0
   18e70:	beq	18e44 <argp_failure@@Base+0x1f6c>
   18e74:	ldr	r0, [r7, #28]
   18e78:	b	18e38 <argp_failure@@Base+0x1f60>
   18e7c:	ldr	r4, [r9, #4]
   18e80:	ldr	r5, [sl, #24]
   18e84:	ldr	r1, [r4, #24]
   18e88:	ldr	r2, [r4, #28]
   18e8c:	ldr	r0, [r4, #16]
   18e90:	mov	r7, r4
   18e94:	sub	r1, r2, r1
   18e98:	mov	r2, sl
   18e9c:	mov	sl, r5
   18ea0:	cmp	r1, r0
   18ea4:	bls	18ecc <argp_failure@@Base+0x1ff4>
   18ea8:	mov	r0, r4
   18eac:	mov	r7, r2
   18eb0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18eb4:	ldr	sl, [r7, #24]
   18eb8:	ldr	r7, [r9, #4]
   18ebc:	ldr	r1, [r7, #24]
   18ec0:	ldr	r2, [r7, #28]
   18ec4:	ldr	r0, [r7, #16]
   18ec8:	sub	r1, r2, r1
   18ecc:	str	r5, [r4, #4]
   18ed0:	cmp	r1, r0
   18ed4:	mov	r5, r7
   18ed8:	bls	18ee8 <argp_failure@@Base+0x2010>
   18edc:	mov	r0, r7
   18ee0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18ee4:	ldr	r5, [r9, #4]
   18ee8:	mov	r0, r6
   18eec:	str	sl, [r7, #12]
   18ef0:	bl	114a4 <strlen@plt>
   18ef4:	cmp	r0, #0
   18ef8:	beq	18f44 <argp_failure@@Base+0x206c>
   18efc:	mov	r4, r0
   18f00:	ldr	r0, [r5, #28]
   18f04:	ldr	r1, [r5, #32]
   18f08:	add	r2, r0, r4
   18f0c:	cmp	r2, r1
   18f10:	bls	18f2c <argp_failure@@Base+0x2054>
   18f14:	mov	r0, r5
   18f18:	mov	r1, r4
   18f1c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18f20:	cmp	r0, #0
   18f24:	beq	18f44 <argp_failure@@Base+0x206c>
   18f28:	ldr	r0, [r5, #28]
   18f2c:	mov	r1, r6
   18f30:	mov	r2, r4
   18f34:	bl	113a8 <memcpy@plt>
   18f38:	ldr	r0, [r5, #28]
   18f3c:	add	r0, r0, r4
   18f40:	str	r0, [r5, #28]
   18f44:	ldr	r5, [r9, #4]
   18f48:	ldr	r2, [r5, #24]
   18f4c:	ldr	r0, [r5, #28]
   18f50:	ldr	r1, [r5, #16]
   18f54:	mov	r4, r5
   18f58:	sub	r2, r0, r2
   18f5c:	cmp	r2, r1
   18f60:	bls	18f74 <argp_failure@@Base+0x209c>
   18f64:	mov	r0, r5
   18f68:	bl	1a6d8 <argp_failure@@Base+0x3800>
   18f6c:	ldr	r4, [r9, #4]
   18f70:	ldr	r0, [r4, #28]
   18f74:	mov	r1, #0
   18f78:	str	r1, [r5, #4]
   18f7c:	ldr	r1, [r4, #32]
   18f80:	cmp	r0, r1
   18f84:	bcc	18fa0 <argp_failure@@Base+0x20c8>
   18f88:	mov	r0, r4
   18f8c:	mov	r1, #1
   18f90:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   18f94:	cmp	r0, #0
   18f98:	beq	18fb0 <argp_failure@@Base+0x20d8>
   18f9c:	ldr	r0, [r4, #28]
   18fa0:	add	r1, r0, #1
   18fa4:	str	r1, [r4, #28]
   18fa8:	mov	r1, #10
   18fac:	strb	r1, [r0]
   18fb0:	ldr	r0, [r9, #8]
   18fb4:	mov	r1, #1
   18fb8:	str	r1, [r0, #4]
   18fbc:	cmp	r6, r8
   18fc0:	beq	18fd4 <argp_failure@@Base+0x20fc>
   18fc4:	mov	r0, r6
   18fc8:	sub	sp, fp, #28
   18fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fd0:	b	142d0 <argp_parse@@Base+0x13dc>
   18fd4:	sub	sp, fp, #28
   18fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fe0:	add	fp, sp, #28
   18fe4:	sub	sp, sp, #92	; 0x5c
   18fe8:	mvn	r4, #0
   18fec:	cmp	r0, #1
   18ff0:	blt	19b3c <argp_failure@@Base+0x2c64>
   18ff4:	ldr	ip, [fp, #16]
   18ff8:	mov	r9, r2
   18ffc:	mov	r2, r0
   19000:	mov	r8, r1
   19004:	mov	r0, #0
   19008:	str	r3, [fp, #-48]	; 0xffffffd0
   1900c:	ldr	r6, [ip]
   19010:	ldr	r4, [ip, #4]
   19014:	str	r0, [ip, #12]
   19018:	cmp	r6, #0
   1901c:	beq	19040 <argp_failure@@Base+0x2168>
   19020:	ldr	r0, [ip, #16]
   19024:	cmp	r0, #0
   19028:	beq	19048 <argp_failure@@Base+0x2170>
   1902c:	ldrb	r0, [r9]
   19030:	cmp	r0, #45	; 0x2d
   19034:	cmpne	r0, #43	; 0x2b
   19038:	addeq	r9, r9, #1
   1903c:	b	190bc <argp_failure@@Base+0x21e4>
   19040:	mov	r6, #1
   19044:	str	r6, [ip]
   19048:	mov	r0, #0
   1904c:	str	r6, [ip, #28]
   19050:	str	r6, [ip, #32]
   19054:	str	r0, [ip, #20]
   19058:	ldrb	r1, [r9]
   1905c:	cmp	r1, #43	; 0x2b
   19060:	beq	19070 <argp_failure@@Base+0x2198>
   19064:	cmp	r1, #45	; 0x2d
   19068:	bne	1907c <argp_failure@@Base+0x21a4>
   1906c:	mov	r0, #2
   19070:	str	r0, [ip, #24]
   19074:	add	r9, r9, #1
   19078:	b	190b4 <argp_failure@@Base+0x21dc>
   1907c:	ldr	r0, [fp, #20]
   19080:	cmp	r0, #0
   19084:	bne	190ac <argp_failure@@Base+0x21d4>
   19088:	movw	r0, #53633	; 0xd181
   1908c:	mov	r5, ip
   19090:	mov	r7, r2
   19094:	movt	r0, #1
   19098:	bl	1142c <getenv@plt>
   1909c:	mov	r2, r7
   190a0:	mov	ip, r5
   190a4:	cmp	r0, #0
   190a8:	beq	19b48 <argp_failure@@Base+0x2c70>
   190ac:	mov	r0, #0
   190b0:	str	r0, [ip, #24]
   190b4:	mov	r0, #1
   190b8:	str	r0, [ip, #16]
   190bc:	ldrb	r0, [r9]
   190c0:	ldr	r5, [ip, #20]
   190c4:	str	r8, [fp, #-32]	; 0xffffffe0
   190c8:	subs	r1, r0, #58	; 0x3a
   190cc:	movne	r1, r4
   190d0:	cmp	r5, #0
   190d4:	str	r1, [fp, #-44]	; 0xffffffd4
   190d8:	beq	1914c <argp_failure@@Base+0x2274>
   190dc:	ldrb	r0, [r5]
   190e0:	cmp	r0, #0
   190e4:	beq	1914c <argp_failure@@Base+0x2274>
   190e8:	str	r2, [fp, #-36]	; 0xffffffdc
   190ec:	add	r8, r5, #1
   190f0:	mov	r0, r9
   190f4:	mov	r7, ip
   190f8:	str	r8, [ip, #20]
   190fc:	ldrb	r4, [r5]
   19100:	mov	r1, r4
   19104:	bl	114b0 <strchr@plt>
   19108:	ldrb	r1, [r5, #1]
   1910c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19110:	cmp	r1, #0
   19114:	orr	r1, r4, #1
   19118:	addeq	r6, r6, #1
   1911c:	streq	r6, [r7]
   19120:	cmp	r1, #59	; 0x3b
   19124:	cmpne	r0, #0
   19128:	bne	191ac <argp_failure@@Base+0x22d4>
   1912c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19130:	cmp	r0, #0
   19134:	bne	19b7c <argp_failure@@Base+0x2ca4>
   19138:	str	r4, [r7, #8]
   1913c:	mov	r4, #63	; 0x3f
   19140:	mov	r0, r4
   19144:	sub	sp, fp, #28
   19148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1914c:	mov	r3, ip
   19150:	str	r9, [sp, #48]	; 0x30
   19154:	mov	r5, ip
   19158:	ldr	r9, [r3, #32]!
   1915c:	cmp	r9, r6
   19160:	strgt	r6, [r3]
   19164:	movgt	r9, r6
   19168:	ldr	r7, [r5, #28]!
   1916c:	cmp	r7, r6
   19170:	strgt	r6, [r5]
   19174:	movgt	r7, r6
   19178:	ldr	r4, [ip, #24]
   1917c:	cmp	r4, #1
   19180:	bne	19658 <argp_failure@@Base+0x2780>
   19184:	cmp	r7, r9
   19188:	cmpne	r9, r6
   1918c:	bne	19238 <argp_failure@@Base+0x2360>
   19190:	cmp	r9, r6
   19194:	mov	r1, r5
   19198:	mov	r0, r6
   1919c:	bne	19604 <argp_failure@@Base+0x272c>
   191a0:	cmp	r6, r2
   191a4:	blt	19628 <argp_failure@@Base+0x2750>
   191a8:	b	19644 <argp_failure@@Base+0x276c>
   191ac:	ldrb	r2, [r0]
   191b0:	ldrb	r1, [r0, #1]
   191b4:	cmp	r2, #87	; 0x57
   191b8:	bne	19210 <argp_failure@@Base+0x2338>
   191bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   191c0:	cmp	r2, #0
   191c4:	beq	19210 <argp_failure@@Base+0x2338>
   191c8:	cmp	r1, #59	; 0x3b
   191cc:	bne	19210 <argp_failure@@Base+0x2338>
   191d0:	ldrb	r0, [r8]
   191d4:	cmp	r0, #0
   191d8:	bne	19bac <argp_failure@@Base+0x2cd4>
   191dc:	cmp	r6, r3
   191e0:	bne	19ba4 <argp_failure@@Base+0x2ccc>
   191e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   191e8:	cmp	r0, #0
   191ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191f0:	bne	19cac <argp_failure@@Base+0x2dd4>
   191f4:	str	r4, [r7, #8]
   191f8:	ldrb	r4, [r9]
   191fc:	cmp	r4, #58	; 0x3a
   19200:	movwne	r4, #63	; 0x3f
   19204:	mov	r0, r4
   19208:	sub	sp, fp, #28
   1920c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19210:	cmp	r1, #58	; 0x3a
   19214:	bne	19b3c <argp_failure@@Base+0x2c64>
   19218:	ldrb	r0, [r0, #2]
   1921c:	ldrb	r1, [r8]
   19220:	cmp	r0, #58	; 0x3a
   19224:	bne	19774 <argp_failure@@Base+0x289c>
   19228:	cmp	r1, #0
   1922c:	bne	1977c <argp_failure@@Base+0x28a4>
   19230:	mov	r0, #0
   19234:	b	19c6c <argp_failure@@Base+0x2d94>
   19238:	cmp	r6, r9
   1923c:	str	r4, [sp, #28]
   19240:	str	r5, [sp, #56]	; 0x38
   19244:	str	r7, [fp, #-40]	; 0xffffffd8
   19248:	str	r3, [sp, #52]	; 0x34
   1924c:	str	r2, [fp, #-36]	; 0xffffffdc
   19250:	ble	195e0 <argp_failure@@Base+0x2708>
   19254:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19258:	cmp	r0, r9
   1925c:	bge	195e0 <argp_failure@@Base+0x2708>
   19260:	add	r0, r8, r9, lsl #2
   19264:	ldr	lr, [fp, #-40]	; 0xffffffd8
   19268:	mov	r2, r6
   1926c:	str	r0, [fp, #-52]	; 0xffffffcc
   19270:	sub	r0, r8, r9, lsl #2
   19274:	str	r0, [sp, #32]
   19278:	rsb	r0, r9, #1
   1927c:	add	r0, r8, r0, lsl #2
   19280:	str	r0, [sp, #44]	; 0x2c
   19284:	mvn	r0, r9
   19288:	str	r0, [fp, #-56]	; 0xffffffc8
   1928c:	add	r0, r8, r0, lsl #2
   19290:	add	r0, r0, #4
   19294:	str	r0, [sp, #24]
   19298:	add	r0, r8, #4
   1929c:	str	r0, [sp, #60]	; 0x3c
   192a0:	sub	r4, r9, lr
   192a4:	sub	r0, r2, r9
   192a8:	cmp	r0, r4
   192ac:	bgt	192d4 <argp_failure@@Base+0x23fc>
   192b0:	b	19380 <argp_failure@@Base+0x24a8>
   192b4:	mov	r2, sl
   192b8:	cmp	r2, r9
   192bc:	cmpgt	r9, lr
   192c0:	ble	195e0 <argp_failure@@Base+0x2708>
   192c4:	sub	r4, r9, lr
   192c8:	sub	r0, r2, r9
   192cc:	cmp	r0, r4
   192d0:	ble	19380 <argp_failure@@Base+0x24a8>
   192d4:	sub	sl, r2, r4
   192d8:	cmp	r4, #1
   192dc:	blt	192b4 <argp_failure@@Base+0x23dc>
   192e0:	mov	r3, #0
   192e4:	cmp	r4, #4
   192e8:	bcc	1953c <argp_failure@@Base+0x2664>
   192ec:	add	r5, r8, r2, lsl #2
   192f0:	add	r1, r8, lr, lsl #2
   192f4:	cmp	r1, r5
   192f8:	bcs	1930c <argp_failure@@Base+0x2434>
   192fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19300:	add	r5, r8, sl, lsl #2
   19304:	cmp	r5, r0
   19308:	bcc	1953c <argp_failure@@Base+0x2664>
   1930c:	bic	r3, r4, #3
   19310:	mov	r0, #1
   19314:	str	sl, [sp, #40]	; 0x28
   19318:	subs	r5, r3, #4
   1931c:	add	r5, r0, r5, lsr #2
   19320:	and	r0, r5, #1
   19324:	str	r0, [sp, #36]	; 0x24
   19328:	beq	194f8 <argp_failure@@Base+0x2620>
   1932c:	sub	r8, r5, r0
   19330:	ldr	r0, [sp, #24]
   19334:	add	r5, r2, lr
   19338:	mov	r7, #0
   1933c:	add	sl, r0, r5, lsl #2
   19340:	mov	r5, #0
   19344:	add	ip, r1, r5
   19348:	add	r0, sl, r5
   1934c:	add	r5, r5, #32
   19350:	subs	r8, r8, #2
   19354:	add	r7, r7, #8
   19358:	vld1.32	{d16-d17}, [r0]
   1935c:	vld1.32	{d18-d19}, [ip]
   19360:	vst1.32	{d16-d17}, [ip]!
   19364:	vst1.32	{d18-d19}, [r0]!
   19368:	vld1.32	{d16-d17}, [r0]
   1936c:	vld1.32	{d18-d19}, [ip]
   19370:	vst1.32	{d16-d17}, [ip]
   19374:	vst1.32	{d18-d19}, [r0]
   19378:	bne	19344 <argp_failure@@Base+0x246c>
   1937c:	b	194fc <argp_failure@@Base+0x2624>
   19380:	cmp	r0, #1
   19384:	blt	194e0 <argp_failure@@Base+0x2608>
   19388:	mov	sl, #0
   1938c:	cmp	r0, #3
   19390:	bls	1945c <argp_failure@@Base+0x2584>
   19394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19398:	add	r1, r3, r2, lsl #2
   1939c:	add	r8, r3, lr, lsl #2
   193a0:	cmp	r8, r1
   193a4:	bcs	193c0 <argp_failure@@Base+0x24e8>
   193a8:	ldr	r3, [sp, #32]
   193ac:	add	r1, r2, lr
   193b0:	add	r1, r3, r1, lsl #2
   193b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   193b8:	cmp	r3, r1
   193bc:	bcc	1945c <argp_failure@@Base+0x2584>
   193c0:	bic	sl, r0, #3
   193c4:	mov	r3, #1
   193c8:	subs	r1, sl, #4
   193cc:	add	r1, r3, r1, lsr #2
   193d0:	and	r3, r1, #1
   193d4:	str	r3, [sp, #40]	; 0x28
   193d8:	beq	195c8 <argp_failure@@Base+0x26f0>
   193dc:	sub	r7, r3, r1
   193e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   193e4:	mov	r1, #0
   193e8:	mov	ip, #32
   193ec:	mov	r5, r3
   193f0:	mov	r4, r8
   193f4:	adds	r7, r7, #2
   193f8:	add	r1, r1, #8
   193fc:	vld1.32	{d16-d17}, [r5]!
   19400:	vld1.32	{d18-d19}, [r4]!
   19404:	vst1.32	{d16-d17}, [r8], ip
   19408:	vst1.32	{d18-d19}, [r3], ip
   1940c:	vld1.32	{d16-d17}, [r5]
   19410:	vld1.32	{d18-d19}, [r4]
   19414:	vst1.32	{d16-d17}, [r4]
   19418:	vst1.32	{d18-d19}, [r5]
   1941c:	bne	193ec <argp_failure@@Base+0x2514>
   19420:	ldr	r3, [sp, #40]	; 0x28
   19424:	ldr	ip, [fp, #16]
   19428:	cmp	r3, #0
   1942c:	beq	19454 <argp_failure@@Base+0x257c>
   19430:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19434:	add	r3, r1, lr
   19438:	add	r1, r1, r9
   1943c:	add	r3, r4, r3, lsl #2
   19440:	add	r1, r4, r1, lsl #2
   19444:	vld1.32	{d16-d17}, [r1]
   19448:	vld1.32	{d18-d19}, [r3]
   1944c:	vst1.32	{d16-d17}, [r3]
   19450:	vst1.32	{d18-d19}, [r1]
   19454:	cmp	r0, sl
   19458:	beq	194e0 <argp_failure@@Base+0x2608>
   1945c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19460:	tst	r0, #1
   19464:	mov	r4, sl
   19468:	add	r1, r2, r1
   1946c:	beq	19490 <argp_failure@@Base+0x25b8>
   19470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19474:	add	r7, sl, r9
   19478:	add	r4, sl, lr
   1947c:	ldr	r5, [r3, r7, lsl #2]
   19480:	ldr	r8, [r3, r4, lsl #2]
   19484:	str	r5, [r3, r4, lsl #2]
   19488:	orr	r4, sl, #1
   1948c:	str	r8, [r3, r7, lsl #2]
   19490:	cmp	r1, sl
   19494:	beq	194e0 <argp_failure@@Base+0x2608>
   19498:	ldr	r3, [sp, #60]	; 0x3c
   1949c:	add	r1, lr, r4
   194a0:	add	r4, r9, r4
   194a4:	add	r1, r3, r1, lsl #2
   194a8:	add	r3, r3, r4, lsl #2
   194ac:	sub	r4, r4, r2
   194b0:	ldr	r7, [r1, #-4]
   194b4:	ldr	r5, [r3, #-4]
   194b8:	adds	r4, r4, #2
   194bc:	str	r5, [r1, #-4]
   194c0:	str	r7, [r3, #-4]
   194c4:	ldr	r7, [r1]
   194c8:	ldr	r5, [r3]
   194cc:	str	r5, [r1]
   194d0:	str	r7, [r3]
   194d4:	add	r1, r1, #8
   194d8:	add	r3, r3, #8
   194dc:	bne	194b0 <argp_failure@@Base+0x25d8>
   194e0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   194e4:	add	lr, r0, lr
   194e8:	cmp	r2, r9
   194ec:	cmpgt	r9, lr
   194f0:	bgt	192c4 <argp_failure@@Base+0x23ec>
   194f4:	b	195e0 <argp_failure@@Base+0x2708>
   194f8:	mov	r7, #0
   194fc:	ldr	r0, [sp, #36]	; 0x24
   19500:	ldr	r8, [fp, #-32]	; 0xffffffe0
   19504:	ldr	sl, [sp, #40]	; 0x28
   19508:	cmp	r0, #0
   1950c:	beq	19530 <argp_failure@@Base+0x2658>
   19510:	add	r0, r7, lr
   19514:	add	r1, r7, sl
   19518:	add	r0, r8, r0, lsl #2
   1951c:	add	r1, r8, r1, lsl #2
   19520:	vld1.32	{d16-d17}, [r1]
   19524:	vld1.32	{d18-d19}, [r0]
   19528:	vst1.32	{d16-d17}, [r0]
   1952c:	vst1.32	{d18-d19}, [r1]
   19530:	ldr	ip, [fp, #16]
   19534:	cmp	r4, r3
   19538:	beq	192b4 <argp_failure@@Base+0x23dc>
   1953c:	mvn	r0, r3
   19540:	tst	r4, #1
   19544:	add	r1, r9, r0
   19548:	beq	19568 <argp_failure@@Base+0x2690>
   1954c:	add	r0, r3, lr
   19550:	add	r5, r3, sl
   19554:	orr	r3, r3, #1
   19558:	ldr	r7, [r8, r0, lsl #2]
   1955c:	ldr	r4, [r8, r5, lsl #2]
   19560:	str	r4, [r8, r0, lsl #2]
   19564:	str	r7, [r8, r5, lsl #2]
   19568:	cmp	r1, lr
   1956c:	beq	192b4 <argp_failure@@Base+0x23dc>
   19570:	ldr	r4, [sp, #60]	; 0x3c
   19574:	add	r0, lr, r3
   19578:	sub	r1, r9, r3
   1957c:	add	r4, r4, r0, lsl #2
   19580:	add	r0, r2, lr
   19584:	ldr	r2, [sp, #44]	; 0x2c
   19588:	add	r0, r0, r3
   1958c:	add	r2, r2, r0, lsl #2
   19590:	ldr	r0, [r4, #-4]
   19594:	ldr	r3, [r2, #-4]
   19598:	sub	r1, r1, #2
   1959c:	cmp	lr, r1
   195a0:	str	r3, [r4, #-4]
   195a4:	str	r0, [r2, #-4]
   195a8:	ldr	r0, [r4]
   195ac:	ldr	r3, [r2]
   195b0:	str	r3, [r4]
   195b4:	str	r0, [r2]
   195b8:	add	r2, r2, #8
   195bc:	add	r4, r4, #8
   195c0:	bne	19590 <argp_failure@@Base+0x26b8>
   195c4:	b	192b4 <argp_failure@@Base+0x23dc>
   195c8:	mov	r1, #0
   195cc:	ldr	r3, [sp, #40]	; 0x28
   195d0:	ldr	ip, [fp, #16]
   195d4:	cmp	r3, #0
   195d8:	bne	19430 <argp_failure@@Base+0x2558>
   195dc:	b	19454 <argp_failure@@Base+0x257c>
   195e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195e4:	ldr	r3, [sp, #52]	; 0x34
   195e8:	ldr	r5, [sp, #56]	; 0x38
   195ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   195f0:	ldr	r4, [sp, #28]
   195f4:	add	r0, r0, r6
   195f8:	mov	r1, r3
   195fc:	sub	r0, r0, r9
   19600:	str	r0, [r5]
   19604:	mov	r7, r0
   19608:	str	r6, [r1]
   1960c:	cmp	r6, r2
   19610:	blt	19628 <argp_failure@@Base+0x2750>
   19614:	b	19644 <argp_failure@@Base+0x276c>
   19618:	add	r6, r6, #1
   1961c:	cmp	r2, r6
   19620:	str	r6, [ip]
   19624:	beq	1964c <argp_failure@@Base+0x2774>
   19628:	ldr	r0, [r8, r6, lsl #2]
   1962c:	ldrb	r1, [r0]
   19630:	cmp	r1, #45	; 0x2d
   19634:	bne	19618 <argp_failure@@Base+0x2740>
   19638:	ldrb	r0, [r0, #1]
   1963c:	cmp	r0, #0
   19640:	beq	19618 <argp_failure@@Base+0x2740>
   19644:	mov	r9, r6
   19648:	b	19650 <argp_failure@@Base+0x2778>
   1964c:	mov	r9, r2
   19650:	mov	r6, r9
   19654:	str	r9, [r3]
   19658:	cmp	r6, r2
   1965c:	beq	19b30 <argp_failure@@Base+0x2c58>
   19660:	mov	sl, r4
   19664:	movw	r4, #51652	; 0xc9c4
   19668:	ldr	r0, [r8, r6, lsl #2]
   1966c:	str	r5, [sp, #56]	; 0x38
   19670:	str	r7, [fp, #-40]	; 0xffffffd8
   19674:	str	r3, [sp, #52]	; 0x34
   19678:	str	r2, [fp, #-36]	; 0xffffffdc
   1967c:	movt	r4, #1
   19680:	mov	r1, r4
   19684:	bl	11330 <strcmp@plt>
   19688:	cmp	r0, #0
   1968c:	beq	1971c <argp_failure@@Base+0x2844>
   19690:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19694:	ldr	ip, [fp, #16]
   19698:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1969c:	cmp	r6, r2
   196a0:	beq	19b30 <argp_failure@@Base+0x2c58>
   196a4:	ldr	r5, [r8, r6, lsl #2]
   196a8:	mov	r3, r4
   196ac:	mvn	r4, #0
   196b0:	ldrb	r0, [r5]
   196b4:	cmp	r0, #45	; 0x2d
   196b8:	bne	19754 <argp_failure@@Base+0x287c>
   196bc:	mov	r7, r5
   196c0:	ldrb	r1, [r7, #1]!
   196c4:	cmp	r1, #0
   196c8:	beq	19754 <argp_failure@@Base+0x287c>
   196cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   196d0:	cmp	r0, #0
   196d4:	beq	19c9c <argp_failure@@Base+0x2dc4>
   196d8:	ldr	r9, [fp, #12]
   196dc:	cmp	r1, #45	; 0x2d
   196e0:	bne	19bf8 <argp_failure@@Base+0x2d20>
   196e4:	add	r0, r5, #2
   196e8:	mov	r1, r8
   196ec:	str	r0, [ip, #20]
   196f0:	ldr	r0, [fp, #8]
   196f4:	stm	sp, {r0, r9, ip}
   196f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   196fc:	str	r3, [sp, #16]
   19700:	str	r0, [sp, #12]
   19704:	mov	r0, r2
   19708:	ldr	r2, [sp, #48]	; 0x30
   1970c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19710:	bl	19cf4 <argp_failure@@Base+0x2e1c>
   19714:	sub	sp, fp, #28
   19718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1971c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19720:	ldr	ip, [fp, #16]
   19724:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19728:	add	r2, r6, #1
   1972c:	cmp	r0, r9
   19730:	str	r2, [ip]
   19734:	cmpne	r9, r2
   19738:	bne	1978c <argp_failure@@Base+0x28b4>
   1973c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19740:	ldr	r1, [sp, #56]	; 0x38
   19744:	cmp	r0, r9
   19748:	mov	r0, r2
   1974c:	beq	19b18 <argp_failure@@Base+0x2c40>
   19750:	b	19b20 <argp_failure@@Base+0x2c48>
   19754:	cmp	sl, #0
   19758:	addne	r0, r6, #1
   1975c:	strne	r5, [ip, #12]
   19760:	movne	r4, #1
   19764:	strne	r0, [ip]
   19768:	mov	r0, r4
   1976c:	sub	sp, fp, #28
   19770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19774:	cmp	r1, #0
   19778:	beq	19b50 <argp_failure@@Base+0x2c78>
   1977c:	add	r0, r6, #1
   19780:	str	r8, [r7, #12]
   19784:	str	r0, [r7]
   19788:	b	19c70 <argp_failure@@Base+0x2d98>
   1978c:	cmp	r6, r9
   19790:	str	r2, [sp, #48]	; 0x30
   19794:	blt	19af8 <argp_failure@@Base+0x2c20>
   19798:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1979c:	cmp	r0, r9
   197a0:	bge	19af8 <argp_failure@@Base+0x2c20>
   197a4:	add	r0, r8, r9, lsl #2
   197a8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   197ac:	str	r0, [fp, #-44]	; 0xffffffd4
   197b0:	sub	r0, r8, r9, lsl #2
   197b4:	str	r0, [sp, #44]	; 0x2c
   197b8:	rsb	r0, r9, #1
   197bc:	add	r0, r8, r0, lsl #2
   197c0:	str	r0, [fp, #-56]	; 0xffffffc8
   197c4:	mvn	r0, r9
   197c8:	str	r0, [fp, #-48]	; 0xffffffd0
   197cc:	add	r0, r8, r0, lsl #2
   197d0:	add	r0, r0, #4
   197d4:	str	r0, [sp, #40]	; 0x28
   197d8:	add	r0, r8, #4
   197dc:	str	r0, [fp, #-52]	; 0xffffffcc
   197e0:	ldr	r0, [sp, #48]	; 0x30
   197e4:	sub	r4, r9, ip
   197e8:	sub	sl, r0, r9
   197ec:	cmp	sl, r4
   197f0:	bgt	19818 <argp_failure@@Base+0x2940>
   197f4:	b	198c0 <argp_failure@@Base+0x29e8>
   197f8:	mov	r0, r3
   197fc:	cmp	r0, r9
   19800:	cmpgt	r9, ip
   19804:	ble	19af8 <argp_failure@@Base+0x2c20>
   19808:	sub	r4, r9, ip
   1980c:	sub	sl, r0, r9
   19810:	cmp	sl, r4
   19814:	ble	198c0 <argp_failure@@Base+0x29e8>
   19818:	sub	r3, r0, r4
   1981c:	cmp	r4, #1
   19820:	blt	197f8 <argp_failure@@Base+0x2920>
   19824:	mov	r1, #0
   19828:	cmp	r4, #4
   1982c:	bcc	199a0 <argp_failure@@Base+0x2ac8>
   19830:	add	r2, r8, r0, lsl #2
   19834:	add	r7, r8, ip, lsl #2
   19838:	cmp	r7, r2
   1983c:	bcs	19850 <argp_failure@@Base+0x2978>
   19840:	ldr	r5, [fp, #-44]	; 0xffffffd4
   19844:	add	r2, r8, r3, lsl #2
   19848:	cmp	r2, r5
   1984c:	bcc	199a0 <argp_failure@@Base+0x2ac8>
   19850:	bic	r1, r4, #3
   19854:	mov	r6, #1
   19858:	subs	r2, r1, #4
   1985c:	add	r2, r6, r2, lsr #2
   19860:	and	r6, r2, #1
   19864:	str	r6, [sp, #60]	; 0x3c
   19868:	beq	19960 <argp_failure@@Base+0x2a88>
   1986c:	ldr	r5, [sp, #40]	; 0x28
   19870:	sub	r2, r6, r2
   19874:	add	r6, ip, r0
   19878:	add	lr, r5, r6, lsl #2
   1987c:	mov	r5, #0
   19880:	mov	r6, #0
   19884:	add	sl, r7, r5
   19888:	add	r8, lr, r5
   1988c:	adds	r2, r2, #2
   19890:	add	r5, r5, #32
   19894:	add	r6, r6, #8
   19898:	vld1.32	{d16-d17}, [r8]
   1989c:	vld1.32	{d18-d19}, [sl]
   198a0:	vst1.32	{d16-d17}, [sl]!
   198a4:	vst1.32	{d18-d19}, [r8]!
   198a8:	vld1.32	{d16-d17}, [r8]
   198ac:	vld1.32	{d18-d19}, [sl]
   198b0:	vst1.32	{d16-d17}, [sl]
   198b4:	vst1.32	{d18-d19}, [r8]
   198b8:	bne	19884 <argp_failure@@Base+0x29ac>
   198bc:	b	19964 <argp_failure@@Base+0x2a8c>
   198c0:	cmp	sl, #1
   198c4:	blt	19ae8 <argp_failure@@Base+0x2c10>
   198c8:	mov	r1, #0
   198cc:	cmp	sl, #3
   198d0:	bls	19a68 <argp_failure@@Base+0x2b90>
   198d4:	add	r2, r8, r0, lsl #2
   198d8:	add	r7, r8, ip, lsl #2
   198dc:	cmp	r7, r2
   198e0:	bcs	198fc <argp_failure@@Base+0x2a24>
   198e4:	ldr	r3, [sp, #44]	; 0x2c
   198e8:	add	r2, ip, r0
   198ec:	add	r2, r3, r2, lsl #2
   198f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   198f4:	cmp	r3, r2
   198f8:	bcc	19a68 <argp_failure@@Base+0x2b90>
   198fc:	bic	r1, sl, #3
   19900:	mov	r3, #1
   19904:	subs	r2, r1, #4
   19908:	add	r2, r3, r2, lsr #2
   1990c:	and	r3, r2, #1
   19910:	str	r3, [sp, #60]	; 0x3c
   19914:	beq	19a2c <argp_failure@@Base+0x2b54>
   19918:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1991c:	sub	r6, r3, r2
   19920:	mov	r4, #0
   19924:	mov	lr, #32
   19928:	mov	r2, r5
   1992c:	mov	r3, r7
   19930:	adds	r6, r6, #2
   19934:	add	r4, r4, #8
   19938:	vld1.32	{d16-d17}, [r2]!
   1993c:	vld1.32	{d18-d19}, [r3]!
   19940:	vst1.32	{d16-d17}, [r7], lr
   19944:	vst1.32	{d18-d19}, [r5], lr
   19948:	vld1.32	{d16-d17}, [r2]
   1994c:	vld1.32	{d18-d19}, [r3]
   19950:	vst1.32	{d16-d17}, [r3]
   19954:	vst1.32	{d18-d19}, [r2]
   19958:	bne	19928 <argp_failure@@Base+0x2a50>
   1995c:	b	19a30 <argp_failure@@Base+0x2b58>
   19960:	mov	r6, #0
   19964:	ldr	r2, [sp, #60]	; 0x3c
   19968:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1996c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19970:	cmp	r2, #0
   19974:	beq	19998 <argp_failure@@Base+0x2ac0>
   19978:	add	r2, r6, ip
   1997c:	add	r7, r6, r3
   19980:	add	r2, r8, r2, lsl #2
   19984:	add	r7, r8, r7, lsl #2
   19988:	vld1.32	{d16-d17}, [r7]
   1998c:	vld1.32	{d18-d19}, [r2]
   19990:	vst1.32	{d16-d17}, [r2]
   19994:	vst1.32	{d18-d19}, [r7]
   19998:	cmp	r4, r1
   1999c:	beq	197f8 <argp_failure@@Base+0x2920>
   199a0:	mvn	r2, r1
   199a4:	tst	r4, #1
   199a8:	add	r2, r9, r2
   199ac:	beq	199cc <argp_failure@@Base+0x2af4>
   199b0:	add	r7, r1, ip
   199b4:	add	r5, r1, r3
   199b8:	orr	r1, r1, #1
   199bc:	ldr	r6, [r8, r7, lsl #2]
   199c0:	ldr	r4, [r8, r5, lsl #2]
   199c4:	str	r4, [r8, r7, lsl #2]
   199c8:	str	r6, [r8, r5, lsl #2]
   199cc:	cmp	r2, ip
   199d0:	beq	197f8 <argp_failure@@Base+0x2920>
   199d4:	add	r0, ip, r0
   199d8:	sub	r2, r9, r1
   199dc:	add	r7, ip, r1
   199e0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   199e4:	add	r0, r0, r1
   199e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   199ec:	add	r7, r4, r7, lsl #2
   199f0:	add	r0, r1, r0, lsl #2
   199f4:	ldr	r1, [r7, #-4]
   199f8:	ldr	r6, [r0, #-4]
   199fc:	sub	r2, r2, #2
   19a00:	cmp	ip, r2
   19a04:	str	r6, [r7, #-4]
   19a08:	str	r1, [r0, #-4]
   19a0c:	ldr	r1, [r7]
   19a10:	ldr	r6, [r0]
   19a14:	str	r6, [r7]
   19a18:	str	r1, [r0]
   19a1c:	add	r0, r0, #8
   19a20:	add	r7, r7, #8
   19a24:	bne	199f4 <argp_failure@@Base+0x2b1c>
   19a28:	b	197f8 <argp_failure@@Base+0x2920>
   19a2c:	mov	r4, #0
   19a30:	ldr	r2, [sp, #60]	; 0x3c
   19a34:	cmp	r2, #0
   19a38:	beq	19a5c <argp_failure@@Base+0x2b84>
   19a3c:	add	r2, r4, ip
   19a40:	add	r3, r4, r9
   19a44:	add	r2, r8, r2, lsl #2
   19a48:	add	r3, r8, r3, lsl #2
   19a4c:	vld1.32	{d16-d17}, [r3]
   19a50:	vld1.32	{d18-d19}, [r2]
   19a54:	vst1.32	{d16-d17}, [r2]
   19a58:	vst1.32	{d18-d19}, [r3]
   19a5c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19a60:	cmp	sl, r1
   19a64:	beq	19ae8 <argp_failure@@Base+0x2c10>
   19a68:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19a6c:	tst	sl, #1
   19a70:	mov	r3, r1
   19a74:	add	r2, r0, r2
   19a78:	beq	19a98 <argp_failure@@Base+0x2bc0>
   19a7c:	add	r6, r1, r9
   19a80:	add	r3, r1, ip
   19a84:	ldr	r5, [r8, r6, lsl #2]
   19a88:	ldr	r7, [r8, r3, lsl #2]
   19a8c:	str	r5, [r8, r3, lsl #2]
   19a90:	orr	r3, r1, #1
   19a94:	str	r7, [r8, r6, lsl #2]
   19a98:	cmp	r2, r1
   19a9c:	beq	19ae8 <argp_failure@@Base+0x2c10>
   19aa0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19aa4:	add	r1, ip, r3
   19aa8:	add	r3, r9, r3
   19aac:	add	r1, r2, r1, lsl #2
   19ab0:	add	r2, r2, r3, lsl #2
   19ab4:	sub	r3, r3, r0
   19ab8:	ldr	r7, [r1, #-4]
   19abc:	ldr	r6, [r2, #-4]
   19ac0:	adds	r3, r3, #2
   19ac4:	str	r6, [r1, #-4]
   19ac8:	str	r7, [r2, #-4]
   19acc:	ldr	r7, [r1]
   19ad0:	ldr	r6, [r2]
   19ad4:	str	r6, [r1]
   19ad8:	str	r7, [r2]
   19adc:	add	r1, r1, #8
   19ae0:	add	r2, r2, #8
   19ae4:	bne	19ab8 <argp_failure@@Base+0x2be0>
   19ae8:	add	ip, sl, ip
   19aec:	cmp	r0, r9
   19af0:	cmpgt	r9, ip
   19af4:	bgt	19808 <argp_failure@@Base+0x2930>
   19af8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19afc:	ldr	r2, [sp, #48]	; 0x30
   19b00:	ldr	r1, [sp, #56]	; 0x38
   19b04:	ldr	ip, [fp, #16]
   19b08:	add	r0, r0, r2
   19b0c:	sub	r0, r0, r9
   19b10:	str	r0, [r1]
   19b14:	ldr	r1, [sp, #52]	; 0x34
   19b18:	str	r2, [r1]
   19b1c:	str	r0, [fp, #-40]	; 0xffffffd8
   19b20:	ldr	r7, [fp, #-40]	; 0xffffffd8
   19b24:	str	lr, [ip]
   19b28:	str	lr, [ip, #32]
   19b2c:	mov	r9, lr
   19b30:	cmp	r7, r9
   19b34:	mvn	r4, #0
   19b38:	strne	r7, [ip]
   19b3c:	mov	r0, r4
   19b40:	sub	sp, fp, #28
   19b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b48:	mov	r0, #1
   19b4c:	b	190b0 <argp_failure@@Base+0x21d8>
   19b50:	cmp	r6, r3
   19b54:	bne	19c5c <argp_failure@@Base+0x2d84>
   19b58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b5c:	cmp	r0, #0
   19b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b64:	bne	19cd0 <argp_failure@@Base+0x2df8>
   19b68:	str	r4, [r7, #8]
   19b6c:	ldrb	r4, [r9]
   19b70:	cmp	r4, #58	; 0x3a
   19b74:	movwne	r4, #63	; 0x3f
   19b78:	b	19c70 <argp_failure@@Base+0x2d98>
   19b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b80:	movw	r1, #53560	; 0xd138
   19b84:	mov	r3, r4
   19b88:	movt	r1, #1
   19b8c:	ldr	r2, [r0]
   19b90:	movw	r0, #6328	; 0x18b8
   19b94:	movt	r0, #3
   19b98:	ldr	r0, [r0]
   19b9c:	bl	114bc <fprintf@plt>
   19ba0:	b	19138 <argp_failure@@Base+0x2260>
   19ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ba8:	ldr	r8, [r0, r6, lsl #2]
   19bac:	ldr	r2, [fp, #8]
   19bb0:	movw	r1, #53629	; 0xd17d
   19bb4:	str	r8, [r7, #12]
   19bb8:	mov	r0, #0
   19bbc:	movt	r1, #1
   19bc0:	str	r0, [r7, #12]
   19bc4:	str	r8, [r7, #20]
   19bc8:	str	r2, [sp]
   19bcc:	stmib	sp, {r0, r7}
   19bd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19bd4:	str	r1, [sp, #16]
   19bd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19bdc:	mov	r2, r9
   19be0:	str	r0, [sp, #12]
   19be4:	mov	r0, r3
   19be8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19bec:	bl	19cf4 <argp_failure@@Base+0x2e1c>
   19bf0:	sub	sp, fp, #28
   19bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bf8:	cmp	r9, #0
   19bfc:	beq	19c9c <argp_failure@@Base+0x2dc4>
   19c00:	ldrb	r0, [r5, #2]
   19c04:	cmp	r0, #0
   19c08:	beq	19c84 <argp_failure@@Base+0x2dac>
   19c0c:	ldr	r1, [fp, #8]
   19c10:	movw	r0, #51653	; 0xc9c5
   19c14:	str	r7, [ip, #20]
   19c18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19c1c:	movt	r0, #1
   19c20:	stm	sp, {r1, r9, ip}
   19c24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c28:	str	r0, [sp, #16]
   19c2c:	mov	r0, r2
   19c30:	ldr	r2, [sp, #48]	; 0x30
   19c34:	str	r1, [sp, #12]
   19c38:	mov	r1, r8
   19c3c:	bl	19cf4 <argp_failure@@Base+0x2e1c>
   19c40:	ldr	ip, [fp, #16]
   19c44:	mov	r4, r0
   19c48:	cmn	r0, #1
   19c4c:	bne	19b3c <argp_failure@@Base+0x2c64>
   19c50:	ldr	r6, [ip]
   19c54:	ldr	r5, [r8, r6, lsl #2]
   19c58:	b	19c9c <argp_failure@@Base+0x2dc4>
   19c5c:	add	r0, r6, #1
   19c60:	str	r0, [r7]
   19c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c68:	ldr	r0, [r0, r6, lsl #2]
   19c6c:	str	r0, [r7, #12]
   19c70:	mov	r0, #0
   19c74:	str	r0, [r7, #20]
   19c78:	mov	r0, r4
   19c7c:	sub	sp, fp, #28
   19c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c84:	ldr	r0, [sp, #48]	; 0x30
   19c88:	bl	114b0 <strchr@plt>
   19c8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19c90:	ldr	ip, [fp, #16]
   19c94:	cmp	r0, #0
   19c98:	beq	19c0c <argp_failure@@Base+0x2d34>
   19c9c:	ldr	r9, [sp, #48]	; 0x30
   19ca0:	add	r5, r5, #1
   19ca4:	str	r5, [ip, #20]
   19ca8:	b	190ec <argp_failure@@Base+0x2214>
   19cac:	ldr	r2, [r0]
   19cb0:	movw	r0, #6328	; 0x18b8
   19cb4:	movw	r1, #53588	; 0xd154
   19cb8:	mov	r3, r4
   19cbc:	movt	r0, #3
   19cc0:	movt	r1, #1
   19cc4:	ldr	r0, [r0]
   19cc8:	bl	114bc <fprintf@plt>
   19ccc:	b	191f4 <argp_failure@@Base+0x231c>
   19cd0:	ldr	r2, [r0]
   19cd4:	movw	r0, #6328	; 0x18b8
   19cd8:	movw	r1, #53588	; 0xd154
   19cdc:	mov	r3, r4
   19ce0:	movt	r0, #3
   19ce4:	movt	r1, #1
   19ce8:	ldr	r0, [r0]
   19cec:	bl	114bc <fprintf@plt>
   19cf0:	b	19b68 <argp_failure@@Base+0x2c90>
   19cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cf8:	add	fp, sp, #28
   19cfc:	sub	sp, sp, #44	; 0x2c
   19d00:	str	r0, [sp, #8]
   19d04:	ldr	r0, [fp, #16]
   19d08:	str	r2, [sp, #12]
   19d0c:	str	r1, [sp, #16]
   19d10:	ldr	r8, [r0, #20]
   19d14:	mov	r9, r8
   19d18:	b	19d20 <argp_failure@@Base+0x2e48>
   19d1c:	add	r9, r9, #1
   19d20:	ldrb	r0, [r9]
   19d24:	cmp	r0, #0
   19d28:	cmpne	r0, #61	; 0x3d
   19d2c:	bne	19d1c <argp_failure@@Base+0x2e44>
   19d30:	ldr	sl, [r3]
   19d34:	mvn	r0, #0
   19d38:	str	r0, [sp, #24]
   19d3c:	cmp	sl, #0
   19d40:	beq	19eec <argp_failure@@Base+0x3014>
   19d44:	sub	r0, r9, r8
   19d48:	mov	r4, #0
   19d4c:	mov	r6, sl
   19d50:	mov	r7, r3
   19d54:	str	r3, [sp, #28]
   19d58:	str	r0, [fp, #-32]	; 0xffffffe0
   19d5c:	b	19d70 <argp_failure@@Base+0x2e98>
   19d60:	ldr	r6, [r7, #16]!
   19d64:	add	r4, r4, #1
   19d68:	cmp	r6, #0
   19d6c:	beq	19da4 <argp_failure@@Base+0x2ecc>
   19d70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d74:	mov	r0, r6
   19d78:	mov	r1, r8
   19d7c:	bl	115c4 <strncmp@plt>
   19d80:	cmp	r0, #0
   19d84:	bne	19d60 <argp_failure@@Base+0x2e88>
   19d88:	mov	r0, r6
   19d8c:	bl	114a4 <strlen@plt>
   19d90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19d94:	cmp	r1, r0
   19d98:	bne	19d60 <argp_failure@@Base+0x2e88>
   19d9c:	str	r4, [sp, #24]
   19da0:	b	1a160 <argp_failure@@Base+0x3288>
   19da4:	cmp	sl, #0
   19da8:	beq	19f08 <argp_failure@@Base+0x3030>
   19dac:	ldr	r0, [fp, #12]
   19db0:	cmp	r0, #0
   19db4:	beq	19f88 <argp_failure@@Base+0x30b0>
   19db8:	ldr	r0, [fp, #20]
   19dbc:	cmp	r0, #0
   19dc0:	beq	1a2a4 <argp_failure@@Base+0x33cc>
   19dc4:	mov	r0, #0
   19dc8:	ldr	r6, [sp, #28]
   19dcc:	mov	r5, #0
   19dd0:	mov	r7, #0
   19dd4:	str	r0, [sp, #32]
   19dd8:	mvn	r0, #0
   19ddc:	str	r0, [sp, #24]
   19de0:	mov	r0, #0
   19de4:	str	r0, [sp, #4]
   19de8:	mov	r0, #0
   19dec:	str	r0, [sp, #20]
   19df0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19df4:	mov	r0, sl
   19df8:	mov	r1, r8
   19dfc:	bl	115c4 <strncmp@plt>
   19e00:	cmp	r0, #0
   19e04:	beq	19e2c <argp_failure@@Base+0x2f54>
   19e08:	mov	r1, r5
   19e0c:	ldr	sl, [r6, #16]!
   19e10:	cmp	sl, #0
   19e14:	beq	1a13c <argp_failure@@Base+0x3264>
   19e18:	ldr	r0, [fp, #16]
   19e1c:	add	r1, r1, #1
   19e20:	mov	r5, r1
   19e24:	ldr	r8, [r0, #20]
   19e28:	b	19df0 <argp_failure@@Base+0x2f18>
   19e2c:	cmp	r7, #0
   19e30:	beq	19eac <argp_failure@@Base+0x2fd4>
   19e34:	ldr	r0, [sp, #32]
   19e38:	mov	r1, r5
   19e3c:	cmp	r0, #0
   19e40:	bne	19e0c <argp_failure@@Base+0x2f34>
   19e44:	ldr	r8, [sp, #20]
   19e48:	cmp	r8, #0
   19e4c:	bne	19e88 <argp_failure@@Base+0x2fb0>
   19e50:	mov	r0, r4
   19e54:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   19e58:	cmp	r0, #0
   19e5c:	beq	19ec8 <argp_failure@@Base+0x2ff0>
   19e60:	mov	r1, #0
   19e64:	mov	r2, r4
   19e68:	mov	r8, r0
   19e6c:	bl	114ec <memset@plt>
   19e70:	ldr	r0, [sp, #24]
   19e74:	mov	r1, #1
   19e78:	mov	r2, #1
   19e7c:	str	r1, [sp, #4]
   19e80:	mov	r1, r5
   19e84:	strb	r2, [r8, r0]
   19e88:	mov	r0, #1
   19e8c:	str	r8, [sp, #20]
   19e90:	strb	r0, [r8, r1]
   19e94:	mov	r0, #0
   19e98:	str	r0, [sp, #32]
   19e9c:	ldr	sl, [r6, #16]!
   19ea0:	cmp	sl, #0
   19ea4:	bne	19e18 <argp_failure@@Base+0x2f40>
   19ea8:	b	1a13c <argp_failure@@Base+0x3264>
   19eac:	mov	r7, r6
   19eb0:	mov	r1, r5
   19eb4:	str	r5, [sp, #24]
   19eb8:	ldr	sl, [r6, #16]!
   19ebc:	cmp	sl, #0
   19ec0:	bne	19e18 <argp_failure@@Base+0x2f40>
   19ec4:	b	1a13c <argp_failure@@Base+0x3264>
   19ec8:	mov	r0, #1
   19ecc:	mov	r1, r5
   19ed0:	str	r0, [sp, #32]
   19ed4:	mov	r0, #0
   19ed8:	str	r0, [sp, #20]
   19edc:	ldr	sl, [r6, #16]!
   19ee0:	cmp	sl, #0
   19ee4:	bne	19e18 <argp_failure@@Base+0x2f40>
   19ee8:	b	1a13c <argp_failure@@Base+0x3264>
   19eec:	mov	r0, #0
   19ef0:	mov	r4, #0
   19ef4:	mov	r7, #0
   19ef8:	mov	r1, #0
   19efc:	mov	r8, #0
   19f00:	mov	r6, r3
   19f04:	b	19f1c <argp_failure@@Base+0x3044>
   19f08:	ldr	r6, [sp, #28]
   19f0c:	mov	r0, #0
   19f10:	mov	r7, #0
   19f14:	mov	r1, #0
   19f18:	mov	r8, #0
   19f1c:	str	r0, [sp, #32]
   19f20:	cmp	r1, #0
   19f24:	ldreq	r0, [sp, #32]
   19f28:	cmpeq	r0, #0
   19f2c:	beq	1a158 <argp_failure@@Base+0x3280>
   19f30:	ldr	r0, [fp, #20]
   19f34:	cmp	r0, #0
   19f38:	bne	1a370 <argp_failure@@Base+0x3498>
   19f3c:	cmp	r8, #0
   19f40:	beq	19f4c <argp_failure@@Base+0x3074>
   19f44:	mov	r0, r1
   19f48:	bl	142d0 <argp_parse@@Base+0x13dc>
   19f4c:	ldr	r0, [fp, #16]
   19f50:	ldr	r4, [r0, #20]
   19f54:	mov	r5, r0
   19f58:	mov	r0, r4
   19f5c:	bl	114a4 <strlen@plt>
   19f60:	mov	r1, #0
   19f64:	add	r0, r4, r0
   19f68:	str	r1, [r5, #8]
   19f6c:	str	r0, [r5, #20]
   19f70:	ldr	r0, [r5]
   19f74:	add	r0, r0, #1
   19f78:	str	r0, [r5]
   19f7c:	mov	r0, #63	; 0x3f
   19f80:	sub	sp, fp, #28
   19f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f88:	mov	r0, #0
   19f8c:	mov	r6, #0
   19f90:	mov	r7, #0
   19f94:	str	r0, [sp, #36]	; 0x24
   19f98:	mvn	r0, #0
   19f9c:	str	r0, [sp, #24]
   19fa0:	mov	r0, #0
   19fa4:	str	r0, [sp, #32]
   19fa8:	mov	r0, #0
   19fac:	str	r0, [sp, #4]
   19fb0:	mov	r0, #0
   19fb4:	str	r0, [sp, #20]
   19fb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19fbc:	mov	r0, sl
   19fc0:	mov	r1, r8
   19fc4:	bl	115c4 <strncmp@plt>
   19fc8:	cmp	r0, #0
   19fcc:	beq	1a000 <argp_failure@@Base+0x3128>
   19fd0:	ldr	r5, [sp, #28]
   19fd4:	ldr	r3, [sp, #36]	; 0x24
   19fd8:	add	r0, r5, r6, lsl #4
   19fdc:	ldr	sl, [r0, #16]
   19fe0:	cmp	sl, #0
   19fe4:	beq	1a13c <argp_failure@@Base+0x3264>
   19fe8:	ldr	r0, [fp, #16]
   19fec:	add	r3, r3, #16
   19ff0:	add	r6, r6, #1
   19ff4:	str	r3, [sp, #36]	; 0x24
   19ff8:	ldr	r8, [r0, #20]
   19ffc:	b	19fb8 <argp_failure@@Base+0x30e0>
   1a000:	ldr	r5, [sp, #28]
   1a004:	ldr	r3, [sp, #36]	; 0x24
   1a008:	cmp	r7, #0
   1a00c:	add	r0, r5, r3
   1a010:	beq	1a0a8 <argp_failure@@Base+0x31d0>
   1a014:	ldr	r1, [r0, #4]
   1a018:	ldr	r2, [r7, #4]
   1a01c:	cmp	r2, r1
   1a020:	bne	1a034 <argp_failure@@Base+0x315c>
   1a024:	ldr	r1, [r0, #8]
   1a028:	ldr	r2, [r7, #8]
   1a02c:	cmp	r2, r1
   1a030:	beq	1a0c4 <argp_failure@@Base+0x31ec>
   1a034:	ldr	r0, [sp, #32]
   1a038:	cmp	r0, #0
   1a03c:	bne	19fd8 <argp_failure@@Base+0x3100>
   1a040:	ldr	r0, [fp, #20]
   1a044:	cmp	r0, #0
   1a048:	beq	1a0e4 <argp_failure@@Base+0x320c>
   1a04c:	ldr	r8, [sp, #20]
   1a050:	mov	r0, #0
   1a054:	str	r0, [sp, #32]
   1a058:	cmp	r8, #0
   1a05c:	bne	1a0f8 <argp_failure@@Base+0x3220>
   1a060:	mov	r0, r4
   1a064:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   1a068:	cmp	r0, #0
   1a06c:	beq	1a118 <argp_failure@@Base+0x3240>
   1a070:	mov	r8, r0
   1a074:	mov	r0, #0
   1a078:	mov	r1, #0
   1a07c:	mov	r2, r4
   1a080:	str	r0, [sp, #32]
   1a084:	mov	r0, r8
   1a088:	bl	114ec <memset@plt>
   1a08c:	ldr	r3, [sp, #36]	; 0x24
   1a090:	ldr	r0, [sp, #24]
   1a094:	mov	r2, #1
   1a098:	mov	r1, #1
   1a09c:	str	r1, [sp, #4]
   1a0a0:	strb	r2, [r8, r0]
   1a0a4:	b	1a0f8 <argp_failure@@Base+0x3220>
   1a0a8:	mov	r7, r0
   1a0ac:	str	r6, [sp, #24]
   1a0b0:	add	r0, r5, r6, lsl #4
   1a0b4:	ldr	sl, [r0, #16]
   1a0b8:	cmp	sl, #0
   1a0bc:	bne	19fe8 <argp_failure@@Base+0x3110>
   1a0c0:	b	1a13c <argp_failure@@Base+0x3264>
   1a0c4:	ldr	r1, [sp, #32]
   1a0c8:	cmp	r1, #0
   1a0cc:	bne	19fd8 <argp_failure@@Base+0x3100>
   1a0d0:	ldr	r0, [r0, #12]
   1a0d4:	ldr	r1, [r7, #12]
   1a0d8:	cmp	r1, r0
   1a0dc:	bne	1a040 <argp_failure@@Base+0x3168>
   1a0e0:	b	19fd8 <argp_failure@@Base+0x3100>
   1a0e4:	ldr	r8, [sp, #20]
   1a0e8:	mov	r0, #1
   1a0ec:	str	r0, [sp, #32]
   1a0f0:	cmp	r8, #0
   1a0f4:	beq	1a124 <argp_failure@@Base+0x324c>
   1a0f8:	mov	r0, #1
   1a0fc:	str	r8, [sp, #20]
   1a100:	strb	r0, [r8, r6]
   1a104:	add	r0, r5, r6, lsl #4
   1a108:	ldr	sl, [r0, #16]
   1a10c:	cmp	sl, #0
   1a110:	bne	19fe8 <argp_failure@@Base+0x3110>
   1a114:	b	1a13c <argp_failure@@Base+0x3264>
   1a118:	ldr	r3, [sp, #36]	; 0x24
   1a11c:	mov	r0, #1
   1a120:	str	r0, [sp, #32]
   1a124:	mov	r0, #0
   1a128:	str	r0, [sp, #20]
   1a12c:	add	r0, r5, r6, lsl #4
   1a130:	ldr	sl, [r0, #16]
   1a134:	cmp	sl, #0
   1a138:	bne	19fe8 <argp_failure@@Base+0x3110>
   1a13c:	ldr	r6, [sp, #28]
   1a140:	ldr	r1, [sp, #20]
   1a144:	ldr	r8, [sp, #4]
   1a148:	cmp	r1, #0
   1a14c:	ldreq	r0, [sp, #32]
   1a150:	cmpeq	r0, #0
   1a154:	bne	19f30 <argp_failure@@Base+0x3058>
   1a158:	cmp	r7, #0
   1a15c:	beq	1a200 <argp_failure@@Base+0x3328>
   1a160:	ldr	r1, [fp, #16]
   1a164:	mov	r0, #0
   1a168:	str	r0, [r1, #20]
   1a16c:	mov	r2, r1
   1a170:	ldr	r1, [r1]
   1a174:	add	r0, r1, #1
   1a178:	str	r0, [r2]
   1a17c:	ldrb	r3, [r9]
   1a180:	ldr	r2, [r7, #4]
   1a184:	cmp	r3, #0
   1a188:	beq	1a1a4 <argp_failure@@Base+0x32cc>
   1a18c:	cmp	r2, #0
   1a190:	beq	1a280 <argp_failure@@Base+0x33a8>
   1a194:	ldr	r1, [fp, #16]
   1a198:	add	r0, r9, #1
   1a19c:	str	r0, [r1, #12]
   1a1a0:	b	1a1d0 <argp_failure@@Base+0x32f8>
   1a1a4:	cmp	r2, #1
   1a1a8:	bne	1a1d0 <argp_failure@@Base+0x32f8>
   1a1ac:	ldr	r2, [sp, #8]
   1a1b0:	cmp	r0, r2
   1a1b4:	bge	1a340 <argp_failure@@Base+0x3468>
   1a1b8:	ldr	r2, [fp, #16]
   1a1bc:	add	r1, r1, #2
   1a1c0:	str	r1, [r2]
   1a1c4:	ldr	r1, [sp, #16]
   1a1c8:	ldr	r0, [r1, r0, lsl #2]
   1a1cc:	str	r0, [r2, #12]
   1a1d0:	ldr	r0, [fp, #8]
   1a1d4:	cmp	r0, #0
   1a1d8:	ldrne	r1, [sp, #24]
   1a1dc:	strne	r1, [r0]
   1a1e0:	ldr	r1, [r7, #8]
   1a1e4:	ldr	r0, [r7, #12]
   1a1e8:	cmp	r1, #0
   1a1ec:	beq	1a368 <argp_failure@@Base+0x3490>
   1a1f0:	str	r0, [r1]
   1a1f4:	mov	r0, #0
   1a1f8:	sub	sp, fp, #28
   1a1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a200:	ldr	r0, [fp, #12]
   1a204:	cmp	r0, #0
   1a208:	beq	1a24c <argp_failure@@Base+0x3374>
   1a20c:	ldr	r0, [fp, #16]
   1a210:	ldr	r1, [sp, #16]
   1a214:	ldr	r0, [r0]
   1a218:	ldr	r0, [r1, r0, lsl #2]
   1a21c:	ldrb	r0, [r0, #1]
   1a220:	cmp	r0, #45	; 0x2d
   1a224:	beq	1a24c <argp_failure@@Base+0x3374>
   1a228:	ldr	r0, [fp, #16]
   1a22c:	ldr	r0, [r0, #20]
   1a230:	ldrb	r1, [r0]
   1a234:	ldr	r0, [sp, #12]
   1a238:	bl	114b0 <strchr@plt>
   1a23c:	mov	r1, r0
   1a240:	mvn	r0, #0
   1a244:	cmp	r1, #0
   1a248:	bne	1a368 <argp_failure@@Base+0x3490>
   1a24c:	ldr	r0, [fp, #20]
   1a250:	cmp	r0, #0
   1a254:	bne	1a468 <argp_failure@@Base+0x3590>
   1a258:	ldr	r1, [fp, #16]
   1a25c:	mov	r0, #0
   1a260:	str	r0, [r1, #20]
   1a264:	str	r0, [r1, #8]
   1a268:	ldr	r0, [r1]
   1a26c:	add	r0, r0, #1
   1a270:	str	r0, [r1]
   1a274:	mov	r0, #63	; 0x3f
   1a278:	sub	sp, fp, #28
   1a27c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a280:	ldr	r0, [fp, #20]
   1a284:	cmp	r0, #0
   1a288:	bne	1a49c <argp_failure@@Base+0x35c4>
   1a28c:	ldr	r0, [r7, #12]
   1a290:	ldr	r1, [fp, #16]
   1a294:	str	r0, [r1, #8]
   1a298:	mov	r0, #63	; 0x3f
   1a29c:	sub	sp, fp, #28
   1a2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2a4:	ldr	r5, [sp, #28]
   1a2a8:	mov	r0, #0
   1a2ac:	mov	r6, #0
   1a2b0:	mov	r7, #0
   1a2b4:	str	r0, [sp, #32]
   1a2b8:	mvn	r0, #0
   1a2bc:	str	r0, [sp, #24]
   1a2c0:	b	1a2e4 <argp_failure@@Base+0x340c>
   1a2c4:	ldr	r0, [sp, #32]
   1a2c8:	cmp	r0, #0
   1a2cc:	movweq	r0, #1
   1a2d0:	str	r0, [sp, #32]
   1a2d4:	ldr	sl, [r5, #16]!
   1a2d8:	add	r6, r6, #1
   1a2dc:	cmp	sl, #0
   1a2e0:	beq	1a320 <argp_failure@@Base+0x3448>
   1a2e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a2e8:	mov	r0, sl
   1a2ec:	mov	r1, r8
   1a2f0:	bl	115c4 <strncmp@plt>
   1a2f4:	cmp	r0, #0
   1a2f8:	bne	1a2d4 <argp_failure@@Base+0x33fc>
   1a2fc:	cmp	r7, #0
   1a300:	bne	1a2c4 <argp_failure@@Base+0x33ec>
   1a304:	mov	r7, r5
   1a308:	mov	r0, r6
   1a30c:	str	r6, [sp, #24]
   1a310:	ldr	sl, [r5, #16]!
   1a314:	add	r6, r6, #1
   1a318:	cmp	sl, #0
   1a31c:	bne	1a2e4 <argp_failure@@Base+0x340c>
   1a320:	ldr	r6, [sp, #28]
   1a324:	mov	r1, #0
   1a328:	mov	r8, #0
   1a32c:	cmp	r1, #0
   1a330:	ldreq	r0, [sp, #32]
   1a334:	cmpeq	r0, #0
   1a338:	bne	19f30 <argp_failure@@Base+0x3058>
   1a33c:	b	1a158 <argp_failure@@Base+0x3280>
   1a340:	ldr	r0, [fp, #20]
   1a344:	cmp	r0, #0
   1a348:	bne	1a4cc <argp_failure@@Base+0x35f4>
   1a34c:	ldr	r0, [r7, #12]
   1a350:	ldr	r1, [fp, #16]
   1a354:	str	r0, [r1, #8]
   1a358:	ldr	r0, [sp, #12]
   1a35c:	ldrb	r0, [r0]
   1a360:	cmp	r0, #58	; 0x3a
   1a364:	movwne	r0, #63	; 0x3f
   1a368:	sub	sp, fp, #28
   1a36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a370:	movw	sl, #6328	; 0x18b8
   1a374:	mov	r9, r1
   1a378:	ldr	r1, [sp, #32]
   1a37c:	movt	sl, #3
   1a380:	ldr	r0, [sl]
   1a384:	cmp	r1, #0
   1a388:	beq	1a3c0 <argp_failure@@Base+0x34e8>
   1a38c:	ldr	r1, [sp, #16]
   1a390:	ldr	r3, [fp, #24]
   1a394:	ldr	r2, [r1]
   1a398:	ldr	r1, [fp, #16]
   1a39c:	ldr	r1, [r1, #20]
   1a3a0:	str	r1, [sp]
   1a3a4:	movw	r1, #53649	; 0xd191
   1a3a8:	movt	r1, #1
   1a3ac:	bl	114bc <fprintf@plt>
   1a3b0:	mov	r1, r9
   1a3b4:	cmp	r8, #0
   1a3b8:	bne	19f44 <argp_failure@@Base+0x306c>
   1a3bc:	b	19f4c <argp_failure@@Base+0x3074>
   1a3c0:	bl	11558 <flockfile@plt>
   1a3c4:	ldr	r1, [fp, #16]
   1a3c8:	ldr	r0, [sp, #16]
   1a3cc:	ldr	r5, [fp, #24]
   1a3d0:	ldr	r1, [r1, #20]
   1a3d4:	ldr	r2, [r0]
   1a3d8:	ldr	r0, [sl]
   1a3dc:	mov	r3, r5
   1a3e0:	str	r1, [sp]
   1a3e4:	movw	r1, #53681	; 0xd1b1
   1a3e8:	movt	r1, #1
   1a3ec:	bl	114bc <fprintf@plt>
   1a3f0:	cmp	r4, #0
   1a3f4:	beq	1a444 <argp_failure@@Base+0x356c>
   1a3f8:	mov	r7, r9
   1a3fc:	ldrb	r0, [r7]
   1a400:	cmp	r0, #0
   1a404:	bne	1a41c <argp_failure@@Base+0x3544>
   1a408:	add	r6, r6, #16
   1a40c:	add	r7, r7, #1
   1a410:	subs	r4, r4, #1
   1a414:	bne	1a3fc <argp_failure@@Base+0x3524>
   1a418:	b	1a444 <argp_failure@@Base+0x356c>
   1a41c:	ldr	r3, [r6]
   1a420:	ldr	r0, [sl]
   1a424:	movw	r1, #53728	; 0xd1e0
   1a428:	mov	r2, r5
   1a42c:	movt	r1, #1
   1a430:	bl	114bc <fprintf@plt>
   1a434:	add	r6, r6, #16
   1a438:	add	r7, r7, #1
   1a43c:	subs	r4, r4, #1
   1a440:	bne	1a3fc <argp_failure@@Base+0x3524>
   1a444:	ldr	r1, [sl]
   1a448:	mov	r0, #10
   1a44c:	bl	11534 <fputc@plt>
   1a450:	ldr	r0, [sl]
   1a454:	bl	113f0 <funlockfile@plt>
   1a458:	mov	r1, r9
   1a45c:	cmp	r8, #0
   1a460:	bne	19f44 <argp_failure@@Base+0x306c>
   1a464:	b	19f4c <argp_failure@@Base+0x3074>
   1a468:	ldr	r1, [fp, #16]
   1a46c:	ldr	r0, [sp, #16]
   1a470:	ldr	r3, [fp, #24]
   1a474:	ldr	r2, [r0]
   1a478:	movw	r0, #6328	; 0x18b8
   1a47c:	ldr	r1, [r1, #20]
   1a480:	movt	r0, #3
   1a484:	ldr	r0, [r0]
   1a488:	str	r1, [sp]
   1a48c:	movw	r1, #53736	; 0xd1e8
   1a490:	movt	r1, #1
   1a494:	bl	114bc <fprintf@plt>
   1a498:	b	1a258 <argp_failure@@Base+0x3380>
   1a49c:	ldr	r0, [sp, #16]
   1a4a0:	ldr	r1, [r7]
   1a4a4:	ldr	r3, [fp, #24]
   1a4a8:	ldr	r2, [r0]
   1a4ac:	movw	r0, #6328	; 0x18b8
   1a4b0:	str	r1, [sp]
   1a4b4:	movw	r1, #53768	; 0xd208
   1a4b8:	movt	r0, #3
   1a4bc:	movt	r1, #1
   1a4c0:	ldr	r0, [r0]
   1a4c4:	bl	114bc <fprintf@plt>
   1a4c8:	b	1a28c <argp_failure@@Base+0x33b4>
   1a4cc:	ldr	r0, [sp, #16]
   1a4d0:	ldr	r1, [r7]
   1a4d4:	ldr	r3, [fp, #24]
   1a4d8:	ldr	r2, [r0]
   1a4dc:	movw	r0, #6328	; 0x18b8
   1a4e0:	str	r1, [sp]
   1a4e4:	movw	r1, #53813	; 0xd235
   1a4e8:	movt	r0, #3
   1a4ec:	movt	r1, #1
   1a4f0:	ldr	r0, [r0]
   1a4f4:	bl	114bc <fprintf@plt>
   1a4f8:	b	1a34c <argp_failure@@Base+0x3474>
   1a4fc:	push	{r4, r5, r6, r7, fp, lr}
   1a500:	add	fp, sp, #16
   1a504:	sub	sp, sp, #16
   1a508:	movw	r6, #6300	; 0x189c
   1a50c:	movw	r7, #6376	; 0x18e8
   1a510:	movt	r6, #3
   1a514:	movt	r7, #3
   1a518:	ldm	r6, {r4, r5}
   1a51c:	str	r7, [sp, #8]
   1a520:	stm	r7, {r4, r5}
   1a524:	ldr	r5, [fp, #16]
   1a528:	str	r5, [sp, #12]
   1a52c:	ldr	r5, [fp, #12]
   1a530:	str	r5, [sp, #4]
   1a534:	ldr	r5, [fp, #8]
   1a538:	str	r5, [sp]
   1a53c:	bl	18fdc <argp_failure@@Base+0x2104>
   1a540:	ldr	r1, [r7]
   1a544:	ldr	r2, [r7, #8]
   1a548:	ldr	r3, [r7, #12]
   1a54c:	str	r1, [r6]
   1a550:	movw	r1, #6468	; 0x1944
   1a554:	str	r2, [r6, #8]
   1a558:	movt	r1, #3
   1a55c:	str	r3, [r1]
   1a560:	sub	sp, fp, #16
   1a564:	pop	{r4, r5, r6, r7, fp, pc}
   1a568:	push	{r4, r5, r6, sl, fp, lr}
   1a56c:	add	fp, sp, #16
   1a570:	sub	sp, sp, #16
   1a574:	movw	r5, #6300	; 0x189c
   1a578:	movw	r6, #6376	; 0x18e8
   1a57c:	movt	r5, #3
   1a580:	movt	r6, #3
   1a584:	ldm	r5, {r3, r4}
   1a588:	stm	r6, {r3, r4}
   1a58c:	mov	r4, #0
   1a590:	mov	r3, #1
   1a594:	str	r4, [sp]
   1a598:	stmib	sp, {r4, r6}
   1a59c:	str	r3, [sp, #12]
   1a5a0:	mov	r3, #0
   1a5a4:	bl	18fdc <argp_failure@@Base+0x2104>
   1a5a8:	ldr	r1, [r6]
   1a5ac:	ldr	r2, [r6, #8]
   1a5b0:	ldr	r3, [r6, #12]
   1a5b4:	str	r1, [r5]
   1a5b8:	movw	r1, #6468	; 0x1944
   1a5bc:	str	r2, [r5, #8]
   1a5c0:	movt	r1, #3
   1a5c4:	str	r3, [r1]
   1a5c8:	sub	sp, fp, #16
   1a5cc:	pop	{r4, r5, r6, sl, fp, pc}
   1a5d0:	cmp	r2, #0
   1a5d4:	beq	1a604 <argp_failure@@Base+0x372c>
   1a5d8:	mvn	r3, #0
   1a5dc:	udiv	r3, r3, r2
   1a5e0:	cmp	r3, r1
   1a5e4:	bcs	1a604 <argp_failure@@Base+0x372c>
   1a5e8:	push	{fp, lr}
   1a5ec:	mov	fp, sp
   1a5f0:	bl	114c8 <__errno_location@plt>
   1a5f4:	mov	r1, #12
   1a5f8:	str	r1, [r0]
   1a5fc:	mov	r0, #0
   1a600:	pop	{fp, pc}
   1a604:	mul	r1, r2, r1
   1a608:	b	15468 <_obstack_memory_used@@Base+0xd0c>
   1a60c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a610:	add	fp, sp, #24
   1a614:	mov	r7, r0
   1a618:	mov	r0, #36	; 0x24
   1a61c:	mov	r8, r3
   1a620:	mov	r9, r2
   1a624:	mov	r6, r1
   1a628:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   1a62c:	cmp	r0, #0
   1a630:	beq	1a678 <argp_failure@@Base+0x37a0>
   1a634:	mov	r5, #0
   1a638:	str	r7, [r0]
   1a63c:	stmib	r0, {r6, r9}
   1a640:	str	r8, [r0, #12]
   1a644:	mov	r4, r0
   1a648:	str	r5, [r0, #16]
   1a64c:	str	r5, [r0, #20]
   1a650:	mov	r0, #200	; 0xc8
   1a654:	bl	15438 <_obstack_memory_used@@Base+0xcdc>
   1a658:	cmp	r0, #0
   1a65c:	str	r0, [r4, #24]
   1a660:	beq	1a684 <argp_failure@@Base+0x37ac>
   1a664:	add	r1, r0, #200	; 0xc8
   1a668:	str	r0, [r4, #28]
   1a66c:	mov	r0, r4
   1a670:	str	r1, [r4, #32]
   1a674:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a678:	mov	r5, #0
   1a67c:	mov	r0, r5
   1a680:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a684:	mov	r0, r4
   1a688:	bl	142d0 <argp_parse@@Base+0x13dc>
   1a68c:	mov	r0, r5
   1a690:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a694:	push	{r4, sl, fp, lr}
   1a698:	add	fp, sp, #8
   1a69c:	mov	r4, r0
   1a6a0:	bl	1a6d8 <argp_failure@@Base+0x3800>
   1a6a4:	ldr	r0, [r4, #24]
   1a6a8:	ldr	r1, [r4, #28]
   1a6ac:	cmp	r1, r0
   1a6b0:	bls	1a6c4 <argp_failure@@Base+0x37ec>
   1a6b4:	ldr	r3, [r4]
   1a6b8:	sub	r2, r1, r0
   1a6bc:	mov	r1, #1
   1a6c0:	bl	113c0 <fwrite_unlocked@plt>
   1a6c4:	ldr	r0, [r4, #24]
   1a6c8:	bl	142d0 <argp_parse@@Base+0x13dc>
   1a6cc:	mov	r0, r4
   1a6d0:	pop	{r4, sl, fp, lr}
   1a6d4:	b	142d0 <argp_parse@@Base+0x13dc>
   1a6d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6dc:	add	fp, sp, #28
   1a6e0:	sub	sp, sp, #12
   1a6e4:	mov	sl, r0
   1a6e8:	ldr	r0, [r0, #16]
   1a6ec:	ldr	r1, [sl, #24]
   1a6f0:	ldr	r8, [sl, #28]
   1a6f4:	add	r5, r1, r0
   1a6f8:	cmp	r5, r8
   1a6fc:	bcs	1ac40 <argp_failure@@Base+0x3d68>
   1a700:	ldr	r7, [sl, #20]
   1a704:	mov	r3, #32
   1a708:	cmp	r7, #0
   1a70c:	bne	1a744 <argp_failure@@Base+0x386c>
   1a710:	b	1a74c <argp_failure@@Base+0x3874>
   1a714:	ldr	r0, [sp, #8]
   1a718:	cmp	r7, #0
   1a71c:	mvneq	r7, #0
   1a720:	str	r7, [sl, #20]
   1a724:	sub	r0, r0, r6
   1a728:	add	r0, r0, r9
   1a72c:	add	r8, r5, r0
   1a730:	str	r8, [sl, #28]
   1a734:	cmp	r5, r8
   1a738:	bcs	1ac40 <argp_failure@@Base+0x3d68>
   1a73c:	cmp	r7, #0
   1a740:	beq	1a74c <argp_failure@@Base+0x3874>
   1a744:	mov	r9, r5
   1a748:	b	1a7ec <argp_failure@@Base+0x3914>
   1a74c:	ldr	r7, [sl, #4]
   1a750:	cmp	r7, #0
   1a754:	beq	1a96c <argp_failure@@Base+0x3a94>
   1a758:	ldr	r1, [sl, #32]
   1a75c:	add	r0, r8, r7
   1a760:	mov	r4, r7
   1a764:	cmp	r0, r1
   1a768:	bcs	1a7a0 <argp_failure@@Base+0x38c8>
   1a76c:	add	r9, r5, r7
   1a770:	sub	r2, r8, r5
   1a774:	mov	r1, r5
   1a778:	mov	r0, r9
   1a77c:	bl	11354 <memmove@plt>
   1a780:	ldr	r0, [sl, #28]
   1a784:	mov	r1, #32
   1a788:	mov	r2, r7
   1a78c:	add	r0, r0, r7
   1a790:	str	r0, [sl, #28]
   1a794:	mov	r0, r5
   1a798:	bl	114ec <memset@plt>
   1a79c:	b	1a7e4 <argp_failure@@Base+0x390c>
   1a7a0:	ldr	r0, [sl]
   1a7a4:	ldr	r1, [r0, #20]
   1a7a8:	ldr	r2, [r0, #24]
   1a7ac:	cmp	r1, r2
   1a7b0:	bcs	1a7cc <argp_failure@@Base+0x38f4>
   1a7b4:	add	r2, r1, #1
   1a7b8:	str	r2, [r0, #20]
   1a7bc:	strb	r3, [r1]
   1a7c0:	subs	r4, r4, #1
   1a7c4:	bne	1a7a0 <argp_failure@@Base+0x38c8>
   1a7c8:	b	1a7e0 <argp_failure@@Base+0x3908>
   1a7cc:	mov	r1, #32
   1a7d0:	bl	11510 <__overflow@plt>
   1a7d4:	mov	r3, #32
   1a7d8:	subs	r4, r4, #1
   1a7dc:	bne	1a7a0 <argp_failure@@Base+0x38c8>
   1a7e0:	mov	r9, r5
   1a7e4:	str	r7, [sl, #20]
   1a7e8:	ldr	r8, [sl, #28]
   1a7ec:	sub	r6, r8, r9
   1a7f0:	mov	r0, r9
   1a7f4:	mov	r1, #10
   1a7f8:	mov	r2, r6
   1a7fc:	bl	11504 <memchr@plt>
   1a800:	cmn	r7, #1
   1a804:	mov	r4, r0
   1a808:	movle	r7, #0
   1a80c:	strle	r7, [sl, #20]
   1a810:	cmp	r4, #0
   1a814:	beq	1a848 <argp_failure@@Base+0x3970>
   1a818:	ldr	r5, [sl, #8]
   1a81c:	sub	r0, r4, r9
   1a820:	mov	r3, #32
   1a824:	add	r0, r0, r7
   1a828:	cmp	r0, r5
   1a82c:	bge	1a85c <argp_failure@@Base+0x3984>
   1a830:	mov	r7, #0
   1a834:	add	r5, r4, #1
   1a838:	str	r7, [sl, #20]
   1a83c:	cmp	r5, r8
   1a840:	bcc	1a73c <argp_failure@@Base+0x3864>
   1a844:	b	1ac40 <argp_failure@@Base+0x3d68>
   1a848:	ldr	r5, [sl, #8]
   1a84c:	add	r0, r7, r6
   1a850:	mov	r4, r8
   1a854:	cmp	r0, r5
   1a858:	bcc	1ac24 <argp_failure@@Base+0x3d4c>
   1a85c:	ldr	r0, [sl, #12]
   1a860:	cmn	r0, #1
   1a864:	str	r0, [sp, #4]
   1a868:	ble	1a8c4 <argp_failure@@Base+0x39ec>
   1a86c:	subs	r0, r5, r7
   1a870:	mov	r1, #0
   1a874:	str	r6, [sp, #8]
   1a878:	add	r5, r9, r0
   1a87c:	bmi	1a920 <argp_failure@@Base+0x3a48>
   1a880:	str	r0, [sp]
   1a884:	bl	11480 <__ctype_b_loc@plt>
   1a888:	ldr	r0, [r0]
   1a88c:	mov	r7, r5
   1a890:	ldrb	r1, [r7]
   1a894:	ldrb	r1, [r0, r1, lsl #1]
   1a898:	tst	r1, #1
   1a89c:	bne	1a974 <argp_failure@@Base+0x3a9c>
   1a8a0:	sub	r7, r7, #1
   1a8a4:	cmp	r7, r9
   1a8a8:	bcs	1a890 <argp_failure@@Base+0x39b8>
   1a8ac:	ldr	r0, [sp]
   1a8b0:	mov	r1, #0
   1a8b4:	add	r6, r7, #1
   1a8b8:	cmp	r6, r9
   1a8bc:	bhi	1a930 <argp_failure@@Base+0x3a58>
   1a8c0:	b	1a988 <argp_failure@@Base+0x3ab0>
   1a8c4:	mov	r0, r6
   1a8c8:	sub	r6, r5, #1
   1a8cc:	cmp	r4, r8
   1a8d0:	bcs	1ac2c <argp_failure@@Base+0x3d54>
   1a8d4:	sub	r0, r6, r7
   1a8d8:	sub	r2, r8, r4
   1a8dc:	mov	r1, r4
   1a8e0:	add	r0, r9, r0
   1a8e4:	bl	11354 <memmove@plt>
   1a8e8:	ldr	r0, [sl, #20]
   1a8ec:	ldr	r1, [sl, #28]
   1a8f0:	mov	r7, #0
   1a8f4:	mov	r3, #32
   1a8f8:	add	r5, r9, r5
   1a8fc:	str	r7, [sl, #20]
   1a900:	sub	r0, r6, r0
   1a904:	add	r0, r9, r0
   1a908:	sub	r0, r4, r0
   1a90c:	add	r8, r1, r0
   1a910:	str	r8, [sl, #28]
   1a914:	cmp	r5, r8
   1a918:	bcc	1a73c <argp_failure@@Base+0x3864>
   1a91c:	b	1ac40 <argp_failure@@Base+0x3d68>
   1a920:	mov	r7, r5
   1a924:	add	r6, r7, #1
   1a928:	cmp	r6, r9
   1a92c:	bls	1a988 <argp_failure@@Base+0x3ab0>
   1a930:	cmp	r1, #0
   1a934:	beq	1aa60 <argp_failure@@Base+0x3b88>
   1a938:	ldr	r4, [sp, #4]
   1a93c:	sub	r1, r7, #1
   1a940:	mov	r7, r1
   1a944:	cmp	r1, r9
   1a948:	bcc	1aa64 <argp_failure@@Base+0x3b8c>
   1a94c:	bl	11480 <__ctype_b_loc@plt>
   1a950:	mov	r1, r7
   1a954:	ldr	r0, [r0]
   1a958:	ldrb	r2, [r1], #-1
   1a95c:	ldrb	r0, [r0, r2, lsl #1]
   1a960:	tst	r0, #1
   1a964:	bne	1a940 <argp_failure@@Base+0x3a68>
   1a968:	b	1aa64 <argp_failure@@Base+0x3b8c>
   1a96c:	mov	r7, #0
   1a970:	b	1a744 <argp_failure@@Base+0x386c>
   1a974:	ldr	r0, [sp]
   1a978:	mov	r1, #1
   1a97c:	add	r6, r7, #1
   1a980:	cmp	r6, r9
   1a984:	bhi	1a930 <argp_failure@@Base+0x3a58>
   1a988:	cmp	r5, r4
   1a98c:	bcs	1a9c0 <argp_failure@@Base+0x3ae8>
   1a990:	add	r0, r9, r0
   1a994:	add	r1, r0, #1
   1a998:	mov	r5, r1
   1a99c:	cmp	r1, r4
   1a9a0:	bcs	1a9c0 <argp_failure@@Base+0x3ae8>
   1a9a4:	bl	11480 <__ctype_b_loc@plt>
   1a9a8:	mov	r1, r5
   1a9ac:	ldr	r0, [r0]
   1a9b0:	ldrb	r2, [r1], #1
   1a9b4:	ldrb	r0, [r0, r2, lsl #1]
   1a9b8:	tst	r0, #1
   1a9bc:	beq	1a998 <argp_failure@@Base+0x3ac0>
   1a9c0:	cmp	r5, r4
   1a9c4:	beq	1abf8 <argp_failure@@Base+0x3d20>
   1a9c8:	bl	11480 <__ctype_b_loc@plt>
   1a9cc:	ldr	r0, [r0]
   1a9d0:	mov	r6, r5
   1a9d4:	ldrb	r1, [r6, #1]!
   1a9d8:	ldrb	r1, [r0, r1, lsl #1]
   1a9dc:	tst	r1, #1
   1a9e0:	bne	1a9d4 <argp_failure@@Base+0x3afc>
   1a9e4:	ldr	r4, [sp, #4]
   1a9e8:	mov	r3, #32
   1a9ec:	add	r0, r8, #1
   1a9f0:	cmp	r6, r0
   1a9f4:	bne	1aa78 <argp_failure@@Base+0x3ba0>
   1a9f8:	cmp	r8, r6
   1a9fc:	bls	1ab0c <argp_failure@@Base+0x3c34>
   1aa00:	ldr	r0, [sl, #32]
   1aa04:	sub	r1, r0, r5
   1aa08:	cmp	r1, r4
   1aa0c:	bgt	1ab0c <argp_failure@@Base+0x3c34>
   1aa10:	sub	r0, r0, r8
   1aa14:	add	r1, r4, #1
   1aa18:	cmp	r0, r1
   1aa1c:	ble	1aaa4 <argp_failure@@Base+0x3bcc>
   1aa20:	mov	r0, r4
   1aa24:	sub	r4, r8, r6
   1aa28:	add	r7, r5, #1
   1aa2c:	mov	r1, r6
   1aa30:	add	r0, r7, r0
   1aa34:	mov	r2, r4
   1aa38:	bl	11354 <memmove@plt>
   1aa3c:	ldr	r0, [sl, #12]
   1aa40:	mov	r1, #10
   1aa44:	mov	r3, #32
   1aa48:	strb	r1, [r5]
   1aa4c:	mov	r5, r7
   1aa50:	add	r6, r7, r0
   1aa54:	add	r0, r6, r4
   1aa58:	sub	r0, r0, r9
   1aa5c:	b	1aaf4 <argp_failure@@Base+0x3c1c>
   1aa60:	ldr	r4, [sp, #4]
   1aa64:	add	r5, r7, #1
   1aa68:	mov	r3, #32
   1aa6c:	add	r0, r8, #1
   1aa70:	cmp	r6, r0
   1aa74:	beq	1a9f8 <argp_failure@@Base+0x3b20>
   1aa78:	cmp	r8, r6
   1aa7c:	bls	1ab0c <argp_failure@@Base+0x3c34>
   1aa80:	mvn	r0, r5
   1aa84:	add	r0, r0, r6
   1aa88:	cmp	r0, r4
   1aa8c:	bge	1ab0c <argp_failure@@Base+0x3c34>
   1aa90:	ldr	r0, [sl, #32]
   1aa94:	sub	r0, r0, r8
   1aa98:	add	r1, r4, #1
   1aa9c:	cmp	r0, r1
   1aaa0:	bgt	1aa20 <argp_failure@@Base+0x3b48>
   1aaa4:	ldr	r0, [sl, #24]
   1aaa8:	cmp	r5, r0
   1aaac:	bls	1aac4 <argp_failure@@Base+0x3bec>
   1aab0:	ldr	r3, [sl]
   1aab4:	sub	r2, r5, r0
   1aab8:	mov	r1, #1
   1aabc:	bl	113c0 <fwrite_unlocked@plt>
   1aac0:	mov	r3, #32
   1aac4:	ldr	r0, [sl]
   1aac8:	ldr	r1, [r0, #20]
   1aacc:	ldr	r2, [r0, #24]
   1aad0:	cmp	r1, r2
   1aad4:	bcs	1ac14 <argp_failure@@Base+0x3d3c>
   1aad8:	add	r2, r1, #1
   1aadc:	str	r2, [r0, #20]
   1aae0:	mov	r0, #10
   1aae4:	strb	r0, [r1]
   1aae8:	ldr	r5, [sl, #24]
   1aaec:	sub	r0, r8, r5
   1aaf0:	mov	r9, r5
   1aaf4:	str	r0, [sp, #8]
   1aaf8:	ldr	r7, [sl, #12]
   1aafc:	sub	r0, r6, r5
   1ab00:	cmp	r0, r7
   1ab04:	blt	1ab24 <argp_failure@@Base+0x3c4c>
   1ab08:	b	1aba8 <argp_failure@@Base+0x3cd0>
   1ab0c:	mov	r0, #10
   1ab10:	strb	r0, [r5], #1
   1ab14:	ldr	r7, [sl, #12]
   1ab18:	sub	r0, r6, r5
   1ab1c:	cmp	r0, r7
   1ab20:	bge	1aba8 <argp_failure@@Base+0x3cd0>
   1ab24:	ldr	r0, [sp, #8]
   1ab28:	add	r0, r9, r0
   1ab2c:	add	r0, r0, #1
   1ab30:	cmp	r6, r0
   1ab34:	bne	1ab48 <argp_failure@@Base+0x3c70>
   1ab38:	ldr	r0, [sl, #32]
   1ab3c:	sub	r0, r0, r6
   1ab40:	cmp	r0, r7
   1ab44:	bge	1aba8 <argp_failure@@Base+0x3cd0>
   1ab48:	cmp	r7, #1
   1ab4c:	blt	1abcc <argp_failure@@Base+0x3cf4>
   1ab50:	mov	r4, #0
   1ab54:	ldr	r0, [sl]
   1ab58:	ldr	r1, [r0, #20]
   1ab5c:	ldr	r2, [r0, #24]
   1ab60:	cmp	r1, r2
   1ab64:	bcs	1ab88 <argp_failure@@Base+0x3cb0>
   1ab68:	add	r2, r1, #1
   1ab6c:	str	r2, [r0, #20]
   1ab70:	strb	r3, [r1]
   1ab74:	ldr	r7, [sl, #12]
   1ab78:	add	r4, r4, #1
   1ab7c:	cmp	r4, r7
   1ab80:	blt	1ab54 <argp_failure@@Base+0x3c7c>
   1ab84:	b	1abcc <argp_failure@@Base+0x3cf4>
   1ab88:	mov	r1, #32
   1ab8c:	bl	11510 <__overflow@plt>
   1ab90:	mov	r3, #32
   1ab94:	ldr	r7, [sl, #12]
   1ab98:	add	r4, r4, #1
   1ab9c:	cmp	r4, r7
   1aba0:	blt	1ab54 <argp_failure@@Base+0x3c7c>
   1aba4:	b	1abcc <argp_failure@@Base+0x3cf4>
   1aba8:	cmp	r7, #1
   1abac:	blt	1abcc <argp_failure@@Base+0x3cf4>
   1abb0:	mov	r0, #0
   1abb4:	strb	r3, [r5, r0]
   1abb8:	add	r0, r0, #1
   1abbc:	ldr	r7, [sl, #12]
   1abc0:	cmp	r0, r7
   1abc4:	blt	1abb4 <argp_failure@@Base+0x3cdc>
   1abc8:	add	r5, r5, r0
   1abcc:	cmp	r5, r6
   1abd0:	bcs	1a714 <argp_failure@@Base+0x383c>
   1abd4:	ldr	r0, [sp, #8]
   1abd8:	mov	r1, r6
   1abdc:	add	r0, r9, r0
   1abe0:	sub	r2, r0, r6
   1abe4:	mov	r0, r5
   1abe8:	bl	11354 <memmove@plt>
   1abec:	ldr	r7, [sl, #12]
   1abf0:	mov	r3, #32
   1abf4:	b	1a714 <argp_failure@@Base+0x383c>
   1abf8:	mov	r7, #0
   1abfc:	add	r5, r4, #1
   1ac00:	mov	r3, #32
   1ac04:	str	r7, [sl, #20]
   1ac08:	cmp	r5, r8
   1ac0c:	bcc	1a73c <argp_failure@@Base+0x3864>
   1ac10:	b	1ac40 <argp_failure@@Base+0x3d68>
   1ac14:	mov	r1, #10
   1ac18:	bl	11510 <__overflow@plt>
   1ac1c:	mov	r3, #32
   1ac20:	b	1aae8 <argp_failure@@Base+0x3c10>
   1ac24:	str	r0, [sl, #20]
   1ac28:	b	1ac40 <argp_failure@@Base+0x3d68>
   1ac2c:	add	r0, r7, r0
   1ac30:	str	r0, [sl, #20]
   1ac34:	sub	r0, r6, r0
   1ac38:	add	r8, r8, r0
   1ac3c:	str	r8, [sl, #28]
   1ac40:	ldr	r0, [sl, #24]
   1ac44:	sub	r0, r8, r0
   1ac48:	str	r0, [sl, #16]
   1ac4c:	sub	sp, fp, #28
   1ac50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac54:	push	{r4, r5, r6, sl, fp, lr}
   1ac58:	add	fp, sp, #16
   1ac5c:	mov	r4, r0
   1ac60:	mov	r5, r1
   1ac64:	ldr	r0, [r0, #28]
   1ac68:	mov	r6, #1
   1ac6c:	ldr	r1, [r4, #32]
   1ac70:	sub	r0, r1, r0
   1ac74:	cmp	r0, r5
   1ac78:	bcs	1ad38 <argp_failure@@Base+0x3e60>
   1ac7c:	mov	r0, r4
   1ac80:	bl	1a6d8 <argp_failure@@Base+0x3800>
   1ac84:	ldr	r0, [r4, #24]
   1ac88:	ldr	r1, [r4, #28]
   1ac8c:	ldr	r3, [r4]
   1ac90:	sub	r2, r1, r0
   1ac94:	mov	r1, #1
   1ac98:	bl	113c0 <fwrite_unlocked@plt>
   1ac9c:	mov	r1, r0
   1aca0:	ldr	r0, [r4, #24]
   1aca4:	ldr	r2, [r4, #28]
   1aca8:	sub	r3, r2, r0
   1acac:	cmp	r1, r3
   1acb0:	bne	1ad04 <argp_failure@@Base+0x3e2c>
   1acb4:	mov	r1, #0
   1acb8:	mov	r6, #1
   1acbc:	str	r1, [r4, #16]
   1acc0:	str	r0, [r4, #28]
   1acc4:	ldr	r1, [r4, #32]
   1acc8:	sub	r1, r1, r0
   1accc:	cmp	r1, r5
   1acd0:	bcs	1ad38 <argp_failure@@Base+0x3e60>
   1acd4:	adds	r5, r1, r5
   1acd8:	bcs	1ad28 <argp_failure@@Base+0x3e50>
   1acdc:	mov	r1, r5
   1ace0:	bl	15468 <_obstack_memory_used@@Base+0xd0c>
   1ace4:	cmp	r0, #0
   1ace8:	beq	1ad28 <argp_failure@@Base+0x3e50>
   1acec:	str	r0, [r4, #24]
   1acf0:	add	r1, r0, r5
   1acf4:	str	r0, [r4, #28]
   1acf8:	mov	r0, r6
   1acfc:	str	r1, [r4, #32]
   1ad00:	pop	{r4, r5, r6, sl, fp, pc}
   1ad04:	sub	r2, r2, r1
   1ad08:	str	r2, [r4, #28]
   1ad0c:	sub	r2, r2, r0
   1ad10:	ldr	r3, [r4, #16]
   1ad14:	sub	r3, r3, r1
   1ad18:	add	r1, r0, r1
   1ad1c:	str	r3, [r4, #16]
   1ad20:	bl	11354 <memmove@plt>
   1ad24:	b	1ad34 <argp_failure@@Base+0x3e5c>
   1ad28:	bl	114c8 <__errno_location@plt>
   1ad2c:	mov	r1, #12
   1ad30:	str	r1, [r0]
   1ad34:	mov	r6, #0
   1ad38:	mov	r0, r6
   1ad3c:	pop	{r4, r5, r6, sl, fp, pc}
   1ad40:	sub	sp, sp, #8
   1ad44:	push	{r4, r5, r6, r7, fp, lr}
   1ad48:	add	fp, sp, #16
   1ad4c:	sub	sp, sp, #8
   1ad50:	mov	r5, r1
   1ad54:	mov	r4, r0
   1ad58:	mov	r1, #150	; 0x96
   1ad5c:	add	r6, fp, #8
   1ad60:	str	r2, [fp, #8]
   1ad64:	str	r3, [fp, #12]
   1ad68:	mov	r0, r4
   1ad6c:	bl	1ac54 <argp_failure@@Base+0x3d7c>
   1ad70:	cmp	r0, #0
   1ad74:	beq	1adc0 <argp_failure@@Base+0x3ee8>
   1ad78:	str	r6, [sp, #4]
   1ad7c:	mov	r2, r5
   1ad80:	mov	r3, r6
   1ad84:	ldr	r0, [r4, #28]
   1ad88:	ldr	r1, [r4, #32]
   1ad8c:	sub	r7, r1, r0
   1ad90:	mov	r1, r7
   1ad94:	bl	11564 <vsnprintf@plt>
   1ad98:	add	r1, r0, #1
   1ad9c:	cmp	r0, r7
   1ada0:	bcs	1ad68 <argp_failure@@Base+0x3e90>
   1ada4:	ldr	r1, [r4, #28]
   1ada8:	add	r1, r1, r0
   1adac:	str	r1, [r4, #28]
   1adb0:	sub	sp, fp, #16
   1adb4:	pop	{r4, r5, r6, r7, fp, lr}
   1adb8:	add	sp, sp, #8
   1adbc:	bx	lr
   1adc0:	mvn	r0, #0
   1adc4:	sub	sp, fp, #16
   1adc8:	pop	{r4, r5, r6, r7, fp, lr}
   1adcc:	add	sp, sp, #8
   1add0:	bx	lr
   1add4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1add8:	mov	r7, r0
   1addc:	ldr	r6, [pc, #72]	; 1ae2c <argp_failure@@Base+0x3f54>
   1ade0:	ldr	r5, [pc, #72]	; 1ae30 <argp_failure@@Base+0x3f58>
   1ade4:	add	r6, pc, r6
   1ade8:	add	r5, pc, r5
   1adec:	sub	r6, r6, r5
   1adf0:	mov	r8, r1
   1adf4:	mov	r9, r2
   1adf8:	bl	112e0 <fdopen@plt-0x20>
   1adfc:	asrs	r6, r6, #2
   1ae00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae04:	mov	r4, #0
   1ae08:	add	r4, r4, #1
   1ae0c:	ldr	r3, [r5], #4
   1ae10:	mov	r2, r9
   1ae14:	mov	r1, r8
   1ae18:	mov	r0, r7
   1ae1c:	blx	r3
   1ae20:	cmp	r6, r4
   1ae24:	bne	1ae08 <argp_failure@@Base+0x3f30>
   1ae28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae2c:	andeq	r3, r1, r0, lsr #2
   1ae30:	andeq	r3, r1, r8, lsl r1
   1ae34:	bx	lr

Disassembly of section .fini:

0001ae38 <.fini>:
   1ae38:	push	{r3, lr}
   1ae3c:	pop	{r3, pc}
