
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00010e90 <.init>:
   10e90:	push	{r3, lr}
   10e94:	bl	125dc <__assert_fail@plt+0x1450>
   10e98:	pop	{r3, pc}

Disassembly of section .plt:

00010e9c <fdopen@plt-0x14>:
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	ldr	lr, [pc, #4]	; 10eac <fdopen@plt-0x4>
   10ea4:	add	lr, pc, lr
   10ea8:	ldr	pc, [lr, #8]!
   10eac:	andeq	r0, r2, r4, asr r1

00010eb0 <fdopen@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #32, 20	; 0x20000
   10eb8:	ldr	pc, [ip, #340]!	; 0x154

00010ebc <calloc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #32, 20	; 0x20000
   10ec4:	ldr	pc, [ip, #332]!	; 0x14c

00010ec8 <fputs_unlocked@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #32, 20	; 0x20000
   10ed0:	ldr	pc, [ip, #324]!	; 0x144

00010ed4 <raise@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #32, 20	; 0x20000
   10edc:	ldr	pc, [ip, #316]!	; 0x13c

00010ee0 <__getdelim@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #32, 20	; 0x20000
   10ee8:	ldr	pc, [ip, #308]!	; 0x134

00010eec <strcmp@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #32, 20	; 0x20000
   10ef4:	ldr	pc, [ip, #300]!	; 0x12c

00010ef8 <posix_fadvise64@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #32, 20	; 0x20000
   10f00:	ldr	pc, [ip, #292]!	; 0x124

00010f04 <fflush@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #32, 20	; 0x20000
   10f0c:	ldr	pc, [ip, #284]!	; 0x11c

00010f10 <free@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #32, 20	; 0x20000
   10f18:	ldr	pc, [ip, #276]!	; 0x114

00010f1c <ferror@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #32, 20	; 0x20000
   10f24:	ldr	pc, [ip, #268]!	; 0x10c

00010f28 <_exit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #32, 20	; 0x20000
   10f30:	ldr	pc, [ip, #260]!	; 0x104

00010f34 <memcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #32, 20	; 0x20000
   10f3c:	ldr	pc, [ip, #252]!	; 0xfc

00010f40 <__strtoull_internal@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #32, 20	; 0x20000
   10f48:	ldr	pc, [ip, #244]!	; 0xf4

00010f4c <mbsinit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #32, 20	; 0x20000
   10f54:	ldr	pc, [ip, #236]!	; 0xec

00010f58 <fwrite_unlocked@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #32, 20	; 0x20000
   10f60:	ldr	pc, [ip, #228]!	; 0xe4

00010f64 <memcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #32, 20	; 0x20000
   10f6c:	ldr	pc, [ip, #220]!	; 0xdc

00010f70 <fputc_unlocked@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #32, 20	; 0x20000
   10f78:	ldr	pc, [ip, #212]!	; 0xd4

00010f7c <dcgettext@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #32, 20	; 0x20000
   10f84:	ldr	pc, [ip, #204]!	; 0xcc

00010f88 <realloc@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #32, 20	; 0x20000
   10f90:	ldr	pc, [ip, #196]!	; 0xc4

00010f94 <textdomain@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #32, 20	; 0x20000
   10f9c:	ldr	pc, [ip, #188]!	; 0xbc

00010fa0 <iswprint@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #32, 20	; 0x20000
   10fa8:	ldr	pc, [ip, #180]!	; 0xb4

00010fac <__memcpy_chk@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #32, 20	; 0x20000
   10fb4:	ldr	pc, [ip, #172]!	; 0xac

00010fb8 <fwrite@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #32, 20	; 0x20000
   10fc0:	ldr	pc, [ip, #164]!	; 0xa4

00010fc4 <lseek64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #32, 20	; 0x20000
   10fcc:	ldr	pc, [ip, #156]!	; 0x9c

00010fd0 <__ctype_get_mb_cur_max@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #32, 20	; 0x20000
   10fd8:	ldr	pc, [ip, #148]!	; 0x94

00010fdc <fread@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #32, 20	; 0x20000
   10fe4:	ldr	pc, [ip, #140]!	; 0x8c

00010fe8 <__fpending@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #32, 20	; 0x20000
   10ff0:	ldr	pc, [ip, #132]!	; 0x84

00010ff4 <mbrtowc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #32, 20	; 0x20000
   10ffc:	ldr	pc, [ip, #124]!	; 0x7c

00011000 <error@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #32, 20	; 0x20000
   11008:	ldr	pc, [ip, #116]!	; 0x74

0001100c <malloc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #32, 20	; 0x20000
   11014:	ldr	pc, [ip, #108]!	; 0x6c

00011018 <__libc_start_main@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #32, 20	; 0x20000
   11020:	ldr	pc, [ip, #100]!	; 0x64

00011024 <__freading@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #32, 20	; 0x20000
   1102c:	ldr	pc, [ip, #92]!	; 0x5c

00011030 <__ctype_tolower_loc@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #32, 20	; 0x20000
   11038:	ldr	pc, [ip, #84]!	; 0x54

0001103c <__gmon_start__@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #32, 20	; 0x20000
   11044:	ldr	pc, [ip, #76]!	; 0x4c

00011048 <getopt_long@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #32, 20	; 0x20000
   11050:	ldr	pc, [ip, #68]!	; 0x44

00011054 <__ctype_b_loc@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #32, 20	; 0x20000
   1105c:	ldr	pc, [ip, #60]!	; 0x3c

00011060 <exit@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #32, 20	; 0x20000
   11068:	ldr	pc, [ip, #52]!	; 0x34

0001106c <feof@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #32, 20	; 0x20000
   11074:	ldr	pc, [ip, #44]!	; 0x2c

00011078 <strlen@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #32, 20	; 0x20000
   11080:	ldr	pc, [ip, #36]!	; 0x24

00011084 <strchr@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #32, 20	; 0x20000
   1108c:	ldr	pc, [ip, #28]!

00011090 <__errno_location@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #32, 20	; 0x20000
   11098:	ldr	pc, [ip, #20]!

0001109c <__cxa_atexit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #32, 20	; 0x20000
   110a4:	ldr	pc, [ip, #12]!

000110a8 <setvbuf@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #32, 20	; 0x20000
   110b0:	ldr	pc, [ip, #4]!

000110b4 <memset@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #126976	; 0x1f000
   110bc:	ldr	pc, [ip, #4092]!	; 0xffc

000110c0 <__printf_chk@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #126976	; 0x1f000
   110c8:	ldr	pc, [ip, #4084]!	; 0xff4

000110cc <fileno@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #126976	; 0x1f000
   110d4:	ldr	pc, [ip, #4076]!	; 0xfec

000110d8 <__fprintf_chk@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #126976	; 0x1f000
   110e0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e4 <fclose@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #126976	; 0x1f000
   110ec:	ldr	pc, [ip, #4060]!	; 0xfdc

000110f0 <fseeko64@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #126976	; 0x1f000
   110f8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110fc <fcntl64@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #126976	; 0x1f000
   11104:	ldr	pc, [ip, #4044]!	; 0xfcc

00011108 <__overflow@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #126976	; 0x1f000
   11110:	ldr	pc, [ip, #4036]!	; 0xfc4

00011114 <setlocale@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #126976	; 0x1f000
   1111c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011120 <strrchr@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #126976	; 0x1f000
   11128:	ldr	pc, [ip, #4020]!	; 0xfb4

0001112c <nl_langinfo@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #126976	; 0x1f000
   11134:	ldr	pc, [ip, #4012]!	; 0xfac

00011138 <clearerr_unlocked@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #126976	; 0x1f000
   11140:	ldr	pc, [ip, #4004]!	; 0xfa4

00011144 <fopen64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #126976	; 0x1f000
   1114c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011150 <bindtextdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #126976	; 0x1f000
   11158:	ldr	pc, [ip, #3988]!	; 0xf94

0001115c <strncmp@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #126976	; 0x1f000
   11164:	ldr	pc, [ip, #3980]!	; 0xf8c

00011168 <abort@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #126976	; 0x1f000
   11170:	ldr	pc, [ip, #3972]!	; 0xf84

00011174 <close@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #126976	; 0x1f000
   1117c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011180 <dcngettext@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #126976	; 0x1f000
   11188:	ldr	pc, [ip, #3956]!	; 0xf74

0001118c <__assert_fail@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #126976	; 0x1f000
   11194:	ldr	pc, [ip, #3948]!	; 0xf6c

Disassembly of section .text:

00011198 <.text>:
   11198:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1119c:	movw	r4, #4484	; 0x1184
   111a0:	movt	r4, #3
   111a4:	strd	r6, [sp, #8]
   111a8:	mov	r5, #0
   111ac:	movw	r7, #63240	; 0xf708
   111b0:	movt	r7, #1
   111b4:	strd	r8, [sp, #16]
   111b8:	mov	r9, r0
   111bc:	strd	sl, [sp, #24]
   111c0:	movw	sl, #61812	; 0xf174
   111c4:	movt	sl, #1
   111c8:	str	lr, [sp, #32]
   111cc:	sub	sp, sp, #324	; 0x144
   111d0:	mov	r8, r1
   111d4:	ldr	r0, [r1]
   111d8:	movw	r6, #4496	; 0x1190
   111dc:	movt	r6, #3
   111e0:	str	sl, [sp, #40]	; 0x28
   111e4:	str	r4, [sp, #68]	; 0x44
   111e8:	bl	18dfc <__assert_fail@plt+0x7c70>
   111ec:	mov	r1, sl
   111f0:	mov	r0, #6
   111f4:	str	r5, [sp, #24]
   111f8:	bl	11114 <setlocale@plt>
   111fc:	movw	r1, #63116	; 0xf68c
   11200:	movt	r1, #1
   11204:	movw	r0, #62948	; 0xf5e4
   11208:	movt	r0, #1
   1120c:	bl	11150 <bindtextdomain@plt>
   11210:	movw	r0, #62948	; 0xf5e4
   11214:	movt	r0, #1
   11218:	bl	10f94 <textdomain@plt>
   1121c:	movw	r0, #35276	; 0x89cc
   11220:	movt	r0, #1
   11224:	bl	1ed8c <__assert_fail@plt+0xdc00>
   11228:	mov	r3, r5
   1122c:	mov	r1, r5
   11230:	ldr	r0, [r4]
   11234:	mov	r2, #1
   11238:	bl	110a8 <setvbuf@plt>
   1123c:	str	r5, [sp, #28]
   11240:	mvn	r5, #0
   11244:	mov	r4, #0
   11248:	ldr	r3, [pc, #4072]	; 12238 <__assert_fail@plt+0x10ac>
   1124c:	mov	r2, r7
   11250:	mov	r1, r8
   11254:	mov	r0, r9
   11258:	str	r4, [sp]
   1125c:	bl	11048 <getopt_long@plt>
   11260:	cmn	r0, #1
   11264:	beq	11480 <__assert_fail@plt+0x2f4>
   11268:	cmp	r0, #119	; 0x77
   1126c:	beq	11394 <__assert_fail@plt+0x208>
   11270:	ble	112a8 <__assert_fail@plt+0x11c>
   11274:	movw	r3, #257	; 0x101
   11278:	cmp	r0, r3
   1127c:	beq	113b4 <__assert_fail@plt+0x228>
   11280:	ble	112e4 <__assert_fail@plt+0x158>
   11284:	movw	r3, #259	; 0x103
   11288:	cmp	r0, r3
   1128c:	beq	113a8 <__assert_fail@plt+0x21c>
   11290:	bge	112cc <__assert_fail@plt+0x140>
   11294:	mov	r3, #1
   11298:	strb	r4, [r6, #17]
   1129c:	strb	r4, [r6, #18]
   112a0:	strb	r3, [r6, #19]
   112a4:	b	11244 <__assert_fail@plt+0xb8>
   112a8:	cmp	r0, #98	; 0x62
   112ac:	beq	1138c <__assert_fail@plt+0x200>
   112b0:	ble	1130c <__assert_fail@plt+0x180>
   112b4:	cmp	r0, #108	; 0x6c
   112b8:	beq	113c8 <__assert_fail@plt+0x23c>
   112bc:	cmp	r0, #116	; 0x74
   112c0:	bne	112fc <__assert_fail@plt+0x170>
   112c4:	mov	r5, r4
   112c8:	b	11244 <__assert_fail@plt+0xb8>
   112cc:	cmp	r0, #260	; 0x104
   112d0:	bne	11304 <__assert_fail@plt+0x178>
   112d4:	mov	r3, #1
   112d8:	mov	r5, r3
   112dc:	str	r3, [sp, #24]
   112e0:	b	11244 <__assert_fail@plt+0xb8>
   112e4:	cmp	r0, #122	; 0x7a
   112e8:	bne	1135c <__assert_fail@plt+0x1d0>
   112ec:	movw	r3, #4368	; 0x1110
   112f0:	movt	r3, #3
   112f4:	strb	r4, [r3]
   112f8:	b	11244 <__assert_fail@plt+0xb8>
   112fc:	cmp	r0, #99	; 0x63
   11300:	beq	11380 <__assert_fail@plt+0x1f4>
   11304:	mov	r0, #1
   11308:	bl	12a44 <__assert_fail@plt+0x18b8>
   1130c:	cmn	r0, #3
   11310:	bne	11370 <__assert_fail@plt+0x1e4>
   11314:	ldr	r3, [sp, #68]	; 0x44
   11318:	movw	r2, #63208	; 0xf6e8
   1131c:	movt	r2, #1
   11320:	movw	r1, #63224	; 0xf6f8
   11324:	movt	r1, #1
   11328:	str	r4, [sp, #8]
   1132c:	ldr	r0, [r3]
   11330:	movw	r3, #4380	; 0x111c
   11334:	movt	r3, #3
   11338:	stm	sp, {r1, r2}
   1133c:	movw	r2, #62944	; 0xf5e0
   11340:	movt	r2, #1
   11344:	movw	r1, #61168	; 0xeef0
   11348:	movt	r1, #1
   1134c:	ldr	r3, [r3]
   11350:	bl	1ce3c <__assert_fail@plt+0xbcb0>
   11354:	mov	r0, r4
   11358:	bl	11060 <exit@plt>
   1135c:	cmp	r0, #256	; 0x100
   11360:	bne	11304 <__assert_fail@plt+0x178>
   11364:	mov	r3, #1
   11368:	strb	r3, [r6, #16]
   1136c:	b	11244 <__assert_fail@plt+0xb8>
   11370:	cmn	r0, #2
   11374:	bne	11304 <__assert_fail@plt+0x178>
   11378:	mov	r0, r4
   1137c:	bl	12a44 <__assert_fail@plt+0x18b8>
   11380:	mov	r3, #1
   11384:	str	r3, [sp, #28]
   11388:	b	11244 <__assert_fail@plt+0xb8>
   1138c:	mov	r5, #1
   11390:	b	11244 <__assert_fail@plt+0xb8>
   11394:	mov	r3, #1
   11398:	strb	r4, [r6, #17]
   1139c:	strb	r3, [r6, #18]
   113a0:	strb	r4, [r6, #19]
   113a4:	b	11244 <__assert_fail@plt+0xb8>
   113a8:	mov	r3, #1
   113ac:	strb	r3, [r6, #20]
   113b0:	b	11244 <__assert_fail@plt+0xb8>
   113b4:	mov	r3, #1
   113b8:	strb	r3, [r6, #17]
   113bc:	strb	r4, [r6, #18]
   113c0:	strb	r4, [r6, #19]
   113c4:	b	11244 <__assert_fail@plt+0xb8>
   113c8:	movw	r3, #4488	; 0x1188
   113cc:	movt	r3, #3
   113d0:	mov	r2, #5
   113d4:	movw	r1, #63140	; 0xf6a4
   113d8:	movt	r1, #1
   113dc:	str	r3, [sp, #44]	; 0x2c
   113e0:	mov	r0, r4
   113e4:	ldr	r3, [r3]
   113e8:	mvn	fp, #0
   113ec:	mov	sl, r3
   113f0:	bl	10f7c <dcgettext@plt>
   113f4:	ldr	r3, [sp, #40]	; 0x28
   113f8:	mov	r2, #0
   113fc:	str	r0, [sp, #12]
   11400:	mov	r0, sl
   11404:	mvn	sl, #0
   11408:	str	r4, [sp, #16]
   1140c:	strd	sl, [sp]
   11410:	str	r3, [sp, #8]
   11414:	mov	r3, #0
   11418:	bl	1d78c <__assert_fail@plt+0xc600>
   1141c:	and	r3, r0, #7
   11420:	strd	r0, [r6, #8]
   11424:	str	r3, [sp, #32]
   11428:	ldr	r3, [sp, #44]	; 0x2c
   1142c:	str	r4, [sp, #36]	; 0x24
   11430:	ldr	sl, [r3]
   11434:	ldrd	r2, [sp, #32]
   11438:	orrs	r3, r2, r3
   1143c:	beq	11244 <__assert_fail@plt+0xb8>
   11440:	mov	r2, #5
   11444:	movw	r1, #63156	; 0xf6b4
   11448:	movt	r1, #1
   1144c:	mov	r0, r4
   11450:	bl	10f7c <dcgettext@plt>
   11454:	mov	r5, r0
   11458:	mov	r0, sl
   1145c:	bl	1c76c <__assert_fail@plt+0xb5e0>
   11460:	mov	r3, r0
   11464:	mov	r1, r4
   11468:	mov	r2, r5
   1146c:	mov	r0, r4
   11470:	bl	11000 <error@plt>
   11474:	movw	r1, #63176	; 0xf6c8
   11478:	movt	r1, #1
   1147c:	b	12430 <__assert_fail@plt+0x12a4>
   11480:	movw	fp, #4496	; 0x1190
   11484:	movt	fp, #3
   11488:	ldrd	r2, [fp, #8]
   1148c:	mov	r1, #3
   11490:	str	r1, [fp, #24]
   11494:	cmp	r3, #0
   11498:	cmpeq	r2, #512	; 0x200
   1149c:	bhi	1252c <__assert_fail@plt+0x13a0>
   114a0:	orrs	r3, r2, r3
   114a4:	beq	1155c <__assert_fail@plt+0x3d0>
   114a8:	ldr	r3, [fp, #8]
   114ac:	cmp	r5, #0
   114b0:	ldr	r2, [fp, #12]
   114b4:	ldr	r4, [sp, #24]
   114b8:	movne	r4, #0
   114bc:	lsr	r3, r3, #2
   114c0:	orr	r3, r3, r2, lsl #30
   114c4:	cmp	r4, #0
   114c8:	str	r3, [fp, #28]
   114cc:	bne	124f0 <__assert_fail@plt+0x1364>
   114d0:	movw	r3, #4368	; 0x1110
   114d4:	movt	r3, #3
   114d8:	str	r3, [sp, #116]	; 0x74
   114dc:	ldrb	r3, [r3]
   114e0:	cmp	r3, #10
   114e4:	ldr	r3, [sp, #28]
   114e8:	beq	1156c <__assert_fail@plt+0x3e0>
   114ec:	cmp	r3, #0
   114f0:	movwne	r1, #63324	; 0xf75c
   114f4:	movtne	r1, #1
   114f8:	bne	1153c <__assert_fail@plt+0x3b0>
   114fc:	ldrb	r3, [fp, #16]
   11500:	cmp	r3, #0
   11504:	bne	12520 <__assert_fail@plt+0x1394>
   11508:	ldrb	r3, [fp, #17]
   1150c:	cmp	r3, #0
   11510:	bne	12514 <__assert_fail@plt+0x1388>
   11514:	ldrb	r3, [fp, #18]
   11518:	cmp	r3, #0
   1151c:	bne	12268 <__assert_fail@plt+0x10dc>
   11520:	ldrb	r3, [fp, #19]
   11524:	ldr	r2, [sp, #28]
   11528:	eor	r3, r3, #1
   1152c:	orrs	r4, r2, r3
   11530:	movweq	r1, #63720	; 0xf8e8
   11534:	movteq	r1, #1
   11538:	bne	115c4 <__assert_fail@plt+0x438>
   1153c:	mov	r2, #5
   11540:	mov	r0, #0
   11544:	bl	10f7c <dcgettext@plt>
   11548:	mov	r1, #0
   1154c:	mov	r2, r0
   11550:	mov	r0, r1
   11554:	bl	11000 <error@plt>
   11558:	b	11304 <__assert_fail@plt+0x178>
   1155c:	mov	r2, #512	; 0x200
   11560:	mov	r3, #0
   11564:	strd	r2, [fp, #8]
   11568:	b	114a8 <__assert_fail@plt+0x31c>
   1156c:	ldr	r2, [sp, #24]
   11570:	ands	r6, r3, r2
   11574:	movwne	r1, #63384	; 0xf798
   11578:	movtne	r1, #1
   1157c:	bne	1153c <__assert_fail@plt+0x3b0>
   11580:	ldr	r3, [sp, #28]
   11584:	cmp	r5, #0
   11588:	movlt	r3, #0
   1158c:	andge	r3, r3, #1
   11590:	cmp	r3, #0
   11594:	movwne	r1, #63444	; 0xf7d4
   11598:	movtne	r1, #1
   1159c:	bne	1153c <__assert_fail@plt+0x3b0>
   115a0:	ldrb	r3, [fp, #16]
   115a4:	cmp	r3, #0
   115a8:	beq	124fc <__assert_fail@plt+0x1370>
   115ac:	ldr	r3, [sp, #28]
   115b0:	cmp	r3, #0
   115b4:	beq	12520 <__assert_fail@plt+0x1394>
   115b8:	ldrb	r3, [fp, #18]
   115bc:	cmp	r3, #0
   115c0:	bne	115e0 <__assert_fail@plt+0x454>
   115c4:	ldr	r3, [sp, #28]
   115c8:	ldrb	r2, [fp, #20]
   115cc:	eor	r3, r3, #1
   115d0:	tst	r2, r3
   115d4:	movwne	r1, #63784	; 0xf928
   115d8:	movtne	r1, #1
   115dc:	bne	1153c <__assert_fail@plt+0x3b0>
   115e0:	movw	r3, #4464	; 0x1170
   115e4:	movt	r3, #3
   115e8:	add	r2, r8, r9, lsl #2
   115ec:	ldr	r3, [r3]
   115f0:	cmn	r5, #1
   115f4:	moveq	r5, #0
   115f8:	str	r2, [sp, #104]	; 0x68
   115fc:	cmp	r3, r9
   11600:	bne	11618 <__assert_fail@plt+0x48c>
   11604:	add	r2, r2, #4
   11608:	str	r2, [sp, #104]	; 0x68
   1160c:	movw	r2, #61160	; 0xeee8
   11610:	movt	r2, #1
   11614:	str	r2, [r8, r9, lsl #2]
   11618:	add	r8, r8, r3, lsl #2
   1161c:	ldr	r3, [sp, #104]	; 0x68
   11620:	cmp	r3, r8
   11624:	bls	12484 <__assert_fail@plt+0x12f8>
   11628:	cmp	r5, #0
   1162c:	movw	r2, #64372	; 0xfb74
   11630:	movt	r2, #1
   11634:	movne	r3, #42	; 0x2a
   11638:	str	r8, [sp, #44]	; 0x2c
   1163c:	moveq	r3, #32
   11640:	mov	r8, fp
   11644:	str	r2, [sp, #132]	; 0x84
   11648:	str	r3, [sp, #140]	; 0x8c
   1164c:	uxtb	r3, r3
   11650:	str	r3, [sp, #136]	; 0x88
   11654:	movw	r3, #61292	; 0xef6c
   11658:	movt	r3, #1
   1165c:	str	r3, [sp, #40]	; 0x28
   11660:	mov	r3, #1
   11664:	str	r3, [sp, #76]	; 0x4c
   11668:	ldr	r3, [sp, #28]
   1166c:	cmp	r3, #0
   11670:	ldr	r3, [sp, #44]	; 0x2c
   11674:	ldr	r0, [r3], #4
   11678:	str	r3, [sp, #44]	; 0x2c
   1167c:	str	r0, [sp, #56]	; 0x38
   11680:	beq	11d44 <__assert_fail@plt+0xbb8>
   11684:	movw	r1, #61160	; 0xeee8
   11688:	movt	r1, #1
   1168c:	bl	10eec <strcmp@plt>
   11690:	subs	r3, r0, #0
   11694:	str	r3, [sp, #72]	; 0x48
   11698:	bne	11df0 <__assert_fail@plt+0xc64>
   1169c:	mov	r3, #1
   116a0:	movw	r1, #63848	; 0xf968
   116a4:	movt	r1, #1
   116a8:	mov	r2, #5
   116ac:	strb	r3, [r8]
   116b0:	bl	10f7c <dcgettext@plt>
   116b4:	movw	r3, #4480	; 0x1180
   116b8:	movt	r3, #3
   116bc:	str	r0, [sp, #56]	; 0x38
   116c0:	ldr	r3, [r3]
   116c4:	str	r3, [sp, #80]	; 0x50
   116c8:	ldr	r5, [sp, #80]	; 0x50
   116cc:	mov	r3, #0
   116d0:	mov	r0, #0
   116d4:	mov	r1, #0
   116d8:	movw	r2, #63892	; 0xf994
   116dc:	movt	r2, #1
   116e0:	mov	sl, #1
   116e4:	mov	fp, #0
   116e8:	strd	r0, [sp, #32]
   116ec:	str	r3, [sp, #84]	; 0x54
   116f0:	str	r3, [sp, #112]	; 0x70
   116f4:	str	r3, [sp, #156]	; 0x9c
   116f8:	str	r3, [sp, #160]	; 0xa0
   116fc:	movw	r3, #63976	; 0xf9e8
   11700:	movt	r3, #1
   11704:	strd	r0, [sp, #48]	; 0x30
   11708:	strd	r0, [sp, #96]	; 0x60
   1170c:	str	r2, [sp, #108]	; 0x6c
   11710:	str	r3, [sp, #128]	; 0x80
   11714:	mov	r3, r5
   11718:	mov	r2, #10
   1171c:	add	r1, sp, #160	; 0xa0
   11720:	add	r0, sp, #156	; 0x9c
   11724:	bl	10ee0 <__getdelim@plt>
   11728:	subs	r6, r0, #0
   1172c:	ble	11b30 <__assert_fail@plt+0x9a4>
   11730:	ldr	r3, [sp, #156]	; 0x9c
   11734:	ldrb	r2, [r3]
   11738:	cmp	r2, #35	; 0x23
   1173c:	beq	1188c <__assert_fail@plt+0x700>
   11740:	add	r2, r3, r6
   11744:	ldrb	r0, [r2, #-1]
   11748:	cmp	r0, #10
   1174c:	subeq	r6, r6, #1
   11750:	cmp	r6, #0
   11754:	movle	r2, r6
   11758:	subgt	r2, r6, #1
   1175c:	ldrb	r0, [r3, r2]
   11760:	cmp	r0, #13
   11764:	subeq	r6, r6, #1
   11768:	cmp	r6, #0
   1176c:	beq	1188c <__assert_fail@plt+0x700>
   11770:	mov	r7, #0
   11774:	strb	r7, [r3, r6]
   11778:	ldr	r9, [sp, #156]	; 0x9c
   1177c:	ldrb	r3, [r9]
   11780:	cmp	r3, #9
   11784:	cmpne	r3, #32
   11788:	moveq	r2, #1
   1178c:	movne	r2, #0
   11790:	bne	11e44 <__assert_fail@plt+0xcb8>
   11794:	add	r2, r9, #1
   11798:	mov	r4, r2
   1179c:	ldrb	r3, [r2], #1
   117a0:	add	r7, r7, #1
   117a4:	cmp	r3, #9
   117a8:	cmpne	r3, #32
   117ac:	beq	11798 <__assert_fail@plt+0x60c>
   117b0:	cmp	r3, #92	; 0x5c
   117b4:	mov	r2, #7
   117b8:	ldr	r1, [sp, #40]	; 0x28
   117bc:	addeq	r7, r7, #1
   117c0:	movne	r3, #0
   117c4:	ldreq	r3, [sp, #28]
   117c8:	addeq	r4, r9, r7
   117cc:	mov	r0, r4
   117d0:	str	r3, [sp, #64]	; 0x40
   117d4:	bl	1115c <strncmp@plt>
   117d8:	subs	ip, r0, #0
   117dc:	bne	118e8 <__assert_fail@plt+0x75c>
   117e0:	add	r3, r7, #7
   117e4:	mov	r0, r4
   117e8:	ldr	r1, [sp, #40]	; 0x28
   117ec:	add	r2, r9, r3
   117f0:	ldrb	r4, [r9, r3]
   117f4:	strb	ip, [r9, r3]
   117f8:	str	r3, [sp, #60]	; 0x3c
   117fc:	str	r2, [sp, #88]	; 0x58
   11800:	bl	10eec <strcmp@plt>
   11804:	subs	ip, r0, #0
   11808:	bne	11868 <__assert_fail@plt+0x6dc>
   1180c:	cmp	r4, #40	; 0x28
   11810:	mov	r0, #512	; 0x200
   11814:	ldr	r3, [sp, #60]	; 0x3c
   11818:	mov	r1, #0
   1181c:	ldreq	r2, [sp, #88]	; 0x58
   11820:	strdeq	r0, [r8, #8]
   11824:	strbeq	r4, [r2]
   11828:	beq	1183c <__assert_fail@plt+0x6b0>
   1182c:	cmp	r4, #45	; 0x2d
   11830:	add	r3, r7, #8
   11834:	strd	r0, [r8, #8]
   11838:	beq	11fb0 <__assert_fail@plt+0xe24>
   1183c:	ldrb	r2, [r9, r3]
   11840:	ldr	r7, [r8, #8]
   11844:	ldr	r1, [r8, #12]
   11848:	cmp	r2, #32
   1184c:	addeq	r3, r3, #1
   11850:	ldrb	r2, [r9, r3]
   11854:	lsr	r7, r7, #2
   11858:	orr	r7, r7, r1, lsl #30
   1185c:	cmp	r2, #40	; 0x28
   11860:	str	r7, [r8, #28]
   11864:	beq	12024 <__assert_fail@plt+0xe98>
   11868:	ldr	r2, [sp, #32]
   1186c:	ldrb	r3, [r8, #18]
   11870:	adds	r2, r2, #1
   11874:	str	r2, [sp, #32]
   11878:	ldr	r2, [sp, #36]	; 0x24
   1187c:	adc	r2, r2, #0
   11880:	cmp	r3, #0
   11884:	str	r2, [sp, #36]	; 0x24
   11888:	bne	11da8 <__assert_fail@plt+0xc1c>
   1188c:	ldr	r3, [r5]
   11890:	ands	r3, r3, #48	; 0x30
   11894:	bne	11b30 <__assert_fail@plt+0x9a4>
   11898:	adds	sl, sl, #1
   1189c:	adc	fp, fp, #0
   118a0:	orrs	r2, sl, fp
   118a4:	bne	11714 <__assert_fail@plt+0x588>
   118a8:	mov	r0, r3
   118ac:	mov	r2, #5
   118b0:	movw	r1, #63864	; 0xf978
   118b4:	movt	r1, #1
   118b8:	mov	r4, r3
   118bc:	bl	10f7c <dcgettext@plt>
   118c0:	mov	r5, r0
   118c4:	mov	r1, #3
   118c8:	ldr	r2, [sp, #56]	; 0x38
   118cc:	mov	r0, r4
   118d0:	bl	1bfc0 <__assert_fail@plt+0xae34>
   118d4:	mov	r3, r0
   118d8:	mov	r2, r5
   118dc:	mov	r1, r4
   118e0:	mov	r0, #1
   118e4:	bl	11000 <error@plt>
   118e8:	ldrb	r3, [r4]
   118ec:	sub	r1, r6, r7
   118f0:	ldr	r2, [r8, #24]
   118f4:	str	r3, [sp, #60]	; 0x3c
   118f8:	cmp	r3, #92	; 0x5c
   118fc:	addeq	r2, r2, #1
   11900:	cmp	r1, r2
   11904:	bcc	11868 <__assert_fail@plt+0x6dc>
   11908:	mov	r2, #0
   1190c:	str	r2, [r8, #28]
   11910:	bl	11054 <__ctype_b_loc@plt>
   11914:	ldr	r3, [sp, #60]	; 0x3c
   11918:	ldr	ip, [r0]
   1191c:	lsl	r3, r3, #1
   11920:	ldrh	r3, [ip, r3]
   11924:	tst	r3, #4096	; 0x1000
   11928:	beq	11868 <__assert_fail@plt+0x6dc>
   1192c:	mov	r2, r4
   11930:	rsb	lr, r4, #1
   11934:	add	r1, lr, r2
   11938:	ldrb	r3, [r2, #1]!
   1193c:	lsl	r3, r3, #1
   11940:	ldrh	r3, [ip, r3]
   11944:	tst	r3, #4096	; 0x1000
   11948:	bne	11934 <__assert_fail@plt+0x7a8>
   1194c:	sub	r3, r1, #2
   11950:	str	r1, [r8, #28]
   11954:	cmp	r3, #126	; 0x7e
   11958:	bhi	11868 <__assert_fail@plt+0x6dc>
   1195c:	ands	r3, r1, #1
   11960:	bne	11868 <__assert_fail@plt+0x6dc>
   11964:	lsl	r2, r1, #2
   11968:	add	r7, r7, r1
   1196c:	strd	r2, [r8, #8]
   11970:	ldrb	r3, [r9, r7]
   11974:	cmp	r3, #32
   11978:	cmpne	r3, #9
   1197c:	movne	r3, #1
   11980:	moveq	r3, #0
   11984:	bne	11868 <__assert_fail@plt+0x6dc>
   11988:	strb	r3, [r9, r7]
   1198c:	add	r1, r1, r4
   11990:	mov	r2, r4
   11994:	ldr	r0, [r0]
   11998:	ldrb	r3, [r2], #1
   1199c:	lsl	r3, r3, #1
   119a0:	ldrh	r3, [r0, r3]
   119a4:	tst	r3, #4096	; 0x1000
   119a8:	beq	11868 <__assert_fail@plt+0x6dc>
   119ac:	cmp	r1, r2
   119b0:	bne	11998 <__assert_fail@plt+0x80c>
   119b4:	ldrb	r3, [r1]
   119b8:	cmp	r3, #0
   119bc:	bne	11868 <__assert_fail@plt+0x6dc>
   119c0:	ldr	r3, [sp, #116]	; 0x74
   119c4:	add	r1, r7, #1
   119c8:	ldr	r2, [r3, #4]
   119cc:	sub	r3, r6, r1
   119d0:	cmp	r3, #1
   119d4:	beq	11a08 <__assert_fail@plt+0x87c>
   119d8:	ldrb	r3, [r9, r1]
   119dc:	cmp	r3, #32
   119e0:	cmpne	r3, #42	; 0x2a
   119e4:	movne	r3, #1
   119e8:	moveq	r3, #0
   119ec:	bne	11a08 <__assert_fail@plt+0x87c>
   119f0:	cmp	r2, #1
   119f4:	beq	11a1c <__assert_fail@plt+0x890>
   119f8:	ldr	r2, [sp, #116]	; 0x74
   119fc:	add	r1, r7, #2
   11a00:	str	r3, [r2, #4]
   11a04:	b	11a1c <__assert_fail@plt+0x890>
   11a08:	cmp	r2, #0
   11a0c:	beq	11868 <__assert_fail@plt+0x6dc>
   11a10:	ldr	r2, [sp, #116]	; 0x74
   11a14:	mov	r3, #1
   11a18:	str	r3, [r2, #4]
   11a1c:	ldr	r3, [sp, #64]	; 0x40
   11a20:	cmp	r3, #0
   11a24:	add	r3, r9, r1
   11a28:	str	r3, [sp, #60]	; 0x3c
   11a2c:	bne	12490 <__assert_fail@plt+0x1304>
   11a30:	ldr	r3, [sp, #72]	; 0x48
   11a34:	cmp	r3, #0
   11a38:	bne	11a54 <__assert_fail@plt+0x8c8>
   11a3c:	movw	r1, #61160	; 0xeee8
   11a40:	movt	r1, #1
   11a44:	ldr	r0, [sp, #60]	; 0x3c
   11a48:	bl	10eec <strcmp@plt>
   11a4c:	cmp	r0, #0
   11a50:	beq	11868 <__assert_fail@plt+0x6dc>
   11a54:	ldrb	r3, [r8, #17]
   11a58:	cmp	r3, #0
   11a5c:	movne	r7, #0
   11a60:	bne	11a78 <__assert_fail@plt+0x8ec>
   11a64:	mov	r1, #10
   11a68:	ldr	r0, [sp, #60]	; 0x3c
   11a6c:	bl	11084 <strchr@plt>
   11a70:	adds	r7, r0, #0
   11a74:	movne	r7, #1
   11a78:	add	r2, sp, #168	; 0xa8
   11a7c:	add	r1, sp, #248	; 0xf8
   11a80:	ldr	r0, [sp, #60]	; 0x3c
   11a84:	str	r7, [sp, #64]	; 0x40
   11a88:	bl	12860 <__assert_fail@plt+0x16d4>
   11a8c:	subs	r3, r0, #0
   11a90:	str	r3, [sp, #84]	; 0x54
   11a94:	bne	122c4 <__assert_fail@plt+0x1138>
   11a98:	ldr	r2, [sp, #48]	; 0x30
   11a9c:	ldrb	r3, [r8, #17]
   11aa0:	adds	r2, r2, #1
   11aa4:	str	r2, [sp, #48]	; 0x30
   11aa8:	ldr	r2, [sp, #52]	; 0x34
   11aac:	adc	r2, r2, #0
   11ab0:	cmp	r3, #0
   11ab4:	str	r2, [sp, #52]	; 0x34
   11ab8:	bne	11b1c <__assert_fail@plt+0x990>
   11abc:	cmp	r7, #0
   11ac0:	beq	11aec <__assert_fail@plt+0x960>
   11ac4:	ldr	r3, [sp, #68]	; 0x44
   11ac8:	ldr	r0, [r3]
   11acc:	ldr	r3, [r0, #20]
   11ad0:	ldr	r2, [r0, #24]
   11ad4:	cmp	r3, r2
   11ad8:	addcc	r1, r3, #1
   11adc:	movcc	r2, #92	; 0x5c
   11ae0:	strcc	r1, [r0, #20]
   11ae4:	strbcc	r2, [r3]
   11ae8:	bcs	124c0 <__assert_fail@plt+0x1334>
   11aec:	ldrd	r0, [sp, #60]	; 0x3c
   11af0:	bl	1275c <__assert_fail@plt+0x15d0>
   11af4:	movw	r1, #63940	; 0xf9c4
   11af8:	movt	r1, #1
   11afc:	mov	r2, #5
   11b00:	mov	r0, #0
   11b04:	bl	10f7c <dcgettext@plt>
   11b08:	mov	r2, r0
   11b0c:	movw	r1, #63960	; 0xf9d8
   11b10:	movt	r1, #1
   11b14:	mov	r0, #1
   11b18:	bl	110c0 <__printf_chk@plt>
   11b1c:	ldr	r3, [sp, #28]
   11b20:	str	r3, [sp, #84]	; 0x54
   11b24:	ldr	r3, [r5]
   11b28:	ands	r3, r3, #48	; 0x30
   11b2c:	beq	11898 <__assert_fail@plt+0x70c>
   11b30:	ldr	r0, [sp, #156]	; 0x9c
   11b34:	bl	18ccc <__assert_fail@plt+0x7b40>
   11b38:	ldr	r0, [sp, #80]	; 0x50
   11b3c:	ldr	r3, [r0]
   11b40:	ands	r5, r3, #32
   11b44:	ldr	r3, [sp, #72]	; 0x48
   11b48:	mvneq	r4, #0
   11b4c:	movne	r4, #0
   11b50:	cmp	r3, #0
   11b54:	bne	11e50 <__assert_fail@plt+0xcc4>
   11b58:	bl	11138 <clearerr_unlocked@plt>
   11b5c:	cmp	r4, #0
   11b60:	bge	12014 <__assert_fail@plt+0xe88>
   11b64:	ldr	r3, [sp, #84]	; 0x54
   11b68:	cmp	r3, #0
   11b6c:	beq	1212c <__assert_fail@plt+0xfa0>
   11b70:	ldrb	r3, [r8, #17]
   11b74:	cmp	r3, #0
   11b78:	bne	11ce4 <__assert_fail@plt+0xb58>
   11b7c:	ldrd	r0, [sp, #32]
   11b80:	orrs	r3, r0, r1
   11b84:	beq	11bf0 <__assert_fail@plt+0xa64>
   11b88:	mov	r3, #0
   11b8c:	mvn	r2, #0
   11b90:	cmp	r1, r3
   11b94:	cmpeq	r0, r2
   11b98:	ldrls	r3, [sp, #32]
   11b9c:	bls	11bb8 <__assert_fail@plt+0xa2c>
   11ba0:	movw	r2, #16960	; 0x4240
   11ba4:	movt	r2, #15
   11ba8:	mov	r3, #0
   11bac:	bl	1ebb4 <__assert_fail@plt+0xda28>
   11bb0:	add	r3, r2, #999424	; 0xf4000
   11bb4:	add	r3, r3, #576	; 0x240
   11bb8:	mov	r0, #5
   11bbc:	movw	r2, #64044	; 0xfa2c
   11bc0:	movt	r2, #1
   11bc4:	movw	r1, #64092	; 0xfa5c
   11bc8:	movt	r1, #1
   11bcc:	str	r0, [sp]
   11bd0:	mov	r0, #0
   11bd4:	bl	11180 <dcngettext@plt>
   11bd8:	ldrd	r4, [sp, #32]
   11bdc:	mov	r1, #0
   11be0:	mov	r2, r0
   11be4:	mov	r0, r1
   11be8:	strd	r4, [sp]
   11bec:	bl	11000 <error@plt>
   11bf0:	ldrd	r0, [sp, #48]	; 0x30
   11bf4:	orrs	r3, r0, r1
   11bf8:	beq	11c64 <__assert_fail@plt+0xad8>
   11bfc:	mov	r3, #0
   11c00:	mvn	r2, #0
   11c04:	cmp	r1, r3
   11c08:	cmpeq	r0, r2
   11c0c:	ldrls	r3, [sp, #48]	; 0x30
   11c10:	bls	11c2c <__assert_fail@plt+0xaa0>
   11c14:	movw	r2, #16960	; 0x4240
   11c18:	movt	r2, #15
   11c1c:	mov	r3, #0
   11c20:	bl	1ebb4 <__assert_fail@plt+0xda28>
   11c24:	add	r3, r2, #999424	; 0xf4000
   11c28:	add	r3, r3, #576	; 0x240
   11c2c:	mov	r0, #5
   11c30:	movw	r2, #64136	; 0xfa88
   11c34:	movt	r2, #1
   11c38:	movw	r1, #64184	; 0xfab8
   11c3c:	movt	r1, #1
   11c40:	str	r0, [sp]
   11c44:	mov	r0, #0
   11c48:	bl	11180 <dcngettext@plt>
   11c4c:	ldrd	r4, [sp, #48]	; 0x30
   11c50:	mov	r1, #0
   11c54:	mov	r2, r0
   11c58:	mov	r0, r1
   11c5c:	strd	r4, [sp]
   11c60:	bl	11000 <error@plt>
   11c64:	ldrd	r0, [sp, #96]	; 0x60
   11c68:	orrs	r3, r0, r1
   11c6c:	beq	11cd8 <__assert_fail@plt+0xb4c>
   11c70:	mov	r3, #0
   11c74:	mvn	r2, #0
   11c78:	cmp	r1, r3
   11c7c:	cmpeq	r0, r2
   11c80:	ldrls	r3, [sp, #96]	; 0x60
   11c84:	bls	11ca0 <__assert_fail@plt+0xb14>
   11c88:	movw	r2, #16960	; 0x4240
   11c8c:	movt	r2, #15
   11c90:	mov	r3, #0
   11c94:	bl	1ebb4 <__assert_fail@plt+0xda28>
   11c98:	add	r3, r2, #999424	; 0xf4000
   11c9c:	add	r3, r3, #576	; 0x240
   11ca0:	mov	r0, #5
   11ca4:	movw	r2, #64228	; 0xfae4
   11ca8:	movt	r2, #1
   11cac:	movw	r1, #64276	; 0xfb14
   11cb0:	movt	r1, #1
   11cb4:	str	r0, [sp]
   11cb8:	mov	r0, #0
   11cbc:	bl	11180 <dcngettext@plt>
   11cc0:	ldrd	r4, [sp, #96]	; 0x60
   11cc4:	mov	r1, #0
   11cc8:	mov	r2, r0
   11ccc:	mov	r0, r1
   11cd0:	strd	r4, [sp]
   11cd4:	bl	11000 <error@plt>
   11cd8:	ldrb	r3, [r8, #16]
   11cdc:	cmp	r3, #0
   11ce0:	bne	12248 <__assert_fail@plt+0x10bc>
   11ce4:	ldr	r3, [sp, #112]	; 0x70
   11ce8:	cmp	r3, #0
   11cec:	beq	12124 <__assert_fail@plt+0xf98>
   11cf0:	ldrd	r0, [sp, #48]	; 0x30
   11cf4:	ldrd	r2, [sp, #96]	; 0x60
   11cf8:	orr	ip, r0, r2
   11cfc:	orr	r3, r1, r3
   11d00:	mov	lr, r2
   11d04:	str	ip, [sp, #120]	; 0x78
   11d08:	str	r3, [sp, #124]	; 0x7c
   11d0c:	ldrd	r2, [sp, #120]	; 0x78
   11d10:	orrs	r3, r2, r3
   11d14:	bne	12124 <__assert_fail@plt+0xf98>
   11d18:	ldrd	r2, [sp, #32]
   11d1c:	ldrb	sl, [r8, #20]
   11d20:	mov	r1, r2
   11d24:	orrs	r3, r1, r3
   11d28:	eor	sl, sl, #1
   11d2c:	orreq	sl, sl, #1
   11d30:	and	sl, sl, #1
   11d34:	ldr	r3, [sp, #76]	; 0x4c
   11d38:	and	r3, r3, sl
   11d3c:	str	r3, [sp, #76]	; 0x4c
   11d40:	b	11d60 <__assert_fail@plt+0xbd4>
   11d44:	add	r2, sp, #248	; 0xf8
   11d48:	add	r1, sp, #176	; 0xb0
   11d4c:	ldr	r0, [sp, #56]	; 0x38
   11d50:	bl	12860 <__assert_fail@plt+0x16d4>
   11d54:	subs	r4, r0, #0
   11d58:	bne	11eb0 <__assert_fail@plt+0xd24>
   11d5c:	str	r4, [sp, #76]	; 0x4c
   11d60:	ldr	r2, [sp, #44]	; 0x2c
   11d64:	ldr	r3, [sp, #104]	; 0x68
   11d68:	cmp	r3, r2
   11d6c:	bhi	11668 <__assert_fail@plt+0x4dc>
   11d70:	mov	fp, r8
   11d74:	ldrb	r3, [fp]
   11d78:	cmp	r3, #0
   11d7c:	bne	12408 <__assert_fail@plt+0x127c>
   11d80:	ldr	r3, [sp, #76]	; 0x4c
   11d84:	eor	r0, r3, #1
   11d88:	uxtb	r0, r0
   11d8c:	add	sp, sp, #324	; 0x144
   11d90:	ldrd	r4, [sp]
   11d94:	ldrd	r6, [sp, #8]
   11d98:	ldrd	r8, [sp, #16]
   11d9c:	ldrd	sl, [sp, #24]
   11da0:	add	sp, sp, #32
   11da4:	pop	{pc}		; (ldr pc, [sp], #4)
   11da8:	mov	r2, #5
   11dac:	mov	r0, #0
   11db0:	ldr	r1, [sp, #108]	; 0x6c
   11db4:	bl	10f7c <dcgettext@plt>
   11db8:	mov	r4, r0
   11dbc:	mov	r1, #3
   11dc0:	ldr	r2, [sp, #56]	; 0x38
   11dc4:	mov	r0, #0
   11dc8:	bl	1bfc0 <__assert_fail@plt+0xae34>
   11dcc:	ldr	ip, [sp, #40]	; 0x28
   11dd0:	mov	r1, #0
   11dd4:	mov	r3, r0
   11dd8:	mov	r2, r4
   11ddc:	mov	r0, r1
   11de0:	strd	sl, [sp]
   11de4:	str	ip, [sp, #8]
   11de8:	bl	11000 <error@plt>
   11dec:	b	1188c <__assert_fail@plt+0x700>
   11df0:	movw	r1, #61164	; 0xeeec
   11df4:	movt	r1, #1
   11df8:	ldr	r0, [sp, #56]	; 0x38
   11dfc:	bl	18c20 <__assert_fail@plt+0x7a94>
   11e00:	subs	r3, r0, #0
   11e04:	str	r3, [sp, #80]	; 0x50
   11e08:	bne	116c8 <__assert_fail@plt+0x53c>
   11e0c:	bl	11090 <__errno_location@plt>
   11e10:	ldr	r4, [r0]
   11e14:	mov	r1, #3
   11e18:	ldr	sl, [sp, #80]	; 0x50
   11e1c:	ldr	r2, [sp, #56]	; 0x38
   11e20:	mov	r0, sl
   11e24:	bl	1bfc0 <__assert_fail@plt+0xae34>
   11e28:	mov	r3, r0
   11e2c:	movw	r2, #63172	; 0xf6c4
   11e30:	movt	r2, #1
   11e34:	mov	r0, sl
   11e38:	mov	r1, r4
   11e3c:	bl	11000 <error@plt>
   11e40:	b	11d34 <__assert_fail@plt+0xba8>
   11e44:	mov	r7, r2
   11e48:	mov	r4, r9
   11e4c:	b	117b0 <__assert_fail@plt+0x624>
   11e50:	ldr	r0, [sp, #80]	; 0x50
   11e54:	bl	18b0c <__assert_fail@plt+0x7980>
   11e58:	cmp	r0, #0
   11e5c:	beq	11b5c <__assert_fail@plt+0x9d0>
   11e60:	cmp	r5, #0
   11e64:	beq	1223c <__assert_fail@plt+0x10b0>
   11e68:	movw	r1, #63980	; 0xf9ec
   11e6c:	movt	r1, #1
   11e70:	mov	r2, #5
   11e74:	mov	r0, #0
   11e78:	bl	10f7c <dcgettext@plt>
   11e7c:	mov	r5, r0
   11e80:	mov	r4, #0
   11e84:	mov	r1, #3
   11e88:	mov	r0, #0
   11e8c:	ldr	r2, [sp, #56]	; 0x38
   11e90:	bl	1bfc0 <__assert_fail@plt+0xae34>
   11e94:	mov	r3, r0
   11e98:	mov	r2, r5
   11e9c:	mov	r1, r4
   11ea0:	mov	r0, #0
   11ea4:	mov	sl, #0
   11ea8:	bl	11000 <error@plt>
   11eac:	b	11d34 <__assert_fail@plt+0xba8>
   11eb0:	ldr	r3, [sp, #116]	; 0x74
   11eb4:	ldrb	r5, [r3]
   11eb8:	cmp	r5, #10
   11ebc:	beq	12170 <__assert_fail@plt+0xfe4>
   11ec0:	ldr	r4, [sp, #28]
   11ec4:	ldr	r3, [sp, #24]
   11ec8:	cmp	r3, #0
   11ecc:	bne	121b8 <__assert_fail@plt+0x102c>
   11ed0:	ldr	r3, [r8, #28]
   11ed4:	lsrs	r3, r3, #1
   11ed8:	beq	11f1c <__assert_fail@plt+0xd90>
   11edc:	ldr	r7, [sp, #132]	; 0x84
   11ee0:	add	r6, sp, #175	; 0xaf
   11ee4:	mov	r1, r7
   11ee8:	mov	r0, #1
   11eec:	ldrb	r2, [r6, #1]
   11ef0:	bl	110c0 <__printf_chk@plt>
   11ef4:	ldr	r2, [r8, #28]
   11ef8:	add	r3, r6, #2
   11efc:	add	r1, sp, #176	; 0xb0
   11f00:	sub	r3, r3, r1
   11f04:	add	r6, r6, #1
   11f08:	cmp	r3, r2, lsr #1
   11f0c:	bcc	11ee4 <__assert_fail@plt+0xd58>
   11f10:	ldr	r3, [sp, #24]
   11f14:	cmp	r3, #0
   11f18:	bne	11f78 <__assert_fail@plt+0xdec>
   11f1c:	ldr	r3, [sp, #68]	; 0x44
   11f20:	ldr	r0, [r3]
   11f24:	ldr	r3, [r0, #20]
   11f28:	ldr	r2, [r0, #24]
   11f2c:	cmp	r3, r2
   11f30:	addcc	r1, r3, #1
   11f34:	movcc	r2, #32
   11f38:	strcc	r1, [r0, #20]
   11f3c:	strbcc	r2, [r3]
   11f40:	bcs	124d8 <__assert_fail@plt+0x134c>
   11f44:	ldr	r3, [sp, #68]	; 0x44
   11f48:	ldr	r0, [r3]
   11f4c:	ldr	r3, [r0, #20]
   11f50:	ldr	r2, [r0, #24]
   11f54:	cmp	r3, r2
   11f58:	addcc	r2, r3, #1
   11f5c:	strcc	r2, [r0, #20]
   11f60:	ldrcc	r2, [sp, #136]	; 0x88
   11f64:	strbcc	r2, [r3]
   11f68:	bcs	124cc <__assert_fail@plt+0x1340>
   11f6c:	mov	r1, r4
   11f70:	ldr	r0, [sp, #56]	; 0x38
   11f74:	bl	1275c <__assert_fail@plt+0x15d0>
   11f78:	ldr	r3, [sp, #68]	; 0x44
   11f7c:	ldr	r0, [r3]
   11f80:	ldr	r3, [r0, #20]
   11f84:	ldr	r2, [r0, #24]
   11f88:	cmp	r3, r2
   11f8c:	addcc	r2, r3, #1
   11f90:	ldrcc	r4, [sp, #76]	; 0x4c
   11f94:	strcc	r2, [r0, #20]
   11f98:	strbcc	r5, [r3]
   11f9c:	bcc	11d5c <__assert_fail@plt+0xbd0>
   11fa0:	mov	r1, r5
   11fa4:	bl	11108 <__overflow@plt>
   11fa8:	ldr	r4, [sp, #76]	; 0x4c
   11fac:	b	11d5c <__assert_fail@plt+0xbd0>
   11fb0:	mov	r2, ip
   11fb4:	add	r0, r9, r3
   11fb8:	str	ip, [sp]
   11fbc:	add	r3, sp, #168	; 0xa8
   11fc0:	add	r1, sp, #164	; 0xa4
   11fc4:	bl	1d8d0 <__assert_fail@plt+0xc744>
   11fc8:	subs	ip, r0, #0
   11fcc:	bne	11868 <__assert_fail@plt+0x6dc>
   11fd0:	ldrd	r0, [sp, #168]	; 0xa8
   11fd4:	orrs	r3, r0, r1
   11fd8:	beq	11868 <__assert_fail@plt+0x6dc>
   11fdc:	ldrd	r2, [r8, #8]
   11fe0:	cmp	r1, r3
   11fe4:	cmpeq	r0, r2
   11fe8:	bhi	11868 <__assert_fail@plt+0x6dc>
   11fec:	and	r3, r0, #7
   11ff0:	str	r3, [sp, #144]	; 0x90
   11ff4:	str	ip, [sp, #148]	; 0x94
   11ff8:	ldrd	r2, [sp, #144]	; 0x90
   11ffc:	orrs	r3, r2, r3
   12000:	bne	11868 <__assert_fail@plt+0x6dc>
   12004:	ldr	r3, [sp, #164]	; 0xa4
   12008:	strd	r0, [r8, #8]
   1200c:	sub	r3, r3, r9
   12010:	b	1183c <__assert_fail@plt+0x6b0>
   12014:	movwne	r5, #63172	; 0xf6c4
   12018:	movtne	r5, #1
   1201c:	bne	11e84 <__assert_fail@plt+0xcf8>
   12020:	b	11e68 <__assert_fail@plt+0xcdc>
   12024:	add	r3, r3, #1
   12028:	subs	r4, r6, r3
   1202c:	beq	11868 <__assert_fail@plt+0x6dc>
   12030:	add	r1, r9, r3
   12034:	subs	r4, r4, #1
   12038:	str	r1, [sp, #60]	; 0x3c
   1203c:	beq	12068 <__assert_fail@plt+0xedc>
   12040:	ldrb	r2, [r1, r4]
   12044:	add	r6, r1, r4
   12048:	cmp	r2, #41	; 0x29
   1204c:	bne	12060 <__assert_fail@plt+0xed4>
   12050:	b	1207c <__assert_fail@plt+0xef0>
   12054:	ldrb	r2, [r6, #-1]!
   12058:	cmp	r2, #41	; 0x29
   1205c:	beq	1244c <__assert_fail@plt+0x12c0>
   12060:	subs	r4, r4, #1
   12064:	bne	12054 <__assert_fail@plt+0xec8>
   12068:	ldrb	r3, [r9, r3]
   1206c:	cmp	r3, #41	; 0x29
   12070:	bne	11868 <__assert_fail@plt+0x6dc>
   12074:	ldr	r6, [sp, #60]	; 0x3c
   12078:	mov	r4, #0
   1207c:	ldr	r3, [sp, #64]	; 0x40
   12080:	cmp	r3, #0
   12084:	bne	124a8 <__assert_fail@plt+0x131c>
   12088:	mov	r3, #0
   1208c:	add	r4, r4, #1
   12090:	ldr	r2, [sp, #60]	; 0x3c
   12094:	strb	r3, [r6]
   12098:	b	120a0 <__assert_fail@plt+0xf14>
   1209c:	add	r4, r4, #1
   120a0:	ldrb	r3, [r2, r4]
   120a4:	cmp	r3, #9
   120a8:	cmpne	r3, #32
   120ac:	beq	1209c <__assert_fail@plt+0xf10>
   120b0:	cmp	r3, #61	; 0x3d
   120b4:	bne	11868 <__assert_fail@plt+0x6dc>
   120b8:	ldr	r3, [sp, #60]	; 0x3c
   120bc:	add	r4, r4, #1
   120c0:	add	r3, r3, r4
   120c4:	ldrb	r2, [r3]
   120c8:	mov	r4, r3
   120cc:	add	r3, r3, #1
   120d0:	cmp	r2, #9
   120d4:	cmpne	r2, #32
   120d8:	beq	120c4 <__assert_fail@plt+0xf38>
   120dc:	add	r7, r4, r7
   120e0:	mov	r9, r4
   120e4:	b	12104 <__assert_fail@plt+0xf78>
   120e8:	bl	11054 <__ctype_b_loc@plt>
   120ec:	ldr	r3, [r0]
   120f0:	lsl	r6, r6, #1
   120f4:	ldrh	r3, [r3, r6]
   120f8:	tst	r3, #4096	; 0x1000
   120fc:	beq	11868 <__assert_fail@plt+0x6dc>
   12100:	add	r9, r9, #1
   12104:	cmp	r9, r7
   12108:	ldrb	r6, [r9]
   1210c:	bne	120e8 <__assert_fail@plt+0xf5c>
   12110:	clz	r0, r6
   12114:	lsr	r0, r0, #5
   12118:	cmp	r0, #0
   1211c:	bne	11a30 <__assert_fail@plt+0x8a4>
   12120:	b	11868 <__assert_fail@plt+0x6dc>
   12124:	mov	sl, #0
   12128:	b	11d30 <__assert_fail@plt+0xba4>
   1212c:	movw	r1, #63996	; 0xf9fc
   12130:	movt	r1, #1
   12134:	mov	r2, #5
   12138:	mov	sl, r3
   1213c:	mov	r0, sl
   12140:	bl	10f7c <dcgettext@plt>
   12144:	mov	r4, r0
   12148:	mov	r1, #3
   1214c:	ldr	r2, [sp, #56]	; 0x38
   12150:	mov	r0, sl
   12154:	bl	1bfc0 <__assert_fail@plt+0xae34>
   12158:	mov	r3, r0
   1215c:	mov	r2, r4
   12160:	mov	r1, sl
   12164:	mov	r0, sl
   12168:	bl	11000 <error@plt>
   1216c:	b	11d30 <__assert_fail@plt+0xba4>
   12170:	mov	r1, #92	; 0x5c
   12174:	ldr	r0, [sp, #56]	; 0x38
   12178:	bl	11084 <strchr@plt>
   1217c:	cmp	r0, #0
   12180:	beq	12298 <__assert_fail@plt+0x110c>
   12184:	ldr	r3, [sp, #68]	; 0x44
   12188:	ldr	r0, [r3]
   1218c:	ldr	r3, [r0, #20]
   12190:	ldr	r2, [r0, #24]
   12194:	cmp	r3, r2
   12198:	addcc	r1, r3, #1
   1219c:	movcc	r2, #92	; 0x5c
   121a0:	strcc	r1, [r0, #20]
   121a4:	strbcc	r2, [r3]
   121a8:	bcc	11ec4 <__assert_fail@plt+0xd38>
   121ac:	mov	r1, #92	; 0x5c
   121b0:	bl	11108 <__overflow@plt>
   121b4:	b	11ec4 <__assert_fail@plt+0xd38>
   121b8:	mov	r2, #7
   121bc:	mov	r1, #1
   121c0:	ldr	r0, [sp, #40]	; 0x28
   121c4:	ldr	r3, [sp, #68]	; 0x44
   121c8:	ldr	r3, [r3]
   121cc:	bl	10f58 <fwrite_unlocked@plt>
   121d0:	ldrd	r2, [r8, #8]
   121d4:	mov	r1, #0
   121d8:	movw	r0, #511	; 0x1ff
   121dc:	cmp	r3, r1
   121e0:	cmpeq	r2, r0
   121e4:	bls	12284 <__assert_fail@plt+0x10f8>
   121e8:	ldr	r6, [sp, #68]	; 0x44
   121ec:	mov	r2, #2
   121f0:	mov	r1, #1
   121f4:	movw	r0, #64360	; 0xfb68
   121f8:	movt	r0, #1
   121fc:	ldr	r3, [r6]
   12200:	bl	10f58 <fwrite_unlocked@plt>
   12204:	mov	r1, r4
   12208:	ldr	r0, [sp, #56]	; 0x38
   1220c:	bl	1275c <__assert_fail@plt+0x15d0>
   12210:	movw	r0, #64364	; 0xfb6c
   12214:	movt	r0, #1
   12218:	ldr	r3, [r6]
   1221c:	mov	r2, #4
   12220:	mov	r1, #1
   12224:	bl	10f58 <fwrite_unlocked@plt>
   12228:	ldr	r3, [r8, #28]
   1222c:	lsrs	r3, r3, #1
   12230:	bne	11edc <__assert_fail@plt+0xd50>
   12234:	b	11f78 <__assert_fail@plt+0xdec>
   12238:	andeq	lr, r1, ip, ror #27
   1223c:	bl	11090 <__errno_location@plt>
   12240:	ldr	r4, [r0]
   12244:	b	11b5c <__assert_fail@plt+0x9d0>
   12248:	ldr	r3, [sp, #112]	; 0x70
   1224c:	cmp	r3, #0
   12250:	bne	11cf0 <__assert_fail@plt+0xb64>
   12254:	movw	r1, #64324	; 0xfb44
   12258:	movt	r1, #1
   1225c:	ldr	sl, [sp, #112]	; 0x70
   12260:	mov	r2, #5
   12264:	b	1213c <__assert_fail@plt+0xfb0>
   12268:	ldr	r3, [sp, #28]
   1226c:	cmp	r3, #0
   12270:	movweq	r1, #63656	; 0xf8a8
   12274:	moveq	r2, #5
   12278:	movteq	r1, #1
   1227c:	bne	115e0 <__assert_fail@plt+0x454>
   12280:	b	11540 <__assert_fail@plt+0x3b4>
   12284:	movw	r1, #64352	; 0xfb60
   12288:	movt	r1, #1
   1228c:	mov	r0, #1
   12290:	bl	110c0 <__printf_chk@plt>
   12294:	b	121e8 <__assert_fail@plt+0x105c>
   12298:	mov	r1, r5
   1229c:	ldr	r0, [sp, #56]	; 0x38
   122a0:	bl	11084 <strchr@plt>
   122a4:	cmp	r0, #0
   122a8:	bne	12184 <__assert_fail@plt+0xff8>
   122ac:	mov	r1, #13
   122b0:	ldr	r0, [sp, #56]	; 0x38
   122b4:	bl	11084 <strchr@plt>
   122b8:	cmp	r0, #0
   122bc:	bne	12184 <__assert_fail@plt+0xff8>
   122c0:	b	11ec0 <__assert_fail@plt+0xd34>
   122c4:	ldrb	r3, [r8, #16]
   122c8:	cmp	r3, #0
   122cc:	beq	122dc <__assert_fail@plt+0x1150>
   122d0:	ldrb	r3, [sp, #168]	; 0xa8
   122d4:	cmp	r3, #0
   122d8:	bne	11b1c <__assert_fail@plt+0x990>
   122dc:	ldr	r9, [r8, #28]
   122e0:	lsrs	r9, r9, #1
   122e4:	beq	123d0 <__assert_fail@plt+0x1244>
   122e8:	bl	11030 <__ctype_tolower_loc@plt>
   122ec:	mov	r6, #0
   122f0:	movw	r2, #60852	; 0xedb4
   122f4:	movt	r2, #1
   122f8:	add	r1, sp, #247	; 0xf7
   122fc:	strd	sl, [sp, #88]	; 0x58
   12300:	add	lr, r4, #1
   12304:	ldr	r0, [r0]
   12308:	b	12334 <__assert_fail@plt+0x11a8>
   1230c:	ldrb	ip, [lr, r6, lsl #1]
   12310:	and	r3, r3, #15
   12314:	add	r3, r2, r3
   12318:	ldrb	r3, [r3, #280]	; 0x118
   1231c:	ldr	ip, [r0, ip, lsl #2]
   12320:	cmp	ip, r3
   12324:	bne	12350 <__assert_fail@plt+0x11c4>
   12328:	add	r6, r6, #1
   1232c:	cmp	r9, r6
   12330:	beq	123cc <__assert_fail@plt+0x1240>
   12334:	ldrb	r3, [r1, #1]!
   12338:	ldrb	fp, [r4, r6, lsl #1]
   1233c:	add	ip, r2, r3, lsr #4
   12340:	ldrb	ip, [ip, #280]	; 0x118
   12344:	ldr	fp, [r0, fp, lsl #2]
   12348:	cmp	fp, ip
   1234c:	beq	1230c <__assert_fail@plt+0x1180>
   12350:	ldrb	r3, [r8, #17]
   12354:	ldr	r2, [sp, #96]	; 0x60
   12358:	ldrd	sl, [sp, #88]	; 0x58
   1235c:	adds	r2, r2, #1
   12360:	str	r2, [sp, #96]	; 0x60
   12364:	ldr	r2, [sp, #100]	; 0x64
   12368:	adc	r2, r2, #0
   1236c:	cmp	r3, #0
   12370:	str	r2, [sp, #100]	; 0x64
   12374:	bne	11b1c <__assert_fail@plt+0x990>
   12378:	cmp	r7, #0
   1237c:	beq	123a8 <__assert_fail@plt+0x121c>
   12380:	ldr	r3, [sp, #68]	; 0x44
   12384:	ldr	r0, [r3]
   12388:	ldr	r3, [r0, #20]
   1238c:	ldr	r2, [r0, #24]
   12390:	cmp	r3, r2
   12394:	addcc	r1, r3, #1
   12398:	movcc	r2, #92	; 0x5c
   1239c:	strcc	r1, [r0, #20]
   123a0:	strbcc	r2, [r3]
   123a4:	bcs	124e4 <__assert_fail@plt+0x1358>
   123a8:	ldrd	r0, [sp, #60]	; 0x3c
   123ac:	bl	1275c <__assert_fail@plt+0x15d0>
   123b0:	cmp	r9, r6
   123b4:	beq	1246c <__assert_fail@plt+0x12e0>
   123b8:	movw	r1, #63968	; 0xf9e0
   123bc:	movt	r1, #1
   123c0:	mov	r2, #5
   123c4:	mov	r0, #0
   123c8:	b	11b04 <__assert_fail@plt+0x978>
   123cc:	ldrd	sl, [sp, #88]	; 0x58
   123d0:	ldrb	r3, [r8, #17]
   123d4:	cmp	r3, #0
   123d8:	str	r3, [sp, #112]	; 0x70
   123dc:	bne	11b1c <__assert_fail@plt+0x990>
   123e0:	ldrb	r3, [r8, #19]
   123e4:	cmp	r3, #0
   123e8:	str	r3, [sp, #112]	; 0x70
   123ec:	bne	11b1c <__assert_fail@plt+0x990>
   123f0:	cmp	r7, #0
   123f4:	beq	12458 <__assert_fail@plt+0x12cc>
   123f8:	ldr	r3, [sp, #84]	; 0x54
   123fc:	mov	r6, r9
   12400:	str	r3, [sp, #112]	; 0x70
   12404:	b	12380 <__assert_fail@plt+0x11f4>
   12408:	movw	r3, #4480	; 0x1180
   1240c:	movt	r3, #3
   12410:	ldr	r0, [r3]
   12414:	bl	18b0c <__assert_fail@plt+0x7980>
   12418:	cmn	r0, #1
   1241c:	bne	11d80 <__assert_fail@plt+0xbf4>
   12420:	bl	11090 <__errno_location@plt>
   12424:	ldr	r4, [r0]
   12428:	movw	r1, #63848	; 0xf968
   1242c:	movt	r1, #1
   12430:	mov	r2, #5
   12434:	mov	r0, #0
   12438:	bl	10f7c <dcgettext@plt>
   1243c:	mov	r2, r0
   12440:	mov	r1, r4
   12444:	mov	r0, #1
   12448:	bl	11000 <error@plt>
   1244c:	ldr	r3, [sp, #60]	; 0x3c
   12450:	add	r6, r3, r4
   12454:	b	1207c <__assert_fail@plt+0xef0>
   12458:	ldr	r0, [sp, #60]	; 0x3c
   1245c:	ldr	r1, [sp, #112]	; 0x70
   12460:	bl	1275c <__assert_fail@plt+0x15d0>
   12464:	ldr	r3, [sp, #84]	; 0x54
   12468:	str	r3, [sp, #112]	; 0x70
   1246c:	ldrb	r0, [r8, #19]
   12470:	cmp	r0, #0
   12474:	bne	11b1c <__assert_fail@plt+0x990>
   12478:	mov	r2, #5
   1247c:	ldr	r1, [sp, #128]	; 0x80
   12480:	b	11b04 <__assert_fail@plt+0x978>
   12484:	mov	r3, #1
   12488:	str	r3, [sp, #76]	; 0x4c
   1248c:	b	11d74 <__assert_fail@plt+0xbe8>
   12490:	sub	r1, r6, r1
   12494:	mov	r0, r3
   12498:	bl	12690 <__assert_fail@plt+0x1504>
   1249c:	adds	r0, r0, #0
   124a0:	movne	r0, #1
   124a4:	b	12118 <__assert_fail@plt+0xf8c>
   124a8:	mov	r1, r4
   124ac:	ldr	r0, [sp, #60]	; 0x3c
   124b0:	bl	12690 <__assert_fail@plt+0x1504>
   124b4:	cmp	r0, #0
   124b8:	bne	12088 <__assert_fail@plt+0xefc>
   124bc:	b	11868 <__assert_fail@plt+0x6dc>
   124c0:	mov	r1, #92	; 0x5c
   124c4:	bl	11108 <__overflow@plt>
   124c8:	b	11aec <__assert_fail@plt+0x960>
   124cc:	ldr	r1, [sp, #140]	; 0x8c
   124d0:	bl	11108 <__overflow@plt>
   124d4:	b	11f6c <__assert_fail@plt+0xde0>
   124d8:	mov	r1, #32
   124dc:	bl	11108 <__overflow@plt>
   124e0:	b	11f44 <__assert_fail@plt+0xdb8>
   124e4:	mov	r1, #92	; 0x5c
   124e8:	bl	11108 <__overflow@plt>
   124ec:	b	123a8 <__assert_fail@plt+0x121c>
   124f0:	movw	r1, #63288	; 0xf738
   124f4:	movt	r1, #1
   124f8:	b	1153c <__assert_fail@plt+0x3b0>
   124fc:	ldrb	r3, [fp, #17]
   12500:	cmp	r3, #0
   12504:	beq	11514 <__assert_fail@plt+0x388>
   12508:	ldr	r3, [sp, #28]
   1250c:	cmp	r3, #0
   12510:	bne	115b8 <__assert_fail@plt+0x42c>
   12514:	movw	r1, #63592	; 0xf868
   12518:	movt	r1, #1
   1251c:	b	1153c <__assert_fail@plt+0x3b0>
   12520:	movw	r1, #63520	; 0xf820
   12524:	movt	r1, #1
   12528:	b	1153c <__assert_fail@plt+0x3b0>
   1252c:	mov	r2, #5
   12530:	movw	r1, #63156	; 0xf6b4
   12534:	movt	r1, #1
   12538:	mov	r0, r4
   1253c:	bl	10f7c <dcgettext@plt>
   12540:	mov	r5, r0
   12544:	mov	r0, sl
   12548:	bl	1c76c <__assert_fail@plt+0xb5e0>
   1254c:	mov	r3, r0
   12550:	mov	r2, r5
   12554:	mov	r1, r4
   12558:	mov	r0, r4
   1255c:	bl	11000 <error@plt>
   12560:	mov	r2, #5
   12564:	movw	r1, #63248	; 0xf710
   12568:	movt	r1, #1
   1256c:	mov	r0, r4
   12570:	bl	10f7c <dcgettext@plt>
   12574:	mov	r5, r0
   12578:	movw	r0, #61292	; 0xef6c
   1257c:	movt	r0, #1
   12580:	bl	1c76c <__assert_fail@plt+0xb5e0>
   12584:	mov	ip, #512	; 0x200
   12588:	mov	r3, r0
   1258c:	mov	r2, r5
   12590:	mov	r1, r4
   12594:	mov	r0, #1
   12598:	str	ip, [sp]
   1259c:	bl	11000 <error@plt>
   125a0:	mov	fp, #0
   125a4:	mov	lr, #0
   125a8:	pop	{r1}		; (ldr r1, [sp], #4)
   125ac:	mov	r2, sp
   125b0:	push	{r2}		; (str r2, [sp, #-4]!)
   125b4:	push	{r0}		; (str r0, [sp, #-4]!)
   125b8:	ldr	ip, [pc, #16]	; 125d0 <__assert_fail@plt+0x1444>
   125bc:	push	{ip}		; (str ip, [sp, #-4]!)
   125c0:	ldr	r0, [pc, #12]	; 125d4 <__assert_fail@plt+0x1448>
   125c4:	ldr	r3, [pc, #12]	; 125d8 <__assert_fail@plt+0x144c>
   125c8:	bl	11018 <__libc_start_main@plt>
   125cc:	bl	11168 <abort@plt>
   125d0:	andeq	lr, r1, r8, lsl #27
   125d4:	muleq	r1, r8, r1
   125d8:	andeq	lr, r1, r8, lsr #26
   125dc:	ldr	r3, [pc, #20]	; 125f8 <__assert_fail@plt+0x146c>
   125e0:	ldr	r2, [pc, #20]	; 125fc <__assert_fail@plt+0x1470>
   125e4:	add	r3, pc, r3
   125e8:	ldr	r2, [r3, r2]
   125ec:	cmp	r2, #0
   125f0:	bxeq	lr
   125f4:	b	1103c <__gmon_start__@plt>
   125f8:	andeq	lr, r1, r4, lsl sl
   125fc:	andeq	r0, r0, r4, lsl #2
   12600:	ldr	r0, [pc, #24]	; 12620 <__assert_fail@plt+0x1494>
   12604:	ldr	r3, [pc, #24]	; 12624 <__assert_fail@plt+0x1498>
   12608:	cmp	r3, r0
   1260c:	bxeq	lr
   12610:	ldr	r3, [pc, #16]	; 12628 <__assert_fail@plt+0x149c>
   12614:	cmp	r3, #0
   12618:	bxeq	lr
   1261c:	bx	r3
   12620:	andeq	r1, r3, r4, ror #2
   12624:	andeq	r1, r3, r4, ror #2
   12628:	andeq	r0, r0, r0
   1262c:	ldr	r0, [pc, #36]	; 12658 <__assert_fail@plt+0x14cc>
   12630:	ldr	r1, [pc, #36]	; 1265c <__assert_fail@plt+0x14d0>
   12634:	sub	r1, r1, r0
   12638:	asr	r1, r1, #2
   1263c:	add	r1, r1, r1, lsr #31
   12640:	asrs	r1, r1, #1
   12644:	bxeq	lr
   12648:	ldr	r3, [pc, #16]	; 12660 <__assert_fail@plt+0x14d4>
   1264c:	cmp	r3, #0
   12650:	bxeq	lr
   12654:	bx	r3
   12658:	andeq	r1, r3, r4, ror #2
   1265c:	andeq	r1, r3, r4, ror #2
   12660:	andeq	r0, r0, r0
   12664:	push	{r4, lr}
   12668:	ldr	r4, [pc, #24]	; 12688 <__assert_fail@plt+0x14fc>
   1266c:	ldrb	r3, [r4]
   12670:	cmp	r3, #0
   12674:	popne	{r4, pc}
   12678:	bl	12600 <__assert_fail@plt+0x1474>
   1267c:	mov	r3, #1
   12680:	strb	r3, [r4]
   12684:	pop	{r4, pc}
   12688:	andeq	r1, r3, ip, lsl #3
   1268c:	b	1262c <__assert_fail@plt+0x14a0>
   12690:	cmp	r1, #0
   12694:	bxeq	lr
   12698:	add	ip, r0, #1
   1269c:	mov	r2, #0
   126a0:	strd	r4, [sp, #-16]!
   126a4:	mov	r5, #13
   126a8:	str	r6, [sp, #8]
   126ac:	mov	r6, #10
   126b0:	str	lr, [sp, #12]
   126b4:	sub	lr, r1, #1
   126b8:	ldrb	r3, [r0, r2]
   126bc:	cmp	r3, #0
   126c0:	beq	126f4 <__assert_fail@plt+0x1568>
   126c4:	cmp	r3, #92	; 0x5c
   126c8:	bne	12708 <__assert_fail@plt+0x157c>
   126cc:	cmp	lr, r2
   126d0:	beq	126f4 <__assert_fail@plt+0x1568>
   126d4:	add	r2, r2, #1
   126d8:	ldrb	r3, [r0, r2]
   126dc:	cmp	r3, #110	; 0x6e
   126e0:	beq	12750 <__assert_fail@plt+0x15c4>
   126e4:	cmp	r3, #114	; 0x72
   126e8:	beq	12744 <__assert_fail@plt+0x15b8>
   126ec:	cmp	r3, #92	; 0x5c
   126f0:	beq	12738 <__assert_fail@plt+0x15ac>
   126f4:	mov	r0, #0
   126f8:	ldrd	r4, [sp]
   126fc:	ldr	r6, [sp, #8]
   12700:	add	sp, sp, #12
   12704:	pop	{pc}		; (ldr pc, [sp], #4)
   12708:	mov	r4, ip
   1270c:	strb	r3, [ip, #-1]
   12710:	add	r2, r2, #1
   12714:	add	ip, ip, #1
   12718:	cmp	r1, r2
   1271c:	bhi	126b8 <__assert_fail@plt+0x152c>
   12720:	add	r1, r0, r1
   12724:	cmp	r4, r1
   12728:	bcs	126f8 <__assert_fail@plt+0x156c>
   1272c:	mov	r3, #0
   12730:	strb	r3, [r4]
   12734:	b	126f8 <__assert_fail@plt+0x156c>
   12738:	mov	r4, ip
   1273c:	strb	r3, [ip, #-1]
   12740:	b	12710 <__assert_fail@plt+0x1584>
   12744:	mov	r4, ip
   12748:	strb	r5, [ip, #-1]
   1274c:	b	12710 <__assert_fail@plt+0x1584>
   12750:	mov	r4, ip
   12754:	strb	r6, [ip, #-1]
   12758:	b	12710 <__assert_fail@plt+0x1584>
   1275c:	cmp	r1, #0
   12760:	beq	12844 <__assert_fail@plt+0x16b8>
   12764:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12768:	mov	r4, r0
   1276c:	strd	r6, [sp, #8]
   12770:	str	r8, [sp, #16]
   12774:	str	lr, [sp, #20]
   12778:	ldrb	r1, [r0]
   1277c:	cmp	r1, #0
   12780:	beq	12808 <__assert_fail@plt+0x167c>
   12784:	movw	r5, #4484	; 0x1184
   12788:	movt	r5, #3
   1278c:	movw	r8, #61152	; 0xeee0
   12790:	movt	r8, #1
   12794:	movw	r7, #61156	; 0xeee4
   12798:	movt	r7, #1
   1279c:	movw	r6, #61148	; 0xeedc
   127a0:	movt	r6, #1
   127a4:	b	127d8 <__assert_fail@plt+0x164c>
   127a8:	cmp	r1, #10
   127ac:	beq	12830 <__assert_fail@plt+0x16a4>
   127b0:	ldr	r2, [r3, #20]
   127b4:	ldr	r0, [r3, #24]
   127b8:	add	ip, r2, #1
   127bc:	cmp	r2, r0
   127c0:	strcc	ip, [r3, #20]
   127c4:	strbcc	r1, [r2]
   127c8:	bcs	12854 <__assert_fail@plt+0x16c8>
   127cc:	ldrb	r1, [r4, #1]!
   127d0:	cmp	r1, #0
   127d4:	beq	12808 <__assert_fail@plt+0x167c>
   127d8:	cmp	r1, #13
   127dc:	ldr	r3, [r5]
   127e0:	beq	1281c <__assert_fail@plt+0x1690>
   127e4:	cmp	r1, #92	; 0x5c
   127e8:	bne	127a8 <__assert_fail@plt+0x161c>
   127ec:	mov	r1, #1
   127f0:	mov	r2, #2
   127f4:	mov	r0, r7
   127f8:	bl	10f58 <fwrite_unlocked@plt>
   127fc:	ldrb	r1, [r4, #1]!
   12800:	cmp	r1, #0
   12804:	bne	127d8 <__assert_fail@plt+0x164c>
   12808:	ldrd	r4, [sp]
   1280c:	ldrd	r6, [sp, #8]
   12810:	ldr	r8, [sp, #16]
   12814:	add	sp, sp, #20
   12818:	pop	{pc}		; (ldr pc, [sp], #4)
   1281c:	mov	r2, #2
   12820:	mov	r1, #1
   12824:	mov	r0, r8
   12828:	bl	10f58 <fwrite_unlocked@plt>
   1282c:	b	127cc <__assert_fail@plt+0x1640>
   12830:	mov	r2, #2
   12834:	mov	r1, #1
   12838:	mov	r0, r6
   1283c:	bl	10f58 <fwrite_unlocked@plt>
   12840:	b	127cc <__assert_fail@plt+0x1640>
   12844:	movw	r3, #4484	; 0x1184
   12848:	movt	r3, #3
   1284c:	ldr	r1, [r3]
   12850:	b	10ec8 <fputs_unlocked@plt>
   12854:	mov	r0, r3
   12858:	bl	11108 <__overflow@plt>
   1285c:	b	127cc <__assert_fail@plt+0x1640>
   12860:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12864:	mov	r5, r2
   12868:	strd	r6, [sp, #8]
   1286c:	mov	r7, r0
   12870:	str	r8, [sp, #16]
   12874:	mov	r8, r1
   12878:	movw	r1, #61160	; 0xeee8
   1287c:	movt	r1, #1
   12880:	str	lr, [sp, #20]
   12884:	bl	10eec <strcmp@plt>
   12888:	mov	r3, #0
   1288c:	cmp	r0, r3
   12890:	strb	r3, [r5]
   12894:	bne	12928 <__assert_fail@plt+0x179c>
   12898:	movw	r3, #4480	; 0x1180
   1289c:	movt	r3, #3
   128a0:	ldr	r6, [r3]
   128a4:	movw	r4, #4496	; 0x1190
   128a8:	movt	r4, #3
   128ac:	mov	r5, #1
   128b0:	mov	r1, #2
   128b4:	strb	r5, [r4]
   128b8:	mov	r0, r6
   128bc:	bl	18abc <__assert_fail@plt+0x7930>
   128c0:	ldr	r3, [r4, #8]
   128c4:	mov	r1, r8
   128c8:	mov	r0, r6
   128cc:	ldr	r2, [r4, #12]
   128d0:	lsr	r3, r3, #3
   128d4:	orr	r2, r3, r2, lsl #29
   128d8:	bl	188ac <__assert_fail@plt+0x7720>
   128dc:	cmp	r0, #0
   128e0:	bne	12908 <__assert_fail@plt+0x177c>
   128e4:	mov	r0, r6
   128e8:	mov	r4, r5
   128ec:	bl	11138 <clearerr_unlocked@plt>
   128f0:	mov	r0, r4
   128f4:	ldrd	r4, [sp]
   128f8:	ldrd	r6, [sp, #8]
   128fc:	ldr	r8, [sp, #16]
   12900:	add	sp, sp, #20
   12904:	pop	{pc}		; (ldr pc, [sp], #4)
   12908:	bl	11090 <__errno_location@plt>
   1290c:	ldr	r5, [r0]
   12910:	mov	r0, r6
   12914:	bl	11138 <clearerr_unlocked@plt>
   12918:	cmp	r5, #0
   1291c:	bne	12998 <__assert_fail@plt+0x180c>
   12920:	mov	r4, #1
   12924:	b	128f0 <__assert_fail@plt+0x1764>
   12928:	movw	r1, #61164	; 0xeeec
   1292c:	movt	r1, #1
   12930:	mov	r0, r7
   12934:	bl	18c20 <__assert_fail@plt+0x7a94>
   12938:	subs	r4, r0, #0
   1293c:	beq	129e8 <__assert_fail@plt+0x185c>
   12940:	mov	r1, #2
   12944:	bl	18abc <__assert_fail@plt+0x7930>
   12948:	movw	r3, #4496	; 0x1190
   1294c:	movt	r3, #3
   12950:	ldr	ip, [r3, #8]
   12954:	mov	r1, r8
   12958:	mov	r0, r4
   1295c:	ldr	r2, [r3, #12]
   12960:	lsr	ip, ip, #3
   12964:	orr	r2, ip, r2, lsl #29
   12968:	bl	188ac <__assert_fail@plt+0x7720>
   1296c:	cmp	r0, #0
   12970:	beq	129c8 <__assert_fail@plt+0x183c>
   12974:	bl	11090 <__errno_location@plt>
   12978:	mov	r6, r0
   1297c:	mov	r0, r4
   12980:	ldr	r5, [r6]
   12984:	bl	18b0c <__assert_fail@plt+0x7980>
   12988:	cmp	r0, #0
   1298c:	beq	12918 <__assert_fail@plt+0x178c>
   12990:	cmp	r5, #0
   12994:	beq	129e0 <__assert_fail@plt+0x1854>
   12998:	mov	r2, r7
   1299c:	mov	r1, #3
   129a0:	mov	r0, #0
   129a4:	mov	r4, r0
   129a8:	bl	1bfc0 <__assert_fail@plt+0xae34>
   129ac:	mov	r3, r0
   129b0:	mov	r1, r5
   129b4:	movw	r2, #63172	; 0xf6c4
   129b8:	movt	r2, #1
   129bc:	mov	r0, r4
   129c0:	bl	11000 <error@plt>
   129c4:	b	128f0 <__assert_fail@plt+0x1764>
   129c8:	mov	r0, r4
   129cc:	bl	18b0c <__assert_fail@plt+0x7980>
   129d0:	cmp	r0, #0
   129d4:	beq	12920 <__assert_fail@plt+0x1794>
   129d8:	bl	11090 <__errno_location@plt>
   129dc:	mov	r6, r0
   129e0:	ldr	r5, [r6]
   129e4:	b	12918 <__assert_fail@plt+0x178c>
   129e8:	movw	r3, #4496	; 0x1190
   129ec:	movt	r3, #3
   129f0:	ldrb	r4, [r3, #16]
   129f4:	bl	11090 <__errno_location@plt>
   129f8:	ldr	r6, [r0]
   129fc:	cmp	r4, #0
   12a00:	beq	12a14 <__assert_fail@plt+0x1888>
   12a04:	cmp	r6, #2
   12a08:	moveq	r3, #1
   12a0c:	strbeq	r3, [r5]
   12a10:	beq	128f0 <__assert_fail@plt+0x1764>
   12a14:	mov	r2, r7
   12a18:	mov	r1, #3
   12a1c:	mov	r0, #0
   12a20:	mov	r4, r0
   12a24:	bl	1bfc0 <__assert_fail@plt+0xae34>
   12a28:	mov	r3, r0
   12a2c:	mov	r1, r6
   12a30:	movw	r2, #63172	; 0xf6c4
   12a34:	movt	r2, #1
   12a38:	mov	r0, r4
   12a3c:	bl	11000 <error@plt>
   12a40:	b	128f0 <__assert_fail@plt+0x1764>
   12a44:	subs	r6, r0, #0
   12a48:	str	r7, [sp, #-8]!
   12a4c:	str	lr, [sp, #4]
   12a50:	sub	sp, sp, #56	; 0x38
   12a54:	beq	12a9c <__assert_fail@plt+0x1910>
   12a58:	movw	r3, #4472	; 0x1178
   12a5c:	movt	r3, #3
   12a60:	ldr	r4, [r3]
   12a64:	mov	r2, #5
   12a68:	movw	r1, #61176	; 0xeef8
   12a6c:	movt	r1, #1
   12a70:	mov	r0, #0
   12a74:	bl	10f7c <dcgettext@plt>
   12a78:	movw	r3, #4536	; 0x11b8
   12a7c:	movt	r3, #3
   12a80:	mov	r2, r0
   12a84:	mov	r1, #1
   12a88:	ldr	r3, [r3]
   12a8c:	mov	r0, r4
   12a90:	bl	110d8 <__fprintf_chk@plt>
   12a94:	mov	r0, r6
   12a98:	bl	11060 <exit@plt>
   12a9c:	mov	r2, #5
   12aa0:	movw	r1, #61216	; 0xef20
   12aa4:	movt	r1, #1
   12aa8:	movw	r7, #4484	; 0x1184
   12aac:	movt	r7, #3
   12ab0:	bl	10f7c <dcgettext@plt>
   12ab4:	movw	r3, #4536	; 0x11b8
   12ab8:	movt	r3, #3
   12abc:	mov	r1, r0
   12ac0:	mov	r0, #1
   12ac4:	ldr	r2, [r3]
   12ac8:	bl	110c0 <__printf_chk@plt>
   12acc:	mov	r2, #5
   12ad0:	movw	r1, #61252	; 0xef44
   12ad4:	movt	r1, #1
   12ad8:	mov	r0, r6
   12adc:	bl	10f7c <dcgettext@plt>
   12ae0:	mov	r1, r0
   12ae4:	mov	r3, #512	; 0x200
   12ae8:	movw	r2, #61292	; 0xef6c
   12aec:	movt	r2, #1
   12af0:	mov	r0, #1
   12af4:	bl	110c0 <__printf_chk@plt>
   12af8:	mov	r2, #5
   12afc:	movw	r1, #61300	; 0xef74
   12b00:	movt	r1, #1
   12b04:	mov	r0, r6
   12b08:	bl	10f7c <dcgettext@plt>
   12b0c:	ldr	r1, [r7]
   12b10:	bl	10ec8 <fputs_unlocked@plt>
   12b14:	mov	r2, #5
   12b18:	movw	r1, #61356	; 0xefac
   12b1c:	movt	r1, #1
   12b20:	mov	r0, r6
   12b24:	bl	10f7c <dcgettext@plt>
   12b28:	ldr	r1, [r7]
   12b2c:	bl	10ec8 <fputs_unlocked@plt>
   12b30:	mov	r2, #5
   12b34:	movw	r1, #61432	; 0xeff8
   12b38:	movt	r1, #1
   12b3c:	mov	r0, r6
   12b40:	bl	10f7c <dcgettext@plt>
   12b44:	ldr	r1, [r7]
   12b48:	bl	10ec8 <fputs_unlocked@plt>
   12b4c:	mov	r2, #5
   12b50:	movw	r1, #61480	; 0xf028
   12b54:	movt	r1, #1
   12b58:	mov	r0, r6
   12b5c:	bl	10f7c <dcgettext@plt>
   12b60:	ldr	r1, [r7]
   12b64:	bl	10ec8 <fputs_unlocked@plt>
   12b68:	mov	r2, #5
   12b6c:	movw	r1, #61552	; 0xf070
   12b70:	movt	r1, #1
   12b74:	mov	r0, r6
   12b78:	bl	10f7c <dcgettext@plt>
   12b7c:	ldr	r1, [r7]
   12b80:	bl	10ec8 <fputs_unlocked@plt>
   12b84:	mov	r2, #5
   12b88:	movw	r1, #61704	; 0xf108
   12b8c:	movt	r1, #1
   12b90:	mov	r0, r6
   12b94:	bl	10f7c <dcgettext@plt>
   12b98:	ldr	r1, [r7]
   12b9c:	bl	10ec8 <fputs_unlocked@plt>
   12ba0:	mov	r2, #5
   12ba4:	movw	r1, #61760	; 0xf140
   12ba8:	movt	r1, #1
   12bac:	mov	r0, r6
   12bb0:	bl	10f7c <dcgettext@plt>
   12bb4:	ldr	r1, [r7]
   12bb8:	bl	10ec8 <fputs_unlocked@plt>
   12bbc:	mov	r2, #5
   12bc0:	movw	r1, #61816	; 0xf178
   12bc4:	movt	r1, #1
   12bc8:	mov	r0, r6
   12bcc:	bl	10f7c <dcgettext@plt>
   12bd0:	ldr	r1, [r7]
   12bd4:	bl	10ec8 <fputs_unlocked@plt>
   12bd8:	mov	r2, #5
   12bdc:	movw	r1, #61944	; 0xf1f8
   12be0:	movt	r1, #1
   12be4:	mov	r0, r6
   12be8:	bl	10f7c <dcgettext@plt>
   12bec:	ldr	r1, [r7]
   12bf0:	bl	10ec8 <fputs_unlocked@plt>
   12bf4:	mov	r2, #5
   12bf8:	movw	r1, #62384	; 0xf3b0
   12bfc:	movt	r1, #1
   12c00:	mov	r0, r6
   12c04:	bl	10f7c <dcgettext@plt>
   12c08:	ldr	r1, [r7]
   12c0c:	bl	10ec8 <fputs_unlocked@plt>
   12c10:	mov	r2, #5
   12c14:	movw	r1, #62432	; 0xf3e0
   12c18:	movt	r1, #1
   12c1c:	mov	r0, r6
   12c20:	bl	10f7c <dcgettext@plt>
   12c24:	ldr	r1, [r7]
   12c28:	bl	10ec8 <fputs_unlocked@plt>
   12c2c:	mov	r2, #5
   12c30:	movw	r1, #62488	; 0xf418
   12c34:	movt	r1, #1
   12c38:	mov	r0, r6
   12c3c:	bl	10f7c <dcgettext@plt>
   12c40:	mov	r1, r0
   12c44:	movw	r2, #62532	; 0xf444
   12c48:	movt	r2, #1
   12c4c:	mov	r0, #1
   12c50:	bl	110c0 <__printf_chk@plt>
   12c54:	mov	r2, #5
   12c58:	movw	r1, #62544	; 0xf450
   12c5c:	movt	r1, #1
   12c60:	mov	r0, r6
   12c64:	bl	10f7c <dcgettext@plt>
   12c68:	ldr	r1, [r7]
   12c6c:	bl	10ec8 <fputs_unlocked@plt>
   12c70:	movw	lr, #60852	; 0xedb4
   12c74:	movt	lr, #1
   12c78:	ldr	ip, [lr]
   12c7c:	ldr	r4, [lr, #4]
   12c80:	ldrd	r8, [lr, #8]
   12c84:	subs	r1, ip, #0
   12c88:	str	ip, [sp]
   12c8c:	ldrd	r2, [lr, #16]
   12c90:	str	r4, [sp, #4]
   12c94:	ldrd	r4, [lr, #24]
   12c98:	strd	r8, [sp, #8]
   12c9c:	ldrd	r8, [lr, #32]
   12ca0:	strd	r2, [sp, #16]
   12ca4:	ldrd	r2, [lr, #40]	; 0x28
   12ca8:	strd	r4, [sp, #24]
   12cac:	ldrd	r4, [lr, #48]	; 0x30
   12cb0:	strd	r8, [sp, #32]
   12cb4:	strd	r2, [sp, #40]	; 0x28
   12cb8:	strd	r4, [sp, #48]	; 0x30
   12cbc:	movwne	r5, #61168	; 0xeef0
   12cc0:	mov	r4, sp
   12cc4:	movtne	r5, #1
   12cc8:	bne	12dc0 <__assert_fail@plt+0x1c34>
   12ccc:	ldr	r4, [r4, #4]
   12cd0:	movw	r1, #62880	; 0xf5a0
   12cd4:	movt	r1, #1
   12cd8:	mov	r2, #5
   12cdc:	cmp	r4, #0
   12ce0:	beq	12dd4 <__assert_fail@plt+0x1c48>
   12ce4:	mov	r0, #0
   12ce8:	bl	10f7c <dcgettext@plt>
   12cec:	mov	r1, r0
   12cf0:	movw	r3, #62904	; 0xf5b8
   12cf4:	movt	r3, #1
   12cf8:	movw	r2, #62944	; 0xf5e0
   12cfc:	movt	r2, #1
   12d00:	mov	r0, #1
   12d04:	bl	110c0 <__printf_chk@plt>
   12d08:	mov	r1, #0
   12d0c:	mov	r0, #5
   12d10:	bl	11114 <setlocale@plt>
   12d14:	cmp	r0, #0
   12d18:	movweq	r5, #61168	; 0xeef0
   12d1c:	movteq	r5, #1
   12d20:	beq	12d44 <__assert_fail@plt+0x1bb8>
   12d24:	movw	r1, #62960	; 0xf5f0
   12d28:	movt	r1, #1
   12d2c:	mov	r2, #3
   12d30:	movw	r5, #61168	; 0xeef0
   12d34:	movt	r5, #1
   12d38:	bl	1115c <strncmp@plt>
   12d3c:	cmp	r0, #0
   12d40:	bne	12e8c <__assert_fail@plt+0x1d00>
   12d44:	mov	r2, #5
   12d48:	movw	r1, #63036	; 0xf63c
   12d4c:	movt	r1, #1
   12d50:	mov	r0, #0
   12d54:	bl	10f7c <dcgettext@plt>
   12d58:	mov	r1, r0
   12d5c:	movw	r3, #61168	; 0xeef0
   12d60:	movt	r3, #1
   12d64:	movw	r2, #62904	; 0xf5b8
   12d68:	movt	r2, #1
   12d6c:	mov	r0, #1
   12d70:	bl	110c0 <__printf_chk@plt>
   12d74:	mov	r2, #5
   12d78:	movw	r1, #63064	; 0xf658
   12d7c:	movt	r1, #1
   12d80:	mov	r0, #0
   12d84:	bl	10f7c <dcgettext@plt>
   12d88:	movw	r2, #64388	; 0xfb84
   12d8c:	movt	r2, #1
   12d90:	cmp	r4, r5
   12d94:	movw	r3, #61812	; 0xf174
   12d98:	movt	r3, #1
   12d9c:	mov	r1, r0
   12da0:	moveq	r3, r2
   12da4:	mov	r2, r4
   12da8:	mov	r0, #1
   12dac:	bl	110c0 <__printf_chk@plt>
   12db0:	b	12a94 <__assert_fail@plt+0x1908>
   12db4:	ldr	r1, [r4, #8]!
   12db8:	cmp	r1, #0
   12dbc:	beq	12ccc <__assert_fail@plt+0x1b40>
   12dc0:	mov	r0, r5
   12dc4:	bl	10eec <strcmp@plt>
   12dc8:	cmp	r0, #0
   12dcc:	bne	12db4 <__assert_fail@plt+0x1c28>
   12dd0:	b	12ccc <__assert_fail@plt+0x1b40>
   12dd4:	mov	r0, r4
   12dd8:	bl	10f7c <dcgettext@plt>
   12ddc:	mov	r1, r0
   12de0:	movw	r3, #62904	; 0xf5b8
   12de4:	movt	r3, #1
   12de8:	movw	r2, #62944	; 0xf5e0
   12dec:	movt	r2, #1
   12df0:	mov	r0, #1
   12df4:	bl	110c0 <__printf_chk@plt>
   12df8:	mov	r1, r4
   12dfc:	mov	r0, #5
   12e00:	bl	11114 <setlocale@plt>
   12e04:	cmp	r0, #0
   12e08:	beq	12e24 <__assert_fail@plt+0x1c98>
   12e0c:	movw	r1, #62960	; 0xf5f0
   12e10:	movt	r1, #1
   12e14:	mov	r2, #3
   12e18:	bl	1115c <strncmp@plt>
   12e1c:	cmp	r0, #0
   12e20:	bne	12e80 <__assert_fail@plt+0x1cf4>
   12e24:	mov	r2, #5
   12e28:	movw	r1, #63036	; 0xf63c
   12e2c:	movt	r1, #1
   12e30:	mov	r0, #0
   12e34:	bl	10f7c <dcgettext@plt>
   12e38:	mov	r1, r0
   12e3c:	movw	r3, #61168	; 0xeef0
   12e40:	movt	r3, #1
   12e44:	movw	r2, #62904	; 0xf5b8
   12e48:	movt	r2, #1
   12e4c:	mov	r0, #1
   12e50:	bl	110c0 <__printf_chk@plt>
   12e54:	movw	r1, #63064	; 0xf658
   12e58:	movt	r1, #1
   12e5c:	mov	r2, #5
   12e60:	mov	r0, #0
   12e64:	bl	10f7c <dcgettext@plt>
   12e68:	movw	r4, #61168	; 0xeef0
   12e6c:	movt	r4, #1
   12e70:	movw	r3, #64388	; 0xfb84
   12e74:	movt	r3, #1
   12e78:	mov	r1, r0
   12e7c:	b	12da4 <__assert_fail@plt+0x1c18>
   12e80:	movw	r5, #61168	; 0xeef0
   12e84:	movt	r5, #1
   12e88:	mov	r4, r5
   12e8c:	mov	r2, #5
   12e90:	movw	r1, #62964	; 0xf5f4
   12e94:	movt	r1, #1
   12e98:	mov	r0, #0
   12e9c:	bl	10f7c <dcgettext@plt>
   12ea0:	ldr	r1, [r7]
   12ea4:	bl	10ec8 <fputs_unlocked@plt>
   12ea8:	b	12d44 <__assert_fail@plt+0x1bb8>
   12eac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12eb0:	strd	r6, [sp, #8]
   12eb4:	strd	r8, [sp, #16]
   12eb8:	strd	sl, [sp, #24]
   12ebc:	str	lr, [sp, #32]
   12ec0:	sub	sp, sp, #524	; 0x20c
   12ec4:	add	ip, sp, #384	; 0x180
   12ec8:	str	r0, [sp, #92]	; 0x5c
   12ecc:	add	r0, sp, #256	; 0x100
   12ed0:	ldr	r3, [r1, #4]
   12ed4:	add	r1, r1, #8
   12ed8:	ldr	r2, [r1, #-8]
   12edc:	str	r3, [sp, #396]	; 0x18c
   12ee0:	add	r3, sp, #392	; 0x188
   12ee4:	str	r2, [sp, #392]	; 0x188
   12ee8:	ldrd	r2, [r3]
   12eec:	strd	r2, [r0, #8]!
   12ef0:	cmp	ip, r0
   12ef4:	bne	12ed0 <__assert_fail@plt+0x1d44>
   12ef8:	ldr	r7, [sp, #92]	; 0x5c
   12efc:	add	r6, sp, #268	; 0x10c
   12f00:	movw	r4, #58983	; 0xe667
   12f04:	movt	r4, #27145	; 0x6a09
   12f08:	ldr	r2, [r7, #32]
   12f0c:	ldr	r3, [r7]
   12f10:	ldr	r1, [r7, #4]
   12f14:	str	r2, [sp, #424]	; 0x1a8
   12f18:	ldr	r2, [r7, #8]
   12f1c:	str	r3, [sp, #392]	; 0x188
   12f20:	ldr	r3, [r7, #12]
   12f24:	str	r1, [sp, #396]	; 0x18c
   12f28:	ldr	r1, [r7, #16]
   12f2c:	str	r2, [sp, #400]	; 0x190
   12f30:	ldr	r2, [r7, #20]
   12f34:	str	r3, [sp, #404]	; 0x194
   12f38:	ldr	r3, [r7, #24]
   12f3c:	str	r1, [sp, #408]	; 0x198
   12f40:	ldr	r1, [r7, #28]
   12f44:	str	r2, [sp, #412]	; 0x19c
   12f48:	ldr	r2, [r7, #36]	; 0x24
   12f4c:	str	r3, [sp, #416]	; 0x1a0
   12f50:	ldr	r3, [r7, #40]	; 0x28
   12f54:	str	r1, [sp, #420]	; 0x1a4
   12f58:	ldr	r1, [r7, #44]	; 0x2c
   12f5c:	str	r2, [sp, #428]	; 0x1ac
   12f60:	ldr	r2, [r7, #48]	; 0x30
   12f64:	str	r3, [sp, #432]	; 0x1b0
   12f68:	ldr	r3, [r7, #52]	; 0x34
   12f6c:	str	r1, [sp, #436]	; 0x1b4
   12f70:	ldr	r1, [r7, #56]	; 0x38
   12f74:	str	r2, [sp, #440]	; 0x1b8
   12f78:	ldr	r2, [r7, #60]	; 0x3c
   12f7c:	str	r3, [sp, #444]	; 0x1bc
   12f80:	movw	r3, #51464	; 0xc908
   12f84:	movt	r3, #62396	; 0xf3bc
   12f88:	str	r1, [sp, #448]	; 0x1c0
   12f8c:	str	r2, [sp, #452]	; 0x1c4
   12f90:	ldr	ip, [sp, #264]	; 0x108
   12f94:	ldm	r6, {r6, r9, fp}
   12f98:	ldr	r1, [sp, #392]	; 0x188
   12f9c:	stmib	sp, {r9, fp}
   12fa0:	ldr	sl, [sp, #424]	; 0x1a8
   12fa4:	str	ip, [sp, #96]	; 0x60
   12fa8:	ldr	r8, [sp, #396]	; 0x18c
   12fac:	str	r6, [sp, #100]	; 0x64
   12fb0:	ldr	r0, [sp, #428]	; 0x1ac
   12fb4:	adds	r1, sl, r1
   12fb8:	ldr	lr, [r7, #64]	; 0x40
   12fbc:	ldr	r2, [r7, #68]	; 0x44
   12fc0:	adc	r8, r0, r8
   12fc4:	adds	r5, r1, ip
   12fc8:	adc	r8, r8, r6
   12fcc:	ldr	r6, [sp, #400]	; 0x190
   12fd0:	eor	lr, lr, r5
   12fd4:	eor	lr, lr, #-1392508928	; 0xad000000
   12fd8:	ldr	r9, [sp, #432]	; 0x1b0
   12fdc:	eor	r1, r8, r2
   12fe0:	eor	lr, lr, #15073280	; 0xe60000
   12fe4:	eor	r2, r1, #1358954496	; 0x51000000
   12fe8:	eor	lr, lr, #33280	; 0x8200
   12fec:	eor	r2, r2, #937984	; 0xe5000
   12ff0:	eor	lr, lr, #209	; 0xd1
   12ff4:	eor	r2, r2, #636	; 0x27c
   12ff8:	eor	r2, r2, #3
   12ffc:	adds	r3, r2, r3
   13000:	eor	ip, sl, r3
   13004:	ldmib	sp, {r1, sl}
   13008:	adc	r4, lr, r4
   1300c:	eor	r0, r0, r4
   13010:	lsr	fp, ip, #24
   13014:	orr	fp, fp, r0, lsl #8
   13018:	adds	r1, r5, r1
   1301c:	ldr	r5, [sp, #404]	; 0x194
   13020:	adc	r8, r8, sl
   13024:	lsr	sl, r0, #24
   13028:	adds	r1, r1, fp
   1302c:	ldr	r0, [sp, #436]	; 0x1b4
   13030:	orr	sl, sl, ip, lsl #8
   13034:	mov	ip, r1
   13038:	ldr	r1, [sp, #280]	; 0x118
   1303c:	adc	r8, r8, sl
   13040:	str	r8, [sp, #56]	; 0x38
   13044:	ldr	r8, [sp, #56]	; 0x38
   13048:	str	r1, [sp, #12]
   1304c:	eor	r1, ip, r2
   13050:	str	ip, [sp, #52]	; 0x34
   13054:	lsr	ip, r1, #16
   13058:	eor	lr, lr, r8
   1305c:	ldr	r8, [sp, #284]	; 0x11c
   13060:	lsr	r2, lr, #16
   13064:	orr	lr, ip, lr, lsl #16
   13068:	mov	ip, r7
   1306c:	ldr	r7, [r7, #76]	; 0x4c
   13070:	orr	r2, r2, r1, lsl #16
   13074:	mov	r1, r2
   13078:	adds	r2, r3, lr
   1307c:	adc	r4, r4, r1
   13080:	str	r2, [sp, #136]	; 0x88
   13084:	mov	r2, ip
   13088:	str	r4, [sp, #140]	; 0x8c
   1308c:	str	lr, [sp, #180]	; 0xb4
   13090:	movw	lr, #42811	; 0xa73b
   13094:	movt	lr, #33994	; 0x84ca
   13098:	str	r1, [sp, #192]	; 0xc0
   1309c:	adds	r1, r9, r6
   130a0:	ldr	r2, [r2, #72]	; 0x48
   130a4:	adc	ip, r0, r5
   130a8:	movw	r5, #44677	; 0xae85
   130ac:	movt	r5, #47975	; 0xbb67
   130b0:	ldr	r3, [sp, #12]
   130b4:	str	r8, [sp, #104]	; 0x68
   130b8:	ldr	r4, [sp, #136]	; 0x88
   130bc:	adds	r1, r1, r3
   130c0:	adc	ip, ip, r8
   130c4:	eor	r2, r2, r1
   130c8:	ldr	r8, [sp, #408]	; 0x198
   130cc:	eor	r3, ip, r7
   130d0:	eor	fp, fp, r4
   130d4:	ldr	r7, [sp, #140]	; 0x8c
   130d8:	eor	r3, r3, #-1694498816	; 0x9b000000
   130dc:	lsl	r4, fp, #1
   130e0:	eor	r3, r3, #352256	; 0x56000
   130e4:	eor	r2, r2, #721420288	; 0x2b000000
   130e8:	eor	r3, r3, #2176	; 0x880
   130ec:	eor	r2, r2, #4079616	; 0x3e4000
   130f0:	eor	r3, r3, #12
   130f4:	eor	r2, r2, #11264	; 0x2c00
   130f8:	adds	lr, r3, lr
   130fc:	eor	r2, r2, #31
   13100:	eor	sl, sl, r7
   13104:	ldr	r7, [sp, #288]	; 0x120
   13108:	adc	r5, r2, r5
   1310c:	orr	r4, r4, sl, lsr #31
   13110:	eor	r0, r0, r5
   13114:	lsl	r6, sl, #1
   13118:	eor	sl, r9, lr
   1311c:	lsr	r9, r0, #24
   13120:	orr	fp, r6, fp, lsr #31
   13124:	str	r7, [sp, #16]
   13128:	orr	r9, r9, sl, lsl #8
   1312c:	ldr	r7, [sp, #292]	; 0x124
   13130:	str	r4, [sp, #216]	; 0xd8
   13134:	ldr	r4, [sp, #16]
   13138:	str	r7, [sp, #20]
   1313c:	lsr	r7, sl, #24
   13140:	str	fp, [sp, #220]	; 0xdc
   13144:	orr	r0, r7, r0, lsl #8
   13148:	ldr	r7, [sp, #20]
   1314c:	adds	r1, r1, r4
   13150:	ldr	fp, [sp, #296]	; 0x128
   13154:	ldr	r4, [sp, #440]	; 0x1b8
   13158:	adc	ip, ip, r7
   1315c:	adds	sl, r1, r0
   13160:	adc	r6, ip, r9
   13164:	eor	r3, r3, sl
   13168:	ldr	r7, [sp, #412]	; 0x19c
   1316c:	eor	r2, r2, r6
   13170:	str	sl, [sp, #84]	; 0x54
   13174:	lsr	r1, r2, #16
   13178:	str	r6, [sp, #88]	; 0x58
   1317c:	lsr	r6, r3, #16
   13180:	ldr	sl, [sp, #300]	; 0x12c
   13184:	orr	r3, r1, r3, lsl #16
   13188:	str	fp, [sp, #108]	; 0x6c
   1318c:	orr	r2, r6, r2, lsl #16
   13190:	ldr	ip, [sp, #444]	; 0x1bc
   13194:	str	sl, [sp, #112]	; 0x70
   13198:	strd	r2, [sp, #204]	; 0xcc
   1319c:	adds	r2, lr, r2
   131a0:	movw	lr, #62322	; 0xf372
   131a4:	movt	lr, #15470	; 0x3c6e
   131a8:	adc	r5, r5, r3
   131ac:	str	r2, [sp, #144]	; 0x90
   131b0:	adds	r3, r4, r8
   131b4:	str	r5, [sp, #148]	; 0x94
   131b8:	adc	r8, ip, r7
   131bc:	adds	r3, r3, fp
   131c0:	ldr	r2, [sp, #92]	; 0x5c
   131c4:	adc	r8, r8, sl
   131c8:	ldr	r5, [sp, #144]	; 0x90
   131cc:	ldr	r1, [r2, #84]	; 0x54
   131d0:	mov	r7, r2
   131d4:	movw	r2, #63531	; 0xf82b
   131d8:	movt	r2, #65172	; 0xfe94
   131dc:	eor	r0, r0, r5
   131e0:	ldr	r5, [sp, #148]	; 0x94
   131e4:	lsl	sl, r0, #1
   131e8:	ldr	r6, [r7, #80]	; 0x50
   131ec:	eor	r1, r1, r8
   131f0:	eor	r1, r1, #528482304	; 0x1f800000
   131f4:	eor	r9, r9, r5
   131f8:	eor	r1, r1, #251904	; 0x3d800
   131fc:	lsl	r5, r9, #1
   13200:	eor	r1, r1, #424	; 0x1a8
   13204:	orr	sl, sl, r9, lsr #31
   13208:	eor	r1, r1, #3
   1320c:	orr	r9, r5, r0, lsr #31
   13210:	eor	r0, r3, r6
   13214:	adds	r2, r1, r2
   13218:	eor	r0, r0, #-83886080	; 0xfb000000
   1321c:	eor	r4, r4, r2
   13220:	eor	r0, r0, #4259840	; 0x410000
   13224:	lsr	fp, r4, #24
   13228:	str	r9, [sp, #60]	; 0x3c
   1322c:	eor	r0, r0, #48384	; 0xbd00
   13230:	ldr	r9, [sp, #304]	; 0x130
   13234:	eor	r0, r0, #107	; 0x6b
   13238:	adc	lr, r0, lr
   1323c:	ldr	r5, [sp, #308]	; 0x134
   13240:	eor	ip, ip, lr
   13244:	orr	fp, fp, ip, lsl #8
   13248:	ldr	r6, [sp, #452]	; 0x1c4
   1324c:	adds	r3, r3, r9
   13250:	str	r9, [sp, #116]	; 0x74
   13254:	lsr	r9, ip, #24
   13258:	adc	r8, r8, r5
   1325c:	orr	r9, r9, r4, lsl #8
   13260:	adds	ip, r3, fp
   13264:	eor	r1, r1, ip
   13268:	ldr	r4, [sp, #312]	; 0x138
   1326c:	adc	r8, r8, r9
   13270:	lsr	r3, r1, #16
   13274:	str	r5, [sp, #120]	; 0x78
   13278:	eor	r0, r0, r8
   1327c:	str	ip, [sp, #164]	; 0xa4
   13280:	lsr	r7, r0, #16
   13284:	str	r8, [sp, #168]	; 0xa8
   13288:	orr	r0, r3, r0, lsl #16
   1328c:	ldr	ip, [sp, #416]	; 0x1a0
   13290:	mov	r5, r4
   13294:	mov	r8, r0
   13298:	ldr	r0, [sp, #316]	; 0x13c
   1329c:	adds	r2, r2, r8
   132a0:	str	r5, [sp, #124]	; 0x7c
   132a4:	ldr	r4, [sp, #420]	; 0x1a4
   132a8:	eor	fp, fp, r2
   132ac:	str	r8, [sp, #224]	; 0xe0
   132b0:	ldr	r8, [sp, #320]	; 0x140
   132b4:	mov	r3, r0
   132b8:	orr	r0, r7, r1, lsl #16
   132bc:	ldr	r7, [sp, #92]	; 0x5c
   132c0:	str	r3, [sp, #128]	; 0x80
   132c4:	str	r0, [sp, #156]	; 0x9c
   132c8:	ldr	r0, [sp, #156]	; 0x9c
   132cc:	str	r8, [sp, #132]	; 0x84
   132d0:	ldr	r1, [r7, #92]	; 0x5c
   132d4:	ldr	r7, [r7, #88]	; 0x58
   132d8:	adc	lr, lr, r0
   132dc:	ldr	r0, [sp, #448]	; 0x1c0
   132e0:	eor	r9, r9, lr
   132e4:	adds	ip, r0, ip
   132e8:	lsl	r0, r9, #1
   132ec:	adc	r4, r6, r4
   132f0:	adds	ip, ip, r5
   132f4:	lsl	r5, fp, #1
   132f8:	adc	r4, r4, r3
   132fc:	orr	fp, r0, fp, lsr #31
   13300:	eor	r0, ip, r7
   13304:	eor	r1, r1, r4
   13308:	eor	r0, r0, #322961408	; 0x13400000
   1330c:	str	r4, [sp, #36]	; 0x24
   13310:	orr	r4, r5, r9, lsr #31
   13314:	eor	r1, r1, #1526726656	; 0x5b000000
   13318:	str	fp, [sp, #160]	; 0xa0
   1331c:	eor	r1, r1, #14680064	; 0xe00000
   13320:	movw	r3, #14065	; 0x36f1
   13324:	movt	r3, #24349	; 0x5f1d
   13328:	ldr	r9, [sp, #324]	; 0x144
   1332c:	eor	r1, r1, #52480	; 0xcd00
   13330:	eor	r1, r1, #25
   13334:	eor	r0, r0, #4063232	; 0x3e0000
   13338:	ldr	fp, [sp, #448]	; 0x1c0
   1333c:	adds	r3, r1, r3
   13340:	eor	r0, r0, #8512	; 0x2140
   13344:	eor	r0, r0, #57	; 0x39
   13348:	movw	r5, #62778	; 0xf53a
   1334c:	movt	r5, #42319	; 0xa54f
   13350:	str	r4, [sp, #196]	; 0xc4
   13354:	adc	r5, r0, r5
   13358:	adds	ip, ip, r8
   1335c:	ldr	r4, [sp, #328]	; 0x148
   13360:	eor	r6, r6, r5
   13364:	eor	r7, fp, r3
   13368:	str	r9, [sp, #24]
   1336c:	lsr	r8, r6, #24
   13370:	lsr	r9, r7, #24
   13374:	orr	r7, r8, r7, lsl #8
   13378:	orr	r6, r9, r6, lsl #8
   1337c:	ldr	r9, [sp, #24]
   13380:	str	r4, [sp, #28]
   13384:	ldr	r4, [sp, #332]	; 0x14c
   13388:	str	r4, [sp, #32]
   1338c:	ldr	r4, [sp, #36]	; 0x24
   13390:	ldr	r8, [sp, #336]	; 0x150
   13394:	adc	r4, r4, r9
   13398:	adds	fp, ip, r6
   1339c:	adc	ip, r4, r7
   133a0:	eor	r1, r1, fp
   133a4:	mov	r4, ip
   133a8:	ldr	ip, [sp, #340]	; 0x154
   133ac:	str	r8, [sp, #36]	; 0x24
   133b0:	str	fp, [sp, #172]	; 0xac
   133b4:	ldr	fp, [sp, #344]	; 0x158
   133b8:	str	ip, [sp, #40]	; 0x28
   133bc:	eor	ip, r4, r0
   133c0:	lsr	r0, ip, #16
   133c4:	str	r4, [sp, #176]	; 0xb0
   133c8:	lsr	r4, r1, #16
   133cc:	orr	r0, r0, r1, lsl #16
   133d0:	ldr	r1, [sp, #348]	; 0x15c
   133d4:	orr	ip, r4, ip, lsl #16
   133d8:	str	fp, [sp, #44]	; 0x2c
   133dc:	ldr	r4, [sp, #28]
   133e0:	adds	r3, r3, ip
   133e4:	adc	fp, r5, r0
   133e8:	ldr	r5, [sp, #360]	; 0x168
   133ec:	eor	r6, r6, r3
   133f0:	str	r1, [sp, #48]	; 0x30
   133f4:	str	fp, [sp, #152]	; 0x98
   133f8:	ldr	r1, [sp, #52]	; 0x34
   133fc:	ldr	r9, [sp, #152]	; 0x98
   13400:	ldr	fp, [sp, #352]	; 0x160
   13404:	adds	r1, r1, r4
   13408:	ldr	r4, [sp, #32]
   1340c:	eor	r7, r7, r9
   13410:	str	fp, [sp, #52]	; 0x34
   13414:	ldr	fp, [sp, #56]	; 0x38
   13418:	adc	r8, fp, r4
   1341c:	ldr	r4, [sp, #60]	; 0x3c
   13420:	adds	r1, r1, sl
   13424:	eor	ip, ip, r1
   13428:	str	r5, [sp, #60]	; 0x3c
   1342c:	ldr	fp, [sp, #356]	; 0x164
   13430:	adc	r8, r8, r4
   13434:	eor	r0, r0, r8
   13438:	adds	r2, r2, r0
   1343c:	str	fp, [sp, #56]	; 0x38
   13440:	adc	lr, lr, ip
   13444:	eor	r9, r2, sl
   13448:	ldr	fp, [sp, #40]	; 0x28
   1344c:	eor	sl, lr, r4
   13450:	lsr	r5, r9, #24
   13454:	ldr	r4, [sp, #36]	; 0x24
   13458:	orr	r5, r5, sl, lsl #8
   1345c:	adds	r1, r1, r4
   13460:	lsr	r4, sl, #24
   13464:	ldr	sl, [sp, #368]	; 0x170
   13468:	adc	r8, r8, fp
   1346c:	ldr	fp, [sp, #364]	; 0x16c
   13470:	orr	r4, r4, r9, lsl #8
   13474:	str	sl, [sp, #68]	; 0x44
   13478:	adds	sl, r1, r5
   1347c:	lsl	r1, r7, #1
   13480:	adc	r8, r8, r4
   13484:	eor	r0, r0, sl
   13488:	str	fp, [sp, #64]	; 0x40
   1348c:	str	sl, [sp, #184]	; 0xb8
   13490:	lsl	sl, r6, #1
   13494:	eor	ip, ip, r8
   13498:	orr	r6, r1, r6, lsr #31
   1349c:	str	r8, [sp, #188]	; 0xbc
   134a0:	orr	sl, sl, r7, lsr #31
   134a4:	ldr	r1, [sp, #160]	; 0xa0
   134a8:	lsr	r9, r0, #16
   134ac:	ldr	fp, [sp, #160]	; 0xa0
   134b0:	ldr	r7, [sp, #372]	; 0x174
   134b4:	str	r7, [sp, #72]	; 0x48
   134b8:	lsr	r7, ip, #16
   134bc:	orr	ip, r9, ip, lsl #16
   134c0:	orr	r0, r7, r0, lsl #16
   134c4:	adds	r2, r2, ip
   134c8:	mov	r9, ip
   134cc:	ldr	ip, [sp, #376]	; 0x178
   134d0:	mov	r7, r0
   134d4:	mov	r8, r2
   134d8:	ldr	r0, [sp, #380]	; 0x17c
   134dc:	adc	r2, lr, r7
   134e0:	eor	r5, r5, r8
   134e4:	eor	r4, r4, r2
   134e8:	ldr	lr, [sp, #384]	; 0x180
   134ec:	str	ip, [sp, #76]	; 0x4c
   134f0:	str	r7, [sp, #232]	; 0xe8
   134f4:	mov	r7, r2
   134f8:	str	r0, [sp, #80]	; 0x50
   134fc:	ldr	r2, [sp, #44]	; 0x2c
   13500:	str	r9, [sp, #228]	; 0xe4
   13504:	ldr	r0, [sp, #84]	; 0x54
   13508:	str	lr, [sp, #84]	; 0x54
   1350c:	ldr	ip, [sp, #88]	; 0x58
   13510:	ldr	lr, [sp, #180]	; 0xb4
   13514:	adds	r2, r0, r2
   13518:	ldr	r0, [sp, #48]	; 0x30
   1351c:	ldr	r9, [sp, #196]	; 0xc4
   13520:	str	r7, [sp, #196]	; 0xc4
   13524:	ldr	r7, [sp, #52]	; 0x34
   13528:	adc	r0, ip, r0
   1352c:	ldr	ip, [sp, #388]	; 0x184
   13530:	adds	r2, r2, r9
   13534:	adc	r0, r0, r1
   13538:	ldr	r1, [sp, #192]	; 0xc0
   1353c:	eor	lr, r2, lr
   13540:	str	ip, [sp, #88]	; 0x58
   13544:	ldr	ip, [sp, #152]	; 0x98
   13548:	eor	r1, r0, r1
   1354c:	str	r8, [sp, #192]	; 0xc0
   13550:	adds	r3, r3, r1
   13554:	eor	r9, r3, r9
   13558:	adc	r8, ip, lr
   1355c:	adds	r2, r2, r7
   13560:	lsr	ip, r9, #24
   13564:	eor	fp, fp, r8
   13568:	str	r2, [sp, #152]	; 0x98
   1356c:	orr	ip, ip, fp, lsl #8
   13570:	ldr	r2, [sp, #56]	; 0x38
   13574:	lsr	r7, fp, #24
   13578:	lsl	fp, r5, #1
   1357c:	orr	r7, r7, r9, lsl #8
   13580:	orr	fp, fp, r4, lsr #31
   13584:	lsl	r4, r4, #1
   13588:	adc	r0, r0, r2
   1358c:	ldr	r2, [sp, #152]	; 0x98
   13590:	str	fp, [sp, #236]	; 0xec
   13594:	adds	r2, r2, ip
   13598:	eor	r1, r1, r2
   1359c:	adc	r0, r0, r7
   135a0:	str	r2, [sp, #160]	; 0xa0
   135a4:	lsr	r2, r1, #16
   135a8:	eor	lr, lr, r0
   135ac:	str	r0, [sp, #200]	; 0xc8
   135b0:	lsr	r0, lr, #16
   135b4:	orr	r2, r2, lr, lsl #16
   135b8:	orr	r0, r0, r1, lsl #16
   135bc:	adds	r3, r3, r2
   135c0:	mov	lr, r3
   135c4:	orr	r3, r4, r5, lsr #31
   135c8:	str	r2, [sp, #244]	; 0xf4
   135cc:	str	r3, [sp, #240]	; 0xf0
   135d0:	ldr	fp, [sp, #60]	; 0x3c
   135d4:	ldr	r2, [sp, #92]	; 0x5c
   135d8:	ldr	r9, [sp, #164]	; 0xa4
   135dc:	ldr	r1, [sp, #204]	; 0xcc
   135e0:	ldr	r3, [r2]
   135e4:	ldr	r2, [sp, #64]	; 0x40
   135e8:	str	r3, [sp, #180]	; 0xb4
   135ec:	adc	r3, r8, r0
   135f0:	mov	r4, r3
   135f4:	adds	r3, r9, fp
   135f8:	ldr	r9, [sp, #168]	; 0xa8
   135fc:	str	lr, [sp, #168]	; 0xa8
   13600:	str	r4, [sp, #204]	; 0xcc
   13604:	adc	r8, r9, r2
   13608:	adds	r3, r3, sl
   1360c:	eor	r5, r3, r1
   13610:	ldr	r1, [sp, #208]	; 0xd0
   13614:	eor	r9, lr, ip
   13618:	adc	r8, r8, r6
   1361c:	eor	ip, r4, r7
   13620:	ldr	lr, [sp, #136]	; 0x88
   13624:	str	ip, [sp, #136]	; 0x88
   13628:	ldr	ip, [sp, #68]	; 0x44
   1362c:	eor	r2, r8, r1
   13630:	str	r9, [sp, #152]	; 0x98
   13634:	adds	r1, lr, r2
   13638:	ldr	lr, [sp, #140]	; 0x8c
   1363c:	eor	r7, r1, sl
   13640:	lsr	r9, r7, #24
   13644:	adc	r4, lr, r5
   13648:	adds	r3, r3, ip
   1364c:	ldr	ip, [sp, #72]	; 0x48
   13650:	eor	r6, r6, r4
   13654:	lsr	fp, r6, #24
   13658:	ldr	lr, [sp, #172]	; 0xac
   1365c:	orr	r6, r9, r6, lsl #8
   13660:	orr	fp, fp, r7, lsl #8
   13664:	ldr	r7, [sp, #156]	; 0x9c
   13668:	adc	ip, r8, ip
   1366c:	adds	r3, r3, r6
   13670:	adc	sl, ip, fp
   13674:	eor	r2, r2, r3
   13678:	eor	r5, r5, sl
   1367c:	str	r3, [sp, #208]	; 0xd0
   13680:	lsr	ip, r2, #16
   13684:	lsr	r3, r5, #16
   13688:	str	sl, [sp, #212]	; 0xd4
   1368c:	orr	r9, ip, r5, lsl #16
   13690:	ldr	sl, [sp, #80]	; 0x50
   13694:	orr	r3, r3, r2, lsl #16
   13698:	ldr	r2, [sp, #76]	; 0x4c
   1369c:	adds	r1, r1, r9
   136a0:	adc	r4, r4, r3
   136a4:	eor	r6, r1, r6
   136a8:	ldr	r5, [sp, #220]	; 0xdc
   136ac:	str	r3, [sp, #248]	; 0xf8
   136b0:	str	r6, [sp, #156]	; 0x9c
   136b4:	adds	r3, lr, r2
   136b8:	ldr	r6, [sp, #144]	; 0x90
   136bc:	str	r9, [sp, #164]	; 0xa4
   136c0:	ldr	lr, [sp, #176]	; 0xb0
   136c4:	ldr	r9, [sp, #224]	; 0xe0
   136c8:	adc	r8, lr, sl
   136cc:	ldr	lr, [sp, #216]	; 0xd8
   136d0:	adds	r3, r3, lr
   136d4:	adc	r8, r8, r5
   136d8:	eor	r9, r3, r9
   136dc:	eor	r7, r8, r7
   136e0:	adds	r2, r6, r7
   136e4:	eor	r6, r4, fp
   136e8:	eor	sl, r2, lr
   136ec:	str	r6, [sp, #144]	; 0x90
   136f0:	ldr	r6, [sp, #148]	; 0x94
   136f4:	ldr	lr, [sp, #88]	; 0x58
   136f8:	adc	ip, r6, r9
   136fc:	ldr	r6, [sp, #84]	; 0x54
   13700:	eor	fp, ip, r5
   13704:	lsr	r5, sl, #24
   13708:	orr	r5, r5, fp, lsl #8
   1370c:	adds	r3, r3, r6
   13710:	lsr	r6, fp, #24
   13714:	adc	r8, r8, lr
   13718:	adds	fp, r3, r5
   1371c:	ldr	r3, [sp, #76]	; 0x4c
   13720:	orr	r6, r6, sl, lsl #8
   13724:	eor	r7, r7, fp
   13728:	lsr	sl, r7, #16
   1372c:	str	fp, [sp, #148]	; 0x94
   13730:	adc	lr, r8, r6
   13734:	eor	r9, r9, lr
   13738:	str	lr, [sp, #172]	; 0xac
   1373c:	lsr	fp, r9, #16
   13740:	ldr	lr, [sp, #184]	; 0xb8
   13744:	orr	sl, sl, r9, lsl #16
   13748:	orr	fp, fp, r7, lsl #16
   1374c:	adds	r2, r2, sl
   13750:	ldr	r7, [sp, #80]	; 0x50
   13754:	adc	ip, ip, fp
   13758:	eor	r5, r5, r2
   1375c:	eor	r6, r6, ip
   13760:	lsl	r9, r5, #1
   13764:	adds	r3, lr, r3
   13768:	ldr	lr, [sp, #188]	; 0xbc
   1376c:	lsl	r8, r6, #1
   13770:	orr	r6, r9, r6, lsr #31
   13774:	orr	r5, r8, r5, lsr #31
   13778:	ldr	r9, [sp, #44]	; 0x2c
   1377c:	adc	r7, lr, r7
   13780:	ldr	lr, [sp, #244]	; 0xf4
   13784:	adds	r3, r3, r6
   13788:	adc	r7, r7, r5
   1378c:	eor	r0, r0, r7
   13790:	adds	r1, r1, r0
   13794:	eor	r6, r6, r1
   13798:	str	r0, [sp, #140]	; 0x8c
   1379c:	eor	lr, lr, r3
   137a0:	ldr	r0, [sp, #48]	; 0x30
   137a4:	lsr	r8, r6, #24
   137a8:	adc	r4, r4, lr
   137ac:	adds	r3, r9, r3
   137b0:	eor	r5, r5, r4
   137b4:	lsr	r9, r5, #24
   137b8:	orr	r5, r8, r5, lsl #8
   137bc:	adc	r7, r0, r7
   137c0:	orr	r6, r9, r6, lsl #8
   137c4:	adds	r0, r3, r5
   137c8:	ldr	r3, [sp, #140]	; 0x8c
   137cc:	adc	r8, r7, r6
   137d0:	eor	lr, lr, r8
   137d4:	str	r0, [sp, #176]	; 0xb0
   137d8:	str	r8, [sp, #188]	; 0xbc
   137dc:	ldr	r8, [sp, #240]	; 0xf0
   137e0:	eor	r3, r3, r0
   137e4:	lsr	r7, r3, #16
   137e8:	mov	r0, r3
   137ec:	lsr	r3, lr, #16
   137f0:	orr	lr, r7, lr, lsl #16
   137f4:	ldr	r7, [sp, #248]	; 0xf8
   137f8:	orr	r0, r3, r0, lsl #16
   137fc:	adds	r1, r1, lr
   13800:	mov	r9, r1
   13804:	adc	r1, r4, r0
   13808:	eor	r5, r9, r5
   1380c:	str	r1, [sp, #140]	; 0x8c
   13810:	str	lr, [sp, #244]	; 0xf4
   13814:	ldr	lr, [sp, #108]	; 0x6c
   13818:	str	r0, [sp, #252]	; 0xfc
   1381c:	ldr	r0, [sp, #112]	; 0x70
   13820:	ldr	r1, [sp, #160]	; 0xa0
   13824:	str	r5, [sp, #160]	; 0xa0
   13828:	ldr	r5, [sp, #140]	; 0x8c
   1382c:	adds	r3, lr, r1
   13830:	ldr	lr, [sp, #200]	; 0xc8
   13834:	str	r9, [sp, #200]	; 0xc8
   13838:	ldr	r1, [sp, #236]	; 0xec
   1383c:	eor	r6, r5, r6
   13840:	adc	r0, r0, lr
   13844:	ldr	lr, [sp, #164]	; 0xa4
   13848:	str	r6, [sp, #164]	; 0xa4
   1384c:	adds	r3, r3, r1
   13850:	adc	r0, r0, r8
   13854:	eor	r4, r0, r7
   13858:	ldr	r7, [sp, #28]
   1385c:	adds	r2, r2, r4
   13860:	eor	lr, r3, lr
   13864:	adc	ip, ip, lr
   13868:	eor	r6, r2, r1
   1386c:	eor	r5, ip, r8
   13870:	lsr	r1, r6, #24
   13874:	lsr	r8, r5, #24
   13878:	adds	r7, r7, r3
   1387c:	ldr	r3, [sp, #32]
   13880:	orr	r1, r1, r5, lsl #8
   13884:	orr	r8, r8, r6, lsl #8
   13888:	adc	r0, r3, r0
   1388c:	adds	r6, r7, r1
   13890:	adc	r5, r0, r8
   13894:	eor	r4, r4, r6
   13898:	eor	lr, lr, r5
   1389c:	lsr	r0, r4, #16
   138a0:	str	r6, [sp, #216]	; 0xd8
   138a4:	lsr	r3, lr, #16
   138a8:	str	r5, [sp, #220]	; 0xdc
   138ac:	orr	r0, r0, lr, lsl #16
   138b0:	ldr	r5, [sp, #136]	; 0x88
   138b4:	orr	r4, r3, r4, lsl #16
   138b8:	adds	r2, r2, r0
   138bc:	ldr	r6, [sp, #152]	; 0x98
   138c0:	mov	r3, r4
   138c4:	str	r0, [sp, #236]	; 0xec
   138c8:	mov	r0, r2
   138cc:	adc	ip, ip, r3
   138d0:	ldr	r4, [sp, #208]	; 0xd0
   138d4:	eor	r1, r1, r0
   138d8:	mov	r7, ip
   138dc:	lsl	lr, r5, #1
   138e0:	str	r0, [sp, #208]	; 0xd0
   138e4:	ldr	ip, [sp, #36]	; 0x24
   138e8:	eor	r8, r8, r7
   138ec:	orr	lr, lr, r6, lsr #31
   138f0:	str	r3, [sp, #240]	; 0xf0
   138f4:	lsl	r2, r6, #1
   138f8:	ldr	r6, [sp, #40]	; 0x28
   138fc:	orr	r2, r2, r5, lsr #31
   13900:	adds	r3, ip, r4
   13904:	ldr	r4, [sp, #212]	; 0xd4
   13908:	str	r7, [sp, #212]	; 0xd4
   1390c:	ldr	r7, [sp, #92]	; 0x5c
   13910:	adc	ip, r6, r4
   13914:	adds	r3, r3, r2
   13918:	ldr	r6, [sp, #84]	; 0x54
   1391c:	adc	ip, ip, lr
   13920:	eor	sl, sl, r3
   13924:	ldr	r4, [r7, #4]
   13928:	eor	fp, fp, ip
   1392c:	str	r4, [sp, #184]	; 0xb8
   13930:	ldr	r4, [sp, #192]	; 0xc0
   13934:	adds	r0, r4, fp
   13938:	ldr	r4, [sp, #196]	; 0xc4
   1393c:	eor	r2, r2, r0
   13940:	adc	r5, r4, sl
   13944:	adds	r3, r6, r3
   13948:	ldr	r6, [sp, #88]	; 0x58
   1394c:	eor	lr, lr, r5
   13950:	lsr	r4, r2, #24
   13954:	lsr	r9, lr, #24
   13958:	orr	r4, r4, lr, lsl #8
   1395c:	orr	r9, r9, r2, lsl #8
   13960:	adc	ip, r6, ip
   13964:	adds	r2, r3, r4
   13968:	lsl	r6, r8, #1
   1396c:	adc	ip, ip, r9
   13970:	eor	fp, fp, r2
   13974:	mov	lr, ip
   13978:	str	r2, [sp, #192]	; 0xc0
   1397c:	lsr	r2, fp, #16
   13980:	eor	sl, sl, lr
   13984:	ldr	ip, [sp, #68]	; 0x44
   13988:	orr	r6, r6, r1, lsr #31
   1398c:	lsr	r3, sl, #16
   13990:	str	lr, [sp, #196]	; 0xc4
   13994:	orr	sl, r2, sl, lsl #16
   13998:	orr	fp, r3, fp, lsl #16
   1399c:	ldr	r3, [sp, #172]	; 0xac
   139a0:	adds	r0, r0, sl
   139a4:	str	sl, [sp, #248]	; 0xf8
   139a8:	adc	r5, r5, fp
   139ac:	mov	r2, fp
   139b0:	ldr	sl, [sp, #148]	; 0x94
   139b4:	eor	r4, r0, r4
   139b8:	ldr	fp, [sp, #156]	; 0x9c
   139bc:	str	r2, [sp, #256]	; 0x100
   139c0:	str	r4, [sp, #148]	; 0x94
   139c4:	eor	r4, r5, r9
   139c8:	adds	r2, ip, sl
   139cc:	ldr	sl, [sp, #72]	; 0x48
   139d0:	str	r4, [sp, #152]	; 0x98
   139d4:	ldr	ip, [sp, #144]	; 0x90
   139d8:	lsl	lr, fp, #1
   139dc:	ldr	r4, [sp, #228]	; 0xe4
   139e0:	adc	r7, sl, r3
   139e4:	lsl	r3, r1, #1
   139e8:	ldr	r1, [sp, #168]	; 0xa8
   139ec:	orr	lr, lr, ip, lsr #31
   139f0:	lsl	ip, ip, #1
   139f4:	adds	r2, r2, lr
   139f8:	orr	r3, r3, r8, lsr #31
   139fc:	eor	r9, r2, r4
   13a00:	ldr	r4, [sp, #232]	; 0xe8
   13a04:	orr	ip, ip, fp, lsr #31
   13a08:	ldr	fp, [sp, #204]	; 0xcc
   13a0c:	adc	r7, r7, ip
   13a10:	eor	r4, r7, r4
   13a14:	adds	r1, r1, r4
   13a18:	adc	r8, fp, r9
   13a1c:	ldr	fp, [sp, #124]	; 0x7c
   13a20:	eor	lr, lr, r1
   13a24:	eor	ip, ip, r8
   13a28:	lsr	sl, ip, #24
   13a2c:	adds	r2, fp, r2
   13a30:	lsr	fp, lr, #24
   13a34:	orr	lr, sl, lr, lsl #8
   13a38:	str	r2, [sp, #136]	; 0x88
   13a3c:	orr	ip, fp, ip, lsl #8
   13a40:	ldr	r2, [sp, #128]	; 0x80
   13a44:	adc	r7, r2, r7
   13a48:	ldr	r2, [sp, #136]	; 0x88
   13a4c:	adds	fp, r2, ip
   13a50:	mov	sl, fp
   13a54:	adc	fp, r7, lr
   13a58:	eor	r9, r9, fp
   13a5c:	eor	r4, r4, sl
   13a60:	lsr	r2, r9, #16
   13a64:	str	sl, [sp, #204]	; 0xcc
   13a68:	lsr	r7, r4, #16
   13a6c:	ldr	sl, [sp, #8]
   13a70:	orr	r4, r2, r4, lsl #16
   13a74:	orr	r7, r7, r9, lsl #16
   13a78:	ldr	r9, [sp, #4]
   13a7c:	ldr	r2, [sp, #176]	; 0xb0
   13a80:	adds	r1, r1, r7
   13a84:	adc	r8, r8, r4
   13a88:	eor	ip, ip, r1
   13a8c:	eor	lr, lr, r8
   13a90:	str	lr, [sp, #136]	; 0x88
   13a94:	adds	r2, r9, r2
   13a98:	ldr	r9, [sp, #188]	; 0xbc
   13a9c:	adc	r9, sl, r9
   13aa0:	adds	r2, r2, r3
   13aa4:	adc	r9, r9, r6
   13aa8:	eor	sl, r2, r7
   13aac:	ldr	r7, [sp, #60]	; 0x3c
   13ab0:	eor	r4, r4, r9
   13ab4:	adds	r0, r0, r4
   13ab8:	adc	r5, r5, sl
   13abc:	eor	r3, r3, r0
   13ac0:	eor	r6, r6, r5
   13ac4:	lsr	lr, r6, #24
   13ac8:	adds	r2, r7, r2
   13acc:	lsr	r7, r3, #24
   13ad0:	str	lr, [sp, #144]	; 0x90
   13ad4:	orr	r6, r7, r6, lsl #8
   13ad8:	ldr	lr, [sp, #64]	; 0x40
   13adc:	ldr	r7, [sp, #144]	; 0x90
   13ae0:	adc	r9, lr, r9
   13ae4:	adds	r2, r2, r6
   13ae8:	eor	r4, r4, r2
   13aec:	orr	r3, r7, r3, lsl #8
   13af0:	str	r2, [sp, #188]	; 0xbc
   13af4:	adc	r9, r9, r3
   13af8:	eor	r7, r9, sl
   13afc:	ldr	sl, [sp, #148]	; 0x94
   13b00:	str	r9, [sp, #224]	; 0xe0
   13b04:	lsr	r9, r4, #16
   13b08:	lsr	r2, r7, #16
   13b0c:	orr	r7, r9, r7, lsl #16
   13b10:	ldr	r9, [sp, #152]	; 0x98
   13b14:	orr	r4, r2, r4, lsl #16
   13b18:	adds	r0, r0, r7
   13b1c:	mov	lr, r4
   13b20:	lsl	r4, sl, #1
   13b24:	str	r0, [sp, #144]	; 0x90
   13b28:	adc	r0, r5, lr
   13b2c:	ldr	r5, [sp, #100]	; 0x64
   13b30:	lsl	r2, r9, #1
   13b34:	str	r0, [sp, #148]	; 0x94
   13b38:	str	lr, [sp, #260]	; 0x104
   13b3c:	orr	r2, r2, sl, lsr #31
   13b40:	ldr	r0, [sp, #96]	; 0x60
   13b44:	str	r7, [sp, #232]	; 0xe8
   13b48:	ldr	lr, [sp, #216]	; 0xd8
   13b4c:	adds	r7, r0, lr
   13b50:	ldr	r0, [sp, #220]	; 0xdc
   13b54:	adc	r0, r5, r0
   13b58:	ldr	r5, [sp, #144]	; 0x90
   13b5c:	eor	r6, r5, r6
   13b60:	orr	r5, r4, r9, lsr #31
   13b64:	str	r6, [sp, #156]	; 0x9c
   13b68:	adds	r7, r7, r5
   13b6c:	ldr	r6, [sp, #148]	; 0x94
   13b70:	ldr	sl, [sp, #104]	; 0x68
   13b74:	ldr	lr, [sp, #244]	; 0xf4
   13b78:	eor	r3, r6, r3
   13b7c:	str	r3, [sp, #168]	; 0xa8
   13b80:	adc	r3, r0, r2
   13b84:	eor	r4, r7, lr
   13b88:	ldr	lr, [sp, #252]	; 0xfc
   13b8c:	eor	r0, r3, lr
   13b90:	ldr	lr, [sp, #192]	; 0xc0
   13b94:	adds	r1, r1, r0
   13b98:	adc	r8, r8, r4
   13b9c:	eor	r5, r5, r1
   13ba0:	eor	r9, r8, r2
   13ba4:	ldr	r2, [sp, #12]
   13ba8:	lsr	r6, r9, #24
   13bac:	adds	r7, r2, r7
   13bb0:	lsr	r2, r5, #24
   13bb4:	orr	r5, r6, r5, lsl #8
   13bb8:	adc	r3, sl, r3
   13bbc:	orr	r2, r2, r9, lsl #8
   13bc0:	adds	r6, r7, r2
   13bc4:	adc	r3, r3, r5
   13bc8:	eor	r0, r0, r6
   13bcc:	eor	r4, r4, r3
   13bd0:	str	r6, [sp, #216]	; 0xd8
   13bd4:	lsr	r6, r0, #16
   13bd8:	str	r3, [sp, #220]	; 0xdc
   13bdc:	lsr	r3, r4, #16
   13be0:	orr	r4, r6, r4, lsl #16
   13be4:	orr	r0, r3, r0, lsl #16
   13be8:	ldr	r3, [sp, #136]	; 0x88
   13bec:	adds	r1, r1, r4
   13bf0:	lsl	r6, ip, #1
   13bf4:	mov	sl, r1
   13bf8:	adc	r1, r8, r0
   13bfc:	ldr	r8, [sp, #132]	; 0x84
   13c00:	mov	r9, r1
   13c04:	ldr	r1, [sp, #52]	; 0x34
   13c08:	lsl	r7, r3, #1
   13c0c:	str	sl, [sp, #192]	; 0xc0
   13c10:	orr	ip, r7, ip, lsr #31
   13c14:	adds	r3, r1, lr
   13c18:	ldr	r1, [sp, #56]	; 0x38
   13c1c:	ldr	lr, [sp, #196]	; 0xc4
   13c20:	str	r9, [sp, #196]	; 0xc4
   13c24:	adc	r1, r1, lr
   13c28:	eor	lr, sl, r2
   13c2c:	ldr	sl, [sp, #24]
   13c30:	ldr	r2, [sp, #136]	; 0x88
   13c34:	str	lr, [sp, #172]	; 0xac
   13c38:	orr	lr, r6, r2, lsr #31
   13c3c:	eor	r2, r9, r5
   13c40:	ldr	r5, [sp, #200]	; 0xc8
   13c44:	str	r2, [sp, #176]	; 0xb0
   13c48:	adds	r3, r3, lr
   13c4c:	ldr	r2, [sp, #236]	; 0xec
   13c50:	adc	r1, r1, ip
   13c54:	eor	r7, r3, r2
   13c58:	ldr	r2, [sp, #240]	; 0xf0
   13c5c:	eor	r6, r1, r2
   13c60:	adds	r2, r5, r6
   13c64:	ldr	r5, [sp, #140]	; 0x8c
   13c68:	eor	lr, lr, r2
   13c6c:	lsr	r9, lr, #24
   13c70:	adc	r5, r5, r7
   13c74:	adds	r3, r8, r3
   13c78:	eor	ip, ip, r5
   13c7c:	adc	r1, sl, r1
   13c80:	ldr	sl, [sp, #164]	; 0xa4
   13c84:	lsr	r8, ip, #24
   13c88:	orr	ip, r9, ip, lsl #8
   13c8c:	orr	lr, r8, lr, lsl #8
   13c90:	adds	r3, r3, ip
   13c94:	adc	r1, r1, lr
   13c98:	eor	r6, r6, r3
   13c9c:	lsl	r9, sl, #1
   13ca0:	mov	r8, r1
   13ca4:	lsr	r1, r6, #16
   13ca8:	str	r3, [sp, #200]	; 0xc8
   13cac:	eor	r7, r7, r8
   13cb0:	orr	r1, r1, r7, lsl #16
   13cb4:	str	r8, [sp, #228]	; 0xe4
   13cb8:	lsr	r3, r7, #16
   13cbc:	mov	r8, r1
   13cc0:	orr	r1, r3, r6, lsl #16
   13cc4:	adds	r2, r2, r8
   13cc8:	str	r8, [sp, #236]	; 0xec
   13ccc:	mov	r3, r1
   13cd0:	ldr	r8, [sp, #160]	; 0xa0
   13cd4:	adc	r5, r5, r3
   13cd8:	str	r3, [sp, #240]	; 0xf0
   13cdc:	ldr	r3, [sp, #116]	; 0x74
   13ce0:	ldr	r1, [sp, #204]	; 0xcc
   13ce4:	lsl	r6, r8, #1
   13ce8:	orr	r9, r9, r8, lsr #31
   13cec:	orr	r6, r6, sl, lsr #31
   13cf0:	adds	r1, r3, r1
   13cf4:	ldr	r3, [sp, #120]	; 0x78
   13cf8:	str	r5, [sp, #136]	; 0x88
   13cfc:	adc	r7, r3, fp
   13d00:	eor	fp, r2, ip
   13d04:	adds	r1, r1, r6
   13d08:	str	fp, [sp, #160]	; 0xa0
   13d0c:	eor	fp, r5, lr
   13d10:	adc	ip, r7, r9
   13d14:	ldr	lr, [sp, #248]	; 0xf8
   13d18:	str	fp, [sp, #164]	; 0xa4
   13d1c:	eor	fp, r1, lr
   13d20:	ldr	lr, [sp, #256]	; 0x100
   13d24:	eor	sl, ip, lr
   13d28:	ldr	lr, [sp, #208]	; 0xd0
   13d2c:	adds	r3, lr, sl
   13d30:	ldr	lr, [sp, #212]	; 0xd4
   13d34:	eor	r7, r3, r6
   13d38:	ldr	r6, [sp, #16]
   13d3c:	adc	lr, lr, fp
   13d40:	eor	r9, r9, lr
   13d44:	adds	r5, r6, r1
   13d48:	ldr	r1, [sp, #20]
   13d4c:	lsr	r6, r7, #24
   13d50:	lsr	r8, r9, #24
   13d54:	orr	r6, r6, r9, lsl #8
   13d58:	orr	r7, r8, r7, lsl #8
   13d5c:	adc	ip, r1, ip
   13d60:	adds	r5, r5, r6
   13d64:	adc	ip, ip, r7
   13d68:	eor	sl, sl, r5
   13d6c:	mov	r9, ip
   13d70:	lsr	ip, sl, #16
   13d74:	str	r5, [sp, #204]	; 0xcc
   13d78:	eor	fp, fp, r9
   13d7c:	ldr	r5, [sp, #224]	; 0xe0
   13d80:	lsr	r1, fp, #16
   13d84:	str	r9, [sp, #208]	; 0xd0
   13d88:	orr	fp, ip, fp, lsl #16
   13d8c:	ldr	ip, [sp, #188]	; 0xbc
   13d90:	orr	sl, r1, sl, lsl #16
   13d94:	ldr	r1, [sp, #52]	; 0x34
   13d98:	adds	r3, r3, fp
   13d9c:	adc	lr, lr, sl
   13da0:	eor	r6, r6, r3
   13da4:	eor	r7, r7, lr
   13da8:	lsl	r9, r6, #1
   13dac:	lsl	r8, r7, #1
   13db0:	orr	r7, r9, r7, lsr #31
   13db4:	ldr	r9, [sp, #28]
   13db8:	adds	r1, r1, ip
   13dbc:	orr	r6, r8, r6, lsr #31
   13dc0:	ldr	ip, [sp, #56]	; 0x38
   13dc4:	adc	ip, ip, r5
   13dc8:	ldr	r5, [sp, #136]	; 0x88
   13dcc:	adds	r1, r1, r7
   13dd0:	adc	ip, ip, r6
   13dd4:	eor	r4, r4, r1
   13dd8:	eor	r0, r0, ip
   13ddc:	adds	r2, r2, r0
   13de0:	str	r4, [sp, #136]	; 0x88
   13de4:	eor	r7, r7, r2
   13de8:	adc	r5, r5, r4
   13dec:	ldr	r4, [sp, #32]
   13df0:	lsr	r8, r7, #24
   13df4:	eor	r6, r6, r5
   13df8:	adds	r1, r9, r1
   13dfc:	lsr	r9, r6, #24
   13e00:	orr	r6, r8, r6, lsl #8
   13e04:	ldr	r8, [sp, #156]	; 0x9c
   13e08:	orr	r7, r9, r7, lsl #8
   13e0c:	adc	ip, r4, ip
   13e10:	adds	r4, r1, r6
   13e14:	ldr	r1, [sp, #136]	; 0x88
   13e18:	adc	ip, ip, r7
   13e1c:	eor	r0, r0, r4
   13e20:	str	r4, [sp, #188]	; 0xbc
   13e24:	str	ip, [sp, #212]	; 0xd4
   13e28:	ldr	r9, [sp, #168]	; 0xa8
   13e2c:	eor	r1, r1, ip
   13e30:	lsr	ip, r0, #16
   13e34:	mov	r4, r1
   13e38:	lsr	r1, r1, #16
   13e3c:	orr	r4, ip, r4, lsl #16
   13e40:	orr	r0, r1, r0, lsl #16
   13e44:	mov	ip, r4
   13e48:	lsl	r1, r9, #1
   13e4c:	adds	r2, r2, ip
   13e50:	orr	r1, r1, r8, lsr #31
   13e54:	str	r0, [sp, #152]	; 0x98
   13e58:	ldr	r4, [sp, #152]	; 0x98
   13e5c:	str	r2, [sp, #136]	; 0x88
   13e60:	lsl	r2, r8, #1
   13e64:	str	ip, [sp, #244]	; 0xf4
   13e68:	orr	r2, r2, r9, lsr #31
   13e6c:	adc	r4, r5, r4
   13e70:	ldr	r5, [sp, #216]	; 0xd8
   13e74:	str	r4, [sp, #140]	; 0x8c
   13e78:	ldr	r4, [sp, #60]	; 0x3c
   13e7c:	adds	r0, r4, r5
   13e80:	ldr	r4, [sp, #64]	; 0x40
   13e84:	ldr	r5, [sp, #220]	; 0xdc
   13e88:	adc	ip, r4, r5
   13e8c:	adds	r0, r0, r2
   13e90:	ldr	r4, [sp, #96]	; 0x60
   13e94:	adc	ip, ip, r1
   13e98:	ldr	r5, [sp, #136]	; 0x88
   13e9c:	eor	r5, r5, r6
   13ea0:	ldr	r6, [sp, #100]	; 0x64
   13ea4:	str	r5, [sp, #156]	; 0x9c
   13ea8:	ldr	r5, [sp, #140]	; 0x8c
   13eac:	eor	r7, r5, r7
   13eb0:	ldr	r5, [sp, #236]	; 0xec
   13eb4:	str	r7, [sp, #168]	; 0xa8
   13eb8:	eor	r8, r0, r5
   13ebc:	ldr	r5, [sp, #240]	; 0xf0
   13ec0:	eor	r7, ip, r5
   13ec4:	adds	r3, r3, r7
   13ec8:	eor	r2, r2, r3
   13ecc:	adc	lr, lr, r8
   13ed0:	eor	r1, r1, lr
   13ed4:	adds	r0, r4, r0
   13ed8:	lsr	r4, r2, #24
   13edc:	lsr	r5, r1, #24
   13ee0:	adc	ip, r6, ip
   13ee4:	orr	r4, r4, r1, lsl #8
   13ee8:	orr	r5, r5, r2, lsl #8
   13eec:	adds	r2, r0, r4
   13ef0:	ldr	r0, [sp, #172]	; 0xac
   13ef4:	adc	r1, ip, r5
   13ef8:	eor	r7, r7, r2
   13efc:	eor	r8, r8, r1
   13f00:	str	r2, [sp, #216]	; 0xd8
   13f04:	lsr	r2, r7, #16
   13f08:	lsr	r6, r8, #16
   13f0c:	ldr	ip, [sp, #116]	; 0x74
   13f10:	orr	r8, r2, r8, lsl #16
   13f14:	str	r1, [sp, #220]	; 0xdc
   13f18:	orr	r7, r6, r7, lsl #16
   13f1c:	adds	r6, r3, r8
   13f20:	lsl	r2, r0, #1
   13f24:	adc	lr, lr, r7
   13f28:	mov	r9, r7
   13f2c:	ldr	r7, [sp, #176]	; 0xb0
   13f30:	eor	r5, r5, lr
   13f34:	eor	r4, r4, r6
   13f38:	str	r6, [sp, #172]	; 0xac
   13f3c:	strd	r8, [sp, #236]	; 0xec
   13f40:	mov	r9, lr
   13f44:	ldr	r8, [sp, #104]	; 0x68
   13f48:	str	r9, [sp, #176]	; 0xb0
   13f4c:	ldr	lr, [sp, #200]	; 0xc8
   13f50:	lsl	r1, r7, #1
   13f54:	orr	r2, r2, r7, lsr #31
   13f58:	orr	r1, r1, r0, lsr #31
   13f5c:	ldr	r0, [sp, #228]	; 0xe4
   13f60:	adds	r3, ip, lr
   13f64:	ldr	ip, [sp, #120]	; 0x78
   13f68:	ldr	lr, [sp, #144]	; 0x90
   13f6c:	adc	ip, ip, r0
   13f70:	adds	r3, r3, r2
   13f74:	adc	ip, ip, r1
   13f78:	eor	fp, fp, r3
   13f7c:	eor	sl, sl, ip
   13f80:	adds	r0, lr, sl
   13f84:	ldr	lr, [sp, #148]	; 0x94
   13f88:	eor	r2, r2, r0
   13f8c:	adc	r6, lr, fp
   13f90:	ldr	lr, [sp, #12]
   13f94:	eor	r1, r1, r6
   13f98:	lsr	r9, r1, #24
   13f9c:	orr	r9, r9, r2, lsl #8
   13fa0:	adds	r3, lr, r3
   13fa4:	lsr	lr, r2, #24
   13fa8:	adc	ip, r8, ip
   13fac:	orr	lr, lr, r1, lsl #8
   13fb0:	ldr	r1, [sp, #160]	; 0xa0
   13fb4:	adds	r3, r3, lr
   13fb8:	eor	sl, sl, r3
   13fbc:	adc	r7, ip, r9
   13fc0:	lsr	r2, sl, #16
   13fc4:	eor	fp, fp, r7
   13fc8:	str	r3, [sp, #200]	; 0xc8
   13fcc:	lsr	r3, fp, #16
   13fd0:	str	r7, [sp, #224]	; 0xe0
   13fd4:	orr	fp, r2, fp, lsl #16
   13fd8:	ldr	r2, [sp, #204]	; 0xcc
   13fdc:	orr	r3, r3, sl, lsl #16
   13fe0:	adds	r0, r0, fp
   13fe4:	lsl	ip, r1, #1
   13fe8:	str	fp, [sp, #228]	; 0xe4
   13fec:	adc	r6, r6, r3
   13ff0:	eor	lr, r0, lr
   13ff4:	ldr	fp, [sp, #84]	; 0x54
   13ff8:	lsl	r7, r5, #1
   13ffc:	str	r3, [sp, #248]	; 0xf8
   14000:	ldr	r8, [sp, #208]	; 0xd0
   14004:	orr	r7, r7, r4, lsr #31
   14008:	str	lr, [sp, #160]	; 0xa0
   1400c:	ldr	r3, [sp, #88]	; 0x58
   14010:	adds	r2, fp, r2
   14014:	ldr	fp, [sp, #164]	; 0xa4
   14018:	adc	r8, r3, r8
   1401c:	lsl	r3, r4, #1
   14020:	lsl	lr, fp, #1
   14024:	orr	ip, ip, fp, lsr #31
   14028:	eor	fp, r6, r9
   1402c:	orr	lr, lr, r1, lsr #31
   14030:	ldr	r1, [sp, #232]	; 0xe8
   14034:	adds	r2, r2, ip
   14038:	orr	r3, r3, r5, lsr #31
   1403c:	str	fp, [sp, #164]	; 0xa4
   14040:	adc	r8, r8, lr
   14044:	ldr	fp, [sp, #68]	; 0x44
   14048:	ldr	r5, [sp, #192]	; 0xc0
   1404c:	eor	r9, r2, r1
   14050:	ldr	r1, [sp, #260]	; 0x104
   14054:	eor	r4, r8, r1
   14058:	adds	r1, r5, r4
   1405c:	ldr	r5, [sp, #196]	; 0xc4
   14060:	eor	ip, ip, r1
   14064:	adc	r5, r5, r9
   14068:	adds	r2, fp, r2
   1406c:	lsr	fp, ip, #24
   14070:	eor	lr, lr, r5
   14074:	str	r5, [sp, #144]	; 0x90
   14078:	lsr	sl, lr, #24
   1407c:	ldr	r5, [sp, #72]	; 0x48
   14080:	orr	lr, fp, lr, lsl #8
   14084:	orr	ip, sl, ip, lsl #8
   14088:	adc	r8, r5, r8
   1408c:	adds	sl, r2, lr
   14090:	ldr	r5, [sp, #144]	; 0x90
   14094:	adc	fp, r8, ip
   14098:	eor	r4, r4, sl
   1409c:	eor	r9, r9, fp
   140a0:	lsr	r8, r4, #16
   140a4:	str	sl, [sp, #192]	; 0xc0
   140a8:	lsr	r2, r9, #16
   140ac:	orr	r8, r8, r9, lsl #16
   140b0:	ldr	r9, [sp, #44]	; 0x2c
   140b4:	orr	r4, r2, r4, lsl #16
   140b8:	adds	r1, r1, r8
   140bc:	adc	r5, r5, r4
   140c0:	eor	lr, lr, r1
   140c4:	str	r5, [sp, #144]	; 0x90
   140c8:	ldr	r5, [sp, #188]	; 0xbc
   140cc:	adds	r2, r9, r5
   140d0:	ldr	r9, [sp, #48]	; 0x30
   140d4:	ldr	r5, [sp, #212]	; 0xd4
   140d8:	adc	r9, r9, r5
   140dc:	adds	r2, r2, r3
   140e0:	ldr	r5, [sp, #144]	; 0x90
   140e4:	adc	r9, r9, r7
   140e8:	eor	sl, r2, r8
   140ec:	eor	r4, r4, r9
   140f0:	ldr	r8, [sp, #76]	; 0x4c
   140f4:	adds	r0, r0, r4
   140f8:	adc	r6, r6, sl
   140fc:	eor	r3, r3, r0
   14100:	eor	r7, r7, r6
   14104:	eor	ip, ip, r5
   14108:	lsr	r5, r7, #24
   1410c:	adds	r2, r8, r2
   14110:	lsr	r8, r3, #24
   14114:	str	r5, [sp, #148]	; 0x94
   14118:	orr	r7, r8, r7, lsl #8
   1411c:	ldr	r5, [sp, #80]	; 0x50
   14120:	adc	r9, r5, r9
   14124:	ldr	r5, [sp, #148]	; 0x94
   14128:	adds	r2, r2, r7
   1412c:	eor	r4, r4, r2
   14130:	str	r2, [sp, #188]	; 0xbc
   14134:	orr	r3, r5, r3, lsl #8
   14138:	ldr	r5, [sp, #164]	; 0xa4
   1413c:	adc	r9, r9, r3
   14140:	eor	r8, r9, sl
   14144:	lsr	r2, r8, #16
   14148:	str	r9, [sp, #196]	; 0xc4
   1414c:	lsr	r9, r4, #16
   14150:	orr	r4, r2, r4, lsl #16
   14154:	orr	sl, r9, r8, lsl #16
   14158:	mov	r9, r4
   1415c:	lsl	r8, r5, #1
   14160:	adds	r0, r0, sl
   14164:	adc	r6, r6, r9
   14168:	str	r0, [sp, #148]	; 0x94
   1416c:	str	sl, [sp, #232]	; 0xe8
   14170:	str	r9, [sp, #252]	; 0xfc
   14174:	mov	r9, r6
   14178:	ldr	r0, [sp, #16]
   1417c:	ldr	sl, [sp, #160]	; 0xa0
   14180:	ldr	r6, [sp, #20]
   14184:	str	r9, [sp, #204]	; 0xcc
   14188:	ldr	r2, [sp, #216]	; 0xd8
   1418c:	lsl	r4, sl, #1
   14190:	orr	r8, r8, sl, lsr #31
   14194:	mov	sl, r5
   14198:	ldr	r5, [sp, #144]	; 0x90
   1419c:	adds	r0, r0, r2
   141a0:	ldr	r2, [sp, #220]	; 0xdc
   141a4:	adc	r2, r6, r2
   141a8:	ldr	r6, [sp, #148]	; 0x94
   141ac:	eor	r6, r6, r7
   141b0:	ldr	r7, [sp, #124]	; 0x7c
   141b4:	str	r6, [sp, #160]	; 0xa0
   141b8:	orr	r6, r4, sl, lsr #31
   141bc:	mov	r4, r9
   141c0:	eor	r4, r4, r3
   141c4:	ldr	sl, [sp, #128]	; 0x80
   141c8:	adds	r3, r0, r6
   141cc:	ldr	r0, [sp, #244]	; 0xf4
   141d0:	adc	r2, r2, r8
   141d4:	str	r4, [sp, #164]	; 0xa4
   141d8:	eor	r4, r3, r0
   141dc:	ldr	r0, [sp, #152]	; 0x98
   141e0:	eor	r0, r2, r0
   141e4:	adds	r1, r1, r0
   141e8:	adc	r5, r5, r4
   141ec:	eor	r6, r6, r1
   141f0:	adds	r3, r7, r3
   141f4:	eor	r8, r8, r5
   141f8:	lsr	r7, r6, #24
   141fc:	lsr	r9, r8, #24
   14200:	adc	r2, sl, r2
   14204:	orr	r8, r7, r8, lsl #8
   14208:	orr	r6, r9, r6, lsl #8
   1420c:	ldr	r9, [sp, #4]
   14210:	adds	r7, r3, r8
   14214:	adc	r2, r2, r6
   14218:	eor	r0, r0, r7
   1421c:	mov	r3, r2
   14220:	lsr	r2, r0, #16
   14224:	str	r7, [sp, #208]	; 0xd0
   14228:	eor	r4, r4, r3
   1422c:	lsl	r7, ip, #1
   14230:	str	r3, [sp, #212]	; 0xd4
   14234:	lsr	r3, r4, #16
   14238:	orr	r4, r2, r4, lsl #16
   1423c:	orr	r0, r3, r0, lsl #16
   14240:	ldr	r3, [sp, #132]	; 0x84
   14244:	adds	r1, r1, r4
   14248:	lsl	r2, lr, #1
   1424c:	mov	sl, r1
   14250:	adc	r1, r5, r0
   14254:	orr	lr, r7, lr, lsr #31
   14258:	mov	r5, r1
   1425c:	orr	ip, r2, ip, lsr #31
   14260:	eor	r2, r1, r6
   14264:	ldr	r1, [sp, #200]	; 0xc8
   14268:	str	r2, [sp, #152]	; 0x98
   1426c:	ldr	r2, [sp, #136]	; 0x88
   14270:	str	sl, [sp, #200]	; 0xc8
   14274:	ldr	r7, [sp, #224]	; 0xe0
   14278:	adds	r3, r3, r1
   1427c:	str	r5, [sp, #216]	; 0xd8
   14280:	ldr	r1, [sp, #24]
   14284:	ldr	r5, [sp, #140]	; 0x8c
   14288:	adc	r1, r1, r7
   1428c:	mov	r7, sl
   14290:	ldr	sl, [sp, #8]
   14294:	eor	r7, r7, r8
   14298:	adds	r3, r3, ip
   1429c:	ldr	r8, [sp, #236]	; 0xec
   142a0:	adc	r1, r1, lr
   142a4:	str	r7, [sp, #144]	; 0x90
   142a8:	eor	r7, r3, r8
   142ac:	ldr	r8, [sp, #240]	; 0xf0
   142b0:	eor	r6, r1, r8
   142b4:	adds	r2, r2, r6
   142b8:	adc	r5, r5, r7
   142bc:	eor	ip, ip, r2
   142c0:	adds	r3, r9, r3
   142c4:	eor	lr, lr, r5
   142c8:	lsr	r9, ip, #24
   142cc:	lsr	r8, lr, #24
   142d0:	adc	r1, sl, r1
   142d4:	ldr	sl, [sp, #168]	; 0xa8
   142d8:	orr	lr, r9, lr, lsl #8
   142dc:	orr	ip, r8, ip, lsl #8
   142e0:	adds	r8, r3, lr
   142e4:	adc	r1, r1, ip
   142e8:	eor	r6, r6, r8
   142ec:	eor	r7, r7, r1
   142f0:	str	r8, [sp, #220]	; 0xdc
   142f4:	lsl	r9, sl, #1
   142f8:	lsr	r3, r7, #16
   142fc:	str	r1, [sp, #224]	; 0xe0
   14300:	lsr	r1, r6, #16
   14304:	orr	r8, r3, r6, lsl #16
   14308:	orr	r1, r1, r7, lsl #16
   1430c:	mov	r6, r8
   14310:	adds	r2, r2, r1
   14314:	str	r1, [sp, #236]	; 0xec
   14318:	adc	r5, r5, r6
   1431c:	eor	lr, r2, lr
   14320:	str	r6, [sp, #240]	; 0xf0
   14324:	eor	ip, r5, ip
   14328:	ldr	r8, [sp, #36]	; 0x24
   1432c:	str	lr, [sp, #136]	; 0x88
   14330:	ldr	r3, [sp, #156]	; 0x9c
   14334:	str	ip, [sp, #140]	; 0x8c
   14338:	ldr	lr, [sp, #172]	; 0xac
   1433c:	ldr	r1, [sp, #192]	; 0xc0
   14340:	orr	r9, r9, r3, lsr #31
   14344:	lsl	r7, r3, #1
   14348:	ldr	r3, [sp, #40]	; 0x28
   1434c:	orr	r7, r7, sl, lsr #31
   14350:	adds	r1, r8, r1
   14354:	adc	r8, r3, fp
   14358:	adds	r1, r1, r7
   1435c:	ldr	fp, [sp, #228]	; 0xe4
   14360:	adc	ip, r8, r9
   14364:	ldr	r3, [sp, #248]	; 0xf8
   14368:	ldr	r8, [sp, #108]	; 0x6c
   1436c:	eor	fp, r1, fp
   14370:	eor	sl, ip, r3
   14374:	adds	r3, lr, sl
   14378:	ldr	lr, [sp, #176]	; 0xb0
   1437c:	eor	r7, r7, r3
   14380:	lsr	r6, r7, #24
   14384:	adc	lr, lr, fp
   14388:	adds	r1, r8, r1
   1438c:	eor	r9, r9, lr
   14390:	str	r1, [sp, #156]	; 0x9c
   14394:	lsr	r8, r9, #24
   14398:	ldr	r1, [sp, #112]	; 0x70
   1439c:	orr	r6, r6, r9, lsl #8
   143a0:	orr	r7, r8, r7, lsl #8
   143a4:	adc	ip, r1, ip
   143a8:	ldr	r1, [sp, #156]	; 0x9c
   143ac:	adds	r8, r1, r6
   143b0:	adc	ip, ip, r7
   143b4:	eor	sl, sl, r8
   143b8:	mov	r9, ip
   143bc:	lsr	ip, sl, #16
   143c0:	eor	fp, fp, r9
   143c4:	lsr	r1, fp, #16
   143c8:	strd	r8, [sp, #168]	; 0xa8
   143cc:	orr	ip, ip, fp, lsl #16
   143d0:	ldr	fp, [sp, #188]	; 0xbc
   143d4:	orr	sl, r1, sl, lsl #16
   143d8:	ldr	r1, [sp, #132]	; 0x84
   143dc:	adds	r3, r3, ip
   143e0:	adc	lr, lr, sl
   143e4:	eor	r6, r6, r3
   143e8:	str	ip, [sp, #228]	; 0xe4
   143ec:	ldr	ip, [sp, #24]
   143f0:	eor	r7, r7, lr
   143f4:	lsl	r9, r6, #1
   143f8:	lsl	r8, r7, #1
   143fc:	orr	r7, r9, r7, lsr #31
   14400:	adds	r1, r1, fp
   14404:	ldr	fp, [sp, #196]	; 0xc4
   14408:	orr	r6, r8, r6, lsr #31
   1440c:	ldr	r8, [sp, #36]	; 0x24
   14410:	adc	ip, ip, fp
   14414:	adds	r1, r1, r7
   14418:	ldr	fp, [sp, #40]	; 0x28
   1441c:	adc	ip, ip, r6
   14420:	eor	r4, r4, r1
   14424:	eor	r0, r0, ip
   14428:	adds	r2, r2, r0
   1442c:	adc	r5, r5, r4
   14430:	eor	r7, r7, r2
   14434:	adds	r1, r8, r1
   14438:	eor	r6, r6, r5
   1443c:	lsr	r8, r7, #24
   14440:	lsr	r9, r6, #24
   14444:	adc	ip, fp, ip
   14448:	orr	r6, r8, r6, lsl #8
   1444c:	ldr	r8, [sp, #164]	; 0xa4
   14450:	orr	r7, r9, r7, lsl #8
   14454:	adds	fp, r1, r6
   14458:	adc	ip, ip, r7
   1445c:	eor	r0, r0, fp
   14460:	eor	r4, r4, ip
   14464:	str	fp, [sp, #176]	; 0xb0
   14468:	lsr	r1, r4, #16
   1446c:	str	ip, [sp, #188]	; 0xbc
   14470:	lsr	ip, r0, #16
   14474:	ldr	fp, [sp, #160]	; 0xa0
   14478:	orr	r0, r1, r0, lsl #16
   1447c:	orr	r4, ip, r4, lsl #16
   14480:	ldr	ip, [sp, #16]
   14484:	mov	r9, r0
   14488:	lsl	r1, r8, #1
   1448c:	adds	r2, r2, r4
   14490:	ldr	r0, [sp, #208]	; 0xd0
   14494:	adc	r5, r5, r9
   14498:	orr	r1, r1, fp, lsr #31
   1449c:	str	r4, [sp, #244]	; 0xf4
   144a0:	mov	r4, r2
   144a4:	lsl	r2, fp, #1
   144a8:	str	r9, [sp, #248]	; 0xf8
   144ac:	mov	r9, r5
   144b0:	ldr	r5, [sp, #20]
   144b4:	eor	r6, r4, r6
   144b8:	orr	r2, r2, r8, lsr #31
   144bc:	eor	r7, r9, r7
   144c0:	ldr	fp, [sp, #212]	; 0xd4
   144c4:	adds	r0, ip, r0
   144c8:	adc	ip, r5, fp
   144cc:	ldr	fp, [sp, #236]	; 0xec
   144d0:	adds	r0, r0, r2
   144d4:	str	r6, [sp, #156]	; 0x9c
   144d8:	adc	ip, ip, r1
   144dc:	ldr	r6, [sp, #240]	; 0xf0
   144e0:	str	r7, [sp, #160]	; 0xa0
   144e4:	str	r9, [sp, #192]	; 0xc0
   144e8:	eor	r8, r0, fp
   144ec:	ldr	r9, [sp, #4]
   144f0:	str	r4, [sp, #164]	; 0xa4
   144f4:	eor	r6, ip, r6
   144f8:	ldr	r7, [sp, #8]
   144fc:	adds	r3, r3, r6
   14500:	adc	lr, lr, r8
   14504:	eor	r2, r2, r3
   14508:	ldr	fp, [sp, #152]	; 0x98
   1450c:	eor	r1, r1, lr
   14510:	lsr	r4, r2, #24
   14514:	adds	r0, r9, r0
   14518:	lsr	r5, r1, #24
   1451c:	orr	r4, r4, r1, lsl #8
   14520:	adc	ip, r7, ip
   14524:	orr	r5, r5, r2, lsl #8
   14528:	adds	r2, r0, r4
   1452c:	adc	r0, ip, r5
   14530:	eor	r6, r6, r2
   14534:	ldr	ip, [sp, #228]	; 0xe4
   14538:	lsr	r7, r6, #16
   1453c:	eor	r8, r8, r0
   14540:	str	r2, [sp, #196]	; 0xc4
   14544:	lsr	r2, r8, #16
   14548:	str	r0, [sp, #208]	; 0xd0
   1454c:	orr	r0, r7, r8, lsl #16
   14550:	orr	r6, r2, r6, lsl #16
   14554:	adds	r3, r3, r0
   14558:	lsl	r8, fp, #1
   1455c:	mov	r7, r3
   14560:	adc	r3, lr, r6
   14564:	ldr	lr, [sp, #220]	; 0xdc
   14568:	eor	r4, r4, r7
   1456c:	str	r6, [sp, #240]	; 0xf0
   14570:	mov	r6, r3
   14574:	str	r0, [sp, #236]	; 0xec
   14578:	eor	r5, r5, r6
   1457c:	ldr	r3, [sp, #68]	; 0x44
   14580:	str	r7, [sp, #212]	; 0xd4
   14584:	str	r6, [sp, #220]	; 0xdc
   14588:	ldr	r0, [sp, #144]	; 0x90
   1458c:	adds	r3, r3, lr
   14590:	ldr	r7, [sp, #64]	; 0x40
   14594:	ldr	lr, [sp, #224]	; 0xe0
   14598:	orr	r8, r8, r0, lsr #31
   1459c:	lsl	r2, r0, #1
   145a0:	ldr	r0, [sp, #72]	; 0x48
   145a4:	orr	r2, r2, fp, lsr #31
   145a8:	adc	r1, r0, lr
   145ac:	ldr	lr, [sp, #148]	; 0x94
   145b0:	adds	r3, r3, r2
   145b4:	adc	r1, r1, r8
   145b8:	eor	ip, ip, r3
   145bc:	eor	sl, sl, r1
   145c0:	mov	fp, ip
   145c4:	adds	r0, lr, sl
   145c8:	ldr	lr, [sp, #204]	; 0xcc
   145cc:	eor	r2, r2, r0
   145d0:	adc	r6, lr, ip
   145d4:	ldr	lr, [sp, #60]	; 0x3c
   145d8:	eor	r8, r8, r6
   145dc:	lsr	r9, r8, #24
   145e0:	orr	r9, r9, r2, lsl #8
   145e4:	adds	r3, lr, r3
   145e8:	lsr	lr, r2, #24
   145ec:	adc	r1, r7, r1
   145f0:	lsl	r7, r5, #1
   145f4:	orr	lr, lr, r8, lsl #8
   145f8:	orr	r7, r7, r4, lsr #31
   145fc:	adds	r8, r3, lr
   14600:	adc	r1, r1, r9
   14604:	eor	sl, sl, r8
   14608:	mov	r3, r1
   1460c:	lsr	r2, sl, #16
   14610:	str	r8, [sp, #148]	; 0x94
   14614:	eor	fp, fp, r3
   14618:	str	r3, [sp, #152]	; 0x98
   1461c:	lsr	r3, fp, #16
   14620:	orr	r1, r2, fp, lsl #16
   14624:	ldr	r2, [sp, #168]	; 0xa8
   14628:	orr	fp, r3, sl, lsl #16
   1462c:	ldr	r3, [sp, #52]	; 0x34
   14630:	adds	r0, r0, r1
   14634:	str	r1, [sp, #228]	; 0xe4
   14638:	adc	r6, r6, fp
   1463c:	eor	lr, r0, lr
   14640:	ldr	r1, [sp, #136]	; 0x88
   14644:	eor	r9, r6, r9
   14648:	str	fp, [sp, #256]	; 0x100
   1464c:	ldr	r8, [sp, #172]	; 0xac
   14650:	adds	r2, r3, r2
   14654:	str	r9, [sp, #144]	; 0x90
   14658:	ldr	fp, [sp, #56]	; 0x38
   1465c:	lsl	ip, r1, #1
   14660:	ldr	r3, [sp, #140]	; 0x8c
   14664:	str	lr, [sp, #140]	; 0x8c
   14668:	ldr	sl, [sp, #232]	; 0xe8
   1466c:	adc	r8, fp, r8
   14670:	orr	ip, ip, r3, lsr #31
   14674:	lsl	lr, r3, #1
   14678:	adds	r2, r2, ip
   1467c:	lsl	r3, r4, #1
   14680:	eor	r9, r2, sl
   14684:	ldr	sl, [sp, #252]	; 0xfc
   14688:	orr	lr, lr, r1, lsr #31
   1468c:	orr	r3, r3, r5, lsr #31
   14690:	adc	r8, r8, lr
   14694:	ldr	r5, [sp, #216]	; 0xd8
   14698:	eor	r4, r8, sl
   1469c:	ldr	sl, [sp, #200]	; 0xc8
   146a0:	adds	r1, sl, r4
   146a4:	ldr	sl, [sp, #76]	; 0x4c
   146a8:	adc	r5, r5, r9
   146ac:	eor	ip, ip, r1
   146b0:	eor	lr, lr, r5
   146b4:	lsr	fp, ip, #24
   146b8:	str	r5, [sp, #136]	; 0x88
   146bc:	ldr	r5, [sp, #80]	; 0x50
   146c0:	adds	r2, sl, r2
   146c4:	lsr	sl, lr, #24
   146c8:	orr	lr, fp, lr, lsl #8
   146cc:	ldr	fp, [sp, #176]	; 0xb0
   146d0:	orr	ip, sl, ip, lsl #8
   146d4:	ldr	sl, [sp, #104]	; 0x68
   146d8:	adc	r8, r5, r8
   146dc:	adds	r5, r2, lr
   146e0:	adc	r2, r8, ip
   146e4:	eor	r4, r4, r5
   146e8:	eor	r9, r9, r2
   146ec:	lsr	r8, r4, #16
   146f0:	str	r5, [sp, #168]	; 0xa8
   146f4:	str	r2, [sp, #172]	; 0xac
   146f8:	lsr	r2, r9, #16
   146fc:	ldr	r5, [sp, #136]	; 0x88
   14700:	orr	r8, r8, r9, lsl #16
   14704:	orr	r4, r2, r4, lsl #16
   14708:	ldr	r2, [sp, #12]
   1470c:	adds	r1, r1, r8
   14710:	eor	lr, lr, r1
   14714:	adc	r5, r5, r4
   14718:	eor	ip, ip, r5
   1471c:	adds	r2, r2, fp
   14720:	ldr	fp, [sp, #188]	; 0xbc
   14724:	adc	r9, sl, fp
   14728:	adds	r2, r2, r3
   1472c:	adc	r9, r9, r7
   14730:	eor	sl, r2, r8
   14734:	ldr	r8, [sp, #124]	; 0x7c
   14738:	eor	r4, r4, r9
   1473c:	adds	r0, r0, r4
   14740:	adc	r6, r6, sl
   14744:	eor	r3, r3, r0
   14748:	eor	r7, r7, r6
   1474c:	lsr	fp, r7, #24
   14750:	adds	r2, r8, r2
   14754:	lsr	r8, r3, #24
   14758:	str	fp, [sp, #136]	; 0x88
   1475c:	orr	r7, r8, r7, lsl #8
   14760:	ldr	fp, [sp, #128]	; 0x80
   14764:	ldr	r8, [sp, #136]	; 0x88
   14768:	adc	r9, fp, r9
   1476c:	orr	r3, r8, r3, lsl #8
   14770:	adds	r8, r2, r7
   14774:	eor	r4, r4, r8
   14778:	adc	fp, r9, r3
   1477c:	str	r8, [sp, #176]	; 0xb0
   14780:	lsr	r9, r4, #16
   14784:	eor	r8, fp, sl
   14788:	lsr	r2, r8, #16
   1478c:	str	fp, [sp, #188]	; 0xbc
   14790:	orr	sl, r9, r8, lsl #16
   14794:	ldr	fp, [sp, #144]	; 0x90
   14798:	orr	r4, r2, r4, lsl #16
   1479c:	mov	r2, r4
   147a0:	adds	r4, r0, sl
   147a4:	ldr	r0, [sp, #116]	; 0x74
   147a8:	adc	r6, r6, r2
   147ac:	mov	r9, r4
   147b0:	eor	r7, r9, r7
   147b4:	lsl	r8, fp, #1
   147b8:	str	r2, [sp, #252]	; 0xfc
   147bc:	ldr	r2, [sp, #196]	; 0xc4
   147c0:	str	sl, [sp, #232]	; 0xe8
   147c4:	ldr	sl, [sp, #140]	; 0x8c
   147c8:	str	r6, [sp, #136]	; 0x88
   147cc:	adds	r0, r0, r2
   147d0:	ldr	r2, [sp, #120]	; 0x78
   147d4:	str	r7, [sp, #140]	; 0x8c
   147d8:	ldr	r7, [sp, #136]	; 0x88
   147dc:	lsl	r4, sl, #1
   147e0:	orr	r8, r8, sl, lsr #31
   147e4:	str	r9, [sp, #196]	; 0xc4
   147e8:	ldr	sl, [sp, #208]	; 0xd0
   147ec:	orr	r6, r4, fp, lsr #31
   147f0:	ldr	fp, [sp, #44]	; 0x2c
   147f4:	eor	r4, r7, r3
   147f8:	adc	r2, r2, sl
   147fc:	adds	r3, r0, r6
   14800:	str	r4, [sp, #144]	; 0x90
   14804:	ldr	r0, [sp, #248]	; 0xf8
   14808:	adc	r2, r2, r8
   1480c:	ldr	sl, [sp, #48]	; 0x30
   14810:	ldr	r4, [sp, #244]	; 0xf4
   14814:	eor	r0, r2, r0
   14818:	adds	r1, r1, r0
   1481c:	eor	r6, r6, r1
   14820:	lsr	r7, r6, #24
   14824:	eor	r4, r3, r4
   14828:	adc	r5, r5, r4
   1482c:	adds	r3, fp, r3
   14830:	eor	r8, r8, r5
   14834:	adc	r2, sl, r2
   14838:	lsr	r9, r8, #24
   1483c:	orr	r8, r7, r8, lsl #8
   14840:	orr	r6, r9, r6, lsl #8
   14844:	adds	r9, r3, r8
   14848:	adc	r2, r2, r6
   1484c:	eor	r0, r0, r9
   14850:	mov	r7, r2
   14854:	lsr	r2, r0, #16
   14858:	str	r9, [sp, #200]	; 0xc8
   1485c:	eor	r4, r4, r7
   14860:	lsr	r3, r4, #16
   14864:	str	r7, [sp, #204]	; 0xcc
   14868:	orr	r4, r2, r4, lsl #16
   1486c:	orr	r0, r3, r0, lsl #16
   14870:	adds	r9, r1, r4
   14874:	lsl	r2, lr, #1
   14878:	adc	r1, r5, r0
   1487c:	ldr	r5, [sp, #148]	; 0x94
   14880:	lsl	r7, ip, #1
   14884:	mov	sl, r1
   14888:	eor	r6, r1, r6
   1488c:	orr	ip, r2, ip, lsr #31
   14890:	ldr	r1, [sp, #108]	; 0x6c
   14894:	orr	lr, r7, lr, lsr #31
   14898:	str	r9, [sp, #208]	; 0xd0
   1489c:	ldr	r2, [sp, #236]	; 0xec
   148a0:	str	sl, [sp, #216]	; 0xd8
   148a4:	ldr	sl, [sp, #100]	; 0x64
   148a8:	adds	r3, r1, r5
   148ac:	ldr	r1, [sp, #112]	; 0x70
   148b0:	ldr	r5, [sp, #152]	; 0x98
   148b4:	str	r6, [sp, #152]	; 0x98
   148b8:	adc	r1, r1, r5
   148bc:	adds	r3, r3, ip
   148c0:	eor	r7, r3, r2
   148c4:	ldr	r2, [sp, #240]	; 0xf0
   148c8:	adc	r1, r1, lr
   148cc:	mov	r5, r9
   148d0:	eor	r5, r5, r8
   148d4:	ldr	r8, [sp, #192]	; 0xc0
   148d8:	str	r5, [sp, #148]	; 0x94
   148dc:	eor	r6, r1, r2
   148e0:	ldr	r2, [sp, #164]	; 0xa4
   148e4:	adds	r2, r2, r6
   148e8:	adc	r5, r8, r7
   148ec:	ldr	r8, [sp, #96]	; 0x60
   148f0:	eor	ip, ip, r2
   148f4:	eor	lr, lr, r5
   148f8:	lsr	r9, ip, #24
   148fc:	adds	r3, r8, r3
   14900:	lsr	r8, lr, #24
   14904:	orr	lr, r9, lr, lsl #8
   14908:	adc	r1, sl, r1
   1490c:	ldr	sl, [sp, #160]	; 0xa0
   14910:	orr	ip, r8, ip, lsl #8
   14914:	adds	r3, r3, lr
   14918:	ldr	r8, [sp, #168]	; 0xa8
   1491c:	adc	r1, r1, ip
   14920:	eor	r6, r6, r3
   14924:	eor	r7, r7, r1
   14928:	str	r3, [sp, #192]	; 0xc0
   1492c:	str	r1, [sp, #224]	; 0xe0
   14930:	lsr	r1, r6, #16
   14934:	lsr	r3, r7, #16
   14938:	orr	r9, r1, r7, lsl #16
   1493c:	orr	r6, r3, r6, lsl #16
   14940:	ldr	r3, [sp, #156]	; 0x9c
   14944:	mov	r1, r9
   14948:	lsl	r9, sl, #1
   1494c:	mov	fp, r6
   14950:	adds	r2, r2, r1
   14954:	str	r1, [sp, #236]	; 0xec
   14958:	adc	r5, r5, fp
   1495c:	ldr	r6, [sp, #84]	; 0x54
   14960:	eor	ip, r5, ip
   14964:	orr	r9, r9, r3, lsr #31
   14968:	lsl	r7, r3, #1
   1496c:	ldr	r3, [sp, #172]	; 0xac
   14970:	str	ip, [sp, #160]	; 0xa0
   14974:	orr	r7, r7, sl, lsr #31
   14978:	str	fp, [sp, #240]	; 0xf0
   1497c:	adds	r1, r6, r8
   14980:	ldr	r6, [sp, #88]	; 0x58
   14984:	adc	r8, r6, r3
   14988:	eor	r3, r2, lr
   1498c:	ldr	r6, [sp, #28]
   14990:	adds	r1, r1, r7
   14994:	str	r3, [sp, #156]	; 0x9c
   14998:	adc	ip, r8, r9
   1499c:	ldr	lr, [sp, #212]	; 0xd4
   149a0:	ldr	r3, [sp, #228]	; 0xe4
   149a4:	eor	fp, r1, r3
   149a8:	ldr	r3, [sp, #256]	; 0x100
   149ac:	eor	sl, ip, r3
   149b0:	adds	r3, lr, sl
   149b4:	ldr	lr, [sp, #220]	; 0xdc
   149b8:	eor	r7, r7, r3
   149bc:	adc	lr, lr, fp
   149c0:	adds	r1, r6, r1
   149c4:	lsr	r6, r7, #24
   149c8:	eor	r9, r9, lr
   149cc:	str	lr, [sp, #164]	; 0xa4
   149d0:	lsr	r8, r9, #24
   149d4:	ldr	lr, [sp, #32]
   149d8:	orr	r6, r6, r9, lsl #8
   149dc:	orr	r7, r8, r7, lsl #8
   149e0:	ldr	r8, [sp, #176]	; 0xb0
   149e4:	adc	ip, lr, ip
   149e8:	adds	lr, r1, r6
   149ec:	adc	ip, ip, r7
   149f0:	eor	sl, sl, lr
   149f4:	mov	r9, ip
   149f8:	lsr	ip, sl, #16
   149fc:	str	lr, [sp, #172]	; 0xac
   14a00:	eor	fp, fp, r9
   14a04:	ldr	lr, [sp, #188]	; 0xbc
   14a08:	lsr	r1, fp, #16
   14a0c:	str	r9, [sp, #212]	; 0xd4
   14a10:	orr	fp, ip, fp, lsl #16
   14a14:	ldr	r9, [sp, #36]	; 0x24
   14a18:	orr	sl, r1, sl, lsl #16
   14a1c:	adds	r3, r3, fp
   14a20:	ldr	ip, [sp, #40]	; 0x28
   14a24:	eor	r6, r6, r3
   14a28:	ldr	r1, [sp, #164]	; 0xa4
   14a2c:	adc	r1, r1, sl
   14a30:	eor	r7, r7, r1
   14a34:	str	r1, [sp, #220]	; 0xdc
   14a38:	adds	r1, r9, r8
   14a3c:	lsl	r9, r6, #1
   14a40:	lsl	r8, r7, #1
   14a44:	adc	ip, ip, lr
   14a48:	orr	r7, r9, r7, lsr #31
   14a4c:	orr	r6, r8, r6, lsr #31
   14a50:	ldr	r8, [sp, #96]	; 0x60
   14a54:	adds	r1, r1, r7
   14a58:	adc	ip, ip, r6
   14a5c:	eor	r4, r4, r1
   14a60:	eor	r0, r0, ip
   14a64:	adds	r2, r2, r0
   14a68:	adc	r5, r5, r4
   14a6c:	eor	r7, r7, r2
   14a70:	adds	lr, r8, r1
   14a74:	ldr	r1, [sp, #100]	; 0x64
   14a78:	lsr	r8, r7, #24
   14a7c:	eor	r6, r6, r5
   14a80:	lsr	r9, r6, #24
   14a84:	orr	r6, r8, r6, lsl #8
   14a88:	orr	r7, r9, r7, lsl #8
   14a8c:	adc	ip, r1, ip
   14a90:	adds	r8, lr, r6
   14a94:	eor	r0, r0, r8
   14a98:	adc	lr, ip, r7
   14a9c:	lsr	ip, r0, #16
   14aa0:	eor	r4, r4, lr
   14aa4:	str	r8, [sp, #176]	; 0xb0
   14aa8:	lsr	r1, r4, #16
   14aac:	ldr	r8, [sp, #144]	; 0x90
   14ab0:	orr	r4, ip, r4, lsl #16
   14ab4:	str	lr, [sp, #188]	; 0xbc
   14ab8:	ldr	lr, [sp, #140]	; 0x8c
   14abc:	mov	ip, r4
   14ac0:	orr	r4, r1, r0, lsl #16
   14ac4:	mov	r0, r4
   14ac8:	lsl	r1, r8, #1
   14acc:	str	ip, [sp, #244]	; 0xf4
   14ad0:	str	r4, [sp, #248]	; 0xf8
   14ad4:	adds	r4, r2, ip
   14ad8:	mov	r9, r4
   14adc:	adc	r4, r5, r0
   14ae0:	ldr	r0, [sp, #200]	; 0xc8
   14ae4:	orr	r1, r1, lr, lsr #31
   14ae8:	mov	r5, r9
   14aec:	str	r4, [sp, #140]	; 0x8c
   14af0:	lsl	r2, lr, #1
   14af4:	eor	r5, r5, r6
   14af8:	ldr	r4, [sp, #116]	; 0x74
   14afc:	orr	r2, r2, r8, lsr #31
   14b00:	ldr	lr, [sp, #204]	; 0xcc
   14b04:	str	r5, [sp, #164]	; 0xa4
   14b08:	ldr	r5, [sp, #132]	; 0x84
   14b0c:	adds	r0, r4, r0
   14b10:	str	r9, [sp, #200]	; 0xc8
   14b14:	ldr	r9, [sp, #24]
   14b18:	ldr	r4, [sp, #120]	; 0x78
   14b1c:	adc	ip, r4, lr
   14b20:	ldr	r4, [sp, #140]	; 0x8c
   14b24:	adds	r0, r0, r2
   14b28:	adc	ip, ip, r1
   14b2c:	ldr	lr, [sp, #220]	; 0xdc
   14b30:	eor	r7, r4, r7
   14b34:	ldr	r4, [sp, #236]	; 0xec
   14b38:	str	r7, [sp, #168]	; 0xa8
   14b3c:	eor	r8, r0, r4
   14b40:	ldr	r4, [sp, #240]	; 0xf0
   14b44:	eor	r6, ip, r4
   14b48:	adds	r3, r3, r6
   14b4c:	adc	lr, lr, r8
   14b50:	eor	r2, r2, r3
   14b54:	eor	r1, r1, lr
   14b58:	lsr	r4, r2, #24
   14b5c:	adds	r0, r5, r0
   14b60:	lsr	r5, r1, #24
   14b64:	adc	ip, r9, ip
   14b68:	orr	r4, r4, r1, lsl #8
   14b6c:	orr	r5, r5, r2, lsl #8
   14b70:	adds	r2, r0, r4
   14b74:	adc	r7, ip, r5
   14b78:	eor	r6, r6, r2
   14b7c:	ldr	ip, [sp, #104]	; 0x68
   14b80:	eor	r8, r8, r7
   14b84:	str	r2, [sp, #204]	; 0xcc
   14b88:	lsr	r2, r8, #16
   14b8c:	str	r7, [sp, #220]	; 0xdc
   14b90:	lsr	r7, r6, #16
   14b94:	orr	r0, r7, r8, lsl #16
   14b98:	orr	r7, r2, r6, lsl #16
   14b9c:	ldr	r6, [sp, #152]	; 0x98
   14ba0:	adds	r3, r3, r0
   14ba4:	mov	r9, r3
   14ba8:	ldr	r3, [sp, #12]
   14bac:	str	r0, [sp, #236]	; 0xec
   14bb0:	eor	r4, r4, r9
   14bb4:	str	r7, [sp, #240]	; 0xf0
   14bb8:	adc	r7, lr, r7
   14bbc:	ldr	r0, [sp, #148]	; 0x94
   14bc0:	lsl	r8, r6, #1
   14bc4:	eor	r5, r5, r7
   14bc8:	ldr	lr, [sp, #192]	; 0xc0
   14bcc:	str	r9, [sp, #192]	; 0xc0
   14bd0:	lsl	r2, r0, #1
   14bd4:	orr	r8, r8, r0, lsr #31
   14bd8:	adds	r3, r3, lr
   14bdc:	ldr	lr, [sp, #224]	; 0xe0
   14be0:	orr	r2, r2, r6, lsr #31
   14be4:	str	r7, [sp, #224]	; 0xe0
   14be8:	adc	r1, ip, lr
   14bec:	adds	r3, r3, r2
   14bf0:	ldr	ip, [sp, #112]	; 0x70
   14bf4:	adc	r1, r1, r8
   14bf8:	eor	fp, fp, r3
   14bfc:	ldr	lr, [sp, #196]	; 0xc4
   14c00:	eor	sl, sl, r1
   14c04:	adds	r0, lr, sl
   14c08:	ldr	lr, [sp, #136]	; 0x88
   14c0c:	eor	r2, r2, r0
   14c10:	adc	r6, lr, fp
   14c14:	ldr	lr, [sp, #108]	; 0x6c
   14c18:	eor	r8, r8, r6
   14c1c:	lsr	r9, r8, #24
   14c20:	orr	r9, r9, r2, lsl #8
   14c24:	adds	r3, lr, r3
   14c28:	lsr	lr, r2, #24
   14c2c:	adc	r1, ip, r1
   14c30:	orr	lr, lr, r8, lsl #8
   14c34:	adds	r3, r3, lr
   14c38:	adc	r1, r1, r9
   14c3c:	eor	sl, sl, r3
   14c40:	mov	r2, r1
   14c44:	str	r3, [sp, #196]	; 0xc4
   14c48:	eor	fp, fp, r2
   14c4c:	ldr	r1, [sp, #156]	; 0x9c
   14c50:	str	r2, [sp, #228]	; 0xe4
   14c54:	lsr	r2, sl, #16
   14c58:	lsr	r3, fp, #16
   14c5c:	orr	fp, r2, fp, lsl #16
   14c60:	orr	r8, r3, sl, lsl #16
   14c64:	adds	r0, r0, fp
   14c68:	lsl	ip, r1, #1
   14c6c:	str	fp, [sp, #256]	; 0x100
   14c70:	eor	lr, r0, lr
   14c74:	adc	r6, r6, r8
   14c78:	ldr	fp, [sp, #160]	; 0xa0
   14c7c:	ldr	r7, [sp, #172]	; 0xac
   14c80:	str	lr, [sp, #144]	; 0x90
   14c84:	ldr	r3, [sp, #44]	; 0x2c
   14c88:	lsl	lr, fp, #1
   14c8c:	str	r8, [sp, #260]	; 0x104
   14c90:	ldr	r8, [sp, #212]	; 0xd4
   14c94:	orr	ip, ip, fp, lsr #31
   14c98:	eor	fp, r6, r9
   14c9c:	orr	lr, lr, r1, lsr #31
   14ca0:	ldr	r1, [sp, #232]	; 0xe8
   14ca4:	adds	r2, r3, r7
   14ca8:	lsl	r7, r5, #1
   14cac:	str	fp, [sp, #148]	; 0x94
   14cb0:	ldr	r3, [sp, #48]	; 0x30
   14cb4:	orr	r7, r7, r4, lsr #31
   14cb8:	ldr	fp, [sp, #216]	; 0xd8
   14cbc:	adc	r8, r3, r8
   14cc0:	adds	r2, r2, ip
   14cc4:	lsl	r3, r4, #1
   14cc8:	ldr	r4, [sp, #252]	; 0xfc
   14ccc:	eor	r9, r2, r1
   14cd0:	adc	r8, r8, lr
   14cd4:	orr	r3, r3, r5, lsr #31
   14cd8:	ldr	r1, [sp, #208]	; 0xd0
   14cdc:	eor	r4, r8, r4
   14ce0:	adds	r1, r1, r4
   14ce4:	adc	r5, fp, r9
   14ce8:	ldr	fp, [sp, #84]	; 0x54
   14cec:	eor	ip, ip, r1
   14cf0:	eor	lr, lr, r5
   14cf4:	lsr	sl, lr, #24
   14cf8:	adds	r2, fp, r2
   14cfc:	lsr	fp, ip, #24
   14d00:	orr	ip, sl, ip, lsl #8
   14d04:	str	r2, [sp, #136]	; 0x88
   14d08:	orr	lr, fp, lr, lsl #8
   14d0c:	ldr	r2, [sp, #88]	; 0x58
   14d10:	adc	r8, r2, r8
   14d14:	ldr	r2, [sp, #136]	; 0x88
   14d18:	adds	sl, r2, lr
   14d1c:	adc	fp, r8, ip
   14d20:	eor	r4, r4, sl
   14d24:	eor	r9, r9, fp
   14d28:	lsr	r8, r4, #16
   14d2c:	str	sl, [sp, #208]	; 0xd0
   14d30:	lsr	r2, r9, #16
   14d34:	ldr	sl, [sp, #80]	; 0x50
   14d38:	orr	r8, r8, r9, lsl #16
   14d3c:	orr	r4, r2, r4, lsl #16
   14d40:	ldr	r2, [sp, #76]	; 0x4c
   14d44:	adds	r1, r1, r8
   14d48:	ldr	r9, [sp, #176]	; 0xb0
   14d4c:	adc	r5, r5, r4
   14d50:	eor	lr, lr, r1
   14d54:	eor	ip, ip, r5
   14d58:	adds	r2, r2, r9
   14d5c:	ldr	r9, [sp, #188]	; 0xbc
   14d60:	adc	r9, sl, r9
   14d64:	adds	r2, r2, r3
   14d68:	eor	sl, r2, r8
   14d6c:	ldr	r8, [sp, #4]
   14d70:	adc	r9, r9, r7
   14d74:	eor	r4, r4, r9
   14d78:	adds	r0, r0, r4
   14d7c:	adc	r6, r6, sl
   14d80:	eor	r3, r3, r0
   14d84:	eor	r7, r7, r6
   14d88:	adds	r2, r8, r2
   14d8c:	lsr	r8, r3, #24
   14d90:	str	r2, [sp, #152]	; 0x98
   14d94:	lsr	r2, r7, #24
   14d98:	orr	r7, r8, r7, lsl #8
   14d9c:	str	r2, [sp, #136]	; 0x88
   14da0:	ldr	r2, [sp, #8]
   14da4:	ldr	r8, [sp, #136]	; 0x88
   14da8:	adc	r9, r2, r9
   14dac:	ldr	r2, [sp, #152]	; 0x98
   14db0:	orr	r3, r8, r3, lsl #8
   14db4:	adds	r8, r2, r7
   14db8:	adc	r9, r9, r3
   14dbc:	eor	r4, r4, r8
   14dc0:	str	r8, [sp, #188]	; 0xbc
   14dc4:	eor	r8, r9, sl
   14dc8:	str	r9, [sp, #212]	; 0xd4
   14dcc:	lsr	r9, r4, #16
   14dd0:	lsr	r2, r8, #16
   14dd4:	orr	sl, r9, r8, lsl #16
   14dd8:	ldr	r9, [sp, #148]	; 0x94
   14ddc:	orr	r4, r2, r4, lsl #16
   14de0:	str	sl, [sp, #152]	; 0x98
   14de4:	mov	r2, r4
   14de8:	ldr	sl, [sp, #152]	; 0x98
   14dec:	lsl	r8, r9, #1
   14df0:	adds	r0, r0, sl
   14df4:	ldr	sl, [sp, #144]	; 0x90
   14df8:	adc	r6, r6, r2
   14dfc:	str	r0, [sp, #136]	; 0x88
   14e00:	str	r6, [sp, #144]	; 0x90
   14e04:	ldr	r0, [sp, #52]	; 0x34
   14e08:	str	r2, [sp, #232]	; 0xe8
   14e0c:	lsl	r4, sl, #1
   14e10:	ldr	r6, [sp, #204]	; 0xcc
   14e14:	orr	r8, r8, sl, lsr #31
   14e18:	ldr	r2, [sp, #220]	; 0xdc
   14e1c:	adds	r0, r0, r6
   14e20:	ldr	r6, [sp, #56]	; 0x38
   14e24:	adc	r2, r6, r2
   14e28:	ldr	r6, [sp, #136]	; 0x88
   14e2c:	eor	r6, r6, r7
   14e30:	ldr	r7, [sp, #144]	; 0x90
   14e34:	str	r6, [sp, #156]	; 0x9c
   14e38:	orr	r6, r4, r9, lsr #31
   14e3c:	ldr	r4, [sp, #244]	; 0xf4
   14e40:	eor	sl, r7, r3
   14e44:	adds	r3, r0, r6
   14e48:	ldr	r7, [sp, #60]	; 0x3c
   14e4c:	adc	r2, r2, r8
   14e50:	ldr	r0, [sp, #248]	; 0xf8
   14e54:	eor	r4, r3, r4
   14e58:	str	sl, [sp, #160]	; 0xa0
   14e5c:	ldr	sl, [sp, #64]	; 0x40
   14e60:	eor	r0, r2, r0
   14e64:	adds	r1, r1, r0
   14e68:	adc	r5, r5, r4
   14e6c:	eor	r6, r6, r1
   14e70:	eor	r8, r8, r5
   14e74:	adds	r3, r7, r3
   14e78:	lsr	r7, r6, #24
   14e7c:	lsr	r9, r8, #24
   14e80:	adc	r2, sl, r2
   14e84:	orr	r8, r7, r8, lsl #8
   14e88:	orr	r6, r9, r6, lsl #8
   14e8c:	adds	r3, r3, r8
   14e90:	lsl	r7, ip, #1
   14e94:	adc	r2, r2, r6
   14e98:	eor	r0, r0, r3
   14e9c:	mov	r9, r2
   14ea0:	lsr	r2, r0, #16
   14ea4:	str	r3, [sp, #204]	; 0xcc
   14ea8:	eor	r4, r4, r9
   14eac:	lsr	r3, r4, #16
   14eb0:	str	r9, [sp, #216]	; 0xd8
   14eb4:	orr	r4, r2, r4, lsl #16
   14eb8:	ldr	r9, [sp, #124]	; 0x7c
   14ebc:	orr	r0, r3, r0, lsl #16
   14ec0:	adds	r1, r1, r4
   14ec4:	lsl	r2, lr, #1
   14ec8:	mov	sl, r1
   14ecc:	ldr	r1, [sp, #196]	; 0xc4
   14ed0:	adc	r5, r5, r0
   14ed4:	orr	ip, r2, ip, lsr #31
   14ed8:	eor	r8, sl, r8
   14edc:	str	r5, [sp, #148]	; 0x94
   14ee0:	orr	lr, r7, lr, lsr #31
   14ee4:	ldr	r5, [sp, #128]	; 0x80
   14ee8:	str	r8, [sp, #172]	; 0xac
   14eec:	adds	r3, r9, r1
   14ef0:	ldr	r9, [sp, #200]	; 0xc8
   14ef4:	str	sl, [sp, #196]	; 0xc4
   14ef8:	ldr	r1, [sp, #228]	; 0xe4
   14efc:	ldr	sl, [sp, #28]
   14f00:	adc	r1, r5, r1
   14f04:	ldr	r5, [sp, #148]	; 0x94
   14f08:	adds	r3, r3, ip
   14f0c:	adc	r1, r1, lr
   14f10:	eor	r2, r5, r6
   14f14:	ldr	r6, [sp, #236]	; 0xec
   14f18:	str	r2, [sp, #176]	; 0xb0
   14f1c:	eor	r7, r3, r6
   14f20:	ldr	r6, [sp, #240]	; 0xf0
   14f24:	eor	r6, r1, r6
   14f28:	adds	r2, r9, r6
   14f2c:	ldr	r9, [sp, #140]	; 0x8c
   14f30:	eor	ip, ip, r2
   14f34:	adc	r5, r9, r7
   14f38:	adds	r3, sl, r3
   14f3c:	ldr	sl, [sp, #32]
   14f40:	eor	lr, lr, r5
   14f44:	lsr	r9, ip, #24
   14f48:	lsr	r8, lr, #24
   14f4c:	orr	lr, r9, lr, lsl #8
   14f50:	orr	ip, r8, ip, lsl #8
   14f54:	ldr	r8, [sp, #164]	; 0xa4
   14f58:	adc	r1, sl, r1
   14f5c:	adds	r9, r3, lr
   14f60:	adc	r1, r1, ip
   14f64:	eor	r6, r6, r9
   14f68:	mov	r3, r1
   14f6c:	lsr	r1, r6, #16
   14f70:	str	r9, [sp, #200]	; 0xc8
   14f74:	eor	r7, r7, r3
   14f78:	str	r3, [sp, #220]	; 0xdc
   14f7c:	lsr	r3, r7, #16
   14f80:	orr	r1, r1, r7, lsl #16
   14f84:	orr	r6, r3, r6, lsl #16
   14f88:	ldr	r3, [sp, #168]	; 0xa8
   14f8c:	adds	r2, r2, r1
   14f90:	lsl	r7, r8, #1
   14f94:	mov	sl, r6
   14f98:	str	r1, [sp, #228]	; 0xe4
   14f9c:	eor	lr, r2, lr
   14fa0:	ldr	r6, [sp, #16]
   14fa4:	adc	r5, r5, sl
   14fa8:	str	lr, [sp, #164]	; 0xa4
   14fac:	eor	ip, r5, ip
   14fb0:	ldr	r1, [sp, #208]	; 0xd0
   14fb4:	lsl	r9, r3, #1
   14fb8:	orr	r7, r7, r3, lsr #31
   14fbc:	str	ip, [sp, #168]	; 0xa8
   14fc0:	ldr	lr, [sp, #260]	; 0x104
   14fc4:	orr	r9, r9, r8, lsr #31
   14fc8:	str	sl, [sp, #236]	; 0xec
   14fcc:	adds	r1, r6, r1
   14fd0:	ldr	r6, [sp, #20]
   14fd4:	adc	r8, r6, fp
   14fd8:	adds	r1, r1, r7
   14fdc:	ldr	r6, [sp, #68]	; 0x44
   14fe0:	adc	ip, r8, r9
   14fe4:	eor	sl, ip, lr
   14fe8:	ldr	lr, [sp, #192]	; 0xc0
   14fec:	ldr	fp, [sp, #256]	; 0x100
   14ff0:	adds	r3, lr, sl
   14ff4:	ldr	lr, [sp, #224]	; 0xe0
   14ff8:	eor	r7, r7, r3
   14ffc:	eor	fp, r1, fp
   15000:	adc	lr, lr, fp
   15004:	adds	r1, r6, r1
   15008:	lsr	r6, r7, #24
   1500c:	eor	r9, r9, lr
   15010:	str	lr, [sp, #140]	; 0x8c
   15014:	lsr	r8, r9, #24
   15018:	ldr	lr, [sp, #72]	; 0x48
   1501c:	orr	r6, r6, r9, lsl #8
   15020:	orr	r7, r8, r7, lsl #8
   15024:	adc	ip, lr, ip
   15028:	adds	lr, r1, r6
   1502c:	adc	ip, ip, r7
   15030:	eor	sl, sl, lr
   15034:	eor	fp, fp, ip
   15038:	str	lr, [sp, #192]	; 0xc0
   1503c:	lsr	r1, fp, #16
   15040:	str	ip, [sp, #208]	; 0xd0
   15044:	lsr	ip, sl, #16
   15048:	ldr	lr, [sp, #188]	; 0xbc
   1504c:	orr	sl, r1, sl, lsl #16
   15050:	ldr	r1, [sp, #140]	; 0x8c
   15054:	orr	fp, ip, fp, lsl #16
   15058:	ldr	ip, [sp, #12]
   1505c:	adds	r3, r3, fp
   15060:	eor	r6, r6, r3
   15064:	lsl	r9, r6, #1
   15068:	adc	r1, r1, sl
   1506c:	eor	r7, r7, r1
   15070:	str	r1, [sp, #224]	; 0xe0
   15074:	adds	r1, ip, lr
   15078:	lsl	r8, r7, #1
   1507c:	ldr	ip, [sp, #104]	; 0x68
   15080:	orr	r7, r9, r7, lsr #31
   15084:	orr	r6, r8, r6, lsr #31
   15088:	ldr	r9, [sp, #60]	; 0x3c
   1508c:	ldr	lr, [sp, #212]	; 0xd4
   15090:	adc	ip, ip, lr
   15094:	adds	r1, r1, r7
   15098:	ldr	lr, [sp, #64]	; 0x40
   1509c:	adc	ip, ip, r6
   150a0:	eor	r4, r4, r1
   150a4:	eor	r0, r0, ip
   150a8:	adds	r2, r2, r0
   150ac:	eor	r7, r7, r2
   150b0:	adc	r5, r5, r4
   150b4:	lsr	r8, r7, #24
   150b8:	eor	r6, r6, r5
   150bc:	adds	r1, r9, r1
   150c0:	lsr	r9, r6, #24
   150c4:	adc	ip, lr, ip
   150c8:	ldr	lr, [sp, #160]	; 0xa0
   150cc:	orr	r6, r8, r6, lsl #8
   150d0:	orr	r7, r9, r7, lsl #8
   150d4:	adds	r9, r1, r6
   150d8:	eor	r0, r0, r9
   150dc:	adc	r8, ip, r7
   150e0:	lsr	ip, r0, #16
   150e4:	eor	r4, r4, r8
   150e8:	str	r9, [sp, #188]	; 0xbc
   150ec:	lsr	r1, r4, #16
   150f0:	str	r8, [sp, #212]	; 0xd4
   150f4:	orr	r4, ip, r4, lsl #16
   150f8:	ldr	r9, [sp, #124]	; 0x7c
   150fc:	orr	r0, r1, r0, lsl #16
   15100:	lsl	r1, lr, #1
   15104:	str	r4, [sp, #240]	; 0xf0
   15108:	adds	r4, r2, r4
   1510c:	adc	r5, r5, r0
   15110:	mov	r8, r4
   15114:	str	r0, [sp, #244]	; 0xf4
   15118:	ldr	r4, [sp, #156]	; 0x9c
   1511c:	str	r5, [sp, #140]	; 0x8c
   15120:	ldr	r5, [sp, #204]	; 0xcc
   15124:	str	r8, [sp, #204]	; 0xcc
   15128:	orr	r1, r1, r4, lsr #31
   1512c:	lsl	r2, r4, #1
   15130:	ldr	r4, [sp, #216]	; 0xd8
   15134:	adds	r0, r9, r5
   15138:	ldr	r5, [sp, #128]	; 0x80
   1513c:	orr	r2, r2, lr, lsr #31
   15140:	ldr	lr, [sp, #224]	; 0xe0
   15144:	adc	ip, r5, r4
   15148:	mov	r4, r8
   1514c:	eor	r4, r4, r6
   15150:	adds	r0, r0, r2
   15154:	adc	ip, ip, r1
   15158:	str	r4, [sp, #156]	; 0x9c
   1515c:	ldr	r4, [sp, #140]	; 0x8c
   15160:	eor	r7, r4, r7
   15164:	ldr	r4, [sp, #228]	; 0xe4
   15168:	str	r7, [sp, #160]	; 0xa0
   1516c:	ldr	r7, [sp, #48]	; 0x30
   15170:	eor	r8, r0, r4
   15174:	ldr	r4, [sp, #236]	; 0xec
   15178:	eor	r6, ip, r4
   1517c:	ldr	r4, [sp, #44]	; 0x2c
   15180:	adds	r3, r3, r6
   15184:	adc	lr, lr, r8
   15188:	eor	r2, r2, r3
   1518c:	eor	r1, r1, lr
   15190:	lsr	r5, r1, #24
   15194:	adds	r0, r4, r0
   15198:	lsr	r4, r2, #24
   1519c:	orr	r5, r5, r2, lsl #8
   151a0:	adc	ip, r7, ip
   151a4:	orr	r4, r4, r1, lsl #8
   151a8:	ldr	r1, [sp, #172]	; 0xac
   151ac:	adds	r0, r0, r4
   151b0:	adc	r7, ip, r5
   151b4:	eor	r6, r6, r0
   151b8:	ldr	ip, [sp, #176]	; 0xb0
   151bc:	eor	r8, r8, r7
   151c0:	str	r0, [sp, #216]	; 0xd8
   151c4:	str	r7, [sp, #224]	; 0xe0
   151c8:	lsr	r7, r6, #16
   151cc:	lsr	r2, r8, #16
   151d0:	orr	r9, r7, r8, lsl #16
   151d4:	orr	r6, r2, r6, lsl #16
   151d8:	adds	r3, r3, r9
   151dc:	lsl	r8, ip, #1
   151e0:	mov	r7, r3
   151e4:	adc	r3, lr, r6
   151e8:	lsl	r2, r1, #1
   151ec:	eor	r5, r5, r3
   151f0:	orr	r8, r8, r1, lsr #31
   151f4:	ldrd	r0, [sp, #96]	; 0x60
   151f8:	eor	r4, r4, r7
   151fc:	orr	r2, r2, ip, lsr #31
   15200:	str	r7, [sp, #176]	; 0xb0
   15204:	str	r9, [sp, #228]	; 0xe4
   15208:	mov	r9, r3
   1520c:	ldr	r7, [sp, #136]	; 0x88
   15210:	str	r6, [sp, #236]	; 0xec
   15214:	ldr	r3, [sp, #200]	; 0xc8
   15218:	str	r9, [sp, #200]	; 0xc8
   1521c:	ldr	lr, [sp, #220]	; 0xdc
   15220:	adds	r3, r0, r3
   15224:	adc	r1, r1, lr
   15228:	adds	r3, r3, r2
   1522c:	ldr	lr, [sp, #52]	; 0x34
   15230:	adc	r1, r1, r8
   15234:	eor	fp, fp, r3
   15238:	eor	sl, sl, r1
   1523c:	adds	r0, r7, sl
   15240:	ldr	r7, [sp, #144]	; 0x90
   15244:	eor	r2, r2, r0
   15248:	adc	r6, r7, fp
   1524c:	ldr	r7, [sp, #56]	; 0x38
   15250:	adds	r3, lr, r3
   15254:	eor	r8, r8, r6
   15258:	lsr	lr, r2, #24
   1525c:	lsr	r9, r8, #24
   15260:	orr	lr, lr, r8, lsl #8
   15264:	orr	r9, r9, r2, lsl #8
   15268:	adc	r1, r7, r1
   1526c:	adds	r3, r3, lr
   15270:	lsl	r7, r5, #1
   15274:	adc	r1, r1, r9
   15278:	eor	sl, sl, r3
   1527c:	eor	fp, fp, r1
   15280:	lsr	r2, sl, #16
   15284:	str	r3, [sp, #172]	; 0xac
   15288:	lsr	r3, fp, #16
   1528c:	str	r1, [sp, #220]	; 0xdc
   15290:	orr	fp, r2, fp, lsl #16
   15294:	orr	r8, r3, sl, lsl #16
   15298:	ldr	r3, [sp, #164]	; 0xa4
   1529c:	adds	r0, r0, fp
   152a0:	orr	r7, r7, r4, lsr #31
   152a4:	adc	r6, r6, r8
   152a8:	ldr	r1, [sp, #168]	; 0xa8
   152ac:	eor	lr, r0, lr
   152b0:	str	fp, [sp, #248]	; 0xf8
   152b4:	str	r8, [sp, #252]	; 0xfc
   152b8:	lsl	ip, r3, #1
   152bc:	ldr	fp, [sp, #28]
   152c0:	orr	ip, ip, r1, lsr #31
   152c4:	str	lr, [sp, #144]	; 0x90
   152c8:	ldr	r8, [sp, #192]	; 0xc0
   152cc:	lsl	lr, r1, #1
   152d0:	eor	r1, r6, r9
   152d4:	orr	lr, lr, r3, lsr #31
   152d8:	str	r1, [sp, #164]	; 0xa4
   152dc:	lsl	r3, r4, #1
   152e0:	adds	r2, fp, r8
   152e4:	ldr	r8, [sp, #32]
   152e8:	orr	r3, r3, r5, lsr #31
   152ec:	ldr	fp, [sp, #208]	; 0xd0
   152f0:	adc	r8, r8, fp
   152f4:	ldr	fp, [sp, #152]	; 0x98
   152f8:	adds	r2, r2, ip
   152fc:	adc	r8, r8, lr
   15300:	eor	r9, r2, fp
   15304:	ldr	fp, [sp, #232]	; 0xe8
   15308:	eor	r4, r8, fp
   1530c:	ldr	fp, [sp, #196]	; 0xc4
   15310:	adds	r1, fp, r4
   15314:	ldr	fp, [sp, #148]	; 0x94
   15318:	eor	ip, ip, r1
   1531c:	adc	r5, fp, r9
   15320:	ldr	fp, [sp, #16]
   15324:	eor	lr, lr, r5
   15328:	str	r5, [sp, #136]	; 0x88
   1532c:	lsr	sl, lr, #24
   15330:	ldr	r5, [sp, #20]
   15334:	adds	r2, fp, r2
   15338:	lsr	fp, ip, #24
   1533c:	orr	ip, sl, ip, lsl #8
   15340:	ldr	sl, [sp, #212]	; 0xd4
   15344:	orr	lr, fp, lr, lsl #8
   15348:	adc	r8, r5, r8
   1534c:	adds	r5, r2, lr
   15350:	adc	fp, r8, ip
   15354:	eor	r4, r4, r5
   15358:	eor	r9, r9, fp
   1535c:	lsr	r8, r4, #16
   15360:	str	r5, [sp, #192]	; 0xc0
   15364:	lsr	r2, r9, #16
   15368:	ldr	r5, [sp, #136]	; 0x88
   1536c:	orr	r8, r8, r9, lsl #16
   15370:	orr	r4, r2, r4, lsl #16
   15374:	ldr	r9, [sp, #108]	; 0x6c
   15378:	adds	r1, r1, r8
   1537c:	ldr	r2, [sp, #188]	; 0xbc
   15380:	eor	lr, lr, r1
   15384:	adc	r5, r5, r4
   15388:	eor	ip, ip, r5
   1538c:	adds	r2, r9, r2
   15390:	ldr	r9, [sp, #112]	; 0x70
   15394:	adc	r9, r9, sl
   15398:	adds	r2, r2, r3
   1539c:	eor	sl, r2, r8
   153a0:	ldr	r8, [sp, #68]	; 0x44
   153a4:	adc	r9, r9, r7
   153a8:	eor	r4, r4, r9
   153ac:	adds	r0, r0, r4
   153b0:	adc	r6, r6, sl
   153b4:	eor	r3, r3, r0
   153b8:	eor	r7, r7, r6
   153bc:	adds	r2, r8, r2
   153c0:	lsr	r8, r3, #24
   153c4:	str	r2, [sp, #148]	; 0x94
   153c8:	lsr	r2, r7, #24
   153cc:	orr	r7, r8, r7, lsl #8
   153d0:	str	r2, [sp, #136]	; 0x88
   153d4:	ldr	r2, [sp, #72]	; 0x48
   153d8:	adc	r9, r2, r9
   153dc:	ldr	r2, [sp, #136]	; 0x88
   153e0:	orr	r3, r2, r3, lsl #8
   153e4:	ldr	r2, [sp, #148]	; 0x94
   153e8:	adds	r2, r2, r7
   153ec:	adc	r8, r9, r3
   153f0:	eor	r4, r4, r2
   153f4:	lsr	r9, r4, #16
   153f8:	str	r2, [sp, #188]	; 0xbc
   153fc:	str	r8, [sp, #196]	; 0xc4
   15400:	eor	r8, r8, sl
   15404:	lsr	r2, r8, #16
   15408:	orr	sl, r9, r8, lsl #16
   1540c:	ldr	r9, [sp, #164]	; 0xa4
   15410:	orr	r4, r2, r4, lsl #16
   15414:	adds	r0, r0, sl
   15418:	str	r0, [sp, #136]	; 0x88
   1541c:	str	r4, [sp, #148]	; 0x94
   15420:	lsl	r8, r9, #1
   15424:	ldr	r0, [sp, #148]	; 0x94
   15428:	str	sl, [sp, #232]	; 0xe8
   1542c:	ldr	sl, [sp, #144]	; 0x90
   15430:	adc	r6, r6, r0
   15434:	ldr	r0, [sp, #216]	; 0xd8
   15438:	str	r6, [sp, #144]	; 0x90
   1543c:	lsl	r4, sl, #1
   15440:	ldr	r6, [sp, #132]	; 0x84
   15444:	orr	r8, r8, sl, lsr #31
   15448:	ldr	sl, [sp, #24]
   1544c:	adds	r0, r6, r0
   15450:	ldr	r6, [sp, #224]	; 0xe0
   15454:	adc	r2, sl, r6
   15458:	ldr	sl, [sp, #116]	; 0x74
   1545c:	ldr	r6, [sp, #136]	; 0x88
   15460:	eor	r7, r6, r7
   15464:	orr	r6, r4, r9, lsr #31
   15468:	ldr	r4, [sp, #240]	; 0xf0
   1546c:	str	r7, [sp, #152]	; 0x98
   15470:	ldr	r7, [sp, #144]	; 0x90
   15474:	eor	r3, r7, r3
   15478:	str	r3, [sp, #164]	; 0xa4
   1547c:	adds	r3, r0, r6
   15480:	ldr	r0, [sp, #244]	; 0xf4
   15484:	adc	r2, r2, r8
   15488:	eor	r4, r3, r4
   1548c:	eor	r0, r2, r0
   15490:	adds	r1, r1, r0
   15494:	adc	r5, r5, r4
   15498:	eor	r6, r6, r1
   1549c:	adds	r3, sl, r3
   154a0:	ldr	sl, [sp, #120]	; 0x78
   154a4:	eor	r8, r8, r5
   154a8:	lsr	r7, r6, #24
   154ac:	lsr	r9, r8, #24
   154b0:	orr	r8, r7, r8, lsl #8
   154b4:	orr	r6, r9, r6, lsl #8
   154b8:	adc	r2, sl, r2
   154bc:	adds	r3, r3, r8
   154c0:	lsl	r7, ip, #1
   154c4:	adc	r2, r2, r6
   154c8:	eor	r0, r0, r3
   154cc:	eor	r4, r4, r2
   154d0:	str	r3, [sp, #208]	; 0xd0
   154d4:	str	r2, [sp, #212]	; 0xd4
   154d8:	lsr	r2, r0, #16
   154dc:	lsr	r3, r4, #16
   154e0:	orr	r4, r2, r4, lsl #16
   154e4:	orr	r0, r3, r0, lsl #16
   154e8:	ldr	r3, [sp, #172]	; 0xac
   154ec:	adds	r1, r1, r4
   154f0:	lsl	r2, lr, #1
   154f4:	mov	r9, r1
   154f8:	adc	r1, r5, r0
   154fc:	ldr	r5, [sp, #220]	; 0xdc
   15500:	mov	sl, r1
   15504:	orr	ip, r2, ip, lsr #31
   15508:	ldr	r1, [sp, #84]	; 0x54
   1550c:	eor	r6, sl, r6
   15510:	orr	lr, r7, lr, lsr #31
   15514:	str	r6, [sp, #172]	; 0xac
   15518:	ldr	r2, [sp, #228]	; 0xe4
   1551c:	str	sl, [sp, #220]	; 0xdc
   15520:	adds	r3, r1, r3
   15524:	ldr	r6, [sp, #236]	; 0xec
   15528:	str	r9, [sp, #216]	; 0xd8
   1552c:	ldr	r1, [sp, #88]	; 0x58
   15530:	ldr	sl, [sp, #80]	; 0x50
   15534:	adc	r1, r1, r5
   15538:	eor	r5, r9, r8
   1553c:	ldr	r8, [sp, #76]	; 0x4c
   15540:	adds	r3, r3, ip
   15544:	str	r5, [sp, #168]	; 0xa8
   15548:	adc	r1, r1, lr
   1554c:	eor	r7, r3, r2
   15550:	ldr	r5, [sp, #204]	; 0xcc
   15554:	eor	r6, r1, r6
   15558:	adds	r2, r5, r6
   1555c:	ldr	r5, [sp, #140]	; 0x8c
   15560:	eor	ip, ip, r2
   15564:	lsr	r9, ip, #24
   15568:	adc	r5, r5, r7
   1556c:	adds	r3, r8, r3
   15570:	eor	lr, lr, r5
   15574:	adc	r1, sl, r1
   15578:	ldr	sl, [sp, #160]	; 0xa0
   1557c:	lsr	r8, lr, #24
   15580:	orr	lr, r9, lr, lsl #8
   15584:	orr	ip, r8, ip, lsl #8
   15588:	adds	r3, r3, lr
   1558c:	adc	r1, r1, ip
   15590:	eor	r6, r6, r3
   15594:	lsl	r9, sl, #1
   15598:	mov	r8, r1
   1559c:	str	r3, [sp, #204]	; 0xcc
   155a0:	lsr	r1, r6, #16
   155a4:	eor	r7, r7, r8
   155a8:	lsr	r3, r7, #16
   155ac:	str	r8, [sp, #224]	; 0xe0
   155b0:	orr	r1, r1, r7, lsl #16
   155b4:	orr	r6, r3, r6, lsl #16
   155b8:	ldr	r3, [sp, #4]
   155bc:	adds	r2, r2, r1
   155c0:	mov	r8, r6
   155c4:	ldr	r6, [sp, #156]	; 0x9c
   155c8:	eor	lr, r2, lr
   155cc:	adc	r5, r5, r8
   155d0:	str	r1, [sp, #228]	; 0xe4
   155d4:	eor	ip, r5, ip
   155d8:	ldr	r1, [sp, #192]	; 0xc0
   155dc:	str	lr, [sp, #140]	; 0x8c
   155e0:	orr	r9, r9, r6, lsr #31
   155e4:	ldr	lr, [sp, #176]	; 0xb0
   155e8:	lsl	r7, r6, #1
   155ec:	str	ip, [sp, #156]	; 0x9c
   155f0:	ldr	r6, [sp, #8]
   155f4:	adds	r1, r3, r1
   155f8:	orr	r7, r7, sl, lsr #31
   155fc:	str	r8, [sp, #236]	; 0xec
   15600:	ldr	r3, [sp, #252]	; 0xfc
   15604:	adc	r8, r6, fp
   15608:	adds	r1, r1, r7
   1560c:	ldr	fp, [sp, #248]	; 0xf8
   15610:	adc	ip, r8, r9
   15614:	eor	sl, ip, r3
   15618:	ldr	r8, [sp, #36]	; 0x24
   1561c:	adds	r3, lr, sl
   15620:	ldr	lr, [sp, #200]	; 0xc8
   15624:	eor	r7, r7, r3
   15628:	eor	fp, r1, fp
   1562c:	lsr	r6, r7, #24
   15630:	adc	lr, lr, fp
   15634:	adds	r1, r8, r1
   15638:	eor	r9, r9, lr
   1563c:	str	lr, [sp, #160]	; 0xa0
   15640:	lsr	r8, r9, #24
   15644:	ldr	lr, [sp, #40]	; 0x28
   15648:	orr	r6, r6, r9, lsl #8
   1564c:	orr	r7, r8, r7, lsl #8
   15650:	adc	ip, lr, ip
   15654:	adds	lr, r1, r6
   15658:	adc	r9, ip, r7
   1565c:	eor	sl, sl, lr
   15660:	eor	fp, fp, r9
   15664:	lsr	ip, sl, #16
   15668:	str	lr, [sp, #176]	; 0xb0
   1566c:	lsr	r1, fp, #16
   15670:	ldr	lr, [sp, #64]	; 0x40
   15674:	orr	fp, ip, fp, lsl #16
   15678:	str	r9, [sp, #192]	; 0xc0
   1567c:	orr	sl, r1, sl, lsl #16
   15680:	ldr	r1, [sp, #160]	; 0xa0
   15684:	adds	r3, r3, fp
   15688:	ldr	ip, [sp, #188]	; 0xbc
   1568c:	eor	r6, r6, r3
   15690:	lsl	r9, r6, #1
   15694:	adc	r1, r1, sl
   15698:	eor	r7, r7, r1
   1569c:	str	r1, [sp, #200]	; 0xc8
   156a0:	lsl	r8, r7, #1
   156a4:	ldr	r1, [sp, #60]	; 0x3c
   156a8:	orr	r7, r9, r7, lsr #31
   156ac:	orr	r6, r8, r6, lsr #31
   156b0:	ldr	r8, [sp, #116]	; 0x74
   156b4:	adds	r1, r1, ip
   156b8:	ldr	ip, [sp, #196]	; 0xc4
   156bc:	adc	ip, lr, ip
   156c0:	adds	r1, r1, r7
   156c4:	ldr	lr, [sp, #120]	; 0x78
   156c8:	adc	ip, ip, r6
   156cc:	eor	r4, r4, r1
   156d0:	eor	r0, r0, ip
   156d4:	adds	r2, r2, r0
   156d8:	adc	r5, r5, r4
   156dc:	eor	r7, r7, r2
   156e0:	adds	r1, r8, r1
   156e4:	eor	r6, r6, r5
   156e8:	lsr	r8, r7, #24
   156ec:	lsr	r9, r6, #24
   156f0:	adc	ip, lr, ip
   156f4:	ldr	lr, [sp, #164]	; 0xa4
   156f8:	orr	r6, r8, r6, lsl #8
   156fc:	orr	r7, r9, r7, lsl #8
   15700:	adds	r9, r1, r6
   15704:	adc	ip, ip, r7
   15708:	eor	r0, r0, r9
   1570c:	mov	r8, ip
   15710:	lsr	ip, r0, #16
   15714:	str	r9, [sp, #188]	; 0xbc
   15718:	eor	r4, r4, r8
   1571c:	lsr	r1, r4, #16
   15720:	str	r8, [sp, #196]	; 0xc4
   15724:	orr	r4, ip, r4, lsl #16
   15728:	orr	r0, r1, r0, lsl #16
   1572c:	adds	r2, r2, r4
   15730:	lsl	r1, lr, #1
   15734:	adc	ip, r5, r0
   15738:	ldr	r5, [sp, #208]	; 0xd0
   1573c:	mov	r9, r2
   15740:	mov	r8, ip
   15744:	str	r4, [sp, #240]	; 0xf0
   15748:	ldr	ip, [sp, #4]
   1574c:	eor	r7, r8, r7
   15750:	ldr	r4, [sp, #152]	; 0x98
   15754:	str	r0, [sp, #244]	; 0xf4
   15758:	str	r7, [sp, #160]	; 0xa0
   1575c:	adds	r0, ip, r5
   15760:	ldr	r7, [sp, #88]	; 0x58
   15764:	str	r9, [sp, #208]	; 0xd0
   15768:	orr	r1, r1, r4, lsr #31
   1576c:	ldr	r5, [sp, #212]	; 0xd4
   15770:	lsl	r2, r4, #1
   15774:	str	r8, [sp, #212]	; 0xd4
   15778:	ldr	r4, [sp, #8]
   1577c:	orr	r2, r2, lr, lsr #31
   15780:	ldr	lr, [sp, #200]	; 0xc8
   15784:	adc	ip, r4, r5
   15788:	eor	r4, r9, r6
   1578c:	adds	r0, r0, r2
   15790:	str	r4, [sp, #152]	; 0x98
   15794:	adc	ip, ip, r1
   15798:	ldr	r4, [sp, #228]	; 0xe4
   1579c:	eor	r8, r0, r4
   157a0:	ldr	r4, [sp, #236]	; 0xec
   157a4:	eor	r6, ip, r4
   157a8:	ldr	r4, [sp, #84]	; 0x54
   157ac:	adds	r3, r3, r6
   157b0:	adc	lr, lr, r8
   157b4:	eor	r2, r2, r3
   157b8:	eor	r1, r1, lr
   157bc:	lsr	r5, r1, #24
   157c0:	adds	r0, r4, r0
   157c4:	lsr	r4, r2, #24
   157c8:	orr	r5, r5, r2, lsl #8
   157cc:	adc	ip, r7, ip
   157d0:	orr	r4, r4, r1, lsl #8
   157d4:	adds	r2, r0, r4
   157d8:	adc	r1, ip, r5
   157dc:	eor	r6, r6, r2
   157e0:	ldr	ip, [sp, #172]	; 0xac
   157e4:	eor	r8, r8, r1
   157e8:	lsr	r7, r6, #16
   157ec:	str	r2, [sp, #164]	; 0xa4
   157f0:	lsr	r2, r8, #16
   157f4:	str	r1, [sp, #200]	; 0xc8
   157f8:	orr	r0, r7, r8, lsl #16
   157fc:	ldr	r1, [sp, #168]	; 0xa8
   15800:	orr	r2, r2, r6, lsl #16
   15804:	adds	r3, r3, r0
   15808:	lsl	r8, ip, #1
   1580c:	mov	r7, r2
   15810:	mov	r6, r3
   15814:	adc	r3, lr, r7
   15818:	ldr	lr, [sp, #204]	; 0xcc
   1581c:	eor	r4, r4, r6
   15820:	eor	r5, r5, r3
   15824:	str	r0, [sp, #228]	; 0xe4
   15828:	mov	r0, r3
   1582c:	ldr	r3, [sp, #76]	; 0x4c
   15830:	orr	r8, r8, r1, lsr #31
   15834:	lsl	r2, r1, #1
   15838:	str	r6, [sp, #172]	; 0xac
   1583c:	ldr	r1, [sp, #80]	; 0x50
   15840:	orr	r2, r2, ip, lsr #31
   15844:	str	r0, [sp, #204]	; 0xcc
   15848:	str	r7, [sp, #236]	; 0xec
   1584c:	adds	r3, r3, lr
   15850:	ldr	r0, [sp, #136]	; 0x88
   15854:	ldr	lr, [sp, #224]	; 0xe0
   15858:	ldr	ip, [sp, #72]	; 0x48
   1585c:	ldr	r7, [sp, #144]	; 0x90
   15860:	adc	r1, r1, lr
   15864:	adds	r3, r3, r2
   15868:	adc	r1, r1, r8
   1586c:	eor	fp, fp, r3
   15870:	eor	sl, sl, r1
   15874:	adds	r0, r0, sl
   15878:	adc	r6, r7, fp
   1587c:	ldr	r7, [sp, #68]	; 0x44
   15880:	eor	r2, r2, r0
   15884:	eor	r8, r8, r6
   15888:	lsr	lr, r2, #24
   1588c:	lsr	r9, r8, #24
   15890:	orr	lr, lr, r8, lsl #8
   15894:	orr	r9, r9, r2, lsl #8
   15898:	adds	r3, r7, r3
   1589c:	lsl	r7, r5, #1
   158a0:	adc	r1, ip, r1
   158a4:	adds	r3, r3, lr
   158a8:	adc	r1, r1, r9
   158ac:	eor	sl, sl, r3
   158b0:	orr	r7, r7, r4, lsr #31
   158b4:	eor	fp, fp, r1
   158b8:	lsr	r2, sl, #16
   158bc:	str	r3, [sp, #168]	; 0xa8
   158c0:	lsr	r3, fp, #16
   158c4:	str	r1, [sp, #224]	; 0xe0
   158c8:	orr	fp, r2, fp, lsl #16
   158cc:	orr	r8, r3, sl, lsl #16
   158d0:	ldr	r3, [sp, #140]	; 0x8c
   158d4:	adds	r0, r0, fp
   158d8:	adc	r6, r6, r8
   158dc:	str	fp, [sp, #248]	; 0xf8
   158e0:	eor	lr, r0, lr
   158e4:	ldr	r2, [sp, #176]	; 0xb0
   158e8:	eor	r9, r6, r9
   158ec:	str	r8, [sp, #252]	; 0xfc
   158f0:	ldr	r8, [sp, #108]	; 0x6c
   158f4:	lsl	ip, r3, #1
   158f8:	str	lr, [sp, #144]	; 0x90
   158fc:	ldr	fp, [sp, #112]	; 0x70
   15900:	ldr	r1, [sp, #156]	; 0x9c
   15904:	adds	r2, r8, r2
   15908:	str	r9, [sp, #156]	; 0x9c
   1590c:	ldr	r8, [sp, #192]	; 0xc0
   15910:	orr	ip, ip, r1, lsr #31
   15914:	lsl	lr, r1, #1
   15918:	adc	r8, fp, r8
   1591c:	ldr	fp, [sp, #232]	; 0xe8
   15920:	adds	r2, r2, ip
   15924:	orr	lr, lr, r3, lsr #31
   15928:	lsl	r3, r4, #1
   1592c:	ldr	r4, [sp, #148]	; 0x94
   15930:	adc	r8, r8, lr
   15934:	orr	r3, r3, r5, lsr #31
   15938:	ldr	r5, [sp, #220]	; 0xdc
   1593c:	eor	r9, r2, fp
   15940:	ldr	fp, [sp, #216]	; 0xd8
   15944:	eor	r4, r8, r4
   15948:	adds	r1, fp, r4
   1594c:	ldr	fp, [sp, #44]	; 0x2c
   15950:	adc	r5, r5, r9
   15954:	eor	ip, ip, r1
   15958:	eor	lr, lr, r5
   1595c:	lsr	sl, lr, #24
   15960:	adds	r2, fp, r2
   15964:	lsr	fp, ip, #24
   15968:	orr	ip, sl, ip, lsl #8
   1596c:	ldr	sl, [sp, #100]	; 0x64
   15970:	str	r2, [sp, #136]	; 0x88
   15974:	orr	lr, fp, lr, lsl #8
   15978:	ldr	r2, [sp, #48]	; 0x30
   1597c:	adc	r8, r2, r8
   15980:	ldr	r2, [sp, #136]	; 0x88
   15984:	adds	r2, r2, lr
   15988:	eor	r4, r4, r2
   1598c:	adc	fp, r8, ip
   15990:	lsr	r8, r4, #16
   15994:	eor	r9, r9, fp
   15998:	str	r2, [sp, #176]	; 0xb0
   1599c:	lsr	r2, r9, #16
   159a0:	orr	r8, r8, r9, lsl #16
   159a4:	ldr	r9, [sp, #96]	; 0x60
   159a8:	orr	r4, r2, r4, lsl #16
   159ac:	adds	r1, r1, r8
   159b0:	ldr	r2, [sp, #188]	; 0xbc
   159b4:	adc	r5, r5, r4
   159b8:	str	r1, [sp, #136]	; 0x88
   159bc:	eor	ip, ip, r5
   159c0:	ldr	r1, [sp, #196]	; 0xc4
   159c4:	adds	r2, r9, r2
   159c8:	adc	r9, sl, r1
   159cc:	adds	r2, r2, r3
   159d0:	ldr	r1, [sp, #136]	; 0x88
   159d4:	adc	r9, r9, r7
   159d8:	eor	sl, r2, r8
   159dc:	eor	r4, r4, r9
   159e0:	ldr	r8, [sp, #132]	; 0x84
   159e4:	adds	r0, r0, r4
   159e8:	adc	r6, r6, sl
   159ec:	eor	r3, r3, r0
   159f0:	eor	r7, r7, r6
   159f4:	eor	lr, lr, r1
   159f8:	lsr	r1, r7, #24
   159fc:	adds	r2, r8, r2
   15a00:	lsr	r8, r3, #24
   15a04:	str	r1, [sp, #140]	; 0x8c
   15a08:	orr	r7, r8, r7, lsl #8
   15a0c:	ldr	r1, [sp, #24]
   15a10:	ldr	r8, [sp, #140]	; 0x8c
   15a14:	adc	r9, r1, r9
   15a18:	ldr	r1, [sp, #200]	; 0xc8
   15a1c:	orr	r3, r8, r3, lsl #8
   15a20:	adds	r8, r2, r7
   15a24:	eor	r4, r4, r8
   15a28:	adc	r9, r9, r3
   15a2c:	strd	r8, [sp, #188]	; 0xbc
   15a30:	eor	r8, r9, sl
   15a34:	lsr	r9, r4, #16
   15a38:	lsr	r2, r8, #16
   15a3c:	orr	sl, r9, r8, lsl #16
   15a40:	orr	r4, r2, r4, lsl #16
   15a44:	mov	r2, r4
   15a48:	adds	r4, r0, sl
   15a4c:	ldr	r0, [sp, #124]	; 0x7c
   15a50:	adc	r6, r6, r2
   15a54:	ldr	r9, [sp, #156]	; 0x9c
   15a58:	str	r4, [sp, #140]	; 0x8c
   15a5c:	str	sl, [sp, #232]	; 0xe8
   15a60:	ldr	sl, [sp, #144]	; 0x90
   15a64:	str	r6, [sp, #144]	; 0x90
   15a68:	ldr	r6, [sp, #140]	; 0x8c
   15a6c:	lsl	r8, r9, #1
   15a70:	str	r2, [sp, #256]	; 0x100
   15a74:	ldr	r2, [sp, #164]	; 0xa4
   15a78:	lsl	r4, sl, #1
   15a7c:	orr	r8, r8, sl, lsr #31
   15a80:	ldr	sl, [sp, #20]
   15a84:	eor	r7, r6, r7
   15a88:	orr	r6, r4, r9, lsr #31
   15a8c:	ldr	r4, [sp, #240]	; 0xf0
   15a90:	adds	r0, r0, r2
   15a94:	str	r7, [sp, #148]	; 0x94
   15a98:	ldr	r2, [sp, #128]	; 0x80
   15a9c:	ldr	r7, [sp, #144]	; 0x90
   15aa0:	adc	r2, r2, r1
   15aa4:	ldr	r1, [sp, #136]	; 0x88
   15aa8:	eor	r9, r7, r3
   15aac:	adds	r3, r0, r6
   15ab0:	ldr	r0, [sp, #244]	; 0xf4
   15ab4:	adc	r2, r2, r8
   15ab8:	eor	r4, r3, r4
   15abc:	str	r9, [sp, #156]	; 0x9c
   15ac0:	ldr	r9, [sp, #16]
   15ac4:	eor	r0, r2, r0
   15ac8:	adds	r1, r1, r0
   15acc:	adc	r5, r5, r4
   15ad0:	eor	r6, r6, r1
   15ad4:	eor	r8, r8, r5
   15ad8:	lsr	r7, r6, #24
   15adc:	adds	r3, r9, r3
   15ae0:	lsr	r9, r8, #24
   15ae4:	adc	r2, sl, r2
   15ae8:	orr	r8, r7, r8, lsl #8
   15aec:	orr	r6, r9, r6, lsl #8
   15af0:	adds	r3, r3, r8
   15af4:	adc	r2, r2, r6
   15af8:	eor	r0, r0, r3
   15afc:	mov	r7, r2
   15b00:	lsr	r2, r0, #16
   15b04:	str	r3, [sp, #196]	; 0xc4
   15b08:	eor	r4, r4, r7
   15b0c:	lsr	r3, r4, #16
   15b10:	str	r7, [sp, #200]	; 0xc8
   15b14:	orr	r4, r2, r4, lsl #16
   15b18:	orr	r3, r3, r0, lsl #16
   15b1c:	adds	r0, r1, r4
   15b20:	lsl	r7, ip, #1
   15b24:	ldr	r1, [sp, #224]	; 0xe0
   15b28:	adc	r5, r5, r3
   15b2c:	lsl	r2, lr, #1
   15b30:	mov	sl, r5
   15b34:	str	r3, [sp, #136]	; 0x88
   15b38:	orr	lr, r7, lr, lsr #31
   15b3c:	ldr	r5, [sp, #36]	; 0x24
   15b40:	orr	ip, r2, ip, lsr #31
   15b44:	eor	r6, sl, r6
   15b48:	str	r0, [sp, #216]	; 0xd8
   15b4c:	ldr	r7, [sp, #40]	; 0x28
   15b50:	str	sl, [sp, #220]	; 0xdc
   15b54:	ldr	r3, [sp, #168]	; 0xa8
   15b58:	ldr	sl, [sp, #104]	; 0x68
   15b5c:	ldr	r2, [sp, #228]	; 0xe4
   15b60:	adds	r3, r5, r3
   15b64:	mov	r5, r0
   15b68:	adc	r1, r7, r1
   15b6c:	eor	r5, r5, r8
   15b70:	ldr	r8, [sp, #12]
   15b74:	adds	r3, r3, ip
   15b78:	str	r5, [sp, #164]	; 0xa4
   15b7c:	adc	r1, r1, lr
   15b80:	eor	r7, r3, r2
   15b84:	ldr	r5, [sp, #208]	; 0xd0
   15b88:	ldr	r2, [sp, #236]	; 0xec
   15b8c:	str	r6, [sp, #168]	; 0xa8
   15b90:	eor	r6, r1, r2
   15b94:	adds	r2, r5, r6
   15b98:	ldr	r5, [sp, #212]	; 0xd4
   15b9c:	eor	ip, ip, r2
   15ba0:	lsr	r9, ip, #24
   15ba4:	adc	r5, r5, r7
   15ba8:	adds	r3, r8, r3
   15bac:	eor	lr, lr, r5
   15bb0:	adc	r1, sl, r1
   15bb4:	ldr	sl, [sp, #160]	; 0xa0
   15bb8:	lsr	r8, lr, #24
   15bbc:	orr	lr, r9, lr, lsl #8
   15bc0:	orr	ip, r8, ip, lsl #8
   15bc4:	adds	r3, r3, lr
   15bc8:	adc	r1, r1, ip
   15bcc:	eor	r6, r6, r3
   15bd0:	lsl	r9, sl, #1
   15bd4:	eor	r7, r7, r1
   15bd8:	str	r3, [sp, #208]	; 0xd0
   15bdc:	str	r1, [sp, #212]	; 0xd4
   15be0:	lsr	r1, r6, #16
   15be4:	lsr	r3, r7, #16
   15be8:	orr	r0, r1, r7, lsl #16
   15bec:	orr	r6, r3, r6, lsl #16
   15bf0:	ldr	r3, [sp, #28]
   15bf4:	adds	r2, r2, r0
   15bf8:	adc	r5, r5, r6
   15bfc:	mov	r1, r6
   15c00:	ldr	r6, [sp, #152]	; 0x98
   15c04:	eor	lr, r2, lr
   15c08:	strd	r0, [sp, #224]	; 0xe0
   15c0c:	ldr	r1, [sp, #176]	; 0xb0
   15c10:	orr	r9, r9, r6, lsr #31
   15c14:	str	lr, [sp, #152]	; 0x98
   15c18:	eor	lr, r5, ip
   15c1c:	lsl	r7, r6, #1
   15c20:	ldr	r6, [sp, #32]
   15c24:	str	lr, [sp, #160]	; 0xa0
   15c28:	orr	r7, r7, sl, lsr #31
   15c2c:	ldr	lr, [sp, #204]	; 0xcc
   15c30:	adds	r1, r3, r1
   15c34:	ldr	r3, [sp, #252]	; 0xfc
   15c38:	adc	r8, r6, fp
   15c3c:	adds	r1, r1, r7
   15c40:	adc	ip, r8, r9
   15c44:	ldr	r6, [sp, #52]	; 0x34
   15c48:	ldr	fp, [sp, #248]	; 0xf8
   15c4c:	eor	sl, ip, r3
   15c50:	ldr	r3, [sp, #172]	; 0xac
   15c54:	eor	fp, r1, fp
   15c58:	adds	r3, r3, sl
   15c5c:	adc	lr, lr, fp
   15c60:	eor	r7, r7, r3
   15c64:	adds	r0, r6, r1
   15c68:	ldr	r1, [sp, #56]	; 0x38
   15c6c:	eor	r9, r9, lr
   15c70:	lsr	r6, r7, #24
   15c74:	lsr	r8, r9, #24
   15c78:	orr	r6, r6, r9, lsl #8
   15c7c:	orr	r7, r8, r7, lsl #8
   15c80:	adc	ip, r1, ip
   15c84:	adds	r0, r0, r6
   15c88:	adc	ip, ip, r7
   15c8c:	eor	sl, sl, r0
   15c90:	mov	r8, ip
   15c94:	lsr	ip, sl, #16
   15c98:	str	r0, [sp, #172]	; 0xac
   15c9c:	eor	fp, fp, r8
   15ca0:	ldr	r0, [sp, #192]	; 0xc0
   15ca4:	lsr	r1, fp, #16
   15ca8:	str	r8, [sp, #176]	; 0xb0
   15cac:	orr	fp, ip, fp, lsl #16
   15cb0:	ldr	ip, [sp, #68]	; 0x44
   15cb4:	orr	sl, r1, sl, lsl #16
   15cb8:	ldr	r8, [sp, #188]	; 0xbc
   15cbc:	adds	r3, r3, fp
   15cc0:	adc	lr, lr, sl
   15cc4:	eor	r6, r6, r3
   15cc8:	eor	r7, r7, lr
   15ccc:	lsl	r9, r6, #1
   15cd0:	adds	r1, ip, r8
   15cd4:	ldr	ip, [sp, #72]	; 0x48
   15cd8:	lsl	r8, r7, #1
   15cdc:	orr	r7, r9, r7, lsr #31
   15ce0:	orr	r6, r8, r6, lsr #31
   15ce4:	ldr	r9, [sp, #52]	; 0x34
   15ce8:	adc	ip, ip, r0
   15cec:	ldr	r0, [sp, #136]	; 0x88
   15cf0:	adds	r1, r1, r7
   15cf4:	adc	ip, ip, r6
   15cf8:	eor	r4, r4, r1
   15cfc:	eor	r0, r0, ip
   15d00:	adds	r2, r2, r0
   15d04:	adc	r5, r5, r4
   15d08:	adds	r1, r9, r1
   15d0c:	eor	r7, r7, r2
   15d10:	eor	r6, r6, r5
   15d14:	str	r1, [sp, #136]	; 0x88
   15d18:	lsr	r8, r7, #24
   15d1c:	ldr	r1, [sp, #56]	; 0x38
   15d20:	lsr	r9, r6, #24
   15d24:	orr	r6, r8, r6, lsl #8
   15d28:	orr	r7, r9, r7, lsl #8
   15d2c:	adc	ip, r1, ip
   15d30:	ldr	r1, [sp, #136]	; 0x88
   15d34:	adds	r8, r1, r6
   15d38:	eor	r0, r0, r8
   15d3c:	adc	r9, ip, r7
   15d40:	lsr	ip, r0, #16
   15d44:	eor	r4, r4, r9
   15d48:	lsr	r1, r4, #16
   15d4c:	strd	r8, [sp, #188]	; 0xbc
   15d50:	orr	r4, ip, r4, lsl #16
   15d54:	ldr	r9, [sp, #156]	; 0x9c
   15d58:	mov	ip, r4
   15d5c:	orr	r4, r1, r0, lsl #16
   15d60:	mov	r0, r4
   15d64:	str	ip, [sp, #236]	; 0xec
   15d68:	str	r4, [sp, #240]	; 0xf0
   15d6c:	adds	r4, r2, ip
   15d70:	lsl	r1, r9, #1
   15d74:	mov	r8, r4
   15d78:	adc	r4, r5, r0
   15d7c:	ldr	ip, [sp, #148]	; 0x94
   15d80:	eor	r6, r8, r6
   15d84:	str	r4, [sp, #136]	; 0x88
   15d88:	ldr	r4, [sp, #132]	; 0x84
   15d8c:	str	r6, [sp, #148]	; 0x94
   15d90:	orr	r1, r1, ip, lsr #31
   15d94:	ldr	r6, [sp, #136]	; 0x88
   15d98:	lsl	r2, ip, #1
   15d9c:	ldr	r5, [sp, #196]	; 0xc4
   15da0:	orr	r2, r2, r9, lsr #31
   15da4:	str	r8, [sp, #196]	; 0xc4
   15da8:	eor	r7, r6, r7
   15dac:	adds	r0, r4, r5
   15db0:	ldr	r5, [sp, #24]
   15db4:	str	r7, [sp, #156]	; 0x9c
   15db8:	ldr	r7, [sp, #80]	; 0x50
   15dbc:	ldr	r4, [sp, #200]	; 0xc8
   15dc0:	adc	ip, r5, r4
   15dc4:	ldr	r4, [sp, #224]	; 0xe0
   15dc8:	adds	r0, r0, r2
   15dcc:	adc	ip, ip, r1
   15dd0:	eor	r8, r0, r4
   15dd4:	ldr	r4, [sp, #228]	; 0xe4
   15dd8:	eor	r6, ip, r4
   15ddc:	ldr	r4, [sp, #76]	; 0x4c
   15de0:	adds	r3, r3, r6
   15de4:	eor	r2, r2, r3
   15de8:	adc	lr, lr, r8
   15dec:	eor	r1, r1, lr
   15df0:	lsr	r5, r1, #24
   15df4:	adds	r0, r4, r0
   15df8:	lsr	r4, r2, #24
   15dfc:	orr	r5, r5, r2, lsl #8
   15e00:	adc	ip, r7, ip
   15e04:	orr	r4, r4, r1, lsl #8
   15e08:	ldr	r1, [sp, #164]	; 0xa4
   15e0c:	adds	r2, r0, r4
   15e10:	ldr	r0, [sp, #60]	; 0x3c
   15e14:	adc	r7, ip, r5
   15e18:	eor	r6, r6, r2
   15e1c:	eor	r8, r8, r7
   15e20:	ldr	ip, [sp, #168]	; 0xa8
   15e24:	str	r2, [sp, #200]	; 0xc8
   15e28:	lsr	r2, r8, #16
   15e2c:	str	r7, [sp, #204]	; 0xcc
   15e30:	lsr	r7, r6, #16
   15e34:	orr	r2, r2, r6, lsl #16
   15e38:	orr	r9, r7, r8, lsl #16
   15e3c:	mov	r6, r2
   15e40:	lsl	r8, ip, #1
   15e44:	adds	r2, r3, r9
   15e48:	ldr	r3, [sp, #208]	; 0xd0
   15e4c:	mov	r7, r2
   15e50:	adc	lr, lr, r6
   15e54:	orr	r8, r8, r1, lsr #31
   15e58:	lsl	r2, r1, #1
   15e5c:	ldr	r1, [sp, #212]	; 0xd4
   15e60:	eor	r4, r4, r7
   15e64:	str	r7, [sp, #208]	; 0xd0
   15e68:	str	r6, [sp, #228]	; 0xe4
   15e6c:	orr	r2, r2, ip, lsr #31
   15e70:	adds	r3, r0, r3
   15e74:	str	r9, [sp, #224]	; 0xe0
   15e78:	mov	r9, lr
   15e7c:	ldr	r6, [sp, #64]	; 0x40
   15e80:	eor	r5, r5, r9
   15e84:	str	r9, [sp, #212]	; 0xd4
   15e88:	lsl	r7, r5, #1
   15e8c:	ldr	r0, [sp, #140]	; 0x8c
   15e90:	orr	r7, r7, r4, lsr #31
   15e94:	ldr	ip, [sp, #4]
   15e98:	adc	r1, r6, r1
   15e9c:	adds	r3, r3, r2
   15ea0:	ldr	lr, [sp, #144]	; 0x90
   15ea4:	adc	r1, r1, r8
   15ea8:	eor	fp, fp, r3
   15eac:	eor	sl, sl, r1
   15eb0:	adds	r0, r0, sl
   15eb4:	eor	r2, r2, r0
   15eb8:	adc	r6, lr, fp
   15ebc:	adds	r3, ip, r3
   15ec0:	ldr	ip, [sp, #8]
   15ec4:	eor	r8, r8, r6
   15ec8:	lsr	lr, r2, #24
   15ecc:	lsr	r9, r8, #24
   15ed0:	orr	lr, lr, r8, lsl #8
   15ed4:	ldr	r8, [sp, #176]	; 0xb0
   15ed8:	orr	r9, r9, r2, lsl #8
   15edc:	adc	r1, ip, r1
   15ee0:	adds	r3, r3, lr
   15ee4:	adc	r1, r1, r9
   15ee8:	eor	sl, sl, r3
   15eec:	eor	fp, fp, r1
   15ef0:	lsr	r2, sl, #16
   15ef4:	str	r3, [sp, #164]	; 0xa4
   15ef8:	lsr	r3, fp, #16
   15efc:	str	r1, [sp, #168]	; 0xa8
   15f00:	orr	fp, r2, fp, lsl #16
   15f04:	ldr	r1, [sp, #152]	; 0x98
   15f08:	orr	r3, r3, sl, lsl #16
   15f0c:	adds	r0, r0, fp
   15f10:	adc	r6, r6, r3
   15f14:	str	fp, [sp, #244]	; 0xf4
   15f18:	eor	lr, r0, lr
   15f1c:	ldr	fp, [sp, #172]	; 0xac
   15f20:	str	r3, [sp, #248]	; 0xf8
   15f24:	lsl	ip, r1, #1
   15f28:	ldr	r3, [sp, #16]
   15f2c:	str	lr, [sp, #144]	; 0x90
   15f30:	adds	r2, r3, fp
   15f34:	ldr	fp, [sp, #20]
   15f38:	ldr	r3, [sp, #160]	; 0xa0
   15f3c:	adc	r8, fp, r8
   15f40:	eor	fp, r6, r9
   15f44:	orr	ip, ip, r3, lsr #31
   15f48:	str	fp, [sp, #152]	; 0x98
   15f4c:	lsl	lr, r3, #1
   15f50:	ldr	r3, [sp, #232]	; 0xe8
   15f54:	adds	r2, r2, ip
   15f58:	ldr	fp, [sp, #256]	; 0x100
   15f5c:	orr	lr, lr, r1, lsr #31
   15f60:	adc	r8, r8, lr
   15f64:	eor	r9, r2, r3
   15f68:	lsl	r3, r4, #1
   15f6c:	orr	r3, r3, r5, lsr #31
   15f70:	ldr	r5, [sp, #216]	; 0xd8
   15f74:	eor	r4, r8, fp
   15f78:	ldr	fp, [sp, #36]	; 0x24
   15f7c:	adds	r1, r5, r4
   15f80:	ldr	r5, [sp, #220]	; 0xdc
   15f84:	eor	ip, ip, r1
   15f88:	adc	r5, r5, r9
   15f8c:	adds	r2, fp, r2
   15f90:	lsr	fp, ip, #24
   15f94:	eor	lr, lr, r5
   15f98:	str	r2, [sp, #140]	; 0x8c
   15f9c:	lsr	sl, lr, #24
   15fa0:	ldr	r2, [sp, #40]	; 0x28
   15fa4:	orr	lr, fp, lr, lsl #8
   15fa8:	orr	ip, sl, ip, lsl #8
   15fac:	adc	r8, r2, r8
   15fb0:	ldr	r2, [sp, #140]	; 0x8c
   15fb4:	adds	sl, r2, lr
   15fb8:	adc	fp, r8, ip
   15fbc:	eor	r4, r4, sl
   15fc0:	eor	r9, r9, fp
   15fc4:	lsr	r8, r4, #16
   15fc8:	str	sl, [sp, #172]	; 0xac
   15fcc:	lsr	r2, r9, #16
   15fd0:	ldr	sl, [sp, #188]	; 0xbc
   15fd4:	orr	r8, r8, r9, lsl #16
   15fd8:	orr	r4, r2, r4, lsl #16
   15fdc:	ldr	r2, [sp, #116]	; 0x74
   15fe0:	adds	r1, r1, r8
   15fe4:	adc	r5, r5, r4
   15fe8:	ldr	r9, [sp, #192]	; 0xc0
   15fec:	eor	lr, lr, r1
   15ff0:	eor	ip, ip, r5
   15ff4:	adds	r2, r2, sl
   15ff8:	ldr	sl, [sp, #120]	; 0x78
   15ffc:	adc	r9, sl, r9
   16000:	adds	r2, r2, r3
   16004:	eor	sl, r2, r8
   16008:	adc	r9, r9, r7
   1600c:	ldr	r8, [sp, #96]	; 0x60
   16010:	eor	r4, r4, r9
   16014:	adds	r0, r0, r4
   16018:	eor	r3, r3, r0
   1601c:	adc	r6, r6, sl
   16020:	eor	r7, r7, r6
   16024:	adds	r2, r8, r2
   16028:	lsr	r8, r3, #24
   1602c:	str	r3, [sp, #160]	; 0xa0
   16030:	lsr	r3, r7, #24
   16034:	orr	r7, r8, r7, lsl #8
   16038:	str	r3, [sp, #140]	; 0x8c
   1603c:	ldr	r3, [sp, #100]	; 0x64
   16040:	ldr	r8, [sp, #140]	; 0x8c
   16044:	adc	r9, r3, r9
   16048:	ldr	r3, [sp, #160]	; 0xa0
   1604c:	orr	r3, r8, r3, lsl #8
   16050:	adds	r8, r2, r7
   16054:	eor	r4, r4, r8
   16058:	adc	r9, r9, r3
   1605c:	str	r8, [sp, #176]	; 0xb0
   16060:	eor	r8, r9, sl
   16064:	str	r9, [sp, #188]	; 0xbc
   16068:	lsr	r9, r4, #16
   1606c:	lsr	r2, r8, #16
   16070:	orr	sl, r9, r8, lsl #16
   16074:	ldr	r9, [sp, #152]	; 0x98
   16078:	orr	r4, r2, r4, lsl #16
   1607c:	adds	r0, r0, sl
   16080:	mov	r2, r4
   16084:	str	r0, [sp, #140]	; 0x8c
   16088:	adc	r6, r6, r2
   1608c:	str	sl, [sp, #232]	; 0xe8
   16090:	lsl	r8, r9, #1
   16094:	str	r2, [sp, #252]	; 0xfc
   16098:	ldr	sl, [sp, #144]	; 0x90
   1609c:	str	r6, [sp, #144]	; 0x90
   160a0:	ldr	r0, [sp, #84]	; 0x54
   160a4:	ldr	r6, [sp, #88]	; 0x58
   160a8:	lsl	r4, sl, #1
   160ac:	ldr	r2, [sp, #200]	; 0xc8
   160b0:	orr	r8, r8, sl, lsr #31
   160b4:	ldr	sl, [sp, #204]	; 0xcc
   160b8:	adds	r0, r0, r2
   160bc:	adc	r2, r6, sl
   160c0:	ldr	sl, [sp, #140]	; 0x8c
   160c4:	orr	r6, r4, r9, lsr #31
   160c8:	ldr	r9, [sp, #108]	; 0x6c
   160cc:	eor	r7, sl, r7
   160d0:	ldr	sl, [sp, #112]	; 0x70
   160d4:	str	r7, [sp, #152]	; 0x98
   160d8:	ldr	r7, [sp, #144]	; 0x90
   160dc:	eor	r4, r7, r3
   160e0:	adds	r3, r0, r6
   160e4:	ldr	r0, [sp, #236]	; 0xec
   160e8:	adc	r2, r2, r8
   160ec:	str	r4, [sp, #160]	; 0xa0
   160f0:	eor	r4, r3, r0
   160f4:	ldr	r0, [sp, #240]	; 0xf0
   160f8:	eor	r0, r2, r0
   160fc:	adds	r1, r1, r0
   16100:	adc	r5, r5, r4
   16104:	eor	r6, r6, r1
   16108:	eor	r8, r8, r5
   1610c:	lsr	r7, r6, #24
   16110:	adds	r3, r9, r3
   16114:	lsr	r9, r8, #24
   16118:	adc	r2, sl, r2
   1611c:	orr	r8, r7, r8, lsl #8
   16120:	orr	r6, r9, r6, lsl #8
   16124:	ldr	r9, [sp, #124]	; 0x7c
   16128:	adds	r3, r3, r8
   1612c:	adc	r2, r2, r6
   16130:	eor	r0, r0, r3
   16134:	mov	r7, r2
   16138:	lsr	r2, r0, #16
   1613c:	str	r3, [sp, #192]	; 0xc0
   16140:	eor	r4, r4, r7
   16144:	lsr	r3, r4, #16
   16148:	str	r7, [sp, #200]	; 0xc8
   1614c:	orr	r4, r2, r4, lsl #16
   16150:	orr	r3, r3, r0, lsl #16
   16154:	adds	r1, r1, r4
   16158:	lsl	r7, ip, #1
   1615c:	adc	r5, r5, r3
   16160:	mov	r0, r1
   16164:	lsl	r2, lr, #1
   16168:	mov	sl, r5
   1616c:	mov	r5, r1
   16170:	ldr	r1, [sp, #28]
   16174:	eor	r5, r5, r8
   16178:	orr	lr, r7, lr, lsr #31
   1617c:	str	r0, [sp, #204]	; 0xcc
   16180:	str	r3, [sp, #236]	; 0xec
   16184:	orr	ip, r2, ip, lsr #31
   16188:	eor	r6, sl, r6
   1618c:	ldr	r7, [sp, #32]
   16190:	str	sl, [sp, #216]	; 0xd8
   16194:	ldr	r3, [sp, #164]	; 0xa4
   16198:	str	r5, [sp, #164]	; 0xa4
   1619c:	ldr	sl, [sp, #128]	; 0x80
   161a0:	ldr	r5, [sp, #224]	; 0xe0
   161a4:	adds	r3, r1, r3
   161a8:	ldr	r1, [sp, #168]	; 0xa8
   161ac:	str	r6, [sp, #168]	; 0xa8
   161b0:	ldr	r0, [sp, #196]	; 0xc4
   161b4:	adc	r1, r7, r1
   161b8:	adds	r3, r3, ip
   161bc:	eor	r7, r3, r5
   161c0:	ldr	r5, [sp, #228]	; 0xe4
   161c4:	adc	r1, r1, lr
   161c8:	eor	r6, r1, r5
   161cc:	adds	r2, r0, r6
   161d0:	ldr	r0, [sp, #136]	; 0x88
   161d4:	eor	ip, ip, r2
   161d8:	adc	r5, r0, r7
   161dc:	adds	r3, r9, r3
   161e0:	lsr	r9, ip, #24
   161e4:	eor	lr, lr, r5
   161e8:	adc	r1, sl, r1
   161ec:	ldr	sl, [sp, #104]	; 0x68
   161f0:	lsr	r8, lr, #24
   161f4:	orr	lr, r9, lr, lsl #8
   161f8:	ldr	r0, [sp, #148]	; 0x94
   161fc:	orr	ip, r8, ip, lsl #8
   16200:	adds	r3, r3, lr
   16204:	adc	r1, r1, ip
   16208:	eor	r6, r6, r3
   1620c:	mov	r8, r1
   16210:	str	r3, [sp, #196]	; 0xc4
   16214:	lsr	r1, r6, #16
   16218:	eor	r7, r7, r8
   1621c:	lsr	r3, r7, #16
   16220:	str	r8, [sp, #220]	; 0xdc
   16224:	orr	r1, r1, r7, lsl #16
   16228:	orr	r6, r3, r6, lsl #16
   1622c:	ldr	r3, [sp, #156]	; 0x9c
   16230:	adds	r2, r2, r1
   16234:	lsl	r7, r0, #1
   16238:	mov	r8, r6
   1623c:	ldr	r6, [sp, #12]
   16240:	adc	r5, r5, r8
   16244:	str	r1, [sp, #224]	; 0xe0
   16248:	str	r8, [sp, #228]	; 0xe4
   1624c:	eor	ip, r5, ip
   16250:	ldr	r8, [sp, #172]	; 0xac
   16254:	lsl	r9, r3, #1
   16258:	orr	r7, r7, r3, lsr #31
   1625c:	str	ip, [sp, #156]	; 0x9c
   16260:	orr	r9, r9, r0, lsr #31
   16264:	ldr	r0, [sp, #244]	; 0xf4
   16268:	adds	r1, r6, r8
   1626c:	ldr	r6, [sp, #44]	; 0x2c
   16270:	adc	r8, sl, fp
   16274:	eor	fp, r2, lr
   16278:	adds	r1, r1, r7
   1627c:	str	fp, [sp, #148]	; 0x94
   16280:	eor	fp, r1, r0
   16284:	adc	ip, r8, r9
   16288:	ldr	r0, [sp, #248]	; 0xf8
   1628c:	eor	sl, ip, r0
   16290:	ldr	r0, [sp, #208]	; 0xd0
   16294:	adds	r3, r0, sl
   16298:	ldr	r0, [sp, #212]	; 0xd4
   1629c:	eor	r7, r7, r3
   162a0:	adc	lr, r0, fp
   162a4:	ldr	r0, [sp, #48]	; 0x30
   162a8:	adds	r1, r6, r1
   162ac:	eor	r9, r9, lr
   162b0:	lsr	r6, r7, #24
   162b4:	lsr	r8, r9, #24
   162b8:	orr	r6, r6, r9, lsl #8
   162bc:	orr	r7, r8, r7, lsl #8
   162c0:	ldr	r8, [sp, #176]	; 0xb0
   162c4:	adc	ip, r0, ip
   162c8:	adds	r0, r1, r6
   162cc:	adc	ip, ip, r7
   162d0:	eor	sl, sl, r0
   162d4:	mov	r1, ip
   162d8:	lsr	ip, sl, #16
   162dc:	str	r0, [sp, #172]	; 0xac
   162e0:	eor	fp, fp, r1
   162e4:	ldr	r0, [sp, #188]	; 0xbc
   162e8:	str	r1, [sp, #208]	; 0xd0
   162ec:	lsr	r1, fp, #16
   162f0:	orr	fp, ip, fp, lsl #16
   162f4:	ldr	ip, [sp, #128]	; 0x80
   162f8:	orr	sl, r1, sl, lsl #16
   162fc:	ldr	r1, [sp, #124]	; 0x7c
   16300:	adds	r3, r3, fp
   16304:	adc	lr, lr, sl
   16308:	eor	r6, r6, r3
   1630c:	eor	r7, r7, lr
   16310:	lsl	r9, r6, #1
   16314:	adds	r1, r1, r8
   16318:	lsl	r8, r7, #1
   1631c:	adc	ip, ip, r0
   16320:	ldr	r0, [sp, #236]	; 0xec
   16324:	orr	r7, r9, r7, lsr #31
   16328:	orr	r6, r8, r6, lsr #31
   1632c:	adds	r1, r1, r7
   16330:	ldr	r8, [sp, #84]	; 0x54
   16334:	adc	ip, ip, r6
   16338:	eor	r4, r4, r1
   1633c:	eor	r0, r0, ip
   16340:	adds	r2, r2, r0
   16344:	adc	r5, r5, r4
   16348:	eor	r7, r7, r2
   1634c:	eor	r6, r6, r5
   16350:	adds	r1, r8, r1
   16354:	lsr	r8, r7, #24
   16358:	str	r5, [sp, #136]	; 0x88
   1635c:	lsr	r9, r6, #24
   16360:	ldr	r5, [sp, #88]	; 0x58
   16364:	orr	r6, r8, r6, lsl #8
   16368:	orr	r7, r9, r7, lsl #8
   1636c:	adc	ip, r5, ip
   16370:	adds	r9, r1, r6
   16374:	ldr	r5, [sp, #152]	; 0x98
   16378:	eor	r0, r0, r9
   1637c:	adc	r8, ip, r7
   16380:	lsr	ip, r0, #16
   16384:	eor	r4, r4, r8
   16388:	str	r9, [sp, #176]	; 0xb0
   1638c:	lsr	r1, r4, #16
   16390:	str	r8, [sp, #188]	; 0xbc
   16394:	orr	r4, ip, r4, lsl #16
   16398:	ldr	ip, [sp, #136]	; 0x88
   1639c:	orr	r0, r1, r0, lsl #16
   163a0:	str	r4, [sp, #236]	; 0xec
   163a4:	adds	r4, r2, r4
   163a8:	lsl	r2, r5, #1
   163ac:	mov	r8, r4
   163b0:	str	r0, [sp, #240]	; 0xf0
   163b4:	adc	r4, ip, r0
   163b8:	ldr	r9, [sp, #160]	; 0xa0
   163bc:	str	r4, [sp, #136]	; 0x88
   163c0:	ldr	r4, [sp, #76]	; 0x4c
   163c4:	ldr	r0, [sp, #192]	; 0xc0
   163c8:	lsl	r1, r9, #1
   163cc:	orr	r2, r2, r9, lsr #31
   163d0:	str	r8, [sp, #192]	; 0xc0
   163d4:	orr	r1, r1, r5, lsr #31
   163d8:	ldr	r5, [sp, #80]	; 0x50
   163dc:	ldr	r9, [sp, #164]	; 0xa4
   163e0:	adds	r0, r4, r0
   163e4:	ldr	r4, [sp, #200]	; 0xc8
   163e8:	adc	ip, r5, r4
   163ec:	ldr	r4, [sp, #224]	; 0xe0
   163f0:	adds	r0, r0, r2
   163f4:	eor	r5, r8, r6
   163f8:	adc	ip, ip, r1
   163fc:	str	r5, [sp, #152]	; 0x98
   16400:	ldr	r5, [sp, #136]	; 0x88
   16404:	eor	r8, r0, r4
   16408:	ldr	r4, [sp, #228]	; 0xe4
   1640c:	eor	r7, r5, r7
   16410:	eor	r6, ip, r4
   16414:	ldr	r4, [sp, #36]	; 0x24
   16418:	adds	r3, r3, r6
   1641c:	str	r7, [sp, #160]	; 0xa0
   16420:	eor	r2, r2, r3
   16424:	adc	lr, lr, r8
   16428:	ldr	r7, [sp, #40]	; 0x28
   1642c:	eor	r1, r1, lr
   16430:	lsr	r5, r1, #24
   16434:	adds	r0, r4, r0
   16438:	lsr	r4, r2, #24
   1643c:	orr	r5, r5, r2, lsl #8
   16440:	orr	r4, r4, r1, lsl #8
   16444:	adc	ip, r7, ip
   16448:	adds	r2, r0, r4
   1644c:	ldr	r0, [sp, #168]	; 0xa8
   16450:	adc	r7, ip, r5
   16454:	eor	r6, r6, r2
   16458:	eor	r8, r8, r7
   1645c:	str	r2, [sp, #200]	; 0xc8
   16460:	lsr	r2, r8, #16
   16464:	str	r7, [sp, #212]	; 0xd4
   16468:	lsr	r7, r6, #16
   1646c:	orr	r6, r2, r6, lsl #16
   16470:	orr	r1, r7, r8, lsl #16
   16474:	mov	r7, r6
   16478:	lsl	r8, r0, #1
   1647c:	adds	r6, r3, r1
   16480:	ldr	r3, [sp, #196]	; 0xc4
   16484:	lsl	r2, r9, #1
   16488:	adc	lr, lr, r7
   1648c:	orr	r8, r8, r9, lsr #31
   16490:	eor	r4, r4, r6
   16494:	mov	ip, lr
   16498:	ldr	lr, [sp, #52]	; 0x34
   1649c:	orr	r2, r2, r0, lsr #31
   164a0:	str	r6, [sp, #196]	; 0xc4
   164a4:	eor	r5, r5, ip
   164a8:	ldr	r9, [sp, #220]	; 0xdc
   164ac:	str	r1, [sp, #224]	; 0xe0
   164b0:	str	ip, [sp, #220]	; 0xdc
   164b4:	adds	r3, lr, r3
   164b8:	ldr	lr, [sp, #56]	; 0x38
   164bc:	str	r7, [sp, #228]	; 0xe4
   164c0:	ldr	r7, [sp, #20]
   164c4:	adc	r1, lr, r9
   164c8:	ldr	lr, [sp, #140]	; 0x8c
   164cc:	adds	r3, r3, r2
   164d0:	adc	r1, r1, r8
   164d4:	eor	fp, fp, r3
   164d8:	eor	sl, sl, r1
   164dc:	adds	r0, lr, sl
   164e0:	ldr	lr, [sp, #144]	; 0x90
   164e4:	eor	r2, r2, r0
   164e8:	adc	r6, lr, fp
   164ec:	ldr	lr, [sp, #16]
   164f0:	eor	r8, r8, r6
   164f4:	lsr	r9, r8, #24
   164f8:	orr	r9, r9, r2, lsl #8
   164fc:	adds	r3, lr, r3
   16500:	lsr	lr, r2, #24
   16504:	adc	r1, r7, r1
   16508:	lsl	r7, r5, #1
   1650c:	orr	lr, lr, r8, lsl #8
   16510:	ldr	r8, [sp, #172]	; 0xac
   16514:	orr	r7, r7, r4, lsr #31
   16518:	adds	r3, r3, lr
   1651c:	adc	r1, r1, r9
   16520:	eor	sl, sl, r3
   16524:	eor	fp, fp, r1
   16528:	lsr	r2, sl, #16
   1652c:	str	r3, [sp, #164]	; 0xa4
   16530:	lsr	r3, fp, #16
   16534:	str	r1, [sp, #168]	; 0xa8
   16538:	orr	fp, r2, fp, lsl #16
   1653c:	orr	r3, r3, sl, lsl #16
   16540:	ldr	sl, [sp, #100]	; 0x64
   16544:	adds	r1, r0, fp
   16548:	adc	r6, r6, r3
   1654c:	eor	r0, r1, lr
   16550:	eor	r9, r6, r9
   16554:	str	r1, [sp, #140]	; 0x8c
   16558:	str	r3, [sp, #248]	; 0xf8
   1655c:	ldr	r3, [sp, #96]	; 0x60
   16560:	str	fp, [sp, #244]	; 0xf4
   16564:	ldr	fp, [sp, #148]	; 0x94
   16568:	str	r0, [sp, #144]	; 0x90
   1656c:	str	r9, [sp, #148]	; 0x94
   16570:	adds	r2, r3, r8
   16574:	ldr	r0, [sp, #32]
   16578:	ldr	r3, [sp, #156]	; 0x9c
   1657c:	lsl	ip, fp, #1
   16580:	ldr	r8, [sp, #208]	; 0xd0
   16584:	lsl	lr, r3, #1
   16588:	orr	ip, ip, r3, lsr #31
   1658c:	orr	lr, lr, fp, lsr #31
   16590:	ldr	fp, [sp, #232]	; 0xe8
   16594:	adc	r8, sl, r8
   16598:	adds	r2, r2, ip
   1659c:	lsl	r3, r4, #1
   165a0:	adc	r8, r8, lr
   165a4:	orr	r3, r3, r5, lsr #31
   165a8:	eor	r9, r2, fp
   165ac:	ldr	fp, [sp, #252]	; 0xfc
   165b0:	eor	r4, r8, fp
   165b4:	ldr	fp, [sp, #204]	; 0xcc
   165b8:	adds	r1, fp, r4
   165bc:	ldr	fp, [sp, #216]	; 0xd8
   165c0:	eor	ip, ip, r1
   165c4:	adc	r5, fp, r9
   165c8:	ldr	fp, [sp, #28]
   165cc:	eor	lr, lr, r5
   165d0:	lsr	sl, lr, #24
   165d4:	adds	r2, fp, r2
   165d8:	lsr	fp, ip, #24
   165dc:	orr	ip, sl, ip, lsl #8
   165e0:	adc	r8, r0, r8
   165e4:	orr	lr, fp, lr, lsl #8
   165e8:	adds	fp, r2, lr
   165ec:	mov	r0, fp
   165f0:	adc	fp, r8, ip
   165f4:	eor	r9, r9, fp
   165f8:	eor	r4, r4, r0
   165fc:	lsr	r2, r9, #16
   16600:	str	r0, [sp, #172]	; 0xac
   16604:	lsr	r8, r4, #16
   16608:	ldr	r0, [sp, #64]	; 0x40
   1660c:	orr	r4, r2, r4, lsl #16
   16610:	orr	r8, r8, r9, lsl #16
   16614:	ldr	r9, [sp, #60]	; 0x3c
   16618:	ldr	r2, [sp, #176]	; 0xb0
   1661c:	adds	r1, r1, r8
   16620:	adc	r5, r5, r4
   16624:	eor	lr, lr, r1
   16628:	eor	ip, ip, r5
   1662c:	adds	r2, r9, r2
   16630:	ldr	r9, [sp, #188]	; 0xbc
   16634:	adc	r9, r0, r9
   16638:	adds	r2, r2, r3
   1663c:	ldr	r0, [sp, #140]	; 0x8c
   16640:	eor	sl, r2, r8
   16644:	adc	r9, r9, r7
   16648:	ldr	r8, [sp, #12]
   1664c:	eor	r4, r4, r9
   16650:	adds	r0, r0, r4
   16654:	adc	r6, r6, sl
   16658:	eor	r3, r3, r0
   1665c:	adds	r2, r8, r2
   16660:	eor	r7, r7, r6
   16664:	lsr	r8, r3, #24
   16668:	str	r2, [sp, #156]	; 0x9c
   1666c:	lsr	r2, r7, #24
   16670:	orr	r7, r8, r7, lsl #8
   16674:	str	r2, [sp, #140]	; 0x8c
   16678:	ldr	r2, [sp, #104]	; 0x68
   1667c:	adc	r9, r2, r9
   16680:	ldr	r2, [sp, #140]	; 0x8c
   16684:	orr	r3, r2, r3, lsl #8
   16688:	ldr	r2, [sp, #156]	; 0x9c
   1668c:	adds	r8, r2, r7
   16690:	adc	r2, r9, r3
   16694:	eor	r4, r4, r8
   16698:	lsr	r9, r4, #16
   1669c:	str	r8, [sp, #176]	; 0xb0
   166a0:	eor	r8, r2, sl
   166a4:	str	r2, [sp, #188]	; 0xbc
   166a8:	lsr	r2, r8, #16
   166ac:	orr	r9, r9, r8, lsl #16
   166b0:	orr	sl, r2, r4, lsl #16
   166b4:	adds	r4, r0, r9
   166b8:	adc	r6, r6, sl
   166bc:	mov	r2, sl
   166c0:	ldr	sl, [sp, #148]	; 0x94
   166c4:	str	r4, [sp, #140]	; 0x8c
   166c8:	str	r9, [sp, #232]	; 0xe8
   166cc:	str	r2, [sp, #252]	; 0xfc
   166d0:	ldr	r9, [sp, #144]	; 0x90
   166d4:	str	r6, [sp, #144]	; 0x90
   166d8:	lsl	r8, sl, #1
   166dc:	ldr	r6, [sp, #68]	; 0x44
   166e0:	ldr	r2, [sp, #200]	; 0xc8
   166e4:	lsl	r4, r9, #1
   166e8:	orr	r8, r8, r9, lsr #31
   166ec:	mov	r9, sl
   166f0:	ldr	sl, [sp, #24]
   166f4:	adds	r0, r6, r2
   166f8:	ldr	r6, [sp, #72]	; 0x48
   166fc:	ldr	r2, [sp, #212]	; 0xd4
   16700:	adc	r2, r6, r2
   16704:	ldr	r6, [sp, #140]	; 0x8c
   16708:	eor	r7, r6, r7
   1670c:	orr	r6, r4, r9, lsr #31
   16710:	ldr	r4, [sp, #236]	; 0xec
   16714:	str	r7, [sp, #148]	; 0x94
   16718:	ldr	r7, [sp, #144]	; 0x90
   1671c:	eor	r9, r7, r3
   16720:	adds	r3, r0, r6
   16724:	adc	r2, r2, r8
   16728:	eor	r4, r3, r4
   1672c:	str	r9, [sp, #156]	; 0x9c
   16730:	ldr	r9, [sp, #240]	; 0xf0
   16734:	eor	r0, r2, r9
   16738:	ldr	r9, [sp, #132]	; 0x84
   1673c:	adds	r1, r1, r0
   16740:	adc	r5, r5, r4
   16744:	eor	r6, r6, r1
   16748:	eor	r8, r8, r5
   1674c:	lsr	r7, r6, #24
   16750:	adds	r3, r9, r3
   16754:	lsr	r9, r8, #24
   16758:	orr	r8, r7, r8, lsl #8
   1675c:	adc	r2, sl, r2
   16760:	orr	r6, r9, r6, lsl #8
   16764:	adds	r7, r3, r8
   16768:	adc	r2, r2, r6
   1676c:	eor	r0, r0, r7
   16770:	mov	sl, r2
   16774:	lsr	r2, r0, #16
   16778:	str	r7, [sp, #200]	; 0xc8
   1677c:	eor	r4, r4, sl
   16780:	lsl	r7, ip, #1
   16784:	lsr	r3, r4, #16
   16788:	str	sl, [sp, #204]	; 0xcc
   1678c:	orr	r4, r2, r4, lsl #16
   16790:	ldr	sl, [sp, #112]	; 0x70
   16794:	orr	r3, r3, r0, lsl #16
   16798:	adds	r0, r1, r4
   1679c:	lsl	r2, lr, #1
   167a0:	adc	r5, r5, r3
   167a4:	orr	lr, r7, lr, lsr #31
   167a8:	mov	r9, r5
   167ac:	ldmib	sp, {r1, r5}
   167b0:	orr	ip, r2, ip, lsr #31
   167b4:	str	r3, [sp, #236]	; 0xec
   167b8:	eor	r6, r9, r6
   167bc:	ldr	r3, [sp, #164]	; 0xa4
   167c0:	str	r0, [sp, #208]	; 0xd0
   167c4:	ldr	r2, [sp, #224]	; 0xe0
   167c8:	str	r9, [sp, #212]	; 0xd4
   167cc:	ldr	r9, [sp, #108]	; 0x6c
   167d0:	adds	r3, r1, r3
   167d4:	ldr	r1, [sp, #168]	; 0xa8
   167d8:	str	r6, [sp, #168]	; 0xa8
   167dc:	adc	r1, r5, r1
   167e0:	adds	r3, r3, ip
   167e4:	eor	r7, r3, r2
   167e8:	mov	r5, r0
   167ec:	ldr	r0, [sp, #48]	; 0x30
   167f0:	eor	r5, r5, r8
   167f4:	adc	r1, r1, lr
   167f8:	ldr	r2, [sp, #228]	; 0xe4
   167fc:	str	r5, [sp, #164]	; 0xa4
   16800:	ldr	r8, [sp, #192]	; 0xc0
   16804:	eor	r6, r1, r2
   16808:	adds	r2, r8, r6
   1680c:	ldr	r8, [sp, #136]	; 0x88
   16810:	eor	ip, ip, r2
   16814:	adc	r5, r8, r7
   16818:	adds	r3, r9, r3
   1681c:	lsr	r9, ip, #24
   16820:	eor	lr, lr, r5
   16824:	adc	r1, sl, r1
   16828:	ldr	sl, [sp, #160]	; 0xa0
   1682c:	lsr	r8, lr, #24
   16830:	orr	lr, r9, lr, lsl #8
   16834:	orr	ip, r8, ip, lsl #8
   16838:	adds	r8, r3, lr
   1683c:	adc	r1, r1, ip
   16840:	eor	r6, r6, r8
   16844:	lsl	r9, sl, #1
   16848:	eor	r7, r7, r1
   1684c:	str	r8, [sp, #192]	; 0xc0
   16850:	lsr	r3, r7, #16
   16854:	str	r1, [sp, #216]	; 0xd8
   16858:	lsr	r1, r6, #16
   1685c:	orr	r3, r3, r6, lsl #16
   16860:	orr	r8, r1, r7, lsl #16
   16864:	ldr	r1, [sp, #172]	; 0xac
   16868:	mov	r6, r3
   1686c:	adds	r2, r2, r8
   16870:	ldr	r3, [sp, #152]	; 0x98
   16874:	adc	r5, r5, r6
   16878:	str	r8, [sp, #224]	; 0xe0
   1687c:	str	r6, [sp, #228]	; 0xe4
   16880:	ldr	r6, [sp, #44]	; 0x2c
   16884:	lsl	r7, r3, #1
   16888:	orr	r9, r9, r3, lsr #31
   1688c:	ldr	r3, [sp, #248]	; 0xf8
   16890:	orr	r7, r7, sl, lsr #31
   16894:	adds	r1, r6, r1
   16898:	ldr	r6, [sp, #116]	; 0x74
   1689c:	adc	r8, r0, fp
   168a0:	eor	fp, r2, lr
   168a4:	adds	r1, r1, r7
   168a8:	ldr	r0, [sp, #120]	; 0x78
   168ac:	str	fp, [sp, #152]	; 0x98
   168b0:	eor	fp, r5, ip
   168b4:	adc	ip, r8, r9
   168b8:	eor	sl, ip, r3
   168bc:	ldr	r3, [sp, #196]	; 0xc4
   168c0:	str	fp, [sp, #160]	; 0xa0
   168c4:	ldr	lr, [sp, #220]	; 0xdc
   168c8:	ldr	fp, [sp, #244]	; 0xf4
   168cc:	adds	r3, r3, sl
   168d0:	eor	r7, r7, r3
   168d4:	eor	fp, r1, fp
   168d8:	adc	lr, lr, fp
   168dc:	adds	r1, r6, r1
   168e0:	lsr	r6, r7, #24
   168e4:	eor	r9, r9, lr
   168e8:	adc	ip, r0, ip
   168ec:	lsr	r8, r9, #24
   168f0:	orr	r6, r6, r9, lsl #8
   168f4:	orr	r7, r8, r7, lsl #8
   168f8:	ldr	r8, [sp, #44]	; 0x2c
   168fc:	adds	r0, r1, r6
   16900:	adc	ip, ip, r7
   16904:	eor	sl, sl, r0
   16908:	mov	r1, ip
   1690c:	lsr	ip, sl, #16
   16910:	str	r0, [sp, #196]	; 0xc4
   16914:	eor	fp, fp, r1
   16918:	ldr	r0, [sp, #188]	; 0xbc
   1691c:	str	r1, [sp, #220]	; 0xdc
   16920:	lsr	r1, fp, #16
   16924:	orr	fp, ip, fp, lsl #16
   16928:	ldr	ip, [sp, #48]	; 0x30
   1692c:	orr	sl, r1, sl, lsl #16
   16930:	ldr	r1, [sp, #176]	; 0xb0
   16934:	adds	r3, r3, fp
   16938:	adc	lr, lr, sl
   1693c:	eor	r6, r6, r3
   16940:	eor	r7, r7, lr
   16944:	lsl	r9, r6, #1
   16948:	adds	r1, r8, r1
   1694c:	lsl	r8, r7, #1
   16950:	adc	ip, ip, r0
   16954:	ldr	r0, [sp, #236]	; 0xec
   16958:	orr	r7, r9, r7, lsr #31
   1695c:	orr	r6, r8, r6, lsr #31
   16960:	ldr	r9, [sp, #12]
   16964:	adds	r1, r1, r7
   16968:	adc	ip, ip, r6
   1696c:	eor	r4, r4, r1
   16970:	ldr	r8, [sp, #104]	; 0x68
   16974:	eor	r0, r0, ip
   16978:	adds	r2, r2, r0
   1697c:	adc	r5, r5, r4
   16980:	eor	r7, r7, r2
   16984:	adds	r1, r9, r1
   16988:	eor	r6, r6, r5
   1698c:	adc	ip, r8, ip
   16990:	lsr	r8, r7, #24
   16994:	lsr	r9, r6, #24
   16998:	orr	r6, r8, r6, lsl #8
   1699c:	orr	r7, r9, r7, lsl #8
   169a0:	ldr	r9, [sp, #156]	; 0x9c
   169a4:	adds	r8, r1, r6
   169a8:	adc	ip, ip, r7
   169ac:	eor	r0, r0, r8
   169b0:	mov	r1, ip
   169b4:	lsr	ip, r0, #16
   169b8:	str	r8, [sp, #176]	; 0xb0
   169bc:	eor	r4, r4, r1
   169c0:	ldr	r8, [sp, #148]	; 0x94
   169c4:	str	r1, [sp, #188]	; 0xbc
   169c8:	lsr	r1, r4, #16
   169cc:	orr	r4, ip, r4, lsl #16
   169d0:	mov	ip, r4
   169d4:	orr	r4, r1, r0, lsl #16
   169d8:	adds	r2, r2, ip
   169dc:	lsl	r1, r9, #1
   169e0:	mov	r0, r4
   169e4:	mov	r4, r8
   169e8:	adc	r5, r5, r0
   169ec:	orr	r1, r1, r8, lsr #31
   169f0:	str	r2, [sp, #136]	; 0x88
   169f4:	lsl	r2, r4, #1
   169f8:	ldr	r8, [sp, #32]
   169fc:	str	r5, [sp, #148]	; 0x94
   16a00:	ldr	r4, [sp, #28]
   16a04:	orr	r2, r2, r9, lsr #31
   16a08:	str	ip, [sp, #236]	; 0xec
   16a0c:	str	r0, [sp, #240]	; 0xf0
   16a10:	ldr	r5, [sp, #200]	; 0xc8
   16a14:	ldr	r9, [sp, #112]	; 0x70
   16a18:	adds	r0, r4, r5
   16a1c:	ldr	r5, [sp, #148]	; 0x94
   16a20:	ldr	r4, [sp, #204]	; 0xcc
   16a24:	eor	r7, r5, r7
   16a28:	adc	ip, r8, r4
   16a2c:	ldr	r4, [sp, #136]	; 0x88
   16a30:	adds	r0, r0, r2
   16a34:	adc	ip, ip, r1
   16a38:	str	r7, [sp, #172]	; 0xac
   16a3c:	eor	r4, r4, r6
   16a40:	str	r4, [sp, #156]	; 0x9c
   16a44:	ldr	r4, [sp, #224]	; 0xe0
   16a48:	eor	r8, r0, r4
   16a4c:	ldr	r4, [sp, #228]	; 0xe4
   16a50:	eor	r6, ip, r4
   16a54:	ldr	r4, [sp, #108]	; 0x6c
   16a58:	adds	r3, r3, r6
   16a5c:	eor	r2, r2, r3
   16a60:	adc	lr, lr, r8
   16a64:	eor	r1, r1, lr
   16a68:	lsr	r5, r1, #24
   16a6c:	adds	r0, r4, r0
   16a70:	lsr	r4, r2, #24
   16a74:	orr	r5, r5, r2, lsl #8
   16a78:	adc	ip, r9, ip
   16a7c:	orr	r4, r4, r1, lsl #8
   16a80:	ldr	r1, [sp, #164]	; 0xa4
   16a84:	adds	r2, r0, r4
   16a88:	adc	r7, ip, r5
   16a8c:	eor	r6, r6, r2
   16a90:	eor	r8, r8, r7
   16a94:	str	r2, [sp, #200]	; 0xc8
   16a98:	str	r7, [sp, #204]	; 0xcc
   16a9c:	lsr	r7, r6, #16
   16aa0:	lsr	r2, r8, #16
   16aa4:	orr	r8, r7, r8, lsl #16
   16aa8:	ldr	r7, [sp, #168]	; 0xa8
   16aac:	orr	r6, r2, r6, lsl #16
   16ab0:	adds	r3, r3, r8
   16ab4:	mov	ip, r8
   16ab8:	lsl	r2, r1, #1
   16abc:	mov	r0, r6
   16ac0:	mov	r9, r3
   16ac4:	ldr	r6, [sp, #24]
   16ac8:	adc	lr, lr, r0
   16acc:	str	ip, [sp, #228]	; 0xe4
   16ad0:	eor	r4, r4, r9
   16ad4:	lsl	r8, r7, #1
   16ad8:	str	r0, [sp, #244]	; 0xf4
   16adc:	mov	ip, lr
   16ae0:	ldr	r0, [sp, #132]	; 0x84
   16ae4:	eor	r5, r5, ip
   16ae8:	orr	r2, r2, r7, lsr #31
   16aec:	orr	r8, r8, r1, lsr #31
   16af0:	ldr	r3, [sp, #192]	; 0xc0
   16af4:	lsl	r7, r5, #1
   16af8:	str	r9, [sp, #192]	; 0xc0
   16afc:	ldr	r1, [sp, #216]	; 0xd8
   16b00:	orr	r7, r7, r4, lsr #31
   16b04:	str	ip, [sp, #216]	; 0xd8
   16b08:	ldr	ip, [sp, #140]	; 0x8c
   16b0c:	adds	r3, r0, r3
   16b10:	adc	r1, r6, r1
   16b14:	adds	r3, r3, r2
   16b18:	adc	r1, r1, r8
   16b1c:	eor	fp, fp, r3
   16b20:	eor	sl, sl, r1
   16b24:	adds	r0, ip, sl
   16b28:	ldr	ip, [sp, #144]	; 0x90
   16b2c:	eor	r2, r2, r0
   16b30:	lsr	lr, r2, #24
   16b34:	adc	r6, ip, fp
   16b38:	ldr	ip, [sp, #124]	; 0x7c
   16b3c:	eor	r8, r8, r6
   16b40:	orr	lr, lr, r8, lsl #8
   16b44:	lsr	r9, r8, #24
   16b48:	adds	r3, ip, r3
   16b4c:	ldr	ip, [sp, #128]	; 0x80
   16b50:	orr	r9, r9, r2, lsl #8
   16b54:	adc	r1, ip, r1
   16b58:	adds	r3, r3, lr
   16b5c:	eor	sl, sl, r3
   16b60:	adc	r1, r1, r9
   16b64:	lsr	r2, sl, #16
   16b68:	eor	fp, fp, r1
   16b6c:	str	r3, [sp, #168]	; 0xa8
   16b70:	lsr	r3, fp, #16
   16b74:	str	r1, [sp, #224]	; 0xe0
   16b78:	orr	fp, r2, fp, lsl #16
   16b7c:	ldr	r1, [sp, #4]
   16b80:	orr	r8, r3, sl, lsl #16
   16b84:	adds	r0, r0, fp
   16b88:	ldr	r3, [sp, #152]	; 0x98
   16b8c:	str	fp, [sp, #248]	; 0xf8
   16b90:	adc	r6, r6, r8
   16b94:	ldr	fp, [sp, #196]	; 0xc4
   16b98:	str	r8, [sp, #256]	; 0x100
   16b9c:	ldr	sl, [sp, #220]	; 0xdc
   16ba0:	lsl	ip, r3, #1
   16ba4:	adds	r2, r1, fp
   16ba8:	ldr	fp, [sp, #8]
   16bac:	ldr	r1, [sp, #160]	; 0xa0
   16bb0:	adc	r8, fp, sl
   16bb4:	ldr	sl, [sp, #232]	; 0xe8
   16bb8:	eor	fp, r0, lr
   16bbc:	orr	ip, ip, r1, lsr #31
   16bc0:	str	fp, [sp, #152]	; 0x98
   16bc4:	eor	fp, r6, r9
   16bc8:	lsl	lr, r1, #1
   16bcc:	adds	r2, r2, ip
   16bd0:	str	fp, [sp, #160]	; 0xa0
   16bd4:	eor	r9, r2, sl
   16bd8:	ldr	sl, [sp, #252]	; 0xfc
   16bdc:	orr	lr, lr, r3, lsr #31
   16be0:	lsl	r3, r4, #1
   16be4:	adc	r8, r8, lr
   16be8:	orr	r3, r3, r5, lsr #31
   16bec:	eor	r4, r8, sl
   16bf0:	ldr	sl, [sp, #208]	; 0xd0
   16bf4:	adds	r1, sl, r4
   16bf8:	ldr	sl, [sp, #212]	; 0xd4
   16bfc:	eor	ip, ip, r1
   16c00:	lsr	fp, ip, #24
   16c04:	str	ip, [sp, #140]	; 0x8c
   16c08:	ldr	ip, [sp, #120]	; 0x78
   16c0c:	adc	r5, sl, r9
   16c10:	ldr	sl, [sp, #116]	; 0x74
   16c14:	eor	lr, lr, r5
   16c18:	adds	r2, sl, r2
   16c1c:	lsr	sl, lr, #24
   16c20:	adc	r8, ip, r8
   16c24:	ldr	ip, [sp, #140]	; 0x8c
   16c28:	orr	lr, fp, lr, lsl #8
   16c2c:	adds	r2, r2, lr
   16c30:	eor	r4, r4, r2
   16c34:	str	r2, [sp, #196]	; 0xc4
   16c38:	orr	ip, sl, ip, lsl #8
   16c3c:	ldr	sl, [sp, #188]	; 0xbc
   16c40:	adc	fp, r8, ip
   16c44:	lsr	r8, r4, #16
   16c48:	eor	r9, r9, fp
   16c4c:	lsr	r2, r9, #16
   16c50:	orr	r8, r8, r9, lsl #16
   16c54:	orr	r4, r2, r4, lsl #16
   16c58:	ldr	r2, [sp, #176]	; 0xb0
   16c5c:	adds	r1, r1, r8
   16c60:	adc	r5, r5, r4
   16c64:	eor	lr, lr, r1
   16c68:	str	r5, [sp, #140]	; 0x8c
   16c6c:	ldr	r5, [sp, #84]	; 0x54
   16c70:	adds	r2, r5, r2
   16c74:	ldr	r5, [sp, #88]	; 0x58
   16c78:	adc	r9, r5, sl
   16c7c:	adds	r2, r2, r3
   16c80:	ldr	r5, [sp, #140]	; 0x8c
   16c84:	adc	r9, r9, r7
   16c88:	eor	sl, r2, r8
   16c8c:	eor	r4, r4, r9
   16c90:	ldr	r8, [sp, #52]	; 0x34
   16c94:	adds	r0, r0, r4
   16c98:	adc	r6, r6, sl
   16c9c:	eor	r3, r3, r0
   16ca0:	eor	r7, r7, r6
   16ca4:	eor	ip, ip, r5
   16ca8:	lsr	r5, r7, #24
   16cac:	adds	r2, r8, r2
   16cb0:	lsr	r8, r3, #24
   16cb4:	str	r5, [sp, #144]	; 0x90
   16cb8:	orr	r7, r8, r7, lsl #8
   16cbc:	ldr	r5, [sp, #56]	; 0x38
   16cc0:	ldr	r8, [sp, #144]	; 0x90
   16cc4:	adc	r9, r5, r9
   16cc8:	orr	r3, r8, r3, lsl #8
   16ccc:	adds	r8, r2, r7
   16cd0:	eor	r4, r4, r8
   16cd4:	adc	r9, r9, r3
   16cd8:	str	r8, [sp, #176]	; 0xb0
   16cdc:	mov	r5, r9
   16ce0:	lsr	r9, r4, #16
   16ce4:	eor	r8, r5, sl
   16ce8:	lsr	r2, r8, #16
   16cec:	str	r5, [sp, #188]	; 0xbc
   16cf0:	orr	sl, r9, r8, lsl #16
   16cf4:	ldr	r5, [sp, #160]	; 0xa0
   16cf8:	orr	r9, r2, r4, lsl #16
   16cfc:	adds	r0, r0, sl
   16d00:	ldr	r2, [sp, #200]	; 0xc8
   16d04:	adc	r6, r6, r9
   16d08:	str	r0, [sp, #144]	; 0x90
   16d0c:	str	sl, [sp, #232]	; 0xe8
   16d10:	lsl	r8, r5, #1
   16d14:	ldr	r0, [sp, #36]	; 0x24
   16d18:	str	r9, [sp, #252]	; 0xfc
   16d1c:	ldr	sl, [sp, #152]	; 0x98
   16d20:	str	r6, [sp, #152]	; 0x98
   16d24:	ldr	r6, [sp, #144]	; 0x90
   16d28:	adds	r0, r0, r2
   16d2c:	ldr	r2, [sp, #40]	; 0x28
   16d30:	lsl	r4, sl, #1
   16d34:	ldr	r9, [sp, #204]	; 0xcc
   16d38:	orr	r8, r8, sl, lsr #31
   16d3c:	eor	r7, r6, r7
   16d40:	orr	r6, r4, r5, lsr #31
   16d44:	ldr	sl, [sp, #80]	; 0x50
   16d48:	str	r7, [sp, #160]	; 0xa0
   16d4c:	ldr	r4, [sp, #236]	; 0xec
   16d50:	adc	r2, r2, r9
   16d54:	ldr	r7, [sp, #152]	; 0x98
   16d58:	ldr	r5, [sp, #140]	; 0x8c
   16d5c:	eor	r3, r7, r3
   16d60:	ldr	r7, [sp, #76]	; 0x4c
   16d64:	str	r3, [sp, #164]	; 0xa4
   16d68:	adds	r3, r0, r6
   16d6c:	ldr	r0, [sp, #240]	; 0xf0
   16d70:	adc	r2, r2, r8
   16d74:	eor	r4, r3, r4
   16d78:	eor	r0, r2, r0
   16d7c:	adds	r1, r1, r0
   16d80:	adc	r5, r5, r4
   16d84:	eor	r6, r6, r1
   16d88:	eor	r8, r8, r5
   16d8c:	adds	r3, r7, r3
   16d90:	lsr	r7, r6, #24
   16d94:	lsr	r9, r8, #24
   16d98:	adc	r2, sl, r2
   16d9c:	orr	r8, r7, r8, lsl #8
   16da0:	orr	r6, r9, r6, lsl #8
   16da4:	adds	r3, r3, r8
   16da8:	adc	r2, r2, r6
   16dac:	eor	r0, r0, r3
   16db0:	mov	r7, r2
   16db4:	lsr	r2, r0, #16
   16db8:	str	r3, [sp, #200]	; 0xc8
   16dbc:	eor	r4, r4, r7
   16dc0:	lsr	r3, r4, #16
   16dc4:	str	r7, [sp, #204]	; 0xcc
   16dc8:	orr	r4, r2, r4, lsl #16
   16dcc:	orr	r3, r3, r0, lsl #16
   16dd0:	lsl	r2, lr, #1
   16dd4:	adds	r0, r1, r4
   16dd8:	ldr	r1, [sp, #224]	; 0xe0
   16ddc:	mov	r9, r0
   16de0:	adc	r0, r5, r3
   16de4:	lsl	r7, ip, #1
   16de8:	orr	ip, r2, ip, lsr #31
   16dec:	mov	r2, r0
   16df0:	mov	sl, r0
   16df4:	eor	r2, r2, r6
   16df8:	ldr	r0, [sp, #16]
   16dfc:	orr	lr, r7, lr, lsr #31
   16e00:	str	r3, [sp, #236]	; 0xec
   16e04:	ldr	r5, [sp, #20]
   16e08:	str	r9, [sp, #208]	; 0xd0
   16e0c:	ldr	r3, [sp, #168]	; 0xa8
   16e10:	str	r2, [sp, #168]	; 0xa8
   16e14:	ldr	r2, [sp, #228]	; 0xe4
   16e18:	str	sl, [sp, #212]	; 0xd4
   16e1c:	ldr	sl, [sp, #148]	; 0x94
   16e20:	adds	r3, r0, r3
   16e24:	mov	r0, r9
   16e28:	adc	r1, r5, r1
   16e2c:	adds	r3, r3, ip
   16e30:	ldr	r9, [sp, #60]	; 0x3c
   16e34:	eor	r7, r3, r2
   16e38:	eor	r0, r0, r8
   16e3c:	ldr	r2, [sp, #244]	; 0xf4
   16e40:	adc	r1, r1, lr
   16e44:	str	r0, [sp, #140]	; 0x8c
   16e48:	ldr	r0, [sp, #64]	; 0x40
   16e4c:	eor	r6, r1, r2
   16e50:	ldr	r2, [sp, #136]	; 0x88
   16e54:	adds	r2, r2, r6
   16e58:	adc	r5, sl, r7
   16e5c:	eor	ip, ip, r2
   16e60:	ldr	sl, [sp, #156]	; 0x9c
   16e64:	eor	lr, lr, r5
   16e68:	adds	r3, r9, r3
   16e6c:	lsr	r9, ip, #24
   16e70:	lsr	r8, lr, #24
   16e74:	adc	r1, r0, r1
   16e78:	ldr	r0, [sp, #172]	; 0xac
   16e7c:	orr	lr, r9, lr, lsl #8
   16e80:	orr	ip, r8, ip, lsl #8
   16e84:	adds	r3, r3, lr
   16e88:	adc	r1, r1, ip
   16e8c:	eor	r6, r6, r3
   16e90:	eor	r7, r7, r1
   16e94:	str	r3, [sp, #220]	; 0xdc
   16e98:	lsl	r9, r0, #1
   16e9c:	str	r1, [sp, #224]	; 0xe0
   16ea0:	lsr	r1, r6, #16
   16ea4:	lsr	r3, r7, #16
   16ea8:	orr	r1, r1, r7, lsl #16
   16eac:	orr	r6, r3, r6, lsl #16
   16eb0:	ldr	r3, [sp, #68]	; 0x44
   16eb4:	adds	r2, r2, r1
   16eb8:	lsl	r7, sl, #1
   16ebc:	str	r1, [sp, #228]	; 0xe4
   16ec0:	adc	r5, r5, r6
   16ec4:	eor	lr, r2, lr
   16ec8:	ldr	r1, [sp, #196]	; 0xc4
   16ecc:	orr	r7, r7, r0, lsr #31
   16ed0:	eor	r0, r5, ip
   16ed4:	str	lr, [sp, #136]	; 0x88
   16ed8:	orr	r9, r9, sl, lsr #31
   16edc:	ldr	lr, [sp, #192]	; 0xc0
   16ee0:	str	r0, [sp, #148]	; 0x94
   16ee4:	str	r6, [sp, #240]	; 0xf0
   16ee8:	adds	r1, r3, r1
   16eec:	ldr	r3, [sp, #72]	; 0x48
   16ef0:	ldr	r6, [sp, #96]	; 0x60
   16ef4:	ldr	r0, [sp, #100]	; 0x64
   16ef8:	adc	r8, r3, fp
   16efc:	adds	r1, r1, r7
   16f00:	adc	ip, r8, r9
   16f04:	ldr	fp, [sp, #248]	; 0xf8
   16f08:	ldr	r3, [sp, #256]	; 0x100
   16f0c:	eor	fp, r1, fp
   16f10:	eor	sl, ip, r3
   16f14:	adds	r3, lr, sl
   16f18:	ldr	lr, [sp, #216]	; 0xd8
   16f1c:	eor	r7, r7, r3
   16f20:	adc	lr, lr, fp
   16f24:	adds	r1, r6, r1
   16f28:	lsr	r6, r7, #24
   16f2c:	eor	r9, r9, lr
   16f30:	adc	ip, r0, ip
   16f34:	lsr	r8, r9, #24
   16f38:	orr	r6, r6, r9, lsl #8
   16f3c:	ldr	r9, [sp, #96]	; 0x60
   16f40:	orr	r7, r8, r7, lsl #8
   16f44:	adds	r8, r1, r6
   16f48:	adc	ip, ip, r7
   16f4c:	eor	sl, sl, r8
   16f50:	mov	r1, ip
   16f54:	lsr	ip, sl, #16
   16f58:	str	r8, [sp, #172]	; 0xac
   16f5c:	eor	fp, fp, r1
   16f60:	str	r1, [sp, #192]	; 0xc0
   16f64:	lsr	r1, fp, #16
   16f68:	orr	ip, ip, fp, lsl #16
   16f6c:	ldr	fp, [sp, #188]	; 0xbc
   16f70:	orr	sl, r1, sl, lsl #16
   16f74:	ldr	r1, [sp, #176]	; 0xb0
   16f78:	adds	r3, r3, ip
   16f7c:	adc	lr, lr, sl
   16f80:	eor	r6, r6, r3
   16f84:	str	ip, [sp, #244]	; 0xf4
   16f88:	eor	r7, r7, lr
   16f8c:	mov	ip, r0
   16f90:	ldr	r0, [sp, #236]	; 0xec
   16f94:	lsl	r8, r7, #1
   16f98:	adds	r1, r9, r1
   16f9c:	lsl	r9, r6, #1
   16fa0:	orr	r6, r8, r6, lsr #31
   16fa4:	adc	ip, ip, fp
   16fa8:	ldmib	sp, {r8, fp}
   16fac:	orr	r7, r9, r7, lsr #31
   16fb0:	adds	r1, r1, r7
   16fb4:	adc	ip, ip, r6
   16fb8:	eor	r4, r4, r1
   16fbc:	eor	r0, r0, ip
   16fc0:	adds	r2, r2, r0
   16fc4:	adc	r5, r5, r4
   16fc8:	eor	r7, r7, r2
   16fcc:	adds	r1, r8, r1
   16fd0:	eor	r6, r6, r5
   16fd4:	lsr	r8, r7, #24
   16fd8:	lsr	r9, r6, #24
   16fdc:	adc	ip, fp, ip
   16fe0:	orr	r6, r8, r6, lsl #8
   16fe4:	orr	r7, r9, r7, lsl #8
   16fe8:	adds	fp, r1, r6
   16fec:	adc	r8, ip, r7
   16ff0:	eor	r0, r0, fp
   16ff4:	eor	r4, r4, r8
   16ff8:	lsr	ip, r0, #16
   16ffc:	str	fp, [sp, #176]	; 0xb0
   17000:	lsr	r1, r4, #16
   17004:	str	r8, [sp, #188]	; 0xbc
   17008:	orr	r4, ip, r4, lsl #16
   1700c:	ldr	ip, [sp, #200]	; 0xc8
   17010:	orr	r0, r1, r0, lsl #16
   17014:	str	r4, [sp, #236]	; 0xec
   17018:	adds	r4, r2, r4
   1701c:	adc	r5, r5, r0
   17020:	str	r0, [sp, #248]	; 0xf8
   17024:	mov	r8, r4
   17028:	ldr	r0, [sp, #12]
   1702c:	mov	r9, r5
   17030:	eor	r5, r9, r7
   17034:	strd	r8, [sp, #196]	; 0xc4
   17038:	ldr	fp, [sp, #164]	; 0xa4
   1703c:	ldr	r4, [sp, #160]	; 0xa0
   17040:	adds	r0, r0, ip
   17044:	str	r5, [sp, #160]	; 0xa0
   17048:	ldr	r5, [sp, #16]
   1704c:	lsl	r1, fp, #1
   17050:	ldr	ip, [sp, #204]	; 0xcc
   17054:	orr	r1, r1, r4, lsr #31
   17058:	lsl	r2, r4, #1
   1705c:	ldr	r7, [sp, #20]
   17060:	ldr	r4, [sp, #104]	; 0x68
   17064:	orr	r2, r2, fp, lsr #31
   17068:	ldr	fp, [sp, #168]	; 0xa8
   1706c:	adc	ip, r4, ip
   17070:	eor	r4, r8, r6
   17074:	adds	r0, r0, r2
   17078:	str	r4, [sp, #156]	; 0x9c
   1707c:	adc	ip, ip, r1
   17080:	ldr	r4, [sp, #228]	; 0xe4
   17084:	eor	r8, r0, r4
   17088:	ldr	r4, [sp, #240]	; 0xf0
   1708c:	eor	r6, ip, r4
   17090:	adds	r3, r3, r6
   17094:	eor	r2, r2, r3
   17098:	adc	lr, lr, r8
   1709c:	eor	r1, r1, lr
   170a0:	lsr	r4, r2, #24
   170a4:	adds	r0, r5, r0
   170a8:	lsr	r5, r1, #24
   170ac:	adc	ip, r7, ip
   170b0:	orr	r4, r4, r1, lsl #8
   170b4:	orr	r5, r5, r2, lsl #8
   170b8:	adds	r2, r0, r4
   170bc:	adc	r7, ip, r5
   170c0:	eor	r6, r6, r2
   170c4:	eor	r8, r8, r7
   170c8:	str	r2, [sp, #164]	; 0xa4
   170cc:	lsr	r2, r6, #16
   170d0:	lsr	r1, r8, #16
   170d4:	str	r7, [sp, #204]	; 0xcc
   170d8:	orr	ip, r2, r8, lsl #16
   170dc:	orr	r6, r1, r6, lsl #16
   170e0:	ldr	r1, [sp, #140]	; 0x8c
   170e4:	adds	r3, r3, ip
   170e8:	lsl	r8, fp, #1
   170ec:	mov	r0, r6
   170f0:	str	ip, [sp, #228]	; 0xe4
   170f4:	mov	ip, r3
   170f8:	adc	lr, lr, r0
   170fc:	ldr	r6, [sp, #112]	; 0x70
   17100:	eor	r4, r4, ip
   17104:	mov	r7, lr
   17108:	str	ip, [sp, #216]	; 0xd8
   1710c:	ldr	lr, [sp, #108]	; 0x6c
   17110:	orr	r8, r8, r1, lsr #31
   17114:	eor	r5, r5, r7
   17118:	lsl	r2, r1, #1
   1711c:	str	r0, [sp, #240]	; 0xf0
   17120:	ldr	r3, [sp, #220]	; 0xdc
   17124:	orr	r2, r2, fp, lsr #31
   17128:	str	r7, [sp, #220]	; 0xdc
   1712c:	ldr	r7, [sp, #152]	; 0x98
   17130:	ldr	r1, [sp, #224]	; 0xe0
   17134:	adds	r3, lr, r3
   17138:	ldr	lr, [sp, #144]	; 0x90
   1713c:	ldr	ip, [sp, #244]	; 0xf4
   17140:	adc	r1, r6, r1
   17144:	adds	r3, r3, r2
   17148:	adc	r1, r1, r8
   1714c:	eor	sl, sl, r1
   17150:	adds	r0, lr, sl
   17154:	eor	ip, ip, r3
   17158:	eor	r2, r2, r0
   1715c:	adc	r6, r7, ip
   17160:	mov	fp, ip
   17164:	ldr	ip, [sp, #116]	; 0x74
   17168:	lsr	lr, r2, #24
   1716c:	eor	r8, r8, r6
   17170:	lsr	r9, r8, #24
   17174:	ldr	r7, [sp, #172]	; 0xac
   17178:	orr	lr, lr, r8, lsl #8
   1717c:	orr	r9, r9, r2, lsl #8
   17180:	ldr	r8, [sp, #128]	; 0x80
   17184:	adds	r3, ip, r3
   17188:	ldr	ip, [sp, #120]	; 0x78
   1718c:	adc	r1, ip, r1
   17190:	adds	r3, r3, lr
   17194:	eor	sl, sl, r3
   17198:	adc	r1, r1, r9
   1719c:	lsr	r2, sl, #16
   171a0:	eor	fp, fp, r1
   171a4:	str	r3, [sp, #144]	; 0x90
   171a8:	str	r1, [sp, #168]	; 0xa8
   171ac:	lsr	r3, fp, #16
   171b0:	orr	r1, r2, fp, lsl #16
   171b4:	ldr	fp, [sp, #136]	; 0x88
   171b8:	orr	r3, r3, sl, lsl #16
   171bc:	adds	r0, r0, r1
   171c0:	ldr	sl, [sp, #232]	; 0xe8
   171c4:	str	r1, [sp, #224]	; 0xe0
   171c8:	adc	r6, r6, r3
   171cc:	eor	lr, r0, lr
   171d0:	ldr	r1, [sp, #124]	; 0x7c
   171d4:	lsl	ip, fp, #1
   171d8:	str	lr, [sp, #140]	; 0x8c
   171dc:	str	r3, [sp, #244]	; 0xf4
   171e0:	ldr	r3, [sp, #148]	; 0x94
   171e4:	adds	r2, r1, r7
   171e8:	ldr	r1, [sp, #192]	; 0xc0
   171ec:	lsl	r7, r5, #1
   171f0:	orr	r7, r7, r4, lsr #31
   171f4:	lsl	lr, r3, #1
   171f8:	orr	ip, ip, r3, lsr #31
   171fc:	adc	r8, r8, r1
   17200:	eor	r1, r6, r9
   17204:	orr	lr, lr, fp, lsr #31
   17208:	adds	r2, r2, ip
   1720c:	lsl	r3, r4, #1
   17210:	str	r1, [sp, #136]	; 0x88
   17214:	adc	r8, r8, lr
   17218:	eor	r9, r2, sl
   1721c:	ldr	sl, [sp, #212]	; 0xd4
   17220:	orr	r3, r3, r5, lsr #31
   17224:	ldr	r1, [sp, #252]	; 0xfc
   17228:	str	r3, [sp, #148]	; 0x94
   1722c:	ldr	r3, [sp, #24]
   17230:	eor	r4, r8, r1
   17234:	ldr	r1, [sp, #208]	; 0xd0
   17238:	adds	r1, r1, r4
   1723c:	adc	r5, sl, r9
   17240:	ldr	sl, [sp, #132]	; 0x84
   17244:	eor	ip, ip, r1
   17248:	eor	lr, lr, r5
   1724c:	lsr	fp, ip, #24
   17250:	adds	r2, sl, r2
   17254:	lsr	sl, lr, #24
   17258:	orr	lr, fp, lr, lsl #8
   1725c:	adc	r8, r3, r8
   17260:	ldr	r3, [sp, #32]
   17264:	orr	ip, sl, ip, lsl #8
   17268:	adds	fp, r2, lr
   1726c:	adc	sl, r8, ip
   17270:	eor	r4, r4, fp
   17274:	eor	r9, r9, sl
   17278:	lsr	r8, r4, #16
   1727c:	str	fp, [sp, #172]	; 0xac
   17280:	lsr	r2, r9, #16
   17284:	ldr	fp, [sp, #28]
   17288:	orr	r8, r8, r9, lsl #16
   1728c:	str	sl, [sp, #192]	; 0xc0
   17290:	orr	r4, r2, r4, lsl #16
   17294:	ldr	r2, [sp, #176]	; 0xb0
   17298:	adds	r1, r1, r8
   1729c:	adc	r5, r5, r4
   172a0:	eor	lr, lr, r1
   172a4:	eor	ip, ip, r5
   172a8:	adds	r2, fp, r2
   172ac:	ldr	fp, [sp, #188]	; 0xbc
   172b0:	adc	r9, r3, fp
   172b4:	ldr	r3, [sp, #148]	; 0x94
   172b8:	adds	r2, r2, r3
   172bc:	eor	sl, r2, r8
   172c0:	ldr	r8, [sp, #36]	; 0x24
   172c4:	adc	r9, r9, r7
   172c8:	eor	r4, r4, r9
   172cc:	adds	r0, r0, r4
   172d0:	adc	r6, r6, sl
   172d4:	eor	r3, r3, r0
   172d8:	eor	r7, r7, r6
   172dc:	adds	r2, r8, r2
   172e0:	lsr	r8, r3, #24
   172e4:	lsr	fp, r7, #24
   172e8:	str	r2, [sp, #148]	; 0x94
   172ec:	orr	r7, r8, r7, lsl #8
   172f0:	ldr	r2, [sp, #40]	; 0x28
   172f4:	orr	r3, fp, r3, lsl #8
   172f8:	adc	r9, r2, r9
   172fc:	ldr	r2, [sp, #148]	; 0x94
   17300:	adds	fp, r2, r7
   17304:	mov	r8, fp
   17308:	adc	fp, r9, r3
   1730c:	eor	r4, r4, r8
   17310:	str	r8, [sp, #176]	; 0xb0
   17314:	eor	r8, fp, sl
   17318:	lsr	sl, r4, #16
   1731c:	lsr	r2, r8, #16
   17320:	orr	r9, sl, r8, lsl #16
   17324:	ldr	r8, [sp, #136]	; 0x88
   17328:	orr	r2, r2, r4, lsl #16
   1732c:	ldr	sl, [sp, #140]	; 0x8c
   17330:	adds	r0, r0, r9
   17334:	str	r0, [sp, #148]	; 0x94
   17338:	lsl	r4, r8, #1
   1733c:	str	r9, [sp, #232]	; 0xe8
   17340:	adc	r9, r6, r2
   17344:	ldr	r8, [sp, #44]	; 0x2c
   17348:	orr	r4, r4, sl, lsr #31
   1734c:	str	r2, [sp, #252]	; 0xfc
   17350:	lsl	r0, sl, #1
   17354:	ldr	sl, [sp, #148]	; 0x94
   17358:	str	r9, [sp, #152]	; 0x98
   1735c:	ldr	r9, [sp, #48]	; 0x30
   17360:	ldr	r2, [sp, #164]	; 0xa4
   17364:	eor	r7, sl, r7
   17368:	ldr	sl, [sp, #136]	; 0x88
   1736c:	str	r7, [sp, #140]	; 0x8c
   17370:	ldr	r7, [sp, #152]	; 0x98
   17374:	adds	r6, r8, r2
   17378:	ldr	r2, [sp, #204]	; 0xcc
   1737c:	orr	r0, r0, sl, lsr #31
   17380:	ldr	sl, [sp, #248]	; 0xf8
   17384:	eor	r7, r7, r3
   17388:	str	r7, [sp, #164]	; 0xa4
   1738c:	adc	r2, r9, r2
   17390:	adds	r3, r6, r0
   17394:	adc	r2, r2, r4
   17398:	ldr	r9, [sp, #56]	; 0x38
   1739c:	eor	sl, r2, sl
   173a0:	ldr	r7, [sp, #236]	; 0xec
   173a4:	adds	r1, r1, sl
   173a8:	eor	r0, r0, r1
   173ac:	eor	r7, r3, r7
   173b0:	adc	r5, r5, r7
   173b4:	eor	r8, r5, r4
   173b8:	ldr	r4, [sp, #52]	; 0x34
   173bc:	lsr	r6, r8, #24
   173c0:	adds	r3, r4, r3
   173c4:	lsr	r4, r0, #24
   173c8:	orr	r0, r6, r0, lsl #8
   173cc:	adc	r2, r9, r2
   173d0:	ldr	r9, [sp, #168]	; 0xa8
   173d4:	orr	r4, r4, r8, lsl #8
   173d8:	adds	r8, r3, r4
   173dc:	adc	r2, r2, r0
   173e0:	eor	sl, sl, r8
   173e4:	mov	r6, r2
   173e8:	lsr	r2, sl, #16
   173ec:	str	r8, [sp, #188]	; 0xbc
   173f0:	eor	r7, r7, r6
   173f4:	lsr	r3, r7, #16
   173f8:	orr	r2, r2, r7, lsl #16
   173fc:	orr	sl, r3, sl, lsl #16
   17400:	adds	r1, r1, r2
   17404:	lsl	r3, lr, #1
   17408:	mov	r7, r1
   1740c:	adc	r1, r5, sl
   17410:	ldr	r5, [sp, #64]	; 0x40
   17414:	mov	r8, r1
   17418:	ldr	r1, [sp, #60]	; 0x3c
   1741c:	eor	r0, r8, r0
   17420:	str	r2, [sp, #236]	; 0xec
   17424:	ldr	r2, [sp, #144]	; 0x90
   17428:	str	r0, [sp, #168]	; 0xa8
   1742c:	ldr	r0, [sp, #228]	; 0xe4
   17430:	strd	r6, [sp, #204]	; 0xcc
   17434:	str	r8, [sp, #212]	; 0xd4
   17438:	adds	r2, r1, r2
   1743c:	lsl	r1, ip, #1
   17440:	orr	ip, r3, ip, lsr #31
   17444:	adc	r5, r5, r9
   17448:	eor	r3, r7, r4
   1744c:	orr	lr, r1, lr, lsr #31
   17450:	ldr	r9, [sp, #72]	; 0x48
   17454:	adds	r2, r2, ip
   17458:	str	r3, [sp, #136]	; 0x88
   1745c:	eor	r8, r2, r0
   17460:	adc	r5, r5, lr
   17464:	ldr	r7, [sp, #156]	; 0x9c
   17468:	ldr	r0, [sp, #240]	; 0xf0
   1746c:	eor	r1, r5, r0
   17470:	ldr	r0, [sp, #196]	; 0xc4
   17474:	adds	r3, r0, r1
   17478:	ldr	r0, [sp, #200]	; 0xc8
   1747c:	eor	ip, ip, r3
   17480:	lsr	r4, ip, #24
   17484:	adc	r6, r0, r8
   17488:	ldr	r0, [sp, #68]	; 0x44
   1748c:	eor	lr, lr, r6
   17490:	orr	r4, r4, lr, lsl #8
   17494:	adds	r2, r0, r2
   17498:	lsr	r0, lr, #24
   1749c:	adc	r5, r9, r5
   174a0:	orr	r0, r0, ip, lsl #8
   174a4:	adds	ip, r2, r4
   174a8:	eor	r1, r1, ip
   174ac:	adc	r2, r5, r0
   174b0:	str	ip, [sp, #196]	; 0xc4
   174b4:	lsr	ip, r1, #16
   174b8:	eor	r8, r8, r2
   174bc:	ldr	r5, [sp, #192]	; 0xc0
   174c0:	orr	ip, ip, r8, lsl #16
   174c4:	str	r2, [sp, #200]	; 0xc8
   174c8:	lsr	r2, r8, #16
   174cc:	ldr	r8, [sp, #84]	; 0x54
   174d0:	adds	r3, r3, ip
   174d4:	orr	r1, r2, r1, lsl #16
   174d8:	str	ip, [sp, #228]	; 0xe4
   174dc:	ldr	ip, [sp, #76]	; 0x4c
   174e0:	mov	lr, r1
   174e4:	lsl	r1, r7, #1
   174e8:	ldr	r2, [sp, #172]	; 0xac
   174ec:	adc	r6, r6, lr
   174f0:	str	lr, [sp, #240]	; 0xf0
   174f4:	eor	r0, r6, r0
   174f8:	str	r0, [sp, #144]	; 0x90
   174fc:	adds	r2, ip, r2
   17500:	ldr	ip, [sp, #160]	; 0xa0
   17504:	orr	r1, r1, ip, lsr #31
   17508:	lsl	r9, ip, #1
   1750c:	ldr	ip, [sp, #80]	; 0x50
   17510:	orr	r9, r9, r7, lsr #31
   17514:	ldr	r7, [sp, #216]	; 0xd8
   17518:	adc	lr, ip, r5
   1751c:	eor	r5, r3, r4
   17520:	ldr	r4, [sp, #224]	; 0xe0
   17524:	adds	r2, r2, r1
   17528:	str	r5, [sp, #156]	; 0x9c
   1752c:	adc	lr, lr, r9
   17530:	eor	r5, r2, r4
   17534:	ldr	r4, [sp, #244]	; 0xf4
   17538:	eor	r0, lr, r4
   1753c:	adds	r4, r7, r0
   17540:	ldr	r7, [sp, #220]	; 0xdc
   17544:	eor	r1, r1, r4
   17548:	adc	ip, r7, r5
   1754c:	ldr	r7, [sp, #88]	; 0x58
   17550:	adds	r2, r8, r2
   17554:	eor	r9, r9, ip
   17558:	lsr	r8, r9, #24
   1755c:	adc	lr, r7, lr
   17560:	lsr	r7, r1, #24
   17564:	orr	r1, r8, r1, lsl #8
   17568:	orr	r9, r7, r9, lsl #8
   1756c:	adds	r7, r2, r9
   17570:	adc	r2, lr, r1
   17574:	eor	r0, r0, r7
   17578:	eor	r5, r5, r2
   1757c:	lsr	lr, r0, #16
   17580:	str	r7, [sp, #172]	; 0xac
   17584:	str	r2, [sp, #192]	; 0xc0
   17588:	lsr	r2, r5, #16
   1758c:	orr	r5, lr, r5, lsl #16
   17590:	ldr	r7, [sp, #164]	; 0xa4
   17594:	orr	r0, r2, r0, lsl #16
   17598:	adds	lr, r4, r5
   1759c:	ldr	r4, [sp, #176]	; 0xb0
   175a0:	adc	ip, ip, r0
   175a4:	eor	r9, r9, lr
   175a8:	lsl	r8, r9, #1
   175ac:	eor	r1, r1, ip
   175b0:	str	lr, [sp, #216]	; 0xd8
   175b4:	str	r0, [sp, #224]	; 0xe0
   175b8:	lsl	r2, r1, #1
   175bc:	ldr	r0, [sp, #76]	; 0x4c
   175c0:	orr	r8, r8, r1, lsr #31
   175c4:	orr	r9, r2, r9, lsr #31
   175c8:	str	r5, [sp, #220]	; 0xdc
   175cc:	ldr	r1, [sp, #92]	; 0x5c
   175d0:	ldr	r2, [sp, #236]	; 0xec
   175d4:	adds	lr, r0, r4
   175d8:	ldr	r4, [sp, #48]	; 0x30
   175dc:	ldr	r0, [sp, #80]	; 0x50
   175e0:	ldr	r1, [r1, #8]
   175e4:	adc	fp, r0, fp
   175e8:	adds	lr, lr, r8
   175ec:	ldr	r0, [sp, #140]	; 0x8c
   175f0:	adc	fp, fp, r9
   175f4:	eor	r2, r2, lr
   175f8:	eor	sl, sl, fp
   175fc:	str	r1, [sp, #160]	; 0xa0
   17600:	mov	r1, r2
   17604:	adds	r3, r3, sl
   17608:	lsl	r2, r7, #1
   1760c:	eor	r5, r3, r8
   17610:	ldr	r8, [sp, #44]	; 0x2c
   17614:	adc	r6, r6, r1
   17618:	lsl	r0, r0, #1
   1761c:	eor	r9, r9, r6
   17620:	orr	r0, r0, r7, lsr #31
   17624:	lsr	r7, r5, #24
   17628:	adds	lr, r8, lr
   1762c:	lsr	r8, r9, #24
   17630:	orr	r9, r7, r9, lsl #8
   17634:	ldr	r7, [sp, #92]	; 0x5c
   17638:	adc	fp, r4, fp
   1763c:	orr	r8, r8, r5, lsl #8
   17640:	ldr	r4, [sp, #140]	; 0x8c
   17644:	ldr	r7, [r7, #12]
   17648:	orr	r2, r2, r4, lsr #31
   1764c:	ldr	r4, [sp, #136]	; 0x88
   17650:	str	r7, [sp, #164]	; 0xa4
   17654:	adds	r7, lr, r9
   17658:	adc	fp, fp, r8
   1765c:	eor	sl, sl, r7
   17660:	mov	lr, fp
   17664:	str	r7, [sp, #140]	; 0x8c
   17668:	lsr	r7, sl, #16
   1766c:	eor	r1, r1, lr
   17670:	lsl	r5, r4, #1
   17674:	ldr	r4, [sp, #188]	; 0xbc
   17678:	str	lr, [sp, #176]	; 0xb0
   1767c:	lsr	lr, r1, #16
   17680:	orr	r1, r7, r1, lsl #16
   17684:	orr	sl, lr, sl, lsl #16
   17688:	ldr	lr, [sp, #108]	; 0x6c
   1768c:	adds	r3, r3, r1
   17690:	str	r3, [sp, #44]	; 0x2c
   17694:	adc	r3, r6, sl
   17698:	ldr	r6, [sp, #112]	; 0x70
   1769c:	str	r3, [sp, #48]	; 0x30
   176a0:	adds	r3, lr, r4
   176a4:	ldr	r4, [sp, #204]	; 0xcc
   176a8:	str	r1, [sp, #236]	; 0xec
   176ac:	ldr	r1, [sp, #168]	; 0xa8
   176b0:	str	sl, [sp, #168]	; 0xa8
   176b4:	adc	lr, r6, r4
   176b8:	adds	r3, r3, r0
   176bc:	ldr	r6, [sp, #156]	; 0x9c
   176c0:	adc	lr, lr, r2
   176c4:	ldr	r4, [sp, #228]	; 0xe4
   176c8:	orr	r5, r5, r1, lsr #31
   176cc:	lsl	r1, r1, #1
   176d0:	lsl	fp, r6, #1
   176d4:	eor	r7, r3, r4
   176d8:	ldr	r4, [sp, #136]	; 0x88
   176dc:	orr	r1, r1, r4, lsr #31
   176e0:	ldr	r4, [sp, #240]	; 0xf0
   176e4:	str	r1, [sp, #76]	; 0x4c
   176e8:	ldr	r1, [sp, #216]	; 0xd8
   176ec:	eor	r4, lr, r4
   176f0:	str	r4, [sp, #80]	; 0x50
   176f4:	ldr	r4, [sp, #144]	; 0x90
   176f8:	lsl	sl, r4, #1
   176fc:	ldr	r4, [sp, #44]	; 0x2c
   17700:	eor	r9, r9, r4
   17704:	ldr	r4, [sp, #80]	; 0x50
   17708:	adds	r4, r1, r4
   1770c:	mov	r1, r4
   17710:	ldr	r4, [sp, #144]	; 0x90
   17714:	adc	ip, ip, r7
   17718:	eor	r0, r0, r1
   1771c:	eor	r2, r2, ip
   17720:	orr	r4, fp, r4, lsr #31
   17724:	mov	fp, r6
   17728:	ldr	r6, [sp, #32]
   1772c:	str	r4, [sp, #112]	; 0x70
   17730:	ldr	r4, [sp, #48]	; 0x30
   17734:	eor	r8, r8, r4
   17738:	orr	r4, sl, fp, lsr #31
   1773c:	ldr	sl, [sp, #28]
   17740:	lsr	fp, r0, #24
   17744:	str	r4, [sp, #136]	; 0x88
   17748:	adds	r3, sl, r3
   1774c:	lsr	sl, r2, #24
   17750:	adc	lr, r6, lr
   17754:	orr	r2, fp, r2, lsl #8
   17758:	ldr	r6, [sp, #80]	; 0x50
   1775c:	orr	r0, sl, r0, lsl #8
   17760:	adds	r3, r3, r2
   17764:	mov	sl, r3
   17768:	lsl	r3, r9, #1
   1776c:	adc	r4, lr, r0
   17770:	eor	r7, r7, r4
   17774:	lsl	lr, r8, #1
   17778:	eor	r6, r6, sl
   1777c:	orr	r3, r3, r8, lsr #31
   17780:	str	sl, [sp, #108]	; 0x6c
   17784:	lsr	fp, r6, #16
   17788:	lsr	sl, r7, #16
   1778c:	str	r3, [sp, #144]	; 0x90
   17790:	orr	r8, lr, r9, lsr #31
   17794:	str	r4, [sp, #80]	; 0x50
   17798:	orr	r4, fp, r7, lsl #16
   1779c:	orr	sl, sl, r6, lsl #16
   177a0:	ldr	lr, [sp, #148]	; 0x94
   177a4:	mov	r6, r4
   177a8:	str	r8, [sp, #156]	; 0x9c
   177ac:	adds	r7, r1, r6
   177b0:	str	r4, [sp, #188]	; 0xbc
   177b4:	ldr	r6, [sp, #36]	; 0x24
   177b8:	adc	r3, ip, sl
   177bc:	mov	r1, r7
   177c0:	eor	r2, r2, r1
   177c4:	str	sl, [sp, #204]	; 0xcc
   177c8:	mov	sl, r3
   177cc:	ldr	r4, [sp, #196]	; 0xc4
   177d0:	eor	r0, r0, sl
   177d4:	str	r1, [sp, #36]	; 0x24
   177d8:	lsl	r9, r0, #1
   177dc:	ldr	fp, [sp, #220]	; 0xdc
   177e0:	ldr	ip, [sp, #76]	; 0x4c
   177e4:	adds	r3, r6, r4
   177e8:	ldr	r6, [sp, #40]	; 0x28
   177ec:	str	sl, [sp, #40]	; 0x28
   177f0:	lsl	sl, r2, #1
   177f4:	ldr	r1, [sp, #76]	; 0x4c
   177f8:	orr	r0, sl, r0, lsr #31
   177fc:	ldr	r4, [sp, #200]	; 0xc8
   17800:	str	r0, [sp, #148]	; 0x94
   17804:	ldr	sl, [sp, #124]	; 0x7c
   17808:	adc	r4, r6, r4
   1780c:	adds	r3, r3, r5
   17810:	eor	r7, r3, fp
   17814:	ldr	fp, [sp, #224]	; 0xe0
   17818:	adc	r4, r4, ip
   1781c:	ldr	ip, [sp, #84]	; 0x54
   17820:	eor	r6, r4, fp
   17824:	ldr	fp, [sp, #88]	; 0x58
   17828:	adds	r8, lr, r6
   1782c:	ldr	lr, [sp, #152]	; 0x98
   17830:	eor	r5, r5, r8
   17834:	adc	lr, lr, r7
   17838:	adds	r3, ip, r3
   1783c:	adc	r4, fp, r4
   17840:	eor	r1, r1, lr
   17844:	lsr	fp, r5, #24
   17848:	lsr	ip, r1, #24
   1784c:	orr	r1, fp, r1, lsl #8
   17850:	ldr	fp, [sp, #136]	; 0x88
   17854:	orr	ip, ip, r5, lsl #8
   17858:	adds	r5, r3, r1
   1785c:	adc	r3, r4, ip
   17860:	eor	r6, r6, r5
   17864:	eor	r7, r7, r3
   17868:	str	r5, [sp, #76]	; 0x4c
   1786c:	orr	r5, r9, r2, lsr #31
   17870:	lsr	r4, r7, #16
   17874:	orr	r0, r4, r6, lsl #16
   17878:	str	r5, [sp, #28]
   1787c:	str	r3, [sp, #84]	; 0x54
   17880:	lsr	r3, r6, #16
   17884:	ldr	r6, [sp, #68]	; 0x44
   17888:	orr	r2, r3, r7, lsl #16
   1788c:	ldr	r7, [sp, #112]	; 0x70
   17890:	adds	r8, r8, r2
   17894:	adc	lr, lr, r0
   17898:	str	r0, [sp, #196]	; 0xc4
   1789c:	eor	r1, r1, r8
   178a0:	ldr	r0, [sp, #172]	; 0xac
   178a4:	eor	ip, ip, lr
   178a8:	lsl	r9, r1, #1
   178ac:	str	lr, [sp, #68]	; 0x44
   178b0:	str	r2, [sp, #152]	; 0x98
   178b4:	adds	r3, r6, r0
   178b8:	ldr	r6, [sp, #72]	; 0x48
   178bc:	ldr	r0, [sp, #192]	; 0xc0
   178c0:	adc	r2, r6, r0
   178c4:	ldr	r6, [sp, #232]	; 0xe8
   178c8:	adds	r3, r3, r7
   178cc:	adc	r2, r2, fp
   178d0:	ldr	lr, [sp, #128]	; 0x80
   178d4:	eor	r5, r3, r6
   178d8:	ldr	r6, [sp, #252]	; 0xfc
   178dc:	str	r5, [sp, #136]	; 0x88
   178e0:	eor	r0, r2, r6
   178e4:	ldr	r6, [sp, #208]	; 0xd0
   178e8:	adds	r4, r6, r0
   178ec:	ldr	r6, [sp, #212]	; 0xd4
   178f0:	adc	r5, r6, r5
   178f4:	eor	r6, r4, r7
   178f8:	lsl	r7, ip, #1
   178fc:	adds	r3, sl, r3
   17900:	orr	ip, r9, ip, lsr #31
   17904:	adc	r2, lr, r2
   17908:	str	r7, [sp, #32]
   1790c:	eor	r7, r5, fp
   17910:	lsr	fp, r6, #24
   17914:	lsr	sl, r7, #24
   17918:	orr	r7, fp, r7, lsl #8
   1791c:	ldr	fp, [sp, #8]
   17920:	orr	r6, sl, r6, lsl #8
   17924:	adds	lr, r3, r7
   17928:	adc	r9, r2, r6
   1792c:	eor	r0, r0, lr
   17930:	ldr	r2, [sp, #32]
   17934:	str	lr, [sp, #72]	; 0x48
   17938:	ldr	lr, [sp, #136]	; 0x88
   1793c:	str	r9, [sp, #88]	; 0x58
   17940:	orr	r2, r2, r1, lsr #31
   17944:	lsr	r1, r0, #16
   17948:	eor	lr, lr, r9
   1794c:	lsr	r3, lr, #16
   17950:	str	r2, [sp, #112]	; 0x70
   17954:	orr	r1, r1, lr, lsl #16
   17958:	ldr	r2, [sp, #4]
   1795c:	orr	r3, r3, r0, lsl #16
   17960:	adds	r9, r4, r1
   17964:	adc	r0, r5, r3
   17968:	eor	r7, r7, r9
   1796c:	mov	lr, r0
   17970:	ldr	r0, [sp, #140]	; 0x8c
   17974:	lsl	r5, r7, #1
   17978:	eor	r4, r6, lr
   1797c:	ldr	r6, [sp, #68]	; 0x44
   17980:	stmib	sp, {r4, lr}
   17984:	lsl	r4, r4, #1
   17988:	adds	sl, r2, r0
   1798c:	ldr	r0, [sp, #28]
   17990:	ldr	r2, [sp, #176]	; 0xb0
   17994:	adc	fp, fp, r2
   17998:	ldr	r2, [sp, #148]	; 0x94
   1799c:	adds	sl, sl, r2
   179a0:	adc	fp, fp, r0
   179a4:	eor	r1, r1, sl
   179a8:	eor	r3, r3, fp
   179ac:	adds	r8, r8, r3
   179b0:	mov	r0, r8
   179b4:	ldr	r8, [sp, #60]	; 0x3c
   179b8:	adc	lr, r6, r1
   179bc:	ldr	r6, [sp, #64]	; 0x40
   179c0:	str	r0, [sp, #32]
   179c4:	eor	r0, r0, r2
   179c8:	ldr	r2, [sp, #28]
   179cc:	adds	sl, r8, sl
   179d0:	adc	fp, r6, fp
   179d4:	lsr	r6, r0, #24
   179d8:	eor	r2, lr, r2
   179dc:	lsr	r8, r2, #24
   179e0:	orr	r2, r6, r2, lsl #8
   179e4:	orr	r0, r8, r0, lsl #8
   179e8:	adds	r8, sl, r2
   179ec:	orr	sl, r4, r7, lsr #31
   179f0:	eor	r3, r3, r8
   179f4:	mov	r6, r8
   179f8:	ldr	r8, [sp, #4]
   179fc:	adc	fp, fp, r0
   17a00:	eor	r1, r1, fp
   17a04:	str	r6, [sp, #60]	; 0x3c
   17a08:	lsr	r4, r1, #16
   17a0c:	str	fp, [sp, #64]	; 0x40
   17a10:	orr	r8, r5, r8, lsr #31
   17a14:	lsr	r5, r3, #16
   17a18:	orr	r7, r5, r1, lsl #16
   17a1c:	ldr	r1, [sp, #100]	; 0x64
   17a20:	orr	r5, r4, r3, lsl #16
   17a24:	ldr	r3, [sp, #96]	; 0x60
   17a28:	str	r7, [sp, #124]	; 0x7c
   17a2c:	str	r5, [sp, #128]	; 0x80
   17a30:	ldr	r6, [sp, #32]
   17a34:	ldr	fp, [sp, #108]	; 0x6c
   17a38:	adds	r6, r6, r7
   17a3c:	mov	r7, r6
   17a40:	adc	r6, lr, r5
   17a44:	adds	r3, r3, fp
   17a48:	ldr	fp, [sp, #80]	; 0x50
   17a4c:	eor	r0, r0, r6
   17a50:	eor	r2, r2, r7
   17a54:	str	r7, [sp, #68]	; 0x44
   17a58:	str	r6, [sp, #80]	; 0x50
   17a5c:	adc	r4, r1, fp
   17a60:	adds	r3, r3, ip
   17a64:	ldr	fp, [sp, #112]	; 0x70
   17a68:	ldr	r1, [sp, #236]	; 0xec
   17a6c:	adc	r4, r4, fp
   17a70:	eor	r5, r3, r1
   17a74:	ldr	r1, [sp, #168]	; 0xa8
   17a78:	eor	lr, r4, r1
   17a7c:	ldr	r1, [sp, #8]
   17a80:	adds	r6, r9, lr
   17a84:	ldr	r9, [sp, #12]
   17a88:	eor	ip, ip, r6
   17a8c:	adc	r7, r1, r5
   17a90:	lsl	r1, r2, #1
   17a94:	adds	r3, r9, r3
   17a98:	str	r1, [sp, #8]
   17a9c:	eor	r1, r7, fp
   17aa0:	lsr	fp, ip, #24
   17aa4:	lsr	r9, r1, #24
   17aa8:	orr	r1, fp, r1, lsl #8
   17aac:	str	r9, [sp, #4]
   17ab0:	ldr	r9, [sp, #104]	; 0x68
   17ab4:	adc	r4, r9, r4
   17ab8:	ldr	r9, [sp, #4]
   17abc:	adds	fp, r3, r1
   17ac0:	lsl	r3, r0, #1
   17ac4:	eor	lr, lr, fp
   17ac8:	str	fp, [sp, #96]	; 0x60
   17acc:	orr	r2, r3, r2, lsr #31
   17ad0:	orr	ip, r9, ip, lsl #8
   17ad4:	ldr	r9, [sp, #204]	; 0xcc
   17ad8:	str	r2, [sp, #28]
   17adc:	adc	r2, r4, ip
   17ae0:	ldr	r4, [sp, #8]
   17ae4:	eor	r5, r5, r2
   17ae8:	str	r2, [sp, #100]	; 0x64
   17aec:	lsr	r2, lr, #16
   17af0:	lsr	r3, r5, #16
   17af4:	orr	r0, r4, r0, lsr #31
   17af8:	orr	r4, r3, lr, lsl #16
   17afc:	ldr	lr, [sp, #52]	; 0x34
   17b00:	str	r0, [sp, #12]
   17b04:	orr	r0, r2, r5, lsl #16
   17b08:	adds	fp, r6, r0
   17b0c:	ldr	r6, [sp, #188]	; 0xbc
   17b10:	str	r4, [sp, #108]	; 0x6c
   17b14:	str	fp, [sp, #4]
   17b18:	ldr	fp, [sp, #76]	; 0x4c
   17b1c:	str	r0, [sp, #104]	; 0x68
   17b20:	adc	r0, r7, r4
   17b24:	eor	ip, ip, r0
   17b28:	str	r0, [sp, #52]	; 0x34
   17b2c:	adds	r3, lr, fp
   17b30:	ldr	lr, [sp, #56]	; 0x38
   17b34:	ldr	fp, [sp, #84]	; 0x54
   17b38:	adc	r2, lr, fp
   17b3c:	ldr	lr, [sp, #44]	; 0x2c
   17b40:	adds	r3, r3, r8
   17b44:	adc	r2, r2, sl
   17b48:	eor	r5, r3, r6
   17b4c:	eor	r4, r2, r9
   17b50:	lsl	r9, ip, #1
   17b54:	adds	r0, lr, r4
   17b58:	ldr	lr, [sp, #4]
   17b5c:	eor	r6, r0, r8
   17b60:	lsr	fp, r6, #24
   17b64:	eor	r1, r1, lr
   17b68:	ldr	lr, [sp, #48]	; 0x30
   17b6c:	lsl	r8, r1, #1
   17b70:	adc	lr, lr, r5
   17b74:	eor	r7, lr, sl
   17b78:	ldr	sl, [sp, #132]	; 0x84
   17b7c:	adds	r3, sl, r3
   17b80:	lsr	sl, r7, #24
   17b84:	str	r3, [sp, #8]
   17b88:	ldr	r3, [sp, #24]
   17b8c:	adc	r2, r3, r2
   17b90:	orr	r3, fp, r7, lsl #8
   17b94:	ldr	fp, [sp, #64]	; 0x40
   17b98:	orr	r7, sl, r6, lsl #8
   17b9c:	ldr	r6, [sp, #8]
   17ba0:	str	r3, [sp, #56]	; 0x38
   17ba4:	adds	sl, r6, r3
   17ba8:	orr	r3, r9, r1, lsr #31
   17bac:	ldr	r9, [sp, #144]	; 0x90
   17bb0:	orr	r6, r8, ip, lsr #31
   17bb4:	eor	r4, r4, sl
   17bb8:	ldr	ip, [sp, #36]	; 0x24
   17bbc:	str	sl, [sp, #44]	; 0x2c
   17bc0:	str	r3, [sp, #32]
   17bc4:	adc	r3, r2, r7
   17bc8:	lsr	r2, r4, #16
   17bcc:	eor	r5, r5, r3
   17bd0:	str	r6, [sp, #24]
   17bd4:	str	r3, [sp, #48]	; 0x30
   17bd8:	lsr	r3, r5, #16
   17bdc:	orr	r6, r2, r5, lsl #16
   17be0:	ldr	r2, [sp, #116]	; 0x74
   17be4:	orr	r4, r3, r4, lsl #16
   17be8:	adds	r0, r0, r6
   17bec:	ldr	sl, [sp, #120]	; 0x78
   17bf0:	mov	r8, r4
   17bf4:	str	r6, [sp, #76]	; 0x4c
   17bf8:	ldr	r4, [sp, #72]	; 0x48
   17bfc:	adc	lr, lr, r8
   17c00:	str	r8, [sp, #84]	; 0x54
   17c04:	eor	fp, fp, lr
   17c08:	eor	lr, lr, r7
   17c0c:	ldr	r1, [sp, #152]	; 0x98
   17c10:	ldr	r8, [sp, #60]	; 0x3c
   17c14:	adds	r3, r2, r4
   17c18:	ldr	r4, [sp, #88]	; 0x58
   17c1c:	ldr	r5, [sp, #156]	; 0x9c
   17c20:	adc	r2, sl, r4
   17c24:	adds	r3, r3, r9
   17c28:	eor	r6, r3, r1
   17c2c:	ldr	r1, [sp, #196]	; 0xc4
   17c30:	eor	sl, r8, r0
   17c34:	adc	r2, r2, r5
   17c38:	eor	r4, r2, r1
   17c3c:	adds	r1, ip, r4
   17c40:	ldr	ip, [sp, #40]	; 0x28
   17c44:	eor	r8, r1, r9
   17c48:	adc	ip, ip, r6
   17c4c:	eor	r9, ip, r5
   17c50:	ldr	r5, [sp, #16]
   17c54:	adds	r3, r5, r3
   17c58:	lsr	r5, r9, #24
   17c5c:	str	r5, [sp, #8]
   17c60:	ldr	r5, [sp, #20]
   17c64:	adc	r2, r5, r2
   17c68:	ldr	r5, [sp, #184]	; 0xb8
   17c6c:	eor	fp, fp, r5
   17c70:	lsr	r5, r8, #24
   17c74:	orr	r5, r5, r9, lsl #8
   17c78:	ldr	r9, [sp, #180]	; 0xb4
   17c7c:	eor	sl, sl, r9
   17c80:	ldr	r9, [sp, #8]
   17c84:	orr	r7, r9, r8, lsl #8
   17c88:	ldr	r8, [sp, #56]	; 0x38
   17c8c:	adds	r9, r3, r5
   17c90:	eor	r4, r4, r9
   17c94:	adc	r2, r2, r7
   17c98:	eor	r6, r6, r2
   17c9c:	eor	r0, r0, r8
   17ca0:	ldr	r8, [sp, #92]	; 0x5c
   17ca4:	strd	sl, [r8]
   17ca8:	lsl	fp, r0, #1
   17cac:	mov	r3, r8
   17cb0:	str	r9, [sp, #8]
   17cb4:	lsr	r9, r6, #16
   17cb8:	lsr	r8, r4, #16
   17cbc:	orr	r4, r9, r4, lsl #16
   17cc0:	ldr	r9, [sp, #96]	; 0x60
   17cc4:	lsl	sl, lr, #1
   17cc8:	orr	lr, fp, lr, lsr #31
   17ccc:	ldr	fp, [sp, #160]	; 0xa0
   17cd0:	orr	r6, r8, r6, lsl #16
   17cd4:	orr	r0, sl, r0, lsr #31
   17cd8:	mov	sl, r3
   17cdc:	ldr	r3, [sp, #48]	; 0x30
   17ce0:	adds	r1, r1, r6
   17ce4:	eor	r8, r9, r1
   17ce8:	ldr	r9, [sp, #100]	; 0x64
   17cec:	adc	ip, ip, r4
   17cf0:	eor	r8, r8, fp
   17cf4:	eor	r5, r5, r1
   17cf8:	ldr	fp, [sp, #164]	; 0xa4
   17cfc:	eor	r7, r7, ip
   17d00:	lsl	r1, r7, #1
   17d04:	eor	r9, r9, ip
   17d08:	lsl	ip, r5, #1
   17d0c:	orr	r5, r1, r5, lsr #31
   17d10:	ldr	r1, [sl, #20]
   17d14:	eor	r9, r9, fp
   17d18:	orr	r7, ip, r7, lsr #31
   17d1c:	ldr	fp, [sp, #44]	; 0x2c
   17d20:	strd	r8, [sl, #8]
   17d24:	ldr	r8, [sl, #16]
   17d28:	ldr	ip, [sp, #68]	; 0x44
   17d2c:	ldr	r9, [sl, #24]
   17d30:	eor	ip, ip, r8
   17d34:	ldr	r8, [sl, #28]
   17d38:	eor	ip, ip, fp
   17d3c:	ldr	fp, [sp, #80]	; 0x50
   17d40:	eor	r2, r2, r8
   17d44:	eor	r1, r1, fp
   17d48:	mov	fp, sl
   17d4c:	ldr	sl, [sl, #32]
   17d50:	eor	r1, r1, r3
   17d54:	ldr	r3, [sp, #8]
   17d58:	eor	r7, r7, sl
   17d5c:	ldr	sl, [sp, #28]
   17d60:	eor	r3, r3, r9
   17d64:	mov	r9, fp
   17d68:	ldr	fp, [sp, #4]
   17d6c:	str	ip, [r9, #16]
   17d70:	str	r1, [r9, #20]
   17d74:	mov	r1, r9
   17d78:	ldr	ip, [r9, #36]	; 0x24
   17d7c:	eor	r3, r3, fp
   17d80:	ldr	r8, [r9, #40]	; 0x28
   17d84:	str	r3, [r1, #24]
   17d88:	mov	r3, r1
   17d8c:	ldr	r9, [sp, #52]	; 0x34
   17d90:	eor	r5, r5, ip
   17d94:	ldr	ip, [sp, #76]	; 0x4c
   17d98:	eor	r2, r2, r9
   17d9c:	ldr	r9, [r1, #44]	; 0x2c
   17da0:	ldr	r1, [sp, #104]	; 0x68
   17da4:	str	r2, [r3, #28]
   17da8:	mov	r2, r3
   17dac:	ldr	r3, [r3, #48]	; 0x30
   17db0:	eor	r9, r9, sl
   17db4:	ldr	sl, [sp, #24]
   17db8:	eor	r7, r7, r1
   17dbc:	ldr	r1, [sp, #108]	; 0x6c
   17dc0:	eor	r5, r5, r1
   17dc4:	ldr	r1, [sp, #12]
   17dc8:	eor	r8, r8, r1
   17dcc:	eor	r8, r8, ip
   17dd0:	ldr	ip, [sp, #84]	; 0x54
   17dd4:	ldr	r1, [r2, #52]	; 0x34
   17dd8:	str	r7, [r2, #32]
   17ddc:	ldr	fp, [r2, #56]	; 0x38
   17de0:	eor	r9, r9, ip
   17de4:	eor	ip, sl, r3
   17de8:	str	r5, [r2, #36]	; 0x24
   17dec:	eor	r6, r6, ip
   17df0:	ldr	ip, [sp, #32]
   17df4:	strd	r8, [r2, #40]	; 0x28
   17df8:	ldr	r3, [r2, #60]	; 0x3c
   17dfc:	eor	lr, lr, fp
   17e00:	str	r6, [r2, #48]	; 0x30
   17e04:	ldr	r7, [sp, #124]	; 0x7c
   17e08:	eor	r1, r1, ip
   17e0c:	ldr	r5, [sp, #128]	; 0x80
   17e10:	eor	r4, r4, r1
   17e14:	eor	r0, r0, r3
   17e18:	str	r4, [r2, #52]	; 0x34
   17e1c:	eor	r1, lr, r7
   17e20:	eor	r3, r0, r5
   17e24:	str	r1, [r2, #56]	; 0x38
   17e28:	str	r3, [r2, #60]	; 0x3c
   17e2c:	add	sp, sp, #524	; 0x20c
   17e30:	ldrd	r4, [sp]
   17e34:	ldrd	r6, [sp, #8]
   17e38:	ldrd	r8, [sp, #16]
   17e3c:	ldrd	sl, [sp, #24]
   17e40:	add	sp, sp, #32
   17e44:	pop	{pc}		; (ldr pc, [sp], #4)
   17e48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17e4c:	mov	r4, r0
   17e50:	strd	r6, [sp, #8]
   17e54:	strd	sl, [sp, #24]
   17e58:	add	fp, r0, #96	; 0x60
   17e5c:	ldr	sl, [r0, #224]	; 0xe0
   17e60:	strd	r8, [sp, #16]
   17e64:	mov	r8, r2
   17e68:	mov	r9, r1
   17e6c:	str	lr, [sp, #32]
   17e70:	sub	sp, sp, #20
   17e74:	rsb	r2, sl, #128	; 0x80
   17e78:	add	r0, fp, sl
   17e7c:	cmp	r2, r8
   17e80:	bcc	17eb8 <__assert_fail@plt+0x6d2c>
   17e84:	mov	r2, r8
   17e88:	mov	r1, r9
   17e8c:	bl	10f34 <memcpy@plt>
   17e90:	ldr	r3, [r4, #224]	; 0xe0
   17e94:	add	r8, r3, r8
   17e98:	str	r8, [r4, #224]	; 0xe0
   17e9c:	add	sp, sp, #20
   17ea0:	ldrd	r4, [sp]
   17ea4:	ldrd	r6, [sp, #8]
   17ea8:	ldrd	r8, [sp, #16]
   17eac:	ldrd	sl, [sp, #24]
   17eb0:	add	sp, sp, #32
   17eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   17eb8:	mov	r3, #0
   17ebc:	add	r5, r1, r2
   17ec0:	sub	r8, r8, #128	; 0x80
   17ec4:	str	r3, [r4, #224]	; 0xe0
   17ec8:	add	r8, sl, r8
   17ecc:	bl	10f34 <memcpy@plt>
   17ed0:	ldr	lr, [r4, #64]	; 0x40
   17ed4:	mov	r1, fp
   17ed8:	mov	r0, r4
   17edc:	ldr	ip, [r4, #68]	; 0x44
   17ee0:	ldrd	r2, [r4, #72]	; 0x48
   17ee4:	adds	lr, lr, #128	; 0x80
   17ee8:	mov	r6, lr
   17eec:	adc	ip, ip, #0
   17ef0:	cmp	ip, #0
   17ef4:	mov	r7, ip
   17ef8:	cmpeq	lr, #127	; 0x7f
   17efc:	movls	ip, #1
   17f00:	movhi	ip, #0
   17f04:	strd	r6, [r4, #64]	; 0x40
   17f08:	adds	r6, r2, ip
   17f0c:	adc	r7, r3, #0
   17f10:	strd	r6, [r4, #72]	; 0x48
   17f14:	bl	12eac <__assert_fail@plt+0x1d20>
   17f18:	cmp	r8, #128	; 0x80
   17f1c:	bls	17fa8 <__assert_fail@plt+0x6e1c>
   17f20:	sub	sl, r8, #129	; 0x81
   17f24:	str	fp, [sp, #12]
   17f28:	lsr	sl, sl, #7
   17f2c:	add	r9, sl, #1
   17f30:	add	r9, r5, r9, lsl #7
   17f34:	str	sl, [sp]
   17f38:	ldr	r0, [r4, #64]	; 0x40
   17f3c:	mov	r1, r5
   17f40:	add	r5, r5, #128	; 0x80
   17f44:	ldr	ip, [r4, #68]	; 0x44
   17f48:	ldrd	r2, [r4, #72]	; 0x48
   17f4c:	adds	r6, r0, #128	; 0x80
   17f50:	mov	r0, r4
   17f54:	adc	r7, ip, #0
   17f58:	cmp	r7, #0
   17f5c:	cmpeq	r6, #127	; 0x7f
   17f60:	strd	r6, [r4, #64]	; 0x40
   17f64:	movls	ip, #1
   17f68:	movhi	ip, #0
   17f6c:	adds	sl, r2, ip
   17f70:	adc	fp, r3, #0
   17f74:	mov	r2, sl
   17f78:	mov	r3, fp
   17f7c:	strd	r2, [r4, #72]	; 0x48
   17f80:	bl	12eac <__assert_fail@plt+0x1d20>
   17f84:	cmp	r5, r9
   17f88:	bne	17f38 <__assert_fail@plt+0x6dac>
   17f8c:	ldr	sl, [sp]
   17f90:	sub	r8, r8, #128	; 0x80
   17f94:	ldr	fp, [sp, #12]
   17f98:	ldr	r0, [r4, #224]	; 0xe0
   17f9c:	sub	r8, r8, sl, lsl #7
   17fa0:	add	r0, fp, r0
   17fa4:	b	17e84 <__assert_fail@plt+0x6cf8>
   17fa8:	ldr	r0, [r4, #224]	; 0xe0
   17fac:	mov	r9, r5
   17fb0:	add	r0, fp, r0
   17fb4:	b	17e84 <__assert_fail@plt+0x6cf8>
   17fb8:	mov	r2, #176	; 0xb0
   17fbc:	strd	r4, [sp, #-16]!
   17fc0:	mov	r4, r0
   17fc4:	mov	r5, r1
   17fc8:	add	r0, r0, #64	; 0x40
   17fcc:	str	r6, [sp, #8]
   17fd0:	mov	r1, #0
   17fd4:	str	lr, [sp, #12]
   17fd8:	sub	sp, sp, #8
   17fdc:	bl	110b4 <memset@plt>
   17fe0:	movw	r1, #64592	; 0xfc50
   17fe4:	movt	r1, #1
   17fe8:	ldr	lr, [r1]
   17fec:	mov	r2, r5
   17ff0:	sub	r3, r4, #8
   17ff4:	add	r6, r4, #56	; 0x38
   17ff8:	ldr	ip, [r1, #4]
   17ffc:	ldr	r0, [r1, #8]
   18000:	str	lr, [r4]
   18004:	ldr	lr, [r1, #12]
   18008:	str	ip, [r4, #4]
   1800c:	ldr	ip, [r1, #16]
   18010:	str	r0, [r4, #8]
   18014:	ldr	r0, [r1, #20]
   18018:	str	lr, [r4, #12]
   1801c:	ldr	lr, [r1, #24]
   18020:	str	ip, [r4, #16]
   18024:	ldr	ip, [r1, #28]
   18028:	str	r0, [r4, #20]
   1802c:	ldr	r0, [r1, #32]
   18030:	str	lr, [r4, #24]
   18034:	ldr	lr, [r1, #36]	; 0x24
   18038:	str	ip, [r4, #28]
   1803c:	ldr	ip, [r1, #40]	; 0x28
   18040:	str	r0, [r4, #32]
   18044:	ldr	r0, [r1, #44]	; 0x2c
   18048:	str	lr, [r4, #36]	; 0x24
   1804c:	ldr	lr, [r1, #48]	; 0x30
   18050:	str	ip, [r4, #40]	; 0x28
   18054:	ldr	ip, [r1, #52]	; 0x34
   18058:	str	r0, [r4, #44]	; 0x2c
   1805c:	ldrd	r0, [r1, #56]	; 0x38
   18060:	str	lr, [r4, #48]	; 0x30
   18064:	str	ip, [r4, #52]	; 0x34
   18068:	str	r0, [r4, #56]	; 0x38
   1806c:	str	r1, [r4, #60]	; 0x3c
   18070:	ldr	r0, [r3, #8]!
   18074:	add	r2, r2, #8
   18078:	ldr	lr, [r2, #-8]
   1807c:	ldr	ip, [r2, #-4]
   18080:	cmp	r6, r3
   18084:	ldr	r1, [r3, #4]
   18088:	eor	r0, r0, lr
   1808c:	str	lr, [sp]
   18090:	str	ip, [sp, #4]
   18094:	eor	r1, r1, ip
   18098:	strd	r0, [r3]
   1809c:	bne	18070 <__assert_fail@plt+0x6ee4>
   180a0:	ldrb	r3, [r5]
   180a4:	mov	r0, #0
   180a8:	str	r3, [r4, #228]	; 0xe4
   180ac:	add	sp, sp, #8
   180b0:	ldrd	r4, [sp]
   180b4:	ldr	r6, [sp, #8]
   180b8:	add	sp, sp, #12
   180bc:	pop	{pc}		; (ldr pc, [sp], #4)
   180c0:	sub	r3, r1, #1
   180c4:	cmp	r3, #63	; 0x3f
   180c8:	bhi	18218 <__assert_fail@plt+0x708c>
   180cc:	movw	r2, #257	; 0x101
   180d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   180d4:	mov	r3, #0
   180d8:	strd	r6, [sp, #8]
   180dc:	mov	r5, r1
   180e0:	mov	r6, #0
   180e4:	str	lr, [sp, #16]
   180e8:	sub	sp, sp, #76	; 0x4c
   180ec:	mov	r7, #0
   180f0:	mov	r4, r0
   180f4:	mov	r1, r3
   180f8:	add	r0, r0, #64	; 0x40
   180fc:	strb	r5, [sp, #8]
   18100:	strh	r2, [sp, #10]
   18104:	mov	r2, #176	; 0xb0
   18108:	strb	r3, [sp, #9]
   1810c:	str	r3, [sp, #12]
   18110:	str	r3, [sp, #16]
   18114:	str	r3, [sp, #20]
   18118:	strh	r3, [sp, #24]
   1811c:	str	r3, [sp, #26]
   18120:	str	r3, [sp, #30]
   18124:	str	r3, [sp, #34]	; 0x22
   18128:	strh	r3, [sp, #38]	; 0x26
   1812c:	strd	r6, [sp, #40]	; 0x28
   18130:	strd	r6, [sp, #48]	; 0x30
   18134:	strd	r6, [sp, #56]	; 0x38
   18138:	strd	r6, [sp, #64]	; 0x40
   1813c:	bl	110b4 <memset@plt>
   18140:	movw	r3, #64592	; 0xfc50
   18144:	movt	r3, #1
   18148:	ldm	r3, {r6, ip}
   1814c:	add	r1, sp, #8
   18150:	sub	r2, r4, #8
   18154:	add	lr, r4, #56	; 0x38
   18158:	ldr	r0, [r3, #8]
   1815c:	str	r6, [r4]
   18160:	str	ip, [r4, #4]
   18164:	str	r0, [r4, #8]
   18168:	ldr	r6, [r3, #12]
   1816c:	ldr	ip, [r3, #16]
   18170:	ldr	r0, [r3, #20]
   18174:	str	r6, [r4, #12]
   18178:	ldr	r6, [r3, #24]
   1817c:	str	ip, [r4, #16]
   18180:	ldr	ip, [r3, #28]
   18184:	str	r0, [r4, #20]
   18188:	ldr	r0, [r3, #32]
   1818c:	str	r6, [r4, #24]
   18190:	ldr	r6, [r3, #36]	; 0x24
   18194:	str	ip, [r4, #28]
   18198:	ldr	ip, [r3, #40]	; 0x28
   1819c:	str	r0, [r4, #32]
   181a0:	ldr	r0, [r3, #44]	; 0x2c
   181a4:	str	r6, [r4, #36]	; 0x24
   181a8:	ldr	r6, [r3, #48]	; 0x30
   181ac:	str	ip, [r4, #40]	; 0x28
   181b0:	ldr	ip, [r3, #52]	; 0x34
   181b4:	str	r0, [r4, #44]	; 0x2c
   181b8:	ldr	r0, [r3, #56]	; 0x38
   181bc:	str	r6, [r4, #48]	; 0x30
   181c0:	ldr	r3, [r3, #60]	; 0x3c
   181c4:	str	ip, [r4, #52]	; 0x34
   181c8:	str	r0, [r4, #56]	; 0x38
   181cc:	str	r3, [r4, #60]	; 0x3c
   181d0:	ldrd	r6, [r1], #8
   181d4:	ldr	r0, [r2, #8]!
   181d8:	strd	r6, [sp]
   181dc:	ldr	ip, [sp, #4]
   181e0:	eor	r0, r0, r6
   181e4:	cmp	r2, lr
   181e8:	ldr	r3, [r2, #4]
   181ec:	str	r0, [r2]
   181f0:	eor	r3, r3, ip
   181f4:	str	r3, [r2, #4]
   181f8:	bne	181d0 <__assert_fail@plt+0x7044>
   181fc:	mov	r0, #0
   18200:	str	r5, [r4, #228]	; 0xe4
   18204:	add	sp, sp, #76	; 0x4c
   18208:	ldrd	r4, [sp]
   1820c:	ldrd	r6, [sp, #8]
   18210:	add	sp, sp, #16
   18214:	pop	{pc}		; (ldr pc, [sp], #4)
   18218:	mvn	r0, #0
   1821c:	bx	lr
   18220:	sub	ip, r1, #1
   18224:	cmp	ip, #63	; 0x3f
   18228:	bhi	18404 <__assert_fail@plt+0x7278>
   1822c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18230:	sub	ip, r3, #1
   18234:	strd	r6, [sp, #8]
   18238:	str	lr, [sp, #28]
   1823c:	clz	lr, r2
   18240:	lsr	lr, lr, #5
   18244:	str	r8, [sp, #16]
   18248:	strd	sl, [sp, #20]
   1824c:	sub	sp, sp, #192	; 0xc0
   18250:	cmp	ip, #63	; 0x3f
   18254:	movls	ip, lr
   18258:	orrhi	ip, lr, #1
   1825c:	cmp	ip, #0
   18260:	bne	183fc <__assert_fail@plt+0x7270>
   18264:	mov	r6, r3
   18268:	mov	r5, r1
   1826c:	mov	r3, #0
   18270:	movw	r1, #257	; 0x101
   18274:	mov	r7, r2
   18278:	mov	r2, #0
   1827c:	strb	r5, [sp]
   18280:	mov	r4, r0
   18284:	add	r0, r0, #64	; 0x40
   18288:	strb	r6, [sp, #1]
   1828c:	strh	r1, [sp, #2]
   18290:	mov	r1, ip
   18294:	add	r8, r4, #56	; 0x38
   18298:	str	ip, [sp, #4]
   1829c:	strd	r2, [sp, #32]
   182a0:	strd	r2, [sp, #40]	; 0x28
   182a4:	strd	r2, [sp, #48]	; 0x30
   182a8:	strd	r2, [sp, #56]	; 0x38
   182ac:	mov	r2, #176	; 0xb0
   182b0:	str	ip, [sp, #8]
   182b4:	str	ip, [sp, #12]
   182b8:	strh	ip, [sp, #16]
   182bc:	str	ip, [sp, #18]
   182c0:	str	ip, [sp, #22]
   182c4:	str	ip, [sp, #26]
   182c8:	strh	ip, [sp, #30]
   182cc:	bl	110b4 <memset@plt>
   182d0:	movw	r0, #64592	; 0xfc50
   182d4:	movt	r0, #1
   182d8:	ldr	r3, [r0]
   182dc:	mov	lr, sp
   182e0:	sub	ip, r4, #8
   182e4:	ldmib	r0, {r1, r2}
   182e8:	str	r3, [r4]
   182ec:	ldr	r3, [r0, #12]
   182f0:	str	r1, [r4, #4]
   182f4:	str	r2, [r4, #8]
   182f8:	ldr	r1, [r0, #16]
   182fc:	str	r3, [r4, #12]
   18300:	ldr	r2, [r0, #20]
   18304:	ldr	r3, [r0, #24]
   18308:	str	r1, [r4, #16]
   1830c:	ldr	r1, [r0, #28]
   18310:	str	r2, [r4, #20]
   18314:	ldr	r2, [r0, #32]
   18318:	str	r3, [r4, #24]
   1831c:	ldr	r3, [r0, #36]	; 0x24
   18320:	str	r1, [r4, #28]
   18324:	ldr	r1, [r0, #40]	; 0x28
   18328:	str	r2, [r4, #32]
   1832c:	ldr	r2, [r0, #44]	; 0x2c
   18330:	str	r3, [r4, #36]	; 0x24
   18334:	ldr	r3, [r0, #48]	; 0x30
   18338:	str	r1, [r4, #40]	; 0x28
   1833c:	ldr	r1, [r0, #52]	; 0x34
   18340:	str	r2, [r4, #44]	; 0x2c
   18344:	ldr	r2, [r0, #56]	; 0x38
   18348:	str	r3, [r4, #48]	; 0x30
   1834c:	ldr	r3, [r0, #60]	; 0x3c
   18350:	str	r1, [r4, #52]	; 0x34
   18354:	str	r2, [r4, #56]	; 0x38
   18358:	str	r3, [r4, #60]	; 0x3c
   1835c:	ldrd	sl, [lr], #8
   18360:	ldr	r2, [ip, #8]!
   18364:	strd	sl, [sp, #64]	; 0x40
   18368:	ldr	r1, [sp, #68]	; 0x44
   1836c:	eor	r2, r2, sl
   18370:	cmp	ip, r8
   18374:	ldr	r3, [ip, #4]
   18378:	str	r2, [ip]
   1837c:	eor	r3, r3, r1
   18380:	str	r3, [ip, #4]
   18384:	bne	1835c <__assert_fail@plt+0x71d0>
   18388:	mov	r2, #128	; 0x80
   1838c:	mov	r1, #0
   18390:	str	r5, [r4, #228]	; 0xe4
   18394:	add	r0, sp, #64	; 0x40
   18398:	bl	110b4 <memset@plt>
   1839c:	mov	r3, #128	; 0x80
   183a0:	mov	r2, r6
   183a4:	mov	r1, r7
   183a8:	add	r0, sp, #64	; 0x40
   183ac:	bl	10fac <__memcpy_chk@plt>
   183b0:	mov	r0, r4
   183b4:	mov	r2, #128	; 0x80
   183b8:	add	r1, sp, #64	; 0x40
   183bc:	bl	17e48 <__assert_fail@plt+0x6cbc>
   183c0:	movw	r3, #4376	; 0x1118
   183c4:	movt	r3, #3
   183c8:	add	r0, sp, #64	; 0x40
   183cc:	mov	r2, #128	; 0x80
   183d0:	ldr	r3, [r3]
   183d4:	mov	r1, #0
   183d8:	blx	r3
   183dc:	mov	r0, #0
   183e0:	add	sp, sp, #192	; 0xc0
   183e4:	ldrd	r4, [sp]
   183e8:	ldrd	r6, [sp, #8]
   183ec:	ldr	r8, [sp, #16]
   183f0:	ldrd	sl, [sp, #20]
   183f4:	add	sp, sp, #28
   183f8:	pop	{pc}		; (ldr pc, [sp], #4)
   183fc:	mvn	r0, #0
   18400:	b	183e0 <__assert_fail@plt+0x7254>
   18404:	mvn	r0, #0
   18408:	bx	lr
   1840c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18410:	strd	r6, [sp, #8]
   18414:	strd	r8, [sp, #16]
   18418:	subs	r8, r2, #0
   1841c:	strd	sl, [sp, #24]
   18420:	str	lr, [sp, #32]
   18424:	sub	sp, sp, #20
   18428:	beq	18464 <__assert_fail@plt+0x72d8>
   1842c:	ldr	sl, [r0, #224]	; 0xe0
   18430:	add	fp, r0, #96	; 0x60
   18434:	mov	r4, r0
   18438:	mov	r9, r1
   1843c:	rsb	r2, sl, #128	; 0x80
   18440:	add	r0, fp, sl
   18444:	cmp	r8, r2
   18448:	bhi	18484 <__assert_fail@plt+0x72f8>
   1844c:	mov	r2, r8
   18450:	mov	r1, r9
   18454:	bl	10f34 <memcpy@plt>
   18458:	ldr	r3, [r4, #224]	; 0xe0
   1845c:	add	r8, r3, r8
   18460:	str	r8, [r4, #224]	; 0xe0
   18464:	mov	r0, #0
   18468:	add	sp, sp, #20
   1846c:	ldrd	r4, [sp]
   18470:	ldrd	r6, [sp, #8]
   18474:	ldrd	r8, [sp, #16]
   18478:	ldrd	sl, [sp, #24]
   1847c:	add	sp, sp, #32
   18480:	pop	{pc}		; (ldr pc, [sp], #4)
   18484:	mov	r3, #0
   18488:	add	r5, r1, r2
   1848c:	sub	sl, sl, #128	; 0x80
   18490:	str	r3, [r4, #224]	; 0xe0
   18494:	add	r8, r8, sl
   18498:	bl	10f34 <memcpy@plt>
   1849c:	ldr	lr, [r4, #64]	; 0x40
   184a0:	mov	r1, fp
   184a4:	mov	r0, r4
   184a8:	ldr	ip, [r4, #68]	; 0x44
   184ac:	ldrd	r2, [r4, #72]	; 0x48
   184b0:	adds	lr, lr, #128	; 0x80
   184b4:	mov	r6, lr
   184b8:	adc	ip, ip, #0
   184bc:	cmp	ip, #0
   184c0:	mov	r7, ip
   184c4:	cmpeq	lr, #127	; 0x7f
   184c8:	movls	ip, #1
   184cc:	movhi	ip, #0
   184d0:	strd	r6, [r4, #64]	; 0x40
   184d4:	adds	r6, r2, ip
   184d8:	adc	r7, r3, #0
   184dc:	strd	r6, [r4, #72]	; 0x48
   184e0:	bl	12eac <__assert_fail@plt+0x1d20>
   184e4:	cmp	r8, #128	; 0x80
   184e8:	bls	18574 <__assert_fail@plt+0x73e8>
   184ec:	sub	sl, r8, #129	; 0x81
   184f0:	str	fp, [sp, #12]
   184f4:	lsr	sl, sl, #7
   184f8:	add	r9, sl, #1
   184fc:	add	r9, r5, r9, lsl #7
   18500:	str	sl, [sp]
   18504:	ldr	r0, [r4, #64]	; 0x40
   18508:	mov	r1, r5
   1850c:	add	r5, r5, #128	; 0x80
   18510:	ldr	ip, [r4, #68]	; 0x44
   18514:	ldrd	r2, [r4, #72]	; 0x48
   18518:	adds	r6, r0, #128	; 0x80
   1851c:	mov	r0, r4
   18520:	adc	r7, ip, #0
   18524:	cmp	r7, #0
   18528:	cmpeq	r6, #127	; 0x7f
   1852c:	strd	r6, [r4, #64]	; 0x40
   18530:	movls	ip, #1
   18534:	movhi	ip, #0
   18538:	adds	sl, r2, ip
   1853c:	adc	fp, r3, #0
   18540:	mov	r2, sl
   18544:	mov	r3, fp
   18548:	strd	r2, [r4, #72]	; 0x48
   1854c:	bl	12eac <__assert_fail@plt+0x1d20>
   18550:	cmp	r5, r9
   18554:	bne	18504 <__assert_fail@plt+0x7378>
   18558:	ldr	sl, [sp]
   1855c:	sub	r8, r8, #128	; 0x80
   18560:	ldr	fp, [sp, #12]
   18564:	ldr	r0, [r4, #224]	; 0xe0
   18568:	sub	r8, r8, sl, lsl #7
   1856c:	add	r0, fp, r0
   18570:	b	1844c <__assert_fail@plt+0x72c0>
   18574:	ldr	r0, [r4, #224]	; 0xe0
   18578:	mov	r9, r5
   1857c:	add	r0, fp, r0
   18580:	b	1844c <__assert_fail@plt+0x72c0>
   18584:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18588:	mov	r5, r1
   1858c:	mov	r4, r0
   18590:	strd	r6, [sp, #8]
   18594:	mov	r1, #0
   18598:	mov	r6, r2
   1859c:	strd	r8, [sp, #16]
   185a0:	mov	r2, #64	; 0x40
   185a4:	strd	sl, [sp, #24]
   185a8:	str	lr, [sp, #32]
   185ac:	sub	sp, sp, #76	; 0x4c
   185b0:	add	r0, sp, #8
   185b4:	bl	110b4 <memset@plt>
   185b8:	cmp	r5, #0
   185bc:	beq	186bc <__assert_fail@plt+0x7530>
   185c0:	ldr	r3, [r4, #228]	; 0xe4
   185c4:	cmp	r3, r6
   185c8:	bhi	186bc <__assert_fail@plt+0x7530>
   185cc:	ldrd	r2, [r4, #80]	; 0x50
   185d0:	orrs	r3, r2, r3
   185d4:	bne	186bc <__assert_fail@plt+0x7530>
   185d8:	ldrd	r0, [r4, #64]	; 0x40
   185dc:	mov	r7, #0
   185e0:	ldrd	sl, [r4, #72]	; 0x48
   185e4:	ldr	r2, [r4, #224]	; 0xe0
   185e8:	ldrb	r3, [r4, #232]	; 0xe8
   185ec:	adds	r8, r2, r0
   185f0:	adcs	r9, r7, r1
   185f4:	movcs	r1, #1
   185f8:	movcc	r1, #0
   185fc:	adds	r6, sl, r1
   18600:	strd	r8, [r4, #64]	; 0x40
   18604:	adc	r7, fp, #0
   18608:	cmp	r3, #0
   1860c:	strd	r6, [r4, #72]	; 0x48
   18610:	bne	186ac <__assert_fail@plt+0x7520>
   18614:	mvn	r8, #0
   18618:	mvn	r9, #0
   1861c:	add	r6, r4, #96	; 0x60
   18620:	mov	r1, #0
   18624:	add	r0, r6, r2
   18628:	rsb	r2, r2, #128	; 0x80
   1862c:	strd	r8, [r4, #80]	; 0x50
   18630:	bl	110b4 <memset@plt>
   18634:	mov	r1, r6
   18638:	mov	r0, r4
   1863c:	bl	12eac <__assert_fail@plt+0x1d20>
   18640:	sub	r3, r4, #8
   18644:	add	r2, sp, #8
   18648:	add	ip, r4, #56	; 0x38
   1864c:	ldrd	r0, [r3, #8]!
   18650:	cmp	r3, ip
   18654:	strd	r0, [r2], #8
   18658:	strd	r0, [sp]
   1865c:	bne	1864c <__assert_fail@plt+0x74c0>
   18660:	add	r1, sp, #8
   18664:	mov	r0, r5
   18668:	ldr	r2, [r4, #228]	; 0xe4
   1866c:	bl	10f34 <memcpy@plt>
   18670:	movw	r3, #4376	; 0x1118
   18674:	movt	r3, #3
   18678:	add	r0, sp, #8
   1867c:	mov	r2, #64	; 0x40
   18680:	ldr	r3, [r3]
   18684:	mov	r1, #0
   18688:	blx	r3
   1868c:	mov	r0, #0
   18690:	add	sp, sp, #76	; 0x4c
   18694:	ldrd	r4, [sp]
   18698:	ldrd	r6, [sp, #8]
   1869c:	ldrd	r8, [sp, #16]
   186a0:	ldrd	sl, [sp, #24]
   186a4:	add	sp, sp, #32
   186a8:	pop	{pc}		; (ldr pc, [sp], #4)
   186ac:	mvn	r0, #0
   186b0:	mvn	r1, #0
   186b4:	strd	r0, [r4, #88]	; 0x58
   186b8:	b	18614 <__assert_fail@plt+0x7488>
   186bc:	mvn	r0, #0
   186c0:	b	18690 <__assert_fail@plt+0x7504>
   186c4:	adds	ip, r3, #0
   186c8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   186cc:	movne	ip, #1
   186d0:	cmp	r2, #0
   186d4:	strd	r6, [sp, #8]
   186d8:	movne	ip, #0
   186dc:	cmp	r0, #0
   186e0:	strd	r8, [sp, #16]
   186e4:	moveq	ip, #1
   186e8:	str	lr, [sp, #24]
   186ec:	sub	sp, sp, #244	; 0xf4
   186f0:	cmp	ip, #0
   186f4:	ldr	r7, [sp, #272]	; 0x110
   186f8:	ldr	lr, [sp, #276]	; 0x114
   186fc:	bne	187b0 <__assert_fail@plt+0x7624>
   18700:	adds	ip, lr, #0
   18704:	movne	ip, #1
   18708:	cmp	r7, #0
   1870c:	movne	ip, #0
   18710:	cmp	ip, #0
   18714:	bne	187b0 <__assert_fail@plt+0x7624>
   18718:	sub	ip, r1, #1
   1871c:	mov	r4, r1
   18720:	cmp	lr, #64	; 0x40
   18724:	cmpls	ip, #63	; 0x3f
   18728:	bhi	187b0 <__assert_fail@plt+0x7624>
   1872c:	cmp	lr, #0
   18730:	mov	r8, r0
   18734:	mov	r6, r3
   18738:	mov	r5, r2
   1873c:	mov	r9, sp
   18740:	bne	18798 <__assert_fail@plt+0x760c>
   18744:	mov	r0, r9
   18748:	bl	180c0 <__assert_fail@plt+0x6f34>
   1874c:	cmp	r0, #0
   18750:	blt	187b0 <__assert_fail@plt+0x7624>
   18754:	cmp	r6, #0
   18758:	beq	1876c <__assert_fail@plt+0x75e0>
   1875c:	mov	r2, r6
   18760:	mov	r1, r5
   18764:	mov	r0, r9
   18768:	bl	17e48 <__assert_fail@plt+0x6cbc>
   1876c:	mov	r2, r4
   18770:	mov	r1, r8
   18774:	mov	r0, r9
   18778:	bl	18584 <__assert_fail@plt+0x73f8>
   1877c:	mov	r0, #0
   18780:	add	sp, sp, #244	; 0xf4
   18784:	ldrd	r4, [sp]
   18788:	ldrd	r6, [sp, #8]
   1878c:	ldrd	r8, [sp, #16]
   18790:	add	sp, sp, #24
   18794:	pop	{pc}		; (ldr pc, [sp], #4)
   18798:	mov	r3, lr
   1879c:	mov	r2, r7
   187a0:	mov	r0, r9
   187a4:	bl	18220 <__assert_fail@plt+0x7094>
   187a8:	cmp	r0, #0
   187ac:	bge	18754 <__assert_fail@plt+0x75c8>
   187b0:	mvn	r0, #0
   187b4:	b	18780 <__assert_fail@plt+0x75f4>
   187b8:	adds	ip, r3, #0
   187bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   187c0:	movne	ip, #1
   187c4:	cmp	r2, #0
   187c8:	strd	r6, [sp, #8]
   187cc:	movne	ip, #0
   187d0:	cmp	r0, #0
   187d4:	strd	r8, [sp, #16]
   187d8:	moveq	ip, #1
   187dc:	str	lr, [sp, #24]
   187e0:	sub	sp, sp, #244	; 0xf4
   187e4:	cmp	ip, #0
   187e8:	ldr	r7, [sp, #272]	; 0x110
   187ec:	ldr	lr, [sp, #276]	; 0x114
   187f0:	bne	188a4 <__assert_fail@plt+0x7718>
   187f4:	adds	ip, lr, #0
   187f8:	movne	ip, #1
   187fc:	cmp	r7, #0
   18800:	movne	ip, #0
   18804:	cmp	ip, #0
   18808:	bne	188a4 <__assert_fail@plt+0x7718>
   1880c:	sub	ip, r1, #1
   18810:	mov	r4, r1
   18814:	cmp	lr, #64	; 0x40
   18818:	cmpls	ip, #63	; 0x3f
   1881c:	bhi	188a4 <__assert_fail@plt+0x7718>
   18820:	cmp	lr, #0
   18824:	mov	r8, r0
   18828:	mov	r6, r3
   1882c:	mov	r5, r2
   18830:	mov	r9, sp
   18834:	bne	1888c <__assert_fail@plt+0x7700>
   18838:	mov	r0, r9
   1883c:	bl	180c0 <__assert_fail@plt+0x6f34>
   18840:	cmp	r0, #0
   18844:	blt	188a4 <__assert_fail@plt+0x7718>
   18848:	cmp	r6, #0
   1884c:	beq	18860 <__assert_fail@plt+0x76d4>
   18850:	mov	r2, r6
   18854:	mov	r1, r5
   18858:	mov	r0, r9
   1885c:	bl	17e48 <__assert_fail@plt+0x6cbc>
   18860:	mov	r2, r4
   18864:	mov	r1, r8
   18868:	mov	r0, r9
   1886c:	bl	18584 <__assert_fail@plt+0x73f8>
   18870:	mov	r0, #0
   18874:	add	sp, sp, #244	; 0xf4
   18878:	ldrd	r4, [sp]
   1887c:	ldrd	r6, [sp, #8]
   18880:	ldrd	r8, [sp, #16]
   18884:	add	sp, sp, #24
   18888:	pop	{pc}		; (ldr pc, [sp], #4)
   1888c:	mov	r3, lr
   18890:	mov	r2, r7
   18894:	mov	r0, r9
   18898:	bl	18220 <__assert_fail@plt+0x7094>
   1889c:	cmp	r0, #0
   188a0:	bge	18848 <__assert_fail@plt+0x76bc>
   188a4:	mvn	r0, #0
   188a8:	b	18874 <__assert_fail@plt+0x76e8>
   188ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   188b0:	mov	r5, r0
   188b4:	mov	r0, #32768	; 0x8000
   188b8:	strd	r6, [sp, #8]
   188bc:	mov	r7, r2
   188c0:	str	r8, [sp, #16]
   188c4:	mov	r8, r1
   188c8:	str	lr, [sp, #20]
   188cc:	sub	sp, sp, #240	; 0xf0
   188d0:	bl	1e6a0 <__assert_fail@plt+0xd514>
   188d4:	subs	r6, r0, #0
   188d8:	beq	189a4 <__assert_fail@plt+0x7818>
   188dc:	mov	r1, r7
   188e0:	mov	r0, sp
   188e4:	bl	180c0 <__assert_fail@plt+0x6f34>
   188e8:	mov	r4, #0
   188ec:	b	18904 <__assert_fail@plt+0x7778>
   188f0:	cmp	r3, #0
   188f4:	beq	18940 <__assert_fail@plt+0x77b4>
   188f8:	bl	1106c <feof@plt>
   188fc:	cmp	r0, #0
   18900:	bne	18950 <__assert_fail@plt+0x77c4>
   18904:	mov	r3, r5
   18908:	rsb	r2, r4, #32768	; 0x8000
   1890c:	add	r0, r6, r4
   18910:	mov	r1, #1
   18914:	bl	10fdc <fread@plt>
   18918:	mov	r3, r0
   1891c:	mov	r0, r5
   18920:	add	r4, r4, r3
   18924:	cmp	r4, #32768	; 0x8000
   18928:	bne	188f0 <__assert_fail@plt+0x7764>
   1892c:	mov	r2, r4
   18930:	mov	r1, r6
   18934:	mov	r0, sp
   18938:	bl	1840c <__assert_fail@plt+0x7280>
   1893c:	b	188e8 <__assert_fail@plt+0x775c>
   18940:	bl	10f1c <ferror@plt>
   18944:	cmp	r0, #0
   18948:	mvnne	r4, #0
   1894c:	bne	1896c <__assert_fail@plt+0x77e0>
   18950:	cmp	r4, #0
   18954:	bne	18990 <__assert_fail@plt+0x7804>
   18958:	mov	r2, r7
   1895c:	mov	r1, r8
   18960:	mov	r0, sp
   18964:	mov	r4, #0
   18968:	bl	18584 <__assert_fail@plt+0x73f8>
   1896c:	mov	r0, r6
   18970:	bl	18ccc <__assert_fail@plt+0x7b40>
   18974:	mov	r0, r4
   18978:	add	sp, sp, #240	; 0xf0
   1897c:	ldrd	r4, [sp]
   18980:	ldrd	r6, [sp, #8]
   18984:	ldr	r8, [sp, #16]
   18988:	add	sp, sp, #20
   1898c:	pop	{pc}		; (ldr pc, [sp], #4)
   18990:	mov	r2, r4
   18994:	mov	r1, r6
   18998:	mov	r0, sp
   1899c:	bl	1840c <__assert_fail@plt+0x7280>
   189a0:	b	18958 <__assert_fail@plt+0x77cc>
   189a4:	mvn	r4, #0
   189a8:	b	18974 <__assert_fail@plt+0x77e8>
   189ac:	movw	r3, #4528	; 0x11b0
   189b0:	movt	r3, #3
   189b4:	str	r0, [r3]
   189b8:	bx	lr
   189bc:	movw	r3, #4528	; 0x11b0
   189c0:	movt	r3, #3
   189c4:	strb	r0, [r3, #4]
   189c8:	bx	lr
   189cc:	movw	r3, #4484	; 0x1184
   189d0:	movt	r3, #3
   189d4:	strd	r4, [sp, #-16]!
   189d8:	ldr	r0, [r3]
   189dc:	str	r6, [sp, #8]
   189e0:	str	lr, [sp, #12]
   189e4:	sub	sp, sp, #8
   189e8:	bl	1e734 <__assert_fail@plt+0xd5a8>
   189ec:	cmp	r0, #0
   189f0:	beq	18a1c <__assert_fail@plt+0x7890>
   189f4:	movw	r4, #4528	; 0x11b0
   189f8:	movt	r4, #3
   189fc:	ldrb	r6, [r4, #4]
   18a00:	bl	11090 <__errno_location@plt>
   18a04:	mov	r5, r0
   18a08:	cmp	r6, #0
   18a0c:	beq	18a48 <__assert_fail@plt+0x78bc>
   18a10:	ldr	r3, [r0]
   18a14:	cmp	r3, #32
   18a18:	bne	18a48 <__assert_fail@plt+0x78bc>
   18a1c:	movw	r3, #4472	; 0x1178
   18a20:	movt	r3, #3
   18a24:	ldr	r0, [r3]
   18a28:	bl	1e734 <__assert_fail@plt+0xd5a8>
   18a2c:	cmp	r0, #0
   18a30:	bne	18a90 <__assert_fail@plt+0x7904>
   18a34:	add	sp, sp, #8
   18a38:	ldrd	r4, [sp]
   18a3c:	ldr	r6, [sp, #8]
   18a40:	add	sp, sp, #12
   18a44:	pop	{pc}		; (ldr pc, [sp], #4)
   18a48:	movw	r1, #64672	; 0xfca0
   18a4c:	movt	r1, #1
   18a50:	mov	r2, #5
   18a54:	mov	r0, #0
   18a58:	bl	10f7c <dcgettext@plt>
   18a5c:	mov	r6, r0
   18a60:	ldr	r0, [r4]
   18a64:	cmp	r0, #0
   18a68:	beq	18aa0 <__assert_fail@plt+0x7914>
   18a6c:	ldr	r4, [r5]
   18a70:	bl	1bbf0 <__assert_fail@plt+0xaa64>
   18a74:	mov	r3, r0
   18a78:	movw	r2, #64684	; 0xfcac
   18a7c:	movt	r2, #1
   18a80:	mov	r0, #0
   18a84:	str	r6, [sp]
   18a88:	mov	r1, r4
   18a8c:	bl	11000 <error@plt>
   18a90:	movw	r3, #4384	; 0x1120
   18a94:	movt	r3, #3
   18a98:	ldr	r0, [r3]
   18a9c:	bl	10f28 <_exit@plt>
   18aa0:	mov	r3, r6
   18aa4:	movw	r2, #63172	; 0xf6c4
   18aa8:	movt	r2, #1
   18aac:	ldr	r1, [r5]
   18ab0:	bl	11000 <error@plt>
   18ab4:	b	18a90 <__assert_fail@plt+0x7904>
   18ab8:	b	10ef8 <posix_fadvise64@plt>
   18abc:	cmp	r0, #0
   18ac0:	bxeq	lr
   18ac4:	str	r4, [sp, #-16]!
   18ac8:	mov	r4, r1
   18acc:	strd	r6, [sp, #4]
   18ad0:	mov	r6, #0
   18ad4:	mov	r7, #0
   18ad8:	str	lr, [sp, #12]
   18adc:	sub	sp, sp, #16
   18ae0:	bl	110cc <fileno@plt>
   18ae4:	mov	r2, r6
   18ae8:	mov	r3, r7
   18aec:	strd	r6, [sp]
   18af0:	str	r4, [sp, #8]
   18af4:	bl	10ef8 <posix_fadvise64@plt>
   18af8:	add	sp, sp, #16
   18afc:	ldr	r4, [sp]
   18b00:	ldrd	r6, [sp, #4]
   18b04:	add	sp, sp, #12
   18b08:	pop	{pc}		; (ldr pc, [sp], #4)
   18b0c:	strd	r4, [sp, #-12]!
   18b10:	mov	r4, r0
   18b14:	str	lr, [sp, #8]
   18b18:	sub	sp, sp, #12
   18b1c:	bl	110cc <fileno@plt>
   18b20:	cmp	r0, #0
   18b24:	mov	r0, r4
   18b28:	blt	18bac <__assert_fail@plt+0x7a20>
   18b2c:	bl	11024 <__freading@plt>
   18b30:	cmp	r0, #0
   18b34:	bne	18b78 <__assert_fail@plt+0x79ec>
   18b38:	mov	r0, r4
   18b3c:	bl	18bc0 <__assert_fail@plt+0x7a34>
   18b40:	cmp	r0, #0
   18b44:	beq	18ba8 <__assert_fail@plt+0x7a1c>
   18b48:	bl	11090 <__errno_location@plt>
   18b4c:	mov	r5, r0
   18b50:	mov	r0, r4
   18b54:	ldr	r4, [r5]
   18b58:	bl	110e4 <fclose@plt>
   18b5c:	cmp	r4, #0
   18b60:	mvnne	r0, #0
   18b64:	strne	r4, [r5]
   18b68:	add	sp, sp, #12
   18b6c:	ldrd	r4, [sp]
   18b70:	add	sp, sp, #8
   18b74:	pop	{pc}		; (ldr pc, [sp], #4)
   18b78:	mov	r0, r4
   18b7c:	bl	110cc <fileno@plt>
   18b80:	mov	r1, #1
   18b84:	mov	r2, #0
   18b88:	mov	r3, #0
   18b8c:	str	r1, [sp]
   18b90:	bl	10fc4 <lseek64@plt>
   18b94:	mvn	r3, #0
   18b98:	mvn	r2, #0
   18b9c:	cmp	r1, r3
   18ba0:	cmpeq	r0, r2
   18ba4:	bne	18b38 <__assert_fail@plt+0x79ac>
   18ba8:	mov	r0, r4
   18bac:	add	sp, sp, #12
   18bb0:	ldrd	r4, [sp]
   18bb4:	ldr	lr, [sp, #8]
   18bb8:	add	sp, sp, #12
   18bbc:	b	110e4 <fclose@plt>
   18bc0:	str	r4, [sp, #-8]!
   18bc4:	subs	r4, r0, #0
   18bc8:	str	lr, [sp, #4]
   18bcc:	sub	sp, sp, #8
   18bd0:	beq	18bec <__assert_fail@plt+0x7a60>
   18bd4:	bl	11024 <__freading@plt>
   18bd8:	cmp	r0, #0
   18bdc:	beq	18bec <__assert_fail@plt+0x7a60>
   18be0:	ldr	r3, [r4]
   18be4:	tst	r3, #256	; 0x100
   18be8:	bne	18c04 <__assert_fail@plt+0x7a78>
   18bec:	mov	r0, r4
   18bf0:	add	sp, sp, #8
   18bf4:	ldr	r4, [sp]
   18bf8:	ldr	lr, [sp, #4]
   18bfc:	add	sp, sp, #8
   18c00:	b	10f04 <fflush@plt>
   18c04:	mov	r1, #1
   18c08:	mov	r2, #0
   18c0c:	mov	r3, #0
   18c10:	mov	r0, r4
   18c14:	str	r1, [sp]
   18c18:	bl	18d2c <__assert_fail@plt+0x7ba0>
   18c1c:	b	18bec <__assert_fail@plt+0x7a60>
   18c20:	strd	r4, [sp, #-16]!
   18c24:	mov	r5, r1
   18c28:	str	r6, [sp, #8]
   18c2c:	str	lr, [sp, #12]
   18c30:	bl	11144 <fopen64@plt>
   18c34:	subs	r4, r0, #0
   18c38:	beq	18c48 <__assert_fail@plt+0x7abc>
   18c3c:	bl	110cc <fileno@plt>
   18c40:	cmp	r0, #2
   18c44:	bls	18c5c <__assert_fail@plt+0x7ad0>
   18c48:	mov	r0, r4
   18c4c:	ldrd	r4, [sp]
   18c50:	ldr	r6, [sp, #8]
   18c54:	add	sp, sp, #12
   18c58:	pop	{pc}		; (ldr pc, [sp], #4)
   18c5c:	bl	1c900 <__assert_fail@plt+0xb774>
   18c60:	subs	r6, r0, #0
   18c64:	blt	18cac <__assert_fail@plt+0x7b20>
   18c68:	mov	r0, r4
   18c6c:	bl	18b0c <__assert_fail@plt+0x7980>
   18c70:	cmp	r0, #0
   18c74:	bne	18c8c <__assert_fail@plt+0x7b00>
   18c78:	mov	r1, r5
   18c7c:	mov	r0, r6
   18c80:	bl	10eb0 <fdopen@plt>
   18c84:	subs	r4, r0, #0
   18c88:	bne	18c48 <__assert_fail@plt+0x7abc>
   18c8c:	bl	11090 <__errno_location@plt>
   18c90:	mov	r5, r0
   18c94:	mov	r0, r6
   18c98:	ldr	r6, [r5]
   18c9c:	mov	r4, #0
   18ca0:	bl	11174 <close@plt>
   18ca4:	str	r6, [r5]
   18ca8:	b	18c48 <__assert_fail@plt+0x7abc>
   18cac:	bl	11090 <__errno_location@plt>
   18cb0:	mov	r5, r0
   18cb4:	mov	r0, r4
   18cb8:	ldr	r6, [r5]
   18cbc:	mov	r4, #0
   18cc0:	bl	18b0c <__assert_fail@plt+0x7980>
   18cc4:	str	r6, [r5]
   18cc8:	b	18c48 <__assert_fail@plt+0x7abc>
   18ccc:	strd	r4, [sp, #-12]!
   18cd0:	mov	r5, r0
   18cd4:	str	lr, [sp, #8]
   18cd8:	sub	sp, sp, #12
   18cdc:	bl	11090 <__errno_location@plt>
   18ce0:	mov	r4, r0
   18ce4:	mov	r2, #0
   18ce8:	ldr	r3, [r4]
   18cec:	mov	r0, r5
   18cf0:	str	r2, [r4]
   18cf4:	str	r3, [sp]
   18cf8:	str	r3, [sp, #4]
   18cfc:	bl	10f10 <free@plt>
   18d00:	ldr	r3, [r4]
   18d04:	add	r2, sp, #8
   18d08:	clz	r3, r3
   18d0c:	lsr	r3, r3, #5
   18d10:	add	r3, r2, r3, lsl #2
   18d14:	ldr	r3, [r3, #-8]
   18d18:	str	r3, [r4]
   18d1c:	add	sp, sp, #12
   18d20:	ldrd	r4, [sp]
   18d24:	add	sp, sp, #8
   18d28:	pop	{pc}		; (ldr pc, [sp], #4)
   18d2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18d30:	mov	r4, r0
   18d34:	ldr	ip, [r0, #4]
   18d38:	strd	r6, [sp, #8]
   18d3c:	str	lr, [sp, #20]
   18d40:	ldr	lr, [r0, #8]
   18d44:	str	r8, [sp, #16]
   18d48:	sub	sp, sp, #8
   18d4c:	ldr	r5, [sp, #32]
   18d50:	cmp	lr, ip
   18d54:	beq	18d7c <__assert_fail@plt+0x7bf0>
   18d58:	mov	r0, r4
   18d5c:	str	r5, [sp, #32]
   18d60:	add	sp, sp, #8
   18d64:	ldrd	r4, [sp]
   18d68:	ldrd	r6, [sp, #8]
   18d6c:	ldr	r8, [sp, #16]
   18d70:	ldr	lr, [sp, #20]
   18d74:	add	sp, sp, #24
   18d78:	b	110f0 <fseeko64@plt>
   18d7c:	ldr	ip, [r0, #16]
   18d80:	ldr	lr, [r0, #20]
   18d84:	cmp	lr, ip
   18d88:	bne	18d58 <__assert_fail@plt+0x7bcc>
   18d8c:	ldr	r8, [r0, #36]	; 0x24
   18d90:	cmp	r8, #0
   18d94:	bne	18d58 <__assert_fail@plt+0x7bcc>
   18d98:	mov	r6, r2
   18d9c:	mov	r7, r3
   18da0:	bl	110cc <fileno@plt>
   18da4:	mov	r2, r6
   18da8:	mov	r3, r7
   18dac:	str	r5, [sp]
   18db0:	bl	10fc4 <lseek64@plt>
   18db4:	mvn	r3, #0
   18db8:	mvn	r2, #0
   18dbc:	cmp	r1, r3
   18dc0:	cmpeq	r0, r2
   18dc4:	beq	18df4 <__assert_fail@plt+0x7c68>
   18dc8:	ldr	r3, [r4]
   18dcc:	strd	r0, [r4, #80]	; 0x50
   18dd0:	bic	r3, r3, #16
   18dd4:	str	r3, [r4]
   18dd8:	mov	r0, r8
   18ddc:	add	sp, sp, #8
   18de0:	ldrd	r4, [sp]
   18de4:	ldrd	r6, [sp, #8]
   18de8:	ldr	r8, [sp, #16]
   18dec:	add	sp, sp, #20
   18df0:	pop	{pc}		; (ldr pc, [sp], #4)
   18df4:	mvn	r8, #0
   18df8:	b	18dd8 <__assert_fail@plt+0x7c4c>
   18dfc:	strd	r4, [sp, #-16]!
   18e00:	subs	r4, r0, #0
   18e04:	str	r6, [sp, #8]
   18e08:	str	lr, [sp, #12]
   18e0c:	beq	18ea4 <__assert_fail@plt+0x7d18>
   18e10:	mov	r1, #47	; 0x2f
   18e14:	bl	11120 <strrchr@plt>
   18e18:	subs	r5, r0, #0
   18e1c:	beq	18e7c <__assert_fail@plt+0x7cf0>
   18e20:	add	r6, r5, #1
   18e24:	sub	r3, r6, r4
   18e28:	cmp	r3, #6
   18e2c:	ble	18e7c <__assert_fail@plt+0x7cf0>
   18e30:	movw	r1, #64748	; 0xfcec
   18e34:	movt	r1, #1
   18e38:	mov	r2, #7
   18e3c:	sub	r0, r5, #6
   18e40:	bl	1115c <strncmp@plt>
   18e44:	cmp	r0, #0
   18e48:	bne	18e7c <__assert_fail@plt+0x7cf0>
   18e4c:	movw	r1, #64756	; 0xfcf4
   18e50:	movt	r1, #1
   18e54:	mov	r2, #3
   18e58:	mov	r0, r6
   18e5c:	bl	1115c <strncmp@plt>
   18e60:	cmp	r0, #0
   18e64:	movne	r4, r6
   18e68:	bne	18e7c <__assert_fail@plt+0x7cf0>
   18e6c:	add	r4, r5, #4
   18e70:	movw	r3, #4456	; 0x1168
   18e74:	movt	r3, #3
   18e78:	str	r4, [r3]
   18e7c:	movw	r2, #4536	; 0x11b8
   18e80:	movt	r2, #3
   18e84:	ldr	r6, [sp, #8]
   18e88:	movw	r3, #4460	; 0x116c
   18e8c:	movt	r3, #3
   18e90:	str	r4, [r2]
   18e94:	str	r4, [r3]
   18e98:	ldrd	r4, [sp]
   18e9c:	add	sp, sp, #12
   18ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ea4:	movw	r3, #4472	; 0x1178
   18ea8:	movt	r3, #3
   18eac:	movw	r0, #64692	; 0xfcb4
   18eb0:	movt	r0, #1
   18eb4:	ldr	r3, [r3]
   18eb8:	mov	r2, #55	; 0x37
   18ebc:	mov	r1, #1
   18ec0:	bl	10fb8 <fwrite@plt>
   18ec4:	bl	11168 <abort@plt>
   18ec8:	mov	r2, #5
   18ecc:	strd	r4, [sp, #-16]!
   18ed0:	mov	r5, r0
   18ed4:	str	r6, [sp, #8]
   18ed8:	mov	r6, r1
   18edc:	mov	r1, r0
   18ee0:	mov	r0, #0
   18ee4:	str	lr, [sp, #12]
   18ee8:	bl	10f7c <dcgettext@plt>
   18eec:	cmp	r5, r0
   18ef0:	mov	r4, r0
   18ef4:	beq	18f0c <__assert_fail@plt+0x7d80>
   18ef8:	mov	r0, r4
   18efc:	ldrd	r4, [sp]
   18f00:	ldr	r6, [sp, #8]
   18f04:	add	sp, sp, #12
   18f08:	pop	{pc}		; (ldr pc, [sp], #4)
   18f0c:	bl	1e9a4 <__assert_fail@plt+0xd818>
   18f10:	ldrb	r3, [r0]
   18f14:	bic	r3, r3, #32
   18f18:	cmp	r3, #85	; 0x55
   18f1c:	bne	18f84 <__assert_fail@plt+0x7df8>
   18f20:	ldrb	r3, [r0, #1]
   18f24:	bic	r3, r3, #32
   18f28:	cmp	r3, #84	; 0x54
   18f2c:	bne	19004 <__assert_fail@plt+0x7e78>
   18f30:	ldrb	r3, [r0, #2]
   18f34:	bic	r3, r3, #32
   18f38:	cmp	r3, #70	; 0x46
   18f3c:	bne	19004 <__assert_fail@plt+0x7e78>
   18f40:	ldrb	r3, [r0, #3]
   18f44:	cmp	r3, #45	; 0x2d
   18f48:	bne	19004 <__assert_fail@plt+0x7e78>
   18f4c:	ldrb	r3, [r0, #4]
   18f50:	cmp	r3, #56	; 0x38
   18f54:	bne	19004 <__assert_fail@plt+0x7e78>
   18f58:	ldrb	r3, [r0, #5]
   18f5c:	cmp	r3, #0
   18f60:	bne	19004 <__assert_fail@plt+0x7e78>
   18f64:	ldrb	r2, [r4]
   18f68:	movw	r3, #64848	; 0xfd50
   18f6c:	movt	r3, #1
   18f70:	movw	r4, #64860	; 0xfd5c
   18f74:	movt	r4, #1
   18f78:	cmp	r2, #96	; 0x60
   18f7c:	movne	r4, r3
   18f80:	b	18ef8 <__assert_fail@plt+0x7d6c>
   18f84:	cmp	r3, #71	; 0x47
   18f88:	bne	19004 <__assert_fail@plt+0x7e78>
   18f8c:	ldrb	r3, [r0, #1]
   18f90:	bic	r3, r3, #32
   18f94:	cmp	r3, #66	; 0x42
   18f98:	bne	19004 <__assert_fail@plt+0x7e78>
   18f9c:	ldrb	r3, [r0, #2]
   18fa0:	cmp	r3, #49	; 0x31
   18fa4:	bne	19004 <__assert_fail@plt+0x7e78>
   18fa8:	ldrb	r3, [r0, #3]
   18fac:	cmp	r3, #56	; 0x38
   18fb0:	bne	19004 <__assert_fail@plt+0x7e78>
   18fb4:	ldrb	r3, [r0, #4]
   18fb8:	cmp	r3, #48	; 0x30
   18fbc:	bne	19004 <__assert_fail@plt+0x7e78>
   18fc0:	ldrb	r3, [r0, #5]
   18fc4:	cmp	r3, #51	; 0x33
   18fc8:	bne	19004 <__assert_fail@plt+0x7e78>
   18fcc:	ldrb	r3, [r0, #6]
   18fd0:	cmp	r3, #48	; 0x30
   18fd4:	bne	19004 <__assert_fail@plt+0x7e78>
   18fd8:	ldrb	r3, [r0, #7]
   18fdc:	cmp	r3, #0
   18fe0:	bne	19004 <__assert_fail@plt+0x7e78>
   18fe4:	ldrb	r2, [r4]
   18fe8:	movw	r3, #64852	; 0xfd54
   18fec:	movt	r3, #1
   18ff0:	movw	r4, #64856	; 0xfd58
   18ff4:	movt	r4, #1
   18ff8:	cmp	r2, #96	; 0x60
   18ffc:	movne	r4, r3
   19000:	b	18ef8 <__assert_fail@plt+0x7d6c>
   19004:	movw	r3, #64864	; 0xfd60
   19008:	movt	r3, #1
   1900c:	cmp	r6, #9
   19010:	movw	r4, #64844	; 0xfd4c
   19014:	movt	r4, #1
   19018:	movne	r4, r3
   1901c:	b	18ef8 <__assert_fail@plt+0x7d6c>
   19020:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19024:	strd	r6, [sp, #8]
   19028:	strd	r8, [sp, #16]
   1902c:	mov	r8, r3
   19030:	strd	sl, [sp, #24]
   19034:	mov	fp, r0
   19038:	mov	sl, r1
   1903c:	str	lr, [sp, #32]
   19040:	sub	sp, sp, #140	; 0x8c
   19044:	ldr	r3, [sp, #180]	; 0xb4
   19048:	str	r2, [sp, #28]
   1904c:	and	r4, r3, #2
   19050:	ubfx	r3, r3, #1, #1
   19054:	str	r3, [sp, #44]	; 0x2c
   19058:	bl	10fd0 <__ctype_get_mb_cur_max@plt>
   1905c:	ldr	r3, [sp, #176]	; 0xb0
   19060:	str	r0, [sp, #76]	; 0x4c
   19064:	cmp	r3, #10
   19068:	ldrls	pc, [pc, r3, lsl #2]
   1906c:	b	1aa08 <__assert_fail@plt+0x987c>
   19070:	strdeq	r9, [r1], -r0
   19074:	andeq	r9, r1, ip, lsl #12
   19078:	andeq	r9, r1, r8, lsl #23
   1907c:	andeq	r9, r1, r8, ror r6
   19080:	strdeq	r9, [r1], -r8
   19084:	andeq	r9, r1, r4, ror r4
   19088:	andeq	r9, r1, ip, asr #10
   1908c:			; <UNDEFINED> instruction: 0x000195b4
   19090:	muleq	r1, ip, r0
   19094:	muleq	r1, ip, r0
   19098:	muleq	r1, ip, r0
   1909c:	ldr	r3, [sp, #176]	; 0xb0
   190a0:	cmp	r3, #10
   190a4:	beq	190d0 <__assert_fail@plt+0x7f44>
   190a8:	mov	r1, r3
   190ac:	movw	r0, #64868	; 0xfd64
   190b0:	movt	r0, #1
   190b4:	bl	18ec8 <__assert_fail@plt+0x7d3c>
   190b8:	str	r0, [sp, #188]	; 0xbc
   190bc:	movw	r0, #64864	; 0xfd60
   190c0:	movt	r0, #1
   190c4:	ldr	r1, [sp, #176]	; 0xb0
   190c8:	bl	18ec8 <__assert_fail@plt+0x7d3c>
   190cc:	str	r0, [sp, #192]	; 0xc0
   190d0:	cmp	r4, #0
   190d4:	movne	r4, #0
   190d8:	beq	1a794 <__assert_fail@plt+0x9608>
   190dc:	mov	r5, #0
   190e0:	ldr	r0, [sp, #192]	; 0xc0
   190e4:	mov	r9, r5
   190e8:	str	r5, [sp, #64]	; 0x40
   190ec:	bl	11078 <strlen@plt>
   190f0:	mov	r3, #1
   190f4:	ldr	r2, [sp, #44]	; 0x2c
   190f8:	cmp	r0, r5
   190fc:	moveq	r2, r5
   19100:	str	r3, [sp, #32]
   19104:	str	r3, [sp, #48]	; 0x30
   19108:	str	r5, [sp, #52]	; 0x34
   1910c:	str	r3, [sp, #60]	; 0x3c
   19110:	ldr	r3, [sp, #180]	; 0xb4
   19114:	str	r0, [sp, #56]	; 0x38
   19118:	str	r5, [sp, #68]	; 0x44
   1911c:	str	r5, [sp, #80]	; 0x50
   19120:	str	r5, [sp, #84]	; 0x54
   19124:	and	r3, r3, #1
   19128:	str	r2, [sp, #88]	; 0x58
   1912c:	str	r3, [sp, #92]	; 0x5c
   19130:	ldr	r3, [sp, #180]	; 0xb4
   19134:	and	r3, r3, #4
   19138:	str	r3, [sp, #96]	; 0x60
   1913c:	ldr	r3, [sp, #192]	; 0xc0
   19140:	str	r3, [sp, #72]	; 0x48
   19144:	mov	r3, fp
   19148:	mov	r7, #0
   1914c:	mov	fp, r9
   19150:	mov	r9, r3
   19154:	cmn	r8, #1
   19158:	beq	1975c <__assert_fail@plt+0x85d0>
   1915c:	subs	r6, r8, r7
   19160:	movne	r6, #1
   19164:	cmp	r6, #0
   19168:	beq	19774 <__assert_fail@plt+0x85e8>
   1916c:	ldr	r0, [sp, #28]
   19170:	ldr	r3, [sp, #48]	; 0x30
   19174:	cmp	r3, #0
   19178:	add	r3, r0, r7
   1917c:	str	r3, [sp, #36]	; 0x24
   19180:	beq	19c00 <__assert_fail@plt+0x8a74>
   19184:	ldr	r2, [sp, #56]	; 0x38
   19188:	cmp	r2, #0
   1918c:	beq	1a100 <__assert_fail@plt+0x8f74>
   19190:	cmp	r2, #1
   19194:	mov	r3, r2
   19198:	movls	r3, #0
   1919c:	movhi	r3, #1
   191a0:	cmn	r8, #1
   191a4:	add	r5, r7, r2
   191a8:	movne	r3, #0
   191ac:	cmp	r3, #0
   191b0:	beq	191bc <__assert_fail@plt+0x8030>
   191b4:	bl	11078 <strlen@plt>
   191b8:	mov	r8, r0
   191bc:	cmp	r5, r8
   191c0:	bhi	1a100 <__assert_fail@plt+0x8f74>
   191c4:	ldr	r0, [sp, #36]	; 0x24
   191c8:	ldr	r2, [sp, #56]	; 0x38
   191cc:	ldr	r1, [sp, #72]	; 0x48
   191d0:	bl	10f64 <memcmp@plt>
   191d4:	cmp	r0, #0
   191d8:	bne	1a100 <__assert_fail@plt+0x8f74>
   191dc:	ldr	r3, [sp, #44]	; 0x2c
   191e0:	cmp	r3, #0
   191e4:	bne	1a8ac <__assert_fail@plt+0x9720>
   191e8:	ldr	r3, [sp, #36]	; 0x24
   191ec:	ldrb	r5, [r3]
   191f0:	cmp	r5, #126	; 0x7e
   191f4:	ldrls	pc, [pc, r5, lsl #2]
   191f8:	b	1a694 <__assert_fail@plt+0x9508>
   191fc:	ldrdeq	r9, [r1], -r0
   19200:	muleq	r1, r4, r6
   19204:	muleq	r1, r4, r6
   19208:	muleq	r1, r4, r6
   1920c:	muleq	r1, r4, r6
   19210:	muleq	r1, r4, r6
   19214:	muleq	r1, r4, r6
   19218:	andeq	r9, r1, r8, lsr #16
   1921c:	andeq	r9, r1, r0, lsr #16
   19220:	andeq	r9, r1, r0, lsr r8
   19224:			; <UNDEFINED> instruction: 0x000199b4
   19228:	andeq	r9, r1, r4, lsr #19
   1922c:	andeq	r9, r1, ip, asr #13
   19230:	andeq	r9, r1, r0, lsl #19
   19234:	muleq	r1, r4, r6
   19238:	muleq	r1, r4, r6
   1923c:	muleq	r1, r4, r6
   19240:	muleq	r1, r4, r6
   19244:	muleq	r1, r4, r6
   19248:	muleq	r1, r4, r6
   1924c:	muleq	r1, r4, r6
   19250:	muleq	r1, r4, r6
   19254:	muleq	r1, r4, r6
   19258:	muleq	r1, r4, r6
   1925c:	muleq	r1, r4, r6
   19260:	muleq	r1, r4, r6
   19264:	muleq	r1, r4, r6
   19268:	muleq	r1, r4, r6
   1926c:	muleq	r1, r4, r6
   19270:	muleq	r1, r4, r6
   19274:	muleq	r1, r4, r6
   19278:	muleq	r1, r4, r6
   1927c:	andeq	r9, r1, ip, lsr #20
   19280:	andeq	r9, r1, r0, lsr #20
   19284:	andeq	r9, r1, r0, lsr #20
   19288:	andeq	r9, r1, r4, lsl sl
   1928c:	andeq	r9, r1, r0, lsr #20
   19290:	strdeq	r9, [r1], -r8
   19294:	andeq	r9, r1, r0, lsr #20
   19298:	andeq	r9, r1, r8, ror #22
   1929c:	andeq	r9, r1, r0, lsr #20
   192a0:	andeq	r9, r1, r0, lsr #20
   192a4:	andeq	r9, r1, r0, lsr #20
   192a8:	strdeq	r9, [r1], -r8
   192ac:	strdeq	r9, [r1], -r8
   192b0:	strdeq	r9, [r1], -r8
   192b4:	strdeq	r9, [r1], -r8
   192b8:	strdeq	r9, [r1], -r8
   192bc:	strdeq	r9, [r1], -r8
   192c0:	strdeq	r9, [r1], -r8
   192c4:	strdeq	r9, [r1], -r8
   192c8:	strdeq	r9, [r1], -r8
   192cc:	strdeq	r9, [r1], -r8
   192d0:	strdeq	r9, [r1], -r8
   192d4:	strdeq	r9, [r1], -r8
   192d8:	strdeq	r9, [r1], -r8
   192dc:	strdeq	r9, [r1], -r8
   192e0:	strdeq	r9, [r1], -r8
   192e4:	strdeq	r9, [r1], -r8
   192e8:	andeq	r9, r1, r0, lsr #20
   192ec:	andeq	r9, r1, r0, lsr #20
   192f0:	andeq	r9, r1, r0, lsr #20
   192f4:	andeq	r9, r1, r0, lsr #20
   192f8:	andeq	r9, r1, r8, lsl fp
   192fc:	muleq	r1, r4, r6
   19300:	strdeq	r9, [r1], -r8
   19304:	strdeq	r9, [r1], -r8
   19308:	strdeq	r9, [r1], -r8
   1930c:	strdeq	r9, [r1], -r8
   19310:	strdeq	r9, [r1], -r8
   19314:	strdeq	r9, [r1], -r8
   19318:	strdeq	r9, [r1], -r8
   1931c:	strdeq	r9, [r1], -r8
   19320:	strdeq	r9, [r1], -r8
   19324:	strdeq	r9, [r1], -r8
   19328:	strdeq	r9, [r1], -r8
   1932c:	strdeq	r9, [r1], -r8
   19330:	strdeq	r9, [r1], -r8
   19334:	strdeq	r9, [r1], -r8
   19338:	strdeq	r9, [r1], -r8
   1933c:	strdeq	r9, [r1], -r8
   19340:	strdeq	r9, [r1], -r8
   19344:	strdeq	r9, [r1], -r8
   19348:	strdeq	r9, [r1], -r8
   1934c:	strdeq	r9, [r1], -r8
   19350:	strdeq	r9, [r1], -r8
   19354:	strdeq	r9, [r1], -r8
   19358:	strdeq	r9, [r1], -r8
   1935c:	strdeq	r9, [r1], -r8
   19360:	strdeq	r9, [r1], -r8
   19364:	strdeq	r9, [r1], -r8
   19368:	andeq	r9, r1, r0, lsr #20
   1936c:			; <UNDEFINED> instruction: 0x00019abc
   19370:	strdeq	r9, [r1], -r8
   19374:	andeq	r9, r1, r0, lsr #20
   19378:	strdeq	r9, [r1], -r8
   1937c:	andeq	r9, r1, r0, lsr #20
   19380:	strdeq	r9, [r1], -r8
   19384:	strdeq	r9, [r1], -r8
   19388:	strdeq	r9, [r1], -r8
   1938c:	strdeq	r9, [r1], -r8
   19390:	strdeq	r9, [r1], -r8
   19394:	strdeq	r9, [r1], -r8
   19398:	strdeq	r9, [r1], -r8
   1939c:	strdeq	r9, [r1], -r8
   193a0:	strdeq	r9, [r1], -r8
   193a4:	strdeq	r9, [r1], -r8
   193a8:	strdeq	r9, [r1], -r8
   193ac:	strdeq	r9, [r1], -r8
   193b0:	strdeq	r9, [r1], -r8
   193b4:	strdeq	r9, [r1], -r8
   193b8:	strdeq	r9, [r1], -r8
   193bc:	strdeq	r9, [r1], -r8
   193c0:	strdeq	r9, [r1], -r8
   193c4:	strdeq	r9, [r1], -r8
   193c8:	strdeq	r9, [r1], -r8
   193cc:	strdeq	r9, [r1], -r8
   193d0:	strdeq	r9, [r1], -r8
   193d4:	strdeq	r9, [r1], -r8
   193d8:	strdeq	r9, [r1], -r8
   193dc:	strdeq	r9, [r1], -r8
   193e0:	strdeq	r9, [r1], -r8
   193e4:	strdeq	r9, [r1], -r8
   193e8:	andeq	r9, r1, r8, asr #19
   193ec:	andeq	r9, r1, r0, lsr #20
   193f0:	andeq	r9, r1, r8, asr #19
   193f4:	andeq	r9, r1, r4, lsl sl
   193f8:	ldr	r3, [sp, #180]	; 0xb4
   193fc:	cmp	r4, #0
   19400:	and	r3, r3, #1
   19404:	str	r3, [sp, #92]	; 0x5c
   19408:	ldr	r3, [sp, #180]	; 0xb4
   1940c:	and	r3, r3, #4
   19410:	str	r3, [sp, #96]	; 0x60
   19414:	moveq	r3, #1
   19418:	streq	r3, [sp, #60]	; 0x3c
   1941c:	beq	19bac <__assert_fail@plt+0x8a20>
   19420:	mov	r3, #0
   19424:	mov	r2, #1
   19428:	mov	r4, r3
   1942c:	mov	r9, r3
   19430:	str	r2, [sp, #32]
   19434:	str	r2, [sp, #44]	; 0x2c
   19438:	str	r3, [sp, #48]	; 0x30
   1943c:	str	r2, [sp, #52]	; 0x34
   19440:	str	r2, [sp, #56]	; 0x38
   19444:	str	r3, [sp, #60]	; 0x3c
   19448:	str	r2, [sp, #64]	; 0x40
   1944c:	str	r2, [sp, #68]	; 0x44
   19450:	str	r3, [sp, #80]	; 0x50
   19454:	str	r3, [sp, #84]	; 0x54
   19458:	str	r3, [sp, #88]	; 0x58
   1945c:	movw	r3, #64864	; 0xfd60
   19460:	movt	r3, #1
   19464:	str	r3, [sp, #72]	; 0x48
   19468:	mov	r3, #2
   1946c:	str	r3, [sp, #176]	; 0xb0
   19470:	b	19144 <__assert_fail@plt+0x7fb8>
   19474:	ldr	r3, [sp, #180]	; 0xb4
   19478:	cmp	r4, #0
   1947c:	and	r3, r3, #1
   19480:	str	r3, [sp, #92]	; 0x5c
   19484:	ldr	r3, [sp, #180]	; 0xb4
   19488:	and	r3, r3, #4
   1948c:	str	r3, [sp, #96]	; 0x60
   19490:	bne	1a864 <__assert_fail@plt+0x96d8>
   19494:	cmp	sl, #0
   19498:	beq	1a610 <__assert_fail@plt+0x9484>
   1949c:	mov	r3, #34	; 0x22
   194a0:	mov	r2, r4
   194a4:	mov	r1, #1
   194a8:	mov	r9, r2
   194ac:	strb	r3, [fp]
   194b0:	movw	r3, #64844	; 0xfd4c
   194b4:	movt	r3, #1
   194b8:	mov	r4, r1
   194bc:	str	r1, [sp, #32]
   194c0:	str	r2, [sp, #44]	; 0x2c
   194c4:	str	r1, [sp, #48]	; 0x30
   194c8:	str	r2, [sp, #52]	; 0x34
   194cc:	str	r1, [sp, #56]	; 0x38
   194d0:	str	r1, [sp, #60]	; 0x3c
   194d4:	str	r2, [sp, #64]	; 0x40
   194d8:	str	r2, [sp, #68]	; 0x44
   194dc:	str	r3, [sp, #72]	; 0x48
   194e0:	str	r2, [sp, #80]	; 0x50
   194e4:	str	r2, [sp, #84]	; 0x54
   194e8:	str	r2, [sp, #88]	; 0x58
   194ec:	b	19144 <__assert_fail@plt+0x7fb8>
   194f0:	mov	r3, #0
   194f4:	mov	r2, #1
   194f8:	mov	r9, r3
   194fc:	str	r2, [sp, #32]
   19500:	str	r3, [sp, #44]	; 0x2c
   19504:	str	r3, [sp, #48]	; 0x30
   19508:	str	r3, [sp, #52]	; 0x34
   1950c:	str	r3, [sp, #60]	; 0x3c
   19510:	strd	r2, [sp, #64]	; 0x40
   19514:	str	r3, [sp, #72]	; 0x48
   19518:	str	r3, [sp, #80]	; 0x50
   1951c:	str	r3, [sp, #88]	; 0x58
   19520:	ldr	r3, [sp, #180]	; 0xb4
   19524:	and	r3, r3, r2
   19528:	str	r3, [sp, #92]	; 0x5c
   1952c:	ldr	r3, [sp, #180]	; 0xb4
   19530:	and	r3, r3, #4
   19534:	str	r3, [sp, #96]	; 0x60
   19538:	ldr	r3, [sp, #176]	; 0xb0
   1953c:	mov	r4, r3
   19540:	str	r3, [sp, #56]	; 0x38
   19544:	str	r3, [sp, #84]	; 0x54
   19548:	b	19144 <__assert_fail@plt+0x7fb8>
   1954c:	mov	r3, #1
   19550:	mov	r4, #0
   19554:	mov	r9, r4
   19558:	str	r3, [sp, #32]
   1955c:	str	r3, [sp, #44]	; 0x2c
   19560:	str	r3, [sp, #48]	; 0x30
   19564:	str	r4, [sp, #52]	; 0x34
   19568:	str	r3, [sp, #56]	; 0x38
   1956c:	str	r3, [sp, #60]	; 0x3c
   19570:	str	r3, [sp, #88]	; 0x58
   19574:	movw	r3, #64844	; 0xfd4c
   19578:	movt	r3, #1
   1957c:	str	r4, [sp, #64]	; 0x40
   19580:	str	r4, [sp, #68]	; 0x44
   19584:	str	r3, [sp, #72]	; 0x48
   19588:	ldr	r3, [sp, #180]	; 0xb4
   1958c:	str	r4, [sp, #80]	; 0x50
   19590:	str	r4, [sp, #84]	; 0x54
   19594:	and	r3, r3, #1
   19598:	str	r3, [sp, #92]	; 0x5c
   1959c:	ldr	r3, [sp, #180]	; 0xb4
   195a0:	and	r3, r3, #4
   195a4:	str	r3, [sp, #96]	; 0x60
   195a8:	mov	r3, #5
   195ac:	str	r3, [sp, #176]	; 0xb0
   195b0:	b	19144 <__assert_fail@plt+0x7fb8>
   195b4:	mov	r3, #1
   195b8:	mov	r4, #0
   195bc:	mov	r9, r4
   195c0:	str	r3, [sp, #32]
   195c4:	str	r4, [sp, #44]	; 0x2c
   195c8:	str	r3, [sp, #48]	; 0x30
   195cc:	str	r3, [sp, #60]	; 0x3c
   195d0:	ldr	r3, [sp, #180]	; 0xb4
   195d4:	str	r4, [sp, #52]	; 0x34
   195d8:	str	r4, [sp, #56]	; 0x38
   195dc:	str	r4, [sp, #64]	; 0x40
   195e0:	str	r4, [sp, #68]	; 0x44
   195e4:	and	r3, r3, #1
   195e8:	str	r4, [sp, #72]	; 0x48
   195ec:	str	r4, [sp, #80]	; 0x50
   195f0:	str	r4, [sp, #84]	; 0x54
   195f4:	str	r3, [sp, #92]	; 0x5c
   195f8:	ldr	r3, [sp, #180]	; 0xb4
   195fc:	str	r4, [sp, #88]	; 0x58
   19600:	and	r3, r3, #4
   19604:	str	r3, [sp, #96]	; 0x60
   19608:	b	19144 <__assert_fail@plt+0x7fb8>
   1960c:	mov	r3, #0
   19610:	mov	r2, #1
   19614:	ldr	r1, [sp, #176]	; 0xb0
   19618:	mov	r4, r3
   1961c:	mov	r9, r3
   19620:	movw	r3, #64864	; 0xfd60
   19624:	movt	r3, #1
   19628:	str	r2, [sp, #32]
   1962c:	str	r2, [sp, #44]	; 0x2c
   19630:	str	r4, [sp, #48]	; 0x30
   19634:	strd	r2, [sp, #68]	; 0x44
   19638:	ldr	r3, [sp, #180]	; 0xb4
   1963c:	str	r2, [sp, #52]	; 0x34
   19640:	str	r1, [sp, #56]	; 0x38
   19644:	str	r4, [sp, #60]	; 0x3c
   19648:	str	r2, [sp, #64]	; 0x40
   1964c:	and	r3, r3, r2
   19650:	str	r4, [sp, #80]	; 0x50
   19654:	str	r4, [sp, #84]	; 0x54
   19658:	str	r4, [sp, #88]	; 0x58
   1965c:	str	r3, [sp, #92]	; 0x5c
   19660:	ldr	r3, [sp, #180]	; 0xb4
   19664:	and	r3, r3, #4
   19668:	str	r3, [sp, #96]	; 0x60
   1966c:	mov	r3, #2
   19670:	str	r3, [sp, #176]	; 0xb0
   19674:	b	19144 <__assert_fail@plt+0x7fb8>
   19678:	mov	r3, #1
   1967c:	mov	r2, #0
   19680:	mov	r4, r2
   19684:	mov	r9, r2
   19688:	str	r3, [sp, #32]
   1968c:	str	r3, [sp, #44]	; 0x2c
   19690:	str	r2, [sp, #48]	; 0x30
   19694:	str	r3, [sp, #52]	; 0x34
   19698:	str	r3, [sp, #56]	; 0x38
   1969c:	str	r3, [sp, #60]	; 0x3c
   196a0:	str	r3, [sp, #64]	; 0x40
   196a4:	str	r3, [sp, #68]	; 0x44
   196a8:	str	r3, [sp, #88]	; 0x58
   196ac:	movw	r3, #64864	; 0xfd60
   196b0:	movt	r3, #1
   196b4:	str	r3, [sp, #72]	; 0x48
   196b8:	ldr	r3, [sp, #180]	; 0xb4
   196bc:	str	r2, [sp, #80]	; 0x50
   196c0:	str	r2, [sp, #84]	; 0x54
   196c4:	and	r3, r3, #1
   196c8:	b	1965c <__assert_fail@plt+0x84d0>
   196cc:	mov	r5, #102	; 0x66
   196d0:	mov	r6, #0
   196d4:	ldr	r3, [sp, #44]	; 0x2c
   196d8:	cmp	r3, #0
   196dc:	bne	1a58c <__assert_fail@plt+0x9400>
   196e0:	ldr	r2, [sp, #52]	; 0x34
   196e4:	eor	r3, fp, #1
   196e8:	ands	r3, r2, r3
   196ec:	beq	19724 <__assert_fail@plt+0x8598>
   196f0:	cmp	sl, r4
   196f4:	mov	fp, r3
   196f8:	movhi	r2, #39	; 0x27
   196fc:	strbhi	r2, [r9, r4]
   19700:	add	r2, r4, #1
   19704:	cmp	sl, r2
   19708:	movhi	r1, #36	; 0x24
   1970c:	strbhi	r1, [r9, r2]
   19710:	add	r2, r4, #2
   19714:	add	r4, r4, #3
   19718:	cmp	sl, r2
   1971c:	movhi	r1, #39	; 0x27
   19720:	strbhi	r1, [r9, r2]
   19724:	cmp	sl, r4
   19728:	add	r7, r7, #1
   1972c:	movhi	r3, #92	; 0x5c
   19730:	strbhi	r3, [r9, r4]
   19734:	add	r4, r4, #1
   19738:	cmp	r4, sl
   1973c:	ldr	r3, [sp, #32]
   19740:	strbcc	r5, [r9, r4]
   19744:	cmp	r6, #0
   19748:	add	r4, r4, #1
   1974c:	moveq	r3, #0
   19750:	cmn	r8, #1
   19754:	str	r3, [sp, #32]
   19758:	bne	1915c <__assert_fail@plt+0x7fd0>
   1975c:	ldr	r3, [sp, #28]
   19760:	ldrb	r6, [r3, r7]
   19764:	adds	r6, r6, #0
   19768:	movne	r6, #1
   1976c:	cmp	r6, #0
   19770:	bne	1916c <__assert_fail@plt+0x7fe0>
   19774:	mov	r3, r9
   19778:	mov	r9, fp
   1977c:	mov	fp, r3
   19780:	ldr	r3, [sp, #68]	; 0x44
   19784:	cmp	r4, #0
   19788:	movne	r3, #0
   1978c:	cmp	r3, #0
   19790:	bne	1a984 <__assert_fail@plt+0x97f8>
   19794:	ldr	r3, [sp, #44]	; 0x2c
   19798:	ldr	r2, [sp, #52]	; 0x34
   1979c:	eor	r3, r3, #1
   197a0:	ands	r2, r3, r2
   197a4:	beq	1a8bc <__assert_fail@plt+0x9730>
   197a8:	ldr	r3, [sp, #80]	; 0x50
   197ac:	cmp	r3, #0
   197b0:	beq	1a8c0 <__assert_fail@plt+0x9734>
   197b4:	ldr	r3, [sp, #32]
   197b8:	cmp	r3, #0
   197bc:	bne	1a934 <__assert_fail@plt+0x97a8>
   197c0:	ldr	r3, [sp, #84]	; 0x54
   197c4:	adds	r3, r3, #0
   197c8:	movne	r3, #1
   197cc:	cmp	sl, #0
   197d0:	movne	r3, #0
   197d4:	cmp	r3, #0
   197d8:	ldreq	r2, [sp, #80]	; 0x50
   197dc:	beq	1a8c0 <__assert_fail@plt+0x9734>
   197e0:	ldr	r2, [sp, #84]	; 0x54
   197e4:	mov	sl, r2
   197e8:	mov	r0, #0
   197ec:	mov	r4, #1
   197f0:	mov	r1, #39	; 0x27
   197f4:	str	r0, [sp, #44]	; 0x2c
   197f8:	strb	r1, [fp]
   197fc:	str	r0, [sp, #48]	; 0x30
   19800:	str	r4, [sp, #52]	; 0x34
   19804:	str	r4, [sp, #56]	; 0x38
   19808:	str	r4, [sp, #64]	; 0x40
   1980c:	str	r0, [sp, #68]	; 0x44
   19810:	str	r3, [sp, #80]	; 0x50
   19814:	str	r2, [sp, #84]	; 0x54
   19818:	str	r0, [sp, #88]	; 0x58
   1981c:	b	1945c <__assert_fail@plt+0x82d0>
   19820:	mov	r5, #98	; 0x62
   19824:	b	196d0 <__assert_fail@plt+0x8544>
   19828:	mov	r5, #97	; 0x61
   1982c:	b	196d0 <__assert_fail@plt+0x8544>
   19830:	ldr	r3, [sp, #48]	; 0x30
   19834:	str	r3, [sp, #40]	; 0x28
   19838:	mov	r3, #116	; 0x74
   1983c:	ldr	r2, [sp, #68]	; 0x44
   19840:	cmp	r2, #0
   19844:	bne	19a40 <__assert_fail@plt+0x88b4>
   19848:	ldr	r2, [sp, #60]	; 0x3c
   1984c:	cmp	r2, #0
   19850:	bne	1999c <__assert_fail@plt+0x8810>
   19854:	ldr	r3, [sp, #44]	; 0x2c
   19858:	mov	r6, #0
   1985c:	cmp	r3, #0
   19860:	beq	19a0c <__assert_fail@plt+0x8880>
   19864:	mov	r3, fp
   19868:	ldr	r2, [sp, #184]	; 0xb8
   1986c:	cmp	r2, #0
   19870:	beq	19890 <__assert_fail@plt+0x8704>
   19874:	ubfx	r1, r5, #5, #8
   19878:	mov	r0, r2
   1987c:	and	r2, r5, #31
   19880:	ldr	r1, [r0, r1, lsl #2]
   19884:	lsr	r2, r1, r2
   19888:	tst	r2, #1
   1988c:	bne	196d4 <__assert_fail@plt+0x8548>
   19890:	ldr	r2, [sp, #40]	; 0x28
   19894:	cmp	r2, #0
   19898:	addeq	r7, r7, #1
   1989c:	bne	196d4 <__assert_fail@plt+0x8548>
   198a0:	cmp	r3, #0
   198a4:	beq	19738 <__assert_fail@plt+0x85ac>
   198a8:	cmp	sl, r4
   198ac:	mov	fp, #0
   198b0:	movhi	r3, #39	; 0x27
   198b4:	strbhi	r3, [r9, r4]
   198b8:	add	r3, r4, #1
   198bc:	add	r4, r4, #2
   198c0:	cmp	sl, r3
   198c4:	movhi	r2, #39	; 0x27
   198c8:	strbhi	r2, [r9, r3]
   198cc:	b	19738 <__assert_fail@plt+0x85ac>
   198d0:	ldr	r3, [sp, #48]	; 0x30
   198d4:	str	r3, [sp, #40]	; 0x28
   198d8:	eor	r3, fp, #1
   198dc:	ldr	r2, [sp, #52]	; 0x34
   198e0:	ands	r2, r2, r3
   198e4:	beq	1a5a4 <__assert_fail@plt+0x9418>
   198e8:	cmp	sl, r4
   198ec:	movhi	r3, #39	; 0x27
   198f0:	strbhi	r3, [r9, r4]
   198f4:	add	r3, r4, #1
   198f8:	cmp	sl, r3
   198fc:	movhi	r1, #36	; 0x24
   19900:	strbhi	r1, [r9, r3]
   19904:	add	r3, r4, #2
   19908:	cmp	sl, r3
   1990c:	movhi	r1, #39	; 0x27
   19910:	strbhi	r1, [r9, r3]
   19914:	add	r3, r4, #3
   19918:	cmp	sl, r3
   1991c:	bls	1a5f0 <__assert_fail@plt+0x9464>
   19920:	mov	r4, r3
   19924:	mov	r3, #92	; 0x5c
   19928:	mov	fp, r2
   1992c:	mov	r2, r4
   19930:	strb	r3, [r9, r4]
   19934:	ldr	r3, [sp, #176]	; 0xb0
   19938:	add	r4, r4, #1
   1993c:	cmp	r3, #2
   19940:	beq	1a658 <__assert_fail@plt+0x94cc>
   19944:	add	r3, r7, #1
   19948:	cmp	r3, r8
   1994c:	bcs	19964 <__assert_fail@plt+0x87d8>
   19950:	ldr	r1, [sp, #28]
   19954:	ldrb	r3, [r1, r3]
   19958:	sub	r3, r3, #48	; 0x30
   1995c:	cmp	r3, #9
   19960:	bls	1a668 <__assert_fail@plt+0x94dc>
   19964:	mov	r3, #0
   19968:	mov	r5, #48	; 0x30
   1996c:	ldr	r6, [sp, #64]	; 0x40
   19970:	cmp	r6, #0
   19974:	beq	19868 <__assert_fail@plt+0x86dc>
   19978:	mov	r6, #0
   1997c:	b	19890 <__assert_fail@plt+0x8704>
   19980:	ldr	r3, [sp, #48]	; 0x30
   19984:	str	r3, [sp, #40]	; 0x28
   19988:	ldr	r2, [sp, #60]	; 0x3c
   1998c:	mov	r5, #13
   19990:	mov	r3, #114	; 0x72
   19994:	cmp	r2, #0
   19998:	beq	19854 <__assert_fail@plt+0x86c8>
   1999c:	mov	r5, r3
   199a0:	b	196d0 <__assert_fail@plt+0x8544>
   199a4:	ldr	r3, [sp, #48]	; 0x30
   199a8:	str	r3, [sp, #40]	; 0x28
   199ac:	mov	r3, #118	; 0x76
   199b0:	b	19848 <__assert_fail@plt+0x86bc>
   199b4:	ldr	r3, [sp, #48]	; 0x30
   199b8:	str	r3, [sp, #40]	; 0x28
   199bc:	mov	r5, #10
   199c0:	mov	r3, #110	; 0x6e
   199c4:	b	19848 <__assert_fail@plt+0x86bc>
   199c8:	ldr	r3, [sp, #48]	; 0x30
   199cc:	cmn	r8, #1
   199d0:	str	r3, [sp, #40]	; 0x28
   199d4:	beq	19e1c <__assert_fail@plt+0x8c90>
   199d8:	subs	r3, r8, #1
   199dc:	movne	r3, #1
   199e0:	cmp	r3, #0
   199e4:	bne	199f0 <__assert_fail@plt+0x8864>
   199e8:	cmp	r7, #0
   199ec:	beq	19a34 <__assert_fail@plt+0x88a8>
   199f0:	mov	r6, #0
   199f4:	ldr	r3, [sp, #64]	; 0x40
   199f8:	cmp	r3, #0
   199fc:	beq	19864 <__assert_fail@plt+0x86d8>
   19a00:	ldr	r3, [sp, #44]	; 0x2c
   19a04:	cmp	r3, #0
   19a08:	bne	19864 <__assert_fail@plt+0x86d8>
   19a0c:	mov	r3, fp
   19a10:	b	19890 <__assert_fail@plt+0x8704>
   19a14:	ldr	r3, [sp, #48]	; 0x30
   19a18:	str	r3, [sp, #40]	; 0x28
   19a1c:	b	199e8 <__assert_fail@plt+0x885c>
   19a20:	ldr	r3, [sp, #48]	; 0x30
   19a24:	str	r3, [sp, #40]	; 0x28
   19a28:	b	199f0 <__assert_fail@plt+0x8864>
   19a2c:	ldr	r6, [sp, #48]	; 0x30
   19a30:	str	r6, [sp, #40]	; 0x28
   19a34:	ldr	r3, [sp, #68]	; 0x44
   19a38:	cmp	r3, #0
   19a3c:	beq	199f4 <__assert_fail@plt+0x8868>
   19a40:	mov	r3, #2
   19a44:	mov	fp, r9
   19a48:	str	r3, [sp, #176]	; 0xb0
   19a4c:	ldr	r3, [sp, #60]	; 0x3c
   19a50:	cmp	r3, #0
   19a54:	ldr	r3, [sp, #176]	; 0xb0
   19a58:	movne	r3, #4
   19a5c:	str	r3, [sp, #176]	; 0xb0
   19a60:	mov	lr, #0
   19a64:	mov	r0, fp
   19a68:	ldr	r2, [sp, #28]
   19a6c:	ldr	r3, [sp, #180]	; 0xb4
   19a70:	ldr	r1, [sp, #188]	; 0xbc
   19a74:	bic	ip, r3, #2
   19a78:	ldr	r3, [sp, #176]	; 0xb0
   19a7c:	stm	sp, {r3, ip, lr}
   19a80:	mov	r3, r8
   19a84:	ldr	ip, [sp, #192]	; 0xc0
   19a88:	str	r1, [sp, #12]
   19a8c:	mov	r1, sl
   19a90:	str	ip, [sp, #16]
   19a94:	bl	19020 <__assert_fail@plt+0x7e94>
   19a98:	mov	r4, r0
   19a9c:	mov	r0, r4
   19aa0:	add	sp, sp, #140	; 0x8c
   19aa4:	ldrd	r4, [sp]
   19aa8:	ldrd	r6, [sp, #8]
   19aac:	ldrd	r8, [sp, #16]
   19ab0:	ldrd	sl, [sp, #24]
   19ab4:	add	sp, sp, #32
   19ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   19abc:	ldr	r3, [sp, #48]	; 0x30
   19ac0:	str	r3, [sp, #40]	; 0x28
   19ac4:	ldr	r3, [sp, #176]	; 0xb0
   19ac8:	cmp	r3, #2
   19acc:	beq	19e44 <__assert_fail@plt+0x8cb8>
   19ad0:	ldr	r3, [sp, #88]	; 0x58
   19ad4:	cmp	r3, #0
   19ad8:	moveq	r5, #92	; 0x5c
   19adc:	moveq	r3, r5
   19ae0:	beq	19848 <__assert_fail@plt+0x86bc>
   19ae4:	add	r7, r7, #1
   19ae8:	mov	r3, fp
   19aec:	mov	r6, #0
   19af0:	mov	r5, #92	; 0x5c
   19af4:	b	198a0 <__assert_fail@plt+0x8714>
   19af8:	ldr	r3, [sp, #64]	; 0x40
   19afc:	cmp	r3, #0
   19b00:	bne	1a978 <__assert_fail@plt+0x97ec>
   19b04:	ldr	r2, [sp, #48]	; 0x30
   19b08:	mov	r3, fp
   19b0c:	mov	r6, r2
   19b10:	str	r2, [sp, #40]	; 0x28
   19b14:	b	19868 <__assert_fail@plt+0x86dc>
   19b18:	ldr	r3, [sp, #176]	; 0xb0
   19b1c:	cmp	r3, #2
   19b20:	beq	1a8b4 <__assert_fail@plt+0x9728>
   19b24:	cmp	r3, #5
   19b28:	ldr	r3, [sp, #48]	; 0x30
   19b2c:	str	r3, [sp, #40]	; 0x28
   19b30:	bne	19b5c <__assert_fail@plt+0x89d0>
   19b34:	ldr	r3, [sp, #96]	; 0x60
   19b38:	cmp	r3, #0
   19b3c:	beq	1a5b8 <__assert_fail@plt+0x942c>
   19b40:	add	r3, r7, #2
   19b44:	cmp	r3, r8
   19b48:	bcs	19b5c <__assert_fail@plt+0x89d0>
   19b4c:	ldr	r2, [sp, #36]	; 0x24
   19b50:	ldrb	r5, [r2, #1]
   19b54:	cmp	r5, #63	; 0x3f
   19b58:	beq	1a6a0 <__assert_fail@plt+0x9514>
   19b5c:	mov	r6, #0
   19b60:	mov	r5, #63	; 0x3f
   19b64:	b	199f4 <__assert_fail@plt+0x8868>
   19b68:	ldr	r3, [sp, #176]	; 0xb0
   19b6c:	cmp	r3, #2
   19b70:	ldr	r3, [sp, #48]	; 0x30
   19b74:	beq	1a35c <__assert_fail@plt+0x91d0>
   19b78:	mov	r5, #39	; 0x27
   19b7c:	str	r3, [sp, #40]	; 0x28
   19b80:	str	r6, [sp, #80]	; 0x50
   19b84:	b	199f4 <__assert_fail@plt+0x8868>
   19b88:	ldr	r3, [sp, #180]	; 0xb4
   19b8c:	cmp	r4, #0
   19b90:	and	r3, r3, #1
   19b94:	str	r3, [sp, #92]	; 0x5c
   19b98:	ldr	r3, [sp, #180]	; 0xb4
   19b9c:	and	r3, r3, #4
   19ba0:	str	r3, [sp, #96]	; 0x60
   19ba4:	bne	1a9c4 <__assert_fail@plt+0x9838>
   19ba8:	str	r4, [sp, #60]	; 0x3c
   19bac:	cmp	sl, #0
   19bb0:	bne	1a9a8 <__assert_fail@plt+0x981c>
   19bb4:	mov	r3, #1
   19bb8:	movw	r2, #64864	; 0xfd60
   19bbc:	movt	r2, #1
   19bc0:	mov	r4, r3
   19bc4:	mov	r3, #2
   19bc8:	mov	r9, sl
   19bcc:	str	r4, [sp, #32]
   19bd0:	str	sl, [sp, #44]	; 0x2c
   19bd4:	str	sl, [sp, #48]	; 0x30
   19bd8:	str	r4, [sp, #52]	; 0x34
   19bdc:	str	r4, [sp, #56]	; 0x38
   19be0:	str	r4, [sp, #64]	; 0x40
   19be4:	str	sl, [sp, #68]	; 0x44
   19be8:	str	r2, [sp, #72]	; 0x48
   19bec:	str	sl, [sp, #80]	; 0x50
   19bf0:	str	sl, [sp, #84]	; 0x54
   19bf4:	str	sl, [sp, #88]	; 0x58
   19bf8:	str	r3, [sp, #176]	; 0xb0
   19bfc:	b	19144 <__assert_fail@plt+0x7fb8>
   19c00:	ldrb	r5, [r0, r7]
   19c04:	cmp	r5, #126	; 0x7e
   19c08:	ldrls	pc, [pc, r5, lsl #2]
   19c0c:	b	19f70 <__assert_fail@plt+0x8de4>
   19c10:	andeq	r9, r1, ip, lsr pc
   19c14:	andeq	r9, r1, r0, ror pc
   19c18:	andeq	r9, r1, r0, ror pc
   19c1c:	andeq	r9, r1, r0, ror pc
   19c20:	andeq	r9, r1, r0, ror pc
   19c24:	andeq	r9, r1, r0, ror pc
   19c28:	andeq	r9, r1, r0, ror pc
   19c2c:	andeq	r9, r1, ip, lsr #30
   19c30:	andeq	r9, r1, ip, lsl pc
   19c34:	andeq	r9, r1, r0, lsr #29
   19c38:	andeq	r9, r1, ip, lsl #30
   19c3c:	andeq	r9, r1, r0, lsl #29
   19c40:	andeq	r9, r1, r0, ror #30
   19c44:	andeq	r9, r1, ip, ror #29
   19c48:	andeq	r9, r1, r0, ror pc
   19c4c:	andeq	r9, r1, r0, ror pc
   19c50:	andeq	r9, r1, r0, ror pc
   19c54:	andeq	r9, r1, r0, ror pc
   19c58:	andeq	r9, r1, r0, ror pc
   19c5c:	andeq	r9, r1, r0, ror pc
   19c60:	andeq	r9, r1, r0, ror pc
   19c64:	andeq	r9, r1, r0, ror pc
   19c68:	andeq	r9, r1, r0, ror pc
   19c6c:	andeq	r9, r1, r0, ror pc
   19c70:	andeq	r9, r1, r0, ror pc
   19c74:	andeq	r9, r1, r0, ror pc
   19c78:	andeq	r9, r1, r0, ror pc
   19c7c:	andeq	r9, r1, r0, ror pc
   19c80:	andeq	r9, r1, r0, ror pc
   19c84:	andeq	r9, r1, r0, ror pc
   19c88:	andeq	r9, r1, r0, ror pc
   19c8c:	andeq	r9, r1, r0, ror pc
   19c90:	muleq	r1, r4, lr
   19c94:	strdeq	r9, [r1], -ip
   19c98:	strdeq	r9, [r1], -ip
   19c9c:	andeq	r9, r1, r4, ror lr
   19ca0:	strdeq	r9, [r1], -ip
   19ca4:	andeq	r9, r1, r8, ror #28
   19ca8:	strdeq	r9, [r1], -ip
   19cac:	ldrdeq	r9, [r1], -r8
   19cb0:	strdeq	r9, [r1], -ip
   19cb4:	strdeq	r9, [r1], -ip
   19cb8:	strdeq	r9, [r1], -ip
   19cbc:	andeq	r9, r1, r8, ror #28
   19cc0:	andeq	r9, r1, r8, ror #28
   19cc4:	andeq	r9, r1, r8, ror #28
   19cc8:	andeq	r9, r1, r8, ror #28
   19ccc:	andeq	r9, r1, r8, ror #28
   19cd0:	andeq	r9, r1, r8, ror #28
   19cd4:	andeq	r9, r1, r8, ror #28
   19cd8:	andeq	r9, r1, r8, ror #28
   19cdc:	andeq	r9, r1, r8, ror #28
   19ce0:	andeq	r9, r1, r8, ror #28
   19ce4:	andeq	r9, r1, r8, ror #28
   19ce8:	andeq	r9, r1, r8, ror #28
   19cec:	andeq	r9, r1, r8, ror #28
   19cf0:	andeq	r9, r1, r8, ror #28
   19cf4:	andeq	r9, r1, r8, ror #28
   19cf8:	andeq	r9, r1, r8, ror #28
   19cfc:	strdeq	r9, [r1], -ip
   19d00:	strdeq	r9, [r1], -ip
   19d04:	strdeq	r9, [r1], -ip
   19d08:	strdeq	r9, [r1], -ip
   19d0c:			; <UNDEFINED> instruction: 0x00019eb0
   19d10:	andeq	r9, r1, r0, ror pc
   19d14:	andeq	r9, r1, r8, ror #28
   19d18:	andeq	r9, r1, r8, ror #28
   19d1c:	andeq	r9, r1, r8, ror #28
   19d20:	andeq	r9, r1, r8, ror #28
   19d24:	andeq	r9, r1, r8, ror #28
   19d28:	andeq	r9, r1, r8, ror #28
   19d2c:	andeq	r9, r1, r8, ror #28
   19d30:	andeq	r9, r1, r8, ror #28
   19d34:	andeq	r9, r1, r8, ror #28
   19d38:	andeq	r9, r1, r8, ror #28
   19d3c:	andeq	r9, r1, r8, ror #28
   19d40:	andeq	r9, r1, r8, ror #28
   19d44:	andeq	r9, r1, r8, ror #28
   19d48:	andeq	r9, r1, r8, ror #28
   19d4c:	andeq	r9, r1, r8, ror #28
   19d50:	andeq	r9, r1, r8, ror #28
   19d54:	andeq	r9, r1, r8, ror #28
   19d58:	andeq	r9, r1, r8, ror #28
   19d5c:	andeq	r9, r1, r8, ror #28
   19d60:	andeq	r9, r1, r8, ror #28
   19d64:	andeq	r9, r1, r8, ror #28
   19d68:	andeq	r9, r1, r8, ror #28
   19d6c:	andeq	r9, r1, r8, ror #28
   19d70:	andeq	r9, r1, r8, ror #28
   19d74:	andeq	r9, r1, r8, ror #28
   19d78:	andeq	r9, r1, r8, ror #28
   19d7c:	strdeq	r9, [r1], -ip
   19d80:	andeq	r9, r1, r0, lsr lr
   19d84:	andeq	r9, r1, r8, ror #28
   19d88:	strdeq	r9, [r1], -ip
   19d8c:	andeq	r9, r1, r8, ror #28
   19d90:	strdeq	r9, [r1], -ip
   19d94:	andeq	r9, r1, r8, ror #28
   19d98:	andeq	r9, r1, r8, ror #28
   19d9c:	andeq	r9, r1, r8, ror #28
   19da0:	andeq	r9, r1, r8, ror #28
   19da4:	andeq	r9, r1, r8, ror #28
   19da8:	andeq	r9, r1, r8, ror #28
   19dac:	andeq	r9, r1, r8, ror #28
   19db0:	andeq	r9, r1, r8, ror #28
   19db4:	andeq	r9, r1, r8, ror #28
   19db8:	andeq	r9, r1, r8, ror #28
   19dbc:	andeq	r9, r1, r8, ror #28
   19dc0:	andeq	r9, r1, r8, ror #28
   19dc4:	andeq	r9, r1, r8, ror #28
   19dc8:	andeq	r9, r1, r8, ror #28
   19dcc:	andeq	r9, r1, r8, ror #28
   19dd0:	andeq	r9, r1, r8, ror #28
   19dd4:	andeq	r9, r1, r8, ror #28
   19dd8:	andeq	r9, r1, r8, ror #28
   19ddc:	andeq	r9, r1, r8, ror #28
   19de0:	andeq	r9, r1, r8, ror #28
   19de4:	andeq	r9, r1, r8, ror #28
   19de8:	andeq	r9, r1, r8, ror #28
   19dec:	andeq	r9, r1, r8, ror #28
   19df0:	andeq	r9, r1, r8, ror #28
   19df4:	andeq	r9, r1, r8, ror #28
   19df8:	andeq	r9, r1, r8, ror #28
   19dfc:	andeq	r9, r1, ip, lsl #28
   19e00:	strdeq	r9, [r1], -ip
   19e04:	andeq	r9, r1, ip, lsl #28
   19e08:	andeq	r9, r1, r4, ror lr
   19e0c:	mov	r3, #0
   19e10:	cmn	r8, #1
   19e14:	str	r3, [sp, #40]	; 0x28
   19e18:	bne	199d8 <__assert_fail@plt+0x884c>
   19e1c:	ldr	r3, [sp, #28]
   19e20:	ldrb	r3, [r3, #1]
   19e24:	adds	r3, r3, #0
   19e28:	movne	r3, #1
   19e2c:	b	199e0 <__assert_fail@plt+0x8854>
   19e30:	mov	r3, #0
   19e34:	str	r3, [sp, #40]	; 0x28
   19e38:	ldr	r3, [sp, #176]	; 0xb0
   19e3c:	cmp	r3, #2
   19e40:	bne	19ad0 <__assert_fail@plt+0x8944>
   19e44:	ldr	r3, [sp, #44]	; 0x2c
   19e48:	cmp	r3, #0
   19e4c:	bne	1a78c <__assert_fail@plt+0x9600>
   19e50:	mov	r6, r3
   19e54:	add	r7, r7, #1
   19e58:	mov	r3, fp
   19e5c:	mov	r5, #92	; 0x5c
   19e60:	b	198a0 <__assert_fail@plt+0x8714>
   19e64:	ldr	r6, [sp, #48]	; 0x30
   19e68:	mov	r3, #0
   19e6c:	str	r3, [sp, #40]	; 0x28
   19e70:	b	199f4 <__assert_fail@plt+0x8868>
   19e74:	mov	r3, #0
   19e78:	str	r3, [sp, #40]	; 0x28
   19e7c:	b	199e8 <__assert_fail@plt+0x885c>
   19e80:	mov	r3, #0
   19e84:	str	r3, [sp, #40]	; 0x28
   19e88:	mov	r3, #118	; 0x76
   19e8c:	b	19848 <__assert_fail@plt+0x86bc>
   19e90:	ldr	r6, [sp, #48]	; 0x30
   19e94:	mov	r3, #0
   19e98:	str	r3, [sp, #40]	; 0x28
   19e9c:	b	19a34 <__assert_fail@plt+0x88a8>
   19ea0:	mov	r3, #0
   19ea4:	str	r3, [sp, #40]	; 0x28
   19ea8:	mov	r3, #116	; 0x74
   19eac:	b	1983c <__assert_fail@plt+0x86b0>
   19eb0:	ldr	r3, [sp, #176]	; 0xb0
   19eb4:	cmp	r3, #2
   19eb8:	beq	1a3c8 <__assert_fail@plt+0x923c>
   19ebc:	cmp	r3, #5
   19ec0:	mov	r3, #0
   19ec4:	str	r3, [sp, #40]	; 0x28
   19ec8:	beq	19b34 <__assert_fail@plt+0x89a8>
   19ecc:	mov	r6, #0
   19ed0:	mov	r5, #63	; 0x3f
   19ed4:	b	199f4 <__assert_fail@plt+0x8868>
   19ed8:	ldr	r3, [sp, #176]	; 0xb0
   19edc:	cmp	r3, #2
   19ee0:	beq	1a350 <__assert_fail@plt+0x91c4>
   19ee4:	mov	r3, #0
   19ee8:	b	19b78 <__assert_fail@plt+0x89ec>
   19eec:	mov	r3, #0
   19ef0:	str	r3, [sp, #40]	; 0x28
   19ef4:	mov	r3, #114	; 0x72
   19ef8:	b	1983c <__assert_fail@plt+0x86b0>
   19efc:	mov	r3, #0
   19f00:	mov	r6, r3
   19f04:	str	r3, [sp, #40]	; 0x28
   19f08:	b	19a34 <__assert_fail@plt+0x88a8>
   19f0c:	mov	r3, #0
   19f10:	str	r3, [sp, #40]	; 0x28
   19f14:	mov	r3, #110	; 0x6e
   19f18:	b	1983c <__assert_fail@plt+0x86b0>
   19f1c:	mov	r3, #0
   19f20:	str	r3, [sp, #40]	; 0x28
   19f24:	mov	r3, #98	; 0x62
   19f28:	b	19848 <__assert_fail@plt+0x86bc>
   19f2c:	mov	r3, #0
   19f30:	str	r3, [sp, #40]	; 0x28
   19f34:	mov	r3, #97	; 0x61
   19f38:	b	19848 <__assert_fail@plt+0x86bc>
   19f3c:	ldr	r3, [sp, #60]	; 0x3c
   19f40:	cmp	r3, #0
   19f44:	bne	1a334 <__assert_fail@plt+0x91a8>
   19f48:	ldr	r3, [sp, #92]	; 0x5c
   19f4c:	cmp	r3, #0
   19f50:	addne	r7, r7, #1
   19f54:	bne	19154 <__assert_fail@plt+0x7fc8>
   19f58:	str	r3, [sp, #40]	; 0x28
   19f5c:	b	19854 <__assert_fail@plt+0x86c8>
   19f60:	mov	r3, #0
   19f64:	str	r3, [sp, #40]	; 0x28
   19f68:	mov	r3, #102	; 0x66
   19f6c:	b	19848 <__assert_fail@plt+0x86bc>
   19f70:	mov	r3, #0
   19f74:	str	r3, [sp, #40]	; 0x28
   19f78:	ldr	r3, [sp, #76]	; 0x4c
   19f7c:	cmp	r3, #1
   19f80:	bne	1a3e8 <__assert_fail@plt+0x925c>
   19f84:	bl	11054 <__ctype_b_loc@plt>
   19f88:	ldr	r2, [r0]
   19f8c:	sxth	r3, r5
   19f90:	lsl	r3, r3, #1
   19f94:	ldr	r1, [sp, #76]	; 0x4c
   19f98:	ldrh	r3, [r2, r3]
   19f9c:	mov	r0, r1
   19fa0:	and	r3, r3, #16384	; 0x4000
   19fa4:	cmp	r3, #0
   19fa8:	ldr	r3, [sp, #60]	; 0x3c
   19fac:	movne	r6, #1
   19fb0:	moveq	r6, #0
   19fb4:	movne	r2, #0
   19fb8:	andeq	r2, r3, #1
   19fbc:	cmp	r2, #0
   19fc0:	beq	199f4 <__assert_fail@plt+0x8868>
   19fc4:	ldr	r2, [sp, #60]	; 0x3c
   19fc8:	mov	r6, #0
   19fcc:	add	r1, r0, r7
   19fd0:	mov	ip, #39	; 0x27
   19fd4:	str	r6, [sp, #100]	; 0x64
   19fd8:	mov	r0, #0
   19fdc:	ldr	lr, [sp, #36]	; 0x24
   19fe0:	str	r8, [sp, #36]	; 0x24
   19fe4:	ldr	r6, [sp, #40]	; 0x28
   19fe8:	ldr	r8, [sp, #44]	; 0x2c
   19fec:	b	1a09c <__assert_fail@plt+0x8f10>
   19ff0:	cmp	r8, #0
   19ff4:	bne	1a5d0 <__assert_fail@plt+0x9444>
   19ff8:	ldr	r0, [sp, #52]	; 0x34
   19ffc:	eor	r3, fp, #1
   1a000:	ands	r3, r0, r3
   1a004:	beq	1a034 <__assert_fail@plt+0x8ea8>
   1a008:	cmp	sl, r4
   1a00c:	add	r0, r4, #1
   1a010:	strbhi	ip, [r9, r4]
   1a014:	cmp	sl, r0
   1a018:	movhi	fp, #36	; 0x24
   1a01c:	strbhi	fp, [r9, r0]
   1a020:	add	r0, r4, #2
   1a024:	mov	fp, r3
   1a028:	cmp	sl, r0
   1a02c:	add	r4, r4, #3
   1a030:	strbhi	ip, [r9, r0]
   1a034:	cmp	sl, r4
   1a038:	movhi	r3, #92	; 0x5c
   1a03c:	strbhi	r3, [r9, r4]
   1a040:	add	r3, r4, #1
   1a044:	cmp	sl, r3
   1a048:	bls	1a058 <__assert_fail@plt+0x8ecc>
   1a04c:	lsr	r0, r5, #6
   1a050:	add	r0, r0, #48	; 0x30
   1a054:	strb	r0, [r9, r3]
   1a058:	add	r3, r4, #2
   1a05c:	cmp	sl, r3
   1a060:	bls	1a070 <__assert_fail@plt+0x8ee4>
   1a064:	ubfx	r0, r5, #3, #3
   1a068:	add	r0, r0, #48	; 0x30
   1a06c:	strb	r0, [r9, r3]
   1a070:	add	r7, r7, #1
   1a074:	and	r5, r5, #7
   1a078:	cmp	r1, r7
   1a07c:	add	r5, r5, #48	; 0x30
   1a080:	add	r4, r4, #3
   1a084:	bls	1a5e4 <__assert_fail@plt+0x9458>
   1a088:	mov	r0, r2
   1a08c:	cmp	sl, r4
   1a090:	strbhi	r5, [r9, r4]
   1a094:	add	r4, r4, #1
   1a098:	ldrb	r5, [lr, #1]!
   1a09c:	cmp	r2, #0
   1a0a0:	bne	19ff0 <__assert_fail@plt+0x8e64>
   1a0a4:	eor	r3, r0, #1
   1a0a8:	cmp	r6, #0
   1a0ac:	and	r3, r3, fp
   1a0b0:	uxtb	r3, r3
   1a0b4:	beq	1a0c8 <__assert_fail@plt+0x8f3c>
   1a0b8:	cmp	sl, r4
   1a0bc:	movhi	r6, #92	; 0x5c
   1a0c0:	strbhi	r6, [r9, r4]
   1a0c4:	add	r4, r4, #1
   1a0c8:	add	r7, r7, #1
   1a0cc:	cmp	r7, r1
   1a0d0:	bcs	1a5c4 <__assert_fail@plt+0x9438>
   1a0d4:	cmp	r3, #0
   1a0d8:	beq	1a608 <__assert_fail@plt+0x947c>
   1a0dc:	cmp	sl, r4
   1a0e0:	add	r3, r4, #1
   1a0e4:	mov	r6, #0
   1a0e8:	strbhi	ip, [r9, r4]
   1a0ec:	cmp	sl, r3
   1a0f0:	add	r4, r4, #2
   1a0f4:	mov	fp, r6
   1a0f8:	strbhi	ip, [r9, r3]
   1a0fc:	b	1a08c <__assert_fail@plt+0x8f00>
   1a100:	ldr	r3, [sp, #36]	; 0x24
   1a104:	ldrb	r5, [r3]
   1a108:	cmp	r5, #126	; 0x7e
   1a10c:	ldrls	pc, [pc, r5, lsl #2]
   1a110:	b	19f70 <__assert_fail@plt+0x8de4>
   1a114:	andeq	sl, r1, r4, lsr r3
   1a118:	andeq	r9, r1, r0, ror pc
   1a11c:	andeq	r9, r1, r0, ror pc
   1a120:	andeq	r9, r1, r0, ror pc
   1a124:	andeq	r9, r1, r0, ror pc
   1a128:	andeq	r9, r1, r0, ror pc
   1a12c:	andeq	r9, r1, r0, ror pc
   1a130:	andeq	r9, r1, r8, lsr #16
   1a134:	andeq	r9, r1, r0, lsr #16
   1a138:	andeq	r9, r1, r0, lsr #29
   1a13c:	andeq	sl, r1, r8, lsr #6
   1a140:	andeq	r9, r1, r0, lsl #29
   1a144:	andeq	r9, r1, ip, asr #13
   1a148:	andeq	sl, r1, ip, lsl r3
   1a14c:	andeq	r9, r1, r0, ror pc
   1a150:	andeq	r9, r1, r0, ror pc
   1a154:	andeq	r9, r1, r0, ror pc
   1a158:	andeq	r9, r1, r0, ror pc
   1a15c:	andeq	r9, r1, r0, ror pc
   1a160:	andeq	r9, r1, r0, ror pc
   1a164:	andeq	r9, r1, r0, ror pc
   1a168:	andeq	r9, r1, r0, ror pc
   1a16c:	andeq	r9, r1, r0, ror pc
   1a170:	andeq	r9, r1, r0, ror pc
   1a174:	andeq	r9, r1, r0, ror pc
   1a178:	andeq	r9, r1, r0, ror pc
   1a17c:	andeq	r9, r1, r0, ror pc
   1a180:	andeq	r9, r1, r0, ror pc
   1a184:	andeq	r9, r1, r0, ror pc
   1a188:	andeq	r9, r1, r0, ror pc
   1a18c:	andeq	r9, r1, r0, ror pc
   1a190:	andeq	r9, r1, r0, ror pc
   1a194:	muleq	r1, r0, lr
   1a198:	andeq	sl, r1, r0, lsl r3
   1a19c:	andeq	sl, r1, r0, lsl r3
   1a1a0:	andeq	r9, r1, r4, ror lr
   1a1a4:	andeq	sl, r1, r0, lsl r3
   1a1a8:	andeq	r9, r1, r4, ror #28
   1a1ac:	andeq	sl, r1, r0, lsl r3
   1a1b0:	ldrdeq	r9, [r1], -r8
   1a1b4:	andeq	sl, r1, r0, lsl r3
   1a1b8:	andeq	sl, r1, r0, lsl r3
   1a1bc:	andeq	sl, r1, r0, lsl r3
   1a1c0:	andeq	r9, r1, r4, ror #28
   1a1c4:	andeq	r9, r1, r4, ror #28
   1a1c8:	andeq	r9, r1, r4, ror #28
   1a1cc:	andeq	r9, r1, r4, ror #28
   1a1d0:	andeq	r9, r1, r4, ror #28
   1a1d4:	andeq	r9, r1, r4, ror #28
   1a1d8:	andeq	r9, r1, r4, ror #28
   1a1dc:	andeq	r9, r1, r4, ror #28
   1a1e0:	andeq	r9, r1, r4, ror #28
   1a1e4:	andeq	r9, r1, r4, ror #28
   1a1e8:	andeq	r9, r1, r4, ror #28
   1a1ec:	andeq	r9, r1, r4, ror #28
   1a1f0:	andeq	r9, r1, r4, ror #28
   1a1f4:	andeq	r9, r1, r4, ror #28
   1a1f8:	andeq	r9, r1, r4, ror #28
   1a1fc:	andeq	r9, r1, r4, ror #28
   1a200:	andeq	sl, r1, r0, lsl r3
   1a204:	andeq	sl, r1, r0, lsl r3
   1a208:	andeq	sl, r1, r0, lsl r3
   1a20c:	andeq	sl, r1, r0, lsl r3
   1a210:			; <UNDEFINED> instruction: 0x00019eb0
   1a214:	andeq	r9, r1, r0, ror pc
   1a218:	andeq	r9, r1, r4, ror #28
   1a21c:	andeq	r9, r1, r4, ror #28
   1a220:	andeq	r9, r1, r4, ror #28
   1a224:	andeq	r9, r1, r4, ror #28
   1a228:	andeq	r9, r1, r4, ror #28
   1a22c:	andeq	r9, r1, r4, ror #28
   1a230:	andeq	r9, r1, r4, ror #28
   1a234:	andeq	r9, r1, r4, ror #28
   1a238:	andeq	r9, r1, r4, ror #28
   1a23c:	andeq	r9, r1, r4, ror #28
   1a240:	andeq	r9, r1, r4, ror #28
   1a244:	andeq	r9, r1, r4, ror #28
   1a248:	andeq	r9, r1, r4, ror #28
   1a24c:	andeq	r9, r1, r4, ror #28
   1a250:	andeq	r9, r1, r4, ror #28
   1a254:	andeq	r9, r1, r4, ror #28
   1a258:	andeq	r9, r1, r4, ror #28
   1a25c:	andeq	r9, r1, r4, ror #28
   1a260:	andeq	r9, r1, r4, ror #28
   1a264:	andeq	r9, r1, r4, ror #28
   1a268:	andeq	r9, r1, r4, ror #28
   1a26c:	andeq	r9, r1, r4, ror #28
   1a270:	andeq	r9, r1, r4, ror #28
   1a274:	andeq	r9, r1, r4, ror #28
   1a278:	andeq	r9, r1, r4, ror #28
   1a27c:	andeq	r9, r1, r4, ror #28
   1a280:	andeq	sl, r1, r0, lsl r3
   1a284:	andeq	r9, r1, r0, lsr lr
   1a288:	andeq	r9, r1, r4, ror #28
   1a28c:	andeq	sl, r1, r0, lsl r3
   1a290:	andeq	r9, r1, r4, ror #28
   1a294:	andeq	sl, r1, r0, lsl r3
   1a298:	andeq	r9, r1, r4, ror #28
   1a29c:	andeq	r9, r1, r4, ror #28
   1a2a0:	andeq	r9, r1, r4, ror #28
   1a2a4:	andeq	r9, r1, r4, ror #28
   1a2a8:	andeq	r9, r1, r4, ror #28
   1a2ac:	andeq	r9, r1, r4, ror #28
   1a2b0:	andeq	r9, r1, r4, ror #28
   1a2b4:	andeq	r9, r1, r4, ror #28
   1a2b8:	andeq	r9, r1, r4, ror #28
   1a2bc:	andeq	r9, r1, r4, ror #28
   1a2c0:	andeq	r9, r1, r4, ror #28
   1a2c4:	andeq	r9, r1, r4, ror #28
   1a2c8:	andeq	r9, r1, r4, ror #28
   1a2cc:	andeq	r9, r1, r4, ror #28
   1a2d0:	andeq	r9, r1, r4, ror #28
   1a2d4:	andeq	r9, r1, r4, ror #28
   1a2d8:	andeq	r9, r1, r4, ror #28
   1a2dc:	andeq	r9, r1, r4, ror #28
   1a2e0:	andeq	r9, r1, r4, ror #28
   1a2e4:	andeq	r9, r1, r4, ror #28
   1a2e8:	andeq	r9, r1, r4, ror #28
   1a2ec:	andeq	r9, r1, r4, ror #28
   1a2f0:	andeq	r9, r1, r4, ror #28
   1a2f4:	andeq	r9, r1, r4, ror #28
   1a2f8:	andeq	r9, r1, r4, ror #28
   1a2fc:	andeq	r9, r1, r4, ror #28
   1a300:	andeq	r9, r1, ip, lsl #28
   1a304:	andeq	sl, r1, r0, lsl r3
   1a308:	andeq	r9, r1, ip, lsl #28
   1a30c:	andeq	r9, r1, r4, ror lr
   1a310:	mov	r3, #0
   1a314:	str	r3, [sp, #40]	; 0x28
   1a318:	b	199f0 <__assert_fail@plt+0x8864>
   1a31c:	mov	r3, #0
   1a320:	str	r3, [sp, #40]	; 0x28
   1a324:	b	19988 <__assert_fail@plt+0x87fc>
   1a328:	mov	r3, #0
   1a32c:	str	r3, [sp, #40]	; 0x28
   1a330:	b	199bc <__assert_fail@plt+0x8830>
   1a334:	ldr	r3, [sp, #44]	; 0x2c
   1a338:	cmp	r3, #0
   1a33c:	beq	198d4 <__assert_fail@plt+0x8748>
   1a340:	ldr	r3, [sp, #52]	; 0x34
   1a344:	mov	fp, r9
   1a348:	str	r3, [sp, #60]	; 0x3c
   1a34c:	b	19a4c <__assert_fail@plt+0x88c0>
   1a350:	ldr	r3, [sp, #44]	; 0x2c
   1a354:	cmp	r3, #0
   1a358:	bne	1a78c <__assert_fail@plt+0x9600>
   1a35c:	str	r3, [sp, #40]	; 0x28
   1a360:	cmp	sl, #0
   1a364:	ldr	r3, [sp, #84]	; 0x54
   1a368:	clz	r3, r3
   1a36c:	lsr	r3, r3, #5
   1a370:	moveq	r3, #0
   1a374:	cmp	r3, #0
   1a378:	strne	sl, [sp, #84]	; 0x54
   1a37c:	movne	sl, #0
   1a380:	bne	1a3b0 <__assert_fail@plt+0x9224>
   1a384:	cmp	sl, r4
   1a388:	movhi	r3, #39	; 0x27
   1a38c:	strbhi	r3, [r9, r4]
   1a390:	add	r3, r4, #1
   1a394:	cmp	sl, r3
   1a398:	movhi	r2, #92	; 0x5c
   1a39c:	strbhi	r2, [r9, r3]
   1a3a0:	add	r3, r4, #2
   1a3a4:	cmp	sl, r3
   1a3a8:	movhi	r2, #39	; 0x27
   1a3ac:	strbhi	r2, [r9, r3]
   1a3b0:	mov	r3, #0
   1a3b4:	add	r4, r4, #3
   1a3b8:	str	r6, [sp, #80]	; 0x50
   1a3bc:	mov	fp, r3
   1a3c0:	mov	r5, #39	; 0x27
   1a3c4:	b	19890 <__assert_fail@plt+0x8704>
   1a3c8:	ldr	r3, [sp, #44]	; 0x2c
   1a3cc:	cmp	r3, #0
   1a3d0:	bne	1a78c <__assert_fail@plt+0x9600>
   1a3d4:	mov	r6, #0
   1a3d8:	mov	r5, #63	; 0x3f
   1a3dc:	str	r3, [sp, #40]	; 0x28
   1a3e0:	mov	r3, fp
   1a3e4:	b	19890 <__assert_fail@plt+0x8704>
   1a3e8:	mov	r2, #0
   1a3ec:	mov	r3, #0
   1a3f0:	cmn	r8, #1
   1a3f4:	strd	r2, [sp, #128]	; 0x80
   1a3f8:	bne	1a408 <__assert_fail@plt+0x927c>
   1a3fc:	ldr	r0, [sp, #28]
   1a400:	bl	11078 <strlen@plt>
   1a404:	mov	r8, r0
   1a408:	str	r9, [sp, #100]	; 0x64
   1a40c:	mov	r3, #0
   1a410:	strd	sl, [sp, #104]	; 0x68
   1a414:	ldr	sl, [sp, #28]
   1a418:	str	r5, [sp, #112]	; 0x70
   1a41c:	mov	r5, r3
   1a420:	ldr	r9, [sp, #68]	; 0x44
   1a424:	str	r4, [sp, #116]	; 0x74
   1a428:	add	r4, r7, r5
   1a42c:	add	r3, sp, #128	; 0x80
   1a430:	add	fp, sl, r4
   1a434:	sub	r2, r8, r4
   1a438:	mov	r1, fp
   1a43c:	add	r0, sp, #124	; 0x7c
   1a440:	bl	1e9f0 <__assert_fail@plt+0xd864>
   1a444:	subs	r1, r0, #0
   1a448:	beq	1a488 <__assert_fail@plt+0x92fc>
   1a44c:	cmn	r1, #1
   1a450:	beq	1a7e0 <__assert_fail@plt+0x9654>
   1a454:	cmn	r1, #2
   1a458:	beq	1a800 <__assert_fail@plt+0x9674>
   1a45c:	cmp	r9, #0
   1a460:	bne	1a4b8 <__assert_fail@plt+0x932c>
   1a464:	ldr	r0, [sp, #124]	; 0x7c
   1a468:	add	r5, r5, r1
   1a46c:	bl	10fa0 <iswprint@plt>
   1a470:	cmp	r0, #0
   1a474:	add	r0, sp, #128	; 0x80
   1a478:	moveq	r6, #0
   1a47c:	bl	10f4c <mbsinit@plt>
   1a480:	cmp	r0, #0
   1a484:	beq	1a428 <__assert_fail@plt+0x929c>
   1a488:	ldr	r3, [sp, #60]	; 0x3c
   1a48c:	add	r9, sp, #100	; 0x64
   1a490:	mov	r0, r5
   1a494:	ldm	r9, {r9, sl, fp}
   1a498:	eor	r2, r6, #1
   1a49c:	ldr	r5, [sp, #112]	; 0x70
   1a4a0:	and	r2, r2, r3
   1a4a4:	uxtb	r2, r2
   1a4a8:	ldr	r4, [sp, #116]	; 0x74
   1a4ac:	cmp	r0, #1
   1a4b0:	bhi	19fcc <__assert_fail@plt+0x8e40>
   1a4b4:	b	19fbc <__assert_fail@plt+0x8e30>
   1a4b8:	cmp	r1, #1
   1a4bc:	beq	1a464 <__assert_fail@plt+0x92d8>
   1a4c0:	add	r2, r4, #1
   1a4c4:	add	r3, sl, r1
   1a4c8:	add	r2, sl, r2
   1a4cc:	add	r4, r3, r4
   1a4d0:	ldrb	r3, [r2], #1
   1a4d4:	sub	r3, r3, #91	; 0x5b
   1a4d8:	cmp	r3, #33	; 0x21
   1a4dc:	ldrls	pc, [pc, r3, lsl #2]
   1a4e0:	b	1a56c <__assert_fail@plt+0x93e0>
   1a4e4:	andeq	sl, r1, r8, ror r5
   1a4e8:	andeq	sl, r1, r8, ror r5
   1a4ec:	andeq	sl, r1, ip, ror #10
   1a4f0:	andeq	sl, r1, r8, ror r5
   1a4f4:	andeq	sl, r1, ip, ror #10
   1a4f8:	andeq	sl, r1, r8, ror r5
   1a4fc:	andeq	sl, r1, ip, ror #10
   1a500:	andeq	sl, r1, ip, ror #10
   1a504:	andeq	sl, r1, ip, ror #10
   1a508:	andeq	sl, r1, ip, ror #10
   1a50c:	andeq	sl, r1, ip, ror #10
   1a510:	andeq	sl, r1, ip, ror #10
   1a514:	andeq	sl, r1, ip, ror #10
   1a518:	andeq	sl, r1, ip, ror #10
   1a51c:	andeq	sl, r1, ip, ror #10
   1a520:	andeq	sl, r1, ip, ror #10
   1a524:	andeq	sl, r1, ip, ror #10
   1a528:	andeq	sl, r1, ip, ror #10
   1a52c:	andeq	sl, r1, ip, ror #10
   1a530:	andeq	sl, r1, ip, ror #10
   1a534:	andeq	sl, r1, ip, ror #10
   1a538:	andeq	sl, r1, ip, ror #10
   1a53c:	andeq	sl, r1, ip, ror #10
   1a540:	andeq	sl, r1, ip, ror #10
   1a544:	andeq	sl, r1, ip, ror #10
   1a548:	andeq	sl, r1, ip, ror #10
   1a54c:	andeq	sl, r1, ip, ror #10
   1a550:	andeq	sl, r1, ip, ror #10
   1a554:	andeq	sl, r1, ip, ror #10
   1a558:	andeq	sl, r1, ip, ror #10
   1a55c:	andeq	sl, r1, ip, ror #10
   1a560:	andeq	sl, r1, ip, ror #10
   1a564:	andeq	sl, r1, ip, ror #10
   1a568:	andeq	sl, r1, r8, ror r5
   1a56c:	cmp	r4, r2
   1a570:	bne	1a4d0 <__assert_fail@plt+0x9344>
   1a574:	b	1a464 <__assert_fail@plt+0x92d8>
   1a578:	mov	r3, #2
   1a57c:	ldr	fp, [sp, #100]	; 0x64
   1a580:	str	r3, [sp, #176]	; 0xb0
   1a584:	ldr	sl, [sp, #104]	; 0x68
   1a588:	b	19a4c <__assert_fail@plt+0x88c0>
   1a58c:	ldr	r2, [sp, #52]	; 0x34
   1a590:	mov	fp, r9
   1a594:	ldr	r3, [sp, #60]	; 0x3c
   1a598:	and	r3, r3, r2
   1a59c:	str	r3, [sp, #60]	; 0x3c
   1a5a0:	b	19a4c <__assert_fail@plt+0x88c0>
   1a5a4:	cmp	sl, r4
   1a5a8:	movhi	r2, fp
   1a5ac:	bhi	19924 <__assert_fail@plt+0x8798>
   1a5b0:	mov	r2, r4
   1a5b4:	b	19934 <__assert_fail@plt+0x87a8>
   1a5b8:	mov	r6, r3
   1a5bc:	mov	r5, #63	; 0x3f
   1a5c0:	b	199f4 <__assert_fail@plt+0x8868>
   1a5c4:	ldr	r8, [sp, #36]	; 0x24
   1a5c8:	ldr	r6, [sp, #100]	; 0x64
   1a5cc:	b	198a0 <__assert_fail@plt+0x8714>
   1a5d0:	mov	fp, r9
   1a5d4:	ldr	r8, [sp, #36]	; 0x24
   1a5d8:	ldr	r3, [sp, #52]	; 0x34
   1a5dc:	str	r3, [sp, #60]	; 0x3c
   1a5e0:	b	19a4c <__assert_fail@plt+0x88c0>
   1a5e4:	ldr	r8, [sp, #36]	; 0x24
   1a5e8:	ldr	r6, [sp, #100]	; 0x64
   1a5ec:	b	19738 <__assert_fail@plt+0x85ac>
   1a5f0:	mov	r3, #0
   1a5f4:	add	r4, r4, #4
   1a5f8:	mov	fp, r2
   1a5fc:	mov	r6, r3
   1a600:	mov	r5, #48	; 0x30
   1a604:	b	19890 <__assert_fail@plt+0x8704>
   1a608:	mov	r6, r3
   1a60c:	b	1a08c <__assert_fail@plt+0x8f00>
   1a610:	mov	r3, #1
   1a614:	movw	r2, #64844	; 0xfd4c
   1a618:	movt	r2, #1
   1a61c:	mov	r4, r3
   1a620:	mov	r9, sl
   1a624:	str	r3, [sp, #32]
   1a628:	str	sl, [sp, #44]	; 0x2c
   1a62c:	str	r3, [sp, #48]	; 0x30
   1a630:	str	sl, [sp, #52]	; 0x34
   1a634:	str	r3, [sp, #56]	; 0x38
   1a638:	str	r3, [sp, #60]	; 0x3c
   1a63c:	str	sl, [sp, #64]	; 0x40
   1a640:	str	sl, [sp, #68]	; 0x44
   1a644:	str	r2, [sp, #72]	; 0x48
   1a648:	str	sl, [sp, #80]	; 0x50
   1a64c:	str	sl, [sp, #84]	; 0x54
   1a650:	str	sl, [sp, #88]	; 0x58
   1a654:	b	19144 <__assert_fail@plt+0x7fb8>
   1a658:	mov	r3, #0
   1a65c:	mov	r5, #48	; 0x30
   1a660:	mov	r6, r3
   1a664:	b	19890 <__assert_fail@plt+0x8704>
   1a668:	cmp	sl, r4
   1a66c:	mov	r5, #48	; 0x30
   1a670:	movhi	r3, #48	; 0x30
   1a674:	strbhi	r3, [r9, r4]
   1a678:	add	r3, r2, #2
   1a67c:	add	r4, r2, #3
   1a680:	cmp	sl, r3
   1a684:	movhi	r1, #48	; 0x30
   1a688:	strbhi	r1, [r9, r3]
   1a68c:	mov	r3, #0
   1a690:	b	1996c <__assert_fail@plt+0x87e0>
   1a694:	ldr	r3, [sp, #48]	; 0x30
   1a698:	str	r3, [sp, #40]	; 0x28
   1a69c:	b	19f78 <__assert_fail@plt+0x8dec>
   1a6a0:	ldr	r2, [sp, #28]
   1a6a4:	ldrb	r2, [r2, r3]
   1a6a8:	sub	r1, r2, #33	; 0x21
   1a6ac:	cmp	r1, #29
   1a6b0:	ldrls	pc, [pc, r1, lsl #2]
   1a6b4:	b	199f0 <__assert_fail@plt+0x8864>
   1a6b8:	andeq	sl, r1, r0, lsr r7
   1a6bc:	strdeq	r9, [r1], -r0
   1a6c0:	strdeq	r9, [r1], -r0
   1a6c4:	strdeq	r9, [r1], -r0
   1a6c8:	strdeq	r9, [r1], -r0
   1a6cc:	strdeq	r9, [r1], -r0
   1a6d0:	andeq	sl, r1, r0, lsr r7
   1a6d4:	andeq	sl, r1, r0, lsr r7
   1a6d8:	andeq	sl, r1, r0, lsr r7
   1a6dc:	strdeq	r9, [r1], -r0
   1a6e0:	strdeq	r9, [r1], -r0
   1a6e4:	strdeq	r9, [r1], -r0
   1a6e8:	andeq	sl, r1, r0, lsr r7
   1a6ec:	strdeq	r9, [r1], -r0
   1a6f0:	andeq	sl, r1, r0, lsr r7
   1a6f4:	strdeq	r9, [r1], -r0
   1a6f8:	strdeq	r9, [r1], -r0
   1a6fc:	strdeq	r9, [r1], -r0
   1a700:	strdeq	r9, [r1], -r0
   1a704:	strdeq	r9, [r1], -r0
   1a708:	strdeq	r9, [r1], -r0
   1a70c:	strdeq	r9, [r1], -r0
   1a710:	strdeq	r9, [r1], -r0
   1a714:	strdeq	r9, [r1], -r0
   1a718:	strdeq	r9, [r1], -r0
   1a71c:	strdeq	r9, [r1], -r0
   1a720:	strdeq	r9, [r1], -r0
   1a724:	andeq	sl, r1, r0, lsr r7
   1a728:	andeq	sl, r1, r0, lsr r7
   1a72c:	andeq	sl, r1, r0, lsr r7
   1a730:	ldr	r1, [sp, #44]	; 0x2c
   1a734:	cmp	r1, #0
   1a738:	bne	1a998 <__assert_fail@plt+0x980c>
   1a73c:	cmp	sl, r4
   1a740:	mov	r7, r3
   1a744:	movhi	r1, #63	; 0x3f
   1a748:	mov	r5, r2
   1a74c:	mov	r3, fp
   1a750:	strbhi	r1, [r9, r4]
   1a754:	add	r1, r4, #1
   1a758:	cmp	sl, r1
   1a75c:	movhi	r0, #34	; 0x22
   1a760:	strbhi	r0, [r9, r1]
   1a764:	add	r1, r4, #2
   1a768:	cmp	sl, r1
   1a76c:	movhi	r0, #34	; 0x22
   1a770:	strbhi	r0, [r9, r1]
   1a774:	add	r1, r4, #3
   1a778:	add	r4, r4, #4
   1a77c:	cmp	sl, r1
   1a780:	movhi	r0, #63	; 0x3f
   1a784:	strbhi	r0, [r9, r1]
   1a788:	b	1996c <__assert_fail@plt+0x87e0>
   1a78c:	mov	fp, r9
   1a790:	b	19a4c <__assert_fail@plt+0x88c0>
   1a794:	ldr	r3, [sp, #188]	; 0xbc
   1a798:	ldrb	r3, [r3]
   1a79c:	cmp	r3, #0
   1a7a0:	beq	190dc <__assert_fail@plt+0x7f50>
   1a7a4:	ldr	r2, [sp, #188]	; 0xbc
   1a7a8:	cmp	sl, r4
   1a7ac:	bls	1a7cc <__assert_fail@plt+0x9640>
   1a7b0:	strb	r3, [fp, r4]
   1a7b4:	add	r4, r4, #1
   1a7b8:	ldrb	r3, [r2, #1]!
   1a7bc:	cmp	r3, #0
   1a7c0:	beq	190dc <__assert_fail@plt+0x7f50>
   1a7c4:	cmp	sl, r4
   1a7c8:	bhi	1a7b0 <__assert_fail@plt+0x9624>
   1a7cc:	ldrb	r3, [r2, #1]!
   1a7d0:	add	r4, r4, #1
   1a7d4:	cmp	r3, #0
   1a7d8:	bne	1a7a8 <__assert_fail@plt+0x961c>
   1a7dc:	b	190dc <__assert_fail@plt+0x7f50>
   1a7e0:	add	r9, sp, #100	; 0x64
   1a7e4:	mov	r0, r5
   1a7e8:	ldr	r2, [sp, #60]	; 0x3c
   1a7ec:	mov	r6, #0
   1a7f0:	ldm	r9, {r9, sl, fp}
   1a7f4:	ldr	r5, [sp, #112]	; 0x70
   1a7f8:	ldr	r4, [sp, #116]	; 0x74
   1a7fc:	b	1a4ac <__assert_fail@plt+0x9320>
   1a800:	cmp	r4, r8
   1a804:	add	r9, sp, #100	; 0x64
   1a808:	mov	r1, r4
   1a80c:	mov	r2, fp
   1a810:	ldm	r9, {r9, sl, fp}
   1a814:	mov	r3, r5
   1a818:	mov	r0, r5
   1a81c:	ldr	r5, [sp, #112]	; 0x70
   1a820:	ldr	r4, [sp, #116]	; 0x74
   1a824:	bcs	1a858 <__assert_fail@plt+0x96cc>
   1a828:	ldrb	r6, [r2]
   1a82c:	cmp	r6, #0
   1a830:	bne	1a844 <__assert_fail@plt+0x96b8>
   1a834:	b	1a990 <__assert_fail@plt+0x9804>
   1a838:	ldrb	r6, [r2, #1]!
   1a83c:	cmp	r6, #0
   1a840:	beq	1a928 <__assert_fail@plt+0x979c>
   1a844:	add	r3, r3, #1
   1a848:	add	r1, r7, r3
   1a84c:	cmp	r8, r1
   1a850:	bhi	1a838 <__assert_fail@plt+0x96ac>
   1a854:	mov	r0, r3
   1a858:	mov	r6, #0
   1a85c:	ldr	r2, [sp, #60]	; 0x3c
   1a860:	b	1a4ac <__assert_fail@plt+0x9320>
   1a864:	mov	r3, #1
   1a868:	mov	r4, #0
   1a86c:	mov	r9, r4
   1a870:	str	r3, [sp, #32]
   1a874:	str	r3, [sp, #44]	; 0x2c
   1a878:	str	r3, [sp, #48]	; 0x30
   1a87c:	str	r4, [sp, #52]	; 0x34
   1a880:	str	r3, [sp, #56]	; 0x38
   1a884:	str	r3, [sp, #60]	; 0x3c
   1a888:	str	r3, [sp, #88]	; 0x58
   1a88c:	movw	r3, #64844	; 0xfd4c
   1a890:	movt	r3, #1
   1a894:	str	r4, [sp, #64]	; 0x40
   1a898:	str	r4, [sp, #68]	; 0x44
   1a89c:	str	r3, [sp, #72]	; 0x48
   1a8a0:	str	r4, [sp, #80]	; 0x50
   1a8a4:	str	r4, [sp, #84]	; 0x54
   1a8a8:	b	19144 <__assert_fail@plt+0x7fb8>
   1a8ac:	mov	fp, r9
   1a8b0:	b	19a60 <__assert_fail@plt+0x88d4>
   1a8b4:	ldr	r3, [sp, #48]	; 0x30
   1a8b8:	b	1a3d4 <__assert_fail@plt+0x9248>
   1a8bc:	mov	r2, r3
   1a8c0:	ldr	r3, [sp, #72]	; 0x48
   1a8c4:	cmp	r3, #0
   1a8c8:	moveq	r2, #0
   1a8cc:	andne	r2, r2, #1
   1a8d0:	cmp	r2, #0
   1a8d4:	beq	1a904 <__assert_fail@plt+0x9778>
   1a8d8:	mov	r2, r3
   1a8dc:	ldrb	r3, [r3]
   1a8e0:	cmp	r3, #0
   1a8e4:	beq	1a904 <__assert_fail@plt+0x9778>
   1a8e8:	cmp	sl, r4
   1a8ec:	bls	1a914 <__assert_fail@plt+0x9788>
   1a8f0:	strb	r3, [fp, r4]
   1a8f4:	add	r4, r4, #1
   1a8f8:	ldrb	r3, [r2, #1]!
   1a8fc:	cmp	r3, #0
   1a900:	bne	1a8e8 <__assert_fail@plt+0x975c>
   1a904:	cmp	sl, r4
   1a908:	movhi	r3, #0
   1a90c:	strbhi	r3, [fp, r4]
   1a910:	b	19a9c <__assert_fail@plt+0x8910>
   1a914:	ldrb	r3, [r2, #1]!
   1a918:	add	r4, r4, #1
   1a91c:	cmp	r3, #0
   1a920:	bne	1a8e8 <__assert_fail@plt+0x975c>
   1a924:	b	1a904 <__assert_fail@plt+0x9778>
   1a928:	mov	r0, r3
   1a92c:	ldr	r2, [sp, #60]	; 0x3c
   1a930:	b	1a4ac <__assert_fail@plt+0x9320>
   1a934:	mov	ip, #5
   1a938:	mov	r3, r8
   1a93c:	ldr	r1, [sp, #84]	; 0x54
   1a940:	str	ip, [sp]
   1a944:	ldr	r2, [sp, #180]	; 0xb4
   1a948:	ldr	ip, [sp, #188]	; 0xbc
   1a94c:	ldr	r0, [sp, #184]	; 0xb8
   1a950:	str	r2, [sp, #4]
   1a954:	ldr	r2, [sp, #28]
   1a958:	str	ip, [sp, #12]
   1a95c:	ldr	ip, [sp, #192]	; 0xc0
   1a960:	str	r0, [sp, #8]
   1a964:	mov	r0, fp
   1a968:	str	ip, [sp, #16]
   1a96c:	bl	19020 <__assert_fail@plt+0x7e94>
   1a970:	mov	r4, r0
   1a974:	b	19a9c <__assert_fail@plt+0x8910>
   1a978:	mov	r6, r3
   1a97c:	str	r3, [sp, #40]	; 0x28
   1a980:	b	19a0c <__assert_fail@plt+0x8880>
   1a984:	mov	r3, #2
   1a988:	str	r3, [sp, #176]	; 0xb0
   1a98c:	b	19a4c <__assert_fail@plt+0x88c0>
   1a990:	ldr	r2, [sp, #60]	; 0x3c
   1a994:	b	1a4ac <__assert_fail@plt+0x9320>
   1a998:	mov	r3, #5
   1a99c:	mov	fp, r9
   1a9a0:	str	r3, [sp, #176]	; 0xb0
   1a9a4:	b	19a60 <__assert_fail@plt+0x88d4>
   1a9a8:	mov	r1, #1
   1a9ac:	mov	r9, #0
   1a9b0:	mov	r3, r9
   1a9b4:	mov	r2, r9
   1a9b8:	str	r1, [sp, #32]
   1a9bc:	str	sl, [sp, #84]	; 0x54
   1a9c0:	b	197e8 <__assert_fail@plt+0x865c>
   1a9c4:	mov	r3, #0
   1a9c8:	mov	r2, #1
   1a9cc:	mov	r9, r3
   1a9d0:	mov	r4, r3
   1a9d4:	str	r2, [sp, #32]
   1a9d8:	strd	r2, [sp, #44]	; 0x2c
   1a9dc:	strd	r2, [sp, #56]	; 0x38
   1a9e0:	str	r3, [sp, #80]	; 0x50
   1a9e4:	str	r3, [sp, #84]	; 0x54
   1a9e8:	str	r3, [sp, #88]	; 0x58
   1a9ec:	movw	r3, #64864	; 0xfd60
   1a9f0:	movt	r3, #1
   1a9f4:	str	r2, [sp, #52]	; 0x34
   1a9f8:	str	r2, [sp, #64]	; 0x40
   1a9fc:	str	r2, [sp, #68]	; 0x44
   1aa00:	str	r3, [sp, #72]	; 0x48
   1aa04:	b	19144 <__assert_fail@plt+0x7fb8>
   1aa08:	bl	11168 <abort@plt>
   1aa0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1aa10:	mov	r4, r0
   1aa14:	mov	r5, r3
   1aa18:	strd	r6, [sp, #8]
   1aa1c:	movw	r7, #4388	; 0x1124
   1aa20:	movt	r7, #3
   1aa24:	strd	r8, [sp, #16]
   1aa28:	strd	sl, [sp, #24]
   1aa2c:	mov	sl, r1
   1aa30:	mov	fp, r2
   1aa34:	str	lr, [sp, #32]
   1aa38:	sub	sp, sp, #60	; 0x3c
   1aa3c:	bl	11090 <__errno_location@plt>
   1aa40:	mov	r8, r0
   1aa44:	cmn	r4, #-2147483647	; 0x80000001
   1aa48:	ldr	r6, [r7]
   1aa4c:	movne	r0, #0
   1aa50:	moveq	r0, #1
   1aa54:	ldr	r3, [r8]
   1aa58:	orrs	r0, r0, r4, lsr #31
   1aa5c:	str	r3, [sp, #28]
   1aa60:	bne	1abf0 <__assert_fail@plt+0x9a64>
   1aa64:	ldr	r3, [r7, #4]
   1aa68:	cmp	r3, r4
   1aa6c:	bgt	1aacc <__assert_fail@plt+0x9940>
   1aa70:	add	r1, r7, #8
   1aa74:	sub	r2, r4, r3
   1aa78:	str	r3, [sp, #52]	; 0x34
   1aa7c:	cmp	r6, r1
   1aa80:	add	r2, r2, #1
   1aa84:	beq	1abc8 <__assert_fail@plt+0x9a3c>
   1aa88:	mov	r1, #8
   1aa8c:	mov	r0, r6
   1aa90:	mvn	r3, #-2147483648	; 0x80000000
   1aa94:	str	r1, [sp]
   1aa98:	add	r1, sp, #52	; 0x34
   1aa9c:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1aaa0:	mov	r6, r0
   1aaa4:	str	r0, [r7]
   1aaa8:	ldr	r0, [r7, #4]
   1aaac:	mov	r1, #0
   1aab0:	ldr	r2, [sp, #52]	; 0x34
   1aab4:	sub	r2, r2, r0
   1aab8:	add	r0, r6, r0, lsl #3
   1aabc:	lsl	r2, r2, #3
   1aac0:	bl	110b4 <memset@plt>
   1aac4:	ldr	r3, [sp, #52]	; 0x34
   1aac8:	str	r3, [r7, #4]
   1aacc:	ldr	r1, [r5, #4]
   1aad0:	add	r0, r6, r4, lsl #3
   1aad4:	add	ip, r5, #8
   1aad8:	mov	r3, fp
   1aadc:	mov	r2, sl
   1aae0:	ldr	r7, [r0, #4]
   1aae4:	str	r0, [sp, #36]	; 0x24
   1aae8:	str	ip, [sp, #40]	; 0x28
   1aaec:	orr	r0, r1, #1
   1aaf0:	ldr	r9, [r6, r4, lsl #3]
   1aaf4:	str	ip, [sp, #8]
   1aaf8:	ldr	lr, [r5, #44]	; 0x2c
   1aafc:	str	r0, [sp, #4]
   1ab00:	ldr	ip, [r5]
   1ab04:	mov	r1, r9
   1ab08:	str	ip, [sp, #32]
   1ab0c:	ldr	ip, [r5, #40]	; 0x28
   1ab10:	str	ip, [sp, #12]
   1ab14:	ldr	ip, [sp, #32]
   1ab18:	str	lr, [sp, #16]
   1ab1c:	str	r0, [sp, #44]	; 0x2c
   1ab20:	mov	r0, r7
   1ab24:	str	ip, [sp]
   1ab28:	bl	19020 <__assert_fail@plt+0x7e94>
   1ab2c:	cmp	r9, r0
   1ab30:	bhi	1aba0 <__assert_fail@plt+0x9a14>
   1ab34:	add	r9, r0, #1
   1ab38:	movw	r3, #4540	; 0x11bc
   1ab3c:	movt	r3, #3
   1ab40:	cmp	r7, r3
   1ab44:	str	r9, [r6, r4, lsl #3]
   1ab48:	beq	1ab54 <__assert_fail@plt+0x99c8>
   1ab4c:	mov	r0, r7
   1ab50:	bl	18ccc <__assert_fail@plt+0x7b40>
   1ab54:	mov	r0, r9
   1ab58:	bl	1d094 <__assert_fail@plt+0xbf08>
   1ab5c:	ldr	ip, [r5]
   1ab60:	mov	r3, fp
   1ab64:	mov	r2, sl
   1ab68:	mov	r1, r9
   1ab6c:	mov	r7, r0
   1ab70:	ldr	lr, [sp, #36]	; 0x24
   1ab74:	ldr	r4, [r5, #40]	; 0x28
   1ab78:	str	r0, [lr, #4]
   1ab7c:	ldr	lr, [r5, #44]	; 0x2c
   1ab80:	str	ip, [sp]
   1ab84:	ldr	ip, [sp, #44]	; 0x2c
   1ab88:	str	ip, [sp, #4]
   1ab8c:	ldr	ip, [sp, #40]	; 0x28
   1ab90:	str	r4, [sp, #12]
   1ab94:	str	lr, [sp, #16]
   1ab98:	str	ip, [sp, #8]
   1ab9c:	bl	19020 <__assert_fail@plt+0x7e94>
   1aba0:	ldr	r3, [sp, #28]
   1aba4:	mov	r0, r7
   1aba8:	str	r3, [r8]
   1abac:	add	sp, sp, #60	; 0x3c
   1abb0:	ldrd	r4, [sp]
   1abb4:	ldrd	r6, [sp, #8]
   1abb8:	ldrd	r8, [sp, #16]
   1abbc:	ldrd	sl, [sp, #24]
   1abc0:	add	sp, sp, #32
   1abc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1abc8:	mov	r1, #8
   1abcc:	mvn	r3, #-2147483648	; 0x80000000
   1abd0:	str	r1, [sp]
   1abd4:	add	r1, sp, #52	; 0x34
   1abd8:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1abdc:	ldrd	r2, [r7, #8]
   1abe0:	mov	r6, r0
   1abe4:	str	r0, [r7]
   1abe8:	strd	r2, [r0]
   1abec:	b	1aaa8 <__assert_fail@plt+0x991c>
   1abf0:	bl	11168 <abort@plt>
   1abf4:	strd	r4, [sp, #-16]!
   1abf8:	mov	r5, r0
   1abfc:	str	r6, [sp, #8]
   1ac00:	str	lr, [sp, #12]
   1ac04:	bl	11090 <__errno_location@plt>
   1ac08:	mov	r4, r0
   1ac0c:	cmp	r5, #0
   1ac10:	ldr	r0, [pc, #32]	; 1ac38 <__assert_fail@plt+0x9aac>
   1ac14:	mov	r1, #48	; 0x30
   1ac18:	movne	r0, r5
   1ac1c:	ldr	r6, [r4]
   1ac20:	bl	1d4d8 <__assert_fail@plt+0xc34c>
   1ac24:	str	r6, [r4]
   1ac28:	ldrd	r4, [sp]
   1ac2c:	ldr	r6, [sp, #8]
   1ac30:	add	sp, sp, #12
   1ac34:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac38:			; <UNDEFINED> instruction: 0x000312bc
   1ac3c:	ldr	r3, [pc, #12]	; 1ac50 <__assert_fail@plt+0x9ac4>
   1ac40:	cmp	r0, #0
   1ac44:	moveq	r0, r3
   1ac48:	ldr	r0, [r0]
   1ac4c:	bx	lr
   1ac50:			; <UNDEFINED> instruction: 0x000312bc
   1ac54:	ldr	r3, [pc, #12]	; 1ac68 <__assert_fail@plt+0x9adc>
   1ac58:	cmp	r0, #0
   1ac5c:	moveq	r0, r3
   1ac60:	str	r1, [r0]
   1ac64:	bx	lr
   1ac68:			; <UNDEFINED> instruction: 0x000312bc
   1ac6c:	ldr	r3, [pc, #52]	; 1aca8 <__assert_fail@plt+0x9b1c>
   1ac70:	cmp	r0, #0
   1ac74:	push	{lr}		; (str lr, [sp, #-4]!)
   1ac78:	lsr	lr, r1, #5
   1ac7c:	and	r1, r1, #31
   1ac80:	moveq	r0, r3
   1ac84:	add	r3, r0, #8
   1ac88:	ldr	ip, [r3, lr, lsl #2]
   1ac8c:	lsr	r0, ip, r1
   1ac90:	eor	r2, r2, r0
   1ac94:	and	r0, r0, #1
   1ac98:	and	r2, r2, #1
   1ac9c:	eor	r1, ip, r2, lsl r1
   1aca0:	str	r1, [r3, lr, lsl #2]
   1aca4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aca8:			; <UNDEFINED> instruction: 0x000312bc
   1acac:	ldr	r3, [pc, #16]	; 1acc4 <__assert_fail@plt+0x9b38>
   1acb0:	cmp	r0, #0
   1acb4:	movne	r3, r0
   1acb8:	ldr	r0, [r3, #4]
   1acbc:	str	r1, [r3, #4]
   1acc0:	bx	lr
   1acc4:			; <UNDEFINED> instruction: 0x000312bc
   1acc8:	ldr	r3, [pc, #48]	; 1ad00 <__assert_fail@plt+0x9b74>
   1accc:	cmp	r0, #0
   1acd0:	mov	ip, #10
   1acd4:	moveq	r0, r3
   1acd8:	cmp	r2, #0
   1acdc:	cmpne	r1, #0
   1ace0:	str	ip, [r0]
   1ace4:	beq	1acf4 <__assert_fail@plt+0x9b68>
   1ace8:	str	r1, [r0, #40]	; 0x28
   1acec:	str	r2, [r0, #44]	; 0x2c
   1acf0:	bx	lr
   1acf4:	str	r4, [sp, #-8]!
   1acf8:	str	lr, [sp, #4]
   1acfc:	bl	11168 <abort@plt>
   1ad00:			; <UNDEFINED> instruction: 0x000312bc
   1ad04:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ad08:	strd	r6, [sp, #8]
   1ad0c:	mov	r7, r0
   1ad10:	mov	r6, r1
   1ad14:	strd	r8, [sp, #16]
   1ad18:	mov	r8, r2
   1ad1c:	mov	r9, r3
   1ad20:	str	lr, [sp, #24]
   1ad24:	sub	sp, sp, #28
   1ad28:	ldr	r4, [sp, #56]	; 0x38
   1ad2c:	ldr	ip, [pc, #104]	; 1ad9c <__assert_fail@plt+0x9c10>
   1ad30:	cmp	r4, #0
   1ad34:	moveq	r4, ip
   1ad38:	bl	11090 <__errno_location@plt>
   1ad3c:	ldr	ip, [r4, #44]	; 0x2c
   1ad40:	mov	r5, r0
   1ad44:	mov	r1, r6
   1ad48:	add	lr, r4, #8
   1ad4c:	mov	r3, r9
   1ad50:	ldr	r6, [r5]
   1ad54:	mov	r2, r8
   1ad58:	mov	r0, r7
   1ad5c:	str	ip, [sp, #16]
   1ad60:	ldr	ip, [r4, #40]	; 0x28
   1ad64:	str	lr, [sp, #8]
   1ad68:	str	ip, [sp, #12]
   1ad6c:	ldr	ip, [r4, #4]
   1ad70:	str	ip, [sp, #4]
   1ad74:	ldr	ip, [r4]
   1ad78:	str	ip, [sp]
   1ad7c:	bl	19020 <__assert_fail@plt+0x7e94>
   1ad80:	str	r6, [r5]
   1ad84:	add	sp, sp, #28
   1ad88:	ldrd	r4, [sp]
   1ad8c:	ldrd	r6, [sp, #8]
   1ad90:	ldrd	r8, [sp, #16]
   1ad94:	add	sp, sp, #24
   1ad98:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad9c:			; <UNDEFINED> instruction: 0x000312bc
   1ada0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ada4:	cmp	r2, #0
   1ada8:	ldr	r4, [pc, #192]	; 1ae70 <__assert_fail@plt+0x9ce4>
   1adac:	movne	r4, r2
   1adb0:	strd	r6, [sp, #8]
   1adb4:	strd	r8, [sp, #16]
   1adb8:	mov	r9, r1
   1adbc:	mov	r8, r0
   1adc0:	strd	sl, [sp, #24]
   1adc4:	str	lr, [sp, #32]
   1adc8:	sub	sp, sp, #36	; 0x24
   1adcc:	bl	11090 <__errno_location@plt>
   1add0:	ldr	r5, [r4, #4]
   1add4:	mov	r6, r0
   1add8:	add	r7, r4, #8
   1addc:	mov	r1, #0
   1ade0:	mov	r3, r9
   1ade4:	ldr	ip, [r4, #44]	; 0x2c
   1ade8:	mov	r2, r8
   1adec:	mov	r0, r1
   1adf0:	ldr	sl, [r6]
   1adf4:	orr	r5, r5, #1
   1adf8:	str	ip, [sp, #16]
   1adfc:	ldr	ip, [r4, #40]	; 0x28
   1ae00:	stmib	sp, {r5, r7, ip}
   1ae04:	ldr	ip, [r4]
   1ae08:	str	ip, [sp]
   1ae0c:	bl	19020 <__assert_fail@plt+0x7e94>
   1ae10:	add	r1, r0, #1
   1ae14:	mov	r0, r1
   1ae18:	str	r1, [sp, #28]
   1ae1c:	bl	1d094 <__assert_fail@plt+0xbf08>
   1ae20:	ldr	ip, [r4, #44]	; 0x2c
   1ae24:	mov	fp, r0
   1ae28:	mov	r3, r9
   1ae2c:	mov	r2, r8
   1ae30:	ldr	r1, [sp, #28]
   1ae34:	str	ip, [sp, #16]
   1ae38:	ldr	ip, [r4, #40]	; 0x28
   1ae3c:	stmib	sp, {r5, r7, ip}
   1ae40:	ldr	ip, [r4]
   1ae44:	str	ip, [sp]
   1ae48:	bl	19020 <__assert_fail@plt+0x7e94>
   1ae4c:	mov	r0, fp
   1ae50:	str	sl, [r6]
   1ae54:	add	sp, sp, #36	; 0x24
   1ae58:	ldrd	r4, [sp]
   1ae5c:	ldrd	r6, [sp, #8]
   1ae60:	ldrd	r8, [sp, #16]
   1ae64:	ldrd	sl, [sp, #24]
   1ae68:	add	sp, sp, #32
   1ae6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae70:			; <UNDEFINED> instruction: 0x000312bc
   1ae74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ae78:	cmp	r3, #0
   1ae7c:	ldr	r4, [pc, #220]	; 1af60 <__assert_fail@plt+0x9dd4>
   1ae80:	movne	r4, r3
   1ae84:	strd	r6, [sp, #8]
   1ae88:	mov	r6, r2
   1ae8c:	strd	r8, [sp, #16]
   1ae90:	mov	r9, r0
   1ae94:	strd	sl, [sp, #24]
   1ae98:	mov	sl, r1
   1ae9c:	str	lr, [sp, #32]
   1aea0:	sub	sp, sp, #44	; 0x2c
   1aea4:	bl	11090 <__errno_location@plt>
   1aea8:	ldr	r5, [r4, #4]
   1aeac:	mov	r7, r0
   1aeb0:	mov	r1, #0
   1aeb4:	add	r8, r4, #8
   1aeb8:	mov	r3, sl
   1aebc:	ldr	ip, [r4, #44]	; 0x2c
   1aec0:	mov	r2, r9
   1aec4:	mov	r0, r1
   1aec8:	ldr	lr, [r7]
   1aecc:	cmp	r6, r1
   1aed0:	orreq	r5, r5, #1
   1aed4:	str	ip, [sp, #16]
   1aed8:	ldr	ip, [r4, #40]	; 0x28
   1aedc:	stmib	sp, {r5, r8, ip}
   1aee0:	ldr	ip, [r4]
   1aee4:	str	lr, [sp, #28]
   1aee8:	str	ip, [sp]
   1aeec:	bl	19020 <__assert_fail@plt+0x7e94>
   1aef0:	add	r1, r0, #1
   1aef4:	mov	fp, r0
   1aef8:	mov	r0, r1
   1aefc:	str	r1, [sp, #36]	; 0x24
   1af00:	bl	1d094 <__assert_fail@plt+0xbf08>
   1af04:	ldr	ip, [r4, #44]	; 0x2c
   1af08:	mov	r3, sl
   1af0c:	mov	r2, r9
   1af10:	ldr	r1, [sp, #36]	; 0x24
   1af14:	str	ip, [sp, #16]
   1af18:	ldr	ip, [r4, #40]	; 0x28
   1af1c:	str	r0, [sp, #32]
   1af20:	stmib	sp, {r5, r8, ip}
   1af24:	ldr	ip, [r4]
   1af28:	str	ip, [sp]
   1af2c:	bl	19020 <__assert_fail@plt+0x7e94>
   1af30:	ldr	lr, [sp, #28]
   1af34:	cmp	r6, #0
   1af38:	ldr	r0, [sp, #32]
   1af3c:	str	lr, [r7]
   1af40:	strne	fp, [r6]
   1af44:	add	sp, sp, #44	; 0x2c
   1af48:	ldrd	r4, [sp]
   1af4c:	ldrd	r6, [sp, #8]
   1af50:	ldrd	r8, [sp, #16]
   1af54:	ldrd	sl, [sp, #24]
   1af58:	add	sp, sp, #32
   1af5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1af60:			; <UNDEFINED> instruction: 0x000312bc
   1af64:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1af68:	movw	r5, #4388	; 0x1124
   1af6c:	movt	r5, #3
   1af70:	ldr	r3, [r5, #4]
   1af74:	strd	r6, [sp, #8]
   1af78:	str	r8, [sp, #16]
   1af7c:	str	lr, [sp, #20]
   1af80:	ldr	r7, [r5]
   1af84:	cmp	r3, #1
   1af88:	ble	1afac <__assert_fail@plt+0x9e20>
   1af8c:	mov	r4, #1
   1af90:	add	r6, r7, #4
   1af94:	ldr	r0, [r6, r4, lsl #3]
   1af98:	add	r4, r4, #1
   1af9c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1afa0:	ldr	r3, [r5, #4]
   1afa4:	cmp	r3, r4
   1afa8:	bgt	1af94 <__assert_fail@plt+0x9e08>
   1afac:	ldr	r0, [r7, #4]
   1afb0:	movw	r4, #4540	; 0x11bc
   1afb4:	movt	r4, #3
   1afb8:	cmp	r0, r4
   1afbc:	beq	1afd0 <__assert_fail@plt+0x9e44>
   1afc0:	bl	18ccc <__assert_fail@plt+0x7b40>
   1afc4:	mov	r3, #256	; 0x100
   1afc8:	str	r3, [r5, #8]
   1afcc:	str	r4, [r5, #12]
   1afd0:	ldr	r4, [pc, #44]	; 1b004 <__assert_fail@plt+0x9e78>
   1afd4:	cmp	r7, r4
   1afd8:	beq	1afe8 <__assert_fail@plt+0x9e5c>
   1afdc:	mov	r0, r7
   1afe0:	bl	18ccc <__assert_fail@plt+0x7b40>
   1afe4:	str	r4, [r5]
   1afe8:	mov	r3, #1
   1afec:	ldrd	r6, [sp, #8]
   1aff0:	str	r3, [r5, #4]
   1aff4:	ldrd	r4, [sp]
   1aff8:	ldr	r8, [sp, #16]
   1affc:	add	sp, sp, #20
   1b000:	pop	{pc}		; (ldr pc, [sp], #4)
   1b004:	andeq	r1, r3, ip, lsr #2
   1b008:	ldr	r3, [pc, #4]	; 1b014 <__assert_fail@plt+0x9e88>
   1b00c:	mvn	r2, #0
   1b010:	b	1aa0c <__assert_fail@plt+0x9880>
   1b014:			; <UNDEFINED> instruction: 0x000312bc
   1b018:	ldr	r3, [pc]	; 1b020 <__assert_fail@plt+0x9e94>
   1b01c:	b	1aa0c <__assert_fail@plt+0x9880>
   1b020:			; <UNDEFINED> instruction: 0x000312bc
   1b024:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b028:	movw	r4, #4388	; 0x1124
   1b02c:	movt	r4, #3
   1b030:	strd	r6, [sp, #8]
   1b034:	strd	r8, [sp, #16]
   1b038:	strd	sl, [sp, #24]
   1b03c:	mov	sl, r0
   1b040:	str	lr, [sp, #32]
   1b044:	sub	sp, sp, #44	; 0x2c
   1b048:	bl	11090 <__errno_location@plt>
   1b04c:	ldr	r3, [r0]
   1b050:	mov	r8, r0
   1b054:	ldr	r2, [r4, #4]
   1b058:	ldr	r5, [r4]
   1b05c:	str	r3, [sp, #28]
   1b060:	cmp	r2, #0
   1b064:	bgt	1b0c0 <__assert_fail@plt+0x9f34>
   1b068:	add	r3, r4, #8
   1b06c:	str	r2, [sp, #36]	; 0x24
   1b070:	rsb	r2, r2, #1
   1b074:	cmp	r5, r3
   1b078:	beq	1b18c <__assert_fail@plt+0xa000>
   1b07c:	mov	r1, #8
   1b080:	mov	r0, r5
   1b084:	mvn	r3, #-2147483648	; 0x80000000
   1b088:	str	r1, [sp]
   1b08c:	add	r1, sp, #36	; 0x24
   1b090:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b094:	mov	r5, r0
   1b098:	str	r0, [r4]
   1b09c:	ldr	r0, [r4, #4]
   1b0a0:	mov	r1, #0
   1b0a4:	ldr	r2, [sp, #36]	; 0x24
   1b0a8:	sub	r2, r2, r0
   1b0ac:	add	r0, r5, r0, lsl #3
   1b0b0:	lsl	r2, r2, #3
   1b0b4:	bl	110b4 <memset@plt>
   1b0b8:	ldr	r3, [sp, #36]	; 0x24
   1b0bc:	str	r3, [r4, #4]
   1b0c0:	movw	r4, #4540	; 0x11bc
   1b0c4:	movt	r4, #3
   1b0c8:	ldr	r9, [r5]
   1b0cc:	add	fp, r4, #264	; 0x108
   1b0d0:	mvn	r3, #0
   1b0d4:	ldr	r7, [r4, #260]	; 0x104
   1b0d8:	mov	r2, sl
   1b0dc:	ldr	r6, [r5, #4]
   1b0e0:	str	fp, [sp, #8]
   1b0e4:	mov	r1, r9
   1b0e8:	ldr	ip, [r4, #256]	; 0x100
   1b0ec:	orr	r7, r7, #1
   1b0f0:	ldr	lr, [r4, #300]	; 0x12c
   1b0f4:	mov	r0, r6
   1b0f8:	str	ip, [sp]
   1b0fc:	str	r7, [sp, #4]
   1b100:	str	lr, [sp, #16]
   1b104:	ldr	ip, [r4, #296]	; 0x128
   1b108:	str	ip, [sp, #12]
   1b10c:	bl	19020 <__assert_fail@plt+0x7e94>
   1b110:	cmp	r9, r0
   1b114:	bhi	1b164 <__assert_fail@plt+0x9fd8>
   1b118:	add	r9, r0, #1
   1b11c:	cmp	r6, r4
   1b120:	str	r9, [r5]
   1b124:	beq	1b130 <__assert_fail@plt+0x9fa4>
   1b128:	mov	r0, r6
   1b12c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1b130:	mov	r0, r9
   1b134:	bl	1d094 <__assert_fail@plt+0xbf08>
   1b138:	ldr	r3, [r4, #256]	; 0x100
   1b13c:	mov	r2, sl
   1b140:	mov	r1, r9
   1b144:	mov	r6, r0
   1b148:	ldr	lr, [r4, #296]	; 0x128
   1b14c:	ldr	ip, [r4, #300]	; 0x12c
   1b150:	str	r0, [r5, #4]
   1b154:	stm	sp, {r3, r7, fp, lr}
   1b158:	mvn	r3, #0
   1b15c:	str	ip, [sp, #16]
   1b160:	bl	19020 <__assert_fail@plt+0x7e94>
   1b164:	ldr	r3, [sp, #28]
   1b168:	mov	r0, r6
   1b16c:	str	r3, [r8]
   1b170:	add	sp, sp, #44	; 0x2c
   1b174:	ldrd	r4, [sp]
   1b178:	ldrd	r6, [sp, #8]
   1b17c:	ldrd	r8, [sp, #16]
   1b180:	ldrd	sl, [sp, #24]
   1b184:	add	sp, sp, #32
   1b188:	pop	{pc}		; (ldr pc, [sp], #4)
   1b18c:	mov	r0, #8
   1b190:	mvn	r3, #-2147483648	; 0x80000000
   1b194:	add	r1, sp, #36	; 0x24
   1b198:	str	r0, [sp]
   1b19c:	mov	r0, #0
   1b1a0:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b1a4:	ldrd	r2, [r4, #8]
   1b1a8:	mov	r5, r0
   1b1ac:	str	r0, [r4]
   1b1b0:	strd	r2, [r0]
   1b1b4:	b	1b09c <__assert_fail@plt+0x9f10>
   1b1b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b1bc:	movw	r4, #4388	; 0x1124
   1b1c0:	movt	r4, #3
   1b1c4:	strd	r6, [sp, #8]
   1b1c8:	strd	r8, [sp, #16]
   1b1cc:	strd	sl, [sp, #24]
   1b1d0:	mov	sl, r0
   1b1d4:	mov	fp, r1
   1b1d8:	str	lr, [sp, #32]
   1b1dc:	sub	sp, sp, #44	; 0x2c
   1b1e0:	bl	11090 <__errno_location@plt>
   1b1e4:	ldr	r3, [r0]
   1b1e8:	mov	r8, r0
   1b1ec:	ldr	r2, [r4, #4]
   1b1f0:	ldr	r5, [r4]
   1b1f4:	str	r3, [sp, #28]
   1b1f8:	cmp	r2, #0
   1b1fc:	bgt	1b258 <__assert_fail@plt+0xa0cc>
   1b200:	add	r3, r4, #8
   1b204:	str	r2, [sp, #36]	; 0x24
   1b208:	rsb	r2, r2, #1
   1b20c:	cmp	r5, r3
   1b210:	beq	1b334 <__assert_fail@plt+0xa1a8>
   1b214:	mov	r1, #8
   1b218:	mov	r0, r5
   1b21c:	mvn	r3, #-2147483648	; 0x80000000
   1b220:	str	r1, [sp]
   1b224:	add	r1, sp, #36	; 0x24
   1b228:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b22c:	mov	r5, r0
   1b230:	str	r0, [r4]
   1b234:	ldr	r0, [r4, #4]
   1b238:	mov	r1, #0
   1b23c:	ldr	r2, [sp, #36]	; 0x24
   1b240:	sub	r2, r2, r0
   1b244:	add	r0, r5, r0, lsl #3
   1b248:	lsl	r2, r2, #3
   1b24c:	bl	110b4 <memset@plt>
   1b250:	ldr	r3, [sp, #36]	; 0x24
   1b254:	str	r3, [r4, #4]
   1b258:	movw	r4, #4540	; 0x11bc
   1b25c:	movt	r4, #3
   1b260:	ldr	r9, [r5]
   1b264:	add	r0, r4, #264	; 0x108
   1b268:	mov	r3, fp
   1b26c:	ldr	r7, [r4, #260]	; 0x104
   1b270:	mov	r2, sl
   1b274:	ldr	r6, [r5, #4]
   1b278:	str	r0, [sp, #8]
   1b27c:	mov	r1, r9
   1b280:	ldr	ip, [r4, #256]	; 0x100
   1b284:	orr	r7, r7, #1
   1b288:	ldr	lr, [r4, #300]	; 0x12c
   1b28c:	mov	r0, r6
   1b290:	str	ip, [sp]
   1b294:	str	r7, [sp, #4]
   1b298:	str	lr, [sp, #16]
   1b29c:	ldr	ip, [r4, #296]	; 0x128
   1b2a0:	str	ip, [sp, #12]
   1b2a4:	bl	19020 <__assert_fail@plt+0x7e94>
   1b2a8:	cmp	r9, r0
   1b2ac:	bhi	1b30c <__assert_fail@plt+0xa180>
   1b2b0:	add	r9, r0, #1
   1b2b4:	cmp	r6, r4
   1b2b8:	str	r9, [r5]
   1b2bc:	beq	1b2c8 <__assert_fail@plt+0xa13c>
   1b2c0:	mov	r0, r6
   1b2c4:	bl	18ccc <__assert_fail@plt+0x7b40>
   1b2c8:	mov	r0, r9
   1b2cc:	bl	1d094 <__assert_fail@plt+0xbf08>
   1b2d0:	ldr	ip, [r4, #256]	; 0x100
   1b2d4:	mov	r1, r9
   1b2d8:	mov	r3, fp
   1b2dc:	mov	r2, sl
   1b2e0:	mov	r6, r0
   1b2e4:	ldr	r9, [r4, #296]	; 0x128
   1b2e8:	ldr	lr, [r4, #300]	; 0x12c
   1b2ec:	str	r0, [r5, #4]
   1b2f0:	str	ip, [sp]
   1b2f4:	ldr	ip, [pc, #100]	; 1b360 <__assert_fail@plt+0xa1d4>
   1b2f8:	str	r7, [sp, #4]
   1b2fc:	str	ip, [sp, #8]
   1b300:	str	r9, [sp, #12]
   1b304:	str	lr, [sp, #16]
   1b308:	bl	19020 <__assert_fail@plt+0x7e94>
   1b30c:	ldr	r3, [sp, #28]
   1b310:	mov	r0, r6
   1b314:	str	r3, [r8]
   1b318:	add	sp, sp, #44	; 0x2c
   1b31c:	ldrd	r4, [sp]
   1b320:	ldrd	r6, [sp, #8]
   1b324:	ldrd	r8, [sp, #16]
   1b328:	ldrd	sl, [sp, #24]
   1b32c:	add	sp, sp, #32
   1b330:	pop	{pc}		; (ldr pc, [sp], #4)
   1b334:	mov	r0, #8
   1b338:	mvn	r3, #-2147483648	; 0x80000000
   1b33c:	add	r1, sp, #36	; 0x24
   1b340:	str	r0, [sp]
   1b344:	mov	r0, #0
   1b348:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b34c:	ldrd	r2, [r4, #8]
   1b350:	mov	r5, r0
   1b354:	str	r0, [r4]
   1b358:	strd	r2, [r0]
   1b35c:	b	1b234 <__assert_fail@plt+0xa0a8>
   1b360:	andeq	r1, r3, r4, asr #5
   1b364:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b368:	mov	r4, #0
   1b36c:	mov	r5, #0
   1b370:	strd	r6, [sp, #8]
   1b374:	cmp	r1, #10
   1b378:	str	lr, [sp, #16]
   1b37c:	sub	sp, sp, #100	; 0x64
   1b380:	strd	r4, [sp, #48]	; 0x30
   1b384:	beq	1b3cc <__assert_fail@plt+0xa240>
   1b388:	mov	r3, sp
   1b38c:	strd	r4, [sp, #8]
   1b390:	str	r1, [sp, #48]	; 0x30
   1b394:	mov	r1, r2
   1b398:	mvn	r2, #0
   1b39c:	ldrd	r6, [sp, #48]	; 0x30
   1b3a0:	strd	r6, [sp]
   1b3a4:	strd	r4, [sp, #16]
   1b3a8:	strd	r4, [sp, #24]
   1b3ac:	strd	r4, [sp, #32]
   1b3b0:	strd	r4, [sp, #40]	; 0x28
   1b3b4:	bl	1aa0c <__assert_fail@plt+0x9880>
   1b3b8:	add	sp, sp, #100	; 0x64
   1b3bc:	ldrd	r4, [sp]
   1b3c0:	ldrd	r6, [sp, #8]
   1b3c4:	add	sp, sp, #16
   1b3c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3cc:	bl	11168 <abort@plt>
   1b3d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b3d4:	mov	r4, #0
   1b3d8:	mov	r5, #0
   1b3dc:	strd	r6, [sp, #8]
   1b3e0:	cmp	r1, #10
   1b3e4:	str	lr, [sp, #16]
   1b3e8:	sub	sp, sp, #100	; 0x64
   1b3ec:	strd	r4, [sp, #48]	; 0x30
   1b3f0:	beq	1b43c <__assert_fail@plt+0xa2b0>
   1b3f4:	mov	ip, r2
   1b3f8:	mov	r2, r3
   1b3fc:	strd	r4, [sp, #8]
   1b400:	str	r1, [sp, #48]	; 0x30
   1b404:	mov	r3, sp
   1b408:	mov	r1, ip
   1b40c:	ldrd	r6, [sp, #48]	; 0x30
   1b410:	strd	r6, [sp]
   1b414:	strd	r4, [sp, #16]
   1b418:	strd	r4, [sp, #24]
   1b41c:	strd	r4, [sp, #32]
   1b420:	strd	r4, [sp, #40]	; 0x28
   1b424:	bl	1aa0c <__assert_fail@plt+0x9880>
   1b428:	add	sp, sp, #100	; 0x64
   1b42c:	ldrd	r4, [sp]
   1b430:	ldrd	r6, [sp, #8]
   1b434:	add	sp, sp, #16
   1b438:	pop	{pc}		; (ldr pc, [sp], #4)
   1b43c:	bl	11168 <abort@plt>
   1b440:	mov	r2, #0
   1b444:	mov	r3, #0
   1b448:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b44c:	strd	r6, [sp, #8]
   1b450:	cmp	r0, #10
   1b454:	strd	r8, [sp, #16]
   1b458:	strd	sl, [sp, #24]
   1b45c:	str	lr, [sp, #32]
   1b460:	sub	sp, sp, #124	; 0x7c
   1b464:	strd	r2, [sp, #72]	; 0x48
   1b468:	strd	r2, [sp, #80]	; 0x50
   1b46c:	strd	r2, [sp, #88]	; 0x58
   1b470:	strd	r2, [sp, #96]	; 0x60
   1b474:	strd	r2, [sp, #104]	; 0x68
   1b478:	strd	r2, [sp, #112]	; 0x70
   1b47c:	beq	1b620 <__assert_fail@plt+0xa494>
   1b480:	mov	r6, r1
   1b484:	movw	r4, #4388	; 0x1124
   1b488:	movt	r4, #3
   1b48c:	str	r0, [sp, #72]	; 0x48
   1b490:	ldrd	r0, [sp, #72]	; 0x48
   1b494:	strd	r0, [sp, #24]
   1b498:	strd	r2, [sp, #32]
   1b49c:	strd	r2, [sp, #40]	; 0x28
   1b4a0:	strd	r2, [sp, #48]	; 0x30
   1b4a4:	strd	r2, [sp, #56]	; 0x38
   1b4a8:	strd	r2, [sp, #64]	; 0x40
   1b4ac:	bl	11090 <__errno_location@plt>
   1b4b0:	mov	r8, r0
   1b4b4:	ldr	r5, [r4]
   1b4b8:	ldr	r2, [r4, #4]
   1b4bc:	ldr	r9, [r0]
   1b4c0:	cmp	r2, #0
   1b4c4:	bgt	1b520 <__assert_fail@plt+0xa394>
   1b4c8:	add	r3, r4, #8
   1b4cc:	str	r2, [sp, #72]	; 0x48
   1b4d0:	rsb	r2, r2, #1
   1b4d4:	cmp	r5, r3
   1b4d8:	beq	1b5f4 <__assert_fail@plt+0xa468>
   1b4dc:	mov	r3, #8
   1b4e0:	mov	r0, r5
   1b4e4:	add	r1, sp, #72	; 0x48
   1b4e8:	str	r3, [sp]
   1b4ec:	mvn	r3, #-2147483648	; 0x80000000
   1b4f0:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b4f4:	mov	r5, r0
   1b4f8:	str	r0, [r4]
   1b4fc:	ldr	r0, [r4, #4]
   1b500:	mov	r1, #0
   1b504:	ldr	r2, [sp, #72]	; 0x48
   1b508:	sub	r2, r2, r0
   1b50c:	add	r0, r5, r0, lsl #3
   1b510:	lsl	r2, r2, #3
   1b514:	bl	110b4 <memset@plt>
   1b518:	ldr	r3, [sp, #72]	; 0x48
   1b51c:	str	r3, [r4, #4]
   1b520:	ldr	sl, [r5]
   1b524:	add	r0, sp, #32
   1b528:	mvn	r3, #0
   1b52c:	mov	r2, r6
   1b530:	ldr	r7, [sp, #28]
   1b534:	ldr	r4, [r5, #4]
   1b538:	mov	r1, sl
   1b53c:	str	r0, [sp, #8]
   1b540:	ldr	lr, [sp, #24]
   1b544:	orr	r7, r7, #1
   1b548:	ldr	ip, [sp, #64]	; 0x40
   1b54c:	mov	r0, r4
   1b550:	ldr	fp, [sp, #68]	; 0x44
   1b554:	str	lr, [sp]
   1b558:	str	r7, [sp, #4]
   1b55c:	str	ip, [sp, #12]
   1b560:	str	fp, [sp, #16]
   1b564:	bl	19020 <__assert_fail@plt+0x7e94>
   1b568:	cmp	sl, r0
   1b56c:	bhi	1b5d0 <__assert_fail@plt+0xa444>
   1b570:	add	sl, r0, #1
   1b574:	movw	r3, #4540	; 0x11bc
   1b578:	movt	r3, #3
   1b57c:	cmp	r4, r3
   1b580:	str	sl, [r5]
   1b584:	beq	1b590 <__assert_fail@plt+0xa404>
   1b588:	mov	r0, r4
   1b58c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1b590:	mov	r0, sl
   1b594:	bl	1d094 <__assert_fail@plt+0xbf08>
   1b598:	ldr	r3, [sp, #24]
   1b59c:	mov	r2, r6
   1b5a0:	mov	r1, sl
   1b5a4:	mov	r4, r0
   1b5a8:	ldr	lr, [sp, #64]	; 0x40
   1b5ac:	ldr	ip, [sp, #68]	; 0x44
   1b5b0:	str	r0, [r5, #4]
   1b5b4:	add	r5, sp, #32
   1b5b8:	stm	sp, {r3, r7}
   1b5bc:	mvn	r3, #0
   1b5c0:	str	r5, [sp, #8]
   1b5c4:	str	lr, [sp, #12]
   1b5c8:	str	ip, [sp, #16]
   1b5cc:	bl	19020 <__assert_fail@plt+0x7e94>
   1b5d0:	mov	r0, r4
   1b5d4:	str	r9, [r8]
   1b5d8:	add	sp, sp, #124	; 0x7c
   1b5dc:	ldrd	r4, [sp]
   1b5e0:	ldrd	r6, [sp, #8]
   1b5e4:	ldrd	r8, [sp, #16]
   1b5e8:	ldrd	sl, [sp, #24]
   1b5ec:	add	sp, sp, #32
   1b5f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5f4:	mov	r0, #8
   1b5f8:	mvn	r3, #-2147483648	; 0x80000000
   1b5fc:	add	r1, sp, #72	; 0x48
   1b600:	str	r0, [sp]
   1b604:	mov	r0, #0
   1b608:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b60c:	ldrd	r2, [r4, #8]
   1b610:	mov	r5, r0
   1b614:	str	r0, [r4]
   1b618:	strd	r2, [r0]
   1b61c:	b	1b4fc <__assert_fail@plt+0xa370>
   1b620:	bl	11168 <abort@plt>
   1b624:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b628:	cmp	r0, #10
   1b62c:	strd	r6, [sp, #8]
   1b630:	mov	r6, #0
   1b634:	mov	r7, #0
   1b638:	strd	r8, [sp, #16]
   1b63c:	strd	sl, [sp, #24]
   1b640:	str	lr, [sp, #32]
   1b644:	sub	sp, sp, #124	; 0x7c
   1b648:	strd	r6, [sp, #72]	; 0x48
   1b64c:	strd	r6, [sp, #80]	; 0x50
   1b650:	strd	r6, [sp, #88]	; 0x58
   1b654:	strd	r6, [sp, #96]	; 0x60
   1b658:	strd	r6, [sp, #104]	; 0x68
   1b65c:	strd	r6, [sp, #112]	; 0x70
   1b660:	beq	1b80c <__assert_fail@plt+0xa680>
   1b664:	mov	sl, r2
   1b668:	movw	r5, #4388	; 0x1124
   1b66c:	movt	r5, #3
   1b670:	str	r0, [sp, #72]	; 0x48
   1b674:	mov	r9, r1
   1b678:	ldrd	r2, [sp, #72]	; 0x48
   1b67c:	strd	r2, [sp, #24]
   1b680:	strd	r6, [sp, #32]
   1b684:	strd	r6, [sp, #40]	; 0x28
   1b688:	strd	r6, [sp, #48]	; 0x30
   1b68c:	strd	r6, [sp, #56]	; 0x38
   1b690:	strd	r6, [sp, #64]	; 0x40
   1b694:	bl	11090 <__errno_location@plt>
   1b698:	mov	r7, r0
   1b69c:	ldr	r4, [r5]
   1b6a0:	ldr	r2, [r5, #4]
   1b6a4:	ldr	fp, [r0]
   1b6a8:	cmp	r2, #0
   1b6ac:	bgt	1b708 <__assert_fail@plt+0xa57c>
   1b6b0:	add	r3, r5, #8
   1b6b4:	str	r2, [sp, #72]	; 0x48
   1b6b8:	rsb	r2, r2, #1
   1b6bc:	cmp	r4, r3
   1b6c0:	beq	1b7e0 <__assert_fail@plt+0xa654>
   1b6c4:	mov	r3, #8
   1b6c8:	mov	r0, r4
   1b6cc:	add	r1, sp, #72	; 0x48
   1b6d0:	str	r3, [sp]
   1b6d4:	mvn	r3, #-2147483648	; 0x80000000
   1b6d8:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b6dc:	mov	r4, r0
   1b6e0:	str	r0, [r5]
   1b6e4:	ldr	r0, [r5, #4]
   1b6e8:	mov	r1, #0
   1b6ec:	ldr	r2, [sp, #72]	; 0x48
   1b6f0:	sub	r2, r2, r0
   1b6f4:	add	r0, r4, r0, lsl #3
   1b6f8:	lsl	r2, r2, #3
   1b6fc:	bl	110b4 <memset@plt>
   1b700:	ldr	r3, [sp, #72]	; 0x48
   1b704:	str	r3, [r5, #4]
   1b708:	ldr	ip, [sp, #24]
   1b70c:	add	r0, sp, #32
   1b710:	mov	r3, sl
   1b714:	mov	r2, r9
   1b718:	ldr	r6, [sp, #28]
   1b71c:	ldr	r8, [r4]
   1b720:	ldr	r5, [r4, #4]
   1b724:	str	ip, [sp]
   1b728:	orr	r6, r6, #1
   1b72c:	ldr	ip, [sp, #64]	; 0x40
   1b730:	mov	r1, r8
   1b734:	str	r6, [sp, #4]
   1b738:	ldr	lr, [sp, #68]	; 0x44
   1b73c:	str	r0, [sp, #8]
   1b740:	mov	r0, r5
   1b744:	str	ip, [sp, #12]
   1b748:	str	lr, [sp, #16]
   1b74c:	bl	19020 <__assert_fail@plt+0x7e94>
   1b750:	cmp	r8, r0
   1b754:	bhi	1b7bc <__assert_fail@plt+0xa630>
   1b758:	add	r8, r0, #1
   1b75c:	movw	r3, #4540	; 0x11bc
   1b760:	movt	r3, #3
   1b764:	cmp	r5, r3
   1b768:	str	r8, [r4]
   1b76c:	beq	1b778 <__assert_fail@plt+0xa5ec>
   1b770:	mov	r0, r5
   1b774:	bl	18ccc <__assert_fail@plt+0x7b40>
   1b778:	mov	r0, r8
   1b77c:	bl	1d094 <__assert_fail@plt+0xbf08>
   1b780:	ldr	lr, [sp, #24]
   1b784:	mov	r1, r8
   1b788:	mov	r3, sl
   1b78c:	mov	r2, r9
   1b790:	mov	r5, r0
   1b794:	ldr	r8, [sp, #64]	; 0x40
   1b798:	ldr	ip, [sp, #68]	; 0x44
   1b79c:	str	r0, [r4, #4]
   1b7a0:	str	lr, [sp]
   1b7a4:	add	lr, sp, #32
   1b7a8:	str	r6, [sp, #4]
   1b7ac:	str	lr, [sp, #8]
   1b7b0:	str	r8, [sp, #12]
   1b7b4:	str	ip, [sp, #16]
   1b7b8:	bl	19020 <__assert_fail@plt+0x7e94>
   1b7bc:	mov	r0, r5
   1b7c0:	str	fp, [r7]
   1b7c4:	add	sp, sp, #124	; 0x7c
   1b7c8:	ldrd	r4, [sp]
   1b7cc:	ldrd	r6, [sp, #8]
   1b7d0:	ldrd	r8, [sp, #16]
   1b7d4:	ldrd	sl, [sp, #24]
   1b7d8:	add	sp, sp, #32
   1b7dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7e0:	mov	r0, #8
   1b7e4:	mvn	r3, #-2147483648	; 0x80000000
   1b7e8:	add	r1, sp, #72	; 0x48
   1b7ec:	str	r0, [sp]
   1b7f0:	mov	r0, #0
   1b7f4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b7f8:	ldrd	r2, [r5, #8]
   1b7fc:	mov	r4, r0
   1b800:	str	r0, [r5]
   1b804:	strd	r2, [r0]
   1b808:	b	1b6e4 <__assert_fail@plt+0xa558>
   1b80c:	bl	11168 <abort@plt>
   1b810:	ldr	r3, [pc, #492]	; 1ba04 <__assert_fail@plt+0xa878>
   1b814:	lsr	ip, r2, #5
   1b818:	and	r2, r2, #31
   1b81c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b820:	movw	r5, #4388	; 0x1124
   1b824:	movt	r5, #3
   1b828:	strd	r6, [sp, #8]
   1b82c:	strd	r8, [sp, #16]
   1b830:	strd	sl, [sp, #24]
   1b834:	mov	sl, r0
   1b838:	mov	fp, r1
   1b83c:	ldrd	r0, [r3]
   1b840:	str	lr, [sp, #32]
   1b844:	sub	sp, sp, #92	; 0x5c
   1b848:	ldrd	r8, [r3, #8]
   1b84c:	add	r6, sp, #48	; 0x30
   1b850:	strd	r0, [sp, #40]	; 0x28
   1b854:	ldrd	r0, [r3, #16]
   1b858:	strd	r8, [sp, #48]	; 0x30
   1b85c:	ldrd	r8, [r3, #24]
   1b860:	strd	r0, [sp, #56]	; 0x38
   1b864:	ldrd	r0, [r3, #32]
   1b868:	strd	r8, [sp, #64]	; 0x40
   1b86c:	ldrd	r8, [r3, #40]	; 0x28
   1b870:	strd	r0, [sp, #72]	; 0x48
   1b874:	strd	r8, [sp, #80]	; 0x50
   1b878:	ldr	r3, [r6, ip, lsl #2]
   1b87c:	mvn	r1, r3, lsr r2
   1b880:	and	r1, r1, #1
   1b884:	eor	r2, r3, r1, lsl r2
   1b888:	str	r2, [r6, ip, lsl #2]
   1b88c:	bl	11090 <__errno_location@plt>
   1b890:	ldr	r3, [r0]
   1b894:	mov	r8, r0
   1b898:	ldr	r2, [r5, #4]
   1b89c:	ldr	r4, [r5]
   1b8a0:	str	r3, [sp, #28]
   1b8a4:	cmp	r2, #0
   1b8a8:	bgt	1b904 <__assert_fail@plt+0xa778>
   1b8ac:	add	r3, r5, #8
   1b8b0:	str	r2, [sp, #36]	; 0x24
   1b8b4:	rsb	r2, r2, #1
   1b8b8:	cmp	r4, r3
   1b8bc:	beq	1b9d8 <__assert_fail@plt+0xa84c>
   1b8c0:	mov	r1, #8
   1b8c4:	mov	r0, r4
   1b8c8:	mvn	r3, #-2147483648	; 0x80000000
   1b8cc:	str	r1, [sp]
   1b8d0:	add	r1, sp, #36	; 0x24
   1b8d4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b8d8:	mov	r4, r0
   1b8dc:	str	r0, [r5]
   1b8e0:	ldr	r0, [r5, #4]
   1b8e4:	mov	r1, #0
   1b8e8:	ldr	r2, [sp, #36]	; 0x24
   1b8ec:	sub	r2, r2, r0
   1b8f0:	add	r0, r4, r0, lsl #3
   1b8f4:	lsl	r2, r2, #3
   1b8f8:	bl	110b4 <memset@plt>
   1b8fc:	ldr	r3, [sp, #36]	; 0x24
   1b900:	str	r3, [r5, #4]
   1b904:	ldr	ip, [sp, #40]	; 0x28
   1b908:	mov	r3, fp
   1b90c:	mov	r2, sl
   1b910:	ldr	r7, [sp, #44]	; 0x2c
   1b914:	ldr	r9, [r4]
   1b918:	ldr	r5, [r4, #4]
   1b91c:	str	ip, [sp]
   1b920:	orr	r7, r7, #1
   1b924:	ldr	ip, [sp, #80]	; 0x50
   1b928:	mov	r1, r9
   1b92c:	str	r7, [sp, #4]
   1b930:	ldr	lr, [sp, #84]	; 0x54
   1b934:	mov	r0, r5
   1b938:	str	r6, [sp, #8]
   1b93c:	str	ip, [sp, #12]
   1b940:	str	lr, [sp, #16]
   1b944:	bl	19020 <__assert_fail@plt+0x7e94>
   1b948:	cmp	r9, r0
   1b94c:	bhi	1b9b0 <__assert_fail@plt+0xa824>
   1b950:	add	r9, r0, #1
   1b954:	movw	r3, #4540	; 0x11bc
   1b958:	movt	r3, #3
   1b95c:	cmp	r5, r3
   1b960:	str	r9, [r4]
   1b964:	beq	1b970 <__assert_fail@plt+0xa7e4>
   1b968:	mov	r0, r5
   1b96c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1b970:	mov	r0, r9
   1b974:	bl	1d094 <__assert_fail@plt+0xbf08>
   1b978:	mov	r1, r9
   1b97c:	ldr	ip, [sp, #40]	; 0x28
   1b980:	mov	r3, fp
   1b984:	mov	r2, sl
   1b988:	mov	r5, r0
   1b98c:	ldr	r9, [sp, #80]	; 0x50
   1b990:	ldr	lr, [sp, #84]	; 0x54
   1b994:	str	r0, [r4, #4]
   1b998:	str	ip, [sp]
   1b99c:	str	r7, [sp, #4]
   1b9a0:	str	r6, [sp, #8]
   1b9a4:	str	r9, [sp, #12]
   1b9a8:	str	lr, [sp, #16]
   1b9ac:	bl	19020 <__assert_fail@plt+0x7e94>
   1b9b0:	ldr	r3, [sp, #28]
   1b9b4:	mov	r0, r5
   1b9b8:	str	r3, [r8]
   1b9bc:	add	sp, sp, #92	; 0x5c
   1b9c0:	ldrd	r4, [sp]
   1b9c4:	ldrd	r6, [sp, #8]
   1b9c8:	ldrd	r8, [sp, #16]
   1b9cc:	ldrd	sl, [sp, #24]
   1b9d0:	add	sp, sp, #32
   1b9d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9d8:	mov	r0, #8
   1b9dc:	mvn	r3, #-2147483648	; 0x80000000
   1b9e0:	add	r1, sp, #36	; 0x24
   1b9e4:	str	r0, [sp]
   1b9e8:	mov	r0, #0
   1b9ec:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1b9f0:	ldrd	r2, [r5, #8]
   1b9f4:	mov	r4, r0
   1b9f8:	str	r0, [r5]
   1b9fc:	strd	r2, [r0]
   1ba00:	b	1b8e0 <__assert_fail@plt+0xa754>
   1ba04:			; <UNDEFINED> instruction: 0x000312bc
   1ba08:	ldr	ip, [pc, #476]	; 1bbec <__assert_fail@plt+0xaa60>
   1ba0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ba10:	movw	r4, #4388	; 0x1124
   1ba14:	movt	r4, #3
   1ba18:	ldrd	r2, [ip, #8]
   1ba1c:	strd	r6, [sp, #8]
   1ba20:	lsr	r7, r1, #5
   1ba24:	mov	r6, r0
   1ba28:	strd	r8, [sp, #16]
   1ba2c:	str	lr, [sp, #32]
   1ba30:	and	lr, r1, #31
   1ba34:	ldrd	r0, [ip]
   1ba38:	strd	sl, [sp, #24]
   1ba3c:	sub	sp, sp, #84	; 0x54
   1ba40:	add	r5, sp, #40	; 0x28
   1ba44:	strd	r0, [sp, #32]
   1ba48:	strd	r2, [sp, #40]	; 0x28
   1ba4c:	ldrd	r0, [ip, #16]
   1ba50:	ldrd	r2, [ip, #24]
   1ba54:	strd	r0, [sp, #48]	; 0x30
   1ba58:	ldrd	r0, [ip, #32]
   1ba5c:	strd	r2, [sp, #56]	; 0x38
   1ba60:	ldrd	r2, [ip, #40]	; 0x28
   1ba64:	strd	r0, [sp, #64]	; 0x40
   1ba68:	strd	r2, [sp, #72]	; 0x48
   1ba6c:	ldr	r1, [r5, r7, lsl #2]
   1ba70:	mvn	r3, r1, lsr lr
   1ba74:	and	r3, r3, #1
   1ba78:	eor	r1, r1, r3, lsl lr
   1ba7c:	str	r1, [r5, r7, lsl #2]
   1ba80:	bl	11090 <__errno_location@plt>
   1ba84:	mov	r9, r0
   1ba88:	ldr	sl, [r0]
   1ba8c:	ldr	r2, [r4, #4]
   1ba90:	ldr	r7, [r4]
   1ba94:	cmp	r2, #0
   1ba98:	bgt	1baf4 <__assert_fail@plt+0xa968>
   1ba9c:	add	r3, r4, #8
   1baa0:	str	r2, [sp, #28]
   1baa4:	rsb	r2, r2, #1
   1baa8:	cmp	r7, r3
   1baac:	beq	1bbc0 <__assert_fail@plt+0xaa34>
   1bab0:	mov	r1, #8
   1bab4:	mov	r0, r7
   1bab8:	mvn	r3, #-2147483648	; 0x80000000
   1babc:	str	r1, [sp]
   1bac0:	add	r1, sp, #28
   1bac4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1bac8:	mov	r7, r0
   1bacc:	str	r0, [r4]
   1bad0:	ldr	r0, [r4, #4]
   1bad4:	mov	r1, #0
   1bad8:	ldr	r2, [sp, #28]
   1badc:	sub	r2, r2, r0
   1bae0:	add	r0, r7, r0, lsl #3
   1bae4:	lsl	r2, r2, #3
   1bae8:	bl	110b4 <memset@plt>
   1baec:	ldr	r3, [sp, #28]
   1baf0:	str	r3, [r4, #4]
   1baf4:	ldr	ip, [sp, #32]
   1baf8:	mvn	r3, #0
   1bafc:	mov	r2, r6
   1bb00:	ldr	r8, [sp, #36]	; 0x24
   1bb04:	ldr	fp, [r7]
   1bb08:	ldr	r4, [r7, #4]
   1bb0c:	str	ip, [sp]
   1bb10:	orr	r8, r8, #1
   1bb14:	ldr	ip, [sp, #72]	; 0x48
   1bb18:	mov	r1, fp
   1bb1c:	str	r8, [sp, #4]
   1bb20:	ldr	lr, [sp, #76]	; 0x4c
   1bb24:	mov	r0, r4
   1bb28:	str	r5, [sp, #8]
   1bb2c:	str	ip, [sp, #12]
   1bb30:	str	lr, [sp, #16]
   1bb34:	bl	19020 <__assert_fail@plt+0x7e94>
   1bb38:	cmp	fp, r0
   1bb3c:	bhi	1bb9c <__assert_fail@plt+0xaa10>
   1bb40:	add	fp, r0, #1
   1bb44:	movw	r3, #4540	; 0x11bc
   1bb48:	movt	r3, #3
   1bb4c:	cmp	r4, r3
   1bb50:	str	fp, [r7]
   1bb54:	beq	1bb60 <__assert_fail@plt+0xa9d4>
   1bb58:	mov	r0, r4
   1bb5c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1bb60:	mov	r0, fp
   1bb64:	bl	1d094 <__assert_fail@plt+0xbf08>
   1bb68:	ldr	r3, [sp, #32]
   1bb6c:	mov	r2, r6
   1bb70:	mov	r1, fp
   1bb74:	mov	r4, r0
   1bb78:	ldr	lr, [sp, #72]	; 0x48
   1bb7c:	ldr	ip, [sp, #76]	; 0x4c
   1bb80:	str	r0, [r7, #4]
   1bb84:	stm	sp, {r3, r8}
   1bb88:	mvn	r3, #0
   1bb8c:	str	r5, [sp, #8]
   1bb90:	str	lr, [sp, #12]
   1bb94:	str	ip, [sp, #16]
   1bb98:	bl	19020 <__assert_fail@plt+0x7e94>
   1bb9c:	mov	r0, r4
   1bba0:	str	sl, [r9]
   1bba4:	add	sp, sp, #84	; 0x54
   1bba8:	ldrd	r4, [sp]
   1bbac:	ldrd	r6, [sp, #8]
   1bbb0:	ldrd	r8, [sp, #16]
   1bbb4:	ldrd	sl, [sp, #24]
   1bbb8:	add	sp, sp, #32
   1bbbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbc0:	mov	r0, #8
   1bbc4:	mvn	r3, #-2147483648	; 0x80000000
   1bbc8:	add	r1, sp, #28
   1bbcc:	str	r0, [sp]
   1bbd0:	mov	r0, #0
   1bbd4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1bbd8:	ldrd	r2, [r4, #8]
   1bbdc:	mov	r7, r0
   1bbe0:	str	r0, [r4]
   1bbe4:	strd	r2, [r0]
   1bbe8:	b	1bad0 <__assert_fail@plt+0xa944>
   1bbec:			; <UNDEFINED> instruction: 0x000312bc
   1bbf0:	ldr	ip, [pc, #472]	; 1bdd0 <__assert_fail@plt+0xac44>
   1bbf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bbf8:	mov	r5, r0
   1bbfc:	movw	r4, #4388	; 0x1124
   1bc00:	movt	r4, #3
   1bc04:	ldrd	r2, [ip]
   1bc08:	ldrd	r0, [ip, #8]
   1bc0c:	strd	r6, [sp, #8]
   1bc10:	strd	r8, [sp, #16]
   1bc14:	strd	sl, [sp, #24]
   1bc18:	str	lr, [sp, #32]
   1bc1c:	sub	sp, sp, #84	; 0x54
   1bc20:	strd	r2, [sp, #32]
   1bc24:	strd	r0, [sp, #40]	; 0x28
   1bc28:	ldr	r6, [sp, #44]	; 0x2c
   1bc2c:	ldrd	r2, [ip, #16]
   1bc30:	ldrd	r0, [ip, #24]
   1bc34:	mvn	lr, r6
   1bc38:	and	lr, lr, #67108864	; 0x4000000
   1bc3c:	eor	lr, lr, r6
   1bc40:	ldrd	r6, [ip, #40]	; 0x28
   1bc44:	strd	r2, [sp, #48]	; 0x30
   1bc48:	ldrd	r2, [ip, #32]
   1bc4c:	str	lr, [sp, #44]	; 0x2c
   1bc50:	strd	r0, [sp, #56]	; 0x38
   1bc54:	strd	r2, [sp, #64]	; 0x40
   1bc58:	strd	r6, [sp, #72]	; 0x48
   1bc5c:	bl	11090 <__errno_location@plt>
   1bc60:	mov	r8, r0
   1bc64:	ldr	r9, [r0]
   1bc68:	ldr	r2, [r4, #4]
   1bc6c:	ldr	r6, [r4]
   1bc70:	cmp	r2, #0
   1bc74:	bgt	1bcd0 <__assert_fail@plt+0xab44>
   1bc78:	add	r3, r4, #8
   1bc7c:	str	r2, [sp, #28]
   1bc80:	rsb	r2, r2, #1
   1bc84:	cmp	r6, r3
   1bc88:	beq	1bda4 <__assert_fail@plt+0xac18>
   1bc8c:	mov	r1, #8
   1bc90:	mov	r0, r6
   1bc94:	mvn	r3, #-2147483648	; 0x80000000
   1bc98:	str	r1, [sp]
   1bc9c:	add	r1, sp, #28
   1bca0:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1bca4:	mov	r6, r0
   1bca8:	str	r0, [r4]
   1bcac:	ldr	r0, [r4, #4]
   1bcb0:	mov	r1, #0
   1bcb4:	ldr	r2, [sp, #28]
   1bcb8:	sub	r2, r2, r0
   1bcbc:	add	r0, r6, r0, lsl #3
   1bcc0:	lsl	r2, r2, #3
   1bcc4:	bl	110b4 <memset@plt>
   1bcc8:	ldr	r3, [sp, #28]
   1bccc:	str	r3, [r4, #4]
   1bcd0:	ldr	sl, [r6]
   1bcd4:	add	r0, sp, #40	; 0x28
   1bcd8:	mvn	r3, #0
   1bcdc:	mov	r2, r5
   1bce0:	ldr	r7, [sp, #36]	; 0x24
   1bce4:	ldr	r4, [r6, #4]
   1bce8:	mov	r1, sl
   1bcec:	str	r0, [sp, #8]
   1bcf0:	ldr	lr, [sp, #32]
   1bcf4:	orr	r7, r7, #1
   1bcf8:	ldr	ip, [sp, #72]	; 0x48
   1bcfc:	mov	r0, r4
   1bd00:	ldr	fp, [sp, #76]	; 0x4c
   1bd04:	str	lr, [sp]
   1bd08:	str	r7, [sp, #4]
   1bd0c:	str	ip, [sp, #12]
   1bd10:	str	fp, [sp, #16]
   1bd14:	bl	19020 <__assert_fail@plt+0x7e94>
   1bd18:	cmp	sl, r0
   1bd1c:	bhi	1bd80 <__assert_fail@plt+0xabf4>
   1bd20:	add	sl, r0, #1
   1bd24:	movw	r3, #4540	; 0x11bc
   1bd28:	movt	r3, #3
   1bd2c:	cmp	r4, r3
   1bd30:	str	sl, [r6]
   1bd34:	beq	1bd40 <__assert_fail@plt+0xabb4>
   1bd38:	mov	r0, r4
   1bd3c:	bl	18ccc <__assert_fail@plt+0x7b40>
   1bd40:	mov	r0, sl
   1bd44:	bl	1d094 <__assert_fail@plt+0xbf08>
   1bd48:	ldr	r3, [sp, #32]
   1bd4c:	mov	r2, r5
   1bd50:	add	r5, sp, #40	; 0x28
   1bd54:	mov	r1, sl
   1bd58:	mov	r4, r0
   1bd5c:	ldr	lr, [sp, #72]	; 0x48
   1bd60:	ldr	ip, [sp, #76]	; 0x4c
   1bd64:	str	r0, [r6, #4]
   1bd68:	stm	sp, {r3, r7}
   1bd6c:	mvn	r3, #0
   1bd70:	str	r5, [sp, #8]
   1bd74:	str	lr, [sp, #12]
   1bd78:	str	ip, [sp, #16]
   1bd7c:	bl	19020 <__assert_fail@plt+0x7e94>
   1bd80:	mov	r0, r4
   1bd84:	str	r9, [r8]
   1bd88:	add	sp, sp, #84	; 0x54
   1bd8c:	ldrd	r4, [sp]
   1bd90:	ldrd	r6, [sp, #8]
   1bd94:	ldrd	r8, [sp, #16]
   1bd98:	ldrd	sl, [sp, #24]
   1bd9c:	add	sp, sp, #32
   1bda0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bda4:	mov	r0, #8
   1bda8:	mvn	r3, #-2147483648	; 0x80000000
   1bdac:	add	r1, sp, #28
   1bdb0:	str	r0, [sp]
   1bdb4:	mov	r0, #0
   1bdb8:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1bdbc:	ldrd	r2, [r4, #8]
   1bdc0:	mov	r6, r0
   1bdc4:	str	r0, [r4]
   1bdc8:	strd	r2, [r0]
   1bdcc:	b	1bcac <__assert_fail@plt+0xab20>
   1bdd0:			; <UNDEFINED> instruction: 0x000312bc
   1bdd4:	ldr	ip, [pc, #480]	; 1bfbc <__assert_fail@plt+0xae30>
   1bdd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bddc:	mov	r5, r0
   1bde0:	movw	r4, #4388	; 0x1124
   1bde4:	movt	r4, #3
   1bde8:	ldrd	r2, [ip]
   1bdec:	strd	r6, [sp, #8]
   1bdf0:	mov	r6, r1
   1bdf4:	ldrd	r0, [ip, #8]
   1bdf8:	strd	r8, [sp, #16]
   1bdfc:	strd	sl, [sp, #24]
   1be00:	str	lr, [sp, #32]
   1be04:	sub	sp, sp, #84	; 0x54
   1be08:	ldrd	r8, [ip, #40]	; 0x28
   1be0c:	strd	r2, [sp, #32]
   1be10:	strd	r0, [sp, #40]	; 0x28
   1be14:	ldrd	r2, [ip, #16]
   1be18:	ldr	r7, [sp, #44]	; 0x2c
   1be1c:	ldrd	r0, [ip, #24]
   1be20:	strd	r2, [sp, #48]	; 0x30
   1be24:	ldrd	r2, [ip, #32]
   1be28:	mvn	lr, r7
   1be2c:	and	lr, lr, #67108864	; 0x4000000
   1be30:	eor	lr, lr, r7
   1be34:	str	lr, [sp, #44]	; 0x2c
   1be38:	strd	r0, [sp, #56]	; 0x38
   1be3c:	strd	r2, [sp, #64]	; 0x40
   1be40:	strd	r8, [sp, #72]	; 0x48
   1be44:	bl	11090 <__errno_location@plt>
   1be48:	mov	r9, r0
   1be4c:	ldr	sl, [r0]
   1be50:	ldr	r2, [r4, #4]
   1be54:	ldr	r7, [r4]
   1be58:	cmp	r2, #0
   1be5c:	bgt	1beb8 <__assert_fail@plt+0xad2c>
   1be60:	add	r3, r4, #8
   1be64:	str	r2, [sp, #28]
   1be68:	rsb	r2, r2, #1
   1be6c:	cmp	r7, r3
   1be70:	beq	1bf90 <__assert_fail@plt+0xae04>
   1be74:	mov	r1, #8
   1be78:	mov	r0, r7
   1be7c:	mvn	r3, #-2147483648	; 0x80000000
   1be80:	str	r1, [sp]
   1be84:	add	r1, sp, #28
   1be88:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1be8c:	mov	r7, r0
   1be90:	str	r0, [r4]
   1be94:	ldr	r0, [r4, #4]
   1be98:	mov	r1, #0
   1be9c:	ldr	r2, [sp, #28]
   1bea0:	sub	r2, r2, r0
   1bea4:	add	r0, r7, r0, lsl #3
   1bea8:	lsl	r2, r2, #3
   1beac:	bl	110b4 <memset@plt>
   1beb0:	ldr	r3, [sp, #28]
   1beb4:	str	r3, [r4, #4]
   1beb8:	ldr	ip, [sp, #32]
   1bebc:	add	r0, sp, #40	; 0x28
   1bec0:	mov	r3, r6
   1bec4:	mov	r2, r5
   1bec8:	ldr	r8, [sp, #36]	; 0x24
   1becc:	ldr	fp, [r7]
   1bed0:	ldr	r4, [r7, #4]
   1bed4:	str	ip, [sp]
   1bed8:	orr	r8, r8, #1
   1bedc:	ldr	ip, [sp, #72]	; 0x48
   1bee0:	mov	r1, fp
   1bee4:	str	r8, [sp, #4]
   1bee8:	ldr	lr, [sp, #76]	; 0x4c
   1beec:	str	r0, [sp, #8]
   1bef0:	mov	r0, r4
   1bef4:	str	ip, [sp, #12]
   1bef8:	str	lr, [sp, #16]
   1befc:	bl	19020 <__assert_fail@plt+0x7e94>
   1bf00:	cmp	fp, r0
   1bf04:	bhi	1bf6c <__assert_fail@plt+0xade0>
   1bf08:	add	fp, r0, #1
   1bf0c:	movw	r3, #4540	; 0x11bc
   1bf10:	movt	r3, #3
   1bf14:	cmp	r4, r3
   1bf18:	str	fp, [r7]
   1bf1c:	beq	1bf28 <__assert_fail@plt+0xad9c>
   1bf20:	mov	r0, r4
   1bf24:	bl	18ccc <__assert_fail@plt+0x7b40>
   1bf28:	mov	r0, fp
   1bf2c:	bl	1d094 <__assert_fail@plt+0xbf08>
   1bf30:	ldr	lr, [sp, #32]
   1bf34:	mov	r2, r5
   1bf38:	mov	r3, r6
   1bf3c:	mov	r1, fp
   1bf40:	mov	r4, r0
   1bf44:	ldr	r5, [sp, #72]	; 0x48
   1bf48:	ldr	ip, [sp, #76]	; 0x4c
   1bf4c:	str	r0, [r7, #4]
   1bf50:	str	lr, [sp]
   1bf54:	add	lr, sp, #40	; 0x28
   1bf58:	str	r8, [sp, #4]
   1bf5c:	str	lr, [sp, #8]
   1bf60:	str	r5, [sp, #12]
   1bf64:	str	ip, [sp, #16]
   1bf68:	bl	19020 <__assert_fail@plt+0x7e94>
   1bf6c:	mov	r0, r4
   1bf70:	str	sl, [r9]
   1bf74:	add	sp, sp, #84	; 0x54
   1bf78:	ldrd	r4, [sp]
   1bf7c:	ldrd	r6, [sp, #8]
   1bf80:	ldrd	r8, [sp, #16]
   1bf84:	ldrd	sl, [sp, #24]
   1bf88:	add	sp, sp, #32
   1bf8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf90:	mov	r0, #8
   1bf94:	mvn	r3, #-2147483648	; 0x80000000
   1bf98:	add	r1, sp, #28
   1bf9c:	str	r0, [sp]
   1bfa0:	mov	r0, #0
   1bfa4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1bfa8:	ldrd	r2, [r4, #8]
   1bfac:	mov	r7, r0
   1bfb0:	str	r0, [r4]
   1bfb4:	strd	r2, [r0]
   1bfb8:	b	1be94 <__assert_fail@plt+0xad08>
   1bfbc:			; <UNDEFINED> instruction: 0x000312bc
   1bfc0:	strd	r4, [sp, #-12]!
   1bfc4:	mov	r4, #0
   1bfc8:	mov	r5, #0
   1bfcc:	str	lr, [sp, #8]
   1bfd0:	sub	sp, sp, #100	; 0x64
   1bfd4:	cmp	r1, #10
   1bfd8:	strd	r4, [sp]
   1bfdc:	strd	r4, [sp, #8]
   1bfe0:	strd	r4, [sp, #16]
   1bfe4:	strd	r4, [sp, #24]
   1bfe8:	strd	r4, [sp, #32]
   1bfec:	strd	r4, [sp, #40]	; 0x28
   1bff0:	beq	1c020 <__assert_fail@plt+0xae94>
   1bff4:	mov	ip, #67108864	; 0x4000000
   1bff8:	mov	r3, sp
   1bffc:	str	r1, [sp]
   1c000:	mov	r1, r2
   1c004:	mvn	r2, #0
   1c008:	str	ip, [sp, #12]
   1c00c:	bl	1aa0c <__assert_fail@plt+0x9880>
   1c010:	add	sp, sp, #100	; 0x64
   1c014:	ldrd	r4, [sp]
   1c018:	add	sp, sp, #8
   1c01c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c020:	bl	11168 <abort@plt>
   1c024:	ldr	ip, [pc, #156]	; 1c0c8 <__assert_fail@plt+0xaf3c>
   1c028:	cmp	r2, #0
   1c02c:	cmpne	r1, #0
   1c030:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c034:	strd	r6, [sp, #8]
   1c038:	mov	r6, r2
   1c03c:	str	r8, [sp, #16]
   1c040:	mov	r8, r3
   1c044:	strd	sl, [sp, #20]
   1c048:	ldrd	r4, [ip]
   1c04c:	str	lr, [sp, #28]
   1c050:	sub	sp, sp, #48	; 0x30
   1c054:	mov	lr, #10
   1c058:	ldrd	r2, [ip, #8]
   1c05c:	ldrd	sl, [ip, #16]
   1c060:	strd	r4, [sp]
   1c064:	ldrd	r4, [ip, #32]
   1c068:	str	lr, [sp]
   1c06c:	strd	r2, [sp, #8]
   1c070:	strd	sl, [sp, #16]
   1c074:	ldrd	r2, [ip, #24]
   1c078:	ldrd	sl, [ip, #40]	; 0x28
   1c07c:	strd	r2, [sp, #24]
   1c080:	strd	r4, [sp, #32]
   1c084:	strd	sl, [sp, #40]	; 0x28
   1c088:	beq	1c0c4 <__assert_fail@plt+0xaf38>
   1c08c:	mov	r7, r1
   1c090:	mov	r3, sp
   1c094:	mov	r1, r8
   1c098:	mvn	r2, #0
   1c09c:	str	r7, [sp, #40]	; 0x28
   1c0a0:	str	r6, [sp, #44]	; 0x2c
   1c0a4:	bl	1aa0c <__assert_fail@plt+0x9880>
   1c0a8:	add	sp, sp, #48	; 0x30
   1c0ac:	ldrd	r4, [sp]
   1c0b0:	ldrd	r6, [sp, #8]
   1c0b4:	ldr	r8, [sp, #16]
   1c0b8:	ldrd	sl, [sp, #20]
   1c0bc:	add	sp, sp, #28
   1c0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0c4:	bl	11168 <abort@plt>
   1c0c8:			; <UNDEFINED> instruction: 0x000312bc
   1c0cc:	ldr	ip, [pc, #156]	; 1c170 <__assert_fail@plt+0xafe4>
   1c0d0:	cmp	r2, #0
   1c0d4:	cmpne	r1, #0
   1c0d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c0dc:	strd	r6, [sp, #8]
   1c0e0:	mov	r6, r2
   1c0e4:	str	r8, [sp, #16]
   1c0e8:	mov	r8, r3
   1c0ec:	strd	sl, [sp, #20]
   1c0f0:	ldrd	r4, [ip]
   1c0f4:	str	lr, [sp, #28]
   1c0f8:	sub	sp, sp, #48	; 0x30
   1c0fc:	mov	lr, #10
   1c100:	ldrd	r2, [ip, #8]
   1c104:	ldrd	sl, [ip, #16]
   1c108:	strd	r4, [sp]
   1c10c:	ldrd	r4, [ip, #32]
   1c110:	str	lr, [sp]
   1c114:	strd	r2, [sp, #8]
   1c118:	strd	sl, [sp, #16]
   1c11c:	ldrd	r2, [ip, #24]
   1c120:	ldrd	sl, [ip, #40]	; 0x28
   1c124:	strd	r2, [sp, #24]
   1c128:	strd	r4, [sp, #32]
   1c12c:	strd	sl, [sp, #40]	; 0x28
   1c130:	beq	1c16c <__assert_fail@plt+0xafe0>
   1c134:	ldr	r2, [sp, #80]	; 0x50
   1c138:	mov	r7, r1
   1c13c:	mov	r3, sp
   1c140:	mov	r1, r8
   1c144:	str	r7, [sp, #40]	; 0x28
   1c148:	str	r6, [sp, #44]	; 0x2c
   1c14c:	bl	1aa0c <__assert_fail@plt+0x9880>
   1c150:	add	sp, sp, #48	; 0x30
   1c154:	ldrd	r4, [sp]
   1c158:	ldrd	r6, [sp, #8]
   1c15c:	ldr	r8, [sp, #16]
   1c160:	ldrd	sl, [sp, #20]
   1c164:	add	sp, sp, #28
   1c168:	pop	{pc}		; (ldr pc, [sp], #4)
   1c16c:	bl	11168 <abort@plt>
   1c170:			; <UNDEFINED> instruction: 0x000312bc
   1c174:	ldr	ip, [pc, #512]	; 1c37c <__assert_fail@plt+0xb1f0>
   1c178:	cmp	r0, #0
   1c17c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c180:	ldrd	r4, [ip, #16]
   1c184:	strd	r6, [sp, #8]
   1c188:	clz	r6, r1
   1c18c:	mov	r7, r1
   1c190:	strd	r8, [sp, #16]
   1c194:	mov	r8, r0
   1c198:	lsr	r6, r6, #5
   1c19c:	strd	sl, [sp, #24]
   1c1a0:	mov	fp, r2
   1c1a4:	mov	sl, #10
   1c1a8:	ldrd	r2, [ip]
   1c1ac:	moveq	r6, #1
   1c1b0:	str	lr, [sp, #32]
   1c1b4:	sub	sp, sp, #92	; 0x5c
   1c1b8:	cmp	r6, #0
   1c1bc:	ldrd	r0, [ip, #8]
   1c1c0:	strd	r2, [sp, #40]	; 0x28
   1c1c4:	strd	r4, [sp, #56]	; 0x38
   1c1c8:	ldrd	r2, [ip, #24]
   1c1cc:	strd	r0, [sp, #48]	; 0x30
   1c1d0:	ldrd	r0, [ip, #32]
   1c1d4:	str	sl, [sp, #40]	; 0x28
   1c1d8:	ldrd	r4, [ip, #40]	; 0x28
   1c1dc:	strd	r2, [sp, #64]	; 0x40
   1c1e0:	strd	r0, [sp, #72]	; 0x48
   1c1e4:	strd	r4, [sp, #80]	; 0x50
   1c1e8:	bne	1c378 <__assert_fail@plt+0xb1ec>
   1c1ec:	movw	r5, #4388	; 0x1124
   1c1f0:	movt	r5, #3
   1c1f4:	str	r8, [sp, #80]	; 0x50
   1c1f8:	str	r7, [sp, #84]	; 0x54
   1c1fc:	bl	11090 <__errno_location@plt>
   1c200:	ldr	r3, [r0]
   1c204:	mov	r9, r0
   1c208:	ldr	r2, [r5, #4]
   1c20c:	ldr	r4, [r5]
   1c210:	str	r3, [sp, #28]
   1c214:	cmp	r2, #0
   1c218:	movgt	r1, sl
   1c21c:	bgt	1c284 <__assert_fail@plt+0xb0f8>
   1c220:	add	r3, r5, #8
   1c224:	str	r2, [sp, #36]	; 0x24
   1c228:	rsb	r2, r2, #1
   1c22c:	cmp	r4, r3
   1c230:	beq	1c34c <__assert_fail@plt+0xb1c0>
   1c234:	mov	r1, #8
   1c238:	mov	r0, r4
   1c23c:	mvn	r3, #-2147483648	; 0x80000000
   1c240:	str	r1, [sp]
   1c244:	add	r1, sp, #36	; 0x24
   1c248:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c24c:	mov	r4, r0
   1c250:	str	r0, [r5]
   1c254:	ldr	r0, [r5, #4]
   1c258:	mov	r1, #0
   1c25c:	ldr	r2, [sp, #36]	; 0x24
   1c260:	sub	r2, r2, r0
   1c264:	add	r0, r4, r0, lsl #3
   1c268:	lsl	r2, r2, #3
   1c26c:	bl	110b4 <memset@plt>
   1c270:	ldr	r3, [sp, #36]	; 0x24
   1c274:	ldr	r1, [sp, #40]	; 0x28
   1c278:	ldr	r8, [sp, #80]	; 0x50
   1c27c:	str	r3, [r5, #4]
   1c280:	ldr	r7, [sp, #84]	; 0x54
   1c284:	mvn	r3, #0
   1c288:	mov	r2, fp
   1c28c:	ldr	r6, [sp, #44]	; 0x2c
   1c290:	ldr	sl, [r4]
   1c294:	ldr	r5, [r4, #4]
   1c298:	orr	r6, r6, #1
   1c29c:	stm	sp, {r1, r6}
   1c2a0:	add	r1, sp, #48	; 0x30
   1c2a4:	str	r8, [sp, #12]
   1c2a8:	mov	r0, r5
   1c2ac:	str	r1, [sp, #8]
   1c2b0:	mov	r1, sl
   1c2b4:	str	r7, [sp, #16]
   1c2b8:	bl	19020 <__assert_fail@plt+0x7e94>
   1c2bc:	cmp	sl, r0
   1c2c0:	bhi	1c324 <__assert_fail@plt+0xb198>
   1c2c4:	add	r7, r0, #1
   1c2c8:	movw	r3, #4540	; 0x11bc
   1c2cc:	movt	r3, #3
   1c2d0:	cmp	r5, r3
   1c2d4:	str	r7, [r4]
   1c2d8:	beq	1c2e4 <__assert_fail@plt+0xb158>
   1c2dc:	mov	r0, r5
   1c2e0:	bl	18ccc <__assert_fail@plt+0x7b40>
   1c2e4:	mov	r0, r7
   1c2e8:	bl	1d094 <__assert_fail@plt+0xbf08>
   1c2ec:	ldr	r3, [sp, #40]	; 0x28
   1c2f0:	mov	r2, fp
   1c2f4:	mov	r1, r7
   1c2f8:	mov	r5, r0
   1c2fc:	ldr	lr, [sp, #80]	; 0x50
   1c300:	ldr	ip, [sp, #84]	; 0x54
   1c304:	str	r0, [r4, #4]
   1c308:	add	r4, sp, #48	; 0x30
   1c30c:	stm	sp, {r3, r6}
   1c310:	mvn	r3, #0
   1c314:	str	r4, [sp, #8]
   1c318:	str	lr, [sp, #12]
   1c31c:	str	ip, [sp, #16]
   1c320:	bl	19020 <__assert_fail@plt+0x7e94>
   1c324:	ldr	r3, [sp, #28]
   1c328:	mov	r0, r5
   1c32c:	str	r3, [r9]
   1c330:	add	sp, sp, #92	; 0x5c
   1c334:	ldrd	r4, [sp]
   1c338:	ldrd	r6, [sp, #8]
   1c33c:	ldrd	r8, [sp, #16]
   1c340:	ldrd	sl, [sp, #24]
   1c344:	add	sp, sp, #32
   1c348:	pop	{pc}		; (ldr pc, [sp], #4)
   1c34c:	mov	r1, #8
   1c350:	mvn	r3, #-2147483648	; 0x80000000
   1c354:	mov	r0, r6
   1c358:	str	r1, [sp]
   1c35c:	add	r1, sp, #36	; 0x24
   1c360:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c364:	ldrd	r2, [r5, #8]
   1c368:	mov	r4, r0
   1c36c:	str	r0, [r5]
   1c370:	strd	r2, [r0]
   1c374:	b	1c254 <__assert_fail@plt+0xb0c8>
   1c378:	bl	11168 <abort@plt>
   1c37c:			; <UNDEFINED> instruction: 0x000312bc
   1c380:	ldr	ip, [pc, #536]	; 1c5a0 <__assert_fail@plt+0xb414>
   1c384:	cmp	r0, #0
   1c388:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c38c:	ldrd	r4, [ip, #16]
   1c390:	strd	r6, [sp, #8]
   1c394:	mov	r6, r1
   1c398:	mov	r7, r0
   1c39c:	strd	r8, [sp, #16]
   1c3a0:	mov	r9, #10
   1c3a4:	strd	sl, [sp, #24]
   1c3a8:	mov	sl, r2
   1c3ac:	mov	fp, r3
   1c3b0:	str	lr, [sp, #32]
   1c3b4:	clz	lr, r1
   1c3b8:	sub	sp, sp, #92	; 0x5c
   1c3bc:	ldrd	r2, [ip]
   1c3c0:	lsr	lr, lr, #5
   1c3c4:	moveq	lr, #1
   1c3c8:	ldrd	r0, [ip, #8]
   1c3cc:	cmp	lr, #0
   1c3d0:	strd	r4, [sp, #56]	; 0x38
   1c3d4:	ldrd	r4, [ip, #40]	; 0x28
   1c3d8:	str	lr, [sp, #28]
   1c3dc:	strd	r2, [sp, #40]	; 0x28
   1c3e0:	ldrd	r2, [ip, #24]
   1c3e4:	strd	r0, [sp, #48]	; 0x30
   1c3e8:	ldrd	r0, [ip, #32]
   1c3ec:	str	r9, [sp, #40]	; 0x28
   1c3f0:	strd	r2, [sp, #64]	; 0x40
   1c3f4:	strd	r4, [sp, #80]	; 0x50
   1c3f8:	strd	r0, [sp, #72]	; 0x48
   1c3fc:	bne	1c59c <__assert_fail@plt+0xb410>
   1c400:	movw	r5, #4388	; 0x1124
   1c404:	movt	r5, #3
   1c408:	str	r7, [sp, #80]	; 0x50
   1c40c:	str	r6, [sp, #84]	; 0x54
   1c410:	bl	11090 <__errno_location@plt>
   1c414:	ldr	r3, [r0]
   1c418:	mov	r8, r0
   1c41c:	ldr	r2, [r5, #4]
   1c420:	ldr	r4, [r5]
   1c424:	str	r3, [sp, #24]
   1c428:	cmp	r2, #0
   1c42c:	movgt	r1, r9
   1c430:	bgt	1c498 <__assert_fail@plt+0xb30c>
   1c434:	add	r3, r5, #8
   1c438:	str	r2, [sp, #36]	; 0x24
   1c43c:	rsb	r2, r2, #1
   1c440:	cmp	r4, r3
   1c444:	beq	1c570 <__assert_fail@plt+0xb3e4>
   1c448:	mov	r1, #8
   1c44c:	mov	r0, r4
   1c450:	mvn	r3, #-2147483648	; 0x80000000
   1c454:	str	r1, [sp]
   1c458:	add	r1, sp, #36	; 0x24
   1c45c:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c460:	mov	r4, r0
   1c464:	str	r0, [r5]
   1c468:	ldr	r0, [r5, #4]
   1c46c:	mov	r1, #0
   1c470:	ldr	r2, [sp, #36]	; 0x24
   1c474:	sub	r2, r2, r0
   1c478:	add	r0, r4, r0, lsl #3
   1c47c:	lsl	r2, r2, #3
   1c480:	bl	110b4 <memset@plt>
   1c484:	ldr	r3, [sp, #36]	; 0x24
   1c488:	ldr	r1, [sp, #40]	; 0x28
   1c48c:	ldr	r7, [sp, #80]	; 0x50
   1c490:	str	r3, [r5, #4]
   1c494:	ldr	r6, [sp, #84]	; 0x54
   1c498:	mov	r3, fp
   1c49c:	mov	r2, sl
   1c4a0:	ldr	r0, [sp, #44]	; 0x2c
   1c4a4:	ldr	r9, [r4]
   1c4a8:	ldr	r5, [r4, #4]
   1c4ac:	orr	r0, r0, #1
   1c4b0:	str	r1, [sp]
   1c4b4:	add	r1, sp, #48	; 0x30
   1c4b8:	str	r0, [sp, #4]
   1c4bc:	str	r1, [sp, #8]
   1c4c0:	mov	r1, r9
   1c4c4:	str	r7, [sp, #12]
   1c4c8:	str	r6, [sp, #16]
   1c4cc:	str	r0, [sp, #28]
   1c4d0:	mov	r0, r5
   1c4d4:	bl	19020 <__assert_fail@plt+0x7e94>
   1c4d8:	cmp	r9, r0
   1c4dc:	bhi	1c548 <__assert_fail@plt+0xb3bc>
   1c4e0:	add	r6, r0, #1
   1c4e4:	movw	r3, #4540	; 0x11bc
   1c4e8:	movt	r3, #3
   1c4ec:	cmp	r5, r3
   1c4f0:	str	r6, [r4]
   1c4f4:	beq	1c500 <__assert_fail@plt+0xb374>
   1c4f8:	mov	r0, r5
   1c4fc:	bl	18ccc <__assert_fail@plt+0x7b40>
   1c500:	mov	r0, r6
   1c504:	bl	1d094 <__assert_fail@plt+0xbf08>
   1c508:	ldr	lr, [sp, #40]	; 0x28
   1c50c:	mov	r1, r6
   1c510:	mov	r3, fp
   1c514:	mov	r2, sl
   1c518:	mov	r5, r0
   1c51c:	ldr	r6, [sp, #80]	; 0x50
   1c520:	ldr	ip, [sp, #84]	; 0x54
   1c524:	str	r0, [r4, #4]
   1c528:	str	lr, [sp]
   1c52c:	ldr	lr, [sp, #28]
   1c530:	str	lr, [sp, #4]
   1c534:	add	lr, sp, #48	; 0x30
   1c538:	str	r6, [sp, #12]
   1c53c:	str	lr, [sp, #8]
   1c540:	str	ip, [sp, #16]
   1c544:	bl	19020 <__assert_fail@plt+0x7e94>
   1c548:	ldr	r3, [sp, #24]
   1c54c:	mov	r0, r5
   1c550:	str	r3, [r8]
   1c554:	add	sp, sp, #92	; 0x5c
   1c558:	ldrd	r4, [sp]
   1c55c:	ldrd	r6, [sp, #8]
   1c560:	ldrd	r8, [sp, #16]
   1c564:	ldrd	sl, [sp, #24]
   1c568:	add	sp, sp, #32
   1c56c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c570:	mov	r1, #8
   1c574:	mvn	r3, #-2147483648	; 0x80000000
   1c578:	ldr	r0, [sp, #28]
   1c57c:	str	r1, [sp]
   1c580:	add	r1, sp, #36	; 0x24
   1c584:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c588:	ldrd	r2, [r5, #8]
   1c58c:	mov	r4, r0
   1c590:	str	r0, [r5]
   1c594:	strd	r2, [r0]
   1c598:	b	1c468 <__assert_fail@plt+0xb2dc>
   1c59c:	bl	11168 <abort@plt>
   1c5a0:			; <UNDEFINED> instruction: 0x000312bc
   1c5a4:	ldr	r3, [pc]	; 1c5ac <__assert_fail@plt+0xb420>
   1c5a8:	b	1aa0c <__assert_fail@plt+0x9880>
   1c5ac:	andeq	r1, r3, r4, lsr r1
   1c5b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c5b4:	movw	r4, #4388	; 0x1124
   1c5b8:	movt	r4, #3
   1c5bc:	strd	r6, [sp, #8]
   1c5c0:	strd	r8, [sp, #16]
   1c5c4:	strd	sl, [sp, #24]
   1c5c8:	mov	sl, r0
   1c5cc:	mov	fp, r1
   1c5d0:	str	lr, [sp, #32]
   1c5d4:	sub	sp, sp, #44	; 0x2c
   1c5d8:	bl	11090 <__errno_location@plt>
   1c5dc:	ldr	r3, [r0]
   1c5e0:	mov	r8, r0
   1c5e4:	ldr	r2, [r4, #4]
   1c5e8:	ldr	r5, [r4]
   1c5ec:	str	r3, [sp, #28]
   1c5f0:	cmp	r2, #0
   1c5f4:	bgt	1c650 <__assert_fail@plt+0xb4c4>
   1c5f8:	add	r3, r4, #8
   1c5fc:	str	r2, [sp, #36]	; 0x24
   1c600:	rsb	r2, r2, #1
   1c604:	cmp	r5, r3
   1c608:	beq	1c72c <__assert_fail@plt+0xb5a0>
   1c60c:	mov	r1, #8
   1c610:	mov	r0, r5
   1c614:	mvn	r3, #-2147483648	; 0x80000000
   1c618:	str	r1, [sp]
   1c61c:	add	r1, sp, #36	; 0x24
   1c620:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c624:	mov	r5, r0
   1c628:	str	r0, [r4]
   1c62c:	ldr	r0, [r4, #4]
   1c630:	mov	r1, #0
   1c634:	ldr	r2, [sp, #36]	; 0x24
   1c638:	sub	r2, r2, r0
   1c63c:	add	r0, r5, r0, lsl #3
   1c640:	lsl	r2, r2, #3
   1c644:	bl	110b4 <memset@plt>
   1c648:	ldr	r3, [sp, #36]	; 0x24
   1c64c:	str	r3, [r4, #4]
   1c650:	ldr	ip, [r4, #16]
   1c654:	mov	r3, fp
   1c658:	mov	r2, sl
   1c65c:	ldr	r7, [r4, #20]
   1c660:	ldr	r0, [pc, #240]	; 1c758 <__assert_fail@plt+0xb5cc>
   1c664:	ldr	r9, [r5]
   1c668:	orr	r7, r7, #1
   1c66c:	ldr	r6, [r5, #4]
   1c670:	str	ip, [sp]
   1c674:	ldr	ip, [r4, #56]	; 0x38
   1c678:	mov	r1, r9
   1c67c:	str	r7, [sp, #4]
   1c680:	ldr	lr, [r4, #60]	; 0x3c
   1c684:	str	r0, [sp, #8]
   1c688:	mov	r0, r6
   1c68c:	str	ip, [sp, #12]
   1c690:	str	lr, [sp, #16]
   1c694:	bl	19020 <__assert_fail@plt+0x7e94>
   1c698:	cmp	r9, r0
   1c69c:	bhi	1c704 <__assert_fail@plt+0xb578>
   1c6a0:	add	r9, r0, #1
   1c6a4:	movw	r3, #4540	; 0x11bc
   1c6a8:	movt	r3, #3
   1c6ac:	cmp	r6, r3
   1c6b0:	str	r9, [r5]
   1c6b4:	beq	1c6c0 <__assert_fail@plt+0xb534>
   1c6b8:	mov	r0, r6
   1c6bc:	bl	18ccc <__assert_fail@plt+0x7b40>
   1c6c0:	mov	r0, r9
   1c6c4:	bl	1d094 <__assert_fail@plt+0xbf08>
   1c6c8:	ldr	ip, [r4, #16]
   1c6cc:	mov	r1, r9
   1c6d0:	mov	r3, fp
   1c6d4:	mov	r2, sl
   1c6d8:	mov	r6, r0
   1c6dc:	ldr	r9, [r4, #56]	; 0x38
   1c6e0:	ldr	lr, [r4, #60]	; 0x3c
   1c6e4:	str	r0, [r5, #4]
   1c6e8:	str	ip, [sp]
   1c6ec:	ldr	ip, [pc, #100]	; 1c758 <__assert_fail@plt+0xb5cc>
   1c6f0:	str	r7, [sp, #4]
   1c6f4:	str	ip, [sp, #8]
   1c6f8:	str	r9, [sp, #12]
   1c6fc:	str	lr, [sp, #16]
   1c700:	bl	19020 <__assert_fail@plt+0x7e94>
   1c704:	ldr	r3, [sp, #28]
   1c708:	mov	r0, r6
   1c70c:	str	r3, [r8]
   1c710:	add	sp, sp, #44	; 0x2c
   1c714:	ldrd	r4, [sp]
   1c718:	ldrd	r6, [sp, #8]
   1c71c:	ldrd	r8, [sp, #16]
   1c720:	ldrd	sl, [sp, #24]
   1c724:	add	sp, sp, #32
   1c728:	pop	{pc}		; (ldr pc, [sp], #4)
   1c72c:	mov	r0, #8
   1c730:	mvn	r3, #-2147483648	; 0x80000000
   1c734:	add	r1, sp, #36	; 0x24
   1c738:	str	r0, [sp]
   1c73c:	mov	r0, #0
   1c740:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c744:	ldrd	r2, [r4, #8]
   1c748:	mov	r5, r0
   1c74c:	str	r0, [r4]
   1c750:	strd	r2, [r0]
   1c754:	b	1c62c <__assert_fail@plt+0xb4a0>
   1c758:	andeq	r1, r3, ip, lsr r1
   1c75c:	ldr	r3, [pc, #4]	; 1c768 <__assert_fail@plt+0xb5dc>
   1c760:	mvn	r2, #0
   1c764:	b	1aa0c <__assert_fail@plt+0x9880>
   1c768:	andeq	r1, r3, r4, lsr r1
   1c76c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c770:	movw	r4, #4388	; 0x1124
   1c774:	movt	r4, #3
   1c778:	strd	r6, [sp, #8]
   1c77c:	strd	r8, [sp, #16]
   1c780:	strd	sl, [sp, #24]
   1c784:	mov	sl, r0
   1c788:	str	lr, [sp, #32]
   1c78c:	sub	sp, sp, #44	; 0x2c
   1c790:	bl	11090 <__errno_location@plt>
   1c794:	ldr	r3, [r0]
   1c798:	mov	r8, r0
   1c79c:	ldr	r2, [r4, #4]
   1c7a0:	ldr	r5, [r4]
   1c7a4:	str	r3, [sp, #28]
   1c7a8:	cmp	r2, #0
   1c7ac:	bgt	1c808 <__assert_fail@plt+0xb67c>
   1c7b0:	add	r3, r4, #8
   1c7b4:	str	r2, [sp, #36]	; 0x24
   1c7b8:	rsb	r2, r2, #1
   1c7bc:	cmp	r5, r3
   1c7c0:	beq	1c8d0 <__assert_fail@plt+0xb744>
   1c7c4:	mov	r1, #8
   1c7c8:	mov	r0, r5
   1c7cc:	mvn	r3, #-2147483648	; 0x80000000
   1c7d0:	str	r1, [sp]
   1c7d4:	add	r1, sp, #36	; 0x24
   1c7d8:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c7dc:	mov	r5, r0
   1c7e0:	str	r0, [r4]
   1c7e4:	ldr	r0, [r4, #4]
   1c7e8:	mov	r1, #0
   1c7ec:	ldr	r2, [sp, #36]	; 0x24
   1c7f0:	sub	r2, r2, r0
   1c7f4:	add	r0, r5, r0, lsl #3
   1c7f8:	lsl	r2, r2, #3
   1c7fc:	bl	110b4 <memset@plt>
   1c800:	ldr	r3, [sp, #36]	; 0x24
   1c804:	str	r3, [r4, #4]
   1c808:	ldr	ip, [r4, #16]
   1c80c:	mvn	r3, #0
   1c810:	mov	r2, sl
   1c814:	ldr	r7, [r4, #20]
   1c818:	ldr	fp, [pc, #220]	; 1c8fc <__assert_fail@plt+0xb770>
   1c81c:	ldr	r9, [r5]
   1c820:	orr	r7, r7, #1
   1c824:	ldr	r6, [r5, #4]
   1c828:	str	ip, [sp]
   1c82c:	ldr	ip, [r4, #56]	; 0x38
   1c830:	mov	r1, r9
   1c834:	stmib	sp, {r7, fp}
   1c838:	ldr	lr, [r4, #60]	; 0x3c
   1c83c:	mov	r0, r6
   1c840:	str	ip, [sp, #12]
   1c844:	str	lr, [sp, #16]
   1c848:	bl	19020 <__assert_fail@plt+0x7e94>
   1c84c:	cmp	r9, r0
   1c850:	bhi	1c8a8 <__assert_fail@plt+0xb71c>
   1c854:	add	r9, r0, #1
   1c858:	movw	r3, #4540	; 0x11bc
   1c85c:	movt	r3, #3
   1c860:	cmp	r6, r3
   1c864:	str	r9, [r5]
   1c868:	beq	1c874 <__assert_fail@plt+0xb6e8>
   1c86c:	mov	r0, r6
   1c870:	bl	18ccc <__assert_fail@plt+0x7b40>
   1c874:	mov	r0, r9
   1c878:	bl	1d094 <__assert_fail@plt+0xbf08>
   1c87c:	ldr	r3, [r4, #16]
   1c880:	mov	r2, sl
   1c884:	mov	r1, r9
   1c888:	mov	r6, r0
   1c88c:	ldr	lr, [r4, #56]	; 0x38
   1c890:	ldr	ip, [r4, #60]	; 0x3c
   1c894:	str	r0, [r5, #4]
   1c898:	stm	sp, {r3, r7, fp, lr}
   1c89c:	mvn	r3, #0
   1c8a0:	str	ip, [sp, #16]
   1c8a4:	bl	19020 <__assert_fail@plt+0x7e94>
   1c8a8:	ldr	r3, [sp, #28]
   1c8ac:	mov	r0, r6
   1c8b0:	str	r3, [r8]
   1c8b4:	add	sp, sp, #44	; 0x2c
   1c8b8:	ldrd	r4, [sp]
   1c8bc:	ldrd	r6, [sp, #8]
   1c8c0:	ldrd	r8, [sp, #16]
   1c8c4:	ldrd	sl, [sp, #24]
   1c8c8:	add	sp, sp, #32
   1c8cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8d0:	mov	r0, #8
   1c8d4:	mvn	r3, #-2147483648	; 0x80000000
   1c8d8:	add	r1, sp, #36	; 0x24
   1c8dc:	str	r0, [sp]
   1c8e0:	mov	r0, #0
   1c8e4:	bl	1d338 <__assert_fail@plt+0xc1ac>
   1c8e8:	ldrd	r2, [r4, #8]
   1c8ec:	mov	r5, r0
   1c8f0:	str	r0, [r4]
   1c8f4:	strd	r2, [r0]
   1c8f8:	b	1c7e4 <__assert_fail@plt+0xb658>
   1c8fc:	andeq	r1, r3, ip, lsr r1
   1c900:	mov	r2, #3
   1c904:	mov	r1, #0
   1c908:	b	1e7bc <__assert_fail@plt+0xd630>
   1c90c:	cmp	r1, #0
   1c910:	strd	r4, [sp, #-16]!
   1c914:	mov	ip, r3
   1c918:	str	r6, [sp, #8]
   1c91c:	mov	r4, r0
   1c920:	str	lr, [sp, #12]
   1c924:	sub	sp, sp, #32
   1c928:	ldr	r5, [sp, #48]	; 0x30
   1c92c:	ldr	r6, [sp, #52]	; 0x34
   1c930:	beq	1ca74 <__assert_fail@plt+0xb8e8>
   1c934:	mov	r3, r1
   1c938:	mov	r1, #1
   1c93c:	stm	sp, {r2, ip}
   1c940:	movw	r2, #64972	; 0xfdcc
   1c944:	movt	r2, #1
   1c948:	bl	110d8 <__fprintf_chk@plt>
   1c94c:	mov	r2, #5
   1c950:	movw	r1, #64992	; 0xfde0
   1c954:	movt	r1, #1
   1c958:	mov	r0, #0
   1c95c:	bl	10f7c <dcgettext@plt>
   1c960:	movw	ip, #2022	; 0x7e6
   1c964:	mov	r3, r0
   1c968:	mov	r1, #1
   1c96c:	movw	r2, #184	; 0xb8
   1c970:	movt	r2, #2
   1c974:	mov	r0, r4
   1c978:	str	ip, [sp]
   1c97c:	bl	110d8 <__fprintf_chk@plt>
   1c980:	mov	r1, r4
   1c984:	mov	r0, #10
   1c988:	bl	10f70 <fputc_unlocked@plt>
   1c98c:	mov	r2, #5
   1c990:	movw	r1, #64996	; 0xfde4
   1c994:	movt	r1, #1
   1c998:	mov	r0, #0
   1c99c:	bl	10f7c <dcgettext@plt>
   1c9a0:	mov	r2, r0
   1c9a4:	mov	r1, #1
   1c9a8:	movw	r3, #65168	; 0xfe90
   1c9ac:	movt	r3, #1
   1c9b0:	mov	r0, r4
   1c9b4:	bl	110d8 <__fprintf_chk@plt>
   1c9b8:	mov	r1, r4
   1c9bc:	mov	r0, #10
   1c9c0:	bl	10f70 <fputc_unlocked@plt>
   1c9c4:	cmp	r6, #9
   1c9c8:	ldrls	pc, [pc, r6, lsl #2]
   1c9cc:	b	1cce0 <__assert_fail@plt+0xbb54>
   1c9d0:	andeq	ip, r1, r0, ror #20
   1c9d4:	muleq	r1, r0, sl
   1c9d8:	andeq	ip, r1, ip, asr #21
   1c9dc:	andeq	ip, r1, ip, lsl #22
   1c9e0:	andeq	ip, r1, r4, asr fp
   1c9e4:	andeq	ip, r1, ip, lsl #23
   1c9e8:	ldrdeq	ip, [r1], -r4
   1c9ec:	andeq	ip, r1, r8, lsr #24
   1c9f0:	andeq	ip, r1, r0, lsl #25
   1c9f4:	strdeq	ip, [r1], -r8
   1c9f8:	movw	r1, #65472	; 0xffc0
   1c9fc:	movt	r1, #1
   1ca00:	mov	r2, #5
   1ca04:	mov	r0, #0
   1ca08:	bl	10f7c <dcgettext@plt>
   1ca0c:	ldr	lr, [r5, #4]
   1ca10:	mov	r2, r0
   1ca14:	mov	r1, #1
   1ca18:	mov	r0, r4
   1ca1c:	ldr	r3, [r5, #8]
   1ca20:	ldr	ip, [r5, #32]
   1ca24:	str	lr, [sp]
   1ca28:	ldr	lr, [r5, #12]
   1ca2c:	str	ip, [sp, #28]
   1ca30:	ldr	ip, [r5, #28]
   1ca34:	str	r3, [sp, #4]
   1ca38:	ldr	r3, [r5, #16]
   1ca3c:	str	lr, [sp, #8]
   1ca40:	ldr	lr, [r5, #20]
   1ca44:	str	ip, [sp, #24]
   1ca48:	ldr	ip, [r5, #24]
   1ca4c:	str	r3, [sp, #12]
   1ca50:	ldr	r3, [r5]
   1ca54:	str	lr, [sp, #16]
   1ca58:	str	ip, [sp, #20]
   1ca5c:	bl	110d8 <__fprintf_chk@plt>
   1ca60:	add	sp, sp, #32
   1ca64:	ldrd	r4, [sp]
   1ca68:	ldr	r6, [sp, #8]
   1ca6c:	add	sp, sp, #12
   1ca70:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca74:	mov	r3, r2
   1ca78:	mov	r1, #1
   1ca7c:	str	ip, [sp]
   1ca80:	movw	r2, #64984	; 0xfdd8
   1ca84:	movt	r2, #1
   1ca88:	bl	110d8 <__fprintf_chk@plt>
   1ca8c:	b	1c94c <__assert_fail@plt+0xb7c0>
   1ca90:	mov	r2, #5
   1ca94:	movw	r1, #65204	; 0xfeb4
   1ca98:	movt	r1, #1
   1ca9c:	mov	r0, #0
   1caa0:	bl	10f7c <dcgettext@plt>
   1caa4:	ldr	r3, [r5]
   1caa8:	mov	r2, r0
   1caac:	mov	r1, #1
   1cab0:	mov	r0, r4
   1cab4:	add	sp, sp, #32
   1cab8:	ldrd	r4, [sp]
   1cabc:	ldr	r6, [sp, #8]
   1cac0:	ldr	lr, [sp, #12]
   1cac4:	add	sp, sp, #16
   1cac8:	b	110d8 <__fprintf_chk@plt>
   1cacc:	mov	r2, #5
   1cad0:	movw	r1, #65220	; 0xfec4
   1cad4:	movt	r1, #1
   1cad8:	mov	r0, #0
   1cadc:	bl	10f7c <dcgettext@plt>
   1cae0:	ldm	r5, {r3, ip}
   1cae4:	mov	r2, r0
   1cae8:	mov	r1, #1
   1caec:	mov	r0, r4
   1caf0:	str	ip, [sp, #48]	; 0x30
   1caf4:	add	sp, sp, #32
   1caf8:	ldrd	r4, [sp]
   1cafc:	ldr	r6, [sp, #8]
   1cb00:	ldr	lr, [sp, #12]
   1cb04:	add	sp, sp, #16
   1cb08:	b	110d8 <__fprintf_chk@plt>
   1cb0c:	mov	r2, #5
   1cb10:	movw	r1, #65244	; 0xfedc
   1cb14:	movt	r1, #1
   1cb18:	mov	r0, #0
   1cb1c:	bl	10f7c <dcgettext@plt>
   1cb20:	ldm	r5, {r3, lr}
   1cb24:	mov	r2, r0
   1cb28:	mov	r1, #1
   1cb2c:	mov	r0, r4
   1cb30:	ldr	ip, [r5, #8]
   1cb34:	str	lr, [sp, #48]	; 0x30
   1cb38:	str	ip, [sp, #52]	; 0x34
   1cb3c:	add	sp, sp, #32
   1cb40:	ldrd	r4, [sp]
   1cb44:	ldr	r6, [sp, #8]
   1cb48:	ldr	lr, [sp, #12]
   1cb4c:	add	sp, sp, #16
   1cb50:	b	110d8 <__fprintf_chk@plt>
   1cb54:	mov	r2, #5
   1cb58:	movw	r1, #65272	; 0xfef8
   1cb5c:	movt	r1, #1
   1cb60:	mov	r0, #0
   1cb64:	bl	10f7c <dcgettext@plt>
   1cb68:	ldmib	r5, {r3, ip, lr}
   1cb6c:	mov	r2, r0
   1cb70:	mov	r1, #1
   1cb74:	mov	r0, r4
   1cb78:	str	r3, [sp]
   1cb7c:	ldr	r3, [r5]
   1cb80:	stmib	sp, {ip, lr}
   1cb84:	bl	110d8 <__fprintf_chk@plt>
   1cb88:	b	1ca60 <__assert_fail@plt+0xb8d4>
   1cb8c:	mov	r2, #5
   1cb90:	movw	r1, #65304	; 0xff18
   1cb94:	movt	r1, #1
   1cb98:	mov	r0, #0
   1cb9c:	bl	10f7c <dcgettext@plt>
   1cba0:	ldmib	r5, {ip, lr}
   1cba4:	mov	r2, r0
   1cba8:	mov	r1, #1
   1cbac:	mov	r0, r4
   1cbb0:	ldr	r3, [r5, #16]
   1cbb4:	str	ip, [sp]
   1cbb8:	ldr	ip, [r5, #12]
   1cbbc:	str	r3, [sp, #12]
   1cbc0:	ldr	r3, [r5]
   1cbc4:	str	lr, [sp, #4]
   1cbc8:	str	ip, [sp, #8]
   1cbcc:	bl	110d8 <__fprintf_chk@plt>
   1cbd0:	b	1ca60 <__assert_fail@plt+0xb8d4>
   1cbd4:	mov	r2, #5
   1cbd8:	movw	r1, #65340	; 0xff3c
   1cbdc:	movt	r1, #1
   1cbe0:	mov	r0, #0
   1cbe4:	bl	10f7c <dcgettext@plt>
   1cbe8:	ldr	lr, [r5, #4]
   1cbec:	mov	r2, r0
   1cbf0:	mov	r1, #1
   1cbf4:	mov	r0, r4
   1cbf8:	ldr	r3, [r5, #8]
   1cbfc:	ldr	ip, [r5, #20]
   1cc00:	str	lr, [sp]
   1cc04:	ldr	lr, [r5, #12]
   1cc08:	str	ip, [sp, #16]
   1cc0c:	ldr	ip, [r5, #16]
   1cc10:	str	r3, [sp, #4]
   1cc14:	ldr	r3, [r5]
   1cc18:	str	lr, [sp, #8]
   1cc1c:	str	ip, [sp, #12]
   1cc20:	bl	110d8 <__fprintf_chk@plt>
   1cc24:	b	1ca60 <__assert_fail@plt+0xb8d4>
   1cc28:	mov	r2, #5
   1cc2c:	movw	r1, #65380	; 0xff64
   1cc30:	movt	r1, #1
   1cc34:	mov	r0, #0
   1cc38:	bl	10f7c <dcgettext@plt>
   1cc3c:	ldmib	r5, {r3, ip}
   1cc40:	mov	r2, r0
   1cc44:	mov	r1, #1
   1cc48:	mov	r0, r4
   1cc4c:	ldr	lr, [r5, #24]
   1cc50:	str	r3, [sp]
   1cc54:	ldr	r3, [r5, #12]
   1cc58:	str	lr, [sp, #20]
   1cc5c:	ldr	lr, [r5, #20]
   1cc60:	str	ip, [sp, #4]
   1cc64:	ldr	ip, [r5, #16]
   1cc68:	str	r3, [sp, #8]
   1cc6c:	ldr	r3, [r5]
   1cc70:	str	ip, [sp, #12]
   1cc74:	str	lr, [sp, #16]
   1cc78:	bl	110d8 <__fprintf_chk@plt>
   1cc7c:	b	1ca60 <__assert_fail@plt+0xb8d4>
   1cc80:	mov	r2, #5
   1cc84:	movw	r1, #65424	; 0xff90
   1cc88:	movt	r1, #1
   1cc8c:	mov	r0, #0
   1cc90:	bl	10f7c <dcgettext@plt>
   1cc94:	ldmib	r5, {ip, lr}
   1cc98:	mov	r2, r0
   1cc9c:	mov	r1, #1
   1cca0:	mov	r0, r4
   1cca4:	ldr	r3, [r5, #28]
   1cca8:	str	ip, [sp]
   1ccac:	ldr	ip, [r5, #12]
   1ccb0:	str	r3, [sp, #24]
   1ccb4:	ldr	r3, [r5, #24]
   1ccb8:	str	lr, [sp, #4]
   1ccbc:	ldr	lr, [r5, #16]
   1ccc0:	str	ip, [sp, #8]
   1ccc4:	ldr	ip, [r5, #20]
   1ccc8:	str	r3, [sp, #20]
   1cccc:	ldr	r3, [r5]
   1ccd0:	str	lr, [sp, #12]
   1ccd4:	str	ip, [sp, #16]
   1ccd8:	bl	110d8 <__fprintf_chk@plt>
   1ccdc:	b	1ca60 <__assert_fail@plt+0xb8d4>
   1cce0:	movw	r1, #65524	; 0xfff4
   1cce4:	movt	r1, #1
   1cce8:	b	1ca00 <__assert_fail@plt+0xb874>
   1ccec:	strd	r4, [sp, #-12]!
   1ccf0:	str	lr, [sp, #8]
   1ccf4:	sub	sp, sp, #12
   1ccf8:	ldr	r5, [sp, #24]
   1ccfc:	ldr	ip, [r5]
   1cd00:	cmp	ip, #0
   1cd04:	beq	1cd20 <__assert_fail@plt+0xbb94>
   1cd08:	mov	lr, r5
   1cd0c:	mov	ip, #0
   1cd10:	ldr	r4, [lr, #4]!
   1cd14:	add	ip, ip, #1
   1cd18:	cmp	r4, #0
   1cd1c:	bne	1cd10 <__assert_fail@plt+0xbb84>
   1cd20:	stm	sp, {r5, ip}
   1cd24:	bl	1c90c <__assert_fail@plt+0xb780>
   1cd28:	add	sp, sp, #12
   1cd2c:	ldrd	r4, [sp]
   1cd30:	add	sp, sp, #8
   1cd34:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd38:	push	{lr}		; (str lr, [sp, #-4]!)
   1cd3c:	sub	sp, sp, #52	; 0x34
   1cd40:	ldr	ip, [sp, #56]	; 0x38
   1cd44:	ldr	lr, [ip]
   1cd48:	cmp	lr, #0
   1cd4c:	str	lr, [sp, #8]
   1cd50:	beq	1cde8 <__assert_fail@plt+0xbc5c>
   1cd54:	ldr	lr, [ip, #4]
   1cd58:	cmp	lr, #0
   1cd5c:	str	lr, [sp, #12]
   1cd60:	beq	1cdfc <__assert_fail@plt+0xbc70>
   1cd64:	ldr	lr, [ip, #8]
   1cd68:	cmp	lr, #0
   1cd6c:	str	lr, [sp, #16]
   1cd70:	beq	1ce04 <__assert_fail@plt+0xbc78>
   1cd74:	ldr	lr, [ip, #12]
   1cd78:	cmp	lr, #0
   1cd7c:	str	lr, [sp, #20]
   1cd80:	beq	1ce0c <__assert_fail@plt+0xbc80>
   1cd84:	ldr	lr, [ip, #16]
   1cd88:	cmp	lr, #0
   1cd8c:	str	lr, [sp, #24]
   1cd90:	beq	1ce14 <__assert_fail@plt+0xbc88>
   1cd94:	ldr	lr, [ip, #20]
   1cd98:	cmp	lr, #0
   1cd9c:	str	lr, [sp, #28]
   1cda0:	beq	1ce1c <__assert_fail@plt+0xbc90>
   1cda4:	ldr	lr, [ip, #24]
   1cda8:	cmp	lr, #0
   1cdac:	str	lr, [sp, #32]
   1cdb0:	beq	1ce24 <__assert_fail@plt+0xbc98>
   1cdb4:	ldr	lr, [ip, #28]
   1cdb8:	cmp	lr, #0
   1cdbc:	str	lr, [sp, #36]	; 0x24
   1cdc0:	beq	1ce2c <__assert_fail@plt+0xbca0>
   1cdc4:	ldr	lr, [ip, #32]
   1cdc8:	cmp	lr, #0
   1cdcc:	str	lr, [sp, #40]	; 0x28
   1cdd0:	beq	1ce34 <__assert_fail@plt+0xbca8>
   1cdd4:	ldr	ip, [ip, #36]	; 0x24
   1cdd8:	cmp	ip, #0
   1cddc:	str	ip, [sp, #44]	; 0x2c
   1cde0:	movne	lr, #10
   1cde4:	moveq	lr, #9
   1cde8:	add	ip, sp, #8
   1cdec:	stm	sp, {ip, lr}
   1cdf0:	bl	1c90c <__assert_fail@plt+0xb780>
   1cdf4:	add	sp, sp, #52	; 0x34
   1cdf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdfc:	mov	lr, #1
   1ce00:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce04:	mov	lr, #2
   1ce08:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce0c:	mov	lr, #3
   1ce10:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce14:	mov	lr, #4
   1ce18:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce1c:	mov	lr, #5
   1ce20:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce24:	mov	lr, #6
   1ce28:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce2c:	mov	lr, #7
   1ce30:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce34:	mov	lr, #8
   1ce38:	b	1cde8 <__assert_fail@plt+0xbc5c>
   1ce3c:	push	{r3}		; (str r3, [sp, #-4]!)
   1ce40:	push	{lr}		; (str lr, [sp, #-4]!)
   1ce44:	sub	sp, sp, #56	; 0x38
   1ce48:	ldr	ip, [sp, #64]	; 0x40
   1ce4c:	add	r3, sp, #64	; 0x40
   1ce50:	str	r3, [sp, #12]
   1ce54:	cmp	ip, #0
   1ce58:	str	ip, [sp, #16]
   1ce5c:	beq	1cef4 <__assert_fail@plt+0xbd68>
   1ce60:	ldr	ip, [sp, #68]	; 0x44
   1ce64:	cmp	ip, #0
   1ce68:	str	ip, [sp, #20]
   1ce6c:	beq	1cf18 <__assert_fail@plt+0xbd8c>
   1ce70:	ldr	ip, [sp, #72]	; 0x48
   1ce74:	cmp	ip, #0
   1ce78:	str	ip, [sp, #24]
   1ce7c:	beq	1cf20 <__assert_fail@plt+0xbd94>
   1ce80:	ldr	ip, [sp, #76]	; 0x4c
   1ce84:	cmp	ip, #0
   1ce88:	str	ip, [sp, #28]
   1ce8c:	beq	1cf28 <__assert_fail@plt+0xbd9c>
   1ce90:	ldr	ip, [sp, #80]	; 0x50
   1ce94:	cmp	ip, #0
   1ce98:	str	ip, [sp, #32]
   1ce9c:	beq	1cf30 <__assert_fail@plt+0xbda4>
   1cea0:	ldr	ip, [sp, #84]	; 0x54
   1cea4:	cmp	ip, #0
   1cea8:	str	ip, [sp, #36]	; 0x24
   1ceac:	beq	1cf38 <__assert_fail@plt+0xbdac>
   1ceb0:	ldr	ip, [sp, #88]	; 0x58
   1ceb4:	cmp	ip, #0
   1ceb8:	str	ip, [sp, #40]	; 0x28
   1cebc:	beq	1cf40 <__assert_fail@plt+0xbdb4>
   1cec0:	ldr	ip, [sp, #92]	; 0x5c
   1cec4:	cmp	ip, #0
   1cec8:	str	ip, [sp, #44]	; 0x2c
   1cecc:	beq	1cf48 <__assert_fail@plt+0xbdbc>
   1ced0:	ldr	ip, [sp, #96]	; 0x60
   1ced4:	cmp	ip, #0
   1ced8:	str	ip, [sp, #48]	; 0x30
   1cedc:	beq	1cf50 <__assert_fail@plt+0xbdc4>
   1cee0:	ldr	r3, [sp, #100]	; 0x64
   1cee4:	cmp	r3, #0
   1cee8:	str	r3, [sp, #52]	; 0x34
   1ceec:	movne	ip, #10
   1cef0:	moveq	ip, #9
   1cef4:	ldr	r3, [sp, #60]	; 0x3c
   1cef8:	add	lr, sp, #16
   1cefc:	str	lr, [sp]
   1cf00:	str	ip, [sp, #4]
   1cf04:	bl	1c90c <__assert_fail@plt+0xb780>
   1cf08:	add	sp, sp, #56	; 0x38
   1cf0c:	pop	{lr}		; (ldr lr, [sp], #4)
   1cf10:	add	sp, sp, #4
   1cf14:	bx	lr
   1cf18:	mov	ip, #1
   1cf1c:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf20:	mov	ip, #2
   1cf24:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf28:	mov	ip, #3
   1cf2c:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf30:	mov	ip, #4
   1cf34:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf38:	mov	ip, #5
   1cf3c:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf40:	mov	ip, #6
   1cf44:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf48:	mov	ip, #7
   1cf4c:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf50:	mov	ip, #8
   1cf54:	b	1cef4 <__assert_fail@plt+0xbd68>
   1cf58:	movw	r3, #4484	; 0x1184
   1cf5c:	movt	r3, #3
   1cf60:	str	r4, [sp, #-8]!
   1cf64:	mov	r0, #10
   1cf68:	ldr	r1, [r3]
   1cf6c:	str	lr, [sp, #4]
   1cf70:	bl	10f70 <fputc_unlocked@plt>
   1cf74:	mov	r2, #5
   1cf78:	movw	r1, #48	; 0x30
   1cf7c:	movt	r1, #2
   1cf80:	mov	r0, #0
   1cf84:	bl	10f7c <dcgettext@plt>
   1cf88:	mov	r1, r0
   1cf8c:	movw	r2, #68	; 0x44
   1cf90:	movt	r2, #2
   1cf94:	mov	r0, #1
   1cf98:	bl	110c0 <__printf_chk@plt>
   1cf9c:	mov	r2, #5
   1cfa0:	movw	r1, #92	; 0x5c
   1cfa4:	movt	r1, #2
   1cfa8:	mov	r0, #0
   1cfac:	bl	10f7c <dcgettext@plt>
   1cfb0:	mov	r1, r0
   1cfb4:	movw	r3, #62904	; 0xf5b8
   1cfb8:	movt	r3, #1
   1cfbc:	movw	r2, #62944	; 0xf5e0
   1cfc0:	movt	r2, #1
   1cfc4:	mov	r0, #1
   1cfc8:	bl	110c0 <__printf_chk@plt>
   1cfcc:	mov	r2, #5
   1cfd0:	movw	r1, #112	; 0x70
   1cfd4:	movt	r1, #2
   1cfd8:	mov	r0, #0
   1cfdc:	bl	10f7c <dcgettext@plt>
   1cfe0:	mov	r1, r0
   1cfe4:	movw	r2, #152	; 0x98
   1cfe8:	movt	r2, #2
   1cfec:	mov	r0, #1
   1cff0:	ldr	r4, [sp]
   1cff4:	ldr	lr, [sp, #4]
   1cff8:	add	sp, sp, #8
   1cffc:	b	110c0 <__printf_chk@plt>
   1d000:	strd	r4, [sp, #-16]!
   1d004:	mov	r4, r0
   1d008:	mov	r5, r2
   1d00c:	str	r6, [sp, #8]
   1d010:	mov	r6, r1
   1d014:	str	lr, [sp, #12]
   1d018:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d01c:	cmp	r0, #0
   1d020:	beq	1d034 <__assert_fail@plt+0xbea8>
   1d024:	ldrd	r4, [sp]
   1d028:	ldr	r6, [sp, #8]
   1d02c:	add	sp, sp, #12
   1d030:	pop	{pc}		; (ldr pc, [sp], #4)
   1d034:	cmp	r4, #0
   1d038:	beq	1d048 <__assert_fail@plt+0xbebc>
   1d03c:	cmp	r6, #0
   1d040:	cmpne	r5, #0
   1d044:	beq	1d024 <__assert_fail@plt+0xbe98>
   1d048:	bl	1d604 <__assert_fail@plt+0xc478>
   1d04c:	str	r4, [sp, #-8]!
   1d050:	str	lr, [sp, #4]
   1d054:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d058:	cmp	r0, #0
   1d05c:	beq	1d06c <__assert_fail@plt+0xbee0>
   1d060:	ldr	r4, [sp]
   1d064:	add	sp, sp, #4
   1d068:	pop	{pc}		; (ldr pc, [sp], #4)
   1d06c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d070:	str	r4, [sp, #-8]!
   1d074:	str	lr, [sp, #4]
   1d078:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d07c:	cmp	r0, #0
   1d080:	beq	1d090 <__assert_fail@plt+0xbf04>
   1d084:	ldr	r4, [sp]
   1d088:	add	sp, sp, #4
   1d08c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d090:	bl	1d604 <__assert_fail@plt+0xc478>
   1d094:	str	r4, [sp, #-8]!
   1d098:	str	lr, [sp, #4]
   1d09c:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d0a0:	cmp	r0, #0
   1d0a4:	beq	1d0b4 <__assert_fail@plt+0xbf28>
   1d0a8:	ldr	r4, [sp]
   1d0ac:	add	sp, sp, #4
   1d0b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0b4:	bl	1d604 <__assert_fail@plt+0xc478>
   1d0b8:	strd	r4, [sp, #-16]!
   1d0bc:	mov	r5, r0
   1d0c0:	mov	r4, r1
   1d0c4:	str	r6, [sp, #8]
   1d0c8:	str	lr, [sp, #12]
   1d0cc:	bl	1e6dc <__assert_fail@plt+0xd550>
   1d0d0:	cmp	r0, #0
   1d0d4:	beq	1d0e8 <__assert_fail@plt+0xbf5c>
   1d0d8:	ldrd	r4, [sp]
   1d0dc:	ldr	r6, [sp, #8]
   1d0e0:	add	sp, sp, #12
   1d0e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0e8:	adds	r4, r4, #0
   1d0ec:	movne	r4, #1
   1d0f0:	cmp	r5, #0
   1d0f4:	moveq	r4, #1
   1d0f8:	cmp	r4, #0
   1d0fc:	beq	1d0d8 <__assert_fail@plt+0xbf4c>
   1d100:	bl	1d604 <__assert_fail@plt+0xc478>
   1d104:	cmp	r1, #0
   1d108:	orreq	r1, r1, #1
   1d10c:	str	r4, [sp, #-8]!
   1d110:	str	lr, [sp, #4]
   1d114:	bl	1e6dc <__assert_fail@plt+0xd550>
   1d118:	cmp	r0, #0
   1d11c:	beq	1d12c <__assert_fail@plt+0xbfa0>
   1d120:	ldr	r4, [sp]
   1d124:	add	sp, sp, #4
   1d128:	pop	{pc}		; (ldr pc, [sp], #4)
   1d12c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d130:	strd	r4, [sp, #-16]!
   1d134:	mov	r4, r0
   1d138:	mov	r5, r2
   1d13c:	str	r6, [sp, #8]
   1d140:	mov	r6, r1
   1d144:	str	lr, [sp, #12]
   1d148:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d14c:	cmp	r0, #0
   1d150:	beq	1d164 <__assert_fail@plt+0xbfd8>
   1d154:	ldrd	r4, [sp]
   1d158:	ldr	r6, [sp, #8]
   1d15c:	add	sp, sp, #12
   1d160:	pop	{pc}		; (ldr pc, [sp], #4)
   1d164:	cmp	r4, #0
   1d168:	beq	1d178 <__assert_fail@plt+0xbfec>
   1d16c:	cmp	r6, #0
   1d170:	cmpne	r5, #0
   1d174:	beq	1d154 <__assert_fail@plt+0xbfc8>
   1d178:	bl	1d604 <__assert_fail@plt+0xc478>
   1d17c:	cmp	r2, #0
   1d180:	cmpne	r1, #0
   1d184:	str	r4, [sp, #-8]!
   1d188:	moveq	r2, #1
   1d18c:	str	lr, [sp, #4]
   1d190:	moveq	r1, r2
   1d194:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d198:	cmp	r0, #0
   1d19c:	beq	1d1ac <__assert_fail@plt+0xc020>
   1d1a0:	ldr	r4, [sp]
   1d1a4:	add	sp, sp, #4
   1d1a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1ac:	bl	1d604 <__assert_fail@plt+0xc478>
   1d1b0:	mov	r2, r1
   1d1b4:	mov	r1, r0
   1d1b8:	str	r4, [sp, #-8]!
   1d1bc:	mov	r0, #0
   1d1c0:	str	lr, [sp, #4]
   1d1c4:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d1c8:	cmp	r0, #0
   1d1cc:	beq	1d1dc <__assert_fail@plt+0xc050>
   1d1d0:	ldr	r4, [sp]
   1d1d4:	add	sp, sp, #4
   1d1d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1dc:	bl	1d604 <__assert_fail@plt+0xc478>
   1d1e0:	cmp	r1, #0
   1d1e4:	cmpne	r0, #0
   1d1e8:	str	r4, [sp, #-8]!
   1d1ec:	moveq	r2, #1
   1d1f0:	movne	r2, r1
   1d1f4:	str	lr, [sp, #4]
   1d1f8:	movne	r1, r0
   1d1fc:	moveq	r1, r2
   1d200:	mov	r0, #0
   1d204:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d208:	cmp	r0, #0
   1d20c:	beq	1d21c <__assert_fail@plt+0xc090>
   1d210:	ldr	r4, [sp]
   1d214:	add	sp, sp, #4
   1d218:	pop	{pc}		; (ldr pc, [sp], #4)
   1d21c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d220:	cmp	r0, #0
   1d224:	strd	r4, [sp, #-16]!
   1d228:	mov	r5, r1
   1d22c:	ldr	r4, [r1]
   1d230:	str	r6, [sp, #8]
   1d234:	str	lr, [sp, #12]
   1d238:	beq	1d280 <__assert_fail@plt+0xc0f4>
   1d23c:	lsr	r3, r4, #1
   1d240:	add	r3, r3, #1
   1d244:	adds	r4, r4, r3
   1d248:	bcs	1d27c <__assert_fail@plt+0xc0f0>
   1d24c:	mov	r2, #1
   1d250:	mov	r1, r4
   1d254:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d258:	cmp	r0, #0
   1d25c:	beq	1d274 <__assert_fail@plt+0xc0e8>
   1d260:	ldr	r6, [sp, #8]
   1d264:	str	r4, [r5]
   1d268:	ldrd	r4, [sp]
   1d26c:	add	sp, sp, #12
   1d270:	pop	{pc}		; (ldr pc, [sp], #4)
   1d274:	cmp	r4, #0
   1d278:	beq	1d260 <__assert_fail@plt+0xc0d4>
   1d27c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d280:	cmp	r4, #0
   1d284:	mov	r2, #1
   1d288:	moveq	r4, #64	; 0x40
   1d28c:	mov	r1, r4
   1d290:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d294:	cmp	r0, #0
   1d298:	bne	1d260 <__assert_fail@plt+0xc0d4>
   1d29c:	b	1d27c <__assert_fail@plt+0xc0f0>
   1d2a0:	cmp	r0, #0
   1d2a4:	strd	r4, [sp, #-16]!
   1d2a8:	mov	r5, r1
   1d2ac:	ldr	r4, [r1]
   1d2b0:	str	r6, [sp, #8]
   1d2b4:	mov	r6, r2
   1d2b8:	str	lr, [sp, #12]
   1d2bc:	beq	1d304 <__assert_fail@plt+0xc178>
   1d2c0:	lsr	r3, r4, #1
   1d2c4:	add	r3, r3, #1
   1d2c8:	adds	r4, r4, r3
   1d2cc:	bcs	1d300 <__assert_fail@plt+0xc174>
   1d2d0:	mov	r1, r4
   1d2d4:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d2d8:	cmp	r0, #0
   1d2dc:	beq	1d2f4 <__assert_fail@plt+0xc168>
   1d2e0:	ldr	r6, [sp, #8]
   1d2e4:	str	r4, [r5]
   1d2e8:	ldrd	r4, [sp]
   1d2ec:	add	sp, sp, #12
   1d2f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2f4:	cmp	r4, #0
   1d2f8:	cmpne	r6, #0
   1d2fc:	beq	1d2e0 <__assert_fail@plt+0xc154>
   1d300:	bl	1d604 <__assert_fail@plt+0xc478>
   1d304:	cmp	r4, #0
   1d308:	bne	1d31c <__assert_fail@plt+0xc190>
   1d30c:	mov	r4, #64	; 0x40
   1d310:	udiv	r4, r4, r2
   1d314:	cmp	r2, #64	; 0x40
   1d318:	addhi	r4, r4, #1
   1d31c:	mov	r2, r6
   1d320:	mov	r1, r4
   1d324:	mov	r0, #0
   1d328:	bl	1ea60 <__assert_fail@plt+0xd8d4>
   1d32c:	cmp	r0, #0
   1d330:	bne	1d2e0 <__assert_fail@plt+0xc154>
   1d334:	b	1d300 <__assert_fail@plt+0xc174>
   1d338:	ldr	ip, [r1]
   1d33c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d340:	strd	r6, [sp, #8]
   1d344:	mov	r7, r1
   1d348:	mov	r6, r0
   1d34c:	str	r8, [sp, #16]
   1d350:	mvn	r8, r3
   1d354:	lsr	r8, r8, #31
   1d358:	str	lr, [sp, #20]
   1d35c:	asr	r1, ip, #1
   1d360:	ldr	lr, [sp, #24]
   1d364:	adds	r4, ip, r1
   1d368:	mvnvs	r4, #-2147483648	; 0x80000000
   1d36c:	cmp	r3, r4
   1d370:	movge	r1, #0
   1d374:	andlt	r1, r8, #1
   1d378:	cmp	r1, #0
   1d37c:	movne	r4, r3
   1d380:	smull	r0, r1, r4, lr
   1d384:	cmp	r1, r0, asr #31
   1d388:	bne	1d438 <__assert_fail@plt+0xc2ac>
   1d38c:	cmp	r0, #63	; 0x3f
   1d390:	mov	r5, r0
   1d394:	ble	1d404 <__assert_fail@plt+0xc278>
   1d398:	cmp	r6, #0
   1d39c:	sub	r1, r4, ip
   1d3a0:	streq	r6, [r7]
   1d3a4:	cmp	r1, r2
   1d3a8:	bge	1d3d8 <__assert_fail@plt+0xc24c>
   1d3ac:	adds	r4, ip, r2
   1d3b0:	bvs	1d434 <__assert_fail@plt+0xc2a8>
   1d3b4:	cmp	r4, r3
   1d3b8:	movle	r3, #0
   1d3bc:	andgt	r3, r8, #1
   1d3c0:	cmp	r3, #0
   1d3c4:	bne	1d434 <__assert_fail@plt+0xc2a8>
   1d3c8:	smull	r0, r1, r4, lr
   1d3cc:	cmp	r1, r0, asr #31
   1d3d0:	mov	r5, r0
   1d3d4:	bne	1d434 <__assert_fail@plt+0xc2a8>
   1d3d8:	mov	r1, r5
   1d3dc:	mov	r0, r6
   1d3e0:	bl	1e6dc <__assert_fail@plt+0xd550>
   1d3e4:	cmp	r0, #0
   1d3e8:	beq	1d418 <__assert_fail@plt+0xc28c>
   1d3ec:	ldr	r8, [sp, #16]
   1d3f0:	str	r4, [r7]
   1d3f4:	ldrd	r4, [sp]
   1d3f8:	ldrd	r6, [sp, #8]
   1d3fc:	add	sp, sp, #20
   1d400:	pop	{pc}		; (ldr pc, [sp], #4)
   1d404:	mov	r0, #64	; 0x40
   1d408:	sdiv	r4, r0, lr
   1d40c:	mls	r5, lr, r4, r0
   1d410:	sub	r5, r0, r5
   1d414:	b	1d398 <__assert_fail@plt+0xc20c>
   1d418:	adds	r5, r5, #0
   1d41c:	movne	r5, #1
   1d420:	cmp	r6, #0
   1d424:	movne	r6, r5
   1d428:	moveq	r6, #1
   1d42c:	cmp	r6, #0
   1d430:	beq	1d3ec <__assert_fail@plt+0xc260>
   1d434:	bl	1d604 <__assert_fail@plt+0xc478>
   1d438:	mvn	r0, #-2147483648	; 0x80000000
   1d43c:	b	1d408 <__assert_fail@plt+0xc27c>
   1d440:	mov	r1, #1
   1d444:	str	r4, [sp, #-8]!
   1d448:	str	lr, [sp, #4]
   1d44c:	bl	1e62c <__assert_fail@plt+0xd4a0>
   1d450:	cmp	r0, #0
   1d454:	beq	1d464 <__assert_fail@plt+0xc2d8>
   1d458:	ldr	r4, [sp]
   1d45c:	add	sp, sp, #4
   1d460:	pop	{pc}		; (ldr pc, [sp], #4)
   1d464:	bl	1d604 <__assert_fail@plt+0xc478>
   1d468:	mov	r1, #1
   1d46c:	str	r4, [sp, #-8]!
   1d470:	str	lr, [sp, #4]
   1d474:	bl	1e62c <__assert_fail@plt+0xd4a0>
   1d478:	cmp	r0, #0
   1d47c:	beq	1d48c <__assert_fail@plt+0xc300>
   1d480:	ldr	r4, [sp]
   1d484:	add	sp, sp, #4
   1d488:	pop	{pc}		; (ldr pc, [sp], #4)
   1d48c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d490:	str	r4, [sp, #-8]!
   1d494:	str	lr, [sp, #4]
   1d498:	bl	1e62c <__assert_fail@plt+0xd4a0>
   1d49c:	cmp	r0, #0
   1d4a0:	beq	1d4b0 <__assert_fail@plt+0xc324>
   1d4a4:	ldr	r4, [sp]
   1d4a8:	add	sp, sp, #4
   1d4ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4b0:	bl	1d604 <__assert_fail@plt+0xc478>
   1d4b4:	str	r4, [sp, #-8]!
   1d4b8:	str	lr, [sp, #4]
   1d4bc:	bl	1e62c <__assert_fail@plt+0xd4a0>
   1d4c0:	cmp	r0, #0
   1d4c4:	beq	1d4d4 <__assert_fail@plt+0xc348>
   1d4c8:	ldr	r4, [sp]
   1d4cc:	add	sp, sp, #4
   1d4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4d4:	bl	1d604 <__assert_fail@plt+0xc478>
   1d4d8:	strd	r4, [sp, #-16]!
   1d4dc:	mov	r4, r1
   1d4e0:	str	r6, [sp, #8]
   1d4e4:	mov	r6, r0
   1d4e8:	mov	r0, r1
   1d4ec:	str	lr, [sp, #12]
   1d4f0:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d4f4:	subs	r5, r0, #0
   1d4f8:	beq	1d51c <__assert_fail@plt+0xc390>
   1d4fc:	mov	r2, r4
   1d500:	mov	r1, r6
   1d504:	bl	10f34 <memcpy@plt>
   1d508:	mov	r0, r5
   1d50c:	ldrd	r4, [sp]
   1d510:	ldr	r6, [sp, #8]
   1d514:	add	sp, sp, #12
   1d518:	pop	{pc}		; (ldr pc, [sp], #4)
   1d51c:	bl	1d604 <__assert_fail@plt+0xc478>
   1d520:	strd	r4, [sp, #-16]!
   1d524:	mov	r4, r1
   1d528:	str	r6, [sp, #8]
   1d52c:	mov	r6, r0
   1d530:	mov	r0, r1
   1d534:	str	lr, [sp, #12]
   1d538:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d53c:	subs	r5, r0, #0
   1d540:	beq	1d564 <__assert_fail@plt+0xc3d8>
   1d544:	mov	r2, r4
   1d548:	mov	r1, r6
   1d54c:	bl	10f34 <memcpy@plt>
   1d550:	mov	r0, r5
   1d554:	ldrd	r4, [sp]
   1d558:	ldr	r6, [sp, #8]
   1d55c:	add	sp, sp, #12
   1d560:	pop	{pc}		; (ldr pc, [sp], #4)
   1d564:	bl	1d604 <__assert_fail@plt+0xc478>
   1d568:	strd	r4, [sp, #-16]!
   1d56c:	mov	r4, r1
   1d570:	str	r6, [sp, #8]
   1d574:	mov	r6, r0
   1d578:	add	r0, r1, #1
   1d57c:	str	lr, [sp, #12]
   1d580:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d584:	subs	r5, r0, #0
   1d588:	beq	1d5b4 <__assert_fail@plt+0xc428>
   1d58c:	mov	r3, #0
   1d590:	mov	r1, r6
   1d594:	mov	r2, r4
   1d598:	strb	r3, [r5, r4]
   1d59c:	bl	10f34 <memcpy@plt>
   1d5a0:	mov	r0, r5
   1d5a4:	ldrd	r4, [sp]
   1d5a8:	ldr	r6, [sp, #8]
   1d5ac:	add	sp, sp, #12
   1d5b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d5b4:	bl	1d604 <__assert_fail@plt+0xc478>
   1d5b8:	strd	r4, [sp, #-16]!
   1d5bc:	str	r6, [sp, #8]
   1d5c0:	mov	r6, r0
   1d5c4:	str	lr, [sp, #12]
   1d5c8:	bl	11078 <strlen@plt>
   1d5cc:	add	r4, r0, #1
   1d5d0:	mov	r0, r4
   1d5d4:	bl	1e6a0 <__assert_fail@plt+0xd514>
   1d5d8:	subs	r5, r0, #0
   1d5dc:	beq	1d600 <__assert_fail@plt+0xc474>
   1d5e0:	mov	r2, r4
   1d5e4:	mov	r1, r6
   1d5e8:	bl	10f34 <memcpy@plt>
   1d5ec:	mov	r0, r5
   1d5f0:	ldrd	r4, [sp]
   1d5f4:	ldr	r6, [sp, #8]
   1d5f8:	add	sp, sp, #12
   1d5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1d600:	bl	1d604 <__assert_fail@plt+0xc478>
   1d604:	movw	r3, #4384	; 0x1120
   1d608:	movt	r3, #3
   1d60c:	str	r4, [sp, #-8]!
   1d610:	ldr	r4, [r3]
   1d614:	mov	r2, #5
   1d618:	movw	r1, #232	; 0xe8
   1d61c:	movt	r1, #2
   1d620:	mov	r0, #0
   1d624:	str	lr, [sp, #4]
   1d628:	bl	10f7c <dcgettext@plt>
   1d62c:	mov	r3, r0
   1d630:	movw	r2, #63172	; 0xf6c4
   1d634:	movt	r2, #1
   1d638:	mov	r1, #0
   1d63c:	mov	r0, r4
   1d640:	bl	11000 <error@plt>
   1d644:	bl	11168 <abort@plt>
   1d648:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d64c:	strd	r6, [sp, #8]
   1d650:	mov	r6, r2
   1d654:	mov	r7, r3
   1d658:	str	r8, [sp, #16]
   1d65c:	mov	r2, r1
   1d660:	mov	r1, #0
   1d664:	str	lr, [sp, #20]
   1d668:	sub	sp, sp, #16
   1d66c:	mov	r8, r0
   1d670:	ldr	ip, [sp, #48]	; 0x30
   1d674:	add	r3, sp, #8
   1d678:	str	ip, [sp]
   1d67c:	bl	1d8d0 <__assert_fail@plt+0xc744>
   1d680:	subs	r4, r0, #0
   1d684:	bne	1d6d4 <__assert_fail@plt+0xc548>
   1d688:	ldrd	r4, [sp, #8]
   1d68c:	ldrd	r0, [sp, #40]	; 0x28
   1d690:	cmp	r5, r7
   1d694:	cmpeq	r4, r6
   1d698:	movcc	r3, #1
   1d69c:	movcs	r3, #0
   1d6a0:	cmp	r5, r1
   1d6a4:	cmpeq	r4, r0
   1d6a8:	orrhi	r3, r3, #1
   1d6ac:	cmp	r3, #0
   1d6b0:	bne	1d754 <__assert_fail@plt+0xc5c8>
   1d6b4:	mov	r0, r4
   1d6b8:	mov	r1, r5
   1d6bc:	add	sp, sp, #16
   1d6c0:	ldrd	r4, [sp]
   1d6c4:	ldrd	r6, [sp, #8]
   1d6c8:	ldr	r8, [sp, #16]
   1d6cc:	add	sp, sp, #20
   1d6d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6d4:	bl	11090 <__errno_location@plt>
   1d6d8:	cmp	r4, #1
   1d6dc:	moveq	r3, #75	; 0x4b
   1d6e0:	moveq	r4, r3
   1d6e4:	streq	r3, [r0]
   1d6e8:	beq	1d73c <__assert_fail@plt+0xc5b0>
   1d6ec:	cmp	r4, #3
   1d6f0:	beq	1d730 <__assert_fail@plt+0xc5a4>
   1d6f4:	ldr	r3, [sp, #56]	; 0x38
   1d6f8:	ldr	r4, [r0]
   1d6fc:	cmp	r3, #0
   1d700:	beq	1d748 <__assert_fail@plt+0xc5bc>
   1d704:	cmp	r4, #22
   1d708:	moveq	r4, #0
   1d70c:	mov	r0, r8
   1d710:	bl	1c76c <__assert_fail@plt+0xb5e0>
   1d714:	movw	r2, #64684	; 0xfcac
   1d718:	movt	r2, #1
   1d71c:	str	r0, [sp]
   1d720:	mov	r1, r4
   1d724:	ldr	r3, [sp, #52]	; 0x34
   1d728:	ldr	r0, [sp, #56]	; 0x38
   1d72c:	bl	11000 <error@plt>
   1d730:	mov	r3, #0
   1d734:	mov	r4, r3
   1d738:	str	r3, [r0]
   1d73c:	ldr	r3, [sp, #56]	; 0x38
   1d740:	cmp	r3, #0
   1d744:	bne	1d70c <__assert_fail@plt+0xc580>
   1d748:	mov	r3, #1
   1d74c:	str	r3, [sp, #56]	; 0x38
   1d750:	b	1d704 <__assert_fail@plt+0xc578>
   1d754:	bl	11090 <__errno_location@plt>
   1d758:	mov	r3, #0
   1d75c:	mvn	r2, #-1073741824	; 0xc0000000
   1d760:	cmp	r5, r3
   1d764:	cmpeq	r4, r2
   1d768:	movhi	r3, #75	; 0x4b
   1d76c:	movls	r3, #34	; 0x22
   1d770:	mov	r4, r3
   1d774:	str	r3, [r0]
   1d778:	ldr	r3, [sp, #56]	; 0x38
   1d77c:	cmp	r3, #0
   1d780:	moveq	r3, #1
   1d784:	str	r3, [sp, #56]	; 0x38
   1d788:	b	1d70c <__assert_fail@plt+0xc580>
   1d78c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d790:	mov	r1, #0
   1d794:	strd	r6, [sp, #8]
   1d798:	mov	r6, r2
   1d79c:	mov	r7, r3
   1d7a0:	str	r8, [sp, #16]
   1d7a4:	mov	r2, #10
   1d7a8:	mov	r8, r0
   1d7ac:	str	lr, [sp, #20]
   1d7b0:	sub	sp, sp, #16
   1d7b4:	ldr	ip, [sp, #48]	; 0x30
   1d7b8:	add	r3, sp, #8
   1d7bc:	str	ip, [sp]
   1d7c0:	bl	1d8d0 <__assert_fail@plt+0xc744>
   1d7c4:	subs	r4, r0, #0
   1d7c8:	bne	1d818 <__assert_fail@plt+0xc68c>
   1d7cc:	ldrd	r4, [sp, #8]
   1d7d0:	ldrd	r0, [sp, #40]	; 0x28
   1d7d4:	cmp	r7, r5
   1d7d8:	cmpeq	r6, r4
   1d7dc:	movhi	r3, #1
   1d7e0:	movls	r3, #0
   1d7e4:	cmp	r1, r5
   1d7e8:	cmpeq	r0, r4
   1d7ec:	orrcc	r3, r3, #1
   1d7f0:	cmp	r3, #0
   1d7f4:	bne	1d898 <__assert_fail@plt+0xc70c>
   1d7f8:	mov	r0, r4
   1d7fc:	mov	r1, r5
   1d800:	add	sp, sp, #16
   1d804:	ldrd	r4, [sp]
   1d808:	ldrd	r6, [sp, #8]
   1d80c:	ldr	r8, [sp, #16]
   1d810:	add	sp, sp, #20
   1d814:	pop	{pc}		; (ldr pc, [sp], #4)
   1d818:	bl	11090 <__errno_location@plt>
   1d81c:	cmp	r4, #1
   1d820:	moveq	r3, #75	; 0x4b
   1d824:	moveq	r4, r3
   1d828:	streq	r3, [r0]
   1d82c:	beq	1d888 <__assert_fail@plt+0xc6fc>
   1d830:	cmp	r4, #3
   1d834:	beq	1d87c <__assert_fail@plt+0xc6f0>
   1d838:	ldr	r3, [sp, #56]	; 0x38
   1d83c:	ldr	r4, [r0]
   1d840:	cmp	r3, #0
   1d844:	bne	1d850 <__assert_fail@plt+0xc6c4>
   1d848:	mov	r3, #1
   1d84c:	str	r3, [sp, #56]	; 0x38
   1d850:	cmp	r4, #22
   1d854:	moveq	r4, #0
   1d858:	mov	r0, r8
   1d85c:	bl	1c76c <__assert_fail@plt+0xb5e0>
   1d860:	movw	r2, #64684	; 0xfcac
   1d864:	movt	r2, #1
   1d868:	str	r0, [sp]
   1d86c:	mov	r1, r4
   1d870:	ldr	r3, [sp, #52]	; 0x34
   1d874:	ldr	r0, [sp, #56]	; 0x38
   1d878:	bl	11000 <error@plt>
   1d87c:	mov	r3, #0
   1d880:	mov	r4, r3
   1d884:	str	r3, [r0]
   1d888:	ldr	r3, [sp, #56]	; 0x38
   1d88c:	cmp	r3, #0
   1d890:	bne	1d858 <__assert_fail@plt+0xc6cc>
   1d894:	b	1d848 <__assert_fail@plt+0xc6bc>
   1d898:	bl	11090 <__errno_location@plt>
   1d89c:	mov	r3, #0
   1d8a0:	mvn	r2, #-1073741824	; 0xc0000000
   1d8a4:	cmp	r5, r3
   1d8a8:	cmpeq	r4, r2
   1d8ac:	movhi	r3, #75	; 0x4b
   1d8b0:	movls	r3, #34	; 0x22
   1d8b4:	mov	r4, r3
   1d8b8:	str	r3, [r0]
   1d8bc:	ldr	r3, [sp, #56]	; 0x38
   1d8c0:	cmp	r3, #0
   1d8c4:	moveq	r3, #1
   1d8c8:	str	r3, [sp, #56]	; 0x38
   1d8cc:	b	1d858 <__assert_fail@plt+0xc6cc>
   1d8d0:	cmp	r2, #36	; 0x24
   1d8d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d8d8:	strd	r6, [sp, #8]
   1d8dc:	strd	r8, [sp, #16]
   1d8e0:	strd	sl, [sp, #24]
   1d8e4:	str	lr, [sp, #32]
   1d8e8:	sub	sp, sp, #36	; 0x24
   1d8ec:	bhi	1e564 <__assert_fail@plt+0xd3d8>
   1d8f0:	cmp	r1, #0
   1d8f4:	mov	r6, r2
   1d8f8:	mov	r5, r1
   1d8fc:	mov	sl, r0
   1d900:	addeq	r5, sp, #28
   1d904:	mov	r9, r3
   1d908:	bl	11090 <__errno_location@plt>
   1d90c:	mov	r3, #0
   1d910:	mov	fp, r0
   1d914:	str	r3, [r0]
   1d918:	ldrb	r4, [sl]
   1d91c:	bl	11054 <__ctype_b_loc@plt>
   1d920:	ldr	r2, [r0]
   1d924:	lsl	r3, r4, #1
   1d928:	ldrh	r3, [r2, r3]
   1d92c:	tst	r3, #8192	; 0x2000
   1d930:	beq	1d94c <__assert_fail@plt+0xc7c0>
   1d934:	mov	r3, sl
   1d938:	ldrb	r4, [r3, #1]!
   1d93c:	lsl	r1, r4, #1
   1d940:	ldrh	r1, [r2, r1]
   1d944:	tst	r1, #8192	; 0x2000
   1d948:	bne	1d938 <__assert_fail@plt+0xc7ac>
   1d94c:	cmp	r4, #45	; 0x2d
   1d950:	beq	1d9ec <__assert_fail@plt+0xc860>
   1d954:	mov	r2, r6
   1d958:	mov	r3, #0
   1d95c:	mov	r1, r5
   1d960:	mov	r0, sl
   1d964:	bl	10f40 <__strtoull_internal@plt>
   1d968:	ldr	r8, [r5]
   1d96c:	mov	r6, r0
   1d970:	mov	r7, r1
   1d974:	cmp	r8, sl
   1d978:	beq	1d9d4 <__assert_fail@plt+0xc848>
   1d97c:	ldr	r4, [fp]
   1d980:	cmp	r4, #0
   1d984:	bne	1d9c4 <__assert_fail@plt+0xc838>
   1d988:	ldr	r3, [sp, #72]	; 0x48
   1d98c:	cmp	r3, #0
   1d990:	beq	1d9a0 <__assert_fail@plt+0xc814>
   1d994:	ldrb	sl, [r8]
   1d998:	cmp	sl, #0
   1d99c:	bne	1dd58 <__assert_fail@plt+0xcbcc>
   1d9a0:	strd	r6, [r9]
   1d9a4:	mov	r0, r4
   1d9a8:	add	sp, sp, #36	; 0x24
   1d9ac:	ldrd	r4, [sp]
   1d9b0:	ldrd	r6, [sp, #8]
   1d9b4:	ldrd	r8, [sp, #16]
   1d9b8:	ldrd	sl, [sp, #24]
   1d9bc:	add	sp, sp, #32
   1d9c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d9c4:	cmp	r4, #34	; 0x22
   1d9c8:	bne	1d9ec <__assert_fail@plt+0xc860>
   1d9cc:	mov	r4, #1
   1d9d0:	b	1d988 <__assert_fail@plt+0xc7fc>
   1d9d4:	ldr	r3, [sp, #72]	; 0x48
   1d9d8:	cmp	r3, #0
   1d9dc:	beq	1d9ec <__assert_fail@plt+0xc860>
   1d9e0:	ldrb	sl, [sl]
   1d9e4:	cmp	sl, #0
   1d9e8:	bne	1d9f4 <__assert_fail@plt+0xc868>
   1d9ec:	mov	r4, #4
   1d9f0:	b	1d9a4 <__assert_fail@plt+0xc818>
   1d9f4:	mov	r1, sl
   1d9f8:	mov	r0, r3
   1d9fc:	bl	11084 <strchr@plt>
   1da00:	cmp	r0, #0
   1da04:	movne	r4, #0
   1da08:	movne	r6, #1
   1da0c:	movne	r7, r4
   1da10:	beq	1d9ec <__assert_fail@plt+0xc860>
   1da14:	sub	r3, sl, #69	; 0x45
   1da18:	cmp	r3, #47	; 0x2f
   1da1c:	ldrls	pc, [pc, r3, lsl #2]
   1da20:	b	1db28 <__assert_fail@plt+0xc99c>
   1da24:	andeq	sp, r1, r4, ror #21
   1da28:	andeq	sp, r1, r8, lsr #22
   1da2c:	andeq	sp, r1, r4, ror #21
   1da30:	andeq	sp, r1, r8, lsr #22
   1da34:	andeq	sp, r1, r8, lsr #22
   1da38:	andeq	sp, r1, r8, lsr #22
   1da3c:	andeq	sp, r1, r4, ror #21
   1da40:	andeq	sp, r1, r8, lsr #22
   1da44:	andeq	sp, r1, r4, ror #21
   1da48:	andeq	sp, r1, r8, lsr #22
   1da4c:	andeq	sp, r1, r8, lsr #22
   1da50:	andeq	sp, r1, r4, ror #21
   1da54:	andeq	sp, r1, r8, lsr #22
   1da58:	andeq	sp, r1, r8, lsr #22
   1da5c:	andeq	sp, r1, r8, lsr #22
   1da60:	andeq	sp, r1, r4, ror #21
   1da64:	andeq	sp, r1, r8, lsr #22
   1da68:	andeq	sp, r1, r8, lsr #22
   1da6c:	andeq	sp, r1, r8, lsr #22
   1da70:	andeq	sp, r1, r8, lsr #22
   1da74:	andeq	sp, r1, r4, ror #21
   1da78:	andeq	sp, r1, r4, ror #21
   1da7c:	andeq	sp, r1, r8, lsr #22
   1da80:	andeq	sp, r1, r8, lsr #22
   1da84:	andeq	sp, r1, r8, lsr #22
   1da88:	andeq	sp, r1, r8, lsr #22
   1da8c:	andeq	sp, r1, r8, lsr #22
   1da90:	andeq	sp, r1, r8, lsr #22
   1da94:	andeq	sp, r1, r8, lsr #22
   1da98:	andeq	sp, r1, r8, lsr #22
   1da9c:	andeq	sp, r1, r8, lsr #22
   1daa0:	andeq	sp, r1, r8, lsr #22
   1daa4:	andeq	sp, r1, r8, lsr #22
   1daa8:	andeq	sp, r1, r8, lsr #22
   1daac:	andeq	sp, r1, r4, ror #21
   1dab0:	andeq	sp, r1, r8, lsr #22
   1dab4:	andeq	sp, r1, r8, lsr #22
   1dab8:	andeq	sp, r1, r8, lsr #22
   1dabc:	andeq	sp, r1, r4, ror #21
   1dac0:	andeq	sp, r1, r8, lsr #22
   1dac4:	andeq	sp, r1, r4, ror #21
   1dac8:	andeq	sp, r1, r8, lsr #22
   1dacc:	andeq	sp, r1, r8, lsr #22
   1dad0:	andeq	sp, r1, r8, lsr #22
   1dad4:	andeq	sp, r1, r8, lsr #22
   1dad8:	andeq	sp, r1, r8, lsr #22
   1dadc:	andeq	sp, r1, r8, lsr #22
   1dae0:	andeq	sp, r1, r4, ror #21
   1dae4:	mov	r1, #48	; 0x30
   1dae8:	ldr	r0, [sp, #72]	; 0x48
   1daec:	bl	11084 <strchr@plt>
   1daf0:	cmp	r0, #0
   1daf4:	beq	1db28 <__assert_fail@plt+0xc99c>
   1daf8:	ldrb	r3, [r8, #1]
   1dafc:	cmp	r3, #68	; 0x44
   1db00:	beq	1e0b8 <__assert_fail@plt+0xcf2c>
   1db04:	cmp	r3, #105	; 0x69
   1db08:	beq	1dd70 <__assert_fail@plt+0xcbe4>
   1db0c:	cmp	r3, #66	; 0x42
   1db10:	moveq	r3, #2
   1db14:	movne	r3, #1
   1db18:	moveq	ip, #1000	; 0x3e8
   1db1c:	movne	ip, #1024	; 0x400
   1db20:	str	r3, [sp, #12]
   1db24:	b	1db34 <__assert_fail@plt+0xc9a8>
   1db28:	mov	r3, #1
   1db2c:	mov	ip, #1024	; 0x400
   1db30:	str	r3, [sp, #12]
   1db34:	sub	sl, sl, #66	; 0x42
   1db38:	cmp	sl, #53	; 0x35
   1db3c:	ldrls	pc, [pc, sl, lsl #2]
   1db40:	b	1dd1c <__assert_fail@plt+0xcb90>
   1db44:	andeq	lr, r1, r4
   1db48:	andeq	sp, r1, ip, lsl sp
   1db4c:	andeq	sp, r1, ip, lsl sp
   1db50:	andeq	sp, r1, r4, lsr #31
   1db54:	andeq	sp, r1, ip, lsl sp
   1db58:	andeq	lr, r1, r0, lsr #32
   1db5c:	andeq	sp, r1, ip, lsl sp
   1db60:	andeq	sp, r1, ip, lsl sp
   1db64:	andeq	sp, r1, ip, lsl sp
   1db68:	andeq	sp, r1, r4, lsr #26
   1db6c:	andeq	sp, r1, ip, lsl sp
   1db70:	andeq	sp, r1, ip, asr #30
   1db74:	andeq	sp, r1, ip, lsl sp
   1db78:	andeq	sp, r1, ip, lsl sp
   1db7c:	strdeq	sp, [r1], -r0
   1db80:	andeq	sp, r1, ip, lsl sp
   1db84:	andeq	sp, r1, ip, lsl sp
   1db88:	andeq	sp, r1, ip, lsl sp
   1db8c:	muleq	r1, r0, lr
   1db90:	andeq	sp, r1, ip, lsl sp
   1db94:	andeq	sp, r1, ip, lsl sp
   1db98:	andeq	sp, r1, ip, lsl sp
   1db9c:	andeq	sp, r1, ip, lsl sp
   1dba0:	andeq	sp, r1, r4, asr #27
   1dba4:	andeq	sp, r1, ip, lsl ip
   1dba8:	andeq	sp, r1, ip, lsl sp
   1dbac:	andeq	sp, r1, ip, lsl sp
   1dbb0:	andeq	sp, r1, ip, lsl sp
   1dbb4:	andeq	sp, r1, ip, lsl sp
   1dbb8:	andeq	sp, r1, ip, lsl sp
   1dbbc:	andeq	sp, r1, ip, lsl sp
   1dbc0:	andeq	sp, r1, ip, lsl sp
   1dbc4:	andeq	sp, r1, r4, lsr #27
   1dbc8:	andeq	sp, r1, r4, lsl #26
   1dbcc:	andeq	sp, r1, ip, lsl sp
   1dbd0:	andeq	sp, r1, ip, lsl sp
   1dbd4:	andeq	sp, r1, ip, lsl sp
   1dbd8:	andeq	lr, r1, r0, lsr #32
   1dbdc:	andeq	sp, r1, ip, lsl sp
   1dbe0:	andeq	sp, r1, ip, lsl sp
   1dbe4:	andeq	sp, r1, ip, lsl sp
   1dbe8:	andeq	sp, r1, r4, lsr #26
   1dbec:	andeq	sp, r1, ip, lsl sp
   1dbf0:	andeq	sp, r1, ip, asr #30
   1dbf4:	andeq	sp, r1, ip, lsl sp
   1dbf8:	andeq	sp, r1, ip, lsl sp
   1dbfc:	andeq	sp, r1, ip, lsl sp
   1dc00:	andeq	sp, r1, ip, lsl sp
   1dc04:	andeq	sp, r1, ip, lsl sp
   1dc08:	andeq	sp, r1, ip, lsl sp
   1dc0c:	muleq	r1, r0, lr
   1dc10:	andeq	sp, r1, ip, lsl sp
   1dc14:	andeq	sp, r1, ip, lsl sp
   1dc18:	andeq	sp, r1, ip, lsl #27
   1dc1c:	asr	r3, ip, #31
   1dc20:	mov	r2, ip
   1dc24:	cmp	r7, #0
   1dc28:	mov	r1, #0
   1dc2c:	strd	r2, [sp]
   1dc30:	bne	1e170 <__assert_fail@plt+0xcfe4>
   1dc34:	umull	r6, r7, r6, ip
   1dc38:	mov	r2, r6
   1dc3c:	mov	r3, r7
   1dc40:	cmp	r1, #0
   1dc44:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dc48:	cmp	r3, #0
   1dc4c:	mov	lr, r1
   1dc50:	bne	1e29c <__assert_fail@plt+0xd110>
   1dc54:	umull	r2, r3, r2, ip
   1dc58:	mov	r0, r2
   1dc5c:	mov	r1, r3
   1dc60:	cmp	lr, #0
   1dc64:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dc68:	cmp	r1, #0
   1dc6c:	bne	1e278 <__assert_fail@plt+0xd0ec>
   1dc70:	umull	r0, r1, r0, ip
   1dc74:	mov	r2, r0
   1dc78:	mov	r3, r1
   1dc7c:	cmp	lr, #0
   1dc80:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dc84:	cmp	r3, #0
   1dc88:	bne	1df28 <__assert_fail@plt+0xcd9c>
   1dc8c:	umull	r2, r3, r2, ip
   1dc90:	mov	r0, r2
   1dc94:	mov	r1, r3
   1dc98:	cmp	lr, #0
   1dc9c:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dca0:	cmp	r1, #0
   1dca4:	bne	1e128 <__assert_fail@plt+0xcf9c>
   1dca8:	umull	r0, r1, r0, ip
   1dcac:	mov	r2, r0
   1dcb0:	mov	r3, r1
   1dcb4:	cmp	lr, #0
   1dcb8:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dcbc:	cmp	r3, #0
   1dcc0:	mov	r7, lr
   1dcc4:	bne	1e104 <__assert_fail@plt+0xcf78>
   1dcc8:	umull	r2, r3, r2, ip
   1dccc:	mov	r6, r2
   1dcd0:	mov	lr, r3
   1dcd4:	cmp	r7, #0
   1dcd8:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dcdc:	cmp	lr, #0
   1dce0:	bne	1e0c8 <__assert_fail@plt+0xcf3c>
   1dce4:	umull	r2, r3, r6, ip
   1dce8:	mov	r0, r2
   1dcec:	mov	r2, r3
   1dcf0:	subs	r3, r7, #0
   1dcf4:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dcf8:	mov	r6, r0
   1dcfc:	mov	r7, r2
   1dd00:	orr	r4, r4, r3
   1dd04:	ldr	r2, [sp, #12]
   1dd08:	add	r3, r8, r2
   1dd0c:	str	r3, [r5]
   1dd10:	ldrb	r3, [r8, r2]
   1dd14:	cmp	r3, #0
   1dd18:	beq	1d9a0 <__assert_fail@plt+0xc814>
   1dd1c:	orr	r4, r4, #2
   1dd20:	b	1d9a0 <__assert_fail@plt+0xc814>
   1dd24:	cmp	r7, #0
   1dd28:	asr	r1, ip, #31
   1dd2c:	mov	lr, #0
   1dd30:	bne	1e094 <__assert_fail@plt+0xcf08>
   1dd34:	umull	r2, r3, r6, ip
   1dd38:	mov	r6, r2
   1dd3c:	mov	r7, r3
   1dd40:	cmp	lr, #0
   1dd44:	beq	1dd04 <__assert_fail@plt+0xcb78>
   1dd48:	mvn	r6, #0
   1dd4c:	mov	r4, #1
   1dd50:	mov	r7, r6
   1dd54:	b	1dd04 <__assert_fail@plt+0xcb78>
   1dd58:	mov	r0, r3
   1dd5c:	mov	r1, sl
   1dd60:	bl	11084 <strchr@plt>
   1dd64:	cmp	r0, #0
   1dd68:	bne	1da14 <__assert_fail@plt+0xc888>
   1dd6c:	b	1dd1c <__assert_fail@plt+0xcb90>
   1dd70:	ldrb	r3, [r8, #2]
   1dd74:	mov	ip, #1024	; 0x400
   1dd78:	cmp	r3, #66	; 0x42
   1dd7c:	movne	r3, #1
   1dd80:	moveq	r3, #3
   1dd84:	str	r3, [sp, #12]
   1dd88:	b	1db34 <__assert_fail@plt+0xc9a8>
   1dd8c:	lsr	r3, r7, #31
   1dd90:	adds	r6, r6, r6
   1dd94:	adc	r7, r7, r7
   1dd98:	cmp	r3, #0
   1dd9c:	beq	1dd04 <__assert_fail@plt+0xcb78>
   1dda0:	b	1dd48 <__assert_fail@plt+0xcbbc>
   1dda4:	lsr	r3, r7, #23
   1dda8:	lsl	r7, r7, #9
   1ddac:	cmp	r3, #0
   1ddb0:	lsl	r3, r6, #9
   1ddb4:	orr	r7, r7, r6, lsr #23
   1ddb8:	bne	1dd48 <__assert_fail@plt+0xcbbc>
   1ddbc:	mov	r6, r3
   1ddc0:	b	1dd04 <__assert_fail@plt+0xcb78>
   1ddc4:	asr	r3, ip, #31
   1ddc8:	mov	r2, ip
   1ddcc:	cmp	r7, #0
   1ddd0:	mov	r1, #0
   1ddd4:	strd	r2, [sp]
   1ddd8:	bne	1e1e4 <__assert_fail@plt+0xd058>
   1dddc:	umull	r6, r7, r6, ip
   1dde0:	mov	r0, r6
   1dde4:	mov	fp, r7
   1dde8:	cmp	r1, #0
   1ddec:	bne	1e084 <__assert_fail@plt+0xcef8>
   1ddf0:	cmp	fp, #0
   1ddf4:	mov	lr, r1
   1ddf8:	bne	1e374 <__assert_fail@plt+0xd1e8>
   1ddfc:	umull	r0, r1, r0, ip
   1de00:	mov	r2, r0
   1de04:	mov	r3, r1
   1de08:	cmp	lr, #0
   1de0c:	bne	1e084 <__assert_fail@plt+0xcef8>
   1de10:	cmp	r3, #0
   1de14:	bne	1e39c <__assert_fail@plt+0xd210>
   1de18:	umull	r2, r3, r2, ip
   1de1c:	mov	r0, r2
   1de20:	mov	r1, r3
   1de24:	cmp	lr, #0
   1de28:	bne	1e084 <__assert_fail@plt+0xcef8>
   1de2c:	cmp	r1, #0
   1de30:	bne	1e31c <__assert_fail@plt+0xd190>
   1de34:	umull	r0, r1, r0, ip
   1de38:	mov	r2, r0
   1de3c:	mov	r3, r1
   1de40:	cmp	lr, #0
   1de44:	bne	1e084 <__assert_fail@plt+0xcef8>
   1de48:	cmp	r3, #0
   1de4c:	bne	1e14c <__assert_fail@plt+0xcfc0>
   1de50:	umull	r2, r3, r2, ip
   1de54:	mov	r0, r2
   1de58:	mov	r1, r3
   1de5c:	cmp	lr, #0
   1de60:	bne	1e084 <__assert_fail@plt+0xcef8>
   1de64:	cmp	r1, #0
   1de68:	beq	1dca8 <__assert_fail@plt+0xcb1c>
   1de6c:	umull	r6, r7, r0, ip
   1de70:	mov	fp, lr
   1de74:	mov	sl, r7
   1de78:	umlal	sl, fp, r1, ip
   1de7c:	cmp	fp, #0
   1de80:	bne	1e584 <__assert_fail@plt+0xd3f8>
   1de84:	mov	r2, r6
   1de88:	mov	r3, sl
   1de8c:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1de90:	asr	r3, ip, #31
   1de94:	mov	r2, ip
   1de98:	cmp	r7, #0
   1de9c:	mov	r1, #0
   1dea0:	strd	r2, [sp]
   1dea4:	bne	1e208 <__assert_fail@plt+0xd07c>
   1dea8:	umull	r6, r7, r6, ip
   1deac:	mov	r0, r6
   1deb0:	mov	fp, r7
   1deb4:	cmp	r1, #0
   1deb8:	bne	1e084 <__assert_fail@plt+0xcef8>
   1debc:	cmp	fp, #0
   1dec0:	mov	lr, r1
   1dec4:	beq	1dca8 <__assert_fail@plt+0xcb1c>
   1dec8:	umull	r6, r7, r0, ip
   1decc:	mov	r3, r1
   1ded0:	mov	r2, r7
   1ded4:	umlal	r2, r3, fp, ip
   1ded8:	cmp	r3, #0
   1dedc:	strd	r2, [sp, #16]
   1dee0:	bne	1e468 <__assert_fail@plt+0xd2dc>
   1dee4:	mov	r2, r6
   1dee8:	ldr	r3, [sp, #16]
   1deec:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1def0:	asr	r3, ip, #31
   1def4:	mov	r2, ip
   1def8:	cmp	r7, #0
   1defc:	mov	r1, #0
   1df00:	strd	r2, [sp]
   1df04:	bne	1e250 <__assert_fail@plt+0xd0c4>
   1df08:	umull	r6, r7, r6, ip
   1df0c:	mov	r2, r6
   1df10:	mov	r3, r7
   1df14:	cmp	r1, #0
   1df18:	bne	1e084 <__assert_fail@plt+0xcef8>
   1df1c:	cmp	r3, #0
   1df20:	mov	lr, r1
   1df24:	beq	1dc8c <__assert_fail@plt+0xcb00>
   1df28:	umull	r6, r7, r2, ip
   1df2c:	mov	fp, lr
   1df30:	mov	sl, r7
   1df34:	umlal	sl, fp, r3, ip
   1df38:	cmp	fp, #0
   1df3c:	bne	1e548 <__assert_fail@plt+0xd3bc>
   1df40:	mov	r0, r6
   1df44:	mov	r1, sl
   1df48:	b	1dc98 <__assert_fail@plt+0xcb0c>
   1df4c:	asr	r3, ip, #31
   1df50:	mov	r2, ip
   1df54:	cmp	r7, #0
   1df58:	mov	r1, #0
   1df5c:	strd	r2, [sp]
   1df60:	bne	1e22c <__assert_fail@plt+0xd0a0>
   1df64:	umull	r6, r7, r6, ip
   1df68:	mov	sl, r6
   1df6c:	mov	lr, r7
   1df70:	cmp	r1, #0
   1df74:	bne	1dd48 <__assert_fail@plt+0xcbbc>
   1df78:	cmp	lr, #0
   1df7c:	mov	r7, r1
   1df80:	bne	1e340 <__assert_fail@plt+0xd1b4>
   1df84:	umull	sl, fp, sl, ip
   1df88:	mov	r0, sl
   1df8c:	mov	r2, fp
   1df90:	cmp	r7, #0
   1df94:	mov	r6, r0
   1df98:	mov	r7, r2
   1df9c:	beq	1dd04 <__assert_fail@plt+0xcb78>
   1dfa0:	b	1dd48 <__assert_fail@plt+0xcbbc>
   1dfa4:	asr	r3, ip, #31
   1dfa8:	mov	r2, ip
   1dfac:	cmp	r7, #0
   1dfb0:	mov	r1, #0
   1dfb4:	strd	r2, [sp]
   1dfb8:	bne	1e1c0 <__assert_fail@plt+0xd034>
   1dfbc:	umull	r6, r7, r6, ip
   1dfc0:	mov	r0, r6
   1dfc4:	mov	fp, r7
   1dfc8:	cmp	r1, #0
   1dfcc:	bne	1e084 <__assert_fail@plt+0xcef8>
   1dfd0:	cmp	fp, #0
   1dfd4:	mov	lr, r1
   1dfd8:	beq	1de34 <__assert_fail@plt+0xcca8>
   1dfdc:	umull	r6, r7, r0, ip
   1dfe0:	mov	r3, r1
   1dfe4:	mov	r2, r7
   1dfe8:	umlal	r2, r3, fp, ip
   1dfec:	cmp	r3, #0
   1dff0:	strd	r2, [sp, #16]
   1dff4:	bne	1e4d8 <__assert_fail@plt+0xd34c>
   1dff8:	mov	r2, r6
   1dffc:	ldr	r3, [sp, #16]
   1e000:	b	1de40 <__assert_fail@plt+0xccb4>
   1e004:	lsr	r3, r7, #22
   1e008:	lsl	r7, r7, #10
   1e00c:	cmp	r3, #0
   1e010:	lsl	r3, r6, #10
   1e014:	orr	r7, r7, r6, lsr #22
   1e018:	beq	1ddbc <__assert_fail@plt+0xcc30>
   1e01c:	b	1dd48 <__assert_fail@plt+0xcbbc>
   1e020:	asr	r3, ip, #31
   1e024:	mov	r2, ip
   1e028:	cmp	r7, #0
   1e02c:	mov	r1, #0
   1e030:	strd	r2, [sp]
   1e034:	bne	1e198 <__assert_fail@plt+0xd00c>
   1e038:	umull	r6, r7, r6, ip
   1e03c:	mov	r2, r6
   1e040:	mov	r3, r7
   1e044:	cmp	r1, #0
   1e048:	bne	1dd48 <__assert_fail@plt+0xcbbc>
   1e04c:	cmp	r3, #0
   1e050:	mov	r7, r1
   1e054:	bne	1e2fc <__assert_fail@plt+0xd170>
   1e058:	umull	r2, r3, r2, ip
   1e05c:	mov	r6, r2
   1e060:	mov	lr, r3
   1e064:	cmp	r7, #0
   1e068:	bne	1dd48 <__assert_fail@plt+0xcbbc>
   1e06c:	cmp	lr, #0
   1e070:	bne	1e2c0 <__assert_fail@plt+0xd134>
   1e074:	umull	r2, r3, r6, ip
   1e078:	mov	r0, r2
   1e07c:	mov	r2, r3
   1e080:	b	1df90 <__assert_fail@plt+0xce04>
   1e084:	mvn	r6, #0
   1e088:	mov	r3, #1
   1e08c:	mov	r7, r6
   1e090:	b	1dd00 <__assert_fail@plt+0xcb74>
   1e094:	umull	sl, fp, r6, ip
   1e098:	mov	r3, lr
   1e09c:	mov	r2, fp
   1e0a0:	umlal	r2, r3, r7, ip
   1e0a4:	cmp	r3, #0
   1e0a8:	bne	1e4a0 <__assert_fail@plt+0xd314>
   1e0ac:	mov	r6, sl
   1e0b0:	mov	r7, r2
   1e0b4:	b	1dd40 <__assert_fail@plt+0xcbb4>
   1e0b8:	mov	r3, #2
   1e0bc:	mov	ip, #1000	; 0x3e8
   1e0c0:	str	r3, [sp, #12]
   1e0c4:	b	1db34 <__assert_fail@plt+0xc9a8>
   1e0c8:	umull	r0, r1, r6, ip
   1e0cc:	mov	r3, r7
   1e0d0:	mov	r2, r1
   1e0d4:	strd	r0, [sp, #16]
   1e0d8:	umlal	r2, r3, lr, ip
   1e0dc:	cmp	r3, #0
   1e0e0:	beq	1dcf0 <__assert_fail@plt+0xcb64>
   1e0e4:	ldrd	sl, [sp]
   1e0e8:	mov	r7, #1
   1e0ec:	ldr	r0, [sp, #16]
   1e0f0:	ldr	r3, [sp, #20]
   1e0f4:	mul	r2, r6, fp
   1e0f8:	mla	r2, lr, sl, r2
   1e0fc:	add	r2, r2, r3
   1e100:	b	1dcf0 <__assert_fail@plt+0xcb64>
   1e104:	umull	sl, fp, r2, ip
   1e108:	mov	r1, lr
   1e10c:	mov	r0, fp
   1e110:	umlal	r0, r1, r3, ip
   1e114:	cmp	r1, #0
   1e118:	bne	1e3f8 <__assert_fail@plt+0xd26c>
   1e11c:	mov	r6, sl
   1e120:	mov	lr, r0
   1e124:	b	1dcd4 <__assert_fail@plt+0xcb48>
   1e128:	umull	sl, fp, r0, ip
   1e12c:	mov	r7, lr
   1e130:	mov	r6, fp
   1e134:	umlal	r6, r7, r1, ip
   1e138:	cmp	r7, #0
   1e13c:	bne	1e5a0 <__assert_fail@plt+0xd414>
   1e140:	mov	r2, sl
   1e144:	mov	r3, r6
   1e148:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1e14c:	umull	sl, fp, r2, ip
   1e150:	mov	r7, lr
   1e154:	mov	r6, fp
   1e158:	umlal	r6, r7, r3, ip
   1e15c:	cmp	r7, #0
   1e160:	bne	1e430 <__assert_fail@plt+0xd2a4>
   1e164:	mov	r0, sl
   1e168:	mov	r1, r6
   1e16c:	b	1de5c <__assert_fail@plt+0xccd0>
   1e170:	umull	sl, fp, r6, ip
   1e174:	mov	r3, r1
   1e178:	mov	r2, fp
   1e17c:	umlal	r2, r3, r7, ip
   1e180:	cmp	r3, #0
   1e184:	strd	r2, [sp, #16]
   1e188:	bne	1e414 <__assert_fail@plt+0xd288>
   1e18c:	mov	r2, sl
   1e190:	ldr	r3, [sp, #16]
   1e194:	b	1dc40 <__assert_fail@plt+0xcab4>
   1e198:	umull	sl, fp, r6, ip
   1e19c:	mov	r3, r1
   1e1a0:	mov	r2, fp
   1e1a4:	umlal	r2, r3, r7, ip
   1e1a8:	cmp	r3, #0
   1e1ac:	strd	r2, [sp, #16]
   1e1b0:	bne	1e4f4 <__assert_fail@plt+0xd368>
   1e1b4:	mov	r2, sl
   1e1b8:	ldr	r3, [sp, #16]
   1e1bc:	b	1e044 <__assert_fail@plt+0xceb8>
   1e1c0:	umull	sl, fp, r6, ip
   1e1c4:	mov	r3, r1
   1e1c8:	mov	r2, fp
   1e1cc:	umlal	r2, r3, r7, ip
   1e1d0:	cmp	r3, #0
   1e1d4:	bne	1e3c0 <__assert_fail@plt+0xd234>
   1e1d8:	mov	r0, sl
   1e1dc:	mov	fp, r2
   1e1e0:	b	1dfc8 <__assert_fail@plt+0xce3c>
   1e1e4:	umull	sl, fp, r6, ip
   1e1e8:	mov	r3, r1
   1e1ec:	mov	r2, fp
   1e1f0:	umlal	r2, r3, r7, ip
   1e1f4:	cmp	r3, #0
   1e1f8:	bne	1e484 <__assert_fail@plt+0xd2f8>
   1e1fc:	mov	r0, sl
   1e200:	mov	fp, r2
   1e204:	b	1dde8 <__assert_fail@plt+0xcc5c>
   1e208:	umull	sl, fp, r6, ip
   1e20c:	mov	r3, r1
   1e210:	mov	r2, fp
   1e214:	umlal	r2, r3, r7, ip
   1e218:	cmp	r3, #0
   1e21c:	bne	1e510 <__assert_fail@plt+0xd384>
   1e220:	mov	r0, sl
   1e224:	mov	fp, r2
   1e228:	b	1deb4 <__assert_fail@plt+0xcd28>
   1e22c:	umull	sl, fp, r6, ip
   1e230:	mov	r3, r1
   1e234:	mov	r2, fp
   1e238:	strd	sl, [sp, #16]
   1e23c:	umlal	r2, r3, r7, ip
   1e240:	cmp	r3, #0
   1e244:	bne	1e4b8 <__assert_fail@plt+0xd32c>
   1e248:	mov	lr, r2
   1e24c:	b	1df70 <__assert_fail@plt+0xcde4>
   1e250:	umull	sl, fp, r6, ip
   1e254:	mov	r3, r1
   1e258:	mov	r2, fp
   1e25c:	umlal	r2, r3, r7, ip
   1e260:	cmp	r3, #0
   1e264:	strd	r2, [sp, #16]
   1e268:	bne	1e5bc <__assert_fail@plt+0xd430>
   1e26c:	mov	r2, sl
   1e270:	ldr	r3, [sp, #16]
   1e274:	b	1df14 <__assert_fail@plt+0xcd88>
   1e278:	umull	sl, fp, r0, ip
   1e27c:	mov	r7, lr
   1e280:	mov	r6, fp
   1e284:	umlal	r6, r7, r1, ip
   1e288:	cmp	r7, #0
   1e28c:	bne	1e5d8 <__assert_fail@plt+0xd44c>
   1e290:	mov	r2, sl
   1e294:	mov	r3, r6
   1e298:	b	1dc7c <__assert_fail@plt+0xcaf0>
   1e29c:	umull	r6, r7, r2, ip
   1e2a0:	mov	fp, r1
   1e2a4:	mov	sl, r7
   1e2a8:	umlal	sl, fp, r3, ip
   1e2ac:	cmp	fp, #0
   1e2b0:	bne	1e44c <__assert_fail@plt+0xd2c0>
   1e2b4:	mov	r0, r6
   1e2b8:	mov	r1, sl
   1e2bc:	b	1dc60 <__assert_fail@plt+0xcad4>
   1e2c0:	umull	r0, r1, r6, ip
   1e2c4:	mov	r3, r7
   1e2c8:	mov	r2, r1
   1e2cc:	strd	r0, [sp, #16]
   1e2d0:	umlal	r2, r3, lr, ip
   1e2d4:	cmp	r3, #0
   1e2d8:	beq	1df90 <__assert_fail@plt+0xce04>
   1e2dc:	ldrd	sl, [sp]
   1e2e0:	mov	r7, #1
   1e2e4:	ldr	r0, [sp, #16]
   1e2e8:	ldr	r3, [sp, #20]
   1e2ec:	mul	r2, r6, fp
   1e2f0:	mla	r2, lr, sl, r2
   1e2f4:	add	r2, r2, r3
   1e2f8:	b	1df90 <__assert_fail@plt+0xce04>
   1e2fc:	umull	sl, fp, r2, ip
   1e300:	mov	r0, fp
   1e304:	umlal	r0, r1, r3, ip
   1e308:	cmp	r1, #0
   1e30c:	bne	1e5f4 <__assert_fail@plt+0xd468>
   1e310:	mov	r6, sl
   1e314:	mov	lr, r0
   1e318:	b	1e064 <__assert_fail@plt+0xced8>
   1e31c:	umull	r6, r7, r0, ip
   1e320:	mov	fp, lr
   1e324:	mov	sl, r7
   1e328:	umlal	sl, fp, r1, ip
   1e32c:	cmp	fp, #0
   1e330:	bne	1e52c <__assert_fail@plt+0xd3a0>
   1e334:	mov	r2, r6
   1e338:	mov	r3, sl
   1e33c:	b	1de40 <__assert_fail@plt+0xccb4>
   1e340:	umull	r0, r1, sl, ip
   1e344:	mov	r3, r7
   1e348:	mov	r2, r1
   1e34c:	umlal	r2, r3, lr, ip
   1e350:	cmp	r3, #0
   1e354:	beq	1df90 <__assert_fail@plt+0xce04>
   1e358:	ldr	r3, [sp, #4]
   1e35c:	mov	r7, #1
   1e360:	mul	r2, sl, r3
   1e364:	ldr	r3, [sp]
   1e368:	mla	r2, lr, r3, r2
   1e36c:	add	r2, r2, r1
   1e370:	b	1df90 <__assert_fail@plt+0xce04>
   1e374:	umull	r6, r7, r0, ip
   1e378:	mov	r3, r1
   1e37c:	mov	r2, r7
   1e380:	umlal	r2, r3, fp, ip
   1e384:	cmp	r3, #0
   1e388:	strd	r2, [sp, #16]
   1e38c:	bne	1e610 <__assert_fail@plt+0xd484>
   1e390:	mov	r2, r6
   1e394:	ldr	r3, [sp, #16]
   1e398:	b	1de08 <__assert_fail@plt+0xcc7c>
   1e39c:	umull	sl, fp, r2, ip
   1e3a0:	mov	r7, lr
   1e3a4:	mov	r6, fp
   1e3a8:	umlal	r6, r7, r3, ip
   1e3ac:	cmp	r7, #0
   1e3b0:	bne	1e3dc <__assert_fail@plt+0xd250>
   1e3b4:	mov	r0, sl
   1e3b8:	mov	r1, r6
   1e3bc:	b	1de24 <__assert_fail@plt+0xcc98>
   1e3c0:	ldrd	r2, [sp]
   1e3c4:	mov	r0, sl
   1e3c8:	mov	r1, #1
   1e3cc:	mul	r6, r6, r3
   1e3d0:	mla	r7, r2, r7, r6
   1e3d4:	add	fp, r7, fp
   1e3d8:	b	1dfc8 <__assert_fail@plt+0xce3c>
   1e3dc:	ldrd	r6, [sp]
   1e3e0:	mov	r0, sl
   1e3e4:	mov	lr, #1
   1e3e8:	mul	r2, r2, r7
   1e3ec:	mla	r1, r3, r6, r2
   1e3f0:	add	r1, r1, fp
   1e3f4:	b	1de24 <__assert_fail@plt+0xcc98>
   1e3f8:	ldrd	r0, [sp]
   1e3fc:	mov	r6, sl
   1e400:	mov	r7, #1
   1e404:	mul	r2, r2, r1
   1e408:	mla	lr, r3, r0, r2
   1e40c:	add	lr, lr, fp
   1e410:	b	1dcd4 <__assert_fail@plt+0xcb48>
   1e414:	ldm	sp, {r0, r3}
   1e418:	mov	r2, sl
   1e41c:	mov	r1, #1
   1e420:	mul	r3, r6, r3
   1e424:	mla	r3, r0, r7, r3
   1e428:	add	r3, r3, fp
   1e42c:	b	1dc40 <__assert_fail@plt+0xcab4>
   1e430:	ldrd	r6, [sp]
   1e434:	mov	r0, sl
   1e438:	mov	lr, #1
   1e43c:	mul	r2, r2, r7
   1e440:	mla	r1, r3, r6, r2
   1e444:	add	r1, r1, fp
   1e448:	b	1de5c <__assert_fail@plt+0xccd0>
   1e44c:	ldrd	sl, [sp]
   1e450:	mov	r0, r6
   1e454:	mov	lr, #1
   1e458:	mul	r2, r2, fp
   1e45c:	mla	r1, r3, sl, r2
   1e460:	add	r1, r1, r7
   1e464:	b	1dc60 <__assert_fail@plt+0xcad4>
   1e468:	ldm	sp, {r1, r3}
   1e46c:	mov	r2, r6
   1e470:	mov	lr, #1
   1e474:	mul	r3, r0, r3
   1e478:	mla	r3, fp, r1, r3
   1e47c:	add	r3, r3, r7
   1e480:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1e484:	ldrd	r2, [sp]
   1e488:	mov	r0, sl
   1e48c:	mov	r1, #1
   1e490:	mul	r6, r6, r3
   1e494:	mla	r7, r2, r7, r6
   1e498:	add	fp, r7, fp
   1e49c:	b	1dde8 <__assert_fail@plt+0xcc5c>
   1e4a0:	mul	r3, r6, r1
   1e4a4:	mov	lr, #1
   1e4a8:	mov	r6, sl
   1e4ac:	mla	r7, ip, r7, r3
   1e4b0:	add	r7, r7, fp
   1e4b4:	b	1dd40 <__assert_fail@plt+0xcbb4>
   1e4b8:	ldrd	r2, [sp]
   1e4bc:	mov	r1, #1
   1e4c0:	ldr	sl, [sp, #16]
   1e4c4:	mul	lr, r6, r3
   1e4c8:	ldr	r3, [sp, #20]
   1e4cc:	mla	lr, r2, r7, lr
   1e4d0:	add	lr, lr, r3
   1e4d4:	b	1df70 <__assert_fail@plt+0xcde4>
   1e4d8:	ldm	sp, {r1, r3}
   1e4dc:	mov	r2, r6
   1e4e0:	mov	lr, #1
   1e4e4:	mul	r3, r0, r3
   1e4e8:	mla	r3, fp, r1, r3
   1e4ec:	add	r3, r3, r7
   1e4f0:	b	1de40 <__assert_fail@plt+0xccb4>
   1e4f4:	ldm	sp, {r0, r3}
   1e4f8:	mov	r2, sl
   1e4fc:	mov	r1, #1
   1e500:	mul	r3, r6, r3
   1e504:	mla	r3, r0, r7, r3
   1e508:	add	r3, r3, fp
   1e50c:	b	1e044 <__assert_fail@plt+0xceb8>
   1e510:	ldrd	r2, [sp]
   1e514:	mov	r0, sl
   1e518:	mov	r1, #1
   1e51c:	mul	r6, r6, r3
   1e520:	mla	r7, r2, r7, r6
   1e524:	add	fp, r7, fp
   1e528:	b	1deb4 <__assert_fail@plt+0xcd28>
   1e52c:	ldrd	sl, [sp]
   1e530:	mov	r2, r6
   1e534:	mov	lr, #1
   1e538:	mul	r3, r0, fp
   1e53c:	mla	r3, r1, sl, r3
   1e540:	add	r3, r3, r7
   1e544:	b	1de40 <__assert_fail@plt+0xccb4>
   1e548:	ldrd	sl, [sp]
   1e54c:	mov	r0, r6
   1e550:	mov	lr, #1
   1e554:	mul	r2, r2, fp
   1e558:	mla	r1, r3, sl, r2
   1e55c:	add	r1, r1, r7
   1e560:	b	1dc98 <__assert_fail@plt+0xcb0c>
   1e564:	movw	r3, #252	; 0xfc
   1e568:	movt	r3, #2
   1e56c:	movw	r1, #264	; 0x108
   1e570:	movt	r1, #2
   1e574:	movw	r0, #280	; 0x118
   1e578:	movt	r0, #2
   1e57c:	mov	r2, #85	; 0x55
   1e580:	bl	1118c <__assert_fail@plt>
   1e584:	ldrd	sl, [sp]
   1e588:	mov	r2, r6
   1e58c:	mov	lr, #1
   1e590:	mul	r3, r0, fp
   1e594:	mla	r3, r1, sl, r3
   1e598:	add	r3, r3, r7
   1e59c:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1e5a0:	ldrd	r6, [sp]
   1e5a4:	mov	r2, sl
   1e5a8:	mov	lr, #1
   1e5ac:	mul	r3, r0, r7
   1e5b0:	mla	r3, r1, r6, r3
   1e5b4:	add	r3, r3, fp
   1e5b8:	b	1dcb4 <__assert_fail@plt+0xcb28>
   1e5bc:	ldm	sp, {r0, r3}
   1e5c0:	mov	r2, sl
   1e5c4:	mov	r1, #1
   1e5c8:	mul	r3, r6, r3
   1e5cc:	mla	r3, r0, r7, r3
   1e5d0:	add	r3, r3, fp
   1e5d4:	b	1df14 <__assert_fail@plt+0xcd88>
   1e5d8:	ldrd	r6, [sp]
   1e5dc:	mov	r2, sl
   1e5e0:	mov	lr, #1
   1e5e4:	mul	r3, r0, r7
   1e5e8:	mla	r3, r1, r6, r3
   1e5ec:	add	r3, r3, fp
   1e5f0:	b	1dc7c <__assert_fail@plt+0xcaf0>
   1e5f4:	ldrd	r0, [sp]
   1e5f8:	mov	r6, sl
   1e5fc:	mov	r7, #1
   1e600:	mul	r2, r2, r1
   1e604:	mla	lr, r3, r0, r2
   1e608:	add	lr, lr, fp
   1e60c:	b	1e064 <__assert_fail@plt+0xced8>
   1e610:	ldm	sp, {r1, r3}
   1e614:	mov	r2, r6
   1e618:	mov	lr, #1
   1e61c:	mul	r3, r0, r3
   1e620:	mla	r3, fp, r1, r3
   1e624:	add	r3, r3, r7
   1e628:	b	1de08 <__assert_fail@plt+0xcc7c>
   1e62c:	cmp	r1, #0
   1e630:	cmpne	r0, #0
   1e634:	beq	1e680 <__assert_fail@plt+0xd4f4>
   1e638:	strd	r4, [sp, #-16]!
   1e63c:	umull	r4, r5, r0, r1
   1e640:	str	r6, [sp, #8]
   1e644:	str	lr, [sp, #12]
   1e648:	adds	r3, r5, #0
   1e64c:	movne	r3, #1
   1e650:	cmp	r4, #0
   1e654:	blt	1e660 <__assert_fail@plt+0xd4d4>
   1e658:	cmp	r3, #0
   1e65c:	beq	1e68c <__assert_fail@plt+0xd500>
   1e660:	bl	11090 <__errno_location@plt>
   1e664:	mov	r3, #12
   1e668:	ldrd	r4, [sp]
   1e66c:	ldr	r6, [sp, #8]
   1e670:	add	sp, sp, #12
   1e674:	str	r3, [r0]
   1e678:	mov	r0, #0
   1e67c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e680:	mov	r1, #1
   1e684:	mov	r0, r1
   1e688:	b	10ebc <calloc@plt>
   1e68c:	ldrd	r4, [sp]
   1e690:	ldr	r6, [sp, #8]
   1e694:	ldr	lr, [sp, #12]
   1e698:	add	sp, sp, #16
   1e69c:	b	10ebc <calloc@plt>
   1e6a0:	cmp	r0, #0
   1e6a4:	beq	1e6b0 <__assert_fail@plt+0xd524>
   1e6a8:	blt	1e6b8 <__assert_fail@plt+0xd52c>
   1e6ac:	b	1100c <malloc@plt>
   1e6b0:	mov	r0, #1
   1e6b4:	b	1100c <malloc@plt>
   1e6b8:	str	r4, [sp, #-8]!
   1e6bc:	str	lr, [sp, #4]
   1e6c0:	bl	11090 <__errno_location@plt>
   1e6c4:	mov	r3, #12
   1e6c8:	ldr	r4, [sp]
   1e6cc:	add	sp, sp, #4
   1e6d0:	str	r3, [r0]
   1e6d4:	mov	r0, #0
   1e6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e6dc:	cmp	r0, #0
   1e6e0:	beq	1e708 <__assert_fail@plt+0xd57c>
   1e6e4:	cmp	r1, #0
   1e6e8:	str	r4, [sp, #-8]!
   1e6ec:	str	lr, [sp, #4]
   1e6f0:	beq	1e710 <__assert_fail@plt+0xd584>
   1e6f4:	blt	1e724 <__assert_fail@plt+0xd598>
   1e6f8:	ldr	r4, [sp]
   1e6fc:	ldr	lr, [sp, #4]
   1e700:	add	sp, sp, #8
   1e704:	b	10f88 <realloc@plt>
   1e708:	mov	r0, r1
   1e70c:	b	1e6a0 <__assert_fail@plt+0xd514>
   1e710:	bl	18ccc <__assert_fail@plt+0x7b40>
   1e714:	ldr	r4, [sp]
   1e718:	add	sp, sp, #4
   1e71c:	mov	r0, #0
   1e720:	pop	{pc}		; (ldr pc, [sp], #4)
   1e724:	bl	11090 <__errno_location@plt>
   1e728:	mov	r3, #12
   1e72c:	str	r3, [r0]
   1e730:	b	1e714 <__assert_fail@plt+0xd588>
   1e734:	strd	r4, [sp, #-16]!
   1e738:	mov	r4, r0
   1e73c:	str	r6, [sp, #8]
   1e740:	str	lr, [sp, #12]
   1e744:	bl	10fe8 <__fpending@plt>
   1e748:	ldr	r5, [r4]
   1e74c:	mov	r6, r0
   1e750:	mov	r0, r4
   1e754:	bl	18b0c <__assert_fail@plt+0x7980>
   1e758:	mov	r4, r0
   1e75c:	and	r5, r5, #32
   1e760:	cmp	r5, #0
   1e764:	bne	1e79c <__assert_fail@plt+0xd610>
   1e768:	cmp	r0, #0
   1e76c:	beq	1e788 <__assert_fail@plt+0xd5fc>
   1e770:	cmp	r6, #0
   1e774:	bne	1e7b4 <__assert_fail@plt+0xd628>
   1e778:	bl	11090 <__errno_location@plt>
   1e77c:	ldr	r4, [r0]
   1e780:	subs	r4, r4, #9
   1e784:	mvnne	r4, #0
   1e788:	mov	r0, r4
   1e78c:	ldrd	r4, [sp]
   1e790:	ldr	r6, [sp, #8]
   1e794:	add	sp, sp, #12
   1e798:	pop	{pc}		; (ldr pc, [sp], #4)
   1e79c:	cmp	r0, #0
   1e7a0:	bne	1e7b4 <__assert_fail@plt+0xd628>
   1e7a4:	bl	11090 <__errno_location@plt>
   1e7a8:	str	r4, [r0]
   1e7ac:	mvn	r4, #0
   1e7b0:	b	1e788 <__assert_fail@plt+0xd5fc>
   1e7b4:	mvn	r4, #0
   1e7b8:	b	1e788 <__assert_fail@plt+0xd5fc>
   1e7bc:	push	{r1, r2, r3}
   1e7c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e7c4:	strd	r6, [sp, #8]
   1e7c8:	str	lr, [sp, #16]
   1e7cc:	sub	sp, sp, #8
   1e7d0:	ldr	r1, [sp, #28]
   1e7d4:	add	r2, sp, #32
   1e7d8:	str	r2, [sp, #4]
   1e7dc:	cmp	r1, #0
   1e7e0:	beq	1e8bc <__assert_fail@plt+0xd730>
   1e7e4:	movw	r3, #1030	; 0x406
   1e7e8:	mov	r6, r0
   1e7ec:	cmp	r1, r3
   1e7f0:	beq	1e8cc <__assert_fail@plt+0xd740>
   1e7f4:	cmp	r1, #11
   1e7f8:	beq	1e874 <__assert_fail@plt+0xd6e8>
   1e7fc:	ble	1e854 <__assert_fail@plt+0xd6c8>
   1e800:	movw	r2, #1031	; 0x407
   1e804:	cmp	r1, r2
   1e808:	bgt	1e890 <__assert_fail@plt+0xd704>
   1e80c:	cmp	r1, r3
   1e810:	bge	1e820 <__assert_fail@plt+0xd694>
   1e814:	movw	r3, #1025	; 0x401
   1e818:	cmp	r1, r3
   1e81c:	beq	1e874 <__assert_fail@plt+0xd6e8>
   1e820:	ldr	r3, [sp, #4]
   1e824:	mov	r0, r6
   1e828:	ldr	r2, [r3]
   1e82c:	bl	110fc <fcntl64@plt>
   1e830:	mov	r4, r0
   1e834:	mov	r0, r4
   1e838:	add	sp, sp, #8
   1e83c:	ldrd	r4, [sp]
   1e840:	ldrd	r6, [sp, #8]
   1e844:	ldr	lr, [sp, #16]
   1e848:	add	sp, sp, #20
   1e84c:	add	sp, sp, #12
   1e850:	bx	lr
   1e854:	cmp	r1, #4
   1e858:	beq	1e820 <__assert_fail@plt+0xd694>
   1e85c:	bgt	1e884 <__assert_fail@plt+0xd6f8>
   1e860:	cmp	r1, #2
   1e864:	beq	1e820 <__assert_fail@plt+0xd694>
   1e868:	bgt	1e874 <__assert_fail@plt+0xd6e8>
   1e86c:	cmp	r1, #1
   1e870:	bne	1e820 <__assert_fail@plt+0xd694>
   1e874:	mov	r0, r6
   1e878:	bl	110fc <fcntl64@plt>
   1e87c:	mov	r4, r0
   1e880:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e884:	cmp	r1, #9
   1e888:	bne	1e820 <__assert_fail@plt+0xd694>
   1e88c:	b	1e874 <__assert_fail@plt+0xd6e8>
   1e890:	movw	r3, #1033	; 0x409
   1e894:	cmp	r1, r3
   1e898:	beq	1e820 <__assert_fail@plt+0xd694>
   1e89c:	blt	1e874 <__assert_fail@plt+0xd6e8>
   1e8a0:	movw	r3, #1034	; 0x40a
   1e8a4:	cmp	r1, r3
   1e8a8:	bne	1e820 <__assert_fail@plt+0xd694>
   1e8ac:	mov	r0, r6
   1e8b0:	bl	110fc <fcntl64@plt>
   1e8b4:	mov	r4, r0
   1e8b8:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e8bc:	ldr	r2, [sp, #32]
   1e8c0:	bl	110fc <fcntl64@plt>
   1e8c4:	mov	r4, r0
   1e8c8:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e8cc:	movw	r5, #4844	; 0x12ec
   1e8d0:	movt	r5, #3
   1e8d4:	ldr	r7, [r2]
   1e8d8:	add	r2, sp, #36	; 0x24
   1e8dc:	ldr	r3, [r5]
   1e8e0:	str	r2, [sp, #4]
   1e8e4:	mov	r2, r7
   1e8e8:	cmp	r3, #0
   1e8ec:	blt	1e908 <__assert_fail@plt+0xd77c>
   1e8f0:	bl	110fc <fcntl64@plt>
   1e8f4:	subs	r4, r0, #0
   1e8f8:	blt	1e970 <__assert_fail@plt+0xd7e4>
   1e8fc:	mov	r3, #1
   1e900:	str	r3, [r5]
   1e904:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e908:	mov	r1, #0
   1e90c:	bl	110fc <fcntl64@plt>
   1e910:	subs	r4, r0, #0
   1e914:	blt	1e834 <__assert_fail@plt+0xd6a8>
   1e918:	ldr	r3, [r5]
   1e91c:	cmn	r3, #1
   1e920:	bne	1e834 <__assert_fail@plt+0xd6a8>
   1e924:	mov	r1, #1
   1e928:	mov	r0, r4
   1e92c:	bl	110fc <fcntl64@plt>
   1e930:	subs	r2, r0, #0
   1e934:	blt	1e950 <__assert_fail@plt+0xd7c4>
   1e938:	orr	r2, r2, #1
   1e93c:	mov	r1, #2
   1e940:	mov	r0, r4
   1e944:	bl	110fc <fcntl64@plt>
   1e948:	cmn	r0, #1
   1e94c:	bne	1e834 <__assert_fail@plt+0xd6a8>
   1e950:	bl	11090 <__errno_location@plt>
   1e954:	mov	r5, r0
   1e958:	mov	r0, r4
   1e95c:	ldr	r6, [r5]
   1e960:	mvn	r4, #0
   1e964:	bl	11174 <close@plt>
   1e968:	str	r6, [r5]
   1e96c:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e970:	bl	11090 <__errno_location@plt>
   1e974:	ldr	r3, [r0]
   1e978:	cmp	r3, #22
   1e97c:	bne	1e8fc <__assert_fail@plt+0xd770>
   1e980:	mov	r2, r7
   1e984:	mov	r0, r6
   1e988:	mov	r1, #0
   1e98c:	bl	110fc <fcntl64@plt>
   1e990:	subs	r4, r0, #0
   1e994:	mvnge	r3, #0
   1e998:	strge	r3, [r5]
   1e99c:	bge	1e924 <__assert_fail@plt+0xd798>
   1e9a0:	b	1e834 <__assert_fail@plt+0xd6a8>
   1e9a4:	mov	r0, #14
   1e9a8:	str	r4, [sp, #-8]!
   1e9ac:	str	lr, [sp, #4]
   1e9b0:	bl	1112c <nl_langinfo@plt>
   1e9b4:	cmp	r0, #0
   1e9b8:	beq	1e9dc <__assert_fail@plt+0xd850>
   1e9bc:	ldrb	r2, [r0]
   1e9c0:	movw	r3, #320	; 0x140
   1e9c4:	movt	r3, #2
   1e9c8:	ldr	r4, [sp]
   1e9cc:	add	sp, sp, #4
   1e9d0:	cmp	r2, #0
   1e9d4:	moveq	r0, r3
   1e9d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e9dc:	ldr	r4, [sp]
   1e9e0:	add	sp, sp, #4
   1e9e4:	movw	r0, #320	; 0x140
   1e9e8:	movt	r0, #2
   1e9ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1e9f0:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e9f4:	mov	r5, r2
   1e9f8:	strd	r6, [sp, #8]
   1e9fc:	subs	r6, r0, #0
   1ea00:	mov	r7, r1
   1ea04:	str	lr, [sp, #16]
   1ea08:	sub	sp, sp, #12
   1ea0c:	addeq	r6, sp, #4
   1ea10:	mov	r0, r6
   1ea14:	bl	10ff4 <mbrtowc@plt>
   1ea18:	cmp	r5, #0
   1ea1c:	cmnne	r0, #3
   1ea20:	mov	r4, r0
   1ea24:	bhi	1ea40 <__assert_fail@plt+0xd8b4>
   1ea28:	mov	r0, r4
   1ea2c:	add	sp, sp, #12
   1ea30:	ldrd	r4, [sp]
   1ea34:	ldrd	r6, [sp, #8]
   1ea38:	add	sp, sp, #16
   1ea3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea40:	mov	r0, #0
   1ea44:	bl	1ea98 <__assert_fail@plt+0xd90c>
   1ea48:	cmp	r0, #0
   1ea4c:	bne	1ea28 <__assert_fail@plt+0xd89c>
   1ea50:	ldrb	r3, [r7]
   1ea54:	mov	r4, #1
   1ea58:	str	r3, [r6]
   1ea5c:	b	1ea28 <__assert_fail@plt+0xd89c>
   1ea60:	umull	r2, r3, r1, r2
   1ea64:	cmp	r3, #0
   1ea68:	bne	1ea74 <__assert_fail@plt+0xd8e8>
   1ea6c:	mov	r1, r2
   1ea70:	b	1e6dc <__assert_fail@plt+0xd550>
   1ea74:	str	r4, [sp, #-8]!
   1ea78:	str	lr, [sp, #4]
   1ea7c:	bl	11090 <__errno_location@plt>
   1ea80:	mov	r3, #12
   1ea84:	ldr	r4, [sp]
   1ea88:	add	sp, sp, #4
   1ea8c:	str	r3, [r0]
   1ea90:	mov	r0, #0
   1ea94:	pop	{pc}		; (ldr pc, [sp], #4)
   1ea98:	push	{lr}		; (str lr, [sp, #-4]!)
   1ea9c:	sub	sp, sp, #268	; 0x10c
   1eaa0:	movw	r2, #257	; 0x101
   1eaa4:	add	r1, sp, #4
   1eaa8:	bl	1eaf0 <__assert_fail@plt+0xd964>
   1eaac:	cmp	r0, #0
   1eab0:	movne	r0, #0
   1eab4:	bne	1eae8 <__assert_fail@plt+0xd95c>
   1eab8:	movw	r1, #328	; 0x148
   1eabc:	movt	r1, #2
   1eac0:	add	r0, sp, #4
   1eac4:	bl	10eec <strcmp@plt>
   1eac8:	cmp	r0, #0
   1eacc:	beq	1eae8 <__assert_fail@plt+0xd95c>
   1ead0:	add	r0, sp, #4
   1ead4:	movw	r1, #332	; 0x14c
   1ead8:	movt	r1, #2
   1eadc:	bl	10eec <strcmp@plt>
   1eae0:	adds	r0, r0, #0
   1eae4:	movne	r0, #1
   1eae8:	add	sp, sp, #268	; 0x10c
   1eaec:	pop	{pc}		; (ldr pc, [sp], #4)
   1eaf0:	strd	r4, [sp, #-16]!
   1eaf4:	mov	r5, r1
   1eaf8:	mov	r1, #0
   1eafc:	mov	r4, r2
   1eb00:	str	r6, [sp, #8]
   1eb04:	str	lr, [sp, #12]
   1eb08:	bl	11114 <setlocale@plt>
   1eb0c:	subs	r6, r0, #0
   1eb10:	beq	1eb90 <__assert_fail@plt+0xda04>
   1eb14:	bl	11078 <strlen@plt>
   1eb18:	cmp	r4, r0
   1eb1c:	bhi	1eb3c <__assert_fail@plt+0xd9b0>
   1eb20:	cmp	r4, #0
   1eb24:	moveq	r0, #34	; 0x22
   1eb28:	bne	1eb60 <__assert_fail@plt+0xd9d4>
   1eb2c:	ldrd	r4, [sp]
   1eb30:	ldr	r6, [sp, #8]
   1eb34:	add	sp, sp, #12
   1eb38:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb3c:	add	r2, r0, #1
   1eb40:	mov	r1, r6
   1eb44:	mov	r0, r5
   1eb48:	bl	10f34 <memcpy@plt>
   1eb4c:	ldrd	r4, [sp]
   1eb50:	mov	r0, #0
   1eb54:	ldr	r6, [sp, #8]
   1eb58:	add	sp, sp, #12
   1eb5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb60:	sub	r4, r4, #1
   1eb64:	mov	r1, r6
   1eb68:	mov	r2, r4
   1eb6c:	mov	r0, r5
   1eb70:	bl	10f34 <memcpy@plt>
   1eb74:	mov	r3, #0
   1eb78:	mov	r0, #34	; 0x22
   1eb7c:	strb	r3, [r5, r4]
   1eb80:	ldrd	r4, [sp]
   1eb84:	ldr	r6, [sp, #8]
   1eb88:	add	sp, sp, #12
   1eb8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb90:	cmp	r4, #0
   1eb94:	mov	r0, #22
   1eb98:	strbne	r6, [r5]
   1eb9c:	ldrd	r4, [sp]
   1eba0:	ldr	r6, [sp, #8]
   1eba4:	add	sp, sp, #12
   1eba8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ebac:	mov	r1, #0
   1ebb0:	b	11114 <setlocale@plt>
   1ebb4:	cmp	r3, #0
   1ebb8:	cmpeq	r2, #0
   1ebbc:	bne	1ebd4 <__assert_fail@plt+0xda48>
   1ebc0:	cmp	r1, #0
   1ebc4:	cmpeq	r0, #0
   1ebc8:	mvnne	r1, #0
   1ebcc:	mvnne	r0, #0
   1ebd0:	b	1ebf0 <__assert_fail@plt+0xda64>
   1ebd4:	sub	sp, sp, #8
   1ebd8:	push	{sp, lr}
   1ebdc:	bl	1ec00 <__assert_fail@plt+0xda74>
   1ebe0:	ldr	lr, [sp, #4]
   1ebe4:	add	sp, sp, #8
   1ebe8:	pop	{r2, r3}
   1ebec:	bx	lr
   1ebf0:	push	{r1, lr}
   1ebf4:	mov	r0, #8
   1ebf8:	bl	10ed4 <raise@plt>
   1ebfc:	pop	{r1, pc}
   1ec00:	cmp	r1, r3
   1ec04:	cmpeq	r0, r2
   1ec08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec0c:	mov	r4, r0
   1ec10:	movcc	r0, #0
   1ec14:	mov	r5, r1
   1ec18:	ldr	lr, [sp, #36]	; 0x24
   1ec1c:	movcc	r1, r0
   1ec20:	bcc	1ed1c <__assert_fail@plt+0xdb90>
   1ec24:	cmp	r3, #0
   1ec28:	clzeq	ip, r2
   1ec2c:	clzne	ip, r3
   1ec30:	addeq	ip, ip, #32
   1ec34:	cmp	r5, #0
   1ec38:	clzeq	r1, r4
   1ec3c:	addeq	r1, r1, #32
   1ec40:	clzne	r1, r5
   1ec44:	sub	ip, ip, r1
   1ec48:	sub	sl, ip, #32
   1ec4c:	lsl	r9, r3, ip
   1ec50:	rsb	fp, ip, #32
   1ec54:	orr	r9, r9, r2, lsl sl
   1ec58:	orr	r9, r9, r2, lsr fp
   1ec5c:	lsl	r8, r2, ip
   1ec60:	cmp	r5, r9
   1ec64:	cmpeq	r4, r8
   1ec68:	movcc	r0, #0
   1ec6c:	movcc	r1, r0
   1ec70:	bcc	1ec8c <__assert_fail@plt+0xdb00>
   1ec74:	mov	r0, #1
   1ec78:	subs	r4, r4, r8
   1ec7c:	lsl	r1, r0, sl
   1ec80:	orr	r1, r1, r0, lsr fp
   1ec84:	lsl	r0, r0, ip
   1ec88:	sbc	r5, r5, r9
   1ec8c:	cmp	ip, #0
   1ec90:	beq	1ed1c <__assert_fail@plt+0xdb90>
   1ec94:	lsr	r6, r8, #1
   1ec98:	orr	r6, r6, r9, lsl #31
   1ec9c:	lsr	r7, r9, #1
   1eca0:	mov	r2, ip
   1eca4:	b	1ecc8 <__assert_fail@plt+0xdb3c>
   1eca8:	subs	r3, r4, r6
   1ecac:	sbc	r8, r5, r7
   1ecb0:	adds	r3, r3, r3
   1ecb4:	adc	r8, r8, r8
   1ecb8:	adds	r4, r3, #1
   1ecbc:	adc	r5, r8, #0
   1ecc0:	subs	r2, r2, #1
   1ecc4:	beq	1ece4 <__assert_fail@plt+0xdb58>
   1ecc8:	cmp	r5, r7
   1eccc:	cmpeq	r4, r6
   1ecd0:	bcs	1eca8 <__assert_fail@plt+0xdb1c>
   1ecd4:	adds	r4, r4, r4
   1ecd8:	adc	r5, r5, r5
   1ecdc:	subs	r2, r2, #1
   1ece0:	bne	1ecc8 <__assert_fail@plt+0xdb3c>
   1ece4:	lsr	r3, r4, ip
   1ece8:	orr	r3, r3, r5, lsl fp
   1ecec:	lsr	r2, r5, ip
   1ecf0:	orr	r3, r3, r5, lsr sl
   1ecf4:	adds	r0, r0, r4
   1ecf8:	mov	r4, r3
   1ecfc:	lsl	r3, r2, ip
   1ed00:	orr	r3, r3, r4, lsl sl
   1ed04:	lsl	ip, r4, ip
   1ed08:	orr	r3, r3, r4, lsr fp
   1ed0c:	adc	r1, r1, r5
   1ed10:	subs	r0, r0, ip
   1ed14:	mov	r5, r2
   1ed18:	sbc	r1, r1, r3
   1ed1c:	cmp	lr, #0
   1ed20:	strdne	r4, [lr]
   1ed24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ed2c:	mov	r7, r0
   1ed30:	ldr	r6, [pc, #72]	; 1ed80 <__assert_fail@plt+0xdbf4>
   1ed34:	ldr	r5, [pc, #72]	; 1ed84 <__assert_fail@plt+0xdbf8>
   1ed38:	add	r6, pc, r6
   1ed3c:	add	r5, pc, r5
   1ed40:	sub	r6, r6, r5
   1ed44:	mov	r8, r1
   1ed48:	mov	r9, r2
   1ed4c:	bl	10e90 <fdopen@plt-0x20>
   1ed50:	asrs	r6, r6, #2
   1ed54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ed58:	mov	r4, #0
   1ed5c:	add	r4, r4, #1
   1ed60:	ldr	r3, [r5], #4
   1ed64:	mov	r2, r9
   1ed68:	mov	r1, r8
   1ed6c:	mov	r0, r7
   1ed70:	blx	r3
   1ed74:	cmp	r6, r4
   1ed78:	bne	1ed5c <__assert_fail@plt+0xdbd0>
   1ed7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ed80:	ldrdeq	r2, [r1], -r4
   1ed84:	andeq	r2, r1, ip, asr #3
   1ed88:	bx	lr
   1ed8c:	ldr	r3, [pc, #12]	; 1eda0 <__assert_fail@plt+0xdc14>
   1ed90:	mov	r1, #0
   1ed94:	add	r3, pc, r3
   1ed98:	ldr	r2, [r3]
   1ed9c:	b	1109c <__cxa_atexit@plt>
   1eda0:	andeq	r2, r1, r0, ror r3

Disassembly of section .fini:

0001eda4 <.fini>:
   1eda4:	push	{r3, lr}
   1eda8:	pop	{r3, pc}
