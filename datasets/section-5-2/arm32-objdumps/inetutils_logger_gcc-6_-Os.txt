
../repos/inetutils/src/logger:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	11784 <putc_unlocked@plt+0x490>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <calloc@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <calloc@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	r8, r1, r4

00011000 <calloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #24, 20	; 0x18000
   11008:	ldr	pc, [ip, #4]!

0001100c <fputs_unlocked@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <raise@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <strcmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <getpwuid@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <printf@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <getuid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <memmove@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <strchrnul@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <free@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <gai_strerror@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <strndup@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <memcpy@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <time@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #94208	; 0x17000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <fwrite_unlocked@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #94208	; 0x17000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <sleep@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #94208	; 0x17000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <ctime@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #94208	; 0x17000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <realloc@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #94208	; 0x17000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <strcasecmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #94208	; 0x17000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <funlockfile@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #94208	; 0x17000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <strcpy@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #94208	; 0x17000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <error@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #94208	; 0x17000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <getenv@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #94208	; 0x17000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <malloc@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #94208	; 0x17000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <__libc_start_main@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #94208	; 0x17000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <strerror@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #94208	; 0x17000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <__ctype_tolower_loc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #94208	; 0x17000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__gmon_start__@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #94208	; 0x17000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <freopen64@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #94208	; 0x17000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <mempcpy@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #94208	; 0x17000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <__ctype_b_loc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #94208	; 0x17000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <getpid@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #94208	; 0x17000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <exit@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #94208	; 0x17000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <strtoul@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #94208	; 0x17000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <strlen@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #94208	; 0x17000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <strchr@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #94208	; 0x17000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <fprintf@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #94208	; 0x17000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <__errno_location@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #94208	; 0x17000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <strerror_r@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #94208	; 0x17000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <bind@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #94208	; 0x17000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <memset@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #94208	; 0x17000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <fileno@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #94208	; 0x17000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <asprintf@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #94208	; 0x17000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <memchr@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #94208	; 0x17000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <writev@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #94208	; 0x17000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <strrchr@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #94208	; 0x17000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <vfprintf@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #94208	; 0x17000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <fputc@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #94208	; 0x17000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <flockfile@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #94208	; 0x17000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <vsnprintf@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #94208	; 0x17000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <atoi@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #94208	; 0x17000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <qsort@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #94208	; 0x17000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <freeaddrinfo@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #94208	; 0x17000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <getaddrinfo@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #94208	; 0x17000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <socket@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #94208	; 0x17000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <getline@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #94208	; 0x17000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <fputs@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #94208	; 0x17000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <strncmp@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #94208	; 0x17000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <abort@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #94208	; 0x17000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <close@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #94208	; 0x17000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <send@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #94208	; 0x17000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <connect@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #94208	; 0x17000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <__assert_fail@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #94208	; 0x17000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <putc_unlocked@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #94208	; 0x17000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

00011300 <argp_parse@@Base-0xf20>:
   11300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11304:	sub	sp, sp, #180	; 0xb4
   11308:	mov	r4, #0
   1130c:	mov	r9, r0
   11310:	ldr	r0, [r1]
   11314:	mov	r8, r1
   11318:	str	r4, [sp, #20]
   1131c:	bl	12e18 <argp_parse@@Base+0xbf8>
   11320:	ldr	r3, [pc, #988]	; 11704 <putc_unlocked@plt+0x410>
   11324:	ldr	r2, [pc, #988]	; 11708 <putc_unlocked@plt+0x414>
   11328:	ldr	r1, [pc, #988]	; 1170c <putc_unlocked@plt+0x418>
   1132c:	ldr	r0, [pc, #988]	; 11710 <putc_unlocked@plt+0x41c>
   11330:	str	r2, [r3]
   11334:	bl	12c08 <argp_parse@@Base+0x9e8>
   11338:	add	r3, sp, #16
   1133c:	str	r3, [sp]
   11340:	mov	r1, r9
   11344:	mov	r3, r4
   11348:	str	r4, [sp, #4]
   1134c:	mov	r2, r8
   11350:	ldr	r0, [pc, #956]	; 11714 <putc_unlocked@plt+0x420>
   11354:	ldr	r7, [pc, #956]	; 11718 <putc_unlocked@plt+0x424>
   11358:	bl	12220 <argp_parse@@Base>
   1135c:	ldr	r3, [sp, #16]
   11360:	str	r3, [sp, #12]
   11364:	sub	r9, r9, r3
   11368:	ldr	r3, [r7, #8]
   1136c:	cmp	r3, r4
   11370:	bne	113a4 <putc_unlocked@plt+0xb0>
   11374:	ldr	r0, [pc, #928]	; 1171c <putc_unlocked@plt+0x428>
   11378:	bl	11108 <getenv@plt>
   1137c:	cmp	r0, r4
   11380:	str	r0, [r7, #8]
   11384:	bne	113a4 <putc_unlocked@plt+0xb0>
   11388:	bl	11048 <getuid@plt>
   1138c:	bl	11030 <getpwuid@plt>
   11390:	cmp	r0, #0
   11394:	ldrne	r0, [r0]
   11398:	ldreq	r0, [pc, #896]	; 11720 <putc_unlocked@plt+0x42c>
   1139c:	bl	1371c <argp_parse@@Base+0x14fc>
   113a0:	str	r0, [r7, #8]
   113a4:	ldr	r5, [pc, #888]	; 11724 <putc_unlocked@plt+0x430>
   113a8:	ldr	r4, [r5, #292]	; 0x124
   113ac:	cmp	r4, #0
   113b0:	beq	113c8 <putc_unlocked@plt+0xd4>
   113b4:	mov	r1, #47	; 0x2f
   113b8:	mov	r0, r4
   113bc:	bl	111a4 <strchr@plt>
   113c0:	cmp	r0, #0
   113c4:	bne	113d4 <putc_unlocked@plt+0xe0>
   113c8:	ldr	r6, [r7, #16]
   113cc:	cmp	r6, #0
   113d0:	beq	1147c <putc_unlocked@plt+0x188>
   113d4:	ldr	r3, [r7, #16]
   113d8:	cmp	r3, #0
   113dc:	strne	r3, [r5, #292]	; 0x124
   113e0:	ldr	r0, [r5, #292]	; 0x124
   113e4:	bl	11198 <strlen@plt>
   113e8:	cmp	r0, #107	; 0x6b
   113ec:	bls	11400 <putc_unlocked@plt+0x10c>
   113f0:	ldr	r2, [pc, #816]	; 11728 <putc_unlocked@plt+0x434>
   113f4:	mov	r1, #0
   113f8:	mov	r0, #1
   113fc:	bl	110fc <error@plt>
   11400:	ldr	r1, [r5, #292]	; 0x124
   11404:	add	r0, sp, #66	; 0x42
   11408:	mov	r5, #1
   1140c:	bl	110f0 <strcpy@plt>
   11410:	mov	r2, #0
   11414:	mov	r1, #2
   11418:	mov	r0, r5
   1141c:	strh	r5, [sp, #64]	; 0x40
   11420:	bl	11288 <socket@plt>
   11424:	ldr	r3, [pc, #768]	; 1172c <putc_unlocked@plt+0x438>
   11428:	mov	r4, r3
   1142c:	cmp	r0, #0
   11430:	str	r0, [r3]
   11434:	bge	1144c <putc_unlocked@plt+0x158>
   11438:	bl	111bc <__errno_location@plt>
   1143c:	ldr	r2, [pc, #748]	; 11730 <putc_unlocked@plt+0x43c>
   11440:	ldr	r1, [r0]
   11444:	mov	r0, r5
   11448:	bl	110fc <error@plt>
   1144c:	mov	r2, #110	; 0x6e
   11450:	add	r1, sp, #64	; 0x40
   11454:	ldr	r0, [r4]
   11458:	bl	112dc <connect@plt>
   1145c:	cmp	r0, #0
   11460:	beq	11628 <putc_unlocked@plt+0x334>
   11464:	bl	111bc <__errno_location@plt>
   11468:	ldr	r2, [pc, #708]	; 11734 <putc_unlocked@plt+0x440>
   1146c:	ldr	r1, [r0]
   11470:	mov	r0, #1
   11474:	bl	110fc <error@plt>
   11478:	b	11628 <putc_unlocked@plt+0x334>
   1147c:	ldrb	r3, [r4]
   11480:	cmp	r3, #91	; 0x5b
   11484:	bne	11590 <putc_unlocked@plt+0x29c>
   11488:	add	r0, r4, #1
   1148c:	mov	r1, #93	; 0x5d
   11490:	str	r0, [r5, #292]	; 0x124
   11494:	bl	111a4 <strchr@plt>
   11498:	cmp	r0, #0
   1149c:	bne	11578 <putc_unlocked@plt+0x284>
   114a0:	ldr	r4, [pc, #656]	; 11738 <putc_unlocked@plt+0x444>
   114a4:	mov	r2, #32
   114a8:	mov	r1, #0
   114ac:	add	r0, sp, r2
   114b0:	bl	111e0 <memset@plt>
   114b4:	mov	r3, #2
   114b8:	str	r3, [sp, #40]	; 0x28
   114bc:	ldr	r3, [r7, #12]
   114c0:	add	r2, sp, #32
   114c4:	str	r3, [sp, #36]	; 0x24
   114c8:	mov	r1, r4
   114cc:	add	r3, sp, #24
   114d0:	ldr	r0, [r5, #292]	; 0x124
   114d4:	bl	1127c <getaddrinfo@plt>
   114d8:	cmp	r0, #0
   114dc:	bge	11504 <putc_unlocked@plt+0x210>
   114e0:	ldr	r6, [r5, #292]	; 0x124
   114e4:	bl	11078 <gai_strerror@plt>
   114e8:	str	r4, [sp]
   114ec:	mov	r3, r6
   114f0:	ldr	r2, [pc, #580]	; 1173c <putc_unlocked@plt+0x448>
   114f4:	mov	r1, #0
   114f8:	str	r0, [sp, #4]
   114fc:	mov	r0, #1
   11500:	bl	110fc <error@plt>
   11504:	ldr	r6, [sp, #24]
   11508:	ldr	sl, [pc, #540]	; 1172c <putc_unlocked@plt+0x438>
   1150c:	cmp	r6, #0
   11510:	beq	115f8 <putc_unlocked@plt+0x304>
   11514:	ldmib	r6, {r0, r1, r2}
   11518:	bl	11288 <socket@plt>
   1151c:	cmp	r0, #0
   11520:	str	r0, [sl]
   11524:	blt	11570 <putc_unlocked@plt+0x27c>
   11528:	ldr	fp, [r7, #20]
   1152c:	cmp	fp, #0
   11530:	beq	115e0 <putc_unlocked@plt+0x2ec>
   11534:	mov	r2, #32
   11538:	mov	r1, #0
   1153c:	add	r0, sp, #64	; 0x40
   11540:	bl	111e0 <memset@plt>
   11544:	ldr	r3, [r6, #4]
   11548:	add	r2, sp, #64	; 0x40
   1154c:	str	r3, [sp, #68]	; 0x44
   11550:	mov	r1, #0
   11554:	add	r3, sp, #28
   11558:	mov	r0, fp
   1155c:	bl	1127c <getaddrinfo@plt>
   11560:	cmp	r0, #0
   11564:	beq	115b4 <putc_unlocked@plt+0x2c0>
   11568:	ldr	r0, [sl]
   1156c:	bl	112c4 <close@plt>
   11570:	ldr	r6, [r6, #28]
   11574:	b	1150c <putc_unlocked@plt+0x218>
   11578:	ldrb	r3, [r0, #1]
   1157c:	strb	r6, [r0]
   11580:	cmp	r3, #58	; 0x3a
   11584:	addeq	r4, r0, #2
   11588:	bne	114a0 <putc_unlocked@plt+0x1ac>
   1158c:	b	114a4 <putc_unlocked@plt+0x1b0>
   11590:	mov	r1, #58	; 0x3a
   11594:	mov	r0, r4
   11598:	bl	1121c <strrchr@plt>
   1159c:	cmp	r0, #0
   115a0:	beq	114a0 <putc_unlocked@plt+0x1ac>
   115a4:	adds	r4, r0, #1
   115a8:	strb	r6, [r0]
   115ac:	bne	114a4 <putc_unlocked@plt+0x1b0>
   115b0:	b	114a0 <putc_unlocked@plt+0x1ac>
   115b4:	ldr	r3, [sp, #28]
   115b8:	ldr	r0, [sl]
   115bc:	ldr	r2, [r3, #16]
   115c0:	ldr	r1, [r3, #20]
   115c4:	bl	111d4 <bind@plt>
   115c8:	cmp	r0, #0
   115cc:	ldr	r0, [sp, #28]
   115d0:	beq	115dc <putc_unlocked@plt+0x2e8>
   115d4:	bl	11270 <freeaddrinfo@plt>
   115d8:	b	11568 <putc_unlocked@plt+0x274>
   115dc:	bl	11270 <freeaddrinfo@plt>
   115e0:	ldr	r2, [r6, #16]
   115e4:	ldr	r1, [r6, #20]
   115e8:	ldr	r0, [sl]
   115ec:	bl	112dc <connect@plt>
   115f0:	cmp	r0, #0
   115f4:	bne	11568 <putc_unlocked@plt+0x274>
   115f8:	ldr	r0, [sp, #24]
   115fc:	cmp	r0, #0
   11600:	beq	11608 <putc_unlocked@plt+0x314>
   11604:	bl	11270 <freeaddrinfo@plt>
   11608:	cmp	r6, #0
   1160c:	bne	11628 <putc_unlocked@plt+0x334>
   11610:	str	r4, [sp]
   11614:	ldr	r2, [pc, #292]	; 11740 <putc_unlocked@plt+0x44c>
   11618:	ldr	r3, [r5, #292]	; 0x124
   1161c:	mov	r1, #99	; 0x63
   11620:	mov	r0, #1
   11624:	bl	110fc <error@plt>
   11628:	cmp	r9, #0
   1162c:	ble	116d0 <putc_unlocked@plt+0x3dc>
   11630:	ldr	r3, [sp, #12]
   11634:	mov	r4, #0
   11638:	add	r8, r8, r3, lsl #2
   1163c:	mov	r5, r8
   11640:	add	r6, r8, r9, lsl #2
   11644:	ldr	r0, [r5], #4
   11648:	bl	11198 <strlen@plt>
   1164c:	cmp	r6, r5
   11650:	add	r0, r0, #1
   11654:	add	r4, r4, r0
   11658:	bne	11644 <putc_unlocked@plt+0x350>
   1165c:	mov	r0, r4
   11660:	bl	132a4 <argp_parse@@Base+0x1084>
   11664:	mov	r5, #0
   11668:	mov	fp, #32
   1166c:	mov	r6, r0
   11670:	mov	r7, r0
   11674:	str	r0, [sp, #20]
   11678:	ldr	sl, [r8, r5, lsl #2]
   1167c:	add	r5, r5, #1
   11680:	mov	r0, sl
   11684:	bl	11198 <strlen@plt>
   11688:	mov	r1, sl
   1168c:	mov	r4, r0
   11690:	mov	r2, r0
   11694:	mov	r0, r7
   11698:	bl	11090 <memcpy@plt>
   1169c:	add	r0, r7, r4
   116a0:	cmp	r9, r5
   116a4:	add	r7, r0, #1
   116a8:	strb	fp, [r0]
   116ac:	bne	11678 <putc_unlocked@plt+0x384>
   116b0:	mov	r3, #0
   116b4:	strb	r3, [r0]
   116b8:	mov	r0, r6
   116bc:	bl	11870 <putc_unlocked@plt+0x57c>
   116c0:	ldr	r0, [sp, #20]
   116c4:	bl	12cbc <argp_parse@@Base+0xa9c>
   116c8:	mov	r0, #0
   116cc:	bl	11180 <exit@plt>
   116d0:	ldr	r5, [pc, #108]	; 11744 <putc_unlocked@plt+0x450>
   116d4:	add	r4, sp, #176	; 0xb0
   116d8:	mov	r3, #0
   116dc:	str	r3, [r4, #-112]!	; 0xffffff90
   116e0:	ldr	r2, [r5]
   116e4:	mov	r1, r4
   116e8:	add	r0, sp, #20
   116ec:	bl	11294 <getline@plt>
   116f0:	cmp	r0, #0
   116f4:	ble	116c0 <putc_unlocked@plt+0x3cc>
   116f8:	ldr	r0, [sp, #20]
   116fc:	bl	11870 <putc_unlocked@plt+0x57c>
   11700:	b	116e0 <putc_unlocked@plt+0x3ec>
   11704:	andeq	r9, r2, r8, lsl r4
   11708:	strdeq	r7, [r1], -r5
   1170c:	andeq	r9, r2, r0, asr #4
   11710:	andeq	r7, r1, sp, lsl #26
   11714:	andeq	r9, r2, r8, asr #4
   11718:	andeq	r9, r2, r4, asr #7
   1171c:	andeq	r7, r1, r4, lsl sp
   11720:	andeq	r7, r1, r9, lsl sp
   11724:	andeq	r9, r2, r8, lsl r1
   11728:	andeq	r7, r1, lr, lsl sp
   1172c:	andeq	r9, r2, r4, lsl r4
   11730:	andeq	r7, r1, r8, asr #26
   11734:	andeq	r7, r1, sp, asr sp
   11738:	andeq	r7, r1, lr, ror #25
   1173c:	andeq	r7, r1, r8, lsr sp
   11740:	andeq	r7, r1, r2, asr #26
   11744:			; <UNDEFINED> instruction: 0x000293b8
   11748:	mov	fp, #0
   1174c:	mov	lr, #0
   11750:	pop	{r1}		; (ldr r1, [sp], #4)
   11754:	mov	r2, sp
   11758:	push	{r2}		; (str r2, [sp, #-4]!)
   1175c:	push	{r0}		; (str r0, [sp, #-4]!)
   11760:	ldr	ip, [pc, #16]	; 11778 <putc_unlocked@plt+0x484>
   11764:	push	{ip}		; (str ip, [sp, #-4]!)
   11768:	ldr	r0, [pc, #12]	; 1177c <putc_unlocked@plt+0x488>
   1176c:	ldr	r3, [pc, #12]	; 11780 <putc_unlocked@plt+0x48c>
   11770:	bl	11120 <__libc_start_main@plt>
   11774:	bl	112b8 <abort@plt>
   11778:	andeq	r7, r1, ip, lsl #24
   1177c:	andeq	r1, r1, r0, lsl #6
   11780:	andeq	r7, r1, ip, lsr #23
   11784:	ldr	r3, [pc, #20]	; 117a0 <putc_unlocked@plt+0x4ac>
   11788:	ldr	r2, [pc, #20]	; 117a4 <putc_unlocked@plt+0x4b0>
   1178c:	add	r3, pc, r3
   11790:	ldr	r2, [r3, r2]
   11794:	cmp	r2, #0
   11798:	bxeq	lr
   1179c:	b	11144 <__gmon_start__@plt>
   117a0:	andeq	r7, r1, ip, ror #16
   117a4:	andeq	r0, r0, ip, lsl #2
   117a8:	ldr	r3, [pc, #28]	; 117cc <putc_unlocked@plt+0x4d8>
   117ac:	ldr	r0, [pc, #28]	; 117d0 <putc_unlocked@plt+0x4dc>
   117b0:	sub	r3, r3, r0
   117b4:	cmp	r3, #6
   117b8:	bxls	lr
   117bc:	ldr	r3, [pc, #16]	; 117d4 <putc_unlocked@plt+0x4e0>
   117c0:	cmp	r3, #0
   117c4:	bxeq	lr
   117c8:	bx	r3
   117cc:	andeq	r9, r2, fp, lsr #7
   117d0:	andeq	r9, r2, r8, lsr #7
   117d4:	andeq	r0, r0, r0
   117d8:	ldr	r1, [pc, #36]	; 11804 <putc_unlocked@plt+0x510>
   117dc:	ldr	r0, [pc, #36]	; 11808 <putc_unlocked@plt+0x514>
   117e0:	sub	r1, r1, r0
   117e4:	asr	r1, r1, #2
   117e8:	add	r1, r1, r1, lsr #31
   117ec:	asrs	r1, r1, #1
   117f0:	bxeq	lr
   117f4:	ldr	r3, [pc, #16]	; 1180c <putc_unlocked@plt+0x518>
   117f8:	cmp	r3, #0
   117fc:	bxeq	lr
   11800:	bx	r3
   11804:	andeq	r9, r2, r8, lsr #7
   11808:	andeq	r9, r2, r8, lsr #7
   1180c:	andeq	r0, r0, r0
   11810:	push	{r4, lr}
   11814:	ldr	r4, [pc, #24]	; 11834 <putc_unlocked@plt+0x540>
   11818:	ldrb	r3, [r4]
   1181c:	cmp	r3, #0
   11820:	popne	{r4, pc}
   11824:	bl	117a8 <putc_unlocked@plt+0x4b4>
   11828:	mov	r3, #1
   1182c:	strb	r3, [r4]
   11830:	pop	{r4, pc}
   11834:	andeq	r9, r2, r0, asr #7
   11838:	ldr	r0, [pc, #40]	; 11868 <putc_unlocked@plt+0x574>
   1183c:	ldr	r3, [r0]
   11840:	cmp	r3, #0
   11844:	bne	1184c <putc_unlocked@plt+0x558>
   11848:	b	117d8 <putc_unlocked@plt+0x4e4>
   1184c:	ldr	r3, [pc, #24]	; 1186c <putc_unlocked@plt+0x578>
   11850:	cmp	r3, #0
   11854:	beq	11848 <putc_unlocked@plt+0x554>
   11858:	push	{r4, lr}
   1185c:	blx	r3
   11860:	pop	{r4, lr}
   11864:	b	117d8 <putc_unlocked@plt+0x4e4>
   11868:	andeq	r8, r2, ip, lsl #30
   1186c:	andeq	r0, r0, r0
   11870:	push	{r4, r5, r6, lr}
   11874:	mov	r4, r0
   11878:	sub	sp, sp, #40	; 0x28
   1187c:	mov	r0, #0
   11880:	bl	1109c <time@plt>
   11884:	ldr	r5, [pc, #364]	; 119f8 <putc_unlocked@plt+0x704>
   11888:	add	r3, sp, #40	; 0x28
   1188c:	ldr	r2, [r5]
   11890:	tst	r2, #1
   11894:	ldr	r2, [pc, #352]	; 119fc <putc_unlocked@plt+0x708>
   11898:	ldr	r6, [r2]
   1189c:	str	r0, [r3, #-20]!	; 0xffffffec
   118a0:	mov	r0, r3
   118a4:	beq	119a8 <putc_unlocked@plt+0x6b4>
   118a8:	bl	110c0 <ctime@plt>
   118ac:	str	r4, [sp, #8]
   118b0:	ldr	r3, [r5, #4]
   118b4:	mov	r2, r6
   118b8:	str	r3, [sp, #4]
   118bc:	ldr	r3, [r5, #8]
   118c0:	ldr	r1, [pc, #312]	; 11a00 <putc_unlocked@plt+0x70c>
   118c4:	str	r3, [sp]
   118c8:	add	r3, r0, #4
   118cc:	add	r0, sp, #16
   118d0:	bl	111f8 <asprintf@plt>
   118d4:	cmn	r0, #1
   118d8:	bne	118f0 <putc_unlocked@plt+0x5fc>
   118dc:	bl	111bc <__errno_location@plt>
   118e0:	ldr	r2, [pc, #284]	; 11a04 <putc_unlocked@plt+0x710>
   118e4:	ldr	r1, [r0]
   118e8:	mov	r0, #1
   118ec:	bl	110fc <error@plt>
   118f0:	ldr	r0, [sp, #16]
   118f4:	bl	11198 <strlen@plt>
   118f8:	ldr	r3, [r5]
   118fc:	tst	r3, #32
   11900:	mov	r6, r0
   11904:	beq	11960 <putc_unlocked@plt+0x66c>
   11908:	mov	r0, r4
   1190c:	bl	11198 <strlen@plt>
   11910:	str	r4, [sp, #24]
   11914:	add	r5, sp, #24
   11918:	add	r4, r4, r0
   1191c:	str	r0, [sp, #28]
   11920:	ldrb	r3, [r4, #-1]
   11924:	cmp	r3, #10
   11928:	addne	r4, r5, #8
   1192c:	ldrne	r3, [pc, #212]	; 11a08 <putc_unlocked@plt+0x714>
   11930:	moveq	r4, r5
   11934:	strne	r3, [sp, #32]
   11938:	movne	r3, #1
   1193c:	strne	r3, [sp, #36]	; 0x24
   11940:	ldr	r3, [pc, #196]	; 11a0c <putc_unlocked@plt+0x718>
   11944:	ldr	r0, [r3]
   11948:	bl	111ec <fileno@plt>
   1194c:	sub	r2, r4, r5
   11950:	mov	r1, r5
   11954:	asr	r2, r2, #3
   11958:	add	r2, r2, #1
   1195c:	bl	11210 <writev@plt>
   11960:	ldr	r0, [pc, #168]	; 11a10 <putc_unlocked@plt+0x71c>
   11964:	mov	r3, #0
   11968:	mov	r2, r6
   1196c:	ldr	r1, [sp, #16]
   11970:	ldr	r0, [r0]
   11974:	bl	112d0 <send@plt>
   11978:	mov	r4, r0
   1197c:	ldr	r0, [sp, #16]
   11980:	bl	12cbc <argp_parse@@Base+0xa9c>
   11984:	cmn	r4, #1
   11988:	bne	119d0 <putc_unlocked@plt+0x6dc>
   1198c:	bl	111bc <__errno_location@plt>
   11990:	ldr	r2, [pc, #124]	; 11a14 <putc_unlocked@plt+0x720>
   11994:	ldr	r1, [r0]
   11998:	mov	r0, #0
   1199c:	bl	110fc <error@plt>
   119a0:	add	sp, sp, #40	; 0x28
   119a4:	pop	{r4, r5, r6, pc}
   119a8:	bl	110c0 <ctime@plt>
   119ac:	str	r4, [sp, #4]
   119b0:	ldr	r3, [r5, #8]
   119b4:	mov	r2, r6
   119b8:	str	r3, [sp]
   119bc:	ldr	r1, [pc, #84]	; 11a18 <putc_unlocked@plt+0x724>
   119c0:	add	r3, r0, #4
   119c4:	add	r0, sp, #16
   119c8:	bl	111f8 <asprintf@plt>
   119cc:	b	118d4 <putc_unlocked@plt+0x5e0>
   119d0:	cmp	r4, r6
   119d4:	beq	119a0 <putc_unlocked@plt+0x6ac>
   119d8:	bl	111bc <__errno_location@plt>
   119dc:	str	r6, [sp]
   119e0:	mov	r3, r4
   119e4:	ldr	r2, [pc, #48]	; 11a1c <putc_unlocked@plt+0x728>
   119e8:	ldr	r1, [r0]
   119ec:	mov	r0, #0
   119f0:	bl	110fc <error@plt>
   119f4:	b	119a0 <putc_unlocked@plt+0x6ac>
   119f8:	andeq	r9, r2, r4, asr #7
   119fc:	andeq	r9, r2, r8, lsl r1
   11a00:	andeq	r7, r1, lr, lsr ip
   11a04:	andeq	r7, r1, r4, ror #24
   11a08:	muleq	r1, r4, r9
   11a0c:			; <UNDEFINED> instruction: 0x000293b0
   11a10:	andeq	r9, r2, r4, lsl r4
   11a14:	andeq	r7, r1, sl, ror ip
   11a18:	andeq	r7, r1, r3, asr ip
   11a1c:	andeq	r7, r1, r6, lsl #25
   11a20:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11a24:	mov	r5, r0
   11a28:	mov	r6, r2
   11a2c:	mov	r4, r1
   11a30:	bl	11168 <__ctype_b_loc@plt>
   11a34:	ldrb	r3, [r5]
   11a38:	lsl	r3, r3, #1
   11a3c:	ldr	r2, [r0]
   11a40:	ldrh	r3, [r2, r3]
   11a44:	tst	r3, #2048	; 0x800
   11a48:	beq	11ab0 <putc_unlocked@plt+0x7bc>
   11a4c:	mov	r2, #0
   11a50:	add	r1, sp, #12
   11a54:	mov	r0, r5
   11a58:	bl	1118c <strtoul@plt>
   11a5c:	ldr	r3, [sp, #12]
   11a60:	ldrb	r3, [r3]
   11a64:	cmp	r0, #1016	; 0x3f8
   11a68:	cmpls	r3, #0
   11a6c:	mov	r4, r0
   11a70:	beq	11a8c <putc_unlocked@plt+0x798>
   11a74:	str	r5, [sp]
   11a78:	mov	r3, r6
   11a7c:	ldr	r2, [pc, #84]	; 11ad8 <putc_unlocked@plt+0x7e4>
   11a80:	mov	r1, #0
   11a84:	mov	r0, #1
   11a88:	bl	110fc <error@plt>
   11a8c:	mov	r0, r4
   11a90:	add	sp, sp, #16
   11a94:	pop	{r4, r5, r6, pc}
   11a98:	mov	r0, r5
   11a9c:	bl	110d8 <strcasecmp@plt>
   11aa0:	cmp	r0, #0
   11aa4:	ldreq	r0, [r4, #4]
   11aa8:	beq	11a90 <putc_unlocked@plt+0x79c>
   11aac:	add	r4, r4, #8
   11ab0:	ldr	r1, [r4]
   11ab4:	cmp	r1, #0
   11ab8:	bne	11a98 <putc_unlocked@plt+0x7a4>
   11abc:	mov	r0, #1
   11ac0:	str	r5, [sp]
   11ac4:	mov	r3, r6
   11ac8:	ldr	r2, [pc, #12]	; 11adc <putc_unlocked@plt+0x7e8>
   11acc:	bl	110fc <error@plt>
   11ad0:	mvn	r0, #0
   11ad4:	b	11a90 <putc_unlocked@plt+0x79c>
   11ad8:			; <UNDEFINED> instruction: 0x00017cb2
   11adc:	andeq	r7, r1, r8, asr #25
   11ae0:	push	{r4, r5, r6, lr}
   11ae4:	mov	r1, #46	; 0x2e
   11ae8:	mov	r5, r0
   11aec:	bl	111a4 <strchr@plt>
   11af0:	ldr	r2, [pc, #72]	; 11b40 <putc_unlocked@plt+0x84c>
   11af4:	ldr	r1, [pc, #72]	; 11b44 <putc_unlocked@plt+0x850>
   11af8:	subs	r4, r0, #0
   11afc:	movne	r3, #0
   11b00:	strbne	r3, [r4]
   11b04:	mov	r0, r5
   11b08:	addne	r4, r4, #1
   11b0c:	bl	11a20 <putc_unlocked@plt+0x72c>
   11b10:	cmp	r4, #0
   11b14:	mov	r5, r0
   11b18:	moveq	r0, #5
   11b1c:	beq	11b30 <putc_unlocked@plt+0x83c>
   11b20:	ldr	r2, [pc, #32]	; 11b48 <putc_unlocked@plt+0x854>
   11b24:	ldr	r1, [pc, #32]	; 11b4c <putc_unlocked@plt+0x858>
   11b28:	mov	r0, r4
   11b2c:	bl	11a20 <putc_unlocked@plt+0x72c>
   11b30:	and	r5, r5, #1016	; 0x3f8
   11b34:	and	r0, r0, #7
   11b38:	orr	r0, r5, r0
   11b3c:	pop	{r4, r5, r6, pc}
   11b40:	ldrdeq	r7, [r1], -ip
   11b44:	andeq	r9, r2, ip, lsl r1
   11b48:	andeq	r7, r1, r5, ror #25
   11b4c:	ldrdeq	r9, [r2], -r4
   11b50:	cmp	r0, #104	; 0x68
   11b54:	beq	11c54 <putc_unlocked@plt+0x960>
   11b58:	push	{r4, r5, lr}
   11b5c:	mov	r5, r1
   11b60:	sub	sp, sp, #28
   11b64:	bgt	11be4 <putc_unlocked@plt+0x8f0>
   11b68:	cmp	r0, #54	; 0x36
   11b6c:	beq	11c3c <putc_unlocked@plt+0x948>
   11b70:	bgt	11b88 <putc_unlocked@plt+0x894>
   11b74:	cmp	r0, #52	; 0x34
   11b78:	moveq	r2, #2
   11b7c:	beq	11c40 <putc_unlocked@plt+0x94c>
   11b80:	mov	r0, #7
   11b84:	b	11c4c <putc_unlocked@plt+0x958>
   11b88:	cmp	r0, #83	; 0x53
   11b8c:	beq	11c6c <putc_unlocked@plt+0x978>
   11b90:	cmp	r0, #102	; 0x66
   11b94:	bne	11b80 <putc_unlocked@plt+0x88c>
   11b98:	ldr	r1, [pc, #304]	; 11cd0 <putc_unlocked@plt+0x9dc>
   11b9c:	mov	r0, r5
   11ba0:	bl	11024 <strcmp@plt>
   11ba4:	cmp	r0, #0
   11ba8:	beq	11c48 <putc_unlocked@plt+0x954>
   11bac:	ldr	r3, [pc, #288]	; 11cd4 <putc_unlocked@plt+0x9e0>
   11bb0:	ldr	r1, [pc, #288]	; 11cd8 <putc_unlocked@plt+0x9e4>
   11bb4:	mov	r0, r5
   11bb8:	ldr	r2, [r3]
   11bbc:	bl	11150 <freopen64@plt>
   11bc0:	subs	r4, r0, #0
   11bc4:	bne	11c48 <putc_unlocked@plt+0x954>
   11bc8:	bl	111bc <__errno_location@plt>
   11bcc:	mov	r3, r5
   11bd0:	ldr	r2, [pc, #260]	; 11cdc <putc_unlocked@plt+0x9e8>
   11bd4:	ldr	r1, [r0]
   11bd8:	mov	r0, #1
   11bdc:	bl	110fc <error@plt>
   11be0:	b	11c48 <putc_unlocked@plt+0x954>
   11be4:	cmp	r0, #115	; 0x73
   11be8:	beq	11cb0 <putc_unlocked@plt+0x9bc>
   11bec:	bgt	11c14 <putc_unlocked@plt+0x920>
   11bf0:	cmp	r0, #105	; 0x69
   11bf4:	beq	11c78 <putc_unlocked@plt+0x984>
   11bf8:	cmp	r0, #112	; 0x70
   11bfc:	bne	11b80 <putc_unlocked@plt+0x88c>
   11c00:	mov	r0, r1
   11c04:	bl	11ae0 <putc_unlocked@plt+0x7ec>
   11c08:	ldr	r3, [pc, #208]	; 11ce0 <putc_unlocked@plt+0x9ec>
   11c0c:	str	r0, [r3]
   11c10:	b	11c48 <putc_unlocked@plt+0x954>
   11c14:	cmp	r0, #116	; 0x74
   11c18:	beq	11cc4 <putc_unlocked@plt+0x9d0>
   11c1c:	cmp	r0, #117	; 0x75
   11c20:	bne	11b80 <putc_unlocked@plt+0x88c>
   11c24:	ldr	r3, [pc, #184]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11c28:	mov	r0, #0
   11c2c:	str	r1, [r3, #16]
   11c30:	ldr	r3, [pc, #168]	; 11ce0 <putc_unlocked@plt+0x9ec>
   11c34:	str	r0, [r3, #292]	; 0x124
   11c38:	b	11c4c <putc_unlocked@plt+0x958>
   11c3c:	mov	r2, #10
   11c40:	ldr	r3, [pc, #156]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11c44:	str	r2, [r3, #12]
   11c48:	mov	r0, #0
   11c4c:	add	sp, sp, #28
   11c50:	pop	{r4, r5, pc}
   11c54:	ldr	r3, [pc, #132]	; 11ce0 <putc_unlocked@plt+0x9ec>
   11c58:	mov	r0, #0
   11c5c:	str	r1, [r3, #292]	; 0x124
   11c60:	ldr	r3, [pc, #124]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11c64:	str	r0, [r3, #16]
   11c68:	bx	lr
   11c6c:	ldr	r3, [pc, #112]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11c70:	str	r1, [r3, #20]
   11c74:	b	11c48 <putc_unlocked@plt+0x954>
   11c78:	ldr	r4, [pc, #100]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11c7c:	cmp	r1, #0
   11c80:	ldr	r3, [r4]
   11c84:	strne	r1, [r4, #4]
   11c88:	orr	r3, r3, #1
   11c8c:	str	r3, [r4]
   11c90:	bne	11c48 <putc_unlocked@plt+0x954>
   11c94:	bl	11174 <getpid@plt>
   11c98:	mov	r2, sp
   11c9c:	asr	r1, r0, #31
   11ca0:	bl	12db0 <argp_parse@@Base+0xb90>
   11ca4:	bl	1371c <argp_parse@@Base+0x14fc>
   11ca8:	str	r0, [r4, #4]
   11cac:	b	11c48 <putc_unlocked@plt+0x954>
   11cb0:	ldr	r2, [pc, #44]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11cb4:	ldr	r3, [r2]
   11cb8:	orr	r3, r3, #32
   11cbc:	str	r3, [r2]
   11cc0:	b	11c48 <putc_unlocked@plt+0x954>
   11cc4:	ldr	r3, [pc, #24]	; 11ce4 <putc_unlocked@plt+0x9f0>
   11cc8:	str	r1, [r3, #8]
   11ccc:	b	11c48 <putc_unlocked@plt+0x954>
   11cd0:	andeq	r8, r1, r1, ror #1
   11cd4:			; <UNDEFINED> instruction: 0x000293b8
   11cd8:	andeq	r7, r1, r2, lsl sp
   11cdc:	andeq	r7, r1, pc, lsr sp
   11ce0:	andeq	r9, r2, r8, lsl r1
   11ce4:	andeq	r9, r2, r4, asr #7
   11ce8:	push	{r4, r5, r6, lr}
   11cec:	ldr	r6, [r0]
   11cf0:	cmp	r6, #0
   11cf4:	beq	11d40 <putc_unlocked@plt+0xa4c>
   11cf8:	mov	ip, r2
   11cfc:	ldr	r2, [r0, #32]
   11d00:	mov	r5, r1
   11d04:	str	r2, [r1, #36]	; 0x24
   11d08:	ldr	r2, [r0, #24]
   11d0c:	mov	r4, r0
   11d10:	str	r2, [r1, #28]
   11d14:	ldr	r2, [r0, #28]
   11d18:	str	r2, [r1, #32]
   11d1c:	ldr	r2, [r0, #12]
   11d20:	mov	r0, ip
   11d24:	str	r2, [r1, #20]
   11d28:	mov	r2, r1
   11d2c:	mov	r1, r3
   11d30:	blx	r6
   11d34:	ldr	r3, [r5, #36]	; 0x24
   11d38:	str	r3, [r4, #32]
   11d3c:	pop	{r4, r5, r6, pc}
   11d40:	mov	r0, #7
   11d44:	pop	{r4, r5, r6, pc}
   11d48:	ldr	r3, [r0]
   11d4c:	push	{r4, r5, r6, lr}
   11d50:	cmp	r3, #0
   11d54:	ldr	r4, [r0, #16]
   11d58:	bne	11d68 <putc_unlocked@plt+0xa74>
   11d5c:	ldr	r2, [r0, #4]
   11d60:	cmp	r2, #0
   11d64:	beq	11dd0 <putc_unlocked@plt+0xadc>
   11d68:	ldr	r2, [r1, #8]
   11d6c:	cmp	r3, #0
   11d70:	add	r2, r2, #1
   11d74:	str	r2, [r1, #8]
   11d78:	beq	11dd0 <putc_unlocked@plt+0xadc>
   11d7c:	mov	r2, #0
   11d80:	add	r3, r3, #24
   11d84:	ldr	r0, [r3, #-20]	; 0xffffffec
   11d88:	cmp	r0, #0
   11d8c:	bne	11e0c <putc_unlocked@plt+0xb18>
   11d90:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11d94:	cmp	r0, #0
   11d98:	bne	11e0c <putc_unlocked@plt+0xb18>
   11d9c:	ldr	r0, [r3, #-8]
   11da0:	cmp	r0, #0
   11da4:	bne	11e0c <putc_unlocked@plt+0xb18>
   11da8:	ldr	r0, [r3, #-4]
   11dac:	cmp	r0, #0
   11db0:	bne	11e0c <putc_unlocked@plt+0xb18>
   11db4:	ldr	r3, [r1]
   11db8:	add	r0, r2, r2, lsl #1
   11dbc:	add	r3, r3, r0
   11dc0:	str	r3, [r1]
   11dc4:	ldr	r3, [r1, #4]
   11dc8:	add	r2, r3, r2
   11dcc:	str	r2, [r1, #4]
   11dd0:	cmp	r4, #0
   11dd4:	movne	r5, r1
   11dd8:	addne	r4, r4, #16
   11ddc:	bne	11df8 <putc_unlocked@plt+0xb04>
   11de0:	pop	{r4, r5, r6, pc}
   11de4:	mov	r1, r5
   11de8:	bl	11d48 <putc_unlocked@plt+0xa54>
   11dec:	ldr	r3, [r5, #12]
   11df0:	add	r3, r3, #1
   11df4:	str	r3, [r5, #12]
   11df8:	add	r4, r4, #16
   11dfc:	ldr	r0, [r4, #-32]	; 0xffffffe0
   11e00:	cmp	r0, #0
   11e04:	bne	11de4 <putc_unlocked@plt+0xaf0>
   11e08:	pop	{r4, r5, r6, pc}
   11e0c:	add	r2, r2, #1
   11e10:	b	11d80 <putc_unlocked@plt+0xa8c>
   11e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e18:	sub	sp, sp, #36	; 0x24
   11e1c:	ldr	r6, [r0]
   11e20:	mov	r9, r0
   11e24:	cmp	r6, #0
   11e28:	str	r1, [sp, #16]
   11e2c:	str	r2, [sp, #20]
   11e30:	mov	r4, r3
   11e34:	ldr	r5, [sp, #72]	; 0x48
   11e38:	ldr	sl, [r0, #16]
   11e3c:	addne	r7, r6, #24
   11e40:	movne	fp, #0
   11e44:	bne	11fc0 <putc_unlocked@plt+0xccc>
   11e48:	ldr	r6, [r0, #4]
   11e4c:	cmp	r6, #0
   11e50:	beq	11eb4 <putc_unlocked@plt+0xbc0>
   11e54:	ldr	r3, [r9, #4]
   11e58:	ldr	r2, [sp, #16]
   11e5c:	stm	r4, {r3, r9}
   11e60:	ldr	r3, [r5, #4]
   11e64:	str	r2, [r4, #16]
   11e68:	str	r3, [r4, #8]
   11e6c:	ldr	r2, [sp, #20]
   11e70:	mov	r3, #0
   11e74:	cmp	sl, r3
   11e78:	str	r3, [r4, #12]
   11e7c:	str	r2, [r4, #20]
   11e80:	str	r3, [r4, #24]
   11e84:	str	r3, [r4, #32]
   11e88:	str	r3, [r4, #28]
   11e8c:	beq	11eac <putc_unlocked@plt+0xbb8>
   11e90:	ldr	r2, [sl, r3, lsl #4]
   11e94:	cmp	r2, #0
   11e98:	bne	1201c <putc_unlocked@plt+0xd28>
   11e9c:	ldr	r2, [r5, #12]
   11ea0:	add	r3, r2, r3, lsl #2
   11ea4:	str	r2, [r4, #28]
   11ea8:	str	r3, [r5, #12]
   11eac:	mov	r6, r4
   11eb0:	add	r4, r4, #36	; 0x24
   11eb4:	cmp	sl, #0
   11eb8:	movne	r2, #0
   11ebc:	bne	12040 <putc_unlocked@plt+0xd4c>
   11ec0:	mov	r0, r4
   11ec4:	add	sp, sp, #36	; 0x24
   11ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ecc:	tst	r2, #8
   11ed0:	bne	11ef8 <putc_unlocked@plt+0xc04>
   11ed4:	sub	r3, r8, #1
   11ed8:	cmp	r3, #254	; 0xfe
   11edc:	bhi	11ef8 <putc_unlocked@plt+0xc04>
   11ee0:	bl	11168 <__ctype_b_loc@plt>
   11ee4:	lsl	r3, r8, #1
   11ee8:	ldr	r2, [r0]
   11eec:	ldrh	r3, [r2, r3]
   11ef0:	tst	r3, #16384	; 0x4000
   11ef4:	bne	12050 <putc_unlocked@plt+0xd5c>
   11ef8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   11efc:	cmp	r3, #0
   11f00:	beq	11fbc <putc_unlocked@plt+0xcc8>
   11f04:	ldr	r2, [r5]
   11f08:	str	r2, [sp, #12]
   11f0c:	ldr	r2, [r2, #8]
   11f10:	mov	r8, r2
   11f14:	ldr	r0, [r8]
   11f18:	cmp	r0, #0
   11f1c:	beq	11f4c <putc_unlocked@plt+0xc58>
   11f20:	mov	r1, r3
   11f24:	str	r2, [sp, #28]
   11f28:	str	r3, [sp, #24]
   11f2c:	bl	11024 <strcmp@plt>
   11f30:	ldr	r3, [sp, #24]
   11f34:	ldr	r2, [sp, #28]
   11f38:	cmp	r0, #0
   11f3c:	bne	12014 <putc_unlocked@plt+0xd20>
   11f40:	sub	r8, r8, r2
   11f44:	cmn	r8, #15
   11f48:	bge	11fbc <putc_unlocked@plt+0xcc8>
   11f4c:	ldr	r1, [r5, #8]
   11f50:	str	r3, [r1]
   11f54:	ldr	r3, [r6, #8]
   11f58:	cmp	r3, #0
   11f5c:	beq	11f74 <putc_unlocked@plt+0xc80>
   11f60:	ldr	r3, [r6, #12]
   11f64:	tst	r3, #1
   11f68:	movne	r3, #2
   11f6c:	moveq	r3, #1
   11f70:	str	r3, [sp, #8]
   11f74:	ldr	r2, [sp, #12]
   11f78:	ldr	r3, [sp, #8]
   11f7c:	ldr	r0, [pc, #292]	; 120a8 <putc_unlocked@plt+0xdb4>
   11f80:	ldr	r2, [r2, #48]	; 0x30
   11f84:	stmib	r1, {r3, fp}
   11f88:	sub	r2, r4, r2
   11f8c:	ldr	r3, [r7, #-20]	; 0xffffffec
   11f90:	asr	r2, r2, #2
   11f94:	cmp	r3, #0
   11f98:	mul	r2, r0, r2
   11f9c:	ldreq	r3, [r6, #4]
   11fa0:	add	r2, r2, #1
   11fa4:	bic	r3, r3, #-16777216	; 0xff000000
   11fa8:	add	r3, r3, r2, lsl #24
   11fac:	str	r3, [r1, #12]
   11fb0:	add	r3, r1, #16
   11fb4:	str	r3, [r5, #8]
   11fb8:	str	fp, [r1, #16]
   11fbc:	add	r7, r7, #24
   11fc0:	ldr	r8, [r7, #-20]	; 0xffffffec
   11fc4:	sub	r3, r7, #24
   11fc8:	cmp	r8, #0
   11fcc:	bne	11ff4 <putc_unlocked@plt+0xd00>
   11fd0:	ldr	r2, [r7, #-24]	; 0xffffffe8
   11fd4:	cmp	r2, #0
   11fd8:	bne	11ff4 <putc_unlocked@plt+0xd00>
   11fdc:	ldr	r2, [r7, #-8]
   11fe0:	cmp	r2, #0
   11fe4:	bne	11ff4 <putc_unlocked@plt+0xd00>
   11fe8:	ldr	r2, [r7, #-4]
   11fec:	cmp	r2, #0
   11ff0:	beq	11e54 <putc_unlocked@plt+0xb60>
   11ff4:	ldr	r2, [r7, #-12]
   11ff8:	tst	r2, #4
   11ffc:	moveq	r6, r3
   12000:	ldr	r3, [r6, #12]
   12004:	ands	r3, r3, #8
   12008:	str	r3, [sp, #8]
   1200c:	beq	11ecc <putc_unlocked@plt+0xbd8>
   12010:	b	11fbc <putc_unlocked@plt+0xcc8>
   12014:	add	r8, r8, #16
   12018:	b	11f14 <putc_unlocked@plt+0xc20>
   1201c:	add	r3, r3, #1
   12020:	b	11e90 <putc_unlocked@plt+0xb9c>
   12024:	mov	r3, r4
   12028:	str	r5, [sp]
   1202c:	mov	r1, r6
   12030:	add	r7, r2, #1
   12034:	bl	11e14 <putc_unlocked@plt+0xb20>
   12038:	mov	r2, r7
   1203c:	mov	r4, r0
   12040:	ldr	r0, [sl, r2, lsl #4]
   12044:	cmp	r0, #0
   12048:	bne	12024 <putc_unlocked@plt+0xd30>
   1204c:	b	11ec0 <putc_unlocked@plt+0xbcc>
   12050:	ldr	r3, [r5, #4]
   12054:	add	r2, r3, #1
   12058:	str	r2, [r5, #4]
   1205c:	strb	r8, [r3]
   12060:	ldr	r3, [r6, #8]
   12064:	cmp	r3, #0
   12068:	beq	1209c <putc_unlocked@plt+0xda8>
   1206c:	ldr	r3, [r5, #4]
   12070:	add	r2, r3, #1
   12074:	str	r2, [r5, #4]
   12078:	mov	r2, #58	; 0x3a
   1207c:	strb	r2, [r3]
   12080:	ldr	r3, [r6, #12]
   12084:	tst	r3, #1
   12088:	ldrne	r3, [r5, #4]
   1208c:	addne	r2, r3, #1
   12090:	strne	r2, [r5, #4]
   12094:	movne	r2, #58	; 0x3a
   12098:	strbne	r2, [r3]
   1209c:	ldr	r3, [r5, #4]
   120a0:	strb	fp, [r3]
   120a4:	b	11ef8 <putc_unlocked@plt+0xc04>
   120a8:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   120ac:	cmp	r0, #86	; 0x56
   120b0:	bne	1211c <putc_unlocked@plt+0xe28>
   120b4:	ldr	r3, [pc, #112]	; 1212c <putc_unlocked@plt+0xe38>
   120b8:	push	{r4, lr}
   120bc:	mov	r4, r2
   120c0:	ldr	r3, [r3]
   120c4:	cmp	r3, #0
   120c8:	beq	120e8 <putc_unlocked@plt+0xdf4>
   120cc:	mov	r1, r2
   120d0:	ldr	r0, [r2, #48]	; 0x30
   120d4:	blx	r3
   120d8:	ldr	r0, [r4, #16]
   120dc:	ands	r0, r0, #32
   120e0:	bne	12124 <putc_unlocked@plt+0xe30>
   120e4:	bl	11180 <exit@plt>
   120e8:	ldr	r3, [pc, #64]	; 12130 <putc_unlocked@plt+0xe3c>
   120ec:	ldr	r2, [r3]
   120f0:	cmp	r2, #0
   120f4:	beq	12108 <putc_unlocked@plt+0xe14>
   120f8:	ldr	r1, [pc, #52]	; 12134 <putc_unlocked@plt+0xe40>
   120fc:	ldr	r0, [r4, #48]	; 0x30
   12100:	bl	111b0 <fprintf@plt>
   12104:	b	120d8 <putc_unlocked@plt+0xde4>
   12108:	ldr	r2, [pc, #40]	; 12138 <putc_unlocked@plt+0xe44>
   1210c:	ldr	r1, [pc, #40]	; 1213c <putc_unlocked@plt+0xe48>
   12110:	mov	r0, r4
   12114:	bl	16408 <argp_error@@Base>
   12118:	b	120d8 <putc_unlocked@plt+0xde4>
   1211c:	mov	r0, #7
   12120:	bx	lr
   12124:	mov	r0, #0
   12128:	pop	{r4, pc}
   1212c:	andeq	r9, r2, r0, ror #7
   12130:	andeq	r9, r2, ip, lsl r4
   12134:	andeq	r8, r1, lr, lsl r2
   12138:	strheq	r8, [r1], -r4
   1213c:	andeq	r7, r1, pc, lsr sp
   12140:	cmn	r0, #3
   12144:	push	{r4, r5, r6, lr}
   12148:	mov	r4, r2
   1214c:	beq	12190 <putc_unlocked@plt+0xe9c>
   12150:	mov	r5, r1
   12154:	bgt	12168 <putc_unlocked@plt+0xe74>
   12158:	cmn	r0, #4
   1215c:	beq	121cc <putc_unlocked@plt+0xed8>
   12160:	mov	r0, #7
   12164:	pop	{r4, r5, r6, pc}
   12168:	cmn	r0, #2
   1216c:	beq	12198 <putc_unlocked@plt+0xea4>
   12170:	cmp	r0, #63	; 0x3f
   12174:	ldreq	r2, [pc, #140]	; 12208 <putc_unlocked@plt+0xf14>
   12178:	bne	12160 <putc_unlocked@plt+0xe6c>
   1217c:	ldr	r1, [r4, #48]	; 0x30
   12180:	mov	r0, r4
   12184:	bl	16368 <argp_state_help@@Base>
   12188:	mov	r0, #0
   1218c:	pop	{r4, r5, r6, pc}
   12190:	ldr	r2, [pc, #116]	; 1220c <putc_unlocked@plt+0xf18>
   12194:	b	1217c <putc_unlocked@plt+0xe88>
   12198:	ldr	r3, [pc, #112]	; 12210 <putc_unlocked@plt+0xf1c>
   1219c:	mov	r0, r1
   121a0:	str	r1, [r3]
   121a4:	bl	12c2c <argp_parse@@Base+0xa0c>
   121a8:	ldr	r3, [pc, #100]	; 12214 <putc_unlocked@plt+0xf20>
   121ac:	str	r0, [r3]
   121b0:	ldr	r3, [r4, #16]
   121b4:	str	r0, [r4, #40]	; 0x28
   121b8:	and	r3, r3, #3
   121bc:	cmp	r3, #1
   121c0:	ldreq	r3, [r4, #8]
   121c4:	streq	r5, [r3]
   121c8:	b	12188 <putc_unlocked@plt+0xe94>
   121cc:	cmp	r1, #0
   121d0:	ldr	r0, [pc, #64]	; 12218 <putc_unlocked@plt+0xf24>
   121d4:	movne	r0, r1
   121d8:	bl	11258 <atoi@plt>
   121dc:	ldr	r4, [pc, #56]	; 1221c <putc_unlocked@plt+0xf28>
   121e0:	mov	r5, #1
   121e4:	str	r0, [r4]
   121e8:	ldr	r3, [r4]
   121ec:	sub	r2, r3, #1
   121f0:	cmp	r3, #0
   121f4:	str	r2, [r4]
   121f8:	ble	12188 <putc_unlocked@plt+0xe94>
   121fc:	mov	r0, r5
   12200:	bl	110b4 <sleep@plt>
   12204:	b	121e8 <putc_unlocked@plt+0xef4>
   12208:	andeq	r0, r0, sl, ror r2
   1220c:	andeq	r0, r0, r1, lsl #4
   12210:	andeq	r9, r2, ip, lsr #7
   12214:	andeq	r9, r2, r8, lsr #7
   12218:	ldrdeq	r8, [r1], -r7
   1221c:	ldrdeq	r9, [r2], -ip

00012220 <argp_parse@@Base>:
   12220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12224:	add	fp, sp, #32
   12228:	tst	r3, #1
   1222c:	sub	sp, sp, #220	; 0xdc
   12230:	mov	r4, r0
   12234:	mov	r8, r2
   12238:	str	r1, [fp, #-240]	; 0xffffff10
   1223c:	mov	sl, r3
   12240:	bne	12274 <argp_parse@@Base+0x54>
   12244:	ldr	r3, [pc, #2296]	; 12b44 <argp_parse@@Base+0x924>
   12248:	ldr	r5, [pc, #2296]	; 12b48 <argp_parse@@Base+0x928>
   1224c:	ldr	r2, [r3]
   12250:	cmp	r2, #0
   12254:	ldreq	r2, [r8]
   12258:	streq	r2, [r3]
   1225c:	ldr	r3, [r5]
   12260:	cmp	r3, #0
   12264:	bne	12274 <argp_parse@@Base+0x54>
   12268:	ldr	r0, [r8]
   1226c:	bl	12c2c <argp_parse@@Base+0xa0c>
   12270:	str	r0, [r5]
   12274:	ands	r7, sl, #16
   12278:	bne	12300 <argp_parse@@Base+0xe0>
   1227c:	sub	sp, sp, #72	; 0x48
   12280:	add	r5, sp, #8
   12284:	sub	sp, sp, #40	; 0x28
   12288:	add	r6, sp, #8
   1228c:	mov	r2, #28
   12290:	mov	r1, r7
   12294:	mov	r0, r6
   12298:	bl	111e0 <memset@plt>
   1229c:	str	r5, [r6, #16]
   122a0:	mov	r0, r5
   122a4:	mov	r2, #64	; 0x40
   122a8:	mov	r1, r7
   122ac:	bl	111e0 <memset@plt>
   122b0:	cmp	r4, #0
   122b4:	strne	r4, [r5]
   122b8:	ldr	r3, [pc, #2188]	; 12b4c <argp_parse@@Base+0x92c>
   122bc:	addne	r5, r5, #16
   122c0:	str	r3, [r5]
   122c4:	ldr	r3, [pc, #2180]	; 12b50 <argp_parse@@Base+0x930>
   122c8:	ldr	r3, [r3]
   122cc:	cmp	r3, #0
   122d0:	bne	122e8 <argp_parse@@Base+0xc8>
   122d4:	ldr	r3, [pc, #2168]	; 12b54 <argp_parse@@Base+0x934>
   122d8:	ldr	r3, [r3]
   122dc:	cmp	r3, #0
   122e0:	addeq	r3, r5, #16
   122e4:	beq	122f4 <argp_parse@@Base+0xd4>
   122e8:	ldr	r2, [pc, #2152]	; 12b58 <argp_parse@@Base+0x938>
   122ec:	add	r3, r5, #32
   122f0:	str	r2, [r5, #16]
   122f4:	mov	r4, r6
   122f8:	mov	r2, #0
   122fc:	str	r2, [r3]
   12300:	mov	r2, #36	; 0x24
   12304:	mov	r1, #0
   12308:	sub	r0, fp, #196	; 0xc4
   1230c:	bl	111e0 <memset@plt>
   12310:	ands	r3, sl, #4
   12314:	moveq	r3, #1
   12318:	movne	r3, #0
   1231c:	str	r3, [fp, #-228]	; 0xffffff1c
   12320:	mov	r3, #0
   12324:	cmp	r4, r3
   12328:	str	r3, [fp, #-224]	; 0xffffff20
   1232c:	str	r3, [fp, #-220]	; 0xffffff24
   12330:	str	r3, [fp, #-216]	; 0xffffff28
   12334:	beq	12344 <argp_parse@@Base+0x124>
   12338:	sub	r1, fp, #228	; 0xe4
   1233c:	mov	r0, r4
   12340:	bl	11d48 <putc_unlocked@plt+0xa54>
   12344:	ldr	r9, [fp, #-220]	; 0xffffff24
   12348:	ldr	r5, [fp, #-216]	; 0xffffff28
   1234c:	add	r3, r9, #1
   12350:	mov	r9, #36	; 0x24
   12354:	ldr	r6, [fp, #-224]	; 0xffffff20
   12358:	mul	r9, r9, r3
   1235c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12360:	lsl	r5, r5, #2
   12364:	add	r6, r6, #1
   12368:	add	r3, r9, r5
   1236c:	add	r6, r3, r6, lsl #4
   12370:	add	r0, r0, #1
   12374:	add	r0, r0, r6
   12378:	str	r3, [fp, #-236]	; 0xffffff14
   1237c:	bl	137ac <argp_parse@@Base+0x158c>
   12380:	cmp	r0, #0
   12384:	mov	r7, r0
   12388:	str	r0, [fp, #-40]	; 0xffffffd8
   1238c:	moveq	r4, #12
   12390:	beq	12510 <argp_parse@@Base+0x2f0>
   12394:	add	r3, r0, r9
   12398:	str	r3, [fp, #-232]	; 0xffffff18
   1239c:	str	r3, [fp, #-104]	; 0xffffff98
   123a0:	ldr	r3, [fp, #-236]	; 0xffffff14
   123a4:	sub	lr, fp, #196	; 0xc4
   123a8:	add	r3, r0, r3
   123ac:	str	r3, [fp, #-236]	; 0xffffff14
   123b0:	str	r3, [fp, #-152]	; 0xffffff68
   123b4:	mov	r3, #1
   123b8:	add	r9, r0, r6
   123bc:	str	r0, [fp, #-112]	; 0xffffff90
   123c0:	str	r3, [fp, #-196]	; 0xffffff3c
   123c4:	str	r3, [fp, #-192]	; 0xffffff40
   123c8:	ldm	lr!, {r0, r1, r2, r3}
   123cc:	sub	ip, fp, #148	; 0x94
   123d0:	str	r9, [fp, #-156]	; 0xffffff64
   123d4:	stmia	ip!, {r0, r1, r2, r3}
   123d8:	ldm	lr!, {r0, r1, r2, r3}
   123dc:	stmia	ip!, {r0, r1, r2, r3}
   123e0:	mov	r2, r5
   123e4:	ldr	r3, [lr]
   123e8:	mov	r1, #0
   123ec:	ldr	r0, [fp, #-232]	; 0xffffff18
   123f0:	str	r3, [ip]
   123f4:	bl	111e0 <memset@plt>
   123f8:	ldr	r3, [fp, #-236]	; 0xffffff14
   123fc:	tst	sl, #8
   12400:	str	r3, [fp, #-204]	; 0xffffff34
   12404:	ldr	r3, [fp, #-232]	; 0xffffff18
   12408:	str	r9, [fp, #-208]	; 0xffffff30
   1240c:	sub	r5, fp, #160	; 0xa0
   12410:	addne	r9, r9, #1
   12414:	str	r3, [fp, #-200]	; 0xffffff38
   12418:	str	r5, [fp, #-212]	; 0xffffff2c
   1241c:	strne	r9, [fp, #-208]	; 0xffffff30
   12420:	movne	r3, #45	; 0x2d
   12424:	bne	12440 <argp_parse@@Base+0x220>
   12428:	ands	r3, sl, #4
   1242c:	cmp	r3, #0
   12430:	beq	12444 <argp_parse@@Base+0x224>
   12434:	mov	r3, #43	; 0x2b
   12438:	add	r9, r9, #1
   1243c:	str	r9, [fp, #-208]	; 0xffffff30
   12440:	strb	r3, [r7, r6]
   12444:	ldr	r3, [fp, #-208]	; 0xffffff30
   12448:	mov	r2, #0
   1244c:	cmp	r4, r2
   12450:	strb	r2, [r3]
   12454:	ldr	r3, [fp, #-204]	; 0xffffff34
   12458:	str	r2, [r3]
   1245c:	ldreq	r3, [fp, #-112]	; 0xffffff90
   12460:	str	r4, [fp, #-160]	; 0xffffff60
   12464:	streq	r3, [fp, #-108]	; 0xffffff94
   12468:	beq	12488 <argp_parse@@Base+0x268>
   1246c:	sub	r3, fp, #212	; 0xd4
   12470:	str	r3, [sp]
   12474:	mov	r1, r2
   12478:	ldr	r3, [fp, #-112]	; 0xffffff90
   1247c:	mov	r0, r4
   12480:	bl	11e14 <putc_unlocked@plt+0xb20>
   12484:	str	r0, [fp, #-108]	; 0xffffff94
   12488:	mov	r2, #56	; 0x38
   1248c:	mov	r1, #0
   12490:	add	r0, r5, #64	; 0x40
   12494:	bl	111e0 <memset@plt>
   12498:	ldr	r3, [fp, #-160]	; 0xffffff60
   1249c:	ldr	r6, [fp, #-112]	; 0xffffff90
   124a0:	str	r3, [fp, #-96]	; 0xffffffa0
   124a4:	ldr	r3, [fp, #-240]	; 0xffffff10
   124a8:	str	sl, [fp, #-80]	; 0xffffffb0
   124ac:	str	r3, [fp, #-92]	; 0xffffffa4
   124b0:	ldr	r3, [pc, #1700]	; 12b5c <argp_parse@@Base+0x93c>
   124b4:	mov	r4, #0
   124b8:	ldr	sl, [pc, #1696]	; 12b60 <argp_parse@@Base+0x940>
   124bc:	ldr	r3, [r3]
   124c0:	add	r7, r5, #64	; 0x40
   124c4:	str	r3, [fp, #-52]	; 0xffffffcc
   124c8:	ldr	r3, [pc, #1684]	; 12b64 <argp_parse@@Base+0x944>
   124cc:	mov	r9, r4
   124d0:	str	r8, [fp, #-88]	; 0xffffffa8
   124d4:	ldr	r3, [r3]
   124d8:	str	r5, [fp, #-44]	; 0xffffffd4
   124dc:	str	r3, [fp, #-48]	; 0xffffffd0
   124e0:	mov	r3, #1
   124e4:	str	r3, [fp, #-100]	; 0xffffff9c
   124e8:	ldr	r3, [fp, #-108]	; 0xffffff94
   124ec:	cmp	r6, r3
   124f0:	ldrcc	r3, [fp, #8]
   124f4:	strcc	r3, [r6, #24]
   124f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   124fc:	cmp	r6, r3
   12500:	bcs	12584 <argp_parse@@Base+0x364>
   12504:	cmp	r4, #7
   12508:	cmpne	r4, #0
   1250c:	beq	1251c <argp_parse@@Base+0x2fc>
   12510:	mov	r0, r4
   12514:	sub	sp, fp, #32
   12518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1251c:	ldr	r3, [r6, #16]
   12520:	cmp	r3, #0
   12524:	ldrne	r3, [r3, #28]
   12528:	ldrne	r2, [r6, #20]
   1252c:	ldrne	r3, [r3, r2, lsl #2]
   12530:	strne	r3, [r6, #24]
   12534:	ldr	r3, [r6]
   12538:	cmp	r3, #0
   1253c:	bne	12564 <argp_parse@@Base+0x344>
   12540:	ldr	r3, [r6, #4]
   12544:	ldr	r3, [r3, #16]
   12548:	cmp	r3, #0
   1254c:	beq	12564 <argp_parse@@Base+0x344>
   12550:	ldr	r3, [r3]
   12554:	cmp	r3, #0
   12558:	ldrne	r3, [r6, #28]
   1255c:	ldrne	r2, [r6, #24]
   12560:	strne	r2, [r3]
   12564:	mov	r0, r6
   12568:	mov	r3, r9
   1256c:	mov	r2, sl
   12570:	mov	r1, r7
   12574:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   12578:	add	r6, r6, #36	; 0x24
   1257c:	mov	r4, r0
   12580:	b	124f8 <argp_parse@@Base+0x2d8>
   12584:	cmp	r4, #7
   12588:	beq	12594 <argp_parse@@Base+0x374>
   1258c:	cmp	r4, #0
   12590:	bne	12510 <argp_parse@@Base+0x2f0>
   12594:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12598:	tst	r3, #2
   1259c:	moveq	r3, #1
   125a0:	streq	r3, [fp, #-144]	; 0xffffff70
   125a4:	beq	125cc <argp_parse@@Base+0x3ac>
   125a8:	tst	r3, #1
   125ac:	mov	r2, #0
   125b0:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   125b4:	str	r2, [fp, #-144]	; 0xffffff70
   125b8:	subne	r3, r3, #4
   125bc:	strne	r3, [fp, #-88]	; 0xffffffa8
   125c0:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   125c4:	addne	r3, r3, #1
   125c8:	strne	r3, [fp, #-92]	; 0xffffffa4
   125cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   125d0:	cmp	r8, r3
   125d4:	bne	125f8 <argp_parse@@Base+0x3d8>
   125d8:	ldr	r0, [r8]
   125dc:	cmp	r0, #0
   125e0:	beq	125f8 <argp_parse@@Base+0x3d8>
   125e4:	bl	12c2c <argp_parse@@Base+0xa0c>
   125e8:	str	r0, [fp, #-56]	; 0xffffffc8
   125ec:	add	r8, r5, #64	; 0x40
   125f0:	ldr	r9, [pc, #1392]	; 12b68 <argp_parse@@Base+0x948>
   125f4:	b	127bc <argp_parse@@Base+0x59c>
   125f8:	ldr	r3, [pc, #1352]	; 12b48 <argp_parse@@Base+0x928>
   125fc:	ldr	r3, [r3]
   12600:	str	r3, [fp, #-56]	; 0xffffffc8
   12604:	b	125ec <argp_parse@@Base+0x3cc>
   12608:	bl	12d34 <argp_parse@@Base+0xb14>
   1260c:	b	12828 <argp_parse@@Base+0x608>
   12610:	cmp	r0, #63	; 0x3f
   12614:	bne	12ad8 <argp_parse@@Base+0x8b8>
   12618:	ldr	r3, [fp, #-140]	; 0xffffff74
   1261c:	cmn	r3, #1
   12620:	bne	12a7c <argp_parse@@Base+0x85c>
   12624:	asrs	r3, r6, #24
   12628:	bne	128e4 <argp_parse@@Base+0x6c4>
   1262c:	mov	r1, r6
   12630:	ldr	r0, [fp, #-156]	; 0xffffff64
   12634:	bl	111a4 <strchr@plt>
   12638:	subs	r2, r0, #0
   1263c:	beq	12678 <argp_parse@@Base+0x458>
   12640:	ldr	r0, [fp, #-112]	; 0xffffff90
   12644:	ldr	r3, [fp, #-108]	; 0xffffff94
   12648:	cmp	r0, r3
   1264c:	bcs	12678 <argp_parse@@Base+0x458>
   12650:	ldr	r1, [r0, #8]
   12654:	cmp	r2, r1
   12658:	bcs	128dc <argp_parse@@Base+0x6bc>
   1265c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12660:	mov	r2, r6
   12664:	mov	r1, r8
   12668:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   1266c:	cmp	r0, #7
   12670:	mov	r4, r0
   12674:	bne	12970 <argp_parse@@Base+0x750>
   12678:	ldr	r3, [pc, #1260]	; 12b6c <argp_parse@@Base+0x94c>
   1267c:	ldr	r1, [pc, #1260]	; 12b70 <argp_parse@@Base+0x950>
   12680:	mov	r2, r6
   12684:	add	r0, r5, #64	; 0x40
   12688:	bl	16408 <argp_error@@Base>
   1268c:	sub	r7, r6, #1
   12690:	mov	r4, #7
   12694:	clz	r7, r7
   12698:	lsr	r7, r7, #5
   1269c:	cmp	r4, #7
   126a0:	movne	r7, #0
   126a4:	andeq	r7, r7, #1
   126a8:	cmp	r7, #0
   126ac:	beq	129f0 <argp_parse@@Base+0x7d0>
   126b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   126b4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   126b8:	cmp	r3, r2
   126bc:	bne	12a48 <argp_parse@@Base+0x828>
   126c0:	mov	r4, #0
   126c4:	ldr	r7, [fp, #-112]	; 0xffffff90
   126c8:	ldr	sl, [pc, #1188]	; 12b74 <argp_parse@@Base+0x954>
   126cc:	add	r8, r5, #64	; 0x40
   126d0:	mov	r9, r4
   126d4:	ldr	r6, [fp, #-108]	; 0xffffff94
   126d8:	cmp	r7, r6
   126dc:	bcc	1297c <argp_parse@@Base+0x75c>
   126e0:	ldr	r9, [pc, #1168]	; 12b78 <argp_parse@@Base+0x958>
   126e4:	sub	r6, r6, #36	; 0x24
   126e8:	add	r7, r5, #64	; 0x40
   126ec:	mov	r8, #0
   126f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   126f4:	cmp	r6, r3
   126f8:	bcc	129d4 <argp_parse@@Base+0x7b4>
   126fc:	cmp	r4, #7
   12700:	cmpne	r4, #0
   12704:	beq	129b4 <argp_parse@@Base+0x794>
   12708:	ldr	r3, [fp, #4]
   1270c:	cmp	r3, #0
   12710:	beq	129f0 <argp_parse@@Base+0x7d0>
   12714:	ldr	r2, [fp, #4]
   12718:	ldr	r3, [fp, #-84]	; 0xffffffac
   1271c:	str	r3, [r2]
   12720:	b	129e8 <argp_parse@@Base+0x7c8>
   12724:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12728:	tst	r2, #4
   1272c:	bne	126b0 <argp_parse@@Base+0x490>
   12730:	add	r2, r3, #1
   12734:	str	r2, [fp, #-84]	; 0xffffffac
   12738:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1273c:	ldr	r3, [r2, r3, lsl #2]
   12740:	str	r3, [fp, #-136]	; 0xffffff78
   12744:	ldr	r3, [fp, #-136]	; 0xffffff78
   12748:	ldr	r7, [fp, #-84]	; 0xffffffac
   1274c:	str	r3, [fp, #-232]	; 0xffffff18
   12750:	ldr	r6, [fp, #-112]	; 0xffffff90
   12754:	mov	r3, #0
   12758:	mov	r4, #7
   1275c:	mov	sl, r3
   12760:	sub	r7, r7, #1
   12764:	str	r7, [fp, #-84]	; 0xffffffac
   12768:	ldr	r2, [fp, #-108]	; 0xffffff94
   1276c:	cmp	r6, r2
   12770:	movcs	r2, #0
   12774:	movcc	r2, #1
   12778:	cmp	r4, #7
   1277c:	movne	r2, #0
   12780:	cmp	r2, #0
   12784:	bne	1287c <argp_parse@@Base+0x65c>
   12788:	cmp	r4, #0
   1278c:	bne	12960 <argp_parse@@Base+0x740>
   12790:	cmp	r3, r9
   12794:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   12798:	streq	r3, [fp, #-84]	; 0xffffffac
   1279c:	ldr	r3, [fp, #-84]	; 0xffffffac
   127a0:	cmp	r7, r3
   127a4:	sublt	r7, r3, r7
   127a8:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   127ac:	movge	r3, #1
   127b0:	addlt	r7, r3, r7
   127b4:	strlt	r7, [r6, #-24]	; 0xffffffe8
   127b8:	strge	r3, [fp, #-100]	; 0xffffff9c
   127bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   127c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   127c4:	cmp	r2, #0
   127c8:	beq	127d8 <argp_parse@@Base+0x5b8>
   127cc:	cmp	r2, r3
   127d0:	movgt	r2, #0
   127d4:	strgt	r2, [fp, #-72]	; 0xffffffb8
   127d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   127dc:	cmp	r2, #0
   127e0:	beq	12868 <argp_parse@@Base+0x648>
   127e4:	ldr	r7, [fp, #-72]	; 0xffffffb8
   127e8:	cmp	r7, #0
   127ec:	bne	12868 <argp_parse@@Base+0x648>
   127f0:	str	r3, [fp, #-148]	; 0xffffff6c
   127f4:	mvn	r3, #0
   127f8:	str	r3, [fp, #-140]	; 0xffffff74
   127fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12800:	str	r7, [sp]
   12804:	tst	r3, #64	; 0x40
   12808:	add	r3, r5, #12
   1280c:	str	r3, [sp, #4]
   12810:	ldr	r2, [fp, #-156]	; 0xffffff64
   12814:	ldr	r3, [fp, #-152]	; 0xffffff68
   12818:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1281c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12820:	beq	12608 <argp_parse@@Base+0x3e8>
   12824:	bl	12d80 <argp_parse@@Base+0xb60>
   12828:	ldr	r4, [fp, #-148]	; 0xffffff6c
   1282c:	cmn	r0, #1
   12830:	mov	r6, r0
   12834:	str	r4, [fp, #-84]	; 0xffffffac
   12838:	bne	12610 <argp_parse@@Base+0x3f0>
   1283c:	mov	r3, #0
   12840:	cmp	r4, #1
   12844:	str	r3, [fp, #-100]	; 0xffffff9c
   12848:	ble	12868 <argp_parse@@Base+0x648>
   1284c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12850:	sub	r3, r4, #-1073741823	; 0xc0000001
   12854:	ldr	r1, [pc, #800]	; 12b7c <argp_parse@@Base+0x95c>
   12858:	ldr	r0, [r2, r3, lsl #2]
   1285c:	bl	11024 <strcmp@plt>
   12860:	cmp	r0, #0
   12864:	streq	r4, [fp, #-72]	; 0xffffffb8
   12868:	ldr	r3, [fp, #-84]	; 0xffffffac
   1286c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12870:	cmp	r3, r2
   12874:	bge	126b0 <argp_parse@@Base+0x490>
   12878:	b	12724 <argp_parse@@Base+0x504>
   1287c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12880:	mov	r2, sl
   12884:	add	r3, r3, #1
   12888:	str	r3, [fp, #-84]	; 0xffffffac
   1288c:	mov	r1, r8
   12890:	ldr	r3, [fp, #-232]	; 0xffffff18
   12894:	mov	r0, r6
   12898:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   1289c:	cmp	r0, #7
   128a0:	mov	r4, r0
   128a4:	movne	r3, sl
   128a8:	bne	128d4 <argp_parse@@Base+0x6b4>
   128ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   128b0:	mov	r2, r9
   128b4:	sub	r3, r3, #1
   128b8:	str	r3, [fp, #-84]	; 0xffffffac
   128bc:	mov	r1, r8
   128c0:	mov	r3, sl
   128c4:	mov	r0, r6
   128c8:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   128cc:	mov	r3, r9
   128d0:	mov	r4, r0
   128d4:	add	r6, r6, #36	; 0x24
   128d8:	b	12768 <argp_parse@@Base+0x548>
   128dc:	add	r0, r0, #36	; 0x24
   128e0:	b	12648 <argp_parse@@Base+0x428>
   128e4:	mov	r0, #36	; 0x24
   128e8:	ands	r1, r6, #8388608	; 0x800000
   128ec:	mul	r0, r0, r3
   128f0:	ldr	ip, [fp, #-112]	; 0xffffff90
   128f4:	movne	r1, #-16777216	; 0xff000000
   128f8:	bic	r2, r6, #-16777216	; 0xff000000
   128fc:	sub	r0, r0, #36	; 0x24
   12900:	orr	r2, r2, r1
   12904:	ldr	r3, [fp, #-136]	; 0xffffff78
   12908:	mov	r1, r8
   1290c:	add	r0, ip, r0
   12910:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   12914:	cmp	r0, #7
   12918:	mov	r4, r0
   1291c:	bne	12970 <argp_parse@@Base+0x750>
   12920:	ldr	r3, [fp, #-152]	; 0xffffff68
   12924:	b	12938 <argp_parse@@Base+0x718>
   12928:	ldr	r2, [r3]
   1292c:	cmp	r2, #0
   12930:	beq	12944 <argp_parse@@Base+0x724>
   12934:	add	r3, r3, #16
   12938:	ldr	r2, [r3, #12]
   1293c:	cmp	r2, r6
   12940:	bne	12928 <argp_parse@@Base+0x708>
   12944:	ldr	r2, [r3]
   12948:	ldr	r1, [pc, #560]	; 12b80 <argp_parse@@Base+0x960>
   1294c:	cmp	r2, #0
   12950:	moveq	r2, r1
   12954:	ldr	r3, [pc, #528]	; 12b6c <argp_parse@@Base+0x94c>
   12958:	ldr	r1, [pc, #548]	; 12b84 <argp_parse@@Base+0x964>
   1295c:	b	12684 <argp_parse@@Base+0x464>
   12960:	cmp	r4, #7
   12964:	bne	129f8 <argp_parse@@Base+0x7d8>
   12968:	mov	r6, #1
   1296c:	b	1268c <argp_parse@@Base+0x46c>
   12970:	cmp	r4, #0
   12974:	beq	127bc <argp_parse@@Base+0x59c>
   12978:	b	1269c <argp_parse@@Base+0x47c>
   1297c:	cmp	r4, #7
   12980:	cmpne	r4, #0
   12984:	bne	126e0 <argp_parse@@Base+0x4c0>
   12988:	ldr	r3, [r7, #12]
   1298c:	cmp	r3, #0
   12990:	bne	129ac <argp_parse@@Base+0x78c>
   12994:	mov	r3, r9
   12998:	mov	r2, sl
   1299c:	mov	r1, r8
   129a0:	mov	r0, r7
   129a4:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   129a8:	mov	r4, r0
   129ac:	add	r7, r7, #36	; 0x24
   129b0:	b	126d4 <argp_parse@@Base+0x4b4>
   129b4:	mov	r0, r6
   129b8:	mov	r3, r8
   129bc:	mov	r2, r9
   129c0:	mov	r1, r7
   129c4:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   129c8:	sub	r6, r6, #36	; 0x24
   129cc:	mov	r4, r0
   129d0:	b	126f0 <argp_parse@@Base+0x4d0>
   129d4:	cmp	r4, #7
   129d8:	beq	12ae4 <argp_parse@@Base+0x8c4>
   129dc:	ldr	r3, [fp, #4]
   129e0:	cmp	r3, #0
   129e4:	bne	12714 <argp_parse@@Base+0x4f4>
   129e8:	cmp	r4, #0
   129ec:	beq	12af4 <argp_parse@@Base+0x8d4>
   129f0:	cmp	r4, #7
   129f4:	beq	12a7c <argp_parse@@Base+0x85c>
   129f8:	ldr	r6, [fp, #-112]	; 0xffffff90
   129fc:	ldr	r9, [pc, #388]	; 12b88 <argp_parse@@Base+0x968>
   12a00:	add	r7, r5, #64	; 0x40
   12a04:	mov	r8, #0
   12a08:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a0c:	cmp	r6, r3
   12a10:	bcc	12a94 <argp_parse@@Base+0x874>
   12a14:	ldr	r6, [fp, #-108]	; 0xffffff94
   12a18:	ldr	r8, [pc, #364]	; 12b8c <argp_parse@@Base+0x96c>
   12a1c:	sub	r6, r6, #36	; 0x24
   12a20:	add	r5, r5, #64	; 0x40
   12a24:	mov	r7, #0
   12a28:	ldr	r3, [fp, #-112]	; 0xffffff90
   12a2c:	cmp	r6, r3
   12a30:	bcs	12abc <argp_parse@@Base+0x89c>
   12a34:	cmp	r4, #7
   12a38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a3c:	moveq	r4, #22
   12a40:	bl	12cbc <argp_parse@@Base+0xa9c>
   12a44:	b	12510 <argp_parse@@Base+0x2f0>
   12a48:	ldr	r2, [fp, #4]
   12a4c:	cmp	r2, #0
   12a50:	strne	r3, [r2]
   12a54:	bne	12af4 <argp_parse@@Base+0x8d4>
   12a58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a5c:	tst	r3, #2
   12a60:	bne	12a7c <argp_parse@@Base+0x85c>
   12a64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a68:	cmp	r0, #0
   12a6c:	beq	12a7c <argp_parse@@Base+0x85c>
   12a70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12a74:	ldr	r1, [pc, #276]	; 12b90 <argp_parse@@Base+0x970>
   12a78:	bl	111b0 <fprintf@plt>
   12a7c:	mov	r2, #260	; 0x104
   12a80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a84:	add	r0, r5, #64	; 0x40
   12a88:	bl	16368 <argp_state_help@@Base>
   12a8c:	mov	r4, #7
   12a90:	b	129f8 <argp_parse@@Base+0x7d8>
   12a94:	mov	r0, r6
   12a98:	mov	r3, r8
   12a9c:	mov	r2, r9
   12aa0:	mov	r1, r7
   12aa4:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   12aa8:	add	r6, r6, #36	; 0x24
   12aac:	b	12a08 <argp_parse@@Base+0x7e8>
   12ab0:	cmp	r4, #7
   12ab4:	moveq	r4, #0
   12ab8:	b	12a14 <argp_parse@@Base+0x7f4>
   12abc:	mov	r0, r6
   12ac0:	mov	r3, r7
   12ac4:	mov	r2, r8
   12ac8:	mov	r1, r5
   12acc:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   12ad0:	sub	r6, r6, #36	; 0x24
   12ad4:	b	12a28 <argp_parse@@Base+0x808>
   12ad8:	cmp	r0, #1
   12adc:	bne	12624 <argp_parse@@Base+0x404>
   12ae0:	b	12744 <argp_parse@@Base+0x524>
   12ae4:	ldr	r3, [fp, #4]
   12ae8:	cmp	r3, #0
   12aec:	movne	r4, #0
   12af0:	bne	12714 <argp_parse@@Base+0x4f4>
   12af4:	ldr	r6, [fp, #-108]	; 0xffffff94
   12af8:	mov	r4, #0
   12afc:	ldr	r9, [pc, #144]	; 12b94 <argp_parse@@Base+0x974>
   12b00:	sub	r6, r6, #36	; 0x24
   12b04:	add	r7, r5, #64	; 0x40
   12b08:	mov	r8, r4
   12b0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b10:	cmp	r6, r3
   12b14:	bcc	12ab0 <argp_parse@@Base+0x890>
   12b18:	cmp	r4, #7
   12b1c:	cmpne	r4, #0
   12b20:	bne	12a14 <argp_parse@@Base+0x7f4>
   12b24:	mov	r0, r6
   12b28:	mov	r3, r8
   12b2c:	mov	r2, r9
   12b30:	mov	r1, r7
   12b34:	bl	11ce8 <putc_unlocked@plt+0x9f4>
   12b38:	sub	r6, r6, #36	; 0x24
   12b3c:	mov	r4, r0
   12b40:	b	12b0c <argp_parse@@Base+0x8ec>
   12b44:	andeq	r9, r2, ip, lsr #7
   12b48:	andeq	r9, r2, r8, lsr #7
   12b4c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12b50:	andeq	r9, r2, ip, lsl r4
   12b54:	andeq	r9, r2, r0, ror #7
   12b58:			; <UNDEFINED> instruction: 0x00017fb8
   12b5c:			; <UNDEFINED> instruction: 0x000293b0
   12b60:	tsteq	r0, r3
   12b64:			; <UNDEFINED> instruction: 0x000293bc
   12b68:	tsteq	r0, r6
   12b6c:	ldrdeq	r7, [r1], -r4
   12b70:	andeq	r8, r1, r3, ror #1
   12b74:	tsteq	r0, r2
   12b78:	tsteq	r0, r1
   12b7c:	andeq	r8, r1, r0, ror #1
   12b80:	ldrdeq	r8, [r1], -ip
   12b84:	andeq	r8, r1, fp, ror #1
   12b88:	tsteq	r0, r5
   12b8c:	tsteq	r0, r7
   12b90:	strdeq	r8, [r1], -r4
   12b94:	tsteq	r0, r4
   12b98:	cmp	r1, #0
   12b9c:	ldrne	r2, [r1, #52]	; 0x34
   12ba0:	ldrne	r3, [r2, #48]	; 0x30
   12ba4:	ldrne	r2, [r2, #52]	; 0x34
   12ba8:	bne	12bb8 <argp_parse@@Base+0x998>
   12bac:	mov	r0, #0
   12bb0:	bx	lr
   12bb4:	add	r3, r3, #36	; 0x24
   12bb8:	cmp	r3, r2
   12bbc:	bcs	12bac <argp_parse@@Base+0x98c>
   12bc0:	ldr	r1, [r3, #4]
   12bc4:	cmp	r1, r0
   12bc8:	bne	12bb4 <argp_parse@@Base+0x994>
   12bcc:	ldr	r0, [r3, #24]
   12bd0:	bx	lr
   12bd4:	push	{r0, r1, r2, lr}
   12bd8:	ldr	r1, [pc, #28]	; 12bfc <argp_parse@@Base+0x9dc>
   12bdc:	ldr	r2, [pc, #28]	; 12c00 <argp_parse@@Base+0x9e0>
   12be0:	ldr	r3, [r1, #4]
   12be4:	str	r3, [sp]
   12be8:	ldr	r3, [pc, #20]	; 12c04 <argp_parse@@Base+0x9e4>
   12bec:	ldr	r1, [r1]
   12bf0:	bl	131a0 <argp_parse@@Base+0xf80>
   12bf4:	add	sp, sp, #12
   12bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bfc:	andeq	r9, r2, r4, ror #7
   12c00:	andeq	r8, r1, r4, asr #3
   12c04:			; <UNDEFINED> instruction: 0x000181b7
   12c08:	ldr	r3, [pc, #16]	; 12c20 <argp_parse@@Base+0xa00>
   12c0c:	ldr	r2, [pc, #16]	; 12c24 <argp_parse@@Base+0xa04>
   12c10:	str	r2, [r3]
   12c14:	ldr	r3, [pc, #12]	; 12c28 <argp_parse@@Base+0xa08>
   12c18:	stm	r3, {r0, r1}
   12c1c:	bx	lr
   12c20:	andeq	r9, r2, r0, ror #7
   12c24:	ldrdeq	r2, [r1], -r4
   12c28:	andeq	r9, r2, r4, ror #7
   12c2c:	mov	r2, r0
   12c30:	push	{r4, lr}
   12c34:	mov	r0, r2
   12c38:	ldrb	r3, [r2]
   12c3c:	add	r1, r2, #1
   12c40:	cmp	r3, #47	; 0x2f
   12c44:	beq	12c68 <argp_parse@@Base+0xa48>
   12c48:	mov	r3, #0
   12c4c:	mov	lr, #1
   12c50:	mov	r4, r3
   12c54:	mov	ip, r2
   12c58:	ldrb	r1, [r2], #1
   12c5c:	cmp	r1, #0
   12c60:	bne	12c70 <argp_parse@@Base+0xa50>
   12c64:	pop	{r4, pc}
   12c68:	mov	r2, r1
   12c6c:	b	12c34 <argp_parse@@Base+0xa14>
   12c70:	cmp	r1, #47	; 0x2f
   12c74:	moveq	r3, lr
   12c78:	beq	12c54 <argp_parse@@Base+0xa34>
   12c7c:	cmp	r3, #0
   12c80:	movne	r0, ip
   12c84:	movne	r3, r4
   12c88:	b	12c54 <argp_parse@@Base+0xa34>
   12c8c:	push	{r4, lr}
   12c90:	mov	r4, r0
   12c94:	bl	11198 <strlen@plt>
   12c98:	cmp	r0, #1
   12c9c:	popls	{r4, pc}
   12ca0:	sub	r3, r0, #1
   12ca4:	ldrb	r2, [r4, r3]
   12ca8:	cmp	r2, #47	; 0x2f
   12cac:	beq	12cb4 <argp_parse@@Base+0xa94>
   12cb0:	pop	{r4, pc}
   12cb4:	mov	r0, r3
   12cb8:	b	12c98 <argp_parse@@Base+0xa78>
   12cbc:	push	{r0, r1, r2, r4, r5, lr}
   12cc0:	mov	r5, r0
   12cc4:	bl	111bc <__errno_location@plt>
   12cc8:	ldr	r3, [r0]
   12ccc:	mov	r4, r0
   12cd0:	str	r3, [sp]
   12cd4:	str	r3, [sp, #4]
   12cd8:	mov	r3, #0
   12cdc:	str	r3, [r0]
   12ce0:	mov	r0, r5
   12ce4:	bl	1106c <free@plt>
   12ce8:	ldr	r3, [r4]
   12cec:	add	r2, sp, #8
   12cf0:	cmp	r3, #0
   12cf4:	moveq	r3, #4
   12cf8:	movne	r3, #0
   12cfc:	add	r3, r2, r3
   12d00:	ldr	r3, [r3, #-8]
   12d04:	str	r3, [r4]
   12d08:	add	sp, sp, #12
   12d0c:	pop	{r4, r5, pc}
   12d10:	push	{r0, r1, r2, r3, r4, lr}
   12d14:	mov	ip, #0
   12d18:	str	ip, [sp, #8]
   12d1c:	str	ip, [sp, #4]
   12d20:	ldr	ip, [sp, #24]
   12d24:	str	ip, [sp]
   12d28:	bl	16eec <argp_error@@Base+0xae4>
   12d2c:	add	sp, sp, #20
   12d30:	pop	{pc}		; (ldr pc, [sp], #4)
   12d34:	push	{r0, r1, r2, r3, r4, lr}
   12d38:	mov	ip, #0
   12d3c:	ldr	lr, [sp, #28]
   12d40:	str	ip, [sp, #12]
   12d44:	stmib	sp, {ip, lr}
   12d48:	ldr	ip, [sp, #24]
   12d4c:	str	ip, [sp]
   12d50:	bl	169f4 <argp_error@@Base+0x5ec>
   12d54:	add	sp, sp, #20
   12d58:	pop	{pc}		; (ldr pc, [sp], #4)
   12d5c:	push	{r0, r1, r2, r3, r4, lr}
   12d60:	mov	ip, #1
   12d64:	mov	lr, #0
   12d68:	stmib	sp, {ip, lr}
   12d6c:	ldr	ip, [sp, #24]
   12d70:	str	ip, [sp]
   12d74:	bl	16eec <argp_error@@Base+0xae4>
   12d78:	add	sp, sp, #20
   12d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d80:	push	{r0, r1, r2, r3, r4, lr}
   12d84:	mov	ip, #0
   12d88:	str	ip, [sp, #12]
   12d8c:	ldr	ip, [sp, #28]
   12d90:	str	ip, [sp, #8]
   12d94:	mov	ip, #1
   12d98:	str	ip, [sp, #4]
   12d9c:	ldr	ip, [sp, #24]
   12da0:	str	ip, [sp]
   12da4:	bl	169f4 <argp_error@@Base+0x5ec>
   12da8:	add	sp, sp, #20
   12dac:	pop	{pc}		; (ldr pc, [sp], #4)
   12db0:	push	{r4, r5, r6, r8, r9, lr}
   12db4:	mov	r4, r0
   12db8:	mov	r5, r1
   12dbc:	add	r6, r2, #20
   12dc0:	mov	r8, #10
   12dc4:	mov	r9, #0
   12dc8:	mov	r3, #0
   12dcc:	strb	r3, [r2, #20]
   12dd0:	mov	r0, r4
   12dd4:	mov	r1, r5
   12dd8:	mov	r2, r8
   12ddc:	mov	r3, r9
   12de0:	bl	17a38 <argp_error@@Base+0x1630>
   12de4:	mov	r3, r9
   12de8:	mov	r0, r4
   12dec:	mov	r1, r5
   12df0:	add	r2, r2, #48	; 0x30
   12df4:	strb	r2, [r6, #-1]!
   12df8:	mov	r2, r8
   12dfc:	bl	17a38 <argp_error@@Base+0x1630>
   12e00:	mov	r4, r0
   12e04:	mov	r5, r1
   12e08:	orrs	r3, r4, r5
   12e0c:	bne	12dd0 <argp_parse@@Base+0xbb0>
   12e10:	mov	r0, r6
   12e14:	pop	{r4, r5, r6, r8, r9, pc}
   12e18:	push	{r4, r5, r6, lr}
   12e1c:	subs	r5, r0, #0
   12e20:	bne	12e38 <argp_parse@@Base+0xc18>
   12e24:	ldr	r3, [pc, #124]	; 12ea8 <argp_parse@@Base+0xc88>
   12e28:	ldr	r0, [pc, #124]	; 12eac <argp_parse@@Base+0xc8c>
   12e2c:	ldr	r1, [r3]
   12e30:	bl	112a0 <fputs@plt>
   12e34:	bl	112b8 <abort@plt>
   12e38:	mov	r1, #47	; 0x2f
   12e3c:	bl	1121c <strrchr@plt>
   12e40:	cmp	r0, #0
   12e44:	addne	r4, r0, #1
   12e48:	moveq	r4, r5
   12e4c:	sub	r3, r4, r5
   12e50:	cmp	r3, #6
   12e54:	ble	12e94 <argp_parse@@Base+0xc74>
   12e58:	mov	r2, #7
   12e5c:	ldr	r1, [pc, #76]	; 12eb0 <argp_parse@@Base+0xc90>
   12e60:	sub	r0, r4, #7
   12e64:	bl	112ac <strncmp@plt>
   12e68:	cmp	r0, #0
   12e6c:	bne	12e94 <argp_parse@@Base+0xc74>
   12e70:	mov	r2, #3
   12e74:	ldr	r1, [pc, #56]	; 12eb4 <argp_parse@@Base+0xc94>
   12e78:	mov	r0, r4
   12e7c:	bl	112ac <strncmp@plt>
   12e80:	cmp	r0, #0
   12e84:	movne	r5, r4
   12e88:	ldreq	r3, [pc, #40]	; 12eb8 <argp_parse@@Base+0xc98>
   12e8c:	addeq	r5, r4, #3
   12e90:	streq	r5, [r3]
   12e94:	ldr	r3, [pc, #32]	; 12ebc <argp_parse@@Base+0xc9c>
   12e98:	str	r5, [r3]
   12e9c:	ldr	r3, [pc, #28]	; 12ec0 <argp_parse@@Base+0xca0>
   12ea0:	str	r5, [r3]
   12ea4:	pop	{r4, r5, r6, pc}
   12ea8:			; <UNDEFINED> instruction: 0x000293b0
   12eac:	ldrdeq	r8, [r1], -r2
   12eb0:	andeq	r8, r1, sl, lsl #4
   12eb4:	andeq	r8, r1, r2, lsl r2
   12eb8:	andeq	r9, r2, r8, lsr #7
   12ebc:	andeq	r9, r2, ip, ror #7
   12ec0:	andeq	r9, r2, ip, lsr #7
   12ec4:	push	{r4, r5, r6, lr}
   12ec8:	sub	sp, sp, #32
   12ecc:	cmp	r1, #0
   12ed0:	mov	r5, r0
   12ed4:	ldr	r4, [sp, #48]	; 0x30
   12ed8:	ldr	r6, [sp, #52]	; 0x34
   12edc:	beq	12f64 <argp_parse@@Base+0xd44>
   12ee0:	str	r3, [sp]
   12ee4:	mov	r3, r2
   12ee8:	mov	r2, r1
   12eec:	ldr	r1, [pc, #616]	; 1315c <argp_parse@@Base+0xf3c>
   12ef0:	bl	111b0 <fprintf@plt>
   12ef4:	ldr	r3, [pc, #612]	; 13160 <argp_parse@@Base+0xf40>
   12ef8:	ldr	r2, [pc, #612]	; 13164 <argp_parse@@Base+0xf44>
   12efc:	ldr	r1, [pc, #612]	; 13168 <argp_parse@@Base+0xf48>
   12f00:	mov	r0, r5
   12f04:	bl	111b0 <fprintf@plt>
   12f08:	mov	r1, r5
   12f0c:	mov	r0, #10
   12f10:	bl	11234 <fputc@plt>
   12f14:	ldr	r1, [pc, #592]	; 1316c <argp_parse@@Base+0xf4c>
   12f18:	ldr	r2, [pc, #592]	; 13170 <argp_parse@@Base+0xf50>
   12f1c:	mov	r0, r5
   12f20:	bl	111b0 <fprintf@plt>
   12f24:	mov	r1, r5
   12f28:	mov	r0, #10
   12f2c:	bl	11234 <fputc@plt>
   12f30:	cmp	r6, #9
   12f34:	ldrls	pc, [pc, r6, lsl #2]
   12f38:	b	13118 <argp_parse@@Base+0xef8>
   12f3c:	andeq	r3, r1, r0, lsl r0
   12f40:	andeq	r2, r1, r0, ror pc
   12f44:	andeq	r2, r1, r8, lsl #31
   12f48:	andeq	r2, r1, r0, lsr #31
   12f4c:	andeq	r2, r1, r0, asr #31
   12f50:	andeq	r2, r1, r8, ror #31
   12f54:	andeq	r3, r1, r8, lsl r0
   12f58:	andeq	r3, r1, ip, asr #32
   12f5c:	andeq	r3, r1, r8, lsl #1
   12f60:	andeq	r3, r1, ip, asr #1
   12f64:	ldr	r1, [pc, #520]	; 13174 <argp_parse@@Base+0xf54>
   12f68:	bl	111b0 <fprintf@plt>
   12f6c:	b	12ef4 <argp_parse@@Base+0xcd4>
   12f70:	ldr	r2, [r4]
   12f74:	ldr	r1, [pc, #508]	; 13178 <argp_parse@@Base+0xf58>
   12f78:	mov	r0, r5
   12f7c:	add	sp, sp, #32
   12f80:	pop	{r4, r5, r6, lr}
   12f84:	b	111b0 <fprintf@plt>
   12f88:	ldm	r4, {r2, r3}
   12f8c:	ldr	r1, [pc, #488]	; 1317c <argp_parse@@Base+0xf5c>
   12f90:	mov	r0, r5
   12f94:	add	sp, sp, #32
   12f98:	pop	{r4, r5, r6, lr}
   12f9c:	b	111b0 <fprintf@plt>
   12fa0:	ldr	r3, [r4, #8]
   12fa4:	ldr	r1, [pc, #468]	; 13180 <argp_parse@@Base+0xf60>
   12fa8:	str	r3, [sp, #48]	; 0x30
   12fac:	mov	r0, r5
   12fb0:	ldm	r4, {r2, r3}
   12fb4:	add	sp, sp, #32
   12fb8:	pop	{r4, r5, r6, lr}
   12fbc:	b	111b0 <fprintf@plt>
   12fc0:	ldr	r3, [r4, #12]
   12fc4:	ldr	r1, [pc, #440]	; 13184 <argp_parse@@Base+0xf64>
   12fc8:	str	r3, [sp, #52]	; 0x34
   12fcc:	ldr	r3, [r4, #8]
   12fd0:	mov	r0, r5
   12fd4:	str	r3, [sp, #48]	; 0x30
   12fd8:	ldm	r4, {r2, r3}
   12fdc:	add	sp, sp, #32
   12fe0:	pop	{r4, r5, r6, lr}
   12fe4:	b	111b0 <fprintf@plt>
   12fe8:	ldr	r3, [r4, #16]
   12fec:	ldr	r1, [pc, #404]	; 13188 <argp_parse@@Base+0xf68>
   12ff0:	str	r3, [sp, #8]
   12ff4:	ldr	r3, [r4, #12]
   12ff8:	mov	r0, r5
   12ffc:	str	r3, [sp, #4]
   13000:	ldr	r3, [r4, #8]
   13004:	str	r3, [sp]
   13008:	ldm	r4, {r2, r3}
   1300c:	bl	111b0 <fprintf@plt>
   13010:	add	sp, sp, #32
   13014:	pop	{r4, r5, r6, pc}
   13018:	ldr	r3, [r4, #20]
   1301c:	ldr	r1, [pc, #360]	; 1318c <argp_parse@@Base+0xf6c>
   13020:	str	r3, [sp, #12]
   13024:	ldr	r3, [r4, #16]
   13028:	mov	r0, r5
   1302c:	str	r3, [sp, #8]
   13030:	ldr	r3, [r4, #12]
   13034:	str	r3, [sp, #4]
   13038:	ldr	r3, [r4, #8]
   1303c:	str	r3, [sp]
   13040:	ldm	r4, {r2, r3}
   13044:	bl	111b0 <fprintf@plt>
   13048:	b	13010 <argp_parse@@Base+0xdf0>
   1304c:	ldr	r3, [r4, #24]
   13050:	ldr	r1, [pc, #312]	; 13190 <argp_parse@@Base+0xf70>
   13054:	str	r3, [sp, #16]
   13058:	ldr	r3, [r4, #20]
   1305c:	mov	r0, r5
   13060:	str	r3, [sp, #12]
   13064:	ldr	r3, [r4, #16]
   13068:	str	r3, [sp, #8]
   1306c:	ldr	r3, [r4, #12]
   13070:	str	r3, [sp, #4]
   13074:	ldr	r3, [r4, #8]
   13078:	str	r3, [sp]
   1307c:	ldm	r4, {r2, r3}
   13080:	bl	111b0 <fprintf@plt>
   13084:	b	13010 <argp_parse@@Base+0xdf0>
   13088:	ldr	r3, [r4, #28]
   1308c:	ldr	r1, [pc, #256]	; 13194 <argp_parse@@Base+0xf74>
   13090:	str	r3, [sp, #20]
   13094:	ldr	r3, [r4, #24]
   13098:	mov	r0, r5
   1309c:	str	r3, [sp, #16]
   130a0:	ldr	r3, [r4, #20]
   130a4:	str	r3, [sp, #12]
   130a8:	ldr	r3, [r4, #16]
   130ac:	str	r3, [sp, #8]
   130b0:	ldr	r3, [r4, #12]
   130b4:	str	r3, [sp, #4]
   130b8:	ldr	r3, [r4, #8]
   130bc:	str	r3, [sp]
   130c0:	ldm	r4, {r2, r3}
   130c4:	bl	111b0 <fprintf@plt>
   130c8:	b	13010 <argp_parse@@Base+0xdf0>
   130cc:	ldr	r3, [r4, #32]
   130d0:	ldr	r1, [pc, #192]	; 13198 <argp_parse@@Base+0xf78>
   130d4:	str	r3, [sp, #24]
   130d8:	ldr	r3, [r4, #28]
   130dc:	str	r3, [sp, #20]
   130e0:	ldr	r3, [r4, #24]
   130e4:	str	r3, [sp, #16]
   130e8:	ldr	r3, [r4, #20]
   130ec:	str	r3, [sp, #12]
   130f0:	ldr	r3, [r4, #16]
   130f4:	str	r3, [sp, #8]
   130f8:	ldr	r3, [r4, #12]
   130fc:	str	r3, [sp, #4]
   13100:	ldr	r3, [r4, #8]
   13104:	str	r3, [sp]
   13108:	ldm	r4, {r2, r3}
   1310c:	mov	r0, r5
   13110:	bl	111b0 <fprintf@plt>
   13114:	b	13010 <argp_parse@@Base+0xdf0>
   13118:	ldr	r3, [r4, #32]
   1311c:	ldr	r1, [pc, #120]	; 1319c <argp_parse@@Base+0xf7c>
   13120:	str	r3, [sp, #24]
   13124:	ldr	r3, [r4, #28]
   13128:	str	r3, [sp, #20]
   1312c:	ldr	r3, [r4, #24]
   13130:	str	r3, [sp, #16]
   13134:	ldr	r3, [r4, #20]
   13138:	str	r3, [sp, #12]
   1313c:	ldr	r3, [r4, #16]
   13140:	str	r3, [sp, #8]
   13144:	ldr	r3, [r4, #12]
   13148:	str	r3, [sp, #4]
   1314c:	ldr	r3, [r4, #8]
   13150:	str	r3, [sp]
   13154:	ldm	r4, {r2, r3}
   13158:	b	1310c <argp_parse@@Base+0xeec>
   1315c:	andeq	r8, r1, r6, lsl r2
   13160:	andeq	r0, r0, r6, ror #15
   13164:	andeq	r8, r1, r9, lsr #4
   13168:	andeq	r8, r1, lr, lsl r5
   1316c:	andeq	r8, r1, pc, asr #4
   13170:	andeq	r8, r1, sp, lsr #4
   13174:	andeq	r8, r1, r2, lsr #4
   13178:	strdeq	r8, [r1], -sl
   1317c:	andeq	r8, r1, sl, lsl #6
   13180:	andeq	r8, r1, r1, lsr #6
   13184:	andeq	r8, r1, sp, lsr r3
   13188:	andeq	r8, r1, sp, asr r3
   1318c:	andeq	r8, r1, r1, lsl #7
   13190:	andeq	r8, r1, r9, lsr #7
   13194:	ldrdeq	r8, [r1], -r5
   13198:	andeq	r8, r1, r5, lsl #8
   1319c:	andeq	r8, r1, r9, lsr r4
   131a0:	push	{r0, r1, r4, lr}
   131a4:	mov	ip, #0
   131a8:	ldr	lr, [sp, #16]
   131ac:	ldr	r4, [lr, ip, lsl #2]
   131b0:	cmp	r4, #0
   131b4:	bne	131cc <argp_parse@@Base+0xfac>
   131b8:	str	ip, [sp, #4]
   131bc:	str	lr, [sp]
   131c0:	bl	12ec4 <argp_parse@@Base+0xca4>
   131c4:	add	sp, sp, #8
   131c8:	pop	{r4, pc}
   131cc:	add	ip, ip, #1
   131d0:	b	131ac <argp_parse@@Base+0xf8c>
   131d4:	push	{r4, r5, lr}
   131d8:	sub	sp, sp, #52	; 0x34
   131dc:	mov	ip, #0
   131e0:	ldr	r5, [sp, #64]	; 0x40
   131e4:	add	lr, sp, #8
   131e8:	ldr	r4, [r5, ip, lsl #2]
   131ec:	cmp	r4, #0
   131f0:	str	r4, [lr, ip, lsl #2]
   131f4:	beq	13204 <argp_parse@@Base+0xfe4>
   131f8:	add	ip, ip, #1
   131fc:	cmp	ip, #10
   13200:	bne	131e8 <argp_parse@@Base+0xfc8>
   13204:	str	ip, [sp, #4]
   13208:	str	lr, [sp]
   1320c:	bl	12ec4 <argp_parse@@Base+0xca4>
   13210:	add	sp, sp, #52	; 0x34
   13214:	pop	{r4, r5, pc}
   13218:	push	{r3}		; (str r3, [sp, #-4]!)
   1321c:	push	{r0, r1, r2, r3, lr}
   13220:	add	r3, sp, #24
   13224:	str	r3, [sp, #12]
   13228:	str	r3, [sp]
   1322c:	ldr	r3, [sp, #20]
   13230:	bl	131d4 <argp_parse@@Base+0xfb4>
   13234:	add	sp, sp, #16
   13238:	pop	{lr}		; (ldr lr, [sp], #4)
   1323c:	add	sp, sp, #4
   13240:	bx	lr
   13244:	ldr	r3, [pc, #56]	; 13284 <argp_parse@@Base+0x1064>
   13248:	push	{r4, lr}
   1324c:	mov	r0, #10
   13250:	ldr	r1, [r3]
   13254:	bl	11234 <fputc@plt>
   13258:	ldr	r1, [pc, #40]	; 13288 <argp_parse@@Base+0x1068>
   1325c:	ldr	r0, [pc, #40]	; 1328c <argp_parse@@Base+0x106c>
   13260:	bl	1103c <printf@plt>
   13264:	ldr	r1, [pc, #36]	; 13290 <argp_parse@@Base+0x1070>
   13268:	ldr	r2, [pc, #36]	; 13294 <argp_parse@@Base+0x1074>
   1326c:	ldr	r0, [pc, #36]	; 13298 <argp_parse@@Base+0x1078>
   13270:	bl	1103c <printf@plt>
   13274:	ldr	r1, [pc, #32]	; 1329c <argp_parse@@Base+0x107c>
   13278:	ldr	r0, [pc, #32]	; 132a0 <argp_parse@@Base+0x1080>
   1327c:	pop	{r4, lr}
   13280:	b	1103c <printf@plt>
   13284:			; <UNDEFINED> instruction: 0x000293bc
   13288:	andeq	r8, r1, r5, ror r4
   1328c:	andeq	r8, r1, fp, lsl #9
   13290:	andeq	r8, r1, r4, asr #3
   13294:	muleq	r1, pc, r4	; <UNPREDICTABLE>
   13298:	andeq	r8, r1, r6, asr #9
   1329c:	ldrdeq	r8, [r1], -sl
   132a0:	strdeq	r8, [r1], -r7
   132a4:	push	{r4, lr}
   132a8:	bl	137ac <argp_parse@@Base+0x158c>
   132ac:	cmp	r0, #0
   132b0:	popne	{r4, pc}
   132b4:	bl	13738 <argp_parse@@Base+0x1518>
   132b8:	push	{r4, lr}
   132bc:	bl	137ac <argp_parse@@Base+0x158c>
   132c0:	cmp	r0, #0
   132c4:	popne	{r4, pc}
   132c8:	bl	13738 <argp_parse@@Base+0x1518>
   132cc:	b	132a4 <argp_parse@@Base+0x1084>
   132d0:	push	{r4, r5, r6, lr}
   132d4:	mov	r5, r0
   132d8:	mov	r4, r1
   132dc:	bl	137ec <argp_parse@@Base+0x15cc>
   132e0:	cmp	r0, #0
   132e4:	popne	{r4, r5, r6, pc}
   132e8:	adds	r4, r4, #0
   132ec:	movne	r4, #1
   132f0:	cmp	r5, #0
   132f4:	orreq	r4, r4, #1
   132f8:	cmp	r4, #0
   132fc:	popeq	{r4, r5, r6, pc}
   13300:	bl	13738 <argp_parse@@Base+0x1518>
   13304:	push	{r4, lr}
   13308:	cmp	r1, #0
   1330c:	orreq	r1, r1, #1
   13310:	bl	137ec <argp_parse@@Base+0x15cc>
   13314:	cmp	r0, #0
   13318:	popne	{r4, pc}
   1331c:	bl	13738 <argp_parse@@Base+0x1518>
   13320:	push	{r4, r5, r6, lr}
   13324:	mov	r6, r0
   13328:	mov	r5, r1
   1332c:	mov	r4, r2
   13330:	bl	16f80 <argp_error@@Base+0xb78>
   13334:	cmp	r0, #0
   13338:	popne	{r4, r5, r6, pc}
   1333c:	cmp	r6, #0
   13340:	beq	13350 <argp_parse@@Base+0x1130>
   13344:	cmp	r5, #0
   13348:	cmpne	r4, #0
   1334c:	popeq	{r4, r5, r6, pc}
   13350:	bl	13738 <argp_parse@@Base+0x1518>
   13354:	b	13320 <argp_parse@@Base+0x1100>
   13358:	cmp	r2, #0
   1335c:	cmpne	r1, #0
   13360:	moveq	r2, #1
   13364:	moveq	r1, r2
   13368:	push	{r4, lr}
   1336c:	bl	16f80 <argp_error@@Base+0xb78>
   13370:	cmp	r0, #0
   13374:	popne	{r4, pc}
   13378:	bl	13738 <argp_parse@@Base+0x1518>
   1337c:	mov	r2, r1
   13380:	mov	r1, r0
   13384:	mov	r0, #0
   13388:	b	13320 <argp_parse@@Base+0x1100>
   1338c:	mov	r2, r1
   13390:	mov	r1, r0
   13394:	mov	r0, #0
   13398:	b	13358 <argp_parse@@Base+0x1138>
   1339c:	push	{r4, r5, r6, r7, r8, lr}
   133a0:	subs	r7, r0, #0
   133a4:	mov	r5, r1
   133a8:	mov	r6, r2
   133ac:	ldr	r4, [r1]
   133b0:	bne	133ec <argp_parse@@Base+0x11cc>
   133b4:	cmp	r4, #0
   133b8:	bne	133d4 <argp_parse@@Base+0x11b4>
   133bc:	mov	r1, r2
   133c0:	mov	r0, #64	; 0x40
   133c4:	bl	175ec <argp_error@@Base+0x11e4>
   133c8:	cmp	r0, #0
   133cc:	movne	r4, r0
   133d0:	addeq	r4, r0, #1
   133d4:	mov	r2, r6
   133d8:	mov	r1, r4
   133dc:	mov	r0, r7
   133e0:	bl	13320 <argp_parse@@Base+0x1100>
   133e4:	str	r4, [r5]
   133e8:	pop	{r4, r5, r6, r7, r8, pc}
   133ec:	lsr	r2, r4, #1
   133f0:	add	r3, r2, #1
   133f4:	mvn	r3, r3
   133f8:	cmp	r4, r3
   133fc:	addls	r4, r4, #1
   13400:	addls	r4, r4, r2
   13404:	bls	133d4 <argp_parse@@Base+0x11b4>
   13408:	bl	13738 <argp_parse@@Base+0x1518>
   1340c:	mov	r2, #1
   13410:	b	1339c <argp_parse@@Base+0x117c>
   13414:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13418:	mov	sl, r0
   1341c:	ldr	r8, [r1]
   13420:	mov	fp, r1
   13424:	mov	r5, r2
   13428:	asrs	r4, r8, #1
   1342c:	mov	r9, r3
   13430:	ldr	r7, [sp, #48]	; 0x30
   13434:	bpl	134d0 <argp_parse@@Base+0x12b0>
   13438:	rsb	r2, r4, #-2147483648	; 0x80000000
   1343c:	cmp	r8, r2
   13440:	movge	r2, #0
   13444:	movlt	r2, #1
   13448:	mvn	r3, r9
   1344c:	cmp	r2, #0
   13450:	lsr	r3, r3, #31
   13454:	addeq	r4, r4, r8
   13458:	mvnne	r4, #-2147483648	; 0x80000000
   1345c:	mov	r0, r3
   13460:	cmp	r9, r4
   13464:	movge	r0, #0
   13468:	andlt	r0, r0, #1
   1346c:	cmp	r0, #0
   13470:	str	r3, [sp, #4]
   13474:	bne	13644 <argp_parse@@Base+0x1424>
   13478:	cmp	r7, #0
   1347c:	bge	13590 <argp_parse@@Base+0x1370>
   13480:	cmp	r4, #0
   13484:	bge	134e8 <argp_parse@@Base+0x12c8>
   13488:	mov	r1, r7
   1348c:	mvn	r0, #-2147483648	; 0x80000000
   13490:	bl	177f8 <argp_error@@Base+0x13f0>
   13494:	cmp	r0, r4
   13498:	movle	r0, #0
   1349c:	movgt	r0, #1
   134a0:	cmp	r0, #0
   134a4:	mvnne	r6, #-2147483648	; 0x80000000
   134a8:	beq	134f8 <argp_parse@@Base+0x12d8>
   134ac:	mov	r1, r7
   134b0:	mov	r0, r6
   134b4:	bl	177f8 <argp_error@@Base+0x13f0>
   134b8:	mov	r1, r7
   134bc:	mov	r4, r0
   134c0:	mov	r0, r6
   134c4:	bl	17a18 <argp_error@@Base+0x1610>
   134c8:	sub	r1, r6, r1
   134cc:	b	13508 <argp_parse@@Base+0x12e8>
   134d0:	mvn	r2, #-2147483648	; 0x80000000
   134d4:	sub	r2, r2, r4
   134d8:	cmp	r8, r2
   134dc:	movle	r2, #0
   134e0:	movgt	r2, #1
   134e4:	b	13448 <argp_parse@@Base+0x1228>
   134e8:	cmn	r7, #1
   134ec:	movne	r1, r7
   134f0:	movne	r0, #-2147483648	; 0x80000000
   134f4:	bne	1365c <argp_parse@@Base+0x143c>
   134f8:	mul	r1, r7, r4
   134fc:	cmp	r1, #63	; 0x3f
   13500:	movle	r6, #64	; 0x40
   13504:	ble	134ac <argp_parse@@Base+0x128c>
   13508:	cmp	sl, #0
   1350c:	sub	r2, r4, r8
   13510:	streq	sl, [fp]
   13514:	cmp	r2, r5
   13518:	bge	135ec <argp_parse@@Base+0x13cc>
   1351c:	cmp	r5, #0
   13520:	bge	135b8 <argp_parse@@Base+0x1398>
   13524:	rsb	r2, r5, #-2147483648	; 0x80000000
   13528:	cmp	r8, r2
   1352c:	movge	r2, #0
   13530:	movlt	r2, #1
   13534:	cmp	r2, #0
   13538:	bne	1358c <argp_parse@@Base+0x136c>
   1353c:	ldr	r0, [sp, #4]
   13540:	add	r5, r8, r5
   13544:	cmp	r9, r5
   13548:	movge	r0, #0
   1354c:	andlt	r0, r0, #1
   13550:	cmp	r0, #0
   13554:	mov	r4, r5
   13558:	bne	1358c <argp_parse@@Base+0x136c>
   1355c:	cmp	r7, #0
   13560:	bge	13600 <argp_parse@@Base+0x13e0>
   13564:	cmp	r5, #0
   13568:	bge	135d8 <argp_parse@@Base+0x13b8>
   1356c:	mov	r1, r7
   13570:	mvn	r0, #-2147483648	; 0x80000000
   13574:	bl	177f8 <argp_error@@Base+0x13f0>
   13578:	cmp	r5, r0
   1357c:	movge	r0, #0
   13580:	movlt	r0, #1
   13584:	cmp	r0, #0
   13588:	beq	135e8 <argp_parse@@Base+0x13c8>
   1358c:	bl	13738 <argp_parse@@Base+0x1518>
   13590:	beq	134f8 <argp_parse@@Base+0x12d8>
   13594:	cmp	r4, #0
   13598:	bge	13654 <argp_parse@@Base+0x1434>
   1359c:	cmn	r4, #1
   135a0:	beq	134f8 <argp_parse@@Base+0x12d8>
   135a4:	mov	r1, r4
   135a8:	mov	r0, #-2147483648	; 0x80000000
   135ac:	bl	177f8 <argp_error@@Base+0x13f0>
   135b0:	cmp	r7, r0
   135b4:	b	13498 <argp_parse@@Base+0x1278>
   135b8:	cmp	r8, #0
   135bc:	blt	1353c <argp_parse@@Base+0x131c>
   135c0:	mvn	r2, #-2147483648	; 0x80000000
   135c4:	sub	r2, r2, r5
   135c8:	cmp	r8, r2
   135cc:	movle	r2, #0
   135d0:	movgt	r2, #1
   135d4:	b	13534 <argp_parse@@Base+0x1314>
   135d8:	cmn	r7, #1
   135dc:	movne	r1, r7
   135e0:	movne	r0, #-2147483648	; 0x80000000
   135e4:	bne	13638 <argp_parse@@Base+0x1418>
   135e8:	mul	r1, r5, r7
   135ec:	mov	r0, sl
   135f0:	bl	132d0 <argp_parse@@Base+0x10b0>
   135f4:	str	r4, [fp]
   135f8:	add	sp, sp, #12
   135fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13600:	beq	135e8 <argp_parse@@Base+0x13c8>
   13604:	cmp	r5, #0
   13608:	movge	r1, r7
   1360c:	mvnge	r0, #-2147483648	; 0x80000000
   13610:	bge	13638 <argp_parse@@Base+0x1418>
   13614:	cmn	r5, #1
   13618:	beq	135e8 <argp_parse@@Base+0x13c8>
   1361c:	mov	r1, r5
   13620:	mov	r0, #-2147483648	; 0x80000000
   13624:	bl	177f8 <argp_error@@Base+0x13f0>
   13628:	cmp	r7, r0
   1362c:	movle	r0, #0
   13630:	movgt	r0, #1
   13634:	b	13584 <argp_parse@@Base+0x1364>
   13638:	bl	177f8 <argp_error@@Base+0x13f0>
   1363c:	cmp	r5, r0
   13640:	b	1362c <argp_parse@@Base+0x140c>
   13644:	cmp	r7, #0
   13648:	mov	r4, r9
   1364c:	blt	134e8 <argp_parse@@Base+0x12c8>
   13650:	beq	134f8 <argp_parse@@Base+0x12d8>
   13654:	mov	r1, r7
   13658:	mvn	r0, #-2147483648	; 0x80000000
   1365c:	bl	177f8 <argp_error@@Base+0x13f0>
   13660:	cmp	r0, r4
   13664:	movge	r0, #0
   13668:	movlt	r0, #1
   1366c:	b	134a0 <argp_parse@@Base+0x1280>
   13670:	push	{r4, lr}
   13674:	bl	13764 <argp_parse@@Base+0x1544>
   13678:	cmp	r0, #0
   1367c:	popne	{r4, pc}
   13680:	bl	13738 <argp_parse@@Base+0x1518>
   13684:	mov	r1, #1
   13688:	b	13670 <argp_parse@@Base+0x1450>
   1368c:	push	{r4, lr}
   13690:	bl	13764 <argp_parse@@Base+0x1544>
   13694:	cmp	r0, #0
   13698:	popne	{r4, pc}
   1369c:	bl	13738 <argp_parse@@Base+0x1518>
   136a0:	mov	r1, #1
   136a4:	b	1368c <argp_parse@@Base+0x146c>
   136a8:	push	{r4, r5, r6, lr}
   136ac:	mov	r4, r1
   136b0:	mov	r5, r0
   136b4:	mov	r0, r1
   136b8:	bl	132a4 <argp_parse@@Base+0x1084>
   136bc:	mov	r2, r4
   136c0:	mov	r1, r5
   136c4:	pop	{r4, r5, r6, lr}
   136c8:	b	11090 <memcpy@plt>
   136cc:	push	{r4, r5, r6, lr}
   136d0:	mov	r4, r1
   136d4:	mov	r5, r0
   136d8:	mov	r0, r1
   136dc:	bl	132b8 <argp_parse@@Base+0x1098>
   136e0:	mov	r2, r4
   136e4:	mov	r1, r5
   136e8:	pop	{r4, r5, r6, lr}
   136ec:	b	11090 <memcpy@plt>
   136f0:	push	{r4, r5, r6, lr}
   136f4:	mov	r5, r0
   136f8:	add	r0, r1, #1
   136fc:	mov	r4, r1
   13700:	bl	132b8 <argp_parse@@Base+0x1098>
   13704:	mov	r2, #0
   13708:	mov	r1, r5
   1370c:	strb	r2, [r0, r4]
   13710:	mov	r2, r4
   13714:	pop	{r4, r5, r6, lr}
   13718:	b	11090 <memcpy@plt>
   1371c:	push	{r4, lr}
   13720:	mov	r4, r0
   13724:	bl	11198 <strlen@plt>
   13728:	add	r1, r0, #1
   1372c:	mov	r0, r4
   13730:	pop	{r4, lr}
   13734:	b	136a8 <argp_parse@@Base+0x1488>
   13738:	ldr	r3, [pc, #24]	; 13758 <argp_parse@@Base+0x1538>
   1373c:	push	{r4, lr}
   13740:	mov	r1, #0
   13744:	ldr	r0, [r3]
   13748:	ldr	r2, [pc, #12]	; 1375c <argp_parse@@Base+0x153c>
   1374c:	ldr	r3, [pc, #12]	; 13760 <argp_parse@@Base+0x1540>
   13750:	bl	110fc <error@plt>
   13754:	bl	112b8 <abort@plt>
   13758:	muleq	r2, r4, r3
   1375c:	andeq	r7, r1, pc, lsr sp
   13760:	andeq	r8, r1, sp, asr #10
   13764:	cmp	r1, #0
   13768:	cmpne	r0, #0
   1376c:	moveq	r1, #1
   13770:	moveq	r0, r1
   13774:	umull	r2, r3, r0, r1
   13778:	adds	r3, r3, #0
   1377c:	movne	r3, #1
   13780:	cmp	r2, #0
   13784:	blt	13794 <argp_parse@@Base+0x1574>
   13788:	cmp	r3, #0
   1378c:	bne	13794 <argp_parse@@Base+0x1574>
   13790:	b	11000 <calloc@plt>
   13794:	push	{r4, lr}
   13798:	bl	111bc <__errno_location@plt>
   1379c:	mov	r3, #12
   137a0:	str	r3, [r0]
   137a4:	mov	r0, #0
   137a8:	pop	{r4, pc}
   137ac:	cmp	r0, #0
   137b0:	mov	r3, #0
   137b4:	moveq	r0, #1
   137b8:	adds	r3, r3, #0
   137bc:	movne	r3, #1
   137c0:	cmp	r0, #0
   137c4:	blt	137d4 <argp_parse@@Base+0x15b4>
   137c8:	cmp	r3, #0
   137cc:	bne	137d4 <argp_parse@@Base+0x15b4>
   137d0:	b	11114 <malloc@plt>
   137d4:	push	{r4, lr}
   137d8:	bl	111bc <__errno_location@plt>
   137dc:	mov	r3, #12
   137e0:	str	r3, [r0]
   137e4:	mov	r0, #0
   137e8:	pop	{r4, pc}
   137ec:	cmp	r0, #0
   137f0:	push	{r4, lr}
   137f4:	mov	r4, r1
   137f8:	bne	13808 <argp_parse@@Base+0x15e8>
   137fc:	mov	r0, r1
   13800:	pop	{r4, lr}
   13804:	b	137ac <argp_parse@@Base+0x158c>
   13808:	cmp	r1, #0
   1380c:	bne	1381c <argp_parse@@Base+0x15fc>
   13810:	bl	12cbc <argp_parse@@Base+0xa9c>
   13814:	mov	r0, #0
   13818:	pop	{r4, pc}
   1381c:	cmp	r1, #0
   13820:	blt	13830 <argp_parse@@Base+0x1610>
   13824:	mov	r3, #0
   13828:	cmp	r3, r3
   1382c:	beq	13840 <argp_parse@@Base+0x1620>
   13830:	bl	111bc <__errno_location@plt>
   13834:	mov	r3, #12
   13838:	str	r3, [r0]
   1383c:	b	13814 <argp_parse@@Base+0x15f4>
   13840:	pop	{r4, lr}
   13844:	b	110cc <realloc@plt>
   13848:	ldr	r2, [r0, #4]
   1384c:	ldr	r3, [r0]
   13850:	cmp	r2, #0
   13854:	add	r3, r3, #24
   13858:	bne	13864 <argp_parse@@Base+0x1644>
   1385c:	mov	r0, r2
   13860:	bx	lr
   13864:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13868:	cmp	r0, #0
   1386c:	beq	1387c <argp_parse@@Base+0x165c>
   13870:	ldr	r1, [r3, #-12]
   13874:	tst	r1, #2
   13878:	bxeq	lr
   1387c:	sub	r2, r2, #1
   13880:	b	13850 <argp_parse@@Base+0x1630>
   13884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13888:	mov	sl, r3
   1388c:	ldm	r0, {r5, r6, r7}
   13890:	mov	r3, #0
   13894:	sub	sp, sp, #20
   13898:	mov	r8, r1
   1389c:	mov	r9, r2
   138a0:	mov	r4, r5
   138a4:	mov	fp, r3
   138a8:	adds	r2, r6, #0
   138ac:	movne	r2, #1
   138b0:	cmp	r3, #0
   138b4:	movne	r2, #0
   138b8:	cmp	r2, #0
   138bc:	bne	138cc <argp_parse@@Base+0x16ac>
   138c0:	mov	r0, r3
   138c4:	add	sp, sp, #20
   138c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138cc:	ldr	r2, [r4, #12]
   138d0:	ands	r3, r2, #8
   138d4:	str	r2, [sp, #12]
   138d8:	movne	r3, fp
   138dc:	bne	1391c <argp_parse@@Base+0x16fc>
   138e0:	ldr	r1, [r4, #4]
   138e4:	sub	r0, r1, #1
   138e8:	cmp	r0, #254	; 0xfe
   138ec:	str	r1, [sp, #8]
   138f0:	bhi	1391c <argp_parse@@Base+0x16fc>
   138f4:	str	r3, [sp, #4]
   138f8:	bl	11168 <__ctype_b_loc@plt>
   138fc:	ldr	r1, [sp, #8]
   13900:	ldr	r3, [sp, #4]
   13904:	ldr	r2, [sp, #12]
   13908:	ldr	ip, [r0]
   1390c:	lsl	r0, r1, #1
   13910:	ldrh	r0, [ip, r0]
   13914:	tst	r0, #16384	; 0x4000
   13918:	bne	13928 <argp_parse@@Base+0x1708>
   1391c:	add	r4, r4, #24
   13920:	sub	r6, r6, #1
   13924:	b	138a8 <argp_parse@@Base+0x1688>
   13928:	ldrb	r0, [r7]
   1392c:	cmp	r0, r1
   13930:	bne	1391c <argp_parse@@Base+0x16fc>
   13934:	tst	r2, #4
   13938:	moveq	r5, r4
   1393c:	tst	r2, #2
   13940:	bne	1395c <argp_parse@@Base+0x173c>
   13944:	mov	r3, sl
   13948:	mov	r2, r9
   1394c:	mov	r1, r5
   13950:	mov	r0, r4
   13954:	blx	r8
   13958:	mov	r3, r0
   1395c:	add	r7, r7, #1
   13960:	b	1391c <argp_parse@@Base+0x16fc>
   13964:	ldr	r3, [r0, #12]
   13968:	ands	r3, r3, #8
   1396c:	bne	139a4 <argp_parse@@Base+0x1784>
   13970:	push	{r4, lr}
   13974:	ldr	r4, [r0, #4]
   13978:	sub	r2, r4, #1
   1397c:	cmp	r2, #254	; 0xfe
   13980:	bhi	1399c <argp_parse@@Base+0x177c>
   13984:	bl	11168 <__ctype_b_loc@plt>
   13988:	lsl	r3, r4, #1
   1398c:	ldr	r2, [r0]
   13990:	ldrh	r3, [r2, r3]
   13994:	ands	r3, r3, #16384	; 0x4000
   13998:	movne	r3, r4
   1399c:	mov	r0, r3
   139a0:	pop	{r4, pc}
   139a4:	mov	r3, #0
   139a8:	mov	r0, r3
   139ac:	bx	lr
   139b0:	push	{r4, lr}
   139b4:	mov	r4, r0
   139b8:	bl	11168 <__ctype_b_loc@plt>
   139bc:	ldr	r1, [r0]
   139c0:	ldr	r3, [r4]
   139c4:	ldrb	r0, [r3]
   139c8:	lsl	r2, r0, #1
   139cc:	ldrh	r2, [r1, r2]
   139d0:	tst	r2, #8192	; 0x2000
   139d4:	bne	13a04 <argp_parse@@Base+0x17e4>
   139d8:	subs	r0, r0, #45	; 0x2d
   139dc:	movne	r0, #1
   139e0:	ldr	r2, [r4]
   139e4:	ldrb	r3, [r2]
   139e8:	cmp	r3, #0
   139ec:	popeq	{r4, pc}
   139f0:	lsl	r3, r3, #1
   139f4:	ldrh	r3, [r1, r3]
   139f8:	tst	r3, #8
   139fc:	beq	13a10 <argp_parse@@Base+0x17f0>
   13a00:	pop	{r4, pc}
   13a04:	add	r3, r3, #1
   13a08:	str	r3, [r4]
   13a0c:	b	139c0 <argp_parse@@Base+0x17a0>
   13a10:	add	r2, r2, #1
   13a14:	str	r2, [r4]
   13a18:	b	139e0 <argp_parse@@Base+0x17c0>
   13a1c:	push	{r4, r5, r6, lr}
   13a20:	mov	r4, r0
   13a24:	ldr	r0, [r0, #12]
   13a28:	cmp	r0, #0
   13a2c:	bne	13a58 <argp_parse@@Base+0x1838>
   13a30:	ldr	r3, [r4, #4]
   13a34:	cmp	r3, #0
   13a38:	beq	13a4c <argp_parse@@Base+0x182c>
   13a3c:	ldr	r0, [r4]
   13a40:	bl	12cbc <argp_parse@@Base+0xa9c>
   13a44:	ldr	r0, [r4, #8]
   13a48:	bl	12cbc <argp_parse@@Base+0xa9c>
   13a4c:	mov	r0, r4
   13a50:	pop	{r4, r5, r6, lr}
   13a54:	b	12cbc <argp_parse@@Base+0xa9c>
   13a58:	ldr	r5, [r0, #24]
   13a5c:	bl	12cbc <argp_parse@@Base+0xa9c>
   13a60:	mov	r0, r5
   13a64:	b	13a28 <argp_parse@@Base+0x1808>
   13a68:	push	{r4, r5, r6, lr}
   13a6c:	ldr	r5, [r0, #16]
   13a70:	ldr	r0, [r0, #8]
   13a74:	cmp	r0, #0
   13a78:	beq	13a8c <argp_parse@@Base+0x186c>
   13a7c:	mov	r1, #10
   13a80:	bl	111a4 <strchr@plt>
   13a84:	adds	r0, r0, #0
   13a88:	movne	r0, #1
   13a8c:	cmp	r5, #0
   13a90:	mov	r4, r0
   13a94:	addne	r5, r5, #16
   13a98:	bne	13aac <argp_parse@@Base+0x188c>
   13a9c:	mov	r0, r4
   13aa0:	pop	{r4, r5, r6, pc}
   13aa4:	bl	13a68 <argp_parse@@Base+0x1848>
   13aa8:	add	r4, r4, r0
   13aac:	add	r5, r5, #16
   13ab0:	ldr	r0, [r5, #-32]	; 0xffffffe0
   13ab4:	cmp	r0, #0
   13ab8:	bne	13aa4 <argp_parse@@Base+0x1884>
   13abc:	b	13a9c <argp_parse@@Base+0x187c>
   13ac0:	ldr	r2, [r0, #24]
   13ac4:	ldr	r3, [r0, #28]
   13ac8:	push	{r4, r5, r6, r7, r8, lr}
   13acc:	sub	r3, r3, r2
   13ad0:	ldr	r2, [r0, #16]
   13ad4:	mov	r4, r0
   13ad8:	cmp	r3, r2
   13adc:	mov	r5, r1
   13ae0:	bls	13ae8 <argp_parse@@Base+0x18c8>
   13ae4:	bl	17044 <argp_error@@Base+0xc3c>
   13ae8:	ldr	r1, [r4, #20]
   13aec:	mov	r6, #1
   13af0:	cmp	r1, #0
   13af4:	subge	r5, r5, r1
   13af8:	mov	r7, #32
   13afc:	cmp	r5, #0
   13b00:	bgt	13b08 <argp_parse@@Base+0x18e8>
   13b04:	pop	{r4, r5, r6, r7, r8, pc}
   13b08:	ldr	r2, [r4, #28]
   13b0c:	ldr	r3, [r4, #32]
   13b10:	cmp	r2, r3
   13b14:	bcs	13b30 <argp_parse@@Base+0x1910>
   13b18:	ldr	r3, [r4, #28]
   13b1c:	add	r2, r3, #1
   13b20:	str	r2, [r4, #28]
   13b24:	strb	r7, [r3]
   13b28:	sub	r5, r5, #1
   13b2c:	b	13afc <argp_parse@@Base+0x18dc>
   13b30:	mov	r1, r6
   13b34:	mov	r0, r4
   13b38:	bl	17494 <argp_error@@Base+0x108c>
   13b3c:	cmp	r0, #0
   13b40:	bne	13b18 <argp_parse@@Base+0x18f8>
   13b44:	b	13b28 <argp_parse@@Base+0x1908>
   13b48:	push	{r4, r5, r6, lr}
   13b4c:	subs	r4, r2, #0
   13b50:	popeq	{r4, r5, r6, pc}
   13b54:	ldr	r2, [r4, #20]
   13b58:	cmp	r2, #0
   13b5c:	popeq	{r4, r5, r6, pc}
   13b60:	mov	r6, r1
   13b64:	mov	r5, r0
   13b68:	mov	r1, r3
   13b6c:	mov	r0, r4
   13b70:	bl	12b98 <argp_parse@@Base+0x978>
   13b74:	ldr	r3, [r4, #20]
   13b78:	mov	r1, r5
   13b7c:	mov	r2, r0
   13b80:	mov	r0, r6
   13b84:	pop	{r4, r5, r6, lr}
   13b88:	bx	r3
   13b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b90:	mov	r4, r2
   13b94:	ldr	r3, [r2, #16]
   13b98:	mov	r2, r1
   13b9c:	ldr	r1, [pc, #440]	; 13d5c <argp_parse@@Base+0x1b3c>
   13ba0:	mov	r7, r0
   13ba4:	bl	13b48 <argp_parse@@Base+0x1928>
   13ba8:	subs	r6, r0, #0
   13bac:	beq	13d00 <argp_parse@@Base+0x1ae0>
   13bb0:	ldrb	r3, [r6]
   13bb4:	cmp	r3, #0
   13bb8:	beq	13cf4 <argp_parse@@Base+0x1ad4>
   13bbc:	ldr	r3, [r4, #8]
   13bc0:	ldr	r3, [r3]
   13bc4:	cmp	r3, #0
   13bc8:	beq	13bf4 <argp_parse@@Base+0x19d4>
   13bcc:	ldr	r5, [r4, #4]
   13bd0:	ldr	r2, [r5, #28]
   13bd4:	ldr	r3, [r5, #32]
   13bd8:	cmp	r2, r3
   13bdc:	bcs	13d14 <argp_parse@@Base+0x1af4>
   13be0:	ldr	r3, [r5, #28]
   13be4:	add	r2, r3, #1
   13be8:	str	r2, [r5, #28]
   13bec:	mov	r2, #10
   13bf0:	strb	r2, [r3]
   13bf4:	ldr	r8, [pc, #356]	; 13d60 <argp_parse@@Base+0x1b40>
   13bf8:	ldr	r0, [r4, #4]
   13bfc:	ldr	r1, [r8, #24]
   13c00:	bl	13ac0 <argp_parse@@Base+0x18a0>
   13c04:	ldr	r9, [r4, #4]
   13c08:	ldr	sl, [r8, #24]
   13c0c:	ldr	r2, [r9, #24]
   13c10:	ldr	r3, [r9, #28]
   13c14:	sub	r3, r3, r2
   13c18:	ldr	r2, [r9, #16]
   13c1c:	cmp	r3, r2
   13c20:	bls	13c2c <argp_parse@@Base+0x1a0c>
   13c24:	mov	r0, r9
   13c28:	bl	17044 <argp_error@@Base+0xc3c>
   13c2c:	ldr	r5, [r4, #4]
   13c30:	str	sl, [r9, #4]
   13c34:	ldr	r8, [r8, #24]
   13c38:	ldr	r2, [r5, #24]
   13c3c:	ldr	r3, [r5, #28]
   13c40:	sub	r3, r3, r2
   13c44:	ldr	r2, [r5, #16]
   13c48:	cmp	r3, r2
   13c4c:	bls	13c58 <argp_parse@@Base+0x1a38>
   13c50:	mov	r0, r5
   13c54:	bl	17044 <argp_error@@Base+0xc3c>
   13c58:	str	r8, [r5, #12]
   13c5c:	mov	r0, r6
   13c60:	bl	11198 <strlen@plt>
   13c64:	subs	r8, r0, #0
   13c68:	beq	13ca0 <argp_parse@@Base+0x1a80>
   13c6c:	ldr	r5, [r4, #4]
   13c70:	ldr	r3, [r5, #28]
   13c74:	ldr	r2, [r5, #32]
   13c78:	add	r3, r3, r8
   13c7c:	cmp	r2, r3
   13c80:	bcc	13d2c <argp_parse@@Base+0x1b0c>
   13c84:	mov	r2, r8
   13c88:	mov	r1, r6
   13c8c:	ldr	r0, [r5, #28]
   13c90:	bl	11090 <memcpy@plt>
   13c94:	ldr	r3, [r5, #28]
   13c98:	add	r8, r3, r8
   13c9c:	str	r8, [r5, #28]
   13ca0:	ldr	r5, [r4, #4]
   13ca4:	ldr	r2, [r5, #24]
   13ca8:	ldr	r3, [r5, #28]
   13cac:	sub	r3, r3, r2
   13cb0:	ldr	r2, [r5, #16]
   13cb4:	cmp	r3, r2
   13cb8:	bls	13cc4 <argp_parse@@Base+0x1aa4>
   13cbc:	mov	r0, r5
   13cc0:	bl	17044 <argp_error@@Base+0xc3c>
   13cc4:	mov	r3, #0
   13cc8:	str	r3, [r5, #4]
   13ccc:	ldr	r5, [r4, #4]
   13cd0:	ldr	r2, [r5, #28]
   13cd4:	ldr	r3, [r5, #32]
   13cd8:	cmp	r2, r3
   13cdc:	bcs	13d44 <argp_parse@@Base+0x1b24>
   13ce0:	ldr	r3, [r5, #28]
   13ce4:	add	r2, r3, #1
   13ce8:	str	r2, [r5, #28]
   13cec:	mov	r2, #10
   13cf0:	strb	r2, [r3]
   13cf4:	ldr	r3, [r4, #8]
   13cf8:	mov	r2, #1
   13cfc:	str	r2, [r3, #4]
   13d00:	cmp	r7, r6
   13d04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d08:	mov	r0, r6
   13d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d10:	b	12cbc <argp_parse@@Base+0xa9c>
   13d14:	mov	r1, #1
   13d18:	mov	r0, r5
   13d1c:	bl	17494 <argp_error@@Base+0x108c>
   13d20:	cmp	r0, #0
   13d24:	bne	13be0 <argp_parse@@Base+0x19c0>
   13d28:	b	13bf4 <argp_parse@@Base+0x19d4>
   13d2c:	mov	r1, r8
   13d30:	mov	r0, r5
   13d34:	bl	17494 <argp_error@@Base+0x108c>
   13d38:	cmp	r0, #0
   13d3c:	bne	13c84 <argp_parse@@Base+0x1a64>
   13d40:	b	13ca0 <argp_parse@@Base+0x1a80>
   13d44:	mov	r1, #1
   13d48:	mov	r0, r5
   13d4c:	bl	17494 <argp_error@@Base+0x108c>
   13d50:	cmp	r0, #0
   13d54:	bne	13ce0 <argp_parse@@Base+0x1ac0>
   13d58:	b	13cf4 <argp_parse@@Base+0x1ad4>
   13d5c:	andeq	r0, r0, #3
   13d60:	andeq	r9, r2, ip, ror #6
   13d64:	ldr	r3, [r1, #12]
   13d68:	push	{r4, r5, r6, r7, r8, lr}
   13d6c:	cmp	r3, #0
   13d70:	mov	r7, r0
   13d74:	mov	r4, r1
   13d78:	beq	13e90 <argp_parse@@Base+0x1c70>
   13d7c:	ldr	r2, [r1, #8]
   13d80:	ldr	r3, [r1]
   13d84:	ldr	r8, [r2]
   13d88:	ldr	r2, [r2, #4]
   13d8c:	ldr	r5, [r3, #16]
   13d90:	cmp	r2, #0
   13d94:	cmpne	r8, #0
   13d98:	beq	13dd4 <argp_parse@@Base+0x1bb4>
   13d9c:	ldr	r2, [r3, #12]
   13da0:	ldr	r3, [r8, #12]
   13da4:	cmp	r2, r3
   13da8:	beq	13dd4 <argp_parse@@Base+0x1bb4>
   13dac:	ldr	r6, [r1, #4]
   13db0:	ldr	r2, [r6, #28]
   13db4:	ldr	r3, [r6, #32]
   13db8:	cmp	r2, r3
   13dbc:	bcs	13e70 <argp_parse@@Base+0x1c50>
   13dc0:	ldr	r3, [r6, #28]
   13dc4:	add	r2, r3, #1
   13dc8:	str	r2, [r6, #28]
   13dcc:	mov	r2, #10
   13dd0:	strb	r2, [r3]
   13dd4:	cmp	r5, #0
   13dd8:	beq	13e58 <argp_parse@@Base+0x1c38>
   13ddc:	ldr	r0, [r5]
   13de0:	cmp	r0, #0
   13de4:	beq	13e58 <argp_parse@@Base+0x1c38>
   13de8:	ldrb	r3, [r0]
   13dec:	cmp	r3, #0
   13df0:	beq	13e58 <argp_parse@@Base+0x1c38>
   13df4:	cmp	r8, #0
   13df8:	beq	13e1c <argp_parse@@Base+0x1bfc>
   13dfc:	ldr	r3, [r8, #16]
   13e00:	cmp	r5, r3
   13e04:	beq	13e58 <argp_parse@@Base+0x1c38>
   13e08:	cmp	r3, #0
   13e0c:	cmpne	r5, r3
   13e10:	bne	13e88 <argp_parse@@Base+0x1c68>
   13e14:	cmp	r5, r3
   13e18:	beq	13e58 <argp_parse@@Base+0x1c38>
   13e1c:	ldr	r3, [r4, #4]
   13e20:	mov	r2, r4
   13e24:	ldr	r1, [r5, #16]
   13e28:	ldr	r6, [r3, #12]
   13e2c:	bl	13b8c <argp_parse@@Base+0x196c>
   13e30:	ldr	r5, [r4, #4]
   13e34:	ldr	r2, [r5, #24]
   13e38:	ldr	r3, [r5, #28]
   13e3c:	sub	r3, r3, r2
   13e40:	ldr	r2, [r5, #16]
   13e44:	cmp	r3, r2
   13e48:	bls	13e54 <argp_parse@@Base+0x1c34>
   13e4c:	mov	r0, r5
   13e50:	bl	17044 <argp_error@@Base+0xc3c>
   13e54:	str	r6, [r5, #12]
   13e58:	mov	r3, #0
   13e5c:	str	r3, [r4, #12]
   13e60:	mov	r1, r7
   13e64:	ldr	r0, [r4, #4]
   13e68:	pop	{r4, r5, r6, r7, r8, lr}
   13e6c:	b	13ac0 <argp_parse@@Base+0x18a0>
   13e70:	mov	r1, #1
   13e74:	mov	r0, r6
   13e78:	bl	17494 <argp_error@@Base+0x108c>
   13e7c:	cmp	r0, #0
   13e80:	bne	13dc0 <argp_parse@@Base+0x1ba0>
   13e84:	b	13dd4 <argp_parse@@Base+0x1bb4>
   13e88:	ldr	r3, [r3, #12]
   13e8c:	b	13e08 <argp_parse@@Base+0x1be8>
   13e90:	ldr	r5, [r1, #4]
   13e94:	ldr	r3, [r5, #28]
   13e98:	ldr	r2, [r5, #32]
   13e9c:	add	r3, r3, #2
   13ea0:	cmp	r2, r3
   13ea4:	bcc	13ec8 <argp_parse@@Base+0x1ca8>
   13ea8:	ldr	r2, [pc, #48]	; 13ee0 <argp_parse@@Base+0x1cc0>
   13eac:	ldr	r3, [r5, #28]
   13eb0:	ldrh	r2, [r2]
   13eb4:	strh	r2, [r3]
   13eb8:	ldr	r3, [r5, #28]
   13ebc:	add	r3, r3, #2
   13ec0:	str	r3, [r5, #28]
   13ec4:	b	13e60 <argp_parse@@Base+0x1c40>
   13ec8:	mov	r1, #2
   13ecc:	mov	r0, r5
   13ed0:	bl	17494 <argp_error@@Base+0x108c>
   13ed4:	cmp	r0, #0
   13ed8:	bne	13ea8 <argp_parse@@Base+0x1c88>
   13edc:	b	13e60 <argp_parse@@Base+0x1c40>
   13ee0:	andeq	r8, r1, r2, lsl #12
   13ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ee8:	sub	sp, sp, #28
   13eec:	ldr	r7, [r0, #12]
   13ef0:	str	r3, [sp, #8]
   13ef4:	cmp	r7, #0
   13ef8:	ldr	r3, [r0, #16]
   13efc:	moveq	r5, r7
   13f00:	mov	r8, r0
   13f04:	str	r1, [sp, #16]
   13f08:	mov	fp, r2
   13f0c:	ldr	r4, [sp, #68]	; 0x44
   13f10:	str	r3, [sp, #12]
   13f14:	moveq	r6, r5
   13f18:	beq	13f58 <argp_parse@@Base+0x1d38>
   13f1c:	mov	r1, #11
   13f20:	mov	r0, r7
   13f24:	bl	111a4 <strchr@plt>
   13f28:	cmp	fp, #0
   13f2c:	moveq	r5, r7
   13f30:	beq	13f40 <argp_parse@@Base+0x1d20>
   13f34:	cmp	r0, #0
   13f38:	addne	r5, r0, #1
   13f3c:	moveq	r5, r0
   13f40:	cmp	r0, #0
   13f44:	clz	r6, fp
   13f48:	lsr	r6, r6, #5
   13f4c:	moveq	r6, #0
   13f50:	cmp	r6, #0
   13f54:	subne	r6, r0, r7
   13f58:	ldr	r9, [r8, #20]
   13f5c:	cmp	r9, #0
   13f60:	moveq	sl, r5
   13f64:	beq	13fb8 <argp_parse@@Base+0x1d98>
   13f68:	cmp	r6, #0
   13f6c:	beq	13f80 <argp_parse@@Base+0x1d60>
   13f70:	mov	r0, r5
   13f74:	mov	r1, r6
   13f78:	bl	11084 <strndup@plt>
   13f7c:	mov	r5, r0
   13f80:	ldr	r1, [sp, #16]
   13f84:	mov	r0, r8
   13f88:	bl	12b98 <argp_parse@@Base+0x978>
   13f8c:	ldr	ip, [pc, #928]	; 14334 <argp_parse@@Base+0x2114>
   13f90:	cmp	fp, #0
   13f94:	mov	r1, r5
   13f98:	ldr	r3, [r8, #20]
   13f9c:	mov	sl, r5
   13fa0:	mov	r2, r0
   13fa4:	mov	r9, r0
   13fa8:	ldr	r0, [pc, #904]	; 14338 <argp_parse@@Base+0x2118>
   13fac:	movne	r0, ip
   13fb0:	blx	r3
   13fb4:	mov	r5, r0
   13fb8:	cmp	r5, #0
   13fbc:	moveq	r7, r5
   13fc0:	beq	14078 <argp_parse@@Base+0x1e58>
   13fc4:	ldr	r3, [sp, #8]
   13fc8:	cmp	r3, #0
   13fcc:	beq	13ff4 <argp_parse@@Base+0x1dd4>
   13fd0:	ldr	r2, [r4, #28]
   13fd4:	ldr	r3, [r4, #32]
   13fd8:	cmp	r2, r3
   13fdc:	bcs	141a4 <argp_parse@@Base+0x1f84>
   13fe0:	ldr	r3, [r4, #28]
   13fe4:	add	r2, r3, #1
   13fe8:	str	r2, [r4, #28]
   13fec:	mov	r2, #10
   13ff0:	strb	r2, [r3]
   13ff4:	cmp	r6, #0
   13ff8:	sub	r3, r5, sl
   13ffc:	clz	r3, r3
   14000:	lsr	r3, r3, #5
   14004:	moveq	r3, #0
   14008:	cmp	r3, #0
   1400c:	ldr	r3, [r4, #28]
   14010:	beq	141d4 <argp_parse@@Base+0x1fb4>
   14014:	ldr	r2, [r4, #32]
   14018:	add	r3, r3, r6
   1401c:	cmp	r2, r3
   14020:	bcc	141bc <argp_parse@@Base+0x1f9c>
   14024:	mov	r2, r6
   14028:	mov	r1, sl
   1402c:	ldr	r0, [r4, #28]
   14030:	bl	11090 <memcpy@plt>
   14034:	ldr	r3, [r4, #28]
   14038:	add	r3, r3, r6
   1403c:	str	r3, [r4, #28]
   14040:	ldr	r2, [r4, #24]
   14044:	ldr	r3, [r4, #28]
   14048:	sub	r3, r3, r2
   1404c:	ldr	r2, [r4, #16]
   14050:	cmp	r3, r2
   14054:	bls	14060 <argp_parse@@Base+0x1e40>
   14058:	mov	r0, r4
   1405c:	bl	17044 <argp_error@@Base+0xc3c>
   14060:	ldr	r3, [r4, #20]
   14064:	ldr	r2, [r4, #4]
   14068:	bic	r3, r3, r3, asr #31
   1406c:	cmp	r2, r3
   14070:	bcc	14234 <argp_parse@@Base+0x2014>
   14074:	mov	r7, #1
   14078:	cmp	r5, #0
   1407c:	cmpne	r5, sl
   14080:	beq	1408c <argp_parse@@Base+0x1e6c>
   14084:	mov	r0, r5
   14088:	bl	12cbc <argp_parse@@Base+0xa9c>
   1408c:	cmp	sl, #0
   14090:	cmpne	r6, #0
   14094:	beq	140ac <argp_parse@@Base+0x1e8c>
   14098:	ldr	r3, [r8, #20]
   1409c:	cmp	r3, #0
   140a0:	beq	14188 <argp_parse@@Base+0x1f68>
   140a4:	mov	r0, sl
   140a8:	bl	12cbc <argp_parse@@Base+0xa9c>
   140ac:	cmp	fp, #0
   140b0:	beq	14188 <argp_parse@@Base+0x1f68>
   140b4:	ldr	r3, [r8, #20]
   140b8:	cmp	r3, #0
   140bc:	beq	14188 <argp_parse@@Base+0x1f68>
   140c0:	mov	r2, r9
   140c4:	mov	r1, #0
   140c8:	ldr	r0, [pc, #620]	; 1433c <argp_parse@@Base+0x211c>
   140cc:	blx	r3
   140d0:	subs	r5, r0, #0
   140d4:	beq	14188 <argp_parse@@Base+0x1f68>
   140d8:	ldr	r3, [sp, #8]
   140dc:	orrs	r3, r7, r3
   140e0:	beq	14108 <argp_parse@@Base+0x1ee8>
   140e4:	ldr	r2, [r4, #28]
   140e8:	ldr	r3, [r4, #32]
   140ec:	cmp	r2, r3
   140f0:	bcs	14274 <argp_parse@@Base+0x2054>
   140f4:	ldr	r3, [r4, #28]
   140f8:	add	r2, r3, #1
   140fc:	str	r2, [r4, #28]
   14100:	mov	r2, #10
   14104:	strb	r2, [r3]
   14108:	mov	r0, r5
   1410c:	bl	11198 <strlen@plt>
   14110:	subs	r6, r0, #0
   14114:	beq	14148 <argp_parse@@Base+0x1f28>
   14118:	ldr	r3, [r4, #28]
   1411c:	ldr	r2, [r4, #32]
   14120:	add	r3, r3, r6
   14124:	cmp	r2, r3
   14128:	bcc	1428c <argp_parse@@Base+0x206c>
   1412c:	mov	r2, r6
   14130:	mov	r1, r5
   14134:	ldr	r0, [r4, #28]
   14138:	bl	11090 <memcpy@plt>
   1413c:	ldr	r3, [r4, #28]
   14140:	add	r6, r3, r6
   14144:	str	r6, [r4, #28]
   14148:	mov	r0, r5
   1414c:	bl	12cbc <argp_parse@@Base+0xa9c>
   14150:	ldr	r2, [r4, #24]
   14154:	ldr	r3, [r4, #28]
   14158:	sub	r3, r3, r2
   1415c:	ldr	r2, [r4, #16]
   14160:	cmp	r3, r2
   14164:	bls	14170 <argp_parse@@Base+0x1f50>
   14168:	mov	r0, r4
   1416c:	bl	17044 <argp_error@@Base+0xc3c>
   14170:	ldr	r3, [r4, #20]
   14174:	ldr	r2, [r4, #4]
   14178:	bic	r3, r3, r3, asr #31
   1417c:	cmp	r2, r3
   14180:	bcc	142a4 <argp_parse@@Base+0x2084>
   14184:	mov	r7, #1
   14188:	ldr	r3, [sp, #12]
   1418c:	cmp	r3, #0
   14190:	addne	r5, r3, #16
   14194:	bne	14310 <argp_parse@@Base+0x20f0>
   14198:	mov	r0, r7
   1419c:	add	sp, sp, #28
   141a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141a4:	mov	r1, #1
   141a8:	mov	r0, r4
   141ac:	bl	17494 <argp_error@@Base+0x108c>
   141b0:	cmp	r0, #0
   141b4:	bne	13fe0 <argp_parse@@Base+0x1dc0>
   141b8:	b	13ff4 <argp_parse@@Base+0x1dd4>
   141bc:	mov	r1, r6
   141c0:	mov	r0, r4
   141c4:	bl	17494 <argp_error@@Base+0x108c>
   141c8:	cmp	r0, #0
   141cc:	bne	14024 <argp_parse@@Base+0x1e04>
   141d0:	b	14040 <argp_parse@@Base+0x1e20>
   141d4:	mov	r0, r5
   141d8:	str	r3, [sp, #20]
   141dc:	bl	11198 <strlen@plt>
   141e0:	subs	r7, r0, #0
   141e4:	beq	14040 <argp_parse@@Base+0x1e20>
   141e8:	ldr	r3, [sp, #20]
   141ec:	ldr	r2, [r4, #32]
   141f0:	add	r3, r3, r7
   141f4:	cmp	r2, r3
   141f8:	bcc	1421c <argp_parse@@Base+0x1ffc>
   141fc:	mov	r2, r7
   14200:	mov	r1, r5
   14204:	ldr	r0, [r4, #28]
   14208:	bl	11090 <memcpy@plt>
   1420c:	ldr	r3, [r4, #28]
   14210:	add	r7, r3, r7
   14214:	str	r7, [r4, #28]
   14218:	b	14040 <argp_parse@@Base+0x1e20>
   1421c:	mov	r1, r7
   14220:	mov	r0, r4
   14224:	bl	17494 <argp_error@@Base+0x108c>
   14228:	cmp	r0, #0
   1422c:	bne	141fc <argp_parse@@Base+0x1fdc>
   14230:	b	14040 <argp_parse@@Base+0x1e20>
   14234:	ldr	r2, [r4, #28]
   14238:	ldr	r3, [r4, #32]
   1423c:	cmp	r2, r3
   14240:	bcs	1425c <argp_parse@@Base+0x203c>
   14244:	ldr	r3, [r4, #28]
   14248:	add	r2, r3, #1
   1424c:	str	r2, [r4, #28]
   14250:	mov	r2, #10
   14254:	strb	r2, [r3]
   14258:	b	14074 <argp_parse@@Base+0x1e54>
   1425c:	mov	r1, #1
   14260:	mov	r0, r4
   14264:	bl	17494 <argp_error@@Base+0x108c>
   14268:	cmp	r0, #0
   1426c:	bne	14244 <argp_parse@@Base+0x2024>
   14270:	b	14074 <argp_parse@@Base+0x1e54>
   14274:	mov	r1, #1
   14278:	mov	r0, r4
   1427c:	bl	17494 <argp_error@@Base+0x108c>
   14280:	cmp	r0, #0
   14284:	bne	140f4 <argp_parse@@Base+0x1ed4>
   14288:	b	14108 <argp_parse@@Base+0x1ee8>
   1428c:	mov	r1, r6
   14290:	mov	r0, r4
   14294:	bl	17494 <argp_error@@Base+0x108c>
   14298:	cmp	r0, #0
   1429c:	bne	1412c <argp_parse@@Base+0x1f0c>
   142a0:	b	14148 <argp_parse@@Base+0x1f28>
   142a4:	ldr	r2, [r4, #28]
   142a8:	ldr	r3, [r4, #32]
   142ac:	cmp	r2, r3
   142b0:	bcs	142cc <argp_parse@@Base+0x20ac>
   142b4:	ldr	r3, [r4, #28]
   142b8:	add	r2, r3, #1
   142bc:	str	r2, [r4, #28]
   142c0:	mov	r2, #10
   142c4:	strb	r2, [r3]
   142c8:	b	14184 <argp_parse@@Base+0x1f64>
   142cc:	mov	r1, #1
   142d0:	mov	r0, r4
   142d4:	bl	17494 <argp_error@@Base+0x108c>
   142d8:	cmp	r0, #0
   142dc:	bne	142b4 <argp_parse@@Base+0x2094>
   142e0:	b	14184 <argp_parse@@Base+0x1f64>
   142e4:	ldr	r3, [sp, #8]
   142e8:	str	r4, [sp, #4]
   142ec:	orrs	r3, r7, r3
   142f0:	ldr	r3, [sp, #64]	; 0x40
   142f4:	mov	r2, fp
   142f8:	str	r3, [sp]
   142fc:	ldr	r1, [sp, #16]
   14300:	movne	r3, #1
   14304:	moveq	r3, #0
   14308:	bl	13ee4 <argp_parse@@Base+0x1cc4>
   1430c:	orr	r7, r7, r0
   14310:	ldr	r0, [r5, #-16]
   14314:	cmp	r0, #0
   14318:	beq	14198 <argp_parse@@Base+0x1f78>
   1431c:	ldr	r3, [sp, #64]	; 0x40
   14320:	add	r5, r5, #16
   14324:	cmp	r7, #0
   14328:	cmpne	r3, #0
   1432c:	beq	142e4 <argp_parse@@Base+0x20c4>
   14330:	b	14198 <argp_parse@@Base+0x1f78>
   14334:	andeq	r0, r0, #2
   14338:	andeq	r0, r0, #1
   1433c:	andeq	r0, r0, #4
   14340:	ldr	r2, [r0, #24]
   14344:	ldr	r3, [r0, #28]
   14348:	push	{r4, r5, r6, lr}
   1434c:	sub	r3, r3, r2
   14350:	ldr	r2, [r0, #16]
   14354:	mov	r4, r0
   14358:	cmp	r3, r2
   1435c:	mov	r5, r1
   14360:	bls	14368 <argp_parse@@Base+0x2148>
   14364:	bl	17044 <argp_error@@Base+0xc3c>
   14368:	ldr	r1, [r4, #20]
   1436c:	ldr	r3, [r4, #8]
   14370:	cmp	r1, #0
   14374:	addge	r5, r5, r1
   14378:	cmp	r5, r3
   1437c:	ldr	r2, [r4, #28]
   14380:	ldr	r3, [r4, #32]
   14384:	bcc	143c0 <argp_parse@@Base+0x21a0>
   14388:	cmp	r2, r3
   1438c:	bcs	143a8 <argp_parse@@Base+0x2188>
   14390:	ldr	r3, [r4, #28]
   14394:	add	r2, r3, #1
   14398:	str	r2, [r4, #28]
   1439c:	mov	r2, #10
   143a0:	strb	r2, [r3]
   143a4:	pop	{r4, r5, r6, pc}
   143a8:	mov	r1, #1
   143ac:	mov	r0, r4
   143b0:	bl	17494 <argp_error@@Base+0x108c>
   143b4:	cmp	r0, #0
   143b8:	bne	14390 <argp_parse@@Base+0x2170>
   143bc:	pop	{r4, r5, r6, pc}
   143c0:	cmp	r2, r3
   143c4:	bcs	143dc <argp_parse@@Base+0x21bc>
   143c8:	ldr	r3, [r4, #28]
   143cc:	add	r2, r3, #1
   143d0:	str	r2, [r4, #28]
   143d4:	mov	r2, #32
   143d8:	b	143a0 <argp_parse@@Base+0x2180>
   143dc:	mov	r1, #1
   143e0:	mov	r0, r4
   143e4:	bl	17494 <argp_error@@Base+0x108c>
   143e8:	cmp	r0, #0
   143ec:	bne	143c8 <argp_parse@@Base+0x21a8>
   143f0:	pop	{r4, r5, r6, pc}
   143f4:	push	{r4, r5, r6, lr}
   143f8:	ldr	r5, [r0, #8]
   143fc:	ldr	r2, [r0, #12]
   14400:	ldr	ip, [r1, #12]
   14404:	cmp	r5, #0
   14408:	orr	r2, r2, ip
   1440c:	bne	1441c <argp_parse@@Base+0x21fc>
   14410:	ldr	r5, [r1, #8]
   14414:	cmp	r5, #0
   14418:	beq	14448 <argp_parse@@Base+0x2228>
   1441c:	tst	r2, #16
   14420:	bne	14448 <argp_parse@@Base+0x2228>
   14424:	tst	r2, #1
   14428:	mov	r6, r3
   1442c:	mov	r4, r0
   14430:	beq	14450 <argp_parse@@Base+0x2230>
   14434:	ldr	r2, [r0, #4]
   14438:	ldr	r1, [pc, #52]	; 14474 <argp_parse@@Base+0x2254>
   1443c:	mov	r3, r5
   14440:	mov	r0, r6
   14444:	bl	17578 <argp_error@@Base+0x1170>
   14448:	mov	r0, #0
   1444c:	pop	{r4, r5, r6, pc}
   14450:	mov	r0, r5
   14454:	bl	11198 <strlen@plt>
   14458:	add	r1, r0, #6
   1445c:	mov	r0, r6
   14460:	bl	14340 <argp_parse@@Base+0x2120>
   14464:	mov	r3, r5
   14468:	ldr	r2, [r4, #4]
   1446c:	ldr	r1, [pc, #4]	; 14478 <argp_parse@@Base+0x2258>
   14470:	b	14440 <argp_parse@@Base+0x2220>
   14474:	andeq	r8, r1, r5, lsl #12
   14478:	andeq	r8, r1, r0, lsl r6
   1447c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14480:	mov	r6, r3
   14484:	sub	sp, sp, #36	; 0x24
   14488:	ldr	r3, [r0, #16]
   1448c:	str	r1, [sp, #20]
   14490:	str	r3, [sp, #12]
   14494:	ldr	r3, [r0, #8]
   14498:	ldr	sl, [r2]
   1449c:	str	r3, [sp, #16]
   144a0:	mov	fp, r2
   144a4:	mov	r3, r1
   144a8:	mov	r2, r0
   144ac:	ldr	r1, [pc, #404]	; 14648 <argp_parse@@Base+0x2428>
   144b0:	ldr	r0, [sp, #16]
   144b4:	ldr	r5, [sp, #72]	; 0x48
   144b8:	bl	13b48 <argp_parse@@Base+0x1928>
   144bc:	subs	r8, r0, #0
   144c0:	moveq	r7, r8
   144c4:	moveq	r4, r8
   144c8:	beq	1455c <argp_parse@@Base+0x233c>
   144cc:	mov	r1, #10
   144d0:	bl	11060 <strchrnul@plt>
   144d4:	ldrb	r4, [r0]
   144d8:	mov	r7, r0
   144dc:	cmp	r4, #0
   144e0:	moveq	r9, r8
   144e4:	beq	14510 <argp_parse@@Base+0x22f0>
   144e8:	ldrb	r3, [sl]
   144ec:	mov	r9, r8
   144f0:	mov	r4, #0
   144f4:	mov	r2, #10
   144f8:	cmp	r4, r3
   144fc:	blt	145cc <argp_parse@@Base+0x23ac>
   14500:	ldr	r3, [fp]
   14504:	mov	r4, #1
   14508:	add	r3, r3, #1
   1450c:	str	r3, [fp]
   14510:	add	r1, r7, #1
   14514:	sub	r1, r1, r9
   14518:	mov	r0, r5
   1451c:	bl	14340 <argp_parse@@Base+0x2120>
   14520:	ldr	r2, [r5, #28]
   14524:	sub	r3, r7, r9
   14528:	ldr	r1, [r5, #32]
   1452c:	add	r2, r2, r3
   14530:	cmp	r1, r2
   14534:	bcc	145f8 <argp_parse@@Base+0x23d8>
   14538:	mov	r2, r3
   1453c:	mov	r1, r9
   14540:	ldr	r0, [r5, #28]
   14544:	str	r3, [sp, #24]
   14548:	bl	11090 <memcpy@plt>
   1454c:	ldr	r2, [r5, #28]
   14550:	ldr	r3, [sp, #24]
   14554:	add	r3, r2, r3
   14558:	str	r3, [r5, #28]
   1455c:	ldr	r3, [sp, #16]
   14560:	cmp	r8, #0
   14564:	cmpne	r3, r8
   14568:	beq	14574 <argp_parse@@Base+0x2354>
   1456c:	mov	r0, r8
   14570:	bl	12cbc <argp_parse@@Base+0xa9c>
   14574:	ldr	r3, [sp, #12]
   14578:	cmp	r3, #0
   1457c:	addne	r8, r3, #16
   14580:	bne	14634 <argp_parse@@Base+0x2414>
   14584:	cmp	r6, #0
   14588:	moveq	r4, #0
   1458c:	andne	r4, r4, #1
   14590:	cmp	r4, #0
   14594:	beq	145bc <argp_parse@@Base+0x239c>
   14598:	ldrb	r2, [r7]
   1459c:	ldrb	r3, [sl]
   145a0:	cmp	r2, #0
   145a4:	addne	r3, r3, #1
   145a8:	strbne	r3, [sl]
   145ac:	movne	r6, #0
   145b0:	bne	145bc <argp_parse@@Base+0x239c>
   145b4:	cmp	r3, #0
   145b8:	strbne	r2, [sl]
   145bc:	clz	r0, r6
   145c0:	lsr	r0, r0, #5
   145c4:	add	sp, sp, #36	; 0x24
   145c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145cc:	add	r9, r7, #1
   145d0:	mov	r1, r2
   145d4:	mov	r0, r9
   145d8:	str	r3, [sp, #28]
   145dc:	str	r2, [sp, #24]
   145e0:	bl	11060 <strchrnul@plt>
   145e4:	add	r4, r4, #1
   145e8:	ldr	r3, [sp, #28]
   145ec:	ldr	r2, [sp, #24]
   145f0:	mov	r7, r0
   145f4:	b	144f8 <argp_parse@@Base+0x22d8>
   145f8:	mov	r1, r3
   145fc:	mov	r0, r5
   14600:	str	r3, [sp, #24]
   14604:	bl	17494 <argp_error@@Base+0x108c>
   14608:	ldr	r3, [sp, #24]
   1460c:	cmp	r0, #0
   14610:	bne	14538 <argp_parse@@Base+0x2318>
   14614:	b	1455c <argp_parse@@Base+0x233c>
   14618:	mov	r3, r6
   1461c:	str	r5, [sp]
   14620:	mov	r2, fp
   14624:	ldr	r1, [sp, #20]
   14628:	bl	1447c <argp_parse@@Base+0x225c>
   1462c:	clz	r6, r0
   14630:	lsr	r6, r6, #5
   14634:	add	r8, r8, #16
   14638:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1463c:	cmp	r0, #0
   14640:	bne	14618 <argp_parse@@Base+0x23f8>
   14644:	b	14584 <argp_parse@@Base+0x2364>
   14648:	andeq	r0, r0, #6
   1464c:	ldr	r2, [r0, #8]
   14650:	cmp	r2, #0
   14654:	bne	14688 <argp_parse@@Base+0x2468>
   14658:	ldr	r2, [r1, #8]
   1465c:	cmp	r2, #0
   14660:	bne	14688 <argp_parse@@Base+0x2468>
   14664:	ldr	r1, [r1, #12]
   14668:	ldr	r2, [r0, #12]
   1466c:	orr	r2, r2, r1
   14670:	tst	r2, #16
   14674:	ldreq	r2, [r3]
   14678:	addeq	r1, r2, #1
   1467c:	streq	r1, [r3]
   14680:	ldreq	r3, [r0, #4]
   14684:	strbeq	r3, [r2]
   14688:	mov	r0, #0
   1468c:	bx	lr
   14690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14694:	add	fp, sp, #32
   14698:	sub	sp, sp, #12
   1469c:	ldr	r6, [r0, #4]
   146a0:	cmp	r6, #0
   146a4:	beq	14748 <argp_parse@@Base+0x2528>
   146a8:	mov	r5, r0
   146ac:	ldr	r0, [r0, #8]
   146b0:	mov	r4, r1
   146b4:	bl	11198 <strlen@plt>
   146b8:	ldr	sl, [pc, #324]	; 14804 <argp_parse@@Base+0x25e4>
   146bc:	ldr	r7, [r5]
   146c0:	sub	r9, fp, #36	; 0x24
   146c4:	add	r0, r0, #15
   146c8:	bic	r0, r0, #7
   146cc:	sub	sp, sp, r0
   146d0:	mov	r8, sp
   146d4:	str	sp, [r9, #-4]!
   146d8:	ldr	r2, [r7, #20]
   146dc:	mov	r0, r7
   146e0:	mov	r3, r9
   146e4:	ldr	r2, [r2, #24]
   146e8:	mov	r1, sl
   146ec:	bl	13884 <argp_parse@@Base+0x1664>
   146f0:	subs	r6, r6, #1
   146f4:	add	r7, r7, #28
   146f8:	bne	146d8 <argp_parse@@Base+0x24b8>
   146fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14700:	cmp	r8, r3
   14704:	bcs	14724 <argp_parse@@Base+0x2504>
   14708:	add	r2, r3, #1
   1470c:	str	r2, [fp, #-40]	; 0xffffffd8
   14710:	ldr	r1, [pc, #240]	; 14808 <argp_parse@@Base+0x25e8>
   14714:	strb	r6, [r3]
   14718:	mov	r2, r8
   1471c:	mov	r0, r4
   14720:	bl	17578 <argp_error@@Base+0x1170>
   14724:	ldm	r5, {r6, r7}
   14728:	ldr	r8, [pc, #220]	; 1480c <argp_parse@@Base+0x25ec>
   1472c:	cmp	r7, #0
   14730:	bne	14750 <argp_parse@@Base+0x2530>
   14734:	ldm	r5, {r5, r8}
   14738:	ldr	sl, [pc, #208]	; 14810 <argp_parse@@Base+0x25f0>
   1473c:	add	r5, r5, #28
   14740:	cmp	r8, #0
   14744:	bne	14774 <argp_parse@@Base+0x2554>
   14748:	sub	sp, fp, #32
   1474c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14750:	ldr	r2, [r6, #20]
   14754:	mov	r0, r6
   14758:	mov	r3, r4
   1475c:	ldr	r2, [r2, #24]
   14760:	mov	r1, r8
   14764:	bl	13884 <argp_parse@@Base+0x1664>
   14768:	add	r6, r6, #28
   1476c:	sub	r7, r7, #1
   14770:	b	1472c <argp_parse@@Base+0x250c>
   14774:	ldr	r7, [r5, #-28]	; 0xffffffe4
   14778:	ldr	r9, [r5, #-24]	; 0xffffffe8
   1477c:	mov	r6, r7
   14780:	cmp	r9, #0
   14784:	subeq	r8, r8, #1
   14788:	addeq	r5, r5, #28
   1478c:	beq	14740 <argp_parse@@Base+0x2520>
   14790:	ldr	r2, [r6]
   14794:	cmp	r2, #0
   14798:	beq	147e8 <argp_parse@@Base+0x25c8>
   1479c:	ldr	r1, [r6, #12]
   147a0:	tst	r1, #4
   147a4:	moveq	r7, r6
   147a8:	tst	r1, #2
   147ac:	bne	147e8 <argp_parse@@Base+0x25c8>
   147b0:	ldr	r3, [r6, #8]
   147b4:	ldr	r0, [r7, #12]
   147b8:	cmp	r3, #0
   147bc:	orr	r1, r1, r0
   147c0:	ldreq	r3, [r7, #8]
   147c4:	tst	r1, #16
   147c8:	bne	147e8 <argp_parse@@Base+0x25c8>
   147cc:	cmp	r3, #0
   147d0:	beq	147f4 <argp_parse@@Base+0x25d4>
   147d4:	tst	r1, #1
   147d8:	movne	r1, sl
   147dc:	ldreq	r1, [pc, #48]	; 14814 <argp_parse@@Base+0x25f4>
   147e0:	mov	r0, r4
   147e4:	bl	17578 <argp_error@@Base+0x1170>
   147e8:	add	r6, r6, #24
   147ec:	sub	r9, r9, #1
   147f0:	b	14780 <argp_parse@@Base+0x2560>
   147f4:	ldr	r1, [pc, #28]	; 14818 <argp_parse@@Base+0x25f8>
   147f8:	mov	r0, r4
   147fc:	bl	17578 <argp_error@@Base+0x1170>
   14800:	b	147e8 <argp_parse@@Base+0x25c8>
   14804:	andeq	r4, r1, ip, asr #12
   14808:	andeq	r8, r1, r9, lsl r6
   1480c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14810:	andeq	r8, r1, r0, lsr #12
   14814:	andeq	r8, r1, sp, lsr #12
   14818:	andeq	r8, r1, r8, lsr r6
   1481c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14820:	mov	r8, r1
   14824:	ldm	r0, {r5, r6}
   14828:	cmp	r6, #0
   1482c:	bne	14834 <argp_parse@@Base+0x2614>
   14830:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14834:	ldm	r5, {r4, r9}
   14838:	mov	r7, #0
   1483c:	add	r4, r4, #24
   14840:	cmp	r9, r7
   14844:	subeq	r6, r6, #1
   14848:	addeq	r5, r5, #28
   1484c:	beq	14828 <argp_parse@@Base+0x2608>
   14850:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14854:	cmp	r0, #0
   14858:	beq	14878 <argp_parse@@Base+0x2658>
   1485c:	ldr	r3, [r4, #-12]
   14860:	tst	r3, #2
   14864:	bne	14878 <argp_parse@@Base+0x2658>
   14868:	mov	r1, r8
   1486c:	bl	11024 <strcmp@plt>
   14870:	cmp	r0, #0
   14874:	beq	14884 <argp_parse@@Base+0x2664>
   14878:	add	r7, r7, #1
   1487c:	add	r4, r4, #24
   14880:	b	14840 <argp_parse@@Base+0x2620>
   14884:	mvn	r3, #0
   14888:	str	r3, [r5, #12]
   1488c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14894:	sub	sp, sp, #44	; 0x2c
   14898:	ldr	r6, [r0, #16]
   1489c:	str	r0, [sp, #8]
   148a0:	ldr	r5, [r0]
   148a4:	mov	r0, #16
   148a8:	mov	r9, r1
   148ac:	bl	137ac <argp_parse@@Base+0x158c>
   148b0:	subs	r4, r0, #0
   148b4:	bne	148cc <argp_parse@@Base+0x26ac>
   148b8:	ldr	r3, [pc, #1444]	; 14e64 <argp_parse@@Base+0x2c44>
   148bc:	ldr	r2, [pc, #1444]	; 14e68 <argp_parse@@Base+0x2c48>
   148c0:	ldr	r1, [pc, #1444]	; 14e6c <argp_parse@@Base+0x2c4c>
   148c4:	ldr	r0, [pc, #1444]	; 14e70 <argp_parse@@Base+0x2c50>
   148c8:	bl	112e8 <__assert_fail@plt>
   148cc:	mov	r3, #0
   148d0:	cmp	r5, r3
   148d4:	str	r3, [r4, #4]
   148d8:	str	r3, [r4, #12]
   148dc:	beq	14e30 <argp_parse@@Base+0x2c10>
   148e0:	ldr	r8, [r5, #12]
   148e4:	ands	r8, r8, #4
   148e8:	addeq	r7, r5, #24
   148ec:	moveq	fp, r8
   148f0:	beq	14c98 <argp_parse@@Base+0x2a78>
   148f4:	ldr	r3, [pc, #1384]	; 14e64 <argp_parse@@Base+0x2c44>
   148f8:	mov	r2, #460	; 0x1cc
   148fc:	ldr	r1, [pc, #1384]	; 14e6c <argp_parse@@Base+0x2c4c>
   14900:	ldr	r0, [pc, #1388]	; 14e74 <argp_parse@@Base+0x2c54>
   14904:	b	148c8 <argp_parse@@Base+0x26a8>
   14908:	ldr	r2, [pc, #1384]	; 14e78 <argp_parse@@Base+0x2c58>
   1490c:	ldr	r0, [r4, #4]
   14910:	cmp	r0, r2
   14914:	addls	r7, r7, #28
   14918:	movls	sl, r3
   1491c:	movls	r2, r1
   14920:	bls	14dfc <argp_parse@@Base+0x2bdc>
   14924:	ldr	r3, [pc, #1336]	; 14e64 <argp_parse@@Base+0x2c44>
   14928:	mov	r2, #476	; 0x1dc
   1492c:	ldr	r1, [pc, #1336]	; 14e6c <argp_parse@@Base+0x2c4c>
   14930:	ldr	r0, [pc, #1348]	; 14e7c <argp_parse@@Base+0x2c5c>
   14934:	b	148c8 <argp_parse@@Base+0x26a8>
   14938:	ldrb	r0, [r0]
   1493c:	add	r1, r1, #1
   14940:	cmp	r0, r8
   14944:	beq	14dc0 <argp_parse@@Base+0x2ba0>
   14948:	cmp	sl, r1
   1494c:	mov	r0, r1
   14950:	bhi	14938 <argp_parse@@Base+0x2718>
   14954:	strb	r8, [sl]
   14958:	add	sl, sl, #1
   1495c:	b	14dc0 <argp_parse@@Base+0x2ba0>
   14960:	ldr	r8, [r6, #-4]
   14964:	ldr	r7, [r6, #-8]
   14968:	cmp	r8, #0
   1496c:	bne	1497c <argp_parse@@Base+0x275c>
   14970:	cmp	r7, #0
   14974:	moveq	r1, r9
   14978:	beq	149d8 <argp_parse@@Base+0x27b8>
   1497c:	ldr	r3, [sp, #8]
   14980:	sub	r5, r6, #16
   14984:	mov	r0, #28
   14988:	ldr	r3, [r3, #16]
   1498c:	sub	r5, r5, r3
   14990:	bl	137ac <argp_parse@@Base+0x158c>
   14994:	asr	r5, r5, #4
   14998:	subs	r1, r0, #0
   1499c:	beq	149d8 <argp_parse@@Base+0x27b8>
   149a0:	ldr	r3, [sp, #8]
   149a4:	cmp	r9, #0
   149a8:	str	r3, [r1, #16]
   149ac:	ldrne	r3, [r9, #20]
   149b0:	moveq	r3, #0
   149b4:	addne	r3, r3, #1
   149b8:	str	r3, [r1, #20]
   149bc:	ldr	r3, [r4, #12]
   149c0:	str	r8, [r1, #8]
   149c4:	str	r7, [r1]
   149c8:	str	r5, [r1, #4]
   149cc:	str	r9, [r1, #12]
   149d0:	str	r3, [r1, #24]
   149d4:	str	r1, [r4, #12]
   149d8:	ldr	r0, [r6, #-16]
   149dc:	bl	14890 <argp_parse@@Base+0x2670>
   149e0:	ldr	r2, [sp, #28]
   149e4:	ldr	r3, [r4, #12]
   149e8:	mov	r5, r0
   149ec:	cmp	r3, #0
   149f0:	bne	14a4c <argp_parse@@Base+0x282c>
   149f4:	ldr	r1, [r5, #12]
   149f8:	str	r1, [r2]
   149fc:	ldr	r2, [r5, #4]
   14a00:	str	r3, [r5, #12]
   14a04:	cmp	r2, #0
   14a08:	beq	14a30 <argp_parse@@Base+0x2810>
   14a0c:	ldr	r1, [r4, #4]
   14a10:	cmp	r1, #0
   14a14:	bne	14a58 <argp_parse@@Base+0x2838>
   14a18:	str	r2, [r4, #4]
   14a1c:	ldr	r2, [r5]
   14a20:	str	r2, [r4]
   14a24:	ldr	r2, [r5, #8]
   14a28:	str	r2, [r4, #8]
   14a2c:	str	r3, [r5, #4]
   14a30:	mov	r0, r5
   14a34:	bl	13a1c <argp_parse@@Base+0x17fc>
   14a38:	add	r6, r6, #16
   14a3c:	ldr	r3, [r6, #-16]
   14a40:	cmp	r3, #0
   14a44:	bne	14960 <argp_parse@@Base+0x2740>
   14a48:	b	14e44 <argp_parse@@Base+0x2c24>
   14a4c:	add	r2, r3, #24
   14a50:	ldr	r3, [r3, #24]
   14a54:	b	149ec <argp_parse@@Base+0x27cc>
   14a58:	add	r3, r2, r1
   14a5c:	mov	r7, #28
   14a60:	str	r3, [sp, #12]
   14a64:	mul	r0, r7, r3
   14a68:	bl	137ac <argp_parse@@Base+0x158c>
   14a6c:	str	r0, [sp]
   14a70:	ldr	r0, [r4, #8]
   14a74:	bl	11198 <strlen@plt>
   14a78:	mov	fp, r0
   14a7c:	ldr	r0, [r5, #8]
   14a80:	bl	11198 <strlen@plt>
   14a84:	add	r0, fp, r0
   14a88:	add	r0, r0, #1
   14a8c:	bl	137ac <argp_parse@@Base+0x158c>
   14a90:	ldr	r3, [sp]
   14a94:	cmp	r3, #0
   14a98:	cmpne	r0, #0
   14a9c:	mov	r8, r0
   14aa0:	ldreq	r3, [pc, #984]	; 14e80 <argp_parse@@Base+0x2c60>
   14aa4:	ldreq	r2, [pc, #984]	; 14e84 <argp_parse@@Base+0x2c64>
   14aa8:	ldreq	r1, [pc, #956]	; 14e6c <argp_parse@@Base+0x2c4c>
   14aac:	ldreq	r0, [pc, #980]	; 14e88 <argp_parse@@Base+0x2c68>
   14ab0:	beq	148c8 <argp_parse@@Base+0x26a8>
   14ab4:	ldr	r3, [sp, #12]
   14ab8:	ldr	r2, [pc, #952]	; 14e78 <argp_parse@@Base+0x2c58>
   14abc:	cmp	r3, r2
   14ac0:	ldrhi	r3, [pc, #952]	; 14e80 <argp_parse@@Base+0x2c60>
   14ac4:	movhi	r2, #972	; 0x3cc
   14ac8:	ldrhi	r1, [pc, #924]	; 14e6c <argp_parse@@Base+0x2c4c>
   14acc:	ldrhi	r0, [pc, #952]	; 14e8c <argp_parse@@Base+0x2c6c>
   14ad0:	bhi	148c8 <argp_parse@@Base+0x26a8>
   14ad4:	ldr	sl, [r4, #4]
   14ad8:	ldr	r3, [r4]
   14adc:	ldr	r0, [sp]
   14ae0:	str	r3, [sp, #16]
   14ae4:	mul	r3, r7, sl
   14ae8:	ldr	r1, [sp, #16]
   14aec:	mov	r2, r3
   14af0:	str	r3, [sp, #24]
   14af4:	bl	1115c <mempcpy@plt>
   14af8:	ldr	r3, [r5, #4]
   14afc:	ldr	r1, [r5]
   14b00:	str	r3, [sp, #4]
   14b04:	mul	r2, r7, r3
   14b08:	bl	11090 <memcpy@plt>
   14b0c:	ldr	r3, [r4, #8]
   14b10:	mov	r2, fp
   14b14:	mov	r1, r3
   14b18:	mov	r0, r8
   14b1c:	str	r3, [sp, #20]
   14b20:	bl	11090 <memcpy@plt>
   14b24:	ldr	r1, [sp]
   14b28:	ldr	r3, [sp, #20]
   14b2c:	cmp	sl, #0
   14b30:	bne	14b8c <argp_parse@@Base+0x296c>
   14b34:	add	r3, r8, fp
   14b38:	str	r3, [sp, #20]
   14b3c:	ldr	r3, [sp, #24]
   14b40:	ldr	r1, [r5, #8]
   14b44:	add	r7, r3, #28
   14b48:	ldr	r3, [sp]
   14b4c:	ldr	sl, [sp, #20]
   14b50:	add	r7, r3, r7
   14b54:	ldr	r3, [sp, #4]
   14b58:	cmp	r3, #0
   14b5c:	bne	14ba8 <argp_parse@@Base+0x2988>
   14b60:	ldrb	r3, [sp, #4]
   14b64:	ldr	r0, [sp, #16]
   14b68:	strb	r3, [sl]
   14b6c:	bl	12cbc <argp_parse@@Base+0xa9c>
   14b70:	ldr	r0, [r4, #8]
   14b74:	bl	12cbc <argp_parse@@Base+0xa9c>
   14b78:	ldr	r3, [sp]
   14b7c:	str	r3, [r4]
   14b80:	ldr	r3, [sp, #12]
   14b84:	stmib	r4, {r3, r8}
   14b88:	b	14a30 <argp_parse@@Base+0x2810>
   14b8c:	ldr	r2, [r1, #8]
   14b90:	sub	sl, sl, #1
   14b94:	sub	r2, r2, r3
   14b98:	add	r2, r8, r2
   14b9c:	str	r2, [r1, #8]
   14ba0:	add	r1, r1, #28
   14ba4:	b	14b2c <argp_parse@@Base+0x290c>
   14ba8:	ldr	r3, [r7, #-24]	; 0xffffffe8
   14bac:	ldr	fp, [r7, #-28]	; 0xffffffe4
   14bb0:	str	sl, [r7, #-20]	; 0xffffffec
   14bb4:	cmp	r3, #0
   14bb8:	ldreq	r3, [sp, #4]
   14bbc:	addeq	r7, r7, #28
   14bc0:	subeq	r3, r3, #1
   14bc4:	streq	r3, [sp, #4]
   14bc8:	beq	14b54 <argp_parse@@Base+0x2934>
   14bcc:	ldr	r2, [fp, #12]
   14bd0:	tst	r2, #8
   14bd4:	bne	14c18 <argp_parse@@Base+0x29f8>
   14bd8:	ldr	r2, [fp, #4]
   14bdc:	sub	r0, r2, #1
   14be0:	cmp	r0, #254	; 0xfe
   14be4:	str	r2, [sp, #36]	; 0x24
   14be8:	bhi	14c18 <argp_parse@@Base+0x29f8>
   14bec:	str	r3, [sp, #32]
   14bf0:	str	r1, [sp, #24]
   14bf4:	bl	11168 <__ctype_b_loc@plt>
   14bf8:	ldr	r2, [sp, #36]	; 0x24
   14bfc:	ldr	r1, [sp, #24]
   14c00:	ldr	r3, [sp, #32]
   14c04:	ldr	ip, [r0]
   14c08:	lsl	r0, r2, #1
   14c0c:	ldrh	r0, [ip, r0]
   14c10:	tst	r0, #16384	; 0x4000
   14c14:	bne	14e50 <argp_parse@@Base+0x2c30>
   14c18:	add	fp, fp, #24
   14c1c:	sub	r3, r3, #1
   14c20:	b	14bb4 <argp_parse@@Base+0x2994>
   14c24:	ldrb	ip, [ip]
   14c28:	add	r2, r2, #1
   14c2c:	cmp	ip, r0
   14c30:	beq	14c4c <argp_parse@@Base+0x2a2c>
   14c34:	ldr	lr, [sp, #20]
   14c38:	mov	ip, r2
   14c3c:	cmp	lr, r2
   14c40:	bhi	14c24 <argp_parse@@Base+0x2a04>
   14c44:	strb	r0, [sl]
   14c48:	add	sl, sl, #1
   14c4c:	add	r1, r1, #1
   14c50:	b	14c18 <argp_parse@@Base+0x29f8>
   14c54:	ldr	r1, [r7, #-12]
   14c58:	tst	r1, #4
   14c5c:	ldreq	r2, [r4, #4]
   14c60:	addeq	r2, r2, #1
   14c64:	streq	r2, [r4, #4]
   14c68:	tst	r1, #8
   14c6c:	bne	14c94 <argp_parse@@Base+0x2a74>
   14c70:	sub	r2, sl, #1
   14c74:	cmp	r2, #254	; 0xfe
   14c78:	bhi	14c94 <argp_parse@@Base+0x2a74>
   14c7c:	bl	11168 <__ctype_b_loc@plt>
   14c80:	lsl	sl, sl, #1
   14c84:	ldr	r2, [r0]
   14c88:	ldrh	r2, [r2, sl]
   14c8c:	tst	r2, #16384	; 0x4000
   14c90:	addne	fp, fp, #1
   14c94:	add	r7, r7, #24
   14c98:	ldr	sl, [r7, #-20]	; 0xffffffec
   14c9c:	cmp	sl, #0
   14ca0:	bne	14c54 <argp_parse@@Base+0x2a34>
   14ca4:	ldr	r2, [r7, #-24]	; 0xffffffe8
   14ca8:	cmp	r2, #0
   14cac:	bne	14c54 <argp_parse@@Base+0x2a34>
   14cb0:	ldr	r2, [r7, #-8]
   14cb4:	cmp	r2, #0
   14cb8:	bne	14c54 <argp_parse@@Base+0x2a34>
   14cbc:	ldr	r1, [r7, #-4]
   14cc0:	cmp	r1, #0
   14cc4:	bne	14c54 <argp_parse@@Base+0x2a34>
   14cc8:	ldr	r2, [r4, #4]
   14ccc:	mov	r0, #28
   14cd0:	str	r1, [sp]
   14cd4:	mul	r0, r0, r2
   14cd8:	bl	137ac <argp_parse@@Base+0x158c>
   14cdc:	str	r0, [r4]
   14ce0:	add	r0, fp, #1
   14ce4:	bl	137ac <argp_parse@@Base+0x158c>
   14ce8:	ldr	r7, [r4]
   14cec:	ldr	r1, [sp]
   14cf0:	cmp	r0, #0
   14cf4:	cmpne	r7, #0
   14cf8:	mov	r3, r0
   14cfc:	str	r0, [r4, #8]
   14d00:	bne	14908 <argp_parse@@Base+0x26e8>
   14d04:	ldr	r3, [pc, #344]	; 14e64 <argp_parse@@Base+0x2c44>
   14d08:	ldr	r2, [pc, #384]	; 14e90 <argp_parse@@Base+0x2c70>
   14d0c:	ldr	r1, [pc, #344]	; 14e6c <argp_parse@@Base+0x2c4c>
   14d10:	ldr	r0, [pc, #380]	; 14e94 <argp_parse@@Base+0x2c74>
   14d14:	b	148c8 <argp_parse@@Base+0x26a8>
   14d18:	uxtb	r8, r8
   14d1c:	mov	r1, r3
   14d20:	b	14948 <argp_parse@@Base+0x2728>
   14d24:	ldr	r1, [r5, #12]
   14d28:	tst	r1, #4
   14d2c:	bne	14d70 <argp_parse@@Base+0x2b50>
   14d30:	b	14df4 <argp_parse@@Base+0x2bd4>
   14d34:	str	r2, [r7, #-24]	; 0xffffffe8
   14d38:	ldr	fp, [r5, #20]
   14d3c:	str	r5, [r7, #-28]	; 0xffffffe4
   14d40:	cmp	fp, #0
   14d44:	str	sl, [r7, #-20]	; 0xffffffec
   14d48:	bne	14d60 <argp_parse@@Base+0x2b40>
   14d4c:	ldr	r1, [r5]
   14d50:	cmp	r1, #0
   14d54:	cmpeq	r0, #0
   14d58:	addeq	fp, r8, #1
   14d5c:	movne	fp, r8
   14d60:	ldr	r1, [sp, #8]
   14d64:	str	fp, [r7, #-16]
   14d68:	str	r9, [r7, #-12]
   14d6c:	str	r1, [r7, #-8]
   14d70:	ldr	r1, [r7, #-24]	; 0xffffffe8
   14d74:	add	r1, r1, #1
   14d78:	str	r1, [r7, #-24]	; 0xffffffe8
   14d7c:	ldr	r1, [r5, #12]
   14d80:	tst	r1, #8
   14d84:	bne	14dc0 <argp_parse@@Base+0x2ba0>
   14d88:	ldr	r8, [r5, #4]
   14d8c:	sub	r1, r8, #1
   14d90:	cmp	r1, #254	; 0xfe
   14d94:	bhi	14dc0 <argp_parse@@Base+0x2ba0>
   14d98:	str	r2, [sp, #4]
   14d9c:	str	r3, [sp]
   14da0:	bl	11168 <__ctype_b_loc@plt>
   14da4:	lsl	r1, r8, #1
   14da8:	ldr	r3, [sp]
   14dac:	ldr	r2, [sp, #4]
   14db0:	ldr	r0, [r0]
   14db4:	ldrh	r1, [r0, r1]
   14db8:	tst	r1, #16384	; 0x4000
   14dbc:	bne	14d18 <argp_parse@@Base+0x2af8>
   14dc0:	add	r5, r5, #24
   14dc4:	ldr	r1, [r5, #4]
   14dc8:	cmp	r1, #0
   14dcc:	bne	14d24 <argp_parse@@Base+0x2b04>
   14dd0:	ldr	r1, [r5]
   14dd4:	cmp	r1, #0
   14dd8:	bne	14d24 <argp_parse@@Base+0x2b04>
   14ddc:	ldr	r1, [r5, #16]
   14de0:	cmp	r1, #0
   14de4:	bne	14d24 <argp_parse@@Base+0x2b04>
   14de8:	ldr	r1, [r5, #20]
   14dec:	cmp	r1, #0
   14df0:	bne	14d24 <argp_parse@@Base+0x2b04>
   14df4:	add	r7, r7, #28
   14df8:	mov	r8, fp
   14dfc:	ldr	r0, [r5, #4]
   14e00:	cmp	r0, #0
   14e04:	bne	14d34 <argp_parse@@Base+0x2b14>
   14e08:	ldr	r1, [r5]
   14e0c:	cmp	r1, #0
   14e10:	bne	14d34 <argp_parse@@Base+0x2b14>
   14e14:	ldr	r1, [r5, #16]
   14e18:	cmp	r1, #0
   14e1c:	bne	14d34 <argp_parse@@Base+0x2b14>
   14e20:	ldr	r1, [r5, #20]
   14e24:	cmp	r1, #0
   14e28:	bne	14d34 <argp_parse@@Base+0x2b14>
   14e2c:	strb	r1, [sl]
   14e30:	cmp	r6, #0
   14e34:	addne	r3, r4, #12
   14e38:	addne	r6, r6, #16
   14e3c:	strne	r3, [sp, #28]
   14e40:	bne	14a3c <argp_parse@@Base+0x281c>
   14e44:	mov	r0, r4
   14e48:	add	sp, sp, #44	; 0x2c
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e50:	ldrb	r0, [r1]
   14e54:	cmp	r0, r2
   14e58:	moveq	r2, r8
   14e5c:	bne	14c18 <argp_parse@@Base+0x29f8>
   14e60:	b	14c34 <argp_parse@@Base+0x2a14>
   14e64:	andeq	r8, r1, lr, asr r5
   14e68:	andeq	r0, r0, r2, asr #3
   14e6c:	andeq	r8, r1, r0, asr #12
   14e70:	andeq	r8, r1, ip, asr #12
   14e74:	andeq	r8, r1, r0, asr r6
   14e78:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14e7c:	andeq	r8, r1, r3, lsl #13
   14e80:	andeq	r8, r1, r7, ror #10
   14e84:	andeq	r0, r0, sl, asr #7
   14e88:			; <UNDEFINED> instruction: 0x000186bc
   14e8c:	andeq	r8, r1, r8, lsl #13
   14e90:	ldrdeq	r0, [r0], -sl
   14e94:	andeq	r8, r1, r0, ror #12
   14e98:	push	{r4, r5, r6, lr}
   14e9c:	mov	r4, r0
   14ea0:	mov	r5, r1
   14ea4:	ldr	r0, [r0, #12]
   14ea8:	ldr	r1, [r1, #12]
   14eac:	cmp	r0, r1
   14eb0:	bne	14ee8 <argp_parse@@Base+0x2cc8>
   14eb4:	ldr	r0, [r5, #8]
   14eb8:	ldr	r3, [r4, #8]
   14ebc:	mvn	r2, r0
   14ec0:	lsr	r2, r2, #31
   14ec4:	cmp	r2, r3, lsr #31
   14ec8:	subne	r0, r3, r0
   14ecc:	subeq	r0, r0, r3
   14ed0:	cmp	r0, #0
   14ed4:	popne	{r4, r5, r6, pc}
   14ed8:	ldr	r0, [r5, #4]
   14edc:	ldr	r3, [r4, #4]
   14ee0:	sub	r0, r0, r3
   14ee4:	pop	{r4, r5, r6, pc}
   14ee8:	bl	14e98 <argp_parse@@Base+0x2c78>
   14eec:	cmp	r0, #0
   14ef0:	popne	{r4, r5, r6, pc}
   14ef4:	ldr	r0, [r5, #8]
   14ef8:	ldr	r3, [r4, #8]
   14efc:	mvn	r2, r0
   14f00:	lsr	r2, r2, #31
   14f04:	cmp	r2, r3, lsr #31
   14f08:	subne	r0, r3, r0
   14f0c:	subeq	r0, r0, r3
   14f10:	cmp	r0, #0
   14f14:	beq	14ed8 <argp_parse@@Base+0x2cb8>
   14f18:	pop	{r4, r5, r6, pc}
   14f1c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14f20:	mov	r6, r0
   14f24:	ldr	r0, [r0, #16]
   14f28:	mov	r5, r1
   14f2c:	cmp	r0, #0
   14f30:	movne	r3, r0
   14f34:	bne	14f44 <argp_parse@@Base+0x2d24>
   14f38:	ldr	r3, [r6, #12]
   14f3c:	b	14f54 <argp_parse@@Base+0x2d34>
   14f40:	mov	r3, r2
   14f44:	ldr	r2, [r3, #12]
   14f48:	cmp	r2, #0
   14f4c:	bne	14f40 <argp_parse@@Base+0x2d20>
   14f50:	ldr	r3, [r3, #8]
   14f54:	ldr	r1, [r5, #16]
   14f58:	cmp	r1, #0
   14f5c:	movne	r2, r1
   14f60:	bne	14f70 <argp_parse@@Base+0x2d50>
   14f64:	ldr	r4, [r5, #12]
   14f68:	b	14f80 <argp_parse@@Base+0x2d60>
   14f6c:	mov	r2, ip
   14f70:	ldr	ip, [r2, #12]
   14f74:	cmp	ip, #0
   14f78:	bne	14f6c <argp_parse@@Base+0x2d4c>
   14f7c:	ldr	r4, [r2, #8]
   14f80:	mvn	r2, r4
   14f84:	lsr	r2, r2, #31
   14f88:	cmp	r2, r3, lsr #31
   14f8c:	subne	r4, r3, r4
   14f90:	subeq	r4, r4, r3
   14f94:	cmp	r4, #0
   14f98:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   14f9c:	adds	r4, r1, #0
   14fa0:	movne	r4, #1
   14fa4:	cmp	r0, #0
   14fa8:	rsbeq	r4, r4, #0
   14fac:	rsbne	r4, r4, #1
   14fb0:	cmp	r4, #0
   14fb4:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   14fb8:	cmp	r0, #0
   14fbc:	beq	1502c <argp_parse@@Base+0x2e0c>
   14fc0:	ldr	r3, [r0, #20]
   14fc4:	ldr	r2, [r1, #20]
   14fc8:	cmp	r3, r2
   14fcc:	ble	14ffc <argp_parse@@Base+0x2ddc>
   14fd0:	ldr	r0, [r0, #12]
   14fd4:	ldr	r3, [r0, #20]
   14fd8:	cmp	r2, r3
   14fdc:	blt	14fd0 <argp_parse@@Base+0x2db0>
   14fe0:	bl	14e98 <argp_parse@@Base+0x2c78>
   14fe4:	cmp	r0, #0
   14fe8:	movne	r4, r0
   14fec:	moveq	r4, #1
   14ff0:	mov	r0, r4
   14ff4:	add	sp, sp, #8
   14ff8:	pop	{r4, r5, r6, r7, r8, pc}
   14ffc:	bge	15020 <argp_parse@@Base+0x2e00>
   15000:	ldr	r1, [r1, #12]
   15004:	ldr	r2, [r1, #20]
   15008:	cmp	r3, r2
   1500c:	blt	15000 <argp_parse@@Base+0x2de0>
   15010:	bl	14e98 <argp_parse@@Base+0x2c78>
   15014:	subs	r4, r0, #0
   15018:	mvneq	r4, #0
   1501c:	b	14ff0 <argp_parse@@Base+0x2dd0>
   15020:	bl	14e98 <argp_parse@@Base+0x2c78>
   15024:	subs	r4, r0, #0
   15028:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   1502c:	ldr	r4, [r5, #12]
   15030:	ldr	r3, [r6, #12]
   15034:	mvn	r2, r4
   15038:	lsr	r2, r2, #31
   1503c:	cmp	r2, r3, lsr #31
   15040:	subne	r4, r3, r4
   15044:	subeq	r4, r4, r3
   15048:	cmp	r4, #0
   1504c:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   15050:	mov	r0, r6
   15054:	bl	13848 <argp_parse@@Base+0x1628>
   15058:	mov	r7, r0
   1505c:	str	r0, [sp]
   15060:	mov	r0, r5
   15064:	bl	13848 <argp_parse@@Base+0x1628>
   15068:	ldr	r3, [r6]
   1506c:	adds	r7, r7, #0
   15070:	movne	r7, #1
   15074:	ldr	r3, [r3, #12]
   15078:	ands	r3, r7, r3, lsr #3
   1507c:	moveq	r7, r4
   15080:	str	r0, [sp, #4]
   15084:	beq	15098 <argp_parse@@Base+0x2e78>
   15088:	mov	r0, sp
   1508c:	bl	139b0 <argp_parse@@Base+0x1790>
   15090:	adds	r7, r0, #0
   15094:	movne	r7, #1
   15098:	ldr	r3, [r5]
   1509c:	ldr	r0, [r3, #12]
   150a0:	ands	r0, r0, #8
   150a4:	beq	150c8 <argp_parse@@Base+0x2ea8>
   150a8:	ldr	r3, [sp, #4]
   150ac:	cmp	r3, #0
   150b0:	moveq	r0, r4
   150b4:	beq	150c8 <argp_parse@@Base+0x2ea8>
   150b8:	add	r0, sp, #4
   150bc:	bl	139b0 <argp_parse@@Base+0x1790>
   150c0:	adds	r0, r0, #0
   150c4:	movne	r0, #1
   150c8:	subs	r4, r7, r0
   150cc:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   150d0:	ldr	r2, [r6, #20]
   150d4:	mov	r3, r4
   150d8:	ldr	r1, [pc, #224]	; 151c0 <argp_parse@@Base+0x2fa0>
   150dc:	ldr	r2, [r2, #24]
   150e0:	mov	r0, r6
   150e4:	bl	13884 <argp_parse@@Base+0x1664>
   150e8:	ldr	r2, [r5, #20]
   150ec:	mov	r3, r4
   150f0:	ldr	r1, [pc, #200]	; 151c0 <argp_parse@@Base+0x2fa0>
   150f4:	ldr	r2, [r2, #24]
   150f8:	uxtb	r8, r0
   150fc:	mov	r0, r5
   15100:	bl	13884 <argp_parse@@Base+0x1664>
   15104:	cmp	r8, #0
   15108:	uxtb	r5, r0
   1510c:	beq	15118 <argp_parse@@Base+0x2ef8>
   15110:	mov	r6, r8
   15114:	b	15128 <argp_parse@@Base+0x2f08>
   15118:	ldr	r3, [sp]
   1511c:	cmp	r3, #0
   15120:	ldrbne	r6, [r3]
   15124:	beq	15110 <argp_parse@@Base+0x2ef0>
   15128:	cmp	r5, #0
   1512c:	beq	15138 <argp_parse@@Base+0x2f18>
   15130:	mov	r7, r5
   15134:	b	15148 <argp_parse@@Base+0x2f28>
   15138:	ldr	r3, [sp, #4]
   1513c:	cmp	r3, #0
   15140:	ldrbne	r7, [r3]
   15144:	beq	15130 <argp_parse@@Base+0x2f10>
   15148:	bl	11138 <__ctype_tolower_loc@plt>
   1514c:	ldr	r3, [r0]
   15150:	ldr	r4, [r3, r6, lsl #2]
   15154:	ldr	r3, [r3, r7, lsl #2]
   15158:	subs	r4, r4, r3
   1515c:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   15160:	subs	r4, r7, r6
   15164:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   15168:	adds	r4, r5, #0
   1516c:	movne	r4, #1
   15170:	cmp	r8, #0
   15174:	rsbeq	r4, r4, #0
   15178:	rsbne	r4, r4, #1
   1517c:	cmp	r4, #0
   15180:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   15184:	cmp	r8, #0
   15188:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   1518c:	ldm	sp, {r0, r1}
   15190:	adds	r4, r1, #0
   15194:	movne	r4, #1
   15198:	cmp	r0, #0
   1519c:	rsbeq	r4, r4, #0
   151a0:	rsbne	r4, r4, #1
   151a4:	cmp	r4, #0
   151a8:	bne	14ff0 <argp_parse@@Base+0x2dd0>
   151ac:	cmp	r0, #0
   151b0:	beq	14ff0 <argp_parse@@Base+0x2dd0>
   151b4:	bl	110d8 <strcasecmp@plt>
   151b8:	mov	r4, r0
   151bc:	b	14ff0 <argp_parse@@Base+0x2dd0>
   151c0:	andeq	r3, r1, r4, ror #18

000151c4 <argp_failure@@Base>:
   151c4:	push	{r3}		; (str r3, [sp, #-4]!)
   151c8:	push	{r4, r5, r6, r7, r8, lr}
   151cc:	sub	sp, sp, #204	; 0xcc
   151d0:	subs	r5, r0, #0
   151d4:	mov	r7, r1
   151d8:	mov	r6, r2
   151dc:	ldr	r8, [sp, #228]	; 0xe4
   151e0:	beq	1520c <argp_failure@@Base+0x48>
   151e4:	ldr	r3, [r5, #16]
   151e8:	tst	r3, #2
   151ec:	bne	151fc <argp_failure@@Base+0x38>
   151f0:	ldr	r4, [r5, #44]	; 0x2c
   151f4:	cmp	r4, #0
   151f8:	bne	15230 <argp_failure@@Base+0x6c>
   151fc:	add	sp, sp, #204	; 0xcc
   15200:	pop	{r4, r5, r6, r7, r8, lr}
   15204:	add	sp, sp, #4
   15208:	bx	lr
   1520c:	ldr	r3, [pc, #244]	; 15308 <argp_failure@@Base+0x144>
   15210:	ldr	r4, [r3]
   15214:	cmp	r4, #0
   15218:	beq	151fc <argp_failure@@Base+0x38>
   1521c:	mov	r0, r4
   15220:	bl	11240 <flockfile@plt>
   15224:	ldr	r3, [pc, #224]	; 1530c <argp_failure@@Base+0x148>
   15228:	ldr	r0, [r3]
   1522c:	b	1523c <argp_failure@@Base+0x78>
   15230:	mov	r0, r4
   15234:	bl	11240 <flockfile@plt>
   15238:	ldr	r0, [r5, #40]	; 0x28
   1523c:	mov	r1, r4
   15240:	bl	1100c <fputs_unlocked@plt>
   15244:	cmp	r8, #0
   15248:	beq	1527c <argp_failure@@Base+0xb8>
   1524c:	add	r3, sp, #232	; 0xe8
   15250:	mov	r1, r4
   15254:	mov	r0, #58	; 0x3a
   15258:	str	r3, [sp]
   1525c:	bl	112f4 <putc_unlocked@plt>
   15260:	mov	r1, r4
   15264:	mov	r0, #32
   15268:	bl	112f4 <putc_unlocked@plt>
   1526c:	ldr	r2, [sp]
   15270:	mov	r1, r8
   15274:	mov	r0, r4
   15278:	bl	11228 <vfprintf@plt>
   1527c:	cmp	r6, #0
   15280:	beq	152d0 <argp_failure@@Base+0x10c>
   15284:	mov	r1, r4
   15288:	mov	r0, #58	; 0x3a
   1528c:	bl	112f4 <putc_unlocked@plt>
   15290:	mov	r1, r4
   15294:	mov	r0, #32
   15298:	bl	112f4 <putc_unlocked@plt>
   1529c:	mov	r2, #200	; 0xc8
   152a0:	mov	r1, sp
   152a4:	mov	r0, r6
   152a8:	bl	111c8 <strerror_r@plt>
   152ac:	cmp	r0, #0
   152b0:	bne	152c8 <argp_failure@@Base+0x104>
   152b4:	mov	r0, r6
   152b8:	bl	1112c <strerror@plt>
   152bc:	ldr	r3, [pc, #76]	; 15310 <argp_failure@@Base+0x14c>
   152c0:	cmp	r0, #0
   152c4:	moveq	r0, r3
   152c8:	mov	r1, r4
   152cc:	bl	1100c <fputs_unlocked@plt>
   152d0:	mov	r1, r4
   152d4:	mov	r0, #10
   152d8:	bl	112f4 <putc_unlocked@plt>
   152dc:	mov	r0, r4
   152e0:	bl	110e4 <funlockfile@plt>
   152e4:	cmp	r7, #0
   152e8:	beq	151fc <argp_failure@@Base+0x38>
   152ec:	cmp	r5, #0
   152f0:	beq	15300 <argp_failure@@Base+0x13c>
   152f4:	ldr	r3, [r5, #16]
   152f8:	tst	r3, #32
   152fc:	bne	151fc <argp_failure@@Base+0x38>
   15300:	mov	r0, r7
   15304:	bl	11180 <exit@plt>
   15308:			; <UNDEFINED> instruction: 0x000293b0
   1530c:	andeq	r9, r2, r8, lsr #7
   15310:	ldrdeq	r8, [r1], -r5
   15314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15318:	add	fp, sp, #32
   1531c:	sub	sp, sp, #116	; 0x74
   15320:	str	r3, [fp, #-104]	; 0xffffff98
   15324:	subs	r3, r2, #0
   15328:	str	r0, [fp, #-108]	; 0xffffff94
   1532c:	str	r1, [fp, #-96]	; 0xffffffa0
   15330:	str	r3, [fp, #-112]	; 0xffffff90
   15334:	beq	153b0 <argp_failure@@Base+0x1ec>
   15338:	ldr	r5, [pc, #3996]	; 162dc <argp_failure@@Base+0x1118>
   1533c:	mov	r0, r3
   15340:	bl	11240 <flockfile@plt>
   15344:	ldr	r9, [r5, #36]	; 0x24
   15348:	cmp	r9, #0
   1534c:	bne	15388 <argp_failure@@Base+0x1c4>
   15350:	ldr	r0, [pc, #3976]	; 162e0 <argp_failure@@Base+0x111c>
   15354:	bl	11108 <getenv@plt>
   15358:	mov	ip, r5
   1535c:	sub	lr, fp, #76	; 0x4c
   15360:	mov	r4, r0
   15364:	ldm	ip!, {r0, r1, r2, r3}
   15368:	cmp	r4, #0
   1536c:	movne	r5, #1
   15370:	stmia	lr!, {r0, r1, r2, r3}
   15374:	ldm	ip!, {r0, r1, r2, r3}
   15378:	stmia	lr!, {r0, r1, r2, r3}
   1537c:	ldm	ip, {r0, r1}
   15380:	stm	lr, {r0, r1}
   15384:	bne	15604 <argp_failure@@Base+0x440>
   15388:	ldr	r5, [pc, #3916]	; 162dc <argp_failure@@Base+0x1118>
   1538c:	mov	r3, #0
   15390:	mov	r1, r3
   15394:	ldr	r2, [r5, #32]
   15398:	ldr	r0, [fp, #-112]	; 0xffffff90
   1539c:	bl	16fcc <argp_error@@Base+0xbc4>
   153a0:	subs	r4, r0, #0
   153a4:	bne	15698 <argp_failure@@Base+0x4d4>
   153a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   153ac:	bl	110e4 <funlockfile@plt>
   153b0:	sub	sp, fp, #32
   153b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153b8:	mov	r3, r1
   153bc:	mov	r1, r3
   153c0:	str	r3, [fp, #-100]	; 0xffffff9c
   153c4:	ldrb	r0, [r1], #1
   153c8:	lsl	r2, r0, #1
   153cc:	ldrh	r2, [r6, r2]
   153d0:	tst	r2, #8192	; 0x2000
   153d4:	bne	153b8 <argp_failure@@Base+0x1f4>
   153d8:	ands	r2, r2, #1024	; 0x400
   153dc:	movne	r2, r3
   153e0:	bne	1545c <argp_failure@@Base+0x298>
   153e4:	cmp	r0, #0
   153e8:	beq	15654 <argp_failure@@Base+0x490>
   153ec:	str	r3, [sp]
   153f0:	mov	r1, r2
   153f4:	ldr	r3, [pc, #3816]	; 162e4 <argp_failure@@Base+0x1120>
   153f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   153fc:	bl	151c4 <argp_failure@@Base>
   15400:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15404:	ldr	r3, [pc, #3804]	; 162e8 <argp_failure@@Base+0x1124>
   15408:	mov	r0, #9
   1540c:	ldrb	r2, [r3, #14]
   15410:	cmp	r2, #0
   15414:	bne	1565c <argp_failure@@Base+0x498>
   15418:	ldrb	r1, [r3, #15]
   1541c:	cmp	r1, #32
   15420:	beq	1565c <argp_failure@@Base+0x498>
   15424:	sub	lr, fp, #36	; 0x24
   15428:	add	r1, lr, r1
   1542c:	ldr	r1, [r1, #-40]	; 0xffffffd8
   15430:	cmp	r1, ip
   15434:	blt	1565c <argp_failure@@Base+0x498>
   15438:	str	r3, [sp, #4]
   1543c:	ldr	r3, [pc, #3752]	; 162ec <argp_failure@@Base+0x1128>
   15440:	mov	r1, r2
   15444:	str	r3, [sp]
   15448:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1544c:	ldr	r3, [pc, #3740]	; 162f0 <argp_failure@@Base+0x112c>
   15450:	bl	151c4 <argp_failure@@Base>
   15454:	b	15388 <argp_failure@@Base+0x1c4>
   15458:	mov	r2, lr
   1545c:	mov	lr, r2
   15460:	ldrb	r1, [lr], #1
   15464:	cmp	r1, #95	; 0x5f
   15468:	cmpne	r1, #45	; 0x2d
   1546c:	lsl	ip, r1, #1
   15470:	moveq	r1, #1
   15474:	ldrh	ip, [r6, ip]
   15478:	movne	r1, #0
   1547c:	lsl	ip, ip, #28
   15480:	orrs	r1, r1, ip, lsr #31
   15484:	bne	15458 <argp_failure@@Base+0x294>
   15488:	sub	r8, r2, r3
   1548c:	mov	r4, r2
   15490:	ldrb	r1, [r2], #1
   15494:	lsl	ip, r1, #1
   15498:	ldrh	ip, [r6, ip]
   1549c:	tst	ip, #8192	; 0x2000
   154a0:	bne	1548c <argp_failure@@Base+0x2c8>
   154a4:	cmp	r1, #44	; 0x2c
   154a8:	cmpne	r1, #0
   154ac:	beq	1621c <argp_failure@@Base+0x1058>
   154b0:	cmp	r1, #61	; 0x3d
   154b4:	bne	154d4 <argp_failure@@Base+0x310>
   154b8:	mov	r4, r2
   154bc:	add	r2, r2, #1
   154c0:	ldrb	r3, [r4]
   154c4:	lsl	r3, r3, #1
   154c8:	ldrh	r3, [r6, r3]
   154cc:	tst	r3, #8192	; 0x2000
   154d0:	bne	154b8 <argp_failure@@Base+0x2f4>
   154d4:	ldrb	r3, [r4]
   154d8:	lsl	r3, r3, #1
   154dc:	ldrh	r3, [r6, r3]
   154e0:	tst	r3, #2048	; 0x800
   154e4:	moveq	sl, r9
   154e8:	moveq	r7, r9
   154ec:	beq	15568 <argp_failure@@Base+0x3a4>
   154f0:	mov	r0, r4
   154f4:	bl	11258 <atoi@plt>
   154f8:	mov	r3, r4
   154fc:	mov	r7, r0
   15500:	ldrb	r2, [r3]
   15504:	add	r1, r3, #1
   15508:	lsl	r2, r2, #1
   1550c:	ldrh	r2, [r6, r2]
   15510:	tst	r2, #2048	; 0x800
   15514:	bne	15620 <argp_failure@@Base+0x45c>
   15518:	mov	r4, r3
   1551c:	add	r3, r3, #1
   15520:	ldrb	r2, [r4]
   15524:	lsl	r2, r2, #1
   15528:	ldrh	r2, [r6, r2]
   1552c:	tst	r2, #8192	; 0x2000
   15530:	bne	15518 <argp_failure@@Base+0x354>
   15534:	mov	sl, r9
   15538:	b	15568 <argp_failure@@Base+0x3a4>
   1553c:	ldrb	r2, [r3, #1]
   15540:	cmp	r2, #111	; 0x6f
   15544:	bne	16224 <argp_failure@@Base+0x1060>
   15548:	ldrb	r2, [r3, #2]
   1554c:	cmp	r2, #45	; 0x2d
   15550:	bne	16224 <argp_failure@@Base+0x1060>
   15554:	sub	r8, r8, #3
   15558:	mov	r7, r9
   1555c:	mov	sl, r5
   15560:	add	r3, r3, #3
   15564:	str	r3, [fp, #-100]	; 0xffffff9c
   15568:	ldr	r6, [pc, #3448]	; 162e8 <argp_failure@@Base+0x1124>
   1556c:	mov	r3, #9
   15570:	str	r3, [fp, #-116]	; 0xffffff8c
   15574:	mov	r0, r6
   15578:	bl	11198 <strlen@plt>
   1557c:	cmp	r0, r8
   15580:	bne	1563c <argp_failure@@Base+0x478>
   15584:	mov	r2, r8
   15588:	mov	r1, r6
   1558c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15590:	bl	112ac <strncmp@plt>
   15594:	cmp	r0, #0
   15598:	bne	1563c <argp_failure@@Base+0x478>
   1559c:	cmp	sl, #0
   155a0:	beq	15628 <argp_failure@@Base+0x464>
   155a4:	ldrb	r2, [r6, #14]
   155a8:	cmp	r2, #0
   155ac:	bne	15628 <argp_failure@@Base+0x464>
   155b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155b4:	str	r8, [sp]
   155b8:	str	r3, [sp, #4]
   155bc:	mov	r1, r2
   155c0:	ldr	r3, [pc, #3372]	; 162f4 <argp_failure@@Base+0x1130>
   155c4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   155c8:	bl	151c4 <argp_failure@@Base>
   155cc:	ldr	r3, [pc, #3364]	; 162f8 <argp_failure@@Base+0x1134>
   155d0:	cmp	r6, r3
   155d4:	bne	155f8 <argp_failure@@Base+0x434>
   155d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155dc:	mov	r2, #0
   155e0:	str	r3, [sp, #4]
   155e4:	str	r8, [sp]
   155e8:	ldr	r3, [pc, #3340]	; 162fc <argp_failure@@Base+0x1138>
   155ec:	mov	r1, r2
   155f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   155f4:	bl	151c4 <argp_failure@@Base>
   155f8:	ldrb	r3, [r4]
   155fc:	cmp	r3, #44	; 0x2c
   15600:	addeq	r4, r4, #1
   15604:	ldrb	r3, [r4]
   15608:	cmp	r3, #0
   1560c:	beq	15400 <argp_failure@@Base+0x23c>
   15610:	bl	11168 <__ctype_b_loc@plt>
   15614:	mov	r3, r4
   15618:	ldr	r6, [r0]
   1561c:	b	153bc <argp_failure@@Base+0x1f8>
   15620:	mov	r3, r1
   15624:	b	15500 <argp_failure@@Base+0x33c>
   15628:	ldrb	r3, [r6, #15]
   1562c:	sub	r2, fp, #36	; 0x24
   15630:	add	r3, r2, r3
   15634:	str	r7, [r3, #-40]	; 0xffffffd8
   15638:	b	155cc <argp_failure@@Base+0x408>
   1563c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15640:	add	r6, r6, #16
   15644:	subs	r3, r3, #1
   15648:	str	r3, [fp, #-116]	; 0xffffff8c
   1564c:	bne	15574 <argp_failure@@Base+0x3b0>
   15650:	b	155cc <argp_failure@@Base+0x408>
   15654:	mov	r4, r3
   15658:	b	15604 <argp_failure@@Base+0x440>
   1565c:	subs	r0, r0, #1
   15660:	add	r3, r3, #16
   15664:	bne	1540c <argp_failure@@Base+0x248>
   15668:	sub	lr, fp, #76	; 0x4c
   1566c:	ldr	r4, [pc, #3176]	; 162dc <argp_failure@@Base+0x1118>
   15670:	ldm	lr!, {r0, r1, r2, r3}
   15674:	mov	ip, r4
   15678:	stmia	ip!, {r0, r1, r2, r3}
   1567c:	ldm	lr!, {r0, r1, r2, r3}
   15680:	stmia	ip!, {r0, r1, r2, r3}
   15684:	mov	r3, #1
   15688:	ldm	lr, {r0, r1}
   1568c:	stm	ip, {r0, r1}
   15690:	str	r3, [r4, #36]	; 0x24
   15694:	b	15388 <argp_failure@@Base+0x1c4>
   15698:	ldr	r3, [fp, #-104]	; 0xffffff98
   1569c:	ands	r3, r3, #11
   156a0:	moveq	sl, r3
   156a4:	beq	15704 <argp_failure@@Base+0x540>
   156a8:	mov	r1, #0
   156ac:	ldr	r0, [fp, #-108]	; 0xffffff94
   156b0:	bl	14890 <argp_parse@@Base+0x2670>
   156b4:	ldr	r1, [pc, #3140]	; 16300 <argp_failure@@Base+0x113c>
   156b8:	mov	sl, r0
   156bc:	bl	1481c <argp_parse@@Base+0x25fc>
   156c0:	ldr	r1, [pc, #3132]	; 16304 <argp_failure@@Base+0x1140>
   156c4:	mov	r0, sl
   156c8:	bl	1481c <argp_parse@@Base+0x25fc>
   156cc:	ldr	r1, [sl, #4]
   156d0:	cmp	r1, #0
   156d4:	beq	15704 <argp_failure@@Base+0x540>
   156d8:	ldr	r0, [sl]
   156dc:	mov	r3, #0
   156e0:	mov	r2, r0
   156e4:	str	r3, [r2, #24]
   156e8:	add	r3, r3, #1
   156ec:	cmp	r1, r3
   156f0:	add	r2, r2, #28
   156f4:	bne	156e4 <argp_failure@@Base+0x520>
   156f8:	ldr	r3, [pc, #3080]	; 16308 <argp_failure@@Base+0x1144>
   156fc:	mov	r2, #28
   15700:	bl	11264 <qsort@plt>
   15704:	ldr	r3, [fp, #-104]	; 0xffffff98
   15708:	ands	r3, r3, #3
   1570c:	moveq	r5, r3
   15710:	beq	158b0 <argp_failure@@Base+0x6ec>
   15714:	ldr	r0, [fp, #-108]	; 0xffffff94
   15718:	bl	13a68 <argp_parse@@Base+0x1848>
   1571c:	mov	r1, #0
   15720:	ldr	r6, [pc, #3044]	; 1630c <argp_failure@@Base+0x1148>
   15724:	mov	r9, #1
   15728:	add	r3, r0, #14
   1572c:	bic	r3, r3, #7
   15730:	sub	sp, sp, r3
   15734:	add	r7, sp, #8
   15738:	mov	r2, r0
   1573c:	mov	r0, r7
   15740:	bl	111e0 <memset@plt>
   15744:	ldr	r2, [r4, #24]
   15748:	ldr	r3, [r4, #28]
   1574c:	ldr	r8, [r5, #28]
   15750:	sub	r3, r3, r2
   15754:	ldr	r2, [r4, #16]
   15758:	cmp	r3, r2
   1575c:	bls	15768 <argp_failure@@Base+0x5a4>
   15760:	mov	r0, r4
   15764:	bl	17044 <argp_error@@Base+0xc3c>
   15768:	ldr	r3, [r4, #12]
   1576c:	cmp	r9, #0
   15770:	str	r8, [r4, #12]
   15774:	ldrne	r2, [pc, #2964]	; 16310 <argp_failure@@Base+0x114c>
   15778:	ldreq	r2, [pc, #2964]	; 16314 <argp_failure@@Base+0x1150>
   1577c:	str	r3, [fp, #-100]	; 0xffffff9c
   15780:	ldr	r1, [pc, #2960]	; 16318 <argp_failure@@Base+0x1154>
   15784:	ldr	r3, [fp, #4]
   15788:	mov	r0, r4
   1578c:	str	r7, [fp, #-76]	; 0xffffffb4
   15790:	bl	17578 <argp_error@@Base+0x1170>
   15794:	ldr	r2, [r4, #24]
   15798:	ldr	r3, [r4, #28]
   1579c:	ldr	r8, [r5, #28]
   157a0:	sub	r3, r3, r2
   157a4:	ldr	r2, [r4, #16]
   157a8:	cmp	r3, r2
   157ac:	bls	157b8 <argp_failure@@Base+0x5f4>
   157b0:	mov	r0, r4
   157b4:	bl	17044 <argp_error@@Base+0xc3c>
   157b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   157bc:	ldr	r9, [r4, #4]
   157c0:	tst	r3, #2
   157c4:	str	r8, [r4, #4]
   157c8:	beq	15b2c <argp_failure@@Base+0x968>
   157cc:	ldr	r3, [sl, #4]
   157d0:	cmp	r3, #0
   157d4:	beq	15814 <argp_failure@@Base+0x650>
   157d8:	ldr	r3, [r4, #28]
   157dc:	ldr	r2, [r4, #32]
   157e0:	add	r3, r3, #12
   157e4:	cmp	r2, r3
   157e8:	bcc	15b14 <argp_failure@@Base+0x950>
   157ec:	ldr	r2, [r4, #28]
   157f0:	ldr	r3, [r6]
   157f4:	str	r3, [r2]
   157f8:	ldr	r3, [r6, #4]
   157fc:	str	r3, [r2, #4]
   15800:	ldr	r3, [r6, #8]
   15804:	str	r3, [r2, #8]
   15808:	ldr	r3, [r4, #28]
   1580c:	add	r3, r3, #12
   15810:	str	r3, [r4, #28]
   15814:	mov	r3, #1
   15818:	sub	r2, fp, #76	; 0x4c
   1581c:	str	r4, [sp]
   15820:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15824:	ldr	r0, [fp, #-108]	; 0xffffff94
   15828:	bl	1447c <argp_parse@@Base+0x225c>
   1582c:	ldr	r2, [r4, #24]
   15830:	ldr	r3, [r4, #28]
   15834:	sub	r3, r3, r2
   15838:	ldr	r2, [r4, #16]
   1583c:	cmp	r3, r2
   15840:	mov	r8, r0
   15844:	bls	15850 <argp_failure@@Base+0x68c>
   15848:	mov	r0, r4
   1584c:	bl	17044 <argp_error@@Base+0xc3c>
   15850:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15854:	ldr	r2, [r4, #24]
   15858:	str	r3, [r4, #12]
   1585c:	ldr	r3, [r4, #28]
   15860:	sub	r3, r3, r2
   15864:	ldr	r2, [r4, #16]
   15868:	cmp	r3, r2
   1586c:	bls	15878 <argp_failure@@Base+0x6b4>
   15870:	mov	r0, r4
   15874:	bl	17044 <argp_error@@Base+0xc3c>
   15878:	ldr	r2, [r4, #28]
   1587c:	ldr	r3, [r4, #32]
   15880:	str	r9, [r4, #4]
   15884:	cmp	r2, r3
   15888:	bcs	15b48 <argp_failure@@Base+0x984>
   1588c:	ldr	r3, [r4, #28]
   15890:	add	r2, r3, #1
   15894:	str	r2, [r4, #28]
   15898:	mov	r2, #10
   1589c:	strb	r2, [r3]
   158a0:	mov	r9, #0
   158a4:	cmp	r8, r9
   158a8:	bne	15744 <argp_failure@@Base+0x580>
   158ac:	mov	r5, #1
   158b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   158b4:	tst	r3, #16
   158b8:	beq	158e0 <argp_failure@@Base+0x71c>
   158bc:	mov	r3, #1
   158c0:	str	r3, [sp]
   158c4:	mov	r3, #0
   158c8:	str	r4, [sp, #4]
   158cc:	mov	r2, r3
   158d0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   158d4:	ldr	r0, [fp, #-108]	; 0xffffff94
   158d8:	bl	13ee4 <argp_parse@@Base+0x1cc4>
   158dc:	orr	r5, r5, r0
   158e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   158e4:	tst	r3, #4
   158e8:	beq	15904 <argp_failure@@Base+0x740>
   158ec:	ldr	r3, [fp, #4]
   158f0:	ldr	r1, [pc, #2596]	; 1631c <argp_failure@@Base+0x1158>
   158f4:	mov	r2, r3
   158f8:	mov	r0, r4
   158fc:	bl	17578 <argp_error@@Base+0x1170>
   15900:	mov	r5, #1
   15904:	ldr	r3, [fp, #-104]	; 0xffffff98
   15908:	tst	r3, #8
   1590c:	beq	15a64 <argp_failure@@Base+0x8a0>
   15910:	ldr	r3, [sl, #4]
   15914:	cmp	r3, #0
   15918:	beq	15a64 <argp_failure@@Base+0x8a0>
   1591c:	cmp	r5, #0
   15920:	beq	15948 <argp_failure@@Base+0x784>
   15924:	ldr	r2, [r4, #28]
   15928:	ldr	r3, [r4, #32]
   1592c:	cmp	r2, r3
   15930:	bcs	15b60 <argp_failure@@Base+0x99c>
   15934:	ldr	r3, [r4, #28]
   15938:	add	r2, r3, #1
   1593c:	str	r2, [r4, #28]
   15940:	mov	r2, #10
   15944:	strb	r2, [r3]
   15948:	mov	r3, #0
   1594c:	str	r3, [fp, #-88]	; 0xffffffa8
   15950:	str	r3, [fp, #-84]	; 0xffffffac
   15954:	str	r3, [fp, #-80]	; 0xffffffb0
   15958:	ldr	r3, [sl]
   1595c:	str	r3, [fp, #-100]	; 0xffffff9c
   15960:	ldr	r3, [sl, #4]
   15964:	str	r3, [fp, #-116]	; 0xffffff8c
   15968:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1596c:	cmp	r3, #0
   15970:	bne	15b78 <argp_failure@@Base+0x9b4>
   15974:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15978:	cmp	r3, #0
   1597c:	beq	15a60 <argp_failure@@Base+0x89c>
   15980:	ldr	r3, [pc, #2388]	; 162dc <argp_failure@@Base+0x1118>
   15984:	ldr	r3, [r3, #4]
   15988:	cmp	r3, #0
   1598c:	beq	15a60 <argp_failure@@Base+0x89c>
   15990:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15994:	ldr	r1, [pc, #2436]	; 16320 <argp_failure@@Base+0x115c>
   15998:	cmp	r3, #0
   1599c:	ldr	r0, [pc, #2432]	; 16324 <argp_failure@@Base+0x1160>
   159a0:	ldrne	r2, [r3]
   159a4:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   159a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   159ac:	bl	13b48 <argp_parse@@Base+0x1928>
   159b0:	subs	r5, r0, #0
   159b4:	beq	15a60 <argp_failure@@Base+0x89c>
   159b8:	ldrb	r3, [r5]
   159bc:	cmp	r3, #0
   159c0:	beq	15a4c <argp_failure@@Base+0x888>
   159c4:	ldr	r2, [r4, #28]
   159c8:	ldr	r3, [r4, #32]
   159cc:	cmp	r2, r3
   159d0:	bcs	161bc <argp_failure@@Base+0xff8>
   159d4:	ldr	r3, [r4, #28]
   159d8:	add	r2, r3, #1
   159dc:	str	r2, [r4, #28]
   159e0:	mov	r2, #10
   159e4:	strb	r2, [r3]
   159e8:	mov	r0, r5
   159ec:	bl	11198 <strlen@plt>
   159f0:	subs	r6, r0, #0
   159f4:	beq	15a28 <argp_failure@@Base+0x864>
   159f8:	ldr	r3, [r4, #28]
   159fc:	ldr	r2, [r4, #32]
   15a00:	add	r3, r3, r6
   15a04:	cmp	r2, r3
   15a08:	bcc	161d4 <argp_failure@@Base+0x1010>
   15a0c:	mov	r2, r6
   15a10:	mov	r1, r5
   15a14:	ldr	r0, [r4, #28]
   15a18:	bl	11090 <memcpy@plt>
   15a1c:	ldr	r3, [r4, #28]
   15a20:	add	r6, r3, r6
   15a24:	str	r6, [r4, #28]
   15a28:	ldr	r2, [r4, #28]
   15a2c:	ldr	r3, [r4, #32]
   15a30:	cmp	r2, r3
   15a34:	bcs	161ec <argp_failure@@Base+0x1028>
   15a38:	ldr	r3, [r4, #28]
   15a3c:	add	r2, r3, #1
   15a40:	str	r2, [r4, #28]
   15a44:	mov	r2, #10
   15a48:	strb	r2, [r3]
   15a4c:	ldr	r3, [pc, #2256]	; 16324 <argp_failure@@Base+0x1160>
   15a50:	cmp	r5, r3
   15a54:	beq	15a60 <argp_failure@@Base+0x89c>
   15a58:	mov	r0, r5
   15a5c:	bl	12cbc <argp_parse@@Base+0xa9c>
   15a60:	mov	r5, #1
   15a64:	ldr	r3, [fp, #-104]	; 0xffffff98
   15a68:	tst	r3, #32
   15a6c:	beq	15a94 <argp_failure@@Base+0x8d0>
   15a70:	mov	r3, #0
   15a74:	str	r3, [sp]
   15a78:	str	r4, [sp, #4]
   15a7c:	mov	r3, r5
   15a80:	mov	r2, #1
   15a84:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15a88:	ldr	r0, [fp, #-108]	; 0xffffff94
   15a8c:	bl	13ee4 <argp_parse@@Base+0x1cc4>
   15a90:	orr	r5, r5, r0
   15a94:	ldr	r3, [fp, #-104]	; 0xffffff98
   15a98:	tst	r3, #64	; 0x40
   15a9c:	beq	15af0 <argp_failure@@Base+0x92c>
   15aa0:	ldr	r3, [pc, #2176]	; 16328 <argp_failure@@Base+0x1164>
   15aa4:	mov	r6, r3
   15aa8:	ldr	r2, [r3]
   15aac:	cmp	r2, #0
   15ab0:	beq	15af0 <argp_failure@@Base+0x92c>
   15ab4:	cmp	r5, #0
   15ab8:	beq	15ae0 <argp_failure@@Base+0x91c>
   15abc:	ldr	r2, [r4, #28]
   15ac0:	ldr	r3, [r4, #32]
   15ac4:	cmp	r2, r3
   15ac8:	bcs	16204 <argp_failure@@Base+0x1040>
   15acc:	ldr	r3, [r4, #28]
   15ad0:	add	r2, r3, #1
   15ad4:	str	r2, [r4, #28]
   15ad8:	mov	r2, #10
   15adc:	strb	r2, [r3]
   15ae0:	ldr	r2, [r6]
   15ae4:	ldr	r1, [pc, #2112]	; 1632c <argp_failure@@Base+0x1168>
   15ae8:	mov	r0, r4
   15aec:	bl	17578 <argp_error@@Base+0x1170>
   15af0:	ldr	r0, [fp, #-112]	; 0xffffff90
   15af4:	bl	110e4 <funlockfile@plt>
   15af8:	cmp	sl, #0
   15afc:	beq	15b08 <argp_failure@@Base+0x944>
   15b00:	mov	r0, sl
   15b04:	bl	13a1c <argp_parse@@Base+0x17fc>
   15b08:	mov	r0, r4
   15b0c:	bl	17454 <argp_error@@Base+0x104c>
   15b10:	b	153b0 <argp_failure@@Base+0x1ec>
   15b14:	mov	r1, #12
   15b18:	mov	r0, r4
   15b1c:	bl	17494 <argp_error@@Base+0x108c>
   15b20:	cmp	r0, #0
   15b24:	bne	157ec <argp_failure@@Base+0x628>
   15b28:	b	15814 <argp_failure@@Base+0x650>
   15b2c:	mov	r1, r4
   15b30:	mov	r0, sl
   15b34:	bl	14690 <argp_parse@@Base+0x2470>
   15b38:	ldr	r3, [fp, #-104]	; 0xffffff98
   15b3c:	orr	r3, r3, #2
   15b40:	str	r3, [fp, #-104]	; 0xffffff98
   15b44:	b	15814 <argp_failure@@Base+0x650>
   15b48:	mov	r1, #1
   15b4c:	mov	r0, r4
   15b50:	bl	17494 <argp_error@@Base+0x108c>
   15b54:	cmp	r0, #0
   15b58:	bne	1588c <argp_failure@@Base+0x6c8>
   15b5c:	b	158a0 <argp_failure@@Base+0x6dc>
   15b60:	mov	r1, #1
   15b64:	mov	r0, r4
   15b68:	bl	17494 <argp_error@@Base+0x108c>
   15b6c:	cmp	r0, #0
   15b70:	bne	15934 <argp_failure@@Base+0x770>
   15b74:	b	15948 <argp_failure@@Base+0x784>
   15b78:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b7c:	ldr	r2, [r4, #24]
   15b80:	ldr	r5, [r3]
   15b84:	ldr	r9, [r3, #8]
   15b88:	ldr	r3, [r4, #28]
   15b8c:	sub	r3, r3, r2
   15b90:	ldr	r2, [r4, #16]
   15b94:	cmp	r3, r2
   15b98:	bls	15ba4 <argp_failure@@Base+0x9e0>
   15b9c:	mov	r0, r4
   15ba0:	bl	17044 <argp_error@@Base+0xc3c>
   15ba4:	ldr	r2, [r4, #12]
   15ba8:	ldr	r3, [r4, #4]
   15bac:	str	r2, [fp, #-128]	; 0xffffff80
   15bb0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15bb4:	str	r3, [fp, #-124]	; 0xffffff84
   15bb8:	mov	r3, #0
   15bbc:	str	r3, [r4, #4]
   15bc0:	str	r2, [fp, #-76]	; 0xffffffb4
   15bc4:	sub	r2, fp, #88	; 0x58
   15bc8:	str	r2, [fp, #-68]	; 0xffffffbc
   15bcc:	mov	r2, #1
   15bd0:	str	r2, [fp, #-64]	; 0xffffffc0
   15bd4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15bd8:	str	r4, [fp, #-72]	; 0xffffffb8
   15bdc:	str	r2, [fp, #-60]	; 0xffffffc4
   15be0:	ldr	r2, [r5, #12]
   15be4:	ands	r2, r2, #8
   15be8:	str	r2, [fp, #-120]	; 0xffffff88
   15bec:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   15bf0:	ldreq	r2, [r3, #4]
   15bf4:	addeq	r3, r5, #24
   15bf8:	beq	15c24 <argp_failure@@Base+0xa60>
   15bfc:	str	r3, [fp, #-120]	; 0xffffff88
   15c00:	b	15c2c <argp_failure@@Base+0xa68>
   15c04:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15c08:	cmp	r1, #0
   15c0c:	beq	15c1c <argp_failure@@Base+0xa58>
   15c10:	ldr	r1, [r3, #-12]
   15c14:	tst	r1, #2
   15c18:	beq	15db4 <argp_failure@@Base+0xbf0>
   15c1c:	sub	r2, r2, #1
   15c20:	add	r3, r3, #24
   15c24:	cmp	r2, #0
   15c28:	bne	15c04 <argp_failure@@Base+0xa40>
   15c2c:	ldr	r3, [pc, #1704]	; 162dc <argp_failure@@Base+0x1118>
   15c30:	ldr	r2, [r4, #24]
   15c34:	ldr	r6, [r3, #8]
   15c38:	ldr	r3, [r4, #28]
   15c3c:	sub	r3, r3, r2
   15c40:	ldr	r2, [r4, #16]
   15c44:	cmp	r3, r2
   15c48:	bls	15c54 <argp_failure@@Base+0xa90>
   15c4c:	mov	r0, r4
   15c50:	bl	17044 <argp_error@@Base+0xc3c>
   15c54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c58:	str	r6, [r4, #12]
   15c5c:	ldr	r7, [pc, #1656]	; 162dc <argp_failure@@Base+0x1118>
   15c60:	ldr	r8, [r3, #4]
   15c64:	mov	r6, r5
   15c68:	cmp	r8, #0
   15c6c:	bne	15dbc <argp_failure@@Base+0xbf8>
   15c70:	ldr	r3, [r5, #12]
   15c74:	ldr	r1, [pc, #1632]	; 162dc <argp_failure@@Base+0x1118>
   15c78:	tst	r3, #8
   15c7c:	ldr	r2, [r4, #24]
   15c80:	ldr	r3, [r4, #28]
   15c84:	beq	15ee8 <argp_failure@@Base+0xd24>
   15c88:	sub	r3, r3, r2
   15c8c:	ldr	r2, [r4, #16]
   15c90:	ldr	r6, [r1, #16]
   15c94:	cmp	r3, r2
   15c98:	bls	15ca4 <argp_failure@@Base+0xae0>
   15c9c:	mov	r0, r4
   15ca0:	bl	17044 <argp_error@@Base+0xc3c>
   15ca4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ca8:	str	r6, [r4, #12]
   15cac:	add	r6, r5, #24
   15cb0:	ldr	r7, [r3, #4]
   15cb4:	cmp	r7, #0
   15cb8:	bne	15e58 <argp_failure@@Base+0xc94>
   15cbc:	ldr	r2, [r4, #24]
   15cc0:	ldr	r3, [r4, #28]
   15cc4:	sub	r3, r3, r2
   15cc8:	ldr	r2, [r4, #16]
   15ccc:	cmp	r3, r2
   15cd0:	bls	15cdc <argp_failure@@Base+0xb18>
   15cd4:	mov	r0, r4
   15cd8:	bl	17044 <argp_error@@Base+0xc3c>
   15cdc:	mov	r3, #0
   15ce0:	str	r3, [r4, #4]
   15ce4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ce8:	cmp	r3, #0
   15cec:	beq	15f88 <argp_failure@@Base+0xdc4>
   15cf0:	ldr	r3, [r5, #12]
   15cf4:	tst	r3, #8
   15cf8:	bne	15d24 <argp_failure@@Base+0xb60>
   15cfc:	ldr	r6, [r5, #4]
   15d00:	sub	r3, r6, #1
   15d04:	cmp	r3, #254	; 0xfe
   15d08:	bhi	15d24 <argp_failure@@Base+0xb60>
   15d0c:	bl	11168 <__ctype_b_loc@plt>
   15d10:	lsl	r6, r6, #1
   15d14:	ldr	r3, [r0]
   15d18:	ldrh	r3, [r3, r6]
   15d1c:	tst	r3, #16384	; 0x4000
   15d20:	bne	15d4c <argp_failure@@Base+0xb88>
   15d24:	ldr	r3, [r5]
   15d28:	cmp	r3, #0
   15d2c:	bne	15d4c <argp_failure@@Base+0xb88>
   15d30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d34:	sub	r2, fp, #76	; 0x4c
   15d38:	ldr	r0, [r5, #16]
   15d3c:	ldr	r1, [r3, #20]
   15d40:	bl	13b8c <argp_parse@@Base+0x196c>
   15d44:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d48:	str	r3, [fp, #-88]	; 0xffffffa8
   15d4c:	ldr	r2, [r4, #24]
   15d50:	ldr	r3, [r4, #28]
   15d54:	sub	r3, r3, r2
   15d58:	ldr	r2, [r4, #16]
   15d5c:	cmp	r3, r2
   15d60:	bls	15d6c <argp_failure@@Base+0xba8>
   15d64:	mov	r0, r4
   15d68:	bl	17044 <argp_error@@Base+0xc3c>
   15d6c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15d70:	ldr	r2, [r4, #24]
   15d74:	str	r3, [r4, #4]
   15d78:	ldr	r3, [r4, #28]
   15d7c:	sub	r3, r3, r2
   15d80:	ldr	r2, [r4, #16]
   15d84:	cmp	r3, r2
   15d88:	bls	15d94 <argp_failure@@Base+0xbd0>
   15d8c:	mov	r0, r4
   15d90:	bl	17044 <argp_error@@Base+0xc3c>
   15d94:	ldr	r3, [fp, #-128]	; 0xffffff80
   15d98:	str	r3, [r4, #12]
   15d9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15da0:	add	r3, r3, #28
   15da4:	str	r3, [fp, #-100]	; 0xffffff9c
   15da8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15dac:	sub	r3, r3, #1
   15db0:	b	15964 <argp_failure@@Base+0x7a0>
   15db4:	mov	r3, #1
   15db8:	b	15bfc <argp_failure@@Base+0xa38>
   15dbc:	ldr	r2, [r6, #12]
   15dc0:	tst	r2, #8
   15dc4:	str	r2, [fp, #-136]	; 0xffffff78
   15dc8:	bne	15e00 <argp_failure@@Base+0xc3c>
   15dcc:	ldr	r3, [r6, #4]
   15dd0:	sub	r1, r3, #1
   15dd4:	cmp	r1, #254	; 0xfe
   15dd8:	str	r3, [fp, #-132]	; 0xffffff7c
   15ddc:	bhi	15e00 <argp_failure@@Base+0xc3c>
   15de0:	bl	11168 <__ctype_b_loc@plt>
   15de4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15de8:	ldr	r2, [fp, #-136]	; 0xffffff78
   15dec:	lsl	r1, r3, #1
   15df0:	ldr	r0, [r0]
   15df4:	ldrh	r1, [r0, r1]
   15df8:	tst	r1, #16384	; 0x4000
   15dfc:	bne	16230 <argp_failure@@Base+0x106c>
   15e00:	add	r6, r6, #24
   15e04:	sub	r8, r8, #1
   15e08:	b	15c68 <argp_failure@@Base+0xaa4>
   15e0c:	mov	r1, #1
   15e10:	mov	r0, r4
   15e14:	bl	17494 <argp_error@@Base+0x108c>
   15e18:	cmp	r0, #0
   15e1c:	bne	16260 <argp_failure@@Base+0x109c>
   15e20:	b	16274 <argp_failure@@Base+0x10b0>
   15e24:	mov	r1, #1
   15e28:	mov	r0, r4
   15e2c:	str	r2, [fp, #-132]	; 0xffffff7c
   15e30:	bl	17494 <argp_error@@Base+0x108c>
   15e34:	ldr	r2, [fp, #-132]	; 0xffffff7c
   15e38:	cmp	r0, #0
   15e3c:	bne	16288 <argp_failure@@Base+0x10c4>
   15e40:	b	16298 <argp_failure@@Base+0x10d4>
   15e44:	ldr	r3, [r5, #8]
   15e48:	cmp	r3, #0
   15e4c:	movne	r3, #1
   15e50:	strne	r3, [fp, #-80]	; 0xffffffb0
   15e54:	b	162d4 <argp_failure@@Base+0x1110>
   15e58:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15e5c:	cmp	r3, #0
   15e60:	beq	15ec4 <argp_failure@@Base+0xd00>
   15e64:	ldr	r3, [r6, #-12]
   15e68:	tst	r3, #2
   15e6c:	bne	15ec4 <argp_failure@@Base+0xd00>
   15e70:	ldr	r3, [pc, #1124]	; 162dc <argp_failure@@Base+0x1118>
   15e74:	sub	r1, fp, #76	; 0x4c
   15e78:	ldr	r0, [r3, #16]
   15e7c:	bl	13d64 <argp_parse@@Base+0x1b44>
   15e80:	ldr	r8, [r6, #-24]	; 0xffffffe8
   15e84:	mov	r0, r8
   15e88:	bl	11198 <strlen@plt>
   15e8c:	subs	r9, r0, #0
   15e90:	beq	15ec4 <argp_failure@@Base+0xd00>
   15e94:	ldr	r3, [r4, #28]
   15e98:	ldr	r2, [r4, #32]
   15e9c:	add	r3, r3, r9
   15ea0:	cmp	r2, r3
   15ea4:	bcc	15ed0 <argp_failure@@Base+0xd0c>
   15ea8:	mov	r2, r9
   15eac:	mov	r1, r8
   15eb0:	ldr	r0, [r4, #28]
   15eb4:	bl	11090 <memcpy@plt>
   15eb8:	ldr	r3, [r4, #28]
   15ebc:	add	r9, r3, r9
   15ec0:	str	r9, [r4, #28]
   15ec4:	sub	r7, r7, #1
   15ec8:	add	r6, r6, #24
   15ecc:	b	15cb4 <argp_failure@@Base+0xaf0>
   15ed0:	mov	r1, r9
   15ed4:	mov	r0, r4
   15ed8:	bl	17494 <argp_error@@Base+0x108c>
   15edc:	cmp	r0, #0
   15ee0:	bne	15ea8 <argp_failure@@Base+0xce4>
   15ee4:	b	15ec4 <argp_failure@@Base+0xd00>
   15ee8:	sub	r3, r3, r2
   15eec:	ldr	r2, [r4, #16]
   15ef0:	ldr	r6, [r1, #12]
   15ef4:	cmp	r3, r2
   15ef8:	bls	15f04 <argp_failure@@Base+0xd40>
   15efc:	mov	r0, r4
   15f00:	bl	17044 <argp_error@@Base+0xc3c>
   15f04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15f08:	str	r6, [r4, #12]
   15f0c:	ldr	r7, [pc, #968]	; 162dc <argp_failure@@Base+0x1118>
   15f10:	ldr	r6, [r3, #4]
   15f14:	ldr	r8, [pc, #1044]	; 16330 <argp_failure@@Base+0x116c>
   15f18:	add	r9, r5, #24
   15f1c:	cmp	r6, #0
   15f20:	beq	15cbc <argp_failure@@Base+0xaf8>
   15f24:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15f28:	cmp	r3, #0
   15f2c:	beq	15f7c <argp_failure@@Base+0xdb8>
   15f30:	ldr	r3, [r9, #-12]
   15f34:	tst	r3, #2
   15f38:	bne	15f7c <argp_failure@@Base+0xdb8>
   15f3c:	sub	r1, fp, #76	; 0x4c
   15f40:	ldr	r0, [r7, #12]
   15f44:	bl	13d64 <argp_parse@@Base+0x1b44>
   15f48:	ldr	r2, [r9, #-24]	; 0xffffffe8
   15f4c:	mov	r1, r8
   15f50:	mov	r0, r4
   15f54:	bl	17578 <argp_error@@Base+0x1170>
   15f58:	ldr	r2, [r5, #8]
   15f5c:	cmp	r2, #0
   15f60:	beq	15f7c <argp_failure@@Base+0xdb8>
   15f64:	ldr	r3, [r5, #12]
   15f68:	mov	r0, r4
   15f6c:	tst	r3, #1
   15f70:	ldrne	r1, [pc, #956]	; 16334 <argp_failure@@Base+0x1170>
   15f74:	ldreq	r1, [pc, #956]	; 16338 <argp_failure@@Base+0x1174>
   15f78:	bl	17578 <argp_error@@Base+0x1170>
   15f7c:	sub	r6, r6, #1
   15f80:	add	r9, r9, #24
   15f84:	b	15f1c <argp_failure@@Base+0xd58>
   15f88:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15f8c:	ldr	r6, [r5, #16]
   15f90:	ldr	r1, [r5, #4]
   15f94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f98:	ldr	r2, [r2, #20]
   15f9c:	mov	r0, r6
   15fa0:	bl	13b48 <argp_parse@@Base+0x1928>
   15fa4:	subs	r5, r0, #0
   15fa8:	beq	160bc <argp_failure@@Base+0xef8>
   15fac:	ldrb	r3, [r5]
   15fb0:	cmp	r3, #0
   15fb4:	beq	160ac <argp_failure@@Base+0xee8>
   15fb8:	ldr	r2, [r4, #24]
   15fbc:	ldr	r3, [r4, #28]
   15fc0:	sub	r3, r3, r2
   15fc4:	ldr	r2, [r4, #16]
   15fc8:	cmp	r3, r2
   15fcc:	bls	15fd8 <argp_failure@@Base+0xe14>
   15fd0:	mov	r0, r4
   15fd4:	bl	17044 <argp_error@@Base+0xc3c>
   15fd8:	ldr	r2, [r4, #24]
   15fdc:	ldr	r3, [r4, #28]
   15fe0:	ldr	r7, [r4, #20]
   15fe4:	sub	r3, r3, r2
   15fe8:	ldr	r8, [pc, #748]	; 162dc <argp_failure@@Base+0x1118>
   15fec:	ldr	r2, [r4, #16]
   15ff0:	bic	r7, r7, r7, asr #31
   15ff4:	cmp	r3, r2
   15ff8:	ldr	r9, [r8, #20]
   15ffc:	bls	16008 <argp_failure@@Base+0xe44>
   16000:	mov	r0, r4
   16004:	bl	17044 <argp_error@@Base+0xc3c>
   16008:	ldr	r2, [r4, #24]
   1600c:	ldr	r3, [r4, #28]
   16010:	str	r9, [r4, #4]
   16014:	sub	r3, r3, r2
   16018:	ldr	r2, [r4, #16]
   1601c:	ldr	r8, [r8, #20]
   16020:	cmp	r3, r2
   16024:	bls	16030 <argp_failure@@Base+0xe6c>
   16028:	mov	r0, r4
   1602c:	bl	17044 <argp_error@@Base+0xc3c>
   16030:	ldr	r3, [pc, #676]	; 162dc <argp_failure@@Base+0x1118>
   16034:	str	r8, [r4, #12]
   16038:	ldr	r1, [r3, #20]
   1603c:	add	r3, r1, #3
   16040:	cmp	r7, r3
   16044:	bls	16124 <argp_failure@@Base+0xf60>
   16048:	ldr	r2, [r4, #28]
   1604c:	ldr	r3, [r4, #32]
   16050:	cmp	r2, r3
   16054:	bcs	1610c <argp_failure@@Base+0xf48>
   16058:	ldr	r3, [r4, #28]
   1605c:	add	r2, r3, #1
   16060:	str	r2, [r4, #28]
   16064:	mov	r2, #10
   16068:	strb	r2, [r3]
   1606c:	mov	r0, r5
   16070:	bl	11198 <strlen@plt>
   16074:	subs	r7, r0, #0
   16078:	beq	160ac <argp_failure@@Base+0xee8>
   1607c:	ldr	r3, [r4, #28]
   16080:	ldr	r2, [r4, #32]
   16084:	add	r3, r3, r7
   16088:	cmp	r2, r3
   1608c:	bcc	1618c <argp_failure@@Base+0xfc8>
   16090:	mov	r2, r7
   16094:	mov	r1, r5
   16098:	ldr	r0, [r4, #28]
   1609c:	bl	11090 <memcpy@plt>
   160a0:	ldr	r3, [r4, #28]
   160a4:	add	r7, r3, r7
   160a8:	str	r7, [r4, #28]
   160ac:	cmp	r6, r5
   160b0:	beq	160bc <argp_failure@@Base+0xef8>
   160b4:	mov	r0, r5
   160b8:	bl	12cbc <argp_parse@@Base+0xa9c>
   160bc:	ldr	r2, [r4, #24]
   160c0:	ldr	r3, [r4, #28]
   160c4:	sub	r3, r3, r2
   160c8:	ldr	r2, [r4, #16]
   160cc:	cmp	r3, r2
   160d0:	bls	160dc <argp_failure@@Base+0xf18>
   160d4:	mov	r0, r4
   160d8:	bl	17044 <argp_error@@Base+0xc3c>
   160dc:	mov	r3, #0
   160e0:	str	r3, [r4, #4]
   160e4:	ldr	r2, [r4, #28]
   160e8:	ldr	r3, [r4, #32]
   160ec:	cmp	r2, r3
   160f0:	bcs	161a4 <argp_failure@@Base+0xfe0>
   160f4:	ldr	r3, [r4, #28]
   160f8:	add	r2, r3, #1
   160fc:	str	r2, [r4, #28]
   16100:	mov	r2, #10
   16104:	strb	r2, [r3]
   16108:	b	15d44 <argp_failure@@Base+0xb80>
   1610c:	mov	r1, #1
   16110:	mov	r0, r4
   16114:	bl	17494 <argp_error@@Base+0x108c>
   16118:	cmp	r0, #0
   1611c:	bne	16058 <argp_failure@@Base+0xe94>
   16120:	b	1606c <argp_failure@@Base+0xea8>
   16124:	cmp	r7, r1
   16128:	bcc	16180 <argp_failure@@Base+0xfbc>
   1612c:	ldr	r3, [r4, #28]
   16130:	ldr	r2, [r4, #32]
   16134:	add	r3, r3, #3
   16138:	cmp	r2, r3
   1613c:	bcc	16168 <argp_failure@@Base+0xfa4>
   16140:	ldr	r2, [pc, #500]	; 1633c <argp_failure@@Base+0x1178>
   16144:	ldr	r3, [r4, #28]
   16148:	ldrh	r1, [r2]
   1614c:	ldrb	r2, [r2, #2]
   16150:	strh	r1, [r3]
   16154:	strb	r2, [r3, #2]
   16158:	ldr	r3, [r4, #28]
   1615c:	add	r3, r3, #3
   16160:	str	r3, [r4, #28]
   16164:	b	1606c <argp_failure@@Base+0xea8>
   16168:	mov	r1, #3
   1616c:	mov	r0, r4
   16170:	bl	17494 <argp_error@@Base+0x108c>
   16174:	cmp	r0, #0
   16178:	bne	16140 <argp_failure@@Base+0xf7c>
   1617c:	b	1606c <argp_failure@@Base+0xea8>
   16180:	mov	r0, r4
   16184:	bl	13ac0 <argp_parse@@Base+0x18a0>
   16188:	b	1606c <argp_failure@@Base+0xea8>
   1618c:	mov	r1, r7
   16190:	mov	r0, r4
   16194:	bl	17494 <argp_error@@Base+0x108c>
   16198:	cmp	r0, #0
   1619c:	bne	16090 <argp_failure@@Base+0xecc>
   161a0:	b	160ac <argp_failure@@Base+0xee8>
   161a4:	mov	r1, #1
   161a8:	mov	r0, r4
   161ac:	bl	17494 <argp_error@@Base+0x108c>
   161b0:	cmp	r0, #0
   161b4:	bne	160f4 <argp_failure@@Base+0xf30>
   161b8:	b	15d44 <argp_failure@@Base+0xb80>
   161bc:	mov	r1, #1
   161c0:	mov	r0, r4
   161c4:	bl	17494 <argp_error@@Base+0x108c>
   161c8:	cmp	r0, #0
   161cc:	bne	159d4 <argp_failure@@Base+0x810>
   161d0:	b	159e8 <argp_failure@@Base+0x824>
   161d4:	mov	r1, r6
   161d8:	mov	r0, r4
   161dc:	bl	17494 <argp_error@@Base+0x108c>
   161e0:	cmp	r0, #0
   161e4:	bne	15a0c <argp_failure@@Base+0x848>
   161e8:	b	15a28 <argp_failure@@Base+0x864>
   161ec:	mov	r1, #1
   161f0:	mov	r0, r4
   161f4:	bl	17494 <argp_error@@Base+0x108c>
   161f8:	cmp	r0, #0
   161fc:	bne	15a38 <argp_failure@@Base+0x874>
   16200:	b	15a4c <argp_failure@@Base+0x888>
   16204:	mov	r1, #1
   16208:	mov	r0, r4
   1620c:	bl	17494 <argp_error@@Base+0x108c>
   16210:	cmp	r0, #0
   16214:	bne	15acc <argp_failure@@Base+0x908>
   16218:	b	15ae0 <argp_failure@@Base+0x91c>
   1621c:	cmp	r0, #110	; 0x6e
   16220:	beq	1553c <argp_failure@@Base+0x378>
   16224:	mov	sl, r5
   16228:	mov	r7, r5
   1622c:	b	15568 <argp_failure@@Base+0x3a4>
   16230:	ldrb	r1, [r9]
   16234:	cmp	r3, r1
   16238:	bne	15e00 <argp_failure@@Base+0xc3c>
   1623c:	tst	r2, #2
   16240:	bne	162d4 <argp_failure@@Base+0x1110>
   16244:	sub	r1, fp, #76	; 0x4c
   16248:	ldr	r0, [r7, #8]
   1624c:	bl	13d64 <argp_parse@@Base+0x1b44>
   16250:	ldr	r2, [r4, #28]
   16254:	ldr	r3, [r4, #32]
   16258:	cmp	r2, r3
   1625c:	bcs	15e0c <argp_failure@@Base+0xc48>
   16260:	ldr	r3, [r4, #28]
   16264:	add	r2, r3, #1
   16268:	str	r2, [r4, #28]
   1626c:	mov	r2, #45	; 0x2d
   16270:	strb	r2, [r3]
   16274:	ldr	r1, [r4, #28]
   16278:	ldr	r3, [r4, #32]
   1627c:	ldrb	r2, [r9]
   16280:	cmp	r1, r3
   16284:	bcs	15e24 <argp_failure@@Base+0xc60>
   16288:	ldr	r3, [r4, #28]
   1628c:	add	r1, r3, #1
   16290:	str	r1, [r4, #28]
   16294:	strb	r2, [r3]
   16298:	ldr	r3, [fp, #-120]	; 0xffffff88
   1629c:	cmp	r3, #0
   162a0:	beq	162b0 <argp_failure@@Base+0x10ec>
   162a4:	ldr	r3, [r7]
   162a8:	cmp	r3, #0
   162ac:	beq	15e44 <argp_failure@@Base+0xc80>
   162b0:	ldr	r2, [r5, #8]
   162b4:	cmp	r2, #0
   162b8:	beq	162d4 <argp_failure@@Base+0x1110>
   162bc:	ldr	r3, [r5, #12]
   162c0:	mov	r0, r4
   162c4:	tst	r3, #1
   162c8:	ldrne	r1, [pc, #112]	; 16340 <argp_failure@@Base+0x117c>
   162cc:	ldreq	r1, [pc, #112]	; 16344 <argp_failure@@Base+0x1180>
   162d0:	bl	17578 <argp_error@@Base+0x1170>
   162d4:	add	r9, r9, #1
   162d8:	b	15e00 <argp_failure@@Base+0xc3c>
   162dc:	andeq	r9, r2, ip, ror #6
   162e0:	andeq	r8, r1, sl, ror #13
   162e4:	andeq	r8, r1, sp, asr #14
   162e8:	andeq	r8, r1, r2, ror r5
   162ec:	muleq	r1, lr, r7
   162f0:	andeq	r8, r1, sl, ror #14
   162f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   162f8:	andeq	r8, r1, r2, lsl #12
   162fc:	andeq	r8, r1, r7, lsr #14
   16300:	andeq	r8, r1, r7, lsr #2
   16304:	andeq	r8, r1, pc, lsl r1
   16308:	andeq	r4, r1, ip, lsl pc
   1630c:			; <UNDEFINED> instruction: 0x000187ba
   16310:	andeq	r8, r1, r6, lsr #15
   16314:			; <UNDEFINED> instruction: 0x000187b3
   16318:	andeq	r8, r1, sp, lsr #15
   1631c:	andeq	r8, r1, r7, asr #15
   16320:	andeq	r0, r0, #5
   16324:	andeq	r8, r1, r6, lsl r8
   16328:	andeq	r9, r2, r8, lsl r4
   1632c:	andeq	r8, r1, sl, lsl #17
   16330:	andeq	r8, r1, r3, lsl #16
   16334:	andeq	r8, r1, r8, lsl #16
   16338:	andeq	r8, r1, lr, lsl #16
   1633c:	andeq	r8, r1, r2, lsl r8
   16340:	strdeq	r8, [r1], -lr
   16344:	andeq	r7, r1, lr, lsr sp

00016348 <argp_help@@Base>:
   16348:	push	{r0, r1, r2, lr}
   1634c:	str	r3, [sp]
   16350:	mov	r3, r2
   16354:	mov	r2, r1
   16358:	mov	r1, #0
   1635c:	bl	15314 <argp_failure@@Base+0x150>
   16360:	add	sp, sp, #12
   16364:	pop	{pc}		; (ldr pc, [sp], #4)

00016368 <argp_state_help@@Base>:
   16368:	push	{r0, r1, r2, r4, r5, lr}
   1636c:	subs	r4, r0, #0
   16370:	mov	r5, r2
   16374:	beq	1638c <argp_state_help@@Base+0x24>
   16378:	ldr	r3, [r4, #16]
   1637c:	tst	r3, #2
   16380:	beq	163a4 <argp_state_help@@Base+0x3c>
   16384:	add	sp, sp, #12
   16388:	pop	{r4, r5, pc}
   1638c:	cmp	r1, #0
   16390:	beq	16384 <argp_state_help@@Base+0x1c>
   16394:	ldr	r3, [pc, #100]	; 16400 <argp_state_help@@Base+0x98>
   16398:	mov	r0, r4
   1639c:	ldr	r3, [r3]
   163a0:	b	163bc <argp_state_help@@Base+0x54>
   163a4:	cmp	r1, #0
   163a8:	beq	16384 <argp_state_help@@Base+0x1c>
   163ac:	tst	r3, #64	; 0x40
   163b0:	ldr	r0, [r4]
   163b4:	ldr	r3, [r4, #40]	; 0x28
   163b8:	orrne	r5, r5, #128	; 0x80
   163bc:	str	r3, [sp]
   163c0:	mov	r2, r1
   163c4:	mov	r3, r5
   163c8:	mov	r1, r4
   163cc:	bl	15314 <argp_failure@@Base+0x150>
   163d0:	cmp	r4, #0
   163d4:	beq	163e4 <argp_state_help@@Base+0x7c>
   163d8:	ldr	r3, [r4, #16]
   163dc:	tst	r3, #32
   163e0:	bne	16384 <argp_state_help@@Base+0x1c>
   163e4:	ands	r0, r5, #256	; 0x100
   163e8:	ldrne	r3, [pc, #20]	; 16404 <argp_state_help@@Base+0x9c>
   163ec:	ldrne	r0, [r3]
   163f0:	bne	163fc <argp_state_help@@Base+0x94>
   163f4:	tst	r5, #512	; 0x200
   163f8:	beq	16384 <argp_state_help@@Base+0x1c>
   163fc:	bl	11180 <exit@plt>
   16400:	andeq	r9, r2, r8, lsr #7
   16404:	andeq	r9, r2, r4, lsr #7

00016408 <argp_error@@Base>:
   16408:	push	{r1, r2, r3}
   1640c:	push	{r0, r1, r4, r5, lr}
   16410:	subs	r5, r0, #0
   16414:	beq	16440 <argp_error@@Base+0x38>
   16418:	ldr	r3, [r5, #16]
   1641c:	tst	r3, #2
   16420:	bne	16430 <argp_error@@Base+0x28>
   16424:	ldr	r4, [r5, #44]	; 0x2c
   16428:	cmp	r4, #0
   1642c:	bne	1646c <argp_error@@Base+0x64>
   16430:	add	sp, sp, #8
   16434:	pop	{r4, r5, lr}
   16438:	add	sp, sp, #12
   1643c:	bx	lr
   16440:	ldr	r3, [pc, #144]	; 164d8 <argp_error@@Base+0xd0>
   16444:	ldr	r4, [r3]
   16448:	cmp	r4, #0
   1644c:	beq	16430 <argp_error@@Base+0x28>
   16450:	mov	r0, r4
   16454:	bl	11240 <flockfile@plt>
   16458:	add	r3, sp, #24
   1645c:	str	r3, [sp, #4]
   16460:	ldr	r3, [pc, #116]	; 164dc <argp_error@@Base+0xd4>
   16464:	ldr	r0, [r3]
   16468:	b	16480 <argp_error@@Base+0x78>
   1646c:	mov	r0, r4
   16470:	bl	11240 <flockfile@plt>
   16474:	ldr	r0, [r5, #40]	; 0x28
   16478:	add	r3, sp, #24
   1647c:	str	r3, [sp, #4]
   16480:	mov	r1, r4
   16484:	bl	1100c <fputs_unlocked@plt>
   16488:	mov	r1, r4
   1648c:	mov	r0, #58	; 0x3a
   16490:	bl	112f4 <putc_unlocked@plt>
   16494:	mov	r1, r4
   16498:	mov	r0, #32
   1649c:	bl	112f4 <putc_unlocked@plt>
   164a0:	ldr	r2, [sp, #4]
   164a4:	ldr	r1, [sp, #20]
   164a8:	mov	r0, r4
   164ac:	bl	11228 <vfprintf@plt>
   164b0:	mov	r1, r4
   164b4:	mov	r0, #10
   164b8:	bl	112f4 <putc_unlocked@plt>
   164bc:	mov	r0, r5
   164c0:	mov	r2, #260	; 0x104
   164c4:	mov	r1, r4
   164c8:	bl	16368 <argp_state_help@@Base>
   164cc:	mov	r0, r4
   164d0:	bl	110e4 <funlockfile@plt>
   164d4:	b	16430 <argp_error@@Base+0x28>
   164d8:			; <UNDEFINED> instruction: 0x000293b0
   164dc:	andeq	r9, r2, r8, lsr #7
   164e0:	ldr	r3, [r1, #32]
   164e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164e8:	ldr	r7, [r1, #28]
   164ec:	ldr	r6, [r1]
   164f0:	add	r8, r0, r3, lsl #2
   164f4:	mov	lr, r6
   164f8:	mov	r4, r7
   164fc:	cmp	lr, r3
   16500:	movle	r2, #0
   16504:	movgt	r2, #1
   16508:	cmp	r4, r3
   1650c:	movge	r2, #0
   16510:	cmp	r2, #0
   16514:	bne	1652c <argp_error@@Base+0x124>
   16518:	sub	r3, r6, r3
   1651c:	add	r3, r3, r7
   16520:	str	r3, [r1, #28]
   16524:	str	r6, [r1, #32]
   16528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1652c:	sub	r2, r3, r4
   16530:	sub	r5, lr, r3
   16534:	cmp	r5, r2
   16538:	lsl	ip, r4, #2
   1653c:	addle	r2, r0, ip
   16540:	movle	r9, r8
   16544:	movle	ip, #0
   16548:	ble	1657c <argp_error@@Base+0x174>
   1654c:	sub	r2, lr, r2
   16550:	add	ip, r0, ip
   16554:	add	r5, r0, r2, lsl #2
   16558:	add	lr, r0, lr, lsl #2
   1655c:	ldr	r9, [ip]
   16560:	ldr	sl, [r5]
   16564:	str	sl, [ip], #4
   16568:	str	r9, [r5], #4
   1656c:	cmp	lr, r5
   16570:	bne	1655c <argp_error@@Base+0x154>
   16574:	mov	lr, r2
   16578:	b	164fc <argp_error@@Base+0xf4>
   1657c:	ldr	sl, [r2]
   16580:	ldr	fp, [r9]
   16584:	add	ip, ip, #1
   16588:	cmp	r5, ip
   1658c:	str	fp, [r2], #4
   16590:	str	sl, [r9], #4
   16594:	bgt	1657c <argp_error@@Base+0x174>
   16598:	add	r4, r4, r5
   1659c:	mov	r2, lr
   165a0:	b	16574 <argp_error@@Base+0x16c>
   165a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165a8:	sub	sp, sp, #44	; 0x2c
   165ac:	mov	sl, r1
   165b0:	ldr	r4, [sp, #88]	; 0x58
   165b4:	str	r0, [sp, #36]	; 0x24
   165b8:	str	r2, [sp, #32]
   165bc:	ldr	r8, [r4, #20]
   165c0:	str	r3, [sp, #20]
   165c4:	mov	r9, r8
   165c8:	mov	r3, r9
   165cc:	ldrb	r6, [r3], #1
   165d0:	cmp	r6, #0
   165d4:	cmpne	r6, #61	; 0x3d
   165d8:	movne	r6, #1
   165dc:	moveq	r6, #0
   165e0:	bne	166a8 <argp_error@@Base+0x2a0>
   165e4:	sub	r3, r9, r8
   165e8:	str	r3, [sp, #24]
   165ec:	ldr	r3, [sp, #20]
   165f0:	add	r7, r3, r6, lsl #4
   165f4:	ldr	r5, [r3, r6, lsl #4]
   165f8:	cmp	r5, #0
   165fc:	bne	166b0 <argp_error@@Base+0x2a8>
   16600:	mov	r8, r5
   16604:	mov	r7, r5
   16608:	mov	fp, r3
   1660c:	mvn	r3, #0
   16610:	str	r3, [sp, #16]
   16614:	str	r5, [sp, #28]
   16618:	str	r5, [sp, #12]
   1661c:	ldr	r0, [fp]
   16620:	cmp	r0, #0
   16624:	bne	166e4 <argp_error@@Base+0x2dc>
   16628:	cmp	r5, #0
   1662c:	cmpeq	r8, #0
   16630:	beq	1681c <argp_error@@Base+0x414>
   16634:	ldr	r3, [sp, #92]	; 0x5c
   16638:	cmp	r3, #0
   1663c:	beq	16668 <argp_error@@Base+0x260>
   16640:	cmp	r5, #0
   16644:	ldr	r7, [pc, #908]	; 169d8 <argp_error@@Base+0x5d0>
   16648:	beq	167a8 <argp_error@@Base+0x3a0>
   1664c:	ldr	r3, [r4, #20]
   16650:	ldr	r2, [sl]
   16654:	str	r3, [sp]
   16658:	ldr	r1, [pc, #892]	; 169dc <argp_error@@Base+0x5d4>
   1665c:	ldr	r3, [sp, #96]	; 0x60
   16660:	ldr	r0, [r7]
   16664:	bl	111b0 <fprintf@plt>
   16668:	ldr	r3, [sp, #28]
   1666c:	cmp	r3, #0
   16670:	beq	1667c <argp_error@@Base+0x274>
   16674:	mov	r0, r8
   16678:	bl	12cbc <argp_parse@@Base+0xa9c>
   1667c:	ldr	r5, [r4, #20]
   16680:	mov	r0, r5
   16684:	bl	11198 <strlen@plt>
   16688:	ldr	r3, [r4]
   1668c:	add	r3, r3, #1
   16690:	str	r3, [r4]
   16694:	mov	r3, #0
   16698:	add	r0, r5, r0
   1669c:	str	r0, [r4, #20]
   166a0:	str	r3, [r4, #8]
   166a4:	b	168a4 <argp_error@@Base+0x49c>
   166a8:	mov	r9, r3
   166ac:	b	165c8 <argp_error@@Base+0x1c0>
   166b0:	ldr	r2, [sp, #24]
   166b4:	mov	r1, r8
   166b8:	mov	r0, r5
   166bc:	bl	112ac <strncmp@plt>
   166c0:	cmp	r0, #0
   166c4:	bne	166dc <argp_error@@Base+0x2d4>
   166c8:	mov	r0, r5
   166cc:	bl	11198 <strlen@plt>
   166d0:	ldr	r3, [sp, #24]
   166d4:	cmp	r3, r0
   166d8:	beq	168b0 <argp_error@@Base+0x4a8>
   166dc:	add	r6, r6, #1
   166e0:	b	165ec <argp_error@@Base+0x1e4>
   166e4:	ldr	r2, [sp, #24]
   166e8:	ldr	r1, [r4, #20]
   166ec:	bl	112ac <strncmp@plt>
   166f0:	cmp	r0, #0
   166f4:	bne	16794 <argp_error@@Base+0x38c>
   166f8:	cmp	r7, #0
   166fc:	moveq	r7, fp
   16700:	ldreq	r3, [sp, #12]
   16704:	streq	r3, [sp, #16]
   16708:	beq	16794 <argp_error@@Base+0x38c>
   1670c:	ldr	r3, [sp, #84]	; 0x54
   16710:	cmp	r3, #0
   16714:	bne	16748 <argp_error@@Base+0x340>
   16718:	ldr	r1, [r7, #4]
   1671c:	ldr	r2, [fp, #4]
   16720:	cmp	r1, r2
   16724:	bne	16748 <argp_error@@Base+0x340>
   16728:	ldr	r1, [r7, #8]
   1672c:	ldr	r2, [fp, #8]
   16730:	cmp	r1, r2
   16734:	bne	16748 <argp_error@@Base+0x340>
   16738:	ldr	r1, [r7, #12]
   1673c:	ldr	r2, [fp, #12]
   16740:	cmp	r1, r2
   16744:	beq	16794 <argp_error@@Base+0x38c>
   16748:	cmp	r5, #0
   1674c:	bne	16794 <argp_error@@Base+0x38c>
   16750:	ldr	r3, [sp, #92]	; 0x5c
   16754:	cmp	r3, #0
   16758:	beq	1677c <argp_error@@Base+0x374>
   1675c:	cmp	r8, #0
   16760:	bne	16788 <argp_error@@Base+0x380>
   16764:	mov	r0, r6
   16768:	bl	137ac <argp_parse@@Base+0x158c>
   1676c:	subs	r8, r0, #0
   16770:	bne	169b4 <argp_error@@Base+0x5ac>
   16774:	mov	r5, #1
   16778:	b	16794 <argp_error@@Base+0x38c>
   1677c:	cmp	r8, #0
   16780:	mov	r5, #1
   16784:	beq	16794 <argp_error@@Base+0x38c>
   16788:	ldr	r3, [sp, #12]
   1678c:	mov	r2, #1
   16790:	strb	r2, [r8, r3]
   16794:	ldr	r3, [sp, #12]
   16798:	add	fp, fp, #16
   1679c:	add	r3, r3, #1
   167a0:	str	r3, [sp, #12]
   167a4:	b	1661c <argp_error@@Base+0x214>
   167a8:	ldr	r0, [r7]
   167ac:	bl	11240 <flockfile@plt>
   167b0:	ldr	r3, [r4, #20]
   167b4:	ldr	r2, [sl]
   167b8:	str	r3, [sp]
   167bc:	ldr	r1, [pc, #540]	; 169e0 <argp_error@@Base+0x5d8>
   167c0:	ldr	r3, [sp, #96]	; 0x60
   167c4:	ldr	r0, [r7]
   167c8:	bl	111b0 <fprintf@plt>
   167cc:	ldr	r9, [pc, #528]	; 169e4 <argp_error@@Base+0x5dc>
   167d0:	cmp	r6, r5
   167d4:	bne	167f0 <argp_error@@Base+0x3e8>
   167d8:	ldr	r1, [r7]
   167dc:	mov	r0, #10
   167e0:	bl	11234 <fputc@plt>
   167e4:	ldr	r0, [r7]
   167e8:	bl	110e4 <funlockfile@plt>
   167ec:	b	16668 <argp_error@@Base+0x260>
   167f0:	ldrb	r3, [r8, r5]
   167f4:	cmp	r3, #0
   167f8:	beq	16814 <argp_error@@Base+0x40c>
   167fc:	ldr	r3, [sp, #20]
   16800:	ldr	r2, [sp, #96]	; 0x60
   16804:	mov	r1, r9
   16808:	ldr	r3, [r3, r5, lsl #4]
   1680c:	ldr	r0, [r7]
   16810:	bl	111b0 <fprintf@plt>
   16814:	add	r5, r5, #1
   16818:	b	167d0 <argp_error@@Base+0x3c8>
   1681c:	cmp	r7, #0
   16820:	bne	168b4 <argp_error@@Base+0x4ac>
   16824:	ldr	r3, [sp, #84]	; 0x54
   16828:	cmp	r3, #0
   1682c:	beq	16860 <argp_error@@Base+0x458>
   16830:	ldr	r3, [r4]
   16834:	ldr	r3, [sl, r3, lsl #2]
   16838:	ldrb	r3, [r3, #1]
   1683c:	cmp	r3, #45	; 0x2d
   16840:	beq	16860 <argp_error@@Base+0x458>
   16844:	ldr	r3, [r4, #20]
   16848:	ldr	r0, [sp, #32]
   1684c:	ldrb	r1, [r3]
   16850:	bl	111a4 <strchr@plt>
   16854:	cmp	r0, #0
   16858:	mvnne	r0, #0
   1685c:	bne	168a8 <argp_error@@Base+0x4a0>
   16860:	ldr	r3, [sp, #92]	; 0x5c
   16864:	cmp	r3, #0
   16868:	beq	1688c <argp_error@@Base+0x484>
   1686c:	ldr	r0, [pc, #356]	; 169d8 <argp_error@@Base+0x5d0>
   16870:	ldr	r3, [r4, #20]
   16874:	ldr	r2, [sl]
   16878:	str	r3, [sp]
   1687c:	ldr	r1, [pc, #356]	; 169e8 <argp_error@@Base+0x5e0>
   16880:	ldr	r3, [sp, #96]	; 0x60
   16884:	ldr	r0, [r0]
   16888:	bl	111b0 <fprintf@plt>
   1688c:	ldr	r3, [r4]
   16890:	mov	r2, #0
   16894:	add	r3, r3, #1
   16898:	str	r2, [r4, #20]
   1689c:	str	r3, [r4]
   168a0:	str	r2, [r4, #8]
   168a4:	mov	r0, #63	; 0x3f
   168a8:	add	sp, sp, #44	; 0x2c
   168ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168b0:	str	r6, [sp, #16]
   168b4:	ldr	r3, [r4]
   168b8:	mov	r1, #0
   168bc:	add	r2, r3, #1
   168c0:	str	r2, [r4]
   168c4:	str	r1, [r4, #20]
   168c8:	ldrb	r1, [r9]
   168cc:	cmp	r1, #0
   168d0:	ldr	r1, [r7, #4]
   168d4:	beq	1691c <argp_error@@Base+0x514>
   168d8:	cmp	r1, #0
   168dc:	addne	r9, r9, #1
   168e0:	strne	r9, [r4, #12]
   168e4:	bne	16940 <argp_error@@Base+0x538>
   168e8:	ldr	r3, [sp, #92]	; 0x5c
   168ec:	cmp	r3, #0
   168f0:	beq	16914 <argp_error@@Base+0x50c>
   168f4:	ldr	r0, [pc, #220]	; 169d8 <argp_error@@Base+0x5d0>
   168f8:	ldr	r3, [r7]
   168fc:	ldr	r2, [sl]
   16900:	str	r3, [sp]
   16904:	ldr	r1, [pc, #224]	; 169ec <argp_error@@Base+0x5e4>
   16908:	ldr	r3, [sp, #96]	; 0x60
   1690c:	ldr	r0, [r0]
   16910:	bl	111b0 <fprintf@plt>
   16914:	ldr	r3, [r7, #12]
   16918:	b	166a0 <argp_error@@Base+0x298>
   1691c:	cmp	r1, #1
   16920:	bne	16940 <argp_error@@Base+0x538>
   16924:	ldr	r1, [sp, #36]	; 0x24
   16928:	cmp	r2, r1
   1692c:	bge	16968 <argp_error@@Base+0x560>
   16930:	add	r3, r3, #2
   16934:	str	r3, [r4]
   16938:	ldr	r3, [sl, r2, lsl #2]
   1693c:	str	r3, [r4, #12]
   16940:	ldr	r3, [sp, #80]	; 0x50
   16944:	cmp	r3, #0
   16948:	ldrne	r2, [sp, #16]
   1694c:	strne	r2, [r3]
   16950:	ldr	r3, [r7, #8]
   16954:	ldr	r0, [r7, #12]
   16958:	cmp	r3, #0
   1695c:	strne	r0, [r3]
   16960:	movne	r0, #0
   16964:	b	168a8 <argp_error@@Base+0x4a0>
   16968:	ldr	r3, [sp, #92]	; 0x5c
   1696c:	cmp	r3, #0
   16970:	beq	16994 <argp_error@@Base+0x58c>
   16974:	ldr	r0, [pc, #92]	; 169d8 <argp_error@@Base+0x5d0>
   16978:	ldr	r3, [r7]
   1697c:	ldr	r2, [sl]
   16980:	str	r3, [sp]
   16984:	ldr	r1, [pc, #100]	; 169f0 <argp_error@@Base+0x5e8>
   16988:	ldr	r3, [sp, #96]	; 0x60
   1698c:	ldr	r0, [r0]
   16990:	bl	111b0 <fprintf@plt>
   16994:	ldr	r3, [r7, #12]
   16998:	str	r3, [r4, #8]
   1699c:	ldr	r3, [sp, #32]
   169a0:	ldrb	r0, [r3]
   169a4:	cmp	r0, #58	; 0x3a
   169a8:	moveq	r0, #58	; 0x3a
   169ac:	movne	r0, #63	; 0x3f
   169b0:	b	168a8 <argp_error@@Base+0x4a0>
   169b4:	mov	r2, r6
   169b8:	mov	r1, #0
   169bc:	bl	111e0 <memset@plt>
   169c0:	ldr	r3, [sp, #16]
   169c4:	mov	r2, #1
   169c8:	strb	r2, [r8, r3]
   169cc:	mov	r3, #1
   169d0:	str	r3, [sp, #28]
   169d4:	b	16788 <argp_error@@Base+0x380>
   169d8:			; <UNDEFINED> instruction: 0x000293b0
   169dc:	muleq	r1, lr, r8
   169e0:			; <UNDEFINED> instruction: 0x000188be
   169e4:	andeq	r8, r1, sp, ror #17
   169e8:	strdeq	r8, [r1], -r5
   169ec:	andeq	r8, r1, r5, lsl r9
   169f0:	andeq	r8, r1, r2, asr #18
   169f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169f8:	sub	sp, sp, #36	; 0x24
   169fc:	subs	r8, r0, #0
   16a00:	ldr	r4, [sp, #80]	; 0x50
   16a04:	ldr	fp, [sp, #72]	; 0x48
   16a08:	ldr	r5, [sp, #76]	; 0x4c
   16a0c:	ldr	r9, [r4, #4]
   16a10:	bgt	16a20 <argp_error@@Base+0x618>
   16a14:	mvn	r0, #0
   16a18:	add	sp, sp, #36	; 0x24
   16a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a20:	mov	sl, r3
   16a24:	mov	r3, #0
   16a28:	str	r3, [r4, #12]
   16a2c:	ldr	r3, [r4]
   16a30:	mov	r7, r1
   16a34:	cmp	r3, #0
   16a38:	mov	r6, r2
   16a3c:	beq	16a60 <argp_error@@Base+0x658>
   16a40:	ldr	r3, [r4, #16]
   16a44:	cmp	r3, #0
   16a48:	beq	16a68 <argp_error@@Base+0x660>
   16a4c:	ldrb	r3, [r2]
   16a50:	sub	r3, r3, #43	; 0x2b
   16a54:	tst	r3, #253	; 0xfd
   16a58:	addeq	r6, r2, #1
   16a5c:	b	16aa4 <argp_error@@Base+0x69c>
   16a60:	mov	r3, #1
   16a64:	str	r3, [r4]
   16a68:	ldr	r3, [r4]
   16a6c:	str	r3, [r4, #32]
   16a70:	str	r3, [r4, #28]
   16a74:	mov	r3, #0
   16a78:	str	r3, [r4, #20]
   16a7c:	ldrb	r2, [r6]
   16a80:	cmp	r2, #45	; 0x2d
   16a84:	moveq	r3, #2
   16a88:	beq	16a94 <argp_error@@Base+0x68c>
   16a8c:	cmp	r2, #43	; 0x2b
   16a90:	bne	16ba4 <argp_error@@Base+0x79c>
   16a94:	add	r6, r6, #1
   16a98:	str	r3, [r4, #24]
   16a9c:	mov	r3, #1
   16aa0:	str	r3, [r4, #16]
   16aa4:	ldrb	r3, [r6]
   16aa8:	cmp	r3, #58	; 0x3a
   16aac:	ldr	r3, [r4, #20]
   16ab0:	moveq	r9, #0
   16ab4:	cmp	r3, #0
   16ab8:	beq	16ac8 <argp_error@@Base+0x6c0>
   16abc:	ldrb	r3, [r3]
   16ac0:	cmp	r3, #0
   16ac4:	bne	16c5c <argp_error@@Base+0x854>
   16ac8:	ldr	r3, [r4]
   16acc:	ldr	r2, [r4, #32]
   16ad0:	cmp	r2, r3
   16ad4:	ldr	r2, [r4, #28]
   16ad8:	strgt	r3, [r4, #32]
   16adc:	cmp	r3, r2
   16ae0:	ldr	r2, [r4, #24]
   16ae4:	strlt	r3, [r4, #28]
   16ae8:	cmp	r2, #1
   16aec:	bne	16b24 <argp_error@@Base+0x71c>
   16af0:	ldr	r1, [r4, #32]
   16af4:	ldr	r2, [r4, #28]
   16af8:	cmp	r2, r1
   16afc:	beq	16bd4 <argp_error@@Base+0x7cc>
   16b00:	cmp	r3, r1
   16b04:	beq	16b14 <argp_error@@Base+0x70c>
   16b08:	mov	r1, r4
   16b0c:	mov	r0, r7
   16b10:	bl	164e0 <argp_error@@Base+0xd8>
   16b14:	ldr	r3, [r4]
   16b18:	cmp	r8, r3
   16b1c:	bgt	16be0 <argp_error@@Base+0x7d8>
   16b20:	str	r3, [r4, #32]
   16b24:	ldr	r3, [r4]
   16b28:	cmp	r8, r3
   16b2c:	beq	16b84 <argp_error@@Base+0x77c>
   16b30:	ldr	r1, [pc, #920]	; 16ed0 <argp_error@@Base+0xac8>
   16b34:	ldr	r0, [r7, r3, lsl #2]
   16b38:	str	r3, [sp, #24]
   16b3c:	bl	11024 <strcmp@plt>
   16b40:	cmp	r0, #0
   16b44:	bne	16b84 <argp_error@@Base+0x77c>
   16b48:	ldr	r1, [r4, #28]
   16b4c:	ldr	r3, [sp, #24]
   16b50:	ldr	r2, [r4, #32]
   16b54:	add	r3, r3, #1
   16b58:	cmp	r1, r2
   16b5c:	str	r3, [r4]
   16b60:	streq	r3, [r4, #28]
   16b64:	beq	16b7c <argp_error@@Base+0x774>
   16b68:	cmp	r3, r2
   16b6c:	beq	16b7c <argp_error@@Base+0x774>
   16b70:	mov	r1, r4
   16b74:	mov	r0, r7
   16b78:	bl	164e0 <argp_error@@Base+0xd8>
   16b7c:	str	r8, [r4, #32]
   16b80:	str	r8, [r4]
   16b84:	ldr	r2, [r4]
   16b88:	cmp	r8, r2
   16b8c:	bne	16c08 <argp_error@@Base+0x800>
   16b90:	ldr	r3, [r4, #28]
   16b94:	ldr	r2, [r4, #32]
   16b98:	cmp	r3, r2
   16b9c:	strne	r3, [r4]
   16ba0:	b	16a14 <argp_error@@Base+0x60c>
   16ba4:	ldr	r3, [sp, #84]	; 0x54
   16ba8:	cmp	r3, #0
   16bac:	beq	16bbc <argp_error@@Base+0x7b4>
   16bb0:	mov	r3, #0
   16bb4:	str	r3, [r4, #24]
   16bb8:	b	16a9c <argp_error@@Base+0x694>
   16bbc:	ldr	r0, [pc, #784]	; 16ed4 <argp_error@@Base+0xacc>
   16bc0:	bl	11108 <getenv@plt>
   16bc4:	cmp	r0, #0
   16bc8:	bne	16bb0 <argp_error@@Base+0x7a8>
   16bcc:	mov	r3, #1
   16bd0:	b	16bb4 <argp_error@@Base+0x7ac>
   16bd4:	cmp	r3, r2
   16bd8:	strne	r3, [r4, #28]
   16bdc:	b	16b14 <argp_error@@Base+0x70c>
   16be0:	ldr	r2, [r7, r3, lsl #2]
   16be4:	ldrb	r1, [r2]
   16be8:	cmp	r1, #45	; 0x2d
   16bec:	bne	16bfc <argp_error@@Base+0x7f4>
   16bf0:	ldrb	r2, [r2, #1]
   16bf4:	cmp	r2, #0
   16bf8:	bne	16b20 <argp_error@@Base+0x718>
   16bfc:	add	r3, r3, #1
   16c00:	str	r3, [r4]
   16c04:	b	16b14 <argp_error@@Base+0x70c>
   16c08:	ldr	r3, [r7, r2, lsl #2]
   16c0c:	ldrb	r1, [r3]
   16c10:	cmp	r1, #45	; 0x2d
   16c14:	bne	16c24 <argp_error@@Base+0x81c>
   16c18:	ldrb	r1, [r3, #1]
   16c1c:	cmp	r1, #0
   16c20:	bne	16c44 <argp_error@@Base+0x83c>
   16c24:	ldr	r1, [r4, #24]
   16c28:	cmp	r1, #0
   16c2c:	beq	16a14 <argp_error@@Base+0x60c>
   16c30:	add	r2, r2, #1
   16c34:	str	r2, [r4]
   16c38:	str	r3, [r4, #12]
   16c3c:	mov	r0, #1
   16c40:	b	16a18 <argp_error@@Base+0x610>
   16c44:	cmp	sl, #0
   16c48:	bne	16cd8 <argp_error@@Base+0x8d0>
   16c4c:	ldr	r3, [r4]
   16c50:	ldr	r3, [r7, r3, lsl #2]
   16c54:	add	r3, r3, #1
   16c58:	str	r3, [r4, #20]
   16c5c:	ldr	r3, [r4, #20]
   16c60:	mov	r0, r6
   16c64:	add	r2, r3, #1
   16c68:	str	r2, [r4, #20]
   16c6c:	ldrb	r5, [r3]
   16c70:	str	r2, [sp, #28]
   16c74:	str	r3, [sp, #24]
   16c78:	mov	r1, r5
   16c7c:	bl	111a4 <strchr@plt>
   16c80:	ldr	r3, [sp, #24]
   16c84:	ldr	r2, [sp, #28]
   16c88:	ldrb	r1, [r3, #1]
   16c8c:	cmp	r1, #0
   16c90:	ldreq	r1, [r4]
   16c94:	addeq	r1, r1, #1
   16c98:	streq	r1, [r4]
   16c9c:	sub	r1, r5, #58	; 0x3a
   16ca0:	cmp	r0, #0
   16ca4:	cmpne	r1, #1
   16ca8:	bhi	16d84 <argp_error@@Base+0x97c>
   16cac:	cmp	r9, #0
   16cb0:	beq	16ccc <argp_error@@Base+0x8c4>
   16cb4:	ldr	r0, [pc, #540]	; 16ed8 <argp_error@@Base+0xad0>
   16cb8:	mov	r3, r5
   16cbc:	ldr	r2, [r7]
   16cc0:	ldr	r1, [pc, #532]	; 16edc <argp_error@@Base+0xad4>
   16cc4:	ldr	r0, [r0]
   16cc8:	bl	111b0 <fprintf@plt>
   16ccc:	str	r5, [r4, #8]
   16cd0:	mov	r0, #63	; 0x3f
   16cd4:	b	16a18 <argp_error@@Base+0x610>
   16cd8:	cmp	r1, #45	; 0x2d
   16cdc:	bne	16d18 <argp_error@@Base+0x910>
   16ce0:	add	r3, r3, #2
   16ce4:	str	r3, [r4, #20]
   16ce8:	ldr	r3, [pc, #480]	; 16ed0 <argp_error@@Base+0xac8>
   16cec:	str	r9, [sp, #12]
   16cf0:	str	r3, [sp, #16]
   16cf4:	str	r4, [sp, #8]
   16cf8:	str	r5, [sp, #4]
   16cfc:	str	fp, [sp]
   16d00:	mov	r3, sl
   16d04:	mov	r2, r6
   16d08:	mov	r1, r7
   16d0c:	mov	r0, r8
   16d10:	bl	165a4 <argp_error@@Base+0x19c>
   16d14:	b	16a18 <argp_error@@Base+0x610>
   16d18:	cmp	r5, #0
   16d1c:	beq	16c4c <argp_error@@Base+0x844>
   16d20:	ldrb	r2, [r3, #2]
   16d24:	cmp	r2, #0
   16d28:	bne	16d44 <argp_error@@Base+0x93c>
   16d2c:	mov	r0, r6
   16d30:	str	r3, [sp, #24]
   16d34:	bl	111a4 <strchr@plt>
   16d38:	ldr	r3, [sp, #24]
   16d3c:	cmp	r0, #0
   16d40:	bne	16c4c <argp_error@@Base+0x844>
   16d44:	add	r3, r3, #1
   16d48:	str	r3, [r4, #20]
   16d4c:	ldr	r3, [pc, #396]	; 16ee0 <argp_error@@Base+0xad8>
   16d50:	str	r9, [sp, #12]
   16d54:	str	r3, [sp, #16]
   16d58:	str	r4, [sp, #8]
   16d5c:	str	r5, [sp, #4]
   16d60:	str	fp, [sp]
   16d64:	mov	r3, sl
   16d68:	mov	r2, r6
   16d6c:	mov	r1, r7
   16d70:	mov	r0, r8
   16d74:	bl	165a4 <argp_error@@Base+0x19c>
   16d78:	cmn	r0, #1
   16d7c:	bne	16a18 <argp_error@@Base+0x610>
   16d80:	b	16c4c <argp_error@@Base+0x844>
   16d84:	ldrb	r1, [r0]
   16d88:	cmp	r1, #87	; 0x57
   16d8c:	ldrb	r1, [r0, #1]
   16d90:	bne	16e2c <argp_error@@Base+0xa24>
   16d94:	cmp	sl, #0
   16d98:	sub	ip, r1, #59	; 0x3b
   16d9c:	clz	ip, ip
   16da0:	lsr	ip, ip, #5
   16da4:	moveq	ip, #0
   16da8:	cmp	ip, #0
   16dac:	beq	16e2c <argp_error@@Base+0xa24>
   16db0:	ldrb	r3, [r3, #1]
   16db4:	cmp	r3, #0
   16db8:	strne	r2, [r4, #12]
   16dbc:	bne	16e0c <argp_error@@Base+0xa04>
   16dc0:	ldr	r3, [r4]
   16dc4:	cmp	r8, r3
   16dc8:	ldrne	r3, [r7, r3, lsl #2]
   16dcc:	strne	r3, [r4, #12]
   16dd0:	bne	16e0c <argp_error@@Base+0xa04>
   16dd4:	cmp	r9, #0
   16dd8:	beq	16df4 <argp_error@@Base+0x9ec>
   16ddc:	ldr	r0, [pc, #244]	; 16ed8 <argp_error@@Base+0xad0>
   16de0:	mov	r3, r5
   16de4:	ldr	r2, [r7]
   16de8:	ldr	r1, [pc, #244]	; 16ee4 <argp_error@@Base+0xadc>
   16dec:	ldr	r0, [r0]
   16df0:	bl	111b0 <fprintf@plt>
   16df4:	str	r5, [r4, #8]
   16df8:	ldrb	r0, [r6]
   16dfc:	cmp	r0, #58	; 0x3a
   16e00:	moveq	r0, #58	; 0x3a
   16e04:	movne	r0, #63	; 0x3f
   16e08:	b	16a18 <argp_error@@Base+0x610>
   16e0c:	ldr	r3, [r4, #12]
   16e10:	ldr	r2, [pc, #208]	; 16ee8 <argp_error@@Base+0xae0>
   16e14:	str	r3, [r4, #20]
   16e18:	mov	r3, #0
   16e1c:	str	r3, [r4, #12]
   16e20:	str	r2, [sp, #16]
   16e24:	stmib	sp, {r3, r4, r9}
   16e28:	b	16cfc <argp_error@@Base+0x8f4>
   16e2c:	cmp	r1, #58	; 0x3a
   16e30:	bne	16e7c <argp_error@@Base+0xa74>
   16e34:	ldrb	r1, [r0, #2]
   16e38:	ldrb	r3, [r3, #1]
   16e3c:	cmp	r1, #58	; 0x3a
   16e40:	bne	16e5c <argp_error@@Base+0xa54>
   16e44:	cmp	r3, #0
   16e48:	strne	r2, [r4, #12]
   16e4c:	ldrne	r3, [r4]
   16e50:	bne	16e6c <argp_error@@Base+0xa64>
   16e54:	str	r3, [r4, #12]
   16e58:	b	16e74 <argp_error@@Base+0xa6c>
   16e5c:	cmp	r3, #0
   16e60:	ldr	r3, [r4]
   16e64:	beq	16e84 <argp_error@@Base+0xa7c>
   16e68:	str	r2, [r4, #12]
   16e6c:	add	r3, r3, #1
   16e70:	str	r3, [r4]
   16e74:	mov	r3, #0
   16e78:	str	r3, [r4, #20]
   16e7c:	mov	r0, r5
   16e80:	b	16a18 <argp_error@@Base+0x610>
   16e84:	cmp	r8, r3
   16e88:	addne	r2, r3, #1
   16e8c:	strne	r2, [r4]
   16e90:	ldrne	r3, [r7, r3, lsl #2]
   16e94:	bne	16e54 <argp_error@@Base+0xa4c>
   16e98:	cmp	r9, #0
   16e9c:	beq	16eb8 <argp_error@@Base+0xab0>
   16ea0:	ldr	r0, [pc, #48]	; 16ed8 <argp_error@@Base+0xad0>
   16ea4:	mov	r3, r5
   16ea8:	ldr	r2, [r7]
   16eac:	ldr	r1, [pc, #48]	; 16ee4 <argp_error@@Base+0xadc>
   16eb0:	ldr	r0, [r0]
   16eb4:	bl	111b0 <fprintf@plt>
   16eb8:	str	r5, [r4, #8]
   16ebc:	ldrb	r5, [r6]
   16ec0:	cmp	r5, #58	; 0x3a
   16ec4:	moveq	r5, #58	; 0x3a
   16ec8:	movne	r5, #63	; 0x3f
   16ecc:	b	16e74 <argp_error@@Base+0xa6c>
   16ed0:	andeq	r8, r1, r0, ror #1
   16ed4:	andeq	r8, r1, sl, ror #18
   16ed8:			; <UNDEFINED> instruction: 0x000293b0
   16edc:	andeq	r8, r1, sl, ror r9
   16ee0:	andeq	r8, r1, r1, ror #1
   16ee4:	muleq	r1, r6, r9
   16ee8:			; <UNDEFINED> instruction: 0x000189bf
   16eec:	push	{r4, r5, lr}
   16ef0:	sub	sp, sp, #20
   16ef4:	ldr	r5, [pc, #84]	; 16f50 <argp_error@@Base+0xb48>
   16ef8:	ldr	r4, [pc, #84]	; 16f54 <argp_error@@Base+0xb4c>
   16efc:	ldr	ip, [r5]
   16f00:	str	r4, [sp, #8]
   16f04:	str	ip, [r4]
   16f08:	ldr	ip, [r5, #4]
   16f0c:	str	ip, [r4, #4]
   16f10:	ldr	ip, [sp, #40]	; 0x28
   16f14:	str	ip, [sp, #12]
   16f18:	ldr	ip, [sp, #36]	; 0x24
   16f1c:	str	ip, [sp, #4]
   16f20:	ldr	ip, [sp, #32]
   16f24:	str	ip, [sp]
   16f28:	bl	169f4 <argp_error@@Base+0x5ec>
   16f2c:	ldr	r3, [r4]
   16f30:	ldr	r2, [r4, #12]
   16f34:	str	r3, [r5]
   16f38:	ldr	r3, [pc, #24]	; 16f58 <argp_error@@Base+0xb50>
   16f3c:	str	r2, [r3]
   16f40:	ldr	r3, [r4, #8]
   16f44:	str	r3, [r5, #8]
   16f48:	add	sp, sp, #20
   16f4c:	pop	{r4, r5, pc}
   16f50:	muleq	r2, r8, r3
   16f54:	strdeq	r9, [r2], -r0
   16f58:	andeq	r9, r2, r0, lsr #8
   16f5c:	push	{r0, r1, r2, r3, r4, lr}
   16f60:	mov	r3, #1
   16f64:	str	r3, [sp, #8]
   16f68:	mov	r3, #0
   16f6c:	str	r3, [sp, #4]
   16f70:	str	r3, [sp]
   16f74:	bl	16eec <argp_error@@Base+0xae4>
   16f78:	add	sp, sp, #20
   16f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f80:	push	{r4, r5, r6, lr}
   16f84:	subs	r4, r2, #0
   16f88:	mov	r6, r0
   16f8c:	mov	r5, r1
   16f90:	beq	16fa8 <argp_error@@Base+0xba0>
   16f94:	mov	r1, r4
   16f98:	mvn	r0, #0
   16f9c:	bl	175ec <argp_error@@Base+0x11e4>
   16fa0:	cmp	r0, r5
   16fa4:	bcc	16fb8 <argp_error@@Base+0xbb0>
   16fa8:	mul	r1, r5, r4
   16fac:	mov	r0, r6
   16fb0:	pop	{r4, r5, r6, lr}
   16fb4:	b	137ec <argp_parse@@Base+0x15cc>
   16fb8:	bl	111bc <__errno_location@plt>
   16fbc:	mov	r3, #12
   16fc0:	str	r3, [r0]
   16fc4:	mov	r0, #0
   16fc8:	pop	{r4, r5, r6, pc}
   16fcc:	push	{r4, r5, r6, r7, r8, lr}
   16fd0:	mov	r8, r0
   16fd4:	mov	r0, #36	; 0x24
   16fd8:	mov	r7, r1
   16fdc:	mov	r6, r2
   16fe0:	mov	r5, r3
   16fe4:	bl	137ac <argp_parse@@Base+0x158c>
   16fe8:	subs	r4, r0, #0
   16fec:	beq	1703c <argp_error@@Base+0xc34>
   16ff0:	mov	r3, #0
   16ff4:	str	r5, [r4, #12]
   16ff8:	str	r8, [r4]
   16ffc:	str	r7, [r4, #4]
   17000:	str	r6, [r4, #8]
   17004:	str	r3, [r4, #20]
   17008:	str	r3, [r4, #16]
   1700c:	mov	r0, #200	; 0xc8
   17010:	bl	137ac <argp_parse@@Base+0x158c>
   17014:	cmp	r0, #0
   17018:	mov	r5, r0
   1701c:	addne	r5, r0, #200	; 0xc8
   17020:	str	r0, [r4, #24]
   17024:	strne	r0, [r4, #28]
   17028:	strne	r5, [r4, #32]
   1702c:	bne	1703c <argp_error@@Base+0xc34>
   17030:	mov	r0, r4
   17034:	bl	12cbc <argp_parse@@Base+0xa9c>
   17038:	mov	r4, r5
   1703c:	mov	r0, r4
   17040:	pop	{r4, r5, r6, r7, r8, pc}
   17044:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17048:	mov	r4, r0
   1704c:	ldr	r6, [r0, #24]
   17050:	ldr	r3, [r0, #16]
   17054:	add	r6, r6, r3
   17058:	ldr	r2, [r4, #28]
   1705c:	cmp	r6, r2
   17060:	bcs	17110 <argp_error@@Base+0xd08>
   17064:	ldr	r7, [r4, #20]
   17068:	cmp	r7, #0
   1706c:	bne	170c4 <argp_error@@Base+0xcbc>
   17070:	ldr	r5, [r4, #4]
   17074:	cmp	r5, #0
   17078:	beq	170c4 <argp_error@@Base+0xcbc>
   1707c:	ldr	r1, [r4, #32]
   17080:	add	r3, r2, r5
   17084:	cmp	r1, r3
   17088:	bls	17128 <argp_error@@Base+0xd20>
   1708c:	add	r7, r6, r5
   17090:	sub	r2, r2, r6
   17094:	mov	r1, r6
   17098:	mov	r0, r7
   1709c:	bl	11054 <memmove@plt>
   170a0:	ldr	r3, [r4, #28]
   170a4:	mov	r0, r6
   170a8:	add	r3, r3, r5
   170ac:	str	r3, [r4, #28]
   170b0:	mov	r2, r5
   170b4:	mov	r1, #32
   170b8:	bl	111e0 <memset@plt>
   170bc:	mov	r6, r7
   170c0:	str	r5, [r4, #20]
   170c4:	ldr	r9, [r4, #28]
   170c8:	mov	r1, #10
   170cc:	sub	r8, r9, r6
   170d0:	mov	r2, r8
   170d4:	mov	r0, r6
   170d8:	bl	11204 <memchr@plt>
   170dc:	ldr	r2, [r4, #20]
   170e0:	ldr	r5, [r4, #8]
   170e4:	cmp	r2, #0
   170e8:	movlt	r3, #0
   170ec:	strlt	r3, [r4, #20]
   170f0:	cmp	r0, #0
   170f4:	mov	fp, r0
   170f8:	ldr	r0, [r4, #20]
   170fc:	bne	17144 <argp_error@@Base+0xd3c>
   17100:	add	r3, r8, r0
   17104:	cmp	r3, r5
   17108:	bcs	17164 <argp_error@@Base+0xd5c>
   1710c:	str	r3, [r4, #20]
   17110:	ldr	r3, [r4, #28]
   17114:	ldr	r2, [r4, #24]
   17118:	sub	r3, r3, r2
   1711c:	str	r3, [r4, #16]
   17120:	add	sp, sp, #12
   17124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17128:	ldr	r1, [r4]
   1712c:	mov	r0, #32
   17130:	add	r7, r7, #1
   17134:	bl	112f4 <putc_unlocked@plt>
   17138:	cmp	r5, r7
   1713c:	bne	17128 <argp_error@@Base+0xd20>
   17140:	b	170c0 <argp_error@@Base+0xcb8>
   17144:	sub	r2, fp, r6
   17148:	add	r2, r2, r0
   1714c:	cmp	r2, r5
   17150:	bge	17168 <argp_error@@Base+0xd60>
   17154:	mov	r3, #0
   17158:	str	r3, [r4, #20]
   1715c:	add	r3, fp, #1
   17160:	b	171c8 <argp_error@@Base+0xdc0>
   17164:	mov	fp, r9
   17168:	ldr	sl, [r4, #12]
   1716c:	cmp	sl, #0
   17170:	subge	r5, r5, r0
   17174:	addge	r5, r6, r5
   17178:	movge	r7, r5
   1717c:	bge	171e8 <argp_error@@Base+0xde0>
   17180:	cmp	fp, r9
   17184:	sub	sl, r5, #1
   17188:	bcs	171d0 <argp_error@@Base+0xdc8>
   1718c:	sub	r0, sl, r0
   17190:	sub	r2, r9, fp
   17194:	mov	r1, fp
   17198:	add	r0, r6, r0
   1719c:	bl	11054 <memmove@plt>
   171a0:	ldr	r8, [r4, #20]
   171a4:	sub	sl, sl, r8
   171a8:	add	sl, r6, sl
   171ac:	sub	r3, sl, fp
   171b0:	ldr	sl, [r4, #28]
   171b4:	sub	r3, sl, r3
   171b8:	str	r3, [r4, #28]
   171bc:	mov	r3, #0
   171c0:	str	r3, [r4, #20]
   171c4:	add	r3, r6, r5
   171c8:	mov	r6, r3
   171cc:	b	17058 <argp_error@@Base+0xc50>
   171d0:	add	r0, r8, r0
   171d4:	str	r0, [r4, #20]
   171d8:	sub	r0, sl, r0
   171dc:	add	r9, r9, r0
   171e0:	str	r9, [r4, #28]
   171e4:	b	17110 <argp_error@@Base+0xd08>
   171e8:	cmp	r6, r7
   171ec:	mov	r2, r7
   171f0:	bhi	1721c <argp_error@@Base+0xe14>
   171f4:	str	r7, [sp, #4]
   171f8:	bl	11168 <__ctype_b_loc@plt>
   171fc:	ldr	r2, [sp, #4]
   17200:	sub	r7, r7, #1
   17204:	ldrb	r1, [r2]
   17208:	lsl	r1, r1, #1
   1720c:	ldr	r0, [r0]
   17210:	ldrh	r1, [r0, r1]
   17214:	tst	r1, #1
   17218:	beq	171e8 <argp_error@@Base+0xde0>
   1721c:	add	r7, r2, #1
   17220:	cmp	r6, r7
   17224:	bcs	1729c <argp_error@@Base+0xe94>
   17228:	cmp	r6, r2
   1722c:	bhi	17268 <argp_error@@Base+0xe60>
   17230:	sub	r5, r2, #1
   17234:	cmp	r6, r5
   17238:	mov	r2, r5
   1723c:	bhi	17268 <argp_error@@Base+0xe60>
   17240:	str	r5, [sp, #4]
   17244:	bl	11168 <__ctype_b_loc@plt>
   17248:	ldr	r2, [sp, #4]
   1724c:	sub	r5, r5, #1
   17250:	ldrb	r3, [r2]
   17254:	lsl	r3, r3, #1
   17258:	ldr	r1, [r0]
   1725c:	ldrh	r3, [r1, r3]
   17260:	tst	r3, #1
   17264:	bne	17234 <argp_error@@Base+0xe2c>
   17268:	add	r5, r2, #1
   1726c:	add	r3, r8, #1
   17270:	add	r3, r6, r3
   17274:	cmp	r7, r3
   17278:	bne	17304 <argp_error@@Base+0xefc>
   1727c:	ldr	r3, [r4, #32]
   17280:	sub	r3, r3, r5
   17284:	cmp	sl, r3
   17288:	bge	17314 <argp_error@@Base+0xf0c>
   1728c:	mov	r3, #10
   17290:	add	r9, r5, #1
   17294:	strb	r3, [r5]
   17298:	b	17394 <argp_error@@Base+0xf8c>
   1729c:	cmp	fp, r5
   172a0:	bls	172f8 <argp_error@@Base+0xef0>
   172a4:	add	r7, r5, #1
   172a8:	cmp	fp, r7
   172ac:	mov	r5, r7
   172b0:	beq	172f8 <argp_error@@Base+0xef0>
   172b4:	bl	11168 <__ctype_b_loc@plt>
   172b8:	ldrb	r2, [r5]
   172bc:	add	r7, r7, #1
   172c0:	lsl	r2, r2, #1
   172c4:	ldr	r1, [r0]
   172c8:	ldrh	r2, [r1, r2]
   172cc:	tst	r2, #1
   172d0:	beq	172a8 <argp_error@@Base+0xea0>
   172d4:	bl	11168 <__ctype_b_loc@plt>
   172d8:	mov	r7, r5
   172dc:	ldr	r2, [r0]
   172e0:	ldrb	r3, [r7, #1]!
   172e4:	lsl	r3, r3, #1
   172e8:	ldrh	r3, [r2, r3]
   172ec:	tst	r3, #1
   172f0:	bne	172e0 <argp_error@@Base+0xed8>
   172f4:	b	1726c <argp_error@@Base+0xe64>
   172f8:	cmp	fp, r5
   172fc:	bne	172d4 <argp_error@@Base+0xecc>
   17300:	b	17154 <argp_error@@Base+0xd4c>
   17304:	add	r3, r5, #1
   17308:	sub	r3, r7, r3
   1730c:	cmp	sl, r3
   17310:	ble	1728c <argp_error@@Base+0xe84>
   17314:	cmp	r7, r9
   17318:	bcs	1728c <argp_error@@Base+0xe84>
   1731c:	ldr	r3, [r4, #32]
   17320:	add	r0, sl, #1
   17324:	sub	r3, r3, r9
   17328:	cmp	r3, r0
   1732c:	ble	1735c <argp_error@@Base+0xf54>
   17330:	sub	r9, r9, r7
   17334:	mov	r2, r9
   17338:	mov	r1, r7
   1733c:	add	r0, r5, r0
   17340:	bl	11054 <memmove@plt>
   17344:	ldr	r7, [r4, #12]
   17348:	add	r7, r7, #1
   1734c:	add	r7, r5, r7
   17350:	add	r9, r7, r9
   17354:	sub	r8, r9, r6
   17358:	b	1728c <argp_error@@Base+0xe84>
   1735c:	ldr	r0, [r4, #24]
   17360:	cmp	r5, r0
   17364:	bls	17378 <argp_error@@Base+0xf70>
   17368:	ldr	r3, [r4]
   1736c:	sub	r2, r5, r0
   17370:	mov	r1, #1
   17374:	bl	110a8 <fwrite_unlocked@plt>
   17378:	ldr	r1, [r4]
   1737c:	mov	r0, #10
   17380:	bl	112f4 <putc_unlocked@plt>
   17384:	ldr	r9, [r4, #24]
   17388:	sub	r6, r6, r9
   1738c:	add	r8, r8, r6
   17390:	mov	r6, r9
   17394:	ldr	r2, [r4, #12]
   17398:	sub	r3, r7, r9
   1739c:	cmp	r3, r2
   173a0:	bge	173dc <argp_error@@Base+0xfd4>
   173a4:	add	r3, r8, #1
   173a8:	add	r3, r6, r3
   173ac:	cmp	r7, r3
   173b0:	bne	173c4 <argp_error@@Base+0xfbc>
   173b4:	ldr	r3, [r4, #32]
   173b8:	sub	r3, r3, r7
   173bc:	cmp	r2, r3
   173c0:	ble	173dc <argp_error@@Base+0xfd4>
   173c4:	mov	r5, #0
   173c8:	ldr	r3, [r4, #12]
   173cc:	cmp	r5, r3
   173d0:	blt	17440 <argp_error@@Base+0x1038>
   173d4:	mov	r3, r9
   173d8:	b	173f0 <argp_error@@Base+0xfe8>
   173dc:	mov	r3, r9
   173e0:	ldr	r1, [r4, #12]
   173e4:	sub	r2, r3, r9
   173e8:	cmp	r1, r2
   173ec:	bgt	17434 <argp_error@@Base+0x102c>
   173f0:	cmp	r3, r7
   173f4:	bcs	17410 <argp_error@@Base+0x1008>
   173f8:	add	r2, r6, r8
   173fc:	mov	r0, r3
   17400:	sub	r2, r2, r7
   17404:	mov	r1, r7
   17408:	bl	11054 <memmove@plt>
   1740c:	mov	r3, r0
   17410:	ldr	r2, [r4, #12]
   17414:	sub	r6, r7, r6
   17418:	sub	r6, r8, r6
   1741c:	cmp	r2, #0
   17420:	add	r6, r3, r6
   17424:	mvneq	r2, #0
   17428:	str	r6, [r4, #28]
   1742c:	str	r2, [r4, #20]
   17430:	b	171c8 <argp_error@@Base+0xdc0>
   17434:	mov	r2, #32
   17438:	strb	r2, [r3], #1
   1743c:	b	173e0 <argp_error@@Base+0xfd8>
   17440:	ldr	r1, [r4]
   17444:	mov	r0, #32
   17448:	bl	112f4 <putc_unlocked@plt>
   1744c:	add	r5, r5, #1
   17450:	b	173c8 <argp_error@@Base+0xfc0>
   17454:	push	{r4, lr}
   17458:	mov	r4, r0
   1745c:	bl	17044 <argp_error@@Base+0xc3c>
   17460:	ldr	r2, [r4, #28]
   17464:	ldr	r0, [r4, #24]
   17468:	cmp	r2, r0
   1746c:	bls	17480 <argp_error@@Base+0x1078>
   17470:	ldr	r3, [r4]
   17474:	sub	r2, r2, r0
   17478:	mov	r1, #1
   1747c:	bl	110a8 <fwrite_unlocked@plt>
   17480:	ldr	r0, [r4, #24]
   17484:	bl	12cbc <argp_parse@@Base+0xa9c>
   17488:	mov	r0, r4
   1748c:	pop	{r4, lr}
   17490:	b	12cbc <argp_parse@@Base+0xa9c>
   17494:	ldr	r3, [r0, #32]
   17498:	ldr	r2, [r0, #28]
   1749c:	sub	r3, r3, r2
   174a0:	cmp	r3, r1
   174a4:	bcc	174b0 <argp_error@@Base+0x10a8>
   174a8:	mov	r0, #1
   174ac:	bx	lr
   174b0:	push	{r4, r5, r6, lr}
   174b4:	mov	r4, r0
   174b8:	mov	r5, r1
   174bc:	bl	17044 <argp_error@@Base+0xc3c>
   174c0:	ldr	r0, [r4, #24]
   174c4:	ldr	r2, [r4, #28]
   174c8:	ldr	r3, [r4]
   174cc:	sub	r2, r2, r0
   174d0:	mov	r1, #1
   174d4:	bl	110a8 <fwrite_unlocked@plt>
   174d8:	ldr	r2, [r4, #28]
   174dc:	mov	r1, r0
   174e0:	ldr	r0, [r4, #24]
   174e4:	sub	r3, r2, r0
   174e8:	cmp	r1, r3
   174ec:	bne	17514 <argp_error@@Base+0x110c>
   174f0:	ldr	r1, [r4, #32]
   174f4:	mov	r3, #0
   174f8:	sub	r1, r1, r0
   174fc:	cmp	r5, r1
   17500:	str	r0, [r4, #28]
   17504:	str	r3, [r4, #16]
   17508:	bhi	1753c <argp_error@@Base+0x1134>
   1750c:	mov	r0, #1
   17510:	pop	{r4, r5, r6, pc}
   17514:	ldr	r3, [r4, #16]
   17518:	sub	r2, r2, r1
   1751c:	sub	r3, r3, r1
   17520:	str	r2, [r4, #28]
   17524:	str	r3, [r4, #16]
   17528:	sub	r2, r2, r0
   1752c:	add	r1, r0, r1
   17530:	bl	11054 <memmove@plt>
   17534:	mov	r0, #0
   17538:	pop	{r4, r5, r6, pc}
   1753c:	adds	r5, r5, r1
   17540:	bcc	17554 <argp_error@@Base+0x114c>
   17544:	bl	111bc <__errno_location@plt>
   17548:	mov	r3, #12
   1754c:	str	r3, [r0]
   17550:	b	17534 <argp_error@@Base+0x112c>
   17554:	mov	r1, r5
   17558:	bl	137ec <argp_parse@@Base+0x15cc>
   1755c:	cmp	r0, #0
   17560:	beq	17544 <argp_error@@Base+0x113c>
   17564:	add	r5, r0, r5
   17568:	str	r0, [r4, #24]
   1756c:	str	r5, [r4, #32]
   17570:	str	r0, [r4, #28]
   17574:	b	1750c <argp_error@@Base+0x1104>
   17578:	push	{r1, r2, r3}
   1757c:	push	{r0, r1, r2, r4, r5, r6, lr}
   17580:	mov	r4, r0
   17584:	mov	r1, #150	; 0x96
   17588:	add	r6, sp, #32
   1758c:	mov	r0, r4
   17590:	bl	17494 <argp_error@@Base+0x108c>
   17594:	cmp	r0, #0
   17598:	bne	175b0 <argp_error@@Base+0x11a8>
   1759c:	mvn	r0, #0
   175a0:	add	sp, sp, #12
   175a4:	pop	{r4, r5, r6, lr}
   175a8:	add	sp, sp, #12
   175ac:	bx	lr
   175b0:	ldr	r0, [r4, #28]
   175b4:	ldr	r5, [r4, #32]
   175b8:	mov	r3, r6
   175bc:	sub	r5, r5, r0
   175c0:	ldr	r2, [sp, #28]
   175c4:	mov	r1, r5
   175c8:	str	r6, [sp, #4]
   175cc:	bl	1124c <vsnprintf@plt>
   175d0:	cmp	r5, r0
   175d4:	addls	r1, r0, #1
   175d8:	bls	1758c <argp_error@@Base+0x1184>
   175dc:	ldr	r3, [r4, #28]
   175e0:	add	r3, r3, r0
   175e4:	str	r3, [r4, #28]
   175e8:	b	175a0 <argp_error@@Base+0x1198>
   175ec:	subs	r2, r1, #1
   175f0:	bxeq	lr
   175f4:	bcc	177cc <argp_error@@Base+0x13c4>
   175f8:	cmp	r0, r1
   175fc:	bls	177b0 <argp_error@@Base+0x13a8>
   17600:	tst	r1, r2
   17604:	beq	177bc <argp_error@@Base+0x13b4>
   17608:	clz	r3, r0
   1760c:	clz	r2, r1
   17610:	sub	r3, r2, r3
   17614:	rsbs	r3, r3, #31
   17618:	addne	r3, r3, r3, lsl #1
   1761c:	mov	r2, #0
   17620:	addne	pc, pc, r3, lsl #2
   17624:	nop			; (mov r0, r0)
   17628:	cmp	r0, r1, lsl #31
   1762c:	adc	r2, r2, r2
   17630:	subcs	r0, r0, r1, lsl #31
   17634:	cmp	r0, r1, lsl #30
   17638:	adc	r2, r2, r2
   1763c:	subcs	r0, r0, r1, lsl #30
   17640:	cmp	r0, r1, lsl #29
   17644:	adc	r2, r2, r2
   17648:	subcs	r0, r0, r1, lsl #29
   1764c:	cmp	r0, r1, lsl #28
   17650:	adc	r2, r2, r2
   17654:	subcs	r0, r0, r1, lsl #28
   17658:	cmp	r0, r1, lsl #27
   1765c:	adc	r2, r2, r2
   17660:	subcs	r0, r0, r1, lsl #27
   17664:	cmp	r0, r1, lsl #26
   17668:	adc	r2, r2, r2
   1766c:	subcs	r0, r0, r1, lsl #26
   17670:	cmp	r0, r1, lsl #25
   17674:	adc	r2, r2, r2
   17678:	subcs	r0, r0, r1, lsl #25
   1767c:	cmp	r0, r1, lsl #24
   17680:	adc	r2, r2, r2
   17684:	subcs	r0, r0, r1, lsl #24
   17688:	cmp	r0, r1, lsl #23
   1768c:	adc	r2, r2, r2
   17690:	subcs	r0, r0, r1, lsl #23
   17694:	cmp	r0, r1, lsl #22
   17698:	adc	r2, r2, r2
   1769c:	subcs	r0, r0, r1, lsl #22
   176a0:	cmp	r0, r1, lsl #21
   176a4:	adc	r2, r2, r2
   176a8:	subcs	r0, r0, r1, lsl #21
   176ac:	cmp	r0, r1, lsl #20
   176b0:	adc	r2, r2, r2
   176b4:	subcs	r0, r0, r1, lsl #20
   176b8:	cmp	r0, r1, lsl #19
   176bc:	adc	r2, r2, r2
   176c0:	subcs	r0, r0, r1, lsl #19
   176c4:	cmp	r0, r1, lsl #18
   176c8:	adc	r2, r2, r2
   176cc:	subcs	r0, r0, r1, lsl #18
   176d0:	cmp	r0, r1, lsl #17
   176d4:	adc	r2, r2, r2
   176d8:	subcs	r0, r0, r1, lsl #17
   176dc:	cmp	r0, r1, lsl #16
   176e0:	adc	r2, r2, r2
   176e4:	subcs	r0, r0, r1, lsl #16
   176e8:	cmp	r0, r1, lsl #15
   176ec:	adc	r2, r2, r2
   176f0:	subcs	r0, r0, r1, lsl #15
   176f4:	cmp	r0, r1, lsl #14
   176f8:	adc	r2, r2, r2
   176fc:	subcs	r0, r0, r1, lsl #14
   17700:	cmp	r0, r1, lsl #13
   17704:	adc	r2, r2, r2
   17708:	subcs	r0, r0, r1, lsl #13
   1770c:	cmp	r0, r1, lsl #12
   17710:	adc	r2, r2, r2
   17714:	subcs	r0, r0, r1, lsl #12
   17718:	cmp	r0, r1, lsl #11
   1771c:	adc	r2, r2, r2
   17720:	subcs	r0, r0, r1, lsl #11
   17724:	cmp	r0, r1, lsl #10
   17728:	adc	r2, r2, r2
   1772c:	subcs	r0, r0, r1, lsl #10
   17730:	cmp	r0, r1, lsl #9
   17734:	adc	r2, r2, r2
   17738:	subcs	r0, r0, r1, lsl #9
   1773c:	cmp	r0, r1, lsl #8
   17740:	adc	r2, r2, r2
   17744:	subcs	r0, r0, r1, lsl #8
   17748:	cmp	r0, r1, lsl #7
   1774c:	adc	r2, r2, r2
   17750:	subcs	r0, r0, r1, lsl #7
   17754:	cmp	r0, r1, lsl #6
   17758:	adc	r2, r2, r2
   1775c:	subcs	r0, r0, r1, lsl #6
   17760:	cmp	r0, r1, lsl #5
   17764:	adc	r2, r2, r2
   17768:	subcs	r0, r0, r1, lsl #5
   1776c:	cmp	r0, r1, lsl #4
   17770:	adc	r2, r2, r2
   17774:	subcs	r0, r0, r1, lsl #4
   17778:	cmp	r0, r1, lsl #3
   1777c:	adc	r2, r2, r2
   17780:	subcs	r0, r0, r1, lsl #3
   17784:	cmp	r0, r1, lsl #2
   17788:	adc	r2, r2, r2
   1778c:	subcs	r0, r0, r1, lsl #2
   17790:	cmp	r0, r1, lsl #1
   17794:	adc	r2, r2, r2
   17798:	subcs	r0, r0, r1, lsl #1
   1779c:	cmp	r0, r1
   177a0:	adc	r2, r2, r2
   177a4:	subcs	r0, r0, r1
   177a8:	mov	r0, r2
   177ac:	bx	lr
   177b0:	moveq	r0, #1
   177b4:	movne	r0, #0
   177b8:	bx	lr
   177bc:	clz	r2, r1
   177c0:	rsb	r2, r2, #31
   177c4:	lsr	r0, r0, r2
   177c8:	bx	lr
   177cc:	cmp	r0, #0
   177d0:	mvnne	r0, #0
   177d4:	b	17a74 <argp_error@@Base+0x166c>
   177d8:	cmp	r1, #0
   177dc:	beq	177cc <argp_error@@Base+0x13c4>
   177e0:	push	{r0, r1, lr}
   177e4:	bl	175ec <argp_error@@Base+0x11e4>
   177e8:	pop	{r1, r2, lr}
   177ec:	mul	r3, r2, r0
   177f0:	sub	r1, r1, r3
   177f4:	bx	lr
   177f8:	cmp	r1, #0
   177fc:	beq	17a08 <argp_error@@Base+0x1600>
   17800:	eor	ip, r0, r1
   17804:	rsbmi	r1, r1, #0
   17808:	subs	r2, r1, #1
   1780c:	beq	179d4 <argp_error@@Base+0x15cc>
   17810:	movs	r3, r0
   17814:	rsbmi	r3, r0, #0
   17818:	cmp	r3, r1
   1781c:	bls	179e0 <argp_error@@Base+0x15d8>
   17820:	tst	r1, r2
   17824:	beq	179f0 <argp_error@@Base+0x15e8>
   17828:	clz	r2, r3
   1782c:	clz	r0, r1
   17830:	sub	r2, r0, r2
   17834:	rsbs	r2, r2, #31
   17838:	addne	r2, r2, r2, lsl #1
   1783c:	mov	r0, #0
   17840:	addne	pc, pc, r2, lsl #2
   17844:	nop			; (mov r0, r0)
   17848:	cmp	r3, r1, lsl #31
   1784c:	adc	r0, r0, r0
   17850:	subcs	r3, r3, r1, lsl #31
   17854:	cmp	r3, r1, lsl #30
   17858:	adc	r0, r0, r0
   1785c:	subcs	r3, r3, r1, lsl #30
   17860:	cmp	r3, r1, lsl #29
   17864:	adc	r0, r0, r0
   17868:	subcs	r3, r3, r1, lsl #29
   1786c:	cmp	r3, r1, lsl #28
   17870:	adc	r0, r0, r0
   17874:	subcs	r3, r3, r1, lsl #28
   17878:	cmp	r3, r1, lsl #27
   1787c:	adc	r0, r0, r0
   17880:	subcs	r3, r3, r1, lsl #27
   17884:	cmp	r3, r1, lsl #26
   17888:	adc	r0, r0, r0
   1788c:	subcs	r3, r3, r1, lsl #26
   17890:	cmp	r3, r1, lsl #25
   17894:	adc	r0, r0, r0
   17898:	subcs	r3, r3, r1, lsl #25
   1789c:	cmp	r3, r1, lsl #24
   178a0:	adc	r0, r0, r0
   178a4:	subcs	r3, r3, r1, lsl #24
   178a8:	cmp	r3, r1, lsl #23
   178ac:	adc	r0, r0, r0
   178b0:	subcs	r3, r3, r1, lsl #23
   178b4:	cmp	r3, r1, lsl #22
   178b8:	adc	r0, r0, r0
   178bc:	subcs	r3, r3, r1, lsl #22
   178c0:	cmp	r3, r1, lsl #21
   178c4:	adc	r0, r0, r0
   178c8:	subcs	r3, r3, r1, lsl #21
   178cc:	cmp	r3, r1, lsl #20
   178d0:	adc	r0, r0, r0
   178d4:	subcs	r3, r3, r1, lsl #20
   178d8:	cmp	r3, r1, lsl #19
   178dc:	adc	r0, r0, r0
   178e0:	subcs	r3, r3, r1, lsl #19
   178e4:	cmp	r3, r1, lsl #18
   178e8:	adc	r0, r0, r0
   178ec:	subcs	r3, r3, r1, lsl #18
   178f0:	cmp	r3, r1, lsl #17
   178f4:	adc	r0, r0, r0
   178f8:	subcs	r3, r3, r1, lsl #17
   178fc:	cmp	r3, r1, lsl #16
   17900:	adc	r0, r0, r0
   17904:	subcs	r3, r3, r1, lsl #16
   17908:	cmp	r3, r1, lsl #15
   1790c:	adc	r0, r0, r0
   17910:	subcs	r3, r3, r1, lsl #15
   17914:	cmp	r3, r1, lsl #14
   17918:	adc	r0, r0, r0
   1791c:	subcs	r3, r3, r1, lsl #14
   17920:	cmp	r3, r1, lsl #13
   17924:	adc	r0, r0, r0
   17928:	subcs	r3, r3, r1, lsl #13
   1792c:	cmp	r3, r1, lsl #12
   17930:	adc	r0, r0, r0
   17934:	subcs	r3, r3, r1, lsl #12
   17938:	cmp	r3, r1, lsl #11
   1793c:	adc	r0, r0, r0
   17940:	subcs	r3, r3, r1, lsl #11
   17944:	cmp	r3, r1, lsl #10
   17948:	adc	r0, r0, r0
   1794c:	subcs	r3, r3, r1, lsl #10
   17950:	cmp	r3, r1, lsl #9
   17954:	adc	r0, r0, r0
   17958:	subcs	r3, r3, r1, lsl #9
   1795c:	cmp	r3, r1, lsl #8
   17960:	adc	r0, r0, r0
   17964:	subcs	r3, r3, r1, lsl #8
   17968:	cmp	r3, r1, lsl #7
   1796c:	adc	r0, r0, r0
   17970:	subcs	r3, r3, r1, lsl #7
   17974:	cmp	r3, r1, lsl #6
   17978:	adc	r0, r0, r0
   1797c:	subcs	r3, r3, r1, lsl #6
   17980:	cmp	r3, r1, lsl #5
   17984:	adc	r0, r0, r0
   17988:	subcs	r3, r3, r1, lsl #5
   1798c:	cmp	r3, r1, lsl #4
   17990:	adc	r0, r0, r0
   17994:	subcs	r3, r3, r1, lsl #4
   17998:	cmp	r3, r1, lsl #3
   1799c:	adc	r0, r0, r0
   179a0:	subcs	r3, r3, r1, lsl #3
   179a4:	cmp	r3, r1, lsl #2
   179a8:	adc	r0, r0, r0
   179ac:	subcs	r3, r3, r1, lsl #2
   179b0:	cmp	r3, r1, lsl #1
   179b4:	adc	r0, r0, r0
   179b8:	subcs	r3, r3, r1, lsl #1
   179bc:	cmp	r3, r1
   179c0:	adc	r0, r0, r0
   179c4:	subcs	r3, r3, r1
   179c8:	cmp	ip, #0
   179cc:	rsbmi	r0, r0, #0
   179d0:	bx	lr
   179d4:	teq	ip, r0
   179d8:	rsbmi	r0, r0, #0
   179dc:	bx	lr
   179e0:	movcc	r0, #0
   179e4:	asreq	r0, ip, #31
   179e8:	orreq	r0, r0, #1
   179ec:	bx	lr
   179f0:	clz	r2, r1
   179f4:	rsb	r2, r2, #31
   179f8:	cmp	ip, #0
   179fc:	lsr	r0, r3, r2
   17a00:	rsbmi	r0, r0, #0
   17a04:	bx	lr
   17a08:	cmp	r0, #0
   17a0c:	mvngt	r0, #-2147483648	; 0x80000000
   17a10:	movlt	r0, #-2147483648	; 0x80000000
   17a14:	b	17a74 <argp_error@@Base+0x166c>
   17a18:	cmp	r1, #0
   17a1c:	beq	17a08 <argp_error@@Base+0x1600>
   17a20:	push	{r0, r1, lr}
   17a24:	bl	17800 <argp_error@@Base+0x13f8>
   17a28:	pop	{r1, r2, lr}
   17a2c:	mul	r3, r2, r0
   17a30:	sub	r1, r1, r3
   17a34:	bx	lr
   17a38:	cmp	r3, #0
   17a3c:	cmpeq	r2, #0
   17a40:	bne	17a58 <argp_error@@Base+0x1650>
   17a44:	cmp	r1, #0
   17a48:	cmpeq	r0, #0
   17a4c:	mvnne	r1, #0
   17a50:	mvnne	r0, #0
   17a54:	b	17a74 <argp_error@@Base+0x166c>
   17a58:	sub	sp, sp, #8
   17a5c:	push	{sp, lr}
   17a60:	bl	17a84 <argp_error@@Base+0x167c>
   17a64:	ldr	lr, [sp, #4]
   17a68:	add	sp, sp, #8
   17a6c:	pop	{r2, r3}
   17a70:	bx	lr
   17a74:	push	{r1, lr}
   17a78:	mov	r0, #8
   17a7c:	bl	11018 <raise@plt>
   17a80:	pop	{r1, pc}
   17a84:	cmp	r1, r3
   17a88:	push	{r4, r5, r6, r7, r8, r9, lr}
   17a8c:	cmpeq	r0, r2
   17a90:	mov	r4, r0
   17a94:	mov	r5, r1
   17a98:	ldr	r9, [sp, #28]
   17a9c:	movcc	r0, #0
   17aa0:	movcc	r1, #0
   17aa4:	bcc	17b9c <argp_error@@Base+0x1794>
   17aa8:	cmp	r3, #0
   17aac:	clzeq	ip, r2
   17ab0:	clzne	ip, r3
   17ab4:	addeq	ip, ip, #32
   17ab8:	cmp	r5, #0
   17abc:	clzeq	r1, r4
   17ac0:	addeq	r1, r1, #32
   17ac4:	clzne	r1, r5
   17ac8:	sub	ip, ip, r1
   17acc:	sub	lr, ip, #32
   17ad0:	lsl	r7, r3, ip
   17ad4:	rsb	r8, ip, #32
   17ad8:	orr	r7, r7, r2, lsl lr
   17adc:	orr	r7, r7, r2, lsr r8
   17ae0:	lsl	r6, r2, ip
   17ae4:	cmp	r5, r7
   17ae8:	cmpeq	r4, r6
   17aec:	movcc	r0, #0
   17af0:	movcc	r1, #0
   17af4:	bcc	17b10 <argp_error@@Base+0x1708>
   17af8:	mov	r3, #1
   17afc:	subs	r4, r4, r6
   17b00:	lsl	r1, r3, lr
   17b04:	lsl	r0, r3, ip
   17b08:	orr	r1, r1, r3, lsr r8
   17b0c:	sbc	r5, r5, r7
   17b10:	cmp	ip, #0
   17b14:	beq	17b9c <argp_error@@Base+0x1794>
   17b18:	lsrs	r3, r7, #1
   17b1c:	rrx	r2, r6
   17b20:	mov	r6, ip
   17b24:	b	17b48 <argp_error@@Base+0x1740>
   17b28:	subs	r4, r4, r2
   17b2c:	sbc	r5, r5, r3
   17b30:	adds	r4, r4, r4
   17b34:	adc	r5, r5, r5
   17b38:	adds	r4, r4, #1
   17b3c:	adc	r5, r5, #0
   17b40:	subs	r6, r6, #1
   17b44:	beq	17b64 <argp_error@@Base+0x175c>
   17b48:	cmp	r5, r3
   17b4c:	cmpeq	r4, r2
   17b50:	bcs	17b28 <argp_error@@Base+0x1720>
   17b54:	adds	r4, r4, r4
   17b58:	adc	r5, r5, r5
   17b5c:	subs	r6, r6, #1
   17b60:	bne	17b48 <argp_error@@Base+0x1740>
   17b64:	lsr	r6, r4, ip
   17b68:	lsr	r7, r5, ip
   17b6c:	orr	r6, r6, r5, lsl r8
   17b70:	adds	r2, r0, r4
   17b74:	orr	r6, r6, r5, lsr lr
   17b78:	adc	r3, r1, r5
   17b7c:	lsl	r1, r7, ip
   17b80:	orr	r1, r1, r6, lsl lr
   17b84:	lsl	r0, r6, ip
   17b88:	orr	r1, r1, r6, lsr r8
   17b8c:	subs	r0, r2, r0
   17b90:	mov	r4, r6
   17b94:	mov	r5, r7
   17b98:	sbc	r1, r3, r1
   17b9c:	cmp	r9, #0
   17ba0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   17ba4:	strd	r4, [r9]
   17ba8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17bac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17bb0:	mov	r7, r0
   17bb4:	ldr	r6, [pc, #72]	; 17c04 <argp_error@@Base+0x17fc>
   17bb8:	ldr	r5, [pc, #72]	; 17c08 <argp_error@@Base+0x1800>
   17bbc:	add	r6, pc, r6
   17bc0:	add	r5, pc, r5
   17bc4:	sub	r6, r6, r5
   17bc8:	mov	r8, r1
   17bcc:	mov	r9, r2
   17bd0:	bl	10fe0 <calloc@plt-0x20>
   17bd4:	asrs	r6, r6, #2
   17bd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bdc:	mov	r4, #0
   17be0:	add	r4, r4, #1
   17be4:	ldr	r3, [r5], #4
   17be8:	mov	r2, r9
   17bec:	mov	r1, r8
   17bf0:	mov	r0, r7
   17bf4:	blx	r3
   17bf8:	cmp	r6, r4
   17bfc:	bne	17be0 <argp_error@@Base+0x17d8>
   17c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c04:	andeq	r1, r1, r4, asr #6
   17c08:	andeq	r1, r1, ip, lsr r3
   17c0c:	bx	lr

Disassembly of section .fini:

00017c10 <.fini>:
   17c10:	push	{r3, lr}
   17c14:	pop	{r3, pc}
