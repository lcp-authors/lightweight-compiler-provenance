
../repos/inetutils/src/logger:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	117cc <__assert_fail@plt+0x4d8>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <calloc@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <calloc@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	ip, r1, r4

00011000 <calloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #28, 20	; 0x1c000
   11008:	ldr	pc, [ip, #4]!

0001100c <fputs_unlocked@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #110592	; 0x1b000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <raise@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #110592	; 0x1b000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <__getdelim@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #110592	; 0x1b000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <strcmp@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #110592	; 0x1b000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <strtol@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #110592	; 0x1b000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <getpwuid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #110592	; 0x1b000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <printf@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #110592	; 0x1b000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <getuid@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #110592	; 0x1b000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <memmove@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #110592	; 0x1b000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <strchrnul@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #110592	; 0x1b000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <free@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #110592	; 0x1b000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <gai_strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #110592	; 0x1b000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <strndup@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #110592	; 0x1b000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #110592	; 0x1b000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <time@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #110592	; 0x1b000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <fwrite_unlocked@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #110592	; 0x1b000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <sleep@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #110592	; 0x1b000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <ctime@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #110592	; 0x1b000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <realloc@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #110592	; 0x1b000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <strcasecmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #110592	; 0x1b000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <funlockfile@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #110592	; 0x1b000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <fwrite@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #110592	; 0x1b000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #110592	; 0x1b000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #110592	; 0x1b000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #110592	; 0x1b000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #110592	; 0x1b000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #110592	; 0x1b000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #110592	; 0x1b000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <__ctype_tolower_loc@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #110592	; 0x1b000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <__gmon_start__@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #110592	; 0x1b000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <freopen64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #110592	; 0x1b000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <mempcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #110592	; 0x1b000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <__ctype_b_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #110592	; 0x1b000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <getpid@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #110592	; 0x1b000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <exit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #110592	; 0x1b000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <strtoul@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #110592	; 0x1b000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #110592	; 0x1b000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #110592	; 0x1b000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #110592	; 0x1b000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <__errno_location@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #110592	; 0x1b000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <strerror_r@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #110592	; 0x1b000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <bind@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #110592	; 0x1b000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <memset@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #110592	; 0x1b000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <fileno@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #110592	; 0x1b000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <asprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #110592	; 0x1b000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #110592	; 0x1b000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <writev@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #110592	; 0x1b000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #110592	; 0x1b000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <strrchr@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #110592	; 0x1b000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <vfprintf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #110592	; 0x1b000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <fputc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #110592	; 0x1b000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <flockfile@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #110592	; 0x1b000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <vsnprintf@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #110592	; 0x1b000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <qsort@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #110592	; 0x1b000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <freeaddrinfo@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #110592	; 0x1b000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <getaddrinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #110592	; 0x1b000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <socket@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #110592	; 0x1b000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #110592	; 0x1b000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #110592	; 0x1b000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #110592	; 0x1b000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <send@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #110592	; 0x1b000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <connect@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #110592	; 0x1b000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <__assert_fail@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #110592	; 0x1b000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

00011300 <argp_parse@@Base-0x1814>:
   11300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11304:	sub	sp, sp, #180	; 0xb4
   11308:	mov	r4, #0
   1130c:	mov	r8, r0
   11310:	ldr	r0, [r1]
   11314:	mov	r5, r1
   11318:	str	r4, [sp, #20]
   1131c:	bl	13c00 <argp_parse@@Base+0x10ec>
   11320:	ldr	r3, [pc, #1060]	; 1174c <__assert_fail@plt+0x458>
   11324:	ldr	r2, [pc, #1060]	; 11750 <__assert_fail@plt+0x45c>
   11328:	ldr	r1, [pc, #1060]	; 11754 <__assert_fail@plt+0x460>
   1132c:	ldr	r0, [pc, #1060]	; 11758 <__assert_fail@plt+0x464>
   11330:	ldr	r6, [pc, #1060]	; 1175c <__assert_fail@plt+0x468>
   11334:	str	r2, [r3]
   11338:	bl	139bc <argp_parse@@Base+0xea8>
   1133c:	add	r0, sp, #16
   11340:	mov	r3, r4
   11344:	mov	r1, r8
   11348:	str	r0, [sp]
   1134c:	str	r4, [sp, #4]
   11350:	mov	r2, r5
   11354:	ldr	r0, [pc, #1028]	; 11760 <__assert_fail@plt+0x46c>
   11358:	bl	12b14 <argp_parse@@Base>
   1135c:	ldr	r3, [r6, #8]
   11360:	ldr	fp, [sp, #16]
   11364:	cmp	r3, r4
   11368:	sub	r8, r8, fp
   1136c:	beq	11640 <__assert_fail@plt+0x34c>
   11370:	ldr	r7, [pc, #1004]	; 11764 <__assert_fail@plt+0x470>
   11374:	ldr	r4, [r6, #16]
   11378:	ldr	r9, [r7, #292]	; 0x124
   1137c:	cmp	r9, #0
   11380:	beq	114d8 <__assert_fail@plt+0x1e4>
   11384:	mov	r1, #47	; 0x2f
   11388:	mov	r0, r9
   1138c:	bl	111c8 <strchr@plt>
   11390:	cmp	r0, #0
   11394:	beq	114d8 <__assert_fail@plt+0x1e4>
   11398:	cmp	r4, #0
   1139c:	moveq	r4, r9
   113a0:	beq	113a8 <__assert_fail@plt+0xb4>
   113a4:	str	r4, [r7, #292]	; 0x124
   113a8:	mov	r0, r4
   113ac:	bl	111bc <strlen@plt>
   113b0:	cmp	r0, #107	; 0x6b
   113b4:	bhi	114a8 <__assert_fail@plt+0x1b4>
   113b8:	mov	r1, r4
   113bc:	add	r0, sp, #66	; 0x42
   113c0:	mov	r4, #1
   113c4:	bl	11114 <strcpy@plt>
   113c8:	mov	r0, r4
   113cc:	mov	r2, #0
   113d0:	mov	r1, #2
   113d4:	strh	r4, [sp, #64]	; 0x40
   113d8:	bl	112ac <socket@plt>
   113dc:	ldr	r6, [pc, #900]	; 11768 <__assert_fail@plt+0x474>
   113e0:	cmp	r0, #0
   113e4:	str	r0, [r6]
   113e8:	blt	11624 <__assert_fail@plt+0x330>
   113ec:	mov	r2, #110	; 0x6e
   113f0:	add	r1, sp, #64	; 0x40
   113f4:	bl	112e8 <connect@plt>
   113f8:	cmp	r0, #0
   113fc:	bne	114c0 <__assert_fail@plt+0x1cc>
   11400:	cmp	r8, #0
   11404:	ble	115e4 <__assert_fail@plt+0x2f0>
   11408:	add	fp, r5, fp, lsl #2
   1140c:	mov	r4, fp
   11410:	add	r6, fp, r8, lsl #2
   11414:	mov	r5, #0
   11418:	ldr	r0, [r4], #4
   1141c:	bl	111bc <strlen@plt>
   11420:	cmp	r6, r4
   11424:	add	r0, r0, #1
   11428:	add	r5, r5, r0
   1142c:	bne	11418 <__assert_fail@plt+0x124>
   11430:	mov	r0, r5
   11434:	bl	14a20 <argp_parse@@Base+0x1f0c>
   11438:	sub	fp, fp, #4
   1143c:	mov	r5, #0
   11440:	mov	r9, #32
   11444:	mov	sl, r0
   11448:	mov	r6, r0
   1144c:	str	r0, [sp, #20]
   11450:	ldr	r7, [fp, #4]!
   11454:	add	r5, r5, #1
   11458:	mov	r0, r7
   1145c:	bl	111bc <strlen@plt>
   11460:	mov	r1, r7
   11464:	mov	r2, r0
   11468:	mov	r4, r0
   1146c:	mov	r0, r6
   11470:	bl	110a8 <memcpy@plt>
   11474:	add	r2, r6, r4
   11478:	cmp	r8, r5
   1147c:	strb	r9, [r2]
   11480:	add	r6, r2, #1
   11484:	bne	11450 <__assert_fail@plt+0x15c>
   11488:	mov	r3, #0
   1148c:	mov	r0, sl
   11490:	strb	r3, [r2]
   11494:	bl	118b8 <__assert_fail@plt+0x5c4>
   11498:	ldr	r0, [sp, #20]
   1149c:	bl	13a90 <argp_parse@@Base+0xf7c>
   114a0:	mov	r0, #0
   114a4:	bl	111a4 <exit@plt>
   114a8:	ldr	r2, [pc, #700]	; 1176c <__assert_fail@plt+0x478>
   114ac:	mov	r1, #0
   114b0:	mov	r0, #1
   114b4:	bl	11120 <error@plt>
   114b8:	ldr	r4, [r7, #292]	; 0x124
   114bc:	b	113b8 <__assert_fail@plt+0xc4>
   114c0:	bl	111e0 <__errno_location@plt>
   114c4:	ldr	r2, [pc, #676]	; 11770 <__assert_fail@plt+0x47c>
   114c8:	ldr	r1, [r0]
   114cc:	mov	r0, #1
   114d0:	bl	11120 <error@plt>
   114d4:	b	11400 <__assert_fail@plt+0x10c>
   114d8:	cmp	r4, #0
   114dc:	bne	113a4 <__assert_fail@plt+0xb0>
   114e0:	ldrb	r3, [r9]
   114e4:	cmp	r3, #91	; 0x5b
   114e8:	beq	116b0 <__assert_fail@plt+0x3bc>
   114ec:	mov	r0, r9
   114f0:	mov	r1, #58	; 0x3a
   114f4:	bl	1124c <strrchr@plt>
   114f8:	cmp	r0, #0
   114fc:	beq	116e4 <__assert_fail@plt+0x3f0>
   11500:	adds	r3, r0, #1
   11504:	str	r3, [sp, #12]
   11508:	strb	r4, [r0]
   1150c:	beq	116e4 <__assert_fail@plt+0x3f0>
   11510:	mov	r2, #32
   11514:	mov	r1, #0
   11518:	add	r0, sp, #32
   1151c:	bl	11204 <memset@plt>
   11520:	ldr	r0, [r6, #12]
   11524:	mov	ip, #2
   11528:	str	r0, [sp, #36]	; 0x24
   1152c:	add	r2, sp, #32
   11530:	add	r3, sp, #24
   11534:	ldr	r1, [sp, #12]
   11538:	ldr	r0, [r7, #292]	; 0x124
   1153c:	str	ip, [sp, #40]	; 0x28
   11540:	bl	112a0 <getaddrinfo@plt>
   11544:	cmp	r0, #0
   11548:	blt	11720 <__assert_fail@plt+0x42c>
   1154c:	ldr	r4, [sp, #24]
   11550:	ldr	sl, [pc, #528]	; 11768 <__assert_fail@plt+0x474>
   11554:	cmp	r4, #0
   11558:	beq	116f0 <__assert_fail@plt+0x3fc>
   1155c:	ldmib	r4, {r0, r1, r2}
   11560:	bl	112ac <socket@plt>
   11564:	cmp	r0, #0
   11568:	str	r0, [sl]
   1156c:	blt	115dc <__assert_fail@plt+0x2e8>
   11570:	ldr	r9, [r6, #20]
   11574:	cmp	r9, #0
   11578:	beq	11684 <__assert_fail@plt+0x390>
   1157c:	mov	r2, #32
   11580:	mov	r1, #0
   11584:	add	r0, sp, #64	; 0x40
   11588:	bl	11204 <memset@plt>
   1158c:	ldr	ip, [r4, #4]
   11590:	mov	r0, r9
   11594:	add	r3, sp, #28
   11598:	add	r2, sp, #64	; 0x40
   1159c:	mov	r1, #0
   115a0:	str	ip, [sp, #68]	; 0x44
   115a4:	bl	112a0 <getaddrinfo@plt>
   115a8:	cmp	r0, #0
   115ac:	bne	11674 <__assert_fail@plt+0x380>
   115b0:	ldr	r3, [sp, #28]
   115b4:	ldr	r0, [sl]
   115b8:	ldr	r2, [r3, #16]
   115bc:	ldr	r1, [r3, #20]
   115c0:	bl	111f8 <bind@plt>
   115c4:	cmp	r0, #0
   115c8:	ldr	r0, [sp, #28]
   115cc:	beq	11680 <__assert_fail@plt+0x38c>
   115d0:	bl	11294 <freeaddrinfo@plt>
   115d4:	ldr	r0, [sl]
   115d8:	bl	112d0 <close@plt>
   115dc:	ldr	r4, [r4, #28]
   115e0:	b	11554 <__assert_fail@plt+0x260>
   115e4:	add	r4, sp, #176	; 0xb0
   115e8:	mov	r3, #0
   115ec:	str	r3, [r4, #-112]!	; 0xffffff90
   115f0:	ldr	r6, [pc, #380]	; 11774 <__assert_fail@plt+0x480>
   115f4:	mov	r5, #10
   115f8:	b	11604 <__assert_fail@plt+0x310>
   115fc:	ldr	r0, [sp, #20]
   11600:	bl	118b8 <__assert_fail@plt+0x5c4>
   11604:	ldr	r3, [r6]
   11608:	mov	r2, r5
   1160c:	mov	r1, r4
   11610:	add	r0, sp, #20
   11614:	bl	11024 <__getdelim@plt>
   11618:	cmp	r0, #0
   1161c:	bgt	115fc <__assert_fail@plt+0x308>
   11620:	b	11498 <__assert_fail@plt+0x1a4>
   11624:	bl	111e0 <__errno_location@plt>
   11628:	ldr	r2, [pc, #328]	; 11778 <__assert_fail@plt+0x484>
   1162c:	ldr	r1, [r0]
   11630:	mov	r0, r4
   11634:	bl	11120 <error@plt>
   11638:	ldr	r0, [r6]
   1163c:	b	113ec <__assert_fail@plt+0xf8>
   11640:	ldr	r0, [pc, #308]	; 1177c <__assert_fail@plt+0x488>
   11644:	bl	1112c <getenv@plt>
   11648:	cmp	r0, r4
   1164c:	str	r0, [r6, #8]
   11650:	bne	11370 <__assert_fail@plt+0x7c>
   11654:	bl	11060 <getuid@plt>
   11658:	bl	11048 <getpwuid@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r0, [r0]
   11664:	ldreq	r0, [pc, #276]	; 11780 <__assert_fail@plt+0x48c>
   11668:	bl	15030 <argp_parse@@Base+0x251c>
   1166c:	str	r0, [r6, #8]
   11670:	b	11370 <__assert_fail@plt+0x7c>
   11674:	ldr	r0, [sl]
   11678:	bl	112d0 <close@plt>
   1167c:	b	115dc <__assert_fail@plt+0x2e8>
   11680:	bl	11294 <freeaddrinfo@plt>
   11684:	ldr	r2, [r4, #16]
   11688:	ldr	r1, [r4, #20]
   1168c:	ldr	r0, [sl]
   11690:	bl	112e8 <connect@plt>
   11694:	cmp	r0, #0
   11698:	bne	11674 <__assert_fail@plt+0x380>
   1169c:	ldr	r0, [sp, #24]
   116a0:	cmp	r0, #0
   116a4:	beq	11400 <__assert_fail@plt+0x10c>
   116a8:	bl	11294 <freeaddrinfo@plt>
   116ac:	b	11400 <__assert_fail@plt+0x10c>
   116b0:	add	r9, r9, #1
   116b4:	mov	r0, r9
   116b8:	mov	r1, #93	; 0x5d
   116bc:	str	r9, [r7, #292]	; 0x124
   116c0:	bl	111c8 <strchr@plt>
   116c4:	cmp	r0, #0
   116c8:	beq	116e4 <__assert_fail@plt+0x3f0>
   116cc:	ldrb	r3, [r0, #1]
   116d0:	strb	r4, [r0]
   116d4:	cmp	r3, #58	; 0x3a
   116d8:	addeq	r3, r0, #2
   116dc:	streq	r3, [sp, #12]
   116e0:	beq	11510 <__assert_fail@plt+0x21c>
   116e4:	ldr	r3, [pc, #152]	; 11784 <__assert_fail@plt+0x490>
   116e8:	str	r3, [sp, #12]
   116ec:	b	11510 <__assert_fail@plt+0x21c>
   116f0:	ldr	r0, [sp, #24]
   116f4:	cmp	r0, #0
   116f8:	beq	11700 <__assert_fail@plt+0x40c>
   116fc:	bl	11294 <freeaddrinfo@plt>
   11700:	ldr	r3, [sp, #12]
   11704:	ldr	r2, [pc, #124]	; 11788 <__assert_fail@plt+0x494>
   11708:	str	r3, [sp]
   1170c:	mov	r1, #99	; 0x63
   11710:	ldr	r3, [r7, #292]	; 0x124
   11714:	mov	r0, #1
   11718:	bl	11120 <error@plt>
   1171c:	b	11400 <__assert_fail@plt+0x10c>
   11720:	ldr	r4, [r7, #292]	; 0x124
   11724:	bl	11090 <gai_strerror@plt>
   11728:	ldr	r2, [sp, #12]
   1172c:	mov	r3, r4
   11730:	str	r2, [sp]
   11734:	mov	r1, #0
   11738:	ldr	r2, [pc, #76]	; 1178c <__assert_fail@plt+0x498>
   1173c:	str	r0, [sp, #4]
   11740:	mov	r0, #1
   11744:	bl	11120 <error@plt>
   11748:	b	1154c <__assert_fail@plt+0x258>
   1174c:	andeq	sp, r2, r8, lsl r4
   11750:	andeq	fp, r1, r0, lsr #28
   11754:	andeq	sp, r2, r0, asr #4
   11758:	andeq	fp, r1, r8, lsr lr
   1175c:	andeq	sp, r2, r4, asr #7
   11760:	andeq	sp, r2, r8, asr #4
   11764:	andeq	sp, r2, r8, lsl r1
   11768:	andeq	sp, r2, r4, lsl r4
   1176c:	andeq	fp, r1, r0, asr lr
   11770:	muleq	r1, r8, lr
   11774:			; <UNDEFINED> instruction: 0x0002d3b8
   11778:	andeq	fp, r1, r0, lsl #29
   1177c:	andeq	fp, r1, r0, asr #28
   11780:	andeq	fp, r1, r8, asr #28
   11784:	andeq	fp, r1, r8, lsl lr
   11788:	andeq	fp, r1, r8, ror lr
   1178c:	andeq	fp, r1, ip, ror #28
   11790:	mov	fp, #0
   11794:	mov	lr, #0
   11798:	pop	{r1}		; (ldr r1, [sp], #4)
   1179c:	mov	r2, sp
   117a0:	push	{r2}		; (str r2, [sp, #-4]!)
   117a4:	push	{r0}		; (str r0, [sp, #-4]!)
   117a8:	ldr	ip, [pc, #16]	; 117c0 <__assert_fail@plt+0x4cc>
   117ac:	push	{ip}		; (str ip, [sp, #-4]!)
   117b0:	ldr	r0, [pc, #12]	; 117c4 <__assert_fail@plt+0x4d0>
   117b4:	ldr	r3, [pc, #12]	; 117c8 <__assert_fail@plt+0x4d4>
   117b8:	bl	11144 <__libc_start_main@plt>
   117bc:	bl	112c4 <abort@plt>
   117c0:	andeq	fp, r1, r8, lsl sp
   117c4:	andeq	r1, r1, r0, lsl #6
   117c8:			; <UNDEFINED> instruction: 0x0001bcb8
   117cc:	ldr	r3, [pc, #20]	; 117e8 <__assert_fail@plt+0x4f4>
   117d0:	ldr	r2, [pc, #20]	; 117ec <__assert_fail@plt+0x4f8>
   117d4:	add	r3, pc, r3
   117d8:	ldr	r2, [r3, r2]
   117dc:	cmp	r2, #0
   117e0:	bxeq	lr
   117e4:	b	11168 <__gmon_start__@plt>
   117e8:	andeq	fp, r1, r4, lsr #16
   117ec:	andeq	r0, r0, ip, lsl #2
   117f0:	ldr	r3, [pc, #28]	; 11814 <__assert_fail@plt+0x520>
   117f4:	ldr	r0, [pc, #28]	; 11818 <__assert_fail@plt+0x524>
   117f8:	sub	r3, r3, r0
   117fc:	cmp	r3, #6
   11800:	bxls	lr
   11804:	ldr	r3, [pc, #16]	; 1181c <__assert_fail@plt+0x528>
   11808:	cmp	r3, #0
   1180c:	bxeq	lr
   11810:	bx	r3
   11814:	andeq	sp, r2, fp, lsr #7
   11818:	andeq	sp, r2, r8, lsr #7
   1181c:	andeq	r0, r0, r0
   11820:	ldr	r1, [pc, #36]	; 1184c <__assert_fail@plt+0x558>
   11824:	ldr	r0, [pc, #36]	; 11850 <__assert_fail@plt+0x55c>
   11828:	sub	r1, r1, r0
   1182c:	asr	r1, r1, #2
   11830:	add	r1, r1, r1, lsr #31
   11834:	asrs	r1, r1, #1
   11838:	bxeq	lr
   1183c:	ldr	r3, [pc, #16]	; 11854 <__assert_fail@plt+0x560>
   11840:	cmp	r3, #0
   11844:	bxeq	lr
   11848:	bx	r3
   1184c:	andeq	sp, r2, r8, lsr #7
   11850:	andeq	sp, r2, r8, lsr #7
   11854:	andeq	r0, r0, r0
   11858:	push	{r4, lr}
   1185c:	ldr	r4, [pc, #24]	; 1187c <__assert_fail@plt+0x588>
   11860:	ldrb	r3, [r4]
   11864:	cmp	r3, #0
   11868:	popne	{r4, pc}
   1186c:	bl	117f0 <__assert_fail@plt+0x4fc>
   11870:	mov	r3, #1
   11874:	strb	r3, [r4]
   11878:	pop	{r4, pc}
   1187c:	andeq	sp, r2, r0, asr #7
   11880:	ldr	r0, [pc, #40]	; 118b0 <__assert_fail@plt+0x5bc>
   11884:	ldr	r3, [r0]
   11888:	cmp	r3, #0
   1188c:	bne	11894 <__assert_fail@plt+0x5a0>
   11890:	b	11820 <__assert_fail@plt+0x52c>
   11894:	ldr	r3, [pc, #24]	; 118b4 <__assert_fail@plt+0x5c0>
   11898:	cmp	r3, #0
   1189c:	beq	11890 <__assert_fail@plt+0x59c>
   118a0:	push	{r4, lr}
   118a4:	blx	r3
   118a8:	pop	{r4, lr}
   118ac:	b	11820 <__assert_fail@plt+0x52c>
   118b0:	andeq	ip, r2, ip, lsl #30
   118b4:	andeq	r0, r0, r0
   118b8:	push	{r4, r5, r6, r7, lr}
   118bc:	mov	r6, r0
   118c0:	sub	sp, sp, #44	; 0x2c
   118c4:	mov	r0, #0
   118c8:	bl	110b4 <time@plt>
   118cc:	ldr	r4, [pc, #352]	; 11a34 <__assert_fail@plt+0x740>
   118d0:	ldr	r3, [r4]
   118d4:	tst	r3, #1
   118d8:	ldr	r3, [pc, #344]	; 11a38 <__assert_fail@plt+0x744>
   118dc:	ldr	r5, [r3]
   118e0:	str	r0, [sp, #20]
   118e4:	add	r0, sp, #20
   118e8:	beq	119dc <__assert_fail@plt+0x6e8>
   118ec:	bl	110d8 <ctime@plt>
   118f0:	ldmib	r4, {r1, r3}
   118f4:	mov	r2, r5
   118f8:	stmib	sp, {r1, r6}
   118fc:	str	r3, [sp]
   11900:	ldr	r1, [pc, #308]	; 11a3c <__assert_fail@plt+0x748>
   11904:	add	r3, r0, #4
   11908:	add	r0, sp, #16
   1190c:	bl	1121c <asprintf@plt>
   11910:	cmn	r0, #1
   11914:	beq	11a04 <__assert_fail@plt+0x710>
   11918:	ldr	r5, [sp, #16]
   1191c:	mov	r0, r5
   11920:	bl	111bc <strlen@plt>
   11924:	ldr	r3, [r4]
   11928:	tst	r3, #32
   1192c:	mov	r7, r0
   11930:	beq	11984 <__assert_fail@plt+0x690>
   11934:	mov	r0, r6
   11938:	bl	111bc <strlen@plt>
   1193c:	str	r6, [sp, #24]
   11940:	add	r3, r6, r0
   11944:	str	r0, [sp, #28]
   11948:	ldrb	r3, [r3, #-1]
   1194c:	cmp	r3, #10
   11950:	movne	r3, #1
   11954:	strne	r3, [sp, #36]	; 0x24
   11958:	ldr	r3, [pc, #224]	; 11a40 <__assert_fail@plt+0x74c>
   1195c:	ldrne	r2, [pc, #224]	; 11a44 <__assert_fail@plt+0x750>
   11960:	movne	r4, #2
   11964:	moveq	r4, #1
   11968:	ldr	r0, [r3]
   1196c:	strne	r2, [sp, #32]
   11970:	bl	11210 <fileno@plt>
   11974:	mov	r2, r4
   11978:	add	r1, sp, #24
   1197c:	bl	11234 <writev@plt>
   11980:	ldr	r5, [sp, #16]
   11984:	ldr	r2, [pc, #188]	; 11a48 <__assert_fail@plt+0x754>
   11988:	mov	r1, r5
   1198c:	mov	r3, #0
   11990:	ldr	r0, [r2]
   11994:	mov	r2, r7
   11998:	bl	112dc <send@plt>
   1199c:	mov	r4, r0
   119a0:	ldr	r0, [sp, #16]
   119a4:	bl	13a90 <argp_parse@@Base+0xf7c>
   119a8:	cmn	r4, #1
   119ac:	beq	11a1c <__assert_fail@plt+0x728>
   119b0:	cmp	r4, r7
   119b4:	beq	119d4 <__assert_fail@plt+0x6e0>
   119b8:	bl	111e0 <__errno_location@plt>
   119bc:	mov	r3, r4
   119c0:	ldr	r2, [pc, #132]	; 11a4c <__assert_fail@plt+0x758>
   119c4:	ldr	r1, [r0]
   119c8:	str	r7, [sp]
   119cc:	mov	r0, #0
   119d0:	bl	11120 <error@plt>
   119d4:	add	sp, sp, #44	; 0x2c
   119d8:	pop	{r4, r5, r6, r7, pc}
   119dc:	bl	110d8 <ctime@plt>
   119e0:	ldr	r3, [r4, #8]
   119e4:	mov	r2, r5
   119e8:	ldr	r1, [pc, #96]	; 11a50 <__assert_fail@plt+0x75c>
   119ec:	stm	sp, {r3, r6}
   119f0:	add	r3, r0, #4
   119f4:	add	r0, sp, #16
   119f8:	bl	1121c <asprintf@plt>
   119fc:	cmn	r0, #1
   11a00:	bne	11918 <__assert_fail@plt+0x624>
   11a04:	bl	111e0 <__errno_location@plt>
   11a08:	ldr	r2, [pc, #68]	; 11a54 <__assert_fail@plt+0x760>
   11a0c:	ldr	r1, [r0]
   11a10:	mov	r0, #1
   11a14:	bl	11120 <error@plt>
   11a18:	b	11918 <__assert_fail@plt+0x624>
   11a1c:	bl	111e0 <__errno_location@plt>
   11a20:	ldr	r2, [pc, #48]	; 11a58 <__assert_fail@plt+0x764>
   11a24:	ldr	r1, [r0]
   11a28:	mov	r0, #0
   11a2c:	bl	11120 <error@plt>
   11a30:	b	119d4 <__assert_fail@plt+0x6e0>
   11a34:	andeq	sp, r2, r4, asr #7
   11a38:	andeq	sp, r2, r8, lsl r1
   11a3c:	andeq	fp, r1, ip, asr #26
   11a40:			; <UNDEFINED> instruction: 0x0002d3b0
   11a44:	muleq	r1, r0, sp
   11a48:	andeq	sp, r2, r4, lsl r4
   11a4c:	andeq	fp, r1, r0, lsr #27
   11a50:	andeq	fp, r1, r4, ror #26
   11a54:	andeq	fp, r1, r8, ror sp
   11a58:	muleq	r1, r4, sp
   11a5c:	push	{r4, r5, r6, lr}
   11a60:	sub	sp, sp, #16
   11a64:	mov	r5, r0
   11a68:	mov	r6, r2
   11a6c:	mov	r4, r1
   11a70:	bl	1118c <__ctype_b_loc@plt>
   11a74:	ldrb	r3, [r5]
   11a78:	lsl	r3, r3, #1
   11a7c:	ldr	r2, [r0]
   11a80:	ldrh	r3, [r2, r3]
   11a84:	tst	r3, #2048	; 0x800
   11a88:	bne	11ae8 <__assert_fail@plt+0x7f4>
   11a8c:	ldr	r1, [r4]
   11a90:	cmp	r1, #0
   11a94:	bne	11aa8 <__assert_fail@plt+0x7b4>
   11a98:	b	11ac4 <__assert_fail@plt+0x7d0>
   11a9c:	ldr	r1, [r4, #8]!
   11aa0:	cmp	r1, #0
   11aa4:	beq	11ac4 <__assert_fail@plt+0x7d0>
   11aa8:	mov	r0, r5
   11aac:	bl	110f0 <strcasecmp@plt>
   11ab0:	cmp	r0, #0
   11ab4:	bne	11a9c <__assert_fail@plt+0x7a8>
   11ab8:	ldr	r0, [r4, #4]
   11abc:	add	sp, sp, #16
   11ac0:	pop	{r4, r5, r6, pc}
   11ac4:	str	r5, [sp]
   11ac8:	mov	r3, r6
   11acc:	ldr	r2, [pc, #96]	; 11b34 <__assert_fail@plt+0x840>
   11ad0:	mov	r1, #0
   11ad4:	mov	r0, #1
   11ad8:	bl	11120 <error@plt>
   11adc:	mvn	r0, #0
   11ae0:	add	sp, sp, #16
   11ae4:	pop	{r4, r5, r6, pc}
   11ae8:	mov	r2, #0
   11aec:	add	r1, sp, #12
   11af0:	mov	r0, r5
   11af4:	bl	111b0 <strtoul@plt>
   11af8:	ldr	r3, [sp, #12]
   11afc:	ldrb	r3, [r3]
   11b00:	cmp	r0, #1016	; 0x3f8
   11b04:	cmpls	r3, #0
   11b08:	mov	r4, r0
   11b0c:	beq	11b28 <__assert_fail@plt+0x834>
   11b10:	str	r5, [sp]
   11b14:	mov	r3, r6
   11b18:	ldr	r2, [pc, #24]	; 11b38 <__assert_fail@plt+0x844>
   11b1c:	mov	r1, #0
   11b20:	mov	r0, #1
   11b24:	bl	11120 <error@plt>
   11b28:	mov	r0, r4
   11b2c:	add	sp, sp, #16
   11b30:	pop	{r4, r5, r6, pc}
   11b34:	andeq	fp, r1, r4, ror #27
   11b38:	andeq	fp, r1, ip, asr #27
   11b3c:	push	{r4, r5, r6, r7, lr}
   11b40:	mov	r1, #46	; 0x2e
   11b44:	sub	sp, sp, #20
   11b48:	mov	r6, r0
   11b4c:	bl	111c8 <strchr@plt>
   11b50:	subs	r5, r0, #0
   11b54:	movne	r3, #0
   11b58:	strbne	r3, [r5]
   11b5c:	addne	r5, r5, #1
   11b60:	bl	1118c <__ctype_b_loc@plt>
   11b64:	ldrb	r3, [r6]
   11b68:	lsl	r3, r3, #1
   11b6c:	ldr	r2, [r0]
   11b70:	mov	r7, r0
   11b74:	ldrh	r3, [r2, r3]
   11b78:	tst	r3, #2048	; 0x800
   11b7c:	bne	11c48 <__assert_fail@plt+0x954>
   11b80:	ldr	r4, [pc, #384]	; 11d08 <__assert_fail@plt+0xa14>
   11b84:	ldr	r1, [r4, #4]
   11b88:	cmp	r1, #0
   11b8c:	addne	r4, r4, #4
   11b90:	bne	11ba4 <__assert_fail@plt+0x8b0>
   11b94:	b	11c28 <__assert_fail@plt+0x934>
   11b98:	ldr	r1, [r4, #8]!
   11b9c:	cmp	r1, #0
   11ba0:	beq	11c28 <__assert_fail@plt+0x934>
   11ba4:	mov	r0, r6
   11ba8:	bl	110f0 <strcasecmp@plt>
   11bac:	cmp	r0, #0
   11bb0:	bne	11b98 <__assert_fail@plt+0x8a4>
   11bb4:	ldr	r6, [r4, #4]
   11bb8:	and	r6, r6, #1016	; 0x3f8
   11bbc:	cmp	r5, #0
   11bc0:	moveq	r0, #5
   11bc4:	beq	11c1c <__assert_fail@plt+0x928>
   11bc8:	ldrb	r3, [r5]
   11bcc:	ldr	r2, [r7]
   11bd0:	lsl	r3, r3, #1
   11bd4:	ldrh	r3, [r2, r3]
   11bd8:	tst	r3, #2048	; 0x800
   11bdc:	bne	11cb8 <__assert_fail@plt+0x9c4>
   11be0:	ldr	r4, [pc, #288]	; 11d08 <__assert_fail@plt+0xa14>
   11be4:	ldr	r1, [r4, #188]	; 0xbc
   11be8:	cmp	r1, #0
   11bec:	addne	r4, r4, #188	; 0xbc
   11bf0:	bne	11c04 <__assert_fail@plt+0x910>
   11bf4:	b	11c90 <__assert_fail@plt+0x99c>
   11bf8:	ldr	r1, [r4, #8]!
   11bfc:	cmp	r1, #0
   11c00:	beq	11c90 <__assert_fail@plt+0x99c>
   11c04:	mov	r0, r5
   11c08:	bl	110f0 <strcasecmp@plt>
   11c0c:	cmp	r0, #0
   11c10:	bne	11bf8 <__assert_fail@plt+0x904>
   11c14:	ldr	r0, [r4, #4]
   11c18:	and	r0, r0, #7
   11c1c:	orr	r0, r6, r0
   11c20:	add	sp, sp, #20
   11c24:	pop	{r4, r5, r6, r7, pc}
   11c28:	str	r6, [sp]
   11c2c:	ldr	r3, [pc, #216]	; 11d0c <__assert_fail@plt+0xa18>
   11c30:	ldr	r2, [pc, #216]	; 11d10 <__assert_fail@plt+0xa1c>
   11c34:	mov	r1, #0
   11c38:	mov	r0, #1
   11c3c:	bl	11120 <error@plt>
   11c40:	mov	r6, #1016	; 0x3f8
   11c44:	b	11bbc <__assert_fail@plt+0x8c8>
   11c48:	mov	r2, #0
   11c4c:	add	r1, sp, #12
   11c50:	mov	r0, r6
   11c54:	bl	111b0 <strtoul@plt>
   11c58:	ldr	r3, [sp, #12]
   11c5c:	ldrb	r3, [r3]
   11c60:	cmp	r0, #1016	; 0x3f8
   11c64:	cmpls	r3, #0
   11c68:	mov	r4, r0
   11c6c:	beq	11c88 <__assert_fail@plt+0x994>
   11c70:	str	r6, [sp]
   11c74:	ldr	r3, [pc, #144]	; 11d0c <__assert_fail@plt+0xa18>
   11c78:	ldr	r2, [pc, #148]	; 11d14 <__assert_fail@plt+0xa20>
   11c7c:	mov	r1, #0
   11c80:	mov	r0, #1
   11c84:	bl	11120 <error@plt>
   11c88:	and	r6, r4, #1016	; 0x3f8
   11c8c:	b	11bbc <__assert_fail@plt+0x8c8>
   11c90:	str	r5, [sp]
   11c94:	ldr	r3, [pc, #124]	; 11d18 <__assert_fail@plt+0xa24>
   11c98:	ldr	r2, [pc, #112]	; 11d10 <__assert_fail@plt+0xa1c>
   11c9c:	mov	r1, #0
   11ca0:	mov	r0, #1
   11ca4:	bl	11120 <error@plt>
   11ca8:	mov	r0, #7
   11cac:	orr	r0, r6, r0
   11cb0:	add	sp, sp, #20
   11cb4:	pop	{r4, r5, r6, r7, pc}
   11cb8:	mov	r2, #0
   11cbc:	add	r1, sp, #12
   11cc0:	mov	r0, r5
   11cc4:	bl	111b0 <strtoul@plt>
   11cc8:	ldr	r3, [sp, #12]
   11ccc:	ldrb	r3, [r3]
   11cd0:	cmp	r0, #1016	; 0x3f8
   11cd4:	cmpls	r3, #0
   11cd8:	mov	r4, r0
   11cdc:	beq	11cf8 <__assert_fail@plt+0xa04>
   11ce0:	str	r5, [sp]
   11ce4:	ldr	r3, [pc, #44]	; 11d18 <__assert_fail@plt+0xa24>
   11ce8:	ldr	r2, [pc, #36]	; 11d14 <__assert_fail@plt+0xa20>
   11cec:	mov	r1, #0
   11cf0:	mov	r0, #1
   11cf4:	bl	11120 <error@plt>
   11cf8:	and	r0, r4, #7
   11cfc:	orr	r0, r6, r0
   11d00:	add	sp, sp, #20
   11d04:	pop	{r4, r5, r6, r7, pc}
   11d08:	andeq	sp, r2, r8, lsl r1
   11d0c:	strdeq	fp, [r1], -r8
   11d10:	andeq	fp, r1, r4, ror #27
   11d14:	andeq	fp, r1, ip, asr #27
   11d18:	andeq	fp, r1, r4, lsl #28
   11d1c:	sub	r0, r0, #52	; 0x34
   11d20:	push	{r4, r5, lr}
   11d24:	mov	r5, r1
   11d28:	sub	sp, sp, #28
   11d2c:	cmp	r0, #65	; 0x41
   11d30:	ldrls	pc, [pc, r0, lsl #2]
   11d34:	b	11f30 <__assert_fail@plt+0xc3c>
   11d38:	andeq	r1, r1, r0, ror #28
   11d3c:	andeq	r1, r1, r0, lsr pc
   11d40:	andeq	r1, r1, r4, ror lr
   11d44:	andeq	r1, r1, r0, lsr pc
   11d48:	andeq	r1, r1, r0, lsr pc
   11d4c:	andeq	r1, r1, r0, lsr pc
   11d50:	andeq	r1, r1, r0, lsr pc
   11d54:	andeq	r1, r1, r0, lsr pc
   11d58:	andeq	r1, r1, r0, lsr pc
   11d5c:	andeq	r1, r1, r0, lsr pc
   11d60:	andeq	r1, r1, r0, lsr pc
   11d64:	andeq	r1, r1, r0, lsr pc
   11d68:	andeq	r1, r1, r0, lsr pc
   11d6c:	andeq	r1, r1, r0, lsr pc
   11d70:	andeq	r1, r1, r0, lsr pc
   11d74:	andeq	r1, r1, r0, lsr pc
   11d78:	andeq	r1, r1, r0, lsr pc
   11d7c:	andeq	r1, r1, r0, lsr pc
   11d80:	andeq	r1, r1, r0, lsr pc
   11d84:	andeq	r1, r1, r0, lsr pc
   11d88:	andeq	r1, r1, r0, lsr pc
   11d8c:	andeq	r1, r1, r0, lsr pc
   11d90:	andeq	r1, r1, r0, lsr pc
   11d94:	andeq	r1, r1, r0, lsr pc
   11d98:	andeq	r1, r1, r0, lsr pc
   11d9c:	andeq	r1, r1, r0, lsr pc
   11da0:	andeq	r1, r1, r0, lsr pc
   11da4:	andeq	r1, r1, r0, lsr pc
   11da8:	andeq	r1, r1, r0, lsr pc
   11dac:	andeq	r1, r1, r0, lsr pc
   11db0:	andeq	r1, r1, r0, lsr pc
   11db4:	andeq	r1, r1, r8, lsl #29
   11db8:	andeq	r1, r1, r0, lsr pc
   11dbc:	andeq	r1, r1, r0, lsr pc
   11dc0:	andeq	r1, r1, r0, lsr pc
   11dc4:	andeq	r1, r1, r0, lsr pc
   11dc8:	andeq	r1, r1, r0, lsr pc
   11dcc:	andeq	r1, r1, r0, lsr pc
   11dd0:	andeq	r1, r1, r0, lsr pc
   11dd4:	andeq	r1, r1, r0, lsr pc
   11dd8:	andeq	r1, r1, r0, lsr pc
   11ddc:	andeq	r1, r1, r0, lsr pc
   11de0:	andeq	r1, r1, r0, lsr pc
   11de4:	andeq	r1, r1, r0, lsr pc
   11de8:	andeq	r1, r1, r0, lsr pc
   11dec:	andeq	r1, r1, r0, lsr pc
   11df0:	andeq	r1, r1, r0, lsr pc
   11df4:	andeq	r1, r1, r0, lsr pc
   11df8:	andeq	r1, r1, r0, lsr pc
   11dfc:	andeq	r1, r1, r0, lsr pc
   11e00:	muleq	r1, r8, lr
   11e04:	andeq	r1, r1, r0, lsr pc
   11e08:			; <UNDEFINED> instruction: 0x00011eb4
   11e0c:	andeq	r1, r1, ip, asr #29
   11e10:	andeq	r1, r1, r0, lsr pc
   11e14:	andeq	r1, r1, r0, lsr pc
   11e18:	andeq	r1, r1, r0, lsr pc
   11e1c:	andeq	r1, r1, r0, lsr pc
   11e20:	andeq	r1, r1, r0, lsr pc
   11e24:	andeq	r1, r1, r0, lsr pc
   11e28:	strdeq	r1, [r1], -r0
   11e2c:	andeq	r1, r1, r0, lsr pc
   11e30:	andeq	r1, r1, r0, lsr pc
   11e34:	andeq	r1, r1, r8, lsl #30
   11e38:	andeq	r1, r1, r0, lsr #30
   11e3c:	andeq	r1, r1, r0, asr #28
   11e40:	ldr	r1, [pc, #332]	; 11f94 <__assert_fail@plt+0xca0>
   11e44:	ldr	r3, [pc, #332]	; 11f98 <__assert_fail@plt+0xca4>
   11e48:	mov	r2, #0
   11e4c:	str	r5, [r1, #16]
   11e50:	str	r2, [r3, #292]	; 0x124
   11e54:	mov	r0, r2
   11e58:	add	sp, sp, #28
   11e5c:	pop	{r4, r5, pc}
   11e60:	ldr	r3, [pc, #300]	; 11f94 <__assert_fail@plt+0xca0>
   11e64:	mov	r1, #2
   11e68:	mov	r2, #0
   11e6c:	str	r1, [r3, #12]
   11e70:	b	11e54 <__assert_fail@plt+0xb60>
   11e74:	ldr	r3, [pc, #280]	; 11f94 <__assert_fail@plt+0xca0>
   11e78:	mov	r1, #10
   11e7c:	mov	r2, #0
   11e80:	str	r1, [r3, #12]
   11e84:	b	11e54 <__assert_fail@plt+0xb60>
   11e88:	ldr	r3, [pc, #260]	; 11f94 <__assert_fail@plt+0xca0>
   11e8c:	mov	r2, #0
   11e90:	str	r1, [r3, #20]
   11e94:	b	11e54 <__assert_fail@plt+0xb60>
   11e98:	ldr	r1, [pc, #252]	; 11f9c <__assert_fail@plt+0xca8>
   11e9c:	mov	r0, r5
   11ea0:	bl	11030 <strcmp@plt>
   11ea4:	cmp	r0, #0
   11ea8:	bne	11f38 <__assert_fail@plt+0xc44>
   11eac:	mov	r2, #0
   11eb0:	b	11e54 <__assert_fail@plt+0xb60>
   11eb4:	ldr	r1, [pc, #220]	; 11f98 <__assert_fail@plt+0xca4>
   11eb8:	ldr	r3, [pc, #212]	; 11f94 <__assert_fail@plt+0xca0>
   11ebc:	mov	r2, #0
   11ec0:	str	r5, [r1, #292]	; 0x124
   11ec4:	str	r2, [r3, #16]
   11ec8:	b	11e54 <__assert_fail@plt+0xb60>
   11ecc:	ldr	r4, [pc, #192]	; 11f94 <__assert_fail@plt+0xca0>
   11ed0:	cmp	r1, #0
   11ed4:	ldr	r3, [r4]
   11ed8:	orr	r3, r3, #1
   11edc:	str	r3, [r4]
   11ee0:	beq	11f74 <__assert_fail@plt+0xc80>
   11ee4:	str	r1, [r4, #4]
   11ee8:	mov	r2, #0
   11eec:	b	11e54 <__assert_fail@plt+0xb60>
   11ef0:	mov	r0, r1
   11ef4:	bl	11b3c <__assert_fail@plt+0x848>
   11ef8:	ldr	r3, [pc, #152]	; 11f98 <__assert_fail@plt+0xca4>
   11efc:	mov	r2, #0
   11f00:	str	r0, [r3]
   11f04:	b	11e54 <__assert_fail@plt+0xb60>
   11f08:	ldr	r1, [pc, #132]	; 11f94 <__assert_fail@plt+0xca0>
   11f0c:	mov	r2, #0
   11f10:	ldr	r3, [r1]
   11f14:	orr	r3, r3, #32
   11f18:	str	r3, [r1]
   11f1c:	b	11e54 <__assert_fail@plt+0xb60>
   11f20:	ldr	r3, [pc, #108]	; 11f94 <__assert_fail@plt+0xca0>
   11f24:	mov	r2, #0
   11f28:	str	r1, [r3, #8]
   11f2c:	b	11e54 <__assert_fail@plt+0xb60>
   11f30:	mov	r2, #7
   11f34:	b	11e54 <__assert_fail@plt+0xb60>
   11f38:	ldr	r3, [pc, #96]	; 11fa0 <__assert_fail@plt+0xcac>
   11f3c:	ldr	r1, [pc, #96]	; 11fa4 <__assert_fail@plt+0xcb0>
   11f40:	mov	r0, r5
   11f44:	ldr	r2, [r3]
   11f48:	bl	11174 <freopen64@plt>
   11f4c:	subs	r4, r0, #0
   11f50:	bne	11eac <__assert_fail@plt+0xbb8>
   11f54:	bl	111e0 <__errno_location@plt>
   11f58:	ldr	r2, [pc, #72]	; 11fa8 <__assert_fail@plt+0xcb4>
   11f5c:	mov	r3, r5
   11f60:	ldr	r1, [r0]
   11f64:	mov	r0, #1
   11f68:	bl	11120 <error@plt>
   11f6c:	mov	r2, r4
   11f70:	b	11e54 <__assert_fail@plt+0xb60>
   11f74:	bl	11198 <getpid@plt>
   11f78:	mov	r2, sp
   11f7c:	asr	r1, r0, #31
   11f80:	bl	13b98 <argp_parse@@Base+0x1084>
   11f84:	bl	15030 <argp_parse@@Base+0x251c>
   11f88:	mov	r2, r5
   11f8c:	str	r0, [r4, #4]
   11f90:	b	11e54 <__assert_fail@plt+0xb60>
   11f94:	andeq	sp, r2, r4, asr #7
   11f98:	andeq	sp, r2, r8, lsl r1
   11f9c:	andeq	fp, r1, r0, lsl lr
   11fa0:			; <UNDEFINED> instruction: 0x0002d3b8
   11fa4:	andeq	ip, r1, r8, lsl #20
   11fa8:	andeq	fp, r1, r4, lsl lr
   11fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb0:	sub	sp, sp, #36	; 0x24
   11fb4:	ldr	sl, [r0]
   11fb8:	str	r0, [sp, #12]
   11fbc:	cmp	sl, #0
   11fc0:	str	r1, [sp, #16]
   11fc4:	str	r2, [sp, #20]
   11fc8:	mov	r9, r3
   11fcc:	ldr	r8, [r0, #16]
   11fd0:	ldr	r7, [sp, #72]	; 0x48
   11fd4:	beq	121a0 <__assert_fail@plt+0xeac>
   11fd8:	add	fp, sl, #24
   11fdc:	str	r8, [sp, #28]
   11fe0:	str	r3, [sp, #24]
   11fe4:	ldr	r4, [fp, #-20]	; 0xffffffec
   11fe8:	sub	r1, fp, #24
   11fec:	cmp	r4, #0
   11ff0:	bne	12000 <__assert_fail@plt+0xd0c>
   11ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ff8:	cmp	r3, #0
   11ffc:	beq	12174 <__assert_fail@plt+0xe80>
   12000:	ldr	r3, [fp, #-12]
   12004:	tst	r3, #4
   12008:	moveq	sl, r1
   1200c:	moveq	r5, r3
   12010:	ldrne	r5, [sl, #12]
   12014:	ands	r5, r5, #8
   12018:	bne	1215c <__assert_fail@plt+0xe68>
   1201c:	tst	r3, #8
   12020:	bne	1209c <__assert_fail@plt+0xda8>
   12024:	sub	r3, r4, #1
   12028:	cmp	r3, #254	; 0xfe
   1202c:	bhi	1209c <__assert_fail@plt+0xda8>
   12030:	bl	1118c <__ctype_b_loc@plt>
   12034:	lsl	r3, r4, #1
   12038:	ldr	r1, [r0]
   1203c:	ldrh	r3, [r1, r3]
   12040:	tst	r3, #16384	; 0x4000
   12044:	beq	1209c <__assert_fail@plt+0xda8>
   12048:	ldr	r3, [r7, #4]
   1204c:	add	r1, r3, #1
   12050:	str	r1, [r7, #4]
   12054:	strb	r4, [r3]
   12058:	ldr	r3, [sl, #8]
   1205c:	cmp	r3, #0
   12060:	beq	12090 <__assert_fail@plt+0xd9c>
   12064:	ldr	r3, [r7, #4]
   12068:	mov	r2, #58	; 0x3a
   1206c:	add	r1, r3, #1
   12070:	str	r1, [r7, #4]
   12074:	strb	r2, [r3]
   12078:	ldr	r3, [sl, #12]
   1207c:	tst	r3, #1
   12080:	ldrne	r3, [r7, #4]
   12084:	addne	r1, r3, #1
   12088:	strne	r1, [r7, #4]
   1208c:	strbne	r2, [r3]
   12090:	ldr	r3, [r7, #4]
   12094:	mov	r2, #0
   12098:	strb	r2, [r3]
   1209c:	ldr	r4, [fp, #-24]	; 0xffffffe8
   120a0:	cmp	r4, #0
   120a4:	beq	1215c <__assert_fail@plt+0xe68>
   120a8:	ldr	r8, [r7]
   120ac:	ldr	r6, [r8, #8]
   120b0:	ldr	r0, [r6]
   120b4:	cmp	r0, #0
   120b8:	beq	120dc <__assert_fail@plt+0xde8>
   120bc:	mov	r9, r6
   120c0:	mov	r1, r4
   120c4:	bl	11030 <strcmp@plt>
   120c8:	cmp	r0, #0
   120cc:	beq	12164 <__assert_fail@plt+0xe70>
   120d0:	ldr	r0, [r9, #16]!
   120d4:	cmp	r0, #0
   120d8:	bne	120c0 <__assert_fail@plt+0xdcc>
   120dc:	ldr	r3, [sl, #8]
   120e0:	ldr	r1, [r7, #8]
   120e4:	cmp	r3, #0
   120e8:	str	r4, [r1]
   120ec:	beq	12100 <__assert_fail@plt+0xe0c>
   120f0:	ldr	r3, [sl, #12]
   120f4:	tst	r3, #1
   120f8:	moveq	r5, #1
   120fc:	movne	r5, #2
   12100:	str	r5, [r1, #4]
   12104:	ldr	ip, [fp, #-20]	; 0xffffffec
   12108:	mov	r3, #0
   1210c:	cmp	ip, r3
   12110:	str	r3, [r1, #8]
   12114:	ldr	r2, [sp, #24]
   12118:	ldr	r3, [r8, #48]	; 0x30
   1211c:	ldreq	ip, [sl, #4]
   12120:	sub	r3, r2, r3
   12124:	bic	ip, ip, #-16777216	; 0xff000000
   12128:	asr	r3, r3, #2
   1212c:	add	lr, r1, #16
   12130:	rsb	r0, r3, r3, lsl #3
   12134:	add	r0, r0, r0, lsl #6
   12138:	add	r0, r3, r0, lsl #3
   1213c:	rsb	r0, r0, r0, lsl #15
   12140:	add	r3, r3, r0, lsl #3
   12144:	add	r3, r3, #1
   12148:	add	r3, ip, r3, lsl #24
   1214c:	str	r3, [r1, #12]
   12150:	mov	r3, #0
   12154:	str	lr, [r7, #8]
   12158:	str	r3, [r1, #16]
   1215c:	add	fp, fp, #24
   12160:	b	11fe4 <__assert_fail@plt+0xcf0>
   12164:	sub	r6, r9, r6
   12168:	cmn	r6, #15
   1216c:	bge	1215c <__assert_fail@plt+0xe68>
   12170:	b	120dc <__assert_fail@plt+0xde8>
   12174:	ldr	r3, [fp, #-8]
   12178:	cmp	r3, #0
   1217c:	bne	12000 <__assert_fail@plt+0xd0c>
   12180:	ldr	r3, [fp, #-4]
   12184:	cmp	r3, #0
   12188:	bne	12000 <__assert_fail@plt+0xd0c>
   1218c:	ldr	r3, [sp, #12]
   12190:	ldr	r8, [sp, #28]
   12194:	ldr	r9, [sp, #24]
   12198:	ldr	r3, [r3, #4]
   1219c:	b	121b4 <__assert_fail@plt+0xec0>
   121a0:	ldr	r3, [r0, #4]
   121a4:	cmp	r3, #0
   121a8:	moveq	r0, r9
   121ac:	moveq	r9, r3
   121b0:	beq	12224 <__assert_fail@plt+0xf30>
   121b4:	ldr	r2, [r7, #4]
   121b8:	ldr	r1, [sp, #12]
   121bc:	str	r3, [r9]
   121c0:	cmp	r8, #0
   121c4:	stmib	r9, {r1, r2}
   121c8:	ldr	r2, [sp, #16]
   121cc:	mov	r3, #0
   121d0:	str	r2, [r9, #16]
   121d4:	ldr	r2, [sp, #20]
   121d8:	str	r3, [r9, #12]
   121dc:	str	r2, [r9, #20]
   121e0:	str	r3, [r9, #24]
   121e4:	str	r3, [r9, #32]
   121e8:	str	r3, [r9, #28]
   121ec:	beq	12220 <__assert_fail@plt+0xf2c>
   121f0:	ldr	r2, [r8]
   121f4:	cmp	r2, r3
   121f8:	beq	1226c <__assert_fail@plt+0xf78>
   121fc:	add	r3, r3, #1
   12200:	ldr	r2, [r8, r3, lsl #4]
   12204:	cmp	r2, #0
   12208:	bne	121fc <__assert_fail@plt+0xf08>
   1220c:	lsl	r3, r3, #2
   12210:	ldr	r2, [r7, #12]
   12214:	add	r3, r2, r3
   12218:	str	r2, [r9, #28]
   1221c:	str	r3, [r7, #12]
   12220:	add	r0, r9, #36	; 0x24
   12224:	cmp	r8, #0
   12228:	beq	12264 <__assert_fail@plt+0xf70>
   1222c:	ldr	r1, [r8]
   12230:	cmp	r1, #0
   12234:	beq	12264 <__assert_fail@plt+0xf70>
   12238:	mov	r2, #0
   1223c:	add	r4, r2, #1
   12240:	mov	r3, r0
   12244:	str	r7, [sp]
   12248:	mov	r0, r1
   1224c:	mov	r1, r9
   12250:	bl	11fac <__assert_fail@plt+0xcb8>
   12254:	ldr	r1, [r8, r4, lsl #4]
   12258:	mov	r2, r4
   1225c:	cmp	r1, #0
   12260:	bne	1223c <__assert_fail@plt+0xf48>
   12264:	add	sp, sp, #36	; 0x24
   12268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1226c:	mov	r3, r2
   12270:	b	12210 <__assert_fail@plt+0xf1c>
   12274:	cmp	r0, #86	; 0x56
   12278:	beq	12284 <__assert_fail@plt+0xf90>
   1227c:	mov	r0, #7
   12280:	bx	lr
   12284:	ldr	r3, [pc, #104]	; 122f4 <__assert_fail@plt+0x1000>
   12288:	push	{r4, lr}
   1228c:	mov	r4, r2
   12290:	ldr	r3, [r3]
   12294:	cmp	r3, #0
   12298:	beq	122bc <__assert_fail@plt+0xfc8>
   1229c:	mov	r1, r2
   122a0:	ldr	r0, [r2, #48]	; 0x30
   122a4:	blx	r3
   122a8:	ldr	r0, [r4, #16]
   122ac:	ands	r0, r0, #32
   122b0:	beq	122f0 <__assert_fail@plt+0xffc>
   122b4:	mov	r0, #0
   122b8:	pop	{r4, pc}
   122bc:	ldr	r3, [pc, #52]	; 122f8 <__assert_fail@plt+0x1004>
   122c0:	ldr	r2, [r3]
   122c4:	cmp	r2, #0
   122c8:	beq	122dc <__assert_fail@plt+0xfe8>
   122cc:	ldr	r1, [pc, #40]	; 122fc <__assert_fail@plt+0x1008>
   122d0:	ldr	r0, [r4, #48]	; 0x30
   122d4:	bl	111d4 <fprintf@plt>
   122d8:	b	122a8 <__assert_fail@plt+0xfb4>
   122dc:	ldr	r2, [pc, #28]	; 12300 <__assert_fail@plt+0x100c>
   122e0:	ldr	r1, [pc, #28]	; 12304 <__assert_fail@plt+0x1010>
   122e4:	mov	r0, r4
   122e8:	bl	194a8 <argp_error@@Base>
   122ec:	b	122a8 <__assert_fail@plt+0xfb4>
   122f0:	bl	111a4 <exit@plt>
   122f4:	andeq	sp, r2, r0, ror #7
   122f8:	andeq	sp, r2, ip, lsl r4
   122fc:	andeq	ip, r1, r8, lsl #8
   12300:	andeq	ip, r1, ip, ror #4
   12304:	andeq	fp, r1, r4, lsl lr
   12308:	cmn	r0, #3
   1230c:	push	{r4, r5, lr}
   12310:	mov	r4, r2
   12314:	sub	sp, sp, #12
   12318:	beq	123fc <__assert_fail@plt+0x1108>
   1231c:	ble	1238c <__assert_fail@plt+0x1098>
   12320:	cmn	r0, #2
   12324:	beq	1234c <__assert_fail@plt+0x1058>
   12328:	cmp	r0, #63	; 0x3f
   1232c:	bne	123f0 <__assert_fail@plt+0x10fc>
   12330:	mov	r0, r4
   12334:	ldr	r2, [pc, #236]	; 12428 <__assert_fail@plt+0x1134>
   12338:	ldr	r1, [r4, #48]	; 0x30
   1233c:	bl	193f8 <argp_state_help@@Base>
   12340:	mov	r0, #0
   12344:	add	sp, sp, #12
   12348:	pop	{r4, r5, pc}
   1234c:	ldr	r3, [pc, #216]	; 1242c <__assert_fail@plt+0x1138>
   12350:	mov	r0, r1
   12354:	str	r1, [sp, #4]
   12358:	str	r1, [r3]
   1235c:	bl	139e4 <argp_parse@@Base+0xed0>
   12360:	ldr	r3, [r4, #16]
   12364:	ldr	r2, [pc, #196]	; 12430 <__assert_fail@plt+0x113c>
   12368:	and	r3, r3, #3
   1236c:	cmp	r3, #1
   12370:	ldr	r1, [sp, #4]
   12374:	str	r0, [r4, #40]	; 0x28
   12378:	str	r0, [r2]
   1237c:	beq	12418 <__assert_fail@plt+0x1124>
   12380:	mov	r0, #0
   12384:	add	sp, sp, #12
   12388:	pop	{r4, r5, pc}
   1238c:	cmn	r0, #4
   12390:	bne	123f0 <__assert_fail@plt+0x10fc>
   12394:	cmp	r1, #0
   12398:	ldr	r0, [pc, #148]	; 12434 <__assert_fail@plt+0x1140>
   1239c:	mov	r2, #10
   123a0:	movne	r0, r1
   123a4:	mov	r1, #0
   123a8:	bl	1103c <strtol@plt>
   123ac:	ldr	r4, [pc, #132]	; 12438 <__assert_fail@plt+0x1144>
   123b0:	str	r0, [r4]
   123b4:	ldr	r3, [r4]
   123b8:	cmp	r3, #0
   123bc:	sub	r3, r3, #1
   123c0:	str	r3, [r4]
   123c4:	ble	12380 <__assert_fail@plt+0x108c>
   123c8:	mov	r5, #1
   123cc:	mov	r0, r5
   123d0:	bl	110cc <sleep@plt>
   123d4:	ldr	r3, [r4]
   123d8:	cmp	r3, #0
   123dc:	sub	r3, r3, #1
   123e0:	str	r3, [r4]
   123e4:	bgt	123cc <__assert_fail@plt+0x10d8>
   123e8:	mov	r0, #0
   123ec:	b	12384 <__assert_fail@plt+0x1090>
   123f0:	mov	r0, #7
   123f4:	add	sp, sp, #12
   123f8:	pop	{r4, r5, pc}
   123fc:	mov	r0, r4
   12400:	ldr	r2, [pc, #52]	; 1243c <__assert_fail@plt+0x1148>
   12404:	ldr	r1, [r4, #48]	; 0x30
   12408:	bl	193f8 <argp_state_help@@Base>
   1240c:	mov	r0, #0
   12410:	add	sp, sp, #12
   12414:	pop	{r4, r5, pc}
   12418:	ldr	r3, [r4, #8]
   1241c:	mov	r0, #0
   12420:	str	r1, [r3]
   12424:	b	12344 <__assert_fail@plt+0x1050>
   12428:	andeq	r0, r0, sl, ror r2
   1242c:	andeq	sp, r2, ip, lsr #7
   12430:	andeq	sp, r2, r8, lsr #7
   12434:	muleq	r1, r0, r2
   12438:	ldrdeq	sp, [r2], -ip
   1243c:	andeq	r0, r0, r1, lsl #4
   12440:	ldr	r3, [r0]
   12444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12448:	cmp	r3, #0
   1244c:	sub	sp, sp, #12
   12450:	ldr	lr, [r0, #16]
   12454:	beq	1248c <__assert_fail@plt+0x1198>
   12458:	ldr	r0, [r1, #8]
   1245c:	mov	r2, #0
   12460:	add	r0, r0, #1
   12464:	str	r0, [r1, #8]
   12468:	add	r3, r3, #24
   1246c:	ldr	r0, [r3, #-20]	; 0xffffffec
   12470:	cmp	r0, #0
   12474:	bne	12484 <__assert_fail@plt+0x1190>
   12478:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1247c:	cmp	r0, #0
   12480:	beq	12a44 <__assert_fail@plt+0x1750>
   12484:	add	r2, r2, #1
   12488:	b	12468 <__assert_fail@plt+0x1174>
   1248c:	ldr	r3, [r0, #4]
   12490:	cmp	r3, #0
   12494:	ldrne	r3, [r1, #8]
   12498:	addne	r3, r3, #1
   1249c:	strne	r3, [r1, #8]
   124a0:	cmp	lr, #0
   124a4:	beq	12830 <__assert_fail@plt+0x153c>
   124a8:	ldr	r0, [lr]
   124ac:	cmp	r0, #0
   124b0:	beq	12830 <__assert_fail@plt+0x153c>
   124b4:	mov	r6, r1
   124b8:	str	lr, [sp]
   124bc:	ldr	r2, [r0]
   124c0:	ldr	r7, [r0, #16]
   124c4:	cmp	r2, #0
   124c8:	beq	12500 <__assert_fail@plt+0x120c>
   124cc:	ldr	r0, [r6, #8]
   124d0:	mov	r1, #0
   124d4:	add	r0, r0, #1
   124d8:	str	r0, [r6, #8]
   124dc:	add	r2, r2, #24
   124e0:	ldr	r0, [r2, #-20]	; 0xffffffec
   124e4:	cmp	r0, #0
   124e8:	bne	124f8 <__assert_fail@plt+0x1204>
   124ec:	ldr	r0, [r2, #-24]	; 0xffffffe8
   124f0:	cmp	r0, #0
   124f4:	beq	12a74 <__assert_fail@plt+0x1780>
   124f8:	add	r1, r1, #1
   124fc:	b	124dc <__assert_fail@plt+0x11e8>
   12500:	ldr	r2, [r0, #4]
   12504:	cmp	r2, #0
   12508:	ldrne	r2, [r6, #8]
   1250c:	addne	r2, r2, #1
   12510:	strne	r2, [r6, #8]
   12514:	cmp	r7, #0
   12518:	beq	12ad4 <__assert_fail@plt+0x17e0>
   1251c:	ldr	r1, [r7]
   12520:	cmp	r1, #0
   12524:	beq	12ad4 <__assert_fail@plt+0x17e0>
   12528:	str	r7, [sp, #4]
   1252c:	ldr	r2, [r1]
   12530:	ldr	r8, [r1, #16]
   12534:	cmp	r2, #0
   12538:	beq	12570 <__assert_fail@plt+0x127c>
   1253c:	ldr	r0, [r6, #8]
   12540:	mov	r1, #0
   12544:	add	r0, r0, #1
   12548:	str	r0, [r6, #8]
   1254c:	add	r2, r2, #24
   12550:	ldr	r0, [r2, #-20]	; 0xffffffec
   12554:	cmp	r0, #0
   12558:	bne	12568 <__assert_fail@plt+0x1274>
   1255c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   12560:	cmp	r0, #0
   12564:	beq	12aa4 <__assert_fail@plt+0x17b0>
   12568:	add	r1, r1, #1
   1256c:	b	1254c <__assert_fail@plt+0x1258>
   12570:	ldr	r2, [r1, #4]
   12574:	cmp	r2, #0
   12578:	ldrne	r2, [r6, #8]
   1257c:	addne	r2, r2, #1
   12580:	strne	r2, [r6, #8]
   12584:	cmp	r8, #0
   12588:	beq	12adc <__assert_fail@plt+0x17e8>
   1258c:	ldr	r1, [r8]
   12590:	cmp	r1, #0
   12594:	beq	12adc <__assert_fail@plt+0x17e8>
   12598:	ldr	r2, [r1]
   1259c:	ldr	r9, [r1, #16]
   125a0:	cmp	r2, #0
   125a4:	beq	125dc <__assert_fail@plt+0x12e8>
   125a8:	ldr	r0, [r6, #8]
   125ac:	mov	r1, #0
   125b0:	add	r0, r0, #1
   125b4:	str	r0, [r6, #8]
   125b8:	add	r2, r2, #24
   125bc:	ldr	r0, [r2, #-20]	; 0xffffffec
   125c0:	cmp	r0, #0
   125c4:	bne	125d4 <__assert_fail@plt+0x12e0>
   125c8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   125cc:	cmp	r0, #0
   125d0:	beq	12ae4 <__assert_fail@plt+0x17f0>
   125d4:	add	r1, r1, #1
   125d8:	b	125b8 <__assert_fail@plt+0x12c4>
   125dc:	ldr	r2, [r1, #4]
   125e0:	cmp	r2, #0
   125e4:	ldrne	r2, [r6, #8]
   125e8:	addne	r2, r2, #1
   125ec:	strne	r2, [r6, #8]
   125f0:	cmp	r9, #0
   125f4:	beq	127e0 <__assert_fail@plt+0x14ec>
   125f8:	ldr	r1, [r9]
   125fc:	cmp	r1, #0
   12600:	beq	127e0 <__assert_fail@plt+0x14ec>
   12604:	ldr	r2, [r1]
   12608:	ldr	sl, [r1, #16]
   1260c:	cmp	r2, #0
   12610:	beq	12678 <__assert_fail@plt+0x1384>
   12614:	ldr	r0, [r6, #8]
   12618:	mov	r1, #0
   1261c:	add	r0, r0, #1
   12620:	str	r0, [r6, #8]
   12624:	b	1262c <__assert_fail@plt+0x1338>
   12628:	add	r1, r1, #1
   1262c:	add	r2, r2, #24
   12630:	ldr	r0, [r2, #-20]	; 0xffffffec
   12634:	cmp	r0, #0
   12638:	bne	12628 <__assert_fail@plt+0x1334>
   1263c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   12640:	cmp	r0, #0
   12644:	bne	12628 <__assert_fail@plt+0x1334>
   12648:	ldr	r0, [r2, #-8]
   1264c:	cmp	r0, #0
   12650:	bne	12628 <__assert_fail@plt+0x1334>
   12654:	ldr	r0, [r2, #-4]
   12658:	cmp	r0, #0
   1265c:	bne	12628 <__assert_fail@plt+0x1334>
   12660:	ldm	r6, {r0, r2}
   12664:	add	ip, r1, r1, lsl #1
   12668:	add	r0, r0, ip
   1266c:	add	r1, r2, r1
   12670:	stm	r6, {r0, r1}
   12674:	b	1268c <__assert_fail@plt+0x1398>
   12678:	ldr	r2, [r1, #4]
   1267c:	cmp	r2, #0
   12680:	ldrne	r2, [r6, #8]
   12684:	addne	r2, r2, #1
   12688:	strne	r2, [r6, #8]
   1268c:	cmp	sl, #0
   12690:	beq	12a3c <__assert_fail@plt+0x1748>
   12694:	ldr	r1, [sl]
   12698:	cmp	r1, #0
   1269c:	beq	12a3c <__assert_fail@plt+0x1748>
   126a0:	ldr	r2, [r1]
   126a4:	ldr	fp, [r1, #16]
   126a8:	cmp	r2, #0
   126ac:	beq	12a14 <__assert_fail@plt+0x1720>
   126b0:	ldr	r0, [r6, #8]
   126b4:	mov	r1, #0
   126b8:	add	r0, r0, #1
   126bc:	str	r0, [r6, #8]
   126c0:	b	126c8 <__assert_fail@plt+0x13d4>
   126c4:	add	r1, r1, #1
   126c8:	add	r2, r2, #24
   126cc:	ldr	r0, [r2, #-20]	; 0xffffffec
   126d0:	cmp	r0, #0
   126d4:	bne	126c4 <__assert_fail@plt+0x13d0>
   126d8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   126dc:	cmp	r0, #0
   126e0:	bne	126c4 <__assert_fail@plt+0x13d0>
   126e4:	ldr	r0, [r2, #-8]
   126e8:	cmp	r0, #0
   126ec:	bne	126c4 <__assert_fail@plt+0x13d0>
   126f0:	ldr	r0, [r2, #-4]
   126f4:	cmp	r0, #0
   126f8:	bne	126c4 <__assert_fail@plt+0x13d0>
   126fc:	ldm	r6, {r0, r2}
   12700:	add	ip, r1, r1, lsl #1
   12704:	add	r0, r0, ip
   12708:	add	r1, r2, r1
   1270c:	stm	r6, {r0, r1}
   12710:	cmp	fp, #0
   12714:	beq	12a34 <__assert_fail@plt+0x1740>
   12718:	ldr	r0, [fp]
   1271c:	cmp	r0, #0
   12720:	beq	12a34 <__assert_fail@plt+0x1740>
   12724:	ldr	r2, [r0]
   12728:	ldr	r5, [r0, #16]
   1272c:	cmp	r2, #0
   12730:	beq	12838 <__assert_fail@plt+0x1544>
   12734:	ldr	r0, [r6, #8]
   12738:	mov	r1, #0
   1273c:	add	r0, r0, #1
   12740:	str	r0, [r6, #8]
   12744:	b	1274c <__assert_fail@plt+0x1458>
   12748:	add	r1, r1, #1
   1274c:	add	r2, r2, #24
   12750:	ldr	r0, [r2, #-20]	; 0xffffffec
   12754:	cmp	r0, #0
   12758:	bne	12748 <__assert_fail@plt+0x1454>
   1275c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   12760:	cmp	r0, #0
   12764:	bne	12748 <__assert_fail@plt+0x1454>
   12768:	ldr	r0, [r2, #-8]
   1276c:	cmp	r0, #0
   12770:	bne	12748 <__assert_fail@plt+0x1454>
   12774:	ldr	r0, [r2, #-4]
   12778:	cmp	r0, #0
   1277c:	bne	12748 <__assert_fail@plt+0x1454>
   12780:	ldm	r6, {r0, r2}
   12784:	add	ip, r1, r1, lsl #1
   12788:	cmp	r5, #0
   1278c:	add	r0, r0, ip
   12790:	add	r1, r2, r1
   12794:	stm	r6, {r0, r1}
   12798:	bne	12854 <__assert_fail@plt+0x1560>
   1279c:	ldr	r1, [r6, #12]
   127a0:	ldr	r0, [fp, #16]!
   127a4:	add	r2, r1, #1
   127a8:	cmp	r0, #0
   127ac:	str	r2, [r6, #12]
   127b0:	bne	12724 <__assert_fail@plt+0x1430>
   127b4:	ldr	r1, [sl, #16]!
   127b8:	add	r2, r2, #1
   127bc:	cmp	r1, #0
   127c0:	str	r2, [r6, #12]
   127c4:	bne	126a0 <__assert_fail@plt+0x13ac>
   127c8:	ldr	r1, [r9, #16]!
   127cc:	add	r2, r2, #1
   127d0:	cmp	r1, #0
   127d4:	str	r2, [r6, #12]
   127d8:	bne	12604 <__assert_fail@plt+0x1310>
   127dc:	b	127e4 <__assert_fail@plt+0x14f0>
   127e0:	ldr	r2, [r6, #12]
   127e4:	ldr	r1, [r8, #16]!
   127e8:	add	r2, r2, #1
   127ec:	cmp	r1, #0
   127f0:	str	r2, [r6, #12]
   127f4:	bne	12598 <__assert_fail@plt+0x12a4>
   127f8:	ldr	r3, [sp, #4]
   127fc:	add	r2, r2, #1
   12800:	ldr	r1, [r3, #16]!
   12804:	str	r2, [r6, #12]
   12808:	cmp	r1, #0
   1280c:	str	r3, [sp, #4]
   12810:	bne	1252c <__assert_fail@plt+0x1238>
   12814:	ldr	r3, [sp]
   12818:	add	r2, r2, #1
   1281c:	ldr	r0, [r3, #16]!
   12820:	str	r2, [r6, #12]
   12824:	cmp	r0, #0
   12828:	str	r3, [sp]
   1282c:	bne	124bc <__assert_fail@plt+0x11c8>
   12830:	add	sp, sp, #12
   12834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12838:	ldr	r2, [r0, #4]
   1283c:	cmp	r2, #0
   12840:	ldrne	r2, [r6, #8]
   12844:	addne	r2, r2, #1
   12848:	strne	r2, [r6, #8]
   1284c:	cmp	r5, #0
   12850:	beq	1279c <__assert_fail@plt+0x14a8>
   12854:	ldr	r0, [r5]
   12858:	cmp	r0, #0
   1285c:	beq	1279c <__assert_fail@plt+0x14a8>
   12860:	ldr	r2, [r0]
   12864:	ldr	r4, [r0, #16]
   12868:	cmp	r2, #0
   1286c:	beq	129cc <__assert_fail@plt+0x16d8>
   12870:	ldr	r0, [r6, #8]
   12874:	mov	r1, #0
   12878:	add	r0, r0, #1
   1287c:	str	r0, [r6, #8]
   12880:	b	12888 <__assert_fail@plt+0x1594>
   12884:	add	r1, r1, #1
   12888:	add	r2, r2, #24
   1288c:	ldr	r0, [r2, #-20]	; 0xffffffec
   12890:	cmp	r0, #0
   12894:	bne	12884 <__assert_fail@plt+0x1590>
   12898:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1289c:	cmp	r0, #0
   128a0:	bne	12884 <__assert_fail@plt+0x1590>
   128a4:	ldr	r0, [r2, #-8]
   128a8:	cmp	r0, #0
   128ac:	bne	12884 <__assert_fail@plt+0x1590>
   128b0:	ldr	r0, [r2, #-4]
   128b4:	cmp	r0, #0
   128b8:	bne	12884 <__assert_fail@plt+0x1590>
   128bc:	ldm	r6, {r0, r2}
   128c0:	add	ip, r1, r1, lsl #1
   128c4:	add	r0, r0, ip
   128c8:	add	r1, r2, r1
   128cc:	stm	r6, {r0, r1}
   128d0:	cmp	r4, #0
   128d4:	beq	129ec <__assert_fail@plt+0x16f8>
   128d8:	ldr	r0, [r4]
   128dc:	cmp	r0, #0
   128e0:	beq	129ec <__assert_fail@plt+0x16f8>
   128e4:	ldr	r1, [r0]
   128e8:	ldr	r2, [r0, #16]
   128ec:	cmp	r1, #0
   128f0:	beq	129fc <__assert_fail@plt+0x1708>
   128f4:	ldr	ip, [r6, #8]
   128f8:	mov	r0, #0
   128fc:	add	ip, ip, #1
   12900:	str	ip, [r6, #8]
   12904:	b	1290c <__assert_fail@plt+0x1618>
   12908:	add	r0, r0, #1
   1290c:	add	r1, r1, #24
   12910:	ldr	ip, [r1, #-20]	; 0xffffffec
   12914:	cmp	ip, #0
   12918:	bne	12908 <__assert_fail@plt+0x1614>
   1291c:	ldr	ip, [r1, #-24]	; 0xffffffe8
   12920:	cmp	ip, #0
   12924:	bne	12908 <__assert_fail@plt+0x1614>
   12928:	ldr	ip, [r1, #-8]
   1292c:	cmp	ip, #0
   12930:	bne	12908 <__assert_fail@plt+0x1614>
   12934:	ldr	ip, [r1, #-4]
   12938:	cmp	ip, #0
   1293c:	bne	12908 <__assert_fail@plt+0x1614>
   12940:	ldr	ip, [r6]
   12944:	ldr	r1, [r6, #4]
   12948:	add	lr, r0, r0, lsl #1
   1294c:	add	ip, ip, lr
   12950:	add	r0, r1, r0
   12954:	str	ip, [r6]
   12958:	str	r0, [r6, #4]
   1295c:	cmp	r2, #0
   12960:	beq	129f4 <__assert_fail@plt+0x1700>
   12964:	ldr	r0, [r2]
   12968:	cmp	r0, #0
   1296c:	beq	129f4 <__assert_fail@plt+0x1700>
   12970:	mov	r7, r2
   12974:	mov	r1, r6
   12978:	bl	12440 <__assert_fail@plt+0x114c>
   1297c:	ldr	r1, [r6, #12]
   12980:	ldr	r0, [r7, #16]!
   12984:	add	r1, r1, #1
   12988:	cmp	r0, #0
   1298c:	str	r1, [r6, #12]
   12990:	bne	12974 <__assert_fail@plt+0x1680>
   12994:	ldr	r0, [r4, #16]!
   12998:	add	r1, r1, #1
   1299c:	cmp	r0, #0
   129a0:	str	r1, [r6, #12]
   129a4:	bne	128e4 <__assert_fail@plt+0x15f0>
   129a8:	ldr	r0, [r5, #16]!
   129ac:	add	r1, r1, #1
   129b0:	cmp	r0, #0
   129b4:	str	r1, [r6, #12]
   129b8:	beq	127a0 <__assert_fail@plt+0x14ac>
   129bc:	ldr	r2, [r0]
   129c0:	ldr	r4, [r0, #16]
   129c4:	cmp	r2, #0
   129c8:	bne	12870 <__assert_fail@plt+0x157c>
   129cc:	ldr	r2, [r0, #4]
   129d0:	cmp	r2, #0
   129d4:	beq	128d0 <__assert_fail@plt+0x15dc>
   129d8:	ldr	r2, [r6, #8]
   129dc:	cmp	r4, #0
   129e0:	add	r2, r2, #1
   129e4:	str	r2, [r6, #8]
   129e8:	bne	128d8 <__assert_fail@plt+0x15e4>
   129ec:	ldr	r1, [r6, #12]
   129f0:	b	129a8 <__assert_fail@plt+0x16b4>
   129f4:	ldr	r1, [r6, #12]
   129f8:	b	12994 <__assert_fail@plt+0x16a0>
   129fc:	ldr	r1, [r0, #4]
   12a00:	cmp	r1, #0
   12a04:	ldrne	r1, [r6, #8]
   12a08:	addne	r1, r1, #1
   12a0c:	strne	r1, [r6, #8]
   12a10:	b	1295c <__assert_fail@plt+0x1668>
   12a14:	ldr	r2, [r1, #4]
   12a18:	cmp	r2, #0
   12a1c:	beq	12710 <__assert_fail@plt+0x141c>
   12a20:	ldr	r2, [r6, #8]
   12a24:	cmp	fp, #0
   12a28:	add	r2, r2, #1
   12a2c:	str	r2, [r6, #8]
   12a30:	bne	12718 <__assert_fail@plt+0x1424>
   12a34:	ldr	r2, [r6, #12]
   12a38:	b	127b4 <__assert_fail@plt+0x14c0>
   12a3c:	ldr	r2, [r6, #12]
   12a40:	b	127c8 <__assert_fail@plt+0x14d4>
   12a44:	ldr	r0, [r3, #-8]
   12a48:	cmp	r0, #0
   12a4c:	bne	12484 <__assert_fail@plt+0x1190>
   12a50:	ldr	r0, [r3, #-4]
   12a54:	cmp	r0, #0
   12a58:	bne	12484 <__assert_fail@plt+0x1190>
   12a5c:	ldm	r1, {r0, r3}
   12a60:	add	ip, r2, r2, lsl #1
   12a64:	add	r0, r0, ip
   12a68:	add	r2, r3, r2
   12a6c:	stm	r1, {r0, r2}
   12a70:	b	124a0 <__assert_fail@plt+0x11ac>
   12a74:	ldr	r0, [r2, #-8]
   12a78:	cmp	r0, #0
   12a7c:	bne	124f8 <__assert_fail@plt+0x1204>
   12a80:	ldr	r0, [r2, #-4]
   12a84:	cmp	r0, #0
   12a88:	bne	124f8 <__assert_fail@plt+0x1204>
   12a8c:	ldm	r6, {r0, r2}
   12a90:	add	ip, r1, r1, lsl #1
   12a94:	add	r0, r0, ip
   12a98:	add	r1, r2, r1
   12a9c:	stm	r6, {r0, r1}
   12aa0:	b	12514 <__assert_fail@plt+0x1220>
   12aa4:	ldr	r0, [r2, #-8]
   12aa8:	cmp	r0, #0
   12aac:	bne	12568 <__assert_fail@plt+0x1274>
   12ab0:	ldr	r0, [r2, #-4]
   12ab4:	cmp	r0, #0
   12ab8:	bne	12568 <__assert_fail@plt+0x1274>
   12abc:	ldm	r6, {r0, r2}
   12ac0:	add	ip, r1, r1, lsl #1
   12ac4:	add	r0, r0, ip
   12ac8:	add	r1, r2, r1
   12acc:	stm	r6, {r0, r1}
   12ad0:	b	12584 <__assert_fail@plt+0x1290>
   12ad4:	ldr	r2, [r6, #12]
   12ad8:	b	12814 <__assert_fail@plt+0x1520>
   12adc:	ldr	r2, [r6, #12]
   12ae0:	b	127f8 <__assert_fail@plt+0x1504>
   12ae4:	ldr	r0, [r2, #-8]
   12ae8:	cmp	r0, #0
   12aec:	bne	125d4 <__assert_fail@plt+0x12e0>
   12af0:	ldr	r0, [r2, #-4]
   12af4:	cmp	r0, #0
   12af8:	bne	125d4 <__assert_fail@plt+0x12e0>
   12afc:	ldm	r6, {r0, r2}
   12b00:	add	ip, r1, r1, lsl #1
   12b04:	add	r0, r0, ip
   12b08:	add	r1, r2, r1
   12b0c:	stm	r6, {r0, r1}
   12b10:	b	125f0 <__assert_fail@plt+0x12fc>

00012b14 <argp_parse@@Base>:
   12b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b18:	add	fp, sp, #32
   12b1c:	tst	r3, #1
   12b20:	sub	sp, sp, #220	; 0xdc
   12b24:	mov	r7, r3
   12b28:	mov	r8, r0
   12b2c:	str	r1, [fp, #-240]	; 0xffffff10
   12b30:	str	r2, [fp, #-236]	; 0xffffff14
   12b34:	bne	12b60 <argp_parse@@Base+0x4c>
   12b38:	ldr	r3, [pc, #3488]	; 138e0 <argp_parse@@Base+0xdcc>
   12b3c:	ldr	r4, [pc, #3488]	; 138e4 <argp_parse@@Base+0xdd0>
   12b40:	ldr	r2, [r3]
   12b44:	cmp	r2, #0
   12b48:	ldreq	r2, [fp, #-236]	; 0xffffff14
   12b4c:	ldreq	r2, [r2]
   12b50:	streq	r2, [r3]
   12b54:	ldr	r3, [r4]
   12b58:	cmp	r3, #0
   12b5c:	beq	13240 <argp_parse@@Base+0x72c>
   12b60:	ands	r3, r7, #16
   12b64:	beq	13124 <argp_parse@@Base+0x610>
   12b68:	sub	r5, fp, #196	; 0xc4
   12b6c:	mov	r0, r5
   12b70:	mov	r2, #36	; 0x24
   12b74:	mov	r1, #0
   12b78:	bl	11204 <memset@plt>
   12b7c:	ands	r3, r7, #4
   12b80:	str	r3, [fp, #-244]	; 0xffffff0c
   12b84:	mov	r3, #0
   12b88:	moveq	r0, #1
   12b8c:	movne	r0, #0
   12b90:	cmp	r8, r3
   12b94:	str	r3, [fp, #-224]	; 0xffffff20
   12b98:	str	r3, [fp, #-220]	; 0xffffff24
   12b9c:	str	r3, [fp, #-216]	; 0xffffff28
   12ba0:	str	r0, [fp, #-228]	; 0xffffff1c
   12ba4:	beq	12c18 <argp_parse@@Base+0x104>
   12ba8:	ldr	r4, [r8, #16]
   12bac:	ldr	r3, [r8]
   12bb0:	cmp	r3, #0
   12bb4:	movne	r2, #1
   12bb8:	strne	r2, [fp, #-220]	; 0xffffff24
   12bbc:	movne	r2, #0
   12bc0:	bne	12bcc <argp_parse@@Base+0xb8>
   12bc4:	b	1370c <argp_parse@@Base+0xbf8>
   12bc8:	add	r2, r2, #1
   12bcc:	add	r3, r3, #24
   12bd0:	ldr	r1, [r3, #-20]	; 0xffffffec
   12bd4:	cmp	r1, #0
   12bd8:	bne	12bc8 <argp_parse@@Base+0xb4>
   12bdc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   12be0:	cmp	r1, #0
   12be4:	bne	12bc8 <argp_parse@@Base+0xb4>
   12be8:	ldr	r1, [r3, #-8]
   12bec:	cmp	r1, #0
   12bf0:	bne	12bc8 <argp_parse@@Base+0xb4>
   12bf4:	ldr	r1, [r3, #-4]
   12bf8:	cmp	r1, #0
   12bfc:	bne	12bc8 <argp_parse@@Base+0xb4>
   12c00:	add	r3, r2, r2, lsl #1
   12c04:	add	r0, r3, r0
   12c08:	str	r2, [fp, #-224]	; 0xffffff20
   12c0c:	str	r0, [fp, #-228]	; 0xffffff1c
   12c10:	mov	r6, #72	; 0x48
   12c14:	b	13724 <argp_parse@@Base+0xc10>
   12c18:	mov	sl, #36	; 0x24
   12c1c:	mov	r6, sl
   12c20:	mov	r4, r8
   12c24:	mov	r3, #52	; 0x34
   12c28:	str	r3, [fp, #-232]	; 0xffffff18
   12c2c:	add	r0, r3, r0
   12c30:	add	r0, r0, #1
   12c34:	bl	150dc <argp_parse@@Base+0x25c8>
   12c38:	cmp	r0, #0
   12c3c:	mov	r9, r0
   12c40:	str	r0, [fp, #-40]	; 0xffffffd8
   12c44:	moveq	r5, #12
   12c48:	beq	13044 <argp_parse@@Base+0x530>
   12c4c:	mov	lr, r5
   12c50:	mov	r3, #1
   12c54:	str	r3, [fp, #-196]	; 0xffffff3c
   12c58:	str	r3, [fp, #-192]	; 0xffffff40
   12c5c:	ldm	lr!, {r0, r1, r2, r3}
   12c60:	sub	ip, fp, #148	; 0x94
   12c64:	add	r5, r9, sl
   12c68:	ldr	sl, [fp, #-232]	; 0xffffff18
   12c6c:	stmia	ip!, {r0, r1, r2, r3}
   12c70:	add	r6, r9, r6
   12c74:	ldm	lr!, {r0, r1, r2, r3}
   12c78:	add	sl, r9, sl
   12c7c:	str	r6, [fp, #-104]	; 0xffffff98
   12c80:	str	r5, [fp, #-152]	; 0xffffff68
   12c84:	ldr	lr, [lr]
   12c88:	stmia	ip!, {r0, r1, r2, r3}
   12c8c:	mov	r2, r4
   12c90:	mov	r0, r6
   12c94:	mov	r1, #0
   12c98:	str	r9, [fp, #-112]	; 0xffffff90
   12c9c:	str	lr, [ip]
   12ca0:	str	sl, [fp, #-156]	; 0xffffff64
   12ca4:	sub	r4, fp, #160	; 0xa0
   12ca8:	bl	11204 <memset@plt>
   12cac:	tst	r7, #8
   12cb0:	str	r5, [fp, #-204]	; 0xffffff34
   12cb4:	str	sl, [fp, #-208]	; 0xffffff30
   12cb8:	str	r6, [fp, #-200]	; 0xffffff38
   12cbc:	str	r4, [fp, #-212]	; 0xffffff2c
   12cc0:	beq	131d8 <argp_parse@@Base+0x6c4>
   12cc4:	ldr	r2, [fp, #-232]	; 0xffffff18
   12cc8:	add	sl, sl, #1
   12ccc:	mov	r3, #45	; 0x2d
   12cd0:	str	sl, [fp, #-208]	; 0xffffff30
   12cd4:	strb	r3, [r9, r2]
   12cd8:	mov	r2, #0
   12cdc:	strb	r2, [sl]
   12ce0:	ldr	r3, [fp, #-204]	; 0xffffff34
   12ce4:	cmp	r8, r2
   12ce8:	str	r2, [r3]
   12cec:	str	r8, [fp, #-160]	; 0xffffff60
   12cf0:	beq	13208 <argp_parse@@Base+0x6f4>
   12cf4:	sub	r1, fp, #212	; 0xd4
   12cf8:	mov	r0, r8
   12cfc:	str	r1, [sp]
   12d00:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d04:	mov	r1, r2
   12d08:	bl	11fac <__assert_fail@plt+0xcb8>
   12d0c:	ldr	r8, [fp, #-160]	; 0xffffff60
   12d10:	ldr	r5, [fp, #-112]	; 0xffffff90
   12d14:	mov	r6, r0
   12d18:	str	r0, [fp, #-108]	; 0xffffff94
   12d1c:	mov	r2, #56	; 0x38
   12d20:	mov	r1, #0
   12d24:	sub	r0, fp, #96	; 0x60
   12d28:	bl	11204 <memset@plt>
   12d2c:	ldr	r2, [pc, #2996]	; 138e8 <argp_parse@@Base+0xdd4>
   12d30:	ldr	r3, [pc, #2996]	; 138ec <argp_parse@@Base+0xdd8>
   12d34:	ldr	r0, [fp, #-240]	; 0xffffff10
   12d38:	ldr	r1, [r2]
   12d3c:	str	r0, [fp, #-92]	; 0xffffffa4
   12d40:	ldr	r2, [r3]
   12d44:	ldr	r0, [fp, #-236]	; 0xffffff14
   12d48:	mov	r3, #1
   12d4c:	cmp	r5, r6
   12d50:	str	r8, [fp, #-96]	; 0xffffffa0
   12d54:	str	r0, [fp, #-88]	; 0xffffffa8
   12d58:	str	r7, [fp, #-80]	; 0xffffffb0
   12d5c:	str	r4, [fp, #-44]	; 0xffffffd4
   12d60:	str	r1, [fp, #-52]	; 0xffffffcc
   12d64:	str	r2, [fp, #-48]	; 0xffffffd0
   12d68:	str	r3, [fp, #-100]	; 0xffffff9c
   12d6c:	bcc	13050 <argp_parse@@Base+0x53c>
   12d70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12d74:	tst	r3, #2
   12d78:	bne	13218 <argp_parse@@Base+0x704>
   12d7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12d80:	ldr	r4, [fp, #-92]	; 0xffffffa4
   12d84:	mov	r2, #1
   12d88:	str	r2, [fp, #-144]	; 0xffffff70
   12d8c:	ldr	r2, [fp, #-236]	; 0xffffff14
   12d90:	cmp	r2, r3
   12d94:	beq	137b8 <argp_parse@@Base+0xca4>
   12d98:	ldr	r3, [pc, #2884]	; 138e4 <argp_parse@@Base+0xdd0>
   12d9c:	ldr	r3, [r3]
   12da0:	str	r3, [fp, #-56]	; 0xffffffc8
   12da4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12da8:	ldr	r5, [fp, #-84]	; 0xffffffac
   12dac:	ldr	sl, [pc, #2876]	; 138f0 <argp_parse@@Base+0xddc>
   12db0:	mov	r0, r4
   12db4:	mov	r6, #0
   12db8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12dbc:	cmp	r3, #0
   12dc0:	beq	13254 <argp_parse@@Base+0x740>
   12dc4:	cmp	r3, r5
   12dc8:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12dcc:	bgt	13254 <argp_parse@@Base+0x740>
   12dd0:	cmp	r5, r0
   12dd4:	blt	135f0 <argp_parse@@Base+0xadc>
   12dd8:	cmp	r5, r0
   12ddc:	bne	135fc <argp_parse@@Base+0xae8>
   12de0:	ldr	r6, [fp, #-112]	; 0xffffff90
   12de4:	ldr	ip, [fp, #-108]	; 0xffffff94
   12de8:	cmp	r6, ip
   12dec:	bcs	13880 <argp_parse@@Base+0xd6c>
   12df0:	mov	r5, #0
   12df4:	add	r6, r6, #36	; 0x24
   12df8:	mov	r8, r5
   12dfc:	ldr	r7, [pc, #2800]	; 138f4 <argp_parse@@Base+0xde0>
   12e00:	mov	r0, r5
   12e04:	b	12e4c <argp_parse@@Base+0x338>
   12e08:	ldr	ip, [r6, #-4]
   12e0c:	str	ip, [fp, #-60]	; 0xffffffc4
   12e10:	ldr	ip, [r6, #-12]
   12e14:	str	ip, [fp, #-68]	; 0xffffffbc
   12e18:	ldr	ip, [r6, #-8]
   12e1c:	str	r3, [fp, #-76]	; 0xffffffb4
   12e20:	str	ip, [fp, #-64]	; 0xffffffc0
   12e24:	blx	r4
   12e28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12e2c:	str	r3, [r6, #-4]
   12e30:	ldr	ip, [fp, #-108]	; 0xffffff94
   12e34:	cmp	ip, r6
   12e38:	bls	13828 <argp_parse@@Base+0xd14>
   12e3c:	cmp	r0, #7
   12e40:	cmpne	r0, #0
   12e44:	bne	137e8 <argp_parse@@Base+0xcd4>
   12e48:	add	r6, r6, #36	; 0x24
   12e4c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   12e50:	cmp	r3, #0
   12e54:	bne	12e34 <argp_parse@@Base+0x320>
   12e58:	ldr	r4, [r6, #-36]	; 0xffffffdc
   12e5c:	sub	r2, fp, #96	; 0x60
   12e60:	cmp	r4, #0
   12e64:	mov	r1, r8
   12e68:	mov	r0, r7
   12e6c:	bne	12e08 <argp_parse@@Base+0x2f4>
   12e70:	cmp	ip, r6
   12e74:	mov	r0, #7
   12e78:	bhi	12e48 <argp_parse@@Base+0x334>
   12e7c:	ldr	r6, [fp, #-112]	; 0xffffff90
   12e80:	sub	r4, ip, #36	; 0x24
   12e84:	cmp	r6, r4
   12e88:	movls	r5, #7
   12e8c:	bhi	12f14 <argp_parse@@Base+0x400>
   12e90:	cmp	r5, #7
   12e94:	cmpne	r5, #0
   12e98:	bne	137fc <argp_parse@@Base+0xce8>
   12e9c:	sub	r4, r4, #36	; 0x24
   12ea0:	mov	r8, #0
   12ea4:	ldr	r7, [pc, #2636]	; 138f8 <argp_parse@@Base+0xde4>
   12ea8:	b	12ef4 <argp_parse@@Base+0x3e0>
   12eac:	ldr	ip, [r4, #68]	; 0x44
   12eb0:	ldr	lr, [r4, #48]	; 0x30
   12eb4:	str	ip, [fp, #-60]	; 0xffffffc4
   12eb8:	ldr	ip, [r4, #60]	; 0x3c
   12ebc:	str	ip, [fp, #-68]	; 0xffffffbc
   12ec0:	ldr	ip, [r4, #64]	; 0x40
   12ec4:	str	lr, [fp, #-76]	; 0xffffffb4
   12ec8:	str	ip, [fp, #-64]	; 0xffffffc0
   12ecc:	blx	r3
   12ed0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ed4:	str	r3, [r4, #68]	; 0x44
   12ed8:	ldr	r6, [fp, #-112]	; 0xffffff90
   12edc:	cmp	r6, r4
   12ee0:	bhi	13878 <argp_parse@@Base+0xd64>
   12ee4:	cmp	r0, #7
   12ee8:	cmpne	r0, #0
   12eec:	bne	1380c <argp_parse@@Base+0xcf8>
   12ef0:	sub	r4, r4, #36	; 0x24
   12ef4:	ldr	r3, [r4, #36]	; 0x24
   12ef8:	sub	r2, fp, #96	; 0x60
   12efc:	cmp	r3, #0
   12f00:	mov	r1, r8
   12f04:	mov	r0, r7
   12f08:	bne	12eac <argp_parse@@Base+0x398>
   12f0c:	cmp	r6, r4
   12f10:	bls	12ef0 <argp_parse@@Base+0x3dc>
   12f14:	ldr	r3, [fp, #4]
   12f18:	cmp	r3, #0
   12f1c:	beq	12f38 <argp_parse@@Base+0x424>
   12f20:	mov	r5, #0
   12f24:	ldr	r2, [fp, #4]
   12f28:	ldr	r3, [fp, #-84]	; 0xffffffac
   12f2c:	str	r3, [r2]
   12f30:	cmp	r5, #0
   12f34:	bne	1381c <argp_parse@@Base+0xd08>
   12f38:	ldr	ip, [fp, #-108]	; 0xffffff94
   12f3c:	b	13614 <argp_parse@@Base+0xb00>
   12f40:	ldr	r6, [fp, #-112]	; 0xffffff90
   12f44:	mov	r5, r0
   12f48:	ldr	ip, [fp, #-108]	; 0xffffff94
   12f4c:	cmp	r6, ip
   12f50:	mov	r4, ip
   12f54:	subcs	r4, ip, #36	; 0x24
   12f58:	bcs	12fc8 <argp_parse@@Base+0x4b4>
   12f5c:	ldr	r8, [pc, #2456]	; 138fc <argp_parse@@Base+0xde8>
   12f60:	add	r6, r6, #36	; 0x24
   12f64:	mov	r9, #0
   12f68:	ldr	r3, [r6, #-36]	; 0xffffffdc
   12f6c:	sub	r2, fp, #96	; 0x60
   12f70:	cmp	r3, #0
   12f74:	mov	r1, r9
   12f78:	mov	r0, r8
   12f7c:	mov	r7, r6
   12f80:	beq	12fb4 <argp_parse@@Base+0x4a0>
   12f84:	ldr	ip, [r6, #-4]
   12f88:	ldr	lr, [r6, #-24]	; 0xffffffe8
   12f8c:	str	ip, [fp, #-60]	; 0xffffffc4
   12f90:	ldr	ip, [r6, #-12]
   12f94:	str	ip, [fp, #-68]	; 0xffffffbc
   12f98:	ldr	ip, [r6, #-8]
   12f9c:	str	lr, [fp, #-76]	; 0xffffffb4
   12fa0:	str	ip, [fp, #-64]	; 0xffffffc0
   12fa4:	blx	r3
   12fa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12fac:	str	r3, [r6, #-4]
   12fb0:	ldr	r4, [fp, #-108]	; 0xffffff94
   12fb4:	cmp	r7, r4
   12fb8:	add	r6, r6, #36	; 0x24
   12fbc:	bcc	12f68 <argp_parse@@Base+0x454>
   12fc0:	ldr	r6, [fp, #-112]	; 0xffffff90
   12fc4:	sub	r4, r4, #36	; 0x24
   12fc8:	cmp	r6, r4
   12fcc:	bhi	13034 <argp_parse@@Base+0x520>
   12fd0:	ldr	r8, [pc, #2344]	; 13900 <argp_parse@@Base+0xdec>
   12fd4:	sub	r4, r4, #36	; 0x24
   12fd8:	mov	r9, #0
   12fdc:	ldr	r3, [r4, #36]	; 0x24
   12fe0:	sub	r2, fp, #96	; 0x60
   12fe4:	cmp	r3, #0
   12fe8:	mov	r1, r9
   12fec:	mov	r0, r8
   12ff0:	mov	r7, r4
   12ff4:	beq	13028 <argp_parse@@Base+0x514>
   12ff8:	ldr	ip, [r4, #68]	; 0x44
   12ffc:	ldr	lr, [r4, #48]	; 0x30
   13000:	str	ip, [fp, #-60]	; 0xffffffc4
   13004:	ldr	ip, [r4, #60]	; 0x3c
   13008:	str	ip, [fp, #-68]	; 0xffffffbc
   1300c:	ldr	ip, [r4, #64]	; 0x40
   13010:	str	lr, [fp, #-76]	; 0xffffffb4
   13014:	str	ip, [fp, #-64]	; 0xffffffc0
   13018:	blx	r3
   1301c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13020:	str	r3, [r4, #68]	; 0x44
   13024:	ldr	r6, [fp, #-112]	; 0xffffff90
   13028:	cmp	r6, r7
   1302c:	sub	r4, r4, #36	; 0x24
   13030:	bls	12fdc <argp_parse@@Base+0x4c8>
   13034:	cmp	r5, #7
   13038:	moveq	r5, #22
   1303c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13040:	bl	13a90 <argp_parse@@Base+0xf7c>
   13044:	mov	r0, r5
   13048:	sub	sp, fp, #32
   1304c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13050:	ldr	r3, [fp, #8]
   13054:	add	r4, r5, #36	; 0x24
   13058:	str	r3, [r5, #24]
   1305c:	mov	r7, #0
   13060:	ldr	r6, [pc, #2204]	; 13904 <argp_parse@@Base+0xdf0>
   13064:	b	130bc <argp_parse@@Base+0x5a8>
   13068:	ldr	r2, [r4, #-4]
   1306c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13070:	str	r2, [fp, #-60]	; 0xffffffc4
   13074:	ldr	r1, [r4, #-12]
   13078:	sub	r2, fp, #96	; 0x60
   1307c:	str	r1, [fp, #-68]	; 0xffffffbc
   13080:	ldr	ip, [r4, #-8]
   13084:	mov	r1, r7
   13088:	str	r0, [fp, #-76]	; 0xffffffb4
   1308c:	str	ip, [fp, #-64]	; 0xffffffc0
   13090:	mov	r0, r6
   13094:	blx	r3
   13098:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1309c:	str	r3, [r4, #-4]
   130a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   130a4:	cmp	r3, r4
   130a8:	bls	138b4 <argp_parse@@Base+0xda0>
   130ac:	cmp	r0, #7
   130b0:	cmpne	r0, #0
   130b4:	bne	131f8 <argp_parse@@Base+0x6e4>
   130b8:	add	r4, r4, #36	; 0x24
   130bc:	ldr	r3, [r4, #-20]	; 0xffffffec
   130c0:	cmp	r3, #0
   130c4:	ldrne	r3, [r3, #28]
   130c8:	ldrne	r2, [r4, #-16]
   130cc:	ldrne	r3, [r3, r2, lsl #2]
   130d0:	strne	r3, [r4, #-12]
   130d4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   130d8:	cmp	r3, #0
   130dc:	bne	13068 <argp_parse@@Base+0x554>
   130e0:	ldr	r3, [r4, #-32]	; 0xffffffe0
   130e4:	ldr	r3, [r3, #16]
   130e8:	cmp	r3, #0
   130ec:	beq	13114 <argp_parse@@Base+0x600>
   130f0:	ldr	r3, [r3]
   130f4:	cmp	r3, #0
   130f8:	beq	13114 <argp_parse@@Base+0x600>
   130fc:	ldr	r3, [r4, #-8]
   13100:	ldr	r2, [r4, #-12]
   13104:	str	r2, [r3]
   13108:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1310c:	cmp	r3, #0
   13110:	bne	13068 <argp_parse@@Base+0x554>
   13114:	ldr	r3, [fp, #-108]	; 0xffffff94
   13118:	cmp	r3, r4
   1311c:	bhi	130b8 <argp_parse@@Base+0x5a4>
   13120:	b	12d70 <argp_parse@@Base+0x25c>
   13124:	sub	sp, sp, #72	; 0x48
   13128:	add	r4, sp, #8
   1312c:	sub	sp, sp, #40	; 0x28
   13130:	add	r6, sp, #8
   13134:	mov	r1, r3
   13138:	str	r3, [r6]
   1313c:	str	r3, [r6, #4]
   13140:	str	r3, [r6, #8]
   13144:	str	r3, [r6, #12]
   13148:	str	r3, [r6, #20]
   1314c:	str	r3, [r6, #24]
   13150:	mov	r2, #64	; 0x40
   13154:	mov	r0, r4
   13158:	str	r4, [r6, #16]
   1315c:	bl	11204 <memset@plt>
   13160:	ldr	r2, [pc, #1952]	; 13908 <argp_parse@@Base+0xdf4>
   13164:	cmp	r8, #0
   13168:	addne	r3, r4, #16
   1316c:	ldr	r2, [r2]
   13170:	moveq	r3, r4
   13174:	ldr	r1, [pc, #1936]	; 1390c <argp_parse@@Base+0xdf8>
   13178:	strne	r8, [r4]
   1317c:	cmp	r2, #0
   13180:	str	r1, [r3]
   13184:	beq	137d0 <argp_parse@@Base+0xcbc>
   13188:	ldr	r2, [pc, #1920]	; 13910 <argp_parse@@Base+0xdfc>
   1318c:	add	ip, r3, #32
   13190:	str	r2, [r3, #16]
   13194:	mov	r9, #0
   13198:	sub	r5, fp, #196	; 0xc4
   1319c:	mov	r1, r9
   131a0:	mov	r0, r5
   131a4:	mov	r2, #36	; 0x24
   131a8:	str	r9, [ip]
   131ac:	bl	11204 <memset@plt>
   131b0:	ands	r3, r7, #4
   131b4:	moveq	r0, #1
   131b8:	movne	r0, r9
   131bc:	str	r3, [fp, #-244]	; 0xffffff0c
   131c0:	mov	r8, r6
   131c4:	str	r9, [fp, #-224]	; 0xffffff20
   131c8:	str	r9, [fp, #-220]	; 0xffffff24
   131cc:	str	r9, [fp, #-216]	; 0xffffff28
   131d0:	str	r0, [fp, #-228]	; 0xffffff1c
   131d4:	b	12bac <argp_parse@@Base+0x98>
   131d8:	ldr	r3, [fp, #-244]	; 0xffffff0c
   131dc:	cmp	r3, #0
   131e0:	addne	r3, sl, #1
   131e4:	movne	r2, #43	; 0x2b
   131e8:	strbne	r2, [sl]
   131ec:	strne	r3, [fp, #-208]	; 0xffffff30
   131f0:	movne	sl, r3
   131f4:	b	12cd8 <argp_parse@@Base+0x1c4>
   131f8:	mov	r5, r0
   131fc:	mov	r0, r5
   13200:	sub	sp, fp, #32
   13204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13208:	ldr	r5, [fp, #-112]	; 0xffffff90
   1320c:	mov	r6, r5
   13210:	str	r5, [fp, #-108]	; 0xffffff94
   13214:	b	12d1c <argp_parse@@Base+0x208>
   13218:	tst	r3, #1
   1321c:	mov	r3, #0
   13220:	str	r3, [fp, #-144]	; 0xffffff70
   13224:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13228:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1322c:	subne	r3, r3, #4
   13230:	addne	r4, r4, #1
   13234:	strne	r3, [fp, #-88]	; 0xffffffa8
   13238:	strne	r4, [fp, #-92]	; 0xffffffa4
   1323c:	b	12d8c <argp_parse@@Base+0x278>
   13240:	ldr	r3, [fp, #-236]	; 0xffffff14
   13244:	ldr	r0, [r3]
   13248:	bl	139e4 <argp_parse@@Base+0xed0>
   1324c:	str	r0, [r4]
   13250:	b	12b60 <argp_parse@@Base+0x4c>
   13254:	cmp	r2, #0
   13258:	beq	12dd0 <argp_parse@@Base+0x2bc>
   1325c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13260:	str	r5, [fp, #-148]	; 0xffffff6c
   13264:	ands	ip, r3, #64	; 0x40
   13268:	mvn	r3, #0
   1326c:	str	r3, [fp, #-140]	; 0xffffff74
   13270:	ldr	r2, [fp, #-156]	; 0xffffff64
   13274:	ldr	r3, [fp, #-152]	; 0xffffff68
   13278:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1327c:	beq	1359c <argp_parse@@Base+0xa88>
   13280:	sub	ip, fp, #148	; 0x94
   13284:	stm	sp, {r6, ip}
   13288:	bl	13b64 <argp_parse@@Base+0x1050>
   1328c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13290:	str	r5, [fp, #-84]	; 0xffffffac
   13294:	mov	r7, r0
   13298:	cmn	r7, #1
   1329c:	beq	135bc <argp_parse@@Base+0xaa8>
   132a0:	cmp	r7, #63	; 0x3f
   132a4:	beq	136c0 <argp_parse@@Base+0xbac>
   132a8:	cmp	r7, #1
   132ac:	beq	13404 <argp_parse@@Base+0x8f0>
   132b0:	asrs	r8, r7, #24
   132b4:	bne	13360 <argp_parse@@Base+0x84c>
   132b8:	mov	r1, r7
   132bc:	ldr	r0, [fp, #-156]	; 0xffffff64
   132c0:	bl	111c8 <strchr@plt>
   132c4:	cmp	r0, #0
   132c8:	beq	133d0 <argp_parse@@Base+0x8bc>
   132cc:	ldr	r4, [fp, #-112]	; 0xffffff90
   132d0:	ldr	r2, [fp, #-108]	; 0xffffff94
   132d4:	cmp	r4, r2
   132d8:	bcc	132ec <argp_parse@@Base+0x7d8>
   132dc:	b	133d0 <argp_parse@@Base+0x8bc>
   132e0:	add	r4, r4, #36	; 0x24
   132e4:	cmp	r4, r2
   132e8:	bcs	133d0 <argp_parse@@Base+0x8bc>
   132ec:	ldr	r3, [r4, #8]
   132f0:	cmp	r0, r3
   132f4:	bcs	132e0 <argp_parse@@Base+0x7cc>
   132f8:	ldr	r3, [r4]
   132fc:	cmp	r3, #0
   13300:	beq	133d0 <argp_parse@@Base+0x8bc>
   13304:	ldr	r2, [r4, #32]
   13308:	ldr	r0, [r4, #28]
   1330c:	ldr	ip, [r4, #24]
   13310:	str	r2, [fp, #-60]	; 0xffffffc4
   13314:	ldr	r2, [r4, #12]
   13318:	ldr	r1, [fp, #-136]	; 0xffffff78
   1331c:	str	r0, [fp, #-64]	; 0xffffffc0
   13320:	str	r2, [fp, #-76]	; 0xffffffb4
   13324:	str	ip, [fp, #-68]	; 0xffffffbc
   13328:	sub	r2, fp, #96	; 0x60
   1332c:	mov	r0, r7
   13330:	blx	r3
   13334:	mov	r8, r6
   13338:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1333c:	str	r3, [r4, #32]
   13340:	cmp	r0, #7
   13344:	beq	133c8 <argp_parse@@Base+0x8b4>
   13348:	cmp	r0, #0
   1334c:	bne	12f40 <argp_parse@@Base+0x42c>
   13350:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13354:	ldr	r5, [fp, #-84]	; 0xffffffac
   13358:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1335c:	b	12db8 <argp_parse@@Base+0x2a4>
   13360:	add	r3, r8, r8, lsl #3
   13364:	ldr	r2, [fp, #-112]	; 0xffffff90
   13368:	lsl	r3, r3, #2
   1336c:	sub	r3, r3, #36	; 0x24
   13370:	add	r4, r2, r3
   13374:	ldr	r5, [r2, r3]
   13378:	ands	r3, r7, #8388608	; 0x800000
   1337c:	movne	r3, #-16777216	; 0xff000000
   13380:	cmp	r5, #0
   13384:	beq	13554 <argp_parse@@Base+0xa40>
   13388:	ldr	r0, [r4, #32]
   1338c:	ldr	r2, [r4, #24]
   13390:	str	r0, [fp, #-60]	; 0xffffffc4
   13394:	ldr	r0, [r4, #28]
   13398:	str	r2, [fp, #-68]	; 0xffffffbc
   1339c:	ldr	r2, [r4, #12]
   133a0:	str	r0, [fp, #-64]	; 0xffffffc0
   133a4:	bic	r0, r7, #-16777216	; 0xff000000
   133a8:	str	r2, [fp, #-76]	; 0xffffffb4
   133ac:	orr	r0, r0, r3
   133b0:	ldr	r1, [fp, #-136]	; 0xffffff78
   133b4:	sub	r2, fp, #96	; 0x60
   133b8:	blx	r5
   133bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   133c0:	str	r3, [r4, #32]
   133c4:	b	13340 <argp_parse@@Base+0x82c>
   133c8:	cmp	r8, #0
   133cc:	bne	13554 <argp_parse@@Base+0xa40>
   133d0:	mov	r2, r7
   133d4:	ldr	r3, [pc, #1336]	; 13914 <argp_parse@@Base+0xe00>
   133d8:	ldr	r1, [pc, #1336]	; 13918 <argp_parse@@Base+0xe04>
   133dc:	sub	r0, fp, #96	; 0x60
   133e0:	bl	194a8 <argp_error@@Base>
   133e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   133e8:	mov	r2, #260	; 0x104
   133ec:	sub	r0, fp, #96	; 0x60
   133f0:	bl	193f8 <argp_state_help@@Base>
   133f4:	mov	r5, #7
   133f8:	ldr	r6, [fp, #-112]	; 0xffffff90
   133fc:	ldr	ip, [fp, #-108]	; 0xffffff94
   13400:	b	12f4c <argp_parse@@Base+0x438>
   13404:	ldr	r7, [fp, #-136]	; 0xffffff78
   13408:	ldr	r3, [fp, #-112]	; 0xffffff90
   1340c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13410:	sub	r8, r5, #1
   13414:	cmp	r3, ip
   13418:	str	r8, [fp, #-84]	; 0xffffffac
   1341c:	bcs	13548 <argp_parse@@Base+0xa34>
   13420:	mov	lr, r8
   13424:	add	r4, r3, #36	; 0x24
   13428:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1342c:	add	r5, lr, #1
   13430:	cmp	r3, #0
   13434:	str	r5, [fp, #-84]	; 0xffffffac
   13438:	sub	r2, fp, #96	; 0x60
   1343c:	mov	r1, r7
   13440:	mov	r0, r6
   13444:	sub	r5, r4, #36	; 0x24
   13448:	mov	r9, r4
   1344c:	streq	lr, [fp, #-84]	; 0xffffffac
   13450:	beq	1353c <argp_parse@@Base+0xa28>
   13454:	ldr	ip, [r4, #-4]
   13458:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1345c:	str	ip, [fp, #-60]	; 0xffffffc4
   13460:	ldr	ip, [r4, #-12]
   13464:	str	ip, [fp, #-68]	; 0xffffffbc
   13468:	ldr	ip, [r4, #-8]
   1346c:	str	lr, [fp, #-76]	; 0xffffffb4
   13470:	str	ip, [fp, #-64]	; 0xffffffc0
   13474:	blx	r3
   13478:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1347c:	str	r3, [r4, #-4]
   13480:	cmp	r0, #7
   13484:	beq	134c0 <argp_parse@@Base+0x9ac>
   13488:	cmp	r0, #0
   1348c:	bne	12f40 <argp_parse@@Base+0x42c>
   13490:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13494:	ldr	r5, [fp, #-84]	; 0xffffffac
   13498:	cmp	r8, r5
   1349c:	sublt	r8, r5, r8
   134a0:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   134a4:	movge	r3, #1
   134a8:	addlt	r8, r3, r8
   134ac:	strlt	r8, [r4, #-24]	; 0xffffffe8
   134b0:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   134b4:	strge	r3, [fp, #-100]	; 0xffffff9c
   134b8:	movge	r2, r3
   134bc:	b	12db8 <argp_parse@@Base+0x2a4>
   134c0:	ldr	lr, [fp, #-84]	; 0xffffffac
   134c4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   134c8:	sub	lr, lr, #1
   134cc:	cmp	r3, #0
   134d0:	str	lr, [fp, #-84]	; 0xffffffac
   134d4:	beq	13538 <argp_parse@@Base+0xa24>
   134d8:	add	r0, r5, #24
   134dc:	ldr	r2, [r5, #12]
   134e0:	ldm	r0, {r0, r1, ip}
   134e4:	str	r2, [fp, #-76]	; 0xffffffb4
   134e8:	sub	r2, fp, #96	; 0x60
   134ec:	str	ip, [fp, #-60]	; 0xffffffc4
   134f0:	str	r0, [fp, #-68]	; 0xffffffbc
   134f4:	str	r1, [fp, #-64]	; 0xffffffc0
   134f8:	mov	r0, sl
   134fc:	mov	r1, r6
   13500:	blx	r3
   13504:	ldr	ip, [fp, #-108]	; 0xffffff94
   13508:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1350c:	cmp	r4, ip
   13510:	movcs	r1, #0
   13514:	movcc	r1, #1
   13518:	mov	r3, r4
   1351c:	str	r2, [r5, #32]
   13520:	cmp	r0, #7
   13524:	movne	r1, #0
   13528:	cmp	r1, #0
   1352c:	beq	1389c <argp_parse@@Base+0xd88>
   13530:	ldr	lr, [fp, #-84]	; 0xffffffac
   13534:	b	13424 <argp_parse@@Base+0x910>
   13538:	ldr	ip, [fp, #-108]	; 0xffffff94
   1353c:	cmp	r9, ip
   13540:	add	r4, r4, #36	; 0x24
   13544:	bcc	13428 <argp_parse@@Base+0x914>
   13548:	ldr	r5, [fp, #-84]	; 0xffffffac
   1354c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13550:	b	12dd8 <argp_parse@@Base+0x2c4>
   13554:	ldr	r3, [fp, #-152]	; 0xffffff68
   13558:	ldr	r2, [r3, #12]
   1355c:	cmp	r7, r2
   13560:	bne	13578 <argp_parse@@Base+0xa64>
   13564:	b	136ac <argp_parse@@Base+0xb98>
   13568:	add	r3, r3, #16
   1356c:	ldr	r2, [r3, #12]
   13570:	cmp	r7, r2
   13574:	beq	136ac <argp_parse@@Base+0xb98>
   13578:	ldr	r2, [r3]
   1357c:	cmp	r2, #0
   13580:	bne	13568 <argp_parse@@Base+0xa54>
   13584:	ldr	r2, [pc, #912]	; 1391c <argp_parse@@Base+0xe08>
   13588:	ldr	r3, [pc, #900]	; 13914 <argp_parse@@Base+0xe00>
   1358c:	ldr	r1, [pc, #908]	; 13920 <argp_parse@@Base+0xe0c>
   13590:	sub	r0, fp, #96	; 0x60
   13594:	bl	194a8 <argp_error@@Base>
   13598:	b	133e4 <argp_parse@@Base+0x8d0>
   1359c:	sub	lr, fp, #148	; 0x94
   135a0:	stm	sp, {ip, lr}
   135a4:	bl	13b10 <argp_parse@@Base+0xffc>
   135a8:	ldr	r5, [fp, #-148]	; 0xffffff6c
   135ac:	str	r5, [fp, #-84]	; 0xffffffac
   135b0:	mov	r7, r0
   135b4:	cmn	r7, #1
   135b8:	bne	132a0 <argp_parse@@Base+0x78c>
   135bc:	cmp	r5, #1
   135c0:	str	r6, [fp, #-100]	; 0xffffff9c
   135c4:	ble	135e4 <argp_parse@@Base+0xad0>
   135c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   135cc:	sub	r3, r5, #-1073741823	; 0xc0000001
   135d0:	ldr	r1, [pc, #844]	; 13924 <argp_parse@@Base+0xe10>
   135d4:	ldr	r0, [r2, r3, lsl #2]
   135d8:	bl	11030 <strcmp@plt>
   135dc:	cmp	r0, #0
   135e0:	streq	r5, [fp, #-72]	; 0xffffffb8
   135e4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   135e8:	cmp	r5, r0
   135ec:	bge	12dd8 <argp_parse@@Base+0x2c4>
   135f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   135f4:	tst	r3, #4
   135f8:	beq	136d0 <argp_parse@@Base+0xbbc>
   135fc:	ldr	r3, [fp, #4]
   13600:	cmp	r3, #0
   13604:	beq	13848 <argp_parse@@Base+0xd34>
   13608:	ldr	r6, [fp, #-112]	; 0xffffff90
   1360c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13610:	str	r5, [r3]
   13614:	sub	r3, ip, #36	; 0x24
   13618:	cmp	r6, r3
   1361c:	bhi	13704 <argp_parse@@Base+0xbf0>
   13620:	ldr	r7, [pc, #768]	; 13928 <argp_parse@@Base+0xe14>
   13624:	sub	r4, ip, #72	; 0x48
   13628:	mov	r8, #0
   1362c:	ldr	r3, [r4, #36]	; 0x24
   13630:	sub	r2, fp, #96	; 0x60
   13634:	cmp	r3, #0
   13638:	mov	r1, r8
   1363c:	mov	r0, r7
   13640:	beq	1369c <argp_parse@@Base+0xb88>
   13644:	ldr	ip, [r4, #68]	; 0x44
   13648:	ldr	lr, [r4, #48]	; 0x30
   1364c:	str	ip, [fp, #-60]	; 0xffffffc4
   13650:	ldr	ip, [r4, #60]	; 0x3c
   13654:	str	ip, [fp, #-68]	; 0xffffffbc
   13658:	ldr	ip, [r4, #64]	; 0x40
   1365c:	str	lr, [fp, #-76]	; 0xffffffb4
   13660:	str	ip, [fp, #-64]	; 0xffffffc0
   13664:	blx	r3
   13668:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1366c:	str	r3, [r4, #68]	; 0x44
   13670:	ldr	r6, [fp, #-112]	; 0xffffff90
   13674:	cmp	r6, r4
   13678:	bhi	136e4 <argp_parse@@Base+0xbd0>
   1367c:	cmp	r0, #7
   13680:	cmpne	r0, #0
   13684:	sub	r4, r4, #36	; 0x24
   13688:	beq	1362c <argp_parse@@Base+0xb18>
   1368c:	ldr	r4, [fp, #-108]	; 0xffffff94
   13690:	mov	r5, r0
   13694:	sub	r4, r4, #36	; 0x24
   13698:	b	12fc8 <argp_parse@@Base+0x4b4>
   1369c:	cmp	r6, r4
   136a0:	bhi	136f0 <argp_parse@@Base+0xbdc>
   136a4:	sub	r4, r4, #36	; 0x24
   136a8:	b	1362c <argp_parse@@Base+0xb18>
   136ac:	ldr	r2, [r3]
   136b0:	ldr	r3, [pc, #612]	; 1391c <argp_parse@@Base+0xe08>
   136b4:	cmp	r2, #0
   136b8:	moveq	r2, r3
   136bc:	b	13588 <argp_parse@@Base+0xa74>
   136c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   136c4:	cmn	r3, #1
   136c8:	bne	133e4 <argp_parse@@Base+0x8d0>
   136cc:	b	132b8 <argp_parse@@Base+0x7a4>
   136d0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   136d4:	ldr	r7, [r3, r5, lsl #2]
   136d8:	add	r5, r5, #1
   136dc:	str	r7, [fp, #-136]	; 0xffffff78
   136e0:	b	13408 <argp_parse@@Base+0x8f4>
   136e4:	cmp	r0, #7
   136e8:	mov	r5, r0
   136ec:	bne	137ac <argp_parse@@Base+0xc98>
   136f0:	ldr	r4, [fp, #-108]	; 0xffffff94
   136f4:	sub	r4, r4, #36	; 0x24
   136f8:	cmp	r6, r4
   136fc:	movls	r5, #0
   13700:	bls	12fd0 <argp_parse@@Base+0x4bc>
   13704:	mov	r5, #0
   13708:	b	1303c <argp_parse@@Base+0x528>
   1370c:	ldr	r3, [r8, #4]
   13710:	cmp	r3, #0
   13714:	moveq	r6, #36	; 0x24
   13718:	movne	r6, #72	; 0x48
   1371c:	movne	r3, #1
   13720:	strne	r3, [fp, #-220]	; 0xffffff24
   13724:	cmp	r4, #0
   13728:	beq	13788 <argp_parse@@Base+0xc74>
   1372c:	ldr	r0, [r4]
   13730:	cmp	r0, #0
   13734:	beq	13788 <argp_parse@@Base+0xc74>
   13738:	sub	r1, fp, #228	; 0xe4
   1373c:	bl	12440 <__assert_fail@plt+0x114c>
   13740:	ldr	r3, [fp, #-216]	; 0xffffff28
   13744:	ldr	r0, [r4, #16]!
   13748:	add	r3, r3, #1
   1374c:	cmp	r0, #0
   13750:	str	r3, [fp, #-216]	; 0xffffff28
   13754:	bne	13738 <argp_parse@@Base+0xc24>
   13758:	ldr	r6, [fp, #-220]	; 0xffffff24
   1375c:	ldr	r2, [fp, #-224]	; 0xffffff20
   13760:	add	r6, r6, #1
   13764:	lsl	r4, r3, #2
   13768:	add	r6, r6, r6, lsl #3
   1376c:	add	r3, r2, #1
   13770:	lsl	r6, r6, #2
   13774:	add	sl, r4, r6
   13778:	add	r3, sl, r3, lsl #4
   1377c:	str	r3, [fp, #-232]	; 0xffffff18
   13780:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13784:	b	12c2c <argp_parse@@Base+0x118>
   13788:	ldr	r4, [fp, #-216]	; 0xffffff28
   1378c:	ldr	r3, [fp, #-224]	; 0xffffff20
   13790:	ldr	r0, [fp, #-228]	; 0xffffff1c
   13794:	lsl	r4, r4, #2
   13798:	add	r3, r3, #1
   1379c:	add	sl, r4, r6
   137a0:	add	r3, sl, r3, lsl #4
   137a4:	str	r3, [fp, #-232]	; 0xffffff18
   137a8:	b	12c2c <argp_parse@@Base+0x118>
   137ac:	ldr	r4, [fp, #-108]	; 0xffffff94
   137b0:	sub	r4, r4, #36	; 0x24
   137b4:	b	12fc8 <argp_parse@@Base+0x4b4>
   137b8:	ldr	r0, [r2]
   137bc:	cmp	r0, #0
   137c0:	beq	12d98 <argp_parse@@Base+0x284>
   137c4:	bl	139e4 <argp_parse@@Base+0xed0>
   137c8:	str	r0, [fp, #-56]	; 0xffffffc8
   137cc:	b	12da4 <argp_parse@@Base+0x290>
   137d0:	ldr	r2, [pc, #340]	; 1392c <argp_parse@@Base+0xe18>
   137d4:	ldr	r2, [r2]
   137d8:	cmp	r2, #0
   137dc:	addeq	ip, r3, #16
   137e0:	bne	13188 <argp_parse@@Base+0x674>
   137e4:	b	13194 <argp_parse@@Base+0x680>
   137e8:	ldr	r6, [fp, #-112]	; 0xffffff90
   137ec:	sub	ip, ip, #36	; 0x24
   137f0:	cmp	r6, ip
   137f4:	mov	r5, r0
   137f8:	bls	13810 <argp_parse@@Base+0xcfc>
   137fc:	ldr	r3, [fp, #4]
   13800:	cmp	r3, #0
   13804:	bne	12f24 <argp_parse@@Base+0x410>
   13808:	b	12f30 <argp_parse@@Base+0x41c>
   1380c:	mov	r5, r0
   13810:	ldr	r3, [fp, #4]
   13814:	cmp	r3, #0
   13818:	bne	12f24 <argp_parse@@Base+0x410>
   1381c:	cmp	r5, #7
   13820:	bne	12f48 <argp_parse@@Base+0x434>
   13824:	b	133e4 <argp_parse@@Base+0x8d0>
   13828:	ldr	r6, [fp, #-112]	; 0xffffff90
   1382c:	sub	r4, ip, #36	; 0x24
   13830:	cmp	r4, r6
   13834:	mov	r5, r0
   13838:	bcs	12e90 <argp_parse@@Base+0x37c>
   1383c:	cmp	r5, #7
   13840:	beq	12f14 <argp_parse@@Base+0x400>
   13844:	b	137fc <argp_parse@@Base+0xce8>
   13848:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1384c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13850:	tst	r3, #2
   13854:	bne	133e8 <argp_parse@@Base+0x8d4>
   13858:	cmp	r1, #0
   1385c:	beq	133e8 <argp_parse@@Base+0x8d4>
   13860:	mov	r0, r1
   13864:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13868:	ldr	r1, [pc, #192]	; 13930 <argp_parse@@Base+0xe1c>
   1386c:	bl	111d4 <fprintf@plt>
   13870:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13874:	b	133e8 <argp_parse@@Base+0x8d4>
   13878:	mov	r5, r0
   1387c:	b	1383c <argp_parse@@Base+0xd28>
   13880:	sub	r4, ip, #36	; 0x24
   13884:	cmp	r6, r4
   13888:	bls	12e9c <argp_parse@@Base+0x388>
   1388c:	ldr	r3, [fp, #4]
   13890:	cmp	r3, #0
   13894:	bne	12f20 <argp_parse@@Base+0x40c>
   13898:	b	13614 <argp_parse@@Base+0xb00>
   1389c:	cmp	r0, #0
   138a0:	bne	138cc <argp_parse@@Base+0xdb8>
   138a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   138a8:	mov	r5, r0
   138ac:	str	r0, [fp, #-84]	; 0xffffffac
   138b0:	b	13498 <argp_parse@@Base+0x984>
   138b4:	cmp	r0, #7
   138b8:	mov	r5, r0
   138bc:	beq	12d70 <argp_parse@@Base+0x25c>
   138c0:	cmp	r0, #0
   138c4:	bne	13044 <argp_parse@@Base+0x530>
   138c8:	b	12d70 <argp_parse@@Base+0x25c>
   138cc:	cmp	r0, #7
   138d0:	mov	r5, r0
   138d4:	beq	13548 <argp_parse@@Base+0xa34>
   138d8:	ldr	r6, [fp, #-112]	; 0xffffff90
   138dc:	b	12f4c <argp_parse@@Base+0x438>
   138e0:	andeq	sp, r2, ip, lsr #7
   138e4:	andeq	sp, r2, r8, lsr #7
   138e8:			; <UNDEFINED> instruction: 0x0002d3b0
   138ec:			; <UNDEFINED> instruction: 0x0002d3bc
   138f0:	tsteq	r0, r6
   138f4:	tsteq	r0, r2
   138f8:	tsteq	r0, r1
   138fc:	tsteq	r0, r5
   13900:	tsteq	r0, r7
   13904:	tsteq	r0, r3
   13908:	andeq	sp, r2, ip, lsl r4
   1390c:	andeq	ip, r1, r4, asr r1
   13910:	andeq	ip, r1, r0, ror r1
   13914:	andeq	ip, r1, ip, lsl #3
   13918:	andeq	ip, r1, r0, lsr #5
   1391c:	muleq	r1, r8, r2
   13920:	andeq	ip, r1, r8, lsr #5
   13924:	muleq	r1, ip, r2
   13928:	tsteq	r0, r4
   1392c:	andeq	sp, r2, r0, ror #7
   13930:			; <UNDEFINED> instruction: 0x0001c2b4
   13934:	cmp	r1, #0
   13938:	beq	13978 <argp_parse@@Base+0xe64>
   1393c:	ldr	r2, [r1, #52]	; 0x34
   13940:	ldr	r3, [r2, #48]	; 0x30
   13944:	ldr	r1, [r2, #52]	; 0x34
   13948:	cmp	r3, r1
   1394c:	bcs	13978 <argp_parse@@Base+0xe64>
   13950:	ldr	r2, [r3, #4]
   13954:	cmp	r0, r2
   13958:	bne	1396c <argp_parse@@Base+0xe58>
   1395c:	b	13980 <argp_parse@@Base+0xe6c>
   13960:	ldr	r2, [r3, #4]
   13964:	cmp	r2, r0
   13968:	beq	13980 <argp_parse@@Base+0xe6c>
   1396c:	add	r3, r3, #36	; 0x24
   13970:	cmp	r3, r1
   13974:	bcc	13960 <argp_parse@@Base+0xe4c>
   13978:	mov	r0, #0
   1397c:	bx	lr
   13980:	ldr	r0, [r3, #24]
   13984:	bx	lr
   13988:	ldr	ip, [pc, #32]	; 139b0 <argp_parse@@Base+0xe9c>
   1398c:	push	{lr}		; (str lr, [sp, #-4]!)
   13990:	sub	sp, sp, #12
   13994:	ldm	ip, {r1, ip}
   13998:	ldr	r3, [pc, #20]	; 139b4 <argp_parse@@Base+0xea0>
   1399c:	ldr	r2, [pc, #20]	; 139b8 <argp_parse@@Base+0xea4>
   139a0:	str	ip, [sp]
   139a4:	bl	13f5c <argp_parse@@Base+0x1448>
   139a8:	add	sp, sp, #12
   139ac:	pop	{pc}		; (ldr pc, [sp], #4)
   139b0:	andeq	sp, r2, r4, ror #7
   139b4:	muleq	r1, ip, r3
   139b8:	andeq	ip, r1, ip, lsr #7
   139bc:	ldr	r3, [pc, #20]	; 139d8 <argp_parse@@Base+0xec4>
   139c0:	ldr	r2, [pc, #20]	; 139dc <argp_parse@@Base+0xec8>
   139c4:	ldr	ip, [pc, #20]	; 139e0 <argp_parse@@Base+0xecc>
   139c8:	str	r0, [r3]
   139cc:	str	ip, [r2]
   139d0:	str	r1, [r3, #4]
   139d4:	bx	lr
   139d8:	andeq	sp, r2, r4, ror #7
   139dc:	andeq	sp, r2, r0, ror #7
   139e0:	andeq	r3, r1, r8, lsl #19
   139e4:	ldrb	r3, [r0]
   139e8:	cmp	r3, #47	; 0x2f
   139ec:	bne	139fc <argp_parse@@Base+0xee8>
   139f0:	ldrb	r3, [r0, #1]!
   139f4:	cmp	r3, #47	; 0x2f
   139f8:	beq	139f0 <argp_parse@@Base+0xedc>
   139fc:	cmp	r3, #0
   13a00:	bxeq	lr
   13a04:	mov	r2, #0
   13a08:	push	{lr}		; (str lr, [sp, #-4]!)
   13a0c:	mov	ip, r2
   13a10:	mov	r1, r0
   13a14:	mov	lr, #1
   13a18:	cmp	r3, #47	; 0x2f
   13a1c:	moveq	r2, lr
   13a20:	beq	13a30 <argp_parse@@Base+0xf1c>
   13a24:	cmp	r2, #0
   13a28:	movne	r0, r1
   13a2c:	movne	r2, ip
   13a30:	ldrb	r3, [r1, #1]!
   13a34:	cmp	r3, #0
   13a38:	bne	13a18 <argp_parse@@Base+0xf04>
   13a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a40:	push	{r4, lr}
   13a44:	mov	r4, r0
   13a48:	bl	111bc <strlen@plt>
   13a4c:	cmp	r0, #1
   13a50:	popls	{r4, pc}
   13a54:	sub	r3, r0, #1
   13a58:	add	r2, r4, r3
   13a5c:	ldrb	r1, [r4, r3]
   13a60:	cmp	r1, #47	; 0x2f
   13a64:	popne	{r4, pc}
   13a68:	cmp	r3, #1
   13a6c:	beq	13a80 <argp_parse@@Base+0xf6c>
   13a70:	ldrb	r1, [r2, #-1]!
   13a74:	sub	r0, r3, #1
   13a78:	cmp	r1, #47	; 0x2f
   13a7c:	beq	13a88 <argp_parse@@Base+0xf74>
   13a80:	mov	r0, r3
   13a84:	pop	{r4, pc}
   13a88:	mov	r3, r0
   13a8c:	b	13a68 <argp_parse@@Base+0xf54>
   13a90:	push	{r4, r5, lr}
   13a94:	sub	sp, sp, #12
   13a98:	mov	r5, r0
   13a9c:	bl	111e0 <__errno_location@plt>
   13aa0:	mov	r2, #0
   13aa4:	mov	r4, r0
   13aa8:	ldr	r3, [r0]
   13aac:	str	r2, [r4]
   13ab0:	mov	r0, r5
   13ab4:	str	r3, [sp]
   13ab8:	str	r3, [sp, #4]
   13abc:	bl	11084 <free@plt>
   13ac0:	ldr	r3, [r4]
   13ac4:	add	r2, sp, #8
   13ac8:	cmp	r3, #0
   13acc:	moveq	r3, #4
   13ad0:	movne	r3, #0
   13ad4:	add	r3, r2, r3
   13ad8:	ldr	r3, [r3, #-8]
   13adc:	str	r3, [r4]
   13ae0:	add	sp, sp, #12
   13ae4:	pop	{r4, r5, pc}
   13ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   13aec:	sub	sp, sp, #20
   13af0:	mov	ip, #0
   13af4:	ldr	lr, [sp, #24]
   13af8:	str	ip, [sp, #8]
   13afc:	str	lr, [sp]
   13b00:	str	ip, [sp, #4]
   13b04:	bl	1a398 <argp_error@@Base+0xef0>
   13b08:	add	sp, sp, #20
   13b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b10:	push	{r4, lr}
   13b14:	sub	sp, sp, #16
   13b18:	mov	ip, #0
   13b1c:	ldr	r4, [sp, #24]
   13b20:	ldr	lr, [sp, #28]
   13b24:	str	r4, [sp]
   13b28:	str	lr, [sp, #8]
   13b2c:	str	ip, [sp, #12]
   13b30:	str	ip, [sp, #4]
   13b34:	bl	19e24 <argp_error@@Base+0x97c>
   13b38:	add	sp, sp, #16
   13b3c:	pop	{r4, pc}
   13b40:	push	{r4, lr}
   13b44:	sub	sp, sp, #16
   13b48:	mov	lr, #0
   13b4c:	ldr	r4, [sp, #24]
   13b50:	mov	ip, #1
   13b54:	stm	sp, {r4, ip, lr}
   13b58:	bl	1a398 <argp_error@@Base+0xef0>
   13b5c:	add	sp, sp, #16
   13b60:	pop	{r4, pc}
   13b64:	push	{r4, r5, lr}
   13b68:	sub	sp, sp, #20
   13b6c:	mov	lr, #0
   13b70:	ldr	r5, [sp, #32]
   13b74:	ldr	r4, [sp, #36]	; 0x24
   13b78:	mov	ip, #1
   13b7c:	str	r5, [sp]
   13b80:	str	r4, [sp, #8]
   13b84:	str	lr, [sp, #12]
   13b88:	str	ip, [sp, #4]
   13b8c:	bl	19e24 <argp_error@@Base+0x97c>
   13b90:	add	sp, sp, #20
   13b94:	pop	{r4, r5, pc}
   13b98:	push	{r4, r5, r6, r8, r9, lr}
   13b9c:	mov	r4, r0
   13ba0:	mov	r5, r1
   13ba4:	add	r6, r2, #20
   13ba8:	mov	r8, #10
   13bac:	mov	r9, #0
   13bb0:	mov	r3, #0
   13bb4:	strb	r3, [r2, #20]
   13bb8:	mov	r0, r4
   13bbc:	mov	r1, r5
   13bc0:	mov	r2, r8
   13bc4:	mov	r3, r9
   13bc8:	bl	1bb44 <argp_error@@Base+0x269c>
   13bcc:	mov	r0, r4
   13bd0:	mov	r1, r5
   13bd4:	mov	r3, r9
   13bd8:	add	r2, r2, #48	; 0x30
   13bdc:	strb	r2, [r6, #-1]!
   13be0:	mov	r2, r8
   13be4:	bl	1bb44 <argp_error@@Base+0x269c>
   13be8:	mov	r4, r0
   13bec:	mov	r5, r1
   13bf0:	orrs	r3, r4, r5
   13bf4:	bne	13bb8 <argp_parse@@Base+0x10a4>
   13bf8:	mov	r0, r6
   13bfc:	pop	{r4, r5, r6, r8, r9, pc}
   13c00:	push	{r4, r5, r6, lr}
   13c04:	subs	r4, r0, #0
   13c08:	beq	13c7c <argp_parse@@Base+0x1168>
   13c0c:	mov	r1, #47	; 0x2f
   13c10:	bl	1124c <strrchr@plt>
   13c14:	subs	r5, r0, #0
   13c18:	beq	13c68 <argp_parse@@Base+0x1154>
   13c1c:	add	r6, r5, #1
   13c20:	sub	r3, r6, r4
   13c24:	cmp	r3, #6
   13c28:	ble	13c68 <argp_parse@@Base+0x1154>
   13c2c:	mov	r2, #7
   13c30:	ldr	r1, [pc, #96]	; 13c98 <argp_parse@@Base+0x1184>
   13c34:	sub	r0, r5, #6
   13c38:	bl	112b8 <strncmp@plt>
   13c3c:	cmp	r0, #0
   13c40:	bne	13c68 <argp_parse@@Base+0x1154>
   13c44:	mov	r2, #3
   13c48:	ldr	r1, [pc, #76]	; 13c9c <argp_parse@@Base+0x1188>
   13c4c:	mov	r0, r6
   13c50:	bl	112b8 <strncmp@plt>
   13c54:	cmp	r0, #0
   13c58:	movne	r4, r6
   13c5c:	ldreq	r3, [pc, #60]	; 13ca0 <argp_parse@@Base+0x118c>
   13c60:	addeq	r4, r5, #4
   13c64:	streq	r4, [r3]
   13c68:	ldr	r2, [pc, #52]	; 13ca4 <argp_parse@@Base+0x1190>
   13c6c:	ldr	r3, [pc, #52]	; 13ca8 <argp_parse@@Base+0x1194>
   13c70:	str	r4, [r2]
   13c74:	str	r4, [r3]
   13c78:	pop	{r4, r5, r6, pc}
   13c7c:	ldr	r3, [pc, #40]	; 13cac <argp_parse@@Base+0x1198>
   13c80:	mov	r2, #55	; 0x37
   13c84:	mov	r1, #1
   13c88:	ldr	r3, [r3]
   13c8c:	ldr	r0, [pc, #28]	; 13cb0 <argp_parse@@Base+0x119c>
   13c90:	bl	11108 <fwrite@plt>
   13c94:	bl	112c4 <abort@plt>
   13c98:	strdeq	ip, [r1], -r4
   13c9c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   13ca0:	andeq	sp, r2, r8, lsr #7
   13ca4:	andeq	sp, r2, ip, ror #7
   13ca8:	andeq	sp, r2, ip, lsr #7
   13cac:			; <UNDEFINED> instruction: 0x0002d3b0
   13cb0:			; <UNDEFINED> instruction: 0x0001c3bc
   13cb4:	push	{r4, r5, r6, r7, lr}
   13cb8:	sub	sp, sp, #36	; 0x24
   13cbc:	cmp	r1, #0
   13cc0:	mov	r4, r0
   13cc4:	ldr	r5, [sp, #56]	; 0x38
   13cc8:	ldr	r6, [sp, #60]	; 0x3c
   13ccc:	beq	13f0c <argp_parse@@Base+0x13f8>
   13cd0:	str	r3, [sp]
   13cd4:	mov	r3, r2
   13cd8:	mov	r2, r1
   13cdc:	ldr	r1, [pc, #564]	; 13f18 <argp_parse@@Base+0x1404>
   13ce0:	bl	111d4 <fprintf@plt>
   13ce4:	ldr	r3, [pc, #560]	; 13f1c <argp_parse@@Base+0x1408>
   13ce8:	ldr	r2, [pc, #560]	; 13f20 <argp_parse@@Base+0x140c>
   13cec:	ldr	r1, [pc, #560]	; 13f24 <argp_parse@@Base+0x1410>
   13cf0:	mov	r0, r4
   13cf4:	bl	111d4 <fprintf@plt>
   13cf8:	mov	r1, r4
   13cfc:	mov	r0, #10
   13d00:	bl	11264 <fputc@plt>
   13d04:	ldr	r1, [pc, #540]	; 13f28 <argp_parse@@Base+0x1414>
   13d08:	ldr	r2, [pc, #540]	; 13f2c <argp_parse@@Base+0x1418>
   13d0c:	mov	r0, r4
   13d10:	bl	111d4 <fprintf@plt>
   13d14:	mov	r1, r4
   13d18:	mov	r0, #10
   13d1c:	bl	11264 <fputc@plt>
   13d20:	cmp	r6, #9
   13d24:	ldrls	pc, [pc, r6, lsl #2]
   13d28:	b	13d54 <argp_parse@@Base+0x1240>
   13d2c:	muleq	r1, r4, sp
   13d30:	andeq	r3, r1, r0, ror #27
   13d34:	strdeq	r3, [r1], -r8
   13d38:	andeq	r3, r1, r0, lsl lr
   13d3c:	andeq	r3, r1, r0, lsr lr
   13d40:	andeq	r3, r1, r8, asr lr
   13d44:	andeq	r3, r1, r8, ror lr
   13d48:	andeq	r3, r1, r0, lsr #29
   13d4c:	ldrdeq	r3, [r1], -r0
   13d50:	muleq	r1, ip, sp
   13d54:	ldr	ip, [r5, #32]
   13d58:	ldr	r1, [r5, #28]
   13d5c:	ldm	r5, {r2, r3}
   13d60:	ldr	r7, [r5, #24]
   13d64:	ldr	r6, [r5, #20]
   13d68:	str	ip, [sp, #24]
   13d6c:	ldr	lr, [r5, #16]
   13d70:	str	r1, [sp, #20]
   13d74:	ldr	r1, [r5, #8]
   13d78:	ldr	ip, [r5, #12]
   13d7c:	mov	r0, r4
   13d80:	str	r7, [sp, #16]
   13d84:	stm	sp, {r1, ip, lr}
   13d88:	str	r6, [sp, #12]
   13d8c:	ldr	r1, [pc, #412]	; 13f30 <argp_parse@@Base+0x141c>
   13d90:	bl	111d4 <fprintf@plt>
   13d94:	add	sp, sp, #36	; 0x24
   13d98:	pop	{r4, r5, r6, r7, pc}
   13d9c:	ldr	ip, [r5, #32]
   13da0:	ldr	r1, [r5, #28]
   13da4:	ldm	r5, {r2, r3}
   13da8:	ldr	r7, [r5, #24]
   13dac:	ldr	r6, [r5, #20]
   13db0:	str	ip, [sp, #24]
   13db4:	ldr	lr, [r5, #16]
   13db8:	str	r1, [sp, #20]
   13dbc:	ldr	r1, [r5, #8]
   13dc0:	ldr	ip, [r5, #12]
   13dc4:	mov	r0, r4
   13dc8:	str	r7, [sp, #16]
   13dcc:	stm	sp, {r1, ip, lr}
   13dd0:	str	r6, [sp, #12]
   13dd4:	ldr	r1, [pc, #344]	; 13f34 <argp_parse@@Base+0x1420>
   13dd8:	bl	111d4 <fprintf@plt>
   13ddc:	b	13d94 <argp_parse@@Base+0x1280>
   13de0:	ldr	r2, [r5]
   13de4:	mov	r0, r4
   13de8:	ldr	r1, [pc, #328]	; 13f38 <argp_parse@@Base+0x1424>
   13dec:	add	sp, sp, #36	; 0x24
   13df0:	pop	{r4, r5, r6, r7, lr}
   13df4:	b	111d4 <fprintf@plt>
   13df8:	mov	r0, r4
   13dfc:	ldm	r5, {r2, r3}
   13e00:	ldr	r1, [pc, #308]	; 13f3c <argp_parse@@Base+0x1428>
   13e04:	add	sp, sp, #36	; 0x24
   13e08:	pop	{r4, r5, r6, r7, lr}
   13e0c:	b	111d4 <fprintf@plt>
   13e10:	ldr	r1, [r5, #8]
   13e14:	ldm	r5, {r2, r3}
   13e18:	mov	r0, r4
   13e1c:	str	r1, [sp, #56]	; 0x38
   13e20:	ldr	r1, [pc, #280]	; 13f40 <argp_parse@@Base+0x142c>
   13e24:	add	sp, sp, #36	; 0x24
   13e28:	pop	{r4, r5, r6, r7, lr}
   13e2c:	b	111d4 <fprintf@plt>
   13e30:	ldr	r1, [r5, #8]
   13e34:	ldr	ip, [r5, #12]
   13e38:	ldm	r5, {r2, r3}
   13e3c:	mov	r0, r4
   13e40:	str	r1, [sp, #56]	; 0x38
   13e44:	str	ip, [sp, #60]	; 0x3c
   13e48:	ldr	r1, [pc, #244]	; 13f44 <argp_parse@@Base+0x1430>
   13e4c:	add	sp, sp, #36	; 0x24
   13e50:	pop	{r4, r5, r6, r7, lr}
   13e54:	b	111d4 <fprintf@plt>
   13e58:	add	r1, r5, #8
   13e5c:	ldm	r5, {r2, r3}
   13e60:	ldm	r1, {r1, ip, lr}
   13e64:	mov	r0, r4
   13e68:	stm	sp, {r1, ip, lr}
   13e6c:	ldr	r1, [pc, #212]	; 13f48 <argp_parse@@Base+0x1434>
   13e70:	bl	111d4 <fprintf@plt>
   13e74:	b	13d94 <argp_parse@@Base+0x1280>
   13e78:	add	r1, r5, #8
   13e7c:	ldr	r6, [r5, #20]
   13e80:	ldm	r1, {r1, ip, lr}
   13e84:	mov	r0, r4
   13e88:	ldm	r5, {r2, r3}
   13e8c:	str	r6, [sp, #12]
   13e90:	stm	sp, {r1, ip, lr}
   13e94:	ldr	r1, [pc, #176]	; 13f4c <argp_parse@@Base+0x1438>
   13e98:	bl	111d4 <fprintf@plt>
   13e9c:	b	13d94 <argp_parse@@Base+0x1280>
   13ea0:	add	r1, r5, #8
   13ea4:	ldr	r7, [r5, #24]
   13ea8:	ldm	r1, {r1, ip, lr}
   13eac:	mov	r0, r4
   13eb0:	ldr	r6, [r5, #20]
   13eb4:	ldm	r5, {r2, r3}
   13eb8:	stm	sp, {r1, ip, lr}
   13ebc:	str	r7, [sp, #16]
   13ec0:	str	r6, [sp, #12]
   13ec4:	ldr	r1, [pc, #132]	; 13f50 <argp_parse@@Base+0x143c>
   13ec8:	bl	111d4 <fprintf@plt>
   13ecc:	b	13d94 <argp_parse@@Base+0x1280>
   13ed0:	ldr	r1, [r5, #28]
   13ed4:	ldm	r5, {r2, r3}
   13ed8:	ldr	r7, [r5, #24]
   13edc:	ldr	r6, [r5, #20]
   13ee0:	ldr	lr, [r5, #16]
   13ee4:	str	r1, [sp, #20]
   13ee8:	ldr	r1, [r5, #8]
   13eec:	ldr	ip, [r5, #12]
   13ef0:	mov	r0, r4
   13ef4:	str	r7, [sp, #16]
   13ef8:	stm	sp, {r1, ip, lr}
   13efc:	str	r6, [sp, #12]
   13f00:	ldr	r1, [pc, #76]	; 13f54 <argp_parse@@Base+0x1440>
   13f04:	bl	111d4 <fprintf@plt>
   13f08:	b	13d94 <argp_parse@@Base+0x1280>
   13f0c:	ldr	r1, [pc, #68]	; 13f58 <argp_parse@@Base+0x1444>
   13f10:	bl	111d4 <fprintf@plt>
   13f14:	b	13ce4 <argp_parse@@Base+0x11d0>
   13f18:	andeq	ip, r1, r0, lsl #8
   13f1c:	andeq	r0, r0, r6, ror #15
   13f20:	andeq	ip, r1, r4, lsl r4
   13f24:	andeq	ip, r1, r4, lsl r7
   13f28:	andeq	ip, r1, ip, lsr r4
   13f2c:	andeq	ip, r1, r8, lsl r4
   13f30:	andeq	ip, r1, r8, lsr #12
   13f34:	strdeq	ip, [r1], -r4
   13f38:	andeq	ip, r1, r8, ror #9
   13f3c:	strdeq	ip, [r1], -r8
   13f40:	andeq	ip, r1, r0, lsl r5
   13f44:	andeq	ip, r1, ip, lsr #10
   13f48:	andeq	ip, r1, ip, asr #10
   13f4c:	andeq	ip, r1, r0, ror r5
   13f50:	muleq	r1, r8, r5
   13f54:	andeq	ip, r1, r4, asr #11
   13f58:	andeq	ip, r1, ip, lsl #8
   13f5c:	push	{r4, r5, r6, r7, lr}
   13f60:	sub	sp, sp, #36	; 0x24
   13f64:	mov	r6, r0
   13f68:	ldr	r5, [sp, #56]	; 0x38
   13f6c:	ldr	r4, [r5]
   13f70:	cmp	r4, #0
   13f74:	beq	13f90 <argp_parse@@Base+0x147c>
   13f78:	mov	r0, r5
   13f7c:	mov	r4, #0
   13f80:	ldr	ip, [r0, #4]!
   13f84:	add	r4, r4, #1
   13f88:	cmp	ip, #0
   13f8c:	bne	13f80 <argp_parse@@Base+0x146c>
   13f90:	cmp	r1, #0
   13f94:	beq	141d0 <argp_parse@@Base+0x16bc>
   13f98:	str	r3, [sp]
   13f9c:	mov	r0, r6
   13fa0:	mov	r3, r2
   13fa4:	mov	r2, r1
   13fa8:	ldr	r1, [pc, #560]	; 141e0 <argp_parse@@Base+0x16cc>
   13fac:	bl	111d4 <fprintf@plt>
   13fb0:	ldr	r3, [pc, #556]	; 141e4 <argp_parse@@Base+0x16d0>
   13fb4:	ldr	r2, [pc, #556]	; 141e8 <argp_parse@@Base+0x16d4>
   13fb8:	ldr	r1, [pc, #556]	; 141ec <argp_parse@@Base+0x16d8>
   13fbc:	mov	r0, r6
   13fc0:	bl	111d4 <fprintf@plt>
   13fc4:	mov	r1, r6
   13fc8:	mov	r0, #10
   13fcc:	bl	11264 <fputc@plt>
   13fd0:	ldr	r1, [pc, #536]	; 141f0 <argp_parse@@Base+0x16dc>
   13fd4:	ldr	r2, [pc, #536]	; 141f4 <argp_parse@@Base+0x16e0>
   13fd8:	mov	r0, r6
   13fdc:	bl	111d4 <fprintf@plt>
   13fe0:	mov	r1, r6
   13fe4:	mov	r0, #10
   13fe8:	bl	11264 <fputc@plt>
   13fec:	cmp	r4, #9
   13ff0:	ldrls	pc, [pc, r4, lsl #2]
   13ff4:	b	14020 <argp_parse@@Base+0x150c>
   13ff8:	andeq	r4, r1, r0, rrx
   13ffc:	andeq	r4, r1, ip, lsr #1
   14000:	andeq	r4, r1, r4, asr #1
   14004:	ldrdeq	r4, [r1], -ip
   14008:	strdeq	r4, [r1], -ip
   1400c:	andeq	r4, r1, ip, lsl r1
   14010:	andeq	r4, r1, ip, lsr r1
   14014:	andeq	r4, r1, r4, ror #2
   14018:	muleq	r1, r4, r1
   1401c:	andeq	r4, r1, r8, rrx
   14020:	ldr	ip, [r5, #32]
   14024:	ldr	r1, [r5, #28]
   14028:	ldm	r5, {r2, r3}
   1402c:	ldr	r7, [r5, #24]
   14030:	ldr	r4, [r5, #20]
   14034:	str	ip, [sp, #24]
   14038:	ldr	lr, [r5, #16]
   1403c:	str	r1, [sp, #20]
   14040:	ldr	r1, [r5, #8]
   14044:	ldr	ip, [r5, #12]
   14048:	mov	r0, r6
   1404c:	str	r7, [sp, #16]
   14050:	stm	sp, {r1, ip, lr}
   14054:	str	r4, [sp, #12]
   14058:	ldr	r1, [pc, #408]	; 141f8 <argp_parse@@Base+0x16e4>
   1405c:	bl	111d4 <fprintf@plt>
   14060:	add	sp, sp, #36	; 0x24
   14064:	pop	{r4, r5, r6, r7, pc}
   14068:	ldr	ip, [r5, #32]
   1406c:	ldr	r1, [r5, #28]
   14070:	ldm	r5, {r2, r3}
   14074:	ldr	r7, [r5, #24]
   14078:	ldr	r4, [r5, #20]
   1407c:	str	ip, [sp, #24]
   14080:	ldr	lr, [r5, #16]
   14084:	str	r1, [sp, #20]
   14088:	ldr	r1, [r5, #8]
   1408c:	ldr	ip, [r5, #12]
   14090:	mov	r0, r6
   14094:	str	r7, [sp, #16]
   14098:	stm	sp, {r1, ip, lr}
   1409c:	str	r4, [sp, #12]
   140a0:	ldr	r1, [pc, #340]	; 141fc <argp_parse@@Base+0x16e8>
   140a4:	bl	111d4 <fprintf@plt>
   140a8:	b	14060 <argp_parse@@Base+0x154c>
   140ac:	ldr	r2, [r5]
   140b0:	mov	r0, r6
   140b4:	ldr	r1, [pc, #324]	; 14200 <argp_parse@@Base+0x16ec>
   140b8:	add	sp, sp, #36	; 0x24
   140bc:	pop	{r4, r5, r6, r7, lr}
   140c0:	b	111d4 <fprintf@plt>
   140c4:	mov	r0, r6
   140c8:	ldm	r5, {r2, r3}
   140cc:	ldr	r1, [pc, #304]	; 14204 <argp_parse@@Base+0x16f0>
   140d0:	add	sp, sp, #36	; 0x24
   140d4:	pop	{r4, r5, r6, r7, lr}
   140d8:	b	111d4 <fprintf@plt>
   140dc:	ldr	r1, [r5, #8]
   140e0:	ldm	r5, {r2, r3}
   140e4:	mov	r0, r6
   140e8:	str	r1, [sp, #56]	; 0x38
   140ec:	ldr	r1, [pc, #276]	; 14208 <argp_parse@@Base+0x16f4>
   140f0:	add	sp, sp, #36	; 0x24
   140f4:	pop	{r4, r5, r6, r7, lr}
   140f8:	b	111d4 <fprintf@plt>
   140fc:	ldr	r1, [r5, #8]
   14100:	ldr	ip, [r5, #12]
   14104:	ldm	r5, {r2, r3}
   14108:	mov	r0, r6
   1410c:	stm	sp, {r1, ip}
   14110:	ldr	r1, [pc, #244]	; 1420c <argp_parse@@Base+0x16f8>
   14114:	bl	111d4 <fprintf@plt>
   14118:	b	14060 <argp_parse@@Base+0x154c>
   1411c:	add	r1, r5, #8
   14120:	ldm	r5, {r2, r3}
   14124:	ldm	r1, {r1, ip, lr}
   14128:	mov	r0, r6
   1412c:	stm	sp, {r1, ip, lr}
   14130:	ldr	r1, [pc, #216]	; 14210 <argp_parse@@Base+0x16fc>
   14134:	bl	111d4 <fprintf@plt>
   14138:	b	14060 <argp_parse@@Base+0x154c>
   1413c:	add	r1, r5, #8
   14140:	ldr	r4, [r5, #20]
   14144:	ldm	r1, {r1, ip, lr}
   14148:	mov	r0, r6
   1414c:	ldm	r5, {r2, r3}
   14150:	str	r4, [sp, #12]
   14154:	stm	sp, {r1, ip, lr}
   14158:	ldr	r1, [pc, #180]	; 14214 <argp_parse@@Base+0x1700>
   1415c:	bl	111d4 <fprintf@plt>
   14160:	b	14060 <argp_parse@@Base+0x154c>
   14164:	add	r1, r5, #8
   14168:	ldr	r7, [r5, #24]
   1416c:	ldm	r1, {r1, ip, lr}
   14170:	mov	r0, r6
   14174:	ldr	r4, [r5, #20]
   14178:	ldm	r5, {r2, r3}
   1417c:	stm	sp, {r1, ip, lr}
   14180:	str	r7, [sp, #16]
   14184:	str	r4, [sp, #12]
   14188:	ldr	r1, [pc, #136]	; 14218 <argp_parse@@Base+0x1704>
   1418c:	bl	111d4 <fprintf@plt>
   14190:	b	14060 <argp_parse@@Base+0x154c>
   14194:	ldr	r1, [r5, #28]
   14198:	ldm	r5, {r2, r3}
   1419c:	ldr	r7, [r5, #24]
   141a0:	ldr	r4, [r5, #20]
   141a4:	ldr	lr, [r5, #16]
   141a8:	str	r1, [sp, #20]
   141ac:	ldr	r1, [r5, #8]
   141b0:	ldr	ip, [r5, #12]
   141b4:	mov	r0, r6
   141b8:	str	r7, [sp, #16]
   141bc:	stm	sp, {r1, ip, lr}
   141c0:	str	r4, [sp, #12]
   141c4:	ldr	r1, [pc, #80]	; 1421c <argp_parse@@Base+0x1708>
   141c8:	bl	111d4 <fprintf@plt>
   141cc:	b	14060 <argp_parse@@Base+0x154c>
   141d0:	ldr	r1, [pc, #72]	; 14220 <argp_parse@@Base+0x170c>
   141d4:	mov	r0, r6
   141d8:	bl	111d4 <fprintf@plt>
   141dc:	b	13fb0 <argp_parse@@Base+0x149c>
   141e0:	andeq	ip, r1, r0, lsl #8
   141e4:	andeq	r0, r0, r6, ror #15
   141e8:	andeq	ip, r1, r4, lsl r4
   141ec:	andeq	ip, r1, r4, lsl r7
   141f0:	andeq	ip, r1, ip, lsr r4
   141f4:	andeq	ip, r1, r8, lsl r4
   141f8:	andeq	ip, r1, r8, lsr #12
   141fc:	strdeq	ip, [r1], -r4
   14200:	andeq	ip, r1, r8, ror #9
   14204:	strdeq	ip, [r1], -r8
   14208:	andeq	ip, r1, r0, lsl r5
   1420c:	andeq	ip, r1, ip, lsr #10
   14210:	andeq	ip, r1, ip, asr #10
   14214:	andeq	ip, r1, r0, ror r5
   14218:	muleq	r1, r8, r5
   1421c:	andeq	ip, r1, r4, asr #11
   14220:	andeq	ip, r1, ip, lsl #8
   14224:	push	{r4, r5, r6, lr}
   14228:	sub	sp, sp, #72	; 0x48
   1422c:	mov	r5, r0
   14230:	ldr	ip, [sp, #88]	; 0x58
   14234:	ldr	r0, [ip]
   14238:	cmp	r0, #0
   1423c:	str	r0, [sp, #32]
   14240:	beq	14548 <argp_parse@@Base+0x1a34>
   14244:	ldr	r0, [ip, #4]
   14248:	cmp	r0, #0
   1424c:	str	r0, [sp, #36]	; 0x24
   14250:	beq	14550 <argp_parse@@Base+0x1a3c>
   14254:	ldr	r0, [ip, #8]
   14258:	cmp	r0, #0
   1425c:	str	r0, [sp, #40]	; 0x28
   14260:	beq	14558 <argp_parse@@Base+0x1a44>
   14264:	ldr	r0, [ip, #12]
   14268:	cmp	r0, #0
   1426c:	str	r0, [sp, #44]	; 0x2c
   14270:	beq	14560 <argp_parse@@Base+0x1a4c>
   14274:	ldr	r0, [ip, #16]
   14278:	cmp	r0, #0
   1427c:	str	r0, [sp, #48]	; 0x30
   14280:	beq	14568 <argp_parse@@Base+0x1a54>
   14284:	ldr	r0, [ip, #20]
   14288:	cmp	r0, #0
   1428c:	str	r0, [sp, #52]	; 0x34
   14290:	beq	14570 <argp_parse@@Base+0x1a5c>
   14294:	ldr	r0, [ip, #24]
   14298:	cmp	r0, #0
   1429c:	str	r0, [sp, #56]	; 0x38
   142a0:	beq	14578 <argp_parse@@Base+0x1a64>
   142a4:	ldr	r0, [ip, #28]
   142a8:	cmp	r0, #0
   142ac:	str	r0, [sp, #60]	; 0x3c
   142b0:	beq	14580 <argp_parse@@Base+0x1a6c>
   142b4:	ldr	r0, [ip, #32]
   142b8:	cmp	r0, #0
   142bc:	str	r0, [sp, #64]	; 0x40
   142c0:	beq	14588 <argp_parse@@Base+0x1a74>
   142c4:	ldr	r0, [ip, #36]	; 0x24
   142c8:	cmp	r0, #0
   142cc:	movne	r4, #10
   142d0:	moveq	r4, #9
   142d4:	cmp	r1, #0
   142d8:	beq	14538 <argp_parse@@Base+0x1a24>
   142dc:	str	r3, [sp]
   142e0:	mov	r0, r5
   142e4:	mov	r3, r2
   142e8:	mov	r2, r1
   142ec:	ldr	r1, [pc, #668]	; 14590 <argp_parse@@Base+0x1a7c>
   142f0:	bl	111d4 <fprintf@plt>
   142f4:	ldr	r3, [pc, #664]	; 14594 <argp_parse@@Base+0x1a80>
   142f8:	ldr	r2, [pc, #664]	; 14598 <argp_parse@@Base+0x1a84>
   142fc:	ldr	r1, [pc, #664]	; 1459c <argp_parse@@Base+0x1a88>
   14300:	mov	r0, r5
   14304:	bl	111d4 <fprintf@plt>
   14308:	mov	r1, r5
   1430c:	mov	r0, #10
   14310:	bl	11264 <fputc@plt>
   14314:	ldr	r1, [pc, #644]	; 145a0 <argp_parse@@Base+0x1a8c>
   14318:	ldr	r2, [pc, #644]	; 145a4 <argp_parse@@Base+0x1a90>
   1431c:	mov	r0, r5
   14320:	bl	111d4 <fprintf@plt>
   14324:	mov	r1, r5
   14328:	mov	r0, #10
   1432c:	bl	11264 <fputc@plt>
   14330:	cmp	r4, #9
   14334:	ldrls	pc, [pc, r4, lsl #2]
   14338:	b	14364 <argp_parse@@Base+0x1850>
   1433c:	andeq	r4, r1, r8, lsr #7
   14340:	strdeq	r4, [r1], -r8
   14344:	andeq	r4, r1, r0, lsl r4
   14348:	andeq	r4, r1, ip, lsr #8
   1434c:	andeq	r4, r1, r0, asr r4
   14350:	andeq	r4, r1, r4, ror r4
   14354:	muleq	r1, r8, r4
   14358:	andeq	r4, r1, r4, asr #9
   1435c:	strdeq	r4, [r1], -r8
   14360:			; <UNDEFINED> instruction: 0x000143b0
   14364:	ldr	ip, [sp, #64]	; 0x40
   14368:	ldr	r1, [sp, #60]	; 0x3c
   1436c:	ldr	lr, [sp, #48]	; 0x30
   14370:	str	ip, [sp, #24]
   14374:	str	r1, [sp, #20]
   14378:	ldr	ip, [sp, #44]	; 0x2c
   1437c:	ldr	r1, [sp, #40]	; 0x28
   14380:	ldr	r6, [sp, #56]	; 0x38
   14384:	ldr	r4, [sp, #52]	; 0x34
   14388:	stm	sp, {r1, ip, lr}
   1438c:	mov	r0, r5
   14390:	ldr	r3, [sp, #36]	; 0x24
   14394:	ldr	r2, [sp, #32]
   14398:	str	r6, [sp, #16]
   1439c:	str	r4, [sp, #12]
   143a0:	ldr	r1, [pc, #512]	; 145a8 <argp_parse@@Base+0x1a94>
   143a4:	bl	111d4 <fprintf@plt>
   143a8:	add	sp, sp, #72	; 0x48
   143ac:	pop	{r4, r5, r6, pc}
   143b0:	ldr	ip, [sp, #64]	; 0x40
   143b4:	ldr	r1, [sp, #60]	; 0x3c
   143b8:	ldr	lr, [sp, #48]	; 0x30
   143bc:	str	ip, [sp, #24]
   143c0:	str	r1, [sp, #20]
   143c4:	ldr	ip, [sp, #44]	; 0x2c
   143c8:	ldr	r1, [sp, #40]	; 0x28
   143cc:	ldr	r6, [sp, #56]	; 0x38
   143d0:	ldr	r4, [sp, #52]	; 0x34
   143d4:	stm	sp, {r1, ip, lr}
   143d8:	mov	r0, r5
   143dc:	ldr	r3, [sp, #36]	; 0x24
   143e0:	ldr	r2, [sp, #32]
   143e4:	str	r6, [sp, #16]
   143e8:	str	r4, [sp, #12]
   143ec:	ldr	r1, [pc, #440]	; 145ac <argp_parse@@Base+0x1a98>
   143f0:	bl	111d4 <fprintf@plt>
   143f4:	b	143a8 <argp_parse@@Base+0x1894>
   143f8:	mov	r0, r5
   143fc:	ldr	r2, [sp, #32]
   14400:	ldr	r1, [pc, #424]	; 145b0 <argp_parse@@Base+0x1a9c>
   14404:	add	sp, sp, #72	; 0x48
   14408:	pop	{r4, r5, r6, lr}
   1440c:	b	111d4 <fprintf@plt>
   14410:	mov	r0, r5
   14414:	ldr	r3, [sp, #36]	; 0x24
   14418:	ldr	r2, [sp, #32]
   1441c:	ldr	r1, [pc, #400]	; 145b4 <argp_parse@@Base+0x1aa0>
   14420:	add	sp, sp, #72	; 0x48
   14424:	pop	{r4, r5, r6, lr}
   14428:	b	111d4 <fprintf@plt>
   1442c:	ldr	r1, [sp, #40]	; 0x28
   14430:	ldr	r3, [sp, #36]	; 0x24
   14434:	str	r1, [sp, #88]	; 0x58
   14438:	ldr	r2, [sp, #32]
   1443c:	mov	r0, r5
   14440:	ldr	r1, [pc, #368]	; 145b8 <argp_parse@@Base+0x1aa4>
   14444:	add	sp, sp, #72	; 0x48
   14448:	pop	{r4, r5, r6, lr}
   1444c:	b	111d4 <fprintf@plt>
   14450:	ldr	r1, [sp, #40]	; 0x28
   14454:	ldr	ip, [sp, #44]	; 0x2c
   14458:	ldr	r3, [sp, #36]	; 0x24
   1445c:	ldr	r2, [sp, #32]
   14460:	stm	sp, {r1, ip}
   14464:	mov	r0, r5
   14468:	ldr	r1, [pc, #332]	; 145bc <argp_parse@@Base+0x1aa8>
   1446c:	bl	111d4 <fprintf@plt>
   14470:	b	143a8 <argp_parse@@Base+0x1894>
   14474:	add	r1, sp, #40	; 0x28
   14478:	ldr	r3, [sp, #36]	; 0x24
   1447c:	ldm	r1, {r1, ip, lr}
   14480:	mov	r0, r5
   14484:	ldr	r2, [sp, #32]
   14488:	stm	sp, {r1, ip, lr}
   1448c:	ldr	r1, [pc, #300]	; 145c0 <argp_parse@@Base+0x1aac>
   14490:	bl	111d4 <fprintf@plt>
   14494:	b	143a8 <argp_parse@@Base+0x1894>
   14498:	add	r1, sp, #40	; 0x28
   1449c:	ldr	r4, [sp, #52]	; 0x34
   144a0:	ldm	r1, {r1, ip, lr}
   144a4:	mov	r0, r5
   144a8:	ldr	r3, [sp, #36]	; 0x24
   144ac:	ldr	r2, [sp, #32]
   144b0:	stm	sp, {r1, ip, lr}
   144b4:	str	r4, [sp, #12]
   144b8:	ldr	r1, [pc, #260]	; 145c4 <argp_parse@@Base+0x1ab0>
   144bc:	bl	111d4 <fprintf@plt>
   144c0:	b	143a8 <argp_parse@@Base+0x1894>
   144c4:	add	r1, sp, #40	; 0x28
   144c8:	ldr	r6, [sp, #56]	; 0x38
   144cc:	ldm	r1, {r1, ip, lr}
   144d0:	mov	r0, r5
   144d4:	ldr	r4, [sp, #52]	; 0x34
   144d8:	ldr	r3, [sp, #36]	; 0x24
   144dc:	stm	sp, {r1, ip, lr}
   144e0:	ldr	r2, [sp, #32]
   144e4:	str	r6, [sp, #16]
   144e8:	str	r4, [sp, #12]
   144ec:	ldr	r1, [pc, #212]	; 145c8 <argp_parse@@Base+0x1ab4>
   144f0:	bl	111d4 <fprintf@plt>
   144f4:	b	143a8 <argp_parse@@Base+0x1894>
   144f8:	ldr	r1, [sp, #60]	; 0x3c
   144fc:	ldr	lr, [sp, #48]	; 0x30
   14500:	ldr	ip, [sp, #44]	; 0x2c
   14504:	str	r1, [sp, #20]
   14508:	ldr	r1, [sp, #40]	; 0x28
   1450c:	ldr	r6, [sp, #56]	; 0x38
   14510:	ldr	r4, [sp, #52]	; 0x34
   14514:	stm	sp, {r1, ip, lr}
   14518:	mov	r0, r5
   1451c:	ldr	r3, [sp, #36]	; 0x24
   14520:	ldr	r2, [sp, #32]
   14524:	str	r6, [sp, #16]
   14528:	str	r4, [sp, #12]
   1452c:	ldr	r1, [pc, #152]	; 145cc <argp_parse@@Base+0x1ab8>
   14530:	bl	111d4 <fprintf@plt>
   14534:	b	143a8 <argp_parse@@Base+0x1894>
   14538:	ldr	r1, [pc, #144]	; 145d0 <argp_parse@@Base+0x1abc>
   1453c:	mov	r0, r5
   14540:	bl	111d4 <fprintf@plt>
   14544:	b	142f4 <argp_parse@@Base+0x17e0>
   14548:	mov	r4, r0
   1454c:	b	142d4 <argp_parse@@Base+0x17c0>
   14550:	mov	r4, #1
   14554:	b	142d4 <argp_parse@@Base+0x17c0>
   14558:	mov	r4, #2
   1455c:	b	142d4 <argp_parse@@Base+0x17c0>
   14560:	mov	r4, #3
   14564:	b	142d4 <argp_parse@@Base+0x17c0>
   14568:	mov	r4, #4
   1456c:	b	142d4 <argp_parse@@Base+0x17c0>
   14570:	mov	r4, #5
   14574:	b	142d4 <argp_parse@@Base+0x17c0>
   14578:	mov	r4, #6
   1457c:	b	142d4 <argp_parse@@Base+0x17c0>
   14580:	mov	r4, #7
   14584:	b	142d4 <argp_parse@@Base+0x17c0>
   14588:	mov	r4, #8
   1458c:	b	142d4 <argp_parse@@Base+0x17c0>
   14590:	andeq	ip, r1, r0, lsl #8
   14594:	andeq	r0, r0, r6, ror #15
   14598:	andeq	ip, r1, r4, lsl r4
   1459c:	andeq	ip, r1, r4, lsl r7
   145a0:	andeq	ip, r1, ip, lsr r4
   145a4:	andeq	ip, r1, r8, lsl r4
   145a8:	andeq	ip, r1, r8, lsr #12
   145ac:	strdeq	ip, [r1], -r4
   145b0:	andeq	ip, r1, r8, ror #9
   145b4:	strdeq	ip, [r1], -r8
   145b8:	andeq	ip, r1, r0, lsl r5
   145bc:	andeq	ip, r1, ip, lsr #10
   145c0:	andeq	ip, r1, ip, asr #10
   145c4:	andeq	ip, r1, r0, ror r5
   145c8:	muleq	r1, r8, r5
   145cc:	andeq	ip, r1, r4, asr #11
   145d0:	andeq	ip, r1, ip, lsl #8
   145d4:	push	{r3}		; (str r3, [sp, #-4]!)
   145d8:	push	{r4, r5, r6, lr}
   145dc:	sub	sp, sp, #84	; 0x54
   145e0:	add	ip, sp, #104	; 0x68
   145e4:	ldr	lr, [sp, #104]	; 0x68
   145e8:	mov	r5, r0
   145ec:	cmp	lr, #0
   145f0:	str	lr, [sp, #40]	; 0x28
   145f4:	str	ip, [sp, #36]	; 0x24
   145f8:	beq	14900 <argp_parse@@Base+0x1dec>
   145fc:	ldr	r0, [sp, #108]	; 0x6c
   14600:	cmp	r0, #0
   14604:	str	r0, [sp, #44]	; 0x2c
   14608:	beq	14908 <argp_parse@@Base+0x1df4>
   1460c:	ldr	r0, [sp, #112]	; 0x70
   14610:	cmp	r0, #0
   14614:	str	r0, [sp, #48]	; 0x30
   14618:	beq	14910 <argp_parse@@Base+0x1dfc>
   1461c:	ldr	r0, [sp, #116]	; 0x74
   14620:	cmp	r0, #0
   14624:	str	r0, [sp, #52]	; 0x34
   14628:	beq	14918 <argp_parse@@Base+0x1e04>
   1462c:	ldr	r0, [sp, #120]	; 0x78
   14630:	cmp	r0, #0
   14634:	str	r0, [sp, #56]	; 0x38
   14638:	beq	14920 <argp_parse@@Base+0x1e0c>
   1463c:	ldr	r0, [sp, #124]	; 0x7c
   14640:	cmp	r0, #0
   14644:	str	r0, [sp, #60]	; 0x3c
   14648:	beq	14928 <argp_parse@@Base+0x1e14>
   1464c:	ldr	r0, [sp, #128]	; 0x80
   14650:	cmp	r0, #0
   14654:	str	r0, [sp, #64]	; 0x40
   14658:	beq	14930 <argp_parse@@Base+0x1e1c>
   1465c:	ldr	r0, [sp, #132]	; 0x84
   14660:	cmp	r0, #0
   14664:	str	r0, [sp, #68]	; 0x44
   14668:	beq	14938 <argp_parse@@Base+0x1e24>
   1466c:	ldr	r3, [sp, #136]	; 0x88
   14670:	cmp	r3, #0
   14674:	str	r3, [sp, #72]	; 0x48
   14678:	beq	14940 <argp_parse@@Base+0x1e2c>
   1467c:	ldr	lr, [sp, #140]	; 0x8c
   14680:	cmp	lr, #0
   14684:	movne	r4, #10
   14688:	moveq	r4, #9
   1468c:	cmp	r1, #0
   14690:	ldr	r3, [sp, #100]	; 0x64
   14694:	beq	148f0 <argp_parse@@Base+0x1ddc>
   14698:	str	r3, [sp]
   1469c:	mov	r0, r5
   146a0:	mov	r3, r2
   146a4:	mov	r2, r1
   146a8:	ldr	r1, [pc, #664]	; 14948 <argp_parse@@Base+0x1e34>
   146ac:	bl	111d4 <fprintf@plt>
   146b0:	ldr	r3, [pc, #660]	; 1494c <argp_parse@@Base+0x1e38>
   146b4:	ldr	r2, [pc, #660]	; 14950 <argp_parse@@Base+0x1e3c>
   146b8:	ldr	r1, [pc, #660]	; 14954 <argp_parse@@Base+0x1e40>
   146bc:	mov	r0, r5
   146c0:	bl	111d4 <fprintf@plt>
   146c4:	mov	r1, r5
   146c8:	mov	r0, #10
   146cc:	bl	11264 <fputc@plt>
   146d0:	ldr	r1, [pc, #640]	; 14958 <argp_parse@@Base+0x1e44>
   146d4:	ldr	r2, [pc, #640]	; 1495c <argp_parse@@Base+0x1e48>
   146d8:	mov	r0, r5
   146dc:	bl	111d4 <fprintf@plt>
   146e0:	mov	r1, r5
   146e4:	mov	r0, #10
   146e8:	bl	11264 <fputc@plt>
   146ec:	cmp	r4, #9
   146f0:	ldrls	pc, [pc, r4, lsl #2]
   146f4:	b	14720 <argp_parse@@Base+0x1c0c>
   146f8:	andeq	r4, r1, r4, ror #14
   146fc:			; <UNDEFINED> instruction: 0x000147bc
   14700:	ldrdeq	r4, [r1], -r0
   14704:	andeq	r4, r1, r8, ror #15
   14708:	andeq	r4, r1, r8, lsl #16
   1470c:	andeq	r4, r1, ip, lsr #16
   14710:	andeq	r4, r1, r0, asr r8
   14714:	andeq	r4, r1, ip, ror r8
   14718:			; <UNDEFINED> instruction: 0x000148b0
   1471c:	andeq	r4, r1, r4, ror r7
   14720:	ldr	ip, [sp, #72]	; 0x48
   14724:	ldr	r1, [sp, #68]	; 0x44
   14728:	ldr	lr, [sp, #56]	; 0x38
   1472c:	str	ip, [sp, #24]
   14730:	str	r1, [sp, #20]
   14734:	ldr	ip, [sp, #52]	; 0x34
   14738:	ldr	r1, [sp, #48]	; 0x30
   1473c:	ldr	r6, [sp, #64]	; 0x40
   14740:	ldr	r4, [sp, #60]	; 0x3c
   14744:	stm	sp, {r1, ip, lr}
   14748:	mov	r0, r5
   1474c:	ldr	r3, [sp, #44]	; 0x2c
   14750:	ldr	r2, [sp, #40]	; 0x28
   14754:	str	r6, [sp, #16]
   14758:	str	r4, [sp, #12]
   1475c:	ldr	r1, [pc, #508]	; 14960 <argp_parse@@Base+0x1e4c>
   14760:	bl	111d4 <fprintf@plt>
   14764:	add	sp, sp, #84	; 0x54
   14768:	pop	{r4, r5, r6, lr}
   1476c:	add	sp, sp, #4
   14770:	bx	lr
   14774:	ldr	ip, [sp, #72]	; 0x48
   14778:	ldr	r1, [sp, #68]	; 0x44
   1477c:	ldr	lr, [sp, #56]	; 0x38
   14780:	str	ip, [sp, #24]
   14784:	str	r1, [sp, #20]
   14788:	ldr	ip, [sp, #52]	; 0x34
   1478c:	ldr	r1, [sp, #48]	; 0x30
   14790:	ldr	r6, [sp, #64]	; 0x40
   14794:	ldr	r4, [sp, #60]	; 0x3c
   14798:	stm	sp, {r1, ip, lr}
   1479c:	mov	r0, r5
   147a0:	ldr	r3, [sp, #44]	; 0x2c
   147a4:	ldr	r2, [sp, #40]	; 0x28
   147a8:	str	r6, [sp, #16]
   147ac:	str	r4, [sp, #12]
   147b0:	ldr	r1, [pc, #428]	; 14964 <argp_parse@@Base+0x1e50>
   147b4:	bl	111d4 <fprintf@plt>
   147b8:	b	14764 <argp_parse@@Base+0x1c50>
   147bc:	mov	r0, r5
   147c0:	ldr	r2, [sp, #40]	; 0x28
   147c4:	ldr	r1, [pc, #412]	; 14968 <argp_parse@@Base+0x1e54>
   147c8:	bl	111d4 <fprintf@plt>
   147cc:	b	14764 <argp_parse@@Base+0x1c50>
   147d0:	mov	r0, r5
   147d4:	ldr	r3, [sp, #44]	; 0x2c
   147d8:	ldr	r2, [sp, #40]	; 0x28
   147dc:	ldr	r1, [pc, #392]	; 1496c <argp_parse@@Base+0x1e58>
   147e0:	bl	111d4 <fprintf@plt>
   147e4:	b	14764 <argp_parse@@Base+0x1c50>
   147e8:	ldr	r1, [sp, #48]	; 0x30
   147ec:	ldr	r3, [sp, #44]	; 0x2c
   147f0:	str	r1, [sp]
   147f4:	ldr	r2, [sp, #40]	; 0x28
   147f8:	mov	r0, r5
   147fc:	ldr	r1, [pc, #364]	; 14970 <argp_parse@@Base+0x1e5c>
   14800:	bl	111d4 <fprintf@plt>
   14804:	b	14764 <argp_parse@@Base+0x1c50>
   14808:	ldr	r1, [sp, #48]	; 0x30
   1480c:	ldr	ip, [sp, #52]	; 0x34
   14810:	ldr	r3, [sp, #44]	; 0x2c
   14814:	ldr	r2, [sp, #40]	; 0x28
   14818:	stm	sp, {r1, ip}
   1481c:	mov	r0, r5
   14820:	ldr	r1, [pc, #332]	; 14974 <argp_parse@@Base+0x1e60>
   14824:	bl	111d4 <fprintf@plt>
   14828:	b	14764 <argp_parse@@Base+0x1c50>
   1482c:	add	r1, sp, #48	; 0x30
   14830:	ldr	r3, [sp, #44]	; 0x2c
   14834:	ldm	r1, {r1, ip, lr}
   14838:	mov	r0, r5
   1483c:	ldr	r2, [sp, #40]	; 0x28
   14840:	stm	sp, {r1, ip, lr}
   14844:	ldr	r1, [pc, #300]	; 14978 <argp_parse@@Base+0x1e64>
   14848:	bl	111d4 <fprintf@plt>
   1484c:	b	14764 <argp_parse@@Base+0x1c50>
   14850:	add	r1, sp, #48	; 0x30
   14854:	ldr	r4, [sp, #60]	; 0x3c
   14858:	ldm	r1, {r1, ip, lr}
   1485c:	mov	r0, r5
   14860:	ldr	r3, [sp, #44]	; 0x2c
   14864:	ldr	r2, [sp, #40]	; 0x28
   14868:	stm	sp, {r1, ip, lr}
   1486c:	str	r4, [sp, #12]
   14870:	ldr	r1, [pc, #260]	; 1497c <argp_parse@@Base+0x1e68>
   14874:	bl	111d4 <fprintf@plt>
   14878:	b	14764 <argp_parse@@Base+0x1c50>
   1487c:	add	r1, sp, #48	; 0x30
   14880:	ldr	r6, [sp, #64]	; 0x40
   14884:	ldm	r1, {r1, ip, lr}
   14888:	mov	r0, r5
   1488c:	ldr	r4, [sp, #60]	; 0x3c
   14890:	ldr	r3, [sp, #44]	; 0x2c
   14894:	stm	sp, {r1, ip, lr}
   14898:	ldr	r2, [sp, #40]	; 0x28
   1489c:	str	r6, [sp, #16]
   148a0:	str	r4, [sp, #12]
   148a4:	ldr	r1, [pc, #212]	; 14980 <argp_parse@@Base+0x1e6c>
   148a8:	bl	111d4 <fprintf@plt>
   148ac:	b	14764 <argp_parse@@Base+0x1c50>
   148b0:	ldr	r1, [sp, #68]	; 0x44
   148b4:	ldr	lr, [sp, #56]	; 0x38
   148b8:	ldr	ip, [sp, #52]	; 0x34
   148bc:	str	r1, [sp, #20]
   148c0:	ldr	r1, [sp, #48]	; 0x30
   148c4:	ldr	r6, [sp, #64]	; 0x40
   148c8:	ldr	r4, [sp, #60]	; 0x3c
   148cc:	stm	sp, {r1, ip, lr}
   148d0:	mov	r0, r5
   148d4:	ldr	r3, [sp, #44]	; 0x2c
   148d8:	ldr	r2, [sp, #40]	; 0x28
   148dc:	str	r6, [sp, #16]
   148e0:	str	r4, [sp, #12]
   148e4:	ldr	r1, [pc, #152]	; 14984 <argp_parse@@Base+0x1e70>
   148e8:	bl	111d4 <fprintf@plt>
   148ec:	b	14764 <argp_parse@@Base+0x1c50>
   148f0:	ldr	r1, [pc, #144]	; 14988 <argp_parse@@Base+0x1e74>
   148f4:	mov	r0, r5
   148f8:	bl	111d4 <fprintf@plt>
   148fc:	b	146b0 <argp_parse@@Base+0x1b9c>
   14900:	mov	r4, lr
   14904:	b	1468c <argp_parse@@Base+0x1b78>
   14908:	mov	r4, #1
   1490c:	b	1468c <argp_parse@@Base+0x1b78>
   14910:	mov	r4, #2
   14914:	b	1468c <argp_parse@@Base+0x1b78>
   14918:	mov	r4, #3
   1491c:	b	1468c <argp_parse@@Base+0x1b78>
   14920:	mov	r4, #4
   14924:	b	1468c <argp_parse@@Base+0x1b78>
   14928:	mov	r4, #5
   1492c:	b	1468c <argp_parse@@Base+0x1b78>
   14930:	mov	r4, #6
   14934:	b	1468c <argp_parse@@Base+0x1b78>
   14938:	mov	r4, #7
   1493c:	b	1468c <argp_parse@@Base+0x1b78>
   14940:	mov	r4, #8
   14944:	b	1468c <argp_parse@@Base+0x1b78>
   14948:	andeq	ip, r1, r0, lsl #8
   1494c:	andeq	r0, r0, r6, ror #15
   14950:	andeq	ip, r1, r4, lsl r4
   14954:	andeq	ip, r1, r4, lsl r7
   14958:	andeq	ip, r1, ip, lsr r4
   1495c:	andeq	ip, r1, r8, lsl r4
   14960:	andeq	ip, r1, r8, lsr #12
   14964:	strdeq	ip, [r1], -r4
   14968:	andeq	ip, r1, r8, ror #9
   1496c:	strdeq	ip, [r1], -r8
   14970:	andeq	ip, r1, r0, lsl r5
   14974:	andeq	ip, r1, ip, lsr #10
   14978:	andeq	ip, r1, ip, asr #10
   1497c:	andeq	ip, r1, r0, ror r5
   14980:	muleq	r1, r8, r5
   14984:	andeq	ip, r1, r4, asr #11
   14988:	andeq	ip, r1, ip, lsl #8
   1498c:	ldr	r3, [pc, #56]	; 149cc <argp_parse@@Base+0x1eb8>
   14990:	push	{r4, lr}
   14994:	mov	r0, #10
   14998:	ldr	r1, [r3]
   1499c:	bl	11264 <fputc@plt>
   149a0:	ldr	r1, [pc, #40]	; 149d0 <argp_parse@@Base+0x1ebc>
   149a4:	ldr	r0, [pc, #40]	; 149d4 <argp_parse@@Base+0x1ec0>
   149a8:	bl	11054 <printf@plt>
   149ac:	ldr	r1, [pc, #36]	; 149d8 <argp_parse@@Base+0x1ec4>
   149b0:	ldr	r2, [pc, #36]	; 149dc <argp_parse@@Base+0x1ec8>
   149b4:	ldr	r0, [pc, #36]	; 149e0 <argp_parse@@Base+0x1ecc>
   149b8:	bl	11054 <printf@plt>
   149bc:	ldr	r1, [pc, #32]	; 149e4 <argp_parse@@Base+0x1ed0>
   149c0:	ldr	r0, [pc, #32]	; 149e8 <argp_parse@@Base+0x1ed4>
   149c4:	pop	{r4, lr}
   149c8:	b	11054 <printf@plt>
   149cc:			; <UNDEFINED> instruction: 0x0002d3bc
   149d0:	andeq	ip, r1, r4, ror #12
   149d4:	andeq	ip, r1, ip, ror r6
   149d8:	andeq	ip, r1, ip, lsr #7
   149dc:	muleq	r1, r0, r6
   149e0:			; <UNDEFINED> instruction: 0x0001c6b8
   149e4:	andeq	ip, r1, ip, asr #13
   149e8:	andeq	ip, r1, ip, ror #13
   149ec:	push	{r4, r5, r6, lr}
   149f0:	mov	r6, r0
   149f4:	mov	r5, r1
   149f8:	mov	r4, r2
   149fc:	bl	1ae3c <argp_error@@Base+0x1994>
   14a00:	cmp	r0, #0
   14a04:	popne	{r4, r5, r6, pc}
   14a08:	cmp	r6, #0
   14a0c:	beq	14a1c <argp_parse@@Base+0x1f08>
   14a10:	cmp	r5, #0
   14a14:	cmpne	r4, #0
   14a18:	popeq	{r4, r5, r6, pc}
   14a1c:	bl	15068 <argp_parse@@Base+0x2554>
   14a20:	push	{r4, lr}
   14a24:	bl	150dc <argp_parse@@Base+0x25c8>
   14a28:	cmp	r0, #0
   14a2c:	popne	{r4, pc}
   14a30:	bl	15068 <argp_parse@@Base+0x2554>
   14a34:	push	{r4, lr}
   14a38:	bl	150dc <argp_parse@@Base+0x25c8>
   14a3c:	cmp	r0, #0
   14a40:	popne	{r4, pc}
   14a44:	bl	15068 <argp_parse@@Base+0x2554>
   14a48:	push	{r4, lr}
   14a4c:	bl	150dc <argp_parse@@Base+0x25c8>
   14a50:	cmp	r0, #0
   14a54:	popne	{r4, pc}
   14a58:	bl	15068 <argp_parse@@Base+0x2554>
   14a5c:	push	{r4, r5, r6, lr}
   14a60:	mov	r5, r0
   14a64:	mov	r4, r1
   14a68:	bl	15108 <argp_parse@@Base+0x25f4>
   14a6c:	cmp	r0, #0
   14a70:	popne	{r4, r5, r6, pc}
   14a74:	adds	r4, r4, #0
   14a78:	movne	r4, #1
   14a7c:	cmp	r5, #0
   14a80:	orreq	r4, r4, #1
   14a84:	cmp	r4, #0
   14a88:	popeq	{r4, r5, r6, pc}
   14a8c:	bl	15068 <argp_parse@@Base+0x2554>
   14a90:	push	{r4, lr}
   14a94:	cmp	r1, #0
   14a98:	orreq	r1, r1, #1
   14a9c:	bl	15108 <argp_parse@@Base+0x25f4>
   14aa0:	cmp	r0, #0
   14aa4:	popne	{r4, pc}
   14aa8:	bl	15068 <argp_parse@@Base+0x2554>
   14aac:	push	{r4, r5, r6, lr}
   14ab0:	mov	r6, r0
   14ab4:	mov	r5, r1
   14ab8:	mov	r4, r2
   14abc:	bl	1ae3c <argp_error@@Base+0x1994>
   14ac0:	cmp	r0, #0
   14ac4:	popne	{r4, r5, r6, pc}
   14ac8:	cmp	r6, #0
   14acc:	beq	14adc <argp_parse@@Base+0x1fc8>
   14ad0:	cmp	r5, #0
   14ad4:	cmpne	r4, #0
   14ad8:	popeq	{r4, r5, r6, pc}
   14adc:	bl	15068 <argp_parse@@Base+0x2554>
   14ae0:	cmp	r2, #0
   14ae4:	cmpne	r1, #0
   14ae8:	moveq	r2, #1
   14aec:	moveq	r1, r2
   14af0:	push	{r4, lr}
   14af4:	bl	1ae3c <argp_error@@Base+0x1994>
   14af8:	cmp	r0, #0
   14afc:	popne	{r4, pc}
   14b00:	bl	15068 <argp_parse@@Base+0x2554>
   14b04:	push	{r4, lr}
   14b08:	mov	r2, r1
   14b0c:	mov	r1, r0
   14b10:	mov	r0, #0
   14b14:	bl	1ae3c <argp_error@@Base+0x1994>
   14b18:	cmp	r0, #0
   14b1c:	popne	{r4, pc}
   14b20:	bl	15068 <argp_parse@@Base+0x2554>
   14b24:	cmp	r1, #0
   14b28:	cmpne	r0, #0
   14b2c:	moveq	r2, #1
   14b30:	movne	r2, r1
   14b34:	moveq	r1, r2
   14b38:	movne	r1, r0
   14b3c:	push	{r4, lr}
   14b40:	mov	r0, #0
   14b44:	bl	1ae3c <argp_error@@Base+0x1994>
   14b48:	cmp	r0, #0
   14b4c:	popne	{r4, pc}
   14b50:	bl	15068 <argp_parse@@Base+0x2554>
   14b54:	cmp	r0, #0
   14b58:	push	{r4, r5, r6, lr}
   14b5c:	mov	r5, r1
   14b60:	ldr	r4, [r1]
   14b64:	beq	14ba0 <argp_parse@@Base+0x208c>
   14b68:	lsr	r2, r4, #1
   14b6c:	add	r3, r2, #1
   14b70:	mvn	r3, r3
   14b74:	cmp	r4, r3
   14b78:	bhi	14bbc <argp_parse@@Base+0x20a8>
   14b7c:	add	r4, r4, #1
   14b80:	add	r4, r4, r2
   14b84:	mov	r1, r4
   14b88:	mov	r2, #1
   14b8c:	bl	1ae3c <argp_error@@Base+0x1994>
   14b90:	cmp	r0, #0
   14b94:	beq	14bc0 <argp_parse@@Base+0x20ac>
   14b98:	str	r4, [r5]
   14b9c:	pop	{r4, r5, r6, pc}
   14ba0:	cmp	r4, #0
   14ba4:	moveq	r4, #64	; 0x40
   14ba8:	mov	r1, r4
   14bac:	mov	r2, #1
   14bb0:	bl	1ae3c <argp_error@@Base+0x1994>
   14bb4:	cmp	r0, #0
   14bb8:	bne	14b98 <argp_parse@@Base+0x2084>
   14bbc:	bl	15068 <argp_parse@@Base+0x2554>
   14bc0:	cmp	r4, #0
   14bc4:	bne	14bbc <argp_parse@@Base+0x20a8>
   14bc8:	str	r4, [r5]
   14bcc:	pop	{r4, r5, r6, pc}
   14bd0:	cmp	r0, #0
   14bd4:	push	{r4, r5, r6, lr}
   14bd8:	mov	r5, r1
   14bdc:	ldr	r4, [r1]
   14be0:	mov	r6, r2
   14be4:	beq	14c28 <argp_parse@@Base+0x2114>
   14be8:	lsr	r1, r4, #1
   14bec:	add	r3, r1, #1
   14bf0:	mvn	r3, r3
   14bf4:	cmp	r4, r3
   14bf8:	bhi	14c60 <argp_parse@@Base+0x214c>
   14bfc:	add	r4, r4, #1
   14c00:	add	r4, r4, r1
   14c04:	mov	r1, r4
   14c08:	bl	1ae3c <argp_error@@Base+0x1994>
   14c0c:	cmp	r0, #0
   14c10:	bne	14c20 <argp_parse@@Base+0x210c>
   14c14:	cmp	r4, #0
   14c18:	cmpne	r6, #0
   14c1c:	bne	14c60 <argp_parse@@Base+0x214c>
   14c20:	str	r4, [r5]
   14c24:	pop	{r4, r5, r6, pc}
   14c28:	cmp	r4, #0
   14c2c:	bne	14c48 <argp_parse@@Base+0x2134>
   14c30:	mov	r1, r2
   14c34:	mov	r0, #64	; 0x40
   14c38:	bl	1b6f8 <argp_error@@Base+0x2250>
   14c3c:	cmp	r0, #0
   14c40:	movne	r4, r0
   14c44:	addeq	r4, r0, #1
   14c48:	mov	r2, r6
   14c4c:	mov	r1, r4
   14c50:	mov	r0, #0
   14c54:	bl	1ae3c <argp_error@@Base+0x1994>
   14c58:	cmp	r0, #0
   14c5c:	bne	14c20 <argp_parse@@Base+0x210c>
   14c60:	bl	15068 <argp_parse@@Base+0x2554>
   14c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c68:	sub	sp, sp, #12
   14c6c:	ldr	r6, [r1]
   14c70:	mov	r8, r1
   14c74:	mov	r9, r0
   14c78:	asrs	r4, r6, #1
   14c7c:	mov	sl, r2
   14c80:	mov	fp, r3
   14c84:	ldr	r7, [sp, #48]	; 0x30
   14c88:	bmi	14e04 <argp_parse@@Base+0x22f0>
   14c8c:	mvn	r1, #-2147483648	; 0x80000000
   14c90:	sub	r1, r1, r4
   14c94:	cmp	r6, r1
   14c98:	movle	r1, #0
   14c9c:	movgt	r1, #1
   14ca0:	mvn	r3, fp
   14ca4:	cmp	r1, #0
   14ca8:	addeq	r4, r4, r6
   14cac:	mvnne	r4, #-2147483648	; 0x80000000
   14cb0:	lsr	r3, r3, #31
   14cb4:	cmp	fp, r4
   14cb8:	movge	r2, #0
   14cbc:	andlt	r2, r3, #1
   14cc0:	cmp	r2, #0
   14cc4:	beq	14db4 <argp_parse@@Base+0x22a0>
   14cc8:	cmp	r7, #0
   14ccc:	blt	14e9c <argp_parse@@Base+0x2388>
   14cd0:	bne	14e94 <argp_parse@@Base+0x2380>
   14cd4:	mov	r5, #64	; 0x40
   14cd8:	mov	r1, r7
   14cdc:	mov	r0, r5
   14ce0:	str	r3, [sp, #4]
   14ce4:	bl	1b904 <argp_error@@Base+0x245c>
   14ce8:	mov	r1, r7
   14cec:	mov	r4, r0
   14cf0:	mov	r0, r5
   14cf4:	bl	1bb24 <argp_error@@Base+0x267c>
   14cf8:	ldr	r3, [sp, #4]
   14cfc:	sub	r5, r5, r1
   14d00:	cmp	r9, #0
   14d04:	sub	r2, r4, r6
   14d08:	streq	r9, [r8]
   14d0c:	cmp	r2, sl
   14d10:	bge	14d94 <argp_parse@@Base+0x2280>
   14d14:	cmp	sl, #0
   14d18:	blt	14e34 <argp_parse@@Base+0x2320>
   14d1c:	cmp	r6, #0
   14d20:	blt	14d40 <argp_parse@@Base+0x222c>
   14d24:	mvn	r2, #-2147483648	; 0x80000000
   14d28:	sub	r2, r2, sl
   14d2c:	cmp	r6, r2
   14d30:	movle	r2, #0
   14d34:	movgt	r2, #1
   14d38:	cmp	r2, #0
   14d3c:	bne	14e30 <argp_parse@@Base+0x231c>
   14d40:	add	r6, r6, sl
   14d44:	cmp	fp, r6
   14d48:	movge	r3, #0
   14d4c:	andlt	r3, r3, #1
   14d50:	cmp	r3, #0
   14d54:	mov	r4, r6
   14d58:	bne	14e30 <argp_parse@@Base+0x231c>
   14d5c:	cmp	r7, #0
   14d60:	blt	14e48 <argp_parse@@Base+0x2334>
   14d64:	beq	14d90 <argp_parse@@Base+0x227c>
   14d68:	cmp	r6, #0
   14d6c:	blt	14eec <argp_parse@@Base+0x23d8>
   14d70:	mov	r1, r7
   14d74:	mvn	r0, #-2147483648	; 0x80000000
   14d78:	bl	1b904 <argp_error@@Base+0x245c>
   14d7c:	cmp	r6, r0
   14d80:	movle	r0, #0
   14d84:	movgt	r0, #1
   14d88:	cmp	r0, #0
   14d8c:	bne	14e30 <argp_parse@@Base+0x231c>
   14d90:	mul	r5, r6, r7
   14d94:	mov	r1, r5
   14d98:	mov	r0, r9
   14d9c:	bl	15108 <argp_parse@@Base+0x25f4>
   14da0:	cmp	r0, #0
   14da4:	beq	14e18 <argp_parse@@Base+0x2304>
   14da8:	str	r4, [r8]
   14dac:	add	sp, sp, #12
   14db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14db4:	cmp	r7, #0
   14db8:	blt	14e74 <argp_parse@@Base+0x2360>
   14dbc:	beq	14cd4 <argp_parse@@Base+0x21c0>
   14dc0:	cmp	r4, #0
   14dc4:	blt	14ea4 <argp_parse@@Base+0x2390>
   14dc8:	mov	r1, r7
   14dcc:	mvn	r0, #-2147483648	; 0x80000000
   14dd0:	str	r3, [sp, #4]
   14dd4:	bl	1b904 <argp_error@@Base+0x245c>
   14dd8:	ldr	r3, [sp, #4]
   14ddc:	cmp	r0, r4
   14de0:	movge	r0, #0
   14de4:	movlt	r0, #1
   14de8:	cmp	r0, #0
   14dec:	mvnne	r5, #-2147483648	; 0x80000000
   14df0:	bne	14cd8 <argp_parse@@Base+0x21c4>
   14df4:	mul	r5, r7, r4
   14df8:	cmp	r5, #63	; 0x3f
   14dfc:	bgt	14d00 <argp_parse@@Base+0x21ec>
   14e00:	b	14cd4 <argp_parse@@Base+0x21c0>
   14e04:	rsb	r1, r4, #-2147483648	; 0x80000000
   14e08:	cmp	r6, r1
   14e0c:	movge	r1, #0
   14e10:	movlt	r1, #1
   14e14:	b	14ca0 <argp_parse@@Base+0x218c>
   14e18:	adds	r5, r5, #0
   14e1c:	movne	r5, #1
   14e20:	cmp	r9, #0
   14e24:	orreq	r5, r5, #1
   14e28:	cmp	r5, #0
   14e2c:	beq	14da8 <argp_parse@@Base+0x2294>
   14e30:	bl	15068 <argp_parse@@Base+0x2554>
   14e34:	rsb	r2, sl, #-2147483648	; 0x80000000
   14e38:	cmp	r6, r2
   14e3c:	movge	r2, #0
   14e40:	movlt	r2, #1
   14e44:	b	14d38 <argp_parse@@Base+0x2224>
   14e48:	cmp	r6, #0
   14e4c:	blt	14ed0 <argp_parse@@Base+0x23bc>
   14e50:	cmn	r7, #1
   14e54:	beq	14d90 <argp_parse@@Base+0x227c>
   14e58:	mov	r1, r7
   14e5c:	mov	r0, #-2147483648	; 0x80000000
   14e60:	bl	1b904 <argp_error@@Base+0x245c>
   14e64:	cmp	r6, r0
   14e68:	movle	r0, #0
   14e6c:	movgt	r0, #1
   14e70:	b	14d88 <argp_parse@@Base+0x2274>
   14e74:	cmp	r4, #0
   14e78:	blt	14f10 <argp_parse@@Base+0x23fc>
   14e7c:	cmn	r7, #1
   14e80:	beq	14df4 <argp_parse@@Base+0x22e0>
   14e84:	str	r3, [sp, #4]
   14e88:	mov	r1, r7
   14e8c:	mov	r0, #-2147483648	; 0x80000000
   14e90:	b	14dd4 <argp_parse@@Base+0x22c0>
   14e94:	mov	r4, fp
   14e98:	b	14dc8 <argp_parse@@Base+0x22b4>
   14e9c:	mov	r4, fp
   14ea0:	b	14e7c <argp_parse@@Base+0x2368>
   14ea4:	cmn	r4, #1
   14ea8:	beq	14df4 <argp_parse@@Base+0x22e0>
   14eac:	mov	r1, r4
   14eb0:	mov	r0, #-2147483648	; 0x80000000
   14eb4:	str	r3, [sp, #4]
   14eb8:	bl	1b904 <argp_error@@Base+0x245c>
   14ebc:	ldr	r3, [sp, #4]
   14ec0:	cmp	r7, r0
   14ec4:	movle	r0, #0
   14ec8:	movgt	r0, #1
   14ecc:	b	14de8 <argp_parse@@Base+0x22d4>
   14ed0:	mov	r1, r7
   14ed4:	mvn	r0, #-2147483648	; 0x80000000
   14ed8:	bl	1b904 <argp_error@@Base+0x245c>
   14edc:	cmp	r6, r0
   14ee0:	movge	r0, #0
   14ee4:	movlt	r0, #1
   14ee8:	b	14d88 <argp_parse@@Base+0x2274>
   14eec:	cmn	r6, #1
   14ef0:	beq	14d90 <argp_parse@@Base+0x227c>
   14ef4:	mov	r1, r6
   14ef8:	mov	r0, #-2147483648	; 0x80000000
   14efc:	bl	1b904 <argp_error@@Base+0x245c>
   14f00:	cmp	r7, r0
   14f04:	movle	r0, #0
   14f08:	movgt	r0, #1
   14f0c:	b	14d88 <argp_parse@@Base+0x2274>
   14f10:	mov	r1, r7
   14f14:	mvn	r0, #-2147483648	; 0x80000000
   14f18:	str	r3, [sp, #4]
   14f1c:	bl	1b904 <argp_error@@Base+0x245c>
   14f20:	ldr	r3, [sp, #4]
   14f24:	cmp	r0, r4
   14f28:	movle	r0, #0
   14f2c:	movgt	r0, #1
   14f30:	b	14de8 <argp_parse@@Base+0x22d4>
   14f34:	push	{r4, lr}
   14f38:	mov	r1, #1
   14f3c:	bl	15094 <argp_parse@@Base+0x2580>
   14f40:	cmp	r0, #0
   14f44:	popne	{r4, pc}
   14f48:	bl	15068 <argp_parse@@Base+0x2554>
   14f4c:	push	{r4, lr}
   14f50:	mov	r1, #1
   14f54:	bl	15094 <argp_parse@@Base+0x2580>
   14f58:	cmp	r0, #0
   14f5c:	popne	{r4, pc}
   14f60:	bl	15068 <argp_parse@@Base+0x2554>
   14f64:	push	{r4, lr}
   14f68:	bl	15094 <argp_parse@@Base+0x2580>
   14f6c:	cmp	r0, #0
   14f70:	popne	{r4, pc}
   14f74:	bl	15068 <argp_parse@@Base+0x2554>
   14f78:	push	{r4, lr}
   14f7c:	bl	15094 <argp_parse@@Base+0x2580>
   14f80:	cmp	r0, #0
   14f84:	popne	{r4, pc}
   14f88:	bl	15068 <argp_parse@@Base+0x2554>
   14f8c:	push	{r4, r5, r6, lr}
   14f90:	mov	r6, r0
   14f94:	mov	r0, r1
   14f98:	mov	r4, r1
   14f9c:	bl	150dc <argp_parse@@Base+0x25c8>
   14fa0:	subs	r5, r0, #0
   14fa4:	beq	14fbc <argp_parse@@Base+0x24a8>
   14fa8:	mov	r2, r4
   14fac:	mov	r1, r6
   14fb0:	bl	110a8 <memcpy@plt>
   14fb4:	mov	r0, r5
   14fb8:	pop	{r4, r5, r6, pc}
   14fbc:	bl	15068 <argp_parse@@Base+0x2554>
   14fc0:	push	{r4, r5, r6, lr}
   14fc4:	mov	r6, r0
   14fc8:	mov	r0, r1
   14fcc:	mov	r4, r1
   14fd0:	bl	150dc <argp_parse@@Base+0x25c8>
   14fd4:	subs	r5, r0, #0
   14fd8:	beq	14ff0 <argp_parse@@Base+0x24dc>
   14fdc:	mov	r2, r4
   14fe0:	mov	r1, r6
   14fe4:	bl	110a8 <memcpy@plt>
   14fe8:	mov	r0, r5
   14fec:	pop	{r4, r5, r6, pc}
   14ff0:	bl	15068 <argp_parse@@Base+0x2554>
   14ff4:	push	{r4, r5, r6, lr}
   14ff8:	mov	r6, r0
   14ffc:	add	r0, r1, #1
   15000:	mov	r4, r1
   15004:	bl	150dc <argp_parse@@Base+0x25c8>
   15008:	subs	r5, r0, #0
   1500c:	beq	1502c <argp_parse@@Base+0x2518>
   15010:	mov	r3, #0
   15014:	mov	r1, r6
   15018:	strb	r3, [r5, r4]
   1501c:	mov	r2, r4
   15020:	bl	110a8 <memcpy@plt>
   15024:	mov	r0, r5
   15028:	pop	{r4, r5, r6, pc}
   1502c:	bl	15068 <argp_parse@@Base+0x2554>
   15030:	push	{r4, r5, r6, lr}
   15034:	mov	r6, r0
   15038:	bl	111bc <strlen@plt>
   1503c:	add	r4, r0, #1
   15040:	mov	r0, r4
   15044:	bl	150dc <argp_parse@@Base+0x25c8>
   15048:	subs	r5, r0, #0
   1504c:	beq	15064 <argp_parse@@Base+0x2550>
   15050:	mov	r2, r4
   15054:	mov	r1, r6
   15058:	bl	110a8 <memcpy@plt>
   1505c:	mov	r0, r5
   15060:	pop	{r4, r5, r6, pc}
   15064:	bl	15068 <argp_parse@@Base+0x2554>
   15068:	ldr	r1, [pc, #24]	; 15088 <argp_parse@@Base+0x2574>
   1506c:	push	{r4, lr}
   15070:	ldr	r0, [r1]
   15074:	ldr	r3, [pc, #16]	; 1508c <argp_parse@@Base+0x2578>
   15078:	ldr	r2, [pc, #16]	; 15090 <argp_parse@@Base+0x257c>
   1507c:	mov	r1, #0
   15080:	bl	11120 <error@plt>
   15084:	bl	112c4 <abort@plt>
   15088:	muleq	r2, r4, r3
   1508c:	andeq	ip, r1, r4, asr #14
   15090:	andeq	fp, r1, r4, lsl lr
   15094:	cmp	r1, #0
   15098:	cmpne	r0, #0
   1509c:	moveq	r1, #1
   150a0:	moveq	r0, r1
   150a4:	umull	r2, r3, r0, r1
   150a8:	adds	r3, r3, #0
   150ac:	movne	r3, #1
   150b0:	cmp	r2, #0
   150b4:	blt	150c4 <argp_parse@@Base+0x25b0>
   150b8:	cmp	r3, #0
   150bc:	bne	150c4 <argp_parse@@Base+0x25b0>
   150c0:	b	11000 <calloc@plt>
   150c4:	push	{r4, lr}
   150c8:	bl	111e0 <__errno_location@plt>
   150cc:	mov	r3, #12
   150d0:	str	r3, [r0]
   150d4:	mov	r0, #0
   150d8:	pop	{r4, pc}
   150dc:	cmp	r0, #0
   150e0:	moveq	r0, #1
   150e4:	cmp	r0, #0
   150e8:	blt	150f0 <argp_parse@@Base+0x25dc>
   150ec:	b	11138 <malloc@plt>
   150f0:	push	{r4, lr}
   150f4:	bl	111e0 <__errno_location@plt>
   150f8:	mov	r3, #12
   150fc:	str	r3, [r0]
   15100:	mov	r0, #0
   15104:	pop	{r4, pc}
   15108:	cmp	r0, #0
   1510c:	beq	15130 <argp_parse@@Base+0x261c>
   15110:	cmp	r1, #0
   15114:	push	{lr}		; (str lr, [sp, #-4]!)
   15118:	sub	sp, sp, #12
   1511c:	beq	15138 <argp_parse@@Base+0x2624>
   15120:	blt	15150 <argp_parse@@Base+0x263c>
   15124:	add	sp, sp, #12
   15128:	pop	{lr}		; (ldr lr, [sp], #4)
   1512c:	b	110e4 <realloc@plt>
   15130:	mov	r0, r1
   15134:	b	150dc <argp_parse@@Base+0x25c8>
   15138:	str	r1, [sp, #4]
   1513c:	bl	13a90 <argp_parse@@Base+0xf7c>
   15140:	ldr	r3, [sp, #4]
   15144:	mov	r0, r3
   15148:	add	sp, sp, #12
   1514c:	pop	{pc}		; (ldr pc, [sp], #4)
   15150:	bl	111e0 <__errno_location@plt>
   15154:	mov	r2, #12
   15158:	mov	r3, #0
   1515c:	str	r2, [r0]
   15160:	b	15144 <argp_parse@@Base+0x2630>
   15164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15168:	mov	r7, r3
   1516c:	ldr	sl, [r0, #12]
   15170:	sub	sp, sp, #36	; 0x24
   15174:	ldr	r3, [r0, #16]
   15178:	cmp	sl, #0
   1517c:	mov	fp, r0
   15180:	mov	r6, r2
   15184:	str	r3, [sp, #16]
   15188:	mov	r9, r1
   1518c:	ldr	r8, [sp, #72]	; 0x48
   15190:	ldr	r5, [sp, #76]	; 0x4c
   15194:	beq	15564 <argp_parse@@Base+0x2a50>
   15198:	mov	r1, #11
   1519c:	mov	r0, sl
   151a0:	bl	111c8 <strchr@plt>
   151a4:	cmp	r6, #0
   151a8:	bne	15480 <argp_parse@@Base+0x296c>
   151ac:	cmp	r0, #0
   151b0:	ldr	r3, [fp, #20]
   151b4:	beq	156bc <argp_parse@@Base+0x2ba8>
   151b8:	cmp	r3, #0
   151bc:	sub	r4, r0, sl
   151c0:	beq	15654 <argp_parse@@Base+0x2b40>
   151c4:	cmp	r4, #0
   151c8:	beq	155f4 <argp_parse@@Base+0x2ae0>
   151cc:	mov	r0, sl
   151d0:	mov	r1, r4
   151d4:	bl	1109c <strndup@plt>
   151d8:	mov	r3, #1
   151dc:	str	r3, [sp, #24]
   151e0:	mov	sl, r0
   151e4:	adds	r3, r0, #0
   151e8:	movne	r3, #1
   151ec:	str	r3, [sp, #20]
   151f0:	mov	r1, r9
   151f4:	mov	r0, fp
   151f8:	bl	13934 <argp_parse@@Base+0xe20>
   151fc:	ldr	r3, [fp, #20]
   15200:	str	r0, [sp, #12]
   15204:	ldr	r0, [pc, #1272]	; 15704 <argp_parse@@Base+0x2bf0>
   15208:	ldr	r2, [sp, #12]
   1520c:	mov	r1, sl
   15210:	blx	r3
   15214:	subs	r3, r0, #0
   15218:	beq	155a4 <argp_parse@@Base+0x2a90>
   1521c:	cmp	r7, #0
   15220:	beq	15244 <argp_parse@@Base+0x2730>
   15224:	ldr	r2, [r5, #28]
   15228:	ldr	r1, [r5, #32]
   1522c:	cmp	r2, r1
   15230:	bcs	155ac <argp_parse@@Base+0x2a98>
   15234:	add	r0, r2, #1
   15238:	mov	r1, #10
   1523c:	str	r0, [r5, #28]
   15240:	strb	r1, [r2]
   15244:	ldr	r2, [sp, #24]
   15248:	cmp	sl, r3
   1524c:	movne	r2, #0
   15250:	andeq	r2, r2, #1
   15254:	cmp	r2, #0
   15258:	beq	154c4 <argp_parse@@Base+0x29b0>
   1525c:	ldr	r0, [r5, #28]
   15260:	ldr	r1, [r5, #32]
   15264:	add	r2, r0, r4
   15268:	cmp	r1, r2
   1526c:	bcs	15524 <argp_parse@@Base+0x2a10>
   15270:	mov	r1, r4
   15274:	mov	r0, r5
   15278:	str	r3, [sp, #24]
   1527c:	bl	1b4b0 <argp_error@@Base+0x2008>
   15280:	ldr	r3, [sp, #24]
   15284:	cmp	r0, #0
   15288:	bne	15520 <argp_parse@@Base+0x2a0c>
   1528c:	ldr	r4, [r5, #28]
   15290:	ldr	r1, [r5, #24]
   15294:	ldr	r2, [r5, #16]
   15298:	sub	r4, r4, r1
   1529c:	cmp	r4, r2
   152a0:	bhi	15548 <argp_parse@@Base+0x2a34>
   152a4:	ldr	r2, [r5, #20]
   152a8:	ldr	r1, [r5, #4]
   152ac:	bic	r2, r2, r2, asr #31
   152b0:	cmp	r1, r2
   152b4:	bcs	152d8 <argp_parse@@Base+0x27c4>
   152b8:	ldr	r2, [r5, #28]
   152bc:	ldr	r1, [r5, #32]
   152c0:	cmp	r2, r1
   152c4:	bcs	155d0 <argp_parse@@Base+0x2abc>
   152c8:	add	r0, r2, #1
   152cc:	mov	r1, #10
   152d0:	str	r0, [r5, #28]
   152d4:	strb	r1, [r2]
   152d8:	cmp	sl, r3
   152dc:	moveq	r4, #1
   152e0:	beq	152f0 <argp_parse@@Base+0x27dc>
   152e4:	mov	r0, r3
   152e8:	bl	13a90 <argp_parse@@Base+0xf7c>
   152ec:	mov	r4, #1
   152f0:	ldr	r3, [sp, #20]
   152f4:	cmp	r3, #0
   152f8:	beq	15310 <argp_parse@@Base+0x27fc>
   152fc:	ldr	r3, [fp, #20]
   15300:	cmp	r3, #0
   15304:	beq	153f4 <argp_parse@@Base+0x28e0>
   15308:	mov	r0, sl
   1530c:	bl	13a90 <argp_parse@@Base+0xf7c>
   15310:	cmp	r6, #0
   15314:	beq	153f4 <argp_parse@@Base+0x28e0>
   15318:	ldr	r3, [fp, #20]
   1531c:	cmp	r3, #0
   15320:	beq	153f4 <argp_parse@@Base+0x28e0>
   15324:	ldr	r2, [sp, #12]
   15328:	mov	r1, #0
   1532c:	ldr	r0, [pc, #980]	; 15708 <argp_parse@@Base+0x2bf4>
   15330:	blx	r3
   15334:	subs	sl, r0, #0
   15338:	beq	153f4 <argp_parse@@Base+0x28e0>
   1533c:	orrs	r3, r7, r4
   15340:	beq	15364 <argp_parse@@Base+0x2850>
   15344:	ldr	r3, [r5, #28]
   15348:	ldr	r2, [r5, #32]
   1534c:	cmp	r3, r2
   15350:	bcs	1568c <argp_parse@@Base+0x2b78>
   15354:	add	r1, r3, #1
   15358:	mov	r2, #10
   1535c:	str	r1, [r5, #28]
   15360:	strb	r2, [r3]
   15364:	mov	r0, sl
   15368:	bl	111bc <strlen@plt>
   1536c:	subs	r4, r0, #0
   15370:	beq	1539c <argp_parse@@Base+0x2888>
   15374:	ldr	r0, [r5, #28]
   15378:	ldr	r2, [r5, #32]
   1537c:	add	r3, r0, r4
   15380:	cmp	r2, r3
   15384:	bcs	15604 <argp_parse@@Base+0x2af0>
   15388:	mov	r1, r4
   1538c:	mov	r0, r5
   15390:	bl	1b4b0 <argp_error@@Base+0x2008>
   15394:	cmp	r0, #0
   15398:	bne	15600 <argp_parse@@Base+0x2aec>
   1539c:	mov	r0, sl
   153a0:	bl	13a90 <argp_parse@@Base+0xf7c>
   153a4:	ldr	r3, [r5, #28]
   153a8:	ldr	r1, [r5, #24]
   153ac:	ldr	r2, [r5, #16]
   153b0:	sub	r3, r3, r1
   153b4:	cmp	r3, r2
   153b8:	bhi	15620 <argp_parse@@Base+0x2b0c>
   153bc:	ldr	r3, [r5, #20]
   153c0:	ldr	r2, [r5, #4]
   153c4:	bic	r3, r3, r3, asr #31
   153c8:	cmp	r2, r3
   153cc:	bcs	1555c <argp_parse@@Base+0x2a48>
   153d0:	ldr	r3, [r5, #28]
   153d4:	ldr	r2, [r5, #32]
   153d8:	cmp	r3, r2
   153dc:	bcs	15670 <argp_parse@@Base+0x2b5c>
   153e0:	mov	r4, #1
   153e4:	add	r2, r3, r4
   153e8:	str	r2, [r5, #28]
   153ec:	mov	r2, #10
   153f0:	strb	r2, [r3]
   153f4:	ldr	fp, [sp, #16]
   153f8:	cmp	fp, #0
   153fc:	beq	15474 <argp_parse@@Base+0x2960>
   15400:	ldr	r3, [fp]
   15404:	cmp	r3, #0
   15408:	beq	15474 <argp_parse@@Base+0x2960>
   1540c:	eor	r2, r4, #1
   15410:	and	r2, r2, #1
   15414:	clz	sl, r8
   15418:	lsr	sl, sl, #5
   1541c:	orrs	r2, sl, r2
   15420:	bne	1543c <argp_parse@@Base+0x2928>
   15424:	b	156a8 <argp_parse@@Base+0x2b94>
   15428:	cmp	r4, #0
   1542c:	movne	r2, sl
   15430:	orreq	r2, sl, #1
   15434:	cmp	r2, #0
   15438:	beq	15474 <argp_parse@@Base+0x2960>
   1543c:	orrs	r2, r7, r4
   15440:	mov	r0, r3
   15444:	str	r5, [sp, #4]
   15448:	movne	r3, #1
   1544c:	moveq	r3, #0
   15450:	str	r8, [sp]
   15454:	mov	r2, r6
   15458:	mov	r1, r9
   1545c:	bl	15164 <argp_parse@@Base+0x2650>
   15460:	ldr	r3, [fp, #16]
   15464:	add	fp, fp, #16
   15468:	cmp	r3, #0
   1546c:	orr	r4, r4, r0
   15470:	bne	15428 <argp_parse@@Base+0x2914>
   15474:	mov	r0, r4
   15478:	add	sp, sp, #36	; 0x24
   1547c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15480:	cmp	r0, #0
   15484:	addne	sl, r0, #1
   15488:	beq	1564c <argp_parse@@Base+0x2b38>
   1548c:	ldr	r3, [fp, #20]
   15490:	cmp	r3, #0
   15494:	beq	1562c <argp_parse@@Base+0x2b18>
   15498:	mov	r3, #0
   1549c:	mov	r1, r9
   154a0:	mov	r0, fp
   154a4:	mov	r4, r3
   154a8:	str	r3, [sp, #20]
   154ac:	bl	13934 <argp_parse@@Base+0xe20>
   154b0:	str	r4, [sp, #24]
   154b4:	ldr	r3, [fp, #20]
   154b8:	str	r0, [sp, #12]
   154bc:	ldr	r0, [pc, #584]	; 1570c <argp_parse@@Base+0x2bf8>
   154c0:	b	15208 <argp_parse@@Base+0x26f4>
   154c4:	mov	r0, r3
   154c8:	str	r3, [sp, #24]
   154cc:	bl	111bc <strlen@plt>
   154d0:	ldr	r3, [sp, #24]
   154d4:	subs	r4, r0, #0
   154d8:	beq	1528c <argp_parse@@Base+0x2778>
   154dc:	ldr	r0, [r5, #28]
   154e0:	ldr	r1, [r5, #32]
   154e4:	add	r2, r0, r4
   154e8:	cmp	r1, r2
   154ec:	bcs	15510 <argp_parse@@Base+0x29fc>
   154f0:	mov	r1, r4
   154f4:	mov	r0, r5
   154f8:	str	r3, [sp, #24]
   154fc:	bl	1b4b0 <argp_error@@Base+0x2008>
   15500:	ldr	r3, [sp, #24]
   15504:	cmp	r0, #0
   15508:	beq	1528c <argp_parse@@Base+0x2778>
   1550c:	ldr	r0, [r5, #28]
   15510:	mov	r2, r4
   15514:	mov	r1, r3
   15518:	str	r3, [sp, #24]
   1551c:	b	15530 <argp_parse@@Base+0x2a1c>
   15520:	ldr	r0, [r5, #28]
   15524:	mov	r2, r4
   15528:	mov	r1, sl
   1552c:	str	r3, [sp, #24]
   15530:	bl	110a8 <memcpy@plt>
   15534:	ldr	r2, [r5, #28]
   15538:	ldr	r3, [sp, #24]
   1553c:	add	r4, r2, r4
   15540:	str	r4, [r5, #28]
   15544:	b	15290 <argp_parse@@Base+0x277c>
   15548:	mov	r0, r5
   1554c:	str	r3, [sp, #24]
   15550:	bl	1af04 <argp_error@@Base+0x1a5c>
   15554:	ldr	r3, [sp, #24]
   15558:	b	152a4 <argp_parse@@Base+0x2790>
   1555c:	mov	r4, #1
   15560:	b	153f4 <argp_parse@@Base+0x28e0>
   15564:	ldr	r4, [r0, #20]
   15568:	cmp	r4, #0
   1556c:	beq	156b4 <argp_parse@@Base+0x2ba0>
   15570:	bl	13934 <argp_parse@@Base+0xe20>
   15574:	cmp	r6, #0
   15578:	ldr	r3, [fp, #20]
   1557c:	strne	sl, [sp, #20]
   15580:	strne	sl, [sp, #24]
   15584:	movne	r4, sl
   15588:	streq	r6, [sp, #20]
   1558c:	streq	r6, [sp, #24]
   15590:	moveq	r4, r6
   15594:	str	r0, [sp, #12]
   15598:	ldrne	r0, [pc, #364]	; 1570c <argp_parse@@Base+0x2bf8>
   1559c:	ldreq	r0, [pc, #352]	; 15704 <argp_parse@@Base+0x2bf0>
   155a0:	b	15208 <argp_parse@@Base+0x26f4>
   155a4:	mov	r4, r3
   155a8:	b	152f0 <argp_parse@@Base+0x27dc>
   155ac:	mov	r1, #1
   155b0:	mov	r0, r5
   155b4:	str	r3, [sp, #28]
   155b8:	bl	1b4b0 <argp_error@@Base+0x2008>
   155bc:	ldr	r3, [sp, #28]
   155c0:	cmp	r0, #0
   155c4:	beq	15244 <argp_parse@@Base+0x2730>
   155c8:	ldr	r2, [r5, #28]
   155cc:	b	15234 <argp_parse@@Base+0x2720>
   155d0:	mov	r1, #1
   155d4:	mov	r0, r5
   155d8:	str	r3, [sp, #24]
   155dc:	bl	1b4b0 <argp_error@@Base+0x2008>
   155e0:	ldr	r3, [sp, #24]
   155e4:	cmp	r0, #0
   155e8:	beq	152d8 <argp_parse@@Base+0x27c4>
   155ec:	ldr	r2, [r5, #28]
   155f0:	b	152c8 <argp_parse@@Base+0x27b4>
   155f4:	str	r4, [sp, #20]
   155f8:	str	r4, [sp, #24]
   155fc:	b	151f0 <argp_parse@@Base+0x26dc>
   15600:	ldr	r0, [r5, #28]
   15604:	mov	r2, r4
   15608:	mov	r1, sl
   1560c:	bl	110a8 <memcpy@plt>
   15610:	ldr	r3, [r5, #28]
   15614:	add	r4, r3, r4
   15618:	str	r4, [r5, #28]
   1561c:	b	1539c <argp_parse@@Base+0x2888>
   15620:	mov	r0, r5
   15624:	bl	1af04 <argp_error@@Base+0x1a5c>
   15628:	b	153bc <argp_parse@@Base+0x28a8>
   1562c:	cmp	sl, #0
   15630:	beq	156b0 <argp_parse@@Base+0x2b9c>
   15634:	str	r3, [sp, #20]
   15638:	str	r3, [sp, #24]
   1563c:	mov	r4, r3
   15640:	str	r3, [sp, #12]
   15644:	mov	r3, sl
   15648:	b	1521c <argp_parse@@Base+0x2708>
   1564c:	mov	sl, r0
   15650:	b	1548c <argp_parse@@Base+0x2978>
   15654:	adds	r3, r4, #0
   15658:	movne	r3, #1
   1565c:	str	r3, [sp, #24]
   15660:	str	r3, [sp, #20]
   15664:	str	r6, [sp, #12]
   15668:	mov	r3, sl
   1566c:	b	1521c <argp_parse@@Base+0x2708>
   15670:	mov	r1, #1
   15674:	mov	r0, r5
   15678:	bl	1b4b0 <argp_error@@Base+0x2008>
   1567c:	cmp	r0, #0
   15680:	beq	1555c <argp_parse@@Base+0x2a48>
   15684:	ldr	r3, [r5, #28]
   15688:	b	153e0 <argp_parse@@Base+0x28cc>
   1568c:	mov	r1, #1
   15690:	mov	r0, r5
   15694:	bl	1b4b0 <argp_error@@Base+0x2008>
   15698:	cmp	r0, #0
   1569c:	beq	15364 <argp_parse@@Base+0x2850>
   156a0:	ldr	r3, [r5, #28]
   156a4:	b	15354 <argp_parse@@Base+0x2840>
   156a8:	mov	r4, #1
   156ac:	b	15474 <argp_parse@@Base+0x2960>
   156b0:	mov	r4, sl
   156b4:	str	r4, [sp, #12]
   156b8:	b	15310 <argp_parse@@Base+0x27fc>
   156bc:	cmp	r3, #0
   156c0:	beq	156ec <argp_parse@@Base+0x2bd8>
   156c4:	mov	r1, r9
   156c8:	mov	r0, fp
   156cc:	bl	13934 <argp_parse@@Base+0xe20>
   156d0:	mov	r4, r6
   156d4:	ldr	r3, [fp, #20]
   156d8:	str	r6, [sp, #20]
   156dc:	str	r6, [sp, #24]
   156e0:	str	r0, [sp, #12]
   156e4:	ldr	r0, [pc, #24]	; 15704 <argp_parse@@Base+0x2bf0>
   156e8:	b	15208 <argp_parse@@Base+0x26f4>
   156ec:	mov	r3, sl
   156f0:	str	r6, [sp, #20]
   156f4:	str	r6, [sp, #24]
   156f8:	mov	r4, r6
   156fc:	str	r6, [sp, #12]
   15700:	b	1521c <argp_parse@@Base+0x2708>
   15704:	andeq	r0, r0, #1
   15708:	andeq	r0, r0, #4
   1570c:	andeq	r0, r0, #2
   15710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15714:	sub	sp, sp, #52	; 0x34
   15718:	mov	r3, r0
   1571c:	str	r0, [sp, #20]
   15720:	mov	r0, #16
   15724:	ldr	r6, [r3, #16]
   15728:	ldr	r4, [r3]
   1572c:	str	r1, [sp, #28]
   15730:	bl	150dc <argp_parse@@Base+0x25c8>
   15734:	subs	r3, r0, #0
   15738:	str	r3, [sp, #16]
   1573c:	beq	15d2c <argp_parse@@Base+0x3218>
   15740:	mov	r2, r3
   15744:	cmp	r4, #0
   15748:	mov	r3, #0
   1574c:	str	r3, [r2, #4]
   15750:	str	r3, [r2, #12]
   15754:	beq	15968 <argp_parse@@Base+0x2e54>
   15758:	ldr	fp, [r4, #12]
   1575c:	ands	fp, fp, #4
   15760:	bne	15d40 <argp_parse@@Base+0x322c>
   15764:	add	r5, r4, #24
   15768:	mov	r7, r4
   1576c:	mov	r9, fp
   15770:	mov	sl, fp
   15774:	mov	r4, r2
   15778:	b	157bc <argp_parse@@Base+0x2ca8>
   1577c:	ldr	r3, [r5, #-12]
   15780:	tst	r3, #4
   15784:	addeq	r9, r9, #1
   15788:	streq	r9, [r4, #4]
   1578c:	tst	r3, #8
   15790:	bne	157b8 <argp_parse@@Base+0x2ca4>
   15794:	sub	r3, r8, #1
   15798:	cmp	r3, #254	; 0xfe
   1579c:	bhi	157b8 <argp_parse@@Base+0x2ca4>
   157a0:	bl	1118c <__ctype_b_loc@plt>
   157a4:	lsl	r8, r8, #1
   157a8:	ldr	r3, [r0]
   157ac:	ldrh	r3, [r3, r8]
   157b0:	tst	r3, #16384	; 0x4000
   157b4:	addne	sl, sl, #1
   157b8:	add	r5, r5, #24
   157bc:	ldr	r8, [r5, #-20]	; 0xffffffec
   157c0:	cmp	r8, #0
   157c4:	bne	1577c <argp_parse@@Base+0x2c68>
   157c8:	ldr	r3, [r5, #-24]	; 0xffffffe8
   157cc:	cmp	r3, #0
   157d0:	bne	1577c <argp_parse@@Base+0x2c68>
   157d4:	ldr	r3, [r5, #-8]
   157d8:	cmp	r3, #0
   157dc:	bne	1577c <argp_parse@@Base+0x2c68>
   157e0:	ldr	r3, [r5, #-4]
   157e4:	cmp	r3, #0
   157e8:	bne	1577c <argp_parse@@Base+0x2c68>
   157ec:	rsb	r9, r9, r9, lsl #3
   157f0:	mov	r4, r7
   157f4:	lsl	r0, r9, #2
   157f8:	mov	r7, r3
   157fc:	bl	150dc <argp_parse@@Base+0x25c8>
   15800:	ldr	r5, [sp, #16]
   15804:	str	r0, [r5]
   15808:	add	r0, sl, #1
   1580c:	bl	150dc <argp_parse@@Base+0x25c8>
   15810:	ldr	r8, [r5]
   15814:	mov	r3, r5
   15818:	cmp	r0, #0
   1581c:	cmpne	r8, #0
   15820:	mov	sl, r0
   15824:	str	r0, [r3, #8]
   15828:	beq	15de8 <argp_parse@@Base+0x32d4>
   1582c:	ldr	r2, [sp, #16]
   15830:	ldr	r3, [pc, #1476]	; 15dfc <argp_parse@@Base+0x32e8>
   15834:	ldr	r2, [r2, #4]
   15838:	cmp	r2, r3
   1583c:	bhi	15dd4 <argp_parse@@Base+0x32c0>
   15840:	add	r8, r8, #28
   15844:	mov	r9, sl
   15848:	mov	r2, fp
   1584c:	ldr	r3, [r4, #4]
   15850:	mov	fp, sl
   15854:	mov	sl, r8
   15858:	ldr	r8, [sp, #28]
   1585c:	str	r6, [sp, #4]
   15860:	cmp	r3, #0
   15864:	bne	15874 <argp_parse@@Base+0x2d60>
   15868:	ldr	r0, [r4]
   1586c:	cmp	r0, #0
   15870:	beq	15d8c <argp_parse@@Base+0x3278>
   15874:	str	r7, [sl, #-24]	; 0xffffffe8
   15878:	ldr	r5, [r4, #20]
   1587c:	str	r4, [sl, #-28]	; 0xffffffe4
   15880:	cmp	r5, #0
   15884:	str	fp, [sl, #-20]	; 0xffffffec
   15888:	bne	158a0 <argp_parse@@Base+0x2d8c>
   1588c:	ldr	r0, [r4]
   15890:	cmp	r0, #0
   15894:	cmpeq	r3, #0
   15898:	movne	r5, r2
   1589c:	beq	15db0 <argp_parse@@Base+0x329c>
   158a0:	ldr	r2, [sp, #20]
   158a4:	mov	r3, r7
   158a8:	str	r5, [sl, #-16]
   158ac:	str	r8, [sl, #-12]
   158b0:	str	r2, [sl, #-8]
   158b4:	add	r3, r3, #1
   158b8:	str	r3, [sl, #-24]	; 0xffffffe8
   158bc:	ldr	r3, [r4, #12]
   158c0:	tst	r3, #8
   158c4:	bne	15930 <argp_parse@@Base+0x2e1c>
   158c8:	ldr	r6, [r4, #4]
   158cc:	sub	r2, r6, #1
   158d0:	cmp	r2, #254	; 0xfe
   158d4:	bhi	15930 <argp_parse@@Base+0x2e1c>
   158d8:	bl	1118c <__ctype_b_loc@plt>
   158dc:	lsl	r2, r6, #1
   158e0:	ldr	r0, [r0]
   158e4:	ldrh	r2, [r0, r2]
   158e8:	tst	r2, #16384	; 0x4000
   158ec:	beq	15930 <argp_parse@@Base+0x2e1c>
   158f0:	cmp	r9, fp
   158f4:	uxtb	r0, r6
   158f8:	bcs	15928 <argp_parse@@Base+0x2e14>
   158fc:	ldrb	r3, [r9]
   15900:	cmp	r3, r0
   15904:	movne	r3, r9
   15908:	subne	ip, fp, #1
   1590c:	bne	15920 <argp_parse@@Base+0x2e0c>
   15910:	b	15930 <argp_parse@@Base+0x2e1c>
   15914:	ldrb	r2, [r3, #1]!
   15918:	cmp	r2, r0
   1591c:	beq	15930 <argp_parse@@Base+0x2e1c>
   15920:	cmp	ip, r3
   15924:	bne	15914 <argp_parse@@Base+0x2e00>
   15928:	strb	r0, [fp]
   1592c:	add	fp, fp, #1
   15930:	add	r4, r4, #24
   15934:	ldr	r3, [r4, #4]
   15938:	cmp	r3, #0
   1593c:	bne	1594c <argp_parse@@Base+0x2e38>
   15940:	ldr	r2, [r4]
   15944:	cmp	r2, #0
   15948:	beq	15d68 <argp_parse@@Base+0x3254>
   1594c:	ldr	r2, [r4, #12]
   15950:	tst	r2, #4
   15954:	beq	15d80 <argp_parse@@Base+0x326c>
   15958:	ldr	r3, [sl, #-24]	; 0xffffffe8
   1595c:	b	158b4 <argp_parse@@Base+0x2da0>
   15960:	ldr	r6, [sp, #4]
   15964:	strb	r3, [fp]
   15968:	cmp	r6, #0
   1596c:	beq	15aa8 <argp_parse@@Base+0x2f94>
   15970:	ldr	r0, [r6]
   15974:	cmp	r0, #0
   15978:	beq	15aa8 <argp_parse@@Base+0x2f94>
   1597c:	add	r3, r6, #16
   15980:	str	r3, [sp, #8]
   15984:	ldr	r3, [sp, #16]
   15988:	add	r3, r3, #12
   1598c:	str	r3, [sp, #44]	; 0x2c
   15990:	ldr	r3, [sp, #8]
   15994:	ldr	r5, [r3, #-4]
   15998:	ldr	r6, [r3, #-8]
   1599c:	cmp	r5, #0
   159a0:	bne	159ac <argp_parse@@Base+0x2e98>
   159a4:	cmp	r6, #0
   159a8:	beq	15d00 <argp_parse@@Base+0x31ec>
   159ac:	ldr	r3, [sp, #20]
   159b0:	mov	r0, #28
   159b4:	ldr	r2, [r3, #16]
   159b8:	ldr	r3, [sp, #8]
   159bc:	sub	r3, r3, #16
   159c0:	sub	r3, r3, r2
   159c4:	asr	r4, r3, #4
   159c8:	bl	150dc <argp_parse@@Base+0x25c8>
   159cc:	subs	r1, r0, #0
   159d0:	beq	15a14 <argp_parse@@Base+0x2f00>
   159d4:	ldr	r3, [sp, #28]
   159d8:	ldr	r0, [sp, #16]
   159dc:	cmp	r3, #0
   159e0:	ldr	r2, [sp, #20]
   159e4:	str	r3, [r1, #12]
   159e8:	ldrne	r3, [r3, #20]
   159ec:	str	r2, [r1, #16]
   159f0:	ldr	r2, [r0, #12]
   159f4:	addne	r3, r3, #1
   159f8:	moveq	r3, #0
   159fc:	str	r5, [r1, #8]
   15a00:	str	r6, [r1]
   15a04:	str	r4, [r1, #4]
   15a08:	str	r3, [r1, #20]
   15a0c:	str	r2, [r1, #24]
   15a10:	str	r1, [r0, #12]
   15a14:	ldr	r3, [sp, #8]
   15a18:	ldr	r0, [r3, #-16]
   15a1c:	bl	15710 <argp_parse@@Base+0x2bfc>
   15a20:	ldr	r3, [sp, #16]
   15a24:	ldr	r2, [r3, #12]
   15a28:	cmp	r2, #0
   15a2c:	mov	sl, r0
   15a30:	bne	15a3c <argp_parse@@Base+0x2f28>
   15a34:	b	15d08 <argp_parse@@Base+0x31f4>
   15a38:	mov	r2, r3
   15a3c:	ldr	r3, [r2, #24]
   15a40:	cmp	r3, #0
   15a44:	bne	15a38 <argp_parse@@Base+0x2f24>
   15a48:	add	r2, r2, #24
   15a4c:	ldr	r3, [sl, #4]
   15a50:	ldr	r1, [sl, #12]
   15a54:	cmp	r3, #0
   15a58:	str	r1, [r2]
   15a5c:	mov	r2, #0
   15a60:	str	r2, [sl, #12]
   15a64:	beq	15a8c <argp_parse@@Base+0x2f78>
   15a68:	ldr	ip, [sp, #16]
   15a6c:	ldr	r2, [ip, #4]
   15a70:	cmp	r2, #0
   15a74:	bne	15ab4 <argp_parse@@Base+0x2fa0>
   15a78:	ldr	r0, [sl]
   15a7c:	ldr	r1, [sl, #8]
   15a80:	stm	ip, {r0, r3}
   15a84:	str	r1, [ip, #8]
   15a88:	str	r2, [sl, #4]
   15a8c:	mov	r0, sl
   15a90:	bl	13a90 <argp_parse@@Base+0xf7c>
   15a94:	ldr	r3, [sp, #8]
   15a98:	ldr	r0, [r3], #16
   15a9c:	cmp	r0, #0
   15aa0:	str	r3, [sp, #8]
   15aa4:	bne	15994 <argp_parse@@Base+0x2e80>
   15aa8:	ldr	r0, [sp, #16]
   15aac:	add	sp, sp, #52	; 0x34
   15ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ab4:	add	r3, r3, r2
   15ab8:	str	r3, [sp, #32]
   15abc:	rsb	r0, r3, r3, lsl #3
   15ac0:	lsl	r0, r0, #2
   15ac4:	bl	150dc <argp_parse@@Base+0x25c8>
   15ac8:	ldr	r3, [sp, #16]
   15acc:	mov	r4, r0
   15ad0:	str	r0, [sp, #24]
   15ad4:	ldr	r0, [r3, #8]
   15ad8:	bl	111bc <strlen@plt>
   15adc:	mov	r5, r0
   15ae0:	ldr	r0, [sl, #8]
   15ae4:	bl	111bc <strlen@plt>
   15ae8:	add	r0, r5, r0
   15aec:	add	r0, r0, #1
   15af0:	bl	150dc <argp_parse@@Base+0x25c8>
   15af4:	cmp	r4, #0
   15af8:	cmpne	r0, #0
   15afc:	mov	r7, r0
   15b00:	beq	15d18 <argp_parse@@Base+0x3204>
   15b04:	ldr	r3, [sp, #32]
   15b08:	ldr	r2, [pc, #748]	; 15dfc <argp_parse@@Base+0x32e8>
   15b0c:	cmp	r3, r2
   15b10:	bhi	15d54 <argp_parse@@Base+0x3240>
   15b14:	ldr	r6, [sp, #16]
   15b18:	ldr	r8, [sp, #24]
   15b1c:	ldm	r6, {r3, r4}
   15b20:	mov	r0, r8
   15b24:	rsb	r9, r4, r4, lsl #3
   15b28:	mov	r1, r3
   15b2c:	lsl	r9, r9, #2
   15b30:	mov	r2, r9
   15b34:	str	r3, [sp, #36]	; 0x24
   15b38:	bl	11180 <mempcpy@plt>
   15b3c:	ldr	r3, [sl, #4]
   15b40:	ldr	r1, [sl]
   15b44:	str	r3, [sp, #4]
   15b48:	rsb	r2, r3, r3, lsl #3
   15b4c:	lsl	r2, r2, #2
   15b50:	bl	110a8 <memcpy@plt>
   15b54:	ldr	r6, [r6, #8]
   15b58:	mov	r2, r5
   15b5c:	mov	r1, r6
   15b60:	mov	r0, r7
   15b64:	bl	110a8 <memcpy@plt>
   15b68:	cmp	r4, #0
   15b6c:	beq	15d10 <argp_parse@@Base+0x31fc>
   15b70:	mov	r2, r8
   15b74:	ldr	r3, [r2, #8]
   15b78:	subs	r4, r4, #1
   15b7c:	sub	r3, r3, r6
   15b80:	add	r3, r7, r3
   15b84:	str	r3, [r2, #8]
   15b88:	add	r2, r2, #28
   15b8c:	bne	15b74 <argp_parse@@Base+0x3060>
   15b90:	ldr	r3, [sp, #24]
   15b94:	add	r1, r3, r9
   15b98:	ldr	r3, [sp, #4]
   15b9c:	ldr	r9, [sl, #8]
   15ba0:	cmp	r3, #0
   15ba4:	add	r3, r7, r5
   15ba8:	str	r3, [sp, #12]
   15bac:	beq	15c98 <argp_parse@@Base+0x3184>
   15bb0:	add	fp, r1, #28
   15bb4:	sub	r8, r3, #1
   15bb8:	str	sl, [sp, #40]	; 0x28
   15bbc:	mov	r6, r3
   15bc0:	mov	sl, r9
   15bc4:	mov	r9, fp
   15bc8:	mov	fp, r8
   15bcc:	ldr	r5, [r9, #-24]	; 0xffffffe8
   15bd0:	str	r6, [r9, #-20]	; 0xffffffec
   15bd4:	cmp	r5, #0
   15bd8:	ldr	r4, [r9, #-28]	; 0xffffffe4
   15bdc:	bne	15bf0 <argp_parse@@Base+0x30dc>
   15be0:	b	15c7c <argp_parse@@Base+0x3168>
   15be4:	subs	r5, r5, #1
   15be8:	add	r4, r4, #24
   15bec:	beq	15c7c <argp_parse@@Base+0x3168>
   15bf0:	ldr	r3, [r4, #12]
   15bf4:	tst	r3, #8
   15bf8:	bne	15be4 <argp_parse@@Base+0x30d0>
   15bfc:	ldr	r8, [r4, #4]
   15c00:	sub	r3, r8, #1
   15c04:	cmp	r3, #254	; 0xfe
   15c08:	bhi	15be4 <argp_parse@@Base+0x30d0>
   15c0c:	bl	1118c <__ctype_b_loc@plt>
   15c10:	lsl	r3, r8, #1
   15c14:	ldr	r2, [r0]
   15c18:	ldrh	r3, [r2, r3]
   15c1c:	tst	r3, #16384	; 0x4000
   15c20:	beq	15be4 <argp_parse@@Base+0x30d0>
   15c24:	ldrb	r1, [sl]
   15c28:	cmp	r1, r8
   15c2c:	bne	15be4 <argp_parse@@Base+0x30d0>
   15c30:	ldr	r3, [sp, #12]
   15c34:	cmp	r7, r3
   15c38:	bcs	15c64 <argp_parse@@Base+0x3150>
   15c3c:	ldrb	r3, [r7]
   15c40:	cmp	r3, r1
   15c44:	movne	r3, r7
   15c48:	bne	15c5c <argp_parse@@Base+0x3148>
   15c4c:	b	15c6c <argp_parse@@Base+0x3158>
   15c50:	ldrb	r2, [r3, #1]!
   15c54:	cmp	r2, r1
   15c58:	beq	15c6c <argp_parse@@Base+0x3158>
   15c5c:	cmp	fp, r3
   15c60:	bne	15c50 <argp_parse@@Base+0x313c>
   15c64:	strb	r1, [r6]
   15c68:	add	r6, r6, #1
   15c6c:	subs	r5, r5, #1
   15c70:	add	sl, sl, #1
   15c74:	add	r4, r4, #24
   15c78:	bne	15bf0 <argp_parse@@Base+0x30dc>
   15c7c:	ldr	r3, [sp, #4]
   15c80:	add	r9, r9, #28
   15c84:	subs	r3, r3, #1
   15c88:	str	r3, [sp, #4]
   15c8c:	bne	15bcc <argp_parse@@Base+0x30b8>
   15c90:	ldr	sl, [sp, #40]	; 0x28
   15c94:	mov	r3, r6
   15c98:	mov	r2, #0
   15c9c:	strb	r2, [r3]
   15ca0:	ldr	r0, [sp, #36]	; 0x24
   15ca4:	bl	13a90 <argp_parse@@Base+0xf7c>
   15ca8:	ldr	r4, [sp, #16]
   15cac:	ldr	r0, [r4, #8]
   15cb0:	bl	13a90 <argp_parse@@Base+0xf7c>
   15cb4:	ldr	r2, [sp, #24]
   15cb8:	ldr	r0, [sl, #12]
   15cbc:	str	r2, [r4]
   15cc0:	ldr	r2, [sp, #32]
   15cc4:	cmp	r0, #0
   15cc8:	stmib	r4, {r2, r7}
   15ccc:	beq	15ce0 <argp_parse@@Base+0x31cc>
   15cd0:	ldr	r4, [r0, #24]
   15cd4:	bl	13a90 <argp_parse@@Base+0xf7c>
   15cd8:	subs	r0, r4, #0
   15cdc:	bne	15cd0 <argp_parse@@Base+0x31bc>
   15ce0:	ldr	r3, [sl, #4]
   15ce4:	cmp	r3, #0
   15ce8:	beq	15a8c <argp_parse@@Base+0x2f78>
   15cec:	ldr	r0, [sl]
   15cf0:	bl	13a90 <argp_parse@@Base+0xf7c>
   15cf4:	ldr	r0, [sl, #8]
   15cf8:	bl	13a90 <argp_parse@@Base+0xf7c>
   15cfc:	b	15a8c <argp_parse@@Base+0x2f78>
   15d00:	ldr	r1, [sp, #28]
   15d04:	b	15a1c <argp_parse@@Base+0x2f08>
   15d08:	ldr	r2, [sp, #44]	; 0x2c
   15d0c:	b	15a4c <argp_parse@@Base+0x2f38>
   15d10:	ldr	r1, [sp, #24]
   15d14:	b	15b98 <argp_parse@@Base+0x3084>
   15d18:	ldr	r3, [pc, #224]	; 15e00 <argp_parse@@Base+0x32ec>
   15d1c:	ldr	r2, [pc, #224]	; 15e04 <argp_parse@@Base+0x32f0>
   15d20:	ldr	r1, [pc, #224]	; 15e08 <argp_parse@@Base+0x32f4>
   15d24:	ldr	r0, [pc, #224]	; 15e0c <argp_parse@@Base+0x32f8>
   15d28:	bl	112f4 <__assert_fail@plt>
   15d2c:	ldr	r3, [pc, #220]	; 15e10 <argp_parse@@Base+0x32fc>
   15d30:	ldr	r2, [pc, #220]	; 15e14 <argp_parse@@Base+0x3300>
   15d34:	ldr	r1, [pc, #204]	; 15e08 <argp_parse@@Base+0x32f4>
   15d38:	ldr	r0, [pc, #216]	; 15e18 <argp_parse@@Base+0x3304>
   15d3c:	bl	112f4 <__assert_fail@plt>
   15d40:	ldr	r3, [pc, #200]	; 15e10 <argp_parse@@Base+0x32fc>
   15d44:	mov	r2, #460	; 0x1cc
   15d48:	ldr	r1, [pc, #184]	; 15e08 <argp_parse@@Base+0x32f4>
   15d4c:	ldr	r0, [pc, #200]	; 15e1c <argp_parse@@Base+0x3308>
   15d50:	bl	112f4 <__assert_fail@plt>
   15d54:	ldr	r3, [pc, #164]	; 15e00 <argp_parse@@Base+0x32ec>
   15d58:	mov	r2, #972	; 0x3cc
   15d5c:	ldr	r1, [pc, #164]	; 15e08 <argp_parse@@Base+0x32f4>
   15d60:	ldr	r0, [pc, #184]	; 15e20 <argp_parse@@Base+0x330c>
   15d64:	bl	112f4 <__assert_fail@plt>
   15d68:	ldr	r2, [r4, #16]
   15d6c:	cmp	r2, #0
   15d70:	bne	1594c <argp_parse@@Base+0x2e38>
   15d74:	ldr	r2, [r4, #20]
   15d78:	cmp	r2, #0
   15d7c:	bne	1594c <argp_parse@@Base+0x2e38>
   15d80:	add	sl, sl, #28
   15d84:	mov	r2, r5
   15d88:	b	15860 <argp_parse@@Base+0x2d4c>
   15d8c:	ldr	r0, [r4, #16]
   15d90:	cmp	r0, #0
   15d94:	beq	15db8 <argp_parse@@Base+0x32a4>
   15d98:	str	r3, [sl, #-24]	; 0xffffffe8
   15d9c:	ldr	r5, [r4, #20]
   15da0:	str	r4, [sl, #-28]	; 0xffffffe4
   15da4:	cmp	r5, #0
   15da8:	str	fp, [sl, #-20]	; 0xffffffec
   15dac:	bne	158a0 <argp_parse@@Base+0x2d8c>
   15db0:	add	r5, r2, #1
   15db4:	b	158a0 <argp_parse@@Base+0x2d8c>
   15db8:	ldr	r5, [r4, #20]
   15dbc:	cmp	r5, #0
   15dc0:	beq	15960 <argp_parse@@Base+0x2e4c>
   15dc4:	str	r4, [sl, #-28]	; 0xffffffe4
   15dc8:	str	r3, [sl, #-24]	; 0xffffffe8
   15dcc:	str	fp, [sl, #-20]	; 0xffffffec
   15dd0:	b	158a0 <argp_parse@@Base+0x2d8c>
   15dd4:	ldr	r3, [pc, #52]	; 15e10 <argp_parse@@Base+0x32fc>
   15dd8:	mov	r2, #476	; 0x1dc
   15ddc:	ldr	r1, [pc, #36]	; 15e08 <argp_parse@@Base+0x32f4>
   15de0:	ldr	r0, [pc, #60]	; 15e24 <argp_parse@@Base+0x3310>
   15de4:	bl	112f4 <__assert_fail@plt>
   15de8:	ldr	r3, [pc, #32]	; 15e10 <argp_parse@@Base+0x32fc>
   15dec:	ldr	r2, [pc, #52]	; 15e28 <argp_parse@@Base+0x3314>
   15df0:	ldr	r1, [pc, #16]	; 15e08 <argp_parse@@Base+0x32f4>
   15df4:	ldr	r0, [pc, #48]	; 15e2c <argp_parse@@Base+0x3318>
   15df8:	bl	112f4 <__assert_fail@plt>
   15dfc:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15e00:	andeq	ip, r1, r4, ror #14
   15e04:	andeq	r0, r0, sl, asr #7
   15e08:	andeq	ip, r1, r0, lsl #16
   15e0c:	andeq	ip, r1, r0, lsl #17
   15e10:	andeq	ip, r1, r8, asr r7
   15e14:	andeq	r0, r0, r2, asr #3
   15e18:	andeq	ip, r1, ip, lsl #16
   15e1c:	andeq	ip, r1, r0, lsl r8
   15e20:	muleq	r1, ip, r8
   15e24:	andeq	ip, r1, r4, asr #16
   15e28:	ldrdeq	r0, [r0], -sl
   15e2c:	andeq	ip, r1, r0, lsr #16
   15e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e34:	mov	r7, r2
   15e38:	sub	sp, sp, #28
   15e3c:	mov	r4, r3
   15e40:	ldr	r3, [r7]
   15e44:	ldr	r2, [r0, #20]
   15e48:	str	r3, [sp, #20]
   15e4c:	ldr	r3, [r0, #16]
   15e50:	cmp	r2, #0
   15e54:	str	r3, [sp, #12]
   15e58:	ldr	r3, [r0, #8]
   15e5c:	mov	r8, r1
   15e60:	mov	r9, r3
   15e64:	str	r3, [sp, #16]
   15e68:	ldr	r5, [sp, #64]	; 0x40
   15e6c:	beq	160c4 <argp_parse@@Base+0x35b0>
   15e70:	mov	r6, r0
   15e74:	bl	13934 <argp_parse@@Base+0xe20>
   15e78:	ldr	r3, [r6, #20]
   15e7c:	mov	r1, r9
   15e80:	mov	r2, r0
   15e84:	ldr	r0, [pc, #640]	; 1610c <argp_parse@@Base+0x35f8>
   15e88:	blx	r3
   15e8c:	mov	r3, r0
   15e90:	str	r0, [sp, #8]
   15e94:	cmp	r3, #0
   15e98:	beq	16064 <argp_parse@@Base+0x3550>
   15e9c:	mov	r1, #10
   15ea0:	mov	r0, r3
   15ea4:	bl	11078 <strchrnul@plt>
   15ea8:	ldrb	sl, [r0]
   15eac:	mov	r6, r0
   15eb0:	cmp	sl, #0
   15eb4:	bne	15ffc <argp_parse@@Base+0x34e8>
   15eb8:	ldr	fp, [sp, #8]
   15ebc:	ldr	r3, [r5, #28]
   15ec0:	ldr	r1, [r5, #24]
   15ec4:	ldr	r0, [r5, #16]
   15ec8:	sub	r1, r3, r1
   15ecc:	cmp	r1, r0
   15ed0:	add	r9, r6, #1
   15ed4:	mov	r1, r3
   15ed8:	sub	r9, r9, fp
   15edc:	bhi	16094 <argp_parse@@Base+0x3580>
   15ee0:	ldr	r0, [r5, #20]
   15ee4:	ldr	ip, [r5, #8]
   15ee8:	cmp	r0, #0
   15eec:	addge	r9, r9, r0
   15ef0:	cmp	r9, ip
   15ef4:	bcc	16044 <argp_parse@@Base+0x3530>
   15ef8:	ldr	r1, [r5, #32]
   15efc:	cmp	r1, r3
   15f00:	bls	160cc <argp_parse@@Base+0x35b8>
   15f04:	add	r0, r3, #1
   15f08:	mov	r1, #10
   15f0c:	str	r0, [r5, #28]
   15f10:	strb	r1, [r3]
   15f14:	ldr	r0, [r5, #28]
   15f18:	sub	r9, r6, fp
   15f1c:	ldr	r1, [r5, #32]
   15f20:	add	r3, r0, r9
   15f24:	cmp	r1, r3
   15f28:	bcs	15f44 <argp_parse@@Base+0x3430>
   15f2c:	mov	r1, r9
   15f30:	mov	r0, r5
   15f34:	bl	1b4b0 <argp_error@@Base+0x2008>
   15f38:	cmp	r0, #0
   15f3c:	beq	15f5c <argp_parse@@Base+0x3448>
   15f40:	ldr	r0, [r5, #28]
   15f44:	mov	r2, r9
   15f48:	mov	r1, fp
   15f4c:	bl	110a8 <memcpy@plt>
   15f50:	ldr	r3, [r5, #28]
   15f54:	add	r9, r3, r9
   15f58:	str	r9, [r5, #28]
   15f5c:	ldr	r3, [sp, #16]
   15f60:	ldr	r2, [sp, #8]
   15f64:	cmp	r3, r2
   15f68:	beq	15f74 <argp_parse@@Base+0x3460>
   15f6c:	mov	r0, r2
   15f70:	bl	13a90 <argp_parse@@Base+0xf7c>
   15f74:	ldr	r3, [sp, #12]
   15f78:	cmp	r3, #0
   15f7c:	beq	15fc0 <argp_parse@@Base+0x34ac>
   15f80:	ldr	r2, [r3]
   15f84:	cmp	r2, #0
   15f88:	beq	15fc0 <argp_parse@@Base+0x34ac>
   15f8c:	ldr	r9, [sp, #12]
   15f90:	mov	r3, r4
   15f94:	mov	r0, r2
   15f98:	str	r5, [sp]
   15f9c:	mov	r2, r7
   15fa0:	mov	r1, r8
   15fa4:	bl	15e30 <argp_parse@@Base+0x331c>
   15fa8:	ldr	r2, [r9, #16]!
   15fac:	cmp	r2, #0
   15fb0:	clz	r3, r0
   15fb4:	lsr	r3, r3, #5
   15fb8:	bne	15f94 <argp_parse@@Base+0x3480>
   15fbc:	mov	r4, r3
   15fc0:	cmp	r4, #0
   15fc4:	moveq	sl, #0
   15fc8:	andne	sl, sl, #1
   15fcc:	cmp	sl, #0
   15fd0:	beq	16084 <argp_parse@@Base+0x3570>
   15fd4:	ldrb	r0, [r6]
   15fd8:	cmp	r0, #0
   15fdc:	bne	160a8 <argp_parse@@Base+0x3594>
   15fe0:	ldr	r3, [sp, #20]
   15fe4:	ldrb	r4, [r3]
   15fe8:	cmp	r4, #0
   15fec:	moveq	r0, r4
   15ff0:	strbne	r0, [r3]
   15ff4:	add	sp, sp, #28
   15ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ffc:	ldr	r3, [sp, #20]
   16000:	ldrb	r9, [r3]
   16004:	cmp	r9, #0
   16008:	beq	16104 <argp_parse@@Base+0x35f0>
   1600c:	mov	sl, #0
   16010:	add	fp, r0, #1
   16014:	add	sl, sl, #1
   16018:	mov	r0, fp
   1601c:	mov	r1, #10
   16020:	bl	11078 <strchrnul@plt>
   16024:	cmp	sl, r9
   16028:	bne	16010 <argp_parse@@Base+0x34fc>
   1602c:	mov	r6, r0
   16030:	ldr	r3, [r7]
   16034:	mov	sl, #1
   16038:	add	r3, r3, sl
   1603c:	str	r3, [r7]
   16040:	b	15ebc <argp_parse@@Base+0x33a8>
   16044:	ldr	r0, [r5, #32]
   16048:	cmp	r0, r3
   1604c:	bls	160e8 <argp_parse@@Base+0x35d4>
   16050:	add	r0, r1, #1
   16054:	mov	r3, #32
   16058:	str	r0, [r5, #28]
   1605c:	strb	r3, [r1]
   16060:	b	15f14 <argp_parse@@Base+0x3400>
   16064:	ldr	r3, [sp, #12]
   16068:	cmp	r3, #0
   1606c:	beq	16084 <argp_parse@@Base+0x3570>
   16070:	ldr	r2, [r3]
   16074:	cmp	r2, #0
   16078:	ldrne	r6, [sp, #8]
   1607c:	movne	sl, r6
   16080:	bne	15f8c <argp_parse@@Base+0x3478>
   16084:	clz	r0, r4
   16088:	lsr	r0, r0, #5
   1608c:	add	sp, sp, #28
   16090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16094:	mov	r0, r5
   16098:	bl	1af04 <argp_error@@Base+0x1a5c>
   1609c:	ldr	r3, [r5, #28]
   160a0:	mov	r1, r3
   160a4:	b	15ee0 <argp_parse@@Base+0x33cc>
   160a8:	ldr	r2, [sp, #20]
   160ac:	mov	r0, #1
   160b0:	ldrb	r3, [r2]
   160b4:	add	r3, r3, r0
   160b8:	strb	r3, [r2]
   160bc:	add	sp, sp, #28
   160c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160c4:	str	r3, [sp, #8]
   160c8:	b	15e94 <argp_parse@@Base+0x3380>
   160cc:	mov	r1, #1
   160d0:	mov	r0, r5
   160d4:	bl	1b4b0 <argp_error@@Base+0x2008>
   160d8:	cmp	r0, #0
   160dc:	beq	15f14 <argp_parse@@Base+0x3400>
   160e0:	ldr	r3, [r5, #28]
   160e4:	b	15f04 <argp_parse@@Base+0x33f0>
   160e8:	mov	r1, #1
   160ec:	mov	r0, r5
   160f0:	bl	1b4b0 <argp_error@@Base+0x2008>
   160f4:	cmp	r0, #0
   160f8:	beq	15f14 <argp_parse@@Base+0x3400>
   160fc:	ldr	r1, [r5, #28]
   16100:	b	16050 <argp_parse@@Base+0x353c>
   16104:	ldr	fp, [sp, #8]
   16108:	b	16030 <argp_parse@@Base+0x351c>
   1610c:	andeq	r0, r0, #6
   16110:	subs	r3, r0, #0
   16114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16118:	moveq	r0, r3
   1611c:	sub	sp, sp, #52	; 0x34
   16120:	mov	r4, r1
   16124:	beq	16138 <argp_parse@@Base+0x3624>
   16128:	mov	r1, #10
   1612c:	bl	111c8 <strchr@plt>
   16130:	adds	r0, r0, #0
   16134:	movne	r0, #1
   16138:	cmp	r4, #0
   1613c:	str	r0, [sp, #20]
   16140:	beq	16450 <argp_parse@@Base+0x393c>
   16144:	ldr	r3, [r4]
   16148:	cmp	r3, #0
   1614c:	beq	16450 <argp_parse@@Base+0x393c>
   16150:	mov	r9, #0
   16154:	mov	r8, #10
   16158:	str	r4, [sp, #24]
   1615c:	ldr	r0, [r3, #8]
   16160:	ldr	r4, [r3, #16]
   16164:	cmp	r0, #0
   16168:	moveq	r0, r9
   1616c:	beq	16180 <argp_parse@@Base+0x366c>
   16170:	mov	r1, r8
   16174:	bl	111c8 <strchr@plt>
   16178:	adds	r0, r0, #0
   1617c:	movne	r0, #1
   16180:	cmp	r4, #0
   16184:	str	r0, [sp]
   16188:	beq	1642c <argp_parse@@Base+0x3918>
   1618c:	ldr	r3, [r4]
   16190:	cmp	r3, #0
   16194:	beq	1642c <argp_parse@@Base+0x3918>
   16198:	str	r4, [sp, #28]
   1619c:	ldr	r0, [r3, #8]
   161a0:	ldr	r4, [r3, #16]
   161a4:	cmp	r0, #0
   161a8:	moveq	r0, r9
   161ac:	beq	161c0 <argp_parse@@Base+0x36ac>
   161b0:	mov	r1, r8
   161b4:	bl	111c8 <strchr@plt>
   161b8:	adds	r0, r0, #0
   161bc:	movne	r0, #1
   161c0:	cmp	r4, #0
   161c4:	str	r0, [sp, #4]
   161c8:	beq	1640c <argp_parse@@Base+0x38f8>
   161cc:	ldr	r3, [r4]
   161d0:	cmp	r3, #0
   161d4:	beq	1640c <argp_parse@@Base+0x38f8>
   161d8:	str	r4, [sp, #32]
   161dc:	ldr	r0, [r3, #8]
   161e0:	ldr	r4, [r3, #16]
   161e4:	cmp	r0, #0
   161e8:	moveq	r0, r9
   161ec:	beq	16200 <argp_parse@@Base+0x36ec>
   161f0:	mov	r1, r8
   161f4:	bl	111c8 <strchr@plt>
   161f8:	adds	r0, r0, #0
   161fc:	movne	r0, #1
   16200:	cmp	r4, #0
   16204:	str	r0, [sp, #8]
   16208:	beq	163ec <argp_parse@@Base+0x38d8>
   1620c:	ldr	r3, [r4]
   16210:	cmp	r3, #0
   16214:	beq	163ec <argp_parse@@Base+0x38d8>
   16218:	str	r4, [sp, #36]	; 0x24
   1621c:	ldr	r0, [r3, #8]
   16220:	ldr	r4, [r3, #16]
   16224:	cmp	r0, #0
   16228:	moveq	r0, r9
   1622c:	beq	16240 <argp_parse@@Base+0x372c>
   16230:	mov	r1, r8
   16234:	bl	111c8 <strchr@plt>
   16238:	adds	r0, r0, #0
   1623c:	movne	r0, #1
   16240:	cmp	r4, #0
   16244:	str	r0, [sp, #12]
   16248:	beq	163c8 <argp_parse@@Base+0x38b4>
   1624c:	ldr	r3, [r4]
   16250:	cmp	r3, #0
   16254:	beq	163c8 <argp_parse@@Base+0x38b4>
   16258:	str	r4, [sp, #40]	; 0x28
   1625c:	ldr	r0, [r3, #8]
   16260:	ldr	fp, [r3, #16]
   16264:	cmp	r0, #0
   16268:	moveq	r0, r9
   1626c:	beq	16280 <argp_parse@@Base+0x376c>
   16270:	mov	r1, r8
   16274:	bl	111c8 <strchr@plt>
   16278:	adds	r0, r0, #0
   1627c:	movne	r0, #1
   16280:	cmp	fp, #0
   16284:	str	r0, [sp, #16]
   16288:	beq	163a4 <argp_parse@@Base+0x3890>
   1628c:	ldr	r3, [fp]
   16290:	cmp	r3, #0
   16294:	beq	163a4 <argp_parse@@Base+0x3890>
   16298:	str	fp, [sp, #44]	; 0x2c
   1629c:	ldr	r0, [r3, #8]
   162a0:	ldr	r7, [r3, #16]
   162a4:	cmp	r0, #0
   162a8:	moveq	r0, r9
   162ac:	beq	162c0 <argp_parse@@Base+0x37ac>
   162b0:	mov	r1, r8
   162b4:	bl	111c8 <strchr@plt>
   162b8:	adds	r0, r0, #0
   162bc:	movne	r0, #1
   162c0:	cmp	r7, #0
   162c4:	mov	r6, r0
   162c8:	beq	16384 <argp_parse@@Base+0x3870>
   162cc:	ldr	r3, [r7]
   162d0:	cmp	r3, #0
   162d4:	beq	16384 <argp_parse@@Base+0x3870>
   162d8:	ldr	r0, [r3, #8]
   162dc:	ldr	r5, [r3, #16]
   162e0:	cmp	r0, #0
   162e4:	moveq	sl, r9
   162e8:	beq	162fc <argp_parse@@Base+0x37e8>
   162ec:	mov	r1, r8
   162f0:	bl	111c8 <strchr@plt>
   162f4:	adds	sl, r0, #0
   162f8:	movne	sl, #1
   162fc:	cmp	r5, #0
   16300:	beq	16374 <argp_parse@@Base+0x3860>
   16304:	ldr	r3, [r5]
   16308:	cmp	r3, #0
   1630c:	beq	16374 <argp_parse@@Base+0x3860>
   16310:	ldr	r0, [r3, #8]
   16314:	ldr	r4, [r3, #16]
   16318:	cmp	r0, #0
   1631c:	moveq	fp, r9
   16320:	beq	16334 <argp_parse@@Base+0x3820>
   16324:	mov	r1, r8
   16328:	bl	111c8 <strchr@plt>
   1632c:	adds	fp, r0, #0
   16330:	movne	fp, #1
   16334:	cmp	r4, #0
   16338:	beq	16364 <argp_parse@@Base+0x3850>
   1633c:	ldr	r3, [r4]
   16340:	cmp	r3, #0
   16344:	beq	16364 <argp_parse@@Base+0x3850>
   16348:	ldr	r1, [r3, #16]
   1634c:	ldr	r0, [r3, #8]
   16350:	bl	16110 <argp_parse@@Base+0x35fc>
   16354:	ldr	r3, [r4, #16]!
   16358:	cmp	r3, #0
   1635c:	add	fp, fp, r0
   16360:	bne	16348 <argp_parse@@Base+0x3834>
   16364:	ldr	r3, [r5, #16]!
   16368:	add	sl, sl, fp
   1636c:	cmp	r3, #0
   16370:	bne	16310 <argp_parse@@Base+0x37fc>
   16374:	ldr	r3, [r7, #16]!
   16378:	add	r6, r6, sl
   1637c:	cmp	r3, #0
   16380:	bne	162d8 <argp_parse@@Base+0x37c4>
   16384:	ldr	r2, [sp, #44]	; 0x2c
   16388:	ldr	r3, [r2, #16]!
   1638c:	str	r2, [sp, #44]	; 0x2c
   16390:	ldr	r2, [sp, #16]
   16394:	cmp	r3, #0
   16398:	add	r2, r2, r6
   1639c:	str	r2, [sp, #16]
   163a0:	bne	1629c <argp_parse@@Base+0x3788>
   163a4:	ldr	r2, [sp, #40]	; 0x28
   163a8:	ldr	r1, [sp, #16]
   163ac:	ldr	r3, [r2, #16]!
   163b0:	str	r2, [sp, #40]	; 0x28
   163b4:	ldr	r2, [sp, #12]
   163b8:	cmp	r3, #0
   163bc:	add	r2, r2, r1
   163c0:	str	r2, [sp, #12]
   163c4:	bne	1625c <argp_parse@@Base+0x3748>
   163c8:	ldr	r2, [sp, #36]	; 0x24
   163cc:	ldr	r1, [sp, #12]
   163d0:	ldr	r3, [r2, #16]!
   163d4:	str	r2, [sp, #36]	; 0x24
   163d8:	ldr	r2, [sp, #8]
   163dc:	cmp	r3, #0
   163e0:	add	r2, r2, r1
   163e4:	str	r2, [sp, #8]
   163e8:	bne	1621c <argp_parse@@Base+0x3708>
   163ec:	ldr	r2, [sp, #32]
   163f0:	ldr	r3, [r2, #16]!
   163f4:	str	r2, [sp, #32]
   163f8:	ldmib	sp, {r1, r2}
   163fc:	cmp	r3, #0
   16400:	add	r2, r2, r1
   16404:	str	r2, [sp, #4]
   16408:	bne	161dc <argp_parse@@Base+0x36c8>
   1640c:	ldr	r2, [sp, #28]
   16410:	ldr	r3, [r2, #16]!
   16414:	str	r2, [sp, #28]
   16418:	ldm	sp, {r1, r2}
   1641c:	cmp	r3, #0
   16420:	add	r2, r2, r1
   16424:	str	r2, [sp]
   16428:	bne	1619c <argp_parse@@Base+0x3688>
   1642c:	ldr	r2, [sp, #24]
   16430:	ldr	r1, [sp]
   16434:	ldr	r3, [r2, #16]!
   16438:	str	r2, [sp, #24]
   1643c:	ldr	r2, [sp, #20]
   16440:	cmp	r3, #0
   16444:	add	r2, r2, r1
   16448:	str	r2, [sp, #20]
   1644c:	bne	1615c <argp_parse@@Base+0x3648>
   16450:	ldr	r0, [sp, #20]
   16454:	add	sp, sp, #52	; 0x34
   16458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1645c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16460:	add	fp, sp, #32
   16464:	sub	sp, sp, #36	; 0x24
   16468:	ldr	r3, [r0, #4]
   1646c:	cmp	r3, #0
   16470:	str	r3, [fp, #-40]	; 0xffffffd8
   16474:	bne	16480 <argp_parse@@Base+0x396c>
   16478:	sub	sp, fp, #32
   1647c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16480:	mov	r4, r0
   16484:	str	r0, [fp, #-60]	; 0xffffffc4
   16488:	ldr	r0, [r0, #8]
   1648c:	str	r1, [fp, #-44]	; 0xffffffd4
   16490:	bl	111bc <strlen@plt>
   16494:	ldr	r3, [r4]
   16498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1649c:	add	r3, r3, #28
   164a0:	mov	r9, r3
   164a4:	str	r3, [fp, #-64]	; 0xffffffc0
   164a8:	mov	sl, r9
   164ac:	str	r2, [fp, #-48]	; 0xffffffd0
   164b0:	add	r3, r0, #15
   164b4:	bic	r3, r3, #7
   164b8:	sub	sp, sp, r3
   164bc:	str	sp, [fp, #-56]	; 0xffffffc8
   164c0:	str	sp, [fp, #-52]	; 0xffffffcc
   164c4:	ldr	r5, [sl, #-24]	; 0xffffffe8
   164c8:	ldr	r4, [sl, #-28]	; 0xffffffe4
   164cc:	cmp	r5, #0
   164d0:	ldr	r9, [sl, #-20]	; 0xffffffec
   164d4:	beq	1654c <argp_parse@@Base+0x3a38>
   164d8:	mov	r8, r4
   164dc:	b	164ec <argp_parse@@Base+0x39d8>
   164e0:	subs	r5, r5, #1
   164e4:	add	r4, r4, #24
   164e8:	beq	1654c <argp_parse@@Base+0x3a38>
   164ec:	ldr	r6, [r4, #12]
   164f0:	tst	r6, #8
   164f4:	bne	164e0 <argp_parse@@Base+0x39cc>
   164f8:	ldr	r7, [r4, #4]
   164fc:	sub	r3, r7, #1
   16500:	cmp	r3, #254	; 0xfe
   16504:	bhi	164e0 <argp_parse@@Base+0x39cc>
   16508:	bl	1118c <__ctype_b_loc@plt>
   1650c:	lsl	r3, r7, #1
   16510:	ldr	r2, [r0]
   16514:	ldrh	r3, [r2, r3]
   16518:	tst	r3, #16384	; 0x4000
   1651c:	beq	164e0 <argp_parse@@Base+0x39cc>
   16520:	ldrb	r3, [r9]
   16524:	cmp	r7, r3
   16528:	bne	164e0 <argp_parse@@Base+0x39cc>
   1652c:	tst	r6, #4
   16530:	moveq	r8, r4
   16534:	tst	r6, #2
   16538:	beq	166c0 <argp_parse@@Base+0x3bac>
   1653c:	subs	r5, r5, #1
   16540:	add	r9, r9, #1
   16544:	add	r4, r4, #24
   16548:	bne	164ec <argp_parse@@Base+0x39d8>
   1654c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16550:	add	sl, sl, #28
   16554:	subs	r3, r3, #1
   16558:	str	r3, [fp, #-48]	; 0xffffffd0
   1655c:	bne	164c4 <argp_parse@@Base+0x39b0>
   16560:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16564:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16568:	cmp	r3, r2
   1656c:	bcc	16874 <argp_parse@@Base+0x3d60>
   16570:	ldr	r7, [fp, #-64]	; 0xffffffc0
   16574:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16578:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1657c:	cmp	r5, #0
   16580:	ldr	r6, [r7, #-20]	; 0xffffffec
   16584:	movne	r8, r4
   16588:	bne	1659c <argp_parse@@Base+0x3a88>
   1658c:	b	165fc <argp_parse@@Base+0x3ae8>
   16590:	subs	r5, r5, #1
   16594:	add	r4, r4, #24
   16598:	beq	165fc <argp_parse@@Base+0x3ae8>
   1659c:	ldr	r9, [r4, #12]
   165a0:	tst	r9, #8
   165a4:	bne	16590 <argp_parse@@Base+0x3a7c>
   165a8:	ldr	sl, [r4, #4]
   165ac:	sub	r3, sl, #1
   165b0:	cmp	r3, #254	; 0xfe
   165b4:	bhi	16590 <argp_parse@@Base+0x3a7c>
   165b8:	bl	1118c <__ctype_b_loc@plt>
   165bc:	lsl	r3, sl, #1
   165c0:	ldr	r1, [r0]
   165c4:	ldrh	r3, [r1, r3]
   165c8:	tst	r3, #16384	; 0x4000
   165cc:	beq	16590 <argp_parse@@Base+0x3a7c>
   165d0:	ldrb	r3, [r6]
   165d4:	cmp	sl, r3
   165d8:	bne	16590 <argp_parse@@Base+0x3a7c>
   165dc:	tst	r9, #4
   165e0:	moveq	r8, r4
   165e4:	tst	r9, #2
   165e8:	beq	166f8 <argp_parse@@Base+0x3be4>
   165ec:	subs	r5, r5, #1
   165f0:	add	r6, r6, #1
   165f4:	add	r4, r4, #24
   165f8:	bne	1659c <argp_parse@@Base+0x3a88>
   165fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16600:	add	r7, r7, #28
   16604:	subs	r3, r3, #1
   16608:	str	r3, [fp, #-40]	; 0xffffffd8
   1660c:	bne	16574 <argp_parse@@Base+0x3a60>
   16610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16614:	ldm	r3, {r7, r8}
   16618:	cmp	r8, #0
   1661c:	beq	16478 <argp_parse@@Base+0x3964>
   16620:	ldr	sl, [pc, #652]	; 168b4 <argp_parse@@Base+0x3da0>
   16624:	ldr	r9, [pc, #652]	; 168b8 <argp_parse@@Base+0x3da4>
   16628:	add	r7, r7, #28
   1662c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16630:	ldr	r4, [r7, #-28]	; 0xffffffe4
   16634:	cmp	r5, #0
   16638:	movne	r6, r4
   1663c:	bne	16650 <argp_parse@@Base+0x3b3c>
   16640:	b	166ac <argp_parse@@Base+0x3b98>
   16644:	subs	r5, r5, #1
   16648:	add	r4, r4, #24
   1664c:	beq	166ac <argp_parse@@Base+0x3b98>
   16650:	ldr	r2, [r4]
   16654:	cmp	r2, #0
   16658:	beq	16644 <argp_parse@@Base+0x3b30>
   1665c:	ldr	r1, [r4, #12]
   16660:	tst	r1, #4
   16664:	moveq	r6, r4
   16668:	tst	r1, #2
   1666c:	bne	16644 <argp_parse@@Base+0x3b30>
   16670:	ldr	r3, [r4, #8]
   16674:	ldr	r0, [r6, #12]
   16678:	cmp	r3, #0
   1667c:	orr	r1, r1, r0
   16680:	beq	167a4 <argp_parse@@Base+0x3c90>
   16684:	tst	r1, #16
   16688:	bne	16644 <argp_parse@@Base+0x3b30>
   1668c:	tst	r1, #1
   16690:	movne	r1, r9
   16694:	moveq	r1, sl
   16698:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1669c:	bl	1b5b0 <argp_error@@Base+0x2108>
   166a0:	subs	r5, r5, #1
   166a4:	add	r4, r4, #24
   166a8:	bne	16650 <argp_parse@@Base+0x3b3c>
   166ac:	subs	r8, r8, #1
   166b0:	add	r7, r7, #28
   166b4:	bne	1662c <argp_parse@@Base+0x3b18>
   166b8:	sub	sp, fp, #32
   166bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166c0:	ldr	r3, [r4, #8]
   166c4:	cmp	r3, #0
   166c8:	bne	1653c <argp_parse@@Base+0x3a28>
   166cc:	ldr	r3, [r8, #8]
   166d0:	cmp	r3, #0
   166d4:	bne	1653c <argp_parse@@Base+0x3a28>
   166d8:	ldr	r3, [r8, #12]
   166dc:	orr	r6, r6, r3
   166e0:	tst	r6, #16
   166e4:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   166e8:	strbeq	r7, [r3]
   166ec:	addeq	r3, r3, #1
   166f0:	streq	r3, [fp, #-52]	; 0xffffffcc
   166f4:	b	1653c <argp_parse@@Base+0x3a28>
   166f8:	ldr	r3, [r4, #8]
   166fc:	ldr	r1, [r8, #12]
   16700:	cmp	r3, #0
   16704:	orr	r9, r9, r1
   16708:	beq	16800 <argp_parse@@Base+0x3cec>
   1670c:	tst	r9, #16
   16710:	bne	165ec <argp_parse@@Base+0x3ad8>
   16714:	tst	r9, #1
   16718:	bne	167c8 <argp_parse@@Base+0x3cb4>
   1671c:	mov	r0, r3
   16720:	str	r3, [fp, #-48]	; 0xffffffd0
   16724:	bl	111bc <strlen@plt>
   16728:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1672c:	ldr	r1, [r3, #28]
   16730:	ldr	r2, [r3, #24]
   16734:	sub	r2, r1, r2
   16738:	mov	r9, r0
   1673c:	ldr	r0, [r3, #16]
   16740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16744:	cmp	r2, r0
   16748:	bhi	1685c <argp_parse@@Base+0x3d48>
   1674c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16750:	ldr	r2, [ip, #20]
   16754:	ldr	r0, [ip, #8]
   16758:	bic	r2, r2, r2, asr #31
   1675c:	add	r2, r2, #6
   16760:	add	r2, r2, r9
   16764:	cmp	r2, r0
   16768:	bcc	167dc <argp_parse@@Base+0x3cc8>
   1676c:	ldr	r2, [ip, #32]
   16770:	mov	r0, ip
   16774:	cmp	r2, r1
   16778:	bls	16810 <argp_parse@@Base+0x3cfc>
   1677c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16780:	add	r2, r1, #1
   16784:	str	r2, [r0, #28]
   16788:	mov	r2, #10
   1678c:	strb	r2, [r1]
   16790:	ldr	r2, [r4, #4]
   16794:	ldr	r1, [pc, #288]	; 168bc <argp_parse@@Base+0x3da8>
   16798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1679c:	bl	1b5b0 <argp_error@@Base+0x2108>
   167a0:	b	165ec <argp_parse@@Base+0x3ad8>
   167a4:	tst	r1, #16
   167a8:	bne	16644 <argp_parse@@Base+0x3b30>
   167ac:	ldr	r3, [r6, #8]
   167b0:	cmp	r3, #0
   167b4:	bne	1668c <argp_parse@@Base+0x3b78>
   167b8:	ldr	r1, [pc, #256]	; 168c0 <argp_parse@@Base+0x3dac>
   167bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167c0:	bl	1b5b0 <argp_error@@Base+0x2108>
   167c4:	b	16644 <argp_parse@@Base+0x3b30>
   167c8:	mov	r2, sl
   167cc:	ldr	r1, [pc, #240]	; 168c4 <argp_parse@@Base+0x3db0>
   167d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167d4:	bl	1b5b0 <argp_error@@Base+0x2108>
   167d8:	b	165ec <argp_parse@@Base+0x3ad8>
   167dc:	ldr	r2, [ip, #32]
   167e0:	cmp	r2, r1
   167e4:	bls	16834 <argp_parse@@Base+0x3d20>
   167e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167ec:	add	r2, r1, #1
   167f0:	str	r2, [r0, #28]
   167f4:	mov	r2, #32
   167f8:	strb	r2, [r1]
   167fc:	b	16790 <argp_parse@@Base+0x3c7c>
   16800:	ldr	r3, [r8, #8]
   16804:	cmp	r3, #0
   16808:	beq	165ec <argp_parse@@Base+0x3ad8>
   1680c:	b	1670c <argp_parse@@Base+0x3bf8>
   16810:	mov	r1, #1
   16814:	str	r3, [fp, #-48]	; 0xffffffd0
   16818:	mov	r9, ip
   1681c:	bl	1b4b0 <argp_error@@Base+0x2008>
   16820:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16824:	cmp	r0, #0
   16828:	beq	16790 <argp_parse@@Base+0x3c7c>
   1682c:	ldr	r1, [r9, #28]
   16830:	b	1677c <argp_parse@@Base+0x3c68>
   16834:	ldr	r9, [fp, #-44]	; 0xffffffd4
   16838:	mov	r1, #1
   1683c:	mov	r0, r9
   16840:	str	r3, [fp, #-48]	; 0xffffffd0
   16844:	bl	1b4b0 <argp_error@@Base+0x2008>
   16848:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1684c:	cmp	r0, #0
   16850:	beq	16790 <argp_parse@@Base+0x3c7c>
   16854:	ldr	r1, [r9, #28]
   16858:	b	167e8 <argp_parse@@Base+0x3cd4>
   1685c:	ldr	sl, [fp, #-44]	; 0xffffffd4
   16860:	mov	r0, sl
   16864:	bl	1af04 <argp_error@@Base+0x1a5c>
   16868:	ldr	r1, [sl, #28]
   1686c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16870:	b	1674c <argp_parse@@Base+0x3c38>
   16874:	mov	r2, r3
   16878:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   1687c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16880:	ldr	r1, [pc, #64]	; 168c8 <argp_parse@@Base+0x3db4>
   16884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16888:	strb	ip, [r3]
   1688c:	bl	1b5b0 <argp_error@@Base+0x2108>
   16890:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16894:	ldr	r3, [r2, #4]
   16898:	cmp	r3, #0
   1689c:	str	r3, [fp, #-40]	; 0xffffffd8
   168a0:	beq	16478 <argp_parse@@Base+0x3964>
   168a4:	ldr	r3, [r2]
   168a8:	add	r3, r3, #28
   168ac:	str	r3, [fp, #-64]	; 0xffffffc0
   168b0:	b	16570 <argp_parse@@Base+0x3a5c>
   168b4:	andeq	ip, r1, r0, lsl #18
   168b8:	strdeq	ip, [r1], -r0
   168bc:	andeq	ip, r1, r4, ror #17
   168c0:	andeq	ip, r1, ip, lsl #18
   168c4:	ldrdeq	ip, [r1], -r8
   168c8:	ldrdeq	ip, [r1], -r0
   168cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168d0:	subs	r4, r1, #0
   168d4:	sub	sp, sp, #12
   168d8:	mov	r8, r0
   168dc:	mov	r7, r2
   168e0:	beq	16ab4 <argp_parse@@Base+0x3fa0>
   168e4:	ldr	r3, [r4, #20]
   168e8:	cmp	r3, #0
   168ec:	beq	16ab4 <argp_parse@@Base+0x3fa0>
   168f0:	ldr	r1, [r2, #16]
   168f4:	mov	r0, r4
   168f8:	bl	13934 <argp_parse@@Base+0xe20>
   168fc:	ldr	r3, [r4, #20]
   16900:	mov	r1, r8
   16904:	mov	r2, r0
   16908:	ldr	r0, [pc, #628]	; 16b84 <argp_parse@@Base+0x4070>
   1690c:	blx	r3
   16910:	mov	r6, r0
   16914:	cmp	r6, #0
   16918:	beq	16a80 <argp_parse@@Base+0x3f6c>
   1691c:	ldrb	r3, [r6]
   16920:	cmp	r3, #0
   16924:	beq	16a74 <argp_parse@@Base+0x3f60>
   16928:	ldr	r3, [r7, #8]
   1692c:	ldr	r3, [r3]
   16930:	cmp	r3, #0
   16934:	beq	1695c <argp_parse@@Base+0x3e48>
   16938:	ldr	r4, [r7, #4]
   1693c:	ldr	r3, [r4, #28]
   16940:	ldr	r2, [r4, #32]
   16944:	cmp	r3, r2
   16948:	bcs	16b68 <argp_parse@@Base+0x4054>
   1694c:	add	r1, r3, #1
   16950:	mov	r2, #10
   16954:	str	r1, [r4, #28]
   16958:	strb	r2, [r3]
   1695c:	ldr	r4, [r7, #4]
   16960:	ldr	sl, [pc, #544]	; 16b88 <argp_parse@@Base+0x4074>
   16964:	ldr	r3, [r4, #28]
   16968:	ldr	r1, [r4, #24]
   1696c:	ldr	r2, [r4, #16]
   16970:	sub	r3, r3, r1
   16974:	cmp	r3, r2
   16978:	ldr	r5, [sl, #24]
   1697c:	bhi	16b40 <argp_parse@@Base+0x402c>
   16980:	ldr	r3, [r4, #20]
   16984:	mov	fp, #32
   16988:	cmp	r3, #0
   1698c:	subge	r5, r5, r3
   16990:	mov	r9, #1
   16994:	cmp	r5, #0
   16998:	sub	r5, r5, #1
   1699c:	ble	169c8 <argp_parse@@Base+0x3eb4>
   169a0:	ldr	r3, [r4, #28]
   169a4:	ldr	r2, [r4, #32]
   169a8:	cmp	r3, r2
   169ac:	bcs	16a98 <argp_parse@@Base+0x3f84>
   169b0:	add	r2, r3, #1
   169b4:	cmp	r5, #0
   169b8:	str	r2, [r4, #28]
   169bc:	sub	r5, r5, #1
   169c0:	strb	fp, [r3]
   169c4:	bgt	169a0 <argp_parse@@Base+0x3e8c>
   169c8:	ldr	r4, [r7, #4]
   169cc:	ldr	r9, [sl, #24]
   169d0:	ldr	r5, [r4, #28]
   169d4:	ldr	r3, [r4, #24]
   169d8:	ldr	r2, [r4, #16]
   169dc:	sub	r3, r5, r3
   169e0:	cmp	r3, r2
   169e4:	strls	r9, [r4, #4]
   169e8:	movls	fp, r4
   169ec:	bhi	16af4 <argp_parse@@Base+0x3fe0>
   169f0:	str	r9, [fp, #12]
   169f4:	mov	r0, r6
   169f8:	bl	111bc <strlen@plt>
   169fc:	subs	r9, r0, #0
   16a00:	beq	16a38 <argp_parse@@Base+0x3f24>
   16a04:	ldr	r2, [r4, #32]
   16a08:	add	r3, r5, r9
   16a0c:	cmp	r2, r3
   16a10:	bcc	16ac4 <argp_parse@@Base+0x3fb0>
   16a14:	mov	r2, r9
   16a18:	mov	r0, r5
   16a1c:	mov	r1, r6
   16a20:	bl	110a8 <memcpy@plt>
   16a24:	ldr	r3, [r4, #28]
   16a28:	add	r9, r3, r9
   16a2c:	str	r9, [r4, #28]
   16a30:	ldr	r4, [r7, #4]
   16a34:	ldr	r5, [r4, #28]
   16a38:	ldr	r3, [r4, #24]
   16a3c:	ldr	r2, [r4, #16]
   16a40:	sub	r3, r5, r3
   16a44:	cmp	r3, r2
   16a48:	movls	r9, r4
   16a4c:	bhi	16ae0 <argp_parse@@Base+0x3fcc>
   16a50:	ldr	r2, [r9, #32]
   16a54:	mov	r3, #0
   16a58:	cmp	r2, r5
   16a5c:	str	r3, [r4, #4]
   16a60:	bls	16b4c <argp_parse@@Base+0x4038>
   16a64:	add	r2, r5, #1
   16a68:	mov	r3, #10
   16a6c:	str	r2, [r9, #28]
   16a70:	strb	r3, [r5]
   16a74:	ldr	r3, [r7, #8]
   16a78:	mov	r2, #1
   16a7c:	str	r2, [r3, #4]
   16a80:	cmp	r8, r6
   16a84:	beq	16abc <argp_parse@@Base+0x3fa8>
   16a88:	mov	r0, r6
   16a8c:	add	sp, sp, #12
   16a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a94:	b	13a90 <argp_parse@@Base+0xf7c>
   16a98:	mov	r1, r9
   16a9c:	mov	r0, r4
   16aa0:	bl	1b4b0 <argp_error@@Base+0x2008>
   16aa4:	cmp	r0, #0
   16aa8:	beq	16994 <argp_parse@@Base+0x3e80>
   16aac:	ldr	r3, [r4, #28]
   16ab0:	b	169b0 <argp_parse@@Base+0x3e9c>
   16ab4:	mov	r6, r8
   16ab8:	b	16914 <argp_parse@@Base+0x3e00>
   16abc:	add	sp, sp, #12
   16ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac4:	mov	r1, r9
   16ac8:	mov	r0, r4
   16acc:	bl	1b4b0 <argp_error@@Base+0x2008>
   16ad0:	cmp	r0, #0
   16ad4:	beq	16a30 <argp_parse@@Base+0x3f1c>
   16ad8:	ldr	r5, [r4, #28]
   16adc:	b	16a14 <argp_parse@@Base+0x3f00>
   16ae0:	mov	r0, r4
   16ae4:	bl	1af04 <argp_error@@Base+0x1a5c>
   16ae8:	ldr	r9, [r7, #4]
   16aec:	ldr	r5, [r9, #28]
   16af0:	b	16a50 <argp_parse@@Base+0x3f3c>
   16af4:	mov	r0, r4
   16af8:	str	r9, [sp, #4]
   16afc:	bl	1af04 <argp_error@@Base+0x1a5c>
   16b00:	ldr	fp, [r7, #4]
   16b04:	ldr	r3, [sp, #4]
   16b08:	ldr	r9, [sl, #24]
   16b0c:	ldr	r5, [fp, #28]
   16b10:	ldr	r2, [fp, #24]
   16b14:	ldr	r1, [fp, #16]
   16b18:	sub	r2, r5, r2
   16b1c:	cmp	r2, r1
   16b20:	str	r3, [r4, #4]
   16b24:	movls	r4, fp
   16b28:	bls	169f0 <argp_parse@@Base+0x3edc>
   16b2c:	mov	r0, fp
   16b30:	bl	1af04 <argp_error@@Base+0x1a5c>
   16b34:	ldr	r4, [r7, #4]
   16b38:	ldr	r5, [r4, #28]
   16b3c:	b	169f0 <argp_parse@@Base+0x3edc>
   16b40:	mov	r0, r4
   16b44:	bl	1af04 <argp_error@@Base+0x1a5c>
   16b48:	b	16980 <argp_parse@@Base+0x3e6c>
   16b4c:	mov	r1, #1
   16b50:	mov	r0, r9
   16b54:	bl	1b4b0 <argp_error@@Base+0x2008>
   16b58:	cmp	r0, #0
   16b5c:	beq	16a74 <argp_parse@@Base+0x3f60>
   16b60:	ldr	r5, [r9, #28]
   16b64:	b	16a64 <argp_parse@@Base+0x3f50>
   16b68:	mov	r1, #1
   16b6c:	mov	r0, r4
   16b70:	bl	1b4b0 <argp_error@@Base+0x2008>
   16b74:	cmp	r0, #0
   16b78:	beq	1695c <argp_parse@@Base+0x3e48>
   16b7c:	ldr	r3, [r4, #28]
   16b80:	b	1694c <argp_parse@@Base+0x3e38>
   16b84:	andeq	r0, r0, #3
   16b88:	andeq	sp, r2, ip, ror #6
   16b8c:	ldr	r3, [r1, #12]
   16b90:	push	{r4, r5, r6, r7, r8, lr}
   16b94:	cmp	r3, #0
   16b98:	mov	r6, r1
   16b9c:	mov	r5, r0
   16ba0:	beq	16c88 <argp_parse@@Base+0x4174>
   16ba4:	ldr	r3, [r1, #8]
   16ba8:	ldr	r2, [r1]
   16bac:	ldr	r7, [r3]
   16bb0:	ldr	r3, [r3, #4]
   16bb4:	ldr	r4, [r2, #16]
   16bb8:	cmp	r3, #0
   16bbc:	cmpne	r7, #0
   16bc0:	beq	16bf8 <argp_parse@@Base+0x40e4>
   16bc4:	ldr	r2, [r2, #12]
   16bc8:	ldr	r3, [r7, #12]
   16bcc:	cmp	r2, r3
   16bd0:	beq	16bf8 <argp_parse@@Base+0x40e4>
   16bd4:	ldr	r8, [r1, #4]
   16bd8:	ldr	r3, [r8, #28]
   16bdc:	ldr	r2, [r8, #32]
   16be0:	cmp	r3, r2
   16be4:	bcs	16dc0 <argp_parse@@Base+0x42ac>
   16be8:	add	r1, r3, #1
   16bec:	mov	r2, #10
   16bf0:	str	r1, [r8, #28]
   16bf4:	strb	r2, [r3]
   16bf8:	cmp	r4, #0
   16bfc:	beq	16d3c <argp_parse@@Base+0x4228>
   16c00:	ldr	r0, [r4]
   16c04:	cmp	r0, #0
   16c08:	beq	16d3c <argp_parse@@Base+0x4228>
   16c0c:	ldrb	r3, [r0]
   16c10:	cmp	r3, #0
   16c14:	beq	16d3c <argp_parse@@Base+0x4228>
   16c18:	cmp	r7, #0
   16c1c:	beq	16c4c <argp_parse@@Base+0x4138>
   16c20:	ldr	r3, [r7, #16]
   16c24:	cmp	r4, r3
   16c28:	beq	16d3c <argp_parse@@Base+0x4228>
   16c2c:	cmp	r3, #0
   16c30:	beq	16c4c <argp_parse@@Base+0x4138>
   16c34:	ldr	r3, [r3, #12]
   16c38:	cmp	r3, #0
   16c3c:	cmpne	r4, r3
   16c40:	bne	16c34 <argp_parse@@Base+0x4120>
   16c44:	cmp	r4, r3
   16c48:	beq	16d3c <argp_parse@@Base+0x4228>
   16c4c:	ldr	r3, [r6, #4]
   16c50:	ldr	r1, [r4, #16]
   16c54:	mov	r2, r6
   16c58:	ldr	r7, [r3, #12]
   16c5c:	bl	168cc <argp_parse@@Base+0x3db8>
   16c60:	ldr	r8, [r6, #4]
   16c64:	ldr	r3, [r8, #28]
   16c68:	ldr	r1, [r8, #24]
   16c6c:	ldr	r2, [r8, #16]
   16c70:	sub	r3, r3, r1
   16c74:	cmp	r3, r2
   16c78:	movls	r4, r8
   16c7c:	bhi	16da0 <argp_parse@@Base+0x428c>
   16c80:	str	r7, [r8, #12]
   16c84:	b	16d50 <argp_parse@@Base+0x423c>
   16c88:	ldr	r7, [r1, #4]
   16c8c:	ldr	r3, [r7, #28]
   16c90:	ldr	r1, [r7, #32]
   16c94:	add	r2, r3, #2
   16c98:	cmp	r1, r2
   16c9c:	bcc	16d20 <argp_parse@@Base+0x420c>
   16ca0:	ldr	r2, [pc, #308]	; 16ddc <argp_parse@@Base+0x42c8>
   16ca4:	ldrh	r2, [r2]
   16ca8:	strh	r2, [r3]
   16cac:	ldr	r4, [r6, #4]
   16cb0:	ldr	r3, [r7, #28]
   16cb4:	add	r3, r3, #2
   16cb8:	str	r3, [r7, #28]
   16cbc:	ldr	r1, [r4, #24]
   16cc0:	ldr	r3, [r4, #28]
   16cc4:	ldr	r2, [r4, #16]
   16cc8:	sub	r3, r3, r1
   16ccc:	cmp	r3, r2
   16cd0:	bhi	16d60 <argp_parse@@Base+0x424c>
   16cd4:	ldr	r3, [r4, #20]
   16cd8:	mov	r6, #32
   16cdc:	cmp	r3, #0
   16ce0:	subge	r5, r5, r3
   16ce4:	mov	r7, #1
   16ce8:	cmp	r5, #0
   16cec:	sub	r5, r5, #1
   16cf0:	ble	16d1c <argp_parse@@Base+0x4208>
   16cf4:	ldr	r3, [r4, #28]
   16cf8:	ldr	r2, [r4, #32]
   16cfc:	cmp	r3, r2
   16d00:	bcs	16d6c <argp_parse@@Base+0x4258>
   16d04:	add	r2, r3, #1
   16d08:	cmp	r5, #0
   16d0c:	str	r2, [r4, #28]
   16d10:	sub	r5, r5, #1
   16d14:	strb	r6, [r3]
   16d18:	bgt	16cf4 <argp_parse@@Base+0x41e0>
   16d1c:	pop	{r4, r5, r6, r7, r8, pc}
   16d20:	mov	r1, #2
   16d24:	mov	r0, r7
   16d28:	bl	1b4b0 <argp_error@@Base+0x2008>
   16d2c:	cmp	r0, #0
   16d30:	beq	16d88 <argp_parse@@Base+0x4274>
   16d34:	ldr	r3, [r7, #28]
   16d38:	b	16ca0 <argp_parse@@Base+0x418c>
   16d3c:	ldr	r4, [r6, #4]
   16d40:	ldr	r3, [r4, #28]
   16d44:	ldr	r1, [r4, #24]
   16d48:	ldr	r2, [r4, #16]
   16d4c:	sub	r3, r3, r1
   16d50:	mov	r1, #0
   16d54:	cmp	r3, r2
   16d58:	str	r1, [r6, #12]
   16d5c:	bls	16cd4 <argp_parse@@Base+0x41c0>
   16d60:	mov	r0, r4
   16d64:	bl	1af04 <argp_error@@Base+0x1a5c>
   16d68:	b	16cd4 <argp_parse@@Base+0x41c0>
   16d6c:	mov	r1, r7
   16d70:	mov	r0, r4
   16d74:	bl	1b4b0 <argp_error@@Base+0x2008>
   16d78:	cmp	r0, #0
   16d7c:	beq	16ce8 <argp_parse@@Base+0x41d4>
   16d80:	ldr	r3, [r4, #28]
   16d84:	b	16d04 <argp_parse@@Base+0x41f0>
   16d88:	ldr	r4, [r6, #4]
   16d8c:	ldr	r3, [r4, #28]
   16d90:	ldr	r1, [r4, #24]
   16d94:	ldr	r2, [r4, #16]
   16d98:	sub	r3, r3, r1
   16d9c:	b	16ccc <argp_parse@@Base+0x41b8>
   16da0:	mov	r0, r8
   16da4:	bl	1af04 <argp_error@@Base+0x1a5c>
   16da8:	ldr	r4, [r6, #4]
   16dac:	ldr	r3, [r4, #28]
   16db0:	ldr	r1, [r4, #24]
   16db4:	ldr	r2, [r4, #16]
   16db8:	sub	r3, r3, r1
   16dbc:	b	16c80 <argp_parse@@Base+0x416c>
   16dc0:	mov	r1, #1
   16dc4:	mov	r0, r8
   16dc8:	bl	1b4b0 <argp_error@@Base+0x2008>
   16dcc:	cmp	r0, #0
   16dd0:	beq	16bf8 <argp_parse@@Base+0x40e4>
   16dd4:	ldr	r3, [r8, #28]
   16dd8:	b	16be8 <argp_parse@@Base+0x40d4>
   16ddc:	andeq	ip, r1, r4, lsl r9
   16de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16de4:	sub	sp, sp, #28
   16de8:	ldr	r6, [r0, #12]
   16dec:	ldr	r7, [r1, #12]
   16df0:	cmp	r6, r7
   16df4:	beq	1706c <argp_parse@@Base+0x4558>
   16df8:	ldr	r8, [r6, #12]
   16dfc:	ldr	r9, [r7, #12]
   16e00:	mov	r5, r1
   16e04:	cmp	r8, r9
   16e08:	mov	r4, r0
   16e0c:	beq	17034 <argp_parse@@Base+0x4520>
   16e10:	ldr	sl, [r8, #12]
   16e14:	ldr	fp, [r9, #12]
   16e18:	cmp	sl, fp
   16e1c:	beq	170d4 <argp_parse@@Base+0x45c0>
   16e20:	ldr	r3, [sl, #12]
   16e24:	ldr	r2, [fp, #12]
   16e28:	cmp	r3, r2
   16e2c:	beq	17108 <argp_parse@@Base+0x45f4>
   16e30:	ldr	r1, [r3, #12]
   16e34:	ldr	r0, [r2, #12]
   16e38:	str	r1, [sp]
   16e3c:	cmp	r1, r0
   16e40:	str	r0, [sp, #4]
   16e44:	beq	170a0 <argp_parse@@Base+0x458c>
   16e48:	ldr	r1, [r1, #12]
   16e4c:	ldr	r0, [r0, #12]
   16e50:	str	r1, [sp, #8]
   16e54:	cmp	r1, r0
   16e58:	str	r0, [sp, #12]
   16e5c:	beq	1713c <argp_parse@@Base+0x4628>
   16e60:	ldr	r0, [r1, #12]
   16e64:	ldr	r1, [sp, #12]
   16e68:	ldr	r1, [r1, #12]
   16e6c:	cmp	r0, r1
   16e70:	beq	1717c <argp_parse@@Base+0x4668>
   16e74:	str	r2, [sp, #20]
   16e78:	str	r3, [sp, #16]
   16e7c:	bl	16de0 <argp_parse@@Base+0x42cc>
   16e80:	cmp	r0, #0
   16e84:	bne	1702c <argp_parse@@Base+0x4518>
   16e88:	ldr	r3, [sp, #12]
   16e8c:	ldr	r2, [sp, #20]
   16e90:	ldr	r1, [r3, #8]
   16e94:	ldr	r3, [sp, #8]
   16e98:	mvn	ip, r1
   16e9c:	ldr	r0, [r3, #8]
   16ea0:	lsr	ip, ip, #31
   16ea4:	ldr	r3, [sp, #16]
   16ea8:	cmp	ip, r0, lsr #31
   16eac:	subne	r0, r0, r1
   16eb0:	subeq	r0, r1, r0
   16eb4:	cmp	r0, #0
   16eb8:	bne	1702c <argp_parse@@Base+0x4518>
   16ebc:	ldr	r1, [sp, #12]
   16ec0:	ldr	r0, [sp, #8]
   16ec4:	ldr	r1, [r1, #4]
   16ec8:	ldr	r0, [r0, #4]
   16ecc:	sub	r0, r1, r0
   16ed0:	cmp	r0, #0
   16ed4:	bne	1702c <argp_parse@@Base+0x4518>
   16ed8:	ldr	r1, [sp, #4]
   16edc:	ldr	r0, [sp]
   16ee0:	ldr	r1, [r1, #8]
   16ee4:	ldr	r0, [r0, #8]
   16ee8:	mvn	ip, r1
   16eec:	lsr	ip, ip, #31
   16ef0:	cmp	ip, r0, lsr #31
   16ef4:	subne	r0, r0, r1
   16ef8:	subeq	r0, r1, r0
   16efc:	cmp	r0, #0
   16f00:	bne	1702c <argp_parse@@Base+0x4518>
   16f04:	ldr	r1, [sp, #4]
   16f08:	ldr	r0, [sp]
   16f0c:	ldr	r1, [r1, #4]
   16f10:	ldr	r0, [r0, #4]
   16f14:	sub	r0, r1, r0
   16f18:	cmp	r0, #0
   16f1c:	bne	1702c <argp_parse@@Base+0x4518>
   16f20:	ldr	r1, [r2, #8]
   16f24:	ldr	r0, [r3, #8]
   16f28:	mvn	ip, r1
   16f2c:	lsr	ip, ip, #31
   16f30:	cmp	ip, r0, lsr #31
   16f34:	subne	r0, r0, r1
   16f38:	subeq	r0, r1, r0
   16f3c:	cmp	r0, #0
   16f40:	bne	1702c <argp_parse@@Base+0x4518>
   16f44:	ldr	r2, [r2, #4]
   16f48:	ldr	r0, [r3, #4]
   16f4c:	sub	r0, r2, r0
   16f50:	cmp	r0, #0
   16f54:	bne	1702c <argp_parse@@Base+0x4518>
   16f58:	ldr	r3, [fp, #8]
   16f5c:	ldr	r0, [sl, #8]
   16f60:	mvn	r2, r3
   16f64:	lsr	r2, r2, #31
   16f68:	cmp	r2, r0, lsr #31
   16f6c:	subne	r0, r0, r3
   16f70:	subeq	r0, r3, r0
   16f74:	cmp	r0, #0
   16f78:	bne	1702c <argp_parse@@Base+0x4518>
   16f7c:	ldr	r3, [fp, #4]
   16f80:	ldr	r0, [sl, #4]
   16f84:	sub	r0, r3, r0
   16f88:	cmp	r0, #0
   16f8c:	bne	1702c <argp_parse@@Base+0x4518>
   16f90:	ldr	r3, [r9, #8]
   16f94:	ldr	r0, [r8, #8]
   16f98:	mvn	r2, r3
   16f9c:	lsr	r2, r2, #31
   16fa0:	cmp	r2, r0, lsr #31
   16fa4:	subne	r0, r0, r3
   16fa8:	subeq	r0, r3, r0
   16fac:	cmp	r0, #0
   16fb0:	bne	1702c <argp_parse@@Base+0x4518>
   16fb4:	ldr	r3, [r9, #4]
   16fb8:	ldr	r0, [r8, #4]
   16fbc:	sub	r0, r3, r0
   16fc0:	cmp	r0, #0
   16fc4:	bne	1702c <argp_parse@@Base+0x4518>
   16fc8:	ldr	r3, [r7, #8]
   16fcc:	ldr	r0, [r6, #8]
   16fd0:	mvn	r2, r3
   16fd4:	lsr	r2, r2, #31
   16fd8:	cmp	r2, r0, lsr #31
   16fdc:	subne	r0, r0, r3
   16fe0:	subeq	r0, r3, r0
   16fe4:	cmp	r0, #0
   16fe8:	bne	1702c <argp_parse@@Base+0x4518>
   16fec:	ldr	r3, [r7, #4]
   16ff0:	ldr	r0, [r6, #4]
   16ff4:	sub	r0, r3, r0
   16ff8:	cmp	r0, #0
   16ffc:	bne	1702c <argp_parse@@Base+0x4518>
   17000:	ldr	r3, [r5, #8]
   17004:	ldr	r0, [r4, #8]
   17008:	mvn	r2, r3
   1700c:	lsr	r2, r2, #31
   17010:	cmp	r2, r0, lsr #31
   17014:	subne	r0, r0, r3
   17018:	subeq	r0, r3, r0
   1701c:	cmp	r0, #0
   17020:	ldreq	r3, [r5, #4]
   17024:	ldreq	r0, [r4, #4]
   17028:	subeq	r0, r3, r0
   1702c:	add	sp, sp, #28
   17030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17034:	ldr	r3, [r7, #8]
   17038:	ldr	r0, [r6, #8]
   1703c:	mvn	r2, r3
   17040:	ldr	r1, [r7, #4]
   17044:	lsr	r2, r2, #31
   17048:	cmp	r2, r0, lsr #31
   1704c:	subne	r0, r0, r3
   17050:	subeq	r0, r3, r0
   17054:	ldr	r2, [r6, #4]
   17058:	cmp	r0, #0
   1705c:	subeq	r0, r1, r2
   17060:	beq	16ff8 <argp_parse@@Base+0x44e4>
   17064:	add	sp, sp, #28
   17068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1706c:	ldr	r2, [r1, #8]
   17070:	ldr	r3, [r0, #8]
   17074:	mvn	ip, r2
   17078:	ldr	lr, [r1, #4]
   1707c:	lsr	ip, ip, #31
   17080:	cmp	ip, r3, lsr #31
   17084:	ldr	r1, [r0, #4]
   17088:	subne	r0, r3, r2
   1708c:	subeq	r0, r2, r3
   17090:	cmp	r0, #0
   17094:	subeq	r0, lr, r1
   17098:	add	sp, sp, #28
   1709c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170a0:	ldr	r1, [r2, #8]
   170a4:	ldr	r0, [r3, #8]
   170a8:	mvn	ip, r1
   170ac:	ldr	r2, [r2, #4]
   170b0:	lsr	ip, ip, #31
   170b4:	cmp	ip, r0, lsr #31
   170b8:	subne	r0, r0, r1
   170bc:	subeq	r0, r1, r0
   170c0:	ldr	r3, [r3, #4]
   170c4:	cmp	r0, #0
   170c8:	subeq	r0, r2, r3
   170cc:	beq	16f50 <argp_parse@@Base+0x443c>
   170d0:	b	1702c <argp_parse@@Base+0x4518>
   170d4:	ldr	r3, [r9, #8]
   170d8:	ldr	r0, [r8, #8]
   170dc:	mvn	r2, r3
   170e0:	ldr	r1, [r9, #4]
   170e4:	lsr	r2, r2, #31
   170e8:	cmp	r2, r0, lsr #31
   170ec:	subne	r0, r0, r3
   170f0:	subeq	r0, r3, r0
   170f4:	ldr	r2, [r8, #4]
   170f8:	cmp	r0, #0
   170fc:	subeq	r0, r1, r2
   17100:	beq	16fc0 <argp_parse@@Base+0x44ac>
   17104:	b	1702c <argp_parse@@Base+0x4518>
   17108:	ldr	r3, [fp, #8]
   1710c:	ldr	r0, [sl, #8]
   17110:	mvn	r2, r3
   17114:	ldr	r1, [fp, #4]
   17118:	lsr	r2, r2, #31
   1711c:	cmp	r2, r0, lsr #31
   17120:	subne	r0, r0, r3
   17124:	subeq	r0, r3, r0
   17128:	ldr	r2, [sl, #4]
   1712c:	cmp	r0, #0
   17130:	subeq	r0, r1, r2
   17134:	beq	16f88 <argp_parse@@Base+0x4474>
   17138:	b	1702c <argp_parse@@Base+0x4518>
   1713c:	ldr	ip, [sp, #4]
   17140:	ldr	r1, [sp]
   17144:	ldr	lr, [ip, #8]
   17148:	ldr	r0, [r1, #8]
   1714c:	mvn	r1, lr
   17150:	ldr	ip, [ip, #4]
   17154:	lsr	r1, r1, #31
   17158:	cmp	r1, r0, lsr #31
   1715c:	ldr	r1, [sp]
   17160:	subne	r0, r0, lr
   17164:	subeq	r0, lr, r0
   17168:	ldr	r1, [r1, #4]
   1716c:	cmp	r0, #0
   17170:	subeq	r0, ip, r1
   17174:	beq	16f18 <argp_parse@@Base+0x4404>
   17178:	b	1702c <argp_parse@@Base+0x4518>
   1717c:	ldr	ip, [sp, #12]
   17180:	ldr	r1, [sp, #8]
   17184:	ldr	lr, [ip, #8]
   17188:	ldr	r0, [r1, #8]
   1718c:	mvn	r1, lr
   17190:	ldr	ip, [ip, #4]
   17194:	lsr	r1, r1, #31
   17198:	cmp	r1, r0, lsr #31
   1719c:	ldr	r1, [sp, #8]
   171a0:	subne	r0, r0, lr
   171a4:	subeq	r0, lr, r0
   171a8:	ldr	r1, [r1, #4]
   171ac:	cmp	r0, #0
   171b0:	subeq	r0, ip, r1
   171b4:	beq	16ed0 <argp_parse@@Base+0x43bc>
   171b8:	b	1702c <argp_parse@@Base+0x4518>
   171bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171c0:	mov	r6, r1
   171c4:	ldr	r4, [r0, #16]
   171c8:	sub	sp, sp, #28
   171cc:	cmp	r4, #0
   171d0:	movne	r2, r4
   171d4:	bne	171e0 <argp_parse@@Base+0x46cc>
   171d8:	b	17808 <argp_parse@@Base+0x4cf4>
   171dc:	mov	r2, r3
   171e0:	ldr	r3, [r2, #12]
   171e4:	cmp	r3, #0
   171e8:	bne	171dc <argp_parse@@Base+0x46c8>
   171ec:	ldr	r5, [r6, #16]
   171f0:	ldr	ip, [r2, #8]
   171f4:	cmp	r5, #0
   171f8:	movne	r2, r5
   171fc:	bne	17208 <argp_parse@@Base+0x46f4>
   17200:	b	1781c <argp_parse@@Base+0x4d08>
   17204:	mov	r2, r3
   17208:	ldr	r3, [r2, #12]
   1720c:	cmp	r3, #0
   17210:	bne	17204 <argp_parse@@Base+0x46f0>
   17214:	ldr	r3, [r2, #8]
   17218:	mvn	r2, r3
   1721c:	lsr	r2, r2, #31
   17220:	cmp	r2, ip, lsr #31
   17224:	subne	r1, ip, r3
   17228:	subeq	r1, r3, ip
   1722c:	cmp	r1, #0
   17230:	bne	173ac <argp_parse@@Base+0x4898>
   17234:	adds	r1, r5, #0
   17238:	movne	r1, #1
   1723c:	cmp	r4, #0
   17240:	rsbeq	r1, r1, #0
   17244:	rsbne	r1, r1, #1
   17248:	cmp	r1, #0
   1724c:	bne	173ac <argp_parse@@Base+0x4898>
   17250:	cmp	r4, #0
   17254:	mov	fp, r0
   17258:	beq	175a4 <argp_parse@@Base+0x4a90>
   1725c:	ldr	r1, [r4, #20]
   17260:	ldr	r2, [r5, #20]
   17264:	cmp	r1, r2
   17268:	bgt	173b8 <argp_parse@@Base+0x48a4>
   1726c:	bge	17550 <argp_parse@@Base+0x4a3c>
   17270:	ldr	r5, [r5, #12]
   17274:	ldr	r3, [r5, #20]
   17278:	cmp	r1, r3
   1727c:	blt	17270 <argp_parse@@Base+0x475c>
   17280:	ldr	r6, [r4, #12]
   17284:	ldr	r7, [r5, #12]
   17288:	cmp	r6, r7
   1728c:	beq	17a8c <argp_parse@@Base+0x4f78>
   17290:	ldr	r8, [r6, #12]
   17294:	ldr	r9, [r7, #12]
   17298:	cmp	r8, r9
   1729c:	beq	179c4 <argp_parse@@Base+0x4eb0>
   172a0:	ldr	sl, [r8, #12]
   172a4:	ldr	fp, [r9, #12]
   172a8:	cmp	sl, fp
   172ac:	beq	17af4 <argp_parse@@Base+0x4fe0>
   172b0:	ldr	r0, [sl, #12]
   172b4:	ldr	r1, [fp, #12]
   172b8:	cmp	r0, r1
   172bc:	beq	17ba0 <argp_parse@@Base+0x508c>
   172c0:	bl	16de0 <argp_parse@@Base+0x42cc>
   172c4:	subs	r1, r0, #0
   172c8:	bne	173ac <argp_parse@@Base+0x4898>
   172cc:	ldr	r1, [fp, #8]
   172d0:	ldr	r3, [sl, #8]
   172d4:	mvn	r2, r1
   172d8:	lsr	r2, r2, #31
   172dc:	cmp	r2, r3, lsr #31
   172e0:	subne	r1, r3, r1
   172e4:	subeq	r1, r1, r3
   172e8:	cmp	r1, #0
   172ec:	bne	173ac <argp_parse@@Base+0x4898>
   172f0:	ldr	r1, [fp, #4]
   172f4:	ldr	r3, [sl, #4]
   172f8:	sub	r1, r1, r3
   172fc:	cmp	r1, #0
   17300:	bne	173ac <argp_parse@@Base+0x4898>
   17304:	ldr	r1, [r9, #8]
   17308:	ldr	r3, [r8, #8]
   1730c:	mvn	r2, r1
   17310:	lsr	r2, r2, #31
   17314:	cmp	r2, r3, lsr #31
   17318:	subne	r1, r3, r1
   1731c:	subeq	r1, r1, r3
   17320:	cmp	r1, #0
   17324:	bne	173ac <argp_parse@@Base+0x4898>
   17328:	ldr	r1, [r9, #4]
   1732c:	ldr	r3, [r8, #4]
   17330:	sub	r1, r1, r3
   17334:	cmp	r1, #0
   17338:	bne	173ac <argp_parse@@Base+0x4898>
   1733c:	ldr	r1, [r7, #8]
   17340:	ldr	r3, [r6, #8]
   17344:	mvn	r2, r1
   17348:	lsr	r2, r2, #31
   1734c:	cmp	r2, r3, lsr #31
   17350:	subne	r1, r3, r1
   17354:	subeq	r1, r1, r3
   17358:	cmp	r1, #0
   1735c:	bne	173ac <argp_parse@@Base+0x4898>
   17360:	ldr	r1, [r7, #4]
   17364:	ldr	r3, [r6, #4]
   17368:	sub	r1, r1, r3
   1736c:	cmp	r1, #0
   17370:	bne	173ac <argp_parse@@Base+0x4898>
   17374:	ldr	r1, [r5, #8]
   17378:	ldr	r3, [r4, #8]
   1737c:	mvn	r2, r1
   17380:	lsr	r2, r2, #31
   17384:	cmp	r2, r3, lsr #31
   17388:	subne	r1, r3, r1
   1738c:	subeq	r1, r1, r3
   17390:	cmp	r1, #0
   17394:	bne	173ac <argp_parse@@Base+0x4898>
   17398:	ldr	r1, [r5, #4]
   1739c:	ldr	r3, [r4, #4]
   173a0:	sub	r1, r1, r3
   173a4:	cmp	r1, #0
   173a8:	mvneq	r1, #0
   173ac:	mov	r0, r1
   173b0:	add	sp, sp, #28
   173b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173b8:	ldr	r4, [r4, #12]
   173bc:	ldr	r3, [r4, #20]
   173c0:	cmp	r2, r3
   173c4:	blt	173b8 <argp_parse@@Base+0x48a4>
   173c8:	ldr	r6, [r4, #12]
   173cc:	ldr	r7, [r5, #12]
   173d0:	cmp	r6, r7
   173d4:	beq	17a2c <argp_parse@@Base+0x4f18>
   173d8:	ldr	r8, [r6, #12]
   173dc:	ldr	r9, [r7, #12]
   173e0:	cmp	r8, r9
   173e4:	beq	17ac0 <argp_parse@@Base+0x4fac>
   173e8:	ldr	sl, [r8, #12]
   173ec:	ldr	fp, [r9, #12]
   173f0:	cmp	sl, fp
   173f4:	beq	179f8 <argp_parse@@Base+0x4ee4>
   173f8:	ldr	r3, [sl, #12]
   173fc:	ldr	r2, [fp, #12]
   17400:	cmp	r3, r2
   17404:	beq	17b28 <argp_parse@@Base+0x5014>
   17408:	ldr	r0, [r3, #12]
   1740c:	ldr	r1, [r2, #12]
   17410:	cmp	r0, r1
   17414:	beq	17bd4 <argp_parse@@Base+0x50c0>
   17418:	str	r2, [sp, #8]
   1741c:	str	r3, [sp, #4]
   17420:	bl	16de0 <argp_parse@@Base+0x42cc>
   17424:	subs	r1, r0, #0
   17428:	bne	173ac <argp_parse@@Base+0x4898>
   1742c:	ldr	r2, [sp, #8]
   17430:	ldr	r3, [sp, #4]
   17434:	ldr	r0, [r2, #8]
   17438:	ldr	r1, [r3, #8]
   1743c:	mvn	ip, r0
   17440:	lsr	ip, ip, #31
   17444:	cmp	ip, r1, lsr #31
   17448:	subne	r1, r1, r0
   1744c:	subeq	r1, r0, r1
   17450:	cmp	r1, #0
   17454:	bne	173ac <argp_parse@@Base+0x4898>
   17458:	ldr	r1, [r2, #4]
   1745c:	ldr	r3, [r3, #4]
   17460:	sub	r1, r1, r3
   17464:	cmp	r1, #0
   17468:	bne	173ac <argp_parse@@Base+0x4898>
   1746c:	ldr	r1, [fp, #8]
   17470:	ldr	r3, [sl, #8]
   17474:	mvn	r2, r1
   17478:	lsr	r2, r2, #31
   1747c:	cmp	r2, r3, lsr #31
   17480:	subne	r1, r3, r1
   17484:	subeq	r1, r1, r3
   17488:	cmp	r1, #0
   1748c:	bne	173ac <argp_parse@@Base+0x4898>
   17490:	ldr	r1, [fp, #4]
   17494:	ldr	r3, [sl, #4]
   17498:	sub	r1, r1, r3
   1749c:	cmp	r1, #0
   174a0:	bne	173ac <argp_parse@@Base+0x4898>
   174a4:	ldr	r1, [r9, #8]
   174a8:	ldr	r3, [r8, #8]
   174ac:	mvn	r2, r1
   174b0:	lsr	r2, r2, #31
   174b4:	cmp	r2, r3, lsr #31
   174b8:	subne	r1, r3, r1
   174bc:	subeq	r1, r1, r3
   174c0:	cmp	r1, #0
   174c4:	bne	173ac <argp_parse@@Base+0x4898>
   174c8:	ldr	r1, [r9, #4]
   174cc:	ldr	r3, [r8, #4]
   174d0:	sub	r1, r1, r3
   174d4:	cmp	r1, #0
   174d8:	bne	173ac <argp_parse@@Base+0x4898>
   174dc:	ldr	r1, [r7, #8]
   174e0:	ldr	r3, [r6, #8]
   174e4:	mvn	r2, r1
   174e8:	lsr	r2, r2, #31
   174ec:	cmp	r2, r3, lsr #31
   174f0:	subne	r1, r3, r1
   174f4:	subeq	r1, r1, r3
   174f8:	cmp	r1, #0
   174fc:	bne	173ac <argp_parse@@Base+0x4898>
   17500:	ldr	r1, [r7, #4]
   17504:	ldr	r3, [r6, #4]
   17508:	sub	r1, r1, r3
   1750c:	cmp	r1, #0
   17510:	bne	173ac <argp_parse@@Base+0x4898>
   17514:	ldr	r1, [r5, #8]
   17518:	ldr	r3, [r4, #8]
   1751c:	mvn	r2, r1
   17520:	lsr	r2, r2, #31
   17524:	cmp	r2, r3, lsr #31
   17528:	subne	r1, r3, r1
   1752c:	subeq	r1, r1, r3
   17530:	cmp	r1, #0
   17534:	bne	173ac <argp_parse@@Base+0x4898>
   17538:	ldr	r1, [r5, #4]
   1753c:	ldr	r3, [r4, #4]
   17540:	sub	r1, r1, r3
   17544:	cmp	r1, #0
   17548:	moveq	r1, #1
   1754c:	b	173ac <argp_parse@@Base+0x4898>
   17550:	ldr	r0, [r4, #12]
   17554:	ldr	r1, [r5, #12]
   17558:	cmp	r0, r1
   1755c:	beq	17b5c <argp_parse@@Base+0x5048>
   17560:	bl	16de0 <argp_parse@@Base+0x42cc>
   17564:	subs	r1, r0, #0
   17568:	bne	173ac <argp_parse@@Base+0x4898>
   1756c:	ldr	r1, [r5, #8]
   17570:	ldr	r3, [r4, #8]
   17574:	mvn	r2, r1
   17578:	lsr	r2, r2, #31
   1757c:	cmp	r2, r3, lsr #31
   17580:	subne	r1, r3, r1
   17584:	subeq	r1, r1, r3
   17588:	cmp	r1, #0
   1758c:	bne	173ac <argp_parse@@Base+0x4898>
   17590:	ldr	r1, [r5, #4]
   17594:	ldr	r3, [r4, #4]
   17598:	sub	r1, r1, r3
   1759c:	cmp	r1, #0
   175a0:	bne	173ac <argp_parse@@Base+0x4898>
   175a4:	ldr	r1, [r6, #12]
   175a8:	ldr	r3, [fp, #12]
   175ac:	mvn	r2, r1
   175b0:	lsr	r2, r2, #31
   175b4:	cmp	r2, r3, lsr #31
   175b8:	subne	r1, r3, r1
   175bc:	subeq	r1, r1, r3
   175c0:	cmp	r1, #0
   175c4:	bne	173ac <argp_parse@@Base+0x4898>
   175c8:	ldm	fp, {r8, r9}
   175cc:	cmp	r9, #0
   175d0:	beq	17c08 <argp_parse@@Base+0x50f4>
   175d4:	add	r3, r8, #24
   175d8:	mov	r2, r9
   175dc:	ldr	r4, [r3, #-24]	; 0xffffffe8
   175e0:	cmp	r4, #0
   175e4:	beq	175f4 <argp_parse@@Base+0x4ae0>
   175e8:	ldr	r0, [r3, #-12]
   175ec:	tst	r0, #2
   175f0:	beq	17604 <argp_parse@@Base+0x4af0>
   175f4:	subs	r2, r2, #1
   175f8:	add	r3, r3, #24
   175fc:	bne	175dc <argp_parse@@Base+0x4ac8>
   17600:	mov	r4, r2
   17604:	ldm	r6, {r7, sl}
   17608:	cmp	sl, #0
   1760c:	beq	17c10 <argp_parse@@Base+0x50fc>
   17610:	add	r3, r7, #24
   17614:	mov	r2, sl
   17618:	ldr	r5, [r3, #-24]	; 0xffffffe8
   1761c:	cmp	r5, #0
   17620:	beq	17630 <argp_parse@@Base+0x4b1c>
   17624:	ldr	r0, [r3, #-12]
   17628:	tst	r0, #2
   1762c:	beq	17640 <argp_parse@@Base+0x4b2c>
   17630:	subs	r2, r2, #1
   17634:	add	r3, r3, #24
   17638:	bne	17618 <argp_parse@@Base+0x4b04>
   1763c:	mov	r5, r2
   17640:	ldr	r3, [r8, #12]
   17644:	tst	r3, #8
   17648:	beq	176b4 <argp_parse@@Base+0x4ba0>
   1764c:	cmp	r4, #0
   17650:	beq	176b4 <argp_parse@@Base+0x4ba0>
   17654:	str	r1, [sp, #4]
   17658:	bl	1118c <__ctype_b_loc@plt>
   1765c:	ldr	r1, [sp, #4]
   17660:	mov	ip, r4
   17664:	ldr	r0, [r0]
   17668:	ldrb	r2, [ip]
   1766c:	mov	r4, ip
   17670:	add	ip, ip, #1
   17674:	lsl	r3, r2, #1
   17678:	ldrh	r3, [r0, r3]
   1767c:	tst	r3, #8192	; 0x2000
   17680:	bne	17668 <argp_parse@@Base+0x4b54>
   17684:	cmp	r2, #0
   17688:	bne	176a4 <argp_parse@@Base+0x4b90>
   1768c:	b	179b0 <argp_parse@@Base+0x4e9c>
   17690:	ldrb	r3, [r4, #1]!
   17694:	cmp	r3, #0
   17698:	lsl	r3, r3, #1
   1769c:	beq	176ac <argp_parse@@Base+0x4b98>
   176a0:	ldrh	r3, [r0, r3]
   176a4:	tst	r3, #8
   176a8:	beq	17690 <argp_parse@@Base+0x4b7c>
   176ac:	cmp	r2, #45	; 0x2d
   176b0:	bne	179b0 <argp_parse@@Base+0x4e9c>
   176b4:	ldr	r3, [r7, #12]
   176b8:	tst	r3, #8
   176bc:	beq	17748 <argp_parse@@Base+0x4c34>
   176c0:	cmp	r5, #0
   176c4:	movne	r2, r1
   176c8:	beq	17748 <argp_parse@@Base+0x4c34>
   176cc:	str	r1, [sp, #8]
   176d0:	str	r2, [sp, #4]
   176d4:	bl	1118c <__ctype_b_loc@plt>
   176d8:	ldr	r2, [sp, #4]
   176dc:	ldr	r1, [sp, #8]
   176e0:	mov	r3, r5
   176e4:	ldr	ip, [r0]
   176e8:	ldrb	r0, [r3]
   176ec:	mov	r5, r3
   176f0:	add	r3, r3, #1
   176f4:	lsl	lr, r0, #1
   176f8:	ldrh	lr, [ip, lr]
   176fc:	tst	lr, #8192	; 0x2000
   17700:	bne	176e8 <argp_parse@@Base+0x4bd4>
   17704:	cmp	r0, #0
   17708:	beq	17734 <argp_parse@@Base+0x4c20>
   1770c:	tst	lr, #8
   17710:	beq	17724 <argp_parse@@Base+0x4c10>
   17714:	b	17734 <argp_parse@@Base+0x4c20>
   17718:	ldrh	r3, [ip, r3]
   1771c:	tst	r3, #8
   17720:	bne	17734 <argp_parse@@Base+0x4c20>
   17724:	ldrb	r3, [r5, #1]!
   17728:	cmp	r3, #0
   1772c:	lsl	r3, r3, #1
   17730:	bne	17718 <argp_parse@@Base+0x4c04>
   17734:	cmp	r0, #45	; 0x2d
   17738:	subne	r2, r2, #1
   1773c:	cmp	r2, #0
   17740:	movne	r1, r2
   17744:	bne	173ac <argp_parse@@Base+0x4898>
   17748:	ldr	r3, [fp, #8]
   1774c:	cmp	r9, #0
   17750:	mov	r2, r3
   17754:	beq	17c18 <argp_parse@@Base+0x5104>
   17758:	str	r7, [sp, #16]
   1775c:	str	r6, [sp, #20]
   17760:	mov	r3, #1
   17764:	str	r4, [sp, #8]
   17768:	str	r5, [sp, #12]
   1776c:	mov	r7, r1
   17770:	mov	r6, r2
   17774:	b	17790 <argp_parse@@Base+0x4c7c>
   17778:	subs	r9, r9, #1
   1777c:	moveq	ip, #0
   17780:	andne	ip, ip, #1
   17784:	cmp	ip, #0
   17788:	add	r8, r8, #24
   1778c:	beq	17824 <argp_parse@@Base+0x4d10>
   17790:	ldr	r4, [r8, #12]
   17794:	mov	ip, r3
   17798:	ands	fp, r4, #8
   1779c:	movne	fp, r7
   177a0:	bne	17778 <argp_parse@@Base+0x4c64>
   177a4:	ldr	r5, [r8, #4]
   177a8:	sub	r0, r5, #1
   177ac:	cmp	r0, #254	; 0xfe
   177b0:	bhi	17778 <argp_parse@@Base+0x4c64>
   177b4:	str	r3, [sp, #4]
   177b8:	bl	1118c <__ctype_b_loc@plt>
   177bc:	lsl	lr, r5, #1
   177c0:	ldr	r3, [sp, #4]
   177c4:	mov	ip, r3
   177c8:	ldr	r0, [r0]
   177cc:	ldrh	r0, [r0, lr]
   177d0:	tst	r0, #16384	; 0x4000
   177d4:	beq	17778 <argp_parse@@Base+0x4c64>
   177d8:	ldrb	r0, [r6]
   177dc:	mov	ip, r3
   177e0:	cmp	r5, r0
   177e4:	bne	17778 <argp_parse@@Base+0x4c64>
   177e8:	and	r4, r4, #10
   177ec:	cmp	r4, #0
   177f0:	moveq	fp, r5
   177f4:	movne	fp, #0
   177f8:	add	r6, r6, #1
   177fc:	movne	ip, #1
   17800:	moveq	ip, #0
   17804:	b	17778 <argp_parse@@Base+0x4c64>
   17808:	ldr	r5, [r6, #16]
   1780c:	ldr	ip, [r0, #12]
   17810:	cmp	r5, #0
   17814:	movne	r2, r5
   17818:	bne	17208 <argp_parse@@Base+0x46f4>
   1781c:	ldr	r3, [r6, #12]
   17820:	b	17218 <argp_parse@@Base+0x4704>
   17824:	mov	r3, fp
   17828:	ldr	r6, [sp, #20]
   1782c:	uxtb	r3, r3
   17830:	cmp	sl, #0
   17834:	str	fp, [sp, #4]
   17838:	mov	r1, r7
   1783c:	ldr	r4, [sp, #8]
   17840:	ldr	r7, [sp, #16]
   17844:	ldr	r5, [sp, #12]
   17848:	ldr	fp, [r6, #8]
   1784c:	str	r3, [sp, #16]
   17850:	beq	17a60 <argp_parse@@Base+0x4f4c>
   17854:	str	r4, [sp, #8]
   17858:	mov	r8, #1
   1785c:	str	r5, [sp, #12]
   17860:	mov	r4, r1
   17864:	b	17880 <argp_parse@@Base+0x4d6c>
   17868:	subs	sl, sl, #1
   1786c:	moveq	r3, #0
   17870:	andne	r3, r3, #1
   17874:	cmp	r3, #0
   17878:	add	r7, r7, #24
   1787c:	beq	178ec <argp_parse@@Base+0x4dd8>
   17880:	ldr	r6, [r7, #12]
   17884:	mov	r3, r8
   17888:	ands	r9, r6, #8
   1788c:	movne	r9, r4
   17890:	bne	17868 <argp_parse@@Base+0x4d54>
   17894:	ldr	r5, [r7, #4]
   17898:	sub	r0, r5, #1
   1789c:	cmp	r0, #254	; 0xfe
   178a0:	bhi	17868 <argp_parse@@Base+0x4d54>
   178a4:	bl	1118c <__ctype_b_loc@plt>
   178a8:	lsl	ip, r5, #1
   178ac:	mov	r3, r8
   178b0:	ldr	r0, [r0]
   178b4:	ldrh	r0, [r0, ip]
   178b8:	tst	r0, #16384	; 0x4000
   178bc:	beq	17868 <argp_parse@@Base+0x4d54>
   178c0:	ldrb	r0, [fp]
   178c4:	mov	r3, r8
   178c8:	cmp	r5, r0
   178cc:	bne	17868 <argp_parse@@Base+0x4d54>
   178d0:	and	r6, r6, #2
   178d4:	cmp	r6, #0
   178d8:	moveq	r9, r5
   178dc:	add	fp, fp, #1
   178e0:	movne	r3, #1
   178e4:	moveq	r3, #0
   178e8:	b	17868 <argp_parse@@Base+0x4d54>
   178ec:	mov	r1, r4
   178f0:	ldmib	sp, {r3, r4}
   178f4:	ldr	r5, [sp, #12]
   178f8:	uxtb	r6, r9
   178fc:	cmp	r3, #0
   17900:	beq	1799c <argp_parse@@Base+0x4e88>
   17904:	ldr	r3, [sp, #16]
   17908:	mov	r7, r3
   1790c:	lsl	r8, r3, #2
   17910:	cmp	r9, #0
   17914:	beq	17a78 <argp_parse@@Base+0x4f64>
   17918:	lsl	sl, r6, #2
   1791c:	bl	1115c <__ctype_tolower_loc@plt>
   17920:	ldr	r3, [r0]
   17924:	ldr	r1, [r3, r8]
   17928:	ldr	r3, [r3, sl]
   1792c:	subs	r1, r1, r3
   17930:	bne	173ac <argp_parse@@Base+0x4898>
   17934:	subs	r1, r6, r7
   17938:	bne	173ac <argp_parse@@Base+0x4898>
   1793c:	adds	r1, r9, #0
   17940:	ldr	r3, [sp, #4]
   17944:	movne	r1, #1
   17948:	cmp	r3, #0
   1794c:	rsbeq	r1, r1, #0
   17950:	rsbne	r1, r1, #1
   17954:	cmp	r1, #0
   17958:	bne	173ac <argp_parse@@Base+0x4898>
   1795c:	cmp	r3, #0
   17960:	bne	173ac <argp_parse@@Base+0x4898>
   17964:	adds	r1, r5, #0
   17968:	movne	r1, #1
   1796c:	cmp	r4, #0
   17970:	rsbeq	r1, r1, #0
   17974:	rsbne	r1, r1, #1
   17978:	cmp	r1, #0
   1797c:	bne	173ac <argp_parse@@Base+0x4898>
   17980:	cmp	r4, #0
   17984:	beq	173ac <argp_parse@@Base+0x4898>
   17988:	mov	r1, r5
   1798c:	mov	r0, r4
   17990:	add	sp, sp, #28
   17994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17998:	b	110f0 <strcasecmp@plt>
   1799c:	cmp	r4, #0
   179a0:	beq	17c44 <argp_parse@@Base+0x5130>
   179a4:	ldrb	r7, [r4]
   179a8:	lsl	r8, r7, #2
   179ac:	b	17910 <argp_parse@@Base+0x4dfc>
   179b0:	ldr	r3, [r7, #12]
   179b4:	tst	r3, #8
   179b8:	bne	17b90 <argp_parse@@Base+0x507c>
   179bc:	mov	r1, #1
   179c0:	b	173ac <argp_parse@@Base+0x4898>
   179c4:	ldr	r1, [r7, #8]
   179c8:	ldr	r3, [r6, #8]
   179cc:	mvn	r2, r1
   179d0:	ldr	r0, [r7, #4]
   179d4:	lsr	r2, r2, #31
   179d8:	cmp	r2, r3, lsr #31
   179dc:	subne	r1, r3, r1
   179e0:	subeq	r1, r1, r3
   179e4:	ldr	r2, [r6, #4]
   179e8:	cmp	r1, #0
   179ec:	subeq	r1, r0, r2
   179f0:	beq	1736c <argp_parse@@Base+0x4858>
   179f4:	b	173ac <argp_parse@@Base+0x4898>
   179f8:	ldr	r1, [r9, #8]
   179fc:	ldr	r3, [r8, #8]
   17a00:	mvn	r2, r1
   17a04:	ldr	r0, [r9, #4]
   17a08:	lsr	r2, r2, #31
   17a0c:	cmp	r2, r3, lsr #31
   17a10:	subne	r1, r3, r1
   17a14:	subeq	r1, r1, r3
   17a18:	ldr	r2, [r8, #4]
   17a1c:	cmp	r1, #0
   17a20:	subeq	r1, r0, r2
   17a24:	beq	174d4 <argp_parse@@Base+0x49c0>
   17a28:	b	173ac <argp_parse@@Base+0x4898>
   17a2c:	ldr	r1, [r5, #8]
   17a30:	ldr	r3, [r4, #8]
   17a34:	mvn	r2, r1
   17a38:	ldr	r0, [r5, #4]
   17a3c:	lsr	r2, r2, #31
   17a40:	cmp	r2, r3, lsr #31
   17a44:	subne	r1, r3, r1
   17a48:	subeq	r1, r1, r3
   17a4c:	ldr	r2, [r4, #4]
   17a50:	cmp	r1, #0
   17a54:	subeq	r1, r0, r2
   17a58:	beq	17544 <argp_parse@@Base+0x4a30>
   17a5c:	b	173ac <argp_parse@@Base+0x4898>
   17a60:	ldr	r3, [sp, #4]
   17a64:	cmp	r3, #0
   17a68:	beq	17c50 <argp_parse@@Base+0x513c>
   17a6c:	ldr	r3, [sp, #16]
   17a70:	mov	r7, r3
   17a74:	lsl	r8, r3, #2
   17a78:	cmp	r5, #0
   17a7c:	beq	17c34 <argp_parse@@Base+0x5120>
   17a80:	ldrb	r6, [r5]
   17a84:	mov	r9, r1
   17a88:	b	17918 <argp_parse@@Base+0x4e04>
   17a8c:	ldr	r1, [r5, #8]
   17a90:	ldr	r3, [r4, #8]
   17a94:	mvn	r2, r1
   17a98:	ldr	r0, [r5, #4]
   17a9c:	lsr	r2, r2, #31
   17aa0:	cmp	r2, r3, lsr #31
   17aa4:	subne	r1, r3, r1
   17aa8:	subeq	r1, r1, r3
   17aac:	ldr	r2, [r4, #4]
   17ab0:	cmp	r1, #0
   17ab4:	subeq	r1, r0, r2
   17ab8:	beq	173a4 <argp_parse@@Base+0x4890>
   17abc:	b	173ac <argp_parse@@Base+0x4898>
   17ac0:	ldr	r1, [r7, #8]
   17ac4:	ldr	r3, [r6, #8]
   17ac8:	mvn	r2, r1
   17acc:	ldr	r0, [r7, #4]
   17ad0:	lsr	r2, r2, #31
   17ad4:	cmp	r2, r3, lsr #31
   17ad8:	subne	r1, r3, r1
   17adc:	subeq	r1, r1, r3
   17ae0:	ldr	r2, [r6, #4]
   17ae4:	cmp	r1, #0
   17ae8:	subeq	r1, r0, r2
   17aec:	beq	1750c <argp_parse@@Base+0x49f8>
   17af0:	b	173ac <argp_parse@@Base+0x4898>
   17af4:	ldr	r1, [r9, #8]
   17af8:	ldr	r3, [r8, #8]
   17afc:	mvn	r2, r1
   17b00:	ldr	r0, [r9, #4]
   17b04:	lsr	r2, r2, #31
   17b08:	cmp	r2, r3, lsr #31
   17b0c:	subne	r1, r3, r1
   17b10:	subeq	r1, r1, r3
   17b14:	ldr	r2, [r8, #4]
   17b18:	cmp	r1, #0
   17b1c:	subeq	r1, r0, r2
   17b20:	beq	17334 <argp_parse@@Base+0x4820>
   17b24:	b	173ac <argp_parse@@Base+0x4898>
   17b28:	ldr	r1, [fp, #8]
   17b2c:	ldr	r3, [sl, #8]
   17b30:	mvn	r2, r1
   17b34:	ldr	r0, [fp, #4]
   17b38:	lsr	r2, r2, #31
   17b3c:	cmp	r2, r3, lsr #31
   17b40:	subne	r1, r3, r1
   17b44:	subeq	r1, r1, r3
   17b48:	ldr	r2, [sl, #4]
   17b4c:	cmp	r1, #0
   17b50:	subeq	r1, r0, r2
   17b54:	beq	1749c <argp_parse@@Base+0x4988>
   17b58:	b	173ac <argp_parse@@Base+0x4898>
   17b5c:	ldr	r1, [r5, #8]
   17b60:	ldr	r3, [r4, #8]
   17b64:	mvn	r2, r1
   17b68:	ldr	r0, [r5, #4]
   17b6c:	lsr	r2, r2, #31
   17b70:	cmp	r2, r3, lsr #31
   17b74:	subne	r1, r3, r1
   17b78:	subeq	r1, r1, r3
   17b7c:	ldr	r2, [r4, #4]
   17b80:	cmp	r1, #0
   17b84:	subeq	r1, r0, r2
   17b88:	beq	1759c <argp_parse@@Base+0x4a88>
   17b8c:	b	173ac <argp_parse@@Base+0x4898>
   17b90:	cmp	r5, #0
   17b94:	beq	179bc <argp_parse@@Base+0x4ea8>
   17b98:	mov	r2, #1
   17b9c:	b	176cc <argp_parse@@Base+0x4bb8>
   17ba0:	ldr	r1, [fp, #8]
   17ba4:	ldr	r3, [sl, #8]
   17ba8:	mvn	r2, r1
   17bac:	ldr	r0, [fp, #4]
   17bb0:	lsr	r2, r2, #31
   17bb4:	cmp	r2, r3, lsr #31
   17bb8:	subne	r1, r3, r1
   17bbc:	subeq	r1, r1, r3
   17bc0:	ldr	r2, [sl, #4]
   17bc4:	cmp	r1, #0
   17bc8:	subeq	r1, r0, r2
   17bcc:	beq	172fc <argp_parse@@Base+0x47e8>
   17bd0:	b	173ac <argp_parse@@Base+0x4898>
   17bd4:	ldr	r0, [r2, #8]
   17bd8:	ldr	r1, [r3, #8]
   17bdc:	mvn	ip, r0
   17be0:	ldr	r2, [r2, #4]
   17be4:	lsr	ip, ip, #31
   17be8:	cmp	ip, r1, lsr #31
   17bec:	subne	r1, r1, r0
   17bf0:	subeq	r1, r0, r1
   17bf4:	ldr	r3, [r3, #4]
   17bf8:	cmp	r1, #0
   17bfc:	subeq	r1, r2, r3
   17c00:	beq	17464 <argp_parse@@Base+0x4950>
   17c04:	b	173ac <argp_parse@@Base+0x4898>
   17c08:	mov	r4, r1
   17c0c:	b	17604 <argp_parse@@Base+0x4af0>
   17c10:	mov	r5, sl
   17c14:	b	17640 <argp_parse@@Base+0x4b2c>
   17c18:	cmp	sl, #0
   17c1c:	ldr	fp, [r6, #8]
   17c20:	streq	r1, [sp, #4]
   17c24:	beq	17c50 <argp_parse@@Base+0x513c>
   17c28:	str	r9, [sp, #16]
   17c2c:	str	r1, [sp, #4]
   17c30:	b	17854 <argp_parse@@Base+0x4d40>
   17c34:	mov	r9, r1
   17c38:	mov	sl, r5
   17c3c:	mov	r6, r5
   17c40:	b	1791c <argp_parse@@Base+0x4e08>
   17c44:	mov	r8, r4
   17c48:	mov	r7, r4
   17c4c:	b	17910 <argp_parse@@Base+0x4dfc>
   17c50:	cmp	r4, #0
   17c54:	moveq	r8, r4
   17c58:	moveq	r7, r4
   17c5c:	beq	17a78 <argp_parse@@Base+0x4f64>
   17c60:	mov	r9, r1
   17c64:	mov	r6, #0
   17c68:	b	179a4 <argp_parse@@Base+0x4e90>

00017c6c <argp_failure@@Base>:
   17c6c:	push	{r3}		; (str r3, [sp, #-4]!)
   17c70:	push	{r4, r5, r6, r7, lr}
   17c74:	subs	r5, r0, #0
   17c78:	sub	sp, sp, #200	; 0xc8
   17c7c:	mov	r7, r1
   17c80:	mov	r6, r2
   17c84:	beq	17dd4 <argp_failure@@Base+0x168>
   17c88:	ldr	r3, [r5, #16]
   17c8c:	tst	r3, #2
   17c90:	bne	17dc4 <argp_failure@@Base+0x158>
   17c94:	ldr	r4, [r5, #44]	; 0x2c
   17c98:	cmp	r4, #0
   17c9c:	beq	17dc4 <argp_failure@@Base+0x158>
   17ca0:	mov	r0, r4
   17ca4:	bl	11270 <flockfile@plt>
   17ca8:	ldr	r0, [r5, #40]	; 0x28
   17cac:	mov	r1, r4
   17cb0:	bl	1100c <fputs_unlocked@plt>
   17cb4:	ldr	r3, [sp, #220]	; 0xdc
   17cb8:	cmp	r3, #0
   17cbc:	beq	17d18 <argp_failure@@Base+0xac>
   17cc0:	ldr	r3, [r4, #20]
   17cc4:	ldr	r1, [r4, #24]
   17cc8:	add	r2, sp, #224	; 0xe0
   17ccc:	cmp	r3, r1
   17cd0:	str	r2, [sp]
   17cd4:	addcc	r1, r3, #1
   17cd8:	movcc	r2, #58	; 0x3a
   17cdc:	strcc	r1, [r4, #20]
   17ce0:	strbcc	r2, [r3]
   17ce4:	bcs	17e20 <argp_failure@@Base+0x1b4>
   17ce8:	ldr	r3, [r4, #20]
   17cec:	ldr	r2, [r4, #24]
   17cf0:	cmp	r3, r2
   17cf4:	addcc	r1, r3, #1
   17cf8:	movcc	r2, #32
   17cfc:	strcc	r1, [r4, #20]
   17d00:	strbcc	r2, [r3]
   17d04:	bcs	17e10 <argp_failure@@Base+0x1a4>
   17d08:	ldr	r2, [sp]
   17d0c:	ldr	r1, [sp, #220]	; 0xdc
   17d10:	mov	r0, r4
   17d14:	bl	11258 <vfprintf@plt>
   17d18:	cmp	r6, #0
   17d1c:	beq	17d80 <argp_failure@@Base+0x114>
   17d20:	ldr	r3, [r4, #20]
   17d24:	ldr	r2, [r4, #24]
   17d28:	cmp	r3, r2
   17d2c:	addcc	r1, r3, #1
   17d30:	movcc	r2, #58	; 0x3a
   17d34:	strcc	r1, [r4, #20]
   17d38:	strbcc	r2, [r3]
   17d3c:	bcs	17e40 <argp_failure@@Base+0x1d4>
   17d40:	ldr	r3, [r4, #20]
   17d44:	ldr	r2, [r4, #24]
   17d48:	cmp	r3, r2
   17d4c:	addcc	r1, r3, #1
   17d50:	movcc	r2, #32
   17d54:	strcc	r1, [r4, #20]
   17d58:	strbcc	r2, [r3]
   17d5c:	bcs	17e30 <argp_failure@@Base+0x1c4>
   17d60:	mov	r2, #200	; 0xc8
   17d64:	mov	r1, sp
   17d68:	mov	r0, r6
   17d6c:	bl	111ec <strerror_r@plt>
   17d70:	cmp	r0, #0
   17d74:	beq	17e50 <argp_failure@@Base+0x1e4>
   17d78:	mov	r1, r4
   17d7c:	bl	1100c <fputs_unlocked@plt>
   17d80:	ldr	r3, [r4, #20]
   17d84:	ldr	r2, [r4, #24]
   17d88:	cmp	r3, r2
   17d8c:	addcc	r1, r3, #1
   17d90:	movcc	r2, #10
   17d94:	strcc	r1, [r4, #20]
   17d98:	strbcc	r2, [r3]
   17d9c:	bcs	17df8 <argp_failure@@Base+0x18c>
   17da0:	mov	r0, r4
   17da4:	bl	110fc <funlockfile@plt>
   17da8:	cmp	r7, #0
   17dac:	beq	17dc4 <argp_failure@@Base+0x158>
   17db0:	cmp	r5, #0
   17db4:	beq	17e08 <argp_failure@@Base+0x19c>
   17db8:	ldr	r3, [r5, #16]
   17dbc:	tst	r3, #32
   17dc0:	beq	17e08 <argp_failure@@Base+0x19c>
   17dc4:	add	sp, sp, #200	; 0xc8
   17dc8:	pop	{r4, r5, r6, r7, lr}
   17dcc:	add	sp, sp, #4
   17dd0:	bx	lr
   17dd4:	ldr	r3, [pc, #140]	; 17e68 <argp_failure@@Base+0x1fc>
   17dd8:	ldr	r4, [r3]
   17ddc:	cmp	r4, #0
   17de0:	beq	17dc4 <argp_failure@@Base+0x158>
   17de4:	mov	r0, r4
   17de8:	bl	11270 <flockfile@plt>
   17dec:	ldr	r3, [pc, #120]	; 17e6c <argp_failure@@Base+0x200>
   17df0:	ldr	r0, [r3]
   17df4:	b	17cac <argp_failure@@Base+0x40>
   17df8:	mov	r1, #10
   17dfc:	mov	r0, r4
   17e00:	bl	11240 <__overflow@plt>
   17e04:	b	17da0 <argp_failure@@Base+0x134>
   17e08:	mov	r0, r7
   17e0c:	bl	111a4 <exit@plt>
   17e10:	mov	r1, #32
   17e14:	mov	r0, r4
   17e18:	bl	11240 <__overflow@plt>
   17e1c:	b	17d08 <argp_failure@@Base+0x9c>
   17e20:	mov	r1, #58	; 0x3a
   17e24:	mov	r0, r4
   17e28:	bl	11240 <__overflow@plt>
   17e2c:	b	17ce8 <argp_failure@@Base+0x7c>
   17e30:	mov	r1, #32
   17e34:	mov	r0, r4
   17e38:	bl	11240 <__overflow@plt>
   17e3c:	b	17d60 <argp_failure@@Base+0xf4>
   17e40:	mov	r1, #58	; 0x3a
   17e44:	mov	r0, r4
   17e48:	bl	11240 <__overflow@plt>
   17e4c:	b	17d40 <argp_failure@@Base+0xd4>
   17e50:	mov	r0, r6
   17e54:	bl	11150 <strerror@plt>
   17e58:	ldr	r3, [pc, #16]	; 17e70 <argp_failure@@Base+0x204>
   17e5c:	cmp	r0, #0
   17e60:	moveq	r0, r3
   17e64:	b	17d78 <argp_failure@@Base+0x10c>
   17e68:			; <UNDEFINED> instruction: 0x0002d3b0
   17e6c:	andeq	sp, r2, r8, lsr #7
   17e70:	andeq	ip, r1, r8, lsl r9
   17e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e78:	add	fp, sp, #32
   17e7c:	cmp	r2, #0
   17e80:	sub	sp, sp, #116	; 0x74
   17e84:	str	r2, [fp, #-136]	; 0xffffff78
   17e88:	str	r0, [fp, #-116]	; 0xffffff8c
   17e8c:	str	r1, [fp, #-104]	; 0xffffff98
   17e90:	str	r3, [fp, #-100]	; 0xffffff9c
   17e94:	beq	17fb8 <argp_failure@@Base+0x34c>
   17e98:	ldr	r3, [pc, #4076]	; 18e8c <argp_failure@@Base+0x1220>
   17e9c:	mov	r0, r2
   17ea0:	mov	r4, r3
   17ea4:	str	r3, [fp, #-96]	; 0xffffffa0
   17ea8:	bl	11270 <flockfile@plt>
   17eac:	ldr	sl, [r4, #36]	; 0x24
   17eb0:	cmp	sl, #0
   17eb4:	beq	183cc <argp_failure@@Base+0x760>
   17eb8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17ebc:	mov	r3, #0
   17ec0:	mov	r1, r3
   17ec4:	ldr	r2, [r2, #32]
   17ec8:	ldr	r0, [fp, #-136]	; 0xffffff78
   17ecc:	bl	1ae88 <argp_error@@Base+0x19e0>
   17ed0:	subs	sl, r0, #0
   17ed4:	beq	191e8 <argp_failure@@Base+0x157c>
   17ed8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17edc:	ands	r3, r3, #11
   17ee0:	streq	r3, [fp, #-108]	; 0xffffff94
   17ee4:	bne	187f8 <argp_failure@@Base+0xb8c>
   17ee8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17eec:	ands	r4, r3, #3
   17ef0:	bne	18920 <argp_failure@@Base+0xcb4>
   17ef4:	tst	r3, #16
   17ef8:	bne	188f8 <argp_failure@@Base+0xc8c>
   17efc:	tst	r3, #4
   17f00:	bne	187d8 <argp_failure@@Base+0xb6c>
   17f04:	tst	r3, #8
   17f08:	bne	17fc0 <argp_failure@@Base+0x354>
   17f0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17f10:	tst	r3, #32
   17f14:	bne	18388 <argp_failure@@Base+0x71c>
   17f18:	tst	r3, #64	; 0x40
   17f1c:	beq	17f68 <argp_failure@@Base+0x2fc>
   17f20:	ldr	r5, [pc, #3944]	; 18e90 <argp_failure@@Base+0x1224>
   17f24:	ldr	r2, [r5]
   17f28:	cmp	r2, #0
   17f2c:	beq	17f68 <argp_failure@@Base+0x2fc>
   17f30:	cmp	r4, #0
   17f34:	beq	17f5c <argp_failure@@Base+0x2f0>
   17f38:	ldr	r3, [sl, #28]
   17f3c:	ldr	r2, [sl, #32]
   17f40:	cmp	r3, r2
   17f44:	bcs	191b8 <argp_failure@@Base+0x154c>
   17f48:	add	r1, r3, #1
   17f4c:	mov	r2, #10
   17f50:	str	r1, [sl, #28]
   17f54:	strb	r2, [r3]
   17f58:	ldr	r2, [r5]
   17f5c:	ldr	r1, [pc, #3888]	; 18e94 <argp_failure@@Base+0x1228>
   17f60:	mov	r0, sl
   17f64:	bl	1b5b0 <argp_error@@Base+0x2108>
   17f68:	ldr	r0, [fp, #-136]	; 0xffffff78
   17f6c:	bl	110fc <funlockfile@plt>
   17f70:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f74:	cmp	r3, #0
   17f78:	beq	17fb0 <argp_failure@@Base+0x344>
   17f7c:	ldr	r0, [r3, #12]
   17f80:	cmp	r0, #0
   17f84:	beq	17f9c <argp_failure@@Base+0x330>
   17f88:	ldr	r4, [r0, #24]
   17f8c:	bl	13a90 <argp_parse@@Base+0xf7c>
   17f90:	subs	r0, r4, #0
   17f94:	bne	17f88 <argp_failure@@Base+0x31c>
   17f98:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f9c:	ldr	r3, [r3, #4]
   17fa0:	cmp	r3, #0
   17fa4:	bne	183b4 <argp_failure@@Base+0x748>
   17fa8:	ldr	r0, [fp, #-108]	; 0xffffff94
   17fac:	bl	13a90 <argp_parse@@Base+0xf7c>
   17fb0:	mov	r0, sl
   17fb4:	bl	1b470 <argp_error@@Base+0x1fc8>
   17fb8:	sub	sp, fp, #32
   17fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fc0:	ldr	r3, [fp, #-108]	; 0xffffff94
   17fc4:	ldr	r3, [r3, #4]
   17fc8:	cmp	r3, #0
   17fcc:	str	r3, [fp, #-112]	; 0xffffff90
   17fd0:	beq	17f0c <argp_failure@@Base+0x2a0>
   17fd4:	cmp	r4, #0
   17fd8:	beq	190c8 <argp_failure@@Base+0x145c>
   17fdc:	ldr	r3, [sl, #28]
   17fe0:	ldr	r2, [sl, #32]
   17fe4:	cmp	r3, r2
   17fe8:	bcs	19334 <argp_failure@@Base+0x16c8>
   17fec:	add	r1, r3, #1
   17ff0:	mov	r2, #10
   17ff4:	str	r1, [sl, #28]
   17ff8:	strb	r2, [r3]
   17ffc:	ldr	r3, [fp, #-108]	; 0xffffff94
   18000:	ldr	r2, [fp, #-108]	; 0xffffff94
   18004:	ldr	r3, [r3, #4]
   18008:	ldr	r8, [r2]
   1800c:	str	r3, [fp, #-112]	; 0xffffff90
   18010:	cmp	r3, #0
   18014:	mov	r3, #0
   18018:	str	r3, [fp, #-88]	; 0xffffffa8
   1801c:	str	r3, [fp, #-84]	; 0xffffffac
   18020:	str	r3, [fp, #-80]	; 0xffffffb0
   18024:	beq	18378 <argp_failure@@Base+0x70c>
   18028:	ldr	ip, [sl, #28]
   1802c:	ldr	r3, [sl, #24]
   18030:	ldr	lr, [sl, #16]
   18034:	sub	ip, ip, r3
   18038:	cmp	ip, lr
   1803c:	ldr	r6, [r8]
   18040:	ldr	r9, [r8, #8]
   18044:	bhi	18f28 <argp_failure@@Base+0x12bc>
   18048:	ldr	r3, [sl, #4]
   1804c:	ldr	r0, [r6, #12]
   18050:	str	r3, [fp, #-120]	; 0xffffff88
   18054:	ldr	r3, [sl, #12]
   18058:	mov	r7, #0
   1805c:	str	r3, [fp, #-124]	; 0xffffff84
   18060:	sub	r3, fp, #88	; 0x58
   18064:	str	r7, [sl, #4]
   18068:	str	r3, [fp, #-68]	; 0xffffffbc
   1806c:	ldr	r3, [fp, #-104]	; 0xffffff98
   18070:	ands	r0, r0, #8
   18074:	mov	r2, #1
   18078:	str	r2, [fp, #-64]	; 0xffffffc0
   1807c:	str	r8, [fp, #-76]	; 0xffffffb4
   18080:	str	sl, [fp, #-72]	; 0xffffffb8
   18084:	str	r3, [fp, #-60]	; 0xffffffc4
   18088:	strne	r7, [fp, #-132]	; 0xffffff7c
   1808c:	bne	180c8 <argp_failure@@Base+0x45c>
   18090:	ldr	r1, [r8, #4]
   18094:	cmp	r1, r7
   18098:	beq	180c4 <argp_failure@@Base+0x458>
   1809c:	add	r2, r6, #24
   180a0:	ldr	r3, [r2, #-24]	; 0xffffffe8
   180a4:	cmp	r3, #0
   180a8:	beq	180b8 <argp_failure@@Base+0x44c>
   180ac:	ldr	r3, [r2, #-12]
   180b0:	tst	r3, #2
   180b4:	beq	18f6c <argp_failure@@Base+0x1300>
   180b8:	subs	r1, r1, #1
   180bc:	add	r2, r2, #24
   180c0:	bne	180a0 <argp_failure@@Base+0x434>
   180c4:	str	r0, [fp, #-132]	; 0xffffff7c
   180c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   180cc:	cmp	ip, lr
   180d0:	ldr	r4, [r3, #8]
   180d4:	bhi	18f14 <argp_failure@@Base+0x12a8>
   180d8:	str	r4, [sl, #12]
   180dc:	ldr	r5, [r8, #4]
   180e0:	cmp	r5, #0
   180e4:	beq	18168 <argp_failure@@Base+0x4fc>
   180e8:	str	r8, [fp, #-128]	; 0xffffff80
   180ec:	mov	r4, r6
   180f0:	mov	r8, r9
   180f4:	b	18104 <argp_failure@@Base+0x498>
   180f8:	subs	r5, r5, #1
   180fc:	add	r4, r4, #24
   18100:	beq	1815c <argp_failure@@Base+0x4f0>
   18104:	ldr	r7, [r4, #12]
   18108:	tst	r7, #8
   1810c:	bne	180f8 <argp_failure@@Base+0x48c>
   18110:	ldr	r9, [r4, #4]
   18114:	sub	r2, r9, #1
   18118:	cmp	r2, #254	; 0xfe
   1811c:	bhi	180f8 <argp_failure@@Base+0x48c>
   18120:	bl	1118c <__ctype_b_loc@plt>
   18124:	lsl	r2, r9, #1
   18128:	ldr	r1, [r0]
   1812c:	ldrh	r2, [r1, r2]
   18130:	tst	r2, #16384	; 0x4000
   18134:	beq	180f8 <argp_failure@@Base+0x48c>
   18138:	ldrb	r2, [r8]
   1813c:	cmp	r9, r2
   18140:	bne	180f8 <argp_failure@@Base+0x48c>
   18144:	tst	r7, #2
   18148:	beq	18c8c <argp_failure@@Base+0x1020>
   1814c:	subs	r5, r5, #1
   18150:	add	r8, r8, #1
   18154:	add	r4, r4, #24
   18158:	bne	18104 <argp_failure@@Base+0x498>
   1815c:	ldr	r0, [r6, #12]
   18160:	ldr	r8, [fp, #-128]	; 0xffffff80
   18164:	and	r0, r0, #8
   18168:	ldr	r3, [sl, #28]
   1816c:	ldr	r1, [sl, #24]
   18170:	cmp	r0, #0
   18174:	ldr	r2, [sl, #16]
   18178:	sub	r3, r3, r1
   1817c:	beq	18bf8 <argp_failure@@Base+0xf8c>
   18180:	cmp	r3, r2
   18184:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18188:	ldr	r4, [r3, #16]
   1818c:	bhi	18f84 <argp_failure@@Base+0x1318>
   18190:	str	r4, [sl, #12]
   18194:	ldr	r5, [r8, #4]
   18198:	cmp	r5, #0
   1819c:	addne	r4, r6, #24
   181a0:	bne	181b4 <argp_failure@@Base+0x548>
   181a4:	b	18244 <argp_failure@@Base+0x5d8>
   181a8:	subs	r5, r5, #1
   181ac:	add	r4, r4, #24
   181b0:	beq	18244 <argp_failure@@Base+0x5d8>
   181b4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   181b8:	cmp	r3, #0
   181bc:	beq	181a8 <argp_failure@@Base+0x53c>
   181c0:	ldr	r3, [r4, #-12]
   181c4:	tst	r3, #2
   181c8:	bne	181a8 <argp_failure@@Base+0x53c>
   181cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   181d0:	sub	r1, fp, #76	; 0x4c
   181d4:	ldr	r0, [r3, #16]
   181d8:	bl	16b8c <argp_parse@@Base+0x4078>
   181dc:	ldr	r9, [r4, #-24]	; 0xffffffe8
   181e0:	mov	r0, r9
   181e4:	bl	111bc <strlen@plt>
   181e8:	subs	r7, r0, #0
   181ec:	beq	181a8 <argp_failure@@Base+0x53c>
   181f0:	ldr	r2, [sl, #28]
   181f4:	ldr	lr, [sl, #32]
   181f8:	add	ip, r2, r7
   181fc:	cmp	lr, ip
   18200:	mov	r1, r7
   18204:	mov	r0, sl
   18208:	bcs	1821c <argp_failure@@Base+0x5b0>
   1820c:	bl	1b4b0 <argp_error@@Base+0x2008>
   18210:	cmp	r0, #0
   18214:	beq	181a8 <argp_failure@@Base+0x53c>
   18218:	ldr	r2, [sl, #28]
   1821c:	mov	r0, r2
   18220:	mov	r1, r9
   18224:	mov	r2, r7
   18228:	bl	110a8 <memcpy@plt>
   1822c:	ldr	r2, [sl, #28]
   18230:	subs	r5, r5, #1
   18234:	add	r3, r2, r7
   18238:	str	r3, [sl, #28]
   1823c:	add	r4, r4, #24
   18240:	bne	181b4 <argp_failure@@Base+0x548>
   18244:	ldr	r3, [sl, #28]
   18248:	ldr	r1, [sl, #24]
   1824c:	ldr	r2, [sl, #16]
   18250:	sub	r3, r3, r1
   18254:	cmp	r3, r2
   18258:	bhi	18e4c <argp_failure@@Base+0x11e0>
   1825c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18260:	mov	r3, #0
   18264:	cmp	r2, r3
   18268:	str	r3, [sl, #4]
   1826c:	beq	18d0c <argp_failure@@Base+0x10a0>
   18270:	ldr	r3, [r6, #12]
   18274:	tst	r3, #8
   18278:	bne	182a4 <argp_failure@@Base+0x638>
   1827c:	ldr	r4, [r6, #4]
   18280:	sub	r3, r4, #1
   18284:	cmp	r3, #254	; 0xfe
   18288:	bhi	182a4 <argp_failure@@Base+0x638>
   1828c:	bl	1118c <__ctype_b_loc@plt>
   18290:	lsl	r4, r4, #1
   18294:	ldr	r3, [r0]
   18298:	ldrh	r3, [r3, r4]
   1829c:	tst	r3, #16384	; 0x4000
   182a0:	bne	182b0 <argp_failure@@Base+0x644>
   182a4:	ldr	r3, [r6]
   182a8:	cmp	r3, #0
   182ac:	beq	191d4 <argp_failure@@Base+0x1568>
   182b0:	ldr	r3, [sl, #28]
   182b4:	ldr	r1, [sl, #24]
   182b8:	ldr	r2, [sl, #16]
   182bc:	sub	r3, r3, r1
   182c0:	cmp	r3, r2
   182c4:	bhi	18e58 <argp_failure@@Base+0x11ec>
   182c8:	ldr	r3, [fp, #-120]	; 0xffffff88
   182cc:	str	r3, [sl, #4]
   182d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   182d4:	add	r8, r8, #28
   182d8:	subs	r3, r3, #1
   182dc:	str	r3, [fp, #-112]	; 0xffffff90
   182e0:	ldr	r3, [fp, #-124]	; 0xffffff84
   182e4:	str	r3, [sl, #12]
   182e8:	bne	18028 <argp_failure@@Base+0x3bc>
   182ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   182f0:	cmp	r3, #0
   182f4:	beq	18378 <argp_failure@@Base+0x70c>
   182f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   182fc:	ldr	r3, [r3, #4]
   18300:	cmp	r3, #0
   18304:	beq	18378 <argp_failure@@Base+0x70c>
   18308:	ldr	r1, [fp, #-104]	; 0xffffff98
   1830c:	cmp	r1, #0
   18310:	beq	19398 <argp_failure@@Base+0x172c>
   18314:	ldr	r4, [r1]
   18318:	cmp	r4, #0
   1831c:	beq	193c8 <argp_failure@@Base+0x175c>
   18320:	ldr	r3, [r4, #20]
   18324:	cmp	r3, #0
   18328:	beq	19298 <argp_failure@@Base+0x162c>
   1832c:	mov	r0, r4
   18330:	bl	13934 <argp_parse@@Base+0xe20>
   18334:	ldr	r9, [pc, #3028]	; 18f10 <argp_failure@@Base+0x12a4>
   18338:	ldr	r3, [r4, #20]
   1833c:	mov	r1, r9
   18340:	mov	r2, r0
   18344:	ldr	r0, [pc, #2892]	; 18e98 <argp_failure@@Base+0x122c>
   18348:	blx	r3
   1834c:	subs	r4, r0, #0
   18350:	beq	18378 <argp_failure@@Base+0x70c>
   18354:	ldrb	r3, [r4]
   18358:	subs	r9, r4, r9
   1835c:	movne	r9, #1
   18360:	cmp	r3, #0
   18364:	bne	192a0 <argp_failure@@Base+0x1634>
   18368:	cmp	r9, #0
   1836c:	beq	18378 <argp_failure@@Base+0x70c>
   18370:	mov	r0, r4
   18374:	bl	13a90 <argp_parse@@Base+0xf7c>
   18378:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1837c:	mov	r4, #1
   18380:	tst	r3, #32
   18384:	beq	17f18 <argp_failure@@Base+0x2ac>
   18388:	mov	r3, #0
   1838c:	str	r3, [sp]
   18390:	str	sl, [sp, #4]
   18394:	mov	r3, r4
   18398:	ldr	r1, [fp, #-104]	; 0xffffff98
   1839c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   183a0:	mov	r2, #1
   183a4:	bl	15164 <argp_parse@@Base+0x2650>
   183a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   183ac:	orr	r4, r4, r0
   183b0:	b	17f18 <argp_failure@@Base+0x2ac>
   183b4:	ldr	r4, [fp, #-108]	; 0xffffff94
   183b8:	ldr	r0, [r4]
   183bc:	bl	13a90 <argp_parse@@Base+0xf7c>
   183c0:	ldr	r0, [r4, #8]
   183c4:	bl	13a90 <argp_parse@@Base+0xf7c>
   183c8:	b	17fa8 <argp_failure@@Base+0x33c>
   183cc:	ldr	r0, [pc, #2760]	; 18e9c <argp_failure@@Base+0x1230>
   183d0:	bl	1112c <getenv@plt>
   183d4:	ldr	lr, [fp, #-96]	; 0xffffffa0
   183d8:	sub	r3, fp, #76	; 0x4c
   183dc:	mov	ip, r3
   183e0:	str	r3, [fp, #-112]	; 0xffffff90
   183e4:	mov	r5, r0
   183e8:	ldm	lr!, {r0, r1, r2, r3}
   183ec:	cmp	r5, #0
   183f0:	stmia	ip!, {r0, r1, r2, r3}
   183f4:	ldm	lr!, {r0, r1, r2, r3}
   183f8:	stmia	ip!, {r0, r1, r2, r3}
   183fc:	ldm	lr, {r0, r1}
   18400:	stm	ip, {r0, r1}
   18404:	beq	17eb8 <argp_failure@@Base+0x24c>
   18408:	ldrb	r8, [r5]
   1840c:	ldr	r9, [pc, #2700]	; 18ea0 <argp_failure@@Base+0x1234>
   18410:	str	sl, [fp, #-120]	; 0xffffff88
   18414:	cmp	r8, #0
   18418:	beq	185cc <argp_failure@@Base+0x960>
   1841c:	bl	1118c <__ctype_b_loc@plt>
   18420:	mov	r7, r0
   18424:	ldr	r0, [r0]
   18428:	b	18430 <argp_failure@@Base+0x7c4>
   1842c:	ldrb	r8, [r5, #1]!
   18430:	lsl	r3, r8, #1
   18434:	ldrh	r1, [r0, r3]
   18438:	tst	r1, #8192	; 0x2000
   1843c:	bne	1842c <argp_failure@@Base+0x7c0>
   18440:	ands	r2, r1, #1024	; 0x400
   18444:	beq	185c4 <argp_failure@@Base+0x958>
   18448:	cmp	r8, #95	; 0x5f
   1844c:	cmpne	r8, #45	; 0x2d
   18450:	lsl	r3, r1, #28
   18454:	moveq	r6, #1
   18458:	movne	r6, #0
   1845c:	orrs	r6, r6, r3, lsr #31
   18460:	beq	19068 <argp_failure@@Base+0x13fc>
   18464:	mov	r4, r5
   18468:	ldrb	r3, [r4, #1]!
   1846c:	cmp	r3, #95	; 0x5f
   18470:	cmpne	r3, #45	; 0x2d
   18474:	lsl	r1, r3, #1
   18478:	moveq	r2, #1
   1847c:	ldrh	r1, [r0, r1]
   18480:	movne	r2, #0
   18484:	lsl	ip, r1, #28
   18488:	orrs	r2, r2, ip, lsr #31
   1848c:	bne	18468 <argp_failure@@Base+0x7fc>
   18490:	tst	r1, #8192	; 0x2000
   18494:	sub	r6, r4, r5
   18498:	beq	184b0 <argp_failure@@Base+0x844>
   1849c:	ldrb	r3, [r4, #1]!
   184a0:	lsl	r2, r3, #1
   184a4:	ldrh	r1, [r0, r2]
   184a8:	tst	r1, #8192	; 0x2000
   184ac:	bne	1849c <argp_failure@@Base+0x830>
   184b0:	cmp	r3, #44	; 0x2c
   184b4:	cmpne	r3, #0
   184b8:	beq	18650 <argp_failure@@Base+0x9e4>
   184bc:	cmp	r3, #61	; 0x3d
   184c0:	beq	18bc8 <argp_failure@@Base+0xf5c>
   184c4:	tst	r1, #2048	; 0x800
   184c8:	bne	18b38 <argp_failure@@Base+0xecc>
   184cc:	ldr	r3, [fp, #-120]	; 0xffffff88
   184d0:	mov	sl, r3
   184d4:	str	r3, [fp, #-108]	; 0xffffff94
   184d8:	mov	r0, r9
   184dc:	bl	111bc <strlen@plt>
   184e0:	cmp	r6, r0
   184e4:	beq	18670 <argp_failure@@Base+0xa04>
   184e8:	ldr	r0, [pc, #2484]	; 18ea4 <argp_failure@@Base+0x1238>
   184ec:	bl	111bc <strlen@plt>
   184f0:	cmp	r6, r0
   184f4:	mov	r7, r0
   184f8:	beq	18704 <argp_failure@@Base+0xa98>
   184fc:	ldr	r0, [pc, #2556]	; 18f00 <argp_failure@@Base+0x1294>
   18500:	bl	111bc <strlen@plt>
   18504:	cmp	r6, r0
   18508:	mov	r7, r0
   1850c:	beq	186b8 <argp_failure@@Base+0xa4c>
   18510:	ldr	r0, [pc, #2532]	; 18efc <argp_failure@@Base+0x1290>
   18514:	bl	111bc <strlen@plt>
   18518:	cmp	r6, r0
   1851c:	mov	r7, r0
   18520:	beq	18724 <argp_failure@@Base+0xab8>
   18524:	ldr	r0, [pc, #2500]	; 18ef0 <argp_failure@@Base+0x1284>
   18528:	bl	111bc <strlen@plt>
   1852c:	cmp	r6, r0
   18530:	mov	r7, r0
   18534:	beq	18744 <argp_failure@@Base+0xad8>
   18538:	ldr	r8, [pc, #2504]	; 18f08 <argp_failure@@Base+0x129c>
   1853c:	mov	r0, r8
   18540:	bl	111bc <strlen@plt>
   18544:	cmp	r6, r0
   18548:	mov	r7, r0
   1854c:	beq	18764 <argp_failure@@Base+0xaf8>
   18550:	ldr	r8, [pc, #2476]	; 18f04 <argp_failure@@Base+0x1298>
   18554:	mov	r0, r8
   18558:	bl	111bc <strlen@plt>
   1855c:	cmp	r6, r0
   18560:	mov	r7, r0
   18564:	beq	18780 <argp_failure@@Base+0xb14>
   18568:	ldr	r8, [pc, #2460]	; 18f0c <argp_failure@@Base+0x12a0>
   1856c:	mov	r0, r8
   18570:	bl	111bc <strlen@plt>
   18574:	cmp	r6, r0
   18578:	mov	r7, r0
   1857c:	beq	1879c <argp_failure@@Base+0xb30>
   18580:	ldr	r8, [pc, #2336]	; 18ea8 <argp_failure@@Base+0x123c>
   18584:	mov	r0, r8
   18588:	bl	111bc <strlen@plt>
   1858c:	cmp	r0, r6
   18590:	beq	187b8 <argp_failure@@Base+0xb4c>
   18594:	mov	r2, #0
   18598:	str	r5, [sp, #4]
   1859c:	str	r6, [sp]
   185a0:	mov	r1, r2
   185a4:	ldr	r3, [pc, #2304]	; 18eac <argp_failure@@Base+0x1240>
   185a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   185ac:	bl	17c6c <argp_failure@@Base>
   185b0:	ldrb	r8, [r4]
   185b4:	cmp	r8, #44	; 0x2c
   185b8:	beq	186ac <argp_failure@@Base+0xa40>
   185bc:	mov	r5, r4
   185c0:	b	18414 <argp_failure@@Base+0x7a8>
   185c4:	cmp	r8, #0
   185c8:	bne	19174 <argp_failure@@Base+0x1508>
   185cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   185d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   185d4:	cmp	r3, r2
   185d8:	ble	19358 <argp_failure@@Base+0x16ec>
   185dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   185e0:	cmp	r3, r2
   185e4:	ble	191b0 <argp_failure@@Base+0x1544>
   185e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   185ec:	cmp	r3, r2
   185f0:	ble	1918c <argp_failure@@Base+0x1520>
   185f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   185f8:	cmp	r3, r2
   185fc:	ble	19390 <argp_failure@@Base+0x1724>
   18600:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18604:	cmp	r3, r2
   18608:	ble	19388 <argp_failure@@Base+0x171c>
   1860c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18610:	cmp	r3, r2
   18614:	ble	193a4 <argp_failure@@Base+0x1738>
   18618:	ldr	lr, [fp, #-112]	; 0xffffff90
   1861c:	ldr	r3, [pc, #2152]	; 18e8c <argp_failure@@Base+0x1220>
   18620:	mov	r4, #1
   18624:	mov	r5, r3
   18628:	str	r3, [fp, #-96]	; 0xffffffa0
   1862c:	ldm	lr!, {r0, r1, r2, r3}
   18630:	mov	ip, r5
   18634:	stmia	ip!, {r0, r1, r2, r3}
   18638:	ldm	lr!, {r0, r1, r2, r3}
   1863c:	stmia	ip!, {r0, r1, r2, r3}
   18640:	ldm	lr, {r0, r1}
   18644:	stm	ip, {r0, r1}
   18648:	str	r4, [r5, #36]	; 0x24
   1864c:	b	17eb8 <argp_failure@@Base+0x24c>
   18650:	cmp	r8, #110	; 0x6e
   18654:	beq	18b98 <argp_failure@@Base+0xf2c>
   18658:	mov	sl, #1
   1865c:	mov	r0, r9
   18660:	str	sl, [fp, #-108]	; 0xffffff94
   18664:	bl	111bc <strlen@plt>
   18668:	cmp	r6, r0
   1866c:	bne	184e8 <argp_failure@@Base+0x87c>
   18670:	mov	r2, r6
   18674:	mov	r1, r9
   18678:	mov	r0, r5
   1867c:	bl	112b8 <strncmp@plt>
   18680:	cmp	r0, #0
   18684:	bne	184e8 <argp_failure@@Base+0x87c>
   18688:	mov	r8, r9
   1868c:	ldrb	r3, [r8, #15]
   18690:	ldrb	r8, [r4]
   18694:	sub	r2, fp, #36	; 0x24
   18698:	add	r3, r2, r3
   1869c:	ldr	r2, [fp, #-108]	; 0xffffff94
   186a0:	cmp	r8, #44	; 0x2c
   186a4:	str	r2, [r3, #-40]	; 0xffffffd8
   186a8:	bne	185bc <argp_failure@@Base+0x950>
   186ac:	ldrb	r8, [r4, #1]
   186b0:	add	r4, r4, #1
   186b4:	b	185bc <argp_failure@@Base+0x950>
   186b8:	mov	r2, r0
   186bc:	ldr	r1, [pc, #2108]	; 18f00 <argp_failure@@Base+0x1294>
   186c0:	mov	r0, r5
   186c4:	bl	112b8 <strncmp@plt>
   186c8:	cmp	r0, #0
   186cc:	bne	18510 <argp_failure@@Base+0x8a4>
   186d0:	ldr	r8, [pc, #2088]	; 18f00 <argp_failure@@Base+0x1294>
   186d4:	cmp	sl, #0
   186d8:	beq	1868c <argp_failure@@Base+0xa20>
   186dc:	ldrb	r2, [r8, #14]
   186e0:	cmp	r2, #0
   186e4:	bne	1868c <argp_failure@@Base+0xa20>
   186e8:	str	r5, [sp, #4]
   186ec:	str	r7, [sp]
   186f0:	ldr	r3, [pc, #1976]	; 18eb0 <argp_failure@@Base+0x1244>
   186f4:	mov	r1, r2
   186f8:	ldr	r0, [fp, #-104]	; 0xffffff98
   186fc:	bl	17c6c <argp_failure@@Base>
   18700:	b	185b0 <argp_failure@@Base+0x944>
   18704:	mov	r2, r0
   18708:	ldr	r1, [pc, #1940]	; 18ea4 <argp_failure@@Base+0x1238>
   1870c:	mov	r0, r5
   18710:	bl	112b8 <strncmp@plt>
   18714:	cmp	r0, #0
   18718:	bne	184fc <argp_failure@@Base+0x890>
   1871c:	ldr	r8, [pc, #1920]	; 18ea4 <argp_failure@@Base+0x1238>
   18720:	b	186d4 <argp_failure@@Base+0xa68>
   18724:	mov	r2, r0
   18728:	ldr	r1, [pc, #1996]	; 18efc <argp_failure@@Base+0x1290>
   1872c:	mov	r0, r5
   18730:	bl	112b8 <strncmp@plt>
   18734:	cmp	r0, #0
   18738:	bne	18524 <argp_failure@@Base+0x8b8>
   1873c:	ldr	r8, [pc, #1976]	; 18efc <argp_failure@@Base+0x1290>
   18740:	b	186d4 <argp_failure@@Base+0xa68>
   18744:	mov	r2, r0
   18748:	ldr	r1, [pc, #1952]	; 18ef0 <argp_failure@@Base+0x1284>
   1874c:	mov	r0, r5
   18750:	bl	112b8 <strncmp@plt>
   18754:	cmp	r0, #0
   18758:	bne	18538 <argp_failure@@Base+0x8cc>
   1875c:	ldr	r8, [pc, #1932]	; 18ef0 <argp_failure@@Base+0x1284>
   18760:	b	186d4 <argp_failure@@Base+0xa68>
   18764:	mov	r2, r0
   18768:	mov	r1, r8
   1876c:	mov	r0, r5
   18770:	bl	112b8 <strncmp@plt>
   18774:	cmp	r0, #0
   18778:	bne	18550 <argp_failure@@Base+0x8e4>
   1877c:	b	186d4 <argp_failure@@Base+0xa68>
   18780:	mov	r2, r0
   18784:	mov	r1, r8
   18788:	mov	r0, r5
   1878c:	bl	112b8 <strncmp@plt>
   18790:	cmp	r0, #0
   18794:	bne	18568 <argp_failure@@Base+0x8fc>
   18798:	b	186d4 <argp_failure@@Base+0xa68>
   1879c:	mov	r2, r0
   187a0:	mov	r1, r8
   187a4:	mov	r0, r5
   187a8:	bl	112b8 <strncmp@plt>
   187ac:	cmp	r0, #0
   187b0:	bne	18580 <argp_failure@@Base+0x914>
   187b4:	b	186d4 <argp_failure@@Base+0xa68>
   187b8:	mov	r2, r6
   187bc:	mov	r1, r8
   187c0:	mov	r0, r5
   187c4:	bl	112b8 <strncmp@plt>
   187c8:	cmp	r0, #0
   187cc:	moveq	r7, r6
   187d0:	bne	18594 <argp_failure@@Base+0x928>
   187d4:	b	186d4 <argp_failure@@Base+0xa68>
   187d8:	ldr	r3, [fp, #4]
   187dc:	ldr	r1, [pc, #1744]	; 18eb4 <argp_failure@@Base+0x1248>
   187e0:	mov	r2, r3
   187e4:	mov	r0, sl
   187e8:	bl	1b5b0 <argp_error@@Base+0x2108>
   187ec:	mov	r4, #1
   187f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   187f4:	b	17f04 <argp_failure@@Base+0x298>
   187f8:	mov	r1, #0
   187fc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18800:	bl	15710 <argp_parse@@Base+0x2bfc>
   18804:	ldr	r2, [r0, #4]
   18808:	ldr	r3, [r0]
   1880c:	cmp	r2, #0
   18810:	str	r0, [fp, #-108]	; 0xffffff94
   18814:	str	r2, [fp, #-120]	; 0xffffff88
   18818:	str	r3, [fp, #-112]	; 0xffffff90
   1881c:	sub	r6, r2, #1
   18820:	beq	17ee8 <argp_failure@@Base+0x27c>
   18824:	ldr	r5, [pc, #1676]	; 18eb8 <argp_failure@@Base+0x124c>
   18828:	mov	r8, r6
   1882c:	mov	r7, r3
   18830:	ldm	r7, {r4, r9}
   18834:	cmp	r9, #0
   18838:	sub	r9, r9, #1
   1883c:	beq	1887c <argp_failure@@Base+0xc10>
   18840:	add	r4, r4, #24
   18844:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18848:	mov	r1, r5
   1884c:	subs	r0, r3, #0
   18850:	sub	r9, r9, #1
   18854:	beq	18870 <argp_failure@@Base+0xc04>
   18858:	ldr	r3, [r4, #-12]
   1885c:	tst	r3, #2
   18860:	bne	18870 <argp_failure@@Base+0xc04>
   18864:	bl	11030 <strcmp@plt>
   18868:	cmp	r0, #0
   1886c:	beq	19010 <argp_failure@@Base+0x13a4>
   18870:	cmn	r9, #1
   18874:	add	r4, r4, #24
   18878:	bne	18844 <argp_failure@@Base+0xbd8>
   1887c:	sub	r8, r8, #1
   18880:	cmn	r8, #1
   18884:	add	r7, r7, #28
   18888:	bne	18830 <argp_failure@@Base+0xbc4>
   1888c:	ldr	r7, [fp, #-112]	; 0xffffff90
   18890:	ldr	r9, [pc, #1572]	; 18ebc <argp_failure@@Base+0x1250>
   18894:	ldm	r7, {r4, r5}
   18898:	cmp	r5, #0
   1889c:	sub	r5, r5, #1
   188a0:	beq	188e0 <argp_failure@@Base+0xc74>
   188a4:	add	r4, r4, #24
   188a8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   188ac:	mov	r1, r9
   188b0:	subs	r0, r3, #0
   188b4:	sub	r5, r5, #1
   188b8:	beq	188d4 <argp_failure@@Base+0xc68>
   188bc:	ldr	r3, [r4, #-12]
   188c0:	tst	r3, #2
   188c4:	bne	188d4 <argp_failure@@Base+0xc68>
   188c8:	bl	11030 <strcmp@plt>
   188cc:	cmp	r0, #0
   188d0:	beq	18fc8 <argp_failure@@Base+0x135c>
   188d4:	cmn	r5, #1
   188d8:	add	r4, r4, #24
   188dc:	bne	188a8 <argp_failure@@Base+0xc3c>
   188e0:	cmp	r6, #0
   188e4:	add	r7, r7, #28
   188e8:	sub	r6, r6, #1
   188ec:	bne	18894 <argp_failure@@Base+0xc28>
   188f0:	ldr	r1, [fp, #-120]	; 0xffffff88
   188f4:	b	18fe0 <argp_failure@@Base+0x1374>
   188f8:	mov	r2, #1
   188fc:	mov	r3, #0
   18900:	stm	sp, {r2, sl}
   18904:	ldr	r1, [fp, #-104]	; 0xffffff98
   18908:	mov	r2, r3
   1890c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18910:	bl	15164 <argp_parse@@Base+0x2650>
   18914:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18918:	orr	r4, r4, r0
   1891c:	b	17efc <argp_failure@@Base+0x290>
   18920:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18924:	mov	r4, #1
   18928:	ldr	r8, [pc, #1424]	; 18ec0 <argp_failure@@Base+0x1254>
   1892c:	ldr	r1, [r3, #16]
   18930:	ldr	r0, [r3, #8]
   18934:	bl	16110 <argp_parse@@Base+0x35fc>
   18938:	mov	r1, #0
   1893c:	mov	r6, r4
   18940:	add	r3, r0, #14
   18944:	bic	r3, r3, #7
   18948:	sub	sp, sp, r3
   1894c:	add	r7, sp, #8
   18950:	mov	r2, r0
   18954:	mov	r0, r7
   18958:	bl	11204 <memset@plt>
   1895c:	sub	r3, fp, #76	; 0x4c
   18960:	str	r3, [fp, #-112]	; 0xffffff90
   18964:	str	r7, [fp, #-120]	; 0xffffff88
   18968:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1896c:	b	18a8c <argp_failure@@Base+0xe20>
   18970:	cmp	r4, #0
   18974:	ldr	r3, [fp, #-120]	; 0xffffff88
   18978:	ldr	r7, [sl, #12]
   1897c:	ldrne	r2, [pc, #1344]	; 18ec4 <argp_failure@@Base+0x1258>
   18980:	str	r9, [sl, #12]
   18984:	ldreq	r2, [pc, #1340]	; 18ec8 <argp_failure@@Base+0x125c>
   18988:	str	r3, [fp, #-76]	; 0xffffffb4
   1898c:	mov	r1, r8
   18990:	ldr	r3, [fp, #4]
   18994:	mov	r0, sl
   18998:	bl	1b5b0 <argp_error@@Base+0x2108>
   1899c:	ldr	r3, [sl, #28]
   189a0:	ldr	r1, [sl, #24]
   189a4:	ldr	r2, [sl, #16]
   189a8:	sub	r3, r3, r1
   189ac:	cmp	r3, r2
   189b0:	ldr	r9, [r5, #28]
   189b4:	bhi	18b04 <argp_failure@@Base+0xe98>
   189b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   189bc:	ldr	r4, [sl, #4]
   189c0:	tst	r3, #2
   189c4:	str	r9, [sl, #4]
   189c8:	beq	18b10 <argp_failure@@Base+0xea4>
   189cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   189d0:	ldr	r3, [r3, #4]
   189d4:	cmp	r3, #0
   189d8:	beq	18a28 <argp_failure@@Base+0xdbc>
   189dc:	ldr	ip, [sl, #28]
   189e0:	ldr	r2, [sl, #32]
   189e4:	add	r3, ip, #12
   189e8:	cmp	r2, r3
   189ec:	bcs	18a08 <argp_failure@@Base+0xd9c>
   189f0:	mov	r1, #12
   189f4:	mov	r0, sl
   189f8:	bl	1b4b0 <argp_error@@Base+0x2008>
   189fc:	cmp	r0, #0
   18a00:	beq	18a28 <argp_failure@@Base+0xdbc>
   18a04:	ldr	ip, [sl, #28]
   18a08:	ldr	r3, [pc, #1212]	; 18ecc <argp_failure@@Base+0x1260>
   18a0c:	ldm	r3!, {r0, r1, r2}
   18a10:	str	r0, [ip]
   18a14:	str	r1, [ip, #4]
   18a18:	str	r2, [ip, #8]
   18a1c:	ldr	r3, [sl, #28]
   18a20:	add	r3, r3, #12
   18a24:	str	r3, [sl, #28]
   18a28:	mov	r3, r6
   18a2c:	ldr	r1, [fp, #-104]	; 0xffffff98
   18a30:	str	sl, [sp]
   18a34:	ldr	r2, [fp, #-112]	; 0xffffff90
   18a38:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18a3c:	bl	15e30 <argp_parse@@Base+0x331c>
   18a40:	ldr	r3, [sl, #28]
   18a44:	ldr	r1, [sl, #24]
   18a48:	sub	r1, r3, r1
   18a4c:	mov	r9, r0
   18a50:	ldr	r0, [sl, #16]
   18a54:	cmp	r1, r0
   18a58:	strls	r7, [sl, #12]
   18a5c:	bhi	18ad0 <argp_failure@@Base+0xe64>
   18a60:	ldr	r1, [sl, #32]
   18a64:	str	r4, [sl, #4]
   18a68:	cmp	r1, r3
   18a6c:	bls	18ab4 <argp_failure@@Base+0xe48>
   18a70:	add	r1, r3, #1
   18a74:	mov	r2, #10
   18a78:	str	r1, [sl, #28]
   18a7c:	strb	r2, [r3]
   18a80:	cmp	r9, #0
   18a84:	mov	r4, #0
   18a88:	beq	18b2c <argp_failure@@Base+0xec0>
   18a8c:	ldr	r3, [sl, #28]
   18a90:	ldr	r1, [sl, #24]
   18a94:	ldr	r2, [sl, #16]
   18a98:	sub	r3, r3, r1
   18a9c:	cmp	r3, r2
   18aa0:	ldr	r9, [r5, #28]
   18aa4:	bls	18970 <argp_failure@@Base+0xd04>
   18aa8:	mov	r0, sl
   18aac:	bl	1af04 <argp_error@@Base+0x1a5c>
   18ab0:	b	18970 <argp_failure@@Base+0xd04>
   18ab4:	mov	r1, r6
   18ab8:	mov	r0, sl
   18abc:	bl	1b4b0 <argp_error@@Base+0x2008>
   18ac0:	cmp	r0, #0
   18ac4:	beq	18a80 <argp_failure@@Base+0xe14>
   18ac8:	ldr	r3, [sl, #28]
   18acc:	b	18a70 <argp_failure@@Base+0xe04>
   18ad0:	mov	r0, sl
   18ad4:	bl	1af04 <argp_error@@Base+0x1a5c>
   18ad8:	ldr	r3, [sl, #28]
   18adc:	ldr	r1, [sl, #24]
   18ae0:	ldr	r0, [sl, #16]
   18ae4:	sub	r1, r3, r1
   18ae8:	cmp	r1, r0
   18aec:	str	r7, [sl, #12]
   18af0:	bls	18a60 <argp_failure@@Base+0xdf4>
   18af4:	mov	r0, sl
   18af8:	bl	1af04 <argp_error@@Base+0x1a5c>
   18afc:	ldr	r3, [sl, #28]
   18b00:	b	18a60 <argp_failure@@Base+0xdf4>
   18b04:	mov	r0, sl
   18b08:	bl	1af04 <argp_error@@Base+0x1a5c>
   18b0c:	b	189b8 <argp_failure@@Base+0xd4c>
   18b10:	mov	r1, sl
   18b14:	ldr	r0, [fp, #-108]	; 0xffffff94
   18b18:	bl	1645c <argp_parse@@Base+0x3948>
   18b1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18b20:	orr	r3, r3, #2
   18b24:	str	r3, [fp, #-100]	; 0xffffff9c
   18b28:	b	18a28 <argp_failure@@Base+0xdbc>
   18b2c:	mov	r4, #1
   18b30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18b34:	b	17ef4 <argp_failure@@Base+0x288>
   18b38:	mov	r2, #10
   18b3c:	mov	r1, #0
   18b40:	mov	r0, r4
   18b44:	bl	1103c <strtol@plt>
   18b48:	ldrb	r3, [r4]
   18b4c:	ldr	r2, [r7]
   18b50:	lsl	r3, r3, #1
   18b54:	ldrh	r3, [r2, r3]
   18b58:	tst	r3, #2048	; 0x800
   18b5c:	str	r0, [fp, #-108]	; 0xffffff94
   18b60:	beq	18b88 <argp_failure@@Base+0xf1c>
   18b64:	ldrb	r3, [r4, #1]!
   18b68:	lsl	r3, r3, #1
   18b6c:	ldrh	r3, [r2, r3]
   18b70:	tst	r3, #2048	; 0x800
   18b74:	bne	18b64 <argp_failure@@Base+0xef8>
   18b78:	b	18b88 <argp_failure@@Base+0xf1c>
   18b7c:	ldrb	r3, [r4, #1]!
   18b80:	lsl	r3, r3, #1
   18b84:	ldrh	r3, [r2, r3]
   18b88:	tst	r3, #8192	; 0x2000
   18b8c:	bne	18b7c <argp_failure@@Base+0xf10>
   18b90:	ldr	sl, [fp, #-120]	; 0xffffff88
   18b94:	b	184d8 <argp_failure@@Base+0x86c>
   18b98:	ldrb	r3, [r5, #1]
   18b9c:	cmp	r3, #111	; 0x6f
   18ba0:	bne	18658 <argp_failure@@Base+0x9ec>
   18ba4:	ldrb	r3, [r5, #2]
   18ba8:	cmp	r3, #45	; 0x2d
   18bac:	bne	18658 <argp_failure@@Base+0x9ec>
   18bb0:	ldr	r3, [fp, #-120]	; 0xffffff88
   18bb4:	add	r5, r5, #3
   18bb8:	sub	r6, r6, #3
   18bbc:	str	r3, [fp, #-108]	; 0xffffff94
   18bc0:	mov	sl, #1
   18bc4:	b	184d8 <argp_failure@@Base+0x86c>
   18bc8:	ldrb	r3, [r4, #1]
   18bcc:	add	r4, r4, #1
   18bd0:	lsl	r3, r3, #1
   18bd4:	ldrh	r1, [r0, r3]
   18bd8:	tst	r1, #8192	; 0x2000
   18bdc:	beq	184c4 <argp_failure@@Base+0x858>
   18be0:	ldrb	r3, [r4, #1]!
   18be4:	lsl	r3, r3, #1
   18be8:	ldrh	r1, [r0, r3]
   18bec:	tst	r1, #8192	; 0x2000
   18bf0:	bne	18be0 <argp_failure@@Base+0xf74>
   18bf4:	b	184c4 <argp_failure@@Base+0x858>
   18bf8:	cmp	r3, r2
   18bfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18c00:	ldr	r4, [r3, #12]
   18c04:	bhi	18f78 <argp_failure@@Base+0x130c>
   18c08:	str	r4, [sl, #12]
   18c0c:	ldr	r5, [r8, #4]
   18c10:	cmp	r5, #0
   18c14:	beq	18244 <argp_failure@@Base+0x5d8>
   18c18:	add	r4, r6, #24
   18c1c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   18c20:	b	18c30 <argp_failure@@Base+0xfc4>
   18c24:	subs	r5, r5, #1
   18c28:	add	r4, r4, #24
   18c2c:	beq	18244 <argp_failure@@Base+0x5d8>
   18c30:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18c34:	cmp	r3, #0
   18c38:	beq	18c24 <argp_failure@@Base+0xfb8>
   18c3c:	ldr	r3, [r4, #-12]
   18c40:	tst	r3, #2
   18c44:	bne	18c24 <argp_failure@@Base+0xfb8>
   18c48:	sub	r1, fp, #76	; 0x4c
   18c4c:	ldr	r0, [r7, #12]
   18c50:	bl	16b8c <argp_parse@@Base+0x4078>
   18c54:	ldr	r2, [r4, #-24]	; 0xffffffe8
   18c58:	ldr	r1, [pc, #624]	; 18ed0 <argp_failure@@Base+0x1264>
   18c5c:	mov	r0, sl
   18c60:	bl	1b5b0 <argp_error@@Base+0x2108>
   18c64:	ldr	r3, [r6, #8]
   18c68:	ldr	r1, [pc, #612]	; 18ed4 <argp_failure@@Base+0x1268>
   18c6c:	subs	r2, r3, #0
   18c70:	mov	r0, sl
   18c74:	beq	18c24 <argp_failure@@Base+0xfb8>
   18c78:	ldr	ip, [r6, #12]
   18c7c:	tst	ip, #1
   18c80:	ldrne	r1, [pc, #592]	; 18ed8 <argp_failure@@Base+0x126c>
   18c84:	bl	1b5b0 <argp_error@@Base+0x2108>
   18c88:	b	18c24 <argp_failure@@Base+0xfb8>
   18c8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18c90:	sub	r1, fp, #76	; 0x4c
   18c94:	ldr	r0, [r3, #8]
   18c98:	bl	16b8c <argp_parse@@Base+0x4078>
   18c9c:	ldr	r2, [sl, #28]
   18ca0:	ldr	r1, [sl, #32]
   18ca4:	cmp	r2, r1
   18ca8:	bcs	18fac <argp_failure@@Base+0x1340>
   18cac:	add	r1, r2, #1
   18cb0:	mov	r3, #45	; 0x2d
   18cb4:	str	r1, [sl, #28]
   18cb8:	strb	r3, [r2]
   18cbc:	ldr	r2, [sl, #28]
   18cc0:	ldr	r1, [sl, #32]
   18cc4:	ldrb	r7, [r8]
   18cc8:	cmp	r2, r1
   18ccc:	bcs	18f90 <argp_failure@@Base+0x1324>
   18cd0:	add	r1, r2, #1
   18cd4:	str	r1, [sl, #28]
   18cd8:	strb	r7, [r2]
   18cdc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18ce0:	cmp	r3, #0
   18ce4:	beq	18f44 <argp_failure@@Base+0x12d8>
   18ce8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18cec:	ldr	r2, [r3]
   18cf0:	cmp	r2, #0
   18cf4:	bne	18f44 <argp_failure@@Base+0x12d8>
   18cf8:	ldr	r2, [r6, #8]
   18cfc:	cmp	r2, #0
   18d00:	movne	r3, #1
   18d04:	strne	r3, [fp, #-80]	; 0xffffffb0
   18d08:	b	1814c <argp_failure@@Base+0x4e0>
   18d0c:	ldr	r5, [r8, #20]
   18d10:	ldr	r9, [r6, #16]
   18d14:	cmp	r5, #0
   18d18:	beq	19034 <argp_failure@@Base+0x13c8>
   18d1c:	ldr	r3, [r5, #20]
   18d20:	cmp	r3, #0
   18d24:	beq	19034 <argp_failure@@Base+0x13c8>
   18d28:	ldr	r1, [fp, #-104]	; 0xffffff98
   18d2c:	mov	r0, r5
   18d30:	ldr	r4, [r6, #4]
   18d34:	bl	13934 <argp_parse@@Base+0xe20>
   18d38:	ldr	r3, [r5, #20]
   18d3c:	mov	r1, r9
   18d40:	mov	r2, r0
   18d44:	mov	r0, r4
   18d48:	blx	r3
   18d4c:	mov	r4, r0
   18d50:	cmp	r4, #0
   18d54:	beq	18e08 <argp_failure@@Base+0x119c>
   18d58:	ldrb	r3, [r4]
   18d5c:	cmp	r3, #0
   18d60:	beq	18df8 <argp_failure@@Base+0x118c>
   18d64:	ldr	r3, [sl, #28]
   18d68:	ldr	r2, [sl, #24]
   18d6c:	ldr	r1, [sl, #16]
   18d70:	sub	r2, r3, r2
   18d74:	cmp	r2, r1
   18d78:	bhi	19100 <argp_failure@@Base+0x1494>
   18d7c:	ldr	r6, [sl, #20]
   18d80:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18d84:	bic	r6, r6, r6, asr #31
   18d88:	ldr	r5, [r2, #20]
   18d8c:	mov	r7, r5
   18d90:	str	r5, [sl, #4]
   18d94:	add	r2, r5, #3
   18d98:	cmp	r2, r6
   18d9c:	str	r7, [sl, #12]
   18da0:	bcs	19074 <argp_failure@@Base+0x1408>
   18da4:	ldr	r2, [sl, #32]
   18da8:	cmp	r2, r3
   18dac:	bls	1927c <argp_failure@@Base+0x1610>
   18db0:	add	r1, r3, #1
   18db4:	mov	r2, #10
   18db8:	str	r1, [sl, #28]
   18dbc:	strb	r2, [r3]
   18dc0:	mov	r0, r4
   18dc4:	bl	111bc <strlen@plt>
   18dc8:	subs	r5, r0, #0
   18dcc:	beq	18df8 <argp_failure@@Base+0x118c>
   18dd0:	ldr	r0, [sl, #28]
   18dd4:	ldr	r2, [sl, #32]
   18dd8:	add	r3, r0, r5
   18ddc:	cmp	r2, r3
   18de0:	bcs	190e4 <argp_failure@@Base+0x1478>
   18de4:	mov	r1, r5
   18de8:	mov	r0, sl
   18dec:	bl	1b4b0 <argp_error@@Base+0x2008>
   18df0:	cmp	r0, #0
   18df4:	bne	190e0 <argp_failure@@Base+0x1474>
   18df8:	cmp	r9, r4
   18dfc:	beq	18e08 <argp_failure@@Base+0x119c>
   18e00:	mov	r0, r4
   18e04:	bl	13a90 <argp_parse@@Base+0xf7c>
   18e08:	ldr	r3, [sl, #28]
   18e0c:	ldr	r2, [sl, #24]
   18e10:	ldr	r1, [sl, #16]
   18e14:	sub	r2, r3, r2
   18e18:	cmp	r2, r1
   18e1c:	bhi	19058 <argp_failure@@Base+0x13ec>
   18e20:	ldr	r1, [sl, #32]
   18e24:	mov	r2, #0
   18e28:	cmp	r1, r3
   18e2c:	str	r2, [sl, #4]
   18e30:	bls	1903c <argp_failure@@Base+0x13d0>
   18e34:	add	r1, r3, #1
   18e38:	mov	r2, #10
   18e3c:	str	r1, [sl, #28]
   18e40:	strb	r2, [r3]
   18e44:	str	r8, [fp, #-88]	; 0xffffffa8
   18e48:	b	182b0 <argp_failure@@Base+0x644>
   18e4c:	mov	r0, sl
   18e50:	bl	1af04 <argp_error@@Base+0x1a5c>
   18e54:	b	1825c <argp_failure@@Base+0x5f0>
   18e58:	mov	r0, sl
   18e5c:	bl	1af04 <argp_error@@Base+0x1a5c>
   18e60:	ldr	r2, [fp, #-120]	; 0xffffff88
   18e64:	ldr	r3, [sl, #28]
   18e68:	ldr	r1, [sl, #24]
   18e6c:	str	r2, [sl, #4]
   18e70:	ldr	r2, [sl, #16]
   18e74:	sub	r3, r3, r1
   18e78:	cmp	r3, r2
   18e7c:	bls	182d0 <argp_failure@@Base+0x664>
   18e80:	mov	r0, sl
   18e84:	bl	1af04 <argp_error@@Base+0x1a5c>
   18e88:	b	182d0 <argp_failure@@Base+0x664>
   18e8c:	andeq	sp, r2, ip, ror #6
   18e90:	andeq	sp, r2, r8, lsl r4
   18e94:	andeq	ip, r1, r8, ror #21
   18e98:	andeq	r0, r0, #5
   18e9c:	andeq	ip, r1, r4, lsr #19
   18ea0:	andeq	ip, r1, r0, ror r7
   18ea4:	andeq	ip, r1, r0, lsl #15
   18ea8:	strdeq	ip, [r1], -r0
   18eac:	andeq	ip, r1, r4, ror #19
   18eb0:			; <UNDEFINED> instruction: 0x0001c9b4
   18eb4:	muleq	r1, r0, sl
   18eb8:	strdeq	ip, [r1], -r4
   18ebc:	ldrdeq	ip, [r1], -r4
   18ec0:	andeq	ip, r1, r0, ror sl
   18ec4:	andeq	ip, r1, r8, ror #20
   18ec8:	andeq	ip, r1, r8, ror sl
   18ecc:	andeq	ip, r1, r0, lsl #21
   18ed0:	ldrdeq	ip, [r1], -r0
   18ed4:	andeq	ip, r1, r0, ror #21
   18ed8:	ldrdeq	ip, [r1], -r8
   18edc:	andeq	ip, r1, r8, asr #21
   18ee0:	andeq	ip, r1, r4, lsr #5
   18ee4:			; <UNDEFINED> instruction: 0x000171bc
   18ee8:	andeq	ip, r1, r4, ror #21
   18eec:	andeq	ip, r1, ip, lsl #20
   18ef0:			; <UNDEFINED> instruction: 0x0001c7b0
   18ef4:	andeq	ip, r1, r0, ror #20
   18ef8:	andeq	ip, r1, ip, lsr #20
   18efc:	andeq	ip, r1, r0, lsr #15
   18f00:	muleq	r1, r0, r7
   18f04:	ldrdeq	ip, [r1], -r0
   18f08:	andeq	ip, r1, r0, asr #15
   18f0c:	andeq	ip, r1, r0, ror #15
   18f10:	andeq	ip, r1, r0, lsr r9
   18f14:	mov	r0, sl
   18f18:	bl	1af04 <argp_error@@Base+0x1a5c>
   18f1c:	ldr	r0, [r6, #12]
   18f20:	and	r0, r0, #8
   18f24:	b	180d8 <argp_failure@@Base+0x46c>
   18f28:	mov	r0, sl
   18f2c:	bl	1af04 <argp_error@@Base+0x1a5c>
   18f30:	ldr	ip, [sl, #28]
   18f34:	ldr	r2, [sl, #24]
   18f38:	ldr	lr, [sl, #16]
   18f3c:	sub	ip, ip, r2
   18f40:	b	18048 <argp_failure@@Base+0x3dc>
   18f44:	ldr	r2, [r6, #8]
   18f48:	cmp	r2, #0
   18f4c:	beq	1814c <argp_failure@@Base+0x4e0>
   18f50:	ldr	r1, [r6, #12]
   18f54:	mov	r0, sl
   18f58:	tst	r1, #1
   18f5c:	ldrne	r1, [pc, #-136]	; 18edc <argp_failure@@Base+0x1270>
   18f60:	ldreq	r1, [pc, #-136]	; 18ee0 <argp_failure@@Base+0x1274>
   18f64:	bl	1b5b0 <argp_error@@Base+0x2108>
   18f68:	b	1814c <argp_failure@@Base+0x4e0>
   18f6c:	mov	r3, #1
   18f70:	str	r3, [fp, #-132]	; 0xffffff7c
   18f74:	b	180c8 <argp_failure@@Base+0x45c>
   18f78:	mov	r0, sl
   18f7c:	bl	1af04 <argp_error@@Base+0x1a5c>
   18f80:	b	18c08 <argp_failure@@Base+0xf9c>
   18f84:	mov	r0, sl
   18f88:	bl	1af04 <argp_error@@Base+0x1a5c>
   18f8c:	b	18190 <argp_failure@@Base+0x524>
   18f90:	mov	r1, #1
   18f94:	mov	r0, sl
   18f98:	bl	1b4b0 <argp_error@@Base+0x2008>
   18f9c:	cmp	r0, #0
   18fa0:	beq	18cdc <argp_failure@@Base+0x1070>
   18fa4:	ldr	r2, [sl, #28]
   18fa8:	b	18cd0 <argp_failure@@Base+0x1064>
   18fac:	mov	r1, #1
   18fb0:	mov	r0, sl
   18fb4:	bl	1b4b0 <argp_error@@Base+0x2008>
   18fb8:	cmp	r0, #0
   18fbc:	beq	18cbc <argp_failure@@Base+0x1050>
   18fc0:	ldr	r2, [sl, #28]
   18fc4:	b	18cac <argp_failure@@Base+0x1040>
   18fc8:	mvn	r3, #0
   18fcc:	str	r3, [r7, #12]
   18fd0:	ldr	r3, [fp, #-108]	; 0xffffff94
   18fd4:	ldr	r1, [r3, #4]
   18fd8:	cmp	r1, #0
   18fdc:	beq	17ee8 <argp_failure@@Base+0x27c>
   18fe0:	ldr	r2, [fp, #-112]	; 0xffffff90
   18fe4:	mov	r3, #0
   18fe8:	str	r3, [r2, #24]
   18fec:	add	r3, r3, #1
   18ff0:	cmp	r3, r1
   18ff4:	add	r2, r2, #28
   18ff8:	bcc	18fe8 <argp_failure@@Base+0x137c>
   18ffc:	ldr	r0, [fp, #-112]	; 0xffffff90
   19000:	ldr	r3, [pc, #-292]	; 18ee4 <argp_failure@@Base+0x1278>
   19004:	mov	r2, #28
   19008:	bl	11288 <qsort@plt>
   1900c:	b	17ee8 <argp_failure@@Base+0x27c>
   19010:	mvn	r3, #0
   19014:	str	r3, [r7, #12]
   19018:	ldr	r3, [fp, #-108]	; 0xffffff94
   1901c:	ldr	r3, [r3, #4]
   19020:	cmp	r3, #0
   19024:	str	r3, [fp, #-120]	; 0xffffff88
   19028:	sub	r6, r3, #1
   1902c:	bne	1888c <argp_failure@@Base+0xc20>
   19030:	b	17ee8 <argp_failure@@Base+0x27c>
   19034:	mov	r4, r9
   19038:	b	18d50 <argp_failure@@Base+0x10e4>
   1903c:	mov	r1, #1
   19040:	mov	r0, sl
   19044:	bl	1b4b0 <argp_error@@Base+0x2008>
   19048:	cmp	r0, #0
   1904c:	beq	18e44 <argp_failure@@Base+0x11d8>
   19050:	ldr	r3, [sl, #28]
   19054:	b	18e34 <argp_failure@@Base+0x11c8>
   19058:	mov	r0, sl
   1905c:	bl	1af04 <argp_error@@Base+0x1a5c>
   19060:	ldr	r3, [sl, #28]
   19064:	b	18e20 <argp_failure@@Base+0x11b4>
   19068:	mov	r3, r8
   1906c:	mov	r4, r5
   19070:	b	184b0 <argp_failure@@Base+0x844>
   19074:	cmp	r5, r6
   19078:	bhi	191f4 <argp_failure@@Base+0x1588>
   1907c:	ldr	r1, [sl, #32]
   19080:	add	r2, r3, #3
   19084:	cmp	r1, r2
   19088:	bcs	190a4 <argp_failure@@Base+0x1438>
   1908c:	mov	r1, #3
   19090:	mov	r0, sl
   19094:	bl	1b4b0 <argp_error@@Base+0x2008>
   19098:	cmp	r0, #0
   1909c:	beq	18dc0 <argp_failure@@Base+0x1154>
   190a0:	ldr	r3, [sl, #28]
   190a4:	ldr	r2, [pc, #-452]	; 18ee8 <argp_failure@@Base+0x127c>
   190a8:	ldrh	r1, [r2]
   190ac:	ldrb	r2, [r2, #2]
   190b0:	strh	r1, [r3]
   190b4:	strb	r2, [r3, #2]
   190b8:	ldr	r3, [sl, #28]
   190bc:	add	r3, r3, #3
   190c0:	str	r3, [sl, #28]
   190c4:	b	18dc0 <argp_failure@@Base+0x1154>
   190c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   190cc:	ldr	r8, [r3]
   190d0:	str	r4, [fp, #-88]	; 0xffffffa8
   190d4:	str	r4, [fp, #-84]	; 0xffffffac
   190d8:	str	r4, [fp, #-80]	; 0xffffffb0
   190dc:	b	18028 <argp_failure@@Base+0x3bc>
   190e0:	ldr	r0, [sl, #28]
   190e4:	mov	r2, r5
   190e8:	mov	r1, r4
   190ec:	bl	110a8 <memcpy@plt>
   190f0:	ldr	r3, [sl, #28]
   190f4:	add	r5, r3, r5
   190f8:	str	r5, [sl, #28]
   190fc:	b	18df8 <argp_failure@@Base+0x118c>
   19100:	mov	r0, sl
   19104:	bl	1af04 <argp_error@@Base+0x1a5c>
   19108:	ldr	r3, [sl, #28]
   1910c:	ldr	r2, [sl, #24]
   19110:	ldr	r1, [sl, #16]
   19114:	ldr	r6, [sl, #20]
   19118:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1911c:	sub	r2, r3, r2
   19120:	cmp	r2, r1
   19124:	bic	r6, r6, r6, asr #31
   19128:	ldr	r5, [r7, #20]
   1912c:	bls	18d8c <argp_failure@@Base+0x1120>
   19130:	mov	r0, sl
   19134:	bl	1af04 <argp_error@@Base+0x1a5c>
   19138:	ldr	r3, [sl, #28]
   1913c:	ldr	r2, [sl, #24]
   19140:	ldr	r1, [sl, #16]
   19144:	sub	r2, r3, r2
   19148:	str	r5, [sl, #4]
   1914c:	mov	r5, r7
   19150:	ldr	r7, [r7, #20]
   19154:	cmp	r2, r1
   19158:	movls	r5, r7
   1915c:	bls	18d94 <argp_failure@@Base+0x1128>
   19160:	mov	r0, sl
   19164:	bl	1af04 <argp_error@@Base+0x1a5c>
   19168:	ldr	r5, [r5, #20]
   1916c:	ldr	r3, [sl, #28]
   19170:	b	18d94 <argp_failure@@Base+0x1128>
   19174:	str	r5, [sp]
   19178:	ldr	r3, [pc, #-660]	; 18eec <argp_failure@@Base+0x1280>
   1917c:	mov	r1, r2
   19180:	ldr	r0, [fp, #-104]	; 0xffffff98
   19184:	bl	17c6c <argp_failure@@Base>
   19188:	b	185cc <argp_failure@@Base+0x960>
   1918c:	ldr	r3, [pc, #-676]	; 18ef0 <argp_failure@@Base+0x1284>
   19190:	ldr	r1, [pc, #-676]	; 18ef4 <argp_failure@@Base+0x1288>
   19194:	mov	r2, #0
   19198:	ldr	r0, [fp, #-104]	; 0xffffff98
   1919c:	stm	sp, {r1, r3}
   191a0:	mov	r1, r2
   191a4:	ldr	r3, [pc, #-692]	; 18ef8 <argp_failure@@Base+0x128c>
   191a8:	bl	17c6c <argp_failure@@Base>
   191ac:	b	17eb8 <argp_failure@@Base+0x24c>
   191b0:	ldr	r3, [pc, #-700]	; 18efc <argp_failure@@Base+0x1290>
   191b4:	b	19190 <argp_failure@@Base+0x1524>
   191b8:	mov	r1, #1
   191bc:	mov	r0, sl
   191c0:	bl	1b4b0 <argp_error@@Base+0x2008>
   191c4:	cmp	r0, #0
   191c8:	beq	17f58 <argp_failure@@Base+0x2ec>
   191cc:	ldr	r3, [sl, #28]
   191d0:	b	17f48 <argp_failure@@Base+0x2dc>
   191d4:	ldr	r0, [r6, #16]
   191d8:	sub	r2, fp, #76	; 0x4c
   191dc:	ldr	r1, [r8, #20]
   191e0:	bl	168cc <argp_parse@@Base+0x3db8>
   191e4:	b	18e44 <argp_failure@@Base+0x11d8>
   191e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   191ec:	bl	110fc <funlockfile@plt>
   191f0:	b	17fb8 <argp_failure@@Base+0x34c>
   191f4:	ldr	r2, [sl, #24]
   191f8:	ldr	r1, [sl, #16]
   191fc:	sub	r3, r3, r2
   19200:	cmp	r3, r1
   19204:	bhi	1937c <argp_failure@@Base+0x1710>
   19208:	ldr	r3, [sl, #20]
   1920c:	mov	r6, #32
   19210:	cmp	r3, #0
   19214:	subge	r5, r5, r3
   19218:	mov	r7, #1
   1921c:	cmp	r5, #0
   19220:	sub	r5, r5, #1
   19224:	ble	18dc0 <argp_failure@@Base+0x1154>
   19228:	ldr	r3, [sl, #28]
   1922c:	ldr	r2, [sl, #32]
   19230:	cmp	r3, r2
   19234:	bcs	19260 <argp_failure@@Base+0x15f4>
   19238:	add	r2, r3, #1
   1923c:	cmp	r5, #0
   19240:	str	r2, [sl, #28]
   19244:	sub	r5, r5, #1
   19248:	strb	r6, [r3]
   1924c:	ble	18dc0 <argp_failure@@Base+0x1154>
   19250:	ldr	r3, [sl, #28]
   19254:	ldr	r2, [sl, #32]
   19258:	cmp	r3, r2
   1925c:	bcc	19238 <argp_failure@@Base+0x15cc>
   19260:	mov	r1, r7
   19264:	mov	r0, sl
   19268:	bl	1b4b0 <argp_error@@Base+0x2008>
   1926c:	cmp	r0, #0
   19270:	beq	1921c <argp_failure@@Base+0x15b0>
   19274:	ldr	r3, [sl, #28]
   19278:	b	19238 <argp_failure@@Base+0x15cc>
   1927c:	mov	r1, #1
   19280:	mov	r0, sl
   19284:	bl	1b4b0 <argp_error@@Base+0x2008>
   19288:	cmp	r0, #0
   1928c:	beq	18dc0 <argp_failure@@Base+0x1154>
   19290:	ldr	r3, [sl, #28]
   19294:	b	18db0 <argp_failure@@Base+0x1144>
   19298:	ldr	r4, [pc, #-912]	; 18f10 <argp_failure@@Base+0x12a4>
   1929c:	ldr	r9, [fp, #-112]	; 0xffffff90
   192a0:	ldr	r3, [sl, #28]
   192a4:	ldr	r2, [sl, #32]
   192a8:	cmp	r3, r2
   192ac:	bcs	19360 <argp_failure@@Base+0x16f4>
   192b0:	add	r1, r3, #1
   192b4:	mov	r2, #10
   192b8:	str	r1, [sl, #28]
   192bc:	strb	r2, [r3]
   192c0:	mov	r0, r4
   192c4:	bl	111bc <strlen@plt>
   192c8:	subs	r6, r0, #0
   192cc:	beq	19350 <argp_failure@@Base+0x16e4>
   192d0:	ldr	r0, [sl, #28]
   192d4:	ldr	r2, [sl, #32]
   192d8:	add	r3, r0, r6
   192dc:	cmp	r2, r3
   192e0:	bcs	192fc <argp_failure@@Base+0x1690>
   192e4:	mov	r1, r6
   192e8:	mov	r0, sl
   192ec:	bl	1b4b0 <argp_error@@Base+0x2008>
   192f0:	cmp	r0, #0
   192f4:	beq	19350 <argp_failure@@Base+0x16e4>
   192f8:	ldr	r0, [sl, #28]
   192fc:	mov	r2, r6
   19300:	mov	r1, r4
   19304:	bl	110a8 <memcpy@plt>
   19308:	ldr	r3, [sl, #28]
   1930c:	add	r3, r3, r6
   19310:	str	r3, [sl, #28]
   19314:	ldr	r2, [sl, #32]
   19318:	cmp	r2, r3
   1931c:	bls	193ac <argp_failure@@Base+0x1740>
   19320:	add	r1, r3, #1
   19324:	mov	r2, #10
   19328:	str	r1, [sl, #28]
   1932c:	strb	r2, [r3]
   19330:	b	18368 <argp_failure@@Base+0x6fc>
   19334:	mov	r1, #1
   19338:	mov	r0, sl
   1933c:	bl	1b4b0 <argp_error@@Base+0x2008>
   19340:	cmp	r0, #0
   19344:	beq	17ffc <argp_failure@@Base+0x390>
   19348:	ldr	r3, [sl, #28]
   1934c:	b	17fec <argp_failure@@Base+0x380>
   19350:	ldr	r3, [sl, #28]
   19354:	b	19314 <argp_failure@@Base+0x16a8>
   19358:	ldr	r3, [pc, #-1120]	; 18f00 <argp_failure@@Base+0x1294>
   1935c:	b	19190 <argp_failure@@Base+0x1524>
   19360:	mov	r1, #1
   19364:	mov	r0, sl
   19368:	bl	1b4b0 <argp_error@@Base+0x2008>
   1936c:	cmp	r0, #0
   19370:	beq	192c0 <argp_failure@@Base+0x1654>
   19374:	ldr	r3, [sl, #28]
   19378:	b	192b0 <argp_failure@@Base+0x1644>
   1937c:	mov	r0, sl
   19380:	bl	1af04 <argp_error@@Base+0x1a5c>
   19384:	b	19208 <argp_failure@@Base+0x159c>
   19388:	ldr	r3, [pc, #-1164]	; 18f04 <argp_failure@@Base+0x1298>
   1938c:	b	19190 <argp_failure@@Base+0x1524>
   19390:	ldr	r3, [pc, #-1168]	; 18f08 <argp_failure@@Base+0x129c>
   19394:	b	19190 <argp_failure@@Base+0x1524>
   19398:	mov	r9, r1
   1939c:	ldr	r4, [pc, #-1172]	; 18f10 <argp_failure@@Base+0x12a4>
   193a0:	b	192a0 <argp_failure@@Base+0x1634>
   193a4:	ldr	r3, [pc, #-1184]	; 18f0c <argp_failure@@Base+0x12a0>
   193a8:	b	19190 <argp_failure@@Base+0x1524>
   193ac:	mov	r1, #1
   193b0:	mov	r0, sl
   193b4:	bl	1b4b0 <argp_error@@Base+0x2008>
   193b8:	cmp	r0, #0
   193bc:	beq	18368 <argp_failure@@Base+0x6fc>
   193c0:	ldr	r3, [sl, #28]
   193c4:	b	19320 <argp_failure@@Base+0x16b4>
   193c8:	ldr	r9, [fp, #-112]	; 0xffffff90
   193cc:	ldr	r4, [pc, #-1220]	; 18f10 <argp_failure@@Base+0x12a4>
   193d0:	b	192a0 <argp_failure@@Base+0x1634>

000193d4 <argp_help@@Base>:
   193d4:	push	{lr}		; (str lr, [sp, #-4]!)
   193d8:	sub	sp, sp, #12
   193dc:	str	r3, [sp]
   193e0:	mov	r3, r2
   193e4:	mov	r2, r1
   193e8:	mov	r1, #0
   193ec:	bl	17e74 <argp_failure@@Base+0x208>
   193f0:	add	sp, sp, #12
   193f4:	pop	{pc}		; (ldr pc, [sp], #4)

000193f8 <argp_state_help@@Base>:
   193f8:	push	{r4, r5, lr}
   193fc:	subs	r4, r0, #0
   19400:	sub	sp, sp, #12
   19404:	mov	r5, r2
   19408:	beq	19468 <argp_state_help@@Base+0x70>
   1940c:	ldr	r3, [r4, #16]
   19410:	tst	r3, #2
   19414:	bne	19460 <argp_state_help@@Base+0x68>
   19418:	cmp	r1, #0
   1941c:	beq	19460 <argp_state_help@@Base+0x68>
   19420:	tst	r3, #64	; 0x40
   19424:	ldr	r3, [r4, #40]	; 0x28
   19428:	orrne	r5, r5, #128	; 0x80
   1942c:	ldr	r0, [r4]
   19430:	mov	r2, r1
   19434:	str	r3, [sp]
   19438:	mov	r1, r4
   1943c:	mov	r3, r5
   19440:	bl	17e74 <argp_failure@@Base+0x208>
   19444:	ldr	r3, [r4, #16]
   19448:	tst	r3, #32
   1944c:	bne	19460 <argp_state_help@@Base+0x68>
   19450:	ands	r0, r5, #256	; 0x100
   19454:	bne	19494 <argp_state_help@@Base+0x9c>
   19458:	tst	r5, #512	; 0x200
   1945c:	bne	19490 <argp_state_help@@Base+0x98>
   19460:	add	sp, sp, #12
   19464:	pop	{r4, r5, pc}
   19468:	cmp	r1, #0
   1946c:	beq	19460 <argp_state_help@@Base+0x68>
   19470:	ldr	r3, [pc, #40]	; 194a0 <argp_state_help@@Base+0xa8>
   19474:	mov	r2, r1
   19478:	mov	r1, r4
   1947c:	ldr	ip, [r3]
   19480:	mov	r3, r5
   19484:	str	ip, [sp]
   19488:	bl	17e74 <argp_failure@@Base+0x208>
   1948c:	b	19450 <argp_state_help@@Base+0x58>
   19490:	bl	111a4 <exit@plt>
   19494:	ldr	r3, [pc, #8]	; 194a4 <argp_state_help@@Base+0xac>
   19498:	ldr	r0, [r3]
   1949c:	bl	111a4 <exit@plt>
   194a0:	andeq	sp, r2, r8, lsr #7
   194a4:	andeq	sp, r2, r4, lsr #7

000194a8 <argp_error@@Base>:
   194a8:	push	{r1, r2, r3}
   194ac:	push	{r4, r5, lr}
   194b0:	subs	r5, r0, #0
   194b4:	sub	sp, sp, #16
   194b8:	beq	195c8 <argp_error@@Base+0x120>
   194bc:	ldr	r3, [r5, #16]
   194c0:	tst	r3, #2
   194c4:	bne	195b8 <argp_error@@Base+0x110>
   194c8:	ldr	r4, [r5, #44]	; 0x2c
   194cc:	cmp	r4, #0
   194d0:	beq	195b8 <argp_error@@Base+0x110>
   194d4:	mov	r0, r4
   194d8:	bl	11270 <flockfile@plt>
   194dc:	ldr	r0, [r5, #40]	; 0x28
   194e0:	add	r3, sp, #32
   194e4:	str	r3, [sp, #12]
   194e8:	mov	r1, r4
   194ec:	bl	1100c <fputs_unlocked@plt>
   194f0:	ldr	r3, [r4, #20]
   194f4:	ldr	r2, [r4, #24]
   194f8:	cmp	r3, r2
   194fc:	addcc	r1, r3, #1
   19500:	movcc	r2, #58	; 0x3a
   19504:	strcc	r1, [r4, #20]
   19508:	strbcc	r2, [r3]
   1950c:	bcs	195f4 <argp_error@@Base+0x14c>
   19510:	ldr	r3, [r4, #20]
   19514:	ldr	r2, [r4, #24]
   19518:	cmp	r3, r2
   1951c:	addcc	r1, r3, #1
   19520:	movcc	r2, #32
   19524:	strcc	r1, [r4, #20]
   19528:	strbcc	r2, [r3]
   1952c:	bcs	19614 <argp_error@@Base+0x16c>
   19530:	ldr	r1, [sp, #28]
   19534:	ldr	r2, [sp, #12]
   19538:	mov	r0, r4
   1953c:	bl	11258 <vfprintf@plt>
   19540:	ldr	r3, [r4, #20]
   19544:	ldr	r2, [r4, #24]
   19548:	cmp	r3, r2
   1954c:	addcc	r1, r3, #1
   19550:	movcc	r2, #10
   19554:	strcc	r1, [r4, #20]
   19558:	strbcc	r2, [r3]
   1955c:	bcs	19604 <argp_error@@Base+0x15c>
   19560:	cmp	r5, #0
   19564:	beq	19624 <argp_error@@Base+0x17c>
   19568:	ldr	r3, [r5, #16]
   1956c:	tst	r3, #2
   19570:	bne	195b0 <argp_error@@Base+0x108>
   19574:	ldr	r2, [r5, #40]	; 0x28
   19578:	tst	r3, #64	; 0x40
   1957c:	moveq	r3, #260	; 0x104
   19580:	movne	r3, #388	; 0x184
   19584:	ldr	r0, [r5]
   19588:	mov	r1, r5
   1958c:	str	r2, [sp]
   19590:	mov	r2, r4
   19594:	bl	17e74 <argp_failure@@Base+0x208>
   19598:	ldr	r3, [r5, #16]
   1959c:	tst	r3, #32
   195a0:	bne	195b0 <argp_error@@Base+0x108>
   195a4:	ldr	r3, [pc, #156]	; 19648 <argp_error@@Base+0x1a0>
   195a8:	ldr	r0, [r3]
   195ac:	bl	111a4 <exit@plt>
   195b0:	mov	r0, r4
   195b4:	bl	110fc <funlockfile@plt>
   195b8:	add	sp, sp, #16
   195bc:	pop	{r4, r5, lr}
   195c0:	add	sp, sp, #12
   195c4:	bx	lr
   195c8:	ldr	r3, [pc, #124]	; 1964c <argp_error@@Base+0x1a4>
   195cc:	ldr	r4, [r3]
   195d0:	cmp	r4, #0
   195d4:	beq	195b8 <argp_error@@Base+0x110>
   195d8:	mov	r0, r4
   195dc:	bl	11270 <flockfile@plt>
   195e0:	ldr	r2, [pc, #104]	; 19650 <argp_error@@Base+0x1a8>
   195e4:	add	r3, sp, #32
   195e8:	str	r3, [sp, #12]
   195ec:	ldr	r0, [r2]
   195f0:	b	194e8 <argp_error@@Base+0x40>
   195f4:	mov	r1, #58	; 0x3a
   195f8:	mov	r0, r4
   195fc:	bl	11240 <__overflow@plt>
   19600:	b	19510 <argp_error@@Base+0x68>
   19604:	mov	r1, #10
   19608:	mov	r0, r4
   1960c:	bl	11240 <__overflow@plt>
   19610:	b	19560 <argp_error@@Base+0xb8>
   19614:	mov	r1, #32
   19618:	mov	r0, r4
   1961c:	bl	11240 <__overflow@plt>
   19620:	b	19530 <argp_error@@Base+0x88>
   19624:	ldr	r1, [pc, #36]	; 19650 <argp_error@@Base+0x1a8>
   19628:	mov	r2, r4
   1962c:	mov	r3, #260	; 0x104
   19630:	ldr	r0, [r1]
   19634:	mov	r1, r5
   19638:	str	r0, [sp]
   1963c:	mov	r0, r5
   19640:	bl	17e74 <argp_failure@@Base+0x208>
   19644:	b	195a4 <argp_error@@Base+0xfc>
   19648:	andeq	sp, r2, r4, lsr #7
   1964c:			; <UNDEFINED> instruction: 0x0002d3b0
   19650:	andeq	sp, r2, r8, lsr #7
   19654:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19658:	ldr	r4, [r1, #32]
   1965c:	ldr	r8, [r1, #28]
   19660:	ldr	r7, [r1]
   19664:	add	r6, r0, r4, lsl #2
   19668:	mov	r2, r8
   1966c:	mov	r5, r7
   19670:	cmp	r5, r4
   19674:	movle	r3, #0
   19678:	movgt	r3, #1
   1967c:	cmp	r2, r4
   19680:	movge	r3, #0
   19684:	cmp	r3, #0
   19688:	beq	196fc <argp_error@@Base+0x254>
   1968c:	sub	r3, r5, r4
   19690:	sub	sl, r4, r2
   19694:	cmp	r3, sl
   19698:	ble	196cc <argp_error@@Base+0x224>
   1969c:	sub	r5, r5, sl
   196a0:	add	sl, sl, r2
   196a4:	add	ip, r0, r5, lsl #2
   196a8:	add	sl, r0, sl, lsl #2
   196ac:	add	r3, r0, r2, lsl #2
   196b0:	ldr	r9, [ip]
   196b4:	ldr	lr, [r3]
   196b8:	str	r9, [r3], #4
   196bc:	cmp	r3, sl
   196c0:	str	lr, [ip], #4
   196c4:	bne	196b0 <argp_error@@Base+0x208>
   196c8:	b	19670 <argp_error@@Base+0x1c8>
   196cc:	add	sl, r3, r2
   196d0:	add	r3, r0, r2, lsl #2
   196d4:	add	r9, r0, sl, lsl #2
   196d8:	mov	r2, r6
   196dc:	ldr	lr, [r2]
   196e0:	ldr	ip, [r3]
   196e4:	str	lr, [r3], #4
   196e8:	cmp	r9, r3
   196ec:	str	ip, [r2], #4
   196f0:	bne	196dc <argp_error@@Base+0x234>
   196f4:	mov	r2, sl
   196f8:	b	19670 <argp_error@@Base+0x1c8>
   196fc:	sub	r4, r7, r4
   19700:	add	r8, r4, r8
   19704:	str	r8, [r1, #28]
   19708:	str	r7, [r1, #32]
   1970c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19714:	sub	sp, sp, #52	; 0x34
   19718:	str	r1, [sp, #24]
   1971c:	ldr	r1, [sp, #96]	; 0x60
   19720:	str	r0, [sp, #28]
   19724:	str	r2, [sp, #32]
   19728:	ldr	r8, [r1, #20]
   1972c:	str	r3, [sp, #12]
   19730:	mov	r7, r8
   19734:	ldrb	r5, [r8]
   19738:	cmp	r5, #61	; 0x3d
   1973c:	cmpne	r5, #0
   19740:	movne	r5, #1
   19744:	moveq	r5, #0
   19748:	beq	19764 <argp_error@@Base+0x2bc>
   1974c:	ldrb	r3, [r7, #1]!
   19750:	cmp	r3, #0
   19754:	cmpne	r3, #61	; 0x3d
   19758:	bne	1974c <argp_error@@Base+0x2a4>
   1975c:	ldr	r3, [sp, #12]
   19760:	sub	r5, r7, r8
   19764:	ldr	sl, [r3]
   19768:	cmp	sl, #0
   1976c:	beq	19b44 <argp_error@@Base+0x69c>
   19770:	mov	fp, r3
   19774:	mov	r4, sl
   19778:	mov	r6, #0
   1977c:	str	r3, [sp, #20]
   19780:	mov	r2, r5
   19784:	mov	r1, r8
   19788:	mov	r0, r4
   1978c:	bl	112b8 <strncmp@plt>
   19790:	mov	r9, fp
   19794:	cmp	r0, #0
   19798:	mov	r0, r4
   1979c:	bne	197ac <argp_error@@Base+0x304>
   197a0:	bl	111bc <strlen@plt>
   197a4:	cmp	r0, r5
   197a8:	beq	1986c <argp_error@@Base+0x3c4>
   197ac:	ldr	r4, [fp, #16]!
   197b0:	add	r6, r6, #1
   197b4:	cmp	r4, #0
   197b8:	bne	19780 <argp_error@@Base+0x2d8>
   197bc:	ldr	r3, [sp, #100]	; 0x64
   197c0:	cmp	r3, #0
   197c4:	ldr	r3, [sp, #92]	; 0x5c
   197c8:	beq	19910 <argp_error@@Base+0x468>
   197cc:	cmp	r3, #0
   197d0:	bne	19a28 <argp_error@@Base+0x580>
   197d4:	mov	fp, r3
   197d8:	mov	r0, sl
   197dc:	ldr	r4, [sp, #12]
   197e0:	ldr	sl, [sp, #96]	; 0x60
   197e4:	mov	r9, fp
   197e8:	mov	r1, r8
   197ec:	str	r3, [sp, #16]
   197f0:	str	r3, [sp, #44]	; 0x2c
   197f4:	mvn	r3, #0
   197f8:	str	r3, [sp, #40]	; 0x28
   197fc:	str	fp, [sp, #36]	; 0x24
   19800:	mov	r2, r5
   19804:	bl	112b8 <strncmp@plt>
   19808:	cmp	r0, #0
   1980c:	bne	19848 <argp_error@@Base+0x3a0>
   19810:	cmp	r9, #0
   19814:	beq	19d7c <argp_error@@Base+0x8d4>
   19818:	ldr	r2, [r9, #4]
   1981c:	ldr	r3, [r4, #4]
   19820:	cmp	r2, r3
   19824:	beq	19dd8 <argp_error@@Base+0x930>
   19828:	ldr	r3, [sp, #16]
   1982c:	cmp	r3, #0
   19830:	bne	19848 <argp_error@@Base+0x3a0>
   19834:	ldr	r3, [sp, #36]	; 0x24
   19838:	cmp	r3, #0
   1983c:	beq	19cb4 <argp_error@@Base+0x80c>
   19840:	mov	r2, #1
   19844:	strb	r2, [r3, fp]
   19848:	ldr	r0, [r4, #16]!
   1984c:	add	fp, fp, #1
   19850:	cmp	r0, #0
   19854:	beq	19984 <argp_error@@Base+0x4dc>
   19858:	ldr	r1, [sl, #20]
   1985c:	b	19800 <argp_error@@Base+0x358>
   19860:	cmp	r9, #0
   19864:	beq	19b44 <argp_error@@Base+0x69c>
   19868:	ldr	r6, [sp, #40]	; 0x28
   1986c:	ldr	r3, [sp, #96]	; 0x60
   19870:	ldr	r0, [sp, #96]	; 0x60
   19874:	mov	r1, #0
   19878:	ldr	r2, [r3]
   1987c:	str	r1, [r0, #20]
   19880:	add	r3, r2, #1
   19884:	str	r3, [r0]
   19888:	ldrb	r1, [r7]
   1988c:	cmp	r1, #0
   19890:	bne	198d0 <argp_error@@Base+0x428>
   19894:	ldr	r1, [r9, #4]
   19898:	cmp	r1, #1
   1989c:	beq	19bb4 <argp_error@@Base+0x70c>
   198a0:	ldr	r3, [sp, #88]	; 0x58
   198a4:	ldr	r2, [r9, #8]
   198a8:	cmp	r3, #0
   198ac:	strne	r6, [r3]
   198b0:	cmp	r2, #0
   198b4:	movne	r3, #0
   198b8:	ldreq	r3, [r9, #12]
   198bc:	ldrne	r1, [r9, #12]
   198c0:	strne	r1, [r2]
   198c4:	mov	r0, r3
   198c8:	add	sp, sp, #52	; 0x34
   198cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198d0:	ldr	r3, [r9, #4]
   198d4:	cmp	r3, #0
   198d8:	movne	r3, r0
   198dc:	addne	r7, r7, #1
   198e0:	strne	r7, [r3, #12]
   198e4:	bne	198a0 <argp_error@@Base+0x3f8>
   198e8:	ldr	r3, [sp, #100]	; 0x64
   198ec:	cmp	r3, #0
   198f0:	bne	19b0c <argp_error@@Base+0x664>
   198f4:	ldr	r1, [sp, #96]	; 0x60
   198f8:	ldr	r2, [r9, #12]
   198fc:	mov	r3, #63	; 0x3f
   19900:	str	r2, [r1, #8]
   19904:	mov	r0, r3
   19908:	add	sp, sp, #52	; 0x34
   1990c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19910:	cmp	r3, #0
   19914:	bne	19aa4 <argp_error@@Base+0x5fc>
   19918:	mov	fp, r3
   1991c:	ldr	r4, [sp, #12]
   19920:	mov	r9, fp
   19924:	mov	r0, sl
   19928:	str	r3, [sp, #16]
   1992c:	mvn	r3, #0
   19930:	str	r3, [sp, #40]	; 0x28
   19934:	mov	r2, r5
   19938:	mov	r1, r8
   1993c:	bl	112b8 <strncmp@plt>
   19940:	cmp	r0, #0
   19944:	bne	19968 <argp_error@@Base+0x4c0>
   19948:	cmp	r9, #0
   1994c:	beq	19d70 <argp_error@@Base+0x8c8>
   19950:	ldr	r2, [r9, #4]
   19954:	ldr	r3, [r4, #4]
   19958:	cmp	r2, r3
   1995c:	beq	19dac <argp_error@@Base+0x904>
   19960:	mov	r3, #1
   19964:	str	r3, [sp, #16]
   19968:	ldr	r0, [r4, #16]!
   1996c:	add	fp, fp, #1
   19970:	cmp	r0, #0
   19974:	bne	19934 <argp_error@@Base+0x48c>
   19978:	ldr	r3, [sp, #92]	; 0x5c
   1997c:	str	r0, [sp, #36]	; 0x24
   19980:	str	r3, [sp, #44]	; 0x2c
   19984:	ldr	r2, [sp, #36]	; 0x24
   19988:	ldr	r3, [sp, #16]
   1998c:	cmp	r3, #0
   19990:	cmpeq	r2, #0
   19994:	beq	19860 <argp_error@@Base+0x3b8>
   19998:	ldr	r2, [sp, #100]	; 0x64
   1999c:	cmp	r2, #0
   199a0:	beq	19c04 <argp_error@@Base+0x75c>
   199a4:	cmp	r3, #0
   199a8:	bne	19bdc <argp_error@@Base+0x734>
   199ac:	ldr	r5, [pc, #1108]	; 19e08 <argp_error@@Base+0x960>
   199b0:	ldr	r3, [sp, #36]	; 0x24
   199b4:	ldr	r7, [pc, #1104]	; 19e0c <argp_error@@Base+0x964>
   199b8:	ldr	r0, [r5]
   199bc:	add	r6, r3, r6
   199c0:	mov	r4, r3
   199c4:	bl	11270 <flockfile@plt>
   199c8:	ldr	r3, [sp, #24]
   199cc:	ldr	r0, [r5]
   199d0:	ldr	r1, [pc, #1080]	; 19e10 <argp_error@@Base+0x968>
   199d4:	ldr	r2, [r3]
   199d8:	ldr	r3, [sp, #96]	; 0x60
   199dc:	ldr	r3, [r3, #20]
   199e0:	str	r3, [sp]
   199e4:	ldr	r3, [sp, #104]	; 0x68
   199e8:	bl	111d4 <fprintf@plt>
   199ec:	ldr	r8, [sp, #16]
   199f0:	ldr	r9, [sp, #12]
   199f4:	b	19a04 <argp_error@@Base+0x55c>
   199f8:	cmp	r4, r6
   199fc:	add	r8, r8, #1
   19a00:	beq	19d94 <argp_error@@Base+0x8ec>
   19a04:	ldrb	r3, [r4], #1
   19a08:	cmp	r3, #0
   19a0c:	beq	199f8 <argp_error@@Base+0x550>
   19a10:	ldr	r3, [r9, r8, lsl #4]
   19a14:	ldr	r2, [sp, #104]	; 0x68
   19a18:	mov	r1, r7
   19a1c:	ldr	r0, [r5]
   19a20:	bl	111d4 <fprintf@plt>
   19a24:	b	199f8 <argp_error@@Base+0x550>
   19a28:	mov	r9, r4
   19a2c:	str	r4, [sp, #16]
   19a30:	str	r4, [sp, #44]	; 0x2c
   19a34:	str	r4, [sp, #36]	; 0x24
   19a38:	mov	r1, r8
   19a3c:	mov	r0, sl
   19a40:	mov	r8, r4
   19a44:	ldr	sl, [sp, #20]
   19a48:	ldr	r4, [sp, #96]	; 0x60
   19a4c:	mov	fp, #1
   19a50:	mvn	r3, #0
   19a54:	str	r3, [sp, #40]	; 0x28
   19a58:	mov	r2, r5
   19a5c:	bl	112b8 <strncmp@plt>
   19a60:	cmp	r0, #0
   19a64:	bne	19a8c <argp_error@@Base+0x5e4>
   19a68:	cmp	r9, #0
   19a6c:	beq	19d88 <argp_error@@Base+0x8e0>
   19a70:	ldr	r3, [sp, #16]
   19a74:	cmp	r3, #0
   19a78:	bne	19a8c <argp_error@@Base+0x5e4>
   19a7c:	ldr	r3, [sp, #36]	; 0x24
   19a80:	cmp	r3, #0
   19a84:	beq	19cf8 <argp_error@@Base+0x850>
   19a88:	strb	fp, [r3, r8]
   19a8c:	ldr	r0, [sl, #16]!
   19a90:	add	r8, r8, #1
   19a94:	cmp	r0, #0
   19a98:	beq	19984 <argp_error@@Base+0x4dc>
   19a9c:	ldr	r1, [r4, #20]
   19aa0:	b	19a58 <argp_error@@Base+0x5b0>
   19aa4:	ldr	r3, [sp, #100]	; 0x64
   19aa8:	mov	r0, sl
   19aac:	mov	r4, r3
   19ab0:	ldr	sl, [sp, #20]
   19ab4:	mov	r9, r4
   19ab8:	str	r3, [sp, #16]
   19abc:	mvn	r3, #0
   19ac0:	str	r3, [sp, #40]	; 0x28
   19ac4:	mov	r2, r5
   19ac8:	mov	r1, r8
   19acc:	bl	112b8 <strncmp@plt>
   19ad0:	cmp	r0, #0
   19ad4:	bne	19aec <argp_error@@Base+0x644>
   19ad8:	cmp	r9, #0
   19adc:	moveq	r9, sl
   19ae0:	movne	r3, #1
   19ae4:	strne	r3, [sp, #16]
   19ae8:	streq	r4, [sp, #40]	; 0x28
   19aec:	ldr	r0, [sl, #16]!
   19af0:	add	r4, r4, #1
   19af4:	cmp	r0, #0
   19af8:	bne	19ac4 <argp_error@@Base+0x61c>
   19afc:	ldr	r3, [sp, #100]	; 0x64
   19b00:	str	r0, [sp, #36]	; 0x24
   19b04:	str	r3, [sp, #44]	; 0x2c
   19b08:	b	19984 <argp_error@@Base+0x4dc>
   19b0c:	ldr	r3, [sp, #24]
   19b10:	ldr	r1, [pc, #752]	; 19e08 <argp_error@@Base+0x960>
   19b14:	ldr	r2, [r3]
   19b18:	ldr	r3, [r9]
   19b1c:	ldr	r0, [r1]
   19b20:	str	r3, [sp]
   19b24:	ldr	r1, [pc, #744]	; 19e14 <argp_error@@Base+0x96c>
   19b28:	ldr	r3, [sp, #104]	; 0x68
   19b2c:	bl	111d4 <fprintf@plt>
   19b30:	ldr	r1, [sp, #96]	; 0x60
   19b34:	ldr	r2, [r9, #12]
   19b38:	mov	r3, #63	; 0x3f
   19b3c:	str	r2, [r1, #8]
   19b40:	b	19904 <argp_error@@Base+0x45c>
   19b44:	ldr	r3, [sp, #92]	; 0x5c
   19b48:	cmp	r3, #0
   19b4c:	bne	19d30 <argp_error@@Base+0x888>
   19b50:	ldr	r3, [sp, #100]	; 0x64
   19b54:	cmp	r3, #0
   19b58:	beq	19b84 <argp_error@@Base+0x6dc>
   19b5c:	ldr	r3, [sp, #24]
   19b60:	ldr	r1, [pc, #672]	; 19e08 <argp_error@@Base+0x960>
   19b64:	ldr	r2, [r3]
   19b68:	ldr	r3, [sp, #96]	; 0x60
   19b6c:	ldr	r0, [r1]
   19b70:	ldr	r1, [pc, #672]	; 19e18 <argp_error@@Base+0x970>
   19b74:	ldr	r3, [r3, #20]
   19b78:	str	r3, [sp]
   19b7c:	ldr	r3, [sp, #104]	; 0x68
   19b80:	bl	111d4 <fprintf@plt>
   19b84:	ldr	r3, [sp, #96]	; 0x60
   19b88:	ldr	r1, [sp, #96]	; 0x60
   19b8c:	mov	r2, #0
   19b90:	ldr	r3, [r3]
   19b94:	str	r2, [r1, #20]
   19b98:	add	r3, r3, #1
   19b9c:	str	r3, [r1]
   19ba0:	mov	r3, #63	; 0x3f
   19ba4:	mov	r0, r3
   19ba8:	str	r2, [r1, #8]
   19bac:	add	sp, sp, #52	; 0x34
   19bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bb4:	ldr	r1, [sp, #28]
   19bb8:	cmp	r3, r1
   19bbc:	bge	19c5c <argp_error@@Base+0x7b4>
   19bc0:	ldr	r1, [sp, #24]
   19bc4:	add	r2, r2, #2
   19bc8:	ldr	r3, [r1, r3, lsl #2]
   19bcc:	ldr	r1, [sp, #96]	; 0x60
   19bd0:	str	r3, [r1, #12]
   19bd4:	str	r2, [r1]
   19bd8:	b	198a0 <argp_error@@Base+0x3f8>
   19bdc:	ldr	r3, [sp, #24]
   19be0:	ldr	r1, [pc, #544]	; 19e08 <argp_error@@Base+0x960>
   19be4:	ldr	r2, [r3]
   19be8:	ldr	r3, [sp, #96]	; 0x60
   19bec:	ldr	r0, [r1]
   19bf0:	ldr	r1, [pc, #548]	; 19e1c <argp_error@@Base+0x974>
   19bf4:	ldr	r3, [r3, #20]
   19bf8:	str	r3, [sp]
   19bfc:	ldr	r3, [sp, #104]	; 0x68
   19c00:	bl	111d4 <fprintf@plt>
   19c04:	ldr	r3, [sp, #44]	; 0x2c
   19c08:	cmp	r3, #0
   19c0c:	beq	19c18 <argp_error@@Base+0x770>
   19c10:	ldr	r0, [sp, #36]	; 0x24
   19c14:	bl	13a90 <argp_parse@@Base+0xf7c>
   19c18:	ldr	r3, [sp, #96]	; 0x60
   19c1c:	ldr	r4, [r3, #20]
   19c20:	mov	r0, r4
   19c24:	bl	111bc <strlen@plt>
   19c28:	ldr	r3, [sp, #96]	; 0x60
   19c2c:	ldr	r1, [sp, #96]	; 0x60
   19c30:	mov	r2, #0
   19c34:	ldr	r3, [r3]
   19c38:	str	r2, [r1, #8]
   19c3c:	add	r3, r3, #1
   19c40:	str	r3, [r1]
   19c44:	mov	r3, #63	; 0x3f
   19c48:	add	r0, r4, r0
   19c4c:	str	r0, [r1, #20]
   19c50:	mov	r0, r3
   19c54:	add	sp, sp, #52	; 0x34
   19c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c5c:	ldr	r3, [sp, #100]	; 0x64
   19c60:	cmp	r3, #0
   19c64:	bne	19c8c <argp_error@@Base+0x7e4>
   19c68:	ldr	r2, [sp, #96]	; 0x60
   19c6c:	ldr	r3, [r9, #12]
   19c70:	str	r3, [r2, #8]
   19c74:	ldr	r3, [sp, #32]
   19c78:	ldrb	r3, [r3]
   19c7c:	cmp	r3, #58	; 0x3a
   19c80:	movne	r3, #63	; 0x3f
   19c84:	moveq	r3, #58	; 0x3a
   19c88:	b	198c4 <argp_error@@Base+0x41c>
   19c8c:	ldr	r3, [sp, #24]
   19c90:	ldr	r1, [pc, #368]	; 19e08 <argp_error@@Base+0x960>
   19c94:	ldr	r2, [r3]
   19c98:	ldr	r3, [r9]
   19c9c:	ldr	r0, [r1]
   19ca0:	str	r3, [sp]
   19ca4:	ldr	r1, [pc, #372]	; 19e20 <argp_error@@Base+0x978>
   19ca8:	ldr	r3, [sp, #104]	; 0x68
   19cac:	bl	111d4 <fprintf@plt>
   19cb0:	b	19c68 <argp_error@@Base+0x7c0>
   19cb4:	mov	r0, r6
   19cb8:	bl	150dc <argp_parse@@Base+0x25c8>
   19cbc:	subs	r3, r0, #0
   19cc0:	mov	r8, r3
   19cc4:	str	r3, [sp, #36]	; 0x24
   19cc8:	mov	r3, #1
   19ccc:	streq	r3, [sp, #16]
   19cd0:	beq	19848 <argp_error@@Base+0x3a0>
   19cd4:	mov	r2, r6
   19cd8:	mov	r1, #0
   19cdc:	str	r3, [sp, #44]	; 0x2c
   19ce0:	bl	11204 <memset@plt>
   19ce4:	ldr	r2, [sp, #40]	; 0x28
   19ce8:	mov	r1, #1
   19cec:	ldr	r3, [sp, #36]	; 0x24
   19cf0:	strb	r1, [r8, r2]
   19cf4:	b	19840 <argp_error@@Base+0x398>
   19cf8:	mov	r0, r6
   19cfc:	bl	150dc <argp_parse@@Base+0x25c8>
   19d00:	subs	r3, r0, #0
   19d04:	str	r3, [sp, #36]	; 0x24
   19d08:	beq	19dfc <argp_error@@Base+0x954>
   19d0c:	mov	r2, r6
   19d10:	mov	r1, #0
   19d14:	bl	11204 <memset@plt>
   19d18:	mov	r2, #1
   19d1c:	str	r2, [sp, #44]	; 0x2c
   19d20:	ldr	r3, [sp, #36]	; 0x24
   19d24:	ldr	r2, [sp, #40]	; 0x28
   19d28:	strb	fp, [r3, r2]
   19d2c:	b	19a88 <argp_error@@Base+0x5e0>
   19d30:	ldr	r3, [sp, #96]	; 0x60
   19d34:	ldr	r2, [sp, #24]
   19d38:	ldr	r3, [r3]
   19d3c:	ldr	r3, [r2, r3, lsl #2]
   19d40:	ldrb	r3, [r3, #1]
   19d44:	cmp	r3, #45	; 0x2d
   19d48:	beq	19b50 <argp_error@@Base+0x6a8>
   19d4c:	ldr	r3, [sp, #96]	; 0x60
   19d50:	ldr	r0, [sp, #32]
   19d54:	ldr	r3, [r3, #20]
   19d58:	ldrb	r1, [r3]
   19d5c:	bl	111c8 <strchr@plt>
   19d60:	cmp	r0, #0
   19d64:	beq	19b50 <argp_error@@Base+0x6a8>
   19d68:	mvn	r3, #0
   19d6c:	b	198c4 <argp_error@@Base+0x41c>
   19d70:	str	fp, [sp, #40]	; 0x28
   19d74:	mov	r9, r4
   19d78:	b	19968 <argp_error@@Base+0x4c0>
   19d7c:	str	fp, [sp, #40]	; 0x28
   19d80:	mov	r9, r4
   19d84:	b	19848 <argp_error@@Base+0x3a0>
   19d88:	str	r8, [sp, #40]	; 0x28
   19d8c:	mov	r9, sl
   19d90:	b	19a8c <argp_error@@Base+0x5e4>
   19d94:	ldr	r1, [r5]
   19d98:	mov	r0, #10
   19d9c:	bl	11264 <fputc@plt>
   19da0:	ldr	r0, [r5]
   19da4:	bl	110fc <funlockfile@plt>
   19da8:	b	19c04 <argp_error@@Base+0x75c>
   19dac:	ldr	r2, [r9, #8]
   19db0:	ldr	r3, [r4, #8]
   19db4:	cmp	r2, r3
   19db8:	bne	19960 <argp_error@@Base+0x4b8>
   19dbc:	ldr	r2, [r9, #12]
   19dc0:	ldr	r3, [r4, #12]
   19dc4:	ldr	r1, [sp, #16]
   19dc8:	cmp	r2, r3
   19dcc:	movne	r1, #1
   19dd0:	str	r1, [sp, #16]
   19dd4:	b	19968 <argp_error@@Base+0x4c0>
   19dd8:	ldr	r2, [r9, #8]
   19ddc:	ldr	r3, [r4, #8]
   19de0:	cmp	r2, r3
   19de4:	bne	19828 <argp_error@@Base+0x380>
   19de8:	ldr	r2, [r9, #12]
   19dec:	ldr	r3, [r4, #12]
   19df0:	cmp	r2, r3
   19df4:	bne	19828 <argp_error@@Base+0x380>
   19df8:	b	19848 <argp_error@@Base+0x3a0>
   19dfc:	mov	r3, #1
   19e00:	str	r3, [sp, #16]
   19e04:	b	19a8c <argp_error@@Base+0x5e4>
   19e08:			; <UNDEFINED> instruction: 0x0002d3b0
   19e0c:	andeq	ip, r1, ip, asr #22
   19e10:	andeq	ip, r1, ip, lsl fp
   19e14:	andeq	ip, r1, r4, ror fp
   19e18:	andeq	ip, r1, r4, asr fp
   19e1c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   19e20:	andeq	ip, r1, r4, lsr #23
   19e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e28:	sub	sp, sp, #36	; 0x24
   19e2c:	subs	r6, r0, #0
   19e30:	ldr	r4, [sp, #80]	; 0x50
   19e34:	ldr	r8, [r4, #4]
   19e38:	ble	1a00c <argp_error@@Base+0xb64>
   19e3c:	mov	sl, r3
   19e40:	ldr	r3, [r4]
   19e44:	mov	r7, r2
   19e48:	mov	r2, #0
   19e4c:	cmp	r3, r2
   19e50:	mov	r9, r1
   19e54:	str	r2, [r4, #12]
   19e58:	beq	1a094 <argp_error@@Base+0xbec>
   19e5c:	ldr	r2, [r4, #16]
   19e60:	cmp	r2, #0
   19e64:	bne	1a018 <argp_error@@Base+0xb70>
   19e68:	mov	r5, #0
   19e6c:	str	r3, [r4, #32]
   19e70:	str	r3, [r4, #28]
   19e74:	str	r5, [r4, #20]
   19e78:	ldrb	r3, [r7]
   19e7c:	cmp	r3, #45	; 0x2d
   19e80:	moveq	r3, #2
   19e84:	addeq	r7, r7, #1
   19e88:	streq	r3, [r4, #24]
   19e8c:	beq	19eb4 <argp_error@@Base+0xa0c>
   19e90:	cmp	r3, #43	; 0x2b
   19e94:	streq	r5, [r4, #24]
   19e98:	addeq	r7, r7, #1
   19e9c:	beq	19eb4 <argp_error@@Base+0xa0c>
   19ea0:	ldr	r3, [sp, #84]	; 0x54
   19ea4:	cmp	r3, #0
   19ea8:	beq	1a124 <argp_error@@Base+0xc7c>
   19eac:	mov	r3, #0
   19eb0:	str	r3, [r4, #24]
   19eb4:	mov	r3, #1
   19eb8:	str	r3, [r4, #16]
   19ebc:	ldrb	r3, [r7]
   19ec0:	cmp	r3, #58	; 0x3a
   19ec4:	moveq	r8, #0
   19ec8:	cmp	r5, #0
   19ecc:	beq	19f74 <argp_error@@Base+0xacc>
   19ed0:	ldrb	r3, [r5]
   19ed4:	cmp	r3, #0
   19ed8:	beq	19f74 <argp_error@@Base+0xacc>
   19edc:	add	r3, r5, #1
   19ee0:	str	r3, [r4, #20]
   19ee4:	ldrb	fp, [r5]
   19ee8:	mov	r0, r7
   19eec:	str	r3, [sp, #28]
   19ef0:	mov	r1, fp
   19ef4:	bl	111c8 <strchr@plt>
   19ef8:	ldrb	r1, [r5, #1]
   19efc:	ldr	r3, [sp, #28]
   19f00:	cmp	r1, #0
   19f04:	ldreq	r1, [r4]
   19f08:	addeq	r1, r1, #1
   19f0c:	streq	r1, [r4]
   19f10:	sub	r1, fp, #58	; 0x3a
   19f14:	mov	r2, r0
   19f18:	cmp	r2, #0
   19f1c:	cmpne	r1, #1
   19f20:	mov	r0, fp
   19f24:	bls	1a064 <argp_error@@Base+0xbbc>
   19f28:	ldrb	r1, [r2]
   19f2c:	cmp	r1, #87	; 0x57
   19f30:	ldrb	r1, [r2, #1]
   19f34:	beq	1a1b0 <argp_error@@Base+0xd08>
   19f38:	cmp	r1, #58	; 0x3a
   19f3c:	bne	1a05c <argp_error@@Base+0xbb4>
   19f40:	ldrb	r2, [r2, #2]
   19f44:	cmp	r2, #58	; 0x3a
   19f48:	ldrb	r2, [r5, #1]
   19f4c:	beq	1a2a8 <argp_error@@Base+0xe00>
   19f50:	cmp	r2, #0
   19f54:	beq	1a288 <argp_error@@Base+0xde0>
   19f58:	ldr	r2, [r4]
   19f5c:	str	r3, [r4, #12]
   19f60:	add	r3, r2, #1
   19f64:	str	r3, [r4]
   19f68:	mov	r3, #0
   19f6c:	str	r3, [r4, #20]
   19f70:	b	1a05c <argp_error@@Base+0xbb4>
   19f74:	ldr	fp, [r4]
   19f78:	ldr	r3, [r4, #32]
   19f7c:	ldr	r2, [r4, #28]
   19f80:	cmp	r3, fp
   19f84:	ldr	r3, [r4, #24]
   19f88:	strgt	fp, [r4, #32]
   19f8c:	cmp	fp, r2
   19f90:	movlt	r2, fp
   19f94:	strlt	fp, [r4, #28]
   19f98:	cmp	r3, #1
   19f9c:	beq	1a0a4 <argp_error@@Base+0xbfc>
   19fa0:	cmp	r6, fp
   19fa4:	beq	1a10c <argp_error@@Base+0xc64>
   19fa8:	ldr	r3, [pc, #972]	; 1a37c <argp_error@@Base+0xed4>
   19fac:	ldr	r5, [r9, fp, lsl #2]
   19fb0:	mov	r1, r3
   19fb4:	mov	r0, r5
   19fb8:	str	r3, [sp, #28]
   19fbc:	bl	11030 <strcmp@plt>
   19fc0:	ldr	r3, [sp, #28]
   19fc4:	cmp	r0, #0
   19fc8:	bne	1a034 <argp_error@@Base+0xb8c>
   19fcc:	ldr	r3, [r4, #28]
   19fd0:	ldr	r2, [r4, #32]
   19fd4:	add	fp, fp, #1
   19fd8:	cmp	r3, r2
   19fdc:	str	fp, [r4]
   19fe0:	beq	1a1a4 <argp_error@@Base+0xcfc>
   19fe4:	cmp	fp, r2
   19fe8:	beq	19ffc <argp_error@@Base+0xb54>
   19fec:	mov	r0, r9
   19ff0:	mov	r1, r4
   19ff4:	bl	19654 <argp_error@@Base+0x1ac>
   19ff8:	ldr	r3, [r4, #28]
   19ffc:	cmp	r6, r3
   1a000:	str	r6, [r4]
   1a004:	str	r6, [r4, #32]
   1a008:	strne	r3, [r4]
   1a00c:	mvn	r0, #0
   1a010:	add	sp, sp, #36	; 0x24
   1a014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a018:	ldrb	r3, [r7]
   1a01c:	ldr	r5, [r4, #20]
   1a020:	sub	r2, r3, #43	; 0x2b
   1a024:	tst	r2, #253	; 0xfd
   1a028:	ldrbeq	r3, [r7, #1]
   1a02c:	addeq	r7, r7, #1
   1a030:	b	19ec0 <argp_error@@Base+0xa18>
   1a034:	ldrb	r2, [r5]
   1a038:	cmp	r2, #45	; 0x2d
   1a03c:	beq	1a158 <argp_error@@Base+0xcb0>
   1a040:	ldr	r3, [r4, #24]
   1a044:	cmp	r3, #0
   1a048:	beq	1a00c <argp_error@@Base+0xb64>
   1a04c:	mov	r0, #1
   1a050:	add	fp, fp, #1
   1a054:	str	fp, [r4]
   1a058:	str	r5, [r4, #12]
   1a05c:	add	sp, sp, #36	; 0x24
   1a060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a064:	cmp	r8, #0
   1a068:	beq	1a084 <argp_error@@Base+0xbdc>
   1a06c:	ldr	r1, [pc, #780]	; 1a380 <argp_error@@Base+0xed8>
   1a070:	ldr	r2, [r9]
   1a074:	mov	r3, fp
   1a078:	ldr	r0, [r1]
   1a07c:	ldr	r1, [pc, #768]	; 1a384 <argp_error@@Base+0xedc>
   1a080:	bl	111d4 <fprintf@plt>
   1a084:	mov	r0, #63	; 0x3f
   1a088:	str	fp, [r4, #8]
   1a08c:	add	sp, sp, #36	; 0x24
   1a090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a094:	mov	r2, #1
   1a098:	mov	r3, r2
   1a09c:	str	r2, [r4]
   1a0a0:	b	19e68 <argp_error@@Base+0x9c0>
   1a0a4:	ldr	r3, [r4, #32]
   1a0a8:	cmp	r3, r2
   1a0ac:	beq	1a224 <argp_error@@Base+0xd7c>
   1a0b0:	cmp	fp, r3
   1a0b4:	beq	1a0c8 <argp_error@@Base+0xc20>
   1a0b8:	mov	r1, r4
   1a0bc:	mov	r0, r9
   1a0c0:	bl	19654 <argp_error@@Base+0x1ac>
   1a0c4:	ldr	r3, [r4]
   1a0c8:	cmp	r6, r3
   1a0cc:	addgt	r1, r9, r3, lsl #2
   1a0d0:	bgt	1a0e8 <argp_error@@Base+0xc40>
   1a0d4:	b	1a104 <argp_error@@Base+0xc5c>
   1a0d8:	add	r3, r3, #1
   1a0dc:	cmp	r6, r3
   1a0e0:	str	r3, [r4]
   1a0e4:	beq	1a144 <argp_error@@Base+0xc9c>
   1a0e8:	ldr	r2, [r1], #4
   1a0ec:	ldrb	r0, [r2]
   1a0f0:	cmp	r0, #45	; 0x2d
   1a0f4:	bne	1a0d8 <argp_error@@Base+0xc30>
   1a0f8:	ldrb	r2, [r2, #1]
   1a0fc:	cmp	r2, #0
   1a100:	beq	1a0d8 <argp_error@@Base+0xc30>
   1a104:	mov	fp, r3
   1a108:	b	1a148 <argp_error@@Base+0xca0>
   1a10c:	ldr	r3, [r4, #28]
   1a110:	ldr	r6, [r4, #32]
   1a114:	mvn	r0, #0
   1a118:	cmp	r6, r3
   1a11c:	strne	r3, [r4]
   1a120:	b	1a010 <argp_error@@Base+0xb68>
   1a124:	ldr	r0, [pc, #604]	; 1a388 <argp_error@@Base+0xee0>
   1a128:	bl	1112c <getenv@plt>
   1a12c:	ldr	r5, [r4, #20]
   1a130:	cmp	r0, #0
   1a134:	bne	19eac <argp_error@@Base+0xa04>
   1a138:	mov	r3, #1
   1a13c:	str	r3, [r4, #24]
   1a140:	b	19eb4 <argp_error@@Base+0xa0c>
   1a144:	mov	fp, r6
   1a148:	cmp	r6, fp
   1a14c:	str	fp, [r4, #32]
   1a150:	bne	19fa8 <argp_error@@Base+0xb00>
   1a154:	b	1a10c <argp_error@@Base+0xc64>
   1a158:	ldrb	r1, [r5, #1]
   1a15c:	cmp	r1, #0
   1a160:	beq	1a040 <argp_error@@Base+0xb98>
   1a164:	cmp	sl, #0
   1a168:	beq	1a19c <argp_error@@Base+0xcf4>
   1a16c:	cmp	r1, #45	; 0x2d
   1a170:	beq	1a2cc <argp_error@@Base+0xe24>
   1a174:	ldr	r3, [sp, #76]	; 0x4c
   1a178:	cmp	r3, #0
   1a17c:	beq	1a19c <argp_error@@Base+0xcf4>
   1a180:	ldrb	r3, [r5, #2]
   1a184:	cmp	r3, #0
   1a188:	bne	1a238 <argp_error@@Base+0xd90>
   1a18c:	mov	r0, r7
   1a190:	bl	111c8 <strchr@plt>
   1a194:	cmp	r0, #0
   1a198:	beq	1a238 <argp_error@@Base+0xd90>
   1a19c:	add	r5, r5, #1
   1a1a0:	b	19edc <argp_error@@Base+0xa34>
   1a1a4:	mov	r3, fp
   1a1a8:	str	fp, [r4, #28]
   1a1ac:	b	19ffc <argp_error@@Base+0xb54>
   1a1b0:	adds	ip, sl, #0
   1a1b4:	movne	ip, #1
   1a1b8:	cmp	r1, #59	; 0x3b
   1a1bc:	movne	ip, #0
   1a1c0:	cmp	ip, #0
   1a1c4:	beq	19f38 <argp_error@@Base+0xa90>
   1a1c8:	ldrb	r2, [r5, #1]
   1a1cc:	cmp	r2, #0
   1a1d0:	bne	1a1e4 <argp_error@@Base+0xd3c>
   1a1d4:	ldr	r3, [r4]
   1a1d8:	cmp	r6, r3
   1a1dc:	ldrne	r3, [r9, r3, lsl #2]
   1a1e0:	beq	1a328 <argp_error@@Base+0xe80>
   1a1e4:	str	r3, [r4, #20]
   1a1e8:	ldr	lr, [pc, #412]	; 1a38c <argp_error@@Base+0xee4>
   1a1ec:	ldr	r3, [sp, #72]	; 0x48
   1a1f0:	mov	ip, #0
   1a1f4:	str	r3, [sp]
   1a1f8:	str	r8, [sp, #12]
   1a1fc:	str	r4, [sp, #8]
   1a200:	str	lr, [sp, #16]
   1a204:	mov	r3, sl
   1a208:	str	ip, [r4, #12]
   1a20c:	mov	r2, r7
   1a210:	mov	r1, r9
   1a214:	mov	r0, r6
   1a218:	str	ip, [sp, #4]
   1a21c:	bl	19710 <argp_error@@Base+0x268>
   1a220:	b	1a05c <argp_error@@Base+0xbb4>
   1a224:	cmp	fp, r2
   1a228:	strne	fp, [r4, #28]
   1a22c:	movne	r3, fp
   1a230:	moveq	r3, r2
   1a234:	b	1a0c8 <argp_error@@Base+0xc20>
   1a238:	ldr	r2, [sp, #76]	; 0x4c
   1a23c:	add	r5, r5, #1
   1a240:	str	r5, [r4, #20]
   1a244:	ldr	r3, [pc, #324]	; 1a390 <argp_error@@Base+0xee8>
   1a248:	str	r2, [sp, #4]
   1a24c:	ldr	r2, [sp, #72]	; 0x48
   1a250:	str	r3, [sp, #16]
   1a254:	str	r2, [sp]
   1a258:	str	r8, [sp, #12]
   1a25c:	str	r4, [sp, #8]
   1a260:	mov	r3, sl
   1a264:	mov	r2, r7
   1a268:	mov	r1, r9
   1a26c:	mov	r0, r6
   1a270:	bl	19710 <argp_error@@Base+0x268>
   1a274:	cmn	r0, #1
   1a278:	bne	1a05c <argp_error@@Base+0xbb4>
   1a27c:	ldr	r3, [r4]
   1a280:	ldr	r5, [r9, r3, lsl #2]
   1a284:	b	1a19c <argp_error@@Base+0xcf4>
   1a288:	ldr	r3, [r4]
   1a28c:	cmp	r6, r3
   1a290:	beq	1a308 <argp_error@@Base+0xe60>
   1a294:	ldr	r2, [r9, r3, lsl #2]
   1a298:	add	r3, r3, #1
   1a29c:	str	r2, [r4, #12]
   1a2a0:	str	r3, [r4]
   1a2a4:	b	19f68 <argp_error@@Base+0xac0>
   1a2a8:	cmp	r2, #0
   1a2ac:	moveq	r3, r2
   1a2b0:	ldrne	r2, [r4]
   1a2b4:	str	r3, [r4, #12]
   1a2b8:	addne	r2, r2, #1
   1a2bc:	strne	r2, [r4]
   1a2c0:	mov	r2, #0
   1a2c4:	str	r2, [r4, #20]
   1a2c8:	b	1a05c <argp_error@@Base+0xbb4>
   1a2cc:	add	r5, r5, #2
   1a2d0:	str	r5, [r4, #20]
   1a2d4:	str	r3, [sp, #16]
   1a2d8:	ldr	r3, [sp, #76]	; 0x4c
   1a2dc:	str	r8, [sp, #12]
   1a2e0:	str	r3, [sp, #4]
   1a2e4:	ldr	r3, [sp, #72]	; 0x48
   1a2e8:	str	r4, [sp, #8]
   1a2ec:	str	r3, [sp]
   1a2f0:	mov	r2, r7
   1a2f4:	mov	r3, sl
   1a2f8:	mov	r1, r9
   1a2fc:	mov	r0, r6
   1a300:	bl	19710 <argp_error@@Base+0x268>
   1a304:	b	1a05c <argp_error@@Base+0xbb4>
   1a308:	cmp	r8, #0
   1a30c:	bne	1a360 <argp_error@@Base+0xeb8>
   1a310:	str	fp, [r4, #8]
   1a314:	ldrb	r0, [r7]
   1a318:	cmp	r0, #58	; 0x3a
   1a31c:	movne	r0, #63	; 0x3f
   1a320:	moveq	r0, #58	; 0x3a
   1a324:	b	19f68 <argp_error@@Base+0xac0>
   1a328:	cmp	r8, #0
   1a32c:	beq	1a348 <argp_error@@Base+0xea0>
   1a330:	ldr	r1, [pc, #72]	; 1a380 <argp_error@@Base+0xed8>
   1a334:	ldr	r2, [r9]
   1a338:	mov	r3, fp
   1a33c:	ldr	r0, [r1]
   1a340:	ldr	r1, [pc, #76]	; 1a394 <argp_error@@Base+0xeec>
   1a344:	bl	111d4 <fprintf@plt>
   1a348:	str	fp, [r4, #8]
   1a34c:	ldrb	r0, [r7]
   1a350:	cmp	r0, #58	; 0x3a
   1a354:	movne	r0, #63	; 0x3f
   1a358:	moveq	r0, #58	; 0x3a
   1a35c:	b	1a05c <argp_error@@Base+0xbb4>
   1a360:	ldr	r1, [pc, #24]	; 1a380 <argp_error@@Base+0xed8>
   1a364:	ldr	r2, [r9]
   1a368:	mov	r3, fp
   1a36c:	ldr	r0, [r1]
   1a370:	ldr	r1, [pc, #28]	; 1a394 <argp_error@@Base+0xeec>
   1a374:	bl	111d4 <fprintf@plt>
   1a378:	b	1a310 <argp_error@@Base+0xe68>
   1a37c:	muleq	r1, ip, r2
   1a380:			; <UNDEFINED> instruction: 0x0002d3b0
   1a384:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a388:	andeq	ip, r1, ip, asr #23
   1a38c:	andeq	ip, r1, r4, lsr #24
   1a390:	andeq	fp, r1, r0, lsl lr
   1a394:	strdeq	ip, [r1], -r8
   1a398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a39c:	sub	sp, sp, #44	; 0x2c
   1a3a0:	ldr	r7, [pc, #1572]	; 1a9cc <argp_error@@Base+0x1524>
   1a3a4:	ldr	r4, [pc, #1572]	; 1a9d0 <argp_error@@Base+0x1528>
   1a3a8:	subs	r6, r0, #0
   1a3ac:	ldm	r7, {r5, sl}
   1a3b0:	str	r1, [sp, #32]
   1a3b4:	str	r3, [sp, #36]	; 0x24
   1a3b8:	stm	r4, {r5, sl}
   1a3bc:	ble	1a568 <argp_error@@Base+0x10c0>
   1a3c0:	mov	r3, #0
   1a3c4:	cmp	r5, #0
   1a3c8:	mov	fp, r2
   1a3cc:	str	r3, [r4, #12]
   1a3d0:	beq	1a624 <argp_error@@Base+0x117c>
   1a3d4:	ldr	r3, [r4, #16]
   1a3d8:	cmp	r3, #0
   1a3dc:	bne	1a580 <argp_error@@Base+0x10d8>
   1a3e0:	mov	r3, #0
   1a3e4:	str	r5, [r4, #32]
   1a3e8:	str	r5, [r4, #28]
   1a3ec:	str	r3, [r4, #20]
   1a3f0:	ldrb	r2, [fp]
   1a3f4:	cmp	r2, #45	; 0x2d
   1a3f8:	beq	1a6d4 <argp_error@@Base+0x122c>
   1a3fc:	cmp	r2, #43	; 0x2b
   1a400:	streq	r3, [r4, #24]
   1a404:	addeq	fp, fp, #1
   1a408:	moveq	r5, r3
   1a40c:	beq	1a428 <argp_error@@Base+0xf80>
   1a410:	ldr	r2, [sp, #88]	; 0x58
   1a414:	cmp	r2, #0
   1a418:	movne	r5, r3
   1a41c:	beq	1a6b4 <argp_error@@Base+0x120c>
   1a420:	mov	r3, #0
   1a424:	str	r3, [r4, #24]
   1a428:	mov	r3, #1
   1a42c:	str	r3, [r4, #16]
   1a430:	ldrb	r3, [fp]
   1a434:	cmp	r3, #58	; 0x3a
   1a438:	moveq	sl, #0
   1a43c:	cmp	r5, #0
   1a440:	beq	1a4c4 <argp_error@@Base+0x101c>
   1a444:	ldrb	r3, [r5]
   1a448:	cmp	r3, #0
   1a44c:	beq	1a4c4 <argp_error@@Base+0x101c>
   1a450:	add	r9, r5, #1
   1a454:	str	r9, [r4, #20]
   1a458:	ldrb	r8, [r5]
   1a45c:	mov	r0, fp
   1a460:	mov	r1, r8
   1a464:	bl	111c8 <strchr@plt>
   1a468:	ldrb	r3, [r5, #1]
   1a46c:	str	r8, [sp, #28]
   1a470:	cmp	r3, #0
   1a474:	ldreq	r3, [r4]
   1a478:	addeq	r3, r3, #1
   1a47c:	streq	r3, [r4]
   1a480:	sub	r3, r8, #58	; 0x3a
   1a484:	cmp	r0, #0
   1a488:	cmpne	r3, #1
   1a48c:	bls	1a5e8 <argp_error@@Base+0x1140>
   1a490:	ldrb	r3, [r0]
   1a494:	cmp	r3, #87	; 0x57
   1a498:	ldrb	r3, [r0, #1]
   1a49c:	beq	1a75c <argp_error@@Base+0x12b4>
   1a4a0:	cmp	r3, #58	; 0x3a
   1a4a4:	beq	1a800 <argp_error@@Base+0x1358>
   1a4a8:	ldr	r3, [r4, #8]
   1a4ac:	mov	r0, r8
   1a4b0:	ldr	r9, [r4, #12]
   1a4b4:	ldr	r5, [r4]
   1a4b8:	str	r3, [sp, #28]
   1a4bc:	mov	r2, r3
   1a4c0:	b	1a5d0 <argp_error@@Base+0x1128>
   1a4c4:	ldr	r5, [r4]
   1a4c8:	ldr	r8, [r4, #32]
   1a4cc:	ldr	r3, [r4, #28]
   1a4d0:	cmp	r8, r5
   1a4d4:	ldr	r2, [r4, #24]
   1a4d8:	movgt	r8, r5
   1a4dc:	strgt	r5, [r4, #32]
   1a4e0:	cmp	r5, r3
   1a4e4:	movlt	r3, r5
   1a4e8:	strlt	r5, [r4, #28]
   1a4ec:	cmp	r2, #1
   1a4f0:	beq	1a634 <argp_error@@Base+0x118c>
   1a4f4:	cmp	r6, r5
   1a4f8:	beq	1a69c <argp_error@@Base+0x11f4>
   1a4fc:	ldr	r3, [sp, #32]
   1a500:	ldr	r9, [r3, r5, lsl #2]
   1a504:	ldr	r3, [pc, #1224]	; 1a9d4 <argp_error@@Base+0x152c>
   1a508:	mov	r0, r9
   1a50c:	mov	r1, r3
   1a510:	str	r3, [sp, #28]
   1a514:	bl	11030 <strcmp@plt>
   1a518:	ldr	r3, [sp, #28]
   1a51c:	cmp	r0, #0
   1a520:	bne	1a59c <argp_error@@Base+0x10f4>
   1a524:	add	r3, r5, #1
   1a528:	ldr	r5, [r4, #28]
   1a52c:	str	r3, [r4]
   1a530:	cmp	r5, r8
   1a534:	beq	1a750 <argp_error@@Base+0x12a8>
   1a538:	cmp	r3, r8
   1a53c:	beq	1a550 <argp_error@@Base+0x10a8>
   1a540:	ldr	r0, [sp, #32]
   1a544:	ldr	r1, [pc, #1156]	; 1a9d0 <argp_error@@Base+0x1528>
   1a548:	bl	19654 <argp_error@@Base+0x1ac>
   1a54c:	ldr	r5, [r4, #28]
   1a550:	mov	r8, r6
   1a554:	cmp	r8, r5
   1a558:	str	r6, [r4, #32]
   1a55c:	str	r6, [r4]
   1a560:	moveq	r5, r6
   1a564:	bne	1a6ac <argp_error@@Base+0x1204>
   1a568:	ldr	r3, [r4, #8]
   1a56c:	ldr	r9, [r4, #12]
   1a570:	str	r3, [sp, #28]
   1a574:	mvn	r0, #0
   1a578:	mov	r2, r3
   1a57c:	b	1a5d0 <argp_error@@Base+0x1128>
   1a580:	ldrb	r3, [r2]
   1a584:	ldr	r5, [r4, #20]
   1a588:	sub	r2, r3, #43	; 0x2b
   1a58c:	tst	r2, #253	; 0xfd
   1a590:	ldrbeq	r3, [fp, #1]
   1a594:	addeq	fp, fp, #1
   1a598:	b	1a434 <argp_error@@Base+0xf8c>
   1a59c:	ldrb	r2, [r9]
   1a5a0:	cmp	r2, #45	; 0x2d
   1a5a4:	beq	1a700 <argp_error@@Base+0x1258>
   1a5a8:	ldr	r3, [r4, #24]
   1a5ac:	cmp	r3, #0
   1a5b0:	beq	1a568 <argp_error@@Base+0x10c0>
   1a5b4:	ldr	r3, [r4, #8]
   1a5b8:	mov	r0, #1
   1a5bc:	mov	r2, r3
   1a5c0:	add	r5, r5, #1
   1a5c4:	str	r5, [r4]
   1a5c8:	str	r9, [r4, #12]
   1a5cc:	str	r3, [sp, #28]
   1a5d0:	ldr	r3, [pc, #1024]	; 1a9d8 <argp_error@@Base+0x1530>
   1a5d4:	str	r5, [r7]
   1a5d8:	str	r2, [r7, #8]
   1a5dc:	str	r9, [r3]
   1a5e0:	add	sp, sp, #44	; 0x2c
   1a5e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5e8:	cmp	sl, #0
   1a5ec:	beq	1a60c <argp_error@@Base+0x1164>
   1a5f0:	ldr	r1, [pc, #996]	; 1a9dc <argp_error@@Base+0x1534>
   1a5f4:	ldr	r3, [sp, #32]
   1a5f8:	ldr	r0, [r1]
   1a5fc:	ldr	r2, [r3]
   1a600:	ldr	r1, [pc, #984]	; 1a9e0 <argp_error@@Base+0x1538>
   1a604:	mov	r3, r8
   1a608:	bl	111d4 <fprintf@plt>
   1a60c:	str	r8, [r4, #8]
   1a610:	ldr	r5, [r4]
   1a614:	ldr	r9, [r4, #12]
   1a618:	mov	r0, #63	; 0x3f
   1a61c:	ldr	r2, [sp, #28]
   1a620:	b	1a5d0 <argp_error@@Base+0x1128>
   1a624:	mov	r3, #1
   1a628:	mov	r5, r3
   1a62c:	str	r3, [r4]
   1a630:	b	1a3e0 <argp_error@@Base+0xf38>
   1a634:	cmp	r8, r3
   1a638:	beq	1a7f0 <argp_error@@Base+0x1348>
   1a63c:	cmp	r5, r8
   1a640:	beq	1a654 <argp_error@@Base+0x11ac>
   1a644:	ldr	r1, [pc, #900]	; 1a9d0 <argp_error@@Base+0x1528>
   1a648:	ldr	r0, [sp, #32]
   1a64c:	bl	19654 <argp_error@@Base+0x1ac>
   1a650:	ldr	r8, [r4]
   1a654:	cmp	r6, r8
   1a658:	ldrgt	r3, [sp, #32]
   1a65c:	addgt	r2, r3, r8, lsl #2
   1a660:	bgt	1a678 <argp_error@@Base+0x11d0>
   1a664:	b	1a694 <argp_error@@Base+0x11ec>
   1a668:	add	r8, r8, #1
   1a66c:	cmp	r6, r8
   1a670:	str	r8, [r4]
   1a674:	beq	1a6e8 <argp_error@@Base+0x1240>
   1a678:	ldr	r3, [r2], #4
   1a67c:	ldrb	r1, [r3]
   1a680:	cmp	r1, #45	; 0x2d
   1a684:	bne	1a668 <argp_error@@Base+0x11c0>
   1a688:	ldrb	r3, [r3, #1]
   1a68c:	cmp	r3, #0
   1a690:	beq	1a668 <argp_error@@Base+0x11c0>
   1a694:	mov	r5, r8
   1a698:	b	1a6ec <argp_error@@Base+0x1244>
   1a69c:	ldr	r5, [r4, #28]
   1a6a0:	cmp	r8, r5
   1a6a4:	moveq	r5, r6
   1a6a8:	beq	1a568 <argp_error@@Base+0x10c0>
   1a6ac:	str	r5, [r4]
   1a6b0:	b	1a568 <argp_error@@Base+0x10c0>
   1a6b4:	ldr	r0, [pc, #808]	; 1a9e4 <argp_error@@Base+0x153c>
   1a6b8:	bl	1112c <getenv@plt>
   1a6bc:	ldr	r5, [r4, #20]
   1a6c0:	cmp	r0, #0
   1a6c4:	bne	1a420 <argp_error@@Base+0xf78>
   1a6c8:	mov	r3, #1
   1a6cc:	str	r3, [r4, #24]
   1a6d0:	b	1a428 <argp_error@@Base+0xf80>
   1a6d4:	mov	r2, #2
   1a6d8:	add	fp, fp, #1
   1a6dc:	mov	r5, r3
   1a6e0:	str	r2, [r4, #24]
   1a6e4:	b	1a428 <argp_error@@Base+0xf80>
   1a6e8:	mov	r5, r6
   1a6ec:	cmp	r6, r5
   1a6f0:	mov	r8, r5
   1a6f4:	str	r5, [r4, #32]
   1a6f8:	bne	1a4fc <argp_error@@Base+0x1054>
   1a6fc:	b	1a69c <argp_error@@Base+0x11f4>
   1a700:	ldrb	r1, [r9, #1]
   1a704:	cmp	r1, #0
   1a708:	beq	1a5a8 <argp_error@@Base+0x1100>
   1a70c:	ldr	r2, [sp, #36]	; 0x24
   1a710:	cmp	r2, #0
   1a714:	beq	1a748 <argp_error@@Base+0x12a0>
   1a718:	cmp	r1, #45	; 0x2d
   1a71c:	beq	1a8fc <argp_error@@Base+0x1454>
   1a720:	ldr	r3, [sp, #84]	; 0x54
   1a724:	cmp	r3, #0
   1a728:	beq	1a748 <argp_error@@Base+0x12a0>
   1a72c:	ldrb	r3, [r9, #2]
   1a730:	cmp	r3, #0
   1a734:	bne	1a844 <argp_error@@Base+0x139c>
   1a738:	mov	r0, fp
   1a73c:	bl	111c8 <strchr@plt>
   1a740:	cmp	r0, #0
   1a744:	beq	1a844 <argp_error@@Base+0x139c>
   1a748:	add	r5, r9, #1
   1a74c:	b	1a450 <argp_error@@Base+0xfa8>
   1a750:	mov	r5, r3
   1a754:	str	r3, [r4, #28]
   1a758:	b	1a550 <argp_error@@Base+0x10a8>
   1a75c:	ldr	r1, [sp, #36]	; 0x24
   1a760:	sub	r2, r3, #59	; 0x3b
   1a764:	cmp	r1, #0
   1a768:	clz	r2, r2
   1a76c:	lsr	r2, r2, #5
   1a770:	moveq	r2, #0
   1a774:	cmp	r2, #0
   1a778:	beq	1a4a0 <argp_error@@Base+0xff8>
   1a77c:	ldrb	r3, [r5, #1]
   1a780:	cmp	r3, #0
   1a784:	bne	1a79c <argp_error@@Base+0x12f4>
   1a788:	ldr	r3, [r4]
   1a78c:	cmp	r6, r3
   1a790:	beq	1a964 <argp_error@@Base+0x14bc>
   1a794:	ldr	r2, [sp, #32]
   1a798:	ldr	r9, [r2, r3, lsl #2]
   1a79c:	ldr	r3, [sp, #80]	; 0x50
   1a7a0:	ldr	r1, [sp, #32]
   1a7a4:	str	r3, [sp]
   1a7a8:	ldr	r3, [sp, #36]	; 0x24
   1a7ac:	ldr	lr, [pc, #564]	; 1a9e8 <argp_error@@Base+0x1540>
   1a7b0:	mov	r2, fp
   1a7b4:	mov	r0, r6
   1a7b8:	mov	ip, #0
   1a7bc:	str	sl, [sp, #12]
   1a7c0:	str	r4, [sp, #8]
   1a7c4:	str	lr, [sp, #16]
   1a7c8:	str	ip, [sp, #4]
   1a7cc:	str	r9, [r4, #20]
   1a7d0:	str	ip, [r4, #12]
   1a7d4:	bl	19710 <argp_error@@Base+0x268>
   1a7d8:	ldr	r3, [r4, #8]
   1a7dc:	ldr	r5, [r4]
   1a7e0:	ldr	r9, [r4, #12]
   1a7e4:	str	r3, [sp, #28]
   1a7e8:	mov	r2, r3
   1a7ec:	b	1a5d0 <argp_error@@Base+0x1128>
   1a7f0:	cmp	r5, r8
   1a7f4:	movne	r8, r5
   1a7f8:	strne	r5, [r4, #28]
   1a7fc:	b	1a654 <argp_error@@Base+0x11ac>
   1a800:	ldrb	r3, [r0, #2]
   1a804:	cmp	r3, #58	; 0x3a
   1a808:	ldrb	r3, [r5, #1]
   1a80c:	beq	1a8c4 <argp_error@@Base+0x141c>
   1a810:	cmp	r3, #0
   1a814:	ldr	r5, [r4]
   1a818:	beq	1a898 <argp_error@@Base+0x13f0>
   1a81c:	ldr	r3, [r4, #8]
   1a820:	mov	r0, r8
   1a824:	add	r5, r5, #1
   1a828:	str	r9, [r4, #12]
   1a82c:	str	r5, [r4]
   1a830:	str	r3, [sp, #28]
   1a834:	mov	r3, #0
   1a838:	str	r3, [r4, #20]
   1a83c:	ldr	r2, [sp, #28]
   1a840:	b	1a5d0 <argp_error@@Base+0x1128>
   1a844:	ldr	r2, [sp, #84]	; 0x54
   1a848:	ldr	r3, [pc, #412]	; 1a9ec <argp_error@@Base+0x1544>
   1a84c:	str	r2, [sp, #4]
   1a850:	ldr	r2, [sp, #80]	; 0x50
   1a854:	str	r3, [sp, #16]
   1a858:	str	r2, [sp]
   1a85c:	add	r9, r9, #1
   1a860:	str	sl, [sp, #12]
   1a864:	str	r4, [sp, #8]
   1a868:	ldr	r3, [sp, #36]	; 0x24
   1a86c:	mov	r2, fp
   1a870:	ldr	r1, [sp, #32]
   1a874:	mov	r0, r6
   1a878:	str	r9, [r4, #20]
   1a87c:	bl	19710 <argp_error@@Base+0x268>
   1a880:	cmn	r0, #1
   1a884:	bne	1a7d8 <argp_error@@Base+0x1330>
   1a888:	ldr	r3, [r4]
   1a88c:	ldr	r2, [sp, #32]
   1a890:	ldr	r9, [r2, r3, lsl #2]
   1a894:	b	1a748 <argp_error@@Base+0x12a0>
   1a898:	cmp	r6, r5
   1a89c:	beq	1a934 <argp_error@@Base+0x148c>
   1a8a0:	ldr	r3, [r4, #8]
   1a8a4:	mov	r0, r8
   1a8a8:	str	r3, [sp, #28]
   1a8ac:	ldr	r3, [sp, #32]
   1a8b0:	ldr	r9, [r3, r5, lsl #2]
   1a8b4:	add	r5, r5, #1
   1a8b8:	str	r9, [r4, #12]
   1a8bc:	str	r5, [r4]
   1a8c0:	b	1a834 <argp_error@@Base+0x138c>
   1a8c4:	cmp	r3, #0
   1a8c8:	moveq	r9, r3
   1a8cc:	ldrne	r5, [r4]
   1a8d0:	mov	r3, #0
   1a8d4:	str	r3, [r4, #20]
   1a8d8:	ldr	r3, [r4, #8]
   1a8dc:	addne	r5, r5, #1
   1a8e0:	ldreq	r5, [r4]
   1a8e4:	strne	r5, [r4]
   1a8e8:	str	r9, [r4, #12]
   1a8ec:	mov	r0, r8
   1a8f0:	str	r3, [sp, #28]
   1a8f4:	mov	r2, r3
   1a8f8:	b	1a5d0 <argp_error@@Base+0x1128>
   1a8fc:	str	r3, [sp, #16]
   1a900:	ldr	r3, [sp, #84]	; 0x54
   1a904:	add	r9, r9, #2
   1a908:	str	r3, [sp, #4]
   1a90c:	ldr	r3, [sp, #80]	; 0x50
   1a910:	str	sl, [sp, #12]
   1a914:	str	r3, [sp]
   1a918:	str	r4, [sp, #8]
   1a91c:	mov	r3, r2
   1a920:	ldr	r1, [sp, #32]
   1a924:	mov	r2, fp
   1a928:	mov	r0, r6
   1a92c:	str	r9, [r4, #20]
   1a930:	b	1a7d4 <argp_error@@Base+0x132c>
   1a934:	cmp	sl, #0
   1a938:	bne	1a9ac <argp_error@@Base+0x1504>
   1a93c:	str	r8, [r4, #8]
   1a940:	ldrb	r8, [fp]
   1a944:	cmp	r8, #58	; 0x3a
   1a948:	moveq	r0, r8
   1a94c:	ldreq	r5, [r4]
   1a950:	ldreq	r9, [r4, #12]
   1a954:	ldrne	r5, [r4]
   1a958:	ldrne	r9, [r4, #12]
   1a95c:	movne	r0, #63	; 0x3f
   1a960:	b	1a834 <argp_error@@Base+0x138c>
   1a964:	cmp	sl, #0
   1a968:	beq	1a988 <argp_error@@Base+0x14e0>
   1a96c:	ldr	r1, [pc, #104]	; 1a9dc <argp_error@@Base+0x1534>
   1a970:	ldr	r3, [sp, #32]
   1a974:	ldr	r0, [r1]
   1a978:	ldr	r2, [r3]
   1a97c:	ldr	r1, [pc, #108]	; 1a9f0 <argp_error@@Base+0x1548>
   1a980:	mov	r3, r8
   1a984:	bl	111d4 <fprintf@plt>
   1a988:	str	r8, [r4, #8]
   1a98c:	ldrb	r8, [fp]
   1a990:	ldr	r5, [r4]
   1a994:	ldr	r9, [r4, #12]
   1a998:	cmp	r8, #58	; 0x3a
   1a99c:	movne	r0, #63	; 0x3f
   1a9a0:	moveq	r0, #58	; 0x3a
   1a9a4:	ldr	r2, [sp, #28]
   1a9a8:	b	1a5d0 <argp_error@@Base+0x1128>
   1a9ac:	ldr	r3, [sp, #32]
   1a9b0:	ldr	r1, [pc, #36]	; 1a9dc <argp_error@@Base+0x1534>
   1a9b4:	ldr	r2, [r3]
   1a9b8:	ldr	r0, [r1]
   1a9bc:	mov	r3, r8
   1a9c0:	ldr	r1, [pc, #40]	; 1a9f0 <argp_error@@Base+0x1548>
   1a9c4:	bl	111d4 <fprintf@plt>
   1a9c8:	b	1a93c <argp_error@@Base+0x1494>
   1a9cc:	muleq	r2, r8, r3
   1a9d0:	strdeq	sp, [r2], -r0
   1a9d4:	muleq	r1, ip, r2
   1a9d8:	andeq	sp, r2, r0, lsr #8
   1a9dc:			; <UNDEFINED> instruction: 0x0002d3b0
   1a9e0:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a9e4:	andeq	ip, r1, ip, asr #23
   1a9e8:	andeq	ip, r1, r4, lsr #24
   1a9ec:	andeq	fp, r1, r0, lsl lr
   1a9f0:	strdeq	ip, [r1], -r8
   1a9f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9f8:	sub	sp, sp, #20
   1a9fc:	ldr	r7, [pc, #1052]	; 1ae20 <argp_error@@Base+0x1978>
   1aa00:	ldr	r4, [pc, #1052]	; 1ae24 <argp_error@@Base+0x197c>
   1aa04:	subs	r6, r0, #0
   1aa08:	ldr	r5, [r7]
   1aa0c:	ldr	r3, [r7, #4]
   1aa10:	str	r1, [sp, #4]
   1aa14:	str	r5, [r4]
   1aa18:	str	r3, [r4, #4]
   1aa1c:	ble	1acf4 <argp_error@@Base+0x184c>
   1aa20:	mov	sl, r2
   1aa24:	cmp	r5, #0
   1aa28:	mov	r2, #0
   1aa2c:	str	r2, [r4, #12]
   1aa30:	beq	1aadc <argp_error@@Base+0x1634>
   1aa34:	ldr	r2, [r4, #16]
   1aa38:	cmp	r2, #0
   1aa3c:	beq	1aae8 <argp_error@@Base+0x1640>
   1aa40:	ldrb	r2, [sl]
   1aa44:	sub	r1, r2, #43	; 0x2b
   1aa48:	tst	r1, #253	; 0xfd
   1aa4c:	ldrbeq	r2, [sl, #1]
   1aa50:	addeq	sl, sl, #1
   1aa54:	cmp	r2, #58	; 0x3a
   1aa58:	ldr	r2, [r4, #20]
   1aa5c:	moveq	r3, #0
   1aa60:	cmp	r2, #0
   1aa64:	beq	1ab3c <argp_error@@Base+0x1694>
   1aa68:	ldrb	r1, [r2]
   1aa6c:	cmp	r1, #0
   1aa70:	beq	1ab3c <argp_error@@Base+0x1694>
   1aa74:	add	r9, r2, #1
   1aa78:	str	r9, [r4, #20]
   1aa7c:	ldrb	r8, [r2]
   1aa80:	mov	r0, sl
   1aa84:	str	r3, [sp, #12]
   1aa88:	mov	r1, r8
   1aa8c:	str	r2, [sp, #8]
   1aa90:	bl	111c8 <strchr@plt>
   1aa94:	ldr	r2, [sp, #8]
   1aa98:	mov	fp, r8
   1aa9c:	ldr	r3, [sp, #12]
   1aaa0:	ldrb	r1, [r2, #1]
   1aaa4:	cmp	r1, #0
   1aaa8:	addeq	r5, r5, #1
   1aaac:	sub	r1, r8, #58	; 0x3a
   1aab0:	streq	r5, [r4]
   1aab4:	cmp	r0, #0
   1aab8:	cmpne	r1, #1
   1aabc:	bls	1ac28 <argp_error@@Base+0x1780>
   1aac0:	ldrb	r1, [r0, #1]
   1aac4:	cmp	r1, #58	; 0x3a
   1aac8:	beq	1ad34 <argp_error@@Base+0x188c>
   1aacc:	mov	r0, r8
   1aad0:	ldr	r9, [r4, #12]
   1aad4:	ldr	fp, [r4, #8]
   1aad8:	b	1ac10 <argp_error@@Base+0x1768>
   1aadc:	mov	r2, #1
   1aae0:	mov	r5, r2
   1aae4:	str	r2, [r4]
   1aae8:	mov	r2, #0
   1aaec:	str	r5, [r4, #32]
   1aaf0:	str	r5, [r4, #28]
   1aaf4:	str	r2, [r4, #20]
   1aaf8:	ldrb	r1, [sl]
   1aafc:	cmp	r1, #45	; 0x2d
   1ab00:	moveq	r1, #2
   1ab04:	addeq	sl, sl, #1
   1ab08:	streq	r1, [r4, #24]
   1ab0c:	beq	1ab28 <argp_error@@Base+0x1680>
   1ab10:	cmp	r1, #43	; 0x2b
   1ab14:	addeq	sl, sl, #1
   1ab18:	moveq	r1, r2
   1ab1c:	movne	r1, r2
   1ab20:	streq	r2, [r4, #24]
   1ab24:	strne	r2, [r4, #24]
   1ab28:	mov	r2, #1
   1ab2c:	str	r2, [r4, #16]
   1ab30:	ldrb	r2, [sl]
   1ab34:	cmp	r2, #58	; 0x3a
   1ab38:	beq	1ac60 <argp_error@@Base+0x17b8>
   1ab3c:	add	r1, r4, #24
   1ab40:	ldm	r1, {r1, r2, r8}
   1ab44:	cmp	r8, r5
   1ab48:	movgt	r8, r5
   1ab4c:	strgt	r5, [r4, #32]
   1ab50:	cmp	r5, r2
   1ab54:	movlt	r2, r5
   1ab58:	strlt	r5, [r4, #28]
   1ab5c:	cmp	r1, #1
   1ab60:	beq	1ac74 <argp_error@@Base+0x17cc>
   1ab64:	cmp	r6, r5
   1ab68:	str	r3, [sp, #8]
   1ab6c:	beq	1ace4 <argp_error@@Base+0x183c>
   1ab70:	ldr	fp, [sp, #4]
   1ab74:	ldr	r1, [pc, #684]	; 1ae28 <argp_error@@Base+0x1980>
   1ab78:	ldr	r9, [fp, r5, lsl #2]
   1ab7c:	mov	r0, r9
   1ab80:	bl	11030 <strcmp@plt>
   1ab84:	ldr	r3, [sp, #8]
   1ab88:	cmp	r0, #0
   1ab8c:	bne	1abe4 <argp_error@@Base+0x173c>
   1ab90:	add	r3, r5, #1
   1ab94:	ldr	r5, [r4, #28]
   1ab98:	str	r3, [r4]
   1ab9c:	cmp	r5, r8
   1aba0:	beq	1ad28 <argp_error@@Base+0x1880>
   1aba4:	cmp	r3, r8
   1aba8:	beq	1abbc <argp_error@@Base+0x1714>
   1abac:	mov	r0, fp
   1abb0:	ldr	r1, [pc, #620]	; 1ae24 <argp_error@@Base+0x197c>
   1abb4:	bl	19654 <argp_error@@Base+0x1ac>
   1abb8:	ldr	r5, [r4, #28]
   1abbc:	mov	r8, r6
   1abc0:	cmp	r8, r5
   1abc4:	str	r6, [r4, #32]
   1abc8:	str	r6, [r4]
   1abcc:	beq	1acf0 <argp_error@@Base+0x1848>
   1abd0:	str	r5, [r4]
   1abd4:	ldr	r9, [r4, #12]
   1abd8:	ldr	fp, [r4, #8]
   1abdc:	mvn	r0, #0
   1abe0:	b	1ac10 <argp_error@@Base+0x1768>
   1abe4:	ldrb	r2, [r9]
   1abe8:	cmp	r2, #45	; 0x2d
   1abec:	beq	1ad14 <argp_error@@Base+0x186c>
   1abf0:	ldr	r3, [r4, #24]
   1abf4:	cmp	r3, #0
   1abf8:	beq	1acf4 <argp_error@@Base+0x184c>
   1abfc:	ldr	fp, [r4, #8]
   1ac00:	mov	r0, #1
   1ac04:	add	r5, r5, #1
   1ac08:	str	r5, [r4]
   1ac0c:	str	r9, [r4, #12]
   1ac10:	ldr	r3, [pc, #532]	; 1ae2c <argp_error@@Base+0x1984>
   1ac14:	str	r5, [r7]
   1ac18:	str	fp, [r7, #8]
   1ac1c:	str	r9, [r3]
   1ac20:	add	sp, sp, #20
   1ac24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac28:	cmp	r3, #0
   1ac2c:	beq	1ac50 <argp_error@@Base+0x17a8>
   1ac30:	ldr	r3, [sp, #4]
   1ac34:	ldr	r1, [pc, #500]	; 1ae30 <argp_error@@Base+0x1988>
   1ac38:	ldr	r2, [r3]
   1ac3c:	ldr	r0, [r1]
   1ac40:	mov	r3, r8
   1ac44:	ldr	r1, [pc, #488]	; 1ae34 <argp_error@@Base+0x198c>
   1ac48:	bl	111d4 <fprintf@plt>
   1ac4c:	ldr	r5, [r4]
   1ac50:	str	r8, [r4, #8]
   1ac54:	ldr	r9, [r4, #12]
   1ac58:	mov	r0, #63	; 0x3f
   1ac5c:	b	1ac10 <argp_error@@Base+0x1768>
   1ac60:	cmp	r1, #1
   1ac64:	mov	r8, r5
   1ac68:	mov	r2, r5
   1ac6c:	mov	r3, #0
   1ac70:	bne	1ab64 <argp_error@@Base+0x16bc>
   1ac74:	cmp	r2, r8
   1ac78:	beq	1ad6c <argp_error@@Base+0x18c4>
   1ac7c:	cmp	r5, r8
   1ac80:	beq	1ac9c <argp_error@@Base+0x17f4>
   1ac84:	ldr	r1, [pc, #408]	; 1ae24 <argp_error@@Base+0x197c>
   1ac88:	ldr	r0, [sp, #4]
   1ac8c:	str	r3, [sp, #8]
   1ac90:	bl	19654 <argp_error@@Base+0x1ac>
   1ac94:	ldr	r8, [r4]
   1ac98:	ldr	r3, [sp, #8]
   1ac9c:	cmp	r6, r8
   1aca0:	ldrgt	r2, [sp, #4]
   1aca4:	addgt	r1, r2, r8, lsl #2
   1aca8:	bgt	1acc0 <argp_error@@Base+0x1818>
   1acac:	b	1acdc <argp_error@@Base+0x1834>
   1acb0:	add	r8, r8, #1
   1acb4:	cmp	r6, r8
   1acb8:	str	r8, [r4]
   1acbc:	beq	1ad04 <argp_error@@Base+0x185c>
   1acc0:	ldr	r2, [r1], #4
   1acc4:	ldrb	r0, [r2]
   1acc8:	cmp	r0, #45	; 0x2d
   1accc:	bne	1acb0 <argp_error@@Base+0x1808>
   1acd0:	ldrb	r2, [r2, #1]
   1acd4:	cmp	r2, #0
   1acd8:	beq	1acb0 <argp_error@@Base+0x1808>
   1acdc:	mov	r5, r8
   1ace0:	b	1ad08 <argp_error@@Base+0x1860>
   1ace4:	ldr	r5, [r4, #28]
   1ace8:	cmp	r8, r5
   1acec:	bne	1abd0 <argp_error@@Base+0x1728>
   1acf0:	mov	r5, r6
   1acf4:	ldr	r9, [r4, #12]
   1acf8:	ldr	fp, [r4, #8]
   1acfc:	mvn	r0, #0
   1ad00:	b	1ac10 <argp_error@@Base+0x1768>
   1ad04:	mov	r5, r6
   1ad08:	mov	r8, r5
   1ad0c:	str	r5, [r4, #32]
   1ad10:	b	1ab64 <argp_error@@Base+0x16bc>
   1ad14:	ldrb	r2, [r9, #1]
   1ad18:	cmp	r2, #0
   1ad1c:	beq	1abf0 <argp_error@@Base+0x1748>
   1ad20:	add	r2, r9, #1
   1ad24:	b	1aa74 <argp_error@@Base+0x15cc>
   1ad28:	mov	r5, r3
   1ad2c:	str	r3, [r4, #28]
   1ad30:	b	1abbc <argp_error@@Base+0x1714>
   1ad34:	ldrb	r1, [r0, #2]
   1ad38:	cmp	r1, #58	; 0x3a
   1ad3c:	beq	1ada8 <argp_error@@Base+0x1900>
   1ad40:	ldrb	r2, [r2, #1]
   1ad44:	cmp	r2, #0
   1ad48:	beq	1ad7c <argp_error@@Base+0x18d4>
   1ad4c:	ldr	fp, [r4, #8]
   1ad50:	mov	r0, r8
   1ad54:	add	r5, r5, #1
   1ad58:	str	r5, [r4]
   1ad5c:	str	r9, [r4, #12]
   1ad60:	mov	r3, #0
   1ad64:	str	r3, [r4, #20]
   1ad68:	b	1ac10 <argp_error@@Base+0x1768>
   1ad6c:	cmp	r5, r8
   1ad70:	movne	r8, r5
   1ad74:	strne	r5, [r4, #28]
   1ad78:	b	1ac9c <argp_error@@Base+0x17f4>
   1ad7c:	cmp	r6, r5
   1ad80:	beq	1add4 <argp_error@@Base+0x192c>
   1ad84:	ldr	r2, [sp, #4]
   1ad88:	add	r3, r5, #1
   1ad8c:	ldr	fp, [r4, #8]
   1ad90:	ldr	r9, [r2, r5, lsl #2]
   1ad94:	mov	r0, r8
   1ad98:	mov	r5, r3
   1ad9c:	str	r9, [r4, #12]
   1ada0:	str	r3, [r4]
   1ada4:	b	1ad60 <argp_error@@Base+0x18b8>
   1ada8:	ldrb	r3, [r2, #1]
   1adac:	mov	r0, r8
   1adb0:	ldr	fp, [r4, #8]
   1adb4:	cmp	r3, #0
   1adb8:	moveq	r9, r3
   1adbc:	addne	r5, r5, #1
   1adc0:	mov	r3, #0
   1adc4:	strne	r5, [r4]
   1adc8:	str	r9, [r4, #12]
   1adcc:	str	r3, [r4, #20]
   1add0:	b	1ac10 <argp_error@@Base+0x1768>
   1add4:	cmp	r3, #0
   1add8:	beq	1adfc <argp_error@@Base+0x1954>
   1addc:	ldr	r3, [sp, #4]
   1ade0:	ldr	r1, [pc, #72]	; 1ae30 <argp_error@@Base+0x1988>
   1ade4:	ldr	r2, [r3]
   1ade8:	ldr	r0, [r1]
   1adec:	mov	r3, r8
   1adf0:	ldr	r1, [pc, #64]	; 1ae38 <argp_error@@Base+0x1990>
   1adf4:	bl	111d4 <fprintf@plt>
   1adf8:	ldr	r6, [r4]
   1adfc:	str	r8, [r4, #8]
   1ae00:	ldrb	r8, [sl]
   1ae04:	mov	r5, r6
   1ae08:	cmp	r8, #58	; 0x3a
   1ae0c:	moveq	r0, r8
   1ae10:	ldreq	r9, [r4, #12]
   1ae14:	ldrne	r9, [r4, #12]
   1ae18:	movne	r0, #63	; 0x3f
   1ae1c:	b	1ad60 <argp_error@@Base+0x18b8>
   1ae20:	muleq	r2, r8, r3
   1ae24:	strdeq	sp, [r2], -r0
   1ae28:	muleq	r1, ip, r2
   1ae2c:	andeq	sp, r2, r0, lsr #8
   1ae30:			; <UNDEFINED> instruction: 0x0002d3b0
   1ae34:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ae38:	strdeq	ip, [r1], -r8
   1ae3c:	push	{r4, r5, r6, lr}
   1ae40:	subs	r4, r2, #0
   1ae44:	mov	r6, r0
   1ae48:	mov	r5, r1
   1ae4c:	beq	1ae78 <argp_error@@Base+0x19d0>
   1ae50:	mov	r1, r4
   1ae54:	mvn	r0, #0
   1ae58:	bl	1b6f8 <argp_error@@Base+0x2250>
   1ae5c:	cmp	r0, r5
   1ae60:	bcs	1ae78 <argp_error@@Base+0x19d0>
   1ae64:	bl	111e0 <__errno_location@plt>
   1ae68:	mov	r3, #12
   1ae6c:	str	r3, [r0]
   1ae70:	mov	r0, #0
   1ae74:	pop	{r4, r5, r6, pc}
   1ae78:	mul	r1, r5, r4
   1ae7c:	mov	r0, r6
   1ae80:	pop	{r4, r5, r6, lr}
   1ae84:	b	15108 <argp_parse@@Base+0x25f4>
   1ae88:	push	{r4, r5, r6, r7, r8, lr}
   1ae8c:	mov	r8, r0
   1ae90:	mov	r0, #36	; 0x24
   1ae94:	mov	r7, r1
   1ae98:	mov	r6, r2
   1ae9c:	mov	r5, r3
   1aea0:	bl	150dc <argp_parse@@Base+0x25c8>
   1aea4:	subs	r4, r0, #0
   1aea8:	beq	1aeec <argp_error@@Base+0x1a44>
   1aeac:	mov	r0, #0
   1aeb0:	str	r5, [r4, #12]
   1aeb4:	str	r0, [r4, #20]
   1aeb8:	str	r0, [r4, #16]
   1aebc:	str	r8, [r4]
   1aec0:	str	r7, [r4, #4]
   1aec4:	str	r6, [r4, #8]
   1aec8:	mov	r0, #200	; 0xc8
   1aecc:	bl	150dc <argp_parse@@Base+0x25c8>
   1aed0:	cmp	r0, #0
   1aed4:	addne	r3, r0, #200	; 0xc8
   1aed8:	mov	r5, r0
   1aedc:	str	r0, [r4, #24]
   1aee0:	strne	r0, [r4, #28]
   1aee4:	strne	r3, [r4, #32]
   1aee8:	beq	1aef4 <argp_error@@Base+0x1a4c>
   1aeec:	mov	r0, r4
   1aef0:	pop	{r4, r5, r6, r7, r8, pc}
   1aef4:	mov	r0, r4
   1aef8:	bl	13a90 <argp_parse@@Base+0xf7c>
   1aefc:	mov	r4, r5
   1af00:	b	1aeec <argp_error@@Base+0x1a44>
   1af04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af08:	mov	r7, r0
   1af0c:	ldr	r4, [r0, #24]
   1af10:	ldr	r3, [r0, #16]
   1af14:	ldr	r9, [r0, #28]
   1af18:	sub	sp, sp, #12
   1af1c:	add	r4, r4, r3
   1af20:	mov	sl, #32
   1af24:	cmp	r4, r9
   1af28:	bcs	1affc <argp_error@@Base+0x1b54>
   1af2c:	ldr	r8, [r7, #20]
   1af30:	cmp	r8, #0
   1af34:	bne	1afa0 <argp_error@@Base+0x1af8>
   1af38:	ldr	r5, [r7, #4]
   1af3c:	cmp	r5, #0
   1af40:	beq	1b270 <argp_error@@Base+0x1dc8>
   1af44:	ldr	r2, [r7, #32]
   1af48:	add	r3, r9, r5
   1af4c:	cmp	r2, r3
   1af50:	bls	1af68 <argp_error@@Base+0x1ac0>
   1af54:	b	1b398 <argp_error@@Base+0x1ef0>
   1af58:	cmp	r5, r8
   1af5c:	str	r1, [r0, #20]
   1af60:	strb	sl, [r3]
   1af64:	beq	1af94 <argp_error@@Base+0x1aec>
   1af68:	ldr	r0, [r7]
   1af6c:	add	r8, r8, #1
   1af70:	ldr	r3, [r0, #20]
   1af74:	ldr	r2, [r0, #24]
   1af78:	add	r1, r3, #1
   1af7c:	cmp	r3, r2
   1af80:	bcc	1af58 <argp_error@@Base+0x1ab0>
   1af84:	mov	r1, sl
   1af88:	bl	11240 <__overflow@plt>
   1af8c:	cmp	r5, r8
   1af90:	bne	1af68 <argp_error@@Base+0x1ac0>
   1af94:	ldr	r9, [r7, #28]
   1af98:	mov	r8, r5
   1af9c:	str	r5, [r7, #20]
   1afa0:	sub	fp, r9, r4
   1afa4:	mov	r2, fp
   1afa8:	mov	r1, #10
   1afac:	mov	r0, r4
   1afb0:	bl	11228 <memchr@plt>
   1afb4:	cmp	r8, #0
   1afb8:	movlt	r8, #0
   1afbc:	movlt	r3, r8
   1afc0:	mov	r5, r0
   1afc4:	strlt	r3, [r7, #20]
   1afc8:	cmp	r5, #0
   1afcc:	beq	1b290 <argp_error@@Base+0x1de8>
   1afd0:	sub	r2, r5, r4
   1afd4:	ldr	r3, [r7, #8]
   1afd8:	add	r2, r2, r8
   1afdc:	cmp	r2, r3
   1afe0:	bge	1b010 <argp_error@@Base+0x1b68>
   1afe4:	ldr	r9, [r7, #28]
   1afe8:	add	r4, r5, #1
   1afec:	mov	r3, #0
   1aff0:	cmp	r4, r9
   1aff4:	str	r3, [r7, #20]
   1aff8:	bcc	1af2c <argp_error@@Base+0x1a84>
   1affc:	ldr	r3, [r7, #24]
   1b000:	sub	r9, r9, r3
   1b004:	str	r9, [r7, #16]
   1b008:	add	sp, sp, #12
   1b00c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b010:	ldr	r2, [r7, #12]
   1b014:	sub	r6, r3, #1
   1b018:	cmp	r2, #0
   1b01c:	str	r2, [sp, #4]
   1b020:	blt	1b348 <argp_error@@Base+0x1ea0>
   1b024:	add	r6, r6, #1
   1b028:	sub	r8, r6, r8
   1b02c:	adds	r8, r4, r8
   1b030:	bcs	1b2c8 <argp_error@@Base+0x1e20>
   1b034:	bl	1118c <__ctype_b_loc@plt>
   1b038:	mov	r3, r8
   1b03c:	ldr	r0, [r0]
   1b040:	b	1b04c <argp_error@@Base+0x1ba4>
   1b044:	cmp	r3, r4
   1b048:	bcc	1b2cc <argp_error@@Base+0x1e24>
   1b04c:	mov	r1, r3
   1b050:	sub	r3, r3, #1
   1b054:	ldrb	r2, [r1]
   1b058:	mov	r6, r3
   1b05c:	lsl	r2, r2, #1
   1b060:	ldrh	r2, [r0, r2]
   1b064:	tst	r2, #1
   1b068:	beq	1b044 <argp_error@@Base+0x1b9c>
   1b06c:	add	r6, r1, #1
   1b070:	cmp	r6, r4
   1b074:	bls	1b2e0 <argp_error@@Base+0x1e38>
   1b078:	cmp	r4, r1
   1b07c:	bhi	1b2d8 <argp_error@@Base+0x1e30>
   1b080:	mov	r1, r3
   1b084:	sub	r8, r4, #1
   1b088:	b	1b0a4 <argp_error@@Base+0x1bfc>
   1b08c:	ldrb	r3, [r1]
   1b090:	sub	r1, r1, #1
   1b094:	lsl	r3, r3, #1
   1b098:	ldrh	r3, [r0, r3]
   1b09c:	tst	r3, #1
   1b0a0:	beq	1b3d0 <argp_error@@Base+0x1f28>
   1b0a4:	cmp	r8, r1
   1b0a8:	mov	r2, r1
   1b0ac:	bne	1b08c <argp_error@@Base+0x1be4>
   1b0b0:	add	r8, r8, #1
   1b0b4:	add	r3, fp, #1
   1b0b8:	add	r3, r4, r3
   1b0bc:	cmp	r6, r3
   1b0c0:	beq	1b1a0 <argp_error@@Base+0x1cf8>
   1b0c4:	add	r5, r8, #1
   1b0c8:	ldr	r3, [sp, #4]
   1b0cc:	sub	r1, r6, r5
   1b0d0:	cmp	r1, r3
   1b0d4:	bge	1b1bc <argp_error@@Base+0x1d14>
   1b0d8:	cmp	r6, r9
   1b0dc:	bcs	1b1b4 <argp_error@@Base+0x1d0c>
   1b0e0:	ldr	r3, [r7, #32]
   1b0e4:	ldr	r2, [sp, #4]
   1b0e8:	sub	r3, r3, r9
   1b0ec:	add	r0, r2, #1
   1b0f0:	cmp	r3, r0
   1b0f4:	bgt	1b400 <argp_error@@Base+0x1f58>
   1b0f8:	ldr	r0, [r7, #24]
   1b0fc:	cmp	r8, r0
   1b100:	bls	1b114 <argp_error@@Base+0x1c6c>
   1b104:	sub	r2, r8, r0
   1b108:	ldr	r3, [r7]
   1b10c:	mov	r1, #1
   1b110:	bl	110c0 <fwrite_unlocked@plt>
   1b114:	ldr	r0, [r7]
   1b118:	ldr	r2, [r0, #24]
   1b11c:	ldr	r3, [r0, #20]
   1b120:	cmp	r3, r2
   1b124:	addcc	r2, r3, #1
   1b128:	strcc	r2, [r0, #20]
   1b12c:	movcc	r2, #10
   1b130:	strbcc	r2, [r3]
   1b134:	bcs	1b440 <argp_error@@Base+0x1f98>
   1b138:	ldr	r5, [r7, #24]
   1b13c:	sub	r4, r4, r5
   1b140:	sub	r1, r6, r5
   1b144:	add	fp, fp, r4
   1b148:	mov	r9, r1
   1b14c:	mov	r2, r5
   1b150:	ldr	r3, [r7, #12]
   1b154:	cmp	r3, r1
   1b158:	bgt	1b1d8 <argp_error@@Base+0x1d30>
   1b15c:	cmp	r3, #0
   1b160:	mov	r4, r5
   1b164:	ble	1b17c <argp_error@@Base+0x1cd4>
   1b168:	strb	sl, [r4], #1
   1b16c:	ldr	r3, [r7, #12]
   1b170:	sub	r1, r4, r5
   1b174:	cmp	r1, r3
   1b178:	blt	1b168 <argp_error@@Base+0x1cc0>
   1b17c:	cmp	r4, r6
   1b180:	bcc	1b254 <argp_error@@Base+0x1dac>
   1b184:	sub	r9, fp, r9
   1b188:	cmp	r3, #0
   1b18c:	add	r9, r4, r9
   1b190:	mvneq	r3, #0
   1b194:	str	r9, [r7, #28]
   1b198:	str	r3, [r7, #20]
   1b19c:	b	1af24 <argp_error@@Base+0x1a7c>
   1b1a0:	ldr	r3, [r7, #32]
   1b1a4:	ldr	r2, [sp, #4]
   1b1a8:	sub	r3, r3, r8
   1b1ac:	cmp	r3, r2
   1b1b0:	ble	1b0d8 <argp_error@@Base+0x1c30>
   1b1b4:	add	r5, r8, #1
   1b1b8:	sub	r1, r6, r5
   1b1bc:	mov	r3, #10
   1b1c0:	strb	r3, [r8]
   1b1c4:	ldr	r3, [r7, #12]
   1b1c8:	sub	r9, r6, r4
   1b1cc:	cmp	r3, r1
   1b1d0:	mov	r2, r4
   1b1d4:	ble	1b15c <argp_error@@Base+0x1cb4>
   1b1d8:	add	r1, fp, #1
   1b1dc:	add	r1, r2, r1
   1b1e0:	cmp	r6, r1
   1b1e4:	beq	1b3ec <argp_error@@Base+0x1f44>
   1b1e8:	cmp	r3, #0
   1b1ec:	ble	1b248 <argp_error@@Base+0x1da0>
   1b1f0:	mov	r4, #0
   1b1f4:	mov	r8, r2
   1b1f8:	b	1b214 <argp_error@@Base+0x1d6c>
   1b1fc:	str	ip, [r0, #20]
   1b200:	strb	sl, [r3]
   1b204:	ldr	r3, [r7, #12]
   1b208:	add	r4, r4, #1
   1b20c:	cmp	r3, r4
   1b210:	ble	1b244 <argp_error@@Base+0x1d9c>
   1b214:	ldr	r0, [r7]
   1b218:	ldr	r3, [r0, #20]
   1b21c:	ldr	r1, [r0, #24]
   1b220:	add	ip, r3, #1
   1b224:	cmp	r3, r1
   1b228:	bcc	1b1fc <argp_error@@Base+0x1d54>
   1b22c:	mov	r1, sl
   1b230:	bl	11240 <__overflow@plt>
   1b234:	ldr	r3, [r7, #12]
   1b238:	add	r4, r4, #1
   1b23c:	cmp	r3, r4
   1b240:	bgt	1b214 <argp_error@@Base+0x1d6c>
   1b244:	mov	r2, r8
   1b248:	mov	r4, r5
   1b24c:	cmp	r4, r6
   1b250:	bcs	1b184 <argp_error@@Base+0x1cdc>
   1b254:	add	r2, r2, fp
   1b258:	sub	r2, r2, r6
   1b25c:	mov	r1, r6
   1b260:	mov	r0, r4
   1b264:	bl	1106c <memmove@plt>
   1b268:	ldr	r3, [r7, #12]
   1b26c:	b	1b184 <argp_error@@Base+0x1cdc>
   1b270:	sub	fp, r9, r4
   1b274:	mov	r2, fp
   1b278:	mov	r1, #10
   1b27c:	mov	r0, r4
   1b280:	bl	11228 <memchr@plt>
   1b284:	mov	r5, r0
   1b288:	cmp	r5, #0
   1b28c:	bne	1afd0 <argp_error@@Base+0x1b28>
   1b290:	ldr	r6, [r7, #8]
   1b294:	add	r3, fp, r8
   1b298:	cmp	r3, r6
   1b29c:	bcc	1b464 <argp_error@@Base+0x1fbc>
   1b2a0:	ldr	r2, [r7, #12]
   1b2a4:	sub	r6, r6, #1
   1b2a8:	cmp	r2, #0
   1b2ac:	str	r2, [sp, #4]
   1b2b0:	blt	1b450 <argp_error@@Base+0x1fa8>
   1b2b4:	add	r6, r6, #1
   1b2b8:	sub	r8, r6, r8
   1b2bc:	adds	r8, r4, r8
   1b2c0:	mov	r5, r9
   1b2c4:	bcc	1b034 <argp_error@@Base+0x1b8c>
   1b2c8:	mov	r6, r8
   1b2cc:	add	r6, r6, #1
   1b2d0:	cmp	r4, r6
   1b2d4:	bcs	1b2e0 <argp_error@@Base+0x1e38>
   1b2d8:	mov	r8, r6
   1b2dc:	b	1b0b4 <argp_error@@Base+0x1c0c>
   1b2e0:	cmp	r8, r5
   1b2e4:	bcs	1b31c <argp_error@@Base+0x1e74>
   1b2e8:	add	r6, r8, #1
   1b2ec:	b	1b310 <argp_error@@Base+0x1e68>
   1b2f0:	bl	1118c <__ctype_b_loc@plt>
   1b2f4:	ldrb	r3, [r6]
   1b2f8:	add	r6, r6, #1
   1b2fc:	lsl	r3, r3, #1
   1b300:	ldr	r2, [r0]
   1b304:	ldrh	r3, [r2, r3]
   1b308:	tst	r3, #1
   1b30c:	bne	1b32c <argp_error@@Base+0x1e84>
   1b310:	cmp	r6, r5
   1b314:	mov	r8, r6
   1b318:	bne	1b2f0 <argp_error@@Base+0x1e48>
   1b31c:	cmp	r8, r5
   1b320:	beq	1b3d8 <argp_error@@Base+0x1f30>
   1b324:	bl	1118c <__ctype_b_loc@plt>
   1b328:	ldr	r2, [r0]
   1b32c:	mov	r6, r8
   1b330:	ldrb	r3, [r6, #1]!
   1b334:	lsl	r3, r3, #1
   1b338:	ldrh	r3, [r2, r3]
   1b33c:	tst	r3, #1
   1b340:	bne	1b330 <argp_error@@Base+0x1e88>
   1b344:	b	1b0b4 <argp_error@@Base+0x1c0c>
   1b348:	cmp	r9, r5
   1b34c:	str	r3, [sp, #4]
   1b350:	bls	1b44c <argp_error@@Base+0x1fa4>
   1b354:	sub	r0, r6, r8
   1b358:	sub	r2, r9, r5
   1b35c:	add	r0, r4, r0
   1b360:	mov	r1, r5
   1b364:	bl	1106c <memmove@plt>
   1b368:	ldr	r2, [r7, #20]
   1b36c:	ldr	r9, [r7, #28]
   1b370:	sub	r6, r6, r2
   1b374:	add	r6, r4, r6
   1b378:	mov	r3, #0
   1b37c:	sub	r5, r6, r5
   1b380:	str	r3, [r7, #20]
   1b384:	ldr	r3, [sp, #4]
   1b388:	sub	r9, r9, r5
   1b38c:	add	r4, r4, r3
   1b390:	str	r9, [r7, #28]
   1b394:	b	1af24 <argp_error@@Base+0x1a7c>
   1b398:	add	r6, r4, r5
   1b39c:	sub	r2, r9, r4
   1b3a0:	mov	r1, r4
   1b3a4:	mov	r0, r6
   1b3a8:	bl	1106c <memmove@plt>
   1b3ac:	ldr	r3, [r7, #28]
   1b3b0:	mov	r0, r4
   1b3b4:	add	r3, r3, r5
   1b3b8:	str	r3, [r7, #28]
   1b3bc:	mov	r2, r5
   1b3c0:	mov	r1, sl
   1b3c4:	mov	r4, r6
   1b3c8:	bl	11204 <memset@plt>
   1b3cc:	b	1af94 <argp_error@@Base+0x1aec>
   1b3d0:	add	r8, r2, #1
   1b3d4:	b	1b0b4 <argp_error@@Base+0x1c0c>
   1b3d8:	mov	r3, #0
   1b3dc:	str	r3, [r7, #20]
   1b3e0:	add	r4, r8, #1
   1b3e4:	ldr	r9, [r7, #28]
   1b3e8:	b	1af24 <argp_error@@Base+0x1a7c>
   1b3ec:	ldr	r1, [r7, #32]
   1b3f0:	sub	r1, r1, r6
   1b3f4:	cmp	r3, r1
   1b3f8:	ble	1b15c <argp_error@@Base+0x1cb4>
   1b3fc:	b	1b1e8 <argp_error@@Base+0x1d40>
   1b400:	sub	r9, r9, r6
   1b404:	mov	r1, r6
   1b408:	mov	r2, r9
   1b40c:	add	r0, r8, r0
   1b410:	bl	1106c <memmove@plt>
   1b414:	ldr	r1, [r7, #12]
   1b418:	mov	r3, #10
   1b41c:	add	r6, r1, #1
   1b420:	add	r6, r8, r6
   1b424:	add	r9, r6, r9
   1b428:	sub	fp, r9, r4
   1b42c:	add	r5, r8, #1
   1b430:	strb	r3, [r8]
   1b434:	sub	r9, r6, r4
   1b438:	mov	r2, r4
   1b43c:	b	1b150 <argp_error@@Base+0x1ca8>
   1b440:	mov	r1, #10
   1b444:	bl	11240 <__overflow@plt>
   1b448:	b	1b138 <argp_error@@Base+0x1c90>
   1b44c:	add	r3, r8, fp
   1b450:	sub	r6, r6, r3
   1b454:	add	r9, r9, r6
   1b458:	str	r9, [r7, #28]
   1b45c:	str	r3, [r7, #20]
   1b460:	b	1affc <argp_error@@Base+0x1b54>
   1b464:	str	r3, [r7, #20]
   1b468:	ldr	r9, [r7, #28]
   1b46c:	b	1affc <argp_error@@Base+0x1b54>
   1b470:	push	{r4, lr}
   1b474:	mov	r4, r0
   1b478:	bl	1af04 <argp_error@@Base+0x1a5c>
   1b47c:	ldr	r2, [r4, #28]
   1b480:	ldr	r0, [r4, #24]
   1b484:	cmp	r2, r0
   1b488:	bls	1b4a0 <argp_error@@Base+0x1ff8>
   1b48c:	sub	r2, r2, r0
   1b490:	ldr	r3, [r4]
   1b494:	mov	r1, #1
   1b498:	bl	110c0 <fwrite_unlocked@plt>
   1b49c:	ldr	r0, [r4, #24]
   1b4a0:	bl	13a90 <argp_parse@@Base+0xf7c>
   1b4a4:	mov	r0, r4
   1b4a8:	pop	{r4, lr}
   1b4ac:	b	13a90 <argp_parse@@Base+0xf7c>
   1b4b0:	ldr	r3, [r0, #32]
   1b4b4:	ldr	r2, [r0, #28]
   1b4b8:	sub	r3, r3, r2
   1b4bc:	cmp	r3, r1
   1b4c0:	bcc	1b4d0 <argp_error@@Base+0x2028>
   1b4c4:	mov	r3, #1
   1b4c8:	mov	r0, r3
   1b4cc:	bx	lr
   1b4d0:	push	{r4, r5, r6, lr}
   1b4d4:	mov	r4, r0
   1b4d8:	mov	r5, r1
   1b4dc:	bl	1af04 <argp_error@@Base+0x1a5c>
   1b4e0:	ldr	r3, [r4, #24]
   1b4e4:	ldr	r2, [r4, #28]
   1b4e8:	mov	r0, r3
   1b4ec:	sub	r2, r2, r3
   1b4f0:	mov	r1, #1
   1b4f4:	ldr	r3, [r4]
   1b4f8:	bl	110c0 <fwrite_unlocked@plt>
   1b4fc:	ldr	r2, [r4, #28]
   1b500:	ldr	r3, [r4, #24]
   1b504:	sub	r1, r2, r3
   1b508:	cmp	r0, r1
   1b50c:	bne	1b554 <argp_error@@Base+0x20ac>
   1b510:	ldr	r1, [r4, #32]
   1b514:	mov	r2, #0
   1b518:	sub	r1, r1, r3
   1b51c:	cmp	r5, r1
   1b520:	str	r3, [r4, #28]
   1b524:	str	r2, [r4, #16]
   1b528:	bls	1b548 <argp_error@@Base+0x20a0>
   1b52c:	adds	r5, r5, r1
   1b530:	bcc	1b584 <argp_error@@Base+0x20dc>
   1b534:	bl	111e0 <__errno_location@plt>
   1b538:	mov	r2, #12
   1b53c:	mov	r3, #0
   1b540:	str	r2, [r0]
   1b544:	b	1b54c <argp_error@@Base+0x20a4>
   1b548:	mov	r3, #1
   1b54c:	mov	r0, r3
   1b550:	pop	{r4, r5, r6, pc}
   1b554:	ldr	r1, [r4, #16]
   1b558:	sub	r2, r2, r0
   1b55c:	sub	r1, r1, r0
   1b560:	str	r2, [r4, #28]
   1b564:	str	r1, [r4, #16]
   1b568:	sub	r2, r2, r3
   1b56c:	add	r1, r3, r0
   1b570:	mov	r0, r3
   1b574:	bl	1106c <memmove@plt>
   1b578:	mov	r3, #0
   1b57c:	mov	r0, r3
   1b580:	pop	{r4, r5, r6, pc}
   1b584:	mov	r0, r3
   1b588:	mov	r1, r5
   1b58c:	bl	15108 <argp_parse@@Base+0x25f4>
   1b590:	cmp	r0, #0
   1b594:	beq	1b534 <argp_error@@Base+0x208c>
   1b598:	add	r5, r0, r5
   1b59c:	mov	r3, #1
   1b5a0:	str	r5, [r4, #32]
   1b5a4:	str	r0, [r4, #24]
   1b5a8:	str	r0, [r4, #28]
   1b5ac:	b	1b54c <argp_error@@Base+0x20a4>
   1b5b0:	push	{r1, r2, r3}
   1b5b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b5b8:	sub	sp, sp, #8
   1b5bc:	mov	r5, r0
   1b5c0:	ldr	r7, [sp, #36]	; 0x24
   1b5c4:	mov	r4, #150	; 0x96
   1b5c8:	mov	r8, #1
   1b5cc:	mov	r9, #0
   1b5d0:	add	r6, sp, #40	; 0x28
   1b5d4:	ldr	r1, [r5, #32]
   1b5d8:	ldr	r0, [r5, #28]
   1b5dc:	sub	r3, r1, r0
   1b5e0:	cmp	r4, r3
   1b5e4:	bhi	1b62c <argp_error@@Base+0x2184>
   1b5e8:	sub	r4, r1, r0
   1b5ec:	mov	r1, r4
   1b5f0:	mov	r3, r6
   1b5f4:	mov	r2, r7
   1b5f8:	str	r6, [sp, #4]
   1b5fc:	bl	1127c <vsnprintf@plt>
   1b600:	cmp	r4, r0
   1b604:	bls	1b624 <argp_error@@Base+0x217c>
   1b608:	ldr	r3, [r5, #28]
   1b60c:	add	r3, r3, r0
   1b610:	str	r3, [r5, #28]
   1b614:	add	sp, sp, #8
   1b618:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1b61c:	add	sp, sp, #12
   1b620:	bx	lr
   1b624:	add	r4, r0, #1
   1b628:	b	1b5d4 <argp_error@@Base+0x212c>
   1b62c:	mov	r0, r5
   1b630:	bl	1af04 <argp_error@@Base+0x1a5c>
   1b634:	ldr	r3, [r5, #24]
   1b638:	ldr	r2, [r5, #28]
   1b63c:	mov	r0, r3
   1b640:	sub	r2, r2, r3
   1b644:	mov	r1, r8
   1b648:	ldr	r3, [r5]
   1b64c:	bl	110c0 <fwrite_unlocked@plt>
   1b650:	ldr	r2, [r5, #28]
   1b654:	ldr	r3, [r5, #24]
   1b658:	sub	r1, r2, r3
   1b65c:	cmp	r0, r1
   1b660:	bne	1b6a8 <argp_error@@Base+0x2200>
   1b664:	ldr	r1, [r5, #32]
   1b668:	str	r3, [r5, #28]
   1b66c:	sub	r0, r1, r3
   1b670:	cmp	r4, r0
   1b674:	str	r9, [r5, #16]
   1b678:	movls	r0, r3
   1b67c:	bls	1b5e8 <argp_error@@Base+0x2140>
   1b680:	adds	r4, r4, r0
   1b684:	bcc	1b6d0 <argp_error@@Base+0x2228>
   1b688:	bl	111e0 <__errno_location@plt>
   1b68c:	mov	r3, #12
   1b690:	str	r3, [r0]
   1b694:	mvn	r0, #0
   1b698:	add	sp, sp, #8
   1b69c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1b6a0:	add	sp, sp, #12
   1b6a4:	bx	lr
   1b6a8:	ldr	r1, [r5, #16]
   1b6ac:	sub	r2, r2, r0
   1b6b0:	sub	r1, r1, r0
   1b6b4:	str	r2, [r5, #28]
   1b6b8:	str	r1, [r5, #16]
   1b6bc:	sub	r2, r2, r3
   1b6c0:	add	r1, r3, r0
   1b6c4:	mov	r0, r3
   1b6c8:	bl	1106c <memmove@plt>
   1b6cc:	b	1b694 <argp_error@@Base+0x21ec>
   1b6d0:	mov	r1, r4
   1b6d4:	mov	r0, r3
   1b6d8:	bl	15108 <argp_parse@@Base+0x25f4>
   1b6dc:	cmp	r0, #0
   1b6e0:	add	r1, r0, r4
   1b6e4:	beq	1b688 <argp_error@@Base+0x21e0>
   1b6e8:	str	r0, [r5, #24]
   1b6ec:	str	r1, [r5, #32]
   1b6f0:	str	r0, [r5, #28]
   1b6f4:	b	1b5e8 <argp_error@@Base+0x2140>
   1b6f8:	subs	r2, r1, #1
   1b6fc:	bxeq	lr
   1b700:	bcc	1b8d8 <argp_error@@Base+0x2430>
   1b704:	cmp	r0, r1
   1b708:	bls	1b8bc <argp_error@@Base+0x2414>
   1b70c:	tst	r1, r2
   1b710:	beq	1b8c8 <argp_error@@Base+0x2420>
   1b714:	clz	r3, r0
   1b718:	clz	r2, r1
   1b71c:	sub	r3, r2, r3
   1b720:	rsbs	r3, r3, #31
   1b724:	addne	r3, r3, r3, lsl #1
   1b728:	mov	r2, #0
   1b72c:	addne	pc, pc, r3, lsl #2
   1b730:	nop			; (mov r0, r0)
   1b734:	cmp	r0, r1, lsl #31
   1b738:	adc	r2, r2, r2
   1b73c:	subcs	r0, r0, r1, lsl #31
   1b740:	cmp	r0, r1, lsl #30
   1b744:	adc	r2, r2, r2
   1b748:	subcs	r0, r0, r1, lsl #30
   1b74c:	cmp	r0, r1, lsl #29
   1b750:	adc	r2, r2, r2
   1b754:	subcs	r0, r0, r1, lsl #29
   1b758:	cmp	r0, r1, lsl #28
   1b75c:	adc	r2, r2, r2
   1b760:	subcs	r0, r0, r1, lsl #28
   1b764:	cmp	r0, r1, lsl #27
   1b768:	adc	r2, r2, r2
   1b76c:	subcs	r0, r0, r1, lsl #27
   1b770:	cmp	r0, r1, lsl #26
   1b774:	adc	r2, r2, r2
   1b778:	subcs	r0, r0, r1, lsl #26
   1b77c:	cmp	r0, r1, lsl #25
   1b780:	adc	r2, r2, r2
   1b784:	subcs	r0, r0, r1, lsl #25
   1b788:	cmp	r0, r1, lsl #24
   1b78c:	adc	r2, r2, r2
   1b790:	subcs	r0, r0, r1, lsl #24
   1b794:	cmp	r0, r1, lsl #23
   1b798:	adc	r2, r2, r2
   1b79c:	subcs	r0, r0, r1, lsl #23
   1b7a0:	cmp	r0, r1, lsl #22
   1b7a4:	adc	r2, r2, r2
   1b7a8:	subcs	r0, r0, r1, lsl #22
   1b7ac:	cmp	r0, r1, lsl #21
   1b7b0:	adc	r2, r2, r2
   1b7b4:	subcs	r0, r0, r1, lsl #21
   1b7b8:	cmp	r0, r1, lsl #20
   1b7bc:	adc	r2, r2, r2
   1b7c0:	subcs	r0, r0, r1, lsl #20
   1b7c4:	cmp	r0, r1, lsl #19
   1b7c8:	adc	r2, r2, r2
   1b7cc:	subcs	r0, r0, r1, lsl #19
   1b7d0:	cmp	r0, r1, lsl #18
   1b7d4:	adc	r2, r2, r2
   1b7d8:	subcs	r0, r0, r1, lsl #18
   1b7dc:	cmp	r0, r1, lsl #17
   1b7e0:	adc	r2, r2, r2
   1b7e4:	subcs	r0, r0, r1, lsl #17
   1b7e8:	cmp	r0, r1, lsl #16
   1b7ec:	adc	r2, r2, r2
   1b7f0:	subcs	r0, r0, r1, lsl #16
   1b7f4:	cmp	r0, r1, lsl #15
   1b7f8:	adc	r2, r2, r2
   1b7fc:	subcs	r0, r0, r1, lsl #15
   1b800:	cmp	r0, r1, lsl #14
   1b804:	adc	r2, r2, r2
   1b808:	subcs	r0, r0, r1, lsl #14
   1b80c:	cmp	r0, r1, lsl #13
   1b810:	adc	r2, r2, r2
   1b814:	subcs	r0, r0, r1, lsl #13
   1b818:	cmp	r0, r1, lsl #12
   1b81c:	adc	r2, r2, r2
   1b820:	subcs	r0, r0, r1, lsl #12
   1b824:	cmp	r0, r1, lsl #11
   1b828:	adc	r2, r2, r2
   1b82c:	subcs	r0, r0, r1, lsl #11
   1b830:	cmp	r0, r1, lsl #10
   1b834:	adc	r2, r2, r2
   1b838:	subcs	r0, r0, r1, lsl #10
   1b83c:	cmp	r0, r1, lsl #9
   1b840:	adc	r2, r2, r2
   1b844:	subcs	r0, r0, r1, lsl #9
   1b848:	cmp	r0, r1, lsl #8
   1b84c:	adc	r2, r2, r2
   1b850:	subcs	r0, r0, r1, lsl #8
   1b854:	cmp	r0, r1, lsl #7
   1b858:	adc	r2, r2, r2
   1b85c:	subcs	r0, r0, r1, lsl #7
   1b860:	cmp	r0, r1, lsl #6
   1b864:	adc	r2, r2, r2
   1b868:	subcs	r0, r0, r1, lsl #6
   1b86c:	cmp	r0, r1, lsl #5
   1b870:	adc	r2, r2, r2
   1b874:	subcs	r0, r0, r1, lsl #5
   1b878:	cmp	r0, r1, lsl #4
   1b87c:	adc	r2, r2, r2
   1b880:	subcs	r0, r0, r1, lsl #4
   1b884:	cmp	r0, r1, lsl #3
   1b888:	adc	r2, r2, r2
   1b88c:	subcs	r0, r0, r1, lsl #3
   1b890:	cmp	r0, r1, lsl #2
   1b894:	adc	r2, r2, r2
   1b898:	subcs	r0, r0, r1, lsl #2
   1b89c:	cmp	r0, r1, lsl #1
   1b8a0:	adc	r2, r2, r2
   1b8a4:	subcs	r0, r0, r1, lsl #1
   1b8a8:	cmp	r0, r1
   1b8ac:	adc	r2, r2, r2
   1b8b0:	subcs	r0, r0, r1
   1b8b4:	mov	r0, r2
   1b8b8:	bx	lr
   1b8bc:	moveq	r0, #1
   1b8c0:	movne	r0, #0
   1b8c4:	bx	lr
   1b8c8:	clz	r2, r1
   1b8cc:	rsb	r2, r2, #31
   1b8d0:	lsr	r0, r0, r2
   1b8d4:	bx	lr
   1b8d8:	cmp	r0, #0
   1b8dc:	mvnne	r0, #0
   1b8e0:	b	1bb80 <argp_error@@Base+0x26d8>
   1b8e4:	cmp	r1, #0
   1b8e8:	beq	1b8d8 <argp_error@@Base+0x2430>
   1b8ec:	push	{r0, r1, lr}
   1b8f0:	bl	1b6f8 <argp_error@@Base+0x2250>
   1b8f4:	pop	{r1, r2, lr}
   1b8f8:	mul	r3, r2, r0
   1b8fc:	sub	r1, r1, r3
   1b900:	bx	lr
   1b904:	cmp	r1, #0
   1b908:	beq	1bb14 <argp_error@@Base+0x266c>
   1b90c:	eor	ip, r0, r1
   1b910:	rsbmi	r1, r1, #0
   1b914:	subs	r2, r1, #1
   1b918:	beq	1bae0 <argp_error@@Base+0x2638>
   1b91c:	movs	r3, r0
   1b920:	rsbmi	r3, r0, #0
   1b924:	cmp	r3, r1
   1b928:	bls	1baec <argp_error@@Base+0x2644>
   1b92c:	tst	r1, r2
   1b930:	beq	1bafc <argp_error@@Base+0x2654>
   1b934:	clz	r2, r3
   1b938:	clz	r0, r1
   1b93c:	sub	r2, r0, r2
   1b940:	rsbs	r2, r2, #31
   1b944:	addne	r2, r2, r2, lsl #1
   1b948:	mov	r0, #0
   1b94c:	addne	pc, pc, r2, lsl #2
   1b950:	nop			; (mov r0, r0)
   1b954:	cmp	r3, r1, lsl #31
   1b958:	adc	r0, r0, r0
   1b95c:	subcs	r3, r3, r1, lsl #31
   1b960:	cmp	r3, r1, lsl #30
   1b964:	adc	r0, r0, r0
   1b968:	subcs	r3, r3, r1, lsl #30
   1b96c:	cmp	r3, r1, lsl #29
   1b970:	adc	r0, r0, r0
   1b974:	subcs	r3, r3, r1, lsl #29
   1b978:	cmp	r3, r1, lsl #28
   1b97c:	adc	r0, r0, r0
   1b980:	subcs	r3, r3, r1, lsl #28
   1b984:	cmp	r3, r1, lsl #27
   1b988:	adc	r0, r0, r0
   1b98c:	subcs	r3, r3, r1, lsl #27
   1b990:	cmp	r3, r1, lsl #26
   1b994:	adc	r0, r0, r0
   1b998:	subcs	r3, r3, r1, lsl #26
   1b99c:	cmp	r3, r1, lsl #25
   1b9a0:	adc	r0, r0, r0
   1b9a4:	subcs	r3, r3, r1, lsl #25
   1b9a8:	cmp	r3, r1, lsl #24
   1b9ac:	adc	r0, r0, r0
   1b9b0:	subcs	r3, r3, r1, lsl #24
   1b9b4:	cmp	r3, r1, lsl #23
   1b9b8:	adc	r0, r0, r0
   1b9bc:	subcs	r3, r3, r1, lsl #23
   1b9c0:	cmp	r3, r1, lsl #22
   1b9c4:	adc	r0, r0, r0
   1b9c8:	subcs	r3, r3, r1, lsl #22
   1b9cc:	cmp	r3, r1, lsl #21
   1b9d0:	adc	r0, r0, r0
   1b9d4:	subcs	r3, r3, r1, lsl #21
   1b9d8:	cmp	r3, r1, lsl #20
   1b9dc:	adc	r0, r0, r0
   1b9e0:	subcs	r3, r3, r1, lsl #20
   1b9e4:	cmp	r3, r1, lsl #19
   1b9e8:	adc	r0, r0, r0
   1b9ec:	subcs	r3, r3, r1, lsl #19
   1b9f0:	cmp	r3, r1, lsl #18
   1b9f4:	adc	r0, r0, r0
   1b9f8:	subcs	r3, r3, r1, lsl #18
   1b9fc:	cmp	r3, r1, lsl #17
   1ba00:	adc	r0, r0, r0
   1ba04:	subcs	r3, r3, r1, lsl #17
   1ba08:	cmp	r3, r1, lsl #16
   1ba0c:	adc	r0, r0, r0
   1ba10:	subcs	r3, r3, r1, lsl #16
   1ba14:	cmp	r3, r1, lsl #15
   1ba18:	adc	r0, r0, r0
   1ba1c:	subcs	r3, r3, r1, lsl #15
   1ba20:	cmp	r3, r1, lsl #14
   1ba24:	adc	r0, r0, r0
   1ba28:	subcs	r3, r3, r1, lsl #14
   1ba2c:	cmp	r3, r1, lsl #13
   1ba30:	adc	r0, r0, r0
   1ba34:	subcs	r3, r3, r1, lsl #13
   1ba38:	cmp	r3, r1, lsl #12
   1ba3c:	adc	r0, r0, r0
   1ba40:	subcs	r3, r3, r1, lsl #12
   1ba44:	cmp	r3, r1, lsl #11
   1ba48:	adc	r0, r0, r0
   1ba4c:	subcs	r3, r3, r1, lsl #11
   1ba50:	cmp	r3, r1, lsl #10
   1ba54:	adc	r0, r0, r0
   1ba58:	subcs	r3, r3, r1, lsl #10
   1ba5c:	cmp	r3, r1, lsl #9
   1ba60:	adc	r0, r0, r0
   1ba64:	subcs	r3, r3, r1, lsl #9
   1ba68:	cmp	r3, r1, lsl #8
   1ba6c:	adc	r0, r0, r0
   1ba70:	subcs	r3, r3, r1, lsl #8
   1ba74:	cmp	r3, r1, lsl #7
   1ba78:	adc	r0, r0, r0
   1ba7c:	subcs	r3, r3, r1, lsl #7
   1ba80:	cmp	r3, r1, lsl #6
   1ba84:	adc	r0, r0, r0
   1ba88:	subcs	r3, r3, r1, lsl #6
   1ba8c:	cmp	r3, r1, lsl #5
   1ba90:	adc	r0, r0, r0
   1ba94:	subcs	r3, r3, r1, lsl #5
   1ba98:	cmp	r3, r1, lsl #4
   1ba9c:	adc	r0, r0, r0
   1baa0:	subcs	r3, r3, r1, lsl #4
   1baa4:	cmp	r3, r1, lsl #3
   1baa8:	adc	r0, r0, r0
   1baac:	subcs	r3, r3, r1, lsl #3
   1bab0:	cmp	r3, r1, lsl #2
   1bab4:	adc	r0, r0, r0
   1bab8:	subcs	r3, r3, r1, lsl #2
   1babc:	cmp	r3, r1, lsl #1
   1bac0:	adc	r0, r0, r0
   1bac4:	subcs	r3, r3, r1, lsl #1
   1bac8:	cmp	r3, r1
   1bacc:	adc	r0, r0, r0
   1bad0:	subcs	r3, r3, r1
   1bad4:	cmp	ip, #0
   1bad8:	rsbmi	r0, r0, #0
   1badc:	bx	lr
   1bae0:	teq	ip, r0
   1bae4:	rsbmi	r0, r0, #0
   1bae8:	bx	lr
   1baec:	movcc	r0, #0
   1baf0:	asreq	r0, ip, #31
   1baf4:	orreq	r0, r0, #1
   1baf8:	bx	lr
   1bafc:	clz	r2, r1
   1bb00:	rsb	r2, r2, #31
   1bb04:	cmp	ip, #0
   1bb08:	lsr	r0, r3, r2
   1bb0c:	rsbmi	r0, r0, #0
   1bb10:	bx	lr
   1bb14:	cmp	r0, #0
   1bb18:	mvngt	r0, #-2147483648	; 0x80000000
   1bb1c:	movlt	r0, #-2147483648	; 0x80000000
   1bb20:	b	1bb80 <argp_error@@Base+0x26d8>
   1bb24:	cmp	r1, #0
   1bb28:	beq	1bb14 <argp_error@@Base+0x266c>
   1bb2c:	push	{r0, r1, lr}
   1bb30:	bl	1b90c <argp_error@@Base+0x2464>
   1bb34:	pop	{r1, r2, lr}
   1bb38:	mul	r3, r2, r0
   1bb3c:	sub	r1, r1, r3
   1bb40:	bx	lr
   1bb44:	cmp	r3, #0
   1bb48:	cmpeq	r2, #0
   1bb4c:	bne	1bb64 <argp_error@@Base+0x26bc>
   1bb50:	cmp	r1, #0
   1bb54:	cmpeq	r0, #0
   1bb58:	mvnne	r1, #0
   1bb5c:	mvnne	r0, #0
   1bb60:	b	1bb80 <argp_error@@Base+0x26d8>
   1bb64:	sub	sp, sp, #8
   1bb68:	push	{sp, lr}
   1bb6c:	bl	1bb90 <argp_error@@Base+0x26e8>
   1bb70:	ldr	lr, [sp, #4]
   1bb74:	add	sp, sp, #8
   1bb78:	pop	{r2, r3}
   1bb7c:	bx	lr
   1bb80:	push	{r1, lr}
   1bb84:	mov	r0, #8
   1bb88:	bl	11018 <raise@plt>
   1bb8c:	pop	{r1, pc}
   1bb90:	cmp	r1, r3
   1bb94:	push	{r4, r5, r6, r7, r8, r9, lr}
   1bb98:	cmpeq	r0, r2
   1bb9c:	mov	r4, r0
   1bba0:	mov	r5, r1
   1bba4:	ldr	r9, [sp, #28]
   1bba8:	movcc	r0, #0
   1bbac:	movcc	r1, #0
   1bbb0:	bcc	1bca8 <argp_error@@Base+0x2800>
   1bbb4:	cmp	r3, #0
   1bbb8:	clzeq	ip, r2
   1bbbc:	clzne	ip, r3
   1bbc0:	addeq	ip, ip, #32
   1bbc4:	cmp	r5, #0
   1bbc8:	clzeq	r1, r4
   1bbcc:	addeq	r1, r1, #32
   1bbd0:	clzne	r1, r5
   1bbd4:	sub	ip, ip, r1
   1bbd8:	sub	lr, ip, #32
   1bbdc:	lsl	r7, r3, ip
   1bbe0:	rsb	r8, ip, #32
   1bbe4:	orr	r7, r7, r2, lsl lr
   1bbe8:	orr	r7, r7, r2, lsr r8
   1bbec:	lsl	r6, r2, ip
   1bbf0:	cmp	r5, r7
   1bbf4:	cmpeq	r4, r6
   1bbf8:	movcc	r0, #0
   1bbfc:	movcc	r1, #0
   1bc00:	bcc	1bc1c <argp_error@@Base+0x2774>
   1bc04:	mov	r3, #1
   1bc08:	subs	r4, r4, r6
   1bc0c:	lsl	r1, r3, lr
   1bc10:	lsl	r0, r3, ip
   1bc14:	orr	r1, r1, r3, lsr r8
   1bc18:	sbc	r5, r5, r7
   1bc1c:	cmp	ip, #0
   1bc20:	beq	1bca8 <argp_error@@Base+0x2800>
   1bc24:	lsrs	r3, r7, #1
   1bc28:	rrx	r2, r6
   1bc2c:	mov	r6, ip
   1bc30:	b	1bc54 <argp_error@@Base+0x27ac>
   1bc34:	subs	r4, r4, r2
   1bc38:	sbc	r5, r5, r3
   1bc3c:	adds	r4, r4, r4
   1bc40:	adc	r5, r5, r5
   1bc44:	adds	r4, r4, #1
   1bc48:	adc	r5, r5, #0
   1bc4c:	subs	r6, r6, #1
   1bc50:	beq	1bc70 <argp_error@@Base+0x27c8>
   1bc54:	cmp	r5, r3
   1bc58:	cmpeq	r4, r2
   1bc5c:	bcs	1bc34 <argp_error@@Base+0x278c>
   1bc60:	adds	r4, r4, r4
   1bc64:	adc	r5, r5, r5
   1bc68:	subs	r6, r6, #1
   1bc6c:	bne	1bc54 <argp_error@@Base+0x27ac>
   1bc70:	lsr	r6, r4, ip
   1bc74:	lsr	r7, r5, ip
   1bc78:	orr	r6, r6, r5, lsl r8
   1bc7c:	adds	r2, r0, r4
   1bc80:	orr	r6, r6, r5, lsr lr
   1bc84:	adc	r3, r1, r5
   1bc88:	lsl	r1, r7, ip
   1bc8c:	orr	r1, r1, r6, lsl lr
   1bc90:	lsl	r0, r6, ip
   1bc94:	orr	r1, r1, r6, lsr r8
   1bc98:	subs	r0, r2, r0
   1bc9c:	mov	r4, r6
   1bca0:	mov	r5, r7
   1bca4:	sbc	r1, r3, r1
   1bca8:	cmp	r9, #0
   1bcac:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1bcb0:	strd	r4, [r9]
   1bcb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bcb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bcbc:	mov	r7, r0
   1bcc0:	ldr	r6, [pc, #72]	; 1bd10 <argp_error@@Base+0x2868>
   1bcc4:	ldr	r5, [pc, #72]	; 1bd14 <argp_error@@Base+0x286c>
   1bcc8:	add	r6, pc, r6
   1bccc:	add	r5, pc, r5
   1bcd0:	sub	r6, r6, r5
   1bcd4:	mov	r8, r1
   1bcd8:	mov	r9, r2
   1bcdc:	bl	10fe0 <calloc@plt-0x20>
   1bce0:	asrs	r6, r6, #2
   1bce4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bce8:	mov	r4, #0
   1bcec:	add	r4, r4, #1
   1bcf0:	ldr	r3, [r5], #4
   1bcf4:	mov	r2, r9
   1bcf8:	mov	r1, r8
   1bcfc:	mov	r0, r7
   1bd00:	blx	r3
   1bd04:	cmp	r6, r4
   1bd08:	bne	1bcec <argp_error@@Base+0x2844>
   1bd0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd10:	andeq	r1, r1, r8, lsr r2
   1bd14:	andeq	r1, r1, r0, lsr r2
   1bd18:	bx	lr

Disassembly of section .fini:

0001bd1c <.fini>:
   1bd1c:	push	{r3, lr}
   1bd20:	pop	{r3, pc}
