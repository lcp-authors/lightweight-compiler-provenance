
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e90 <.init>:
   10e90:	push	{r3, lr}
   10e94:	bl	1115c <Mat_VarReadNextInfo@plt+0x54>
   10e98:	pop	{r3, pc}

Disassembly of section .plt:

00010e9c <Mat_VarGetNumberOfFields@plt-0x14>:
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	ldr	lr, [pc, #4]	; 10eac <Mat_VarGetNumberOfFields@plt-0x4>
   10ea4:	add	lr, pc, lr
   10ea8:	ldr	pc, [lr, #8]!
   10eac:	andeq	r5, r1, r4, asr r1

00010eb0 <Mat_VarGetNumberOfFields@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #340]!	; 0x154

00010ebc <Mat_SetVerbose@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #332]!	; 0x14c

00010ec8 <Mat_LogClose@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #324]!	; 0x144

00010ed4 <Mat_VarReadNext@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #316]!	; 0x13c

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #308]!	; 0x134

00010eec <Mat_Open@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #300]!	; 0x12c

00010ef8 <strtol@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #292]!	; 0x124

00010f04 <printf@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #284]!	; 0x11c

00010f10 <Mat_VarGetCells@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #276]!	; 0x114

00010f1c <Mat_VarGetCell@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #268]!	; 0x10c

00010f28 <Mat_VarCreate@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #260]!	; 0x104

00010f34 <free@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #252]!	; 0xfc

00010f40 <Mat_Warning@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #244]!	; 0xf4

00010f4c <Mat_VarReadDataLinear@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #236]!	; 0xec

00010f58 <Mat_Message@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #228]!	; 0xe4

00010f64 <Mat_VarReadData@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #220]!	; 0xdc

00010f70 <Mat_VarReadDataAll@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #212]!	; 0xd4

00010f7c <Mat_VarReadInfo@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #86016	; 0x15000
   10f84:	ldr	pc, [ip, #204]!	; 0xcc

00010f88 <fwrite@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #86016	; 0x15000
   10f90:	ldr	pc, [ip, #196]!	; 0xc4

00010f94 <Mat_VarGetStructFieldnames@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #86016	; 0x15000
   10f9c:	ldr	pc, [ip, #188]!	; 0xbc

00010fa0 <getenv@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #86016	; 0x15000
   10fa8:	ldr	pc, [ip, #180]!	; 0xb4

00010fac <puts@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #86016	; 0x15000
   10fb4:	ldr	pc, [ip, #172]!	; 0xac

00010fb8 <malloc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #86016	; 0x15000
   10fc0:	ldr	pc, [ip, #164]!	; 0xa4

00010fc4 <log10@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #86016	; 0x15000
   10fcc:	ldr	pc, [ip, #156]!	; 0x9c

00010fd0 <__libc_start_main@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #86016	; 0x15000
   10fd8:	ldr	pc, [ip, #148]!	; 0x94

00010fdc <__gmon_start__@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #86016	; 0x15000
   10fe4:	ldr	pc, [ip, #140]!	; 0x8c

00010fe8 <exit@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #86016	; 0x15000
   10ff0:	ldr	pc, [ip, #132]!	; 0x84

00010ff4 <Mat_VarFree@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #86016	; 0x15000
   10ffc:	ldr	pc, [ip, #124]!	; 0x7c

00011000 <Mat_SizeOf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #86016	; 0x15000
   11008:	ldr	pc, [ip, #116]!	; 0x74

0001100c <strlen@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #86016	; 0x15000
   11014:	ldr	pc, [ip, #108]!	; 0x6c

00011018 <strchr@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #86016	; 0x15000
   11020:	ldr	pc, [ip, #100]!	; 0x64

00011024 <warnx@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #86016	; 0x15000
   1102c:	ldr	pc, [ip, #92]!	; 0x5c

00011030 <fprintf@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #86016	; 0x15000
   11038:	ldr	pc, [ip, #84]!	; 0x54

0001103c <Mat_GetLibraryVersion@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #86016	; 0x15000
   11044:	ldr	pc, [ip, #76]!	; 0x4c

00011048 <Mat_VarPrint@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #86016	; 0x15000
   11050:	ldr	pc, [ip, #68]!	; 0x44

00011054 <memset@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #86016	; 0x15000
   1105c:	ldr	pc, [ip, #60]!	; 0x3c

00011060 <putchar@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #86016	; 0x15000
   11068:	ldr	pc, [ip, #52]!	; 0x34

0001106c <Mat_Close@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #44]!	; 0x2c

00011078 <Mat_Critical@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #36]!	; 0x24

00011084 <Mat_LogInitFunc@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #28]!

00011090 <Mat_VerbMessage@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #20]!

0001109c <Mat_VarGetCellsLinear@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #12]!

000110a8 <sprintf@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #4]!

000110b4 <Mat_Help@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #4092]!	; 0xffc

000110c0 <Mat_VarGetStructFieldByName@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #20, 20	; 0x14000
   110c8:	ldr	pc, [ip, #4084]!	; 0xff4

000110cc <Mat_SizeOfClass@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #20, 20	; 0x14000
   110d4:	ldr	pc, [ip, #4076]!	; 0xfec

000110d8 <Mat_VarGetSize@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #20, 20	; 0x14000
   110e0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110e4 <strncmp@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #20, 20	; 0x14000
   110ec:	ldr	pc, [ip, #4060]!	; 0xfdc

000110f0 <abort@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #20, 20	; 0x14000
   110f8:	ldr	pc, [ip, #4052]!	; 0xfd4

000110fc <Mat_VarDuplicate@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #20, 20	; 0x14000
   11104:	ldr	pc, [ip, #4044]!	; 0xfcc

00011108 <Mat_VarReadNextInfo@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #20, 20	; 0x14000
   11110:	ldr	pc, [ip, #4036]!	; 0xfc4

Disassembly of section .text:

00011120 <getopt@@Base-0x27b8>:
   11120:	mov	fp, #0
   11124:	mov	lr, #0
   11128:	pop	{r1}		; (ldr r1, [sp], #4)
   1112c:	mov	r2, sp
   11130:	push	{r2}		; (str r2, [sp, #-4]!)
   11134:	push	{r0}		; (str r0, [sp, #-4]!)
   11138:	ldr	ip, [pc, #16]	; 11150 <Mat_VarReadNextInfo@plt+0x48>
   1113c:	push	{ip}		; (str ip, [sp, #-4]!)
   11140:	ldr	r0, [pc, #12]	; 11154 <Mat_VarReadNextInfo@plt+0x4c>
   11144:	ldr	r3, [pc, #12]	; 11158 <Mat_VarReadNextInfo@plt+0x50>
   11148:	bl	10fd0 <__libc_start_main@plt>
   1114c:	bl	110f0 <abort@plt>
   11150:	andeq	r4, r1, r4, lsl #20
   11154:	andeq	r1, r1, r0, lsl r2
   11158:	andeq	r4, r1, r4, lsr #19
   1115c:	ldr	r3, [pc, #20]	; 11178 <Mat_VarReadNextInfo@plt+0x70>
   11160:	ldr	r2, [pc, #20]	; 1117c <Mat_VarReadNextInfo@plt+0x74>
   11164:	add	r3, pc, r3
   11168:	ldr	r2, [r3, r2]
   1116c:	cmp	r2, #0
   11170:	bxeq	lr
   11174:	b	10fdc <__gmon_start__@plt>
   11178:	muleq	r1, r4, lr
   1117c:	andeq	r0, r0, r0, ror #1
   11180:	ldr	r0, [pc, #24]	; 111a0 <Mat_VarReadNextInfo@plt+0x98>
   11184:	ldr	r3, [pc, #24]	; 111a4 <Mat_VarReadNextInfo@plt+0x9c>
   11188:	cmp	r3, r0
   1118c:	bxeq	lr
   11190:	ldr	r3, [pc, #16]	; 111a8 <Mat_VarReadNextInfo@plt+0xa0>
   11194:	cmp	r3, #0
   11198:	bxeq	lr
   1119c:	bx	r3
   111a0:	andeq	r6, r2, ip, asr #3
   111a4:	andeq	r6, r2, ip, asr #3
   111a8:	andeq	r0, r0, r0
   111ac:	ldr	r0, [pc, #36]	; 111d8 <Mat_VarReadNextInfo@plt+0xd0>
   111b0:	ldr	r1, [pc, #36]	; 111dc <Mat_VarReadNextInfo@plt+0xd4>
   111b4:	sub	r1, r1, r0
   111b8:	asr	r1, r1, #2
   111bc:	add	r1, r1, r1, lsr #31
   111c0:	asrs	r1, r1, #1
   111c4:	bxeq	lr
   111c8:	ldr	r3, [pc, #16]	; 111e0 <Mat_VarReadNextInfo@plt+0xd8>
   111cc:	cmp	r3, #0
   111d0:	bxeq	lr
   111d4:	bx	r3
   111d8:	andeq	r6, r2, ip, asr #3
   111dc:	andeq	r6, r2, ip, asr #3
   111e0:	andeq	r0, r0, r0
   111e4:	push	{r4, lr}
   111e8:	ldr	r4, [pc, #24]	; 11208 <Mat_VarReadNextInfo@plt+0x100>
   111ec:	ldrb	r3, [r4]
   111f0:	cmp	r3, #0
   111f4:	popne	{r4, pc}
   111f8:	bl	11180 <Mat_VarReadNextInfo@plt+0x78>
   111fc:	mov	r3, #1
   11200:	strb	r3, [r4]
   11204:	pop	{r4, pc}
   11208:	ldrdeq	r6, [r2], -r4
   1120c:	b	111ac <Mat_VarReadNextInfo@plt+0xa4>
   11210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11214:	add	fp, sp, #28
   11218:	sub	sp, sp, #4
   1121c:	vpush	{d8-d10}
   11220:	sub	sp, sp, #104	; 0x68
   11224:	str	r0, [sp, #56]	; 0x38
   11228:	sub	r0, fp, #68	; 0x44
   1122c:	mov	r4, r1
   11230:	add	r1, r0, #4
   11234:	add	r2, r0, #8
   11238:	bl	1103c <Mat_GetLibraryVersion@plt>
   1123c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11240:	cmp	r0, #1
   11244:	ldreq	r0, [fp, #-64]	; 0xffffffc0
   11248:	cmpeq	r0, #5
   1124c:	beq	11278 <Mat_VarReadNextInfo@plt+0x170>
   11250:	movw	r0, #25040	; 0x61d0
   11254:	mov	r1, #55	; 0x37
   11258:	mov	r2, #1
   1125c:	mov	r4, #1
   11260:	movt	r0, #2
   11264:	ldr	r3, [r0]
   11268:	movw	r0, #18972	; 0x4a1c
   1126c:	movt	r0, #1
   11270:	bl	10f88 <fwrite@plt>
   11274:	b	12578 <Mat_VarReadNextInfo@plt+0x1470>
   11278:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1127c:	cmp	r0, #15
   11280:	bne	11250 <Mat_VarReadNextInfo@plt+0x148>
   11284:	movw	r0, #18964	; 0x4a14
   11288:	movw	r1, #9668	; 0x25c4
   1128c:	str	r4, [sp, #52]	; 0x34
   11290:	movt	r0, #1
   11294:	movt	r1, #1
   11298:	bl	11084 <Mat_LogInitFunc@plt>
   1129c:	movw	r8, #25048	; 0x61d8
   112a0:	movw	r0, #9748	; 0x2614
   112a4:	movw	r4, #19500	; 0x4c2c
   112a8:	movw	r5, #24824	; 0x60f8
   112ac:	movw	r6, #19232	; 0x4b20
   112b0:	movw	r7, #19028	; 0x4a54
   112b4:	mov	sl, #0
   112b8:	mov	r9, #1
   112bc:	movt	r8, #2
   112c0:	movt	r0, #1
   112c4:	movt	r4, #1
   112c8:	movt	r5, #2
   112cc:	movt	r6, #1
   112d0:	movt	r7, #1
   112d4:	str	r0, [r8, #12]
   112d8:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   112dc:	strb	r9, [r8, #4]
   112e0:	ldr	r0, [sp, #56]	; 0x38
   112e4:	ldr	r1, [sp, #52]	; 0x34
   112e8:	mov	r2, r4
   112ec:	mov	r3, r5
   112f0:	str	sl, [sp]
   112f4:	bl	14428 <getopt_long@@Base>
   112f8:	mov	r1, r0
   112fc:	sub	r0, r0, #72	; 0x48
   11300:	cmp	r0, #46	; 0x2e
   11304:	bhi	113e0 <Mat_VarReadNextInfo@plt+0x2d8>
   11308:	add	r2, pc, #0
   1130c:	ldr	pc, [r2, r0, lsl #2]
   11310:	andeq	r2, r1, ip, lsl #11
   11314:	andeq	r1, r1, r8, ror #7
   11318:	andeq	r1, r1, r8, ror #7
   1131c:	andeq	r1, r1, r8, ror #7
   11320:	andeq	r1, r1, r8, ror #7
   11324:	andeq	r1, r1, r8, ror #7
   11328:	andeq	r1, r1, r8, ror #7
   1132c:	andeq	r1, r1, r8, ror #7
   11330:	andeq	r1, r1, r8, ror #7
   11334:	andeq	r1, r1, r8, ror #7
   11338:	andeq	r1, r1, r8, ror #7
   1133c:	andeq	r1, r1, r8, ror #7
   11340:	andeq	r1, r1, r8, ror #7
   11344:	andeq	r1, r1, r8, ror #7
   11348:	andeq	r2, r1, r0, lsr #11
   1134c:	andeq	r1, r1, r8, ror #7
   11350:	andeq	r1, r1, r8, ror #7
   11354:	andeq	r1, r1, r8, ror #7
   11358:	andeq	r1, r1, r8, ror #7
   1135c:	andeq	r1, r1, r8, ror #7
   11360:	andeq	r1, r1, r8, ror #7
   11364:	andeq	r1, r1, r8, ror #7
   11368:	andeq	r1, r1, r8, ror #7
   1136c:	andeq	r1, r1, r8, ror #7
   11370:	andeq	r1, r1, r8, ror #7
   11374:	andeq	r1, r1, r8, ror #7
   11378:	andeq	r1, r1, r8, ror #7
   1137c:	andeq	r1, r1, r8, ror #7
   11380:	andeq	r1, r1, ip, asr #7
   11384:	andeq	r1, r1, r8, ror #7
   11388:	strdeq	r1, [r1], -r4
   1138c:	andeq	r1, r1, r8, ror #7
   11390:	ldrdeq	r1, [r1], -ip
   11394:	andeq	r1, r1, r8, ror #7
   11398:	andeq	r1, r1, r8, ror #7
   1139c:	andeq	r1, r1, r8, ror #7
   113a0:	andeq	r1, r1, r8, ror #7
   113a4:	andeq	r1, r1, r8, ror #7
   113a8:	andeq	r1, r1, r8, ror #7
   113ac:	andeq	r1, r1, r8, ror #7
   113b0:	andeq	r1, r1, r8, ror #7
   113b4:	andeq	r1, r1, r8, ror #7
   113b8:	andeq	r1, r1, r8, ror #7
   113bc:	andeq	r1, r1, r8, ror #7
   113c0:	andeq	r1, r1, r8, ror #7
   113c4:	andeq	r1, r1, r8, ror #7
   113c8:	andeq	r1, r1, r4, lsr r4
   113cc:	mov	r0, #1
   113d0:	mov	r1, r7
   113d4:	strb	r9, [r8]
   113d8:	bl	11090 <Mat_VerbMessage@plt>
   113dc:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   113e0:	cmn	r1, #1
   113e4:	beq	11474 <Mat_VarReadNextInfo@plt+0x36c>
   113e8:	mov	r0, r6
   113ec:	bl	10f04 <printf@plt>
   113f0:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   113f4:	movw	r0, #25072	; 0x61f0
   113f8:	movt	r0, #2
   113fc:	ldr	r8, [r0]
   11400:	cmp	r8, #0
   11404:	beq	11444 <Mat_VarReadNextInfo@plt+0x33c>
   11408:	movw	r1, #19043	; 0x4a63
   1140c:	mov	r0, r8
   11410:	movt	r1, #1
   11414:	bl	10ee0 <strcmp@plt>
   11418:	cmp	r0, #0
   1141c:	beq	1145c <Mat_VarReadNextInfo@plt+0x354>
   11420:	movw	r0, #19048	; 0x4a68
   11424:	mov	r1, r8
   11428:	movt	r0, #1
   1142c:	bl	10f40 <Mat_Warning@plt>
   11430:	b	11450 <Mat_VarReadNextInfo@plt+0x348>
   11434:	mov	r0, #1
   11438:	mov	r1, #0
   1143c:	bl	10ebc <Mat_SetVerbose@plt>
   11440:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   11444:	movw	r0, #19101	; 0x4a9d
   11448:	movt	r0, #1
   1144c:	bl	10f40 <Mat_Warning@plt>
   11450:	movw	r8, #25048	; 0x61d8
   11454:	movt	r8, #2
   11458:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   1145c:	movw	r8, #25048	; 0x61d8
   11460:	movw	r0, #11824	; 0x2e30
   11464:	movt	r8, #2
   11468:	movt	r0, #1
   1146c:	str	r0, [r8, #12]
   11470:	b	112e0 <Mat_VarReadNextInfo@plt+0x1d8>
   11474:	movw	r4, #25012	; 0x61b4
   11478:	ldr	r1, [sp, #56]	; 0x38
   1147c:	movt	r4, #2
   11480:	ldr	r0, [r4]
   11484:	cmp	r0, r1
   11488:	bge	124b4 <Mat_VarReadNextInfo@plt+0x13ac>
   1148c:	ldr	sl, [sp, #52]	; 0x34
   11490:	mov	r1, #0
   11494:	ldr	r0, [sl, r0, lsl #2]
   11498:	bl	10eec <Mat_Open@plt>
   1149c:	mov	r9, r0
   114a0:	ldr	r0, [r4]
   114a4:	cmp	r9, #0
   114a8:	beq	124c8 <Mat_VarReadNextInfo@plt+0x13c0>
   114ac:	add	r7, r0, #1
   114b0:	ldr	r0, [sp, #56]	; 0x38
   114b4:	str	r7, [r4]
   114b8:	cmp	r7, r0
   114bc:	bge	124e0 <Mat_VarReadNextInfo@plt+0x13d8>
   114c0:	vmov.i32	q4, #1	; 0x00000001
   114c4:	vmov.i16	d10, #44	; 0x002c
   114c8:	str	r9, [sp, #20]
   114cc:	b	114f0 <Mat_VarReadNextInfo@plt+0x3e8>
   114d0:	ldr	r1, [sl, r7, lsl #2]
   114d4:	movw	r0, #19308	; 0x4b6c
   114d8:	movt	r0, #1
   114dc:	bl	10f40 <Mat_Warning@plt>
   114e0:	ldr	r0, [sp, #56]	; 0x38
   114e4:	add	r7, r7, #1
   114e8:	cmp	r7, r0
   114ec:	beq	12568 <Mat_VarReadNextInfo@plt+0x1460>
   114f0:	ldr	r5, [sl, r7, lsl #2]
   114f4:	mov	r0, r5
   114f8:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   114fc:	mov	r4, r0
   11500:	cmp	r0, r5
   11504:	mov	r6, #0
   11508:	beq	1151c <Mat_VarReadNextInfo@plt+0x414>
   1150c:	mov	r0, #0
   11510:	ldrb	r6, [r4]
   11514:	strb	r0, [r4]
   11518:	ldr	r5, [sl, r7, lsl #2]
   1151c:	mov	r0, r9
   11520:	mov	r1, r5
   11524:	bl	10f7c <Mat_VarReadInfo@plt>
   11528:	cmp	r0, #0
   1152c:	beq	114d0 <Mat_VarReadNextInfo@plt+0x3c8>
   11530:	mov	r5, r0
   11534:	ldrb	r0, [r8]
   11538:	cmp	r0, #1
   1153c:	bne	11564 <Mat_VarReadNextInfo@plt+0x45c>
   11540:	cmp	r6, #0
   11544:	beq	1156c <Mat_VarReadNextInfo@plt+0x464>
   11548:	mov	r0, r4
   1154c:	strb	r6, [r4]
   11550:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   11554:	ldrb	r6, [r0]
   11558:	mov	sl, r5
   1155c:	str	r7, [sp, #24]
   11560:	b	115c4 <Mat_VarReadNextInfo@plt+0x4bc>
   11564:	mov	sl, r5
   11568:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   1156c:	mov	r0, r9
   11570:	mov	r1, r5
   11574:	mov	sl, r5
   11578:	bl	10f70 <Mat_VarReadDataAll@plt>
   1157c:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11580:	movw	r0, #25040	; 0x61d0
   11584:	movw	r1, #20632	; 0x5098
   11588:	mov	r2, r5
   1158c:	movt	r0, #2
   11590:	movt	r1, #1
   11594:	ldr	r0, [r0]
   11598:	bl	11030 <fprintf@plt>
   1159c:	ldr	r9, [sp, #20]
   115a0:	ldr	r6, [sp, #48]	; 0x30
   115a4:	ldr	r0, [sp, #32]
   115a8:	ldr	r1, [sp, #28]
   115ac:	cmp	r5, r8
   115b0:	movw	r8, #25048	; 0x61d8
   115b4:	movt	r8, #2
   115b8:	bne	1245c <Mat_VarReadNextInfo@plt+0x1354>
   115bc:	cmp	r1, #0
   115c0:	bne	1245c <Mat_VarReadNextInfo@plt+0x1354>
   115c4:	str	r0, [sp, #60]	; 0x3c
   115c8:	uxtb	r0, r6
   115cc:	mov	r1, #0
   115d0:	cmp	r0, #46	; 0x2e
   115d4:	beq	11664 <Mat_VarReadNextInfo@plt+0x55c>
   115d8:	cmp	r0, #123	; 0x7b
   115dc:	beq	115f8 <Mat_VarReadNextInfo@plt+0x4f0>
   115e0:	cmp	r0, #40	; 0x28
   115e4:	beq	11e0c <Mat_VarReadNextInfo@plt+0xd04>
   115e8:	ldr	r0, [sp, #60]	; 0x3c
   115ec:	cmp	r1, #0
   115f0:	beq	115c4 <Mat_VarReadNextInfo@plt+0x4bc>
   115f4:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   115f8:	ldr	r0, [sl, #16]
   115fc:	cmp	r0, #1
   11600:	bne	11ef4 <Mat_VarReadNextInfo@plt+0xdec>
   11604:	ldr	r0, [sp, #60]	; 0x3c
   11608:	mov	r1, #125	; 0x7d
   1160c:	str	sl, [sp, #44]	; 0x2c
   11610:	add	r5, r0, #1
   11614:	mov	r0, r5
   11618:	bl	11018 <strchr@plt>
   1161c:	mov	sl, r0
   11620:	add	r0, r0, #1
   11624:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   11628:	mov	r1, r0
   1162c:	ldrb	r0, [r0]
   11630:	mov	r9, #1
   11634:	cmp	r0, #0
   11638:	str	r0, [sp, #48]	; 0x30
   1163c:	beq	116e0 <Mat_VarReadNextInfo@plt+0x5d8>
   11640:	mov	r2, #0
   11644:	mov	r0, #0
   11648:	str	r0, [sp, #28]
   1164c:	strb	r2, [r1]
   11650:	mov	r7, #1
   11654:	cmp	r5, sl
   11658:	str	r1, [sp, #32]
   1165c:	bne	11700 <Mat_VarReadNextInfo@plt+0x5f8>
   11660:	b	11800 <Mat_VarReadNextInfo@plt+0x6f8>
   11664:	ldr	r0, [sp, #60]	; 0x3c
   11668:	add	r4, r0, #1
   1166c:	ldr	r0, [sl, #16]
   11670:	cmp	r0, #1
   11674:	beq	116a8 <Mat_VarReadNextInfo@plt+0x5a0>
   11678:	cmp	r0, #2
   1167c:	bne	11f18 <Mat_VarReadNextInfo@plt+0xe10>
   11680:	mov	r0, r4
   11684:	mov	r8, r9
   11688:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   1168c:	cmp	r0, r4
   11690:	beq	11b8c <Mat_VarReadNextInfo@plt+0xa84>
   11694:	ldrb	r6, [r0]
   11698:	mov	r5, #0
   1169c:	mov	r9, r0
   116a0:	strb	r5, [r0]
   116a4:	b	11b98 <Mat_VarReadNextInfo@plt+0xa90>
   116a8:	ldr	r0, [sl]
   116ac:	ldr	r1, [sl, #12]
   116b0:	ldr	r9, [sl, #40]	; 0x28
   116b4:	udiv	r8, r0, r1
   116b8:	mov	r0, r4
   116bc:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   116c0:	cmp	r0, r4
   116c4:	beq	11bf0 <Mat_VarReadNextInfo@plt+0xae8>
   116c8:	ldrb	r1, [r0]
   116cc:	mov	r3, #0
   116d0:	mov	r2, #0
   116d4:	str	r2, [sp, #28]
   116d8:	strb	r3, [r0]
   116dc:	b	11bfc <Mat_VarReadNextInfo@plt+0xaf4>
   116e0:	mov	r0, #123	; 0x7b
   116e4:	str	r0, [sp, #48]	; 0x30
   116e8:	mov	r0, #1
   116ec:	str	r0, [sp, #28]
   116f0:	mov	r7, #1
   116f4:	cmp	r5, sl
   116f8:	str	r1, [sp, #32]
   116fc:	beq	11800 <Mat_VarReadNextInfo@plt+0x6f8>
   11700:	ldr	r0, [sp, #60]	; 0x3c
   11704:	mov	r9, #1
   11708:	mvn	r0, r0
   1170c:	add	r8, r0, sl
   11710:	cmp	r8, #4
   11714:	bcc	117ec <Mat_VarReadNextInfo@plt+0x6e4>
   11718:	bic	ip, r8, #3
   1171c:	add	r3, pc, #700	; 0x2bc
   11720:	subs	r2, ip, #4
   11724:	add	r6, r7, r2, lsr #2
   11728:	and	lr, r6, #1
   1172c:	beq	11d38 <Mat_VarReadNextInfo@plt+0xc30>
   11730:	add	r4, pc, #680	; 0x2a8
   11734:	sub	r2, fp, #76	; 0x4c
   11738:	sub	r6, r6, lr
   1173c:	mov	r3, #0
   11740:	sub	r0, fp, #72	; 0x48
   11744:	vld1.64	{d16-d17}, [r4 :128]
   11748:	mov	r9, r2
   1174c:	ldr	r2, [sp, #60]	; 0x3c
   11750:	add	r4, r2, r3
   11754:	subs	r6, r6, #2
   11758:	add	r3, r3, #8
   1175c:	ldr	r1, [r4, #1]
   11760:	ldr	r4, [r4, #5]
   11764:	str	r1, [fp, #-72]	; 0xffffffb8
   11768:	str	r4, [fp, #-76]	; 0xffffffb4
   1176c:	vld1.32	{d18[0]}, [r0 :32]
   11770:	vld1.32	{d19[0]}, [r9 :32]
   11774:	vmovl.u8	q10, d18
   11778:	vmovl.u8	q9, d19
   1177c:	vceq.i16	d20, d20, d10
   11780:	vceq.i16	d18, d18, d10
   11784:	vmovl.u16	q10, d20
   11788:	vmovl.u16	q9, d18
   1178c:	vand	q10, q10, q4
   11790:	vand	q9, q9, q4
   11794:	vadd.i32	q8, q8, q10
   11798:	vadd.i32	q8, q8, q9
   1179c:	bne	11750 <Mat_VarReadNextInfo@plt+0x648>
   117a0:	cmp	lr, #0
   117a4:	beq	117cc <Mat_VarReadNextInfo@plt+0x6c4>
   117a8:	ldr	r1, [r5, r3]
   117ac:	str	r1, [sp, #80]	; 0x50
   117b0:	add	r1, sp, #80	; 0x50
   117b4:	vld1.32	{d18[0]}, [r1 :32]
   117b8:	vmovl.u8	q9, d18
   117bc:	vceq.i16	d18, d18, d10
   117c0:	vmovl.u16	q9, d18
   117c4:	vand	q9, q9, q4
   117c8:	vadd.i32	q8, q8, q9
   117cc:	vext.8	q9, q8, q8, #8
   117d0:	cmp	ip, r8
   117d4:	vadd.i32	q8, q8, q9
   117d8:	vdup.32	q9, d16[1]
   117dc:	vadd.i32	q8, q8, q9
   117e0:	vmov.32	r9, d16[0]
   117e4:	beq	11800 <Mat_VarReadNextInfo@plt+0x6f8>
   117e8:	add	r5, r5, ip
   117ec:	ldrb	r0, [r5], #1
   117f0:	cmp	r0, #44	; 0x2c
   117f4:	addeq	r9, r9, #1
   117f8:	cmp	sl, r5
   117fc:	bne	117ec <Mat_VarReadNextInfo@plt+0x6e4>
   11800:	lsl	r8, r9, #2
   11804:	mov	r0, r8
   11808:	bl	10fb8 <malloc@plt>
   1180c:	str	r0, [sp, #36]	; 0x24
   11810:	mov	r0, r8
   11814:	bl	10fb8 <malloc@plt>
   11818:	str	r0, [sp, #40]	; 0x28
   1181c:	mov	r0, r8
   11820:	bl	10fb8 <malloc@plt>
   11824:	mov	r4, r0
   11828:	cmp	r9, #1
   1182c:	str	r0, [sp, #64]	; 0x40
   11830:	blt	1192c <Mat_VarReadNextInfo@plt+0x824>
   11834:	ldr	r0, [sp, #36]	; 0x24
   11838:	mov	r1, #0
   1183c:	mov	r2, r8
   11840:	mov	r5, #0
   11844:	bl	11054 <memset@plt>
   11848:	cmp	r9, #4
   1184c:	bcc	1190c <Mat_VarReadNextInfo@plt+0x804>
   11850:	bic	r0, r9, #3
   11854:	ldr	r8, [sp, #40]	; 0x28
   11858:	mov	r1, #0
   1185c:	mov	lr, #48	; 0x30
   11860:	sub	r3, r0, #4
   11864:	str	r0, [sp, #16]
   11868:	add	r2, r7, r3, lsr #2
   1186c:	cmp	r3, #12
   11870:	and	ip, r2, #3
   11874:	bcc	118d8 <Mat_VarReadNextInfo@plt+0x7d0>
   11878:	sub	r2, r2, ip
   1187c:	mov	r3, #0
   11880:	mov	r1, #0
   11884:	add	r6, r8, r3
   11888:	add	r5, r4, r3
   1188c:	add	r3, r3, #64	; 0x40
   11890:	subs	r2, r2, #4
   11894:	add	r1, r1, #16
   11898:	mov	r0, r6
   1189c:	add	r4, r6, #16
   118a0:	mov	r7, r5
   118a4:	add	r6, r6, #32
   118a8:	vst1.32	{d8-d9}, [r0], lr
   118ac:	vst1.32	{d8-d9}, [r4]
   118b0:	add	r4, r5, #16
   118b4:	vst1.32	{d8-d9}, [r7], lr
   118b8:	vst1.32	{d8-d9}, [r6]
   118bc:	add	r6, r5, #32
   118c0:	vst1.32	{d8-d9}, [r4]
   118c4:	ldr	r4, [sp, #64]	; 0x40
   118c8:	vst1.32	{d8-d9}, [r6]
   118cc:	vst1.32	{d8-d9}, [r0]
   118d0:	vst1.32	{d8-d9}, [r7]
   118d4:	bne	11884 <Mat_VarReadNextInfo@plt+0x77c>
   118d8:	cmp	ip, #0
   118dc:	beq	118fc <Mat_VarReadNextInfo@plt+0x7f4>
   118e0:	add	r2, r8, r1, lsl #2
   118e4:	add	r1, r4, r1, lsl #2
   118e8:	rsb	r0, ip, #0
   118ec:	vst1.32	{d8-d9}, [r2]!
   118f0:	vst1.32	{d8-d9}, [r1]!
   118f4:	adds	r0, r0, #1
   118f8:	bcc	118ec <Mat_VarReadNextInfo@plt+0x7e4>
   118fc:	ldr	r5, [sp, #16]
   11900:	mov	r7, #1
   11904:	cmp	r9, r5
   11908:	beq	1192c <Mat_VarReadNextInfo@plt+0x824>
   1190c:	ldr	r0, [sp, #40]	; 0x28
   11910:	add	r1, r4, r5, lsl #2
   11914:	sub	r2, r9, r5
   11918:	add	r0, r0, r5, lsl #2
   1191c:	str	r7, [r0], #4
   11920:	str	r7, [r1], #4
   11924:	subs	r2, r2, #1
   11928:	bne	1191c <Mat_VarReadNextInfo@plt+0x814>
   1192c:	ldr	r5, [sp, #36]	; 0x24
   11930:	ldr	r7, [sp, #40]	; 0x28
   11934:	ldr	r0, [sp, #60]	; 0x3c
   11938:	mov	r1, sl
   1193c:	str	r4, [sp]
   11940:	mov	r2, r5
   11944:	mov	r3, r7
   11948:	bl	13234 <Mat_VarReadNextInfo@plt+0x212c>
   1194c:	ldr	r6, [sp, #44]	; 0x2c
   11950:	mov	r0, r9
   11954:	mov	r1, r5
   11958:	mov	r2, r7
   1195c:	mov	r3, r4
   11960:	str	r6, [sp]
   11964:	bl	1349c <Mat_VarReadNextInfo@plt+0x2394>
   11968:	cmp	r0, #0
   1196c:	beq	11dd8 <Mat_VarReadNextInfo@plt+0xcd0>
   11970:	movw	r8, #25048	; 0x61d8
   11974:	mov	r7, r0
   11978:	cmp	r9, #1
   1197c:	movt	r8, #2
   11980:	bne	119f0 <Mat_VarReadNextInfo@plt+0x8e8>
   11984:	ldr	r0, [sp, #40]	; 0x28
   11988:	ldr	sl, [sp, #64]	; 0x40
   1198c:	ldr	r2, [r0]
   11990:	ldr	r0, [sp, #36]	; 0x24
   11994:	ldr	r3, [sl]
   11998:	ldr	r1, [r0]
   1199c:	mov	r0, r6
   119a0:	bl	1109c <Mat_VarGetCellsLinear@plt>
   119a4:	ldr	r1, [r6, #4]
   119a8:	ldr	r2, [r6, #32]
   119ac:	ldr	r9, [sp, #20]
   119b0:	cmp	r1, #2
   119b4:	bne	11c88 <Mat_VarReadNextInfo@plt+0xb80>
   119b8:	ldr	r1, [r2]
   119bc:	cmp	r1, #1
   119c0:	bne	11c78 <Mat_VarReadNextInfo@plt+0xb70>
   119c4:	ldr	sl, [sp, #64]	; 0x40
   119c8:	ldr	r1, [sl]
   119cc:	str	r1, [r2, #4]
   119d0:	cmp	r0, #0
   119d4:	bne	11ca0 <Mat_VarReadNextInfo@plt+0xb98>
   119d8:	b	11b24 <Mat_VarReadNextInfo@plt+0xa1c>
   119dc:	nop	{0}
   119e0:	andeq	r0, r0, r1
	...
   119f0:	ldr	r1, [sp, #36]	; 0x24
   119f4:	ldr	r2, [sp, #40]	; 0x28
   119f8:	ldr	r3, [sp, #64]	; 0x40
   119fc:	mov	r0, r6
   11a00:	bl	10f10 <Mat_VarGetCells@plt>
   11a04:	cmp	r9, #1
   11a08:	blt	11b14 <Mat_VarReadNextInfo@plt+0xa0c>
   11a0c:	ldr	r4, [r6, #32]
   11a10:	mov	r1, #0
   11a14:	cmp	r9, #4
   11a18:	bcc	11b4c <Mat_VarReadNextInfo@plt+0xa44>
   11a1c:	ldr	r2, [sp, #64]	; 0x40
   11a20:	add	r2, r2, r9, lsl #2
   11a24:	cmp	r2, r4
   11a28:	bls	11a3c <Mat_VarReadNextInfo@plt+0x934>
   11a2c:	ldr	r3, [sp, #64]	; 0x40
   11a30:	add	r2, r4, r9, lsl #2
   11a34:	cmp	r3, r2
   11a38:	bcc	11b4c <Mat_VarReadNextInfo@plt+0xa44>
   11a3c:	bic	r1, r9, #3
   11a40:	mov	r2, #1
   11a44:	ldr	r3, [sp, #64]	; 0x40
   11a48:	str	r0, [sp, #60]	; 0x3c
   11a4c:	mov	lr, #0
   11a50:	mov	ip, #48	; 0x30
   11a54:	sub	r6, r1, #4
   11a58:	add	r2, r2, r6, lsr #2
   11a5c:	cmp	r6, #12
   11a60:	and	r0, r2, #3
   11a64:	str	r0, [sp, #16]
   11a68:	bcc	11ad4 <Mat_VarReadNextInfo@plt+0x9cc>
   11a6c:	ldr	r0, [sp, #16]
   11a70:	mov	r6, #0
   11a74:	mov	lr, #0
   11a78:	sub	sl, r2, r0
   11a7c:	add	r0, r3, r6
   11a80:	add	r3, r4, r6
   11a84:	add	r6, r6, #64	; 0x40
   11a88:	subs	sl, sl, #4
   11a8c:	add	lr, lr, #16
   11a90:	mov	r8, r0
   11a94:	mov	r2, r3
   11a98:	add	r5, r3, #16
   11a9c:	add	r3, r3, #32
   11aa0:	vld1.32	{d16-d17}, [r8], ip
   11aa4:	vst1.32	{d16-d17}, [r2], ip
   11aa8:	add	ip, r0, #16
   11aac:	vld1.32	{d16-d17}, [ip]
   11ab0:	mov	ip, #48	; 0x30
   11ab4:	vst1.32	{d16-d17}, [r5]
   11ab8:	add	r5, r0, #32
   11abc:	vld1.32	{d16-d17}, [r5]
   11ac0:	vst1.32	{d16-d17}, [r3]
   11ac4:	ldr	r3, [sp, #64]	; 0x40
   11ac8:	vld1.32	{d16-d17}, [r8]
   11acc:	vst1.32	{d16-d17}, [r2]
   11ad0:	bne	11a7c <Mat_VarReadNextInfo@plt+0x974>
   11ad4:	ldr	r0, [sp, #16]
   11ad8:	cmp	r0, #0
   11adc:	beq	11b00 <Mat_VarReadNextInfo@plt+0x9f8>
   11ae0:	mov	r2, r3
   11ae4:	add	r2, r3, lr, lsl #2
   11ae8:	add	r3, r4, lr, lsl #2
   11aec:	rsb	r6, r0, #0
   11af0:	vld1.32	{d16-d17}, [r2]!
   11af4:	adds	r6, r6, #1
   11af8:	vst1.32	{d16-d17}, [r3]!
   11afc:	bcc	11af0 <Mat_VarReadNextInfo@plt+0x9e8>
   11b00:	ldr	r0, [sp, #60]	; 0x3c
   11b04:	movw	r8, #25048	; 0x61d8
   11b08:	cmp	r9, r1
   11b0c:	movt	r8, #2
   11b10:	bne	11b4c <Mat_VarReadNextInfo@plt+0xa44>
   11b14:	ldr	r9, [sp, #20]
   11b18:	ldr	sl, [sp, #64]	; 0x40
   11b1c:	cmp	r0, #0
   11b20:	bne	11ca0 <Mat_VarReadNextInfo@plt+0xb98>
   11b24:	movw	r0, #25040	; 0x61d0
   11b28:	mov	r1, #31
   11b2c:	mov	r2, #1
   11b30:	movt	r0, #2
   11b34:	ldr	r3, [r0]
   11b38:	movw	r0, #20722	; 0x50f2
   11b3c:	movt	r0, #1
   11b40:	bl	10f88 <fwrite@plt>
   11b44:	mov	r7, #0
   11b48:	b	11d00 <Mat_VarReadNextInfo@plt+0xbf8>
   11b4c:	mvn	r2, r1
   11b50:	ands	r3, r9, #3
   11b54:	add	r2, r9, r2
   11b58:	beq	11d4c <Mat_VarReadNextInfo@plt+0xc44>
   11b5c:	ldr	sl, [sp, #64]	; 0x40
   11b60:	ldr	r6, [sl, r1, lsl #2]
   11b64:	subs	r3, r3, #1
   11b68:	str	r6, [r4, r1, lsl #2]
   11b6c:	add	r1, r1, #1
   11b70:	bne	11b60 <Mat_VarReadNextInfo@plt+0xa58>
   11b74:	cmp	r2, #3
   11b78:	bcs	11d58 <Mat_VarReadNextInfo@plt+0xc50>
   11b7c:	ldr	r9, [sp, #20]
   11b80:	cmp	r0, #0
   11b84:	bne	11ca0 <Mat_VarReadNextInfo@plt+0xb98>
   11b88:	b	11b24 <Mat_VarReadNextInfo@plt+0xa1c>
   11b8c:	mov	r9, r0
   11b90:	mov	r6, #46	; 0x2e
   11b94:	mov	r5, #1
   11b98:	mov	r0, sl
   11b9c:	mov	r1, r4
   11ba0:	mov	r2, #0
   11ba4:	bl	110c0 <Mat_VarGetStructFieldByName@plt>
   11ba8:	cmp	r0, #0
   11bac:	beq	11f44 <Mat_VarReadNextInfo@plt+0xe3c>
   11bb0:	mov	r1, #1
   11bb4:	bl	110fc <Mat_VarDuplicate@plt>
   11bb8:	mov	r4, r0
   11bbc:	mov	r0, sl
   11bc0:	bl	10ff4 <Mat_VarFree@plt>
   11bc4:	cmp	r5, #0
   11bc8:	bne	11f6c <Mat_VarReadNextInfo@plt+0xe64>
   11bcc:	mov	r0, r9
   11bd0:	mov	r9, r8
   11bd4:	movw	r8, #25048	; 0x61d8
   11bd8:	mov	sl, r4
   11bdc:	mov	r1, #0
   11be0:	movt	r8, #2
   11be4:	cmp	r1, #0
   11be8:	beq	115c4 <Mat_VarReadNextInfo@plt+0x4bc>
   11bec:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11bf0:	mov	r2, #1
   11bf4:	mov	r1, #46	; 0x2e
   11bf8:	str	r2, [sp, #28]
   11bfc:	mov	r5, #0
   11c00:	cmp	r8, #1
   11c04:	str	r0, [sp, #32]
   11c08:	str	r1, [sp, #48]	; 0x30
   11c0c:	blt	1159c <Mat_VarReadNextInfo@plt+0x494>
   11c10:	mov	r0, sl
   11c14:	mov	r1, r5
   11c18:	bl	10f1c <Mat_VarGetCell@plt>
   11c1c:	cmp	r0, #0
   11c20:	beq	11580 <Mat_VarReadNextInfo@plt+0x478>
   11c24:	mov	r6, r0
   11c28:	ldr	r0, [r0, #16]
   11c2c:	cmp	r0, #2
   11c30:	bne	11580 <Mat_VarReadNextInfo@plt+0x478>
   11c34:	mov	r0, r6
   11c38:	mov	r1, r4
   11c3c:	mov	r2, #0
   11c40:	bl	110c0 <Mat_VarGetStructFieldByName@plt>
   11c44:	cmp	r0, #0
   11c48:	beq	11db4 <Mat_VarReadNextInfo@plt+0xcac>
   11c4c:	mov	r1, #1
   11c50:	bl	110fc <Mat_VarDuplicate@plt>
   11c54:	mov	r7, r0
   11c58:	mov	r0, r6
   11c5c:	bl	10ff4 <Mat_VarFree@plt>
   11c60:	str	r7, [r9, r5, lsl #2]
   11c64:	ldr	r7, [sp, #24]
   11c68:	add	r5, r5, #1
   11c6c:	cmp	r5, r8
   11c70:	blt	11c10 <Mat_VarReadNextInfo@plt+0xb08>
   11c74:	b	1159c <Mat_VarReadNextInfo@plt+0x494>
   11c78:	ldr	r1, [r2, #4]
   11c7c:	ldr	sl, [sp, #64]	; 0x40
   11c80:	cmp	r1, #1
   11c84:	beq	11c90 <Mat_VarReadNextInfo@plt+0xb88>
   11c88:	mov	r1, #1
   11c8c:	str	r1, [r6, #4]
   11c90:	ldr	r1, [sl]
   11c94:	str	r1, [r2]
   11c98:	cmp	r0, #0
   11c9c:	beq	11b24 <Mat_VarReadNextInfo@plt+0xa1c>
   11ca0:	cmp	r7, #1
   11ca4:	mov	r5, r0
   11ca8:	mov	r4, r0
   11cac:	blt	11cc8 <Mat_VarReadNextInfo@plt+0xbc0>
   11cb0:	ldr	r0, [r4]
   11cb4:	mov	r1, #1
   11cb8:	bl	110fc <Mat_VarDuplicate@plt>
   11cbc:	str	r0, [r4], #4
   11cc0:	subs	r7, r7, #1
   11cc4:	bne	11cb0 <Mat_VarReadNextInfo@plt+0xba8>
   11cc8:	ldr	r6, [sp, #44]	; 0x2c
   11ccc:	mov	r7, #1
   11cd0:	mov	r2, #21
   11cd4:	ldr	r1, [r6, #32]
   11cd8:	ldr	r3, [r6, #4]
   11cdc:	ldr	r0, [r6, #36]	; 0x24
   11ce0:	stm	sp, {r1, r5, r7}
   11ce4:	mov	r1, #1
   11ce8:	bl	10f28 <Mat_VarCreate@plt>
   11cec:	mov	r4, r0
   11cf0:	mov	r0, r6
   11cf4:	bl	10ff4 <Mat_VarFree@plt>
   11cf8:	str	r4, [sp, #44]	; 0x2c
   11cfc:	ldr	sl, [sp, #64]	; 0x40
   11d00:	ldr	r0, [sp, #36]	; 0x24
   11d04:	bl	10f34 <free@plt>
   11d08:	ldr	r0, [sp, #40]	; 0x28
   11d0c:	bl	10f34 <free@plt>
   11d10:	mov	r0, sl
   11d14:	bl	10f34 <free@plt>
   11d18:	cmp	r7, #0
   11d1c:	ldr	r7, [sp, #24]
   11d20:	ldr	r0, [sp, #32]
   11d24:	ldr	r1, [sp, #28]
   11d28:	ldr	r6, [sp, #48]	; 0x30
   11d2c:	ldr	sl, [sp, #44]	; 0x2c
   11d30:	bne	115bc <Mat_VarReadNextInfo@plt+0x4b4>
   11d34:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11d38:	vld1.64	{d16-d17}, [r3 :128]
   11d3c:	mov	r3, #0
   11d40:	cmp	lr, #0
   11d44:	bne	117a8 <Mat_VarReadNextInfo@plt+0x6a0>
   11d48:	b	117cc <Mat_VarReadNextInfo@plt+0x6c4>
   11d4c:	ldr	sl, [sp, #64]	; 0x40
   11d50:	cmp	r2, #3
   11d54:	bcc	11b7c <Mat_VarReadNextInfo@plt+0xa74>
   11d58:	sub	r2, r9, r1
   11d5c:	lsl	r1, r1, #2
   11d60:	str	r0, [sp, #60]	; 0x3c
   11d64:	add	r6, sl, #16
   11d68:	ldr	r5, [sl, r1]!
   11d6c:	add	r0, r4, #16
   11d70:	subs	r2, r2, #4
   11d74:	str	r5, [r4, r1]!
   11d78:	ldr	r5, [sl, #4]
   11d7c:	str	r5, [r4, #4]
   11d80:	ldr	r5, [sl, #8]
   11d84:	str	r5, [r4, #8]
   11d88:	ldr	r3, [sl, #12]
   11d8c:	mov	sl, r6
   11d90:	str	r3, [r4, #12]
   11d94:	mov	r4, r0
   11d98:	bne	11d64 <Mat_VarReadNextInfo@plt+0xc5c>
   11d9c:	ldr	r9, [sp, #20]
   11da0:	ldr	sl, [sp, #64]	; 0x40
   11da4:	ldr	r0, [sp, #60]	; 0x3c
   11da8:	cmp	r0, #0
   11dac:	bne	11ca0 <Mat_VarReadNextInfo@plt+0xb98>
   11db0:	b	11b24 <Mat_VarReadNextInfo@plt+0xa1c>
   11db4:	movw	r0, #25040	; 0x61d0
   11db8:	ldr	r3, [sl, #36]	; 0x24
   11dbc:	movw	r1, #20593	; 0x5071
   11dc0:	mov	r2, r4
   11dc4:	movt	r0, #2
   11dc8:	movt	r1, #1
   11dcc:	ldr	r0, [r0]
   11dd0:	bl	11030 <fprintf@plt>
   11dd4:	b	1159c <Mat_VarReadNextInfo@plt+0x494>
   11dd8:	movw	r0, #25040	; 0x61d0
   11ddc:	mov	r1, #24
   11de0:	mov	r2, #1
   11de4:	movt	r0, #2
   11de8:	ldr	r3, [r0]
   11dec:	movw	r0, #20754	; 0x5112
   11df0:	movt	r0, #1
   11df4:	bl	10f88 <fwrite@plt>
   11df8:	ldr	r9, [sp, #20]
   11dfc:	movw	r8, #25048	; 0x61d8
   11e00:	mov	r7, #0
   11e04:	movt	r8, #2
   11e08:	b	11cfc <Mat_VarReadNextInfo@plt+0xbf4>
   11e0c:	ldr	r0, [sp, #60]	; 0x3c
   11e10:	mov	r1, #41	; 0x29
   11e14:	str	sl, [sp, #44]	; 0x2c
   11e18:	add	r6, r0, #1
   11e1c:	mov	r0, r6
   11e20:	bl	11018 <strchr@plt>
   11e24:	add	r5, r0, #1
   11e28:	mov	r4, r0
   11e2c:	mov	r0, r5
   11e30:	bl	13050 <Mat_VarReadNextInfo@plt+0x1f48>
   11e34:	cmp	r0, r5
   11e38:	bne	12488 <Mat_VarReadNextInfo@plt+0x1380>
   11e3c:	cmp	r6, r4
   11e40:	str	r4, [sp, #36]	; 0x24
   11e44:	beq	11f38 <Mat_VarReadNextInfo@plt+0xe30>
   11e48:	ldr	r0, [sp, #60]	; 0x3c
   11e4c:	mov	r1, r4
   11e50:	mov	sl, #1
   11e54:	mvn	r0, r0
   11e58:	add	r8, r0, r4
   11e5c:	mov	r4, #1
   11e60:	cmp	r8, #4
   11e64:	bcc	11fe8 <Mat_VarReadNextInfo@plt+0xee0>
   11e68:	bic	ip, r8, #3
   11e6c:	mov	r1, #1
   11e70:	add	r3, pc, #952	; 0x3b8
   11e74:	subs	r2, ip, #4
   11e78:	add	r7, r1, r2, lsr #2
   11e7c:	and	lr, r7, #1
   11e80:	beq	11f8c <Mat_VarReadNextInfo@plt+0xe84>
   11e84:	add	r5, pc, #932	; 0x3a4
   11e88:	ldr	r0, [sp, #60]	; 0x3c
   11e8c:	sub	r7, r7, lr
   11e90:	mov	r3, #0
   11e94:	add	r4, sp, #72	; 0x48
   11e98:	add	r2, sp, #76	; 0x4c
   11e9c:	vld1.64	{d16-d17}, [r5 :128]
   11ea0:	add	r5, r0, r3
   11ea4:	subs	r7, r7, #2
   11ea8:	add	r3, r3, #8
   11eac:	ldr	r1, [r5, #1]
   11eb0:	ldr	r5, [r5, #5]
   11eb4:	str	r1, [sp, #76]	; 0x4c
   11eb8:	str	r5, [sp, #72]	; 0x48
   11ebc:	vld1.32	{d18[0]}, [r2 :32]
   11ec0:	vld1.32	{d19[0]}, [r4 :32]
   11ec4:	vmovl.u8	q10, d18
   11ec8:	vmovl.u8	q9, d19
   11ecc:	vceq.i16	d20, d20, d10
   11ed0:	vceq.i16	d18, d18, d10
   11ed4:	vmovl.u16	q10, d20
   11ed8:	vmovl.u16	q9, d18
   11edc:	vand	q10, q10, q4
   11ee0:	vand	q9, q9, q4
   11ee4:	vadd.i32	q8, q8, q10
   11ee8:	vadd.i32	q8, q8, q9
   11eec:	bne	11ea0 <Mat_VarReadNextInfo@plt+0xd98>
   11ef0:	b	11f94 <Mat_VarReadNextInfo@plt+0xe8c>
   11ef4:	movw	r0, #25040	; 0x61d0
   11ef8:	mov	r1, #34	; 0x22
   11efc:	mov	r2, #1
   11f00:	movt	r0, #2
   11f04:	ldr	r3, [r0]
   11f08:	movw	r0, #20687	; 0x50cf
   11f0c:	movt	r0, #1
   11f10:	bl	10f88 <fwrite@plt>
   11f14:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11f18:	movw	r0, #25040	; 0x61d0
   11f1c:	movw	r1, #20665	; 0x50b9
   11f20:	mov	r2, r4
   11f24:	movt	r0, #2
   11f28:	movt	r1, #1
   11f2c:	ldr	r0, [r0]
   11f30:	bl	11030 <fprintf@plt>
   11f34:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11f38:	mov	sl, #1
   11f3c:	mov	r4, #1
   11f40:	b	11ffc <Mat_VarReadNextInfo@plt+0xef4>
   11f44:	movw	r0, #25040	; 0x61d0
   11f48:	ldr	r3, [sl, #36]	; 0x24
   11f4c:	movw	r1, #20593	; 0x5071
   11f50:	mov	r2, r4
   11f54:	movt	r0, #2
   11f58:	movt	r1, #1
   11f5c:	ldr	r0, [r0]
   11f60:	bl	11030 <fprintf@plt>
   11f64:	mov	r9, r8
   11f68:	b	11f80 <Mat_VarReadNextInfo@plt+0xe78>
   11f6c:	mov	r0, r8
   11f70:	mov	r1, r4
   11f74:	mov	r9, r8
   11f78:	bl	10f70 <Mat_VarReadDataAll@plt>
   11f7c:	mov	sl, r4
   11f80:	movw	r8, #25048	; 0x61d8
   11f84:	movt	r8, #2
   11f88:	b	1245c <Mat_VarReadNextInfo@plt+0x1354>
   11f8c:	vld1.64	{d16-d17}, [r3 :128]
   11f90:	mov	r3, #0
   11f94:	cmp	lr, #0
   11f98:	beq	11fc0 <Mat_VarReadNextInfo@plt+0xeb8>
   11f9c:	ldr	r1, [r6, r3]
   11fa0:	str	r1, [sp, #68]	; 0x44
   11fa4:	add	r1, sp, #68	; 0x44
   11fa8:	vld1.32	{d18[0]}, [r1 :32]
   11fac:	vmovl.u8	q9, d18
   11fb0:	vceq.i16	d18, d18, d10
   11fb4:	vmovl.u16	q9, d18
   11fb8:	vand	q9, q9, q4
   11fbc:	vadd.i32	q8, q8, q9
   11fc0:	vext.8	q9, q8, q8, #8
   11fc4:	cmp	ip, r8
   11fc8:	mov	r4, #1
   11fcc:	vadd.i32	q8, q8, q9
   11fd0:	vdup.32	q9, d16[1]
   11fd4:	vadd.i32	q8, q8, q9
   11fd8:	vmov.32	sl, d16[0]
   11fdc:	beq	11ffc <Mat_VarReadNextInfo@plt+0xef4>
   11fe0:	ldr	r1, [sp, #36]	; 0x24
   11fe4:	add	r6, r6, ip
   11fe8:	ldrb	r0, [r6], #1
   11fec:	cmp	r0, #44	; 0x2c
   11ff0:	addeq	sl, sl, #1
   11ff4:	cmp	r1, r6
   11ff8:	bne	11fe8 <Mat_VarReadNextInfo@plt+0xee0>
   11ffc:	lsl	r8, sl, #2
   12000:	mov	r0, r8
   12004:	bl	10fb8 <malloc@plt>
   12008:	mov	r6, r0
   1200c:	mov	r0, r8
   12010:	bl	10fb8 <malloc@plt>
   12014:	mov	r7, r0
   12018:	mov	r0, r8
   1201c:	bl	10fb8 <malloc@plt>
   12020:	mov	r5, r0
   12024:	cmp	sl, #1
   12028:	str	r7, [sp, #48]	; 0x30
   1202c:	str	r0, [sp, #64]	; 0x40
   12030:	str	r6, [sp, #40]	; 0x28
   12034:	blt	1212c <Mat_VarReadNextInfo@plt+0x1024>
   12038:	mov	r0, r6
   1203c:	mov	r1, #0
   12040:	mov	r2, r8
   12044:	bl	11054 <memset@plt>
   12048:	mov	r8, #0
   1204c:	cmp	sl, #4
   12050:	bcc	12110 <Mat_VarReadNextInfo@plt+0x1008>
   12054:	bic	r0, sl, #3
   12058:	mov	r1, #0
   1205c:	mov	lr, #48	; 0x30
   12060:	sub	r3, r0, #4
   12064:	mov	r8, r0
   12068:	add	r2, r4, r3, lsr #2
   1206c:	cmp	r3, #12
   12070:	and	ip, r2, #3
   12074:	bcc	120dc <Mat_VarReadNextInfo@plt+0xfd4>
   12078:	sub	r2, r2, ip
   1207c:	mov	r3, #0
   12080:	mov	r1, #0
   12084:	add	r0, r7, r3
   12088:	add	r7, r5, r3
   1208c:	add	r3, r3, #64	; 0x40
   12090:	subs	r2, r2, #4
   12094:	add	r1, r1, #16
   12098:	mov	r6, r0
   1209c:	add	r5, r0, #16
   120a0:	mov	r4, r7
   120a4:	add	r0, r0, #32
   120a8:	vst1.32	{d8-d9}, [r6], lr
   120ac:	vst1.32	{d8-d9}, [r5]
   120b0:	add	r5, r7, #16
   120b4:	vst1.32	{d8-d9}, [r0]
   120b8:	vst1.32	{d8-d9}, [r4], lr
   120bc:	add	r0, r7, #32
   120c0:	ldr	r7, [sp, #48]	; 0x30
   120c4:	vst1.32	{d8-d9}, [r5]
   120c8:	ldr	r5, [sp, #64]	; 0x40
   120cc:	vst1.32	{d8-d9}, [r0]
   120d0:	vst1.32	{d8-d9}, [r6]
   120d4:	vst1.32	{d8-d9}, [r4]
   120d8:	bne	12084 <Mat_VarReadNextInfo@plt+0xf7c>
   120dc:	cmp	ip, #0
   120e0:	beq	12100 <Mat_VarReadNextInfo@plt+0xff8>
   120e4:	add	r2, r7, r1, lsl #2
   120e8:	add	r1, r5, r1, lsl #2
   120ec:	rsb	r0, ip, #0
   120f0:	vst1.32	{d8-d9}, [r2]!
   120f4:	vst1.32	{d8-d9}, [r1]!
   120f8:	adds	r0, r0, #1
   120fc:	bcc	120f0 <Mat_VarReadNextInfo@plt+0xfe8>
   12100:	ldr	r6, [sp, #40]	; 0x28
   12104:	cmp	sl, r8
   12108:	mov	r4, #1
   1210c:	beq	1212c <Mat_VarReadNextInfo@plt+0x1024>
   12110:	add	r0, r7, r8, lsl #2
   12114:	add	r1, r5, r8, lsl #2
   12118:	sub	r2, sl, r8
   1211c:	str	r4, [r0], #4
   12120:	str	r4, [r1], #4
   12124:	subs	r2, r2, #1
   12128:	bne	1211c <Mat_VarReadNextInfo@plt+0x1014>
   1212c:	ldr	r0, [sp, #60]	; 0x3c
   12130:	ldr	r1, [sp, #36]	; 0x24
   12134:	mov	r4, r5
   12138:	mov	r2, r6
   1213c:	mov	r3, r7
   12140:	mov	r5, #1
   12144:	str	r4, [sp]
   12148:	bl	13234 <Mat_VarReadNextInfo@plt+0x212c>
   1214c:	ldr	r0, [sp, #44]	; 0x2c
   12150:	mov	r1, r6
   12154:	mov	r2, r7
   12158:	mov	r3, r4
   1215c:	str	r0, [sp]
   12160:	mov	r0, sl
   12164:	bl	1349c <Mat_VarReadNextInfo@plt+0x2394>
   12168:	movw	r8, #25048	; 0x61d8
   1216c:	cmp	r0, #0
   12170:	movt	r8, #2
   12174:	beq	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12178:	ldr	r6, [sp, #44]	; 0x2c
   1217c:	mov	r4, r0
   12180:	ldr	r0, [r6, #16]
   12184:	bl	110cc <Mat_SizeOfClass@plt>
   12188:	str	r0, [r6, #12]
   1218c:	mul	r0, r0, r4
   12190:	str	r0, [r6]
   12194:	ldr	r1, [r6, #20]
   12198:	cmp	r1, #0
   1219c:	beq	123d8 <Mat_VarReadNextInfo@plt+0x12d0>
   121a0:	mov	r0, #8
   121a4:	bl	10fb8 <malloc@plt>
   121a8:	str	r0, [r6, #40]	; 0x28
   121ac:	mov	r4, r0
   121b0:	ldr	r0, [r6]
   121b4:	bl	10fb8 <malloc@plt>
   121b8:	str	r0, [r4]
   121bc:	ldr	r0, [r6]
   121c0:	bl	10fb8 <malloc@plt>
   121c4:	str	r0, [r4, #4]
   121c8:	ldr	r2, [r6, #40]	; 0x28
   121cc:	ldr	r1, [sp, #48]	; 0x30
   121d0:	cmp	r2, #0
   121d4:	beq	123f0 <Mat_VarReadNextInfo@plt+0x12e8>
   121d8:	cmp	sl, #1
   121dc:	bne	12240 <Mat_VarReadNextInfo@plt+0x1138>
   121e0:	ldr	r0, [sp, #40]	; 0x28
   121e4:	ldr	r4, [sp, #64]	; 0x40
   121e8:	ldr	r3, [r0]
   121ec:	ldr	r0, [r1]
   121f0:	ldr	r1, [r4]
   121f4:	stm	sp, {r0, r1}
   121f8:	mov	r0, r9
   121fc:	mov	r1, r6
   12200:	bl	10f4c <Mat_VarReadDataLinear@plt>
   12204:	ldr	r1, [r6, #4]
   12208:	ldr	r0, [r6, #32]
   1220c:	mov	r2, #1
   12210:	cmp	r1, #2
   12214:	bne	1242c <Mat_VarReadNextInfo@plt+0x1324>
   12218:	ldr	r1, [r0]
   1221c:	cmp	r1, #1
   12220:	bne	12414 <Mat_VarReadNextInfo@plt+0x130c>
   12224:	ldr	r1, [r4]
   12228:	str	r1, [r0, #4]
   1222c:	b	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12230:	andeq	r0, r0, r1
	...
   12240:	ldr	r0, [sp, #64]	; 0x40
   12244:	ldr	r3, [sp, #40]	; 0x28
   12248:	str	r1, [sp]
   1224c:	mov	r1, r6
   12250:	str	r0, [sp, #4]
   12254:	mov	r0, r9
   12258:	bl	10f64 <Mat_VarReadData@plt>
   1225c:	cmp	sl, #1
   12260:	blt	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12264:	ldr	r0, [sp, #44]	; 0x2c
   12268:	mov	r1, #0
   1226c:	cmp	sl, #4
   12270:	ldr	r0, [r0, #32]
   12274:	bcc	12360 <Mat_VarReadNextInfo@plt+0x1258>
   12278:	ldr	r2, [sp, #64]	; 0x40
   1227c:	add	r2, r2, sl, lsl #2
   12280:	cmp	r2, r0
   12284:	bls	12298 <Mat_VarReadNextInfo@plt+0x1190>
   12288:	ldr	r3, [sp, #64]	; 0x40
   1228c:	add	r2, r0, sl, lsl #2
   12290:	cmp	r3, r2
   12294:	bcc	12360 <Mat_VarReadNextInfo@plt+0x1258>
   12298:	bic	r1, sl, #3
   1229c:	ldr	ip, [sp, #64]	; 0x40
   122a0:	mov	lr, #0
   122a4:	mov	r3, #48	; 0x30
   122a8:	sub	r7, r1, #4
   122ac:	add	r6, r5, r7, lsr #2
   122b0:	cmp	r7, #12
   122b4:	and	r2, r6, #3
   122b8:	str	r2, [sp, #60]	; 0x3c
   122bc:	bcc	12328 <Mat_VarReadNextInfo@plt+0x1220>
   122c0:	ldr	r2, [sp, #60]	; 0x3c
   122c4:	mov	r4, #0
   122c8:	mov	lr, #0
   122cc:	sub	r8, r6, r2
   122d0:	add	r7, ip, r4
   122d4:	add	r2, r0, r4
   122d8:	mov	r6, #48	; 0x30
   122dc:	add	r4, r4, #64	; 0x40
   122e0:	subs	r8, r8, #4
   122e4:	add	lr, lr, #16
   122e8:	mov	r5, r7
   122ec:	vld1.32	{d16-d17}, [r5], r3
   122f0:	mov	r3, r2
   122f4:	vst1.32	{d16-d17}, [r3], r6
   122f8:	add	r6, r7, #16
   122fc:	vld1.32	{d16-d17}, [r6]
   12300:	add	r6, r2, #16
   12304:	add	r2, r2, #32
   12308:	vst1.32	{d16-d17}, [r6]
   1230c:	add	r6, r7, #32
   12310:	vld1.32	{d16-d17}, [r6]
   12314:	vst1.32	{d16-d17}, [r2]
   12318:	vld1.32	{d16-d17}, [r5]
   1231c:	vst1.32	{d16-d17}, [r3]
   12320:	mov	r3, #48	; 0x30
   12324:	bne	122d0 <Mat_VarReadNextInfo@plt+0x11c8>
   12328:	ldr	r2, [sp, #60]	; 0x3c
   1232c:	cmp	r2, #0
   12330:	beq	12350 <Mat_VarReadNextInfo@plt+0x1248>
   12334:	add	r6, ip, lr, lsl #2
   12338:	add	r3, r0, lr, lsl #2
   1233c:	rsb	r2, r2, #0
   12340:	vld1.32	{d16-d17}, [r6]!
   12344:	adds	r2, r2, #1
   12348:	vst1.32	{d16-d17}, [r3]!
   1234c:	bcc	12340 <Mat_VarReadNextInfo@plt+0x1238>
   12350:	movw	r8, #25048	; 0x61d8
   12354:	cmp	sl, r1
   12358:	movt	r8, #2
   1235c:	beq	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12360:	mvn	r2, r1
   12364:	ands	r3, sl, #3
   12368:	add	r2, sl, r2
   1236c:	beq	12388 <Mat_VarReadNextInfo@plt+0x1280>
   12370:	ldr	r6, [sp, #64]	; 0x40
   12374:	ldr	r7, [r6, r1, lsl #2]
   12378:	subs	r3, r3, #1
   1237c:	str	r7, [r0, r1, lsl #2]
   12380:	add	r1, r1, #1
   12384:	bne	12374 <Mat_VarReadNextInfo@plt+0x126c>
   12388:	cmp	r2, #3
   1238c:	bcc	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12390:	ldr	r3, [sp, #64]	; 0x40
   12394:	sub	r2, sl, r1
   12398:	lsl	r1, r1, #2
   1239c:	add	r7, r3, #16
   123a0:	ldr	r6, [r3, r1]!
   123a4:	add	r5, r0, #16
   123a8:	subs	r2, r2, #4
   123ac:	str	r6, [r0, r1]!
   123b0:	ldr	r6, [r3, #4]
   123b4:	str	r6, [r0, #4]
   123b8:	ldr	r6, [r3, #8]
   123bc:	str	r6, [r0, #8]
   123c0:	ldr	r3, [r3, #12]
   123c4:	str	r3, [r0, #12]
   123c8:	mov	r3, r7
   123cc:	mov	r0, r5
   123d0:	bne	1239c <Mat_VarReadNextInfo@plt+0x1294>
   123d4:	b	1243c <Mat_VarReadNextInfo@plt+0x1334>
   123d8:	bl	10fb8 <malloc@plt>
   123dc:	mov	r2, r0
   123e0:	str	r0, [r6, #40]	; 0x28
   123e4:	ldr	r1, [sp, #48]	; 0x30
   123e8:	cmp	r2, #0
   123ec:	bne	121d8 <Mat_VarReadNextInfo@plt+0x10d0>
   123f0:	movw	r0, #25040	; 0x61d0
   123f4:	mov	r1, #37	; 0x25
   123f8:	mov	r2, #1
   123fc:	movt	r0, #2
   12400:	ldr	r3, [r0]
   12404:	movw	r0, #20555	; 0x504b
   12408:	movt	r0, #1
   1240c:	bl	10f88 <fwrite@plt>
   12410:	b	1243c <Mat_VarReadNextInfo@plt+0x1334>
   12414:	ldr	r1, [r0, #4]
   12418:	cmp	r1, #1
   1241c:	bne	1242c <Mat_VarReadNextInfo@plt+0x1324>
   12420:	ldr	r1, [r4]
   12424:	str	r1, [r0]
   12428:	b	1243c <Mat_VarReadNextInfo@plt+0x1334>
   1242c:	mov	r1, #2
   12430:	str	r1, [r6, #4]
   12434:	ldr	r1, [r4]
   12438:	stm	r0, {r1, r2}
   1243c:	ldr	r0, [sp, #40]	; 0x28
   12440:	bl	10f34 <free@plt>
   12444:	ldr	r0, [sp, #48]	; 0x30
   12448:	bl	10f34 <free@plt>
   1244c:	ldr	r0, [sp, #64]	; 0x40
   12450:	bl	10f34 <free@plt>
   12454:	ldr	r7, [sp, #24]
   12458:	ldr	sl, [sp, #44]	; 0x2c
   1245c:	ldr	r1, [r8, #12]
   12460:	mov	r0, sl
   12464:	blx	r1
   12468:	mov	r0, sl
   1246c:	bl	10ff4 <Mat_VarFree@plt>
   12470:	ldr	sl, [sp, #52]	; 0x34
   12474:	ldr	r0, [sp, #56]	; 0x38
   12478:	add	r7, r7, #1
   1247c:	cmp	r7, r0
   12480:	bne	114f0 <Mat_VarReadNextInfo@plt+0x3e8>
   12484:	b	12568 <Mat_VarReadNextInfo@plt+0x1460>
   12488:	mov	r1, #0
   1248c:	mov	r2, #1
   12490:	strb	r1, [r0]
   12494:	movw	r0, #25040	; 0x61d0
   12498:	mov	r1, #56	; 0x38
   1249c:	movt	r0, #2
   124a0:	ldr	r3, [r0]
   124a4:	movw	r0, #20498	; 0x5012
   124a8:	movt	r0, #1
   124ac:	bl	10f88 <fwrite@plt>
   124b0:	b	12458 <Mat_VarReadNextInfo@plt+0x1350>
   124b4:	movw	r0, #19255	; 0x4b37
   124b8:	movt	r0, #1
   124bc:	bl	11078 <Mat_Critical@plt>
   124c0:	mov	r4, #1
   124c4:	b	12578 <Mat_VarReadNextInfo@plt+0x1470>
   124c8:	ldr	r1, [sl, r0, lsl #2]
   124cc:	movw	r0, #19290	; 0x4b5a
   124d0:	movt	r0, #1
   124d4:	bl	11078 <Mat_Critical@plt>
   124d8:	mov	r4, #1
   124dc:	b	12578 <Mat_VarReadNextInfo@plt+0x1470>
   124e0:	ldrb	r0, [r8]
   124e4:	cmp	r0, #0
   124e8:	beq	1252c <Mat_VarReadNextInfo@plt+0x1424>
   124ec:	mov	r0, r9
   124f0:	bl	10ed4 <Mat_VarReadNext@plt>
   124f4:	cmp	r0, #0
   124f8:	beq	12568 <Mat_VarReadNextInfo@plt+0x1460>
   124fc:	mov	r4, r0
   12500:	ldr	r1, [r8, #12]
   12504:	mov	r0, r4
   12508:	blx	r1
   1250c:	mov	r0, r4
   12510:	bl	10ff4 <Mat_VarFree@plt>
   12514:	mov	r0, r9
   12518:	bl	10ed4 <Mat_VarReadNext@plt>
   1251c:	mov	r4, r0
   12520:	cmp	r0, #0
   12524:	bne	12500 <Mat_VarReadNextInfo@plt+0x13f8>
   12528:	b	12568 <Mat_VarReadNextInfo@plt+0x1460>
   1252c:	mov	r0, r9
   12530:	bl	11108 <Mat_VarReadNextInfo@plt>
   12534:	cmp	r0, #0
   12538:	beq	12568 <Mat_VarReadNextInfo@plt+0x1460>
   1253c:	mov	r4, r0
   12540:	ldr	r1, [r8, #12]
   12544:	mov	r0, r4
   12548:	blx	r1
   1254c:	mov	r0, r4
   12550:	bl	10ff4 <Mat_VarFree@plt>
   12554:	mov	r0, r9
   12558:	bl	11108 <Mat_VarReadNextInfo@plt>
   1255c:	mov	r4, r0
   12560:	cmp	r0, #0
   12564:	bne	12540 <Mat_VarReadNextInfo@plt+0x1438>
   12568:	mov	r0, r9
   1256c:	bl	1106c <Mat_Close@plt>
   12570:	bl	10ec8 <Mat_LogClose@plt>
   12574:	mov	r4, #0
   12578:	mov	r0, r4
   1257c:	sub	sp, fp, #56	; 0x38
   12580:	vpop	{d8-d10}
   12584:	add	sp, sp, #4
   12588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1258c:	movw	r0, #24936	; 0x6168
   12590:	movt	r0, #2
   12594:	bl	110b4 <Mat_Help@plt>
   12598:	mov	r0, #0
   1259c:	bl	10fe8 <exit@plt>
   125a0:	movw	r0, #19139	; 0x4ac3
   125a4:	movw	r1, #18964	; 0x4a14
   125a8:	movw	r2, #19225	; 0x4b19
   125ac:	movt	r0, #1
   125b0:	movt	r1, #1
   125b4:	movt	r2, #1
   125b8:	bl	10f04 <printf@plt>
   125bc:	mov	r0, #0
   125c0:	bl	10fe8 <exit@plt>
   125c4:	push	{r4, r5, r6, r7, fp, lr}
   125c8:	add	fp, sp, #16
   125cc:	movw	r6, #25048	; 0x61d8
   125d0:	mov	r4, r1
   125d4:	movt	r6, #2
   125d8:	ldr	r0, [r6, #16]
   125dc:	cmp	r0, #1
   125e0:	blt	12608 <Mat_VarReadNextInfo@plt+0x1500>
   125e4:	movw	r5, #19642	; 0x4cba
   125e8:	mov	r7, #0
   125ec:	movt	r5, #1
   125f0:	mov	r0, r5
   125f4:	bl	10f04 <printf@plt>
   125f8:	ldr	r0, [r6, #16]
   125fc:	add	r7, r7, #1
   12600:	cmp	r7, r0
   12604:	blt	125f0 <Mat_VarReadNextInfo@plt+0x14e8>
   12608:	mov	r0, r4
   1260c:	pop	{r4, r5, r6, r7, fp, lr}
   12610:	b	10fac <puts@plt>
   12614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12618:	add	fp, sp, #28
   1261c:	sub	sp, sp, #20
   12620:	cmp	r0, #0
   12624:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12628:	mov	r4, r0
   1262c:	ldr	r0, [r0, #16]
   12630:	str	r4, [sp, #16]
   12634:	sub	r1, r0, #6
   12638:	cmp	r1, #10
   1263c:	bcs	12724 <Mat_VarReadNextInfo@plt+0x161c>
   12640:	ldr	r0, [r4, #4]
   12644:	cmp	r0, #3
   12648:	beq	128b0 <Mat_VarReadNextInfo@plt+0x17a8>
   1264c:	cmp	r0, #2
   12650:	bne	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12654:	ldr	r0, [r4, #40]	; 0x28
   12658:	cmp	r0, #0
   1265c:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12660:	ldr	r0, [r4, #8]
   12664:	bl	11000 <Mat_SizeOf@plt>
   12668:	mov	r5, r0
   1266c:	ldr	r0, [r4, #20]
   12670:	cmp	r0, #0
   12674:	beq	12bc8 <Mat_VarReadNextInfo@plt+0x1ac0>
   12678:	ldr	r1, [r4, #32]
   1267c:	ldr	r0, [r1]
   12680:	cmp	r0, #0
   12684:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12688:	ldr	r2, [r4, #40]	; 0x28
   1268c:	mov	r6, #0
   12690:	ldr	sl, [r2]
   12694:	ldr	r7, [r2, #4]
   12698:	ldr	r1, [r1, #4]
   1269c:	cmp	r1, #0
   126a0:	bne	126cc <Mat_VarReadNextInfo@plt+0x15c4>
   126a4:	mov	r0, #10
   126a8:	bl	11060 <putchar@plt>
   126ac:	ldr	r1, [r4, #32]
   126b0:	add	r6, r6, #1
   126b4:	ldr	r0, [r1]
   126b8:	cmp	r6, r0
   126bc:	bcs	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   126c0:	ldr	r1, [r1, #4]
   126c4:	cmp	r1, #0
   126c8:	beq	126a4 <Mat_VarReadNextInfo@plt+0x159c>
   126cc:	mov	r8, #0
   126d0:	ldr	r4, [sp, #16]
   126d4:	mla	r9, r8, r0, r6
   126d8:	mla	r1, r9, r5, sl
   126dc:	ldr	r0, [r4, #8]
   126e0:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   126e4:	movw	r0, #19444	; 0x4bf4
   126e8:	movt	r0, #1
   126ec:	bl	10f04 <printf@plt>
   126f0:	ldr	r0, [r4, #8]
   126f4:	mla	r1, r9, r5, r7
   126f8:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   126fc:	movw	r0, #19448	; 0x4bf8
   12700:	movt	r0, #1
   12704:	bl	10f04 <printf@plt>
   12708:	ldr	r0, [r4, #32]
   1270c:	add	r8, r8, #1
   12710:	ldr	r1, [r0, #4]
   12714:	cmp	r8, r1
   12718:	bcs	126a4 <Mat_VarReadNextInfo@plt+0x159c>
   1271c:	ldr	r0, [r0]
   12720:	b	126d0 <Mat_VarReadNextInfo@plt+0x15c8>
   12724:	sub	r1, r0, #4
   12728:	cmp	r1, #2
   1272c:	bcc	12a4c <Mat_VarReadNextInfo@plt+0x1944>
   12730:	cmp	r0, #1
   12734:	beq	12a68 <Mat_VarReadNextInfo@plt+0x1960>
   12738:	cmp	r0, #2
   1273c:	bne	12bb4 <Mat_VarReadNextInfo@plt+0x1aac>
   12740:	ldr	r1, [r4, #36]	; 0x24
   12744:	cmp	r1, #0
   12748:	beq	12758 <Mat_VarReadNextInfo@plt+0x1650>
   1274c:	movw	r0, #19350	; 0x4b96
   12750:	movt	r0, #1
   12754:	bl	10f58 <Mat_Message@plt>
   12758:	ldr	r1, [r4, #4]
   1275c:	movw	r0, #19365	; 0x4ba5
   12760:	movt	r0, #1
   12764:	bl	10f58 <Mat_Message@plt>
   12768:	ldr	r0, [r4, #4]
   1276c:	cmp	r0, #0
   12770:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12774:	movw	r0, #19380	; 0x4bb4
   12778:	movt	r0, #1
   1277c:	bl	10f58 <Mat_Message@plt>
   12780:	mov	r0, r4
   12784:	bl	10eb0 <Mat_VarGetNumberOfFields@plt>
   12788:	ldr	r1, [r4, #32]
   1278c:	mov	r5, r0
   12790:	ldr	r0, [r4, #4]
   12794:	ldr	r6, [r1]
   12798:	cmp	r0, #2
   1279c:	blt	12848 <Mat_VarReadNextInfo@plt+0x1740>
   127a0:	sub	r8, r0, #1
   127a4:	mov	r2, #1
   127a8:	cmp	r8, #4
   127ac:	bcc	12834 <Mat_VarReadNextInfo@plt+0x172c>
   127b0:	mov	r7, #1
   127b4:	bic	ip, r8, #3
   127b8:	vdup.32	q8, r7
   127bc:	subs	r2, ip, #4
   127c0:	add	r2, r7, r2, lsr #2
   127c4:	and	lr, r2, #1
   127c8:	vmov.32	d16[0], r6
   127cc:	beq	12800 <Mat_VarReadNextInfo@plt+0x16f8>
   127d0:	sub	r3, lr, r2
   127d4:	add	r6, r1, #20
   127d8:	mov	r7, #1
   127dc:	mov	r2, #32
   127e0:	sub	r4, r6, #16
   127e4:	vld1.32	{d20-d21}, [r6], r2
   127e8:	adds	r3, r3, #2
   127ec:	add	r7, r7, #8
   127f0:	vld1.32	{d18-d19}, [r4]
   127f4:	vmul.i32	q8, q9, q8
   127f8:	vmul.i32	q8, q10, q8
   127fc:	bne	127e0 <Mat_VarReadNextInfo@plt+0x16d8>
   12800:	cmp	lr, #0
   12804:	beq	12814 <Mat_VarReadNextInfo@plt+0x170c>
   12808:	add	r2, r1, r7, lsl #2
   1280c:	vld1.32	{d18-d19}, [r2]
   12810:	vmul.i32	q8, q9, q8
   12814:	vext.8	q9, q8, q8, #8
   12818:	ldr	r4, [sp, #16]
   1281c:	cmp	r8, ip
   12820:	vmul.i32	q0, q8, q9
   12824:	vmul.i32	q8, q0, d0[1]
   12828:	vmov.32	r6, d16[0]
   1282c:	beq	12848 <Mat_VarReadNextInfo@plt+0x1740>
   12830:	orr	r2, ip, #1
   12834:	ldr	r3, [r1, r2, lsl #2]
   12838:	add	r2, r2, #1
   1283c:	cmp	r2, r0
   12840:	mul	r6, r3, r6
   12844:	blt	12834 <Mat_VarReadNextInfo@plt+0x172c>
   12848:	cmp	r5, #1
   1284c:	blt	12db0 <Mat_VarReadNextInfo@plt+0x1ca8>
   12850:	cmp	r6, #0
   12854:	bne	12db0 <Mat_VarReadNextInfo@plt+0x1ca8>
   12858:	mov	r0, r4
   1285c:	bl	10f94 <Mat_VarGetStructFieldnames@plt>
   12860:	mov	r4, r0
   12864:	movw	r0, #19402	; 0x4bca
   12868:	mov	r1, r5
   1286c:	movt	r0, #1
   12870:	bl	10f58 <Mat_Message@plt>
   12874:	movw	r7, #25048	; 0x61d8
   12878:	cmp	r4, #0
   1287c:	movt	r7, #2
   12880:	ldr	r0, [r7, #16]
   12884:	add	r0, r0, #1
   12888:	str	r0, [r7, #16]
   1288c:	beq	12e0c <Mat_VarReadNextInfo@plt+0x1d04>
   12890:	movw	r6, #19352	; 0x4b98
   12894:	movt	r6, #1
   12898:	ldr	r1, [r4], #4
   1289c:	mov	r0, r6
   128a0:	bl	10f58 <Mat_Message@plt>
   128a4:	subs	r5, r5, #1
   128a8:	bne	12898 <Mat_VarReadNextInfo@plt+0x1790>
   128ac:	b	12e08 <Mat_VarReadNextInfo@plt+0x1d00>
   128b0:	ldr	r0, [r4, #40]	; 0x28
   128b4:	cmp	r0, #0
   128b8:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   128bc:	ldr	r0, [r4, #8]
   128c0:	bl	11000 <Mat_SizeOf@plt>
   128c4:	str	r0, [sp, #4]
   128c8:	ldr	r0, [r4, #20]
   128cc:	cmp	r0, #0
   128d0:	beq	12c70 <Mat_VarReadNextInfo@plt+0x1b68>
   128d4:	ldr	r0, [r4, #32]
   128d8:	ldr	r0, [r0, #8]
   128dc:	cmp	r0, #0
   128e0:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   128e4:	ldr	r0, [r4, #40]	; 0x28
   128e8:	movw	r7, #25048	; 0x61d8
   128ec:	movw	r8, #19444	; 0x4bf4
   128f0:	mov	r2, #0
   128f4:	movt	r7, #2
   128f8:	movt	r8, #1
   128fc:	ldr	r9, [r0]
   12900:	ldr	r0, [r0, #4]
   12904:	str	r0, [sp, #12]
   12908:	str	r9, [sp]
   1290c:	ldr	r5, [sp, #4]
   12910:	b	1293c <Mat_VarReadNextInfo@plt+0x1834>
   12914:	sub	r0, r1, #1
   12918:	str	r0, [r7, #16]
   1291c:	mov	r0, #10
   12920:	bl	11060 <putchar@plt>
   12924:	ldr	r0, [r4, #32]
   12928:	ldr	r2, [sp, #8]
   1292c:	ldr	r0, [r0, #8]
   12930:	add	r2, r2, #1
   12934:	cmp	r2, r0
   12938:	bcs	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   1293c:	ldr	r1, [r4, #36]	; 0x24
   12940:	movw	r0, #19485	; 0x4c1d
   12944:	str	r2, [sp, #8]
   12948:	movt	r0, #1
   1294c:	bl	10f58 <Mat_Message@plt>
   12950:	ldr	r0, [r7, #16]
   12954:	add	r1, r0, #1
   12958:	str	r1, [r7, #16]
   1295c:	ldr	r0, [r4, #32]
   12960:	ldr	r2, [r0]
   12964:	cmp	r2, #0
   12968:	beq	12914 <Mat_VarReadNextInfo@plt+0x180c>
   1296c:	mov	r6, #0
   12970:	cmp	r1, #0
   12974:	bne	129ac <Mat_VarReadNextInfo@plt+0x18a4>
   12978:	b	129dc <Mat_VarReadNextInfo@plt+0x18d4>
   1297c:	mov	r0, #10
   12980:	bl	11060 <putchar@plt>
   12984:	ldr	r0, [r4, #32]
   12988:	movw	r7, #25048	; 0x61d8
   1298c:	add	r6, r6, #1
   12990:	movt	r7, #2
   12994:	ldr	r1, [r7, #16]
   12998:	ldr	r2, [r0]
   1299c:	cmp	r6, r2
   129a0:	bcs	12914 <Mat_VarReadNextInfo@plt+0x180c>
   129a4:	cmp	r1, #0
   129a8:	beq	129dc <Mat_VarReadNextInfo@plt+0x18d4>
   129ac:	movw	sl, #19642	; 0x4cba
   129b0:	mov	r4, #0
   129b4:	movt	sl, #1
   129b8:	mov	r0, sl
   129bc:	bl	10f04 <printf@plt>
   129c0:	ldr	r0, [r7, #16]
   129c4:	add	r4, r4, #1
   129c8:	cmp	r4, r0
   129cc:	bcc	129b8 <Mat_VarReadNextInfo@plt+0x18b0>
   129d0:	ldr	r4, [sp, #16]
   129d4:	ldr	r9, [sp]
   129d8:	ldr	r0, [r4, #32]
   129dc:	ldr	r1, [r0, #4]
   129e0:	ldr	r7, [sp, #8]
   129e4:	cmp	r1, #0
   129e8:	beq	1297c <Mat_VarReadNextInfo@plt+0x1874>
   129ec:	mov	sl, #0
   129f0:	ldr	r0, [r0]
   129f4:	mla	r1, r7, r1, sl
   129f8:	mla	r4, r1, r0, r6
   129fc:	ldr	r0, [sp, #16]
   12a00:	mla	r1, r4, r5, r9
   12a04:	ldr	r0, [r0, #8]
   12a08:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   12a0c:	mov	r0, r8
   12a10:	bl	10f04 <printf@plt>
   12a14:	ldr	r0, [sp, #12]
   12a18:	mla	r1, r4, r5, r0
   12a1c:	ldr	r4, [sp, #16]
   12a20:	ldr	r0, [r4, #8]
   12a24:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   12a28:	movw	r0, #19448	; 0x4bf8
   12a2c:	movt	r0, #1
   12a30:	bl	10f04 <printf@plt>
   12a34:	ldr	r0, [r4, #32]
   12a38:	add	sl, sl, #1
   12a3c:	ldr	r1, [r0, #4]
   12a40:	cmp	sl, r1
   12a44:	bcc	129f0 <Mat_VarReadNextInfo@plt+0x18e8>
   12a48:	b	1297c <Mat_VarReadNextInfo@plt+0x1874>
   12a4c:	movw	r0, #25048	; 0x61d8
   12a50:	movt	r0, #2
   12a54:	ldrb	r1, [r0]
   12a58:	mov	r0, r4
   12a5c:	sub	sp, fp, #28
   12a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a64:	b	11048 <Mat_VarPrint@plt>
   12a68:	ldr	r1, [r4, #36]	; 0x24
   12a6c:	cmp	r1, #0
   12a70:	beq	12a80 <Mat_VarReadNextInfo@plt+0x1978>
   12a74:	movw	r0, #19350	; 0x4b96
   12a78:	movt	r0, #1
   12a7c:	bl	10f58 <Mat_Message@plt>
   12a80:	ldr	r1, [r4, #4]
   12a84:	movw	r0, #19365	; 0x4ba5
   12a88:	movt	r0, #1
   12a8c:	bl	10f58 <Mat_Message@plt>
   12a90:	ldr	r0, [r4, #4]
   12a94:	cmp	r0, #0
   12a98:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12a9c:	ldr	r1, [r4, #32]
   12aa0:	cmp	r0, #2
   12aa4:	ldr	r5, [r1]
   12aa8:	blt	12b58 <Mat_VarReadNextInfo@plt+0x1a50>
   12aac:	sub	r2, r0, #1
   12ab0:	mov	r3, #1
   12ab4:	cmp	r2, #4
   12ab8:	bcc	12b40 <Mat_VarReadNextInfo@plt+0x1a38>
   12abc:	mov	r7, #1
   12ac0:	bic	ip, r2, #3
   12ac4:	vdup.32	q8, r7
   12ac8:	subs	r3, ip, #4
   12acc:	add	r3, r7, r3, lsr #2
   12ad0:	and	lr, r3, #1
   12ad4:	vmov.32	d16[0], r5
   12ad8:	beq	12b0c <Mat_VarReadNextInfo@plt+0x1a04>
   12adc:	sub	r5, lr, r3
   12ae0:	add	r3, r1, #20
   12ae4:	mov	r7, #1
   12ae8:	mov	r6, #32
   12aec:	sub	r4, r3, #16
   12af0:	vld1.32	{d20-d21}, [r3], r6
   12af4:	adds	r5, r5, #2
   12af8:	add	r7, r7, #8
   12afc:	vld1.32	{d18-d19}, [r4]
   12b00:	vmul.i32	q8, q9, q8
   12b04:	vmul.i32	q8, q10, q8
   12b08:	bne	12aec <Mat_VarReadNextInfo@plt+0x19e4>
   12b0c:	cmp	lr, #0
   12b10:	beq	12b20 <Mat_VarReadNextInfo@plt+0x1a18>
   12b14:	add	r3, r1, r7, lsl #2
   12b18:	vld1.32	{d18-d19}, [r3]
   12b1c:	vmul.i32	q8, q9, q8
   12b20:	vext.8	q9, q8, q8, #8
   12b24:	ldr	r4, [sp, #16]
   12b28:	cmp	r2, ip
   12b2c:	vmul.i32	q0, q8, q9
   12b30:	vmul.i32	q8, q0, d0[1]
   12b34:	vmov.32	r5, d16[0]
   12b38:	beq	12b58 <Mat_VarReadNextInfo@plt+0x1a50>
   12b3c:	orr	r3, ip, #1
   12b40:	add	r1, r1, r3, lsl #2
   12b44:	sub	r0, r0, r3
   12b48:	ldr	r2, [r1], #4
   12b4c:	subs	r0, r0, #1
   12b50:	mul	r5, r2, r5
   12b54:	bne	12b48 <Mat_VarReadNextInfo@plt+0x1a40>
   12b58:	movw	r0, #19415	; 0x4bd7
   12b5c:	movt	r0, #1
   12b60:	bl	10f58 <Mat_Message@plt>
   12b64:	movw	r0, #19413	; 0x4bd5
   12b68:	movt	r0, #1
   12b6c:	bl	10f58 <Mat_Message@plt>
   12b70:	movw	r6, #25048	; 0x61d8
   12b74:	movt	r6, #2
   12b78:	ldr	r0, [r6, #16]
   12b7c:	add	r0, r0, #1
   12b80:	str	r0, [r6, #16]
   12b84:	ldr	r4, [r4, #40]	; 0x28
   12b88:	cmp	r4, #0
   12b8c:	cmpne	r5, #0
   12b90:	beq	12ba8 <Mat_VarReadNextInfo@plt+0x1aa0>
   12b94:	ldr	r0, [r4], #4
   12b98:	bl	12614 <Mat_VarReadNextInfo@plt+0x150c>
   12b9c:	subs	r5, r5, #1
   12ba0:	bne	12b94 <Mat_VarReadNextInfo@plt+0x1a8c>
   12ba4:	ldr	r0, [r6, #16]
   12ba8:	sub	r0, r0, #1
   12bac:	str	r0, [r6, #16]
   12bb0:	b	12e14 <Mat_VarReadNextInfo@plt+0x1d0c>
   12bb4:	movw	r0, #19438	; 0x4bee
   12bb8:	movt	r0, #1
   12bbc:	sub	sp, fp, #28
   12bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bc4:	b	10f58 <Mat_Message@plt>
   12bc8:	ldr	r0, [r4, #32]
   12bcc:	ldr	r1, [r0]
   12bd0:	cmp	r1, #0
   12bd4:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12bd8:	ldr	r8, [r4, #40]	; 0x28
   12bdc:	mov	r7, #0
   12be0:	ldr	r0, [r0, #4]
   12be4:	cmp	r0, #0
   12be8:	bne	12c14 <Mat_VarReadNextInfo@plt+0x1b0c>
   12bec:	mov	r0, #10
   12bf0:	bl	11060 <putchar@plt>
   12bf4:	ldr	r0, [r4, #32]
   12bf8:	add	r7, r7, #1
   12bfc:	ldr	r1, [r0]
   12c00:	cmp	r7, r1
   12c04:	bcs	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12c08:	ldr	r0, [r0, #4]
   12c0c:	cmp	r0, #0
   12c10:	beq	12bec <Mat_VarReadNextInfo@plt+0x1ae4>
   12c14:	ldr	r0, [r4, #8]
   12c18:	mla	r1, r7, r5, r8
   12c1c:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   12c20:	mov	r0, #32
   12c24:	bl	11060 <putchar@plt>
   12c28:	ldr	r0, [r4, #32]
   12c2c:	ldr	r1, [r0, #4]
   12c30:	cmp	r1, #2
   12c34:	bcc	12bec <Mat_VarReadNextInfo@plt+0x1ae4>
   12c38:	mov	r6, #1
   12c3c:	ldr	r0, [r0]
   12c40:	mla	r0, r6, r0, r7
   12c44:	mla	r1, r0, r5, r8
   12c48:	ldr	r0, [r4, #8]
   12c4c:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   12c50:	mov	r0, #32
   12c54:	bl	11060 <putchar@plt>
   12c58:	ldr	r0, [r4, #32]
   12c5c:	add	r6, r6, #1
   12c60:	ldr	r1, [r0, #4]
   12c64:	cmp	r6, r1
   12c68:	bcc	12c3c <Mat_VarReadNextInfo@plt+0x1b34>
   12c6c:	b	12bec <Mat_VarReadNextInfo@plt+0x1ae4>
   12c70:	ldr	r0, [r4, #32]
   12c74:	ldr	r0, [r0, #8]
   12c78:	cmp	r0, #0
   12c7c:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12c80:	ldr	r0, [r4, #40]	; 0x28
   12c84:	movw	r6, #25048	; 0x61d8
   12c88:	movw	r5, #19642	; 0x4cba
   12c8c:	mov	r2, #0
   12c90:	movt	r6, #2
   12c94:	movt	r5, #1
   12c98:	str	r0, [sp, #8]
   12c9c:	ldr	sl, [sp, #4]
   12ca0:	b	12ccc <Mat_VarReadNextInfo@plt+0x1bc4>
   12ca4:	sub	r0, r1, #1
   12ca8:	str	r0, [r6, #16]
   12cac:	mov	r0, #10
   12cb0:	bl	11060 <putchar@plt>
   12cb4:	ldr	r0, [r4, #32]
   12cb8:	ldr	r2, [sp, #12]
   12cbc:	ldr	r0, [r0, #8]
   12cc0:	add	r2, r2, #1
   12cc4:	cmp	r2, r0
   12cc8:	bcs	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12ccc:	ldr	r1, [r4, #36]	; 0x24
   12cd0:	movw	r0, #19485	; 0x4c1d
   12cd4:	str	r2, [sp, #12]
   12cd8:	movt	r0, #1
   12cdc:	bl	10f58 <Mat_Message@plt>
   12ce0:	ldr	r0, [r6, #16]
   12ce4:	add	r1, r0, #1
   12ce8:	str	r1, [r6, #16]
   12cec:	ldr	r0, [r4, #32]
   12cf0:	ldr	r2, [r0]
   12cf4:	cmp	r2, #0
   12cf8:	beq	12ca4 <Mat_VarReadNextInfo@plt+0x1b9c>
   12cfc:	mov	r7, #0
   12d00:	cmp	r1, #0
   12d04:	bne	12d3c <Mat_VarReadNextInfo@plt+0x1c34>
   12d08:	b	12d60 <Mat_VarReadNextInfo@plt+0x1c58>
   12d0c:	mov	r0, #10
   12d10:	bl	11060 <putchar@plt>
   12d14:	ldr	r0, [r4, #32]
   12d18:	movw	r6, #25048	; 0x61d8
   12d1c:	add	r7, r7, #1
   12d20:	movt	r6, #2
   12d24:	ldr	r1, [r6, #16]
   12d28:	ldr	r2, [r0]
   12d2c:	cmp	r7, r2
   12d30:	bcs	12ca4 <Mat_VarReadNextInfo@plt+0x1b9c>
   12d34:	cmp	r1, #0
   12d38:	beq	12d60 <Mat_VarReadNextInfo@plt+0x1c58>
   12d3c:	mov	r4, #0
   12d40:	mov	r0, r5
   12d44:	bl	10f04 <printf@plt>
   12d48:	ldr	r0, [r6, #16]
   12d4c:	add	r4, r4, #1
   12d50:	cmp	r4, r0
   12d54:	bcc	12d40 <Mat_VarReadNextInfo@plt+0x1c38>
   12d58:	ldr	r4, [sp, #16]
   12d5c:	ldr	r0, [r4, #32]
   12d60:	ldr	r1, [r0, #4]
   12d64:	ldr	r6, [sp, #8]
   12d68:	ldr	r8, [sp, #12]
   12d6c:	cmp	r1, #0
   12d70:	beq	12d0c <Mat_VarReadNextInfo@plt+0x1c04>
   12d74:	mov	r9, #0
   12d78:	ldr	r0, [r0]
   12d7c:	mla	r1, r8, r1, r9
   12d80:	mla	r0, r1, r0, r7
   12d84:	mla	r1, r0, sl, r6
   12d88:	ldr	r0, [r4, #8]
   12d8c:	bl	1313c <Mat_VarReadNextInfo@plt+0x2034>
   12d90:	mov	r0, #32
   12d94:	bl	11060 <putchar@plt>
   12d98:	ldr	r0, [r4, #32]
   12d9c:	add	r9, r9, #1
   12da0:	ldr	r1, [r0, #4]
   12da4:	cmp	r9, r1
   12da8:	bcc	12d78 <Mat_VarReadNextInfo@plt+0x1c70>
   12dac:	b	12d0c <Mat_VarReadNextInfo@plt+0x1c04>
   12db0:	cmp	r5, #1
   12db4:	blt	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12db8:	cmp	r6, #0
   12dbc:	beq	12e28 <Mat_VarReadNextInfo@plt+0x1d20>
   12dc0:	movw	r0, #19402	; 0x4bca
   12dc4:	mov	r1, r5
   12dc8:	movt	r0, #1
   12dcc:	bl	10f58 <Mat_Message@plt>
   12dd0:	movw	r7, #25048	; 0x61d8
   12dd4:	movt	r7, #2
   12dd8:	ldr	r0, [r7, #16]
   12ddc:	add	r0, r0, #1
   12de0:	str	r0, [r7, #16]
   12de4:	ldr	r4, [r4, #40]	; 0x28
   12de8:	cmp	r4, #0
   12dec:	mulne	r5, r6, r5
   12df0:	cmpne	r5, #0
   12df4:	beq	12e0c <Mat_VarReadNextInfo@plt+0x1d04>
   12df8:	ldr	r0, [r4], #4
   12dfc:	bl	12614 <Mat_VarReadNextInfo@plt+0x150c>
   12e00:	subs	r5, r5, #1
   12e04:	bne	12df8 <Mat_VarReadNextInfo@plt+0x1cf0>
   12e08:	ldr	r0, [r7, #16]
   12e0c:	sub	r0, r0, #1
   12e10:	str	r0, [r7, #16]
   12e14:	movw	r0, #20720	; 0x50f0
   12e18:	movt	r0, #1
   12e1c:	sub	sp, fp, #28
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e24:	b	10f58 <Mat_Message@plt>
   12e28:	sub	sp, fp, #28
   12e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e34:	add	fp, sp, #24
   12e38:	vpush	{d8-d9}
   12e3c:	sub	sp, sp, #40	; 0x28
   12e40:	vmov.i32	q8, #0	; 0x00000000
   12e44:	movw	r8, #25048	; 0x61d8
   12e48:	add	r9, sp, #8
   12e4c:	mov	r4, r0
   12e50:	mov	r0, r9
   12e54:	movt	r8, #2
   12e58:	vst1.64	{d16-d17}, [r0]!
   12e5c:	vst1.64	{d16-d17}, [r0]
   12e60:	ldrb	r0, [r8, #8]
   12e64:	cmp	r0, #0
   12e68:	bne	12ea4 <Mat_VarReadNextInfo@plt+0x1d9c>
   12e6c:	movw	r0, #19598	; 0x4c8e
   12e70:	movw	r1, #19582	; 0x4c7e
   12e74:	movw	r2, #19587	; 0x4c83
   12e78:	movw	r3, #19592	; 0x4c88
   12e7c:	movt	r0, #1
   12e80:	movt	r1, #1
   12e84:	movt	r2, #1
   12e88:	movt	r3, #1
   12e8c:	str	r0, [sp]
   12e90:	movw	r0, #19542	; 0x4c56
   12e94:	movt	r0, #1
   12e98:	bl	10f04 <printf@plt>
   12e9c:	mov	r0, #1
   12ea0:	strb	r0, [r8, #8]
   12ea4:	ldr	r1, [r4, #36]	; 0x24
   12ea8:	movw	r0, #19604	; 0x4c94
   12eac:	movt	r0, #1
   12eb0:	bl	10f04 <printf@plt>
   12eb4:	ldr	r0, [r4, #4]
   12eb8:	cmp	r0, #1
   12ebc:	blt	12f64 <Mat_VarReadNextInfo@plt+0x1e5c>
   12ec0:	ldr	r0, [r4, #32]
   12ec4:	ldr	r1, [r0]
   12ec8:	movw	r0, #19610	; 0x4c9a
   12ecc:	movt	r0, #1
   12ed0:	bl	10f04 <printf@plt>
   12ed4:	ldr	r0, [r4, #4]
   12ed8:	cmp	r0, #2
   12edc:	blt	12f50 <Mat_VarReadNextInfo@plt+0x1e48>
   12ee0:	vldr	d8, [pc, #328]	; 13030 <Mat_VarReadNextInfo@plt+0x1f28>
   12ee4:	movw	r5, #19615	; 0x4c9f
   12ee8:	vmov.f64	d9, #112	; 0x3f800000  1.0
   12eec:	mov	r6, #1
   12ef0:	mov	r7, #0
   12ef4:	movt	r5, #1
   12ef8:	b	12f0c <Mat_VarReadNextInfo@plt+0x1e04>
   12efc:	ldr	r0, [r4, #4]
   12f00:	add	r6, r6, #1
   12f04:	cmp	r6, r0
   12f08:	bge	12f50 <Mat_VarReadNextInfo@plt+0x1e48>
   12f0c:	ldr	r0, [r4, #32]
   12f10:	add	r0, r0, r6, lsl #2
   12f14:	vldr	s0, [r0]
   12f18:	vcvt.f64.u32	d0, s0
   12f1c:	bl	10fc4 <log10@plt>
   12f20:	vrintp.f64	d16, d0
   12f24:	vadd.f64	d16, d16, d9
   12f28:	vcmpe.f64	d16, d8
   12f2c:	vmrs	APSR_nzcv, fpscr
   12f30:	bpl	12efc <Mat_VarReadNextInfo@plt+0x1df4>
   12f34:	ldr	r0, [r4, #32]
   12f38:	mov	r1, r5
   12f3c:	ldr	r2, [r0, r6, lsl #2]
   12f40:	add	r0, r9, r7
   12f44:	bl	110a8 <sprintf@plt>
   12f48:	add	r7, r0, r7
   12f4c:	b	12efc <Mat_VarReadNextInfo@plt+0x1df4>
   12f50:	movw	r0, #19620	; 0x4ca4
   12f54:	add	r1, sp, #8
   12f58:	movt	r0, #1
   12f5c:	bl	10f04 <printf@plt>
   12f60:	b	12f70 <Mat_VarReadNextInfo@plt+0x1e68>
   12f64:	movw	r0, #19626	; 0x4caa
   12f68:	movt	r0, #1
   12f6c:	bl	10f04 <printf@plt>
   12f70:	mov	r0, r4
   12f74:	bl	110d8 <Mat_VarGetSize@plt>
   12f78:	mov	r1, r0
   12f7c:	ldrb	r0, [r8, #4]
   12f80:	cmp	r0, #1
   12f84:	bne	12fa4 <Mat_VarReadNextInfo@plt+0x1e9c>
   12f88:	cmp	r1, #1073741825	; 0x40000001
   12f8c:	bcc	12fb4 <Mat_VarReadNextInfo@plt+0x1eac>
   12f90:	vmov	s0, r1
   12f94:	vldr	d16, [pc, #172]	; 13048 <Mat_VarReadNextInfo@plt+0x1f40>
   12f98:	movw	r0, #19647	; 0x4cbf
   12f9c:	movt	r0, #1
   12fa0:	b	12fe8 <Mat_VarReadNextInfo@plt+0x1ee0>
   12fa4:	movw	r0, #19682	; 0x4ce2
   12fa8:	movt	r0, #1
   12fac:	bl	10f04 <printf@plt>
   12fb0:	b	12ff8 <Mat_VarReadNextInfo@plt+0x1ef0>
   12fb4:	cmp	r1, #1048576	; 0x100000
   12fb8:	bls	12fd0 <Mat_VarReadNextInfo@plt+0x1ec8>
   12fbc:	vmov	s0, r1
   12fc0:	vldr	d16, [pc, #120]	; 13040 <Mat_VarReadNextInfo@plt+0x1f38>
   12fc4:	movw	r0, #19656	; 0x4cc8
   12fc8:	movt	r0, #1
   12fcc:	b	12fe8 <Mat_VarReadNextInfo@plt+0x1ee0>
   12fd0:	cmp	r1, #1024	; 0x400
   12fd4:	bls	13020 <Mat_VarReadNextInfo@plt+0x1f18>
   12fd8:	vmov	s0, r1
   12fdc:	vldr	d16, [pc, #84]	; 13038 <Mat_VarReadNextInfo@plt+0x1f30>
   12fe0:	movw	r0, #19665	; 0x4cd1
   12fe4:	movt	r0, #1
   12fe8:	vcvt.f64.u32	d17, s0
   12fec:	vmul.f64	d16, d17, d16
   12ff0:	vmov	r2, r3, d16
   12ff4:	bl	10f04 <printf@plt>
   12ff8:	ldr	r0, [r4, #16]
   12ffc:	movw	r1, #20940	; 0x51cc
   13000:	movt	r1, #1
   13004:	ldr	r1, [r1, r0, lsl #2]
   13008:	movw	r0, #19690	; 0x4cea
   1300c:	movt	r0, #1
   13010:	bl	10f04 <printf@plt>
   13014:	sub	sp, fp, #40	; 0x28
   13018:	vpop	{d8-d9}
   1301c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13020:	movw	r0, #19674	; 0x4cda
   13024:	movt	r0, #1
   13028:	b	12fac <Mat_VarReadNextInfo@plt+0x1ea4>
   1302c:	nop	{0}
   13030:	andeq	r0, r0, r0
   13034:	submi	r0, r0, r0
   13038:	andeq	r0, r0, r0
   1303c:	svccc	0x00500000
   13040:	andeq	r0, r0, r0
   13044:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   13048:	andeq	r0, r0, r0
   1304c:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   13050:	push	{r4, r5, r6, sl, fp, lr}
   13054:	add	fp, sp, #16
   13058:	mov	r1, #40	; 0x28
   1305c:	mov	r4, r0
   13060:	bl	11018 <strchr@plt>
   13064:	mov	r5, r0
   13068:	mov	r0, r4
   1306c:	mov	r1, #41	; 0x29
   13070:	bl	11018 <strchr@plt>
   13074:	cmp	r0, #0
   13078:	beq	13094 <Mat_VarReadNextInfo@plt+0x1f8c>
   1307c:	cmp	r5, #0
   13080:	beq	13090 <Mat_VarReadNextInfo@plt+0x1f88>
   13084:	cmp	r0, r5
   13088:	movcc	r5, r0
   1308c:	b	13094 <Mat_VarReadNextInfo@plt+0x1f8c>
   13090:	mov	r5, r0
   13094:	mov	r0, r4
   13098:	mov	r1, #123	; 0x7b
   1309c:	bl	11018 <strchr@plt>
   130a0:	cmp	r0, #0
   130a4:	beq	130c0 <Mat_VarReadNextInfo@plt+0x1fb8>
   130a8:	mov	r6, r0
   130ac:	cmp	r5, #0
   130b0:	beq	130c4 <Mat_VarReadNextInfo@plt+0x1fbc>
   130b4:	cmp	r6, r5
   130b8:	movcs	r6, r5
   130bc:	b	130c4 <Mat_VarReadNextInfo@plt+0x1fbc>
   130c0:	mov	r6, r5
   130c4:	mov	r0, r4
   130c8:	mov	r1, #125	; 0x7d
   130cc:	bl	11018 <strchr@plt>
   130d0:	cmp	r0, #0
   130d4:	beq	130f0 <Mat_VarReadNextInfo@plt+0x1fe8>
   130d8:	mov	r5, r0
   130dc:	cmp	r6, #0
   130e0:	beq	130f4 <Mat_VarReadNextInfo@plt+0x1fec>
   130e4:	cmp	r5, r6
   130e8:	movcs	r5, r6
   130ec:	b	130f4 <Mat_VarReadNextInfo@plt+0x1fec>
   130f0:	mov	r5, r6
   130f4:	mov	r0, r4
   130f8:	mov	r1, #46	; 0x2e
   130fc:	bl	11018 <strchr@plt>
   13100:	cmp	r0, #0
   13104:	beq	13128 <Mat_VarReadNextInfo@plt+0x2020>
   13108:	cmp	r5, #0
   1310c:	beq	13118 <Mat_VarReadNextInfo@plt+0x2010>
   13110:	cmp	r0, r5
   13114:	movcs	r0, r5
   13118:	cmp	r0, #0
   1311c:	movne	r4, r0
   13120:	mov	r0, r4
   13124:	pop	{r4, r5, r6, sl, fp, pc}
   13128:	mov	r0, r5
   1312c:	cmp	r0, #0
   13130:	movne	r4, r0
   13134:	mov	r0, r4
   13138:	pop	{r4, r5, r6, sl, fp, pc}
   1313c:	sub	r0, r0, #1
   13140:	cmp	r0, #12
   13144:	bxhi	lr
   13148:	add	r2, pc, #0
   1314c:	ldr	pc, [r2, r0, lsl #2]
   13150:	andeq	r3, r1, r4, lsl #3
   13154:	muleq	r1, r4, r1
   13158:	andeq	r3, r1, r4, lsr #3
   1315c:			; <UNDEFINED> instruction: 0x000131b4
   13160:	andeq	r3, r1, r4, asr #3
   13164:	ldrdeq	r3, [r1], -r4
   13168:	andeq	r3, r1, r4, ror #3
   1316c:	andeq	r3, r1, r0, lsr r2
   13170:	strdeq	r3, [r1], -ip
   13174:	andeq	r3, r1, r0, lsr r2
   13178:	andeq	r3, r1, r0, lsr r2
   1317c:	andeq	r3, r1, r0, lsl r2
   13180:	andeq	r3, r1, r0, lsr #4
   13184:	ldrsb	r1, [r1]
   13188:	movw	r0, #19475	; 0x4c13
   1318c:	movt	r0, #1
   13190:	b	10f04 <printf@plt>
   13194:	ldrb	r1, [r1]
   13198:	movw	r0, #19480	; 0x4c18
   1319c:	movt	r0, #1
   131a0:	b	10f04 <printf@plt>
   131a4:	ldrsh	r1, [r1]
   131a8:	movw	r0, #19467	; 0x4c0b
   131ac:	movt	r0, #1
   131b0:	b	10f04 <printf@plt>
   131b4:	ldrh	r1, [r1]
   131b8:	movw	r0, #19471	; 0x4c0f
   131bc:	movt	r0, #1
   131c0:	b	10f04 <printf@plt>
   131c4:	ldr	r1, [r1]
   131c8:	movw	r0, #19377	; 0x4bb1
   131cc:	movt	r0, #1
   131d0:	b	10f04 <printf@plt>
   131d4:	ldr	r1, [r1]
   131d8:	movw	r0, #19464	; 0x4c08
   131dc:	movt	r0, #1
   131e0:	b	10f04 <printf@plt>
   131e4:	vldr	s0, [r1]
   131e8:	vcvt.f64.f32	d16, s0
   131ec:	vmov	r2, r3, d16
   131f0:	movw	r0, #19451	; 0x4bfb
   131f4:	movt	r0, #1
   131f8:	b	10f04 <printf@plt>
   131fc:	vldr	d16, [r1]
   13200:	vmov	r2, r3, d16
   13204:	movw	r0, #19451	; 0x4bfb
   13208:	movt	r0, #1
   1320c:	b	10f04 <printf@plt>
   13210:	ldrd	r2, [r1]
   13214:	movw	r0, #19454	; 0x4bfe
   13218:	movt	r0, #1
   1321c:	b	10f04 <printf@plt>
   13220:	ldrd	r2, [r1]
   13224:	movw	r0, #19459	; 0x4c03
   13228:	movt	r0, #1
   1322c:	b	10f04 <printf@plt>
   13230:	bx	lr
   13234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13238:	add	fp, sp, #28
   1323c:	sub	sp, sp, #12
   13240:	movw	r4, #20779	; 0x512b
   13244:	mov	r6, r1
   13248:	mov	r7, r0
   1324c:	add	r5, r0, #1
   13250:	mov	r9, #0
   13254:	mov	sl, #0
   13258:	str	r3, [sp, #4]
   1325c:	str	r2, [sp, #8]
   13260:	movt	r4, #1
   13264:	mov	r8, r7
   13268:	ldrb	r0, [r7, #1]!
   1326c:	cmp	r0, #57	; 0x39
   13270:	ble	132bc <Mat_VarReadNextInfo@plt+0x21b4>
   13274:	b	13314 <Mat_VarReadNextInfo@plt+0x220c>
   13278:	mov	r0, r5
   1327c:	mov	r1, #0
   13280:	mov	r2, #10
   13284:	bl	10ef8 <strtol@plt>
   13288:	cmp	r9, #2
   1328c:	cmpne	r9, #1
   13290:	bne	133d8 <Mat_VarReadNextInfo@plt+0x22d0>
   13294:	ldr	r1, [fp, #8]
   13298:	str	r0, [r1, sl, lsl #2]
   1329c:	add	r5, r8, #2
   132a0:	add	r9, r9, #1
   132a4:	cmp	r6, r7
   132a8:	beq	13494 <Mat_VarReadNextInfo@plt+0x238c>
   132ac:	mov	r8, r7
   132b0:	ldrb	r0, [r7, #1]!
   132b4:	cmp	r0, #57	; 0x39
   132b8:	bgt	13314 <Mat_VarReadNextInfo@plt+0x220c>
   132bc:	cmp	r0, #41	; 0x29
   132c0:	beq	13324 <Mat_VarReadNextInfo@plt+0x221c>
   132c4:	cmp	r0, #44	; 0x2c
   132c8:	bne	132a4 <Mat_VarReadNextInfo@plt+0x219c>
   132cc:	cmp	r9, #0
   132d0:	beq	133f0 <Mat_VarReadNextInfo@plt+0x22e8>
   132d4:	cmp	r9, #1
   132d8:	beq	132e4 <Mat_VarReadNextInfo@plt+0x21dc>
   132dc:	cmp	r9, #2
   132e0:	bne	13480 <Mat_VarReadNextInfo@plt+0x2378>
   132e4:	mov	r0, #0
   132e8:	mov	r1, r4
   132ec:	strb	r0, [r8, #1]
   132f0:	mov	r0, r5
   132f4:	bl	10ee0 <strcmp@plt>
   132f8:	cmp	r0, #0
   132fc:	beq	13434 <Mat_VarReadNextInfo@plt+0x232c>
   13300:	mov	r0, r5
   13304:	mov	r1, #0
   13308:	mov	r2, #10
   1330c:	bl	10ef8 <strtol@plt>
   13310:	b	13478 <Mat_VarReadNextInfo@plt+0x2370>
   13314:	cmp	r0, #58	; 0x3a
   13318:	beq	1336c <Mat_VarReadNextInfo@plt+0x2264>
   1331c:	cmp	r0, #125	; 0x7d
   13320:	bne	132a4 <Mat_VarReadNextInfo@plt+0x219c>
   13324:	mov	r0, #0
   13328:	mov	r1, r4
   1332c:	strb	r0, [r8, #1]
   13330:	mov	r0, r5
   13334:	bl	10ee0 <strcmp@plt>
   13338:	cmp	r0, #0
   1333c:	bne	13278 <Mat_VarReadNextInfo@plt+0x2170>
   13340:	cmp	r9, #2
   13344:	cmpne	r9, #1
   13348:	beq	133c8 <Mat_VarReadNextInfo@plt+0x22c0>
   1334c:	cmp	r9, #0
   13350:	bne	1344c <Mat_VarReadNextInfo@plt+0x2344>
   13354:	ldr	r0, [sp, #8]
   13358:	mvn	r1, #0
   1335c:	str	r1, [r0, sl, lsl #2]
   13360:	ldr	r0, [fp, #8]
   13364:	str	r1, [r0, sl, lsl #2]
   13368:	b	1329c <Mat_VarReadNextInfo@plt+0x2194>
   1336c:	mov	r0, #0
   13370:	mov	r1, r4
   13374:	strb	r0, [r8, #1]
   13378:	mov	r0, r5
   1337c:	bl	10ee0 <strcmp@plt>
   13380:	cmp	r0, #0
   13384:	beq	133bc <Mat_VarReadNextInfo@plt+0x22b4>
   13388:	mov	r0, r5
   1338c:	mov	r1, #0
   13390:	mov	r2, #10
   13394:	bl	10ef8 <strtol@plt>
   13398:	cmp	r9, #2
   1339c:	beq	13294 <Mat_VarReadNextInfo@plt+0x218c>
   133a0:	cmp	r9, #1
   133a4:	beq	1342c <Mat_VarReadNextInfo@plt+0x2324>
   133a8:	cmp	r9, #0
   133ac:	bne	1344c <Mat_VarReadNextInfo@plt+0x2344>
   133b0:	ldr	r1, [sp, #8]
   133b4:	sub	r0, r0, #1
   133b8:	b	13298 <Mat_VarReadNextInfo@plt+0x2190>
   133bc:	cmp	r9, #2
   133c0:	cmpne	r9, #1
   133c4:	bne	1343c <Mat_VarReadNextInfo@plt+0x2334>
   133c8:	ldr	r0, [fp, #8]
   133cc:	mvn	r1, #0
   133d0:	str	r1, [r0, sl, lsl #2]
   133d4:	b	1329c <Mat_VarReadNextInfo@plt+0x2194>
   133d8:	cmp	r9, #0
   133dc:	bne	1344c <Mat_VarReadNextInfo@plt+0x2344>
   133e0:	ldr	r2, [sp, #8]
   133e4:	sub	r1, r0, #1
   133e8:	str	r1, [r2, sl, lsl #2]
   133ec:	b	13294 <Mat_VarReadNextInfo@plt+0x218c>
   133f0:	mov	r0, #0
   133f4:	mov	r1, r4
   133f8:	strb	r0, [r8, #1]
   133fc:	mov	r0, r5
   13400:	bl	10ee0 <strcmp@plt>
   13404:	cmp	r0, #0
   13408:	beq	1346c <Mat_VarReadNextInfo@plt+0x2364>
   1340c:	mov	r0, r5
   13410:	mov	r1, #0
   13414:	mov	r2, #10
   13418:	bl	10ef8 <strtol@plt>
   1341c:	ldr	r2, [sp, #8]
   13420:	sub	r1, r0, #1
   13424:	str	r1, [r2, sl, lsl #2]
   13428:	b	13478 <Mat_VarReadNextInfo@plt+0x2370>
   1342c:	ldr	r1, [sp, #4]
   13430:	b	13298 <Mat_VarReadNextInfo@plt+0x2190>
   13434:	mvn	r0, #0
   13438:	b	13478 <Mat_VarReadNextInfo@plt+0x2370>
   1343c:	cmp	r9, #0
   13440:	bne	1344c <Mat_VarReadNextInfo@plt+0x2344>
   13444:	ldr	r0, [sp, #8]
   13448:	b	133cc <Mat_VarReadNextInfo@plt+0x22c4>
   1344c:	movw	r0, #25040	; 0x61d0
   13450:	movw	r1, #20783	; 0x512f
   13454:	add	r2, sl, #1
   13458:	movt	r0, #2
   1345c:	movt	r1, #1
   13460:	ldr	r0, [r0]
   13464:	bl	11030 <fprintf@plt>
   13468:	b	1329c <Mat_VarReadNextInfo@plt+0x2194>
   1346c:	ldr	r1, [sp, #8]
   13470:	mvn	r0, #0
   13474:	str	r0, [r1, sl, lsl #2]
   13478:	ldr	r1, [fp, #8]
   1347c:	str	r0, [r1, sl, lsl #2]
   13480:	add	r5, r8, #2
   13484:	add	sl, sl, #1
   13488:	mov	r9, #0
   1348c:	cmp	r6, r7
   13490:	bne	132ac <Mat_VarReadNextInfo@plt+0x21a4>
   13494:	sub	sp, fp, #28
   13498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1349c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a0:	add	fp, sp, #28
   134a4:	sub	sp, sp, #12
   134a8:	ldr	ip, [fp, #8]
   134ac:	cmp	r0, #1
   134b0:	mov	r8, #0
   134b4:	ldr	lr, [ip, #4]
   134b8:	cmpne	lr, r0
   134bc:	bne	13648 <Mat_VarReadNextInfo@plt+0x2540>
   134c0:	cmp	r0, #1
   134c4:	bne	134e8 <Mat_VarReadNextInfo@plt+0x23e0>
   134c8:	cmp	lr, #1
   134cc:	blt	13618 <Mat_VarReadNextInfo@plt+0x2510>
   134d0:	ldr	r6, [ip, #32]
   134d4:	cmp	lr, #4
   134d8:	bcs	13654 <Mat_VarReadNextInfo@plt+0x254c>
   134dc:	mov	r9, #0
   134e0:	mov	r4, #1
   134e4:	b	13768 <Mat_VarReadNextInfo@plt+0x2660>
   134e8:	blt	13644 <Mat_VarReadNextInfo@plt+0x253c>
   134ec:	mov	lr, #0
   134f0:	mov	r9, #1
   134f4:	mov	r8, #1
   134f8:	mov	r4, #0
   134fc:	ldr	r7, [r2, r4, lsl #2]
   13500:	cmp	r7, #0
   13504:	bgt	1353c <Mat_VarReadNextInfo@plt+0x2434>
   13508:	b	13694 <Mat_VarReadNextInfo@plt+0x258c>
   1350c:	str	r5, [r3, r4, lsl #2]
   13510:	ldr	r5, [r1, r4, lsl #2]
   13514:	cmn	r5, #1
   13518:	strle	lr, [r1, r4, lsl #2]
   1351c:	ldr	r5, [r3, r4, lsl #2]
   13520:	add	r4, r4, #1
   13524:	cmp	r0, r4
   13528:	mul	r8, r5, r8
   1352c:	beq	13648 <Mat_VarReadNextInfo@plt+0x2540>
   13530:	ldr	r7, [r2, r4, lsl #2]
   13534:	cmp	r7, #0
   13538:	ble	13694 <Mat_VarReadNextInfo@plt+0x258c>
   1353c:	ldr	r6, [r3, r4, lsl #2]
   13540:	cmn	r6, #1
   13544:	beq	1358c <Mat_VarReadNextInfo@plt+0x2484>
   13548:	cmp	r6, #0
   1354c:	bmi	13598 <Mat_VarReadNextInfo@plt+0x2490>
   13550:	ldr	r5, [ip, #32]
   13554:	ldr	r5, [r5, r4, lsl #2]
   13558:	cmp	r6, r5
   1355c:	bhi	13844 <Mat_VarReadNextInfo@plt+0x273c>
   13560:	ldr	sl, [r1, r4, lsl #2]
   13564:	cmp	sl, r5
   13568:	bcs	136c4 <Mat_VarReadNextInfo@plt+0x25bc>
   1356c:	cmp	r6, #1
   13570:	cmpge	sl, r6
   13574:	bgt	136c4 <Mat_VarReadNextInfo@plt+0x25bc>
   13578:	add	r5, sl, #1
   1357c:	cmp	r6, r5
   13580:	bne	135c8 <Mat_VarReadNextInfo@plt+0x24c0>
   13584:	str	r9, [r3, r4, lsl #2]
   13588:	b	1351c <Mat_VarReadNextInfo@plt+0x2414>
   1358c:	ldr	r5, [r1, r4, lsl #2]
   13590:	cmn	r5, #1
   13594:	beq	13600 <Mat_VarReadNextInfo@plt+0x24f8>
   13598:	ldr	r5, [ip, #32]
   1359c:	cmp	r7, #1
   135a0:	ldr	r5, [r5, r4, lsl #2]
   135a4:	beq	1350c <Mat_VarReadNextInfo@plt+0x2404>
   135a8:	ldr	r6, [r1, r4, lsl #2]
   135ac:	vmov	s0, r7
   135b0:	mvn	r6, r6
   135b4:	add	r5, r5, r6
   135b8:	vcvt.f64.s32	d16, s0
   135bc:	vmov	s0, r5
   135c0:	vcvt.f64.u32	d17, s0
   135c4:	b	135e8 <Mat_VarReadNextInfo@plt+0x24e0>
   135c8:	cmp	r6, #1
   135cc:	blt	1351c <Mat_VarReadNextInfo@plt+0x2414>
   135d0:	vmov	s0, r7
   135d4:	mvn	r5, sl
   135d8:	add	r5, r6, r5
   135dc:	vcvt.f64.s32	d16, s0
   135e0:	vmov	s0, r5
   135e4:	vcvt.f64.s32	d17, s0
   135e8:	vdiv.f64	d16, d17, d16
   135ec:	vcvtm.s32.f64	s0, d16
   135f0:	vmov	r5, s0
   135f4:	add	r5, r5, #1
   135f8:	str	r5, [r3, r4, lsl #2]
   135fc:	b	1351c <Mat_VarReadNextInfo@plt+0x2414>
   13600:	str	r9, [r3, r4, lsl #2]
   13604:	ldr	r5, [ip, #32]
   13608:	ldr	r5, [r5, r4, lsl #2]
   1360c:	sub	r5, r5, #1
   13610:	str	r5, [r1, r4, lsl #2]
   13614:	b	1351c <Mat_VarReadNextInfo@plt+0x2414>
   13618:	mov	r4, #1
   1361c:	ldr	r0, [r2]
   13620:	cmp	r0, #0
   13624:	bgt	1378c <Mat_VarReadNextInfo@plt+0x2684>
   13628:	movw	r0, #25040	; 0x61d0
   1362c:	mov	r1, #23
   13630:	movt	r0, #2
   13634:	ldr	r3, [r0]
   13638:	movw	r0, #20809	; 0x5149
   1363c:	movt	r0, #1
   13640:	b	138c4 <Mat_VarReadNextInfo@plt+0x27bc>
   13644:	mov	r8, #1
   13648:	mov	r0, r8
   1364c:	sub	sp, fp, #28
   13650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13654:	bic	r9, lr, #3
   13658:	mov	r0, #1
   1365c:	vmov.i32	q8, #1	; 0x00000001
   13660:	str	r6, [sp, #8]
   13664:	sub	r4, r9, #4
   13668:	add	r0, r0, r4, lsr #2
   1366c:	cmp	r4, #12
   13670:	and	r7, r0, #3
   13674:	str	r7, [sp, #4]
   13678:	bcs	136dc <Mat_VarReadNextInfo@plt+0x25d4>
   1367c:	mov	r7, #0
   13680:	ldr	r5, [sp, #4]
   13684:	ldr	r6, [sp, #8]
   13688:	cmp	r5, #0
   1368c:	bne	13738 <Mat_VarReadNextInfo@plt+0x2630>
   13690:	b	13750 <Mat_VarReadNextInfo@plt+0x2648>
   13694:	movw	r0, #25040	; 0x61d0
   13698:	mov	r1, #23
   1369c:	mov	r2, #1
   136a0:	movt	r0, #2
   136a4:	ldr	r3, [r0]
   136a8:	movw	r0, #20809	; 0x5149
   136ac:	movt	r0, #1
   136b0:	bl	10f88 <fwrite@plt>
   136b4:	mov	r8, #0
   136b8:	mov	r0, r8
   136bc:	sub	sp, fp, #28
   136c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c4:	movw	r0, #25040	; 0x61d0
   136c8:	movw	r1, #20904	; 0x51a8
   136cc:	add	r2, r4, #1
   136d0:	movt	r0, #2
   136d4:	movt	r1, #1
   136d8:	b	13858 <Mat_VarReadNextInfo@plt+0x2750>
   136dc:	sub	r0, r0, r7
   136e0:	mov	r7, #0
   136e4:	mov	sl, #64	; 0x40
   136e8:	mov	r4, r6
   136ec:	vld1.32	{d18-d19}, [r6], sl
   136f0:	add	r5, r4, #16
   136f4:	add	ip, r4, #32
   136f8:	subs	r0, r0, #4
   136fc:	add	r7, r7, #16
   13700:	vld1.32	{d20-d21}, [r5]
   13704:	add	r5, r4, #48	; 0x30
   13708:	mov	r4, r6
   1370c:	vmul.i32	q8, q9, q8
   13710:	vld1.32	{d18-d19}, [ip]
   13714:	vmul.i32	q8, q10, q8
   13718:	vld1.32	{d20-d21}, [r5]
   1371c:	vmul.i32	q8, q9, q8
   13720:	vmul.i32	q8, q10, q8
   13724:	bne	136ec <Mat_VarReadNextInfo@plt+0x25e4>
   13728:	ldr	r5, [sp, #4]
   1372c:	ldr	r6, [sp, #8]
   13730:	cmp	r5, #0
   13734:	beq	13750 <Mat_VarReadNextInfo@plt+0x2648>
   13738:	add	r0, r6, r7, lsl #2
   1373c:	rsb	r4, r5, #0
   13740:	vld1.32	{d18-d19}, [r0]!
   13744:	adds	r4, r4, #1
   13748:	vmul.i32	q8, q9, q8
   1374c:	bcc	13740 <Mat_VarReadNextInfo@plt+0x2638>
   13750:	vext.8	q9, q8, q8, #8
   13754:	cmp	lr, r9
   13758:	vmul.i32	q0, q8, q9
   1375c:	vmul.i32	q8, q0, d0[1]
   13760:	vmov.32	r4, d16[0]
   13764:	beq	13780 <Mat_VarReadNextInfo@plt+0x2678>
   13768:	add	r0, r6, r9, lsl #2
   1376c:	sub	r7, lr, r9
   13770:	ldr	r6, [r0], #4
   13774:	subs	r7, r7, #1
   13778:	mul	r4, r6, r4
   1377c:	bne	13770 <Mat_VarReadNextInfo@plt+0x2668>
   13780:	ldr	r0, [r2]
   13784:	cmp	r0, #0
   13788:	ble	13628 <Mat_VarReadNextInfo@plt+0x2520>
   1378c:	ldr	r7, [r3]
   13790:	cmp	r7, r4
   13794:	bgt	138ac <Mat_VarReadNextInfo@plt+0x27a4>
   13798:	ldr	r6, [r1]
   1379c:	cmp	r6, r4
   137a0:	bge	13828 <Mat_VarReadNextInfo@plt+0x2720>
   137a4:	cmp	r7, #1
   137a8:	cmpge	r6, r7
   137ac:	bgt	13828 <Mat_VarReadNextInfo@plt+0x2720>
   137b0:	cmn	r7, #1
   137b4:	beq	137e0 <Mat_VarReadNextInfo@plt+0x26d8>
   137b8:	cmp	r7, #1
   137bc:	blt	13818 <Mat_VarReadNextInfo@plt+0x2710>
   137c0:	vmov	s0, r0
   137c4:	mvn	r1, r6
   137c8:	add	r0, r7, r1
   137cc:	vcvt.f64.s32	d16, s0
   137d0:	vmov	s0, r0
   137d4:	vcvt.f64.s32	d17, s0
   137d8:	vdiv.f64	d16, d17, d16
   137dc:	b	1388c <Mat_VarReadNextInfo@plt+0x2784>
   137e0:	cmn	r6, #1
   137e4:	beq	13808 <Mat_VarReadNextInfo@plt+0x2700>
   137e8:	str	r4, [r3]
   137ec:	cmp	r0, #1
   137f0:	ldr	r7, [r1]
   137f4:	bne	13870 <Mat_VarReadNextInfo@plt+0x2768>
   137f8:	cmn	r7, #1
   137fc:	bgt	13818 <Mat_VarReadNextInfo@plt+0x2710>
   13800:	mov	r0, #0
   13804:	b	13814 <Mat_VarReadNextInfo@plt+0x270c>
   13808:	mov	r0, #1
   1380c:	str	r0, [r3]
   13810:	sub	r0, r4, #1
   13814:	str	r0, [r1]
   13818:	ldr	r8, [r3]
   1381c:	mov	r0, r8
   13820:	sub	sp, fp, #28
   13824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13828:	movw	r0, #25040	; 0x61d0
   1382c:	mov	r1, #18
   13830:	movt	r0, #2
   13834:	ldr	r3, [r0]
   13838:	movw	r0, #20851	; 0x5173
   1383c:	movt	r0, #1
   13840:	b	138c4 <Mat_VarReadNextInfo@plt+0x27bc>
   13844:	movw	r0, #25040	; 0x61d0
   13848:	movw	r1, #20870	; 0x5186
   1384c:	add	r2, r4, #1
   13850:	movt	r0, #2
   13854:	movt	r1, #1
   13858:	ldr	r0, [r0]
   1385c:	bl	11030 <fprintf@plt>
   13860:	mov	r8, #0
   13864:	mov	r0, r8
   13868:	sub	sp, fp, #28
   1386c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13870:	mvn	r0, r7
   13874:	vldr	s0, [r2]
   13878:	add	r0, r4, r0
   1387c:	vmov	s2, r0
   13880:	vcvt.f64.s32	d16, s2
   13884:	vcvt.f64.s32	d17, s0
   13888:	vdiv.f64	d16, d16, d17
   1388c:	vcvtm.s32.f64	s0, d16
   13890:	vmov	r0, s0
   13894:	add	r0, r0, #1
   13898:	str	r0, [r3]
   1389c:	ldr	r8, [r3]
   138a0:	mov	r0, r8
   138a4:	sub	sp, fp, #28
   138a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138ac:	movw	r0, #25040	; 0x61d0
   138b0:	mov	r1, #17
   138b4:	movt	r0, #2
   138b8:	ldr	r3, [r0]
   138bc:	movw	r0, #20833	; 0x5161
   138c0:	movt	r0, #1
   138c4:	mov	r2, #1
   138c8:	bl	10f88 <fwrite@plt>
   138cc:	mov	r0, r8
   138d0:	sub	sp, fp, #28
   138d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000138d8 <getopt@@Base>:
   138d8:	push	{fp, lr}
   138dc:	mov	fp, sp
   138e0:	sub	sp, sp, #8
   138e4:	mov	r3, #0
   138e8:	str	r3, [sp]
   138ec:	str	r3, [sp, #4]
   138f0:	mov	r3, #0
   138f4:	bl	13900 <getopt@@Base+0x28>
   138f8:	mov	sp, fp
   138fc:	pop	{fp, pc}
   13900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13904:	add	fp, sp, #28
   13908:	sub	sp, sp, #44	; 0x2c
   1390c:	mov	sl, r0
   13910:	mvn	r0, #0
   13914:	cmp	r2, #0
   13918:	beq	142a4 <getopt@@Base+0x9cc>
   1391c:	ldr	r0, [pc, #2632]	; 1436c <getopt@@Base+0xa94>
   13920:	ldr	r5, [fp, #12]
   13924:	mov	r7, r3
   13928:	mov	r6, r2
   1392c:	mov	r4, r1
   13930:	add	r0, pc, r0
   13934:	bl	10fa0 <getenv@plt>
   13938:	ldrb	r1, [r6]
   1393c:	str	r7, [sp, #20]
   13940:	str	r0, [sp, #8]
   13944:	cmp	r1, #45	; 0x2d
   13948:	bne	13954 <getopt@@Base+0x7c>
   1394c:	orr	r2, r5, #2
   13950:	b	13974 <getopt@@Base+0x9c>
   13954:	bic	r3, r5, #1
   13958:	cmp	r1, #43	; 0x2b
   1395c:	moveq	r5, r3
   13960:	cmp	r0, #0
   13964:	mov	r2, r3
   13968:	movne	r5, r3
   1396c:	cmp	r1, #43	; 0x2b
   13970:	bne	1397c <getopt@@Base+0xa4>
   13974:	add	r6, r6, #1
   13978:	mov	r5, r2
   1397c:	ldr	r8, [pc, #2540]	; 14370 <getopt@@Base+0xa98>
   13980:	ldr	r8, [pc, r8]
   13984:	ldr	ip, [r8]
   13988:	cmp	ip, #0
   1398c:	beq	13bdc <getopt@@Base+0x304>
   13990:	ldr	r0, [pc, #2532]	; 1437c <getopt@@Base+0xaa4>
   13994:	mov	r1, #0
   13998:	ldr	r0, [pc, r0]
   1399c:	str	r1, [r0]
   139a0:	ldr	r0, [pc, #2520]	; 14380 <getopt@@Base+0xaa8>
   139a4:	ldr	r0, [pc, r0]
   139a8:	ldr	r0, [r0]
   139ac:	cmp	r0, #0
   139b0:	bne	13c04 <getopt@@Base+0x32c>
   139b4:	tst	r5, #2
   139b8:	str	r6, [sp, #16]
   139bc:	str	r5, [sp, #12]
   139c0:	bne	13c2c <getopt@@Base+0x354>
   139c4:	ldr	r3, [pc, #2492]	; 14388 <getopt@@Base+0xab0>
   139c8:	ldr	r6, [pc, #2492]	; 1438c <getopt@@Base+0xab4>
   139cc:	and	r2, r5, #1
   139d0:	mov	lr, #0
   139d4:	ldr	r6, [pc, r6]
   139d8:	add	r3, pc, r3
   139dc:	str	sl, [sp, #28]
   139e0:	str	r2, [sp, #24]
   139e4:	cmp	r1, #0
   139e8:	bne	13a54 <getopt@@Base+0x17c>
   139ec:	b	13a44 <getopt@@Base+0x16c>
   139f0:	ldr	ip, [sp, #36]	; 0x24
   139f4:	ldr	r0, [sp, #32]
   139f8:	ldr	r3, [pc, #2456]	; 14398 <getopt@@Base+0xac0>
   139fc:	mvn	r1, #0
   13a00:	mov	lr, #0
   13a04:	add	r0, r0, ip
   13a08:	add	r3, pc, r3
   13a0c:	sub	r0, r0, r7
   13a10:	str	r1, [r3]
   13a14:	str	r0, [r3, #4]
   13a18:	ldr	r8, [pc, #2428]	; 1439c <getopt@@Base+0xac4>
   13a1c:	ldr	r8, [pc, r8]
   13a20:	ldr	sl, [sp, #28]
   13a24:	ldr	r2, [sp, #24]
   13a28:	ldr	r6, [pc, #2416]	; 143a0 <getopt@@Base+0xac8>
   13a2c:	ldr	r6, [pc, r6]
   13a30:	add	ip, ip, #1
   13a34:	mov	r1, #0
   13a38:	str	ip, [r8]
   13a3c:	cmp	r1, #0
   13a40:	bne	13a54 <getopt@@Base+0x17c>
   13a44:	ldr	r7, [r3, #8]
   13a48:	ldrb	r9, [r7]
   13a4c:	cmp	r9, #0
   13a50:	bne	13f84 <getopt@@Base+0x6ac>
   13a54:	cmp	ip, sl
   13a58:	str	lr, [r6]
   13a5c:	bge	13d64 <getopt@@Base+0x48c>
   13a60:	ldr	r5, [r4, ip, lsl #2]
   13a64:	str	r5, [r3, #8]
   13a68:	ldrb	r0, [r5]
   13a6c:	cmp	r0, #45	; 0x2d
   13a70:	bne	13a80 <getopt@@Base+0x1a8>
   13a74:	ldrb	r9, [r5, #1]
   13a78:	cmp	r9, #0
   13a7c:	bne	13c74 <getopt@@Base+0x39c>
   13a80:	ldr	r0, [pc, #2312]	; 14390 <getopt@@Base+0xab8>
   13a84:	cmp	r2, #0
   13a88:	add	r0, pc, r0
   13a8c:	str	r0, [r3, #8]
   13a90:	beq	13fec <getopt@@Base+0x714>
   13a94:	ldr	r0, [r3, #4]
   13a98:	cmn	r0, #1
   13a9c:	beq	13bd4 <getopt@@Base+0x2fc>
   13aa0:	ldr	r7, [pc, #2284]	; 14394 <getopt@@Base+0xabc>
   13aa4:	ldr	r7, [pc, r7]
   13aa8:	cmn	r7, #1
   13aac:	beq	13a30 <getopt@@Base+0x158>
   13ab0:	str	ip, [sp, #36]	; 0x24
   13ab4:	sub	ip, ip, r7
   13ab8:	sub	r1, r7, r0
   13abc:	str	r0, [sp, #32]
   13ac0:	sdiv	r0, r1, ip
   13ac4:	mov	sl, ip
   13ac8:	mls	r0, r0, ip, r1
   13acc:	cmp	r0, #0
   13ad0:	beq	13af0 <getopt@@Base+0x218>
   13ad4:	mov	r2, ip
   13ad8:	mov	sl, r0
   13adc:	sdiv	r0, r2, r0
   13ae0:	mls	r0, r0, sl, r2
   13ae4:	mov	r2, sl
   13ae8:	cmp	r0, #0
   13aec:	bne	13ad8 <getopt@@Base+0x200>
   13af0:	cmp	sl, #1
   13af4:	blt	139f0 <getopt@@Base+0x118>
   13af8:	ldr	r0, [sp, #36]	; 0x24
   13afc:	ldr	r2, [sp, #32]
   13b00:	sub	r0, r0, r2
   13b04:	sdiv	r9, r0, sl
   13b08:	cmp	r9, #1
   13b0c:	blt	139f0 <getopt@@Base+0x118>
   13b10:	and	lr, r9, #1
   13b14:	rsb	r6, r1, #0
   13b18:	mov	r8, #0
   13b1c:	sub	r0, lr, r9
   13b20:	str	r0, [fp, #-32]	; 0xffffffe0
   13b24:	add	r0, r8, r7
   13b28:	cmp	r9, #1
   13b2c:	ldr	r2, [r4, r0, lsl #2]
   13b30:	bne	13b64 <getopt@@Base+0x28c>
   13b34:	b	13b54 <getopt@@Base+0x27c>
   13b38:	add	r8, r8, #1
   13b3c:	cmp	r8, sl
   13b40:	beq	139f0 <getopt@@Base+0x118>
   13b44:	add	r0, r8, r7
   13b48:	cmp	r9, #1
   13b4c:	ldr	r2, [r4, r0, lsl #2]
   13b50:	bne	13b64 <getopt@@Base+0x28c>
   13b54:	mov	r1, r0
   13b58:	cmp	lr, #0
   13b5c:	beq	13b38 <getopt@@Base+0x260>
   13b60:	b	13bb4 <getopt@@Base+0x2dc>
   13b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13b68:	mov	r1, r0
   13b6c:	cmp	r1, r7
   13b70:	mov	r5, r6
   13b74:	movlt	r5, ip
   13b78:	add	r1, r5, r1
   13b7c:	ldr	r5, [r4, r1, lsl #2]
   13b80:	cmp	r1, r7
   13b84:	str	r2, [r4, r1, lsl #2]
   13b88:	mov	r2, r6
   13b8c:	movlt	r2, ip
   13b90:	adds	r3, r3, #2
   13b94:	add	r1, r2, r1
   13b98:	str	r5, [r4, r0, lsl #2]
   13b9c:	ldr	r2, [r4, r1, lsl #2]
   13ba0:	str	r5, [r4, r1, lsl #2]
   13ba4:	str	r2, [r4, r0, lsl #2]
   13ba8:	bne	13b6c <getopt@@Base+0x294>
   13bac:	cmp	lr, #0
   13bb0:	beq	13b38 <getopt@@Base+0x260>
   13bb4:	cmp	r1, r7
   13bb8:	mov	r3, r6
   13bbc:	movlt	r3, ip
   13bc0:	add	r1, r3, r1
   13bc4:	ldr	r3, [r4, r1, lsl #2]
   13bc8:	str	r2, [r4, r1, lsl #2]
   13bcc:	str	r3, [r4, r0, lsl #2]
   13bd0:	b	13b38 <getopt@@Base+0x260>
   13bd4:	str	ip, [r3, #4]
   13bd8:	b	13a30 <getopt@@Base+0x158>
   13bdc:	mov	ip, #1
   13be0:	mov	r1, #0
   13be4:	str	ip, [r8]
   13be8:	ldr	r0, [pc, #1924]	; 14374 <getopt@@Base+0xa9c>
   13bec:	ldr	r0, [pc, r0]
   13bf0:	str	ip, [r0]
   13bf4:	ldr	r0, [pc, #1916]	; 14378 <getopt@@Base+0xaa0>
   13bf8:	ldr	r0, [pc, r0]
   13bfc:	str	r1, [r0]
   13c00:	mov	r0, #1
   13c04:	ldr	r1, [pc, #1912]	; 14384 <getopt@@Base+0xaac>
   13c08:	mvn	r2, #0
   13c0c:	add	r1, pc, r1
   13c10:	str	r2, [r1]
   13c14:	str	r2, [r1, #4]
   13c18:	mov	r1, r0
   13c1c:	tst	r5, #2
   13c20:	str	r6, [sp, #16]
   13c24:	str	r5, [sp, #12]
   13c28:	beq	139c4 <getopt@@Base+0xec>
   13c2c:	cmp	r1, #0
   13c30:	beq	13f6c <getopt@@Base+0x694>
   13c34:	ldr	r0, [pc, #1900]	; 143a8 <getopt@@Base+0xad0>
   13c38:	cmp	ip, sl
   13c3c:	mov	r1, #0
   13c40:	ldr	r0, [pc, r0]
   13c44:	str	r1, [r0]
   13c48:	bge	13d64 <getopt@@Base+0x48c>
   13c4c:	ldr	r5, [r4, ip, lsl #2]
   13c50:	ldr	r0, [pc, #1896]	; 143c0 <getopt@@Base+0xae8>
   13c54:	add	r0, pc, r0
   13c58:	str	r5, [r0, #8]
   13c5c:	ldrb	r1, [r5]
   13c60:	cmp	r1, #45	; 0x2d
   13c64:	bne	14014 <getopt@@Base+0x73c>
   13c68:	ldrb	r9, [r5, #1]
   13c6c:	cmp	r9, #0
   13c70:	beq	14014 <getopt@@Base+0x73c>
   13c74:	ldr	r1, [pc, #1872]	; 143cc <getopt@@Base+0xaf4>
   13c78:	add	r7, r5, #1
   13c7c:	add	r1, pc, r1
   13c80:	ldr	r2, [r1, #4]
   13c84:	ldr	r3, [pc, #1860]	; 143d0 <getopt@@Base+0xaf8>
   13c88:	ldr	r3, [pc, r3]
   13c8c:	cmn	r2, #1
   13c90:	beq	13ca0 <getopt@@Base+0x3c8>
   13c94:	cmn	r3, #1
   13c98:	moveq	r3, ip
   13c9c:	streq	ip, [r1]
   13ca0:	cmp	r9, #45	; 0x2d
   13ca4:	str	r7, [r1, #8]
   13ca8:	bne	13f84 <getopt@@Base+0x6ac>
   13cac:	ldrb	r0, [r5, #2]
   13cb0:	mov	r9, #45	; 0x2d
   13cb4:	cmp	r0, #0
   13cb8:	bne	13f84 <getopt@@Base+0x6ac>
   13cbc:	ldr	r0, [pc, #1808]	; 143d4 <getopt@@Base+0xafc>
   13cc0:	cmn	r3, #1
   13cc4:	add	r0, pc, r0
   13cc8:	str	r0, [r1, #8]
   13ccc:	add	r0, ip, #1
   13cd0:	str	r0, [r8]
   13cd4:	beq	14000 <getopt@@Base+0x728>
   13cd8:	sub	r7, r0, r3
   13cdc:	str	r0, [sp, #28]
   13ce0:	sub	r0, r3, r2
   13ce4:	str	r2, [sp, #32]
   13ce8:	sdiv	r1, r0, r7
   13cec:	mov	r6, r7
   13cf0:	mls	r1, r1, r7, r0
   13cf4:	cmp	r1, #0
   13cf8:	beq	13d18 <getopt@@Base+0x440>
   13cfc:	mov	r2, r7
   13d00:	mov	r6, r1
   13d04:	sdiv	r1, r2, r1
   13d08:	mls	r1, r1, r6, r2
   13d0c:	mov	r2, r6
   13d10:	cmp	r1, #0
   13d14:	bne	13d00 <getopt@@Base+0x428>
   13d18:	cmp	r6, #1
   13d1c:	blt	14238 <getopt@@Base+0x960>
   13d20:	ldr	r1, [sp, #32]
   13d24:	ldr	r2, [sp, #28]
   13d28:	sub	r1, r2, r1
   13d2c:	sdiv	r5, r1, r6
   13d30:	cmp	r5, #1
   13d34:	blt	14238 <getopt@@Base+0x960>
   13d38:	rsb	r9, r0, #0
   13d3c:	and	r0, r5, #1
   13d40:	mov	r2, #0
   13d44:	str	r0, [fp, #-32]	; 0xffffffe0
   13d48:	sub	r0, r0, r5
   13d4c:	str	r0, [sp, #36]	; 0x24
   13d50:	add	r8, r2, r3
   13d54:	cmp	r5, #1
   13d58:	ldr	ip, [r4, r8, lsl #2]
   13d5c:	bne	13ef8 <getopt@@Base+0x620>
   13d60:	b	13ee4 <getopt@@Base+0x60c>
   13d64:	ldr	r1, [pc, #1600]	; 143ac <getopt@@Base+0xad4>
   13d68:	ldr	r0, [pc, #1600]	; 143b0 <getopt@@Base+0xad8>
   13d6c:	add	r1, pc, r1
   13d70:	add	r0, pc, r0
   13d74:	str	r0, [r1, #8]
   13d78:	ldr	r0, [r1, #4]
   13d7c:	ldr	r3, [pc, #1584]	; 143b4 <getopt@@Base+0xadc>
   13d80:	ldr	r3, [pc, r3]
   13d84:	cmn	r3, #1
   13d88:	beq	13ff8 <getopt@@Base+0x720>
   13d8c:	sub	r7, ip, r3
   13d90:	sub	r1, r3, r0
   13d94:	str	r0, [sp, #36]	; 0x24
   13d98:	sdiv	r0, r1, r7
   13d9c:	mov	r6, r7
   13da0:	mls	r0, r0, r7, r1
   13da4:	cmp	r0, #0
   13da8:	beq	13dc8 <getopt@@Base+0x4f0>
   13dac:	mov	r2, r7
   13db0:	mov	r6, r0
   13db4:	sdiv	r0, r2, r0
   13db8:	mls	r0, r0, r6, r2
   13dbc:	mov	r2, r6
   13dc0:	cmp	r0, #0
   13dc4:	bne	13db0 <getopt@@Base+0x4d8>
   13dc8:	cmp	r6, #1
   13dcc:	blt	13ea8 <getopt@@Base+0x5d0>
   13dd0:	ldr	r0, [sp, #36]	; 0x24
   13dd4:	sub	r0, ip, r0
   13dd8:	sdiv	sl, r0, r6
   13ddc:	cmp	sl, #1
   13de0:	blt	13ea8 <getopt@@Base+0x5d0>
   13de4:	and	r9, sl, #1
   13de8:	rsb	lr, r1, #0
   13dec:	mov	r2, #0
   13df0:	sub	r0, r9, sl
   13df4:	str	r0, [fp, #-32]	; 0xffffffe0
   13df8:	add	ip, r2, r3
   13dfc:	cmp	sl, #1
   13e00:	ldr	r0, [r4, ip, lsl #2]
   13e04:	bne	13e38 <getopt@@Base+0x560>
   13e08:	b	13e28 <getopt@@Base+0x550>
   13e0c:	add	r2, r2, #1
   13e10:	cmp	r2, r6
   13e14:	beq	13ea8 <getopt@@Base+0x5d0>
   13e18:	add	ip, r2, r3
   13e1c:	cmp	sl, #1
   13e20:	ldr	r0, [r4, ip, lsl #2]
   13e24:	bne	13e38 <getopt@@Base+0x560>
   13e28:	mov	r1, ip
   13e2c:	cmp	r9, #0
   13e30:	beq	13e0c <getopt@@Base+0x534>
   13e34:	b	13e88 <getopt@@Base+0x5b0>
   13e38:	ldr	r8, [fp, #-32]	; 0xffffffe0
   13e3c:	mov	r1, ip
   13e40:	cmp	r1, r3
   13e44:	mov	r5, lr
   13e48:	movlt	r5, r7
   13e4c:	add	r1, r5, r1
   13e50:	ldr	r5, [r4, r1, lsl #2]
   13e54:	cmp	r1, r3
   13e58:	str	r0, [r4, r1, lsl #2]
   13e5c:	mov	r0, lr
   13e60:	movlt	r0, r7
   13e64:	adds	r8, r8, #2
   13e68:	add	r1, r0, r1
   13e6c:	str	r5, [r4, ip, lsl #2]
   13e70:	ldr	r0, [r4, r1, lsl #2]
   13e74:	str	r5, [r4, r1, lsl #2]
   13e78:	str	r0, [r4, ip, lsl #2]
   13e7c:	bne	13e40 <getopt@@Base+0x568>
   13e80:	cmp	r9, #0
   13e84:	beq	13e0c <getopt@@Base+0x534>
   13e88:	cmp	r1, r3
   13e8c:	mov	r5, lr
   13e90:	movlt	r5, r7
   13e94:	add	r1, r5, r1
   13e98:	ldr	r5, [r4, r1, lsl #2]
   13e9c:	str	r0, [r4, r1, lsl #2]
   13ea0:	str	r5, [r4, ip, lsl #2]
   13ea4:	b	13e0c <getopt@@Base+0x534>
   13ea8:	ldr	r0, [sp, #36]	; 0x24
   13eac:	ldr	r8, [pc, #1284]	; 143b8 <getopt@@Base+0xae0>
   13eb0:	ldr	r8, [pc, r8]
   13eb4:	ldr	r1, [pc, #1280]	; 143bc <getopt@@Base+0xae4>
   13eb8:	add	r0, r7, r0
   13ebc:	add	r1, pc, r1
   13ec0:	str	r0, [r8]
   13ec4:	b	14000 <getopt@@Base+0x728>
   13ec8:	add	r2, r2, #1
   13ecc:	cmp	r2, r6
   13ed0:	beq	14238 <getopt@@Base+0x960>
   13ed4:	add	r8, r2, r3
   13ed8:	cmp	r5, #1
   13edc:	ldr	ip, [r4, r8, lsl #2]
   13ee0:	bne	13ef8 <getopt@@Base+0x620>
   13ee4:	mov	r1, r8
   13ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13eec:	cmp	r0, #0
   13ef0:	beq	13ec8 <getopt@@Base+0x5f0>
   13ef4:	b	13f4c <getopt@@Base+0x674>
   13ef8:	ldr	lr, [sp, #36]	; 0x24
   13efc:	mov	r1, r8
   13f00:	cmp	r1, r3
   13f04:	mov	r0, r9
   13f08:	movlt	r0, r7
   13f0c:	add	r0, r0, r1
   13f10:	mov	r1, r9
   13f14:	ldr	sl, [r4, r0, lsl #2]
   13f18:	cmp	r0, r3
   13f1c:	str	ip, [r4, r0, lsl #2]
   13f20:	movlt	r1, r7
   13f24:	adds	lr, lr, #2
   13f28:	add	r1, r1, r0
   13f2c:	str	sl, [r4, r8, lsl #2]
   13f30:	ldr	ip, [r4, r1, lsl #2]
   13f34:	str	sl, [r4, r1, lsl #2]
   13f38:	str	ip, [r4, r8, lsl #2]
   13f3c:	bne	13f00 <getopt@@Base+0x628>
   13f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f44:	cmp	r0, #0
   13f48:	beq	13ec8 <getopt@@Base+0x5f0>
   13f4c:	cmp	r1, r3
   13f50:	mov	r0, r9
   13f54:	movlt	r0, r7
   13f58:	add	r0, r0, r1
   13f5c:	ldr	r1, [r4, r0, lsl #2]
   13f60:	str	ip, [r4, r0, lsl #2]
   13f64:	str	r1, [r4, r8, lsl #2]
   13f68:	b	13ec8 <getopt@@Base+0x5f0>
   13f6c:	ldr	r0, [pc, #1072]	; 143a4 <getopt@@Base+0xacc>
   13f70:	add	r0, pc, r0
   13f74:	ldr	r7, [r0, #8]
   13f78:	ldrb	r9, [r7]
   13f7c:	cmp	r9, #0
   13f80:	beq	13c34 <getopt@@Base+0x35c>
   13f84:	ldr	r0, [sp, #20]
   13f88:	ldr	r6, [fp, #8]
   13f8c:	cmp	r0, #0
   13f90:	beq	140a4 <getopt@@Base+0x7cc>
   13f94:	ldr	r0, [r4, ip, lsl #2]
   13f98:	cmp	r7, r0
   13f9c:	beq	140a4 <getopt@@Base+0x7cc>
   13fa0:	ldr	r0, [sp, #12]
   13fa4:	tst	r0, #4
   13fa8:	bne	13fb4 <getopt@@Base+0x6dc>
   13fac:	cmp	r9, #45	; 0x2d
   13fb0:	bne	140a4 <getopt@@Base+0x7cc>
   13fb4:	ldr	r5, [pc, #1060]	; 143e0 <getopt@@Base+0xb08>
   13fb8:	mov	r0, #0
   13fbc:	cmp	r9, #58	; 0x3a
   13fc0:	add	r5, pc, r5
   13fc4:	str	r0, [r5, #12]
   13fc8:	beq	14040 <getopt@@Base+0x768>
   13fcc:	cmp	r9, #45	; 0x2d
   13fd0:	bne	14048 <getopt@@Base+0x770>
   13fd4:	add	r2, r7, #1
   13fd8:	ldr	r7, [sp, #16]
   13fdc:	mov	r1, #1
   13fe0:	str	r2, [r5, #8]
   13fe4:	str	r1, [r5, #12]
   13fe8:	b	14060 <getopt@@Base+0x788>
   13fec:	mvn	r0, #0
   13ff0:	sub	sp, fp, #28
   13ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff8:	cmn	r0, #1
   13ffc:	strne	r0, [r8]
   14000:	mvn	r0, #0
   14004:	str	r0, [r1]
   14008:	str	r0, [r1, #4]
   1400c:	sub	sp, fp, #28
   14010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14014:	ldr	r1, [pc, #936]	; 143c4 <getopt@@Base+0xaec>
   14018:	add	r1, pc, r1
   1401c:	str	r1, [r0, #8]
   14020:	add	r0, ip, #1
   14024:	str	r0, [r8]
   14028:	ldr	r0, [pc, #920]	; 143c8 <getopt@@Base+0xaf0>
   1402c:	ldr	r0, [pc, r0]
   14030:	str	r5, [r0]
   14034:	mov	r0, #1
   14038:	sub	sp, fp, #28
   1403c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14040:	ldr	r7, [sp, #16]
   14044:	b	14060 <getopt@@Base+0x788>
   14048:	ldr	r7, [sp, #16]
   1404c:	mov	r1, r9
   14050:	mov	r0, r7
   14054:	bl	11018 <strchr@plt>
   14058:	cmp	r0, #0
   1405c:	movwne	r0, #1
   14060:	str	r0, [sp]
   14064:	ldr	r0, [sp, #12]
   14068:	ldr	r2, [sp, #20]
   1406c:	mov	r1, r7
   14070:	mov	r3, r6
   14074:	str	r0, [sp, #4]
   14078:	mov	r0, r4
   1407c:	bl	14478 <getopt_long_only@@Base+0x28>
   14080:	cmn	r0, #1
   14084:	beq	1409c <getopt@@Base+0x7c4>
   14088:	ldr	r1, [pc, #916]	; 14424 <getopt@@Base+0xb4c>
   1408c:	add	r1, pc, r1
   14090:	str	r1, [r5, #8]
   14094:	sub	sp, fp, #28
   14098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1409c:	ldr	r7, [r5, #8]
   140a0:	ldrb	r9, [r7]
   140a4:	ldr	r5, [pc, #824]	; 143e4 <getopt@@Base+0xb0c>
   140a8:	add	r7, r7, #1
   140ac:	cmp	r9, #58	; 0x3a
   140b0:	add	r5, pc, r5
   140b4:	str	r7, [r5, #8]
   140b8:	beq	14148 <getopt@@Base+0x870>
   140bc:	cmp	r9, #45	; 0x2d
   140c0:	bne	140d0 <getopt@@Base+0x7f8>
   140c4:	ldrb	r0, [r7]
   140c8:	cmp	r0, #0
   140cc:	bne	14160 <getopt@@Base+0x888>
   140d0:	ldr	r0, [sp, #16]
   140d4:	mov	r1, r9
   140d8:	bl	11018 <strchr@plt>
   140dc:	cmp	r0, #0
   140e0:	beq	1412c <getopt@@Base+0x854>
   140e4:	ldr	r2, [sp, #20]
   140e8:	ldrb	r1, [r0, #1]
   140ec:	cmp	r2, #0
   140f0:	beq	14100 <getopt@@Base+0x828>
   140f4:	cmp	r9, #87	; 0x57
   140f8:	cmpeq	r1, #59	; 0x3b
   140fc:	beq	141d0 <getopt@@Base+0x8f8>
   14100:	cmp	r1, #58	; 0x3a
   14104:	bne	141c0 <getopt@@Base+0x8e8>
   14108:	ldr	r1, [pc, #764]	; 1440c <getopt@@Base+0xb34>
   1410c:	mov	r2, #0
   14110:	ldr	r1, [pc, r1]
   14114:	str	r2, [r1]
   14118:	ldrb	r2, [r7]
   1411c:	cmp	r2, #0
   14120:	beq	14260 <getopt@@Base+0x988>
   14124:	str	r7, [r1]
   14128:	b	14288 <getopt@@Base+0x9b0>
   1412c:	cmp	r9, #45	; 0x2d
   14130:	mvn	r0, #0
   14134:	bne	14148 <getopt@@Base+0x870>
   14138:	ldrb	r1, [r7]
   1413c:	cmp	r1, #0
   14140:	bne	14160 <getopt@@Base+0x888>
   14144:	b	142a4 <getopt@@Base+0x9cc>
   14148:	ldrb	r0, [r7]
   1414c:	cmp	r0, #0
   14150:	bne	14160 <getopt@@Base+0x888>
   14154:	ldr	r0, [r8]
   14158:	add	r0, r0, #1
   1415c:	str	r0, [r8]
   14160:	ldr	r0, [pc, #640]	; 143e8 <getopt@@Base+0xb10>
   14164:	ldr	r0, [pc, r0]
   14168:	ldr	r0, [r0]
   1416c:	cmp	r0, #0
   14170:	beq	141a8 <getopt@@Base+0x8d0>
   14174:	ldr	r0, [sp, #16]
   14178:	ldrb	r0, [r0]
   1417c:	cmp	r0, #58	; 0x3a
   14180:	beq	141a8 <getopt@@Base+0x8d0>
   14184:	ldr	r1, [pc, #608]	; 143ec <getopt@@Base+0xb14>
   14188:	ldr	r0, [pc, #608]	; 143f0 <getopt@@Base+0xb18>
   1418c:	ldr	r2, [sp, #8]
   14190:	add	r1, pc, r1
   14194:	cmp	r2, #0
   14198:	add	r0, pc, r0
   1419c:	movne	r0, r1
   141a0:	mov	r1, r9
   141a4:	bl	11024 <warnx@plt>
   141a8:	ldr	r0, [pc, #580]	; 143f4 <getopt@@Base+0xb1c>
   141ac:	ldr	r0, [pc, r0]
   141b0:	str	r9, [r0]
   141b4:	mov	r0, #63	; 0x3f
   141b8:	sub	sp, fp, #28
   141bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141c0:	ldrb	r0, [r7]
   141c4:	cmp	r0, #0
   141c8:	bne	142a0 <getopt@@Base+0x9c8>
   141cc:	b	14294 <getopt@@Base+0x9bc>
   141d0:	ldrb	r0, [r7]
   141d4:	mov	r3, r6
   141d8:	ldr	r6, [sp, #16]
   141dc:	ldr	r1, [sp, #12]
   141e0:	cmp	r0, #0
   141e4:	bne	14204 <getopt@@Base+0x92c>
   141e8:	ldr	r0, [r8]
   141ec:	add	r0, r0, #1
   141f0:	cmp	r0, sl
   141f4:	str	r0, [r8]
   141f8:	bge	142ac <getopt@@Base+0x9d4>
   141fc:	ldr	r0, [r4, r0, lsl #2]
   14200:	str	r0, [r5, #8]
   14204:	ldr	r2, [sp, #20]
   14208:	mov	r0, #2
   1420c:	str	r0, [r5, #12]
   14210:	mov	r0, #0
   14214:	stm	sp, {r0, r1}
   14218:	mov	r0, r4
   1421c:	mov	r1, r6
   14220:	bl	14478 <getopt_long_only@@Base+0x28>
   14224:	ldr	r1, [pc, #476]	; 14408 <getopt@@Base+0xb30>
   14228:	add	r1, pc, r1
   1422c:	str	r1, [r5, #8]
   14230:	sub	sp, fp, #28
   14234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14238:	ldr	r0, [sp, #32]
   1423c:	ldr	r1, [sp, #28]
   14240:	add	r0, r0, r1
   14244:	ldr	r1, [pc, #396]	; 143d8 <getopt@@Base+0xb00>
   14248:	sub	r0, r0, r3
   1424c:	ldr	r1, [pc, r1]
   14250:	str	r0, [r1]
   14254:	ldr	r1, [pc, #384]	; 143dc <getopt@@Base+0xb04>
   14258:	add	r1, pc, r1
   1425c:	b	14000 <getopt@@Base+0x728>
   14260:	ldrb	r0, [r0, #2]
   14264:	cmp	r0, #58	; 0x3a
   14268:	beq	14288 <getopt@@Base+0x9b0>
   1426c:	ldr	r0, [r8]
   14270:	add	r0, r0, #1
   14274:	cmp	r0, sl
   14278:	str	r0, [r8]
   1427c:	bge	1430c <getopt@@Base+0xa34>
   14280:	ldr	r0, [r4, r0, lsl #2]
   14284:	str	r0, [r1]
   14288:	ldr	r0, [pc, #400]	; 14420 <getopt@@Base+0xb48>
   1428c:	add	r0, pc, r0
   14290:	str	r0, [r5, #8]
   14294:	ldr	r0, [r8]
   14298:	add	r0, r0, #1
   1429c:	str	r0, [r8]
   142a0:	mov	r0, r9
   142a4:	sub	sp, fp, #28
   142a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142ac:	ldr	r0, [pc, #324]	; 143f8 <getopt@@Base+0xb20>
   142b0:	add	r0, pc, r0
   142b4:	str	r0, [r5, #8]
   142b8:	ldr	r0, [pc, #316]	; 143fc <getopt@@Base+0xb24>
   142bc:	ldr	r0, [pc, r0]
   142c0:	ldr	r0, [r0]
   142c4:	cmp	r0, #0
   142c8:	beq	142e8 <getopt@@Base+0xa10>
   142cc:	ldrb	r0, [r6]
   142d0:	cmp	r0, #58	; 0x3a
   142d4:	beq	142e8 <getopt@@Base+0xa10>
   142d8:	ldr	r0, [pc, #288]	; 14400 <getopt@@Base+0xb28>
   142dc:	mov	r1, #87	; 0x57
   142e0:	add	r0, pc, r0
   142e4:	bl	11024 <warnx@plt>
   142e8:	ldr	r0, [pc, #276]	; 14404 <getopt@@Base+0xb2c>
   142ec:	mov	r1, #87	; 0x57
   142f0:	ldr	r0, [pc, r0]
   142f4:	str	r1, [r0]
   142f8:	ldrb	r0, [r6]
   142fc:	cmp	r0, #58	; 0x3a
   14300:	movwne	r0, #63	; 0x3f
   14304:	sub	sp, fp, #28
   14308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1430c:	ldr	r0, [pc, #252]	; 14410 <getopt@@Base+0xb38>
   14310:	add	r0, pc, r0
   14314:	str	r0, [r5, #8]
   14318:	ldr	r0, [pc, #244]	; 14414 <getopt@@Base+0xb3c>
   1431c:	ldr	r0, [pc, r0]
   14320:	ldr	r4, [sp, #16]
   14324:	ldr	r0, [r0]
   14328:	cmp	r0, #0
   1432c:	beq	1434c <getopt@@Base+0xa74>
   14330:	ldrb	r0, [r4]
   14334:	cmp	r0, #58	; 0x3a
   14338:	beq	1434c <getopt@@Base+0xa74>
   1433c:	ldr	r0, [pc, #212]	; 14418 <getopt@@Base+0xb40>
   14340:	mov	r1, r9
   14344:	add	r0, pc, r0
   14348:	bl	11024 <warnx@plt>
   1434c:	ldr	r0, [pc, #200]	; 1441c <getopt@@Base+0xb44>
   14350:	ldr	r0, [pc, r0]
   14354:	str	r9, [r0]
   14358:	ldrb	r0, [r4]
   1435c:	cmp	r0, #58	; 0x3a
   14360:	movwne	r0, #63	; 0x3f
   14364:	sub	sp, fp, #28
   14368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1436c:	ldrdeq	r1, [r0], -ip
   14370:	andeq	r2, r1, ip, asr r7
   14374:	andeq	r2, r1, r4, ror #9
   14378:	andeq	r2, r1, ip, ror #9
   1437c:	andeq	r2, r1, ip, asr #14
   14380:	andeq	r2, r1, ip, lsr #14
   14384:	andeq	r2, r1, r8, lsr #11
   14388:	ldrdeq	r2, [r1], -ip
   1438c:	strdeq	r2, [r1], -ip
   14390:	andeq	r1, r0, sp, ror #3
   14394:	andeq	r2, r1, r0, lsl r7
   14398:	andeq	r2, r1, ip, lsr #15
   1439c:	andeq	r2, r1, r0, asr #13
   143a0:	andeq	r2, r1, r4, lsr #13
   143a4:	andeq	r2, r1, r4, asr #4
   143a8:	muleq	r1, r0, r4
   143ac:	andeq	r2, r1, r8, asr #8
   143b0:	andeq	r0, r0, r5, lsl #30
   143b4:	andeq	r2, r1, r4, lsr r4
   143b8:	andeq	r2, r1, ip, lsr #4
   143bc:	strdeq	r2, [r1], -r8
   143c0:	andeq	r2, r1, r0, ror #10
   143c4:	andeq	r0, r0, sp, asr ip
   143c8:	strheq	r2, [r1], -r8
   143cc:	andeq	r2, r1, r8, lsr r5
   143d0:	andeq	r2, r1, ip, lsr #10
   143d4:			; <UNDEFINED> instruction: 0x00000fb1
   143d8:	muleq	r1, r0, lr
   143dc:	andeq	r1, r1, ip, asr pc
   143e0:	strdeq	r2, [r1], -r4
   143e4:	andeq	r2, r1, r4, lsl #2
   143e8:	andeq	r1, r1, r0, ror pc
   143ec:	muleq	r0, r3, r0
   143f0:	andeq	r1, r0, r0, lsr #1
   143f4:	andeq	r1, r1, r4, lsr pc
   143f8:	andeq	r0, r0, r5, asr #19
   143fc:	andeq	r1, r1, r8, lsl lr
   14400:	andeq	r0, r0, sp, ror #30
   14404:	strdeq	r1, [r1], -r0
   14408:	andeq	r0, r0, sp, asr #20
   1440c:	ldrdeq	r1, [r1], -r4
   14410:	andeq	r0, r0, r5, ror #18
   14414:			; <UNDEFINED> instruction: 0x00011db8
   14418:	andeq	r0, r0, r9, lsl #30
   1441c:	muleq	r1, r0, sp
   14420:	andeq	r0, r0, r9, ror #19
   14424:	andeq	r0, r0, r9, ror #23

00014428 <getopt_long@@Base>:
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	sub	sp, sp, #8
   14434:	mov	ip, #1
   14438:	str	ip, [sp, #4]
   1443c:	ldr	ip, [fp, #8]
   14440:	str	ip, [sp]
   14444:	bl	13900 <getopt@@Base+0x28>
   14448:	mov	sp, fp
   1444c:	pop	{fp, pc}

00014450 <getopt_long_only@@Base>:
   14450:	push	{fp, lr}
   14454:	mov	fp, sp
   14458:	sub	sp, sp, #8
   1445c:	mov	ip, #5
   14460:	str	ip, [sp, #4]
   14464:	ldr	ip, [fp, #8]
   14468:	str	ip, [sp]
   1446c:	bl	13900 <getopt@@Base+0x28>
   14470:	mov	sp, fp
   14474:	pop	{fp, pc}
   14478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1447c:	add	fp, sp, #28
   14480:	sub	sp, sp, #44	; 0x2c
   14484:	str	r2, [sp, #32]
   14488:	mov	r6, r1
   1448c:	ldr	r1, [pc, #1212]	; 14950 <getopt_long_only@@Base+0x500>
   14490:	str	r3, [sp, #16]
   14494:	str	r0, [sp, #12]
   14498:	add	r1, pc, r1
   1449c:	ldr	r2, [r1, #12]
   144a0:	ldr	r7, [r1, #8]
   144a4:	cmp	r2, #2
   144a8:	bhi	144bc <getopt_long_only@@Base+0x6c>
   144ac:	ldr	r1, [pc, #1188]	; 14958 <getopt_long_only@@Base+0x508>
   144b0:	add	r1, pc, r1
   144b4:	ldr	r9, [r1, r2, lsl #2]
   144b8:	b	144c4 <getopt_long_only@@Base+0x74>
   144bc:	ldr	r9, [pc, #1168]	; 14954 <getopt_long_only@@Base+0x504>
   144c0:	add	r9, pc, r9
   144c4:	ldr	r0, [pc, #1168]	; 1495c <getopt_long_only@@Base+0x50c>
   144c8:	mov	r1, #61	; 0x3d
   144cc:	ldr	r0, [pc, r0]
   144d0:	ldr	r4, [r0]
   144d4:	add	r5, r4, #1
   144d8:	str	r5, [r0]
   144dc:	mov	r0, r7
   144e0:	bl	11018 <strchr@plt>
   144e4:	cmp	r0, #0
   144e8:	str	r4, [sp, #24]
   144ec:	str	r5, [sp, #8]
   144f0:	beq	14504 <getopt_long_only@@Base+0xb4>
   144f4:	sub	r1, r0, r7
   144f8:	add	r0, r0, #1
   144fc:	str	r1, [fp, #-32]	; 0xffffffe0
   14500:	b	14514 <getopt_long_only@@Base+0xc4>
   14504:	mov	r0, r7
   14508:	bl	1100c <strlen@plt>
   1450c:	str	r0, [fp, #-32]	; 0xffffffe0
   14510:	mov	r0, #0
   14514:	str	r0, [sp, #20]
   14518:	ldr	r0, [sp, #32]
   1451c:	ldr	r8, [r0]
   14520:	cmp	r8, #0
   14524:	beq	14724 <getopt_long_only@@Base+0x2d4>
   14528:	ldr	r0, [fp, #8]
   1452c:	cmp	r0, #0
   14530:	beq	1458c <getopt_long_only@@Base+0x13c>
   14534:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14538:	cmp	r0, #1
   1453c:	bne	1458c <getopt_long_only@@Base+0x13c>
   14540:	ldr	r0, [sp, #32]
   14544:	ldrb	r5, [r7]
   14548:	mov	sl, #0
   1454c:	add	r4, r0, #16
   14550:	ldrb	r0, [r8]
   14554:	cmp	r5, r0
   14558:	beq	14578 <getopt_long_only@@Base+0x128>
   1455c:	ldr	r8, [r4, sl, lsl #4]
   14560:	add	sl, sl, #1
   14564:	cmp	r8, #0
   14568:	beq	14724 <getopt_long_only@@Base+0x2d4>
   1456c:	ldrb	r0, [r8]
   14570:	cmp	r5, r0
   14574:	bne	1455c <getopt_long_only@@Base+0x10c>
   14578:	mov	r0, r8
   1457c:	bl	1100c <strlen@plt>
   14580:	cmp	r0, #1
   14584:	bne	1455c <getopt_long_only@@Base+0x10c>
   14588:	b	147a8 <getopt_long_only@@Base+0x358>
   1458c:	ldr	r0, [fp, #12]
   14590:	stm	sp, {r6, r9}
   14594:	str	r7, [sp, #36]	; 0x24
   14598:	tst	r0, #4
   1459c:	bne	14650 <getopt_long_only@@Base+0x200>
   145a0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   145a4:	mov	r0, #0
   145a8:	mvn	sl, #0
   145ac:	mov	r9, #0
   145b0:	str	r0, [sp, #28]
   145b4:	b	145d8 <getopt_long_only@@Base+0x188>
   145b8:	mov	r0, #1
   145bc:	str	r0, [sp, #28]
   145c0:	ldr	r0, [sp, #32]
   145c4:	add	r0, r0, r9, lsl #4
   145c8:	add	r9, r9, #1
   145cc:	ldr	r8, [r0, #16]
   145d0:	cmp	r8, #0
   145d4:	beq	146c8 <getopt_long_only@@Base+0x278>
   145d8:	ldr	r0, [sp, #36]	; 0x24
   145dc:	mov	r1, r8
   145e0:	mov	r2, r4
   145e4:	bl	110e4 <strncmp@plt>
   145e8:	cmp	r0, #0
   145ec:	bne	145c0 <getopt_long_only@@Base+0x170>
   145f0:	mov	r0, r8
   145f4:	bl	1100c <strlen@plt>
   145f8:	cmp	r0, r4
   145fc:	beq	1479c <getopt_long_only@@Base+0x34c>
   14600:	cmn	sl, #1
   14604:	beq	14648 <getopt_long_only@@Base+0x1f8>
   14608:	ldr	r1, [sp, #32]
   1460c:	add	r0, r1, sl, lsl #4
   14610:	add	r1, r1, r9, lsl #4
   14614:	ldr	r2, [r0, #4]
   14618:	ldr	r3, [r1, #4]
   1461c:	cmp	r3, r2
   14620:	bne	145b8 <getopt_long_only@@Base+0x168>
   14624:	ldr	r2, [r0, #8]
   14628:	ldr	r3, [r1, #8]
   1462c:	cmp	r3, r2
   14630:	bne	145b8 <getopt_long_only@@Base+0x168>
   14634:	ldr	r0, [r0, #12]
   14638:	ldr	r1, [r1, #12]
   1463c:	cmp	r1, r0
   14640:	bne	145b8 <getopt_long_only@@Base+0x168>
   14644:	b	145c0 <getopt_long_only@@Base+0x170>
   14648:	mov	sl, r9
   1464c:	b	145c0 <getopt_long_only@@Base+0x170>
   14650:	ldr	r0, [sp, #32]
   14654:	ldr	r7, [sp, #36]	; 0x24
   14658:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1465c:	mvn	sl, #0
   14660:	mov	r4, #0
   14664:	add	r5, r0, #16
   14668:	mov	r0, #0
   1466c:	str	r0, [sp, #28]
   14670:	b	14698 <getopt_long_only@@Base+0x248>
   14674:	cmn	sl, #1
   14678:	ldr	r0, [sp, #28]
   1467c:	movne	r0, #1
   14680:	moveq	sl, r4
   14684:	str	r0, [sp, #28]
   14688:	ldr	r8, [r5, r4, lsl #4]
   1468c:	add	r4, r4, #1
   14690:	cmp	r8, #0
   14694:	beq	146c8 <getopt_long_only@@Base+0x278>
   14698:	mov	r0, r7
   1469c:	mov	r1, r8
   146a0:	mov	r2, r6
   146a4:	bl	110e4 <strncmp@plt>
   146a8:	cmp	r0, #0
   146ac:	bne	14688 <getopt_long_only@@Base+0x238>
   146b0:	mov	r0, r8
   146b4:	bl	1100c <strlen@plt>
   146b8:	cmp	r0, r6
   146bc:	bne	14674 <getopt_long_only@@Base+0x224>
   146c0:	mov	sl, r4
   146c4:	b	147a4 <getopt_long_only@@Base+0x354>
   146c8:	ldr	r0, [sp, #28]
   146cc:	cmp	r0, #0
   146d0:	beq	14714 <getopt_long_only@@Base+0x2c4>
   146d4:	ldr	r0, [pc, #648]	; 14964 <getopt_long_only@@Base+0x514>
   146d8:	ldr	r0, [pc, r0]
   146dc:	ldr	r3, [sp, #36]	; 0x24
   146e0:	ldr	r1, [sp, #4]
   146e4:	ldr	r0, [r0]
   146e8:	cmp	r0, #0
   146ec:	beq	14780 <getopt_long_only@@Base+0x330>
   146f0:	ldr	r0, [sp]
   146f4:	ldrb	r0, [r0]
   146f8:	cmp	r0, #58	; 0x3a
   146fc:	beq	14780 <getopt_long_only@@Base+0x330>
   14700:	ldr	r0, [pc, #608]	; 14968 <getopt_long_only@@Base+0x518>
   14704:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14708:	add	r0, pc, r0
   1470c:	bl	11024 <warnx@plt>
   14710:	b	14780 <getopt_long_only@@Base+0x330>
   14714:	ldr	r7, [sp, #36]	; 0x24
   14718:	ldm	sp, {r6, r9}
   1471c:	cmn	sl, #1
   14720:	bne	147a8 <getopt_long_only@@Base+0x358>
   14724:	ldr	r0, [fp, #8]
   14728:	cmp	r0, #0
   1472c:	beq	1474c <getopt_long_only@@Base+0x2fc>
   14730:	ldr	r0, [pc, #552]	; 14960 <getopt_long_only@@Base+0x510>
   14734:	ldr	r0, [pc, r0]
   14738:	ldr	r1, [sp, #24]
   1473c:	str	r1, [r0]
   14740:	mvn	r0, #0
   14744:	sub	sp, fp, #28
   14748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1474c:	ldr	r0, [pc, #584]	; 1499c <getopt_long_only@@Base+0x54c>
   14750:	ldr	r0, [pc, r0]
   14754:	ldr	r0, [r0]
   14758:	cmp	r0, #0
   1475c:	beq	14780 <getopt_long_only@@Base+0x330>
   14760:	ldrb	r0, [r6]
   14764:	cmp	r0, #58	; 0x3a
   14768:	beq	14780 <getopt_long_only@@Base+0x330>
   1476c:	ldr	r0, [pc, #556]	; 149a0 <getopt_long_only@@Base+0x550>
   14770:	mov	r1, r9
   14774:	mov	r2, r7
   14778:	add	r0, pc, r0
   1477c:	bl	11024 <warnx@plt>
   14780:	ldr	r0, [pc, #484]	; 1496c <getopt_long_only@@Base+0x51c>
   14784:	mov	r1, #0
   14788:	ldr	r0, [pc, r0]
   1478c:	str	r1, [r0]
   14790:	mov	r0, #63	; 0x3f
   14794:	sub	sp, fp, #28
   14798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1479c:	ldr	r7, [sp, #36]	; 0x24
   147a0:	mov	sl, r9
   147a4:	ldm	sp, {r6, r9}
   147a8:	ldr	r0, [sp, #32]
   147ac:	ldr	r3, [sp, #20]
   147b0:	add	r5, r0, sl, lsl #4
   147b4:	cmp	r3, #0
   147b8:	mov	r0, r5
   147bc:	ldr	r1, [r0, #4]!
   147c0:	beq	1482c <getopt_long_only@@Base+0x3dc>
   147c4:	cmp	r1, #0
   147c8:	bne	1482c <getopt_long_only@@Base+0x3dc>
   147cc:	ldr	r0, [pc, #412]	; 14970 <getopt_long_only@@Base+0x520>
   147d0:	ldr	r0, [pc, r0]
   147d4:	ldr	r0, [r0]
   147d8:	cmp	r0, #0
   147dc:	beq	14804 <getopt_long_only@@Base+0x3b4>
   147e0:	ldrb	r0, [r6]
   147e4:	cmp	r0, #58	; 0x3a
   147e8:	beq	14804 <getopt_long_only@@Base+0x3b4>
   147ec:	ldr	r0, [pc, #384]	; 14974 <getopt_long_only@@Base+0x524>
   147f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147f4:	mov	r1, r9
   147f8:	mov	r3, r7
   147fc:	add	r0, pc, r0
   14800:	bl	11024 <warnx@plt>
   14804:	ldr	r1, [r5, #8]
   14808:	mov	r0, #0
   1480c:	cmp	r1, #0
   14810:	ldreq	r0, [r5, #12]
   14814:	ldr	r1, [pc, #348]	; 14978 <getopt_long_only@@Base+0x528>
   14818:	ldr	r1, [pc, r1]
   1481c:	str	r0, [r1]
   14820:	mov	r0, #63	; 0x3f
   14824:	sub	sp, fp, #28
   14828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1482c:	sub	r2, r1, #1
   14830:	cmp	r2, #1
   14834:	bhi	14928 <getopt_long_only@@Base+0x4d8>
   14838:	cmp	r3, #0
   1483c:	beq	14858 <getopt_long_only@@Base+0x408>
   14840:	ldr	r0, [pc, #308]	; 1497c <getopt_long_only@@Base+0x52c>
   14844:	ldr	r0, [pc, r0]
   14848:	str	r3, [r0]
   1484c:	cmp	r1, #1
   14850:	beq	14898 <getopt_long_only@@Base+0x448>
   14854:	b	14928 <getopt_long_only@@Base+0x4d8>
   14858:	cmp	r1, #1
   1485c:	bne	14928 <getopt_long_only@@Base+0x4d8>
   14860:	ldr	r1, [sp, #24]
   14864:	ldr	r2, [pc, #276]	; 14980 <getopt_long_only@@Base+0x530>
   14868:	ldr	r2, [pc, r2]
   1486c:	add	r1, r1, #2
   14870:	str	r1, [r2]
   14874:	ldr	r1, [sp, #12]
   14878:	ldr	r2, [sp, #8]
   1487c:	ldr	r1, [r1, r2, lsl #2]
   14880:	ldr	r2, [pc, #252]	; 14984 <getopt_long_only@@Base+0x534>
   14884:	ldr	r2, [pc, r2]
   14888:	str	r1, [r2]
   1488c:	ldr	r1, [r0]
   14890:	cmp	r1, #1
   14894:	bne	14928 <getopt_long_only@@Base+0x4d8>
   14898:	ldr	r0, [pc, #232]	; 14988 <getopt_long_only@@Base+0x538>
   1489c:	ldr	r0, [pc, r0]
   148a0:	ldr	r0, [r0]
   148a4:	cmp	r0, #0
   148a8:	bne	14928 <getopt_long_only@@Base+0x4d8>
   148ac:	ldr	r0, [pc, #216]	; 1498c <getopt_long_only@@Base+0x53c>
   148b0:	ldr	r0, [pc, r0]
   148b4:	ldr	r0, [r0]
   148b8:	cmp	r0, #0
   148bc:	beq	148e0 <getopt_long_only@@Base+0x490>
   148c0:	ldrb	r0, [r6]
   148c4:	cmp	r0, #58	; 0x3a
   148c8:	beq	148e0 <getopt_long_only@@Base+0x490>
   148cc:	ldr	r0, [pc, #188]	; 14990 <getopt_long_only@@Base+0x540>
   148d0:	mov	r1, r9
   148d4:	mov	r2, r7
   148d8:	add	r0, pc, r0
   148dc:	bl	11024 <warnx@plt>
   148e0:	ldr	r1, [r5, #8]
   148e4:	mov	r0, #0
   148e8:	cmp	r1, #0
   148ec:	ldreq	r0, [r5, #12]
   148f0:	ldr	r1, [pc, #156]	; 14994 <getopt_long_only@@Base+0x544>
   148f4:	ldr	r1, [pc, r1]
   148f8:	str	r0, [r1]
   148fc:	ldr	r0, [pc, #148]	; 14998 <getopt_long_only@@Base+0x548>
   14900:	ldr	r0, [pc, r0]
   14904:	mov	r1, r0
   14908:	ldr	r0, [r0]
   1490c:	sub	r0, r0, #1
   14910:	str	r0, [r1]
   14914:	ldrb	r0, [r6]
   14918:	cmp	r0, #58	; 0x3a
   1491c:	movwne	r0, #63	; 0x3f
   14920:	sub	sp, fp, #28
   14924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14928:	ldr	r0, [sp, #16]
   1492c:	cmp	r0, #0
   14930:	strne	sl, [r0]
   14934:	ldr	r1, [r5, #8]
   14938:	ldr	r0, [r5, #12]
   1493c:	cmp	r1, #0
   14940:	strne	r0, [r1]
   14944:	movne	r0, #0
   14948:	sub	sp, fp, #28
   1494c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14950:	andeq	r1, r1, ip, lsl sp
   14954:			; <UNDEFINED> instruction: 0x000007b5
   14958:	andeq	r1, r1, r4, lsr sl
   1495c:	andeq	r1, r1, r0, lsl ip
   14960:	andeq	r1, r1, r8, lsr #19
   14964:	strdeq	r1, [r1], -ip
   14968:	andeq	r0, r0, r7, ror #22
   1496c:	andeq	r1, r1, r8, asr r9
   14970:	andeq	r1, r1, r4, lsl #18
   14974:	muleq	r0, r0, sl
   14978:	andeq	r1, r1, r8, asr #17
   1497c:	andeq	r1, r1, r0, lsr #17
   14980:	andeq	r1, r1, r4, ror r8
   14984:	andeq	r1, r1, r0, ror #16
   14988:	andeq	r1, r1, r8, asr #16
   1498c:	andeq	r1, r1, r4, lsr #16
   14990:	ldrdeq	r0, [r0], -lr
   14994:	andeq	r1, r1, ip, ror #15
   14998:	ldrdeq	r1, [r1], -ip
   1499c:	andeq	r1, r1, r4, lsl #19
   149a0:	andeq	r0, r0, r1, ror #22
   149a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149a8:	mov	r7, r0
   149ac:	ldr	r6, [pc, #72]	; 149fc <getopt_long_only@@Base+0x5ac>
   149b0:	ldr	r5, [pc, #72]	; 14a00 <getopt_long_only@@Base+0x5b0>
   149b4:	add	r6, pc, r6
   149b8:	add	r5, pc, r5
   149bc:	sub	r6, r6, r5
   149c0:	mov	r8, r1
   149c4:	mov	r9, r2
   149c8:	bl	10e90 <Mat_VarGetNumberOfFields@plt-0x20>
   149cc:	asrs	r6, r6, #2
   149d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   149d4:	mov	r4, #0
   149d8:	add	r4, r4, #1
   149dc:	ldr	r3, [r5], #4
   149e0:	mov	r2, r9
   149e4:	mov	r1, r8
   149e8:	mov	r0, r7
   149ec:	blx	r3
   149f0:	cmp	r6, r4
   149f4:	bne	149d8 <getopt_long_only@@Base+0x588>
   149f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149fc:	andeq	r1, r1, ip, lsr #10
   14a00:	andeq	r1, r1, r4, lsr #10
   14a04:	bx	lr

Disassembly of section .fini:

00014a08 <.fini>:
   14a08:	push	{r3, lr}
   14a0c:	pop	{r3, pc}
