
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r6, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #90112	; 0x16000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #90112	; 0x16000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #90112	; 0x16000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #90112	; 0x16000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #90112	; 0x16000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #90112	; 0x16000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #90112	; 0x16000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #90112	; 0x16000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #90112	; 0x16000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #90112	; 0x16000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #90112	; 0x16000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #90112	; 0x16000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r8, r1, r4, lsl #25
   1303c:	strdeq	r3, [r1], -r8
   13040:	andeq	r8, r1, r4, lsr #24
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r5, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r9, r2, r8, asr #32
   1308c:	andeq	r9, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r9, r2, r8, asr #32
   130c4:	andeq	r9, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r9, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	1334c <table_init@@Base>
   13118:	movw	r1, #35988	; 0x8c94
   1311c:	mov	r0, r5
   13120:	mov	r2, #0
   13124:	mov	r7, #0
   13128:	movt	r1, #1
   1312c:	bl	13ed8 <table_add_column@@Base>
   13130:	movw	r1, #35990	; 0x8c96
   13134:	mov	sl, r0
   13138:	mov	r0, r5
   1313c:	mov	r2, #16
   13140:	movt	r1, #1
   13144:	bl	13ed8 <table_add_column@@Base>
   13148:	vldr	s18, [pc, #424]	; 132f8 <main@@Base+0x200>
   1314c:	movw	r9, #52429	; 0xcccd
   13150:	mov	r8, r0
   13154:	vmov.f32	s20, #80	; 0x3e800000  0.250
   13158:	mov	r4, #0
   1315c:	movt	r9, #52428	; 0xcccc
   13160:	vmov.f32	s16, s18
   13164:	mov	r0, r5
   13168:	bl	170f4 <table_add_row@@Base>
   1316c:	uxtb	r0, r4
   13170:	cmp	r4, #0
   13174:	umull	r1, r2, r0, r9
   13178:	lsr	r1, r2, #3
   1317c:	mov	r2, sl
   13180:	add	r1, r1, r1, lsl #2
   13184:	sub	r0, r0, r1, lsl #1
   13188:	mov	r1, r4
   1318c:	clz	r0, r0
   13190:	movwne	r1, #1
   13194:	lsr	r0, r0, #5
   13198:	and	r6, r1, r0
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	add	r7, r7, r6
   131a8:	mov	r3, r7
   131ac:	bl	1764c <table_set_int@@Base>
   131b0:	cmp	r6, #0
   131b4:	mov	r0, r5
   131b8:	mov	r1, r4
   131bc:	mov	r2, r8
   131c0:	vseleq.f32	s0, s16, s18
   131c4:	tst	r4, #1
   131c8:	vadd.f32	s2, s0, s20
   131cc:	vseleq.f32	s2, s2, s0
   131d0:	cmp	r4, #0
   131d4:	vseleq.f32	s16, s0, s2
   131d8:	vmov.f32	s0, s16
   131dc:	bl	17e6c <table_set_float@@Base>
   131e0:	add	r4, r4, #1
   131e4:	cmp	r4, #100	; 0x64
   131e8:	bne	13164 <main@@Base+0x6c>
   131ec:	add	r4, sp, #8
   131f0:	mov	r1, sl
   131f4:	mov	r2, #4
   131f8:	mov	r3, #0
   131fc:	mov	r9, #0
   13200:	mov	r0, r4
   13204:	bl	16320 <table_sorted_find_int@@Base>
   13208:	mov	r7, r0
   1320c:	mov	r0, r4
   13210:	mov	r1, sl
   13214:	mov	r2, #4
   13218:	mov	r3, #1
   1321c:	bl	16320 <table_sorted_find_int@@Base>
   13220:	mov	r6, r0
   13224:	cmp	r7, #40	; 0x28
   13228:	beq	13240 <main@@Base+0x148>
   1322c:	movw	r0, #35992	; 0x8c98
   13230:	mov	r1, r7
   13234:	movt	r0, #1
   13238:	bl	12f84 <printf@plt>
   1323c:	mvn	r9, #0
   13240:	cmp	r6, #49	; 0x31
   13244:	beq	1325c <main@@Base+0x164>
   13248:	movw	r0, #36048	; 0x8cd0
   1324c:	mov	r1, r6
   13250:	movt	r0, #1
   13254:	bl	12f84 <printf@plt>
   13258:	mvn	r9, #0
   1325c:	add	r4, sp, #8
   13260:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13264:	mov	r1, r8
   13268:	mov	r2, #0
   1326c:	mov	r3, r7
   13270:	str	r6, [sp]
   13274:	mov	r0, r4
   13278:	vmov.f32	s0, s16
   1327c:	bl	16d14 <table_sorted_subset_find_float@@Base>
   13280:	mov	r5, r0
   13284:	mov	r0, r4
   13288:	mov	r1, r8
   1328c:	vmov.f32	s0, s16
   13290:	mov	r2, #1
   13294:	mov	r3, r7
   13298:	str	r6, [sp]
   1329c:	bl	16d14 <table_sorted_subset_find_float@@Base>
   132a0:	mov	r4, r0
   132a4:	cmp	r5, #42	; 0x2a
   132a8:	beq	132c0 <main@@Base+0x1c8>
   132ac:	movw	r0, #36103	; 0x8d07
   132b0:	mov	r1, r5
   132b4:	movt	r0, #1
   132b8:	bl	12f84 <printf@plt>
   132bc:	mvn	r9, #0
   132c0:	cmp	r4, #43	; 0x2b
   132c4:	beq	132dc <main@@Base+0x1e4>
   132c8:	movw	r0, #36165	; 0x8d45
   132cc:	mov	r1, r4
   132d0:	movt	r0, #1
   132d4:	bl	12f84 <printf@plt>
   132d8:	mvn	r9, #0
   132dc:	add	r0, sp, #8
   132e0:	bl	133a8 <table_destroy@@Base>
   132e4:	mov	r0, r9
   132e8:	sub	sp, fp, #56	; 0x38
   132ec:	vpop	{d8-d10}
   132f0:	add	sp, sp, #4
   132f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f8:	andeq	r0, r0, r0

000132fc <table_new@@Base>:
   132fc:	push	{fp, lr}
   13300:	mov	fp, sp
   13304:	mov	r0, #56	; 0x38
   13308:	bl	12fb4 <malloc@plt>
   1330c:	mov	r1, #0
   13310:	mov	r2, #10
   13314:	mov	r3, #20
   13318:	vmov.i32	q8, #0	; 0x00000000
   1331c:	str	r1, [r0]
   13320:	stmib	r0, {r1, r2}
   13324:	str	r1, [r0, #12]
   13328:	str	r1, [r0, #16]
   1332c:	str	r1, [r0, #20]
   13330:	str	r3, [r0, #24]
   13334:	str	r1, [r0, #28]
   13338:	str	r2, [r0, #48]	; 0x30
   1333c:	str	r1, [r0, #52]	; 0x34
   13340:	add	r1, r0, #32
   13344:	vst1.32	{d16-d17}, [r1]
   13348:	pop	{fp, pc}

0001334c <table_init@@Base>:
   1334c:	mov	r1, #0
   13350:	mov	r2, #10
   13354:	mov	r3, #20
   13358:	vmov.i32	q8, #0	; 0x00000000
   1335c:	str	r1, [r0]
   13360:	stmib	r0, {r1, r2}
   13364:	str	r1, [r0, #12]
   13368:	str	r1, [r0, #16]
   1336c:	str	r1, [r0, #20]
   13370:	str	r3, [r0, #24]
   13374:	str	r1, [r0, #28]
   13378:	str	r2, [r0, #48]	; 0x30
   1337c:	str	r1, [r0, #52]	; 0x34
   13380:	add	r0, r0, #32
   13384:	vst1.32	{d16-d17}, [r0]
   13388:	bx	lr

0001338c <table_delete@@Base>:
   1338c:	push	{r4, sl, fp, lr}
   13390:	add	fp, sp, #8
   13394:	mov	r4, r0
   13398:	bl	133a8 <table_destroy@@Base>
   1339c:	mov	r0, r4
   133a0:	pop	{r4, sl, fp, lr}
   133a4:	b	12f90 <free@plt>

000133a8 <table_destroy@@Base>:
   133a8:	cmp	r0, #0
   133ac:	bxeq	lr
   133b0:	push	{r4, r5, r6, sl, fp, lr}
   133b4:	add	fp, sp, #16
   133b8:	mvn	r1, #0
   133bc:	mvn	r2, #0
   133c0:	mov	r3, #64	; 0x40
   133c4:	mov	r4, r0
   133c8:	bl	13d50 <table_notify@@Base>
   133cc:	mov	r0, r4
   133d0:	bl	170ec <table_get_row_length@@Base>
   133d4:	cmp	r0, #1
   133d8:	blt	133fc <table_destroy@@Base+0x54>
   133dc:	mov	r5, r0
   133e0:	mov	r6, #0
   133e4:	mov	r0, r4
   133e8:	mov	r1, r6
   133ec:	bl	17094 <table_row_destroy@@Base>
   133f0:	add	r6, r6, #1
   133f4:	cmp	r5, r6
   133f8:	bne	133e4 <table_destroy@@Base+0x3c>
   133fc:	ldr	r0, [r4, #16]
   13400:	cmp	r0, #0
   13404:	beq	1340c <table_destroy@@Base+0x64>
   13408:	bl	12f90 <free@plt>
   1340c:	mov	r0, r4
   13410:	bl	13e44 <table_get_column_length@@Base>
   13414:	cmp	r0, #1
   13418:	blt	1343c <table_destroy@@Base+0x94>
   1341c:	mov	r5, r0
   13420:	mov	r6, #0
   13424:	mov	r0, r4
   13428:	mov	r1, r6
   1342c:	bl	13e2c <table_column_destroy@@Base>
   13430:	add	r6, r6, #1
   13434:	cmp	r5, r6
   13438:	bne	13424 <table_destroy@@Base+0x7c>
   1343c:	ldr	r0, [r4]
   13440:	cmp	r0, #0
   13444:	beq	1344c <table_destroy@@Base+0xa4>
   13448:	bl	12f90 <free@plt>
   1344c:	ldr	r0, [r4, #36]	; 0x24
   13450:	cmp	r0, #0
   13454:	beq	1345c <table_destroy@@Base+0xb4>
   13458:	bl	12f90 <free@plt>
   1345c:	ldr	r0, [r4, #40]	; 0x28
   13460:	cmp	r0, #0
   13464:	beq	1346c <table_destroy@@Base+0xc4>
   13468:	bl	12f90 <free@plt>
   1346c:	ldr	r0, [r4, #44]	; 0x2c
   13470:	cmp	r0, #0
   13474:	pop	{r4, r5, r6, sl, fp, lr}
   13478:	beq	13480 <table_destroy@@Base+0xd8>
   1347c:	b	12f90 <free@plt>
   13480:	bx	lr

00013484 <table_dupe@@Base>:
   13484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13488:	add	fp, sp, #28
   1348c:	sub	sp, sp, #12
   13490:	mov	r4, r0
   13494:	bl	170ec <table_get_row_length@@Base>
   13498:	mov	r8, r0
   1349c:	mov	r0, r4
   134a0:	bl	13e44 <table_get_column_length@@Base>
   134a4:	mov	r6, r0
   134a8:	mov	r0, #56	; 0x38
   134ac:	bl	12fb4 <malloc@plt>
   134b0:	mov	sl, r0
   134b4:	mov	r5, #0
   134b8:	mov	r0, #10
   134bc:	mov	r1, #20
   134c0:	cmp	r6, #1
   134c4:	vmov.i32	q8, #0	; 0x00000000
   134c8:	str	r5, [sl]
   134cc:	str	r5, [sl, #4]
   134d0:	str	r0, [sl, #8]
   134d4:	str	r5, [sl, #12]
   134d8:	str	r5, [sl, #16]
   134dc:	str	r5, [sl, #20]
   134e0:	str	r1, [sl, #24]
   134e4:	str	r5, [sl, #28]
   134e8:	str	r0, [sl, #48]	; 0x30
   134ec:	add	r0, sl, #32
   134f0:	str	r5, [sl, #52]	; 0x34
   134f4:	vst1.32	{d16-d17}, [r0]
   134f8:	blt	13534 <table_dupe@@Base+0xb0>
   134fc:	mov	r0, r4
   13500:	mov	r1, r5
   13504:	bl	13eb4 <table_get_column_name@@Base>
   13508:	mov	r7, r0
   1350c:	mov	r0, r4
   13510:	mov	r1, r5
   13514:	bl	13ec4 <table_get_column_data_type@@Base>
   13518:	mov	r2, r0
   1351c:	mov	r0, sl
   13520:	mov	r1, r7
   13524:	bl	13ed8 <table_add_column@@Base>
   13528:	add	r5, r5, #1
   1352c:	cmp	r6, r5
   13530:	bne	134fc <table_dupe@@Base+0x78>
   13534:	cmp	r8, #1
   13538:	blt	13ab4 <table_dupe@@Base+0x630>
   1353c:	mov	r5, #0
   13540:	add	r9, sp, #8
   13544:	mov	r0, sl
   13548:	bl	170f4 <table_add_row@@Base>
   1354c:	cmp	r6, #1
   13550:	blt	13aa8 <table_dupe@@Base+0x624>
   13554:	mov	r7, #0
   13558:	mov	r0, r4
   1355c:	mov	r1, r7
   13560:	bl	13ec4 <table_get_column_data_type@@Base>
   13564:	cmp	r0, #23
   13568:	bhi	135f8 <table_dupe@@Base+0x174>
   1356c:	add	r1, pc, #0
   13570:	ldr	pc, [r1, r0, lsl #2]
   13574:	ldrdeq	r3, [r1], -r4
   13578:	andeq	r3, r1, r8, lsl #12
   1357c:	andeq	r3, r1, ip, lsr r6
   13580:	andeq	r3, r1, r0, ror r6
   13584:	andeq	r3, r1, r4, lsr #13
   13588:	ldrdeq	r3, [r1], -r8
   1358c:	andeq	r3, r1, ip, lsl #14
   13590:	andeq	r3, r1, r0, asr #14
   13594:	andeq	r3, r1, r4, ror r7
   13598:	andeq	r3, r1, r8, lsr #15
   1359c:	ldrdeq	r3, [r1], -ip
   135a0:	andeq	r3, r1, r0, lsl r8
   135a4:	andeq	r3, r1, r4, asr #16
   135a8:	andeq	r3, r1, r8, ror r8
   135ac:	andeq	r3, r1, ip, lsr #17
   135b0:	andeq	r3, r1, r0, ror #17
   135b4:	andeq	r3, r1, r4, lsl r9
   135b8:	andeq	r3, r1, r4, asr #18
   135bc:	andeq	r3, r1, r4, ror r9
   135c0:	andeq	r3, r1, r4, lsr #19
   135c4:	ldrdeq	r3, [r1], -r8
   135c8:	andeq	r3, r1, ip, lsl #20
   135cc:	andeq	r3, r1, r0, asr #20
   135d0:	andeq	r3, r1, r4, ror sl
   135d4:	mov	r0, r4
   135d8:	mov	r1, r5
   135dc:	mov	r2, r7
   135e0:	bl	16e44 <table_get_int@@Base>
   135e4:	mov	r3, r0
   135e8:	mov	r0, sl
   135ec:	mov	r1, r5
   135f0:	mov	r2, r7
   135f4:	bl	1764c <table_set_int@@Base>
   135f8:	add	r7, r7, #1
   135fc:	cmp	r6, r7
   13600:	bne	13558 <table_dupe@@Base+0xd4>
   13604:	b	13aa8 <table_dupe@@Base+0x624>
   13608:	mov	r0, r4
   1360c:	mov	r1, r5
   13610:	mov	r2, r7
   13614:	bl	16e5c <table_get_uint@@Base>
   13618:	mov	r3, r0
   1361c:	mov	r0, sl
   13620:	mov	r1, r5
   13624:	mov	r2, r7
   13628:	bl	176cc <table_set_uint@@Base>
   1362c:	add	r7, r7, #1
   13630:	cmp	r6, r7
   13634:	bne	13558 <table_dupe@@Base+0xd4>
   13638:	b	13aa8 <table_dupe@@Base+0x624>
   1363c:	mov	r0, r4
   13640:	mov	r1, r5
   13644:	mov	r2, r7
   13648:	bl	16e74 <table_get_int8@@Base>
   1364c:	mov	r3, r0
   13650:	mov	r0, sl
   13654:	mov	r1, r5
   13658:	mov	r2, r7
   1365c:	bl	1774c <table_set_int8@@Base>
   13660:	add	r7, r7, #1
   13664:	cmp	r6, r7
   13668:	bne	13558 <table_dupe@@Base+0xd4>
   1366c:	b	13aa8 <table_dupe@@Base+0x624>
   13670:	mov	r0, r4
   13674:	mov	r1, r5
   13678:	mov	r2, r7
   1367c:	bl	16e8c <table_get_uint8@@Base>
   13680:	mov	r3, r0
   13684:	mov	r0, sl
   13688:	mov	r1, r5
   1368c:	mov	r2, r7
   13690:	bl	177cc <table_set_uint8@@Base>
   13694:	add	r7, r7, #1
   13698:	cmp	r6, r7
   1369c:	bne	13558 <table_dupe@@Base+0xd4>
   136a0:	b	13aa8 <table_dupe@@Base+0x624>
   136a4:	mov	r0, r4
   136a8:	mov	r1, r5
   136ac:	mov	r2, r7
   136b0:	bl	16ea4 <table_get_int16@@Base>
   136b4:	mov	r3, r0
   136b8:	mov	r0, sl
   136bc:	mov	r1, r5
   136c0:	mov	r2, r7
   136c4:	bl	1784c <table_set_int16@@Base>
   136c8:	add	r7, r7, #1
   136cc:	cmp	r6, r7
   136d0:	bne	13558 <table_dupe@@Base+0xd4>
   136d4:	b	13aa8 <table_dupe@@Base+0x624>
   136d8:	mov	r0, r4
   136dc:	mov	r1, r5
   136e0:	mov	r2, r7
   136e4:	bl	16ebc <table_get_uint16@@Base>
   136e8:	mov	r3, r0
   136ec:	mov	r0, sl
   136f0:	mov	r1, r5
   136f4:	mov	r2, r7
   136f8:	bl	178cc <table_set_uint16@@Base>
   136fc:	add	r7, r7, #1
   13700:	cmp	r6, r7
   13704:	bne	13558 <table_dupe@@Base+0xd4>
   13708:	b	13aa8 <table_dupe@@Base+0x624>
   1370c:	mov	r0, r4
   13710:	mov	r1, r5
   13714:	mov	r2, r7
   13718:	bl	16ed4 <table_get_int32@@Base>
   1371c:	mov	r3, r0
   13720:	mov	r0, sl
   13724:	mov	r1, r5
   13728:	mov	r2, r7
   1372c:	bl	1794c <table_set_int32@@Base>
   13730:	add	r7, r7, #1
   13734:	cmp	r6, r7
   13738:	bne	13558 <table_dupe@@Base+0xd4>
   1373c:	b	13aa8 <table_dupe@@Base+0x624>
   13740:	mov	r0, r4
   13744:	mov	r1, r5
   13748:	mov	r2, r7
   1374c:	bl	16eec <table_get_uint32@@Base>
   13750:	mov	r3, r0
   13754:	mov	r0, sl
   13758:	mov	r1, r5
   1375c:	mov	r2, r7
   13760:	bl	179cc <table_set_uint32@@Base>
   13764:	add	r7, r7, #1
   13768:	cmp	r6, r7
   1376c:	bne	13558 <table_dupe@@Base+0xd4>
   13770:	b	13aa8 <table_dupe@@Base+0x624>
   13774:	mov	r0, r4
   13778:	mov	r1, r5
   1377c:	mov	r2, r7
   13780:	bl	16f04 <table_get_int64@@Base>
   13784:	stm	sp, {r0, r1}
   13788:	mov	r0, sl
   1378c:	mov	r1, r5
   13790:	mov	r2, r7
   13794:	bl	17a4c <table_set_int64@@Base>
   13798:	add	r7, r7, #1
   1379c:	cmp	r6, r7
   137a0:	bne	13558 <table_dupe@@Base+0xd4>
   137a4:	b	13aa8 <table_dupe@@Base+0x624>
   137a8:	mov	r0, r4
   137ac:	mov	r1, r5
   137b0:	mov	r2, r7
   137b4:	bl	16f1c <table_get_uint64@@Base>
   137b8:	stm	sp, {r0, r1}
   137bc:	mov	r0, sl
   137c0:	mov	r1, r5
   137c4:	mov	r2, r7
   137c8:	bl	17ad4 <table_set_uint64@@Base>
   137cc:	add	r7, r7, #1
   137d0:	cmp	r6, r7
   137d4:	bne	13558 <table_dupe@@Base+0xd4>
   137d8:	b	13aa8 <table_dupe@@Base+0x624>
   137dc:	mov	r0, r4
   137e0:	mov	r1, r5
   137e4:	mov	r2, r7
   137e8:	bl	16f34 <table_get_short@@Base>
   137ec:	mov	r3, r0
   137f0:	mov	r0, sl
   137f4:	mov	r1, r5
   137f8:	mov	r2, r7
   137fc:	bl	17b5c <table_set_short@@Base>
   13800:	add	r7, r7, #1
   13804:	cmp	r6, r7
   13808:	bne	13558 <table_dupe@@Base+0xd4>
   1380c:	b	13aa8 <table_dupe@@Base+0x624>
   13810:	mov	r0, r4
   13814:	mov	r1, r5
   13818:	mov	r2, r7
   1381c:	bl	16f4c <table_get_ushort@@Base>
   13820:	mov	r3, r0
   13824:	mov	r0, sl
   13828:	mov	r1, r5
   1382c:	mov	r2, r7
   13830:	bl	17bdc <table_set_ushort@@Base>
   13834:	add	r7, r7, #1
   13838:	cmp	r6, r7
   1383c:	bne	13558 <table_dupe@@Base+0xd4>
   13840:	b	13aa8 <table_dupe@@Base+0x624>
   13844:	mov	r0, r4
   13848:	mov	r1, r5
   1384c:	mov	r2, r7
   13850:	bl	16f64 <table_get_long@@Base>
   13854:	mov	r3, r0
   13858:	mov	r0, sl
   1385c:	mov	r1, r5
   13860:	mov	r2, r7
   13864:	bl	17c5c <table_set_long@@Base>
   13868:	add	r7, r7, #1
   1386c:	cmp	r6, r7
   13870:	bne	13558 <table_dupe@@Base+0xd4>
   13874:	b	13aa8 <table_dupe@@Base+0x624>
   13878:	mov	r0, r4
   1387c:	mov	r1, r5
   13880:	mov	r2, r7
   13884:	bl	16f7c <table_get_ulong@@Base>
   13888:	mov	r3, r0
   1388c:	mov	r0, sl
   13890:	mov	r1, r5
   13894:	mov	r2, r7
   13898:	bl	17cdc <table_set_ulong@@Base>
   1389c:	add	r7, r7, #1
   138a0:	cmp	r6, r7
   138a4:	bne	13558 <table_dupe@@Base+0xd4>
   138a8:	b	13aa8 <table_dupe@@Base+0x624>
   138ac:	mov	r0, r4
   138b0:	mov	r1, r5
   138b4:	mov	r2, r7
   138b8:	bl	16f94 <table_get_llong@@Base>
   138bc:	stm	sp, {r0, r1}
   138c0:	mov	r0, sl
   138c4:	mov	r1, r5
   138c8:	mov	r2, r7
   138cc:	bl	17d5c <table_set_llong@@Base>
   138d0:	add	r7, r7, #1
   138d4:	cmp	r6, r7
   138d8:	bne	13558 <table_dupe@@Base+0xd4>
   138dc:	b	13aa8 <table_dupe@@Base+0x624>
   138e0:	mov	r0, r4
   138e4:	mov	r1, r5
   138e8:	mov	r2, r7
   138ec:	bl	16fac <table_get_ullong@@Base>
   138f0:	stm	sp, {r0, r1}
   138f4:	mov	r0, sl
   138f8:	mov	r1, r5
   138fc:	mov	r2, r7
   13900:	bl	17de4 <table_set_ullong@@Base>
   13904:	add	r7, r7, #1
   13908:	cmp	r6, r7
   1390c:	bne	13558 <table_dupe@@Base+0xd4>
   13910:	b	13aa8 <table_dupe@@Base+0x624>
   13914:	mov	r0, r4
   13918:	mov	r1, r5
   1391c:	mov	r2, r7
   13920:	bl	16fc4 <table_get_float@@Base>
   13924:	mov	r0, sl
   13928:	mov	r1, r5
   1392c:	mov	r2, r7
   13930:	bl	17e6c <table_set_float@@Base>
   13934:	add	r7, r7, #1
   13938:	cmp	r6, r7
   1393c:	bne	13558 <table_dupe@@Base+0xd4>
   13940:	b	13aa8 <table_dupe@@Base+0x624>
   13944:	mov	r0, r4
   13948:	mov	r1, r5
   1394c:	mov	r2, r7
   13950:	bl	16fdc <table_get_double@@Base>
   13954:	mov	r0, sl
   13958:	mov	r1, r5
   1395c:	mov	r2, r7
   13960:	bl	17ef8 <table_set_double@@Base>
   13964:	add	r7, r7, #1
   13968:	cmp	r6, r7
   1396c:	bne	13558 <table_dupe@@Base+0xd4>
   13970:	b	13aa8 <table_dupe@@Base+0x624>
   13974:	mov	r0, r4
   13978:	mov	r1, r5
   1397c:	mov	r2, r7
   13980:	bl	16ff4 <table_get_ldouble@@Base>
   13984:	mov	r0, sl
   13988:	mov	r1, r5
   1398c:	mov	r2, r7
   13990:	bl	17f80 <table_set_ldouble@@Base>
   13994:	add	r7, r7, #1
   13998:	cmp	r6, r7
   1399c:	bne	13558 <table_dupe@@Base+0xd4>
   139a0:	b	13aa8 <table_dupe@@Base+0x624>
   139a4:	mov	r0, r4
   139a8:	mov	r1, r5
   139ac:	mov	r2, r7
   139b0:	bl	1700c <table_get_char@@Base>
   139b4:	mov	r3, r0
   139b8:	mov	r0, sl
   139bc:	mov	r1, r5
   139c0:	mov	r2, r7
   139c4:	bl	18090 <table_set_char@@Base>
   139c8:	add	r7, r7, #1
   139cc:	cmp	r6, r7
   139d0:	bne	13558 <table_dupe@@Base+0xd4>
   139d4:	b	13aa8 <table_dupe@@Base+0x624>
   139d8:	mov	r0, r4
   139dc:	mov	r1, r5
   139e0:	mov	r2, r7
   139e4:	bl	17024 <table_get_uchar@@Base>
   139e8:	mov	r3, r0
   139ec:	mov	r0, sl
   139f0:	mov	r1, r5
   139f4:	mov	r2, r7
   139f8:	bl	18110 <table_set_uchar@@Base>
   139fc:	add	r7, r7, #1
   13a00:	cmp	r6, r7
   13a04:	bne	13558 <table_dupe@@Base+0xd4>
   13a08:	b	13aa8 <table_dupe@@Base+0x624>
   13a0c:	mov	r0, r4
   13a10:	mov	r1, r5
   13a14:	mov	r2, r7
   13a18:	bl	1703c <table_get_string@@Base>
   13a1c:	mov	r3, r0
   13a20:	mov	r0, sl
   13a24:	mov	r1, r5
   13a28:	mov	r2, r7
   13a2c:	bl	18008 <table_set_string@@Base>
   13a30:	add	r7, r7, #1
   13a34:	cmp	r6, r7
   13a38:	bne	13558 <table_dupe@@Base+0xd4>
   13a3c:	b	13aa8 <table_dupe@@Base+0x624>
   13a40:	mov	r0, r4
   13a44:	mov	r1, r5
   13a48:	mov	r2, r7
   13a4c:	bl	16e2c <table_get_bool@@Base>
   13a50:	mov	r3, r0
   13a54:	mov	r0, sl
   13a58:	mov	r1, r5
   13a5c:	mov	r2, r7
   13a60:	bl	175cc <table_set_bool@@Base>
   13a64:	add	r7, r7, #1
   13a68:	cmp	r6, r7
   13a6c:	bne	13558 <table_dupe@@Base+0xd4>
   13a70:	b	13aa8 <table_dupe@@Base+0x624>
   13a74:	mov	r0, r4
   13a78:	mov	r1, r5
   13a7c:	mov	r2, r7
   13a80:	bl	17050 <table_get_ptr@@Base>
   13a84:	str	r0, [sp, #8]
   13a88:	mov	r0, sl
   13a8c:	mov	r1, r5
   13a90:	mov	r2, r7
   13a94:	mov	r3, r9
   13a98:	bl	18190 <table_set_ptr@@Base>
   13a9c:	add	r7, r7, #1
   13aa0:	cmp	r6, r7
   13aa4:	bne	13558 <table_dupe@@Base+0xd4>
   13aa8:	add	r5, r5, #1
   13aac:	cmp	r5, r8
   13ab0:	bne	13544 <table_dupe@@Base+0xc0>
   13ab4:	mov	r0, sl
   13ab8:	sub	sp, fp, #28
   13abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013ac0 <table_get_major_version@@Base>:
   13ac0:	mov	r0, #0
   13ac4:	bx	lr

00013ac8 <table_get_minor_version@@Base>:
   13ac8:	mov	r0, #0
   13acc:	bx	lr

00013ad0 <table_get_patch_version@@Base>:
   13ad0:	mov	r0, #0
   13ad4:	bx	lr

00013ad8 <table_get_version@@Base>:
   13ad8:	movw	r0, #35989	; 0x8c95
   13adc:	movt	r0, #1
   13ae0:	bx	lr

00013ae4 <table_get_callback_length@@Base>:
   13ae4:	ldr	r0, [r0, #32]
   13ae8:	bx	lr

00013aec <table_register_callback@@Base>:
   13aec:	push	{r4, r5, r6, r7, fp, lr}
   13af0:	add	fp, sp, #16
   13af4:	mov	r5, r0
   13af8:	ldr	r0, [r0, #32]
   13afc:	mov	r4, r3
   13b00:	mov	r6, r2
   13b04:	mov	r7, r1
   13b08:	cmp	r0, #1
   13b0c:	blt	13b40 <table_register_callback@@Base+0x54>
   13b10:	ldr	r2, [r5, #36]	; 0x24
   13b14:	mov	r1, #0
   13b18:	ldr	r3, [r2, r1, lsl #2]
   13b1c:	cmp	r3, r7
   13b20:	bne	13b34 <table_register_callback@@Base+0x48>
   13b24:	ldr	r3, [r5, #40]	; 0x28
   13b28:	ldr	r3, [r3, r1, lsl #2]
   13b2c:	cmp	r3, r6
   13b30:	beq	13bc4 <table_register_callback@@Base+0xd8>
   13b34:	add	r1, r1, #1
   13b38:	cmp	r1, r0
   13b3c:	blt	13b18 <table_register_callback@@Base+0x2c>
   13b40:	ldr	r1, [r5, #48]	; 0x30
   13b44:	udiv	r2, r0, r1
   13b48:	mls	r2, r2, r1, r0
   13b4c:	cmp	r2, #0
   13b50:	bne	13b9c <table_register_callback@@Base+0xb0>
   13b54:	ldr	r2, [r5, #52]	; 0x34
   13b58:	ldr	r0, [r5, #36]	; 0x24
   13b5c:	add	r1, r2, r1
   13b60:	str	r1, [r5, #52]	; 0x34
   13b64:	lsl	r1, r1, #2
   13b68:	bl	12f9c <realloc@plt>
   13b6c:	str	r0, [r5, #36]	; 0x24
   13b70:	ldr	r1, [r5, #52]	; 0x34
   13b74:	ldr	r0, [r5, #40]	; 0x28
   13b78:	lsl	r1, r1, #2
   13b7c:	bl	12f9c <realloc@plt>
   13b80:	str	r0, [r5, #40]	; 0x28
   13b84:	ldr	r1, [r5, #52]	; 0x34
   13b88:	ldr	r0, [r5, #44]	; 0x2c
   13b8c:	lsl	r1, r1, #2
   13b90:	bl	12f9c <realloc@plt>
   13b94:	str	r0, [r5, #44]	; 0x2c
   13b98:	ldr	r0, [r5, #32]
   13b9c:	ldr	r1, [r5, #36]	; 0x24
   13ba0:	str	r7, [r1, r0, lsl #2]
   13ba4:	ldr	r1, [r5, #40]	; 0x28
   13ba8:	str	r6, [r1, r0, lsl #2]
   13bac:	ldr	r1, [r5, #44]	; 0x2c
   13bb0:	str	r4, [r1, r0, lsl #2]
   13bb4:	ldr	r0, [r5, #32]
   13bb8:	add	r0, r0, #1
   13bbc:	str	r0, [r5, #32]
   13bc0:	pop	{r4, r5, r6, r7, fp, pc}
   13bc4:	cmp	r1, #0
   13bc8:	ldrne	r0, [r5, #44]	; 0x2c
   13bcc:	ldrne	r2, [r0, r1, lsl #2]
   13bd0:	orrne	r2, r2, r4
   13bd4:	strne	r2, [r0, r1, lsl #2]
   13bd8:	popne	{r4, r5, r6, r7, fp, pc}
   13bdc:	b	13b40 <table_register_callback@@Base+0x54>

00013be0 <table_unregister_callback@@Base>:
   13be0:	push	{r4, r5, r6, sl, fp, lr}
   13be4:	add	fp, sp, #16
   13be8:	ldr	r4, [r0, #32]
   13bec:	cmp	r4, #1
   13bf0:	blt	13c28 <table_unregister_callback@@Base+0x48>
   13bf4:	ldr	r3, [r0, #36]	; 0x24
   13bf8:	mov	r6, r0
   13bfc:	mov	r0, #0
   13c00:	ldr	r5, [r3, r0, lsl #2]
   13c04:	cmp	r5, r1
   13c08:	bne	13c1c <table_unregister_callback@@Base+0x3c>
   13c0c:	ldr	r5, [r6, #40]	; 0x28
   13c10:	ldr	r5, [r5, r0, lsl #2]
   13c14:	cmp	r5, r2
   13c18:	beq	13c2c <table_unregister_callback@@Base+0x4c>
   13c1c:	add	r0, r0, #1
   13c20:	cmp	r0, r4
   13c24:	blt	13c00 <table_unregister_callback@@Base+0x20>
   13c28:	pop	{r4, r5, r6, sl, fp, pc}
   13c2c:	sub	r1, r4, #1
   13c30:	cmp	r0, r1
   13c34:	bge	13cc4 <table_unregister_callback@@Base+0xe4>
   13c38:	add	r1, r3, r0, lsl #2
   13c3c:	ldr	r1, [r1, #4]
   13c40:	str	r1, [r3, r0, lsl #2]
   13c44:	ldr	r1, [r6, #40]	; 0x28
   13c48:	add	r2, r1, r0, lsl #2
   13c4c:	ldr	r2, [r2, #4]
   13c50:	str	r2, [r1, r0, lsl #2]
   13c54:	ldr	r1, [r6, #44]	; 0x2c
   13c58:	add	r2, r1, r0, lsl #2
   13c5c:	ldr	r2, [r2, #4]
   13c60:	str	r2, [r1, r0, lsl #2]
   13c64:	add	r2, r0, #1
   13c68:	ldr	r1, [r6, #32]
   13c6c:	sub	r1, r1, #1
   13c70:	cmp	r2, r1
   13c74:	bge	13cc4 <table_unregister_callback@@Base+0xe4>
   13c78:	ldr	r1, [r6, #36]	; 0x24
   13c7c:	add	r1, r1, r0, lsl #2
   13c80:	ldr	r2, [r1, #8]
   13c84:	str	r2, [r1, #4]
   13c88:	ldr	r1, [r6, #40]	; 0x28
   13c8c:	add	r1, r1, r0, lsl #2
   13c90:	ldr	r2, [r1, #8]
   13c94:	str	r2, [r1, #4]
   13c98:	ldr	r1, [r6, #44]	; 0x2c
   13c9c:	add	r1, r1, r0, lsl #2
   13ca0:	ldr	r2, [r1, #8]
   13ca4:	str	r2, [r1, #4]
   13ca8:	add	r2, r0, #1
   13cac:	add	r0, r0, #2
   13cb0:	ldr	r1, [r6, #32]
   13cb4:	sub	r1, r1, #1
   13cb8:	cmp	r0, r1
   13cbc:	mov	r0, r2
   13cc0:	blt	13c78 <table_unregister_callback@@Base+0x98>
   13cc4:	str	r1, [r6, #32]
   13cc8:	ldr	r2, [r6, #48]	; 0x30
   13ccc:	udiv	r0, r1, r2
   13cd0:	mls	r0, r0, r2, r1
   13cd4:	cmp	r0, #0
   13cd8:	popne	{r4, r5, r6, sl, fp, pc}
   13cdc:	ldr	r1, [r6, #52]	; 0x34
   13ce0:	ldr	r0, [r6, #36]	; 0x24
   13ce4:	subs	r1, r1, r2
   13ce8:	str	r1, [r6, #52]	; 0x34
   13cec:	beq	13d28 <table_unregister_callback@@Base+0x148>
   13cf0:	lsl	r1, r1, #2
   13cf4:	bl	12f9c <realloc@plt>
   13cf8:	str	r0, [r6, #36]	; 0x24
   13cfc:	ldr	r1, [r6, #52]	; 0x34
   13d00:	ldr	r0, [r6, #40]	; 0x28
   13d04:	lsl	r1, r1, #2
   13d08:	bl	12f9c <realloc@plt>
   13d0c:	str	r0, [r6, #40]	; 0x28
   13d10:	ldr	r1, [r6, #52]	; 0x34
   13d14:	ldr	r0, [r6, #44]	; 0x2c
   13d18:	lsl	r1, r1, #2
   13d1c:	bl	12f9c <realloc@plt>
   13d20:	str	r0, [r6, #44]	; 0x2c
   13d24:	pop	{r4, r5, r6, sl, fp, pc}
   13d28:	bl	12f90 <free@plt>
   13d2c:	ldr	r0, [r6, #40]	; 0x28
   13d30:	bl	12f90 <free@plt>
   13d34:	ldr	r0, [r6, #44]	; 0x2c
   13d38:	bl	12f90 <free@plt>
   13d3c:	mov	r0, #0
   13d40:	str	r0, [r6, #36]	; 0x24
   13d44:	str	r0, [r6, #40]	; 0x28
   13d48:	str	r0, [r6, #44]	; 0x2c
   13d4c:	pop	{r4, r5, r6, sl, fp, pc}

00013d50 <table_notify@@Base>:
   13d50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d54:	add	fp, sp, #24
   13d58:	sub	sp, sp, #8
   13d5c:	mov	r7, r0
   13d60:	ldr	r0, [r0, #32]
   13d64:	cmp	r0, #1
   13d68:	blt	13dc4 <table_notify@@Base+0x74>
   13d6c:	mov	r4, r3
   13d70:	mov	r8, r2
   13d74:	mov	r9, r1
   13d78:	mov	r5, #0
   13d7c:	ldr	r1, [r7, #44]	; 0x2c
   13d80:	ldr	r1, [r1, r5, lsl #2]
   13d84:	tst	r1, r4
   13d88:	beq	13db8 <table_notify@@Base+0x68>
   13d8c:	ldr	r0, [r7, #36]	; 0x24
   13d90:	ldr	r1, [r7, #40]	; 0x28
   13d94:	mov	r2, r8
   13d98:	mov	r3, r4
   13d9c:	ldr	r6, [r0, r5, lsl #2]
   13da0:	ldr	r0, [r1, r5, lsl #2]
   13da4:	mov	r1, r9
   13da8:	str	r0, [sp]
   13dac:	mov	r0, r7
   13db0:	blx	r6
   13db4:	ldr	r0, [r7, #32]
   13db8:	add	r5, r5, #1
   13dbc:	cmp	r5, r0
   13dc0:	blt	13d7c <table_notify@@Base+0x2c>
   13dc4:	sub	sp, fp, #24
   13dc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013dcc <table_column_init@@Base>:
   13dcc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13dd0:	add	fp, sp, #24
   13dd4:	ldr	r7, [r0]
   13dd8:	mov	r0, r2
   13ddc:	mov	r4, r3
   13de0:	mov	r5, r2
   13de4:	mov	r6, r1
   13de8:	bl	12fd8 <strlen@plt>
   13dec:	add	r0, r0, #1
   13df0:	bl	12fb4 <malloc@plt>
   13df4:	ldr	r8, [fp, #8]
   13df8:	add	r6, r6, r6, lsl #1
   13dfc:	cmp	r0, #0
   13e00:	str	r0, [r7, r6, lsl #2]
   13e04:	beq	13e10 <table_column_init@@Base+0x44>
   13e08:	mov	r1, r5
   13e0c:	bl	12fa8 <strcpy@plt>
   13e10:	add	r0, r7, r6, lsl #2
   13e14:	stmib	r0, {r4, r8}
   13e18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013e1c <table_get_col_ptr@@Base>:
   13e1c:	ldr	r0, [r0]
   13e20:	add	r1, r1, r1, lsl #1
   13e24:	add	r0, r0, r1, lsl #2
   13e28:	bx	lr

00013e2c <table_column_destroy@@Base>:
   13e2c:	ldr	r0, [r0]
   13e30:	add	r1, r1, r1, lsl #1
   13e34:	ldr	r0, [r0, r1, lsl #2]
   13e38:	cmp	r0, #0
   13e3c:	bxeq	lr
   13e40:	b	12f90 <free@plt>

00013e44 <table_get_column_length@@Base>:
   13e44:	ldr	r0, [r0, #4]
   13e48:	bx	lr

00013e4c <table_get_column@@Base>:
   13e4c:	push	{r4, r5, r6, r7, fp, lr}
   13e50:	add	fp, sp, #16
   13e54:	ldr	r6, [r0, #4]
   13e58:	cmp	r6, #1
   13e5c:	blt	13ea0 <table_get_column@@Base+0x54>
   13e60:	ldr	r7, [r0]
   13e64:	mov	r5, r1
   13e68:	mov	r4, #0
   13e6c:	ldr	r0, [r7]
   13e70:	mov	r1, r5
   13e74:	bl	12f78 <strcmp@plt>
   13e78:	cmp	r0, #0
   13e7c:	beq	13e90 <table_get_column@@Base+0x44>
   13e80:	add	r4, r4, #1
   13e84:	add	r7, r7, #12
   13e88:	cmp	r4, r6
   13e8c:	blt	13e6c <table_get_column@@Base+0x20>
   13e90:	cmp	r4, r6
   13e94:	mvneq	r4, #0
   13e98:	mov	r0, r4
   13e9c:	pop	{r4, r5, r6, r7, fp, pc}
   13ea0:	mov	r4, #0
   13ea4:	cmp	r4, r6
   13ea8:	mvneq	r4, #0
   13eac:	mov	r0, r4
   13eb0:	pop	{r4, r5, r6, r7, fp, pc}

00013eb4 <table_get_column_name@@Base>:
   13eb4:	ldr	r0, [r0]
   13eb8:	add	r1, r1, r1, lsl #1
   13ebc:	ldr	r0, [r0, r1, lsl #2]
   13ec0:	bx	lr

00013ec4 <table_get_column_data_type@@Base>:
   13ec4:	ldr	r0, [r0]
   13ec8:	add	r1, r1, r1, lsl #1
   13ecc:	add	r0, r0, r1, lsl #2
   13ed0:	ldr	r0, [r0, #4]
   13ed4:	bx	lr

00013ed8 <table_add_column@@Base>:
   13ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13edc:	add	fp, sp, #28
   13ee0:	sub	sp, sp, #4
   13ee4:	mov	r4, r0
   13ee8:	mov	r8, r1
   13eec:	ldr	r0, [r0, #4]
   13ef0:	mov	r9, r2
   13ef4:	ldr	r1, [r4, #8]
   13ef8:	udiv	r2, r0, r1
   13efc:	mls	r0, r2, r1, r0
   13f00:	cmp	r0, #0
   13f04:	bne	13f70 <table_add_column@@Base+0x98>
   13f08:	ldr	r2, [r4, #12]
   13f0c:	ldr	r0, [r4]
   13f10:	add	r1, r2, r1
   13f14:	str	r1, [r4, #12]
   13f18:	add	r1, r1, r1, lsl #1
   13f1c:	lsl	r1, r1, #2
   13f20:	bl	12f9c <realloc@plt>
   13f24:	str	r0, [r4]
   13f28:	mov	r0, r4
   13f2c:	bl	170ec <table_get_row_length@@Base>
   13f30:	cmp	r0, #1
   13f34:	blt	13f70 <table_add_column@@Base+0x98>
   13f38:	mov	r6, r0
   13f3c:	mov	r5, #0
   13f40:	mov	r0, r4
   13f44:	mov	r1, r5
   13f48:	bl	17088 <table_get_row_ptr@@Base>
   13f4c:	ldr	r1, [r4, #12]
   13f50:	mov	r7, r0
   13f54:	ldr	r0, [r0]
   13f58:	lsl	r1, r1, #2
   13f5c:	bl	12f9c <realloc@plt>
   13f60:	add	r5, r5, #1
   13f64:	str	r0, [r7]
   13f68:	cmp	r6, r5
   13f6c:	bne	13f40 <table_add_column@@Base+0x68>
   13f70:	mov	r0, r4
   13f74:	bl	170ec <table_get_row_length@@Base>
   13f78:	ldr	r6, [r4, #4]
   13f7c:	mov	r7, r0
   13f80:	mov	r0, r9
   13f84:	bl	148b0 <table_get_default_compare_function_for_data_type@@Base>
   13f88:	ldr	r5, [r4]
   13f8c:	mov	sl, r0
   13f90:	mov	r0, r8
   13f94:	bl	12fd8 <strlen@plt>
   13f98:	add	r0, r0, #1
   13f9c:	bl	12fb4 <malloc@plt>
   13fa0:	mov	r1, r8
   13fa4:	add	r8, r6, r6, lsl #1
   13fa8:	cmp	r0, #0
   13fac:	str	r0, [r5, r8, lsl #2]
   13fb0:	beq	13fb8 <table_add_column@@Base+0xe0>
   13fb4:	bl	12fa8 <strcpy@plt>
   13fb8:	add	r0, r5, r8, lsl #2
   13fbc:	cmp	r7, #1
   13fc0:	stmib	r0, {r9, sl}
   13fc4:	blt	13fe8 <table_add_column@@Base+0x110>
   13fc8:	mov	r5, #0
   13fcc:	mov	r0, r4
   13fd0:	mov	r1, r5
   13fd4:	mov	r2, r6
   13fd8:	bl	181ec <table_cell_init@@Base>
   13fdc:	add	r5, r5, #1
   13fe0:	cmp	r7, r5
   13fe4:	bne	13fcc <table_add_column@@Base+0xf4>
   13fe8:	ldr	r2, [r4, #4]
   13fec:	mov	r0, r4
   13ff0:	mvn	r1, #0
   13ff4:	mov	r3, #8
   13ff8:	bl	13d50 <table_notify@@Base>
   13ffc:	ldr	r0, [r4, #4]
   14000:	add	r1, r0, #1
   14004:	str	r1, [r4, #4]
   14008:	sub	sp, fp, #28
   1400c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014010 <table_remove_column@@Base>:
   14010:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14014:	add	fp, sp, #24
   14018:	mov	r5, r0
   1401c:	ldr	r0, [r0]
   14020:	add	r6, r1, r1, lsl #1
   14024:	mov	r9, r1
   14028:	ldr	r0, [r0, r6, lsl #2]
   1402c:	cmp	r0, #0
   14030:	beq	14038 <table_remove_column@@Base+0x28>
   14034:	bl	12f90 <free@plt>
   14038:	ldr	r0, [r5, #4]
   1403c:	sub	r4, r0, #1
   14040:	cmp	r4, r9
   14044:	ble	14074 <table_remove_column@@Base+0x64>
   14048:	sub	r0, r4, r9
   1404c:	lsl	r1, r6, #2
   14050:	ldr	r2, [r5]
   14054:	subs	r0, r0, #1
   14058:	add	r2, r2, r1
   1405c:	add	r1, r1, #12
   14060:	vldr	d16, [r2, #12]
   14064:	ldr	r3, [r2, #20]
   14068:	str	r3, [r2, #8]
   1406c:	vstr	d16, [r2]
   14070:	bne	14050 <table_remove_column@@Base+0x40>
   14074:	mov	r0, r5
   14078:	bl	170ec <table_get_row_length@@Base>
   1407c:	cmp	r0, #1
   14080:	blt	14108 <table_remove_column@@Base+0xf8>
   14084:	mov	r6, r0
   14088:	mov	r7, #0
   1408c:	cmp	r4, r9
   14090:	ble	140e0 <table_remove_column@@Base+0xd0>
   14094:	mov	r0, r5
   14098:	mov	r1, r7
   1409c:	mov	r2, r9
   140a0:	bl	18228 <table_cell_destroy@@Base>
   140a4:	mov	r0, r5
   140a8:	mov	r1, r7
   140ac:	bl	17088 <table_get_row_ptr@@Base>
   140b0:	mov	r1, r9
   140b4:	ldr	r2, [r0]
   140b8:	add	r3, r2, r1, lsl #2
   140bc:	ldr	r3, [r3, #4]
   140c0:	str	r3, [r2, r1, lsl #2]
   140c4:	add	r1, r1, #1
   140c8:	cmp	r4, r1
   140cc:	bne	140b4 <table_remove_column@@Base+0xa4>
   140d0:	add	r7, r7, #1
   140d4:	cmp	r7, r6
   140d8:	bne	14094 <table_remove_column@@Base+0x84>
   140dc:	b	14108 <table_remove_column@@Base+0xf8>
   140e0:	mov	r0, r5
   140e4:	mov	r1, r7
   140e8:	mov	r2, r9
   140ec:	bl	18228 <table_cell_destroy@@Base>
   140f0:	mov	r0, r5
   140f4:	mov	r1, r7
   140f8:	bl	17088 <table_get_row_ptr@@Base>
   140fc:	add	r7, r7, #1
   14100:	cmp	r6, r7
   14104:	bne	140e0 <table_remove_column@@Base+0xd0>
   14108:	ldmib	r5, {r0, r1}
   1410c:	sub	r0, r0, #1
   14110:	udiv	r2, r0, r1
   14114:	str	r0, [r5, #4]
   14118:	mls	r0, r2, r1, r0
   1411c:	cmp	r0, #0
   14120:	bne	1418c <table_remove_column@@Base+0x17c>
   14124:	ldr	r2, [r5, #12]
   14128:	ldr	r0, [r5]
   1412c:	sub	r1, r2, r1
   14130:	str	r1, [r5, #12]
   14134:	add	r1, r1, r1, lsl #1
   14138:	lsl	r1, r1, #2
   1413c:	bl	12f9c <realloc@plt>
   14140:	str	r0, [r5]
   14144:	mov	r0, r5
   14148:	bl	170ec <table_get_row_length@@Base>
   1414c:	cmp	r0, #1
   14150:	blt	1418c <table_remove_column@@Base+0x17c>
   14154:	mov	r8, r0
   14158:	mov	r7, #0
   1415c:	mov	r0, r5
   14160:	mov	r1, r7
   14164:	bl	17088 <table_get_row_ptr@@Base>
   14168:	ldr	r1, [r5, #12]
   1416c:	mov	r6, r0
   14170:	ldr	r0, [r0]
   14174:	lsl	r1, r1, #2
   14178:	bl	12f9c <realloc@plt>
   1417c:	add	r7, r7, #1
   14180:	str	r0, [r6]
   14184:	cmp	r8, r7
   14188:	bne	1415c <table_remove_column@@Base+0x14c>
   1418c:	mov	r0, r5
   14190:	mvn	r1, #0
   14194:	mov	r2, r9
   14198:	mov	r3, #16
   1419c:	bl	13d50 <table_notify@@Base>
   141a0:	mov	r0, #0
   141a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141a8 <table_get_column_compare_function@@Base>:
   141a8:	ldr	r0, [r0]
   141ac:	add	r1, r1, r1, lsl #1
   141b0:	add	r0, r0, r1, lsl #2
   141b4:	ldr	r0, [r0, #8]
   141b8:	bx	lr

000141bc <table_set_column_compare_function@@Base>:
   141bc:	ldr	r0, [r0]
   141c0:	add	r1, r1, r1, lsl #1
   141c4:	add	r0, r0, r1, lsl #2
   141c8:	str	r2, [r0, #8]
   141cc:	bx	lr

000141d0 <table_compare_bool@@Base>:
   141d0:	cmp	r0, #0
   141d4:	beq	14208 <table_compare_bool@@Base+0x38>
   141d8:	cmp	r1, #0
   141dc:	moveq	r1, #1
   141e0:	moveq	r0, r1
   141e4:	bxeq	lr
   141e8:	ldrb	r2, [r1]
   141ec:	ldrb	r0, [r0]
   141f0:	mov	r1, #0
   141f4:	cmp	r0, r2
   141f8:	mvncc	r1, #0
   141fc:	movwhi	r1, #1
   14200:	mov	r0, r1
   14204:	bx	lr
   14208:	cmp	r1, #0
   1420c:	mvnne	r1, #0
   14210:	mov	r0, r1
   14214:	bx	lr

00014218 <table_compare_int@@Base>:
   14218:	cmp	r0, #0
   1421c:	beq	14250 <table_compare_int@@Base+0x38>
   14220:	cmp	r1, #0
   14224:	moveq	r1, #1
   14228:	moveq	r0, r1
   1422c:	bxeq	lr
   14230:	ldr	r2, [r1]
   14234:	ldr	r0, [r0]
   14238:	mov	r1, #0
   1423c:	cmp	r0, r2
   14240:	mvnlt	r1, #0
   14244:	movwgt	r1, #1
   14248:	mov	r0, r1
   1424c:	bx	lr
   14250:	cmp	r1, #0
   14254:	mvnne	r1, #0
   14258:	mov	r0, r1
   1425c:	bx	lr

00014260 <table_compare_uint@@Base>:
   14260:	cmp	r0, #0
   14264:	beq	14298 <table_compare_uint@@Base+0x38>
   14268:	cmp	r1, #0
   1426c:	moveq	r1, #1
   14270:	moveq	r0, r1
   14274:	bxeq	lr
   14278:	ldr	r2, [r1]
   1427c:	ldr	r0, [r0]
   14280:	mov	r1, #0
   14284:	cmp	r0, r2
   14288:	mvncc	r1, #0
   1428c:	movwhi	r1, #1
   14290:	mov	r0, r1
   14294:	bx	lr
   14298:	cmp	r1, #0
   1429c:	mvnne	r1, #0
   142a0:	mov	r0, r1
   142a4:	bx	lr

000142a8 <table_compare_int8@@Base>:
   142a8:	cmp	r0, #0
   142ac:	beq	142e0 <table_compare_int8@@Base+0x38>
   142b0:	cmp	r1, #0
   142b4:	moveq	r1, #1
   142b8:	moveq	r0, r1
   142bc:	bxeq	lr
   142c0:	ldrsb	r2, [r1]
   142c4:	ldrsb	r0, [r0]
   142c8:	mov	r1, #0
   142cc:	cmp	r0, r2
   142d0:	mvnlt	r1, #0
   142d4:	movwgt	r1, #1
   142d8:	mov	r0, r1
   142dc:	bx	lr
   142e0:	cmp	r1, #0
   142e4:	mvnne	r1, #0
   142e8:	mov	r0, r1
   142ec:	bx	lr

000142f0 <table_compare_uint8@@Base>:
   142f0:	cmp	r0, #0
   142f4:	beq	14328 <table_compare_uint8@@Base+0x38>
   142f8:	cmp	r1, #0
   142fc:	moveq	r1, #1
   14300:	moveq	r0, r1
   14304:	bxeq	lr
   14308:	ldrb	r2, [r1]
   1430c:	ldrb	r0, [r0]
   14310:	mov	r1, #0
   14314:	cmp	r0, r2
   14318:	mvncc	r1, #0
   1431c:	movwhi	r1, #1
   14320:	mov	r0, r1
   14324:	bx	lr
   14328:	cmp	r1, #0
   1432c:	mvnne	r1, #0
   14330:	mov	r0, r1
   14334:	bx	lr

00014338 <table_compare_int16@@Base>:
   14338:	cmp	r0, #0
   1433c:	beq	14370 <table_compare_int16@@Base+0x38>
   14340:	cmp	r1, #0
   14344:	moveq	r1, #1
   14348:	moveq	r0, r1
   1434c:	bxeq	lr
   14350:	ldrsh	r2, [r1]
   14354:	ldrsh	r0, [r0]
   14358:	mov	r1, #0
   1435c:	cmp	r0, r2
   14360:	mvnlt	r1, #0
   14364:	movwgt	r1, #1
   14368:	mov	r0, r1
   1436c:	bx	lr
   14370:	cmp	r1, #0
   14374:	mvnne	r1, #0
   14378:	mov	r0, r1
   1437c:	bx	lr

00014380 <table_compare_uint16@@Base>:
   14380:	cmp	r0, #0
   14384:	beq	143b8 <table_compare_uint16@@Base+0x38>
   14388:	cmp	r1, #0
   1438c:	moveq	r1, #1
   14390:	moveq	r0, r1
   14394:	bxeq	lr
   14398:	ldrh	r2, [r1]
   1439c:	ldrh	r0, [r0]
   143a0:	mov	r1, #0
   143a4:	cmp	r0, r2
   143a8:	mvncc	r1, #0
   143ac:	movwhi	r1, #1
   143b0:	mov	r0, r1
   143b4:	bx	lr
   143b8:	cmp	r1, #0
   143bc:	mvnne	r1, #0
   143c0:	mov	r0, r1
   143c4:	bx	lr

000143c8 <table_compare_int32@@Base>:
   143c8:	cmp	r0, #0
   143cc:	beq	14400 <table_compare_int32@@Base+0x38>
   143d0:	cmp	r1, #0
   143d4:	moveq	r1, #1
   143d8:	moveq	r0, r1
   143dc:	bxeq	lr
   143e0:	ldr	r2, [r1]
   143e4:	ldr	r0, [r0]
   143e8:	mov	r1, #0
   143ec:	cmp	r0, r2
   143f0:	mvnlt	r1, #0
   143f4:	movwgt	r1, #1
   143f8:	mov	r0, r1
   143fc:	bx	lr
   14400:	cmp	r1, #0
   14404:	mvnne	r1, #0
   14408:	mov	r0, r1
   1440c:	bx	lr

00014410 <table_compare_uint32@@Base>:
   14410:	cmp	r0, #0
   14414:	beq	14448 <table_compare_uint32@@Base+0x38>
   14418:	cmp	r1, #0
   1441c:	moveq	r1, #1
   14420:	moveq	r0, r1
   14424:	bxeq	lr
   14428:	ldr	r2, [r1]
   1442c:	ldr	r0, [r0]
   14430:	mov	r1, #0
   14434:	cmp	r0, r2
   14438:	mvncc	r1, #0
   1443c:	movwhi	r1, #1
   14440:	mov	r0, r1
   14444:	bx	lr
   14448:	cmp	r1, #0
   1444c:	mvnne	r1, #0
   14450:	mov	r0, r1
   14454:	bx	lr

00014458 <table_compare_int64@@Base>:
   14458:	cmp	r0, #0
   1445c:	beq	144b0 <table_compare_int64@@Base+0x58>
   14460:	cmp	r1, #0
   14464:	moveq	r1, #1
   14468:	moveq	r0, r1
   1446c:	bxeq	lr
   14470:	push	{r5, r7, fp, lr}
   14474:	add	fp, sp, #8
   14478:	ldm	r1, {r2, r7}
   1447c:	ldm	r0, {r0, r5}
   14480:	mov	r1, #0
   14484:	subs	r3, r0, r2
   14488:	sbcs	r3, r5, r7
   1448c:	movwlt	r1, #1
   14490:	cmp	r1, #0
   14494:	mvnne	r1, #0
   14498:	subs	r0, r2, r0
   1449c:	sbcs	r0, r7, r5
   144a0:	movwlt	r1, #1
   144a4:	pop	{r5, r7, fp, lr}
   144a8:	mov	r0, r1
   144ac:	bx	lr
   144b0:	cmp	r1, #0
   144b4:	mvnne	r1, #0
   144b8:	mov	r0, r1
   144bc:	bx	lr

000144c0 <table_compare_uint64@@Base>:
   144c0:	cmp	r0, #0
   144c4:	beq	14518 <table_compare_uint64@@Base+0x58>
   144c8:	cmp	r1, #0
   144cc:	moveq	r1, #1
   144d0:	moveq	r0, r1
   144d4:	bxeq	lr
   144d8:	push	{r5, r7, fp, lr}
   144dc:	add	fp, sp, #8
   144e0:	ldm	r1, {r2, r7}
   144e4:	ldm	r0, {r0, r5}
   144e8:	mov	r1, #0
   144ec:	subs	r3, r0, r2
   144f0:	sbcs	r3, r5, r7
   144f4:	movwcc	r1, #1
   144f8:	cmp	r1, #0
   144fc:	mvnne	r1, #0
   14500:	subs	r0, r2, r0
   14504:	sbcs	r0, r7, r5
   14508:	movwcc	r1, #1
   1450c:	pop	{r5, r7, fp, lr}
   14510:	mov	r0, r1
   14514:	bx	lr
   14518:	cmp	r1, #0
   1451c:	mvnne	r1, #0
   14520:	mov	r0, r1
   14524:	bx	lr

00014528 <table_compare_short@@Base>:
   14528:	cmp	r0, #0
   1452c:	beq	14560 <table_compare_short@@Base+0x38>
   14530:	cmp	r1, #0
   14534:	moveq	r1, #1
   14538:	moveq	r0, r1
   1453c:	bxeq	lr
   14540:	ldrsh	r2, [r1]
   14544:	ldrsh	r0, [r0]
   14548:	mov	r1, #0
   1454c:	cmp	r0, r2
   14550:	mvnlt	r1, #0
   14554:	movwgt	r1, #1
   14558:	mov	r0, r1
   1455c:	bx	lr
   14560:	cmp	r1, #0
   14564:	mvnne	r1, #0
   14568:	mov	r0, r1
   1456c:	bx	lr

00014570 <table_compare_ushort@@Base>:
   14570:	cmp	r0, #0
   14574:	beq	145a8 <table_compare_ushort@@Base+0x38>
   14578:	cmp	r1, #0
   1457c:	moveq	r1, #1
   14580:	moveq	r0, r1
   14584:	bxeq	lr
   14588:	ldrh	r2, [r1]
   1458c:	ldrh	r0, [r0]
   14590:	mov	r1, #0
   14594:	cmp	r0, r2
   14598:	mvncc	r1, #0
   1459c:	movwhi	r1, #1
   145a0:	mov	r0, r1
   145a4:	bx	lr
   145a8:	cmp	r1, #0
   145ac:	mvnne	r1, #0
   145b0:	mov	r0, r1
   145b4:	bx	lr

000145b8 <table_compare_long@@Base>:
   145b8:	cmp	r0, #0
   145bc:	beq	145f0 <table_compare_long@@Base+0x38>
   145c0:	cmp	r1, #0
   145c4:	moveq	r1, #1
   145c8:	moveq	r0, r1
   145cc:	bxeq	lr
   145d0:	ldr	r2, [r1]
   145d4:	ldr	r0, [r0]
   145d8:	mov	r1, #0
   145dc:	cmp	r0, r2
   145e0:	mvnlt	r1, #0
   145e4:	movwgt	r1, #1
   145e8:	mov	r0, r1
   145ec:	bx	lr
   145f0:	cmp	r1, #0
   145f4:	mvnne	r1, #0
   145f8:	mov	r0, r1
   145fc:	bx	lr

00014600 <table_compare_ulong@@Base>:
   14600:	cmp	r0, #0
   14604:	beq	14638 <table_compare_ulong@@Base+0x38>
   14608:	cmp	r1, #0
   1460c:	moveq	r1, #1
   14610:	moveq	r0, r1
   14614:	bxeq	lr
   14618:	ldr	r2, [r1]
   1461c:	ldr	r0, [r0]
   14620:	mov	r1, #0
   14624:	cmp	r0, r2
   14628:	mvncc	r1, #0
   1462c:	movwhi	r1, #1
   14630:	mov	r0, r1
   14634:	bx	lr
   14638:	cmp	r1, #0
   1463c:	mvnne	r1, #0
   14640:	mov	r0, r1
   14644:	bx	lr

00014648 <table_compare_llong@@Base>:
   14648:	cmp	r0, #0
   1464c:	beq	146a0 <table_compare_llong@@Base+0x58>
   14650:	cmp	r1, #0
   14654:	moveq	r1, #1
   14658:	moveq	r0, r1
   1465c:	bxeq	lr
   14660:	push	{r5, r7, fp, lr}
   14664:	add	fp, sp, #8
   14668:	ldm	r1, {r2, r7}
   1466c:	ldm	r0, {r0, r5}
   14670:	mov	r1, #0
   14674:	subs	r3, r0, r2
   14678:	sbcs	r3, r5, r7
   1467c:	movwlt	r1, #1
   14680:	cmp	r1, #0
   14684:	mvnne	r1, #0
   14688:	subs	r0, r2, r0
   1468c:	sbcs	r0, r7, r5
   14690:	movwlt	r1, #1
   14694:	pop	{r5, r7, fp, lr}
   14698:	mov	r0, r1
   1469c:	bx	lr
   146a0:	cmp	r1, #0
   146a4:	mvnne	r1, #0
   146a8:	mov	r0, r1
   146ac:	bx	lr

000146b0 <table_compare_ullong@@Base>:
   146b0:	cmp	r0, #0
   146b4:	beq	146e8 <table_compare_ullong@@Base+0x38>
   146b8:	cmp	r1, #0
   146bc:	moveq	r1, #1
   146c0:	moveq	r0, r1
   146c4:	bxeq	lr
   146c8:	ldr	r2, [r1]
   146cc:	ldr	r0, [r0]
   146d0:	mov	r1, #0
   146d4:	cmp	r0, r2
   146d8:	mvncc	r1, #0
   146dc:	movwhi	r1, #1
   146e0:	mov	r0, r1
   146e4:	bx	lr
   146e8:	cmp	r1, #0
   146ec:	mvnne	r1, #0
   146f0:	mov	r0, r1
   146f4:	bx	lr

000146f8 <table_compare_float@@Base>:
   146f8:	cmp	r0, #0
   146fc:	beq	14734 <table_compare_float@@Base+0x3c>
   14700:	cmp	r1, #0
   14704:	moveq	r1, #1
   14708:	moveq	r0, r1
   1470c:	bxeq	lr
   14710:	vldr	s0, [r1]
   14714:	vldr	s2, [r0]
   14718:	mov	r1, #0
   1471c:	vcmpe.f32	s2, s0
   14720:	vmrs	APSR_nzcv, fpscr
   14724:	mvnmi	r1, #0
   14728:	movwgt	r1, #1
   1472c:	mov	r0, r1
   14730:	bx	lr
   14734:	cmp	r1, #0
   14738:	mvnne	r1, #0
   1473c:	mov	r0, r1
   14740:	bx	lr

00014744 <table_compare_double@@Base>:
   14744:	cmp	r0, #0
   14748:	beq	14780 <table_compare_double@@Base+0x3c>
   1474c:	cmp	r1, #0
   14750:	moveq	r1, #1
   14754:	moveq	r0, r1
   14758:	bxeq	lr
   1475c:	vldr	d16, [r1]
   14760:	vldr	d17, [r0]
   14764:	mov	r1, #0
   14768:	vcmpe.f64	d17, d16
   1476c:	vmrs	APSR_nzcv, fpscr
   14770:	mvnmi	r1, #0
   14774:	movwgt	r1, #1
   14778:	mov	r0, r1
   1477c:	bx	lr
   14780:	cmp	r1, #0
   14784:	mvnne	r1, #0
   14788:	mov	r0, r1
   1478c:	bx	lr

00014790 <table_compare_ldouble@@Base>:
   14790:	cmp	r0, #0
   14794:	beq	147cc <table_compare_ldouble@@Base+0x3c>
   14798:	cmp	r1, #0
   1479c:	moveq	r1, #1
   147a0:	moveq	r0, r1
   147a4:	bxeq	lr
   147a8:	vldr	d16, [r1]
   147ac:	vldr	d17, [r0]
   147b0:	mov	r1, #0
   147b4:	vcmpe.f64	d17, d16
   147b8:	vmrs	APSR_nzcv, fpscr
   147bc:	mvnmi	r1, #0
   147c0:	movwgt	r1, #1
   147c4:	mov	r0, r1
   147c8:	bx	lr
   147cc:	cmp	r1, #0
   147d0:	mvnne	r1, #0
   147d4:	mov	r0, r1
   147d8:	bx	lr

000147dc <table_compare_char@@Base>:
   147dc:	cmp	r0, #0
   147e0:	beq	14814 <table_compare_char@@Base+0x38>
   147e4:	cmp	r1, #0
   147e8:	moveq	r1, #1
   147ec:	moveq	r0, r1
   147f0:	bxeq	lr
   147f4:	ldrb	r2, [r1]
   147f8:	ldrb	r0, [r0]
   147fc:	mov	r1, #0
   14800:	cmp	r0, r2
   14804:	mvncc	r1, #0
   14808:	movwhi	r1, #1
   1480c:	mov	r0, r1
   14810:	bx	lr
   14814:	cmp	r1, #0
   14818:	mvnne	r1, #0
   1481c:	mov	r0, r1
   14820:	bx	lr

00014824 <table_compare_uchar@@Base>:
   14824:	cmp	r0, #0
   14828:	beq	1485c <table_compare_uchar@@Base+0x38>
   1482c:	cmp	r1, #0
   14830:	moveq	r1, #1
   14834:	moveq	r0, r1
   14838:	bxeq	lr
   1483c:	ldrb	r2, [r1]
   14840:	ldrb	r0, [r0]
   14844:	mov	r1, #0
   14848:	cmp	r0, r2
   1484c:	mvncc	r1, #0
   14850:	movwhi	r1, #1
   14854:	mov	r0, r1
   14858:	bx	lr
   1485c:	cmp	r1, #0
   14860:	mvnne	r1, #0
   14864:	mov	r0, r1
   14868:	bx	lr

0001486c <table_compare_string@@Base>:
   1486c:	cmp	r0, #0
   14870:	beq	14888 <table_compare_string@@Base+0x1c>
   14874:	cmp	r1, #0
   14878:	moveq	r1, #1
   1487c:	moveq	r0, r1
   14880:	bxeq	lr
   14884:	b	12f78 <strcmp@plt>
   14888:	cmp	r1, #0
   1488c:	mvnne	r1, #0
   14890:	mov	r0, r1
   14894:	bx	lr

00014898 <table_compare_ptr@@Base>:
   14898:	mov	r2, #0
   1489c:	cmp	r0, r1
   148a0:	mvncc	r2, #0
   148a4:	movwhi	r2, #1
   148a8:	mov	r0, r2
   148ac:	bx	lr

000148b0 <table_get_default_compare_function_for_data_type@@Base>:
   148b0:	cmp	r0, #23
   148b4:	movwls	r1, #36240	; 0x8d90
   148b8:	movhi	r0, #0
   148bc:	movtls	r1, #1
   148c0:	ldrls	r0, [r1, r0, lsl #2]
   148c4:	bx	lr

000148c8 <table_subset_find@@Base>:
   148c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148cc:	add	fp, sp, #28
   148d0:	sub	sp, sp, #4
   148d4:	mov	r8, r3
   148d8:	mov	r9, r2
   148dc:	mov	r6, r1
   148e0:	mov	r7, r0
   148e4:	bl	141a8 <table_get_column_compare_function@@Base>
   148e8:	ldr	r4, [fp, #12]
   148ec:	ldr	r5, [fp, #8]
   148f0:	mov	sl, r0
   148f4:	cmp	r8, #0
   148f8:	beq	14940 <table_subset_find@@Base+0x78>
   148fc:	mvn	r8, #0
   14900:	cmp	r4, r5
   14904:	blt	14980 <table_subset_find@@Base+0xb8>
   14908:	mov	r0, r7
   1490c:	mov	r1, r4
   14910:	mov	r2, r6
   14914:	bl	16e18 <table_get@@Base>
   14918:	mov	r1, r0
   1491c:	mov	r0, r9
   14920:	blx	sl
   14924:	cmp	r0, #0
   14928:	beq	1498c <table_subset_find@@Base+0xc4>
   1492c:	sub	r0, r4, #1
   14930:	cmp	r4, r5
   14934:	mov	r4, r0
   14938:	bgt	14908 <table_subset_find@@Base+0x40>
   1493c:	b	14980 <table_subset_find@@Base+0xb8>
   14940:	mvn	r8, #0
   14944:	cmp	r5, r4
   14948:	bgt	14980 <table_subset_find@@Base+0xb8>
   1494c:	mov	r0, r7
   14950:	mov	r1, r5
   14954:	mov	r2, r6
   14958:	bl	16e18 <table_get@@Base>
   1495c:	mov	r1, r0
   14960:	mov	r0, r9
   14964:	blx	sl
   14968:	cmp	r0, #0
   1496c:	beq	1499c <table_subset_find@@Base+0xd4>
   14970:	add	r0, r5, #1
   14974:	cmp	r5, r4
   14978:	mov	r5, r0
   1497c:	blt	1494c <table_subset_find@@Base+0x84>
   14980:	mov	r0, r8
   14984:	sub	sp, fp, #28
   14988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1498c:	mov	r8, r4
   14990:	mov	r0, r8
   14994:	sub	sp, fp, #28
   14998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1499c:	mov	r8, r5
   149a0:	mov	r0, r8
   149a4:	sub	sp, fp, #28
   149a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000149ac <table_find@@Base>:
   149ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149b0:	add	fp, sp, #28
   149b4:	sub	sp, sp, #4
   149b8:	mov	r4, r3
   149bc:	mov	r9, r2
   149c0:	mov	sl, r1
   149c4:	mov	r6, r0
   149c8:	bl	170ec <table_get_row_length@@Base>
   149cc:	mov	r5, r0
   149d0:	mov	r0, r6
   149d4:	mov	r1, sl
   149d8:	bl	141a8 <table_get_column_compare_function@@Base>
   149dc:	mov	r7, r0
   149e0:	mvn	r8, #0
   149e4:	cmp	r4, #0
   149e8:	beq	14a2c <table_find@@Base+0x80>
   149ec:	cmp	r5, #1
   149f0:	blt	14a70 <table_find@@Base+0xc4>
   149f4:	sub	r4, r5, #1
   149f8:	mov	r0, r6
   149fc:	mov	r2, sl
   14a00:	mov	r1, r4
   14a04:	bl	16e18 <table_get@@Base>
   14a08:	mov	r1, r0
   14a0c:	mov	r0, r9
   14a10:	blx	r7
   14a14:	cmp	r0, #0
   14a18:	beq	14a7c <table_find@@Base+0xd0>
   14a1c:	cmp	r4, #0
   14a20:	mov	r5, r4
   14a24:	bgt	149f4 <table_find@@Base+0x48>
   14a28:	b	14a70 <table_find@@Base+0xc4>
   14a2c:	cmp	r5, #1
   14a30:	blt	14a70 <table_find@@Base+0xc4>
   14a34:	sub	r5, r5, #1
   14a38:	mov	r4, #0
   14a3c:	mov	r0, r6
   14a40:	mov	r1, r4
   14a44:	mov	r2, sl
   14a48:	bl	16e18 <table_get@@Base>
   14a4c:	mov	r1, r0
   14a50:	mov	r0, r9
   14a54:	blx	r7
   14a58:	cmp	r0, #0
   14a5c:	beq	14a8c <table_find@@Base+0xe0>
   14a60:	add	r0, r4, #1
   14a64:	cmp	r4, r5
   14a68:	mov	r4, r0
   14a6c:	blt	14a3c <table_find@@Base+0x90>
   14a70:	mov	r0, r8
   14a74:	sub	sp, fp, #28
   14a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a7c:	sub	r8, r5, #1
   14a80:	mov	r0, r8
   14a84:	sub	sp, fp, #28
   14a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a8c:	mov	r8, r4
   14a90:	mov	r0, r8
   14a94:	sub	sp, fp, #28
   14a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a9c <table_find_bool@@Base>:
   14a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14aa0:	add	fp, sp, #28
   14aa4:	sub	sp, sp, #4
   14aa8:	mov	r6, r3
   14aac:	mov	sl, r1
   14ab0:	mov	r5, r0
   14ab4:	strb	r2, [sp, #3]
   14ab8:	bl	170ec <table_get_row_length@@Base>
   14abc:	mov	r4, r0
   14ac0:	mov	r0, r5
   14ac4:	mov	r1, sl
   14ac8:	bl	141a8 <table_get_column_compare_function@@Base>
   14acc:	mov	r7, r0
   14ad0:	mvn	r8, #0
   14ad4:	cmp	r6, #0
   14ad8:	beq	14b20 <table_find_bool@@Base+0x84>
   14adc:	cmp	r4, #1
   14ae0:	blt	14b68 <table_find_bool@@Base+0xcc>
   14ae4:	add	r9, sp, #3
   14ae8:	sub	r6, r4, #1
   14aec:	mov	r0, r5
   14af0:	mov	r2, sl
   14af4:	mov	r1, r6
   14af8:	bl	16e18 <table_get@@Base>
   14afc:	mov	r1, r0
   14b00:	mov	r0, r9
   14b04:	blx	r7
   14b08:	cmp	r0, #0
   14b0c:	beq	14b74 <table_find_bool@@Base+0xd8>
   14b10:	cmp	r6, #0
   14b14:	mov	r4, r6
   14b18:	bgt	14ae8 <table_find_bool@@Base+0x4c>
   14b1c:	b	14b68 <table_find_bool@@Base+0xcc>
   14b20:	cmp	r4, #1
   14b24:	blt	14b68 <table_find_bool@@Base+0xcc>
   14b28:	sub	r4, r4, #1
   14b2c:	mov	r6, #0
   14b30:	add	r9, sp, #3
   14b34:	mov	r0, r5
   14b38:	mov	r1, r6
   14b3c:	mov	r2, sl
   14b40:	bl	16e18 <table_get@@Base>
   14b44:	mov	r1, r0
   14b48:	mov	r0, r9
   14b4c:	blx	r7
   14b50:	cmp	r0, #0
   14b54:	beq	14b84 <table_find_bool@@Base+0xe8>
   14b58:	add	r0, r6, #1
   14b5c:	cmp	r6, r4
   14b60:	mov	r6, r0
   14b64:	blt	14b34 <table_find_bool@@Base+0x98>
   14b68:	mov	r0, r8
   14b6c:	sub	sp, fp, #28
   14b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b74:	sub	r8, r4, #1
   14b78:	mov	r0, r8
   14b7c:	sub	sp, fp, #28
   14b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b84:	mov	r8, r6
   14b88:	mov	r0, r8
   14b8c:	sub	sp, fp, #28
   14b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014b94 <table_find_int@@Base>:
   14b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b98:	add	fp, sp, #28
   14b9c:	sub	sp, sp, #4
   14ba0:	mov	r6, r3
   14ba4:	mov	sl, r1
   14ba8:	mov	r5, r0
   14bac:	str	r2, [sp]
   14bb0:	bl	170ec <table_get_row_length@@Base>
   14bb4:	mov	r4, r0
   14bb8:	mov	r0, r5
   14bbc:	mov	r1, sl
   14bc0:	bl	141a8 <table_get_column_compare_function@@Base>
   14bc4:	mov	r7, r0
   14bc8:	mvn	r8, #0
   14bcc:	cmp	r6, #0
   14bd0:	beq	14c18 <table_find_int@@Base+0x84>
   14bd4:	cmp	r4, #1
   14bd8:	blt	14c60 <table_find_int@@Base+0xcc>
   14bdc:	mov	r9, sp
   14be0:	sub	r6, r4, #1
   14be4:	mov	r0, r5
   14be8:	mov	r2, sl
   14bec:	mov	r1, r6
   14bf0:	bl	16e18 <table_get@@Base>
   14bf4:	mov	r1, r0
   14bf8:	mov	r0, r9
   14bfc:	blx	r7
   14c00:	cmp	r0, #0
   14c04:	beq	14c6c <table_find_int@@Base+0xd8>
   14c08:	cmp	r6, #0
   14c0c:	mov	r4, r6
   14c10:	bgt	14be0 <table_find_int@@Base+0x4c>
   14c14:	b	14c60 <table_find_int@@Base+0xcc>
   14c18:	cmp	r4, #1
   14c1c:	blt	14c60 <table_find_int@@Base+0xcc>
   14c20:	sub	r4, r4, #1
   14c24:	mov	r6, #0
   14c28:	mov	r9, sp
   14c2c:	mov	r0, r5
   14c30:	mov	r1, r6
   14c34:	mov	r2, sl
   14c38:	bl	16e18 <table_get@@Base>
   14c3c:	mov	r1, r0
   14c40:	mov	r0, r9
   14c44:	blx	r7
   14c48:	cmp	r0, #0
   14c4c:	beq	14c7c <table_find_int@@Base+0xe8>
   14c50:	add	r0, r6, #1
   14c54:	cmp	r6, r4
   14c58:	mov	r6, r0
   14c5c:	blt	14c2c <table_find_int@@Base+0x98>
   14c60:	mov	r0, r8
   14c64:	sub	sp, fp, #28
   14c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c6c:	sub	r8, r4, #1
   14c70:	mov	r0, r8
   14c74:	sub	sp, fp, #28
   14c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c7c:	mov	r8, r6
   14c80:	mov	r0, r8
   14c84:	sub	sp, fp, #28
   14c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014c8c <table_find_uint@@Base>:
   14c8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c90:	add	fp, sp, #28
   14c94:	sub	sp, sp, #4
   14c98:	mov	r6, r3
   14c9c:	mov	sl, r1
   14ca0:	mov	r5, r0
   14ca4:	str	r2, [sp]
   14ca8:	bl	170ec <table_get_row_length@@Base>
   14cac:	mov	r4, r0
   14cb0:	mov	r0, r5
   14cb4:	mov	r1, sl
   14cb8:	bl	141a8 <table_get_column_compare_function@@Base>
   14cbc:	mov	r7, r0
   14cc0:	mvn	r8, #0
   14cc4:	cmp	r6, #0
   14cc8:	beq	14d10 <table_find_uint@@Base+0x84>
   14ccc:	cmp	r4, #1
   14cd0:	blt	14d58 <table_find_uint@@Base+0xcc>
   14cd4:	mov	r9, sp
   14cd8:	sub	r6, r4, #1
   14cdc:	mov	r0, r5
   14ce0:	mov	r2, sl
   14ce4:	mov	r1, r6
   14ce8:	bl	16e18 <table_get@@Base>
   14cec:	mov	r1, r0
   14cf0:	mov	r0, r9
   14cf4:	blx	r7
   14cf8:	cmp	r0, #0
   14cfc:	beq	14d64 <table_find_uint@@Base+0xd8>
   14d00:	cmp	r6, #0
   14d04:	mov	r4, r6
   14d08:	bgt	14cd8 <table_find_uint@@Base+0x4c>
   14d0c:	b	14d58 <table_find_uint@@Base+0xcc>
   14d10:	cmp	r4, #1
   14d14:	blt	14d58 <table_find_uint@@Base+0xcc>
   14d18:	sub	r4, r4, #1
   14d1c:	mov	r6, #0
   14d20:	mov	r9, sp
   14d24:	mov	r0, r5
   14d28:	mov	r1, r6
   14d2c:	mov	r2, sl
   14d30:	bl	16e18 <table_get@@Base>
   14d34:	mov	r1, r0
   14d38:	mov	r0, r9
   14d3c:	blx	r7
   14d40:	cmp	r0, #0
   14d44:	beq	14d74 <table_find_uint@@Base+0xe8>
   14d48:	add	r0, r6, #1
   14d4c:	cmp	r6, r4
   14d50:	mov	r6, r0
   14d54:	blt	14d24 <table_find_uint@@Base+0x98>
   14d58:	mov	r0, r8
   14d5c:	sub	sp, fp, #28
   14d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d64:	sub	r8, r4, #1
   14d68:	mov	r0, r8
   14d6c:	sub	sp, fp, #28
   14d70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d74:	mov	r8, r6
   14d78:	mov	r0, r8
   14d7c:	sub	sp, fp, #28
   14d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d84 <table_find_int8@@Base>:
   14d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d88:	add	fp, sp, #28
   14d8c:	sub	sp, sp, #4
   14d90:	mov	r6, r3
   14d94:	mov	sl, r1
   14d98:	mov	r5, r0
   14d9c:	strb	r2, [sp, #3]
   14da0:	bl	170ec <table_get_row_length@@Base>
   14da4:	mov	r4, r0
   14da8:	mov	r0, r5
   14dac:	mov	r1, sl
   14db0:	bl	141a8 <table_get_column_compare_function@@Base>
   14db4:	mov	r7, r0
   14db8:	mvn	r8, #0
   14dbc:	cmp	r6, #0
   14dc0:	beq	14e08 <table_find_int8@@Base+0x84>
   14dc4:	cmp	r4, #1
   14dc8:	blt	14e50 <table_find_int8@@Base+0xcc>
   14dcc:	add	r9, sp, #3
   14dd0:	sub	r6, r4, #1
   14dd4:	mov	r0, r5
   14dd8:	mov	r2, sl
   14ddc:	mov	r1, r6
   14de0:	bl	16e18 <table_get@@Base>
   14de4:	mov	r1, r0
   14de8:	mov	r0, r9
   14dec:	blx	r7
   14df0:	cmp	r0, #0
   14df4:	beq	14e5c <table_find_int8@@Base+0xd8>
   14df8:	cmp	r6, #0
   14dfc:	mov	r4, r6
   14e00:	bgt	14dd0 <table_find_int8@@Base+0x4c>
   14e04:	b	14e50 <table_find_int8@@Base+0xcc>
   14e08:	cmp	r4, #1
   14e0c:	blt	14e50 <table_find_int8@@Base+0xcc>
   14e10:	sub	r4, r4, #1
   14e14:	mov	r6, #0
   14e18:	add	r9, sp, #3
   14e1c:	mov	r0, r5
   14e20:	mov	r1, r6
   14e24:	mov	r2, sl
   14e28:	bl	16e18 <table_get@@Base>
   14e2c:	mov	r1, r0
   14e30:	mov	r0, r9
   14e34:	blx	r7
   14e38:	cmp	r0, #0
   14e3c:	beq	14e6c <table_find_int8@@Base+0xe8>
   14e40:	add	r0, r6, #1
   14e44:	cmp	r6, r4
   14e48:	mov	r6, r0
   14e4c:	blt	14e1c <table_find_int8@@Base+0x98>
   14e50:	mov	r0, r8
   14e54:	sub	sp, fp, #28
   14e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e5c:	sub	r8, r4, #1
   14e60:	mov	r0, r8
   14e64:	sub	sp, fp, #28
   14e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e6c:	mov	r8, r6
   14e70:	mov	r0, r8
   14e74:	sub	sp, fp, #28
   14e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014e7c <table_find_uint8@@Base>:
   14e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e80:	add	fp, sp, #28
   14e84:	sub	sp, sp, #4
   14e88:	mov	r6, r3
   14e8c:	mov	sl, r1
   14e90:	mov	r5, r0
   14e94:	strb	r2, [sp, #3]
   14e98:	bl	170ec <table_get_row_length@@Base>
   14e9c:	mov	r4, r0
   14ea0:	mov	r0, r5
   14ea4:	mov	r1, sl
   14ea8:	bl	141a8 <table_get_column_compare_function@@Base>
   14eac:	mov	r7, r0
   14eb0:	mvn	r8, #0
   14eb4:	cmp	r6, #0
   14eb8:	beq	14f00 <table_find_uint8@@Base+0x84>
   14ebc:	cmp	r4, #1
   14ec0:	blt	14f48 <table_find_uint8@@Base+0xcc>
   14ec4:	add	r9, sp, #3
   14ec8:	sub	r6, r4, #1
   14ecc:	mov	r0, r5
   14ed0:	mov	r2, sl
   14ed4:	mov	r1, r6
   14ed8:	bl	16e18 <table_get@@Base>
   14edc:	mov	r1, r0
   14ee0:	mov	r0, r9
   14ee4:	blx	r7
   14ee8:	cmp	r0, #0
   14eec:	beq	14f54 <table_find_uint8@@Base+0xd8>
   14ef0:	cmp	r6, #0
   14ef4:	mov	r4, r6
   14ef8:	bgt	14ec8 <table_find_uint8@@Base+0x4c>
   14efc:	b	14f48 <table_find_uint8@@Base+0xcc>
   14f00:	cmp	r4, #1
   14f04:	blt	14f48 <table_find_uint8@@Base+0xcc>
   14f08:	sub	r4, r4, #1
   14f0c:	mov	r6, #0
   14f10:	add	r9, sp, #3
   14f14:	mov	r0, r5
   14f18:	mov	r1, r6
   14f1c:	mov	r2, sl
   14f20:	bl	16e18 <table_get@@Base>
   14f24:	mov	r1, r0
   14f28:	mov	r0, r9
   14f2c:	blx	r7
   14f30:	cmp	r0, #0
   14f34:	beq	14f64 <table_find_uint8@@Base+0xe8>
   14f38:	add	r0, r6, #1
   14f3c:	cmp	r6, r4
   14f40:	mov	r6, r0
   14f44:	blt	14f14 <table_find_uint8@@Base+0x98>
   14f48:	mov	r0, r8
   14f4c:	sub	sp, fp, #28
   14f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f54:	sub	r8, r4, #1
   14f58:	mov	r0, r8
   14f5c:	sub	sp, fp, #28
   14f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f64:	mov	r8, r6
   14f68:	mov	r0, r8
   14f6c:	sub	sp, fp, #28
   14f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014f74 <table_find_int16@@Base>:
   14f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f78:	add	fp, sp, #28
   14f7c:	sub	sp, sp, #4
   14f80:	mov	r6, r3
   14f84:	mov	sl, r1
   14f88:	mov	r5, r0
   14f8c:	strh	r2, [sp, #2]
   14f90:	bl	170ec <table_get_row_length@@Base>
   14f94:	mov	r4, r0
   14f98:	mov	r0, r5
   14f9c:	mov	r1, sl
   14fa0:	bl	141a8 <table_get_column_compare_function@@Base>
   14fa4:	mov	r7, r0
   14fa8:	mvn	r8, #0
   14fac:	cmp	r6, #0
   14fb0:	beq	14ff8 <table_find_int16@@Base+0x84>
   14fb4:	cmp	r4, #1
   14fb8:	blt	15040 <table_find_int16@@Base+0xcc>
   14fbc:	add	r9, sp, #2
   14fc0:	sub	r6, r4, #1
   14fc4:	mov	r0, r5
   14fc8:	mov	r2, sl
   14fcc:	mov	r1, r6
   14fd0:	bl	16e18 <table_get@@Base>
   14fd4:	mov	r1, r0
   14fd8:	mov	r0, r9
   14fdc:	blx	r7
   14fe0:	cmp	r0, #0
   14fe4:	beq	1504c <table_find_int16@@Base+0xd8>
   14fe8:	cmp	r6, #0
   14fec:	mov	r4, r6
   14ff0:	bgt	14fc0 <table_find_int16@@Base+0x4c>
   14ff4:	b	15040 <table_find_int16@@Base+0xcc>
   14ff8:	cmp	r4, #1
   14ffc:	blt	15040 <table_find_int16@@Base+0xcc>
   15000:	sub	r4, r4, #1
   15004:	mov	r6, #0
   15008:	add	r9, sp, #2
   1500c:	mov	r0, r5
   15010:	mov	r1, r6
   15014:	mov	r2, sl
   15018:	bl	16e18 <table_get@@Base>
   1501c:	mov	r1, r0
   15020:	mov	r0, r9
   15024:	blx	r7
   15028:	cmp	r0, #0
   1502c:	beq	1505c <table_find_int16@@Base+0xe8>
   15030:	add	r0, r6, #1
   15034:	cmp	r6, r4
   15038:	mov	r6, r0
   1503c:	blt	1500c <table_find_int16@@Base+0x98>
   15040:	mov	r0, r8
   15044:	sub	sp, fp, #28
   15048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1504c:	sub	r8, r4, #1
   15050:	mov	r0, r8
   15054:	sub	sp, fp, #28
   15058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1505c:	mov	r8, r6
   15060:	mov	r0, r8
   15064:	sub	sp, fp, #28
   15068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001506c <table_find_uint16@@Base>:
   1506c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15070:	add	fp, sp, #28
   15074:	sub	sp, sp, #4
   15078:	mov	r6, r3
   1507c:	mov	sl, r1
   15080:	mov	r5, r0
   15084:	strh	r2, [sp, #2]
   15088:	bl	170ec <table_get_row_length@@Base>
   1508c:	mov	r4, r0
   15090:	mov	r0, r5
   15094:	mov	r1, sl
   15098:	bl	141a8 <table_get_column_compare_function@@Base>
   1509c:	mov	r7, r0
   150a0:	mvn	r8, #0
   150a4:	cmp	r6, #0
   150a8:	beq	150f0 <table_find_uint16@@Base+0x84>
   150ac:	cmp	r4, #1
   150b0:	blt	15138 <table_find_uint16@@Base+0xcc>
   150b4:	add	r9, sp, #2
   150b8:	sub	r6, r4, #1
   150bc:	mov	r0, r5
   150c0:	mov	r2, sl
   150c4:	mov	r1, r6
   150c8:	bl	16e18 <table_get@@Base>
   150cc:	mov	r1, r0
   150d0:	mov	r0, r9
   150d4:	blx	r7
   150d8:	cmp	r0, #0
   150dc:	beq	15144 <table_find_uint16@@Base+0xd8>
   150e0:	cmp	r6, #0
   150e4:	mov	r4, r6
   150e8:	bgt	150b8 <table_find_uint16@@Base+0x4c>
   150ec:	b	15138 <table_find_uint16@@Base+0xcc>
   150f0:	cmp	r4, #1
   150f4:	blt	15138 <table_find_uint16@@Base+0xcc>
   150f8:	sub	r4, r4, #1
   150fc:	mov	r6, #0
   15100:	add	r9, sp, #2
   15104:	mov	r0, r5
   15108:	mov	r1, r6
   1510c:	mov	r2, sl
   15110:	bl	16e18 <table_get@@Base>
   15114:	mov	r1, r0
   15118:	mov	r0, r9
   1511c:	blx	r7
   15120:	cmp	r0, #0
   15124:	beq	15154 <table_find_uint16@@Base+0xe8>
   15128:	add	r0, r6, #1
   1512c:	cmp	r6, r4
   15130:	mov	r6, r0
   15134:	blt	15104 <table_find_uint16@@Base+0x98>
   15138:	mov	r0, r8
   1513c:	sub	sp, fp, #28
   15140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15144:	sub	r8, r4, #1
   15148:	mov	r0, r8
   1514c:	sub	sp, fp, #28
   15150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15154:	mov	r8, r6
   15158:	mov	r0, r8
   1515c:	sub	sp, fp, #28
   15160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015164 <table_find_int32@@Base>:
   15164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15168:	add	fp, sp, #28
   1516c:	sub	sp, sp, #4
   15170:	mov	r6, r3
   15174:	mov	sl, r1
   15178:	mov	r5, r0
   1517c:	str	r2, [sp]
   15180:	bl	170ec <table_get_row_length@@Base>
   15184:	mov	r4, r0
   15188:	mov	r0, r5
   1518c:	mov	r1, sl
   15190:	bl	141a8 <table_get_column_compare_function@@Base>
   15194:	mov	r7, r0
   15198:	mvn	r8, #0
   1519c:	cmp	r6, #0
   151a0:	beq	151e8 <table_find_int32@@Base+0x84>
   151a4:	cmp	r4, #1
   151a8:	blt	15230 <table_find_int32@@Base+0xcc>
   151ac:	mov	r9, sp
   151b0:	sub	r6, r4, #1
   151b4:	mov	r0, r5
   151b8:	mov	r2, sl
   151bc:	mov	r1, r6
   151c0:	bl	16e18 <table_get@@Base>
   151c4:	mov	r1, r0
   151c8:	mov	r0, r9
   151cc:	blx	r7
   151d0:	cmp	r0, #0
   151d4:	beq	1523c <table_find_int32@@Base+0xd8>
   151d8:	cmp	r6, #0
   151dc:	mov	r4, r6
   151e0:	bgt	151b0 <table_find_int32@@Base+0x4c>
   151e4:	b	15230 <table_find_int32@@Base+0xcc>
   151e8:	cmp	r4, #1
   151ec:	blt	15230 <table_find_int32@@Base+0xcc>
   151f0:	sub	r4, r4, #1
   151f4:	mov	r6, #0
   151f8:	mov	r9, sp
   151fc:	mov	r0, r5
   15200:	mov	r1, r6
   15204:	mov	r2, sl
   15208:	bl	16e18 <table_get@@Base>
   1520c:	mov	r1, r0
   15210:	mov	r0, r9
   15214:	blx	r7
   15218:	cmp	r0, #0
   1521c:	beq	1524c <table_find_int32@@Base+0xe8>
   15220:	add	r0, r6, #1
   15224:	cmp	r6, r4
   15228:	mov	r6, r0
   1522c:	blt	151fc <table_find_int32@@Base+0x98>
   15230:	mov	r0, r8
   15234:	sub	sp, fp, #28
   15238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1523c:	sub	r8, r4, #1
   15240:	mov	r0, r8
   15244:	sub	sp, fp, #28
   15248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1524c:	mov	r8, r6
   15250:	mov	r0, r8
   15254:	sub	sp, fp, #28
   15258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001525c <table_find_uint32@@Base>:
   1525c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15260:	add	fp, sp, #28
   15264:	sub	sp, sp, #4
   15268:	mov	r6, r3
   1526c:	mov	sl, r1
   15270:	mov	r5, r0
   15274:	str	r2, [sp]
   15278:	bl	170ec <table_get_row_length@@Base>
   1527c:	mov	r4, r0
   15280:	mov	r0, r5
   15284:	mov	r1, sl
   15288:	bl	141a8 <table_get_column_compare_function@@Base>
   1528c:	mov	r7, r0
   15290:	mvn	r8, #0
   15294:	cmp	r6, #0
   15298:	beq	152e0 <table_find_uint32@@Base+0x84>
   1529c:	cmp	r4, #1
   152a0:	blt	15328 <table_find_uint32@@Base+0xcc>
   152a4:	mov	r9, sp
   152a8:	sub	r6, r4, #1
   152ac:	mov	r0, r5
   152b0:	mov	r2, sl
   152b4:	mov	r1, r6
   152b8:	bl	16e18 <table_get@@Base>
   152bc:	mov	r1, r0
   152c0:	mov	r0, r9
   152c4:	blx	r7
   152c8:	cmp	r0, #0
   152cc:	beq	15334 <table_find_uint32@@Base+0xd8>
   152d0:	cmp	r6, #0
   152d4:	mov	r4, r6
   152d8:	bgt	152a8 <table_find_uint32@@Base+0x4c>
   152dc:	b	15328 <table_find_uint32@@Base+0xcc>
   152e0:	cmp	r4, #1
   152e4:	blt	15328 <table_find_uint32@@Base+0xcc>
   152e8:	sub	r4, r4, #1
   152ec:	mov	r6, #0
   152f0:	mov	r9, sp
   152f4:	mov	r0, r5
   152f8:	mov	r1, r6
   152fc:	mov	r2, sl
   15300:	bl	16e18 <table_get@@Base>
   15304:	mov	r1, r0
   15308:	mov	r0, r9
   1530c:	blx	r7
   15310:	cmp	r0, #0
   15314:	beq	15344 <table_find_uint32@@Base+0xe8>
   15318:	add	r0, r6, #1
   1531c:	cmp	r6, r4
   15320:	mov	r6, r0
   15324:	blt	152f4 <table_find_uint32@@Base+0x98>
   15328:	mov	r0, r8
   1532c:	sub	sp, fp, #28
   15330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15334:	sub	r8, r4, #1
   15338:	mov	r0, r8
   1533c:	sub	sp, fp, #28
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	mov	r8, r6
   15348:	mov	r0, r8
   1534c:	sub	sp, fp, #28
   15350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015354 <table_find_int64@@Base>:
   15354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15358:	add	fp, sp, #28
   1535c:	sub	sp, sp, #12
   15360:	mov	sl, r1
   15364:	mov	r5, r0
   15368:	stm	sp, {r2, r3}
   1536c:	bl	170ec <table_get_row_length@@Base>
   15370:	mov	r4, r0
   15374:	mov	r0, r5
   15378:	mov	r1, sl
   1537c:	bl	141a8 <table_get_column_compare_function@@Base>
   15380:	mov	r7, r0
   15384:	ldr	r0, [fp, #8]
   15388:	mvn	r8, #0
   1538c:	cmp	r0, #0
   15390:	beq	153d8 <table_find_int64@@Base+0x84>
   15394:	cmp	r4, #1
   15398:	blt	15420 <table_find_int64@@Base+0xcc>
   1539c:	mov	r9, sp
   153a0:	sub	r6, r4, #1
   153a4:	mov	r0, r5
   153a8:	mov	r2, sl
   153ac:	mov	r1, r6
   153b0:	bl	16e18 <table_get@@Base>
   153b4:	mov	r1, r0
   153b8:	mov	r0, r9
   153bc:	blx	r7
   153c0:	cmp	r0, #0
   153c4:	beq	1542c <table_find_int64@@Base+0xd8>
   153c8:	cmp	r6, #0
   153cc:	mov	r4, r6
   153d0:	bgt	153a0 <table_find_int64@@Base+0x4c>
   153d4:	b	15420 <table_find_int64@@Base+0xcc>
   153d8:	cmp	r4, #1
   153dc:	blt	15420 <table_find_int64@@Base+0xcc>
   153e0:	sub	r4, r4, #1
   153e4:	mov	r6, #0
   153e8:	mov	r9, sp
   153ec:	mov	r0, r5
   153f0:	mov	r1, r6
   153f4:	mov	r2, sl
   153f8:	bl	16e18 <table_get@@Base>
   153fc:	mov	r1, r0
   15400:	mov	r0, r9
   15404:	blx	r7
   15408:	cmp	r0, #0
   1540c:	beq	1543c <table_find_int64@@Base+0xe8>
   15410:	add	r0, r6, #1
   15414:	cmp	r6, r4
   15418:	mov	r6, r0
   1541c:	blt	153ec <table_find_int64@@Base+0x98>
   15420:	mov	r0, r8
   15424:	sub	sp, fp, #28
   15428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1542c:	sub	r8, r4, #1
   15430:	mov	r0, r8
   15434:	sub	sp, fp, #28
   15438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1543c:	mov	r8, r6
   15440:	mov	r0, r8
   15444:	sub	sp, fp, #28
   15448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001544c <table_find_uint64@@Base>:
   1544c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15450:	add	fp, sp, #28
   15454:	sub	sp, sp, #12
   15458:	mov	sl, r1
   1545c:	mov	r5, r0
   15460:	stm	sp, {r2, r3}
   15464:	bl	170ec <table_get_row_length@@Base>
   15468:	mov	r4, r0
   1546c:	mov	r0, r5
   15470:	mov	r1, sl
   15474:	bl	141a8 <table_get_column_compare_function@@Base>
   15478:	mov	r7, r0
   1547c:	ldr	r0, [fp, #8]
   15480:	mvn	r8, #0
   15484:	cmp	r0, #0
   15488:	beq	154d0 <table_find_uint64@@Base+0x84>
   1548c:	cmp	r4, #1
   15490:	blt	15518 <table_find_uint64@@Base+0xcc>
   15494:	mov	r9, sp
   15498:	sub	r6, r4, #1
   1549c:	mov	r0, r5
   154a0:	mov	r2, sl
   154a4:	mov	r1, r6
   154a8:	bl	16e18 <table_get@@Base>
   154ac:	mov	r1, r0
   154b0:	mov	r0, r9
   154b4:	blx	r7
   154b8:	cmp	r0, #0
   154bc:	beq	15524 <table_find_uint64@@Base+0xd8>
   154c0:	cmp	r6, #0
   154c4:	mov	r4, r6
   154c8:	bgt	15498 <table_find_uint64@@Base+0x4c>
   154cc:	b	15518 <table_find_uint64@@Base+0xcc>
   154d0:	cmp	r4, #1
   154d4:	blt	15518 <table_find_uint64@@Base+0xcc>
   154d8:	sub	r4, r4, #1
   154dc:	mov	r6, #0
   154e0:	mov	r9, sp
   154e4:	mov	r0, r5
   154e8:	mov	r1, r6
   154ec:	mov	r2, sl
   154f0:	bl	16e18 <table_get@@Base>
   154f4:	mov	r1, r0
   154f8:	mov	r0, r9
   154fc:	blx	r7
   15500:	cmp	r0, #0
   15504:	beq	15534 <table_find_uint64@@Base+0xe8>
   15508:	add	r0, r6, #1
   1550c:	cmp	r6, r4
   15510:	mov	r6, r0
   15514:	blt	154e4 <table_find_uint64@@Base+0x98>
   15518:	mov	r0, r8
   1551c:	sub	sp, fp, #28
   15520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15524:	sub	r8, r4, #1
   15528:	mov	r0, r8
   1552c:	sub	sp, fp, #28
   15530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15534:	mov	r8, r6
   15538:	mov	r0, r8
   1553c:	sub	sp, fp, #28
   15540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015544 <table_find_short@@Base>:
   15544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15548:	add	fp, sp, #28
   1554c:	sub	sp, sp, #4
   15550:	mov	r6, r3
   15554:	mov	sl, r1
   15558:	mov	r5, r0
   1555c:	strh	r2, [sp, #2]
   15560:	bl	170ec <table_get_row_length@@Base>
   15564:	mov	r4, r0
   15568:	mov	r0, r5
   1556c:	mov	r1, sl
   15570:	bl	141a8 <table_get_column_compare_function@@Base>
   15574:	mov	r7, r0
   15578:	mvn	r8, #0
   1557c:	cmp	r6, #0
   15580:	beq	155c8 <table_find_short@@Base+0x84>
   15584:	cmp	r4, #1
   15588:	blt	15610 <table_find_short@@Base+0xcc>
   1558c:	add	r9, sp, #2
   15590:	sub	r6, r4, #1
   15594:	mov	r0, r5
   15598:	mov	r2, sl
   1559c:	mov	r1, r6
   155a0:	bl	16e18 <table_get@@Base>
   155a4:	mov	r1, r0
   155a8:	mov	r0, r9
   155ac:	blx	r7
   155b0:	cmp	r0, #0
   155b4:	beq	1561c <table_find_short@@Base+0xd8>
   155b8:	cmp	r6, #0
   155bc:	mov	r4, r6
   155c0:	bgt	15590 <table_find_short@@Base+0x4c>
   155c4:	b	15610 <table_find_short@@Base+0xcc>
   155c8:	cmp	r4, #1
   155cc:	blt	15610 <table_find_short@@Base+0xcc>
   155d0:	sub	r4, r4, #1
   155d4:	mov	r6, #0
   155d8:	add	r9, sp, #2
   155dc:	mov	r0, r5
   155e0:	mov	r1, r6
   155e4:	mov	r2, sl
   155e8:	bl	16e18 <table_get@@Base>
   155ec:	mov	r1, r0
   155f0:	mov	r0, r9
   155f4:	blx	r7
   155f8:	cmp	r0, #0
   155fc:	beq	1562c <table_find_short@@Base+0xe8>
   15600:	add	r0, r6, #1
   15604:	cmp	r6, r4
   15608:	mov	r6, r0
   1560c:	blt	155dc <table_find_short@@Base+0x98>
   15610:	mov	r0, r8
   15614:	sub	sp, fp, #28
   15618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1561c:	sub	r8, r4, #1
   15620:	mov	r0, r8
   15624:	sub	sp, fp, #28
   15628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1562c:	mov	r8, r6
   15630:	mov	r0, r8
   15634:	sub	sp, fp, #28
   15638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001563c <table_find_ushort@@Base>:
   1563c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15640:	add	fp, sp, #28
   15644:	sub	sp, sp, #4
   15648:	mov	r6, r3
   1564c:	mov	sl, r1
   15650:	mov	r5, r0
   15654:	strh	r2, [sp, #2]
   15658:	bl	170ec <table_get_row_length@@Base>
   1565c:	mov	r4, r0
   15660:	mov	r0, r5
   15664:	mov	r1, sl
   15668:	bl	141a8 <table_get_column_compare_function@@Base>
   1566c:	mov	r7, r0
   15670:	mvn	r8, #0
   15674:	cmp	r6, #0
   15678:	beq	156c0 <table_find_ushort@@Base+0x84>
   1567c:	cmp	r4, #1
   15680:	blt	15708 <table_find_ushort@@Base+0xcc>
   15684:	add	r9, sp, #2
   15688:	sub	r6, r4, #1
   1568c:	mov	r0, r5
   15690:	mov	r2, sl
   15694:	mov	r1, r6
   15698:	bl	16e18 <table_get@@Base>
   1569c:	mov	r1, r0
   156a0:	mov	r0, r9
   156a4:	blx	r7
   156a8:	cmp	r0, #0
   156ac:	beq	15714 <table_find_ushort@@Base+0xd8>
   156b0:	cmp	r6, #0
   156b4:	mov	r4, r6
   156b8:	bgt	15688 <table_find_ushort@@Base+0x4c>
   156bc:	b	15708 <table_find_ushort@@Base+0xcc>
   156c0:	cmp	r4, #1
   156c4:	blt	15708 <table_find_ushort@@Base+0xcc>
   156c8:	sub	r4, r4, #1
   156cc:	mov	r6, #0
   156d0:	add	r9, sp, #2
   156d4:	mov	r0, r5
   156d8:	mov	r1, r6
   156dc:	mov	r2, sl
   156e0:	bl	16e18 <table_get@@Base>
   156e4:	mov	r1, r0
   156e8:	mov	r0, r9
   156ec:	blx	r7
   156f0:	cmp	r0, #0
   156f4:	beq	15724 <table_find_ushort@@Base+0xe8>
   156f8:	add	r0, r6, #1
   156fc:	cmp	r6, r4
   15700:	mov	r6, r0
   15704:	blt	156d4 <table_find_ushort@@Base+0x98>
   15708:	mov	r0, r8
   1570c:	sub	sp, fp, #28
   15710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15714:	sub	r8, r4, #1
   15718:	mov	r0, r8
   1571c:	sub	sp, fp, #28
   15720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15724:	mov	r8, r6
   15728:	mov	r0, r8
   1572c:	sub	sp, fp, #28
   15730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015734 <table_find_long@@Base>:
   15734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15738:	add	fp, sp, #28
   1573c:	sub	sp, sp, #4
   15740:	mov	r6, r3
   15744:	mov	sl, r1
   15748:	mov	r5, r0
   1574c:	str	r2, [sp]
   15750:	bl	170ec <table_get_row_length@@Base>
   15754:	mov	r4, r0
   15758:	mov	r0, r5
   1575c:	mov	r1, sl
   15760:	bl	141a8 <table_get_column_compare_function@@Base>
   15764:	mov	r7, r0
   15768:	mvn	r8, #0
   1576c:	cmp	r6, #0
   15770:	beq	157b8 <table_find_long@@Base+0x84>
   15774:	cmp	r4, #1
   15778:	blt	15800 <table_find_long@@Base+0xcc>
   1577c:	mov	r9, sp
   15780:	sub	r6, r4, #1
   15784:	mov	r0, r5
   15788:	mov	r2, sl
   1578c:	mov	r1, r6
   15790:	bl	16e18 <table_get@@Base>
   15794:	mov	r1, r0
   15798:	mov	r0, r9
   1579c:	blx	r7
   157a0:	cmp	r0, #0
   157a4:	beq	1580c <table_find_long@@Base+0xd8>
   157a8:	cmp	r6, #0
   157ac:	mov	r4, r6
   157b0:	bgt	15780 <table_find_long@@Base+0x4c>
   157b4:	b	15800 <table_find_long@@Base+0xcc>
   157b8:	cmp	r4, #1
   157bc:	blt	15800 <table_find_long@@Base+0xcc>
   157c0:	sub	r4, r4, #1
   157c4:	mov	r6, #0
   157c8:	mov	r9, sp
   157cc:	mov	r0, r5
   157d0:	mov	r1, r6
   157d4:	mov	r2, sl
   157d8:	bl	16e18 <table_get@@Base>
   157dc:	mov	r1, r0
   157e0:	mov	r0, r9
   157e4:	blx	r7
   157e8:	cmp	r0, #0
   157ec:	beq	1581c <table_find_long@@Base+0xe8>
   157f0:	add	r0, r6, #1
   157f4:	cmp	r6, r4
   157f8:	mov	r6, r0
   157fc:	blt	157cc <table_find_long@@Base+0x98>
   15800:	mov	r0, r8
   15804:	sub	sp, fp, #28
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1580c:	sub	r8, r4, #1
   15810:	mov	r0, r8
   15814:	sub	sp, fp, #28
   15818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1581c:	mov	r8, r6
   15820:	mov	r0, r8
   15824:	sub	sp, fp, #28
   15828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001582c <table_find_ulong@@Base>:
   1582c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15830:	add	fp, sp, #28
   15834:	sub	sp, sp, #4
   15838:	mov	r6, r3
   1583c:	mov	sl, r1
   15840:	mov	r5, r0
   15844:	str	r2, [sp]
   15848:	bl	170ec <table_get_row_length@@Base>
   1584c:	mov	r4, r0
   15850:	mov	r0, r5
   15854:	mov	r1, sl
   15858:	bl	141a8 <table_get_column_compare_function@@Base>
   1585c:	mov	r7, r0
   15860:	mvn	r8, #0
   15864:	cmp	r6, #0
   15868:	beq	158b0 <table_find_ulong@@Base+0x84>
   1586c:	cmp	r4, #1
   15870:	blt	158f8 <table_find_ulong@@Base+0xcc>
   15874:	mov	r9, sp
   15878:	sub	r6, r4, #1
   1587c:	mov	r0, r5
   15880:	mov	r2, sl
   15884:	mov	r1, r6
   15888:	bl	16e18 <table_get@@Base>
   1588c:	mov	r1, r0
   15890:	mov	r0, r9
   15894:	blx	r7
   15898:	cmp	r0, #0
   1589c:	beq	15904 <table_find_ulong@@Base+0xd8>
   158a0:	cmp	r6, #0
   158a4:	mov	r4, r6
   158a8:	bgt	15878 <table_find_ulong@@Base+0x4c>
   158ac:	b	158f8 <table_find_ulong@@Base+0xcc>
   158b0:	cmp	r4, #1
   158b4:	blt	158f8 <table_find_ulong@@Base+0xcc>
   158b8:	sub	r4, r4, #1
   158bc:	mov	r6, #0
   158c0:	mov	r9, sp
   158c4:	mov	r0, r5
   158c8:	mov	r1, r6
   158cc:	mov	r2, sl
   158d0:	bl	16e18 <table_get@@Base>
   158d4:	mov	r1, r0
   158d8:	mov	r0, r9
   158dc:	blx	r7
   158e0:	cmp	r0, #0
   158e4:	beq	15914 <table_find_ulong@@Base+0xe8>
   158e8:	add	r0, r6, #1
   158ec:	cmp	r6, r4
   158f0:	mov	r6, r0
   158f4:	blt	158c4 <table_find_ulong@@Base+0x98>
   158f8:	mov	r0, r8
   158fc:	sub	sp, fp, #28
   15900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15904:	sub	r8, r4, #1
   15908:	mov	r0, r8
   1590c:	sub	sp, fp, #28
   15910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15914:	mov	r8, r6
   15918:	mov	r0, r8
   1591c:	sub	sp, fp, #28
   15920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015924 <table_find_llong@@Base>:
   15924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15928:	add	fp, sp, #28
   1592c:	sub	sp, sp, #12
   15930:	mov	sl, r1
   15934:	mov	r5, r0
   15938:	stm	sp, {r2, r3}
   1593c:	bl	170ec <table_get_row_length@@Base>
   15940:	mov	r4, r0
   15944:	mov	r0, r5
   15948:	mov	r1, sl
   1594c:	bl	141a8 <table_get_column_compare_function@@Base>
   15950:	mov	r7, r0
   15954:	ldr	r0, [fp, #8]
   15958:	mvn	r8, #0
   1595c:	cmp	r0, #0
   15960:	beq	159a8 <table_find_llong@@Base+0x84>
   15964:	cmp	r4, #1
   15968:	blt	159f0 <table_find_llong@@Base+0xcc>
   1596c:	mov	r9, sp
   15970:	sub	r6, r4, #1
   15974:	mov	r0, r5
   15978:	mov	r2, sl
   1597c:	mov	r1, r6
   15980:	bl	16e18 <table_get@@Base>
   15984:	mov	r1, r0
   15988:	mov	r0, r9
   1598c:	blx	r7
   15990:	cmp	r0, #0
   15994:	beq	159fc <table_find_llong@@Base+0xd8>
   15998:	cmp	r6, #0
   1599c:	mov	r4, r6
   159a0:	bgt	15970 <table_find_llong@@Base+0x4c>
   159a4:	b	159f0 <table_find_llong@@Base+0xcc>
   159a8:	cmp	r4, #1
   159ac:	blt	159f0 <table_find_llong@@Base+0xcc>
   159b0:	sub	r4, r4, #1
   159b4:	mov	r6, #0
   159b8:	mov	r9, sp
   159bc:	mov	r0, r5
   159c0:	mov	r1, r6
   159c4:	mov	r2, sl
   159c8:	bl	16e18 <table_get@@Base>
   159cc:	mov	r1, r0
   159d0:	mov	r0, r9
   159d4:	blx	r7
   159d8:	cmp	r0, #0
   159dc:	beq	15a0c <table_find_llong@@Base+0xe8>
   159e0:	add	r0, r6, #1
   159e4:	cmp	r6, r4
   159e8:	mov	r6, r0
   159ec:	blt	159bc <table_find_llong@@Base+0x98>
   159f0:	mov	r0, r8
   159f4:	sub	sp, fp, #28
   159f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159fc:	sub	r8, r4, #1
   15a00:	mov	r0, r8
   15a04:	sub	sp, fp, #28
   15a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a0c:	mov	r8, r6
   15a10:	mov	r0, r8
   15a14:	sub	sp, fp, #28
   15a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a1c <table_find_ullong@@Base>:
   15a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a20:	add	fp, sp, #28
   15a24:	sub	sp, sp, #12
   15a28:	mov	sl, r1
   15a2c:	mov	r5, r0
   15a30:	stm	sp, {r2, r3}
   15a34:	bl	170ec <table_get_row_length@@Base>
   15a38:	mov	r4, r0
   15a3c:	mov	r0, r5
   15a40:	mov	r1, sl
   15a44:	bl	141a8 <table_get_column_compare_function@@Base>
   15a48:	mov	r7, r0
   15a4c:	ldr	r0, [fp, #8]
   15a50:	mvn	r8, #0
   15a54:	cmp	r0, #0
   15a58:	beq	15aa0 <table_find_ullong@@Base+0x84>
   15a5c:	cmp	r4, #1
   15a60:	blt	15ae8 <table_find_ullong@@Base+0xcc>
   15a64:	mov	r9, sp
   15a68:	sub	r6, r4, #1
   15a6c:	mov	r0, r5
   15a70:	mov	r2, sl
   15a74:	mov	r1, r6
   15a78:	bl	16e18 <table_get@@Base>
   15a7c:	mov	r1, r0
   15a80:	mov	r0, r9
   15a84:	blx	r7
   15a88:	cmp	r0, #0
   15a8c:	beq	15af4 <table_find_ullong@@Base+0xd8>
   15a90:	cmp	r6, #0
   15a94:	mov	r4, r6
   15a98:	bgt	15a68 <table_find_ullong@@Base+0x4c>
   15a9c:	b	15ae8 <table_find_ullong@@Base+0xcc>
   15aa0:	cmp	r4, #1
   15aa4:	blt	15ae8 <table_find_ullong@@Base+0xcc>
   15aa8:	sub	r4, r4, #1
   15aac:	mov	r6, #0
   15ab0:	mov	r9, sp
   15ab4:	mov	r0, r5
   15ab8:	mov	r1, r6
   15abc:	mov	r2, sl
   15ac0:	bl	16e18 <table_get@@Base>
   15ac4:	mov	r1, r0
   15ac8:	mov	r0, r9
   15acc:	blx	r7
   15ad0:	cmp	r0, #0
   15ad4:	beq	15b04 <table_find_ullong@@Base+0xe8>
   15ad8:	add	r0, r6, #1
   15adc:	cmp	r6, r4
   15ae0:	mov	r6, r0
   15ae4:	blt	15ab4 <table_find_ullong@@Base+0x98>
   15ae8:	mov	r0, r8
   15aec:	sub	sp, fp, #28
   15af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15af4:	sub	r8, r4, #1
   15af8:	mov	r0, r8
   15afc:	sub	sp, fp, #28
   15b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b04:	mov	r8, r6
   15b08:	mov	r0, r8
   15b0c:	sub	sp, fp, #28
   15b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015b14 <table_find_float@@Base>:
   15b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b18:	add	fp, sp, #28
   15b1c:	sub	sp, sp, #4
   15b20:	mov	r6, r2
   15b24:	mov	sl, r1
   15b28:	mov	r5, r0
   15b2c:	vstr	s0, [sp]
   15b30:	bl	170ec <table_get_row_length@@Base>
   15b34:	mov	r4, r0
   15b38:	mov	r0, r5
   15b3c:	mov	r1, sl
   15b40:	bl	141a8 <table_get_column_compare_function@@Base>
   15b44:	mov	r7, r0
   15b48:	mvn	r8, #0
   15b4c:	cmp	r6, #0
   15b50:	beq	15b98 <table_find_float@@Base+0x84>
   15b54:	cmp	r4, #1
   15b58:	blt	15be0 <table_find_float@@Base+0xcc>
   15b5c:	mov	r9, sp
   15b60:	sub	r6, r4, #1
   15b64:	mov	r0, r5
   15b68:	mov	r2, sl
   15b6c:	mov	r1, r6
   15b70:	bl	16e18 <table_get@@Base>
   15b74:	mov	r1, r0
   15b78:	mov	r0, r9
   15b7c:	blx	r7
   15b80:	cmp	r0, #0
   15b84:	beq	15bec <table_find_float@@Base+0xd8>
   15b88:	cmp	r6, #0
   15b8c:	mov	r4, r6
   15b90:	bgt	15b60 <table_find_float@@Base+0x4c>
   15b94:	b	15be0 <table_find_float@@Base+0xcc>
   15b98:	cmp	r4, #1
   15b9c:	blt	15be0 <table_find_float@@Base+0xcc>
   15ba0:	sub	r4, r4, #1
   15ba4:	mov	r6, #0
   15ba8:	mov	r9, sp
   15bac:	mov	r0, r5
   15bb0:	mov	r1, r6
   15bb4:	mov	r2, sl
   15bb8:	bl	16e18 <table_get@@Base>
   15bbc:	mov	r1, r0
   15bc0:	mov	r0, r9
   15bc4:	blx	r7
   15bc8:	cmp	r0, #0
   15bcc:	beq	15bfc <table_find_float@@Base+0xe8>
   15bd0:	add	r0, r6, #1
   15bd4:	cmp	r6, r4
   15bd8:	mov	r6, r0
   15bdc:	blt	15bac <table_find_float@@Base+0x98>
   15be0:	mov	r0, r8
   15be4:	sub	sp, fp, #28
   15be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bec:	sub	r8, r4, #1
   15bf0:	mov	r0, r8
   15bf4:	sub	sp, fp, #28
   15bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bfc:	mov	r8, r6
   15c00:	mov	r0, r8
   15c04:	sub	sp, fp, #28
   15c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015c0c <table_find_double@@Base>:
   15c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c10:	add	fp, sp, #28
   15c14:	sub	sp, sp, #12
   15c18:	mov	r6, r2
   15c1c:	mov	sl, r1
   15c20:	mov	r5, r0
   15c24:	vstr	d0, [sp]
   15c28:	bl	170ec <table_get_row_length@@Base>
   15c2c:	mov	r4, r0
   15c30:	mov	r0, r5
   15c34:	mov	r1, sl
   15c38:	bl	141a8 <table_get_column_compare_function@@Base>
   15c3c:	mov	r7, r0
   15c40:	mvn	r8, #0
   15c44:	cmp	r6, #0
   15c48:	beq	15c90 <table_find_double@@Base+0x84>
   15c4c:	cmp	r4, #1
   15c50:	blt	15cd8 <table_find_double@@Base+0xcc>
   15c54:	mov	r9, sp
   15c58:	sub	r6, r4, #1
   15c5c:	mov	r0, r5
   15c60:	mov	r2, sl
   15c64:	mov	r1, r6
   15c68:	bl	16e18 <table_get@@Base>
   15c6c:	mov	r1, r0
   15c70:	mov	r0, r9
   15c74:	blx	r7
   15c78:	cmp	r0, #0
   15c7c:	beq	15ce4 <table_find_double@@Base+0xd8>
   15c80:	cmp	r6, #0
   15c84:	mov	r4, r6
   15c88:	bgt	15c58 <table_find_double@@Base+0x4c>
   15c8c:	b	15cd8 <table_find_double@@Base+0xcc>
   15c90:	cmp	r4, #1
   15c94:	blt	15cd8 <table_find_double@@Base+0xcc>
   15c98:	sub	r4, r4, #1
   15c9c:	mov	r6, #0
   15ca0:	mov	r9, sp
   15ca4:	mov	r0, r5
   15ca8:	mov	r1, r6
   15cac:	mov	r2, sl
   15cb0:	bl	16e18 <table_get@@Base>
   15cb4:	mov	r1, r0
   15cb8:	mov	r0, r9
   15cbc:	blx	r7
   15cc0:	cmp	r0, #0
   15cc4:	beq	15cf4 <table_find_double@@Base+0xe8>
   15cc8:	add	r0, r6, #1
   15ccc:	cmp	r6, r4
   15cd0:	mov	r6, r0
   15cd4:	blt	15ca4 <table_find_double@@Base+0x98>
   15cd8:	mov	r0, r8
   15cdc:	sub	sp, fp, #28
   15ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ce4:	sub	r8, r4, #1
   15ce8:	mov	r0, r8
   15cec:	sub	sp, fp, #28
   15cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf4:	mov	r8, r6
   15cf8:	mov	r0, r8
   15cfc:	sub	sp, fp, #28
   15d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d04 <table_find_ldouble@@Base>:
   15d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d08:	add	fp, sp, #28
   15d0c:	sub	sp, sp, #12
   15d10:	mov	r6, r2
   15d14:	mov	sl, r1
   15d18:	mov	r5, r0
   15d1c:	vstr	d0, [sp]
   15d20:	bl	170ec <table_get_row_length@@Base>
   15d24:	mov	r4, r0
   15d28:	mov	r0, r5
   15d2c:	mov	r1, sl
   15d30:	bl	141a8 <table_get_column_compare_function@@Base>
   15d34:	mov	r7, r0
   15d38:	mvn	r8, #0
   15d3c:	cmp	r6, #0
   15d40:	beq	15d88 <table_find_ldouble@@Base+0x84>
   15d44:	cmp	r4, #1
   15d48:	blt	15dd0 <table_find_ldouble@@Base+0xcc>
   15d4c:	mov	r9, sp
   15d50:	sub	r6, r4, #1
   15d54:	mov	r0, r5
   15d58:	mov	r2, sl
   15d5c:	mov	r1, r6
   15d60:	bl	16e18 <table_get@@Base>
   15d64:	mov	r1, r0
   15d68:	mov	r0, r9
   15d6c:	blx	r7
   15d70:	cmp	r0, #0
   15d74:	beq	15ddc <table_find_ldouble@@Base+0xd8>
   15d78:	cmp	r6, #0
   15d7c:	mov	r4, r6
   15d80:	bgt	15d50 <table_find_ldouble@@Base+0x4c>
   15d84:	b	15dd0 <table_find_ldouble@@Base+0xcc>
   15d88:	cmp	r4, #1
   15d8c:	blt	15dd0 <table_find_ldouble@@Base+0xcc>
   15d90:	sub	r4, r4, #1
   15d94:	mov	r6, #0
   15d98:	mov	r9, sp
   15d9c:	mov	r0, r5
   15da0:	mov	r1, r6
   15da4:	mov	r2, sl
   15da8:	bl	16e18 <table_get@@Base>
   15dac:	mov	r1, r0
   15db0:	mov	r0, r9
   15db4:	blx	r7
   15db8:	cmp	r0, #0
   15dbc:	beq	15dec <table_find_ldouble@@Base+0xe8>
   15dc0:	add	r0, r6, #1
   15dc4:	cmp	r6, r4
   15dc8:	mov	r6, r0
   15dcc:	blt	15d9c <table_find_ldouble@@Base+0x98>
   15dd0:	mov	r0, r8
   15dd4:	sub	sp, fp, #28
   15dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ddc:	sub	r8, r4, #1
   15de0:	mov	r0, r8
   15de4:	sub	sp, fp, #28
   15de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dec:	mov	r8, r6
   15df0:	mov	r0, r8
   15df4:	sub	sp, fp, #28
   15df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015dfc <table_find_char@@Base>:
   15dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e00:	add	fp, sp, #28
   15e04:	sub	sp, sp, #4
   15e08:	mov	r6, r3
   15e0c:	mov	sl, r1
   15e10:	mov	r5, r0
   15e14:	strb	r2, [sp, #3]
   15e18:	bl	170ec <table_get_row_length@@Base>
   15e1c:	mov	r4, r0
   15e20:	mov	r0, r5
   15e24:	mov	r1, sl
   15e28:	bl	141a8 <table_get_column_compare_function@@Base>
   15e2c:	mov	r7, r0
   15e30:	mvn	r8, #0
   15e34:	cmp	r6, #0
   15e38:	beq	15e80 <table_find_char@@Base+0x84>
   15e3c:	cmp	r4, #1
   15e40:	blt	15ec8 <table_find_char@@Base+0xcc>
   15e44:	add	r9, sp, #3
   15e48:	sub	r6, r4, #1
   15e4c:	mov	r0, r5
   15e50:	mov	r2, sl
   15e54:	mov	r1, r6
   15e58:	bl	16e18 <table_get@@Base>
   15e5c:	mov	r1, r0
   15e60:	mov	r0, r9
   15e64:	blx	r7
   15e68:	cmp	r0, #0
   15e6c:	beq	15ed4 <table_find_char@@Base+0xd8>
   15e70:	cmp	r6, #0
   15e74:	mov	r4, r6
   15e78:	bgt	15e48 <table_find_char@@Base+0x4c>
   15e7c:	b	15ec8 <table_find_char@@Base+0xcc>
   15e80:	cmp	r4, #1
   15e84:	blt	15ec8 <table_find_char@@Base+0xcc>
   15e88:	sub	r4, r4, #1
   15e8c:	mov	r6, #0
   15e90:	add	r9, sp, #3
   15e94:	mov	r0, r5
   15e98:	mov	r1, r6
   15e9c:	mov	r2, sl
   15ea0:	bl	16e18 <table_get@@Base>
   15ea4:	mov	r1, r0
   15ea8:	mov	r0, r9
   15eac:	blx	r7
   15eb0:	cmp	r0, #0
   15eb4:	beq	15ee4 <table_find_char@@Base+0xe8>
   15eb8:	add	r0, r6, #1
   15ebc:	cmp	r6, r4
   15ec0:	mov	r6, r0
   15ec4:	blt	15e94 <table_find_char@@Base+0x98>
   15ec8:	mov	r0, r8
   15ecc:	sub	sp, fp, #28
   15ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ed4:	sub	r8, r4, #1
   15ed8:	mov	r0, r8
   15edc:	sub	sp, fp, #28
   15ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ee4:	mov	r8, r6
   15ee8:	mov	r0, r8
   15eec:	sub	sp, fp, #28
   15ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015ef4 <table_find_uchar@@Base>:
   15ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ef8:	add	fp, sp, #28
   15efc:	sub	sp, sp, #4
   15f00:	mov	r6, r3
   15f04:	mov	sl, r1
   15f08:	mov	r5, r0
   15f0c:	strb	r2, [sp, #3]
   15f10:	bl	170ec <table_get_row_length@@Base>
   15f14:	mov	r4, r0
   15f18:	mov	r0, r5
   15f1c:	mov	r1, sl
   15f20:	bl	141a8 <table_get_column_compare_function@@Base>
   15f24:	mov	r7, r0
   15f28:	mvn	r8, #0
   15f2c:	cmp	r6, #0
   15f30:	beq	15f78 <table_find_uchar@@Base+0x84>
   15f34:	cmp	r4, #1
   15f38:	blt	15fc0 <table_find_uchar@@Base+0xcc>
   15f3c:	add	r9, sp, #3
   15f40:	sub	r6, r4, #1
   15f44:	mov	r0, r5
   15f48:	mov	r2, sl
   15f4c:	mov	r1, r6
   15f50:	bl	16e18 <table_get@@Base>
   15f54:	mov	r1, r0
   15f58:	mov	r0, r9
   15f5c:	blx	r7
   15f60:	cmp	r0, #0
   15f64:	beq	15fcc <table_find_uchar@@Base+0xd8>
   15f68:	cmp	r6, #0
   15f6c:	mov	r4, r6
   15f70:	bgt	15f40 <table_find_uchar@@Base+0x4c>
   15f74:	b	15fc0 <table_find_uchar@@Base+0xcc>
   15f78:	cmp	r4, #1
   15f7c:	blt	15fc0 <table_find_uchar@@Base+0xcc>
   15f80:	sub	r4, r4, #1
   15f84:	mov	r6, #0
   15f88:	add	r9, sp, #3
   15f8c:	mov	r0, r5
   15f90:	mov	r1, r6
   15f94:	mov	r2, sl
   15f98:	bl	16e18 <table_get@@Base>
   15f9c:	mov	r1, r0
   15fa0:	mov	r0, r9
   15fa4:	blx	r7
   15fa8:	cmp	r0, #0
   15fac:	beq	15fdc <table_find_uchar@@Base+0xe8>
   15fb0:	add	r0, r6, #1
   15fb4:	cmp	r6, r4
   15fb8:	mov	r6, r0
   15fbc:	blt	15f8c <table_find_uchar@@Base+0x98>
   15fc0:	mov	r0, r8
   15fc4:	sub	sp, fp, #28
   15fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fcc:	sub	r8, r4, #1
   15fd0:	mov	r0, r8
   15fd4:	sub	sp, fp, #28
   15fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fdc:	mov	r8, r6
   15fe0:	mov	r0, r8
   15fe4:	sub	sp, fp, #28
   15fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015fec <table_find_string@@Base>:
   15fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ff0:	add	fp, sp, #28
   15ff4:	sub	sp, sp, #4
   15ff8:	mov	r6, r3
   15ffc:	mov	sl, r1
   16000:	mov	r5, r0
   16004:	str	r2, [sp]
   16008:	bl	170ec <table_get_row_length@@Base>
   1600c:	mov	r4, r0
   16010:	mov	r0, r5
   16014:	mov	r1, sl
   16018:	bl	141a8 <table_get_column_compare_function@@Base>
   1601c:	mov	r7, r0
   16020:	mvn	r8, #0
   16024:	cmp	r6, #0
   16028:	beq	16070 <table_find_string@@Base+0x84>
   1602c:	cmp	r4, #1
   16030:	blt	160b8 <table_find_string@@Base+0xcc>
   16034:	mov	r9, sp
   16038:	sub	r6, r4, #1
   1603c:	mov	r0, r5
   16040:	mov	r2, sl
   16044:	mov	r1, r6
   16048:	bl	16e18 <table_get@@Base>
   1604c:	mov	r1, r0
   16050:	mov	r0, r9
   16054:	blx	r7
   16058:	cmp	r0, #0
   1605c:	beq	160c4 <table_find_string@@Base+0xd8>
   16060:	cmp	r6, #0
   16064:	mov	r4, r6
   16068:	bgt	16038 <table_find_string@@Base+0x4c>
   1606c:	b	160b8 <table_find_string@@Base+0xcc>
   16070:	cmp	r4, #1
   16074:	blt	160b8 <table_find_string@@Base+0xcc>
   16078:	sub	r4, r4, #1
   1607c:	mov	r6, #0
   16080:	mov	r9, sp
   16084:	mov	r0, r5
   16088:	mov	r1, r6
   1608c:	mov	r2, sl
   16090:	bl	16e18 <table_get@@Base>
   16094:	mov	r1, r0
   16098:	mov	r0, r9
   1609c:	blx	r7
   160a0:	cmp	r0, #0
   160a4:	beq	160d4 <table_find_string@@Base+0xe8>
   160a8:	add	r0, r6, #1
   160ac:	cmp	r6, r4
   160b0:	mov	r6, r0
   160b4:	blt	16084 <table_find_string@@Base+0x98>
   160b8:	mov	r0, r8
   160bc:	sub	sp, fp, #28
   160c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160c4:	sub	r8, r4, #1
   160c8:	mov	r0, r8
   160cc:	sub	sp, fp, #28
   160d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160d4:	mov	r8, r6
   160d8:	mov	r0, r8
   160dc:	sub	sp, fp, #28
   160e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000160e4 <table_find_ptr@@Base>:
   160e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160e8:	add	fp, sp, #28
   160ec:	sub	sp, sp, #4
   160f0:	mov	r4, r3
   160f4:	mov	r9, r2
   160f8:	mov	sl, r1
   160fc:	mov	r6, r0
   16100:	bl	170ec <table_get_row_length@@Base>
   16104:	mov	r5, r0
   16108:	mov	r0, r6
   1610c:	mov	r1, sl
   16110:	bl	141a8 <table_get_column_compare_function@@Base>
   16114:	mov	r7, r0
   16118:	mvn	r8, #0
   1611c:	cmp	r4, #0
   16120:	beq	16164 <table_find_ptr@@Base+0x80>
   16124:	cmp	r5, #1
   16128:	blt	161a8 <table_find_ptr@@Base+0xc4>
   1612c:	sub	r4, r5, #1
   16130:	mov	r0, r6
   16134:	mov	r2, sl
   16138:	mov	r1, r4
   1613c:	bl	16e18 <table_get@@Base>
   16140:	mov	r1, r0
   16144:	mov	r0, r9
   16148:	blx	r7
   1614c:	cmp	r0, #0
   16150:	beq	161b4 <table_find_ptr@@Base+0xd0>
   16154:	cmp	r4, #0
   16158:	mov	r5, r4
   1615c:	bgt	1612c <table_find_ptr@@Base+0x48>
   16160:	b	161a8 <table_find_ptr@@Base+0xc4>
   16164:	cmp	r5, #1
   16168:	blt	161a8 <table_find_ptr@@Base+0xc4>
   1616c:	sub	r5, r5, #1
   16170:	mov	r4, #0
   16174:	mov	r0, r6
   16178:	mov	r1, r4
   1617c:	mov	r2, sl
   16180:	bl	16e18 <table_get@@Base>
   16184:	mov	r1, r0
   16188:	mov	r0, r9
   1618c:	blx	r7
   16190:	cmp	r0, #0
   16194:	beq	161c4 <table_find_ptr@@Base+0xe0>
   16198:	add	r0, r4, #1
   1619c:	cmp	r4, r5
   161a0:	mov	r4, r0
   161a4:	blt	16174 <table_find_ptr@@Base+0x90>
   161a8:	mov	r0, r8
   161ac:	sub	sp, fp, #28
   161b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161b4:	sub	r8, r5, #1
   161b8:	mov	r0, r8
   161bc:	sub	sp, fp, #28
   161c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161c4:	mov	r8, r4
   161c8:	mov	r0, r8
   161cc:	sub	sp, fp, #28
   161d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000161d4 <table_sorted_find@@Base>:
   161d4:	push	{r4, r5, r6, r7, fp, lr}
   161d8:	add	fp, sp, #16
   161dc:	sub	sp, sp, #8
   161e0:	mov	r4, r3
   161e4:	mov	r5, r2
   161e8:	mov	r6, r1
   161ec:	mov	r7, r0
   161f0:	bl	170ec <table_get_row_length@@Base>
   161f4:	sub	r0, r0, #1
   161f8:	mov	r1, #0
   161fc:	mov	r2, r5
   16200:	mov	r3, r4
   16204:	str	r1, [sp]
   16208:	str	r0, [sp, #4]
   1620c:	mov	r0, r7
   16210:	mov	r1, r6
   16214:	bl	16220 <table_sorted_subset_find@@Base>
   16218:	sub	sp, fp, #16
   1621c:	pop	{r4, r5, r6, r7, fp, pc}

00016220 <table_sorted_subset_find@@Base>:
   16220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16224:	add	fp, sp, #28
   16228:	push	{r3}		; (str r3, [sp, #-4]!)
   1622c:	ldr	r6, [fp, #12]
   16230:	ldr	r8, [fp, #8]
   16234:	mov	r9, r2
   16238:	mov	sl, r1
   1623c:	mov	r7, r0
   16240:	b	16248 <table_sorted_subset_find@@Base+0x28>
   16244:	sub	r6, r4, #1
   16248:	mov	r0, r7
   1624c:	mov	r1, sl
   16250:	bl	141a8 <table_get_column_compare_function@@Base>
   16254:	mov	r5, r0
   16258:	sub	r0, r6, r8
   1625c:	mov	r2, sl
   16260:	add	r0, r0, r0, lsr #31
   16264:	add	r4, r8, r0, asr #1
   16268:	mov	r0, r7
   1626c:	mov	r1, r4
   16270:	bl	16e18 <table_get@@Base>
   16274:	mov	r1, r0
   16278:	mov	r0, r9
   1627c:	blx	r5
   16280:	cmp	r6, r8
   16284:	blt	16314 <table_sorted_subset_find@@Base+0xf4>
   16288:	cmn	r0, #1
   1628c:	beq	16244 <table_sorted_subset_find@@Base+0x24>
   16290:	cmp	r0, #1
   16294:	bne	162a0 <table_sorted_subset_find@@Base+0x80>
   16298:	mov	r8, r4
   1629c:	b	16248 <table_sorted_subset_find@@Base+0x28>
   162a0:	cmp	r0, #0
   162a4:	bne	16314 <table_sorted_subset_find@@Base+0xf4>
   162a8:	ldr	r6, [sp]
   162ac:	cmp	r6, #0
   162b0:	beq	162dc <table_sorted_subset_find@@Base+0xbc>
   162b4:	add	r4, r4, #1
   162b8:	mov	r0, r7
   162bc:	mov	r2, sl
   162c0:	mov	r1, r4
   162c4:	bl	16e18 <table_get@@Base>
   162c8:	mov	r1, r9
   162cc:	blx	r5
   162d0:	cmp	r0, #0
   162d4:	beq	162b4 <table_sorted_subset_find@@Base+0x94>
   162d8:	b	16300 <table_sorted_subset_find@@Base+0xe0>
   162dc:	sub	r4, r4, #1
   162e0:	mov	r0, r7
   162e4:	mov	r2, sl
   162e8:	mov	r1, r4
   162ec:	bl	16e18 <table_get@@Base>
   162f0:	mov	r1, r9
   162f4:	blx	r5
   162f8:	cmp	r0, #0
   162fc:	beq	162dc <table_sorted_subset_find@@Base+0xbc>
   16300:	cmp	r6, #0
   16304:	addeq	r0, r4, #1
   16308:	subne	r0, r4, #1
   1630c:	sub	sp, fp, #28
   16310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16314:	rsb	r0, r4, #0
   16318:	sub	sp, fp, #28
   1631c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016320 <table_sorted_find_int@@Base>:
   16320:	push	{r4, r5, r6, sl, fp, lr}
   16324:	add	fp, sp, #16
   16328:	sub	sp, sp, #16
   1632c:	mov	r4, r3
   16330:	mov	r5, r1
   16334:	mov	r6, r0
   16338:	str	r2, [sp, #12]
   1633c:	bl	170ec <table_get_row_length@@Base>
   16340:	sub	r0, r0, #1
   16344:	mov	r1, #0
   16348:	add	r2, sp, #12
   1634c:	mov	r3, r4
   16350:	str	r1, [sp]
   16354:	str	r0, [sp, #4]
   16358:	mov	r0, r6
   1635c:	mov	r1, r5
   16360:	bl	16220 <table_sorted_subset_find@@Base>
   16364:	sub	sp, fp, #16
   16368:	pop	{r4, r5, r6, sl, fp, pc}

0001636c <table_sorted_find_uint@@Base>:
   1636c:	push	{r4, r5, r6, sl, fp, lr}
   16370:	add	fp, sp, #16
   16374:	sub	sp, sp, #16
   16378:	mov	r4, r3
   1637c:	mov	r5, r1
   16380:	mov	r6, r0
   16384:	str	r2, [sp, #12]
   16388:	bl	170ec <table_get_row_length@@Base>
   1638c:	sub	r0, r0, #1
   16390:	mov	r1, #0
   16394:	add	r2, sp, #12
   16398:	mov	r3, r4
   1639c:	str	r1, [sp]
   163a0:	str	r0, [sp, #4]
   163a4:	mov	r0, r6
   163a8:	mov	r1, r5
   163ac:	bl	16220 <table_sorted_subset_find@@Base>
   163b0:	sub	sp, fp, #16
   163b4:	pop	{r4, r5, r6, sl, fp, pc}

000163b8 <table_sorted_find_int8@@Base>:
   163b8:	push	{r4, r5, r6, sl, fp, lr}
   163bc:	add	fp, sp, #16
   163c0:	sub	sp, sp, #16
   163c4:	mov	r4, r3
   163c8:	mov	r5, r1
   163cc:	mov	r6, r0
   163d0:	strb	r2, [sp, #15]
   163d4:	bl	170ec <table_get_row_length@@Base>
   163d8:	sub	r0, r0, #1
   163dc:	mov	r1, #0
   163e0:	add	r2, sp, #15
   163e4:	mov	r3, r4
   163e8:	str	r1, [sp]
   163ec:	str	r0, [sp, #4]
   163f0:	mov	r0, r6
   163f4:	mov	r1, r5
   163f8:	bl	16220 <table_sorted_subset_find@@Base>
   163fc:	sub	sp, fp, #16
   16400:	pop	{r4, r5, r6, sl, fp, pc}

00016404 <table_sorted_find_uint8@@Base>:
   16404:	push	{r4, r5, r6, sl, fp, lr}
   16408:	add	fp, sp, #16
   1640c:	sub	sp, sp, #16
   16410:	mov	r4, r3
   16414:	mov	r5, r1
   16418:	mov	r6, r0
   1641c:	strb	r2, [sp, #15]
   16420:	bl	170ec <table_get_row_length@@Base>
   16424:	sub	r0, r0, #1
   16428:	mov	r1, #0
   1642c:	add	r2, sp, #15
   16430:	mov	r3, r4
   16434:	str	r1, [sp]
   16438:	str	r0, [sp, #4]
   1643c:	mov	r0, r6
   16440:	mov	r1, r5
   16444:	bl	16220 <table_sorted_subset_find@@Base>
   16448:	sub	sp, fp, #16
   1644c:	pop	{r4, r5, r6, sl, fp, pc}

00016450 <table_sorted_find_int16@@Base>:
   16450:	push	{r4, r5, r6, sl, fp, lr}
   16454:	add	fp, sp, #16
   16458:	sub	sp, sp, #16
   1645c:	mov	r4, r3
   16460:	mov	r5, r1
   16464:	mov	r6, r0
   16468:	strh	r2, [sp, #14]
   1646c:	bl	170ec <table_get_row_length@@Base>
   16470:	sub	r0, r0, #1
   16474:	mov	r1, #0
   16478:	add	r2, sp, #14
   1647c:	mov	r3, r4
   16480:	str	r1, [sp]
   16484:	str	r0, [sp, #4]
   16488:	mov	r0, r6
   1648c:	mov	r1, r5
   16490:	bl	16220 <table_sorted_subset_find@@Base>
   16494:	sub	sp, fp, #16
   16498:	pop	{r4, r5, r6, sl, fp, pc}

0001649c <table_sorted_find_uint16@@Base>:
   1649c:	push	{r4, r5, r6, sl, fp, lr}
   164a0:	add	fp, sp, #16
   164a4:	sub	sp, sp, #16
   164a8:	mov	r4, r3
   164ac:	mov	r5, r1
   164b0:	mov	r6, r0
   164b4:	strh	r2, [sp, #14]
   164b8:	bl	170ec <table_get_row_length@@Base>
   164bc:	sub	r0, r0, #1
   164c0:	mov	r1, #0
   164c4:	add	r2, sp, #14
   164c8:	mov	r3, r4
   164cc:	str	r1, [sp]
   164d0:	str	r0, [sp, #4]
   164d4:	mov	r0, r6
   164d8:	mov	r1, r5
   164dc:	bl	16220 <table_sorted_subset_find@@Base>
   164e0:	sub	sp, fp, #16
   164e4:	pop	{r4, r5, r6, sl, fp, pc}

000164e8 <table_sorted_find_int32@@Base>:
   164e8:	push	{r4, r5, r6, sl, fp, lr}
   164ec:	add	fp, sp, #16
   164f0:	sub	sp, sp, #16
   164f4:	mov	r4, r3
   164f8:	mov	r5, r1
   164fc:	mov	r6, r0
   16500:	str	r2, [sp, #12]
   16504:	bl	170ec <table_get_row_length@@Base>
   16508:	sub	r0, r0, #1
   1650c:	mov	r1, #0
   16510:	add	r2, sp, #12
   16514:	mov	r3, r4
   16518:	str	r1, [sp]
   1651c:	str	r0, [sp, #4]
   16520:	mov	r0, r6
   16524:	mov	r1, r5
   16528:	bl	16220 <table_sorted_subset_find@@Base>
   1652c:	sub	sp, fp, #16
   16530:	pop	{r4, r5, r6, sl, fp, pc}

00016534 <table_sorted_find_uint32@@Base>:
   16534:	push	{r4, r5, r6, sl, fp, lr}
   16538:	add	fp, sp, #16
   1653c:	sub	sp, sp, #16
   16540:	mov	r4, r3
   16544:	mov	r5, r1
   16548:	mov	r6, r0
   1654c:	str	r2, [sp, #12]
   16550:	bl	170ec <table_get_row_length@@Base>
   16554:	sub	r0, r0, #1
   16558:	mov	r1, #0
   1655c:	add	r2, sp, #12
   16560:	mov	r3, r4
   16564:	str	r1, [sp]
   16568:	str	r0, [sp, #4]
   1656c:	mov	r0, r6
   16570:	mov	r1, r5
   16574:	bl	16220 <table_sorted_subset_find@@Base>
   16578:	sub	sp, fp, #16
   1657c:	pop	{r4, r5, r6, sl, fp, pc}

00016580 <table_sorted_find_int64@@Base>:
   16580:	push	{r4, r5, fp, lr}
   16584:	add	fp, sp, #8
   16588:	sub	sp, sp, #16
   1658c:	mov	r4, r1
   16590:	mov	r5, r0
   16594:	str	r3, [sp, #12]
   16598:	str	r2, [sp, #8]
   1659c:	bl	170ec <table_get_row_length@@Base>
   165a0:	ldr	r3, [fp, #8]
   165a4:	sub	r0, r0, #1
   165a8:	mov	r1, #0
   165ac:	add	r2, sp, #8
   165b0:	str	r1, [sp]
   165b4:	str	r0, [sp, #4]
   165b8:	mov	r0, r5
   165bc:	mov	r1, r4
   165c0:	bl	16220 <table_sorted_subset_find@@Base>
   165c4:	sub	sp, fp, #8
   165c8:	pop	{r4, r5, fp, pc}

000165cc <table_sorted_find_uint64@@Base>:
   165cc:	push	{r4, r5, fp, lr}
   165d0:	add	fp, sp, #8
   165d4:	sub	sp, sp, #16
   165d8:	mov	r4, r1
   165dc:	mov	r5, r0
   165e0:	str	r3, [sp, #12]
   165e4:	str	r2, [sp, #8]
   165e8:	bl	170ec <table_get_row_length@@Base>
   165ec:	ldr	r3, [fp, #8]
   165f0:	sub	r0, r0, #1
   165f4:	mov	r1, #0
   165f8:	add	r2, sp, #8
   165fc:	str	r1, [sp]
   16600:	str	r0, [sp, #4]
   16604:	mov	r0, r5
   16608:	mov	r1, r4
   1660c:	bl	16220 <table_sorted_subset_find@@Base>
   16610:	sub	sp, fp, #8
   16614:	pop	{r4, r5, fp, pc}

00016618 <table_sorted_find_short@@Base>:
   16618:	push	{r4, r5, r6, sl, fp, lr}
   1661c:	add	fp, sp, #16
   16620:	sub	sp, sp, #16
   16624:	mov	r4, r3
   16628:	mov	r5, r1
   1662c:	mov	r6, r0
   16630:	strh	r2, [sp, #14]
   16634:	bl	170ec <table_get_row_length@@Base>
   16638:	sub	r0, r0, #1
   1663c:	mov	r1, #0
   16640:	add	r2, sp, #14
   16644:	mov	r3, r4
   16648:	str	r1, [sp]
   1664c:	str	r0, [sp, #4]
   16650:	mov	r0, r6
   16654:	mov	r1, r5
   16658:	bl	16220 <table_sorted_subset_find@@Base>
   1665c:	sub	sp, fp, #16
   16660:	pop	{r4, r5, r6, sl, fp, pc}

00016664 <table_sorted_find_ushort@@Base>:
   16664:	push	{r4, r5, r6, sl, fp, lr}
   16668:	add	fp, sp, #16
   1666c:	sub	sp, sp, #16
   16670:	mov	r4, r3
   16674:	mov	r5, r1
   16678:	mov	r6, r0
   1667c:	strh	r2, [sp, #14]
   16680:	bl	170ec <table_get_row_length@@Base>
   16684:	sub	r0, r0, #1
   16688:	mov	r1, #0
   1668c:	add	r2, sp, #14
   16690:	mov	r3, r4
   16694:	str	r1, [sp]
   16698:	str	r0, [sp, #4]
   1669c:	mov	r0, r6
   166a0:	mov	r1, r5
   166a4:	bl	16220 <table_sorted_subset_find@@Base>
   166a8:	sub	sp, fp, #16
   166ac:	pop	{r4, r5, r6, sl, fp, pc}

000166b0 <table_sorted_find_long@@Base>:
   166b0:	push	{r4, r5, r6, sl, fp, lr}
   166b4:	add	fp, sp, #16
   166b8:	sub	sp, sp, #16
   166bc:	mov	r4, r3
   166c0:	mov	r5, r1
   166c4:	mov	r6, r0
   166c8:	str	r2, [sp, #12]
   166cc:	bl	170ec <table_get_row_length@@Base>
   166d0:	sub	r0, r0, #1
   166d4:	mov	r1, #0
   166d8:	add	r2, sp, #12
   166dc:	mov	r3, r4
   166e0:	str	r1, [sp]
   166e4:	str	r0, [sp, #4]
   166e8:	mov	r0, r6
   166ec:	mov	r1, r5
   166f0:	bl	16220 <table_sorted_subset_find@@Base>
   166f4:	sub	sp, fp, #16
   166f8:	pop	{r4, r5, r6, sl, fp, pc}

000166fc <table_sorted_find_ulong@@Base>:
   166fc:	push	{r4, r5, r6, sl, fp, lr}
   16700:	add	fp, sp, #16
   16704:	sub	sp, sp, #16
   16708:	mov	r4, r3
   1670c:	mov	r5, r1
   16710:	mov	r6, r0
   16714:	str	r2, [sp, #12]
   16718:	bl	170ec <table_get_row_length@@Base>
   1671c:	sub	r0, r0, #1
   16720:	mov	r1, #0
   16724:	add	r2, sp, #12
   16728:	mov	r3, r4
   1672c:	str	r1, [sp]
   16730:	str	r0, [sp, #4]
   16734:	mov	r0, r6
   16738:	mov	r1, r5
   1673c:	bl	16220 <table_sorted_subset_find@@Base>
   16740:	sub	sp, fp, #16
   16744:	pop	{r4, r5, r6, sl, fp, pc}

00016748 <table_sorted_find_llong@@Base>:
   16748:	push	{r4, r5, fp, lr}
   1674c:	add	fp, sp, #8
   16750:	sub	sp, sp, #16
   16754:	mov	r4, r1
   16758:	mov	r5, r0
   1675c:	str	r3, [sp, #12]
   16760:	str	r2, [sp, #8]
   16764:	bl	170ec <table_get_row_length@@Base>
   16768:	ldr	r3, [fp, #8]
   1676c:	sub	r0, r0, #1
   16770:	mov	r1, #0
   16774:	add	r2, sp, #8
   16778:	str	r1, [sp]
   1677c:	str	r0, [sp, #4]
   16780:	mov	r0, r5
   16784:	mov	r1, r4
   16788:	bl	16220 <table_sorted_subset_find@@Base>
   1678c:	sub	sp, fp, #8
   16790:	pop	{r4, r5, fp, pc}

00016794 <table_sorted_find_ullong@@Base>:
   16794:	push	{r4, r5, fp, lr}
   16798:	add	fp, sp, #8
   1679c:	sub	sp, sp, #16
   167a0:	mov	r4, r1
   167a4:	mov	r5, r0
   167a8:	str	r3, [sp, #12]
   167ac:	str	r2, [sp, #8]
   167b0:	bl	170ec <table_get_row_length@@Base>
   167b4:	ldr	r3, [fp, #8]
   167b8:	sub	r0, r0, #1
   167bc:	mov	r1, #0
   167c0:	add	r2, sp, #8
   167c4:	str	r1, [sp]
   167c8:	str	r0, [sp, #4]
   167cc:	mov	r0, r5
   167d0:	mov	r1, r4
   167d4:	bl	16220 <table_sorted_subset_find@@Base>
   167d8:	sub	sp, fp, #8
   167dc:	pop	{r4, r5, fp, pc}

000167e0 <table_sorted_find_float@@Base>:
   167e0:	push	{r4, r5, r6, sl, fp, lr}
   167e4:	add	fp, sp, #16
   167e8:	sub	sp, sp, #16
   167ec:	mov	r4, r2
   167f0:	mov	r5, r1
   167f4:	mov	r6, r0
   167f8:	vstr	s0, [sp, #12]
   167fc:	bl	170ec <table_get_row_length@@Base>
   16800:	sub	r0, r0, #1
   16804:	mov	r1, #0
   16808:	add	r2, sp, #12
   1680c:	mov	r3, r4
   16810:	str	r1, [sp]
   16814:	str	r0, [sp, #4]
   16818:	mov	r0, r6
   1681c:	mov	r1, r5
   16820:	bl	16220 <table_sorted_subset_find@@Base>
   16824:	sub	sp, fp, #16
   16828:	pop	{r4, r5, r6, sl, fp, pc}

0001682c <table_sorted_find_double@@Base>:
   1682c:	push	{r4, r5, r6, sl, fp, lr}
   16830:	add	fp, sp, #16
   16834:	sub	sp, sp, #16
   16838:	mov	r4, r2
   1683c:	mov	r5, r1
   16840:	mov	r6, r0
   16844:	vstr	d0, [sp, #8]
   16848:	bl	170ec <table_get_row_length@@Base>
   1684c:	sub	r0, r0, #1
   16850:	mov	r1, #0
   16854:	add	r2, sp, #8
   16858:	mov	r3, r4
   1685c:	str	r1, [sp]
   16860:	str	r0, [sp, #4]
   16864:	mov	r0, r6
   16868:	mov	r1, r5
   1686c:	bl	16220 <table_sorted_subset_find@@Base>
   16870:	sub	sp, fp, #16
   16874:	pop	{r4, r5, r6, sl, fp, pc}

00016878 <table_sorted_find_ldouble@@Base>:
   16878:	push	{r4, r5, r6, sl, fp, lr}
   1687c:	add	fp, sp, #16
   16880:	sub	sp, sp, #16
   16884:	mov	r4, r2
   16888:	mov	r5, r1
   1688c:	mov	r6, r0
   16890:	vstr	d0, [sp, #8]
   16894:	bl	170ec <table_get_row_length@@Base>
   16898:	sub	r0, r0, #1
   1689c:	mov	r1, #0
   168a0:	add	r2, sp, #8
   168a4:	mov	r3, r4
   168a8:	str	r1, [sp]
   168ac:	str	r0, [sp, #4]
   168b0:	mov	r0, r6
   168b4:	mov	r1, r5
   168b8:	bl	16220 <table_sorted_subset_find@@Base>
   168bc:	sub	sp, fp, #16
   168c0:	pop	{r4, r5, r6, sl, fp, pc}

000168c4 <table_sorted_find_char@@Base>:
   168c4:	push	{r4, r5, r6, sl, fp, lr}
   168c8:	add	fp, sp, #16
   168cc:	sub	sp, sp, #16
   168d0:	mov	r4, r3
   168d4:	mov	r5, r1
   168d8:	mov	r6, r0
   168dc:	strb	r2, [sp, #15]
   168e0:	bl	170ec <table_get_row_length@@Base>
   168e4:	sub	r0, r0, #1
   168e8:	mov	r1, #0
   168ec:	add	r2, sp, #15
   168f0:	mov	r3, r4
   168f4:	str	r1, [sp]
   168f8:	str	r0, [sp, #4]
   168fc:	mov	r0, r6
   16900:	mov	r1, r5
   16904:	bl	16220 <table_sorted_subset_find@@Base>
   16908:	sub	sp, fp, #16
   1690c:	pop	{r4, r5, r6, sl, fp, pc}

00016910 <table_sorted_find_uchar@@Base>:
   16910:	push	{r4, r5, r6, sl, fp, lr}
   16914:	add	fp, sp, #16
   16918:	sub	sp, sp, #16
   1691c:	mov	r4, r3
   16920:	mov	r5, r1
   16924:	mov	r6, r0
   16928:	strb	r2, [sp, #15]
   1692c:	bl	170ec <table_get_row_length@@Base>
   16930:	sub	r0, r0, #1
   16934:	mov	r1, #0
   16938:	add	r2, sp, #15
   1693c:	mov	r3, r4
   16940:	str	r1, [sp]
   16944:	str	r0, [sp, #4]
   16948:	mov	r0, r6
   1694c:	mov	r1, r5
   16950:	bl	16220 <table_sorted_subset_find@@Base>
   16954:	sub	sp, fp, #16
   16958:	pop	{r4, r5, r6, sl, fp, pc}

0001695c <table_sorted_find_string@@Base>:
   1695c:	push	{r4, r5, r6, r7, fp, lr}
   16960:	add	fp, sp, #16
   16964:	sub	sp, sp, #8
   16968:	mov	r4, r3
   1696c:	mov	r5, r2
   16970:	mov	r6, r1
   16974:	mov	r7, r0
   16978:	bl	170ec <table_get_row_length@@Base>
   1697c:	sub	r0, r0, #1
   16980:	mov	r1, #0
   16984:	mov	r2, r5
   16988:	mov	r3, r4
   1698c:	str	r1, [sp]
   16990:	str	r0, [sp, #4]
   16994:	mov	r0, r7
   16998:	mov	r1, r6
   1699c:	bl	16220 <table_sorted_subset_find@@Base>
   169a0:	sub	sp, fp, #16
   169a4:	pop	{r4, r5, r6, r7, fp, pc}

000169a8 <table_sorted_find_ptr@@Base>:
   169a8:	push	{r4, r5, r6, r7, fp, lr}
   169ac:	add	fp, sp, #16
   169b0:	sub	sp, sp, #8
   169b4:	mov	r4, r3
   169b8:	mov	r5, r2
   169bc:	mov	r6, r1
   169c0:	mov	r7, r0
   169c4:	bl	170ec <table_get_row_length@@Base>
   169c8:	sub	r0, r0, #1
   169cc:	mov	r1, #0
   169d0:	mov	r2, r5
   169d4:	mov	r3, r4
   169d8:	str	r1, [sp]
   169dc:	str	r0, [sp, #4]
   169e0:	mov	r0, r7
   169e4:	mov	r1, r6
   169e8:	bl	16220 <table_sorted_subset_find@@Base>
   169ec:	sub	sp, fp, #16
   169f0:	pop	{r4, r5, r6, r7, fp, pc}

000169f4 <table_sorted_subset_find_int@@Base>:
   169f4:	push	{fp, lr}
   169f8:	mov	fp, sp
   169fc:	sub	sp, sp, #16
   16a00:	str	r2, [fp, #-4]
   16a04:	ldr	r2, [fp, #12]
   16a08:	str	r2, [sp, #4]
   16a0c:	ldr	r2, [fp, #8]
   16a10:	str	r2, [sp]
   16a14:	sub	r2, fp, #4
   16a18:	bl	16220 <table_sorted_subset_find@@Base>
   16a1c:	mov	sp, fp
   16a20:	pop	{fp, pc}

00016a24 <table_sorted_subset_find_uint@@Base>:
   16a24:	push	{fp, lr}
   16a28:	mov	fp, sp
   16a2c:	sub	sp, sp, #16
   16a30:	str	r2, [fp, #-4]
   16a34:	ldr	r2, [fp, #12]
   16a38:	str	r2, [sp, #4]
   16a3c:	ldr	r2, [fp, #8]
   16a40:	str	r2, [sp]
   16a44:	sub	r2, fp, #4
   16a48:	bl	16220 <table_sorted_subset_find@@Base>
   16a4c:	mov	sp, fp
   16a50:	pop	{fp, pc}

00016a54 <table_sorted_subset_find_int8@@Base>:
   16a54:	push	{fp, lr}
   16a58:	mov	fp, sp
   16a5c:	sub	sp, sp, #16
   16a60:	strb	r2, [fp, #-1]
   16a64:	ldr	r2, [fp, #12]
   16a68:	str	r2, [sp, #4]
   16a6c:	ldr	r2, [fp, #8]
   16a70:	str	r2, [sp]
   16a74:	sub	r2, fp, #1
   16a78:	bl	16220 <table_sorted_subset_find@@Base>
   16a7c:	mov	sp, fp
   16a80:	pop	{fp, pc}

00016a84 <table_sorted_subset_find_uint8@@Base>:
   16a84:	push	{fp, lr}
   16a88:	mov	fp, sp
   16a8c:	sub	sp, sp, #16
   16a90:	strb	r2, [fp, #-1]
   16a94:	ldr	r2, [fp, #12]
   16a98:	str	r2, [sp, #4]
   16a9c:	ldr	r2, [fp, #8]
   16aa0:	str	r2, [sp]
   16aa4:	sub	r2, fp, #1
   16aa8:	bl	16220 <table_sorted_subset_find@@Base>
   16aac:	mov	sp, fp
   16ab0:	pop	{fp, pc}

00016ab4 <table_sorted_subset_find_int16@@Base>:
   16ab4:	push	{fp, lr}
   16ab8:	mov	fp, sp
   16abc:	sub	sp, sp, #16
   16ac0:	strh	r2, [fp, #-2]
   16ac4:	ldr	r2, [fp, #12]
   16ac8:	str	r2, [sp, #4]
   16acc:	ldr	r2, [fp, #8]
   16ad0:	str	r2, [sp]
   16ad4:	sub	r2, fp, #2
   16ad8:	bl	16220 <table_sorted_subset_find@@Base>
   16adc:	mov	sp, fp
   16ae0:	pop	{fp, pc}

00016ae4 <table_sorted_subset_find_uint16@@Base>:
   16ae4:	push	{fp, lr}
   16ae8:	mov	fp, sp
   16aec:	sub	sp, sp, #16
   16af0:	strh	r2, [fp, #-2]
   16af4:	ldr	r2, [fp, #12]
   16af8:	str	r2, [sp, #4]
   16afc:	ldr	r2, [fp, #8]
   16b00:	str	r2, [sp]
   16b04:	sub	r2, fp, #2
   16b08:	bl	16220 <table_sorted_subset_find@@Base>
   16b0c:	mov	sp, fp
   16b10:	pop	{fp, pc}

00016b14 <table_sorted_subset_find_int32@@Base>:
   16b14:	push	{fp, lr}
   16b18:	mov	fp, sp
   16b1c:	sub	sp, sp, #16
   16b20:	str	r2, [fp, #-4]
   16b24:	ldr	r2, [fp, #12]
   16b28:	str	r2, [sp, #4]
   16b2c:	ldr	r2, [fp, #8]
   16b30:	str	r2, [sp]
   16b34:	sub	r2, fp, #4
   16b38:	bl	16220 <table_sorted_subset_find@@Base>
   16b3c:	mov	sp, fp
   16b40:	pop	{fp, pc}

00016b44 <table_sorted_subset_find_uint32@@Base>:
   16b44:	push	{fp, lr}
   16b48:	mov	fp, sp
   16b4c:	sub	sp, sp, #16
   16b50:	str	r2, [fp, #-4]
   16b54:	ldr	r2, [fp, #12]
   16b58:	str	r2, [sp, #4]
   16b5c:	ldr	r2, [fp, #8]
   16b60:	str	r2, [sp]
   16b64:	sub	r2, fp, #4
   16b68:	bl	16220 <table_sorted_subset_find@@Base>
   16b6c:	mov	sp, fp
   16b70:	pop	{fp, pc}

00016b74 <table_sorted_subset_find_int64@@Base>:
   16b74:	push	{fp, lr}
   16b78:	mov	fp, sp
   16b7c:	sub	sp, sp, #16
   16b80:	str	r2, [sp, #8]
   16b84:	ldr	r2, [fp, #16]
   16b88:	str	r3, [sp, #12]
   16b8c:	ldr	r3, [fp, #8]
   16b90:	str	r2, [sp, #4]
   16b94:	ldr	r2, [fp, #12]
   16b98:	str	r2, [sp]
   16b9c:	add	r2, sp, #8
   16ba0:	bl	16220 <table_sorted_subset_find@@Base>
   16ba4:	mov	sp, fp
   16ba8:	pop	{fp, pc}

00016bac <table_sorted_subset_find_uint64@@Base>:
   16bac:	push	{fp, lr}
   16bb0:	mov	fp, sp
   16bb4:	sub	sp, sp, #16
   16bb8:	str	r2, [sp, #8]
   16bbc:	ldr	r2, [fp, #16]
   16bc0:	str	r3, [sp, #12]
   16bc4:	ldr	r3, [fp, #8]
   16bc8:	str	r2, [sp, #4]
   16bcc:	ldr	r2, [fp, #12]
   16bd0:	str	r2, [sp]
   16bd4:	add	r2, sp, #8
   16bd8:	bl	16220 <table_sorted_subset_find@@Base>
   16bdc:	mov	sp, fp
   16be0:	pop	{fp, pc}

00016be4 <table_sorted_subset_find_short@@Base>:
   16be4:	push	{fp, lr}
   16be8:	mov	fp, sp
   16bec:	sub	sp, sp, #16
   16bf0:	strh	r2, [fp, #-2]
   16bf4:	ldr	r2, [fp, #12]
   16bf8:	str	r2, [sp, #4]
   16bfc:	ldr	r2, [fp, #8]
   16c00:	str	r2, [sp]
   16c04:	sub	r2, fp, #2
   16c08:	bl	16220 <table_sorted_subset_find@@Base>
   16c0c:	mov	sp, fp
   16c10:	pop	{fp, pc}

00016c14 <table_sorted_subset_find_ushort@@Base>:
   16c14:	push	{fp, lr}
   16c18:	mov	fp, sp
   16c1c:	sub	sp, sp, #16
   16c20:	strh	r2, [fp, #-2]
   16c24:	ldr	r2, [fp, #12]
   16c28:	str	r2, [sp, #4]
   16c2c:	ldr	r2, [fp, #8]
   16c30:	str	r2, [sp]
   16c34:	sub	r2, fp, #2
   16c38:	bl	16220 <table_sorted_subset_find@@Base>
   16c3c:	mov	sp, fp
   16c40:	pop	{fp, pc}

00016c44 <table_sorted_subset_find_long@@Base>:
   16c44:	push	{fp, lr}
   16c48:	mov	fp, sp
   16c4c:	sub	sp, sp, #16
   16c50:	str	r2, [fp, #-4]
   16c54:	ldr	r2, [fp, #12]
   16c58:	str	r2, [sp, #4]
   16c5c:	ldr	r2, [fp, #8]
   16c60:	str	r2, [sp]
   16c64:	sub	r2, fp, #4
   16c68:	bl	16220 <table_sorted_subset_find@@Base>
   16c6c:	mov	sp, fp
   16c70:	pop	{fp, pc}

00016c74 <table_sorted_subset_find_ulong@@Base>:
   16c74:	push	{fp, lr}
   16c78:	mov	fp, sp
   16c7c:	sub	sp, sp, #16
   16c80:	str	r2, [fp, #-4]
   16c84:	ldr	r2, [fp, #12]
   16c88:	str	r2, [sp, #4]
   16c8c:	ldr	r2, [fp, #8]
   16c90:	str	r2, [sp]
   16c94:	sub	r2, fp, #4
   16c98:	bl	16220 <table_sorted_subset_find@@Base>
   16c9c:	mov	sp, fp
   16ca0:	pop	{fp, pc}

00016ca4 <table_sorted_subset_find_llong@@Base>:
   16ca4:	push	{fp, lr}
   16ca8:	mov	fp, sp
   16cac:	sub	sp, sp, #16
   16cb0:	str	r2, [sp, #8]
   16cb4:	ldr	r2, [fp, #16]
   16cb8:	str	r3, [sp, #12]
   16cbc:	ldr	r3, [fp, #8]
   16cc0:	str	r2, [sp, #4]
   16cc4:	ldr	r2, [fp, #12]
   16cc8:	str	r2, [sp]
   16ccc:	add	r2, sp, #8
   16cd0:	bl	16220 <table_sorted_subset_find@@Base>
   16cd4:	mov	sp, fp
   16cd8:	pop	{fp, pc}

00016cdc <table_sorted_subset_find_ullong@@Base>:
   16cdc:	push	{fp, lr}
   16ce0:	mov	fp, sp
   16ce4:	sub	sp, sp, #16
   16ce8:	str	r2, [sp, #8]
   16cec:	ldr	r2, [fp, #16]
   16cf0:	str	r3, [sp, #12]
   16cf4:	ldr	r3, [fp, #8]
   16cf8:	str	r2, [sp, #4]
   16cfc:	ldr	r2, [fp, #12]
   16d00:	str	r2, [sp]
   16d04:	add	r2, sp, #8
   16d08:	bl	16220 <table_sorted_subset_find@@Base>
   16d0c:	mov	sp, fp
   16d10:	pop	{fp, pc}

00016d14 <table_sorted_subset_find_float@@Base>:
   16d14:	push	{fp, lr}
   16d18:	mov	fp, sp
   16d1c:	sub	sp, sp, #16
   16d20:	mov	ip, r2
   16d24:	ldr	r2, [fp, #8]
   16d28:	str	r3, [sp]
   16d2c:	vstr	s0, [fp, #-4]
   16d30:	mov	r3, ip
   16d34:	str	r2, [sp, #4]
   16d38:	sub	r2, fp, #4
   16d3c:	bl	16220 <table_sorted_subset_find@@Base>
   16d40:	mov	sp, fp
   16d44:	pop	{fp, pc}

00016d48 <table_sorted_subset_find_double@@Base>:
   16d48:	push	{fp, lr}
   16d4c:	mov	fp, sp
   16d50:	sub	sp, sp, #16
   16d54:	mov	ip, r2
   16d58:	ldr	r2, [fp, #8]
   16d5c:	str	r3, [sp]
   16d60:	vstr	d0, [sp, #8]
   16d64:	mov	r3, ip
   16d68:	str	r2, [sp, #4]
   16d6c:	add	r2, sp, #8
   16d70:	bl	16220 <table_sorted_subset_find@@Base>
   16d74:	mov	sp, fp
   16d78:	pop	{fp, pc}

00016d7c <table_sorted_subset_find_ldouble@@Base>:
   16d7c:	push	{fp, lr}
   16d80:	mov	fp, sp
   16d84:	sub	sp, sp, #16
   16d88:	mov	ip, r2
   16d8c:	ldr	r2, [fp, #8]
   16d90:	str	r3, [sp]
   16d94:	vstr	d0, [sp, #8]
   16d98:	mov	r3, ip
   16d9c:	str	r2, [sp, #4]
   16da0:	add	r2, sp, #8
   16da4:	bl	16220 <table_sorted_subset_find@@Base>
   16da8:	mov	sp, fp
   16dac:	pop	{fp, pc}

00016db0 <table_sorted_subset_find_char@@Base>:
   16db0:	push	{fp, lr}
   16db4:	mov	fp, sp
   16db8:	sub	sp, sp, #16
   16dbc:	strb	r2, [fp, #-1]
   16dc0:	ldr	r2, [fp, #12]
   16dc4:	str	r2, [sp, #4]
   16dc8:	ldr	r2, [fp, #8]
   16dcc:	str	r2, [sp]
   16dd0:	sub	r2, fp, #1
   16dd4:	bl	16220 <table_sorted_subset_find@@Base>
   16dd8:	mov	sp, fp
   16ddc:	pop	{fp, pc}

00016de0 <table_sorted_subset_find_uchar@@Base>:
   16de0:	push	{fp, lr}
   16de4:	mov	fp, sp
   16de8:	sub	sp, sp, #16
   16dec:	strb	r2, [fp, #-1]
   16df0:	ldr	r2, [fp, #12]
   16df4:	str	r2, [sp, #4]
   16df8:	ldr	r2, [fp, #8]
   16dfc:	str	r2, [sp]
   16e00:	sub	r2, fp, #1
   16e04:	bl	16220 <table_sorted_subset_find@@Base>
   16e08:	mov	sp, fp
   16e0c:	pop	{fp, pc}

00016e10 <table_sorted_subset_find_string@@Base>:
   16e10:	b	16220 <table_sorted_subset_find@@Base>

00016e14 <table_sorted_subset_find_ptr@@Base>:
   16e14:	b	16220 <table_sorted_subset_find@@Base>

00016e18 <table_get@@Base>:
   16e18:	push	{fp, lr}
   16e1c:	mov	fp, sp
   16e20:	bl	1820c <table_get_cell_ptr@@Base>
   16e24:	ldr	r0, [r0]
   16e28:	pop	{fp, pc}

00016e2c <table_get_bool@@Base>:
   16e2c:	push	{fp, lr}
   16e30:	mov	fp, sp
   16e34:	bl	1820c <table_get_cell_ptr@@Base>
   16e38:	ldr	r0, [r0]
   16e3c:	ldrb	r0, [r0]
   16e40:	pop	{fp, pc}

00016e44 <table_get_int@@Base>:
   16e44:	push	{fp, lr}
   16e48:	mov	fp, sp
   16e4c:	bl	1820c <table_get_cell_ptr@@Base>
   16e50:	ldr	r0, [r0]
   16e54:	ldr	r0, [r0]
   16e58:	pop	{fp, pc}

00016e5c <table_get_uint@@Base>:
   16e5c:	push	{fp, lr}
   16e60:	mov	fp, sp
   16e64:	bl	1820c <table_get_cell_ptr@@Base>
   16e68:	ldr	r0, [r0]
   16e6c:	ldr	r0, [r0]
   16e70:	pop	{fp, pc}

00016e74 <table_get_int8@@Base>:
   16e74:	push	{fp, lr}
   16e78:	mov	fp, sp
   16e7c:	bl	1820c <table_get_cell_ptr@@Base>
   16e80:	ldr	r0, [r0]
   16e84:	ldrsb	r0, [r0]
   16e88:	pop	{fp, pc}

00016e8c <table_get_uint8@@Base>:
   16e8c:	push	{fp, lr}
   16e90:	mov	fp, sp
   16e94:	bl	1820c <table_get_cell_ptr@@Base>
   16e98:	ldr	r0, [r0]
   16e9c:	ldrb	r0, [r0]
   16ea0:	pop	{fp, pc}

00016ea4 <table_get_int16@@Base>:
   16ea4:	push	{fp, lr}
   16ea8:	mov	fp, sp
   16eac:	bl	1820c <table_get_cell_ptr@@Base>
   16eb0:	ldr	r0, [r0]
   16eb4:	ldrsh	r0, [r0]
   16eb8:	pop	{fp, pc}

00016ebc <table_get_uint16@@Base>:
   16ebc:	push	{fp, lr}
   16ec0:	mov	fp, sp
   16ec4:	bl	1820c <table_get_cell_ptr@@Base>
   16ec8:	ldr	r0, [r0]
   16ecc:	ldrh	r0, [r0]
   16ed0:	pop	{fp, pc}

00016ed4 <table_get_int32@@Base>:
   16ed4:	push	{fp, lr}
   16ed8:	mov	fp, sp
   16edc:	bl	1820c <table_get_cell_ptr@@Base>
   16ee0:	ldr	r0, [r0]
   16ee4:	ldr	r0, [r0]
   16ee8:	pop	{fp, pc}

00016eec <table_get_uint32@@Base>:
   16eec:	push	{fp, lr}
   16ef0:	mov	fp, sp
   16ef4:	bl	1820c <table_get_cell_ptr@@Base>
   16ef8:	ldr	r0, [r0]
   16efc:	ldr	r0, [r0]
   16f00:	pop	{fp, pc}

00016f04 <table_get_int64@@Base>:
   16f04:	push	{fp, lr}
   16f08:	mov	fp, sp
   16f0c:	bl	1820c <table_get_cell_ptr@@Base>
   16f10:	ldr	r0, [r0]
   16f14:	ldrd	r0, [r0]
   16f18:	pop	{fp, pc}

00016f1c <table_get_uint64@@Base>:
   16f1c:	push	{fp, lr}
   16f20:	mov	fp, sp
   16f24:	bl	1820c <table_get_cell_ptr@@Base>
   16f28:	ldr	r0, [r0]
   16f2c:	ldrd	r0, [r0]
   16f30:	pop	{fp, pc}

00016f34 <table_get_short@@Base>:
   16f34:	push	{fp, lr}
   16f38:	mov	fp, sp
   16f3c:	bl	1820c <table_get_cell_ptr@@Base>
   16f40:	ldr	r0, [r0]
   16f44:	ldrsh	r0, [r0]
   16f48:	pop	{fp, pc}

00016f4c <table_get_ushort@@Base>:
   16f4c:	push	{fp, lr}
   16f50:	mov	fp, sp
   16f54:	bl	1820c <table_get_cell_ptr@@Base>
   16f58:	ldr	r0, [r0]
   16f5c:	ldrh	r0, [r0]
   16f60:	pop	{fp, pc}

00016f64 <table_get_long@@Base>:
   16f64:	push	{fp, lr}
   16f68:	mov	fp, sp
   16f6c:	bl	1820c <table_get_cell_ptr@@Base>
   16f70:	ldr	r0, [r0]
   16f74:	ldr	r0, [r0]
   16f78:	pop	{fp, pc}

00016f7c <table_get_ulong@@Base>:
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	bl	1820c <table_get_cell_ptr@@Base>
   16f88:	ldr	r0, [r0]
   16f8c:	ldr	r0, [r0]
   16f90:	pop	{fp, pc}

00016f94 <table_get_llong@@Base>:
   16f94:	push	{fp, lr}
   16f98:	mov	fp, sp
   16f9c:	bl	1820c <table_get_cell_ptr@@Base>
   16fa0:	ldr	r0, [r0]
   16fa4:	ldrd	r0, [r0]
   16fa8:	pop	{fp, pc}

00016fac <table_get_ullong@@Base>:
   16fac:	push	{fp, lr}
   16fb0:	mov	fp, sp
   16fb4:	bl	1820c <table_get_cell_ptr@@Base>
   16fb8:	ldr	r0, [r0]
   16fbc:	ldrd	r0, [r0]
   16fc0:	pop	{fp, pc}

00016fc4 <table_get_float@@Base>:
   16fc4:	push	{fp, lr}
   16fc8:	mov	fp, sp
   16fcc:	bl	1820c <table_get_cell_ptr@@Base>
   16fd0:	ldr	r0, [r0]
   16fd4:	vldr	s0, [r0]
   16fd8:	pop	{fp, pc}

00016fdc <table_get_double@@Base>:
   16fdc:	push	{fp, lr}
   16fe0:	mov	fp, sp
   16fe4:	bl	1820c <table_get_cell_ptr@@Base>
   16fe8:	ldr	r0, [r0]
   16fec:	vldr	d0, [r0]
   16ff0:	pop	{fp, pc}

00016ff4 <table_get_ldouble@@Base>:
   16ff4:	push	{fp, lr}
   16ff8:	mov	fp, sp
   16ffc:	bl	1820c <table_get_cell_ptr@@Base>
   17000:	ldr	r0, [r0]
   17004:	vldr	d0, [r0]
   17008:	pop	{fp, pc}

0001700c <table_get_char@@Base>:
   1700c:	push	{fp, lr}
   17010:	mov	fp, sp
   17014:	bl	1820c <table_get_cell_ptr@@Base>
   17018:	ldr	r0, [r0]
   1701c:	ldrb	r0, [r0]
   17020:	pop	{fp, pc}

00017024 <table_get_uchar@@Base>:
   17024:	push	{fp, lr}
   17028:	mov	fp, sp
   1702c:	bl	1820c <table_get_cell_ptr@@Base>
   17030:	ldr	r0, [r0]
   17034:	ldrb	r0, [r0]
   17038:	pop	{fp, pc}

0001703c <table_get_string@@Base>:
   1703c:	push	{fp, lr}
   17040:	mov	fp, sp
   17044:	bl	1820c <table_get_cell_ptr@@Base>
   17048:	ldr	r0, [r0]
   1704c:	pop	{fp, pc}

00017050 <table_get_ptr@@Base>:
   17050:	push	{fp, lr}
   17054:	mov	fp, sp
   17058:	bl	1820c <table_get_cell_ptr@@Base>
   1705c:	ldr	r0, [r0]
   17060:	pop	{fp, pc}

00017064 <table_row_init@@Base>:
   17064:	push	{r4, r5, fp, lr}
   17068:	add	fp, sp, #8
   1706c:	mov	r4, r1
   17070:	ldr	r1, [r0, #12]
   17074:	ldr	r5, [r0, #16]
   17078:	lsl	r0, r1, #2
   1707c:	bl	12fb4 <malloc@plt>
   17080:	str	r0, [r5, r4, lsl #2]
   17084:	pop	{r4, r5, fp, pc}

00017088 <table_get_row_ptr@@Base>:
   17088:	ldr	r0, [r0, #16]
   1708c:	add	r0, r0, r1, lsl #2
   17090:	bx	lr

00017094 <table_row_destroy@@Base>:
   17094:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17098:	add	fp, sp, #24
   1709c:	mov	r4, r1
   170a0:	mov	r5, r0
   170a4:	bl	13e44 <table_get_column_length@@Base>
   170a8:	ldr	r8, [r5, #16]
   170ac:	cmp	r0, #1
   170b0:	blt	170d8 <table_row_destroy@@Base+0x44>
   170b4:	mov	r6, r0
   170b8:	mov	r7, #0
   170bc:	mov	r0, r5
   170c0:	mov	r1, r4
   170c4:	mov	r2, r7
   170c8:	bl	18228 <table_cell_destroy@@Base>
   170cc:	add	r7, r7, #1
   170d0:	cmp	r6, r7
   170d4:	bne	170bc <table_row_destroy@@Base+0x28>
   170d8:	ldr	r0, [r8, r4, lsl #2]
   170dc:	cmp	r0, #0
   170e0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   170e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   170e8:	b	12f90 <free@plt>

000170ec <table_get_row_length@@Base>:
   170ec:	ldr	r0, [r0, #20]
   170f0:	bx	lr

000170f4 <table_add_row@@Base>:
   170f4:	push	{r4, r5, r6, r7, fp, lr}
   170f8:	add	fp, sp, #16
   170fc:	ldr	r5, [r0, #20]
   17100:	ldr	r1, [r0, #24]
   17104:	mov	r4, r0
   17108:	udiv	r0, r5, r1
   1710c:	mls	r0, r0, r1, r5
   17110:	cmp	r0, #0
   17114:	bne	17138 <table_add_row@@Base+0x44>
   17118:	ldr	r2, [r4, #28]
   1711c:	ldr	r0, [r4, #16]
   17120:	add	r1, r2, r1
   17124:	str	r1, [r4, #28]
   17128:	lsl	r1, r1, #2
   1712c:	bl	12f9c <realloc@plt>
   17130:	str	r0, [r4, #16]
   17134:	ldr	r5, [r4, #20]
   17138:	mov	r0, r4
   1713c:	bl	13e44 <table_get_column_length@@Base>
   17140:	mov	r6, r0
   17144:	ldr	r0, [r4, #12]
   17148:	ldr	r7, [r4, #16]
   1714c:	lsl	r0, r0, #2
   17150:	bl	12fb4 <malloc@plt>
   17154:	cmp	r6, #1
   17158:	str	r0, [r7, r5, lsl #2]
   1715c:	blt	17180 <table_add_row@@Base+0x8c>
   17160:	mov	r7, #0
   17164:	mov	r0, r4
   17168:	mov	r1, r5
   1716c:	mov	r2, r7
   17170:	bl	181ec <table_cell_init@@Base>
   17174:	add	r7, r7, #1
   17178:	cmp	r6, r7
   1717c:	bne	17164 <table_add_row@@Base+0x70>
   17180:	ldr	r1, [r4, #20]
   17184:	mov	r0, r4
   17188:	mvn	r2, #0
   1718c:	mov	r3, #2
   17190:	bl	13d50 <table_notify@@Base>
   17194:	ldr	r0, [r4, #20]
   17198:	add	r1, r0, #1
   1719c:	str	r1, [r4, #20]
   171a0:	pop	{r4, r5, r6, r7, fp, pc}

000171a4 <table_remove_row@@Base>:
   171a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   171a8:	add	fp, sp, #24
   171ac:	ldr	r8, [r0, #20]
   171b0:	mov	r4, r1
   171b4:	mov	r5, r0
   171b8:	bl	13e44 <table_get_column_length@@Base>
   171bc:	cmp	r0, #1
   171c0:	blt	1720c <table_remove_row@@Base+0x68>
   171c4:	mov	r6, r0
   171c8:	mov	r7, #0
   171cc:	mov	r0, r5
   171d0:	mov	r1, r7
   171d4:	bl	13ec4 <table_get_column_data_type@@Base>
   171d8:	cmp	r0, #23
   171dc:	beq	17200 <table_remove_row@@Base+0x5c>
   171e0:	mov	r0, r5
   171e4:	mov	r1, r4
   171e8:	mov	r2, r7
   171ec:	bl	1820c <table_get_cell_ptr@@Base>
   171f0:	ldr	r0, [r0]
   171f4:	cmp	r0, #0
   171f8:	beq	17200 <table_remove_row@@Base+0x5c>
   171fc:	bl	12f90 <free@plt>
   17200:	add	r7, r7, #1
   17204:	cmp	r6, r7
   17208:	bne	171cc <table_remove_row@@Base+0x28>
   1720c:	ldr	r0, [r5, #16]
   17210:	ldr	r0, [r0, r4, lsl #2]
   17214:	cmp	r0, #0
   17218:	beq	17220 <table_remove_row@@Base+0x7c>
   1721c:	bl	12f90 <free@plt>
   17220:	sub	r0, r8, #1
   17224:	cmp	r0, r4
   17228:	ble	1724c <table_remove_row@@Base+0xa8>
   1722c:	mov	r1, r4
   17230:	ldr	r2, [r5, #16]
   17234:	add	r3, r2, r1, lsl #2
   17238:	ldr	r3, [r3, #4]
   1723c:	str	r3, [r2, r1, lsl #2]
   17240:	add	r1, r1, #1
   17244:	cmp	r0, r1
   17248:	bne	17230 <table_remove_row@@Base+0x8c>
   1724c:	ldr	r0, [r5, #20]
   17250:	ldr	r1, [r5, #24]
   17254:	sub	r0, r0, #1
   17258:	udiv	r2, r0, r1
   1725c:	str	r0, [r5, #20]
   17260:	mls	r0, r2, r1, r0
   17264:	cmp	r0, #0
   17268:	bne	17288 <table_remove_row@@Base+0xe4>
   1726c:	ldr	r2, [r5, #28]
   17270:	ldr	r0, [r5, #16]
   17274:	sub	r1, r2, r1
   17278:	str	r1, [r5, #28]
   1727c:	lsl	r1, r1, #2
   17280:	bl	12f9c <realloc@plt>
   17284:	str	r0, [r5, #16]
   17288:	mov	r0, r5
   1728c:	mov	r1, r4
   17290:	mvn	r2, #0
   17294:	mov	r3, #4
   17298:	bl	13d50 <table_notify@@Base>
   1729c:	mov	r0, #0
   172a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000172a4 <table_set_row_ptr@@Base>:
   172a4:	ldr	r2, [r2]
   172a8:	ldr	r0, [r0, #16]
   172ac:	str	r2, [r0, r1, lsl #2]
   172b0:	bx	lr

000172b4 <table_set@@Base>:
   172b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   172b8:	add	fp, sp, #24
   172bc:	mov	r8, r3
   172c0:	mov	r4, r2
   172c4:	mov	r9, r1
   172c8:	mov	r6, r0
   172cc:	bl	1820c <table_get_cell_ptr@@Base>
   172d0:	mov	r5, r0
   172d4:	mov	r0, r6
   172d8:	mov	r1, r4
   172dc:	bl	13e1c <table_get_col_ptr@@Base>
   172e0:	ldr	r1, [fp, #8]
   172e4:	mvn	r7, #0
   172e8:	cmp	r1, #23
   172ec:	bhi	175b0 <table_set@@Base+0x2fc>
   172f0:	add	r2, pc, #0
   172f4:	ldr	pc, [r2, r1, lsl #2]
   172f8:	andeq	r7, r1, r8, asr r3
   172fc:	andeq	r7, r1, r8, ror #6
   17300:	andeq	r7, r1, r8, ror r3
   17304:	andeq	r7, r1, r8, lsl #7
   17308:	muleq	r1, r8, r3
   1730c:	andeq	r7, r1, r8, lsr #7
   17310:			; <UNDEFINED> instruction: 0x000173b8
   17314:	andeq	r7, r1, r8, asr #7
   17318:	ldrdeq	r7, [r1], -r8
   1731c:	andeq	r7, r1, r8, ror #7
   17320:	strdeq	r7, [r1], -r8
   17324:	andeq	r7, r1, r8, lsl #8
   17328:	andeq	r7, r1, r0, asr #8
   1732c:	andeq	r7, r1, r0, asr r4
   17330:	andeq	r7, r1, r0, ror #8
   17334:	andeq	r7, r1, r0, ror r4
   17338:	andeq	r7, r1, r0, lsl #9
   1733c:			; <UNDEFINED> instruction: 0x000174b8
   17340:	andeq	r7, r1, r8, asr #9
   17344:	andeq	r7, r1, r8, lsl #10
   17348:	andeq	r7, r1, r8, lsl r5
   1734c:	andeq	r7, r1, r8, lsr #10
   17350:	andeq	r7, r1, r4, ror #10
   17354:			; <UNDEFINED> instruction: 0x000175b8
   17358:	ldr	r0, [r0, #4]
   1735c:	cmp	r0, #0
   17360:	bne	175b0 <table_set@@Base+0x2fc>
   17364:	b	1748c <table_set@@Base+0x1d8>
   17368:	ldr	r0, [r0, #4]
   1736c:	cmp	r0, #1
   17370:	beq	1748c <table_set@@Base+0x1d8>
   17374:	b	175b0 <table_set@@Base+0x2fc>
   17378:	ldr	r0, [r0, #4]
   1737c:	cmp	r0, #2
   17380:	beq	17570 <table_set@@Base+0x2bc>
   17384:	b	175b0 <table_set@@Base+0x2fc>
   17388:	ldr	r0, [r0, #4]
   1738c:	cmp	r0, #3
   17390:	beq	17570 <table_set@@Base+0x2bc>
   17394:	b	175b0 <table_set@@Base+0x2fc>
   17398:	ldr	r0, [r0, #4]
   1739c:	cmp	r0, #4
   173a0:	beq	17414 <table_set@@Base+0x160>
   173a4:	b	175b0 <table_set@@Base+0x2fc>
   173a8:	ldr	r0, [r0, #4]
   173ac:	cmp	r0, #5
   173b0:	beq	17414 <table_set@@Base+0x160>
   173b4:	b	175b0 <table_set@@Base+0x2fc>
   173b8:	ldr	r0, [r0, #4]
   173bc:	cmp	r0, #6
   173c0:	beq	1748c <table_set@@Base+0x1d8>
   173c4:	b	175b0 <table_set@@Base+0x2fc>
   173c8:	ldr	r0, [r0, #4]
   173cc:	cmp	r0, #7
   173d0:	beq	1748c <table_set@@Base+0x1d8>
   173d4:	b	175b0 <table_set@@Base+0x2fc>
   173d8:	ldr	r0, [r0, #4]
   173dc:	cmp	r0, #8
   173e0:	beq	174d4 <table_set@@Base+0x220>
   173e4:	b	175b0 <table_set@@Base+0x2fc>
   173e8:	ldr	r0, [r0, #4]
   173ec:	cmp	r0, #9
   173f0:	beq	174d4 <table_set@@Base+0x220>
   173f4:	b	175b0 <table_set@@Base+0x2fc>
   173f8:	ldr	r0, [r0, #4]
   173fc:	cmp	r0, #10
   17400:	beq	17414 <table_set@@Base+0x160>
   17404:	b	175b0 <table_set@@Base+0x2fc>
   17408:	ldr	r0, [r0, #4]
   1740c:	cmp	r0, #11
   17410:	bne	175b0 <table_set@@Base+0x2fc>
   17414:	ldr	r0, [r5]
   17418:	cmp	r0, #0
   1741c:	bne	17434 <table_set@@Base+0x180>
   17420:	mov	r0, #2
   17424:	bl	12fb4 <malloc@plt>
   17428:	cmp	r0, #0
   1742c:	str	r0, [r5]
   17430:	beq	175b0 <table_set@@Base+0x2fc>
   17434:	ldrh	r1, [r8]
   17438:	strh	r1, [r0]
   1743c:	b	17598 <table_set@@Base+0x2e4>
   17440:	ldr	r0, [r0, #4]
   17444:	cmp	r0, #12
   17448:	beq	1748c <table_set@@Base+0x1d8>
   1744c:	b	175b0 <table_set@@Base+0x2fc>
   17450:	ldr	r0, [r0, #4]
   17454:	cmp	r0, #13
   17458:	beq	1748c <table_set@@Base+0x1d8>
   1745c:	b	175b0 <table_set@@Base+0x2fc>
   17460:	ldr	r0, [r0, #4]
   17464:	cmp	r0, #14
   17468:	beq	174d4 <table_set@@Base+0x220>
   1746c:	b	175b0 <table_set@@Base+0x2fc>
   17470:	ldr	r0, [r0, #4]
   17474:	cmp	r0, #15
   17478:	beq	174d4 <table_set@@Base+0x220>
   1747c:	b	175b0 <table_set@@Base+0x2fc>
   17480:	ldr	r0, [r0, #4]
   17484:	cmp	r0, #16
   17488:	bne	175b0 <table_set@@Base+0x2fc>
   1748c:	ldr	r0, [r5]
   17490:	cmp	r0, #0
   17494:	bne	174ac <table_set@@Base+0x1f8>
   17498:	mov	r0, #4
   1749c:	bl	12fb4 <malloc@plt>
   174a0:	cmp	r0, #0
   174a4:	str	r0, [r5]
   174a8:	beq	175b0 <table_set@@Base+0x2fc>
   174ac:	ldr	r1, [r8]
   174b0:	str	r1, [r0]
   174b4:	b	17598 <table_set@@Base+0x2e4>
   174b8:	ldr	r0, [r0, #4]
   174bc:	cmp	r0, #17
   174c0:	beq	174d4 <table_set@@Base+0x220>
   174c4:	b	175b0 <table_set@@Base+0x2fc>
   174c8:	ldr	r0, [r0, #4]
   174cc:	cmp	r0, #18
   174d0:	bne	175b0 <table_set@@Base+0x2fc>
   174d4:	ldr	r0, [r5]
   174d8:	cmp	r0, #0
   174dc:	bne	174f4 <table_set@@Base+0x240>
   174e0:	mov	r0, #8
   174e4:	bl	12fb4 <malloc@plt>
   174e8:	cmp	r0, #0
   174ec:	str	r0, [r5]
   174f0:	beq	175b0 <table_set@@Base+0x2fc>
   174f4:	ldr	r1, [r8]
   174f8:	ldr	r2, [r8, #4]
   174fc:	str	r2, [r0, #4]
   17500:	str	r1, [r0]
   17504:	b	17598 <table_set@@Base+0x2e4>
   17508:	ldr	r0, [r0, #4]
   1750c:	cmp	r0, #19
   17510:	beq	17570 <table_set@@Base+0x2bc>
   17514:	b	175b0 <table_set@@Base+0x2fc>
   17518:	ldr	r0, [r0, #4]
   1751c:	cmp	r0, #20
   17520:	beq	17570 <table_set@@Base+0x2bc>
   17524:	b	175b0 <table_set@@Base+0x2fc>
   17528:	ldr	r0, [r0, #4]
   1752c:	cmp	r0, #21
   17530:	bne	175b0 <table_set@@Base+0x2fc>
   17534:	mov	r0, r8
   17538:	bl	12fd8 <strlen@plt>
   1753c:	ldr	r2, [r5]
   17540:	add	r1, r0, #1
   17544:	mov	r0, r2
   17548:	bl	12f9c <realloc@plt>
   1754c:	cmp	r0, #0
   17550:	str	r0, [r5]
   17554:	beq	175b0 <table_set@@Base+0x2fc>
   17558:	mov	r1, r8
   1755c:	bl	12fa8 <strcpy@plt>
   17560:	b	17598 <table_set@@Base+0x2e4>
   17564:	ldr	r0, [r0, #4]
   17568:	cmp	r0, #22
   1756c:	bne	175b0 <table_set@@Base+0x2fc>
   17570:	ldr	r0, [r5]
   17574:	cmp	r0, #0
   17578:	bne	17590 <table_set@@Base+0x2dc>
   1757c:	mov	r0, #1
   17580:	bl	12fb4 <malloc@plt>
   17584:	cmp	r0, #0
   17588:	str	r0, [r5]
   1758c:	beq	175b0 <table_set@@Base+0x2fc>
   17590:	ldrb	r1, [r8]
   17594:	strb	r1, [r0]
   17598:	mov	r0, r6
   1759c:	mov	r1, r9
   175a0:	mov	r2, r4
   175a4:	mov	r3, #1
   175a8:	bl	13d50 <table_notify@@Base>
   175ac:	mov	r7, #0
   175b0:	mov	r0, r7
   175b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   175b8:	ldr	r0, [r0, #4]
   175bc:	cmp	r0, #23
   175c0:	bne	175b0 <table_set@@Base+0x2fc>
   175c4:	str	r8, [r5]
   175c8:	b	17598 <table_set@@Base+0x2e4>

000175cc <table_set_bool@@Base>:
   175cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   175d0:	add	fp, sp, #24
   175d4:	mov	r8, r3
   175d8:	mov	r4, r2
   175dc:	mov	r9, r1
   175e0:	mov	r6, r0
   175e4:	bl	1820c <table_get_cell_ptr@@Base>
   175e8:	mov	r5, r0
   175ec:	mov	r0, r6
   175f0:	mov	r1, r4
   175f4:	bl	13e1c <table_get_col_ptr@@Base>
   175f8:	ldr	r0, [r0, #4]
   175fc:	mvn	r7, #0
   17600:	cmp	r0, #22
   17604:	bne	17644 <table_set_bool@@Base+0x78>
   17608:	ldr	r0, [r5]
   1760c:	cmp	r0, #0
   17610:	bne	17628 <table_set_bool@@Base+0x5c>
   17614:	mov	r0, #1
   17618:	bl	12fb4 <malloc@plt>
   1761c:	cmp	r0, #0
   17620:	str	r0, [r5]
   17624:	beq	17644 <table_set_bool@@Base+0x78>
   17628:	strb	r8, [r0]
   1762c:	mov	r0, r6
   17630:	mov	r1, r9
   17634:	mov	r2, r4
   17638:	mov	r3, #1
   1763c:	bl	13d50 <table_notify@@Base>
   17640:	mov	r7, #0
   17644:	mov	r0, r7
   17648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001764c <table_set_int@@Base>:
   1764c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17650:	add	fp, sp, #24
   17654:	mov	r8, r3
   17658:	mov	r4, r2
   1765c:	mov	r5, r1
   17660:	mov	r6, r0
   17664:	bl	1820c <table_get_cell_ptr@@Base>
   17668:	mov	r9, r0
   1766c:	mov	r0, r6
   17670:	mov	r1, r4
   17674:	bl	13e1c <table_get_col_ptr@@Base>
   17678:	ldr	r0, [r0, #4]
   1767c:	mvn	r7, #0
   17680:	cmp	r0, #0
   17684:	bne	176c4 <table_set_int@@Base+0x78>
   17688:	ldr	r0, [r9]
   1768c:	cmp	r0, #0
   17690:	bne	176a8 <table_set_int@@Base+0x5c>
   17694:	mov	r0, #4
   17698:	bl	12fb4 <malloc@plt>
   1769c:	cmp	r0, #0
   176a0:	str	r0, [r9]
   176a4:	beq	176c4 <table_set_int@@Base+0x78>
   176a8:	str	r8, [r0]
   176ac:	mov	r0, r6
   176b0:	mov	r1, r5
   176b4:	mov	r2, r4
   176b8:	mov	r3, #1
   176bc:	bl	13d50 <table_notify@@Base>
   176c0:	mov	r7, #0
   176c4:	mov	r0, r7
   176c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000176cc <table_set_uint@@Base>:
   176cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   176d0:	add	fp, sp, #24
   176d4:	mov	r8, r3
   176d8:	mov	r4, r2
   176dc:	mov	r5, r1
   176e0:	mov	r6, r0
   176e4:	bl	1820c <table_get_cell_ptr@@Base>
   176e8:	mov	r9, r0
   176ec:	mov	r0, r6
   176f0:	mov	r1, r4
   176f4:	bl	13e1c <table_get_col_ptr@@Base>
   176f8:	ldr	r0, [r0, #4]
   176fc:	mvn	r7, #0
   17700:	cmp	r0, #1
   17704:	bne	17744 <table_set_uint@@Base+0x78>
   17708:	ldr	r0, [r9]
   1770c:	cmp	r0, #0
   17710:	bne	17728 <table_set_uint@@Base+0x5c>
   17714:	mov	r0, #4
   17718:	bl	12fb4 <malloc@plt>
   1771c:	cmp	r0, #0
   17720:	str	r0, [r9]
   17724:	beq	17744 <table_set_uint@@Base+0x78>
   17728:	str	r8, [r0]
   1772c:	mov	r0, r6
   17730:	mov	r1, r5
   17734:	mov	r2, r4
   17738:	mov	r3, #1
   1773c:	bl	13d50 <table_notify@@Base>
   17740:	mov	r7, #0
   17744:	mov	r0, r7
   17748:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001774c <table_set_int8@@Base>:
   1774c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17750:	add	fp, sp, #24
   17754:	mov	r8, r3
   17758:	mov	r4, r2
   1775c:	mov	r9, r1
   17760:	mov	r6, r0
   17764:	bl	1820c <table_get_cell_ptr@@Base>
   17768:	mov	r5, r0
   1776c:	mov	r0, r6
   17770:	mov	r1, r4
   17774:	bl	13e1c <table_get_col_ptr@@Base>
   17778:	ldr	r0, [r0, #4]
   1777c:	mvn	r7, #0
   17780:	cmp	r0, #2
   17784:	bne	177c4 <table_set_int8@@Base+0x78>
   17788:	ldr	r0, [r5]
   1778c:	cmp	r0, #0
   17790:	bne	177a8 <table_set_int8@@Base+0x5c>
   17794:	mov	r0, #1
   17798:	bl	12fb4 <malloc@plt>
   1779c:	cmp	r0, #0
   177a0:	str	r0, [r5]
   177a4:	beq	177c4 <table_set_int8@@Base+0x78>
   177a8:	strb	r8, [r0]
   177ac:	mov	r0, r6
   177b0:	mov	r1, r9
   177b4:	mov	r2, r4
   177b8:	mov	r3, #1
   177bc:	bl	13d50 <table_notify@@Base>
   177c0:	mov	r7, #0
   177c4:	mov	r0, r7
   177c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000177cc <table_set_uint8@@Base>:
   177cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   177d0:	add	fp, sp, #24
   177d4:	mov	r8, r3
   177d8:	mov	r4, r2
   177dc:	mov	r9, r1
   177e0:	mov	r6, r0
   177e4:	bl	1820c <table_get_cell_ptr@@Base>
   177e8:	mov	r5, r0
   177ec:	mov	r0, r6
   177f0:	mov	r1, r4
   177f4:	bl	13e1c <table_get_col_ptr@@Base>
   177f8:	ldr	r0, [r0, #4]
   177fc:	mvn	r7, #0
   17800:	cmp	r0, #3
   17804:	bne	17844 <table_set_uint8@@Base+0x78>
   17808:	ldr	r0, [r5]
   1780c:	cmp	r0, #0
   17810:	bne	17828 <table_set_uint8@@Base+0x5c>
   17814:	mov	r0, #1
   17818:	bl	12fb4 <malloc@plt>
   1781c:	cmp	r0, #0
   17820:	str	r0, [r5]
   17824:	beq	17844 <table_set_uint8@@Base+0x78>
   17828:	strb	r8, [r0]
   1782c:	mov	r0, r6
   17830:	mov	r1, r9
   17834:	mov	r2, r4
   17838:	mov	r3, #1
   1783c:	bl	13d50 <table_notify@@Base>
   17840:	mov	r7, #0
   17844:	mov	r0, r7
   17848:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001784c <table_set_int16@@Base>:
   1784c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17850:	add	fp, sp, #24
   17854:	mov	r8, r3
   17858:	mov	r4, r2
   1785c:	mov	r9, r1
   17860:	mov	r6, r0
   17864:	bl	1820c <table_get_cell_ptr@@Base>
   17868:	mov	r5, r0
   1786c:	mov	r0, r6
   17870:	mov	r1, r4
   17874:	bl	13e1c <table_get_col_ptr@@Base>
   17878:	ldr	r0, [r0, #4]
   1787c:	mvn	r7, #0
   17880:	cmp	r0, #4
   17884:	bne	178c4 <table_set_int16@@Base+0x78>
   17888:	ldr	r0, [r5]
   1788c:	cmp	r0, #0
   17890:	bne	178a8 <table_set_int16@@Base+0x5c>
   17894:	mov	r0, #2
   17898:	bl	12fb4 <malloc@plt>
   1789c:	cmp	r0, #0
   178a0:	str	r0, [r5]
   178a4:	beq	178c4 <table_set_int16@@Base+0x78>
   178a8:	strh	r8, [r0]
   178ac:	mov	r0, r6
   178b0:	mov	r1, r9
   178b4:	mov	r2, r4
   178b8:	mov	r3, #1
   178bc:	bl	13d50 <table_notify@@Base>
   178c0:	mov	r7, #0
   178c4:	mov	r0, r7
   178c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000178cc <table_set_uint16@@Base>:
   178cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   178d0:	add	fp, sp, #24
   178d4:	mov	r8, r3
   178d8:	mov	r4, r2
   178dc:	mov	r9, r1
   178e0:	mov	r6, r0
   178e4:	bl	1820c <table_get_cell_ptr@@Base>
   178e8:	mov	r5, r0
   178ec:	mov	r0, r6
   178f0:	mov	r1, r4
   178f4:	bl	13e1c <table_get_col_ptr@@Base>
   178f8:	ldr	r0, [r0, #4]
   178fc:	mvn	r7, #0
   17900:	cmp	r0, #5
   17904:	bne	17944 <table_set_uint16@@Base+0x78>
   17908:	ldr	r0, [r5]
   1790c:	cmp	r0, #0
   17910:	bne	17928 <table_set_uint16@@Base+0x5c>
   17914:	mov	r0, #2
   17918:	bl	12fb4 <malloc@plt>
   1791c:	cmp	r0, #0
   17920:	str	r0, [r5]
   17924:	beq	17944 <table_set_uint16@@Base+0x78>
   17928:	strh	r8, [r0]
   1792c:	mov	r0, r6
   17930:	mov	r1, r9
   17934:	mov	r2, r4
   17938:	mov	r3, #1
   1793c:	bl	13d50 <table_notify@@Base>
   17940:	mov	r7, #0
   17944:	mov	r0, r7
   17948:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001794c <table_set_int32@@Base>:
   1794c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17950:	add	fp, sp, #24
   17954:	mov	r8, r3
   17958:	mov	r4, r2
   1795c:	mov	r5, r1
   17960:	mov	r6, r0
   17964:	bl	1820c <table_get_cell_ptr@@Base>
   17968:	mov	r9, r0
   1796c:	mov	r0, r6
   17970:	mov	r1, r4
   17974:	bl	13e1c <table_get_col_ptr@@Base>
   17978:	ldr	r0, [r0, #4]
   1797c:	mvn	r7, #0
   17980:	cmp	r0, #6
   17984:	bne	179c4 <table_set_int32@@Base+0x78>
   17988:	ldr	r0, [r9]
   1798c:	cmp	r0, #0
   17990:	bne	179a8 <table_set_int32@@Base+0x5c>
   17994:	mov	r0, #4
   17998:	bl	12fb4 <malloc@plt>
   1799c:	cmp	r0, #0
   179a0:	str	r0, [r9]
   179a4:	beq	179c4 <table_set_int32@@Base+0x78>
   179a8:	str	r8, [r0]
   179ac:	mov	r0, r6
   179b0:	mov	r1, r5
   179b4:	mov	r2, r4
   179b8:	mov	r3, #1
   179bc:	bl	13d50 <table_notify@@Base>
   179c0:	mov	r7, #0
   179c4:	mov	r0, r7
   179c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000179cc <table_set_uint32@@Base>:
   179cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179d0:	add	fp, sp, #24
   179d4:	mov	r8, r3
   179d8:	mov	r4, r2
   179dc:	mov	r5, r1
   179e0:	mov	r6, r0
   179e4:	bl	1820c <table_get_cell_ptr@@Base>
   179e8:	mov	r9, r0
   179ec:	mov	r0, r6
   179f0:	mov	r1, r4
   179f4:	bl	13e1c <table_get_col_ptr@@Base>
   179f8:	ldr	r0, [r0, #4]
   179fc:	mvn	r7, #0
   17a00:	cmp	r0, #7
   17a04:	bne	17a44 <table_set_uint32@@Base+0x78>
   17a08:	ldr	r0, [r9]
   17a0c:	cmp	r0, #0
   17a10:	bne	17a28 <table_set_uint32@@Base+0x5c>
   17a14:	mov	r0, #4
   17a18:	bl	12fb4 <malloc@plt>
   17a1c:	cmp	r0, #0
   17a20:	str	r0, [r9]
   17a24:	beq	17a44 <table_set_uint32@@Base+0x78>
   17a28:	str	r8, [r0]
   17a2c:	mov	r0, r6
   17a30:	mov	r1, r5
   17a34:	mov	r2, r4
   17a38:	mov	r3, #1
   17a3c:	bl	13d50 <table_notify@@Base>
   17a40:	mov	r7, #0
   17a44:	mov	r0, r7
   17a48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017a4c <table_set_int64@@Base>:
   17a4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17a50:	add	fp, sp, #24
   17a54:	mov	r4, r2
   17a58:	mov	r8, r1
   17a5c:	mov	r6, r0
   17a60:	bl	1820c <table_get_cell_ptr@@Base>
   17a64:	mov	r5, r0
   17a68:	mov	r0, r6
   17a6c:	mov	r1, r4
   17a70:	bl	13e1c <table_get_col_ptr@@Base>
   17a74:	ldr	r0, [r0, #4]
   17a78:	mvn	r7, #0
   17a7c:	cmp	r0, #8
   17a80:	bne	17acc <table_set_int64@@Base+0x80>
   17a84:	ldr	r0, [r5]
   17a88:	cmp	r0, #0
   17a8c:	bne	17aa4 <table_set_int64@@Base+0x58>
   17a90:	mov	r0, #8
   17a94:	bl	12fb4 <malloc@plt>
   17a98:	cmp	r0, #0
   17a9c:	str	r0, [r5]
   17aa0:	beq	17acc <table_set_int64@@Base+0x80>
   17aa4:	ldr	r1, [fp, #12]
   17aa8:	ldr	r2, [fp, #8]
   17aac:	mov	r3, #1
   17ab0:	str	r2, [r0]
   17ab4:	str	r1, [r0, #4]
   17ab8:	mov	r0, r6
   17abc:	mov	r1, r8
   17ac0:	mov	r2, r4
   17ac4:	bl	13d50 <table_notify@@Base>
   17ac8:	mov	r7, #0
   17acc:	mov	r0, r7
   17ad0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017ad4 <table_set_uint64@@Base>:
   17ad4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ad8:	add	fp, sp, #24
   17adc:	mov	r4, r2
   17ae0:	mov	r8, r1
   17ae4:	mov	r6, r0
   17ae8:	bl	1820c <table_get_cell_ptr@@Base>
   17aec:	mov	r5, r0
   17af0:	mov	r0, r6
   17af4:	mov	r1, r4
   17af8:	bl	13e1c <table_get_col_ptr@@Base>
   17afc:	ldr	r0, [r0, #4]
   17b00:	mvn	r7, #0
   17b04:	cmp	r0, #9
   17b08:	bne	17b54 <table_set_uint64@@Base+0x80>
   17b0c:	ldr	r0, [r5]
   17b10:	cmp	r0, #0
   17b14:	bne	17b2c <table_set_uint64@@Base+0x58>
   17b18:	mov	r0, #8
   17b1c:	bl	12fb4 <malloc@plt>
   17b20:	cmp	r0, #0
   17b24:	str	r0, [r5]
   17b28:	beq	17b54 <table_set_uint64@@Base+0x80>
   17b2c:	ldr	r1, [fp, #12]
   17b30:	ldr	r2, [fp, #8]
   17b34:	mov	r3, #1
   17b38:	str	r2, [r0]
   17b3c:	str	r1, [r0, #4]
   17b40:	mov	r0, r6
   17b44:	mov	r1, r8
   17b48:	mov	r2, r4
   17b4c:	bl	13d50 <table_notify@@Base>
   17b50:	mov	r7, #0
   17b54:	mov	r0, r7
   17b58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017b5c <table_set_short@@Base>:
   17b5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17b60:	add	fp, sp, #24
   17b64:	mov	r8, r3
   17b68:	mov	r4, r2
   17b6c:	mov	r9, r1
   17b70:	mov	r6, r0
   17b74:	bl	1820c <table_get_cell_ptr@@Base>
   17b78:	mov	r5, r0
   17b7c:	mov	r0, r6
   17b80:	mov	r1, r4
   17b84:	bl	13e1c <table_get_col_ptr@@Base>
   17b88:	ldr	r0, [r0, #4]
   17b8c:	mvn	r7, #0
   17b90:	cmp	r0, #10
   17b94:	bne	17bd4 <table_set_short@@Base+0x78>
   17b98:	ldr	r0, [r5]
   17b9c:	cmp	r0, #0
   17ba0:	bne	17bb8 <table_set_short@@Base+0x5c>
   17ba4:	mov	r0, #2
   17ba8:	bl	12fb4 <malloc@plt>
   17bac:	cmp	r0, #0
   17bb0:	str	r0, [r5]
   17bb4:	beq	17bd4 <table_set_short@@Base+0x78>
   17bb8:	strh	r8, [r0]
   17bbc:	mov	r0, r6
   17bc0:	mov	r1, r9
   17bc4:	mov	r2, r4
   17bc8:	mov	r3, #1
   17bcc:	bl	13d50 <table_notify@@Base>
   17bd0:	mov	r7, #0
   17bd4:	mov	r0, r7
   17bd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017bdc <table_set_ushort@@Base>:
   17bdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17be0:	add	fp, sp, #24
   17be4:	mov	r8, r3
   17be8:	mov	r4, r2
   17bec:	mov	r9, r1
   17bf0:	mov	r6, r0
   17bf4:	bl	1820c <table_get_cell_ptr@@Base>
   17bf8:	mov	r5, r0
   17bfc:	mov	r0, r6
   17c00:	mov	r1, r4
   17c04:	bl	13e1c <table_get_col_ptr@@Base>
   17c08:	ldr	r0, [r0, #4]
   17c0c:	mvn	r7, #0
   17c10:	cmp	r0, #11
   17c14:	bne	17c54 <table_set_ushort@@Base+0x78>
   17c18:	ldr	r0, [r5]
   17c1c:	cmp	r0, #0
   17c20:	bne	17c38 <table_set_ushort@@Base+0x5c>
   17c24:	mov	r0, #2
   17c28:	bl	12fb4 <malloc@plt>
   17c2c:	cmp	r0, #0
   17c30:	str	r0, [r5]
   17c34:	beq	17c54 <table_set_ushort@@Base+0x78>
   17c38:	strh	r8, [r0]
   17c3c:	mov	r0, r6
   17c40:	mov	r1, r9
   17c44:	mov	r2, r4
   17c48:	mov	r3, #1
   17c4c:	bl	13d50 <table_notify@@Base>
   17c50:	mov	r7, #0
   17c54:	mov	r0, r7
   17c58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017c5c <table_set_long@@Base>:
   17c5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c60:	add	fp, sp, #24
   17c64:	mov	r8, r3
   17c68:	mov	r4, r2
   17c6c:	mov	r5, r1
   17c70:	mov	r6, r0
   17c74:	bl	1820c <table_get_cell_ptr@@Base>
   17c78:	mov	r9, r0
   17c7c:	mov	r0, r6
   17c80:	mov	r1, r4
   17c84:	bl	13e1c <table_get_col_ptr@@Base>
   17c88:	ldr	r0, [r0, #4]
   17c8c:	mvn	r7, #0
   17c90:	cmp	r0, #12
   17c94:	bne	17cd4 <table_set_long@@Base+0x78>
   17c98:	ldr	r0, [r9]
   17c9c:	cmp	r0, #0
   17ca0:	bne	17cb8 <table_set_long@@Base+0x5c>
   17ca4:	mov	r0, #4
   17ca8:	bl	12fb4 <malloc@plt>
   17cac:	cmp	r0, #0
   17cb0:	str	r0, [r9]
   17cb4:	beq	17cd4 <table_set_long@@Base+0x78>
   17cb8:	str	r8, [r0]
   17cbc:	mov	r0, r6
   17cc0:	mov	r1, r5
   17cc4:	mov	r2, r4
   17cc8:	mov	r3, #1
   17ccc:	bl	13d50 <table_notify@@Base>
   17cd0:	mov	r7, #0
   17cd4:	mov	r0, r7
   17cd8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017cdc <table_set_ulong@@Base>:
   17cdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ce0:	add	fp, sp, #24
   17ce4:	mov	r8, r3
   17ce8:	mov	r4, r2
   17cec:	mov	r5, r1
   17cf0:	mov	r6, r0
   17cf4:	bl	1820c <table_get_cell_ptr@@Base>
   17cf8:	mov	r9, r0
   17cfc:	mov	r0, r6
   17d00:	mov	r1, r4
   17d04:	bl	13e1c <table_get_col_ptr@@Base>
   17d08:	ldr	r0, [r0, #4]
   17d0c:	mvn	r7, #0
   17d10:	cmp	r0, #13
   17d14:	bne	17d54 <table_set_ulong@@Base+0x78>
   17d18:	ldr	r0, [r9]
   17d1c:	cmp	r0, #0
   17d20:	bne	17d38 <table_set_ulong@@Base+0x5c>
   17d24:	mov	r0, #4
   17d28:	bl	12fb4 <malloc@plt>
   17d2c:	cmp	r0, #0
   17d30:	str	r0, [r9]
   17d34:	beq	17d54 <table_set_ulong@@Base+0x78>
   17d38:	str	r8, [r0]
   17d3c:	mov	r0, r6
   17d40:	mov	r1, r5
   17d44:	mov	r2, r4
   17d48:	mov	r3, #1
   17d4c:	bl	13d50 <table_notify@@Base>
   17d50:	mov	r7, #0
   17d54:	mov	r0, r7
   17d58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017d5c <table_set_llong@@Base>:
   17d5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17d60:	add	fp, sp, #24
   17d64:	mov	r4, r2
   17d68:	mov	r8, r1
   17d6c:	mov	r6, r0
   17d70:	bl	1820c <table_get_cell_ptr@@Base>
   17d74:	mov	r5, r0
   17d78:	mov	r0, r6
   17d7c:	mov	r1, r4
   17d80:	bl	13e1c <table_get_col_ptr@@Base>
   17d84:	ldr	r0, [r0, #4]
   17d88:	mvn	r7, #0
   17d8c:	cmp	r0, #14
   17d90:	bne	17ddc <table_set_llong@@Base+0x80>
   17d94:	ldr	r0, [r5]
   17d98:	cmp	r0, #0
   17d9c:	bne	17db4 <table_set_llong@@Base+0x58>
   17da0:	mov	r0, #8
   17da4:	bl	12fb4 <malloc@plt>
   17da8:	cmp	r0, #0
   17dac:	str	r0, [r5]
   17db0:	beq	17ddc <table_set_llong@@Base+0x80>
   17db4:	ldr	r1, [fp, #12]
   17db8:	ldr	r2, [fp, #8]
   17dbc:	mov	r3, #1
   17dc0:	str	r2, [r0]
   17dc4:	str	r1, [r0, #4]
   17dc8:	mov	r0, r6
   17dcc:	mov	r1, r8
   17dd0:	mov	r2, r4
   17dd4:	bl	13d50 <table_notify@@Base>
   17dd8:	mov	r7, #0
   17ddc:	mov	r0, r7
   17de0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017de4 <table_set_ullong@@Base>:
   17de4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17de8:	add	fp, sp, #24
   17dec:	mov	r4, r2
   17df0:	mov	r8, r1
   17df4:	mov	r6, r0
   17df8:	bl	1820c <table_get_cell_ptr@@Base>
   17dfc:	mov	r5, r0
   17e00:	mov	r0, r6
   17e04:	mov	r1, r4
   17e08:	bl	13e1c <table_get_col_ptr@@Base>
   17e0c:	ldr	r0, [r0, #4]
   17e10:	mvn	r7, #0
   17e14:	cmp	r0, #15
   17e18:	bne	17e64 <table_set_ullong@@Base+0x80>
   17e1c:	ldr	r0, [r5]
   17e20:	cmp	r0, #0
   17e24:	bne	17e3c <table_set_ullong@@Base+0x58>
   17e28:	mov	r0, #8
   17e2c:	bl	12fb4 <malloc@plt>
   17e30:	cmp	r0, #0
   17e34:	str	r0, [r5]
   17e38:	beq	17e64 <table_set_ullong@@Base+0x80>
   17e3c:	ldr	r1, [fp, #12]
   17e40:	ldr	r2, [fp, #8]
   17e44:	mov	r3, #1
   17e48:	str	r2, [r0]
   17e4c:	str	r1, [r0, #4]
   17e50:	mov	r0, r6
   17e54:	mov	r1, r8
   17e58:	mov	r2, r4
   17e5c:	bl	13d50 <table_notify@@Base>
   17e60:	mov	r7, #0
   17e64:	mov	r0, r7
   17e68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017e6c <table_set_float@@Base>:
   17e6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e70:	add	fp, sp, #24
   17e74:	vpush	{d8}
   17e78:	vmov.f32	s16, s0
   17e7c:	mov	r4, r2
   17e80:	mov	r8, r1
   17e84:	mov	r6, r0
   17e88:	bl	1820c <table_get_cell_ptr@@Base>
   17e8c:	mov	r5, r0
   17e90:	mov	r0, r6
   17e94:	mov	r1, r4
   17e98:	bl	13e1c <table_get_col_ptr@@Base>
   17e9c:	ldr	r0, [r0, #4]
   17ea0:	mvn	r7, #0
   17ea4:	cmp	r0, #16
   17ea8:	bne	17eec <table_set_float@@Base+0x80>
   17eac:	ldr	r0, [r5]
   17eb0:	cmp	r0, #0
   17eb4:	bne	17ecc <table_set_float@@Base+0x60>
   17eb8:	mov	r0, #4
   17ebc:	bl	12fb4 <malloc@plt>
   17ec0:	cmp	r0, #0
   17ec4:	str	r0, [r5]
   17ec8:	beq	17eec <table_set_float@@Base+0x80>
   17ecc:	vmov	r1, s16
   17ed0:	mov	r2, r4
   17ed4:	mov	r3, #1
   17ed8:	str	r1, [r0]
   17edc:	mov	r0, r6
   17ee0:	mov	r1, r8
   17ee4:	bl	13d50 <table_notify@@Base>
   17ee8:	mov	r7, #0
   17eec:	mov	r0, r7
   17ef0:	vpop	{d8}
   17ef4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017ef8 <table_set_double@@Base>:
   17ef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17efc:	add	fp, sp, #24
   17f00:	vpush	{d8}
   17f04:	vorr	d8, d0, d0
   17f08:	mov	r4, r2
   17f0c:	mov	r5, r1
   17f10:	mov	r6, r0
   17f14:	bl	1820c <table_get_cell_ptr@@Base>
   17f18:	mov	r8, r0
   17f1c:	mov	r0, r6
   17f20:	mov	r1, r4
   17f24:	bl	13e1c <table_get_col_ptr@@Base>
   17f28:	ldr	r0, [r0, #4]
   17f2c:	mvn	r7, #0
   17f30:	cmp	r0, #17
   17f34:	bne	17f74 <table_set_double@@Base+0x7c>
   17f38:	ldr	r0, [r8]
   17f3c:	cmp	r0, #0
   17f40:	bne	17f58 <table_set_double@@Base+0x60>
   17f44:	mov	r0, #8
   17f48:	bl	12fb4 <malloc@plt>
   17f4c:	cmp	r0, #0
   17f50:	str	r0, [r8]
   17f54:	beq	17f74 <table_set_double@@Base+0x7c>
   17f58:	vst1.8	{d8}, [r0]
   17f5c:	mov	r0, r6
   17f60:	mov	r1, r5
   17f64:	mov	r2, r4
   17f68:	mov	r3, #1
   17f6c:	bl	13d50 <table_notify@@Base>
   17f70:	mov	r7, #0
   17f74:	mov	r0, r7
   17f78:	vpop	{d8}
   17f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f80 <table_set_ldouble@@Base>:
   17f80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f84:	add	fp, sp, #24
   17f88:	vpush	{d8}
   17f8c:	vorr	d8, d0, d0
   17f90:	mov	r4, r2
   17f94:	mov	r5, r1
   17f98:	mov	r6, r0
   17f9c:	bl	1820c <table_get_cell_ptr@@Base>
   17fa0:	mov	r8, r0
   17fa4:	mov	r0, r6
   17fa8:	mov	r1, r4
   17fac:	bl	13e1c <table_get_col_ptr@@Base>
   17fb0:	ldr	r0, [r0, #4]
   17fb4:	mvn	r7, #0
   17fb8:	cmp	r0, #18
   17fbc:	bne	17ffc <table_set_ldouble@@Base+0x7c>
   17fc0:	ldr	r0, [r8]
   17fc4:	cmp	r0, #0
   17fc8:	bne	17fe0 <table_set_ldouble@@Base+0x60>
   17fcc:	mov	r0, #8
   17fd0:	bl	12fb4 <malloc@plt>
   17fd4:	cmp	r0, #0
   17fd8:	str	r0, [r8]
   17fdc:	beq	17ffc <table_set_ldouble@@Base+0x7c>
   17fe0:	vst1.8	{d8}, [r0]
   17fe4:	mov	r0, r6
   17fe8:	mov	r1, r5
   17fec:	mov	r2, r4
   17ff0:	mov	r3, #1
   17ff4:	bl	13d50 <table_notify@@Base>
   17ff8:	mov	r7, #0
   17ffc:	mov	r0, r7
   18000:	vpop	{d8}
   18004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018008 <table_set_string@@Base>:
   18008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1800c:	add	fp, sp, #24
   18010:	mov	r8, r3
   18014:	mov	r4, r2
   18018:	mov	r9, r1
   1801c:	mov	r6, r0
   18020:	bl	1820c <table_get_cell_ptr@@Base>
   18024:	mov	r5, r0
   18028:	mov	r0, r6
   1802c:	mov	r1, r4
   18030:	bl	13e1c <table_get_col_ptr@@Base>
   18034:	ldr	r0, [r0, #4]
   18038:	mvn	r7, #0
   1803c:	cmp	r0, #21
   18040:	bne	18088 <table_set_string@@Base+0x80>
   18044:	mov	r0, r8
   18048:	bl	12fd8 <strlen@plt>
   1804c:	ldr	r2, [r5]
   18050:	add	r1, r0, #1
   18054:	mov	r0, r2
   18058:	bl	12f9c <realloc@plt>
   1805c:	cmp	r0, #0
   18060:	str	r0, [r5]
   18064:	beq	18088 <table_set_string@@Base+0x80>
   18068:	mov	r1, r8
   1806c:	bl	12fa8 <strcpy@plt>
   18070:	mov	r0, r6
   18074:	mov	r1, r9
   18078:	mov	r2, r4
   1807c:	mov	r3, #1
   18080:	bl	13d50 <table_notify@@Base>
   18084:	mov	r7, #0
   18088:	mov	r0, r7
   1808c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018090 <table_set_char@@Base>:
   18090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18094:	add	fp, sp, #24
   18098:	mov	r8, r3
   1809c:	mov	r4, r2
   180a0:	mov	r9, r1
   180a4:	mov	r6, r0
   180a8:	bl	1820c <table_get_cell_ptr@@Base>
   180ac:	mov	r5, r0
   180b0:	mov	r0, r6
   180b4:	mov	r1, r4
   180b8:	bl	13e1c <table_get_col_ptr@@Base>
   180bc:	ldr	r0, [r0, #4]
   180c0:	mvn	r7, #0
   180c4:	cmp	r0, #19
   180c8:	bne	18108 <table_set_char@@Base+0x78>
   180cc:	ldr	r0, [r5]
   180d0:	cmp	r0, #0
   180d4:	bne	180ec <table_set_char@@Base+0x5c>
   180d8:	mov	r0, #1
   180dc:	bl	12fb4 <malloc@plt>
   180e0:	cmp	r0, #0
   180e4:	str	r0, [r5]
   180e8:	beq	18108 <table_set_char@@Base+0x78>
   180ec:	strb	r8, [r0]
   180f0:	mov	r0, r6
   180f4:	mov	r1, r9
   180f8:	mov	r2, r4
   180fc:	mov	r3, #1
   18100:	bl	13d50 <table_notify@@Base>
   18104:	mov	r7, #0
   18108:	mov	r0, r7
   1810c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018110 <table_set_uchar@@Base>:
   18110:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18114:	add	fp, sp, #24
   18118:	mov	r8, r3
   1811c:	mov	r4, r2
   18120:	mov	r9, r1
   18124:	mov	r6, r0
   18128:	bl	1820c <table_get_cell_ptr@@Base>
   1812c:	mov	r5, r0
   18130:	mov	r0, r6
   18134:	mov	r1, r4
   18138:	bl	13e1c <table_get_col_ptr@@Base>
   1813c:	ldr	r0, [r0, #4]
   18140:	mvn	r7, #0
   18144:	cmp	r0, #20
   18148:	bne	18188 <table_set_uchar@@Base+0x78>
   1814c:	ldr	r0, [r5]
   18150:	cmp	r0, #0
   18154:	bne	1816c <table_set_uchar@@Base+0x5c>
   18158:	mov	r0, #1
   1815c:	bl	12fb4 <malloc@plt>
   18160:	cmp	r0, #0
   18164:	str	r0, [r5]
   18168:	beq	18188 <table_set_uchar@@Base+0x78>
   1816c:	strb	r8, [r0]
   18170:	mov	r0, r6
   18174:	mov	r1, r9
   18178:	mov	r2, r4
   1817c:	mov	r3, #1
   18180:	bl	13d50 <table_notify@@Base>
   18184:	mov	r7, #0
   18188:	mov	r0, r7
   1818c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018190 <table_set_ptr@@Base>:
   18190:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18194:	add	fp, sp, #24
   18198:	mov	r8, r3
   1819c:	mov	r4, r2
   181a0:	mov	r5, r1
   181a4:	mov	r6, r0
   181a8:	bl	1820c <table_get_cell_ptr@@Base>
   181ac:	mov	r7, r0
   181b0:	mov	r0, r6
   181b4:	mov	r1, r4
   181b8:	bl	13e1c <table_get_col_ptr@@Base>
   181bc:	ldr	r1, [r0, #4]
   181c0:	mvn	r0, #0
   181c4:	cmp	r1, #23
   181c8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   181cc:	mov	r0, r6
   181d0:	mov	r1, r5
   181d4:	mov	r2, r4
   181d8:	mov	r3, #1
   181dc:	str	r8, [r7]
   181e0:	bl	13d50 <table_notify@@Base>
   181e4:	mov	r0, #0
   181e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000181ec <table_cell_init@@Base>:
   181ec:	push	{r4, sl, fp, lr}
   181f0:	add	fp, sp, #8
   181f4:	mov	r4, r2
   181f8:	bl	17088 <table_get_row_ptr@@Base>
   181fc:	ldr	r0, [r0]
   18200:	mov	r1, #0
   18204:	str	r1, [r0, r4, lsl #2]
   18208:	pop	{r4, sl, fp, pc}

0001820c <table_get_cell_ptr@@Base>:
   1820c:	push	{r4, sl, fp, lr}
   18210:	add	fp, sp, #8
   18214:	mov	r4, r2
   18218:	bl	17088 <table_get_row_ptr@@Base>
   1821c:	ldr	r0, [r0]
   18220:	add	r0, r0, r4, lsl #2
   18224:	pop	{r4, sl, fp, pc}

00018228 <table_cell_destroy@@Base>:
   18228:	push	{r4, r5, r6, sl, fp, lr}
   1822c:	add	fp, sp, #16
   18230:	mov	r5, r1
   18234:	mov	r1, r2
   18238:	mov	r4, r2
   1823c:	mov	r6, r0
   18240:	bl	13ec4 <table_get_column_data_type@@Base>
   18244:	cmp	r0, #23
   18248:	popeq	{r4, r5, r6, sl, fp, pc}
   1824c:	mov	r0, r6
   18250:	mov	r1, r5
   18254:	bl	17088 <table_get_row_ptr@@Base>
   18258:	ldr	r0, [r0]
   1825c:	ldr	r0, [r0, r4, lsl #2]
   18260:	cmp	r0, #0
   18264:	beq	18270 <table_cell_destroy@@Base+0x48>
   18268:	pop	{r4, r5, r6, sl, fp, lr}
   1826c:	b	12f90 <free@plt>
   18270:	pop	{r4, r5, r6, sl, fp, pc}

00018274 <table_cell_to_buffer@@Base>:
   18274:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18278:	add	fp, sp, #24
   1827c:	sub	sp, sp, #8
   18280:	mov	r7, r1
   18284:	mov	r1, r2
   18288:	mov	r5, r3
   1828c:	mov	r6, r2
   18290:	mov	r4, r0
   18294:	bl	13ec4 <table_get_column_data_type@@Base>
   18298:	cmp	r0, #23
   1829c:	bhi	1850c <table_cell_to_buffer@@Base+0x298>
   182a0:	ldr	r8, [fp, #8]
   182a4:	add	r1, pc, #0
   182a8:	ldr	pc, [r1, r0, lsl #2]
   182ac:	andeq	r8, r1, ip, lsl #6
   182b0:	andeq	r8, r1, r0, lsr #6
   182b4:	andeq	r8, r1, r4, lsr r3
   182b8:	andeq	r8, r1, r8, asr #6
   182bc:	andeq	r8, r1, ip, asr r3
   182c0:	andeq	r8, r1, r0, ror r3
   182c4:	andeq	r8, r1, r4, lsl #7
   182c8:	muleq	r1, r8, r3
   182cc:			; <UNDEFINED> instruction: 0x000183b8
   182d0:	andeq	r8, r1, ip, asr #7
   182d4:	andeq	r8, r1, r0, ror #7
   182d8:	andeq	r8, r1, r0, lsl #8
   182dc:	andeq	r8, r1, r0, lsr #8
   182e0:	andeq	r8, r1, r0, asr #8
   182e4:	andeq	r8, r1, r0, ror #8
   182e8:	andeq	r8, r1, r0, lsl #9
   182ec:	andeq	r8, r1, r0, lsr #9
   182f0:	andeq	r8, r1, r4, asr #9
   182f4:	andeq	r8, r1, r4, ror #9
   182f8:	andeq	r8, r1, r8, lsl r5
   182fc:	andeq	r8, r1, ip, lsr #10
   18300:	andeq	r8, r1, ip, asr #10
   18304:	andeq	r8, r1, ip, ror #10
   18308:	andeq	r8, r1, r0, lsr #11
   1830c:	mov	r0, r4
   18310:	mov	r1, r7
   18314:	mov	r2, r6
   18318:	bl	16e44 <table_get_int@@Base>
   1831c:	b	1857c <table_cell_to_buffer@@Base+0x308>
   18320:	mov	r0, r4
   18324:	mov	r1, r7
   18328:	mov	r2, r6
   1832c:	bl	16e5c <table_get_uint@@Base>
   18330:	b	183a8 <table_cell_to_buffer@@Base+0x134>
   18334:	mov	r0, r4
   18338:	mov	r1, r7
   1833c:	mov	r2, r6
   18340:	bl	16e74 <table_get_int8@@Base>
   18344:	b	1857c <table_cell_to_buffer@@Base+0x308>
   18348:	mov	r0, r4
   1834c:	mov	r1, r7
   18350:	mov	r2, r6
   18354:	bl	16e8c <table_get_uint8@@Base>
   18358:	b	183a8 <table_cell_to_buffer@@Base+0x134>
   1835c:	mov	r0, r4
   18360:	mov	r1, r7
   18364:	mov	r2, r6
   18368:	bl	16ea4 <table_get_int16@@Base>
   1836c:	b	1857c <table_cell_to_buffer@@Base+0x308>
   18370:	mov	r0, r4
   18374:	mov	r1, r7
   18378:	mov	r2, r6
   1837c:	bl	16ebc <table_get_uint16@@Base>
   18380:	b	183a8 <table_cell_to_buffer@@Base+0x134>
   18384:	mov	r0, r4
   18388:	mov	r1, r7
   1838c:	mov	r2, r6
   18390:	bl	16ed4 <table_get_int32@@Base>
   18394:	b	1857c <table_cell_to_buffer@@Base+0x308>
   18398:	mov	r0, r4
   1839c:	mov	r1, r7
   183a0:	mov	r2, r6
   183a4:	bl	16eec <table_get_uint32@@Base>
   183a8:	movw	r2, #36336	; 0x8df0
   183ac:	mov	r3, r0
   183b0:	movt	r2, #1
   183b4:	b	18588 <table_cell_to_buffer@@Base+0x314>
   183b8:	mov	r0, r4
   183bc:	mov	r1, r7
   183c0:	mov	r2, r6
   183c4:	bl	16f04 <table_get_int64@@Base>
   183c8:	b	18470 <table_cell_to_buffer@@Base+0x1fc>
   183cc:	mov	r0, r4
   183d0:	mov	r1, r7
   183d4:	mov	r2, r6
   183d8:	bl	16f1c <table_get_uint64@@Base>
   183dc:	b	18490 <table_cell_to_buffer@@Base+0x21c>
   183e0:	mov	r0, r4
   183e4:	mov	r1, r7
   183e8:	mov	r2, r6
   183ec:	bl	16f34 <table_get_short@@Base>
   183f0:	movw	r2, #36349	; 0x8dfd
   183f4:	mov	r3, r0
   183f8:	movt	r2, #1
   183fc:	b	18588 <table_cell_to_buffer@@Base+0x314>
   18400:	mov	r0, r4
   18404:	mov	r1, r7
   18408:	mov	r2, r6
   1840c:	bl	16f4c <table_get_ushort@@Base>
   18410:	movw	r2, #36353	; 0x8e01
   18414:	mov	r3, r0
   18418:	movt	r2, #1
   1841c:	b	18588 <table_cell_to_buffer@@Base+0x314>
   18420:	mov	r0, r4
   18424:	mov	r1, r7
   18428:	mov	r2, r6
   1842c:	bl	16f64 <table_get_long@@Base>
   18430:	movw	r2, #36357	; 0x8e05
   18434:	mov	r3, r0
   18438:	movt	r2, #1
   1843c:	b	18588 <table_cell_to_buffer@@Base+0x314>
   18440:	mov	r0, r4
   18444:	mov	r1, r7
   18448:	mov	r2, r6
   1844c:	bl	16f7c <table_get_ulong@@Base>
   18450:	movw	r2, #36361	; 0x8e09
   18454:	mov	r3, r0
   18458:	movt	r2, #1
   1845c:	b	18588 <table_cell_to_buffer@@Base+0x314>
   18460:	mov	r0, r4
   18464:	mov	r1, r7
   18468:	mov	r2, r6
   1846c:	bl	16f94 <table_get_llong@@Base>
   18470:	movw	r2, #36339	; 0x8df3
   18474:	stm	sp, {r0, r1}
   18478:	movt	r2, #1
   1847c:	b	18500 <table_cell_to_buffer@@Base+0x28c>
   18480:	mov	r0, r4
   18484:	mov	r1, r7
   18488:	mov	r2, r6
   1848c:	bl	16fac <table_get_ullong@@Base>
   18490:	movw	r2, #36344	; 0x8df8
   18494:	stm	sp, {r0, r1}
   18498:	movt	r2, #1
   1849c:	b	18500 <table_cell_to_buffer@@Base+0x28c>
   184a0:	mov	r0, r4
   184a4:	mov	r1, r7
   184a8:	mov	r2, r6
   184ac:	bl	16fc4 <table_get_float@@Base>
   184b0:	movw	r2, #36368	; 0x8e10
   184b4:	vcvt.f64.f32	d16, s0
   184b8:	vstr	d16, [sp]
   184bc:	movt	r2, #1
   184c0:	b	18500 <table_cell_to_buffer@@Base+0x28c>
   184c4:	mov	r0, r4
   184c8:	mov	r1, r7
   184cc:	mov	r2, r6
   184d0:	bl	16fdc <table_get_double@@Base>
   184d4:	movw	r2, #36371	; 0x8e13
   184d8:	vstr	d0, [sp]
   184dc:	movt	r2, #1
   184e0:	b	18500 <table_cell_to_buffer@@Base+0x28c>
   184e4:	mov	r0, r4
   184e8:	mov	r1, r7
   184ec:	mov	r2, r6
   184f0:	bl	16ff4 <table_get_ldouble@@Base>
   184f4:	movw	r2, #36375	; 0x8e17
   184f8:	vstr	d0, [sp]
   184fc:	movt	r2, #1
   18500:	mov	r0, r5
   18504:	mov	r1, r8
   18508:	bl	12fe4 <snprintf@plt>
   1850c:	mov	r0, #0
   18510:	sub	sp, fp, #24
   18514:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18518:	mov	r0, r4
   1851c:	mov	r1, r7
   18520:	mov	r2, r6
   18524:	bl	1700c <table_get_char@@Base>
   18528:	b	1853c <table_cell_to_buffer@@Base+0x2c8>
   1852c:	mov	r0, r4
   18530:	mov	r1, r7
   18534:	mov	r2, r6
   18538:	bl	17024 <table_get_uchar@@Base>
   1853c:	movw	r2, #36379	; 0x8e1b
   18540:	mov	r3, r0
   18544:	movt	r2, #1
   18548:	b	18588 <table_cell_to_buffer@@Base+0x314>
   1854c:	mov	r0, r4
   18550:	mov	r1, r7
   18554:	mov	r2, r6
   18558:	bl	1703c <table_get_string@@Base>
   1855c:	movw	r2, #36365	; 0x8e0d
   18560:	mov	r3, r0
   18564:	movt	r2, #1
   18568:	b	18588 <table_cell_to_buffer@@Base+0x314>
   1856c:	mov	r0, r4
   18570:	mov	r1, r7
   18574:	mov	r2, r6
   18578:	bl	16e2c <table_get_bool@@Base>
   1857c:	movw	r2, #36045	; 0x8ccd
   18580:	mov	r3, r0
   18584:	movt	r2, #1
   18588:	mov	r0, r5
   1858c:	mov	r1, r8
   18590:	bl	12fe4 <snprintf@plt>
   18594:	mov	r0, #0
   18598:	sub	sp, fp, #24
   1859c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185a0:	mov	r0, r4
   185a4:	mov	r1, r7
   185a8:	mov	r2, r6
   185ac:	bl	17050 <table_get_ptr@@Base>
   185b0:	movw	r2, #36382	; 0x8e1e
   185b4:	mov	r3, r0
   185b8:	movt	r2, #1
   185bc:	b	18588 <table_cell_to_buffer@@Base+0x314>

000185c0 <table_cell_from_buffer@@Base>:
   185c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   185c4:	add	fp, sp, #24
   185c8:	sub	sp, sp, #264	; 0x108
   185cc:	mov	r5, r1
   185d0:	mov	r1, r2
   185d4:	mov	r7, r3
   185d8:	mov	r4, r2
   185dc:	mov	r6, r0
   185e0:	bl	13ec4 <table_get_column_data_type@@Base>
   185e4:	cmp	r0, #23
   185e8:	bhi	18bbc <table_cell_from_buffer@@Base+0x5fc>
   185ec:	add	r1, pc, #0
   185f0:	ldr	pc, [r1, r0, lsl #2]
   185f4:	andeq	r8, r1, r4, asr r6
   185f8:	andeq	r8, r1, ip, lsl #13
   185fc:	andeq	r8, r1, r4, asr #13
   18600:	strdeq	r8, [r1], -ip
   18604:	andeq	r8, r1, r4, lsr r7
   18608:	andeq	r8, r1, ip, ror #14
   1860c:	andeq	r8, r1, r4, lsr #15
   18610:	ldrdeq	r8, [r1], -ip
   18614:	andeq	r8, r1, r4, lsl r8
   18618:	andeq	r8, r1, r4, asr r8
   1861c:	muleq	r1, r4, r8
   18620:	andeq	r8, r1, ip, asr #17
   18624:	andeq	r8, r1, r4, lsl #18
   18628:	andeq	r8, r1, ip, lsr r9
   1862c:	andeq	r8, r1, r4, ror r9
   18630:			; <UNDEFINED> instruction: 0x000189b4
   18634:	strdeq	r8, [r1], -r4
   18638:	andeq	r8, r1, ip, lsr #20
   1863c:	andeq	r8, r1, r4, ror #20
   18640:	muleq	r1, ip, sl
   18644:	ldrdeq	r8, [r1], -r4
   18648:	andeq	r8, r1, ip, lsl #22
   1864c:	andeq	r8, r1, r4, asr #22
   18650:	andeq	r8, r1, r8, lsl #23
   18654:	movw	r1, #36045	; 0x8ccd
   18658:	add	r2, sp, #8
   1865c:	mov	r0, r7
   18660:	movt	r1, #1
   18664:	bl	12ff0 <__isoc99_sscanf@plt>
   18668:	mvn	r7, #0
   1866c:	cmp	r0, #1
   18670:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18674:	ldr	r3, [sp, #8]
   18678:	mov	r0, r6
   1867c:	mov	r1, r5
   18680:	mov	r2, r4
   18684:	bl	1764c <table_set_int@@Base>
   18688:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   1868c:	movw	r1, #36336	; 0x8df0
   18690:	add	r2, sp, #8
   18694:	mov	r0, r7
   18698:	movt	r1, #1
   1869c:	bl	12ff0 <__isoc99_sscanf@plt>
   186a0:	mvn	r7, #0
   186a4:	cmp	r0, #1
   186a8:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   186ac:	ldr	r3, [sp, #8]
   186b0:	mov	r0, r6
   186b4:	mov	r1, r5
   186b8:	mov	r2, r4
   186bc:	bl	176cc <table_set_uint@@Base>
   186c0:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   186c4:	movw	r1, #36385	; 0x8e21
   186c8:	add	r2, sp, #8
   186cc:	mov	r0, r7
   186d0:	movt	r1, #1
   186d4:	bl	12ff0 <__isoc99_sscanf@plt>
   186d8:	mvn	r7, #0
   186dc:	cmp	r0, #1
   186e0:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   186e4:	ldrsb	r3, [sp, #8]
   186e8:	mov	r0, r6
   186ec:	mov	r1, r5
   186f0:	mov	r2, r4
   186f4:	bl	1774c <table_set_int8@@Base>
   186f8:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   186fc:	movw	r1, #36390	; 0x8e26
   18700:	add	r2, sp, #8
   18704:	mov	r0, r7
   18708:	movt	r1, #1
   1870c:	bl	12ff0 <__isoc99_sscanf@plt>
   18710:	mvn	r7, #0
   18714:	cmp	r0, #1
   18718:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   1871c:	ldrb	r3, [sp, #8]
   18720:	mov	r0, r6
   18724:	mov	r1, r5
   18728:	mov	r2, r4
   1872c:	bl	177cc <table_set_uint8@@Base>
   18730:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18734:	movw	r1, #36349	; 0x8dfd
   18738:	add	r2, sp, #8
   1873c:	mov	r0, r7
   18740:	movt	r1, #1
   18744:	bl	12ff0 <__isoc99_sscanf@plt>
   18748:	mvn	r7, #0
   1874c:	cmp	r0, #1
   18750:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18754:	ldrsh	r3, [sp, #8]
   18758:	mov	r0, r6
   1875c:	mov	r1, r5
   18760:	mov	r2, r4
   18764:	bl	1784c <table_set_int16@@Base>
   18768:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   1876c:	movw	r1, #36353	; 0x8e01
   18770:	add	r2, sp, #8
   18774:	mov	r0, r7
   18778:	movt	r1, #1
   1877c:	bl	12ff0 <__isoc99_sscanf@plt>
   18780:	mvn	r7, #0
   18784:	cmp	r0, #1
   18788:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   1878c:	ldrh	r3, [sp, #8]
   18790:	mov	r0, r6
   18794:	mov	r1, r5
   18798:	mov	r2, r4
   1879c:	bl	178cc <table_set_uint16@@Base>
   187a0:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   187a4:	movw	r1, #36045	; 0x8ccd
   187a8:	add	r2, sp, #8
   187ac:	mov	r0, r7
   187b0:	movt	r1, #1
   187b4:	bl	12ff0 <__isoc99_sscanf@plt>
   187b8:	mvn	r7, #0
   187bc:	cmp	r0, #1
   187c0:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   187c4:	ldr	r3, [sp, #8]
   187c8:	mov	r0, r6
   187cc:	mov	r1, r5
   187d0:	mov	r2, r4
   187d4:	bl	1794c <table_set_int32@@Base>
   187d8:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   187dc:	movw	r1, #36336	; 0x8df0
   187e0:	add	r2, sp, #8
   187e4:	mov	r0, r7
   187e8:	movt	r1, #1
   187ec:	bl	12ff0 <__isoc99_sscanf@plt>
   187f0:	mvn	r7, #0
   187f4:	cmp	r0, #1
   187f8:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   187fc:	ldr	r3, [sp, #8]
   18800:	mov	r0, r6
   18804:	mov	r1, r5
   18808:	mov	r2, r4
   1880c:	bl	179cc <table_set_uint32@@Base>
   18810:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18814:	movw	r1, #36339	; 0x8df3
   18818:	add	r2, sp, #8
   1881c:	mov	r0, r7
   18820:	movt	r1, #1
   18824:	bl	12ff0 <__isoc99_sscanf@plt>
   18828:	mvn	r7, #0
   1882c:	cmp	r0, #1
   18830:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18834:	ldr	r0, [sp, #8]
   18838:	ldr	r1, [sp, #12]
   1883c:	mov	r2, r4
   18840:	stm	sp, {r0, r1}
   18844:	mov	r0, r6
   18848:	mov	r1, r5
   1884c:	bl	17a4c <table_set_int64@@Base>
   18850:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18854:	movw	r1, #36344	; 0x8df8
   18858:	add	r2, sp, #8
   1885c:	mov	r0, r7
   18860:	movt	r1, #1
   18864:	bl	12ff0 <__isoc99_sscanf@plt>
   18868:	mvn	r7, #0
   1886c:	cmp	r0, #1
   18870:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18874:	ldr	r0, [sp, #8]
   18878:	ldr	r1, [sp, #12]
   1887c:	mov	r2, r4
   18880:	stm	sp, {r0, r1}
   18884:	mov	r0, r6
   18888:	mov	r1, r5
   1888c:	bl	17ad4 <table_set_uint64@@Base>
   18890:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18894:	movw	r1, #36349	; 0x8dfd
   18898:	add	r2, sp, #8
   1889c:	mov	r0, r7
   188a0:	movt	r1, #1
   188a4:	bl	12ff0 <__isoc99_sscanf@plt>
   188a8:	mvn	r7, #0
   188ac:	cmp	r0, #1
   188b0:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   188b4:	ldrsh	r3, [sp, #8]
   188b8:	mov	r0, r6
   188bc:	mov	r1, r5
   188c0:	mov	r2, r4
   188c4:	bl	17b5c <table_set_short@@Base>
   188c8:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   188cc:	movw	r1, #36353	; 0x8e01
   188d0:	add	r2, sp, #8
   188d4:	mov	r0, r7
   188d8:	movt	r1, #1
   188dc:	bl	12ff0 <__isoc99_sscanf@plt>
   188e0:	mvn	r7, #0
   188e4:	cmp	r0, #1
   188e8:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   188ec:	ldrh	r3, [sp, #8]
   188f0:	mov	r0, r6
   188f4:	mov	r1, r5
   188f8:	mov	r2, r4
   188fc:	bl	17bdc <table_set_ushort@@Base>
   18900:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18904:	movw	r1, #36357	; 0x8e05
   18908:	add	r2, sp, #8
   1890c:	mov	r0, r7
   18910:	movt	r1, #1
   18914:	bl	12ff0 <__isoc99_sscanf@plt>
   18918:	mvn	r7, #0
   1891c:	cmp	r0, #1
   18920:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18924:	ldr	r3, [sp, #8]
   18928:	mov	r0, r6
   1892c:	mov	r1, r5
   18930:	mov	r2, r4
   18934:	bl	17c5c <table_set_long@@Base>
   18938:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   1893c:	movw	r1, #36361	; 0x8e09
   18940:	add	r2, sp, #8
   18944:	mov	r0, r7
   18948:	movt	r1, #1
   1894c:	bl	12ff0 <__isoc99_sscanf@plt>
   18950:	mvn	r7, #0
   18954:	cmp	r0, #1
   18958:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   1895c:	ldr	r3, [sp, #8]
   18960:	mov	r0, r6
   18964:	mov	r1, r5
   18968:	mov	r2, r4
   1896c:	bl	17cdc <table_set_ulong@@Base>
   18970:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18974:	movw	r1, #36339	; 0x8df3
   18978:	add	r2, sp, #8
   1897c:	mov	r0, r7
   18980:	movt	r1, #1
   18984:	bl	12ff0 <__isoc99_sscanf@plt>
   18988:	mvn	r7, #0
   1898c:	cmp	r0, #1
   18990:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18994:	ldr	r0, [sp, #8]
   18998:	ldr	r1, [sp, #12]
   1899c:	mov	r2, r4
   189a0:	stm	sp, {r0, r1}
   189a4:	mov	r0, r6
   189a8:	mov	r1, r5
   189ac:	bl	17d5c <table_set_llong@@Base>
   189b0:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   189b4:	movw	r1, #36344	; 0x8df8
   189b8:	add	r2, sp, #8
   189bc:	mov	r0, r7
   189c0:	movt	r1, #1
   189c4:	bl	12ff0 <__isoc99_sscanf@plt>
   189c8:	mvn	r7, #0
   189cc:	cmp	r0, #1
   189d0:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   189d4:	ldr	r0, [sp, #8]
   189d8:	ldr	r1, [sp, #12]
   189dc:	mov	r2, r4
   189e0:	stm	sp, {r0, r1}
   189e4:	mov	r0, r6
   189e8:	mov	r1, r5
   189ec:	bl	17de4 <table_set_ullong@@Base>
   189f0:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   189f4:	movw	r1, #36368	; 0x8e10
   189f8:	add	r2, sp, #8
   189fc:	mov	r0, r7
   18a00:	movt	r1, #1
   18a04:	bl	12ff0 <__isoc99_sscanf@plt>
   18a08:	mvn	r7, #0
   18a0c:	cmp	r0, #1
   18a10:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18a14:	vldr	s0, [sp, #8]
   18a18:	mov	r0, r6
   18a1c:	mov	r1, r5
   18a20:	mov	r2, r4
   18a24:	bl	17e6c <table_set_float@@Base>
   18a28:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18a2c:	movw	r1, #36371	; 0x8e13
   18a30:	add	r2, sp, #8
   18a34:	mov	r0, r7
   18a38:	movt	r1, #1
   18a3c:	bl	12ff0 <__isoc99_sscanf@plt>
   18a40:	mvn	r7, #0
   18a44:	cmp	r0, #1
   18a48:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18a4c:	vldr	d0, [sp, #8]
   18a50:	mov	r0, r6
   18a54:	mov	r1, r5
   18a58:	mov	r2, r4
   18a5c:	bl	17ef8 <table_set_double@@Base>
   18a60:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18a64:	movw	r1, #36375	; 0x8e17
   18a68:	add	r2, sp, #8
   18a6c:	mov	r0, r7
   18a70:	movt	r1, #1
   18a74:	bl	12ff0 <__isoc99_sscanf@plt>
   18a78:	mvn	r7, #0
   18a7c:	cmp	r0, #1
   18a80:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18a84:	vldr	d0, [sp, #8]
   18a88:	mov	r0, r6
   18a8c:	mov	r1, r5
   18a90:	mov	r2, r4
   18a94:	bl	17f80 <table_set_ldouble@@Base>
   18a98:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18a9c:	movw	r1, #36379	; 0x8e1b
   18aa0:	add	r2, sp, #8
   18aa4:	mov	r0, r7
   18aa8:	movt	r1, #1
   18aac:	bl	12ff0 <__isoc99_sscanf@plt>
   18ab0:	mvn	r7, #0
   18ab4:	cmp	r0, #1
   18ab8:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18abc:	ldrb	r3, [sp, #8]
   18ac0:	mov	r0, r6
   18ac4:	mov	r1, r5
   18ac8:	mov	r2, r4
   18acc:	bl	18090 <table_set_char@@Base>
   18ad0:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18ad4:	movw	r1, #36379	; 0x8e1b
   18ad8:	add	r2, sp, #8
   18adc:	mov	r0, r7
   18ae0:	movt	r1, #1
   18ae4:	bl	12ff0 <__isoc99_sscanf@plt>
   18ae8:	mvn	r7, #0
   18aec:	cmp	r0, #1
   18af0:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18af4:	ldrb	r3, [sp, #8]
   18af8:	mov	r0, r6
   18afc:	mov	r1, r5
   18b00:	mov	r2, r4
   18b04:	bl	18110 <table_set_uchar@@Base>
   18b08:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18b0c:	movw	r1, #36365	; 0x8e0d
   18b10:	add	r2, sp, #8
   18b14:	mov	r0, r7
   18b18:	movt	r1, #1
   18b1c:	bl	12ff0 <__isoc99_sscanf@plt>
   18b20:	mvn	r7, #0
   18b24:	cmp	r0, #1
   18b28:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18b2c:	add	r3, sp, #8
   18b30:	mov	r0, r6
   18b34:	mov	r1, r5
   18b38:	mov	r2, r4
   18b3c:	bl	18008 <table_set_string@@Base>
   18b40:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18b44:	movw	r1, #36045	; 0x8ccd
   18b48:	add	r2, sp, #8
   18b4c:	mov	r0, r7
   18b50:	movt	r1, #1
   18b54:	bl	12ff0 <__isoc99_sscanf@plt>
   18b58:	mvn	r7, #0
   18b5c:	cmp	r0, #1
   18b60:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18b64:	ldr	r0, [sp, #8]
   18b68:	cmp	r0, #0
   18b6c:	beq	18bcc <table_cell_from_buffer@@Base+0x60c>
   18b70:	mov	r0, r6
   18b74:	mov	r1, r5
   18b78:	mov	r2, r4
   18b7c:	mov	r3, #1
   18b80:	bl	175cc <table_set_bool@@Base>
   18b84:	b	18bbc <table_cell_from_buffer@@Base+0x5fc>
   18b88:	movw	r1, #36382	; 0x8e1e
   18b8c:	add	r2, sp, #8
   18b90:	mov	r0, r7
   18b94:	movt	r1, #1
   18b98:	bl	12ff0 <__isoc99_sscanf@plt>
   18b9c:	mvn	r7, #0
   18ba0:	cmp	r0, #1
   18ba4:	bne	18bc0 <table_cell_from_buffer@@Base+0x600>
   18ba8:	ldr	r3, [sp, #8]
   18bac:	mov	r0, r6
   18bb0:	mov	r1, r5
   18bb4:	mov	r2, r4
   18bb8:	bl	18190 <table_set_ptr@@Base>
   18bbc:	mov	r7, #0
   18bc0:	mov	r0, r7
   18bc4:	sub	sp, fp, #24
   18bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18bcc:	mov	r0, r6
   18bd0:	mov	r1, r5
   18bd4:	mov	r2, r4
   18bd8:	mov	r3, #0
   18bdc:	mov	r7, #0
   18be0:	bl	175cc <table_set_bool@@Base>
   18be4:	mov	r0, r7
   18be8:	sub	sp, fp, #24
   18bec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018bf0 <table_cell_nullify@@Base>:
   18bf0:	push	{r4, r5, fp, lr}
   18bf4:	add	fp, sp, #8
   18bf8:	mov	r4, r2
   18bfc:	bl	17088 <table_get_row_ptr@@Base>
   18c00:	ldr	r5, [r0]
   18c04:	ldr	r0, [r5, r4, lsl #2]
   18c08:	cmp	r0, #0
   18c0c:	beq	18c1c <table_cell_nullify@@Base+0x2c>
   18c10:	bl	12f90 <free@plt>
   18c14:	mov	r0, #0
   18c18:	str	r0, [r5, r4, lsl #2]
   18c1c:	mov	r0, #0
   18c20:	pop	{r4, r5, fp, pc}

00018c24 <__libc_csu_init@@Base>:
   18c24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c28:	mov	r7, r0
   18c2c:	ldr	r6, [pc, #72]	; 18c7c <__libc_csu_init@@Base+0x58>
   18c30:	ldr	r5, [pc, #72]	; 18c80 <__libc_csu_init@@Base+0x5c>
   18c34:	add	r6, pc, r6
   18c38:	add	r5, pc, r5
   18c3c:	sub	r6, r6, r5
   18c40:	mov	r8, r1
   18c44:	mov	r9, r2
   18c48:	bl	12f58 <strcmp@plt-0x20>
   18c4c:	asrs	r6, r6, #2
   18c50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c54:	mov	r4, #0
   18c58:	add	r4, r4, #1
   18c5c:	ldr	r3, [r5], #4
   18c60:	mov	r2, r9
   18c64:	mov	r1, r8
   18c68:	mov	r0, r7
   18c6c:	blx	r3
   18c70:	cmp	r6, r4
   18c74:	bne	18c58 <__libc_csu_init@@Base+0x34>
   18c78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c7c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   18c80:	andeq	r0, r1, r8, asr #5

00018c84 <__libc_csu_fini@@Base>:
   18c84:	bx	lr

Disassembly of section .fini:

00018c88 <.fini>:
   18c88:	push	{r3, lr}
   18c8c:	pop	{r3, pc}
