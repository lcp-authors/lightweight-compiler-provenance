
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011298 <.init>:
   11298:	push	{r3, lr}
   1129c:	bl	115dc <putc_unlocked@plt+0x48>
   112a0:	pop	{r3, pc}

Disassembly of section .plt:

000112a4 <fdopen@plt-0x14>:
   112a4:	push	{lr}		; (str lr, [sp, #-4]!)
   112a8:	ldr	lr, [pc, #4]	; 112b4 <fdopen@plt-0x4>
   112ac:	add	lr, pc, lr
   112b0:	ldr	pc, [lr, #8]!
   112b4:	andeq	sl, r1, ip, asr #26

000112b8 <fdopen@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #106496	; 0x1a000
   112c0:	ldr	pc, [ip, #3404]!	; 0xd4c

000112c4 <calloc@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #106496	; 0x1a000
   112cc:	ldr	pc, [ip, #3396]!	; 0xd44

000112d0 <fputs_unlocked@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #106496	; 0x1a000
   112d8:	ldr	pc, [ip, #3388]!	; 0xd3c

000112dc <inet_aton@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #106496	; 0x1a000
   112e4:	ldr	pc, [ip, #3380]!	; 0xd34

000112e8 <strcmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #106496	; 0x1a000
   112f0:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f4 <printf@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #106496	; 0x1a000
   112fc:	ldr	pc, [ip, #3364]!	; 0xd24

00011300 <memmove@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #106496	; 0x1a000
   11308:	ldr	pc, [ip, #3356]!	; 0xd1c

0001130c <strchrnul@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #106496	; 0x1a000
   11314:	ldr	pc, [ip, #3348]!	; 0xd14

00011318 <free@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #106496	; 0x1a000
   11320:	ldr	pc, [ip, #3340]!	; 0xd0c

00011324 <gai_strerror@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #106496	; 0x1a000
   1132c:	ldr	pc, [ip, #3332]!	; 0xd04

00011330 <fgets@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #106496	; 0x1a000
   11338:	ldr	pc, [ip, #3324]!	; 0xcfc

0001133c <ferror@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #106496	; 0x1a000
   11344:	ldr	pc, [ip, #3316]!	; 0xcf4

00011348 <strndup@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #106496	; 0x1a000
   11350:	ldr	pc, [ip, #3308]!	; 0xcec

00011354 <memcpy@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #106496	; 0x1a000
   1135c:	ldr	pc, [ip, #3300]!	; 0xce4

00011360 <signal@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #106496	; 0x1a000
   11368:	ldr	pc, [ip, #3292]!	; 0xcdc

0001136c <fwrite_unlocked@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #106496	; 0x1a000
   11374:	ldr	pc, [ip, #3284]!	; 0xcd4

00011378 <sleep@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #106496	; 0x1a000
   11380:	ldr	pc, [ip, #3276]!	; 0xccc

00011384 <realloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #106496	; 0x1a000
   1138c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011390 <strcasecmp@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #106496	; 0x1a000
   11398:	ldr	pc, [ip, #3260]!	; 0xcbc

0001139c <funlockfile@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #106496	; 0x1a000
   113a4:	ldr	pc, [ip, #3252]!	; 0xcb4

000113a8 <strcat@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #106496	; 0x1a000
   113b0:	ldr	pc, [ip, #3244]!	; 0xcac

000113b4 <strcpy@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #106496	; 0x1a000
   113bc:	ldr	pc, [ip, #3236]!	; 0xca4

000113c0 <error@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #106496	; 0x1a000
   113c8:	ldr	pc, [ip, #3228]!	; 0xc9c

000113cc <getenv@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #106496	; 0x1a000
   113d4:	ldr	pc, [ip, #3220]!	; 0xc94

000113d8 <puts@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #106496	; 0x1a000
   113e0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e4 <malloc@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #106496	; 0x1a000
   113ec:	ldr	pc, [ip, #3204]!	; 0xc84

000113f0 <__libc_start_main@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #106496	; 0x1a000
   113f8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113fc <strerror@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #106496	; 0x1a000
   11404:	ldr	pc, [ip, #3188]!	; 0xc74

00011408 <__ctype_tolower_loc@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #106496	; 0x1a000
   11410:	ldr	pc, [ip, #3180]!	; 0xc6c

00011414 <__gmon_start__@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #106496	; 0x1a000
   1141c:	ldr	pc, [ip, #3172]!	; 0xc64

00011420 <__ctype_b_loc@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #106496	; 0x1a000
   11428:	ldr	pc, [ip, #3164]!	; 0xc5c

0001142c <exit@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #106496	; 0x1a000
   11434:	ldr	pc, [ip, #3156]!	; 0xc54

00011438 <strlen@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #106496	; 0x1a000
   11440:	ldr	pc, [ip, #3148]!	; 0xc4c

00011444 <strchr@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #106496	; 0x1a000
   1144c:	ldr	pc, [ip, #3140]!	; 0xc44

00011450 <fprintf@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #106496	; 0x1a000
   11458:	ldr	pc, [ip, #3132]!	; 0xc3c

0001145c <__errno_location@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #106496	; 0x1a000
   11464:	ldr	pc, [ip, #3124]!	; 0xc34

00011468 <strncasecmp@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #106496	; 0x1a000
   11470:	ldr	pc, [ip, #3116]!	; 0xc2c

00011474 <strerror_r@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #106496	; 0x1a000
   1147c:	ldr	pc, [ip, #3108]!	; 0xc24

00011480 <memset@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #106496	; 0x1a000
   11488:	ldr	pc, [ip, #3100]!	; 0xc1c

0001148c <write@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #106496	; 0x1a000
   11494:	ldr	pc, [ip, #3092]!	; 0xc14

00011498 <memchr@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #106496	; 0x1a000
   114a0:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a4 <strrchr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #106496	; 0x1a000
   114ac:	ldr	pc, [ip, #3076]!	; 0xc04

000114b0 <vfprintf@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #106496	; 0x1a000
   114b8:	ldr	pc, [ip, #3068]!	; 0xbfc

000114bc <fputc@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #106496	; 0x1a000
   114c4:	ldr	pc, [ip, #3060]!	; 0xbf4

000114c8 <sscanf@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #106496	; 0x1a000
   114d0:	ldr	pc, [ip, #3052]!	; 0xbec

000114d4 <sprintf@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #106496	; 0x1a000
   114dc:	ldr	pc, [ip, #3044]!	; 0xbe4

000114e0 <flockfile@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #106496	; 0x1a000
   114e8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114ec <vsnprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #106496	; 0x1a000
   114f4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114f8 <atoi@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #106496	; 0x1a000
   11500:	ldr	pc, [ip, #3020]!	; 0xbcc

00011504 <qsort@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #106496	; 0x1a000
   1150c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011510 <strpbrk@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #106496	; 0x1a000
   11518:	ldr	pc, [ip, #3004]!	; 0xbbc

0001151c <freeaddrinfo@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #106496	; 0x1a000
   11524:	ldr	pc, [ip, #2996]!	; 0xbb4

00011528 <getaddrinfo@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #106496	; 0x1a000
   11530:	ldr	pc, [ip, #2988]!	; 0xbac

00011534 <socket@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #106496	; 0x1a000
   1153c:	ldr	pc, [ip, #2980]!	; 0xba4

00011540 <gethostbyname@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #106496	; 0x1a000
   11548:	ldr	pc, [ip, #2972]!	; 0xb9c

0001154c <fputs@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #106496	; 0x1a000
   11554:	ldr	pc, [ip, #2964]!	; 0xb94

00011558 <strncmp@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #106496	; 0x1a000
   11560:	ldr	pc, [ip, #2956]!	; 0xb8c

00011564 <abort@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #106496	; 0x1a000
   1156c:	ldr	pc, [ip, #2948]!	; 0xb84

00011570 <close@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #106496	; 0x1a000
   11578:	ldr	pc, [ip, #2940]!	; 0xb7c

0001157c <connect@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #106496	; 0x1a000
   11584:	ldr	pc, [ip, #2932]!	; 0xb74

00011588 <__assert_fail@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #106496	; 0x1a000
   11590:	ldr	pc, [ip, #2924]!	; 0xb6c

00011594 <putc_unlocked@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #106496	; 0x1a000
   1159c:	ldr	pc, [ip, #2916]!	; 0xb64

Disassembly of section .text:

000115a0 <argp_parse@@Base-0x1620>:
   115a0:	mov	fp, #0
   115a4:	mov	lr, #0
   115a8:	pop	{r1}		; (ldr r1, [sp], #4)
   115ac:	mov	r2, sp
   115b0:	push	{r2}		; (str r2, [sp, #-4]!)
   115b4:	push	{r0}		; (str r0, [sp, #-4]!)
   115b8:	ldr	ip, [pc, #16]	; 115d0 <putc_unlocked@plt+0x3c>
   115bc:	push	{ip}		; (str ip, [sp, #-4]!)
   115c0:	ldr	r0, [pc, #12]	; 115d4 <putc_unlocked@plt+0x40>
   115c4:	ldr	r3, [pc, #12]	; 115d8 <putc_unlocked@plt+0x44>
   115c8:	bl	113f0 <__libc_start_main@plt>
   115cc:	bl	11564 <abort@plt>
   115d0:	andeq	r8, r1, r8, ror #31
   115d4:	muleq	r1, r0, r6
   115d8:	andeq	r8, r1, r8, lsl #31
   115dc:	ldr	r3, [pc, #20]	; 115f8 <putc_unlocked@plt+0x64>
   115e0:	ldr	r2, [pc, #20]	; 115fc <putc_unlocked@plt+0x68>
   115e4:	add	r3, pc, r3
   115e8:	ldr	r2, [r3, r2]
   115ec:	cmp	r2, #0
   115f0:	bxeq	lr
   115f4:	b	11414 <__gmon_start__@plt>
   115f8:	andeq	sl, r1, r4, lsl sl
   115fc:	andeq	r0, r0, r4, lsl #2
   11600:	ldr	r0, [pc, #24]	; 11620 <putc_unlocked@plt+0x8c>
   11604:	ldr	r3, [pc, #24]	; 11624 <putc_unlocked@plt+0x90>
   11608:	cmp	r3, r0
   1160c:	bxeq	lr
   11610:	ldr	r3, [pc, #16]	; 11628 <putc_unlocked@plt+0x94>
   11614:	cmp	r3, #0
   11618:	bxeq	lr
   1161c:	bx	r3
   11620:	andeq	pc, r2, r4, lsr #17
   11624:	andeq	pc, r2, r4, lsr #17
   11628:	andeq	r0, r0, r0
   1162c:	ldr	r0, [pc, #36]	; 11658 <putc_unlocked@plt+0xc4>
   11630:	ldr	r1, [pc, #36]	; 1165c <putc_unlocked@plt+0xc8>
   11634:	sub	r1, r1, r0
   11638:	asr	r1, r1, #2
   1163c:	add	r1, r1, r1, lsr #31
   11640:	asrs	r1, r1, #1
   11644:	bxeq	lr
   11648:	ldr	r3, [pc, #16]	; 11660 <putc_unlocked@plt+0xcc>
   1164c:	cmp	r3, #0
   11650:	bxeq	lr
   11654:	bx	r3
   11658:	andeq	pc, r2, r4, lsr #17
   1165c:	andeq	pc, r2, r4, lsr #17
   11660:	andeq	r0, r0, r0
   11664:	push	{r4, lr}
   11668:	ldr	r4, [pc, #24]	; 11688 <putc_unlocked@plt+0xf4>
   1166c:	ldrb	r3, [r4]
   11670:	cmp	r3, #0
   11674:	popne	{r4, pc}
   11678:	bl	11600 <putc_unlocked@plt+0x6c>
   1167c:	mov	r3, #1
   11680:	strb	r3, [r4]
   11684:	pop	{r4, pc}
   11688:			; <UNDEFINED> instruction: 0x0002f8b8
   1168c:	b	1162c <putc_unlocked@plt+0x98>
   11690:	push	{fp, lr}
   11694:	mov	fp, sp
   11698:	sub	sp, sp, #16
   1169c:	mov	sl, r0
   116a0:	ldr	r0, [r1]
   116a4:	mov	r7, r1
   116a8:	bl	142a8 <_obstack_memory_used@@Base+0x5c>
   116ac:	movw	r0, #15916	; 0x3e2c
   116b0:	movw	r9, #63748	; 0xf904
   116b4:	movw	r3, #19436	; 0x4bec
   116b8:	mov	r1, #0
   116bc:	mov	r2, #0
   116c0:	mov	r4, #0
   116c4:	movt	r0, #1
   116c8:	movt	r9, #2
   116cc:	movt	r3, #1
   116d0:	str	r0, [sp]
   116d4:	mov	r0, r9
   116d8:	bl	13f1c <_obstack_begin@@Base>
   116dc:	movw	r0, #63796	; 0xf934
   116e0:	movw	r1, #41427	; 0xa1d3
   116e4:	movt	r0, #2
   116e8:	movt	r1, #1
   116ec:	str	r1, [r0]
   116f0:	movw	r0, #41150	; 0xa0be
   116f4:	movw	r1, #63000	; 0xf618
   116f8:	movt	r0, #1
   116fc:	movt	r1, #2
   11700:	bl	13d38 <argp_parse@@Base+0x1178>
   11704:	sub	r0, fp, #4
   11708:	mov	r1, sl
   1170c:	mov	r2, r7
   11710:	mov	r3, #8
   11714:	stm	sp, {r0, r4}
   11718:	movw	r0, #63008	; 0xf620
   1171c:	movt	r0, #2
   11720:	bl	12bc0 <argp_parse@@Base>
   11724:	ldr	r0, [r9, #12]
   11728:	ldr	r1, [r9, #16]
   1172c:	cmp	r1, r0
   11730:	bne	11744 <putc_unlocked@plt+0x1b0>
   11734:	mov	r0, r9
   11738:	mov	r1, #1
   1173c:	bl	14028 <_obstack_newchunk@@Base>
   11740:	ldr	r0, [r9, #12]
   11744:	add	r1, r0, #1
   11748:	movw	r6, #63688	; 0xf8c8
   1174c:	str	r1, [r9, #12]
   11750:	strb	r4, [r0]
   11754:	movt	r6, #2
   11758:	ldr	r8, [r9, #8]
   1175c:	ldr	r0, [r9, #12]
   11760:	ldr	r5, [fp, #-4]
   11764:	cmp	r0, r8
   11768:	sub	r4, sl, r5
   1176c:	ldrbeq	r1, [r9, #40]	; 0x28
   11770:	orreq	r1, r1, #2
   11774:	strbeq	r1, [r9, #40]	; 0x28
   11778:	ldr	r3, [r9, #24]
   1177c:	ldr	r1, [r9, #4]
   11780:	ldr	r2, [r9, #16]
   11784:	add	r0, r3, r0
   11788:	bic	r0, r0, r3
   1178c:	sub	r3, r0, r1
   11790:	sub	r1, r2, r1
   11794:	cmp	r3, r1
   11798:	movhi	r0, r2
   1179c:	str	r0, [r9, #8]
   117a0:	str	r0, [r9, #12]
   117a4:	ldr	r0, [r6]
   117a8:	orrs	r1, r4, r0
   117ac:	bne	117c8 <putc_unlocked@plt+0x234>
   117b0:	movw	r2, #41451	; 0xa1eb
   117b4:	mov	r0, #1
   117b8:	mov	r1, #0
   117bc:	movt	r2, #1
   117c0:	bl	113c0 <error@plt>
   117c4:	ldr	r0, [r6]
   117c8:	cmp	r0, #0
   117cc:	bne	1186c <putc_unlocked@plt+0x2d8>
   117d0:	cmp	r4, #0
   117d4:	beq	1186c <putc_unlocked@plt+0x2d8>
   117d8:	add	r0, r5, #1
   117dc:	add	r4, r7, r5, lsl #2
   117e0:	sub	r5, r0, sl
   117e4:	mov	sl, #32
   117e8:	b	11818 <putc_unlocked@plt+0x284>
   117ec:	ldr	r1, [r9, #16]
   117f0:	cmp	r1, r0
   117f4:	bne	11808 <putc_unlocked@plt+0x274>
   117f8:	mov	r0, r9
   117fc:	mov	r1, #1
   11800:	bl	14028 <_obstack_newchunk@@Base>
   11804:	ldr	r0, [r9, #12]
   11808:	add	r1, r0, #1
   1180c:	add	r5, r5, #1
   11810:	str	r1, [r9, #12]
   11814:	strb	sl, [r0]
   11818:	ldr	r6, [r4], #4
   1181c:	mov	r0, r6
   11820:	bl	11438 <strlen@plt>
   11824:	mov	r7, r0
   11828:	ldr	r0, [r9, #12]
   1182c:	ldr	r1, [r9, #16]
   11830:	sub	r1, r1, r0
   11834:	cmp	r1, r7
   11838:	bcs	1184c <putc_unlocked@plt+0x2b8>
   1183c:	mov	r0, r9
   11840:	mov	r1, r7
   11844:	bl	14028 <_obstack_newchunk@@Base>
   11848:	ldr	r0, [r9, #12]
   1184c:	mov	r1, r6
   11850:	mov	r2, r7
   11854:	bl	11354 <memcpy@plt>
   11858:	ldr	r0, [r9, #12]
   1185c:	cmp	r5, #0
   11860:	add	r0, r0, r7
   11864:	str	r0, [r9, #12]
   11868:	bne	117ec <putc_unlocked@plt+0x258>
   1186c:	ldr	r0, [r9, #12]
   11870:	ldr	r1, [r9, #16]
   11874:	cmp	r1, r0
   11878:	bne	1188c <putc_unlocked@plt+0x2f8>
   1187c:	mov	r0, r9
   11880:	mov	r1, #1
   11884:	bl	14028 <_obstack_newchunk@@Base>
   11888:	ldr	r0, [r9, #12]
   1188c:	add	r1, r0, #1
   11890:	movw	r7, #63680	; 0xf8c0
   11894:	str	r1, [r9, #12]
   11898:	mov	r1, #0
   1189c:	movt	r7, #2
   118a0:	strb	r1, [r0]
   118a4:	ldr	r6, [r9, #8]
   118a8:	ldr	r0, [r9, #12]
   118ac:	cmp	r0, r6
   118b0:	ldrbeq	r1, [r9, #40]	; 0x28
   118b4:	orreq	r1, r1, #2
   118b8:	strbeq	r1, [r9, #40]	; 0x28
   118bc:	ldr	r3, [r9, #24]
   118c0:	ldr	r1, [r9, #4]
   118c4:	ldr	r2, [r9, #16]
   118c8:	add	r0, r3, r0
   118cc:	bic	r0, r0, r3
   118d0:	sub	r3, r0, r1
   118d4:	sub	r1, r2, r1
   118d8:	cmp	r3, r1
   118dc:	movhi	r0, r2
   118e0:	str	r0, [r9, #8]
   118e4:	str	r0, [r9, #12]
   118e8:	ldr	r0, [r7]
   118ec:	cmp	r0, #0
   118f0:	bne	11a5c <putc_unlocked@plt+0x4c8>
   118f4:	movw	r0, #49516	; 0xc16c
   118f8:	movt	r0, #2
   118fc:	ldr	r1, [r0]
   11900:	cmp	r1, #0
   11904:	beq	119a0 <putc_unlocked@plt+0x40c>
   11908:	add	r4, r0, #4
   1190c:	mov	r0, r6
   11910:	bl	127b0 <putc_unlocked@plt+0x121c>
   11914:	cmp	r0, #0
   11918:	bne	1192c <putc_unlocked@plt+0x398>
   1191c:	ldr	r1, [r4], #4
   11920:	cmp	r1, #0
   11924:	bne	1190c <putc_unlocked@plt+0x378>
   11928:	b	119a0 <putc_unlocked@plt+0x40c>
   1192c:	movw	r0, #63676	; 0xf8bc
   11930:	movt	r0, #2
   11934:	ldr	r0, [r0]
   11938:	cmp	r0, #0
   1193c:	beq	1194c <putc_unlocked@plt+0x3b8>
   11940:	movw	r0, #41472	; 0xa200
   11944:	movt	r0, #1
   11948:	bl	113d8 <puts@plt>
   1194c:	movw	r0, #41506	; 0xa222
   11950:	mov	r1, #0
   11954:	movt	r0, #1
   11958:	bl	11b78 <putc_unlocked@plt+0x5e4>
   1195c:	movw	r4, #63792	; 0xf930
   11960:	mov	r1, r6
   11964:	movt	r4, #2
   11968:	str	r0, [r4]
   1196c:	bl	11c94 <putc_unlocked@plt+0x700>
   11970:	str	r0, [r7]
   11974:	ldr	r0, [r4]
   11978:	bl	11570 <close@plt>
   1197c:	ldr	r1, [r7]
   11980:	cmp	r1, #0
   11984:	beq	11b20 <putc_unlocked@plt+0x58c>
   11988:	movw	r0, #41525	; 0xa235
   1198c:	movt	r0, #1
   11990:	bl	112f4 <printf@plt>
   11994:	ldr	r0, [r7]
   11998:	cmp	r0, #0
   1199c:	bne	11a5c <putc_unlocked@plt+0x4c8>
   119a0:	mov	r0, r6
   119a4:	bl	11e40 <putc_unlocked@plt+0x8ac>
   119a8:	str	r0, [r7]
   119ac:	mov	r1, r0
   119b0:	ldrb	r0, [r0]
   119b4:	cmp	r0, #3
   119b8:	bhi	11a3c <putc_unlocked@plt+0x4a8>
   119bc:	add	r2, pc, #0
   119c0:	ldr	pc, [r2, r0, lsl #2]
   119c4:	ldrdeq	r1, [r1], -r4
   119c8:	andeq	r1, r1, r4, lsl sl
   119cc:	andeq	r1, r1, r4, lsr #20
   119d0:	andeq	r1, r1, ip, lsr #20
   119d4:	movw	r0, #41559	; 0xa257
   119d8:	movt	r0, #1
   119dc:	bl	113cc <getenv@plt>
   119e0:	movw	r1, #41506	; 0xa222
   119e4:	cmp	r0, #0
   119e8:	movt	r1, #1
   119ec:	movne	r1, r0
   119f0:	movw	r0, #63676	; 0xf8bc
   119f4:	movt	r0, #2
   119f8:	str	r1, [r7]
   119fc:	ldr	r0, [r0]
   11a00:	cmp	r0, #0
   11a04:	beq	11a5c <putc_unlocked@plt+0x4c8>
   11a08:	movw	r0, #41572	; 0xa264
   11a0c:	movt	r0, #1
   11a10:	b	11a58 <putc_unlocked@plt+0x4c4>
   11a14:	movw	r0, #41598	; 0xa27e
   11a18:	movt	r0, #1
   11a1c:	bl	113d8 <puts@plt>
   11a20:	ldr	r1, [r7]
   11a24:	add	r0, r1, #1
   11a28:	b	11a34 <putc_unlocked@plt+0x4a0>
   11a2c:	movw	r0, #41669	; 0xa2c5
   11a30:	movt	r0, #1
   11a34:	bl	113d8 <puts@plt>
   11a38:	b	11b20 <putc_unlocked@plt+0x58c>
   11a3c:	movw	r0, #63676	; 0xf8bc
   11a40:	movt	r0, #2
   11a44:	ldr	r0, [r0]
   11a48:	cmp	r0, #0
   11a4c:	beq	11a5c <putc_unlocked@plt+0x4c8>
   11a50:	movw	r0, #41699	; 0xa2e3
   11a54:	movt	r0, #1
   11a58:	bl	112f4 <printf@plt>
   11a5c:	movw	r0, #41717	; 0xa2f5
   11a60:	movt	r0, #1
   11a64:	bl	113cc <getenv@plt>
   11a68:	cmp	r0, #0
   11a6c:	mov	r2, r6
   11a70:	movwne	r0, #62936	; 0xf5d8
   11a74:	movne	r1, #0
   11a78:	movtne	r0, #2
   11a7c:	strne	r1, [r0]
   11a80:	ldr	r0, [r7]
   11a84:	mov	r1, r8
   11a88:	bl	121b8 <putc_unlocked@plt+0xc24>
   11a8c:	mov	r4, r0
   11a90:	movw	r0, #63676	; 0xf8bc
   11a94:	movt	r0, #2
   11a98:	ldr	r0, [r0]
   11a9c:	cmp	r0, #0
   11aa0:	beq	11ab4 <putc_unlocked@plt+0x520>
   11aa4:	movw	r0, #41728	; 0xa300
   11aa8:	mov	r1, r4
   11aac:	movt	r0, #1
   11ab0:	bl	112f4 <printf@plt>
   11ab4:	mov	r0, r4
   11ab8:	bl	11438 <strlen@plt>
   11abc:	movw	r5, #9200	; 0x23f0
   11ac0:	movw	r1, #2573	; 0xa0d
   11ac4:	mov	r2, r4
   11ac8:	strh	r1, [r2, r0]!
   11acc:	mov	r0, #0
   11ad0:	movt	r5, #1
   11ad4:	strb	r0, [r2, #2]
   11ad8:	mov	r0, #15
   11adc:	mov	r1, r5
   11ae0:	bl	11360 <signal@plt>
   11ae4:	mov	r0, #2
   11ae8:	mov	r1, r5
   11aec:	bl	11360 <signal@plt>
   11af0:	movw	r1, #63684	; 0xf8c4
   11af4:	ldr	r0, [r7]
   11af8:	movt	r1, #2
   11afc:	ldr	r1, [r1]
   11b00:	bl	11b78 <putc_unlocked@plt+0x5e4>
   11b04:	movw	r5, #63792	; 0xf930
   11b08:	mov	r1, r4
   11b0c:	movt	r5, #2
   11b10:	str	r0, [r5]
   11b14:	bl	1241c <putc_unlocked@plt+0xe88>
   11b18:	ldr	r0, [r5]
   11b1c:	bl	11e3c <putc_unlocked@plt+0x8a8>
   11b20:	mov	r0, #0
   11b24:	bl	1142c <exit@plt>
   11b28:	push	{r4, r5, r6, sl, fp, lr}
   11b2c:	add	fp, sp, #16
   11b30:	mov	r2, r1
   11b34:	ldr	r1, [r1]
   11b38:	mov	r4, #0
   11b3c:	cmp	r1, #0
   11b40:	beq	11b70 <putc_unlocked@plt+0x5dc>
   11b44:	mov	r5, r0
   11b48:	add	r6, r2, #4
   11b4c:	mov	r0, r5
   11b50:	bl	127b0 <putc_unlocked@plt+0x121c>
   11b54:	cmp	r0, #0
   11b58:	bne	11b6c <putc_unlocked@plt+0x5d8>
   11b5c:	ldr	r1, [r6], #4
   11b60:	cmp	r1, #0
   11b64:	bne	11b4c <putc_unlocked@plt+0x5b8>
   11b68:	b	11b70 <putc_unlocked@plt+0x5dc>
   11b6c:	mov	r4, #1
   11b70:	mov	r0, r4
   11b74:	pop	{r4, r5, r6, sl, fp, pc}
   11b78:	push	{r4, r5, fp, lr}
   11b7c:	add	fp, sp, #8
   11b80:	sub	sp, sp, #40	; 0x28
   11b84:	add	r2, sp, #8
   11b88:	mov	r4, r0
   11b8c:	vmov.i32	q8, #0	; 0x00000000
   11b90:	mov	r5, r1
   11b94:	movw	r1, #41150	; 0xa0be
   11b98:	add	r3, sp, #4
   11b9c:	mov	r0, r2
   11ba0:	movt	r1, #1
   11ba4:	cmp	r5, #0
   11ba8:	vst1.64	{d16-d17}, [r0]!
   11bac:	movne	r1, r5
   11bb0:	vst1.64	{d16-d17}, [r0]
   11bb4:	mov	r0, #1
   11bb8:	str	r0, [sp, #16]
   11bbc:	mov	r0, r4
   11bc0:	bl	11528 <getaddrinfo@plt>
   11bc4:	cmp	r0, #0
   11bc8:	beq	11bf4 <putc_unlocked@plt+0x660>
   11bcc:	movw	r1, #42450	; 0xa5d2
   11bd0:	cmp	r5, #0
   11bd4:	add	r2, sp, #8
   11bd8:	add	r3, sp, #4
   11bdc:	mov	r0, r4
   11be0:	movt	r1, #1
   11be4:	movne	r1, r5
   11be8:	bl	11528 <getaddrinfo@plt>
   11bec:	cmp	r0, #0
   11bf0:	bne	11c80 <putc_unlocked@plt+0x6ec>
   11bf4:	ldr	r4, [sp, #4]
   11bf8:	cmp	r4, #0
   11bfc:	beq	11c74 <putc_unlocked@plt+0x6e0>
   11c00:	mov	r2, r4
   11c04:	ldmib	r2, {r0, r1, r2}
   11c08:	bl	11534 <socket@plt>
   11c0c:	mov	r5, r0
   11c10:	cmp	r0, #0
   11c14:	blt	11c3c <putc_unlocked@plt+0x6a8>
   11c18:	ldr	r0, [sp, #4]
   11c1c:	ldr	r2, [r0, #16]
   11c20:	ldr	r1, [r0, #20]
   11c24:	mov	r0, r5
   11c28:	bl	1157c <connect@plt>
   11c2c:	cmp	r0, #0
   11c30:	beq	11c54 <putc_unlocked@plt+0x6c0>
   11c34:	mov	r0, r5
   11c38:	bl	11570 <close@plt>
   11c3c:	ldr	r0, [sp, #4]
   11c40:	ldr	r2, [r0, #28]
   11c44:	cmp	r2, #0
   11c48:	str	r2, [sp, #4]
   11c4c:	bne	11c04 <putc_unlocked@plt+0x670>
   11c50:	b	11c58 <putc_unlocked@plt+0x6c4>
   11c54:	ldr	r2, [sp, #4]
   11c58:	cmp	r2, #0
   11c5c:	beq	11c74 <putc_unlocked@plt+0x6e0>
   11c60:	mov	r0, r4
   11c64:	bl	1151c <freeaddrinfo@plt>
   11c68:	mov	r0, r5
   11c6c:	sub	sp, fp, #8
   11c70:	pop	{r4, r5, fp, pc}
   11c74:	movw	r0, #42474	; 0xa5ea
   11c78:	movt	r0, #1
   11c7c:	bl	128f4 <putc_unlocked@plt+0x1360>
   11c80:	bl	11324 <gai_strerror@plt>
   11c84:	mov	r1, r0
   11c88:	movw	r0, #42458	; 0xa5da
   11c8c:	movt	r0, #1
   11c90:	bl	12958 <putc_unlocked@plt+0x13c4>
   11c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c98:	add	fp, sp, #28
   11c9c:	sub	sp, sp, #108	; 0x6c
   11ca0:	mov	r4, r0
   11ca4:	mov	r0, r1
   11ca8:	mov	r5, r1
   11cac:	bl	11438 <strlen@plt>
   11cb0:	add	r0, r0, #4
   11cb4:	bl	14718 <_obstack_memory_used@@Base+0x4cc>
   11cb8:	mov	r1, #61	; 0x3d
   11cbc:	mov	r6, r0
   11cc0:	strb	r1, [r0], #1
   11cc4:	mov	r1, r5
   11cc8:	bl	113b4 <strcpy@plt>
   11ccc:	mov	r0, r6
   11cd0:	bl	11438 <strlen@plt>
   11cd4:	movw	r1, #2573	; 0xa0d
   11cd8:	mov	r2, r6
   11cdc:	mov	r7, #0
   11ce0:	strh	r1, [r2, r0]!
   11ce4:	movw	r1, #38247	; 0x9567
   11ce8:	mov	r0, r4
   11cec:	movt	r1, #1
   11cf0:	strb	r7, [r2, #2]
   11cf4:	bl	112b8 <fdopen@plt>
   11cf8:	mov	r5, r0
   11cfc:	mov	r0, r6
   11d00:	bl	11438 <strlen@plt>
   11d04:	mov	r2, r0
   11d08:	mov	r0, r4
   11d0c:	mov	r1, r6
   11d10:	str	r6, [sp, #4]
   11d14:	bl	1148c <write@plt>
   11d18:	cmp	r0, #0
   11d1c:	blt	11e24 <putc_unlocked@plt+0x890>
   11d20:	add	r6, sp, #8
   11d24:	mov	r1, #100	; 0x64
   11d28:	mov	r2, r5
   11d2c:	mov	r0, r6
   11d30:	bl	11330 <fgets@plt>
   11d34:	cmp	r0, #0
   11d38:	beq	11e00 <putc_unlocked@plt+0x86c>
   11d3c:	movw	r9, #42433	; 0xa5c1
   11d40:	movw	r8, #63668	; 0xf8b4
   11d44:	add	r4, r6, #1
   11d48:	mov	r7, #0
   11d4c:	movt	r9, #1
   11d50:	movt	r8, #2
   11d54:	mov	r0, r6
   11d58:	mov	r1, r9
   11d5c:	mov	r2, #16
   11d60:	bl	11558 <strncmp@plt>
   11d64:	cmp	r7, #0
   11d68:	cmpeq	r0, #0
   11d6c:	bne	11ddc <putc_unlocked@plt+0x848>
   11d70:	mov	r1, r4
   11d74:	mov	r2, r6
   11d78:	mov	r0, r2
   11d7c:	ldrb	r3, [r2], #1
   11d80:	mov	sl, r1
   11d84:	add	r1, r1, #1
   11d88:	cmp	r3, #58	; 0x3a
   11d8c:	bne	11d78 <putc_unlocked@plt+0x7e4>
   11d90:	ldrb	r1, [r0, #1]!
   11d94:	add	sl, sl, #1
   11d98:	cmp	r1, #32
   11d9c:	beq	11d90 <putc_unlocked@plt+0x7fc>
   11da0:	bl	11438 <strlen@plt>
   11da4:	add	r0, r0, #1
   11da8:	bl	14718 <_obstack_memory_used@@Base+0x4cc>
   11dac:	mov	r7, r0
   11db0:	mov	r0, #0
   11db4:	b	11dc0 <putc_unlocked@plt+0x82c>
   11db8:	strb	r1, [r7, r0]
   11dbc:	add	r0, r0, #1
   11dc0:	add	r1, sl, r0
   11dc4:	ldrb	r1, [r1, #-1]
   11dc8:	cmp	r1, #10
   11dcc:	cmpne	r1, #13
   11dd0:	bne	11db8 <putc_unlocked@plt+0x824>
   11dd4:	mov	r1, #0
   11dd8:	strb	r1, [r7, r0]
   11ddc:	ldr	r1, [r8]
   11de0:	mov	r0, r6
   11de4:	bl	1154c <fputs@plt>
   11de8:	mov	r0, r6
   11dec:	mov	r1, #100	; 0x64
   11df0:	mov	r2, r5
   11df4:	bl	11330 <fgets@plt>
   11df8:	cmp	r0, #0
   11dfc:	bne	11d54 <putc_unlocked@plt+0x7c0>
   11e00:	mov	r0, r5
   11e04:	bl	1133c <ferror@plt>
   11e08:	cmp	r0, #0
   11e0c:	bne	11e30 <putc_unlocked@plt+0x89c>
   11e10:	ldr	r0, [sp, #4]
   11e14:	bl	13e2c <argp_parse@@Base+0x126c>
   11e18:	mov	r0, r7
   11e1c:	sub	sp, fp, #28
   11e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e24:	movw	r0, #42248	; 0xa508
   11e28:	movt	r0, #1
   11e2c:	bl	128f4 <putc_unlocked@plt+0x1360>
   11e30:	movw	r0, #42343	; 0xa567
   11e34:	movt	r0, #1
   11e38:	bl	128f4 <putc_unlocked@plt+0x1360>
   11e3c:	b	11570 <close@plt>
   11e40:	push	{r4, r5, r6, sl, fp, lr}
   11e44:	add	fp, sp, #16
   11e48:	sub	sp, sp, #8
   11e4c:	ldrb	r6, [r0]
   11e50:	movw	r4, #36860	; 0x8ffc
   11e54:	movt	r4, #1
   11e58:	cmp	r6, #0
   11e5c:	beq	11eb0 <putc_unlocked@plt+0x91c>
   11e60:	ldrb	r1, [r0, #1]
   11e64:	cmp	r1, #32
   11e68:	bne	11e90 <putc_unlocked@plt+0x8fc>
   11e6c:	mov	r5, r0
   11e70:	ldrb	r6, [r5, #2]!
   11e74:	cmp	r6, #0
   11e78:	beq	11eb0 <putc_unlocked@plt+0x91c>
   11e7c:	ldrb	r0, [r0, #3]
   11e80:	cmp	r0, #32
   11e84:	mov	r0, r5
   11e88:	beq	11e70 <putc_unlocked@plt+0x8dc>
   11e8c:	b	11e94 <putc_unlocked@plt+0x900>
   11e90:	mov	r5, r0
   11e94:	mov	r0, r5
   11e98:	mov	r1, #64	; 0x40
   11e9c:	bl	11444 <strchr@plt>
   11ea0:	movw	r4, #38028	; 0x948c
   11ea4:	cmp	r0, #0
   11ea8:	movt	r4, #1
   11eac:	beq	11ebc <putc_unlocked@plt+0x928>
   11eb0:	mov	r0, r4
   11eb4:	sub	sp, fp, #16
   11eb8:	pop	{r4, r5, r6, sl, fp, pc}
   11ebc:	movw	r1, #41752	; 0xa318
   11ec0:	mov	r0, r5
   11ec4:	movt	r1, #1
   11ec8:	bl	11510 <strpbrk@plt>
   11ecc:	cmp	r0, #0
   11ed0:	beq	11f6c <putc_unlocked@plt+0x9d8>
   11ed4:	mov	r0, r5
   11ed8:	mov	r1, #58	; 0x3a
   11edc:	bl	11444 <strchr@plt>
   11ee0:	cmp	r0, #0
   11ee4:	beq	12010 <putc_unlocked@plt+0xa7c>
   11ee8:	mov	r0, #0
   11eec:	movw	r1, #41772	; 0xa32c
   11ef0:	add	r2, sp, #4
   11ef4:	mov	r3, sp
   11ef8:	str	r0, [sp, #4]
   11efc:	str	r0, [sp]
   11f00:	movt	r1, #1
   11f04:	mov	r0, r5
   11f08:	bl	114c8 <sscanf@plt>
   11f0c:	cmp	r0, #0
   11f10:	beq	1206c <putc_unlocked@plt+0xad8>
   11f14:	movw	r1, #60424	; 0xec08
   11f18:	movt	r1, #2
   11f1c:	ldr	r4, [r1, #8]
   11f20:	cmp	r4, #0
   11f24:	beq	12078 <putc_unlocked@plt+0xae4>
   11f28:	ldr	r0, [sp, #4]
   11f2c:	ldrh	r2, [sp]
   11f30:	orr	r0, r2, r0, lsl #16
   11f34:	ldm	r1, {r2, r3}
   11f38:	and	r3, r3, r0
   11f3c:	cmp	r3, r2
   11f40:	beq	11eb0 <putc_unlocked@plt+0x91c>
   11f44:	add	r1, r1, #12
   11f48:	ldr	r4, [r1, #8]
   11f4c:	cmp	r4, #0
   11f50:	beq	12078 <putc_unlocked@plt+0xae4>
   11f54:	ldm	r1, {r2, r3}
   11f58:	add	r1, r1, #12
   11f5c:	and	r3, r3, r0
   11f60:	cmp	r3, r2
   11f64:	bne	11f48 <putc_unlocked@plt+0x9b4>
   11f68:	b	11eb0 <putc_unlocked@plt+0x91c>
   11f6c:	cmp	r6, #0
   11f70:	mov	r4, r5
   11f74:	beq	11f88 <putc_unlocked@plt+0x9f4>
   11f78:	mov	r4, r5
   11f7c:	ldrb	r0, [r4, #1]!
   11f80:	cmp	r0, #0
   11f84:	bne	11f7c <putc_unlocked@plt+0x9e8>
   11f88:	movw	r1, #38300	; 0x959c
   11f8c:	mov	r0, r5
   11f90:	mov	r2, #2
   11f94:	movt	r1, #1
   11f98:	bl	11468 <strncasecmp@plt>
   11f9c:	cmp	r0, #0
   11fa0:	bne	11fd8 <putc_unlocked@plt+0xa44>
   11fa4:	ldrb	r0, [r5, #2]!
   11fa8:	cmp	r0, #32
   11fac:	subne	r0, r0, #48	; 0x30
   11fb0:	uxtbne	r0, r0
   11fb4:	cmpne	r0, #9
   11fb8:	bhi	11fd8 <putc_unlocked@plt+0xa44>
   11fbc:	mov	r0, r5
   11fc0:	bl	114f8 <atoi@plt>
   11fc4:	movw	r1, #60712	; 0xed28
   11fc8:	movt	r1, #2
   11fcc:	sub	sp, fp, #16
   11fd0:	pop	{r4, r5, r6, sl, fp, lr}
   11fd4:	b	126d0 <putc_unlocked@plt+0x113c>
   11fd8:	movw	r1, #41769	; 0xa329
   11fdc:	sub	r0, r4, #2
   11fe0:	mov	r2, #2
   11fe4:	movt	r1, #1
   11fe8:	bl	11468 <strncasecmp@plt>
   11fec:	movw	r2, #41756	; 0xa31c
   11ff0:	movw	r1, #38028	; 0x948c
   11ff4:	cmp	r0, #0
   11ff8:	movt	r2, #1
   11ffc:	movt	r1, #1
   12000:	moveq	r1, r2
   12004:	mov	r0, r1
   12008:	sub	sp, fp, #16
   1200c:	pop	{r4, r5, r6, sl, fp, pc}
   12010:	mov	r0, r5
   12014:	bl	12740 <putc_unlocked@plt+0x11ac>
   12018:	cmp	r0, #0
   1201c:	beq	120a0 <putc_unlocked@plt+0xb0c>
   12020:	movw	r1, #49708	; 0xc22c
   12024:	movt	r1, #2
   12028:	ldr	r4, [r1, #8]
   1202c:	cmp	r4, #0
   12030:	beq	12110 <putc_unlocked@plt+0xb7c>
   12034:	ldm	r1, {r2, r3}
   12038:	and	r3, r3, r0
   1203c:	cmp	r3, r2
   12040:	beq	11eb0 <putc_unlocked@plt+0x91c>
   12044:	add	r1, r1, #12
   12048:	ldr	r4, [r1, #8]
   1204c:	cmp	r4, #0
   12050:	beq	12110 <putc_unlocked@plt+0xb7c>
   12054:	ldm	r1, {r2, r3}
   12058:	add	r1, r1, #12
   1205c:	and	r3, r3, r0
   12060:	cmp	r3, r2
   12064:	bne	12048 <putc_unlocked@plt+0xab4>
   12068:	b	11eb0 <putc_unlocked@plt+0x91c>
   1206c:	movw	r4, #38028	; 0x948c
   12070:	movt	r4, #1
   12074:	b	11eb0 <putc_unlocked@plt+0x91c>
   12078:	movw	r0, #63676	; 0xf8bc
   1207c:	movw	r4, #37688	; 0x9338
   12080:	movt	r0, #2
   12084:	movt	r4, #1
   12088:	ldr	r0, [r0]
   1208c:	cmp	r0, #0
   12090:	beq	11eb0 <putc_unlocked@plt+0x91c>
   12094:	movw	r0, #41779	; 0xa333
   12098:	movt	r0, #1
   1209c:	b	12134 <putc_unlocked@plt+0xba0>
   120a0:	movw	r0, #60936	; 0xee08
   120a4:	movt	r0, #2
   120a8:	ldr	r1, [r0]
   120ac:	cmp	r1, #0
   120b0:	beq	120dc <putc_unlocked@plt+0xb48>
   120b4:	add	r6, r0, #4
   120b8:	mov	r0, r5
   120bc:	bl	127b0 <putc_unlocked@plt+0x121c>
   120c0:	cmp	r0, #0
   120c4:	bne	121b0 <putc_unlocked@plt+0xc1c>
   120c8:	ldr	r1, [r6, #4]
   120cc:	add	r0, r6, #8
   120d0:	mov	r6, r0
   120d4:	cmp	r1, #0
   120d8:	bne	120b8 <putc_unlocked@plt+0xb24>
   120dc:	mov	r0, r5
   120e0:	mov	r1, #46	; 0x2e
   120e4:	bl	11444 <strchr@plt>
   120e8:	cmp	r0, #0
   120ec:	beq	1213c <putc_unlocked@plt+0xba8>
   120f0:	movw	r0, #63676	; 0xf8bc
   120f4:	movt	r0, #2
   120f8:	ldr	r0, [r0]
   120fc:	cmp	r0, #0
   12100:	beq	11eb0 <putc_unlocked@plt+0x91c>
   12104:	movw	r0, #42022	; 0xa426
   12108:	movt	r0, #1
   1210c:	b	12134 <putc_unlocked@plt+0xba0>
   12110:	movw	r0, #63676	; 0xf8bc
   12114:	movw	r4, #37688	; 0x9338
   12118:	movt	r0, #2
   1211c:	movt	r4, #1
   12120:	ldr	r0, [r0]
   12124:	cmp	r0, #0
   12128:	beq	11eb0 <putc_unlocked@plt+0x91c>
   1212c:	movw	r0, #41869	; 0xa38d
   12130:	movt	r0, #1
   12134:	bl	113d8 <puts@plt>
   12138:	b	11eb0 <putc_unlocked@plt+0x91c>
   1213c:	movw	r0, #49636	; 0xc1e4
   12140:	movt	r0, #2
   12144:	ldr	r4, [r0]
   12148:	cmp	r4, #0
   1214c:	beq	12188 <putc_unlocked@plt+0xbf4>
   12150:	add	r6, r0, #4
   12154:	mov	r0, r4
   12158:	bl	11438 <strlen@plt>
   1215c:	mov	r2, r0
   12160:	mov	r0, r5
   12164:	mov	r1, r4
   12168:	bl	11468 <strncasecmp@plt>
   1216c:	cmp	r0, #0
   12170:	beq	121b0 <putc_unlocked@plt+0xc1c>
   12174:	ldr	r4, [r6, #4]
   12178:	add	r0, r6, #8
   1217c:	mov	r6, r0
   12180:	cmp	r4, #0
   12184:	bne	12154 <putc_unlocked@plt+0xbc0>
   12188:	movw	r0, #63676	; 0xf8bc
   1218c:	movw	r4, #37688	; 0x9338
   12190:	movt	r0, #2
   12194:	movt	r4, #1
   12198:	ldr	r0, [r0]
   1219c:	cmp	r0, #0
   121a0:	beq	11eb0 <putc_unlocked@plt+0x91c>
   121a4:	movw	r0, #41955	; 0xa3e3
   121a8:	movt	r0, #1
   121ac:	b	12134 <putc_unlocked@plt+0xba0>
   121b0:	ldr	r4, [r6]
   121b4:	b	11eb0 <putc_unlocked@plt+0x91c>
   121b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121bc:	add	fp, sp, #24
   121c0:	mov	r6, r0
   121c4:	mov	r0, r1
   121c8:	mov	r8, r2
   121cc:	mov	r7, r1
   121d0:	bl	11438 <strlen@plt>
   121d4:	mov	r4, r0
   121d8:	mov	r0, r8
   121dc:	bl	11438 <strlen@plt>
   121e0:	add	r0, r4, r0
   121e4:	add	r0, r0, #13
   121e8:	bl	14718 <_obstack_memory_used@@Base+0x4cc>
   121ec:	mov	r5, #0
   121f0:	mov	r4, r0
   121f4:	mov	r1, r6
   121f8:	strb	r5, [r0]
   121fc:	movw	r0, #49424	; 0xc110
   12200:	movt	r0, #2
   12204:	bl	12844 <putc_unlocked@plt+0x12b0>
   12208:	cmp	r0, #0
   1220c:	bne	12228 <putc_unlocked@plt+0xc94>
   12210:	movw	r0, #49484	; 0xc14c
   12214:	mov	r1, r6
   12218:	movt	r0, #2
   1221c:	bl	12844 <putc_unlocked@plt+0x12b0>
   12220:	cmp	r0, #0
   12224:	beq	1224c <putc_unlocked@plt+0xcb8>
   12228:	mov	r0, r4
   1222c:	bl	11438 <strlen@plt>
   12230:	movw	r1, #43400	; 0xa988
   12234:	add	r0, r4, r0
   12238:	movt	r1, #1
   1223c:	strb	r5, [r0, #8]
   12240:	mov	r5, #1
   12244:	vldr	d16, [r1]
   12248:	vst1.8	{d16}, [r0]
   1224c:	ldrb	r0, [r7]
   12250:	cmp	r0, #0
   12254:	beq	12270 <putc_unlocked@plt+0xcdc>
   12258:	cmp	r5, #0
   1225c:	beq	1227c <putc_unlocked@plt+0xce8>
   12260:	mov	r0, r4
   12264:	mov	r1, r7
   12268:	bl	113a8 <strcat@plt>
   1226c:	b	12380 <putc_unlocked@plt+0xdec>
   12270:	cmp	r5, #0
   12274:	beq	122b0 <putc_unlocked@plt+0xd1c>
   12278:	b	12380 <putc_unlocked@plt+0xdec>
   1227c:	movw	r1, #37731	; 0x9363
   12280:	mov	r0, r6
   12284:	movt	r1, #1
   12288:	bl	112e8 <strcmp@plt>
   1228c:	cmp	r0, #0
   12290:	beq	122a4 <putc_unlocked@plt+0xd10>
   12294:	movw	r0, #42130	; 0xa492
   12298:	movt	r0, #1
   1229c:	bl	113d8 <puts@plt>
   122a0:	b	122b0 <putc_unlocked@plt+0xd1c>
   122a4:	mov	r0, r4
   122a8:	mov	r1, r7
   122ac:	bl	113a8 <strcat@plt>
   122b0:	movw	r1, #37688	; 0x9338
   122b4:	mov	r0, r6
   122b8:	movt	r1, #1
   122bc:	bl	112e8 <strcmp@plt>
   122c0:	cmp	r0, #0
   122c4:	beq	122e0 <putc_unlocked@plt+0xd4c>
   122c8:	movw	r1, #37996	; 0x946c
   122cc:	mov	r0, r6
   122d0:	movt	r1, #1
   122d4:	bl	112e8 <strcmp@plt>
   122d8:	cmp	r0, #0
   122dc:	bne	12324 <putc_unlocked@plt+0xd90>
   122e0:	movw	r1, #42184	; 0xa4c8
   122e4:	mov	r0, r8
   122e8:	mov	r2, #2
   122ec:	movt	r1, #1
   122f0:	bl	11468 <strncasecmp@plt>
   122f4:	cmp	r0, #0
   122f8:	bne	12324 <putc_unlocked@plt+0xd90>
   122fc:	mov	r2, r8
   12300:	ldrb	r0, [r2, #2]!
   12304:	sub	r0, r0, #48	; 0x30
   12308:	uxtb	r0, r0
   1230c:	cmp	r0, #9
   12310:	bhi	12324 <putc_unlocked@plt+0xd90>
   12314:	movw	r1, #42187	; 0xa4cb
   12318:	mov	r0, r4
   1231c:	movt	r1, #1
   12320:	b	123e4 <putc_unlocked@plt+0xe50>
   12324:	movw	r1, #37731	; 0x9363
   12328:	mov	r0, r6
   1232c:	movt	r1, #1
   12330:	bl	112e8 <strcmp@plt>
   12334:	cmp	r0, #0
   12338:	beq	12390 <putc_unlocked@plt+0xdfc>
   1233c:	movw	r1, #42205	; 0xa4dd
   12340:	mov	r0, r6
   12344:	movt	r1, #1
   12348:	bl	112e8 <strcmp@plt>
   1234c:	cmp	r0, #0
   12350:	bne	12368 <putc_unlocked@plt+0xdd4>
   12354:	mov	r0, r8
   12358:	mov	r1, #32
   1235c:	bl	11444 <strchr@plt>
   12360:	cmp	r0, #0
   12364:	beq	123d4 <putc_unlocked@plt+0xe40>
   12368:	movw	r1, #41756	; 0xa31c
   1236c:	mov	r0, r6
   12370:	movt	r1, #1
   12374:	bl	112e8 <strcmp@plt>
   12378:	cmp	r0, #0
   1237c:	beq	1239c <putc_unlocked@plt+0xe08>
   12380:	mov	r0, r4
   12384:	mov	r1, r8
   12388:	bl	113a8 <strcat@plt>
   1238c:	b	123e8 <putc_unlocked@plt+0xe54>
   12390:	movw	r1, #42192	; 0xa4d0
   12394:	movt	r1, #1
   12398:	b	123dc <putc_unlocked@plt+0xe48>
   1239c:	movw	r0, #42235	; 0xa4fb
   123a0:	movt	r0, #1
   123a4:	bl	113cc <getenv@plt>
   123a8:	cmp	r0, #0
   123ac:	beq	123c8 <putc_unlocked@plt+0xe34>
   123b0:	movw	r1, #42240	; 0xa500
   123b4:	mov	r2, #2
   123b8:	movt	r1, #1
   123bc:	bl	11558 <strncmp@plt>
   123c0:	cmp	r0, #0
   123c4:	beq	12380 <putc_unlocked@plt+0xdec>
   123c8:	movw	r1, #42243	; 0xa503
   123cc:	movt	r1, #1
   123d0:	b	123dc <putc_unlocked@plt+0xe48>
   123d4:	movw	r1, #42225	; 0xa4f1
   123d8:	movt	r1, #1
   123dc:	mov	r0, r4
   123e0:	mov	r2, r8
   123e4:	bl	114d4 <sprintf@plt>
   123e8:	mov	r0, r4
   123ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   123f0:	push	{fp, lr}
   123f4:	mov	fp, sp
   123f8:	mov	r4, r0
   123fc:	movw	r0, #63792	; 0xf930
   12400:	movt	r0, #2
   12404:	ldr	r0, [r0]
   12408:	bl	11e3c <putc_unlocked@plt+0x8a8>
   1240c:	movw	r0, #42482	; 0xa5f2
   12410:	mov	r1, r4
   12414:	movt	r0, #1
   12418:	bl	12958 <putc_unlocked@plt+0x13c4>
   1241c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12420:	add	fp, sp, #28
   12424:	sub	sp, sp, #484	; 0x1e4
   12428:	sub	sp, sp, #1024	; 0x400
   1242c:	mov	r6, r0
   12430:	movw	r0, #62936	; 0xf5d8
   12434:	mov	r5, r1
   12438:	movw	r1, #38247	; 0x9567
   1243c:	movt	r0, #2
   12440:	movt	r1, #1
   12444:	ldr	r7, [r0]
   12448:	mov	r0, r6
   1244c:	bl	112b8 <fdopen@plt>
   12450:	mov	r8, r0
   12454:	mov	r0, r5
   12458:	bl	11438 <strlen@plt>
   1245c:	mov	r2, r0
   12460:	mov	r0, r6
   12464:	mov	r1, r5
   12468:	bl	1148c <write@plt>
   1246c:	cmp	r0, #0
   12470:	blt	126b8 <putc_unlocked@plt+0x1124>
   12474:	sub	r5, fp, #232	; 0xe8
   12478:	mov	r1, #200	; 0xc8
   1247c:	mov	r2, r8
   12480:	mov	r0, r5
   12484:	bl	11330 <fgets@plt>
   12488:	cmp	r0, #0
   1248c:	beq	12690 <putc_unlocked@plt+0x10fc>
   12490:	mov	sl, #0
   12494:	mov	r9, #0
   12498:	b	124a8 <putc_unlocked@plt+0xf14>
   1249c:	mov	r7, #1
   124a0:	mov	sl, #0
   124a4:	b	12668 <putc_unlocked@plt+0x10d4>
   124a8:	add	r4, r9, #1
   124ac:	cmp	r7, #1
   124b0:	bne	12504 <putc_unlocked@plt+0xf70>
   124b4:	movw	r0, #49532	; 0xc17c
   124b8:	movt	r0, #2
   124bc:	ldr	r6, [r0, r4, lsl #2]
   124c0:	mov	r0, r6
   124c4:	bl	11438 <strlen@plt>
   124c8:	mov	r2, r0
   124cc:	mov	r0, r5
   124d0:	mov	r1, r6
   124d4:	bl	11558 <strncmp@plt>
   124d8:	mov	r6, r0
   124dc:	cmp	r0, #0
   124e0:	mov	r7, r0
   124e4:	mov	r0, r5
   124e8:	mov	r1, #200	; 0xc8
   124ec:	mov	r2, r8
   124f0:	movwne	r7, #1
   124f4:	bl	11330 <fgets@plt>
   124f8:	cmp	r0, #0
   124fc:	bne	124ac <putc_unlocked@plt+0xf18>
   12500:	b	12684 <putc_unlocked@plt+0x10f0>
   12504:	cmp	r7, #0
   12508:	bne	12574 <putc_unlocked@plt+0xfe0>
   1250c:	movw	r0, #49532	; 0xc17c
   12510:	add	r4, sp, #8
   12514:	sub	r6, fp, #488	; 0x1e8
   12518:	mov	r9, #0
   1251c:	movt	r0, #2
   12520:	ldr	sl, [r0]
   12524:	cmp	sl, #0
   12528:	beq	12568 <putc_unlocked@plt+0xfd4>
   1252c:	mov	r0, sl
   12530:	bl	11438 <strlen@plt>
   12534:	mov	r2, r0
   12538:	mov	r0, r5
   1253c:	mov	r1, sl
   12540:	bl	11558 <strncmp@plt>
   12544:	cmp	r0, #0
   12548:	beq	1249c <putc_unlocked@plt+0xf08>
   1254c:	movw	r0, #49532	; 0xc17c
   12550:	movt	r0, #2
   12554:	add	r0, r0, r9, lsl #2
   12558:	add	r9, r9, #2
   1255c:	ldr	sl, [r0, #8]
   12560:	cmp	sl, #0
   12564:	bne	1252c <putc_unlocked@plt+0xf98>
   12568:	mov	r7, #0
   1256c:	mov	sl, #0
   12570:	b	1257c <putc_unlocked@plt+0xfe8>
   12574:	add	r4, sp, #8
   12578:	sub	r6, fp, #488	; 0x1e8
   1257c:	movw	r1, #42254	; 0xa50e
   12580:	mov	r0, r5
   12584:	mov	r2, #10
   12588:	movt	r1, #1
   1258c:	bl	11558 <strncmp@plt>
   12590:	cmp	r0, #0
   12594:	bne	12620 <putc_unlocked@plt+0x108c>
   12598:	movw	r1, #42265	; 0xa519
   1259c:	mov	r0, r5
   125a0:	mov	r2, r6
   125a4:	sub	r3, fp, #504	; 0x1f8
   125a8:	str	r4, [sp]
   125ac:	movt	r1, #1
   125b0:	bl	114c8 <sscanf@plt>
   125b4:	cmp	r0, #3
   125b8:	bne	12620 <putc_unlocked@plt+0x108c>
   125bc:	movw	r0, #63676	; 0xf8bc
   125c0:	movt	r0, #2
   125c4:	ldr	r0, [r0]
   125c8:	cmp	r0, #0
   125cc:	beq	125e4 <putc_unlocked@plt+0x1050>
   125d0:	movw	r0, #42311	; 0xa547
   125d4:	mov	r1, r4
   125d8:	mov	r2, r6
   125dc:	movt	r0, #1
   125e0:	bl	112f4 <printf@plt>
   125e4:	mov	r0, r4
   125e8:	bl	11438 <strlen@plt>
   125ec:	add	r0, r4, r0
   125f0:	movw	r1, #2573	; 0xa0d
   125f4:	strh	r1, [r0]
   125f8:	strb	sl, [r0, #2]
   125fc:	mov	r0, r6
   12600:	sub	r1, fp, #504	; 0x1f8
   12604:	bl	11b78 <putc_unlocked@plt+0x5e4>
   12608:	mov	r1, r4
   1260c:	mov	r6, r0
   12610:	bl	1241c <putc_unlocked@plt+0xe88>
   12614:	mov	r0, r6
   12618:	bl	11570 <close@plt>
   1261c:	b	12668 <putc_unlocked@plt+0x10d4>
   12620:	mov	r0, r5
   12624:	mov	r2, #1
   12628:	movw	r3, #9217	; 0x2401
   1262c:	b	12634 <putc_unlocked@plt+0x10a0>
   12630:	add	r0, r0, #1
   12634:	ldrb	r1, [r0]
   12638:	cmp	r1, #13
   1263c:	bhi	12630 <putc_unlocked@plt+0x109c>
   12640:	tst	r3, r2, lsl r1
   12644:	beq	12630 <putc_unlocked@plt+0x109c>
   12648:	strb	sl, [r0]
   1264c:	movw	r0, #63668	; 0xf8b4
   12650:	movw	r1, #44068	; 0xac24
   12654:	mov	r2, r5
   12658:	movt	r0, #2
   1265c:	movt	r1, #1
   12660:	ldr	r0, [r0]
   12664:	bl	11450 <fprintf@plt>
   12668:	mov	r0, r5
   1266c:	mov	r1, #200	; 0xc8
   12670:	mov	r2, r8
   12674:	bl	11330 <fgets@plt>
   12678:	cmp	r0, #0
   1267c:	bne	124a8 <putc_unlocked@plt+0xf14>
   12680:	b	12690 <putc_unlocked@plt+0x10fc>
   12684:	cmp	r6, #0
   12688:	movwne	r6, #1
   1268c:	mov	r7, r6
   12690:	mov	r0, r8
   12694:	bl	1133c <ferror@plt>
   12698:	cmp	r0, #0
   1269c:	bne	126c4 <putc_unlocked@plt+0x1130>
   126a0:	cmp	r7, #1
   126a4:	subne	sp, fp, #28
   126a8:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126ac:	movw	r0, #42349	; 0xa56d
   126b0:	movt	r0, #1
   126b4:	bl	12958 <putc_unlocked@plt+0x13c4>
   126b8:	movw	r0, #42248	; 0xa508
   126bc:	movt	r0, #1
   126c0:	bl	128f4 <putc_unlocked@plt+0x1360>
   126c4:	movw	r0, #42343	; 0xa567
   126c8:	movt	r0, #1
   126cc:	bl	128f4 <putc_unlocked@plt+0x1360>
   126d0:	push	{r4, r5, fp, lr}
   126d4:	add	fp, sp, #8
   126d8:	mov	r4, r0
   126dc:	movw	r0, #5072	; 0x13d0
   126e0:	mov	r5, r1
   126e4:	movt	r0, #6
   126e8:	cmp	r4, r0
   126ec:	blt	126fc <putc_unlocked@plt+0x1168>
   126f0:	movw	r0, #42082	; 0xa462
   126f4:	movt	r0, #1
   126f8:	bl	113d8 <puts@plt>
   126fc:	ldr	r0, [r5, #4]
   12700:	movw	r1, #37688	; 0x9338
   12704:	movt	r1, #1
   12708:	cmp	r0, #0
   1270c:	beq	12738 <putc_unlocked@plt+0x11a4>
   12710:	add	r2, r5, #12
   12714:	ldrh	r3, [r2, #-12]
   12718:	cmp	r3, r4
   1271c:	bgt	1272c <putc_unlocked@plt+0x1198>
   12720:	ldrh	r3, [r2, #-10]
   12724:	cmp	r3, r4
   12728:	popge	{r4, r5, fp, pc}
   1272c:	ldr	r0, [r2], #8
   12730:	cmp	r0, #0
   12734:	bne	12714 <putc_unlocked@plt+0x1180>
   12738:	mov	r0, r1
   1273c:	pop	{r4, r5, fp, pc}
   12740:	push	{r4, sl, fp, lr}
   12744:	add	fp, sp, #8
   12748:	sub	sp, sp, #24
   1274c:	mov	r4, #0
   12750:	cmp	r0, #0
   12754:	beq	127a4 <putc_unlocked@plt+0x1210>
   12758:	add	r1, sp, #8
   1275c:	add	r2, sp, #12
   12760:	add	r3, sp, #16
   12764:	str	r1, [sp, #4]
   12768:	movw	r1, #42510	; 0xa60e
   1276c:	str	r2, [sp]
   12770:	sub	r2, fp, #12
   12774:	movt	r1, #1
   12778:	bl	114c8 <sscanf@plt>
   1277c:	cmp	r0, #4
   12780:	bne	127a4 <putc_unlocked@plt+0x1210>
   12784:	ldr	r0, [sp, #16]
   12788:	ldr	r1, [fp, #-12]
   1278c:	lsl	r0, r0, #16
   12790:	add	r0, r0, r1, lsl #24
   12794:	ldr	r1, [sp, #12]
   12798:	add	r0, r0, r1, lsl #8
   1279c:	ldr	r1, [sp, #8]
   127a0:	add	r4, r0, r1
   127a4:	mov	r0, r4
   127a8:	sub	sp, fp, #8
   127ac:	pop	{r4, sl, fp, pc}
   127b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127b4:	add	fp, sp, #28
   127b8:	sub	sp, sp, #4
   127bc:	mov	r9, r1
   127c0:	mov	r8, r0
   127c4:	mov	r7, r0
   127c8:	ldrb	r0, [r7], #1
   127cc:	cmp	r0, #0
   127d0:	bne	127c8 <putc_unlocked@plt+0x1234>
   127d4:	mov	r0, #0
   127d8:	mov	r4, r9
   127dc:	ldrb	r1, [r4], #1
   127e0:	mov	r5, r0
   127e4:	sub	r0, r0, #1
   127e8:	cmp	r1, #0
   127ec:	bne	127dc <putc_unlocked@plt+0x1248>
   127f0:	mvn	r6, #1
   127f4:	mov	sl, #0
   127f8:	add	r0, r4, r6
   127fc:	cmp	r0, r9
   12800:	addcs	r0, r7, r6
   12804:	cmpcs	r0, r8
   12808:	bcc	12838 <putc_unlocked@plt+0x12a4>
   1280c:	bl	11408 <__ctype_tolower_loc@plt>
   12810:	ldrb	r2, [r7, r6]
   12814:	ldr	r0, [r0]
   12818:	ldrb	r1, [r4, r6]
   1281c:	ldr	r0, [r0, r2, lsl #2]
   12820:	cmp	r0, r1
   12824:	bne	12838 <putc_unlocked@plt+0x12a4>
   12828:	adds	r5, r5, #1
   1282c:	sub	r6, r6, #1
   12830:	bne	127f8 <putc_unlocked@plt+0x1264>
   12834:	mov	sl, #1
   12838:	mov	r0, sl
   1283c:	sub	sp, fp, #28
   12840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12844:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12848:	add	fp, sp, #24
   1284c:	sub	sp, sp, #8
   12850:	mov	r5, r1
   12854:	mov	r6, r0
   12858:	add	r1, sp, #4
   1285c:	mov	r0, r5
   12860:	bl	112dc <inet_aton@plt>
   12864:	ldr	r4, [r6]
   12868:	mov	r8, #0
   1286c:	cmp	r4, #0
   12870:	beq	128e8 <putc_unlocked@plt+0x1354>
   12874:	mov	r7, r0
   12878:	mov	r0, r4
   1287c:	mov	r1, r5
   12880:	bl	112e8 <strcmp@plt>
   12884:	cmp	r0, #0
   12888:	beq	128e4 <putc_unlocked@plt+0x1350>
   1288c:	cmp	r7, #0
   12890:	beq	128d4 <putc_unlocked@plt+0x1340>
   12894:	mov	r0, r4
   12898:	bl	11540 <gethostbyname@plt>
   1289c:	cmp	r0, #0
   128a0:	beq	128d4 <putc_unlocked@plt+0x1340>
   128a4:	ldr	r0, [r0, #16]
   128a8:	ldr	r1, [r0]
   128ac:	cmp	r1, #0
   128b0:	beq	128d4 <putc_unlocked@plt+0x1340>
   128b4:	ldr	r2, [sp, #4]
   128b8:	add	r0, r0, #4
   128bc:	ldr	r1, [r1]
   128c0:	cmp	r1, r2
   128c4:	beq	128e4 <putc_unlocked@plt+0x1350>
   128c8:	ldr	r1, [r0], #4
   128cc:	cmp	r1, #0
   128d0:	bne	128bc <putc_unlocked@plt+0x1328>
   128d4:	ldr	r4, [r6, #4]!
   128d8:	cmp	r4, #0
   128dc:	bne	12878 <putc_unlocked@plt+0x12e4>
   128e0:	b	128e8 <putc_unlocked@plt+0x1354>
   128e4:	mov	r8, #1
   128e8:	mov	r0, r8
   128ec:	sub	sp, fp, #24
   128f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   128f4:	sub	sp, sp, #12
   128f8:	push	{fp, lr}
   128fc:	mov	fp, sp
   12900:	sub	sp, sp, #4
   12904:	movw	r4, #63664	; 0xf8b0
   12908:	mov	ip, r0
   1290c:	add	r0, fp, #8
   12910:	stm	r0, {r1, r2, r3}
   12914:	movt	r4, #2
   12918:	add	r2, fp, #8
   1291c:	mov	r1, ip
   12920:	ldr	r0, [r4]
   12924:	str	r2, [sp]
   12928:	bl	114b0 <vfprintf@plt>
   1292c:	ldr	r4, [r4]
   12930:	bl	1145c <__errno_location@plt>
   12934:	ldr	r0, [r0]
   12938:	bl	113fc <strerror@plt>
   1293c:	movw	r1, #44681	; 0xae89
   12940:	mov	r2, r0
   12944:	mov	r0, r4
   12948:	movt	r1, #1
   1294c:	bl	11450 <fprintf@plt>
   12950:	mov	r0, #1
   12954:	bl	1142c <exit@plt>
   12958:	sub	sp, sp, #12
   1295c:	push	{fp, lr}
   12960:	mov	fp, sp
   12964:	sub	sp, sp, #4
   12968:	movw	r4, #63664	; 0xf8b0
   1296c:	mov	ip, r0
   12970:	add	r0, fp, #8
   12974:	stm	r0, {r1, r2, r3}
   12978:	movt	r4, #2
   1297c:	add	r2, fp, #8
   12980:	mov	r1, ip
   12984:	ldr	r0, [r4]
   12988:	str	r2, [sp]
   1298c:	bl	114b0 <vfprintf@plt>
   12990:	ldr	r1, [r4]
   12994:	movw	r0, #41747	; 0xa313
   12998:	movt	r0, #1
   1299c:	bl	1154c <fputs@plt>
   129a0:	mov	r0, #1
   129a4:	bl	1142c <exit@plt>
   129a8:	push	{r4, r5, r6, r7, fp, lr}
   129ac:	add	fp, sp, #16
   129b0:	mov	r6, #7
   129b4:	cmp	r0, #1
   129b8:	blt	12ad8 <putc_unlocked@plt+0x1544>
   129bc:	mov	r7, r0
   129c0:	cmp	r0, #127	; 0x7f
   129c4:	bhi	12ad8 <putc_unlocked@plt+0x1544>
   129c8:	mov	r4, r1
   129cc:	sub	r1, r7, #113	; 0x71
   129d0:	cmp	r1, #5
   129d4:	bhi	129f0 <putc_unlocked@plt+0x145c>
   129d8:	mov	r0, #1
   129dc:	mov	r2, #41	; 0x29
   129e0:	tst	r2, r0, lsl r1
   129e4:	movwne	r1, #63688	; 0xf8c8
   129e8:	movtne	r1, #2
   129ec:	strne	r0, [r1]
   129f0:	movw	r5, #63748	; 0xf904
   129f4:	movt	r5, #2
   129f8:	ldr	r0, [r5, #12]
   129fc:	ldr	r1, [r5, #16]
   12a00:	cmp	r1, r0
   12a04:	bne	12a18 <putc_unlocked@plt+0x1484>
   12a08:	mov	r0, r5
   12a0c:	mov	r1, #1
   12a10:	bl	14028 <_obstack_newchunk@@Base>
   12a14:	ldr	r0, [r5, #12]
   12a18:	add	r1, r0, #1
   12a1c:	str	r1, [r5, #12]
   12a20:	mov	r1, #45	; 0x2d
   12a24:	strb	r1, [r0]
   12a28:	ldr	r0, [r5, #12]
   12a2c:	ldr	r1, [r5, #16]
   12a30:	cmp	r1, r0
   12a34:	bne	12a48 <putc_unlocked@plt+0x14b4>
   12a38:	mov	r0, r5
   12a3c:	mov	r1, #1
   12a40:	bl	14028 <_obstack_newchunk@@Base>
   12a44:	ldr	r0, [r5, #12]
   12a48:	add	r1, r0, #1
   12a4c:	mov	r6, #0
   12a50:	cmp	r4, #0
   12a54:	str	r1, [r5, #12]
   12a58:	strb	r7, [r0]
   12a5c:	beq	12ad8 <putc_unlocked@plt+0x1544>
   12a60:	ldr	r0, [r5, #12]
   12a64:	ldr	r1, [r5, #16]
   12a68:	cmp	r1, r0
   12a6c:	bne	12a80 <putc_unlocked@plt+0x14ec>
   12a70:	mov	r0, r5
   12a74:	mov	r1, #1
   12a78:	bl	14028 <_obstack_newchunk@@Base>
   12a7c:	ldr	r0, [r5, #12]
   12a80:	add	r1, r0, #1
   12a84:	str	r1, [r5, #12]
   12a88:	mov	r1, #32
   12a8c:	strb	r1, [r0]
   12a90:	mov	r0, r4
   12a94:	bl	11438 <strlen@plt>
   12a98:	mov	r7, r0
   12a9c:	ldr	r0, [r5, #12]
   12aa0:	ldr	r1, [r5, #16]
   12aa4:	sub	r1, r1, r0
   12aa8:	cmp	r1, r7
   12aac:	bcs	12ac0 <putc_unlocked@plt+0x152c>
   12ab0:	mov	r0, r5
   12ab4:	mov	r1, r7
   12ab8:	bl	14028 <_obstack_newchunk@@Base>
   12abc:	ldr	r0, [r5, #12]
   12ac0:	mov	r1, r4
   12ac4:	mov	r2, r7
   12ac8:	bl	11354 <memcpy@plt>
   12acc:	ldr	r0, [r5, #12]
   12ad0:	add	r0, r0, r7
   12ad4:	str	r0, [r5, #12]
   12ad8:	mov	r0, r6
   12adc:	pop	{r4, r5, r6, r7, fp, pc}
   12ae0:	push	{r4, r5, r6, sl, fp, lr}
   12ae4:	add	fp, sp, #16
   12ae8:	mov	r5, r1
   12aec:	mov	r1, r0
   12af0:	mov	r0, #7
   12af4:	cmp	r1, #103	; 0x67
   12af8:	bgt	12b20 <putc_unlocked@plt+0x158c>
   12afc:	cmp	r1, #72	; 0x48
   12b00:	beq	12b80 <putc_unlocked@plt+0x15ec>
   12b04:	cmp	r1, #86	; 0x56
   12b08:	bne	12ba4 <putc_unlocked@plt+0x1610>
   12b0c:	movw	r0, #63676	; 0xf8bc
   12b10:	mov	r1, #1
   12b14:	movt	r0, #2
   12b18:	str	r1, [r0]
   12b1c:	b	12ba0 <putc_unlocked@plt+0x160c>
   12b20:	cmp	r1, #112	; 0x70
   12b24:	beq	12b94 <putc_unlocked@plt+0x1600>
   12b28:	cmp	r1, #104	; 0x68
   12b2c:	popne	{r4, r5, r6, sl, fp, pc}
   12b30:	mov	r0, r5
   12b34:	bl	11438 <strlen@plt>
   12b38:	add	r0, r0, #1
   12b3c:	bl	14718 <_obstack_memory_used@@Base+0x4cc>
   12b40:	mov	r4, r0
   12b44:	movw	r0, #63680	; 0xf8c0
   12b48:	movt	r0, #2
   12b4c:	str	r4, [r0]
   12b50:	b	12b6c <putc_unlocked@plt+0x15d8>
   12b54:	cmp	r6, #58	; 0x3a
   12b58:	beq	12ba8 <putc_unlocked@plt+0x1614>
   12b5c:	bl	11408 <__ctype_tolower_loc@plt>
   12b60:	ldr	r0, [r0]
   12b64:	ldr	r0, [r0, r6, lsl #2]
   12b68:	strb	r0, [r4], #1
   12b6c:	add	r5, r5, #1
   12b70:	ldrb	r6, [r5, #-1]
   12b74:	cmp	r6, #0
   12b78:	bne	12b54 <putc_unlocked@plt+0x15c0>
   12b7c:	b	12bb4 <putc_unlocked@plt+0x1620>
   12b80:	movw	r1, #62936	; 0xf5d8
   12b84:	mov	r0, #0
   12b88:	movt	r1, #2
   12b8c:	str	r0, [r1]
   12b90:	pop	{r4, r5, r6, sl, fp, pc}
   12b94:	movw	r0, #63684	; 0xf8c4
   12b98:	movt	r0, #2
   12b9c:	str	r5, [r0]
   12ba0:	mov	r0, #0
   12ba4:	pop	{r4, r5, r6, sl, fp, pc}
   12ba8:	movw	r0, #63684	; 0xf8c4
   12bac:	movt	r0, #2
   12bb0:	str	r5, [r0]
   12bb4:	mov	r0, #0
   12bb8:	strb	r0, [r4]
   12bbc:	pop	{r4, r5, r6, sl, fp, pc}

00012bc0 <argp_parse@@Base>:
   12bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bc4:	add	fp, sp, #28
   12bc8:	sub	sp, sp, #212	; 0xd4
   12bcc:	mov	r5, r3
   12bd0:	mov	r6, r2
   12bd4:	mov	r7, r1
   12bd8:	mov	r4, r0
   12bdc:	tst	r3, #1
   12be0:	bne	12c1c <argp_parse@@Base+0x5c>
   12be4:	movw	r0, #63660	; 0xf8ac
   12be8:	movw	r8, #63656	; 0xf8a8
   12bec:	movt	r0, #2
   12bf0:	movt	r8, #2
   12bf4:	ldr	r1, [r0]
   12bf8:	cmp	r1, #0
   12bfc:	ldreq	r1, [r6]
   12c00:	streq	r1, [r0]
   12c04:	ldr	r0, [r8]
   12c08:	cmp	r0, #0
   12c0c:	bne	12c1c <argp_parse@@Base+0x5c>
   12c10:	ldr	r0, [r6]
   12c14:	bl	13dac <argp_parse@@Base+0x11ec>
   12c18:	str	r0, [r8]
   12c1c:	tst	r5, #16
   12c20:	str	r6, [fp, #-228]	; 0xffffff1c
   12c24:	bne	12cd0 <argp_parse@@Base+0x110>
   12c28:	mov	r1, sp
   12c2c:	sub	r3, r1, #64	; 0x40
   12c30:	mov	sp, r3
   12c34:	mov	r2, sp
   12c38:	sub	r0, r2, #32
   12c3c:	mov	sp, r0
   12c40:	vmov.i32	q8, #0	; 0x00000000
   12c44:	sub	r2, r2, #20
   12c48:	cmp	r4, #0
   12c4c:	vst1.32	{d16-d17}, [r2]
   12c50:	mov	r2, r0
   12c54:	vst1.64	{d16-d17}, [r2]!
   12c58:	str	r3, [r2]
   12c5c:	sub	r2, r1, #32
   12c60:	sub	r1, r1, #48	; 0x30
   12c64:	vst1.64	{d16-d17}, [r2]
   12c68:	vst1.64	{d16-d17}, [r1]
   12c6c:	mov	r1, #48	; 0x30
   12c70:	mov	r2, r3
   12c74:	vst1.64	{d16-d17}, [r2], r1
   12c78:	vst1.64	{d16-d17}, [r2]
   12c7c:	movw	r2, #43412	; 0xa994
   12c80:	strne	r4, [r3], #16
   12c84:	movt	r2, #1
   12c88:	mov	r1, r3
   12c8c:	str	r2, [r1], #16
   12c90:	movw	r2, #63800	; 0xf938
   12c94:	movt	r2, #2
   12c98:	ldr	r2, [r2]
   12c9c:	cmp	r2, #0
   12ca0:	movweq	r2, #63696	; 0xf8d0
   12ca4:	movteq	r2, #2
   12ca8:	ldreq	r2, [r2]
   12cac:	cmpeq	r2, #0
   12cb0:	beq	12cc4 <argp_parse@@Base+0x104>
   12cb4:	movw	r2, #43440	; 0xa9b0
   12cb8:	mov	r3, r1
   12cbc:	movt	r2, #1
   12cc0:	str	r2, [r1]
   12cc4:	mov	r1, #0
   12cc8:	str	r1, [r3, #16]
   12ccc:	b	12cd4 <argp_parse@@Base+0x114>
   12cd0:	mov	r0, r4
   12cd4:	sub	r9, fp, #96	; 0x60
   12cd8:	str	r7, [fp, #-232]	; 0xffffff18
   12cdc:	vmov.i32	q8, #0	; 0x00000000
   12ce0:	mov	r7, #12
   12ce4:	mov	r4, #0
   12ce8:	cmp	r0, #0
   12cec:	str	r5, [fp, #-224]	; 0xffffff20
   12cf0:	str	r0, [fp, #-236]	; 0xffffff14
   12cf4:	mov	r1, r9
   12cf8:	vst1.64	{d16-d17}, [r1], r7
   12cfc:	vst1.32	{d16-d17}, [r1]
   12d00:	mov	r1, #1
   12d04:	bic	r3, r1, r5, lsr #2
   12d08:	str	r3, [fp, #-64]	; 0xffffffc0
   12d0c:	str	r4, [fp, #-60]	; 0xffffffc4
   12d10:	str	r4, [fp, #-56]	; 0xffffffc8
   12d14:	str	r4, [fp, #-52]	; 0xffffffcc
   12d18:	beq	12d50 <argp_parse@@Base+0x190>
   12d1c:	sub	r1, fp, #64	; 0x40
   12d20:	bl	13990 <argp_parse@@Base+0xdd0>
   12d24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12d28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12d2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12d30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12d34:	mov	r6, #16
   12d38:	add	r1, r6, r1, lsl #4
   12d3c:	add	r2, r2, r2, lsl #3
   12d40:	mov	r6, #36	; 0x24
   12d44:	lsl	r4, r0, #2
   12d48:	add	r8, r6, r2, lsl #2
   12d4c:	b	12d58 <argp_parse@@Base+0x198>
   12d50:	mov	r8, #36	; 0x24
   12d54:	mov	r1, #16
   12d58:	add	r5, r8, r4
   12d5c:	add	sl, r5, r1
   12d60:	add	r0, r3, sl
   12d64:	add	r0, r0, #1
   12d68:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   12d6c:	cmp	r0, #0
   12d70:	str	r0, [fp, #-100]	; 0xffffff9c
   12d74:	beq	13740 <argp_parse@@Base+0xb80>
   12d78:	mov	r6, r0
   12d7c:	mov	r0, #12
   12d80:	sub	r1, fp, #220	; 0xdc
   12d84:	mov	r2, r4
   12d88:	vld1.64	{d16-d17}, [r9], r0
   12d8c:	add	r0, r1, #20
   12d90:	add	r7, r6, r8
   12d94:	add	r8, r6, r5
   12d98:	add	r5, r6, sl
   12d9c:	vld1.32	{d18-d19}, [r9]
   12da0:	vst1.32	{d16-d17}, [r0]
   12da4:	add	r0, r1, #32
   12da8:	mov	r9, r1
   12dac:	mov	r1, #0
   12db0:	vst1.32	{d18-d19}, [r0]
   12db4:	mov	r0, #1
   12db8:	str	r6, [fp, #-172]	; 0xffffff54
   12dbc:	str	r0, [fp, #-208]	; 0xffffff30
   12dc0:	str	r0, [fp, #-204]	; 0xffffff34
   12dc4:	mov	r0, r7
   12dc8:	str	r7, [fp, #-164]	; 0xffffff5c
   12dcc:	str	r8, [fp, #-212]	; 0xffffff2c
   12dd0:	str	r5, [fp, #-216]	; 0xffffff28
   12dd4:	bl	11480 <memset@plt>
   12dd8:	str	r5, [fp, #-44]	; 0xffffffd4
   12ddc:	str	r9, [fp, #-48]	; 0xffffffd0
   12de0:	ldr	r9, [fp, #-224]	; 0xffffff20
   12de4:	mov	r0, #45	; 0x2d
   12de8:	str	r8, [fp, #-40]	; 0xffffffd8
   12dec:	str	r7, [fp, #-36]	; 0xffffffdc
   12df0:	tst	r9, #8
   12df4:	moveq	r0, #43	; 0x2b
   12df8:	tsteq	r9, #4
   12dfc:	beq	12e10 <argp_parse@@Base+0x250>
   12e00:	add	r1, r5, #1
   12e04:	strb	r0, [r5]
   12e08:	str	r1, [fp, #-44]	; 0xffffffd4
   12e0c:	b	12e14 <argp_parse@@Base+0x254>
   12e10:	mov	r1, r5
   12e14:	ldr	r0, [fp, #-236]	; 0xffffff14
   12e18:	ldr	sl, [fp, #-228]	; 0xffffff1c
   12e1c:	mov	r5, #0
   12e20:	strb	r5, [r1]
   12e24:	str	r5, [r8]
   12e28:	cmp	r0, #0
   12e2c:	str	r0, [fp, #-220]	; 0xffffff24
   12e30:	beq	12e68 <argp_parse@@Base+0x2a8>
   12e34:	sub	sp, sp, #8
   12e38:	sub	r1, fp, #48	; 0x30
   12e3c:	mov	r2, #0
   12e40:	mov	r3, r6
   12e44:	str	r1, [sp]
   12e48:	mov	r1, #0
   12e4c:	bl	13a6c <argp_parse@@Base+0xeac>
   12e50:	add	sp, sp, #8
   12e54:	str	r0, [fp, #-168]	; 0xffffff58
   12e58:	mov	r6, r0
   12e5c:	ldr	r5, [fp, #-220]	; 0xffffff24
   12e60:	ldr	r4, [fp, #-172]	; 0xffffff54
   12e64:	b	12e70 <argp_parse@@Base+0x2b0>
   12e68:	mov	r4, r6
   12e6c:	str	r6, [fp, #-168]	; 0xffffff58
   12e70:	ldr	r3, [fp, #-232]	; 0xffffff18
   12e74:	sub	r1, fp, #220	; 0xdc
   12e78:	mov	r7, #0
   12e7c:	vmov.i32	q8, #0	; 0x00000000
   12e80:	mov	r0, #1
   12e84:	mov	r8, sl
   12e88:	cmp	r4, r6
   12e8c:	mov	r2, r1
   12e90:	add	r1, r1, #84	; 0x54
   12e94:	str	r7, [fp, #-116]	; 0xffffff8c
   12e98:	str	r7, [fp, #-120]	; 0xffffff88
   12e9c:	vst1.32	{d16-d17}, [r1]
   12ea0:	str	r5, [fp, #-156]	; 0xffffff64
   12ea4:	movw	r5, #1
   12ea8:	movt	r5, #256	; 0x100
   12eac:	str	r3, [fp, #-152]	; 0xffffff68
   12eb0:	str	sl, [fp, #-148]	; 0xffffff6c
   12eb4:	str	r9, [fp, #-140]	; 0xffffff74
   12eb8:	str	r7, [fp, #-144]	; 0xffffff70
   12ebc:	str	r2, [fp, #-104]	; 0xffffff98
   12ec0:	str	r0, [fp, #-160]	; 0xffffff60
   12ec4:	movw	r0, #63664	; 0xf8b0
   12ec8:	add	sl, r2, #64	; 0x40
   12ecc:	movt	r0, #2
   12ed0:	ldr	r0, [r0]
   12ed4:	str	r0, [fp, #-112]	; 0xffffff90
   12ed8:	movw	r0, #63668	; 0xf8b4
   12edc:	movt	r0, #2
   12ee0:	ldr	r0, [r0]
   12ee4:	str	r0, [fp, #-108]	; 0xffffff94
   12ee8:	bcs	12fc4 <argp_parse@@Base+0x404>
   12eec:	ldr	r0, [fp, #12]
   12ef0:	str	r0, [r4, #24]
   12ef4:	cmp	r7, #7
   12ef8:	cmpne	r7, #0
   12efc:	bne	13740 <argp_parse@@Base+0xb80>
   12f00:	ldr	r0, [r4, #16]
   12f04:	cmp	r0, #0
   12f08:	ldrne	r1, [r4, #20]
   12f0c:	ldrne	r0, [r0, #28]
   12f10:	ldrne	r0, [r0, r1, lsl #2]
   12f14:	strne	r0, [r4, #24]
   12f18:	ldr	r3, [r4]
   12f1c:	cmp	r3, #0
   12f20:	beq	12f68 <argp_parse@@Base+0x3a8>
   12f24:	add	r0, r4, #28
   12f28:	ldr	r1, [r4, #32]
   12f2c:	mov	r2, sl
   12f30:	str	r1, [fp, #-120]	; 0xffffff88
   12f34:	ldr	r1, [r4, #24]
   12f38:	str	r1, [fp, #-128]	; 0xffffff80
   12f3c:	mov	r1, #0
   12f40:	ldr	r0, [r0]
   12f44:	str	r0, [fp, #-124]	; 0xffffff84
   12f48:	ldr	r0, [r4, #12]
   12f4c:	str	r0, [fp, #-136]	; 0xffffff78
   12f50:	add	r0, r5, #2
   12f54:	blx	r3
   12f58:	mov	r7, r0
   12f5c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12f60:	str	r0, [r4, #32]
   12f64:	b	12f84 <argp_parse@@Base+0x3c4>
   12f68:	ldr	r0, [r4, #4]
   12f6c:	mov	r7, #7
   12f70:	ldr	r0, [r0, #16]
   12f74:	cmp	r0, #0
   12f78:	ldrne	r0, [r0]
   12f7c:	cmpne	r0, #0
   12f80:	bne	12f98 <argp_parse@@Base+0x3d8>
   12f84:	ldr	r0, [fp, #-168]	; 0xffffff58
   12f88:	add	r4, r4, #36	; 0x24
   12f8c:	cmp	r4, r0
   12f90:	bcc	12ef4 <argp_parse@@Base+0x334>
   12f94:	b	12fb8 <argp_parse@@Base+0x3f8>
   12f98:	mov	r0, r4
   12f9c:	ldr	r2, [r4, #24]
   12fa0:	ldr	r1, [r0, #28]!
   12fa4:	str	r2, [r1]
   12fa8:	ldr	r3, [r4]
   12fac:	cmp	r3, #0
   12fb0:	bne	12f28 <argp_parse@@Base+0x368>
   12fb4:	b	12f84 <argp_parse@@Base+0x3c4>
   12fb8:	cmp	r7, #7
   12fbc:	cmpne	r7, #0
   12fc0:	bne	13740 <argp_parse@@Base+0xb80>
   12fc4:	ldr	r0, [fp, #-140]	; 0xffffff74
   12fc8:	tst	r0, #2
   12fcc:	bne	12fdc <argp_parse@@Base+0x41c>
   12fd0:	mov	r0, #1
   12fd4:	str	r0, [fp, #-204]	; 0xffffff34
   12fd8:	b	13004 <argp_parse@@Base+0x444>
   12fdc:	mov	r1, #0
   12fe0:	tst	r0, #1
   12fe4:	str	r1, [fp, #-204]	; 0xffffff34
   12fe8:	beq	13004 <argp_parse@@Base+0x444>
   12fec:	ldr	r0, [fp, #-152]	; 0xffffff68
   12ff0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   12ff4:	sub	r1, r1, #4
   12ff8:	add	r0, r0, #1
   12ffc:	str	r1, [fp, #-148]	; 0xffffff6c
   13000:	str	r0, [fp, #-152]	; 0xffffff68
   13004:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13008:	cmp	r0, r8
   1300c:	beq	13020 <argp_parse@@Base+0x460>
   13010:	movw	r0, #63656	; 0xf8a8
   13014:	movt	r0, #2
   13018:	ldr	r0, [r0]
   1301c:	b	13030 <argp_parse@@Base+0x470>
   13020:	ldr	r0, [r8]
   13024:	cmp	r0, #0
   13028:	beq	13010 <argp_parse@@Base+0x450>
   1302c:	bl	13dac <argp_parse@@Base+0x11ec>
   13030:	str	r0, [fp, #-116]	; 0xffffff8c
   13034:	sub	r0, fp, #220	; 0xdc
   13038:	add	r6, r0, #12
   1303c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   13040:	cmp	r0, #0
   13044:	beq	1305c <argp_parse@@Base+0x49c>
   13048:	ldr	r9, [fp, #-144]	; 0xffffff70
   1304c:	cmp	r9, r0
   13050:	bge	1311c <argp_parse@@Base+0x55c>
   13054:	mov	r0, #0
   13058:	str	r0, [fp, #-132]	; 0xffffff7c
   1305c:	ldr	r0, [fp, #-160]	; 0xffffff60
   13060:	ldr	r9, [fp, #-144]	; 0xffffff70
   13064:	cmp	r0, #0
   13068:	beq	1311c <argp_parse@@Base+0x55c>
   1306c:	mvn	r0, #0
   13070:	str	r0, [fp, #-200]	; 0xffffff38
   13074:	str	r9, [fp, #-208]	; 0xffffff30
   13078:	ldr	r2, [fp, #-216]	; 0xffffff28
   1307c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13080:	ldr	r0, [fp, #-152]	; 0xffffff68
   13084:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13088:	ldrb	r7, [fp, #-140]	; 0xffffff74
   1308c:	sub	sp, sp, #8
   13090:	tst	r7, #64	; 0x40
   13094:	bne	130ac <argp_parse@@Base+0x4ec>
   13098:	mov	r7, #0
   1309c:	str	r6, [sp, #4]
   130a0:	str	r7, [sp]
   130a4:	bl	13e80 <argp_parse@@Base+0x12c0>
   130a8:	b	130bc <argp_parse@@Base+0x4fc>
   130ac:	mov	r7, #0
   130b0:	str	r6, [sp, #4]
   130b4:	str	r7, [sp]
   130b8:	bl	13ee4 <argp_parse@@Base+0x1324>
   130bc:	add	sp, sp, #8
   130c0:	ldr	r9, [fp, #-208]	; 0xffffff30
   130c4:	mov	r7, r0
   130c8:	cmn	r0, #1
   130cc:	str	r9, [fp, #-144]	; 0xffffff70
   130d0:	beq	130ec <argp_parse@@Base+0x52c>
   130d4:	cmp	r7, #63	; 0x3f
   130d8:	beq	1329c <argp_parse@@Base+0x6dc>
   130dc:	cmp	r7, #1
   130e0:	bne	132ac <argp_parse@@Base+0x6ec>
   130e4:	ldr	r7, [fp, #-196]	; 0xffffff3c
   130e8:	b	13154 <argp_parse@@Base+0x594>
   130ec:	mov	r0, #0
   130f0:	cmp	r9, #2
   130f4:	str	r0, [fp, #-160]	; 0xffffff60
   130f8:	blt	1311c <argp_parse@@Base+0x55c>
   130fc:	ldr	r0, [fp, #-148]	; 0xffffff6c
   13100:	movw	r1, #43900	; 0xab7c
   13104:	movt	r1, #1
   13108:	add	r0, r0, r9, lsl #2
   1310c:	ldr	r0, [r0, #-4]
   13110:	bl	112e8 <strcmp@plt>
   13114:	cmp	r0, #0
   13118:	streq	r9, [fp, #-132]	; 0xffffff7c
   1311c:	ldr	r2, [fp, #-152]	; 0xffffff68
   13120:	mov	r1, #1
   13124:	mov	r0, #7
   13128:	cmp	r9, r2
   1312c:	bge	13410 <argp_parse@@Base+0x850>
   13130:	ldrb	r2, [fp, #-140]	; 0xffffff74
   13134:	tst	r2, #4
   13138:	bne	13410 <argp_parse@@Base+0x850>
   1313c:	add	r0, r9, #1
   13140:	str	r0, [fp, #-144]	; 0xffffff70
   13144:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13148:	ldr	r7, [r1, r9, lsl #2]
   1314c:	mov	r9, r0
   13150:	str	r7, [fp, #-196]	; 0xffffff3c
   13154:	sub	r0, r9, #1
   13158:	str	r0, [fp, #-144]	; 0xffffff70
   1315c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13160:	ldr	r2, [fp, #-168]	; 0xffffff58
   13164:	cmp	r1, r2
   13168:	bcs	133c8 <argp_parse@@Base+0x808>
   1316c:	add	r4, r1, #24
   13170:	b	1317c <argp_parse@@Base+0x5bc>
   13174:	ldr	r0, [fp, #-144]	; 0xffffff70
   13178:	add	r4, r4, #36	; 0x24
   1317c:	add	r1, r0, #1
   13180:	str	r1, [fp, #-144]	; 0xffffff70
   13184:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13188:	cmp	r3, #0
   1318c:	beq	13220 <argp_parse@@Base+0x660>
   13190:	ldr	r0, [r4, #8]
   13194:	mov	r1, r7
   13198:	mov	r2, sl
   1319c:	mov	r8, #0
   131a0:	str	r0, [fp, #-120]	; 0xffffff88
   131a4:	ldr	r0, [r4]
   131a8:	str	r0, [fp, #-128]	; 0xffffff80
   131ac:	ldr	r0, [r4, #4]
   131b0:	str	r0, [fp, #-124]	; 0xffffff84
   131b4:	ldr	r0, [r4, #-12]
   131b8:	str	r0, [fp, #-136]	; 0xffffff78
   131bc:	mov	r0, #0
   131c0:	blx	r3
   131c4:	ldr	r1, [fp, #-120]	; 0xffffff88
   131c8:	cmp	r0, #7
   131cc:	str	r1, [r4, #8]
   131d0:	bne	13244 <argp_parse@@Base+0x684>
   131d4:	ldr	r0, [fp, #-144]	; 0xffffff70
   131d8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   131dc:	sub	r0, r0, #1
   131e0:	cmp	r3, #0
   131e4:	str	r0, [fp, #-144]	; 0xffffff70
   131e8:	beq	13224 <argp_parse@@Base+0x664>
   131ec:	ldr	r0, [r4]
   131f0:	mov	r1, #0
   131f4:	mov	r2, sl
   131f8:	str	r0, [fp, #-128]	; 0xffffff80
   131fc:	ldr	r0, [r4, #4]
   13200:	str	r0, [fp, #-124]	; 0xffffff84
   13204:	ldr	r0, [r4, #-12]
   13208:	str	r0, [fp, #-136]	; 0xffffff78
   1320c:	add	r0, r5, #5
   13210:	blx	r3
   13214:	ldr	r1, [fp, #-120]	; 0xffffff88
   13218:	str	r1, [r4, #8]
   1321c:	b	13228 <argp_parse@@Base+0x668>
   13220:	str	r0, [fp, #-144]	; 0xffffff70
   13224:	mov	r0, #7
   13228:	add	r8, r5, #5
   1322c:	cmp	r0, #7
   13230:	bne	13244 <argp_parse@@Base+0x684>
   13234:	ldr	r2, [fp, #-168]	; 0xffffff58
   13238:	add	r1, r4, #12
   1323c:	cmp	r1, r2
   13240:	bcc	13174 <argp_parse@@Base+0x5b4>
   13244:	cmp	r0, #0
   13248:	beq	13258 <argp_parse@@Base+0x698>
   1324c:	cmp	r0, #7
   13250:	bne	133b8 <argp_parse@@Base+0x7f8>
   13254:	b	133c8 <argp_parse@@Base+0x808>
   13258:	add	r0, r5, #5
   1325c:	cmp	r8, r0
   13260:	ldreq	r0, [fp, #-152]	; 0xffffff68
   13264:	streq	r0, [fp, #-144]	; 0xffffff70
   13268:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1326c:	cmp	r0, r9
   13270:	bge	13280 <argp_parse@@Base+0x6c0>
   13274:	mov	r0, #1
   13278:	str	r0, [fp, #-160]	; 0xffffff60
   1327c:	b	13294 <argp_parse@@Base+0x6d4>
   13280:	rsb	r1, r9, #1
   13284:	add	r0, r1, r0
   13288:	ldr	r1, [r4, #-12]
   1328c:	add	r0, r0, r1
   13290:	str	r0, [r4, #-12]
   13294:	mov	r0, #0
   13298:	b	133b8 <argp_parse@@Base+0x7f8>
   1329c:	ldr	r0, [fp, #-200]	; 0xffffff38
   132a0:	cmn	r0, #1
   132a4:	beq	13318 <argp_parse@@Base+0x758>
   132a8:	b	13780 <argp_parse@@Base+0xbc0>
   132ac:	mov	r0, #0
   132b0:	cmp	r0, r7, asr #24
   132b4:	beq	13318 <argp_parse@@Base+0x758>
   132b8:	ldr	r1, [fp, #-172]	; 0xffffff54
   132bc:	asr	r0, r7, #24
   132c0:	sub	r0, r0, #1
   132c4:	add	r0, r0, r0, lsl #3
   132c8:	ldr	r3, [r1, r0, lsl #2]
   132cc:	cmp	r3, #0
   132d0:	beq	1374c <argp_parse@@Base+0xb8c>
   132d4:	add	r4, r1, r0, lsl #2
   132d8:	tst	r7, #8388608	; 0x800000
   132dc:	mov	r2, sl
   132e0:	ldr	r0, [r4, #32]!
   132e4:	str	r0, [fp, #-120]	; 0xffffff88
   132e8:	ldr	r0, [r4, #-8]
   132ec:	str	r0, [fp, #-128]	; 0xffffff80
   132f0:	ldr	r0, [r4, #-4]
   132f4:	str	r0, [fp, #-124]	; 0xffffff84
   132f8:	ldr	r0, [r4, #-20]	; 0xffffffec
   132fc:	str	r0, [fp, #-136]	; 0xffffff78
   13300:	bic	r0, r7, #-16777216	; 0xff000000
   13304:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13308:	orrne	r0, r0, #-16777216	; 0xff000000
   1330c:	blx	r3
   13310:	mov	r1, #0
   13314:	b	133a8 <argp_parse@@Base+0x7e8>
   13318:	ldr	r0, [fp, #-216]	; 0xffffff28
   1331c:	mov	r1, r7
   13320:	bl	11444 <strchr@plt>
   13324:	cmp	r0, #0
   13328:	beq	133dc <argp_parse@@Base+0x81c>
   1332c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13330:	ldr	r2, [fp, #-168]	; 0xffffff58
   13334:	cmp	r1, r2
   13338:	bcs	133dc <argp_parse@@Base+0x81c>
   1333c:	add	r1, r1, #24
   13340:	ldr	r3, [r1, #-16]
   13344:	cmp	r3, r0
   13348:	bhi	13364 <argp_parse@@Base+0x7a4>
   1334c:	add	r3, r1, #36	; 0x24
   13350:	add	r1, r1, #12
   13354:	cmp	r1, r2
   13358:	mov	r1, r3
   1335c:	bcc	13340 <argp_parse@@Base+0x780>
   13360:	b	133dc <argp_parse@@Base+0x81c>
   13364:	ldr	r3, [r1, #-24]	; 0xffffffe8
   13368:	cmp	r3, #0
   1336c:	beq	133dc <argp_parse@@Base+0x81c>
   13370:	mov	r4, r1
   13374:	mov	r2, sl
   13378:	ldr	r0, [r4, #8]!
   1337c:	str	r0, [fp, #-120]	; 0xffffff88
   13380:	ldr	r0, [r1]
   13384:	str	r0, [fp, #-128]	; 0xffffff80
   13388:	ldr	r0, [r1, #4]
   1338c:	str	r0, [fp, #-124]	; 0xffffff84
   13390:	ldr	r0, [r1, #-12]
   13394:	str	r0, [fp, #-136]	; 0xffffff78
   13398:	mov	r0, r7
   1339c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   133a0:	blx	r3
   133a4:	mov	r1, #1
   133a8:	ldr	r2, [fp, #-120]	; 0xffffff88
   133ac:	cmp	r0, #7
   133b0:	str	r2, [r4]
   133b4:	beq	133d4 <argp_parse@@Base+0x814>
   133b8:	cmp	r0, #0
   133bc:	beq	1303c <argp_parse@@Base+0x47c>
   133c0:	mov	r1, #0
   133c4:	b	13410 <argp_parse@@Base+0x850>
   133c8:	mov	r7, #1
   133cc:	mov	r0, #1
   133d0:	b	133fc <argp_parse@@Base+0x83c>
   133d4:	cmp	r1, #0
   133d8:	beq	1374c <argp_parse@@Base+0xb8c>
   133dc:	movw	r1, #43903	; 0xab7f
   133e0:	movw	r3, #43636	; 0xaa74
   133e4:	mov	r0, sl
   133e8:	mov	r2, r7
   133ec:	movt	r1, #1
   133f0:	movt	r3, #1
   133f4:	bl	15e78 <argp_error@@Base>
   133f8:	mov	r0, #0
   133fc:	add	r1, r7, #1
   13400:	clz	r1, r1
   13404:	lsr	r1, r1, #5
   13408:	orr	r1, r1, r0
   1340c:	mov	r0, #7
   13410:	subs	r7, r0, #7
   13414:	movne	r7, r0
   13418:	cmp	r1, #0
   1341c:	moveq	r7, r0
   13420:	cmp	r7, #0
   13424:	bne	1359c <argp_parse@@Base+0x9dc>
   13428:	ldr	r1, [fp, #-152]	; 0xffffff68
   1342c:	ldr	r0, [fp, #-144]	; 0xffffff70
   13430:	cmp	r0, r1
   13434:	bne	13548 <argp_parse@@Base+0x988>
   13438:	ldr	r4, [fp, #-172]	; 0xffffff54
   1343c:	ldr	r1, [fp, #-168]	; 0xffffff58
   13440:	mov	r0, #0
   13444:	cmp	r4, r1
   13448:	bcs	134cc <argp_parse@@Base+0x90c>
   1344c:	mov	r7, #0
   13450:	add	r6, r5, #1
   13454:	mov	r0, #0
   13458:	cmp	r0, #7
   1345c:	cmpne	r0, #0
   13460:	bne	134c8 <argp_parse@@Base+0x908>
   13464:	ldr	r2, [r4, #12]
   13468:	cmp	r2, #0
   1346c:	bne	134bc <argp_parse@@Base+0x8fc>
   13470:	ldr	r3, [r4]
   13474:	cmp	r3, #0
   13478:	beq	134b8 <argp_parse@@Base+0x8f8>
   1347c:	ldr	r0, [r4, #32]
   13480:	mov	r1, #0
   13484:	mov	r2, sl
   13488:	str	r0, [fp, #-120]	; 0xffffff88
   1348c:	ldr	r0, [r4, #24]
   13490:	str	r0, [fp, #-128]	; 0xffffff80
   13494:	ldr	r0, [r4, #28]
   13498:	str	r7, [fp, #-136]	; 0xffffff78
   1349c:	str	r0, [fp, #-124]	; 0xffffff84
   134a0:	mov	r0, r6
   134a4:	blx	r3
   134a8:	ldr	r1, [fp, #-120]	; 0xffffff88
   134ac:	str	r1, [r4, #32]
   134b0:	ldr	r1, [fp, #-168]	; 0xffffff58
   134b4:	b	134bc <argp_parse@@Base+0x8fc>
   134b8:	mov	r0, #7
   134bc:	add	r4, r4, #36	; 0x24
   134c0:	cmp	r4, r1
   134c4:	bcc	13458 <argp_parse@@Base+0x898>
   134c8:	ldr	r4, [fp, #-172]	; 0xffffff54
   134cc:	sub	r6, r1, #36	; 0x24
   134d0:	b	13534 <argp_parse@@Base+0x974>
   134d4:	cmp	r0, #7
   134d8:	cmpne	r0, #0
   134dc:	bne	13588 <argp_parse@@Base+0x9c8>
   134e0:	ldr	r3, [r6]
   134e4:	cmp	r3, #0
   134e8:	beq	1352c <argp_parse@@Base+0x96c>
   134ec:	ldr	r0, [r6, #32]
   134f0:	mov	r1, #0
   134f4:	mov	r2, sl
   134f8:	str	r0, [fp, #-120]	; 0xffffff88
   134fc:	ldr	r0, [r6, #24]
   13500:	str	r0, [fp, #-128]	; 0xffffff80
   13504:	ldr	r0, [r6, #28]
   13508:	str	r0, [fp, #-124]	; 0xffffff84
   1350c:	ldr	r0, [r6, #12]
   13510:	str	r0, [fp, #-136]	; 0xffffff78
   13514:	mov	r0, r5
   13518:	blx	r3
   1351c:	ldr	r1, [fp, #-120]	; 0xffffff88
   13520:	str	r1, [r6, #32]
   13524:	ldr	r4, [fp, #-172]	; 0xffffff54
   13528:	b	13530 <argp_parse@@Base+0x970>
   1352c:	mov	r0, #7
   13530:	sub	r6, r6, #36	; 0x24
   13534:	cmp	r6, r4
   13538:	bcs	134d4 <argp_parse@@Base+0x914>
   1353c:	subs	r7, r0, #7
   13540:	movne	r7, r0
   13544:	b	1358c <argp_parse@@Base+0x9cc>
   13548:	ldr	r1, [fp, #8]
   1354c:	cmp	r1, #0
   13550:	beq	1355c <argp_parse@@Base+0x99c>
   13554:	str	r0, [r1]
   13558:	b	13630 <argp_parse@@Base+0xa70>
   1355c:	ldrb	r0, [fp, #-140]	; 0xffffff74
   13560:	tst	r0, #2
   13564:	bne	135ac <argp_parse@@Base+0x9ec>
   13568:	ldr	r0, [fp, #-112]	; 0xffffff90
   1356c:	cmp	r0, #0
   13570:	beq	135ac <argp_parse@@Base+0x9ec>
   13574:	ldr	r2, [fp, #-116]	; 0xffffff8c
   13578:	movw	r1, #43924	; 0xab94
   1357c:	movt	r1, #1
   13580:	bl	11450 <fprintf@plt>
   13584:	b	135ac <argp_parse@@Base+0x9ec>
   13588:	mov	r7, r0
   1358c:	ldr	r1, [fp, #8]
   13590:	cmp	r1, #0
   13594:	ldrne	r0, [fp, #-144]	; 0xffffff70
   13598:	strne	r0, [r1]
   1359c:	cmp	r7, #0
   135a0:	beq	13630 <argp_parse@@Base+0xa70>
   135a4:	cmp	r7, #7
   135a8:	bne	135c0 <argp_parse@@Base+0xa00>
   135ac:	ldr	r1, [fp, #-112]	; 0xffffff90
   135b0:	mov	r0, sl
   135b4:	mov	r2, #260	; 0x104
   135b8:	bl	15dbc <argp_state_help@@Base>
   135bc:	mov	r7, #7
   135c0:	ldr	r4, [fp, #-172]	; 0xffffff54
   135c4:	ldr	r0, [fp, #-168]	; 0xffffff58
   135c8:	cmp	r4, r0
   135cc:	bcs	136c8 <argp_parse@@Base+0xb08>
   135d0:	add	r6, r5, #4
   135d4:	ldr	r3, [r4]
   135d8:	cmp	r3, #0
   135dc:	beq	1361c <argp_parse@@Base+0xa5c>
   135e0:	ldr	r0, [r4, #32]
   135e4:	mov	r1, #0
   135e8:	mov	r2, sl
   135ec:	str	r0, [fp, #-120]	; 0xffffff88
   135f0:	ldr	r0, [r4, #24]
   135f4:	str	r0, [fp, #-128]	; 0xffffff80
   135f8:	ldr	r0, [r4, #28]
   135fc:	str	r0, [fp, #-124]	; 0xffffff84
   13600:	ldr	r0, [r4, #12]
   13604:	str	r0, [fp, #-136]	; 0xffffff78
   13608:	mov	r0, r6
   1360c:	blx	r3
   13610:	ldr	r0, [fp, #-120]	; 0xffffff88
   13614:	str	r0, [r4, #32]
   13618:	ldr	r0, [fp, #-168]	; 0xffffff58
   1361c:	add	r4, r4, #36	; 0x24
   13620:	cmp	r4, r0
   13624:	bcc	135d4 <argp_parse@@Base+0xa14>
   13628:	ldr	r4, [fp, #-172]	; 0xffffff54
   1362c:	b	136c8 <argp_parse@@Base+0xb08>
   13630:	ldr	r0, [fp, #-168]	; 0xffffff58
   13634:	ldr	r4, [fp, #-172]	; 0xffffff54
   13638:	mov	r7, #0
   1363c:	sub	r6, r0, #36	; 0x24
   13640:	cmp	r6, r4
   13644:	bcc	136c8 <argp_parse@@Base+0xb08>
   13648:	mov	r0, #0
   1364c:	add	r7, r5, #3
   13650:	cmp	r0, #7
   13654:	cmpne	r0, #0
   13658:	bne	136c4 <argp_parse@@Base+0xb04>
   1365c:	ldr	r3, [r6]
   13660:	cmp	r3, #0
   13664:	beq	136a8 <argp_parse@@Base+0xae8>
   13668:	ldr	r0, [r6, #32]
   1366c:	mov	r1, #0
   13670:	mov	r2, sl
   13674:	str	r0, [fp, #-120]	; 0xffffff88
   13678:	ldr	r0, [r6, #24]
   1367c:	str	r0, [fp, #-128]	; 0xffffff80
   13680:	ldr	r0, [r6, #28]
   13684:	str	r0, [fp, #-124]	; 0xffffff84
   13688:	ldr	r0, [r6, #12]
   1368c:	str	r0, [fp, #-136]	; 0xffffff78
   13690:	mov	r0, r7
   13694:	blx	r3
   13698:	ldr	r1, [fp, #-120]	; 0xffffff88
   1369c:	str	r1, [r6, #32]
   136a0:	ldr	r4, [fp, #-172]	; 0xffffff54
   136a4:	b	136ac <argp_parse@@Base+0xaec>
   136a8:	mov	r0, #7
   136ac:	sub	r6, r6, #36	; 0x24
   136b0:	cmp	r6, r4
   136b4:	bcs	13650 <argp_parse@@Base+0xa90>
   136b8:	subs	r7, r0, #7
   136bc:	movne	r7, r0
   136c0:	b	136c8 <argp_parse@@Base+0xb08>
   136c4:	mov	r7, r0
   136c8:	ldr	r0, [fp, #-168]	; 0xffffff58
   136cc:	sub	r6, r0, #36	; 0x24
   136d0:	cmp	r6, r4
   136d4:	bcc	13730 <argp_parse@@Base+0xb70>
   136d8:	add	r5, r5, #6
   136dc:	ldr	r3, [r6]
   136e0:	cmp	r3, #0
   136e4:	beq	13724 <argp_parse@@Base+0xb64>
   136e8:	ldr	r0, [r6, #32]
   136ec:	mov	r1, #0
   136f0:	mov	r2, sl
   136f4:	str	r0, [fp, #-120]	; 0xffffff88
   136f8:	ldr	r0, [r6, #24]
   136fc:	str	r0, [fp, #-128]	; 0xffffff80
   13700:	ldr	r0, [r6, #28]
   13704:	str	r0, [fp, #-124]	; 0xffffff84
   13708:	ldr	r0, [r6, #12]
   1370c:	str	r0, [fp, #-136]	; 0xffffff78
   13710:	mov	r0, r5
   13714:	blx	r3
   13718:	ldr	r0, [fp, #-120]	; 0xffffff88
   1371c:	str	r0, [r6, #32]
   13720:	ldr	r4, [fp, #-172]	; 0xffffff54
   13724:	sub	r6, r6, #36	; 0x24
   13728:	cmp	r6, r4
   1372c:	bcs	136dc <argp_parse@@Base+0xb1c>
   13730:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13734:	bl	13e2c <argp_parse@@Base+0x126c>
   13738:	cmp	r7, #7
   1373c:	movweq	r7, #22
   13740:	mov	r0, r7
   13744:	sub	sp, fp, #28
   13748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1374c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   13750:	ldr	r1, [r0, #12]
   13754:	cmp	r1, r7
   13758:	beq	13788 <argp_parse@@Base+0xbc8>
   1375c:	ldr	r1, [r0]
   13760:	cmp	r1, #0
   13764:	beq	13788 <argp_parse@@Base+0xbc8>
   13768:	add	r1, r0, #16
   1376c:	ldr	r0, [r0, #28]
   13770:	cmp	r0, r7
   13774:	mov	r0, r1
   13778:	bne	1375c <argp_parse@@Base+0xb9c>
   1377c:	b	1378c <argp_parse@@Base+0xbcc>
   13780:	mov	r1, #0
   13784:	b	1340c <argp_parse@@Base+0x84c>
   13788:	mov	r1, r0
   1378c:	ldr	r0, [r1]
   13790:	movw	r2, #43920	; 0xab90
   13794:	movw	r1, #43911	; 0xab87
   13798:	movw	r3, #43636	; 0xaa74
   1379c:	movt	r2, #1
   137a0:	movt	r1, #1
   137a4:	movt	r3, #1
   137a8:	cmp	r0, #0
   137ac:	movne	r2, r0
   137b0:	mov	r0, sl
   137b4:	b	133f4 <argp_parse@@Base+0x834>
   137b8:	mov	ip, r0
   137bc:	mov	r0, #0
   137c0:	cmp	r1, #0
   137c4:	beq	137f4 <argp_parse@@Base+0xc34>
   137c8:	ldr	r3, [r1, #52]	; 0x34
   137cc:	ldr	r1, [r3, #48]	; 0x30
   137d0:	ldr	r3, [r3, #52]	; 0x34
   137d4:	b	137dc <argp_parse@@Base+0xc1c>
   137d8:	add	r1, r1, #36	; 0x24
   137dc:	cmp	r1, r3
   137e0:	bxcs	lr
   137e4:	ldr	r2, [r1, #4]
   137e8:	cmp	r2, ip
   137ec:	bne	137d8 <argp_parse@@Base+0xc18>
   137f0:	ldr	r0, [r1, #24]
   137f4:	bx	lr
   137f8:	push	{r4, r5, r6, sl, fp, lr}
   137fc:	add	fp, sp, #16
   13800:	mov	r5, r2
   13804:	mov	r6, r1
   13808:	mov	r4, #7
   1380c:	cmn	r0, #3
   13810:	bgt	13834 <argp_parse@@Base+0xc74>
   13814:	cmn	r0, #4
   13818:	beq	1385c <argp_parse@@Base+0xc9c>
   1381c:	cmn	r0, #3
   13820:	bne	138ec <argp_parse@@Base+0xd2c>
   13824:	ldr	r1, [r5, #48]	; 0x30
   13828:	mov	r0, r5
   1382c:	movw	r2, #513	; 0x201
   13830:	b	13850 <argp_parse@@Base+0xc90>
   13834:	cmn	r0, #2
   13838:	beq	138b0 <argp_parse@@Base+0xcf0>
   1383c:	cmp	r0, #63	; 0x3f
   13840:	bne	138ec <argp_parse@@Base+0xd2c>
   13844:	ldr	r1, [r5, #48]	; 0x30
   13848:	mov	r0, r5
   1384c:	movw	r2, #634	; 0x27a
   13850:	bl	15dbc <argp_state_help@@Base>
   13854:	mov	r4, #0
   13858:	b	138ec <argp_parse@@Base+0xd2c>
   1385c:	movw	r0, #43838	; 0xab3e
   13860:	cmp	r6, #0
   13864:	movt	r0, #1
   13868:	movne	r0, r6
   1386c:	bl	114f8 <atoi@plt>
   13870:	movw	r5, #63692	; 0xf8cc
   13874:	mov	r4, #0
   13878:	movt	r5, #2
   1387c:	str	r0, [r5]
   13880:	ldr	r0, [r5]
   13884:	subs	r0, r0, #1
   13888:	str	r0, [r5]
   1388c:	blt	138ec <argp_parse@@Base+0xd2c>
   13890:	mov	r0, #1
   13894:	bl	11378 <sleep@plt>
   13898:	ldr	r0, [r5]
   1389c:	sub	r1, r0, #1
   138a0:	cmp	r0, #0
   138a4:	str	r1, [r5]
   138a8:	bgt	13890 <argp_parse@@Base+0xcd0>
   138ac:	b	138ec <argp_parse@@Base+0xd2c>
   138b0:	movw	r0, #63660	; 0xf8ac
   138b4:	movt	r0, #2
   138b8:	str	r6, [r0]
   138bc:	mov	r0, r6
   138c0:	bl	13dac <argp_parse@@Base+0x11ec>
   138c4:	movw	r1, #63656	; 0xf8a8
   138c8:	str	r0, [r5, #40]	; 0x28
   138cc:	mov	r4, #0
   138d0:	movt	r1, #2
   138d4:	str	r0, [r1]
   138d8:	ldr	r0, [r5, #16]
   138dc:	and	r0, r0, #3
   138e0:	cmp	r0, #1
   138e4:	ldreq	r0, [r5, #8]
   138e8:	streq	r6, [r0]
   138ec:	mov	r0, r4
   138f0:	pop	{r4, r5, r6, sl, fp, pc}
   138f4:	push	{r4, sl, fp, lr}
   138f8:	add	fp, sp, #8
   138fc:	mov	r1, r0
   13900:	mov	r0, #7
   13904:	cmp	r1, #86	; 0x56
   13908:	popne	{r4, sl, fp, pc}
   1390c:	movw	r0, #63696	; 0xf8d0
   13910:	mov	r4, r2
   13914:	movt	r0, #2
   13918:	ldr	r2, [r0]
   1391c:	cmp	r2, #0
   13920:	beq	13934 <argp_parse@@Base+0xd74>
   13924:	ldr	r0, [r4, #48]	; 0x30
   13928:	mov	r1, r4
   1392c:	blx	r2
   13930:	b	13974 <argp_parse@@Base+0xdb4>
   13934:	movw	r0, #63800	; 0xf938
   13938:	movt	r0, #2
   1393c:	ldr	r2, [r0]
   13940:	cmp	r2, #0
   13944:	beq	1395c <argp_parse@@Base+0xd9c>
   13948:	ldr	r0, [r4, #48]	; 0x30
   1394c:	movw	r1, #44068	; 0xac24
   13950:	movt	r1, #1
   13954:	bl	11450 <fprintf@plt>
   13958:	b	13974 <argp_parse@@Base+0xdb4>
   1395c:	movw	r1, #45124	; 0xb044
   13960:	movw	r2, #43865	; 0xab59
   13964:	mov	r0, r4
   13968:	movt	r1, #1
   1396c:	movt	r2, #1
   13970:	bl	15e78 <argp_error@@Base>
   13974:	ldrb	r1, [r4, #16]
   13978:	mov	r0, #0
   1397c:	tst	r1, #32
   13980:	beq	13988 <argp_parse@@Base+0xdc8>
   13984:	pop	{r4, sl, fp, pc}
   13988:	mov	r0, #0
   1398c:	bl	1142c <exit@plt>
   13990:	push	{r4, r5, fp, lr}
   13994:	add	fp, sp, #8
   13998:	ldr	r2, [r0]
   1399c:	ldr	ip, [r0, #16]
   139a0:	mov	r4, r1
   139a4:	cmp	r2, #0
   139a8:	beq	13a14 <argp_parse@@Base+0xe54>
   139ac:	ldr	r0, [r4, #8]
   139b0:	mov	r3, #0
   139b4:	add	r0, r0, #1
   139b8:	str	r0, [r4, #8]
   139bc:	mov	r0, #0
   139c0:	b	139cc <argp_parse@@Base+0xe0c>
   139c4:	add	r3, r3, #3
   139c8:	add	r0, r0, #1
   139cc:	add	r5, r2, r3, lsl #3
   139d0:	ldr	r1, [r5, #4]
   139d4:	cmp	r1, #0
   139d8:	bne	139c4 <argp_parse@@Base+0xe04>
   139dc:	ldr	r1, [r2, r3, lsl #3]
   139e0:	cmp	r1, #0
   139e4:	bne	139c4 <argp_parse@@Base+0xe04>
   139e8:	ldr	r1, [r5, #16]
   139ec:	cmp	r1, #0
   139f0:	bne	139c4 <argp_parse@@Base+0xe04>
   139f4:	ldr	r1, [r5, #20]
   139f8:	cmp	r1, #0
   139fc:	bne	139c4 <argp_parse@@Base+0xe04>
   13a00:	ldr	r1, [r4]
   13a04:	mov	r2, r4
   13a08:	add	r1, r1, r3
   13a0c:	str	r1, [r2], #4
   13a10:	b	13a28 <argp_parse@@Base+0xe68>
   13a14:	ldr	r0, [r0, #4]
   13a18:	cmp	r0, #0
   13a1c:	beq	13a34 <argp_parse@@Base+0xe74>
   13a20:	add	r2, r4, #8
   13a24:	mov	r0, #1
   13a28:	ldr	r1, [r2]
   13a2c:	add	r0, r1, r0
   13a30:	str	r0, [r2]
   13a34:	cmp	ip, #0
   13a38:	ldrne	r0, [ip]
   13a3c:	cmpne	r0, #0
   13a40:	beq	13a68 <argp_parse@@Base+0xea8>
   13a44:	add	r5, ip, #16
   13a48:	mov	r1, r4
   13a4c:	bl	13990 <argp_parse@@Base+0xdd0>
   13a50:	ldr	r0, [r4, #12]
   13a54:	add	r0, r0, #1
   13a58:	str	r0, [r4, #12]
   13a5c:	ldr	r0, [r5], #16
   13a60:	cmp	r0, #0
   13a64:	bne	13a48 <argp_parse@@Base+0xe88>
   13a68:	pop	{r4, r5, fp, pc}
   13a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a70:	add	fp, sp, #28
   13a74:	sub	sp, sp, #28
   13a78:	ldr	r7, [r0]
   13a7c:	mov	r6, r3
   13a80:	mov	r3, r1
   13a84:	ldr	r5, [r0, #16]
   13a88:	ldr	r1, [fp, #8]
   13a8c:	cmp	r7, #0
   13a90:	beq	13c68 <argp_parse@@Base+0x10a8>
   13a94:	str	r0, [sp, #8]
   13a98:	add	r0, sp, #16
   13a9c:	add	r8, r1, #4
   13aa0:	mov	r9, r7
   13aa4:	str	r3, [sp, #12]
   13aa8:	stm	r0, {r2, r5, r6}
   13aac:	b	13c20 <argp_parse@@Base+0x1060>
   13ab0:	ldr	r0, [r9, #12]
   13ab4:	mov	r5, #0
   13ab8:	tst	r0, #4
   13abc:	moveq	r7, r9
   13ac0:	ldrb	r1, [r7, #12]
   13ac4:	tst	r1, #8
   13ac8:	bne	13c1c <argp_parse@@Base+0x105c>
   13acc:	sub	r1, r4, #1
   13ad0:	cmp	r1, #254	; 0xfe
   13ad4:	bhi	13b50 <argp_parse@@Base+0xf90>
   13ad8:	ands	r0, r0, #8
   13adc:	bne	13b50 <argp_parse@@Base+0xf90>
   13ae0:	bl	11420 <__ctype_b_loc@plt>
   13ae4:	ldr	r0, [r0]
   13ae8:	add	r0, r0, r4, lsl #1
   13aec:	ldrb	r0, [r0, #1]
   13af0:	tst	r0, #64	; 0x40
   13af4:	beq	13b50 <argp_parse@@Base+0xf90>
   13af8:	ldr	r0, [r8]
   13afc:	add	r1, r0, #1
   13b00:	str	r1, [r8]
   13b04:	strb	r4, [r0]
   13b08:	ldr	r0, [r7, #8]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b48 <argp_parse@@Base+0xf88>
   13b14:	ldr	r0, [r8]
   13b18:	add	r1, r0, #1
   13b1c:	str	r1, [r8]
   13b20:	mov	r1, #58	; 0x3a
   13b24:	strb	r1, [r0]
   13b28:	ldrb	r0, [r7, #12]
   13b2c:	tst	r0, #1
   13b30:	beq	13b48 <argp_parse@@Base+0xf88>
   13b34:	ldr	r0, [r8]
   13b38:	add	r1, r0, #1
   13b3c:	str	r1, [r8]
   13b40:	mov	r1, #58	; 0x3a
   13b44:	strb	r1, [r0]
   13b48:	ldr	r0, [r8]
   13b4c:	strb	r5, [r0]
   13b50:	ldr	r5, [r9]
   13b54:	cmp	r5, #0
   13b58:	beq	13c1c <argp_parse@@Base+0x105c>
   13b5c:	ldr	r0, [fp, #8]
   13b60:	ldr	r4, [r0]
   13b64:	ldr	sl, [r4, #8]
   13b68:	ldr	r0, [sl]
   13b6c:	cmp	r0, #0
   13b70:	beq	13ba4 <argp_parse@@Base+0xfe4>
   13b74:	mov	r6, sl
   13b78:	mov	r1, r5
   13b7c:	bl	112e8 <strcmp@plt>
   13b80:	cmp	r0, #0
   13b84:	beq	13b98 <argp_parse@@Base+0xfd8>
   13b88:	ldr	r0, [r6, #16]!
   13b8c:	cmp	r0, #0
   13b90:	bne	13b78 <argp_parse@@Base+0xfb8>
   13b94:	b	13ba4 <argp_parse@@Base+0xfe4>
   13b98:	sub	r0, r6, sl
   13b9c:	cmn	r0, #1
   13ba0:	bgt	13c1c <argp_parse@@Base+0x105c>
   13ba4:	ldr	r6, [fp, #8]
   13ba8:	ldr	r0, [r6, #8]
   13bac:	str	r5, [r0]
   13bb0:	ldr	r1, [r7, #8]
   13bb4:	cmp	r1, #0
   13bb8:	beq	13bd0 <argp_parse@@Base+0x1010>
   13bbc:	ldrb	r1, [r7, #12]
   13bc0:	tst	r1, #1
   13bc4:	mov	r1, #2
   13bc8:	movweq	r1, #1
   13bcc:	b	13bd4 <argp_parse@@Base+0x1014>
   13bd0:	mov	r1, #0
   13bd4:	mov	r5, #0
   13bd8:	stmib	r0, {r1, r5}
   13bdc:	ldr	r1, [r9, #4]
   13be0:	ldr	r3, [sp, #24]
   13be4:	ldr	r2, [r4, #48]	; 0x30
   13be8:	cmp	r1, #0
   13bec:	sub	r2, r3, r2
   13bf0:	mov	r3, #956301312	; 0x39000000
   13bf4:	ldreq	r1, [r7, #4]
   13bf8:	lsr	r2, r2, #2
   13bfc:	mul	r2, r2, r3
   13c00:	add	r2, r2, #16777216	; 0x1000000
   13c04:	bic	r1, r1, #-16777216	; 0xff000000
   13c08:	orr	r1, r2, r1
   13c0c:	str	r1, [r0, #12]
   13c10:	add	r1, r0, #16
   13c14:	str	r1, [r6, #8]
   13c18:	str	r5, [r0, #16]
   13c1c:	add	r9, r9, #24
   13c20:	ldr	r4, [r9, #4]
   13c24:	cmp	r4, #0
   13c28:	bne	13ab0 <argp_parse@@Base+0xef0>
   13c2c:	ldr	r0, [r9]
   13c30:	cmp	r0, #0
   13c34:	bne	13ab0 <argp_parse@@Base+0xef0>
   13c38:	ldr	r0, [r9, #16]
   13c3c:	cmp	r0, #0
   13c40:	bne	13ab0 <argp_parse@@Base+0xef0>
   13c44:	ldr	r0, [r9, #20]
   13c48:	cmp	r0, #0
   13c4c:	bne	13ab0 <argp_parse@@Base+0xef0>
   13c50:	ldr	r0, [sp, #8]
   13c54:	add	r6, sp, #16
   13c58:	ldr	r7, [r0, #4]
   13c5c:	ldm	r6, {r2, r5, r6}
   13c60:	ldr	r3, [sp, #12]
   13c64:	b	13c7c <argp_parse@@Base+0x10bc>
   13c68:	ldr	r7, [r0, #4]
   13c6c:	cmp	r7, #0
   13c70:	beq	13d2c <argp_parse@@Base+0x116c>
   13c74:	ldr	r1, [fp, #8]
   13c78:	add	r8, r1, #4
   13c7c:	str	r0, [r6, #4]
   13c80:	str	r7, [r6]
   13c84:	mov	r0, #0
   13c88:	cmp	r5, #0
   13c8c:	ldr	r1, [r8]
   13c90:	str	r0, [r6, #12]
   13c94:	str	r3, [r6, #16]
   13c98:	str	r2, [r6, #20]
   13c9c:	str	r0, [r6, #24]
   13ca0:	str	r0, [r6, #32]
   13ca4:	str	r0, [r6, #28]
   13ca8:	str	r1, [r6, #8]
   13cac:	beq	13cdc <argp_parse@@Base+0x111c>
   13cb0:	ldr	r1, [r5, r0, lsl #2]
   13cb4:	add	r0, r0, #4
   13cb8:	cmp	r1, #0
   13cbc:	bne	13cb0 <argp_parse@@Base+0x10f0>
   13cc0:	ldr	r1, [fp, #8]
   13cc4:	mov	r2, r1
   13cc8:	ldr	r1, [r1, #12]
   13ccc:	add	r0, r1, r0
   13cd0:	str	r1, [r6, #28]
   13cd4:	sub	r0, r0, #4
   13cd8:	str	r0, [r2, #12]
   13cdc:	add	r3, r6, #36	; 0x24
   13ce0:	cmp	r5, #0
   13ce4:	ldrne	r0, [r5]
   13ce8:	cmpne	r0, #0
   13cec:	beq	13d20 <argp_parse@@Base+0x1160>
   13cf0:	ldr	r7, [fp, #8]
   13cf4:	add	r4, r5, #16
   13cf8:	mov	r5, #0
   13cfc:	mov	r1, r6
   13d00:	mov	r2, r5
   13d04:	str	r7, [sp]
   13d08:	bl	13a6c <argp_parse@@Base+0xeac>
   13d0c:	mov	r3, r0
   13d10:	ldr	r0, [r4, r5, lsl #4]
   13d14:	add	r5, r5, #1
   13d18:	cmp	r0, #0
   13d1c:	bne	13cfc <argp_parse@@Base+0x113c>
   13d20:	mov	r0, r3
   13d24:	sub	sp, fp, #28
   13d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d2c:	mov	r3, r6
   13d30:	mov	r6, #0
   13d34:	b	13ce0 <argp_parse@@Base+0x1120>
   13d38:	movw	r2, #63700	; 0xf8d4
   13d3c:	movt	r2, #2
   13d40:	str	r0, [r2]
   13d44:	movw	r0, #63696	; 0xf8d0
   13d48:	movw	r2, #15720	; 0x3d68
   13d4c:	movt	r0, #2
   13d50:	movt	r2, #1
   13d54:	str	r2, [r0]
   13d58:	movw	r0, #63704	; 0xf8d8
   13d5c:	movt	r0, #2
   13d60:	str	r1, [r0]
   13d64:	bx	lr
   13d68:	push	{fp, lr}
   13d6c:	mov	fp, sp
   13d70:	sub	sp, sp, #8
   13d74:	movw	r2, #63704	; 0xf8d8
   13d78:	movw	r1, #63700	; 0xf8d4
   13d7c:	movw	r3, #43962	; 0xabba
   13d80:	movt	r2, #2
   13d84:	movt	r1, #2
   13d88:	movt	r3, #1
   13d8c:	ldr	r2, [r2]
   13d90:	ldr	r1, [r1]
   13d94:	str	r2, [sp]
   13d98:	movw	r2, #43948	; 0xabac
   13d9c:	movt	r2, #1
   13da0:	bl	145c4 <_obstack_memory_used@@Base+0x378>
   13da4:	mov	sp, fp
   13da8:	pop	{fp, pc}
   13dac:	sub	r0, r0, #1
   13db0:	ldrb	r3, [r0, #1]!
   13db4:	cmp	r3, #47	; 0x2f
   13db8:	beq	13db0 <argp_parse@@Base+0x11f0>
   13dbc:	mov	r2, #0
   13dc0:	mov	r1, r0
   13dc4:	uxtb	r3, r3
   13dc8:	cmp	r3, #47	; 0x2f
   13dcc:	beq	13de8 <argp_parse@@Base+0x1228>
   13dd0:	cmp	r3, #0
   13dd4:	bxeq	lr
   13dd8:	tst	r2, #1
   13ddc:	mov	r2, #0
   13de0:	movne	r0, r1
   13de4:	b	13dec <argp_parse@@Base+0x122c>
   13de8:	mov	r2, #1
   13dec:	ldrb	r3, [r1, #1]!
   13df0:	b	13dc4 <argp_parse@@Base+0x1204>
   13df4:	push	{r4, sl, fp, lr}
   13df8:	add	fp, sp, #8
   13dfc:	mov	r4, r0
   13e00:	bl	11438 <strlen@plt>
   13e04:	mov	r1, r0
   13e08:	sub	r2, r4, #1
   13e0c:	mov	r0, r1
   13e10:	cmp	r1, #2
   13e14:	popcc	{r4, sl, fp, pc}
   13e18:	ldrb	r3, [r2, r0]
   13e1c:	sub	r1, r0, #1
   13e20:	cmp	r3, #47	; 0x2f
   13e24:	beq	13e0c <argp_parse@@Base+0x124c>
   13e28:	pop	{r4, sl, fp, pc}
   13e2c:	push	{r4, r5, r6, sl, fp, lr}
   13e30:	add	fp, sp, #16
   13e34:	mov	r4, r0
   13e38:	bl	1145c <__errno_location@plt>
   13e3c:	ldr	r6, [r0]
   13e40:	mov	r5, r0
   13e44:	mov	r0, r4
   13e48:	bl	11318 <free@plt>
   13e4c:	str	r6, [r5]
   13e50:	pop	{r4, r5, r6, sl, fp, pc}
   13e54:	push	{fp, lr}
   13e58:	mov	fp, sp
   13e5c:	sub	sp, sp, #16
   13e60:	mov	ip, #0
   13e64:	str	ip, [sp, #8]
   13e68:	str	ip, [sp, #4]
   13e6c:	ldr	ip, [fp, #8]
   13e70:	str	ip, [sp]
   13e74:	bl	187a8 <argp_failure@@Base+0x2858>
   13e78:	mov	sp, fp
   13e7c:	pop	{fp, pc}
   13e80:	push	{fp, lr}
   13e84:	mov	fp, sp
   13e88:	sub	sp, sp, #16
   13e8c:	mov	ip, #0
   13e90:	str	ip, [sp, #12]
   13e94:	str	ip, [sp, #4]
   13e98:	ldr	ip, [fp, #12]
   13e9c:	str	ip, [sp, #8]
   13ea0:	ldr	ip, [fp, #8]
   13ea4:	str	ip, [sp]
   13ea8:	bl	17bb0 <argp_failure@@Base+0x1c60>
   13eac:	mov	sp, fp
   13eb0:	pop	{fp, pc}
   13eb4:	push	{fp, lr}
   13eb8:	mov	fp, sp
   13ebc:	sub	sp, sp, #16
   13ec0:	mov	ip, #0
   13ec4:	str	ip, [sp, #8]
   13ec8:	mov	ip, #1
   13ecc:	str	ip, [sp, #4]
   13ed0:	ldr	ip, [fp, #8]
   13ed4:	str	ip, [sp]
   13ed8:	bl	187a8 <argp_failure@@Base+0x2858>
   13edc:	mov	sp, fp
   13ee0:	pop	{fp, pc}
   13ee4:	push	{fp, lr}
   13ee8:	mov	fp, sp
   13eec:	sub	sp, sp, #16
   13ef0:	mov	ip, #0
   13ef4:	str	ip, [sp, #12]
   13ef8:	mov	ip, #1
   13efc:	str	ip, [sp, #4]
   13f00:	ldr	ip, [fp, #12]
   13f04:	str	ip, [sp, #8]
   13f08:	ldr	ip, [fp, #8]
   13f0c:	str	ip, [sp]
   13f10:	bl	17bb0 <argp_failure@@Base+0x1c60>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}

00013f1c <_obstack_begin@@Base>:
   13f1c:	push	{fp, lr}
   13f20:	mov	fp, sp
   13f24:	str	r3, [r0, #28]
   13f28:	ldr	r3, [fp, #8]
   13f2c:	str	r3, [r0, #32]
   13f30:	ldrb	r3, [r0, #40]	; 0x28
   13f34:	and	r3, r3, #254	; 0xfe
   13f38:	strb	r3, [r0, #40]	; 0x28
   13f3c:	bl	13f48 <_obstack_begin@@Base+0x2c>
   13f40:	mov	r0, #1
   13f44:	pop	{fp, pc}
   13f48:	push	{r4, r5, r6, sl, fp, lr}
   13f4c:	add	fp, sp, #16
   13f50:	cmp	r1, #0
   13f54:	mov	r5, r2
   13f58:	mov	r4, r0
   13f5c:	movweq	r1, #4072	; 0xfe8
   13f60:	cmp	r2, #0
   13f64:	movweq	r5, #8
   13f68:	str	r1, [r0]
   13f6c:	sub	r6, r5, #1
   13f70:	str	r6, [r0, #24]
   13f74:	ldrb	r0, [r0, #40]	; 0x28
   13f78:	tst	r0, #1
   13f7c:	bne	13f90 <_obstack_begin@@Base+0x74>
   13f80:	ldr	r2, [r4, #28]
   13f84:	mov	r0, r1
   13f88:	blx	r2
   13f8c:	b	13f9c <_obstack_begin@@Base+0x80>
   13f90:	ldr	r2, [r4, #28]
   13f94:	ldr	r0, [r4, #36]	; 0x24
   13f98:	blx	r2
   13f9c:	cmp	r0, #0
   13fa0:	str	r0, [r4, #4]
   13fa4:	addne	r1, r6, r0
   13fa8:	rsbne	r2, r5, #0
   13fac:	addne	r1, r1, #8
   13fb0:	andne	r1, r1, r2
   13fb4:	strne	r1, [r4, #12]
   13fb8:	strne	r1, [r4, #8]
   13fbc:	ldrne	r1, [r4]
   13fc0:	addne	r1, r0, r1
   13fc4:	strne	r1, [r0]
   13fc8:	strne	r1, [r4, #16]
   13fcc:	movne	r1, #0
   13fd0:	strne	r1, [r0, #4]
   13fd4:	ldrbne	r0, [r4, #40]	; 0x28
   13fd8:	andne	r0, r0, #249	; 0xf9
   13fdc:	strbne	r0, [r4, #40]	; 0x28
   13fe0:	popne	{r4, r5, r6, sl, fp, pc}
   13fe4:	movw	r0, #63588	; 0xf864
   13fe8:	movt	r0, #2
   13fec:	ldr	r0, [r0]
   13ff0:	blx	r0

00013ff4 <_obstack_begin_1@@Base>:
   13ff4:	push	{fp, lr}
   13ff8:	mov	fp, sp
   13ffc:	str	r3, [r0, #28]
   14000:	ldr	r3, [fp, #8]
   14004:	str	r3, [r0, #32]
   14008:	ldr	r3, [fp, #12]
   1400c:	str	r3, [r0, #36]	; 0x24
   14010:	ldrb	r3, [r0, #40]	; 0x28
   14014:	orr	r3, r3, #1
   14018:	strb	r3, [r0, #40]	; 0x28
   1401c:	bl	13f48 <_obstack_begin@@Base+0x2c>
   14020:	mov	r0, #1
   14024:	pop	{fp, pc}

00014028 <_obstack_newchunk@@Base>:
   14028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1402c:	add	fp, sp, #28
   14030:	sub	sp, sp, #4
   14034:	mov	r4, r0
   14038:	ldr	r2, [r0]
   1403c:	ldr	r0, [r0, #8]
   14040:	ldr	r3, [r4, #12]
   14044:	sub	r9, r3, r0
   14048:	ldr	r0, [r4, #24]
   1404c:	mov	r3, #0
   14050:	add	r1, r9, r1
   14054:	adds	r6, r1, r0
   14058:	adc	r0, r3, #0
   1405c:	mov	r3, #100	; 0x64
   14060:	add	r3, r3, r9, lsr #3
   14064:	adds	r7, r3, r6
   14068:	movcs	r7, r6
   1406c:	cmp	r7, r2
   14070:	movcc	r7, r2
   14074:	cmp	r1, r9
   14078:	bcc	14170 <_obstack_newchunk@@Base+0x148>
   1407c:	cmp	r0, #0
   14080:	bne	14170 <_obstack_newchunk@@Base+0x148>
   14084:	ldrb	r0, [r4, #40]	; 0x28
   14088:	ldr	r8, [r4, #4]
   1408c:	tst	r0, #1
   14090:	bne	140a4 <_obstack_newchunk@@Base+0x7c>
   14094:	ldr	r1, [r4, #28]
   14098:	mov	r0, r7
   1409c:	blx	r1
   140a0:	b	140b4 <_obstack_newchunk@@Base+0x8c>
   140a4:	ldr	r2, [r4, #28]
   140a8:	ldr	r0, [r4, #36]	; 0x24
   140ac:	mov	r1, r7
   140b0:	blx	r2
   140b4:	mov	r6, r0
   140b8:	cmp	r0, #0
   140bc:	beq	14170 <_obstack_newchunk@@Base+0x148>
   140c0:	add	r0, r6, r7
   140c4:	str	r6, [r4, #4]
   140c8:	str	r8, [r6, #4]
   140cc:	mov	r2, r9
   140d0:	str	r0, [r4, #16]
   140d4:	str	r0, [r6]
   140d8:	ldr	r5, [r4, #24]
   140dc:	ldr	sl, [r4, #8]
   140e0:	add	r0, r5, r6
   140e4:	mov	r1, sl
   140e8:	add	r0, r0, #8
   140ec:	bic	r7, r0, r5
   140f0:	mov	r0, r7
   140f4:	bl	11354 <memcpy@plt>
   140f8:	ldrb	r0, [r4, #40]	; 0x28
   140fc:	tst	r0, #2
   14100:	bne	14150 <_obstack_newchunk@@Base+0x128>
   14104:	add	r1, r5, r8
   14108:	mvn	r0, r5
   1410c:	add	r1, r1, #8
   14110:	and	r0, r1, r0
   14114:	cmp	sl, r0
   14118:	bne	14150 <_obstack_newchunk@@Base+0x128>
   1411c:	ldr	r0, [r8, #4]
   14120:	str	r0, [r6, #4]
   14124:	ldrb	r0, [r4, #40]	; 0x28
   14128:	tst	r0, #1
   1412c:	bne	14140 <_obstack_newchunk@@Base+0x118>
   14130:	ldr	r1, [r4, #32]
   14134:	mov	r0, r8
   14138:	blx	r1
   1413c:	b	14150 <_obstack_newchunk@@Base+0x128>
   14140:	ldr	r2, [r4, #32]
   14144:	ldr	r0, [r4, #36]	; 0x24
   14148:	mov	r1, r8
   1414c:	blx	r2
   14150:	add	r0, r7, r9
   14154:	str	r7, [r4, #8]
   14158:	str	r0, [r4, #12]
   1415c:	ldrb	r0, [r4, #40]	; 0x28
   14160:	and	r0, r0, #253	; 0xfd
   14164:	strb	r0, [r4, #40]	; 0x28
   14168:	sub	sp, fp, #28
   1416c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14170:	movw	r0, #63588	; 0xf864
   14174:	movt	r0, #2
   14178:	ldr	r0, [r0]
   1417c:	blx	r0

00014180 <_obstack_allocated_p@@Base>:
   14180:	ldr	r2, [r0, #4]
   14184:	mov	r0, #0
   14188:	b	14190 <_obstack_allocated_p@@Base+0x10>
   1418c:	ldr	r2, [r2, #4]
   14190:	cmp	r2, #0
   14194:	bxeq	lr
   14198:	cmp	r2, r1
   1419c:	bcs	1418c <_obstack_allocated_p@@Base+0xc>
   141a0:	ldr	r3, [r2]
   141a4:	cmp	r3, r1
   141a8:	bcc	1418c <_obstack_allocated_p@@Base+0xc>
   141ac:	mov	r0, #1
   141b0:	bx	lr

000141b4 <_obstack_free@@Base>:
   141b4:	push	{r4, r5, r6, sl, fp, lr}
   141b8:	add	fp, sp, #16
   141bc:	mov	r5, r1
   141c0:	ldr	r1, [r0, #4]
   141c4:	cmp	r1, #0
   141c8:	beq	14228 <_obstack_free@@Base+0x74>
   141cc:	mov	r4, r0
   141d0:	cmp	r1, r5
   141d4:	bcs	141e4 <_obstack_free@@Base+0x30>
   141d8:	ldr	r0, [r1]
   141dc:	cmp	r0, r5
   141e0:	bcs	14234 <_obstack_free@@Base+0x80>
   141e4:	ldrb	r0, [r4, #40]	; 0x28
   141e8:	ldr	r6, [r1, #4]
   141ec:	tst	r0, #1
   141f0:	bne	14204 <_obstack_free@@Base+0x50>
   141f4:	ldr	r2, [r4, #32]
   141f8:	mov	r0, r1
   141fc:	blx	r2
   14200:	b	14210 <_obstack_free@@Base+0x5c>
   14204:	ldr	r2, [r4, #32]
   14208:	ldr	r0, [r4, #36]	; 0x24
   1420c:	blx	r2
   14210:	ldrb	r0, [r4, #40]	; 0x28
   14214:	cmp	r6, #0
   14218:	mov	r1, r6
   1421c:	orr	r0, r0, #2
   14220:	strb	r0, [r4, #40]	; 0x28
   14224:	bne	141d0 <_obstack_free@@Base+0x1c>
   14228:	cmp	r5, #0
   1422c:	popeq	{r4, r5, r6, sl, fp, pc}
   14230:	bl	11564 <abort@plt>
   14234:	str	r5, [r4, #8]
   14238:	str	r5, [r4, #12]
   1423c:	ldr	r0, [r1]
   14240:	str	r1, [r4, #4]
   14244:	str	r0, [r4, #16]
   14248:	pop	{r4, r5, r6, sl, fp, pc}

0001424c <_obstack_memory_used@@Base>:
   1424c:	ldr	r1, [r0, #4]
   14250:	mov	r0, #0
   14254:	cmp	r1, #0
   14258:	bxeq	lr
   1425c:	ldr	r2, [r1]
   14260:	sub	r0, r0, r1
   14264:	ldr	r1, [r1, #4]
   14268:	add	r0, r0, r2
   1426c:	b	14254 <_obstack_memory_used@@Base+0x8>
   14270:	push	{fp, lr}
   14274:	mov	fp, sp
   14278:	movw	r0, #63664	; 0xf8b0
   1427c:	movw	r1, #44068	; 0xac24
   14280:	movw	r2, #43975	; 0xabc7
   14284:	movt	r0, #2
   14288:	movt	r1, #1
   1428c:	movt	r2, #1
   14290:	ldr	r0, [r0]
   14294:	bl	11450 <fprintf@plt>
   14298:	movw	r0, #63632	; 0xf890
   1429c:	movt	r0, #2
   142a0:	ldr	r0, [r0]
   142a4:	bl	1142c <exit@plt>
   142a8:	push	{r4, r5, fp, lr}
   142ac:	add	fp, sp, #8
   142b0:	cmp	r0, #0
   142b4:	beq	14348 <_obstack_memory_used@@Base+0xfc>
   142b8:	mov	r1, #47	; 0x2f
   142bc:	mov	r4, r0
   142c0:	bl	114a4 <strrchr@plt>
   142c4:	cmp	r0, #0
   142c8:	mov	r5, r4
   142cc:	addne	r5, r0, #1
   142d0:	sub	r0, r5, r4
   142d4:	cmp	r0, #7
   142d8:	blt	1432c <_obstack_memory_used@@Base+0xe0>
   142dc:	movw	r1, #44048	; 0xac10
   142e0:	sub	r0, r5, #7
   142e4:	mov	r2, #7
   142e8:	movt	r1, #1
   142ec:	bl	11558 <strncmp@plt>
   142f0:	cmp	r0, #0
   142f4:	bne	1432c <_obstack_memory_used@@Base+0xe0>
   142f8:	movw	r1, #44056	; 0xac18
   142fc:	mov	r0, r5
   14300:	mov	r2, #3
   14304:	movt	r1, #1
   14308:	bl	11558 <strncmp@plt>
   1430c:	cmp	r0, #0
   14310:	beq	1431c <_obstack_memory_used@@Base+0xd0>
   14314:	mov	r4, r5
   14318:	b	1432c <_obstack_memory_used@@Base+0xe0>
   1431c:	movw	r0, #63656	; 0xf8a8
   14320:	add	r4, r5, #3
   14324:	movt	r0, #2
   14328:	str	r4, [r0]
   1432c:	movw	r0, #63660	; 0xf8ac
   14330:	movt	r0, #2
   14334:	str	r4, [r0]
   14338:	movw	r0, #63708	; 0xf8dc
   1433c:	movt	r0, #2
   14340:	str	r4, [r0]
   14344:	pop	{r4, r5, fp, pc}
   14348:	movw	r0, #63664	; 0xf8b0
   1434c:	movt	r0, #2
   14350:	ldr	r1, [r0]
   14354:	movw	r0, #43992	; 0xabd8
   14358:	movt	r0, #1
   1435c:	bl	1154c <fputs@plt>
   14360:	bl	11564 <abort@plt>
   14364:	push	{r4, r5, r6, r7, fp, lr}
   14368:	add	fp, sp, #16
   1436c:	sub	sp, sp, #32
   14370:	ldr	r7, [fp, #12]
   14374:	ldr	r6, [fp, #8]
   14378:	mov	r4, r2
   1437c:	mov	r5, r0
   14380:	cmp	r1, #0
   14384:	beq	143a4 <_obstack_memory_used@@Base+0x158>
   14388:	mov	r2, r1
   1438c:	movw	r1, #44060	; 0xac1c
   14390:	str	r3, [sp]
   14394:	mov	r0, r5
   14398:	mov	r3, r4
   1439c:	movt	r1, #1
   143a0:	b	143b4 <_obstack_memory_used@@Base+0x168>
   143a4:	movw	r1, #44072	; 0xac28
   143a8:	mov	r0, r5
   143ac:	mov	r2, r4
   143b0:	movt	r1, #1
   143b4:	bl	11450 <fprintf@plt>
   143b8:	movw	r1, #44836	; 0xaf24
   143bc:	movw	r2, #44079	; 0xac2f
   143c0:	mov	r0, r5
   143c4:	movw	r3, #2022	; 0x7e6
   143c8:	movt	r1, #1
   143cc:	movt	r2, #1
   143d0:	bl	11450 <fprintf@plt>
   143d4:	movw	r4, #41747	; 0xa313
   143d8:	mov	r1, r5
   143dc:	movt	r4, #1
   143e0:	mov	r0, r4
   143e4:	bl	1154c <fputs@plt>
   143e8:	movw	r1, #44083	; 0xac33
   143ec:	movw	r2, #44254	; 0xacde
   143f0:	mov	r0, r5
   143f4:	movt	r1, #1
   143f8:	movt	r2, #1
   143fc:	bl	11450 <fprintf@plt>
   14400:	mov	r0, r4
   14404:	mov	r1, r5
   14408:	bl	1154c <fputs@plt>
   1440c:	cmp	r7, #9
   14410:	bhi	14460 <_obstack_memory_used@@Base+0x214>
   14414:	add	r0, pc, #0
   14418:	ldr	pc, [r0, r7, lsl #2]
   1441c:			; <UNDEFINED> instruction: 0x000145bc
   14420:	andeq	r4, r1, r4, asr #8
   14424:	muleq	r1, r4, r4
   14428:			; <UNDEFINED> instruction: 0x000144b0
   1442c:	andeq	r4, r1, r8, asr #9
   14430:	andeq	r4, r1, r4, ror #9
   14434:	andeq	r4, r1, r0, lsl #10
   14438:	andeq	r4, r1, r4, lsr #10
   1443c:	andeq	r4, r1, r4, lsl #11
   14440:	andeq	r4, r1, r0, asr r5
   14444:	ldr	r2, [r6]
   14448:	movw	r1, #44288	; 0xad00
   1444c:	mov	r0, r5
   14450:	movt	r1, #1
   14454:	sub	sp, fp, #16
   14458:	pop	{r4, r5, r6, r7, fp, lr}
   1445c:	b	11450 <fprintf@plt>
   14460:	add	r7, r6, #8
   14464:	ldm	r6, {r2, r3}
   14468:	add	lr, r6, #20
   1446c:	ldm	r7, {r0, r1, r7}
   14470:	ldm	lr, {r4, ip, lr}
   14474:	ldr	r6, [r6, #32]
   14478:	stm	sp, {r0, r1, r7}
   1447c:	movw	r1, #44607	; 0xae3f
   14480:	add	r0, sp, #12
   14484:	stm	r0, {r4, ip, lr}
   14488:	str	r6, [sp, #24]
   1448c:	movt	r1, #1
   14490:	b	145b4 <_obstack_memory_used@@Base+0x368>
   14494:	ldm	r6, {r2, r3}
   14498:	movw	r1, #44304	; 0xad10
   1449c:	mov	r0, r5
   144a0:	movt	r1, #1
   144a4:	sub	sp, fp, #16
   144a8:	pop	{r4, r5, r6, r7, fp, lr}
   144ac:	b	11450 <fprintf@plt>
   144b0:	ldm	r6, {r2, r3}
   144b4:	ldr	r0, [r6, #8]
   144b8:	movw	r1, #44327	; 0xad27
   144bc:	movt	r1, #1
   144c0:	str	r0, [sp]
   144c4:	b	145b4 <_obstack_memory_used@@Base+0x368>
   144c8:	ldm	r6, {r2, r3}
   144cc:	ldr	r0, [r6, #8]
   144d0:	ldr	r1, [r6, #12]
   144d4:	stm	sp, {r0, r1}
   144d8:	movw	r1, #44355	; 0xad43
   144dc:	movt	r1, #1
   144e0:	b	145b4 <_obstack_memory_used@@Base+0x368>
   144e4:	add	r7, r6, #8
   144e8:	ldm	r6, {r2, r3}
   144ec:	ldm	r7, {r0, r1, r7}
   144f0:	stm	sp, {r0, r1, r7}
   144f4:	movw	r1, #44387	; 0xad63
   144f8:	movt	r1, #1
   144fc:	b	145b4 <_obstack_memory_used@@Base+0x368>
   14500:	add	r7, r6, #8
   14504:	ldm	r6, {r2, r3}
   14508:	ldm	r7, {r0, r1, r7}
   1450c:	ldr	r6, [r6, #20]
   14510:	stm	sp, {r0, r1, r7}
   14514:	movw	r1, #44423	; 0xad87
   14518:	str	r6, [sp, #12]
   1451c:	movt	r1, #1
   14520:	b	145b4 <_obstack_memory_used@@Base+0x368>
   14524:	add	r7, r6, #8
   14528:	ldm	r6, {r2, r3}
   1452c:	ldm	r7, {r0, r1, r7}
   14530:	ldr	r4, [r6, #20]
   14534:	ldr	r6, [r6, #24]
   14538:	stm	sp, {r0, r1, r7}
   1453c:	movw	r1, #44463	; 0xadaf
   14540:	str	r4, [sp, #12]
   14544:	str	r6, [sp, #16]
   14548:	movt	r1, #1
   1454c:	b	145b4 <_obstack_memory_used@@Base+0x368>
   14550:	add	r7, r6, #8
   14554:	ldm	r6, {r2, r3}
   14558:	add	lr, r6, #20
   1455c:	ldm	r7, {r0, r1, r7}
   14560:	ldm	lr, {r4, ip, lr}
   14564:	ldr	r6, [r6, #32]
   14568:	stm	sp, {r0, r1, r7}
   1456c:	movw	r1, #44555	; 0xae0b
   14570:	add	r0, sp, #12
   14574:	stm	r0, {r4, ip, lr}
   14578:	str	r6, [sp, #24]
   1457c:	movt	r1, #1
   14580:	b	145b4 <_obstack_memory_used@@Base+0x368>
   14584:	add	r7, r6, #8
   14588:	ldm	r6, {r2, r3}
   1458c:	ldm	r7, {r0, r1, r7}
   14590:	ldr	r4, [r6, #20]
   14594:	ldr	ip, [r6, #24]
   14598:	ldr	r6, [r6, #28]
   1459c:	stm	sp, {r0, r1, r7}
   145a0:	movw	r1, #44507	; 0xaddb
   145a4:	str	r4, [sp, #12]
   145a8:	str	ip, [sp, #16]
   145ac:	str	r6, [sp, #20]
   145b0:	movt	r1, #1
   145b4:	mov	r0, r5
   145b8:	bl	11450 <fprintf@plt>
   145bc:	sub	sp, fp, #16
   145c0:	pop	{r4, r5, r6, r7, fp, pc}
   145c4:	push	{r4, sl, fp, lr}
   145c8:	add	fp, sp, #8
   145cc:	sub	sp, sp, #8
   145d0:	ldr	ip, [fp, #8]
   145d4:	mov	lr, #0
   145d8:	ldr	r4, [ip, lr, lsl #2]
   145dc:	add	lr, lr, #1
   145e0:	cmp	r4, #0
   145e4:	bne	145d8 <_obstack_memory_used@@Base+0x38c>
   145e8:	sub	r4, lr, #1
   145ec:	str	ip, [sp]
   145f0:	str	r4, [sp, #4]
   145f4:	bl	14364 <_obstack_memory_used@@Base+0x118>
   145f8:	sub	sp, fp, #8
   145fc:	pop	{r4, sl, fp, pc}
   14600:	push	{r4, r5, fp, lr}
   14604:	add	fp, sp, #8
   14608:	sub	sp, sp, #48	; 0x30
   1460c:	ldr	r4, [fp, #8]
   14610:	mov	ip, #0
   14614:	add	lr, sp, #8
   14618:	ldr	r5, [r4]
   1461c:	cmp	r5, #0
   14620:	str	r5, [lr, ip, lsl #2]
   14624:	beq	14638 <_obstack_memory_used@@Base+0x3ec>
   14628:	add	ip, ip, #1
   1462c:	add	r4, r4, #4
   14630:	cmp	ip, #10
   14634:	bcc	14618 <_obstack_memory_used@@Base+0x3cc>
   14638:	str	lr, [sp]
   1463c:	str	ip, [sp, #4]
   14640:	bl	14364 <_obstack_memory_used@@Base+0x118>
   14644:	sub	sp, fp, #8
   14648:	pop	{r4, r5, fp, pc}
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	sub	sp, sp, #8
   14658:	add	ip, fp, #8
   1465c:	str	ip, [sp, #4]
   14660:	str	ip, [sp]
   14664:	bl	14600 <_obstack_memory_used@@Base+0x3b4>
   14668:	mov	sp, fp
   1466c:	pop	{fp, pc}
   14670:	push	{fp, lr}
   14674:	mov	fp, sp
   14678:	movw	r0, #63668	; 0xf8b4
   1467c:	movt	r0, #2
   14680:	ldr	r1, [r0]
   14684:	movw	r0, #41747	; 0xa313
   14688:	movt	r0, #1
   1468c:	bl	1154c <fputs@plt>
   14690:	movw	r0, #44667	; 0xae7b
   14694:	movw	r1, #44687	; 0xae8f
   14698:	movt	r0, #1
   1469c:	movt	r1, #1
   146a0:	bl	112f4 <printf@plt>
   146a4:	movw	r0, #44709	; 0xaea5
   146a8:	movw	r1, #43948	; 0xabac
   146ac:	movw	r2, #44729	; 0xaeb9
   146b0:	movt	r0, #1
   146b4:	movt	r1, #1
   146b8:	movt	r2, #1
   146bc:	bl	112f4 <printf@plt>
   146c0:	movw	r0, #44768	; 0xaee0
   146c4:	movw	r1, #44807	; 0xaf07
   146c8:	movt	r0, #1
   146cc:	movt	r1, #1
   146d0:	pop	{fp, lr}
   146d4:	b	112f4 <printf@plt>
   146d8:	b	146dc <_obstack_memory_used@@Base+0x490>
   146dc:	push	{r4, r5, r6, sl, fp, lr}
   146e0:	add	fp, sp, #16
   146e4:	mov	r4, r2
   146e8:	mov	r5, r1
   146ec:	mov	r6, r0
   146f0:	bl	188a4 <argp_failure@@Base+0x2954>
   146f4:	cmp	r0, #0
   146f8:	popne	{r4, r5, r6, sl, fp, pc}
   146fc:	cmp	r6, #0
   14700:	beq	14714 <_obstack_memory_used@@Base+0x4c8>
   14704:	cmp	r5, #0
   14708:	cmpne	r4, #0
   1470c:	bne	14714 <_obstack_memory_used@@Base+0x4c8>
   14710:	pop	{r4, r5, r6, sl, fp, pc}
   14714:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14718:	push	{fp, lr}
   1471c:	mov	fp, sp
   14720:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14724:	cmp	r0, #0
   14728:	popne	{fp, pc}
   1472c:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14730:	push	{fp, lr}
   14734:	mov	fp, sp
   14738:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   1473c:	cmp	r0, #0
   14740:	popne	{fp, pc}
   14744:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14748:	push	{fp, lr}
   1474c:	mov	fp, sp
   14750:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14754:	cmp	r0, #0
   14758:	popne	{fp, pc}
   1475c:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14760:	push	{r4, r5, fp, lr}
   14764:	add	fp, sp, #8
   14768:	mov	r4, r1
   1476c:	mov	r5, r0
   14770:	bl	14c1c <_obstack_memory_used@@Base+0x9d0>
   14774:	cmp	r0, #0
   14778:	popne	{r4, r5, fp, pc}
   1477c:	cmp	r5, #0
   14780:	beq	14790 <_obstack_memory_used@@Base+0x544>
   14784:	cmp	r4, #0
   14788:	bne	14790 <_obstack_memory_used@@Base+0x544>
   1478c:	pop	{r4, r5, fp, pc}
   14790:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14794:	push	{fp, lr}
   14798:	mov	fp, sp
   1479c:	cmp	r1, #0
   147a0:	orreq	r1, r1, #1
   147a4:	bl	14c1c <_obstack_memory_used@@Base+0x9d0>
   147a8:	cmp	r0, #0
   147ac:	popne	{fp, pc}
   147b0:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   147b4:	push	{fp, lr}
   147b8:	mov	fp, sp
   147bc:	clz	r3, r2
   147c0:	lsr	ip, r3, #5
   147c4:	clz	r3, r1
   147c8:	lsr	r3, r3, #5
   147cc:	orrs	r3, r3, ip
   147d0:	movwne	r1, #1
   147d4:	movwne	r2, #1
   147d8:	bl	188a4 <argp_failure@@Base+0x2954>
   147dc:	cmp	r0, #0
   147e0:	popne	{fp, pc}
   147e4:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   147e8:	push	{fp, lr}
   147ec:	mov	fp, sp
   147f0:	mov	r2, r1
   147f4:	mov	r1, r0
   147f8:	mov	r0, #0
   147fc:	bl	188a4 <argp_failure@@Base+0x2954>
   14800:	cmp	r0, #0
   14804:	popne	{fp, pc}
   14808:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   1480c:	mov	r2, r1
   14810:	mov	r1, r0
   14814:	mov	r0, #0
   14818:	b	147b4 <_obstack_memory_used@@Base+0x568>
   1481c:	mov	r2, #1
   14820:	b	14824 <_obstack_memory_used@@Base+0x5d8>
   14824:	push	{r4, r5, fp, lr}
   14828:	add	fp, sp, #8
   1482c:	ldr	r5, [r1]
   14830:	mov	r4, r1
   14834:	cmp	r0, #0
   14838:	beq	14850 <_obstack_memory_used@@Base+0x604>
   1483c:	mov	r1, #1
   14840:	add	r1, r1, r5, lsr #1
   14844:	adds	r5, r5, r1
   14848:	bcc	14868 <_obstack_memory_used@@Base+0x61c>
   1484c:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14850:	cmp	r5, #0
   14854:	bne	14868 <_obstack_memory_used@@Base+0x61c>
   14858:	mov	r1, #64	; 0x40
   1485c:	cmp	r2, #64	; 0x40
   14860:	udiv	r5, r1, r2
   14864:	addhi	r5, r5, #1
   14868:	mov	r1, r5
   1486c:	bl	146dc <_obstack_memory_used@@Base+0x490>
   14870:	str	r5, [r4]
   14874:	pop	{r4, r5, fp, pc}
   14878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1487c:	add	fp, sp, #24
   14880:	ldr	r6, [r1]
   14884:	mov	r8, r1
   14888:	ldr	r4, [fp, #8]
   1488c:	add	r1, r6, r6, asr #1
   14890:	cmp	r1, r6
   14894:	mvnvs	r1, #-2147483648	; 0x80000000
   14898:	cmp	r1, r3
   1489c:	mov	r5, r1
   148a0:	movgt	r5, r3
   148a4:	cmn	r3, #1
   148a8:	movle	r5, r1
   148ac:	cmn	r4, #1
   148b0:	ble	148d0 <_obstack_memory_used@@Base+0x684>
   148b4:	cmp	r4, #0
   148b8:	beq	14924 <_obstack_memory_used@@Base+0x6d8>
   148bc:	cmn	r5, #1
   148c0:	ble	148f8 <_obstack_memory_used@@Base+0x6ac>
   148c4:	mvn	r7, #-2147483648	; 0x80000000
   148c8:	udiv	r1, r7, r4
   148cc:	b	148ec <_obstack_memory_used@@Base+0x6a0>
   148d0:	cmn	r5, #1
   148d4:	ble	14914 <_obstack_memory_used@@Base+0x6c8>
   148d8:	cmn	r4, #1
   148dc:	beq	14924 <_obstack_memory_used@@Base+0x6d8>
   148e0:	mov	r1, #-2147483648	; 0x80000000
   148e4:	mvn	r7, #-2147483648	; 0x80000000
   148e8:	sdiv	r1, r1, r4
   148ec:	cmp	r1, r5
   148f0:	bge	14924 <_obstack_memory_used@@Base+0x6d8>
   148f4:	b	14934 <_obstack_memory_used@@Base+0x6e8>
   148f8:	beq	14924 <_obstack_memory_used@@Base+0x6d8>
   148fc:	mov	r1, #-2147483648	; 0x80000000
   14900:	mvn	r7, #-2147483648	; 0x80000000
   14904:	sdiv	r1, r1, r5
   14908:	cmp	r1, r4
   1490c:	bge	14924 <_obstack_memory_used@@Base+0x6d8>
   14910:	b	14934 <_obstack_memory_used@@Base+0x6e8>
   14914:	mvn	r7, #-2147483648	; 0x80000000
   14918:	sdiv	r1, r7, r4
   1491c:	cmp	r5, r1
   14920:	blt	14934 <_obstack_memory_used@@Base+0x6e8>
   14924:	mul	r1, r5, r4
   14928:	mov	r7, #64	; 0x40
   1492c:	cmp	r1, #63	; 0x3f
   14930:	bgt	1493c <_obstack_memory_used@@Base+0x6f0>
   14934:	sdiv	r5, r7, r4
   14938:	mul	r1, r5, r4
   1493c:	cmp	r0, #0
   14940:	moveq	r7, #0
   14944:	streq	r7, [r8]
   14948:	sub	r7, r5, r6
   1494c:	cmp	r7, r2
   14950:	bge	149f4 <_obstack_memory_used@@Base+0x7a8>
   14954:	add	r5, r6, r2
   14958:	mov	r2, #0
   1495c:	mov	r1, #0
   14960:	cmp	r5, r3
   14964:	movwgt	r2, #1
   14968:	cmn	r3, #1
   1496c:	movwgt	r1, #1
   14970:	cmp	r5, r6
   14974:	bvs	149dc <_obstack_memory_used@@Base+0x790>
   14978:	ands	r1, r1, r2
   1497c:	bne	149dc <_obstack_memory_used@@Base+0x790>
   14980:	cmn	r4, #1
   14984:	ble	149a4 <_obstack_memory_used@@Base+0x758>
   14988:	cmp	r4, #0
   1498c:	beq	149f0 <_obstack_memory_used@@Base+0x7a4>
   14990:	cmn	r5, #1
   14994:	ble	149c8 <_obstack_memory_used@@Base+0x77c>
   14998:	mvn	r1, #-2147483648	; 0x80000000
   1499c:	udiv	r1, r1, r4
   149a0:	b	149bc <_obstack_memory_used@@Base+0x770>
   149a4:	cmn	r5, #1
   149a8:	ble	149e0 <_obstack_memory_used@@Base+0x794>
   149ac:	cmn	r4, #1
   149b0:	beq	149f0 <_obstack_memory_used@@Base+0x7a4>
   149b4:	mov	r1, #-2147483648	; 0x80000000
   149b8:	sdiv	r1, r1, r4
   149bc:	cmp	r1, r5
   149c0:	bge	149f0 <_obstack_memory_used@@Base+0x7a4>
   149c4:	b	149dc <_obstack_memory_used@@Base+0x790>
   149c8:	beq	149f0 <_obstack_memory_used@@Base+0x7a4>
   149cc:	mov	r1, #-2147483648	; 0x80000000
   149d0:	sdiv	r1, r1, r5
   149d4:	cmp	r1, r4
   149d8:	bge	149f0 <_obstack_memory_used@@Base+0x7a4>
   149dc:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   149e0:	mvn	r1, #-2147483648	; 0x80000000
   149e4:	sdiv	r1, r1, r4
   149e8:	cmp	r5, r1
   149ec:	blt	149dc <_obstack_memory_used@@Base+0x790>
   149f0:	mul	r1, r5, r4
   149f4:	bl	14760 <_obstack_memory_used@@Base+0x514>
   149f8:	str	r5, [r8]
   149fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a00:	push	{fp, lr}
   14a04:	mov	fp, sp
   14a08:	mov	r1, #1
   14a0c:	bl	14b98 <_obstack_memory_used@@Base+0x94c>
   14a10:	cmp	r0, #0
   14a14:	popne	{fp, pc}
   14a18:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14a1c:	push	{fp, lr}
   14a20:	mov	fp, sp
   14a24:	bl	14b98 <_obstack_memory_used@@Base+0x94c>
   14a28:	cmp	r0, #0
   14a2c:	popne	{fp, pc}
   14a30:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14a34:	push	{fp, lr}
   14a38:	mov	fp, sp
   14a3c:	mov	r1, #1
   14a40:	bl	14b98 <_obstack_memory_used@@Base+0x94c>
   14a44:	cmp	r0, #0
   14a48:	popne	{fp, pc}
   14a4c:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14a50:	push	{fp, lr}
   14a54:	mov	fp, sp
   14a58:	bl	14b98 <_obstack_memory_used@@Base+0x94c>
   14a5c:	cmp	r0, #0
   14a60:	popne	{fp, pc}
   14a64:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14a68:	push	{r4, r5, r6, sl, fp, lr}
   14a6c:	add	fp, sp, #16
   14a70:	mov	r5, r0
   14a74:	mov	r0, r1
   14a78:	mov	r4, r1
   14a7c:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14a80:	cmp	r0, #0
   14a84:	beq	14aa0 <_obstack_memory_used@@Base+0x854>
   14a88:	mov	r1, r5
   14a8c:	mov	r2, r4
   14a90:	mov	r6, r0
   14a94:	bl	11354 <memcpy@plt>
   14a98:	mov	r0, r6
   14a9c:	pop	{r4, r5, r6, sl, fp, pc}
   14aa0:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14aa4:	push	{r4, r5, r6, sl, fp, lr}
   14aa8:	add	fp, sp, #16
   14aac:	mov	r5, r0
   14ab0:	mov	r0, r1
   14ab4:	mov	r4, r1
   14ab8:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14abc:	cmp	r0, #0
   14ac0:	beq	14adc <_obstack_memory_used@@Base+0x890>
   14ac4:	mov	r1, r5
   14ac8:	mov	r2, r4
   14acc:	mov	r6, r0
   14ad0:	bl	11354 <memcpy@plt>
   14ad4:	mov	r0, r6
   14ad8:	pop	{r4, r5, r6, sl, fp, pc}
   14adc:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14ae0:	push	{r4, r5, r6, sl, fp, lr}
   14ae4:	add	fp, sp, #16
   14ae8:	mov	r5, r0
   14aec:	add	r0, r1, #1
   14af0:	mov	r4, r1
   14af4:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14af8:	cmp	r0, #0
   14afc:	beq	14b24 <_obstack_memory_used@@Base+0x8d8>
   14b00:	mov	r6, r0
   14b04:	mov	r0, #0
   14b08:	mov	r1, r5
   14b0c:	mov	r2, r4
   14b10:	strb	r0, [r6, r4]
   14b14:	mov	r0, r6
   14b18:	bl	11354 <memcpy@plt>
   14b1c:	mov	r0, r6
   14b20:	pop	{r4, r5, r6, sl, fp, pc}
   14b24:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14b28:	push	{r4, r5, r6, sl, fp, lr}
   14b2c:	add	fp, sp, #16
   14b30:	mov	r4, r0
   14b34:	bl	11438 <strlen@plt>
   14b38:	add	r5, r0, #1
   14b3c:	mov	r0, r5
   14b40:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   14b44:	cmp	r0, #0
   14b48:	beq	14b64 <_obstack_memory_used@@Base+0x918>
   14b4c:	mov	r1, r4
   14b50:	mov	r2, r5
   14b54:	mov	r6, r0
   14b58:	bl	11354 <memcpy@plt>
   14b5c:	mov	r0, r6
   14b60:	pop	{r4, r5, r6, sl, fp, pc}
   14b64:	bl	14b68 <_obstack_memory_used@@Base+0x91c>
   14b68:	push	{fp, lr}
   14b6c:	mov	fp, sp
   14b70:	movw	r0, #63632	; 0xf890
   14b74:	movw	r2, #45124	; 0xb044
   14b78:	movw	r3, #43975	; 0xabc7
   14b7c:	mov	r1, #0
   14b80:	movt	r0, #2
   14b84:	movt	r2, #1
   14b88:	movt	r3, #1
   14b8c:	ldr	r0, [r0]
   14b90:	bl	113c0 <error@plt>
   14b94:	bl	11564 <abort@plt>
   14b98:	clz	r2, r1
   14b9c:	clz	r3, r0
   14ba0:	lsr	r2, r2, #5
   14ba4:	lsr	r3, r3, #5
   14ba8:	orrs	r2, r3, r2
   14bac:	movwne	r1, #1
   14bb0:	movwne	r0, #1
   14bb4:	cmp	r1, #0
   14bb8:	beq	14be8 <_obstack_memory_used@@Base+0x99c>
   14bbc:	mvn	r2, #-2147483648	; 0x80000000
   14bc0:	udiv	r2, r2, r1
   14bc4:	cmp	r2, r0
   14bc8:	bcs	14be8 <_obstack_memory_used@@Base+0x99c>
   14bcc:	push	{fp, lr}
   14bd0:	mov	fp, sp
   14bd4:	bl	1145c <__errno_location@plt>
   14bd8:	mov	r1, #12
   14bdc:	str	r1, [r0]
   14be0:	mov	r0, #0
   14be4:	pop	{fp, pc}
   14be8:	b	112c4 <calloc@plt>
   14bec:	cmp	r0, #0
   14bf0:	movweq	r0, #1
   14bf4:	cmn	r0, #1
   14bf8:	ble	14c00 <_obstack_memory_used@@Base+0x9b4>
   14bfc:	b	113e4 <malloc@plt>
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	bl	1145c <__errno_location@plt>
   14c0c:	mov	r1, #12
   14c10:	str	r1, [r0]
   14c14:	mov	r0, #0
   14c18:	pop	{fp, pc}
   14c1c:	push	{fp, lr}
   14c20:	mov	fp, sp
   14c24:	cmp	r0, #0
   14c28:	beq	14c44 <_obstack_memory_used@@Base+0x9f8>
   14c2c:	cmp	r1, #0
   14c30:	beq	14c50 <_obstack_memory_used@@Base+0xa04>
   14c34:	cmn	r1, #1
   14c38:	ble	14c58 <_obstack_memory_used@@Base+0xa0c>
   14c3c:	pop	{fp, lr}
   14c40:	b	11384 <realloc@plt>
   14c44:	mov	r0, r1
   14c48:	pop	{fp, lr}
   14c4c:	b	14bec <_obstack_memory_used@@Base+0x9a0>
   14c50:	bl	13e2c <argp_parse@@Base+0x126c>
   14c54:	b	14c64 <_obstack_memory_used@@Base+0xa18>
   14c58:	bl	1145c <__errno_location@plt>
   14c5c:	mov	r1, #12
   14c60:	str	r1, [r0]
   14c64:	mov	r0, #0
   14c68:	pop	{fp, pc}

00014c6c <argp_help@@Base>:
   14c6c:	push	{fp, lr}
   14c70:	mov	fp, sp
   14c74:	sub	sp, sp, #8
   14c78:	mov	ip, r2
   14c7c:	mov	r2, r1
   14c80:	str	r3, [sp]
   14c84:	mov	r1, #0
   14c88:	mov	r3, ip
   14c8c:	bl	14c98 <argp_help@@Base+0x2c>
   14c90:	mov	sp, fp
   14c94:	pop	{fp, pc}
   14c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c9c:	add	fp, sp, #28
   14ca0:	sub	sp, sp, #108	; 0x6c
   14ca4:	cmp	r2, #0
   14ca8:	str	r0, [fp, #-112]	; 0xffffff90
   14cac:	beq	15c20 <argp_help@@Base+0xfb4>
   14cb0:	ldr	r0, [fp, #8]
   14cb4:	mov	r6, r3
   14cb8:	mov	r7, r2
   14cbc:	mov	r9, r1
   14cc0:	str	r0, [fp, #-92]	; 0xffffffa4
   14cc4:	mov	r0, r2
   14cc8:	bl	114e0 <flockfile@plt>
   14ccc:	movw	sl, #63592	; 0xf868
   14cd0:	str	r9, [fp, #-100]	; 0xffffff9c
   14cd4:	str	r7, [fp, #-132]	; 0xffffff7c
   14cd8:	movt	sl, #2
   14cdc:	ldr	r0, [sl, #36]	; 0x24
   14ce0:	cmp	r0, #0
   14ce4:	bne	15010 <argp_help@@Base+0x3a4>
   14ce8:	movw	r0, #44999	; 0xafc7
   14cec:	str	r6, [fp, #-136]	; 0xffffff78
   14cf0:	movt	r0, #1
   14cf4:	bl	113cc <getenv@plt>
   14cf8:	mov	r9, r0
   14cfc:	mov	r0, sl
   14d00:	sub	r1, fp, #88	; 0x58
   14d04:	ldm	r0!, {r2, r3, r5, r6, r7}
   14d08:	cmp	r9, #0
   14d0c:	stmia	r1!, {r2, r3, r5, r6, r7}
   14d10:	ldm	r0, {r2, r3, r5, r6, r7}
   14d14:	stm	r1, {r2, r3, r5, r6, r7}
   14d18:	beq	15004 <argp_help@@Base+0x398>
   14d1c:	ldrb	r6, [r9]
   14d20:	cmp	r6, #0
   14d24:	beq	14fa0 <argp_help@@Base+0x334>
   14d28:	bl	11420 <__ctype_b_loc@plt>
   14d2c:	movw	r5, #45664	; 0xb260
   14d30:	str	r0, [fp, #-96]	; 0xffffffa0
   14d34:	movt	r5, #1
   14d38:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14d3c:	ldr	r7, [r0]
   14d40:	uxtb	r0, r6
   14d44:	add	r0, r7, r0, lsl #1
   14d48:	b	14d54 <argp_help@@Base+0xe8>
   14d4c:	ldrb	r6, [r9, #1]!
   14d50:	add	r0, r7, r6, lsl #1
   14d54:	ldrh	r0, [r0]
   14d58:	tst	r0, #8192	; 0x2000
   14d5c:	bne	14d4c <argp_help@@Base+0xe0>
   14d60:	tst	r0, #1024	; 0x400
   14d64:	beq	14f74 <argp_help@@Base+0x308>
   14d68:	mov	r2, r6
   14d6c:	mov	r1, r9
   14d70:	b	14d78 <argp_help@@Base+0x10c>
   14d74:	ldrb	r2, [r1, #1]!
   14d78:	uxtb	r3, r2
   14d7c:	add	r0, r7, r3, lsl #1
   14d80:	ldrh	r0, [r0]
   14d84:	tst	r0, #8
   14d88:	bne	14d74 <argp_help@@Base+0x108>
   14d8c:	cmp	r3, #95	; 0x5f
   14d90:	cmpne	r3, #45	; 0x2d
   14d94:	beq	14d74 <argp_help@@Base+0x108>
   14d98:	tst	r0, #8192	; 0x2000
   14d9c:	mov	r4, r1
   14da0:	beq	14dbc <argp_help@@Base+0x150>
   14da4:	mov	r4, r1
   14da8:	ldrb	r2, [r4, #1]!
   14dac:	add	r0, r7, r2, lsl #1
   14db0:	ldrh	r0, [r0]
   14db4:	tst	r0, #8192	; 0x2000
   14db8:	bne	14da8 <argp_help@@Base+0x13c>
   14dbc:	sub	sl, r1, r9
   14dc0:	uxtb	r1, r2
   14dc4:	cmp	r1, #0
   14dc8:	cmpne	r1, #44	; 0x2c
   14dcc:	bne	14e1c <argp_help@@Base+0x1b0>
   14dd0:	uxtb	r0, r6
   14dd4:	mov	r6, #1
   14dd8:	cmp	r0, #110	; 0x6e
   14ddc:	bne	14e14 <argp_help@@Base+0x1a8>
   14de0:	ldrb	r0, [r9, #1]
   14de4:	mov	r6, #1
   14de8:	cmp	r0, #111	; 0x6f
   14dec:	bne	14e14 <argp_help@@Base+0x1a8>
   14df0:	ldrb	r0, [r9, #2]
   14df4:	mov	r6, #1
   14df8:	cmp	r0, #45	; 0x2d
   14dfc:	bne	14e14 <argp_help@@Base+0x1a8>
   14e00:	sub	sl, sl, #3
   14e04:	add	r9, r9, #3
   14e08:	mov	r8, #0
   14e0c:	mov	r6, #1
   14e10:	b	14e8c <argp_help@@Base+0x220>
   14e14:	mov	r8, #1
   14e18:	b	14e8c <argp_help@@Base+0x220>
   14e1c:	cmp	r1, #61	; 0x3d
   14e20:	bne	14e38 <argp_help@@Base+0x1cc>
   14e24:	ldrb	r0, [r4, #1]!
   14e28:	add	r0, r7, r0, lsl #1
   14e2c:	ldrh	r0, [r0]
   14e30:	tst	r0, #8192	; 0x2000
   14e34:	bne	14e24 <argp_help@@Base+0x1b8>
   14e38:	mov	r6, #0
   14e3c:	tst	r0, #2048	; 0x800
   14e40:	bne	14e4c <argp_help@@Base+0x1e0>
   14e44:	mov	r8, #0
   14e48:	b	14e8c <argp_help@@Base+0x220>
   14e4c:	mov	r0, r4
   14e50:	bl	114f8 <atoi@plt>
   14e54:	mov	r8, r0
   14e58:	ldrb	r0, [r4, #1]!
   14e5c:	add	r0, r7, r0, lsl #1
   14e60:	ldrh	r0, [r0]
   14e64:	tst	r0, #2048	; 0x800
   14e68:	bne	14e58 <argp_help@@Base+0x1ec>
   14e6c:	mov	r6, #0
   14e70:	tst	r0, #8192	; 0x2000
   14e74:	beq	14e8c <argp_help@@Base+0x220>
   14e78:	ldrb	r0, [r4, #1]!
   14e7c:	add	r0, r7, r0, lsl #1
   14e80:	ldrb	r0, [r0, #1]
   14e84:	tst	r0, #32
   14e88:	bne	14e78 <argp_help@@Base+0x20c>
   14e8c:	mov	r7, r5
   14e90:	mov	r0, r7
   14e94:	bl	11438 <strlen@plt>
   14e98:	cmp	r0, sl
   14e9c:	bne	14eb8 <argp_help@@Base+0x24c>
   14ea0:	mov	r0, r9
   14ea4:	mov	r1, r7
   14ea8:	mov	r2, sl
   14eac:	bl	11558 <strncmp@plt>
   14eb0:	cmp	r0, #0
   14eb4:	beq	14ecc <argp_help@@Base+0x260>
   14eb8:	add	r7, r7, #16
   14ebc:	add	r0, r5, #144	; 0x90
   14ec0:	cmp	r7, r0
   14ec4:	bcc	14e90 <argp_help@@Base+0x224>
   14ec8:	b	14eec <argp_help@@Base+0x280>
   14ecc:	cmp	r6, #0
   14ed0:	beq	14ee0 <argp_help@@Base+0x274>
   14ed4:	ldrb	r0, [r7, #14]
   14ed8:	cmp	r0, #0
   14edc:	beq	14f48 <argp_help@@Base+0x2dc>
   14ee0:	ldrb	r0, [r7, #15]
   14ee4:	sub	r1, fp, #88	; 0x58
   14ee8:	str	r8, [r1, r0]
   14eec:	add	r0, r5, #144	; 0x90
   14ef0:	cmp	r7, r0
   14ef4:	bne	14f20 <argp_help@@Base+0x2b4>
   14ef8:	sub	sp, sp, #8
   14efc:	str	sl, [sp]
   14f00:	str	r9, [sp, #4]
   14f04:	movw	r3, #45060	; 0xb004
   14f08:	mov	r1, #0
   14f0c:	mov	r2, #0
   14f10:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14f14:	movt	r3, #1
   14f18:	bl	15f50 <argp_failure@@Base>
   14f1c:	add	sp, sp, #8
   14f20:	mov	r9, r4
   14f24:	movw	sl, #63592	; 0xf868
   14f28:	ldrb	r0, [r9], #1
   14f2c:	movt	sl, #2
   14f30:	cmp	r0, #44	; 0x2c
   14f34:	movne	r9, r4
   14f38:	ldrb	r6, [r9]
   14f3c:	cmp	r6, #0
   14f40:	bne	14d38 <argp_help@@Base+0xcc>
   14f44:	b	14fa0 <argp_help@@Base+0x334>
   14f48:	sub	sp, sp, #8
   14f4c:	str	sl, [sp]
   14f50:	str	r9, [sp, #4]
   14f54:	movw	r3, #45013	; 0xafd5
   14f58:	mov	r1, #0
   14f5c:	mov	r2, #0
   14f60:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14f64:	movt	r3, #1
   14f68:	bl	15f50 <argp_failure@@Base>
   14f6c:	add	sp, sp, #8
   14f70:	b	14eec <argp_help@@Base+0x280>
   14f74:	tst	r6, #255	; 0xff
   14f78:	beq	14fa0 <argp_help@@Base+0x334>
   14f7c:	sub	sp, sp, #8
   14f80:	str	r9, [sp]
   14f84:	movw	r3, #45098	; 0xb02a
   14f88:	mov	r1, #0
   14f8c:	mov	r2, #0
   14f90:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14f94:	movt	r3, #1
   14f98:	bl	15f50 <argp_failure@@Base>
   14f9c:	add	sp, sp, #8
   14fa0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14fa4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14fa8:	movw	r7, #45664	; 0xb260
   14fac:	sub	r5, fp, #88	; 0x58
   14fb0:	movt	r7, #1
   14fb4:	add	r2, r7, #144	; 0x90
   14fb8:	ldrb	r3, [r7, #14]
   14fbc:	cmp	r3, #0
   14fc0:	bne	14fdc <argp_help@@Base+0x370>
   14fc4:	ldrb	r3, [r7, #15]
   14fc8:	cmp	r3, #32
   14fcc:	beq	14fdc <argp_help@@Base+0x370>
   14fd0:	ldr	r3, [r5, r3]
   14fd4:	cmp	r3, r1
   14fd8:	bge	15d58 <argp_help@@Base+0x10ec>
   14fdc:	add	r7, r7, #16
   14fe0:	cmp	r7, r2
   14fe4:	bcc	14fb8 <argp_help@@Base+0x34c>
   14fe8:	ldm	r5!, {r1, r2, r3, r7}
   14fec:	mov	r0, sl
   14ff0:	stmia	r0!, {r1, r2, r3, r7}
   14ff4:	ldm	r5, {r1, r2, r3, r6, r7}
   14ff8:	stm	r0, {r1, r2, r3, r6, r7}
   14ffc:	mov	r0, #1
   15000:	str	r0, [sl, #36]	; 0x24
   15004:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15008:	ldr	r6, [fp, #-136]	; 0xffffff78
   1500c:	ldr	r9, [fp, #-100]	; 0xffffff9c
   15010:	ldr	r2, [sl, #32]
   15014:	mov	r0, r7
   15018:	mov	r1, #0
   1501c:	mov	r3, #0
   15020:	mov	r5, #0
   15024:	bl	188e0 <argp_failure@@Base+0x2990>
   15028:	cmp	r0, #0
   1502c:	beq	152b0 <argp_help@@Base+0x644>
   15030:	mov	r8, r0
   15034:	tst	r6, #11
   15038:	beq	150a0 <argp_help@@Base+0x434>
   1503c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15040:	mov	r1, #0
   15044:	mov	r4, #0
   15048:	bl	16090 <argp_failure@@Base+0x140>
   1504c:	movw	r1, #43694	; 0xaaae
   15050:	mov	r5, r0
   15054:	movt	r1, #1
   15058:	bl	166d4 <argp_failure@@Base+0x784>
   1505c:	movw	r1, #43857	; 0xab51
   15060:	mov	r0, r5
   15064:	movt	r1, #1
   15068:	bl	166d4 <argp_failure@@Base+0x784>
   1506c:	ldr	r1, [r5, #4]
   15070:	cmp	r1, #0
   15074:	beq	150a0 <argp_help@@Base+0x434>
   15078:	ldr	r0, [r5]
   1507c:	add	r2, r0, #24
   15080:	str	r4, [r2], #28
   15084:	add	r4, r4, #1
   15088:	cmp	r1, r4
   1508c:	bne	15080 <argp_help@@Base+0x414>
   15090:	movw	r3, #28740	; 0x7044
   15094:	mov	r2, #28
   15098:	movt	r3, #1
   1509c:	bl	11504 <qsort@plt>
   150a0:	tst	r6, #3
   150a4:	str	r5, [fp, #-116]	; 0xffffff8c
   150a8:	beq	152c0 <argp_help@@Base+0x654>
   150ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   150b0:	bl	16758 <argp_failure@@Base+0x808>
   150b4:	mov	r2, r0
   150b8:	add	r0, r0, #7
   150bc:	bic	r0, r0, #7
   150c0:	sub	r0, sp, r0
   150c4:	mov	sp, r0
   150c8:	mov	r1, #0
   150cc:	str	r0, [fp, #-96]	; 0xffffffa0
   150d0:	bl	11480 <memset@plt>
   150d4:	mov	r5, #1
   150d8:	ldr	r1, [r8, #24]
   150dc:	ldr	r2, [r8, #28]
   150e0:	ldr	r0, [r8, #16]
   150e4:	ldr	r7, [sl, #28]
   150e8:	sub	r1, r2, r1
   150ec:	cmp	r1, r0
   150f0:	bls	150fc <argp_help@@Base+0x490>
   150f4:	mov	r0, r8
   150f8:	bl	189a0 <argp_failure@@Base+0x2a50>
   150fc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15100:	ldr	r4, [r8, #12]
   15104:	movw	r1, #44904	; 0xaf68
   15108:	str	r7, [r8, #12]
   1510c:	tst	r5, #1
   15110:	movt	r1, #1
   15114:	str	r0, [fp, #-88]	; 0xffffffa8
   15118:	mov	r0, r8
   1511c:	beq	1512c <argp_help@@Base+0x4c0>
   15120:	movw	r2, #44910	; 0xaf6e
   15124:	movt	r2, #1
   15128:	b	15134 <argp_help@@Base+0x4c8>
   1512c:	movw	r2, #44917	; 0xaf75
   15130:	movt	r2, #1
   15134:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15138:	bl	18f00 <argp_failure@@Base+0x2fb0>
   1513c:	ldr	r1, [r8, #24]
   15140:	ldr	r2, [r8, #28]
   15144:	ldr	r0, [r8, #16]
   15148:	ldr	r5, [sl, #28]
   1514c:	sub	r1, r2, r1
   15150:	cmp	r1, r0
   15154:	bls	15160 <argp_help@@Base+0x4f4>
   15158:	mov	r0, r8
   1515c:	bl	189a0 <argp_failure@@Base+0x2a50>
   15160:	ldr	sl, [r8, #4]
   15164:	tst	r6, #2
   15168:	str	r5, [r8, #4]
   1516c:	bne	15184 <argp_help@@Base+0x518>
   15170:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15174:	mov	r1, r8
   15178:	bl	167c0 <argp_failure@@Base+0x870>
   1517c:	orr	r6, r6, #2
   15180:	b	151e8 <argp_help@@Base+0x57c>
   15184:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15188:	ldr	r0, [r0, #4]
   1518c:	cmp	r0, #0
   15190:	beq	151e8 <argp_help@@Base+0x57c>
   15194:	ldr	r0, [r8, #28]
   15198:	ldr	r1, [r8, #32]
   1519c:	add	r2, r0, #12
   151a0:	cmp	r2, r1
   151a4:	bls	151c0 <argp_help@@Base+0x554>
   151a8:	mov	r0, r8
   151ac:	mov	r1, #12
   151b0:	bl	18e18 <argp_failure@@Base+0x2ec8>
   151b4:	cmp	r0, #0
   151b8:	beq	151e8 <argp_help@@Base+0x57c>
   151bc:	ldr	r0, [r8, #28]
   151c0:	movw	r1, #45648	; 0xb250
   151c4:	movt	r1, #1
   151c8:	vldr	d16, [r1]
   151cc:	movw	r1, #11822	; 0x2e2e
   151d0:	movt	r1, #23854	; 0x5d2e
   151d4:	str	r1, [r0, #8]
   151d8:	vst1.8	{d16}, [r0]
   151dc:	ldr	r0, [r8, #28]
   151e0:	add	r0, r0, #12
   151e4:	str	r0, [r8, #28]
   151e8:	sub	sp, sp, #8
   151ec:	str	r8, [sp]
   151f0:	mov	r1, r9
   151f4:	sub	r2, fp, #88	; 0x58
   151f8:	mov	r3, #1
   151fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   15200:	bl	16958 <argp_failure@@Base+0xa08>
   15204:	add	sp, sp, #8
   15208:	mov	r9, r0
   1520c:	ldr	r2, [r8, #24]
   15210:	ldr	r0, [r8, #28]
   15214:	ldr	r1, [r8, #16]
   15218:	sub	r2, r0, r2
   1521c:	cmp	r2, r1
   15220:	bls	1523c <argp_help@@Base+0x5d0>
   15224:	mov	r0, r8
   15228:	bl	189a0 <argp_failure@@Base+0x2a50>
   1522c:	ldr	r2, [r8, #24]
   15230:	ldr	r0, [r8, #28]
   15234:	ldr	r1, [r8, #16]
   15238:	sub	r2, r0, r2
   1523c:	cmp	r2, r1
   15240:	str	r4, [r8, #12]
   15244:	bls	15254 <argp_help@@Base+0x5e8>
   15248:	mov	r0, r8
   1524c:	bl	189a0 <argp_failure@@Base+0x2a50>
   15250:	ldr	r0, [r8, #28]
   15254:	str	sl, [r8, #4]
   15258:	movw	sl, #63592	; 0xf868
   1525c:	ldr	r1, [r8, #32]
   15260:	movt	sl, #2
   15264:	cmp	r0, r1
   15268:	bcc	15284 <argp_help@@Base+0x618>
   1526c:	mov	r0, r8
   15270:	mov	r1, #1
   15274:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15278:	cmp	r0, #0
   1527c:	beq	15294 <argp_help@@Base+0x628>
   15280:	ldr	r0, [r8, #28]
   15284:	add	r1, r0, #1
   15288:	str	r1, [r8, #28]
   1528c:	mov	r1, #10
   15290:	strb	r1, [r0]
   15294:	cmp	r9, #0
   15298:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1529c:	mov	r5, #0
   152a0:	bne	150d8 <argp_help@@Base+0x46c>
   152a4:	ldr	r7, [fp, #-132]	; 0xffffff7c
   152a8:	mov	r5, #1
   152ac:	b	152c4 <argp_help@@Base+0x658>
   152b0:	mov	r0, r7
   152b4:	sub	sp, fp, #28
   152b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152bc:	b	1139c <funlockfile@plt>
   152c0:	mov	r5, #0
   152c4:	tst	r6, #16
   152c8:	beq	152f4 <argp_help@@Base+0x688>
   152cc:	sub	sp, sp, #8
   152d0:	mov	r0, #1
   152d4:	mov	r1, r9
   152d8:	mov	r2, #0
   152dc:	mov	r3, #0
   152e0:	stm	sp, {r0, r8}
   152e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   152e8:	bl	16b74 <argp_failure@@Base+0xc24>
   152ec:	add	sp, sp, #8
   152f0:	orr	r5, r0, r5
   152f4:	tst	r6, #4
   152f8:	beq	15318 <argp_help@@Base+0x6ac>
   152fc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15300:	movw	r1, #44924	; 0xaf7c
   15304:	mov	r0, r8
   15308:	movt	r1, #1
   1530c:	mov	r3, r2
   15310:	bl	18f00 <argp_failure@@Base+0x2fb0>
   15314:	mov	r5, #1
   15318:	tst	r6, #8
   1531c:	beq	15b68 <argp_help@@Base+0xefc>
   15320:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15324:	ldr	r1, [r0, #4]
   15328:	cmp	r1, #0
   1532c:	beq	15b68 <argp_help@@Base+0xefc>
   15330:	cmp	r5, #0
   15334:	beq	153a8 <argp_help@@Base+0x73c>
   15338:	mov	r2, r8
   1533c:	ldr	r0, [r2, #28]!
   15340:	mov	r3, r2
   15344:	ldr	r1, [r3, #4]!
   15348:	str	r3, [fp, #-108]	; 0xffffff94
   1534c:	cmp	r0, r1
   15350:	ldr	r4, [fp, #-116]	; 0xffffff8c
   15354:	str	r2, [fp, #-96]	; 0xffffffa0
   15358:	bcc	15378 <argp_help@@Base+0x70c>
   1535c:	mov	r0, r8
   15360:	mov	r1, #1
   15364:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15368:	cmp	r0, #0
   1536c:	beq	15388 <argp_help@@Base+0x71c>
   15370:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15374:	ldr	r0, [r2]
   15378:	add	r1, r0, #1
   1537c:	str	r1, [r2]
   15380:	mov	r1, #10
   15384:	strb	r1, [r0]
   15388:	ldr	r1, [r4, #4]
   1538c:	mov	r0, #0
   15390:	str	r0, [fp, #-44]	; 0xffffffd4
   15394:	str	r0, [fp, #-48]	; 0xffffffd0
   15398:	str	r0, [fp, #-40]	; 0xffffffd8
   1539c:	cmp	r1, #0
   153a0:	bne	153c8 <argp_help@@Base+0x75c>
   153a4:	b	15b60 <argp_help@@Base+0xef4>
   153a8:	mov	r0, #0
   153ac:	str	r0, [fp, #-44]	; 0xffffffd4
   153b0:	str	r0, [fp, #-48]	; 0xffffffd0
   153b4:	str	r0, [fp, #-40]	; 0xffffffd8
   153b8:	add	r0, r8, #32
   153bc:	str	r0, [fp, #-108]	; 0xffffff94
   153c0:	add	r0, r8, #28
   153c4:	str	r0, [fp, #-96]	; 0xffffffa0
   153c8:	str	r6, [fp, #-136]	; 0xffffff78
   153cc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   153d0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   153d4:	ldr	r5, [r0]
   153d8:	str	r1, [fp, #-120]	; 0xffffff88
   153dc:	ldr	r1, [r8, #24]
   153e0:	ldr	r2, [r4]
   153e4:	ldr	r0, [r8, #16]
   153e8:	ldr	r7, [r5]
   153ec:	mov	r6, r5
   153f0:	ldr	r5, [r5, #8]
   153f4:	sub	r1, r2, r1
   153f8:	cmp	r1, r0
   153fc:	bls	15408 <argp_help@@Base+0x79c>
   15400:	mov	r0, r8
   15404:	bl	189a0 <argp_failure@@Base+0x2a50>
   15408:	mov	r9, #0
   1540c:	sub	r0, fp, #48	; 0x30
   15410:	ldr	r2, [r8, #4]
   15414:	ldr	r1, [r8, #12]
   15418:	str	r9, [r8, #4]
   1541c:	str	r8, [fp, #-84]	; 0xffffffac
   15420:	str	r6, [fp, #-88]	; 0xffffffa8
   15424:	str	r0, [fp, #-80]	; 0xffffffb0
   15428:	mov	r0, #1
   1542c:	str	r0, [fp, #-76]	; 0xffffffb4
   15430:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15434:	str	r7, [fp, #-92]	; 0xffffffa4
   15438:	str	r6, [fp, #-104]	; 0xffffff98
   1543c:	str	r1, [fp, #-124]	; 0xffffff84
   15440:	str	r2, [fp, #-128]	; 0xffffff80
   15444:	str	r0, [fp, #-72]	; 0xffffffb8
   15448:	ldrb	r0, [r7, #12]
   1544c:	tst	r0, #8
   15450:	bne	15494 <argp_help@@Base+0x828>
   15454:	ldr	r0, [r6, #4]
   15458:	cmp	r0, #0
   1545c:	beq	15494 <argp_help@@Base+0x828>
   15460:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15464:	add	r1, r1, #12
   15468:	ldr	r2, [r1, #-12]
   1546c:	cmp	r2, #0
   15470:	beq	15480 <argp_help@@Base+0x814>
   15474:	ldrb	r2, [r1]
   15478:	tst	r2, #2
   1547c:	beq	15490 <argp_help@@Base+0x824>
   15480:	add	r1, r1, #24
   15484:	subs	r0, r0, #1
   15488:	bne	15468 <argp_help@@Base+0x7fc>
   1548c:	b	15494 <argp_help@@Base+0x828>
   15490:	mov	r9, #1
   15494:	ldr	r2, [r4]
   15498:	ldr	r1, [r8, #24]
   1549c:	ldr	r0, [r8, #16]
   154a0:	ldr	r4, [sl, #8]
   154a4:	sub	r1, r2, r1
   154a8:	cmp	r1, r0
   154ac:	bls	154b8 <argp_help@@Base+0x84c>
   154b0:	mov	r0, r8
   154b4:	bl	189a0 <argp_failure@@Base+0x2a50>
   154b8:	ldr	r0, [fp, #-104]	; 0xffffff98
   154bc:	str	r4, [r8, #12]
   154c0:	ldr	sl, [r0, #4]
   154c4:	cmp	sl, #0
   154c8:	beq	15614 <argp_help@@Base+0x9a8>
   154cc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   154d0:	add	r6, r0, #12
   154d4:	ldr	r4, [r6]
   154d8:	tst	r4, #8
   154dc:	bne	15608 <argp_help@@Base+0x99c>
   154e0:	ldr	r7, [r6, #-8]
   154e4:	sub	r0, r7, #1
   154e8:	cmp	r0, #254	; 0xfe
   154ec:	bhi	15608 <argp_help@@Base+0x99c>
   154f0:	bl	11420 <__ctype_b_loc@plt>
   154f4:	ldr	r0, [r0]
   154f8:	add	r0, r0, r7, lsl #1
   154fc:	ldrb	r0, [r0, #1]
   15500:	tst	r0, #64	; 0x40
   15504:	beq	15608 <argp_help@@Base+0x99c>
   15508:	ldrb	r0, [r5]
   1550c:	cmp	r7, r0
   15510:	bne	15608 <argp_help@@Base+0x99c>
   15514:	tst	r4, #2
   15518:	bne	15604 <argp_help@@Base+0x998>
   1551c:	movw	r0, #63592	; 0xf868
   15520:	sub	r1, fp, #88	; 0x58
   15524:	movt	r0, #2
   15528:	ldr	r0, [r0, #8]
   1552c:	bl	17734 <argp_failure@@Base+0x17e4>
   15530:	ldr	r1, [fp, #-108]	; 0xffffff94
   15534:	ldr	r4, [fp, #-96]	; 0xffffffa0
   15538:	ldr	r0, [r4]
   1553c:	ldr	r1, [r1]
   15540:	cmp	r0, r1
   15544:	bcc	15560 <argp_help@@Base+0x8f4>
   15548:	mov	r0, r8
   1554c:	mov	r1, #1
   15550:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15554:	cmp	r0, #0
   15558:	beq	15570 <argp_help@@Base+0x904>
   1555c:	ldr	r0, [r4]
   15560:	add	r1, r0, #1
   15564:	str	r1, [r4]
   15568:	mov	r1, #45	; 0x2d
   1556c:	strb	r1, [r0]
   15570:	ldr	r1, [fp, #-108]	; 0xffffff94
   15574:	ldr	r0, [r4]
   15578:	mov	r2, r4
   1557c:	ldrb	r4, [r5]
   15580:	ldr	r1, [r1]
   15584:	cmp	r0, r1
   15588:	bcc	155a8 <argp_help@@Base+0x93c>
   1558c:	mov	r0, r8
   15590:	mov	r1, #1
   15594:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15598:	cmp	r0, #0
   1559c:	beq	155b4 <argp_help@@Base+0x948>
   155a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   155a4:	ldr	r0, [r2]
   155a8:	add	r1, r0, #1
   155ac:	str	r1, [r2]
   155b0:	strb	r4, [r0]
   155b4:	cmp	r9, #0
   155b8:	beq	155e8 <argp_help@@Base+0x97c>
   155bc:	movw	r0, #63592	; 0xf868
   155c0:	movt	r0, #2
   155c4:	ldr	r0, [r0]
   155c8:	cmp	r0, #0
   155cc:	bne	155e8 <argp_help@@Base+0x97c>
   155d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   155d4:	ldr	r0, [r0, #8]
   155d8:	cmp	r0, #0
   155dc:	movne	r0, #1
   155e0:	strne	r0, [fp, #-40]	; 0xffffffd8
   155e4:	b	15604 <argp_help@@Base+0x998>
   155e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   155ec:	movw	r1, #45123	; 0xb043
   155f0:	movw	r2, #45619	; 0xb233
   155f4:	mov	r3, r8
   155f8:	movt	r1, #1
   155fc:	movt	r2, #1
   15600:	bl	178bc <argp_failure@@Base+0x196c>
   15604:	add	r5, r5, #1
   15608:	add	r6, r6, #24
   1560c:	subs	sl, sl, #1
   15610:	bne	154d4 <argp_help@@Base+0x868>
   15614:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15618:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1561c:	ldrb	r0, [r0, #12]
   15620:	tst	r0, #8
   15624:	bne	156d4 <argp_help@@Base+0xa68>
   15628:	movw	sl, #63592	; 0xf868
   1562c:	ldr	r1, [r8, #24]
   15630:	ldr	r2, [r2]
   15634:	ldr	r0, [r8, #16]
   15638:	movt	sl, #2
   1563c:	ldr	r4, [sl, #12]
   15640:	sub	r1, r2, r1
   15644:	cmp	r1, r0
   15648:	bls	15654 <argp_help@@Base+0x9e8>
   1564c:	mov	r0, r8
   15650:	bl	189a0 <argp_failure@@Base+0x2a50>
   15654:	ldr	r0, [fp, #-104]	; 0xffffff98
   15658:	str	r4, [r8, #12]
   1565c:	ldr	r4, [r0, #4]
   15660:	cmp	r4, #0
   15664:	beq	157c0 <argp_help@@Base+0xb54>
   15668:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1566c:	add	r5, r0, #12
   15670:	ldr	r0, [r5, #-12]
   15674:	cmp	r0, #0
   15678:	beq	156c4 <argp_help@@Base+0xa58>
   1567c:	ldrb	r0, [r5]
   15680:	tst	r0, #2
   15684:	bne	156c4 <argp_help@@Base+0xa58>
   15688:	ldr	r0, [sl, #12]
   1568c:	sub	r1, fp, #88	; 0x58
   15690:	bl	17734 <argp_failure@@Base+0x17e4>
   15694:	ldr	r2, [r5, #-12]
   15698:	movw	r1, #45624	; 0xb238
   1569c:	mov	r0, r8
   156a0:	movt	r1, #1
   156a4:	bl	18f00 <argp_failure@@Base+0x2fb0>
   156a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   156ac:	movw	r1, #45629	; 0xb23d
   156b0:	movw	r2, #45633	; 0xb241
   156b4:	mov	r3, r8
   156b8:	movt	r1, #1
   156bc:	movt	r2, #1
   156c0:	bl	178bc <argp_failure@@Base+0x196c>
   156c4:	add	r5, r5, #24
   156c8:	subs	r4, r4, #1
   156cc:	bne	15670 <argp_help@@Base+0xa04>
   156d0:	b	157c0 <argp_help@@Base+0xb54>
   156d4:	movw	sl, #63592	; 0xf868
   156d8:	ldr	r1, [r8, #24]
   156dc:	ldr	r2, [r2]
   156e0:	ldr	r0, [r8, #16]
   156e4:	movt	sl, #2
   156e8:	ldr	r4, [sl, #16]
   156ec:	sub	r1, r2, r1
   156f0:	cmp	r1, r0
   156f4:	bls	15700 <argp_help@@Base+0xa94>
   156f8:	mov	r0, r8
   156fc:	bl	189a0 <argp_failure@@Base+0x2a50>
   15700:	ldr	r0, [fp, #-104]	; 0xffffff98
   15704:	str	r4, [r8, #12]
   15708:	ldr	r7, [r0, #4]
   1570c:	cmp	r7, #0
   15710:	beq	157c0 <argp_help@@Base+0xb54>
   15714:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15718:	add	r4, r0, #12
   1571c:	ldr	r0, [r4, #-12]
   15720:	cmp	r0, #0
   15724:	beq	157b4 <argp_help@@Base+0xb48>
   15728:	ldrb	r0, [r4]
   1572c:	tst	r0, #2
   15730:	bne	157b4 <argp_help@@Base+0xb48>
   15734:	ldr	r0, [sl, #16]
   15738:	sub	r1, fp, #88	; 0x58
   1573c:	bl	17734 <argp_failure@@Base+0x17e4>
   15740:	ldr	r5, [r4, #-12]
   15744:	mov	r0, r5
   15748:	bl	11438 <strlen@plt>
   1574c:	cmp	r0, #0
   15750:	beq	157b4 <argp_help@@Base+0xb48>
   15754:	mov	r9, sl
   15758:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1575c:	ldr	r2, [fp, #-108]	; 0xffffff94
   15760:	mov	r6, r0
   15764:	ldr	r0, [sl]
   15768:	ldr	r2, [r2]
   1576c:	add	r1, r0, r6
   15770:	cmp	r1, r2
   15774:	bls	15798 <argp_help@@Base+0xb2c>
   15778:	mov	r0, r8
   1577c:	mov	r1, r6
   15780:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15784:	cmp	r0, #0
   15788:	mov	sl, r9
   1578c:	beq	157b4 <argp_help@@Base+0xb48>
   15790:	ldr	sl, [fp, #-96]	; 0xffffffa0
   15794:	ldr	r0, [sl]
   15798:	mov	r1, r5
   1579c:	mov	r2, r6
   157a0:	bl	11354 <memcpy@plt>
   157a4:	ldr	r0, [sl]
   157a8:	add	r0, r0, r6
   157ac:	str	r0, [sl]
   157b0:	mov	sl, r9
   157b4:	add	r4, r4, #24
   157b8:	subs	r7, r7, #1
   157bc:	bne	1571c <argp_help@@Base+0xab0>
   157c0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   157c4:	ldr	r1, [r8, #24]
   157c8:	ldr	r0, [r8, #16]
   157cc:	ldr	r2, [r4]
   157d0:	sub	r1, r2, r1
   157d4:	cmp	r1, r0
   157d8:	bls	157e4 <argp_help@@Base+0xb78>
   157dc:	mov	r0, r8
   157e0:	bl	189a0 <argp_failure@@Base+0x2a50>
   157e4:	mov	r0, #0
   157e8:	ldr	r5, [fp, #-104]	; 0xffffff98
   157ec:	str	r0, [r8, #4]
   157f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   157f4:	cmp	r0, #0
   157f8:	beq	15854 <argp_help@@Base+0xbe8>
   157fc:	ldr	r6, [fp, #-92]	; 0xffffffa4
   15800:	ldrb	r0, [r6, #12]
   15804:	tst	r0, #8
   15808:	bne	15834 <argp_help@@Base+0xbc8>
   1580c:	ldr	r4, [r6, #4]
   15810:	sub	r0, r4, #1
   15814:	cmp	r0, #254	; 0xfe
   15818:	bhi	15834 <argp_help@@Base+0xbc8>
   1581c:	bl	11420 <__ctype_b_loc@plt>
   15820:	ldr	r0, [r0]
   15824:	add	r0, r0, r4, lsl #1
   15828:	ldrb	r0, [r0, #1]
   1582c:	tst	r0, #64	; 0x40
   15830:	bne	15ae0 <argp_help@@Base+0xe74>
   15834:	ldr	r0, [r6]
   15838:	cmp	r0, #0
   1583c:	bne	15ae0 <argp_help@@Base+0xe74>
   15840:	ldr	r1, [r5, #20]
   15844:	ldr	r0, [r6, #16]
   15848:	sub	r2, fp, #88	; 0x58
   1584c:	bl	178ec <argp_failure@@Base+0x199c>
   15850:	b	15adc <argp_help@@Base+0xe70>
   15854:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15858:	mov	r9, r5
   1585c:	ldr	r5, [r5, #20]
   15860:	ldr	r7, [r0, #16]
   15864:	cmp	r5, #0
   15868:	mov	r6, r7
   1586c:	beq	158ac <argp_help@@Base+0xc40>
   15870:	ldr	r0, [r5, #20]
   15874:	mov	r6, r7
   15878:	cmp	r0, #0
   1587c:	beq	158ac <argp_help@@Base+0xc40>
   15880:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15884:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15888:	ldr	r6, [r0, #4]
   1588c:	mov	r0, r5
   15890:	bl	137b8 <argp_parse@@Base+0xbf8>
   15894:	ldr	r3, [r5, #20]
   15898:	mov	r2, r0
   1589c:	mov	r0, r6
   158a0:	mov	r1, r7
   158a4:	blx	r3
   158a8:	mov	r6, r0
   158ac:	cmp	r6, #0
   158b0:	beq	15a74 <argp_help@@Base+0xe08>
   158b4:	ldrb	r0, [r6]
   158b8:	cmp	r0, #0
   158bc:	beq	15a64 <argp_help@@Base+0xdf8>
   158c0:	ldr	r1, [r8, #24]
   158c4:	ldr	r2, [r4]
   158c8:	ldr	r0, [r8, #16]
   158cc:	str	r7, [fp, #-92]	; 0xffffffa4
   158d0:	sub	r1, r2, r1
   158d4:	cmp	r1, r0
   158d8:	bls	158f4 <argp_help@@Base+0xc88>
   158dc:	mov	r0, r8
   158e0:	bl	189a0 <argp_failure@@Base+0x2a50>
   158e4:	ldr	r1, [r8, #24]
   158e8:	ldr	r2, [r4]
   158ec:	ldr	r0, [r8, #16]
   158f0:	sub	r1, r2, r1
   158f4:	ldr	r4, [sl, #20]
   158f8:	ldr	r7, [r8, #20]
   158fc:	cmp	r1, r0
   15900:	mov	r5, r4
   15904:	bls	15928 <argp_help@@Base+0xcbc>
   15908:	mov	r0, r8
   1590c:	bl	189a0 <argp_failure@@Base+0x2a50>
   15910:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15914:	ldr	r1, [r8, #24]
   15918:	ldr	r0, [r8, #16]
   1591c:	ldr	r5, [sl, #20]
   15920:	ldr	r2, [r2]
   15924:	sub	r1, r2, r1
   15928:	cmp	r1, r0
   1592c:	bic	r7, r7, r7, asr #31
   15930:	mov	r1, r5
   15934:	str	r4, [r8, #4]
   15938:	bls	15948 <argp_help@@Base+0xcdc>
   1593c:	mov	r0, r8
   15940:	bl	189a0 <argp_failure@@Base+0x2a50>
   15944:	ldr	r1, [sl, #20]
   15948:	ldr	r4, [fp, #-96]	; 0xffffffa0
   1594c:	add	r0, r1, #3
   15950:	str	r5, [r8, #12]
   15954:	cmp	r7, r0
   15958:	bls	159a0 <argp_help@@Base+0xd34>
   1595c:	ldr	r1, [fp, #-108]	; 0xffffff94
   15960:	ldr	r0, [r4]
   15964:	ldr	r7, [fp, #-92]	; 0xffffffa4
   15968:	ldr	r1, [r1]
   1596c:	cmp	r0, r1
   15970:	bcc	1598c <argp_help@@Base+0xd20>
   15974:	mov	r0, r8
   15978:	mov	r1, #1
   1597c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15980:	cmp	r0, #0
   15984:	beq	15a08 <argp_help@@Base+0xd9c>
   15988:	ldr	r0, [r4]
   1598c:	add	r1, r0, #1
   15990:	str	r1, [r4]
   15994:	mov	r1, #10
   15998:	strb	r1, [r0]
   1599c:	b	15a08 <argp_help@@Base+0xd9c>
   159a0:	cmp	r7, r1
   159a4:	bcs	159b8 <argp_help@@Base+0xd4c>
   159a8:	mov	r0, r8
   159ac:	bl	17b1c <argp_failure@@Base+0x1bcc>
   159b0:	ldr	r7, [fp, #-92]	; 0xffffffa4
   159b4:	b	15a08 <argp_help@@Base+0xd9c>
   159b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   159bc:	ldr	r7, [fp, #-92]	; 0xffffffa4
   159c0:	ldr	r1, [r0]
   159c4:	ldr	r0, [r4]
   159c8:	add	r2, r0, #3
   159cc:	cmp	r2, r1
   159d0:	bls	159ec <argp_help@@Base+0xd80>
   159d4:	mov	r0, r8
   159d8:	mov	r1, #3
   159dc:	bl	18e18 <argp_failure@@Base+0x2ec8>
   159e0:	cmp	r0, #0
   159e4:	beq	15a08 <argp_help@@Base+0xd9c>
   159e8:	ldr	r0, [r4]
   159ec:	mov	r1, #32
   159f0:	strb	r1, [r0, #2]
   159f4:	movw	r1, #8224	; 0x2020
   159f8:	strh	r1, [r0]
   159fc:	ldr	r0, [r4]
   15a00:	add	r0, r0, #3
   15a04:	str	r0, [r4]
   15a08:	mov	r0, r6
   15a0c:	bl	11438 <strlen@plt>
   15a10:	cmp	r0, #0
   15a14:	beq	15a64 <argp_help@@Base+0xdf8>
   15a18:	ldr	r2, [fp, #-108]	; 0xffffff94
   15a1c:	mov	r5, r0
   15a20:	ldr	r0, [r4]
   15a24:	ldr	r2, [r2]
   15a28:	add	r1, r0, r5
   15a2c:	cmp	r1, r2
   15a30:	bls	15a4c <argp_help@@Base+0xde0>
   15a34:	mov	r0, r8
   15a38:	mov	r1, r5
   15a3c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15a40:	cmp	r0, #0
   15a44:	beq	15a64 <argp_help@@Base+0xdf8>
   15a48:	ldr	r0, [r4]
   15a4c:	mov	r1, r6
   15a50:	mov	r2, r5
   15a54:	bl	11354 <memcpy@plt>
   15a58:	ldr	r0, [r4]
   15a5c:	add	r0, r0, r5
   15a60:	str	r0, [r4]
   15a64:	cmp	r6, r7
   15a68:	beq	15a74 <argp_help@@Base+0xe08>
   15a6c:	mov	r0, r6
   15a70:	bl	13e2c <argp_parse@@Base+0x126c>
   15a74:	ldr	r2, [r8, #24]
   15a78:	ldr	r0, [r4]
   15a7c:	ldr	r1, [r8, #16]
   15a80:	sub	r2, r0, r2
   15a84:	cmp	r2, r1
   15a88:	bls	15a98 <argp_help@@Base+0xe2c>
   15a8c:	mov	r0, r8
   15a90:	bl	189a0 <argp_failure@@Base+0x2a50>
   15a94:	ldr	r0, [r8, #28]
   15a98:	mov	r1, #0
   15a9c:	mov	r5, r9
   15aa0:	str	r1, [r8, #4]
   15aa4:	ldr	r1, [r8, #32]
   15aa8:	cmp	r0, r1
   15aac:	bcc	15acc <argp_help@@Base+0xe60>
   15ab0:	mov	r0, r8
   15ab4:	mov	r1, #1
   15ab8:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15abc:	cmp	r0, #0
   15ac0:	beq	15adc <argp_help@@Base+0xe70>
   15ac4:	ldr	r4, [fp, #-96]	; 0xffffffa0
   15ac8:	ldr	r0, [r4]
   15acc:	add	r1, r0, #1
   15ad0:	str	r1, [r4]
   15ad4:	mov	r1, #10
   15ad8:	strb	r1, [r0]
   15adc:	str	r5, [fp, #-48]	; 0xffffffd0
   15ae0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   15ae4:	ldr	r1, [r8, #24]
   15ae8:	ldr	r0, [r8, #16]
   15aec:	ldr	r2, [r4]
   15af0:	sub	r1, r2, r1
   15af4:	cmp	r1, r0
   15af8:	bls	15b14 <argp_help@@Base+0xea8>
   15afc:	mov	r0, r8
   15b00:	bl	189a0 <argp_failure@@Base+0x2a50>
   15b04:	ldr	r1, [r8, #24]
   15b08:	ldr	r2, [r4]
   15b0c:	ldr	r0, [r8, #16]
   15b10:	sub	r1, r2, r1
   15b14:	ldr	r2, [fp, #-128]	; 0xffffff80
   15b18:	cmp	r1, r0
   15b1c:	str	r2, [r8, #4]
   15b20:	bls	15b2c <argp_help@@Base+0xec0>
   15b24:	mov	r0, r8
   15b28:	bl	189a0 <argp_failure@@Base+0x2a50>
   15b2c:	ldr	r1, [fp, #-120]	; 0xffffff88
   15b30:	ldr	r0, [fp, #-124]	; 0xffffff84
   15b34:	add	r5, r5, #28
   15b38:	subs	r1, r1, #1
   15b3c:	str	r0, [r8, #12]
   15b40:	bne	153d8 <argp_help@@Base+0x76c>
   15b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b48:	ldr	r6, [fp, #-136]	; 0xffffff78
   15b4c:	ldr	r9, [fp, #-100]	; 0xffffff9c
   15b50:	cmp	r0, #0
   15b54:	ldrne	r0, [sl, #4]
   15b58:	cmpne	r0, #0
   15b5c:	bne	15c28 <argp_help@@Base+0xfbc>
   15b60:	ldr	r7, [fp, #-132]	; 0xffffff7c
   15b64:	mov	r5, #1
   15b68:	tst	r6, #32
   15b6c:	beq	15b98 <argp_help@@Base+0xf2c>
   15b70:	sub	sp, sp, #8
   15b74:	mov	r0, #0
   15b78:	mov	r1, r9
   15b7c:	mov	r2, #1
   15b80:	mov	r3, r5
   15b84:	stm	sp, {r0, r8}
   15b88:	ldr	r0, [fp, #-112]	; 0xffffff90
   15b8c:	bl	16b74 <argp_failure@@Base+0xc24>
   15b90:	add	sp, sp, #8
   15b94:	orr	r5, r0, r5
   15b98:	tst	r6, #64	; 0x40
   15b9c:	movwne	r4, #63796	; 0xf934
   15ba0:	movtne	r4, #2
   15ba4:	ldrne	r0, [r4]
   15ba8:	cmpne	r0, #0
   15bac:	beq	15c04 <argp_help@@Base+0xf98>
   15bb0:	cmp	r5, #0
   15bb4:	beq	15bf0 <argp_help@@Base+0xf84>
   15bb8:	ldr	r0, [r8, #28]
   15bbc:	ldr	r1, [r8, #32]
   15bc0:	cmp	r0, r1
   15bc4:	bcc	15be0 <argp_help@@Base+0xf74>
   15bc8:	mov	r0, r8
   15bcc:	mov	r1, #1
   15bd0:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15bd4:	cmp	r0, #0
   15bd8:	beq	15bf0 <argp_help@@Base+0xf84>
   15bdc:	ldr	r0, [r8, #28]
   15be0:	add	r1, r0, #1
   15be4:	str	r1, [r8, #28]
   15be8:	mov	r1, #10
   15bec:	strb	r1, [r0]
   15bf0:	ldr	r2, [r4]
   15bf4:	movw	r1, #44979	; 0xafb3
   15bf8:	mov	r0, r8
   15bfc:	movt	r1, #1
   15c00:	bl	18f00 <argp_failure@@Base+0x2fb0>
   15c04:	mov	r0, r7
   15c08:	bl	1139c <funlockfile@plt>
   15c0c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15c10:	cmp	r0, #0
   15c14:	blne	16ff0 <argp_failure@@Base+0x10a0>
   15c18:	mov	r0, r8
   15c1c:	bl	1895c <argp_failure@@Base+0x2a0c>
   15c20:	sub	sp, fp, #28
   15c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c28:	movw	r5, #45503	; 0xb1bf
   15c2c:	cmp	r9, #0
   15c30:	movt	r5, #1
   15c34:	beq	15c4c <argp_help@@Base+0xfe0>
   15c38:	ldr	r4, [r9]
   15c3c:	cmp	r4, #0
   15c40:	ldrne	r0, [r4, #20]
   15c44:	cmpne	r0, #0
   15c48:	bne	15d84 <argp_help@@Base+0x1118>
   15c4c:	ldrb	r0, [r5]
   15c50:	ldr	r4, [fp, #-96]	; 0xffffffa0
   15c54:	cmp	r0, #0
   15c58:	beq	15d3c <argp_help@@Base+0x10d0>
   15c5c:	ldr	r1, [fp, #-108]	; 0xffffff94
   15c60:	ldr	r0, [r4]
   15c64:	ldr	r1, [r1]
   15c68:	cmp	r0, r1
   15c6c:	bcc	15c88 <argp_help@@Base+0x101c>
   15c70:	mov	r0, r8
   15c74:	mov	r1, #1
   15c78:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15c7c:	cmp	r0, #0
   15c80:	beq	15c98 <argp_help@@Base+0x102c>
   15c84:	ldr	r0, [r4]
   15c88:	add	r1, r0, #1
   15c8c:	str	r1, [r4]
   15c90:	mov	r1, #10
   15c94:	strb	r1, [r0]
   15c98:	mov	r0, r5
   15c9c:	bl	11438 <strlen@plt>
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cfc <argp_help@@Base+0x1090>
   15ca8:	ldr	r7, [fp, #-96]	; 0xffffffa0
   15cac:	ldr	r2, [fp, #-108]	; 0xffffff94
   15cb0:	mov	r4, r0
   15cb4:	ldr	r0, [r7]
   15cb8:	ldr	r2, [r2]
   15cbc:	add	r1, r0, r4
   15cc0:	cmp	r1, r2
   15cc4:	bls	15ce4 <argp_help@@Base+0x1078>
   15cc8:	mov	r0, r8
   15ccc:	mov	r1, r4
   15cd0:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15cd4:	cmp	r0, #0
   15cd8:	beq	15cfc <argp_help@@Base+0x1090>
   15cdc:	ldr	r7, [fp, #-96]	; 0xffffffa0
   15ce0:	ldr	r0, [r7]
   15ce4:	mov	r1, r5
   15ce8:	mov	r2, r4
   15cec:	bl	11354 <memcpy@plt>
   15cf0:	ldr	r0, [r7]
   15cf4:	add	r0, r0, r4
   15cf8:	str	r0, [r7]
   15cfc:	ldr	r1, [fp, #-108]	; 0xffffff94
   15d00:	ldr	r4, [fp, #-96]	; 0xffffffa0
   15d04:	ldr	r0, [r4]
   15d08:	ldr	r1, [r1]
   15d0c:	cmp	r0, r1
   15d10:	bcc	15d2c <argp_help@@Base+0x10c0>
   15d14:	mov	r0, r8
   15d18:	mov	r1, #1
   15d1c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   15d20:	cmp	r0, #0
   15d24:	beq	15d3c <argp_help@@Base+0x10d0>
   15d28:	ldr	r0, [r4]
   15d2c:	add	r1, r0, #1
   15d30:	str	r1, [r4]
   15d34:	mov	r1, #10
   15d38:	strb	r1, [r0]
   15d3c:	movw	r0, #45503	; 0xb1bf
   15d40:	movt	r0, #1
   15d44:	cmp	r5, r0
   15d48:	beq	15b60 <argp_help@@Base+0xef4>
   15d4c:	mov	r0, r5
   15d50:	bl	13e2c <argp_parse@@Base+0x126c>
   15d54:	b	15b60 <argp_help@@Base+0xef4>
   15d58:	sub	sp, sp, #8
   15d5c:	movw	r1, #45179	; 0xb07b
   15d60:	movw	r3, #45127	; 0xb047
   15d64:	mov	r2, #0
   15d68:	movt	r1, #1
   15d6c:	movt	r3, #1
   15d70:	stm	sp, {r1, r7}
   15d74:	mov	r1, #0
   15d78:	bl	15f50 <argp_failure@@Base>
   15d7c:	add	sp, sp, #8
   15d80:	b	15004 <argp_help@@Base+0x398>
   15d84:	mov	r0, r4
   15d88:	mov	r1, r9
   15d8c:	bl	137b8 <argp_parse@@Base+0xbf8>
   15d90:	ldr	r3, [r4, #20]
   15d94:	movw	r1, #45503	; 0xb1bf
   15d98:	mov	r2, r0
   15d9c:	movw	r0, #5
   15da0:	movt	r0, #512	; 0x200
   15da4:	movt	r1, #1
   15da8:	blx	r3
   15dac:	mov	r5, r0
   15db0:	cmp	r0, #0
   15db4:	bne	15c4c <argp_help@@Base+0xfe0>
   15db8:	b	15b60 <argp_help@@Base+0xef4>

00015dbc <argp_state_help@@Base>:
   15dbc:	push	{r4, r5, fp, lr}
   15dc0:	add	fp, sp, #8
   15dc4:	sub	sp, sp, #8
   15dc8:	mov	r4, r2
   15dcc:	mov	r2, r1
   15dd0:	cmp	r0, #0
   15dd4:	beq	15e20 <argp_state_help@@Base+0x64>
   15dd8:	cmp	r2, #0
   15ddc:	beq	15e58 <argp_state_help@@Base+0x9c>
   15de0:	ldr	r1, [r0, #16]
   15de4:	mov	r5, r0
   15de8:	ands	r0, r1, #2
   15dec:	bne	15e58 <argp_state_help@@Base+0x9c>
   15df0:	ldr	r3, [r5, #40]	; 0x28
   15df4:	ldr	r0, [r5]
   15df8:	and	r1, r1, #64	; 0x40
   15dfc:	orr	r4, r4, r1, lsl #1
   15e00:	mov	r1, r5
   15e04:	str	r3, [sp]
   15e08:	mov	r3, r4
   15e0c:	bl	14c98 <argp_help@@Base+0x2c>
   15e10:	ldrb	r0, [r5, #16]
   15e14:	tst	r0, #32
   15e18:	beq	15e48 <argp_state_help@@Base+0x8c>
   15e1c:	b	15e58 <argp_state_help@@Base+0x9c>
   15e20:	cmp	r2, #0
   15e24:	beq	15e58 <argp_state_help@@Base+0x9c>
   15e28:	movw	r0, #63656	; 0xf8a8
   15e2c:	mov	r1, #0
   15e30:	mov	r3, r4
   15e34:	movt	r0, #2
   15e38:	ldr	r0, [r0]
   15e3c:	str	r0, [sp]
   15e40:	mov	r0, #0
   15e44:	bl	14c98 <argp_help@@Base+0x2c>
   15e48:	tst	r4, #256	; 0x100
   15e4c:	bne	15e60 <argp_state_help@@Base+0xa4>
   15e50:	tst	r4, #512	; 0x200
   15e54:	bne	15e70 <argp_state_help@@Base+0xb4>
   15e58:	sub	sp, fp, #8
   15e5c:	pop	{r4, r5, fp, pc}
   15e60:	movw	r0, #63648	; 0xf8a0
   15e64:	movt	r0, #2
   15e68:	ldr	r0, [r0]
   15e6c:	bl	1142c <exit@plt>
   15e70:	mov	r0, #0
   15e74:	bl	1142c <exit@plt>

00015e78 <argp_error@@Base>:
   15e78:	sub	sp, sp, #8
   15e7c:	push	{r4, r5, r6, sl, fp, lr}
   15e80:	add	fp, sp, #16
   15e84:	sub	sp, sp, #8
   15e88:	mov	r5, r1
   15e8c:	mov	r4, r0
   15e90:	cmp	r0, #0
   15e94:	str	r3, [fp, #12]
   15e98:	str	r2, [fp, #8]
   15e9c:	beq	15eb4 <argp_error@@Base+0x3c>
   15ea0:	ldrb	r0, [r4, #16]
   15ea4:	tst	r0, #2
   15ea8:	bne	15f40 <argp_error@@Base+0xc8>
   15eac:	add	r0, r4, #44	; 0x2c
   15eb0:	b	15ebc <argp_error@@Base+0x44>
   15eb4:	movw	r0, #63664	; 0xf8b0
   15eb8:	movt	r0, #2
   15ebc:	ldr	r6, [r0]
   15ec0:	cmp	r6, #0
   15ec4:	beq	15f40 <argp_error@@Base+0xc8>
   15ec8:	mov	r0, r6
   15ecc:	bl	114e0 <flockfile@plt>
   15ed0:	add	r0, fp, #8
   15ed4:	cmp	r4, #0
   15ed8:	mov	r1, r6
   15edc:	str	r0, [sp, #4]
   15ee0:	movw	r0, #63656	; 0xf8a8
   15ee4:	movt	r0, #2
   15ee8:	addne	r0, r4, #40	; 0x28
   15eec:	ldr	r0, [r0]
   15ef0:	bl	112d0 <fputs_unlocked@plt>
   15ef4:	mov	r0, #58	; 0x3a
   15ef8:	mov	r1, r6
   15efc:	bl	11594 <putc_unlocked@plt>
   15f00:	mov	r0, #32
   15f04:	mov	r1, r6
   15f08:	bl	11594 <putc_unlocked@plt>
   15f0c:	ldr	r2, [sp, #4]
   15f10:	mov	r0, r6
   15f14:	mov	r1, r5
   15f18:	bl	114b0 <vfprintf@plt>
   15f1c:	mov	r0, #10
   15f20:	mov	r1, r6
   15f24:	bl	11594 <putc_unlocked@plt>
   15f28:	mov	r0, r4
   15f2c:	mov	r1, r6
   15f30:	mov	r2, #260	; 0x104
   15f34:	bl	15dbc <argp_state_help@@Base>
   15f38:	mov	r0, r6
   15f3c:	bl	1139c <funlockfile@plt>
   15f40:	sub	sp, fp, #16
   15f44:	pop	{r4, r5, r6, sl, fp, lr}
   15f48:	add	sp, sp, #8
   15f4c:	bx	lr

00015f50 <argp_failure@@Base>:
   15f50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f54:	add	fp, sp, #24
   15f58:	sub	sp, sp, #200	; 0xc8
   15f5c:	mov	r4, r3
   15f60:	mov	r7, r2
   15f64:	mov	r8, r1
   15f68:	mov	r5, r0
   15f6c:	cmp	r0, #0
   15f70:	beq	15f88 <argp_failure@@Base+0x38>
   15f74:	ldrb	r0, [r5, #16]
   15f78:	tst	r0, #2
   15f7c:	bne	16088 <argp_failure@@Base+0x138>
   15f80:	add	r0, r5, #44	; 0x2c
   15f84:	b	15f90 <argp_failure@@Base+0x40>
   15f88:	movw	r0, #63664	; 0xf8b0
   15f8c:	movt	r0, #2
   15f90:	ldr	r6, [r0]
   15f94:	cmp	r6, #0
   15f98:	beq	16088 <argp_failure@@Base+0x138>
   15f9c:	mov	r0, r6
   15fa0:	bl	114e0 <flockfile@plt>
   15fa4:	movw	r0, #63656	; 0xf8a8
   15fa8:	cmp	r5, #0
   15fac:	mov	r1, r6
   15fb0:	movt	r0, #2
   15fb4:	addne	r0, r5, #40	; 0x28
   15fb8:	ldr	r0, [r0]
   15fbc:	bl	112d0 <fputs_unlocked@plt>
   15fc0:	cmp	r4, #0
   15fc4:	beq	15ff8 <argp_failure@@Base+0xa8>
   15fc8:	add	r0, fp, #8
   15fcc:	mov	r1, r6
   15fd0:	str	r0, [sp]
   15fd4:	mov	r0, #58	; 0x3a
   15fd8:	bl	11594 <putc_unlocked@plt>
   15fdc:	mov	r0, #32
   15fe0:	mov	r1, r6
   15fe4:	bl	11594 <putc_unlocked@plt>
   15fe8:	ldr	r2, [sp]
   15fec:	mov	r0, r6
   15ff0:	mov	r1, r4
   15ff4:	bl	114b0 <vfprintf@plt>
   15ff8:	cmp	r7, #0
   15ffc:	beq	16054 <argp_failure@@Base+0x104>
   16000:	mov	r0, #58	; 0x3a
   16004:	mov	r1, r6
   16008:	bl	11594 <putc_unlocked@plt>
   1600c:	mov	r0, #32
   16010:	mov	r1, r6
   16014:	bl	11594 <putc_unlocked@plt>
   16018:	mov	r1, sp
   1601c:	mov	r0, r7
   16020:	mov	r2, #200	; 0xc8
   16024:	bl	11474 <strerror_r@plt>
   16028:	cmp	r0, #0
   1602c:	bne	1604c <argp_failure@@Base+0xfc>
   16030:	mov	r0, r7
   16034:	bl	113fc <strerror@plt>
   16038:	mov	r1, r0
   1603c:	movw	r0, #44883	; 0xaf53
   16040:	movt	r0, #1
   16044:	cmp	r1, #0
   16048:	movne	r0, r1
   1604c:	mov	r1, r6
   16050:	bl	112d0 <fputs_unlocked@plt>
   16054:	mov	r0, #10
   16058:	mov	r1, r6
   1605c:	bl	11594 <putc_unlocked@plt>
   16060:	mov	r0, r6
   16064:	bl	1139c <funlockfile@plt>
   16068:	cmp	r8, #0
   1606c:	beq	16088 <argp_failure@@Base+0x138>
   16070:	cmp	r5, #0
   16074:	ldrbne	r0, [r5, #16]
   16078:	tstne	r0, #32
   1607c:	bne	16088 <argp_failure@@Base+0x138>
   16080:	mov	r0, r8
   16084:	bl	1142c <exit@plt>
   16088:	sub	sp, fp, #24
   1608c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16094:	add	fp, sp, #28
   16098:	sub	sp, sp, #52	; 0x34
   1609c:	ldr	r4, [r0]
   160a0:	ldr	r7, [r0, #16]
   160a4:	mov	r9, r0
   160a8:	mov	r0, #16
   160ac:	mov	r8, r1
   160b0:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   160b4:	cmp	r0, #0
   160b8:	beq	16654 <argp_failure@@Base+0x704>
   160bc:	mov	sl, r0
   160c0:	mov	r0, #0
   160c4:	cmp	r4, #0
   160c8:	str	r8, [sp, #40]	; 0x28
   160cc:	mov	r1, sl
   160d0:	str	sl, [fp, #-32]	; 0xffffffe0
   160d4:	str	r0, [r1, #12]!
   160d8:	str	r1, [sp, #24]
   160dc:	str	r0, [r1, #-8]
   160e0:	beq	16328 <argp_failure@@Base+0x3d8>
   160e4:	ldrb	r0, [r4, #12]
   160e8:	tst	r0, #4
   160ec:	bne	16674 <argp_failure@@Base+0x724>
   160f0:	add	r5, r4, #12
   160f4:	mov	r6, #0
   160f8:	mov	r8, #0
   160fc:	str	r7, [sp, #8]
   16100:	b	16144 <argp_failure@@Base+0x1f4>
   16104:	ldr	r0, [r5]
   16108:	sub	r1, r7, #1
   1610c:	tst	r0, #4
   16110:	addeq	r6, r6, #1
   16114:	streq	r6, [sl, #4]
   16118:	cmp	r1, #254	; 0xfe
   1611c:	bhi	16140 <argp_failure@@Base+0x1f0>
   16120:	ands	r0, r0, #8
   16124:	bne	16140 <argp_failure@@Base+0x1f0>
   16128:	bl	11420 <__ctype_b_loc@plt>
   1612c:	ldr	r0, [r0]
   16130:	add	r0, r0, r7, lsl #1
   16134:	ldrb	r0, [r0, #1]
   16138:	tst	r0, #64	; 0x40
   1613c:	addne	r8, r8, #1
   16140:	add	r5, r5, #24
   16144:	ldr	r7, [r5, #-8]
   16148:	cmp	r7, #0
   1614c:	bne	16104 <argp_failure@@Base+0x1b4>
   16150:	ldr	r0, [r5, #-12]
   16154:	cmp	r0, #0
   16158:	bne	16104 <argp_failure@@Base+0x1b4>
   1615c:	ldr	r0, [r5, #4]
   16160:	cmp	r0, #0
   16164:	bne	16104 <argp_failure@@Base+0x1b4>
   16168:	ldr	r0, [r5, #8]
   1616c:	cmp	r0, #0
   16170:	bne	16104 <argp_failure@@Base+0x1b4>
   16174:	rsb	r0, r6, r6, lsl #3
   16178:	lsl	r0, r0, #2
   1617c:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   16180:	mov	r5, r0
   16184:	str	r0, [sl]
   16188:	add	r0, r8, #1
   1618c:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   16190:	cmp	r5, #0
   16194:	str	r0, [sl, #8]
   16198:	movne	r7, r0
   1619c:	cmpne	r0, #0
   161a0:	bne	161c4 <argp_failure@@Base+0x274>
   161a4:	movw	r0, #45283	; 0xb0e3
   161a8:	movw	r1, #45191	; 0xb087
   161ac:	movw	r3, #45203	; 0xb093
   161b0:	movw	r2, #474	; 0x1da
   161b4:	movt	r0, #1
   161b8:	movt	r1, #1
   161bc:	movt	r3, #1
   161c0:	bl	11588 <__assert_fail@plt>
   161c4:	movw	r0, #37450	; 0x924a
   161c8:	movt	r0, #2340	; 0x924
   161cc:	cmp	r6, r0
   161d0:	bcs	16694 <argp_failure@@Base+0x744>
   161d4:	mov	sl, r9
   161d8:	mov	r8, #0
   161dc:	mov	r0, #0
   161e0:	b	162e0 <argp_failure@@Base+0x390>
   161e4:	stm	r5, {r4, r8}
   161e8:	str	r7, [r5, #8]
   161ec:	ldr	r9, [r4, #20]
   161f0:	cmp	r9, #0
   161f4:	bne	16210 <argp_failure@@Base+0x2c0>
   161f8:	ldr	r2, [r4]
   161fc:	cmp	r2, #0
   16200:	bne	1620c <argp_failure@@Base+0x2bc>
   16204:	cmp	r1, #0
   16208:	addeq	r0, r0, #1
   1620c:	mov	r9, r0
   16210:	ldr	r0, [sp, #40]	; 0x28
   16214:	mov	r1, #0
   16218:	str	r9, [r5, #12]
   1621c:	str	r0, [r5, #16]
   16220:	str	sl, [r5, #20]
   16224:	b	16230 <argp_failure@@Base+0x2e0>
   16228:	ldr	r1, [r5, #4]
   1622c:	mov	r4, r0
   16230:	add	r0, r1, #1
   16234:	str	r0, [r5, #4]
   16238:	ldrb	r0, [r4, #12]
   1623c:	tst	r0, #8
   16240:	bne	16294 <argp_failure@@Base+0x344>
   16244:	ldr	r6, [r4, #4]
   16248:	sub	r0, r6, #1
   1624c:	cmp	r0, #254	; 0xfe
   16250:	bhi	16294 <argp_failure@@Base+0x344>
   16254:	bl	11420 <__ctype_b_loc@plt>
   16258:	ldr	r0, [r0]
   1625c:	add	r0, r0, r6, lsl #1
   16260:	ldrb	r0, [r0, #1]
   16264:	tst	r0, #64	; 0x40
   16268:	beq	16294 <argp_failure@@Base+0x344>
   1626c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16270:	ldr	r0, [r0, #8]
   16274:	cmp	r0, r7
   16278:	bcs	16290 <argp_failure@@Base+0x340>
   1627c:	ldrb	r1, [r0], #1
   16280:	uxtb	r2, r6
   16284:	cmp	r1, r2
   16288:	bne	16274 <argp_failure@@Base+0x324>
   1628c:	b	16294 <argp_failure@@Base+0x344>
   16290:	strb	r6, [r7], #1
   16294:	ldr	r1, [r4, #28]
   16298:	add	r0, r4, #24
   1629c:	cmp	r1, #0
   162a0:	bne	162c8 <argp_failure@@Base+0x378>
   162a4:	ldr	r1, [r0]
   162a8:	cmp	r1, #0
   162ac:	bne	162c8 <argp_failure@@Base+0x378>
   162b0:	ldr	r1, [r4, #40]	; 0x28
   162b4:	cmp	r1, #0
   162b8:	bne	162c8 <argp_failure@@Base+0x378>
   162bc:	ldr	r1, [r4, #44]	; 0x2c
   162c0:	cmp	r1, #0
   162c4:	beq	162d4 <argp_failure@@Base+0x384>
   162c8:	ldrb	r1, [r4, #36]	; 0x24
   162cc:	tst	r1, #4
   162d0:	bne	16228 <argp_failure@@Base+0x2d8>
   162d4:	mov	r4, r0
   162d8:	add	r5, r5, #28
   162dc:	mov	r0, r9
   162e0:	ldr	r1, [r4, #4]
   162e4:	cmp	r1, #0
   162e8:	bne	161e4 <argp_failure@@Base+0x294>
   162ec:	ldr	r2, [r4]
   162f0:	cmp	r2, #0
   162f4:	bne	161e4 <argp_failure@@Base+0x294>
   162f8:	ldr	r2, [r4, #16]
   162fc:	cmp	r2, #0
   16300:	bne	161e4 <argp_failure@@Base+0x294>
   16304:	ldr	r2, [r4, #20]
   16308:	cmp	r2, #0
   1630c:	bne	161e4 <argp_failure@@Base+0x294>
   16310:	mov	r0, #0
   16314:	mov	r9, sl
   16318:	ldr	sl, [fp, #-32]	; 0xffffffe0
   1631c:	ldr	r8, [sp, #40]	; 0x28
   16320:	strb	r0, [r7]
   16324:	ldr	r7, [sp, #8]
   16328:	cmp	r7, #0
   1632c:	ldrne	r0, [r7]
   16330:	cmpne	r0, #0
   16334:	bne	16344 <argp_failure@@Base+0x3f4>
   16338:	mov	r0, sl
   1633c:	sub	sp, fp, #28
   16340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16344:	str	r9, [sp, #4]
   16348:	ldr	r4, [r7, #12]
   1634c:	cmp	r4, #0
   16350:	beq	1635c <argp_failure@@Base+0x40c>
   16354:	ldr	r5, [r7, #8]
   16358:	b	1636c <argp_failure@@Base+0x41c>
   1635c:	ldr	r5, [r7, #8]
   16360:	mov	r1, r8
   16364:	cmp	r5, #0
   16368:	beq	163b8 <argp_failure@@Base+0x468>
   1636c:	ldr	r6, [r9, #16]
   16370:	mov	r0, #28
   16374:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   16378:	mov	r1, r0
   1637c:	cmp	r0, #0
   16380:	beq	163b8 <argp_failure@@Base+0x468>
   16384:	sub	r0, r7, r6
   16388:	str	r5, [r1]
   1638c:	cmp	r8, #0
   16390:	asr	r0, r0, #4
   16394:	stmib	r1, {r0, r4, r8, r9}
   16398:	ldr	r3, [sp, #24]
   1639c:	ldrne	r0, [r8, #20]
   163a0:	ldr	r2, [r3]
   163a4:	addne	r0, r0, #1
   163a8:	str	r1, [r3]
   163ac:	moveq	r0, #0
   163b0:	str	r0, [r1, #20]
   163b4:	str	r2, [r1, #24]
   163b8:	ldr	r0, [r7]
   163bc:	bl	16090 <argp_failure@@Base+0x140>
   163c0:	ldr	r1, [sp, #24]
   163c4:	mov	r3, r0
   163c8:	ldr	r2, [r1]
   163cc:	mov	r0, r1
   163d0:	add	r1, r2, #24
   163d4:	cmp	r2, #0
   163d8:	bne	163c8 <argp_failure@@Base+0x478>
   163dc:	ldr	r1, [r3, #12]
   163e0:	str	r1, [r0]
   163e4:	mov	r0, #0
   163e8:	str	r0, [r3, #12]
   163ec:	ldr	r0, [r3, #4]
   163f0:	cmp	r0, #0
   163f4:	beq	1661c <argp_failure@@Base+0x6cc>
   163f8:	ldr	r4, [sl, #4]
   163fc:	cmp	r4, #0
   16400:	beq	165b4 <argp_failure@@Base+0x664>
   16404:	add	r0, r4, r0
   16408:	mov	r5, r3
   1640c:	str	r0, [sp, #12]
   16410:	rsb	r0, r0, r0, lsl #3
   16414:	lsl	r0, r0, #2
   16418:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   1641c:	ldr	r8, [sl, #8]
   16420:	mov	r9, r0
   16424:	mov	r0, r8
   16428:	bl	11438 <strlen@plt>
   1642c:	mov	r6, r0
   16430:	ldr	r0, [r5, #8]
   16434:	str	r5, [sp, #20]
   16438:	bl	11438 <strlen@plt>
   1643c:	add	r0, r6, r0
   16440:	str	r6, [sp, #32]
   16444:	add	r0, r0, #1
   16448:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   1644c:	cmp	r9, #0
   16450:	str	r9, [sp, #16]
   16454:	cmpne	r0, #0
   16458:	beq	16634 <argp_failure@@Base+0x6e4>
   1645c:	ldr	r1, [sp, #12]
   16460:	str	r0, [sp, #36]	; 0x24
   16464:	movw	r0, #37450	; 0x924a
   16468:	movt	r0, #2340	; 0x924
   1646c:	cmp	r1, r0
   16470:	bcs	166b4 <argp_failure@@Base+0x764>
   16474:	ldr	r6, [sp, #16]
   16478:	ldr	r1, [sl]
   1647c:	rsb	r5, r4, r4, lsl #3
   16480:	lsl	r9, r5, #2
   16484:	mov	r2, r9
   16488:	mov	r0, r6
   1648c:	bl	11354 <memcpy@plt>
   16490:	ldr	r2, [sp, #20]
   16494:	add	r0, r6, r5, lsl #2
   16498:	ldm	r2, {r1, r2}
   1649c:	rsb	r2, r2, r2, lsl #3
   164a0:	lsl	r2, r2, #2
   164a4:	bl	11354 <memcpy@plt>
   164a8:	ldr	r5, [sp, #36]	; 0x24
   164ac:	ldr	r2, [sp, #32]
   164b0:	mov	r1, r8
   164b4:	mov	r0, r5
   164b8:	bl	11354 <memcpy@plt>
   164bc:	add	r0, r6, #8
   164c0:	ldr	r1, [r0]
   164c4:	subs	r4, r4, #1
   164c8:	sub	r1, r1, r8
   164cc:	add	r1, r5, r1
   164d0:	str	r1, [r0], #28
   164d4:	bne	164c0 <argp_failure@@Base+0x570>
   164d8:	ldr	r0, [sp, #32]
   164dc:	str	r7, [sp, #8]
   164e0:	add	r4, r5, r0
   164e4:	ldr	r0, [sp, #20]
   164e8:	ldr	r2, [r0, #4]
   164ec:	cmp	r2, #0
   164f0:	beq	165d0 <argp_failure@@Base+0x680>
   164f4:	ldr	r1, [sp, #16]
   164f8:	ldr	r7, [r0, #8]
   164fc:	str	r4, [fp, #-36]	; 0xffffffdc
   16500:	add	r6, r1, r9
   16504:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16508:	str	r2, [sp, #28]
   1650c:	str	r0, [r6, #8]
   16510:	ldr	r9, [r6, #4]
   16514:	cmp	r9, #0
   16518:	beq	165a0 <argp_failure@@Base+0x650>
   1651c:	ldr	sl, [r6]
   16520:	ldrb	r0, [sl, #12]
   16524:	tst	r0, #8
   16528:	bne	16594 <argp_failure@@Base+0x644>
   1652c:	ldr	r5, [sl, #4]
   16530:	sub	r0, r5, #1
   16534:	cmp	r0, #254	; 0xfe
   16538:	bhi	16594 <argp_failure@@Base+0x644>
   1653c:	ldrb	r8, [r7]
   16540:	bl	11420 <__ctype_b_loc@plt>
   16544:	cmp	r5, r8
   16548:	bne	16594 <argp_failure@@Base+0x644>
   1654c:	ldr	r0, [r0]
   16550:	add	r0, r0, r5, lsl #1
   16554:	ldrh	r0, [r0]
   16558:	ands	r0, r0, #16384	; 0x4000
   1655c:	beq	16594 <argp_failure@@Base+0x644>
   16560:	ldr	r0, [sp, #32]
   16564:	cmp	r0, #1
   16568:	ldr	r0, [sp, #36]	; 0x24
   1656c:	blt	16584 <argp_failure@@Base+0x634>
   16570:	ldrb	r1, [r0], #1
   16574:	cmp	r1, r8
   16578:	beq	16590 <argp_failure@@Base+0x640>
   1657c:	cmp	r0, r4
   16580:	bcc	16570 <argp_failure@@Base+0x620>
   16584:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16588:	strb	r8, [r0], #1
   1658c:	str	r0, [fp, #-36]	; 0xffffffdc
   16590:	add	r7, r7, #1
   16594:	subs	r9, r9, #1
   16598:	add	sl, sl, #24
   1659c:	bne	16520 <argp_failure@@Base+0x5d0>
   165a0:	ldr	r2, [sp, #28]
   165a4:	add	r6, r6, #28
   165a8:	subs	r2, r2, #1
   165ac:	bne	16504 <argp_failure@@Base+0x5b4>
   165b0:	b	165d4 <argp_failure@@Base+0x684>
   165b4:	ldr	r1, [r3]
   165b8:	ldr	r2, [r3, #8]
   165bc:	str	r1, [sl]
   165c0:	stmib	sl, {r0, r2}
   165c4:	mov	r0, #0
   165c8:	str	r0, [r3, #4]
   165cc:	b	1661c <argp_failure@@Base+0x6cc>
   165d0:	str	r4, [fp, #-36]	; 0xffffffdc
   165d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   165d8:	ldr	sl, [fp, #-32]	; 0xffffffe0
   165dc:	mov	r0, #0
   165e0:	strb	r0, [r1]
   165e4:	ldr	r0, [sl]
   165e8:	bl	13e2c <argp_parse@@Base+0x126c>
   165ec:	ldr	r0, [sl, #8]
   165f0:	bl	13e2c <argp_parse@@Base+0x126c>
   165f4:	ldr	r0, [sp, #16]
   165f8:	ldr	r8, [sp, #40]	; 0x28
   165fc:	ldr	r9, [sp, #4]
   16600:	ldr	r7, [sp, #8]
   16604:	ldr	r3, [sp, #20]
   16608:	str	r0, [sl]
   1660c:	ldr	r0, [sp, #12]
   16610:	str	r0, [sl, #4]
   16614:	ldr	r0, [sp, #36]	; 0x24
   16618:	str	r0, [sl, #8]
   1661c:	mov	r0, r3
   16620:	bl	16ff0 <argp_failure@@Base+0x10a0>
   16624:	ldr	r0, [r7, #16]!
   16628:	cmp	r0, #0
   1662c:	bne	16348 <argp_failure@@Base+0x3f8>
   16630:	b	16338 <argp_failure@@Base+0x3e8>
   16634:	movw	r0, #45375	; 0xb13f
   16638:	movw	r1, #45191	; 0xb087
   1663c:	movw	r3, #45400	; 0xb158
   16640:	movw	r2, #970	; 0x3ca
   16644:	movt	r0, #1
   16648:	movt	r1, #1
   1664c:	movt	r3, #1
   16650:	bl	11588 <__assert_fail@plt>
   16654:	movw	r0, #45187	; 0xb083
   16658:	movw	r1, #45191	; 0xb087
   1665c:	movw	r3, #45203	; 0xb093
   16660:	movw	r2, #450	; 0x1c2
   16664:	movt	r0, #1
   16668:	movt	r1, #1
   1666c:	movt	r3, #1
   16670:	bl	11588 <__assert_fail@plt>
   16674:	movw	r0, #45267	; 0xb0d3
   16678:	movw	r1, #45191	; 0xb087
   1667c:	movw	r3, #45203	; 0xb093
   16680:	mov	r2, #460	; 0x1cc
   16684:	movt	r0, #1
   16688:	movt	r1, #1
   1668c:	movt	r3, #1
   16690:	bl	11588 <__assert_fail@plt>
   16694:	movw	r0, #45318	; 0xb106
   16698:	movw	r1, #45191	; 0xb087
   1669c:	movw	r3, #45203	; 0xb093
   166a0:	mov	r2, #476	; 0x1dc
   166a4:	movt	r0, #1
   166a8:	movt	r1, #1
   166ac:	movt	r3, #1
   166b0:	bl	11588 <__assert_fail@plt>
   166b4:	movw	r0, #45323	; 0xb10b
   166b8:	movw	r1, #45191	; 0xb087
   166bc:	movw	r3, #45400	; 0xb158
   166c0:	mov	r2, #972	; 0x3cc
   166c4:	movt	r0, #1
   166c8:	movt	r1, #1
   166cc:	movt	r3, #1
   166d0:	bl	11588 <__assert_fail@plt>
   166d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   166d8:	add	fp, sp, #24
   166dc:	ldr	r6, [r0, #4]
   166e0:	cmp	r6, #0
   166e4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   166e8:	ldr	r5, [r0]
   166ec:	mov	r8, r1
   166f0:	ldr	r7, [r5, #4]
   166f4:	cmp	r7, #0
   166f8:	beq	16738 <argp_failure@@Base+0x7e8>
   166fc:	ldr	r0, [r5]
   16700:	add	r4, r0, #12
   16704:	ldr	r0, [r4, #-12]
   16708:	cmp	r0, #0
   1670c:	beq	1672c <argp_failure@@Base+0x7dc>
   16710:	ldrb	r1, [r4]
   16714:	tst	r1, #2
   16718:	bne	1672c <argp_failure@@Base+0x7dc>
   1671c:	mov	r1, r8
   16720:	bl	112e8 <strcmp@plt>
   16724:	cmp	r0, #0
   16728:	beq	16748 <argp_failure@@Base+0x7f8>
   1672c:	subs	r7, r7, #1
   16730:	add	r4, r4, #24
   16734:	bne	16704 <argp_failure@@Base+0x7b4>
   16738:	subs	r6, r6, #1
   1673c:	add	r5, r5, #28
   16740:	bne	166f0 <argp_failure@@Base+0x7a0>
   16744:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16748:	cmp	r5, #0
   1674c:	mvnne	r0, #0
   16750:	strne	r0, [r5, #12]
   16754:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16758:	push	{r4, r5, fp, lr}
   1675c:	add	fp, sp, #8
   16760:	mov	r1, r0
   16764:	ldr	r0, [r0, #8]
   16768:	ldr	r5, [r1, #16]
   1676c:	cmp	r0, #0
   16770:	beq	1678c <argp_failure@@Base+0x83c>
   16774:	mov	r1, #10
   16778:	bl	11444 <strchr@plt>
   1677c:	mov	r4, r0
   16780:	cmp	r0, #0
   16784:	movwne	r4, #1
   16788:	b	16790 <argp_failure@@Base+0x840>
   1678c:	mov	r4, #0
   16790:	cmp	r5, #0
   16794:	ldrne	r0, [r5]
   16798:	cmpne	r0, #0
   1679c:	beq	167b8 <argp_failure@@Base+0x868>
   167a0:	add	r5, r5, #16
   167a4:	bl	16758 <argp_failure@@Base+0x808>
   167a8:	add	r4, r0, r4
   167ac:	ldr	r0, [r5], #16
   167b0:	cmp	r0, #0
   167b4:	bne	167a4 <argp_failure@@Base+0x854>
   167b8:	mov	r0, r4
   167bc:	pop	{r4, r5, fp, pc}
   167c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167c4:	add	fp, sp, #28
   167c8:	sub	sp, sp, #12
   167cc:	ldr	r4, [r0, #4]
   167d0:	cmp	r4, #0
   167d4:	beq	16950 <argp_failure@@Base+0xa00>
   167d8:	mov	r8, r0
   167dc:	ldr	r0, [r0, #8]
   167e0:	mov	sl, r1
   167e4:	bl	11438 <strlen@plt>
   167e8:	add	r0, r0, #8
   167ec:	bic	r0, r0, #7
   167f0:	sub	r9, sp, r0
   167f4:	mov	sp, r9
   167f8:	str	r9, [fp, #-36]	; 0xffffffdc
   167fc:	movw	r5, #30132	; 0x75b4
   16800:	sub	r6, fp, #36	; 0x24
   16804:	ldr	r7, [r8]
   16808:	movt	r5, #1
   1680c:	ldr	r0, [r7, #20]
   16810:	mov	r1, r5
   16814:	mov	r3, r6
   16818:	ldr	r2, [r0, #24]
   1681c:	mov	r0, r7
   16820:	bl	174a4 <argp_failure@@Base+0x1554>
   16824:	subs	r4, r4, #1
   16828:	add	r7, r7, #28
   1682c:	bne	1680c <argp_failure@@Base+0x8bc>
   16830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16834:	cmp	r0, r9
   16838:	bls	16860 <argp_failure@@Base+0x910>
   1683c:	add	r1, r0, #1
   16840:	mov	r2, r9
   16844:	str	r1, [fp, #-36]	; 0xffffffdc
   16848:	mov	r1, #0
   1684c:	strb	r1, [r0]
   16850:	movw	r1, #45444	; 0xb184
   16854:	mov	r0, sl
   16858:	movt	r1, #1
   1685c:	bl	18f00 <argp_failure@@Base+0x2fb0>
   16860:	ldr	r4, [r8, #4]
   16864:	cmp	r4, #0
   16868:	beq	16950 <argp_failure@@Base+0xa00>
   1686c:	ldr	r5, [r8]
   16870:	movw	r6, #30204	; 0x75fc
   16874:	movt	r6, #1
   16878:	ldr	r0, [r5, #20]
   1687c:	mov	r1, r6
   16880:	mov	r3, sl
   16884:	ldr	r2, [r0, #24]
   16888:	mov	r0, r5
   1688c:	bl	174a4 <argp_failure@@Base+0x1554>
   16890:	subs	r4, r4, #1
   16894:	add	r5, r5, #28
   16898:	bne	16878 <argp_failure@@Base+0x928>
   1689c:	ldr	r6, [r8, #4]
   168a0:	cmp	r6, #0
   168a4:	beq	16950 <argp_failure@@Base+0xa00>
   168a8:	ldr	r7, [r8]
   168ac:	movw	r4, #45495	; 0xb1b7
   168b0:	movt	r4, #1
   168b4:	ldr	r5, [r7, #4]
   168b8:	cmp	r5, #0
   168bc:	beq	16944 <argp_failure@@Base+0x9f4>
   168c0:	ldr	r9, [r7]
   168c4:	mov	r8, r9
   168c8:	ldr	r2, [r8]
   168cc:	cmp	r2, #0
   168d0:	beq	16938 <argp_failure@@Base+0x9e8>
   168d4:	ldr	r0, [r8, #12]
   168d8:	tst	r0, #4
   168dc:	moveq	r9, r8
   168e0:	tst	r0, #2
   168e4:	bne	16938 <argp_failure@@Base+0x9e8>
   168e8:	ldr	r3, [r8, #8]
   168ec:	ldr	r1, [r9, #12]
   168f0:	cmp	r3, #0
   168f4:	orr	r0, r1, r0
   168f8:	ldreq	r3, [r9, #8]
   168fc:	tst	r0, #16
   16900:	bne	16938 <argp_failure@@Base+0x9e8>
   16904:	cmp	r3, #0
   16908:	beq	1692c <argp_failure@@Base+0x9dc>
   1690c:	tst	r0, #1
   16910:	mov	r0, sl
   16914:	movweq	r1, #45484	; 0xb1ac
   16918:	movteq	r1, #1
   1691c:	movwne	r1, #45471	; 0xb19f
   16920:	movtne	r1, #1
   16924:	bl	18f00 <argp_failure@@Base+0x2fb0>
   16928:	b	16938 <argp_failure@@Base+0x9e8>
   1692c:	mov	r0, sl
   16930:	mov	r1, r4
   16934:	bl	18f00 <argp_failure@@Base+0x2fb0>
   16938:	subs	r5, r5, #1
   1693c:	add	r8, r8, #24
   16940:	bne	168c8 <argp_failure@@Base+0x978>
   16944:	subs	r6, r6, #1
   16948:	add	r7, r7, #28
   1694c:	bne	168b4 <argp_failure@@Base+0x964>
   16950:	sub	sp, fp, #28
   16954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1695c:	add	fp, sp, #28
   16960:	sub	sp, sp, #28
   16964:	mov	r7, r0
   16968:	ldr	r6, [r0, #8]
   1696c:	ldr	r0, [r0, #16]
   16970:	ldr	sl, [r2]
   16974:	mov	r4, r3
   16978:	mov	r9, r2
   1697c:	mov	r8, r1
   16980:	cmp	r7, #0
   16984:	str	r0, [sp, #24]
   16988:	mov	r0, r6
   1698c:	beq	169c4 <argp_failure@@Base+0xa74>
   16990:	ldr	r0, [r7, #20]
   16994:	cmp	r0, #0
   16998:	mov	r0, r6
   1699c:	beq	169c4 <argp_failure@@Base+0xa74>
   169a0:	mov	r0, r7
   169a4:	mov	r1, r8
   169a8:	bl	137b8 <argp_parse@@Base+0xbf8>
   169ac:	ldr	r3, [r7, #20]
   169b0:	mov	r2, r0
   169b4:	movw	r0, #6
   169b8:	mov	r1, r6
   169bc:	movt	r0, #512	; 0x200
   169c0:	blx	r3
   169c4:	ldr	r5, [fp, #8]
   169c8:	cmp	r0, #0
   169cc:	beq	16a2c <argp_failure@@Base+0xadc>
   169d0:	mov	r1, #10
   169d4:	mov	r5, r0
   169d8:	bl	1130c <strchrnul@plt>
   169dc:	mov	r7, r0
   169e0:	ldrb	r0, [r0]
   169e4:	str	sl, [sp, #8]
   169e8:	str	r6, [sp, #12]
   169ec:	str	r5, [sp, #16]
   169f0:	cmp	r0, #0
   169f4:	beq	16a3c <argp_failure@@Base+0xaec>
   169f8:	ldrb	r6, [sl]
   169fc:	cmp	r6, #0
   16a00:	beq	16a48 <argp_failure@@Base+0xaf8>
   16a04:	mov	r5, #0
   16a08:	add	sl, r7, #1
   16a0c:	mov	r1, #10
   16a10:	mov	r0, sl
   16a14:	bl	1130c <strchrnul@plt>
   16a18:	add	r5, r5, #1
   16a1c:	mov	r7, r0
   16a20:	cmp	r5, r6
   16a24:	bcc	16a08 <argp_failure@@Base+0xab8>
   16a28:	b	16a4c <argp_failure@@Base+0xafc>
   16a2c:	mov	r0, #0
   16a30:	mov	r7, #0
   16a34:	str	r0, [sp, #20]
   16a38:	b	16ae0 <argp_failure@@Base+0xb90>
   16a3c:	mov	r0, #0
   16a40:	mov	sl, r5
   16a44:	b	16a5c <argp_failure@@Base+0xb0c>
   16a48:	ldr	sl, [sp, #16]
   16a4c:	ldr	r0, [r9]
   16a50:	add	r0, r0, #1
   16a54:	str	r0, [r9]
   16a58:	mov	r0, #1
   16a5c:	str	r0, [sp, #20]
   16a60:	ldr	r6, [fp, #8]
   16a64:	add	r0, r7, #1
   16a68:	sub	r1, r0, sl
   16a6c:	mov	r0, r6
   16a70:	bl	17680 <argp_failure@@Base+0x1730>
   16a74:	ldr	r0, [r6, #28]
   16a78:	ldr	r1, [r6, #32]
   16a7c:	sub	r5, r7, sl
   16a80:	add	r2, r0, r5
   16a84:	cmp	r2, r1
   16a88:	bls	16aa8 <argp_failure@@Base+0xb58>
   16a8c:	mov	r0, r6
   16a90:	mov	r1, r5
   16a94:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16a98:	cmp	r0, #0
   16a9c:	beq	16ac0 <argp_failure@@Base+0xb70>
   16aa0:	ldr	r6, [fp, #8]
   16aa4:	ldr	r0, [r6, #28]
   16aa8:	mov	r1, sl
   16aac:	mov	r2, r5
   16ab0:	bl	11354 <memcpy@plt>
   16ab4:	ldr	r0, [r6, #28]
   16ab8:	add	r0, r0, r5
   16abc:	str	r0, [r6, #28]
   16ac0:	ldr	r0, [sp, #12]
   16ac4:	ldr	r1, [sp, #16]
   16ac8:	cmp	r1, r0
   16acc:	beq	16ad8 <argp_failure@@Base+0xb88>
   16ad0:	mov	r0, r1
   16ad4:	bl	13e2c <argp_parse@@Base+0x126c>
   16ad8:	ldr	sl, [sp, #8]
   16adc:	ldr	r5, [fp, #8]
   16ae0:	ldr	r1, [sp, #24]
   16ae4:	cmp	r1, #0
   16ae8:	ldrne	r0, [r1]
   16aec:	cmpne	r0, #0
   16af0:	beq	16b24 <argp_failure@@Base+0xbd4>
   16af4:	add	r6, r1, #16
   16af8:	mov	r1, r8
   16afc:	mov	r2, r9
   16b00:	mov	r3, r4
   16b04:	str	r5, [sp]
   16b08:	bl	16958 <argp_failure@@Base+0xa08>
   16b0c:	clz	r1, r0
   16b10:	ldr	r0, [r6], #16
   16b14:	lsr	r4, r1, #5
   16b18:	cmp	r0, #0
   16b1c:	bne	16af8 <argp_failure@@Base+0xba8>
   16b20:	lsr	r4, r1, #5
   16b24:	ldr	r0, [sp, #20]
   16b28:	cmp	r0, #0
   16b2c:	cmpne	r4, #0
   16b30:	bne	16b44 <argp_failure@@Base+0xbf4>
   16b34:	clz	r0, r4
   16b38:	lsr	r0, r0, #5
   16b3c:	sub	sp, fp, #28
   16b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b44:	ldrb	r1, [r7]
   16b48:	ldrb	r0, [sl]
   16b4c:	cmp	r1, #0
   16b50:	beq	16b64 <argp_failure@@Base+0xc14>
   16b54:	add	r0, r0, #1
   16b58:	mov	r4, #0
   16b5c:	strb	r0, [sl]
   16b60:	b	16b34 <argp_failure@@Base+0xbe4>
   16b64:	cmp	r0, #0
   16b68:	movne	r0, #0
   16b6c:	strbne	r0, [sl]
   16b70:	b	16b34 <argp_failure@@Base+0xbe4>
   16b74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b78:	add	fp, sp, #28
   16b7c:	sub	sp, sp, #28
   16b80:	ldr	r7, [r0, #12]
   16b84:	ldr	r8, [r0, #16]
   16b88:	mov	r6, r0
   16b8c:	mov	sl, r3
   16b90:	str	r1, [sp, #24]
   16b94:	str	r3, [sp, #20]
   16b98:	str	r2, [sp, #16]
   16b9c:	cmp	r7, #0
   16ba0:	beq	16be8 <argp_failure@@Base+0xc98>
   16ba4:	mov	r0, #0
   16ba8:	mov	r1, #11
   16bac:	mov	r5, r2
   16bb0:	str	r0, [sp, #12]
   16bb4:	mov	r0, r7
   16bb8:	bl	11444 <strchr@plt>
   16bbc:	cmp	r0, #0
   16bc0:	mov	r9, r0
   16bc4:	mov	r4, r0
   16bc8:	subne	r9, r9, r7
   16bcc:	cmp	r5, #0
   16bd0:	movne	r9, #0
   16bd4:	cmp	r0, #0
   16bd8:	addne	r4, r4, #1
   16bdc:	cmp	r5, #0
   16be0:	moveq	r4, r7
   16be4:	b	16bf8 <argp_failure@@Base+0xca8>
   16be8:	mov	r0, #0
   16bec:	mov	r9, #0
   16bf0:	mov	r4, #0
   16bf4:	str	r0, [sp, #12]
   16bf8:	ldr	r0, [r6, #20]
   16bfc:	movw	r7, #1
   16c00:	mov	r5, r8
   16c04:	movt	r7, #512	; 0x200
   16c08:	cmp	r0, #0
   16c0c:	beq	16c60 <argp_failure@@Base+0xd10>
   16c10:	cmp	r9, #0
   16c14:	beq	16c28 <argp_failure@@Base+0xcd8>
   16c18:	mov	r0, r4
   16c1c:	mov	r1, r9
   16c20:	bl	11348 <strndup@plt>
   16c24:	mov	r4, r0
   16c28:	ldr	r1, [sp, #24]
   16c2c:	mov	r0, r6
   16c30:	bl	137b8 <argp_parse@@Base+0xbf8>
   16c34:	mov	r2, r0
   16c38:	ldr	r0, [sp, #16]
   16c3c:	ldr	r3, [r6, #20]
   16c40:	mov	r1, r4
   16c44:	str	r2, [sp, #12]
   16c48:	cmp	r0, #0
   16c4c:	mov	r0, r7
   16c50:	addne	r0, r0, #1
   16c54:	blx	r3
   16c58:	mov	r8, r0
   16c5c:	b	16c64 <argp_failure@@Base+0xd14>
   16c60:	mov	r8, r4
   16c64:	cmp	r8, #0
   16c68:	beq	16d10 <argp_failure@@Base+0xdc0>
   16c6c:	ldr	r0, [sp, #20]
   16c70:	cmp	r0, #0
   16c74:	beq	16cb4 <argp_failure@@Base+0xd64>
   16c78:	ldr	r0, [fp, #12]
   16c7c:	ldr	r2, [r0, #28]
   16c80:	ldr	r1, [r0, #32]
   16c84:	cmp	r2, r1
   16c88:	bcc	16ca4 <argp_failure@@Base+0xd54>
   16c8c:	mov	r1, #1
   16c90:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16c94:	cmp	r0, #0
   16c98:	beq	16cb4 <argp_failure@@Base+0xd64>
   16c9c:	ldr	r0, [fp, #12]
   16ca0:	ldr	r2, [r0, #28]
   16ca4:	add	r1, r2, #1
   16ca8:	str	r1, [r0, #28]
   16cac:	mov	r1, #10
   16cb0:	strb	r1, [r2]
   16cb4:	cmp	r9, #0
   16cb8:	str	r5, [sp, #8]
   16cbc:	beq	16d18 <argp_failure@@Base+0xdc8>
   16cc0:	cmp	r8, r4
   16cc4:	bne	16d18 <argp_failure@@Base+0xdc8>
   16cc8:	ldr	r5, [fp, #12]
   16ccc:	ldr	r0, [r5, #28]!
   16cd0:	ldr	r2, [r5, #4]
   16cd4:	add	r1, r0, r9
   16cd8:	cmp	r1, r2
   16cdc:	bls	16cf8 <argp_failure@@Base+0xda8>
   16ce0:	ldr	r0, [fp, #12]
   16ce4:	mov	r1, r9
   16ce8:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16cec:	cmp	r0, #0
   16cf0:	beq	16d78 <argp_failure@@Base+0xe28>
   16cf4:	ldr	r0, [r5]
   16cf8:	mov	r1, r4
   16cfc:	mov	r2, r9
   16d00:	bl	11354 <memcpy@plt>
   16d04:	ldr	r0, [r5]
   16d08:	add	r0, r0, r9
   16d0c:	b	16d74 <argp_failure@@Base+0xe24>
   16d10:	mov	sl, #0
   16d14:	b	16e08 <argp_failure@@Base+0xeb8>
   16d18:	mov	r0, r8
   16d1c:	bl	11438 <strlen@plt>
   16d20:	ldr	r1, [fp, #12]
   16d24:	cmp	r0, #0
   16d28:	add	r5, r1, #28
   16d2c:	beq	16d78 <argp_failure@@Base+0xe28>
   16d30:	mov	r7, r0
   16d34:	ldr	r0, [r1, #28]
   16d38:	ldr	r1, [r1, #32]
   16d3c:	add	r2, r0, r7
   16d40:	cmp	r2, r1
   16d44:	bls	16d60 <argp_failure@@Base+0xe10>
   16d48:	ldr	r0, [fp, #12]
   16d4c:	mov	r1, r7
   16d50:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16d54:	cmp	r0, #0
   16d58:	beq	16d78 <argp_failure@@Base+0xe28>
   16d5c:	ldr	r0, [r5]
   16d60:	mov	r1, r8
   16d64:	mov	r2, r7
   16d68:	bl	11354 <memcpy@plt>
   16d6c:	ldr	r0, [r5]
   16d70:	add	r0, r0, r7
   16d74:	str	r0, [r5]
   16d78:	ldr	r7, [fp, #12]
   16d7c:	ldr	r2, [r5]
   16d80:	ldr	r1, [r7, #24]
   16d84:	ldr	r0, [r7, #16]
   16d88:	sub	r1, r2, r1
   16d8c:	cmp	r1, r0
   16d90:	bls	16d9c <argp_failure@@Base+0xe4c>
   16d94:	mov	r0, r7
   16d98:	bl	189a0 <argp_failure@@Base+0x2a50>
   16d9c:	ldr	r1, [r7, #20]
   16da0:	ldr	r0, [r7, #4]
   16da4:	bic	r1, r1, r1, asr #31
   16da8:	cmp	r1, r0
   16dac:	bls	16df0 <argp_failure@@Base+0xea0>
   16db0:	ldr	r0, [fp, #12]
   16db4:	mov	r1, r0
   16db8:	ldr	r0, [r0, #28]
   16dbc:	ldr	r1, [r1, #32]
   16dc0:	cmp	r0, r1
   16dc4:	bcc	16de0 <argp_failure@@Base+0xe90>
   16dc8:	ldr	r0, [fp, #12]
   16dcc:	mov	r1, #1
   16dd0:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16dd4:	cmp	r0, #0
   16dd8:	beq	16df0 <argp_failure@@Base+0xea0>
   16ddc:	ldr	r0, [r5]
   16de0:	add	r1, r0, #1
   16de4:	str	r1, [r5]
   16de8:	mov	r1, #10
   16dec:	strb	r1, [r0]
   16df0:	mov	sl, #1
   16df4:	cmp	r8, r4
   16df8:	beq	16e04 <argp_failure@@Base+0xeb4>
   16dfc:	mov	r0, r8
   16e00:	bl	13e2c <argp_parse@@Base+0x126c>
   16e04:	ldr	r5, [sp, #8]
   16e08:	cmp	r9, #0
   16e0c:	beq	16e28 <argp_failure@@Base+0xed8>
   16e10:	cmp	r4, #0
   16e14:	ldrne	r0, [r6, #20]
   16e18:	cmpne	r0, #0
   16e1c:	beq	16e28 <argp_failure@@Base+0xed8>
   16e20:	mov	r0, r4
   16e24:	bl	13e2c <argp_parse@@Base+0x126c>
   16e28:	ldr	r7, [sp, #16]
   16e2c:	ldr	r9, [sp, #24]
   16e30:	ldr	r8, [sp, #20]
   16e34:	cmp	r7, #0
   16e38:	ldrne	r3, [r6, #20]
   16e3c:	cmpne	r3, #0
   16e40:	bne	16e64 <argp_failure@@Base+0xf14>
   16e44:	ldr	r6, [fp, #12]
   16e48:	cmp	r5, #0
   16e4c:	ldrne	r0, [r5]
   16e50:	cmpne	r0, #0
   16e54:	bne	16fb0 <argp_failure@@Base+0x1060>
   16e58:	mov	r0, sl
   16e5c:	sub	sp, fp, #28
   16e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e64:	ldr	r2, [sp, #12]
   16e68:	movw	r0, #1
   16e6c:	mov	r1, #0
   16e70:	movt	r0, #512	; 0x200
   16e74:	add	r0, r0, #3
   16e78:	blx	r3
   16e7c:	ldr	r6, [fp, #12]
   16e80:	cmp	r0, #0
   16e84:	beq	16e48 <argp_failure@@Base+0xef8>
   16e88:	mov	r4, r0
   16e8c:	orrs	r0, sl, r8
   16e90:	beq	16ecc <argp_failure@@Base+0xf7c>
   16e94:	ldr	r0, [r6, #28]
   16e98:	ldr	r1, [r6, #32]
   16e9c:	cmp	r0, r1
   16ea0:	bcc	16ebc <argp_failure@@Base+0xf6c>
   16ea4:	mov	r0, r6
   16ea8:	mov	r1, #1
   16eac:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16eb0:	cmp	r0, #0
   16eb4:	beq	16ecc <argp_failure@@Base+0xf7c>
   16eb8:	ldr	r0, [r6, #28]
   16ebc:	add	r1, r0, #1
   16ec0:	str	r1, [r6, #28]
   16ec4:	mov	r1, #10
   16ec8:	strb	r1, [r0]
   16ecc:	mov	r0, r4
   16ed0:	mov	sl, r5
   16ed4:	bl	11438 <strlen@plt>
   16ed8:	cmp	r0, #0
   16edc:	beq	16f28 <argp_failure@@Base+0xfd8>
   16ee0:	mov	r5, r0
   16ee4:	ldr	r0, [r6, #28]
   16ee8:	ldr	r1, [r6, #32]
   16eec:	add	r2, r0, r5
   16ef0:	cmp	r2, r1
   16ef4:	bls	16f10 <argp_failure@@Base+0xfc0>
   16ef8:	mov	r0, r6
   16efc:	mov	r1, r5
   16f00:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16f04:	cmp	r0, #0
   16f08:	beq	16f28 <argp_failure@@Base+0xfd8>
   16f0c:	ldr	r0, [r6, #28]
   16f10:	mov	r1, r4
   16f14:	mov	r2, r5
   16f18:	bl	11354 <memcpy@plt>
   16f1c:	ldr	r0, [r6, #28]
   16f20:	add	r0, r0, r5
   16f24:	str	r0, [r6, #28]
   16f28:	mov	r0, r4
   16f2c:	bl	13e2c <argp_parse@@Base+0x126c>
   16f30:	ldr	r1, [r6, #24]
   16f34:	ldr	r2, [r6, #28]
   16f38:	ldr	r0, [r6, #16]
   16f3c:	mov	r5, sl
   16f40:	sub	r1, r2, r1
   16f44:	cmp	r1, r0
   16f48:	bls	16f54 <argp_failure@@Base+0x1004>
   16f4c:	mov	r0, r6
   16f50:	bl	189a0 <argp_failure@@Base+0x2a50>
   16f54:	ldr	r1, [r6, #20]
   16f58:	ldr	r0, [r6, #4]
   16f5c:	mov	sl, #1
   16f60:	bic	r1, r1, r1, asr #31
   16f64:	cmp	r1, r0
   16f68:	bls	16e48 <argp_failure@@Base+0xef8>
   16f6c:	ldr	r0, [r6, #28]
   16f70:	ldr	r1, [r6, #32]
   16f74:	cmp	r0, r1
   16f78:	bcc	16f98 <argp_failure@@Base+0x1048>
   16f7c:	mov	r0, r6
   16f80:	mov	r1, #1
   16f84:	mov	sl, #1
   16f88:	bl	18e18 <argp_failure@@Base+0x2ec8>
   16f8c:	cmp	r0, #0
   16f90:	beq	16e48 <argp_failure@@Base+0xef8>
   16f94:	ldr	r0, [r6, #28]
   16f98:	add	r1, r0, #1
   16f9c:	mov	sl, #1
   16fa0:	str	r1, [r6, #28]
   16fa4:	mov	r1, #10
   16fa8:	strb	r1, [r0]
   16fac:	b	16e48 <argp_failure@@Base+0xef8>
   16fb0:	ldr	r4, [fp, #8]
   16fb4:	add	r5, r5, #16
   16fb8:	cmp	r4, #0
   16fbc:	cmpne	sl, #0
   16fc0:	bne	16e58 <argp_failure@@Base+0xf08>
   16fc4:	orrs	r3, sl, r8
   16fc8:	mov	r1, r9
   16fcc:	mov	r2, r7
   16fd0:	stm	sp, {r4, r6}
   16fd4:	movwne	r3, #1
   16fd8:	bl	16b74 <argp_failure@@Base+0xc24>
   16fdc:	orr	sl, r0, sl
   16fe0:	ldr	r0, [r5], #16
   16fe4:	cmp	r0, #0
   16fe8:	bne	16fb8 <argp_failure@@Base+0x1068>
   16fec:	b	16e58 <argp_failure@@Base+0xf08>
   16ff0:	push	{r4, r5, fp, lr}
   16ff4:	add	fp, sp, #8
   16ff8:	mov	r4, r0
   16ffc:	ldr	r0, [r0, #12]
   17000:	cmp	r0, #0
   17004:	beq	1701c <argp_failure@@Base+0x10cc>
   17008:	ldr	r5, [r0, #24]
   1700c:	bl	13e2c <argp_parse@@Base+0x126c>
   17010:	cmp	r5, #0
   17014:	mov	r0, r5
   17018:	bne	17008 <argp_failure@@Base+0x10b8>
   1701c:	ldr	r0, [r4, #4]
   17020:	cmp	r0, #0
   17024:	beq	17038 <argp_failure@@Base+0x10e8>
   17028:	ldr	r0, [r4]
   1702c:	bl	13e2c <argp_parse@@Base+0x126c>
   17030:	ldr	r0, [r4, #8]
   17034:	bl	13e2c <argp_parse@@Base+0x126c>
   17038:	mov	r0, r4
   1703c:	pop	{r4, r5, fp, lr}
   17040:	b	13e2c <argp_parse@@Base+0x126c>
   17044:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17048:	add	fp, sp, #24
   1704c:	sub	sp, sp, #8
   17050:	mov	r5, r0
   17054:	ldr	r0, [r0, #16]
   17058:	mov	r4, r1
   1705c:	cmp	r0, #0
   17060:	beq	17080 <argp_failure@@Base+0x1130>
   17064:	mov	r2, r0
   17068:	mov	r1, r2
   1706c:	ldr	r2, [r2, #12]
   17070:	cmp	r2, #0
   17074:	bne	17068 <argp_failure@@Base+0x1118>
   17078:	add	r2, r1, #8
   1707c:	b	17084 <argp_failure@@Base+0x1134>
   17080:	add	r2, r5, #12
   17084:	ldr	r1, [r4, #16]
   17088:	ldr	r3, [r2]
   1708c:	cmp	r1, #0
   17090:	beq	170b0 <argp_failure@@Base+0x1160>
   17094:	mov	r2, r1
   17098:	mov	r7, r2
   1709c:	ldr	r2, [r2, #12]
   170a0:	cmp	r2, #0
   170a4:	bne	17098 <argp_failure@@Base+0x1148>
   170a8:	add	r2, r7, #8
   170ac:	b	170b4 <argp_failure@@Base+0x1164>
   170b0:	add	r2, r4, #12
   170b4:	ldr	r7, [r2]
   170b8:	orr	r6, r7, r3
   170bc:	sub	r2, r3, r7
   170c0:	cmn	r6, #1
   170c4:	mov	r6, r2
   170c8:	suble	r6, r7, r3
   170cc:	and	r3, r7, r3
   170d0:	cmp	r3, #0
   170d4:	movlt	r6, r2
   170d8:	cmp	r6, #0
   170dc:	bne	170fc <argp_failure@@Base+0x11ac>
   170e0:	cmp	r0, #0
   170e4:	mov	r6, r0
   170e8:	movwne	r6, #1
   170ec:	cmp	r1, #0
   170f0:	subne	r6, r6, #1
   170f4:	cmp	r6, #0
   170f8:	beq	17108 <argp_failure@@Base+0x11b8>
   170fc:	mov	r0, r6
   17100:	sub	sp, fp, #24
   17104:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17108:	cmp	r0, #0
   1710c:	beq	1717c <argp_failure@@Base+0x122c>
   17110:	ldr	r3, [r1, #20]
   17114:	ldr	r2, [r0, #20]
   17118:	cmp	r2, r3
   1711c:	ble	17144 <argp_failure@@Base+0x11f4>
   17120:	ldr	r0, [r0, #12]
   17124:	ldr	r2, [r0, #20]
   17128:	cmp	r2, r3
   1712c:	bgt	17120 <argp_failure@@Base+0x11d0>
   17130:	bl	1743c <argp_failure@@Base+0x14ec>
   17134:	mov	r6, r0
   17138:	cmp	r0, #0
   1713c:	movweq	r6, #1
   17140:	b	170fc <argp_failure@@Base+0x11ac>
   17144:	bge	1716c <argp_failure@@Base+0x121c>
   17148:	ldr	r1, [r1, #12]
   1714c:	ldr	r3, [r1, #20]
   17150:	cmp	r2, r3
   17154:	blt	17148 <argp_failure@@Base+0x11f8>
   17158:	bl	1743c <argp_failure@@Base+0x14ec>
   1715c:	mov	r6, r0
   17160:	cmp	r0, #0
   17164:	mvneq	r6, #0
   17168:	b	170fc <argp_failure@@Base+0x11ac>
   1716c:	bl	1743c <argp_failure@@Base+0x14ec>
   17170:	mov	r6, r0
   17174:	cmp	r0, #0
   17178:	bne	170fc <argp_failure@@Base+0x11ac>
   1717c:	ldr	r0, [r5, #12]
   17180:	ldr	r1, [r4, #12]
   17184:	orr	r2, r1, r0
   17188:	sub	r3, r0, r1
   1718c:	cmn	r2, #1
   17190:	mov	r6, r3
   17194:	suble	r6, r1, r0
   17198:	and	r0, r1, r0
   1719c:	cmp	r0, #0
   171a0:	movlt	r6, r3
   171a4:	cmp	r6, #0
   171a8:	bne	170fc <argp_failure@@Base+0x11ac>
   171ac:	ldr	r1, [r5, #4]
   171b0:	mov	r0, #0
   171b4:	cmp	r1, #0
   171b8:	beq	171ec <argp_failure@@Base+0x129c>
   171bc:	ldr	r0, [r5]
   171c0:	add	r2, r0, #12
   171c4:	ldr	r0, [r2, #-12]
   171c8:	cmp	r0, #0
   171cc:	beq	171dc <argp_failure@@Base+0x128c>
   171d0:	ldrb	r3, [r2]
   171d4:	tst	r3, #2
   171d8:	beq	171ec <argp_failure@@Base+0x129c>
   171dc:	add	r2, r2, #24
   171e0:	subs	r1, r1, #1
   171e4:	bne	171c4 <argp_failure@@Base+0x1274>
   171e8:	mov	r0, #0
   171ec:	str	r0, [sp, #4]
   171f0:	ldr	r1, [r4, #4]
   171f4:	cmp	r1, #0
   171f8:	beq	17228 <argp_failure@@Base+0x12d8>
   171fc:	ldr	r2, [r4]
   17200:	add	r2, r2, #12
   17204:	ldr	r6, [r2, #-12]
   17208:	cmp	r6, #0
   1720c:	beq	1721c <argp_failure@@Base+0x12cc>
   17210:	ldrb	r3, [r2]
   17214:	tst	r3, #2
   17218:	beq	1722c <argp_failure@@Base+0x12dc>
   1721c:	add	r2, r2, #24
   17220:	subs	r1, r1, #1
   17224:	bne	17204 <argp_failure@@Base+0x12b4>
   17228:	mov	r6, #0
   1722c:	mov	r8, #0
   17230:	cmp	r0, #0
   17234:	mov	r7, #0
   17238:	str	r6, [sp]
   1723c:	beq	17268 <argp_failure@@Base+0x1318>
   17240:	ldr	r0, [r5]
   17244:	mov	r7, #0
   17248:	ldr	r0, [r0, #12]
   1724c:	ands	r0, r0, #8
   17250:	beq	17268 <argp_failure@@Base+0x1318>
   17254:	add	r0, sp, #4
   17258:	bl	173a0 <argp_failure@@Base+0x1450>
   1725c:	mov	r7, r0
   17260:	cmp	r0, #0
   17264:	movwne	r7, #1
   17268:	cmp	r6, #0
   1726c:	ldrne	r0, [r4]
   17270:	ldrne	r0, [r0, #12]
   17274:	andsne	r0, r0, #8
   17278:	beq	17290 <argp_failure@@Base+0x1340>
   1727c:	mov	r0, sp
   17280:	bl	173a0 <argp_failure@@Base+0x1450>
   17284:	mov	r8, r0
   17288:	cmp	r0, #0
   1728c:	movwne	r8, #1
   17290:	subs	r6, r7, r8
   17294:	bne	170fc <argp_failure@@Base+0x11ac>
   17298:	ldr	r0, [r5, #20]
   1729c:	movw	r6, #30060	; 0x756c
   172a0:	mov	r3, #0
   172a4:	movt	r6, #1
   172a8:	mov	r1, r6
   172ac:	ldr	r2, [r0, #24]
   172b0:	mov	r0, r5
   172b4:	bl	174a4 <argp_failure@@Base+0x1554>
   172b8:	mov	r5, r0
   172bc:	ldr	r0, [r4, #20]
   172c0:	mov	r1, r6
   172c4:	mov	r3, #0
   172c8:	ldr	r2, [r0, #24]
   172cc:	mov	r0, r4
   172d0:	bl	174a4 <argp_failure@@Base+0x1554>
   172d4:	mov	r4, r0
   172d8:	mov	r7, r0
   172dc:	tst	r5, #255	; 0xff
   172e0:	mov	r6, r5
   172e4:	bne	172f8 <argp_failure@@Base+0x13a8>
   172e8:	ldr	r0, [sp, #4]
   172ec:	mov	r6, #0
   172f0:	cmp	r0, #0
   172f4:	ldrbne	r6, [r0]
   172f8:	tst	r4, #255	; 0xff
   172fc:	bne	17310 <argp_failure@@Base+0x13c0>
   17300:	ldr	r0, [sp]
   17304:	cmp	r0, #0
   17308:	ldrbne	r7, [r0]
   1730c:	moveq	r7, #0
   17310:	bl	11408 <__ctype_tolower_loc@plt>
   17314:	ldr	r2, [r0]
   17318:	uxtb	r0, r7
   1731c:	uxtb	r1, r6
   17320:	ldr	r3, [r2, r0, lsl #2]
   17324:	ldr	r2, [r2, r1, lsl #2]
   17328:	subs	r6, r2, r3
   1732c:	subseq	r6, r0, r1
   17330:	bne	170fc <argp_failure@@Base+0x11ac>
   17334:	uxtb	r6, r5
   17338:	cmp	r6, #0
   1733c:	movwne	r6, #1
   17340:	tst	r4, #255	; 0xff
   17344:	subne	r6, r6, #1
   17348:	cmp	r6, #0
   1734c:	bne	170fc <argp_failure@@Base+0x11ac>
   17350:	tst	r5, #255	; 0xff
   17354:	beq	17360 <argp_failure@@Base+0x1410>
   17358:	mov	r6, #0
   1735c:	b	170fc <argp_failure@@Base+0x11ac>
   17360:	ldr	r0, [sp, #4]
   17364:	ldr	r1, [sp]
   17368:	cmp	r0, #0
   1736c:	mov	r6, r0
   17370:	movwne	r6, #1
   17374:	cmp	r1, #0
   17378:	subne	r6, r6, #1
   1737c:	cmp	r6, #0
   17380:	bne	170fc <argp_failure@@Base+0x11ac>
   17384:	cmp	r0, #0
   17388:	beq	17358 <argp_failure@@Base+0x1408>
   1738c:	bl	11390 <strcasecmp@plt>
   17390:	mov	r6, r0
   17394:	cmp	r0, #0
   17398:	moveq	r6, #0
   1739c:	b	170fc <argp_failure@@Base+0x11ac>
   173a0:	push	{r4, r5, fp, lr}
   173a4:	add	fp, sp, #8
   173a8:	mov	r5, r0
   173ac:	bl	11420 <__ctype_b_loc@plt>
   173b0:	ldr	ip, [r5]
   173b4:	ldr	r2, [r0]
   173b8:	ldrb	r3, [ip]
   173bc:	add	r1, r2, r3, lsl #1
   173c0:	ldrb	r1, [r1, #1]
   173c4:	tst	r1, #32
   173c8:	beq	173f0 <argp_failure@@Base+0x14a0>
   173cc:	add	r1, ip, #1
   173d0:	str	r1, [r5]
   173d4:	ldrb	r3, [r1], #1
   173d8:	ldr	r2, [r0]
   173dc:	add	r4, r2, r3, lsl #1
   173e0:	ldrb	r4, [r4, #1]
   173e4:	tst	r4, #32
   173e8:	bne	173d0 <argp_failure@@Base+0x1480>
   173ec:	sub	ip, r1, #1
   173f0:	subs	r1, r3, #45	; 0x2d
   173f4:	movwne	r1, #1
   173f8:	cmp	r3, #0
   173fc:	beq	17434 <argp_failure@@Base+0x14e4>
   17400:	ldrb	r2, [r2, r3, lsl #1]
   17404:	tst	r2, #8
   17408:	bne	17434 <argp_failure@@Base+0x14e4>
   1740c:	add	r2, ip, #1
   17410:	str	r2, [r5]
   17414:	ldrb	r3, [r2]
   17418:	cmp	r3, #0
   1741c:	beq	17434 <argp_failure@@Base+0x14e4>
   17420:	ldr	r4, [r0]
   17424:	add	r2, r2, #1
   17428:	ldrb	r3, [r4, r3, lsl #1]
   1742c:	tst	r3, #8
   17430:	beq	17410 <argp_failure@@Base+0x14c0>
   17434:	mov	r0, r1
   17438:	pop	{r4, r5, fp, pc}
   1743c:	push	{r4, r5, fp, lr}
   17440:	add	fp, sp, #8
   17444:	mov	r4, r1
   17448:	mov	r5, r0
   1744c:	ldr	r1, [r1, #12]
   17450:	ldr	r0, [r0, #12]
   17454:	cmp	r0, r1
   17458:	beq	17468 <argp_failure@@Base+0x1518>
   1745c:	bl	1743c <argp_failure@@Base+0x14ec>
   17460:	cmp	r0, #0
   17464:	popne	{r4, r5, fp, pc}
   17468:	ldr	r1, [r5, #8]
   1746c:	ldr	r2, [r4, #8]
   17470:	orr	r0, r2, r1
   17474:	sub	r3, r1, r2
   17478:	cmn	r0, #1
   1747c:	mov	r0, r3
   17480:	suble	r0, r2, r1
   17484:	and	r1, r2, r1
   17488:	cmp	r1, #0
   1748c:	movlt	r0, r3
   17490:	cmp	r0, #0
   17494:	ldreq	r0, [r5, #4]
   17498:	ldreq	r1, [r4, #4]
   1749c:	subeq	r0, r1, r0
   174a0:	pop	{r4, r5, fp, pc}
   174a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174a8:	add	fp, sp, #28
   174ac:	push	{r1, r2, r3}
   174b0:	ldr	r1, [r0, #4]
   174b4:	cmp	r1, #0
   174b8:	beq	1755c <argp_failure@@Base+0x160c>
   174bc:	ldr	r4, [r0]
   174c0:	ldr	r8, [r0, #8]
   174c4:	rsb	r6, r1, #1
   174c8:	mov	r7, r4
   174cc:	ldr	r9, [r7, #12]
   174d0:	mov	r5, #0
   174d4:	tst	r9, #8
   174d8:	bne	17540 <argp_failure@@Base+0x15f0>
   174dc:	ldr	sl, [r7, #4]
   174e0:	sub	r0, sl, #1
   174e4:	cmp	r0, #254	; 0xfe
   174e8:	bhi	17540 <argp_failure@@Base+0x15f0>
   174ec:	bl	11420 <__ctype_b_loc@plt>
   174f0:	ldr	r0, [r0]
   174f4:	add	r0, r0, sl, lsl #1
   174f8:	ldrb	r0, [r0, #1]
   174fc:	tst	r0, #64	; 0x40
   17500:	beq	17540 <argp_failure@@Base+0x15f0>
   17504:	ldrb	r0, [r8]
   17508:	cmp	sl, r0
   1750c:	bne	17540 <argp_failure@@Base+0x15f0>
   17510:	tst	r9, #4
   17514:	mov	r5, #0
   17518:	moveq	r4, r7
   1751c:	tst	r9, #2
   17520:	bne	1753c <argp_failure@@Base+0x15ec>
   17524:	ldmib	sp, {r2, r3}
   17528:	ldr	r5, [sp]
   1752c:	mov	r0, r7
   17530:	mov	r1, r4
   17534:	blx	r5
   17538:	mov	r5, r0
   1753c:	add	r8, r8, #1
   17540:	cmp	r6, #0
   17544:	beq	17560 <argp_failure@@Base+0x1610>
   17548:	add	r6, r6, #1
   1754c:	add	r7, r7, #24
   17550:	cmp	r5, #0
   17554:	beq	174cc <argp_failure@@Base+0x157c>
   17558:	b	17560 <argp_failure@@Base+0x1610>
   1755c:	mov	r5, #0
   17560:	mov	r0, r5
   17564:	sub	sp, fp, #28
   17568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1756c:	push	{r4, sl, fp, lr}
   17570:	add	fp, sp, #8
   17574:	ldrb	r1, [r0, #12]
   17578:	tst	r1, #8
   1757c:	bne	175ac <argp_failure@@Base+0x165c>
   17580:	ldr	r4, [r0, #4]
   17584:	sub	r0, r4, #1
   17588:	cmp	r0, #254	; 0xfe
   1758c:	bhi	175ac <argp_failure@@Base+0x165c>
   17590:	bl	11420 <__ctype_b_loc@plt>
   17594:	ldr	r0, [r0]
   17598:	add	r0, r0, r4, lsl #1
   1759c:	ldrb	r0, [r0, #1]
   175a0:	lsl	r0, r0, #25
   175a4:	and	r0, r4, r0, asr #31
   175a8:	pop	{r4, sl, fp, pc}
   175ac:	mov	r0, #0
   175b0:	pop	{r4, sl, fp, pc}
   175b4:	ldr	r2, [r0, #8]
   175b8:	cmp	r2, #0
   175bc:	bne	175f4 <argp_failure@@Base+0x16a4>
   175c0:	ldr	r2, [r1, #8]
   175c4:	cmp	r2, #0
   175c8:	bne	175f4 <argp_failure@@Base+0x16a4>
   175cc:	ldr	r2, [r0, #12]
   175d0:	ldr	r1, [r1, #12]
   175d4:	orr	r1, r1, r2
   175d8:	tst	r1, #16
   175dc:	bne	175f4 <argp_failure@@Base+0x16a4>
   175e0:	ldr	r1, [r3]
   175e4:	ldr	r0, [r0, #4]
   175e8:	add	r2, r1, #1
   175ec:	str	r2, [r3]
   175f0:	strb	r0, [r1]
   175f4:	mov	r0, #0
   175f8:	bx	lr
   175fc:	push	{r4, r5, r6, sl, fp, lr}
   17600:	add	fp, sp, #16
   17604:	ldr	r4, [r0, #8]
   17608:	mov	r6, r0
   1760c:	ldr	r0, [r0, #12]
   17610:	ldr	r2, [r1, #12]
   17614:	mov	r5, r3
   17618:	cmp	r4, #0
   1761c:	orr	r0, r2, r0
   17620:	ldreq	r4, [r1, #8]
   17624:	tst	r0, #16
   17628:	bne	17678 <argp_failure@@Base+0x1728>
   1762c:	cmp	r4, #0
   17630:	beq	17678 <argp_failure@@Base+0x1728>
   17634:	tst	r0, #1
   17638:	bne	17660 <argp_failure@@Base+0x1710>
   1763c:	mov	r0, r4
   17640:	bl	11438 <strlen@plt>
   17644:	add	r1, r0, #6
   17648:	mov	r0, r5
   1764c:	bl	17680 <argp_failure@@Base+0x1730>
   17650:	ldr	r2, [r6, #4]
   17654:	movw	r1, #45462	; 0xb196
   17658:	movt	r1, #1
   1765c:	b	1766c <argp_failure@@Base+0x171c>
   17660:	ldr	r2, [r6, #4]
   17664:	movw	r1, #45451	; 0xb18b
   17668:	movt	r1, #1
   1766c:	mov	r0, r5
   17670:	mov	r3, r4
   17674:	bl	18f00 <argp_failure@@Base+0x2fb0>
   17678:	mov	r0, #0
   1767c:	pop	{r4, r5, r6, sl, fp, pc}
   17680:	push	{r4, r5, fp, lr}
   17684:	add	fp, sp, #8
   17688:	mov	r5, r1
   1768c:	mov	r4, r0
   17690:	ldr	r1, [r0, #16]
   17694:	ldr	r2, [r0, #24]
   17698:	ldr	r0, [r0, #28]
   1769c:	sub	r2, r0, r2
   176a0:	cmp	r2, r1
   176a4:	bls	176b4 <argp_failure@@Base+0x1764>
   176a8:	mov	r0, r4
   176ac:	bl	189a0 <argp_failure@@Base+0x2a50>
   176b0:	ldr	r0, [r4, #28]
   176b4:	ldr	r3, [r4, #20]
   176b8:	ldr	r2, [r4, #8]
   176bc:	ldr	r1, [r4, #32]
   176c0:	cmp	r3, #0
   176c4:	addgt	r5, r5, r3
   176c8:	cmp	r5, r2
   176cc:	bcs	17700 <argp_failure@@Base+0x17b0>
   176d0:	cmp	r0, r1
   176d4:	bcc	176f0 <argp_failure@@Base+0x17a0>
   176d8:	mov	r0, r4
   176dc:	mov	r1, #1
   176e0:	bl	18e18 <argp_failure@@Base+0x2ec8>
   176e4:	cmp	r0, #0
   176e8:	popeq	{r4, r5, fp, pc}
   176ec:	ldr	r0, [r4, #28]
   176f0:	add	r1, r0, #1
   176f4:	str	r1, [r4, #28]
   176f8:	mov	r1, #32
   176fc:	b	1772c <argp_failure@@Base+0x17dc>
   17700:	cmp	r0, r1
   17704:	bcc	17720 <argp_failure@@Base+0x17d0>
   17708:	mov	r0, r4
   1770c:	mov	r1, #1
   17710:	bl	18e18 <argp_failure@@Base+0x2ec8>
   17714:	cmp	r0, #0
   17718:	beq	17730 <argp_failure@@Base+0x17e0>
   1771c:	ldr	r0, [r4, #28]
   17720:	add	r1, r0, #1
   17724:	str	r1, [r4, #28]
   17728:	mov	r1, #10
   1772c:	strb	r1, [r0]
   17730:	pop	{r4, r5, fp, pc}
   17734:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17738:	add	fp, sp, #24
   1773c:	mov	r8, r0
   17740:	ldr	r0, [r1, #12]
   17744:	mov	r5, r1
   17748:	cmp	r0, #0
   1774c:	beq	1779c <argp_failure@@Base+0x184c>
   17750:	ldr	r1, [r5, #8]
   17754:	ldr	r0, [r5]
   17758:	ldr	r4, [r1]
   1775c:	ldr	r7, [r0, #16]
   17760:	cmp	r4, #0
   17764:	ldrne	r1, [r1, #4]
   17768:	cmpne	r1, #0
   1776c:	bne	177f0 <argp_failure@@Base+0x18a0>
   17770:	cmp	r7, #0
   17774:	beq	1778c <argp_failure@@Base+0x183c>
   17778:	ldr	r0, [r7]
   1777c:	cmp	r0, #0
   17780:	ldrbne	r1, [r0]
   17784:	cmpne	r1, #0
   17788:	bne	17840 <argp_failure@@Base+0x18f0>
   1778c:	mov	r0, #0
   17790:	str	r0, [r5, #12]
   17794:	add	r5, r5, #4
   17798:	b	177e0 <argp_failure@@Base+0x1890>
   1779c:	ldr	r6, [r5, #4]!
   177a0:	ldr	r0, [r6, #28]
   177a4:	ldr	r1, [r6, #32]
   177a8:	add	r2, r0, #2
   177ac:	cmp	r2, r1
   177b0:	bls	177cc <argp_failure@@Base+0x187c>
   177b4:	mov	r0, r6
   177b8:	mov	r1, #2
   177bc:	bl	18e18 <argp_failure@@Base+0x2ec8>
   177c0:	cmp	r0, #0
   177c4:	beq	177e0 <argp_failure@@Base+0x1890>
   177c8:	ldr	r0, [r6, #28]
   177cc:	movw	r1, #8236	; 0x202c
   177d0:	strh	r1, [r0]
   177d4:	ldr	r0, [r6, #28]
   177d8:	add	r0, r0, #2
   177dc:	str	r0, [r6, #28]
   177e0:	ldr	r0, [r5]
   177e4:	mov	r1, r8
   177e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   177ec:	b	17b1c <argp_failure@@Base+0x1bcc>
   177f0:	ldr	r1, [r4, #12]
   177f4:	ldr	r0, [r0, #12]
   177f8:	cmp	r0, r1
   177fc:	beq	17770 <argp_failure@@Base+0x1820>
   17800:	ldr	r6, [r5, #4]
   17804:	ldr	r0, [r6, #28]
   17808:	ldr	r1, [r6, #32]
   1780c:	cmp	r0, r1
   17810:	bcc	1782c <argp_failure@@Base+0x18dc>
   17814:	mov	r0, r6
   17818:	mov	r1, #1
   1781c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   17820:	cmp	r0, #0
   17824:	beq	17770 <argp_failure@@Base+0x1820>
   17828:	ldr	r0, [r6, #28]
   1782c:	add	r1, r0, #1
   17830:	str	r1, [r6, #28]
   17834:	mov	r1, #10
   17838:	strb	r1, [r0]
   1783c:	b	17770 <argp_failure@@Base+0x1820>
   17840:	cmp	r4, #0
   17844:	beq	1787c <argp_failure@@Base+0x192c>
   17848:	ldr	r1, [r4, #16]
   1784c:	cmp	r1, r7
   17850:	beq	1778c <argp_failure@@Base+0x183c>
   17854:	cmp	r1, #0
   17858:	beq	17870 <argp_failure@@Base+0x1920>
   1785c:	ldr	r1, [r1, #12]
   17860:	cmp	r1, r7
   17864:	cmpne	r1, #0
   17868:	bne	1785c <argp_failure@@Base+0x190c>
   1786c:	b	17874 <argp_failure@@Base+0x1924>
   17870:	mov	r1, #0
   17874:	cmp	r1, r7
   17878:	beq	1778c <argp_failure@@Base+0x183c>
   1787c:	ldr	r1, [r5, #4]
   17880:	mov	r2, r5
   17884:	ldr	r4, [r1, #12]
   17888:	ldr	r1, [r7, #16]
   1788c:	bl	178ec <argp_failure@@Base+0x199c>
   17890:	ldr	r6, [r5, #4]
   17894:	ldr	r1, [r6, #24]
   17898:	ldr	r2, [r6, #28]
   1789c:	ldr	r0, [r6, #16]
   178a0:	sub	r1, r2, r1
   178a4:	cmp	r1, r0
   178a8:	bls	178b4 <argp_failure@@Base+0x1964>
   178ac:	mov	r0, r6
   178b0:	bl	189a0 <argp_failure@@Base+0x2a50>
   178b4:	str	r4, [r6, #12]
   178b8:	b	1778c <argp_failure@@Base+0x183c>
   178bc:	mov	ip, r2
   178c0:	ldr	r2, [r0, #8]
   178c4:	cmp	r2, #0
   178c8:	bxeq	lr
   178cc:	ldrb	r0, [r0, #12]
   178d0:	tst	r0, #1
   178d4:	bne	178e0 <argp_failure@@Base+0x1990>
   178d8:	mov	r0, r3
   178dc:	b	18f00 <argp_failure@@Base+0x2fb0>
   178e0:	mov	r0, r3
   178e4:	mov	r1, ip
   178e8:	b	18f00 <argp_failure@@Base+0x2fb0>
   178ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178f0:	add	fp, sp, #28
   178f4:	sub	sp, sp, #4
   178f8:	mov	r9, r2
   178fc:	mov	r8, r0
   17900:	cmp	r1, #0
   17904:	mov	r6, r0
   17908:	beq	17948 <argp_failure@@Base+0x19f8>
   1790c:	ldr	r0, [r1, #20]
   17910:	mov	r4, r1
   17914:	mov	r6, r8
   17918:	cmp	r0, #0
   1791c:	beq	17948 <argp_failure@@Base+0x19f8>
   17920:	ldr	r1, [r9, #16]
   17924:	mov	r0, r4
   17928:	bl	137b8 <argp_parse@@Base+0xbf8>
   1792c:	ldr	r3, [r4, #20]
   17930:	mov	r2, r0
   17934:	movw	r0, #3
   17938:	mov	r1, r8
   1793c:	movt	r0, #512	; 0x200
   17940:	blx	r3
   17944:	mov	r6, r0
   17948:	cmp	r6, #0
   1794c:	beq	17b00 <argp_failure@@Base+0x1bb0>
   17950:	ldrb	r0, [r6]
   17954:	cmp	r0, #0
   17958:	beq	17af4 <argp_failure@@Base+0x1ba4>
   1795c:	ldr	r0, [r9, #8]
   17960:	ldr	r0, [r0]
   17964:	cmp	r0, #0
   17968:	beq	179a8 <argp_failure@@Base+0x1a58>
   1796c:	ldr	r4, [r9, #4]
   17970:	ldr	r0, [r4, #28]
   17974:	ldr	r1, [r4, #32]
   17978:	cmp	r0, r1
   1797c:	bcc	17998 <argp_failure@@Base+0x1a48>
   17980:	mov	r0, r4
   17984:	mov	r1, #1
   17988:	bl	18e18 <argp_failure@@Base+0x2ec8>
   1798c:	cmp	r0, #0
   17990:	beq	179a8 <argp_failure@@Base+0x1a58>
   17994:	ldr	r0, [r4, #28]
   17998:	add	r1, r0, #1
   1799c:	str	r1, [r4, #28]
   179a0:	mov	r1, #10
   179a4:	strb	r1, [r0]
   179a8:	movw	r4, #63592	; 0xf868
   179ac:	ldr	r0, [r9, #4]
   179b0:	movt	r4, #2
   179b4:	ldr	r1, [r4, #24]
   179b8:	bl	17b1c <argp_failure@@Base+0x1bcc>
   179bc:	ldr	r5, [r4, #24]
   179c0:	ldr	r4, [r9, #4]
   179c4:	ldr	r1, [r4, #24]
   179c8:	ldr	r2, [r4, #28]
   179cc:	ldr	r0, [r4, #16]
   179d0:	mov	sl, r5
   179d4:	mov	r7, r4
   179d8:	sub	r1, r2, r1
   179dc:	cmp	r1, r0
   179e0:	bls	17a0c <argp_failure@@Base+0x1abc>
   179e4:	mov	r0, r4
   179e8:	bl	189a0 <argp_failure@@Base+0x2a50>
   179ec:	ldr	r7, [r9, #4]
   179f0:	movw	r0, #63592	; 0xf868
   179f4:	movt	r0, #2
   179f8:	ldr	sl, [r0, #24]
   179fc:	ldr	r1, [r7, #24]
   17a00:	ldr	r2, [r7, #28]
   17a04:	ldr	r0, [r7, #16]
   17a08:	sub	r1, r2, r1
   17a0c:	str	r5, [r4, #4]
   17a10:	cmp	r1, r0
   17a14:	mov	r5, r7
   17a18:	bls	17a28 <argp_failure@@Base+0x1ad8>
   17a1c:	mov	r0, r7
   17a20:	bl	189a0 <argp_failure@@Base+0x2a50>
   17a24:	ldr	r5, [r9, #4]
   17a28:	mov	r0, r6
   17a2c:	str	sl, [r7, #12]
   17a30:	bl	11438 <strlen@plt>
   17a34:	cmp	r0, #0
   17a38:	beq	17a84 <argp_failure@@Base+0x1b34>
   17a3c:	mov	r4, r0
   17a40:	ldr	r0, [r5, #28]
   17a44:	ldr	r1, [r5, #32]
   17a48:	add	r2, r0, r4
   17a4c:	cmp	r2, r1
   17a50:	bls	17a6c <argp_failure@@Base+0x1b1c>
   17a54:	mov	r0, r5
   17a58:	mov	r1, r4
   17a5c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   17a60:	cmp	r0, #0
   17a64:	beq	17a84 <argp_failure@@Base+0x1b34>
   17a68:	ldr	r0, [r5, #28]
   17a6c:	mov	r1, r6
   17a70:	mov	r2, r4
   17a74:	bl	11354 <memcpy@plt>
   17a78:	ldr	r0, [r5, #28]
   17a7c:	add	r0, r0, r4
   17a80:	str	r0, [r5, #28]
   17a84:	ldr	r4, [r9, #4]
   17a88:	mov	r5, r4
   17a8c:	ldr	r2, [r4, #24]
   17a90:	ldr	r0, [r4, #16]
   17a94:	ldr	r1, [r5, #28]!
   17a98:	sub	r2, r1, r2
   17a9c:	cmp	r2, r0
   17aa0:	mov	r0, r4
   17aa4:	bls	17abc <argp_failure@@Base+0x1b6c>
   17aa8:	mov	r0, r4
   17aac:	bl	189a0 <argp_failure@@Base+0x2a50>
   17ab0:	ldr	r0, [r9, #4]
   17ab4:	mov	r5, r0
   17ab8:	ldr	r1, [r5, #28]!
   17abc:	mov	r2, #0
   17ac0:	str	r2, [r4, #4]
   17ac4:	ldr	r2, [r0, #32]
   17ac8:	cmp	r1, r2
   17acc:	bcc	17ae4 <argp_failure@@Base+0x1b94>
   17ad0:	mov	r1, #1
   17ad4:	bl	18e18 <argp_failure@@Base+0x2ec8>
   17ad8:	cmp	r0, #0
   17adc:	beq	17af4 <argp_failure@@Base+0x1ba4>
   17ae0:	ldr	r1, [r5]
   17ae4:	add	r0, r1, #1
   17ae8:	str	r0, [r5]
   17aec:	mov	r0, #10
   17af0:	strb	r0, [r1]
   17af4:	ldr	r0, [r9, #8]
   17af8:	mov	r1, #1
   17afc:	str	r1, [r0, #4]
   17b00:	cmp	r6, r8
   17b04:	subeq	sp, fp, #28
   17b08:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b0c:	mov	r0, r6
   17b10:	sub	sp, fp, #28
   17b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b18:	b	13e2c <argp_parse@@Base+0x126c>
   17b1c:	push	{r4, r5, r6, sl, fp, lr}
   17b20:	add	fp, sp, #16
   17b24:	mov	r4, r0
   17b28:	mov	r5, r1
   17b2c:	ldr	r0, [r0, #16]
   17b30:	ldr	r1, [r4, #24]
   17b34:	ldr	r2, [r4, #28]
   17b38:	sub	r1, r2, r1
   17b3c:	cmp	r1, r0
   17b40:	bls	17b4c <argp_failure@@Base+0x1bfc>
   17b44:	mov	r0, r4
   17b48:	bl	189a0 <argp_failure@@Base+0x2a50>
   17b4c:	ldr	r0, [r4, #20]
   17b50:	bic	r0, r0, r0, asr #31
   17b54:	sub	r1, r5, r0
   17b58:	cmp	r1, #1
   17b5c:	poplt	{r4, r5, r6, sl, fp, pc}
   17b60:	add	r1, r5, #1
   17b64:	mov	r6, #32
   17b68:	sub	r5, r1, r0
   17b6c:	ldr	r0, [r4, #28]
   17b70:	ldr	r1, [r4, #32]
   17b74:	cmp	r0, r1
   17b78:	bcc	17b94 <argp_failure@@Base+0x1c44>
   17b7c:	mov	r0, r4
   17b80:	mov	r1, #1
   17b84:	bl	18e18 <argp_failure@@Base+0x2ec8>
   17b88:	cmp	r0, #0
   17b8c:	beq	17ba0 <argp_failure@@Base+0x1c50>
   17b90:	ldr	r0, [r4, #28]
   17b94:	add	r1, r0, #1
   17b98:	str	r1, [r4, #28]
   17b9c:	strb	r6, [r0]
   17ba0:	sub	r5, r5, #1
   17ba4:	cmp	r5, #1
   17ba8:	bgt	17b6c <argp_failure@@Base+0x1c1c>
   17bac:	pop	{r4, r5, r6, sl, fp, pc}
   17bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bb4:	add	fp, sp, #28
   17bb8:	sub	sp, sp, #36	; 0x24
   17bbc:	mvn	r7, #0
   17bc0:	cmp	r0, #1
   17bc4:	blt	18090 <argp_failure@@Base+0x2140>
   17bc8:	ldr	r4, [fp, #16]
   17bcc:	mov	r5, r0
   17bd0:	mov	r8, r1
   17bd4:	mov	r0, #0
   17bd8:	str	r3, [sp, #28]
   17bdc:	ldr	sl, [r4]
   17be0:	ldr	r6, [r4, #4]
   17be4:	str	r0, [r4, #12]
   17be8:	cmp	sl, #0
   17bec:	beq	17c10 <argp_failure@@Base+0x1cc0>
   17bf0:	ldr	r0, [r4, #16]
   17bf4:	cmp	r0, #0
   17bf8:	beq	17c18 <argp_failure@@Base+0x1cc8>
   17bfc:	ldrb	r0, [r2]
   17c00:	cmp	r0, #45	; 0x2d
   17c04:	cmpne	r0, #43	; 0x2b
   17c08:	addeq	r2, r2, #1
   17c0c:	b	17c88 <argp_failure@@Base+0x1d38>
   17c10:	mov	sl, #1
   17c14:	str	sl, [r4]
   17c18:	mov	r0, #0
   17c1c:	str	sl, [r4, #28]
   17c20:	str	sl, [r4, #32]
   17c24:	str	r0, [r4, #20]
   17c28:	ldrb	r1, [r2]
   17c2c:	cmp	r1, #43	; 0x2b
   17c30:	beq	17c40 <argp_failure@@Base+0x1cf0>
   17c34:	cmp	r1, #45	; 0x2d
   17c38:	bne	17c4c <argp_failure@@Base+0x1cfc>
   17c3c:	mov	r0, #2
   17c40:	str	r0, [r4, #24]
   17c44:	add	r2, r2, #1
   17c48:	b	17c80 <argp_failure@@Base+0x1d30>
   17c4c:	ldr	r0, [fp, #20]
   17c50:	cmp	r0, #0
   17c54:	bne	17c78 <argp_failure@@Base+0x1d28>
   17c58:	movw	r0, #45881	; 0xb339
   17c5c:	mov	r7, r2
   17c60:	movt	r0, #1
   17c64:	bl	113cc <getenv@plt>
   17c68:	mov	r2, r7
   17c6c:	mvn	r7, #0
   17c70:	cmp	r0, #0
   17c74:	beq	17e48 <argp_failure@@Base+0x1ef8>
   17c78:	mov	r0, #0
   17c7c:	str	r0, [r4, #24]
   17c80:	mov	r0, #1
   17c84:	str	r0, [r4, #16]
   17c88:	ldrb	r0, [r2]
   17c8c:	subs	r0, r0, #58	; 0x3a
   17c90:	movne	r0, r6
   17c94:	ldr	r6, [r4, #20]
   17c98:	str	r0, [sp, #32]
   17c9c:	cmp	r6, #0
   17ca0:	ldrbne	r0, [r6]
   17ca4:	cmpne	r0, #0
   17ca8:	bne	17edc <argp_failure@@Base+0x1f8c>
   17cac:	ldr	r9, [r4, #32]
   17cb0:	cmp	r9, sl
   17cb4:	strgt	sl, [r4, #32]
   17cb8:	movgt	r9, sl
   17cbc:	ldr	r0, [r4, #28]
   17cc0:	cmp	r0, sl
   17cc4:	strgt	sl, [r4, #28]
   17cc8:	movgt	r0, sl
   17ccc:	ldr	r1, [r4, #24]
   17cd0:	cmp	r1, #1
   17cd4:	bne	17d4c <argp_failure@@Base+0x1dfc>
   17cd8:	cmp	r0, r9
   17cdc:	cmpne	r9, sl
   17ce0:	bne	17cf0 <argp_failure@@Base+0x1da0>
   17ce4:	cmp	r9, sl
   17ce8:	strne	sl, [r4, #28]
   17cec:	b	17d0c <argp_failure@@Base+0x1dbc>
   17cf0:	mov	r0, r8
   17cf4:	mov	r1, r4
   17cf8:	mov	r6, r2
   17cfc:	bl	180f0 <argp_failure@@Base+0x21a0>
   17d00:	ldr	sl, [r4]
   17d04:	mov	r2, r6
   17d08:	mvn	r7, #0
   17d0c:	mov	r9, sl
   17d10:	cmp	sl, r5
   17d14:	bge	17d44 <argp_failure@@Base+0x1df4>
   17d18:	ldr	r0, [r8, r9, lsl #2]
   17d1c:	ldrb	r1, [r0]
   17d20:	cmp	r1, #45	; 0x2d
   17d24:	bne	17d34 <argp_failure@@Base+0x1de4>
   17d28:	ldrb	r0, [r0, #1]
   17d2c:	cmp	r0, #0
   17d30:	bne	17d44 <argp_failure@@Base+0x1df4>
   17d34:	add	r9, r9, #1
   17d38:	cmp	r9, r5
   17d3c:	str	r9, [r4]
   17d40:	blt	17d18 <argp_failure@@Base+0x1dc8>
   17d44:	mov	sl, r9
   17d48:	str	r9, [r4, #32]
   17d4c:	cmp	sl, r5
   17d50:	beq	17e38 <argp_failure@@Base+0x1ee8>
   17d54:	ldr	r0, [r8, sl, lsl #2]
   17d58:	movw	r6, #43900	; 0xab7c
   17d5c:	str	r2, [sp, #20]
   17d60:	movt	r6, #1
   17d64:	mov	r1, r6
   17d68:	bl	112e8 <strcmp@plt>
   17d6c:	cmp	r0, #0
   17d70:	beq	17ddc <argp_failure@@Base+0x1e8c>
   17d74:	cmp	sl, r5
   17d78:	mvn	r7, #0
   17d7c:	beq	17e38 <argp_failure@@Base+0x1ee8>
   17d80:	ldr	r0, [r8, sl, lsl #2]
   17d84:	ldrb	r1, [r0]
   17d88:	cmp	r1, #45	; 0x2d
   17d8c:	bne	17e04 <argp_failure@@Base+0x1eb4>
   17d90:	mov	r3, r6
   17d94:	mov	r6, r0
   17d98:	ldrb	r1, [r6, #1]!
   17d9c:	cmp	r1, #0
   17da0:	beq	17e04 <argp_failure@@Base+0x1eb4>
   17da4:	ldr	r2, [sp, #28]
   17da8:	cmp	r2, #0
   17dac:	beq	17e50 <argp_failure@@Base+0x1f00>
   17db0:	ldr	r9, [fp, #12]
   17db4:	ldr	r2, [sp, #20]
   17db8:	cmp	r1, #45	; 0x2d
   17dbc:	bne	17e58 <argp_failure@@Base+0x1f08>
   17dc0:	add	r0, r0, #2
   17dc4:	str	r0, [r4, #20]
   17dc8:	ldr	r0, [fp, #8]
   17dcc:	stm	sp, {r0, r9}
   17dd0:	str	r4, [sp, #8]
   17dd4:	str	r3, [sp, #16]
   17dd8:	b	18058 <argp_failure@@Base+0x2108>
   17ddc:	add	r0, sl, #1
   17de0:	str	r0, [r4]
   17de4:	ldr	r1, [r4, #28]
   17de8:	cmp	r1, r9
   17dec:	cmpne	r9, r0
   17df0:	bne	17e1c <argp_failure@@Base+0x1ecc>
   17df4:	cmp	r1, r9
   17df8:	mvn	r7, #0
   17dfc:	streq	r0, [r4, #28]
   17e00:	b	17e2c <argp_failure@@Base+0x1edc>
   17e04:	ldr	r1, [r4, #24]
   17e08:	cmp	r1, #0
   17e0c:	strne	r0, [r4, #12]
   17e10:	addne	r0, sl, #1
   17e14:	movne	r7, #1
   17e18:	b	17e40 <argp_failure@@Base+0x1ef0>
   17e1c:	mov	r0, r8
   17e20:	mov	r1, r4
   17e24:	bl	180f0 <argp_failure@@Base+0x21a0>
   17e28:	mvn	r7, #0
   17e2c:	str	r5, [r4]
   17e30:	str	r5, [r4, #32]
   17e34:	mov	r9, r5
   17e38:	ldr	r0, [r4, #28]
   17e3c:	cmp	r0, r9
   17e40:	strne	r0, [r4]
   17e44:	b	18090 <argp_failure@@Base+0x2140>
   17e48:	mov	r0, #1
   17e4c:	b	17c7c <argp_failure@@Base+0x1d2c>
   17e50:	ldr	r2, [sp, #20]
   17e54:	b	17ed8 <argp_failure@@Base+0x1f88>
   17e58:	cmp	r9, #0
   17e5c:	beq	17ed8 <argp_failure@@Base+0x1f88>
   17e60:	ldrb	r0, [r0, #2]
   17e64:	cmp	r0, #0
   17e68:	beq	17ec4 <argp_failure@@Base+0x1f74>
   17e6c:	ldr	r1, [fp, #8]
   17e70:	str	r6, [r4, #20]
   17e74:	movw	r0, #43901	; 0xab7d
   17e78:	movt	r0, #1
   17e7c:	stm	sp, {r1, r9}
   17e80:	str	r0, [sp, #16]
   17e84:	mov	r0, r5
   17e88:	str	r4, [sp, #8]
   17e8c:	mov	r9, r2
   17e90:	ldr	r1, [sp, #32]
   17e94:	ldr	r3, [sp, #28]
   17e98:	str	r1, [sp, #12]
   17e9c:	mov	r1, r8
   17ea0:	bl	181d4 <argp_failure@@Base+0x2284>
   17ea4:	mov	r7, r0
   17ea8:	cmn	r0, #1
   17eac:	bne	18090 <argp_failure@@Base+0x2140>
   17eb0:	ldr	sl, [r4]
   17eb4:	mov	r2, r9
   17eb8:	ldr	r0, [r8, sl, lsl #2]
   17ebc:	add	r6, r0, #1
   17ec0:	b	17ed8 <argp_failure@@Base+0x1f88>
   17ec4:	mov	r0, r2
   17ec8:	bl	11444 <strchr@plt>
   17ecc:	ldr	r2, [sp, #20]
   17ed0:	cmp	r0, #0
   17ed4:	beq	17e6c <argp_failure@@Base+0x1f1c>
   17ed8:	str	r6, [r4, #20]
   17edc:	add	r9, r6, #1
   17ee0:	mov	r0, r2
   17ee4:	str	r2, [sp, #20]
   17ee8:	str	r9, [r4, #20]
   17eec:	ldrb	r1, [r6]
   17ef0:	str	r1, [sp, #24]
   17ef4:	bl	11444 <strchr@plt>
   17ef8:	ldrb	r1, [r6, #1]
   17efc:	ldr	r7, [sp, #24]
   17f00:	cmp	r1, #0
   17f04:	orr	r1, r7, #1
   17f08:	addeq	sl, sl, #1
   17f0c:	streq	sl, [r4]
   17f10:	cmp	r1, #59	; 0x3b
   17f14:	cmpne	r0, #0
   17f18:	bne	17f34 <argp_failure@@Base+0x1fe4>
   17f1c:	ldr	r0, [sp, #32]
   17f20:	cmp	r0, #0
   17f24:	bne	18004 <argp_failure@@Base+0x20b4>
   17f28:	str	r7, [r4, #8]
   17f2c:	mov	r7, #63	; 0x3f
   17f30:	b	18090 <argp_failure@@Base+0x2140>
   17f34:	ldrb	r2, [r0]
   17f38:	ldrb	r1, [r0, #1]
   17f3c:	cmp	r2, #87	; 0x57
   17f40:	bne	17f6c <argp_failure@@Base+0x201c>
   17f44:	ldr	r2, [sp, #28]
   17f48:	cmp	r2, #0
   17f4c:	beq	17f6c <argp_failure@@Base+0x201c>
   17f50:	cmp	r1, #59	; 0x3b
   17f54:	bne	17f6c <argp_failure@@Base+0x201c>
   17f58:	ldrb	r0, [r9]
   17f5c:	cmp	r0, #0
   17f60:	beq	17fac <argp_failure@@Base+0x205c>
   17f64:	ldr	r2, [sp, #20]
   17f68:	b	18030 <argp_failure@@Base+0x20e0>
   17f6c:	cmp	r1, #58	; 0x3a
   17f70:	bne	18090 <argp_failure@@Base+0x2140>
   17f74:	ldrb	r0, [r0, #2]
   17f78:	ldrb	r1, [r9]
   17f7c:	cmp	r0, #58	; 0x3a
   17f80:	bne	17f94 <argp_failure@@Base+0x2044>
   17f84:	cmp	r1, #0
   17f88:	bne	17f9c <argp_failure@@Base+0x204c>
   17f8c:	mov	r0, #0
   17f90:	b	18084 <argp_failure@@Base+0x2134>
   17f94:	cmp	r1, #0
   17f98:	beq	17fd8 <argp_failure@@Base+0x2088>
   17f9c:	add	r0, sl, #1
   17fa0:	str	r9, [r4, #12]
   17fa4:	str	r0, [r4]
   17fa8:	b	18088 <argp_failure@@Base+0x2138>
   17fac:	ldr	r2, [sp, #20]
   17fb0:	cmp	sl, r5
   17fb4:	bne	1802c <argp_failure@@Base+0x20dc>
   17fb8:	ldr	r0, [sp, #32]
   17fbc:	cmp	r0, #0
   17fc0:	bne	1809c <argp_failure@@Base+0x214c>
   17fc4:	str	r7, [r4, #8]
   17fc8:	ldrb	r7, [r2]
   17fcc:	cmp	r7, #58	; 0x3a
   17fd0:	movwne	r7, #63	; 0x3f
   17fd4:	b	18090 <argp_failure@@Base+0x2140>
   17fd8:	cmp	sl, r5
   17fdc:	bne	18078 <argp_failure@@Base+0x2128>
   17fe0:	ldr	r0, [sp, #32]
   17fe4:	cmp	r0, #0
   17fe8:	bne	180c8 <argp_failure@@Base+0x2178>
   17fec:	ldr	r0, [sp, #20]
   17ff0:	str	r7, [r4, #8]
   17ff4:	ldrb	r7, [r0]
   17ff8:	cmp	r7, #58	; 0x3a
   17ffc:	movwne	r7, #63	; 0x3f
   18000:	b	18088 <argp_failure@@Base+0x2138>
   18004:	movw	r0, #63664	; 0xf8b0
   18008:	ldr	r2, [r8]
   1800c:	ldr	r3, [sp, #24]
   18010:	movw	r1, #45808	; 0xb2f0
   18014:	movt	r0, #2
   18018:	movt	r1, #1
   1801c:	ldr	r0, [r0]
   18020:	bl	11450 <fprintf@plt>
   18024:	ldr	r7, [sp, #24]
   18028:	b	17f28 <argp_failure@@Base+0x1fd8>
   1802c:	ldr	r9, [r8, sl, lsl #2]
   18030:	str	r9, [r4, #12]
   18034:	ldr	r3, [fp, #8]
   18038:	mov	r0, #0
   1803c:	movw	r1, #45877	; 0xb335
   18040:	str	r0, [r4, #12]
   18044:	str	r9, [r4, #20]
   18048:	movt	r1, #1
   1804c:	str	r3, [sp]
   18050:	stmib	sp, {r0, r4}
   18054:	str	r1, [sp, #16]
   18058:	ldr	r0, [sp, #32]
   1805c:	str	r0, [sp, #12]
   18060:	ldr	r3, [sp, #28]
   18064:	mov	r0, r5
   18068:	mov	r1, r8
   1806c:	bl	181d4 <argp_failure@@Base+0x2284>
   18070:	sub	sp, fp, #28
   18074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18078:	add	r0, sl, #1
   1807c:	str	r0, [r4]
   18080:	ldr	r0, [r8, sl, lsl #2]
   18084:	str	r0, [r4, #12]
   18088:	mov	r0, #0
   1808c:	str	r0, [r4, #20]
   18090:	mov	r0, r7
   18094:	sub	sp, fp, #28
   18098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1809c:	movw	r0, #63664	; 0xf8b0
   180a0:	ldr	r2, [r8]
   180a4:	ldr	r3, [sp, #24]
   180a8:	movw	r1, #45836	; 0xb30c
   180ac:	movt	r0, #2
   180b0:	movt	r1, #1
   180b4:	ldr	r0, [r0]
   180b8:	bl	11450 <fprintf@plt>
   180bc:	ldr	r2, [sp, #20]
   180c0:	ldr	r7, [sp, #24]
   180c4:	b	17fc4 <argp_failure@@Base+0x2074>
   180c8:	movw	r0, #63664	; 0xf8b0
   180cc:	ldr	r2, [r8]
   180d0:	ldr	r3, [sp, #24]
   180d4:	movw	r1, #45836	; 0xb30c
   180d8:	movt	r0, #2
   180dc:	movt	r1, #1
   180e0:	ldr	r0, [r0]
   180e4:	bl	11450 <fprintf@plt>
   180e8:	ldr	r7, [sp, #24]
   180ec:	b	17fec <argp_failure@@Base+0x209c>
   180f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180f4:	add	fp, sp, #28
   180f8:	sub	sp, sp, #4
   180fc:	ldr	lr, [r1]
   18100:	ldr	ip, [r1, #32]
   18104:	ldr	r2, [r1, #28]
   18108:	cmp	lr, ip
   1810c:	str	r2, [sp]
   18110:	ble	181b8 <argp_failure@@Base+0x2268>
   18114:	ldr	r2, [sp]
   18118:	cmp	r2, ip
   1811c:	bge	181b8 <argp_failure@@Base+0x2268>
   18120:	ldr	r4, [sp]
   18124:	add	r8, r0, ip, lsl #2
   18128:	mov	r9, lr
   1812c:	sub	r2, ip, r4
   18130:	sub	sl, r9, ip
   18134:	cmp	sl, r2
   18138:	ble	1817c <argp_failure@@Base+0x222c>
   1813c:	sub	sl, r9, r2
   18140:	cmp	r2, #1
   18144:	blt	18174 <argp_failure@@Base+0x2224>
   18148:	add	r5, r9, r4
   1814c:	add	r2, r0, r4, lsl #2
   18150:	mov	r7, ip
   18154:	add	r5, r0, r5, lsl #2
   18158:	ldr	r6, [r5, -r7, lsl #2]
   1815c:	ldr	r3, [r2]
   18160:	str	r6, [r2], #4
   18164:	str	r3, [r5, -r7, lsl #2]
   18168:	sub	r7, r7, #1
   1816c:	cmp	r4, r7
   18170:	bne	18158 <argp_failure@@Base+0x2208>
   18174:	mov	r9, sl
   18178:	b	181ac <argp_failure@@Base+0x225c>
   1817c:	cmp	sl, #1
   18180:	blt	181a8 <argp_failure@@Base+0x2258>
   18184:	add	r7, r0, r4, lsl #2
   18188:	mov	r2, r8
   1818c:	mov	r6, sl
   18190:	ldr	r3, [r7]
   18194:	ldr	r5, [r2]
   18198:	subs	r6, r6, #1
   1819c:	str	r5, [r7], #4
   181a0:	str	r3, [r2], #4
   181a4:	bne	18190 <argp_failure@@Base+0x2240>
   181a8:	add	r4, r4, sl
   181ac:	cmp	r9, ip
   181b0:	cmpgt	ip, r4
   181b4:	bgt	1812c <argp_failure@@Base+0x21dc>
   181b8:	ldr	r0, [sp]
   181bc:	sub	r0, r0, ip
   181c0:	add	r0, r0, lr
   181c4:	str	r0, [r1, #28]
   181c8:	str	lr, [r1, #32]
   181cc:	sub	sp, fp, #28
   181d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181d8:	add	fp, sp, #28
   181dc:	sub	sp, sp, #44	; 0x2c
   181e0:	str	r0, [sp, #12]
   181e4:	ldr	r0, [fp, #16]
   181e8:	ldr	r5, [fp, #8]
   181ec:	str	r2, [sp, #16]
   181f0:	str	r1, [sp, #20]
   181f4:	ldr	r9, [r0, #20]
   181f8:	mov	r6, r9
   181fc:	b	18204 <argp_failure@@Base+0x22b4>
   18200:	add	r6, r6, #1
   18204:	ldrb	r0, [r6]
   18208:	cmp	r0, #0
   1820c:	cmpne	r0, #61	; 0x3d
   18210:	bne	18200 <argp_failure@@Base+0x22b0>
   18214:	ldr	sl, [r3]
   18218:	mvn	ip, #0
   1821c:	str	r3, [fp, #-32]	; 0xffffffe0
   18220:	cmp	sl, #0
   18224:	beq	18424 <argp_failure@@Base+0x24d4>
   18228:	sub	r4, r6, r9
   1822c:	mov	r8, #0
   18230:	mov	r5, sl
   18234:	mov	r7, r3
   18238:	mov	r0, r5
   1823c:	mov	r1, r9
   18240:	mov	r2, r4
   18244:	bl	11558 <strncmp@plt>
   18248:	cmp	r0, #0
   1824c:	bne	18260 <argp_failure@@Base+0x2310>
   18250:	mov	r0, r5
   18254:	bl	11438 <strlen@plt>
   18258:	cmp	r4, r0
   1825c:	beq	18450 <argp_failure@@Base+0x2500>
   18260:	ldr	r5, [r7, #16]!
   18264:	add	r8, r8, #1
   18268:	cmp	r5, #0
   1826c:	bne	18238 <argp_failure@@Base+0x22e8>
   18270:	cmp	sl, #0
   18274:	beq	1845c <argp_failure@@Base+0x250c>
   18278:	mvn	r0, #0
   1827c:	str	r4, [sp, #36]	; 0x24
   18280:	mov	r4, #0
   18284:	mov	r5, #0
   18288:	mov	r7, #0
   1828c:	str	r0, [sp, #24]
   18290:	mov	r0, #0
   18294:	str	r0, [sp, #32]
   18298:	mov	r0, #0
   1829c:	str	r0, [sp, #8]
   182a0:	mov	r0, #0
   182a4:	str	r0, [sp, #28]
   182a8:	ldr	r2, [sp, #36]	; 0x24
   182ac:	mov	r0, sl
   182b0:	mov	r1, r9
   182b4:	bl	11558 <strncmp@plt>
   182b8:	cmp	r0, #0
   182bc:	beq	182f0 <argp_failure@@Base+0x23a0>
   182c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182c4:	mov	r1, r4
   182c8:	add	r0, r3, r5, lsl #4
   182cc:	ldr	sl, [r0, #16]
   182d0:	cmp	sl, #0
   182d4:	beq	1843c <argp_failure@@Base+0x24ec>
   182d8:	ldr	r0, [fp, #16]
   182dc:	add	r1, r1, #16
   182e0:	add	r5, r5, #1
   182e4:	mov	r4, r1
   182e8:	ldr	r9, [r0, #20]
   182ec:	b	182a8 <argp_failure@@Base+0x2358>
   182f0:	cmp	r7, #0
   182f4:	beq	183a8 <argp_failure@@Base+0x2458>
   182f8:	ldr	r0, [fp, #12]
   182fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18300:	cmp	r0, #0
   18304:	bne	1832c <argp_failure@@Base+0x23dc>
   18308:	add	r0, r3, r5, lsl #4
   1830c:	ldr	r2, [r7, #4]
   18310:	ldr	r1, [r0, #4]
   18314:	cmp	r2, r1
   18318:	bne	1832c <argp_failure@@Base+0x23dc>
   1831c:	ldr	r1, [r0, #8]
   18320:	ldr	r2, [r7, #8]
   18324:	cmp	r2, r1
   18328:	beq	183e0 <argp_failure@@Base+0x2490>
   1832c:	ldr	r0, [sp, #32]
   18330:	mov	r1, r4
   18334:	cmp	r0, #0
   18338:	bne	182c8 <argp_failure@@Base+0x2378>
   1833c:	ldr	r0, [fp, #20]
   18340:	cmp	r0, #0
   18344:	beq	183bc <argp_failure@@Base+0x246c>
   18348:	ldr	r9, [sp, #28]
   1834c:	mov	r0, #0
   18350:	str	r0, [sp, #32]
   18354:	cmp	r9, #0
   18358:	bne	183d0 <argp_failure@@Base+0x2480>
   1835c:	mov	r0, r8
   18360:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   18364:	cmp	r0, #0
   18368:	beq	18410 <argp_failure@@Base+0x24c0>
   1836c:	mov	r9, r0
   18370:	mov	r0, #0
   18374:	mov	r1, #0
   18378:	mov	r2, r8
   1837c:	str	r0, [sp, #32]
   18380:	mov	r0, r9
   18384:	bl	11480 <memset@plt>
   18388:	ldr	r0, [sp, #24]
   1838c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18390:	mov	r1, #1
   18394:	mov	r2, #1
   18398:	str	r1, [sp, #8]
   1839c:	mov	r1, r4
   183a0:	strb	r2, [r9, r0]
   183a4:	b	183d0 <argp_failure@@Base+0x2480>
   183a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   183ac:	mov	r1, r4
   183b0:	str	r5, [sp, #24]
   183b4:	add	r7, r3, r4
   183b8:	b	182c8 <argp_failure@@Base+0x2378>
   183bc:	ldr	r9, [sp, #28]
   183c0:	mov	r0, #1
   183c4:	str	r0, [sp, #32]
   183c8:	cmp	r9, #0
   183cc:	beq	18404 <argp_failure@@Base+0x24b4>
   183d0:	mov	r0, #1
   183d4:	str	r9, [sp, #28]
   183d8:	strb	r0, [r9, r5]
   183dc:	b	182c8 <argp_failure@@Base+0x2378>
   183e0:	ldr	r1, [sp, #32]
   183e4:	cmp	r1, #0
   183e8:	bne	182c4 <argp_failure@@Base+0x2374>
   183ec:	ldr	r0, [r0, #12]
   183f0:	ldr	r1, [r7, #12]
   183f4:	cmp	r1, r0
   183f8:	mov	r1, r4
   183fc:	bne	1833c <argp_failure@@Base+0x23ec>
   18400:	b	182c8 <argp_failure@@Base+0x2378>
   18404:	mov	r0, #0
   18408:	str	r0, [sp, #28]
   1840c:	b	182c8 <argp_failure@@Base+0x2378>
   18410:	mov	r0, #1
   18414:	str	r0, [sp, #32]
   18418:	mov	r0, #0
   1841c:	str	r0, [sp, #28]
   18420:	b	182c0 <argp_failure@@Base+0x2370>
   18424:	mov	r0, #0
   18428:	mov	r8, #0
   1842c:	mov	r7, #0
   18430:	mov	sl, #0
   18434:	mov	r4, #0
   18438:	b	18474 <argp_failure@@Base+0x2524>
   1843c:	ldr	r5, [fp, #8]
   18440:	ldr	ip, [sp, #24]
   18444:	ldr	sl, [sp, #28]
   18448:	ldr	r4, [sp, #8]
   1844c:	b	18478 <argp_failure@@Base+0x2528>
   18450:	ldr	r5, [fp, #8]
   18454:	mov	ip, r8
   18458:	b	184e0 <argp_failure@@Base+0x2590>
   1845c:	ldr	r5, [fp, #8]
   18460:	mov	r0, #0
   18464:	mov	r7, #0
   18468:	mov	sl, #0
   1846c:	mov	r4, #0
   18470:	mvn	ip, #0
   18474:	str	r0, [sp, #32]
   18478:	cmp	sl, #0
   1847c:	ldreq	r0, [sp, #32]
   18480:	cmpeq	r0, #0
   18484:	beq	184d8 <argp_failure@@Base+0x2588>
   18488:	ldr	r0, [fp, #20]
   1848c:	cmp	r0, #0
   18490:	bne	18638 <argp_failure@@Base+0x26e8>
   18494:	cmp	r4, #0
   18498:	beq	184a4 <argp_failure@@Base+0x2554>
   1849c:	mov	r0, sl
   184a0:	bl	13e2c <argp_parse@@Base+0x126c>
   184a4:	ldr	r0, [fp, #16]
   184a8:	ldr	r4, [r0, #20]
   184ac:	mov	r5, r0
   184b0:	mov	r0, r4
   184b4:	bl	11438 <strlen@plt>
   184b8:	mov	r1, #0
   184bc:	add	r0, r4, r0
   184c0:	str	r1, [r5, #8]
   184c4:	str	r0, [r5, #20]
   184c8:	ldr	r0, [r5]
   184cc:	add	r0, r0, #1
   184d0:	str	r0, [r5]
   184d4:	b	18600 <argp_failure@@Base+0x26b0>
   184d8:	cmp	r7, #0
   184dc:	beq	18570 <argp_failure@@Base+0x2620>
   184e0:	ldr	r1, [fp, #16]
   184e4:	mov	r0, #0
   184e8:	str	r0, [r1, #20]
   184ec:	mov	r2, r1
   184f0:	ldr	r1, [r1]
   184f4:	add	r0, r1, #1
   184f8:	str	r0, [r2]
   184fc:	ldrb	r3, [r6]
   18500:	ldr	r2, [r7, #4]
   18504:	cmp	r3, #0
   18508:	beq	18524 <argp_failure@@Base+0x25d4>
   1850c:	cmp	r2, #0
   18510:	beq	185e8 <argp_failure@@Base+0x2698>
   18514:	ldr	r1, [fp, #16]
   18518:	add	r0, r6, #1
   1851c:	str	r0, [r1, #12]
   18520:	b	18550 <argp_failure@@Base+0x2600>
   18524:	cmp	r2, #1
   18528:	bne	18550 <argp_failure@@Base+0x2600>
   1852c:	ldr	r2, [sp, #12]
   18530:	cmp	r0, r2
   18534:	bge	1860c <argp_failure@@Base+0x26bc>
   18538:	ldr	r2, [fp, #16]
   1853c:	add	r1, r1, #2
   18540:	str	r1, [r2]
   18544:	ldr	r1, [sp, #20]
   18548:	ldr	r0, [r1, r0, lsl #2]
   1854c:	str	r0, [r2, #12]
   18550:	cmp	r5, #0
   18554:	strne	ip, [r5]
   18558:	ldr	r1, [r7, #8]
   1855c:	ldr	r0, [r7, #12]
   18560:	cmp	r1, #0
   18564:	strne	r0, [r1]
   18568:	movne	r0, #0
   1856c:	b	18604 <argp_failure@@Base+0x26b4>
   18570:	ldr	r0, [fp, #12]
   18574:	cmp	r0, #0
   18578:	beq	185bc <argp_failure@@Base+0x266c>
   1857c:	ldr	r0, [fp, #16]
   18580:	ldr	r1, [sp, #20]
   18584:	ldr	r0, [r0]
   18588:	ldr	r0, [r1, r0, lsl #2]
   1858c:	ldrb	r0, [r0, #1]
   18590:	cmp	r0, #45	; 0x2d
   18594:	beq	185bc <argp_failure@@Base+0x266c>
   18598:	ldr	r0, [fp, #16]
   1859c:	ldr	r0, [r0, #20]
   185a0:	ldrb	r1, [r0]
   185a4:	ldr	r0, [sp, #16]
   185a8:	bl	11444 <strchr@plt>
   185ac:	mov	r1, r0
   185b0:	mvn	r0, #0
   185b4:	cmp	r1, #0
   185b8:	bne	18604 <argp_failure@@Base+0x26b4>
   185bc:	ldr	r0, [fp, #20]
   185c0:	cmp	r0, #0
   185c4:	bne	18714 <argp_failure@@Base+0x27c4>
   185c8:	ldr	r1, [fp, #16]
   185cc:	mov	r0, #0
   185d0:	str	r0, [r1, #20]
   185d4:	str	r0, [r1, #8]
   185d8:	ldr	r0, [r1]
   185dc:	add	r0, r0, #1
   185e0:	str	r0, [r1]
   185e4:	b	18600 <argp_failure@@Base+0x26b0>
   185e8:	ldr	r0, [fp, #20]
   185ec:	cmp	r0, #0
   185f0:	bne	18748 <argp_failure@@Base+0x27f8>
   185f4:	ldr	r0, [r7, #12]
   185f8:	ldr	r1, [fp, #16]
   185fc:	str	r0, [r1, #8]
   18600:	mov	r0, #63	; 0x3f
   18604:	sub	sp, fp, #28
   18608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1860c:	ldr	r0, [fp, #20]
   18610:	cmp	r0, #0
   18614:	bne	18778 <argp_failure@@Base+0x2828>
   18618:	ldr	r0, [r7, #12]
   1861c:	ldr	r1, [fp, #16]
   18620:	str	r0, [r1, #8]
   18624:	ldr	r0, [sp, #16]
   18628:	ldrb	r0, [r0]
   1862c:	cmp	r0, #58	; 0x3a
   18630:	movwne	r0, #63	; 0x3f
   18634:	b	18604 <argp_failure@@Base+0x26b4>
   18638:	movw	r5, #63664	; 0xf8b0
   1863c:	ldr	r1, [sp, #32]
   18640:	movt	r5, #2
   18644:	ldr	r0, [r5]
   18648:	cmp	r1, #0
   1864c:	beq	18678 <argp_failure@@Base+0x2728>
   18650:	ldr	r1, [sp, #20]
   18654:	ldr	r3, [fp, #24]
   18658:	ldr	r2, [r1]
   1865c:	ldr	r1, [fp, #16]
   18660:	ldr	r1, [r1, #20]
   18664:	str	r1, [sp]
   18668:	movw	r1, #45897	; 0xb349
   1866c:	movt	r1, #1
   18670:	bl	11450 <fprintf@plt>
   18674:	b	18494 <argp_failure@@Base+0x2544>
   18678:	bl	114e0 <flockfile@plt>
   1867c:	ldr	r1, [fp, #16]
   18680:	ldr	r0, [sp, #20]
   18684:	ldr	r9, [fp, #24]
   18688:	ldr	r1, [r1, #20]
   1868c:	ldr	r2, [r0]
   18690:	ldr	r0, [r5]
   18694:	mov	r3, r9
   18698:	str	r1, [sp]
   1869c:	movw	r1, #45929	; 0xb369
   186a0:	movt	r1, #1
   186a4:	bl	11450 <fprintf@plt>
   186a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   186ac:	cmp	r8, #0
   186b0:	beq	186fc <argp_failure@@Base+0x27ac>
   186b4:	mov	r6, sl
   186b8:	b	186e0 <argp_failure@@Base+0x2790>
   186bc:	ldr	r3, [r1]
   186c0:	ldr	r0, [r5]
   186c4:	mov	r7, r1
   186c8:	movw	r1, #45976	; 0xb398
   186cc:	mov	r2, r9
   186d0:	movt	r1, #1
   186d4:	bl	11450 <fprintf@plt>
   186d8:	mov	r1, r7
   186dc:	b	186ec <argp_failure@@Base+0x279c>
   186e0:	ldrb	r0, [r6]
   186e4:	cmp	r0, #0
   186e8:	bne	186bc <argp_failure@@Base+0x276c>
   186ec:	add	r1, r1, #16
   186f0:	add	r6, r6, #1
   186f4:	subs	r8, r8, #1
   186f8:	bne	186e0 <argp_failure@@Base+0x2790>
   186fc:	ldr	r1, [r5]
   18700:	mov	r0, #10
   18704:	bl	114bc <fputc@plt>
   18708:	ldr	r0, [r5]
   1870c:	bl	1139c <funlockfile@plt>
   18710:	b	18494 <argp_failure@@Base+0x2544>
   18714:	ldr	r1, [fp, #16]
   18718:	ldr	r0, [sp, #20]
   1871c:	ldr	r3, [fp, #24]
   18720:	ldr	r2, [r0]
   18724:	movw	r0, #63664	; 0xf8b0
   18728:	ldr	r1, [r1, #20]
   1872c:	movt	r0, #2
   18730:	ldr	r0, [r0]
   18734:	str	r1, [sp]
   18738:	movw	r1, #45984	; 0xb3a0
   1873c:	movt	r1, #1
   18740:	bl	11450 <fprintf@plt>
   18744:	b	185c8 <argp_failure@@Base+0x2678>
   18748:	ldr	r0, [sp, #20]
   1874c:	ldr	r1, [r7]
   18750:	ldr	r3, [fp, #24]
   18754:	ldr	r2, [r0]
   18758:	movw	r0, #63664	; 0xf8b0
   1875c:	str	r1, [sp]
   18760:	movw	r1, #46016	; 0xb3c0
   18764:	movt	r0, #2
   18768:	movt	r1, #1
   1876c:	ldr	r0, [r0]
   18770:	bl	11450 <fprintf@plt>
   18774:	b	185f4 <argp_failure@@Base+0x26a4>
   18778:	ldr	r0, [sp, #20]
   1877c:	ldr	r1, [r7]
   18780:	ldr	r3, [fp, #24]
   18784:	ldr	r2, [r0]
   18788:	movw	r0, #63664	; 0xf8b0
   1878c:	str	r1, [sp]
   18790:	movw	r1, #46061	; 0xb3ed
   18794:	movt	r0, #2
   18798:	movt	r1, #1
   1879c:	ldr	r0, [r0]
   187a0:	bl	11450 <fprintf@plt>
   187a4:	b	18618 <argp_failure@@Base+0x26c8>
   187a8:	push	{r4, r5, r6, r7, fp, lr}
   187ac:	add	fp, sp, #16
   187b0:	sub	sp, sp, #16
   187b4:	movw	r7, #63636	; 0xf894
   187b8:	movw	r5, #63640	; 0xf898
   187bc:	movw	r6, #63712	; 0xf8e0
   187c0:	movt	r5, #2
   187c4:	movt	r7, #2
   187c8:	movt	r6, #2
   187cc:	ldr	r4, [r7]
   187d0:	ldr	r5, [r5]
   187d4:	stm	r6, {r4, r5}
   187d8:	ldr	r5, [fp, #16]
   187dc:	str	r6, [sp, #8]
   187e0:	str	r5, [sp, #12]
   187e4:	ldr	r5, [fp, #12]
   187e8:	str	r5, [sp, #4]
   187ec:	ldr	r5, [fp, #8]
   187f0:	str	r5, [sp]
   187f4:	bl	17bb0 <argp_failure@@Base+0x1c60>
   187f8:	ldr	r1, [r6]
   187fc:	ldr	r3, [r6, #12]
   18800:	ldr	r2, [r6, #8]
   18804:	str	r1, [r7]
   18808:	movw	r1, #63804	; 0xf93c
   1880c:	movt	r1, #2
   18810:	str	r3, [r1]
   18814:	movw	r1, #63644	; 0xf89c
   18818:	movt	r1, #2
   1881c:	str	r2, [r1]
   18820:	sub	sp, fp, #16
   18824:	pop	{r4, r5, r6, r7, fp, pc}
   18828:	push	{r4, r5, r6, sl, fp, lr}
   1882c:	add	fp, sp, #16
   18830:	sub	sp, sp, #16
   18834:	movw	r6, #63636	; 0xf894
   18838:	movw	r4, #63640	; 0xf898
   1883c:	movw	r5, #63712	; 0xf8e0
   18840:	movt	r4, #2
   18844:	movt	r6, #2
   18848:	movt	r5, #2
   1884c:	ldr	r3, [r6]
   18850:	ldr	r4, [r4]
   18854:	stm	r5, {r3, r4}
   18858:	mov	r4, #0
   1885c:	mov	r3, #1
   18860:	str	r4, [sp]
   18864:	stmib	sp, {r4, r5}
   18868:	str	r3, [sp, #12]
   1886c:	mov	r3, #0
   18870:	bl	17bb0 <argp_failure@@Base+0x1c60>
   18874:	ldr	r1, [r5]
   18878:	ldr	r3, [r5, #12]
   1887c:	ldr	r2, [r5, #8]
   18880:	str	r1, [r6]
   18884:	movw	r1, #63804	; 0xf93c
   18888:	movt	r1, #2
   1888c:	str	r3, [r1]
   18890:	movw	r1, #63644	; 0xf89c
   18894:	movt	r1, #2
   18898:	str	r2, [r1]
   1889c:	sub	sp, fp, #16
   188a0:	pop	{r4, r5, r6, sl, fp, pc}
   188a4:	cmp	r2, #0
   188a8:	beq	188d8 <argp_failure@@Base+0x2988>
   188ac:	mvn	r3, #0
   188b0:	udiv	r3, r3, r2
   188b4:	cmp	r3, r1
   188b8:	bcs	188d8 <argp_failure@@Base+0x2988>
   188bc:	push	{fp, lr}
   188c0:	mov	fp, sp
   188c4:	bl	1145c <__errno_location@plt>
   188c8:	mov	r1, #12
   188cc:	str	r1, [r0]
   188d0:	mov	r0, #0
   188d4:	pop	{fp, pc}
   188d8:	mul	r1, r2, r1
   188dc:	b	14c1c <_obstack_memory_used@@Base+0x9d0>
   188e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   188e4:	add	fp, sp, #24
   188e8:	mov	r5, r0
   188ec:	mov	r0, #36	; 0x24
   188f0:	mov	r8, r3
   188f4:	mov	r6, r2
   188f8:	mov	r7, r1
   188fc:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   18900:	mov	r4, r0
   18904:	cmp	r0, #0
   18908:	beq	18954 <argp_failure@@Base+0x2a04>
   1890c:	mov	r0, #0
   18910:	stm	r4, {r5, r7}
   18914:	str	r6, [r4, #8]
   18918:	str	r8, [r4, #12]
   1891c:	str	r0, [r4, #16]
   18920:	str	r0, [r4, #20]
   18924:	mov	r0, #200	; 0xc8
   18928:	bl	14bec <_obstack_memory_used@@Base+0x9a0>
   1892c:	cmp	r0, #0
   18930:	str	r0, [r4, #24]
   18934:	beq	18948 <argp_failure@@Base+0x29f8>
   18938:	add	r1, r0, #200	; 0xc8
   1893c:	str	r0, [r4, #28]
   18940:	str	r1, [r4, #32]
   18944:	b	18954 <argp_failure@@Base+0x2a04>
   18948:	mov	r0, r4
   1894c:	bl	13e2c <argp_parse@@Base+0x126c>
   18950:	mov	r4, #0
   18954:	mov	r0, r4
   18958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1895c:	push	{r4, sl, fp, lr}
   18960:	add	fp, sp, #8
   18964:	mov	r4, r0
   18968:	bl	189a0 <argp_failure@@Base+0x2a50>
   1896c:	ldr	r0, [r4, #24]
   18970:	ldr	r1, [r4, #28]
   18974:	cmp	r1, r0
   18978:	bls	18990 <argp_failure@@Base+0x2a40>
   1897c:	ldr	r3, [r4]
   18980:	sub	r2, r1, r0
   18984:	mov	r1, #1
   18988:	bl	1136c <fwrite_unlocked@plt>
   1898c:	ldr	r0, [r4, #24]
   18990:	bl	13e2c <argp_parse@@Base+0x126c>
   18994:	mov	r0, r4
   18998:	pop	{r4, sl, fp, lr}
   1899c:	b	13e2c <argp_parse@@Base+0x126c>
   189a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189a4:	add	fp, sp, #28
   189a8:	sub	sp, sp, #12
   189ac:	mov	sl, r0
   189b0:	ldr	r0, [r0, #16]
   189b4:	ldr	r1, [sl, #24]
   189b8:	ldr	r2, [sl, #28]
   189bc:	add	r8, r1, r0
   189c0:	cmp	r8, r2
   189c4:	bcs	18e04 <argp_failure@@Base+0x2eb4>
   189c8:	ldr	r7, [sl, #20]
   189cc:	cmp	r7, #0
   189d0:	beq	189dc <argp_failure@@Base+0x2a8c>
   189d4:	mov	r9, r8
   189d8:	b	18a50 <argp_failure@@Base+0x2b00>
   189dc:	ldr	r7, [sl, #4]
   189e0:	cmp	r7, #0
   189e4:	beq	18b60 <argp_failure@@Base+0x2c10>
   189e8:	ldr	r1, [sl, #32]
   189ec:	add	r0, r2, r7
   189f0:	mov	r5, r7
   189f4:	cmp	r0, r1
   189f8:	bcs	18a30 <argp_failure@@Base+0x2ae0>
   189fc:	add	r9, r8, r7
   18a00:	sub	r2, r2, r8
   18a04:	mov	r1, r8
   18a08:	mov	r0, r9
   18a0c:	bl	11300 <memmove@plt>
   18a10:	ldr	r0, [sl, #28]
   18a14:	mov	r1, #32
   18a18:	mov	r2, r7
   18a1c:	add	r0, r0, r7
   18a20:	str	r0, [sl, #28]
   18a24:	mov	r0, r8
   18a28:	bl	11480 <memset@plt>
   18a2c:	b	18a48 <argp_failure@@Base+0x2af8>
   18a30:	ldr	r1, [sl]
   18a34:	mov	r0, #32
   18a38:	bl	11594 <putc_unlocked@plt>
   18a3c:	subs	r5, r5, #1
   18a40:	bne	18a30 <argp_failure@@Base+0x2ae0>
   18a44:	mov	r9, r8
   18a48:	str	r7, [sl, #20]
   18a4c:	ldr	r2, [sl, #28]
   18a50:	sub	r4, r2, r9
   18a54:	str	r2, [sp, #8]
   18a58:	mov	r0, r9
   18a5c:	mov	r1, #10
   18a60:	mov	r2, r4
   18a64:	bl	11498 <memchr@plt>
   18a68:	cmn	r7, #1
   18a6c:	mov	r5, r0
   18a70:	movle	r7, #0
   18a74:	strle	r7, [sl, #20]
   18a78:	cmp	r5, #0
   18a7c:	beq	18a9c <argp_failure@@Base+0x2b4c>
   18a80:	ldr	r6, [sl, #8]
   18a84:	ldr	r2, [sp, #8]
   18a88:	sub	r0, r5, r9
   18a8c:	add	r0, r0, r7
   18a90:	cmp	r0, r6
   18a94:	bge	18ab4 <argp_failure@@Base+0x2b64>
   18a98:	b	18cf0 <argp_failure@@Base+0x2da0>
   18a9c:	ldr	r2, [sp, #8]
   18aa0:	ldr	r6, [sl, #8]
   18aa4:	add	r0, r7, r4
   18aa8:	cmp	r0, r6
   18aac:	mov	r5, r2
   18ab0:	bcc	18de4 <argp_failure@@Base+0x2e94>
   18ab4:	ldr	r0, [sl, #12]
   18ab8:	str	r4, [sp, #4]
   18abc:	cmn	r0, #1
   18ac0:	ble	18b10 <argp_failure@@Base+0x2bc0>
   18ac4:	sub	r8, r6, r7
   18ac8:	mov	r4, r0
   18acc:	mov	r1, #0
   18ad0:	add	r7, r9, r8
   18ad4:	cmp	r8, #0
   18ad8:	blt	18b58 <argp_failure@@Base+0x2c08>
   18adc:	bl	11420 <__ctype_b_loc@plt>
   18ae0:	ldr	r1, [r0]
   18ae4:	mov	r0, r7
   18ae8:	ldrb	r2, [r0]
   18aec:	ldrb	r2, [r1, r2, lsl #1]
   18af0:	tst	r2, #1
   18af4:	bne	18b68 <argp_failure@@Base+0x2c18>
   18af8:	sub	r0, r0, #1
   18afc:	cmp	r0, r9
   18b00:	bcs	18ae8 <argp_failure@@Base+0x2b98>
   18b04:	ldr	r2, [sp, #8]
   18b08:	mov	r1, #0
   18b0c:	b	18b70 <argp_failure@@Base+0x2c20>
   18b10:	sub	r8, r6, #1
   18b14:	cmp	r5, r2
   18b18:	bcs	18dec <argp_failure@@Base+0x2e9c>
   18b1c:	sub	r0, r8, r7
   18b20:	sub	r2, r2, r5
   18b24:	mov	r1, r5
   18b28:	add	r0, r9, r0
   18b2c:	bl	11300 <memmove@plt>
   18b30:	ldr	r0, [sl, #20]
   18b34:	ldr	r1, [sl, #28]
   18b38:	mov	r7, #0
   18b3c:	str	r7, [sl, #20]
   18b40:	sub	r0, r8, r0
   18b44:	add	r8, r9, r6
   18b48:	add	r0, r9, r0
   18b4c:	sub	r0, r5, r0
   18b50:	add	r2, r1, r0
   18b54:	b	18dd4 <argp_failure@@Base+0x2e84>
   18b58:	mov	r0, r7
   18b5c:	b	18b70 <argp_failure@@Base+0x2c20>
   18b60:	mov	r7, #0
   18b64:	b	189d4 <argp_failure@@Base+0x2a84>
   18b68:	ldr	r2, [sp, #8]
   18b6c:	mov	r1, #1
   18b70:	add	r6, r0, #1
   18b74:	cmp	r6, r9
   18b78:	bls	18bb8 <argp_failure@@Base+0x2c68>
   18b7c:	cmp	r1, #0
   18b80:	beq	18c1c <argp_failure@@Base+0x2ccc>
   18b84:	sub	r1, r0, #1
   18b88:	mov	r5, r1
   18b8c:	cmp	r1, r9
   18b90:	bcc	18bb0 <argp_failure@@Base+0x2c60>
   18b94:	bl	11420 <__ctype_b_loc@plt>
   18b98:	mov	r1, r5
   18b9c:	ldr	r0, [r0]
   18ba0:	ldrb	r2, [r1], #-1
   18ba4:	ldrb	r0, [r0, r2, lsl #1]
   18ba8:	tst	r0, #1
   18bac:	bne	18b88 <argp_failure@@Base+0x2c38>
   18bb0:	add	r7, r5, #1
   18bb4:	b	18c14 <argp_failure@@Base+0x2cc4>
   18bb8:	cmp	r7, r5
   18bbc:	bcs	18bf0 <argp_failure@@Base+0x2ca0>
   18bc0:	add	r0, r9, r8
   18bc4:	add	r1, r0, #1
   18bc8:	mov	r7, r1
   18bcc:	cmp	r1, r5
   18bd0:	bcs	18bf0 <argp_failure@@Base+0x2ca0>
   18bd4:	bl	11420 <__ctype_b_loc@plt>
   18bd8:	mov	r1, r7
   18bdc:	ldr	r0, [r0]
   18be0:	ldrb	r2, [r1], #1
   18be4:	ldrb	r0, [r0, r2, lsl #1]
   18be8:	tst	r0, #1
   18bec:	beq	18bc8 <argp_failure@@Base+0x2c78>
   18bf0:	cmp	r7, r5
   18bf4:	beq	18cec <argp_failure@@Base+0x2d9c>
   18bf8:	bl	11420 <__ctype_b_loc@plt>
   18bfc:	ldr	r0, [r0]
   18c00:	mov	r6, r7
   18c04:	ldrb	r1, [r6, #1]!
   18c08:	ldrb	r1, [r0, r1, lsl #1]
   18c0c:	tst	r1, #1
   18c10:	bne	18c04 <argp_failure@@Base+0x2cb4>
   18c14:	ldr	r2, [sp, #8]
   18c18:	b	18c20 <argp_failure@@Base+0x2cd0>
   18c1c:	mov	r7, r6
   18c20:	add	r0, r2, #1
   18c24:	mov	r3, r4
   18c28:	cmp	r6, r0
   18c2c:	beq	18c50 <argp_failure@@Base+0x2d00>
   18c30:	add	r8, r7, #1
   18c34:	cmp	r2, r6
   18c38:	bls	18d04 <argp_failure@@Base+0x2db4>
   18c3c:	sub	r0, r6, r8
   18c40:	cmp	r0, r3
   18c44:	bge	18d04 <argp_failure@@Base+0x2db4>
   18c48:	ldr	r0, [sl, #32]
   18c4c:	b	18c68 <argp_failure@@Base+0x2d18>
   18c50:	cmp	r2, r6
   18c54:	bls	18d00 <argp_failure@@Base+0x2db0>
   18c58:	ldr	r0, [sl, #32]
   18c5c:	sub	r1, r0, r7
   18c60:	cmp	r1, r3
   18c64:	bgt	18d00 <argp_failure@@Base+0x2db0>
   18c68:	sub	r0, r0, r2
   18c6c:	add	r1, r3, #1
   18c70:	cmp	r0, r1
   18c74:	ble	18cac <argp_failure@@Base+0x2d5c>
   18c78:	sub	r4, r2, r6
   18c7c:	add	r8, r7, #1
   18c80:	mov	r1, r6
   18c84:	add	r0, r8, r3
   18c88:	mov	r2, r4
   18c8c:	bl	11300 <memmove@plt>
   18c90:	ldr	r0, [sl, #12]
   18c94:	mov	r1, #10
   18c98:	strb	r1, [r7]
   18c9c:	add	r6, r8, r0
   18ca0:	add	r0, r6, r4
   18ca4:	sub	r0, r0, r9
   18ca8:	b	18ce4 <argp_failure@@Base+0x2d94>
   18cac:	ldr	r0, [sl, #24]
   18cb0:	cmp	r7, r0
   18cb4:	bls	18cc8 <argp_failure@@Base+0x2d78>
   18cb8:	ldr	r3, [sl]
   18cbc:	sub	r2, r7, r0
   18cc0:	mov	r1, #1
   18cc4:	bl	1136c <fwrite_unlocked@plt>
   18cc8:	ldr	r1, [sl]
   18ccc:	mov	r0, #10
   18cd0:	bl	11594 <putc_unlocked@plt>
   18cd4:	ldr	r8, [sl, #24]
   18cd8:	ldr	r0, [sp, #8]
   18cdc:	sub	r0, r0, r8
   18ce0:	mov	r9, r8
   18ce4:	str	r0, [sp, #4]
   18ce8:	b	18d0c <argp_failure@@Base+0x2dbc>
   18cec:	ldr	r2, [sp, #8]
   18cf0:	mov	r7, #0
   18cf4:	add	r8, r5, #1
   18cf8:	str	r7, [sl, #20]
   18cfc:	b	18dd8 <argp_failure@@Base+0x2e88>
   18d00:	add	r8, r7, #1
   18d04:	mov	r0, #10
   18d08:	strb	r0, [r7]
   18d0c:	ldr	r7, [sl, #12]
   18d10:	sub	r0, r6, r8
   18d14:	mov	r1, #32
   18d18:	cmp	r0, r7
   18d1c:	bge	18d70 <argp_failure@@Base+0x2e20>
   18d20:	ldr	r0, [sp, #4]
   18d24:	add	r0, r9, r0
   18d28:	add	r0, r0, #1
   18d2c:	cmp	r6, r0
   18d30:	bne	18d44 <argp_failure@@Base+0x2df4>
   18d34:	ldr	r0, [sl, #32]
   18d38:	sub	r0, r0, r6
   18d3c:	cmp	r0, r7
   18d40:	bge	18d70 <argp_failure@@Base+0x2e20>
   18d44:	cmp	r7, #1
   18d48:	blt	18d94 <argp_failure@@Base+0x2e44>
   18d4c:	mov	r5, #0
   18d50:	ldr	r1, [sl]
   18d54:	mov	r0, #32
   18d58:	bl	11594 <putc_unlocked@plt>
   18d5c:	ldr	r7, [sl, #12]
   18d60:	add	r5, r5, #1
   18d64:	cmp	r5, r7
   18d68:	blt	18d50 <argp_failure@@Base+0x2e00>
   18d6c:	b	18d94 <argp_failure@@Base+0x2e44>
   18d70:	cmp	r7, #1
   18d74:	blt	18d94 <argp_failure@@Base+0x2e44>
   18d78:	mov	r0, #0
   18d7c:	strb	r1, [r8, r0]
   18d80:	add	r0, r0, #1
   18d84:	ldr	r7, [sl, #12]
   18d88:	cmp	r0, r7
   18d8c:	blt	18d7c <argp_failure@@Base+0x2e2c>
   18d90:	add	r8, r8, r0
   18d94:	cmp	r8, r6
   18d98:	bcs	18db8 <argp_failure@@Base+0x2e68>
   18d9c:	ldr	r0, [sp, #4]
   18da0:	mov	r1, r6
   18da4:	add	r0, r9, r0
   18da8:	sub	r2, r0, r6
   18dac:	mov	r0, r8
   18db0:	bl	11300 <memmove@plt>
   18db4:	ldr	r7, [sl, #12]
   18db8:	ldr	r0, [sp, #4]
   18dbc:	cmp	r7, #0
   18dc0:	mvneq	r7, #0
   18dc4:	str	r7, [sl, #20]
   18dc8:	sub	r0, r0, r6
   18dcc:	add	r0, r0, r9
   18dd0:	add	r2, r8, r0
   18dd4:	str	r2, [sl, #28]
   18dd8:	cmp	r8, r2
   18ddc:	bcc	189cc <argp_failure@@Base+0x2a7c>
   18de0:	b	18e04 <argp_failure@@Base+0x2eb4>
   18de4:	str	r0, [sl, #20]
   18de8:	b	18e04 <argp_failure@@Base+0x2eb4>
   18dec:	ldr	r0, [sp, #4]
   18df0:	add	r0, r7, r0
   18df4:	str	r0, [sl, #20]
   18df8:	sub	r0, r8, r0
   18dfc:	add	r2, r2, r0
   18e00:	str	r2, [sl, #28]
   18e04:	ldr	r0, [sl, #24]
   18e08:	sub	r0, r2, r0
   18e0c:	str	r0, [sl, #16]
   18e10:	sub	sp, fp, #28
   18e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e18:	push	{r4, r5, r6, sl, fp, lr}
   18e1c:	add	fp, sp, #16
   18e20:	mov	r4, r0
   18e24:	mov	r6, r1
   18e28:	ldr	r0, [r0, #28]
   18e2c:	mov	r5, #1
   18e30:	ldr	r1, [r4, #32]
   18e34:	sub	r0, r1, r0
   18e38:	cmp	r0, r6
   18e3c:	bcs	18ef8 <argp_failure@@Base+0x2fa8>
   18e40:	mov	r0, r4
   18e44:	bl	189a0 <argp_failure@@Base+0x2a50>
   18e48:	ldr	r0, [r4, #24]
   18e4c:	ldr	r1, [r4, #28]
   18e50:	ldr	r3, [r4]
   18e54:	mov	r5, #1
   18e58:	sub	r2, r1, r0
   18e5c:	mov	r1, #1
   18e60:	bl	1136c <fwrite_unlocked@plt>
   18e64:	mov	r1, r0
   18e68:	ldr	r0, [r4, #24]
   18e6c:	ldr	r2, [r4, #28]
   18e70:	sub	r3, r2, r0
   18e74:	cmp	r1, r3
   18e78:	bne	18ec4 <argp_failure@@Base+0x2f74>
   18e7c:	mov	r1, #0
   18e80:	str	r1, [r4, #16]
   18e84:	str	r0, [r4, #28]
   18e88:	ldr	r1, [r4, #32]
   18e8c:	sub	r1, r1, r0
   18e90:	cmp	r1, r6
   18e94:	bcs	18ef8 <argp_failure@@Base+0x2fa8>
   18e98:	adds	r6, r1, r6
   18e9c:	bcs	18ee8 <argp_failure@@Base+0x2f98>
   18ea0:	mov	r1, r6
   18ea4:	bl	14c1c <_obstack_memory_used@@Base+0x9d0>
   18ea8:	cmp	r0, #0
   18eac:	beq	18ee8 <argp_failure@@Base+0x2f98>
   18eb0:	add	r1, r0, r6
   18eb4:	str	r0, [r4, #24]
   18eb8:	str	r0, [r4, #28]
   18ebc:	str	r1, [r4, #32]
   18ec0:	b	18ef8 <argp_failure@@Base+0x2fa8>
   18ec4:	sub	r2, r2, r1
   18ec8:	str	r2, [r4, #28]
   18ecc:	sub	r2, r2, r0
   18ed0:	ldr	r3, [r4, #16]
   18ed4:	sub	r3, r3, r1
   18ed8:	add	r1, r0, r1
   18edc:	str	r3, [r4, #16]
   18ee0:	bl	11300 <memmove@plt>
   18ee4:	b	18ef4 <argp_failure@@Base+0x2fa4>
   18ee8:	bl	1145c <__errno_location@plt>
   18eec:	mov	r1, #12
   18ef0:	str	r1, [r0]
   18ef4:	mov	r5, #0
   18ef8:	mov	r0, r5
   18efc:	pop	{r4, r5, r6, sl, fp, pc}
   18f00:	sub	sp, sp, #8
   18f04:	push	{r4, r5, r6, r7, fp, lr}
   18f08:	add	fp, sp, #16
   18f0c:	sub	sp, sp, #8
   18f10:	mov	r5, r1
   18f14:	mov	r4, r0
   18f18:	mov	r1, #150	; 0x96
   18f1c:	add	r6, fp, #8
   18f20:	str	r3, [fp, #12]
   18f24:	str	r2, [fp, #8]
   18f28:	mov	r0, r4
   18f2c:	bl	18e18 <argp_failure@@Base+0x2ec8>
   18f30:	cmp	r0, #0
   18f34:	beq	18f74 <argp_failure@@Base+0x3024>
   18f38:	str	r6, [sp, #4]
   18f3c:	mov	r2, r5
   18f40:	mov	r3, r6
   18f44:	ldr	r0, [r4, #28]
   18f48:	ldr	r1, [r4, #32]
   18f4c:	sub	r7, r1, r0
   18f50:	mov	r1, r7
   18f54:	bl	114ec <vsnprintf@plt>
   18f58:	add	r1, r0, #1
   18f5c:	cmp	r0, r7
   18f60:	bcs	18f28 <argp_failure@@Base+0x2fd8>
   18f64:	ldr	r1, [r4, #28]
   18f68:	add	r1, r1, r0
   18f6c:	str	r1, [r4, #28]
   18f70:	b	18f78 <argp_failure@@Base+0x3028>
   18f74:	mvn	r0, #0
   18f78:	sub	sp, fp, #16
   18f7c:	pop	{r4, r5, r6, r7, fp, lr}
   18f80:	add	sp, sp, #8
   18f84:	bx	lr
   18f88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18f8c:	mov	r7, r0
   18f90:	ldr	r6, [pc, #72]	; 18fe0 <argp_failure@@Base+0x3090>
   18f94:	ldr	r5, [pc, #72]	; 18fe4 <argp_failure@@Base+0x3094>
   18f98:	add	r6, pc, r6
   18f9c:	add	r5, pc, r5
   18fa0:	sub	r6, r6, r5
   18fa4:	mov	r8, r1
   18fa8:	mov	r9, r2
   18fac:	bl	11298 <fdopen@plt-0x20>
   18fb0:	asrs	r6, r6, #2
   18fb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18fb8:	mov	r4, #0
   18fbc:	add	r4, r4, #1
   18fc0:	ldr	r3, [r5], #4
   18fc4:	mov	r2, r9
   18fc8:	mov	r1, r8
   18fcc:	mov	r0, r7
   18fd0:	blx	r3
   18fd4:	cmp	r6, r4
   18fd8:	bne	18fbc <argp_failure@@Base+0x306c>
   18fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18fe0:	andeq	r2, r1, ip, ror #30
   18fe4:	andeq	r2, r1, r4, ror #30
   18fe8:	bx	lr

Disassembly of section .fini:

00018fec <.fini>:
   18fec:	push	{r3, lr}
   18ff0:	pop	{r3, pc}
