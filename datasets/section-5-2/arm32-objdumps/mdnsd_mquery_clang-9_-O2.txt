
../repos/mdnsd/src/.libs/mquery:     file format elf32-littlearm


Disassembly of section .init:

00010878 <.init>:
   10878:	push	{r3, lr}
   1087c:	bl	10a30 <close@plt+0x48>
   10880:	pop	{r3, pc}

Disassembly of section .plt:

00010884 <mdnsd_new@plt-0x14>:
   10884:	push	{lr}		; (str lr, [sp, #-4]!)
   10888:	ldr	lr, [pc, #4]	; 10894 <mdnsd_new@plt-0x4>
   1088c:	add	lr, pc, lr
   10890:	ldr	pc, [lr, #8]!
   10894:	andeq	r1, r1, ip, ror #14

00010898 <mdnsd_new@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1900]!	; 0x76c

000108a4 <strtol@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1892]!	; 0x764

000108b0 <setsockopt@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1884]!	; 0x75c

000108bc <printf@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1876]!	; 0x754

000108c8 <time@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1868]!	; 0x74c

000108d4 <inet_ntoa@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1860]!	; 0x744

000108e0 <select@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1852]!	; 0x73c

000108ec <recvfrom@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1844]!	; 0x734

000108f8 <puts@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1836]!	; 0x72c

00010904 <__libc_start_main@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1828]!	; 0x724

00010910 <strerror@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1820]!	; 0x71c

0001091c <__gmon_start__@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1812]!	; 0x714

00010928 <getopt@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1804]!	; 0x70c

00010934 <message_packet@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1796]!	; 0x704

00010940 <message_parse@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1788]!	; 0x6fc

0001094c <__errno_location@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1780]!	; 0x6f4

00010958 <bind@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1772]!	; 0x6ec

00010964 <mdnsd_log@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010970 <memset@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1756]!	; 0x6dc

0001097c <sendto@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1748]!	; 0x6d4

00010988 <mdnsd_sleep@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1740]!	; 0x6cc

00010994 <message_packet_len@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1732]!	; 0x6c4

000109a0 <mdnsd_in@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1724]!	; 0x6bc

000109ac <mdnsd_out@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1716]!	; 0x6b4

000109b8 <socket@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1708]!	; 0x6ac

000109c4 <mdnsd_query@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1700]!	; 0x6a4

000109d0 <inet_addr@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1692]!	; 0x69c

000109dc <abort@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1684]!	; 0x694

000109e8 <close@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1676]!	; 0x68c

Disassembly of section .text:

000109f4 <.text>:
   109f4:	mov	fp, #0
   109f8:	mov	lr, #0
   109fc:	pop	{r1}		; (ldr r1, [sp], #4)
   10a00:	mov	r2, sp
   10a04:	push	{r2}		; (str r2, [sp, #-4]!)
   10a08:	push	{r0}		; (str r0, [sp, #-4]!)
   10a0c:	ldr	ip, [pc, #16]	; 10a24 <close@plt+0x3c>
   10a10:	push	{ip}		; (str ip, [sp, #-4]!)
   10a14:	ldr	r0, [pc, #12]	; 10a28 <close@plt+0x40>
   10a18:	ldr	r3, [pc, #12]	; 10a2c <close@plt+0x44>
   10a1c:	bl	10904 <__libc_start_main@plt>
   10a20:	bl	109dc <abort@plt>
   10a24:	andeq	r1, r1, r0, asr r1
   10a28:	andeq	r0, r1, r4, ror #21
   10a2c:	strdeq	r1, [r1], -r0
   10a30:	ldr	r3, [pc, #20]	; 10a4c <close@plt+0x64>
   10a34:	ldr	r2, [pc, #20]	; 10a50 <close@plt+0x68>
   10a38:	add	r3, pc, r3
   10a3c:	ldr	r2, [r3, r2]
   10a40:	cmp	r2, #0
   10a44:	bxeq	lr
   10a48:	b	1091c <__gmon_start__@plt>
   10a4c:	andeq	r1, r1, r0, asr #11
   10a50:	andeq	r0, r0, r4, lsl #1
   10a54:	ldr	r0, [pc, #24]	; 10a74 <close@plt+0x8c>
   10a58:	ldr	r3, [pc, #24]	; 10a78 <close@plt+0x90>
   10a5c:	cmp	r3, r0
   10a60:	bxeq	lr
   10a64:	ldr	r3, [pc, #16]	; 10a7c <close@plt+0x94>
   10a68:	cmp	r3, #0
   10a6c:	bxeq	lr
   10a70:	bx	r3
   10a74:	muleq	r2, r4, r0
   10a78:	muleq	r2, r4, r0
   10a7c:	andeq	r0, r0, r0
   10a80:	ldr	r0, [pc, #36]	; 10aac <close@plt+0xc4>
   10a84:	ldr	r1, [pc, #36]	; 10ab0 <close@plt+0xc8>
   10a88:	sub	r1, r1, r0
   10a8c:	asr	r1, r1, #2
   10a90:	add	r1, r1, r1, lsr #31
   10a94:	asrs	r1, r1, #1
   10a98:	bxeq	lr
   10a9c:	ldr	r3, [pc, #16]	; 10ab4 <close@plt+0xcc>
   10aa0:	cmp	r3, #0
   10aa4:	bxeq	lr
   10aa8:	bx	r3
   10aac:	muleq	r2, r4, r0
   10ab0:	muleq	r2, r4, r0
   10ab4:	andeq	r0, r0, r0
   10ab8:	push	{r4, lr}
   10abc:	ldr	r4, [pc, #24]	; 10adc <close@plt+0xf4>
   10ac0:	ldrb	r3, [r4]
   10ac4:	cmp	r3, #0
   10ac8:	popne	{r4, pc}
   10acc:	bl	10a54 <close@plt+0x6c>
   10ad0:	mov	r3, #1
   10ad4:	strb	r3, [r4]
   10ad8:	pop	{r4, pc}
   10adc:	muleq	r2, r4, r0
   10ae0:	b	10a80 <close@plt+0x98>
   10ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ae8:	add	fp, sp, #28
   10aec:	sub	sp, sp, #4
   10af0:	vpush	{d8-d9}
   10af4:	sub	sp, sp, #280	; 0x118
   10af8:	sub	sp, sp, #133120	; 0x20800
   10afc:	ldr	r7, [pc, #1236]	; 10fd8 <close@plt+0x5f0>
   10b00:	ldr	r6, [pc, #1236]	; 10fdc <close@plt+0x5f4>
   10b04:	add	sl, sp, #188	; 0xbc
   10b08:	mov	r4, r1
   10b0c:	mov	r5, r0
   10b10:	mov	r9, #12
   10b14:	ldr	r6, [pc, r6]
   10b18:	add	r7, pc, r7
   10b1c:	b	10b34 <close@plt+0x14c>
   10b20:	ldr	r0, [r6]
   10b24:	mov	r1, #0
   10b28:	mov	r2, #10
   10b2c:	bl	108a4 <strtol@plt>
   10b30:	mov	r9, r0
   10b34:	mov	r0, r5
   10b38:	mov	r1, r4
   10b3c:	mov	r2, r7
   10b40:	bl	10928 <getopt@plt>
   10b44:	cmp	r0, #116	; 0x74
   10b48:	beq	10b20 <close@plt+0x138>
   10b4c:	cmn	r0, #1
   10b50:	beq	10b74 <close@plt+0x18c>
   10b54:	cmp	r0, #104	; 0x68
   10b58:	cmpne	r0, #63	; 0x3f
   10b5c:	bne	10c94 <close@plt+0x2ac>
   10b60:	ldr	r0, [pc, #1144]	; 10fe0 <close@plt+0x5f8>
   10b64:	add	r0, pc, r0
   10b68:	bl	108f8 <puts@plt>
   10b6c:	mov	r0, #0
   10b70:	b	10fa8 <close@plt+0x5c0>
   10b74:	ldr	r0, [pc, #1132]	; 10fe8 <close@plt+0x600>
   10b78:	mov	r1, #1000	; 0x3e8
   10b7c:	mov	r6, #1
   10b80:	ldr	r0, [pc, r0]
   10b84:	ldr	r0, [r0]
   10b88:	cmp	r0, r5
   10b8c:	ldrlt	r8, [r4, r0, lsl #2]
   10b90:	mov	r0, #1
   10b94:	ldrge	r8, [pc, #1104]	; 10fec <close@plt+0x604>
   10b98:	addge	r8, pc, r8
   10b9c:	bl	10898 <mdnsd_new@plt>
   10ba0:	str	r0, [sp, #52]	; 0x34
   10ba4:	mov	r0, #2
   10ba8:	movw	r1, #2050	; 0x802
   10bac:	mov	r2, #0
   10bb0:	str	r6, [sp, #56]	; 0x38
   10bb4:	bl	109b8 <socket@plt>
   10bb8:	cmp	r0, #0
   10bbc:	mov	r5, #0
   10bc0:	blt	10d04 <close@plt+0x31c>
   10bc4:	mov	r4, #4
   10bc8:	add	r3, sp, #56	; 0x38
   10bcc:	mov	r1, #1
   10bd0:	mov	r2, #15
   10bd4:	mov	r7, r0
   10bd8:	str	r4, [sp]
   10bdc:	bl	108b0 <setsockopt@plt>
   10be0:	cmp	r0, #0
   10be4:	beq	10c08 <close@plt+0x220>
   10be8:	bl	1094c <__errno_location@plt>
   10bec:	ldr	r0, [r0]
   10bf0:	bl	10910 <strerror@plt>
   10bf4:	ldr	r1, [pc, #1012]	; 10ff0 <close@plt+0x608>
   10bf8:	mov	r2, r0
   10bfc:	mov	r0, #4
   10c00:	add	r1, pc, r1
   10c04:	bl	10964 <mdnsd_log@plt>
   10c08:	add	r3, sp, #56	; 0x38
   10c0c:	mov	r0, r7
   10c10:	mov	r1, #1
   10c14:	mov	r2, #2
   10c18:	str	r4, [sp]
   10c1c:	bl	108b0 <setsockopt@plt>
   10c20:	cmp	r0, #0
   10c24:	beq	10c48 <close@plt+0x260>
   10c28:	bl	1094c <__errno_location@plt>
   10c2c:	ldr	r0, [r0]
   10c30:	bl	10910 <strerror@plt>
   10c34:	ldr	r1, [pc, #952]	; 10ff4 <close@plt+0x60c>
   10c38:	mov	r2, r0
   10c3c:	mov	r0, #4
   10c40:	add	r1, pc, r1
   10c44:	bl	10964 <mdnsd_log@plt>
   10c48:	movw	r0, #2
   10c4c:	add	lr, sp, #65536	; 0x10000
   10c50:	mov	r5, #0
   10c54:	mov	r2, #16
   10c58:	add	r1, lr, #220	; 0xdc
   10c5c:	movt	r0, #59668	; 0xe914
   10c60:	add	lr, sp, #65536	; 0x10000
   10c64:	str	r0, [r1, #12]
   10c68:	str	r5, [r1, #16]
   10c6c:	str	r5, [r1, #20]
   10c70:	str	r5, [r1, #24]
   10c74:	add	r1, lr, #232	; 0xe8
   10c78:	mov	r0, r7
   10c7c:	bl	10958 <bind@plt>
   10c80:	cmp	r0, #0
   10c84:	beq	10ca4 <close@plt+0x2bc>
   10c88:	mov	r0, r7
   10c8c:	bl	109e8 <close@plt>
   10c90:	b	10d04 <close@plt+0x31c>
   10c94:	ldr	r0, [pc, #840]	; 10fe4 <close@plt+0x5fc>
   10c98:	add	r0, pc, r0
   10c9c:	bl	108f8 <puts@plt>
   10ca0:	b	10fa4 <close@plt+0x5bc>
   10ca4:	ldr	r0, [pc, #844]	; 10ff8 <close@plt+0x610>
   10ca8:	add	r0, pc, r0
   10cac:	bl	109d0 <inet_addr@plt>
   10cb0:	str	r0, [sp, #220]	; 0xdc
   10cb4:	mov	r0, #0
   10cb8:	add	r3, sp, #220	; 0xdc
   10cbc:	mov	r1, #0
   10cc0:	mov	r2, #35	; 0x23
   10cc4:	str	r0, [sp, #224]	; 0xe0
   10cc8:	mov	r0, #8
   10ccc:	str	r0, [sp]
   10cd0:	mov	r0, r7
   10cd4:	bl	108b0 <setsockopt@plt>
   10cd8:	cmp	r0, #0
   10cdc:	beq	10d00 <close@plt+0x318>
   10ce0:	bl	1094c <__errno_location@plt>
   10ce4:	ldr	r0, [r0]
   10ce8:	bl	10910 <strerror@plt>
   10cec:	ldr	r1, [pc, #776]	; 10ffc <close@plt+0x614>
   10cf0:	mov	r2, r0
   10cf4:	mov	r0, #4
   10cf8:	add	r1, pc, r1
   10cfc:	bl	10964 <mdnsd_log@plt>
   10d00:	mov	r5, r7
   10d04:	ldr	r0, [pc, #756]	; 11000 <close@plt+0x618>
   10d08:	mov	r1, r9
   10d0c:	mov	r2, r8
   10d10:	add	r0, pc, r0
   10d14:	bl	108bc <printf@plt>
   10d18:	mov	r0, #0
   10d1c:	mov	r1, r8
   10d20:	mov	r2, r9
   10d24:	str	r0, [sp]
   10d28:	ldr	r3, [pc, #724]	; 11004 <close@plt+0x61c>
   10d2c:	ldr	r0, [sp, #52]	; 0x34
   10d30:	add	r3, pc, r3
   10d34:	bl	109c4 <mdnsd_query@plt>
   10d38:	add	r1, sp, #56	; 0x38
   10d3c:	and	r0, r5, #31
   10d40:	add	lr, sp, #65536	; 0x10000
   10d44:	add	r4, sl, #8
   10d48:	vmov.i32	q4, #0	; 0x00000000
   10d4c:	add	r8, sp, #220	; 0xdc
   10d50:	add	r2, r1, #112	; 0x70
   10d54:	lsl	r0, r6, r0
   10d58:	add	r6, lr, #232	; 0xe8
   10d5c:	str	r2, [sp, #40]	; 0x28
   10d60:	add	r2, r1, #96	; 0x60
   10d64:	str	r0, [sp, #48]	; 0x30
   10d68:	add	r0, r5, #1
   10d6c:	str	r2, [sp, #36]	; 0x24
   10d70:	add	r2, r1, #80	; 0x50
   10d74:	str	r0, [sp, #44]	; 0x2c
   10d78:	lsr	r0, r5, #5
   10d7c:	str	r2, [sp, #32]
   10d80:	add	r2, r1, #64	; 0x40
   10d84:	lsl	r0, r0, #2
   10d88:	str	r2, [sp, #28]
   10d8c:	add	r2, r1, #48	; 0x30
   10d90:	str	r0, [sp, #12]
   10d94:	str	r2, [sp, #24]
   10d98:	add	r2, r1, #32
   10d9c:	add	r1, r1, #16
   10da0:	str	r2, [sp, #20]
   10da4:	str	r1, [sp, #16]
   10da8:	ldr	r0, [sp, #52]	; 0x34
   10dac:	bl	10988 <mdnsd_sleep@plt>
   10db0:	ldr	r1, [sp, #40]	; 0x28
   10db4:	ldr	r2, [sp, #12]
   10db8:	str	r0, [sp]
   10dbc:	ldr	r0, [sp, #44]	; 0x2c
   10dc0:	vst1.64	{d8-d9}, [r1]
   10dc4:	ldr	r1, [sp, #36]	; 0x24
   10dc8:	vst1.64	{d8-d9}, [r1]
   10dcc:	ldr	r1, [sp, #32]
   10dd0:	vst1.64	{d8-d9}, [r1]
   10dd4:	ldr	r1, [sp, #28]
   10dd8:	vst1.64	{d8-d9}, [r1]
   10ddc:	ldr	r1, [sp, #24]
   10de0:	vst1.64	{d8-d9}, [r1]
   10de4:	ldr	r1, [sp, #20]
   10de8:	vst1.64	{d8-d9}, [r1]
   10dec:	ldr	r1, [sp, #16]
   10df0:	vst1.64	{d8-d9}, [r1]
   10df4:	add	r1, sp, #56	; 0x38
   10df8:	mov	r7, r1
   10dfc:	vst1.64	{d8-d9}, [r7], r2
   10e00:	ldr	r2, [sp, #48]	; 0x30
   10e04:	ldr	r3, [r7]
   10e08:	mov	r9, r2
   10e0c:	orr	r2, r3, r2
   10e10:	mov	r3, #0
   10e14:	str	r2, [r7]
   10e18:	mov	r2, #0
   10e1c:	bl	108e0 <select@plt>
   10e20:	ldr	r0, [r7]
   10e24:	tst	r0, r9
   10e28:	beq	10eec <close@plt+0x504>
   10e2c:	add	lr, sp, #65536	; 0x10000
   10e30:	mov	r1, #16
   10e34:	add	r7, sp, #204	; 0xcc
   10e38:	movw	r2, #65535	; 0xffff
   10e3c:	mov	r3, #0
   10e40:	add	r0, lr, #220	; 0xdc
   10e44:	mov	r9, r7
   10e48:	str	r7, [sp]
   10e4c:	str	r1, [r0]
   10e50:	str	r0, [sp, #4]
   10e54:	mov	r0, r5
   10e58:	mov	r1, r8
   10e5c:	bl	108ec <recvfrom@plt>
   10e60:	cmp	r0, #1
   10e64:	blt	10ed4 <close@plt+0x4ec>
   10e68:	movw	r7, #2088	; 0x828
   10e6c:	movt	r7, #1
   10e70:	mov	r0, r6
   10e74:	mov	r1, #0
   10e78:	mov	r2, r7
   10e7c:	bl	10970 <memset@plt>
   10e80:	mov	r0, r6
   10e84:	mov	r1, r8
   10e88:	bl	10940 <message_parse@plt>
   10e8c:	cmp	r0, #0
   10e90:	bne	10ea8 <close@plt+0x4c0>
   10e94:	ldr	r2, [sp, #208]	; 0xd0
   10e98:	ldrh	r3, [sl, #18]
   10e9c:	ldr	r0, [sp, #52]	; 0x34
   10ea0:	mov	r1, r6
   10ea4:	bl	109a0 <mdnsd_in@plt>
   10ea8:	add	lr, sp, #65536	; 0x10000
   10eac:	mov	r1, r8
   10eb0:	movw	r2, #65535	; 0xffff
   10eb4:	mov	r3, #0
   10eb8:	str	r9, [sp]
   10ebc:	add	r0, lr, #220	; 0xdc
   10ec0:	str	r0, [sp, #4]
   10ec4:	mov	r0, r5
   10ec8:	bl	108ec <recvfrom@plt>
   10ecc:	cmp	r0, #0
   10ed0:	bgt	10e70 <close@plt+0x488>
   10ed4:	cmp	r0, #0
   10ed8:	bge	10eec <close@plt+0x504>
   10edc:	bl	1094c <__errno_location@plt>
   10ee0:	ldr	r7, [r0]
   10ee4:	cmp	r7, #11
   10ee8:	bne	10fb8 <close@plt+0x5d0>
   10eec:	ldr	r0, [sp, #52]	; 0x34
   10ef0:	add	lr, sp, #65536	; 0x10000
   10ef4:	mov	r1, r6
   10ef8:	add	r2, lr, #228	; 0xe4
   10efc:	add	lr, sp, #65536	; 0x10000
   10f00:	add	r3, lr, #226	; 0xe2
   10f04:	bl	109ac <mdnsd_out@plt>
   10f08:	cmp	r0, #0
   10f0c:	beq	10da8 <close@plt+0x3c0>
   10f10:	mov	r0, #0
   10f14:	add	lr, sp, #65536	; 0x10000
   10f18:	str	r0, [r4]
   10f1c:	str	r0, [r4, #4]
   10f20:	mov	r0, #2
   10f24:	strh	r0, [sl]
   10f28:	add	r0, lr, #220	; 0xdc
   10f2c:	mov	r1, r0
   10f30:	ldrh	r0, [r0, #6]
   10f34:	strh	r0, [sl, #2]
   10f38:	ldr	r0, [r1, #8]
   10f3c:	str	r0, [sp, #192]	; 0xc0
   10f40:	mov	r0, r6
   10f44:	bl	10934 <message_packet@plt>
   10f48:	mov	r9, r0
   10f4c:	mov	r0, r6
   10f50:	bl	10994 <message_packet_len@plt>
   10f54:	mov	r2, r0
   10f58:	mov	r0, #16
   10f5c:	mov	r1, r9
   10f60:	mov	r3, #0
   10f64:	str	sl, [sp]
   10f68:	str	r0, [sp, #4]
   10f6c:	mov	r0, r5
   10f70:	bl	1097c <sendto@plt>
   10f74:	mov	r7, r0
   10f78:	mov	r0, r6
   10f7c:	bl	10994 <message_packet_len@plt>
   10f80:	cmp	r7, r0
   10f84:	beq	10eec <close@plt+0x504>
   10f88:	bl	1094c <__errno_location@plt>
   10f8c:	ldr	r0, [r0]
   10f90:	bl	10910 <strerror@plt>
   10f94:	mov	r1, r0
   10f98:	ldr	r0, [pc, #108]	; 1100c <close@plt+0x624>
   10f9c:	add	r0, pc, r0
   10fa0:	bl	108bc <printf@plt>
   10fa4:	mov	r0, #1
   10fa8:	sub	sp, fp, #48	; 0x30
   10fac:	vpop	{d8-d9}
   10fb0:	add	sp, sp, #4
   10fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fb8:	mov	r0, r7
   10fbc:	bl	10910 <strerror@plt>
   10fc0:	mov	r2, r0
   10fc4:	ldr	r0, [pc, #60]	; 11008 <close@plt+0x620>
   10fc8:	mov	r1, r7
   10fcc:	add	r0, pc, r0
   10fd0:	bl	108bc <printf@plt>
   10fd4:	b	10fa4 <close@plt+0x5bc>
   10fd8:	andeq	r0, r0, r2, ror #12
   10fdc:	andeq	r1, r1, ip, ror #10
   10fe0:	andeq	r0, r0, r4, ror r7
   10fe4:	andeq	r0, r0, r0, asr #12
   10fe8:	strdeq	r1, [r1], -r8
   10fec:	andeq	r0, r0, r4, asr #11
   10ff0:	ldrdeq	r0, [r0], -sp
   10ff4:			; <UNDEFINED> instruction: 0x000005bd
   10ff8:	andeq	r0, r0, r5, ror r5
   10ffc:	andeq	r0, r0, r1, lsr r5
   11000:	andeq	r0, r0, pc, ror #8
   11004:	ldrdeq	r0, [r0], -r8
   11008:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1100c:	andeq	r0, r0, r3, lsr #4
   11010:	push	{r4, r5, r6, sl, fp, lr}
   11014:	add	fp, sp, #16
   11018:	sub	sp, sp, #8
   1101c:	ldr	r4, [r0, #8]
   11020:	mov	r5, r0
   11024:	cmp	r4, #0
   11028:	beq	1103c <close@plt+0x654>
   1102c:	mov	r0, #0
   11030:	bl	108c8 <time@plt>
   11034:	sub	r4, r4, r0
   11038:	b	11040 <close@plt+0x658>
   1103c:	mov	r4, #0
   11040:	ldrh	r1, [r5, #4]
   11044:	cmp	r1, #33	; 0x21
   11048:	beq	11080 <close@plt+0x698>
   1104c:	cmp	r1, #12
   11050:	beq	110a0 <close@plt+0x6b8>
   11054:	cmp	r1, #1
   11058:	bne	110b8 <close@plt+0x6d0>
   1105c:	ldr	r0, [r5, #20]
   11060:	ldr	r6, [r5]
   11064:	bl	108d4 <inet_ntoa@plt>
   11068:	mov	r3, r0
   1106c:	ldr	r0, [pc, #108]	; 110e0 <close@plt+0x6f8>
   11070:	mov	r1, r6
   11074:	mov	r2, r4
   11078:	add	r0, pc, r0
   1107c:	b	110d0 <close@plt+0x6e8>
   11080:	ldrh	r0, [r5, #32]
   11084:	ldr	r1, [r5]
   11088:	ldr	r3, [r5, #24]
   1108c:	mov	r2, r4
   11090:	str	r0, [sp]
   11094:	ldr	r0, [pc, #76]	; 110e8 <close@plt+0x700>
   11098:	add	r0, pc, r0
   1109c:	b	110d0 <close@plt+0x6e8>
   110a0:	ldr	r1, [r5]
   110a4:	ldr	r3, [r5, #24]
   110a8:	ldr	r0, [pc, #52]	; 110e4 <close@plt+0x6fc>
   110ac:	mov	r2, r4
   110b0:	add	r0, pc, r0
   110b4:	b	110d0 <close@plt+0x6e8>
   110b8:	ldrh	r0, [r5, #12]
   110bc:	ldr	r2, [r5]
   110c0:	mov	r3, r4
   110c4:	str	r0, [sp]
   110c8:	ldr	r0, [pc, #28]	; 110ec <close@plt+0x704>
   110cc:	add	r0, pc, r0
   110d0:	bl	108bc <printf@plt>
   110d4:	mov	r0, #0
   110d8:	sub	sp, fp, #16
   110dc:	pop	{r4, r5, r6, sl, fp, pc}
   110e0:	ldrdeq	r0, [r0], -fp
   110e4:	andeq	r0, r0, r1, asr #3
   110e8:	strdeq	r0, [r0], -r6
   110ec:	andeq	r0, r0, r2, ror #3
   110f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110f4:	mov	r7, r0
   110f8:	ldr	r6, [pc, #72]	; 11148 <close@plt+0x760>
   110fc:	ldr	r5, [pc, #72]	; 1114c <close@plt+0x764>
   11100:	add	r6, pc, r6
   11104:	add	r5, pc, r5
   11108:	sub	r6, r6, r5
   1110c:	mov	r8, r1
   11110:	mov	r9, r2
   11114:	bl	10878 <mdnsd_new@plt-0x20>
   11118:	asrs	r6, r6, #2
   1111c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11120:	mov	r4, #0
   11124:	add	r4, r4, #1
   11128:	ldr	r3, [r5], #4
   1112c:	mov	r2, r9
   11130:	mov	r1, r8
   11134:	mov	r0, r7
   11138:	blx	r3
   1113c:	cmp	r6, r4
   11140:	bne	11124 <close@plt+0x73c>
   11144:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11148:	strdeq	r0, [r1], -ip
   1114c:	strdeq	r0, [r1], -r4
   11150:	bx	lr

Disassembly of section .fini:

00011154 <.fini>:
   11154:	push	{r3, lr}
   11158:	pop	{r3, pc}
