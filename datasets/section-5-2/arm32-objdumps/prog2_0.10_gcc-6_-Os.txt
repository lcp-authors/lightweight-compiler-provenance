
../repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

00010630 <.init>:
   10630:	push	{r3, lr}
   10634:	bl	1074c <_start@@Base+0x3c>
   10638:	pop	{r3, pc}

Disassembly of section .plt:

0001063c <printf@plt-0x14>:
   1063c:	push	{lr}		; (str lr, [sp, #-4]!)
   10640:	ldr	lr, [pc, #4]	; 1064c <printf@plt-0x4>
   10644:	add	lr, pc, lr
   10648:	ldr	pc, [lr, #8]!
   1064c:			; <UNDEFINED> instruction: 0x000109b4

00010650 <printf@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2484]!	; 0x9b4

0001065c <memcpy@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2476]!	; 0x9ac

00010668 <__libc_start_main@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2468]!	; 0x9a4

00010674 <__gmon_start__@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2460]!	; 0x99c

00010680 <__isoc99_scanf@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2452]!	; 0x994

0001068c <abort@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2444]!	; 0x98c

Disassembly of section .text:

00010698 <main@@Base>:
   10698:	push	{r4, lr}
   1069c:	sub	sp, sp, #6848	; 0x1ac0
   106a0:	sub	sp, sp, #24
   106a4:	add	r0, sp, #72	; 0x48
   106a8:	bl	10870 <ler_tarefas@@Base>
   106ac:	mov	r4, r0
   106b0:	mov	r1, r0
   106b4:	add	r0, sp, #72	; 0x48
   106b8:	bl	108a8 <lista_tarefas@@Base>
   106bc:	mov	r1, r4
   106c0:	ldr	r0, [pc, #60]	; 10704 <main@@Base+0x6c>
   106c4:	bl	10650 <printf@plt>
   106c8:	mov	r1, r4
   106cc:	add	r2, sp, #4
   106d0:	add	r0, sp, #72	; 0x48
   106d4:	bl	108f8 <analisa_tarefas@@Base>
   106d8:	ldr	r0, [pc, #40]	; 10708 <main@@Base+0x70>
   106dc:	vcvt.f64.f32	d7, s0
   106e0:	vmov	r2, r3, d7
   106e4:	bl	10650 <printf@plt>
   106e8:	add	r1, sp, #4
   106ec:	ldr	r0, [pc, #24]	; 1070c <main@@Base+0x74>
   106f0:	bl	10650 <printf@plt>
   106f4:	mov	r0, #0
   106f8:	add	sp, sp, #6848	; 0x1ac0
   106fc:	add	sp, sp, #24
   10700:	pop	{r4, pc}
   10704:	strdeq	r0, [r1], -r5
   10708:	andeq	r0, r1, r3, lsl sl
   1070c:	andeq	r0, r1, r5, lsr sl

00010710 <_start@@Base>:
   10710:	mov	fp, #0
   10714:	mov	lr, #0
   10718:	pop	{r1}		; (ldr r1, [sp], #4)
   1071c:	mov	r2, sp
   10720:	push	{r2}		; (str r2, [sp, #-4]!)
   10724:	push	{r0}		; (str r0, [sp, #-4]!)
   10728:	ldr	ip, [pc, #16]	; 10740 <_start@@Base+0x30>
   1072c:	push	{ip}		; (str ip, [sp, #-4]!)
   10730:	ldr	r0, [pc, #12]	; 10744 <_start@@Base+0x34>
   10734:	ldr	r3, [pc, #12]	; 10748 <_start@@Base+0x38>
   10738:	bl	10668 <__libc_start_main@plt>
   1073c:	bl	1068c <abort@plt>
   10740:	andeq	r0, r1, ip, asr #19
   10744:	muleq	r1, r8, r6
   10748:	andeq	r0, r1, ip, ror #18
   1074c:	ldr	r3, [pc, #20]	; 10768 <_start@@Base+0x58>
   10750:	ldr	r2, [pc, #20]	; 1076c <_start@@Base+0x5c>
   10754:	add	r3, pc, r3
   10758:	ldr	r2, [r3, r2]
   1075c:	cmp	r2, #0
   10760:	bxeq	lr
   10764:	b	10674 <__gmon_start__@plt>
   10768:	andeq	r0, r1, r4, lsr #17
   1076c:	andeq	r0, r0, r4, lsr #32
   10770:	ldr	r3, [pc, #28]	; 10794 <_start@@Base+0x84>
   10774:	ldr	r0, [pc, #28]	; 10798 <_start@@Base+0x88>
   10778:	sub	r3, r3, r0
   1077c:	cmp	r3, #6
   10780:	bxls	lr
   10784:	ldr	r3, [pc, #16]	; 1079c <_start@@Base+0x8c>
   10788:	cmp	r3, #0
   1078c:	bxeq	lr
   10790:	bx	r3
   10794:	andeq	r1, r2, r3, lsr r0
   10798:	andeq	r1, r2, r0, lsr r0
   1079c:	andeq	r0, r0, r0
   107a0:	ldr	r1, [pc, #36]	; 107cc <_start@@Base+0xbc>
   107a4:	ldr	r0, [pc, #36]	; 107d0 <_start@@Base+0xc0>
   107a8:	sub	r1, r1, r0
   107ac:	asr	r1, r1, #2
   107b0:	add	r1, r1, r1, lsr #31
   107b4:	asrs	r1, r1, #1
   107b8:	bxeq	lr
   107bc:	ldr	r3, [pc, #16]	; 107d4 <_start@@Base+0xc4>
   107c0:	cmp	r3, #0
   107c4:	bxeq	lr
   107c8:	bx	r3
   107cc:	andeq	r1, r2, r0, lsr r0
   107d0:	andeq	r1, r2, r0, lsr r0
   107d4:	andeq	r0, r0, r0
   107d8:	push	{r4, lr}
   107dc:	ldr	r4, [pc, #24]	; 107fc <_start@@Base+0xec>
   107e0:	ldrb	r3, [r4]
   107e4:	cmp	r3, #0
   107e8:	popne	{r4, pc}
   107ec:	bl	10770 <_start@@Base+0x60>
   107f0:	mov	r3, #1
   107f4:	strb	r3, [r4]
   107f8:	pop	{r4, pc}
   107fc:	andeq	r1, r2, r0, lsr r0
   10800:	ldr	r0, [pc, #40]	; 10830 <_start@@Base+0x120>
   10804:	ldr	r3, [r0]
   10808:	cmp	r3, #0
   1080c:	bne	10814 <_start@@Base+0x104>
   10810:	b	107a0 <_start@@Base+0x90>
   10814:	ldr	r3, [pc, #24]	; 10834 <_start@@Base+0x124>
   10818:	cmp	r3, #0
   1081c:	beq	10810 <_start@@Base+0x100>
   10820:	push	{r4, lr}
   10824:	blx	r3
   10828:	pop	{r4, lr}
   1082c:	b	107a0 <_start@@Base+0x90>
   10830:	andeq	r0, r2, r4, lsl pc
   10834:	andeq	r0, r0, r0

00010838 <nova_tarefa@@Base>:
   10838:	add	r3, r0, #64	; 0x40
   1083c:	push	{r0, r1, r2, lr}
   10840:	mov	r1, r0
   10844:	str	r3, [sp]
   10848:	add	r2, r0, #30
   1084c:	add	r3, r0, #60	; 0x3c
   10850:	ldr	r0, [pc, #20]	; 1086c <nova_tarefa@@Base+0x34>
   10854:	bl	10680 <__isoc99_scanf@plt>
   10858:	sub	r0, r0, #4
   1085c:	clz	r0, r0
   10860:	lsr	r0, r0, #5
   10864:	add	sp, sp, #12
   10868:	pop	{pc}		; (ldr pc, [sp], #4)
   1086c:	ldrdeq	r0, [r1], -ip

00010870 <ler_tarefas@@Base>:
   10870:	push	{r4, r5, r6, lr}
   10874:	mov	r5, r0
   10878:	mov	r4, #0
   1087c:	mov	r6, #68	; 0x44
   10880:	mla	r0, r6, r4, r5
   10884:	bl	10838 <nova_tarefa@@Base>
   10888:	cmp	r0, #0
   1088c:	beq	10898 <ler_tarefas@@Base+0x28>
   10890:	cmp	r4, #100	; 0x64
   10894:	bne	108a0 <ler_tarefas@@Base+0x30>
   10898:	mov	r0, r4
   1089c:	pop	{r4, r5, r6, pc}
   108a0:	add	r4, r4, #1
   108a4:	b	10880 <ler_tarefas@@Base+0x10>

000108a8 <lista_tarefas@@Base>:
   108a8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   108ac:	mov	r6, r1
   108b0:	ldr	r7, [pc, #60]	; 108f4 <lista_tarefas@@Base+0x4c>
   108b4:	mov	r4, r0
   108b8:	mov	r5, #0
   108bc:	cmp	r5, r6
   108c0:	blt	108cc <lista_tarefas@@Base+0x24>
   108c4:	add	sp, sp, #12
   108c8:	pop	{r4, r5, r6, r7, pc}
   108cc:	ldr	r3, [r4, #64]	; 0x40
   108d0:	add	r2, r4, #30
   108d4:	str	r3, [sp]
   108d8:	mov	r1, r4
   108dc:	ldr	r3, [r4, #60]	; 0x3c
   108e0:	mov	r0, r7
   108e4:	bl	10650 <printf@plt>
   108e8:	add	r5, r5, #1
   108ec:	add	r4, r4, #68	; 0x44
   108f0:	b	108bc <lista_tarefas@@Base+0x14>
   108f4:	andeq	r0, r1, r8, ror #19

000108f8 <analisa_tarefas@@Base>:
   108f8:	mov	r3, #0
   108fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10900:	mov	r4, r1
   10904:	mov	r9, r2
   10908:	mov	r6, r0
   1090c:	mov	r5, r3
   10910:	mov	r7, r3
   10914:	mov	sl, #68	; 0x44
   10918:	cmp	r7, r4
   1091c:	blt	1093c <analisa_tarefas@@Base+0x44>
   10920:	bic	r3, r4, r4, asr #31
   10924:	vmov	s15, r5
   10928:	vmov	s0, r3
   1092c:	vcvt.f32.s32	s15, s15
   10930:	vcvt.f32.s32	s0, s0
   10934:	vdiv.f32	s0, s15, s0
   10938:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1093c:	ldr	r8, [r6, #60]	; 0x3c
   10940:	cmp	r3, r8
   10944:	add	r5, r5, r8
   10948:	bge	10960 <analisa_tarefas@@Base+0x68>
   1094c:	mov	r2, sl
   10950:	mov	r1, r6
   10954:	mov	r0, r9
   10958:	bl	1065c <memcpy@plt>
   1095c:	mov	r3, r8
   10960:	add	r7, r7, #1
   10964:	add	r6, r6, #68	; 0x44
   10968:	b	10918 <analisa_tarefas@@Base+0x20>

0001096c <__libc_csu_init@@Base>:
   1096c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10970:	mov	r7, r0
   10974:	ldr	r6, [pc, #72]	; 109c4 <__libc_csu_init@@Base+0x58>
   10978:	ldr	r5, [pc, #72]	; 109c8 <__libc_csu_init@@Base+0x5c>
   1097c:	add	r6, pc, r6
   10980:	add	r5, pc, r5
   10984:	sub	r6, r6, r5
   10988:	mov	r8, r1
   1098c:	mov	r9, r2
   10990:	bl	10630 <printf@plt-0x20>
   10994:	asrs	r6, r6, #2
   10998:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1099c:	mov	r4, #0
   109a0:	add	r4, r4, #1
   109a4:	ldr	r3, [r5], #4
   109a8:	mov	r2, r9
   109ac:	mov	r1, r8
   109b0:	mov	r0, r7
   109b4:	blx	r3
   109b8:	cmp	r6, r4
   109bc:	bne	109a0 <__libc_csu_init@@Base+0x34>
   109c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109c4:	andeq	r0, r1, ip, lsl #11
   109c8:	andeq	r0, r1, r4, lsl #11

000109cc <__libc_csu_fini@@Base>:
   109cc:	bx	lr

Disassembly of section .fini:

000109d0 <.fini>:
   109d0:	push	{r3, lr}
   109d4:	pop	{r3, pc}
