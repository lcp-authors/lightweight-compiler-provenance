
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r5, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #86016	; 0x15000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #86016	; 0x15000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #86016	; 0x15000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #86016	; 0x15000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #86016	; 0x15000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #86016	; 0x15000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #86016	; 0x15000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #86016	; 0x15000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #86016	; 0x15000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #86016	; 0x15000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #86016	; 0x15000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #86016	; 0x15000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #86016	; 0x15000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #86016	; 0x15000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #86016	; 0x15000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #86016	; 0x15000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #86016	; 0x15000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	andeq	r5, r1, r4, ror #28
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, r4, lsl #28
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r4, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r7, r2, ip, asr r0
   120cc:	andeq	r7, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r7, r2, ip, asr r0
   12104:	andeq	r7, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r7, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #348	; 0x15c
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	sub	r4, fp, #88	; 0x58
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	bl	125c0 <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	mov	r6, #0
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	umull	r0, r1, r5, r0
   12174:	lsr	r0, r1, #5
   12178:	mov	r1, #100	; 0x64
   1217c:	mls	r0, r0, r1, r5
   12180:	add	r5, r0, #100	; 0x64
   12184:	mov	r0, r4
   12188:	bl	14850 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	14848 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	movw	r4, #24180	; 0x5e74
   121b4:	mov	r5, #0
   121b8:	add	r6, sp, #29
   121bc:	movt	r1, #52428	; 0xcccc
   121c0:	movt	r4, #1
   121c4:	umull	r1, r2, r0, r1
   121c8:	lsr	r1, r2, #2
   121cc:	add	r1, r1, r1, lsl #2
   121d0:	sub	r0, r0, r1
   121d4:	add	r7, r0, #2
   121d8:	mov	r0, r6
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r6
   121f4:	mov	r2, #0
   121f8:	bl	13b84 <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r7
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	13af0 <table_get_column_length@@Base>
   12210:	cmp	r0, #1
   12214:	mov	r8, r0
   12218:	cmpge	r9, #1
   1221c:	blt	12274 <main@@Base+0x13c>
   12220:	movw	r7, #26215	; 0x6667
   12224:	mov	r5, #0
   12228:	sub	r6, fp, #88	; 0x58
   1222c:	movt	r7, #26214	; 0x6666
   12230:	mov	r4, #0
   12234:	bl	12030 <rand@plt>
   12238:	smmul	r1, r0, r7
   1223c:	asr	r2, r1, #3
   12240:	add	r1, r2, r1, lsr #31
   12244:	mov	r2, r5
   12248:	add	r1, r1, r1, lsl #2
   1224c:	sub	r3, r0, r1, lsl #2
   12250:	mov	r0, r6
   12254:	mov	r1, r4
   12258:	bl	14da8 <table_set_int@@Base>
   1225c:	add	r4, r4, #1
   12260:	cmp	r9, r4
   12264:	bne	12234 <main@@Base+0xfc>
   12268:	add	r5, r5, #1
   1226c:	cmp	r5, r8
   12270:	bne	12230 <main@@Base+0xf8>
   12274:	mov	r0, r8
   12278:	mov	r1, #4
   1227c:	bl	11f7c <calloc@plt>
   12280:	mov	r6, r0
   12284:	mov	r0, r8
   12288:	mov	r1, #4
   1228c:	bl	11f7c <calloc@plt>
   12290:	mov	r5, r0
   12294:	cmp	r8, #1
   12298:	blt	122c4 <main@@Base+0x18c>
   1229c:	mov	r4, #0
   122a0:	str	r4, [r6, r4, lsl #2]
   122a4:	bl	12030 <rand@plt>
   122a8:	add	r1, r0, r0, lsr #31
   122ac:	bic	r1, r1, #1
   122b0:	sub	r0, r0, r1
   122b4:	str	r0, [r5, r4, lsl #2]
   122b8:	add	r4, r4, #1
   122bc:	cmp	r8, r4
   122c0:	bne	122a0 <main@@Base+0x168>
   122c4:	sub	r0, fp, #88	; 0x58
   122c8:	mov	r1, r6
   122cc:	mov	r2, r5
   122d0:	mov	r3, r8
   122d4:	bl	15948 <table_column_sort@@Base>
   122d8:	cmp	r9, #1
   122dc:	mov	r4, #0
   122e0:	cmpge	r8, #1
   122e4:	bge	1230c <main@@Base+0x1d4>
   122e8:	sub	r0, fp, #88	; 0x58
   122ec:	bl	1261c <table_destroy@@Base>
   122f0:	mov	r0, r6
   122f4:	bl	11fa0 <free@plt>
   122f8:	mov	r0, r5
   122fc:	bl	11fa0 <free@plt>
   12300:	mov	r0, r4
   12304:	sub	sp, fp, #28
   12308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1230c:	mvn	r0, #0
   12310:	str	r6, [sp, #4]
   12314:	mov	r7, r8
   12318:	mov	r6, #0
   1231c:	sub	r8, fp, #88	; 0x58
   12320:	str	r5, [sp, #16]
   12324:	str	r9, [sp, #12]
   12328:	str	r0, [sp, #20]
   1232c:	mov	r0, #0
   12330:	str	r0, [sp, #8]
   12334:	mvn	r0, #0
   12338:	str	r0, [sp, #24]
   1233c:	cmp	r6, #0
   12340:	beq	12410 <main@@Base+0x2d8>
   12344:	sub	r9, r6, #1
   12348:	mov	sl, #0
   1234c:	cmp	sl, #0
   12350:	beq	12390 <main@@Base+0x258>
   12354:	mov	r5, sl
   12358:	subs	r5, r5, #1
   1235c:	blt	12390 <main@@Base+0x258>
   12360:	mov	r0, r8
   12364:	mov	r1, r6
   12368:	mov	r2, r5
   1236c:	bl	145a0 <table_get_int@@Base>
   12370:	mov	r4, r0
   12374:	mov	r0, r8
   12378:	mov	r1, r9
   1237c:	mov	r2, r5
   12380:	bl	145a0 <table_get_int@@Base>
   12384:	cmp	r4, r0
   12388:	beq	12358 <main@@Base+0x220>
   1238c:	b	12410 <main@@Base+0x2d8>
   12390:	ldr	r0, [sp, #16]
   12394:	mov	r1, r9
   12398:	mov	r2, sl
   1239c:	ldr	r5, [r0, sl, lsl #2]
   123a0:	mov	r0, r8
   123a4:	bl	145a0 <table_get_int@@Base>
   123a8:	mov	r4, r0
   123ac:	mov	r0, r8
   123b0:	mov	r1, r6
   123b4:	mov	r2, sl
   123b8:	bl	145a0 <table_get_int@@Base>
   123bc:	cmp	r5, #0
   123c0:	beq	123d8 <main@@Base+0x2a0>
   123c4:	cmp	r4, r0
   123c8:	bge	12404 <main@@Base+0x2cc>
   123cc:	movw	r0, #24259	; 0x5ec3
   123d0:	movt	r0, #1
   123d4:	b	123e8 <main@@Base+0x2b0>
   123d8:	cmp	r4, r0
   123dc:	ble	12404 <main@@Base+0x2cc>
   123e0:	movw	r0, #24187	; 0x5e7b
   123e4:	movt	r0, #1
   123e8:	mov	r1, r6
   123ec:	mov	r2, sl
   123f0:	bl	11f94 <printf@plt>
   123f4:	mvn	r0, #0
   123f8:	str	r6, [sp, #24]
   123fc:	str	sl, [sp, #20]
   12400:	str	r0, [sp, #8]
   12404:	add	sl, sl, #1
   12408:	cmp	sl, r7
   1240c:	blt	1234c <main@@Base+0x214>
   12410:	ldr	r0, [sp, #12]
   12414:	add	r6, r6, #1
   12418:	cmp	r6, r0
   1241c:	bne	1233c <main@@Base+0x204>
   12420:	ldr	r0, [sp, #24]
   12424:	cmn	r0, #1
   12428:	beq	12560 <main@@Base+0x428>
   1242c:	sub	r4, fp, #88	; 0x58
   12430:	mov	r0, r4
   12434:	bl	14848 <table_get_row_length@@Base>
   12438:	mov	r0, r4
   1243c:	bl	14848 <table_get_row_length@@Base>
   12440:	mov	r4, r0
   12444:	movw	r0, #24342	; 0x5f16
   12448:	movt	r0, #1
   1244c:	bl	11fd0 <puts@plt>
   12450:	cmp	r4, #1
   12454:	str	r4, [sp, #12]
   12458:	blt	12550 <main@@Base+0x418>
   1245c:	movw	r8, #24337	; 0x5f11
   12460:	mov	r6, #0
   12464:	sub	r7, fp, #88	; 0x58
   12468:	mov	r9, #255	; 0xff
   1246c:	add	r4, sp, #29
   12470:	movt	r8, #1
   12474:	mov	r0, r7
   12478:	bl	13af0 <table_get_column_length@@Base>
   1247c:	cmp	r0, #1
   12480:	blt	1251c <main@@Base+0x3e4>
   12484:	ldr	r0, [sp, #24]
   12488:	cmp	r0, r6
   1248c:	bne	124e0 <main@@Base+0x3a8>
   12490:	mov	sl, #0
   12494:	ldr	r1, [sp, #24]
   12498:	mov	r0, r7
   1249c:	mov	r2, sl
   124a0:	mov	r3, r4
   124a4:	str	r9, [sp]
   124a8:	bl	130c8 <table_cell_to_buffer@@Base>
   124ac:	ldr	r0, [sp, #20]
   124b0:	mov	r1, r4
   124b4:	cmp	r0, sl
   124b8:	movweq	r0, #24332	; 0x5f0c
   124bc:	movteq	r0, #1
   124c0:	movne	r0, r8
   124c4:	bl	11f94 <printf@plt>
   124c8:	mov	r0, r7
   124cc:	add	sl, sl, #1
   124d0:	bl	13af0 <table_get_column_length@@Base>
   124d4:	cmp	sl, r0
   124d8:	blt	12494 <main@@Base+0x35c>
   124dc:	b	1251c <main@@Base+0x3e4>
   124e0:	mov	r5, #0
   124e4:	mov	r0, r7
   124e8:	mov	r1, r6
   124ec:	mov	r2, r5
   124f0:	mov	r3, r4
   124f4:	str	r9, [sp]
   124f8:	bl	130c8 <table_cell_to_buffer@@Base>
   124fc:	mov	r0, r8
   12500:	mov	r1, r4
   12504:	bl	11f94 <printf@plt>
   12508:	mov	r0, r7
   1250c:	add	r5, r5, #1
   12510:	bl	13af0 <table_get_column_length@@Base>
   12514:	cmp	r5, r0
   12518:	blt	124e4 <main@@Base+0x3ac>
   1251c:	ldr	r0, [sp, #24]
   12520:	cmp	r0, r6
   12524:	bne	12534 <main@@Base+0x3fc>
   12528:	movw	r0, #24341	; 0x5f15
   1252c:	movt	r0, #1
   12530:	b	1253c <main@@Base+0x404>
   12534:	movw	r0, #24342	; 0x5f16
   12538:	movt	r0, #1
   1253c:	bl	11fd0 <puts@plt>
   12540:	ldr	r0, [sp, #12]
   12544:	add	r6, r6, #1
   12548:	cmp	r6, r0
   1254c:	bne	12474 <main@@Base+0x33c>
   12550:	ldr	r6, [sp, #4]
   12554:	ldr	r5, [sp, #16]
   12558:	ldr	r4, [sp, #8]
   1255c:	b	122e8 <main@@Base+0x1b0>
   12560:	ldr	r5, [sp, #16]
   12564:	ldr	r4, [sp, #8]
   12568:	ldr	r6, [sp, #4]
   1256c:	b	122e8 <main@@Base+0x1b0>

00012570 <table_new@@Base>:
   12570:	push	{fp, lr}
   12574:	mov	fp, sp
   12578:	mov	r0, #56	; 0x38
   1257c:	bl	11fdc <malloc@plt>
   12580:	mov	r1, #0
   12584:	mov	r2, #10
   12588:	mov	r3, #20
   1258c:	vmov.i32	q8, #0	; 0x00000000
   12590:	str	r1, [r0]
   12594:	stmib	r0, {r1, r2}
   12598:	str	r1, [r0, #12]
   1259c:	str	r1, [r0, #16]
   125a0:	str	r1, [r0, #20]
   125a4:	str	r3, [r0, #24]
   125a8:	str	r1, [r0, #28]
   125ac:	str	r2, [r0, #48]	; 0x30
   125b0:	str	r1, [r0, #52]	; 0x34
   125b4:	add	r1, r0, #32
   125b8:	vst1.32	{d16-d17}, [r1]
   125bc:	pop	{fp, pc}

000125c0 <table_init@@Base>:
   125c0:	mov	r1, #0
   125c4:	mov	r2, #10
   125c8:	mov	r3, #20
   125cc:	vmov.i32	q8, #0	; 0x00000000
   125d0:	str	r1, [r0]
   125d4:	stmib	r0, {r1, r2}
   125d8:	str	r1, [r0, #12]
   125dc:	str	r1, [r0, #16]
   125e0:	str	r1, [r0, #20]
   125e4:	str	r3, [r0, #24]
   125e8:	str	r1, [r0, #28]
   125ec:	str	r2, [r0, #48]	; 0x30
   125f0:	str	r1, [r0, #52]	; 0x34
   125f4:	add	r0, r0, #32
   125f8:	vst1.32	{d16-d17}, [r0]
   125fc:	bx	lr

00012600 <table_delete@@Base>:
   12600:	push	{r4, sl, fp, lr}
   12604:	add	fp, sp, #8
   12608:	mov	r4, r0
   1260c:	bl	1261c <table_destroy@@Base>
   12610:	mov	r0, r4
   12614:	pop	{r4, sl, fp, lr}
   12618:	b	11fa0 <free@plt>

0001261c <table_destroy@@Base>:
   1261c:	cmp	r0, #0
   12620:	bxeq	lr
   12624:	push	{r4, r5, r6, sl, fp, lr}
   12628:	add	fp, sp, #16
   1262c:	mvn	r1, #0
   12630:	mvn	r2, #0
   12634:	mov	r3, #64	; 0x40
   12638:	mov	r4, r0
   1263c:	bl	12fc4 <table_notify@@Base>
   12640:	mov	r0, r4
   12644:	bl	14848 <table_get_row_length@@Base>
   12648:	cmp	r0, #1
   1264c:	blt	12670 <table_destroy@@Base+0x54>
   12650:	mov	r5, r0
   12654:	mov	r6, #0
   12658:	mov	r0, r4
   1265c:	mov	r1, r6
   12660:	bl	147f0 <table_row_destroy@@Base>
   12664:	add	r6, r6, #1
   12668:	cmp	r5, r6
   1266c:	bne	12658 <table_destroy@@Base+0x3c>
   12670:	ldr	r0, [r4, #16]
   12674:	cmp	r0, #0
   12678:	beq	12680 <table_destroy@@Base+0x64>
   1267c:	bl	11fa0 <free@plt>
   12680:	mov	r0, r4
   12684:	bl	13af0 <table_get_column_length@@Base>
   12688:	cmp	r0, #1
   1268c:	blt	126b0 <table_destroy@@Base+0x94>
   12690:	mov	r5, r0
   12694:	mov	r6, #0
   12698:	mov	r0, r4
   1269c:	mov	r1, r6
   126a0:	bl	13ad8 <table_column_destroy@@Base>
   126a4:	add	r6, r6, #1
   126a8:	cmp	r5, r6
   126ac:	bne	12698 <table_destroy@@Base+0x7c>
   126b0:	ldr	r0, [r4]
   126b4:	cmp	r0, #0
   126b8:	beq	126c0 <table_destroy@@Base+0xa4>
   126bc:	bl	11fa0 <free@plt>
   126c0:	ldr	r0, [r4, #36]	; 0x24
   126c4:	cmp	r0, #0
   126c8:	beq	126d0 <table_destroy@@Base+0xb4>
   126cc:	bl	11fa0 <free@plt>
   126d0:	ldr	r0, [r4, #40]	; 0x28
   126d4:	cmp	r0, #0
   126d8:	beq	126e0 <table_destroy@@Base+0xc4>
   126dc:	bl	11fa0 <free@plt>
   126e0:	ldr	r0, [r4, #44]	; 0x2c
   126e4:	cmp	r0, #0
   126e8:	pop	{r4, r5, r6, sl, fp, lr}
   126ec:	beq	126f4 <table_destroy@@Base+0xd8>
   126f0:	b	11fa0 <free@plt>
   126f4:	bx	lr

000126f8 <table_dupe@@Base>:
   126f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126fc:	add	fp, sp, #28
   12700:	sub	sp, sp, #12
   12704:	mov	r4, r0
   12708:	bl	14848 <table_get_row_length@@Base>
   1270c:	mov	r8, r0
   12710:	mov	r0, r4
   12714:	bl	13af0 <table_get_column_length@@Base>
   12718:	mov	r6, r0
   1271c:	mov	r0, #56	; 0x38
   12720:	bl	11fdc <malloc@plt>
   12724:	mov	sl, r0
   12728:	mov	r5, #0
   1272c:	mov	r0, #10
   12730:	mov	r1, #20
   12734:	cmp	r6, #1
   12738:	vmov.i32	q8, #0	; 0x00000000
   1273c:	str	r5, [sl]
   12740:	str	r5, [sl, #4]
   12744:	str	r0, [sl, #8]
   12748:	str	r5, [sl, #12]
   1274c:	str	r5, [sl, #16]
   12750:	str	r5, [sl, #20]
   12754:	str	r1, [sl, #24]
   12758:	str	r5, [sl, #28]
   1275c:	str	r0, [sl, #48]	; 0x30
   12760:	add	r0, sl, #32
   12764:	str	r5, [sl, #52]	; 0x34
   12768:	vst1.32	{d16-d17}, [r0]
   1276c:	blt	127a8 <table_dupe@@Base+0xb0>
   12770:	mov	r0, r4
   12774:	mov	r1, r5
   12778:	bl	13b60 <table_get_column_name@@Base>
   1277c:	mov	r7, r0
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	bl	13b70 <table_get_column_data_type@@Base>
   1278c:	mov	r2, r0
   12790:	mov	r0, sl
   12794:	mov	r1, r7
   12798:	bl	13b84 <table_add_column@@Base>
   1279c:	add	r5, r5, #1
   127a0:	cmp	r6, r5
   127a4:	bne	12770 <table_dupe@@Base+0x78>
   127a8:	cmp	r8, #1
   127ac:	blt	12d28 <table_dupe@@Base+0x630>
   127b0:	mov	r5, #0
   127b4:	add	r9, sp, #8
   127b8:	mov	r0, sl
   127bc:	bl	14850 <table_add_row@@Base>
   127c0:	cmp	r6, #1
   127c4:	blt	12d1c <table_dupe@@Base+0x624>
   127c8:	mov	r7, #0
   127cc:	mov	r0, r4
   127d0:	mov	r1, r7
   127d4:	bl	13b70 <table_get_column_data_type@@Base>
   127d8:	cmp	r0, #23
   127dc:	bhi	1286c <table_dupe@@Base+0x174>
   127e0:	add	r1, pc, #0
   127e4:	ldr	pc, [r1, r0, lsl #2]
   127e8:	andeq	r2, r1, r8, asr #16
   127ec:	andeq	r2, r1, ip, ror r8
   127f0:			; <UNDEFINED> instruction: 0x000128b0
   127f4:	andeq	r2, r1, r4, ror #17
   127f8:	andeq	r2, r1, r8, lsl r9
   127fc:	andeq	r2, r1, ip, asr #18
   12800:	andeq	r2, r1, r0, lsl #19
   12804:			; <UNDEFINED> instruction: 0x000129b4
   12808:	andeq	r2, r1, r8, ror #19
   1280c:	andeq	r2, r1, ip, lsl sl
   12810:	andeq	r2, r1, r0, asr sl
   12814:	andeq	r2, r1, r4, lsl #21
   12818:			; <UNDEFINED> instruction: 0x00012ab8
   1281c:	andeq	r2, r1, ip, ror #21
   12820:	andeq	r2, r1, r0, lsr #22
   12824:	andeq	r2, r1, r4, asr fp
   12828:	andeq	r2, r1, r8, lsl #23
   1282c:			; <UNDEFINED> instruction: 0x00012bb8
   12830:	andeq	r2, r1, r8, ror #23
   12834:	andeq	r2, r1, r8, lsl ip
   12838:	andeq	r2, r1, ip, asr #24
   1283c:	andeq	r2, r1, r0, lsl #25
   12840:			; <UNDEFINED> instruction: 0x00012cb4
   12844:	andeq	r2, r1, r8, ror #25
   12848:	mov	r0, r4
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	145a0 <table_get_int@@Base>
   12858:	mov	r3, r0
   1285c:	mov	r0, sl
   12860:	mov	r1, r5
   12864:	mov	r2, r7
   12868:	bl	14da8 <table_set_int@@Base>
   1286c:	add	r7, r7, #1
   12870:	cmp	r6, r7
   12874:	bne	127cc <table_dupe@@Base+0xd4>
   12878:	b	12d1c <table_dupe@@Base+0x624>
   1287c:	mov	r0, r4
   12880:	mov	r1, r5
   12884:	mov	r2, r7
   12888:	bl	145b8 <table_get_uint@@Base>
   1288c:	mov	r3, r0
   12890:	mov	r0, sl
   12894:	mov	r1, r5
   12898:	mov	r2, r7
   1289c:	bl	14e28 <table_set_uint@@Base>
   128a0:	add	r7, r7, #1
   128a4:	cmp	r6, r7
   128a8:	bne	127cc <table_dupe@@Base+0xd4>
   128ac:	b	12d1c <table_dupe@@Base+0x624>
   128b0:	mov	r0, r4
   128b4:	mov	r1, r5
   128b8:	mov	r2, r7
   128bc:	bl	145d0 <table_get_int8@@Base>
   128c0:	mov	r3, r0
   128c4:	mov	r0, sl
   128c8:	mov	r1, r5
   128cc:	mov	r2, r7
   128d0:	bl	14ea8 <table_set_int8@@Base>
   128d4:	add	r7, r7, #1
   128d8:	cmp	r6, r7
   128dc:	bne	127cc <table_dupe@@Base+0xd4>
   128e0:	b	12d1c <table_dupe@@Base+0x624>
   128e4:	mov	r0, r4
   128e8:	mov	r1, r5
   128ec:	mov	r2, r7
   128f0:	bl	145e8 <table_get_uint8@@Base>
   128f4:	mov	r3, r0
   128f8:	mov	r0, sl
   128fc:	mov	r1, r5
   12900:	mov	r2, r7
   12904:	bl	14f28 <table_set_uint8@@Base>
   12908:	add	r7, r7, #1
   1290c:	cmp	r6, r7
   12910:	bne	127cc <table_dupe@@Base+0xd4>
   12914:	b	12d1c <table_dupe@@Base+0x624>
   12918:	mov	r0, r4
   1291c:	mov	r1, r5
   12920:	mov	r2, r7
   12924:	bl	14600 <table_get_int16@@Base>
   12928:	mov	r3, r0
   1292c:	mov	r0, sl
   12930:	mov	r1, r5
   12934:	mov	r2, r7
   12938:	bl	14fa8 <table_set_int16@@Base>
   1293c:	add	r7, r7, #1
   12940:	cmp	r6, r7
   12944:	bne	127cc <table_dupe@@Base+0xd4>
   12948:	b	12d1c <table_dupe@@Base+0x624>
   1294c:	mov	r0, r4
   12950:	mov	r1, r5
   12954:	mov	r2, r7
   12958:	bl	14618 <table_get_uint16@@Base>
   1295c:	mov	r3, r0
   12960:	mov	r0, sl
   12964:	mov	r1, r5
   12968:	mov	r2, r7
   1296c:	bl	15028 <table_set_uint16@@Base>
   12970:	add	r7, r7, #1
   12974:	cmp	r6, r7
   12978:	bne	127cc <table_dupe@@Base+0xd4>
   1297c:	b	12d1c <table_dupe@@Base+0x624>
   12980:	mov	r0, r4
   12984:	mov	r1, r5
   12988:	mov	r2, r7
   1298c:	bl	14630 <table_get_int32@@Base>
   12990:	mov	r3, r0
   12994:	mov	r0, sl
   12998:	mov	r1, r5
   1299c:	mov	r2, r7
   129a0:	bl	150a8 <table_set_int32@@Base>
   129a4:	add	r7, r7, #1
   129a8:	cmp	r6, r7
   129ac:	bne	127cc <table_dupe@@Base+0xd4>
   129b0:	b	12d1c <table_dupe@@Base+0x624>
   129b4:	mov	r0, r4
   129b8:	mov	r1, r5
   129bc:	mov	r2, r7
   129c0:	bl	14648 <table_get_uint32@@Base>
   129c4:	mov	r3, r0
   129c8:	mov	r0, sl
   129cc:	mov	r1, r5
   129d0:	mov	r2, r7
   129d4:	bl	15128 <table_set_uint32@@Base>
   129d8:	add	r7, r7, #1
   129dc:	cmp	r6, r7
   129e0:	bne	127cc <table_dupe@@Base+0xd4>
   129e4:	b	12d1c <table_dupe@@Base+0x624>
   129e8:	mov	r0, r4
   129ec:	mov	r1, r5
   129f0:	mov	r2, r7
   129f4:	bl	14660 <table_get_int64@@Base>
   129f8:	stm	sp, {r0, r1}
   129fc:	mov	r0, sl
   12a00:	mov	r1, r5
   12a04:	mov	r2, r7
   12a08:	bl	151a8 <table_set_int64@@Base>
   12a0c:	add	r7, r7, #1
   12a10:	cmp	r6, r7
   12a14:	bne	127cc <table_dupe@@Base+0xd4>
   12a18:	b	12d1c <table_dupe@@Base+0x624>
   12a1c:	mov	r0, r4
   12a20:	mov	r1, r5
   12a24:	mov	r2, r7
   12a28:	bl	14678 <table_get_uint64@@Base>
   12a2c:	stm	sp, {r0, r1}
   12a30:	mov	r0, sl
   12a34:	mov	r1, r5
   12a38:	mov	r2, r7
   12a3c:	bl	15230 <table_set_uint64@@Base>
   12a40:	add	r7, r7, #1
   12a44:	cmp	r6, r7
   12a48:	bne	127cc <table_dupe@@Base+0xd4>
   12a4c:	b	12d1c <table_dupe@@Base+0x624>
   12a50:	mov	r0, r4
   12a54:	mov	r1, r5
   12a58:	mov	r2, r7
   12a5c:	bl	14690 <table_get_short@@Base>
   12a60:	mov	r3, r0
   12a64:	mov	r0, sl
   12a68:	mov	r1, r5
   12a6c:	mov	r2, r7
   12a70:	bl	152b8 <table_set_short@@Base>
   12a74:	add	r7, r7, #1
   12a78:	cmp	r6, r7
   12a7c:	bne	127cc <table_dupe@@Base+0xd4>
   12a80:	b	12d1c <table_dupe@@Base+0x624>
   12a84:	mov	r0, r4
   12a88:	mov	r1, r5
   12a8c:	mov	r2, r7
   12a90:	bl	146a8 <table_get_ushort@@Base>
   12a94:	mov	r3, r0
   12a98:	mov	r0, sl
   12a9c:	mov	r1, r5
   12aa0:	mov	r2, r7
   12aa4:	bl	15338 <table_set_ushort@@Base>
   12aa8:	add	r7, r7, #1
   12aac:	cmp	r6, r7
   12ab0:	bne	127cc <table_dupe@@Base+0xd4>
   12ab4:	b	12d1c <table_dupe@@Base+0x624>
   12ab8:	mov	r0, r4
   12abc:	mov	r1, r5
   12ac0:	mov	r2, r7
   12ac4:	bl	146c0 <table_get_long@@Base>
   12ac8:	mov	r3, r0
   12acc:	mov	r0, sl
   12ad0:	mov	r1, r5
   12ad4:	mov	r2, r7
   12ad8:	bl	153b8 <table_set_long@@Base>
   12adc:	add	r7, r7, #1
   12ae0:	cmp	r6, r7
   12ae4:	bne	127cc <table_dupe@@Base+0xd4>
   12ae8:	b	12d1c <table_dupe@@Base+0x624>
   12aec:	mov	r0, r4
   12af0:	mov	r1, r5
   12af4:	mov	r2, r7
   12af8:	bl	146d8 <table_get_ulong@@Base>
   12afc:	mov	r3, r0
   12b00:	mov	r0, sl
   12b04:	mov	r1, r5
   12b08:	mov	r2, r7
   12b0c:	bl	15438 <table_set_ulong@@Base>
   12b10:	add	r7, r7, #1
   12b14:	cmp	r6, r7
   12b18:	bne	127cc <table_dupe@@Base+0xd4>
   12b1c:	b	12d1c <table_dupe@@Base+0x624>
   12b20:	mov	r0, r4
   12b24:	mov	r1, r5
   12b28:	mov	r2, r7
   12b2c:	bl	146f0 <table_get_llong@@Base>
   12b30:	stm	sp, {r0, r1}
   12b34:	mov	r0, sl
   12b38:	mov	r1, r5
   12b3c:	mov	r2, r7
   12b40:	bl	154b8 <table_set_llong@@Base>
   12b44:	add	r7, r7, #1
   12b48:	cmp	r6, r7
   12b4c:	bne	127cc <table_dupe@@Base+0xd4>
   12b50:	b	12d1c <table_dupe@@Base+0x624>
   12b54:	mov	r0, r4
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r7
   12b60:	bl	14708 <table_get_ullong@@Base>
   12b64:	stm	sp, {r0, r1}
   12b68:	mov	r0, sl
   12b6c:	mov	r1, r5
   12b70:	mov	r2, r7
   12b74:	bl	15540 <table_set_ullong@@Base>
   12b78:	add	r7, r7, #1
   12b7c:	cmp	r6, r7
   12b80:	bne	127cc <table_dupe@@Base+0xd4>
   12b84:	b	12d1c <table_dupe@@Base+0x624>
   12b88:	mov	r0, r4
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	14720 <table_get_float@@Base>
   12b98:	mov	r0, sl
   12b9c:	mov	r1, r5
   12ba0:	mov	r2, r7
   12ba4:	bl	155c8 <table_set_float@@Base>
   12ba8:	add	r7, r7, #1
   12bac:	cmp	r6, r7
   12bb0:	bne	127cc <table_dupe@@Base+0xd4>
   12bb4:	b	12d1c <table_dupe@@Base+0x624>
   12bb8:	mov	r0, r4
   12bbc:	mov	r1, r5
   12bc0:	mov	r2, r7
   12bc4:	bl	14738 <table_get_double@@Base>
   12bc8:	mov	r0, sl
   12bcc:	mov	r1, r5
   12bd0:	mov	r2, r7
   12bd4:	bl	15654 <table_set_double@@Base>
   12bd8:	add	r7, r7, #1
   12bdc:	cmp	r6, r7
   12be0:	bne	127cc <table_dupe@@Base+0xd4>
   12be4:	b	12d1c <table_dupe@@Base+0x624>
   12be8:	mov	r0, r4
   12bec:	mov	r1, r5
   12bf0:	mov	r2, r7
   12bf4:	bl	14750 <table_get_ldouble@@Base>
   12bf8:	mov	r0, sl
   12bfc:	mov	r1, r5
   12c00:	mov	r2, r7
   12c04:	bl	156dc <table_set_ldouble@@Base>
   12c08:	add	r7, r7, #1
   12c0c:	cmp	r6, r7
   12c10:	bne	127cc <table_dupe@@Base+0xd4>
   12c14:	b	12d1c <table_dupe@@Base+0x624>
   12c18:	mov	r0, r4
   12c1c:	mov	r1, r5
   12c20:	mov	r2, r7
   12c24:	bl	14768 <table_get_char@@Base>
   12c28:	mov	r3, r0
   12c2c:	mov	r0, sl
   12c30:	mov	r1, r5
   12c34:	mov	r2, r7
   12c38:	bl	157ec <table_set_char@@Base>
   12c3c:	add	r7, r7, #1
   12c40:	cmp	r6, r7
   12c44:	bne	127cc <table_dupe@@Base+0xd4>
   12c48:	b	12d1c <table_dupe@@Base+0x624>
   12c4c:	mov	r0, r4
   12c50:	mov	r1, r5
   12c54:	mov	r2, r7
   12c58:	bl	14780 <table_get_uchar@@Base>
   12c5c:	mov	r3, r0
   12c60:	mov	r0, sl
   12c64:	mov	r1, r5
   12c68:	mov	r2, r7
   12c6c:	bl	1586c <table_set_uchar@@Base>
   12c70:	add	r7, r7, #1
   12c74:	cmp	r6, r7
   12c78:	bne	127cc <table_dupe@@Base+0xd4>
   12c7c:	b	12d1c <table_dupe@@Base+0x624>
   12c80:	mov	r0, r4
   12c84:	mov	r1, r5
   12c88:	mov	r2, r7
   12c8c:	bl	14798 <table_get_string@@Base>
   12c90:	mov	r3, r0
   12c94:	mov	r0, sl
   12c98:	mov	r1, r5
   12c9c:	mov	r2, r7
   12ca0:	bl	15764 <table_set_string@@Base>
   12ca4:	add	r7, r7, #1
   12ca8:	cmp	r6, r7
   12cac:	bne	127cc <table_dupe@@Base+0xd4>
   12cb0:	b	12d1c <table_dupe@@Base+0x624>
   12cb4:	mov	r0, r4
   12cb8:	mov	r1, r5
   12cbc:	mov	r2, r7
   12cc0:	bl	14588 <table_get_bool@@Base>
   12cc4:	mov	r3, r0
   12cc8:	mov	r0, sl
   12ccc:	mov	r1, r5
   12cd0:	mov	r2, r7
   12cd4:	bl	14d28 <table_set_bool@@Base>
   12cd8:	add	r7, r7, #1
   12cdc:	cmp	r6, r7
   12ce0:	bne	127cc <table_dupe@@Base+0xd4>
   12ce4:	b	12d1c <table_dupe@@Base+0x624>
   12ce8:	mov	r0, r4
   12cec:	mov	r1, r5
   12cf0:	mov	r2, r7
   12cf4:	bl	147ac <table_get_ptr@@Base>
   12cf8:	str	r0, [sp, #8]
   12cfc:	mov	r0, sl
   12d00:	mov	r1, r5
   12d04:	mov	r2, r7
   12d08:	mov	r3, r9
   12d0c:	bl	158ec <table_set_ptr@@Base>
   12d10:	add	r7, r7, #1
   12d14:	cmp	r6, r7
   12d18:	bne	127cc <table_dupe@@Base+0xd4>
   12d1c:	add	r5, r5, #1
   12d20:	cmp	r5, r8
   12d24:	bne	127b8 <table_dupe@@Base+0xc0>
   12d28:	mov	r0, sl
   12d2c:	sub	sp, fp, #28
   12d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d34 <table_get_major_version@@Base>:
   12d34:	mov	r0, #0
   12d38:	bx	lr

00012d3c <table_get_minor_version@@Base>:
   12d3c:	mov	r0, #0
   12d40:	bx	lr

00012d44 <table_get_patch_version@@Base>:
   12d44:	mov	r0, #0
   12d48:	bx	lr

00012d4c <table_get_version@@Base>:
   12d4c:	movw	r0, #24336	; 0x5f10
   12d50:	movt	r0, #1
   12d54:	bx	lr

00012d58 <table_get_callback_length@@Base>:
   12d58:	ldr	r0, [r0, #32]
   12d5c:	bx	lr

00012d60 <table_register_callback@@Base>:
   12d60:	push	{r4, r5, r6, r7, fp, lr}
   12d64:	add	fp, sp, #16
   12d68:	mov	r5, r0
   12d6c:	ldr	r0, [r0, #32]
   12d70:	mov	r4, r3
   12d74:	mov	r6, r2
   12d78:	mov	r7, r1
   12d7c:	cmp	r0, #1
   12d80:	blt	12db4 <table_register_callback@@Base+0x54>
   12d84:	ldr	r2, [r5, #36]	; 0x24
   12d88:	mov	r1, #0
   12d8c:	ldr	r3, [r2, r1, lsl #2]
   12d90:	cmp	r3, r7
   12d94:	bne	12da8 <table_register_callback@@Base+0x48>
   12d98:	ldr	r3, [r5, #40]	; 0x28
   12d9c:	ldr	r3, [r3, r1, lsl #2]
   12da0:	cmp	r3, r6
   12da4:	beq	12e38 <table_register_callback@@Base+0xd8>
   12da8:	add	r1, r1, #1
   12dac:	cmp	r1, r0
   12db0:	blt	12d8c <table_register_callback@@Base+0x2c>
   12db4:	ldr	r1, [r5, #48]	; 0x30
   12db8:	udiv	r2, r0, r1
   12dbc:	mls	r2, r2, r1, r0
   12dc0:	cmp	r2, #0
   12dc4:	bne	12e10 <table_register_callback@@Base+0xb0>
   12dc8:	ldr	r2, [r5, #52]	; 0x34
   12dcc:	ldr	r0, [r5, #36]	; 0x24
   12dd0:	add	r1, r2, r1
   12dd4:	str	r1, [r5, #52]	; 0x34
   12dd8:	lsl	r1, r1, #2
   12ddc:	bl	11fb8 <realloc@plt>
   12de0:	str	r0, [r5, #36]	; 0x24
   12de4:	ldr	r1, [r5, #52]	; 0x34
   12de8:	ldr	r0, [r5, #40]	; 0x28
   12dec:	lsl	r1, r1, #2
   12df0:	bl	11fb8 <realloc@plt>
   12df4:	str	r0, [r5, #40]	; 0x28
   12df8:	ldr	r1, [r5, #52]	; 0x34
   12dfc:	ldr	r0, [r5, #44]	; 0x2c
   12e00:	lsl	r1, r1, #2
   12e04:	bl	11fb8 <realloc@plt>
   12e08:	str	r0, [r5, #44]	; 0x2c
   12e0c:	ldr	r0, [r5, #32]
   12e10:	ldr	r1, [r5, #36]	; 0x24
   12e14:	str	r7, [r1, r0, lsl #2]
   12e18:	ldr	r1, [r5, #40]	; 0x28
   12e1c:	str	r6, [r1, r0, lsl #2]
   12e20:	ldr	r1, [r5, #44]	; 0x2c
   12e24:	str	r4, [r1, r0, lsl #2]
   12e28:	ldr	r0, [r5, #32]
   12e2c:	add	r0, r0, #1
   12e30:	str	r0, [r5, #32]
   12e34:	pop	{r4, r5, r6, r7, fp, pc}
   12e38:	cmp	r1, #0
   12e3c:	ldrne	r0, [r5, #44]	; 0x2c
   12e40:	ldrne	r2, [r0, r1, lsl #2]
   12e44:	orrne	r2, r2, r4
   12e48:	strne	r2, [r0, r1, lsl #2]
   12e4c:	popne	{r4, r5, r6, r7, fp, pc}
   12e50:	b	12db4 <table_register_callback@@Base+0x54>

00012e54 <table_unregister_callback@@Base>:
   12e54:	push	{r4, r5, r6, sl, fp, lr}
   12e58:	add	fp, sp, #16
   12e5c:	ldr	r4, [r0, #32]
   12e60:	cmp	r4, #1
   12e64:	blt	12e9c <table_unregister_callback@@Base+0x48>
   12e68:	ldr	r3, [r0, #36]	; 0x24
   12e6c:	mov	r6, r0
   12e70:	mov	r0, #0
   12e74:	ldr	r5, [r3, r0, lsl #2]
   12e78:	cmp	r5, r1
   12e7c:	bne	12e90 <table_unregister_callback@@Base+0x3c>
   12e80:	ldr	r5, [r6, #40]	; 0x28
   12e84:	ldr	r5, [r5, r0, lsl #2]
   12e88:	cmp	r5, r2
   12e8c:	beq	12ea0 <table_unregister_callback@@Base+0x4c>
   12e90:	add	r0, r0, #1
   12e94:	cmp	r0, r4
   12e98:	blt	12e74 <table_unregister_callback@@Base+0x20>
   12e9c:	pop	{r4, r5, r6, sl, fp, pc}
   12ea0:	sub	r1, r4, #1
   12ea4:	cmp	r0, r1
   12ea8:	bge	12f38 <table_unregister_callback@@Base+0xe4>
   12eac:	add	r1, r3, r0, lsl #2
   12eb0:	ldr	r1, [r1, #4]
   12eb4:	str	r1, [r3, r0, lsl #2]
   12eb8:	ldr	r1, [r6, #40]	; 0x28
   12ebc:	add	r2, r1, r0, lsl #2
   12ec0:	ldr	r2, [r2, #4]
   12ec4:	str	r2, [r1, r0, lsl #2]
   12ec8:	ldr	r1, [r6, #44]	; 0x2c
   12ecc:	add	r2, r1, r0, lsl #2
   12ed0:	ldr	r2, [r2, #4]
   12ed4:	str	r2, [r1, r0, lsl #2]
   12ed8:	add	r2, r0, #1
   12edc:	ldr	r1, [r6, #32]
   12ee0:	sub	r1, r1, #1
   12ee4:	cmp	r2, r1
   12ee8:	bge	12f38 <table_unregister_callback@@Base+0xe4>
   12eec:	ldr	r1, [r6, #36]	; 0x24
   12ef0:	add	r1, r1, r0, lsl #2
   12ef4:	ldr	r2, [r1, #8]
   12ef8:	str	r2, [r1, #4]
   12efc:	ldr	r1, [r6, #40]	; 0x28
   12f00:	add	r1, r1, r0, lsl #2
   12f04:	ldr	r2, [r1, #8]
   12f08:	str	r2, [r1, #4]
   12f0c:	ldr	r1, [r6, #44]	; 0x2c
   12f10:	add	r1, r1, r0, lsl #2
   12f14:	ldr	r2, [r1, #8]
   12f18:	str	r2, [r1, #4]
   12f1c:	add	r2, r0, #1
   12f20:	add	r0, r0, #2
   12f24:	ldr	r1, [r6, #32]
   12f28:	sub	r1, r1, #1
   12f2c:	cmp	r0, r1
   12f30:	mov	r0, r2
   12f34:	blt	12eec <table_unregister_callback@@Base+0x98>
   12f38:	str	r1, [r6, #32]
   12f3c:	ldr	r2, [r6, #48]	; 0x30
   12f40:	udiv	r0, r1, r2
   12f44:	mls	r0, r0, r2, r1
   12f48:	cmp	r0, #0
   12f4c:	popne	{r4, r5, r6, sl, fp, pc}
   12f50:	ldr	r1, [r6, #52]	; 0x34
   12f54:	ldr	r0, [r6, #36]	; 0x24
   12f58:	subs	r1, r1, r2
   12f5c:	str	r1, [r6, #52]	; 0x34
   12f60:	beq	12f9c <table_unregister_callback@@Base+0x148>
   12f64:	lsl	r1, r1, #2
   12f68:	bl	11fb8 <realloc@plt>
   12f6c:	str	r0, [r6, #36]	; 0x24
   12f70:	ldr	r1, [r6, #52]	; 0x34
   12f74:	ldr	r0, [r6, #40]	; 0x28
   12f78:	lsl	r1, r1, #2
   12f7c:	bl	11fb8 <realloc@plt>
   12f80:	str	r0, [r6, #40]	; 0x28
   12f84:	ldr	r1, [r6, #52]	; 0x34
   12f88:	ldr	r0, [r6, #44]	; 0x2c
   12f8c:	lsl	r1, r1, #2
   12f90:	bl	11fb8 <realloc@plt>
   12f94:	str	r0, [r6, #44]	; 0x2c
   12f98:	pop	{r4, r5, r6, sl, fp, pc}
   12f9c:	bl	11fa0 <free@plt>
   12fa0:	ldr	r0, [r6, #40]	; 0x28
   12fa4:	bl	11fa0 <free@plt>
   12fa8:	ldr	r0, [r6, #44]	; 0x2c
   12fac:	bl	11fa0 <free@plt>
   12fb0:	mov	r0, #0
   12fb4:	str	r0, [r6, #36]	; 0x24
   12fb8:	str	r0, [r6, #40]	; 0x28
   12fbc:	str	r0, [r6, #44]	; 0x2c
   12fc0:	pop	{r4, r5, r6, sl, fp, pc}

00012fc4 <table_notify@@Base>:
   12fc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fc8:	add	fp, sp, #24
   12fcc:	sub	sp, sp, #8
   12fd0:	mov	r7, r0
   12fd4:	ldr	r0, [r0, #32]
   12fd8:	cmp	r0, #1
   12fdc:	blt	13038 <table_notify@@Base+0x74>
   12fe0:	mov	r4, r3
   12fe4:	mov	r8, r2
   12fe8:	mov	r9, r1
   12fec:	mov	r5, #0
   12ff0:	ldr	r1, [r7, #44]	; 0x2c
   12ff4:	ldr	r1, [r1, r5, lsl #2]
   12ff8:	tst	r1, r4
   12ffc:	beq	1302c <table_notify@@Base+0x68>
   13000:	ldr	r0, [r7, #36]	; 0x24
   13004:	ldr	r1, [r7, #40]	; 0x28
   13008:	mov	r2, r8
   1300c:	mov	r3, r4
   13010:	ldr	r6, [r0, r5, lsl #2]
   13014:	ldr	r0, [r1, r5, lsl #2]
   13018:	mov	r1, r9
   1301c:	str	r0, [sp]
   13020:	mov	r0, r7
   13024:	blx	r6
   13028:	ldr	r0, [r7, #32]
   1302c:	add	r5, r5, #1
   13030:	cmp	r5, r0
   13034:	blt	12ff0 <table_notify@@Base+0x2c>
   13038:	sub	sp, fp, #24
   1303c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013040 <table_cell_init@@Base>:
   13040:	push	{r4, sl, fp, lr}
   13044:	add	fp, sp, #8
   13048:	mov	r4, r2
   1304c:	bl	147e4 <table_get_row_ptr@@Base>
   13050:	ldr	r0, [r0]
   13054:	mov	r1, #0
   13058:	str	r1, [r0, r4, lsl #2]
   1305c:	pop	{r4, sl, fp, pc}

00013060 <table_get_cell_ptr@@Base>:
   13060:	push	{r4, sl, fp, lr}
   13064:	add	fp, sp, #8
   13068:	mov	r4, r2
   1306c:	bl	147e4 <table_get_row_ptr@@Base>
   13070:	ldr	r0, [r0]
   13074:	add	r0, r0, r4, lsl #2
   13078:	pop	{r4, sl, fp, pc}

0001307c <table_cell_destroy@@Base>:
   1307c:	push	{r4, r5, r6, sl, fp, lr}
   13080:	add	fp, sp, #16
   13084:	mov	r5, r1
   13088:	mov	r1, r2
   1308c:	mov	r4, r2
   13090:	mov	r6, r0
   13094:	bl	13b70 <table_get_column_data_type@@Base>
   13098:	cmp	r0, #23
   1309c:	popeq	{r4, r5, r6, sl, fp, pc}
   130a0:	mov	r0, r6
   130a4:	mov	r1, r5
   130a8:	bl	147e4 <table_get_row_ptr@@Base>
   130ac:	ldr	r0, [r0]
   130b0:	ldr	r0, [r0, r4, lsl #2]
   130b4:	cmp	r0, #0
   130b8:	beq	130c4 <table_cell_destroy@@Base+0x48>
   130bc:	pop	{r4, r5, r6, sl, fp, lr}
   130c0:	b	11fa0 <free@plt>
   130c4:	pop	{r4, r5, r6, sl, fp, pc}

000130c8 <table_cell_to_buffer@@Base>:
   130c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   130cc:	add	fp, sp, #24
   130d0:	sub	sp, sp, #8
   130d4:	mov	r7, r1
   130d8:	mov	r1, r2
   130dc:	mov	r5, r3
   130e0:	mov	r6, r2
   130e4:	mov	r4, r0
   130e8:	bl	13b70 <table_get_column_data_type@@Base>
   130ec:	cmp	r0, #23
   130f0:	bhi	13360 <table_cell_to_buffer@@Base+0x298>
   130f4:	ldr	r8, [fp, #8]
   130f8:	add	r1, pc, #0
   130fc:	ldr	pc, [r1, r0, lsl #2]
   13100:	andeq	r3, r1, r0, ror #2
   13104:	andeq	r3, r1, r4, ror r1
   13108:	andeq	r3, r1, r8, lsl #3
   1310c:	muleq	r1, ip, r1
   13110:			; <UNDEFINED> instruction: 0x000131b0
   13114:	andeq	r3, r1, r4, asr #3
   13118:	ldrdeq	r3, [r1], -r8
   1311c:	andeq	r3, r1, ip, ror #3
   13120:	andeq	r3, r1, ip, lsl #4
   13124:	andeq	r3, r1, r0, lsr #4
   13128:	andeq	r3, r1, r4, lsr r2
   1312c:	andeq	r3, r1, r4, asr r2
   13130:	andeq	r3, r1, r4, ror r2
   13134:	muleq	r1, r4, r2
   13138:			; <UNDEFINED> instruction: 0x000132b4
   1313c:	ldrdeq	r3, [r1], -r4
   13140:	strdeq	r3, [r1], -r4
   13144:	andeq	r3, r1, r8, lsl r3
   13148:	andeq	r3, r1, r8, lsr r3
   1314c:	andeq	r3, r1, ip, ror #6
   13150:	andeq	r3, r1, r0, lsl #7
   13154:	andeq	r3, r1, r0, lsr #7
   13158:	andeq	r3, r1, r0, asr #7
   1315c:	strdeq	r3, [r1], -r4
   13160:	mov	r0, r4
   13164:	mov	r1, r7
   13168:	mov	r2, r6
   1316c:	bl	145a0 <table_get_int@@Base>
   13170:	b	133d0 <table_cell_to_buffer@@Base+0x308>
   13174:	mov	r0, r4
   13178:	mov	r1, r7
   1317c:	mov	r2, r6
   13180:	bl	145b8 <table_get_uint@@Base>
   13184:	b	131fc <table_cell_to_buffer@@Base+0x134>
   13188:	mov	r0, r4
   1318c:	mov	r1, r7
   13190:	mov	r2, r6
   13194:	bl	145d0 <table_get_int8@@Base>
   13198:	b	133d0 <table_cell_to_buffer@@Base+0x308>
   1319c:	mov	r0, r4
   131a0:	mov	r1, r7
   131a4:	mov	r2, r6
   131a8:	bl	145e8 <table_get_uint8@@Base>
   131ac:	b	131fc <table_cell_to_buffer@@Base+0x134>
   131b0:	mov	r0, r4
   131b4:	mov	r1, r7
   131b8:	mov	r2, r6
   131bc:	bl	14600 <table_get_int16@@Base>
   131c0:	b	133d0 <table_cell_to_buffer@@Base+0x308>
   131c4:	mov	r0, r4
   131c8:	mov	r1, r7
   131cc:	mov	r2, r6
   131d0:	bl	14618 <table_get_uint16@@Base>
   131d4:	b	131fc <table_cell_to_buffer@@Base+0x134>
   131d8:	mov	r0, r4
   131dc:	mov	r1, r7
   131e0:	mov	r2, r6
   131e4:	bl	14630 <table_get_int32@@Base>
   131e8:	b	133d0 <table_cell_to_buffer@@Base+0x308>
   131ec:	mov	r0, r4
   131f0:	mov	r1, r7
   131f4:	mov	r2, r6
   131f8:	bl	14648 <table_get_uint32@@Base>
   131fc:	movw	r2, #24344	; 0x5f18
   13200:	mov	r3, r0
   13204:	movt	r2, #1
   13208:	b	133dc <table_cell_to_buffer@@Base+0x314>
   1320c:	mov	r0, r4
   13210:	mov	r1, r7
   13214:	mov	r2, r6
   13218:	bl	14660 <table_get_int64@@Base>
   1321c:	b	132c4 <table_cell_to_buffer@@Base+0x1fc>
   13220:	mov	r0, r4
   13224:	mov	r1, r7
   13228:	mov	r2, r6
   1322c:	bl	14678 <table_get_uint64@@Base>
   13230:	b	132e4 <table_cell_to_buffer@@Base+0x21c>
   13234:	mov	r0, r4
   13238:	mov	r1, r7
   1323c:	mov	r2, r6
   13240:	bl	14690 <table_get_short@@Base>
   13244:	movw	r2, #24357	; 0x5f25
   13248:	mov	r3, r0
   1324c:	movt	r2, #1
   13250:	b	133dc <table_cell_to_buffer@@Base+0x314>
   13254:	mov	r0, r4
   13258:	mov	r1, r7
   1325c:	mov	r2, r6
   13260:	bl	146a8 <table_get_ushort@@Base>
   13264:	movw	r2, #24361	; 0x5f29
   13268:	mov	r3, r0
   1326c:	movt	r2, #1
   13270:	b	133dc <table_cell_to_buffer@@Base+0x314>
   13274:	mov	r0, r4
   13278:	mov	r1, r7
   1327c:	mov	r2, r6
   13280:	bl	146c0 <table_get_long@@Base>
   13284:	movw	r2, #24365	; 0x5f2d
   13288:	mov	r3, r0
   1328c:	movt	r2, #1
   13290:	b	133dc <table_cell_to_buffer@@Base+0x314>
   13294:	mov	r0, r4
   13298:	mov	r1, r7
   1329c:	mov	r2, r6
   132a0:	bl	146d8 <table_get_ulong@@Base>
   132a4:	movw	r2, #24369	; 0x5f31
   132a8:	mov	r3, r0
   132ac:	movt	r2, #1
   132b0:	b	133dc <table_cell_to_buffer@@Base+0x314>
   132b4:	mov	r0, r4
   132b8:	mov	r1, r7
   132bc:	mov	r2, r6
   132c0:	bl	146f0 <table_get_llong@@Base>
   132c4:	movw	r2, #24347	; 0x5f1b
   132c8:	stm	sp, {r0, r1}
   132cc:	movt	r2, #1
   132d0:	b	13354 <table_cell_to_buffer@@Base+0x28c>
   132d4:	mov	r0, r4
   132d8:	mov	r1, r7
   132dc:	mov	r2, r6
   132e0:	bl	14708 <table_get_ullong@@Base>
   132e4:	movw	r2, #24352	; 0x5f20
   132e8:	stm	sp, {r0, r1}
   132ec:	movt	r2, #1
   132f0:	b	13354 <table_cell_to_buffer@@Base+0x28c>
   132f4:	mov	r0, r4
   132f8:	mov	r1, r7
   132fc:	mov	r2, r6
   13300:	bl	14720 <table_get_float@@Base>
   13304:	movw	r2, #24376	; 0x5f38
   13308:	vcvt.f64.f32	d16, s0
   1330c:	vstr	d16, [sp]
   13310:	movt	r2, #1
   13314:	b	13354 <table_cell_to_buffer@@Base+0x28c>
   13318:	mov	r0, r4
   1331c:	mov	r1, r7
   13320:	mov	r2, r6
   13324:	bl	14738 <table_get_double@@Base>
   13328:	movw	r2, #24379	; 0x5f3b
   1332c:	vstr	d0, [sp]
   13330:	movt	r2, #1
   13334:	b	13354 <table_cell_to_buffer@@Base+0x28c>
   13338:	mov	r0, r4
   1333c:	mov	r1, r7
   13340:	mov	r2, r6
   13344:	bl	14750 <table_get_ldouble@@Base>
   13348:	movw	r2, #24383	; 0x5f3f
   1334c:	vstr	d0, [sp]
   13350:	movt	r2, #1
   13354:	mov	r0, r5
   13358:	mov	r1, r8
   1335c:	bl	12018 <snprintf@plt>
   13360:	mov	r0, #0
   13364:	sub	sp, fp, #24
   13368:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1336c:	mov	r0, r4
   13370:	mov	r1, r7
   13374:	mov	r2, r6
   13378:	bl	14768 <table_get_char@@Base>
   1337c:	b	13390 <table_cell_to_buffer@@Base+0x2c8>
   13380:	mov	r0, r4
   13384:	mov	r1, r7
   13388:	mov	r2, r6
   1338c:	bl	14780 <table_get_uchar@@Base>
   13390:	movw	r2, #24387	; 0x5f43
   13394:	mov	r3, r0
   13398:	movt	r2, #1
   1339c:	b	133dc <table_cell_to_buffer@@Base+0x314>
   133a0:	mov	r0, r4
   133a4:	mov	r1, r7
   133a8:	mov	r2, r6
   133ac:	bl	14798 <table_get_string@@Base>
   133b0:	movw	r2, #24373	; 0x5f35
   133b4:	mov	r3, r0
   133b8:	movt	r2, #1
   133bc:	b	133dc <table_cell_to_buffer@@Base+0x314>
   133c0:	mov	r0, r4
   133c4:	mov	r1, r7
   133c8:	mov	r2, r6
   133cc:	bl	14588 <table_get_bool@@Base>
   133d0:	movw	r2, #24184	; 0x5e78
   133d4:	mov	r3, r0
   133d8:	movt	r2, #1
   133dc:	mov	r0, r5
   133e0:	mov	r1, r8
   133e4:	bl	12018 <snprintf@plt>
   133e8:	mov	r0, #0
   133ec:	sub	sp, fp, #24
   133f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133f4:	mov	r0, r4
   133f8:	mov	r1, r7
   133fc:	mov	r2, r6
   13400:	bl	147ac <table_get_ptr@@Base>
   13404:	movw	r2, #24390	; 0x5f46
   13408:	mov	r3, r0
   1340c:	movt	r2, #1
   13410:	b	133dc <table_cell_to_buffer@@Base+0x314>

00013414 <table_cell_from_buffer@@Base>:
   13414:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13418:	add	fp, sp, #24
   1341c:	sub	sp, sp, #264	; 0x108
   13420:	mov	r5, r1
   13424:	mov	r1, r2
   13428:	mov	r7, r3
   1342c:	mov	r4, r2
   13430:	mov	r6, r0
   13434:	bl	13b70 <table_get_column_data_type@@Base>
   13438:	cmp	r0, #23
   1343c:	bhi	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13440:	add	r1, pc, #0
   13444:	ldr	pc, [r1, r0, lsl #2]
   13448:	andeq	r3, r1, r8, lsr #9
   1344c:	andeq	r3, r1, r0, ror #9
   13450:	andeq	r3, r1, r8, lsl r5
   13454:	andeq	r3, r1, r0, asr r5
   13458:	andeq	r3, r1, r8, lsl #11
   1345c:	andeq	r3, r1, r0, asr #11
   13460:	strdeq	r3, [r1], -r8
   13464:	andeq	r3, r1, r0, lsr r6
   13468:	andeq	r3, r1, r8, ror #12
   1346c:	andeq	r3, r1, r8, lsr #13
   13470:	andeq	r3, r1, r8, ror #13
   13474:	andeq	r3, r1, r0, lsr #14
   13478:	andeq	r3, r1, r8, asr r7
   1347c:	muleq	r1, r0, r7
   13480:	andeq	r3, r1, r8, asr #15
   13484:	andeq	r3, r1, r8, lsl #16
   13488:	andeq	r3, r1, r8, asr #16
   1348c:	andeq	r3, r1, r0, lsl #17
   13490:			; <UNDEFINED> instruction: 0x000138b8
   13494:	strdeq	r3, [r1], -r0
   13498:	andeq	r3, r1, r8, lsr #18
   1349c:	andeq	r3, r1, r0, ror #18
   134a0:	muleq	r1, r8, r9
   134a4:	ldrdeq	r3, [r1], -ip
   134a8:	movw	r1, #24184	; 0x5e78
   134ac:	add	r2, sp, #8
   134b0:	mov	r0, r7
   134b4:	movt	r1, #1
   134b8:	bl	12024 <__isoc99_sscanf@plt>
   134bc:	mvn	r7, #0
   134c0:	cmp	r0, #1
   134c4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   134c8:	ldr	r3, [sp, #8]
   134cc:	mov	r0, r6
   134d0:	mov	r1, r5
   134d4:	mov	r2, r4
   134d8:	bl	14da8 <table_set_int@@Base>
   134dc:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   134e0:	movw	r1, #24344	; 0x5f18
   134e4:	add	r2, sp, #8
   134e8:	mov	r0, r7
   134ec:	movt	r1, #1
   134f0:	bl	12024 <__isoc99_sscanf@plt>
   134f4:	mvn	r7, #0
   134f8:	cmp	r0, #1
   134fc:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13500:	ldr	r3, [sp, #8]
   13504:	mov	r0, r6
   13508:	mov	r1, r5
   1350c:	mov	r2, r4
   13510:	bl	14e28 <table_set_uint@@Base>
   13514:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13518:	movw	r1, #24393	; 0x5f49
   1351c:	add	r2, sp, #8
   13520:	mov	r0, r7
   13524:	movt	r1, #1
   13528:	bl	12024 <__isoc99_sscanf@plt>
   1352c:	mvn	r7, #0
   13530:	cmp	r0, #1
   13534:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13538:	ldrsb	r3, [sp, #8]
   1353c:	mov	r0, r6
   13540:	mov	r1, r5
   13544:	mov	r2, r4
   13548:	bl	14ea8 <table_set_int8@@Base>
   1354c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13550:	movw	r1, #24398	; 0x5f4e
   13554:	add	r2, sp, #8
   13558:	mov	r0, r7
   1355c:	movt	r1, #1
   13560:	bl	12024 <__isoc99_sscanf@plt>
   13564:	mvn	r7, #0
   13568:	cmp	r0, #1
   1356c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13570:	ldrb	r3, [sp, #8]
   13574:	mov	r0, r6
   13578:	mov	r1, r5
   1357c:	mov	r2, r4
   13580:	bl	14f28 <table_set_uint8@@Base>
   13584:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13588:	movw	r1, #24357	; 0x5f25
   1358c:	add	r2, sp, #8
   13590:	mov	r0, r7
   13594:	movt	r1, #1
   13598:	bl	12024 <__isoc99_sscanf@plt>
   1359c:	mvn	r7, #0
   135a0:	cmp	r0, #1
   135a4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   135a8:	ldrsh	r3, [sp, #8]
   135ac:	mov	r0, r6
   135b0:	mov	r1, r5
   135b4:	mov	r2, r4
   135b8:	bl	14fa8 <table_set_int16@@Base>
   135bc:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   135c0:	movw	r1, #24361	; 0x5f29
   135c4:	add	r2, sp, #8
   135c8:	mov	r0, r7
   135cc:	movt	r1, #1
   135d0:	bl	12024 <__isoc99_sscanf@plt>
   135d4:	mvn	r7, #0
   135d8:	cmp	r0, #1
   135dc:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   135e0:	ldrh	r3, [sp, #8]
   135e4:	mov	r0, r6
   135e8:	mov	r1, r5
   135ec:	mov	r2, r4
   135f0:	bl	15028 <table_set_uint16@@Base>
   135f4:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   135f8:	movw	r1, #24184	; 0x5e78
   135fc:	add	r2, sp, #8
   13600:	mov	r0, r7
   13604:	movt	r1, #1
   13608:	bl	12024 <__isoc99_sscanf@plt>
   1360c:	mvn	r7, #0
   13610:	cmp	r0, #1
   13614:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13618:	ldr	r3, [sp, #8]
   1361c:	mov	r0, r6
   13620:	mov	r1, r5
   13624:	mov	r2, r4
   13628:	bl	150a8 <table_set_int32@@Base>
   1362c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13630:	movw	r1, #24344	; 0x5f18
   13634:	add	r2, sp, #8
   13638:	mov	r0, r7
   1363c:	movt	r1, #1
   13640:	bl	12024 <__isoc99_sscanf@plt>
   13644:	mvn	r7, #0
   13648:	cmp	r0, #1
   1364c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13650:	ldr	r3, [sp, #8]
   13654:	mov	r0, r6
   13658:	mov	r1, r5
   1365c:	mov	r2, r4
   13660:	bl	15128 <table_set_uint32@@Base>
   13664:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13668:	movw	r1, #24347	; 0x5f1b
   1366c:	add	r2, sp, #8
   13670:	mov	r0, r7
   13674:	movt	r1, #1
   13678:	bl	12024 <__isoc99_sscanf@plt>
   1367c:	mvn	r7, #0
   13680:	cmp	r0, #1
   13684:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13688:	ldr	r0, [sp, #8]
   1368c:	ldr	r1, [sp, #12]
   13690:	mov	r2, r4
   13694:	stm	sp, {r0, r1}
   13698:	mov	r0, r6
   1369c:	mov	r1, r5
   136a0:	bl	151a8 <table_set_int64@@Base>
   136a4:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   136a8:	movw	r1, #24352	; 0x5f20
   136ac:	add	r2, sp, #8
   136b0:	mov	r0, r7
   136b4:	movt	r1, #1
   136b8:	bl	12024 <__isoc99_sscanf@plt>
   136bc:	mvn	r7, #0
   136c0:	cmp	r0, #1
   136c4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   136c8:	ldr	r0, [sp, #8]
   136cc:	ldr	r1, [sp, #12]
   136d0:	mov	r2, r4
   136d4:	stm	sp, {r0, r1}
   136d8:	mov	r0, r6
   136dc:	mov	r1, r5
   136e0:	bl	15230 <table_set_uint64@@Base>
   136e4:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   136e8:	movw	r1, #24357	; 0x5f25
   136ec:	add	r2, sp, #8
   136f0:	mov	r0, r7
   136f4:	movt	r1, #1
   136f8:	bl	12024 <__isoc99_sscanf@plt>
   136fc:	mvn	r7, #0
   13700:	cmp	r0, #1
   13704:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13708:	ldrsh	r3, [sp, #8]
   1370c:	mov	r0, r6
   13710:	mov	r1, r5
   13714:	mov	r2, r4
   13718:	bl	152b8 <table_set_short@@Base>
   1371c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13720:	movw	r1, #24361	; 0x5f29
   13724:	add	r2, sp, #8
   13728:	mov	r0, r7
   1372c:	movt	r1, #1
   13730:	bl	12024 <__isoc99_sscanf@plt>
   13734:	mvn	r7, #0
   13738:	cmp	r0, #1
   1373c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13740:	ldrh	r3, [sp, #8]
   13744:	mov	r0, r6
   13748:	mov	r1, r5
   1374c:	mov	r2, r4
   13750:	bl	15338 <table_set_ushort@@Base>
   13754:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13758:	movw	r1, #24365	; 0x5f2d
   1375c:	add	r2, sp, #8
   13760:	mov	r0, r7
   13764:	movt	r1, #1
   13768:	bl	12024 <__isoc99_sscanf@plt>
   1376c:	mvn	r7, #0
   13770:	cmp	r0, #1
   13774:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13778:	ldr	r3, [sp, #8]
   1377c:	mov	r0, r6
   13780:	mov	r1, r5
   13784:	mov	r2, r4
   13788:	bl	153b8 <table_set_long@@Base>
   1378c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13790:	movw	r1, #24369	; 0x5f31
   13794:	add	r2, sp, #8
   13798:	mov	r0, r7
   1379c:	movt	r1, #1
   137a0:	bl	12024 <__isoc99_sscanf@plt>
   137a4:	mvn	r7, #0
   137a8:	cmp	r0, #1
   137ac:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   137b0:	ldr	r3, [sp, #8]
   137b4:	mov	r0, r6
   137b8:	mov	r1, r5
   137bc:	mov	r2, r4
   137c0:	bl	15438 <table_set_ulong@@Base>
   137c4:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   137c8:	movw	r1, #24347	; 0x5f1b
   137cc:	add	r2, sp, #8
   137d0:	mov	r0, r7
   137d4:	movt	r1, #1
   137d8:	bl	12024 <__isoc99_sscanf@plt>
   137dc:	mvn	r7, #0
   137e0:	cmp	r0, #1
   137e4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   137e8:	ldr	r0, [sp, #8]
   137ec:	ldr	r1, [sp, #12]
   137f0:	mov	r2, r4
   137f4:	stm	sp, {r0, r1}
   137f8:	mov	r0, r6
   137fc:	mov	r1, r5
   13800:	bl	154b8 <table_set_llong@@Base>
   13804:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13808:	movw	r1, #24352	; 0x5f20
   1380c:	add	r2, sp, #8
   13810:	mov	r0, r7
   13814:	movt	r1, #1
   13818:	bl	12024 <__isoc99_sscanf@plt>
   1381c:	mvn	r7, #0
   13820:	cmp	r0, #1
   13824:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13828:	ldr	r0, [sp, #8]
   1382c:	ldr	r1, [sp, #12]
   13830:	mov	r2, r4
   13834:	stm	sp, {r0, r1}
   13838:	mov	r0, r6
   1383c:	mov	r1, r5
   13840:	bl	15540 <table_set_ullong@@Base>
   13844:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13848:	movw	r1, #24376	; 0x5f38
   1384c:	add	r2, sp, #8
   13850:	mov	r0, r7
   13854:	movt	r1, #1
   13858:	bl	12024 <__isoc99_sscanf@plt>
   1385c:	mvn	r7, #0
   13860:	cmp	r0, #1
   13864:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13868:	vldr	s0, [sp, #8]
   1386c:	mov	r0, r6
   13870:	mov	r1, r5
   13874:	mov	r2, r4
   13878:	bl	155c8 <table_set_float@@Base>
   1387c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13880:	movw	r1, #24379	; 0x5f3b
   13884:	add	r2, sp, #8
   13888:	mov	r0, r7
   1388c:	movt	r1, #1
   13890:	bl	12024 <__isoc99_sscanf@plt>
   13894:	mvn	r7, #0
   13898:	cmp	r0, #1
   1389c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   138a0:	vldr	d0, [sp, #8]
   138a4:	mov	r0, r6
   138a8:	mov	r1, r5
   138ac:	mov	r2, r4
   138b0:	bl	15654 <table_set_double@@Base>
   138b4:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   138b8:	movw	r1, #24383	; 0x5f3f
   138bc:	add	r2, sp, #8
   138c0:	mov	r0, r7
   138c4:	movt	r1, #1
   138c8:	bl	12024 <__isoc99_sscanf@plt>
   138cc:	mvn	r7, #0
   138d0:	cmp	r0, #1
   138d4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   138d8:	vldr	d0, [sp, #8]
   138dc:	mov	r0, r6
   138e0:	mov	r1, r5
   138e4:	mov	r2, r4
   138e8:	bl	156dc <table_set_ldouble@@Base>
   138ec:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   138f0:	movw	r1, #24387	; 0x5f43
   138f4:	add	r2, sp, #8
   138f8:	mov	r0, r7
   138fc:	movt	r1, #1
   13900:	bl	12024 <__isoc99_sscanf@plt>
   13904:	mvn	r7, #0
   13908:	cmp	r0, #1
   1390c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13910:	ldrb	r3, [sp, #8]
   13914:	mov	r0, r6
   13918:	mov	r1, r5
   1391c:	mov	r2, r4
   13920:	bl	157ec <table_set_char@@Base>
   13924:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13928:	movw	r1, #24387	; 0x5f43
   1392c:	add	r2, sp, #8
   13930:	mov	r0, r7
   13934:	movt	r1, #1
   13938:	bl	12024 <__isoc99_sscanf@plt>
   1393c:	mvn	r7, #0
   13940:	cmp	r0, #1
   13944:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13948:	ldrb	r3, [sp, #8]
   1394c:	mov	r0, r6
   13950:	mov	r1, r5
   13954:	mov	r2, r4
   13958:	bl	1586c <table_set_uchar@@Base>
   1395c:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13960:	movw	r1, #24373	; 0x5f35
   13964:	add	r2, sp, #8
   13968:	mov	r0, r7
   1396c:	movt	r1, #1
   13970:	bl	12024 <__isoc99_sscanf@plt>
   13974:	mvn	r7, #0
   13978:	cmp	r0, #1
   1397c:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   13980:	add	r3, sp, #8
   13984:	mov	r0, r6
   13988:	mov	r1, r5
   1398c:	mov	r2, r4
   13990:	bl	15764 <table_set_string@@Base>
   13994:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   13998:	movw	r1, #24184	; 0x5e78
   1399c:	add	r2, sp, #8
   139a0:	mov	r0, r7
   139a4:	movt	r1, #1
   139a8:	bl	12024 <__isoc99_sscanf@plt>
   139ac:	mvn	r7, #0
   139b0:	cmp	r0, #1
   139b4:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   139b8:	ldr	r0, [sp, #8]
   139bc:	cmp	r0, #0
   139c0:	beq	13a20 <table_cell_from_buffer@@Base+0x60c>
   139c4:	mov	r0, r6
   139c8:	mov	r1, r5
   139cc:	mov	r2, r4
   139d0:	mov	r3, #1
   139d4:	bl	14d28 <table_set_bool@@Base>
   139d8:	b	13a10 <table_cell_from_buffer@@Base+0x5fc>
   139dc:	movw	r1, #24390	; 0x5f46
   139e0:	add	r2, sp, #8
   139e4:	mov	r0, r7
   139e8:	movt	r1, #1
   139ec:	bl	12024 <__isoc99_sscanf@plt>
   139f0:	mvn	r7, #0
   139f4:	cmp	r0, #1
   139f8:	bne	13a14 <table_cell_from_buffer@@Base+0x600>
   139fc:	ldr	r3, [sp, #8]
   13a00:	mov	r0, r6
   13a04:	mov	r1, r5
   13a08:	mov	r2, r4
   13a0c:	bl	158ec <table_set_ptr@@Base>
   13a10:	mov	r7, #0
   13a14:	mov	r0, r7
   13a18:	sub	sp, fp, #24
   13a1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13a20:	mov	r0, r6
   13a24:	mov	r1, r5
   13a28:	mov	r2, r4
   13a2c:	mov	r3, #0
   13a30:	mov	r7, #0
   13a34:	bl	14d28 <table_set_bool@@Base>
   13a38:	mov	r0, r7
   13a3c:	sub	sp, fp, #24
   13a40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013a44 <table_cell_nullify@@Base>:
   13a44:	push	{r4, r5, fp, lr}
   13a48:	add	fp, sp, #8
   13a4c:	mov	r4, r2
   13a50:	bl	147e4 <table_get_row_ptr@@Base>
   13a54:	ldr	r5, [r0]
   13a58:	ldr	r0, [r5, r4, lsl #2]
   13a5c:	cmp	r0, #0
   13a60:	beq	13a70 <table_cell_nullify@@Base+0x2c>
   13a64:	bl	11fa0 <free@plt>
   13a68:	mov	r0, #0
   13a6c:	str	r0, [r5, r4, lsl #2]
   13a70:	mov	r0, #0
   13a74:	pop	{r4, r5, fp, pc}

00013a78 <table_column_init@@Base>:
   13a78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a7c:	add	fp, sp, #24
   13a80:	ldr	r7, [r0]
   13a84:	mov	r0, r2
   13a88:	mov	r4, r3
   13a8c:	mov	r5, r2
   13a90:	mov	r6, r1
   13a94:	bl	12000 <strlen@plt>
   13a98:	add	r0, r0, #1
   13a9c:	bl	11fdc <malloc@plt>
   13aa0:	ldr	r8, [fp, #8]
   13aa4:	add	r6, r6, r6, lsl #1
   13aa8:	cmp	r0, #0
   13aac:	str	r0, [r7, r6, lsl #2]
   13ab0:	beq	13abc <table_column_init@@Base+0x44>
   13ab4:	mov	r1, r5
   13ab8:	bl	11fc4 <strcpy@plt>
   13abc:	add	r0, r7, r6, lsl #2
   13ac0:	stmib	r0, {r4, r8}
   13ac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ac8 <table_get_col_ptr@@Base>:
   13ac8:	ldr	r0, [r0]
   13acc:	add	r1, r1, r1, lsl #1
   13ad0:	add	r0, r0, r1, lsl #2
   13ad4:	bx	lr

00013ad8 <table_column_destroy@@Base>:
   13ad8:	ldr	r0, [r0]
   13adc:	add	r1, r1, r1, lsl #1
   13ae0:	ldr	r0, [r0, r1, lsl #2]
   13ae4:	cmp	r0, #0
   13ae8:	bxeq	lr
   13aec:	b	11fa0 <free@plt>

00013af0 <table_get_column_length@@Base>:
   13af0:	ldr	r0, [r0, #4]
   13af4:	bx	lr

00013af8 <table_get_column@@Base>:
   13af8:	push	{r4, r5, r6, r7, fp, lr}
   13afc:	add	fp, sp, #16
   13b00:	ldr	r6, [r0, #4]
   13b04:	cmp	r6, #1
   13b08:	blt	13b4c <table_get_column@@Base+0x54>
   13b0c:	ldr	r7, [r0]
   13b10:	mov	r5, r1
   13b14:	mov	r4, #0
   13b18:	ldr	r0, [r7]
   13b1c:	mov	r1, r5
   13b20:	bl	11f88 <strcmp@plt>
   13b24:	cmp	r0, #0
   13b28:	beq	13b3c <table_get_column@@Base+0x44>
   13b2c:	add	r4, r4, #1
   13b30:	add	r7, r7, #12
   13b34:	cmp	r4, r6
   13b38:	blt	13b18 <table_get_column@@Base+0x20>
   13b3c:	cmp	r4, r6
   13b40:	mvneq	r4, #0
   13b44:	mov	r0, r4
   13b48:	pop	{r4, r5, r6, r7, fp, pc}
   13b4c:	mov	r4, #0
   13b50:	cmp	r4, r6
   13b54:	mvneq	r4, #0
   13b58:	mov	r0, r4
   13b5c:	pop	{r4, r5, r6, r7, fp, pc}

00013b60 <table_get_column_name@@Base>:
   13b60:	ldr	r0, [r0]
   13b64:	add	r1, r1, r1, lsl #1
   13b68:	ldr	r0, [r0, r1, lsl #2]
   13b6c:	bx	lr

00013b70 <table_get_column_data_type@@Base>:
   13b70:	ldr	r0, [r0]
   13b74:	add	r1, r1, r1, lsl #1
   13b78:	add	r0, r0, r1, lsl #2
   13b7c:	ldr	r0, [r0, #4]
   13b80:	bx	lr

00013b84 <table_add_column@@Base>:
   13b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b88:	add	fp, sp, #28
   13b8c:	sub	sp, sp, #4
   13b90:	mov	r4, r0
   13b94:	mov	r8, r1
   13b98:	ldr	r0, [r0, #4]
   13b9c:	mov	r9, r2
   13ba0:	ldr	r1, [r4, #8]
   13ba4:	udiv	r2, r0, r1
   13ba8:	mls	r0, r2, r1, r0
   13bac:	cmp	r0, #0
   13bb0:	bne	13c1c <table_add_column@@Base+0x98>
   13bb4:	ldr	r2, [r4, #12]
   13bb8:	ldr	r0, [r4]
   13bbc:	add	r1, r2, r1
   13bc0:	str	r1, [r4, #12]
   13bc4:	add	r1, r1, r1, lsl #1
   13bc8:	lsl	r1, r1, #2
   13bcc:	bl	11fb8 <realloc@plt>
   13bd0:	str	r0, [r4]
   13bd4:	mov	r0, r4
   13bd8:	bl	14848 <table_get_row_length@@Base>
   13bdc:	cmp	r0, #1
   13be0:	blt	13c1c <table_add_column@@Base+0x98>
   13be4:	mov	r6, r0
   13be8:	mov	r5, #0
   13bec:	mov	r0, r4
   13bf0:	mov	r1, r5
   13bf4:	bl	147e4 <table_get_row_ptr@@Base>
   13bf8:	ldr	r1, [r4, #12]
   13bfc:	mov	r7, r0
   13c00:	ldr	r0, [r0]
   13c04:	lsl	r1, r1, #2
   13c08:	bl	11fb8 <realloc@plt>
   13c0c:	add	r5, r5, #1
   13c10:	str	r0, [r7]
   13c14:	cmp	r6, r5
   13c18:	bne	13bec <table_add_column@@Base+0x68>
   13c1c:	mov	r0, r4
   13c20:	bl	14848 <table_get_row_length@@Base>
   13c24:	ldr	r6, [r4, #4]
   13c28:	mov	r7, r0
   13c2c:	mov	r0, r9
   13c30:	bl	1455c <table_get_default_compare_function_for_data_type@@Base>
   13c34:	ldr	r5, [r4]
   13c38:	mov	sl, r0
   13c3c:	mov	r0, r8
   13c40:	bl	12000 <strlen@plt>
   13c44:	add	r0, r0, #1
   13c48:	bl	11fdc <malloc@plt>
   13c4c:	mov	r1, r8
   13c50:	add	r8, r6, r6, lsl #1
   13c54:	cmp	r0, #0
   13c58:	str	r0, [r5, r8, lsl #2]
   13c5c:	beq	13c64 <table_add_column@@Base+0xe0>
   13c60:	bl	11fc4 <strcpy@plt>
   13c64:	add	r0, r5, r8, lsl #2
   13c68:	cmp	r7, #1
   13c6c:	stmib	r0, {r9, sl}
   13c70:	blt	13c94 <table_add_column@@Base+0x110>
   13c74:	mov	r5, #0
   13c78:	mov	r0, r4
   13c7c:	mov	r1, r5
   13c80:	mov	r2, r6
   13c84:	bl	13040 <table_cell_init@@Base>
   13c88:	add	r5, r5, #1
   13c8c:	cmp	r7, r5
   13c90:	bne	13c78 <table_add_column@@Base+0xf4>
   13c94:	ldr	r2, [r4, #4]
   13c98:	mov	r0, r4
   13c9c:	mvn	r1, #0
   13ca0:	mov	r3, #8
   13ca4:	bl	12fc4 <table_notify@@Base>
   13ca8:	ldr	r0, [r4, #4]
   13cac:	add	r1, r0, #1
   13cb0:	str	r1, [r4, #4]
   13cb4:	sub	sp, fp, #28
   13cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013cbc <table_remove_column@@Base>:
   13cbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cc0:	add	fp, sp, #24
   13cc4:	mov	r5, r0
   13cc8:	ldr	r0, [r0]
   13ccc:	add	r6, r1, r1, lsl #1
   13cd0:	mov	r9, r1
   13cd4:	ldr	r0, [r0, r6, lsl #2]
   13cd8:	cmp	r0, #0
   13cdc:	beq	13ce4 <table_remove_column@@Base+0x28>
   13ce0:	bl	11fa0 <free@plt>
   13ce4:	ldr	r0, [r5, #4]
   13ce8:	sub	r4, r0, #1
   13cec:	cmp	r4, r9
   13cf0:	ble	13d20 <table_remove_column@@Base+0x64>
   13cf4:	sub	r0, r4, r9
   13cf8:	lsl	r1, r6, #2
   13cfc:	ldr	r2, [r5]
   13d00:	subs	r0, r0, #1
   13d04:	add	r2, r2, r1
   13d08:	add	r1, r1, #12
   13d0c:	vldr	d16, [r2, #12]
   13d10:	ldr	r3, [r2, #20]
   13d14:	str	r3, [r2, #8]
   13d18:	vstr	d16, [r2]
   13d1c:	bne	13cfc <table_remove_column@@Base+0x40>
   13d20:	mov	r0, r5
   13d24:	bl	14848 <table_get_row_length@@Base>
   13d28:	cmp	r0, #1
   13d2c:	blt	13db4 <table_remove_column@@Base+0xf8>
   13d30:	mov	r6, r0
   13d34:	mov	r7, #0
   13d38:	cmp	r4, r9
   13d3c:	ble	13d8c <table_remove_column@@Base+0xd0>
   13d40:	mov	r0, r5
   13d44:	mov	r1, r7
   13d48:	mov	r2, r9
   13d4c:	bl	1307c <table_cell_destroy@@Base>
   13d50:	mov	r0, r5
   13d54:	mov	r1, r7
   13d58:	bl	147e4 <table_get_row_ptr@@Base>
   13d5c:	mov	r1, r9
   13d60:	ldr	r2, [r0]
   13d64:	add	r3, r2, r1, lsl #2
   13d68:	ldr	r3, [r3, #4]
   13d6c:	str	r3, [r2, r1, lsl #2]
   13d70:	add	r1, r1, #1
   13d74:	cmp	r4, r1
   13d78:	bne	13d60 <table_remove_column@@Base+0xa4>
   13d7c:	add	r7, r7, #1
   13d80:	cmp	r7, r6
   13d84:	bne	13d40 <table_remove_column@@Base+0x84>
   13d88:	b	13db4 <table_remove_column@@Base+0xf8>
   13d8c:	mov	r0, r5
   13d90:	mov	r1, r7
   13d94:	mov	r2, r9
   13d98:	bl	1307c <table_cell_destroy@@Base>
   13d9c:	mov	r0, r5
   13da0:	mov	r1, r7
   13da4:	bl	147e4 <table_get_row_ptr@@Base>
   13da8:	add	r7, r7, #1
   13dac:	cmp	r6, r7
   13db0:	bne	13d8c <table_remove_column@@Base+0xd0>
   13db4:	ldmib	r5, {r0, r1}
   13db8:	sub	r0, r0, #1
   13dbc:	udiv	r2, r0, r1
   13dc0:	str	r0, [r5, #4]
   13dc4:	mls	r0, r2, r1, r0
   13dc8:	cmp	r0, #0
   13dcc:	bne	13e38 <table_remove_column@@Base+0x17c>
   13dd0:	ldr	r2, [r5, #12]
   13dd4:	ldr	r0, [r5]
   13dd8:	sub	r1, r2, r1
   13ddc:	str	r1, [r5, #12]
   13de0:	add	r1, r1, r1, lsl #1
   13de4:	lsl	r1, r1, #2
   13de8:	bl	11fb8 <realloc@plt>
   13dec:	str	r0, [r5]
   13df0:	mov	r0, r5
   13df4:	bl	14848 <table_get_row_length@@Base>
   13df8:	cmp	r0, #1
   13dfc:	blt	13e38 <table_remove_column@@Base+0x17c>
   13e00:	mov	r8, r0
   13e04:	mov	r7, #0
   13e08:	mov	r0, r5
   13e0c:	mov	r1, r7
   13e10:	bl	147e4 <table_get_row_ptr@@Base>
   13e14:	ldr	r1, [r5, #12]
   13e18:	mov	r6, r0
   13e1c:	ldr	r0, [r0]
   13e20:	lsl	r1, r1, #2
   13e24:	bl	11fb8 <realloc@plt>
   13e28:	add	r7, r7, #1
   13e2c:	str	r0, [r6]
   13e30:	cmp	r8, r7
   13e34:	bne	13e08 <table_remove_column@@Base+0x14c>
   13e38:	mov	r0, r5
   13e3c:	mvn	r1, #0
   13e40:	mov	r2, r9
   13e44:	mov	r3, #16
   13e48:	bl	12fc4 <table_notify@@Base>
   13e4c:	mov	r0, #0
   13e50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e54 <table_get_column_compare_function@@Base>:
   13e54:	ldr	r0, [r0]
   13e58:	add	r1, r1, r1, lsl #1
   13e5c:	add	r0, r0, r1, lsl #2
   13e60:	ldr	r0, [r0, #8]
   13e64:	bx	lr

00013e68 <table_set_column_compare_function@@Base>:
   13e68:	ldr	r0, [r0]
   13e6c:	add	r1, r1, r1, lsl #1
   13e70:	add	r0, r0, r1, lsl #2
   13e74:	str	r2, [r0, #8]
   13e78:	bx	lr

00013e7c <table_compare_bool@@Base>:
   13e7c:	cmp	r0, #0
   13e80:	beq	13eb4 <table_compare_bool@@Base+0x38>
   13e84:	cmp	r1, #0
   13e88:	moveq	r1, #1
   13e8c:	moveq	r0, r1
   13e90:	bxeq	lr
   13e94:	ldrb	r2, [r1]
   13e98:	ldrb	r0, [r0]
   13e9c:	mov	r1, #0
   13ea0:	cmp	r0, r2
   13ea4:	mvncc	r1, #0
   13ea8:	movwhi	r1, #1
   13eac:	mov	r0, r1
   13eb0:	bx	lr
   13eb4:	cmp	r1, #0
   13eb8:	mvnne	r1, #0
   13ebc:	mov	r0, r1
   13ec0:	bx	lr

00013ec4 <table_compare_int@@Base>:
   13ec4:	cmp	r0, #0
   13ec8:	beq	13efc <table_compare_int@@Base+0x38>
   13ecc:	cmp	r1, #0
   13ed0:	moveq	r1, #1
   13ed4:	moveq	r0, r1
   13ed8:	bxeq	lr
   13edc:	ldr	r2, [r1]
   13ee0:	ldr	r0, [r0]
   13ee4:	mov	r1, #0
   13ee8:	cmp	r0, r2
   13eec:	mvnlt	r1, #0
   13ef0:	movwgt	r1, #1
   13ef4:	mov	r0, r1
   13ef8:	bx	lr
   13efc:	cmp	r1, #0
   13f00:	mvnne	r1, #0
   13f04:	mov	r0, r1
   13f08:	bx	lr

00013f0c <table_compare_uint@@Base>:
   13f0c:	cmp	r0, #0
   13f10:	beq	13f44 <table_compare_uint@@Base+0x38>
   13f14:	cmp	r1, #0
   13f18:	moveq	r1, #1
   13f1c:	moveq	r0, r1
   13f20:	bxeq	lr
   13f24:	ldr	r2, [r1]
   13f28:	ldr	r0, [r0]
   13f2c:	mov	r1, #0
   13f30:	cmp	r0, r2
   13f34:	mvncc	r1, #0
   13f38:	movwhi	r1, #1
   13f3c:	mov	r0, r1
   13f40:	bx	lr
   13f44:	cmp	r1, #0
   13f48:	mvnne	r1, #0
   13f4c:	mov	r0, r1
   13f50:	bx	lr

00013f54 <table_compare_int8@@Base>:
   13f54:	cmp	r0, #0
   13f58:	beq	13f8c <table_compare_int8@@Base+0x38>
   13f5c:	cmp	r1, #0
   13f60:	moveq	r1, #1
   13f64:	moveq	r0, r1
   13f68:	bxeq	lr
   13f6c:	ldrsb	r2, [r1]
   13f70:	ldrsb	r0, [r0]
   13f74:	mov	r1, #0
   13f78:	cmp	r0, r2
   13f7c:	mvnlt	r1, #0
   13f80:	movwgt	r1, #1
   13f84:	mov	r0, r1
   13f88:	bx	lr
   13f8c:	cmp	r1, #0
   13f90:	mvnne	r1, #0
   13f94:	mov	r0, r1
   13f98:	bx	lr

00013f9c <table_compare_uint8@@Base>:
   13f9c:	cmp	r0, #0
   13fa0:	beq	13fd4 <table_compare_uint8@@Base+0x38>
   13fa4:	cmp	r1, #0
   13fa8:	moveq	r1, #1
   13fac:	moveq	r0, r1
   13fb0:	bxeq	lr
   13fb4:	ldrb	r2, [r1]
   13fb8:	ldrb	r0, [r0]
   13fbc:	mov	r1, #0
   13fc0:	cmp	r0, r2
   13fc4:	mvncc	r1, #0
   13fc8:	movwhi	r1, #1
   13fcc:	mov	r0, r1
   13fd0:	bx	lr
   13fd4:	cmp	r1, #0
   13fd8:	mvnne	r1, #0
   13fdc:	mov	r0, r1
   13fe0:	bx	lr

00013fe4 <table_compare_int16@@Base>:
   13fe4:	cmp	r0, #0
   13fe8:	beq	1401c <table_compare_int16@@Base+0x38>
   13fec:	cmp	r1, #0
   13ff0:	moveq	r1, #1
   13ff4:	moveq	r0, r1
   13ff8:	bxeq	lr
   13ffc:	ldrsh	r2, [r1]
   14000:	ldrsh	r0, [r0]
   14004:	mov	r1, #0
   14008:	cmp	r0, r2
   1400c:	mvnlt	r1, #0
   14010:	movwgt	r1, #1
   14014:	mov	r0, r1
   14018:	bx	lr
   1401c:	cmp	r1, #0
   14020:	mvnne	r1, #0
   14024:	mov	r0, r1
   14028:	bx	lr

0001402c <table_compare_uint16@@Base>:
   1402c:	cmp	r0, #0
   14030:	beq	14064 <table_compare_uint16@@Base+0x38>
   14034:	cmp	r1, #0
   14038:	moveq	r1, #1
   1403c:	moveq	r0, r1
   14040:	bxeq	lr
   14044:	ldrh	r2, [r1]
   14048:	ldrh	r0, [r0]
   1404c:	mov	r1, #0
   14050:	cmp	r0, r2
   14054:	mvncc	r1, #0
   14058:	movwhi	r1, #1
   1405c:	mov	r0, r1
   14060:	bx	lr
   14064:	cmp	r1, #0
   14068:	mvnne	r1, #0
   1406c:	mov	r0, r1
   14070:	bx	lr

00014074 <table_compare_int32@@Base>:
   14074:	cmp	r0, #0
   14078:	beq	140ac <table_compare_int32@@Base+0x38>
   1407c:	cmp	r1, #0
   14080:	moveq	r1, #1
   14084:	moveq	r0, r1
   14088:	bxeq	lr
   1408c:	ldr	r2, [r1]
   14090:	ldr	r0, [r0]
   14094:	mov	r1, #0
   14098:	cmp	r0, r2
   1409c:	mvnlt	r1, #0
   140a0:	movwgt	r1, #1
   140a4:	mov	r0, r1
   140a8:	bx	lr
   140ac:	cmp	r1, #0
   140b0:	mvnne	r1, #0
   140b4:	mov	r0, r1
   140b8:	bx	lr

000140bc <table_compare_uint32@@Base>:
   140bc:	cmp	r0, #0
   140c0:	beq	140f4 <table_compare_uint32@@Base+0x38>
   140c4:	cmp	r1, #0
   140c8:	moveq	r1, #1
   140cc:	moveq	r0, r1
   140d0:	bxeq	lr
   140d4:	ldr	r2, [r1]
   140d8:	ldr	r0, [r0]
   140dc:	mov	r1, #0
   140e0:	cmp	r0, r2
   140e4:	mvncc	r1, #0
   140e8:	movwhi	r1, #1
   140ec:	mov	r0, r1
   140f0:	bx	lr
   140f4:	cmp	r1, #0
   140f8:	mvnne	r1, #0
   140fc:	mov	r0, r1
   14100:	bx	lr

00014104 <table_compare_int64@@Base>:
   14104:	cmp	r0, #0
   14108:	beq	1415c <table_compare_int64@@Base+0x58>
   1410c:	cmp	r1, #0
   14110:	moveq	r1, #1
   14114:	moveq	r0, r1
   14118:	bxeq	lr
   1411c:	push	{r5, r7, fp, lr}
   14120:	add	fp, sp, #8
   14124:	ldm	r1, {r2, r7}
   14128:	ldm	r0, {r0, r5}
   1412c:	mov	r1, #0
   14130:	subs	r3, r0, r2
   14134:	sbcs	r3, r5, r7
   14138:	movwlt	r1, #1
   1413c:	cmp	r1, #0
   14140:	mvnne	r1, #0
   14144:	subs	r0, r2, r0
   14148:	sbcs	r0, r7, r5
   1414c:	movwlt	r1, #1
   14150:	pop	{r5, r7, fp, lr}
   14154:	mov	r0, r1
   14158:	bx	lr
   1415c:	cmp	r1, #0
   14160:	mvnne	r1, #0
   14164:	mov	r0, r1
   14168:	bx	lr

0001416c <table_compare_uint64@@Base>:
   1416c:	cmp	r0, #0
   14170:	beq	141c4 <table_compare_uint64@@Base+0x58>
   14174:	cmp	r1, #0
   14178:	moveq	r1, #1
   1417c:	moveq	r0, r1
   14180:	bxeq	lr
   14184:	push	{r5, r7, fp, lr}
   14188:	add	fp, sp, #8
   1418c:	ldm	r1, {r2, r7}
   14190:	ldm	r0, {r0, r5}
   14194:	mov	r1, #0
   14198:	subs	r3, r0, r2
   1419c:	sbcs	r3, r5, r7
   141a0:	movwcc	r1, #1
   141a4:	cmp	r1, #0
   141a8:	mvnne	r1, #0
   141ac:	subs	r0, r2, r0
   141b0:	sbcs	r0, r7, r5
   141b4:	movwcc	r1, #1
   141b8:	pop	{r5, r7, fp, lr}
   141bc:	mov	r0, r1
   141c0:	bx	lr
   141c4:	cmp	r1, #0
   141c8:	mvnne	r1, #0
   141cc:	mov	r0, r1
   141d0:	bx	lr

000141d4 <table_compare_short@@Base>:
   141d4:	cmp	r0, #0
   141d8:	beq	1420c <table_compare_short@@Base+0x38>
   141dc:	cmp	r1, #0
   141e0:	moveq	r1, #1
   141e4:	moveq	r0, r1
   141e8:	bxeq	lr
   141ec:	ldrsh	r2, [r1]
   141f0:	ldrsh	r0, [r0]
   141f4:	mov	r1, #0
   141f8:	cmp	r0, r2
   141fc:	mvnlt	r1, #0
   14200:	movwgt	r1, #1
   14204:	mov	r0, r1
   14208:	bx	lr
   1420c:	cmp	r1, #0
   14210:	mvnne	r1, #0
   14214:	mov	r0, r1
   14218:	bx	lr

0001421c <table_compare_ushort@@Base>:
   1421c:	cmp	r0, #0
   14220:	beq	14254 <table_compare_ushort@@Base+0x38>
   14224:	cmp	r1, #0
   14228:	moveq	r1, #1
   1422c:	moveq	r0, r1
   14230:	bxeq	lr
   14234:	ldrh	r2, [r1]
   14238:	ldrh	r0, [r0]
   1423c:	mov	r1, #0
   14240:	cmp	r0, r2
   14244:	mvncc	r1, #0
   14248:	movwhi	r1, #1
   1424c:	mov	r0, r1
   14250:	bx	lr
   14254:	cmp	r1, #0
   14258:	mvnne	r1, #0
   1425c:	mov	r0, r1
   14260:	bx	lr

00014264 <table_compare_long@@Base>:
   14264:	cmp	r0, #0
   14268:	beq	1429c <table_compare_long@@Base+0x38>
   1426c:	cmp	r1, #0
   14270:	moveq	r1, #1
   14274:	moveq	r0, r1
   14278:	bxeq	lr
   1427c:	ldr	r2, [r1]
   14280:	ldr	r0, [r0]
   14284:	mov	r1, #0
   14288:	cmp	r0, r2
   1428c:	mvnlt	r1, #0
   14290:	movwgt	r1, #1
   14294:	mov	r0, r1
   14298:	bx	lr
   1429c:	cmp	r1, #0
   142a0:	mvnne	r1, #0
   142a4:	mov	r0, r1
   142a8:	bx	lr

000142ac <table_compare_ulong@@Base>:
   142ac:	cmp	r0, #0
   142b0:	beq	142e4 <table_compare_ulong@@Base+0x38>
   142b4:	cmp	r1, #0
   142b8:	moveq	r1, #1
   142bc:	moveq	r0, r1
   142c0:	bxeq	lr
   142c4:	ldr	r2, [r1]
   142c8:	ldr	r0, [r0]
   142cc:	mov	r1, #0
   142d0:	cmp	r0, r2
   142d4:	mvncc	r1, #0
   142d8:	movwhi	r1, #1
   142dc:	mov	r0, r1
   142e0:	bx	lr
   142e4:	cmp	r1, #0
   142e8:	mvnne	r1, #0
   142ec:	mov	r0, r1
   142f0:	bx	lr

000142f4 <table_compare_llong@@Base>:
   142f4:	cmp	r0, #0
   142f8:	beq	1434c <table_compare_llong@@Base+0x58>
   142fc:	cmp	r1, #0
   14300:	moveq	r1, #1
   14304:	moveq	r0, r1
   14308:	bxeq	lr
   1430c:	push	{r5, r7, fp, lr}
   14310:	add	fp, sp, #8
   14314:	ldm	r1, {r2, r7}
   14318:	ldm	r0, {r0, r5}
   1431c:	mov	r1, #0
   14320:	subs	r3, r0, r2
   14324:	sbcs	r3, r5, r7
   14328:	movwlt	r1, #1
   1432c:	cmp	r1, #0
   14330:	mvnne	r1, #0
   14334:	subs	r0, r2, r0
   14338:	sbcs	r0, r7, r5
   1433c:	movwlt	r1, #1
   14340:	pop	{r5, r7, fp, lr}
   14344:	mov	r0, r1
   14348:	bx	lr
   1434c:	cmp	r1, #0
   14350:	mvnne	r1, #0
   14354:	mov	r0, r1
   14358:	bx	lr

0001435c <table_compare_ullong@@Base>:
   1435c:	cmp	r0, #0
   14360:	beq	14394 <table_compare_ullong@@Base+0x38>
   14364:	cmp	r1, #0
   14368:	moveq	r1, #1
   1436c:	moveq	r0, r1
   14370:	bxeq	lr
   14374:	ldr	r2, [r1]
   14378:	ldr	r0, [r0]
   1437c:	mov	r1, #0
   14380:	cmp	r0, r2
   14384:	mvncc	r1, #0
   14388:	movwhi	r1, #1
   1438c:	mov	r0, r1
   14390:	bx	lr
   14394:	cmp	r1, #0
   14398:	mvnne	r1, #0
   1439c:	mov	r0, r1
   143a0:	bx	lr

000143a4 <table_compare_float@@Base>:
   143a4:	cmp	r0, #0
   143a8:	beq	143e0 <table_compare_float@@Base+0x3c>
   143ac:	cmp	r1, #0
   143b0:	moveq	r1, #1
   143b4:	moveq	r0, r1
   143b8:	bxeq	lr
   143bc:	vldr	s0, [r1]
   143c0:	vldr	s2, [r0]
   143c4:	mov	r1, #0
   143c8:	vcmpe.f32	s2, s0
   143cc:	vmrs	APSR_nzcv, fpscr
   143d0:	mvnmi	r1, #0
   143d4:	movwgt	r1, #1
   143d8:	mov	r0, r1
   143dc:	bx	lr
   143e0:	cmp	r1, #0
   143e4:	mvnne	r1, #0
   143e8:	mov	r0, r1
   143ec:	bx	lr

000143f0 <table_compare_double@@Base>:
   143f0:	cmp	r0, #0
   143f4:	beq	1442c <table_compare_double@@Base+0x3c>
   143f8:	cmp	r1, #0
   143fc:	moveq	r1, #1
   14400:	moveq	r0, r1
   14404:	bxeq	lr
   14408:	vldr	d16, [r1]
   1440c:	vldr	d17, [r0]
   14410:	mov	r1, #0
   14414:	vcmpe.f64	d17, d16
   14418:	vmrs	APSR_nzcv, fpscr
   1441c:	mvnmi	r1, #0
   14420:	movwgt	r1, #1
   14424:	mov	r0, r1
   14428:	bx	lr
   1442c:	cmp	r1, #0
   14430:	mvnne	r1, #0
   14434:	mov	r0, r1
   14438:	bx	lr

0001443c <table_compare_ldouble@@Base>:
   1443c:	cmp	r0, #0
   14440:	beq	14478 <table_compare_ldouble@@Base+0x3c>
   14444:	cmp	r1, #0
   14448:	moveq	r1, #1
   1444c:	moveq	r0, r1
   14450:	bxeq	lr
   14454:	vldr	d16, [r1]
   14458:	vldr	d17, [r0]
   1445c:	mov	r1, #0
   14460:	vcmpe.f64	d17, d16
   14464:	vmrs	APSR_nzcv, fpscr
   14468:	mvnmi	r1, #0
   1446c:	movwgt	r1, #1
   14470:	mov	r0, r1
   14474:	bx	lr
   14478:	cmp	r1, #0
   1447c:	mvnne	r1, #0
   14480:	mov	r0, r1
   14484:	bx	lr

00014488 <table_compare_char@@Base>:
   14488:	cmp	r0, #0
   1448c:	beq	144c0 <table_compare_char@@Base+0x38>
   14490:	cmp	r1, #0
   14494:	moveq	r1, #1
   14498:	moveq	r0, r1
   1449c:	bxeq	lr
   144a0:	ldrb	r2, [r1]
   144a4:	ldrb	r0, [r0]
   144a8:	mov	r1, #0
   144ac:	cmp	r0, r2
   144b0:	mvncc	r1, #0
   144b4:	movwhi	r1, #1
   144b8:	mov	r0, r1
   144bc:	bx	lr
   144c0:	cmp	r1, #0
   144c4:	mvnne	r1, #0
   144c8:	mov	r0, r1
   144cc:	bx	lr

000144d0 <table_compare_uchar@@Base>:
   144d0:	cmp	r0, #0
   144d4:	beq	14508 <table_compare_uchar@@Base+0x38>
   144d8:	cmp	r1, #0
   144dc:	moveq	r1, #1
   144e0:	moveq	r0, r1
   144e4:	bxeq	lr
   144e8:	ldrb	r2, [r1]
   144ec:	ldrb	r0, [r0]
   144f0:	mov	r1, #0
   144f4:	cmp	r0, r2
   144f8:	mvncc	r1, #0
   144fc:	movwhi	r1, #1
   14500:	mov	r0, r1
   14504:	bx	lr
   14508:	cmp	r1, #0
   1450c:	mvnne	r1, #0
   14510:	mov	r0, r1
   14514:	bx	lr

00014518 <table_compare_string@@Base>:
   14518:	cmp	r0, #0
   1451c:	beq	14534 <table_compare_string@@Base+0x1c>
   14520:	cmp	r1, #0
   14524:	moveq	r1, #1
   14528:	moveq	r0, r1
   1452c:	bxeq	lr
   14530:	b	11f88 <strcmp@plt>
   14534:	cmp	r1, #0
   14538:	mvnne	r1, #0
   1453c:	mov	r0, r1
   14540:	bx	lr

00014544 <table_compare_ptr@@Base>:
   14544:	mov	r2, #0
   14548:	cmp	r0, r1
   1454c:	mvncc	r2, #0
   14550:	movwhi	r2, #1
   14554:	mov	r0, r2
   14558:	bx	lr

0001455c <table_get_default_compare_function_for_data_type@@Base>:
   1455c:	cmp	r0, #23
   14560:	movwls	r1, #24416	; 0x5f60
   14564:	movhi	r0, #0
   14568:	movtls	r1, #1
   1456c:	ldrls	r0, [r1, r0, lsl #2]
   14570:	bx	lr

00014574 <table_get@@Base>:
   14574:	push	{fp, lr}
   14578:	mov	fp, sp
   1457c:	bl	13060 <table_get_cell_ptr@@Base>
   14580:	ldr	r0, [r0]
   14584:	pop	{fp, pc}

00014588 <table_get_bool@@Base>:
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	bl	13060 <table_get_cell_ptr@@Base>
   14594:	ldr	r0, [r0]
   14598:	ldrb	r0, [r0]
   1459c:	pop	{fp, pc}

000145a0 <table_get_int@@Base>:
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	bl	13060 <table_get_cell_ptr@@Base>
   145ac:	ldr	r0, [r0]
   145b0:	ldr	r0, [r0]
   145b4:	pop	{fp, pc}

000145b8 <table_get_uint@@Base>:
   145b8:	push	{fp, lr}
   145bc:	mov	fp, sp
   145c0:	bl	13060 <table_get_cell_ptr@@Base>
   145c4:	ldr	r0, [r0]
   145c8:	ldr	r0, [r0]
   145cc:	pop	{fp, pc}

000145d0 <table_get_int8@@Base>:
   145d0:	push	{fp, lr}
   145d4:	mov	fp, sp
   145d8:	bl	13060 <table_get_cell_ptr@@Base>
   145dc:	ldr	r0, [r0]
   145e0:	ldrsb	r0, [r0]
   145e4:	pop	{fp, pc}

000145e8 <table_get_uint8@@Base>:
   145e8:	push	{fp, lr}
   145ec:	mov	fp, sp
   145f0:	bl	13060 <table_get_cell_ptr@@Base>
   145f4:	ldr	r0, [r0]
   145f8:	ldrb	r0, [r0]
   145fc:	pop	{fp, pc}

00014600 <table_get_int16@@Base>:
   14600:	push	{fp, lr}
   14604:	mov	fp, sp
   14608:	bl	13060 <table_get_cell_ptr@@Base>
   1460c:	ldr	r0, [r0]
   14610:	ldrsh	r0, [r0]
   14614:	pop	{fp, pc}

00014618 <table_get_uint16@@Base>:
   14618:	push	{fp, lr}
   1461c:	mov	fp, sp
   14620:	bl	13060 <table_get_cell_ptr@@Base>
   14624:	ldr	r0, [r0]
   14628:	ldrh	r0, [r0]
   1462c:	pop	{fp, pc}

00014630 <table_get_int32@@Base>:
   14630:	push	{fp, lr}
   14634:	mov	fp, sp
   14638:	bl	13060 <table_get_cell_ptr@@Base>
   1463c:	ldr	r0, [r0]
   14640:	ldr	r0, [r0]
   14644:	pop	{fp, pc}

00014648 <table_get_uint32@@Base>:
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	bl	13060 <table_get_cell_ptr@@Base>
   14654:	ldr	r0, [r0]
   14658:	ldr	r0, [r0]
   1465c:	pop	{fp, pc}

00014660 <table_get_int64@@Base>:
   14660:	push	{fp, lr}
   14664:	mov	fp, sp
   14668:	bl	13060 <table_get_cell_ptr@@Base>
   1466c:	ldr	r0, [r0]
   14670:	ldrd	r0, [r0]
   14674:	pop	{fp, pc}

00014678 <table_get_uint64@@Base>:
   14678:	push	{fp, lr}
   1467c:	mov	fp, sp
   14680:	bl	13060 <table_get_cell_ptr@@Base>
   14684:	ldr	r0, [r0]
   14688:	ldrd	r0, [r0]
   1468c:	pop	{fp, pc}

00014690 <table_get_short@@Base>:
   14690:	push	{fp, lr}
   14694:	mov	fp, sp
   14698:	bl	13060 <table_get_cell_ptr@@Base>
   1469c:	ldr	r0, [r0]
   146a0:	ldrsh	r0, [r0]
   146a4:	pop	{fp, pc}

000146a8 <table_get_ushort@@Base>:
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	bl	13060 <table_get_cell_ptr@@Base>
   146b4:	ldr	r0, [r0]
   146b8:	ldrh	r0, [r0]
   146bc:	pop	{fp, pc}

000146c0 <table_get_long@@Base>:
   146c0:	push	{fp, lr}
   146c4:	mov	fp, sp
   146c8:	bl	13060 <table_get_cell_ptr@@Base>
   146cc:	ldr	r0, [r0]
   146d0:	ldr	r0, [r0]
   146d4:	pop	{fp, pc}

000146d8 <table_get_ulong@@Base>:
   146d8:	push	{fp, lr}
   146dc:	mov	fp, sp
   146e0:	bl	13060 <table_get_cell_ptr@@Base>
   146e4:	ldr	r0, [r0]
   146e8:	ldr	r0, [r0]
   146ec:	pop	{fp, pc}

000146f0 <table_get_llong@@Base>:
   146f0:	push	{fp, lr}
   146f4:	mov	fp, sp
   146f8:	bl	13060 <table_get_cell_ptr@@Base>
   146fc:	ldr	r0, [r0]
   14700:	ldrd	r0, [r0]
   14704:	pop	{fp, pc}

00014708 <table_get_ullong@@Base>:
   14708:	push	{fp, lr}
   1470c:	mov	fp, sp
   14710:	bl	13060 <table_get_cell_ptr@@Base>
   14714:	ldr	r0, [r0]
   14718:	ldrd	r0, [r0]
   1471c:	pop	{fp, pc}

00014720 <table_get_float@@Base>:
   14720:	push	{fp, lr}
   14724:	mov	fp, sp
   14728:	bl	13060 <table_get_cell_ptr@@Base>
   1472c:	ldr	r0, [r0]
   14730:	vldr	s0, [r0]
   14734:	pop	{fp, pc}

00014738 <table_get_double@@Base>:
   14738:	push	{fp, lr}
   1473c:	mov	fp, sp
   14740:	bl	13060 <table_get_cell_ptr@@Base>
   14744:	ldr	r0, [r0]
   14748:	vldr	d0, [r0]
   1474c:	pop	{fp, pc}

00014750 <table_get_ldouble@@Base>:
   14750:	push	{fp, lr}
   14754:	mov	fp, sp
   14758:	bl	13060 <table_get_cell_ptr@@Base>
   1475c:	ldr	r0, [r0]
   14760:	vldr	d0, [r0]
   14764:	pop	{fp, pc}

00014768 <table_get_char@@Base>:
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	bl	13060 <table_get_cell_ptr@@Base>
   14774:	ldr	r0, [r0]
   14778:	ldrb	r0, [r0]
   1477c:	pop	{fp, pc}

00014780 <table_get_uchar@@Base>:
   14780:	push	{fp, lr}
   14784:	mov	fp, sp
   14788:	bl	13060 <table_get_cell_ptr@@Base>
   1478c:	ldr	r0, [r0]
   14790:	ldrb	r0, [r0]
   14794:	pop	{fp, pc}

00014798 <table_get_string@@Base>:
   14798:	push	{fp, lr}
   1479c:	mov	fp, sp
   147a0:	bl	13060 <table_get_cell_ptr@@Base>
   147a4:	ldr	r0, [r0]
   147a8:	pop	{fp, pc}

000147ac <table_get_ptr@@Base>:
   147ac:	push	{fp, lr}
   147b0:	mov	fp, sp
   147b4:	bl	13060 <table_get_cell_ptr@@Base>
   147b8:	ldr	r0, [r0]
   147bc:	pop	{fp, pc}

000147c0 <table_row_init@@Base>:
   147c0:	push	{r4, r5, fp, lr}
   147c4:	add	fp, sp, #8
   147c8:	mov	r4, r1
   147cc:	ldr	r1, [r0, #12]
   147d0:	ldr	r5, [r0, #16]
   147d4:	lsl	r0, r1, #2
   147d8:	bl	11fdc <malloc@plt>
   147dc:	str	r0, [r5, r4, lsl #2]
   147e0:	pop	{r4, r5, fp, pc}

000147e4 <table_get_row_ptr@@Base>:
   147e4:	ldr	r0, [r0, #16]
   147e8:	add	r0, r0, r1, lsl #2
   147ec:	bx	lr

000147f0 <table_row_destroy@@Base>:
   147f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147f4:	add	fp, sp, #24
   147f8:	mov	r4, r1
   147fc:	mov	r5, r0
   14800:	bl	13af0 <table_get_column_length@@Base>
   14804:	ldr	r8, [r5, #16]
   14808:	cmp	r0, #1
   1480c:	blt	14834 <table_row_destroy@@Base+0x44>
   14810:	mov	r6, r0
   14814:	mov	r7, #0
   14818:	mov	r0, r5
   1481c:	mov	r1, r4
   14820:	mov	r2, r7
   14824:	bl	1307c <table_cell_destroy@@Base>
   14828:	add	r7, r7, #1
   1482c:	cmp	r6, r7
   14830:	bne	14818 <table_row_destroy@@Base+0x28>
   14834:	ldr	r0, [r8, r4, lsl #2]
   14838:	cmp	r0, #0
   1483c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   14840:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14844:	b	11fa0 <free@plt>

00014848 <table_get_row_length@@Base>:
   14848:	ldr	r0, [r0, #20]
   1484c:	bx	lr

00014850 <table_add_row@@Base>:
   14850:	push	{r4, r5, r6, r7, fp, lr}
   14854:	add	fp, sp, #16
   14858:	ldr	r5, [r0, #20]
   1485c:	ldr	r1, [r0, #24]
   14860:	mov	r4, r0
   14864:	udiv	r0, r5, r1
   14868:	mls	r0, r0, r1, r5
   1486c:	cmp	r0, #0
   14870:	bne	14894 <table_add_row@@Base+0x44>
   14874:	ldr	r2, [r4, #28]
   14878:	ldr	r0, [r4, #16]
   1487c:	add	r1, r2, r1
   14880:	str	r1, [r4, #28]
   14884:	lsl	r1, r1, #2
   14888:	bl	11fb8 <realloc@plt>
   1488c:	str	r0, [r4, #16]
   14890:	ldr	r5, [r4, #20]
   14894:	mov	r0, r4
   14898:	bl	13af0 <table_get_column_length@@Base>
   1489c:	mov	r6, r0
   148a0:	ldr	r0, [r4, #12]
   148a4:	ldr	r7, [r4, #16]
   148a8:	lsl	r0, r0, #2
   148ac:	bl	11fdc <malloc@plt>
   148b0:	cmp	r6, #1
   148b4:	str	r0, [r7, r5, lsl #2]
   148b8:	blt	148dc <table_add_row@@Base+0x8c>
   148bc:	mov	r7, #0
   148c0:	mov	r0, r4
   148c4:	mov	r1, r5
   148c8:	mov	r2, r7
   148cc:	bl	13040 <table_cell_init@@Base>
   148d0:	add	r7, r7, #1
   148d4:	cmp	r6, r7
   148d8:	bne	148c0 <table_add_row@@Base+0x70>
   148dc:	ldr	r1, [r4, #20]
   148e0:	mov	r0, r4
   148e4:	mvn	r2, #0
   148e8:	mov	r3, #2
   148ec:	bl	12fc4 <table_notify@@Base>
   148f0:	ldr	r0, [r4, #20]
   148f4:	add	r1, r0, #1
   148f8:	str	r1, [r4, #20]
   148fc:	pop	{r4, r5, r6, r7, fp, pc}

00014900 <table_remove_row@@Base>:
   14900:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14904:	add	fp, sp, #24
   14908:	ldr	r8, [r0, #20]
   1490c:	mov	r4, r1
   14910:	mov	r5, r0
   14914:	bl	13af0 <table_get_column_length@@Base>
   14918:	cmp	r0, #1
   1491c:	blt	14968 <table_remove_row@@Base+0x68>
   14920:	mov	r6, r0
   14924:	mov	r7, #0
   14928:	mov	r0, r5
   1492c:	mov	r1, r7
   14930:	bl	13b70 <table_get_column_data_type@@Base>
   14934:	cmp	r0, #23
   14938:	beq	1495c <table_remove_row@@Base+0x5c>
   1493c:	mov	r0, r5
   14940:	mov	r1, r4
   14944:	mov	r2, r7
   14948:	bl	13060 <table_get_cell_ptr@@Base>
   1494c:	ldr	r0, [r0]
   14950:	cmp	r0, #0
   14954:	beq	1495c <table_remove_row@@Base+0x5c>
   14958:	bl	11fa0 <free@plt>
   1495c:	add	r7, r7, #1
   14960:	cmp	r6, r7
   14964:	bne	14928 <table_remove_row@@Base+0x28>
   14968:	ldr	r0, [r5, #16]
   1496c:	ldr	r0, [r0, r4, lsl #2]
   14970:	cmp	r0, #0
   14974:	beq	1497c <table_remove_row@@Base+0x7c>
   14978:	bl	11fa0 <free@plt>
   1497c:	sub	r0, r8, #1
   14980:	cmp	r0, r4
   14984:	ble	149a8 <table_remove_row@@Base+0xa8>
   14988:	mov	r1, r4
   1498c:	ldr	r2, [r5, #16]
   14990:	add	r3, r2, r1, lsl #2
   14994:	ldr	r3, [r3, #4]
   14998:	str	r3, [r2, r1, lsl #2]
   1499c:	add	r1, r1, #1
   149a0:	cmp	r0, r1
   149a4:	bne	1498c <table_remove_row@@Base+0x8c>
   149a8:	ldr	r0, [r5, #20]
   149ac:	ldr	r1, [r5, #24]
   149b0:	sub	r0, r0, #1
   149b4:	udiv	r2, r0, r1
   149b8:	str	r0, [r5, #20]
   149bc:	mls	r0, r2, r1, r0
   149c0:	cmp	r0, #0
   149c4:	bne	149e4 <table_remove_row@@Base+0xe4>
   149c8:	ldr	r2, [r5, #28]
   149cc:	ldr	r0, [r5, #16]
   149d0:	sub	r1, r2, r1
   149d4:	str	r1, [r5, #28]
   149d8:	lsl	r1, r1, #2
   149dc:	bl	11fb8 <realloc@plt>
   149e0:	str	r0, [r5, #16]
   149e4:	mov	r0, r5
   149e8:	mov	r1, r4
   149ec:	mvn	r2, #0
   149f0:	mov	r3, #4
   149f4:	bl	12fc4 <table_notify@@Base>
   149f8:	mov	r0, #0
   149fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a00 <table_set_row_ptr@@Base>:
   14a00:	ldr	r2, [r2]
   14a04:	ldr	r0, [r0, #16]
   14a08:	str	r2, [r0, r1, lsl #2]
   14a0c:	bx	lr

00014a10 <table_set@@Base>:
   14a10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a14:	add	fp, sp, #24
   14a18:	mov	r8, r3
   14a1c:	mov	r4, r2
   14a20:	mov	r9, r1
   14a24:	mov	r6, r0
   14a28:	bl	13060 <table_get_cell_ptr@@Base>
   14a2c:	mov	r5, r0
   14a30:	mov	r0, r6
   14a34:	mov	r1, r4
   14a38:	bl	13ac8 <table_get_col_ptr@@Base>
   14a3c:	ldr	r1, [fp, #8]
   14a40:	mvn	r7, #0
   14a44:	cmp	r1, #23
   14a48:	bhi	14d0c <table_set@@Base+0x2fc>
   14a4c:	add	r2, pc, #0
   14a50:	ldr	pc, [r2, r1, lsl #2]
   14a54:			; <UNDEFINED> instruction: 0x00014ab4
   14a58:	andeq	r4, r1, r4, asr #21
   14a5c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a60:	andeq	r4, r1, r4, ror #21
   14a64:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a68:	andeq	r4, r1, r4, lsl #22
   14a6c:	andeq	r4, r1, r4, lsl fp
   14a70:	andeq	r4, r1, r4, lsr #22
   14a74:	andeq	r4, r1, r4, lsr fp
   14a78:	andeq	r4, r1, r4, asr #22
   14a7c:	andeq	r4, r1, r4, asr fp
   14a80:	andeq	r4, r1, r4, ror #22
   14a84:	muleq	r1, ip, fp
   14a88:	andeq	r4, r1, ip, lsr #23
   14a8c:			; <UNDEFINED> instruction: 0x00014bbc
   14a90:	andeq	r4, r1, ip, asr #23
   14a94:	ldrdeq	r4, [r1], -ip
   14a98:	andeq	r4, r1, r4, lsl ip
   14a9c:	andeq	r4, r1, r4, lsr #24
   14aa0:	andeq	r4, r1, r4, ror #24
   14aa4:	andeq	r4, r1, r4, ror ip
   14aa8:	andeq	r4, r1, r4, lsl #25
   14aac:	andeq	r4, r1, r0, asr #25
   14ab0:	andeq	r4, r1, r4, lsl sp
   14ab4:	ldr	r0, [r0, #4]
   14ab8:	cmp	r0, #0
   14abc:	bne	14d0c <table_set@@Base+0x2fc>
   14ac0:	b	14be8 <table_set@@Base+0x1d8>
   14ac4:	ldr	r0, [r0, #4]
   14ac8:	cmp	r0, #1
   14acc:	beq	14be8 <table_set@@Base+0x1d8>
   14ad0:	b	14d0c <table_set@@Base+0x2fc>
   14ad4:	ldr	r0, [r0, #4]
   14ad8:	cmp	r0, #2
   14adc:	beq	14ccc <table_set@@Base+0x2bc>
   14ae0:	b	14d0c <table_set@@Base+0x2fc>
   14ae4:	ldr	r0, [r0, #4]
   14ae8:	cmp	r0, #3
   14aec:	beq	14ccc <table_set@@Base+0x2bc>
   14af0:	b	14d0c <table_set@@Base+0x2fc>
   14af4:	ldr	r0, [r0, #4]
   14af8:	cmp	r0, #4
   14afc:	beq	14b70 <table_set@@Base+0x160>
   14b00:	b	14d0c <table_set@@Base+0x2fc>
   14b04:	ldr	r0, [r0, #4]
   14b08:	cmp	r0, #5
   14b0c:	beq	14b70 <table_set@@Base+0x160>
   14b10:	b	14d0c <table_set@@Base+0x2fc>
   14b14:	ldr	r0, [r0, #4]
   14b18:	cmp	r0, #6
   14b1c:	beq	14be8 <table_set@@Base+0x1d8>
   14b20:	b	14d0c <table_set@@Base+0x2fc>
   14b24:	ldr	r0, [r0, #4]
   14b28:	cmp	r0, #7
   14b2c:	beq	14be8 <table_set@@Base+0x1d8>
   14b30:	b	14d0c <table_set@@Base+0x2fc>
   14b34:	ldr	r0, [r0, #4]
   14b38:	cmp	r0, #8
   14b3c:	beq	14c30 <table_set@@Base+0x220>
   14b40:	b	14d0c <table_set@@Base+0x2fc>
   14b44:	ldr	r0, [r0, #4]
   14b48:	cmp	r0, #9
   14b4c:	beq	14c30 <table_set@@Base+0x220>
   14b50:	b	14d0c <table_set@@Base+0x2fc>
   14b54:	ldr	r0, [r0, #4]
   14b58:	cmp	r0, #10
   14b5c:	beq	14b70 <table_set@@Base+0x160>
   14b60:	b	14d0c <table_set@@Base+0x2fc>
   14b64:	ldr	r0, [r0, #4]
   14b68:	cmp	r0, #11
   14b6c:	bne	14d0c <table_set@@Base+0x2fc>
   14b70:	ldr	r0, [r5]
   14b74:	cmp	r0, #0
   14b78:	bne	14b90 <table_set@@Base+0x180>
   14b7c:	mov	r0, #2
   14b80:	bl	11fdc <malloc@plt>
   14b84:	cmp	r0, #0
   14b88:	str	r0, [r5]
   14b8c:	beq	14d0c <table_set@@Base+0x2fc>
   14b90:	ldrh	r1, [r8]
   14b94:	strh	r1, [r0]
   14b98:	b	14cf4 <table_set@@Base+0x2e4>
   14b9c:	ldr	r0, [r0, #4]
   14ba0:	cmp	r0, #12
   14ba4:	beq	14be8 <table_set@@Base+0x1d8>
   14ba8:	b	14d0c <table_set@@Base+0x2fc>
   14bac:	ldr	r0, [r0, #4]
   14bb0:	cmp	r0, #13
   14bb4:	beq	14be8 <table_set@@Base+0x1d8>
   14bb8:	b	14d0c <table_set@@Base+0x2fc>
   14bbc:	ldr	r0, [r0, #4]
   14bc0:	cmp	r0, #14
   14bc4:	beq	14c30 <table_set@@Base+0x220>
   14bc8:	b	14d0c <table_set@@Base+0x2fc>
   14bcc:	ldr	r0, [r0, #4]
   14bd0:	cmp	r0, #15
   14bd4:	beq	14c30 <table_set@@Base+0x220>
   14bd8:	b	14d0c <table_set@@Base+0x2fc>
   14bdc:	ldr	r0, [r0, #4]
   14be0:	cmp	r0, #16
   14be4:	bne	14d0c <table_set@@Base+0x2fc>
   14be8:	ldr	r0, [r5]
   14bec:	cmp	r0, #0
   14bf0:	bne	14c08 <table_set@@Base+0x1f8>
   14bf4:	mov	r0, #4
   14bf8:	bl	11fdc <malloc@plt>
   14bfc:	cmp	r0, #0
   14c00:	str	r0, [r5]
   14c04:	beq	14d0c <table_set@@Base+0x2fc>
   14c08:	ldr	r1, [r8]
   14c0c:	str	r1, [r0]
   14c10:	b	14cf4 <table_set@@Base+0x2e4>
   14c14:	ldr	r0, [r0, #4]
   14c18:	cmp	r0, #17
   14c1c:	beq	14c30 <table_set@@Base+0x220>
   14c20:	b	14d0c <table_set@@Base+0x2fc>
   14c24:	ldr	r0, [r0, #4]
   14c28:	cmp	r0, #18
   14c2c:	bne	14d0c <table_set@@Base+0x2fc>
   14c30:	ldr	r0, [r5]
   14c34:	cmp	r0, #0
   14c38:	bne	14c50 <table_set@@Base+0x240>
   14c3c:	mov	r0, #8
   14c40:	bl	11fdc <malloc@plt>
   14c44:	cmp	r0, #0
   14c48:	str	r0, [r5]
   14c4c:	beq	14d0c <table_set@@Base+0x2fc>
   14c50:	ldr	r1, [r8]
   14c54:	ldr	r2, [r8, #4]
   14c58:	str	r2, [r0, #4]
   14c5c:	str	r1, [r0]
   14c60:	b	14cf4 <table_set@@Base+0x2e4>
   14c64:	ldr	r0, [r0, #4]
   14c68:	cmp	r0, #19
   14c6c:	beq	14ccc <table_set@@Base+0x2bc>
   14c70:	b	14d0c <table_set@@Base+0x2fc>
   14c74:	ldr	r0, [r0, #4]
   14c78:	cmp	r0, #20
   14c7c:	beq	14ccc <table_set@@Base+0x2bc>
   14c80:	b	14d0c <table_set@@Base+0x2fc>
   14c84:	ldr	r0, [r0, #4]
   14c88:	cmp	r0, #21
   14c8c:	bne	14d0c <table_set@@Base+0x2fc>
   14c90:	mov	r0, r8
   14c94:	bl	12000 <strlen@plt>
   14c98:	ldr	r2, [r5]
   14c9c:	add	r1, r0, #1
   14ca0:	mov	r0, r2
   14ca4:	bl	11fb8 <realloc@plt>
   14ca8:	cmp	r0, #0
   14cac:	str	r0, [r5]
   14cb0:	beq	14d0c <table_set@@Base+0x2fc>
   14cb4:	mov	r1, r8
   14cb8:	bl	11fc4 <strcpy@plt>
   14cbc:	b	14cf4 <table_set@@Base+0x2e4>
   14cc0:	ldr	r0, [r0, #4]
   14cc4:	cmp	r0, #22
   14cc8:	bne	14d0c <table_set@@Base+0x2fc>
   14ccc:	ldr	r0, [r5]
   14cd0:	cmp	r0, #0
   14cd4:	bne	14cec <table_set@@Base+0x2dc>
   14cd8:	mov	r0, #1
   14cdc:	bl	11fdc <malloc@plt>
   14ce0:	cmp	r0, #0
   14ce4:	str	r0, [r5]
   14ce8:	beq	14d0c <table_set@@Base+0x2fc>
   14cec:	ldrb	r1, [r8]
   14cf0:	strb	r1, [r0]
   14cf4:	mov	r0, r6
   14cf8:	mov	r1, r9
   14cfc:	mov	r2, r4
   14d00:	mov	r3, #1
   14d04:	bl	12fc4 <table_notify@@Base>
   14d08:	mov	r7, #0
   14d0c:	mov	r0, r7
   14d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d14:	ldr	r0, [r0, #4]
   14d18:	cmp	r0, #23
   14d1c:	bne	14d0c <table_set@@Base+0x2fc>
   14d20:	str	r8, [r5]
   14d24:	b	14cf4 <table_set@@Base+0x2e4>

00014d28 <table_set_bool@@Base>:
   14d28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d2c:	add	fp, sp, #24
   14d30:	mov	r8, r3
   14d34:	mov	r4, r2
   14d38:	mov	r9, r1
   14d3c:	mov	r6, r0
   14d40:	bl	13060 <table_get_cell_ptr@@Base>
   14d44:	mov	r5, r0
   14d48:	mov	r0, r6
   14d4c:	mov	r1, r4
   14d50:	bl	13ac8 <table_get_col_ptr@@Base>
   14d54:	ldr	r0, [r0, #4]
   14d58:	mvn	r7, #0
   14d5c:	cmp	r0, #22
   14d60:	bne	14da0 <table_set_bool@@Base+0x78>
   14d64:	ldr	r0, [r5]
   14d68:	cmp	r0, #0
   14d6c:	bne	14d84 <table_set_bool@@Base+0x5c>
   14d70:	mov	r0, #1
   14d74:	bl	11fdc <malloc@plt>
   14d78:	cmp	r0, #0
   14d7c:	str	r0, [r5]
   14d80:	beq	14da0 <table_set_bool@@Base+0x78>
   14d84:	strb	r8, [r0]
   14d88:	mov	r0, r6
   14d8c:	mov	r1, r9
   14d90:	mov	r2, r4
   14d94:	mov	r3, #1
   14d98:	bl	12fc4 <table_notify@@Base>
   14d9c:	mov	r7, #0
   14da0:	mov	r0, r7
   14da4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014da8 <table_set_int@@Base>:
   14da8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14dac:	add	fp, sp, #24
   14db0:	mov	r8, r3
   14db4:	mov	r4, r2
   14db8:	mov	r5, r1
   14dbc:	mov	r6, r0
   14dc0:	bl	13060 <table_get_cell_ptr@@Base>
   14dc4:	mov	r9, r0
   14dc8:	mov	r0, r6
   14dcc:	mov	r1, r4
   14dd0:	bl	13ac8 <table_get_col_ptr@@Base>
   14dd4:	ldr	r0, [r0, #4]
   14dd8:	mvn	r7, #0
   14ddc:	cmp	r0, #0
   14de0:	bne	14e20 <table_set_int@@Base+0x78>
   14de4:	ldr	r0, [r9]
   14de8:	cmp	r0, #0
   14dec:	bne	14e04 <table_set_int@@Base+0x5c>
   14df0:	mov	r0, #4
   14df4:	bl	11fdc <malloc@plt>
   14df8:	cmp	r0, #0
   14dfc:	str	r0, [r9]
   14e00:	beq	14e20 <table_set_int@@Base+0x78>
   14e04:	str	r8, [r0]
   14e08:	mov	r0, r6
   14e0c:	mov	r1, r5
   14e10:	mov	r2, r4
   14e14:	mov	r3, #1
   14e18:	bl	12fc4 <table_notify@@Base>
   14e1c:	mov	r7, #0
   14e20:	mov	r0, r7
   14e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e28 <table_set_uint@@Base>:
   14e28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e2c:	add	fp, sp, #24
   14e30:	mov	r8, r3
   14e34:	mov	r4, r2
   14e38:	mov	r5, r1
   14e3c:	mov	r6, r0
   14e40:	bl	13060 <table_get_cell_ptr@@Base>
   14e44:	mov	r9, r0
   14e48:	mov	r0, r6
   14e4c:	mov	r1, r4
   14e50:	bl	13ac8 <table_get_col_ptr@@Base>
   14e54:	ldr	r0, [r0, #4]
   14e58:	mvn	r7, #0
   14e5c:	cmp	r0, #1
   14e60:	bne	14ea0 <table_set_uint@@Base+0x78>
   14e64:	ldr	r0, [r9]
   14e68:	cmp	r0, #0
   14e6c:	bne	14e84 <table_set_uint@@Base+0x5c>
   14e70:	mov	r0, #4
   14e74:	bl	11fdc <malloc@plt>
   14e78:	cmp	r0, #0
   14e7c:	str	r0, [r9]
   14e80:	beq	14ea0 <table_set_uint@@Base+0x78>
   14e84:	str	r8, [r0]
   14e88:	mov	r0, r6
   14e8c:	mov	r1, r5
   14e90:	mov	r2, r4
   14e94:	mov	r3, #1
   14e98:	bl	12fc4 <table_notify@@Base>
   14e9c:	mov	r7, #0
   14ea0:	mov	r0, r7
   14ea4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ea8 <table_set_int8@@Base>:
   14ea8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14eac:	add	fp, sp, #24
   14eb0:	mov	r8, r3
   14eb4:	mov	r4, r2
   14eb8:	mov	r9, r1
   14ebc:	mov	r6, r0
   14ec0:	bl	13060 <table_get_cell_ptr@@Base>
   14ec4:	mov	r5, r0
   14ec8:	mov	r0, r6
   14ecc:	mov	r1, r4
   14ed0:	bl	13ac8 <table_get_col_ptr@@Base>
   14ed4:	ldr	r0, [r0, #4]
   14ed8:	mvn	r7, #0
   14edc:	cmp	r0, #2
   14ee0:	bne	14f20 <table_set_int8@@Base+0x78>
   14ee4:	ldr	r0, [r5]
   14ee8:	cmp	r0, #0
   14eec:	bne	14f04 <table_set_int8@@Base+0x5c>
   14ef0:	mov	r0, #1
   14ef4:	bl	11fdc <malloc@plt>
   14ef8:	cmp	r0, #0
   14efc:	str	r0, [r5]
   14f00:	beq	14f20 <table_set_int8@@Base+0x78>
   14f04:	strb	r8, [r0]
   14f08:	mov	r0, r6
   14f0c:	mov	r1, r9
   14f10:	mov	r2, r4
   14f14:	mov	r3, #1
   14f18:	bl	12fc4 <table_notify@@Base>
   14f1c:	mov	r7, #0
   14f20:	mov	r0, r7
   14f24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f28 <table_set_uint8@@Base>:
   14f28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f2c:	add	fp, sp, #24
   14f30:	mov	r8, r3
   14f34:	mov	r4, r2
   14f38:	mov	r9, r1
   14f3c:	mov	r6, r0
   14f40:	bl	13060 <table_get_cell_ptr@@Base>
   14f44:	mov	r5, r0
   14f48:	mov	r0, r6
   14f4c:	mov	r1, r4
   14f50:	bl	13ac8 <table_get_col_ptr@@Base>
   14f54:	ldr	r0, [r0, #4]
   14f58:	mvn	r7, #0
   14f5c:	cmp	r0, #3
   14f60:	bne	14fa0 <table_set_uint8@@Base+0x78>
   14f64:	ldr	r0, [r5]
   14f68:	cmp	r0, #0
   14f6c:	bne	14f84 <table_set_uint8@@Base+0x5c>
   14f70:	mov	r0, #1
   14f74:	bl	11fdc <malloc@plt>
   14f78:	cmp	r0, #0
   14f7c:	str	r0, [r5]
   14f80:	beq	14fa0 <table_set_uint8@@Base+0x78>
   14f84:	strb	r8, [r0]
   14f88:	mov	r0, r6
   14f8c:	mov	r1, r9
   14f90:	mov	r2, r4
   14f94:	mov	r3, #1
   14f98:	bl	12fc4 <table_notify@@Base>
   14f9c:	mov	r7, #0
   14fa0:	mov	r0, r7
   14fa4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014fa8 <table_set_int16@@Base>:
   14fa8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fac:	add	fp, sp, #24
   14fb0:	mov	r8, r3
   14fb4:	mov	r4, r2
   14fb8:	mov	r9, r1
   14fbc:	mov	r6, r0
   14fc0:	bl	13060 <table_get_cell_ptr@@Base>
   14fc4:	mov	r5, r0
   14fc8:	mov	r0, r6
   14fcc:	mov	r1, r4
   14fd0:	bl	13ac8 <table_get_col_ptr@@Base>
   14fd4:	ldr	r0, [r0, #4]
   14fd8:	mvn	r7, #0
   14fdc:	cmp	r0, #4
   14fe0:	bne	15020 <table_set_int16@@Base+0x78>
   14fe4:	ldr	r0, [r5]
   14fe8:	cmp	r0, #0
   14fec:	bne	15004 <table_set_int16@@Base+0x5c>
   14ff0:	mov	r0, #2
   14ff4:	bl	11fdc <malloc@plt>
   14ff8:	cmp	r0, #0
   14ffc:	str	r0, [r5]
   15000:	beq	15020 <table_set_int16@@Base+0x78>
   15004:	strh	r8, [r0]
   15008:	mov	r0, r6
   1500c:	mov	r1, r9
   15010:	mov	r2, r4
   15014:	mov	r3, #1
   15018:	bl	12fc4 <table_notify@@Base>
   1501c:	mov	r7, #0
   15020:	mov	r0, r7
   15024:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015028 <table_set_uint16@@Base>:
   15028:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1502c:	add	fp, sp, #24
   15030:	mov	r8, r3
   15034:	mov	r4, r2
   15038:	mov	r9, r1
   1503c:	mov	r6, r0
   15040:	bl	13060 <table_get_cell_ptr@@Base>
   15044:	mov	r5, r0
   15048:	mov	r0, r6
   1504c:	mov	r1, r4
   15050:	bl	13ac8 <table_get_col_ptr@@Base>
   15054:	ldr	r0, [r0, #4]
   15058:	mvn	r7, #0
   1505c:	cmp	r0, #5
   15060:	bne	150a0 <table_set_uint16@@Base+0x78>
   15064:	ldr	r0, [r5]
   15068:	cmp	r0, #0
   1506c:	bne	15084 <table_set_uint16@@Base+0x5c>
   15070:	mov	r0, #2
   15074:	bl	11fdc <malloc@plt>
   15078:	cmp	r0, #0
   1507c:	str	r0, [r5]
   15080:	beq	150a0 <table_set_uint16@@Base+0x78>
   15084:	strh	r8, [r0]
   15088:	mov	r0, r6
   1508c:	mov	r1, r9
   15090:	mov	r2, r4
   15094:	mov	r3, #1
   15098:	bl	12fc4 <table_notify@@Base>
   1509c:	mov	r7, #0
   150a0:	mov	r0, r7
   150a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000150a8 <table_set_int32@@Base>:
   150a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   150ac:	add	fp, sp, #24
   150b0:	mov	r8, r3
   150b4:	mov	r4, r2
   150b8:	mov	r5, r1
   150bc:	mov	r6, r0
   150c0:	bl	13060 <table_get_cell_ptr@@Base>
   150c4:	mov	r9, r0
   150c8:	mov	r0, r6
   150cc:	mov	r1, r4
   150d0:	bl	13ac8 <table_get_col_ptr@@Base>
   150d4:	ldr	r0, [r0, #4]
   150d8:	mvn	r7, #0
   150dc:	cmp	r0, #6
   150e0:	bne	15120 <table_set_int32@@Base+0x78>
   150e4:	ldr	r0, [r9]
   150e8:	cmp	r0, #0
   150ec:	bne	15104 <table_set_int32@@Base+0x5c>
   150f0:	mov	r0, #4
   150f4:	bl	11fdc <malloc@plt>
   150f8:	cmp	r0, #0
   150fc:	str	r0, [r9]
   15100:	beq	15120 <table_set_int32@@Base+0x78>
   15104:	str	r8, [r0]
   15108:	mov	r0, r6
   1510c:	mov	r1, r5
   15110:	mov	r2, r4
   15114:	mov	r3, #1
   15118:	bl	12fc4 <table_notify@@Base>
   1511c:	mov	r7, #0
   15120:	mov	r0, r7
   15124:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015128 <table_set_uint32@@Base>:
   15128:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1512c:	add	fp, sp, #24
   15130:	mov	r8, r3
   15134:	mov	r4, r2
   15138:	mov	r5, r1
   1513c:	mov	r6, r0
   15140:	bl	13060 <table_get_cell_ptr@@Base>
   15144:	mov	r9, r0
   15148:	mov	r0, r6
   1514c:	mov	r1, r4
   15150:	bl	13ac8 <table_get_col_ptr@@Base>
   15154:	ldr	r0, [r0, #4]
   15158:	mvn	r7, #0
   1515c:	cmp	r0, #7
   15160:	bne	151a0 <table_set_uint32@@Base+0x78>
   15164:	ldr	r0, [r9]
   15168:	cmp	r0, #0
   1516c:	bne	15184 <table_set_uint32@@Base+0x5c>
   15170:	mov	r0, #4
   15174:	bl	11fdc <malloc@plt>
   15178:	cmp	r0, #0
   1517c:	str	r0, [r9]
   15180:	beq	151a0 <table_set_uint32@@Base+0x78>
   15184:	str	r8, [r0]
   15188:	mov	r0, r6
   1518c:	mov	r1, r5
   15190:	mov	r2, r4
   15194:	mov	r3, #1
   15198:	bl	12fc4 <table_notify@@Base>
   1519c:	mov	r7, #0
   151a0:	mov	r0, r7
   151a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000151a8 <table_set_int64@@Base>:
   151a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   151ac:	add	fp, sp, #24
   151b0:	mov	r4, r2
   151b4:	mov	r8, r1
   151b8:	mov	r6, r0
   151bc:	bl	13060 <table_get_cell_ptr@@Base>
   151c0:	mov	r5, r0
   151c4:	mov	r0, r6
   151c8:	mov	r1, r4
   151cc:	bl	13ac8 <table_get_col_ptr@@Base>
   151d0:	ldr	r0, [r0, #4]
   151d4:	mvn	r7, #0
   151d8:	cmp	r0, #8
   151dc:	bne	15228 <table_set_int64@@Base+0x80>
   151e0:	ldr	r0, [r5]
   151e4:	cmp	r0, #0
   151e8:	bne	15200 <table_set_int64@@Base+0x58>
   151ec:	mov	r0, #8
   151f0:	bl	11fdc <malloc@plt>
   151f4:	cmp	r0, #0
   151f8:	str	r0, [r5]
   151fc:	beq	15228 <table_set_int64@@Base+0x80>
   15200:	ldr	r1, [fp, #12]
   15204:	ldr	r2, [fp, #8]
   15208:	mov	r3, #1
   1520c:	str	r2, [r0]
   15210:	str	r1, [r0, #4]
   15214:	mov	r0, r6
   15218:	mov	r1, r8
   1521c:	mov	r2, r4
   15220:	bl	12fc4 <table_notify@@Base>
   15224:	mov	r7, #0
   15228:	mov	r0, r7
   1522c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015230 <table_set_uint64@@Base>:
   15230:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15234:	add	fp, sp, #24
   15238:	mov	r4, r2
   1523c:	mov	r8, r1
   15240:	mov	r6, r0
   15244:	bl	13060 <table_get_cell_ptr@@Base>
   15248:	mov	r5, r0
   1524c:	mov	r0, r6
   15250:	mov	r1, r4
   15254:	bl	13ac8 <table_get_col_ptr@@Base>
   15258:	ldr	r0, [r0, #4]
   1525c:	mvn	r7, #0
   15260:	cmp	r0, #9
   15264:	bne	152b0 <table_set_uint64@@Base+0x80>
   15268:	ldr	r0, [r5]
   1526c:	cmp	r0, #0
   15270:	bne	15288 <table_set_uint64@@Base+0x58>
   15274:	mov	r0, #8
   15278:	bl	11fdc <malloc@plt>
   1527c:	cmp	r0, #0
   15280:	str	r0, [r5]
   15284:	beq	152b0 <table_set_uint64@@Base+0x80>
   15288:	ldr	r1, [fp, #12]
   1528c:	ldr	r2, [fp, #8]
   15290:	mov	r3, #1
   15294:	str	r2, [r0]
   15298:	str	r1, [r0, #4]
   1529c:	mov	r0, r6
   152a0:	mov	r1, r8
   152a4:	mov	r2, r4
   152a8:	bl	12fc4 <table_notify@@Base>
   152ac:	mov	r7, #0
   152b0:	mov	r0, r7
   152b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000152b8 <table_set_short@@Base>:
   152b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   152bc:	add	fp, sp, #24
   152c0:	mov	r8, r3
   152c4:	mov	r4, r2
   152c8:	mov	r9, r1
   152cc:	mov	r6, r0
   152d0:	bl	13060 <table_get_cell_ptr@@Base>
   152d4:	mov	r5, r0
   152d8:	mov	r0, r6
   152dc:	mov	r1, r4
   152e0:	bl	13ac8 <table_get_col_ptr@@Base>
   152e4:	ldr	r0, [r0, #4]
   152e8:	mvn	r7, #0
   152ec:	cmp	r0, #10
   152f0:	bne	15330 <table_set_short@@Base+0x78>
   152f4:	ldr	r0, [r5]
   152f8:	cmp	r0, #0
   152fc:	bne	15314 <table_set_short@@Base+0x5c>
   15300:	mov	r0, #2
   15304:	bl	11fdc <malloc@plt>
   15308:	cmp	r0, #0
   1530c:	str	r0, [r5]
   15310:	beq	15330 <table_set_short@@Base+0x78>
   15314:	strh	r8, [r0]
   15318:	mov	r0, r6
   1531c:	mov	r1, r9
   15320:	mov	r2, r4
   15324:	mov	r3, #1
   15328:	bl	12fc4 <table_notify@@Base>
   1532c:	mov	r7, #0
   15330:	mov	r0, r7
   15334:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015338 <table_set_ushort@@Base>:
   15338:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1533c:	add	fp, sp, #24
   15340:	mov	r8, r3
   15344:	mov	r4, r2
   15348:	mov	r9, r1
   1534c:	mov	r6, r0
   15350:	bl	13060 <table_get_cell_ptr@@Base>
   15354:	mov	r5, r0
   15358:	mov	r0, r6
   1535c:	mov	r1, r4
   15360:	bl	13ac8 <table_get_col_ptr@@Base>
   15364:	ldr	r0, [r0, #4]
   15368:	mvn	r7, #0
   1536c:	cmp	r0, #11
   15370:	bne	153b0 <table_set_ushort@@Base+0x78>
   15374:	ldr	r0, [r5]
   15378:	cmp	r0, #0
   1537c:	bne	15394 <table_set_ushort@@Base+0x5c>
   15380:	mov	r0, #2
   15384:	bl	11fdc <malloc@plt>
   15388:	cmp	r0, #0
   1538c:	str	r0, [r5]
   15390:	beq	153b0 <table_set_ushort@@Base+0x78>
   15394:	strh	r8, [r0]
   15398:	mov	r0, r6
   1539c:	mov	r1, r9
   153a0:	mov	r2, r4
   153a4:	mov	r3, #1
   153a8:	bl	12fc4 <table_notify@@Base>
   153ac:	mov	r7, #0
   153b0:	mov	r0, r7
   153b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000153b8 <table_set_long@@Base>:
   153b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   153bc:	add	fp, sp, #24
   153c0:	mov	r8, r3
   153c4:	mov	r4, r2
   153c8:	mov	r5, r1
   153cc:	mov	r6, r0
   153d0:	bl	13060 <table_get_cell_ptr@@Base>
   153d4:	mov	r9, r0
   153d8:	mov	r0, r6
   153dc:	mov	r1, r4
   153e0:	bl	13ac8 <table_get_col_ptr@@Base>
   153e4:	ldr	r0, [r0, #4]
   153e8:	mvn	r7, #0
   153ec:	cmp	r0, #12
   153f0:	bne	15430 <table_set_long@@Base+0x78>
   153f4:	ldr	r0, [r9]
   153f8:	cmp	r0, #0
   153fc:	bne	15414 <table_set_long@@Base+0x5c>
   15400:	mov	r0, #4
   15404:	bl	11fdc <malloc@plt>
   15408:	cmp	r0, #0
   1540c:	str	r0, [r9]
   15410:	beq	15430 <table_set_long@@Base+0x78>
   15414:	str	r8, [r0]
   15418:	mov	r0, r6
   1541c:	mov	r1, r5
   15420:	mov	r2, r4
   15424:	mov	r3, #1
   15428:	bl	12fc4 <table_notify@@Base>
   1542c:	mov	r7, #0
   15430:	mov	r0, r7
   15434:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015438 <table_set_ulong@@Base>:
   15438:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1543c:	add	fp, sp, #24
   15440:	mov	r8, r3
   15444:	mov	r4, r2
   15448:	mov	r5, r1
   1544c:	mov	r6, r0
   15450:	bl	13060 <table_get_cell_ptr@@Base>
   15454:	mov	r9, r0
   15458:	mov	r0, r6
   1545c:	mov	r1, r4
   15460:	bl	13ac8 <table_get_col_ptr@@Base>
   15464:	ldr	r0, [r0, #4]
   15468:	mvn	r7, #0
   1546c:	cmp	r0, #13
   15470:	bne	154b0 <table_set_ulong@@Base+0x78>
   15474:	ldr	r0, [r9]
   15478:	cmp	r0, #0
   1547c:	bne	15494 <table_set_ulong@@Base+0x5c>
   15480:	mov	r0, #4
   15484:	bl	11fdc <malloc@plt>
   15488:	cmp	r0, #0
   1548c:	str	r0, [r9]
   15490:	beq	154b0 <table_set_ulong@@Base+0x78>
   15494:	str	r8, [r0]
   15498:	mov	r0, r6
   1549c:	mov	r1, r5
   154a0:	mov	r2, r4
   154a4:	mov	r3, #1
   154a8:	bl	12fc4 <table_notify@@Base>
   154ac:	mov	r7, #0
   154b0:	mov	r0, r7
   154b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000154b8 <table_set_llong@@Base>:
   154b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154bc:	add	fp, sp, #24
   154c0:	mov	r4, r2
   154c4:	mov	r8, r1
   154c8:	mov	r6, r0
   154cc:	bl	13060 <table_get_cell_ptr@@Base>
   154d0:	mov	r5, r0
   154d4:	mov	r0, r6
   154d8:	mov	r1, r4
   154dc:	bl	13ac8 <table_get_col_ptr@@Base>
   154e0:	ldr	r0, [r0, #4]
   154e4:	mvn	r7, #0
   154e8:	cmp	r0, #14
   154ec:	bne	15538 <table_set_llong@@Base+0x80>
   154f0:	ldr	r0, [r5]
   154f4:	cmp	r0, #0
   154f8:	bne	15510 <table_set_llong@@Base+0x58>
   154fc:	mov	r0, #8
   15500:	bl	11fdc <malloc@plt>
   15504:	cmp	r0, #0
   15508:	str	r0, [r5]
   1550c:	beq	15538 <table_set_llong@@Base+0x80>
   15510:	ldr	r1, [fp, #12]
   15514:	ldr	r2, [fp, #8]
   15518:	mov	r3, #1
   1551c:	str	r2, [r0]
   15520:	str	r1, [r0, #4]
   15524:	mov	r0, r6
   15528:	mov	r1, r8
   1552c:	mov	r2, r4
   15530:	bl	12fc4 <table_notify@@Base>
   15534:	mov	r7, #0
   15538:	mov	r0, r7
   1553c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015540 <table_set_ullong@@Base>:
   15540:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15544:	add	fp, sp, #24
   15548:	mov	r4, r2
   1554c:	mov	r8, r1
   15550:	mov	r6, r0
   15554:	bl	13060 <table_get_cell_ptr@@Base>
   15558:	mov	r5, r0
   1555c:	mov	r0, r6
   15560:	mov	r1, r4
   15564:	bl	13ac8 <table_get_col_ptr@@Base>
   15568:	ldr	r0, [r0, #4]
   1556c:	mvn	r7, #0
   15570:	cmp	r0, #15
   15574:	bne	155c0 <table_set_ullong@@Base+0x80>
   15578:	ldr	r0, [r5]
   1557c:	cmp	r0, #0
   15580:	bne	15598 <table_set_ullong@@Base+0x58>
   15584:	mov	r0, #8
   15588:	bl	11fdc <malloc@plt>
   1558c:	cmp	r0, #0
   15590:	str	r0, [r5]
   15594:	beq	155c0 <table_set_ullong@@Base+0x80>
   15598:	ldr	r1, [fp, #12]
   1559c:	ldr	r2, [fp, #8]
   155a0:	mov	r3, #1
   155a4:	str	r2, [r0]
   155a8:	str	r1, [r0, #4]
   155ac:	mov	r0, r6
   155b0:	mov	r1, r8
   155b4:	mov	r2, r4
   155b8:	bl	12fc4 <table_notify@@Base>
   155bc:	mov	r7, #0
   155c0:	mov	r0, r7
   155c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000155c8 <table_set_float@@Base>:
   155c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155cc:	add	fp, sp, #24
   155d0:	vpush	{d8}
   155d4:	vmov.f32	s16, s0
   155d8:	mov	r4, r2
   155dc:	mov	r8, r1
   155e0:	mov	r6, r0
   155e4:	bl	13060 <table_get_cell_ptr@@Base>
   155e8:	mov	r5, r0
   155ec:	mov	r0, r6
   155f0:	mov	r1, r4
   155f4:	bl	13ac8 <table_get_col_ptr@@Base>
   155f8:	ldr	r0, [r0, #4]
   155fc:	mvn	r7, #0
   15600:	cmp	r0, #16
   15604:	bne	15648 <table_set_float@@Base+0x80>
   15608:	ldr	r0, [r5]
   1560c:	cmp	r0, #0
   15610:	bne	15628 <table_set_float@@Base+0x60>
   15614:	mov	r0, #4
   15618:	bl	11fdc <malloc@plt>
   1561c:	cmp	r0, #0
   15620:	str	r0, [r5]
   15624:	beq	15648 <table_set_float@@Base+0x80>
   15628:	vmov	r1, s16
   1562c:	mov	r2, r4
   15630:	mov	r3, #1
   15634:	str	r1, [r0]
   15638:	mov	r0, r6
   1563c:	mov	r1, r8
   15640:	bl	12fc4 <table_notify@@Base>
   15644:	mov	r7, #0
   15648:	mov	r0, r7
   1564c:	vpop	{d8}
   15650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015654 <table_set_double@@Base>:
   15654:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15658:	add	fp, sp, #24
   1565c:	vpush	{d8}
   15660:	vorr	d8, d0, d0
   15664:	mov	r4, r2
   15668:	mov	r5, r1
   1566c:	mov	r6, r0
   15670:	bl	13060 <table_get_cell_ptr@@Base>
   15674:	mov	r8, r0
   15678:	mov	r0, r6
   1567c:	mov	r1, r4
   15680:	bl	13ac8 <table_get_col_ptr@@Base>
   15684:	ldr	r0, [r0, #4]
   15688:	mvn	r7, #0
   1568c:	cmp	r0, #17
   15690:	bne	156d0 <table_set_double@@Base+0x7c>
   15694:	ldr	r0, [r8]
   15698:	cmp	r0, #0
   1569c:	bne	156b4 <table_set_double@@Base+0x60>
   156a0:	mov	r0, #8
   156a4:	bl	11fdc <malloc@plt>
   156a8:	cmp	r0, #0
   156ac:	str	r0, [r8]
   156b0:	beq	156d0 <table_set_double@@Base+0x7c>
   156b4:	vst1.8	{d8}, [r0]
   156b8:	mov	r0, r6
   156bc:	mov	r1, r5
   156c0:	mov	r2, r4
   156c4:	mov	r3, #1
   156c8:	bl	12fc4 <table_notify@@Base>
   156cc:	mov	r7, #0
   156d0:	mov	r0, r7
   156d4:	vpop	{d8}
   156d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000156dc <table_set_ldouble@@Base>:
   156dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   156e0:	add	fp, sp, #24
   156e4:	vpush	{d8}
   156e8:	vorr	d8, d0, d0
   156ec:	mov	r4, r2
   156f0:	mov	r5, r1
   156f4:	mov	r6, r0
   156f8:	bl	13060 <table_get_cell_ptr@@Base>
   156fc:	mov	r8, r0
   15700:	mov	r0, r6
   15704:	mov	r1, r4
   15708:	bl	13ac8 <table_get_col_ptr@@Base>
   1570c:	ldr	r0, [r0, #4]
   15710:	mvn	r7, #0
   15714:	cmp	r0, #18
   15718:	bne	15758 <table_set_ldouble@@Base+0x7c>
   1571c:	ldr	r0, [r8]
   15720:	cmp	r0, #0
   15724:	bne	1573c <table_set_ldouble@@Base+0x60>
   15728:	mov	r0, #8
   1572c:	bl	11fdc <malloc@plt>
   15730:	cmp	r0, #0
   15734:	str	r0, [r8]
   15738:	beq	15758 <table_set_ldouble@@Base+0x7c>
   1573c:	vst1.8	{d8}, [r0]
   15740:	mov	r0, r6
   15744:	mov	r1, r5
   15748:	mov	r2, r4
   1574c:	mov	r3, #1
   15750:	bl	12fc4 <table_notify@@Base>
   15754:	mov	r7, #0
   15758:	mov	r0, r7
   1575c:	vpop	{d8}
   15760:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015764 <table_set_string@@Base>:
   15764:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15768:	add	fp, sp, #24
   1576c:	mov	r8, r3
   15770:	mov	r4, r2
   15774:	mov	r9, r1
   15778:	mov	r6, r0
   1577c:	bl	13060 <table_get_cell_ptr@@Base>
   15780:	mov	r5, r0
   15784:	mov	r0, r6
   15788:	mov	r1, r4
   1578c:	bl	13ac8 <table_get_col_ptr@@Base>
   15790:	ldr	r0, [r0, #4]
   15794:	mvn	r7, #0
   15798:	cmp	r0, #21
   1579c:	bne	157e4 <table_set_string@@Base+0x80>
   157a0:	mov	r0, r8
   157a4:	bl	12000 <strlen@plt>
   157a8:	ldr	r2, [r5]
   157ac:	add	r1, r0, #1
   157b0:	mov	r0, r2
   157b4:	bl	11fb8 <realloc@plt>
   157b8:	cmp	r0, #0
   157bc:	str	r0, [r5]
   157c0:	beq	157e4 <table_set_string@@Base+0x80>
   157c4:	mov	r1, r8
   157c8:	bl	11fc4 <strcpy@plt>
   157cc:	mov	r0, r6
   157d0:	mov	r1, r9
   157d4:	mov	r2, r4
   157d8:	mov	r3, #1
   157dc:	bl	12fc4 <table_notify@@Base>
   157e0:	mov	r7, #0
   157e4:	mov	r0, r7
   157e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000157ec <table_set_char@@Base>:
   157ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   157f0:	add	fp, sp, #24
   157f4:	mov	r8, r3
   157f8:	mov	r4, r2
   157fc:	mov	r9, r1
   15800:	mov	r6, r0
   15804:	bl	13060 <table_get_cell_ptr@@Base>
   15808:	mov	r5, r0
   1580c:	mov	r0, r6
   15810:	mov	r1, r4
   15814:	bl	13ac8 <table_get_col_ptr@@Base>
   15818:	ldr	r0, [r0, #4]
   1581c:	mvn	r7, #0
   15820:	cmp	r0, #19
   15824:	bne	15864 <table_set_char@@Base+0x78>
   15828:	ldr	r0, [r5]
   1582c:	cmp	r0, #0
   15830:	bne	15848 <table_set_char@@Base+0x5c>
   15834:	mov	r0, #1
   15838:	bl	11fdc <malloc@plt>
   1583c:	cmp	r0, #0
   15840:	str	r0, [r5]
   15844:	beq	15864 <table_set_char@@Base+0x78>
   15848:	strb	r8, [r0]
   1584c:	mov	r0, r6
   15850:	mov	r1, r9
   15854:	mov	r2, r4
   15858:	mov	r3, #1
   1585c:	bl	12fc4 <table_notify@@Base>
   15860:	mov	r7, #0
   15864:	mov	r0, r7
   15868:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001586c <table_set_uchar@@Base>:
   1586c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15870:	add	fp, sp, #24
   15874:	mov	r8, r3
   15878:	mov	r4, r2
   1587c:	mov	r9, r1
   15880:	mov	r6, r0
   15884:	bl	13060 <table_get_cell_ptr@@Base>
   15888:	mov	r5, r0
   1588c:	mov	r0, r6
   15890:	mov	r1, r4
   15894:	bl	13ac8 <table_get_col_ptr@@Base>
   15898:	ldr	r0, [r0, #4]
   1589c:	mvn	r7, #0
   158a0:	cmp	r0, #20
   158a4:	bne	158e4 <table_set_uchar@@Base+0x78>
   158a8:	ldr	r0, [r5]
   158ac:	cmp	r0, #0
   158b0:	bne	158c8 <table_set_uchar@@Base+0x5c>
   158b4:	mov	r0, #1
   158b8:	bl	11fdc <malloc@plt>
   158bc:	cmp	r0, #0
   158c0:	str	r0, [r5]
   158c4:	beq	158e4 <table_set_uchar@@Base+0x78>
   158c8:	strb	r8, [r0]
   158cc:	mov	r0, r6
   158d0:	mov	r1, r9
   158d4:	mov	r2, r4
   158d8:	mov	r3, #1
   158dc:	bl	12fc4 <table_notify@@Base>
   158e0:	mov	r7, #0
   158e4:	mov	r0, r7
   158e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000158ec <table_set_ptr@@Base>:
   158ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   158f0:	add	fp, sp, #24
   158f4:	mov	r8, r3
   158f8:	mov	r4, r2
   158fc:	mov	r5, r1
   15900:	mov	r6, r0
   15904:	bl	13060 <table_get_cell_ptr@@Base>
   15908:	mov	r7, r0
   1590c:	mov	r0, r6
   15910:	mov	r1, r4
   15914:	bl	13ac8 <table_get_col_ptr@@Base>
   15918:	ldr	r1, [r0, #4]
   1591c:	mvn	r0, #0
   15920:	cmp	r1, #23
   15924:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15928:	mov	r0, r6
   1592c:	mov	r1, r5
   15930:	mov	r2, r4
   15934:	mov	r3, #1
   15938:	str	r8, [r7]
   1593c:	bl	12fc4 <table_notify@@Base>
   15940:	mov	r0, #0
   15944:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015948 <table_column_sort@@Base>:
   15948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1594c:	add	fp, sp, #28
   15950:	sub	sp, sp, #44	; 0x2c
   15954:	mov	r4, r0
   15958:	cmp	r3, #1
   1595c:	str	r2, [sp, #16]
   15960:	str	r1, [sp, #20]
   15964:	str	r3, [sp, #12]
   15968:	blt	15bb8 <table_column_sort@@Base+0x270>
   1596c:	ldr	r0, [sp, #20]
   15970:	mov	r9, #0
   15974:	sub	sl, r0, #4
   15978:	mov	r0, r4
   1597c:	bl	14848 <table_get_row_length@@Base>
   15980:	mov	r5, r0
   15984:	cmp	r9, #0
   15988:	beq	15b64 <table_column_sort@@Base+0x21c>
   1598c:	ldr	r0, [sp, #20]
   15990:	add	r0, r0, r9, lsl #2
   15994:	ldr	r1, [r0, #-4]
   15998:	mov	r0, r4
   1599c:	bl	13e54 <table_get_column_compare_function@@Base>
   159a0:	cmp	r5, #1
   159a4:	blt	15b50 <table_column_sort@@Base+0x208>
   159a8:	mov	r6, r0
   159ac:	sub	r2, r5, #1
   159b0:	mov	r7, #0
   159b4:	mvn	r3, #0
   159b8:	mvn	r8, #0
   159bc:	str	r9, [fp, #-32]	; 0xffffffe0
   159c0:	str	r5, [sp, #28]
   159c4:	str	r2, [sp, #36]	; 0x24
   159c8:	cmp	r7, #0
   159cc:	beq	15a3c <table_column_sort@@Base+0xf4>
   159d0:	str	r8, [sp, #32]
   159d4:	str	r3, [sp, #24]
   159d8:	sub	r8, r7, #1
   159dc:	mov	r5, r9
   159e0:	ldr	r2, [sl, r5, lsl #2]
   159e4:	mov	r0, r4
   159e8:	mov	r1, r7
   159ec:	bl	14574 <table_get@@Base>
   159f0:	ldr	r2, [sl, r5, lsl #2]
   159f4:	mov	r9, r0
   159f8:	mov	r0, r4
   159fc:	mov	r1, r8
   15a00:	bl	14574 <table_get@@Base>
   15a04:	mov	r1, r0
   15a08:	mov	r0, r9
   15a0c:	blx	r6
   15a10:	cmp	r0, #0
   15a14:	bne	15a8c <table_column_sort@@Base+0x144>
   15a18:	sub	r5, r5, #1
   15a1c:	cmp	r5, #1
   15a20:	bge	159e0 <table_column_sort@@Base+0x98>
   15a24:	ldr	r0, [sp, #32]
   15a28:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15a2c:	ldr	r2, [sp, #36]	; 0x24
   15a30:	mov	r3, r7
   15a34:	cmn	r0, #1
   15a38:	movne	r8, r0
   15a3c:	cmn	r8, #1
   15a40:	beq	15aa4 <table_column_sort@@Base+0x15c>
   15a44:	cmp	r3, r7
   15a48:	bne	15abc <table_column_sort@@Base+0x174>
   15a4c:	cmp	r7, r2
   15a50:	bne	15b3c <table_column_sort@@Base+0x1f4>
   15a54:	ldr	r0, [sp, #20]
   15a58:	ldr	r0, [r0, r9, lsl #2]
   15a5c:	str	r0, [sp, #32]
   15a60:	ldr	r0, [sp, #16]
   15a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a68:	ldr	r9, [r0, r1, lsl #2]
   15a6c:	rsb	r0, r8, #1
   15a70:	mov	r1, #4
   15a74:	add	r0, r0, r2
   15a78:	bl	11f7c <calloc@plt>
   15a7c:	mov	r5, r0
   15a80:	ldr	r0, [sp, #36]	; 0x24
   15a84:	stm	sp, {r0, r9}
   15a88:	b	15afc <table_column_sort@@Base+0x1b4>
   15a8c:	ldr	r8, [sp, #32]
   15a90:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15a94:	ldr	r2, [sp, #36]	; 0x24
   15a98:	ldr	r3, [sp, #24]
   15a9c:	cmn	r8, #1
   15aa0:	bne	15a44 <table_column_sort@@Base+0xfc>
   15aa4:	mvn	r8, #0
   15aa8:	ldr	r0, [sp, #28]
   15aac:	add	r7, r7, #1
   15ab0:	cmp	r7, r0
   15ab4:	bne	159c8 <table_column_sort@@Base+0x80>
   15ab8:	b	15b50 <table_column_sort@@Base+0x208>
   15abc:	ldr	r0, [sp, #20]
   15ac0:	ldr	r0, [r0, r9, lsl #2]
   15ac4:	mov	r9, r3
   15ac8:	str	r0, [sp, #32]
   15acc:	ldr	r0, [sp, #16]
   15ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ad4:	ldr	r0, [r0, r1, lsl #2]
   15ad8:	mov	r1, #4
   15adc:	str	r0, [sp, #24]
   15ae0:	rsb	r0, r8, #1
   15ae4:	add	r0, r0, r3
   15ae8:	bl	11f7c <calloc@plt>
   15aec:	str	r9, [sp]
   15af0:	mov	r5, r0
   15af4:	ldr	r0, [sp, #24]
   15af8:	str	r0, [sp, #4]
   15afc:	ldr	r2, [sp, #32]
   15b00:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15b04:	mov	r0, r4
   15b08:	mov	r1, r5
   15b0c:	mov	r3, r8
   15b10:	bl	15bd4 <table_column_sort@@Base+0x28c>
   15b14:	mov	r0, r5
   15b18:	bl	11fa0 <free@plt>
   15b1c:	ldr	r2, [sp, #36]	; 0x24
   15b20:	mvn	r8, #0
   15b24:	mvn	r3, #0
   15b28:	ldr	r0, [sp, #28]
   15b2c:	add	r7, r7, #1
   15b30:	cmp	r7, r0
   15b34:	bne	159c8 <table_column_sort@@Base+0x80>
   15b38:	b	15b50 <table_column_sort@@Base+0x208>
   15b3c:	mov	r3, r7
   15b40:	ldr	r0, [sp, #28]
   15b44:	add	r7, r7, #1
   15b48:	cmp	r7, r0
   15b4c:	bne	159c8 <table_column_sort@@Base+0x80>
   15b50:	ldr	r0, [sp, #12]
   15b54:	add	r9, r9, #1
   15b58:	cmp	r9, r0
   15b5c:	bne	15978 <table_column_sort@@Base+0x30>
   15b60:	b	15bb8 <table_column_sort@@Base+0x270>
   15b64:	ldr	r0, [sp, #20]
   15b68:	mov	r1, #4
   15b6c:	ldr	r8, [r0]
   15b70:	ldr	r0, [sp, #16]
   15b74:	ldr	r6, [r0]
   15b78:	mov	r0, r5
   15b7c:	bl	11f7c <calloc@plt>
   15b80:	mov	r7, r0
   15b84:	sub	r0, r5, #1
   15b88:	mov	r2, r8
   15b8c:	mov	r3, #0
   15b90:	stm	sp, {r0, r6}
   15b94:	mov	r0, r4
   15b98:	mov	r1, r7
   15b9c:	bl	15bd4 <table_column_sort@@Base+0x28c>
   15ba0:	mov	r0, r7
   15ba4:	bl	11fa0 <free@plt>
   15ba8:	ldr	r0, [sp, #12]
   15bac:	add	r9, r9, #1
   15bb0:	cmp	r9, r0
   15bb4:	bne	15978 <table_column_sort@@Base+0x30>
   15bb8:	mov	r0, r4
   15bbc:	mvn	r1, #0
   15bc0:	mvn	r2, #0
   15bc4:	mov	r3, #32
   15bc8:	sub	sp, fp, #28
   15bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd0:	b	12fc4 <table_notify@@Base>
   15bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bd8:	add	fp, sp, #28
   15bdc:	sub	sp, sp, #36	; 0x24
   15be0:	ldr	r8, [fp, #8]
   15be4:	cmp	r8, r3
   15be8:	ble	15dfc <table_column_sort@@Base+0x4b4>
   15bec:	ldr	r7, [fp, #12]
   15bf0:	mov	r9, r0
   15bf4:	add	r0, r8, r3
   15bf8:	mov	r4, r3
   15bfc:	mov	r5, r2
   15c00:	mov	sl, r1
   15c04:	add	r6, r0, r0, lsr #31
   15c08:	asr	r0, r6, #1
   15c0c:	str	r0, [sp, #32]
   15c10:	stm	sp, {r0, r7}
   15c14:	mov	r0, r9
   15c18:	bl	15bd4 <table_column_sort@@Base+0x28c>
   15c1c:	mov	r0, #1
   15c20:	str	r7, [sp, #4]
   15c24:	mov	r1, sl
   15c28:	mov	r2, r5
   15c2c:	str	r8, [sp]
   15c30:	add	r7, r0, r6, asr #1
   15c34:	mov	r0, r9
   15c38:	mov	r3, r7
   15c3c:	bl	15bd4 <table_column_sort@@Base+0x28c>
   15c40:	mov	r0, r9
   15c44:	mov	r1, r5
   15c48:	str	r5, [sp, #20]
   15c4c:	bl	13e54 <table_get_column_compare_function@@Base>
   15c50:	str	r0, [sp, #16]
   15c54:	add	r0, r8, #1
   15c58:	mov	r5, sl
   15c5c:	mov	r6, r4
   15c60:	str	r9, [sp, #28]
   15c64:	str	r0, [sp, #12]
   15c68:	sub	r8, r0, r4
   15c6c:	ldr	r0, [fp, #12]
   15c70:	cmp	r0, #0
   15c74:	beq	15d24 <table_column_sort@@Base+0x3dc>
   15c78:	ldr	r0, [sp, #32]
   15c7c:	cmp	r6, r0
   15c80:	ble	15cac <table_column_sort@@Base+0x364>
   15c84:	mov	r0, r9
   15c88:	mov	r1, r7
   15c8c:	bl	147e4 <table_get_row_ptr@@Base>
   15c90:	ldr	r0, [r0]
   15c94:	add	r7, r7, #1
   15c98:	str	r0, [r5]
   15c9c:	subs	r8, r8, #1
   15ca0:	add	r5, r5, #4
   15ca4:	bne	15c78 <table_column_sort@@Base+0x330>
   15ca8:	b	15dcc <table_column_sort@@Base+0x484>
   15cac:	ldr	r0, [fp, #8]
   15cb0:	cmp	r7, r0
   15cb4:	bgt	15cfc <table_column_sort@@Base+0x3b4>
   15cb8:	mov	r0, r9
   15cbc:	ldr	r9, [sp, #20]
   15cc0:	mov	r1, r6
   15cc4:	mov	r2, r9
   15cc8:	bl	14574 <table_get@@Base>
   15ccc:	str	r0, [sp, #24]
   15cd0:	ldr	r0, [sp, #28]
   15cd4:	mov	r1, r7
   15cd8:	mov	r2, r9
   15cdc:	bl	14574 <table_get@@Base>
   15ce0:	mov	r1, r0
   15ce4:	ldr	r0, [sp, #24]
   15ce8:	ldr	r2, [sp, #16]
   15cec:	ldr	r9, [sp, #28]
   15cf0:	blx	r2
   15cf4:	cmp	r0, #1
   15cf8:	blt	15c84 <table_column_sort@@Base+0x33c>
   15cfc:	mov	r0, r9
   15d00:	mov	r1, r6
   15d04:	bl	147e4 <table_get_row_ptr@@Base>
   15d08:	ldr	r0, [r0]
   15d0c:	add	r6, r6, #1
   15d10:	str	r0, [r5]
   15d14:	subs	r8, r8, #1
   15d18:	add	r5, r5, #4
   15d1c:	bne	15c78 <table_column_sort@@Base+0x330>
   15d20:	b	15dcc <table_column_sort@@Base+0x484>
   15d24:	ldr	r0, [sp, #32]
   15d28:	cmp	r6, r0
   15d2c:	bgt	15d80 <table_column_sort@@Base+0x438>
   15d30:	ldr	r0, [fp, #8]
   15d34:	cmp	r7, r0
   15d38:	bgt	15da8 <table_column_sort@@Base+0x460>
   15d3c:	mov	r0, r9
   15d40:	ldr	r9, [sp, #20]
   15d44:	mov	r1, r6
   15d48:	mov	r2, r9
   15d4c:	bl	14574 <table_get@@Base>
   15d50:	str	r0, [sp, #24]
   15d54:	ldr	r0, [sp, #28]
   15d58:	mov	r1, r7
   15d5c:	mov	r2, r9
   15d60:	bl	14574 <table_get@@Base>
   15d64:	mov	r1, r0
   15d68:	ldr	r0, [sp, #24]
   15d6c:	ldr	r2, [sp, #16]
   15d70:	ldr	r9, [sp, #28]
   15d74:	blx	r2
   15d78:	cmp	r0, #0
   15d7c:	blt	15da8 <table_column_sort@@Base+0x460>
   15d80:	mov	r0, r9
   15d84:	mov	r1, r7
   15d88:	bl	147e4 <table_get_row_ptr@@Base>
   15d8c:	ldr	r0, [r0]
   15d90:	add	r7, r7, #1
   15d94:	str	r0, [r5]
   15d98:	subs	r8, r8, #1
   15d9c:	add	r5, r5, #4
   15da0:	bne	15d24 <table_column_sort@@Base+0x3dc>
   15da4:	b	15dcc <table_column_sort@@Base+0x484>
   15da8:	mov	r0, r9
   15dac:	mov	r1, r6
   15db0:	bl	147e4 <table_get_row_ptr@@Base>
   15db4:	ldr	r0, [r0]
   15db8:	add	r6, r6, #1
   15dbc:	str	r0, [r5]
   15dc0:	subs	r8, r8, #1
   15dc4:	add	r5, r5, #4
   15dc8:	bne	15d24 <table_column_sort@@Base+0x3dc>
   15dcc:	ldr	r0, [fp, #8]
   15dd0:	ldr	r5, [sp, #12]
   15dd4:	cmp	r0, r4
   15dd8:	blt	15dfc <table_column_sort@@Base+0x4b4>
   15ddc:	mov	r0, r9
   15de0:	mov	r1, r4
   15de4:	mov	r2, sl
   15de8:	bl	14a00 <table_set_row_ptr@@Base>
   15dec:	add	r4, r4, #1
   15df0:	add	sl, sl, #4
   15df4:	cmp	r5, r4
   15df8:	bne	15ddc <table_column_sort@@Base+0x494>
   15dfc:	sub	sp, fp, #28
   15e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015e04 <__libc_csu_init@@Base>:
   15e04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e08:	mov	r7, r0
   15e0c:	ldr	r6, [pc, #72]	; 15e5c <__libc_csu_init@@Base+0x58>
   15e10:	ldr	r5, [pc, #72]	; 15e60 <__libc_csu_init@@Base+0x5c>
   15e14:	add	r6, pc, r6
   15e18:	add	r5, pc, r5
   15e1c:	sub	r6, r6, r5
   15e20:	mov	r8, r1
   15e24:	mov	r9, r2
   15e28:	bl	11f5c <calloc@plt-0x20>
   15e2c:	asrs	r6, r6, #2
   15e30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e34:	mov	r4, #0
   15e38:	add	r4, r4, #1
   15e3c:	ldr	r3, [r5], #4
   15e40:	mov	r2, r9
   15e44:	mov	r1, r8
   15e48:	mov	r0, r7
   15e4c:	blx	r3
   15e50:	cmp	r6, r4
   15e54:	bne	15e38 <__libc_csu_init@@Base+0x34>
   15e58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e5c:	strdeq	r1, [r1], -r0
   15e60:	andeq	r1, r1, r8, ror #1

00015e64 <__libc_csu_fini@@Base>:
   15e64:	bx	lr

Disassembly of section .fini:

00015e68 <.fini>:
   15e68:	push	{r3, lr}
   15e6c:	pop	{r3, pc}
