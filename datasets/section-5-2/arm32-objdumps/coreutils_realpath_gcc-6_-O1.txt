
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	10f04 <strspn@plt+0x4c>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <calloc@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <calloc@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000173b0

00010c54 <calloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <fputs_unlocked@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <raise@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <strcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <fflush@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <memmove@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <faccessat@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <_exit@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <memcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <mbsinit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <memcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

00010ce4 <fputc_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #848]!	; 0x350

00010cf0 <dcgettext@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #840]!	; 0x348

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #832]!	; 0x340

00010d08 <textdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #824]!	; 0x338

00010d14 <rawmemchr@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #816]!	; 0x330

00010d20 <iswprint@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #808]!	; 0x328

00010d2c <readlink@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #800]!	; 0x320

00010d38 <fwrite@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #792]!	; 0x318

00010d44 <lseek64@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #784]!	; 0x310

00010d50 <__ctype_get_mb_cur_max@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #776]!	; 0x308

00010d5c <__fpending@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #768]!	; 0x300

00010d68 <mbrtowc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #760]!	; 0x2f8

00010d74 <error@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #744]!	; 0x2e8

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #736]!	; 0x2e0

00010d98 <__freading@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #728]!	; 0x2d8

00010da4 <__gmon_start__@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #720]!	; 0x2d0

00010db0 <mempcpy@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dbc <getopt_long@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc8 <__ctype_b_loc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd4 <getcwd@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #688]!	; 0x2b0

00010de0 <exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dec <strlen@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #672]!	; 0x2a0

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #664]!	; 0x298

00010e04 <__cxa_atexit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #656]!	; 0x290

00010e10 <memset@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #648]!	; 0x288

00010e1c <__printf_chk@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #640]!	; 0x280

00010e28 <fileno@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #632]!	; 0x278

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #624]!	; 0x270

00010e40 <fclose@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #616]!	; 0x268

00010e4c <fseeko64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #608]!	; 0x260

00010e58 <__overflow@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #600]!	; 0x258

00010e64 <setlocale@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #592]!	; 0x250

00010e70 <strrchr@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #584]!	; 0x248

00010e7c <nl_langinfo@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #576]!	; 0x240

00010e88 <bindtextdomain@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #568]!	; 0x238

00010e94 <__xstat64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #560]!	; 0x230

00010ea0 <strncmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #552]!	; 0x228

00010eac <abort@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #544]!	; 0x220

00010eb8 <strspn@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #536]!	; 0x218

Disassembly of section .text:

00010ec8 <.text>:
   10ec8:	mov	fp, #0
   10ecc:	mov	lr, #0
   10ed0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ed4:	mov	r2, sp
   10ed8:	push	{r2}		; (str r2, [sp, #-4]!)
   10edc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ee0:	ldr	ip, [pc, #16]	; 10ef8 <strspn@plt+0x40>
   10ee4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ee8:	ldr	r0, [pc, #12]	; 10efc <strspn@plt+0x44>
   10eec:	ldr	r3, [pc, #12]	; 10f00 <strspn@plt+0x48>
   10ef0:	bl	10d8c <__libc_start_main@plt>
   10ef4:	bl	10eac <abort@plt>
   10ef8:	andeq	r6, r1, r0, asr #19
   10efc:	andeq	r1, r1, r4, lsr #9
   10f00:	andeq	r6, r1, r0, ror #18
   10f04:	ldr	r3, [pc, #20]	; 10f20 <strspn@plt+0x68>
   10f08:	ldr	r2, [pc, #20]	; 10f24 <strspn@plt+0x6c>
   10f0c:	add	r3, pc, r3
   10f10:	ldr	r2, [r3, r2]
   10f14:	cmp	r2, #0
   10f18:	bxeq	lr
   10f1c:	b	10da4 <__gmon_start__@plt>
   10f20:	andeq	r7, r1, ip, ror #1
   10f24:	ldrdeq	r0, [r0], -ip
   10f28:	ldr	r3, [pc, #28]	; 10f4c <strspn@plt+0x94>
   10f2c:	ldr	r0, [pc, #28]	; 10f50 <strspn@plt+0x98>
   10f30:	sub	r3, r3, r0
   10f34:	cmp	r3, #6
   10f38:	bxls	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <strspn@plt+0x9c>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	andeq	r8, r2, r7, lsr r1
   10f50:	andeq	r8, r2, r4, lsr r1
   10f54:	andeq	r0, r0, r0
   10f58:	ldr	r1, [pc, #36]	; 10f84 <strspn@plt+0xcc>
   10f5c:	ldr	r0, [pc, #36]	; 10f88 <strspn@plt+0xd0>
   10f60:	sub	r1, r1, r0
   10f64:	asr	r1, r1, #2
   10f68:	add	r1, r1, r1, lsr #31
   10f6c:	asrs	r1, r1, #1
   10f70:	bxeq	lr
   10f74:	ldr	r3, [pc, #16]	; 10f8c <strspn@plt+0xd4>
   10f78:	cmp	r3, #0
   10f7c:	bxeq	lr
   10f80:	bx	r3
   10f84:	andeq	r8, r2, r4, lsr r1
   10f88:	andeq	r8, r2, r4, lsr r1
   10f8c:	andeq	r0, r0, r0
   10f90:	push	{r4, lr}
   10f94:	ldr	r4, [pc, #24]	; 10fb4 <strspn@plt+0xfc>
   10f98:	ldrb	r3, [r4]
   10f9c:	cmp	r3, #0
   10fa0:	popne	{r4, pc}
   10fa4:	bl	10f28 <strspn@plt+0x70>
   10fa8:	mov	r3, #1
   10fac:	strb	r3, [r4]
   10fb0:	pop	{r4, pc}
   10fb4:	andeq	r8, r2, r4, asr r1
   10fb8:	ldr	r0, [pc, #40]	; 10fe8 <strspn@plt+0x130>
   10fbc:	ldr	r3, [r0]
   10fc0:	cmp	r3, #0
   10fc4:	bne	10fcc <strspn@plt+0x114>
   10fc8:	b	10f58 <strspn@plt+0xa0>
   10fcc:	ldr	r3, [pc, #24]	; 10fec <strspn@plt+0x134>
   10fd0:	cmp	r3, #0
   10fd4:	beq	10fc8 <strspn@plt+0x110>
   10fd8:	push	{r4, lr}
   10fdc:	blx	r3
   10fe0:	pop	{r4, lr}
   10fe4:	b	10f58 <strspn@plt+0xa0>
   10fe8:	andeq	r7, r2, r4, lsl pc
   10fec:	andeq	r0, r0, r0
   10ff0:	ldrb	r2, [r0, #1]
   10ff4:	cmp	r2, #0
   10ff8:	beq	11058 <strspn@plt+0x1a0>
   10ffc:	cmp	r2, #47	; 0x2f
   11000:	beq	11068 <strspn@plt+0x1b0>
   11004:	ldrb	ip, [r1, #1]
   11008:	clz	r3, ip
   1100c:	lsr	r3, r3, #5
   11010:	cmp	r2, ip
   11014:	orrne	r3, r3, #1
   11018:	cmp	r3, #0
   1101c:	addeq	r0, r0, #1
   11020:	addeq	r1, r1, #2
   11024:	bne	110a0 <strspn@plt+0x1e8>
   11028:	ldrb	r2, [r0, #1]!
   1102c:	cmp	r2, #0
   11030:	beq	11088 <strspn@plt+0x1d0>
   11034:	ldrb	ip, [r1], #1
   11038:	clz	r3, ip
   1103c:	lsr	r3, r3, #5
   11040:	cmp	r2, ip
   11044:	orrne	r3, r3, #1
   11048:	cmp	r3, #0
   1104c:	beq	11028 <strspn@plt+0x170>
   11050:	mov	r0, #0
   11054:	bx	lr
   11058:	ldrb	r0, [r1, #1]
   1105c:	subs	r0, r0, #47	; 0x2f
   11060:	movne	r0, #1
   11064:	bx	lr
   11068:	ldrb	r3, [r0, #2]
   1106c:	cmp	r3, #0
   11070:	bne	11004 <strspn@plt+0x14c>
   11074:	ldrb	r0, [r1, #1]
   11078:	cmp	r0, #47	; 0x2f
   1107c:	movne	r0, #0
   11080:	moveq	r0, #1
   11084:	bx	lr
   11088:	ldrb	r0, [r1]
   1108c:	cmp	r0, #0
   11090:	cmpne	r0, #47	; 0x2f
   11094:	moveq	r0, #1
   11098:	movne	r0, #0
   1109c:	bx	lr
   110a0:	mov	r0, #0
   110a4:	bx	lr
   110a8:	push	{r4, r5, r6, lr}
   110ac:	mov	r5, r1
   110b0:	bl	11c88 <strspn@plt+0xdd0>
   110b4:	mov	r4, r0
   110b8:	ldr	r3, [pc, #56]	; 110f8 <strspn@plt+0x240>
   110bc:	ldrb	r3, [r3]
   110c0:	cmp	r0, #0
   110c4:	moveq	r0, #0
   110c8:	andne	r0, r3, #1
   110cc:	cmp	r0, #0
   110d0:	moveq	r5, r4
   110d4:	beq	110f0 <strspn@plt+0x238>
   110d8:	bic	r1, r5, #4
   110dc:	mov	r0, r4
   110e0:	bl	11c88 <strspn@plt+0xdd0>
   110e4:	mov	r5, r0
   110e8:	mov	r0, r4
   110ec:	bl	125e0 <strspn@plt+0x1728>
   110f0:	mov	r0, r5
   110f4:	pop	{r4, r5, r6, pc}
   110f8:	andeq	r8, r2, r8, asr r1
   110fc:	push	{r4, r5, r6, lr}
   11100:	sub	sp, sp, #104	; 0x68
   11104:	mov	r4, r0
   11108:	mov	r2, sp
   1110c:	mov	r1, r0
   11110:	mov	r0, #3
   11114:	bl	10e94 <__xstat64@plt>
   11118:	cmp	r0, #0
   1111c:	bne	1113c <strspn@plt+0x284>
   11120:	ldr	r0, [sp, #16]
   11124:	and	r0, r0, #61440	; 0xf000
   11128:	cmp	r0, #16384	; 0x4000
   1112c:	movne	r0, #0
   11130:	moveq	r0, #1
   11134:	add	sp, sp, #104	; 0x68
   11138:	pop	{r4, r5, r6, pc}
   1113c:	bl	10df8 <__errno_location@plt>
   11140:	ldr	r5, [r0]
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #40]	; 11178 <strspn@plt+0x2c0>
   1114c:	mov	r0, #0
   11150:	bl	10cf0 <dcgettext@plt>
   11154:	mov	r6, r0
   11158:	mov	r1, r4
   1115c:	mov	r0, #4
   11160:	bl	14f84 <strspn@plt+0x40cc>
   11164:	mov	r3, r0
   11168:	mov	r2, r6
   1116c:	mov	r1, r5
   11170:	mov	r0, #1
   11174:	bl	10d74 <error@plt>
   11178:	strdeq	r6, [r1], -r0
   1117c:	push	{lr}		; (str lr, [sp, #-4]!)
   11180:	sub	sp, sp, #60	; 0x3c
   11184:	subs	r6, r0, #0
   11188:	beq	111c4 <strspn@plt+0x30c>
   1118c:	ldr	r3, [pc, #704]	; 11454 <strspn@plt+0x59c>
   11190:	ldr	r4, [r3]
   11194:	mov	r2, #5
   11198:	ldr	r1, [pc, #696]	; 11458 <strspn@plt+0x5a0>
   1119c:	mov	r0, #0
   111a0:	bl	10cf0 <dcgettext@plt>
   111a4:	ldr	r3, [pc, #688]	; 1145c <strspn@plt+0x5a4>
   111a8:	ldr	r3, [r3]
   111ac:	mov	r2, r0
   111b0:	mov	r1, #1
   111b4:	mov	r0, r4
   111b8:	bl	10e34 <__fprintf_chk@plt>
   111bc:	mov	r0, r6
   111c0:	bl	10de0 <exit@plt>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #656]	; 11460 <strspn@plt+0x5a8>
   111cc:	mov	r0, #0
   111d0:	bl	10cf0 <dcgettext@plt>
   111d4:	ldr	r3, [pc, #640]	; 1145c <strspn@plt+0x5a4>
   111d8:	ldr	r2, [r3]
   111dc:	mov	r1, r0
   111e0:	mov	r0, #1
   111e4:	bl	10e1c <__printf_chk@plt>
   111e8:	mov	r2, #5
   111ec:	ldr	r1, [pc, #624]	; 11464 <strspn@plt+0x5ac>
   111f0:	mov	r0, #0
   111f4:	bl	10cf0 <dcgettext@plt>
   111f8:	ldr	r4, [pc, #616]	; 11468 <strspn@plt+0x5b0>
   111fc:	ldr	r1, [r4]
   11200:	bl	10c60 <fputs_unlocked@plt>
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #604]	; 1146c <strspn@plt+0x5b4>
   1120c:	mov	r0, #0
   11210:	bl	10cf0 <dcgettext@plt>
   11214:	ldr	r1, [r4]
   11218:	bl	10c60 <fputs_unlocked@plt>
   1121c:	mov	r2, #5
   11220:	ldr	r1, [pc, #584]	; 11470 <strspn@plt+0x5b8>
   11224:	mov	r0, #0
   11228:	bl	10cf0 <dcgettext@plt>
   1122c:	ldr	r1, [r4]
   11230:	bl	10c60 <fputs_unlocked@plt>
   11234:	mov	r2, #5
   11238:	ldr	r1, [pc, #564]	; 11474 <strspn@plt+0x5bc>
   1123c:	mov	r0, #0
   11240:	bl	10cf0 <dcgettext@plt>
   11244:	ldr	r1, [r4]
   11248:	bl	10c60 <fputs_unlocked@plt>
   1124c:	mov	ip, sp
   11250:	ldr	lr, [pc, #544]	; 11478 <strspn@plt+0x5c0>
   11254:	ldm	lr!, {r0, r1, r2, r3}
   11258:	stmia	ip!, {r0, r1, r2, r3}
   1125c:	ldm	lr!, {r0, r1, r2, r3}
   11260:	stmia	ip!, {r0, r1, r2, r3}
   11264:	ldm	lr!, {r0, r1, r2, r3}
   11268:	stmia	ip!, {r0, r1, r2, r3}
   1126c:	ldm	lr, {r0, r1}
   11270:	stm	ip, {r0, r1}
   11274:	ldr	r1, [sp]
   11278:	cmp	r1, #0
   1127c:	moveq	r4, sp
   11280:	beq	112a8 <strspn@plt+0x3f0>
   11284:	mov	r4, sp
   11288:	ldr	r5, [pc, #492]	; 1147c <strspn@plt+0x5c4>
   1128c:	mov	r0, r5
   11290:	bl	10c78 <strcmp@plt>
   11294:	cmp	r0, #0
   11298:	beq	112a8 <strspn@plt+0x3f0>
   1129c:	ldr	r1, [r4, #8]!
   112a0:	cmp	r1, #0
   112a4:	bne	1128c <strspn@plt+0x3d4>
   112a8:	ldr	r4, [r4, #4]
   112ac:	cmp	r4, #0
   112b0:	beq	113c4 <strspn@plt+0x50c>
   112b4:	mov	r2, #5
   112b8:	ldr	r1, [pc, #448]	; 11480 <strspn@plt+0x5c8>
   112bc:	mov	r0, #0
   112c0:	bl	10cf0 <dcgettext@plt>
   112c4:	ldr	r3, [pc, #440]	; 11484 <strspn@plt+0x5cc>
   112c8:	ldr	r2, [pc, #440]	; 11488 <strspn@plt+0x5d0>
   112cc:	mov	r1, r0
   112d0:	mov	r0, #1
   112d4:	bl	10e1c <__printf_chk@plt>
   112d8:	mov	r1, #0
   112dc:	mov	r0, #5
   112e0:	bl	10e64 <setlocale@plt>
   112e4:	cmp	r0, #0
   112e8:	beq	11300 <strspn@plt+0x448>
   112ec:	mov	r2, #3
   112f0:	ldr	r1, [pc, #404]	; 1148c <strspn@plt+0x5d4>
   112f4:	bl	10ea0 <strncmp@plt>
   112f8:	cmp	r0, #0
   112fc:	bne	11360 <strspn@plt+0x4a8>
   11300:	mov	r2, #5
   11304:	ldr	r1, [pc, #388]	; 11490 <strspn@plt+0x5d8>
   11308:	mov	r0, #0
   1130c:	bl	10cf0 <dcgettext@plt>
   11310:	ldr	r5, [pc, #356]	; 1147c <strspn@plt+0x5c4>
   11314:	mov	r3, r5
   11318:	ldr	r2, [pc, #356]	; 11484 <strspn@plt+0x5cc>
   1131c:	mov	r1, r0
   11320:	mov	r0, #1
   11324:	bl	10e1c <__printf_chk@plt>
   11328:	mov	r2, #5
   1132c:	ldr	r1, [pc, #352]	; 11494 <strspn@plt+0x5dc>
   11330:	mov	r0, #0
   11334:	bl	10cf0 <dcgettext@plt>
   11338:	mov	r1, r0
   1133c:	ldr	r2, [pc, #340]	; 11498 <strspn@plt+0x5e0>
   11340:	ldr	r3, [pc, #340]	; 1149c <strspn@plt+0x5e4>
   11344:	cmp	r4, r5
   11348:	movne	r3, r2
   1134c:	mov	r2, r4
   11350:	mov	r0, #1
   11354:	bl	10e1c <__printf_chk@plt>
   11358:	b	111bc <strspn@plt+0x304>
   1135c:	ldr	r4, [pc, #280]	; 1147c <strspn@plt+0x5c4>
   11360:	mov	r2, #5
   11364:	ldr	r1, [pc, #308]	; 114a0 <strspn@plt+0x5e8>
   11368:	mov	r0, #0
   1136c:	bl	10cf0 <dcgettext@plt>
   11370:	ldr	r3, [pc, #240]	; 11468 <strspn@plt+0x5b0>
   11374:	ldr	r1, [r3]
   11378:	bl	10c60 <fputs_unlocked@plt>
   1137c:	b	11300 <strspn@plt+0x448>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #260]	; 11490 <strspn@plt+0x5d8>
   11388:	mov	r0, #0
   1138c:	bl	10cf0 <dcgettext@plt>
   11390:	ldr	r4, [pc, #228]	; 1147c <strspn@plt+0x5c4>
   11394:	mov	r3, r4
   11398:	ldr	r2, [pc, #228]	; 11484 <strspn@plt+0x5cc>
   1139c:	mov	r1, r0
   113a0:	mov	r0, #1
   113a4:	bl	10e1c <__printf_chk@plt>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #224]	; 11494 <strspn@plt+0x5dc>
   113b0:	mov	r0, #0
   113b4:	bl	10cf0 <dcgettext@plt>
   113b8:	mov	r1, r0
   113bc:	ldr	r3, [pc, #216]	; 1149c <strspn@plt+0x5e4>
   113c0:	b	1134c <strspn@plt+0x494>
   113c4:	mov	r2, #5
   113c8:	ldr	r1, [pc, #176]	; 11480 <strspn@plt+0x5c8>
   113cc:	mov	r0, #0
   113d0:	bl	10cf0 <dcgettext@plt>
   113d4:	ldr	r3, [pc, #168]	; 11484 <strspn@plt+0x5cc>
   113d8:	ldr	r2, [pc, #168]	; 11488 <strspn@plt+0x5d0>
   113dc:	mov	r1, r0
   113e0:	mov	r0, #1
   113e4:	bl	10e1c <__printf_chk@plt>
   113e8:	mov	r1, #0
   113ec:	mov	r0, #5
   113f0:	bl	10e64 <setlocale@plt>
   113f4:	cmp	r0, #0
   113f8:	beq	11380 <strspn@plt+0x4c8>
   113fc:	mov	r2, #3
   11400:	ldr	r1, [pc, #132]	; 1148c <strspn@plt+0x5d4>
   11404:	bl	10ea0 <strncmp@plt>
   11408:	cmp	r0, #0
   1140c:	bne	1135c <strspn@plt+0x4a4>
   11410:	mov	r2, #5
   11414:	ldr	r1, [pc, #116]	; 11490 <strspn@plt+0x5d8>
   11418:	mov	r0, #0
   1141c:	bl	10cf0 <dcgettext@plt>
   11420:	ldr	r4, [pc, #84]	; 1147c <strspn@plt+0x5c4>
   11424:	mov	r3, r4
   11428:	ldr	r2, [pc, #84]	; 11484 <strspn@plt+0x5cc>
   1142c:	mov	r1, r0
   11430:	mov	r0, #1
   11434:	bl	10e1c <__printf_chk@plt>
   11438:	mov	r2, #5
   1143c:	ldr	r1, [pc, #80]	; 11494 <strspn@plt+0x5dc>
   11440:	mov	r0, #0
   11444:	bl	10cf0 <dcgettext@plt>
   11448:	mov	r1, r0
   1144c:	ldr	r3, [pc, #72]	; 1149c <strspn@plt+0x5e4>
   11450:	b	1134c <strspn@plt+0x494>
   11454:	andeq	r8, r2, r8, asr #2
   11458:	andeq	r6, r1, ip, lsl #22
   1145c:	andeq	r8, r2, ip, ror #2
   11460:	andeq	r6, r1, r4, lsr fp
   11464:	andeq	r6, r1, r4, asr fp
   11468:	andeq	r8, r2, ip, asr #2
   1146c:	andeq	r6, r1, r4, lsr #23
   11470:	andeq	r6, r1, r8, lsl lr
   11474:	andeq	r6, r1, r8, asr #28
   11478:	andeq	r6, r1, r8, ror #19
   1147c:	andeq	r6, r1, r0, lsl #22
   11480:	andeq	r6, r1, r0, lsl #29
   11484:	muleq	r1, r8, lr
   11488:	andeq	r6, r1, r0, asr #29
   1148c:	ldrdeq	r6, [r1], -r0
   11490:	andeq	r6, r1, ip, lsl pc
   11494:	andeq	r6, r1, r8, lsr pc
   11498:	andeq	r7, r1, r0, ror #2
   1149c:			; <UNDEFINED> instruction: 0x00016fb4
   114a0:	ldrdeq	r6, [r1], -r4
   114a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114a8:	sub	sp, sp, #20
   114ac:	str	r0, [sp, #8]
   114b0:	mov	sl, r1
   114b4:	ldr	r0, [r1]
   114b8:	bl	13668 <strspn@plt+0x27b0>
   114bc:	ldr	r1, [pc, #1168]	; 11954 <strspn@plt+0xa9c>
   114c0:	mov	r0, #6
   114c4:	bl	10e64 <setlocale@plt>
   114c8:	ldr	r4, [pc, #1160]	; 11958 <strspn@plt+0xaa0>
   114cc:	ldr	r1, [pc, #1160]	; 1195c <strspn@plt+0xaa4>
   114d0:	mov	r0, r4
   114d4:	bl	10e88 <bindtextdomain@plt>
   114d8:	mov	r0, r4
   114dc:	bl	10d08 <textdomain@plt>
   114e0:	ldr	r0, [pc, #1144]	; 11960 <strspn@plt+0xaa8>
   114e4:	bl	169c4 <strspn@plt+0x5b0c>
   114e8:	mov	r6, #0
   114ec:	str	r6, [sp, #12]
   114f0:	mov	fp, #1
   114f4:	ldr	r5, [pc, #1128]	; 11964 <strspn@plt+0xaac>
   114f8:	ldr	r4, [pc, #1128]	; 11968 <strspn@plt+0xab0>
   114fc:	ldr	r7, [pc, #1128]	; 1196c <strspn@plt+0xab4>
   11500:	ldr	r9, [pc, #1128]	; 11970 <strspn@plt+0xab8>
   11504:	ldr	r8, [pc, #1128]	; 11974 <strspn@plt+0xabc>
   11508:	mov	r3, #0
   1150c:	str	r3, [sp]
   11510:	mov	r3, r5
   11514:	mov	r2, r4
   11518:	mov	r1, sl
   1151c:	ldr	r0, [sp, #8]
   11520:	bl	10dbc <getopt_long@plt>
   11524:	cmn	r0, #1
   11528:	beq	11648 <strspn@plt+0x790>
   1152c:	cmp	r0, #109	; 0x6d
   11530:	beq	115b8 <strspn@plt+0x700>
   11534:	bgt	11574 <strspn@plt+0x6bc>
   11538:	cmp	r0, #76	; 0x4c
   1153c:	beq	115c4 <strspn@plt+0x70c>
   11540:	bgt	1155c <strspn@plt+0x6a4>
   11544:	cmn	r0, #3
   11548:	beq	1160c <strspn@plt+0x754>
   1154c:	cmn	r0, #2
   11550:	bne	11640 <strspn@plt+0x788>
   11554:	mov	r0, #0
   11558:	bl	1117c <strspn@plt+0x2c4>
   1155c:	cmp	r0, #80	; 0x50
   11560:	beq	115d4 <strspn@plt+0x71c>
   11564:	cmp	r0, #101	; 0x65
   11568:	bne	11640 <strspn@plt+0x788>
   1156c:	bic	fp, fp, #3
   11570:	b	11508 <strspn@plt+0x650>
   11574:	cmp	r0, #122	; 0x7a
   11578:	beq	115f4 <strspn@plt+0x73c>
   1157c:	bgt	115a0 <strspn@plt+0x6e8>
   11580:	cmp	r0, #113	; 0x71
   11584:	beq	115e4 <strspn@plt+0x72c>
   11588:	cmp	r0, #115	; 0x73
   1158c:	bne	11640 <strspn@plt+0x788>
   11590:	orr	fp, fp, #4
   11594:	mov	r3, #0
   11598:	strb	r3, [r7]
   1159c:	b	11508 <strspn@plt+0x650>
   115a0:	cmp	r0, #256	; 0x100
   115a4:	beq	11600 <strspn@plt+0x748>
   115a8:	cmp	r0, r8
   115ac:	bne	11640 <strspn@plt+0x788>
   115b0:	ldr	r6, [r9]
   115b4:	b	11508 <strspn@plt+0x650>
   115b8:	bic	fp, fp, #3
   115bc:	orr	fp, fp, #2
   115c0:	b	11508 <strspn@plt+0x650>
   115c4:	orr	fp, fp, #4
   115c8:	mov	r3, #1
   115cc:	strb	r3, [r7]
   115d0:	b	11508 <strspn@plt+0x650>
   115d4:	bic	fp, fp, #4
   115d8:	mov	r3, #0
   115dc:	strb	r3, [r7]
   115e0:	b	11508 <strspn@plt+0x650>
   115e4:	mov	r3, #0
   115e8:	ldr	r2, [pc, #904]	; 11978 <strspn@plt+0xac0>
   115ec:	strb	r3, [r2]
   115f0:	b	11508 <strspn@plt+0x650>
   115f4:	mov	r3, #1
   115f8:	strb	r3, [r7, #1]
   115fc:	b	11508 <strspn@plt+0x650>
   11600:	ldr	r3, [r9]
   11604:	str	r3, [sp, #12]
   11608:	b	11508 <strspn@plt+0x650>
   1160c:	mov	r4, #0
   11610:	str	r4, [sp, #4]
   11614:	ldr	r3, [pc, #864]	; 1197c <strspn@plt+0xac4>
   11618:	str	r3, [sp]
   1161c:	ldr	r3, [pc, #860]	; 11980 <strspn@plt+0xac8>
   11620:	ldr	r3, [r3]
   11624:	ldr	r2, [pc, #856]	; 11984 <strspn@plt+0xacc>
   11628:	ldr	r1, [pc, #856]	; 11988 <strspn@plt+0xad0>
   1162c:	ldr	r0, [pc, #856]	; 1198c <strspn@plt+0xad4>
   11630:	ldr	r0, [r0]
   11634:	bl	157d8 <strspn@plt+0x4920>
   11638:	mov	r0, r4
   1163c:	bl	10de0 <exit@plt>
   11640:	mov	r0, #1
   11644:	bl	1117c <strspn@plt+0x2c4>
   11648:	ldr	r3, [pc, #832]	; 11990 <strspn@plt+0xad8>
   1164c:	ldr	r3, [r3]
   11650:	ldr	r2, [sp, #8]
   11654:	cmp	r2, r3
   11658:	ble	1172c <strspn@plt+0x874>
   1165c:	ldr	r2, [sp, #12]
   11660:	adds	r3, r6, #0
   11664:	movne	r3, #1
   11668:	cmp	r2, #0
   1166c:	movne	r3, #0
   11670:	cmp	r3, #0
   11674:	movne	r2, r6
   11678:	str	r2, [sp, #12]
   1167c:	and	r4, fp, #3
   11680:	cmp	r2, #0
   11684:	beq	116ac <strspn@plt+0x7f4>
   11688:	mov	r1, fp
   1168c:	mov	r0, r2
   11690:	bl	110a8 <strspn@plt+0x1f0>
   11694:	ldr	r3, [pc, #720]	; 1196c <strspn@plt+0xab4>
   11698:	str	r0, [r3, #4]
   1169c:	cmp	r0, #0
   116a0:	beq	11754 <strspn@plt+0x89c>
   116a4:	cmp	r4, #0
   116a8:	beq	11780 <strspn@plt+0x8c8>
   116ac:	ldr	r3, [sp, #12]
   116b0:	cmp	r3, r6
   116b4:	beq	117ac <strspn@plt+0x8f4>
   116b8:	cmp	r6, #0
   116bc:	beq	116fc <strspn@plt+0x844>
   116c0:	mov	r1, fp
   116c4:	mov	r0, r6
   116c8:	bl	110a8 <strspn@plt+0x1f0>
   116cc:	subs	r5, r0, #0
   116d0:	beq	117bc <strspn@plt+0x904>
   116d4:	cmp	r4, #0
   116d8:	beq	117e8 <strspn@plt+0x930>
   116dc:	ldr	r3, [pc, #648]	; 1196c <strspn@plt+0xab4>
   116e0:	ldr	r1, [r3, #4]
   116e4:	mov	r0, r5
   116e8:	bl	10ff0 <strspn@plt+0x138>
   116ec:	cmp	r0, #0
   116f0:	beq	11818 <strspn@plt+0x960>
   116f4:	ldr	r3, [pc, #624]	; 1196c <strspn@plt+0xab4>
   116f8:	str	r5, [r3, #8]
   116fc:	ldr	r3, [pc, #652]	; 11990 <strspn@plt+0xad8>
   11700:	ldr	r3, [r3]
   11704:	ldr	r2, [sp, #8]
   11708:	cmp	r2, r3
   1170c:	ble	11944 <strspn@plt+0xa8c>
   11710:	mov	r6, #1
   11714:	ldr	r5, [pc, #592]	; 1196c <strspn@plt+0xab4>
   11718:	ldr	r9, [pc, #620]	; 1198c <strspn@plt+0xad4>
   1171c:	ldr	r8, [pc, #620]	; 11990 <strspn@plt+0xad8>
   11720:	str	fp, [sp, #8]
   11724:	mov	fp, r2
   11728:	b	118dc <strspn@plt+0xa24>
   1172c:	mov	r2, #5
   11730:	ldr	r1, [pc, #604]	; 11994 <strspn@plt+0xadc>
   11734:	mov	r0, #0
   11738:	bl	10cf0 <dcgettext@plt>
   1173c:	mov	r2, r0
   11740:	mov	r1, #0
   11744:	mov	r0, r1
   11748:	bl	10d74 <error@plt>
   1174c:	mov	r0, #1
   11750:	bl	1117c <strspn@plt+0x2c4>
   11754:	bl	10df8 <__errno_location@plt>
   11758:	ldr	r4, [r0]
   1175c:	ldr	r2, [sp, #12]
   11760:	mov	r1, #3
   11764:	mov	r0, #0
   11768:	bl	15050 <strspn@plt+0x4198>
   1176c:	mov	r3, r0
   11770:	ldr	r2, [pc, #544]	; 11998 <strspn@plt+0xae0>
   11774:	mov	r1, r4
   11778:	mov	r0, #1
   1177c:	bl	10d74 <error@plt>
   11780:	bl	110fc <strspn@plt+0x244>
   11784:	cmp	r0, #0
   11788:	bne	116ac <strspn@plt+0x7f4>
   1178c:	ldr	r2, [sp, #12]
   11790:	mov	r1, #3
   11794:	bl	15050 <strspn@plt+0x4198>
   11798:	mov	r3, r0
   1179c:	ldr	r2, [pc, #500]	; 11998 <strspn@plt+0xae0>
   117a0:	mov	r1, #20
   117a4:	mov	r0, #1
   117a8:	bl	10d74 <error@plt>
   117ac:	ldr	r3, [pc, #440]	; 1196c <strspn@plt+0xab4>
   117b0:	ldr	r2, [r3, #4]
   117b4:	str	r2, [r3, #8]
   117b8:	b	116fc <strspn@plt+0x844>
   117bc:	bl	10df8 <__errno_location@plt>
   117c0:	ldr	r4, [r0]
   117c4:	mov	r2, r6
   117c8:	mov	r1, #3
   117cc:	mov	r0, #0
   117d0:	bl	15050 <strspn@plt+0x4198>
   117d4:	mov	r3, r0
   117d8:	ldr	r2, [pc, #440]	; 11998 <strspn@plt+0xae0>
   117dc:	mov	r1, r4
   117e0:	mov	r0, #1
   117e4:	bl	10d74 <error@plt>
   117e8:	mov	r0, r5
   117ec:	bl	110fc <strspn@plt+0x244>
   117f0:	cmp	r0, #0
   117f4:	bne	116dc <strspn@plt+0x824>
   117f8:	mov	r2, r6
   117fc:	mov	r1, #3
   11800:	bl	15050 <strspn@plt+0x4198>
   11804:	mov	r3, r0
   11808:	ldr	r2, [pc, #392]	; 11998 <strspn@plt+0xae0>
   1180c:	mov	r1, #20
   11810:	mov	r0, #1
   11814:	bl	10d74 <error@plt>
   11818:	mov	r0, r5
   1181c:	bl	125e0 <strspn@plt+0x1728>
   11820:	ldr	r3, [pc, #324]	; 1196c <strspn@plt+0xab4>
   11824:	ldr	r2, [r3, #4]
   11828:	str	r2, [r3, #8]
   1182c:	mov	r2, #0
   11830:	str	r2, [r3, #4]
   11834:	b	116fc <strspn@plt+0x844>
   11838:	ldr	r3, [pc, #312]	; 11978 <strspn@plt+0xac0>
   1183c:	ldrb	r3, [r3]
   11840:	cmp	r3, #0
   11844:	beq	118c4 <strspn@plt+0xa0c>
   11848:	bl	10df8 <__errno_location@plt>
   1184c:	ldr	r4, [r0]
   11850:	mov	r2, r7
   11854:	mov	r1, #3
   11858:	mov	r0, #0
   1185c:	bl	15050 <strspn@plt+0x4198>
   11860:	mov	r3, r0
   11864:	ldr	r2, [pc, #300]	; 11998 <strspn@plt+0xae0>
   11868:	mov	r1, r4
   1186c:	mov	r0, #0
   11870:	bl	10d74 <error@plt>
   11874:	mov	r3, #0
   11878:	b	118c4 <strspn@plt+0xa0c>
   1187c:	ldr	r1, [r9]
   11880:	mov	r0, r4
   11884:	bl	10c60 <fputs_unlocked@plt>
   11888:	ldrb	r1, [r5, #1]
   1188c:	cmp	r1, #0
   11890:	moveq	r1, #10
   11894:	movne	r1, #0
   11898:	ldr	r0, [r9]
   1189c:	ldr	r3, [r0, #20]
   118a0:	ldr	r2, [r0, #24]
   118a4:	cmp	r3, r2
   118a8:	addcc	r2, r3, #1
   118ac:	strcc	r2, [r0, #20]
   118b0:	strbcc	r1, [r3]
   118b4:	bcs	1193c <strspn@plt+0xa84>
   118b8:	mov	r0, r4
   118bc:	bl	125e0 <strspn@plt+0x1728>
   118c0:	mov	r3, #1
   118c4:	and	r6, r6, r3
   118c8:	ldr	r3, [r8]
   118cc:	add	r3, r3, #1
   118d0:	str	r3, [r8]
   118d4:	cmp	fp, r3
   118d8:	ble	11948 <strspn@plt+0xa90>
   118dc:	ldr	r7, [sl, r3, lsl #2]
   118e0:	ldr	r1, [sp, #8]
   118e4:	mov	r0, r7
   118e8:	bl	110a8 <strspn@plt+0x1f0>
   118ec:	subs	r4, r0, #0
   118f0:	beq	11838 <strspn@plt+0x980>
   118f4:	ldr	r7, [r5, #4]
   118f8:	cmp	r7, #0
   118fc:	beq	1187c <strspn@plt+0x9c4>
   11900:	ldr	r0, [r5, #8]
   11904:	cmp	r0, #0
   11908:	beq	1191c <strspn@plt+0xa64>
   1190c:	mov	r1, r4
   11910:	bl	10ff0 <strspn@plt+0x138>
   11914:	cmp	r0, #0
   11918:	beq	1187c <strspn@plt+0x9c4>
   1191c:	mov	r3, #0
   11920:	mov	r2, r3
   11924:	mov	r1, r7
   11928:	mov	r0, r4
   1192c:	bl	11a1c <strspn@plt+0xb64>
   11930:	cmp	r0, #0
   11934:	bne	11888 <strspn@plt+0x9d0>
   11938:	b	1187c <strspn@plt+0x9c4>
   1193c:	bl	10e58 <__overflow@plt>
   11940:	b	118b8 <strspn@plt+0xa00>
   11944:	mov	r6, #1
   11948:	eor	r0, r6, #1
   1194c:	add	sp, sp, #20
   11950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11954:	andeq	r7, r1, r0, ror #2
   11958:	andeq	r6, r1, r4, asr #29
   1195c:	andeq	r6, r1, ip, ror #30
   11960:	andeq	r2, r1, r0, asr #8
   11964:	andeq	r6, r1, r0, lsr #20
   11968:	andeq	r6, r1, r4, lsl #31
   1196c:	andeq	r8, r2, r8, asr r1
   11970:	andeq	r8, r2, r0, asr r1
   11974:	andeq	r0, r0, r1, lsl #2
   11978:	andeq	r8, r2, r8, ror #1
   1197c:	andeq	r6, r1, ip, lsl #31
   11980:	andeq	r8, r2, ip, ror #1
   11984:	andeq	r6, r1, r0, asr #29
   11988:	andeq	r6, r1, r0, lsl #22
   1198c:	andeq	r8, r2, ip, asr #2
   11990:	andeq	r8, r2, r0, asr #2
   11994:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11998:	strdeq	r7, [r1], -r8
   1199c:	push	{r4, r5, r6, r7, r8, lr}
   119a0:	mov	r8, r0
   119a4:	ldr	r7, [r1]
   119a8:	cmp	r7, #0
   119ac:	beq	11a04 <strspn@plt+0xb4c>
   119b0:	mov	r5, r1
   119b4:	mov	r6, r2
   119b8:	bl	10dec <strlen@plt>
   119bc:	mov	r4, r0
   119c0:	ldr	r3, [r6]
   119c4:	cmp	r0, r3
   119c8:	bcc	119d4 <strspn@plt+0xb1c>
   119cc:	mov	r0, #1
   119d0:	pop	{r4, r5, r6, r7, r8, pc}
   119d4:	add	r2, r0, #1
   119d8:	mov	r1, r8
   119dc:	mov	r0, r7
   119e0:	bl	10cc0 <memcpy@plt>
   119e4:	ldr	r3, [r5]
   119e8:	add	r3, r3, r4
   119ec:	str	r3, [r5]
   119f0:	ldr	r3, [r6]
   119f4:	sub	r4, r3, r4
   119f8:	str	r4, [r6]
   119fc:	mov	r0, #0
   11a00:	pop	{r4, r5, r6, r7, r8, pc}
   11a04:	ldr	r3, [pc, #12]	; 11a18 <strspn@plt+0xb60>
   11a08:	ldr	r1, [r3]
   11a0c:	bl	10c60 <fputs_unlocked@plt>
   11a10:	mov	r0, #0
   11a14:	pop	{r4, r5, r6, r7, r8, pc}
   11a18:	andeq	r8, r2, ip, asr #2
   11a1c:	push	{r4, r5, r6, r7, r8, lr}
   11a20:	sub	sp, sp, #8
   11a24:	str	r2, [sp, #4]
   11a28:	str	r3, [sp]
   11a2c:	ldrb	r2, [r1, #1]
   11a30:	ldrb	r3, [r0, #1]
   11a34:	cmp	r2, #47	; 0x2f
   11a38:	movne	r2, #0
   11a3c:	moveq	r2, #1
   11a40:	cmp	r3, #47	; 0x2f
   11a44:	movne	r3, #0
   11a48:	moveq	r3, #1
   11a4c:	cmp	r2, r3
   11a50:	movne	r4, #0
   11a54:	beq	11a64 <strspn@plt+0xbac>
   11a58:	mov	r0, r4
   11a5c:	add	sp, sp, #8
   11a60:	pop	{r4, r5, r6, r7, r8, pc}
   11a64:	ldrb	r2, [r1]
   11a68:	cmp	r2, #0
   11a6c:	beq	11c30 <strspn@plt+0xd78>
   11a70:	ldrb	ip, [r0]
   11a74:	clz	r3, ip
   11a78:	lsr	r3, r3, #5
   11a7c:	cmp	r2, ip
   11a80:	orrne	r3, r3, #1
   11a84:	cmp	r3, #0
   11a88:	bne	11c50 <strspn@plt+0xd98>
   11a8c:	add	lr, r0, #1
   11a90:	mov	r6, r1
   11a94:	mov	ip, #1
   11a98:	mov	r5, #0
   11a9c:	cmp	r2, #47	; 0x2f
   11aa0:	moveq	r5, ip
   11aa4:	mov	r7, lr
   11aa8:	mov	r8, ip
   11aac:	ldrb	r2, [r6, #1]!
   11ab0:	cmp	r2, #0
   11ab4:	beq	11c1c <strspn@plt+0xd64>
   11ab8:	ldrb	r4, [lr], #1
   11abc:	add	ip, ip, #1
   11ac0:	clz	r3, r4
   11ac4:	lsr	r3, r3, #5
   11ac8:	cmp	r2, r4
   11acc:	orrne	r3, r3, #1
   11ad0:	cmp	r3, #0
   11ad4:	beq	11a9c <strspn@plt+0xbe4>
   11ad8:	ldrb	r3, [r7]
   11adc:	cmp	r3, #0
   11ae0:	cmpeq	r2, #47	; 0x2f
   11ae4:	bne	11aec <strspn@plt+0xc34>
   11ae8:	mov	r5, r8
   11aec:	cmp	r5, #0
   11af0:	moveq	r4, #0
   11af4:	beq	11a58 <strspn@plt+0xba0>
   11af8:	add	r6, r1, r5
   11afc:	add	r7, r0, r5
   11b00:	ldrb	r3, [r1, r5]
   11b04:	cmp	r3, #47	; 0x2f
   11b08:	addeq	r6, r6, #1
   11b0c:	ldrb	r3, [r7]
   11b10:	cmp	r3, #47	; 0x2f
   11b14:	addeq	r7, r7, #1
   11b18:	ldrb	r3, [r6]
   11b1c:	cmp	r3, #0
   11b20:	bne	11b5c <strspn@plt+0xca4>
   11b24:	ldrb	r0, [r7]
   11b28:	mov	r2, sp
   11b2c:	add	r1, sp, #4
   11b30:	ldr	r3, [pc, #312]	; 11c70 <strspn@plt+0xdb8>
   11b34:	cmp	r0, #0
   11b38:	movne	r0, r7
   11b3c:	moveq	r0, r3
   11b40:	bl	1199c <strspn@plt+0xae4>
   11b44:	mov	r4, r0
   11b48:	cmp	r4, #0
   11b4c:	bne	11bf4 <strspn@plt+0xd3c>
   11b50:	eor	r4, r4, #1
   11b54:	uxtb	r4, r4
   11b58:	b	11a58 <strspn@plt+0xba0>
   11b5c:	mov	r2, sp
   11b60:	add	r1, sp, #4
   11b64:	ldr	r0, [pc, #264]	; 11c74 <strspn@plt+0xdbc>
   11b68:	bl	1199c <strspn@plt+0xae4>
   11b6c:	mov	r4, r0
   11b70:	ldrb	r3, [r6]
   11b74:	cmp	r3, #0
   11b78:	beq	11bb4 <strspn@plt+0xcfc>
   11b7c:	ldr	r5, [pc, #244]	; 11c78 <strspn@plt+0xdc0>
   11b80:	b	11b90 <strspn@plt+0xcd8>
   11b84:	ldrb	r3, [r6, #1]!
   11b88:	cmp	r3, #0
   11b8c:	beq	11bb4 <strspn@plt+0xcfc>
   11b90:	cmp	r3, #47	; 0x2f
   11b94:	bne	11b84 <strspn@plt+0xccc>
   11b98:	mov	r2, sp
   11b9c:	add	r1, sp, #4
   11ba0:	mov	r0, r5
   11ba4:	bl	1199c <strspn@plt+0xae4>
   11ba8:	orr	r4, r0, r4
   11bac:	uxtb	r4, r4
   11bb0:	b	11b84 <strspn@plt+0xccc>
   11bb4:	ldrb	r3, [r7]
   11bb8:	cmp	r3, #0
   11bbc:	beq	11b48 <strspn@plt+0xc90>
   11bc0:	mov	r2, sp
   11bc4:	add	r1, sp, #4
   11bc8:	ldr	r0, [pc, #172]	; 11c7c <strspn@plt+0xdc4>
   11bcc:	bl	1199c <strspn@plt+0xae4>
   11bd0:	mov	r5, r0
   11bd4:	mov	r2, sp
   11bd8:	add	r1, sp, #4
   11bdc:	mov	r0, r7
   11be0:	bl	1199c <strspn@plt+0xae4>
   11be4:	orr	r0, r5, r0
   11be8:	orr	r4, r4, r0
   11bec:	uxtb	r4, r4
   11bf0:	b	11b48 <strspn@plt+0xc90>
   11bf4:	mov	r2, #5
   11bf8:	ldr	r1, [pc, #128]	; 11c80 <strspn@plt+0xdc8>
   11bfc:	mov	r0, #0
   11c00:	bl	10cf0 <dcgettext@plt>
   11c04:	mov	r3, r0
   11c08:	ldr	r2, [pc, #116]	; 11c84 <strspn@plt+0xdcc>
   11c0c:	mov	r1, #36	; 0x24
   11c10:	mov	r0, #0
   11c14:	bl	10d74 <error@plt>
   11c18:	b	11b50 <strspn@plt+0xc98>
   11c1c:	ldrb	r3, [lr]
   11c20:	cmp	r3, #47	; 0x2f
   11c24:	cmpne	r3, #0
   11c28:	bne	11aec <strspn@plt+0xc34>
   11c2c:	b	11ae8 <strspn@plt+0xc30>
   11c30:	ldrb	r2, [r0]
   11c34:	cmp	r2, #47	; 0x2f
   11c38:	cmpne	r2, #0
   11c3c:	moveq	r4, #1
   11c40:	movne	r4, #0
   11c44:	moveq	r8, #0
   11c48:	beq	11ae8 <strspn@plt+0xc30>
   11c4c:	b	11a58 <strspn@plt+0xba0>
   11c50:	ldrb	r4, [r0]
   11c54:	cmp	r4, #0
   11c58:	cmpeq	r2, #47	; 0x2f
   11c5c:	moveq	r4, #1
   11c60:	movne	r4, #0
   11c64:	moveq	r8, #0
   11c68:	beq	11ae8 <strspn@plt+0xc30>
   11c6c:	b	11a58 <strspn@plt+0xba0>
   11c70:	andeq	r7, r1, ip, lsr #1
   11c74:	strheq	r7, [r1], -r0
   11c78:	strheq	r7, [r1], -r4
   11c7c:	strheq	r7, [r1], -r8
   11c80:	strheq	r7, [r1], -ip
   11c84:	strdeq	r7, [r1], -r8
   11c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c8c:	sub	sp, sp, #3232	; 0xca0
   11c90:	sub	sp, sp, #12
   11c94:	and	fp, r1, #3
   11c98:	sub	r3, fp, #1
   11c9c:	tst	r3, fp
   11ca0:	bne	11d44 <strspn@plt+0xe8c>
   11ca4:	mov	r4, r0
   11ca8:	mov	r6, r1
   11cac:	cmp	r0, #0
   11cb0:	beq	11d58 <strspn@plt+0xea0>
   11cb4:	ldrb	r1, [r0]
   11cb8:	cmp	r1, #0
   11cbc:	beq	11d6c <strspn@plt+0xeb4>
   11cc0:	add	r3, sp, #152	; 0x98
   11cc4:	str	r3, [sp, #144]	; 0x90
   11cc8:	mov	r3, #1024	; 0x400
   11ccc:	str	r3, [sp, #148]	; 0x94
   11cd0:	add	r2, sp, #1184	; 0x4a0
   11cd4:	str	r2, [sp, #1176]	; 0x498
   11cd8:	str	r3, [sp, #1180]	; 0x49c
   11cdc:	add	r2, sp, #2208	; 0x8a0
   11ce0:	add	r2, r2, #8
   11ce4:	str	r2, [sp, #2208]	; 0x8a0
   11ce8:	str	r3, [sp, #2212]	; 0x8a4
   11cec:	cmp	r1, #47	; 0x2f
   11cf0:	beq	11d98 <strspn@plt+0xee0>
   11cf4:	add	r5, sp, #2208	; 0x8a0
   11cf8:	add	r5, r5, #8
   11cfc:	sub	r7, r5, #8
   11d00:	ldr	r1, [sp, #2212]	; 0x8a4
   11d04:	mov	r0, r5
   11d08:	bl	10dd4 <getcwd@plt>
   11d0c:	cmp	r0, #0
   11d10:	bne	11d84 <strspn@plt+0xecc>
   11d14:	bl	10df8 <__errno_location@plt>
   11d18:	ldr	r3, [r0]
   11d1c:	cmp	r3, #12
   11d20:	beq	11d80 <strspn@plt+0xec8>
   11d24:	cmp	r3, #34	; 0x22
   11d28:	bne	12380 <strspn@plt+0x14c8>
   11d2c:	mov	r0, r7
   11d30:	bl	15214 <strspn@plt+0x435c>
   11d34:	cmp	r0, #0
   11d38:	beq	11d80 <strspn@plt+0xec8>
   11d3c:	ldr	r5, [sp, #2208]	; 0x8a0
   11d40:	b	11d00 <strspn@plt+0xe48>
   11d44:	bl	10df8 <__errno_location@plt>
   11d48:	mov	r3, #22
   11d4c:	str	r3, [r0]
   11d50:	mov	r0, #0
   11d54:	b	123e0 <strspn@plt+0x1528>
   11d58:	bl	10df8 <__errno_location@plt>
   11d5c:	mov	r3, #22
   11d60:	str	r3, [r0]
   11d64:	mov	r0, #0
   11d68:	b	123e0 <strspn@plt+0x1528>
   11d6c:	bl	10df8 <__errno_location@plt>
   11d70:	mov	r3, #2
   11d74:	str	r3, [r0]
   11d78:	mov	r0, #0
   11d7c:	b	123e0 <strspn@plt+0x1528>
   11d80:	bl	15e48 <strspn@plt+0x4f90>
   11d84:	mov	r1, #0
   11d88:	mov	r0, r5
   11d8c:	bl	10d14 <rawmemchr@plt>
   11d90:	mov	r1, r0
   11d94:	b	11db0 <strspn@plt+0xef8>
   11d98:	add	r1, sp, #3232	; 0xca0
   11d9c:	add	r1, r1, #8
   11da0:	mov	r3, #47	; 0x2f
   11da4:	strb	r3, [r1, #-1024]!	; 0xfffffc00
   11da8:	mov	r5, r1
   11dac:	add	r1, r1, #1
   11db0:	and	r3, r6, #4
   11db4:	str	r3, [sp, #12]
   11db8:	mov	r3, #0
   11dbc:	str	r3, [sp, #28]
   11dc0:	str	r3, [sp, #20]
   11dc4:	str	r3, [sp, #24]
   11dc8:	ldrb	r2, [r4]
   11dcc:	cmp	r2, #0
   11dd0:	beq	1230c <strspn@plt+0x1454>
   11dd4:	cmp	r2, #47	; 0x2f
   11dd8:	bne	11df8 <strspn@plt+0xf40>
   11ddc:	ldrb	r2, [r4, #1]!
   11de0:	cmp	r2, #47	; 0x2f
   11de4:	beq	11ddc <strspn@plt+0xf24>
   11de8:	mov	r3, r2
   11dec:	cmp	r2, #47	; 0x2f
   11df0:	cmpne	r2, #0
   11df4:	beq	11f08 <strspn@plt+0x1050>
   11df8:	mov	r6, r4
   11dfc:	ldrb	r3, [r6, #1]!
   11e00:	cmp	r3, #0
   11e04:	cmpne	r3, #47	; 0x2f
   11e08:	bne	11dfc <strspn@plt+0xf44>
   11e0c:	str	r6, [sp, #16]
   11e10:	subs	r8, r6, r4
   11e14:	beq	1230c <strspn@plt+0x1454>
   11e18:	cmp	r2, #46	; 0x2e
   11e1c:	movne	r3, #0
   11e20:	moveq	r3, #1
   11e24:	cmp	r8, #1
   11e28:	cmpeq	r2, #46	; 0x2e
   11e2c:	beq	12304 <strspn@plt+0x144c>
   11e30:	cmp	r8, #2
   11e34:	movne	r3, #0
   11e38:	andeq	r3, r3, #1
   11e3c:	cmp	r3, #0
   11e40:	bne	11f10 <strspn@plt+0x1058>
   11e44:	ldrb	r3, [r1, #-1]
   11e48:	cmp	r3, #47	; 0x2f
   11e4c:	addne	r0, r1, #1
   11e50:	movne	r3, #47	; 0x2f
   11e54:	strbne	r3, [r1]
   11e58:	moveq	r0, r1
   11e5c:	mov	r2, r0
   11e60:	add	r9, r8, #2
   11e64:	ldr	r3, [sp, #2212]	; 0x8a4
   11e68:	add	r3, r5, r3
   11e6c:	sub	r3, r3, r0
   11e70:	cmp	r3, r9
   11e74:	bcs	11ea8 <strspn@plt+0xff0>
   11e78:	sub	r7, r2, r5
   11e7c:	add	r0, sp, #2208	; 0x8a0
   11e80:	bl	15284 <strspn@plt+0x43cc>
   11e84:	cmp	r0, #0
   11e88:	beq	11f68 <strspn@plt+0x10b0>
   11e8c:	ldr	r5, [sp, #2208]	; 0x8a0
   11e90:	add	r0, r5, r7
   11e94:	mov	r2, r0
   11e98:	ldr	r3, [sp, #2212]	; 0x8a4
   11e9c:	sub	r3, r3, r7
   11ea0:	cmp	r3, r9
   11ea4:	bcc	11e78 <strspn@plt+0xfc0>
   11ea8:	mov	r2, r8
   11eac:	mov	r1, r4
   11eb0:	bl	10db0 <mempcpy@plt>
   11eb4:	str	r0, [sp, #32]
   11eb8:	mov	r3, #0
   11ebc:	strb	r3, [r0]
   11ec0:	ldr	r3, [sp, #12]
   11ec4:	cmp	r3, #0
   11ec8:	bne	12188 <strspn@plt+0x12d0>
   11ecc:	ldr	sl, [sp, #1176]	; 0x498
   11ed0:	ldr	r7, [sp, #1180]	; 0x49c
   11ed4:	sub	r7, r7, #1
   11ed8:	mov	r2, r7
   11edc:	mov	r1, sl
   11ee0:	mov	r0, r5
   11ee4:	bl	10d2c <readlink@plt>
   11ee8:	cmp	r7, r0
   11eec:	bgt	11f6c <strspn@plt+0x10b4>
   11ef0:	add	r0, sp, #1168	; 0x490
   11ef4:	add	r0, r0, #8
   11ef8:	bl	15214 <strspn@plt+0x435c>
   11efc:	cmp	r0, #0
   11f00:	bne	11ecc <strspn@plt+0x1014>
   11f04:	bl	15e48 <strspn@plt+0x4f90>
   11f08:	mov	r6, r4
   11f0c:	b	11e0c <strspn@plt+0xf54>
   11f10:	ldrb	r3, [r4, #1]
   11f14:	cmp	r3, #46	; 0x2e
   11f18:	bne	11e44 <strspn@plt+0xf8c>
   11f1c:	add	r3, r5, #1
   11f20:	cmp	r1, r3
   11f24:	bls	12304 <strspn@plt+0x144c>
   11f28:	sub	r3, r1, #1
   11f2c:	cmp	r5, r3
   11f30:	bcs	122b4 <strspn@plt+0x13fc>
   11f34:	ldrb	r2, [r1, #-2]
   11f38:	cmp	r2, #47	; 0x2f
   11f3c:	moveq	r1, r3
   11f40:	beq	12304 <strspn@plt+0x144c>
   11f44:	sub	r3, r1, #2
   11f48:	mov	r2, r5
   11f4c:	mov	r1, r3
   11f50:	cmp	r2, r3
   11f54:	beq	12304 <strspn@plt+0x144c>
   11f58:	ldrb	r0, [r3, #-1]!
   11f5c:	cmp	r0, #47	; 0x2f
   11f60:	bne	11f4c <strspn@plt+0x1094>
   11f64:	b	12304 <strspn@plt+0x144c>
   11f68:	bl	15e48 <strspn@plt+0x4f90>
   11f6c:	mov	r9, r0
   11f70:	cmp	r0, #0
   11f74:	blt	12188 <strspn@plt+0x12d0>
   11f78:	ldr	r3, [sp, #24]
   11f7c:	cmp	r3, #19
   11f80:	addle	r3, r3, #1
   11f84:	strle	r3, [sp, #24]
   11f88:	ble	1205c <strspn@plt+0x11a4>
   11f8c:	ldrb	r3, [r4]
   11f90:	cmp	r3, #0
   11f94:	beq	1205c <strspn@plt+0x11a4>
   11f98:	rsb	r8, r8, #0
   11f9c:	mov	r3, #0
   11fa0:	ldr	r7, [sp, #32]
   11fa4:	strb	r3, [r7, r8]
   11fa8:	ldrb	r1, [r5]
   11fac:	add	r2, sp, #40	; 0x28
   11fb0:	ldr	r3, [pc, #1108]	; 1240c <strspn@plt+0x1554>
   11fb4:	cmp	r1, #0
   11fb8:	movne	r3, r5
   11fbc:	mov	r1, r3
   11fc0:	mov	r0, #3
   11fc4:	bl	10e94 <__xstat64@plt>
   11fc8:	cmp	r0, #0
   11fcc:	bne	12010 <strspn@plt+0x1158>
   11fd0:	ldrb	r3, [r4]
   11fd4:	strb	r3, [r7, r8]
   11fd8:	ldr	r3, [sp, #28]
   11fdc:	cmp	r3, #0
   11fe0:	beq	12020 <strspn@plt+0x1168>
   11fe4:	add	r2, sp, #40	; 0x28
   11fe8:	mov	r1, r4
   11fec:	ldr	r0, [sp, #28]
   11ff0:	bl	1259c <strspn@plt+0x16e4>
   11ff4:	cmp	r0, #0
   11ff8:	beq	1204c <strspn@plt+0x1194>
   11ffc:	cmp	fp, #2
   12000:	beq	12160 <strspn@plt+0x12a8>
   12004:	bl	10df8 <__errno_location@plt>
   12008:	mov	r3, #40	; 0x28
   1200c:	str	r3, [r0]
   12010:	mov	r6, r5
   12014:	ldr	r5, [sp, #32]
   12018:	mov	r4, #1
   1201c:	b	1236c <strspn@plt+0x14b4>
   12020:	ldr	r3, [pc, #1000]	; 12410 <strspn@plt+0x1558>
   12024:	str	r3, [sp]
   12028:	ldr	r3, [pc, #996]	; 12414 <strspn@plt+0x155c>
   1202c:	ldr	r2, [pc, #996]	; 12418 <strspn@plt+0x1560>
   12030:	mov	r1, #0
   12034:	mov	r0, #7
   12038:	bl	12f28 <strspn@plt+0x2070>
   1203c:	subs	r3, r0, #0
   12040:	str	r3, [sp, #28]
   12044:	bne	11fe4 <strspn@plt+0x112c>
   12048:	bl	15e48 <strspn@plt+0x4f90>
   1204c:	add	r2, sp, #40	; 0x28
   12050:	mov	r1, r4
   12054:	ldr	r0, [sp, #28]
   12058:	bl	12534 <strspn@plt+0x167c>
   1205c:	mov	r3, #0
   12060:	strb	r3, [sl, r9]
   12064:	ldr	r8, [sp, #144]	; 0x90
   12068:	ldr	r3, [sp, #20]
   1206c:	cmp	r3, #0
   12070:	ldrne	r3, [sp, #16]
   12074:	subne	r3, r3, r8
   12078:	moveq	r3, #0
   1207c:	str	r3, [sp, #36]	; 0x24
   12080:	mov	r0, r6
   12084:	bl	10dec <strlen@plt>
   12088:	mov	r7, r0
   1208c:	adds	r4, r9, r0
   12090:	bcs	12168 <strspn@plt+0x12b0>
   12094:	ldr	r3, [sp, #148]	; 0x94
   12098:	cmp	r3, r4
   1209c:	addls	r3, sp, #152	; 0x98
   120a0:	addls	r3, sp, #144	; 0x90
   120a4:	strls	r3, [sp, #16]
   120a8:	bhi	120cc <strspn@plt+0x1214>
   120ac:	ldr	r0, [sp, #16]
   120b0:	bl	15284 <strspn@plt+0x43cc>
   120b4:	cmp	r0, #0
   120b8:	beq	1216c <strspn@plt+0x12b4>
   120bc:	ldr	r3, [sp, #148]	; 0x94
   120c0:	cmp	r4, r3
   120c4:	bcs	120ac <strspn@plt+0x11f4>
   120c8:	ldr	r8, [sp, #144]	; 0x90
   120cc:	ldr	r3, [sp, #20]
   120d0:	cmp	r3, #0
   120d4:	ldrne	r3, [sp, #36]	; 0x24
   120d8:	addne	r6, r8, r3
   120dc:	add	r2, r7, #1
   120e0:	mov	r1, r6
   120e4:	add	r0, r8, r9
   120e8:	bl	10c90 <memmove@plt>
   120ec:	mov	r2, r9
   120f0:	mov	r1, sl
   120f4:	mov	r0, r8
   120f8:	bl	10cc0 <memcpy@plt>
   120fc:	ldrb	r3, [sl]
   12100:	cmp	r3, #47	; 0x2f
   12104:	beq	12170 <strspn@plt+0x12b8>
   12108:	add	r3, r5, #1
   1210c:	ldr	r2, [sp, #32]
   12110:	cmp	r2, r3
   12114:	bls	122bc <strspn@plt+0x1404>
   12118:	sub	r1, r2, #1
   1211c:	cmp	r1, r5
   12120:	bls	122d0 <strspn@plt+0x1418>
   12124:	ldrb	r3, [r2, #-2]
   12128:	cmp	r3, #47	; 0x2f
   1212c:	beq	122e0 <strspn@plt+0x1428>
   12130:	sub	r3, r2, #2
   12134:	mov	ip, r5
   12138:	mov	r1, r3
   1213c:	cmp	r3, ip
   12140:	beq	122f0 <strspn@plt+0x1438>
   12144:	ldrb	r2, [r3, #-1]!
   12148:	cmp	r2, #47	; 0x2f
   1214c:	bne	12138 <strspn@plt+0x1280>
   12150:	mov	r6, r0
   12154:	mov	r3, #1
   12158:	str	r3, [sp, #20]
   1215c:	b	12304 <strspn@plt+0x144c>
   12160:	ldr	r1, [sp, #32]
   12164:	b	12304 <strspn@plt+0x144c>
   12168:	bl	15e48 <strspn@plt+0x4f90>
   1216c:	bl	15e48 <strspn@plt+0x4f90>
   12170:	add	r1, r5, #1
   12174:	strb	r3, [r5]
   12178:	mov	r6, r0
   1217c:	mov	r3, #1
   12180:	str	r3, [sp, #20]
   12184:	b	12304 <strspn@plt+0x144c>
   12188:	cmp	fp, #2
   1218c:	ldreq	r1, [sp, #32]
   12190:	beq	12304 <strspn@plt+0x144c>
   12194:	mov	r3, r6
   12198:	ldrb	r2, [r3]
   1219c:	cmp	r2, #47	; 0x2f
   121a0:	beq	12204 <strspn@plt+0x134c>
   121a4:	ldr	r3, [sp, #12]
   121a8:	cmp	r3, #0
   121ac:	bne	1227c <strspn@plt+0x13c4>
   121b0:	bl	10df8 <__errno_location@plt>
   121b4:	ldr	r4, [r0]
   121b8:	subs	r4, r4, #22
   121bc:	movne	r4, #1
   121c0:	cmp	r4, #0
   121c4:	beq	12300 <strspn@plt+0x1448>
   121c8:	cmp	fp, #1
   121cc:	bne	1233c <strspn@plt+0x1484>
   121d0:	bl	10df8 <__errno_location@plt>
   121d4:	ldr	r3, [r0]
   121d8:	cmp	r3, #2
   121dc:	bne	12348 <strspn@plt+0x1490>
   121e0:	ldr	r1, [pc, #564]	; 1241c <strspn@plt+0x1564>
   121e4:	mov	r0, r6
   121e8:	bl	10eb8 <strspn@plt>
   121ec:	ldrb	r3, [r6, r0]
   121f0:	cmp	r3, #0
   121f4:	bne	12354 <strspn@plt+0x149c>
   121f8:	ldr	r1, [sp, #32]
   121fc:	b	12304 <strspn@plt+0x144c>
   12200:	mov	r3, r1
   12204:	add	r1, r3, #1
   12208:	ldrb	r2, [r3, #1]
   1220c:	cmp	r2, #47	; 0x2f
   12210:	beq	12200 <strspn@plt+0x1348>
   12214:	add	r3, r3, #2
   12218:	cmp	r2, #0
   1221c:	beq	1224c <strspn@plt+0x1394>
   12220:	cmp	r2, #46	; 0x2e
   12224:	bne	121a4 <strspn@plt+0x12ec>
   12228:	ldrb	r2, [r1, #1]
   1222c:	cmp	r2, #0
   12230:	beq	1224c <strspn@plt+0x1394>
   12234:	cmp	r2, #46	; 0x2e
   12238:	bne	12198 <strspn@plt+0x12e0>
   1223c:	ldrb	r2, [r1, #2]
   12240:	cmp	r2, #47	; 0x2f
   12244:	cmpne	r2, #0
   12248:	bne	12198 <strspn@plt+0x12e0>
   1224c:	ldr	r3, [pc, #456]	; 1241c <strspn@plt+0x1564>
   12250:	ldrh	r3, [r3]
   12254:	ldr	r2, [sp, #32]
   12258:	strh	r3, [r2]
   1225c:	mov	r3, #512	; 0x200
   12260:	mov	r2, #0
   12264:	mov	r1, r5
   12268:	mvn	r0, #99	; 0x63
   1226c:	bl	10ca8 <faccessat@plt>
   12270:	adds	r4, r0, #0
   12274:	movne	r4, #1
   12278:	b	121c0 <strspn@plt+0x1308>
   1227c:	ldrb	r3, [r6]
   12280:	cmp	r3, #0
   12284:	movne	r0, #0
   12288:	beq	12294 <strspn@plt+0x13dc>
   1228c:	mov	r4, r0
   12290:	b	121c0 <strspn@plt+0x1308>
   12294:	mov	r3, #512	; 0x200
   12298:	mov	r2, #0
   1229c:	mov	r1, r5
   122a0:	mvn	r0, #99	; 0x63
   122a4:	bl	10ca8 <faccessat@plt>
   122a8:	adds	r0, r0, #0
   122ac:	movne	r0, #1
   122b0:	b	1228c <strspn@plt+0x13d4>
   122b4:	mov	r1, r3
   122b8:	b	12304 <strspn@plt+0x144c>
   122bc:	mov	r6, r0
   122c0:	ldr	r1, [sp, #32]
   122c4:	mov	r3, #1
   122c8:	str	r3, [sp, #20]
   122cc:	b	12304 <strspn@plt+0x144c>
   122d0:	mov	r6, r0
   122d4:	mov	r3, #1
   122d8:	str	r3, [sp, #20]
   122dc:	b	12304 <strspn@plt+0x144c>
   122e0:	mov	r6, r0
   122e4:	mov	r3, #1
   122e8:	str	r3, [sp, #20]
   122ec:	b	12304 <strspn@plt+0x144c>
   122f0:	mov	r6, r0
   122f4:	mov	r3, #1
   122f8:	str	r3, [sp, #20]
   122fc:	b	12304 <strspn@plt+0x144c>
   12300:	ldr	r1, [sp, #32]
   12304:	mov	r4, r6
   12308:	b	11dc8 <strspn@plt+0xf10>
   1230c:	add	r3, r5, #1
   12310:	cmp	r1, r3
   12314:	bls	12360 <strspn@plt+0x14a8>
   12318:	ldrb	r3, [r1, #-1]
   1231c:	cmp	r3, #47	; 0x2f
   12320:	moveq	r6, r5
   12324:	subeq	r5, r1, #1
   12328:	moveq	r4, #0
   1232c:	movne	r6, r5
   12330:	movne	r5, r1
   12334:	movne	r4, #0
   12338:	b	1236c <strspn@plt+0x14b4>
   1233c:	mov	r6, r5
   12340:	ldr	r5, [sp, #32]
   12344:	b	1236c <strspn@plt+0x14b4>
   12348:	mov	r6, r5
   1234c:	ldr	r5, [sp, #32]
   12350:	b	1236c <strspn@plt+0x14b4>
   12354:	mov	r6, r5
   12358:	ldr	r5, [sp, #32]
   1235c:	b	1236c <strspn@plt+0x14b4>
   12360:	mov	r6, r5
   12364:	mov	r5, r1
   12368:	mov	r4, #0
   1236c:	ldr	r0, [sp, #28]
   12370:	cmp	r0, #0
   12374:	beq	12388 <strspn@plt+0x14d0>
   12378:	bl	130b8 <strspn@plt+0x2200>
   1237c:	b	12388 <strspn@plt+0x14d0>
   12380:	mov	r6, r5
   12384:	mov	r4, #1
   12388:	ldr	r0, [sp, #144]	; 0x90
   1238c:	add	r3, sp, #152	; 0x98
   12390:	cmp	r0, r3
   12394:	beq	1239c <strspn@plt+0x14e4>
   12398:	bl	125e0 <strspn@plt+0x1728>
   1239c:	add	r3, sp, #3232	; 0xca0
   123a0:	add	r3, r3, #8
   123a4:	ldr	r0, [r3, #-2064]!	; 0xfffff7f0
   123a8:	add	r3, r3, #8
   123ac:	cmp	r0, r3
   123b0:	beq	123b8 <strspn@plt+0x1500>
   123b4:	bl	125e0 <strspn@plt+0x1728>
   123b8:	cmp	r4, #0
   123bc:	beq	123ec <strspn@plt+0x1534>
   123c0:	ldr	r0, [sp, #2208]	; 0x8a0
   123c4:	add	r3, sp, #2208	; 0x8a0
   123c8:	add	r3, r3, #8
   123cc:	cmp	r0, r3
   123d0:	moveq	r0, #0
   123d4:	beq	123e0 <strspn@plt+0x1528>
   123d8:	bl	125e0 <strspn@plt+0x1728>
   123dc:	mov	r0, #0
   123e0:	add	sp, sp, #3232	; 0xca0
   123e4:	add	sp, sp, #12
   123e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123ec:	mov	r3, #0
   123f0:	strb	r3, [r5], #1
   123f4:	sub	r1, r5, r6
   123f8:	add	r0, sp, #2208	; 0x8a0
   123fc:	bl	151cc <strspn@plt+0x4314>
   12400:	cmp	r0, #0
   12404:	bne	123e0 <strspn@plt+0x1528>
   12408:	bl	15e48 <strspn@plt+0x4f90>
   1240c:	andeq	r7, r1, ip, lsr #1
   12410:	andeq	r3, r1, ip, asr #12
   12414:	strdeq	r3, [r1], -r8
   12418:	andeq	r3, r1, r0, asr #11
   1241c:	strheq	r7, [r1], -r8
   12420:	ldr	r3, [pc, #4]	; 1242c <strspn@plt+0x1574>
   12424:	str	r0, [r3]
   12428:	bx	lr
   1242c:	andeq	r8, r2, r4, ror #2
   12430:	ldr	r3, [pc, #4]	; 1243c <strspn@plt+0x1584>
   12434:	strb	r0, [r3, #4]
   12438:	bx	lr
   1243c:	andeq	r8, r2, r4, ror #2
   12440:	push	{r4, r5, r6, lr}
   12444:	sub	sp, sp, #8
   12448:	ldr	r3, [pc, #200]	; 12518 <strspn@plt+0x1660>
   1244c:	ldr	r0, [r3]
   12450:	bl	15f58 <strspn@plt+0x50a0>
   12454:	cmp	r0, #0
   12458:	beq	1247c <strspn@plt+0x15c4>
   1245c:	ldr	r3, [pc, #184]	; 1251c <strspn@plt+0x1664>
   12460:	ldrb	r3, [r3, #4]
   12464:	cmp	r3, #0
   12468:	beq	12498 <strspn@plt+0x15e0>
   1246c:	bl	10df8 <__errno_location@plt>
   12470:	ldr	r3, [r0]
   12474:	cmp	r3, #32
   12478:	bne	12498 <strspn@plt+0x15e0>
   1247c:	ldr	r3, [pc, #156]	; 12520 <strspn@plt+0x1668>
   12480:	ldr	r0, [r3]
   12484:	bl	15f58 <strspn@plt+0x50a0>
   12488:	cmp	r0, #0
   1248c:	bne	1250c <strspn@plt+0x1654>
   12490:	add	sp, sp, #8
   12494:	pop	{r4, r5, r6, pc}
   12498:	mov	r2, #5
   1249c:	ldr	r1, [pc, #128]	; 12524 <strspn@plt+0x166c>
   124a0:	mov	r0, #0
   124a4:	bl	10cf0 <dcgettext@plt>
   124a8:	mov	r4, r0
   124ac:	ldr	r3, [pc, #104]	; 1251c <strspn@plt+0x1664>
   124b0:	ldr	r5, [r3]
   124b4:	cmp	r5, #0
   124b8:	beq	124f0 <strspn@plt+0x1638>
   124bc:	bl	10df8 <__errno_location@plt>
   124c0:	ldr	r6, [r0]
   124c4:	mov	r0, r5
   124c8:	bl	15030 <strspn@plt+0x4178>
   124cc:	str	r4, [sp]
   124d0:	mov	r3, r0
   124d4:	ldr	r2, [pc, #76]	; 12528 <strspn@plt+0x1670>
   124d8:	mov	r1, r6
   124dc:	mov	r0, #0
   124e0:	bl	10d74 <error@plt>
   124e4:	ldr	r3, [pc, #64]	; 1252c <strspn@plt+0x1674>
   124e8:	ldr	r0, [r3]
   124ec:	bl	10cb4 <_exit@plt>
   124f0:	bl	10df8 <__errno_location@plt>
   124f4:	mov	r3, r4
   124f8:	ldr	r2, [pc, #48]	; 12530 <strspn@plt+0x1678>
   124fc:	ldr	r1, [r0]
   12500:	mov	r0, #0
   12504:	bl	10d74 <error@plt>
   12508:	b	124e4 <strspn@plt+0x162c>
   1250c:	ldr	r3, [pc, #24]	; 1252c <strspn@plt+0x1674>
   12510:	ldr	r0, [r3]
   12514:	bl	10cb4 <_exit@plt>
   12518:	andeq	r8, r2, ip, asr #2
   1251c:	andeq	r8, r2, r4, ror #2
   12520:	andeq	r8, r2, r8, asr #2
   12524:	andeq	r7, r1, r8, ror #1
   12528:	strdeq	r7, [r1], -r4
   1252c:	strdeq	r8, [r2], -r0
   12530:	strdeq	r7, [r1], -r8
   12534:	push	{r4, r5, r6, r7, r8, lr}
   12538:	subs	r7, r0, #0
   1253c:	popeq	{r4, r5, r6, r7, r8, pc}
   12540:	mov	r5, r2
   12544:	mov	r6, r1
   12548:	mov	r0, #24
   1254c:	bl	158a4 <strspn@plt+0x49ec>
   12550:	mov	r4, r0
   12554:	mov	r0, r6
   12558:	bl	15e2c <strspn@plt+0x4f74>
   1255c:	str	r0, [r4]
   12560:	ldrd	r2, [r5, #96]	; 0x60
   12564:	strd	r2, [r4, #8]
   12568:	ldrd	r2, [r5]
   1256c:	strd	r2, [r4, #16]
   12570:	mov	r1, r4
   12574:	mov	r0, r7
   12578:	bl	13474 <strspn@plt+0x25bc>
   1257c:	cmp	r0, #0
   12580:	beq	12598 <strspn@plt+0x16e0>
   12584:	cmp	r4, r0
   12588:	popeq	{r4, r5, r6, r7, r8, pc}
   1258c:	mov	r0, r4
   12590:	bl	1364c <strspn@plt+0x2794>
   12594:	pop	{r4, r5, r6, r7, r8, pc}
   12598:	bl	15e48 <strspn@plt+0x4f90>
   1259c:	cmp	r0, #0
   125a0:	beq	125d8 <strspn@plt+0x1720>
   125a4:	push	{r4, r5, lr}
   125a8:	sub	sp, sp, #28
   125ac:	str	r1, [sp]
   125b0:	ldrd	r4, [r2, #96]	; 0x60
   125b4:	strd	r4, [sp, #8]
   125b8:	ldrd	r2, [r2]
   125bc:	strd	r2, [sp, #16]
   125c0:	mov	r1, sp
   125c4:	bl	12c70 <strspn@plt+0x1db8>
   125c8:	adds	r0, r0, #0
   125cc:	movne	r0, #1
   125d0:	add	sp, sp, #28
   125d4:	pop	{r4, r5, pc}
   125d8:	mov	r0, #0
   125dc:	bx	lr
   125e0:	push	{r4, r5, lr}
   125e4:	sub	sp, sp, #12
   125e8:	mov	r5, r0
   125ec:	bl	10df8 <__errno_location@plt>
   125f0:	mov	r4, r0
   125f4:	ldr	r3, [r0]
   125f8:	str	r3, [sp]
   125fc:	str	r3, [sp, #4]
   12600:	mov	r3, #0
   12604:	str	r3, [r0]
   12608:	mov	r0, r5
   1260c:	bl	10c9c <free@plt>
   12610:	ldr	r3, [r4]
   12614:	cmp	r3, #0
   12618:	moveq	r3, #4
   1261c:	movne	r3, #0
   12620:	add	r2, sp, #8
   12624:	add	r3, r2, r3
   12628:	ldr	r3, [r3, #-8]
   1262c:	str	r3, [r4]
   12630:	add	sp, sp, #12
   12634:	pop	{r4, r5, pc}
   12638:	push	{r4, lr}
   1263c:	ror	r0, r0, #3
   12640:	bl	1658c <strspn@plt+0x56d4>
   12644:	mov	r0, r1
   12648:	pop	{r4, pc}
   1264c:	cmp	r1, r0
   12650:	movne	r0, #0
   12654:	moveq	r0, #1
   12658:	bx	lr
   1265c:	ldr	r3, [r0, #20]
   12660:	ldr	r2, [pc, #176]	; 12718 <strspn@plt+0x1860>
   12664:	cmp	r3, r2
   12668:	beq	12700 <strspn@plt+0x1848>
   1266c:	vldr	s15, [r3, #8]
   12670:	vldr	s14, [pc, #144]	; 12708 <strspn@plt+0x1850>
   12674:	vcmpe.f32	s15, s14
   12678:	vmrs	APSR_nzcv, fpscr
   1267c:	ble	126dc <strspn@plt+0x1824>
   12680:	vldr	s14, [pc, #132]	; 1270c <strspn@plt+0x1854>
   12684:	vcmpe.f32	s15, s14
   12688:	vmrs	APSR_nzcv, fpscr
   1268c:	bpl	126dc <strspn@plt+0x1824>
   12690:	vldr	s13, [r3, #12]
   12694:	vldr	s14, [pc, #116]	; 12710 <strspn@plt+0x1858>
   12698:	vcmpe.f32	s13, s14
   1269c:	vmrs	APSR_nzcv, fpscr
   126a0:	ble	126dc <strspn@plt+0x1824>
   126a4:	vldr	s14, [r3]
   126a8:	vcmpe.f32	s14, #0.0
   126ac:	vmrs	APSR_nzcv, fpscr
   126b0:	blt	126dc <strspn@plt+0x1824>
   126b4:	vldr	s13, [pc, #76]	; 12708 <strspn@plt+0x1850>
   126b8:	vadd.f32	s14, s14, s13
   126bc:	vldr	s13, [r3, #4]
   126c0:	vcmpe.f32	s14, s13
   126c4:	vmrs	APSR_nzcv, fpscr
   126c8:	bpl	126dc <strspn@plt+0x1824>
   126cc:	vldr	s12, [pc, #64]	; 12714 <strspn@plt+0x185c>
   126d0:	vcmpe.f32	s13, s12
   126d4:	vmrs	APSR_nzcv, fpscr
   126d8:	bls	126ec <strspn@plt+0x1834>
   126dc:	ldr	r3, [pc, #52]	; 12718 <strspn@plt+0x1860>
   126e0:	str	r3, [r0, #20]
   126e4:	mov	r0, #0
   126e8:	bx	lr
   126ec:	vcmpe.f32	s15, s14
   126f0:	vmrs	APSR_nzcv, fpscr
   126f4:	ble	126dc <strspn@plt+0x1824>
   126f8:	mov	r0, #1
   126fc:	bx	lr
   12700:	mov	r0, #1
   12704:	bx	lr
   12708:	stclcc	12, cr12, [ip, #820]	; 0x334
   1270c:	svccc	0x00666666
   12710:	svccc	0x008ccccd
   12714:	svccc	0x00800000
   12718:	strdeq	r7, [r1], -ip
   1271c:	push	{r4, lr}
   12720:	mov	r4, r0
   12724:	mov	r0, r1
   12728:	ldr	r3, [r4, #24]
   1272c:	ldr	r1, [r4, #8]
   12730:	blx	r3
   12734:	ldr	r3, [r4, #8]
   12738:	cmp	r0, r3
   1273c:	bcs	1274c <strspn@plt+0x1894>
   12740:	ldr	r3, [r4]
   12744:	add	r0, r3, r0, lsl #3
   12748:	pop	{r4, pc}
   1274c:	bl	10eac <abort@plt>
   12750:	push	{r4, r5, r6, r7, r8, lr}
   12754:	ldrb	r3, [r1, #16]
   12758:	cmp	r3, #0
   1275c:	bne	1278c <strspn@plt+0x18d4>
   12760:	vmov	s15, r0
   12764:	vcvt.f32.u32	s13, s15
   12768:	vldr	s14, [r1, #8]
   1276c:	vdiv.f32	s15, s13, s14
   12770:	vldr	s14, [pc, #204]	; 12844 <strspn@plt+0x198c>
   12774:	vcmpe.f32	s15, s14
   12778:	vmrs	APSR_nzcv, fpscr
   1277c:	movge	r7, #0
   12780:	bge	127c4 <strspn@plt+0x190c>
   12784:	vcvt.u32.f32	s15, s15
   12788:	vmov	r0, s15
   1278c:	cmp	r0, #10
   12790:	movcc	r0, #10
   12794:	orr	r7, r0, #1
   12798:	cmn	r7, #1
   1279c:	ldrne	r8, [pc, #164]	; 12848 <strspn@plt+0x1990>
   127a0:	bne	127f0 <strspn@plt+0x1938>
   127a4:	lsr	r3, r7, #30
   127a8:	lsl	r2, r7, #2
   127ac:	adds	r3, r3, #0
   127b0:	movne	r3, #1
   127b4:	cmp	r2, #0
   127b8:	movlt	r3, #1
   127bc:	cmp	r3, #0
   127c0:	movne	r7, #0
   127c4:	mov	r0, r7
   127c8:	pop	{r4, r5, r6, r7, r8, pc}
   127cc:	mov	r4, #3
   127d0:	mov	r1, r4
   127d4:	mov	r0, r7
   127d8:	bl	1658c <strspn@plt+0x56d4>
   127dc:	cmp	r1, #0
   127e0:	bne	127a4 <strspn@plt+0x18ec>
   127e4:	add	r7, r7, #2
   127e8:	cmn	r7, #1
   127ec:	beq	127a4 <strspn@plt+0x18ec>
   127f0:	cmp	r7, #9
   127f4:	bls	127cc <strspn@plt+0x1914>
   127f8:	umull	r2, r3, r8, r7
   127fc:	lsr	r3, r3, #1
   12800:	add	r3, r3, r3, lsl #1
   12804:	cmp	r7, r3
   12808:	beq	127e4 <strspn@plt+0x192c>
   1280c:	mov	r6, #16
   12810:	mov	r5, #9
   12814:	mov	r4, #3
   12818:	add	r5, r5, r6
   1281c:	add	r4, r4, #2
   12820:	cmp	r5, r7
   12824:	bcs	127d0 <strspn@plt+0x1918>
   12828:	add	r6, r6, #8
   1282c:	mov	r1, r4
   12830:	mov	r0, r7
   12834:	bl	1658c <strspn@plt+0x56d4>
   12838:	cmp	r1, #0
   1283c:	bne	12818 <strspn@plt+0x1960>
   12840:	b	127e4 <strspn@plt+0x192c>
   12844:	svcmi	0x00800000
   12848:	bge	feabd2fc <optarg@@GLIBC_2.4+0xfea951ac>
   1284c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12850:	ldr	r7, [r1]
   12854:	ldr	r3, [r1, #4]
   12858:	cmp	r7, r3
   1285c:	bcs	12990 <strspn@plt+0x1ad8>
   12860:	mov	fp, r2
   12864:	mov	sl, r1
   12868:	mov	r6, r0
   1286c:	add	r7, r7, #8
   12870:	mov	r9, #0
   12874:	b	128dc <strspn@plt+0x1a24>
   12878:	str	r5, [r0]
   1287c:	ldr	r2, [r6, #12]
   12880:	add	r2, r2, #1
   12884:	str	r2, [r6, #12]
   12888:	str	r9, [r4]
   1288c:	ldr	r2, [r6, #36]	; 0x24
   12890:	str	r2, [r4, #4]
   12894:	str	r4, [r6, #36]	; 0x24
   12898:	b	12924 <strspn@plt+0x1a6c>
   1289c:	mov	r0, #8
   128a0:	bl	15ed8 <strspn@plt+0x5020>
   128a4:	cmp	r0, #0
   128a8:	beq	12998 <strspn@plt+0x1ae0>
   128ac:	str	r4, [r0]
   128b0:	ldr	r3, [r5, #4]
   128b4:	str	r3, [r0, #4]
   128b8:	str	r0, [r5, #4]
   128bc:	str	r9, [r8, #-8]
   128c0:	ldr	r3, [sl, #12]
   128c4:	sub	r3, r3, #1
   128c8:	str	r3, [sl, #12]
   128cc:	add	r7, r7, #8
   128d0:	ldr	r3, [sl, #4]
   128d4:	cmp	r3, r8
   128d8:	bls	12988 <strspn@plt+0x1ad0>
   128dc:	mov	r8, r7
   128e0:	ldr	r3, [r7, #-8]
   128e4:	cmp	r3, #0
   128e8:	beq	128cc <strspn@plt+0x1a14>
   128ec:	ldr	r4, [r7, #-4]
   128f0:	cmp	r4, #0
   128f4:	beq	12930 <strspn@plt+0x1a78>
   128f8:	ldr	r5, [r4]
   128fc:	mov	r1, r5
   12900:	mov	r0, r6
   12904:	bl	1271c <strspn@plt+0x1864>
   12908:	ldr	r3, [r4, #4]
   1290c:	ldr	r2, [r0]
   12910:	cmp	r2, #0
   12914:	beq	12878 <strspn@plt+0x19c0>
   12918:	ldr	r2, [r0, #4]
   1291c:	str	r2, [r4, #4]
   12920:	str	r4, [r0, #4]
   12924:	mov	r4, r3
   12928:	cmp	r3, #0
   1292c:	bne	128f8 <strspn@plt+0x1a40>
   12930:	ldr	r4, [r8, #-8]
   12934:	str	r9, [r8, #-4]
   12938:	cmp	fp, #0
   1293c:	bne	128cc <strspn@plt+0x1a14>
   12940:	mov	r1, r4
   12944:	mov	r0, r6
   12948:	bl	1271c <strspn@plt+0x1864>
   1294c:	mov	r5, r0
   12950:	ldr	r3, [r0]
   12954:	cmp	r3, #0
   12958:	beq	12974 <strspn@plt+0x1abc>
   1295c:	ldr	r0, [r6, #36]	; 0x24
   12960:	cmp	r0, #0
   12964:	beq	1289c <strspn@plt+0x19e4>
   12968:	ldr	r3, [r0, #4]
   1296c:	str	r3, [r6, #36]	; 0x24
   12970:	b	128ac <strspn@plt+0x19f4>
   12974:	str	r4, [r0]
   12978:	ldr	r3, [r6, #12]
   1297c:	add	r3, r3, #1
   12980:	str	r3, [r6, #12]
   12984:	b	128bc <strspn@plt+0x1a04>
   12988:	mov	r0, #1
   1298c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12990:	mov	r0, #1
   12994:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12998:	mov	r0, fp
   1299c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129a0:	push	{r4, r5, r6, r7, r8, lr}
   129a4:	mov	r6, r0
   129a8:	mov	r5, r1
   129ac:	mov	r8, r2
   129b0:	mov	r7, r3
   129b4:	bl	1271c <strspn@plt+0x1864>
   129b8:	str	r0, [r8]
   129bc:	ldr	r3, [r0]
   129c0:	cmp	r3, #0
   129c4:	beq	12a9c <strspn@plt+0x1be4>
   129c8:	mov	r4, r0
   129cc:	cmp	r5, r3
   129d0:	beq	12a64 <strspn@plt+0x1bac>
   129d4:	ldr	r2, [r6, #28]
   129d8:	mov	r1, r3
   129dc:	mov	r0, r5
   129e0:	blx	r2
   129e4:	cmp	r0, #0
   129e8:	bne	12a64 <strspn@plt+0x1bac>
   129ec:	ldr	r3, [r4, #4]
   129f0:	cmp	r3, #0
   129f4:	beq	12aa4 <strspn@plt+0x1bec>
   129f8:	ldr	r1, [r3]
   129fc:	cmp	r5, r1
   12a00:	beq	12a34 <strspn@plt+0x1b7c>
   12a04:	ldr	r3, [r6, #28]
   12a08:	mov	r0, r5
   12a0c:	blx	r3
   12a10:	cmp	r0, #0
   12a14:	bne	12a34 <strspn@plt+0x1b7c>
   12a18:	ldr	r4, [r4, #4]
   12a1c:	ldr	r3, [r4, #4]
   12a20:	cmp	r3, #0
   12a24:	beq	12a9c <strspn@plt+0x1be4>
   12a28:	ldr	r1, [r3]
   12a2c:	cmp	r5, r1
   12a30:	bne	12a04 <strspn@plt+0x1b4c>
   12a34:	ldr	r2, [r4, #4]
   12a38:	ldr	r3, [r2]
   12a3c:	cmp	r7, #0
   12a40:	beq	12a9c <strspn@plt+0x1be4>
   12a44:	ldr	r1, [r2, #4]
   12a48:	str	r1, [r4, #4]
   12a4c:	mov	r1, #0
   12a50:	str	r1, [r2]
   12a54:	ldr	r1, [r6, #36]	; 0x24
   12a58:	str	r1, [r2, #4]
   12a5c:	str	r2, [r6, #36]	; 0x24
   12a60:	b	12a9c <strspn@plt+0x1be4>
   12a64:	ldr	r3, [r4]
   12a68:	cmp	r7, #0
   12a6c:	beq	12a9c <strspn@plt+0x1be4>
   12a70:	ldr	r2, [r4, #4]
   12a74:	cmp	r2, #0
   12a78:	ldmne	r2, {r0, r1}
   12a7c:	stmne	r4, {r0, r1}
   12a80:	movne	r1, #0
   12a84:	strne	r1, [r2]
   12a88:	ldrne	r1, [r6, #36]	; 0x24
   12a8c:	strne	r1, [r2, #4]
   12a90:	strne	r2, [r6, #36]	; 0x24
   12a94:	moveq	r2, #0
   12a98:	streq	r2, [r4]
   12a9c:	mov	r0, r3
   12aa0:	pop	{r4, r5, r6, r7, r8, pc}
   12aa4:	mov	r3, #0
   12aa8:	b	12a9c <strspn@plt+0x1be4>
   12aac:	ldr	r0, [r0, #8]
   12ab0:	bx	lr
   12ab4:	ldr	r0, [r0, #12]
   12ab8:	bx	lr
   12abc:	ldr	r0, [r0, #16]
   12ac0:	bx	lr
   12ac4:	ldr	r1, [r0]
   12ac8:	ldr	ip, [r0, #4]
   12acc:	cmp	r1, ip
   12ad0:	bcs	12b28 <strspn@plt+0x1c70>
   12ad4:	mov	r0, #0
   12ad8:	b	12af4 <strspn@plt+0x1c3c>
   12adc:	mov	r2, #1
   12ae0:	cmp	r0, r2
   12ae4:	movcc	r0, r2
   12ae8:	add	r1, r1, #8
   12aec:	cmp	r1, ip
   12af0:	bcs	12b24 <strspn@plt+0x1c6c>
   12af4:	ldr	r3, [r1]
   12af8:	cmp	r3, #0
   12afc:	beq	12ae8 <strspn@plt+0x1c30>
   12b00:	ldr	r3, [r1, #4]
   12b04:	cmp	r3, #0
   12b08:	beq	12adc <strspn@plt+0x1c24>
   12b0c:	mov	r2, #1
   12b10:	add	r2, r2, #1
   12b14:	ldr	r3, [r3, #4]
   12b18:	cmp	r3, #0
   12b1c:	bne	12b10 <strspn@plt+0x1c58>
   12b20:	b	12ae0 <strspn@plt+0x1c28>
   12b24:	bx	lr
   12b28:	mov	r0, #0
   12b2c:	bx	lr
   12b30:	push	{lr}		; (str lr, [sp, #-4]!)
   12b34:	ldr	r1, [r0]
   12b38:	ldr	lr, [r0, #4]
   12b3c:	cmp	r1, lr
   12b40:	bcs	12b90 <strspn@plt+0x1cd8>
   12b44:	mov	r2, #0
   12b48:	mov	ip, r2
   12b4c:	b	12b5c <strspn@plt+0x1ca4>
   12b50:	add	r1, r1, #8
   12b54:	cmp	r1, lr
   12b58:	bcs	12b98 <strspn@plt+0x1ce0>
   12b5c:	ldr	r3, [r1]
   12b60:	cmp	r3, #0
   12b64:	beq	12b50 <strspn@plt+0x1c98>
   12b68:	add	ip, ip, #1
   12b6c:	add	r2, r2, #1
   12b70:	ldr	r3, [r1, #4]
   12b74:	cmp	r3, #0
   12b78:	beq	12b50 <strspn@plt+0x1c98>
   12b7c:	add	r2, r2, #1
   12b80:	ldr	r3, [r3, #4]
   12b84:	cmp	r3, #0
   12b88:	bne	12b7c <strspn@plt+0x1cc4>
   12b8c:	b	12b50 <strspn@plt+0x1c98>
   12b90:	mov	r2, #0
   12b94:	mov	ip, r2
   12b98:	ldr	r3, [r0, #12]
   12b9c:	cmp	r3, ip
   12ba0:	beq	12bac <strspn@plt+0x1cf4>
   12ba4:	mov	r0, #0
   12ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bac:	ldr	r0, [r0, #16]
   12bb0:	cmp	r0, r2
   12bb4:	movne	r0, #0
   12bb8:	moveq	r0, #1
   12bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12bc0:	push	{r4, r5, r6, r7, r8, lr}
   12bc4:	sub	sp, sp, #8
   12bc8:	mov	r6, r0
   12bcc:	mov	r4, r1
   12bd0:	ldr	r5, [r0, #8]
   12bd4:	ldr	r7, [r0, #12]
   12bd8:	bl	12ac4 <strspn@plt+0x1c0c>
   12bdc:	mov	r8, r0
   12be0:	ldr	r3, [r6, #16]
   12be4:	ldr	r2, [pc, #116]	; 12c60 <strspn@plt+0x1da8>
   12be8:	mov	r1, #1
   12bec:	mov	r0, r4
   12bf0:	bl	10e34 <__fprintf_chk@plt>
   12bf4:	mov	r3, r5
   12bf8:	ldr	r2, [pc, #100]	; 12c64 <strspn@plt+0x1dac>
   12bfc:	mov	r1, #1
   12c00:	mov	r0, r4
   12c04:	bl	10e34 <__fprintf_chk@plt>
   12c08:	vmov	s15, r7
   12c0c:	vcvt.f64.u32	d6, s15
   12c10:	vldr	d7, [pc, #64]	; 12c58 <strspn@plt+0x1da0>
   12c14:	vmul.f64	d6, d6, d7
   12c18:	vmov	s15, r5
   12c1c:	vcvt.f64.u32	d7, s15
   12c20:	vdiv.f64	d5, d6, d7
   12c24:	vstr	d5, [sp]
   12c28:	mov	r3, r7
   12c2c:	ldr	r2, [pc, #52]	; 12c68 <strspn@plt+0x1db0>
   12c30:	mov	r1, #1
   12c34:	mov	r0, r4
   12c38:	bl	10e34 <__fprintf_chk@plt>
   12c3c:	mov	r3, r8
   12c40:	ldr	r2, [pc, #36]	; 12c6c <strspn@plt+0x1db4>
   12c44:	mov	r1, #1
   12c48:	mov	r0, r4
   12c4c:	bl	10e34 <__fprintf_chk@plt>
   12c50:	add	sp, sp, #8
   12c54:	pop	{r4, r5, r6, r7, r8, pc}
   12c58:	andeq	r0, r0, r0
   12c5c:	subsmi	r0, r9, r0
   12c60:	andeq	r7, r1, r0, lsl r1
   12c64:	andeq	r7, r1, r8, lsr #2
   12c68:	andeq	r7, r1, r0, asr #2
   12c6c:	andeq	r7, r1, r4, ror #2
   12c70:	push	{r4, r5, r6, lr}
   12c74:	mov	r6, r0
   12c78:	mov	r5, r1
   12c7c:	bl	1271c <strspn@plt+0x1864>
   12c80:	ldr	r1, [r0]
   12c84:	cmp	r1, #0
   12c88:	beq	12cdc <strspn@plt+0x1e24>
   12c8c:	mov	r4, r0
   12c90:	cmp	r0, #0
   12c94:	beq	12ce4 <strspn@plt+0x1e2c>
   12c98:	cmp	r5, r1
   12c9c:	beq	12ccc <strspn@plt+0x1e14>
   12ca0:	ldr	r3, [r6, #28]
   12ca4:	mov	r0, r5
   12ca8:	blx	r3
   12cac:	cmp	r0, #0
   12cb0:	bne	12ccc <strspn@plt+0x1e14>
   12cb4:	ldr	r4, [r4, #4]
   12cb8:	cmp	r4, #0
   12cbc:	beq	12cd4 <strspn@plt+0x1e1c>
   12cc0:	ldr	r1, [r4]
   12cc4:	cmp	r5, r1
   12cc8:	bne	12ca0 <strspn@plt+0x1de8>
   12ccc:	ldr	r0, [r4]
   12cd0:	pop	{r4, r5, r6, pc}
   12cd4:	mov	r0, #0
   12cd8:	pop	{r4, r5, r6, pc}
   12cdc:	mov	r0, #0
   12ce0:	pop	{r4, r5, r6, pc}
   12ce4:	mov	r0, #0
   12ce8:	pop	{r4, r5, r6, pc}
   12cec:	ldr	r3, [r0, #16]
   12cf0:	cmp	r3, #0
   12cf4:	beq	12d38 <strspn@plt+0x1e80>
   12cf8:	ldr	r3, [r0]
   12cfc:	ldr	r2, [r0, #4]
   12d00:	cmp	r3, r2
   12d04:	bcs	12d30 <strspn@plt+0x1e78>
   12d08:	ldr	r0, [r3]
   12d0c:	cmp	r0, #0
   12d10:	bne	12d2c <strspn@plt+0x1e74>
   12d14:	add	r3, r3, #8
   12d18:	cmp	r3, r2
   12d1c:	bcs	12d30 <strspn@plt+0x1e78>
   12d20:	ldr	r0, [r3]
   12d24:	cmp	r0, #0
   12d28:	beq	12d14 <strspn@plt+0x1e5c>
   12d2c:	bx	lr
   12d30:	push	{r4, lr}
   12d34:	bl	10eac <abort@plt>
   12d38:	mov	r0, #0
   12d3c:	b	12d2c <strspn@plt+0x1e74>
   12d40:	push	{r4, r5, r6, lr}
   12d44:	mov	r5, r0
   12d48:	mov	r4, r1
   12d4c:	bl	1271c <strspn@plt+0x1864>
   12d50:	mov	r2, r0
   12d54:	mov	r3, r0
   12d58:	ldr	r1, [r3]
   12d5c:	cmp	r4, r1
   12d60:	beq	12d74 <strspn@plt+0x1ebc>
   12d64:	ldr	r3, [r3, #4]
   12d68:	cmp	r3, #0
   12d6c:	bne	12d58 <strspn@plt+0x1ea0>
   12d70:	b	12d80 <strspn@plt+0x1ec8>
   12d74:	ldr	r3, [r3, #4]
   12d78:	cmp	r3, #0
   12d7c:	bne	12da0 <strspn@plt+0x1ee8>
   12d80:	ldr	r3, [r5, #4]
   12d84:	add	r2, r2, #8
   12d88:	cmp	r2, r3
   12d8c:	bcs	12da8 <strspn@plt+0x1ef0>
   12d90:	ldr	r0, [r2]
   12d94:	cmp	r0, #0
   12d98:	beq	12d84 <strspn@plt+0x1ecc>
   12d9c:	pop	{r4, r5, r6, pc}
   12da0:	ldr	r0, [r3]
   12da4:	pop	{r4, r5, r6, pc}
   12da8:	mov	r0, #0
   12dac:	pop	{r4, r5, r6, pc}
   12db0:	push	{r4, r5, lr}
   12db4:	ldr	r4, [r0]
   12db8:	ldr	r3, [r0, #4]
   12dbc:	cmp	r4, r3
   12dc0:	bcs	12e2c <strspn@plt+0x1f74>
   12dc4:	mov	r5, r0
   12dc8:	mov	r0, #0
   12dcc:	b	12de0 <strspn@plt+0x1f28>
   12dd0:	add	r4, r4, #8
   12dd4:	ldr	r3, [r5, #4]
   12dd8:	cmp	r3, r4
   12ddc:	bls	12e28 <strspn@plt+0x1f70>
   12de0:	ldr	r3, [r4]
   12de4:	cmp	r3, #0
   12de8:	beq	12dd0 <strspn@plt+0x1f18>
   12dec:	cmp	r4, #0
   12df0:	beq	12dd0 <strspn@plt+0x1f18>
   12df4:	cmp	r2, r0
   12df8:	popls	{r4, r5, pc}
   12dfc:	add	ip, r1, r0, lsl #2
   12e00:	mov	r3, r4
   12e04:	add	r0, r0, #1
   12e08:	ldr	lr, [r3]
   12e0c:	str	lr, [ip], #4
   12e10:	ldr	r3, [r3, #4]
   12e14:	cmp	r3, #0
   12e18:	beq	12dd0 <strspn@plt+0x1f18>
   12e1c:	cmp	r2, r0
   12e20:	bne	12e04 <strspn@plt+0x1f4c>
   12e24:	pop	{r4, r5, pc}
   12e28:	pop	{r4, r5, pc}
   12e2c:	mov	r0, #0
   12e30:	pop	{r4, r5, pc}
   12e34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e38:	ldr	r8, [r0]
   12e3c:	ldr	r3, [r0, #4]
   12e40:	cmp	r8, r3
   12e44:	bcs	12eac <strspn@plt+0x1ff4>
   12e48:	mov	r7, r2
   12e4c:	mov	r6, r1
   12e50:	mov	r9, r0
   12e54:	mov	r5, #0
   12e58:	b	12e6c <strspn@plt+0x1fb4>
   12e5c:	add	r8, r8, #8
   12e60:	ldr	r3, [r9, #4]
   12e64:	cmp	r3, r8
   12e68:	bls	12eb0 <strspn@plt+0x1ff8>
   12e6c:	ldr	r3, [r8]
   12e70:	cmp	r3, #0
   12e74:	beq	12e5c <strspn@plt+0x1fa4>
   12e78:	cmp	r8, #0
   12e7c:	beq	12e5c <strspn@plt+0x1fa4>
   12e80:	mov	r4, r8
   12e84:	mov	r1, r7
   12e88:	ldr	r0, [r4]
   12e8c:	blx	r6
   12e90:	cmp	r0, #0
   12e94:	beq	12eb0 <strspn@plt+0x1ff8>
   12e98:	add	r5, r5, #1
   12e9c:	ldr	r4, [r4, #4]
   12ea0:	cmp	r4, #0
   12ea4:	bne	12e84 <strspn@plt+0x1fcc>
   12ea8:	b	12e5c <strspn@plt+0x1fa4>
   12eac:	mov	r5, #0
   12eb0:	mov	r0, r5
   12eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12eb8:	ldrb	r3, [r0]
   12ebc:	cmp	r3, #0
   12ec0:	beq	12ef8 <strspn@plt+0x2040>
   12ec4:	push	{r4, r5, r6, lr}
   12ec8:	mov	r4, r0
   12ecc:	mov	r5, r1
   12ed0:	mov	r1, #0
   12ed4:	rsb	r0, r1, r1, lsl #5
   12ed8:	mov	r1, r5
   12edc:	add	r0, r0, r3
   12ee0:	bl	1658c <strspn@plt+0x56d4>
   12ee4:	ldrb	r3, [r4, #1]!
   12ee8:	cmp	r3, #0
   12eec:	bne	12ed4 <strspn@plt+0x201c>
   12ef0:	mov	r0, r1
   12ef4:	pop	{r4, r5, r6, pc}
   12ef8:	mov	r1, #0
   12efc:	mov	r0, r1
   12f00:	bx	lr
   12f04:	push	{lr}		; (str lr, [sp, #-4]!)
   12f08:	mov	ip, r0
   12f0c:	ldr	lr, [pc, #16]	; 12f24 <strspn@plt+0x206c>
   12f10:	ldm	lr!, {r0, r1, r2, r3}
   12f14:	stmia	ip!, {r0, r1, r2, r3}
   12f18:	ldr	r3, [lr]
   12f1c:	str	r3, [ip]
   12f20:	pop	{pc}		; (ldr pc, [sp], #4)
   12f24:	strdeq	r7, [r1], -ip
   12f28:	push	{r4, r5, r6, r7, r8, lr}
   12f2c:	mov	r8, r0
   12f30:	mov	r5, r1
   12f34:	subs	r7, r2, #0
   12f38:	ldr	r2, [pc, #180]	; 12ff4 <strspn@plt+0x213c>
   12f3c:	cmp	r7, #0
   12f40:	moveq	r7, r2
   12f44:	subs	r6, r3, #0
   12f48:	ldr	r3, [pc, #168]	; 12ff8 <strspn@plt+0x2140>
   12f4c:	cmp	r6, #0
   12f50:	moveq	r6, r3
   12f54:	mov	r0, #40	; 0x28
   12f58:	bl	15ed8 <strspn@plt+0x5020>
   12f5c:	subs	r4, r0, #0
   12f60:	beq	12fdc <strspn@plt+0x2124>
   12f64:	ldr	r3, [pc, #144]	; 12ffc <strspn@plt+0x2144>
   12f68:	cmp	r5, #0
   12f6c:	moveq	r5, r3
   12f70:	str	r5, [r4, #20]
   12f74:	mov	r0, r4
   12f78:	bl	1265c <strspn@plt+0x17a4>
   12f7c:	cmp	r0, #0
   12f80:	beq	12fe4 <strspn@plt+0x212c>
   12f84:	mov	r1, r5
   12f88:	mov	r0, r8
   12f8c:	bl	12750 <strspn@plt+0x1898>
   12f90:	str	r0, [r4, #8]
   12f94:	cmp	r0, #0
   12f98:	beq	12fe4 <strspn@plt+0x212c>
   12f9c:	mov	r1, #8
   12fa0:	bl	15e88 <strspn@plt+0x4fd0>
   12fa4:	str	r0, [r4]
   12fa8:	cmp	r0, #0
   12fac:	beq	12fe4 <strspn@plt+0x212c>
   12fb0:	ldr	r3, [r4, #8]
   12fb4:	add	r0, r0, r3, lsl #3
   12fb8:	str	r0, [r4, #4]
   12fbc:	mov	r3, #0
   12fc0:	str	r3, [r4, #12]
   12fc4:	str	r3, [r4, #16]
   12fc8:	str	r7, [r4, #24]
   12fcc:	str	r6, [r4, #28]
   12fd0:	ldr	r2, [sp, #24]
   12fd4:	str	r2, [r4, #32]
   12fd8:	str	r3, [r4, #36]	; 0x24
   12fdc:	mov	r0, r4
   12fe0:	pop	{r4, r5, r6, r7, r8, pc}
   12fe4:	mov	r0, r4
   12fe8:	bl	125e0 <strspn@plt+0x1728>
   12fec:	mov	r4, #0
   12ff0:	b	12fdc <strspn@plt+0x2124>
   12ff4:	andeq	r2, r1, r8, lsr r6
   12ff8:	andeq	r2, r1, ip, asr #12
   12ffc:	strdeq	r7, [r1], -ip
   13000:	push	{r4, r5, r6, r7, r8, lr}
   13004:	mov	r5, r0
   13008:	ldr	r7, [r0]
   1300c:	ldr	r3, [r0, #4]
   13010:	cmp	r7, r3
   13014:	bcs	130a8 <strspn@plt+0x21f0>
   13018:	add	r7, r7, #8
   1301c:	mov	r6, #0
   13020:	b	13088 <strspn@plt+0x21d0>
   13024:	str	r6, [r4]
   13028:	ldr	r3, [r4, #4]
   1302c:	ldr	r2, [r5, #36]	; 0x24
   13030:	str	r2, [r4, #4]
   13034:	str	r4, [r5, #36]	; 0x24
   13038:	mov	r4, r3
   1303c:	cmp	r3, #0
   13040:	beq	1305c <strspn@plt+0x21a4>
   13044:	ldr	r3, [r5, #32]
   13048:	cmp	r3, #0
   1304c:	beq	13024 <strspn@plt+0x216c>
   13050:	ldr	r0, [r4]
   13054:	blx	r3
   13058:	b	13024 <strspn@plt+0x216c>
   1305c:	ldr	r3, [r5, #32]
   13060:	cmp	r3, #0
   13064:	beq	13070 <strspn@plt+0x21b8>
   13068:	ldr	r0, [r8, #-8]
   1306c:	blx	r3
   13070:	str	r6, [r8, #-8]
   13074:	str	r6, [r8, #-4]
   13078:	add	r7, r7, #8
   1307c:	ldr	r3, [r5, #4]
   13080:	cmp	r3, r8
   13084:	bls	130a8 <strspn@plt+0x21f0>
   13088:	mov	r8, r7
   1308c:	ldr	r3, [r7, #-8]
   13090:	cmp	r3, #0
   13094:	beq	13078 <strspn@plt+0x21c0>
   13098:	ldr	r4, [r7, #-4]
   1309c:	cmp	r4, #0
   130a0:	bne	13044 <strspn@plt+0x218c>
   130a4:	b	1305c <strspn@plt+0x21a4>
   130a8:	mov	r3, #0
   130ac:	str	r3, [r5, #12]
   130b0:	str	r3, [r5, #16]
   130b4:	pop	{r4, r5, r6, r7, r8, pc}
   130b8:	push	{r4, r5, r6, lr}
   130bc:	mov	r5, r0
   130c0:	ldr	r3, [r0, #32]
   130c4:	cmp	r3, #0
   130c8:	beq	13130 <strspn@plt+0x2278>
   130cc:	ldr	r3, [r0, #16]
   130d0:	cmp	r3, #0
   130d4:	beq	13130 <strspn@plt+0x2278>
   130d8:	ldr	r6, [r0]
   130dc:	ldr	r3, [r0, #4]
   130e0:	cmp	r6, r3
   130e4:	bcc	130fc <strspn@plt+0x2244>
   130e8:	b	13170 <strspn@plt+0x22b8>
   130ec:	add	r6, r6, #8
   130f0:	ldr	r3, [r5, #4]
   130f4:	cmp	r3, r6
   130f8:	bls	13130 <strspn@plt+0x2278>
   130fc:	ldr	r3, [r6]
   13100:	cmp	r3, #0
   13104:	beq	130ec <strspn@plt+0x2234>
   13108:	cmp	r6, #0
   1310c:	beq	130ec <strspn@plt+0x2234>
   13110:	mov	r4, r6
   13114:	ldr	r3, [r5, #32]
   13118:	ldr	r0, [r4]
   1311c:	blx	r3
   13120:	ldr	r4, [r4, #4]
   13124:	cmp	r4, #0
   13128:	bne	13114 <strspn@plt+0x225c>
   1312c:	b	130ec <strspn@plt+0x2234>
   13130:	ldr	r6, [r5]
   13134:	ldr	r3, [r5, #4]
   13138:	cmp	r6, r3
   1313c:	bcs	13170 <strspn@plt+0x22b8>
   13140:	ldr	r0, [r6, #4]
   13144:	cmp	r0, #0
   13148:	beq	13160 <strspn@plt+0x22a8>
   1314c:	ldr	r4, [r0, #4]
   13150:	bl	125e0 <strspn@plt+0x1728>
   13154:	mov	r0, r4
   13158:	cmp	r4, #0
   1315c:	bne	1314c <strspn@plt+0x2294>
   13160:	add	r6, r6, #8
   13164:	ldr	r3, [r5, #4]
   13168:	cmp	r3, r6
   1316c:	bhi	13140 <strspn@plt+0x2288>
   13170:	ldr	r0, [r5, #36]	; 0x24
   13174:	cmp	r0, #0
   13178:	beq	13190 <strspn@plt+0x22d8>
   1317c:	ldr	r4, [r0, #4]
   13180:	bl	125e0 <strspn@plt+0x1728>
   13184:	mov	r0, r4
   13188:	cmp	r4, #0
   1318c:	bne	1317c <strspn@plt+0x22c4>
   13190:	ldr	r0, [r5]
   13194:	bl	125e0 <strspn@plt+0x1728>
   13198:	mov	r0, r5
   1319c:	bl	125e0 <strspn@plt+0x1728>
   131a0:	pop	{r4, r5, r6, pc}
   131a4:	push	{r4, r5, lr}
   131a8:	sub	sp, sp, #44	; 0x2c
   131ac:	mov	r4, r0
   131b0:	mov	r0, r1
   131b4:	ldr	r1, [r4, #20]
   131b8:	bl	12750 <strspn@plt+0x1898>
   131bc:	subs	r5, r0, #0
   131c0:	beq	132b8 <strspn@plt+0x2400>
   131c4:	ldr	r3, [r4, #8]
   131c8:	cmp	r5, r3
   131cc:	beq	132c8 <strspn@plt+0x2410>
   131d0:	mov	r1, #8
   131d4:	mov	r0, r5
   131d8:	bl	15e88 <strspn@plt+0x4fd0>
   131dc:	str	r0, [sp]
   131e0:	cmp	r0, #0
   131e4:	beq	132d0 <strspn@plt+0x2418>
   131e8:	str	r5, [sp, #8]
   131ec:	add	r0, r0, r5, lsl #3
   131f0:	str	r0, [sp, #4]
   131f4:	mov	r2, #0
   131f8:	str	r2, [sp, #12]
   131fc:	str	r2, [sp, #16]
   13200:	ldr	r3, [r4, #20]
   13204:	str	r3, [sp, #20]
   13208:	ldr	r3, [r4, #24]
   1320c:	str	r3, [sp, #24]
   13210:	ldr	r3, [r4, #28]
   13214:	str	r3, [sp, #28]
   13218:	ldr	r3, [r4, #32]
   1321c:	str	r3, [sp, #32]
   13220:	ldr	r3, [r4, #36]	; 0x24
   13224:	str	r3, [sp, #36]	; 0x24
   13228:	mov	r1, r4
   1322c:	mov	r0, sp
   13230:	bl	1284c <strspn@plt+0x1994>
   13234:	subs	r5, r0, #0
   13238:	bne	13280 <strspn@plt+0x23c8>
   1323c:	ldr	r3, [sp, #36]	; 0x24
   13240:	str	r3, [r4, #36]	; 0x24
   13244:	mov	r2, #1
   13248:	mov	r1, sp
   1324c:	mov	r0, r4
   13250:	bl	1284c <strspn@plt+0x1994>
   13254:	cmp	r0, #0
   13258:	beq	132b4 <strspn@plt+0x23fc>
   1325c:	mov	r2, #0
   13260:	mov	r1, sp
   13264:	mov	r0, r4
   13268:	bl	1284c <strspn@plt+0x1994>
   1326c:	cmp	r0, #0
   13270:	beq	132b4 <strspn@plt+0x23fc>
   13274:	ldr	r0, [sp]
   13278:	bl	125e0 <strspn@plt+0x1728>
   1327c:	b	132bc <strspn@plt+0x2404>
   13280:	ldr	r0, [r4]
   13284:	bl	125e0 <strspn@plt+0x1728>
   13288:	ldr	r3, [sp]
   1328c:	str	r3, [r4]
   13290:	ldr	r3, [sp, #4]
   13294:	str	r3, [r4, #4]
   13298:	ldr	r3, [sp, #8]
   1329c:	str	r3, [r4, #8]
   132a0:	ldr	r3, [sp, #12]
   132a4:	str	r3, [r4, #12]
   132a8:	ldr	r3, [sp, #36]	; 0x24
   132ac:	str	r3, [r4, #36]	; 0x24
   132b0:	b	132bc <strspn@plt+0x2404>
   132b4:	bl	10eac <abort@plt>
   132b8:	mov	r5, #0
   132bc:	mov	r0, r5
   132c0:	add	sp, sp, #44	; 0x2c
   132c4:	pop	{r4, r5, pc}
   132c8:	mov	r5, #1
   132cc:	b	132bc <strspn@plt+0x2404>
   132d0:	mov	r5, #0
   132d4:	b	132bc <strspn@plt+0x2404>
   132d8:	push	{r4, r5, r6, lr}
   132dc:	sub	sp, sp, #8
   132e0:	subs	r6, r1, #0
   132e4:	beq	13320 <strspn@plt+0x2468>
   132e8:	mov	r4, r0
   132ec:	mov	r5, r2
   132f0:	mov	r3, #0
   132f4:	add	r2, sp, #4
   132f8:	mov	r1, r6
   132fc:	bl	129a0 <strspn@plt+0x1ae8>
   13300:	cmp	r0, #0
   13304:	beq	13324 <strspn@plt+0x246c>
   13308:	cmp	r5, #0
   1330c:	moveq	r0, #0
   13310:	strne	r0, [r5]
   13314:	movne	r0, #0
   13318:	add	sp, sp, #8
   1331c:	pop	{r4, r5, r6, pc}
   13320:	bl	10eac <abort@plt>
   13324:	vldr	s15, [r4, #12]
   13328:	vcvt.f32.u32	s14, s15
   1332c:	ldr	r3, [r4, #20]
   13330:	vldr	s15, [r4, #8]
   13334:	vcvt.f32.u32	s15, s15
   13338:	vldr	s13, [r3, #8]
   1333c:	vmul.f32	s15, s15, s13
   13340:	vcmpe.f32	s14, s15
   13344:	vmrs	APSR_nzcv, fpscr
   13348:	bgt	13398 <strspn@plt+0x24e0>
   1334c:	ldr	r3, [sp, #4]
   13350:	ldr	r2, [r3]
   13354:	cmp	r2, #0
   13358:	beq	1343c <strspn@plt+0x2584>
   1335c:	ldr	r0, [r4, #36]	; 0x24
   13360:	cmp	r0, #0
   13364:	beq	13424 <strspn@plt+0x256c>
   13368:	ldr	r3, [r0, #4]
   1336c:	str	r3, [r4, #36]	; 0x24
   13370:	str	r6, [r0]
   13374:	ldr	r3, [sp, #4]
   13378:	ldr	r2, [r3, #4]
   1337c:	str	r2, [r0, #4]
   13380:	str	r0, [r3, #4]
   13384:	ldr	r3, [r4, #16]
   13388:	add	r3, r3, #1
   1338c:	str	r3, [r4, #16]
   13390:	mov	r0, #1
   13394:	b	13318 <strspn@plt+0x2460>
   13398:	mov	r0, r4
   1339c:	bl	1265c <strspn@plt+0x17a4>
   133a0:	ldr	r3, [r4, #20]
   133a4:	vldr	s13, [r3, #8]
   133a8:	vldr	s15, [r4, #8]
   133ac:	vcvt.f32.u32	s15, s15
   133b0:	vldr	s14, [r4, #12]
   133b4:	vcvt.f32.u32	s14, s14
   133b8:	vmul.f32	s12, s13, s15
   133bc:	vcmpe.f32	s14, s12
   133c0:	vmrs	APSR_nzcv, fpscr
   133c4:	ble	1334c <strspn@plt+0x2494>
   133c8:	ldrb	r2, [r3, #16]
   133cc:	cmp	r2, #0
   133d0:	vldr	s14, [r3, #12]
   133d4:	vmul.f32	s15, s15, s14
   133d8:	vmuleq.f32	s15, s15, s13
   133dc:	vldr	s14, [pc, #140]	; 13470 <strspn@plt+0x25b8>
   133e0:	vcmpe.f32	s15, s14
   133e4:	vmrs	APSR_nzcv, fpscr
   133e8:	bge	13460 <strspn@plt+0x25a8>
   133ec:	vcvt.u32.f32	s15, s15
   133f0:	vmov	r1, s15
   133f4:	mov	r0, r4
   133f8:	bl	131a4 <strspn@plt+0x22ec>
   133fc:	cmp	r0, #0
   13400:	beq	13468 <strspn@plt+0x25b0>
   13404:	mov	r3, #0
   13408:	add	r2, sp, #4
   1340c:	mov	r1, r6
   13410:	mov	r0, r4
   13414:	bl	129a0 <strspn@plt+0x1ae8>
   13418:	cmp	r0, #0
   1341c:	beq	1334c <strspn@plt+0x2494>
   13420:	bl	10eac <abort@plt>
   13424:	mov	r0, #8
   13428:	bl	15ed8 <strspn@plt+0x5020>
   1342c:	cmp	r0, #0
   13430:	bne	13370 <strspn@plt+0x24b8>
   13434:	mvn	r0, #0
   13438:	b	13318 <strspn@plt+0x2460>
   1343c:	str	r6, [r3]
   13440:	ldr	r3, [r4, #16]
   13444:	add	r3, r3, #1
   13448:	str	r3, [r4, #16]
   1344c:	ldr	r3, [r4, #12]
   13450:	add	r3, r3, #1
   13454:	str	r3, [r4, #12]
   13458:	mov	r0, #1
   1345c:	b	13318 <strspn@plt+0x2460>
   13460:	mvn	r0, #0
   13464:	b	13318 <strspn@plt+0x2460>
   13468:	mvn	r0, #0
   1346c:	b	13318 <strspn@plt+0x2460>
   13470:	svcmi	0x00800000
   13474:	push	{r4, lr}
   13478:	sub	sp, sp, #8
   1347c:	mov	r4, r1
   13480:	add	r2, sp, #4
   13484:	bl	132d8 <strspn@plt+0x2420>
   13488:	cmn	r0, #1
   1348c:	beq	134a4 <strspn@plt+0x25ec>
   13490:	cmp	r0, #0
   13494:	movne	r0, r4
   13498:	ldreq	r0, [sp, #4]
   1349c:	add	sp, sp, #8
   134a0:	pop	{r4, pc}
   134a4:	mov	r0, #0
   134a8:	b	1349c <strspn@plt+0x25e4>
   134ac:	push	{r4, r5, r6, lr}
   134b0:	sub	sp, sp, #8
   134b4:	mov	r4, r0
   134b8:	mov	r3, #1
   134bc:	add	r2, sp, #4
   134c0:	bl	129a0 <strspn@plt+0x1ae8>
   134c4:	subs	r5, r0, #0
   134c8:	beq	134e8 <strspn@plt+0x2630>
   134cc:	ldr	r3, [r4, #16]
   134d0:	sub	r3, r3, #1
   134d4:	str	r3, [r4, #16]
   134d8:	ldr	r3, [sp, #4]
   134dc:	ldr	r3, [r3]
   134e0:	cmp	r3, #0
   134e4:	beq	134f4 <strspn@plt+0x263c>
   134e8:	mov	r0, r5
   134ec:	add	sp, sp, #8
   134f0:	pop	{r4, r5, r6, pc}
   134f4:	ldr	r3, [r4, #12]
   134f8:	sub	r3, r3, #1
   134fc:	str	r3, [r4, #12]
   13500:	vmov	s15, r3
   13504:	vcvt.f32.u32	s15, s15
   13508:	ldr	r3, [r4, #20]
   1350c:	vldr	s14, [r4, #8]
   13510:	vcvt.f32.u32	s14, s14
   13514:	vldr	s13, [r3]
   13518:	vmul.f32	s14, s14, s13
   1351c:	vcmpe.f32	s15, s14
   13520:	vmrs	APSR_nzcv, fpscr
   13524:	bpl	134e8 <strspn@plt+0x2630>
   13528:	mov	r0, r4
   1352c:	bl	1265c <strspn@plt+0x17a4>
   13530:	ldr	r3, [r4, #20]
   13534:	vldr	s15, [r4, #8]
   13538:	vcvt.f32.u32	s15, s15
   1353c:	vldr	s14, [r4, #12]
   13540:	vcvt.f32.u32	s13, s14
   13544:	vldr	s14, [r3]
   13548:	vmul.f32	s14, s15, s14
   1354c:	vcmpe.f32	s13, s14
   13550:	vmrs	APSR_nzcv, fpscr
   13554:	bpl	134e8 <strspn@plt+0x2630>
   13558:	ldrb	r2, [r3, #16]
   1355c:	cmp	r2, #0
   13560:	vldr	s14, [r3, #4]
   13564:	vmuleq.f32	s15, s15, s14
   13568:	vldreq	s14, [r3, #8]
   1356c:	vmul.f32	s15, s15, s14
   13570:	vcvt.u32.f32	s15, s15
   13574:	vmov	r1, s15
   13578:	mov	r0, r4
   1357c:	bl	131a4 <strspn@plt+0x22ec>
   13580:	cmp	r0, #0
   13584:	bne	134e8 <strspn@plt+0x2630>
   13588:	ldr	r0, [r4, #36]	; 0x24
   1358c:	cmp	r0, #0
   13590:	beq	135a8 <strspn@plt+0x26f0>
   13594:	ldr	r6, [r0, #4]
   13598:	bl	125e0 <strspn@plt+0x1728>
   1359c:	mov	r0, r6
   135a0:	cmp	r6, #0
   135a4:	bne	13594 <strspn@plt+0x26dc>
   135a8:	mov	r3, #0
   135ac:	str	r3, [r4, #36]	; 0x24
   135b0:	b	134e8 <strspn@plt+0x2630>
   135b4:	push	{r4, lr}
   135b8:	bl	134ac <strspn@plt+0x25f4>
   135bc:	pop	{r4, pc}
   135c0:	push	{r4, r5, r6, lr}
   135c4:	mov	r4, r0
   135c8:	mov	r6, r1
   135cc:	ldr	r0, [r0]
   135d0:	bl	16184 <strspn@plt+0x52cc>
   135d4:	ldrd	r4, [r4, #8]
   135d8:	mov	r2, r6
   135dc:	mov	r3, #0
   135e0:	eor	r4, r4, r0
   135e4:	mov	r0, r4
   135e8:	mov	r1, r5
   135ec:	bl	167ec <strspn@plt+0x5934>
   135f0:	mov	r0, r2
   135f4:	pop	{r4, r5, r6, pc}
   135f8:	push	{r4, r5, r6, lr}
   135fc:	ldrd	r4, [r0, #8]
   13600:	ldrd	r2, [r1, #8]
   13604:	cmp	r5, r3
   13608:	cmpeq	r4, r2
   1360c:	beq	13618 <strspn@plt+0x2760>
   13610:	mov	r0, #0
   13614:	pop	{r4, r5, r6, pc}
   13618:	ldrd	r4, [r0, #16]
   1361c:	ldrd	r2, [r1, #16]
   13620:	cmp	r5, r3
   13624:	cmpeq	r4, r2
   13628:	beq	13634 <strspn@plt+0x277c>
   1362c:	mov	r0, #0
   13630:	pop	{r4, r5, r6, pc}
   13634:	ldr	r1, [r1]
   13638:	ldr	r0, [r0]
   1363c:	bl	10c78 <strcmp@plt>
   13640:	clz	r0, r0
   13644:	lsr	r0, r0, #5
   13648:	pop	{r4, r5, r6, pc}
   1364c:	push	{r4, lr}
   13650:	mov	r4, r0
   13654:	ldr	r0, [r0]
   13658:	bl	125e0 <strspn@plt+0x1728>
   1365c:	mov	r0, r4
   13660:	bl	125e0 <strspn@plt+0x1728>
   13664:	pop	{r4, pc}
   13668:	push	{r4, r5, r6, lr}
   1366c:	subs	r4, r0, #0
   13670:	beq	136e8 <strspn@plt+0x2830>
   13674:	mov	r1, #47	; 0x2f
   13678:	mov	r0, r4
   1367c:	bl	10e70 <strrchr@plt>
   13680:	cmp	r0, #0
   13684:	addne	r5, r0, #1
   13688:	moveq	r5, r4
   1368c:	sub	r3, r5, r4
   13690:	cmp	r3, #6
   13694:	ble	136d4 <strspn@plt+0x281c>
   13698:	mov	r2, #7
   1369c:	ldr	r1, [pc, #96]	; 13704 <strspn@plt+0x284c>
   136a0:	sub	r0, r5, #7
   136a4:	bl	10ea0 <strncmp@plt>
   136a8:	cmp	r0, #0
   136ac:	bne	136d4 <strspn@plt+0x281c>
   136b0:	mov	r2, #3
   136b4:	ldr	r1, [pc, #76]	; 13708 <strspn@plt+0x2850>
   136b8:	mov	r0, r5
   136bc:	bl	10ea0 <strncmp@plt>
   136c0:	cmp	r0, #0
   136c4:	addeq	r4, r5, #3
   136c8:	ldreq	r3, [pc, #60]	; 1370c <strspn@plt+0x2854>
   136cc:	streq	r4, [r3]
   136d0:	movne	r4, r5
   136d4:	ldr	r3, [pc, #52]	; 13710 <strspn@plt+0x2858>
   136d8:	str	r4, [r3]
   136dc:	ldr	r3, [pc, #48]	; 13714 <strspn@plt+0x285c>
   136e0:	str	r4, [r3]
   136e4:	pop	{r4, r5, r6, pc}
   136e8:	ldr	r3, [pc, #40]	; 13718 <strspn@plt+0x2860>
   136ec:	ldr	r3, [r3]
   136f0:	mov	r2, #55	; 0x37
   136f4:	mov	r1, #1
   136f8:	ldr	r0, [pc, #28]	; 1371c <strspn@plt+0x2864>
   136fc:	bl	10d38 <fwrite@plt>
   13700:	bl	10eac <abort@plt>
   13704:			; <UNDEFINED> instruction: 0x000171b4
   13708:			; <UNDEFINED> instruction: 0x000171bc
   1370c:	andeq	r8, r2, r8, lsr r1
   13710:	andeq	r8, r2, ip, ror #2
   13714:	andeq	r8, r2, ip, lsr r1
   13718:	andeq	r8, r2, r8, asr #2
   1371c:	andeq	r7, r1, ip, ror r1
   13720:	push	{r4, r5, r6, lr}
   13724:	mov	r5, r0
   13728:	mov	r4, r1
   1372c:	mov	r2, #48	; 0x30
   13730:	mov	r1, #0
   13734:	bl	10e10 <memset@plt>
   13738:	cmp	r4, #10
   1373c:	beq	1374c <strspn@plt+0x2894>
   13740:	str	r4, [r5]
   13744:	mov	r0, r5
   13748:	pop	{r4, r5, r6, pc}
   1374c:	bl	10eac <abort@plt>
   13750:	push	{r4, r5, r6, lr}
   13754:	mov	r4, r0
   13758:	mov	r5, r1
   1375c:	mov	r2, #5
   13760:	mov	r1, r0
   13764:	mov	r0, #0
   13768:	bl	10cf0 <dcgettext@plt>
   1376c:	cmp	r4, r0
   13770:	popne	{r4, r5, r6, pc}
   13774:	bl	161c0 <strspn@plt+0x5308>
   13778:	ldrb	r3, [r0]
   1377c:	bic	r3, r3, #32
   13780:	cmp	r3, #85	; 0x55
   13784:	beq	13800 <strspn@plt+0x2948>
   13788:	cmp	r3, #71	; 0x47
   1378c:	bne	1385c <strspn@plt+0x29a4>
   13790:	ldrb	r3, [r0, #1]
   13794:	bic	r3, r3, #32
   13798:	cmp	r3, #66	; 0x42
   1379c:	bne	1385c <strspn@plt+0x29a4>
   137a0:	ldrb	r3, [r0, #2]
   137a4:	cmp	r3, #49	; 0x31
   137a8:	bne	1385c <strspn@plt+0x29a4>
   137ac:	ldrb	r3, [r0, #3]
   137b0:	cmp	r3, #56	; 0x38
   137b4:	bne	1385c <strspn@plt+0x29a4>
   137b8:	ldrb	r3, [r0, #4]
   137bc:	cmp	r3, #48	; 0x30
   137c0:	bne	1385c <strspn@plt+0x29a4>
   137c4:	ldrb	r3, [r0, #5]
   137c8:	cmp	r3, #51	; 0x33
   137cc:	bne	1385c <strspn@plt+0x29a4>
   137d0:	ldrb	r3, [r0, #6]
   137d4:	cmp	r3, #48	; 0x30
   137d8:	bne	1385c <strspn@plt+0x29a4>
   137dc:	ldrb	r3, [r0, #7]
   137e0:	cmp	r3, #0
   137e4:	bne	1385c <strspn@plt+0x29a4>
   137e8:	ldrb	r2, [r4]
   137ec:	ldr	r3, [pc, #124]	; 13870 <strspn@plt+0x29b8>
   137f0:	ldr	r0, [pc, #124]	; 13874 <strspn@plt+0x29bc>
   137f4:	cmp	r2, #96	; 0x60
   137f8:	movne	r0, r3
   137fc:	pop	{r4, r5, r6, pc}
   13800:	ldrb	r3, [r0, #1]
   13804:	bic	r3, r3, #32
   13808:	cmp	r3, #84	; 0x54
   1380c:	bne	1385c <strspn@plt+0x29a4>
   13810:	ldrb	r3, [r0, #2]
   13814:	bic	r3, r3, #32
   13818:	cmp	r3, #70	; 0x46
   1381c:	bne	1385c <strspn@plt+0x29a4>
   13820:	ldrb	r3, [r0, #3]
   13824:	cmp	r3, #45	; 0x2d
   13828:	bne	1385c <strspn@plt+0x29a4>
   1382c:	ldrb	r3, [r0, #4]
   13830:	cmp	r3, #56	; 0x38
   13834:	bne	1385c <strspn@plt+0x29a4>
   13838:	ldrb	r3, [r0, #5]
   1383c:	cmp	r3, #0
   13840:	bne	1385c <strspn@plt+0x29a4>
   13844:	ldrb	r2, [r4]
   13848:	ldr	r3, [pc, #40]	; 13878 <strspn@plt+0x29c0>
   1384c:	ldr	r0, [pc, #40]	; 1387c <strspn@plt+0x29c4>
   13850:	cmp	r2, #96	; 0x60
   13854:	movne	r0, r3
   13858:	pop	{r4, r5, r6, pc}
   1385c:	ldr	r3, [pc, #28]	; 13880 <strspn@plt+0x29c8>
   13860:	ldr	r0, [pc, #28]	; 13884 <strspn@plt+0x29cc>
   13864:	cmp	r5, #9
   13868:	movne	r0, r3
   1386c:	pop	{r4, r5, r6, pc}
   13870:	andeq	r7, r1, r8, lsl r2
   13874:	andeq	r7, r1, r4, lsr #4
   13878:	andeq	r7, r1, r4, lsl r2
   1387c:	andeq	r7, r1, r8, lsr #4
   13880:	andeq	r7, r1, ip, lsl r2
   13884:	andeq	r7, r1, r0, lsr #4
   13888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1388c:	sub	sp, sp, #116	; 0x74
   13890:	str	r0, [sp, #36]	; 0x24
   13894:	mov	sl, r1
   13898:	str	r2, [sp, #52]	; 0x34
   1389c:	str	r3, [sp, #28]
   138a0:	ldr	r8, [sp, #152]	; 0x98
   138a4:	bl	10d50 <__ctype_get_mb_cur_max@plt>
   138a8:	str	r0, [sp, #84]	; 0x54
   138ac:	ldr	r3, [sp, #156]	; 0x9c
   138b0:	lsr	r3, r3, #1
   138b4:	and	r3, r3, #1
   138b8:	str	r3, [sp, #32]
   138bc:	mov	r3, #1
   138c0:	str	r3, [sp, #40]	; 0x28
   138c4:	mov	r3, #0
   138c8:	str	r3, [sp, #80]	; 0x50
   138cc:	str	r3, [sp, #44]	; 0x2c
   138d0:	str	r3, [sp, #48]	; 0x30
   138d4:	str	r3, [sp, #60]	; 0x3c
   138d8:	str	r3, [sp, #72]	; 0x48
   138dc:	str	r3, [sp, #76]	; 0x4c
   138e0:	mov	r7, sl
   138e4:	mov	sl, r8
   138e8:	cmp	sl, #10
   138ec:	ldrls	pc, [pc, sl, lsl #2]
   138f0:	b	13aa8 <strspn@plt+0x2bf0>
   138f4:	andeq	r3, r1, r8, asr r9
   138f8:	andeq	r3, r1, r8, lsr #18
   138fc:	andeq	r3, r1, r4, lsl #21
   13900:	andeq	r3, r1, r0, lsr #18
   13904:	andeq	r3, r1, r8, lsr sl
   13908:	andeq	r3, r1, r8, ror #18
   1390c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13910:	andeq	r3, r1, ip, lsr #21
   13914:	andeq	r3, r1, r4, lsr #19
   13918:	andeq	r3, r1, r4, lsr #19
   1391c:	andeq	r3, r1, r4, lsr #19
   13920:	mov	r3, #1
   13924:	str	r3, [sp, #48]	; 0x30
   13928:	mov	r3, #1
   1392c:	str	r3, [sp, #32]
   13930:	str	r3, [sp, #60]	; 0x3c
   13934:	ldr	r3, [pc, #4068]	; 14920 <strspn@plt+0x3a68>
   13938:	str	r3, [sp, #72]	; 0x48
   1393c:	mov	fp, #0
   13940:	mov	sl, #2
   13944:	mov	r6, #0
   13948:	ldr	r3, [sp, #48]	; 0x30
   1394c:	eor	r3, r3, #1
   13950:	str	r3, [sp, #68]	; 0x44
   13954:	b	1423c <strspn@plt+0x3384>
   13958:	mov	r3, #0
   1395c:	str	r3, [sp, #32]
   13960:	mov	fp, r3
   13964:	b	13944 <strspn@plt+0x2a8c>
   13968:	ldr	r3, [sp, #32]
   1396c:	cmp	r3, #0
   13970:	bne	13ac4 <strspn@plt+0x2c0c>
   13974:	cmp	r7, #0
   13978:	beq	13ae4 <strspn@plt+0x2c2c>
   1397c:	ldr	r3, [sp, #36]	; 0x24
   13980:	mov	r2, #34	; 0x22
   13984:	strb	r2, [r3]
   13988:	mov	r3, #1
   1398c:	str	r3, [sp, #48]	; 0x30
   13990:	str	r3, [sp, #60]	; 0x3c
   13994:	ldr	r3, [pc, #3980]	; 14928 <strspn@plt+0x3a70>
   13998:	str	r3, [sp, #72]	; 0x48
   1399c:	mov	fp, #1
   139a0:	b	13944 <strspn@plt+0x2a8c>
   139a4:	cmp	sl, #10
   139a8:	beq	139cc <strspn@plt+0x2b14>
   139ac:	mov	r1, sl
   139b0:	ldr	r0, [pc, #3948]	; 14924 <strspn@plt+0x3a6c>
   139b4:	bl	13750 <strspn@plt+0x2898>
   139b8:	str	r0, [sp, #164]	; 0xa4
   139bc:	mov	r1, sl
   139c0:	ldr	r0, [pc, #3928]	; 14920 <strspn@plt+0x3a68>
   139c4:	bl	13750 <strspn@plt+0x2898>
   139c8:	str	r0, [sp, #168]	; 0xa8
   139cc:	ldr	r3, [sp, #32]
   139d0:	cmp	r3, #0
   139d4:	movne	fp, #0
   139d8:	bne	13a10 <strspn@plt+0x2b58>
   139dc:	ldr	r3, [sp, #164]	; 0xa4
   139e0:	ldrb	r3, [r3]
   139e4:	cmp	r3, #0
   139e8:	beq	13a30 <strspn@plt+0x2b78>
   139ec:	ldr	r2, [sp, #164]	; 0xa4
   139f0:	mov	fp, #0
   139f4:	ldr	r1, [sp, #36]	; 0x24
   139f8:	cmp	r7, fp
   139fc:	strbhi	r3, [r1, fp]
   13a00:	add	fp, fp, #1
   13a04:	ldrb	r3, [r2, #1]!
   13a08:	cmp	r3, #0
   13a0c:	bne	139f8 <strspn@plt+0x2b40>
   13a10:	ldr	r0, [sp, #168]	; 0xa8
   13a14:	bl	10dec <strlen@plt>
   13a18:	str	r0, [sp, #60]	; 0x3c
   13a1c:	ldr	r3, [sp, #168]	; 0xa8
   13a20:	str	r3, [sp, #72]	; 0x48
   13a24:	mov	r3, #1
   13a28:	str	r3, [sp, #48]	; 0x30
   13a2c:	b	13944 <strspn@plt+0x2a8c>
   13a30:	mov	fp, #0
   13a34:	b	13a10 <strspn@plt+0x2b58>
   13a38:	ldr	r3, [sp, #32]
   13a3c:	cmp	r3, #0
   13a40:	bne	13b00 <strspn@plt+0x2c48>
   13a44:	mov	r3, #1
   13a48:	str	r3, [sp, #48]	; 0x30
   13a4c:	cmp	r7, #0
   13a50:	beq	13b1c <strspn@plt+0x2c64>
   13a54:	ldr	r3, [sp, #36]	; 0x24
   13a58:	mov	r2, #39	; 0x27
   13a5c:	strb	r2, [r3]
   13a60:	mov	r3, #0
   13a64:	str	r3, [sp, #32]
   13a68:	mov	r3, #1
   13a6c:	str	r3, [sp, #60]	; 0x3c
   13a70:	ldr	r3, [pc, #3752]	; 14920 <strspn@plt+0x3a68>
   13a74:	str	r3, [sp, #72]	; 0x48
   13a78:	mov	fp, #1
   13a7c:	mov	sl, #2
   13a80:	b	13944 <strspn@plt+0x2a8c>
   13a84:	ldr	r3, [sp, #32]
   13a88:	cmp	r3, #0
   13a8c:	beq	13a4c <strspn@plt+0x2b94>
   13a90:	mov	r3, #1
   13a94:	str	r3, [sp, #60]	; 0x3c
   13a98:	ldr	r3, [pc, #3712]	; 14920 <strspn@plt+0x3a68>
   13a9c:	str	r3, [sp, #72]	; 0x48
   13aa0:	mov	fp, #0
   13aa4:	b	13944 <strspn@plt+0x2a8c>
   13aa8:	bl	10eac <abort@plt>
   13aac:	mov	r3, #0
   13ab0:	str	r3, [sp, #32]
   13ab4:	mov	r3, #1
   13ab8:	str	r3, [sp, #48]	; 0x30
   13abc:	mov	fp, #0
   13ac0:	b	13944 <strspn@plt+0x2a8c>
   13ac4:	ldr	r3, [sp, #32]
   13ac8:	str	r3, [sp, #48]	; 0x30
   13acc:	mov	r3, #1
   13ad0:	str	r3, [sp, #60]	; 0x3c
   13ad4:	ldr	r3, [pc, #3660]	; 14928 <strspn@plt+0x3a70>
   13ad8:	str	r3, [sp, #72]	; 0x48
   13adc:	mov	fp, #0
   13ae0:	b	13944 <strspn@plt+0x2a8c>
   13ae4:	mov	r3, #1
   13ae8:	str	r3, [sp, #48]	; 0x30
   13aec:	str	r3, [sp, #60]	; 0x3c
   13af0:	ldr	r3, [pc, #3632]	; 14928 <strspn@plt+0x3a70>
   13af4:	str	r3, [sp, #72]	; 0x48
   13af8:	mov	fp, #1
   13afc:	b	13944 <strspn@plt+0x2a8c>
   13b00:	mov	r3, #1
   13b04:	str	r3, [sp, #60]	; 0x3c
   13b08:	ldr	r3, [pc, #3600]	; 14920 <strspn@plt+0x3a68>
   13b0c:	str	r3, [sp, #72]	; 0x48
   13b10:	mov	fp, #0
   13b14:	mov	sl, #2
   13b18:	b	13944 <strspn@plt+0x2a8c>
   13b1c:	mov	r3, #0
   13b20:	str	r3, [sp, #32]
   13b24:	mov	r3, #1
   13b28:	str	r3, [sp, #60]	; 0x3c
   13b2c:	ldr	r3, [pc, #3564]	; 14920 <strspn@plt+0x3a68>
   13b30:	str	r3, [sp, #72]	; 0x48
   13b34:	mov	fp, #1
   13b38:	mov	sl, #2
   13b3c:	b	13944 <strspn@plt+0x2a8c>
   13b40:	mov	r3, #0
   13b44:	str	r3, [sp, #56]	; 0x38
   13b48:	ldr	r3, [sp, #52]	; 0x34
   13b4c:	add	r2, r3, r6
   13b50:	str	r2, [sp, #64]	; 0x40
   13b54:	ldrb	r4, [r3, r6]
   13b58:	cmp	r4, #126	; 0x7e
   13b5c:	ldrls	pc, [pc, r4, lsl #2]
   13b60:	b	1439c <strspn@plt+0x34e4>
   13b64:	andeq	r3, r1, ip, ror sp
   13b68:	muleq	r1, ip, r3
   13b6c:	muleq	r1, ip, r3
   13b70:	muleq	r1, ip, r3
   13b74:	muleq	r1, ip, r3
   13b78:	muleq	r1, ip, r3
   13b7c:	muleq	r1, ip, r3
   13b80:	ldrdeq	r4, [r1], -r8
   13b84:	andeq	r3, r1, r4, ror sp
   13b88:	muleq	r1, r0, r0
   13b8c:	andeq	r4, r1, r8, lsl #1
   13b90:	strdeq	r3, [r1], -r8
   13b94:	strdeq	r3, [r1], -r0
   13b98:	andeq	r3, r1, ip, ror #26
   13b9c:	muleq	r1, ip, r3
   13ba0:	muleq	r1, ip, r3
   13ba4:	muleq	r1, ip, r3
   13ba8:	muleq	r1, ip, r3
   13bac:	muleq	r1, ip, r3
   13bb0:	muleq	r1, ip, r3
   13bb4:	muleq	r1, ip, r3
   13bb8:	muleq	r1, ip, r3
   13bbc:	muleq	r1, ip, r3
   13bc0:	muleq	r1, ip, r3
   13bc4:	muleq	r1, ip, r3
   13bc8:	muleq	r1, ip, r3
   13bcc:	muleq	r1, ip, r3
   13bd0:	muleq	r1, ip, r3
   13bd4:	muleq	r1, ip, r3
   13bd8:	muleq	r1, ip, r3
   13bdc:	muleq	r1, ip, r3
   13be0:	muleq	r1, ip, r3
   13be4:	andeq	r4, r1, ip, lsr #2
   13be8:	andeq	r4, r1, r8, lsr #2
   13bec:	andeq	r4, r1, r8, lsr #2
   13bf0:	andeq	r4, r1, r0, lsl #2
   13bf4:	andeq	r4, r1, r8, lsr #2
   13bf8:	andeq	r4, r1, r0, ror r7
   13bfc:	andeq	r4, r1, r8, lsr #2
   13c00:	andeq	r4, r1, r0, lsl #6
   13c04:	andeq	r4, r1, r8, lsr #2
   13c08:	andeq	r4, r1, r8, lsr #2
   13c0c:	andeq	r4, r1, r8, lsr #2
   13c10:	andeq	r4, r1, r0, ror r7
   13c14:	andeq	r4, r1, r0, ror r7
   13c18:	andeq	r4, r1, r0, ror r7
   13c1c:	andeq	r4, r1, r0, ror r7
   13c20:	andeq	r4, r1, r0, ror r7
   13c24:	andeq	r4, r1, r0, ror r7
   13c28:	andeq	r4, r1, r0, ror r7
   13c2c:	andeq	r4, r1, r0, ror r7
   13c30:	andeq	r4, r1, r0, ror r7
   13c34:	andeq	r4, r1, r0, ror r7
   13c38:	andeq	r4, r1, r0, ror r7
   13c3c:	andeq	r4, r1, r0, ror r7
   13c40:	andeq	r4, r1, r0, ror r7
   13c44:	andeq	r4, r1, r0, ror r7
   13c48:	andeq	r4, r1, r0, ror r7
   13c4c:	andeq	r4, r1, r0, ror r7
   13c50:	andeq	r4, r1, r8, lsr #2
   13c54:	andeq	r4, r1, r8, lsr #2
   13c58:	andeq	r4, r1, r8, lsr #2
   13c5c:	andeq	r4, r1, r8, lsr #2
   13c60:	andeq	r3, r1, r4, lsl #29
   13c64:	muleq	r1, ip, r3
   13c68:	andeq	r4, r1, r0, ror r7
   13c6c:	andeq	r4, r1, r0, ror r7
   13c70:	andeq	r4, r1, r0, ror r7
   13c74:	andeq	r4, r1, r0, ror r7
   13c78:	andeq	r4, r1, r0, ror r7
   13c7c:	andeq	r4, r1, r0, ror r7
   13c80:	andeq	r4, r1, r0, ror r7
   13c84:	andeq	r4, r1, r0, ror r7
   13c88:	andeq	r4, r1, r0, ror r7
   13c8c:	andeq	r4, r1, r0, ror r7
   13c90:	andeq	r4, r1, r0, ror r7
   13c94:	andeq	r4, r1, r0, ror r7
   13c98:	andeq	r4, r1, r0, ror r7
   13c9c:	andeq	r4, r1, r0, ror r7
   13ca0:	andeq	r4, r1, r0, ror r7
   13ca4:	andeq	r4, r1, r0, ror r7
   13ca8:	andeq	r4, r1, r0, ror r7
   13cac:	andeq	r4, r1, r0, ror r7
   13cb0:	andeq	r4, r1, r0, ror r7
   13cb4:	andeq	r4, r1, r0, ror r7
   13cb8:	andeq	r4, r1, r0, ror r7
   13cbc:	andeq	r4, r1, r0, ror r7
   13cc0:	andeq	r4, r1, r0, ror r7
   13cc4:	andeq	r4, r1, r0, ror r7
   13cc8:	andeq	r4, r1, r0, ror r7
   13ccc:	andeq	r4, r1, r0, ror r7
   13cd0:	andeq	r4, r1, r8, lsr #2
   13cd4:	andeq	r4, r1, r0
   13cd8:	andeq	r4, r1, r0, ror r7
   13cdc:	andeq	r4, r1, r8, lsr #2
   13ce0:	andeq	r4, r1, r0, ror r7
   13ce4:	andeq	r4, r1, r8, lsr #2
   13ce8:	andeq	r4, r1, r0, ror r7
   13cec:	andeq	r4, r1, r0, ror r7
   13cf0:	andeq	r4, r1, r0, ror r7
   13cf4:	andeq	r4, r1, r0, ror r7
   13cf8:	andeq	r4, r1, r0, ror r7
   13cfc:	andeq	r4, r1, r0, ror r7
   13d00:	andeq	r4, r1, r0, ror r7
   13d04:	andeq	r4, r1, r0, ror r7
   13d08:	andeq	r4, r1, r0, ror r7
   13d0c:	andeq	r4, r1, r0, ror r7
   13d10:	andeq	r4, r1, r0, ror r7
   13d14:	andeq	r4, r1, r0, ror r7
   13d18:	andeq	r4, r1, r0, ror r7
   13d1c:	andeq	r4, r1, r0, ror r7
   13d20:	andeq	r4, r1, r0, ror r7
   13d24:	andeq	r4, r1, r0, ror r7
   13d28:	andeq	r4, r1, r0, ror r7
   13d2c:	andeq	r4, r1, r0, ror r7
   13d30:	andeq	r4, r1, r0, ror r7
   13d34:	andeq	r4, r1, r0, ror r7
   13d38:	andeq	r4, r1, r0, ror r7
   13d3c:	andeq	r4, r1, r0, ror r7
   13d40:	andeq	r4, r1, r0, ror r7
   13d44:	andeq	r4, r1, r0, ror r7
   13d48:	andeq	r4, r1, r0, ror r7
   13d4c:	andeq	r4, r1, r0, ror r7
   13d50:	andeq	r4, r1, r0, ror #1
   13d54:	andeq	r4, r1, r8, lsr #2
   13d58:	andeq	r4, r1, r0, ror #1
   13d5c:	andeq	r4, r1, r0, lsl #2
   13d60:	mov	r3, #0
   13d64:	str	r3, [sp, #56]	; 0x38
   13d68:	b	13b48 <strspn@plt+0x2c90>
   13d6c:	mov	r3, #114	; 0x72
   13d70:	b	14094 <strspn@plt+0x31dc>
   13d74:	mov	r3, #98	; 0x62
   13d78:	b	140ac <strspn@plt+0x31f4>
   13d7c:	ldr	r3, [sp, #48]	; 0x30
   13d80:	cmp	r3, #0
   13d84:	beq	13e6c <strspn@plt+0x2fb4>
   13d88:	ldr	r3, [sp, #32]
   13d8c:	cmp	r3, #0
   13d90:	bne	148f4 <strspn@plt+0x3a3c>
   13d94:	ldr	r3, [sp, #44]	; 0x2c
   13d98:	eor	r3, r3, #1
   13d9c:	cmp	sl, #2
   13da0:	movne	r3, #0
   13da4:	andeq	r3, r3, #1
   13da8:	cmp	r3, #0
   13dac:	moveq	r2, fp
   13db0:	beq	13df4 <strspn@plt+0x2f3c>
   13db4:	cmp	r7, fp
   13db8:	ldrhi	r2, [sp, #36]	; 0x24
   13dbc:	movhi	r1, #39	; 0x27
   13dc0:	strbhi	r1, [r2, fp]
   13dc4:	add	r2, fp, #1
   13dc8:	cmp	r7, r2
   13dcc:	ldrhi	r1, [sp, #36]	; 0x24
   13dd0:	movhi	r0, #36	; 0x24
   13dd4:	strbhi	r0, [r1, r2]
   13dd8:	add	r2, fp, #2
   13ddc:	cmp	r7, r2
   13de0:	ldrhi	r1, [sp, #36]	; 0x24
   13de4:	movhi	r0, #39	; 0x27
   13de8:	strbhi	r0, [r1, r2]
   13dec:	add	r2, fp, #3
   13df0:	str	r3, [sp, #44]	; 0x2c
   13df4:	cmp	r7, r2
   13df8:	ldrhi	r3, [sp, #36]	; 0x24
   13dfc:	movhi	r1, #92	; 0x5c
   13e00:	strbhi	r1, [r3, r2]
   13e04:	add	fp, r2, #1
   13e08:	cmp	r5, #0
   13e0c:	beq	14778 <strspn@plt+0x38c0>
   13e10:	add	r3, r6, #1
   13e14:	ldr	r1, [sp, #28]
   13e18:	cmp	r1, r3
   13e1c:	bls	14788 <strspn@plt+0x38d0>
   13e20:	ldr	r1, [sp, #52]	; 0x34
   13e24:	ldrb	r3, [r1, r3]
   13e28:	sub	r3, r3, #48	; 0x30
   13e2c:	uxtb	r3, r3
   13e30:	cmp	r3, #9
   13e34:	bhi	14794 <strspn@plt+0x38dc>
   13e38:	cmp	r7, fp
   13e3c:	movhi	r3, #48	; 0x30
   13e40:	ldrhi	r1, [sp, #36]	; 0x24
   13e44:	strbhi	r3, [r1, fp]
   13e48:	add	r3, r2, #2
   13e4c:	cmp	r7, r3
   13e50:	movhi	r1, #48	; 0x30
   13e54:	ldrhi	r0, [sp, #36]	; 0x24
   13e58:	strbhi	r1, [r0, r3]
   13e5c:	add	fp, r2, #3
   13e60:	ldr	r8, [sp, #32]
   13e64:	mov	r4, #48	; 0x30
   13e68:	b	14144 <strspn@plt+0x328c>
   13e6c:	ldr	r3, [sp, #156]	; 0x9c
   13e70:	tst	r3, #1
   13e74:	bne	14238 <strspn@plt+0x3380>
   13e78:	ldr	r5, [sp, #48]	; 0x30
   13e7c:	mov	r8, r5
   13e80:	b	14144 <strspn@plt+0x328c>
   13e84:	cmp	sl, #2
   13e88:	beq	13ea0 <strspn@plt+0x2fe8>
   13e8c:	cmp	sl, #5
   13e90:	beq	13eb8 <strspn@plt+0x3000>
   13e94:	mov	r8, #0
   13e98:	mov	r5, r8
   13e9c:	b	14144 <strspn@plt+0x328c>
   13ea0:	ldr	r3, [sp, #32]
   13ea4:	cmp	r3, #0
   13ea8:	bne	14908 <strspn@plt+0x3a50>
   13eac:	mov	r8, r3
   13eb0:	mov	r5, r3
   13eb4:	b	14144 <strspn@plt+0x328c>
   13eb8:	ldr	r3, [sp, #156]	; 0x9c
   13ebc:	tst	r3, #4
   13ec0:	beq	147a0 <strspn@plt+0x38e8>
   13ec4:	add	r3, r6, #2
   13ec8:	ldr	r2, [sp, #28]
   13ecc:	cmp	r2, r3
   13ed0:	bls	147ac <strspn@plt+0x38f4>
   13ed4:	ldr	r2, [sp, #52]	; 0x34
   13ed8:	add	r2, r2, r6
   13edc:	ldrb	r2, [r2, #1]
   13ee0:	cmp	r2, #63	; 0x3f
   13ee4:	movne	r8, #0
   13ee8:	movne	r5, r8
   13eec:	bne	14144 <strspn@plt+0x328c>
   13ef0:	ldr	r2, [sp, #52]	; 0x34
   13ef4:	ldrb	r2, [r2, r3]
   13ef8:	sub	r1, r2, #33	; 0x21
   13efc:	cmp	r1, #29
   13f00:	ldrls	pc, [pc, r1, lsl #2]
   13f04:	b	147b8 <strspn@plt+0x3900>
   13f08:	andeq	r3, r1, r0, lsl #31
   13f0c:			; <UNDEFINED> instruction: 0x000147b8
   13f10:			; <UNDEFINED> instruction: 0x000147b8
   13f14:			; <UNDEFINED> instruction: 0x000147b8
   13f18:			; <UNDEFINED> instruction: 0x000147b8
   13f1c:			; <UNDEFINED> instruction: 0x000147b8
   13f20:	andeq	r3, r1, r0, lsl #31
   13f24:	andeq	r3, r1, r0, lsl #31
   13f28:	andeq	r3, r1, r0, lsl #31
   13f2c:			; <UNDEFINED> instruction: 0x000147b8
   13f30:			; <UNDEFINED> instruction: 0x000147b8
   13f34:			; <UNDEFINED> instruction: 0x000147b8
   13f38:	andeq	r3, r1, r0, lsl #31
   13f3c:			; <UNDEFINED> instruction: 0x000147b8
   13f40:	andeq	r3, r1, r0, lsl #31
   13f44:			; <UNDEFINED> instruction: 0x000147b8
   13f48:			; <UNDEFINED> instruction: 0x000147b8
   13f4c:			; <UNDEFINED> instruction: 0x000147b8
   13f50:			; <UNDEFINED> instruction: 0x000147b8
   13f54:			; <UNDEFINED> instruction: 0x000147b8
   13f58:			; <UNDEFINED> instruction: 0x000147b8
   13f5c:			; <UNDEFINED> instruction: 0x000147b8
   13f60:			; <UNDEFINED> instruction: 0x000147b8
   13f64:			; <UNDEFINED> instruction: 0x000147b8
   13f68:			; <UNDEFINED> instruction: 0x000147b8
   13f6c:			; <UNDEFINED> instruction: 0x000147b8
   13f70:			; <UNDEFINED> instruction: 0x000147b8
   13f74:	andeq	r3, r1, r0, lsl #31
   13f78:	andeq	r3, r1, r0, lsl #31
   13f7c:	andeq	r3, r1, r0, lsl #31
   13f80:	ldr	r1, [sp, #32]
   13f84:	cmp	r1, #0
   13f88:	bne	149c8 <strspn@plt+0x3b10>
   13f8c:	cmp	r7, fp
   13f90:	movhi	r1, #63	; 0x3f
   13f94:	ldrhi	r0, [sp, #36]	; 0x24
   13f98:	strbhi	r1, [r0, fp]
   13f9c:	add	r1, fp, #1
   13fa0:	cmp	r7, r1
   13fa4:	ldrhi	r0, [sp, #36]	; 0x24
   13fa8:	movhi	ip, #34	; 0x22
   13fac:	strbhi	ip, [r0, r1]
   13fb0:	add	r1, fp, #2
   13fb4:	cmp	r7, r1
   13fb8:	ldrhi	r0, [sp, #36]	; 0x24
   13fbc:	movhi	ip, #34	; 0x22
   13fc0:	strbhi	ip, [r0, r1]
   13fc4:	add	r1, fp, #3
   13fc8:	cmp	r7, r1
   13fcc:	movhi	r0, #63	; 0x3f
   13fd0:	ldrhi	ip, [sp, #36]	; 0x24
   13fd4:	strbhi	r0, [ip, r1]
   13fd8:	add	fp, fp, #4
   13fdc:	ldr	r5, [sp, #32]
   13fe0:	mov	r8, r5
   13fe4:	mov	r4, r2
   13fe8:	mov	r6, r3
   13fec:	b	14144 <strspn@plt+0x328c>
   13ff0:	mov	r3, #102	; 0x66
   13ff4:	b	140ac <strspn@plt+0x31f4>
   13ff8:	mov	r3, #118	; 0x76
   13ffc:	b	140ac <strspn@plt+0x31f4>
   14000:	cmp	sl, #2
   14004:	beq	14070 <strspn@plt+0x31b8>
   14008:	ldr	r3, [sp, #48]	; 0x30
   1400c:	ldr	r2, [sp, #32]
   14010:	and	r3, r3, r2
   14014:	tst	r9, r3
   14018:	moveq	r3, r4
   1401c:	beq	140ac <strspn@plt+0x31f4>
   14020:	mov	r8, #0
   14024:	mov	r5, r8
   14028:	eor	r5, r5, #1
   1402c:	ldr	r3, [sp, #44]	; 0x2c
   14030:	and	r5, r5, r3
   14034:	tst	r5, #255	; 0xff
   14038:	beq	14218 <strspn@plt+0x3360>
   1403c:	cmp	r7, fp
   14040:	ldrhi	r3, [sp, #36]	; 0x24
   14044:	movhi	r2, #39	; 0x27
   14048:	strbhi	r2, [r3, fp]
   1404c:	add	r3, fp, #1
   14050:	cmp	r7, r3
   14054:	ldrhi	r2, [sp, #36]	; 0x24
   14058:	movhi	r1, #39	; 0x27
   1405c:	strbhi	r1, [r2, r3]
   14060:	add	fp, fp, #2
   14064:	mov	r3, #0
   14068:	str	r3, [sp, #44]	; 0x2c
   1406c:	b	14218 <strspn@plt+0x3360>
   14070:	ldr	r3, [sp, #32]
   14074:	cmp	r3, #0
   14078:	bne	14914 <strspn@plt+0x3a5c>
   1407c:	mov	r8, r3
   14080:	mov	r5, r3
   14084:	b	14028 <strspn@plt+0x3170>
   14088:	mov	r3, #110	; 0x6e
   1408c:	b	14094 <strspn@plt+0x31dc>
   14090:	mov	r3, #116	; 0x74
   14094:	ldr	r2, [sp, #32]
   14098:	cmp	sl, #2
   1409c:	movne	r2, #0
   140a0:	andeq	r2, r2, #1
   140a4:	cmp	r2, #0
   140a8:	bne	140cc <strspn@plt+0x3214>
   140ac:	ldr	r2, [sp, #48]	; 0x30
   140b0:	cmp	r2, #0
   140b4:	moveq	r8, r2
   140b8:	moveq	r5, r2
   140bc:	beq	14144 <strspn@plt+0x328c>
   140c0:	mov	r4, r3
   140c4:	mov	r8, #0
   140c8:	b	1419c <strspn@plt+0x32e4>
   140cc:	mov	r8, sl
   140d0:	mov	sl, r7
   140d4:	b	14940 <strspn@plt+0x3a88>
   140d8:	mov	r3, #97	; 0x61
   140dc:	b	140ac <strspn@plt+0x31f4>
   140e0:	ldr	r3, [sp, #28]
   140e4:	cmn	r3, #1
   140e8:	beq	14114 <strspn@plt+0x325c>
   140ec:	ldr	r3, [sp, #28]
   140f0:	subs	r3, r3, #1
   140f4:	movne	r3, #1
   140f8:	cmp	r3, #0
   140fc:	bne	147c4 <strspn@plt+0x390c>
   14100:	cmp	r6, #0
   14104:	beq	1412c <strspn@plt+0x3274>
   14108:	mov	r8, #0
   1410c:	mov	r5, r8
   14110:	b	14144 <strspn@plt+0x328c>
   14114:	ldr	r3, [sp, #52]	; 0x34
   14118:	ldrb	r3, [r3, #1]
   1411c:	adds	r3, r3, #0
   14120:	movne	r3, #1
   14124:	b	140f8 <strspn@plt+0x3240>
   14128:	mov	r8, #0
   1412c:	ldr	r5, [sp, #32]
   14130:	cmp	sl, #2
   14134:	movne	r5, #0
   14138:	andeq	r5, r5, #1
   1413c:	cmp	r5, #0
   14140:	bne	142f4 <strspn@plt+0x343c>
   14144:	ldr	r3, [sp, #68]	; 0x44
   14148:	cmp	sl, #2
   1414c:	orreq	r3, r3, #1
   14150:	eor	r3, r3, #1
   14154:	ldr	r2, [sp, #32]
   14158:	orr	r3, r2, r3
   1415c:	tst	r3, #255	; 0xff
   14160:	beq	14190 <strspn@plt+0x32d8>
   14164:	ldr	r3, [sp, #160]	; 0xa0
   14168:	cmp	r3, #0
   1416c:	beq	14190 <strspn@plt+0x32d8>
   14170:	lsr	r2, r4, #5
   14174:	uxtb	r2, r2
   14178:	and	r3, r4, #31
   1417c:	ldr	r1, [sp, #160]	; 0xa0
   14180:	ldr	r2, [r1, r2, lsl #2]
   14184:	lsr	r3, r2, r3
   14188:	tst	r3, #1
   1418c:	bne	1419c <strspn@plt+0x32e4>
   14190:	ldr	r3, [sp, #56]	; 0x38
   14194:	cmp	r3, #0
   14198:	beq	14028 <strspn@plt+0x3170>
   1419c:	ldr	r3, [sp, #32]
   141a0:	cmp	r3, #0
   141a4:	bne	149b0 <strspn@plt+0x3af8>
   141a8:	ldr	r3, [sp, #44]	; 0x2c
   141ac:	eor	r3, r3, #1
   141b0:	cmp	sl, #2
   141b4:	movne	r3, #0
   141b8:	andeq	r3, r3, #1
   141bc:	cmp	r3, #0
   141c0:	beq	14204 <strspn@plt+0x334c>
   141c4:	cmp	r7, fp
   141c8:	ldrhi	r2, [sp, #36]	; 0x24
   141cc:	movhi	r1, #39	; 0x27
   141d0:	strbhi	r1, [r2, fp]
   141d4:	add	r2, fp, #1
   141d8:	cmp	r7, r2
   141dc:	ldrhi	r1, [sp, #36]	; 0x24
   141e0:	movhi	r0, #36	; 0x24
   141e4:	strbhi	r0, [r1, r2]
   141e8:	add	r2, fp, #2
   141ec:	cmp	r7, r2
   141f0:	ldrhi	r1, [sp, #36]	; 0x24
   141f4:	movhi	r0, #39	; 0x27
   141f8:	strbhi	r0, [r1, r2]
   141fc:	add	fp, fp, #3
   14200:	str	r3, [sp, #44]	; 0x2c
   14204:	cmp	r7, fp
   14208:	ldrhi	r3, [sp, #36]	; 0x24
   1420c:	movhi	r2, #92	; 0x5c
   14210:	strbhi	r2, [r3, fp]
   14214:	add	fp, fp, #1
   14218:	cmp	fp, r7
   1421c:	ldrcc	r3, [sp, #36]	; 0x24
   14220:	strbcc	r4, [r3, fp]
   14224:	add	fp, fp, #1
   14228:	ldr	r3, [sp, #40]	; 0x28
   1422c:	cmp	r8, #0
   14230:	moveq	r3, #0
   14234:	str	r3, [sp, #40]	; 0x28
   14238:	add	r6, r6, #1
   1423c:	ldr	r3, [sp, #28]
   14240:	cmn	r3, #1
   14244:	beq	147d0 <strspn@plt+0x3918>
   14248:	ldr	r3, [sp, #28]
   1424c:	subs	r8, r3, r6
   14250:	movne	r8, #1
   14254:	cmp	r8, #0
   14258:	beq	147e4 <strspn@plt+0x392c>
   1425c:	ldr	r5, [sp, #48]	; 0x30
   14260:	cmp	sl, #2
   14264:	moveq	r5, #0
   14268:	andne	r5, r5, #1
   1426c:	ldr	r3, [sp, #60]	; 0x3c
   14270:	adds	r9, r3, #0
   14274:	movne	r9, #1
   14278:	ands	r2, r5, r9
   1427c:	str	r2, [sp, #56]	; 0x38
   14280:	beq	13b48 <strspn@plt+0x2c90>
   14284:	add	r4, r6, r3
   14288:	ldr	r2, [sp, #28]
   1428c:	cmp	r3, #1
   14290:	movls	r3, #0
   14294:	movhi	r3, #1
   14298:	cmn	r2, #1
   1429c:	movne	r3, #0
   142a0:	cmp	r3, #0
   142a4:	beq	142b4 <strspn@plt+0x33fc>
   142a8:	ldr	r0, [sp, #52]	; 0x34
   142ac:	bl	10dec <strlen@plt>
   142b0:	str	r0, [sp, #28]
   142b4:	ldr	r3, [sp, #28]
   142b8:	cmp	r3, r4
   142bc:	bcc	13b40 <strspn@plt+0x2c88>
   142c0:	ldr	r2, [sp, #60]	; 0x3c
   142c4:	ldr	r1, [sp, #72]	; 0x48
   142c8:	ldr	r3, [sp, #52]	; 0x34
   142cc:	add	r0, r3, r6
   142d0:	bl	10cd8 <memcmp@plt>
   142d4:	cmp	r0, #0
   142d8:	bne	13d60 <strspn@plt+0x2ea8>
   142dc:	ldr	r3, [sp, #32]
   142e0:	cmp	r3, #0
   142e4:	beq	13b48 <strspn@plt+0x2c90>
   142e8:	mov	r8, sl
   142ec:	mov	sl, r7
   142f0:	b	14940 <strspn@plt+0x3a88>
   142f4:	mov	r8, sl
   142f8:	mov	sl, r7
   142fc:	b	14940 <strspn@plt+0x3a88>
   14300:	cmp	sl, #2
   14304:	strne	r8, [sp, #80]	; 0x50
   14308:	movne	r5, #0
   1430c:	bne	14144 <strspn@plt+0x328c>
   14310:	ldr	r3, [sp, #32]
   14314:	cmp	r3, #0
   14318:	bne	1492c <strspn@plt+0x3a74>
   1431c:	ldr	r2, [sp, #76]	; 0x4c
   14320:	adds	r3, r7, #0
   14324:	movne	r3, #1
   14328:	cmp	r2, #0
   1432c:	movne	r3, #0
   14330:	cmp	r3, #0
   14334:	movne	r3, #0
   14338:	bne	14368 <strspn@plt+0x34b0>
   1433c:	cmp	r7, fp
   14340:	ldrhi	r3, [sp, #36]	; 0x24
   14344:	movhi	r2, #39	; 0x27
   14348:	strbhi	r2, [r3, fp]
   1434c:	add	r3, fp, #1
   14350:	cmp	r7, r3
   14354:	ldrhi	r2, [sp, #36]	; 0x24
   14358:	movhi	r1, #92	; 0x5c
   1435c:	strbhi	r1, [r2, r3]
   14360:	mov	r3, r7
   14364:	ldr	r7, [sp, #76]	; 0x4c
   14368:	add	r2, fp, #2
   1436c:	cmp	r2, r3
   14370:	ldrcc	r1, [sp, #36]	; 0x24
   14374:	movcc	r0, #39	; 0x27
   14378:	strbcc	r0, [r1, r2]
   1437c:	add	fp, fp, #3
   14380:	ldr	r2, [sp, #32]
   14384:	mov	r5, r2
   14388:	str	r8, [sp, #80]	; 0x50
   1438c:	str	r2, [sp, #44]	; 0x2c
   14390:	str	r7, [sp, #76]	; 0x4c
   14394:	mov	r7, r3
   14398:	b	14144 <strspn@plt+0x328c>
   1439c:	ldr	r5, [sp, #84]	; 0x54
   143a0:	cmp	r5, #1
   143a4:	beq	143d4 <strspn@plt+0x351c>
   143a8:	mov	r3, #0
   143ac:	str	r3, [sp, #104]	; 0x68
   143b0:	str	r3, [sp, #108]	; 0x6c
   143b4:	ldr	r3, [sp, #28]
   143b8:	cmn	r3, #1
   143bc:	beq	14408 <strspn@plt+0x3550>
   143c0:	mov	r3, #0
   143c4:	str	r4, [sp, #88]	; 0x58
   143c8:	str	fp, [sp, #92]	; 0x5c
   143cc:	mov	fp, r3
   143d0:	b	14530 <strspn@plt+0x3678>
   143d4:	bl	10dc8 <__ctype_b_loc@plt>
   143d8:	ldr	r2, [r0]
   143dc:	lsl	r3, r4, #1
   143e0:	ldrh	r8, [r2, r3]
   143e4:	lsr	r8, r8, #14
   143e8:	and	r8, r8, #1
   143ec:	mov	r2, r5
   143f0:	eor	r5, r8, #1
   143f4:	ldr	r3, [sp, #48]	; 0x30
   143f8:	and	r5, r5, r3
   143fc:	ands	r5, r5, #255	; 0xff
   14400:	beq	14144 <strspn@plt+0x328c>
   14404:	b	145c8 <strspn@plt+0x3710>
   14408:	ldr	r0, [sp, #52]	; 0x34
   1440c:	bl	10dec <strlen@plt>
   14410:	str	r0, [sp, #28]
   14414:	b	143c0 <strspn@plt+0x3508>
   14418:	mov	r2, fp
   1441c:	mov	r1, r4
   14420:	ldr	r4, [sp, #88]	; 0x58
   14424:	ldr	fp, [sp, #92]	; 0x5c
   14428:	ldr	r0, [sp, #28]
   1442c:	cmp	r0, r5
   14430:	bls	145fc <strspn@plt+0x3744>
   14434:	ldrb	r3, [r1]
   14438:	cmp	r3, #0
   1443c:	beq	14604 <strspn@plt+0x374c>
   14440:	mov	r3, r1
   14444:	add	r2, r2, #1
   14448:	add	r1, r6, r2
   1444c:	cmp	r0, r1
   14450:	bls	1460c <strspn@plt+0x3754>
   14454:	ldrb	r1, [r3, #1]!
   14458:	cmp	r1, #0
   1445c:	bne	14444 <strspn@plt+0x358c>
   14460:	mov	r8, #0
   14464:	b	145c0 <strspn@plt+0x3708>
   14468:	cmp	r4, r5
   1446c:	beq	1450c <strspn@plt+0x3654>
   14470:	ldrb	r3, [r4, #1]!
   14474:	sub	r3, r3, #91	; 0x5b
   14478:	cmp	r3, #33	; 0x21
   1447c:	ldrls	pc, [pc, r3, lsl #2]
   14480:	b	14468 <strspn@plt+0x35b0>
   14484:	andeq	r4, r1, r8, lsr r9
   14488:	andeq	r4, r1, r8, lsr r9
   1448c:	andeq	r4, r1, r8, ror #8
   14490:	andeq	r4, r1, r8, lsr r9
   14494:	andeq	r4, r1, r8, ror #8
   14498:	andeq	r4, r1, r8, lsr r9
   1449c:	andeq	r4, r1, r8, ror #8
   144a0:	andeq	r4, r1, r8, ror #8
   144a4:	andeq	r4, r1, r8, ror #8
   144a8:	andeq	r4, r1, r8, ror #8
   144ac:	andeq	r4, r1, r8, ror #8
   144b0:	andeq	r4, r1, r8, ror #8
   144b4:	andeq	r4, r1, r8, ror #8
   144b8:	andeq	r4, r1, r8, ror #8
   144bc:	andeq	r4, r1, r8, ror #8
   144c0:	andeq	r4, r1, r8, ror #8
   144c4:	andeq	r4, r1, r8, ror #8
   144c8:	andeq	r4, r1, r8, ror #8
   144cc:	andeq	r4, r1, r8, ror #8
   144d0:	andeq	r4, r1, r8, ror #8
   144d4:	andeq	r4, r1, r8, ror #8
   144d8:	andeq	r4, r1, r8, ror #8
   144dc:	andeq	r4, r1, r8, ror #8
   144e0:	andeq	r4, r1, r8, ror #8
   144e4:	andeq	r4, r1, r8, ror #8
   144e8:	andeq	r4, r1, r8, ror #8
   144ec:	andeq	r4, r1, r8, ror #8
   144f0:	andeq	r4, r1, r8, ror #8
   144f4:	andeq	r4, r1, r8, ror #8
   144f8:	andeq	r4, r1, r8, ror #8
   144fc:	andeq	r4, r1, r8, ror #8
   14500:	andeq	r4, r1, r8, ror #8
   14504:	andeq	r4, r1, r8, ror #8
   14508:	andeq	r4, r1, r8, lsr r9
   1450c:	ldr	r0, [sp, #100]	; 0x64
   14510:	bl	10d20 <iswprint@plt>
   14514:	cmp	r0, #0
   14518:	moveq	r8, #0
   1451c:	add	fp, fp, r9
   14520:	add	r0, sp, #104	; 0x68
   14524:	bl	10ccc <mbsinit@plt>
   14528:	cmp	r0, #0
   1452c:	bne	145a0 <strspn@plt+0x36e8>
   14530:	add	r5, r6, fp
   14534:	ldr	r3, [sp, #52]	; 0x34
   14538:	add	r4, r3, r5
   1453c:	add	r3, sp, #104	; 0x68
   14540:	ldr	r2, [sp, #28]
   14544:	sub	r2, r2, r5
   14548:	mov	r1, r4
   1454c:	add	r0, sp, #100	; 0x64
   14550:	bl	161f4 <strspn@plt+0x533c>
   14554:	subs	r9, r0, #0
   14558:	beq	14614 <strspn@plt+0x375c>
   1455c:	cmn	r9, #1
   14560:	beq	145b0 <strspn@plt+0x36f8>
   14564:	cmn	r9, #2
   14568:	beq	14418 <strspn@plt+0x3560>
   1456c:	ldr	r3, [sp, #32]
   14570:	cmp	sl, #2
   14574:	movne	r3, #0
   14578:	andeq	r3, r3, #1
   1457c:	cmp	r3, #0
   14580:	beq	1450c <strspn@plt+0x3654>
   14584:	cmp	r9, #1
   14588:	bls	1450c <strspn@plt+0x3654>
   1458c:	sub	r3, r9, #1
   14590:	add	r5, r3, r5
   14594:	ldr	r3, [sp, #52]	; 0x34
   14598:	add	r5, r3, r5
   1459c:	b	14470 <strspn@plt+0x35b8>
   145a0:	ldr	r4, [sp, #88]	; 0x58
   145a4:	mov	r2, fp
   145a8:	ldr	fp, [sp, #92]	; 0x5c
   145ac:	b	145c0 <strspn@plt+0x3708>
   145b0:	ldr	r4, [sp, #88]	; 0x58
   145b4:	mov	r2, fp
   145b8:	ldr	fp, [sp, #92]	; 0x5c
   145bc:	mov	r8, #0
   145c0:	cmp	r2, #1
   145c4:	bls	143f0 <strspn@plt+0x3538>
   145c8:	add	r1, r6, r2
   145cc:	ldr	ip, [sp, #64]	; 0x40
   145d0:	mov	r5, #0
   145d4:	eor	r3, r8, #1
   145d8:	ldr	r2, [sp, #48]	; 0x30
   145dc:	and	r3, r3, r2
   145e0:	uxtb	r3, r3
   145e4:	ldr	r9, [sp, #32]
   145e8:	ldr	lr, [sp, #44]	; 0x2c
   145ec:	ldr	r2, [sp, #56]	; 0x38
   145f0:	str	r8, [sp, #56]	; 0x38
   145f4:	ldr	r0, [sp, #36]	; 0x24
   145f8:	b	14694 <strspn@plt+0x37dc>
   145fc:	mov	r8, #0
   14600:	b	145c0 <strspn@plt+0x3708>
   14604:	mov	r8, #0
   14608:	b	145c0 <strspn@plt+0x3708>
   1460c:	mov	r8, #0
   14610:	b	145c0 <strspn@plt+0x3708>
   14614:	ldr	r4, [sp, #88]	; 0x58
   14618:	mov	r2, fp
   1461c:	ldr	fp, [sp, #92]	; 0x5c
   14620:	b	145c0 <strspn@plt+0x3708>
   14624:	cmp	r2, #0
   14628:	beq	1463c <strspn@plt+0x3784>
   1462c:	cmp	r7, fp
   14630:	movhi	r2, #92	; 0x5c
   14634:	strbhi	r2, [r0, fp]
   14638:	add	fp, fp, #1
   1463c:	add	r8, r6, #1
   14640:	cmp	r1, r8
   14644:	bls	1474c <strspn@plt+0x3894>
   14648:	eor	r2, r5, #1
   1464c:	and	r2, r2, lr
   14650:	ands	r2, r2, #255	; 0xff
   14654:	beq	14768 <strspn@plt+0x38b0>
   14658:	cmp	r7, fp
   1465c:	movhi	r2, #39	; 0x27
   14660:	strbhi	r2, [r0, fp]
   14664:	add	r2, fp, #1
   14668:	cmp	r7, r2
   1466c:	movhi	lr, #39	; 0x27
   14670:	strbhi	lr, [r0, r2]
   14674:	add	fp, fp, #2
   14678:	mov	r6, r8
   1467c:	mov	r2, r3
   14680:	mov	lr, r3
   14684:	cmp	r7, fp
   14688:	strbhi	r4, [r0, fp]
   1468c:	add	fp, fp, #1
   14690:	ldrb	r4, [ip, #1]!
   14694:	cmp	r3, #0
   14698:	beq	14624 <strspn@plt+0x376c>
   1469c:	cmp	r9, #0
   146a0:	bne	149a4 <strspn@plt+0x3aec>
   146a4:	eor	r5, lr, #1
   146a8:	cmp	sl, #2
   146ac:	movne	r5, #0
   146b0:	andeq	r5, r5, #1
   146b4:	cmp	r5, #0
   146b8:	beq	146f0 <strspn@plt+0x3838>
   146bc:	cmp	r7, fp
   146c0:	movhi	lr, #39	; 0x27
   146c4:	strbhi	lr, [r0, fp]
   146c8:	add	lr, fp, #1
   146cc:	cmp	r7, lr
   146d0:	movhi	r8, #36	; 0x24
   146d4:	strbhi	r8, [r0, lr]
   146d8:	add	lr, fp, #2
   146dc:	cmp	r7, lr
   146e0:	movhi	r8, #39	; 0x27
   146e4:	strbhi	r8, [r0, lr]
   146e8:	add	fp, fp, #3
   146ec:	mov	lr, r5
   146f0:	cmp	r7, fp
   146f4:	movhi	r5, #92	; 0x5c
   146f8:	strbhi	r5, [r0, fp]
   146fc:	add	r5, fp, #1
   14700:	cmp	r7, r5
   14704:	lsrhi	r8, r4, #6
   14708:	addhi	r8, r8, #48	; 0x30
   1470c:	strbhi	r8, [r0, r5]
   14710:	add	r8, fp, #2
   14714:	cmp	r7, r8
   14718:	lsrhi	r5, r4, #3
   1471c:	andhi	r5, r5, #7
   14720:	addhi	r5, r5, #48	; 0x30
   14724:	strbhi	r5, [r0, r8]
   14728:	add	fp, fp, #3
   1472c:	and	r4, r4, #7
   14730:	add	r4, r4, #48	; 0x30
   14734:	add	r5, r6, #1
   14738:	cmp	r1, r5
   1473c:	bls	14758 <strspn@plt+0x38a0>
   14740:	mov	r6, r5
   14744:	mov	r5, r3
   14748:	b	14684 <strspn@plt+0x37cc>
   1474c:	str	lr, [sp, #44]	; 0x2c
   14750:	ldr	r8, [sp, #56]	; 0x38
   14754:	b	14028 <strspn@plt+0x3170>
   14758:	str	lr, [sp, #44]	; 0x2c
   1475c:	ldr	r8, [sp, #56]	; 0x38
   14760:	mov	r5, r3
   14764:	b	14028 <strspn@plt+0x3170>
   14768:	mov	r6, r8
   1476c:	b	14684 <strspn@plt+0x37cc>
   14770:	mov	r5, #0
   14774:	b	14144 <strspn@plt+0x328c>
   14778:	mov	r8, r5
   1477c:	ldr	r5, [sp, #48]	; 0x30
   14780:	mov	r4, #48	; 0x30
   14784:	b	14144 <strspn@plt+0x328c>
   14788:	ldr	r8, [sp, #32]
   1478c:	mov	r4, #48	; 0x30
   14790:	b	14144 <strspn@plt+0x328c>
   14794:	ldr	r8, [sp, #32]
   14798:	mov	r4, #48	; 0x30
   1479c:	b	14144 <strspn@plt+0x328c>
   147a0:	mov	r8, #0
   147a4:	mov	r5, r8
   147a8:	b	14144 <strspn@plt+0x328c>
   147ac:	mov	r8, #0
   147b0:	mov	r5, r8
   147b4:	b	14144 <strspn@plt+0x328c>
   147b8:	mov	r8, #0
   147bc:	mov	r5, r8
   147c0:	b	14144 <strspn@plt+0x328c>
   147c4:	mov	r8, #0
   147c8:	mov	r5, r8
   147cc:	b	14144 <strspn@plt+0x328c>
   147d0:	ldr	r3, [sp, #52]	; 0x34
   147d4:	ldrb	r8, [r3, r6]
   147d8:	adds	r8, r8, #0
   147dc:	movne	r8, #1
   147e0:	b	14254 <strspn@plt+0x339c>
   147e4:	cmp	sl, #2
   147e8:	movne	r3, #0
   147ec:	moveq	r3, #1
   147f0:	ldr	r1, [sp, #32]
   147f4:	mov	r2, r1
   147f8:	and	r2, r2, r3
   147fc:	cmp	fp, #0
   14800:	movne	r2, #0
   14804:	andeq	r2, r2, #1
   14808:	cmp	r2, #0
   1480c:	bne	149bc <strspn@plt+0x3b04>
   14810:	eor	r2, r1, #1
   14814:	and	r3, r3, r2
   14818:	ldr	r1, [sp, #80]	; 0x50
   1481c:	tst	r1, r3
   14820:	beq	14898 <strspn@plt+0x39e0>
   14824:	ldr	r3, [sp, #40]	; 0x28
   14828:	cmp	r3, #0
   1482c:	bne	14854 <strspn@plt+0x399c>
   14830:	ldr	r1, [sp, #76]	; 0x4c
   14834:	clz	r3, r7
   14838:	lsr	r3, r3, #5
   1483c:	cmp	r1, #0
   14840:	moveq	r3, #0
   14844:	cmp	r3, #0
   14848:	beq	14898 <strspn@plt+0x39e0>
   1484c:	ldr	r7, [sp, #76]	; 0x4c
   14850:	b	138e8 <strspn@plt+0x2a30>
   14854:	ldr	r3, [sp, #168]	; 0xa8
   14858:	str	r3, [sp, #16]
   1485c:	ldr	r3, [sp, #164]	; 0xa4
   14860:	str	r3, [sp, #12]
   14864:	ldr	r3, [sp, #160]	; 0xa0
   14868:	str	r3, [sp, #8]
   1486c:	ldr	r3, [sp, #156]	; 0x9c
   14870:	str	r3, [sp, #4]
   14874:	mov	r3, #5
   14878:	str	r3, [sp]
   1487c:	ldr	r3, [sp, #28]
   14880:	ldr	r2, [sp, #52]	; 0x34
   14884:	ldr	r1, [sp, #76]	; 0x4c
   14888:	ldr	r0, [sp, #36]	; 0x24
   1488c:	bl	13888 <strspn@plt+0x29d0>
   14890:	mov	fp, r0
   14894:	b	14998 <strspn@plt+0x3ae0>
   14898:	mov	sl, r7
   1489c:	ldr	r3, [sp, #72]	; 0x48
   148a0:	cmp	r3, #0
   148a4:	moveq	r2, #0
   148a8:	andne	r2, r2, #1
   148ac:	cmp	r2, #0
   148b0:	beq	148e0 <strspn@plt+0x3a28>
   148b4:	mov	r2, r3
   148b8:	ldrb	r3, [r3]
   148bc:	cmp	r3, #0
   148c0:	beq	148e0 <strspn@plt+0x3a28>
   148c4:	ldr	r1, [sp, #36]	; 0x24
   148c8:	cmp	sl, fp
   148cc:	strbhi	r3, [r1, fp]
   148d0:	add	fp, fp, #1
   148d4:	ldrb	r3, [r2, #1]!
   148d8:	cmp	r3, #0
   148dc:	bne	148c8 <strspn@plt+0x3a10>
   148e0:	cmp	sl, fp
   148e4:	movhi	r3, #0
   148e8:	ldrhi	r2, [sp, #36]	; 0x24
   148ec:	strbhi	r3, [r2, fp]
   148f0:	b	14998 <strspn@plt+0x3ae0>
   148f4:	mov	r8, sl
   148f8:	mov	sl, r7
   148fc:	ldr	r3, [sp, #32]
   14900:	str	r3, [sp, #48]	; 0x30
   14904:	b	14940 <strspn@plt+0x3a88>
   14908:	mov	r8, sl
   1490c:	mov	sl, r7
   14910:	b	14940 <strspn@plt+0x3a88>
   14914:	mov	r8, sl
   14918:	mov	sl, r7
   1491c:	b	14940 <strspn@plt+0x3a88>
   14920:	andeq	r7, r1, ip, lsl r2
   14924:	andeq	r7, r1, ip, lsr #4
   14928:	andeq	r7, r1, r0, lsr #4
   1492c:	mov	r8, sl
   14930:	mov	sl, r7
   14934:	b	14940 <strspn@plt+0x3a88>
   14938:	mov	r8, sl
   1493c:	mov	sl, r7
   14940:	ldr	r3, [sp, #48]	; 0x30
   14944:	cmp	r8, #2
   14948:	movne	r3, #0
   1494c:	andeq	r3, r3, #1
   14950:	cmp	r3, #0
   14954:	movne	r8, #4
   14958:	ldr	r3, [sp, #168]	; 0xa8
   1495c:	str	r3, [sp, #16]
   14960:	ldr	r3, [sp, #164]	; 0xa4
   14964:	str	r3, [sp, #12]
   14968:	mov	r3, #0
   1496c:	str	r3, [sp, #8]
   14970:	ldr	r3, [sp, #156]	; 0x9c
   14974:	bic	r3, r3, #2
   14978:	str	r3, [sp, #4]
   1497c:	str	r8, [sp]
   14980:	ldr	r3, [sp, #28]
   14984:	ldr	r2, [sp, #52]	; 0x34
   14988:	mov	r1, sl
   1498c:	ldr	r0, [sp, #36]	; 0x24
   14990:	bl	13888 <strspn@plt+0x29d0>
   14994:	mov	fp, r0
   14998:	mov	r0, fp
   1499c:	add	sp, sp, #116	; 0x74
   149a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149a4:	mov	r8, sl
   149a8:	mov	sl, r7
   149ac:	b	14940 <strspn@plt+0x3a88>
   149b0:	mov	r8, sl
   149b4:	mov	sl, r7
   149b8:	b	14940 <strspn@plt+0x3a88>
   149bc:	mov	r8, sl
   149c0:	mov	sl, r7
   149c4:	b	14940 <strspn@plt+0x3a88>
   149c8:	mov	r8, sl
   149cc:	mov	sl, r7
   149d0:	b	14958 <strspn@plt+0x3aa0>
   149d4:	mov	r3, #1
   149d8:	str	r3, [sp, #32]
   149dc:	str	r3, [sp, #48]	; 0x30
   149e0:	str	r3, [sp, #60]	; 0x3c
   149e4:	ldr	r3, [pc, #-196]	; 14928 <strspn@plt+0x3a70>
   149e8:	str	r3, [sp, #72]	; 0x48
   149ec:	mov	fp, #0
   149f0:	mov	sl, #5
   149f4:	b	13944 <strspn@plt+0x2a8c>
   149f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149fc:	sub	sp, sp, #52	; 0x34
   14a00:	mov	r5, r0
   14a04:	str	r1, [sp, #24]
   14a08:	str	r2, [sp, #28]
   14a0c:	mov	r4, r3
   14a10:	bl	10df8 <__errno_location@plt>
   14a14:	str	r0, [sp, #32]
   14a18:	ldr	r3, [r0]
   14a1c:	str	r3, [sp, #36]	; 0x24
   14a20:	ldr	r3, [pc, #396]	; 14bb4 <strspn@plt+0x3cfc>
   14a24:	ldr	r6, [r3]
   14a28:	cmn	r5, #-2147483647	; 0x80000001
   14a2c:	movne	r3, #0
   14a30:	moveq	r3, #1
   14a34:	orrs	r3, r3, r5, lsr #31
   14a38:	bne	14b78 <strspn@plt+0x3cc0>
   14a3c:	ldr	r3, [pc, #368]	; 14bb4 <strspn@plt+0x3cfc>
   14a40:	ldr	r2, [r3, #4]
   14a44:	cmp	r5, r2
   14a48:	blt	14ab0 <strspn@plt+0x3bf8>
   14a4c:	str	r2, [sp, #44]	; 0x2c
   14a50:	add	r3, r3, #8
   14a54:	cmp	r6, r3
   14a58:	beq	14b7c <strspn@plt+0x3cc4>
   14a5c:	sub	r2, r5, r2
   14a60:	mov	r3, #8
   14a64:	str	r3, [sp]
   14a68:	mvn	r3, #-2147483648	; 0x80000000
   14a6c:	add	r2, r2, #1
   14a70:	add	r1, sp, #44	; 0x2c
   14a74:	mov	r0, r6
   14a78:	bl	15a50 <strspn@plt+0x4b98>
   14a7c:	mov	r6, r0
   14a80:	ldr	r3, [pc, #300]	; 14bb4 <strspn@plt+0x3cfc>
   14a84:	str	r0, [r3]
   14a88:	ldr	r7, [pc, #292]	; 14bb4 <strspn@plt+0x3cfc>
   14a8c:	ldr	r0, [r7, #4]
   14a90:	ldr	r2, [sp, #44]	; 0x2c
   14a94:	sub	r2, r2, r0
   14a98:	lsl	r2, r2, #3
   14a9c:	mov	r1, #0
   14aa0:	add	r0, r6, r0, lsl #3
   14aa4:	bl	10e10 <memset@plt>
   14aa8:	ldr	r3, [sp, #44]	; 0x2c
   14aac:	str	r3, [r7, #4]
   14ab0:	add	fp, r6, r5, lsl #3
   14ab4:	ldr	r8, [r6, r5, lsl #3]
   14ab8:	ldr	r7, [fp, #4]
   14abc:	ldr	r9, [r4, #4]
   14ac0:	orr	r9, r9, #1
   14ac4:	add	sl, r4, #8
   14ac8:	ldr	r3, [r4, #44]	; 0x2c
   14acc:	str	r3, [sp, #16]
   14ad0:	ldr	r3, [r4, #40]	; 0x28
   14ad4:	str	r3, [sp, #12]
   14ad8:	str	sl, [sp, #8]
   14adc:	str	r9, [sp, #4]
   14ae0:	ldr	r3, [r4]
   14ae4:	str	r3, [sp]
   14ae8:	ldr	r3, [sp, #28]
   14aec:	ldr	r2, [sp, #24]
   14af0:	mov	r1, r8
   14af4:	mov	r0, r7
   14af8:	bl	13888 <strspn@plt+0x29d0>
   14afc:	cmp	r8, r0
   14b00:	bhi	14b60 <strspn@plt+0x3ca8>
   14b04:	add	r8, r0, #1
   14b08:	str	r8, [r6, r5, lsl #3]
   14b0c:	ldr	r3, [pc, #164]	; 14bb8 <strspn@plt+0x3d00>
   14b10:	cmp	r7, r3
   14b14:	beq	14b20 <strspn@plt+0x3c68>
   14b18:	mov	r0, r7
   14b1c:	bl	125e0 <strspn@plt+0x1728>
   14b20:	mov	r0, r8
   14b24:	bl	158cc <strspn@plt+0x4a14>
   14b28:	mov	r7, r0
   14b2c:	str	r0, [fp, #4]
   14b30:	ldr	r3, [r4, #44]	; 0x2c
   14b34:	str	r3, [sp, #16]
   14b38:	ldr	r3, [r4, #40]	; 0x28
   14b3c:	str	r3, [sp, #12]
   14b40:	str	sl, [sp, #8]
   14b44:	str	r9, [sp, #4]
   14b48:	ldr	r3, [r4]
   14b4c:	str	r3, [sp]
   14b50:	ldr	r3, [sp, #28]
   14b54:	ldr	r2, [sp, #24]
   14b58:	mov	r1, r8
   14b5c:	bl	13888 <strspn@plt+0x29d0>
   14b60:	ldr	r3, [sp, #32]
   14b64:	ldr	r2, [sp, #36]	; 0x24
   14b68:	str	r2, [r3]
   14b6c:	mov	r0, r7
   14b70:	add	sp, sp, #52	; 0x34
   14b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b78:	bl	10eac <abort@plt>
   14b7c:	sub	r2, r5, r2
   14b80:	mov	r3, #8
   14b84:	str	r3, [sp]
   14b88:	mvn	r3, #-2147483648	; 0x80000000
   14b8c:	add	r2, r2, #1
   14b90:	add	r1, sp, #44	; 0x2c
   14b94:	mov	r0, #0
   14b98:	bl	15a50 <strspn@plt+0x4b98>
   14b9c:	mov	r6, r0
   14ba0:	ldr	r3, [pc, #12]	; 14bb4 <strspn@plt+0x3cfc>
   14ba4:	str	r0, [r3], #8
   14ba8:	ldm	r3, {r0, r1}
   14bac:	stm	r6, {r0, r1}
   14bb0:	b	14a88 <strspn@plt+0x3bd0>
   14bb4:	strdeq	r8, [r2], -r4
   14bb8:	andeq	r8, r2, r0, ror r1
   14bbc:	push	{r4, r5, r6, lr}
   14bc0:	mov	r4, r0
   14bc4:	bl	10df8 <__errno_location@plt>
   14bc8:	mov	r5, r0
   14bcc:	ldr	r6, [r0]
   14bd0:	cmp	r4, #0
   14bd4:	ldr	r3, [pc, #20]	; 14bf0 <strspn@plt+0x3d38>
   14bd8:	moveq	r4, r3
   14bdc:	mov	r1, #48	; 0x30
   14be0:	mov	r0, r4
   14be4:	bl	15db8 <strspn@plt+0x4f00>
   14be8:	str	r6, [r5]
   14bec:	pop	{r4, r5, r6, pc}
   14bf0:	andeq	r8, r2, r0, ror r2
   14bf4:	subs	r3, r0, #0
   14bf8:	ldr	r2, [pc, #8]	; 14c08 <strspn@plt+0x3d50>
   14bfc:	moveq	r3, r2
   14c00:	ldr	r0, [r3]
   14c04:	bx	lr
   14c08:	andeq	r8, r2, r0, ror r2
   14c0c:	subs	r3, r0, #0
   14c10:	ldr	r2, [pc, #8]	; 14c20 <strspn@plt+0x3d68>
   14c14:	moveq	r3, r2
   14c18:	str	r1, [r3]
   14c1c:	bx	lr
   14c20:	andeq	r8, r2, r0, ror r2
   14c24:	push	{lr}		; (str lr, [sp, #-4]!)
   14c28:	subs	r3, r0, #0
   14c2c:	ldr	r0, [pc, #44]	; 14c60 <strspn@plt+0x3da8>
   14c30:	moveq	r3, r0
   14c34:	add	r3, r3, #8
   14c38:	lsr	lr, r1, #5
   14c3c:	and	r1, r1, #31
   14c40:	ldr	ip, [r3, lr, lsl #2]
   14c44:	lsr	r0, ip, r1
   14c48:	eor	r2, r2, r0
   14c4c:	and	r2, r2, #1
   14c50:	eor	r1, ip, r2, lsl r1
   14c54:	str	r1, [r3, lr, lsl #2]
   14c58:	and	r0, r0, #1
   14c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c60:	andeq	r8, r2, r0, ror r2
   14c64:	subs	r3, r0, #0
   14c68:	ldr	r2, [pc, #12]	; 14c7c <strspn@plt+0x3dc4>
   14c6c:	moveq	r3, r2
   14c70:	ldr	r0, [r3, #4]
   14c74:	str	r1, [r3, #4]
   14c78:	bx	lr
   14c7c:	andeq	r8, r2, r0, ror r2
   14c80:	subs	r3, r0, #0
   14c84:	ldr	r0, [pc, #40]	; 14cb4 <strspn@plt+0x3dfc>
   14c88:	moveq	r3, r0
   14c8c:	mov	r0, #10
   14c90:	str	r0, [r3]
   14c94:	cmp	r2, #0
   14c98:	cmpne	r1, #0
   14c9c:	beq	14cac <strspn@plt+0x3df4>
   14ca0:	str	r1, [r3, #40]	; 0x28
   14ca4:	str	r2, [r3, #44]	; 0x2c
   14ca8:	bx	lr
   14cac:	push	{r4, lr}
   14cb0:	bl	10eac <abort@plt>
   14cb4:	andeq	r8, r2, r0, ror r2
   14cb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14cbc:	sub	sp, sp, #24
   14cc0:	mov	r7, r0
   14cc4:	mov	r8, r1
   14cc8:	mov	r9, r2
   14ccc:	mov	sl, r3
   14cd0:	ldr	r4, [sp, #56]	; 0x38
   14cd4:	cmp	r4, #0
   14cd8:	ldr	r3, [pc, #84]	; 14d34 <strspn@plt+0x3e7c>
   14cdc:	moveq	r4, r3
   14ce0:	bl	10df8 <__errno_location@plt>
   14ce4:	mov	r5, r0
   14ce8:	ldr	r6, [r0]
   14cec:	ldr	r3, [r4, #44]	; 0x2c
   14cf0:	str	r3, [sp, #16]
   14cf4:	ldr	r3, [r4, #40]	; 0x28
   14cf8:	str	r3, [sp, #12]
   14cfc:	add	r3, r4, #8
   14d00:	str	r3, [sp, #8]
   14d04:	ldr	r3, [r4, #4]
   14d08:	str	r3, [sp, #4]
   14d0c:	ldr	r3, [r4]
   14d10:	str	r3, [sp]
   14d14:	mov	r3, sl
   14d18:	mov	r2, r9
   14d1c:	mov	r1, r8
   14d20:	mov	r0, r7
   14d24:	bl	13888 <strspn@plt+0x29d0>
   14d28:	str	r6, [r5]
   14d2c:	add	sp, sp, #24
   14d30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d34:	andeq	r8, r2, r0, ror r2
   14d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d3c:	sub	sp, sp, #44	; 0x2c
   14d40:	str	r0, [sp, #28]
   14d44:	str	r1, [sp, #32]
   14d48:	mov	r6, r2
   14d4c:	subs	r4, r3, #0
   14d50:	ldr	r3, [pc, #172]	; 14e04 <strspn@plt+0x3f4c>
   14d54:	moveq	r4, r3
   14d58:	bl	10df8 <__errno_location@plt>
   14d5c:	mov	r7, r0
   14d60:	ldr	fp, [r0]
   14d64:	ldr	r5, [r4, #4]
   14d68:	cmp	r6, #0
   14d6c:	orreq	r5, r5, #1
   14d70:	add	r9, r4, #8
   14d74:	ldr	r3, [r4, #44]	; 0x2c
   14d78:	str	r3, [sp, #16]
   14d7c:	ldr	r3, [r4, #40]	; 0x28
   14d80:	str	r3, [sp, #12]
   14d84:	str	r9, [sp, #8]
   14d88:	str	r5, [sp, #4]
   14d8c:	ldr	r3, [r4]
   14d90:	str	r3, [sp]
   14d94:	ldr	r3, [sp, #32]
   14d98:	ldr	r2, [sp, #28]
   14d9c:	mov	r1, #0
   14da0:	mov	r0, r1
   14da4:	bl	13888 <strspn@plt+0x29d0>
   14da8:	mov	sl, r0
   14dac:	add	r8, r0, #1
   14db0:	mov	r0, r8
   14db4:	bl	158cc <strspn@plt+0x4a14>
   14db8:	str	r0, [sp, #36]	; 0x24
   14dbc:	ldr	r3, [r4, #44]	; 0x2c
   14dc0:	str	r3, [sp, #16]
   14dc4:	ldr	r3, [r4, #40]	; 0x28
   14dc8:	str	r3, [sp, #12]
   14dcc:	str	r9, [sp, #8]
   14dd0:	str	r5, [sp, #4]
   14dd4:	ldr	r3, [r4]
   14dd8:	str	r3, [sp]
   14ddc:	ldr	r3, [sp, #32]
   14de0:	ldr	r2, [sp, #28]
   14de4:	mov	r1, r8
   14de8:	bl	13888 <strspn@plt+0x29d0>
   14dec:	str	fp, [r7]
   14df0:	cmp	r6, #0
   14df4:	strne	sl, [r6]
   14df8:	ldr	r0, [sp, #36]	; 0x24
   14dfc:	add	sp, sp, #44	; 0x2c
   14e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e04:	andeq	r8, r2, r0, ror r2
   14e08:	push	{r4, lr}
   14e0c:	mov	r3, r2
   14e10:	mov	r2, #0
   14e14:	bl	14d38 <strspn@plt+0x3e80>
   14e18:	pop	{r4, pc}
   14e1c:	push	{r4, r5, r6, r7, r8, lr}
   14e20:	ldr	r3, [pc, #140]	; 14eb4 <strspn@plt+0x3ffc>
   14e24:	ldr	r7, [r3]
   14e28:	ldr	r3, [r3, #4]
   14e2c:	cmp	r3, #1
   14e30:	ble	14e5c <strspn@plt+0x3fa4>
   14e34:	mov	r5, r7
   14e38:	mov	r4, #1
   14e3c:	ldr	r6, [pc, #112]	; 14eb4 <strspn@plt+0x3ffc>
   14e40:	ldr	r0, [r5, #12]
   14e44:	bl	125e0 <strspn@plt+0x1728>
   14e48:	add	r4, r4, #1
   14e4c:	add	r5, r5, #8
   14e50:	ldr	r3, [r6, #4]
   14e54:	cmp	r3, r4
   14e58:	bgt	14e40 <strspn@plt+0x3f88>
   14e5c:	ldr	r0, [r7, #4]
   14e60:	ldr	r3, [pc, #80]	; 14eb8 <strspn@plt+0x4000>
   14e64:	cmp	r0, r3
   14e68:	beq	14e84 <strspn@plt+0x3fcc>
   14e6c:	bl	125e0 <strspn@plt+0x1728>
   14e70:	ldr	r3, [pc, #60]	; 14eb4 <strspn@plt+0x3ffc>
   14e74:	mov	r2, #256	; 0x100
   14e78:	str	r2, [r3, #8]
   14e7c:	ldr	r2, [pc, #52]	; 14eb8 <strspn@plt+0x4000>
   14e80:	str	r2, [r3, #12]
   14e84:	ldr	r3, [pc, #48]	; 14ebc <strspn@plt+0x4004>
   14e88:	cmp	r7, r3
   14e8c:	beq	14ea4 <strspn@plt+0x3fec>
   14e90:	mov	r0, r7
   14e94:	bl	125e0 <strspn@plt+0x1728>
   14e98:	ldr	r3, [pc, #20]	; 14eb4 <strspn@plt+0x3ffc>
   14e9c:	add	r2, r3, #8
   14ea0:	str	r2, [r3]
   14ea4:	mov	r2, #1
   14ea8:	ldr	r3, [pc, #4]	; 14eb4 <strspn@plt+0x3ffc>
   14eac:	str	r2, [r3, #4]
   14eb0:	pop	{r4, r5, r6, r7, r8, pc}
   14eb4:	strdeq	r8, [r2], -r4
   14eb8:	andeq	r8, r2, r0, ror r1
   14ebc:	strdeq	r8, [r2], -ip
   14ec0:	push	{r4, lr}
   14ec4:	ldr	r3, [pc, #8]	; 14ed4 <strspn@plt+0x401c>
   14ec8:	mvn	r2, #0
   14ecc:	bl	149f8 <strspn@plt+0x3b40>
   14ed0:	pop	{r4, pc}
   14ed4:	andeq	r8, r2, r0, ror r2
   14ed8:	push	{r4, lr}
   14edc:	ldr	r3, [pc, #4]	; 14ee8 <strspn@plt+0x4030>
   14ee0:	bl	149f8 <strspn@plt+0x3b40>
   14ee4:	pop	{r4, pc}
   14ee8:	andeq	r8, r2, r0, ror r2
   14eec:	push	{r4, lr}
   14ef0:	mov	r1, r0
   14ef4:	mov	r0, #0
   14ef8:	bl	14ec0 <strspn@plt+0x4008>
   14efc:	pop	{r4, pc}
   14f00:	push	{r4, lr}
   14f04:	mov	r2, r1
   14f08:	mov	r1, r0
   14f0c:	mov	r0, #0
   14f10:	bl	14ed8 <strspn@plt+0x4020>
   14f14:	pop	{r4, pc}
   14f18:	push	{r4, r5, lr}
   14f1c:	sub	sp, sp, #52	; 0x34
   14f20:	mov	r4, r0
   14f24:	mov	r5, r2
   14f28:	mov	r0, sp
   14f2c:	bl	13720 <strspn@plt+0x2868>
   14f30:	mov	r3, sp
   14f34:	mvn	r2, #0
   14f38:	mov	r1, r5
   14f3c:	mov	r0, r4
   14f40:	bl	149f8 <strspn@plt+0x3b40>
   14f44:	add	sp, sp, #52	; 0x34
   14f48:	pop	{r4, r5, pc}
   14f4c:	push	{r4, r5, r6, lr}
   14f50:	sub	sp, sp, #48	; 0x30
   14f54:	mov	r4, r0
   14f58:	mov	r5, r2
   14f5c:	mov	r6, r3
   14f60:	mov	r0, sp
   14f64:	bl	13720 <strspn@plt+0x2868>
   14f68:	mov	r3, sp
   14f6c:	mov	r2, r6
   14f70:	mov	r1, r5
   14f74:	mov	r0, r4
   14f78:	bl	149f8 <strspn@plt+0x3b40>
   14f7c:	add	sp, sp, #48	; 0x30
   14f80:	pop	{r4, r5, r6, pc}
   14f84:	push	{r4, lr}
   14f88:	mov	r2, r1
   14f8c:	mov	r1, r0
   14f90:	mov	r0, #0
   14f94:	bl	14f18 <strspn@plt+0x4060>
   14f98:	pop	{r4, pc}
   14f9c:	push	{r4, lr}
   14fa0:	mov	r3, r2
   14fa4:	mov	r2, r1
   14fa8:	mov	r1, r0
   14fac:	mov	r0, #0
   14fb0:	bl	14f4c <strspn@plt+0x4094>
   14fb4:	pop	{r4, pc}
   14fb8:	push	{r4, r5, r6, lr}
   14fbc:	sub	sp, sp, #48	; 0x30
   14fc0:	mov	r4, r0
   14fc4:	mov	r5, r1
   14fc8:	mov	r6, r2
   14fcc:	mov	ip, sp
   14fd0:	ldr	lr, [pc, #64]	; 15018 <strspn@plt+0x4160>
   14fd4:	ldm	lr!, {r0, r1, r2, r3}
   14fd8:	stmia	ip!, {r0, r1, r2, r3}
   14fdc:	ldm	lr!, {r0, r1, r2, r3}
   14fe0:	stmia	ip!, {r0, r1, r2, r3}
   14fe4:	ldm	lr, {r0, r1, r2, r3}
   14fe8:	stm	ip, {r0, r1, r2, r3}
   14fec:	mov	r2, #1
   14ff0:	mov	r1, r6
   14ff4:	mov	r0, sp
   14ff8:	bl	14c24 <strspn@plt+0x3d6c>
   14ffc:	mov	r3, sp
   15000:	mov	r2, r5
   15004:	mov	r1, r4
   15008:	mov	r0, #0
   1500c:	bl	149f8 <strspn@plt+0x3b40>
   15010:	add	sp, sp, #48	; 0x30
   15014:	pop	{r4, r5, r6, pc}
   15018:	andeq	r8, r2, r0, ror r2
   1501c:	push	{r4, lr}
   15020:	mov	r2, r1
   15024:	mvn	r1, #0
   15028:	bl	14fb8 <strspn@plt+0x4100>
   1502c:	pop	{r4, pc}
   15030:	push	{r4, lr}
   15034:	mov	r1, #58	; 0x3a
   15038:	bl	1501c <strspn@plt+0x4164>
   1503c:	pop	{r4, pc}
   15040:	push	{r4, lr}
   15044:	mov	r2, #58	; 0x3a
   15048:	bl	14fb8 <strspn@plt+0x4100>
   1504c:	pop	{r4, pc}
   15050:	push	{r4, r5, lr}
   15054:	sub	sp, sp, #100	; 0x64
   15058:	mov	r4, r0
   1505c:	mov	r5, r2
   15060:	mov	r0, sp
   15064:	bl	13720 <strspn@plt+0x2868>
   15068:	add	lr, sp, #48	; 0x30
   1506c:	mov	ip, sp
   15070:	ldm	ip!, {r0, r1, r2, r3}
   15074:	stmia	lr!, {r0, r1, r2, r3}
   15078:	ldm	ip!, {r0, r1, r2, r3}
   1507c:	stmia	lr!, {r0, r1, r2, r3}
   15080:	ldm	ip, {r0, r1, r2, r3}
   15084:	stm	lr, {r0, r1, r2, r3}
   15088:	mov	r2, #1
   1508c:	mov	r1, #58	; 0x3a
   15090:	add	r0, sp, #48	; 0x30
   15094:	bl	14c24 <strspn@plt+0x3d6c>
   15098:	add	r3, sp, #48	; 0x30
   1509c:	mvn	r2, #0
   150a0:	mov	r1, r5
   150a4:	mov	r0, r4
   150a8:	bl	149f8 <strspn@plt+0x3b40>
   150ac:	add	sp, sp, #100	; 0x64
   150b0:	pop	{r4, r5, pc}
   150b4:	push	{r4, r5, r6, r7, lr}
   150b8:	sub	sp, sp, #52	; 0x34
   150bc:	mov	r4, r0
   150c0:	mov	r6, r1
   150c4:	mov	r7, r2
   150c8:	mov	r5, r3
   150cc:	mov	ip, sp
   150d0:	ldr	lr, [pc, #64]	; 15118 <strspn@plt+0x4260>
   150d4:	ldm	lr!, {r0, r1, r2, r3}
   150d8:	stmia	ip!, {r0, r1, r2, r3}
   150dc:	ldm	lr!, {r0, r1, r2, r3}
   150e0:	stmia	ip!, {r0, r1, r2, r3}
   150e4:	ldm	lr, {r0, r1, r2, r3}
   150e8:	stm	ip, {r0, r1, r2, r3}
   150ec:	mov	r2, r7
   150f0:	mov	r1, r6
   150f4:	mov	r0, sp
   150f8:	bl	14c80 <strspn@plt+0x3dc8>
   150fc:	mov	r3, sp
   15100:	ldr	r2, [sp, #72]	; 0x48
   15104:	mov	r1, r5
   15108:	mov	r0, r4
   1510c:	bl	149f8 <strspn@plt+0x3b40>
   15110:	add	sp, sp, #52	; 0x34
   15114:	pop	{r4, r5, r6, r7, pc}
   15118:	andeq	r8, r2, r0, ror r2
   1511c:	push	{lr}		; (str lr, [sp, #-4]!)
   15120:	sub	sp, sp, #12
   15124:	mvn	ip, #0
   15128:	str	ip, [sp]
   1512c:	bl	150b4 <strspn@plt+0x41fc>
   15130:	add	sp, sp, #12
   15134:	pop	{pc}		; (ldr pc, [sp], #4)
   15138:	push	{r4, lr}
   1513c:	mov	r3, r2
   15140:	mov	r2, r1
   15144:	mov	r1, r0
   15148:	mov	r0, #0
   1514c:	bl	1511c <strspn@plt+0x4264>
   15150:	pop	{r4, pc}
   15154:	push	{lr}		; (str lr, [sp, #-4]!)
   15158:	sub	sp, sp, #12
   1515c:	str	r3, [sp]
   15160:	mov	r3, r2
   15164:	mov	r2, r1
   15168:	mov	r1, r0
   1516c:	mov	r0, #0
   15170:	bl	150b4 <strspn@plt+0x41fc>
   15174:	add	sp, sp, #12
   15178:	pop	{pc}		; (ldr pc, [sp], #4)
   1517c:	push	{r4, lr}
   15180:	ldr	r3, [pc, #4]	; 1518c <strspn@plt+0x42d4>
   15184:	bl	149f8 <strspn@plt+0x3b40>
   15188:	pop	{r4, pc}
   1518c:	andeq	r8, r2, r4, lsl #2
   15190:	push	{r4, lr}
   15194:	mov	r2, r1
   15198:	mov	r1, r0
   1519c:	mov	r0, #0
   151a0:	bl	1517c <strspn@plt+0x42c4>
   151a4:	pop	{r4, pc}
   151a8:	push	{r4, lr}
   151ac:	mvn	r2, #0
   151b0:	bl	1517c <strspn@plt+0x42c4>
   151b4:	pop	{r4, pc}
   151b8:	push	{r4, lr}
   151bc:	mov	r1, r0
   151c0:	mov	r0, #0
   151c4:	bl	151a8 <strspn@plt+0x42f0>
   151c8:	pop	{r4, pc}
   151cc:	push	{r4, r5, r6, lr}
   151d0:	mov	r5, r1
   151d4:	ldr	r4, [r0], #8
   151d8:	cmp	r4, r0
   151dc:	beq	151f4 <strspn@plt+0x433c>
   151e0:	mov	r0, r4
   151e4:	bl	15f08 <strspn@plt+0x5050>
   151e8:	cmp	r0, #0
   151ec:	moveq	r0, r4
   151f0:	pop	{r4, r5, r6, pc}
   151f4:	mov	r0, r1
   151f8:	bl	15ed8 <strspn@plt+0x5020>
   151fc:	cmp	r0, #0
   15200:	popeq	{r4, r5, r6, pc}
   15204:	mov	r2, r5
   15208:	mov	r1, r4
   1520c:	bl	10cc0 <memcpy@plt>
   15210:	pop	{r4, r5, r6, pc}
   15214:	push	{r4, r5, r6, lr}
   15218:	mov	r4, r0
   1521c:	ldr	r5, [r0, #4]
   15220:	lsl	r5, r5, #1
   15224:	mov	r6, r0
   15228:	ldr	r0, [r6], #8
   1522c:	cmp	r0, r6
   15230:	beq	15238 <strspn@plt+0x4380>
   15234:	bl	125e0 <strspn@plt+0x1728>
   15238:	ldr	r3, [r4, #4]
   1523c:	cmp	r5, r3
   15240:	bcc	15264 <strspn@plt+0x43ac>
   15244:	mov	r0, r5
   15248:	bl	15ed8 <strspn@plt+0x5020>
   1524c:	cmp	r0, #0
   15250:	beq	15270 <strspn@plt+0x43b8>
   15254:	str	r0, [r4]
   15258:	str	r5, [r4, #4]
   1525c:	mov	r0, #1
   15260:	pop	{r4, r5, r6, pc}
   15264:	bl	10df8 <__errno_location@plt>
   15268:	mov	r3, #12
   1526c:	str	r3, [r0]
   15270:	str	r6, [r4]
   15274:	mov	r3, #1024	; 0x400
   15278:	str	r3, [r4, #4]
   1527c:	mov	r0, #0
   15280:	pop	{r4, r5, r6, pc}
   15284:	push	{r4, r5, r6, r7, r8, lr}
   15288:	mov	r4, r0
   1528c:	ldr	r3, [r0, #4]
   15290:	lsl	r6, r3, #1
   15294:	mov	r5, r0
   15298:	ldr	r0, [r5], #8
   1529c:	cmp	r0, r5
   152a0:	beq	152cc <strspn@plt+0x4414>
   152a4:	cmp	r3, r6
   152a8:	bhi	152f0 <strspn@plt+0x4438>
   152ac:	mov	r1, r6
   152b0:	bl	15f08 <strspn@plt+0x5050>
   152b4:	subs	r7, r0, #0
   152b8:	beq	152fc <strspn@plt+0x4444>
   152bc:	str	r7, [r4]
   152c0:	str	r6, [r4, #4]
   152c4:	mov	r0, #1
   152c8:	pop	{r4, r5, r6, r7, r8, pc}
   152cc:	mov	r0, r6
   152d0:	bl	15ed8 <strspn@plt+0x5020>
   152d4:	subs	r7, r0, #0
   152d8:	beq	15318 <strspn@plt+0x4460>
   152dc:	ldr	r2, [r4, #4]
   152e0:	mov	r1, r5
   152e4:	mov	r0, r7
   152e8:	bl	10cc0 <memcpy@plt>
   152ec:	b	152bc <strspn@plt+0x4404>
   152f0:	bl	10df8 <__errno_location@plt>
   152f4:	mov	r3, #12
   152f8:	str	r3, [r0]
   152fc:	ldr	r0, [r4]
   15300:	bl	125e0 <strspn@plt+0x1728>
   15304:	str	r5, [r4]
   15308:	mov	r3, #1024	; 0x400
   1530c:	str	r3, [r4, #4]
   15310:	mov	r0, #0
   15314:	pop	{r4, r5, r6, r7, r8, pc}
   15318:	mov	r0, #0
   1531c:	pop	{r4, r5, r6, r7, r8, pc}
   15320:	push	{r4, r5, r6, lr}
   15324:	sub	sp, sp, #32
   15328:	mov	r4, r0
   1532c:	ldr	r5, [sp, #48]	; 0x30
   15330:	ldr	r6, [sp, #52]	; 0x34
   15334:	cmp	r1, #0
   15338:	beq	153f0 <strspn@plt+0x4538>
   1533c:	str	r3, [sp, #4]
   15340:	str	r2, [sp]
   15344:	mov	r3, r1
   15348:	ldr	r2, [pc, #940]	; 156fc <strspn@plt+0x4844>
   1534c:	mov	r1, #1
   15350:	bl	10e34 <__fprintf_chk@plt>
   15354:	mov	r2, #5
   15358:	ldr	r1, [pc, #928]	; 15700 <strspn@plt+0x4848>
   1535c:	mov	r0, #0
   15360:	bl	10cf0 <dcgettext@plt>
   15364:	ldr	r3, [pc, #920]	; 15704 <strspn@plt+0x484c>
   15368:	str	r3, [sp]
   1536c:	mov	r3, r0
   15370:	ldr	r2, [pc, #912]	; 15708 <strspn@plt+0x4850>
   15374:	mov	r1, #1
   15378:	mov	r0, r4
   1537c:	bl	10e34 <__fprintf_chk@plt>
   15380:	mov	r1, r4
   15384:	mov	r0, #10
   15388:	bl	10ce4 <fputc_unlocked@plt>
   1538c:	mov	r2, #5
   15390:	ldr	r1, [pc, #884]	; 1570c <strspn@plt+0x4854>
   15394:	mov	r0, #0
   15398:	bl	10cf0 <dcgettext@plt>
   1539c:	ldr	r3, [pc, #876]	; 15710 <strspn@plt+0x4858>
   153a0:	mov	r2, r0
   153a4:	mov	r1, #1
   153a8:	mov	r0, r4
   153ac:	bl	10e34 <__fprintf_chk@plt>
   153b0:	mov	r1, r4
   153b4:	mov	r0, #10
   153b8:	bl	10ce4 <fputc_unlocked@plt>
   153bc:	cmp	r6, #9
   153c0:	ldrls	pc, [pc, r6, lsl #2]
   153c4:	b	15694 <strspn@plt+0x47dc>
   153c8:	andeq	r5, r1, ip, lsr #8
   153cc:	andeq	r5, r1, r8, lsl #8
   153d0:	andeq	r5, r1, r4, lsr r4
   153d4:	andeq	r5, r1, r4, ror #8
   153d8:	muleq	r1, ip, r4
   153dc:	ldrdeq	r5, [r1], -ip
   153e0:	andeq	r5, r1, r4, lsr #10
   153e4:	andeq	r5, r1, r4, ror r5
   153e8:	andeq	r5, r1, ip, asr #11
   153ec:	andeq	r5, r1, ip, lsr #12
   153f0:	str	r3, [sp]
   153f4:	mov	r3, r2
   153f8:	ldr	r2, [pc, #788]	; 15714 <strspn@plt+0x485c>
   153fc:	mov	r1, #1
   15400:	bl	10e34 <__fprintf_chk@plt>
   15404:	b	15354 <strspn@plt+0x449c>
   15408:	mov	r2, #5
   1540c:	ldr	r1, [pc, #772]	; 15718 <strspn@plt+0x4860>
   15410:	mov	r0, #0
   15414:	bl	10cf0 <dcgettext@plt>
   15418:	ldr	r3, [r5]
   1541c:	mov	r2, r0
   15420:	mov	r1, #1
   15424:	mov	r0, r4
   15428:	bl	10e34 <__fprintf_chk@plt>
   1542c:	add	sp, sp, #32
   15430:	pop	{r4, r5, r6, pc}
   15434:	mov	r2, #5
   15438:	ldr	r1, [pc, #732]	; 1571c <strspn@plt+0x4864>
   1543c:	mov	r0, #0
   15440:	bl	10cf0 <dcgettext@plt>
   15444:	ldr	r3, [r5]
   15448:	ldr	r2, [r5, #4]
   1544c:	str	r2, [sp]
   15450:	mov	r2, r0
   15454:	mov	r1, #1
   15458:	mov	r0, r4
   1545c:	bl	10e34 <__fprintf_chk@plt>
   15460:	b	1542c <strspn@plt+0x4574>
   15464:	mov	r2, #5
   15468:	ldr	r1, [pc, #688]	; 15720 <strspn@plt+0x4868>
   1546c:	mov	r0, #0
   15470:	bl	10cf0 <dcgettext@plt>
   15474:	ldr	r3, [r5]
   15478:	ldr	r2, [r5, #8]
   1547c:	str	r2, [sp, #4]
   15480:	ldr	r2, [r5, #4]
   15484:	str	r2, [sp]
   15488:	mov	r2, r0
   1548c:	mov	r1, #1
   15490:	mov	r0, r4
   15494:	bl	10e34 <__fprintf_chk@plt>
   15498:	b	1542c <strspn@plt+0x4574>
   1549c:	mov	r2, #5
   154a0:	ldr	r1, [pc, #636]	; 15724 <strspn@plt+0x486c>
   154a4:	mov	r0, #0
   154a8:	bl	10cf0 <dcgettext@plt>
   154ac:	ldr	r3, [r5]
   154b0:	ldr	r2, [r5, #12]
   154b4:	str	r2, [sp, #8]
   154b8:	ldr	r2, [r5, #8]
   154bc:	str	r2, [sp, #4]
   154c0:	ldr	r2, [r5, #4]
   154c4:	str	r2, [sp]
   154c8:	mov	r2, r0
   154cc:	mov	r1, #1
   154d0:	mov	r0, r4
   154d4:	bl	10e34 <__fprintf_chk@plt>
   154d8:	b	1542c <strspn@plt+0x4574>
   154dc:	mov	r2, #5
   154e0:	ldr	r1, [pc, #576]	; 15728 <strspn@plt+0x4870>
   154e4:	mov	r0, #0
   154e8:	bl	10cf0 <dcgettext@plt>
   154ec:	ldr	r3, [r5]
   154f0:	ldr	r2, [r5, #16]
   154f4:	str	r2, [sp, #12]
   154f8:	ldr	r2, [r5, #12]
   154fc:	str	r2, [sp, #8]
   15500:	ldr	r2, [r5, #8]
   15504:	str	r2, [sp, #4]
   15508:	ldr	r2, [r5, #4]
   1550c:	str	r2, [sp]
   15510:	mov	r2, r0
   15514:	mov	r1, #1
   15518:	mov	r0, r4
   1551c:	bl	10e34 <__fprintf_chk@plt>
   15520:	b	1542c <strspn@plt+0x4574>
   15524:	mov	r2, #5
   15528:	ldr	r1, [pc, #508]	; 1572c <strspn@plt+0x4874>
   1552c:	mov	r0, #0
   15530:	bl	10cf0 <dcgettext@plt>
   15534:	ldr	r3, [r5]
   15538:	ldr	r2, [r5, #20]
   1553c:	str	r2, [sp, #16]
   15540:	ldr	r2, [r5, #16]
   15544:	str	r2, [sp, #12]
   15548:	ldr	r2, [r5, #12]
   1554c:	str	r2, [sp, #8]
   15550:	ldr	r2, [r5, #8]
   15554:	str	r2, [sp, #4]
   15558:	ldr	r2, [r5, #4]
   1555c:	str	r2, [sp]
   15560:	mov	r2, r0
   15564:	mov	r1, #1
   15568:	mov	r0, r4
   1556c:	bl	10e34 <__fprintf_chk@plt>
   15570:	b	1542c <strspn@plt+0x4574>
   15574:	mov	r2, #5
   15578:	ldr	r1, [pc, #432]	; 15730 <strspn@plt+0x4878>
   1557c:	mov	r0, #0
   15580:	bl	10cf0 <dcgettext@plt>
   15584:	ldr	r3, [r5]
   15588:	ldr	r2, [r5, #24]
   1558c:	str	r2, [sp, #20]
   15590:	ldr	r2, [r5, #20]
   15594:	str	r2, [sp, #16]
   15598:	ldr	r2, [r5, #16]
   1559c:	str	r2, [sp, #12]
   155a0:	ldr	r2, [r5, #12]
   155a4:	str	r2, [sp, #8]
   155a8:	ldr	r2, [r5, #8]
   155ac:	str	r2, [sp, #4]
   155b0:	ldr	r2, [r5, #4]
   155b4:	str	r2, [sp]
   155b8:	mov	r2, r0
   155bc:	mov	r1, #1
   155c0:	mov	r0, r4
   155c4:	bl	10e34 <__fprintf_chk@plt>
   155c8:	b	1542c <strspn@plt+0x4574>
   155cc:	mov	r2, #5
   155d0:	ldr	r1, [pc, #348]	; 15734 <strspn@plt+0x487c>
   155d4:	mov	r0, #0
   155d8:	bl	10cf0 <dcgettext@plt>
   155dc:	ldr	r3, [r5]
   155e0:	ldr	r2, [r5, #28]
   155e4:	str	r2, [sp, #24]
   155e8:	ldr	r2, [r5, #24]
   155ec:	str	r2, [sp, #20]
   155f0:	ldr	r2, [r5, #20]
   155f4:	str	r2, [sp, #16]
   155f8:	ldr	r2, [r5, #16]
   155fc:	str	r2, [sp, #12]
   15600:	ldr	r2, [r5, #12]
   15604:	str	r2, [sp, #8]
   15608:	ldr	r2, [r5, #8]
   1560c:	str	r2, [sp, #4]
   15610:	ldr	r2, [r5, #4]
   15614:	str	r2, [sp]
   15618:	mov	r2, r0
   1561c:	mov	r1, #1
   15620:	mov	r0, r4
   15624:	bl	10e34 <__fprintf_chk@plt>
   15628:	b	1542c <strspn@plt+0x4574>
   1562c:	mov	r2, #5
   15630:	ldr	r1, [pc, #256]	; 15738 <strspn@plt+0x4880>
   15634:	mov	r0, #0
   15638:	bl	10cf0 <dcgettext@plt>
   1563c:	ldr	r3, [r5]
   15640:	ldr	r2, [r5, #32]
   15644:	str	r2, [sp, #28]
   15648:	ldr	r2, [r5, #28]
   1564c:	str	r2, [sp, #24]
   15650:	ldr	r2, [r5, #24]
   15654:	str	r2, [sp, #20]
   15658:	ldr	r2, [r5, #20]
   1565c:	str	r2, [sp, #16]
   15660:	ldr	r2, [r5, #16]
   15664:	str	r2, [sp, #12]
   15668:	ldr	r2, [r5, #12]
   1566c:	str	r2, [sp, #8]
   15670:	ldr	r2, [r5, #8]
   15674:	str	r2, [sp, #4]
   15678:	ldr	r2, [r5, #4]
   1567c:	str	r2, [sp]
   15680:	mov	r2, r0
   15684:	mov	r1, #1
   15688:	mov	r0, r4
   1568c:	bl	10e34 <__fprintf_chk@plt>
   15690:	b	1542c <strspn@plt+0x4574>
   15694:	mov	r2, #5
   15698:	ldr	r1, [pc, #156]	; 1573c <strspn@plt+0x4884>
   1569c:	mov	r0, #0
   156a0:	bl	10cf0 <dcgettext@plt>
   156a4:	ldr	r3, [r5]
   156a8:	ldr	r2, [r5, #32]
   156ac:	str	r2, [sp, #28]
   156b0:	ldr	r2, [r5, #28]
   156b4:	str	r2, [sp, #24]
   156b8:	ldr	r2, [r5, #24]
   156bc:	str	r2, [sp, #20]
   156c0:	ldr	r2, [r5, #20]
   156c4:	str	r2, [sp, #16]
   156c8:	ldr	r2, [r5, #16]
   156cc:	str	r2, [sp, #12]
   156d0:	ldr	r2, [r5, #12]
   156d4:	str	r2, [sp, #8]
   156d8:	ldr	r2, [r5, #8]
   156dc:	str	r2, [sp, #4]
   156e0:	ldr	r2, [r5, #4]
   156e4:	str	r2, [sp]
   156e8:	mov	r2, r0
   156ec:	mov	r1, #1
   156f0:	mov	r0, r4
   156f4:	bl	10e34 <__fprintf_chk@plt>
   156f8:	b	1542c <strspn@plt+0x4574>
   156fc:	muleq	r1, r8, r2
   15700:	andeq	r7, r1, ip, lsr #5
   15704:	andeq	r0, r0, r6, ror #15
   15708:	andeq	r7, r1, r4, lsl #11
   1570c:			; <UNDEFINED> instruction: 0x000172b0
   15710:	andeq	r7, r1, ip, asr r3
   15714:	andeq	r7, r1, r4, lsr #5
   15718:	andeq	r7, r1, r0, lsl #7
   1571c:	muleq	r1, r0, r3
   15720:	andeq	r7, r1, r8, lsr #7
   15724:	andeq	r7, r1, r4, asr #7
   15728:	andeq	r7, r1, r4, ror #7
   1572c:	andeq	r7, r1, r8, lsl #8
   15730:	andeq	r7, r1, r0, lsr r4
   15734:	andeq	r7, r1, ip, asr r4
   15738:	andeq	r7, r1, ip, lsl #9
   1573c:	andeq	r7, r1, r0, asr #9
   15740:	push	{r4, r5, lr}
   15744:	sub	sp, sp, #12
   15748:	ldr	r5, [sp, #24]
   1574c:	ldr	ip, [r5]
   15750:	cmp	ip, #0
   15754:	beq	15784 <strspn@plt+0x48cc>
   15758:	mov	lr, r5
   1575c:	mov	ip, #0
   15760:	add	ip, ip, #1
   15764:	ldr	r4, [lr, #4]!
   15768:	cmp	r4, #0
   1576c:	bne	15760 <strspn@plt+0x48a8>
   15770:	str	ip, [sp, #4]
   15774:	str	r5, [sp]
   15778:	bl	15320 <strspn@plt+0x4468>
   1577c:	add	sp, sp, #12
   15780:	pop	{r4, r5, pc}
   15784:	mov	ip, #0
   15788:	b	15770 <strspn@plt+0x48b8>
   1578c:	push	{r4, r5, lr}
   15790:	sub	sp, sp, #52	; 0x34
   15794:	ldr	r4, [sp, #64]	; 0x40
   15798:	sub	r4, r4, #4
   1579c:	add	r5, sp, #4
   157a0:	mov	ip, #0
   157a4:	ldr	lr, [r4, #4]!
   157a8:	str	lr, [r5, #4]!
   157ac:	cmp	lr, #0
   157b0:	beq	157c0 <strspn@plt+0x4908>
   157b4:	add	ip, ip, #1
   157b8:	cmp	ip, #10
   157bc:	bne	157a4 <strspn@plt+0x48ec>
   157c0:	str	ip, [sp, #4]
   157c4:	add	ip, sp, #8
   157c8:	str	ip, [sp]
   157cc:	bl	15320 <strspn@plt+0x4468>
   157d0:	add	sp, sp, #52	; 0x34
   157d4:	pop	{r4, r5, pc}
   157d8:	push	{r3}		; (str r3, [sp, #-4]!)
   157dc:	push	{lr}		; (str lr, [sp, #-4]!)
   157e0:	sub	sp, sp, #16
   157e4:	add	r3, sp, #24
   157e8:	str	r3, [sp, #12]
   157ec:	str	r3, [sp]
   157f0:	ldr	r3, [sp, #20]
   157f4:	bl	1578c <strspn@plt+0x48d4>
   157f8:	add	sp, sp, #16
   157fc:	pop	{lr}		; (ldr lr, [sp], #4)
   15800:	add	sp, sp, #4
   15804:	bx	lr
   15808:	push	{r4, lr}
   1580c:	ldr	r3, [pc, #112]	; 15884 <strspn@plt+0x49cc>
   15810:	ldr	r1, [r3]
   15814:	mov	r0, #10
   15818:	bl	10ce4 <fputc_unlocked@plt>
   1581c:	mov	r2, #5
   15820:	ldr	r1, [pc, #96]	; 15888 <strspn@plt+0x49d0>
   15824:	mov	r0, #0
   15828:	bl	10cf0 <dcgettext@plt>
   1582c:	ldr	r2, [pc, #88]	; 1588c <strspn@plt+0x49d4>
   15830:	mov	r1, r0
   15834:	mov	r0, #1
   15838:	bl	10e1c <__printf_chk@plt>
   1583c:	mov	r2, #5
   15840:	ldr	r1, [pc, #72]	; 15890 <strspn@plt+0x49d8>
   15844:	mov	r0, #0
   15848:	bl	10cf0 <dcgettext@plt>
   1584c:	ldr	r3, [pc, #64]	; 15894 <strspn@plt+0x49dc>
   15850:	ldr	r2, [pc, #64]	; 15898 <strspn@plt+0x49e0>
   15854:	mov	r1, r0
   15858:	mov	r0, #1
   1585c:	bl	10e1c <__printf_chk@plt>
   15860:	mov	r2, #5
   15864:	ldr	r1, [pc, #48]	; 1589c <strspn@plt+0x49e4>
   15868:	mov	r0, #0
   1586c:	bl	10cf0 <dcgettext@plt>
   15870:	ldr	r2, [pc, #40]	; 158a0 <strspn@plt+0x49e8>
   15874:	mov	r1, r0
   15878:	mov	r0, #1
   1587c:	bl	10e1c <__printf_chk@plt>
   15880:	pop	{r4, pc}
   15884:	andeq	r8, r2, ip, asr #2
   15888:	strdeq	r7, [r1], -ip
   1588c:	andeq	r7, r1, r0, lsl r5
   15890:	andeq	r7, r1, r8, lsr #10
   15894:	muleq	r1, r8, lr
   15898:	andeq	r6, r1, r0, asr #29
   1589c:	andeq	r7, r1, ip, lsr r5
   158a0:	andeq	r7, r1, r4, ror #10
   158a4:	push	{r4, lr}
   158a8:	bl	15ed8 <strspn@plt+0x5020>
   158ac:	cmp	r0, #0
   158b0:	popne	{r4, pc}
   158b4:	bl	15e48 <strspn@plt+0x4f90>
   158b8:	push	{r4, lr}
   158bc:	bl	15ed8 <strspn@plt+0x5020>
   158c0:	cmp	r0, #0
   158c4:	popne	{r4, pc}
   158c8:	bl	15e48 <strspn@plt+0x4f90>
   158cc:	push	{r4, lr}
   158d0:	bl	158a4 <strspn@plt+0x49ec>
   158d4:	pop	{r4, pc}
   158d8:	push	{r4, r5, r6, lr}
   158dc:	mov	r5, r0
   158e0:	mov	r4, r1
   158e4:	bl	15f08 <strspn@plt+0x5050>
   158e8:	cmp	r0, #0
   158ec:	popne	{r4, r5, r6, pc}
   158f0:	adds	r4, r4, #0
   158f4:	movne	r4, #1
   158f8:	cmp	r5, #0
   158fc:	orreq	r4, r4, #1
   15900:	cmp	r4, #0
   15904:	popeq	{r4, r5, r6, pc}
   15908:	bl	15e48 <strspn@plt+0x4f90>
   1590c:	push	{r4, lr}
   15910:	cmp	r1, #0
   15914:	orreq	r1, r1, #1
   15918:	bl	15f08 <strspn@plt+0x5050>
   1591c:	cmp	r0, #0
   15920:	popne	{r4, pc}
   15924:	bl	15e48 <strspn@plt+0x4f90>
   15928:	push	{r4, r5, r6, lr}
   1592c:	mov	r6, r0
   15930:	mov	r5, r1
   15934:	mov	r4, r2
   15938:	bl	1624c <strspn@plt+0x5394>
   1593c:	cmp	r0, #0
   15940:	popne	{r4, r5, r6, pc}
   15944:	cmp	r6, #0
   15948:	beq	15958 <strspn@plt+0x4aa0>
   1594c:	cmp	r5, #0
   15950:	cmpne	r4, #0
   15954:	popeq	{r4, r5, r6, pc}
   15958:	bl	15e48 <strspn@plt+0x4f90>
   1595c:	push	{r4, lr}
   15960:	bl	15928 <strspn@plt+0x4a70>
   15964:	pop	{r4, pc}
   15968:	push	{r4, lr}
   1596c:	mov	ip, r1
   15970:	mov	r3, r2
   15974:	cmp	r2, #0
   15978:	cmpne	r1, #0
   1597c:	moveq	r3, #1
   15980:	moveq	ip, r3
   15984:	mov	r2, r3
   15988:	mov	r1, ip
   1598c:	bl	1624c <strspn@plt+0x5394>
   15990:	cmp	r0, #0
   15994:	popne	{r4, pc}
   15998:	bl	15e48 <strspn@plt+0x4f90>
   1599c:	push	{r4, lr}
   159a0:	mov	r2, r1
   159a4:	mov	r1, r0
   159a8:	mov	r0, #0
   159ac:	bl	15928 <strspn@plt+0x4a70>
   159b0:	pop	{r4, pc}
   159b4:	push	{r4, lr}
   159b8:	mov	r2, r1
   159bc:	mov	r1, r0
   159c0:	mov	r0, #0
   159c4:	bl	15968 <strspn@plt+0x4ab0>
   159c8:	pop	{r4, pc}
   159cc:	push	{r4, r5, r6, r7, r8, lr}
   159d0:	mov	r5, r1
   159d4:	mov	r6, r2
   159d8:	ldr	r4, [r1]
   159dc:	subs	r7, r0, #0
   159e0:	beq	159fc <strspn@plt+0x4b44>
   159e4:	lsr	r2, r4, #1
   159e8:	add	r3, r2, #1
   159ec:	mvn	r3, r3
   159f0:	cmp	r4, r3
   159f4:	bls	15a20 <strspn@plt+0x4b68>
   159f8:	bl	15e48 <strspn@plt+0x4f90>
   159fc:	cmp	r4, #0
   15a00:	bne	15a28 <strspn@plt+0x4b70>
   15a04:	mov	r1, r2
   15a08:	mov	r0, #64	; 0x40
   15a0c:	bl	163a0 <strspn@plt+0x54e8>
   15a10:	cmp	r0, #0
   15a14:	movne	r4, r0
   15a18:	addeq	r4, r0, #1
   15a1c:	b	15a28 <strspn@plt+0x4b70>
   15a20:	add	r4, r4, #1
   15a24:	add	r4, r4, r2
   15a28:	mov	r2, r6
   15a2c:	mov	r1, r4
   15a30:	mov	r0, r7
   15a34:	bl	15928 <strspn@plt+0x4a70>
   15a38:	str	r4, [r5]
   15a3c:	pop	{r4, r5, r6, r7, r8, pc}
   15a40:	push	{r4, lr}
   15a44:	mov	r2, #1
   15a48:	bl	159cc <strspn@plt+0x4b14>
   15a4c:	pop	{r4, pc}
   15a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a54:	sub	sp, sp, #12
   15a58:	mov	fp, r0
   15a5c:	mov	sl, r1
   15a60:	mov	r9, r2
   15a64:	mov	r7, r3
   15a68:	ldr	r6, [sp, #48]	; 0x30
   15a6c:	ldr	r5, [r1]
   15a70:	asrs	r4, r5, #1
   15a74:	bmi	15bd0 <strspn@plt+0x4d18>
   15a78:	cmp	r5, #0
   15a7c:	blt	15be4 <strspn@plt+0x4d2c>
   15a80:	mvn	r3, #-2147483648	; 0x80000000
   15a84:	sub	r3, r3, r4
   15a88:	cmp	r5, r3
   15a8c:	movle	r3, #0
   15a90:	movgt	r3, #1
   15a94:	cmp	r3, #0
   15a98:	addeq	r4, r4, r5
   15a9c:	mvnne	r4, #-2147483648	; 0x80000000
   15aa0:	mvn	r8, r7
   15aa4:	lsr	r8, r8, #31
   15aa8:	cmp	r7, r4
   15aac:	movge	r3, #0
   15ab0:	andlt	r3, r8, #1
   15ab4:	cmp	r3, #0
   15ab8:	movne	r4, r7
   15abc:	cmp	r6, #0
   15ac0:	blt	15bf8 <strspn@plt+0x4d40>
   15ac4:	cmp	r6, #0
   15ac8:	beq	15ca4 <strspn@plt+0x4dec>
   15acc:	cmp	r4, #0
   15ad0:	blt	15c54 <strspn@plt+0x4d9c>
   15ad4:	mov	r1, r6
   15ad8:	mvn	r0, #-2147483648	; 0x80000000
   15adc:	bl	165ac <strspn@plt+0x56f4>
   15ae0:	cmp	r0, r4
   15ae4:	movge	r0, #0
   15ae8:	movlt	r0, #1
   15aec:	cmp	r0, #0
   15af0:	mvnne	r3, #-2147483648	; 0x80000000
   15af4:	strne	r3, [sp, #4]
   15af8:	beq	15c8c <strspn@plt+0x4dd4>
   15afc:	mov	r1, r6
   15b00:	ldr	r0, [sp, #4]
   15b04:	bl	165ac <strspn@plt+0x56f4>
   15b08:	mov	r4, r0
   15b0c:	mov	r1, r6
   15b10:	ldr	r0, [sp, #4]
   15b14:	bl	167cc <strspn@plt+0x5914>
   15b18:	ldr	r3, [sp, #4]
   15b1c:	sub	r1, r3, r1
   15b20:	cmp	fp, #0
   15b24:	moveq	r3, #0
   15b28:	streq	r3, [sl]
   15b2c:	sub	r3, r4, r5
   15b30:	cmp	r3, r9
   15b34:	bge	15bbc <strspn@plt+0x4d04>
   15b38:	cmp	r9, #0
   15b3c:	blt	15cb0 <strspn@plt+0x4df8>
   15b40:	cmp	r5, #0
   15b44:	blt	15cc4 <strspn@plt+0x4e0c>
   15b48:	mvn	r3, #-2147483648	; 0x80000000
   15b4c:	sub	r3, r3, r9
   15b50:	cmp	r5, r3
   15b54:	movle	r3, #0
   15b58:	movgt	r3, #1
   15b5c:	cmp	r3, #0
   15b60:	bne	15d6c <strspn@plt+0x4eb4>
   15b64:	add	r5, r5, r9
   15b68:	mov	r4, r5
   15b6c:	cmp	r7, r5
   15b70:	movge	r7, #0
   15b74:	andlt	r7, r8, #1
   15b78:	cmp	r7, #0
   15b7c:	bne	15d6c <strspn@plt+0x4eb4>
   15b80:	cmp	r6, #0
   15b84:	blt	15cd8 <strspn@plt+0x4e20>
   15b88:	cmp	r6, #0
   15b8c:	beq	15bb8 <strspn@plt+0x4d00>
   15b90:	cmp	r5, #0
   15b94:	blt	15d34 <strspn@plt+0x4e7c>
   15b98:	mov	r1, r6
   15b9c:	mvn	r0, #-2147483648	; 0x80000000
   15ba0:	bl	165ac <strspn@plt+0x56f4>
   15ba4:	cmp	r5, r0
   15ba8:	movle	r0, #0
   15bac:	movgt	r0, #1
   15bb0:	cmp	r0, #0
   15bb4:	bne	15d6c <strspn@plt+0x4eb4>
   15bb8:	mul	r1, r5, r6
   15bbc:	mov	r0, fp
   15bc0:	bl	158d8 <strspn@plt+0x4a20>
   15bc4:	str	r4, [sl]
   15bc8:	add	sp, sp, #12
   15bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bd0:	rsb	r3, r4, #-2147483648	; 0x80000000
   15bd4:	cmp	r5, r3
   15bd8:	movge	r3, #0
   15bdc:	movlt	r3, #1
   15be0:	b	15a94 <strspn@plt+0x4bdc>
   15be4:	rsb	r3, r5, #-2147483648	; 0x80000000
   15be8:	cmp	r4, r3
   15bec:	movge	r3, #0
   15bf0:	movlt	r3, #1
   15bf4:	b	15a94 <strspn@plt+0x4bdc>
   15bf8:	cmp	r4, #0
   15bfc:	blt	15c24 <strspn@plt+0x4d6c>
   15c00:	cmn	r6, #1
   15c04:	beq	15c40 <strspn@plt+0x4d88>
   15c08:	mov	r1, r6
   15c0c:	mov	r0, #-2147483648	; 0x80000000
   15c10:	bl	165ac <strspn@plt+0x56f4>
   15c14:	cmp	r0, r4
   15c18:	movge	r0, #0
   15c1c:	movlt	r0, #1
   15c20:	b	15aec <strspn@plt+0x4c34>
   15c24:	mov	r1, r6
   15c28:	mvn	r0, #-2147483648	; 0x80000000
   15c2c:	bl	165ac <strspn@plt+0x56f4>
   15c30:	cmp	r0, r4
   15c34:	movle	r0, #0
   15c38:	movgt	r0, #1
   15c3c:	b	15aec <strspn@plt+0x4c34>
   15c40:	add	r0, r4, #-2147483648	; 0x80000000
   15c44:	cmp	r0, #0
   15c48:	movle	r0, #0
   15c4c:	movgt	r0, #1
   15c50:	b	15aec <strspn@plt+0x4c34>
   15c54:	cmn	r4, #1
   15c58:	beq	15c78 <strspn@plt+0x4dc0>
   15c5c:	mov	r1, r4
   15c60:	mov	r0, #-2147483648	; 0x80000000
   15c64:	bl	165ac <strspn@plt+0x56f4>
   15c68:	cmp	r6, r0
   15c6c:	movle	r0, #0
   15c70:	movgt	r0, #1
   15c74:	b	15aec <strspn@plt+0x4c34>
   15c78:	add	r0, r6, #-2147483648	; 0x80000000
   15c7c:	cmp	r0, #0
   15c80:	movle	r0, #0
   15c84:	movgt	r0, #1
   15c88:	b	15aec <strspn@plt+0x4c34>
   15c8c:	mul	r1, r6, r4
   15c90:	cmp	r1, #63	; 0x3f
   15c94:	movle	r3, #64	; 0x40
   15c98:	strle	r3, [sp, #4]
   15c9c:	bgt	15b20 <strspn@plt+0x4c68>
   15ca0:	b	15afc <strspn@plt+0x4c44>
   15ca4:	mov	r3, #64	; 0x40
   15ca8:	str	r3, [sp, #4]
   15cac:	b	15afc <strspn@plt+0x4c44>
   15cb0:	rsb	r3, r9, #-2147483648	; 0x80000000
   15cb4:	cmp	r5, r3
   15cb8:	movge	r3, #0
   15cbc:	movlt	r3, #1
   15cc0:	b	15b5c <strspn@plt+0x4ca4>
   15cc4:	rsb	r3, r5, #-2147483648	; 0x80000000
   15cc8:	cmp	r9, r3
   15ccc:	movge	r3, #0
   15cd0:	movlt	r3, #1
   15cd4:	b	15b5c <strspn@plt+0x4ca4>
   15cd8:	cmp	r5, #0
   15cdc:	blt	15d04 <strspn@plt+0x4e4c>
   15ce0:	cmn	r6, #1
   15ce4:	beq	15d20 <strspn@plt+0x4e68>
   15ce8:	mov	r1, r6
   15cec:	mov	r0, #-2147483648	; 0x80000000
   15cf0:	bl	165ac <strspn@plt+0x56f4>
   15cf4:	cmp	r5, r0
   15cf8:	movle	r0, #0
   15cfc:	movgt	r0, #1
   15d00:	b	15bb0 <strspn@plt+0x4cf8>
   15d04:	mov	r1, r6
   15d08:	mvn	r0, #-2147483648	; 0x80000000
   15d0c:	bl	165ac <strspn@plt+0x56f4>
   15d10:	cmp	r5, r0
   15d14:	movge	r0, #0
   15d18:	movlt	r0, #1
   15d1c:	b	15bb0 <strspn@plt+0x4cf8>
   15d20:	add	r0, r5, #-2147483648	; 0x80000000
   15d24:	cmp	r0, #0
   15d28:	movle	r0, #0
   15d2c:	movgt	r0, #1
   15d30:	b	15bb0 <strspn@plt+0x4cf8>
   15d34:	cmn	r5, #1
   15d38:	beq	15d58 <strspn@plt+0x4ea0>
   15d3c:	mov	r1, r5
   15d40:	mov	r0, #-2147483648	; 0x80000000
   15d44:	bl	165ac <strspn@plt+0x56f4>
   15d48:	cmp	r6, r0
   15d4c:	movle	r0, #0
   15d50:	movgt	r0, #1
   15d54:	b	15bb0 <strspn@plt+0x4cf8>
   15d58:	add	r0, r6, #-2147483648	; 0x80000000
   15d5c:	cmp	r0, #0
   15d60:	movle	r0, #0
   15d64:	movgt	r0, #1
   15d68:	b	15bb0 <strspn@plt+0x4cf8>
   15d6c:	bl	15e48 <strspn@plt+0x4f90>
   15d70:	push	{r4, lr}
   15d74:	bl	15e88 <strspn@plt+0x4fd0>
   15d78:	cmp	r0, #0
   15d7c:	popne	{r4, pc}
   15d80:	bl	15e48 <strspn@plt+0x4f90>
   15d84:	push	{r4, lr}
   15d88:	mov	r1, #1
   15d8c:	bl	15d70 <strspn@plt+0x4eb8>
   15d90:	pop	{r4, pc}
   15d94:	push	{r4, lr}
   15d98:	bl	15e88 <strspn@plt+0x4fd0>
   15d9c:	cmp	r0, #0
   15da0:	popne	{r4, pc}
   15da4:	bl	15e48 <strspn@plt+0x4f90>
   15da8:	push	{r4, lr}
   15dac:	mov	r1, #1
   15db0:	bl	15d94 <strspn@plt+0x4edc>
   15db4:	pop	{r4, pc}
   15db8:	push	{r4, r5, r6, lr}
   15dbc:	mov	r5, r0
   15dc0:	mov	r4, r1
   15dc4:	mov	r0, r1
   15dc8:	bl	158a4 <strspn@plt+0x49ec>
   15dcc:	mov	r2, r4
   15dd0:	mov	r1, r5
   15dd4:	bl	10cc0 <memcpy@plt>
   15dd8:	pop	{r4, r5, r6, pc}
   15ddc:	push	{r4, r5, r6, lr}
   15de0:	mov	r5, r0
   15de4:	mov	r4, r1
   15de8:	mov	r0, r1
   15dec:	bl	158b8 <strspn@plt+0x4a00>
   15df0:	mov	r2, r4
   15df4:	mov	r1, r5
   15df8:	bl	10cc0 <memcpy@plt>
   15dfc:	pop	{r4, r5, r6, pc}
   15e00:	push	{r4, r5, r6, lr}
   15e04:	mov	r5, r0
   15e08:	mov	r4, r1
   15e0c:	add	r0, r1, #1
   15e10:	bl	158b8 <strspn@plt+0x4a00>
   15e14:	mov	r2, #0
   15e18:	strb	r2, [r0, r4]
   15e1c:	mov	r2, r4
   15e20:	mov	r1, r5
   15e24:	bl	10cc0 <memcpy@plt>
   15e28:	pop	{r4, r5, r6, pc}
   15e2c:	push	{r4, lr}
   15e30:	mov	r4, r0
   15e34:	bl	10dec <strlen@plt>
   15e38:	add	r1, r0, #1
   15e3c:	mov	r0, r4
   15e40:	bl	15db8 <strspn@plt+0x4f00>
   15e44:	pop	{r4, pc}
   15e48:	push	{r4, lr}
   15e4c:	ldr	r3, [pc, #40]	; 15e7c <strspn@plt+0x4fc4>
   15e50:	ldr	r4, [r3]
   15e54:	mov	r2, #5
   15e58:	ldr	r1, [pc, #32]	; 15e80 <strspn@plt+0x4fc8>
   15e5c:	mov	r0, #0
   15e60:	bl	10cf0 <dcgettext@plt>
   15e64:	mov	r3, r0
   15e68:	ldr	r2, [pc, #20]	; 15e84 <strspn@plt+0x4fcc>
   15e6c:	mov	r1, #0
   15e70:	mov	r0, r4
   15e74:	bl	10d74 <error@plt>
   15e78:	bl	10eac <abort@plt>
   15e7c:	strdeq	r8, [r2], -r0
   15e80:			; <UNDEFINED> instruction: 0x000175b4
   15e84:	strdeq	r7, [r1], -r8
   15e88:	push	{r4, lr}
   15e8c:	mov	r2, r0
   15e90:	mov	r3, r1
   15e94:	cmp	r1, #0
   15e98:	cmpne	r0, #0
   15e9c:	moveq	r3, #1
   15ea0:	moveq	r2, r3
   15ea4:	umull	r0, r1, r2, r3
   15ea8:	cmp	r0, #0
   15eac:	cmpge	r1, #0
   15eb0:	bne	15ec4 <strspn@plt+0x500c>
   15eb4:	mov	r1, r3
   15eb8:	mov	r0, r2
   15ebc:	bl	10c54 <calloc@plt>
   15ec0:	pop	{r4, pc}
   15ec4:	bl	10df8 <__errno_location@plt>
   15ec8:	mov	r3, #12
   15ecc:	str	r3, [r0]
   15ed0:	mov	r0, #0
   15ed4:	pop	{r4, pc}
   15ed8:	push	{r4, lr}
   15edc:	cmp	r0, #0
   15ee0:	moveq	r0, #1
   15ee4:	cmp	r0, #0
   15ee8:	blt	15ef4 <strspn@plt+0x503c>
   15eec:	bl	10d80 <malloc@plt>
   15ef0:	pop	{r4, pc}
   15ef4:	bl	10df8 <__errno_location@plt>
   15ef8:	mov	r3, #12
   15efc:	str	r3, [r0]
   15f00:	mov	r0, #0
   15f04:	pop	{r4, pc}
   15f08:	push	{r4, lr}
   15f0c:	cmp	r0, #0
   15f10:	beq	15f2c <strspn@plt+0x5074>
   15f14:	cmp	r1, #0
   15f18:	beq	15f38 <strspn@plt+0x5080>
   15f1c:	cmp	r1, #0
   15f20:	blt	15f44 <strspn@plt+0x508c>
   15f24:	bl	10cfc <realloc@plt>
   15f28:	pop	{r4, pc}
   15f2c:	mov	r0, r1
   15f30:	bl	15ed8 <strspn@plt+0x5020>
   15f34:	pop	{r4, pc}
   15f38:	bl	125e0 <strspn@plt+0x1728>
   15f3c:	mov	r0, #0
   15f40:	pop	{r4, pc}
   15f44:	bl	10df8 <__errno_location@plt>
   15f48:	mov	r3, #12
   15f4c:	str	r3, [r0]
   15f50:	mov	r0, #0
   15f54:	pop	{r4, pc}
   15f58:	push	{r4, r5, r6, lr}
   15f5c:	mov	r5, r0
   15f60:	bl	10d5c <__fpending@plt>
   15f64:	mov	r6, r0
   15f68:	ldr	r4, [r5]
   15f6c:	and	r4, r4, #32
   15f70:	mov	r0, r5
   15f74:	bl	15fd0 <strspn@plt+0x5118>
   15f78:	cmp	r4, #0
   15f7c:	bne	15fa4 <strspn@plt+0x50ec>
   15f80:	cmp	r0, #0
   15f84:	popeq	{r4, r5, r6, pc}
   15f88:	cmp	r6, #0
   15f8c:	bne	15fc0 <strspn@plt+0x5108>
   15f90:	bl	10df8 <__errno_location@plt>
   15f94:	ldr	r0, [r0]
   15f98:	subs	r0, r0, #9
   15f9c:	mvnne	r0, #0
   15fa0:	pop	{r4, r5, r6, pc}
   15fa4:	cmp	r0, #0
   15fa8:	bne	15fc8 <strspn@plt+0x5110>
   15fac:	bl	10df8 <__errno_location@plt>
   15fb0:	mov	r3, #0
   15fb4:	str	r3, [r0]
   15fb8:	mvn	r0, #0
   15fbc:	pop	{r4, r5, r6, pc}
   15fc0:	mvn	r0, #0
   15fc4:	pop	{r4, r5, r6, pc}
   15fc8:	mvn	r0, #0
   15fcc:	pop	{r4, r5, r6, pc}
   15fd0:	push	{r4, r5, r6, lr}
   15fd4:	sub	sp, sp, #8
   15fd8:	mov	r4, r0
   15fdc:	bl	10e28 <fileno@plt>
   15fe0:	cmp	r0, #0
   15fe4:	blt	1605c <strspn@plt+0x51a4>
   15fe8:	mov	r0, r4
   15fec:	bl	10d98 <__freading@plt>
   15ff0:	cmp	r0, #0
   15ff4:	beq	16028 <strspn@plt+0x5170>
   15ff8:	mov	r0, r4
   15ffc:	bl	10e28 <fileno@plt>
   16000:	mov	r3, #1
   16004:	str	r3, [sp]
   16008:	mov	r2, #0
   1600c:	mov	r3, #0
   16010:	bl	10d44 <lseek64@plt>
   16014:	mvn	r2, #0
   16018:	mvn	r3, #0
   1601c:	cmp	r1, r3
   16020:	cmpeq	r0, r2
   16024:	beq	16068 <strspn@plt+0x51b0>
   16028:	mov	r0, r4
   1602c:	bl	16078 <strspn@plt+0x51c0>
   16030:	cmp	r0, #0
   16034:	beq	16068 <strspn@plt+0x51b0>
   16038:	bl	10df8 <__errno_location@plt>
   1603c:	mov	r5, r0
   16040:	ldr	r6, [r0]
   16044:	mov	r0, r4
   16048:	bl	10e40 <fclose@plt>
   1604c:	cmp	r6, #0
   16050:	strne	r6, [r5]
   16054:	mvnne	r0, #0
   16058:	b	16070 <strspn@plt+0x51b8>
   1605c:	mov	r0, r4
   16060:	bl	10e40 <fclose@plt>
   16064:	b	16070 <strspn@plt+0x51b8>
   16068:	mov	r0, r4
   1606c:	bl	10e40 <fclose@plt>
   16070:	add	sp, sp, #8
   16074:	pop	{r4, r5, r6, pc}
   16078:	push	{r4, lr}
   1607c:	sub	sp, sp, #8
   16080:	subs	r4, r0, #0
   16084:	beq	16098 <strspn@plt+0x51e0>
   16088:	mov	r0, r4
   1608c:	bl	10d98 <__freading@plt>
   16090:	cmp	r0, #0
   16094:	bne	160a8 <strspn@plt+0x51f0>
   16098:	mov	r0, r4
   1609c:	bl	10c84 <fflush@plt>
   160a0:	add	sp, sp, #8
   160a4:	pop	{r4, pc}
   160a8:	ldr	r3, [r4]
   160ac:	tst	r3, #256	; 0x100
   160b0:	bne	160c0 <strspn@plt+0x5208>
   160b4:	mov	r0, r4
   160b8:	bl	10c84 <fflush@plt>
   160bc:	b	160a0 <strspn@plt+0x51e8>
   160c0:	mov	r3, #1
   160c4:	str	r3, [sp]
   160c8:	mov	r2, #0
   160cc:	mov	r3, #0
   160d0:	mov	r0, r4
   160d4:	bl	160dc <strspn@plt+0x5224>
   160d8:	b	160b4 <strspn@plt+0x51fc>
   160dc:	push	{r4, r5, r6, r7, lr}
   160e0:	sub	sp, sp, #12
   160e4:	mov	r4, r0
   160e8:	mov	r6, r2
   160ec:	mov	r7, r3
   160f0:	ldr	r5, [sp, #32]
   160f4:	ldr	r2, [r0, #8]
   160f8:	ldr	r3, [r0, #4]
   160fc:	cmp	r2, r3
   16100:	beq	16120 <strspn@plt+0x5268>
   16104:	str	r5, [sp]
   16108:	mov	r2, r6
   1610c:	mov	r3, r7
   16110:	mov	r0, r4
   16114:	bl	10e4c <fseeko64@plt>
   16118:	add	sp, sp, #12
   1611c:	pop	{r4, r5, r6, r7, pc}
   16120:	ldr	r2, [r0, #20]
   16124:	ldr	r3, [r0, #16]
   16128:	cmp	r2, r3
   1612c:	bne	16104 <strspn@plt+0x524c>
   16130:	ldr	r3, [r0, #36]	; 0x24
   16134:	cmp	r3, #0
   16138:	bne	16104 <strspn@plt+0x524c>
   1613c:	bl	10e28 <fileno@plt>
   16140:	str	r5, [sp]
   16144:	mov	r2, r6
   16148:	mov	r3, r7
   1614c:	bl	10d44 <lseek64@plt>
   16150:	mvn	r2, #0
   16154:	mvn	r3, #0
   16158:	cmp	r1, r3
   1615c:	cmpeq	r0, r2
   16160:	beq	1617c <strspn@plt+0x52c4>
   16164:	ldr	r3, [r4]
   16168:	bic	r3, r3, #16
   1616c:	str	r3, [r4]
   16170:	strd	r0, [r4, #80]	; 0x50
   16174:	mov	r0, #0
   16178:	b	16118 <strspn@plt+0x5260>
   1617c:	mvn	r0, #0
   16180:	b	16118 <strspn@plt+0x5260>
   16184:	push	{r4, lr}
   16188:	ldrb	r3, [r0]
   1618c:	cmp	r3, #0
   16190:	beq	161b8 <strspn@plt+0x5300>
   16194:	mov	r2, r0
   16198:	mov	r0, #0
   1619c:	add	r0, r3, r0, ror #23
   161a0:	ldrb	r3, [r2, #1]!
   161a4:	cmp	r3, #0
   161a8:	bne	1619c <strspn@plt+0x52e4>
   161ac:	bl	1658c <strspn@plt+0x56d4>
   161b0:	mov	r0, r1
   161b4:	pop	{r4, pc}
   161b8:	mov	r0, #0
   161bc:	b	161ac <strspn@plt+0x52f4>
   161c0:	push	{r4, lr}
   161c4:	mov	r0, #14
   161c8:	bl	10e7c <nl_langinfo@plt>
   161cc:	cmp	r0, #0
   161d0:	beq	161e8 <strspn@plt+0x5330>
   161d4:	ldrb	r2, [r0]
   161d8:	ldr	r3, [pc, #16]	; 161f0 <strspn@plt+0x5338>
   161dc:	cmp	r2, #0
   161e0:	moveq	r0, r3
   161e4:	pop	{r4, pc}
   161e8:	ldr	r0, [pc]	; 161f0 <strspn@plt+0x5338>
   161ec:	pop	{r4, pc}
   161f0:	andeq	r7, r1, r8, asr #11
   161f4:	push	{r4, r5, r6, r7, lr}
   161f8:	sub	sp, sp, #12
   161fc:	mov	r7, r1
   16200:	mov	r5, r2
   16204:	subs	r6, r0, #0
   16208:	addeq	r6, sp, #4
   1620c:	mov	r0, r6
   16210:	bl	10d68 <mbrtowc@plt>
   16214:	mov	r4, r0
   16218:	cmp	r5, #0
   1621c:	cmnne	r0, #3
   16220:	bhi	16230 <strspn@plt+0x5378>
   16224:	mov	r0, r4
   16228:	add	sp, sp, #12
   1622c:	pop	{r4, r5, r6, r7, pc}
   16230:	mov	r0, #0
   16234:	bl	16298 <strspn@plt+0x53e0>
   16238:	cmp	r0, #0
   1623c:	ldrbeq	r3, [r7]
   16240:	streq	r3, [r6]
   16244:	moveq	r4, #1
   16248:	b	16224 <strspn@plt+0x536c>
   1624c:	push	{r4, r5, r6, lr}
   16250:	mov	r6, r0
   16254:	mov	r5, r1
   16258:	subs	r4, r2, #0
   1625c:	beq	16288 <strspn@plt+0x53d0>
   16260:	mov	r1, r4
   16264:	mvn	r0, #0
   16268:	bl	163a0 <strspn@plt+0x54e8>
   1626c:	cmp	r0, r5
   16270:	bcs	16288 <strspn@plt+0x53d0>
   16274:	bl	10df8 <__errno_location@plt>
   16278:	mov	r3, #12
   1627c:	str	r3, [r0]
   16280:	mov	r0, #0
   16284:	pop	{r4, r5, r6, pc}
   16288:	mul	r1, r5, r4
   1628c:	mov	r0, r6
   16290:	bl	15f08 <strspn@plt+0x5050>
   16294:	pop	{r4, r5, r6, pc}
   16298:	push	{lr}		; (str lr, [sp, #-4]!)
   1629c:	sub	sp, sp, #268	; 0x10c
   162a0:	ldr	r2, [pc, #68]	; 162ec <strspn@plt+0x5434>
   162a4:	add	r1, sp, #4
   162a8:	bl	162f8 <strspn@plt+0x5440>
   162ac:	cmp	r0, #0
   162b0:	movne	r0, #0
   162b4:	bne	162e4 <strspn@plt+0x542c>
   162b8:	ldr	r1, [pc, #48]	; 162f0 <strspn@plt+0x5438>
   162bc:	add	r0, sp, #4
   162c0:	bl	10c78 <strcmp@plt>
   162c4:	cmp	r0, #0
   162c8:	moveq	r0, #0
   162cc:	beq	162e4 <strspn@plt+0x542c>
   162d0:	ldr	r1, [pc, #28]	; 162f4 <strspn@plt+0x543c>
   162d4:	add	r0, sp, #4
   162d8:	bl	10c78 <strcmp@plt>
   162dc:	adds	r0, r0, #0
   162e0:	movne	r0, #1
   162e4:	add	sp, sp, #268	; 0x10c
   162e8:	pop	{pc}		; (ldr pc, [sp], #4)
   162ec:	andeq	r0, r0, r1, lsl #2
   162f0:	ldrdeq	r7, [r1], -r0
   162f4:	ldrdeq	r7, [r1], -r4
   162f8:	push	{r4, r5, r6, lr}
   162fc:	mov	r6, r1
   16300:	mov	r4, r2
   16304:	mov	r1, #0
   16308:	bl	10e64 <setlocale@plt>
   1630c:	subs	r5, r0, #0
   16310:	beq	16334 <strspn@plt+0x547c>
   16314:	mov	r0, r5
   16318:	bl	10dec <strlen@plt>
   1631c:	cmp	r4, r0
   16320:	bhi	1634c <strspn@plt+0x5494>
   16324:	cmp	r4, #0
   16328:	bne	16364 <strspn@plt+0x54ac>
   1632c:	mov	r0, #34	; 0x22
   16330:	pop	{r4, r5, r6, pc}
   16334:	cmp	r4, #0
   16338:	beq	16388 <strspn@plt+0x54d0>
   1633c:	mov	r3, #0
   16340:	strb	r3, [r6]
   16344:	mov	r0, #22
   16348:	pop	{r4, r5, r6, pc}
   1634c:	add	r2, r0, #1
   16350:	mov	r1, r5
   16354:	mov	r0, r6
   16358:	bl	10cc0 <memcpy@plt>
   1635c:	mov	r0, #0
   16360:	pop	{r4, r5, r6, pc}
   16364:	sub	r4, r4, #1
   16368:	mov	r2, r4
   1636c:	mov	r1, r5
   16370:	mov	r0, r6
   16374:	bl	10cc0 <memcpy@plt>
   16378:	mov	r3, #0
   1637c:	strb	r3, [r6, r4]
   16380:	mov	r0, #34	; 0x22
   16384:	pop	{r4, r5, r6, pc}
   16388:	mov	r0, #22
   1638c:	pop	{r4, r5, r6, pc}
   16390:	push	{r4, lr}
   16394:	mov	r1, #0
   16398:	bl	10e64 <setlocale@plt>
   1639c:	pop	{r4, pc}
   163a0:	subs	r2, r1, #1
   163a4:	bxeq	lr
   163a8:	bcc	16580 <strspn@plt+0x56c8>
   163ac:	cmp	r0, r1
   163b0:	bls	16564 <strspn@plt+0x56ac>
   163b4:	tst	r1, r2
   163b8:	beq	16570 <strspn@plt+0x56b8>
   163bc:	clz	r3, r0
   163c0:	clz	r2, r1
   163c4:	sub	r3, r2, r3
   163c8:	rsbs	r3, r3, #31
   163cc:	addne	r3, r3, r3, lsl #1
   163d0:	mov	r2, #0
   163d4:	addne	pc, pc, r3, lsl #2
   163d8:	nop			; (mov r0, r0)
   163dc:	cmp	r0, r1, lsl #31
   163e0:	adc	r2, r2, r2
   163e4:	subcs	r0, r0, r1, lsl #31
   163e8:	cmp	r0, r1, lsl #30
   163ec:	adc	r2, r2, r2
   163f0:	subcs	r0, r0, r1, lsl #30
   163f4:	cmp	r0, r1, lsl #29
   163f8:	adc	r2, r2, r2
   163fc:	subcs	r0, r0, r1, lsl #29
   16400:	cmp	r0, r1, lsl #28
   16404:	adc	r2, r2, r2
   16408:	subcs	r0, r0, r1, lsl #28
   1640c:	cmp	r0, r1, lsl #27
   16410:	adc	r2, r2, r2
   16414:	subcs	r0, r0, r1, lsl #27
   16418:	cmp	r0, r1, lsl #26
   1641c:	adc	r2, r2, r2
   16420:	subcs	r0, r0, r1, lsl #26
   16424:	cmp	r0, r1, lsl #25
   16428:	adc	r2, r2, r2
   1642c:	subcs	r0, r0, r1, lsl #25
   16430:	cmp	r0, r1, lsl #24
   16434:	adc	r2, r2, r2
   16438:	subcs	r0, r0, r1, lsl #24
   1643c:	cmp	r0, r1, lsl #23
   16440:	adc	r2, r2, r2
   16444:	subcs	r0, r0, r1, lsl #23
   16448:	cmp	r0, r1, lsl #22
   1644c:	adc	r2, r2, r2
   16450:	subcs	r0, r0, r1, lsl #22
   16454:	cmp	r0, r1, lsl #21
   16458:	adc	r2, r2, r2
   1645c:	subcs	r0, r0, r1, lsl #21
   16460:	cmp	r0, r1, lsl #20
   16464:	adc	r2, r2, r2
   16468:	subcs	r0, r0, r1, lsl #20
   1646c:	cmp	r0, r1, lsl #19
   16470:	adc	r2, r2, r2
   16474:	subcs	r0, r0, r1, lsl #19
   16478:	cmp	r0, r1, lsl #18
   1647c:	adc	r2, r2, r2
   16480:	subcs	r0, r0, r1, lsl #18
   16484:	cmp	r0, r1, lsl #17
   16488:	adc	r2, r2, r2
   1648c:	subcs	r0, r0, r1, lsl #17
   16490:	cmp	r0, r1, lsl #16
   16494:	adc	r2, r2, r2
   16498:	subcs	r0, r0, r1, lsl #16
   1649c:	cmp	r0, r1, lsl #15
   164a0:	adc	r2, r2, r2
   164a4:	subcs	r0, r0, r1, lsl #15
   164a8:	cmp	r0, r1, lsl #14
   164ac:	adc	r2, r2, r2
   164b0:	subcs	r0, r0, r1, lsl #14
   164b4:	cmp	r0, r1, lsl #13
   164b8:	adc	r2, r2, r2
   164bc:	subcs	r0, r0, r1, lsl #13
   164c0:	cmp	r0, r1, lsl #12
   164c4:	adc	r2, r2, r2
   164c8:	subcs	r0, r0, r1, lsl #12
   164cc:	cmp	r0, r1, lsl #11
   164d0:	adc	r2, r2, r2
   164d4:	subcs	r0, r0, r1, lsl #11
   164d8:	cmp	r0, r1, lsl #10
   164dc:	adc	r2, r2, r2
   164e0:	subcs	r0, r0, r1, lsl #10
   164e4:	cmp	r0, r1, lsl #9
   164e8:	adc	r2, r2, r2
   164ec:	subcs	r0, r0, r1, lsl #9
   164f0:	cmp	r0, r1, lsl #8
   164f4:	adc	r2, r2, r2
   164f8:	subcs	r0, r0, r1, lsl #8
   164fc:	cmp	r0, r1, lsl #7
   16500:	adc	r2, r2, r2
   16504:	subcs	r0, r0, r1, lsl #7
   16508:	cmp	r0, r1, lsl #6
   1650c:	adc	r2, r2, r2
   16510:	subcs	r0, r0, r1, lsl #6
   16514:	cmp	r0, r1, lsl #5
   16518:	adc	r2, r2, r2
   1651c:	subcs	r0, r0, r1, lsl #5
   16520:	cmp	r0, r1, lsl #4
   16524:	adc	r2, r2, r2
   16528:	subcs	r0, r0, r1, lsl #4
   1652c:	cmp	r0, r1, lsl #3
   16530:	adc	r2, r2, r2
   16534:	subcs	r0, r0, r1, lsl #3
   16538:	cmp	r0, r1, lsl #2
   1653c:	adc	r2, r2, r2
   16540:	subcs	r0, r0, r1, lsl #2
   16544:	cmp	r0, r1, lsl #1
   16548:	adc	r2, r2, r2
   1654c:	subcs	r0, r0, r1, lsl #1
   16550:	cmp	r0, r1
   16554:	adc	r2, r2, r2
   16558:	subcs	r0, r0, r1
   1655c:	mov	r0, r2
   16560:	bx	lr
   16564:	moveq	r0, #1
   16568:	movne	r0, #0
   1656c:	bx	lr
   16570:	clz	r2, r1
   16574:	rsb	r2, r2, #31
   16578:	lsr	r0, r0, r2
   1657c:	bx	lr
   16580:	cmp	r0, #0
   16584:	mvnne	r0, #0
   16588:	b	16828 <strspn@plt+0x5970>
   1658c:	cmp	r1, #0
   16590:	beq	16580 <strspn@plt+0x56c8>
   16594:	push	{r0, r1, lr}
   16598:	bl	163a0 <strspn@plt+0x54e8>
   1659c:	pop	{r1, r2, lr}
   165a0:	mul	r3, r2, r0
   165a4:	sub	r1, r1, r3
   165a8:	bx	lr
   165ac:	cmp	r1, #0
   165b0:	beq	167bc <strspn@plt+0x5904>
   165b4:	eor	ip, r0, r1
   165b8:	rsbmi	r1, r1, #0
   165bc:	subs	r2, r1, #1
   165c0:	beq	16788 <strspn@plt+0x58d0>
   165c4:	movs	r3, r0
   165c8:	rsbmi	r3, r0, #0
   165cc:	cmp	r3, r1
   165d0:	bls	16794 <strspn@plt+0x58dc>
   165d4:	tst	r1, r2
   165d8:	beq	167a4 <strspn@plt+0x58ec>
   165dc:	clz	r2, r3
   165e0:	clz	r0, r1
   165e4:	sub	r2, r0, r2
   165e8:	rsbs	r2, r2, #31
   165ec:	addne	r2, r2, r2, lsl #1
   165f0:	mov	r0, #0
   165f4:	addne	pc, pc, r2, lsl #2
   165f8:	nop			; (mov r0, r0)
   165fc:	cmp	r3, r1, lsl #31
   16600:	adc	r0, r0, r0
   16604:	subcs	r3, r3, r1, lsl #31
   16608:	cmp	r3, r1, lsl #30
   1660c:	adc	r0, r0, r0
   16610:	subcs	r3, r3, r1, lsl #30
   16614:	cmp	r3, r1, lsl #29
   16618:	adc	r0, r0, r0
   1661c:	subcs	r3, r3, r1, lsl #29
   16620:	cmp	r3, r1, lsl #28
   16624:	adc	r0, r0, r0
   16628:	subcs	r3, r3, r1, lsl #28
   1662c:	cmp	r3, r1, lsl #27
   16630:	adc	r0, r0, r0
   16634:	subcs	r3, r3, r1, lsl #27
   16638:	cmp	r3, r1, lsl #26
   1663c:	adc	r0, r0, r0
   16640:	subcs	r3, r3, r1, lsl #26
   16644:	cmp	r3, r1, lsl #25
   16648:	adc	r0, r0, r0
   1664c:	subcs	r3, r3, r1, lsl #25
   16650:	cmp	r3, r1, lsl #24
   16654:	adc	r0, r0, r0
   16658:	subcs	r3, r3, r1, lsl #24
   1665c:	cmp	r3, r1, lsl #23
   16660:	adc	r0, r0, r0
   16664:	subcs	r3, r3, r1, lsl #23
   16668:	cmp	r3, r1, lsl #22
   1666c:	adc	r0, r0, r0
   16670:	subcs	r3, r3, r1, lsl #22
   16674:	cmp	r3, r1, lsl #21
   16678:	adc	r0, r0, r0
   1667c:	subcs	r3, r3, r1, lsl #21
   16680:	cmp	r3, r1, lsl #20
   16684:	adc	r0, r0, r0
   16688:	subcs	r3, r3, r1, lsl #20
   1668c:	cmp	r3, r1, lsl #19
   16690:	adc	r0, r0, r0
   16694:	subcs	r3, r3, r1, lsl #19
   16698:	cmp	r3, r1, lsl #18
   1669c:	adc	r0, r0, r0
   166a0:	subcs	r3, r3, r1, lsl #18
   166a4:	cmp	r3, r1, lsl #17
   166a8:	adc	r0, r0, r0
   166ac:	subcs	r3, r3, r1, lsl #17
   166b0:	cmp	r3, r1, lsl #16
   166b4:	adc	r0, r0, r0
   166b8:	subcs	r3, r3, r1, lsl #16
   166bc:	cmp	r3, r1, lsl #15
   166c0:	adc	r0, r0, r0
   166c4:	subcs	r3, r3, r1, lsl #15
   166c8:	cmp	r3, r1, lsl #14
   166cc:	adc	r0, r0, r0
   166d0:	subcs	r3, r3, r1, lsl #14
   166d4:	cmp	r3, r1, lsl #13
   166d8:	adc	r0, r0, r0
   166dc:	subcs	r3, r3, r1, lsl #13
   166e0:	cmp	r3, r1, lsl #12
   166e4:	adc	r0, r0, r0
   166e8:	subcs	r3, r3, r1, lsl #12
   166ec:	cmp	r3, r1, lsl #11
   166f0:	adc	r0, r0, r0
   166f4:	subcs	r3, r3, r1, lsl #11
   166f8:	cmp	r3, r1, lsl #10
   166fc:	adc	r0, r0, r0
   16700:	subcs	r3, r3, r1, lsl #10
   16704:	cmp	r3, r1, lsl #9
   16708:	adc	r0, r0, r0
   1670c:	subcs	r3, r3, r1, lsl #9
   16710:	cmp	r3, r1, lsl #8
   16714:	adc	r0, r0, r0
   16718:	subcs	r3, r3, r1, lsl #8
   1671c:	cmp	r3, r1, lsl #7
   16720:	adc	r0, r0, r0
   16724:	subcs	r3, r3, r1, lsl #7
   16728:	cmp	r3, r1, lsl #6
   1672c:	adc	r0, r0, r0
   16730:	subcs	r3, r3, r1, lsl #6
   16734:	cmp	r3, r1, lsl #5
   16738:	adc	r0, r0, r0
   1673c:	subcs	r3, r3, r1, lsl #5
   16740:	cmp	r3, r1, lsl #4
   16744:	adc	r0, r0, r0
   16748:	subcs	r3, r3, r1, lsl #4
   1674c:	cmp	r3, r1, lsl #3
   16750:	adc	r0, r0, r0
   16754:	subcs	r3, r3, r1, lsl #3
   16758:	cmp	r3, r1, lsl #2
   1675c:	adc	r0, r0, r0
   16760:	subcs	r3, r3, r1, lsl #2
   16764:	cmp	r3, r1, lsl #1
   16768:	adc	r0, r0, r0
   1676c:	subcs	r3, r3, r1, lsl #1
   16770:	cmp	r3, r1
   16774:	adc	r0, r0, r0
   16778:	subcs	r3, r3, r1
   1677c:	cmp	ip, #0
   16780:	rsbmi	r0, r0, #0
   16784:	bx	lr
   16788:	teq	ip, r0
   1678c:	rsbmi	r0, r0, #0
   16790:	bx	lr
   16794:	movcc	r0, #0
   16798:	asreq	r0, ip, #31
   1679c:	orreq	r0, r0, #1
   167a0:	bx	lr
   167a4:	clz	r2, r1
   167a8:	rsb	r2, r2, #31
   167ac:	cmp	ip, #0
   167b0:	lsr	r0, r3, r2
   167b4:	rsbmi	r0, r0, #0
   167b8:	bx	lr
   167bc:	cmp	r0, #0
   167c0:	mvngt	r0, #-2147483648	; 0x80000000
   167c4:	movlt	r0, #-2147483648	; 0x80000000
   167c8:	b	16828 <strspn@plt+0x5970>
   167cc:	cmp	r1, #0
   167d0:	beq	167bc <strspn@plt+0x5904>
   167d4:	push	{r0, r1, lr}
   167d8:	bl	165b4 <strspn@plt+0x56fc>
   167dc:	pop	{r1, r2, lr}
   167e0:	mul	r3, r2, r0
   167e4:	sub	r1, r1, r3
   167e8:	bx	lr
   167ec:	cmp	r3, #0
   167f0:	cmpeq	r2, #0
   167f4:	bne	1680c <strspn@plt+0x5954>
   167f8:	cmp	r1, #0
   167fc:	cmpeq	r0, #0
   16800:	mvnne	r1, #0
   16804:	mvnne	r0, #0
   16808:	b	16828 <strspn@plt+0x5970>
   1680c:	sub	sp, sp, #8
   16810:	push	{sp, lr}
   16814:	bl	16838 <strspn@plt+0x5980>
   16818:	ldr	lr, [sp, #4]
   1681c:	add	sp, sp, #8
   16820:	pop	{r2, r3}
   16824:	bx	lr
   16828:	push	{r1, lr}
   1682c:	mov	r0, #8
   16830:	bl	10c6c <raise@plt>
   16834:	pop	{r1, pc}
   16838:	cmp	r1, r3
   1683c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16840:	cmpeq	r0, r2
   16844:	mov	r4, r0
   16848:	mov	r5, r1
   1684c:	ldr	r9, [sp, #28]
   16850:	movcc	r0, #0
   16854:	movcc	r1, #0
   16858:	bcc	16950 <strspn@plt+0x5a98>
   1685c:	cmp	r3, #0
   16860:	clzeq	ip, r2
   16864:	clzne	ip, r3
   16868:	addeq	ip, ip, #32
   1686c:	cmp	r5, #0
   16870:	clzeq	r1, r4
   16874:	addeq	r1, r1, #32
   16878:	clzne	r1, r5
   1687c:	sub	ip, ip, r1
   16880:	sub	lr, ip, #32
   16884:	lsl	r7, r3, ip
   16888:	rsb	r8, ip, #32
   1688c:	orr	r7, r7, r2, lsl lr
   16890:	orr	r7, r7, r2, lsr r8
   16894:	lsl	r6, r2, ip
   16898:	cmp	r5, r7
   1689c:	cmpeq	r4, r6
   168a0:	movcc	r0, #0
   168a4:	movcc	r1, #0
   168a8:	bcc	168c4 <strspn@plt+0x5a0c>
   168ac:	mov	r3, #1
   168b0:	subs	r4, r4, r6
   168b4:	lsl	r1, r3, lr
   168b8:	lsl	r0, r3, ip
   168bc:	orr	r1, r1, r3, lsr r8
   168c0:	sbc	r5, r5, r7
   168c4:	cmp	ip, #0
   168c8:	beq	16950 <strspn@plt+0x5a98>
   168cc:	lsrs	r3, r7, #1
   168d0:	rrx	r2, r6
   168d4:	mov	r6, ip
   168d8:	b	168fc <strspn@plt+0x5a44>
   168dc:	subs	r4, r4, r2
   168e0:	sbc	r5, r5, r3
   168e4:	adds	r4, r4, r4
   168e8:	adc	r5, r5, r5
   168ec:	adds	r4, r4, #1
   168f0:	adc	r5, r5, #0
   168f4:	subs	r6, r6, #1
   168f8:	beq	16918 <strspn@plt+0x5a60>
   168fc:	cmp	r5, r3
   16900:	cmpeq	r4, r2
   16904:	bcs	168dc <strspn@plt+0x5a24>
   16908:	adds	r4, r4, r4
   1690c:	adc	r5, r5, r5
   16910:	subs	r6, r6, #1
   16914:	bne	168fc <strspn@plt+0x5a44>
   16918:	lsr	r6, r4, ip
   1691c:	lsr	r7, r5, ip
   16920:	orr	r6, r6, r5, lsl r8
   16924:	adds	r2, r0, r4
   16928:	orr	r6, r6, r5, lsr lr
   1692c:	adc	r3, r1, r5
   16930:	lsl	r1, r7, ip
   16934:	orr	r1, r1, r6, lsl lr
   16938:	lsl	r0, r6, ip
   1693c:	orr	r1, r1, r6, lsr r8
   16940:	subs	r0, r2, r0
   16944:	mov	r4, r6
   16948:	mov	r5, r7
   1694c:	sbc	r1, r3, r1
   16950:	cmp	r9, #0
   16954:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16958:	strd	r4, [r9]
   1695c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16964:	mov	r7, r0
   16968:	ldr	r6, [pc, #72]	; 169b8 <strspn@plt+0x5b00>
   1696c:	ldr	r5, [pc, #72]	; 169bc <strspn@plt+0x5b04>
   16970:	add	r6, pc, r6
   16974:	add	r5, pc, r5
   16978:	sub	r6, r6, r5
   1697c:	mov	r8, r1
   16980:	mov	r9, r2
   16984:	bl	10c34 <calloc@plt-0x20>
   16988:	asrs	r6, r6, #2
   1698c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16990:	mov	r4, #0
   16994:	add	r4, r4, #1
   16998:	ldr	r3, [r5], #4
   1699c:	mov	r2, r9
   169a0:	mov	r1, r8
   169a4:	mov	r0, r7
   169a8:	blx	r3
   169ac:	cmp	r6, r4
   169b0:	bne	16994 <strspn@plt+0x5adc>
   169b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169b8:	muleq	r1, r8, r5
   169bc:	muleq	r1, r0, r5
   169c0:	bx	lr
   169c4:	ldr	r3, [pc, #12]	; 169d8 <strspn@plt+0x5b20>
   169c8:	mov	r1, #0
   169cc:	add	r3, pc, r3
   169d0:	ldr	r2, [r3]
   169d4:	b	10e04 <__cxa_atexit@plt>
   169d8:	andeq	r1, r1, r0, lsl r7

Disassembly of section .fini:

000169dc <.fini>:
   169dc:	push	{r3, lr}
   169e0:	pop	{r3, pc}
