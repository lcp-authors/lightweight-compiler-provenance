
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013fc8 <.init>:
   13fc8:	push	{r3, lr}
   13fcc:	bl	14564 <_start@@Base+0x3c>
   13fd0:	pop	{r3, pc}

Disassembly of section .plt:

00013fd4 <calloc@plt-0x14>:
   13fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fd8:	ldr	lr, [pc, #4]	; 13fe4 <calloc@plt-0x4>
   13fdc:	add	lr, pc, lr
   13fe0:	ldr	pc, [lr, #8]!
   13fe4:	andeq	r8, r4, ip, lsl r0

00013fe8 <calloc@plt>:
   13fe8:	add	ip, pc, #0, 12
   13fec:	add	ip, ip, #72, 20	; 0x48000
   13ff0:	ldr	pc, [ip, #28]!

00013ff4 <raise@plt>:
   13ff4:	add	ip, pc, #0, 12
   13ff8:	add	ip, ip, #72, 20	; 0x48000
   13ffc:	ldr	pc, [ip, #20]!

00014000 <strcmp@plt>:
   14000:	add	ip, pc, #0, 12
   14004:	add	ip, ip, #72, 20	; 0x48000
   14008:	ldr	pc, [ip, #12]!

0001400c <fopen@plt>:
   1400c:	add	ip, pc, #0, 12
   14010:	add	ip, ip, #72, 20	; 0x48000
   14014:	ldr	pc, [ip, #4]!

00014018 <free@plt>:
   14018:	add	ip, pc, #0, 12
   1401c:	add	ip, ip, #290816	; 0x47000
   14020:	ldr	pc, [ip, #4092]!	; 0xffc

00014024 <memcpy@plt>:
   14024:	add	ip, pc, #0, 12
   14028:	add	ip, ip, #290816	; 0x47000
   1402c:	ldr	pc, [ip, #4084]!	; 0xff4

00014030 <ftell@plt>:
   14030:	add	ip, pc, #0, 12
   14034:	add	ip, ip, #290816	; 0x47000
   14038:	ldr	pc, [ip, #4076]!	; 0xfec

0001403c <memcmp@plt>:
   1403c:	add	ip, pc, #0, 12
   14040:	add	ip, ip, #290816	; 0x47000
   14044:	ldr	pc, [ip, #4068]!	; 0xfe4

00014048 <rewind@plt>:
   14048:	add	ip, pc, #0, 12
   1404c:	add	ip, ip, #290816	; 0x47000
   14050:	ldr	pc, [ip, #4060]!	; 0xfdc

00014054 <realloc@plt>:
   14054:	add	ip, pc, #0, 12
   14058:	add	ip, ip, #290816	; 0x47000
   1405c:	ldr	pc, [ip, #4052]!	; 0xfd4

00014060 <fwrite@plt>:
   14060:	add	ip, pc, #0, 12
   14064:	add	ip, ip, #290816	; 0x47000
   14068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001406c <strcpy@plt>:
   1406c:	add	ip, pc, #0, 12
   14070:	add	ip, ip, #290816	; 0x47000
   14074:	ldr	pc, [ip, #4036]!	; 0xfc4

00014078 <fread@plt>:
   14078:	add	ip, pc, #0, 12
   1407c:	add	ip, ip, #290816	; 0x47000
   14080:	ldr	pc, [ip, #4028]!	; 0xfbc

00014084 <puts@plt>:
   14084:	add	ip, pc, #0, 12
   14088:	add	ip, ip, #290816	; 0x47000
   1408c:	ldr	pc, [ip, #4020]!	; 0xfb4

00014090 <malloc@plt>:
   14090:	add	ip, pc, #0, 12
   14094:	add	ip, ip, #290816	; 0x47000
   14098:	ldr	pc, [ip, #4012]!	; 0xfac

0001409c <__libc_start_main@plt>:
   1409c:	add	ip, pc, #0, 12
   140a0:	add	ip, ip, #290816	; 0x47000
   140a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000140a8 <__ctype_toupper_loc@plt>:
   140a8:	add	ip, pc, #0, 12
   140ac:	add	ip, ip, #290816	; 0x47000
   140b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000140b4 <__gmon_start__@plt>:
   140b4:	add	ip, pc, #0, 12
   140b8:	add	ip, ip, #290816	; 0x47000
   140bc:	ldr	pc, [ip, #3988]!	; 0xf94

000140c0 <exit@plt>:
   140c0:	add	ip, pc, #0, 12
   140c4:	add	ip, ip, #290816	; 0x47000
   140c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000140cc <strlen@plt>:
   140cc:	add	ip, pc, #0, 12
   140d0:	add	ip, ip, #290816	; 0x47000
   140d4:	ldr	pc, [ip, #3972]!	; 0xf84

000140d8 <strchr@plt>:
   140d8:	add	ip, pc, #0, 12
   140dc:	add	ip, ip, #290816	; 0x47000
   140e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000140e4 <fprintf@plt>:
   140e4:	add	ip, pc, #0, 12
   140e8:	add	ip, ip, #290816	; 0x47000
   140ec:	ldr	pc, [ip, #3956]!	; 0xf74

000140f0 <posix_memalign@plt>:
   140f0:	add	ip, pc, #0, 12
   140f4:	add	ip, ip, #290816	; 0x47000
   140f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000140fc <memset@plt>:
   140fc:	add	ip, pc, #0, 12
   14100:	add	ip, ip, #290816	; 0x47000
   14104:	ldr	pc, [ip, #3940]!	; 0xf64

00014108 <strncpy@plt>:
   14108:	add	ip, pc, #0, 12
   1410c:	add	ip, ip, #290816	; 0x47000
   14110:	ldr	pc, [ip, #3932]!	; 0xf5c

00014114 <strtod@plt>:
   14114:	add	ip, pc, #0, 12
   14118:	add	ip, ip, #290816	; 0x47000
   1411c:	ldr	pc, [ip, #3924]!	; 0xf54

00014120 <memchr@plt>:
   14120:	add	ip, pc, #0, 12
   14124:	add	ip, ip, #290816	; 0x47000
   14128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001412c <fclose@plt>:
   1412c:	add	ip, pc, #0, 12
   14130:	add	ip, ip, #290816	; 0x47000
   14134:	ldr	pc, [ip, #3908]!	; 0xf44

00014138 <vfprintf@plt>:
   14138:	add	ip, pc, #0, 12
   1413c:	add	ip, ip, #290816	; 0x47000
   14140:	ldr	pc, [ip, #3900]!	; 0xf3c

00014144 <fputc@plt>:
   14144:	add	ip, pc, #0, 12
   14148:	add	ip, ip, #290816	; 0x47000
   1414c:	ldr	pc, [ip, #3892]!	; 0xf34

00014150 <sprintf@plt>:
   14150:	add	ip, pc, #0, 12
   14154:	add	ip, ip, #290816	; 0x47000
   14158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001415c <vsnprintf@plt>:
   1415c:	add	ip, pc, #0, 12
   14160:	add	ip, ip, #290816	; 0x47000
   14164:	ldr	pc, [ip, #3876]!	; 0xf24

00014168 <qsort@plt>:
   14168:	add	ip, pc, #0, 12
   1416c:	add	ip, ip, #290816	; 0x47000
   14170:	ldr	pc, [ip, #3868]!	; 0xf1c

00014174 <fseek@plt>:
   14174:	add	ip, pc, #0, 12
   14178:	add	ip, ip, #290816	; 0x47000
   1417c:	ldr	pc, [ip, #3860]!	; 0xf14

00014180 <fputs@plt>:
   14180:	add	ip, pc, #0, 12
   14184:	add	ip, ip, #290816	; 0x47000
   14188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001418c <strncmp@plt>:
   1418c:	add	ip, pc, #0, 12
   14190:	add	ip, ip, #290816	; 0x47000
   14194:	ldr	pc, [ip, #3844]!	; 0xf04

00014198 <abort@plt>:
   14198:	add	ip, pc, #0, 12
   1419c:	add	ip, ip, #290816	; 0x47000
   141a0:	ldr	pc, [ip, #3836]!	; 0xefc

000141a4 <__assert_fail@plt>:
   141a4:	add	ip, pc, #0, 12
   141a8:	add	ip, ip, #290816	; 0x47000
   141ac:	ldr	pc, [ip, #3828]!	; 0xef4

Disassembly of section .text:

000141b0 <main@@Base-0x6c>:
   141b0:	ldr	r3, [pc, #20]	; 141cc <__assert_fail@plt+0x28>
   141b4:	push	{r4, lr}
   141b8:	ldr	r1, [r3]
   141bc:	ldr	r0, [pc, #12]	; 141d0 <__assert_fail@plt+0x2c>
   141c0:	bl	14180 <fputs@plt>
   141c4:	mov	r0, #1
   141c8:	bl	140c0 <exit@plt>
   141cc:	strheq	ip, [r5], -r0
   141d0:	andeq	r1, r3, r5, ror #11
   141d4:	ldr	r3, [pc, #20]	; 141f0 <__assert_fail@plt+0x4c>
   141d8:	push	{r4, lr}
   141dc:	ldr	r1, [r3]
   141e0:	ldr	r0, [pc, #12]	; 141f4 <__assert_fail@plt+0x50>
   141e4:	bl	14180 <fputs@plt>
   141e8:	mov	r0, #1
   141ec:	bl	140c0 <exit@plt>
   141f0:	strheq	ip, [r5], -r0
   141f4:	andeq	r1, r3, r5, ror #11
   141f8:	push	{r4, lr}
   141fc:	mov	r2, #108	; 0x6c
   14200:	ldr	r3, [pc, #8]	; 14210 <__assert_fail@plt+0x6c>
   14204:	ldr	r1, [pc, #8]	; 14214 <__assert_fail@plt+0x70>
   14208:	ldr	r0, [pc, #8]	; 14218 <__assert_fail@plt+0x74>
   1420c:	bl	141a4 <__assert_fail@plt>
   14210:	andeq	r8, r4, ip, asr #26
   14214:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   14218:	ldrdeq	r8, [r4], -pc	; <UNPREDICTABLE>

0001421c <main@@Base>:
   1421c:	cmp	r0, #1
   14220:	push	{r4, r5, r6, r7, r8, lr}
   14224:	sub	sp, sp, #224	; 0xe0
   14228:	bgt	14240 <main@@Base+0x24>
   1422c:	ldr	r3, [pc, #720]	; 14504 <main@@Base+0x2e8>
   14230:	ldr	r0, [r3]
   14234:	bl	14650 <usage@@Base>
   14238:	mvn	r0, #0
   1423c:	bl	140c0 <exit@plt>
   14240:	mov	r4, r0
   14244:	mov	r0, sp
   14248:	lsl	r5, r4, #2
   1424c:	mov	r6, r1
   14250:	bl	14db8 <flatcc_init_options@@Base>
   14254:	mov	r0, r5
   14258:	bl	14090 <malloc@plt>
   1425c:	cmp	r0, #0
   14260:	str	r0, [sp, #200]	; 0xc8
   14264:	bne	1427c <main@@Base+0x60>
   14268:	ldr	r3, [pc, #660]	; 14504 <main@@Base+0x2e8>
   1426c:	ldr	r0, [pc, #660]	; 14508 <main@@Base+0x2ec>
   14270:	ldr	r1, [r3]
   14274:	bl	14180 <fputs@plt>
   14278:	b	14238 <main@@Base+0x1c>
   1427c:	mov	r0, r5
   14280:	bl	14090 <malloc@plt>
   14284:	cmp	r0, #0
   14288:	str	r0, [sp, #204]	; 0xcc
   1428c:	bne	142ac <main@@Base+0x90>
   14290:	ldr	r3, [pc, #620]	; 14504 <main@@Base+0x2e8>
   14294:	ldr	r0, [pc, #620]	; 14508 <main@@Base+0x2ec>
   14298:	ldr	r1, [r3]
   1429c:	bl	14180 <fputs@plt>
   142a0:	ldr	r0, [sp, #200]	; 0xc8
   142a4:	bl	14018 <free@plt>
   142a8:	b	14238 <main@@Base+0x1c>
   142ac:	mov	r2, sp
   142b0:	mov	r1, r6
   142b4:	mov	r0, r4
   142b8:	bl	14d04 <parse_opts@@Base>
   142bc:	ldr	r1, [sp, #156]	; 0x9c
   142c0:	cmp	r1, #0
   142c4:	moveq	r2, r1
   142c8:	beq	142d8 <main@@Base+0xbc>
   142cc:	ldr	r2, [sp, #144]	; 0x90
   142d0:	adds	r2, r2, #0
   142d4:	movne	r2, #1
   142d8:	ldr	r3, [sp, #212]	; 0xd4
   142dc:	str	r2, [sp, #148]	; 0x94
   142e0:	cmp	r3, #0
   142e4:	bne	14384 <main@@Base+0x168>
   142e8:	ldr	r3, [sp, #144]	; 0x90
   142ec:	cmp	r3, #0
   142f0:	beq	14300 <main@@Base+0xe4>
   142f4:	ldr	r3, [sp, #180]	; 0xb4
   142f8:	cmp	r3, #0
   142fc:	beq	14340 <main@@Base+0x124>
   14300:	ldr	r3, [pc, #508]	; 14504 <main@@Base+0x2e8>
   14304:	ldr	r0, [pc, #512]	; 1450c <main@@Base+0x2f0>
   14308:	ldr	r1, [r3]
   1430c:	bl	14180 <fputs@plt>
   14310:	ldr	r3, [pc, #492]	; 14504 <main@@Base+0x2e8>
   14314:	ldr	r0, [pc, #500]	; 14510 <main@@Base+0x2f4>
   14318:	mvn	r4, #0
   1431c:	ldr	r1, [r3]
   14320:	bl	14180 <fputs@plt>
   14324:	ldr	r0, [sp, #200]	; 0xc8
   14328:	bl	14018 <free@plt>
   1432c:	ldr	r0, [sp, #204]	; 0xcc
   14330:	bl	14018 <free@plt>
   14334:	mov	r0, r4
   14338:	add	sp, sp, #224	; 0xe0
   1433c:	pop	{r4, r5, r6, r7, r8, pc}
   14340:	mov	r2, r3
   14344:	mov	r1, r3
   14348:	mov	r0, sp
   1434c:	bl	14e70 <flatcc_create_context@@Base>
   14350:	subs	r4, r0, #0
   14354:	bne	14368 <main@@Base+0x14c>
   14358:	ldr	r3, [pc, #420]	; 14504 <main@@Base+0x2e8>
   1435c:	ldr	r0, [pc, #432]	; 14514 <main@@Base+0x2f8>
   14360:	ldr	r1, [r3]
   14364:	b	1430c <main@@Base+0xf0>
   14368:	bl	14f90 <flatcc_generate_files@@Base>
   1436c:	cmp	r0, #0
   14370:	bne	144f8 <main@@Base+0x2dc>
   14374:	mov	r0, r4
   14378:	bl	150b8 <flatcc_destroy_context@@Base>
   1437c:	mov	r4, #0
   14380:	b	14324 <main@@Base+0x108>
   14384:	ldr	r3, [sp, #152]	; 0x98
   14388:	orrs	r3, r1, r3
   1438c:	bne	1441c <main@@Base+0x200>
   14390:	ldr	r3, [sp, #160]	; 0xa0
   14394:	cmp	r3, #0
   14398:	bne	1441c <main@@Base+0x200>
   1439c:	ldr	r3, [sp, #144]	; 0x90
   143a0:	orrs	r3, r2, r3
   143a4:	bne	1441c <main@@Base+0x200>
   143a8:	ldr	r3, [sp, #164]	; 0xa4
   143ac:	cmp	r3, #0
   143b0:	bne	1441c <main@@Base+0x200>
   143b4:	ldr	r3, [sp, #168]	; 0xa8
   143b8:	adds	r3, r3, #0
   143bc:	movne	r3, #1
   143c0:	ldr	r2, [sp, #180]	; 0xb4
   143c4:	cmp	r2, #0
   143c8:	bne	144d4 <main@@Base+0x2b8>
   143cc:	eor	r3, r3, #1
   143d0:	cmp	r1, #0
   143d4:	orrne	r3, r3, #1
   143d8:	cmp	r3, #0
   143dc:	bne	143ec <main@@Base+0x1d0>
   143e0:	ldr	r3, [sp, #160]	; 0xa0
   143e4:	cmp	r3, #0
   143e8:	beq	143f4 <main@@Base+0x1d8>
   143ec:	mov	r3, #1
   143f0:	str	r3, [sp, #152]	; 0x98
   143f4:	ldr	r3, [sp, #120]	; 0x78
   143f8:	cmp	r3, #0
   143fc:	beq	14440 <main@@Base+0x224>
   14400:	ldr	r3, [sp, #116]	; 0x74
   14404:	cmp	r3, #0
   14408:	bne	14440 <main@@Base+0x224>
   1440c:	ldr	r3, [pc, #240]	; 14504 <main@@Base+0x2e8>
   14410:	ldr	r0, [pc, #256]	; 14518 <main@@Base+0x2fc>
   14414:	ldr	r1, [r3]
   14418:	b	1430c <main@@Base+0xf0>
   1441c:	mov	r3, #1
   14420:	b	143c0 <main@@Base+0x1a4>
   14424:	ldr	r3, [sp, #124]	; 0x7c
   14428:	cmp	r3, #0
   1442c:	beq	143f4 <main@@Base+0x1d8>
   14430:	ldr	r3, [pc, #204]	; 14504 <main@@Base+0x2e8>
   14434:	ldr	r0, [pc, #224]	; 1451c <main@@Base+0x300>
   14438:	ldr	r1, [r3]
   1443c:	b	1430c <main@@Base+0xf0>
   14440:	ldr	r3, [sp, #108]	; 0x6c
   14444:	cmp	r3, #0
   14448:	beq	14464 <main@@Base+0x248>
   1444c:	ldr	r3, [sp, #124]	; 0x7c
   14450:	cmp	r3, #0
   14454:	ldrne	r3, [pc, #168]	; 14504 <main@@Base+0x2e8>
   14458:	ldrne	r0, [pc, #192]	; 14520 <main@@Base+0x304>
   1445c:	ldrne	r1, [r3]
   14460:	bne	1430c <main@@Base+0xf0>
   14464:	ldr	r5, [sp, #204]	; 0xcc
   14468:	mov	r6, #0
   1446c:	sub	r5, r5, #4
   14470:	mov	r7, r6
   14474:	mov	r8, #1
   14478:	ldr	r3, [sp, #212]	; 0xd4
   1447c:	cmp	r6, r3
   14480:	bge	1437c <main@@Base+0x160>
   14484:	mov	r3, r7
   14488:	mov	r2, #0
   1448c:	ldr	r1, [r5, #4]!
   14490:	mov	r0, sp
   14494:	bl	14e70 <flatcc_create_context@@Base>
   14498:	subs	r4, r0, #0
   1449c:	beq	14358 <main@@Base+0x13c>
   144a0:	ldr	r1, [r5]
   144a4:	bl	150e8 <flatcc_parse_file@@Base>
   144a8:	cmp	r0, #0
   144ac:	bne	144f8 <main@@Base+0x2dc>
   144b0:	mov	r0, r4
   144b4:	bl	14f90 <flatcc_generate_files@@Base>
   144b8:	cmp	r0, #0
   144bc:	bne	144f8 <main@@Base+0x2dc>
   144c0:	mov	r0, r4
   144c4:	bl	150b8 <flatcc_destroy_context@@Base>
   144c8:	add	r6, r6, #1
   144cc:	str	r8, [sp, #128]	; 0x80
   144d0:	b	14478 <main@@Base+0x25c>
   144d4:	cmp	r3, #0
   144d8:	beq	143f4 <main@@Base+0x1d8>
   144dc:	ldr	r3, [sp, #108]	; 0x6c
   144e0:	cmp	r3, #0
   144e4:	beq	14424 <main@@Base+0x208>
   144e8:	ldr	r3, [pc, #20]	; 14504 <main@@Base+0x2e8>
   144ec:	ldr	r0, [pc, #48]	; 14524 <main@@Base+0x308>
   144f0:	ldr	r1, [r3]
   144f4:	b	1430c <main@@Base+0xf0>
   144f8:	mov	r0, r4
   144fc:	bl	150b8 <flatcc_destroy_context@@Base>
   14500:	b	14310 <main@@Base+0xf4>
   14504:	strheq	ip, [r5], -r0
   14508:	muleq	r3, r4, r4
   1450c:	andeq	r1, r3, pc, lsr #9
   14510:			; <UNDEFINED> instruction: 0x000315bc
   14514:	andeq	r1, r3, r1, asr #9
   14518:	andeq	r1, r3, r8, ror #10
   1451c:	andeq	r1, r3, sp, lsr #10
   14520:	muleq	r3, r5, r5
   14524:	strdeq	r1, [r3], -r3

00014528 <_start@@Base>:
   14528:	mov	fp, #0
   1452c:	mov	lr, #0
   14530:	pop	{r1}		; (ldr r1, [sp], #4)
   14534:	mov	r2, sp
   14538:	push	{r2}		; (str r2, [sp, #-4]!)
   1453c:	push	{r0}		; (str r0, [sp, #-4]!)
   14540:	ldr	ip, [pc, #16]	; 14558 <_start@@Base+0x30>
   14544:	push	{ip}		; (str ip, [sp, #-4]!)
   14548:	ldr	r0, [pc, #12]	; 1455c <_start@@Base+0x34>
   1454c:	ldr	r3, [pc, #12]	; 14560 <_start@@Base+0x38>
   14550:	bl	1409c <__libc_start_main@plt>
   14554:	bl	14198 <abort@plt>
   14558:	andeq	pc, r2, r8, ror #30
   1455c:	andeq	r4, r1, ip, lsl r2
   14560:	andeq	pc, r2, r8, lsl #30
   14564:	ldr	r3, [pc, #20]	; 14580 <_start@@Base+0x58>
   14568:	ldr	r2, [pc, #20]	; 14584 <_start@@Base+0x5c>
   1456c:	add	r3, pc, r3
   14570:	ldr	r2, [r3, r2]
   14574:	cmp	r2, #0
   14578:	bxeq	lr
   1457c:	b	140b4 <__gmon_start__@plt>
   14580:	andeq	r7, r4, ip, lsl #21
   14584:	andeq	r0, r0, r4, lsr #1
   14588:	ldr	r3, [pc, #28]	; 145ac <_start@@Base+0x84>
   1458c:	ldr	r0, [pc, #28]	; 145b0 <_start@@Base+0x88>
   14590:	sub	r3, r3, r0
   14594:	cmp	r3, #6
   14598:	bxls	lr
   1459c:	ldr	r3, [pc, #16]	; 145b4 <_start@@Base+0x8c>
   145a0:	cmp	r3, #0
   145a4:	bxeq	lr
   145a8:	bx	r3
   145ac:	strheq	ip, [r5], -r3
   145b0:	strheq	ip, [r5], -r0
   145b4:	andeq	r0, r0, r0
   145b8:	ldr	r1, [pc, #36]	; 145e4 <_start@@Base+0xbc>
   145bc:	ldr	r0, [pc, #36]	; 145e8 <_start@@Base+0xc0>
   145c0:	sub	r1, r1, r0
   145c4:	asr	r1, r1, #2
   145c8:	add	r1, r1, r1, lsr #31
   145cc:	asrs	r1, r1, #1
   145d0:	bxeq	lr
   145d4:	ldr	r3, [pc, #16]	; 145ec <_start@@Base+0xc4>
   145d8:	cmp	r3, #0
   145dc:	bxeq	lr
   145e0:	bx	r3
   145e4:	strheq	ip, [r5], -r0
   145e8:	strheq	ip, [r5], -r0
   145ec:	andeq	r0, r0, r0
   145f0:	push	{r4, lr}
   145f4:	ldr	r4, [pc, #24]	; 14614 <_start@@Base+0xec>
   145f8:	ldrb	r3, [r4]
   145fc:	cmp	r3, #0
   14600:	popne	{r4, pc}
   14604:	bl	14588 <_start@@Base+0x60>
   14608:	mov	r3, #1
   1460c:	strb	r3, [r4]
   14610:	pop	{r4, pc}
   14614:	strheq	ip, [r5], -r8
   14618:	ldr	r0, [pc, #40]	; 14648 <_start@@Base+0x120>
   1461c:	ldr	r3, [r0]
   14620:	cmp	r3, #0
   14624:	bne	1462c <_start@@Base+0x104>
   14628:	b	145b8 <_start@@Base+0x90>
   1462c:	ldr	r3, [pc, #24]	; 1464c <_start@@Base+0x124>
   14630:	cmp	r3, #0
   14634:	beq	14628 <_start@@Base+0x100>
   14638:	push	{r4, lr}
   1463c:	blx	r3
   14640:	pop	{r4, lr}
   14644:	b	145b8 <_start@@Base+0x90>
   14648:	andeq	fp, r5, r4, lsl pc
   1464c:	andeq	r0, r0, r0

00014650 <usage@@Base>:
   14650:	push	{r4, lr}
   14654:	mov	r4, r0
   14658:	ldr	r2, [pc, #48]	; 14690 <usage@@Base+0x40>
   1465c:	ldr	r1, [pc, #48]	; 14694 <usage@@Base+0x44>
   14660:	bl	140e4 <fprintf@plt>
   14664:	ldr	r2, [pc, #44]	; 14698 <usage@@Base+0x48>
   14668:	ldr	r1, [pc, #44]	; 1469c <usage@@Base+0x4c>
   1466c:	mov	r0, r4
   14670:	bl	140e4 <fprintf@plt>
   14674:	mov	r1, r4
   14678:	ldr	r0, [pc, #32]	; 146a0 <usage@@Base+0x50>
   1467c:	bl	14180 <fputs@plt>
   14680:	mov	r1, r4
   14684:	ldr	r0, [pc, #24]	; 146a4 <usage@@Base+0x54>
   14688:	pop	{r4, lr}
   1468c:	b	14180 <fputs@plt>
   14690:	andeq	pc, r2, ip, ror pc	; <UNPREDICTABLE>
   14694:	strdeq	r8, [r4], -r6
   14698:			; <UNDEFINED> instruction: 0x0002ffb2
   1469c:			; <UNDEFINED> instruction: 0x0002ffb8
   146a0:	andeq	pc, r2, r5, asr #31
   146a4:	andeq	pc, r2, r9, ror #31

000146a8 <help@@Base>:
   146a8:	push	{r4, lr}
   146ac:	mov	r4, r0
   146b0:	bl	14650 <usage@@Base>
   146b4:	mov	r1, r4
   146b8:	ldr	r0, [pc, #4]	; 146c4 <help@@Base+0x1c>
   146bc:	pop	{r4, lr}
   146c0:	b	14180 <fputs@plt>
   146c4:	andeq	r0, r3, fp, ror #10

000146c8 <parse_bool_arg@@Base>:
   146c8:	push	{r4, lr}
   146cc:	mov	r4, r0
   146d0:	ldr	r1, [pc, #104]	; 14740 <parse_bool_arg@@Base+0x78>
   146d4:	bl	14000 <strcmp@plt>
   146d8:	cmp	r0, #0
   146dc:	popeq	{r4, pc}
   146e0:	ldr	r1, [pc, #92]	; 14744 <parse_bool_arg@@Base+0x7c>
   146e4:	mov	r0, r4
   146e8:	bl	14000 <strcmp@plt>
   146ec:	cmp	r0, #0
   146f0:	popeq	{r4, pc}
   146f4:	ldr	r1, [pc, #76]	; 14748 <parse_bool_arg@@Base+0x80>
   146f8:	mov	r0, r4
   146fc:	bl	14000 <strcmp@plt>
   14700:	cmp	r0, #0
   14704:	beq	14738 <parse_bool_arg@@Base+0x70>
   14708:	ldr	r1, [pc, #60]	; 1474c <parse_bool_arg@@Base+0x84>
   1470c:	mov	r0, r4
   14710:	bl	14000 <strcmp@plt>
   14714:	cmp	r0, #0
   14718:	beq	14738 <parse_bool_arg@@Base+0x70>
   1471c:	ldr	r3, [pc, #44]	; 14750 <parse_bool_arg@@Base+0x88>
   14720:	mov	r2, r4
   14724:	ldr	r1, [pc, #40]	; 14754 <parse_bool_arg@@Base+0x8c>
   14728:	ldr	r0, [r3]
   1472c:	bl	140e4 <fprintf@plt>
   14730:	mvn	r0, #0
   14734:	pop	{r4, pc}
   14738:	mov	r0, #1
   1473c:	pop	{r4, pc}
   14740:	andeq	sl, r3, r9, asr #3
   14744:			; <UNDEFINED> instruction: 0x000311b0
   14748:	andeq	fp, r4, r3, lsr #3
   1474c:			; <UNDEFINED> instruction: 0x000311b3
   14750:	strheq	ip, [r5], -r0
   14754:			; <UNDEFINED> instruction: 0x000311b7

00014758 <match_long_arg@@Base>:
   14758:	push	{r4, r5, r6, lr}
   1475c:	mov	r5, r0
   14760:	mov	r4, r2
   14764:	bl	1418c <strncmp@plt>
   14768:	cmp	r0, #0
   1476c:	bne	14788 <match_long_arg@@Base+0x30>
   14770:	mov	r0, r5
   14774:	bl	140cc <strlen@plt>
   14778:	sub	r0, r4, r0
   1477c:	clz	r0, r0
   14780:	lsr	r0, r0, #5
   14784:	pop	{r4, r5, r6, pc}
   14788:	mov	r0, #0
   1478c:	pop	{r4, r5, r6, pc}

00014790 <set_opt@@Base>:
   14790:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14794:	mov	r4, r0
   14798:	mov	r0, r1
   1479c:	mov	r5, r1
   147a0:	mov	r6, r2
   147a4:	bl	140cc <strlen@plt>
   147a8:	mov	r1, #61	; 0x3d
   147ac:	mov	r9, r0
   147b0:	mov	r0, r5
   147b4:	bl	140d8 <strchr@plt>
   147b8:	ldrb	r7, [r5]
   147bc:	subs	r8, r0, #0
   147c0:	addne	r6, r8, #1
   147c4:	subne	r9, r8, r5
   147c8:	cmp	r7, #104	; 0x68
   147cc:	beq	147e4 <set_opt@@Base+0x54>
   147d0:	mov	r1, r5
   147d4:	ldr	r0, [pc, #1028]	; 14be0 <set_opt@@Base+0x450>
   147d8:	bl	14000 <strcmp@plt>
   147dc:	cmp	r0, #0
   147e0:	bne	147f8 <set_opt@@Base+0x68>
   147e4:	ldr	r3, [pc, #1016]	; 14be4 <set_opt@@Base+0x454>
   147e8:	ldr	r0, [r3]
   147ec:	bl	146a8 <help@@Base>
   147f0:	mov	r0, #0
   147f4:	bl	140c0 <exit@plt>
   147f8:	mov	r1, r5
   147fc:	ldr	r0, [pc, #996]	; 14be8 <set_opt@@Base+0x458>
   14800:	bl	14000 <strcmp@plt>
   14804:	subs	sl, r0, #0
   14808:	bne	14834 <set_opt@@Base+0xa4>
   1480c:	ldr	r4, [pc, #984]	; 14bec <set_opt@@Base+0x45c>
   14810:	ldr	r2, [pc, #984]	; 14bf0 <set_opt@@Base+0x460>
   14814:	ldr	r1, [pc, #984]	; 14bf4 <set_opt@@Base+0x464>
   14818:	ldr	r0, [r4]
   1481c:	bl	140e4 <fprintf@plt>
   14820:	ldr	r2, [pc, #976]	; 14bf8 <set_opt@@Base+0x468>
   14824:	ldr	r1, [pc, #976]	; 14bfc <set_opt@@Base+0x46c>
   14828:	ldr	r0, [r4]
   1482c:	bl	140e4 <fprintf@plt>
   14830:	b	147f0 <set_opt@@Base+0x60>
   14834:	mov	r1, r5
   14838:	ldr	r0, [pc, #960]	; 14c00 <set_opt@@Base+0x470>
   1483c:	bl	14000 <strcmp@plt>
   14840:	cmp	r0, #0
   14844:	bne	14854 <set_opt@@Base+0xc4>
   14848:	mov	r3, #1
   1484c:	str	r3, [r4, #108]	; 0x6c
   14850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14854:	mov	r1, r5
   14858:	ldr	r0, [pc, #932]	; 14c04 <set_opt@@Base+0x474>
   1485c:	bl	14000 <strcmp@plt>
   14860:	cmp	r0, #0
   14864:	bne	14874 <set_opt@@Base+0xe4>
   14868:	mov	r3, #1
   1486c:	str	r3, [r4, #180]	; 0xb4
   14870:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14874:	mov	r1, r5
   14878:	ldr	r0, [pc, #904]	; 14c08 <set_opt@@Base+0x478>
   1487c:	bl	14000 <strcmp@plt>
   14880:	cmp	r0, #0
   14884:	bne	14894 <set_opt@@Base+0x104>
   14888:	mov	r3, #1
   1488c:	str	r3, [r4, #164]	; 0xa4
   14890:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14894:	mov	r1, r5
   14898:	ldr	r0, [pc, #876]	; 14c0c <set_opt@@Base+0x47c>
   1489c:	bl	14000 <strcmp@plt>
   148a0:	cmp	r0, #0
   148a4:	moveq	r3, #1
   148a8:	beq	148c8 <set_opt@@Base+0x138>
   148ac:	mov	r1, r5
   148b0:	ldr	r0, [pc, #856]	; 14c10 <set_opt@@Base+0x480>
   148b4:	bl	14000 <strcmp@plt>
   148b8:	cmp	r0, #0
   148bc:	bne	148d0 <set_opt@@Base+0x140>
   148c0:	mov	r3, #1
   148c4:	str	r3, [r4, #164]	; 0xa4
   148c8:	str	r3, [r4, #168]	; 0xa8
   148cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148d0:	mov	r2, r9
   148d4:	mov	r1, r5
   148d8:	ldr	r0, [pc, #820]	; 14c14 <set_opt@@Base+0x484>
   148dc:	bl	14758 <match_long_arg@@Base>
   148e0:	cmp	r0, #0
   148e4:	beq	1492c <set_opt@@Base+0x19c>
   148e8:	ldr	r5, [pc, #764]	; 14bec <set_opt@@Base+0x45c>
   148ec:	ldr	r0, [pc, #804]	; 14c18 <set_opt@@Base+0x488>
   148f0:	ldr	r1, [r5]
   148f4:	bl	14180 <fputs@plt>
   148f8:	cmp	r6, #0
   148fc:	ldreq	r1, [r5]
   14900:	ldreq	r0, [pc, #788]	; 14c1c <set_opt@@Base+0x48c>
   14904:	beq	14958 <set_opt@@Base+0x1c8>
   14908:	mov	r0, r6
   1490c:	bl	146c8 <parse_bool_arg@@Base>
   14910:	str	r0, [r4, #184]	; 0xb8
   14914:	cmp	r0, #0
   14918:	blt	1495c <set_opt@@Base+0x1cc>
   1491c:	cmp	r8, #0
   14920:	bne	14bd8 <set_opt@@Base+0x448>
   14924:	mov	r0, #2
   14928:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1492c:	mov	r2, r9
   14930:	mov	r1, r5
   14934:	ldr	r0, [pc, #740]	; 14c20 <set_opt@@Base+0x490>
   14938:	bl	14758 <match_long_arg@@Base>
   1493c:	cmp	r0, #0
   14940:	beq	14974 <set_opt@@Base+0x1e4>
   14944:	cmp	r6, #0
   14948:	bne	14964 <set_opt@@Base+0x1d4>
   1494c:	ldr	r3, [pc, #664]	; 14bec <set_opt@@Base+0x45c>
   14950:	ldr	r0, [pc, #716]	; 14c24 <set_opt@@Base+0x494>
   14954:	ldr	r1, [r3]
   14958:	bl	14180 <fputs@plt>
   1495c:	mvn	r0, #0
   14960:	b	147f4 <set_opt@@Base+0x64>
   14964:	mov	r0, r6
   14968:	bl	146c8 <parse_bool_arg@@Base>
   1496c:	str	r0, [r4, #188]	; 0xbc
   14970:	b	14914 <set_opt@@Base+0x184>
   14974:	mov	r2, r9
   14978:	mov	r1, r5
   1497c:	ldr	r0, [pc, #676]	; 14c28 <set_opt@@Base+0x498>
   14980:	bl	14758 <match_long_arg@@Base>
   14984:	cmp	r0, #0
   14988:	beq	149b0 <set_opt@@Base+0x220>
   1498c:	cmp	r6, #0
   14990:	movne	r3, #1
   14994:	strne	r6, [r4, #116]	; 0x74
   14998:	strne	r3, [r4, #112]	; 0x70
   1499c:	bne	1491c <set_opt@@Base+0x18c>
   149a0:	ldr	r3, [pc, #580]	; 14bec <set_opt@@Base+0x45c>
   149a4:	ldr	r0, [pc, #640]	; 14c2c <set_opt@@Base+0x49c>
   149a8:	ldr	r1, [r3]
   149ac:	b	14958 <set_opt@@Base+0x1c8>
   149b0:	mov	r2, r9
   149b4:	mov	r1, r5
   149b8:	ldr	r0, [pc, #624]	; 14c30 <set_opt@@Base+0x4a0>
   149bc:	bl	14758 <match_long_arg@@Base>
   149c0:	cmp	r0, #0
   149c4:	beq	149e4 <set_opt@@Base+0x254>
   149c8:	cmp	r6, #0
   149cc:	strne	r6, [r4, #120]	; 0x78
   149d0:	bne	1491c <set_opt@@Base+0x18c>
   149d4:	ldr	r3, [pc, #528]	; 14bec <set_opt@@Base+0x45c>
   149d8:	ldr	r0, [pc, #596]	; 14c34 <set_opt@@Base+0x4a4>
   149dc:	ldr	r1, [r3]
   149e0:	b	14958 <set_opt@@Base+0x1c8>
   149e4:	mov	r2, r9
   149e8:	mov	r1, r5
   149ec:	ldr	r0, [pc, #580]	; 14c38 <set_opt@@Base+0x4a8>
   149f0:	bl	14758 <match_long_arg@@Base>
   149f4:	cmp	r0, #0
   149f8:	beq	14a18 <set_opt@@Base+0x288>
   149fc:	cmp	r6, #0
   14a00:	strne	r6, [r4, #124]	; 0x7c
   14a04:	bne	1491c <set_opt@@Base+0x18c>
   14a08:	ldr	r3, [pc, #476]	; 14bec <set_opt@@Base+0x45c>
   14a0c:	ldr	r0, [pc, #552]	; 14c3c <set_opt@@Base+0x4ac>
   14a10:	ldr	r1, [r3]
   14a14:	b	14958 <set_opt@@Base+0x1c8>
   14a18:	mov	r2, r9
   14a1c:	mov	r1, r5
   14a20:	ldr	r0, [pc, #536]	; 14c40 <set_opt@@Base+0x4b0>
   14a24:	bl	14758 <match_long_arg@@Base>
   14a28:	cmp	r0, #0
   14a2c:	beq	14a4c <set_opt@@Base+0x2bc>
   14a30:	cmp	r6, #0
   14a34:	strne	r6, [r4, #196]	; 0xc4
   14a38:	bne	1491c <set_opt@@Base+0x18c>
   14a3c:	ldr	r3, [pc, #424]	; 14bec <set_opt@@Base+0x45c>
   14a40:	ldr	r0, [pc, #508]	; 14c44 <set_opt@@Base+0x4b4>
   14a44:	ldr	r1, [r3]
   14a48:	b	14958 <set_opt@@Base+0x1c8>
   14a4c:	mov	r2, r9
   14a50:	mov	r1, r5
   14a54:	ldr	r0, [pc, #492]	; 14c48 <set_opt@@Base+0x4b8>
   14a58:	bl	14758 <match_long_arg@@Base>
   14a5c:	cmp	r0, #0
   14a60:	beq	14a80 <set_opt@@Base+0x2f0>
   14a64:	cmp	r6, #0
   14a68:	strne	r6, [r4, #192]	; 0xc0
   14a6c:	bne	1491c <set_opt@@Base+0x18c>
   14a70:	ldr	r3, [pc, #372]	; 14bec <set_opt@@Base+0x45c>
   14a74:	ldr	r0, [pc, #464]	; 14c4c <set_opt@@Base+0x4bc>
   14a78:	ldr	r1, [r3]
   14a7c:	b	14958 <set_opt@@Base+0x1c8>
   14a80:	cmp	r7, #100	; 0x64
   14a84:	beq	14bb4 <set_opt@@Base+0x424>
   14a88:	bhi	14adc <set_opt@@Base+0x34c>
   14a8c:	cmp	r7, #73	; 0x49
   14a90:	beq	14b28 <set_opt@@Base+0x398>
   14a94:	bhi	14ac0 <set_opt@@Base+0x330>
   14a98:	cmp	r7, #45	; 0x2d
   14a9c:	moveq	r2, r5
   14aa0:	ldreq	r1, [pc, #424]	; 14c50 <set_opt@@Base+0x4c0>
   14aa4:	beq	14ab0 <set_opt@@Base+0x320>
   14aa8:	ldr	r1, [pc, #420]	; 14c54 <set_opt@@Base+0x4c4>
   14aac:	mov	r2, r7
   14ab0:	ldr	r3, [pc, #308]	; 14bec <set_opt@@Base+0x45c>
   14ab4:	ldr	r0, [r3]
   14ab8:	bl	140e4 <fprintf@plt>
   14abc:	b	1495c <set_opt@@Base+0x1cc>
   14ac0:	cmp	r7, #97	; 0x61
   14ac4:	mov	r3, #1
   14ac8:	beq	14bc0 <set_opt@@Base+0x430>
   14acc:	cmp	r7, #99	; 0x63
   14ad0:	bne	14aa8 <set_opt@@Base+0x318>
   14ad4:	str	r3, [r4, #144]	; 0x90
   14ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14adc:	cmp	r7, #114	; 0x72
   14ae0:	beq	14ba8 <set_opt@@Base+0x418>
   14ae4:	bhi	14b0c <set_opt@@Base+0x37c>
   14ae8:	cmp	r7, #111	; 0x6f
   14aec:	bne	14aa8 <set_opt@@Base+0x318>
   14af0:	ldr	r3, [r4, #216]	; 0xd8
   14af4:	cmp	r3, #0
   14af8:	beq	14b6c <set_opt@@Base+0x3dc>
   14afc:	ldr	r3, [pc, #232]	; 14bec <set_opt@@Base+0x45c>
   14b00:	ldr	r0, [pc, #336]	; 14c58 <set_opt@@Base+0x4c8>
   14b04:	ldr	r1, [r3]
   14b08:	b	14958 <set_opt@@Base+0x1c8>
   14b0c:	cmp	r7, #118	; 0x76
   14b10:	mov	r3, #1
   14b14:	beq	14ba0 <set_opt@@Base+0x410>
   14b18:	cmp	r7, #119	; 0x77
   14b1c:	bne	14aa8 <set_opt@@Base+0x318>
   14b20:	str	r3, [r4, #156]	; 0x9c
   14b24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b28:	ldrb	r3, [r5, #1]
   14b2c:	cmp	r3, #0
   14b30:	addne	r6, r5, #1
   14b34:	movne	r0, #1
   14b38:	bne	14b54 <set_opt@@Base+0x3c4>
   14b3c:	cmp	r6, #0
   14b40:	movne	r0, #2
   14b44:	ldreq	r3, [pc, #160]	; 14bec <set_opt@@Base+0x45c>
   14b48:	ldreq	r0, [pc, #268]	; 14c5c <set_opt@@Base+0x4cc>
   14b4c:	ldreq	r1, [r3]
   14b50:	beq	14958 <set_opt@@Base+0x1c8>
   14b54:	ldr	r3, [r4, #208]	; 0xd0
   14b58:	ldr	r2, [r4, #200]	; 0xc8
   14b5c:	add	r1, r3, #1
   14b60:	str	r1, [r4, #208]	; 0xd0
   14b64:	str	r6, [r2, r3, lsl #2]
   14b68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b6c:	ldrb	r3, [r5, #1]
   14b70:	cmp	r3, #0
   14b74:	addne	r6, r5, #1
   14b78:	movne	r0, #1
   14b7c:	bne	14b98 <set_opt@@Base+0x408>
   14b80:	cmp	r6, #0
   14b84:	movne	r0, #2
   14b88:	ldreq	r3, [pc, #92]	; 14bec <set_opt@@Base+0x45c>
   14b8c:	ldreq	r0, [pc, #204]	; 14c60 <set_opt@@Base+0x4d0>
   14b90:	ldreq	r1, [r3]
   14b94:	beq	14958 <set_opt@@Base+0x1c8>
   14b98:	str	r6, [r4, #216]	; 0xd8
   14b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ba0:	str	r3, [r4, #160]	; 0xa0
   14ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ba8:	mov	r3, #1
   14bac:	str	r3, [r4, #172]	; 0xac
   14bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bb4:	mov	r3, #1
   14bb8:	str	r3, [r4, #112]	; 0x70
   14bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bc0:	str	r3, [r4, #152]	; 0x98
   14bc4:	str	r3, [r4, #156]	; 0x9c
   14bc8:	str	r3, [r4, #160]	; 0xa0
   14bcc:	str	r3, [r4, #144]	; 0x90
   14bd0:	str	r3, [r4, #148]	; 0x94
   14bd4:	b	14bac <set_opt@@Base+0x41c>
   14bd8:	mov	r0, #0
   14bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14be0:	strdeq	r1, [r3], -r8
   14be4:	strheq	ip, [r5], -r4
   14be8:	strdeq	r1, [r3], -lr
   14bec:	strheq	ip, [r5], -r0
   14bf0:	andeq	pc, r2, ip, ror pc	; <UNPREDICTABLE>
   14bf4:	strdeq	r8, [r4], -r6
   14bf8:			; <UNDEFINED> instruction: 0x0002ffb2
   14bfc:			; <UNDEFINED> instruction: 0x0002ffb8
   14c00:			; <UNDEFINED> instruction: 0x000315b4
   14c04:	andeq	r1, r3, r7, lsl #4
   14c08:	andeq	r1, r3, pc, lsl #4
   14c0c:	andeq	r1, r3, ip, lsl r2
   14c10:	andeq	r1, r3, sl, lsr #4
   14c14:	andeq	r1, r3, r0, lsr r2
   14c18:	andeq	r1, r3, r2, asr #4
   14c1c:			; <UNDEFINED> instruction: 0x000312b3
   14c20:	andeq	r1, r3, r0, ror #5
   14c24:	andeq	r1, r3, pc, ror #5
   14c28:	andeq	r1, r3, ip, lsl #11
   14c2c:	andeq	r1, r3, r9, lsl r3
   14c30:	andeq	r1, r3, sp, lsr r3
   14c34:	andeq	r1, r3, r8, asr #6
   14c38:	andeq	r1, r3, lr, ror #6
   14c3c:	andeq	r1, r3, r7, ror r3
   14c40:	muleq	r3, fp, r3
   14c44:	andeq	r1, r3, sl, lsr #7
   14c48:	andeq	r1, r3, r2, lsr #7
   14c4c:	ldrdeq	r1, [r3], -r4
   14c50:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   14c54:	andeq	r1, r3, r6, ror #8
   14c58:	andeq	r1, r3, r3, lsr #8
   14c5c:	andeq	r1, r3, r6, lsl #8
   14c60:	andeq	r1, r3, r9, asr #8

00014c64 <get_opt@@Base>:
   14c64:	push	{r4, r5, r6, lr}
   14c68:	ldrb	r3, [r1, #1]!
   14c6c:	cmp	r3, #45	; 0x2d
   14c70:	bne	14c88 <get_opt@@Base+0x24>
   14c74:	bl	14790 <set_opt@@Base>
   14c78:	sub	r0, r0, #2
   14c7c:	clz	r0, r0
   14c80:	lsr	r0, r0, #5
   14c84:	pop	{r4, r5, r6, pc}
   14c88:	cmp	r3, #0
   14c8c:	mov	r5, r0
   14c90:	mov	r6, r2
   14c94:	mov	r4, r1
   14c98:	bne	14cdc <get_opt@@Base+0x78>
   14c9c:	ldr	r3, [pc, #88]	; 14cfc <get_opt@@Base+0x98>
   14ca0:	ldr	r0, [pc, #88]	; 14d00 <get_opt@@Base+0x9c>
   14ca4:	ldr	r1, [r3]
   14ca8:	bl	14180 <fputs@plt>
   14cac:	mvn	r0, #0
   14cb0:	bl	140c0 <exit@plt>
   14cb4:	mov	r2, r6
   14cb8:	mov	r1, r4
   14cbc:	mov	r0, r5
   14cc0:	bl	14790 <set_opt@@Base>
   14cc4:	cmp	r0, #1
   14cc8:	beq	14cf4 <get_opt@@Base+0x90>
   14ccc:	cmp	r0, #2
   14cd0:	beq	14cec <get_opt@@Base+0x88>
   14cd4:	cmp	r0, #0
   14cd8:	addeq	r4, r4, #1
   14cdc:	ldrb	r0, [r4]
   14ce0:	cmp	r0, #0
   14ce4:	bne	14cb4 <get_opt@@Base+0x50>
   14ce8:	pop	{r4, r5, r6, pc}
   14cec:	mov	r0, #1
   14cf0:	pop	{r4, r5, r6, pc}
   14cf4:	mov	r0, #0
   14cf8:	pop	{r4, r5, r6, pc}
   14cfc:	strheq	ip, [r5], -r0
   14d00:	andeq	r1, r3, fp, ror r4

00014d04 <parse_opts@@Base>:
   14d04:	push	{r4, r5, r6, r7, r8, lr}
   14d08:	mov	r6, r0
   14d0c:	mov	r7, r1
   14d10:	mov	r5, r2
   14d14:	mov	r4, #1
   14d18:	mov	r8, #0
   14d1c:	cmp	r4, r6
   14d20:	blt	14d28 <parse_opts@@Base+0x24>
   14d24:	pop	{r4, r5, r6, r7, r8, pc}
   14d28:	ldr	r1, [r7, r4, lsl #2]
   14d2c:	lsl	r3, r4, #2
   14d30:	ldrb	r2, [r1]
   14d34:	cmp	r2, #45	; 0x2d
   14d38:	bne	14d64 <parse_opts@@Base+0x60>
   14d3c:	add	r2, r4, #1
   14d40:	cmp	r6, r2
   14d44:	addgt	r3, r7, r3
   14d48:	movle	r2, r8
   14d4c:	ldrgt	r2, [r3, #4]
   14d50:	mov	r0, r5
   14d54:	bl	14c64 <get_opt@@Base>
   14d58:	add	r4, r4, r0
   14d5c:	add	r4, r4, #1
   14d60:	b	14d1c <parse_opts@@Base+0x18>
   14d64:	ldr	r3, [r5, #212]	; 0xd4
   14d68:	ldr	r2, [r5, #204]	; 0xcc
   14d6c:	add	r0, r3, #1
   14d70:	str	r0, [r5, #212]	; 0xd4
   14d74:	str	r1, [r2, r3, lsl #2]
   14d78:	b	14d5c <parse_opts@@Base+0x58>
   14d7c:	mov	r2, #1
   14d80:	add	r0, r0, #172	; 0xac
   14d84:	b	233e8 <ptr_set_insert_item@@Base>
   14d88:	cmp	r0, #0
   14d8c:	bne	14dac <parse_opts@@Base+0xa8>
   14d90:	ldr	r3, [pc, #24]	; 14db0 <parse_opts@@Base+0xac>
   14d94:	push	{r4, lr}
   14d98:	ldr	r1, [r3]
   14d9c:	ldr	r0, [pc, #16]	; 14db4 <parse_opts@@Base+0xb0>
   14da0:	bl	14180 <fputs@plt>
   14da4:	mov	r0, #1
   14da8:	bl	140c0 <exit@plt>
   14dac:	bx	lr
   14db0:	strheq	ip, [r5], -r0
   14db4:	andeq	r1, r3, r5, ror #11

00014db8 <flatcc_init_options@@Base>:
   14db8:	push	{r4, lr}
   14dbc:	mov	r2, #224	; 0xe0
   14dc0:	mov	r4, r0
   14dc4:	mov	r1, #0
   14dc8:	bl	140fc <memset@plt>
   14dcc:	mov	r1, #2
   14dd0:	ldr	r0, [pc, #136]	; 14e60 <flatcc_init_options@@Base+0xa8>
   14dd4:	str	r1, [r4, #68]	; 0x44
   14dd8:	mov	r1, #0
   14ddc:	mov	r3, #65536	; 0x10000
   14de0:	strd	r0, [r4, #88]	; 0x58
   14de4:	ldr	r1, [pc, #120]	; 14e64 <flatcc_init_options@@Base+0xac>
   14de8:	str	r3, [r4]
   14dec:	str	r1, [r4, #96]	; 0x60
   14df0:	ldr	r1, [pc, #112]	; 14e68 <flatcc_init_options@@Base+0xb0>
   14df4:	mov	r3, #100	; 0x64
   14df8:	str	r1, [r4, #100]	; 0x64
   14dfc:	ldr	r1, [pc, #104]	; 14e6c <flatcc_init_options@@Base+0xb4>
   14e00:	mov	r2, #4
   14e04:	str	r3, [r4, #4]
   14e08:	str	r3, [r4, #8]
   14e0c:	mov	r3, #1
   14e10:	str	r3, [r4, #16]
   14e14:	str	r3, [r4, #20]
   14e18:	str	r3, [r4, #24]
   14e1c:	str	r3, [r4, #28]
   14e20:	str	r3, [r4, #32]
   14e24:	str	r3, [r4, #36]	; 0x24
   14e28:	str	r3, [r4, #40]	; 0x28
   14e2c:	str	r3, [r4, #44]	; 0x2c
   14e30:	str	r3, [r4, #48]	; 0x30
   14e34:	str	r3, [r4, #52]	; 0x34
   14e38:	str	r2, [r4, #64]	; 0x40
   14e3c:	str	r3, [r4, #72]	; 0x48
   14e40:	str	r3, [r4, #76]	; 0x4c
   14e44:	str	r3, [r4, #84]	; 0x54
   14e48:	str	r1, [r4, #104]	; 0x68
   14e4c:	str	r3, [r4, #136]	; 0x88
   14e50:	str	r3, [r4, #140]	; 0x8c
   14e54:	str	r2, [r4, #176]	; 0xb0
   14e58:	str	r3, [r4, #184]	; 0xb8
   14e5c:	pop	{r4, pc}
   14e60:	strdeq	pc, [r0], -lr
   14e64:	andeq	r1, r3, r8, lsl #12
   14e68:	andeq	r1, r3, sp, lsl #12
   14e6c:	andeq	r1, r3, r3, lsl r6

00014e70 <flatcc_create_context@@Base>:
   14e70:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14e74:	mov	r6, r0
   14e78:	mov	r0, #560	; 0x230
   14e7c:	mov	r7, r1
   14e80:	mov	r8, r2
   14e84:	mov	r9, r3
   14e88:	bl	14090 <malloc@plt>
   14e8c:	subs	r4, r0, #0
   14e90:	moveq	r0, r4
   14e94:	beq	14ec8 <flatcc_create_context@@Base+0x58>
   14e98:	mov	r5, #0
   14e9c:	str	r5, [sp, #4]
   14ea0:	str	r9, [sp]
   14ea4:	mov	r3, r8
   14ea8:	mov	r2, r7
   14eac:	mov	r1, r6
   14eb0:	bl	25d88 <__flatcc_fb_init_parser@@Base>
   14eb4:	cmp	r0, r5
   14eb8:	mov	r0, r4
   14ebc:	beq	14ec8 <flatcc_create_context@@Base+0x58>
   14ec0:	bl	14018 <free@plt>
   14ec4:	mov	r0, r5
   14ec8:	add	sp, sp, #12
   14ecc:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014ed0 <flatcc_parse_buffer@@Base>:
   14ed0:	ldr	r3, [r0, #128]	; 0x80
   14ed4:	push	{r4, r5, r6, r7, r8, lr}
   14ed8:	mov	r6, r2
   14edc:	cmp	r3, #0
   14ee0:	cmpne	r3, r6
   14ee4:	mov	r2, #1
   14ee8:	str	r2, [r0, #140]	; 0x8c
   14eec:	movcc	r5, #1
   14ef0:	movcs	r5, #0
   14ef4:	bcs	14f08 <flatcc_parse_buffer@@Base+0x38>
   14ef8:	ldr	r1, [pc, #76]	; 14f4c <flatcc_parse_buffer@@Base+0x7c>
   14efc:	bl	24df8 <__flatcc_fb_print_error@@Base>
   14f00:	mvn	r0, #0
   14f04:	pop	{r4, r5, r6, r7, r8, pc}
   14f08:	mov	r4, r0
   14f0c:	mov	r7, r1
   14f10:	add	r1, r0, #352	; 0x160
   14f14:	add	r0, r0, #524	; 0x20c
   14f18:	bl	233e8 <ptr_set_insert_item@@Base>
   14f1c:	mov	r3, r5
   14f20:	mov	r2, r6
   14f24:	mov	r1, r7
   14f28:	mov	r0, r4
   14f2c:	bl	25f80 <__flatcc_fb_parse@@Base>
   14f30:	cmp	r0, #0
   14f34:	bne	14f00 <flatcc_parse_buffer@@Base+0x30>
   14f38:	mov	r0, r4
   14f3c:	bl	28e14 <__flatcc_fb_build_schema@@Base>
   14f40:	adds	r0, r0, #0
   14f44:	mvnne	r0, #0
   14f48:	pop	{r4, r5, r6, r7, r8, pc}
   14f4c:	andeq	r1, r3, r8, lsl r6

00014f50 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14f50:	push	{r0, r1, r2, lr}
   14f54:	add	r3, sp, #8
   14f58:	str	r2, [r3, #-4]!
   14f5c:	mov	r2, r1
   14f60:	add	r1, r0, #352	; 0x160
   14f64:	add	r0, r0, #128	; 0x80
   14f68:	bl	227dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14f6c:	cmp	r0, #0
   14f70:	mvneq	r0, #0
   14f74:	ldrne	r0, [sp, #4]
   14f78:	add	sp, sp, #12
   14f7c:	pop	{pc}		; (ldr pc, [sp], #4)

00014f80 <flatcc_generate_binary_schema@@Base>:
   14f80:	mov	r2, r1
   14f84:	add	r1, r0, #352	; 0x160
   14f88:	add	r0, r0, #128	; 0x80
   14f8c:	b	2284c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014f90 <flatcc_generate_files@@Base>:
   14f90:	push	{r4, r5, r6, r7, lr}
   14f94:	subs	r4, r0, #0
   14f98:	sub	sp, sp, #236	; 0xec
   14f9c:	bne	14fb0 <flatcc_generate_files@@Base+0x20>
   14fa0:	mvn	r5, #0
   14fa4:	mov	r0, r5
   14fa8:	add	sp, sp, #236	; 0xec
   14fac:	pop	{r4, r5, r6, r7, pc}
   14fb0:	ldr	r3, [r4, #108]	; 0x6c
   14fb4:	cmp	r3, #0
   14fb8:	moveq	r6, r4
   14fbc:	bne	14fa0 <flatcc_generate_files@@Base+0x10>
   14fc0:	ldr	r2, [r6]
   14fc4:	str	r3, [r6, #4]
   14fc8:	cmp	r2, #0
   14fcc:	mov	r3, r6
   14fd0:	bne	15038 <flatcc_generate_files@@Base+0xa8>
   14fd4:	ldr	r3, [r4, #308]	; 0x134
   14fd8:	add	r5, r4, #128	; 0x80
   14fdc:	cmp	r3, #0
   14fe0:	bne	15040 <flatcc_generate_files@@Base+0xb0>
   14fe4:	mov	r1, r5
   14fe8:	mov	r0, sp
   14fec:	bl	157c0 <__flatcc_fb_init_output_c@@Base>
   14ff0:	subs	r7, r0, #0
   14ff4:	bne	14fa0 <flatcc_generate_files@@Base+0x10>
   14ff8:	ldr	r3, [r4, #256]	; 0x100
   14ffc:	cmp	r3, #0
   15000:	beq	15058 <flatcc_generate_files@@Base+0xc8>
   15004:	ldr	r5, [r4, #120]	; 0x78
   15008:	cmp	r5, #0
   1500c:	beq	15068 <flatcc_generate_files@@Base+0xd8>
   15010:	ldr	r3, [r4, #300]	; 0x12c
   15014:	cmp	r3, #0
   15018:	movne	r5, r7
   1501c:	movne	r4, #1
   15020:	bne	1509c <flatcc_generate_files@@Base+0x10c>
   15024:	add	r1, r4, #352	; 0x160
   15028:	mov	r0, sp
   1502c:	bl	15c80 <__flatcc_fb_codegen_c@@Base>
   15030:	mov	r5, r0
   15034:	b	15068 <flatcc_generate_files@@Base+0xd8>
   15038:	mov	r6, r2
   1503c:	b	14fc0 <flatcc_generate_files@@Base+0x30>
   15040:	add	r1, r4, #352	; 0x160
   15044:	mov	r0, r5
   15048:	bl	228b0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   1504c:	cmp	r0, #0
   15050:	beq	14fe4 <flatcc_generate_files@@Base+0x54>
   15054:	b	14fa0 <flatcc_generate_files@@Base+0x10>
   15058:	mov	r0, sp
   1505c:	bl	15bd0 <__flatcc_fb_codegen_common_c@@Base>
   15060:	subs	r5, r0, #0
   15064:	beq	15004 <flatcc_generate_files@@Base+0x74>
   15068:	mov	r0, sp
   1506c:	bl	1578c <__flatcc_fb_end_output_c@@Base>
   15070:	b	14fa4 <flatcc_generate_files@@Base+0x14>
   15074:	ldr	r3, [r6, #108]	; 0x6c
   15078:	cmp	r3, #0
   1507c:	movne	r5, r4
   15080:	bne	15098 <flatcc_generate_files@@Base+0x108>
   15084:	add	r1, r6, #352	; 0x160
   15088:	mov	r0, sp
   1508c:	bl	15c80 <__flatcc_fb_codegen_c@@Base>
   15090:	adds	r5, r0, #0
   15094:	movne	r5, #1
   15098:	ldr	r6, [r6, #4]
   1509c:	eor	r3, r5, #1
   150a0:	cmp	r6, #0
   150a4:	moveq	r3, #0
   150a8:	andne	r3, r3, #1
   150ac:	cmp	r3, #0
   150b0:	bne	15074 <flatcc_generate_files@@Base+0xe4>
   150b4:	b	15068 <flatcc_generate_files@@Base+0xd8>

000150b8 <flatcc_destroy_context@@Base>:
   150b8:	push	{r4, r5, r6, lr}
   150bc:	mov	r4, r0
   150c0:	cmp	r4, #0
   150c4:	bne	150cc <flatcc_destroy_context@@Base+0x14>
   150c8:	pop	{r4, r5, r6, pc}
   150cc:	mov	r0, r4
   150d0:	ldr	r5, [r4]
   150d4:	bl	27ee0 <__flatcc_fb_clear_parser@@Base>
   150d8:	mov	r0, r4
   150dc:	bl	14018 <free@plt>
   150e0:	mov	r4, r5
   150e4:	b	150c0 <flatcc_destroy_context@@Base+0x8>

000150e8 <flatcc_parse_file@@Base>:
   150e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150ec:	mov	r4, r0
   150f0:	sub	sp, sp, #28
   150f4:	mov	r0, r1
   150f8:	mov	r5, r1
   150fc:	bl	140cc <strlen@plt>
   15100:	add	r7, r4, #352	; 0x160
   15104:	mov	r2, #1
   15108:	mov	r1, r7
   1510c:	mov	r8, r0
   15110:	ldr	r0, [r4, #412]	; 0x19c
   15114:	add	r0, r0, #32
   15118:	bl	24514 <fb_schema_table_insert_item@@Base>
   1511c:	cmp	r0, #0
   15120:	beq	1512c <flatcc_parse_file@@Base+0x44>
   15124:	mov	r8, #0
   15128:	b	15560 <flatcc_parse_file@@Base+0x478>
   1512c:	ldr	r3, [r4, #552]	; 0x228
   15130:	cmp	r3, #0
   15134:	str	r3, [sp, #8]
   15138:	beq	1515c <flatcc_parse_file@@Base+0x74>
   1513c:	mov	r6, #0
   15140:	ldr	fp, [pc, #1280]	; 15648 <flatcc_parse_file@@Base+0x560>
   15144:	mov	r9, r6
   15148:	ldr	r3, [r4, #336]	; 0x150
   1514c:	cmp	r3, r6
   15150:	bgt	15278 <flatcc_parse_file@@Base+0x190>
   15154:	mov	sl, #0
   15158:	b	151b8 <flatcc_parse_file@@Base+0xd0>
   1515c:	add	r2, sp, #20
   15160:	ldr	r1, [r4, #128]	; 0x80
   15164:	mov	r0, r5
   15168:	bl	249b0 <__flatcc_fb_read_file@@Base>
   1516c:	subs	sl, r0, #0
   15170:	bne	151a8 <flatcc_parse_file@@Base+0xc0>
   15174:	ldr	r3, [r4, #412]	; 0x19c
   15178:	ldr	r1, [sp, #20]
   1517c:	ldr	r2, [r4, #128]	; 0x80
   15180:	ldr	r3, [r3, #56]	; 0x38
   15184:	add	r3, r3, r1
   15188:	cmp	r2, #0
   1518c:	cmpne	r3, r2
   15190:	bls	1513c <flatcc_parse_file@@Base+0x54>
   15194:	ldr	r1, [pc, #1200]	; 1564c <flatcc_parse_file@@Base+0x564>
   15198:	mov	r0, r4
   1519c:	bl	24df8 <__flatcc_fb_print_error@@Base>
   151a0:	mvn	r8, #0
   151a4:	b	15560 <flatcc_parse_file@@Base+0x478>
   151a8:	mov	r0, r5
   151ac:	bl	245a4 <__flatcc_fb_copy_path@@Base>
   151b0:	mov	r9, r0
   151b4:	bl	14d88 <parse_opts@@Base+0x84>
   151b8:	ldr	r2, [sp, #8]
   151bc:	clz	r3, sl
   151c0:	cmp	r2, #0
   151c4:	lsr	r3, r3, #5
   151c8:	moveq	r3, #0
   151cc:	cmp	r3, #0
   151d0:	beq	152f8 <flatcc_parse_file@@Base+0x210>
   151d4:	ldr	r6, [r4, #552]	; 0x228
   151d8:	mov	r0, r6
   151dc:	bl	140cc <strlen@plt>
   151e0:	mov	r1, r0
   151e4:	mov	r0, r6
   151e8:	bl	24928 <__flatcc_fb_find_basename@@Base>
   151ec:	mov	r3, #1
   151f0:	str	r3, [sp, #4]
   151f4:	ldr	r3, [pc, #1100]	; 15648 <flatcc_parse_file@@Base+0x560>
   151f8:	mov	r2, r5
   151fc:	str	r3, [sp]
   15200:	mov	r3, r8
   15204:	mov	r1, r0
   15208:	mov	r0, r6
   1520c:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   15210:	mov	r6, r0
   15214:	bl	14d88 <parse_opts@@Base+0x84>
   15218:	add	r2, sp, #20
   1521c:	ldr	r1, [r4, #128]	; 0x80
   15220:	mov	r0, r6
   15224:	bl	249b0 <__flatcc_fb_read_file@@Base>
   15228:	subs	r9, r0, #0
   1522c:	movne	sl, r9
   15230:	movne	r9, r6
   15234:	bne	15300 <flatcc_parse_file@@Base+0x218>
   15238:	mov	r0, r6
   1523c:	bl	14018 <free@plt>
   15240:	ldr	r3, [r4, #128]	; 0x80
   15244:	ldr	r2, [sp, #20]
   15248:	cmp	r3, #0
   1524c:	cmpne	r3, r2
   15250:	bcc	15194 <flatcc_parse_file@@Base+0xac>
   15254:	mov	r2, r5
   15258:	ldr	r1, [pc, #1008]	; 15650 <flatcc_parse_file@@Base+0x568>
   1525c:	mov	r0, r4
   15260:	bl	24df8 <__flatcc_fb_print_error@@Base>
   15264:	cmp	r9, #0
   15268:	beq	151a0 <flatcc_parse_file@@Base+0xb8>
   1526c:	mov	r0, r9
   15270:	bl	14018 <free@plt>
   15274:	b	151a0 <flatcc_parse_file@@Base+0xb8>
   15278:	ldr	r3, [r4, #328]	; 0x148
   1527c:	ldr	r9, [r3, r6, lsl #2]
   15280:	mov	r0, r9
   15284:	bl	140cc <strlen@plt>
   15288:	mov	r3, #1
   1528c:	mov	r2, r5
   15290:	str	r3, [sp, #4]
   15294:	str	fp, [sp]
   15298:	mov	r3, r8
   1529c:	mov	r1, r0
   152a0:	mov	r0, r9
   152a4:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   152a8:	mov	r9, r0
   152ac:	bl	14d88 <parse_opts@@Base+0x84>
   152b0:	add	r2, sp, #20
   152b4:	ldr	r1, [r4, #128]	; 0x80
   152b8:	mov	r0, r9
   152bc:	bl	249b0 <__flatcc_fb_read_file@@Base>
   152c0:	subs	sl, r0, #0
   152c4:	bne	152e8 <flatcc_parse_file@@Base+0x200>
   152c8:	mov	r0, r9
   152cc:	bl	14018 <free@plt>
   152d0:	ldr	r3, [r4, #128]	; 0x80
   152d4:	ldr	r2, [sp, #20]
   152d8:	cmp	r3, #0
   152dc:	cmpne	r3, r2
   152e0:	bcc	15194 <flatcc_parse_file@@Base+0xac>
   152e4:	mov	r9, sl
   152e8:	cmp	sl, #0
   152ec:	add	r6, r6, #1
   152f0:	beq	15148 <flatcc_parse_file@@Base+0x60>
   152f4:	b	151b8 <flatcc_parse_file@@Base+0xd0>
   152f8:	cmp	sl, #0
   152fc:	beq	15254 <flatcc_parse_file@@Base+0x16c>
   15300:	ldr	r0, [r4, #412]	; 0x19c
   15304:	ldr	r2, [sp, #20]
   15308:	mov	r1, sl
   1530c:	ldr	r3, [r0, #56]	; 0x38
   15310:	add	r3, r3, r2
   15314:	str	r3, [r0, #56]	; 0x38
   15318:	str	r9, [r4, #548]	; 0x224
   1531c:	mov	r3, #1
   15320:	mov	r0, r4
   15324:	bl	25f80 <__flatcc_fb_parse@@Base>
   15328:	subs	r8, r0, #0
   1532c:	bne	15124 <flatcc_parse_file@@Base+0x3c>
   15330:	ldr	r9, [r4, #352]	; 0x160
   15334:	ldr	fp, [pc, #792]	; 15654 <flatcc_parse_file@@Base+0x56c>
   15338:	add	r3, r4, #128	; 0x80
   1533c:	str	r3, [sp, #12]
   15340:	cmp	r9, #0
   15344:	bne	153a8 <flatcc_parse_file@@Base+0x2c0>
   15348:	mov	r2, #1
   1534c:	mov	r1, r7
   15350:	add	r0, r4, #524	; 0x20c
   15354:	bl	233e8 <ptr_set_insert_item@@Base>
   15358:	mov	r0, r4
   1535c:	bl	28e14 <__flatcc_fb_build_schema@@Base>
   15360:	subs	r8, r0, #0
   15364:	bne	15124 <flatcc_parse_file@@Base+0x3c>
   15368:	ldr	r3, [r4, #240]	; 0xf0
   1536c:	ldr	r2, [sp, #8]
   15370:	adds	r3, r3, #0
   15374:	movne	r3, #1
   15378:	cmp	r2, #0
   1537c:	movne	r3, #0
   15380:	cmp	r3, #0
   15384:	beq	15124 <flatcc_parse_file@@Base+0x3c>
   15388:	ldr	r3, [r4, #552]	; 0x228
   1538c:	cmp	r3, #0
   15390:	beq	15474 <flatcc_parse_file@@Base+0x38c>
   15394:	ldr	r3, [pc, #700]	; 15658 <flatcc_parse_file@@Base+0x570>
   15398:	mov	r2, #220	; 0xdc
   1539c:	ldr	r1, [pc, #696]	; 1565c <flatcc_parse_file@@Base+0x574>
   153a0:	ldr	r0, [pc, #696]	; 15660 <flatcc_parse_file@@Base+0x578>
   153a4:	bl	141a4 <__assert_fail@plt>
   153a8:	ldr	r1, [r9, #12]
   153ac:	ldr	r0, [r9, #8]
   153b0:	bl	24558 <__flatcc_fb_copy_path_n@@Base>
   153b4:	mov	sl, r0
   153b8:	bl	14d88 <parse_opts@@Base+0x84>
   153bc:	ldr	r5, [r4, #412]	; 0x19c
   153c0:	ldr	r3, [r4, #132]	; 0x84
   153c4:	ldr	r2, [r5, #52]	; 0x34
   153c8:	cmp	r2, r3
   153cc:	cmpge	r3, #0
   153d0:	ble	153f4 <flatcc_parse_file@@Base+0x30c>
   153d4:	ldr	r1, [pc, #648]	; 15664 <flatcc_parse_file@@Base+0x57c>
   153d8:	mov	r0, r4
   153dc:	bl	24df8 <__flatcc_fb_print_error@@Base>
   153e0:	cmp	sl, #0
   153e4:	beq	15124 <flatcc_parse_file@@Base+0x3c>
   153e8:	mov	r0, sl
   153ec:	bl	14018 <free@plt>
   153f0:	b	15560 <flatcc_parse_file@@Base+0x478>
   153f4:	ldr	r3, [r4, #136]	; 0x88
   153f8:	ldr	r2, [r5, #48]	; 0x30
   153fc:	cmp	r2, r3
   15400:	cmpge	r3, #0
   15404:	ldrgt	r1, [pc, #604]	; 15668 <flatcc_parse_file@@Base+0x580>
   15408:	bgt	153d8 <flatcc_parse_file@@Base+0x2f0>
   1540c:	mov	r0, #560	; 0x230
   15410:	bl	14090 <malloc@plt>
   15414:	subs	r6, r0, #0
   15418:	beq	153e0 <flatcc_parse_file@@Base+0x2f8>
   1541c:	str	r5, [sp, #4]
   15420:	ldr	r3, [r4, #12]
   15424:	mov	r2, sl
   15428:	str	r3, [sp]
   1542c:	ldr	r1, [sp, #12]
   15430:	ldr	r3, [r4, #8]
   15434:	bl	25d88 <__flatcc_fb_init_parser@@Base>
   15438:	cmp	r0, #0
   1543c:	beq	155e0 <flatcc_parse_file@@Base+0x4f8>
   15440:	mov	r0, r6
   15444:	bl	14018 <free@plt>
   15448:	b	153e0 <flatcc_parse_file@@Base+0x2f8>
   1544c:	add	r0, r0, #172	; 0xac
   15450:	mov	r2, r7
   15454:	mov	r1, fp
   15458:	bl	23404 <ptr_set_visit@@Base>
   1545c:	mov	r0, r6
   15460:	bl	150b8 <flatcc_destroy_context@@Base>
   15464:	mov	r0, sl
   15468:	bl	14018 <free@plt>
   1546c:	ldr	r9, [r9]
   15470:	b	15340 <flatcc_parse_file@@Base+0x258>
   15474:	ldr	r5, [r4, #344]	; 0x158
   15478:	ldr	r2, [pc, #456]	; 15648 <flatcc_parse_file@@Base+0x560>
   1547c:	ldr	r1, [r4, #244]	; 0xf4
   15480:	cmp	r5, #0
   15484:	moveq	r5, r2
   15488:	ldr	r9, [r4, #512]	; 0x200
   1548c:	cmp	r1, #0
   15490:	ldr	r3, [r4, #248]	; 0xf8
   15494:	movne	r0, r2
   15498:	moveq	r0, r5
   1549c:	moveq	r1, r9
   154a0:	ldreq	r2, [pc, #452]	; 1566c <flatcc_parse_file@@Base+0x584>
   154a4:	cmp	r3, #0
   154a8:	bne	1556c <flatcc_parse_file@@Base+0x484>
   154ac:	ldr	ip, [r4, #308]	; 0x134
   154b0:	ldr	r3, [pc, #440]	; 15670 <flatcc_parse_file@@Base+0x588>
   154b4:	cmp	ip, #0
   154b8:	ldr	r7, [pc, #436]	; 15674 <flatcc_parse_file@@Base+0x58c>
   154bc:	moveq	r7, r3
   154c0:	mov	r3, #1
   154c4:	bl	24748 <__flatcc_fb_create_join_path@@Base>
   154c8:	mov	r6, r0
   154cc:	bl	14d88 <parse_opts@@Base+0x84>
   154d0:	mov	r2, r7
   154d4:	mov	r3, #1
   154d8:	mov	r1, r9
   154dc:	mov	r0, r5
   154e0:	bl	24748 <__flatcc_fb_create_join_path@@Base>
   154e4:	mov	r5, r0
   154e8:	bl	14d88 <parse_opts@@Base+0x84>
   154ec:	mov	r0, r5
   154f0:	bl	2490c <__flatcc_fb_create_make_path@@Base>
   154f4:	mov	r7, r0
   154f8:	bl	14d88 <parse_opts@@Base+0x84>
   154fc:	cmp	r5, #0
   15500:	beq	1550c <flatcc_parse_file@@Base+0x424>
   15504:	mov	r0, r5
   15508:	bl	14018 <free@plt>
   1550c:	ldr	r1, [pc, #356]	; 15678 <flatcc_parse_file@@Base+0x590>
   15510:	mov	r0, r6
   15514:	bl	1400c <fopen@plt>
   15518:	subs	r5, r0, #0
   1551c:	bne	1557c <flatcc_parse_file@@Base+0x494>
   15520:	mov	r2, r6
   15524:	ldr	r1, [pc, #336]	; 1567c <flatcc_parse_file@@Base+0x594>
   15528:	mov	r0, r4
   1552c:	bl	24df8 <__flatcc_fb_print_error@@Base>
   15530:	cmp	r6, #0
   15534:	beq	15540 <flatcc_parse_file@@Base+0x458>
   15538:	mov	r0, r6
   1553c:	bl	14018 <free@plt>
   15540:	cmp	r7, #0
   15544:	beq	15550 <flatcc_parse_file@@Base+0x468>
   15548:	mov	r0, r7
   1554c:	bl	14018 <free@plt>
   15550:	cmp	r5, #0
   15554:	beq	15124 <flatcc_parse_file@@Base+0x3c>
   15558:	mov	r0, r5
   1555c:	bl	1412c <fclose@plt>
   15560:	mov	r0, r8
   15564:	add	sp, sp, #28
   15568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1556c:	ldr	r5, [pc, #212]	; 15648 <flatcc_parse_file@@Base+0x560>
   15570:	mov	r9, r3
   15574:	mov	r7, r5
   15578:	b	154c0 <flatcc_parse_file@@Base+0x3d8>
   1557c:	mov	r2, r7
   15580:	ldr	r1, [pc, #248]	; 15680 <flatcc_parse_file@@Base+0x598>
   15584:	bl	140e4 <fprintf@plt>
   15588:	ldr	sl, [pc, #244]	; 15684 <flatcc_parse_file@@Base+0x59c>
   1558c:	ldr	r4, [r4]
   15590:	cmp	r4, #0
   15594:	bne	155a8 <flatcc_parse_file@@Base+0x4c0>
   15598:	mov	r1, r5
   1559c:	mov	r0, #10
   155a0:	bl	14144 <fputc@plt>
   155a4:	b	15530 <flatcc_parse_file@@Base+0x448>
   155a8:	ldr	r0, [r4, #548]	; 0x224
   155ac:	bl	2490c <__flatcc_fb_create_make_path@@Base>
   155b0:	mov	r9, r0
   155b4:	bl	14d88 <parse_opts@@Base+0x84>
   155b8:	mov	r2, r9
   155bc:	mov	r1, sl
   155c0:	mov	r0, r5
   155c4:	bl	140e4 <fprintf@plt>
   155c8:	cmp	r9, #0
   155cc:	ldr	r4, [r4]
   155d0:	beq	15590 <flatcc_parse_file@@Base+0x4a8>
   155d4:	mov	r0, r9
   155d8:	bl	14018 <free@plt>
   155dc:	b	15590 <flatcc_parse_file@@Base+0x4a8>
   155e0:	add	r1, r6, #352	; 0x160
   155e4:	add	r0, r5, #32
   155e8:	bl	24538 <fb_schema_table_find_item@@Base>
   155ec:	cmp	r0, #0
   155f0:	bne	1544c <flatcc_parse_file@@Base+0x364>
   155f4:	ldr	r3, [r4]
   155f8:	str	r6, [r4]
   155fc:	str	r3, [r6]
   15600:	ldr	r3, [r4, #548]	; 0x224
   15604:	mov	r1, sl
   15608:	str	r3, [r6, #552]	; 0x228
   1560c:	ldr	r3, [r5, #52]	; 0x34
   15610:	mov	r0, r6
   15614:	add	r3, r3, #1
   15618:	str	r3, [r5, #52]	; 0x34
   1561c:	ldr	r3, [r5, #48]	; 0x30
   15620:	add	r3, r3, #1
   15624:	str	r3, [r5, #48]	; 0x30
   15628:	bl	150e8 <flatcc_parse_file@@Base>
   1562c:	cmp	r0, #0
   15630:	bne	153e0 <flatcc_parse_file@@Base+0x2f8>
   15634:	mov	r2, r7
   15638:	mov	r1, fp
   1563c:	add	r0, r6, #524	; 0x20c
   15640:	bl	23404 <ptr_set_visit@@Base>
   15644:	b	15464 <flatcc_parse_file@@Base+0x37c>
   15648:	andeq	r2, r3, sp, lsl pc
   1564c:	andeq	r1, r3, r8, lsl r6
   15650:	andeq	r1, r3, r3, asr #12
   15654:	andeq	r4, r1, ip, ror sp
   15658:	andeq	r1, r3, fp, asr #11
   1565c:	andeq	r1, r3, r9, lsr #13
   15660:	andeq	r1, r3, pc, ror #13
   15664:	andeq	r1, r3, fp, ror #12
   15668:	andeq	r1, r3, fp, lsl #13
   1566c:	andeq	r1, r3, ip, lsr r6
   15670:	andeq	r7, r4, fp, asr #20
   15674:	andeq	r1, r3, sp, lsl #12
   15678:	andeq	r1, r3, r4, lsl #14
   1567c:	andeq	r1, r3, r7, lsl #14
   15680:	andeq	r1, r3, r6, lsr r7
   15684:	andeq	r1, r3, sl, lsr r7
   15688:	mov	r0, r1
   1568c:	b	14018 <free@plt>

00015690 <__flatcc_fb_open_output_file@@Base>:
   15690:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15694:	mov	r9, r3
   15698:	ldr	r3, [r0, #212]	; 0xd4
   1569c:	mov	r6, r0
   156a0:	mov	r7, r1
   156a4:	ldr	r5, [r3, #216]	; 0xd8
   156a8:	ldr	r3, [pc, #140]	; 1573c <__flatcc_fb_open_output_file@@Base+0xac>
   156ac:	cmp	r5, #0
   156b0:	moveq	r5, r3
   156b4:	mov	r0, r5
   156b8:	mov	r8, r2
   156bc:	bl	140cc <strlen@plt>
   156c0:	ldr	r4, [r6, #204]	; 0xcc
   156c4:	cmp	r4, #0
   156c8:	movne	r4, #0
   156cc:	bne	15730 <__flatcc_fb_open_output_file@@Base+0xa0>
   156d0:	mov	r3, #1
   156d4:	str	r3, [sp, #4]
   156d8:	mov	r1, r0
   156dc:	str	r9, [sp]
   156e0:	mov	r0, r5
   156e4:	mov	r3, r8
   156e8:	mov	r2, r7
   156ec:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   156f0:	subs	r5, r0, #0
   156f4:	bne	156fc <__flatcc_fb_open_output_file@@Base+0x6c>
   156f8:	bl	141b0 <__assert_fail@plt+0xc>
   156fc:	ldr	r1, [pc, #60]	; 15740 <__flatcc_fb_open_output_file@@Base+0xb0>
   15700:	bl	1400c <fopen@plt>
   15704:	cmp	r0, #0
   15708:	str	r0, [r6, #204]	; 0xcc
   1570c:	bne	15728 <__flatcc_fb_open_output_file@@Base+0x98>
   15710:	ldr	r3, [pc, #44]	; 15744 <__flatcc_fb_open_output_file@@Base+0xb4>
   15714:	mov	r2, r5
   15718:	ldr	r1, [pc, #40]	; 15748 <__flatcc_fb_open_output_file@@Base+0xb8>
   1571c:	ldr	r0, [r3]
   15720:	bl	140e4 <fprintf@plt>
   15724:	mvn	r4, #0
   15728:	mov	r0, r5
   1572c:	bl	14018 <free@plt>
   15730:	mov	r0, r4
   15734:	add	sp, sp, #12
   15738:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1573c:	andeq	r2, r3, sp, lsl pc
   15740:	andeq	r1, r3, r4, lsl #14
   15744:	strheq	ip, [r5], -r0
   15748:	andeq	r1, r3, lr, lsr r7

0001574c <__flatcc_fb_close_output_file@@Base>:
   1574c:	ldr	r3, [r0, #212]	; 0xd4
   15750:	ldr	r2, [r3, #124]	; 0x7c
   15754:	cmp	r2, #0
   15758:	bxne	lr
   1575c:	push	{r4, r5, r6, lr}
   15760:	ldr	r5, [r3, #108]	; 0x6c
   15764:	cmp	r5, #0
   15768:	popne	{r4, r5, r6, pc}
   1576c:	ldr	r3, [r0, #204]	; 0xcc
   15770:	cmp	r3, #0
   15774:	popeq	{r4, r5, r6, pc}
   15778:	mov	r4, r0
   1577c:	mov	r0, r3
   15780:	bl	1412c <fclose@plt>
   15784:	str	r5, [r4, #204]	; 0xcc
   15788:	pop	{r4, r5, r6, pc}

0001578c <__flatcc_fb_end_output_c@@Base>:
   1578c:	ldr	r3, [pc, #40]	; 157bc <__flatcc_fb_end_output_c@@Base+0x30>
   15790:	push	{r4, lr}
   15794:	mov	r4, r0
   15798:	ldr	r3, [r3]
   1579c:	ldr	r0, [r0, #204]	; 0xcc
   157a0:	cmp	r3, r0
   157a4:	cmpne	r0, #0
   157a8:	beq	157b0 <__flatcc_fb_end_output_c@@Base+0x24>
   157ac:	bl	1412c <fclose@plt>
   157b0:	mov	r3, #0
   157b4:	str	r3, [r4, #204]	; 0xcc
   157b8:	pop	{r4, pc}
   157bc:	strheq	ip, [r5], -r4

000157c0 <__flatcc_fb_init_output_c@@Base>:
   157c0:	ldr	r2, [r1, #128]	; 0x80
   157c4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157c8:	cmp	r2, #0
   157cc:	ldr	r3, [pc, #352]	; 15934 <__flatcc_fb_init_output_c@@Base+0x174>
   157d0:	ldr	r8, [r1, #216]	; 0xd8
   157d4:	mov	r5, r1
   157d8:	ldr	r9, [pc, #344]	; 15938 <__flatcc_fb_init_output_c@@Base+0x178>
   157dc:	moveq	r9, r3
   157e0:	ldr	r3, [pc, #340]	; 1593c <__flatcc_fb_init_output_c@@Base+0x17c>
   157e4:	cmp	r8, #0
   157e8:	mov	r2, #232	; 0xe8
   157ec:	mov	r1, #0
   157f0:	mov	r4, r0
   157f4:	moveq	r8, r3
   157f8:	bl	140fc <memset@plt>
   157fc:	ldr	r7, [r5, #196]	; 0xc4
   15800:	str	r5, [r4, #212]	; 0xd4
   15804:	cmp	r7, #0
   15808:	beq	15840 <__flatcc_fb_init_output_c@@Base+0x80>
   1580c:	mov	r0, r7
   15810:	bl	140cc <strlen@plt>
   15814:	cmp	r0, #100	; 0x64
   15818:	mov	r6, r0
   1581c:	bls	15848 <__flatcc_fb_init_output_c@@Base+0x88>
   15820:	ldr	r3, [pc, #280]	; 15940 <__flatcc_fb_init_output_c@@Base+0x180>
   15824:	mov	r2, #100	; 0x64
   15828:	ldr	r1, [pc, #276]	; 15944 <__flatcc_fb_init_output_c@@Base+0x184>
   1582c:	ldr	r0, [r3]
   15830:	bl	140e4 <fprintf@plt>
   15834:	mvn	r5, #0
   15838:	mov	r0, r5
   1583c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15840:	ldr	r7, [pc, #256]	; 15948 <__flatcc_fb_init_output_c@@Base+0x188>
   15844:	mov	r6, #11
   15848:	mov	r1, r7
   1584c:	mov	r2, #100	; 0x64
   15850:	mov	r0, r4
   15854:	bl	14108 <strncpy@plt>
   15858:	mov	r2, #0
   1585c:	cmp	r6, r2
   15860:	movne	r3, r4
   15864:	sub	fp, r4, #1
   15868:	add	sl, r4, #102	; 0x66
   1586c:	movne	r1, #95	; 0x5f
   15870:	strb	r2, [r4, #100]	; 0x64
   15874:	strbne	r1, [r3, r6]!
   15878:	strbne	r2, [r3, #1]
   1587c:	ldrb	r7, [fp, #1]!
   15880:	cmp	r7, #0
   15884:	bne	158bc <__flatcc_fb_init_output_c@@Base+0xfc>
   15888:	add	r6, r4, r6
   1588c:	strb	r7, [sl]
   15890:	strb	r7, [r6, #102]	; 0x66
   15894:	ldr	r3, [r5, #176]	; 0xb0
   15898:	ldr	r5, [r5, #108]	; 0x6c
   1589c:	str	r3, [r4, #224]	; 0xe0
   158a0:	cmp	r5, #0
   158a4:	beq	158d0 <__flatcc_fb_init_output_c@@Base+0x110>
   158a8:	ldr	r3, [pc, #156]	; 1594c <__flatcc_fb_init_output_c@@Base+0x18c>
   158ac:	mov	r5, r7
   158b0:	ldr	r3, [r3]
   158b4:	str	r3, [r4, #204]	; 0xcc
   158b8:	b	15838 <__flatcc_fb_init_output_c@@Base+0x78>
   158bc:	bl	140a8 <__ctype_toupper_loc@plt>
   158c0:	ldr	r3, [r0]
   158c4:	ldr	r3, [r3, r7, lsl #2]
   158c8:	strb	r3, [sl], #1
   158cc:	b	1587c <__flatcc_fb_init_output_c@@Base+0xbc>
   158d0:	ldr	r3, [r4, #212]	; 0xd4
   158d4:	ldr	r1, [r3, #124]	; 0x7c
   158d8:	cmp	r1, #0
   158dc:	beq	15838 <__flatcc_fb_init_output_c@@Base+0x78>
   158e0:	mov	r3, #1
   158e4:	ldr	r2, [pc, #80]	; 1593c <__flatcc_fb_init_output_c@@Base+0x17c>
   158e8:	mov	r0, r8
   158ec:	bl	24748 <__flatcc_fb_create_join_path@@Base>
   158f0:	subs	r6, r0, #0
   158f4:	bne	158fc <__flatcc_fb_init_output_c@@Base+0x13c>
   158f8:	bl	141b0 <__assert_fail@plt+0xc>
   158fc:	mov	r1, r9
   15900:	bl	1400c <fopen@plt>
   15904:	cmp	r0, #0
   15908:	str	r0, [r4, #204]	; 0xcc
   1590c:	bne	15928 <__flatcc_fb_init_output_c@@Base+0x168>
   15910:	ldr	r3, [pc, #40]	; 15940 <__flatcc_fb_init_output_c@@Base+0x180>
   15914:	mov	r2, r6
   15918:	ldr	r1, [pc, #48]	; 15950 <__flatcc_fb_init_output_c@@Base+0x190>
   1591c:	ldr	r0, [r3]
   15920:	bl	140e4 <fprintf@plt>
   15924:	mvn	r5, #0
   15928:	mov	r0, r6
   1592c:	bl	14018 <free@plt>
   15930:	b	15838 <__flatcc_fb_init_output_c@@Base+0x78>
   15934:	andeq	r1, r3, r4, lsl #14
   15938:	andeq	r1, r3, r0, ror #14
   1593c:	andeq	r2, r3, sp, lsl pc
   15940:	strheq	ip, [r5], -r0
   15944:	andeq	r1, r3, pc, ror #14
   15948:	andeq	r1, r3, r3, ror #14
   1594c:	strheq	ip, [r5], -r4
   15950:	andeq	r1, r3, lr, lsr r7

00015954 <__flatcc_fb_gen_c_includes@@Base>:
   15954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15958:	mov	r9, r2
   1595c:	ldr	r5, [r0, #208]	; 0xd0
   15960:	sub	sp, sp, #36	; 0x24
   15964:	mov	r2, #16
   15968:	mov	r6, r0
   1596c:	mov	r8, r1
   15970:	add	r0, sp, r2
   15974:	mov	r1, #0
   15978:	ldr	r4, [r5]
   1597c:	bl	140fc <memset@plt>
   15980:	ldr	r0, [r5, #164]	; 0xa4
   15984:	bl	245a4 <__flatcc_fb_copy_path@@Base>
   15988:	mov	r2, #1
   1598c:	ldr	fp, [pc, #216]	; 15a6c <__flatcc_fb_gen_c_includes@@Base+0x118>
   15990:	mov	sl, #1
   15994:	mov	r1, r0
   15998:	add	r0, sp, #16
   1599c:	bl	22ee8 <str_set_insert_item@@Base>
   159a0:	cmp	r4, #0
   159a4:	bne	159c0 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   159a8:	mov	r2, r4
   159ac:	ldr	r1, [pc, #188]	; 15a70 <__flatcc_fb_gen_c_includes@@Base+0x11c>
   159b0:	add	r0, sp, #16
   159b4:	bl	22e70 <str_set_destroy@@Base>
   159b8:	add	sp, sp, #36	; 0x24
   159bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159c0:	ldr	r3, [r6, #212]	; 0xd4
   159c4:	ldr	r1, [r4, #12]
   159c8:	ldr	r0, [r4, #8]
   159cc:	ldr	r2, [r3, #96]	; 0x60
   159d0:	bl	24958 <__flatcc_fb_create_basename@@Base>
   159d4:	subs	r7, r0, #0
   159d8:	bne	159e0 <__flatcc_fb_gen_c_includes@@Base+0x8c>
   159dc:	bl	141b0 <__assert_fail@plt+0xc>
   159e0:	ldr	r4, [r4]
   159e4:	bl	245a4 <__flatcc_fb_copy_path@@Base>
   159e8:	subs	r5, r0, #0
   159ec:	beq	159dc <__flatcc_fb_gen_c_includes@@Base+0x88>
   159f0:	mov	r3, r5
   159f4:	ldrb	r2, [r3]
   159f8:	cmp	r2, #0
   159fc:	bne	15a2c <__flatcc_fb_gen_c_includes@@Base+0xd8>
   15a00:	mov	r2, sl
   15a04:	mov	r1, r5
   15a08:	add	r0, sp, #16
   15a0c:	bl	22ee8 <str_set_insert_item@@Base>
   15a10:	cmp	r0, #0
   15a14:	beq	15a50 <__flatcc_fb_gen_c_includes@@Base+0xfc>
   15a18:	mov	r0, r5
   15a1c:	bl	14018 <free@plt>
   15a20:	mov	r0, r7
   15a24:	bl	14018 <free@plt>
   15a28:	b	159a0 <__flatcc_fb_gen_c_includes@@Base+0x4c>
   15a2c:	str	r2, [sp, #12]
   15a30:	str	r3, [sp, #8]
   15a34:	bl	140a8 <__ctype_toupper_loc@plt>
   15a38:	ldr	r2, [sp, #12]
   15a3c:	ldr	r3, [sp, #8]
   15a40:	ldr	r1, [r0]
   15a44:	ldr	r2, [r1, r2, lsl #2]
   15a48:	strb	r2, [r3], #1
   15a4c:	b	159f4 <__flatcc_fb_gen_c_includes@@Base+0xa0>
   15a50:	stm	sp, {r7, r8}
   15a54:	mov	r3, r9
   15a58:	mov	r2, r5
   15a5c:	mov	r1, fp
   15a60:	ldr	r0, [r6, #204]	; 0xcc
   15a64:	bl	140e4 <fprintf@plt>
   15a68:	b	15a20 <__flatcc_fb_gen_c_includes@@Base+0xcc>
   15a6c:	andeq	r1, r3, r6, lsr #15
   15a70:	andeq	r5, r1, r8, lsl #13

00015a74 <__flatcc_fb_copy_scope@@Base>:
   15a74:	push	{r4, r5, r6, r7, r8, lr}
   15a78:	ldr	r4, [r0, #24]
   15a7c:	ldr	r3, [r0]
   15a80:	mov	r2, r4
   15a84:	cmp	r3, #0
   15a88:	bne	15aa0 <__flatcc_fb_copy_scope@@Base+0x2c>
   15a8c:	cmp	r2, #101	; 0x65
   15a90:	bls	15ab8 <__flatcc_fb_copy_scope@@Base+0x44>
   15a94:	strb	r3, [r1]
   15a98:	mvn	r0, #0
   15a9c:	pop	{r4, r5, r6, r7, r8, pc}
   15aa0:	ldr	ip, [r3, #4]
   15aa4:	ldr	r3, [r3]
   15aa8:	ldr	ip, [ip, #4]
   15aac:	add	ip, ip, #1
   15ab0:	add	r2, r2, ip
   15ab4:	b	15a84 <__flatcc_fb_copy_scope@@Base+0x10>
   15ab8:	mov	r5, r1
   15abc:	mov	r6, r0
   15ac0:	ldr	r1, [r0, #20]
   15ac4:	mov	r2, r4
   15ac8:	mov	r0, r5
   15acc:	bl	14024 <memcpy@plt>
   15ad0:	ldr	r6, [r6]
   15ad4:	mov	r8, #95	; 0x5f
   15ad8:	cmp	r6, #0
   15adc:	bne	15aec <__flatcc_fb_copy_scope@@Base+0x78>
   15ae0:	strb	r6, [r5, r4]
   15ae4:	mov	r0, r4
   15ae8:	pop	{r4, r5, r6, r7, r8, pc}
   15aec:	ldr	r3, [r6, #4]
   15af0:	add	r0, r5, r4
   15af4:	ldr	r7, [r3, #4]
   15af8:	ldr	r1, [r3]
   15afc:	mov	r2, r7
   15b00:	add	r7, r4, r7
   15b04:	bl	14024 <memcpy@plt>
   15b08:	add	r4, r7, #1
   15b0c:	strb	r8, [r5, r7]
   15b10:	ldr	r6, [r6]
   15b14:	b	15ad8 <__flatcc_fb_copy_scope@@Base+0x64>

00015b18 <__flatcc_fb_scoped_symbol_name@@Base>:
   15b18:	ldr	r3, [r2, #204]	; 0xcc
   15b1c:	push	{r4, r5, r6, lr}
   15b20:	cmp	r3, r0
   15b24:	mov	r4, r2
   15b28:	ldr	r5, [r1, #4]
   15b2c:	beq	15b5c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15b30:	mov	r1, r2
   15b34:	bl	15a74 <__flatcc_fb_copy_scope@@Base>
   15b38:	cmp	r0, #0
   15b3c:	str	r0, [r4, #208]	; 0xd0
   15b40:	bge	15b5c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15b44:	mov	r3, #0
   15b48:	str	r3, [r4, #208]	; 0xd0
   15b4c:	ldr	r3, [pc, #112]	; 15bc4 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15b50:	ldr	r0, [pc, #112]	; 15bc8 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
   15b54:	ldr	r1, [r3]
   15b58:	bl	14180 <fputs@plt>
   15b5c:	ldr	r2, [r5, #4]
   15b60:	ldr	r3, [r4, #208]	; 0xd0
   15b64:	str	r2, [r4, #212]	; 0xd4
   15b68:	add	r3, r2, r3
   15b6c:	cmp	r3, #203	; 0xcb
   15b70:	str	r3, [r4, #216]	; 0xd8
   15b74:	ble	15ba0 <__flatcc_fb_scoped_symbol_name@@Base+0x88>
   15b78:	ldr	r0, [pc, #68]	; 15bc4 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15b7c:	ldr	r3, [r5]
   15b80:	ldr	r1, [pc, #68]	; 15bcc <__flatcc_fb_scoped_symbol_name@@Base+0xb4>
   15b84:	ldr	r0, [r0]
   15b88:	bl	140e4 <fprintf@plt>
   15b8c:	ldr	r3, [r4, #208]	; 0xd0
   15b90:	rsb	r3, r3, #203	; 0xcb
   15b94:	str	r3, [r4, #212]	; 0xd4
   15b98:	mov	r3, #203	; 0xcb
   15b9c:	str	r3, [r4, #216]	; 0xd8
   15ba0:	ldr	r0, [r4, #208]	; 0xd0
   15ba4:	ldr	r2, [r4, #212]	; 0xd4
   15ba8:	ldr	r1, [r5]
   15bac:	add	r0, r4, r0
   15bb0:	bl	14024 <memcpy@plt>
   15bb4:	ldr	r3, [r4, #216]	; 0xd8
   15bb8:	mov	r2, #0
   15bbc:	strb	r2, [r4, r3]
   15bc0:	pop	{r4, r5, r6, pc}
   15bc4:	strheq	ip, [r5], -r0
   15bc8:	andeq	r1, r3, fp, asr #15
   15bcc:	andeq	r1, r3, r8, ror #15

00015bd0 <__flatcc_fb_codegen_common_c@@Base>:
   15bd0:	push	{r4, r5, r6, lr}
   15bd4:	mov	r4, r0
   15bd8:	bl	140cc <strlen@plt>
   15bdc:	ldr	r3, [r4, #212]	; 0xd4
   15be0:	ldr	r3, [r3, #144]	; 0x90
   15be4:	cmp	r3, #0
   15be8:	sub	r6, r0, #1
   15bec:	bne	15c30 <__flatcc_fb_codegen_common_c@@Base+0x60>
   15bf0:	ldr	r3, [r4, #212]	; 0xd4
   15bf4:	ldr	r5, [r3, #148]	; 0x94
   15bf8:	cmp	r5, #0
   15bfc:	beq	15c50 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15c00:	ldr	r3, [pc, #112]	; 15c78 <__flatcc_fb_codegen_common_c@@Base+0xa8>
   15c04:	mov	r2, r6
   15c08:	mov	r1, r4
   15c0c:	mov	r0, r4
   15c10:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15c14:	subs	r5, r0, #0
   15c18:	bne	15c4c <__flatcc_fb_codegen_common_c@@Base+0x7c>
   15c1c:	mov	r0, r4
   15c20:	bl	1a7d4 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15c24:	mov	r0, r4
   15c28:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15c2c:	b	15c50 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15c30:	ldr	r3, [pc, #68]	; 15c7c <__flatcc_fb_codegen_common_c@@Base+0xac>
   15c34:	mov	r2, r6
   15c38:	mov	r1, r4
   15c3c:	mov	r0, r4
   15c40:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15c44:	cmp	r0, #0
   15c48:	beq	15c58 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15c4c:	mvn	r5, #0
   15c50:	mov	r0, r5
   15c54:	pop	{r4, r5, r6, pc}
   15c58:	mov	r0, r4
   15c5c:	bl	179b8 <__flatcc_fb_gen_common_c_header@@Base>
   15c60:	mov	r5, r0
   15c64:	mov	r0, r4
   15c68:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15c6c:	cmp	r5, #0
   15c70:	bne	15c50 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15c74:	b	15bf0 <__flatcc_fb_codegen_common_c@@Base+0x20>
   15c78:	andeq	r1, r3, pc, lsl r8
   15c7c:	andeq	r1, r3, lr, lsl #16

00015c80 <__flatcc_fb_codegen_c@@Base>:
   15c80:	mov	r3, r1
   15c84:	mov	r2, #0
   15c88:	push	{r4, r5, r6, lr}
   15c8c:	mov	r4, r0
   15c90:	str	r1, [r0, #208]	; 0xd0
   15c94:	mov	r1, r2
   15c98:	ldr	r0, [r3, #60]	; 0x3c
   15c9c:	bl	24004 <fb_scope_table_find@@Base>
   15ca0:	ldr	r3, [r4, #208]	; 0xd0
   15ca4:	ldr	r5, [r3, #160]	; 0xa0
   15ca8:	str	r0, [r4, #216]	; 0xd8
   15cac:	mov	r0, r5
   15cb0:	bl	140cc <strlen@plt>
   15cb4:	ldr	r3, [r4, #212]	; 0xd4
   15cb8:	ldr	r3, [r3, #152]	; 0x98
   15cbc:	cmp	r3, #0
   15cc0:	mov	r6, r0
   15cc4:	beq	15d08 <__flatcc_fb_codegen_c@@Base+0x88>
   15cc8:	mov	r2, r0
   15ccc:	ldr	r3, [pc, #344]	; 15e2c <__flatcc_fb_codegen_c@@Base+0x1ac>
   15cd0:	mov	r1, r5
   15cd4:	mov	r0, r4
   15cd8:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15cdc:	cmp	r0, #0
   15ce0:	beq	15cf0 <__flatcc_fb_codegen_c@@Base+0x70>
   15ce4:	mvn	r5, #0
   15ce8:	mov	r0, r5
   15cec:	pop	{r4, r5, r6, pc}
   15cf0:	mov	r0, r4
   15cf4:	bl	185c8 <__flatcc_fb_gen_c_reader@@Base>
   15cf8:	subs	r5, r0, #0
   15cfc:	bne	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15d00:	mov	r0, r4
   15d04:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15d08:	ldr	r3, [r4, #212]	; 0xd4
   15d0c:	ldr	r3, [r3, #156]	; 0x9c
   15d10:	cmp	r3, #0
   15d14:	beq	15d50 <__flatcc_fb_codegen_c@@Base+0xd0>
   15d18:	ldr	r1, [r4, #208]	; 0xd0
   15d1c:	ldr	r3, [pc, #268]	; 15e30 <__flatcc_fb_codegen_c@@Base+0x1b0>
   15d20:	mov	r2, r6
   15d24:	ldr	r1, [r1, #160]	; 0xa0
   15d28:	mov	r0, r4
   15d2c:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15d30:	cmp	r0, #0
   15d34:	bne	15ce4 <__flatcc_fb_codegen_c@@Base+0x64>
   15d38:	mov	r0, r4
   15d3c:	bl	1b044 <__flatcc_fb_gen_c_builder@@Base>
   15d40:	subs	r5, r0, #0
   15d44:	bne	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15d48:	mov	r0, r4
   15d4c:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15d50:	ldr	r3, [r4, #212]	; 0xd4
   15d54:	ldr	r3, [r3, #160]	; 0xa0
   15d58:	cmp	r3, #0
   15d5c:	beq	15d98 <__flatcc_fb_codegen_c@@Base+0x118>
   15d60:	ldr	r1, [r4, #208]	; 0xd0
   15d64:	ldr	r3, [pc, #200]	; 15e34 <__flatcc_fb_codegen_c@@Base+0x1b4>
   15d68:	mov	r2, r6
   15d6c:	ldr	r1, [r1, #160]	; 0xa0
   15d70:	mov	r0, r4
   15d74:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15d78:	cmp	r0, #0
   15d7c:	bne	15ce4 <__flatcc_fb_codegen_c@@Base+0x64>
   15d80:	mov	r0, r4
   15d84:	bl	1bc60 <__flatcc_fb_gen_c_verifier@@Base>
   15d88:	subs	r5, r0, #0
   15d8c:	bne	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15d90:	mov	r0, r4
   15d94:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15d98:	ldr	r3, [r4, #212]	; 0xd4
   15d9c:	ldr	r3, [r3, #164]	; 0xa4
   15da0:	cmp	r3, #0
   15da4:	beq	15de0 <__flatcc_fb_codegen_c@@Base+0x160>
   15da8:	ldr	r1, [r4, #208]	; 0xd0
   15dac:	ldr	r3, [pc, #132]	; 15e38 <__flatcc_fb_codegen_c@@Base+0x1b8>
   15db0:	mov	r2, r6
   15db4:	ldr	r1, [r1, #160]	; 0xa0
   15db8:	mov	r0, r4
   15dbc:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15dc0:	cmp	r0, #0
   15dc4:	bne	15ce4 <__flatcc_fb_codegen_c@@Base+0x64>
   15dc8:	mov	r0, r4
   15dcc:	bl	1ea6c <__flatcc_fb_gen_c_json_parser@@Base>
   15dd0:	subs	r5, r0, #0
   15dd4:	bne	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15dd8:	mov	r0, r4
   15ddc:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15de0:	ldr	r3, [r4, #212]	; 0xd4
   15de4:	ldr	r5, [r3, #168]	; 0xa8
   15de8:	cmp	r5, #0
   15dec:	beq	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15df0:	ldr	r1, [r4, #208]	; 0xd0
   15df4:	ldr	r3, [pc, #64]	; 15e3c <__flatcc_fb_codegen_c@@Base+0x1bc>
   15df8:	mov	r2, r6
   15dfc:	ldr	r1, [r1, #160]	; 0xa0
   15e00:	mov	r0, r4
   15e04:	bl	15690 <__flatcc_fb_open_output_file@@Base>
   15e08:	cmp	r0, #0
   15e0c:	bne	15ce4 <__flatcc_fb_codegen_c@@Base+0x64>
   15e10:	mov	r0, r4
   15e14:	bl	210a8 <__flatcc_fb_gen_c_json_printer@@Base>
   15e18:	subs	r5, r0, #0
   15e1c:	bne	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15e20:	mov	r0, r4
   15e24:	bl	1574c <__flatcc_fb_close_output_file@@Base>
   15e28:	b	15ce8 <__flatcc_fb_codegen_c@@Base+0x68>
   15e2c:	andeq	r7, r4, fp, asr #20
   15e30:	andeq	r7, r4, r7, lsr #22
   15e34:	andeq	r1, r3, r1, lsr r8
   15e38:	andeq	r1, r3, sp, lsr r8
   15e3c:	andeq	r1, r3, ip, asr #16
   15e40:	mov	r2, r1
   15e44:	mov	r1, r0
   15e48:	ldr	r0, [r0, #12]
   15e4c:	b	15b18 <__flatcc_fb_scoped_symbol_name@@Base>
   15e50:	push	{r4, r5, lr}
   15e54:	mov	r5, r1
   15e58:	sub	sp, sp, #228	; 0xe4
   15e5c:	mov	r4, r0
   15e60:	mov	r2, #220	; 0xdc
   15e64:	mov	r1, #0
   15e68:	add	r0, sp, #4
   15e6c:	bl	140fc <memset@plt>
   15e70:	ldrh	r3, [r5, #8]
   15e74:	cmp	r3, #1
   15e78:	bls	15e90 <__flatcc_fb_codegen_c@@Base+0x210>
   15e7c:	ldr	r3, [pc, #236]	; 15f70 <__flatcc_fb_codegen_c@@Base+0x2f0>
   15e80:	ldr	r2, [pc, #236]	; 15f74 <__flatcc_fb_codegen_c@@Base+0x2f4>
   15e84:	ldr	r1, [pc, #236]	; 15f78 <__flatcc_fb_codegen_c@@Base+0x2f8>
   15e88:	ldr	r0, [pc, #236]	; 15f7c <__flatcc_fb_codegen_c@@Base+0x2fc>
   15e8c:	bl	141a4 <__assert_fail@plt>
   15e90:	add	r1, sp, #4
   15e94:	mov	r0, r5
   15e98:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   15e9c:	ldrh	r3, [r5, #8]
   15ea0:	cmp	r3, #1
   15ea4:	bne	15f34 <__flatcc_fb_codegen_c@@Base+0x2b4>
   15ea8:	ldrd	r2, [r5, #112]	; 0x70
   15eac:	orrs	r3, r2, r3
   15eb0:	bne	15f1c <__flatcc_fb_codegen_c@@Base+0x29c>
   15eb4:	add	r2, sp, #4
   15eb8:	ldr	r1, [pc, #192]	; 15f80 <__flatcc_fb_codegen_c@@Base+0x300>
   15ebc:	ldr	r0, [r4, #204]	; 0xcc
   15ec0:	bl	140e4 <fprintf@plt>
   15ec4:	add	r3, sp, #4
   15ec8:	mov	r2, r3
   15ecc:	ldr	r1, [pc, #176]	; 15f84 <__flatcc_fb_codegen_c@@Base+0x304>
   15ed0:	ldr	r0, [r4, #204]	; 0xcc
   15ed4:	bl	140e4 <fprintf@plt>
   15ed8:	add	r3, sp, #4
   15edc:	mov	r2, r3
   15ee0:	ldr	r1, [pc, #160]	; 15f88 <__flatcc_fb_codegen_c@@Base+0x308>
   15ee4:	ldr	r0, [r4, #204]	; 0xcc
   15ee8:	bl	140e4 <fprintf@plt>
   15eec:	add	r3, sp, #4
   15ef0:	mov	r2, r3
   15ef4:	ldr	r1, [pc, #144]	; 15f8c <__flatcc_fb_codegen_c@@Base+0x30c>
   15ef8:	ldr	r0, [r4, #204]	; 0xcc
   15efc:	bl	140e4 <fprintf@plt>
   15f00:	add	r3, sp, #4
   15f04:	ldr	r1, [pc, #132]	; 15f90 <__flatcc_fb_codegen_c@@Base+0x310>
   15f08:	ldr	r0, [r4, #204]	; 0xcc
   15f0c:	mov	r2, r3
   15f10:	bl	140e4 <fprintf@plt>
   15f14:	add	sp, sp, #228	; 0xe4
   15f18:	pop	{r4, r5, pc}
   15f1c:	add	r3, sp, #4
   15f20:	mov	r2, r3
   15f24:	ldr	r1, [pc, #104]	; 15f94 <__flatcc_fb_codegen_c@@Base+0x314>
   15f28:	ldr	r0, [r4, #204]	; 0xcc
   15f2c:	bl	140e4 <fprintf@plt>
   15f30:	b	15ec4 <__flatcc_fb_codegen_c@@Base+0x244>
   15f34:	add	r3, sp, #4
   15f38:	mov	r2, r3
   15f3c:	ldr	r1, [pc, #84]	; 15f98 <__flatcc_fb_codegen_c@@Base+0x318>
   15f40:	ldr	r0, [r4, #204]	; 0xcc
   15f44:	bl	140e4 <fprintf@plt>
   15f48:	add	r3, sp, #4
   15f4c:	mov	r2, r4
   15f50:	ldr	r1, [pc, #68]	; 15f9c <__flatcc_fb_codegen_c@@Base+0x31c>
   15f54:	ldr	r0, [r4, #204]	; 0xcc
   15f58:	bl	140e4 <fprintf@plt>
   15f5c:	add	r3, sp, #4
   15f60:	mov	r2, r4
   15f64:	ldr	r1, [pc, #52]	; 15fa0 <__flatcc_fb_codegen_c@@Base+0x320>
   15f68:	ldr	r0, [r4, #204]	; 0xcc
   15f6c:	b	15f10 <__flatcc_fb_codegen_c@@Base+0x290>
   15f70:	andeq	r1, r3, ip, asr r8
   15f74:	andeq	r0, r0, pc, asr r3
   15f78:	andeq	r1, r3, sl, lsl #18
   15f7c:	andeq	r1, r3, sl, asr r9
   15f80:	muleq	r3, ip, r9
   15f84:	ldrdeq	r1, [r3], -ip
   15f88:	strdeq	r1, [r3], -lr
   15f8c:	andeq	r1, r3, r2, lsr #20
   15f90:	andeq	r1, r3, r1, asr #20
   15f94:	andeq	r1, r3, r3, asr #19
   15f98:	andeq	r1, r3, r2, ror #20
   15f9c:	andeq	r1, r3, lr, lsl #21
   15fa0:			; <UNDEFINED> instruction: 0x00031ab4
   15fa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15fa8:	subs	r4, r2, #0
   15fac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15fb0:	ldr	r8, [pc, #124]	; 16034 <__flatcc_fb_codegen_c@@Base+0x3b4>
   15fb4:	ldr	r9, [pc, #124]	; 16038 <__flatcc_fb_codegen_c@@Base+0x3b8>
   15fb8:	ldr	r7, [pc, #124]	; 1603c <__flatcc_fb_codegen_c@@Base+0x3bc>
   15fbc:	mov	r5, r0
   15fc0:	mov	r6, r1
   15fc4:	mov	r3, #1
   15fc8:	mov	r2, #0
   15fcc:	ldr	r1, [r4, #4]
   15fd0:	ldr	r1, [r1, #8]
   15fd4:	cmp	r1, r2
   15fd8:	beq	15ff4 <__flatcc_fb_codegen_c@@Base+0x374>
   15fdc:	cmp	r3, #0
   15fe0:	mov	r2, r6
   15fe4:	movne	r1, r9
   15fe8:	moveq	r1, r8
   15fec:	ldr	r0, [r5]
   15ff0:	bl	140e4 <fprintf@plt>
   15ff4:	ldr	r2, [r4, #4]
   15ff8:	mov	r1, r7
   15ffc:	ldr	r0, [r5]
   16000:	ldr	r3, [r2]
   16004:	ldr	r2, [r2, #4]
   16008:	bl	140e4 <fprintf@plt>
   1600c:	ldr	r3, [r4, #4]
   16010:	ldr	r4, [r4]
   16014:	ldr	r2, [r3, #8]
   16018:	mov	r3, #0
   1601c:	cmp	r4, r3
   16020:	bne	15fcc <__flatcc_fb_codegen_c@@Base+0x34c>
   16024:	ldr	r1, [r5]
   16028:	ldr	r0, [pc, #16]	; 16040 <__flatcc_fb_codegen_c@@Base+0x3c0>
   1602c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16030:	b	14180 <fputs@plt>
   16034:	andeq	r1, r3, r3, ror #21
   16038:	ldrdeq	r1, [r3], -ip
   1603c:	ldrdeq	sl, [r3], -r9
   16040:			; <UNDEFINED> instruction: 0x000474bb
   16044:	push	{r0, r1, r2, lr}
   16048:	sub	r0, r0, #1
   1604c:	cmp	r0, #10
   16050:	ldrls	pc, [pc, r0, lsl #2]
   16054:	b	160d0 <__flatcc_fb_codegen_c@@Base+0x450>
   16058:	andeq	r6, r1, r4, lsl #2
   1605c:	andeq	r6, r1, r4, lsl #1
   16060:	andeq	r6, r1, ip, lsl #2
   16064:	muleq	r1, r0, r0
   16068:	muleq	r1, r8, r0
   1606c:	andeq	r6, r1, r0, lsr #1
   16070:	andeq	r6, r1, r8, lsr #1
   16074:	strheq	r6, [r1], -r0
   16078:	strheq	r6, [r1], -r8
   1607c:	andeq	r6, r1, r8, asr #1
   16080:	andeq	r6, r1, r0, asr #1
   16084:	ldr	r0, [pc, #136]	; 16114 <__flatcc_fb_codegen_c@@Base+0x494>
   16088:	add	sp, sp, #12
   1608c:	pop	{pc}		; (ldr pc, [sp], #4)
   16090:	ldr	r0, [pc, #128]	; 16118 <__flatcc_fb_codegen_c@@Base+0x498>
   16094:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   16098:	ldr	r0, [pc, #124]	; 1611c <__flatcc_fb_codegen_c@@Base+0x49c>
   1609c:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160a0:	ldr	r0, [pc, #120]	; 16120 <__flatcc_fb_codegen_c@@Base+0x4a0>
   160a4:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160a8:	ldr	r0, [pc, #116]	; 16124 <__flatcc_fb_codegen_c@@Base+0x4a4>
   160ac:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160b0:	ldr	r0, [pc, #112]	; 16128 <__flatcc_fb_codegen_c@@Base+0x4a8>
   160b4:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160b8:	ldr	r0, [pc, #108]	; 1612c <__flatcc_fb_codegen_c@@Base+0x4ac>
   160bc:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160c0:	ldr	r0, [pc, #104]	; 16130 <__flatcc_fb_codegen_c@@Base+0x4b0>
   160c4:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160c8:	ldr	r0, [pc, #100]	; 16134 <__flatcc_fb_codegen_c@@Base+0x4b4>
   160cc:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   160d0:	ldr	r0, [pc, #96]	; 16138 <__flatcc_fb_codegen_c@@Base+0x4b8>
   160d4:	ldr	r3, [pc, #96]	; 1613c <__flatcc_fb_codegen_c@@Base+0x4bc>
   160d8:	ldr	r2, [pc, #96]	; 16140 <__flatcc_fb_codegen_c@@Base+0x4c0>
   160dc:	str	r3, [sp]
   160e0:	ldr	r1, [pc, #92]	; 16144 <__flatcc_fb_codegen_c@@Base+0x4c4>
   160e4:	mov	r3, #141	; 0x8d
   160e8:	ldr	r0, [r0]
   160ec:	bl	140e4 <fprintf@plt>
   160f0:	ldr	r3, [pc, #80]	; 16148 <__flatcc_fb_codegen_c@@Base+0x4c8>
   160f4:	mov	r2, #141	; 0x8d
   160f8:	ldr	r1, [pc, #64]	; 16140 <__flatcc_fb_codegen_c@@Base+0x4c0>
   160fc:	ldr	r0, [pc, #72]	; 1614c <__flatcc_fb_codegen_c@@Base+0x4cc>
   16100:	bl	141a4 <__assert_fail@plt>
   16104:	ldr	r0, [pc, #68]	; 16150 <__flatcc_fb_codegen_c@@Base+0x4d0>
   16108:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   1610c:	ldr	r0, [pc, #64]	; 16154 <__flatcc_fb_codegen_c@@Base+0x4d4>
   16110:	b	16088 <__flatcc_fb_codegen_c@@Base+0x408>
   16114:	strdeq	r1, [r3], -r3
   16118:	andeq	r1, r3, r5, lsl #22
   1611c:	andeq	r1, r3, sp, lsl #22
   16120:	andeq	r1, r3, fp, ror #21
   16124:	strdeq	r1, [r3], -r4
   16128:	strdeq	r1, [r3], -sp
   1612c:	andeq	r1, r3, r6, lsl #22
   16130:	andeq	r1, r3, r4, lsl fp
   16134:	andeq	r1, r3, sl, lsl fp
   16138:	strheq	ip, [r5], -r0
   1613c:	andeq	r1, r3, r5, ror fp
   16140:	andeq	r1, r3, r1, lsr #22
   16144:	andeq	r1, r3, sl, ror #22
   16148:	andeq	r1, r3, sp, ror #16
   1614c:	andeq	sl, r3, r9, asr #3
   16150:	andeq	r1, r3, sl, ror #21
   16154:	strdeq	r1, [r3], -ip
   16158:	push	{r0, r1, r2, lr}
   1615c:	sub	r0, r0, #1
   16160:	cmp	r0, #10
   16164:	ldrls	pc, [pc, r0, lsl #2]
   16168:	b	161e4 <__flatcc_fb_codegen_c@@Base+0x564>
   1616c:	andeq	r6, r1, r8, lsl r2
   16170:	muleq	r1, r8, r1
   16174:	andeq	r6, r1, r0, lsr #4
   16178:	andeq	r6, r1, r4, lsr #3
   1617c:	andeq	r6, r1, ip, lsr #3
   16180:			; <UNDEFINED> instruction: 0x000161b4
   16184:			; <UNDEFINED> instruction: 0x000161bc
   16188:	andeq	r6, r1, r4, asr #3
   1618c:	andeq	r6, r1, ip, asr #3
   16190:	ldrdeq	r6, [r1], -ip
   16194:	ldrdeq	r6, [r1], -r4
   16198:	ldr	r0, [pc, #136]	; 16228 <__flatcc_fb_codegen_c@@Base+0x5a8>
   1619c:	add	sp, sp, #12
   161a0:	pop	{pc}		; (ldr pc, [sp], #4)
   161a4:	ldr	r0, [pc, #128]	; 1622c <__flatcc_fb_codegen_c@@Base+0x5ac>
   161a8:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161ac:	ldr	r0, [pc, #124]	; 16230 <__flatcc_fb_codegen_c@@Base+0x5b0>
   161b0:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161b4:	ldr	r0, [pc, #120]	; 16234 <__flatcc_fb_codegen_c@@Base+0x5b4>
   161b8:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161bc:	ldr	r0, [pc, #116]	; 16238 <__flatcc_fb_codegen_c@@Base+0x5b8>
   161c0:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161c4:	ldr	r0, [pc, #112]	; 1623c <__flatcc_fb_codegen_c@@Base+0x5bc>
   161c8:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161cc:	ldr	r0, [pc, #108]	; 16240 <__flatcc_fb_codegen_c@@Base+0x5c0>
   161d0:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161d4:	ldr	r0, [pc, #104]	; 16244 <__flatcc_fb_codegen_c@@Base+0x5c4>
   161d8:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161dc:	ldr	r0, [pc, #100]	; 16248 <__flatcc_fb_codegen_c@@Base+0x5c8>
   161e0:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   161e4:	ldr	r0, [pc, #96]	; 1624c <__flatcc_fb_codegen_c@@Base+0x5cc>
   161e8:	ldr	r3, [pc, #96]	; 16250 <__flatcc_fb_codegen_c@@Base+0x5d0>
   161ec:	ldr	r2, [pc, #96]	; 16254 <__flatcc_fb_codegen_c@@Base+0x5d4>
   161f0:	str	r3, [sp]
   161f4:	ldr	r1, [pc, #92]	; 16258 <__flatcc_fb_codegen_c@@Base+0x5d8>
   161f8:	mov	r3, #96	; 0x60
   161fc:	ldr	r0, [r0]
   16200:	bl	140e4 <fprintf@plt>
   16204:	ldr	r3, [pc, #80]	; 1625c <__flatcc_fb_codegen_c@@Base+0x5dc>
   16208:	mov	r2, #96	; 0x60
   1620c:	ldr	r1, [pc, #64]	; 16254 <__flatcc_fb_codegen_c@@Base+0x5d4>
   16210:	ldr	r0, [pc, #72]	; 16260 <__flatcc_fb_codegen_c@@Base+0x5e0>
   16214:	bl	141a4 <__assert_fail@plt>
   16218:	ldr	r0, [pc, #68]	; 16264 <__flatcc_fb_codegen_c@@Base+0x5e4>
   1621c:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   16220:	ldr	r0, [pc, #64]	; 16268 <__flatcc_fb_codegen_c@@Base+0x5e8>
   16224:	b	1619c <__flatcc_fb_codegen_c@@Base+0x51c>
   16228:			; <UNDEFINED> instruction: 0x00031bb3
   1622c:	andeq	r1, r3, r1, asr #23
   16230:	andeq	r9, r4, r4, rrx
   16234:	andeq	r1, r3, sp, lsr #23
   16238:			; <UNDEFINED> instruction: 0x00031bb4
   1623c:			; <UNDEFINED> instruction: 0x00031bbb
   16240:	andeq	r1, r3, r2, asr #23
   16244:	andeq	r1, r3, r4, lsl fp
   16248:	andeq	r1, r3, sl, lsl fp
   1624c:	strheq	ip, [r5], -r0
   16250:	andeq	r1, r3, r5, ror fp
   16254:	andeq	r1, r3, r1, lsr #22
   16258:	andeq	r1, r3, sl, ror #22
   1625c:	andeq	r1, r3, lr, ror r8
   16260:	andeq	sl, r3, r9, asr #3
   16264:	andeq	r1, r3, ip, lsr #23
   16268:			; <UNDEFINED> instruction: 0x00031bba
   1626c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16270:	sub	sp, sp, #484	; 0x1e4
   16274:	ldr	r3, [r0, #212]	; 0xd4
   16278:	add	r5, sp, #40	; 0x28
   1627c:	mov	r7, r1
   16280:	mov	r2, #220	; 0xdc
   16284:	mov	r1, #0
   16288:	mov	r4, r0
   1628c:	mov	r0, r5
   16290:	ldr	r8, [r3, #132]	; 0x84
   16294:	bl	140fc <memset@plt>
   16298:	mov	r2, #220	; 0xdc
   1629c:	mov	r1, #0
   162a0:	add	r0, sp, #260	; 0x104
   162a4:	bl	140fc <memset@plt>
   162a8:	ldrh	r3, [r7, #8]
   162ac:	cmp	r3, #1
   162b0:	beq	162c8 <__flatcc_fb_codegen_c@@Base+0x648>
   162b4:	ldr	r3, [pc, #1688]	; 16954 <__flatcc_fb_codegen_c@@Base+0xcd4>
   162b8:	ldr	r1, [pc, #1688]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   162bc:	ldr	r0, [pc, #1688]	; 1695c <__flatcc_fb_codegen_c@@Base+0xcdc>
   162c0:	mov	r2, #936	; 0x3a8
   162c4:	bl	141a4 <__assert_fail@plt>
   162c8:	ldrh	r3, [r7, #104]	; 0x68
   162cc:	cmp	r3, #0
   162d0:	bne	162f0 <__flatcc_fb_codegen_c@@Base+0x670>
   162d4:	ldrd	r2, [r7, #96]	; 0x60
   162d8:	orrs	r3, r2, r3
   162dc:	ldrne	r3, [pc, #1648]	; 16954 <__flatcc_fb_codegen_c@@Base+0xcd4>
   162e0:	ldrne	r2, [pc, #1656]	; 16960 <__flatcc_fb_codegen_c@@Base+0xce0>
   162e4:	ldrne	r1, [pc, #1644]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   162e8:	ldrne	r0, [pc, #1652]	; 16964 <__flatcc_fb_codegen_c@@Base+0xce4>
   162ec:	bne	162c4 <__flatcc_fb_codegen_c@@Base+0x644>
   162f0:	ldrd	r2, [r7, #112]	; 0x70
   162f4:	orrs	r3, r2, r3
   162f8:	bne	16318 <__flatcc_fb_codegen_c@@Base+0x698>
   162fc:	ldrd	r2, [r7, #96]	; 0x60
   16300:	orrs	r3, r2, r3
   16304:	ldrne	r3, [pc, #1608]	; 16954 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16308:	ldrne	r2, [pc, #1624]	; 16968 <__flatcc_fb_codegen_c@@Base+0xce8>
   1630c:	ldrne	r1, [pc, #1604]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   16310:	ldrne	r0, [pc, #1620]	; 1696c <__flatcc_fb_codegen_c@@Base+0xcec>
   16314:	bne	162c4 <__flatcc_fb_codegen_c@@Base+0x644>
   16318:	mov	r1, r5
   1631c:	mov	r0, r7
   16320:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16324:	add	r3, r4, #204	; 0xcc
   16328:	ldr	r2, [r7, #32]
   1632c:	mov	r0, r3
   16330:	ldr	r1, [pc, #1592]	; 16970 <__flatcc_fb_codegen_c@@Base+0xcf0>
   16334:	str	r3, [sp, #36]	; 0x24
   16338:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   1633c:	ldrd	r2, [r7, #112]	; 0x70
   16340:	orrs	r3, r2, r3
   16344:	bne	1641c <__flatcc_fb_codegen_c@@Base+0x79c>
   16348:	mov	r2, r5
   1634c:	ldr	r1, [pc, #1568]	; 16974 <__flatcc_fb_codegen_c@@Base+0xcf4>
   16350:	ldr	r0, [r4, #204]	; 0xcc
   16354:	bl	140e4 <fprintf@plt>
   16358:	mov	r3, r5
   1635c:	mov	r2, r5
   16360:	ldr	r1, [pc, #1552]	; 16978 <__flatcc_fb_codegen_c@@Base+0xcf8>
   16364:	str	r5, [sp]
   16368:	ldr	r0, [r4, #204]	; 0xcc
   1636c:	bl	140e4 <fprintf@plt>
   16370:	mov	r3, r5
   16374:	mov	r2, r5
   16378:	ldr	r1, [pc, #1532]	; 1697c <__flatcc_fb_codegen_c@@Base+0xcfc>
   1637c:	str	r5, [sp]
   16380:	ldr	r0, [r4, #204]	; 0xcc
   16384:	bl	140e4 <fprintf@plt>
   16388:	str	r5, [sp]
   1638c:	mov	r3, r5
   16390:	mov	r2, r5
   16394:	ldr	r1, [pc, #1508]	; 16980 <__flatcc_fb_codegen_c@@Base+0xd00>
   16398:	ldr	r0, [r4, #204]	; 0xcc
   1639c:	bl	140e4 <fprintf@plt>
   163a0:	ldrd	r2, [r7, #112]	; 0x70
   163a4:	ldr	r1, [pc, #1496]	; 16984 <__flatcc_fb_codegen_c@@Base+0xd04>
   163a8:	ldr	r0, [r4, #204]	; 0xcc
   163ac:	strd	r2, [sp]
   163b0:	mov	r2, r5
   163b4:	bl	140e4 <fprintf@plt>
   163b8:	mov	r3, r5
   163bc:	mov	r2, r5
   163c0:	ldr	r1, [pc, #1472]	; 16988 <__flatcc_fb_codegen_c@@Base+0xd08>
   163c4:	str	r4, [sp]
   163c8:	ldr	r0, [r4, #204]	; 0xcc
   163cc:	bl	140e4 <fprintf@plt>
   163d0:	mov	r3, r5
   163d4:	mov	r2, r4
   163d8:	ldr	r1, [pc, #1452]	; 1698c <__flatcc_fb_codegen_c@@Base+0xd0c>
   163dc:	ldr	r0, [r4, #204]	; 0xcc
   163e0:	bl	140e4 <fprintf@plt>
   163e4:	ldr	r1, [r4, #204]	; 0xcc
   163e8:	mov	r0, #10
   163ec:	bl	14144 <fputc@plt>
   163f0:	mov	r9, #0
   163f4:	ldr	r6, [r7, #20]
   163f8:	mov	fp, r9
   163fc:	add	sl, sp, #260	; 0x104
   16400:	cmp	r6, #0
   16404:	bne	16700 <__flatcc_fb_codegen_c@@Base+0xa80>
   16408:	ldr	r1, [r4, #204]	; 0xcc
   1640c:	mov	r0, #10
   16410:	bl	14144 <fputc@plt>
   16414:	add	sp, sp, #484	; 0x1e4
   16418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1641c:	cmp	r8, #0
   16420:	beq	16430 <__flatcc_fb_codegen_c@@Base+0x7b0>
   16424:	ldr	r1, [r4, #204]	; 0xcc
   16428:	ldr	r0, [pc, #1376]	; 16990 <__flatcc_fb_codegen_c@@Base+0xd10>
   1642c:	bl	14180 <fputs@plt>
   16430:	mov	r2, r5
   16434:	ldr	r1, [pc, #1368]	; 16994 <__flatcc_fb_codegen_c@@Base+0xd14>
   16438:	ldr	r0, [r4, #204]	; 0xcc
   1643c:	bl	140e4 <fprintf@plt>
   16440:	mov	r9, #0
   16444:	ldr	r6, [r7, #20]
   16448:	mov	fp, r9
   1644c:	str	r9, [sp, #24]
   16450:	cmp	r6, #0
   16454:	bne	16504 <__flatcc_fb_codegen_c@@Base+0x884>
   16458:	cmp	r8, #0
   1645c:	beq	1647c <__flatcc_fb_codegen_c@@Base+0x7fc>
   16460:	ldr	r3, [r7, #112]	; 0x70
   16464:	subs	r3, r3, fp
   16468:	beq	1647c <__flatcc_fb_codegen_c@@Base+0x7fc>
   1646c:	ldr	r2, [sp, #24]
   16470:	ldr	r1, [pc, #1312]	; 16998 <__flatcc_fb_codegen_c@@Base+0xd18>
   16474:	ldr	r0, [r4, #204]	; 0xcc
   16478:	bl	140e4 <fprintf@plt>
   1647c:	ldr	r1, [r4, #204]	; 0xcc
   16480:	ldr	r0, [pc, #1300]	; 1699c <__flatcc_fb_codegen_c@@Base+0xd1c>
   16484:	bl	14180 <fputs@plt>
   16488:	cmp	r8, #0
   1648c:	beq	1649c <__flatcc_fb_codegen_c@@Base+0x81c>
   16490:	ldr	r1, [r4, #204]	; 0xcc
   16494:	ldr	r0, [pc, #1284]	; 169a0 <__flatcc_fb_codegen_c@@Base+0xd20>
   16498:	bl	14180 <fputs@plt>
   1649c:	ldrd	r2, [r7, #112]	; 0x70
   164a0:	ldr	r1, [pc, #1276]	; 169a4 <__flatcc_fb_codegen_c@@Base+0xd24>
   164a4:	ldr	r0, [r4, #204]	; 0xcc
   164a8:	strd	r2, [sp]
   164ac:	mov	r2, r5
   164b0:	bl	140e4 <fprintf@plt>
   164b4:	mov	r3, r5
   164b8:	mov	r2, r5
   164bc:	str	r5, [sp]
   164c0:	ldr	r1, [pc, #1248]	; 169a8 <__flatcc_fb_codegen_c@@Base+0xd28>
   164c4:	ldr	r0, [r4, #204]	; 0xcc
   164c8:	bl	140e4 <fprintf@plt>
   164cc:	mov	r3, r5
   164d0:	mov	r2, r5
   164d4:	str	r5, [sp]
   164d8:	ldr	r1, [pc, #1228]	; 169ac <__flatcc_fb_codegen_c@@Base+0xd2c>
   164dc:	ldr	r0, [r4, #204]	; 0xcc
   164e0:	bl	140e4 <fprintf@plt>
   164e4:	str	r4, [sp, #4]
   164e8:	str	r5, [sp]
   164ec:	mov	r3, r5
   164f0:	mov	r2, r5
   164f4:	ldr	r1, [pc, #1204]	; 169b0 <__flatcc_fb_codegen_c@@Base+0xd30>
   164f8:	ldr	r0, [r4, #204]	; 0xcc
   164fc:	bl	140e4 <fprintf@plt>
   16500:	b	163a0 <__flatcc_fb_codegen_c@@Base+0x720>
   16504:	ldr	r2, [r6, #68]	; 0x44
   16508:	ldr	r1, [pc, #1188]	; 169b4 <__flatcc_fb_codegen_c@@Base+0xd34>
   1650c:	ldr	r0, [sp, #36]	; 0x24
   16510:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   16514:	ldr	r3, [r6, #4]
   16518:	cmp	fp, #0
   1651c:	ldr	r2, [r3, #4]
   16520:	ldr	r3, [r3]
   16524:	ldrheq	sl, [r7, #104]	; 0x68
   16528:	ldrhne	sl, [r6, #74]	; 0x4a
   1652c:	cmp	r8, #0
   16530:	str	r2, [sp, #28]
   16534:	str	r3, [sp, #32]
   16538:	beq	16560 <__flatcc_fb_codegen_c@@Base+0x8e0>
   1653c:	ldr	r3, [r6, #80]	; 0x50
   16540:	subs	r3, r3, fp
   16544:	beq	16560 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16548:	ldr	r2, [sp, #24]
   1654c:	ldr	r1, [pc, #1092]	; 16998 <__flatcc_fb_codegen_c@@Base+0xd18>
   16550:	add	fp, r2, #1
   16554:	ldr	r0, [r4, #204]	; 0xcc
   16558:	bl	140e4 <fprintf@plt>
   1655c:	str	fp, [sp, #24]
   16560:	ldrh	r3, [r6, #72]	; 0x48
   16564:	tst	r3, #4
   16568:	beq	165dc <__flatcc_fb_codegen_c@@Base+0x95c>
   1656c:	cmp	r8, #0
   16570:	ldr	r3, [r6, #88]	; 0x58
   16574:	ldr	r2, [sp, #32]
   16578:	add	fp, r9, #1
   1657c:	beq	165b4 <__flatcc_fb_codegen_c@@Base+0x934>
   16580:	str	r2, [sp, #4]
   16584:	ldr	r2, [sp, #28]
   16588:	ldr	r1, [pc, #1064]	; 169b8 <__flatcc_fb_codegen_c@@Base+0xd38>
   1658c:	str	r2, [sp]
   16590:	ldr	r0, [r4, #204]	; 0xcc
   16594:	mov	r2, r9
   16598:	bl	140e4 <fprintf@plt>
   1659c:	mov	r9, fp
   165a0:	ldr	fp, [r6, #80]	; 0x50
   165a4:	ldr	r3, [r6, #88]	; 0x58
   165a8:	ldr	r6, [r6]
   165ac:	add	fp, fp, r3
   165b0:	b	16450 <__flatcc_fb_codegen_c@@Base+0x7d0>
   165b4:	str	r2, [sp, #8]
   165b8:	ldr	r2, [sp, #28]
   165bc:	str	r3, [sp]
   165c0:	str	r2, [sp, #4]
   165c4:	mov	r3, r9
   165c8:	mov	r2, sl
   165cc:	ldr	r1, [pc, #1000]	; 169bc <__flatcc_fb_codegen_c@@Base+0xd3c>
   165d0:	ldr	r0, [r4, #204]	; 0xcc
   165d4:	bl	140e4 <fprintf@plt>
   165d8:	b	1659c <__flatcc_fb_codegen_c@@Base+0x91c>
   165dc:	ldrh	r3, [r6, #24]
   165e0:	cmp	r3, #8
   165e4:	beq	16634 <__flatcc_fb_codegen_c@@Base+0x9b4>
   165e8:	cmp	r3, #14
   165ec:	beq	16678 <__flatcc_fb_codegen_c@@Base+0x9f8>
   165f0:	ldr	r2, [pc, #968]	; 169c0 <__flatcc_fb_codegen_c@@Base+0xd40>
   165f4:	ldr	r1, [pc, #968]	; 169c4 <__flatcc_fb_codegen_c@@Base+0xd44>
   165f8:	ldr	r0, [r4, #204]	; 0xcc
   165fc:	bl	140e4 <fprintf@plt>
   16600:	ldr	r0, [pc, #960]	; 169c8 <__flatcc_fb_codegen_c@@Base+0xd48>
   16604:	ldr	r3, [pc, #960]	; 169cc <__flatcc_fb_codegen_c@@Base+0xd4c>
   16608:	ldr	r2, [pc, #840]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   1660c:	str	r3, [sp]
   16610:	ldr	r1, [pc, #952]	; 169d0 <__flatcc_fb_codegen_c@@Base+0xd50>
   16614:	ldr	r3, [pc, #952]	; 169d4 <__flatcc_fb_codegen_c@@Base+0xd54>
   16618:	ldr	r0, [r0]
   1661c:	bl	140e4 <fprintf@plt>
   16620:	ldr	r3, [pc, #812]	; 16954 <__flatcc_fb_codegen_c@@Base+0xcd4>
   16624:	ldr	r2, [pc, #936]	; 169d4 <__flatcc_fb_codegen_c@@Base+0xd54>
   16628:	ldr	r1, [pc, #808]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   1662c:	ldr	r0, [pc, #932]	; 169d8 <__flatcc_fb_codegen_c@@Base+0xd58>
   16630:	b	162c4 <__flatcc_fb_codegen_c@@Base+0x644>
   16634:	ldr	r0, [r6, #16]
   16638:	ldr	fp, [pc, #816]	; 16970 <__flatcc_fb_codegen_c@@Base+0xcf0>
   1663c:	cmp	r0, #5
   16640:	moveq	fp, r4
   16644:	bl	16044 <__flatcc_fb_codegen_c@@Base+0x3c4>
   16648:	cmp	r8, #0
   1664c:	movne	r2, fp
   16650:	ldrne	r1, [pc, #900]	; 169dc <__flatcc_fb_codegen_c@@Base+0xd5c>
   16654:	mov	r3, r0
   16658:	bne	166cc <__flatcc_fb_codegen_c@@Base+0xa4c>
   1665c:	ldr	r1, [pc, #892]	; 169e0 <__flatcc_fb_codegen_c@@Base+0xd60>
   16660:	mov	r3, fp
   16664:	mov	r2, sl
   16668:	str	r0, [sp]
   1666c:	ldr	r0, [r4, #204]	; 0xcc
   16670:	bl	140e4 <fprintf@plt>
   16674:	b	166d4 <__flatcc_fb_codegen_c@@Base+0xa54>
   16678:	ldr	r0, [r6, #16]
   1667c:	ldrh	fp, [r0, #8]
   16680:	bic	r3, fp, #2
   16684:	cmp	r3, #1
   16688:	ldrne	r3, [pc, #708]	; 16954 <__flatcc_fb_codegen_c@@Base+0xcd4>
   1668c:	ldrne	r2, [pc, #848]	; 169e4 <__flatcc_fb_codegen_c@@Base+0xd64>
   16690:	ldrne	r1, [pc, #704]	; 16958 <__flatcc_fb_codegen_c@@Base+0xcd8>
   16694:	ldrne	r0, [pc, #844]	; 169e8 <__flatcc_fb_codegen_c@@Base+0xd68>
   16698:	bne	162c4 <__flatcc_fb_codegen_c@@Base+0x644>
   1669c:	ldr	r2, [pc, #840]	; 169ec <__flatcc_fb_codegen_c@@Base+0xd6c>
   166a0:	cmp	fp, #1
   166a4:	ldr	r3, [pc, #708]	; 16970 <__flatcc_fb_codegen_c@@Base+0xcf0>
   166a8:	add	r1, sp, #260	; 0x104
   166ac:	movne	r3, r2
   166b0:	mov	fp, r3
   166b4:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   166b8:	cmp	r8, #0
   166bc:	beq	166ec <__flatcc_fb_codegen_c@@Base+0xa6c>
   166c0:	ldr	r1, [pc, #808]	; 169f0 <__flatcc_fb_codegen_c@@Base+0xd70>
   166c4:	mov	r3, fp
   166c8:	add	r2, sp, #260	; 0x104
   166cc:	ldr	r0, [r4, #204]	; 0xcc
   166d0:	bl	140e4 <fprintf@plt>
   166d4:	ldr	r3, [sp, #32]
   166d8:	ldr	r2, [sp, #28]
   166dc:	ldr	r1, [pc, #784]	; 169f4 <__flatcc_fb_codegen_c@@Base+0xd74>
   166e0:	ldr	r0, [r4, #204]	; 0xcc
   166e4:	bl	140e4 <fprintf@plt>
   166e8:	b	165a0 <__flatcc_fb_codegen_c@@Base+0x920>
   166ec:	str	fp, [sp]
   166f0:	add	r3, sp, #260	; 0x104
   166f4:	mov	r2, sl
   166f8:	ldr	r1, [pc, #760]	; 169f8 <__flatcc_fb_codegen_c@@Base+0xd78>
   166fc:	b	1666c <__flatcc_fb_codegen_c@@Base+0x9ec>
   16700:	ldrh	r3, [r6, #72]	; 0x48
   16704:	tst	r3, #4
   16708:	bne	16750 <__flatcc_fb_codegen_c@@Base+0xad0>
   1670c:	ldr	r3, [r6, #4]
   16710:	ldr	r7, [r3, #4]
   16714:	ldr	r8, [r3]
   16718:	ldrh	r3, [r6, #24]
   1671c:	cmp	r3, #8
   16720:	beq	16758 <__flatcc_fb_codegen_c@@Base+0xad8>
   16724:	cmp	r3, #14
   16728:	beq	167bc <__flatcc_fb_codegen_c@@Base+0xb3c>
   1672c:	ldrh	r3, [r6, #72]	; 0x48
   16730:	tst	r3, #128	; 0x80
   16734:	beq	16750 <__flatcc_fb_codegen_c@@Base+0xad0>
   16738:	cmp	fp, #0
   1673c:	bne	16750 <__flatcc_fb_codegen_c@@Base+0xad0>
   16740:	ldr	r1, [r4, #204]	; 0xcc
   16744:	ldr	r0, [pc, #688]	; 169fc <__flatcc_fb_codegen_c@@Base+0xd7c>
   16748:	bl	14180 <fputs@plt>
   1674c:	mov	r9, #1
   16750:	ldr	r6, [r6]
   16754:	b	16400 <__flatcc_fb_codegen_c@@Base+0x780>
   16758:	ldr	r3, [r6, #16]
   1675c:	ldr	r2, [pc, #524]	; 16970 <__flatcc_fb_codegen_c@@Base+0xcf0>
   16760:	cmp	r3, #5
   16764:	moveq	r2, r4
   16768:	mov	r0, r3
   1676c:	str	r2, [sp, #32]
   16770:	str	r3, [sp, #28]
   16774:	bl	16044 <__flatcc_fb_codegen_c@@Base+0x3c4>
   16778:	ldr	r3, [sp, #28]
   1677c:	str	r0, [sp, #24]
   16780:	mov	r0, r3
   16784:	bl	16158 <__flatcc_fb_codegen_c@@Base+0x4d8>
   16788:	ldr	r1, [sp, #24]
   1678c:	ldr	r2, [sp, #32]
   16790:	str	r1, [sp, #20]
   16794:	str	r2, [sp, #16]
   16798:	str	r4, [sp, #8]
   1679c:	stm	sp, {r7, r8}
   167a0:	mov	r3, r5
   167a4:	mov	r2, r4
   167a8:	ldr	r1, [pc, #592]	; 16a00 <__flatcc_fb_codegen_c@@Base+0xd80>
   167ac:	str	r0, [sp, #12]
   167b0:	ldr	r0, [r4, #204]	; 0xcc
   167b4:	bl	140e4 <fprintf@plt>
   167b8:	b	1672c <__flatcc_fb_codegen_c@@Base+0xaac>
   167bc:	mov	r1, sl
   167c0:	ldr	r0, [r6, #16]
   167c4:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   167c8:	ldr	r3, [r6, #16]
   167cc:	ldrh	r2, [r3, #8]
   167d0:	cmp	r2, #1
   167d4:	beq	16938 <__flatcc_fb_codegen_c@@Base+0xcb8>
   167d8:	cmp	r2, #3
   167dc:	bne	1672c <__flatcc_fb_codegen_c@@Base+0xaac>
   167e0:	ldr	r0, [r3, #40]	; 0x28
   167e4:	bl	16158 <__flatcc_fb_codegen_c@@Base+0x4d8>
   167e8:	mov	r3, r5
   167ec:	str	sl, [sp, #12]
   167f0:	stm	sp, {r7, r8, sl}
   167f4:	mov	r2, r4
   167f8:	ldr	r1, [pc, #516]	; 16a04 <__flatcc_fb_codegen_c@@Base+0xd84>
   167fc:	ldr	r0, [r4, #204]	; 0xcc
   16800:	bl	140e4 <fprintf@plt>
   16804:	ldr	r3, [r4, #212]	; 0xd4
   16808:	ldr	r3, [r3, #32]
   1680c:	cmp	r3, #0
   16810:	bne	16838 <__flatcc_fb_codegen_c@@Base+0xbb8>
   16814:	ldrh	r3, [r6, #72]	; 0x48
   16818:	tst	r3, #128	; 0x80
   1681c:	beq	16838 <__flatcc_fb_codegen_c@@Base+0xbb8>
   16820:	stm	sp, {r7, r8, sl}
   16824:	mov	r3, r5
   16828:	mov	r2, r4
   1682c:	ldr	r1, [pc, #468]	; 16a08 <__flatcc_fb_codegen_c@@Base+0xd88>
   16830:	ldr	r0, [r4, #204]	; 0xcc
   16834:	bl	140e4 <fprintf@plt>
   16838:	ldrh	r3, [r6, #72]	; 0x48
   1683c:	tst	r3, #128	; 0x80
   16840:	beq	1672c <__flatcc_fb_codegen_c@@Base+0xaac>
   16844:	cmp	r9, #0
   16848:	beq	16858 <__flatcc_fb_codegen_c@@Base+0xbd8>
   1684c:	ldr	r1, [r4, #204]	; 0xcc
   16850:	ldr	r0, [pc, #436]	; 16a0c <__flatcc_fb_codegen_c@@Base+0xd8c>
   16854:	bl	14180 <fputs@plt>
   16858:	ldr	r1, [r4, #204]	; 0xcc
   1685c:	ldr	r0, [pc, #428]	; 16a10 <__flatcc_fb_codegen_c@@Base+0xd90>
   16860:	bl	14180 <fputs@plt>
   16864:	add	r3, sp, #260	; 0x104
   16868:	str	r3, [sp, #8]
   1686c:	stm	sp, {r7, r8}
   16870:	mov	r3, r5
   16874:	mov	r2, r4
   16878:	ldr	r1, [pc, #404]	; 16a14 <__flatcc_fb_codegen_c@@Base+0xd94>
   1687c:	ldr	r0, [r4, #204]	; 0xcc
   16880:	bl	140e4 <fprintf@plt>
   16884:	ldr	r3, [r4, #212]	; 0xd4
   16888:	ldr	r3, [r3, #136]	; 0x88
   1688c:	cmp	r3, #0
   16890:	beq	168b8 <__flatcc_fb_codegen_c@@Base+0xc38>
   16894:	add	r3, sp, #260	; 0x104
   16898:	str	r3, [sp, #8]
   1689c:	str	r5, [sp, #12]
   168a0:	stm	sp, {r7, r8}
   168a4:	mov	r3, r5
   168a8:	mov	r2, r4
   168ac:	ldr	r1, [pc, #356]	; 16a18 <__flatcc_fb_codegen_c@@Base+0xd98>
   168b0:	ldr	r0, [r4, #204]	; 0xcc
   168b4:	bl	140e4 <fprintf@plt>
   168b8:	cmp	r9, #0
   168bc:	beq	168cc <__flatcc_fb_codegen_c@@Base+0xc4c>
   168c0:	mov	r9, #1
   168c4:	mov	fp, r9
   168c8:	b	1672c <__flatcc_fb_codegen_c@@Base+0xaac>
   168cc:	add	r3, sp, #260	; 0x104
   168d0:	str	r3, [sp, #8]
   168d4:	mov	r2, r4
   168d8:	mov	r3, r5
   168dc:	ldr	r1, [pc, #312]	; 16a1c <__flatcc_fb_codegen_c@@Base+0xd9c>
   168e0:	stm	sp, {r7, r8}
   168e4:	ldr	r0, [r4, #204]	; 0xcc
   168e8:	bl	140e4 <fprintf@plt>
   168ec:	add	r3, sp, #260	; 0x104
   168f0:	str	r3, [sp, #8]
   168f4:	stm	sp, {r7, r8}
   168f8:	mov	r3, r5
   168fc:	mov	r2, r4
   16900:	ldr	r1, [pc, #280]	; 16a20 <__flatcc_fb_codegen_c@@Base+0xda0>
   16904:	ldr	r0, [r4, #204]	; 0xcc
   16908:	bl	140e4 <fprintf@plt>
   1690c:	ldr	r3, [r4, #212]	; 0xd4
   16910:	ldr	r3, [r3, #136]	; 0x88
   16914:	cmp	r3, #0
   16918:	beq	168c0 <__flatcc_fb_codegen_c@@Base+0xc40>
   1691c:	stm	sp, {r7, r8}
   16920:	mov	r3, r5
   16924:	mov	r2, r5
   16928:	ldr	r1, [pc, #244]	; 16a24 <__flatcc_fb_codegen_c@@Base+0xda4>
   1692c:	ldr	r0, [r4, #204]	; 0xcc
   16930:	bl	140e4 <fprintf@plt>
   16934:	b	168c0 <__flatcc_fb_codegen_c@@Base+0xc40>
   16938:	stm	sp, {r7, r8, sl}
   1693c:	mov	r3, r5
   16940:	mov	r2, r4
   16944:	ldr	r1, [pc, #220]	; 16a28 <__flatcc_fb_codegen_c@@Base+0xda8>
   16948:	ldr	r0, [r4, #204]	; 0xcc
   1694c:	bl	140e4 <fprintf@plt>
   16950:	b	1672c <__flatcc_fb_codegen_c@@Base+0xaac>
   16954:	muleq	r3, r1, r8
   16958:	andeq	r1, r3, sl, lsl #18
   1695c:	andeq	r1, r3, sp, asr #23
   16960:	andeq	r0, r0, r9, lsr #7
   16964:	andeq	r1, r3, sp, ror #23
   16968:	andeq	r0, r0, sl, lsr #7
   1696c:	andeq	r1, r3, sp, lsl #24
   16970:	andeq	r2, r3, sp, lsl pc
   16974:	andeq	r1, r3, ip, lsr #24
   16978:	andeq	r1, r3, sp, lsl #25
   1697c:	andeq	r1, r3, r1, ror #25
   16980:	andeq	r1, r3, r3, lsr #26
   16984:	andeq	r2, r3, pc, lsr #32
   16988:	andeq	r2, r3, r1, rrx
   1698c:	andeq	r2, r3, r1, lsr #1
   16990:	andeq	r1, r3, r0, ror sp
   16994:	andeq	r1, r3, r1, lsl #27
   16998:	andeq	r1, r3, lr, lsl #27
   1699c:	andeq	sl, r3, r0, lsr #6
   169a0:	andeq	r1, r3, fp, ror #29
   169a4:	strdeq	r1, [r3], -fp
   169a8:	andeq	r1, r3, sl, lsr pc
   169ac:	muleq	r3, r2, pc	; <UNPREDICTABLE>
   169b0:	ldrdeq	r1, [r3], -r8
   169b4:	strdeq	r6, [r4], -r9
   169b8:	andeq	r1, r3, ip, lsr #27
   169bc:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   169c0:			; <UNDEFINED> instruction: 0x00031ebd
   169c4:	ldrdeq	r1, [r3], -ip
   169c8:	strheq	ip, [r5], -r0
   169cc:	andeq	r1, r3, r5, ror fp
   169d0:	andeq	r1, r3, sl, ror #22
   169d4:	andeq	r0, r0, r5, lsl #8
   169d8:	andeq	sl, r3, r9, asr #3
   169dc:	andeq	r1, r3, lr, lsl lr
   169e0:	andeq	r1, r3, r8, lsr #28
   169e4:	strdeq	r0, [r0], -sl
   169e8:	andeq	r1, r3, lr, lsr lr
   169ec:	andeq	r1, r3, r7, asr #23
   169f0:	muleq	r3, r9, lr
   169f4:	andeq	r1, r3, r4, ror #29
   169f8:	andeq	r1, r3, r5, lsr #29
   169fc:	andeq	r2, r3, sp, lsr #6
   16a00:	strheq	r2, [r3], -r9
   16a04:	andeq	r2, r3, pc, ror #1
   16a08:	andeq	r2, r3, r8, lsr #2
   16a0c:	andeq	r2, r3, lr, asr r1
   16a10:	andeq	r2, r3, r1, lsr #3
   16a14:	ldrdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   16a18:	andeq	r2, r3, r5, lsl r2
   16a1c:	andeq	r2, r3, r1, asr r2
   16a20:	andeq	r2, r3, pc, lsl #5
   16a24:	andeq	r2, r3, sp, asr #5
   16a28:	strdeq	r2, [r3], -r6
   16a2c:	push	{r0, r1, r2, lr}
   16a30:	sub	r0, r0, #1
   16a34:	cmp	r0, #8
   16a38:	ldrls	pc, [pc, r0, lsl #2]
   16a3c:	b	16a98 <__flatcc_fb_codegen_c@@Base+0xe18>
   16a40:	andeq	r6, r1, ip, asr #21
   16a44:	andeq	r6, r1, r4, ror #20
   16a48:	ldrdeq	r6, [r1], -r4
   16a4c:	andeq	r6, r1, r0, ror sl
   16a50:	andeq	r6, r1, r0, ror sl
   16a54:	andeq	r6, r1, r8, ror sl
   16a58:	andeq	r6, r1, r0, lsl #21
   16a5c:	andeq	r6, r1, r8, lsl #21
   16a60:	muleq	r1, r0, sl
   16a64:	ldr	r0, [pc, #112]	; 16adc <__flatcc_fb_codegen_c@@Base+0xe5c>
   16a68:	add	sp, sp, #12
   16a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a70:	ldr	r0, [pc, #104]	; 16ae0 <__flatcc_fb_codegen_c@@Base+0xe60>
   16a74:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16a78:	ldr	r0, [pc, #100]	; 16ae4 <__flatcc_fb_codegen_c@@Base+0xe64>
   16a7c:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16a80:	ldr	r0, [pc, #96]	; 16ae8 <__flatcc_fb_codegen_c@@Base+0xe68>
   16a84:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16a88:	ldr	r0, [pc, #92]	; 16aec <__flatcc_fb_codegen_c@@Base+0xe6c>
   16a8c:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16a90:	ldr	r0, [pc, #88]	; 16af0 <__flatcc_fb_codegen_c@@Base+0xe70>
   16a94:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16a98:	ldr	r0, [pc, #84]	; 16af4 <__flatcc_fb_codegen_c@@Base+0xe74>
   16a9c:	ldr	r3, [pc, #84]	; 16af8 <__flatcc_fb_codegen_c@@Base+0xe78>
   16aa0:	ldr	r2, [pc, #84]	; 16afc <__flatcc_fb_codegen_c@@Base+0xe7c>
   16aa4:	str	r3, [sp]
   16aa8:	ldr	r1, [pc, #80]	; 16b00 <__flatcc_fb_codegen_c@@Base+0xe80>
   16aac:	mov	r3, #226	; 0xe2
   16ab0:	ldr	r0, [r0]
   16ab4:	bl	140e4 <fprintf@plt>
   16ab8:	ldr	r3, [pc, #68]	; 16b04 <__flatcc_fb_codegen_c@@Base+0xe84>
   16abc:	mov	r2, #226	; 0xe2
   16ac0:	ldr	r1, [pc, #52]	; 16afc <__flatcc_fb_codegen_c@@Base+0xe7c>
   16ac4:	ldr	r0, [pc, #60]	; 16b08 <__flatcc_fb_codegen_c@@Base+0xe88>
   16ac8:	bl	141a4 <__assert_fail@plt>
   16acc:	ldr	r0, [pc, #56]	; 16b0c <__flatcc_fb_codegen_c@@Base+0xe8c>
   16ad0:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16ad4:	ldr	r0, [pc, #52]	; 16b10 <__flatcc_fb_codegen_c@@Base+0xe90>
   16ad8:	b	16a68 <__flatcc_fb_codegen_c@@Base+0xde8>
   16adc:	andeq	r2, r3, fp, lsl #7
   16ae0:	muleq	r3, sp, r3
   16ae4:	andeq	r2, r3, r3, lsl #7
   16ae8:	andeq	r2, r3, ip, lsl #7
   16aec:	muleq	r3, r5, r3
   16af0:	muleq	r3, lr, r3
   16af4:	strheq	ip, [r5], -r0
   16af8:	andeq	r1, r3, r5, ror fp
   16afc:	andeq	r1, r3, r1, lsr #22
   16b00:	andeq	r1, r3, sl, ror #22
   16b04:	muleq	r3, ip, r8
   16b08:	andeq	sl, r3, r9, asr #3
   16b0c:	andeq	r2, r3, r2, lsl #7
   16b10:	muleq	r3, r4, r3
   16b14:	ldrh	r3, [r1, #8]
   16b18:	push	{r0, r1, r2, r4, r5, lr}
   16b1c:	mov	r4, r1
   16b20:	sub	r3, r3, #3
   16b24:	mov	r5, r2
   16b28:	cmp	r3, #3
   16b2c:	ldrls	pc, [pc, r3, lsl #2]
   16b30:	b	16bd0 <__flatcc_fb_codegen_c@@Base+0xf50>
   16b34:	andeq	r6, r1, r0, lsr #23
   16b38:	andeq	r6, r1, r8, ror #22
   16b3c:	andeq	r6, r1, r4, asr #22
   16b40:	andeq	r6, r1, r0, lsl #23
   16b44:	bl	16a2c <__flatcc_fb_codegen_c@@Base+0xdac>
   16b48:	ldrd	r2, [r4]
   16b4c:	ldr	r1, [pc, #176]	; 16c04 <__flatcc_fb_codegen_c@@Base+0xf84>
   16b50:	strd	r2, [sp]
   16b54:	mov	r2, r0
   16b58:	mov	r0, r5
   16b5c:	bl	14150 <sprintf@plt>
   16b60:	add	sp, sp, #12
   16b64:	pop	{r4, r5, pc}
   16b68:	bl	16a2c <__flatcc_fb_codegen_c@@Base+0xdac>
   16b6c:	ldrd	r2, [r4]
   16b70:	ldr	r1, [pc, #144]	; 16c08 <__flatcc_fb_codegen_c@@Base+0xf88>
   16b74:	strd	r2, [sp]
   16b78:	mov	r2, r0
   16b7c:	b	16b58 <__flatcc_fb_codegen_c@@Base+0xed8>
   16b80:	bl	16a2c <__flatcc_fb_codegen_c@@Base+0xdac>
   16b84:	ldrb	r3, [r4]
   16b88:	ldr	r1, [pc, #124]	; 16c0c <__flatcc_fb_codegen_c@@Base+0xf8c>
   16b8c:	mov	r2, r0
   16b90:	mov	r0, r5
   16b94:	add	sp, sp, #12
   16b98:	pop	{r4, r5, lr}
   16b9c:	b	14150 <sprintf@plt>
   16ba0:	cmp	r0, #11
   16ba4:	mov	r0, r5
   16ba8:	vldreq	d7, [r1]
   16bac:	ldrdne	r2, [r4]
   16bb0:	ldreq	r1, [pc, #88]	; 16c10 <__flatcc_fb_codegen_c@@Base+0xf90>
   16bb4:	ldrne	r1, [pc, #88]	; 16c14 <__flatcc_fb_codegen_c@@Base+0xf94>
   16bb8:	vcvteq.f32.f64	s14, d7
   16bbc:	vcvteq.f64.f32	d7, s14
   16bc0:	vmoveq	r2, r3, d7
   16bc4:	add	sp, sp, #12
   16bc8:	pop	{r4, r5, lr}
   16bcc:	b	14150 <sprintf@plt>
   16bd0:	ldr	r0, [pc, #64]	; 16c18 <__flatcc_fb_codegen_c@@Base+0xf98>
   16bd4:	ldr	r3, [pc, #64]	; 16c1c <__flatcc_fb_codegen_c@@Base+0xf9c>
   16bd8:	ldr	r2, [pc, #64]	; 16c20 <__flatcc_fb_codegen_c@@Base+0xfa0>
   16bdc:	str	r3, [sp]
   16be0:	ldr	r1, [pc, #60]	; 16c24 <__flatcc_fb_codegen_c@@Base+0xfa4>
   16be4:	mov	r3, #260	; 0x104
   16be8:	ldr	r0, [r0]
   16bec:	bl	140e4 <fprintf@plt>
   16bf0:	ldr	r3, [pc, #48]	; 16c28 <__flatcc_fb_codegen_c@@Base+0xfa8>
   16bf4:	mov	r2, #260	; 0x104
   16bf8:	ldr	r1, [pc, #32]	; 16c20 <__flatcc_fb_codegen_c@@Base+0xfa0>
   16bfc:	ldr	r0, [pc, #40]	; 16c2c <__flatcc_fb_codegen_c@@Base+0xfac>
   16c00:	bl	141a4 <__assert_fail@plt>
   16c04:	andeq	r2, r3, r5, lsr #7
   16c08:	andeq	r2, r3, lr, lsr #7
   16c0c:			; <UNDEFINED> instruction: 0x000323b7
   16c10:			; <UNDEFINED> instruction: 0x000323be
   16c14:	andeq	r2, r3, r2, asr #7
   16c18:	strheq	ip, [r5], -r0
   16c1c:	andeq	r1, r3, r5, ror fp
   16c20:	andeq	r1, r3, r1, lsr #22
   16c24:	andeq	r1, r3, sl, ror #22
   16c28:	andeq	r1, r3, r8, lsr #17
   16c2c:	andeq	sl, r3, r9, asr #3
   16c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c34:	sub	sp, sp, #348	; 0x15c
   16c38:	mov	r6, r1
   16c3c:	add	r5, sp, #124	; 0x7c
   16c40:	mov	r4, r0
   16c44:	mov	r2, #220	; 0xdc
   16c48:	mov	r1, #0
   16c4c:	mov	r0, r5
   16c50:	bl	140fc <memset@plt>
   16c54:	ldrh	r7, [r6, #8]
   16c58:	sub	r3, r7, #3
   16c5c:	cmp	r3, #1
   16c60:	bls	16c78 <__flatcc_fb_codegen_c@@Base+0xff8>
   16c64:	ldr	r3, [pc, #644]	; 16ef0 <__flatcc_fb_codegen_c@@Base+0x1270>
   16c68:	ldr	r2, [pc, #644]	; 16ef4 <__flatcc_fb_codegen_c@@Base+0x1274>
   16c6c:	ldr	r1, [pc, #644]	; 16ef8 <__flatcc_fb_codegen_c@@Base+0x1278>
   16c70:	ldr	r0, [pc, #644]	; 16efc <__flatcc_fb_codegen_c@@Base+0x127c>
   16c74:	bl	141a4 <__assert_fail@plt>
   16c78:	ldrh	r3, [r6, #48]	; 0x30
   16c7c:	cmp	r3, #8
   16c80:	ldrne	r3, [pc, #616]	; 16ef0 <__flatcc_fb_codegen_c@@Base+0x1270>
   16c84:	ldrne	r2, [pc, #628]	; 16f00 <__flatcc_fb_codegen_c@@Base+0x1280>
   16c88:	ldrne	r1, [pc, #616]	; 16ef8 <__flatcc_fb_codegen_c@@Base+0x1278>
   16c8c:	ldrne	r0, [pc, #624]	; 16f04 <__flatcc_fb_codegen_c@@Base+0x1284>
   16c90:	bne	16c74 <__flatcc_fb_codegen_c@@Base+0xff4>
   16c94:	ldr	r0, [r6, #40]	; 0x28
   16c98:	ldr	sl, [pc, #616]	; 16f08 <__flatcc_fb_codegen_c@@Base+0x1288>
   16c9c:	cmp	r0, #5
   16ca0:	moveq	fp, r4
   16ca4:	movne	fp, sl
   16ca8:	bl	16044 <__flatcc_fb_codegen_c@@Base+0x3c4>
   16cac:	ldr	r2, [pc, #600]	; 16f0c <__flatcc_fb_codegen_c@@Base+0x128c>
   16cb0:	ldr	r9, [r6, #112]	; 0x70
   16cb4:	cmp	r7, #3
   16cb8:	ldr	r8, [pc, #592]	; 16f10 <__flatcc_fb_codegen_c@@Base+0x1290>
   16cbc:	mov	r1, r5
   16cc0:	moveq	r8, r2
   16cc4:	lsl	r9, r9, #3
   16cc8:	str	r0, [sp, #20]
   16ccc:	mov	r0, r6
   16cd0:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16cd4:	add	r3, r4, #204	; 0xcc
   16cd8:	mov	r0, r3
   16cdc:	ldr	r2, [r6, #32]
   16ce0:	mov	r1, sl
   16ce4:	str	r3, [sp, #16]
   16ce8:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   16cec:	ldr	r3, [sp, #20]
   16cf0:	mov	r2, fp
   16cf4:	ldr	r1, [pc, #536]	; 16f14 <__flatcc_fb_codegen_c@@Base+0x1294>
   16cf8:	stm	sp, {r5, r8}
   16cfc:	ldr	r0, [r4, #204]	; 0xcc
   16d00:	bl	140e4 <fprintf@plt>
   16d04:	stm	sp, {r5, r8, r9}
   16d08:	mov	r3, r5
   16d0c:	mov	r2, r4
   16d10:	ldr	r1, [pc, #512]	; 16f18 <__flatcc_fb_codegen_c@@Base+0x1298>
   16d14:	ldr	r0, [r4, #204]	; 0xcc
   16d18:	bl	140e4 <fprintf@plt>
   16d1c:	cmp	r7, #3
   16d20:	beq	16d3c <__flatcc_fb_codegen_c@@Base+0x10bc>
   16d24:	str	r5, [sp]
   16d28:	mov	r3, r4
   16d2c:	mov	r2, r4
   16d30:	ldr	r1, [pc, #484]	; 16f1c <__flatcc_fb_codegen_c@@Base+0x129c>
   16d34:	ldr	r0, [r4, #204]	; 0xcc
   16d38:	bl	140e4 <fprintf@plt>
   16d3c:	ldr	r9, [r6, #20]
   16d40:	add	sl, sp, #24
   16d44:	cmp	r9, #0
   16d48:	bne	16e08 <__flatcc_fb_codegen_c@@Base+0x1188>
   16d4c:	ldr	r1, [r4, #204]	; 0xcc
   16d50:	mov	r0, #10
   16d54:	bl	14144 <fputc@plt>
   16d58:	cmp	r7, #3
   16d5c:	mov	r3, r5
   16d60:	mov	r2, r5
   16d64:	beq	16e5c <__flatcc_fb_codegen_c@@Base+0x11dc>
   16d68:	ldr	r1, [pc, #432]	; 16f20 <__flatcc_fb_codegen_c@@Base+0x12a0>
   16d6c:	ldr	r0, [r4, #204]	; 0xcc
   16d70:	bl	140e4 <fprintf@plt>
   16d74:	ldr	r1, [r4, #204]	; 0xcc
   16d78:	ldr	r0, [pc, #420]	; 16f24 <__flatcc_fb_codegen_c@@Base+0x12a4>
   16d7c:	bl	14180 <fputs@plt>
   16d80:	ldr	r9, [pc, #416]	; 16f28 <__flatcc_fb_codegen_c@@Base+0x12a8>
   16d84:	ldr	r8, [r6, #20]
   16d88:	ldr	sl, [pc, #412]	; 16f2c <__flatcc_fb_codegen_c@@Base+0x12ac>
   16d8c:	cmp	r8, #0
   16d90:	bne	16e74 <__flatcc_fb_codegen_c@@Base+0x11f4>
   16d94:	ldr	r1, [r4, #204]	; 0xcc
   16d98:	ldr	r0, [pc, #400]	; 16f30 <__flatcc_fb_codegen_c@@Base+0x12b0>
   16d9c:	bl	14180 <fputs@plt>
   16da0:	ldr	r1, [r4, #204]	; 0xcc
   16da4:	mov	r0, #10
   16da8:	bl	14144 <fputc@plt>
   16dac:	cmp	r7, #3
   16db0:	mov	r3, r5
   16db4:	mov	r2, r5
   16db8:	beq	16ea8 <__flatcc_fb_codegen_c@@Base+0x1228>
   16dbc:	ldr	r1, [pc, #368]	; 16f34 <__flatcc_fb_codegen_c@@Base+0x12b4>
   16dc0:	ldr	r0, [r4, #204]	; 0xcc
   16dc4:	bl	140e4 <fprintf@plt>
   16dc8:	ldr	r1, [r4, #204]	; 0xcc
   16dcc:	ldr	r0, [pc, #336]	; 16f24 <__flatcc_fb_codegen_c@@Base+0x12a4>
   16dd0:	bl	14180 <fputs@plt>
   16dd4:	ldr	r7, [pc, #348]	; 16f38 <__flatcc_fb_codegen_c@@Base+0x12b8>
   16dd8:	ldr	r6, [r6, #20]
   16ddc:	ldr	r8, [pc, #344]	; 16f3c <__flatcc_fb_codegen_c@@Base+0x12bc>
   16de0:	cmp	r6, #0
   16de4:	bne	16ec0 <__flatcc_fb_codegen_c@@Base+0x1240>
   16de8:	ldr	r1, [r4, #204]	; 0xcc
   16dec:	ldr	r0, [pc, #332]	; 16f40 <__flatcc_fb_codegen_c@@Base+0x12c0>
   16df0:	bl	14180 <fputs@plt>
   16df4:	ldr	r1, [r4, #204]	; 0xcc
   16df8:	mov	r0, #10
   16dfc:	bl	14144 <fputc@plt>
   16e00:	add	sp, sp, #348	; 0x15c
   16e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e08:	ldr	r2, [r9, #68]	; 0x44
   16e0c:	ldr	r1, [pc, #244]	; 16f08 <__flatcc_fb_codegen_c@@Base+0x1288>
   16e10:	ldr	r0, [sp, #16]
   16e14:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   16e18:	ldr	r2, [r9, #4]
   16e1c:	add	r1, r9, #48	; 0x30
   16e20:	ldr	r0, [r6, #40]	; 0x28
   16e24:	ldr	r3, [r2, #4]
   16e28:	ldr	fp, [r2]
   16e2c:	mov	r2, sl
   16e30:	str	r3, [sp, #20]
   16e34:	bl	16b14 <__flatcc_fb_codegen_c@@Base+0xe94>
   16e38:	stmib	sp, {r5, r8, sl}
   16e3c:	mov	r2, r5
   16e40:	str	fp, [sp]
   16e44:	ldr	r3, [sp, #20]
   16e48:	ldr	r1, [pc, #244]	; 16f44 <__flatcc_fb_codegen_c@@Base+0x12c4>
   16e4c:	ldr	r0, [r4, #204]	; 0xcc
   16e50:	bl	140e4 <fprintf@plt>
   16e54:	ldr	r9, [r9]
   16e58:	b	16d44 <__flatcc_fb_codegen_c@@Base+0x10c4>
   16e5c:	ldr	r1, [pc, #228]	; 16f48 <__flatcc_fb_codegen_c@@Base+0x12c8>
   16e60:	ldr	r0, [r4, #204]	; 0xcc
   16e64:	bl	140e4 <fprintf@plt>
   16e68:	ldr	r1, [r4, #204]	; 0xcc
   16e6c:	ldr	r0, [pc, #216]	; 16f4c <__flatcc_fb_codegen_c@@Base+0x12cc>
   16e70:	b	16d7c <__flatcc_fb_codegen_c@@Base+0x10fc>
   16e74:	ldr	r2, [r8, #4]
   16e78:	ldrh	r1, [r8, #10]
   16e7c:	ldr	r0, [r4, #204]	; 0xcc
   16e80:	ldm	r2, {r2, r3}
   16e84:	tst	r1, #4
   16e88:	movne	r1, sl
   16e8c:	str	r2, [sp, #8]
   16e90:	stm	sp, {r2, r3}
   16e94:	moveq	r1, r9
   16e98:	mov	r2, r5
   16e9c:	bl	140e4 <fprintf@plt>
   16ea0:	ldr	r8, [r8]
   16ea4:	b	16d8c <__flatcc_fb_codegen_c@@Base+0x110c>
   16ea8:	ldr	r1, [pc, #160]	; 16f50 <__flatcc_fb_codegen_c@@Base+0x12d0>
   16eac:	ldr	r0, [r4, #204]	; 0xcc
   16eb0:	bl	140e4 <fprintf@plt>
   16eb4:	ldr	r1, [r4, #204]	; 0xcc
   16eb8:	ldr	r0, [pc, #140]	; 16f4c <__flatcc_fb_codegen_c@@Base+0x12cc>
   16ebc:	b	16dd0 <__flatcc_fb_codegen_c@@Base+0x1150>
   16ec0:	ldr	r2, [r6, #4]
   16ec4:	ldrh	r1, [r6, #10]
   16ec8:	ldr	r0, [r4, #204]	; 0xcc
   16ecc:	ldm	r2, {r2, r3}
   16ed0:	tst	r1, #4
   16ed4:	movne	r1, r8
   16ed8:	str	r2, [sp]
   16edc:	moveq	r1, r7
   16ee0:	mov	r2, r5
   16ee4:	bl	140e4 <fprintf@plt>
   16ee8:	ldr	r6, [r6]
   16eec:	b	16de0 <__flatcc_fb_codegen_c@@Base+0x1160>
   16ef0:			; <UNDEFINED> instruction: 0x000318b6
   16ef4:			; <UNDEFINED> instruction: 0x000004b4
   16ef8:	andeq	r1, r3, sl, lsl #18
   16efc:	ldrdeq	r2, [r3], -r1
   16f00:			; <UNDEFINED> instruction: 0x000004b5
   16f04:	andeq	r2, r3, r1, lsl r4
   16f08:	andeq	r2, r3, sp, lsl pc
   16f0c:	andeq	r9, r4, sp, lsl r0
   16f10:	andeq	r2, r3, r6, asr #7
   16f14:	andeq	r2, r3, r1, lsr r4
   16f18:	andeq	r2, r3, r8, asr #8
   16f1c:	andeq	r2, r3, r2, ror r4
   16f20:	andeq	r2, r3, fp, lsr #9
   16f24:	strdeq	r7, [r4], -r3
   16f28:	andeq	r2, r3, fp, ror #10
   16f2c:	andeq	r2, r3, r7, lsr r5
   16f30:	andeq	r2, r3, sp, lsl #11
   16f34:	andeq	r2, r3, lr, lsr #11
   16f38:	andeq	r2, r3, r1, asr r6
   16f3c:	andeq	r2, r3, r2, lsr #12
   16f40:	andeq	r2, r3, lr, ror #12
   16f44:	andeq	r2, r3, ip, lsl #9
   16f48:	andeq	r2, r3, fp, ror #9
   16f4c:	andeq	r2, r3, r1, lsr #10
   16f50:	andeq	r2, r3, sl, ror #11
   16f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f58:	sub	sp, sp, #1040	; 0x410
   16f5c:	ldrh	r8, [r1, #8]
   16f60:	sub	sp, sp, #4
   16f64:	cmp	r8, #0
   16f68:	str	r1, [sp, #40]	; 0x28
   16f6c:	beq	16f84 <__flatcc_fb_codegen_c@@Base+0x1304>
   16f70:	ldr	r3, [pc, #2356]	; 178ac <__flatcc_fb_codegen_c@@Base+0x1c2c>
   16f74:	ldr	r2, [pc, #2356]	; 178b0 <__flatcc_fb_codegen_c@@Base+0x1c30>
   16f78:	ldr	r1, [pc, #2356]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   16f7c:	ldr	r0, [pc, #2356]	; 178b8 <__flatcc_fb_codegen_c@@Base+0x1c38>
   16f80:	bl	141a4 <__assert_fail@plt>
   16f84:	add	r5, sp, #160	; 0xa0
   16f88:	mov	r4, r0
   16f8c:	mov	r2, #220	; 0xdc
   16f90:	mov	r1, r8
   16f94:	mov	r0, r5
   16f98:	bl	140fc <memset@plt>
   16f9c:	mov	r2, #220	; 0xdc
   16fa0:	mov	r1, r8
   16fa4:	add	r0, sp, #380	; 0x17c
   16fa8:	bl	140fc <memset@plt>
   16fac:	mov	r3, r4
   16fb0:	mov	r0, #10
   16fb4:	ldr	r1, [r3, #204]!	; 0xcc
   16fb8:	str	r3, [sp, #44]	; 0x2c
   16fbc:	bl	14144 <fputc@plt>
   16fc0:	mov	r1, r5
   16fc4:	ldr	r0, [sp, #40]	; 0x28
   16fc8:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   16fcc:	ldr	r3, [sp, #40]	; 0x28
   16fd0:	ldr	r1, [pc, #2276]	; 178bc <__flatcc_fb_codegen_c@@Base+0x1c3c>
   16fd4:	ldr	r0, [sp, #44]	; 0x2c
   16fd8:	ldr	r2, [r3, #32]
   16fdc:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   16fe0:	mov	r2, r5
   16fe4:	ldr	r1, [pc, #2260]	; 178c0 <__flatcc_fb_codegen_c@@Base+0x1c40>
   16fe8:	ldr	r0, [r4, #204]	; 0xcc
   16fec:	bl	140e4 <fprintf@plt>
   16ff0:	mov	r3, r5
   16ff4:	mov	r2, r5
   16ff8:	str	r4, [sp]
   16ffc:	ldr	r1, [pc, #2240]	; 178c4 <__flatcc_fb_codegen_c@@Base+0x1c44>
   17000:	ldr	r0, [r4, #204]	; 0xcc
   17004:	bl	140e4 <fprintf@plt>
   17008:	stmib	sp, {r4, r5}
   1700c:	str	r5, [sp]
   17010:	mov	r3, r5
   17014:	mov	r2, r5
   17018:	ldr	r1, [pc, #2216]	; 178c8 <__flatcc_fb_codegen_c@@Base+0x1c48>
   1701c:	ldr	r0, [r4, #204]	; 0xcc
   17020:	bl	140e4 <fprintf@plt>
   17024:	mov	r3, r5
   17028:	mov	r2, r4
   1702c:	ldr	r1, [pc, #2200]	; 178cc <__flatcc_fb_codegen_c@@Base+0x1c4c>
   17030:	ldr	r0, [r4, #204]	; 0xcc
   17034:	bl	140e4 <fprintf@plt>
   17038:	ldr	r1, [r4, #204]	; 0xcc
   1703c:	mov	r0, #10
   17040:	bl	14144 <fputc@plt>
   17044:	ldr	r3, [sp, #40]	; 0x28
   17048:	ldr	r5, [r3, #20]
   1704c:	cmp	r5, #0
   17050:	bne	17060 <__flatcc_fb_codegen_c@@Base+0x13e0>
   17054:	add	sp, sp, #1040	; 0x410
   17058:	add	sp, sp, #4
   1705c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17060:	ldr	r2, [r5, #68]	; 0x44
   17064:	ldr	r1, [pc, #2128]	; 178bc <__flatcc_fb_codegen_c@@Base+0x1c3c>
   17068:	ldr	r0, [sp, #44]	; 0x2c
   1706c:	bl	15fa4 <__flatcc_fb_codegen_c@@Base+0x324>
   17070:	ldrh	fp, [r5, #72]	; 0x48
   17074:	ldr	r3, [r5, #4]
   17078:	add	r9, sp, #160	; 0xa0
   1707c:	tst	fp, #4
   17080:	ldr	r6, [r3, #4]
   17084:	ldr	r7, [r3]
   17088:	beq	170ac <__flatcc_fb_codegen_c@@Base+0x142c>
   1708c:	str	r7, [sp]
   17090:	mov	r3, r6
   17094:	mov	r2, r9
   17098:	ldr	r1, [pc, #2096]	; 178d0 <__flatcc_fb_codegen_c@@Base+0x1c50>
   1709c:	ldr	r0, [r4, #204]	; 0xcc
   170a0:	bl	140e4 <fprintf@plt>
   170a4:	ldr	r5, [r5]
   170a8:	b	1704c <__flatcc_fb_codegen_c@@Base+0x13cc>
   170ac:	ldrh	r3, [r5, #24]
   170b0:	lsr	fp, fp, #8
   170b4:	and	fp, fp, #1
   170b8:	sub	r3, r3, #7
   170bc:	cmp	r3, #8
   170c0:	ldrls	pc, [pc, r3, lsl #2]
   170c4:	b	17878 <__flatcc_fb_codegen_c@@Base+0x1bf8>
   170c8:	andeq	r7, r1, ip, lsr #5
   170cc:	andeq	r7, r1, ip, ror #1
   170d0:	muleq	r1, ip, r5
   170d4:	andeq	r7, r1, ip, lsl #9
   170d8:	andeq	r7, r1, r8, ror r8
   170dc:	andeq	r7, r1, r8, ror r8
   170e0:	andeq	r7, r1, r8, ror r8
   170e4:	andeq	r7, r1, ip, asr #11
   170e8:	andeq	r7, r1, r0, ror #15
   170ec:	ldr	fp, [r5, #16]
   170f0:	ldr	r9, [pc, #1988]	; 178bc <__flatcc_fb_codegen_c@@Base+0x1c3c>
   170f4:	cmp	fp, #5
   170f8:	mov	r0, fp
   170fc:	moveq	r9, r4
   17100:	bl	16044 <__flatcc_fb_codegen_c@@Base+0x3c4>
   17104:	mov	sl, r0
   17108:	mov	r0, fp
   1710c:	bl	16158 <__flatcc_fb_codegen_c@@Base+0x4d8>
   17110:	add	r3, sp, #60	; 0x3c
   17114:	mov	r2, r3
   17118:	add	r1, r5, #48	; 0x30
   1711c:	str	r3, [sp, #52]	; 0x34
   17120:	str	r0, [sp, #48]	; 0x30
   17124:	mov	r0, fp
   17128:	bl	16b14 <__flatcc_fb_codegen_c@@Base+0xe94>
   1712c:	ldr	r3, [sp, #52]	; 0x34
   17130:	add	fp, sp, #160	; 0xa0
   17134:	str	r3, [sp, #36]	; 0x24
   17138:	ldr	r3, [sp, #48]	; 0x30
   1713c:	str	sl, [sp, #32]
   17140:	str	r9, [sp, #28]
   17144:	str	r3, [sp, #24]
   17148:	str	r4, [sp, #20]
   1714c:	str	r7, [sp, #16]
   17150:	str	r6, [sp, #12]
   17154:	str	fp, [sp, #8]
   17158:	ldrd	r2, [r5, #96]	; 0x60
   1715c:	ldr	r1, [pc, #1904]	; 178d4 <__flatcc_fb_codegen_c@@Base+0x1c54>
   17160:	strd	r2, [sp]
   17164:	mov	r2, r4
   17168:	ldr	r0, [r4, #204]	; 0xcc
   1716c:	bl	140e4 <fprintf@plt>
   17170:	ldr	r3, [r4, #212]	; 0xd4
   17174:	ldr	r3, [r3, #32]
   17178:	cmp	r3, #0
   1717c:	bne	171a4 <__flatcc_fb_codegen_c@@Base+0x1524>
   17180:	ldrh	r3, [r5, #72]	; 0x48
   17184:	tst	r3, #128	; 0x80
   17188:	beq	171a4 <__flatcc_fb_codegen_c@@Base+0x1524>
   1718c:	stm	sp, {r6, r7, r9, sl}
   17190:	mov	r3, fp
   17194:	mov	r2, r4
   17198:	ldr	r1, [pc, #1848]	; 178d8 <__flatcc_fb_codegen_c@@Base+0x1c58>
   1719c:	ldr	r0, [r4, #204]	; 0xcc
   171a0:	bl	140e4 <fprintf@plt>
   171a4:	ldrh	r3, [r5, #72]	; 0x48
   171a8:	ands	r3, r3, #128	; 0x80
   171ac:	beq	178a4 <__flatcc_fb_codegen_c@@Base+0x1c24>
   171b0:	cmp	r8, #0
   171b4:	beq	171c4 <__flatcc_fb_codegen_c@@Base+0x1544>
   171b8:	ldr	r1, [r4, #204]	; 0xcc
   171bc:	ldr	r0, [pc, #1816]	; 178dc <__flatcc_fb_codegen_c@@Base+0x1c5c>
   171c0:	bl	14180 <fputs@plt>
   171c4:	ldr	r1, [r4, #204]	; 0xcc
   171c8:	ldr	r0, [pc, #1808]	; 178e0 <__flatcc_fb_codegen_c@@Base+0x1c60>
   171cc:	bl	14180 <fputs@plt>
   171d0:	stm	sp, {r6, r7, r9, sl}
   171d4:	mov	r3, fp
   171d8:	mov	r2, r4
   171dc:	ldr	r1, [pc, #1792]	; 178e4 <__flatcc_fb_codegen_c@@Base+0x1c64>
   171e0:	ldr	r0, [r4, #204]	; 0xcc
   171e4:	bl	140e4 <fprintf@plt>
   171e8:	ldr	r3, [r4, #212]	; 0xd4
   171ec:	ldr	r3, [r3, #136]	; 0x88
   171f0:	cmp	r3, #0
   171f4:	beq	17214 <__flatcc_fb_codegen_c@@Base+0x1594>
   171f8:	str	r4, [sp, #16]
   171fc:	stm	sp, {r6, r7, r9, sl}
   17200:	mov	r3, fp
   17204:	mov	r2, r4
   17208:	ldr	r1, [pc, #1752]	; 178e8 <__flatcc_fb_codegen_c@@Base+0x1c68>
   1720c:	ldr	r0, [r4, #204]	; 0xcc
   17210:	bl	140e4 <fprintf@plt>
   17214:	cmp	r8, #0
   17218:	beq	17248 <__flatcc_fb_codegen_c@@Base+0x15c8>
   1721c:	mov	r6, #1
   17220:	mov	r8, r6
   17224:	ldrh	r3, [r5, #72]	; 0x48
   17228:	eor	r6, r6, #1
   1722c:	ands	r3, r6, r3, lsr #7
   17230:	beq	170a4 <__flatcc_fb_codegen_c@@Base+0x1424>
   17234:	ldr	r1, [r4, #204]	; 0xcc
   17238:	ldr	r0, [pc, #1708]	; 178ec <__flatcc_fb_codegen_c@@Base+0x1c6c>
   1723c:	bl	14180 <fputs@plt>
   17240:	mov	r8, #1
   17244:	b	170a4 <__flatcc_fb_codegen_c@@Base+0x1424>
   17248:	stm	sp, {r6, r7, r9, sl}
   1724c:	mov	r3, fp
   17250:	mov	r2, r4
   17254:	ldr	r1, [pc, #1684]	; 178f0 <__flatcc_fb_codegen_c@@Base+0x1c70>
   17258:	ldr	r0, [r4, #204]	; 0xcc
   1725c:	bl	140e4 <fprintf@plt>
   17260:	stm	sp, {r6, r7, r9, sl}
   17264:	mov	r3, fp
   17268:	mov	r2, r4
   1726c:	ldr	r1, [pc, #1664]	; 178f4 <__flatcc_fb_codegen_c@@Base+0x1c74>
   17270:	ldr	r0, [r4, #204]	; 0xcc
   17274:	bl	140e4 <fprintf@plt>
   17278:	ldr	r3, [r4, #212]	; 0xd4
   1727c:	ldr	r3, [r3, #136]	; 0x88
   17280:	cmp	r3, #0
   17284:	beq	1721c <__flatcc_fb_codegen_c@@Base+0x159c>
   17288:	mov	r3, fp
   1728c:	stm	sp, {r6, r7}
   17290:	mov	r2, r3
   17294:	ldr	r1, [pc, #1628]	; 178f8 <__flatcc_fb_codegen_c@@Base+0x1c78>
   17298:	ldr	r0, [r4, #204]	; 0xcc
   1729c:	mov	r8, #1
   172a0:	bl	140e4 <fprintf@plt>
   172a4:	mov	r6, r8
   172a8:	b	17224 <__flatcc_fb_codegen_c@@Base+0x15a4>
   172ac:	ldr	r3, [r5, #16]
   172b0:	sub	r3, r3, #1
   172b4:	cmp	r3, #10
   172b8:	ldrls	pc, [pc, r3, lsl #2]
   172bc:	b	173d0 <__flatcc_fb_codegen_c@@Base+0x1750>
   172c0:	andeq	r7, r1, r4, lsl #8
   172c4:	andeq	r7, r1, ip, ror #5
   172c8:	andeq	r7, r1, ip, lsl #8
   172cc:	muleq	r1, r8, r3
   172d0:	muleq	r1, r8, r3
   172d4:	andeq	r7, r1, r0, lsr #7
   172d8:	andeq	r7, r1, r8, lsr #7
   172dc:			; <UNDEFINED> instruction: 0x000173b0
   172e0:			; <UNDEFINED> instruction: 0x000173b8
   172e4:	andeq	r7, r1, r8, asr #7
   172e8:	andeq	r7, r1, r0, asr #7
   172ec:	ldr	r3, [pc, #1544]	; 178fc <__flatcc_fb_codegen_c@@Base+0x1c7c>
   172f0:	str	r6, [sp, #12]
   172f4:	str	fp, [sp, #28]
   172f8:	str	r3, [sp, #24]
   172fc:	str	r4, [sp, #20]
   17300:	str	r7, [sp, #16]
   17304:	str	r9, [sp, #8]
   17308:	ldrd	r2, [r5, #96]	; 0x60
   1730c:	ldr	r1, [pc, #1516]	; 17900 <__flatcc_fb_codegen_c@@Base+0x1c80>
   17310:	strd	r2, [sp]
   17314:	mov	r2, r4
   17318:	ldr	r0, [r4, #204]	; 0xcc
   1731c:	bl	140e4 <fprintf@plt>
   17320:	ldr	r6, [r5, #104]	; 0x68
   17324:	cmp	r6, #0
   17328:	beq	17224 <__flatcc_fb_codegen_c@@Base+0x15a4>
   1732c:	add	r7, sp, #600	; 0x258
   17330:	mov	r2, #220	; 0xdc
   17334:	mov	r1, #0
   17338:	mov	r0, r7
   1733c:	bl	140fc <memset@plt>
   17340:	mov	r2, #220	; 0xdc
   17344:	mov	r1, #0
   17348:	add	r0, sp, #820	; 0x334
   1734c:	bl	140fc <memset@plt>
   17350:	ldrh	r3, [r6, #8]
   17354:	cmp	r3, #0
   17358:	beq	17444 <__flatcc_fb_codegen_c@@Base+0x17c4>
   1735c:	cmp	r3, #1
   17360:	bne	17414 <__flatcc_fb_codegen_c@@Base+0x1794>
   17364:	ldr	r9, [pc, #1432]	; 17904 <__flatcc_fb_codegen_c@@Base+0x1c84>
   17368:	mov	r0, r6
   1736c:	mov	r1, r7
   17370:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   17374:	ldr	r3, [sp, #40]	; 0x28
   17378:	ldrh	r6, [r3, #8]
   1737c:	cmp	r6, #0
   17380:	beq	1744c <__flatcc_fb_codegen_c@@Base+0x17cc>
   17384:	ldr	r3, [pc, #1404]	; 17908 <__flatcc_fb_codegen_c@@Base+0x1c88>
   17388:	ldr	r2, [pc, #1404]	; 1790c <__flatcc_fb_codegen_c@@Base+0x1c8c>
   1738c:	ldr	r1, [pc, #1312]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   17390:	ldr	r0, [pc, #1400]	; 17910 <__flatcc_fb_codegen_c@@Base+0x1c90>
   17394:	b	16f80 <__flatcc_fb_codegen_c@@Base+0x1300>
   17398:	ldr	r3, [pc, #1396]	; 17914 <__flatcc_fb_codegen_c@@Base+0x1c94>
   1739c:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173a0:	ldr	r3, [pc, #1392]	; 17918 <__flatcc_fb_codegen_c@@Base+0x1c98>
   173a4:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173a8:	ldr	r3, [pc, #1388]	; 1791c <__flatcc_fb_codegen_c@@Base+0x1c9c>
   173ac:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173b0:	ldr	r3, [pc, #1384]	; 17920 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   173b4:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173b8:	ldr	r3, [pc, #1380]	; 17924 <__flatcc_fb_codegen_c@@Base+0x1ca4>
   173bc:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173c0:	ldr	r3, [pc, #1376]	; 17928 <__flatcc_fb_codegen_c@@Base+0x1ca8>
   173c4:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173c8:	ldr	r3, [pc, #1372]	; 1792c <__flatcc_fb_codegen_c@@Base+0x1cac>
   173cc:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   173d0:	ldr	r0, [pc, #1368]	; 17930 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   173d4:	ldr	r3, [pc, #1368]	; 17934 <__flatcc_fb_codegen_c@@Base+0x1cb4>
   173d8:	ldr	r2, [pc, #1368]	; 17938 <__flatcc_fb_codegen_c@@Base+0x1cb8>
   173dc:	str	r3, [sp]
   173e0:	ldr	r1, [pc, #1364]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   173e4:	mov	r3, #186	; 0xba
   173e8:	ldr	r0, [r0]
   173ec:	bl	140e4 <fprintf@plt>
   173f0:	ldr	r3, [pc, #1352]	; 17940 <__flatcc_fb_codegen_c@@Base+0x1cc0>
   173f4:	ldr	r1, [pc, #1340]	; 17938 <__flatcc_fb_codegen_c@@Base+0x1cb8>
   173f8:	mov	r2, #186	; 0xba
   173fc:	ldr	r0, [pc, #1344]	; 17944 <__flatcc_fb_codegen_c@@Base+0x1cc4>
   17400:	b	16f80 <__flatcc_fb_codegen_c@@Base+0x1300>
   17404:	ldr	r3, [pc, #1340]	; 17948 <__flatcc_fb_codegen_c@@Base+0x1cc8>
   17408:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   1740c:	ldr	r3, [pc, #1336]	; 1794c <__flatcc_fb_codegen_c@@Base+0x1ccc>
   17410:	b	172f0 <__flatcc_fb_codegen_c@@Base+0x1670>
   17414:	ldr	r0, [pc, #1300]	; 17930 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   17418:	ldr	r3, [pc, #1328]	; 17950 <__flatcc_fb_codegen_c@@Base+0x1cd0>
   1741c:	ldr	r2, [pc, #1168]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   17420:	str	r3, [sp]
   17424:	ldr	r1, [pc, #1296]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   17428:	ldr	r3, [pc, #1316]	; 17954 <__flatcc_fb_codegen_c@@Base+0x1cd4>
   1742c:	ldr	r0, [r0]
   17430:	bl	140e4 <fprintf@plt>
   17434:	ldr	r3, [pc, #1228]	; 17908 <__flatcc_fb_codegen_c@@Base+0x1c88>
   17438:	ldr	r2, [pc, #1300]	; 17954 <__flatcc_fb_codegen_c@@Base+0x1cd4>
   1743c:	ldr	r1, [pc, #1136]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   17440:	b	173fc <__flatcc_fb_codegen_c@@Base+0x177c>
   17444:	ldr	r9, [pc, #1292]	; 17958 <__flatcc_fb_codegen_c@@Base+0x1cd8>
   17448:	b	17368 <__flatcc_fb_codegen_c@@Base+0x16e8>
   1744c:	add	r1, sp, #820	; 0x334
   17450:	ldr	r0, [sp, #40]	; 0x28
   17454:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   17458:	ldr	r3, [r5, #4]
   1745c:	str	r9, [sp, #12]
   17460:	str	r7, [sp, #8]
   17464:	ldr	r2, [r3]
   17468:	ldr	r1, [pc, #1260]	; 1795c <__flatcc_fb_codegen_c@@Base+0x1cdc>
   1746c:	str	r2, [sp, #4]
   17470:	ldr	r3, [r3, #4]
   17474:	mov	r2, r4
   17478:	str	r3, [sp]
   1747c:	add	r3, sp, #820	; 0x334
   17480:	ldr	r0, [r4, #204]	; 0xcc
   17484:	bl	140e4 <fprintf@plt>
   17488:	b	17224 <__flatcc_fb_codegen_c@@Base+0x15a4>
   1748c:	str	fp, [sp, #20]
   17490:	str	r7, [sp, #16]
   17494:	str	r6, [sp, #12]
   17498:	str	r9, [sp, #8]
   1749c:	ldrd	r2, [r5, #96]	; 0x60
   174a0:	ldr	r1, [pc, #1208]	; 17960 <__flatcc_fb_codegen_c@@Base+0x1ce0>
   174a4:	strd	r2, [sp]
   174a8:	mov	r2, r4
   174ac:	ldr	r0, [r4, #204]	; 0xcc
   174b0:	bl	140e4 <fprintf@plt>
   174b4:	ldr	r3, [r4, #212]	; 0xd4
   174b8:	ldr	r3, [r3, #32]
   174bc:	cmp	r3, #0
   174c0:	bne	174e8 <__flatcc_fb_codegen_c@@Base+0x1868>
   174c4:	ldrh	r3, [r5, #72]	; 0x48
   174c8:	tst	r3, #128	; 0x80
   174cc:	beq	174e8 <__flatcc_fb_codegen_c@@Base+0x1868>
   174d0:	stm	sp, {r6, r7}
   174d4:	mov	r3, r9
   174d8:	mov	r2, r4
   174dc:	ldr	r1, [pc, #1152]	; 17964 <__flatcc_fb_codegen_c@@Base+0x1ce4>
   174e0:	ldr	r0, [r4, #204]	; 0xcc
   174e4:	bl	140e4 <fprintf@plt>
   174e8:	ldrh	r3, [r5, #72]	; 0x48
   174ec:	ands	r3, r3, #128	; 0x80
   174f0:	beq	178a4 <__flatcc_fb_codegen_c@@Base+0x1c24>
   174f4:	cmp	r8, #0
   174f8:	beq	17508 <__flatcc_fb_codegen_c@@Base+0x1888>
   174fc:	ldr	r1, [r4, #204]	; 0xcc
   17500:	ldr	r0, [pc, #980]	; 178dc <__flatcc_fb_codegen_c@@Base+0x1c5c>
   17504:	bl	14180 <fputs@plt>
   17508:	stm	sp, {r6, r7}
   1750c:	mov	r3, r9
   17510:	mov	r2, r4
   17514:	ldr	r1, [pc, #1100]	; 17968 <__flatcc_fb_codegen_c@@Base+0x1ce8>
   17518:	ldr	r0, [r4, #204]	; 0xcc
   1751c:	bl	140e4 <fprintf@plt>
   17520:	ldr	r3, [r4, #212]	; 0xd4
   17524:	ldr	r3, [r3, #136]	; 0x88
   17528:	cmp	r3, #0
   1752c:	beq	17548 <__flatcc_fb_codegen_c@@Base+0x18c8>
   17530:	stm	sp, {r6, r7}
   17534:	mov	r3, r9
   17538:	mov	r2, r4
   1753c:	ldr	r1, [pc, #1064]	; 1796c <__flatcc_fb_codegen_c@@Base+0x1cec>
   17540:	ldr	r0, [r4, #204]	; 0xcc
   17544:	bl	140e4 <fprintf@plt>
   17548:	cmp	r8, #0
   1754c:	bne	1721c <__flatcc_fb_codegen_c@@Base+0x159c>
   17550:	stm	sp, {r6, r7}
   17554:	mov	r3, r9
   17558:	mov	r2, r4
   1755c:	ldr	r1, [pc, #1036]	; 17970 <__flatcc_fb_codegen_c@@Base+0x1cf0>
   17560:	ldr	r0, [r4, #204]	; 0xcc
   17564:	bl	140e4 <fprintf@plt>
   17568:	stm	sp, {r6, r7}
   1756c:	mov	r3, r9
   17570:	mov	r2, r4
   17574:	ldr	r1, [pc, #1016]	; 17974 <__flatcc_fb_codegen_c@@Base+0x1cf4>
   17578:	ldr	r0, [r4, #204]	; 0xcc
   1757c:	bl	140e4 <fprintf@plt>
   17580:	ldr	r3, [r4, #212]	; 0xd4
   17584:	ldr	r3, [r3, #136]	; 0x88
   17588:	cmp	r3, #0
   1758c:	beq	1721c <__flatcc_fb_codegen_c@@Base+0x159c>
   17590:	stm	sp, {r6, r7}
   17594:	mov	r3, r9
   17598:	b	17290 <__flatcc_fb_codegen_c@@Base+0x1610>
   1759c:	str	fp, [sp, #24]
   175a0:	str	r4, [sp, #20]
   175a4:	str	r7, [sp, #16]
   175a8:	str	r6, [sp, #12]
   175ac:	str	r9, [sp, #8]
   175b0:	ldrd	r2, [r5, #96]	; 0x60
   175b4:	ldr	r1, [pc, #956]	; 17978 <__flatcc_fb_codegen_c@@Base+0x1cf8>
   175b8:	strd	r2, [sp]
   175bc:	mov	r2, r4
   175c0:	ldr	r0, [r4, #204]	; 0xcc
   175c4:	bl	140e4 <fprintf@plt>
   175c8:	b	177ac <__flatcc_fb_codegen_c@@Base+0x1b2c>
   175cc:	add	sl, sp, #380	; 0x17c
   175d0:	mov	r1, sl
   175d4:	ldr	r0, [r5, #16]
   175d8:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   175dc:	ldr	r3, [r5, #16]
   175e0:	ldrh	r2, [r3, #8]
   175e4:	cmp	r2, #4
   175e8:	ldrls	pc, [pc, r2, lsl #2]
   175ec:	b	177b4 <__flatcc_fb_codegen_c@@Base+0x1b34>
   175f0:	andeq	r7, r1, ip, lsr #12
   175f4:	andeq	r7, r1, r4, lsl #12
   175f8:			; <UNDEFINED> instruction: 0x000177b4
   175fc:	andeq	r7, r1, r4, asr r6
   17600:	andeq	r7, r1, ip, ror r7
   17604:	str	fp, [sp, #24]
   17608:	str	sl, [sp, #20]
   1760c:	str	r7, [sp, #16]
   17610:	str	r6, [sp, #12]
   17614:	str	r9, [sp, #8]
   17618:	ldrd	r2, [r5, #96]	; 0x60
   1761c:	ldr	r1, [pc, #856]	; 1797c <__flatcc_fb_codegen_c@@Base+0x1cfc>
   17620:	strd	r2, [sp]
   17624:	mov	r2, r4
   17628:	b	175c0 <__flatcc_fb_codegen_c@@Base+0x1940>
   1762c:	str	fp, [sp, #24]
   17630:	str	sl, [sp, #20]
   17634:	str	r7, [sp, #16]
   17638:	str	r6, [sp, #12]
   1763c:	str	r9, [sp, #8]
   17640:	ldrd	r2, [r5, #96]	; 0x60
   17644:	ldr	r1, [pc, #820]	; 17980 <__flatcc_fb_codegen_c@@Base+0x1d00>
   17648:	strd	r2, [sp]
   1764c:	mov	r2, r4
   17650:	b	175c0 <__flatcc_fb_codegen_c@@Base+0x1940>
   17654:	add	fp, sp, #60	; 0x3c
   17658:	mov	r2, fp
   1765c:	add	r1, r5, #48	; 0x30
   17660:	ldr	r0, [r3, #40]	; 0x28
   17664:	bl	16b14 <__flatcc_fb_codegen_c@@Base+0xe94>
   17668:	str	fp, [sp, #28]
   1766c:	str	sl, [sp, #24]
   17670:	str	sl, [sp, #20]
   17674:	str	r7, [sp, #16]
   17678:	str	r6, [sp, #12]
   1767c:	str	r9, [sp, #8]
   17680:	ldrd	r2, [r5, #96]	; 0x60
   17684:	ldr	r1, [pc, #760]	; 17984 <__flatcc_fb_codegen_c@@Base+0x1d04>
   17688:	strd	r2, [sp]
   1768c:	mov	r2, r4
   17690:	ldr	r0, [r4, #204]	; 0xcc
   17694:	bl	140e4 <fprintf@plt>
   17698:	ldr	r3, [r4, #212]	; 0xd4
   1769c:	ldr	r3, [r3, #32]
   176a0:	cmp	r3, #0
   176a4:	bne	176cc <__flatcc_fb_codegen_c@@Base+0x1a4c>
   176a8:	ldrh	r3, [r5, #72]	; 0x48
   176ac:	tst	r3, #128	; 0x80
   176b0:	beq	176cc <__flatcc_fb_codegen_c@@Base+0x1a4c>
   176b4:	stm	sp, {r6, r7, sl}
   176b8:	mov	r3, r9
   176bc:	mov	r2, r4
   176c0:	ldr	r1, [pc, #704]	; 17988 <__flatcc_fb_codegen_c@@Base+0x1d08>
   176c4:	ldr	r0, [r4, #204]	; 0xcc
   176c8:	bl	140e4 <fprintf@plt>
   176cc:	ldrh	r3, [r5, #72]	; 0x48
   176d0:	ands	r3, r3, #128	; 0x80
   176d4:	beq	178a4 <__flatcc_fb_codegen_c@@Base+0x1c24>
   176d8:	cmp	r8, #0
   176dc:	beq	176ec <__flatcc_fb_codegen_c@@Base+0x1a6c>
   176e0:	ldr	r1, [r4, #204]	; 0xcc
   176e4:	ldr	r0, [pc, #496]	; 178dc <__flatcc_fb_codegen_c@@Base+0x1c5c>
   176e8:	bl	14180 <fputs@plt>
   176ec:	add	fp, sp, #380	; 0x17c
   176f0:	ldr	r1, [r4, #204]	; 0xcc
   176f4:	ldr	r0, [pc, #484]	; 178e0 <__flatcc_fb_codegen_c@@Base+0x1c60>
   176f8:	bl	14180 <fputs@plt>
   176fc:	stm	sp, {r6, r7, fp}
   17700:	mov	r3, r9
   17704:	mov	r2, r4
   17708:	ldr	r1, [pc, #636]	; 1798c <__flatcc_fb_codegen_c@@Base+0x1d0c>
   1770c:	ldr	r0, [r4, #204]	; 0xcc
   17710:	bl	140e4 <fprintf@plt>
   17714:	ldr	r3, [r4, #212]	; 0xd4
   17718:	ldr	r3, [r3, #136]	; 0x88
   1771c:	cmp	r3, #0
   17720:	beq	17740 <__flatcc_fb_codegen_c@@Base+0x1ac0>
   17724:	str	r4, [sp, #12]
   17728:	stm	sp, {r6, r7, fp}
   1772c:	mov	r3, r9
   17730:	mov	r2, r4
   17734:	ldr	r1, [pc, #596]	; 17990 <__flatcc_fb_codegen_c@@Base+0x1d10>
   17738:	ldr	r0, [r4, #204]	; 0xcc
   1773c:	bl	140e4 <fprintf@plt>
   17740:	cmp	r8, #0
   17744:	bne	1721c <__flatcc_fb_codegen_c@@Base+0x159c>
   17748:	stm	sp, {r6, r7, sl}
   1774c:	mov	r3, r9
   17750:	mov	r2, r4
   17754:	ldr	r1, [pc, #568]	; 17994 <__flatcc_fb_codegen_c@@Base+0x1d14>
   17758:	ldr	r0, [r4, #204]	; 0xcc
   1775c:	bl	140e4 <fprintf@plt>
   17760:	stm	sp, {r6, r7, sl}
   17764:	mov	r3, r9
   17768:	mov	r2, r4
   1776c:	ldr	r1, [pc, #548]	; 17998 <__flatcc_fb_codegen_c@@Base+0x1d18>
   17770:	ldr	r0, [r4, #204]	; 0xcc
   17774:	bl	140e4 <fprintf@plt>
   17778:	b	17580 <__flatcc_fb_codegen_c@@Base+0x1900>
   1777c:	str	fp, [sp, #24]
   17780:	str	sl, [sp, #20]
   17784:	str	r7, [sp, #16]
   17788:	str	r6, [sp, #12]
   1778c:	str	r9, [sp, #8]
   17790:	ldrd	r2, [r5, #96]	; 0x60
   17794:	ldr	r1, [pc, #512]	; 1799c <__flatcc_fb_codegen_c@@Base+0x1d1c>
   17798:	strd	r2, [sp]
   1779c:	mov	r3, r4
   177a0:	mov	r2, r4
   177a4:	ldr	r0, [r4, #204]	; 0xcc
   177a8:	bl	140e4 <fprintf@plt>
   177ac:	mov	r6, #0
   177b0:	b	17224 <__flatcc_fb_codegen_c@@Base+0x15a4>
   177b4:	ldr	r0, [pc, #372]	; 17930 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   177b8:	ldr	r3, [pc, #480]	; 179a0 <__flatcc_fb_codegen_c@@Base+0x1d20>
   177bc:	ldr	r2, [pc, #240]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   177c0:	str	r3, [sp]
   177c4:	ldr	r1, [pc, #368]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   177c8:	mov	r3, #1568	; 0x620
   177cc:	ldr	r0, [r0]
   177d0:	bl	140e4 <fprintf@plt>
   177d4:	ldr	r3, [pc, #208]	; 178ac <__flatcc_fb_codegen_c@@Base+0x1c2c>
   177d8:	mov	r2, #1568	; 0x620
   177dc:	b	1743c <__flatcc_fb_codegen_c@@Base+0x17bc>
   177e0:	add	sl, sp, #380	; 0x17c
   177e4:	mov	r1, sl
   177e8:	ldr	r0, [r5, #16]
   177ec:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   177f0:	ldr	r3, [r5, #16]
   177f4:	ldrh	r3, [r3, #8]
   177f8:	cmp	r3, #4
   177fc:	bhi	17810 <__flatcc_fb_codegen_c@@Base+0x1b90>
   17800:	mov	r2, #1
   17804:	lsl	r2, r2, r3
   17808:	tst	r2, #27
   1780c:	bne	1783c <__flatcc_fb_codegen_c@@Base+0x1bbc>
   17810:	ldr	r0, [pc, #280]	; 17930 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   17814:	ldr	r3, [pc, #392]	; 179a4 <__flatcc_fb_codegen_c@@Base+0x1d24>
   17818:	ldr	r2, [pc, #148]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   1781c:	str	r3, [sp]
   17820:	ldr	r1, [pc, #276]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   17824:	mov	r3, #1584	; 0x630
   17828:	ldr	r0, [r0]
   1782c:	bl	140e4 <fprintf@plt>
   17830:	ldr	r3, [pc, #116]	; 178ac <__flatcc_fb_codegen_c@@Base+0x1c2c>
   17834:	mov	r2, #1584	; 0x630
   17838:	b	1743c <__flatcc_fb_codegen_c@@Base+0x17bc>
   1783c:	cmp	r3, #4
   17840:	str	fp, [sp, #24]
   17844:	str	sl, [sp, #20]
   17848:	str	r7, [sp, #16]
   1784c:	str	r6, [sp, #12]
   17850:	str	r9, [sp, #8]
   17854:	ldrd	r2, [r5, #96]	; 0x60
   17858:	ldrne	r1, [pc, #328]	; 179a8 <__flatcc_fb_codegen_c@@Base+0x1d28>
   1785c:	strd	r2, [sp]
   17860:	movne	r2, r4
   17864:	bne	175c0 <__flatcc_fb_codegen_c@@Base+0x1940>
   17868:	mov	r3, r4
   1786c:	mov	r2, r4
   17870:	ldr	r1, [pc, #308]	; 179ac <__flatcc_fb_codegen_c@@Base+0x1d2c>
   17874:	b	177a4 <__flatcc_fb_codegen_c@@Base+0x1b24>
   17878:	ldr	r0, [pc, #176]	; 17930 <__flatcc_fb_codegen_c@@Base+0x1cb0>
   1787c:	ldr	r3, [pc, #300]	; 179b0 <__flatcc_fb_codegen_c@@Base+0x1d30>
   17880:	ldr	r2, [pc, #44]	; 178b4 <__flatcc_fb_codegen_c@@Base+0x1c34>
   17884:	str	r3, [sp]
   17888:	ldr	r1, [pc, #172]	; 1793c <__flatcc_fb_codegen_c@@Base+0x1cbc>
   1788c:	ldr	r3, [pc, #288]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x1d34>
   17890:	ldr	r0, [r0]
   17894:	bl	140e4 <fprintf@plt>
   17898:	ldr	r3, [pc, #12]	; 178ac <__flatcc_fb_codegen_c@@Base+0x1c2c>
   1789c:	ldr	r2, [pc, #272]	; 179b4 <__flatcc_fb_codegen_c@@Base+0x1d34>
   178a0:	b	1743c <__flatcc_fb_codegen_c@@Base+0x17bc>
   178a4:	mov	r6, r3
   178a8:	b	17224 <__flatcc_fb_codegen_c@@Base+0x15a4>
   178ac:			; <UNDEFINED> instruction: 0x000318bf
   178b0:	andeq	r0, r0, r2, asr r5
   178b4:	andeq	r1, r3, sl, lsl #18
   178b8:	andeq	r1, r3, sp, ror r9
   178bc:	andeq	r2, r3, sp, lsl pc
   178c0:	strdeq	r2, [r3], -r4
   178c4:	andeq	r2, r3, r1, rrx
   178c8:	andeq	r2, r3, sp, lsl r7
   178cc:	andeq	r2, r3, r2, lsl #15
   178d0:	muleq	r3, r9, r7
   178d4:	andeq	r2, r3, r6, asr #15
   178d8:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   178dc:	andeq	r2, r3, lr, asr r1
   178e0:	andeq	r2, r3, r1, lsr #3
   178e4:	andeq	r2, r3, r0, lsr r8
   178e8:	andeq	r2, r3, r1, ror #16
   178ec:	andeq	r2, r3, sp, lsr #6
   178f0:	muleq	r3, pc, r8	; <UNPREDICTABLE>
   178f4:	ldrdeq	r2, [r3], -r8
   178f8:	andeq	r2, r3, sp, asr #5
   178fc:	muleq	r3, fp, r6
   17900:	andeq	r2, r3, r1, lsl r9
   17904:	andeq	r2, r3, ip, ror #13
   17908:	andeq	r1, r3, r1, ror #17
   1790c:	andeq	r0, r0, pc, lsr r5
   17910:	andeq	r2, r3, r8, ror r9
   17914:			; <UNDEFINED> instruction: 0x000326b5
   17918:	andeq	r2, r3, pc, lsl #13
   1791c:	muleq	r3, ip, r6
   17920:	andeq	r2, r3, r9, lsr #13
   17924:	andeq	r2, r3, r1, asr #13
   17928:	andeq	r2, r3, ip, asr #13
   1792c:	ldrdeq	r2, [r3], -r8
   17930:	strheq	ip, [r5], -r0
   17934:	andeq	r1, r3, r5, ror fp
   17938:	andeq	r1, r3, r1, lsr #22
   1793c:	andeq	r1, r3, sl, ror #22
   17940:	andeq	r1, r3, r9, asr #17
   17944:	andeq	sl, r3, r9, asr #3
   17948:	andeq	r2, r3, lr, lsl #13
   1794c:	andeq	r2, r3, r8, lsr #13
   17950:	andeq	r2, r3, r4, asr #18
   17954:	andeq	r0, r0, fp, lsr r5
   17958:	andeq	r2, r3, r5, ror #13
   1795c:	muleq	r3, r7, r9
   17960:	andeq	r2, r3, r4, asr #19
   17964:	strdeq	r2, [r3], -r1
   17968:	andeq	r2, r3, ip, lsl sl
   1796c:	andeq	r2, r3, r7, asr #20
   17970:	andeq	r2, r3, r2, ror sl
   17974:	andeq	r2, r3, r5, lsr #21
   17978:	ldrdeq	r2, [r3], -r8
   1797c:	andeq	r2, r3, r5, lsl fp
   17980:	andeq	r2, r3, pc, asr #22
   17984:	andeq	r2, r3, r7, lsl #23
   17988:	andeq	r2, r3, r8, lsr #2
   1798c:	ldrdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   17990:	andeq	r2, r3, r3, asr #23
   17994:	andeq	r2, r3, r1, asr r2
   17998:	andeq	r2, r3, pc, lsl #5
   1799c:	andeq	r2, r3, r6, lsl #24
   179a0:	andeq	r2, r3, sl, lsr ip
   179a4:	andeq	r2, r3, r3, lsl #25
   179a8:	andeq	r2, r3, lr, lsl #26
   179ac:	ldrdeq	r2, [r3], -r3
   179b0:	andeq	r2, r3, r5, asr #26
   179b4:	andeq	r0, r0, pc, lsr r6

000179b8 <__flatcc_fb_gen_common_c_header@@Base>:
   179b8:	push	{r4, r5, lr}
   179bc:	mov	r4, r0
   179c0:	add	r5, r0, #102	; 0x66
   179c4:	mov	r3, r5
   179c8:	sub	sp, sp, #236	; 0xec
   179cc:	mov	r2, r5
   179d0:	ldr	r1, [pc, #2736]	; 18488 <__flatcc_fb_gen_common_c_header@@Base+0xad0>
   179d4:	ldr	r0, [r0, #204]	; 0xcc
   179d8:	bl	140e4 <fprintf@plt>
   179dc:	ldr	r1, [r4, #204]	; 0xcc
   179e0:	ldr	r0, [pc, #2724]	; 1848c <__flatcc_fb_gen_common_c_header@@Base+0xad4>
   179e4:	bl	14180 <fputs@plt>
   179e8:	ldr	r1, [r4, #204]	; 0xcc
   179ec:	ldr	r0, [pc, #2716]	; 18490 <__flatcc_fb_gen_common_c_header@@Base+0xad8>
   179f0:	bl	14180 <fputs@plt>
   179f4:	ldr	r3, [r4, #212]	; 0xd4
   179f8:	ldr	r3, [r3, #136]	; 0x88
   179fc:	cmp	r3, #0
   17a00:	bne	17a10 <__flatcc_fb_gen_common_c_header@@Base+0x58>
   17a04:	ldr	r1, [r4, #204]	; 0xcc
   17a08:	ldr	r0, [pc, #2692]	; 18494 <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   17a0c:	bl	14180 <fputs@plt>
   17a10:	ldr	r3, [r4, #212]	; 0xd4
   17a14:	ldr	r3, [r3, #140]	; 0x8c
   17a18:	cmp	r3, #0
   17a1c:	beq	17a2c <__flatcc_fb_gen_common_c_header@@Base+0x74>
   17a20:	ldr	r1, [r4, #204]	; 0xcc
   17a24:	ldr	r0, [pc, #2668]	; 18498 <__flatcc_fb_gen_common_c_header@@Base+0xae0>
   17a28:	bl	14180 <fputs@plt>
   17a2c:	ldr	r1, [r4, #204]	; 0xcc
   17a30:	ldr	r0, [pc, #2660]	; 1849c <__flatcc_fb_gen_common_c_header@@Base+0xae4>
   17a34:	bl	14180 <fputs@plt>
   17a38:	ldr	r1, [pc, #2656]	; 184a0 <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   17a3c:	mov	r0, r4
   17a40:	bl	14000 <strcmp@plt>
   17a44:	cmp	r0, #0
   17a48:	beq	17abc <__flatcc_fb_gen_common_c_header@@Base+0x104>
   17a4c:	mov	r3, r4
   17a50:	mov	r2, r4
   17a54:	ldr	r1, [pc, #2632]	; 184a4 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   17a58:	str	r4, [sp, #8]
   17a5c:	str	r4, [sp, #4]
   17a60:	str	r4, [sp]
   17a64:	ldr	r0, [r4, #204]	; 0xcc
   17a68:	bl	140e4 <fprintf@plt>
   17a6c:	mov	r3, r4
   17a70:	ldr	r2, [pc, #2608]	; 184a8 <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   17a74:	ldr	r1, [pc, #2608]	; 184ac <__flatcc_fb_gen_common_c_header@@Base+0xaf4>
   17a78:	str	r4, [sp, #4]
   17a7c:	str	r4, [sp]
   17a80:	ldr	r0, [r4, #204]	; 0xcc
   17a84:	bl	140e4 <fprintf@plt>
   17a88:	mov	r3, r4
   17a8c:	mov	r2, r4
   17a90:	ldr	r1, [pc, #2584]	; 184b0 <__flatcc_fb_gen_common_c_header@@Base+0xaf8>
   17a94:	str	r4, [sp, #8]
   17a98:	str	r4, [sp, #4]
   17a9c:	str	r4, [sp]
   17aa0:	ldr	r0, [r4, #204]	; 0xcc
   17aa4:	bl	140e4 <fprintf@plt>
   17aa8:	mov	r3, r5
   17aac:	mov	r2, r5
   17ab0:	ldr	r1, [pc, #2556]	; 184b4 <__flatcc_fb_gen_common_c_header@@Base+0xafc>
   17ab4:	ldr	r0, [r4, #204]	; 0xcc
   17ab8:	bl	140e4 <fprintf@plt>
   17abc:	mov	r3, r4
   17ac0:	mov	r2, r4
   17ac4:	ldr	r1, [pc, #2540]	; 184b8 <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   17ac8:	ldr	r0, [r4, #204]	; 0xcc
   17acc:	bl	140e4 <fprintf@plt>
   17ad0:	mov	r3, r4
   17ad4:	mov	r2, r4
   17ad8:	ldr	r1, [pc, #2524]	; 184bc <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   17adc:	str	r4, [sp, #16]
   17ae0:	str	r4, [sp, #12]
   17ae4:	str	r4, [sp, #8]
   17ae8:	str	r4, [sp, #4]
   17aec:	str	r4, [sp]
   17af0:	ldr	r0, [r4, #204]	; 0xcc
   17af4:	bl	140e4 <fprintf@plt>
   17af8:	mov	r3, r4
   17afc:	mov	r2, r4
   17b00:	ldr	r1, [pc, #2488]	; 184c0 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   17b04:	ldr	r0, [r4, #204]	; 0xcc
   17b08:	bl	140e4 <fprintf@plt>
   17b0c:	mov	r3, r4
   17b10:	str	r4, [sp, #4]
   17b14:	str	r4, [sp]
   17b18:	mov	r2, r4
   17b1c:	ldr	r1, [pc, #2464]	; 184c4 <__flatcc_fb_gen_common_c_header@@Base+0xb0c>
   17b20:	ldr	r0, [r4, #204]	; 0xcc
   17b24:	bl	140e4 <fprintf@plt>
   17b28:	ldr	r3, [r4, #212]	; 0xd4
   17b2c:	ldr	r3, [r3, #32]
   17b30:	cmp	r3, #0
   17b34:	beq	18438 <__flatcc_fb_gen_common_c_header@@Base+0xa80>
   17b38:	mov	r2, r4
   17b3c:	ldr	r1, [pc, #2436]	; 184c8 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   17b40:	ldr	r0, [r4, #204]	; 0xcc
   17b44:	bl	140e4 <fprintf@plt>
   17b48:	mov	r3, r4
   17b4c:	mov	r2, r4
   17b50:	ldr	r1, [pc, #2420]	; 184cc <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   17b54:	ldr	r0, [r4, #204]	; 0xcc
   17b58:	bl	140e4 <fprintf@plt>
   17b5c:	mov	r3, r4
   17b60:	mov	r2, r4
   17b64:	ldr	r1, [pc, #2404]	; 184d0 <__flatcc_fb_gen_common_c_header@@Base+0xb18>
   17b68:	str	r4, [sp, #8]
   17b6c:	str	r4, [sp, #4]
   17b70:	str	r4, [sp]
   17b74:	ldr	r0, [r4, #204]	; 0xcc
   17b78:	bl	140e4 <fprintf@plt>
   17b7c:	mov	r3, r4
   17b80:	mov	r2, r4
   17b84:	ldr	r1, [pc, #2376]	; 184d4 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   17b88:	str	r4, [sp, #8]
   17b8c:	str	r4, [sp, #4]
   17b90:	str	r4, [sp]
   17b94:	ldr	r0, [r4, #204]	; 0xcc
   17b98:	bl	140e4 <fprintf@plt>
   17b9c:	mov	r3, r4
   17ba0:	mov	r2, r4
   17ba4:	ldr	r1, [pc, #2348]	; 184d8 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   17ba8:	str	r4, [sp]
   17bac:	ldr	r0, [r4, #204]	; 0xcc
   17bb0:	bl	140e4 <fprintf@plt>
   17bb4:	mov	r3, r4
   17bb8:	mov	r2, r4
   17bbc:	ldr	r1, [pc, #2328]	; 184dc <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   17bc0:	str	r4, [sp]
   17bc4:	ldr	r0, [r4, #204]	; 0xcc
   17bc8:	bl	140e4 <fprintf@plt>
   17bcc:	mov	r3, r4
   17bd0:	mov	r2, r4
   17bd4:	ldr	r1, [pc, #2308]	; 184e0 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   17bd8:	str	r4, [sp]
   17bdc:	ldr	r0, [r4, #204]	; 0xcc
   17be0:	bl	140e4 <fprintf@plt>
   17be4:	mov	r3, r4
   17be8:	str	r4, [sp, #8]
   17bec:	str	r4, [sp, #4]
   17bf0:	str	r4, [sp]
   17bf4:	mov	r2, r4
   17bf8:	ldr	r1, [pc, #2276]	; 184e4 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   17bfc:	ldr	r0, [r4, #204]	; 0xcc
   17c00:	bl	140e4 <fprintf@plt>
   17c04:	ldr	r3, [r4, #212]	; 0xd4
   17c08:	ldr	r3, [r3, #32]
   17c0c:	cmp	r3, #0
   17c10:	beq	18448 <__flatcc_fb_gen_common_c_header@@Base+0xa90>
   17c14:	mov	r2, r4
   17c18:	ldr	r1, [pc, #2248]	; 184e8 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   17c1c:	ldr	r0, [r4, #204]	; 0xcc
   17c20:	bl	140e4 <fprintf@plt>
   17c24:	mov	r3, r4
   17c28:	mov	r2, r4
   17c2c:	ldr	r1, [pc, #2232]	; 184ec <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   17c30:	str	r4, [sp, #4]
   17c34:	str	r4, [sp]
   17c38:	ldr	r0, [r4, #204]	; 0xcc
   17c3c:	bl	140e4 <fprintf@plt>
   17c40:	mov	r3, r4
   17c44:	mov	r2, r4
   17c48:	ldr	r1, [pc, #2208]	; 184f0 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   17c4c:	ldr	r0, [r4, #204]	; 0xcc
   17c50:	bl	140e4 <fprintf@plt>
   17c54:	mov	r3, r4
   17c58:	mov	r2, r4
   17c5c:	ldr	r1, [pc, #2192]	; 184f4 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   17c60:	str	r4, [sp]
   17c64:	ldr	r0, [r4, #204]	; 0xcc
   17c68:	bl	140e4 <fprintf@plt>
   17c6c:	mov	r3, r4
   17c70:	mov	r2, r4
   17c74:	ldr	r1, [pc, #2172]	; 184f8 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   17c78:	ldr	r0, [r4, #204]	; 0xcc
   17c7c:	bl	140e4 <fprintf@plt>
   17c80:	mov	r3, r4
   17c84:	mov	r2, r4
   17c88:	ldr	r1, [pc, #2156]	; 184fc <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   17c8c:	str	r4, [sp, #4]
   17c90:	str	r4, [sp]
   17c94:	ldr	r0, [r4, #204]	; 0xcc
   17c98:	bl	140e4 <fprintf@plt>
   17c9c:	mov	r3, r4
   17ca0:	mov	r2, r4
   17ca4:	ldr	r1, [pc, #2132]	; 18500 <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   17ca8:	ldr	r0, [r4, #204]	; 0xcc
   17cac:	bl	140e4 <fprintf@plt>
   17cb0:	mov	r3, r4
   17cb4:	mov	r2, r4
   17cb8:	ldr	r1, [pc, #2116]	; 18504 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   17cbc:	ldr	r0, [r4, #204]	; 0xcc
   17cc0:	bl	140e4 <fprintf@plt>
   17cc4:	mov	r3, r4
   17cc8:	mov	r2, r4
   17ccc:	ldr	r1, [pc, #2100]	; 18508 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   17cd0:	str	r4, [sp, #4]
   17cd4:	str	r4, [sp]
   17cd8:	ldr	r0, [r4, #204]	; 0xcc
   17cdc:	bl	140e4 <fprintf@plt>
   17ce0:	mov	r3, r4
   17ce4:	mov	r2, r4
   17ce8:	ldr	r1, [pc, #2076]	; 1850c <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   17cec:	str	r4, [sp, #36]	; 0x24
   17cf0:	str	r4, [sp, #32]
   17cf4:	str	r4, [sp, #28]
   17cf8:	str	r4, [sp, #24]
   17cfc:	str	r4, [sp, #20]
   17d00:	str	r4, [sp, #16]
   17d04:	str	r4, [sp, #12]
   17d08:	str	r4, [sp, #8]
   17d0c:	str	r4, [sp, #4]
   17d10:	str	r4, [sp]
   17d14:	ldr	r0, [r4, #204]	; 0xcc
   17d18:	bl	140e4 <fprintf@plt>
   17d1c:	mov	r2, r4
   17d20:	ldr	r1, [pc, #2024]	; 18510 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   17d24:	ldr	r0, [r4, #204]	; 0xcc
   17d28:	bl	140e4 <fprintf@plt>
   17d2c:	mov	r3, r4
   17d30:	mov	r2, r4
   17d34:	ldr	r1, [pc, #2008]	; 18514 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   17d38:	str	r4, [sp, #4]
   17d3c:	str	r4, [sp]
   17d40:	ldr	r0, [r4, #204]	; 0xcc
   17d44:	bl	140e4 <fprintf@plt>
   17d48:	mov	r3, r4
   17d4c:	mov	r2, r4
   17d50:	ldr	r1, [pc, #1984]	; 18518 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   17d54:	str	r4, [sp, #56]	; 0x38
   17d58:	str	r4, [sp, #52]	; 0x34
   17d5c:	str	r4, [sp, #48]	; 0x30
   17d60:	str	r4, [sp, #44]	; 0x2c
   17d64:	str	r4, [sp, #40]	; 0x28
   17d68:	str	r4, [sp, #36]	; 0x24
   17d6c:	str	r4, [sp, #32]
   17d70:	str	r4, [sp, #28]
   17d74:	str	r4, [sp, #24]
   17d78:	str	r4, [sp, #20]
   17d7c:	str	r4, [sp, #16]
   17d80:	str	r4, [sp, #12]
   17d84:	str	r4, [sp, #8]
   17d88:	str	r4, [sp, #4]
   17d8c:	str	r4, [sp]
   17d90:	ldr	r0, [r4, #204]	; 0xcc
   17d94:	bl	140e4 <fprintf@plt>
   17d98:	mov	r3, r4
   17d9c:	mov	r2, r4
   17da0:	ldr	r1, [pc, #1908]	; 1851c <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   17da4:	str	r4, [sp, #20]
   17da8:	str	r4, [sp, #16]
   17dac:	str	r4, [sp, #12]
   17db0:	str	r4, [sp, #8]
   17db4:	str	r4, [sp, #4]
   17db8:	str	r4, [sp]
   17dbc:	ldr	r0, [r4, #204]	; 0xcc
   17dc0:	bl	140e4 <fprintf@plt>
   17dc4:	mov	r3, r4
   17dc8:	mov	r2, r4
   17dcc:	ldr	r1, [pc, #1868]	; 18520 <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   17dd0:	str	r4, [sp, #4]
   17dd4:	str	r4, [sp]
   17dd8:	ldr	r0, [r4, #204]	; 0xcc
   17ddc:	bl	140e4 <fprintf@plt>
   17de0:	mov	r3, r4
   17de4:	mov	r2, r4
   17de8:	ldr	r1, [pc, #1844]	; 18524 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   17dec:	str	r4, [sp, #4]
   17df0:	str	r4, [sp]
   17df4:	ldr	r0, [r4, #204]	; 0xcc
   17df8:	bl	140e4 <fprintf@plt>
   17dfc:	mov	r2, r4
   17e00:	ldr	r1, [pc, #1824]	; 18528 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   17e04:	ldr	r0, [r4, #204]	; 0xcc
   17e08:	bl	140e4 <fprintf@plt>
   17e0c:	mov	r2, r4
   17e10:	ldr	r1, [pc, #1812]	; 1852c <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   17e14:	ldr	r0, [r4, #204]	; 0xcc
   17e18:	bl	140e4 <fprintf@plt>
   17e1c:	mov	r2, r4
   17e20:	ldr	r1, [pc, #1800]	; 18530 <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   17e24:	ldr	r0, [r4, #204]	; 0xcc
   17e28:	bl	140e4 <fprintf@plt>
   17e2c:	mov	r2, r4
   17e30:	ldr	r1, [pc, #1788]	; 18534 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   17e34:	ldr	r0, [r4, #204]	; 0xcc
   17e38:	bl	140e4 <fprintf@plt>
   17e3c:	mov	r2, r4
   17e40:	ldr	r1, [pc, #1776]	; 18538 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   17e44:	ldr	r0, [r4, #204]	; 0xcc
   17e48:	bl	140e4 <fprintf@plt>
   17e4c:	mov	r3, r4
   17e50:	mov	r2, r4
   17e54:	ldr	r1, [pc, #1760]	; 1853c <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   17e58:	str	r4, [sp, #4]
   17e5c:	str	r4, [sp]
   17e60:	ldr	r0, [r4, #204]	; 0xcc
   17e64:	bl	140e4 <fprintf@plt>
   17e68:	mov	r3, r4
   17e6c:	mov	r2, r4
   17e70:	ldr	r1, [pc, #1736]	; 18540 <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   17e74:	str	r4, [sp, #12]
   17e78:	str	r4, [sp, #8]
   17e7c:	str	r4, [sp, #4]
   17e80:	str	r4, [sp]
   17e84:	ldr	r0, [r4, #204]	; 0xcc
   17e88:	bl	140e4 <fprintf@plt>
   17e8c:	mov	r3, r4
   17e90:	mov	r2, r4
   17e94:	ldr	r1, [pc, #1704]	; 18544 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   17e98:	str	r4, [sp]
   17e9c:	ldr	r0, [r4, #204]	; 0xcc
   17ea0:	bl	140e4 <fprintf@plt>
   17ea4:	mov	r3, r4
   17ea8:	mov	r2, r4
   17eac:	ldr	r1, [pc, #1684]	; 18548 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   17eb0:	str	r4, [sp, #32]
   17eb4:	str	r4, [sp, #28]
   17eb8:	str	r4, [sp, #24]
   17ebc:	str	r4, [sp, #20]
   17ec0:	str	r4, [sp, #16]
   17ec4:	str	r4, [sp, #12]
   17ec8:	str	r4, [sp, #8]
   17ecc:	str	r4, [sp, #4]
   17ed0:	str	r4, [sp]
   17ed4:	ldr	r0, [r4, #204]	; 0xcc
   17ed8:	bl	140e4 <fprintf@plt>
   17edc:	mov	r3, r4
   17ee0:	mov	r2, r4
   17ee4:	ldr	r1, [pc, #1632]	; 1854c <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   17ee8:	ldr	r0, [r4, #204]	; 0xcc
   17eec:	bl	140e4 <fprintf@plt>
   17ef0:	mov	r3, r4
   17ef4:	mov	r2, r4
   17ef8:	ldr	r1, [pc, #1616]	; 18550 <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   17efc:	str	r4, [sp]
   17f00:	ldr	r0, [r4, #204]	; 0xcc
   17f04:	bl	140e4 <fprintf@plt>
   17f08:	mov	r3, r4
   17f0c:	mov	r2, r4
   17f10:	ldr	r1, [pc, #1596]	; 18554 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   17f14:	str	r4, [sp]
   17f18:	ldr	r0, [r4, #204]	; 0xcc
   17f1c:	bl	140e4 <fprintf@plt>
   17f20:	mov	r2, r4
   17f24:	ldr	r1, [pc, #1580]	; 18558 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   17f28:	ldr	r0, [r4, #204]	; 0xcc
   17f2c:	bl	140e4 <fprintf@plt>
   17f30:	mov	r2, r4
   17f34:	ldr	r1, [pc, #1568]	; 1855c <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   17f38:	ldr	r0, [r4, #204]	; 0xcc
   17f3c:	bl	140e4 <fprintf@plt>
   17f40:	mov	r3, r4
   17f44:	mov	r2, r4
   17f48:	ldr	r1, [pc, #1552]	; 18560 <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   17f4c:	ldr	r0, [r4, #204]	; 0xcc
   17f50:	bl	140e4 <fprintf@plt>
   17f54:	mov	r3, r4
   17f58:	mov	r2, r4
   17f5c:	ldr	r1, [pc, #1536]	; 18564 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   17f60:	ldr	r0, [r4, #204]	; 0xcc
   17f64:	bl	140e4 <fprintf@plt>
   17f68:	mov	r3, r4
   17f6c:	mov	r2, r4
   17f70:	ldr	r1, [pc, #1520]	; 18568 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   17f74:	str	r4, [sp, #32]
   17f78:	str	r4, [sp, #28]
   17f7c:	str	r4, [sp, #24]
   17f80:	str	r4, [sp, #20]
   17f84:	str	r4, [sp, #16]
   17f88:	str	r4, [sp, #12]
   17f8c:	str	r4, [sp, #8]
   17f90:	str	r4, [sp, #4]
   17f94:	str	r4, [sp]
   17f98:	ldr	r0, [r4, #204]	; 0xcc
   17f9c:	bl	140e4 <fprintf@plt>
   17fa0:	mov	r3, r4
   17fa4:	mov	r2, r4
   17fa8:	ldr	r1, [pc, #1468]	; 1856c <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   17fac:	str	r4, [sp, #32]
   17fb0:	str	r4, [sp, #28]
   17fb4:	str	r4, [sp, #24]
   17fb8:	str	r4, [sp, #20]
   17fbc:	str	r4, [sp, #16]
   17fc0:	str	r4, [sp, #12]
   17fc4:	str	r4, [sp, #8]
   17fc8:	str	r4, [sp, #4]
   17fcc:	str	r4, [sp]
   17fd0:	ldr	r0, [r4, #204]	; 0xcc
   17fd4:	bl	140e4 <fprintf@plt>
   17fd8:	mov	r3, r4
   17fdc:	mov	r2, r4
   17fe0:	ldr	r1, [pc, #1416]	; 18570 <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   17fe4:	str	r4, [sp, #16]
   17fe8:	str	r4, [sp, #12]
   17fec:	str	r4, [sp, #8]
   17ff0:	str	r4, [sp, #4]
   17ff4:	str	r4, [sp]
   17ff8:	ldr	r0, [r4, #204]	; 0xcc
   17ffc:	bl	140e4 <fprintf@plt>
   18000:	mov	r3, r4
   18004:	mov	r2, r4
   18008:	ldr	r1, [pc, #1380]	; 18574 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   1800c:	str	r4, [sp, #32]
   18010:	str	r4, [sp, #28]
   18014:	str	r4, [sp, #24]
   18018:	str	r4, [sp, #20]
   1801c:	str	r4, [sp, #16]
   18020:	str	r4, [sp, #12]
   18024:	str	r4, [sp, #8]
   18028:	str	r4, [sp, #4]
   1802c:	str	r4, [sp]
   18030:	ldr	r0, [r4, #204]	; 0xcc
   18034:	bl	140e4 <fprintf@plt>
   18038:	mov	r3, r4
   1803c:	mov	r2, r4
   18040:	ldr	r1, [pc, #1328]	; 18578 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   18044:	str	r4, [sp, #40]	; 0x28
   18048:	str	r4, [sp, #36]	; 0x24
   1804c:	str	r4, [sp, #32]
   18050:	str	r4, [sp, #28]
   18054:	str	r4, [sp, #24]
   18058:	str	r4, [sp, #20]
   1805c:	str	r4, [sp, #16]
   18060:	str	r4, [sp, #12]
   18064:	str	r4, [sp, #8]
   18068:	str	r4, [sp, #4]
   1806c:	str	r4, [sp]
   18070:	ldr	r0, [r4, #204]	; 0xcc
   18074:	bl	140e4 <fprintf@plt>
   18078:	mov	r2, r4
   1807c:	ldr	r1, [pc, #1272]	; 1857c <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   18080:	ldr	r0, [r4, #204]	; 0xcc
   18084:	bl	140e4 <fprintf@plt>
   18088:	mov	r2, r4
   1808c:	ldr	r1, [pc, #1260]	; 18580 <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   18090:	ldr	r0, [r4, #204]	; 0xcc
   18094:	bl	140e4 <fprintf@plt>
   18098:	ldr	r3, [r4, #212]	; 0xd4
   1809c:	ldr	r3, [r3, #136]	; 0x88
   180a0:	cmp	r3, #0
   180a4:	beq	18458 <__flatcc_fb_gen_common_c_header@@Base+0xaa0>
   180a8:	mov	r0, r4
   180ac:	bl	18a1c <__flatcc_gen_sort@@Base>
   180b0:	mov	r3, r4
   180b4:	str	r4, [sp, #8]
   180b8:	str	r4, [sp, #4]
   180bc:	str	r4, [sp]
   180c0:	mov	r2, r4
   180c4:	ldr	r1, [pc, #1208]	; 18584 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   180c8:	ldr	r0, [r4, #204]	; 0xcc
   180cc:	bl	140e4 <fprintf@plt>
   180d0:	ldr	r3, [r4, #212]	; 0xd4
   180d4:	ldr	r3, [r3, #136]	; 0x88
   180d8:	cmp	r3, #0
   180dc:	beq	18468 <__flatcc_fb_gen_common_c_header@@Base+0xab0>
   180e0:	mov	r2, r4
   180e4:	ldr	r1, [pc, #1180]	; 18588 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   180e8:	ldr	r0, [r4, #204]	; 0xcc
   180ec:	bl	140e4 <fprintf@plt>
   180f0:	ldr	r1, [r4, #204]	; 0xcc
   180f4:	mov	r0, #10
   180f8:	bl	14144 <fputc@plt>
   180fc:	mov	r3, r4
   18100:	mov	r2, r4
   18104:	ldr	r1, [pc, #1152]	; 1858c <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   18108:	str	r4, [sp]
   1810c:	ldr	r0, [r4, #204]	; 0xcc
   18110:	bl	140e4 <fprintf@plt>
   18114:	mov	r3, r4
   18118:	mov	r2, r4
   1811c:	ldr	r1, [pc, #1132]	; 18590 <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   18120:	str	r4, [sp, #24]
   18124:	str	r4, [sp, #20]
   18128:	str	r4, [sp, #16]
   1812c:	str	r4, [sp, #12]
   18130:	str	r4, [sp, #8]
   18134:	str	r4, [sp, #4]
   18138:	str	r4, [sp]
   1813c:	ldr	r0, [r4, #204]	; 0xcc
   18140:	str	r4, [sp, #92]	; 0x5c
   18144:	str	r4, [sp, #88]	; 0x58
   18148:	str	r4, [sp, #84]	; 0x54
   1814c:	str	r4, [sp, #80]	; 0x50
   18150:	str	r4, [sp, #76]	; 0x4c
   18154:	str	r4, [sp, #72]	; 0x48
   18158:	str	r4, [sp, #68]	; 0x44
   1815c:	str	r4, [sp, #64]	; 0x40
   18160:	str	r4, [sp, #60]	; 0x3c
   18164:	str	r4, [sp, #56]	; 0x38
   18168:	str	r4, [sp, #52]	; 0x34
   1816c:	str	r4, [sp, #48]	; 0x30
   18170:	str	r4, [sp, #44]	; 0x2c
   18174:	str	r4, [sp, #40]	; 0x28
   18178:	str	r4, [sp, #36]	; 0x24
   1817c:	str	r4, [sp, #32]
   18180:	str	r4, [sp, #28]
   18184:	bl	140e4 <fprintf@plt>
   18188:	mov	r3, r4
   1818c:	mov	r2, r4
   18190:	ldr	r1, [pc, #1020]	; 18594 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   18194:	str	r4, [sp, #36]	; 0x24
   18198:	str	r4, [sp, #32]
   1819c:	str	r4, [sp, #28]
   181a0:	str	r4, [sp, #24]
   181a4:	str	r4, [sp, #20]
   181a8:	str	r4, [sp, #16]
   181ac:	str	r4, [sp, #12]
   181b0:	str	r4, [sp, #8]
   181b4:	str	r4, [sp, #4]
   181b8:	str	r4, [sp]
   181bc:	ldr	r0, [r4, #204]	; 0xcc
   181c0:	bl	140e4 <fprintf@plt>
   181c4:	mov	r3, r4
   181c8:	str	r4, [sp, #228]	; 0xe4
   181cc:	str	r4, [sp, #224]	; 0xe0
   181d0:	str	r4, [sp, #220]	; 0xdc
   181d4:	str	r4, [sp, #216]	; 0xd8
   181d8:	str	r4, [sp, #212]	; 0xd4
   181dc:	str	r4, [sp, #208]	; 0xd0
   181e0:	str	r4, [sp, #204]	; 0xcc
   181e4:	str	r4, [sp, #200]	; 0xc8
   181e8:	str	r4, [sp, #196]	; 0xc4
   181ec:	str	r4, [sp, #192]	; 0xc0
   181f0:	str	r4, [sp, #188]	; 0xbc
   181f4:	str	r4, [sp, #184]	; 0xb8
   181f8:	str	r4, [sp, #180]	; 0xb4
   181fc:	str	r4, [sp, #176]	; 0xb0
   18200:	str	r4, [sp, #172]	; 0xac
   18204:	str	r4, [sp, #168]	; 0xa8
   18208:	str	r4, [sp, #164]	; 0xa4
   1820c:	str	r4, [sp, #160]	; 0xa0
   18210:	str	r4, [sp, #156]	; 0x9c
   18214:	str	r4, [sp, #152]	; 0x98
   18218:	str	r4, [sp, #148]	; 0x94
   1821c:	str	r4, [sp, #144]	; 0x90
   18220:	str	r4, [sp, #140]	; 0x8c
   18224:	str	r4, [sp, #136]	; 0x88
   18228:	str	r4, [sp, #132]	; 0x84
   1822c:	str	r4, [sp, #128]	; 0x80
   18230:	str	r4, [sp, #124]	; 0x7c
   18234:	str	r4, [sp, #120]	; 0x78
   18238:	str	r4, [sp, #116]	; 0x74
   1823c:	str	r4, [sp, #112]	; 0x70
   18240:	str	r4, [sp, #108]	; 0x6c
   18244:	str	r4, [sp, #104]	; 0x68
   18248:	mov	r2, r4
   1824c:	str	r4, [sp, #100]	; 0x64
   18250:	ldr	r1, [pc, #832]	; 18598 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   18254:	str	r4, [sp, #20]
   18258:	str	r4, [sp, #16]
   1825c:	str	r4, [sp, #12]
   18260:	str	r4, [sp, #8]
   18264:	str	r4, [sp, #4]
   18268:	str	r4, [sp]
   1826c:	ldr	r0, [r4, #204]	; 0xcc
   18270:	str	r4, [sp, #96]	; 0x60
   18274:	str	r4, [sp, #92]	; 0x5c
   18278:	str	r4, [sp, #88]	; 0x58
   1827c:	str	r4, [sp, #84]	; 0x54
   18280:	str	r4, [sp, #80]	; 0x50
   18284:	str	r4, [sp, #76]	; 0x4c
   18288:	str	r4, [sp, #72]	; 0x48
   1828c:	str	r4, [sp, #68]	; 0x44
   18290:	str	r4, [sp, #64]	; 0x40
   18294:	str	r4, [sp, #60]	; 0x3c
   18298:	str	r4, [sp, #56]	; 0x38
   1829c:	str	r4, [sp, #52]	; 0x34
   182a0:	str	r4, [sp, #48]	; 0x30
   182a4:	str	r4, [sp, #44]	; 0x2c
   182a8:	str	r4, [sp, #40]	; 0x28
   182ac:	str	r4, [sp, #36]	; 0x24
   182b0:	str	r4, [sp, #32]
   182b4:	str	r4, [sp, #28]
   182b8:	str	r4, [sp, #24]
   182bc:	bl	140e4 <fprintf@plt>
   182c0:	ldr	r3, [r4, #212]	; 0xd4
   182c4:	ldr	r3, [r3, #136]	; 0x88
   182c8:	cmp	r3, #0
   182cc:	beq	182e0 <__flatcc_fb_gen_common_c_header@@Base+0x928>
   182d0:	mov	r2, r4
   182d4:	ldr	r1, [pc, #704]	; 1859c <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   182d8:	ldr	r0, [r4, #204]	; 0xcc
   182dc:	bl	140e4 <fprintf@plt>
   182e0:	mov	r3, r4
   182e4:	mov	r2, r4
   182e8:	ldr	r1, [pc, #688]	; 185a0 <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   182ec:	ldr	r0, [r4, #204]	; 0xcc
   182f0:	bl	140e4 <fprintf@plt>
   182f4:	ldr	r3, [r4, #212]	; 0xd4
   182f8:	ldr	r3, [r3, #32]
   182fc:	cmp	r3, #0
   18300:	beq	18478 <__flatcc_fb_gen_common_c_header@@Base+0xac0>
   18304:	mov	r2, r4
   18308:	ldr	r1, [pc, #440]	; 184c8 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   1830c:	ldr	r0, [r4, #204]	; 0xcc
   18310:	bl	140e4 <fprintf@plt>
   18314:	mov	r2, r4
   18318:	ldr	r1, [pc, #644]	; 185a4 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   1831c:	ldr	r0, [r4, #204]	; 0xcc
   18320:	bl	140e4 <fprintf@plt>
   18324:	mov	r3, r4
   18328:	mov	r2, r4
   1832c:	ldr	r1, [pc, #628]	; 185a8 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   18330:	str	r4, [sp, #44]	; 0x2c
   18334:	str	r4, [sp, #40]	; 0x28
   18338:	str	r4, [sp, #36]	; 0x24
   1833c:	str	r4, [sp, #32]
   18340:	str	r4, [sp, #28]
   18344:	str	r4, [sp, #24]
   18348:	str	r4, [sp, #20]
   1834c:	str	r4, [sp, #16]
   18350:	str	r4, [sp, #12]
   18354:	str	r4, [sp, #8]
   18358:	str	r4, [sp, #4]
   1835c:	str	r4, [sp]
   18360:	ldr	r0, [r4, #204]	; 0xcc
   18364:	bl	140e4 <fprintf@plt>
   18368:	mov	r3, r4
   1836c:	mov	r2, r4
   18370:	ldr	r1, [pc, #564]	; 185ac <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   18374:	str	r4, [sp]
   18378:	ldr	r0, [r4, #204]	; 0xcc
   1837c:	bl	140e4 <fprintf@plt>
   18380:	mov	r3, r4
   18384:	mov	r2, r4
   18388:	ldr	r1, [pc, #544]	; 185b0 <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   1838c:	str	r4, [sp, #12]
   18390:	str	r4, [sp, #8]
   18394:	str	r4, [sp, #4]
   18398:	str	r4, [sp]
   1839c:	ldr	r0, [r4, #204]	; 0xcc
   183a0:	bl	140e4 <fprintf@plt>
   183a4:	mov	r3, r4
   183a8:	mov	r2, r4
   183ac:	ldr	r1, [pc, #512]	; 185b4 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   183b0:	str	r4, [sp, #4]
   183b4:	str	r4, [sp]
   183b8:	ldr	r0, [r4, #204]	; 0xcc
   183bc:	bl	140e4 <fprintf@plt>
   183c0:	mov	r3, r4
   183c4:	mov	r2, r4
   183c8:	ldr	r1, [pc, #488]	; 185b8 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   183cc:	str	r4, [sp, #28]
   183d0:	str	r4, [sp, #24]
   183d4:	str	r4, [sp, #20]
   183d8:	str	r4, [sp, #16]
   183dc:	str	r4, [sp, #12]
   183e0:	str	r4, [sp, #8]
   183e4:	str	r4, [sp, #4]
   183e8:	str	r4, [sp]
   183ec:	ldr	r0, [r4, #204]	; 0xcc
   183f0:	bl	140e4 <fprintf@plt>
   183f4:	ldr	r1, [r4, #204]	; 0xcc
   183f8:	mov	r0, #10
   183fc:	bl	14144 <fputc@plt>
   18400:	ldr	r3, [r4, #212]	; 0xd4
   18404:	ldr	r3, [r3, #140]	; 0x8c
   18408:	cmp	r3, #0
   1840c:	beq	1841c <__flatcc_fb_gen_common_c_header@@Base+0xa64>
   18410:	ldr	r1, [r4, #204]	; 0xcc
   18414:	ldr	r0, [pc, #416]	; 185bc <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   18418:	bl	14180 <fputs@plt>
   1841c:	mov	r2, r5
   18420:	ldr	r1, [pc, #408]	; 185c0 <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   18424:	ldr	r0, [r4, #204]	; 0xcc
   18428:	bl	140e4 <fprintf@plt>
   1842c:	mov	r0, #0
   18430:	add	sp, sp, #236	; 0xec
   18434:	pop	{r4, r5, pc}
   18438:	ldr	r1, [r4, #204]	; 0xcc
   1843c:	mov	r0, #10
   18440:	bl	14144 <fputc@plt>
   18444:	b	17b48 <__flatcc_fb_gen_common_c_header@@Base+0x190>
   18448:	ldr	r1, [r4, #204]	; 0xcc
   1844c:	mov	r0, #10
   18450:	bl	14144 <fputc@plt>
   18454:	b	17c24 <__flatcc_fb_gen_common_c_header@@Base+0x26c>
   18458:	ldr	r1, [r4, #204]	; 0xcc
   1845c:	ldr	r0, [pc, #352]	; 185c4 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   18460:	bl	14180 <fputs@plt>
   18464:	b	180b0 <__flatcc_fb_gen_common_c_header@@Base+0x6f8>
   18468:	ldr	r1, [r4, #204]	; 0xcc
   1846c:	mov	r0, #10
   18470:	bl	14144 <fputc@plt>
   18474:	b	180f0 <__flatcc_fb_gen_common_c_header@@Base+0x738>
   18478:	ldr	r1, [r4, #204]	; 0xcc
   1847c:	mov	r0, #10
   18480:	bl	14144 <fputc@plt>
   18484:	b	18314 <__flatcc_fb_gen_common_c_header@@Base+0x95c>
   18488:	andeq	r2, r3, r9, lsl #27
   1848c:	andeq	r2, r3, r0, asr #27
   18490:	andeq	r2, r3, r2, lsl lr
   18494:	andeq	r2, r3, r7, asr #28
   18498:	andeq	r2, r3, pc, asr #29
   1849c:	strdeq	r2, [r3], -r4
   184a0:	andeq	r2, r3, lr, lsl pc
   184a4:	andeq	r2, r3, fp, lsr #30
   184a8:	andeq	r2, r3, ip, lsl pc
   184ac:	strdeq	r2, [r3], -sl
   184b0:	andeq	r3, r3, r1, asr r1
   184b4:			; <UNDEFINED> instruction: 0x000333b7
   184b8:	andeq	r3, r3, r7, lsl #8
   184bc:	muleq	r3, r4, r4
   184c0:	andeq	r3, r3, r7, lsl #12
   184c4:	andeq	r3, r3, ip, asr r6
   184c8:	andeq	r3, r3, r1, lsl #15
   184cc:	andeq	r3, r3, lr, lsr #15
   184d0:	andeq	r3, r3, r1, lsl #17
   184d4:	andeq	r3, r3, fp, lsr #20
   184d8:	andeq	r3, r3, fp, asr #21
   184dc:	andeq	r3, r3, r5, lsr #23
   184e0:	andeq	r3, r3, pc, ror ip
   184e4:	andeq	r3, r3, r7, asr sp
   184e8:	andeq	r3, r3, pc, lsr lr
   184ec:	andeq	r3, r3, r9, ror #28
   184f0:	andeq	r3, r3, r8, lsl #30
   184f4:	andeq	r3, r3, sl, asr #30
   184f8:	ldrdeq	r3, [r3], -r4
   184fc:	andeq	r4, r3, r6, asr #32
   18500:	andeq	r4, r3, r6, ror #2
   18504:	ldrdeq	r4, [r3], -sp
   18508:	andeq	r4, r3, sp, asr r2
   1850c:	andeq	r4, r3, r0, asr #5
   18510:	andeq	r4, r3, r1, ror #7
   18514:	andeq	r4, r3, r3, lsl #8
   18518:	andeq	r4, r3, sl, lsl #9
   1851c:	andeq	r4, r3, r9, lsr r6
   18520:	strdeq	r4, [r3], -ip
   18524:	muleq	r3, r5, r7
   18528:	andeq	r4, r3, ip, lsl #16
   1852c:	ldrdeq	r4, [r3], -sp
   18530:	andeq	r4, r3, pc, ror #26
   18534:	strdeq	r4, [r3], -r0
   18538:	andeq	r4, r3, lr, asr lr
   1853c:	andeq	r5, r3, r2, asr #32
   18540:	andeq	r5, r3, fp, ror #1
   18544:	andeq	r5, r3, r6, asr #5
   18548:	andeq	r5, r3, r0, ror #9
   1854c:	andeq	r5, r3, r7, lsr r6
   18550:	andeq	r5, r3, r6, lsl #14
   18554:			; <UNDEFINED> instruction: 0x000357bb
   18558:	andeq	r5, r3, r0, ror r9
   1855c:	andeq	r5, r3, sl, lsl sl
   18560:	andeq	r5, r3, r7, asr #22
   18564:	muleq	r3, r7, ip
   18568:	andeq	r5, r3, fp, ror #26
   1856c:	andeq	r5, r3, r6, ror #29
   18570:	andeq	r6, r3, r7, rrx
   18574:			; <UNDEFINED> instruction: 0x000363bc
   18578:	ldrdeq	r6, [r3], -ip
   1857c:	andeq	r6, r3, r5, lsr #27
   18580:	strdeq	r6, [r3], -r5
   18584:	andeq	r7, r3, fp, asr #9
   18588:	andeq	r7, r3, ip, lsr #11
   1858c:	andeq	r7, r3, ip, asr #11
   18590:	andeq	r7, r3, ip, asr #12
   18594:	andeq	r7, r3, pc, asr r8
   18598:	andeq	r7, r3, r9, lsr #19
   1859c:	andeq	r8, r3, r2, rrx
   185a0:	andeq	r8, r3, ip, ror r0
   185a4:	andeq	r8, r3, r5, lsl r1
   185a8:	muleq	r3, r4, r1
   185ac:	ldrdeq	r8, [r3], -sp
   185b0:	muleq	r3, r4, r5
   185b4:	andeq	r8, r3, fp, asr r7
   185b8:	ldrdeq	r8, [r3], -r7
   185bc:			; <UNDEFINED> instruction: 0x00038cb9
   185c0:	ldrdeq	r8, [r3], -lr
   185c4:			; <UNDEFINED> instruction: 0x000374b6

000185c8 <__flatcc_fb_gen_c_reader@@Base>:
   185c8:	ldr	r3, [r0, #212]	; 0xd4
   185cc:	push	{r4, r5, r6, r7, lr}
   185d0:	mov	r4, r0
   185d4:	ldr	r5, [r3, #132]	; 0x84
   185d8:	ldr	r3, [r0, #208]	; 0xd0
   185dc:	sub	sp, sp, #252	; 0xfc
   185e0:	ldr	r1, [pc, #976]	; 189b8 <__flatcc_fb_gen_c_reader@@Base+0x3f0>
   185e4:	ldr	r3, [r3, #164]	; 0xa4
   185e8:	add	r6, r0, #102	; 0x66
   185ec:	mov	r2, r3
   185f0:	ldr	r0, [r0, #204]	; 0xcc
   185f4:	bl	140e4 <fprintf@plt>
   185f8:	ldr	r1, [r4, #204]	; 0xcc
   185fc:	ldr	r0, [pc, #952]	; 189bc <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   18600:	bl	14180 <fputs@plt>
   18604:	cmp	r5, #0
   18608:	beq	18618 <__flatcc_fb_gen_c_reader@@Base+0x50>
   1860c:	ldr	r1, [r4, #204]	; 0xcc
   18610:	ldr	r0, [pc, #936]	; 189c0 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   18614:	bl	14180 <fputs@plt>
   18618:	mov	r3, r4
   1861c:	mov	r2, r6
   18620:	ldr	r1, [pc, #924]	; 189c4 <__flatcc_fb_gen_c_reader@@Base+0x3fc>
   18624:	ldr	r0, [r4, #204]	; 0xcc
   18628:	bl	140e4 <fprintf@plt>
   1862c:	ldr	r2, [pc, #916]	; 189c8 <__flatcc_fb_gen_c_reader@@Base+0x400>
   18630:	ldr	r1, [pc, #916]	; 189cc <__flatcc_fb_gen_c_reader@@Base+0x404>
   18634:	mov	r0, r4
   18638:	bl	15954 <__flatcc_fb_gen_c_includes@@Base>
   1863c:	ldr	r1, [r4, #204]	; 0xcc
   18640:	ldr	r0, [pc, #904]	; 189d0 <__flatcc_fb_gen_c_reader@@Base+0x408>
   18644:	bl	14180 <fputs@plt>
   18648:	cmp	r5, #0
   1864c:	bne	1865c <__flatcc_fb_gen_c_reader@@Base+0x94>
   18650:	ldr	r1, [r4, #204]	; 0xcc
   18654:	ldr	r0, [pc, #888]	; 189d4 <__flatcc_fb_gen_c_reader@@Base+0x40c>
   18658:	bl	14180 <fputs@plt>
   1865c:	ldr	r3, [r4, #212]	; 0xd4
   18660:	ldr	r3, [r3, #140]	; 0x8c
   18664:	cmp	r3, #0
   18668:	beq	18678 <__flatcc_fb_gen_c_reader@@Base+0xb0>
   1866c:	ldr	r1, [r4, #204]	; 0xcc
   18670:	ldr	r0, [pc, #864]	; 189d8 <__flatcc_fb_gen_c_reader@@Base+0x410>
   18674:	bl	14180 <fputs@plt>
   18678:	ldr	r3, [r4, #208]	; 0xd0
   1867c:	ldrh	r2, [r3, #16]
   18680:	cmp	r2, #2
   18684:	bne	187bc <__flatcc_fb_gen_c_reader@@Base+0x1f4>
   18688:	ldr	r2, [r3, #8]
   1868c:	ldr	r1, [pc, #840]	; 189dc <__flatcc_fb_gen_c_reader@@Base+0x414>
   18690:	str	r2, [sp, #4]
   18694:	ldr	r3, [r3, #12]
   18698:	mov	r2, r4
   1869c:	str	r3, [sp]
   186a0:	ldr	r0, [r4, #204]	; 0xcc
   186a4:	mov	r3, r4
   186a8:	bl	140e4 <fprintf@plt>
   186ac:	ldr	r3, [r4, #208]	; 0xd0
   186b0:	ldrh	r2, [r3, #32]
   186b4:	cmp	r2, #2
   186b8:	bne	187d4 <__flatcc_fb_gen_c_reader@@Base+0x20c>
   186bc:	ldr	r2, [r3, #24]
   186c0:	ldr	r1, [pc, #792]	; 189e0 <__flatcc_fb_gen_c_reader@@Base+0x418>
   186c4:	str	r2, [sp, #4]
   186c8:	ldr	r3, [r3, #28]
   186cc:	mov	r2, r4
   186d0:	str	r3, [sp]
   186d4:	ldr	r0, [r4, #204]	; 0xcc
   186d8:	mov	r3, r4
   186dc:	bl	140e4 <fprintf@plt>
   186e0:	ldr	r1, [r4, #204]	; 0xcc
   186e4:	mov	r0, #10
   186e8:	bl	14144 <fputc@plt>
   186ec:	ldr	r3, [r4, #208]	; 0xd0
   186f0:	ldr	r5, [r3, #44]	; 0x2c
   186f4:	cmp	r5, #0
   186f8:	bne	187f8 <__flatcc_fb_gen_c_reader@@Base+0x230>
   186fc:	ldr	r1, [r4, #204]	; 0xcc
   18700:	mov	r0, #10
   18704:	bl	14144 <fputc@plt>
   18708:	ldr	r3, [r4, #208]	; 0xd0
   1870c:	ldr	r5, [r3, #40]	; 0x28
   18710:	cmp	r5, #0
   18714:	bne	1880c <__flatcc_fb_gen_c_reader@@Base+0x244>
   18718:	ldr	r3, [r4, #208]	; 0xd0
   1871c:	mov	r7, #92	; 0x5c
   18720:	ldr	r5, [r3, #40]	; 0x28
   18724:	cmp	r5, #0
   18728:	bne	1882c <__flatcc_fb_gen_c_reader@@Base+0x264>
   1872c:	ldr	r1, [r4, #204]	; 0xcc
   18730:	mov	r0, #10
   18734:	bl	14144 <fputc@plt>
   18738:	ldr	r3, [r4, #208]	; 0xd0
   1873c:	ldr	r5, [r3, #40]	; 0x28
   18740:	cmp	r5, #0
   18744:	bne	18908 <__flatcc_fb_gen_c_reader@@Base+0x340>
   18748:	ldr	r1, [r4, #204]	; 0xcc
   1874c:	mov	r0, #10
   18750:	bl	14144 <fputc@plt>
   18754:	ldr	r3, [r4, #208]	; 0xd0
   18758:	ldr	r5, [r3, #44]	; 0x2c
   1875c:	cmp	r5, #0
   18760:	bne	18928 <__flatcc_fb_gen_c_reader@@Base+0x360>
   18764:	ldr	r3, [r4, #208]	; 0xd0
   18768:	ldr	r5, [r3, #40]	; 0x28
   1876c:	cmp	r5, #0
   18770:	bne	1893c <__flatcc_fb_gen_c_reader@@Base+0x374>
   18774:	ldr	r1, [r4, #204]	; 0xcc
   18778:	mov	r0, #10
   1877c:	bl	14144 <fputc@plt>
   18780:	ldr	r3, [r4, #212]	; 0xd4
   18784:	ldr	r3, [r3, #140]	; 0x8c
   18788:	cmp	r3, #0
   1878c:	beq	1879c <__flatcc_fb_gen_c_reader@@Base+0x1d4>
   18790:	ldr	r1, [r4, #204]	; 0xcc
   18794:	ldr	r0, [pc, #584]	; 189e4 <__flatcc_fb_gen_c_reader@@Base+0x41c>
   18798:	bl	14180 <fputs@plt>
   1879c:	ldr	r3, [r4, #208]	; 0xd0
   187a0:	ldr	r1, [pc, #576]	; 189e8 <__flatcc_fb_gen_c_reader@@Base+0x420>
   187a4:	ldr	r0, [r4, #204]	; 0xcc
   187a8:	ldr	r2, [r3, #164]	; 0xa4
   187ac:	bl	140e4 <fprintf@plt>
   187b0:	mov	r0, #0
   187b4:	add	sp, sp, #252	; 0xfc
   187b8:	pop	{r4, r5, r6, r7, pc}
   187bc:	mov	r3, r4
   187c0:	mov	r2, r4
   187c4:	ldr	r1, [pc, #544]	; 189ec <__flatcc_fb_gen_c_reader@@Base+0x424>
   187c8:	ldr	r0, [r4, #204]	; 0xcc
   187cc:	bl	140e4 <fprintf@plt>
   187d0:	b	186ac <__flatcc_fb_gen_c_reader@@Base+0xe4>
   187d4:	ldr	r3, [r4, #212]	; 0xd4
   187d8:	mov	r2, r4
   187dc:	ldr	r1, [pc, #524]	; 189f0 <__flatcc_fb_gen_c_reader@@Base+0x428>
   187e0:	ldr	r3, [r3, #104]	; 0x68
   187e4:	ldr	r0, [r4, #204]	; 0xcc
   187e8:	str	r3, [sp]
   187ec:	mov	r3, r4
   187f0:	bl	140e4 <fprintf@plt>
   187f4:	b	186e0 <__flatcc_fb_gen_c_reader@@Base+0x118>
   187f8:	mov	r1, r5
   187fc:	mov	r0, r4
   18800:	bl	15e50 <__flatcc_fb_codegen_c@@Base+0x1d0>
   18804:	ldr	r5, [r5, #120]	; 0x78
   18808:	b	186f4 <__flatcc_fb_gen_c_reader@@Base+0x12c>
   1880c:	ldrh	r3, [r5, #8]
   18810:	cmp	r3, #0
   18814:	bne	18824 <__flatcc_fb_gen_c_reader@@Base+0x25c>
   18818:	mov	r1, r5
   1881c:	mov	r0, r4
   18820:	bl	15e50 <__flatcc_fb_codegen_c@@Base+0x1d0>
   18824:	ldr	r5, [r5]
   18828:	b	18710 <__flatcc_fb_gen_c_reader@@Base+0x148>
   1882c:	ldrh	r3, [r5, #8]
   18830:	cmp	r3, #1
   18834:	bhi	188b8 <__flatcc_fb_gen_c_reader@@Base+0x2f0>
   18838:	mov	r2, #220	; 0xdc
   1883c:	mov	r1, #0
   18840:	add	r0, sp, #28
   18844:	bl	140fc <memset@plt>
   18848:	add	r1, sp, #28
   1884c:	mov	r0, r5
   18850:	bl	15e40 <__flatcc_fb_codegen_c@@Base+0x1c0>
   18854:	ldr	r6, [r5, #88]	; 0x58
   18858:	add	r3, sp, #28
   1885c:	mov	r2, r3
   18860:	ldr	r1, [pc, #396]	; 189f4 <__flatcc_fb_gen_c_reader@@Base+0x42c>
   18864:	str	r4, [sp]
   18868:	ldr	r0, [r4, #204]	; 0xcc
   1886c:	bl	140e4 <fprintf@plt>
   18870:	mov	r3, r4
   18874:	add	r2, sp, #28
   18878:	str	r6, [sp]
   1887c:	ldr	r1, [pc, #372]	; 189f8 <__flatcc_fb_gen_c_reader@@Base+0x430>
   18880:	ldr	r0, [r4, #204]	; 0xcc
   18884:	bl	140e4 <fprintf@plt>
   18888:	add	r2, sp, #8
   1888c:	mov	r0, #4
   18890:	mov	r3, r2
   18894:	mov	ip, #120	; 0x78
   18898:	subs	r0, r0, #1
   1889c:	bcs	188c0 <__flatcc_fb_gen_c_reader@@Base+0x2f8>
   188a0:	mov	r2, #0
   188a4:	strb	r2, [sp, #24]
   188a8:	ldr	r1, [pc, #332]	; 189fc <__flatcc_fb_gen_c_reader@@Base+0x434>
   188ac:	add	r2, sp, #28
   188b0:	ldr	r0, [r4, #204]	; 0xcc
   188b4:	bl	140e4 <fprintf@plt>
   188b8:	ldr	r5, [r5]
   188bc:	b	18724 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   188c0:	and	r1, r6, #15
   188c4:	cmp	r1, #9
   188c8:	movhi	lr, #87	; 0x57
   188cc:	movls	lr, #48	; 0x30
   188d0:	add	r1, r1, lr
   188d4:	strb	r1, [r2, #3]
   188d8:	lsr	r1, r6, #4
   188dc:	and	r1, r1, #15
   188e0:	cmp	r1, #9
   188e4:	movhi	lr, #87	; 0x57
   188e8:	movls	lr, #48	; 0x30
   188ec:	add	r1, r1, lr
   188f0:	strb	r7, [r2]
   188f4:	strb	ip, [r2, #1]
   188f8:	strb	r1, [r2, #2]
   188fc:	lsr	r6, r6, #8
   18900:	add	r2, r2, #4
   18904:	b	18898 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
   18908:	ldrh	r3, [r5, #8]
   1890c:	cmp	r3, #3
   18910:	bne	18920 <__flatcc_fb_gen_c_reader@@Base+0x358>
   18914:	mov	r1, r5
   18918:	mov	r0, r4
   1891c:	bl	16c30 <__flatcc_fb_codegen_c@@Base+0xfb0>
   18920:	ldr	r5, [r5]
   18924:	b	18740 <__flatcc_fb_gen_c_reader@@Base+0x178>
   18928:	mov	r1, r5
   1892c:	mov	r0, r4
   18930:	bl	1626c <__flatcc_fb_codegen_c@@Base+0x5ec>
   18934:	ldr	r5, [r5, #120]	; 0x78
   18938:	b	1875c <__flatcc_fb_gen_c_reader@@Base+0x194>
   1893c:	ldrh	r3, [r5, #8]
   18940:	cmp	r3, #4
   18944:	ldrls	pc, [pc, r3, lsl #2]
   18948:	b	18984 <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   1894c:	andeq	r8, r1, r4, ror r9
   18950:	andeq	r8, r1, ip, ror #18
   18954:	andeq	r8, r1, ip, ror #18
   18958:	andeq	r8, r1, ip, ror #18
   1895c:	andeq	r8, r1, r0, ror #18
   18960:	mov	r1, r5
   18964:	mov	r0, r4
   18968:	bl	16c30 <__flatcc_fb_codegen_c@@Base+0xfb0>
   1896c:	ldr	r5, [r5]
   18970:	b	1876c <__flatcc_fb_gen_c_reader@@Base+0x1a4>
   18974:	mov	r1, r5
   18978:	mov	r0, r4
   1897c:	bl	16f54 <__flatcc_fb_codegen_c@@Base+0x12d4>
   18980:	b	1896c <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   18984:	ldr	r0, [pc, #116]	; 18a00 <__flatcc_fb_gen_c_reader@@Base+0x438>
   18988:	ldr	r3, [pc, #116]	; 18a04 <__flatcc_fb_gen_c_reader@@Base+0x43c>
   1898c:	ldr	r2, [pc, #116]	; 18a08 <__flatcc_fb_gen_c_reader@@Base+0x440>
   18990:	str	r3, [sp]
   18994:	ldr	r1, [pc, #112]	; 18a0c <__flatcc_fb_gen_c_reader@@Base+0x444>
   18998:	ldr	r3, [pc, #112]	; 18a10 <__flatcc_fb_gen_c_reader@@Base+0x448>
   1899c:	ldr	r0, [r0]
   189a0:	bl	140e4 <fprintf@plt>
   189a4:	ldr	r3, [pc, #104]	; 18a14 <__flatcc_fb_gen_c_reader@@Base+0x44c>
   189a8:	ldr	r2, [pc, #96]	; 18a10 <__flatcc_fb_gen_c_reader@@Base+0x448>
   189ac:	ldr	r1, [pc, #84]	; 18a08 <__flatcc_fb_gen_c_reader@@Base+0x440>
   189b0:	ldr	r0, [pc, #96]	; 18a18 <__flatcc_fb_gen_c_reader@@Base+0x450>
   189b4:	bl	141a4 <__assert_fail@plt>
   189b8:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   189bc:	andeq	r2, r3, r0, asr #27
   189c0:	andeq	r8, r3, r1, lsr #26
   189c4:	ldrdeq	r8, [r3], -sp
   189c8:	andeq	r8, r3, sp, lsl pc
   189cc:	andeq	r7, r4, fp, asr #20
   189d0:	andeq	r8, r3, r7, lsr #30
   189d4:	andeq	r8, r3, pc, asr #30
   189d8:	andeq	r2, r3, pc, asr #29
   189dc:	andeq	r8, r3, sl, lsl #31
   189e0:	andeq	r8, r3, pc, ror #31
   189e4:			; <UNDEFINED> instruction: 0x00038cb9
   189e8:	andeq	r9, r3, fp, lsl #2
   189ec:			; <UNDEFINED> instruction: 0x00038fbb
   189f0:	andeq	r9, r3, pc, lsl r0
   189f4:	andeq	r9, r3, r4, asr r0
   189f8:	muleq	r3, r5, r0
   189fc:	strheq	r9, [r3], -lr
   18a00:	strheq	ip, [r5], -r0
   18a04:	ldrdeq	r9, [r3], -pc	; <UNPREDICTABLE>
   18a08:	andeq	r1, r3, sl, lsl #18
   18a0c:	andeq	r1, r3, sl, ror #22
   18a10:	andeq	r0, r0, r8, lsl #13
   18a14:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   18a18:	andeq	sl, r3, r9, asr #3

00018a1c <__flatcc_gen_sort@@Base>:
   18a1c:	push	{r4, lr}
   18a20:	mov	r4, r0
   18a24:	sub	sp, sp, #24
   18a28:	mov	r2, r0
   18a2c:	ldr	r1, [pc, #240]	; 18b24 <__flatcc_gen_sort@@Base+0x108>
   18a30:	ldr	r0, [r0, #204]	; 0xcc
   18a34:	bl	140e4 <fprintf@plt>
   18a38:	mov	r3, r4
   18a3c:	mov	r2, r4
   18a40:	ldr	r1, [pc, #224]	; 18b28 <__flatcc_gen_sort@@Base+0x10c>
   18a44:	ldr	r0, [r4, #204]	; 0xcc
   18a48:	bl	140e4 <fprintf@plt>
   18a4c:	mov	r3, r4
   18a50:	mov	r2, r4
   18a54:	str	r4, [sp]
   18a58:	ldr	r1, [pc, #204]	; 18b2c <__flatcc_gen_sort@@Base+0x110>
   18a5c:	ldr	r0, [r4, #204]	; 0xcc
   18a60:	bl	140e4 <fprintf@plt>
   18a64:	mov	r3, r4
   18a68:	mov	r2, r4
   18a6c:	str	r4, [sp, #4]
   18a70:	str	r4, [sp]
   18a74:	ldr	r1, [pc, #180]	; 18b30 <__flatcc_gen_sort@@Base+0x114>
   18a78:	ldr	r0, [r4, #204]	; 0xcc
   18a7c:	bl	140e4 <fprintf@plt>
   18a80:	mov	r3, r4
   18a84:	mov	r2, r4
   18a88:	ldr	r1, [pc, #164]	; 18b34 <__flatcc_gen_sort@@Base+0x118>
   18a8c:	ldr	r0, [r4, #204]	; 0xcc
   18a90:	bl	140e4 <fprintf@plt>
   18a94:	mov	r3, r4
   18a98:	mov	r2, r4
   18a9c:	str	r4, [sp, #4]
   18aa0:	str	r4, [sp]
   18aa4:	ldr	r1, [pc, #140]	; 18b38 <__flatcc_gen_sort@@Base+0x11c>
   18aa8:	ldr	r0, [r4, #204]	; 0xcc
   18aac:	bl	140e4 <fprintf@plt>
   18ab0:	mov	r3, r4
   18ab4:	mov	r2, r4
   18ab8:	str	r4, [sp, #12]
   18abc:	str	r4, [sp, #8]
   18ac0:	str	r4, [sp, #4]
   18ac4:	str	r4, [sp]
   18ac8:	ldr	r1, [pc, #108]	; 18b3c <__flatcc_gen_sort@@Base+0x120>
   18acc:	ldr	r0, [r4, #204]	; 0xcc
   18ad0:	bl	140e4 <fprintf@plt>
   18ad4:	mov	r3, r4
   18ad8:	mov	r2, r4
   18adc:	str	r4, [sp, #4]
   18ae0:	str	r4, [sp]
   18ae4:	ldr	r1, [pc, #84]	; 18b40 <__flatcc_gen_sort@@Base+0x124>
   18ae8:	ldr	r0, [r4, #204]	; 0xcc
   18aec:	bl	140e4 <fprintf@plt>
   18af0:	str	r4, [sp, #16]
   18af4:	str	r4, [sp, #12]
   18af8:	str	r4, [sp, #8]
   18afc:	str	r4, [sp, #4]
   18b00:	str	r4, [sp]
   18b04:	mov	r3, r4
   18b08:	mov	r2, r4
   18b0c:	ldr	r1, [pc, #48]	; 18b44 <__flatcc_gen_sort@@Base+0x128>
   18b10:	ldr	r0, [r4, #204]	; 0xcc
   18b14:	bl	140e4 <fprintf@plt>
   18b18:	mov	r0, #0
   18b1c:	add	sp, sp, #24
   18b20:	pop	{r4, pc}
   18b24:	andeq	r9, r3, r5, lsr #2
   18b28:	strdeq	r9, [r3], -r3
   18b2c:	andeq	r9, r3, r3, lsl #12
   18b30:	ldrdeq	r9, [r3], -r7
   18b34:	andeq	r9, r3, fp, ror #14
   18b38:	andeq	r9, r3, r2, lsl #18
   18b3c:	andeq	r9, r3, r7, lsl #19
   18b40:	andeq	r9, r3, r5, lsl sl
   18b44:	andeq	r9, r3, r6, ror sl
   18b48:	mov	r2, r1
   18b4c:	mov	r1, r0
   18b50:	ldr	r0, [r0, #12]
   18b54:	b	15b18 <__flatcc_fb_scoped_symbol_name@@Base>
   18b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b5c:	sub	sp, sp, #484	; 0x1e4
   18b60:	mov	sl, r2
   18b64:	ldr	r2, [sp, #524]	; 0x20c
   18b68:	add	r7, sp, #40	; 0x28
   18b6c:	mov	fp, r3
   18b70:	ldr	r3, [pc, #404]	; 18d0c <__flatcc_gen_sort@@Base+0x2f0>
   18b74:	cmp	r2, #0
   18b78:	ldr	r5, [sp, #520]	; 0x208
   18b7c:	mov	r2, #220	; 0xdc
   18b80:	mov	r4, r0
   18b84:	mov	r9, r1
   18b88:	mov	r0, r7
   18b8c:	mov	r1, #0
   18b90:	add	r8, sp, #260	; 0x104
   18b94:	ldr	r6, [pc, #372]	; 18d10 <__flatcc_gen_sort@@Base+0x2f4>
   18b98:	moveq	r6, r3
   18b9c:	bl	140fc <memset@plt>
   18ba0:	mov	r2, #220	; 0xdc
   18ba4:	mov	r1, #0
   18ba8:	mov	r0, r8
   18bac:	bl	140fc <memset@plt>
   18bb0:	mov	r0, r5
   18bb4:	mov	r1, r7
   18bb8:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   18bbc:	ldr	r5, [r5, #20]
   18bc0:	cmp	r5, #0
   18bc4:	bne	18bd4 <__flatcc_gen_sort@@Base+0x1b8>
   18bc8:	mov	r0, r5
   18bcc:	add	sp, sp, #484	; 0x1e4
   18bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bd4:	ldrh	r1, [r5, #24]
   18bd8:	ldr	r2, [r5, #4]
   18bdc:	cmp	r1, #10
   18be0:	ldm	r2, {r2, r3}
   18be4:	beq	18cb8 <__flatcc_gen_sort@@Base+0x29c>
   18be8:	cmp	r1, #14
   18bec:	beq	18c00 <__flatcc_gen_sort@@Base+0x1e4>
   18bf0:	cmp	r1, #0
   18bf4:	bne	18ce0 <__flatcc_gen_sort@@Base+0x2c4>
   18bf8:	ldr	r5, [r5]
   18bfc:	b	18bc0 <__flatcc_gen_sort@@Base+0x1a4>
   18c00:	mov	r1, r8
   18c04:	ldr	r0, [r5, #16]
   18c08:	str	r2, [sp, #36]	; 0x24
   18c0c:	str	r3, [sp, #32]
   18c10:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   18c14:	ldr	r1, [r5, #16]
   18c18:	ldr	r3, [sp, #32]
   18c1c:	ldr	r2, [sp, #36]	; 0x24
   18c20:	ldrh	r1, [r1, #8]
   18c24:	cmp	r1, #0
   18c28:	beq	18c68 <__flatcc_gen_sort@@Base+0x24c>
   18c2c:	cmp	r1, #1
   18c30:	beq	18c94 <__flatcc_gen_sort@@Base+0x278>
   18c34:	ldr	r0, [pc, #216]	; 18d14 <__flatcc_gen_sort@@Base+0x2f8>
   18c38:	ldr	r3, [pc, #216]	; 18d18 <__flatcc_gen_sort@@Base+0x2fc>
   18c3c:	ldr	r2, [pc, #216]	; 18d1c <__flatcc_gen_sort@@Base+0x300>
   18c40:	str	r3, [sp]
   18c44:	ldr	r1, [pc, #212]	; 18d20 <__flatcc_gen_sort@@Base+0x304>
   18c48:	ldr	r3, [pc, #212]	; 18d24 <__flatcc_gen_sort@@Base+0x308>
   18c4c:	ldr	r0, [r0]
   18c50:	bl	140e4 <fprintf@plt>
   18c54:	ldr	r3, [pc, #204]	; 18d28 <__flatcc_gen_sort@@Base+0x30c>
   18c58:	ldr	r2, [pc, #196]	; 18d24 <__flatcc_gen_sort@@Base+0x308>
   18c5c:	ldr	r1, [pc, #184]	; 18d1c <__flatcc_gen_sort@@Base+0x300>
   18c60:	ldr	r0, [pc, #196]	; 18d2c <__flatcc_gen_sort@@Base+0x310>
   18c64:	bl	141a4 <__assert_fail@plt>
   18c68:	ldr	r1, [pc, #192]	; 18d30 <__flatcc_gen_sort@@Base+0x314>
   18c6c:	str	r2, [sp, #24]
   18c70:	str	r3, [sp, #20]
   18c74:	mov	r2, r4
   18c78:	mov	r3, r6
   18c7c:	str	r8, [sp, #28]
   18c80:	str	r7, [sp, #16]
   18c84:	stm	sp, {r4, r9, sl, fp}
   18c88:	ldr	r0, [r4, #204]	; 0xcc
   18c8c:	bl	140e4 <fprintf@plt>
   18c90:	b	18bf8 <__flatcc_gen_sort@@Base+0x1dc>
   18c94:	str	r2, [sp, #24]
   18c98:	str	r3, [sp, #20]
   18c9c:	str	r8, [sp, #28]
   18ca0:	str	r7, [sp, #16]
   18ca4:	stm	sp, {r4, r9, sl, fp}
   18ca8:	mov	r3, r6
   18cac:	mov	r2, r4
   18cb0:	ldr	r1, [pc, #124]	; 18d34 <__flatcc_gen_sort@@Base+0x318>
   18cb4:	b	18c88 <__flatcc_gen_sort@@Base+0x26c>
   18cb8:	str	r2, [sp, #24]
   18cbc:	str	r3, [sp, #20]
   18cc0:	str	r7, [sp, #16]
   18cc4:	stm	sp, {r4, r9, sl, fp}
   18cc8:	mov	r3, r6
   18ccc:	mov	r2, r4
   18cd0:	ldr	r1, [pc, #96]	; 18d38 <__flatcc_gen_sort@@Base+0x31c>
   18cd4:	ldr	r0, [r4, #204]	; 0xcc
   18cd8:	bl	140e4 <fprintf@plt>
   18cdc:	b	18bf8 <__flatcc_gen_sort@@Base+0x1dc>
   18ce0:	ldr	r0, [pc, #44]	; 18d14 <__flatcc_gen_sort@@Base+0x2f8>
   18ce4:	ldr	r3, [pc, #80]	; 18d3c <__flatcc_gen_sort@@Base+0x320>
   18ce8:	ldr	r2, [pc, #44]	; 18d1c <__flatcc_gen_sort@@Base+0x300>
   18cec:	str	r3, [sp]
   18cf0:	ldr	r1, [pc, #40]	; 18d20 <__flatcc_gen_sort@@Base+0x304>
   18cf4:	ldr	r3, [pc, #68]	; 18d40 <__flatcc_gen_sort@@Base+0x324>
   18cf8:	ldr	r0, [r0]
   18cfc:	bl	140e4 <fprintf@plt>
   18d00:	ldr	r3, [pc, #32]	; 18d28 <__flatcc_gen_sort@@Base+0x30c>
   18d04:	ldr	r2, [pc, #52]	; 18d40 <__flatcc_gen_sort@@Base+0x324>
   18d08:	b	18c5c <__flatcc_gen_sort@@Base+0x240>
   18d0c:	andeq	r9, r4, r6, ror #28
   18d10:	andeq	r9, r3, r1, asr #23
   18d14:	strheq	ip, [r5], -r0
   18d18:	muleq	r3, r6, ip
   18d1c:	andeq	r9, r3, r5, asr #24
   18d20:	andeq	r1, r3, sl, ror #22
   18d24:	andeq	r0, r0, lr, asr #10
   18d28:	andeq	r9, r3, sp, ror #21
   18d2c:	andeq	sl, r3, r9, asr #3
   18d30:	andeq	r9, r3, lr, asr #23
   18d34:	andeq	r9, r3, r9, lsl #24
   18d38:	andeq	r9, r3, ip, asr #25
   18d3c:	andeq	r9, r3, r4, lsl #26
   18d40:	andeq	r0, r0, r8, asr r5
   18d44:	push	{r4, r5, r6, lr}
   18d48:	mov	r4, r0
   18d4c:	mov	r5, #0
   18d50:	cmp	r4, #0
   18d54:	bne	18d60 <__flatcc_gen_sort@@Base+0x344>
   18d58:	mov	r0, r5
   18d5c:	pop	{r4, r5, r6, pc}
   18d60:	ldrh	r3, [r4, #72]	; 0x48
   18d64:	tst	r3, #4
   18d68:	bne	18d94 <__flatcc_gen_sort@@Base+0x378>
   18d6c:	ldrh	r3, [r4, #24]
   18d70:	cmp	r3, #14
   18d74:	bne	18d9c <__flatcc_gen_sort@@Base+0x380>
   18d78:	ldr	r3, [r4, #16]
   18d7c:	ldrh	r2, [r3, #8]
   18d80:	cmp	r2, #1
   18d84:	bne	18d9c <__flatcc_gen_sort@@Base+0x380>
   18d88:	ldr	r0, [r3, #20]
   18d8c:	bl	18d44 <__flatcc_gen_sort@@Base+0x328>
   18d90:	add	r5, r5, r0
   18d94:	ldr	r4, [r4]
   18d98:	b	18d50 <__flatcc_gen_sort@@Base+0x334>
   18d9c:	add	r5, r5, #1
   18da0:	b	18d94 <__flatcc_gen_sort@@Base+0x378>
   18da4:	push	{lr}		; (str lr, [sp, #-4]!)
   18da8:	cmp	r3, #0
   18dac:	ldr	lr, [pc, #88]	; 18e0c <__flatcc_gen_sort@@Base+0x3f0>
   18db0:	ldr	ip, [pc, #88]	; 18e10 <__flatcc_gen_sort@@Base+0x3f4>
   18db4:	moveq	r3, lr
   18db8:	movne	r3, ip
   18dbc:	cmp	r2, #0
   18dc0:	popeq	{pc}		; (ldreq pc, [sp], #4)
   18dc4:	cmp	r1, #0
   18dc8:	bne	18df8 <__flatcc_gen_sort@@Base+0x3dc>
   18dcc:	cmp	r2, #4
   18dd0:	ble	18de8 <__flatcc_gen_sort@@Base+0x3cc>
   18dd4:	mov	r2, r3
   18dd8:	ldr	r1, [pc, #52]	; 18e14 <__flatcc_gen_sort@@Base+0x3f8>
   18ddc:	ldr	r0, [r0]
   18de0:	pop	{lr}		; (ldr lr, [sp], #4)
   18de4:	b	140e4 <fprintf@plt>
   18de8:	ldr	r1, [r0]
   18dec:	pop	{lr}		; (ldr lr, [sp], #4)
   18df0:	ldr	r0, [pc, #32]	; 18e18 <__flatcc_gen_sort@@Base+0x3fc>
   18df4:	b	14180 <fputs@plt>
   18df8:	tst	r1, #3
   18dfc:	bne	18de8 <__flatcc_gen_sort@@Base+0x3cc>
   18e00:	sub	r2, r2, r1
   18e04:	cmp	r2, #2
   18e08:	b	18dd0 <__flatcc_gen_sort@@Base+0x3b4>
   18e0c:	andeq	r2, r3, ip, lsl pc
   18e10:	andeq	r4, r3, r6, lsr r6
   18e14:	andeq	r9, r3, r1, lsr sp
   18e18:			; <UNDEFINED> instruction: 0x000478b1
   18e1c:	push	{r0, r1, r2, lr}
   18e20:	sub	r0, r0, #1
   18e24:	cmp	r0, #10
   18e28:	ldrls	pc, [pc, r0, lsl #2]
   18e2c:	b	18ea8 <__flatcc_gen_sort@@Base+0x48c>
   18e30:	ldrdeq	r8, [r1], -ip
   18e34:	andeq	r8, r1, ip, asr lr
   18e38:	andeq	r8, r1, r4, ror #29
   18e3c:	andeq	r8, r1, r8, ror #28
   18e40:	andeq	r8, r1, r0, ror lr
   18e44:	andeq	r8, r1, r8, ror lr
   18e48:	andeq	r8, r1, r0, lsl #29
   18e4c:	andeq	r8, r1, r8, lsl #29
   18e50:	muleq	r1, r0, lr
   18e54:	andeq	r8, r1, r0, lsr #29
   18e58:	muleq	r1, r8, lr
   18e5c:	ldr	r0, [pc, #136]	; 18eec <__flatcc_gen_sort@@Base+0x4d0>
   18e60:	add	sp, sp, #12
   18e64:	pop	{pc}		; (ldr pc, [sp], #4)
   18e68:	ldr	r0, [pc, #128]	; 18ef0 <__flatcc_gen_sort@@Base+0x4d4>
   18e6c:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e70:	ldr	r0, [pc, #124]	; 18ef4 <__flatcc_gen_sort@@Base+0x4d8>
   18e74:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e78:	ldr	r0, [pc, #120]	; 18ef8 <__flatcc_gen_sort@@Base+0x4dc>
   18e7c:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e80:	ldr	r0, [pc, #116]	; 18efc <__flatcc_gen_sort@@Base+0x4e0>
   18e84:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e88:	ldr	r0, [pc, #112]	; 18f00 <__flatcc_gen_sort@@Base+0x4e4>
   18e8c:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e90:	ldr	r0, [pc, #108]	; 18f04 <__flatcc_gen_sort@@Base+0x4e8>
   18e94:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18e98:	ldr	r0, [pc, #104]	; 18f08 <__flatcc_gen_sort@@Base+0x4ec>
   18e9c:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18ea0:	ldr	r0, [pc, #100]	; 18f0c <__flatcc_gen_sort@@Base+0x4f0>
   18ea4:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18ea8:	ldr	r0, [pc, #96]	; 18f10 <__flatcc_gen_sort@@Base+0x4f4>
   18eac:	ldr	r3, [pc, #96]	; 18f14 <__flatcc_gen_sort@@Base+0x4f8>
   18eb0:	ldr	r2, [pc, #96]	; 18f18 <__flatcc_gen_sort@@Base+0x4fc>
   18eb4:	str	r3, [sp]
   18eb8:	ldr	r1, [pc, #92]	; 18f1c <__flatcc_gen_sort@@Base+0x500>
   18ebc:	mov	r3, #141	; 0x8d
   18ec0:	ldr	r0, [r0]
   18ec4:	bl	140e4 <fprintf@plt>
   18ec8:	ldr	r3, [pc, #80]	; 18f20 <__flatcc_gen_sort@@Base+0x504>
   18ecc:	mov	r2, #141	; 0x8d
   18ed0:	ldr	r1, [pc, #64]	; 18f18 <__flatcc_gen_sort@@Base+0x4fc>
   18ed4:	ldr	r0, [pc, #72]	; 18f24 <__flatcc_gen_sort@@Base+0x508>
   18ed8:	bl	141a4 <__assert_fail@plt>
   18edc:	ldr	r0, [pc, #68]	; 18f28 <__flatcc_gen_sort@@Base+0x50c>
   18ee0:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18ee4:	ldr	r0, [pc, #64]	; 18f2c <__flatcc_gen_sort@@Base+0x510>
   18ee8:	b	18e60 <__flatcc_gen_sort@@Base+0x444>
   18eec:	strdeq	r1, [r3], -r3
   18ef0:	andeq	r1, r3, r5, lsl #22
   18ef4:	andeq	r1, r3, sp, lsl #22
   18ef8:	andeq	r1, r3, fp, ror #21
   18efc:	strdeq	r1, [r3], -r4
   18f00:	strdeq	r1, [r3], -sp
   18f04:	andeq	r1, r3, r6, lsl #22
   18f08:	andeq	r1, r3, r4, lsl fp
   18f0c:	andeq	r1, r3, sl, lsl fp
   18f10:	strheq	ip, [r5], -r0
   18f14:	andeq	r1, r3, r5, ror fp
   18f18:	andeq	r1, r3, r1, lsr #22
   18f1c:	andeq	r1, r3, sl, ror #22
   18f20:	strdeq	r9, [r3], -lr
   18f24:	andeq	sl, r3, r9, asr #3
   18f28:	andeq	r1, r3, sl, ror #21
   18f2c:	strdeq	r1, [r3], -ip
   18f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f34:	mov	r5, r1
   18f38:	sub	sp, sp, #244	; 0xf4
   18f3c:	mov	r6, r0
   18f40:	mov	r4, r2
   18f44:	mov	r1, #0
   18f48:	mov	r2, #220	; 0xdc
   18f4c:	add	r0, sp, #20
   18f50:	mov	r7, r3
   18f54:	ldr	r9, [pc, #308]	; 19090 <__flatcc_gen_sort@@Base+0x674>
   18f58:	bl	140fc <memset@plt>
   18f5c:	ldr	sl, [pc, #304]	; 19094 <__flatcc_gen_sort@@Base+0x678>
   18f60:	ldr	r5, [r5]
   18f64:	add	r8, r6, #204	; 0xcc
   18f68:	cmp	r5, #0
   18f6c:	bne	18f7c <__flatcc_gen_sort@@Base+0x560>
   18f70:	mov	r0, r4
   18f74:	add	sp, sp, #244	; 0xf4
   18f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f7c:	ldrh	r3, [r5, #72]	; 0x48
   18f80:	tst	r3, #4
   18f84:	bne	18fcc <__flatcc_gen_sort@@Base+0x5b0>
   18f88:	ldrh	r3, [r5, #24]
   18f8c:	cmp	r3, #8
   18f90:	beq	19010 <__flatcc_gen_sort@@Base+0x5f4>
   18f94:	cmp	r3, #14
   18f98:	bne	1905c <__flatcc_gen_sort@@Base+0x640>
   18f9c:	ldr	r1, [r5, #16]
   18fa0:	ldrh	r3, [r1, #8]
   18fa4:	cmp	r3, #1
   18fa8:	ldr	r3, [sp, #280]	; 0x118
   18fac:	bne	18fd4 <__flatcc_gen_sort@@Base+0x5b8>
   18fb0:	str	r3, [sp]
   18fb4:	mov	r2, r4
   18fb8:	mov	r3, r7
   18fbc:	add	r1, r1, #20
   18fc0:	mov	r0, r6
   18fc4:	bl	18f30 <__flatcc_gen_sort@@Base+0x514>
   18fc8:	mov	r4, r0
   18fcc:	ldr	r5, [r5]
   18fd0:	b	18f68 <__flatcc_gen_sort@@Base+0x54c>
   18fd4:	mov	r2, r7
   18fd8:	mov	r1, r4
   18fdc:	mov	r0, r8
   18fe0:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   18fe4:	add	r1, sp, #20
   18fe8:	ldr	r0, [r5, #16]
   18fec:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   18ff0:	mov	r3, r4
   18ff4:	add	r2, sp, #20
   18ff8:	ldr	r1, [pc, #152]	; 19098 <__flatcc_gen_sort@@Base+0x67c>
   18ffc:	ldr	r0, [r6, #204]	; 0xcc
   19000:	add	fp, r4, #1
   19004:	bl	140e4 <fprintf@plt>
   19008:	mov	r4, fp
   1900c:	b	18fcc <__flatcc_gen_sort@@Base+0x5b0>
   19010:	mov	r2, r7
   19014:	ldr	r3, [sp, #280]	; 0x118
   19018:	mov	r1, r4
   1901c:	mov	r0, r8
   19020:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   19024:	ldr	r0, [r5, #16]
   19028:	add	fp, r4, #1
   1902c:	cmp	r0, #5
   19030:	moveq	r2, r6
   19034:	movne	r2, r9
   19038:	str	r2, [sp, #12]
   1903c:	bl	18e1c <__flatcc_gen_sort@@Base+0x400>
   19040:	str	r4, [sp]
   19044:	ldr	r2, [sp, #12]
   19048:	mov	r1, sl
   1904c:	mov	r3, r0
   19050:	ldr	r0, [r6, #204]	; 0xcc
   19054:	bl	140e4 <fprintf@plt>
   19058:	b	19008 <__flatcc_gen_sort@@Base+0x5ec>
   1905c:	ldr	r0, [pc, #56]	; 1909c <__flatcc_gen_sort@@Base+0x680>
   19060:	ldr	r3, [pc, #56]	; 190a0 <__flatcc_gen_sort@@Base+0x684>
   19064:	ldr	r2, [pc, #56]	; 190a4 <__flatcc_gen_sort@@Base+0x688>
   19068:	str	r3, [sp]
   1906c:	ldr	r1, [pc, #52]	; 190a8 <__flatcc_gen_sort@@Base+0x68c>
   19070:	ldr	r3, [pc, #52]	; 190ac <__flatcc_gen_sort@@Base+0x690>
   19074:	ldr	r0, [r0]
   19078:	bl	140e4 <fprintf@plt>
   1907c:	ldr	r3, [pc, #44]	; 190b0 <__flatcc_gen_sort@@Base+0x694>
   19080:	ldr	r2, [pc, #36]	; 190ac <__flatcc_gen_sort@@Base+0x690>
   19084:	ldr	r1, [pc, #24]	; 190a4 <__flatcc_gen_sort@@Base+0x688>
   19088:	ldr	r0, [pc, #36]	; 190b4 <__flatcc_gen_sort@@Base+0x698>
   1908c:	bl	141a4 <__assert_fail@plt>
   19090:	andeq	r2, r3, sp, lsl pc
   19094:	andeq	r9, r3, r5, asr #26
   19098:	andeq	r9, r3, r7, lsr sp
   1909c:	strheq	ip, [r5], -r0
   190a0:	andeq	r9, r3, lr, asr #26
   190a4:	andeq	r9, r3, r5, asr #24
   190a8:	andeq	r1, r3, sl, ror #22
   190ac:	andeq	r0, r0, r2, asr r3
   190b0:	andeq	r9, r3, pc, lsl #22
   190b4:	andeq	sl, r3, r9, asr #3
   190b8:	push	{r0, r1, r2, lr}
   190bc:	sub	r0, r0, #1
   190c0:	cmp	r0, #10
   190c4:	ldrls	pc, [pc, r0, lsl #2]
   190c8:	b	19144 <__flatcc_gen_sort@@Base+0x728>
   190cc:	andeq	r9, r1, r8, ror r1
   190d0:	strdeq	r9, [r1], -r8
   190d4:	andeq	r9, r1, r0, lsl #3
   190d8:	andeq	r9, r1, r4, lsl #2
   190dc:	andeq	r9, r1, ip, lsl #2
   190e0:	andeq	r9, r1, r4, lsl r1
   190e4:	andeq	r9, r1, ip, lsl r1
   190e8:	andeq	r9, r1, r4, lsr #2
   190ec:	andeq	r9, r1, ip, lsr #2
   190f0:	andeq	r9, r1, ip, lsr r1
   190f4:	andeq	r9, r1, r4, lsr r1
   190f8:	ldr	r0, [pc, #136]	; 19188 <__flatcc_gen_sort@@Base+0x76c>
   190fc:	add	sp, sp, #12
   19100:	pop	{pc}		; (ldr pc, [sp], #4)
   19104:	ldr	r0, [pc, #128]	; 1918c <__flatcc_gen_sort@@Base+0x770>
   19108:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   1910c:	ldr	r0, [pc, #124]	; 19190 <__flatcc_gen_sort@@Base+0x774>
   19110:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19114:	ldr	r0, [pc, #120]	; 19194 <__flatcc_gen_sort@@Base+0x778>
   19118:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   1911c:	ldr	r0, [pc, #116]	; 19198 <__flatcc_gen_sort@@Base+0x77c>
   19120:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19124:	ldr	r0, [pc, #112]	; 1919c <__flatcc_gen_sort@@Base+0x780>
   19128:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   1912c:	ldr	r0, [pc, #108]	; 191a0 <__flatcc_gen_sort@@Base+0x784>
   19130:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19134:	ldr	r0, [pc, #104]	; 191a4 <__flatcc_gen_sort@@Base+0x788>
   19138:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   1913c:	ldr	r0, [pc, #100]	; 191a8 <__flatcc_gen_sort@@Base+0x78c>
   19140:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19144:	ldr	r0, [pc, #96]	; 191ac <__flatcc_gen_sort@@Base+0x790>
   19148:	ldr	r3, [pc, #96]	; 191b0 <__flatcc_gen_sort@@Base+0x794>
   1914c:	ldr	r2, [pc, #96]	; 191b4 <__flatcc_gen_sort@@Base+0x798>
   19150:	str	r3, [sp]
   19154:	ldr	r1, [pc, #92]	; 191b8 <__flatcc_gen_sort@@Base+0x79c>
   19158:	mov	r3, #96	; 0x60
   1915c:	ldr	r0, [r0]
   19160:	bl	140e4 <fprintf@plt>
   19164:	ldr	r3, [pc, #80]	; 191bc <__flatcc_gen_sort@@Base+0x7a0>
   19168:	mov	r2, #96	; 0x60
   1916c:	ldr	r1, [pc, #64]	; 191b4 <__flatcc_gen_sort@@Base+0x798>
   19170:	ldr	r0, [pc, #72]	; 191c0 <__flatcc_gen_sort@@Base+0x7a4>
   19174:	bl	141a4 <__assert_fail@plt>
   19178:	ldr	r0, [pc, #68]	; 191c4 <__flatcc_gen_sort@@Base+0x7a8>
   1917c:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19180:	ldr	r0, [pc, #64]	; 191c8 <__flatcc_gen_sort@@Base+0x7ac>
   19184:	b	190fc <__flatcc_gen_sort@@Base+0x6e0>
   19188:			; <UNDEFINED> instruction: 0x00031bb3
   1918c:	andeq	r1, r3, r1, asr #23
   19190:	andeq	r9, r4, r4, rrx
   19194:	andeq	r1, r3, sp, lsr #23
   19198:			; <UNDEFINED> instruction: 0x00031bb4
   1919c:			; <UNDEFINED> instruction: 0x00031bbb
   191a0:	andeq	r1, r3, r2, asr #23
   191a4:	andeq	r1, r3, r4, lsl fp
   191a8:	andeq	r1, r3, sl, lsl fp
   191ac:	strheq	ip, [r5], -r0
   191b0:	andeq	r1, r3, r5, ror fp
   191b4:	andeq	r1, r3, r1, lsr #22
   191b8:	andeq	r1, r3, sl, ror #22
   191bc:	andeq	r9, r3, r7, lsr #22
   191c0:	andeq	sl, r3, r9, asr #3
   191c4:	andeq	r1, r3, ip, lsr #23
   191c8:			; <UNDEFINED> instruction: 0x00031bba
   191cc:	push	{r0, r1, r2, lr}
   191d0:	sub	r0, r0, #1
   191d4:	cmp	r0, #8
   191d8:	ldrls	pc, [pc, r0, lsl #2]
   191dc:	b	19238 <__flatcc_gen_sort@@Base+0x81c>
   191e0:	andeq	r9, r1, ip, ror #4
   191e4:	andeq	r9, r1, r4, lsl #4
   191e8:	andeq	r9, r1, r4, ror r2
   191ec:	andeq	r9, r1, r0, lsl r2
   191f0:	andeq	r9, r1, r0, lsl r2
   191f4:	andeq	r9, r1, r8, lsl r2
   191f8:	andeq	r9, r1, r0, lsr #4
   191fc:	andeq	r9, r1, r8, lsr #4
   19200:	andeq	r9, r1, r0, lsr r2
   19204:	ldr	r0, [pc, #112]	; 1927c <__flatcc_gen_sort@@Base+0x860>
   19208:	add	sp, sp, #12
   1920c:	pop	{pc}		; (ldr pc, [sp], #4)
   19210:	ldr	r0, [pc, #104]	; 19280 <__flatcc_gen_sort@@Base+0x864>
   19214:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19218:	ldr	r0, [pc, #100]	; 19284 <__flatcc_gen_sort@@Base+0x868>
   1921c:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19220:	ldr	r0, [pc, #96]	; 19288 <__flatcc_gen_sort@@Base+0x86c>
   19224:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19228:	ldr	r0, [pc, #92]	; 1928c <__flatcc_gen_sort@@Base+0x870>
   1922c:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19230:	ldr	r0, [pc, #88]	; 19290 <__flatcc_gen_sort@@Base+0x874>
   19234:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19238:	ldr	r0, [pc, #84]	; 19294 <__flatcc_gen_sort@@Base+0x878>
   1923c:	ldr	r3, [pc, #84]	; 19298 <__flatcc_gen_sort@@Base+0x87c>
   19240:	ldr	r2, [pc, #84]	; 1929c <__flatcc_gen_sort@@Base+0x880>
   19244:	str	r3, [sp]
   19248:	ldr	r1, [pc, #80]	; 192a0 <__flatcc_gen_sort@@Base+0x884>
   1924c:	mov	r3, #226	; 0xe2
   19250:	ldr	r0, [r0]
   19254:	bl	140e4 <fprintf@plt>
   19258:	ldr	r3, [pc, #68]	; 192a4 <__flatcc_gen_sort@@Base+0x888>
   1925c:	mov	r2, #226	; 0xe2
   19260:	ldr	r1, [pc, #52]	; 1929c <__flatcc_gen_sort@@Base+0x880>
   19264:	ldr	r0, [pc, #60]	; 192a8 <__flatcc_gen_sort@@Base+0x88c>
   19268:	bl	141a4 <__assert_fail@plt>
   1926c:	ldr	r0, [pc, #56]	; 192ac <__flatcc_gen_sort@@Base+0x890>
   19270:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   19274:	ldr	r0, [pc, #52]	; 192b0 <__flatcc_gen_sort@@Base+0x894>
   19278:	b	19208 <__flatcc_gen_sort@@Base+0x7ec>
   1927c:	andeq	r2, r3, fp, lsl #7
   19280:	muleq	r3, sp, r3
   19284:	andeq	r2, r3, r3, lsl #7
   19288:	andeq	r2, r3, ip, lsl #7
   1928c:	muleq	r3, r5, r3
   19290:	muleq	r3, lr, r3
   19294:	strheq	ip, [r5], -r0
   19298:	andeq	r1, r3, r5, ror fp
   1929c:	andeq	r1, r3, r1, lsr #22
   192a0:	andeq	r1, r3, sl, ror #22
   192a4:	andeq	r9, r3, sl, lsr fp
   192a8:	andeq	sl, r3, r9, asr #3
   192ac:	andeq	r2, r3, r2, lsl #7
   192b0:	muleq	r3, r4, r3
   192b4:	ldrh	r3, [r1, #8]
   192b8:	push	{r0, r1, r2, r4, r5, lr}
   192bc:	mov	r4, r1
   192c0:	sub	r3, r3, #3
   192c4:	mov	r5, r2
   192c8:	cmp	r3, #3
   192cc:	ldrls	pc, [pc, r3, lsl #2]
   192d0:	b	19370 <__flatcc_gen_sort@@Base+0x954>
   192d4:	andeq	r9, r1, r0, asr #6
   192d8:	andeq	r9, r1, r8, lsl #6
   192dc:	andeq	r9, r1, r4, ror #5
   192e0:	andeq	r9, r1, r0, lsr #6
   192e4:	bl	191cc <__flatcc_gen_sort@@Base+0x7b0>
   192e8:	ldrd	r2, [r4]
   192ec:	ldr	r1, [pc, #176]	; 193a4 <__flatcc_gen_sort@@Base+0x988>
   192f0:	strd	r2, [sp]
   192f4:	mov	r2, r0
   192f8:	mov	r0, r5
   192fc:	bl	14150 <sprintf@plt>
   19300:	add	sp, sp, #12
   19304:	pop	{r4, r5, pc}
   19308:	bl	191cc <__flatcc_gen_sort@@Base+0x7b0>
   1930c:	ldrd	r2, [r4]
   19310:	ldr	r1, [pc, #144]	; 193a8 <__flatcc_gen_sort@@Base+0x98c>
   19314:	strd	r2, [sp]
   19318:	mov	r2, r0
   1931c:	b	192f8 <__flatcc_gen_sort@@Base+0x8dc>
   19320:	bl	191cc <__flatcc_gen_sort@@Base+0x7b0>
   19324:	ldrb	r3, [r4]
   19328:	ldr	r1, [pc, #124]	; 193ac <__flatcc_gen_sort@@Base+0x990>
   1932c:	mov	r2, r0
   19330:	mov	r0, r5
   19334:	add	sp, sp, #12
   19338:	pop	{r4, r5, lr}
   1933c:	b	14150 <sprintf@plt>
   19340:	cmp	r0, #11
   19344:	mov	r0, r5
   19348:	vldreq	d7, [r1]
   1934c:	ldrdne	r2, [r4]
   19350:	ldreq	r1, [pc, #88]	; 193b0 <__flatcc_gen_sort@@Base+0x994>
   19354:	ldrne	r1, [pc, #88]	; 193b4 <__flatcc_gen_sort@@Base+0x998>
   19358:	vcvteq.f32.f64	s14, d7
   1935c:	vcvteq.f64.f32	d7, s14
   19360:	vmoveq	r2, r3, d7
   19364:	add	sp, sp, #12
   19368:	pop	{r4, r5, lr}
   1936c:	b	14150 <sprintf@plt>
   19370:	ldr	r0, [pc, #64]	; 193b8 <__flatcc_gen_sort@@Base+0x99c>
   19374:	ldr	r3, [pc, #64]	; 193bc <__flatcc_gen_sort@@Base+0x9a0>
   19378:	ldr	r2, [pc, #64]	; 193c0 <__flatcc_gen_sort@@Base+0x9a4>
   1937c:	str	r3, [sp]
   19380:	ldr	r1, [pc, #60]	; 193c4 <__flatcc_gen_sort@@Base+0x9a8>
   19384:	mov	r3, #260	; 0x104
   19388:	ldr	r0, [r0]
   1938c:	bl	140e4 <fprintf@plt>
   19390:	ldr	r3, [pc, #48]	; 193c8 <__flatcc_gen_sort@@Base+0x9ac>
   19394:	mov	r2, #260	; 0x104
   19398:	ldr	r1, [pc, #32]	; 193c0 <__flatcc_gen_sort@@Base+0x9a4>
   1939c:	ldr	r0, [pc, #40]	; 193cc <__flatcc_gen_sort@@Base+0x9b0>
   193a0:	bl	141a4 <__assert_fail@plt>
   193a4:	andeq	r2, r3, r5, lsr #7
   193a8:	andeq	r2, r3, lr, lsr #7
   193ac:			; <UNDEFINED> instruction: 0x000323b7
   193b0:			; <UNDEFINED> instruction: 0x000323be
   193b4:	andeq	r2, r3, r2, asr #7
   193b8:	strheq	ip, [r5], -r0
   193bc:	andeq	r1, r3, r5, ror fp
   193c0:	andeq	r1, r3, r1, lsr #22
   193c4:	andeq	r1, r3, sl, ror #22
   193c8:	andeq	r9, r3, r6, asr #22
   193cc:	andeq	sl, r3, r9, asr #3
   193d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193d4:	sub	sp, sp, #620	; 0x26c
   193d8:	add	r7, sp, #176	; 0xb0
   193dc:	mov	r5, r1
   193e0:	mov	r2, #220	; 0xdc
   193e4:	mov	r1, #0
   193e8:	mov	r4, r0
   193ec:	add	r6, sp, #396	; 0x18c
   193f0:	mov	r0, r7
   193f4:	bl	140fc <memset@plt>
   193f8:	mov	r2, #220	; 0xdc
   193fc:	mov	r1, #0
   19400:	mov	r0, r6
   19404:	bl	140fc <memset@plt>
   19408:	mov	r0, r5
   1940c:	mov	r1, r7
   19410:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19414:	ldr	r5, [r5, #20]
   19418:	cmp	r5, #0
   1941c:	bne	19438 <__flatcc_gen_sort@@Base+0xa1c>
   19420:	ldr	r1, [r4, #204]	; 0xcc
   19424:	mov	r0, #10
   19428:	bl	14144 <fputc@plt>
   1942c:	mov	r0, r5
   19430:	add	sp, sp, #620	; 0x26c
   19434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19438:	ldr	r3, [r5, #4]
   1943c:	ldr	r8, [r3, #4]
   19440:	ldr	r9, [r3]
   19444:	ldrh	r3, [r5, #72]	; 0x48
   19448:	tst	r3, #4
   1944c:	beq	19470 <__flatcc_gen_sort@@Base+0xa54>
   19450:	str	r9, [sp]
   19454:	mov	r3, r8
   19458:	mov	r2, r7
   1945c:	ldr	r1, [pc, #1352]	; 199ac <__flatcc_gen_sort@@Base+0xf90>
   19460:	ldr	r0, [r4, #204]	; 0xcc
   19464:	bl	140e4 <fprintf@plt>
   19468:	ldr	r5, [r5]
   1946c:	b	19418 <__flatcc_gen_sort@@Base+0x9fc>
   19470:	ldrh	r3, [r5, #24]
   19474:	sub	r3, r3, #7
   19478:	cmp	r3, #8
   1947c:	ldrls	pc, [pc, r3, lsl #2]
   19480:	b	19980 <__flatcc_gen_sort@@Base+0xf64>
   19484:	andeq	r9, r1, r4, asr #10
   19488:	andeq	r9, r1, r8, lsr #9
   1948c:	muleq	r1, r0, r6
   19490:	andeq	r9, r1, r4, ror #12
   19494:	andeq	r9, r1, r0, lsl #19
   19498:	andeq	r9, r1, r0, lsl #19
   1949c:	andeq	r9, r1, r0, lsl #19
   194a0:			; <UNDEFINED> instruction: 0x000196b4
   194a4:	andeq	r9, r1, r4, lsr r8
   194a8:	ldr	sl, [r5, #16]
   194ac:	ldr	r3, [pc, #1276]	; 199b0 <__flatcc_gen_sort@@Base+0xf94>
   194b0:	cmp	sl, #5
   194b4:	moveq	r3, r4
   194b8:	mov	r0, sl
   194bc:	str	r3, [sp, #64]	; 0x40
   194c0:	bl	18e1c <__flatcc_gen_sort@@Base+0x400>
   194c4:	add	fp, sp, #76	; 0x4c
   194c8:	str	r0, [sp, #60]	; 0x3c
   194cc:	mov	r0, sl
   194d0:	bl	190b8 <__flatcc_gen_sort@@Base+0x69c>
   194d4:	mov	r2, fp
   194d8:	add	r1, r5, #48	; 0x30
   194dc:	str	r0, [sp, #68]	; 0x44
   194e0:	mov	r0, sl
   194e4:	bl	192b4 <__flatcc_gen_sort@@Base+0x898>
   194e8:	str	fp, [sp, #52]	; 0x34
   194ec:	ldrh	r2, [r5, #74]	; 0x4a
   194f0:	ldr	r3, [sp, #60]	; 0x3c
   194f4:	str	r2, [sp, #48]	; 0x30
   194f8:	ldrd	r0, [r5, #88]	; 0x58
   194fc:	str	r3, [sp, #36]	; 0x24
   19500:	ldr	r3, [sp, #64]	; 0x40
   19504:	strd	r0, [sp, #40]	; 0x28
   19508:	str	r3, [sp, #32]
   1950c:	ldr	r3, [sp, #68]	; 0x44
   19510:	str	r4, [sp, #24]
   19514:	str	r3, [sp, #28]
   19518:	str	r9, [sp, #20]
   1951c:	str	r8, [sp, #16]
   19520:	str	r7, [sp, #12]
   19524:	str	r4, [sp, #8]
   19528:	ldrd	r2, [r5, #96]	; 0x60
   1952c:	ldr	r1, [pc, #1152]	; 199b4 <__flatcc_gen_sort@@Base+0xf98>
   19530:	ldr	r0, [r4, #204]	; 0xcc
   19534:	strd	r2, [sp]
   19538:	mov	r2, r4
   1953c:	bl	140e4 <fprintf@plt>
   19540:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19544:	ldr	sl, [r5, #16]
   19548:	ldr	fp, [pc, #1120]	; 199b0 <__flatcc_gen_sort@@Base+0xf94>
   1954c:	cmp	sl, #5
   19550:	mov	r0, sl
   19554:	moveq	fp, r4
   19558:	bl	18e1c <__flatcc_gen_sort@@Base+0x400>
   1955c:	str	r0, [sp, #60]	; 0x3c
   19560:	mov	r0, sl
   19564:	bl	190b8 <__flatcc_gen_sort@@Base+0x69c>
   19568:	ldr	r3, [sp, #60]	; 0x3c
   1956c:	str	fp, [sp, #32]
   19570:	str	r3, [sp, #36]	; 0x24
   19574:	str	r4, [sp, #24]
   19578:	str	r9, [sp, #20]
   1957c:	str	r8, [sp, #16]
   19580:	str	r7, [sp, #12]
   19584:	str	r4, [sp, #8]
   19588:	ldr	r1, [pc, #1064]	; 199b8 <__flatcc_gen_sort@@Base+0xf9c>
   1958c:	str	r0, [sp, #28]
   19590:	ldrd	r2, [r5, #96]	; 0x60
   19594:	ldr	r0, [r4, #204]	; 0xcc
   19598:	strd	r2, [sp]
   1959c:	mov	r2, r4
   195a0:	bl	140e4 <fprintf@plt>
   195a4:	ldr	r0, [r5, #104]	; 0x68
   195a8:	cmp	r0, #0
   195ac:	beq	19468 <__flatcc_gen_sort@@Base+0xa4c>
   195b0:	ldrh	r3, [r0, #8]
   195b4:	cmp	r3, #0
   195b8:	beq	195f8 <__flatcc_gen_sort@@Base+0xbdc>
   195bc:	cmp	r3, #1
   195c0:	beq	19628 <__flatcc_gen_sort@@Base+0xc0c>
   195c4:	ldr	r0, [pc, #1008]	; 199bc <__flatcc_gen_sort@@Base+0xfa0>
   195c8:	ldr	r3, [pc, #1008]	; 199c0 <__flatcc_gen_sort@@Base+0xfa4>
   195cc:	ldr	r2, [pc, #1008]	; 199c4 <__flatcc_gen_sort@@Base+0xfa8>
   195d0:	str	r3, [sp]
   195d4:	ldr	r1, [pc, #1004]	; 199c8 <__flatcc_gen_sort@@Base+0xfac>
   195d8:	ldr	r3, [pc, #1004]	; 199cc <__flatcc_gen_sort@@Base+0xfb0>
   195dc:	ldr	r0, [r0]
   195e0:	bl	140e4 <fprintf@plt>
   195e4:	ldr	r3, [pc, #996]	; 199d0 <__flatcc_gen_sort@@Base+0xfb4>
   195e8:	ldr	r2, [pc, #988]	; 199cc <__flatcc_gen_sort@@Base+0xfb0>
   195ec:	ldr	r1, [pc, #976]	; 199c4 <__flatcc_gen_sort@@Base+0xfa8>
   195f0:	ldr	r0, [pc, #988]	; 199d4 <__flatcc_gen_sort@@Base+0xfb8>
   195f4:	bl	141a4 <__assert_fail@plt>
   195f8:	mov	r1, r6
   195fc:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19600:	str	r6, [sp, #20]
   19604:	str	r6, [sp, #16]
   19608:	str	r6, [sp, #12]
   1960c:	stm	sp, {r7, r8, r9}
   19610:	mov	r3, r4
   19614:	mov	r2, r4
   19618:	ldr	r1, [pc, #952]	; 199d8 <__flatcc_gen_sort@@Base+0xfbc>
   1961c:	ldr	r0, [r4, #204]	; 0xcc
   19620:	bl	140e4 <fprintf@plt>
   19624:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19628:	mov	r1, r6
   1962c:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19630:	str	r6, [sp, #24]
   19634:	str	r6, [sp, #20]
   19638:	ldr	r3, [r5, #104]	; 0x68
   1963c:	mov	r2, r4
   19640:	ldr	r1, [pc, #916]	; 199dc <__flatcc_gen_sort@@Base+0xfc0>
   19644:	ldrh	r3, [r3, #104]	; 0x68
   19648:	ldr	r0, [r4, #204]	; 0xcc
   1964c:	str	r6, [sp, #12]
   19650:	str	r3, [sp, #16]
   19654:	stm	sp, {r7, r8, r9}
   19658:	mov	r3, r4
   1965c:	bl	140e4 <fprintf@plt>
   19660:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19664:	str	r9, [sp, #20]
   19668:	str	r8, [sp, #16]
   1966c:	str	r7, [sp, #12]
   19670:	str	r4, [sp, #8]
   19674:	ldrd	r2, [r5, #96]	; 0x60
   19678:	ldr	r1, [pc, #864]	; 199e0 <__flatcc_gen_sort@@Base+0xfc4>
   1967c:	strd	r2, [sp]
   19680:	mov	r2, r4
   19684:	ldr	r0, [r4, #204]	; 0xcc
   19688:	bl	140e4 <fprintf@plt>
   1968c:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19690:	str	r9, [sp, #20]
   19694:	str	r8, [sp, #16]
   19698:	str	r7, [sp, #12]
   1969c:	str	r4, [sp, #8]
   196a0:	ldrd	r2, [r5, #96]	; 0x60
   196a4:	ldr	r1, [pc, #824]	; 199e4 <__flatcc_gen_sort@@Base+0xfc8>
   196a8:	strd	r2, [sp]
   196ac:	mov	r2, r4
   196b0:	b	19684 <__flatcc_gen_sort@@Base+0xc68>
   196b4:	mov	r1, r6
   196b8:	ldr	r0, [r5, #16]
   196bc:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   196c0:	ldr	r3, [r5, #16]
   196c4:	ldrh	r2, [r3, #8]
   196c8:	cmp	r2, #4
   196cc:	ldrls	pc, [pc, r2, lsl #2]
   196d0:	b	19808 <__flatcc_gen_sort@@Base+0xdec>
   196d4:	andeq	r9, r1, r8, lsr #14
   196d8:	andeq	r9, r1, r8, ror #13
   196dc:	andeq	r9, r1, r8, lsl #16
   196e0:	andeq	r9, r1, r8, asr r7
   196e4:			; <UNDEFINED> instruction: 0x000197b4
   196e8:	ldrh	r3, [r5, #74]	; 0x4a
   196ec:	ldr	r1, [pc, #756]	; 199e8 <__flatcc_gen_sort@@Base+0xfcc>
   196f0:	ldr	r0, [r4, #204]	; 0xcc
   196f4:	str	r3, [sp, #40]	; 0x28
   196f8:	ldrd	r2, [r5, #88]	; 0x58
   196fc:	str	r6, [sp, #24]
   19700:	str	r9, [sp, #20]
   19704:	strd	r2, [sp, #32]
   19708:	str	r8, [sp, #16]
   1970c:	str	r7, [sp, #12]
   19710:	str	r4, [sp, #8]
   19714:	ldrd	r2, [r5, #96]	; 0x60
   19718:	strd	r2, [sp]
   1971c:	mov	r2, r4
   19720:	bl	140e4 <fprintf@plt>
   19724:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19728:	str	r6, [sp, #24]
   1972c:	str	r9, [sp, #20]
   19730:	str	r8, [sp, #16]
   19734:	str	r7, [sp, #12]
   19738:	str	r4, [sp, #8]
   1973c:	ldrd	r2, [r5, #96]	; 0x60
   19740:	ldr	r1, [pc, #676]	; 199ec <__flatcc_gen_sort@@Base+0xfd0>
   19744:	strd	r2, [sp]
   19748:	mov	r2, r4
   1974c:	ldr	r0, [r4, #204]	; 0xcc
   19750:	bl	140e4 <fprintf@plt>
   19754:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19758:	add	sl, sp, #76	; 0x4c
   1975c:	mov	r2, sl
   19760:	add	r1, r5, #48	; 0x30
   19764:	ldr	r0, [r3, #40]	; 0x28
   19768:	bl	192b4 <__flatcc_gen_sort@@Base+0x898>
   1976c:	str	sl, [sp, #44]	; 0x2c
   19770:	ldrh	r3, [r5, #74]	; 0x4a
   19774:	ldr	r1, [pc, #628]	; 199f0 <__flatcc_gen_sort@@Base+0xfd4>
   19778:	ldr	r0, [r4, #204]	; 0xcc
   1977c:	str	r3, [sp, #40]	; 0x28
   19780:	ldrd	r2, [r5, #88]	; 0x58
   19784:	str	r6, [sp, #28]
   19788:	str	r6, [sp, #24]
   1978c:	strd	r2, [sp, #32]
   19790:	str	r9, [sp, #20]
   19794:	str	r8, [sp, #16]
   19798:	str	r7, [sp, #12]
   1979c:	str	r4, [sp, #8]
   197a0:	ldrd	r2, [r5, #96]	; 0x60
   197a4:	strd	r2, [sp]
   197a8:	mov	r2, r4
   197ac:	bl	140e4 <fprintf@plt>
   197b0:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   197b4:	str	r6, [sp, #24]
   197b8:	str	r9, [sp, #20]
   197bc:	str	r8, [sp, #16]
   197c0:	str	r7, [sp, #12]
   197c4:	str	r4, [sp, #8]
   197c8:	ldrd	r2, [r5, #96]	; 0x60
   197cc:	ldr	r1, [pc, #544]	; 199f4 <__flatcc_gen_sort@@Base+0xfd8>
   197d0:	ldr	r0, [r4, #204]	; 0xcc
   197d4:	strd	r2, [sp]
   197d8:	mov	r2, r4
   197dc:	bl	140e4 <fprintf@plt>
   197e0:	mov	r3, #0
   197e4:	str	r3, [sp, #4]
   197e8:	ldr	r3, [r5, #16]
   197ec:	mov	r2, r8
   197f0:	str	r3, [sp]
   197f4:	mov	r1, r7
   197f8:	mov	r3, r9
   197fc:	mov	r0, r4
   19800:	bl	18b58 <__flatcc_gen_sort@@Base+0x13c>
   19804:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   19808:	ldr	r0, [pc, #428]	; 199bc <__flatcc_gen_sort@@Base+0xfa0>
   1980c:	ldr	r3, [pc, #484]	; 199f8 <__flatcc_gen_sort@@Base+0xfdc>
   19810:	ldr	r2, [pc, #428]	; 199c4 <__flatcc_gen_sort@@Base+0xfa8>
   19814:	str	r3, [sp]
   19818:	ldr	r1, [pc, #424]	; 199c8 <__flatcc_gen_sort@@Base+0xfac>
   1981c:	mov	r3, #1472	; 0x5c0
   19820:	ldr	r0, [r0]
   19824:	bl	140e4 <fprintf@plt>
   19828:	ldr	r3, [pc, #416]	; 199d0 <__flatcc_gen_sort@@Base+0xfb4>
   1982c:	mov	r2, #1472	; 0x5c0
   19830:	b	195ec <__flatcc_gen_sort@@Base+0xbd0>
   19834:	mov	r1, r6
   19838:	ldr	r0, [r5, #16]
   1983c:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19840:	ldr	r3, [r5, #16]
   19844:	ldrh	r2, [r3, #8]
   19848:	cmp	r2, #4
   1984c:	ldrls	pc, [pc, r2, lsl #2]
   19850:	b	19954 <__flatcc_gen_sort@@Base+0xf38>
   19854:			; <UNDEFINED> instruction: 0x000198b4
   19858:	andeq	r9, r1, r8, ror #16
   1985c:	andeq	r9, r1, r4, asr r9
   19860:	strdeq	r9, [r1], -r4
   19864:	andeq	r9, r1, r0, lsr #18
   19868:	ldrh	r3, [r3, #10]
   1986c:	tst	r3, #8
   19870:	beq	19880 <__flatcc_gen_sort@@Base+0xe64>
   19874:	ldr	r1, [r4, #204]	; 0xcc
   19878:	ldr	r0, [pc, #380]	; 199fc <__flatcc_gen_sort@@Base+0xfe0>
   1987c:	bl	14180 <fputs@plt>
   19880:	str	r6, [sp, #28]
   19884:	str	r6, [sp, #24]
   19888:	str	r9, [sp, #20]
   1988c:	str	r8, [sp, #16]
   19890:	str	r7, [sp, #12]
   19894:	str	r4, [sp, #8]
   19898:	ldrd	r2, [r5, #96]	; 0x60
   1989c:	ldr	r1, [pc, #348]	; 19a00 <__flatcc_gen_sort@@Base+0xfe4>
   198a0:	strd	r2, [sp]
   198a4:	mov	r2, r4
   198a8:	ldr	r0, [r4, #204]	; 0xcc
   198ac:	bl	140e4 <fprintf@plt>
   198b0:	b	19468 <__flatcc_gen_sort@@Base+0xa4c>
   198b4:	ldrh	r3, [r3, #10]
   198b8:	tst	r3, #8
   198bc:	beq	198cc <__flatcc_gen_sort@@Base+0xeb0>
   198c0:	ldr	r1, [r4, #204]	; 0xcc
   198c4:	ldr	r0, [pc, #304]	; 199fc <__flatcc_gen_sort@@Base+0xfe0>
   198c8:	bl	14180 <fputs@plt>
   198cc:	str	r6, [sp, #24]
   198d0:	str	r9, [sp, #20]
   198d4:	str	r8, [sp, #16]
   198d8:	str	r7, [sp, #12]
   198dc:	str	r4, [sp, #8]
   198e0:	ldrd	r2, [r5, #96]	; 0x60
   198e4:	ldr	r1, [pc, #280]	; 19a04 <__flatcc_gen_sort@@Base+0xfe8>
   198e8:	strd	r2, [sp]
   198ec:	mov	r2, r4
   198f0:	b	1974c <__flatcc_gen_sort@@Base+0xd30>
   198f4:	str	r6, [sp, #28]
   198f8:	str	r6, [sp, #24]
   198fc:	str	r9, [sp, #20]
   19900:	str	r8, [sp, #16]
   19904:	str	r7, [sp, #12]
   19908:	str	r4, [sp, #8]
   1990c:	ldrd	r2, [r5, #96]	; 0x60
   19910:	ldr	r1, [pc, #240]	; 19a08 <__flatcc_gen_sort@@Base+0xfec>
   19914:	strd	r2, [sp]
   19918:	mov	r2, r4
   1991c:	b	198a8 <__flatcc_gen_sort@@Base+0xe8c>
   19920:	str	r6, [sp, #24]
   19924:	str	r9, [sp, #20]
   19928:	str	r8, [sp, #16]
   1992c:	str	r7, [sp, #12]
   19930:	str	r4, [sp, #8]
   19934:	ldrd	r2, [r5, #96]	; 0x60
   19938:	ldr	r1, [pc, #204]	; 19a0c <__flatcc_gen_sort@@Base+0xff0>
   1993c:	ldr	r0, [r4, #204]	; 0xcc
   19940:	strd	r2, [sp]
   19944:	mov	r2, r4
   19948:	bl	140e4 <fprintf@plt>
   1994c:	mov	r3, #1
   19950:	b	197e4 <__flatcc_gen_sort@@Base+0xdc8>
   19954:	ldr	r0, [pc, #96]	; 199bc <__flatcc_gen_sort@@Base+0xfa0>
   19958:	ldr	r3, [pc, #176]	; 19a10 <__flatcc_gen_sort@@Base+0xff4>
   1995c:	ldr	r2, [pc, #96]	; 199c4 <__flatcc_gen_sort@@Base+0xfa8>
   19960:	str	r3, [sp]
   19964:	ldr	r1, [pc, #92]	; 199c8 <__flatcc_gen_sort@@Base+0xfac>
   19968:	ldr	r3, [pc, #164]	; 19a14 <__flatcc_gen_sort@@Base+0xff8>
   1996c:	ldr	r0, [r0]
   19970:	bl	140e4 <fprintf@plt>
   19974:	ldr	r3, [pc, #84]	; 199d0 <__flatcc_gen_sort@@Base+0xfb4>
   19978:	ldr	r2, [pc, #148]	; 19a14 <__flatcc_gen_sort@@Base+0xff8>
   1997c:	b	195ec <__flatcc_gen_sort@@Base+0xbd0>
   19980:	ldr	r0, [pc, #52]	; 199bc <__flatcc_gen_sort@@Base+0xfa0>
   19984:	ldr	r3, [pc, #140]	; 19a18 <__flatcc_gen_sort@@Base+0xffc>
   19988:	ldr	r2, [pc, #52]	; 199c4 <__flatcc_gen_sort@@Base+0xfa8>
   1998c:	str	r3, [sp]
   19990:	ldr	r1, [pc, #48]	; 199c8 <__flatcc_gen_sort@@Base+0xfac>
   19994:	ldr	r3, [pc, #128]	; 19a1c <__flatcc_gen_sort@@Base+0x1000>
   19998:	ldr	r0, [r0]
   1999c:	bl	140e4 <fprintf@plt>
   199a0:	ldr	r3, [pc, #40]	; 199d0 <__flatcc_gen_sort@@Base+0xfb4>
   199a4:	ldr	r2, [pc, #112]	; 19a1c <__flatcc_gen_sort@@Base+0x1000>
   199a8:	b	195ec <__flatcc_gen_sort@@Base+0xbd0>
   199ac:	andeq	r9, r3, ip, ror sp
   199b0:	andeq	r2, r3, sp, lsl pc
   199b4:			; <UNDEFINED> instruction: 0x00039db2
   199b8:	strdeq	r9, [r3], -r7
   199bc:	strheq	ip, [r5], -r0
   199c0:	ldrdeq	r9, [r3], -r5
   199c4:	andeq	r9, r3, r5, asr #24
   199c8:	andeq	r1, r3, sl, ror #22
   199cc:	muleq	r0, r6, r5
   199d0:	andeq	r9, r3, r4, asr fp
   199d4:	andeq	sl, r3, r9, asr #3
   199d8:	andeq	r9, r3, lr, lsr #28
   199dc:	andeq	r9, r3, pc, ror lr
   199e0:	strdeq	r9, [r3], -ip
   199e4:	andeq	r9, r3, r7, lsr #30
   199e8:	andeq	r9, r3, r9, asr pc
   199ec:	muleq	r3, r2, pc	; <UNPREDICTABLE>
   199f0:	andeq	r9, r3, r0, asr #31
   199f4:	andeq	sl, r3, r8
   199f8:	andeq	r2, r3, sl, lsr ip
   199fc:	andeq	sl, r3, r6, lsr r0
   19a00:	andeq	sl, r3, r7, asr r0
   19a04:	andeq	sl, r3, ip, lsl #1
   19a08:	andeq	sl, r3, r1, asr #1
   19a0c:	strdeq	sl, [r3], -fp
   19a10:	andeq	r2, r3, r3, lsl #25
   19a14:	andeq	r0, r0, r3, ror #11
   19a18:	andeq	r2, r3, r5, asr #26
   19a1c:	andeq	r0, r0, r8, ror #11
   19a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a24:	sub	sp, sp, #260	; 0x104
   19a28:	mov	r4, r0
   19a2c:	str	r2, [sp, #24]
   19a30:	mov	r5, r1
   19a34:	mov	r2, #220	; 0xdc
   19a38:	mov	r1, #0
   19a3c:	add	r0, sp, #36	; 0x24
   19a40:	str	r3, [sp, #16]
   19a44:	ldr	r8, [sp, #296]	; 0x128
   19a48:	bl	140fc <memset@plt>
   19a4c:	ldr	r3, [sp, #16]
   19a50:	cmp	r3, #1
   19a54:	ldreq	r3, [pc, #920]	; 19df4 <__flatcc_gen_sort@@Base+0x13d8>
   19a58:	streq	r3, [sp, #20]
   19a5c:	beq	19a78 <__flatcc_gen_sort@@Base+0x105c>
   19a60:	ldr	r1, [sp, #16]
   19a64:	ldr	r3, [pc, #908]	; 19df8 <__flatcc_gen_sort@@Base+0x13dc>
   19a68:	ldr	r2, [pc, #908]	; 19dfc <__flatcc_gen_sort@@Base+0x13e0>
   19a6c:	cmp	r1, #2
   19a70:	movne	r2, r3
   19a74:	str	r2, [sp, #20]
   19a78:	mov	r7, #0
   19a7c:	ldr	r6, [r5]
   19a80:	mov	r5, r7
   19a84:	add	r3, r4, #204	; 0xcc
   19a88:	str	r3, [sp, #28]
   19a8c:	cmp	r6, #0
   19a90:	bne	19ab8 <__flatcc_gen_sort@@Base+0x109c>
   19a94:	ldr	r3, [sp, #24]
   19a98:	cmp	r3, #0
   19a9c:	ble	19aac <__flatcc_gen_sort@@Base+0x1090>
   19aa0:	ldr	r1, [r4, #204]	; 0xcc
   19aa4:	ldr	r0, [pc, #852]	; 19e00 <__flatcc_gen_sort@@Base+0x13e4>
   19aa8:	bl	14180 <fputs@plt>
   19aac:	mov	r0, r5
   19ab0:	add	sp, sp, #260	; 0x104
   19ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ab8:	ldr	r3, [r6, #4]
   19abc:	cmp	r5, #0
   19ac0:	ldr	sl, [r3, #4]
   19ac4:	ldr	fp, [r3]
   19ac8:	ble	19ae0 <__flatcc_gen_sort@@Base+0x10c4>
   19acc:	tst	r5, #3
   19ad0:	ldr	r1, [r4, #204]	; 0xcc
   19ad4:	ldreq	r0, [pc, #804]	; 19e00 <__flatcc_gen_sort@@Base+0x13e4>
   19ad8:	ldrne	r0, [pc, #804]	; 19e04 <__flatcc_gen_sort@@Base+0x13e8>
   19adc:	bl	14180 <fputs@plt>
   19ae0:	ldrh	r3, [r6, #24]
   19ae4:	cmp	r3, #8
   19ae8:	beq	19ce8 <__flatcc_gen_sort@@Base+0x12cc>
   19aec:	cmp	r3, #14
   19af0:	bne	19dc0 <__flatcc_gen_sort@@Base+0x13a4>
   19af4:	add	r1, sp, #36	; 0x24
   19af8:	ldr	r0, [r6, #16]
   19afc:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19b00:	ldr	r3, [r6, #16]
   19b04:	ldrh	r3, [r3, #8]
   19b08:	cmp	r3, #1
   19b0c:	ldrh	r3, [r6, #72]	; 0x48
   19b10:	bne	19bf8 <__flatcc_gen_sort@@Base+0x11dc>
   19b14:	tst	r3, #4
   19b18:	beq	19b4c <__flatcc_gen_sort@@Base+0x1130>
   19b1c:	mov	r3, r7
   19b20:	mov	r2, r7
   19b24:	ldr	r1, [pc, #732]	; 19e08 <__flatcc_gen_sort@@Base+0x13ec>
   19b28:	ldr	r0, [r4, #204]	; 0xcc
   19b2c:	bl	140e4 <fprintf@plt>
   19b30:	ldr	r3, [r6, #16]
   19b34:	add	r7, r7, #1
   19b38:	ldr	r0, [r3, #20]
   19b3c:	bl	18d44 <__flatcc_gen_sort@@Base+0x328>
   19b40:	add	r5, r5, r0
   19b44:	ldr	r6, [r6]
   19b48:	b	19a8c <__flatcc_gen_sort@@Base+0x1070>
   19b4c:	cmp	r8, #0
   19b50:	beq	19b7c <__flatcc_gen_sort@@Base+0x1160>
   19b54:	str	fp, [sp, #12]
   19b58:	str	sl, [sp, #8]
   19b5c:	stm	sp, {sl, fp}
   19b60:	ldr	r3, [sp, #20]
   19b64:	add	r2, sp, #36	; 0x24
   19b68:	ldr	r1, [pc, #668]	; 19e0c <__flatcc_gen_sort@@Base+0x13f0>
   19b6c:	ldr	r0, [r4, #204]	; 0xcc
   19b70:	bl	140e4 <fprintf@plt>
   19b74:	add	r5, r5, #1
   19b78:	b	19b44 <__flatcc_gen_sort@@Base+0x1128>
   19b7c:	stm	sp, {sl, fp}
   19b80:	ldr	r3, [sp, #20]
   19b84:	add	r2, sp, #36	; 0x24
   19b88:	ldr	r1, [pc, #640]	; 19e10 <__flatcc_gen_sort@@Base+0x13f4>
   19b8c:	ldr	r0, [r4, #204]	; 0xcc
   19b90:	bl	140e4 <fprintf@plt>
   19b94:	ldr	r3, [r6, #16]
   19b98:	mov	r9, r8
   19b9c:	ldr	r0, [r3, #20]
   19ba0:	bl	18d44 <__flatcc_gen_sort@@Base+0x328>
   19ba4:	mov	sl, r0
   19ba8:	cmp	sl, r9
   19bac:	add	fp, r5, r9
   19bb0:	bgt	19bcc <__flatcc_gen_sort@@Base+0x11b0>
   19bb4:	ldr	r1, [r4, #204]	; 0xcc
   19bb8:	mov	r0, #41	; 0x29
   19bbc:	cmp	sl, #0
   19bc0:	addge	r5, r5, sl
   19bc4:	bl	14144 <fputc@plt>
   19bc8:	b	19b44 <__flatcc_gen_sort@@Base+0x1128>
   19bcc:	mov	r1, r9
   19bd0:	mov	r3, #0
   19bd4:	ldr	r2, [sp, #24]
   19bd8:	ldr	r0, [sp, #28]
   19bdc:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   19be0:	mov	r2, fp
   19be4:	ldr	r1, [pc, #552]	; 19e14 <__flatcc_gen_sort@@Base+0x13f8>
   19be8:	ldr	r0, [r4, #204]	; 0xcc
   19bec:	bl	140e4 <fprintf@plt>
   19bf0:	add	r9, r9, #1
   19bf4:	b	19ba8 <__flatcc_gen_sort@@Base+0x118c>
   19bf8:	tst	r3, #4
   19bfc:	add	r9, r5, #1
   19c00:	beq	19c24 <__flatcc_gen_sort@@Base+0x1208>
   19c04:	mov	r2, r7
   19c08:	add	sl, r7, #1
   19c0c:	ldr	r1, [pc, #516]	; 19e18 <__flatcc_gen_sort@@Base+0x13fc>
   19c10:	ldr	r0, [r4, #204]	; 0xcc
   19c14:	bl	140e4 <fprintf@plt>
   19c18:	mov	r5, r9
   19c1c:	mov	r7, sl
   19c20:	b	19b44 <__flatcc_gen_sort@@Base+0x1128>
   19c24:	ldrd	r2, [r6, #88]	; 0x58
   19c28:	cmp	r3, #0
   19c2c:	cmpeq	r2, #1
   19c30:	beq	19c48 <__flatcc_gen_sort@@Base+0x122c>
   19c34:	ldr	r3, [sp, #16]
   19c38:	cmp	r3, #1
   19c3c:	beq	19c64 <__flatcc_gen_sort@@Base+0x1248>
   19c40:	cmp	r3, #2
   19c44:	beq	19cb0 <__flatcc_gen_sort@@Base+0x1294>
   19c48:	cmp	r8, #0
   19c4c:	beq	19da4 <__flatcc_gen_sort@@Base+0x1388>
   19c50:	stm	sp, {sl, fp}
   19c54:	mov	r3, fp
   19c58:	mov	r2, sl
   19c5c:	ldr	r1, [pc, #440]	; 19e1c <__flatcc_gen_sort@@Base+0x1400>
   19c60:	b	19ca0 <__flatcc_gen_sort@@Base+0x1284>
   19c64:	cmp	r8, #0
   19c68:	beq	19c8c <__flatcc_gen_sort@@Base+0x1270>
   19c6c:	ldr	r1, [pc, #428]	; 19e20 <__flatcc_gen_sort@@Base+0x1404>
   19c70:	mov	r3, sl
   19c74:	add	r2, sp, #36	; 0x24
   19c78:	stmib	sp, {sl, fp}
   19c7c:	str	fp, [sp]
   19c80:	ldr	r0, [r4, #204]	; 0xcc
   19c84:	bl	140e4 <fprintf@plt>
   19c88:	b	19ca8 <__flatcc_gen_sort@@Base+0x128c>
   19c8c:	ldr	r1, [pc, #400]	; 19e24 <__flatcc_gen_sort@@Base+0x1408>
   19c90:	mov	r3, sl
   19c94:	add	r2, sp, #36	; 0x24
   19c98:	str	r5, [sp, #4]
   19c9c:	str	fp, [sp]
   19ca0:	ldr	r0, [r4, #204]	; 0xcc
   19ca4:	bl	140e4 <fprintf@plt>
   19ca8:	mov	r5, r9
   19cac:	b	19b44 <__flatcc_gen_sort@@Base+0x1128>
   19cb0:	cmp	r8, #0
   19cb4:	beq	19cd0 <__flatcc_gen_sort@@Base+0x12b4>
   19cb8:	stmib	sp, {sl, fp}
   19cbc:	str	fp, [sp]
   19cc0:	mov	r3, sl
   19cc4:	add	r2, sp, #36	; 0x24
   19cc8:	ldr	r1, [pc, #344]	; 19e28 <__flatcc_gen_sort@@Base+0x140c>
   19ccc:	b	19c80 <__flatcc_gen_sort@@Base+0x1264>
   19cd0:	str	r5, [sp, #4]
   19cd4:	str	fp, [sp]
   19cd8:	mov	r3, sl
   19cdc:	add	r2, sp, #36	; 0x24
   19ce0:	ldr	r1, [pc, #324]	; 19e2c <__flatcc_gen_sort@@Base+0x1410>
   19ce4:	b	19ca0 <__flatcc_gen_sort@@Base+0x1284>
   19ce8:	ldr	r0, [r6, #16]
   19cec:	bl	190b8 <__flatcc_gen_sort@@Base+0x69c>
   19cf0:	ldrh	r3, [r6, #72]	; 0x48
   19cf4:	add	r9, r5, #1
   19cf8:	tst	r3, #4
   19cfc:	bne	19c04 <__flatcc_gen_sort@@Base+0x11e8>
   19d00:	ldrd	r2, [r6, #88]	; 0x58
   19d04:	cmp	r3, #0
   19d08:	cmpeq	r2, #1
   19d0c:	beq	19c48 <__flatcc_gen_sort@@Base+0x122c>
   19d10:	ldr	r3, [sp, #16]
   19d14:	cmp	r3, #1
   19d18:	beq	19d48 <__flatcc_gen_sort@@Base+0x132c>
   19d1c:	cmp	r3, #2
   19d20:	bne	19c48 <__flatcc_gen_sort@@Base+0x122c>
   19d24:	cmp	r8, #0
   19d28:	beq	19d8c <__flatcc_gen_sort@@Base+0x1370>
   19d2c:	str	fp, [sp, #12]
   19d30:	str	sl, [sp, #8]
   19d34:	stm	sp, {sl, fp}
   19d38:	mov	r3, r0
   19d3c:	mov	r2, r4
   19d40:	ldr	r1, [pc, #232]	; 19e30 <__flatcc_gen_sort@@Base+0x1414>
   19d44:	b	19d68 <__flatcc_gen_sort@@Base+0x134c>
   19d48:	cmp	r8, #0
   19d4c:	beq	19d74 <__flatcc_gen_sort@@Base+0x1358>
   19d50:	ldr	r1, [pc, #220]	; 19e34 <__flatcc_gen_sort@@Base+0x1418>
   19d54:	mov	r3, r0
   19d58:	mov	r2, r4
   19d5c:	str	fp, [sp, #12]
   19d60:	str	sl, [sp, #8]
   19d64:	stm	sp, {sl, fp}
   19d68:	ldr	r0, [r4, #204]	; 0xcc
   19d6c:	bl	140e4 <fprintf@plt>
   19d70:	b	19ca8 <__flatcc_gen_sort@@Base+0x128c>
   19d74:	str	r5, [sp, #8]
   19d78:	stm	sp, {sl, fp}
   19d7c:	mov	r3, r0
   19d80:	mov	r2, r4
   19d84:	ldr	r1, [pc, #172]	; 19e38 <__flatcc_gen_sort@@Base+0x141c>
   19d88:	b	19c80 <__flatcc_gen_sort@@Base+0x1264>
   19d8c:	str	r5, [sp, #8]
   19d90:	stm	sp, {sl, fp}
   19d94:	mov	r3, r0
   19d98:	mov	r2, r4
   19d9c:	ldr	r1, [pc, #152]	; 19e3c <__flatcc_gen_sort@@Base+0x1420>
   19da0:	b	19c80 <__flatcc_gen_sort@@Base+0x1264>
   19da4:	str	r5, [sp]
   19da8:	mov	r3, fp
   19dac:	mov	r2, sl
   19db0:	ldr	r1, [pc, #136]	; 19e40 <__flatcc_gen_sort@@Base+0x1424>
   19db4:	ldr	r0, [r4, #204]	; 0xcc
   19db8:	bl	140e4 <fprintf@plt>
   19dbc:	b	19ca8 <__flatcc_gen_sort@@Base+0x128c>
   19dc0:	ldr	r0, [pc, #124]	; 19e44 <__flatcc_gen_sort@@Base+0x1428>
   19dc4:	ldr	r3, [pc, #124]	; 19e48 <__flatcc_gen_sort@@Base+0x142c>
   19dc8:	ldr	r2, [pc, #124]	; 19e4c <__flatcc_gen_sort@@Base+0x1430>
   19dcc:	str	r3, [sp]
   19dd0:	ldr	r1, [pc, #120]	; 19e50 <__flatcc_gen_sort@@Base+0x1434>
   19dd4:	ldr	r3, [pc, #120]	; 19e54 <__flatcc_gen_sort@@Base+0x1438>
   19dd8:	ldr	r0, [r0]
   19ddc:	bl	140e4 <fprintf@plt>
   19de0:	ldr	r3, [pc, #112]	; 19e58 <__flatcc_gen_sort@@Base+0x143c>
   19de4:	ldr	r2, [pc, #104]	; 19e54 <__flatcc_gen_sort@@Base+0x1438>
   19de8:	ldr	r1, [pc, #92]	; 19e4c <__flatcc_gen_sort@@Base+0x1430>
   19dec:	ldr	r0, [pc, #104]	; 19e5c <__flatcc_gen_sort@@Base+0x1440>
   19df0:	bl	141a4 <__assert_fail@plt>
   19df4:	andeq	sl, r3, r7, lsr r1
   19df8:	andeq	r2, r3, sp, lsl pc
   19dfc:	andeq	sl, r3, r0, lsr r1
   19e00:	andeq	sl, r3, r0, asr #2
   19e04:	andeq	sl, r3, r5, asr #2
   19e08:	andeq	sl, r3, r8, asr #2
   19e0c:	andeq	sl, r3, r1, lsl #3
   19e10:	andeq	sl, r3, r0, lsr #3
   19e14:	andeq	sl, r3, r8, ror #3
   19e18:			; <UNDEFINED> instruction: 0x0003a1b5
   19e1c:	andeq	sl, r3, fp, asr #3
   19e20:	andeq	sl, r3, lr, ror #3
   19e24:	andeq	sl, r3, r5, lsl r2
   19e28:	andeq	sl, r3, r8, lsr r2
   19e2c:	andeq	sl, r3, sp, asr r2
   19e30:	andeq	sl, r3, r6, lsr r2
   19e34:	andeq	sl, r3, ip, ror #3
   19e38:	andeq	sl, r3, r3, lsl r2
   19e3c:	andeq	sl, r3, fp, asr r2
   19e40:	ldrdeq	sl, [r3], -lr
   19e44:	strheq	ip, [r5], -r0
   19e48:	andeq	sl, r3, ip, ror r2
   19e4c:	andeq	r9, r3, r5, asr #24
   19e50:	andeq	r1, r3, sl, ror #22
   19e54:	andeq	r0, r0, r1, ror #7
   19e58:	andeq	r9, r3, sp, ror #22
   19e5c:	andeq	sl, r3, r9, asr #3
   19e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e64:	sub	sp, sp, #484	; 0x1e4
   19e68:	mov	r4, r0
   19e6c:	add	fp, sp, #260	; 0x104
   19e70:	mov	r2, #220	; 0xdc
   19e74:	mov	r1, #0
   19e78:	mov	r0, fp
   19e7c:	bl	140fc <memset@plt>
   19e80:	ldr	r3, [r4, #208]	; 0xd0
   19e84:	ldr	r6, [pc, #2192]	; 1a71c <__flatcc_gen_sort@@Base+0x1d00>
   19e88:	mov	r7, #1
   19e8c:	ldr	r5, [r3, #40]	; 0x28
   19e90:	mov	r3, #0
   19e94:	cmp	r5, #0
   19e98:	bne	19f58 <__flatcc_gen_sort@@Base+0x153c>
   19e9c:	cmp	r3, #0
   19ea0:	beq	19eb0 <__flatcc_gen_sort@@Base+0x1494>
   19ea4:	ldr	r1, [r4, #204]	; 0xcc
   19ea8:	mov	r0, #10
   19eac:	bl	14144 <fputc@plt>
   19eb0:	ldr	r3, [r4, #208]	; 0xd0
   19eb4:	ldr	r9, [pc, #2148]	; 1a720 <__flatcc_gen_sort@@Base+0x1d04>
   19eb8:	add	sl, r4, #204	; 0xcc
   19ebc:	ldr	r6, [r3, #40]	; 0x28
   19ec0:	mov	r3, #0
   19ec4:	str	r3, [sp, #32]
   19ec8:	cmp	r6, #0
   19ecc:	bne	19f94 <__flatcc_gen_sort@@Base+0x1578>
   19ed0:	ldr	r3, [r4, #208]	; 0xd0
   19ed4:	ldr	r6, [r3, #40]	; 0x28
   19ed8:	cmp	r6, #0
   19edc:	bne	1a0b4 <__flatcc_gen_sort@@Base+0x1698>
   19ee0:	ldr	r3, [sp, #32]
   19ee4:	cmp	r3, #0
   19ee8:	beq	19ef8 <__flatcc_gen_sort@@Base+0x14dc>
   19eec:	ldr	r1, [r4, #204]	; 0xcc
   19ef0:	mov	r0, #10
   19ef4:	bl	14144 <fputc@plt>
   19ef8:	ldr	r3, [r4, #208]	; 0xd0
   19efc:	ldr	r8, [pc, #2080]	; 1a724 <__flatcc_gen_sort@@Base+0x1d08>
   19f00:	ldr	r9, [pc, #2080]	; 1a728 <__flatcc_gen_sort@@Base+0x1d0c>
   19f04:	ldr	sl, [pc, #2080]	; 1a72c <__flatcc_gen_sort@@Base+0x1d10>
   19f08:	ldr	r7, [r3, #40]	; 0x28
   19f0c:	mov	r3, #0
   19f10:	cmp	r7, #0
   19f14:	bne	1a410 <__flatcc_gen_sort@@Base+0x19f4>
   19f18:	cmp	r3, #0
   19f1c:	beq	19f2c <__flatcc_gen_sort@@Base+0x1510>
   19f20:	ldr	r1, [r4, #204]	; 0xcc
   19f24:	mov	r0, #10
   19f28:	bl	14144 <fputc@plt>
   19f2c:	ldr	r3, [sp, #32]
   19f30:	cmp	r3, #0
   19f34:	beq	19f4c <__flatcc_gen_sort@@Base+0x1530>
   19f38:	ldr	r3, [r4, #208]	; 0xd0
   19f3c:	ldr	sl, [pc, #2028]	; 1a730 <__flatcc_gen_sort@@Base+0x1d14>
   19f40:	ldr	r5, [r3, #40]	; 0x28
   19f44:	cmp	r5, #0
   19f48:	bne	1a558 <__flatcc_gen_sort@@Base+0x1b3c>
   19f4c:	mov	r0, #0
   19f50:	add	sp, sp, #484	; 0x1e4
   19f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f58:	ldrh	r2, [r5, #8]
   19f5c:	cmp	r2, #4
   19f60:	bne	19f8c <__flatcc_gen_sort@@Base+0x1570>
   19f64:	mov	r1, fp
   19f68:	mov	r0, r5
   19f6c:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19f70:	mov	r3, fp
   19f74:	stm	sp, {r4, fp}
   19f78:	mov	r2, r4
   19f7c:	mov	r1, r6
   19f80:	ldr	r0, [r4, #204]	; 0xcc
   19f84:	bl	140e4 <fprintf@plt>
   19f88:	mov	r3, r7
   19f8c:	ldr	r5, [r5]
   19f90:	b	19e94 <__flatcc_gen_sort@@Base+0x1478>
   19f94:	ldrh	r7, [r6, #8]
   19f98:	cmp	r7, #0
   19f9c:	bne	1a040 <__flatcc_gen_sort@@Base+0x1624>
   19fa0:	mov	r2, #220	; 0xdc
   19fa4:	mov	r1, r7
   19fa8:	mov	r0, fp
   19fac:	bl	140fc <memset@plt>
   19fb0:	ldr	r5, [r6, #20]
   19fb4:	cmp	r5, #0
   19fb8:	bne	1a048 <__flatcc_gen_sort@@Base+0x162c>
   19fbc:	mov	r1, fp
   19fc0:	mov	r0, r6
   19fc4:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   19fc8:	mov	r3, fp
   19fcc:	mov	r2, r4
   19fd0:	ldr	r1, [pc, #1884]	; 1a734 <__flatcc_gen_sort@@Base+0x1d18>
   19fd4:	ldr	r0, [r4, #204]	; 0xcc
   19fd8:	bl	140e4 <fprintf@plt>
   19fdc:	ldr	r8, [r6, #20]
   19fe0:	cmp	r8, #0
   19fe4:	bne	1a05c <__flatcc_gen_sort@@Base+0x1640>
   19fe8:	cmp	r5, #0
   19fec:	ldr	r1, [r4, #204]	; 0xcc
   19ff0:	ldrne	r0, [pc, #1856]	; 1a738 <__flatcc_gen_sort@@Base+0x1d1c>
   19ff4:	ldreq	r0, [pc, #1856]	; 1a73c <__flatcc_gen_sort@@Base+0x1d20>
   19ff8:	bl	14180 <fputs@plt>
   19ffc:	mov	r2, #220	; 0xdc
   1a000:	mov	r1, #0
   1a004:	mov	r0, fp
   1a008:	bl	140fc <memset@plt>
   1a00c:	mov	r1, fp
   1a010:	mov	r0, r6
   1a014:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a018:	ldrd	r2, [r6, #96]	; 0x60
   1a01c:	ldr	r1, [pc, #1820]	; 1a740 <__flatcc_gen_sort@@Base+0x1d24>
   1a020:	str	fp, [sp]
   1a024:	strd	r2, [sp, #8]
   1a028:	ldr	r0, [r4, #204]	; 0xcc
   1a02c:	mov	r3, r4
   1a030:	mov	r2, r4
   1a034:	bl	140e4 <fprintf@plt>
   1a038:	mov	r3, #1
   1a03c:	str	r3, [sp, #32]
   1a040:	ldr	r6, [r6]
   1a044:	b	19ec8 <__flatcc_gen_sort@@Base+0x14ac>
   1a048:	ldrh	r3, [r5, #72]	; 0x48
   1a04c:	ldr	r5, [r5]
   1a050:	tst	r3, #4
   1a054:	addeq	r7, r7, #1
   1a058:	b	19fb4 <__flatcc_gen_sort@@Base+0x1598>
   1a05c:	ldrh	r2, [r8, #72]	; 0x48
   1a060:	ands	r3, r2, #4
   1a064:	bne	1a09c <__flatcc_gen_sort@@Base+0x1680>
   1a068:	tst	r2, #256	; 0x100
   1a06c:	beq	1a09c <__flatcc_gen_sort@@Base+0x1680>
   1a070:	cmp	r5, #0
   1a074:	beq	1a0a4 <__flatcc_gen_sort@@Base+0x1688>
   1a078:	mov	r2, r7
   1a07c:	mov	r1, r5
   1a080:	mov	r0, sl
   1a084:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   1a088:	ldr	r2, [r8, #96]	; 0x60
   1a08c:	mov	r1, r9
   1a090:	ldr	r0, [r4, #204]	; 0xcc
   1a094:	bl	140e4 <fprintf@plt>
   1a098:	add	r5, r5, #1
   1a09c:	ldr	r8, [r8]
   1a0a0:	b	19fe0 <__flatcc_gen_sort@@Base+0x15c4>
   1a0a4:	ldr	r1, [r4, #204]	; 0xcc
   1a0a8:	mov	r0, #32
   1a0ac:	bl	14144 <fputc@plt>
   1a0b0:	b	1a088 <__flatcc_gen_sort@@Base+0x166c>
   1a0b4:	ldrh	sl, [r6, #8]
   1a0b8:	cmp	sl, #0
   1a0bc:	bne	1a164 <__flatcc_gen_sort@@Base+0x1748>
   1a0c0:	add	r7, sp, #40	; 0x28
   1a0c4:	mov	r2, #220	; 0xdc
   1a0c8:	mov	r1, sl
   1a0cc:	mov	r0, r7
   1a0d0:	bl	140fc <memset@plt>
   1a0d4:	mov	r1, r7
   1a0d8:	mov	r0, r6
   1a0dc:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a0e0:	ldr	r9, [r6, #20]
   1a0e4:	cmp	r9, #0
   1a0e8:	bne	1a16c <__flatcc_gen_sort@@Base+0x1750>
   1a0ec:	mov	r8, r4
   1a0f0:	mov	r2, r7
   1a0f4:	ldr	r1, [pc, #1608]	; 1a744 <__flatcc_gen_sort@@Base+0x1d28>
   1a0f8:	ldr	r0, [r8, #204]!	; 0xcc
   1a0fc:	bl	140e4 <fprintf@plt>
   1a100:	mov	r2, #220	; 0xdc
   1a104:	mov	r1, r9
   1a108:	mov	r0, fp
   1a10c:	bl	140fc <memset@plt>
   1a110:	ldr	r5, [r6, #20]
   1a114:	cmp	r5, #0
   1a118:	mov	r1, r9
   1a11c:	bne	1a180 <__flatcc_gen_sort@@Base+0x1764>
   1a120:	mov	r9, r4
   1a124:	mov	r2, r7
   1a128:	ldr	r1, [pc, #1560]	; 1a748 <__flatcc_gen_sort@@Base+0x1d2c>
   1a12c:	ldr	r0, [r9, #204]!	; 0xcc
   1a130:	bl	140e4 <fprintf@plt>
   1a134:	ldr	r8, [r6, #20]
   1a138:	cmp	r8, #0
   1a13c:	bne	1a3d4 <__flatcc_gen_sort@@Base+0x19b8>
   1a140:	ldr	r1, [r4, #204]	; 0xcc
   1a144:	mov	r0, #10
   1a148:	bl	14144 <fputc@plt>
   1a14c:	stm	sp, {r4, r7}
   1a150:	mov	r3, r7
   1a154:	mov	r2, r7
   1a158:	ldr	r1, [pc, #1516]	; 1a74c <__flatcc_gen_sort@@Base+0x1d30>
   1a15c:	ldr	r0, [r4, #204]	; 0xcc
   1a160:	bl	140e4 <fprintf@plt>
   1a164:	ldr	r6, [r6]
   1a168:	b	19ed8 <__flatcc_gen_sort@@Base+0x14bc>
   1a16c:	ldrh	r3, [r9, #72]	; 0x48
   1a170:	ldr	r9, [r9]
   1a174:	tst	r3, #4
   1a178:	addeq	sl, sl, #1
   1a17c:	b	1a0e4 <__flatcc_gen_sort@@Base+0x16c8>
   1a180:	ldrh	r3, [r5, #72]	; 0x48
   1a184:	tst	r3, #4
   1a188:	movne	r9, r1
   1a18c:	bne	1a358 <__flatcc_gen_sort@@Base+0x193c>
   1a190:	mov	r3, #1
   1a194:	mov	r2, sl
   1a198:	mov	r0, r8
   1a19c:	add	r9, r1, #1
   1a1a0:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   1a1a4:	ldrh	r3, [r5, #24]
   1a1a8:	sub	r3, r3, #7
   1a1ac:	cmp	r3, #8
   1a1b0:	ldrls	pc, [pc, r3, lsl #2]
   1a1b4:	b	1a3a8 <__flatcc_gen_sort@@Base+0x198c>
   1a1b8:	andeq	sl, r1, r0, ror #6
   1a1bc:	andeq	sl, r1, r4, lsr #6
   1a1c0:	muleq	r1, r4, r3
   1a1c4:	andeq	sl, r1, r0, lsl #7
   1a1c8:	andeq	sl, r1, r8, lsr #7
   1a1cc:	andeq	sl, r1, r8, lsr #7
   1a1d0:	andeq	sl, r1, r8, lsr #7
   1a1d4:	ldrdeq	sl, [r1], -ip
   1a1d8:	muleq	r1, ip, r2
   1a1dc:	mov	r1, fp
   1a1e0:	ldr	r0, [r5, #16]
   1a1e4:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a1e8:	ldr	r3, [r5, #16]
   1a1ec:	ldrh	r3, [r3, #8]
   1a1f0:	cmp	r3, #4
   1a1f4:	ldrls	pc, [pc, r3, lsl #2]
   1a1f8:	b	1a268 <__flatcc_gen_sort@@Base+0x184c>
   1a1fc:	andeq	sl, r1, r0, asr #4
   1a200:	andeq	sl, r1, r0, lsl r2
   1a204:	andeq	sl, r1, r8, ror #4
   1a208:	andeq	sl, r1, ip, lsr #4
   1a20c:	andeq	sl, r1, r4, asr r2
   1a210:	ldrd	r2, [r5, #96]	; 0x60
   1a214:	ldr	r1, [pc, #1332]	; 1a750 <__flatcc_gen_sort@@Base+0x1d34>
   1a218:	strd	r2, [sp]
   1a21c:	mov	r2, fp
   1a220:	ldr	r0, [r4, #204]	; 0xcc
   1a224:	bl	140e4 <fprintf@plt>
   1a228:	b	1a358 <__flatcc_gen_sort@@Base+0x193c>
   1a22c:	ldrd	r2, [r5, #96]	; 0x60
   1a230:	ldr	r1, [pc, #1308]	; 1a754 <__flatcc_gen_sort@@Base+0x1d38>
   1a234:	strd	r2, [sp]
   1a238:	mov	r2, fp
   1a23c:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a240:	ldrd	r2, [r5, #96]	; 0x60
   1a244:	ldr	r1, [pc, #1292]	; 1a758 <__flatcc_gen_sort@@Base+0x1d3c>
   1a248:	strd	r2, [sp]
   1a24c:	mov	r2, fp
   1a250:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a254:	ldrd	r2, [r5, #96]	; 0x60
   1a258:	ldr	r1, [pc, #1276]	; 1a75c <__flatcc_gen_sort@@Base+0x1d40>
   1a25c:	strd	r2, [sp]
   1a260:	mov	r2, fp
   1a264:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a268:	ldr	r0, [pc, #1264]	; 1a760 <__flatcc_gen_sort@@Base+0x1d44>
   1a26c:	ldr	r3, [pc, #1264]	; 1a764 <__flatcc_gen_sort@@Base+0x1d48>
   1a270:	ldr	r2, [pc, #1264]	; 1a768 <__flatcc_gen_sort@@Base+0x1d4c>
   1a274:	str	r3, [sp]
   1a278:	ldr	r1, [pc, #1260]	; 1a76c <__flatcc_gen_sort@@Base+0x1d50>
   1a27c:	ldr	r3, [pc, #1260]	; 1a770 <__flatcc_gen_sort@@Base+0x1d54>
   1a280:	ldr	r0, [r0]
   1a284:	bl	140e4 <fprintf@plt>
   1a288:	ldr	r3, [pc, #1252]	; 1a774 <__flatcc_gen_sort@@Base+0x1d58>
   1a28c:	ldr	r2, [pc, #1244]	; 1a770 <__flatcc_gen_sort@@Base+0x1d54>
   1a290:	ldr	r1, [pc, #1232]	; 1a768 <__flatcc_gen_sort@@Base+0x1d4c>
   1a294:	ldr	r0, [pc, #1244]	; 1a778 <__flatcc_gen_sort@@Base+0x1d5c>
   1a298:	bl	141a4 <__assert_fail@plt>
   1a29c:	mov	r1, fp
   1a2a0:	ldr	r0, [r5, #16]
   1a2a4:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a2a8:	ldr	r3, [r5, #16]
   1a2ac:	ldrh	r3, [r3, #8]
   1a2b0:	cmp	r3, #4
   1a2b4:	ldrls	pc, [pc, r3, lsl #2]
   1a2b8:	b	1a2f8 <__flatcc_gen_sort@@Base+0x18dc>
   1a2bc:	ldrdeq	sl, [r1], -r0
   1a2c0:	ldrdeq	sl, [r1], -r0
   1a2c4:	strdeq	sl, [r1], -r8
   1a2c8:	ldrdeq	sl, [r1], -r0
   1a2cc:	andeq	sl, r1, r4, ror #5
   1a2d0:	ldrd	r2, [r5, #96]	; 0x60
   1a2d4:	ldr	r1, [pc, #1184]	; 1a77c <__flatcc_gen_sort@@Base+0x1d60>
   1a2d8:	strd	r2, [sp]
   1a2dc:	mov	r2, fp
   1a2e0:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a2e4:	ldrd	r2, [r5, #96]	; 0x60
   1a2e8:	ldr	r1, [pc, #1168]	; 1a780 <__flatcc_gen_sort@@Base+0x1d64>
   1a2ec:	strd	r2, [sp]
   1a2f0:	mov	r2, fp
   1a2f4:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a2f8:	ldr	r0, [pc, #1120]	; 1a760 <__flatcc_gen_sort@@Base+0x1d44>
   1a2fc:	ldr	r3, [pc, #1152]	; 1a784 <__flatcc_gen_sort@@Base+0x1d68>
   1a300:	ldr	r2, [pc, #1120]	; 1a768 <__flatcc_gen_sort@@Base+0x1d4c>
   1a304:	str	r3, [sp]
   1a308:	ldr	r1, [pc, #1116]	; 1a76c <__flatcc_gen_sort@@Base+0x1d50>
   1a30c:	ldr	r3, [pc, #1140]	; 1a788 <__flatcc_gen_sort@@Base+0x1d6c>
   1a310:	ldr	r0, [r0]
   1a314:	bl	140e4 <fprintf@plt>
   1a318:	ldr	r3, [pc, #1108]	; 1a774 <__flatcc_gen_sort@@Base+0x1d58>
   1a31c:	ldr	r2, [pc, #1124]	; 1a788 <__flatcc_gen_sort@@Base+0x1d6c>
   1a320:	b	1a290 <__flatcc_gen_sort@@Base+0x1874>
   1a324:	ldr	r0, [r5, #16]
   1a328:	ldr	r2, [pc, #1116]	; 1a78c <__flatcc_gen_sort@@Base+0x1d70>
   1a32c:	cmp	r0, #5
   1a330:	moveq	r2, r4
   1a334:	str	r2, [sp, #36]	; 0x24
   1a338:	bl	18e1c <__flatcc_gen_sort@@Base+0x400>
   1a33c:	ldrd	r2, [r5, #96]	; 0x60
   1a340:	ldr	r1, [pc, #1096]	; 1a790 <__flatcc_gen_sort@@Base+0x1d74>
   1a344:	strd	r2, [sp]
   1a348:	ldr	r2, [sp, #36]	; 0x24
   1a34c:	mov	r3, r0
   1a350:	ldr	r0, [r4, #204]	; 0xcc
   1a354:	bl	140e4 <fprintf@plt>
   1a358:	ldr	r5, [r5]
   1a35c:	b	1a114 <__flatcc_gen_sort@@Base+0x16f8>
   1a360:	ldr	r0, [r5, #16]
   1a364:	bl	190b8 <__flatcc_gen_sort@@Base+0x69c>
   1a368:	ldrd	r2, [r5, #96]	; 0x60
   1a36c:	ldr	r1, [pc, #1056]	; 1a794 <__flatcc_gen_sort@@Base+0x1d78>
   1a370:	strd	r2, [sp]
   1a374:	mov	r2, r4
   1a378:	mov	r3, r0
   1a37c:	b	1a350 <__flatcc_gen_sort@@Base+0x1934>
   1a380:	ldrd	r2, [r5, #96]	; 0x60
   1a384:	ldr	r1, [pc, #1036]	; 1a798 <__flatcc_gen_sort@@Base+0x1d7c>
   1a388:	strd	r2, [sp]
   1a38c:	mov	r2, r4
   1a390:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a394:	ldrd	r2, [r5, #96]	; 0x60
   1a398:	ldr	r1, [pc, #1020]	; 1a79c <__flatcc_gen_sort@@Base+0x1d80>
   1a39c:	strd	r2, [sp]
   1a3a0:	mov	r2, r4
   1a3a4:	b	1a220 <__flatcc_gen_sort@@Base+0x1804>
   1a3a8:	ldr	r0, [pc, #944]	; 1a760 <__flatcc_gen_sort@@Base+0x1d44>
   1a3ac:	ldr	r3, [pc, #1004]	; 1a7a0 <__flatcc_gen_sort@@Base+0x1d84>
   1a3b0:	ldr	r2, [pc, #944]	; 1a768 <__flatcc_gen_sort@@Base+0x1d4c>
   1a3b4:	str	r3, [sp]
   1a3b8:	ldr	r1, [pc, #940]	; 1a76c <__flatcc_gen_sort@@Base+0x1d50>
   1a3bc:	ldr	r3, [pc, #992]	; 1a7a4 <__flatcc_gen_sort@@Base+0x1d88>
   1a3c0:	ldr	r0, [r0]
   1a3c4:	bl	140e4 <fprintf@plt>
   1a3c8:	ldr	r3, [pc, #932]	; 1a774 <__flatcc_gen_sort@@Base+0x1d58>
   1a3cc:	ldr	r2, [pc, #976]	; 1a7a4 <__flatcc_gen_sort@@Base+0x1d88>
   1a3d0:	b	1a290 <__flatcc_gen_sort@@Base+0x1874>
   1a3d4:	ldrh	r3, [r8, #72]	; 0x48
   1a3d8:	tst	r3, #4
   1a3dc:	bne	1a408 <__flatcc_gen_sort@@Base+0x19ec>
   1a3e0:	mov	r1, r5
   1a3e4:	mov	r3, #1
   1a3e8:	mov	r2, sl
   1a3ec:	mov	r0, r9
   1a3f0:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   1a3f4:	ldrd	r2, [r8, #96]	; 0x60
   1a3f8:	ldr	r1, [pc, #936]	; 1a7a8 <__flatcc_gen_sort@@Base+0x1d8c>
   1a3fc:	ldr	r0, [r4, #204]	; 0xcc
   1a400:	bl	140e4 <fprintf@plt>
   1a404:	add	r5, r5, #1
   1a408:	ldr	r8, [r8]
   1a40c:	b	1a138 <__flatcc_gen_sort@@Base+0x171c>
   1a410:	ldrh	r2, [r7, #8]
   1a414:	cmp	r2, #4
   1a418:	bne	1a474 <__flatcc_gen_sort@@Base+0x1a58>
   1a41c:	add	r5, sp, #40	; 0x28
   1a420:	mov	r2, #220	; 0xdc
   1a424:	mov	r1, #0
   1a428:	mov	r0, r5
   1a42c:	bl	140fc <memset@plt>
   1a430:	mov	r2, #220	; 0xdc
   1a434:	mov	r1, #0
   1a438:	mov	r0, fp
   1a43c:	bl	140fc <memset@plt>
   1a440:	mov	r1, r5
   1a444:	mov	r0, r7
   1a448:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a44c:	ldr	r6, [r7, #20]
   1a450:	cmp	r6, #0
   1a454:	bne	1a47c <__flatcc_gen_sort@@Base+0x1a60>
   1a458:	mov	r3, r4
   1a45c:	str	r5, [sp]
   1a460:	mov	r2, r4
   1a464:	ldr	r1, [pc, #832]	; 1a7ac <__flatcc_gen_sort@@Base+0x1d90>
   1a468:	ldr	r0, [r4, #204]	; 0xcc
   1a46c:	bl	140e4 <fprintf@plt>
   1a470:	mov	r3, #1
   1a474:	ldr	r7, [r7]
   1a478:	b	19f10 <__flatcc_gen_sort@@Base+0x14f4>
   1a47c:	ldrh	r3, [r6, #24]
   1a480:	cmp	r3, #10
   1a484:	beq	1a500 <__flatcc_gen_sort@@Base+0x1ae4>
   1a488:	cmp	r3, #14
   1a48c:	beq	1a4b8 <__flatcc_gen_sort@@Base+0x1a9c>
   1a490:	cmp	r3, #0
   1a494:	bne	1a52c <__flatcc_gen_sort@@Base+0x1b10>
   1a498:	str	r5, [sp, #4]
   1a49c:	str	r5, [sp]
   1a4a0:	mov	r3, r5
   1a4a4:	mov	r2, r5
   1a4a8:	mov	r1, sl
   1a4ac:	ldr	r0, [r4, #204]	; 0xcc
   1a4b0:	bl	140e4 <fprintf@plt>
   1a4b4:	b	1a4f8 <__flatcc_gen_sort@@Base+0x1adc>
   1a4b8:	mov	r1, fp
   1a4bc:	ldr	r0, [r6, #16]
   1a4c0:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a4c4:	ldr	r2, [r6, #4]
   1a4c8:	mov	r1, r9
   1a4cc:	ldm	r2, {r2, r3}
   1a4d0:	str	r5, [sp, #16]
   1a4d4:	str	r5, [sp, #12]
   1a4d8:	str	r2, [sp, #24]
   1a4dc:	str	r3, [sp, #20]
   1a4e0:	stmib	sp, {r2, fp}
   1a4e4:	str	r3, [sp]
   1a4e8:	mov	r2, r5
   1a4ec:	mov	r3, r5
   1a4f0:	ldr	r0, [r4, #204]	; 0xcc
   1a4f4:	bl	140e4 <fprintf@plt>
   1a4f8:	ldr	r6, [r6]
   1a4fc:	b	1a450 <__flatcc_gen_sort@@Base+0x1a34>
   1a500:	ldr	r2, [r6, #4]
   1a504:	mov	r1, r8
   1a508:	ldm	r2, {r2, r3}
   1a50c:	str	r5, [sp, #16]
   1a510:	str	r2, [sp, #24]
   1a514:	str	r3, [sp, #20]
   1a518:	stmib	sp, {r2, r4, r5}
   1a51c:	mov	r2, r5
   1a520:	str	r3, [sp]
   1a524:	mov	r3, r5
   1a528:	b	1a4f0 <__flatcc_gen_sort@@Base+0x1ad4>
   1a52c:	ldr	r0, [pc, #556]	; 1a760 <__flatcc_gen_sort@@Base+0x1d44>
   1a530:	ldr	r3, [pc, #632]	; 1a7b0 <__flatcc_gen_sort@@Base+0x1d94>
   1a534:	ldr	r2, [pc, #556]	; 1a768 <__flatcc_gen_sort@@Base+0x1d4c>
   1a538:	str	r3, [sp]
   1a53c:	ldr	r1, [pc, #552]	; 1a76c <__flatcc_gen_sort@@Base+0x1d50>
   1a540:	ldr	r3, [pc, #620]	; 1a7b4 <__flatcc_gen_sort@@Base+0x1d98>
   1a544:	ldr	r0, [r0]
   1a548:	bl	140e4 <fprintf@plt>
   1a54c:	ldr	r3, [pc, #612]	; 1a7b8 <__flatcc_gen_sort@@Base+0x1d9c>
   1a550:	ldr	r2, [pc, #604]	; 1a7b4 <__flatcc_gen_sort@@Base+0x1d98>
   1a554:	b	1a290 <__flatcc_gen_sort@@Base+0x1874>
   1a558:	ldrh	r7, [r5, #8]
   1a55c:	cmp	r7, #0
   1a560:	bne	1a634 <__flatcc_gen_sort@@Base+0x1c18>
   1a564:	mov	r1, r5
   1a568:	mov	r0, r4
   1a56c:	bl	193d0 <__flatcc_gen_sort@@Base+0x9b4>
   1a570:	ldrh	r8, [r5, #92]	; 0x5c
   1a574:	mov	r2, #220	; 0xdc
   1a578:	mov	r1, r7
   1a57c:	ands	r8, r8, #8
   1a580:	mov	r0, fp
   1a584:	moveq	r9, #1
   1a588:	movne	r9, #0
   1a58c:	bl	140fc <memset@plt>
   1a590:	mov	r1, fp
   1a594:	mov	r0, r5
   1a598:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a59c:	mov	r3, fp
   1a5a0:	mov	r2, fp
   1a5a4:	ldr	r1, [pc, #528]	; 1a7bc <__flatcc_gen_sort@@Base+0x1da0>
   1a5a8:	stm	sp, {r4, fp}
   1a5ac:	ldr	r0, [r4, #204]	; 0xcc
   1a5b0:	bl	140e4 <fprintf@plt>
   1a5b4:	mov	r2, fp
   1a5b8:	ldr	r1, [pc, #512]	; 1a7c0 <__flatcc_gen_sort@@Base+0x1da4>
   1a5bc:	ldr	r0, [r4, #204]	; 0xcc
   1a5c0:	bl	140e4 <fprintf@plt>
   1a5c4:	ldr	r6, [r5, #24]
   1a5c8:	cmp	r6, #0
   1a5cc:	bne	1a63c <__flatcc_gen_sort@@Base+0x1c20>
   1a5d0:	tst	r7, r9
   1a5d4:	ldrne	r6, [r5, #24]
   1a5d8:	bne	1a710 <__flatcc_gen_sort@@Base+0x1cf4>
   1a5dc:	mov	r2, fp
   1a5e0:	ldr	r1, [pc, #476]	; 1a7c4 <__flatcc_gen_sort@@Base+0x1da8>
   1a5e4:	ldr	r0, [r4, #204]	; 0xcc
   1a5e8:	bl	140e4 <fprintf@plt>
   1a5ec:	mov	r2, #220	; 0xdc
   1a5f0:	mov	r1, #0
   1a5f4:	mov	r0, fp
   1a5f8:	bl	140fc <memset@plt>
   1a5fc:	mov	r1, fp
   1a600:	mov	r0, r5
   1a604:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1a608:	ldr	r1, [pc, #440]	; 1a7c8 <__flatcc_gen_sort@@Base+0x1dac>
   1a60c:	str	fp, [sp, #8]
   1a610:	str	fp, [sp, #4]
   1a614:	str	fp, [sp]
   1a618:	mov	r3, r4
   1a61c:	mov	r2, r4
   1a620:	ldr	r0, [r4, #204]	; 0xcc
   1a624:	bl	140e4 <fprintf@plt>
   1a628:	ldr	r1, [r4, #204]	; 0xcc
   1a62c:	mov	r0, #10
   1a630:	bl	14144 <fputc@plt>
   1a634:	ldr	r5, [r5]
   1a638:	b	19f44 <__flatcc_gen_sort@@Base+0x1528>
   1a63c:	ldrh	r3, [r6, #72]	; 0x48
   1a640:	tst	r3, #4
   1a644:	bne	1a698 <__flatcc_gen_sort@@Base+0x1c7c>
   1a648:	ldrh	r1, [r6, #24]
   1a64c:	ldr	r2, [r6, #4]
   1a650:	cmp	r1, #14
   1a654:	ldm	r2, {r2, r3}
   1a658:	ldrd	r0, [r6, #96]	; 0x60
   1a65c:	bne	1a6a0 <__flatcc_gen_sort@@Base+0x1c84>
   1a660:	ldr	ip, [r6, #16]
   1a664:	ldrh	ip, [ip, #8]
   1a668:	cmp	ip, #4
   1a66c:	bne	1a6a0 <__flatcc_gen_sort@@Base+0x1c84>
   1a670:	cmp	r8, #0
   1a674:	ldrne	r7, [sp, #32]
   1a678:	bne	1a6a0 <__flatcc_gen_sort@@Base+0x1c84>
   1a67c:	strd	r0, [sp, #8]
   1a680:	str	r2, [sp]
   1a684:	ldr	r1, [pc, #320]	; 1a7cc <__flatcc_gen_sort@@Base+0x1db0>
   1a688:	mov	r2, fp
   1a68c:	ldr	r0, [r4, #204]	; 0xcc
   1a690:	bl	140e4 <fprintf@plt>
   1a694:	ldr	r7, [sp, #32]
   1a698:	ldr	r6, [r6, #108]	; 0x6c
   1a69c:	b	1a5c8 <__flatcc_gen_sort@@Base+0x1bac>
   1a6a0:	strd	r0, [sp, #8]
   1a6a4:	str	r2, [sp]
   1a6a8:	ldr	r1, [pc, #288]	; 1a7d0 <__flatcc_gen_sort@@Base+0x1db4>
   1a6ac:	mov	r2, fp
   1a6b0:	ldr	r0, [r4, #204]	; 0xcc
   1a6b4:	bl	140e4 <fprintf@plt>
   1a6b8:	b	1a698 <__flatcc_gen_sort@@Base+0x1c7c>
   1a6bc:	ldrh	r3, [r6, #72]	; 0x48
   1a6c0:	tst	r3, #4
   1a6c4:	bne	1a70c <__flatcc_gen_sort@@Base+0x1cf0>
   1a6c8:	ldrh	r3, [r6, #24]
   1a6cc:	cmp	r3, #14
   1a6d0:	bne	1a70c <__flatcc_gen_sort@@Base+0x1cf0>
   1a6d4:	ldr	r3, [r6, #16]
   1a6d8:	ldrh	r3, [r3, #8]
   1a6dc:	cmp	r3, #4
   1a6e0:	bne	1a70c <__flatcc_gen_sort@@Base+0x1cf0>
   1a6e4:	ldr	r1, [r6, #4]
   1a6e8:	ldrd	r2, [r6, #96]	; 0x60
   1a6ec:	ldr	r0, [r4, #204]	; 0xcc
   1a6f0:	strd	r2, [sp, #8]
   1a6f4:	ldr	r3, [r1]
   1a6f8:	mov	r2, fp
   1a6fc:	str	r3, [sp]
   1a700:	ldr	r3, [r1, #4]
   1a704:	mov	r1, sl
   1a708:	bl	140e4 <fprintf@plt>
   1a70c:	ldr	r6, [r6, #108]	; 0x6c
   1a710:	cmp	r6, #0
   1a714:	bne	1a6bc <__flatcc_gen_sort@@Base+0x1ca0>
   1a718:	b	1a5dc <__flatcc_gen_sort@@Base+0x1bc0>
   1a71c:	muleq	r3, r7, r2
   1a720:	andeq	sl, r3, r9, lsl r3
   1a724:	andeq	sl, r3, sp, lsr r5
   1a728:			; <UNDEFINED> instruction: 0x0003a4b9
   1a72c:	andeq	sl, r3, r7, asr #11
   1a730:	andeq	sl, r3, r4, lsr #15
   1a734:	andeq	sl, r3, ip, ror #5
   1a738:	andeq	sl, r3, ip, lsl r3
   1a73c:	andeq	sl, r3, sp, lsl r3
   1a740:	andeq	sl, r3, r4, lsr #6
   1a744:	andeq	sl, r3, r3, asr #6
   1a748:	andeq	sl, r3, ip, asr r4
   1a74c:	andeq	sl, r3, r5, ror r4
   1a750:	andeq	sl, r3, sp, asr r3
   1a754:	andeq	sl, r3, r9, ror #6
   1a758:	andeq	sl, r3, r9, ror r3
   1a75c:	andeq	sl, r3, r8, lsl #7
   1a760:	strheq	ip, [r5], -r0
   1a764:	muleq	r3, sp, r3
   1a768:	andeq	r9, r3, r5, asr #24
   1a76c:	andeq	r1, r3, sl, ror #22
   1a770:	muleq	r0, r5, r4
   1a774:	andeq	r9, r3, sp, lsl #23
   1a778:	andeq	sl, r3, r9, asr #3
   1a77c:	andeq	sl, r3, fp, lsl r4
   1a780:	andeq	sl, r3, r9, asr #7
   1a784:	andeq	sl, r3, r2, ror #7
   1a788:	andeq	r0, r0, r5, lsr #9
   1a78c:	andeq	r2, r3, sp, lsl pc
   1a790:	andeq	sl, r3, lr, lsl #8
   1a794:	andeq	sl, r3, r9, lsl r4
   1a798:	andeq	sl, r3, lr, lsr #8
   1a79c:	andeq	sl, r3, r3, asr #8
   1a7a0:	andeq	r9, r3, lr, asr #26
   1a7a4:			; <UNDEFINED> instruction: 0x000004b9
   1a7a8:	andeq	sl, r3, r3, lsl r4
   1a7ac:	andeq	sl, r3, r9, ror #12
   1a7b0:	andeq	sl, r3, sp, lsr r6
   1a7b4:	andeq	r0, r0, r8, asr #12
   1a7b8:	andeq	r9, r3, r4, lsr #23
   1a7bc:	andeq	sl, r3, r9, lsl #13
   1a7c0:	andeq	sl, r3, ip, asr #13
   1a7c4:	andeq	sl, r3, ip, lsr #14
   1a7c8:	andeq	sl, r3, r1, ror #14
   1a7cc:	andeq	sl, r3, r2, ror #13
   1a7d0:	andeq	sl, r3, sl, lsl #14

0001a7d4 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1a7d4:	push	{r0, r1, r2, r4, r5, lr}
   1a7d8:	mov	r4, r0
   1a7dc:	add	r5, r0, #102	; 0x66
   1a7e0:	mov	r2, r5
   1a7e4:	ldr	r1, [pc, #1764]	; 1aed0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6fc>
   1a7e8:	ldr	r0, [r0, #204]	; 0xcc
   1a7ec:	bl	140e4 <fprintf@plt>
   1a7f0:	mov	r2, r5
   1a7f4:	ldr	r1, [pc, #1752]	; 1aed4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x700>
   1a7f8:	ldr	r0, [r4, #204]	; 0xcc
   1a7fc:	bl	140e4 <fprintf@plt>
   1a800:	ldr	r1, [r4, #204]	; 0xcc
   1a804:	ldr	r0, [pc, #1740]	; 1aed8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x704>
   1a808:	bl	14180 <fputs@plt>
   1a80c:	ldr	r1, [r4, #204]	; 0xcc
   1a810:	ldr	r0, [pc, #1732]	; 1aedc <__flatcc_fb_gen_common_c_builder_header@@Base+0x708>
   1a814:	bl	14180 <fputs@plt>
   1a818:	ldr	r3, [r4, #212]	; 0xd4
   1a81c:	ldr	r3, [r3, #140]	; 0x8c
   1a820:	cmp	r3, #0
   1a824:	beq	1a834 <__flatcc_fb_gen_common_c_builder_header@@Base+0x60>
   1a828:	ldr	r1, [r4, #204]	; 0xcc
   1a82c:	ldr	r0, [pc, #1708]	; 1aee0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   1a830:	bl	14180 <fputs@plt>
   1a834:	ldr	r1, [r4, #204]	; 0xcc
   1a838:	ldr	r0, [pc, #1700]	; 1aee4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x710>
   1a83c:	bl	14180 <fputs@plt>
   1a840:	ldr	r1, [r4, #204]	; 0xcc
   1a844:	ldr	r0, [pc, #1692]	; 1aee8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x714>
   1a848:	bl	14180 <fputs@plt>
   1a84c:	ldr	r1, [r4, #204]	; 0xcc
   1a850:	ldr	r0, [pc, #1684]	; 1aeec <__flatcc_fb_gen_common_c_builder_header@@Base+0x718>
   1a854:	bl	14180 <fputs@plt>
   1a858:	ldr	r1, [pc, #1680]	; 1aef0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x71c>
   1a85c:	mov	r0, r4
   1a860:	bl	14000 <strcmp@plt>
   1a864:	cmp	r0, #0
   1a868:	beq	1a8cc <__flatcc_fb_gen_common_c_builder_header@@Base+0xf8>
   1a86c:	mov	r2, r4
   1a870:	ldr	r1, [pc, #1660]	; 1aef4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x720>
   1a874:	ldr	r0, [r4, #204]	; 0xcc
   1a878:	bl	140e4 <fprintf@plt>
   1a87c:	mov	r2, r4
   1a880:	ldr	r1, [pc, #1648]	; 1aef8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x724>
   1a884:	ldr	r0, [r4, #204]	; 0xcc
   1a888:	bl	140e4 <fprintf@plt>
   1a88c:	mov	r2, r4
   1a890:	ldr	r1, [pc, #1636]	; 1aefc <__flatcc_fb_gen_common_c_builder_header@@Base+0x728>
   1a894:	ldr	r0, [r4, #204]	; 0xcc
   1a898:	bl	140e4 <fprintf@plt>
   1a89c:	mov	r2, r4
   1a8a0:	ldr	r1, [pc, #1624]	; 1af00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x72c>
   1a8a4:	ldr	r0, [r4, #204]	; 0xcc
   1a8a8:	bl	140e4 <fprintf@plt>
   1a8ac:	mov	r2, r4
   1a8b0:	ldr	r1, [pc, #1612]	; 1af04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1a8b4:	ldr	r0, [r4, #204]	; 0xcc
   1a8b8:	bl	140e4 <fprintf@plt>
   1a8bc:	mov	r2, r4
   1a8c0:	ldr	r1, [pc, #1600]	; 1af08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x734>
   1a8c4:	ldr	r0, [r4, #204]	; 0xcc
   1a8c8:	bl	140e4 <fprintf@plt>
   1a8cc:	mov	r3, r4
   1a8d0:	mov	r2, r4
   1a8d4:	ldr	r1, [pc, #1584]	; 1af0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x738>
   1a8d8:	ldr	r0, [r4, #204]	; 0xcc
   1a8dc:	bl	140e4 <fprintf@plt>
   1a8e0:	mov	r3, r4
   1a8e4:	mov	r2, r4
   1a8e8:	ldr	r1, [pc, #1568]	; 1af10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x73c>
   1a8ec:	ldr	r0, [r4, #204]	; 0xcc
   1a8f0:	bl	140e4 <fprintf@plt>
   1a8f4:	ldr	r1, [pc, #1560]	; 1af14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x740>
   1a8f8:	mov	r0, r4
   1a8fc:	bl	14000 <strcmp@plt>
   1a900:	cmp	r0, #0
   1a904:	beq	1a928 <__flatcc_fb_gen_common_c_builder_header@@Base+0x154>
   1a908:	mov	r2, r4
   1a90c:	ldr	r1, [pc, #1540]	; 1af18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x744>
   1a910:	ldr	r0, [r4, #204]	; 0xcc
   1a914:	bl	140e4 <fprintf@plt>
   1a918:	mov	r2, r4
   1a91c:	ldr	r1, [pc, #1528]	; 1af1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1a920:	ldr	r0, [r4, #204]	; 0xcc
   1a924:	bl	140e4 <fprintf@plt>
   1a928:	ldr	r1, [r4, #204]	; 0xcc
   1a92c:	mov	r0, #10
   1a930:	bl	14144 <fputc@plt>
   1a934:	mov	r2, r4
   1a938:	ldr	r1, [pc, #1504]	; 1af20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1a93c:	ldr	r0, [r4, #204]	; 0xcc
   1a940:	bl	140e4 <fprintf@plt>
   1a944:	mov	r2, r4
   1a948:	ldr	r1, [pc, #1492]	; 1af24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1a94c:	ldr	r0, [r4, #204]	; 0xcc
   1a950:	bl	140e4 <fprintf@plt>
   1a954:	mov	r3, r4
   1a958:	mov	r2, r4
   1a95c:	ldr	r1, [pc, #1476]	; 1af28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1a960:	str	r4, [sp]
   1a964:	ldr	r0, [r4, #204]	; 0xcc
   1a968:	bl	140e4 <fprintf@plt>
   1a96c:	mov	r2, r4
   1a970:	ldr	r1, [pc, #1460]	; 1af2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1a974:	ldr	r0, [r4, #204]	; 0xcc
   1a978:	bl	140e4 <fprintf@plt>
   1a97c:	mov	r2, r4
   1a980:	ldr	r1, [pc, #1448]	; 1af30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1a984:	ldr	r0, [r4, #204]	; 0xcc
   1a988:	bl	140e4 <fprintf@plt>
   1a98c:	mov	r2, r4
   1a990:	ldr	r1, [pc, #1436]	; 1af34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1a994:	ldr	r0, [r4, #204]	; 0xcc
   1a998:	bl	140e4 <fprintf@plt>
   1a99c:	mov	r2, r4
   1a9a0:	ldr	r1, [pc, #1424]	; 1af38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1a9a4:	ldr	r0, [r4, #204]	; 0xcc
   1a9a8:	bl	140e4 <fprintf@plt>
   1a9ac:	mov	r3, r4
   1a9b0:	mov	r2, r4
   1a9b4:	ldr	r1, [pc, #1408]	; 1af3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1a9b8:	ldr	r0, [r4, #204]	; 0xcc
   1a9bc:	bl	140e4 <fprintf@plt>
   1a9c0:	mov	r3, r4
   1a9c4:	mov	r2, r4
   1a9c8:	ldr	r1, [pc, #1392]	; 1af40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1a9cc:	str	r4, [sp]
   1a9d0:	ldr	r0, [r4, #204]	; 0xcc
   1a9d4:	bl	140e4 <fprintf@plt>
   1a9d8:	mov	r2, r4
   1a9dc:	ldr	r1, [pc, #1376]	; 1af44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1a9e0:	ldr	r0, [r4, #204]	; 0xcc
   1a9e4:	bl	140e4 <fprintf@plt>
   1a9e8:	mov	r2, r4
   1a9ec:	ldr	r1, [pc, #1364]	; 1af48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1a9f0:	ldr	r0, [r4, #204]	; 0xcc
   1a9f4:	bl	140e4 <fprintf@plt>
   1a9f8:	mov	r2, r4
   1a9fc:	ldr	r1, [pc, #1352]	; 1af4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1aa00:	ldr	r0, [r4, #204]	; 0xcc
   1aa04:	bl	140e4 <fprintf@plt>
   1aa08:	mov	r3, r4
   1aa0c:	mov	r2, r4
   1aa10:	ldr	r1, [pc, #1336]	; 1af50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1aa14:	ldr	r0, [r4, #204]	; 0xcc
   1aa18:	bl	140e4 <fprintf@plt>
   1aa1c:	mov	r2, r4
   1aa20:	ldr	r1, [pc, #1324]	; 1af54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1aa24:	ldr	r0, [r4, #204]	; 0xcc
   1aa28:	bl	140e4 <fprintf@plt>
   1aa2c:	mov	r3, r4
   1aa30:	mov	r2, r4
   1aa34:	ldr	r1, [pc, #1308]	; 1af58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1aa38:	str	r4, [sp]
   1aa3c:	ldr	r0, [r4, #204]	; 0xcc
   1aa40:	bl	140e4 <fprintf@plt>
   1aa44:	mov	r3, r4
   1aa48:	mov	r2, r4
   1aa4c:	ldr	r1, [pc, #1288]	; 1af5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1aa50:	str	r4, [sp, #4]
   1aa54:	str	r4, [sp]
   1aa58:	ldr	r0, [r4, #204]	; 0xcc
   1aa5c:	bl	140e4 <fprintf@plt>
   1aa60:	mov	r3, r4
   1aa64:	mov	r2, r4
   1aa68:	ldr	r1, [pc, #1264]	; 1af60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1aa6c:	ldr	r0, [r4, #204]	; 0xcc
   1aa70:	bl	140e4 <fprintf@plt>
   1aa74:	mov	r3, r4
   1aa78:	mov	r2, r4
   1aa7c:	ldr	r1, [pc, #1248]	; 1af64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1aa80:	str	r4, [sp, #4]
   1aa84:	str	r4, [sp]
   1aa88:	ldr	r0, [r4, #204]	; 0xcc
   1aa8c:	bl	140e4 <fprintf@plt>
   1aa90:	mov	r3, r4
   1aa94:	mov	r2, r4
   1aa98:	ldr	r1, [pc, #1224]	; 1af68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1aa9c:	ldr	r0, [r4, #204]	; 0xcc
   1aaa0:	bl	140e4 <fprintf@plt>
   1aaa4:	mov	r2, r4
   1aaa8:	ldr	r1, [pc, #1212]	; 1af6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1aaac:	ldr	r0, [r4, #204]	; 0xcc
   1aab0:	bl	140e4 <fprintf@plt>
   1aab4:	mov	r2, r4
   1aab8:	ldr	r1, [pc, #1200]	; 1af70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1aabc:	ldr	r0, [r4, #204]	; 0xcc
   1aac0:	bl	140e4 <fprintf@plt>
   1aac4:	mov	r2, r4
   1aac8:	ldr	r1, [pc, #1188]	; 1af74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1aacc:	ldr	r0, [r4, #204]	; 0xcc
   1aad0:	bl	140e4 <fprintf@plt>
   1aad4:	mov	r2, r4
   1aad8:	ldr	r1, [pc, #1176]	; 1af78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1aadc:	ldr	r0, [r4, #204]	; 0xcc
   1aae0:	bl	140e4 <fprintf@plt>
   1aae4:	mov	r3, r4
   1aae8:	mov	r2, r4
   1aaec:	ldr	r1, [pc, #1160]	; 1af7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1aaf0:	ldr	r0, [r4, #204]	; 0xcc
   1aaf4:	bl	140e4 <fprintf@plt>
   1aaf8:	mov	r2, r4
   1aafc:	ldr	r1, [pc, #1148]	; 1af80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1ab00:	ldr	r0, [r4, #204]	; 0xcc
   1ab04:	bl	140e4 <fprintf@plt>
   1ab08:	mov	r2, r4
   1ab0c:	ldr	r1, [pc, #1136]	; 1af84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1ab10:	ldr	r0, [r4, #204]	; 0xcc
   1ab14:	bl	140e4 <fprintf@plt>
   1ab18:	mov	r3, r4
   1ab1c:	mov	r2, r4
   1ab20:	ldr	r1, [pc, #1120]	; 1af88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1ab24:	ldr	r0, [r4, #204]	; 0xcc
   1ab28:	bl	140e4 <fprintf@plt>
   1ab2c:	mov	r3, r4
   1ab30:	mov	r2, r4
   1ab34:	ldr	r1, [pc, #1104]	; 1af8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1ab38:	ldr	r0, [r4, #204]	; 0xcc
   1ab3c:	bl	140e4 <fprintf@plt>
   1ab40:	mov	r3, r4
   1ab44:	mov	r2, r4
   1ab48:	ldr	r1, [pc, #1088]	; 1af90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1ab4c:	ldr	r0, [r4, #204]	; 0xcc
   1ab50:	bl	140e4 <fprintf@plt>
   1ab54:	mov	r3, r4
   1ab58:	mov	r2, r4
   1ab5c:	ldr	r1, [pc, #1072]	; 1af94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1ab60:	ldr	r0, [r4, #204]	; 0xcc
   1ab64:	bl	140e4 <fprintf@plt>
   1ab68:	mov	r3, r4
   1ab6c:	mov	r2, r4
   1ab70:	ldr	r1, [pc, #1056]	; 1af98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1ab74:	str	r4, [sp]
   1ab78:	ldr	r0, [r4, #204]	; 0xcc
   1ab7c:	bl	140e4 <fprintf@plt>
   1ab80:	mov	r3, r4
   1ab84:	mov	r2, r4
   1ab88:	ldr	r1, [pc, #1036]	; 1af9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1ab8c:	ldr	r0, [r4, #204]	; 0xcc
   1ab90:	bl	140e4 <fprintf@plt>
   1ab94:	mov	r2, r4
   1ab98:	ldr	r1, [pc, #1024]	; 1afa0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1ab9c:	ldr	r0, [r4, #204]	; 0xcc
   1aba0:	bl	140e4 <fprintf@plt>
   1aba4:	mov	r2, r4
   1aba8:	ldr	r1, [pc, #1012]	; 1afa4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1abac:	ldr	r0, [r4, #204]	; 0xcc
   1abb0:	bl	140e4 <fprintf@plt>
   1abb4:	mov	r2, r4
   1abb8:	ldr	r1, [pc, #1000]	; 1afa8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1abbc:	ldr	r0, [r4, #204]	; 0xcc
   1abc0:	bl	140e4 <fprintf@plt>
   1abc4:	mov	r3, r4
   1abc8:	mov	r2, r4
   1abcc:	ldr	r1, [pc, #984]	; 1afac <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1abd0:	str	r4, [sp]
   1abd4:	ldr	r0, [r4, #204]	; 0xcc
   1abd8:	bl	140e4 <fprintf@plt>
   1abdc:	mov	r2, r4
   1abe0:	ldr	r1, [pc, #968]	; 1afb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1abe4:	ldr	r0, [r4, #204]	; 0xcc
   1abe8:	bl	140e4 <fprintf@plt>
   1abec:	mov	r2, r4
   1abf0:	ldr	r1, [pc, #956]	; 1afb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1abf4:	ldr	r0, [r4, #204]	; 0xcc
   1abf8:	bl	140e4 <fprintf@plt>
   1abfc:	mov	r2, r4
   1ac00:	ldr	r1, [pc, #944]	; 1afb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1ac04:	ldr	r0, [r4, #204]	; 0xcc
   1ac08:	bl	140e4 <fprintf@plt>
   1ac0c:	mov	r2, r4
   1ac10:	ldr	r1, [pc, #932]	; 1afbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1ac14:	ldr	r0, [r4, #204]	; 0xcc
   1ac18:	bl	140e4 <fprintf@plt>
   1ac1c:	mov	r3, r4
   1ac20:	mov	r2, r4
   1ac24:	ldr	r1, [pc, #916]	; 1afc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1ac28:	ldr	r0, [r4, #204]	; 0xcc
   1ac2c:	bl	140e4 <fprintf@plt>
   1ac30:	mov	r2, r4
   1ac34:	ldr	r1, [pc, #904]	; 1afc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1ac38:	ldr	r0, [r4, #204]	; 0xcc
   1ac3c:	bl	140e4 <fprintf@plt>
   1ac40:	mov	r2, r4
   1ac44:	ldr	r1, [pc, #892]	; 1afc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1ac48:	ldr	r0, [r4, #204]	; 0xcc
   1ac4c:	bl	140e4 <fprintf@plt>
   1ac50:	mov	r2, r4
   1ac54:	ldr	r1, [pc, #880]	; 1afcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1ac58:	ldr	r0, [r4, #204]	; 0xcc
   1ac5c:	bl	140e4 <fprintf@plt>
   1ac60:	mov	r2, r4
   1ac64:	ldr	r1, [pc, #868]	; 1afd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1ac68:	ldr	r0, [r4, #204]	; 0xcc
   1ac6c:	bl	140e4 <fprintf@plt>
   1ac70:	mov	r2, r4
   1ac74:	ldr	r1, [pc, #856]	; 1afd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1ac78:	ldr	r0, [r4, #204]	; 0xcc
   1ac7c:	bl	140e4 <fprintf@plt>
   1ac80:	mov	r2, r4
   1ac84:	ldr	r1, [pc, #844]	; 1afd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1ac88:	ldr	r0, [r4, #204]	; 0xcc
   1ac8c:	bl	140e4 <fprintf@plt>
   1ac90:	mov	r2, r4
   1ac94:	ldr	r1, [pc, #832]	; 1afdc <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1ac98:	ldr	r0, [r4, #204]	; 0xcc
   1ac9c:	bl	140e4 <fprintf@plt>
   1aca0:	mov	r2, r4
   1aca4:	ldr	r1, [pc, #820]	; 1afe0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1aca8:	ldr	r0, [r4, #204]	; 0xcc
   1acac:	bl	140e4 <fprintf@plt>
   1acb0:	mov	r2, r4
   1acb4:	ldr	r1, [pc, #808]	; 1afe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1acb8:	ldr	r0, [r4, #204]	; 0xcc
   1acbc:	bl	140e4 <fprintf@plt>
   1acc0:	mov	r2, r4
   1acc4:	ldr	r1, [pc, #796]	; 1afe8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1acc8:	ldr	r0, [r4, #204]	; 0xcc
   1accc:	bl	140e4 <fprintf@plt>
   1acd0:	mov	r2, r4
   1acd4:	ldr	r1, [pc, #784]	; 1afec <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1acd8:	ldr	r0, [r4, #204]	; 0xcc
   1acdc:	bl	140e4 <fprintf@plt>
   1ace0:	mov	r2, r4
   1ace4:	ldr	r1, [pc, #772]	; 1aff0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1ace8:	ldr	r0, [r4, #204]	; 0xcc
   1acec:	bl	140e4 <fprintf@plt>
   1acf0:	mov	r2, r4
   1acf4:	ldr	r1, [pc, #760]	; 1aff4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1acf8:	ldr	r0, [r4, #204]	; 0xcc
   1acfc:	bl	140e4 <fprintf@plt>
   1ad00:	mov	r2, r4
   1ad04:	ldr	r1, [pc, #748]	; 1aff8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1ad08:	ldr	r0, [r4, #204]	; 0xcc
   1ad0c:	bl	140e4 <fprintf@plt>
   1ad10:	mov	r2, r4
   1ad14:	ldr	r1, [pc, #736]	; 1affc <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1ad18:	ldr	r0, [r4, #204]	; 0xcc
   1ad1c:	bl	140e4 <fprintf@plt>
   1ad20:	mov	r2, r4
   1ad24:	ldr	r1, [pc, #724]	; 1b000 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1ad28:	ldr	r0, [r4, #204]	; 0xcc
   1ad2c:	bl	140e4 <fprintf@plt>
   1ad30:	mov	r2, r4
   1ad34:	ldr	r1, [pc, #712]	; 1b004 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1ad38:	ldr	r0, [r4, #204]	; 0xcc
   1ad3c:	bl	140e4 <fprintf@plt>
   1ad40:	ldr	r1, [r4, #204]	; 0xcc
   1ad44:	mov	r0, #10
   1ad48:	bl	14144 <fputc@plt>
   1ad4c:	mov	r3, r4
   1ad50:	mov	r2, r4
   1ad54:	ldr	r1, [pc, #684]	; 1b008 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1ad58:	str	r4, [sp]
   1ad5c:	ldr	r0, [r4, #204]	; 0xcc
   1ad60:	bl	140e4 <fprintf@plt>
   1ad64:	mov	r3, r4
   1ad68:	mov	r2, r4
   1ad6c:	ldr	r1, [pc, #664]	; 1b00c <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1ad70:	str	r4, [sp]
   1ad74:	ldr	r0, [r4, #204]	; 0xcc
   1ad78:	bl	140e4 <fprintf@plt>
   1ad7c:	mov	r3, r4
   1ad80:	mov	r2, r4
   1ad84:	ldr	r1, [pc, #644]	; 1b010 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1ad88:	str	r4, [sp, #4]
   1ad8c:	str	r4, [sp]
   1ad90:	ldr	r0, [r4, #204]	; 0xcc
   1ad94:	bl	140e4 <fprintf@plt>
   1ad98:	mov	r3, r4
   1ad9c:	mov	r2, r4
   1ada0:	ldr	r1, [pc, #620]	; 1b014 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1ada4:	str	r4, [sp]
   1ada8:	ldr	r0, [r4, #204]	; 0xcc
   1adac:	bl	140e4 <fprintf@plt>
   1adb0:	mov	r3, r4
   1adb4:	mov	r2, r4
   1adb8:	ldr	r1, [pc, #600]	; 1b018 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1adbc:	str	r4, [sp]
   1adc0:	ldr	r0, [r4, #204]	; 0xcc
   1adc4:	bl	140e4 <fprintf@plt>
   1adc8:	mov	r3, r4
   1adcc:	mov	r2, r4
   1add0:	ldr	r1, [pc, #580]	; 1b01c <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1add4:	str	r4, [sp]
   1add8:	ldr	r0, [r4, #204]	; 0xcc
   1addc:	bl	140e4 <fprintf@plt>
   1ade0:	mov	r3, r4
   1ade4:	mov	r2, r4
   1ade8:	ldr	r1, [pc, #560]	; 1b020 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1adec:	str	r4, [sp]
   1adf0:	ldr	r0, [r4, #204]	; 0xcc
   1adf4:	bl	140e4 <fprintf@plt>
   1adf8:	mov	r3, r4
   1adfc:	mov	r2, r4
   1ae00:	ldr	r1, [pc, #540]	; 1b024 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1ae04:	str	r4, [sp]
   1ae08:	ldr	r0, [r4, #204]	; 0xcc
   1ae0c:	bl	140e4 <fprintf@plt>
   1ae10:	mov	r3, r4
   1ae14:	mov	r2, r4
   1ae18:	ldr	r1, [pc, #520]	; 1b028 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1ae1c:	str	r4, [sp]
   1ae20:	ldr	r0, [r4, #204]	; 0xcc
   1ae24:	bl	140e4 <fprintf@plt>
   1ae28:	mov	r3, r4
   1ae2c:	mov	r2, r4
   1ae30:	ldr	r1, [pc, #500]	; 1b02c <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1ae34:	str	r4, [sp]
   1ae38:	ldr	r0, [r4, #204]	; 0xcc
   1ae3c:	bl	140e4 <fprintf@plt>
   1ae40:	mov	r3, r4
   1ae44:	mov	r2, r4
   1ae48:	ldr	r1, [pc, #480]	; 1b030 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1ae4c:	str	r4, [sp]
   1ae50:	ldr	r0, [r4, #204]	; 0xcc
   1ae54:	bl	140e4 <fprintf@plt>
   1ae58:	ldr	r1, [r4, #204]	; 0xcc
   1ae5c:	mov	r0, #10
   1ae60:	bl	14144 <fputc@plt>
   1ae64:	mov	r3, r4
   1ae68:	mov	r2, r4
   1ae6c:	ldr	r1, [pc, #448]	; 1b034 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1ae70:	ldr	r0, [r4, #204]	; 0xcc
   1ae74:	bl	140e4 <fprintf@plt>
   1ae78:	ldr	r1, [r4, #204]	; 0xcc
   1ae7c:	mov	r0, #10
   1ae80:	bl	14144 <fputc@plt>
   1ae84:	mov	r3, r4
   1ae88:	mov	r2, r4
   1ae8c:	ldr	r1, [pc, #420]	; 1b038 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1ae90:	ldr	r0, [r4, #204]	; 0xcc
   1ae94:	bl	140e4 <fprintf@plt>
   1ae98:	ldr	r3, [r4, #212]	; 0xd4
   1ae9c:	ldr	r3, [r3, #140]	; 0x8c
   1aea0:	cmp	r3, #0
   1aea4:	beq	1aeb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6e0>
   1aea8:	ldr	r1, [r4, #204]	; 0xcc
   1aeac:	ldr	r0, [pc, #392]	; 1b03c <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1aeb0:	bl	14180 <fputs@plt>
   1aeb4:	mov	r2, r5
   1aeb8:	ldr	r1, [pc, #384]	; 1b040 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1aebc:	ldr	r0, [r4, #204]	; 0xcc
   1aec0:	bl	140e4 <fprintf@plt>
   1aec4:	mov	r0, #0
   1aec8:	add	sp, sp, #12
   1aecc:	pop	{r4, r5, pc}
   1aed0:	ldrdeq	sl, [r3], -r0
   1aed4:	andeq	sl, r3, sp, ror #15
   1aed8:	andeq	r2, r3, r0, asr #27
   1aedc:	andeq	sl, r3, sl, lsl #16
   1aee0:	andeq	r2, r3, pc, asr #29
   1aee4:	andeq	sl, r3, r0, asr #16
   1aee8:	andeq	sl, r3, r7, asr r8
   1aeec:	andeq	r8, r3, r5, lsl pc
   1aef0:	andeq	sl, r3, fp, ror r8
   1aef4:	andeq	sl, r3, fp, lsl #17
   1aef8:			; <UNDEFINED> instruction: 0x0003a8b2
   1aefc:	ldrdeq	sl, [r3], -r9
   1af00:	andeq	sl, r3, r4, lsl #18
   1af04:	andeq	sl, r3, r7, lsr r9
   1af08:	andeq	sl, r3, r2, ror r9
   1af0c:	andeq	sl, r3, sl, asr #19
   1af10:	andeq	sl, r3, r5, ror #19
   1af14:	andeq	r2, r3, lr, lsl pc
   1af18:	andeq	sl, r3, ip, lsl #20
   1af1c:	andeq	sl, r3, sp, lsr sl
   1af20:	andeq	sl, r3, r1, ror #20
   1af24:	ldrdeq	sl, [r3], -r4
   1af28:	muleq	r3, sp, r4
   1af2c:	andeq	fp, r3, r6, lsr #10
   1af30:	andeq	fp, r3, r1, ror #31
   1af34:			; <UNDEFINED> instruction: 0x0003c3bc
   1af38:	strdeq	ip, [r3], -r2
   1af3c:	andeq	ip, r3, lr, ror #28
   1af40:	andeq	sp, r3, r1, ror #11
   1af44:	andeq	sp, r3, r9, lsr #22
   1af48:	andeq	sp, r3, r7, lsr #31
   1af4c:	andeq	lr, r3, r5, lsr r1
   1af50:	andeq	lr, r3, pc, lsl #9
   1af54:	muleq	r3, r4, r6
   1af58:	strdeq	lr, [r3], -sp
   1af5c:	strdeq	lr, [r3], -r9
   1af60:	andeq	pc, r3, r2
   1af64:	andeq	pc, r3, sl, ror #6
   1af68:	andeq	pc, r3, r8, ror #18
   1af6c:	andeq	pc, r3, fp, lsl fp	; <UNPREDICTABLE>
   1af70:	andeq	pc, r3, r0, asr #26
   1af74:	andeq	r0, r4, r0, lsl #2
   1af78:			; <UNDEFINED> instruction: 0x000403bd
   1af7c:	ldrdeq	r0, [r4], -r1
   1af80:			; <UNDEFINED> instruction: 0x000408bd
   1af84:	andeq	r0, r4, lr, lsl fp
   1af88:	muleq	r4, r5, lr
   1af8c:	andeq	r1, r4, r4, ror #5
   1af90:	andeq	r1, r4, ip, ror r5
   1af94:	andeq	r1, r4, r8, ror r9
   1af98:	andeq	r1, r4, r4, lsl #21
   1af9c:	andeq	r1, r4, pc, lsl #22
   1afa0:	andeq	r1, r4, fp, asr lr
   1afa4:	andeq	r2, r4, r3, ror #1
   1afa8:	andeq	r2, r4, r1, ror r3
   1afac:	andeq	r2, r4, r7, lsr #18
   1afb0:			; <UNDEFINED> instruction: 0x000429b6
   1afb4:	andeq	r2, r4, r2, ror #19
   1afb8:	andeq	r2, r4, r4, lsl #20
   1afbc:	andeq	r2, r4, lr, lsr #20
   1afc0:	andeq	r2, r4, pc, asr #20
   1afc4:	andeq	r2, r4, fp, ror sl
   1afc8:	muleq	r4, ip, sl
   1afcc:	andeq	r2, r4, sl, asr #21
   1afd0:	andeq	r2, r4, sp, ror #21
   1afd4:	andeq	r2, r4, fp, lsl fp
   1afd8:	andeq	r2, r4, lr, lsr fp
   1afdc:	andeq	r2, r4, ip, ror #22
   1afe0:	andeq	r2, r4, pc, lsl #23
   1afe4:			; <UNDEFINED> instruction: 0x00042bbb
   1afe8:	ldrdeq	r2, [r4], -sp
   1afec:	andeq	r2, r4, r9, lsl #24
   1aff0:	andeq	r2, r4, fp, lsr #24
   1aff4:	andeq	r2, r4, r7, asr ip
   1aff8:	andeq	r2, r4, r9, ror ip
   1affc:	andeq	r2, r4, r3, lsr #25
   1b000:	andeq	r2, r4, r5, asr #25
   1b004:	strdeq	r2, [r4], -r1
   1b008:	andeq	r2, r4, r4, lsl sp
   1b00c:	andeq	r2, r4, ip, lsr sp
   1b010:	andeq	r2, r4, r2, ror #26
   1b014:	andeq	r2, r4, sl, lsl #27
   1b018:			; <UNDEFINED> instruction: 0x00042db4
   1b01c:	ldrdeq	r2, [r4], -lr
   1b020:	andeq	r2, r4, r8, lsl #28
   1b024:	andeq	r2, r4, r0, lsr lr
   1b028:	andeq	r2, r4, r8, asr lr
   1b02c:	andeq	r2, r4, r0, lsl #29
   1b030:	andeq	r2, r4, r6, lsr #29
   1b034:	andeq	r2, r4, lr, asr #29
   1b038:	andeq	r2, r4, r4, ror #29
   1b03c:			; <UNDEFINED> instruction: 0x00038cb9
   1b040:	strdeq	r2, [r4], -sl

0001b044 <__flatcc_fb_gen_c_builder@@Base>:
   1b044:	ldr	r3, [r0, #208]	; 0xd0
   1b048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b04c:	mov	r4, r0
   1b050:	ldr	r3, [r3, #164]	; 0xa4
   1b054:	sub	sp, sp, #268	; 0x10c
   1b058:	mov	r2, r3
   1b05c:	ldr	r1, [pc, #1400]	; 1b5dc <__flatcc_fb_gen_c_builder@@Base+0x598>
   1b060:	ldr	r0, [r0, #204]	; 0xcc
   1b064:	bl	140e4 <fprintf@plt>
   1b068:	ldr	r1, [r4, #204]	; 0xcc
   1b06c:	ldr	r0, [pc, #1388]	; 1b5e0 <__flatcc_fb_gen_c_builder@@Base+0x59c>
   1b070:	bl	14180 <fputs@plt>
   1b074:	ldr	r3, [r4, #208]	; 0xd0
   1b078:	ldr	r1, [pc, #1380]	; 1b5e4 <__flatcc_fb_gen_c_builder@@Base+0x5a0>
   1b07c:	ldr	r0, [r4, #204]	; 0xcc
   1b080:	ldr	r2, [r3, #164]	; 0xa4
   1b084:	bl	140e4 <fprintf@plt>
   1b088:	ldr	r3, [r4, #208]	; 0xd0
   1b08c:	ldr	r1, [pc, #1364]	; 1b5e8 <__flatcc_fb_gen_c_builder@@Base+0x5a4>
   1b090:	ldr	r0, [r4, #204]	; 0xcc
   1b094:	ldr	r2, [r3, #160]	; 0xa0
   1b098:	bl	140e4 <fprintf@plt>
   1b09c:	ldr	r1, [r4, #204]	; 0xcc
   1b0a0:	ldr	r0, [pc, #1348]	; 1b5ec <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1b0a4:	bl	14180 <fputs@plt>
   1b0a8:	add	r2, r4, #102	; 0x66
   1b0ac:	ldr	r1, [pc, #1340]	; 1b5f0 <__flatcc_fb_gen_c_builder@@Base+0x5ac>
   1b0b0:	ldr	r0, [r4, #204]	; 0xcc
   1b0b4:	bl	140e4 <fprintf@plt>
   1b0b8:	mov	r2, r4
   1b0bc:	ldr	r1, [pc, #1328]	; 1b5f4 <__flatcc_fb_gen_c_builder@@Base+0x5b0>
   1b0c0:	ldr	r0, [r4, #204]	; 0xcc
   1b0c4:	bl	140e4 <fprintf@plt>
   1b0c8:	ldr	r1, [r4, #204]	; 0xcc
   1b0cc:	ldr	r0, [pc, #1304]	; 1b5ec <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1b0d0:	bl	14180 <fputs@plt>
   1b0d4:	ldr	r2, [pc, #1308]	; 1b5f8 <__flatcc_fb_gen_c_builder@@Base+0x5b4>
   1b0d8:	ldr	r1, [pc, #1308]	; 1b5fc <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1b0dc:	mov	r0, r4
   1b0e0:	bl	15954 <__flatcc_fb_gen_c_includes@@Base>
   1b0e4:	ldr	r3, [r4, #212]	; 0xd4
   1b0e8:	ldr	r3, [r3, #140]	; 0x8c
   1b0ec:	cmp	r3, #0
   1b0f0:	beq	1b100 <__flatcc_fb_gen_c_builder@@Base+0xbc>
   1b0f4:	ldr	r1, [r4, #204]	; 0xcc
   1b0f8:	ldr	r0, [pc, #1280]	; 1b600 <__flatcc_fb_gen_c_builder@@Base+0x5bc>
   1b0fc:	bl	14180 <fputs@plt>
   1b100:	ldr	r3, [r4, #208]	; 0xd0
   1b104:	ldrh	r2, [r3, #16]
   1b108:	cmp	r2, #2
   1b10c:	bne	1b218 <__flatcc_fb_gen_c_builder@@Base+0x1d4>
   1b110:	ldr	r2, [r3, #8]
   1b114:	ldr	r1, [pc, #1256]	; 1b604 <__flatcc_fb_gen_c_builder@@Base+0x5c0>
   1b118:	str	r2, [sp, #4]
   1b11c:	ldr	r3, [r3, #12]
   1b120:	mov	r2, r4
   1b124:	str	r3, [sp]
   1b128:	ldr	r0, [r4, #204]	; 0xcc
   1b12c:	mov	r3, r4
   1b130:	bl	140e4 <fprintf@plt>
   1b134:	ldr	r3, [r4, #208]	; 0xd0
   1b138:	ldrh	r2, [r3, #32]
   1b13c:	cmp	r2, #2
   1b140:	bne	1b230 <__flatcc_fb_gen_c_builder@@Base+0x1ec>
   1b144:	ldr	r2, [r3, #24]
   1b148:	ldr	r1, [pc, #1208]	; 1b608 <__flatcc_fb_gen_c_builder@@Base+0x5c4>
   1b14c:	str	r2, [sp, #4]
   1b150:	ldr	r3, [r3, #28]
   1b154:	mov	r2, r4
   1b158:	str	r3, [sp]
   1b15c:	ldr	r0, [r4, #204]	; 0xcc
   1b160:	mov	r3, r4
   1b164:	bl	140e4 <fprintf@plt>
   1b168:	ldr	r1, [r4, #204]	; 0xcc
   1b16c:	mov	r0, #10
   1b170:	add	r5, sp, #44	; 0x2c
   1b174:	bl	14144 <fputc@plt>
   1b178:	mov	r2, #220	; 0xdc
   1b17c:	mov	r1, #0
   1b180:	mov	r0, r5
   1b184:	bl	140fc <memset@plt>
   1b188:	ldr	r3, [r4, #208]	; 0xd0
   1b18c:	ldr	r7, [pc, #1144]	; 1b60c <__flatcc_fb_gen_c_builder@@Base+0x5c8>
   1b190:	ldr	r8, [pc, #1144]	; 1b610 <__flatcc_fb_gen_c_builder@@Base+0x5cc>
   1b194:	ldr	r6, [r3, #40]	; 0x28
   1b198:	mov	r9, #1
   1b19c:	mov	r3, #0
   1b1a0:	cmp	r6, #0
   1b1a4:	bne	1b254 <__flatcc_fb_gen_c_builder@@Base+0x210>
   1b1a8:	cmp	r3, #0
   1b1ac:	beq	1b1bc <__flatcc_fb_gen_c_builder@@Base+0x178>
   1b1b0:	ldr	r1, [r4, #204]	; 0xcc
   1b1b4:	mov	r0, #10
   1b1b8:	bl	14144 <fputc@plt>
   1b1bc:	ldr	r3, [r4, #208]	; 0xd0
   1b1c0:	ldr	r8, [r3, #44]	; 0x2c
   1b1c4:	add	r3, r4, #204	; 0xcc
   1b1c8:	str	r3, [sp, #32]
   1b1cc:	cmp	r8, #0
   1b1d0:	bne	1b2ac <__flatcc_fb_gen_c_builder@@Base+0x268>
   1b1d4:	mov	r0, r4
   1b1d8:	bl	19e60 <__flatcc_gen_sort@@Base+0x1444>
   1b1dc:	ldr	r3, [r4, #212]	; 0xd4
   1b1e0:	ldr	r3, [r3, #140]	; 0x8c
   1b1e4:	cmp	r3, #0
   1b1e8:	beq	1b1f8 <__flatcc_fb_gen_c_builder@@Base+0x1b4>
   1b1ec:	ldr	r1, [r4, #204]	; 0xcc
   1b1f0:	ldr	r0, [pc, #1052]	; 1b614 <__flatcc_fb_gen_c_builder@@Base+0x5d0>
   1b1f4:	bl	14180 <fputs@plt>
   1b1f8:	ldr	r3, [r4, #208]	; 0xd0
   1b1fc:	ldr	r1, [pc, #1044]	; 1b618 <__flatcc_fb_gen_c_builder@@Base+0x5d4>
   1b200:	ldr	r0, [r4, #204]	; 0xcc
   1b204:	ldr	r2, [r3, #164]	; 0xa4
   1b208:	bl	140e4 <fprintf@plt>
   1b20c:	mov	r0, #0
   1b210:	add	sp, sp, #268	; 0x10c
   1b214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b218:	mov	r3, r4
   1b21c:	mov	r2, r4
   1b220:	ldr	r1, [pc, #1012]	; 1b61c <__flatcc_fb_gen_c_builder@@Base+0x5d8>
   1b224:	ldr	r0, [r4, #204]	; 0xcc
   1b228:	bl	140e4 <fprintf@plt>
   1b22c:	b	1b134 <__flatcc_fb_gen_c_builder@@Base+0xf0>
   1b230:	ldr	r3, [r4, #212]	; 0xd4
   1b234:	mov	r2, r4
   1b238:	ldr	r1, [pc, #992]	; 1b620 <__flatcc_fb_gen_c_builder@@Base+0x5dc>
   1b23c:	ldr	r3, [r3, #104]	; 0x68
   1b240:	ldr	r0, [r4, #204]	; 0xcc
   1b244:	str	r3, [sp]
   1b248:	mov	r3, r4
   1b24c:	bl	140e4 <fprintf@plt>
   1b250:	b	1b168 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1b254:	ldrh	r2, [r6, #8]
   1b258:	cmp	r2, #3
   1b25c:	bne	1b2a4 <__flatcc_fb_gen_c_builder@@Base+0x260>
   1b260:	mov	r1, r5
   1b264:	mov	r0, r6
   1b268:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1b26c:	mov	r3, r5
   1b270:	mov	r2, r5
   1b274:	mov	r1, r7
   1b278:	str	r5, [sp]
   1b27c:	ldr	r0, [r4, #204]	; 0xcc
   1b280:	bl	140e4 <fprintf@plt>
   1b284:	mov	r3, r4
   1b288:	str	r5, [sp, #4]
   1b28c:	str	r5, [sp]
   1b290:	mov	r2, r4
   1b294:	mov	r1, r8
   1b298:	ldr	r0, [r4, #204]	; 0xcc
   1b29c:	bl	140e4 <fprintf@plt>
   1b2a0:	mov	r3, r9
   1b2a4:	ldr	r6, [r6]
   1b2a8:	b	1b1a0 <__flatcc_fb_gen_c_builder@@Base+0x15c>
   1b2ac:	mov	r2, #220	; 0xdc
   1b2b0:	mov	r1, #0
   1b2b4:	mov	r0, r5
   1b2b8:	bl	140fc <memset@plt>
   1b2bc:	ldrh	sl, [r8, #8]
   1b2c0:	cmp	sl, #1
   1b2c4:	beq	1b2dc <__flatcc_fb_gen_c_builder@@Base+0x298>
   1b2c8:	ldr	r3, [pc, #852]	; 1b624 <__flatcc_fb_gen_c_builder@@Base+0x5e0>
   1b2cc:	ldr	r2, [pc, #852]	; 1b628 <__flatcc_fb_gen_c_builder@@Base+0x5e4>
   1b2d0:	ldr	r1, [pc, #852]	; 1b62c <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1b2d4:	ldr	r0, [pc, #852]	; 1b630 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1b2d8:	bl	141a4 <__assert_fail@plt>
   1b2dc:	mov	r6, r8
   1b2e0:	mov	r1, r5
   1b2e4:	mov	r0, r8
   1b2e8:	bl	18b48 <__flatcc_gen_sort@@Base+0x12c>
   1b2ec:	ldr	r0, [r6, #20]!
   1b2f0:	bl	18d44 <__flatcc_gen_sort@@Base+0x328>
   1b2f4:	mov	r2, r5
   1b2f8:	ldr	r1, [pc, #820]	; 1b634 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1b2fc:	mov	r9, #0
   1b300:	mov	r7, r0
   1b304:	ldr	r0, [r4, #204]	; 0xcc
   1b308:	bl	140e4 <fprintf@plt>
   1b30c:	mov	r3, r7
   1b310:	mov	r2, #0
   1b314:	mov	r1, r6
   1b318:	str	sl, [sp]
   1b31c:	mov	r0, r4
   1b320:	bl	18f30 <__flatcc_gen_sort@@Base+0x514>
   1b324:	mov	r2, r5
   1b328:	ldr	r1, [pc, #776]	; 1b638 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1b32c:	ldr	r0, [r4, #204]	; 0xcc
   1b330:	bl	140e4 <fprintf@plt>
   1b334:	ldr	r0, [r8, #20]
   1b338:	bl	18d44 <__flatcc_gen_sort@@Base+0x328>
   1b33c:	mov	fp, r0
   1b340:	cmp	fp, r9
   1b344:	bgt	1b5a4 <__flatcc_fb_gen_c_builder@@Base+0x560>
   1b348:	ldr	r1, [r4, #204]	; 0xcc
   1b34c:	mov	r0, #10
   1b350:	mov	r9, #0
   1b354:	bl	14144 <fputc@plt>
   1b358:	mov	r3, r5
   1b35c:	mov	r2, r5
   1b360:	ldr	r1, [pc, #724]	; 1b63c <__flatcc_fb_gen_c_builder@@Base+0x5f8>
   1b364:	str	r5, [sp]
   1b368:	ldr	r0, [r4, #204]	; 0xcc
   1b36c:	bl	140e4 <fprintf@plt>
   1b370:	mov	r3, r7
   1b374:	mov	r2, r9
   1b378:	mov	r1, r6
   1b37c:	str	r9, [sp]
   1b380:	mov	r0, r4
   1b384:	bl	18f30 <__flatcc_gen_sort@@Base+0x514>
   1b388:	ldr	r1, [r4, #204]	; 0xcc
   1b38c:	ldr	r0, [pc, #684]	; 1b640 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1b390:	bl	14180 <fputs@plt>
   1b394:	mov	r3, r9
   1b398:	mov	r2, r7
   1b39c:	mov	r1, r6
   1b3a0:	str	r9, [sp]
   1b3a4:	mov	r0, r4
   1b3a8:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b3ac:	ldr	r1, [r4, #204]	; 0xcc
   1b3b0:	ldr	r0, [pc, #652]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b3b4:	bl	14180 <fputs@plt>
   1b3b8:	mov	r3, r5
   1b3bc:	mov	r2, r5
   1b3c0:	ldr	r1, [pc, #640]	; 1b648 <__flatcc_fb_gen_c_builder@@Base+0x604>
   1b3c4:	str	r5, [sp, #4]
   1b3c8:	str	r5, [sp]
   1b3cc:	ldr	r0, [r4, #204]	; 0xcc
   1b3d0:	bl	140e4 <fprintf@plt>
   1b3d4:	mov	sl, #1
   1b3d8:	ldr	r1, [r4, #204]	; 0xcc
   1b3dc:	ldr	r0, [pc, #616]	; 1b64c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1b3e0:	bl	14180 <fputs@plt>
   1b3e4:	mov	r3, r9
   1b3e8:	mov	r2, r7
   1b3ec:	mov	r1, r6
   1b3f0:	str	sl, [sp]
   1b3f4:	mov	r0, r4
   1b3f8:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b3fc:	ldr	r1, [r4, #204]	; 0xcc
   1b400:	ldr	r0, [pc, #572]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b404:	bl	14180 <fputs@plt>
   1b408:	mov	r3, r5
   1b40c:	mov	r2, r5
   1b410:	ldr	r1, [pc, #568]	; 1b650 <__flatcc_fb_gen_c_builder@@Base+0x60c>
   1b414:	str	r5, [sp]
   1b418:	ldr	r0, [r4, #204]	; 0xcc
   1b41c:	bl	140e4 <fprintf@plt>
   1b420:	mov	r3, r7
   1b424:	mov	r2, r9
   1b428:	mov	r1, r6
   1b42c:	str	r9, [sp]
   1b430:	mov	r0, r4
   1b434:	bl	18f30 <__flatcc_gen_sort@@Base+0x514>
   1b438:	ldr	r1, [r4, #204]	; 0xcc
   1b43c:	ldr	r0, [pc, #508]	; 1b640 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1b440:	bl	14180 <fputs@plt>
   1b444:	mov	r3, #2
   1b448:	mov	r2, r7
   1b44c:	mov	r1, r6
   1b450:	str	r9, [sp]
   1b454:	mov	r0, r4
   1b458:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b45c:	ldr	r1, [r4, #204]	; 0xcc
   1b460:	ldr	r0, [pc, #476]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b464:	bl	14180 <fputs@plt>
   1b468:	mov	r3, r5
   1b46c:	mov	r2, r5
   1b470:	ldr	r1, [pc, #476]	; 1b654 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b474:	str	r5, [sp, #4]
   1b478:	str	r5, [sp]
   1b47c:	ldr	r0, [r4, #204]	; 0xcc
   1b480:	bl	140e4 <fprintf@plt>
   1b484:	ldr	r1, [r4, #204]	; 0xcc
   1b488:	ldr	r0, [pc, #444]	; 1b64c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1b48c:	bl	14180 <fputs@plt>
   1b490:	mov	r3, #2
   1b494:	mov	r2, r7
   1b498:	mov	r1, r6
   1b49c:	str	sl, [sp]
   1b4a0:	mov	r0, r4
   1b4a4:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b4a8:	ldr	r1, [r4, #204]	; 0xcc
   1b4ac:	ldr	r0, [pc, #400]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b4b0:	bl	14180 <fputs@plt>
   1b4b4:	mov	r3, r5
   1b4b8:	mov	r2, r5
   1b4bc:	ldr	r1, [pc, #404]	; 1b658 <__flatcc_fb_gen_c_builder@@Base+0x614>
   1b4c0:	str	r5, [sp]
   1b4c4:	ldr	r0, [r4, #204]	; 0xcc
   1b4c8:	bl	140e4 <fprintf@plt>
   1b4cc:	mov	r3, r7
   1b4d0:	mov	r2, r9
   1b4d4:	mov	r1, r6
   1b4d8:	str	r9, [sp]
   1b4dc:	mov	r0, r4
   1b4e0:	bl	18f30 <__flatcc_gen_sort@@Base+0x514>
   1b4e4:	ldr	r1, [r4, #204]	; 0xcc
   1b4e8:	ldr	r0, [pc, #336]	; 1b640 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1b4ec:	bl	14180 <fputs@plt>
   1b4f0:	mov	r3, sl
   1b4f4:	mov	r2, r7
   1b4f8:	mov	r1, r6
   1b4fc:	str	r9, [sp]
   1b500:	mov	r0, r4
   1b504:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b508:	ldr	r1, [r4, #204]	; 0xcc
   1b50c:	ldr	r0, [pc, #304]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b510:	bl	14180 <fputs@plt>
   1b514:	mov	r3, r5
   1b518:	mov	r2, r5
   1b51c:	ldr	r1, [pc, #312]	; 1b65c <__flatcc_fb_gen_c_builder@@Base+0x618>
   1b520:	str	r5, [sp, #4]
   1b524:	str	r5, [sp]
   1b528:	ldr	r0, [r4, #204]	; 0xcc
   1b52c:	bl	140e4 <fprintf@plt>
   1b530:	ldr	r1, [r4, #204]	; 0xcc
   1b534:	ldr	r0, [pc, #272]	; 1b64c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1b538:	bl	14180 <fputs@plt>
   1b53c:	mov	r3, sl
   1b540:	mov	r2, r7
   1b544:	mov	r1, r6
   1b548:	str	sl, [sp]
   1b54c:	mov	r0, r4
   1b550:	bl	19a20 <__flatcc_gen_sort@@Base+0x1004>
   1b554:	ldr	r1, [r4, #204]	; 0xcc
   1b558:	ldr	r0, [pc, #228]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1b55c:	bl	14180 <fputs@plt>
   1b560:	str	r5, [sp, #24]
   1b564:	str	r5, [sp, #20]
   1b568:	ldrh	r3, [r8, #104]	; 0x68
   1b56c:	ldr	r1, [pc, #236]	; 1b660 <__flatcc_fb_gen_c_builder@@Base+0x61c>
   1b570:	ldr	r0, [r4, #204]	; 0xcc
   1b574:	str	r3, [sp, #16]
   1b578:	ldrd	r2, [r8, #112]	; 0x70
   1b57c:	str	r5, [sp]
   1b580:	strd	r2, [sp, #8]
   1b584:	mov	r3, r4
   1b588:	mov	r2, r4
   1b58c:	bl	140e4 <fprintf@plt>
   1b590:	ldr	r1, [r4, #204]	; 0xcc
   1b594:	mov	r0, #10
   1b598:	bl	14144 <fputc@plt>
   1b59c:	ldr	r8, [r8, #120]	; 0x78
   1b5a0:	b	1b1cc <__flatcc_fb_gen_c_builder@@Base+0x188>
   1b5a4:	mov	r1, r9
   1b5a8:	mov	r3, sl
   1b5ac:	mov	r2, r7
   1b5b0:	ldr	r0, [sp, #32]
   1b5b4:	bl	18da4 <__flatcc_gen_sort@@Base+0x388>
   1b5b8:	add	r3, r9, #1
   1b5bc:	mov	r2, r9
   1b5c0:	ldr	r1, [pc, #156]	; 1b664 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1b5c4:	ldr	r0, [r4, #204]	; 0xcc
   1b5c8:	str	r3, [sp, #36]	; 0x24
   1b5cc:	bl	140e4 <fprintf@plt>
   1b5d0:	ldr	r3, [sp, #36]	; 0x24
   1b5d4:	mov	r9, r3
   1b5d8:	b	1b340 <__flatcc_fb_gen_c_builder@@Base+0x2fc>
   1b5dc:	andeq	r2, r4, ip, lsl pc
   1b5e0:	andeq	r2, r3, r0, asr #27
   1b5e4:	andeq	r2, r4, r7, asr #30
   1b5e8:	andeq	r2, r4, ip, asr pc
   1b5ec:	andeq	r8, r3, r5, lsl pc
   1b5f0:	ldrdeq	sl, [r3], -r0
   1b5f4:	andeq	r2, r4, r4, ror pc
   1b5f8:	muleq	r4, r3, pc	; <UNPREDICTABLE>
   1b5fc:	andeq	r7, r4, r7, lsr #22
   1b600:	andeq	r2, r3, pc, asr #29
   1b604:	andeq	r8, r3, sl, lsl #31
   1b608:	andeq	r8, r3, pc, ror #31
   1b60c:	muleq	r4, lr, pc	; <UNPREDICTABLE>
   1b610:	andeq	r2, r4, r3, ror #31
   1b614:			; <UNDEFINED> instruction: 0x00038cb9
   1b618:	andeq	r3, r4, r4, lsl #3
   1b61c:			; <UNDEFINED> instruction: 0x00038fbb
   1b620:	andeq	r9, r3, pc, lsl r0
   1b624:	andeq	r9, r3, lr, lsr #23
   1b628:	strdeq	r0, [r0], -r2
   1b62c:	andeq	r9, r3, r5, asr #24
   1b630:	andeq	r1, r3, sp, asr #23
   1b634:	andeq	sl, r3, r3, asr #6
   1b638:	andeq	sl, r3, ip, asr r4
   1b63c:	andeq	r3, r4, r8
   1b640:	andeq	r3, r4, lr, lsr #32
   1b644:	ldrdeq	r1, [r3], -r4
   1b648:	andeq	r3, r4, r3, lsr r0
   1b64c:	andeq	r3, r4, r0, lsr r0
   1b650:	andeq	r3, r4, r9, rrx
   1b654:	muleq	r4, r5, r0
   1b658:	ldrdeq	r3, [r4], -r1
   1b65c:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1b660:	andeq	r3, r4, sp, lsr r1
   1b664:	andeq	sl, r3, r8, ror #3
   1b668:	mov	r2, r1
   1b66c:	mov	r1, r0
   1b670:	ldr	r0, [r0, #12]
   1b674:	b	15b18 <__flatcc_fb_scoped_symbol_name@@Base>
   1b678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b67c:	sub	sp, sp, #492	; 0x1ec
   1b680:	add	r7, sp, #48	; 0x30
   1b684:	mov	r4, r1
   1b688:	mov	r5, r0
   1b68c:	mov	r2, #220	; 0xdc
   1b690:	mov	r1, #0
   1b694:	mov	r0, r7
   1b698:	add	sl, sp, #268	; 0x10c
   1b69c:	bl	140fc <memset@plt>
   1b6a0:	mov	r2, #220	; 0xdc
   1b6a4:	mov	r1, #0
   1b6a8:	mov	r0, sl
   1b6ac:	bl	140fc <memset@plt>
   1b6b0:	mov	r0, r4
   1b6b4:	mov	r1, r7
   1b6b8:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b6bc:	mov	r2, r7
   1b6c0:	ldr	r1, [pc, #868]	; 1ba2c <__flatcc_fb_gen_c_builder@@Base+0x9e8>
   1b6c4:	ldr	r0, [r5, #204]	; 0xcc
   1b6c8:	bl	140e4 <fprintf@plt>
   1b6cc:	ldr	r4, [r4, #20]
   1b6d0:	mov	r3, #1
   1b6d4:	mvn	fp, #0
   1b6d8:	cmp	r4, #0
   1b6dc:	bne	1b774 <__flatcc_fb_gen_c_builder@@Base+0x730>
   1b6e0:	cmp	r3, #0
   1b6e4:	bne	1b6f4 <__flatcc_fb_gen_c_builder@@Base+0x6b0>
   1b6e8:	ldr	r1, [r5, #204]	; 0xcc
   1b6ec:	ldr	r0, [pc, #828]	; 1ba30 <__flatcc_fb_gen_c_builder@@Base+0x9ec>
   1b6f0:	bl	14180 <fputs@plt>
   1b6f4:	ldr	r1, [r5, #204]	; 0xcc
   1b6f8:	ldr	r0, [pc, #820]	; 1ba34 <__flatcc_fb_gen_c_builder@@Base+0x9f0>
   1b6fc:	bl	14180 <fputs@plt>
   1b700:	ldr	r1, [r5, #204]	; 0xcc
   1b704:	ldr	r0, [pc, #812]	; 1ba38 <__flatcc_fb_gen_c_builder@@Base+0x9f4>
   1b708:	bl	14180 <fputs@plt>
   1b70c:	mov	r3, r7
   1b710:	mov	r2, r7
   1b714:	str	r7, [sp]
   1b718:	ldr	r1, [pc, #796]	; 1ba3c <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1b71c:	ldr	r0, [r5, #204]	; 0xcc
   1b720:	bl	140e4 <fprintf@plt>
   1b724:	mov	r3, r7
   1b728:	mov	r2, r7
   1b72c:	str	r7, [sp]
   1b730:	ldr	r1, [pc, #776]	; 1ba40 <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   1b734:	ldr	r0, [r5, #204]	; 0xcc
   1b738:	bl	140e4 <fprintf@plt>
   1b73c:	mov	r3, r7
   1b740:	mov	r2, r7
   1b744:	ldr	r1, [pc, #760]	; 1ba44 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1b748:	ldr	r0, [r5, #204]	; 0xcc
   1b74c:	bl	140e4 <fprintf@plt>
   1b750:	str	r7, [sp]
   1b754:	mov	r3, r5
   1b758:	mov	r2, r7
   1b75c:	ldr	r1, [pc, #740]	; 1ba48 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1b760:	ldr	r0, [r5, #204]	; 0xcc
   1b764:	bl	140e4 <fprintf@plt>
   1b768:	mov	r0, #0
   1b76c:	add	sp, sp, #492	; 0x1ec
   1b770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b774:	ldrh	r2, [r4, #72]	; 0x48
   1b778:	tst	r2, #4
   1b77c:	bne	1b838 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1b780:	cmp	r3, #0
   1b784:	ldr	r1, [r5, #204]	; 0xcc
   1b788:	ldrne	r0, [pc, #700]	; 1ba4c <__flatcc_fb_gen_c_builder@@Base+0xa08>
   1b78c:	ldreq	r0, [pc, #700]	; 1ba50 <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1b790:	bl	14180 <fputs@plt>
   1b794:	ldrh	r6, [r4, #72]	; 0x48
   1b798:	ldrh	r3, [r4, #24]
   1b79c:	lsr	r6, r6, #8
   1b7a0:	sub	r3, r3, #7
   1b7a4:	and	r6, r6, #1
   1b7a8:	cmp	r3, #8
   1b7ac:	ldrls	pc, [pc, r3, lsl #2]
   1b7b0:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b7b4:	ldrdeq	fp, [r1], -r8
   1b7b8:	andeq	fp, r1, r0, asr #17
   1b7bc:	andeq	fp, r1, ip, ror r8
   1b7c0:	andeq	fp, r1, r4, ror #16
   1b7c4:	andeq	fp, r1, ip, lsl r8
   1b7c8:	andeq	fp, r1, ip, lsl r8
   1b7cc:	andeq	fp, r1, ip, lsl r8
   1b7d0:	andeq	fp, r1, ip, lsl #17
   1b7d4:	andeq	fp, r1, r0, asr #18
   1b7d8:	ldr	r0, [r4, #104]	; 0x68
   1b7dc:	cmp	r0, #0
   1b7e0:	beq	1b984 <__flatcc_fb_gen_c_builder@@Base+0x940>
   1b7e4:	mov	r1, sl
   1b7e8:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b7ec:	ldr	r3, [r4, #104]	; 0x68
   1b7f0:	ldrh	r3, [r3, #8]
   1b7f4:	cmp	r3, #0
   1b7f8:	ldrd	r2, [r4, #96]	; 0x60
   1b7fc:	bne	1b840 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1b800:	str	sl, [sp, #8]
   1b804:	ldrh	r1, [r4, #74]	; 0x4a
   1b808:	ldr	r0, [r5, #204]	; 0xcc
   1b80c:	str	r6, [sp]
   1b810:	str	r1, [sp, #4]
   1b814:	ldr	r1, [pc, #568]	; 1ba54 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1b818:	bl	140e4 <fprintf@plt>
   1b81c:	ldr	r2, [r4, #4]
   1b820:	ldr	r1, [pc, #560]	; 1ba58 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1b824:	ldr	r0, [r5, #204]	; 0xcc
   1b828:	ldr	r3, [r2]
   1b82c:	ldr	r2, [r2, #4]
   1b830:	bl	140e4 <fprintf@plt>
   1b834:	mov	r3, #0
   1b838:	ldr	r4, [r4]
   1b83c:	b	1b6d8 <__flatcc_fb_gen_c_builder@@Base+0x694>
   1b840:	ldrh	r1, [r4, #74]	; 0x4a
   1b844:	str	r1, [sp, #16]
   1b848:	ldrd	r0, [r4, #88]	; 0x58
   1b84c:	str	r6, [sp]
   1b850:	strd	r0, [sp, #8]
   1b854:	ldr	r1, [pc, #512]	; 1ba5c <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1b858:	ldr	r0, [r5, #204]	; 0xcc
   1b85c:	bl	140e4 <fprintf@plt>
   1b860:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b864:	ldr	r1, [pc, #500]	; 1ba60 <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1b868:	ldrd	r2, [r4, #96]	; 0x60
   1b86c:	str	r6, [sp]
   1b870:	ldr	r0, [r5, #204]	; 0xcc
   1b874:	bl	140e4 <fprintf@plt>
   1b878:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b87c:	ldrd	r2, [r4, #96]	; 0x60
   1b880:	ldr	r1, [pc, #476]	; 1ba64 <__flatcc_fb_gen_c_builder@@Base+0xa20>
   1b884:	str	r6, [sp]
   1b888:	b	1b870 <__flatcc_fb_gen_c_builder@@Base+0x82c>
   1b88c:	mov	r1, sl
   1b890:	ldr	r0, [r4, #16]
   1b894:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b898:	ldr	r3, [r4, #16]
   1b89c:	ldrh	r3, [r3, #8]
   1b8a0:	cmp	r3, #4
   1b8a4:	ldrls	pc, [pc, r3, lsl #2]
   1b8a8:	b	1b90c <__flatcc_fb_gen_c_builder@@Base+0x8c8>
   1b8ac:	andeq	fp, r1, r4, ror #17
   1b8b0:	andeq	fp, r1, r0, asr #17
   1b8b4:	andeq	fp, r1, ip, lsl #18
   1b8b8:	andeq	fp, r1, r0, asr #17
   1b8bc:	strdeq	fp, [r1], -ip
   1b8c0:	ldrh	r1, [r4, #74]	; 0x4a
   1b8c4:	ldrd	r2, [r4, #96]	; 0x60
   1b8c8:	str	r1, [sp, #8]
   1b8cc:	ldrd	r0, [r4, #88]	; 0x58
   1b8d0:	strd	r0, [sp]
   1b8d4:	ldr	r1, [pc, #396]	; 1ba68 <__flatcc_fb_gen_c_builder@@Base+0xa24>
   1b8d8:	ldr	r0, [r5, #204]	; 0xcc
   1b8dc:	bl	140e4 <fprintf@plt>
   1b8e0:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b8e4:	ldr	r1, [pc, #384]	; 1ba6c <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1b8e8:	ldrd	r2, [r4, #96]	; 0x60
   1b8ec:	stm	sp, {r6, sl}
   1b8f0:	ldr	r0, [r5, #204]	; 0xcc
   1b8f4:	bl	140e4 <fprintf@plt>
   1b8f8:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b8fc:	ldrd	r2, [r4, #96]	; 0x60
   1b900:	ldr	r1, [pc, #360]	; 1ba70 <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1b904:	stm	sp, {r6, sl}
   1b908:	b	1b8f0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1b90c:	ldr	r0, [pc, #352]	; 1ba74 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1b910:	ldr	r3, [pc, #352]	; 1ba78 <__flatcc_fb_gen_c_builder@@Base+0xa34>
   1b914:	ldr	r2, [pc, #352]	; 1ba7c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1b918:	str	r3, [sp]
   1b91c:	ldr	r1, [pc, #348]	; 1ba80 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1b920:	mov	r3, #178	; 0xb2
   1b924:	ldr	r0, [r0]
   1b928:	bl	140e4 <fprintf@plt>
   1b92c:	ldr	r3, [pc, #336]	; 1ba84 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1b930:	mov	r2, #178	; 0xb2
   1b934:	ldr	r1, [pc, #320]	; 1ba7c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1b938:	ldr	r0, [pc, #328]	; 1ba88 <__flatcc_fb_gen_c_builder@@Base+0xa44>
   1b93c:	bl	141a4 <__assert_fail@plt>
   1b940:	mov	r1, sl
   1b944:	ldr	r0, [r4, #16]
   1b948:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1b94c:	ldr	r3, [r4, #16]
   1b950:	ldrh	r3, [r3, #8]
   1b954:	cmp	r3, #4
   1b958:	ldrls	pc, [pc, r3, lsl #2]
   1b95c:	b	1ba00 <__flatcc_fb_gen_c_builder@@Base+0x9bc>
   1b960:	andeq	fp, r1, r4, ror r9
   1b964:	andeq	fp, r1, r4, lsl #19
   1b968:	andeq	fp, r1, r0, lsl #20
   1b96c:	andeq	fp, r1, r4, lsl #19
   1b970:	strdeq	fp, [r1], -r0
   1b974:	ldrd	r2, [r4, #96]	; 0x60
   1b978:	ldr	r1, [pc, #268]	; 1ba8c <__flatcc_fb_gen_c_builder@@Base+0xa48>
   1b97c:	stm	sp, {r6, sl}
   1b980:	b	1b8f0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1b984:	ldr	r3, [r5, #204]	; 0xcc
   1b988:	ldrd	r8, [r4, #88]	; 0x58
   1b98c:	str	r3, [sp, #40]	; 0x28
   1b990:	ldrd	r2, [r4, #96]	; 0x60
   1b994:	strd	r2, [sp, #32]
   1b998:	ldrh	r3, [r4, #74]	; 0x4a
   1b99c:	str	r3, [sp, #44]	; 0x2c
   1b9a0:	orrs	r3, r8, r9
   1b9a4:	moveq	r0, fp
   1b9a8:	moveq	r1, #0
   1b9ac:	beq	1b9c4 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1b9b0:	mov	r2, r8
   1b9b4:	mov	r3, r9
   1b9b8:	mov	r0, fp
   1b9bc:	mov	r1, #0
   1b9c0:	bl	2fcac <fb_value_set_visit@@Base+0x834>
   1b9c4:	ldr	r3, [sp, #44]	; 0x2c
   1b9c8:	str	r0, [sp, #24]
   1b9cc:	str	r1, [sp, #28]
   1b9d0:	str	r3, [sp, #16]
   1b9d4:	strd	r8, [sp, #8]
   1b9d8:	str	r6, [sp]
   1b9dc:	ldrd	r2, [sp, #32]
   1b9e0:	ldr	r1, [pc, #168]	; 1ba90 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1b9e4:	ldr	r0, [sp, #40]	; 0x28
   1b9e8:	bl	140e4 <fprintf@plt>
   1b9ec:	b	1b81c <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1b9f0:	ldrd	r2, [r4, #96]	; 0x60
   1b9f4:	ldr	r1, [pc, #152]	; 1ba94 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b9f8:	stm	sp, {r6, sl}
   1b9fc:	b	1b8f0 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1ba00:	ldr	r0, [pc, #108]	; 1ba74 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1ba04:	ldr	r3, [pc, #140]	; 1ba98 <__flatcc_fb_gen_c_builder@@Base+0xa54>
   1ba08:	ldr	r2, [pc, #108]	; 1ba7c <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1ba0c:	str	r3, [sp]
   1ba10:	ldr	r1, [pc, #104]	; 1ba80 <__flatcc_fb_gen_c_builder@@Base+0xa3c>
   1ba14:	mov	r3, #202	; 0xca
   1ba18:	ldr	r0, [r0]
   1ba1c:	bl	140e4 <fprintf@plt>
   1ba20:	ldr	r3, [pc, #92]	; 1ba84 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1ba24:	mov	r2, #202	; 0xca
   1ba28:	b	1b934 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
   1ba2c:	andeq	r3, r4, r5, asr #3
   1ba30:	andeq	r3, r4, lr, asr r5
   1ba34:	andeq	r3, r4, lr, ror #10
   1ba38:	andeq	r7, r4, fp, ror #4
   1ba3c:	andeq	r3, r4, ip, lsl #11
   1ba40:	andeq	r3, r4, ip, lsr #12
   1ba44:	ldrdeq	r3, [r4], -r7
   1ba48:	andeq	r3, r4, lr, lsl #15
   1ba4c:	andeq	r3, r4, fp, lsl #4
   1ba50:	andeq	r3, r4, r8, lsr #4
   1ba54:	andeq	r3, r4, pc, ror #4
   1ba58:	ldrdeq	r4, [r4], -r7
   1ba5c:			; <UNDEFINED> instruction: 0x000432b8
   1ba60:	andeq	r3, r4, sl, lsr r3
   1ba64:	andeq	r3, r4, r3, ror #6
   1ba68:	andeq	r3, r4, r7, asr #4
   1ba6c:	muleq	r4, r3, r3
   1ba70:	andeq	r3, r4, sp, asr #7
   1ba74:	strheq	ip, [r5], -r0
   1ba78:	andeq	r3, r4, fp, asr r4
   1ba7c:	andeq	r3, r4, r9, lsl #8
   1ba80:	andeq	r1, r3, sl, ror #22
   1ba84:	muleq	r4, pc, r1	; <UNPREDICTABLE>
   1ba88:	andeq	sl, r3, r9, asr #3
   1ba8c:	muleq	r4, r7, r4
   1ba90:	strdeq	r3, [r4], -r8
   1ba94:	ldrdeq	r3, [r4], -r8
   1ba98:	andeq	r3, r4, fp, lsl r5
   1ba9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1baa0:	sub	sp, sp, #464	; 0x1d0
   1baa4:	mov	r4, r1
   1baa8:	mov	r5, r0
   1baac:	mov	r2, #220	; 0xdc
   1bab0:	mov	r1, #0
   1bab4:	add	r0, sp, #24
   1bab8:	bl	140fc <memset@plt>
   1babc:	mov	r2, #220	; 0xdc
   1bac0:	mov	r1, #0
   1bac4:	add	r0, sp, #244	; 0xf4
   1bac8:	bl	140fc <memset@plt>
   1bacc:	mov	r0, r4
   1bad0:	add	r1, sp, #24
   1bad4:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1bad8:	add	r2, sp, #24
   1badc:	ldr	r1, [pc, #332]	; 1bc30 <__flatcc_fb_gen_c_builder@@Base+0xbec>
   1bae0:	ldr	r0, [r5]
   1bae4:	bl	140e4 <fprintf@plt>
   1bae8:	ldr	r8, [pc, #324]	; 1bc34 <__flatcc_fb_gen_c_builder@@Base+0xbf0>
   1baec:	ldr	r4, [r4, #20]
   1baf0:	ldr	r9, [pc, #320]	; 1bc38 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   1baf4:	ldr	sl, [pc, #320]	; 1bc3c <__flatcc_fb_gen_c_builder@@Base+0xbf8>
   1baf8:	cmp	r4, #0
   1bafc:	bne	1bb18 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1bb00:	ldr	r1, [r5]
   1bb04:	ldr	r0, [pc, #308]	; 1bc40 <__flatcc_fb_gen_c_builder@@Base+0xbfc>
   1bb08:	bl	14180 <fputs@plt>
   1bb0c:	mov	r0, r4
   1bb10:	add	sp, sp, #464	; 0x1d0
   1bb14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bb18:	ldr	r3, [r4, #4]
   1bb1c:	ldr	r6, [r3, #4]
   1bb20:	ldr	r7, [r3]
   1bb24:	ldrh	r3, [r4, #24]
   1bb28:	cmp	r3, #10
   1bb2c:	beq	1bbe8 <__flatcc_fb_gen_c_builder@@Base+0xba4>
   1bb30:	cmp	r3, #14
   1bb34:	beq	1bb48 <__flatcc_fb_gen_c_builder@@Base+0xb04>
   1bb38:	cmp	r3, #0
   1bb3c:	bne	1bc04 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   1bb40:	ldr	r4, [r4]
   1bb44:	b	1baf8 <__flatcc_fb_gen_c_builder@@Base+0xab4>
   1bb48:	add	r1, sp, #244	; 0xf4
   1bb4c:	ldr	r0, [r4, #16]
   1bb50:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1bb54:	ldr	r3, [r4, #16]
   1bb58:	ldrh	r2, [r3, #8]
   1bb5c:	cmp	r2, #0
   1bb60:	beq	1bba0 <__flatcc_fb_gen_c_builder@@Base+0xb5c>
   1bb64:	cmp	r2, #1
   1bb68:	beq	1bbbc <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1bb6c:	ldr	r0, [pc, #208]	; 1bc44 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1bb70:	ldr	r3, [pc, #208]	; 1bc48 <__flatcc_fb_gen_c_builder@@Base+0xc04>
   1bb74:	ldr	r2, [pc, #208]	; 1bc4c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1bb78:	str	r3, [sp]
   1bb7c:	ldr	r1, [pc, #204]	; 1bc50 <__flatcc_fb_gen_c_builder@@Base+0xc0c>
   1bb80:	mov	r3, #74	; 0x4a
   1bb84:	ldr	r0, [r0]
   1bb88:	bl	140e4 <fprintf@plt>
   1bb8c:	ldr	r3, [pc, #192]	; 1bc54 <__flatcc_fb_gen_c_builder@@Base+0xc10>
   1bb90:	mov	r2, #74	; 0x4a
   1bb94:	ldr	r1, [pc, #176]	; 1bc4c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1bb98:	ldr	r0, [pc, #184]	; 1bc58 <__flatcc_fb_gen_c_builder@@Base+0xc14>
   1bb9c:	bl	141a4 <__assert_fail@plt>
   1bba0:	stm	sp, {r6, r7}
   1bba4:	add	r3, sp, #244	; 0xf4
   1bba8:	ldr	r2, [r4, #48]	; 0x30
   1bbac:	mov	r1, r9
   1bbb0:	ldr	r0, [r5]
   1bbb4:	bl	140e4 <fprintf@plt>
   1bbb8:	b	1bb40 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1bbbc:	str	r7, [sp, #16]
   1bbc0:	str	r6, [sp, #12]
   1bbc4:	ldrh	r2, [r3, #104]	; 0x68
   1bbc8:	mov	r1, sl
   1bbcc:	ldr	r0, [r5]
   1bbd0:	str	r2, [sp, #8]
   1bbd4:	ldrd	r2, [r3, #112]	; 0x70
   1bbd8:	strd	r2, [sp]
   1bbdc:	ldr	r2, [r4, #48]	; 0x30
   1bbe0:	bl	140e4 <fprintf@plt>
   1bbe4:	b	1bb40 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1bbe8:	str	r7, [sp]
   1bbec:	mov	r3, r6
   1bbf0:	ldr	r2, [r4, #48]	; 0x30
   1bbf4:	mov	r1, r8
   1bbf8:	ldr	r0, [r5]
   1bbfc:	bl	140e4 <fprintf@plt>
   1bc00:	b	1bb40 <__flatcc_fb_gen_c_builder@@Base+0xafc>
   1bc04:	ldr	r0, [pc, #56]	; 1bc44 <__flatcc_fb_gen_c_builder@@Base+0xc00>
   1bc08:	ldr	r3, [pc, #76]	; 1bc5c <__flatcc_fb_gen_c_builder@@Base+0xc18>
   1bc0c:	ldr	r2, [pc, #56]	; 1bc4c <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1bc10:	str	r3, [sp]
   1bc14:	ldr	r1, [pc, #52]	; 1bc50 <__flatcc_fb_gen_c_builder@@Base+0xc0c>
   1bc18:	mov	r3, #83	; 0x53
   1bc1c:	ldr	r0, [r0]
   1bc20:	bl	140e4 <fprintf@plt>
   1bc24:	ldr	r3, [pc, #40]	; 1bc54 <__flatcc_fb_gen_c_builder@@Base+0xc10>
   1bc28:	mov	r2, #83	; 0x53
   1bc2c:	b	1bb94 <__flatcc_fb_gen_c_builder@@Base+0xb50>
   1bc30:	andeq	r3, r4, ip, asr #16
   1bc34:	andeq	r3, r4, r2, lsl #19
   1bc38:	andeq	r3, r4, ip, lsr #17
   1bc3c:	strdeq	r3, [r4], -ip
   1bc40:	strdeq	r3, [r4], -r5
   1bc44:	strheq	ip, [r5], -r0
   1bc48:	andeq	r3, r4, r6, asr #18
   1bc4c:	andeq	r3, r4, r9, lsl #8
   1bc50:	andeq	r1, r3, sl, ror #22
   1bc54:			; <UNDEFINED> instruction: 0x000431b2
   1bc58:	andeq	sl, r3, r9, asr #3
   1bc5c:	andeq	r3, r4, r2, asr #19

0001bc60 <__flatcc_fb_gen_c_verifier@@Base>:
   1bc60:	ldr	r3, [r0, #208]	; 0xd0
   1bc64:	push	{r4, r5, r6, r7, r8, lr}
   1bc68:	mov	r4, r0
   1bc6c:	ldr	r3, [r3, #164]	; 0xa4
   1bc70:	sub	sp, sp, #240	; 0xf0
   1bc74:	mov	r2, r3
   1bc78:	ldr	r1, [pc, #608]	; 1bee0 <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1bc7c:	ldr	r0, [r0, #204]	; 0xcc
   1bc80:	bl	140e4 <fprintf@plt>
   1bc84:	ldr	r1, [r4, #204]	; 0xcc
   1bc88:	ldr	r0, [pc, #596]	; 1bee4 <__flatcc_fb_gen_c_verifier@@Base+0x284>
   1bc8c:	bl	14180 <fputs@plt>
   1bc90:	ldr	r3, [r4, #208]	; 0xd0
   1bc94:	ldr	r1, [pc, #588]	; 1bee8 <__flatcc_fb_gen_c_verifier@@Base+0x288>
   1bc98:	ldr	r0, [r4, #204]	; 0xcc
   1bc9c:	ldr	r2, [r3, #164]	; 0xa4
   1bca0:	bl	140e4 <fprintf@plt>
   1bca4:	ldr	r3, [r4, #208]	; 0xd0
   1bca8:	ldr	r1, [pc, #572]	; 1beec <__flatcc_fb_gen_c_verifier@@Base+0x28c>
   1bcac:	ldr	r0, [r4, #204]	; 0xcc
   1bcb0:	ldr	r2, [r3, #160]	; 0xa0
   1bcb4:	bl	140e4 <fprintf@plt>
   1bcb8:	ldr	r1, [r4, #204]	; 0xcc
   1bcbc:	ldr	r0, [pc, #556]	; 1bef0 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   1bcc0:	bl	14180 <fputs@plt>
   1bcc4:	ldr	r1, [r4, #204]	; 0xcc
   1bcc8:	ldr	r0, [pc, #548]	; 1bef4 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1bccc:	bl	14180 <fputs@plt>
   1bcd0:	ldr	r2, [pc, #544]	; 1bef8 <__flatcc_fb_gen_c_verifier@@Base+0x298>
   1bcd4:	ldr	r1, [pc, #544]	; 1befc <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1bcd8:	mov	r0, r4
   1bcdc:	bl	15954 <__flatcc_fb_gen_c_includes@@Base>
   1bce0:	ldr	r3, [r4, #212]	; 0xd4
   1bce4:	ldr	r3, [r3, #140]	; 0x8c
   1bce8:	cmp	r3, #0
   1bcec:	beq	1bcfc <__flatcc_fb_gen_c_verifier@@Base+0x9c>
   1bcf0:	ldr	r1, [r4, #204]	; 0xcc
   1bcf4:	ldr	r0, [pc, #516]	; 1bf00 <__flatcc_fb_gen_c_verifier@@Base+0x2a0>
   1bcf8:	bl	14180 <fputs@plt>
   1bcfc:	ldr	r1, [r4, #204]	; 0xcc
   1bd00:	mov	r0, #10
   1bd04:	bl	14144 <fputc@plt>
   1bd08:	mov	r2, #220	; 0xdc
   1bd0c:	mov	r1, #0
   1bd10:	add	r0, sp, #20
   1bd14:	bl	140fc <memset@plt>
   1bd18:	ldr	r3, [r4, #208]	; 0xd0
   1bd1c:	ldr	r6, [pc, #480]	; 1bf04 <__flatcc_fb_gen_c_verifier@@Base+0x2a4>
   1bd20:	ldr	r5, [r3, #40]	; 0x28
   1bd24:	cmp	r5, #0
   1bd28:	bne	1bdb4 <__flatcc_fb_gen_c_verifier@@Base+0x154>
   1bd2c:	ldr	r1, [r4, #204]	; 0xcc
   1bd30:	mov	r0, #10
   1bd34:	bl	14144 <fputc@plt>
   1bd38:	ldr	r3, [r4, #208]	; 0xd0
   1bd3c:	add	r6, r4, #204	; 0xcc
   1bd40:	ldr	r5, [r3, #40]	; 0x28
   1bd44:	cmp	r5, #0
   1bd48:	bne	1bde4 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1bd4c:	ldr	r3, [r4, #208]	; 0xd0
   1bd50:	ldr	r6, [pc, #432]	; 1bf08 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1bd54:	ldr	r7, [pc, #432]	; 1bf0c <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   1bd58:	ldr	r5, [r3, #40]	; 0x28
   1bd5c:	ldr	r8, [pc, #428]	; 1bf10 <__flatcc_fb_gen_c_verifier@@Base+0x2b0>
   1bd60:	cmp	r5, #0
   1bd64:	bne	1be04 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1bd68:	ldr	r3, [r4, #208]	; 0xd0
   1bd6c:	ldr	r5, [r3, #40]	; 0x28
   1bd70:	cmp	r5, #0
   1bd74:	bne	1bec0 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1bd78:	ldr	r3, [r4, #212]	; 0xd4
   1bd7c:	ldr	r3, [r3, #140]	; 0x8c
   1bd80:	cmp	r3, #0
   1bd84:	beq	1bd94 <__flatcc_fb_gen_c_verifier@@Base+0x134>
   1bd88:	ldr	r1, [r4, #204]	; 0xcc
   1bd8c:	ldr	r0, [pc, #384]	; 1bf14 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1bd90:	bl	14180 <fputs@plt>
   1bd94:	ldr	r3, [r4, #208]	; 0xd0
   1bd98:	ldr	r1, [pc, #376]	; 1bf18 <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1bd9c:	ldr	r0, [r4, #204]	; 0xcc
   1bda0:	ldr	r2, [r3, #164]	; 0xa4
   1bda4:	bl	140e4 <fprintf@plt>
   1bda8:	mov	r0, #0
   1bdac:	add	sp, sp, #240	; 0xf0
   1bdb0:	pop	{r4, r5, r6, r7, r8, pc}
   1bdb4:	ldrh	r3, [r5, #8]
   1bdb8:	cmp	r3, #0
   1bdbc:	bne	1bddc <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1bdc0:	add	r1, sp, #20
   1bdc4:	mov	r0, r5
   1bdc8:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1bdcc:	add	r2, sp, #20
   1bdd0:	mov	r1, r6
   1bdd4:	ldr	r0, [r4, #204]	; 0xcc
   1bdd8:	bl	140e4 <fprintf@plt>
   1bddc:	ldr	r5, [r5]
   1bde0:	b	1bd24 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   1bde4:	ldrh	r3, [r5, #8]
   1bde8:	cmp	r3, #4
   1bdec:	bne	1bdfc <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1bdf0:	mov	r1, r5
   1bdf4:	mov	r0, r6
   1bdf8:	bl	1ba9c <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1bdfc:	ldr	r5, [r5]
   1be00:	b	1bd44 <__flatcc_fb_gen_c_verifier@@Base+0xe4>
   1be04:	ldrh	r3, [r5, #8]
   1be08:	cmp	r3, #1
   1be0c:	bne	1beb8 <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1be10:	mov	r2, #220	; 0xdc
   1be14:	mov	r1, #0
   1be18:	add	r0, sp, #20
   1be1c:	bl	140fc <memset@plt>
   1be20:	add	r1, sp, #20
   1be24:	mov	r0, r5
   1be28:	bl	1b668 <__flatcc_fb_gen_c_builder@@Base+0x624>
   1be2c:	ldrh	r3, [r5, #104]	; 0x68
   1be30:	mov	r1, r6
   1be34:	ldr	r0, [r4, #204]	; 0xcc
   1be38:	str	r3, [sp, #8]
   1be3c:	ldrd	r2, [r5, #112]	; 0x70
   1be40:	strd	r2, [sp]
   1be44:	add	r3, sp, #20
   1be48:	mov	r2, r3
   1be4c:	bl	140e4 <fprintf@plt>
   1be50:	ldrh	r3, [r5, #104]	; 0x68
   1be54:	mov	r1, r7
   1be58:	ldr	r0, [r4, #204]	; 0xcc
   1be5c:	str	r3, [sp, #8]
   1be60:	ldrd	r2, [r5, #112]	; 0x70
   1be64:	strd	r2, [sp]
   1be68:	add	r3, sp, #20
   1be6c:	mov	r2, r3
   1be70:	bl	140e4 <fprintf@plt>
   1be74:	ldrh	r3, [r5, #104]	; 0x68
   1be78:	mov	r1, r8
   1be7c:	ldr	r0, [r4, #204]	; 0xcc
   1be80:	str	r3, [sp, #8]
   1be84:	ldrd	r2, [r5, #112]	; 0x70
   1be88:	strd	r2, [sp]
   1be8c:	mov	r3, r4
   1be90:	add	r2, sp, #20
   1be94:	bl	140e4 <fprintf@plt>
   1be98:	ldrh	r3, [r5, #104]	; 0x68
   1be9c:	ldr	r1, [pc, #120]	; 1bf1c <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1bea0:	ldr	r0, [r4, #204]	; 0xcc
   1bea4:	str	r3, [sp, #8]
   1bea8:	ldrd	r2, [r5, #112]	; 0x70
   1beac:	strd	r2, [sp]
   1beb0:	add	r2, sp, #20
   1beb4:	bl	140e4 <fprintf@plt>
   1beb8:	ldr	r5, [r5]
   1bebc:	b	1bd60 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1bec0:	ldrh	r3, [r5, #8]
   1bec4:	cmp	r3, #0
   1bec8:	bne	1bed8 <__flatcc_fb_gen_c_verifier@@Base+0x278>
   1becc:	mov	r1, r5
   1bed0:	mov	r0, r4
   1bed4:	bl	1b678 <__flatcc_fb_gen_c_builder@@Base+0x634>
   1bed8:	ldr	r5, [r5]
   1bedc:	b	1bd70 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1bee0:	andeq	r3, r4, r5, lsr #20
   1bee4:	andeq	r2, r3, r0, asr #27
   1bee8:	andeq	r2, r4, r7, asr #30
   1beec:	andeq	r2, r4, ip, asr pc
   1bef0:	andeq	r8, r3, r5, lsl pc
   1bef4:	andeq	r3, r4, r2, asr sl
   1bef8:	andeq	r3, r4, r7, ror sl
   1befc:	andeq	r1, r3, r1, lsr r8
   1bf00:	andeq	r2, r3, pc, asr #29
   1bf04:	andeq	r3, r4, r3, lsl #21
   1bf08:	andeq	r3, r4, r8, asr #21
   1bf0c:	andeq	r3, r4, r1, ror #22
   1bf10:	andeq	r3, r4, r5, lsl #24
   1bf14:			; <UNDEFINED> instruction: 0x00038cb9
   1bf18:	andeq	r3, r4, ip, ror #26
   1bf1c:			; <UNDEFINED> instruction: 0x00043cbc
   1bf20:	ldr	ip, [r0, #4]
   1bf24:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf28:	cmp	ip, r1
   1bf2c:	movlt	r5, #0
   1bf30:	movlt	r4, r5
   1bf34:	blt	1bf94 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1bf38:	sub	r4, ip, r1
   1bf3c:	cmp	r4, #8
   1bf40:	movge	r4, #8
   1bf44:	ldr	r5, [r0]
   1bf48:	rsb	r6, r4, #8
   1bf4c:	add	r5, r5, r1
   1bf50:	lsl	r6, r6, #3
   1bf54:	mov	sl, r3
   1bf58:	mov	fp, r2
   1bf5c:	add	r3, r5, r4
   1bf60:	mov	r7, r6
   1bf64:	mov	r8, #0
   1bf68:	mov	r9, #0
   1bf6c:	cmp	r7, #64	; 0x40
   1bf70:	bne	1bfb8 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   1bf74:	strd	r8, [fp]
   1bf78:	mov	r2, r6
   1bf7c:	mov	r0, #1
   1bf80:	mov	r1, #0
   1bf84:	bl	2f688 <fb_value_set_visit@@Base+0x210>
   1bf88:	rsbs	r0, r0, #0
   1bf8c:	rsc	r1, r1, #0
   1bf90:	strd	r0, [sl]
   1bf94:	ldr	r3, [sp, #48]	; 0x30
   1bf98:	mov	r0, r4
   1bf9c:	cmp	r3, #0
   1bfa0:	strne	r5, [r3]
   1bfa4:	ldr	r3, [sp, #52]	; 0x34
   1bfa8:	cmp	r3, #0
   1bfac:	strne	r4, [r3]
   1bfb0:	add	sp, sp, #12
   1bfb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfb8:	ldrb	r0, [r3, #-1]!
   1bfbc:	mov	r2, r7
   1bfc0:	mov	r1, #0
   1bfc4:	str	r3, [sp, #4]
   1bfc8:	bl	2f688 <fb_value_set_visit@@Base+0x210>
   1bfcc:	add	r7, r7, #8
   1bfd0:	ldr	r3, [sp, #4]
   1bfd4:	orr	r8, r8, r0
   1bfd8:	orr	r9, r9, r1
   1bfdc:	b	1bf6c <__flatcc_fb_gen_c_verifier@@Base+0x30c>
   1bfe0:	ldrh	r3, [r0, #24]
   1bfe4:	sub	r3, r3, #14
   1bfe8:	cmp	r3, #1
   1bfec:	ldrls	r3, [r0, #16]
   1bff0:	ldrhls	r0, [r3, #8]
   1bff4:	subls	r0, r0, #4
   1bff8:	clzls	r0, r0
   1bffc:	lsrls	r0, r0, #5
   1c000:	movhi	r0, #0
   1c004:	bx	lr
   1c008:	push	{r1, r2, r3}
   1c00c:	ldr	r3, [r0, #212]	; 0xd4
   1c010:	push	{r0, r1, r4, r5, r6, r7, r8, r9, lr}
   1c014:	mov	r4, r0
   1c018:	ldr	r7, [r0, #220]	; 0xdc
   1c01c:	ldr	r0, [pc, #160]	; 1c0c4 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1c020:	ldr	r5, [r3, #176]	; 0xb0
   1c024:	ldr	r6, [sp, #36]	; 0x24
   1c028:	ldrb	r3, [r0]
   1c02c:	cmp	r3, #0
   1c030:	bne	1c040 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
   1c034:	mov	r2, #64	; 0x40
   1c038:	mov	r1, #32
   1c03c:	bl	140fc <memset@plt>
   1c040:	ldrb	r3, [r6]
   1c044:	cmp	r3, #0
   1c048:	beq	1c08c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   1c04c:	mul	r5, r5, r7
   1c050:	ldr	r9, [pc, #112]	; 1c0c8 <__flatcc_fb_gen_c_verifier@@Base+0x468>
   1c054:	ldr	r7, [pc, #104]	; 1c0c4 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1c058:	mov	r8, #64	; 0x40
   1c05c:	cmp	r5, #64	; 0x40
   1c060:	bgt	1c0a8 <__flatcc_fb_gen_c_verifier@@Base+0x448>
   1c064:	mov	r2, r5
   1c068:	ldr	r1, [pc, #88]	; 1c0c8 <__flatcc_fb_gen_c_verifier@@Base+0x468>
   1c06c:	ldr	r3, [pc, #80]	; 1c0c4 <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1c070:	ldr	r0, [r4, #204]	; 0xcc
   1c074:	bl	140e4 <fprintf@plt>
   1c078:	add	r2, sp, #40	; 0x28
   1c07c:	mov	r1, r6
   1c080:	ldr	r0, [r4, #204]	; 0xcc
   1c084:	str	r2, [sp, #4]
   1c088:	bl	14138 <vfprintf@plt>
   1c08c:	ldr	r1, [r4, #204]	; 0xcc
   1c090:	mov	r0, #10
   1c094:	bl	14144 <fputc@plt>
   1c098:	add	sp, sp, #8
   1c09c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c0a0:	add	sp, sp, #12
   1c0a4:	bx	lr
   1c0a8:	mov	r3, r7
   1c0ac:	mov	r2, r8
   1c0b0:	mov	r1, r9
   1c0b4:	ldr	r0, [r4, #204]	; 0xcc
   1c0b8:	bl	140e4 <fprintf@plt>
   1c0bc:	sub	r5, r5, #64	; 0x40
   1c0c0:	b	1c05c <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   1c0c4:	strheq	ip, [r5], -r9
   1c0c8:	ldrdeq	sl, [r3], -r9
   1c0cc:	ldr	r1, [pc]	; 1c0d4 <__flatcc_fb_gen_c_verifier@@Base+0x474>
   1c0d0:	b	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c0d4:	andeq	r3, r4, r4, lsl pc
   1c0d8:	b	1c0cc <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1c0dc:	ldr	r1, [pc]	; 1c0e4 <__flatcc_fb_gen_c_verifier@@Base+0x484>
   1c0e0:	b	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c0e4:	andeq	r3, r4, r6, lsr #30
   1c0e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0ec:	mov	r9, r3
   1c0f0:	sub	r6, r9, r2
   1c0f4:	add	r6, r6, #1
   1c0f8:	sub	sp, sp, #44	; 0x2c
   1c0fc:	add	r6, r6, r6, lsr #31
   1c100:	add	r3, sp, #40	; 0x28
   1c104:	mov	r5, r1
   1c108:	mov	r4, r0
   1c10c:	mov	r1, #0
   1c110:	mov	r0, #0
   1c114:	add	r6, r2, r6, asr #1
   1c118:	strd	r0, [r3, #-8]!
   1c11c:	strd	r0, [sp, #24]
   1c120:	mov	r8, r2
   1c124:	ldr	r0, [r5]
   1c128:	add	r2, sp, #20
   1c12c:	str	r2, [sp, #4]
   1c130:	lsl	fp, r6, #4
   1c134:	add	r2, sp, #16
   1c138:	str	r2, [sp]
   1c13c:	ldr	r1, [sp, #80]	; 0x50
   1c140:	add	r2, sp, #24
   1c144:	add	r0, r0, fp
   1c148:	ldr	r7, [sp, #84]	; 0x54
   1c14c:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1c150:	ldrd	r2, [sp, #24]
   1c154:	ldr	r1, [sp, #20]
   1c158:	cmp	r0, #8
   1c15c:	mov	sl, r0
   1c160:	ldr	r0, [sp, #16]
   1c164:	bne	1c214 <__flatcc_fb_gen_c_verifier@@Base+0x5b4>
   1c168:	str	r0, [sp, #4]
   1c16c:	str	r1, [sp]
   1c170:	mov	r0, r4
   1c174:	ldr	r1, [pc, #604]	; 1c3d8 <__flatcc_fb_gen_c_verifier@@Base+0x778>
   1c178:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c17c:	ldr	r3, [r4, #220]	; 0xdc
   1c180:	cmp	r8, r6
   1c184:	add	r3, r3, #1
   1c188:	str	r3, [r4, #220]	; 0xdc
   1c18c:	bne	1c2ac <__flatcc_fb_gen_c_verifier@@Base+0x64c>
   1c190:	ldr	r3, [r5]
   1c194:	str	sl, [sp]
   1c198:	add	fp, r3, fp
   1c19c:	ldr	r6, [r5, #4]
   1c1a0:	ldr	r3, [fp, #12]
   1c1a4:	ldr	r2, [fp, #8]
   1c1a8:	ldr	r1, [r5, #12]
   1c1ac:	mov	r0, r4
   1c1b0:	blx	r6
   1c1b4:	cmp	r7, #0
   1c1b8:	ble	1c234 <__flatcc_fb_gen_c_verifier@@Base+0x5d4>
   1c1bc:	mov	r2, r7
   1c1c0:	ldr	r1, [pc, #532]	; 1c3dc <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1c1c4:	mov	r0, r4
   1c1c8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c1cc:	ldr	r3, [r4, #220]	; 0xdc
   1c1d0:	cmp	r3, #0
   1c1d4:	moveq	r2, #888	; 0x378
   1c1d8:	ldreq	r3, [pc, #512]	; 1c3e0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1c1dc:	beq	1c208 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1c1e0:	sub	r3, r3, #1
   1c1e4:	str	r3, [r4, #220]	; 0xdc
   1c1e8:	ldr	r1, [pc, #500]	; 1c3e4 <__flatcc_fb_gen_c_verifier@@Base+0x784>
   1c1ec:	mov	r0, r4
   1c1f0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c1f4:	ldr	r3, [r4, #220]	; 0xdc
   1c1f8:	cmp	r3, #0
   1c1fc:	bne	1c244 <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1c200:	ldr	r3, [pc, #472]	; 1c3e0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1c204:	ldr	r2, [pc, #476]	; 1c3e8 <__flatcc_fb_gen_c_verifier@@Base+0x788>
   1c208:	ldr	r1, [pc, #476]	; 1c3ec <__flatcc_fb_gen_c_verifier@@Base+0x78c>
   1c20c:	ldr	r0, [pc, #476]	; 1c3f0 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1c210:	bl	141a4 <__assert_fail@plt>
   1c214:	str	r0, [sp, #12]
   1c218:	str	r1, [sp, #8]
   1c21c:	strd	r2, [sp]
   1c220:	ldr	r1, [pc, #460]	; 1c3f4 <__flatcc_fb_gen_c_verifier@@Base+0x794>
   1c224:	ldrd	r2, [sp, #32]
   1c228:	mov	r0, r4
   1c22c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c230:	b	1c17c <__flatcc_fb_gen_c_verifier@@Base+0x51c>
   1c234:	ldr	r3, [r5, #8]
   1c238:	mov	r0, r4
   1c23c:	blx	r3
   1c240:	b	1c1cc <__flatcc_fb_gen_c_verifier@@Base+0x56c>
   1c244:	sub	r3, r3, #1
   1c248:	str	r3, [r4, #220]	; 0xdc
   1c24c:	ldr	r2, [sp, #20]
   1c250:	ldr	r3, [sp, #16]
   1c254:	ldr	r1, [pc, #412]	; 1c3f8 <__flatcc_fb_gen_c_verifier@@Base+0x798>
   1c258:	mov	r0, r4
   1c25c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c260:	ldr	r3, [r4, #220]	; 0xdc
   1c264:	cmp	r7, #0
   1c268:	add	r3, r3, #1
   1c26c:	str	r3, [r4, #220]	; 0xdc
   1c270:	ble	1c29c <__flatcc_fb_gen_c_verifier@@Base+0x63c>
   1c274:	mov	r2, r7
   1c278:	ldr	r1, [pc, #348]	; 1c3dc <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1c27c:	mov	r0, r4
   1c280:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c284:	ldr	r3, [r4, #220]	; 0xdc
   1c288:	cmp	r3, #0
   1c28c:	bne	1c3b4 <__flatcc_fb_gen_c_verifier@@Base+0x754>
   1c290:	ldr	r3, [pc, #328]	; 1c3e0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1c294:	ldr	r2, [pc, #352]	; 1c3fc <__flatcc_fb_gen_c_verifier@@Base+0x79c>
   1c298:	b	1c208 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1c29c:	ldr	r3, [r5, #8]
   1c2a0:	mov	r0, r4
   1c2a4:	blx	r3
   1c2a8:	b	1c284 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1c2ac:	cmp	r9, r6
   1c2b0:	bne	1c344 <__flatcc_fb_gen_c_verifier@@Base+0x6e4>
   1c2b4:	ldr	r3, [r5]
   1c2b8:	str	sl, [sp]
   1c2bc:	add	fp, r3, fp
   1c2c0:	ldr	r9, [r5, #4]
   1c2c4:	ldr	r3, [fp, #12]
   1c2c8:	ldr	r2, [fp, #8]
   1c2cc:	ldr	r1, [r5, #12]
   1c2d0:	mov	r0, r4
   1c2d4:	blx	r9
   1c2d8:	cmp	r7, #0
   1c2dc:	ble	1c308 <__flatcc_fb_gen_c_verifier@@Base+0x6a8>
   1c2e0:	mov	r2, r7
   1c2e4:	ldr	r1, [pc, #240]	; 1c3dc <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1c2e8:	mov	r0, r4
   1c2ec:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c2f0:	ldr	r3, [r4, #220]	; 0xdc
   1c2f4:	cmp	r3, #0
   1c2f8:	bne	1c318 <__flatcc_fb_gen_c_verifier@@Base+0x6b8>
   1c2fc:	ldr	r3, [pc, #220]	; 1c3e0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1c300:	ldr	r2, [pc, #248]	; 1c400 <__flatcc_fb_gen_c_verifier@@Base+0x7a0>
   1c304:	b	1c208 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1c308:	ldr	r3, [r5, #8]
   1c30c:	mov	r0, r4
   1c310:	blx	r3
   1c314:	b	1c2f0 <__flatcc_fb_gen_c_verifier@@Base+0x690>
   1c318:	sub	r3, r3, #1
   1c31c:	str	r3, [r4, #220]	; 0xdc
   1c320:	ldr	r1, [pc, #188]	; 1c3e4 <__flatcc_fb_gen_c_verifier@@Base+0x784>
   1c324:	mov	r0, r4
   1c328:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c32c:	ldr	r3, [r4, #220]	; 0xdc
   1c330:	cmp	r3, #0
   1c334:	bne	1c368 <__flatcc_fb_gen_c_verifier@@Base+0x708>
   1c338:	ldr	r3, [pc, #160]	; 1c3e0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1c33c:	ldr	r2, [pc, #192]	; 1c404 <__flatcc_fb_gen_c_verifier@@Base+0x7a4>
   1c340:	b	1c208 <__flatcc_fb_gen_c_verifier@@Base+0x5a8>
   1c344:	ldr	r3, [sp, #80]	; 0x50
   1c348:	str	r7, [sp, #4]
   1c34c:	str	r3, [sp]
   1c350:	mov	r2, r6
   1c354:	mov	r3, r9
   1c358:	mov	r1, r5
   1c35c:	mov	r0, r4
   1c360:	bl	1c0e8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1c364:	b	1c32c <__flatcc_fb_gen_c_verifier@@Base+0x6cc>
   1c368:	sub	r3, r3, #1
   1c36c:	str	r3, [r4, #220]	; 0xdc
   1c370:	ldr	r2, [sp, #20]
   1c374:	ldr	r3, [sp, #16]
   1c378:	mov	r0, r4
   1c37c:	ldr	r1, [pc, #116]	; 1c3f8 <__flatcc_fb_gen_c_verifier@@Base+0x798>
   1c380:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c384:	ldr	r3, [r4, #220]	; 0xdc
   1c388:	str	r7, [sp, #4]
   1c38c:	add	r3, r3, #1
   1c390:	str	r3, [r4, #220]	; 0xdc
   1c394:	ldr	r3, [sp, #80]	; 0x50
   1c398:	mov	r2, r8
   1c39c:	str	r3, [sp]
   1c3a0:	mov	r1, r5
   1c3a4:	sub	r3, r6, #1
   1c3a8:	mov	r0, r4
   1c3ac:	bl	1c0e8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1c3b0:	b	1c284 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1c3b4:	sub	r3, r3, #1
   1c3b8:	str	r3, [r4, #220]	; 0xdc
   1c3bc:	ldr	r2, [sp, #20]
   1c3c0:	ldr	r3, [sp, #16]
   1c3c4:	ldr	r1, [pc, #60]	; 1c408 <__flatcc_fb_gen_c_verifier@@Base+0x7a8>
   1c3c8:	mov	r0, r4
   1c3cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c3d0:	add	sp, sp, #44	; 0x2c
   1c3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3d8:	andeq	r3, r4, r0, ror #30
   1c3dc:	andeq	r3, r4, fp, lsr #31
   1c3e0:	andeq	r3, r4, r8, lsl #27
   1c3e4:	andeq	r8, r3, r3, lsl r1
   1c3e8:	andeq	r0, r0, r9, ror r3
   1c3ec:			; <UNDEFINED> instruction: 0x00043fbb
   1c3f0:	andeq	r4, r4, r0, lsl r0
   1c3f4:	andeq	r3, r4, r0, lsl #31
   1c3f8:	andeq	r4, r4, ip, lsl r0
   1c3fc:	andeq	r0, r0, lr, lsl #7
   1c400:	andeq	r0, r0, r7, lsl #7
   1c404:	andeq	r0, r0, fp, lsl #7
   1c408:	andeq	r4, r4, r2, lsr r0
   1c40c:	push	{r4, lr}
   1c410:	mov	r4, r0
   1c414:	sub	sp, sp, #208	; 0xd0
   1c418:	mov	r0, r1
   1c41c:	add	r1, sp, #4
   1c420:	bl	15a74 <__flatcc_fb_copy_scope@@Base>
   1c424:	ldr	r2, [r4, #208]	; 0xd0
   1c428:	add	r3, sp, #4
   1c42c:	mov	r0, r4
   1c430:	ldr	r2, [r2, #160]	; 0xa0
   1c434:	ldr	r1, [pc, #20]	; 1c450 <__flatcc_fb_gen_c_verifier@@Base+0x7f0>
   1c438:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c43c:	ldr	r1, [pc, #16]	; 1c454 <__flatcc_fb_gen_c_verifier@@Base+0x7f4>
   1c440:	mov	r0, r4
   1c444:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c448:	add	sp, sp, #208	; 0xd0
   1c44c:	pop	{r4, pc}
   1c450:	andeq	r4, r4, r1, asr #32
   1c454:	andeq	r4, r4, sp, lsr #1
   1c458:	mov	r2, r1
   1c45c:	mov	r1, r0
   1c460:	ldr	r0, [r0, #12]
   1c464:	b	15b18 <__flatcc_fb_scoped_symbol_name@@Base>
   1c468:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c46c:	sub	sp, sp, #448	; 0x1c0
   1c470:	mov	r4, r0
   1c474:	mov	r5, r1
   1c478:	mov	r2, #220	; 0xdc
   1c47c:	mov	r1, #0
   1c480:	add	r0, sp, #8
   1c484:	bl	140fc <memset@plt>
   1c488:	mov	r2, #220	; 0xdc
   1c48c:	mov	r1, #0
   1c490:	add	r0, sp, #228	; 0xe4
   1c494:	bl	140fc <memset@plt>
   1c498:	add	r1, sp, #8
   1c49c:	mov	r0, r5
   1c4a0:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1c4a4:	add	r2, sp, #8
   1c4a8:	ldr	r1, [pc, #908]	; 1c83c <__flatcc_fb_gen_c_verifier@@Base+0xbdc>
   1c4ac:	mov	r0, r4
   1c4b0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4b4:	ldr	r1, [pc, #900]	; 1c840 <__flatcc_fb_gen_c_verifier@@Base+0xbe0>
   1c4b8:	mov	r0, r4
   1c4bc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4c0:	ldr	r3, [r4, #220]	; 0xdc
   1c4c4:	ldr	r1, [pc, #888]	; 1c844 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1c4c8:	add	r3, r3, #1
   1c4cc:	str	r3, [r4, #220]	; 0xdc
   1c4d0:	mov	r0, r4
   1c4d4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4d8:	ldr	r1, [pc, #872]	; 1c848 <__flatcc_fb_gen_c_verifier@@Base+0xbe8>
   1c4dc:	mov	r0, r4
   1c4e0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4e4:	ldr	r1, [pc, #864]	; 1c84c <__flatcc_fb_gen_c_verifier@@Base+0xbec>
   1c4e8:	mov	r0, r4
   1c4ec:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4f0:	ldr	r1, [pc, #856]	; 1c850 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1c4f4:	mov	r0, r4
   1c4f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c4fc:	ldr	r3, [r4, #220]	; 0xdc
   1c500:	ldr	r1, [pc, #844]	; 1c854 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   1c504:	add	r3, r3, #1
   1c508:	str	r3, [r4, #220]	; 0xdc
   1c50c:	mov	r0, r4
   1c510:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c514:	ldr	r3, [r4, #220]	; 0xdc
   1c518:	cmp	r3, #0
   1c51c:	bne	1c534 <__flatcc_fb_gen_c_verifier@@Base+0x8d4>
   1c520:	ldr	r3, [pc, #816]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c524:	ldr	r2, [pc, #816]	; 1c85c <__flatcc_fb_gen_c_verifier@@Base+0xbfc>
   1c528:	ldr	r1, [pc, #816]	; 1c860 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1c52c:	ldr	r0, [pc, #816]	; 1c864 <__flatcc_fb_gen_c_verifier@@Base+0xc04>
   1c530:	b	1c650 <__flatcc_fb_gen_c_verifier@@Base+0x9f0>
   1c534:	ldr	r5, [r5, #20]
   1c538:	ldr	r6, [pc, #808]	; 1c868 <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1c53c:	ldr	r8, [pc, #808]	; 1c86c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1c540:	ldr	r7, [pc, #808]	; 1c870 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1c544:	sub	r3, r3, #1
   1c548:	str	r3, [r4, #220]	; 0xdc
   1c54c:	cmp	r5, #0
   1c550:	bne	1c5a8 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   1c554:	ldr	r1, [pc, #792]	; 1c874 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1c558:	mov	r0, r4
   1c55c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c560:	ldr	r3, [r4, #220]	; 0xdc
   1c564:	ldr	r1, [pc, #780]	; 1c878 <__flatcc_fb_gen_c_verifier@@Base+0xc18>
   1c568:	add	r3, r3, #1
   1c56c:	str	r3, [r4, #220]	; 0xdc
   1c570:	mov	r0, r4
   1c574:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c578:	ldr	r3, [r4, #220]	; 0xdc
   1c57c:	ldr	r1, [pc, #760]	; 1c87c <__flatcc_fb_gen_c_verifier@@Base+0xc1c>
   1c580:	add	r3, r3, #1
   1c584:	str	r3, [r4, #220]	; 0xdc
   1c588:	mov	r0, r4
   1c58c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c590:	ldr	r3, [r4, #220]	; 0xdc
   1c594:	cmp	r3, #0
   1c598:	bne	1c71c <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1c59c:	ldr	r3, [pc, #692]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c5a0:	ldr	r2, [pc, #728]	; 1c880 <__flatcc_fb_gen_c_verifier@@Base+0xc20>
   1c5a4:	b	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c5a8:	ldrh	r2, [r5, #24]
   1c5ac:	ldr	r3, [r5, #4]
   1c5b0:	cmp	r2, #10
   1c5b4:	ldr	r9, [r3, #4]
   1c5b8:	ldr	sl, [r3]
   1c5bc:	beq	1c694 <__flatcc_fb_gen_c_verifier@@Base+0xa34>
   1c5c0:	cmp	r2, #14
   1c5c4:	beq	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   1c5c8:	cmp	r2, #0
   1c5cc:	bne	1c6f0 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
   1c5d0:	ldr	r5, [r5]
   1c5d4:	b	1c54c <__flatcc_fb_gen_c_verifier@@Base+0x8ec>
   1c5d8:	add	r1, sp, #228	; 0xe4
   1c5dc:	ldr	r0, [r5, #16]
   1c5e0:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1c5e4:	str	sl, [sp]
   1c5e8:	mov	r3, r9
   1c5ec:	ldr	r2, [r5, #48]	; 0x30
   1c5f0:	mov	r1, r6
   1c5f4:	mov	r0, r4
   1c5f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c5fc:	ldr	r3, [r4, #220]	; 0xdc
   1c600:	add	r3, r3, #1
   1c604:	str	r3, [r4, #220]	; 0xdc
   1c608:	ldr	r3, [r5, #16]
   1c60c:	ldrh	r3, [r3, #8]
   1c610:	cmp	r3, #0
   1c614:	beq	1c654 <__flatcc_fb_gen_c_verifier@@Base+0x9f4>
   1c618:	cmp	r3, #1
   1c61c:	beq	1c688 <__flatcc_fb_gen_c_verifier@@Base+0xa28>
   1c620:	ldr	r0, [pc, #604]	; 1c884 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1c624:	ldr	r3, [pc, #604]	; 1c888 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1c628:	ldr	r2, [pc, #560]	; 1c860 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1c62c:	str	r3, [sp]
   1c630:	ldr	r1, [pc, #596]	; 1c88c <__flatcc_fb_gen_c_verifier@@Base+0xc2c>
   1c634:	ldr	r3, [pc, #596]	; 1c890 <__flatcc_fb_gen_c_verifier@@Base+0xc30>
   1c638:	ldr	r0, [r0]
   1c63c:	bl	140e4 <fprintf@plt>
   1c640:	ldr	r3, [pc, #528]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c644:	ldr	r2, [pc, #580]	; 1c890 <__flatcc_fb_gen_c_verifier@@Base+0xc30>
   1c648:	ldr	r1, [pc, #528]	; 1c860 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1c64c:	ldr	r0, [pc, #576]	; 1c894 <__flatcc_fb_gen_c_verifier@@Base+0xc34>
   1c650:	bl	141a4 <__assert_fail@plt>
   1c654:	ldr	r1, [pc, #572]	; 1c898 <__flatcc_fb_gen_c_verifier@@Base+0xc38>
   1c658:	add	r2, sp, #228	; 0xe4
   1c65c:	mov	r0, r4
   1c660:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c664:	mov	r1, r7
   1c668:	mov	r0, r4
   1c66c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c670:	ldr	r3, [r4, #220]	; 0xdc
   1c674:	cmp	r3, #0
   1c678:	bne	1c6e4 <__flatcc_fb_gen_c_verifier@@Base+0xa84>
   1c67c:	ldr	r3, [pc, #468]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c680:	ldr	r2, [pc, #532]	; 1c89c <__flatcc_fb_gen_c_verifier@@Base+0xc3c>
   1c684:	b	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c688:	add	r2, sp, #228	; 0xe4
   1c68c:	ldr	r1, [pc, #524]	; 1c8a0 <__flatcc_fb_gen_c_verifier@@Base+0xc40>
   1c690:	b	1c65c <__flatcc_fb_gen_c_verifier@@Base+0x9fc>
   1c694:	str	sl, [sp]
   1c698:	mov	r3, r9
   1c69c:	ldr	r2, [r5, #48]	; 0x30
   1c6a0:	mov	r1, r6
   1c6a4:	mov	r0, r4
   1c6a8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c6ac:	ldr	r3, [r4, #220]	; 0xdc
   1c6b0:	mov	r1, r8
   1c6b4:	add	r3, r3, #1
   1c6b8:	str	r3, [r4, #220]	; 0xdc
   1c6bc:	mov	r0, r4
   1c6c0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c6c4:	mov	r1, r7
   1c6c8:	mov	r0, r4
   1c6cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c6d0:	ldr	r3, [r4, #220]	; 0xdc
   1c6d4:	cmp	r3, #0
   1c6d8:	ldreq	r3, [pc, #376]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c6dc:	ldreq	r2, [pc, #448]	; 1c8a4 <__flatcc_fb_gen_c_verifier@@Base+0xc44>
   1c6e0:	beq	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c6e4:	sub	r3, r3, #1
   1c6e8:	str	r3, [r4, #220]	; 0xdc
   1c6ec:	b	1c5d0 <__flatcc_fb_gen_c_verifier@@Base+0x970>
   1c6f0:	ldr	r0, [pc, #396]	; 1c884 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1c6f4:	ldr	r3, [pc, #428]	; 1c8a8 <__flatcc_fb_gen_c_verifier@@Base+0xc48>
   1c6f8:	ldr	r2, [pc, #352]	; 1c860 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1c6fc:	str	r3, [sp]
   1c700:	ldr	r1, [pc, #388]	; 1c88c <__flatcc_fb_gen_c_verifier@@Base+0xc2c>
   1c704:	ldr	r3, [pc, #416]	; 1c8ac <__flatcc_fb_gen_c_verifier@@Base+0xc4c>
   1c708:	ldr	r0, [r0]
   1c70c:	bl	140e4 <fprintf@plt>
   1c710:	ldr	r3, [pc, #320]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c714:	ldr	r2, [pc, #400]	; 1c8ac <__flatcc_fb_gen_c_verifier@@Base+0xc4c>
   1c718:	b	1c648 <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
   1c71c:	sub	r3, r3, #1
   1c720:	str	r3, [r4, #220]	; 0xdc
   1c724:	ldr	r1, [pc, #388]	; 1c8b0 <__flatcc_fb_gen_c_verifier@@Base+0xc50>
   1c728:	mov	r0, r4
   1c72c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c730:	ldr	r3, [r4, #220]	; 0xdc
   1c734:	ldr	r1, [pc, #376]	; 1c8b4 <__flatcc_fb_gen_c_verifier@@Base+0xc54>
   1c738:	add	r3, r3, #1
   1c73c:	str	r3, [r4, #220]	; 0xdc
   1c740:	mov	r0, r4
   1c744:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c748:	ldr	r3, [r4, #220]	; 0xdc
   1c74c:	cmp	r3, #0
   1c750:	ldreq	r3, [pc, #256]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c754:	ldreq	r2, [pc, #348]	; 1c8b8 <__flatcc_fb_gen_c_verifier@@Base+0xc58>
   1c758:	beq	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c75c:	sub	r3, r3, #1
   1c760:	str	r3, [r4, #220]	; 0xdc
   1c764:	ldr	r1, [pc, #336]	; 1c8bc <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1c768:	mov	r0, r4
   1c76c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c770:	ldr	r3, [r4, #220]	; 0xdc
   1c774:	cmp	r3, #0
   1c778:	ldreq	r3, [pc, #216]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c77c:	ldreq	r2, [pc, #316]	; 1c8c0 <__flatcc_fb_gen_c_verifier@@Base+0xc60>
   1c780:	beq	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c784:	sub	r3, r3, #1
   1c788:	str	r3, [r4, #220]	; 0xdc
   1c78c:	ldr	r1, [pc, #296]	; 1c8bc <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1c790:	mov	r0, r4
   1c794:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c798:	ldr	r1, [pc, #292]	; 1c8c4 <__flatcc_fb_gen_c_verifier@@Base+0xc64>
   1c79c:	mov	r0, r4
   1c7a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7a4:	ldr	r1, [pc, #284]	; 1c8c8 <__flatcc_fb_gen_c_verifier@@Base+0xc68>
   1c7a8:	mov	r0, r4
   1c7ac:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7b0:	ldr	r3, [r4, #220]	; 0xdc
   1c7b4:	ldr	r1, [pc, #272]	; 1c8cc <__flatcc_fb_gen_c_verifier@@Base+0xc6c>
   1c7b8:	add	r3, r3, #1
   1c7bc:	str	r3, [r4, #220]	; 0xdc
   1c7c0:	mov	r0, r4
   1c7c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7c8:	ldr	r3, [r4, #220]	; 0xdc
   1c7cc:	cmp	r3, #0
   1c7d0:	ldreq	r3, [pc, #128]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c7d4:	ldreq	r2, [pc, #244]	; 1c8d0 <__flatcc_fb_gen_c_verifier@@Base+0xc70>
   1c7d8:	beq	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c7dc:	sub	r3, r3, #1
   1c7e0:	str	r3, [r4, #220]	; 0xdc
   1c7e4:	ldr	r1, [pc, #208]	; 1c8bc <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1c7e8:	mov	r0, r4
   1c7ec:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7f0:	ldr	r1, [pc, #220]	; 1c8d4 <__flatcc_fb_gen_c_verifier@@Base+0xc74>
   1c7f4:	mov	r0, r4
   1c7f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c7fc:	ldr	r3, [r4, #220]	; 0xdc
   1c800:	cmp	r3, #0
   1c804:	ldreq	r3, [pc, #76]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c808:	moveq	r2, #1552	; 0x610
   1c80c:	beq	1c528 <__flatcc_fb_gen_c_verifier@@Base+0x8c8>
   1c810:	sub	r3, r3, #1
   1c814:	str	r3, [r4, #220]	; 0xdc
   1c818:	mov	r0, r4
   1c81c:	ldr	r1, [pc, #152]	; 1c8bc <__flatcc_fb_gen_c_verifier@@Base+0xc5c>
   1c820:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c824:	mov	r0, r4
   1c828:	ldr	r1, [pc, #20]	; 1c844 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1c82c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c830:	mov	r0, r5
   1c834:	add	sp, sp, #448	; 0x1c0
   1c838:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c83c:	andeq	r4, r4, r0, ror #1
   1c840:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1c844:	andeq	r2, r3, sp, lsl pc
   1c848:	andeq	r4, r4, r0, ror r1
   1c84c:	andeq	r4, r4, sp, ror r1
   1c850:	andeq	r4, r4, sp, lsl #3
   1c854:	andeq	r4, r4, r0, lsr #3
   1c858:	muleq	r4, r8, sp
   1c85c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1c860:			; <UNDEFINED> instruction: 0x00043fbb
   1c864:	andeq	r4, r4, r0, lsl r0
   1c868:	andeq	r4, r4, pc, asr #3
   1c86c:	andeq	r4, r4, r6, lsl #5
   1c870:	andeq	r4, r4, pc, ror r2
   1c874:	strdeq	r4, [r4], -r2
   1c878:	strdeq	r4, [r4], -fp
   1c87c:	andeq	r4, r4, r4, lsr r3
   1c880:	andeq	r0, r0, r7, lsl #12
   1c884:	strheq	ip, [r5], -r0
   1c888:	andeq	r4, r4, r8, asr #4
   1c88c:	andeq	r1, r3, sl, ror #22
   1c890:	strdeq	r0, [r0], -r2
   1c894:	andeq	sl, r3, r9, asr #3
   1c898:	andeq	r4, r4, r3, ror #3
   1c89c:	strdeq	r0, [r0], -r6
   1c8a0:	andeq	r4, r4, r5, lsl r2
   1c8a4:	strdeq	r0, [r0], -ip
   1c8a8:	andeq	r4, r4, r4, asr #5
   1c8ac:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1c8b0:	muleq	r4, r0, r3
   1c8b4:	muleq	r4, r9, r3
   1c8b8:	andeq	r0, r0, r9, lsl #12
   1c8bc:	andeq	r8, r3, r3, lsl r1
   1c8c0:	andeq	r0, r0, sl, lsl #12
   1c8c4:	ldrdeq	r4, [r4], -r0
   1c8c8:	andeq	r4, r4, ip, ror #7
   1c8cc:	strdeq	r4, [r4], -ip
   1c8d0:	andeq	r0, r0, lr, lsl #12
   1c8d4:	andeq	r4, r4, r0, ror #7
   1c8d8:	push	{r4, r5, r6, r7, lr}
   1c8dc:	sub	sp, sp, #452	; 0x1c4
   1c8e0:	mov	r4, r0
   1c8e4:	mov	r5, r1
   1c8e8:	mov	r2, #220	; 0xdc
   1c8ec:	mov	r1, #0
   1c8f0:	add	r0, sp, #8
   1c8f4:	bl	140fc <memset@plt>
   1c8f8:	mov	r2, #220	; 0xdc
   1c8fc:	mov	r1, #0
   1c900:	add	r0, sp, #228	; 0xe4
   1c904:	bl	140fc <memset@plt>
   1c908:	mov	r0, r5
   1c90c:	add	r1, sp, #8
   1c910:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1c914:	add	r2, sp, #8
   1c918:	ldr	r1, [pc, #260]	; 1ca24 <__flatcc_fb_gen_c_verifier@@Base+0xdc4>
   1c91c:	mov	r0, r4
   1c920:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c924:	ldr	r1, [pc, #252]	; 1ca28 <__flatcc_fb_gen_c_verifier@@Base+0xdc8>
   1c928:	mov	r0, r4
   1c92c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c930:	ldr	r3, [r4, #220]	; 0xdc
   1c934:	ldr	r1, [pc, #240]	; 1ca2c <__flatcc_fb_gen_c_verifier@@Base+0xdcc>
   1c938:	add	r3, r3, #1
   1c93c:	str	r3, [r4, #220]	; 0xdc
   1c940:	mov	r0, r4
   1c944:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c948:	ldr	r6, [pc, #224]	; 1ca30 <__flatcc_fb_gen_c_verifier@@Base+0xdd0>
   1c94c:	ldr	r5, [r5, #20]
   1c950:	ldr	r7, [pc, #220]	; 1ca34 <__flatcc_fb_gen_c_verifier@@Base+0xdd4>
   1c954:	cmp	r5, #0
   1c958:	bne	1c990 <__flatcc_fb_gen_c_verifier@@Base+0xd30>
   1c95c:	ldr	r1, [pc, #212]	; 1ca38 <__flatcc_fb_gen_c_verifier@@Base+0xdd8>
   1c960:	mov	r0, r4
   1c964:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c968:	ldr	r3, [r4, #220]	; 0xdc
   1c96c:	add	r2, r3, #1
   1c970:	cmp	r2, #0
   1c974:	str	r2, [r4, #220]	; 0xdc
   1c978:	bne	1c9d4 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   1c97c:	ldr	r3, [pc, #184]	; 1ca3c <__flatcc_fb_gen_c_verifier@@Base+0xddc>
   1c980:	ldr	r2, [pc, #184]	; 1ca40 <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   1c984:	ldr	r1, [pc, #184]	; 1ca44 <__flatcc_fb_gen_c_verifier@@Base+0xde4>
   1c988:	ldr	r0, [pc, #184]	; 1ca48 <__flatcc_fb_gen_c_verifier@@Base+0xde8>
   1c98c:	bl	141a4 <__assert_fail@plt>
   1c990:	ldrh	r3, [r5, #24]
   1c994:	cmp	r3, #0
   1c998:	bne	1c9b0 <__flatcc_fb_gen_c_verifier@@Base+0xd50>
   1c99c:	mov	r1, r7
   1c9a0:	mov	r0, r4
   1c9a4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c9a8:	ldr	r5, [r5]
   1c9ac:	b	1c954 <__flatcc_fb_gen_c_verifier@@Base+0xcf4>
   1c9b0:	ldr	r3, [r5, #4]
   1c9b4:	mov	r1, r6
   1c9b8:	mov	r0, r4
   1c9bc:	ldr	r2, [r3]
   1c9c0:	str	r2, [sp]
   1c9c4:	ldr	r3, [r3, #4]
   1c9c8:	ldr	r2, [r5, #48]	; 0x30
   1c9cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c9d0:	b	1c9a8 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   1c9d4:	str	r3, [r4, #220]	; 0xdc
   1c9d8:	ldr	r1, [pc, #108]	; 1ca4c <__flatcc_fb_gen_c_verifier@@Base+0xdec>
   1c9dc:	mov	r0, r4
   1c9e0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c9e4:	ldr	r3, [r4, #220]	; 0xdc
   1c9e8:	cmp	r3, #0
   1c9ec:	ldreq	r3, [pc, #72]	; 1ca3c <__flatcc_fb_gen_c_verifier@@Base+0xddc>
   1c9f0:	ldreq	r2, [pc, #88]	; 1ca50 <__flatcc_fb_gen_c_verifier@@Base+0xdf0>
   1c9f4:	beq	1c984 <__flatcc_fb_gen_c_verifier@@Base+0xd24>
   1c9f8:	sub	r3, r3, #1
   1c9fc:	str	r3, [r4, #220]	; 0xdc
   1ca00:	mov	r0, r4
   1ca04:	ldr	r1, [pc, #64]	; 1ca4c <__flatcc_fb_gen_c_verifier@@Base+0xdec>
   1ca08:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca0c:	mov	r0, r4
   1ca10:	ldr	r1, [pc, #60]	; 1ca54 <__flatcc_fb_gen_c_verifier@@Base+0xdf4>
   1ca14:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ca18:	mov	r0, r5
   1ca1c:	add	sp, sp, #452	; 0x1c4
   1ca20:	pop	{r4, r5, r6, r7, pc}
   1ca24:	andeq	r4, r4, r2, asr r4
   1ca28:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1ca2c:	andeq	r4, r4, sp, ror r1
   1ca30:	andeq	r4, r4, r2, lsr #9
   1ca34:	andeq	r4, r4, r5, lsl #9
   1ca38:	andeq	r4, r4, r0, asr #9
   1ca3c:	andeq	r3, r4, r9, lsr #27
   1ca40:	andeq	r0, r0, lr, lsr #12
   1ca44:			; <UNDEFINED> instruction: 0x00043fbb
   1ca48:	andeq	r4, r4, r0, lsl r0
   1ca4c:	andeq	r8, r3, r3, lsl r1
   1ca50:	andeq	r0, r0, pc, lsr #12
   1ca54:	andeq	r2, r3, sp, lsl pc
   1ca58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca5c:	mov	r5, r1
   1ca60:	sub	sp, sp, #516	; 0x204
   1ca64:	mov	r7, r2
   1ca68:	mov	r1, #0
   1ca6c:	mov	r2, #220	; 0xdc
   1ca70:	mov	r4, r0
   1ca74:	add	r0, sp, #292	; 0x124
   1ca78:	str	r3, [sp, #52]	; 0x34
   1ca7c:	bl	140fc <memset@plt>
   1ca80:	add	r1, sp, #88	; 0x58
   1ca84:	ldr	r0, [r5, #12]
   1ca88:	bl	15a74 <__flatcc_fb_copy_scope@@Base>
   1ca8c:	ldrh	r3, [r5, #8]
   1ca90:	str	r3, [sp, #68]	; 0x44
   1ca94:	sub	r3, r3, #1
   1ca98:	clz	r3, r3
   1ca9c:	lsr	r3, r3, #5
   1caa0:	str	r3, [sp, #80]	; 0x50
   1caa4:	ldrh	r3, [r7, #24]
   1caa8:	cmp	r3, #15
   1caac:	movhi	r8, #0
   1cab0:	bhi	1cac8 <__flatcc_fb_gen_c_verifier@@Base+0xe68>
   1cab4:	mov	r1, #1
   1cab8:	ldr	r2, [pc, #2592]	; 1d4e0 <__flatcc_fb_gen_c_verifier@@Base+0x1880>
   1cabc:	ands	r2, r2, r1, lsl r3
   1cac0:	movne	r8, r1
   1cac4:	moveq	r8, #0
   1cac8:	sub	r3, r3, #7
   1cacc:	cmp	r3, #8
   1cad0:	ldrls	pc, [pc, r3, lsl #2]
   1cad4:	b	1cc9c <__flatcc_fb_gen_c_verifier@@Base+0x103c>
   1cad8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1cadc:	andeq	ip, r1, r0, lsr #24
   1cae0:	andeq	ip, r1, r0, ror ip
   1cae4:	andeq	ip, r1, r0, ror ip
   1cae8:	muleq	r1, ip, ip
   1caec:	muleq	r1, ip, ip
   1caf0:	muleq	r1, ip, ip
   1caf4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1caf8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1cafc:	add	r1, sp, #292	; 0x124
   1cb00:	ldr	r0, [r7, #16]
   1cb04:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1cb08:	ldr	r2, [r7, #16]
   1cb0c:	ldrh	r3, [r2, #8]
   1cb10:	sub	r1, r3, #3
   1cb14:	clz	r1, r1
   1cb18:	lsr	r1, r1, #5
   1cb1c:	str	r1, [sp, #44]	; 0x2c
   1cb20:	sub	r1, r3, #1
   1cb24:	clz	r1, r1
   1cb28:	lsr	r1, r1, #5
   1cb2c:	str	r1, [sp, #24]
   1cb30:	clz	r1, r3
   1cb34:	lsr	r1, r1, #5
   1cb38:	str	r1, [sp, #40]	; 0x28
   1cb3c:	ldr	r1, [sp, #52]	; 0x34
   1cb40:	cmp	r1, #0
   1cb44:	cmpeq	r3, #4
   1cb48:	moveq	r6, #1
   1cb4c:	movne	r6, #0
   1cb50:	beq	1cc30 <__flatcc_fb_gen_c_verifier@@Base+0xfd0>
   1cb54:	cmp	r3, #3
   1cb58:	bne	1cc54 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
   1cb5c:	ldr	r5, [r2, #40]	; 0x28
   1cb60:	mov	sl, #1
   1cb64:	str	r6, [sp, #32]
   1cb68:	str	r6, [sp, #20]
   1cb6c:	str	r6, [sp, #28]
   1cb70:	str	sl, [sp, #44]	; 0x2c
   1cb74:	str	r6, [sp, #36]	; 0x24
   1cb78:	ldr	r3, [sp, #20]
   1cb7c:	ldr	r2, [sp, #32]
   1cb80:	orrs	r3, r3, r2
   1cb84:	str	r3, [sp, #64]	; 0x40
   1cb88:	beq	1ccbc <__flatcc_fb_gen_c_verifier@@Base+0x105c>
   1cb8c:	eor	r6, r8, #1
   1cb90:	cmp	r5, #4
   1cb94:	orrne	r6, r6, #1
   1cb98:	cmp	r6, #0
   1cb9c:	moveq	r5, #4
   1cba0:	moveq	sl, r6
   1cba4:	moveq	r8, r6
   1cba8:	beq	1cccc <__flatcc_fb_gen_c_verifier@@Base+0x106c>
   1cbac:	ldr	r0, [pc, #2352]	; 1d4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1cbb0:	ldr	r3, [pc, #2352]	; 1d4e8 <__flatcc_fb_gen_c_verifier@@Base+0x1888>
   1cbb4:	ldr	r2, [pc, #2352]	; 1d4ec <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1cbb8:	str	r3, [sp]
   1cbbc:	ldr	r1, [pc, #2348]	; 1d4f0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1cbc0:	ldr	r3, [pc, #2348]	; 1d4f4 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1cbc4:	ldr	r0, [r0]
   1cbc8:	bl	140e4 <fprintf@plt>
   1cbcc:	ldr	r3, [pc, #2340]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1cbd0:	ldr	r2, [pc, #2332]	; 1d4f4 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1cbd4:	ldr	r1, [pc, #2320]	; 1d4ec <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1cbd8:	b	1ce44 <__flatcc_fb_gen_c_verifier@@Base+0x11e4>
   1cbdc:	ldr	r6, [r7, #104]	; 0x68
   1cbe0:	ldrh	r3, [r7, #72]	; 0x48
   1cbe4:	adds	r6, r6, #0
   1cbe8:	movne	r6, #1
   1cbec:	and	r2, r3, #1024	; 0x400
   1cbf0:	and	r3, r3, #2048	; 0x800
   1cbf4:	str	r2, [sp, #20]
   1cbf8:	str	r3, [sp, #32]
   1cbfc:	ldr	r5, [r7, #16]
   1cc00:	mov	sl, #1
   1cc04:	mov	r3, #0
   1cc08:	str	r3, [sp, #28]
   1cc0c:	str	r3, [sp, #24]
   1cc10:	str	r3, [sp, #40]	; 0x28
   1cc14:	str	r3, [sp, #44]	; 0x2c
   1cc18:	str	r3, [sp, #36]	; 0x24
   1cc1c:	b	1cb78 <__flatcc_fb_gen_c_verifier@@Base+0xf18>
   1cc20:	mov	r6, #0
   1cc24:	str	r6, [sp, #32]
   1cc28:	str	r6, [sp, #20]
   1cc2c:	b	1cbfc <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   1cc30:	mov	r5, #0
   1cc34:	mov	r6, r5
   1cc38:	mov	sl, r5
   1cc3c:	mov	r3, #1
   1cc40:	str	r5, [sp, #32]
   1cc44:	str	r5, [sp, #20]
   1cc48:	str	r3, [sp, #28]
   1cc4c:	str	r5, [sp, #36]	; 0x24
   1cc50:	b	1cb78 <__flatcc_fb_gen_c_verifier@@Base+0xf18>
   1cc54:	mov	r5, r6
   1cc58:	str	r6, [sp, #32]
   1cc5c:	str	r6, [sp, #20]
   1cc60:	str	r6, [sp, #28]
   1cc64:	mov	sl, r6
   1cc68:	str	r6, [sp, #44]	; 0x2c
   1cc6c:	b	1cc4c <__flatcc_fb_gen_c_verifier@@Base+0xfec>
   1cc70:	mov	r5, #0
   1cc74:	mov	r6, r5
   1cc78:	str	r5, [sp, #32]
   1cc7c:	str	r5, [sp, #20]
   1cc80:	str	r5, [sp, #28]
   1cc84:	str	r5, [sp, #24]
   1cc88:	str	r5, [sp, #40]	; 0x28
   1cc8c:	mov	sl, r5
   1cc90:	str	r5, [sp, #44]	; 0x2c
   1cc94:	mov	r3, #1
   1cc98:	b	1cc18 <__flatcc_fb_gen_c_verifier@@Base+0xfb8>
   1cc9c:	mov	r5, #0
   1cca0:	mov	r6, r5
   1cca4:	mov	sl, r5
   1cca8:	str	r5, [sp, #28]
   1ccac:	str	r5, [sp, #24]
   1ccb0:	str	r5, [sp, #40]	; 0x28
   1ccb4:	str	r5, [sp, #44]	; 0x2c
   1ccb8:	str	r5, [sp, #36]	; 0x24
   1ccbc:	mov	r3, #0
   1ccc0:	str	r3, [sp, #64]	; 0x40
   1ccc4:	str	r3, [sp, #32]
   1ccc8:	str	r3, [sp, #20]
   1cccc:	ldr	r3, [sp, #52]	; 0x34
   1ccd0:	cmp	r3, #0
   1ccd4:	andne	r3, r8, #1
   1ccd8:	moveq	r3, #0
   1ccdc:	movne	sl, #0
   1cce0:	cmp	r3, #0
   1cce4:	movne	r3, #1
   1cce8:	moveq	r3, #0
   1ccec:	str	r3, [sp, #76]	; 0x4c
   1ccf0:	ldr	r3, [sp, #28]
   1ccf4:	movne	r8, #0
   1ccf8:	ands	r3, r8, r3
   1ccfc:	movne	r8, #0
   1cd00:	cmp	r6, #1
   1cd04:	str	r3, [sp, #72]	; 0x48
   1cd08:	bne	1cd24 <__flatcc_fb_gen_c_verifier@@Base+0x10c4>
   1cd0c:	ldr	r1, [pc, #2024]	; 1d4fc <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1cd10:	mov	r0, r4
   1cd14:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cd18:	ldr	r3, [r4, #220]	; 0xdc
   1cd1c:	add	r3, r3, #1
   1cd20:	str	r3, [r4, #220]	; 0xdc
   1cd24:	ldr	fp, [pc, #2004]	; 1d500 <__flatcc_fb_gen_c_verifier@@Base+0x18a0>
   1cd28:	cmp	r6, #2
   1cd2c:	mov	r9, fp
   1cd30:	bne	1cdc0 <__flatcc_fb_gen_c_verifier@@Base+0x1160>
   1cd34:	ldr	r3, [r4, #220]	; 0xdc
   1cd38:	cmp	r3, #0
   1cd3c:	bne	1cd5c <__flatcc_fb_gen_c_verifier@@Base+0x10fc>
   1cd40:	ldr	r3, [pc, #1968]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1cd44:	ldr	r2, [pc, #1976]	; 1d504 <__flatcc_fb_gen_c_verifier@@Base+0x18a4>
   1cd48:	ldr	r1, [pc, #1948]	; 1d4ec <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1cd4c:	ldr	r0, [pc, #1972]	; 1d508 <__flatcc_fb_gen_c_verifier@@Base+0x18a8>
   1cd50:	bl	141a4 <__assert_fail@plt>
   1cd54:	mov	r6, #2
   1cd58:	b	1cd34 <__flatcc_fb_gen_c_verifier@@Base+0x10d4>
   1cd5c:	sub	r3, r3, #1
   1cd60:	str	r3, [r4, #220]	; 0xdc
   1cd64:	ldr	r1, [pc, #1952]	; 1d50c <__flatcc_fb_gen_c_verifier@@Base+0x18ac>
   1cd68:	mov	r0, r4
   1cd6c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cd70:	ldr	r3, [r4, #220]	; 0xdc
   1cd74:	add	r1, sp, #292	; 0x124
   1cd78:	add	r3, r3, #1
   1cd7c:	str	r3, [r4, #220]	; 0xdc
   1cd80:	ldr	r0, [r7, #104]	; 0x68
   1cd84:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1cd88:	ldr	r3, [r7, #104]	; 0x68
   1cd8c:	ldr	r1, [pc, #1916]	; 1d510 <__flatcc_fb_gen_c_verifier@@Base+0x18b0>
   1cd90:	mov	r0, r4
   1cd94:	ldrh	r3, [r3, #8]
   1cd98:	mov	sl, #0
   1cd9c:	mov	r8, sl
   1cda0:	cmp	r3, #0
   1cda4:	ldr	r3, [sp, #40]	; 0x28
   1cda8:	moveq	r3, #1
   1cdac:	str	r3, [sp, #40]	; 0x28
   1cdb0:	ldr	r3, [sp, #24]
   1cdb4:	movne	r3, #1
   1cdb8:	str	r3, [sp, #24]
   1cdbc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cdc0:	ldr	r3, [sp, #24]
   1cdc4:	ldr	r2, [sp, #52]	; 0x34
   1cdc8:	orr	r3, sl, r3
   1cdcc:	orr	r3, r3, r2
   1cdd0:	cmp	sl, #0
   1cdd4:	str	r3, [sp, #48]	; 0x30
   1cdd8:	beq	1d4d4 <__flatcc_fb_gen_c_verifier@@Base+0x1874>
   1cddc:	sub	r3, r5, #1
   1cde0:	cmp	r3, #10
   1cde4:	ldrls	pc, [pc, r3, lsl #2]
   1cde8:	b	1ce18 <__flatcc_fb_gen_c_verifier@@Base+0x11b8>
   1cdec:			; <UNDEFINED> instruction: 0x0001d4bc
   1cdf0:			; <UNDEFINED> instruction: 0x0001d4b0
   1cdf4:	andeq	sp, r1, r8, asr #9
   1cdf8:	andeq	ip, r1, ip, asr #28
   1cdfc:	andeq	ip, r1, ip, ror #30
   1ce00:	andeq	ip, r1, r8, lsr #30
   1ce04:	andeq	ip, r1, r4, lsr pc
   1ce08:	andeq	ip, r1, r0, asr #30
   1ce0c:	andeq	ip, r1, ip, asr #30
   1ce10:	andeq	ip, r1, r4, ror #30
   1ce14:	andeq	ip, r1, r8, asr pc
   1ce18:	ldr	r0, [pc, #1732]	; 1d4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1ce1c:	ldr	r3, [pc, #1776]	; 1d514 <__flatcc_fb_gen_c_verifier@@Base+0x18b4>
   1ce20:	ldr	r2, [pc, #1776]	; 1d518 <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1ce24:	str	r3, [sp]
   1ce28:	ldr	r1, [pc, #1728]	; 1d4f0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1ce2c:	mov	r3, #96	; 0x60
   1ce30:	ldr	r0, [r0]
   1ce34:	bl	140e4 <fprintf@plt>
   1ce38:	ldr	r3, [pc, #1756]	; 1d51c <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   1ce3c:	ldr	r1, [pc, #1748]	; 1d518 <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1ce40:	mov	r2, #96	; 0x60
   1ce44:	ldr	r0, [pc, #1748]	; 1d520 <__flatcc_fb_gen_c_verifier@@Base+0x18c0>
   1ce48:	b	1cd50 <__flatcc_fb_gen_c_verifier@@Base+0x10f0>
   1ce4c:	ldr	fp, [pc, #1744]	; 1d524 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1ce50:	ldr	r9, [pc, #1744]	; 1d528 <__flatcc_fb_gen_c_verifier@@Base+0x18c8>
   1ce54:	cmp	r8, #0
   1ce58:	beq	1cea0 <__flatcc_fb_gen_c_verifier@@Base+0x1240>
   1ce5c:	ldr	r3, [sp, #48]	; 0x30
   1ce60:	cmp	r3, #0
   1ce64:	bne	1cf78 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
   1ce68:	ldr	r1, [pc, #1724]	; 1d52c <__flatcc_fb_gen_c_verifier@@Base+0x18cc>
   1ce6c:	mov	r0, r4
   1ce70:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce74:	ldr	r1, [pc, #1716]	; 1d530 <__flatcc_fb_gen_c_verifier@@Base+0x18d0>
   1ce78:	mov	r0, r4
   1ce7c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce80:	ldr	r1, [pc, #1708]	; 1d534 <__flatcc_fb_gen_c_verifier@@Base+0x18d4>
   1ce84:	mov	r0, r4
   1ce88:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ce8c:	ldr	r3, [r4, #220]	; 0xdc
   1ce90:	cmp	sl, #0
   1ce94:	add	r3, r3, #1
   1ce98:	str	r3, [r4, #220]	; 0xdc
   1ce9c:	beq	1cfe4 <__flatcc_fb_gen_c_verifier@@Base+0x1384>
   1cea0:	mov	r2, fp
   1cea4:	ldr	r1, [pc, #1676]	; 1d538 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
   1cea8:	mov	r0, r4
   1ceac:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ceb0:	ldr	r1, [pc, #1668]	; 1d53c <__flatcc_fb_gen_c_verifier@@Base+0x18dc>
   1ceb4:	mov	r0, r4
   1ceb8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cebc:	ldr	r3, [r4, #220]	; 0xdc
   1cec0:	add	r3, r3, #2
   1cec4:	str	r3, [r4, #220]	; 0xdc
   1cec8:	ldr	r3, [sp, #44]	; 0x2c
   1cecc:	cmp	r3, #0
   1ced0:	beq	1cee4 <__flatcc_fb_gen_c_verifier@@Base+0x1284>
   1ced4:	add	r2, sp, #292	; 0x124
   1ced8:	ldr	r1, [pc, #1632]	; 1d540 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1cedc:	mov	r0, r4
   1cee0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cee4:	ldr	r2, [r4, #208]	; 0xd0
   1cee8:	add	r3, sp, #88	; 0x58
   1ceec:	ldr	r1, [pc, #1616]	; 1d544 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1cef0:	ldr	r2, [r2, #160]	; 0xa0
   1cef4:	mov	r0, r4
   1cef8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cefc:	ldr	r3, [r4, #208]	; 0xd0
   1cf00:	ldr	r1, [pc, #1600]	; 1d548 <__flatcc_fb_gen_c_verifier@@Base+0x18e8>
   1cf04:	mov	r0, r4
   1cf08:	ldr	r2, [r3, #160]	; 0xa0
   1cf0c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cf10:	ldr	r3, [r4, #220]	; 0xdc
   1cf14:	cmp	r3, #0
   1cf18:	bne	1cfcc <__flatcc_fb_gen_c_verifier@@Base+0x136c>
   1cf1c:	ldr	r3, [pc, #1492]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1cf20:	ldr	r2, [pc, #1572]	; 1d54c <__flatcc_fb_gen_c_verifier@@Base+0x18ec>
   1cf24:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1cf28:	ldr	fp, [pc, #1568]	; 1d550 <__flatcc_fb_gen_c_verifier@@Base+0x18f0>
   1cf2c:	ldr	r9, [pc, #1568]	; 1d554 <__flatcc_fb_gen_c_verifier@@Base+0x18f4>
   1cf30:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf34:	ldr	fp, [pc, #1564]	; 1d558 <__flatcc_fb_gen_c_verifier@@Base+0x18f8>
   1cf38:	ldr	r9, [pc, #1564]	; 1d55c <__flatcc_fb_gen_c_verifier@@Base+0x18fc>
   1cf3c:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf40:	ldr	fp, [pc, #1560]	; 1d560 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1cf44:	ldr	r9, [pc, #1560]	; 1d564 <__flatcc_fb_gen_c_verifier@@Base+0x1904>
   1cf48:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf4c:	ldr	fp, [pc, #1556]	; 1d568 <__flatcc_fb_gen_c_verifier@@Base+0x1908>
   1cf50:	ldr	r9, [pc, #1556]	; 1d56c <__flatcc_fb_gen_c_verifier@@Base+0x190c>
   1cf54:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf58:	ldr	fp, [pc, #1552]	; 1d570 <__flatcc_fb_gen_c_verifier@@Base+0x1910>
   1cf5c:	mov	r9, fp
   1cf60:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf64:	ldr	fp, [pc, #1544]	; 1d574 <__flatcc_fb_gen_c_verifier@@Base+0x1914>
   1cf68:	b	1cf5c <__flatcc_fb_gen_c_verifier@@Base+0x12fc>
   1cf6c:	ldr	fp, [pc, #1456]	; 1d524 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1cf70:	ldr	r9, [pc, #1536]	; 1d578 <__flatcc_fb_gen_c_verifier@@Base+0x1918>
   1cf74:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1cf78:	ldrd	r2, [r7, #88]	; 0x58
   1cf7c:	strd	r2, [sp, #56]	; 0x38
   1cf80:	ldrsh	r3, [r7, #74]	; 0x4a
   1cf84:	str	r3, [sp, #84]	; 0x54
   1cf88:	ldrd	r2, [sp, #56]	; 0x38
   1cf8c:	orrs	r3, r2, r3
   1cf90:	mvneq	r0, #0
   1cf94:	moveq	r1, #0
   1cf98:	beq	1cfac <__flatcc_fb_gen_c_verifier@@Base+0x134c>
   1cf9c:	ldrd	r2, [sp, #56]	; 0x38
   1cfa0:	mvn	r0, #0
   1cfa4:	mov	r1, #0
   1cfa8:	bl	2fcac <fb_value_set_visit@@Base+0x834>
   1cfac:	ldr	r3, [sp, #84]	; 0x54
   1cfb0:	strd	r0, [sp, #8]
   1cfb4:	str	r3, [sp]
   1cfb8:	ldr	r1, [pc, #1468]	; 1d57c <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1cfbc:	ldrd	r2, [sp, #56]	; 0x38
   1cfc0:	mov	r0, r4
   1cfc4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1cfc8:	b	1ce74 <__flatcc_fb_gen_c_verifier@@Base+0x1214>
   1cfcc:	cmp	r3, #1
   1cfd0:	moveq	r3, #0
   1cfd4:	streq	r3, [r4, #220]	; 0xdc
   1cfd8:	beq	1cf1c <__flatcc_fb_gen_c_verifier@@Base+0x12bc>
   1cfdc:	sub	r3, r3, #2
   1cfe0:	str	r3, [r4, #220]	; 0xdc
   1cfe4:	ldr	r3, [sp, #48]	; 0x30
   1cfe8:	cmp	r3, #0
   1cfec:	moveq	r3, #0
   1cff0:	andne	r3, r8, #1
   1cff4:	cmp	r3, #0
   1cff8:	beq	1d008 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   1cffc:	ldr	r1, [pc, #1404]	; 1d580 <__flatcc_fb_gen_c_verifier@@Base+0x1920>
   1d000:	mov	r0, r4
   1d004:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d008:	ldr	r3, [sp, #68]	; 0x44
   1d00c:	cmp	r3, #1
   1d010:	bne	1d088 <__flatcc_fb_gen_c_verifier@@Base+0x1428>
   1d014:	ldrd	r2, [r7, #80]	; 0x50
   1d018:	ldr	r1, [pc, #1380]	; 1d584 <__flatcc_fb_gen_c_verifier@@Base+0x1924>
   1d01c:	mov	r0, r4
   1d020:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d024:	cmp	sl, #0
   1d028:	beq	1d1dc <__flatcc_fb_gen_c_verifier@@Base+0x157c>
   1d02c:	mov	r2, r9
   1d030:	ldr	r1, [pc, #1360]	; 1d588 <__flatcc_fb_gen_c_verifier@@Base+0x1928>
   1d034:	mov	r0, r4
   1d038:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d03c:	ldr	r1, [pc, #1352]	; 1d58c <__flatcc_fb_gen_c_verifier@@Base+0x192c>
   1d040:	mov	r0, r4
   1d044:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d048:	ldr	r3, [r4, #220]	; 0xdc
   1d04c:	mov	r2, r9
   1d050:	add	r3, r3, #1
   1d054:	str	r3, [r4, #220]	; 0xdc
   1d058:	ldr	r1, [pc, #1328]	; 1d590 <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   1d05c:	mov	r0, r4
   1d060:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d064:	ldr	r1, [pc, #1320]	; 1d594 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   1d068:	mov	r0, r4
   1d06c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d070:	ldr	r3, [r4, #220]	; 0xdc
   1d074:	cmp	r3, #0
   1d078:	bne	1d0bc <__flatcc_fb_gen_c_verifier@@Base+0x145c>
   1d07c:	ldr	r3, [pc, #1140]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d080:	ldr	r2, [pc, #1296]	; 1d598 <__flatcc_fb_gen_c_verifier@@Base+0x1938>
   1d084:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1d088:	ldr	r2, [sp, #24]
   1d08c:	eor	r3, r8, #1
   1d090:	tst	r3, r2
   1d094:	beq	1d024 <__flatcc_fb_gen_c_verifier@@Base+0x13c4>
   1d098:	ldrh	r3, [r7, #74]	; 0x4a
   1d09c:	ldr	r1, [pc, #1272]	; 1d59c <__flatcc_fb_gen_c_verifier@@Base+0x193c>
   1d0a0:	mov	r0, r4
   1d0a4:	str	r3, [sp, #8]
   1d0a8:	ldrd	r2, [r7, #88]	; 0x58
   1d0ac:	strd	r2, [sp]
   1d0b0:	ldrd	r2, [r7, #96]	; 0x60
   1d0b4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d0b8:	b	1d024 <__flatcc_fb_gen_c_verifier@@Base+0x13c4>
   1d0bc:	sub	r3, r3, #1
   1d0c0:	str	r3, [r4, #220]	; 0xdc
   1d0c4:	ldr	r1, [pc, #1236]	; 1d5a0 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1d0c8:	mov	r0, r4
   1d0cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d0d0:	ldr	r3, [sp, #80]	; 0x50
   1d0d4:	orr	sl, r8, r3
   1d0d8:	ldr	r3, [sp, #64]	; 0x40
   1d0dc:	orrs	r3, sl, r3
   1d0e0:	bne	1d144 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   1d0e4:	ldrh	r3, [r7, #56]	; 0x38
   1d0e8:	sub	r3, r3, #3
   1d0ec:	cmp	r3, #3
   1d0f0:	ldrls	pc, [pc, r3, lsl #2]
   1d0f4:	b	1d198 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   1d0f8:	andeq	sp, r1, r4, lsl #3
   1d0fc:	andeq	sp, r1, r8, ror r1
   1d100:	andeq	sp, r1, r8, lsl #2
   1d104:	andeq	sp, r1, r8, lsl #2
   1d108:	ldrd	r2, [r7, #48]	; 0x30
   1d10c:	ldr	r1, [pc, #1168]	; 1d5a4 <__flatcc_fb_gen_c_verifier@@Base+0x1944>
   1d110:	mov	r0, r4
   1d114:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d118:	ldr	r3, [r4, #220]	; 0xdc
   1d11c:	ldr	r1, [pc, #1156]	; 1d5a8 <__flatcc_fb_gen_c_verifier@@Base+0x1948>
   1d120:	add	r3, r3, #1
   1d124:	str	r3, [r4, #220]	; 0xdc
   1d128:	ldrsh	r3, [r7, #74]	; 0x4a
   1d12c:	mov	r0, r4
   1d130:	str	r3, [sp, #8]
   1d134:	ldrd	r2, [r7, #88]	; 0x58
   1d138:	strd	r2, [sp]
   1d13c:	ldrd	r2, [r7, #96]	; 0x60
   1d140:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d144:	mov	r3, r9
   1d148:	mov	r2, r4
   1d14c:	ldr	r1, [pc, #1112]	; 1d5ac <__flatcc_fb_gen_c_verifier@@Base+0x194c>
   1d150:	mov	r0, r4
   1d154:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d158:	cmp	sl, #0
   1d15c:	bne	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1d160:	ldr	r3, [r4, #220]	; 0xdc
   1d164:	cmp	r3, #0
   1d168:	bne	1d1c4 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   1d16c:	ldr	r3, [pc, #900]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d170:	ldr	r2, [pc, #1080]	; 1d5b0 <__flatcc_fb_gen_c_verifier@@Base+0x1950>
   1d174:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1d178:	ldrd	r2, [r7, #48]	; 0x30
   1d17c:	ldr	r1, [pc, #1072]	; 1d5b4 <__flatcc_fb_gen_c_verifier@@Base+0x1954>
   1d180:	b	1d110 <__flatcc_fb_gen_c_verifier@@Base+0x14b0>
   1d184:	ldrd	r2, [r7, #48]	; 0x30
   1d188:	ldr	r1, [pc, #1064]	; 1d5b8 <__flatcc_fb_gen_c_verifier@@Base+0x1958>
   1d18c:	mov	r0, r4
   1d190:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d194:	b	1d118 <__flatcc_fb_gen_c_verifier@@Base+0x14b8>
   1d198:	ldr	r0, [pc, #836]	; 1d4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1d19c:	ldr	r3, [pc, #1048]	; 1d5bc <__flatcc_fb_gen_c_verifier@@Base+0x195c>
   1d1a0:	ldr	r2, [pc, #836]	; 1d4ec <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1d1a4:	str	r3, [sp]
   1d1a8:	ldr	r1, [pc, #832]	; 1d4f0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1d1ac:	ldr	r3, [pc, #1036]	; 1d5c0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1d1b0:	ldr	r0, [r0]
   1d1b4:	bl	140e4 <fprintf@plt>
   1d1b8:	ldr	r3, [pc, #824]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d1bc:	ldr	r2, [pc, #1020]	; 1d5c0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1d1c0:	b	1cbd4 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   1d1c4:	ldr	r1, [pc, #980]	; 1d5a0 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1d1c8:	sub	r3, r3, #1
   1d1cc:	str	r3, [r4, #220]	; 0xdc
   1d1d0:	mov	r0, r4
   1d1d4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d1d8:	b	1d210 <__flatcc_fb_gen_c_verifier@@Base+0x15b0>
   1d1dc:	ldr	r3, [sp, #24]
   1d1e0:	cmp	r3, #0
   1d1e4:	addne	r2, sp, #292	; 0x124
   1d1e8:	ldrne	r1, [pc, #980]	; 1d5c4 <__flatcc_fb_gen_c_verifier@@Base+0x1964>
   1d1ec:	bne	1d26c <__flatcc_fb_gen_c_verifier@@Base+0x160c>
   1d1f0:	ldr	r3, [sp, #36]	; 0x24
   1d1f4:	cmp	r3, #0
   1d1f8:	beq	1d250 <__flatcc_fb_gen_c_verifier@@Base+0x15f0>
   1d1fc:	ldr	r1, [pc, #964]	; 1d5c8 <__flatcc_fb_gen_c_verifier@@Base+0x1968>
   1d200:	mov	r0, r4
   1d204:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d208:	cmp	r8, #0
   1d20c:	bne	1d3b0 <__flatcc_fb_gen_c_verifier@@Base+0x1750>
   1d210:	cmp	r6, #1
   1d214:	beq	1cd54 <__flatcc_fb_gen_c_verifier@@Base+0x10f4>
   1d218:	cmp	r6, #2
   1d21c:	bne	1d460 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1d220:	ldr	r1, [pc, #932]	; 1d5cc <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1d224:	mov	r0, r4
   1d228:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d22c:	ldr	r1, [pc, #924]	; 1d5d0 <__flatcc_fb_gen_c_verifier@@Base+0x1970>
   1d230:	mov	r0, r4
   1d234:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d238:	ldr	r3, [r4, #220]	; 0xdc
   1d23c:	cmp	r3, #0
   1d240:	bne	1d44c <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1d244:	ldr	r3, [pc, #684]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d248:	ldr	r2, [pc, #900]	; 1d5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1974>
   1d24c:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1d250:	ldr	r3, [sp, #64]	; 0x40
   1d254:	cmp	r3, #0
   1d258:	beq	1d278 <__flatcc_fb_gen_c_verifier@@Base+0x1618>
   1d25c:	ldr	r1, [pc, #884]	; 1d5d8 <__flatcc_fb_gen_c_verifier@@Base+0x1978>
   1d260:	ldr	r3, [sp, #20]
   1d264:	clz	r2, r3
   1d268:	lsr	r2, r2, #5
   1d26c:	mov	r0, r4
   1d270:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d274:	b	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1d278:	ldr	r3, [sp, #40]	; 0x28
   1d27c:	cmp	r3, #0
   1d280:	addne	r2, sp, #292	; 0x124
   1d284:	ldrne	r1, [pc, #848]	; 1d5dc <__flatcc_fb_gen_c_verifier@@Base+0x197c>
   1d288:	bne	1d26c <__flatcc_fb_gen_c_verifier@@Base+0x160c>
   1d28c:	ldr	r3, [sp, #28]
   1d290:	cmp	r3, #0
   1d294:	beq	1d2cc <__flatcc_fb_gen_c_verifier@@Base+0x166c>
   1d298:	ldr	r3, [sp, #72]	; 0x48
   1d29c:	ldrd	r0, [r7, #96]	; 0x60
   1d2a0:	cmp	r3, #0
   1d2a4:	ldr	r2, [r7, #112]	; 0x70
   1d2a8:	add	r3, sp, #292	; 0x124
   1d2ac:	strd	r0, [sp]
   1d2b0:	ldrne	r1, [pc, #808]	; 1d5e0 <__flatcc_fb_gen_c_verifier@@Base+0x1980>
   1d2b4:	ldreq	r1, [pc, #808]	; 1d5e4 <__flatcc_fb_gen_c_verifier@@Base+0x1984>
   1d2b8:	str	r3, [sp, #8]
   1d2bc:	mov	r3, #0
   1d2c0:	mov	r0, r4
   1d2c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d2c8:	b	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1d2cc:	ldr	r3, [sp, #52]	; 0x34
   1d2d0:	cmp	r3, #0
   1d2d4:	beq	1d3a8 <__flatcc_fb_gen_c_verifier@@Base+0x1748>
   1d2d8:	ldr	r1, [pc, #604]	; 1d53c <__flatcc_fb_gen_c_verifier@@Base+0x18dc>
   1d2dc:	mov	r0, r4
   1d2e0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d2e4:	ldr	r3, [r4, #220]	; 0xdc
   1d2e8:	add	r2, sp, #292	; 0x124
   1d2ec:	add	r3, r3, #2
   1d2f0:	str	r3, [r4, #220]	; 0xdc
   1d2f4:	ldr	r1, [pc, #580]	; 1d540 <__flatcc_fb_gen_c_verifier@@Base+0x18e0>
   1d2f8:	mov	r0, r4
   1d2fc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d300:	ldr	r2, [r4, #208]	; 0xd0
   1d304:	add	r3, sp, #88	; 0x58
   1d308:	ldr	r1, [pc, #564]	; 1d544 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1d30c:	ldr	r2, [r2, #160]	; 0xa0
   1d310:	mov	r0, r4
   1d314:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d318:	ldr	r3, [r4, #208]	; 0xd0
   1d31c:	ldr	r1, [pc, #548]	; 1d548 <__flatcc_fb_gen_c_verifier@@Base+0x18e8>
   1d320:	mov	r0, r4
   1d324:	ldr	r2, [r3, #160]	; 0xa0
   1d328:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d32c:	ldr	r3, [r4, #220]	; 0xdc
   1d330:	cmp	r3, #0
   1d334:	bne	1d344 <__flatcc_fb_gen_c_verifier@@Base+0x16e4>
   1d338:	ldr	r3, [pc, #440]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d33c:	ldr	r2, [pc, #676]	; 1d5e8 <__flatcc_fb_gen_c_verifier@@Base+0x1988>
   1d340:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1d344:	cmp	r3, #1
   1d348:	ldreq	r3, [sp, #28]
   1d34c:	streq	r3, [r4, #220]	; 0xdc
   1d350:	beq	1d338 <__flatcc_fb_gen_c_verifier@@Base+0x16d8>
   1d354:	sub	r3, r3, #2
   1d358:	str	r3, [r4, #220]	; 0xdc
   1d35c:	ldr	r3, [sp, #76]	; 0x4c
   1d360:	ldrd	r0, [r7, #96]	; 0x60
   1d364:	cmp	r3, #0
   1d368:	ldr	r2, [r7, #112]	; 0x70
   1d36c:	add	r3, sp, #292	; 0x124
   1d370:	beq	1d394 <__flatcc_fb_gen_c_verifier@@Base+0x1734>
   1d374:	strd	r0, [sp]
   1d378:	str	r3, [sp, #12]
   1d37c:	str	r3, [sp, #8]
   1d380:	ldr	r1, [pc, #612]	; 1d5ec <__flatcc_fb_gen_c_verifier@@Base+0x198c>
   1d384:	mov	r3, #0
   1d388:	mov	r0, r4
   1d38c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d390:	b	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   1d394:	str	r3, [sp, #8]
   1d398:	strd	r0, [sp]
   1d39c:	mov	r3, #0
   1d3a0:	ldr	r1, [pc, #584]	; 1d5f0 <__flatcc_fb_gen_c_verifier@@Base+0x1990>
   1d3a4:	b	1d2c0 <__flatcc_fb_gen_c_verifier@@Base+0x1660>
   1d3a8:	cmp	r8, #0
   1d3ac:	beq	1d3f8 <__flatcc_fb_gen_c_verifier@@Base+0x1798>
   1d3b0:	ldr	r3, [sp, #48]	; 0x30
   1d3b4:	cmp	r3, #0
   1d3b8:	bne	1d3d4 <__flatcc_fb_gen_c_verifier@@Base+0x1774>
   1d3bc:	ldr	r1, [pc, #560]	; 1d5f4 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   1d3c0:	mov	r0, r4
   1d3c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d3c8:	ldr	r1, [pc, #552]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   1d3cc:	mov	r0, r4
   1d3d0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d3d4:	ldr	r1, [pc, #544]	; 1d5fc <__flatcc_fb_gen_c_verifier@@Base+0x199c>
   1d3d8:	mov	r0, r4
   1d3dc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d3e0:	ldr	r3, [r4, #220]	; 0xdc
   1d3e4:	cmp	r3, #0
   1d3e8:	bne	1d424 <__flatcc_fb_gen_c_verifier@@Base+0x17c4>
   1d3ec:	ldr	r3, [pc, #260]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d3f0:	ldr	r2, [pc, #520]	; 1d600 <__flatcc_fb_gen_c_verifier@@Base+0x19a0>
   1d3f4:	b	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x10e8>
   1d3f8:	ldr	r0, [pc, #228]	; 1d4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1d3fc:	ldr	r3, [pc, #512]	; 1d604 <__flatcc_fb_gen_c_verifier@@Base+0x19a4>
   1d400:	ldr	r2, [pc, #228]	; 1d4ec <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1d404:	str	r3, [sp]
   1d408:	ldr	r1, [pc, #224]	; 1d4f0 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1d40c:	mov	r3, #636	; 0x27c
   1d410:	ldr	r0, [r0]
   1d414:	bl	140e4 <fprintf@plt>
   1d418:	ldr	r3, [pc, #216]	; 1d4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1d41c:	mov	r2, #636	; 0x27c
   1d420:	b	1cbd4 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   1d424:	sub	r3, r3, #1
   1d428:	ldr	r1, [pc, #368]	; 1d5a0 <__flatcc_fb_gen_c_verifier@@Base+0x1940>
   1d42c:	str	r3, [r4, #220]	; 0xdc
   1d430:	mov	r0, r4
   1d434:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d438:	ldr	r3, [sp, #48]	; 0x30
   1d43c:	cmp	r3, #0
   1d440:	ldreq	r1, [pc, #448]	; 1d608 <__flatcc_fb_gen_c_verifier@@Base+0x19a8>
   1d444:	ldrne	r1, [pc, #448]	; 1d60c <__flatcc_fb_gen_c_verifier@@Base+0x19ac>
   1d448:	b	1d1d0 <__flatcc_fb_gen_c_verifier@@Base+0x1570>
   1d44c:	sub	r3, r3, #1
   1d450:	str	r3, [r4, #220]	; 0xdc
   1d454:	ldr	r1, [pc, #436]	; 1d610 <__flatcc_fb_gen_c_verifier@@Base+0x19b0>
   1d458:	mov	r0, r4
   1d45c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d460:	ldr	r2, [sp, #36]	; 0x24
   1d464:	ldr	r3, [sp, #20]
   1d468:	orr	r3, r3, r2
   1d46c:	ldr	r2, [sp, #32]
   1d470:	orr	r3, r3, r2
   1d474:	ldr	r2, [sp, #40]	; 0x28
   1d478:	orr	r3, r3, r2
   1d47c:	orr	r6, r3, r6
   1d480:	orrs	r3, r6, r8
   1d484:	beq	1d4a4 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   1d488:	ldr	r1, [pc, #388]	; 1d614 <__flatcc_fb_gen_c_verifier@@Base+0x19b4>
   1d48c:	mov	r0, r4
   1d490:	ldrd	r2, [r7, #96]	; 0x60
   1d494:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d498:	ldr	r1, [pc, #344]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x1998>
   1d49c:	mov	r0, r4
   1d4a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d4a4:	mov	r0, #0
   1d4a8:	add	sp, sp, #516	; 0x204
   1d4ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4b0:	ldr	fp, [pc, #352]	; 1d618 <__flatcc_fb_gen_c_verifier@@Base+0x19b8>
   1d4b4:	ldr	r9, [pc, #352]	; 1d61c <__flatcc_fb_gen_c_verifier@@Base+0x19bc>
   1d4b8:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1d4bc:	ldr	fp, [pc, #348]	; 1d620 <__flatcc_fb_gen_c_verifier@@Base+0x19c0>
   1d4c0:	ldr	r9, [pc, #348]	; 1d624 <__flatcc_fb_gen_c_verifier@@Base+0x19c4>
   1d4c4:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1d4c8:	ldr	fp, [pc, #344]	; 1d628 <__flatcc_fb_gen_c_verifier@@Base+0x19c8>
   1d4cc:	ldr	r9, [pc, #344]	; 1d62c <__flatcc_fb_gen_c_verifier@@Base+0x19cc>
   1d4d0:	b	1ce54 <__flatcc_fb_gen_c_verifier@@Base+0x11f4>
   1d4d4:	cmp	r8, #0
   1d4d8:	bne	1ce5c <__flatcc_fb_gen_c_verifier@@Base+0x11fc>
   1d4dc:	b	1d008 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   1d4e0:	andeq	r8, r0, r0, lsl #5
   1d4e4:	strheq	ip, [r5], -r0
   1d4e8:	ldrdeq	r4, [r4], -r7
   1d4ec:			; <UNDEFINED> instruction: 0x00043fbb
   1d4f0:	andeq	r1, r3, sl, ror #22
   1d4f4:	ldrdeq	r0, [r0], -r2
   1d4f8:			; <UNDEFINED> instruction: 0x00043dbf
   1d4fc:	andeq	r4, r4, r2, lsl r5
   1d500:	ldrdeq	r4, [r4], -r3
   1d504:	andeq	r0, r0, sl, ror #3
   1d508:	andeq	r4, r4, r0, lsl r0
   1d50c:	andeq	r4, r4, r6, asr #10
   1d510:	andeq	r4, r4, ip, asr r5
   1d514:	andeq	r1, r3, r5, ror fp
   1d518:	andeq	r1, r3, r1, lsr #22
   1d51c:	ldrdeq	r3, [r4], -r7
   1d520:	andeq	sl, r3, r9, asr #3
   1d524:	andeq	r1, r3, r5, lsl #22
   1d528:	andeq	r1, r3, r1, asr #23
   1d52c:	muleq	r4, sp, r5
   1d530:	andeq	r4, r4, pc, lsr #12
   1d534:	andeq	r4, r4, fp, ror #12
   1d538:	andeq	r4, r4, sl, ror r6
   1d53c:	andeq	r4, r4, r6, lsl #13
   1d540:	andeq	r4, r4, sl, asr #13
   1d544:	ldrdeq	r4, [r4], -lr
   1d548:	strdeq	r4, [r4], -fp
   1d54c:	andeq	r0, r0, fp, lsl r2
   1d550:	andeq	r1, r3, fp, ror #21
   1d554:	andeq	r1, r3, sp, lsr #23
   1d558:	strdeq	r1, [r3], -r4
   1d55c:			; <UNDEFINED> instruction: 0x00031bb4
   1d560:	strdeq	r1, [r3], -sp
   1d564:			; <UNDEFINED> instruction: 0x00031bbb
   1d568:	andeq	r1, r3, r6, lsl #22
   1d56c:	andeq	r1, r3, r2, asr #23
   1d570:	andeq	r1, r3, r4, lsl fp
   1d574:	andeq	r1, r3, sl, lsl fp
   1d578:	andeq	r9, r4, r4, rrx
   1d57c:	ldrdeq	r4, [r4], -ip
   1d580:	andeq	r4, r4, ip, lsl r7
   1d584:	andeq	r4, r4, r2, ror #14
   1d588:	ldrdeq	r4, [r4], -lr
   1d58c:	andeq	r4, r4, r9, lsl r8
   1d590:	andeq	r4, r4, ip, lsr #16
   1d594:	andeq	r4, r4, r2, lsl #17
   1d598:	andeq	r0, r0, pc, lsr #4
   1d59c:	andeq	r4, r4, pc, lsl #15
   1d5a0:	andeq	r8, r3, r3, lsl r1
   1d5a4:	andeq	r4, r4, lr, lsr #17
   1d5a8:	andeq	r4, r4, r8, lsr #19
   1d5ac:	strdeq	r4, [r4], -r8
   1d5b0:	andeq	r0, r0, sl, asr r2
   1d5b4:	strdeq	r4, [r4], -r2
   1d5b8:	andeq	r4, r4, r6, lsr r9
   1d5bc:	andeq	r4, r4, r9, ror r9
   1d5c0:	andeq	r0, r0, lr, asr #4
   1d5c4:	andeq	r4, r4, r5, lsl sl
   1d5c8:	andeq	r4, r4, sp, asr #20
   1d5cc:	andeq	r4, r4, pc, ror #27
   1d5d0:	andeq	r4, r4, r6, lsl #28
   1d5d4:	muleq	r0, r5, r2
   1d5d8:	andeq	r4, r4, r9, lsl #21
   1d5dc:	ldrdeq	r4, [r4], -r6
   1d5e0:	andeq	r4, r4, r6, lsl #22
   1d5e4:	andeq	r4, r4, r7, ror #22
   1d5e8:	andeq	r0, r0, r3, ror r2
   1d5ec:	andeq	r4, r4, r1, asr #23
   1d5f0:	andeq	r4, r4, r4, asr ip
   1d5f4:	strdeq	r4, [r4], -r6
   1d5f8:	andeq	r4, r4, fp, asr #26
   1d5fc:	andeq	r4, r4, r8, asr sp
   1d600:	andeq	r0, r0, r7, lsl #5
   1d604:	andeq	r4, r4, r5, asr #25
   1d608:	muleq	r4, r2, sp
   1d60c:	andeq	r4, r4, r4, asr #27
   1d610:	andeq	r4, r4, r6, lsr lr
   1d614:	andeq	r4, r4, r9, asr #28
   1d618:	strdeq	r1, [r3], -r3
   1d61c:			; <UNDEFINED> instruction: 0x00031bb3
   1d620:	andeq	r1, r3, sl, ror #21
   1d624:	andeq	r1, r3, ip, lsr #23
   1d628:	strdeq	r1, [r3], -ip
   1d62c:			; <UNDEFINED> instruction: 0x00031bba
   1d630:	add	r3, r1, #4
   1d634:	mov	r2, r0
   1d638:	ldr	r1, [pc, #4]	; 1d644 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   1d63c:	mov	r0, r3
   1d640:	b	23934 <fb_symbol_table_visit@@Base>
   1d644:	andeq	sp, r1, r4, lsr #14
   1d648:	add	r3, r1, #4
   1d64c:	mov	r2, r0
   1d650:	ldr	r1, [pc, #4]	; 1d65c <__flatcc_fb_gen_c_verifier@@Base+0x19fc>
   1d654:	mov	r0, r3
   1d658:	b	23934 <fb_symbol_table_visit@@Base>
   1d65c:	andeq	sp, r1, r4, lsl #26
   1d660:	push	{r4, r5, r6, lr}
   1d664:	mov	r2, #8
   1d668:	ldr	r3, [pc, #40]	; 1d698 <__flatcc_fb_gen_c_verifier@@Base+0x1a38>
   1d66c:	mov	r5, r0
   1d670:	mov	r4, r1
   1d674:	bl	14168 <qsort@plt>
   1d678:	mov	r3, #0
   1d67c:	cmp	r3, r4
   1d680:	blt	1d688 <__flatcc_fb_gen_c_verifier@@Base+0x1a28>
   1d684:	pop	{r4, r5, r6, pc}
   1d688:	ldr	r2, [r5, r3, lsl #3]
   1d68c:	str	r3, [r2, #124]	; 0x7c
   1d690:	add	r3, r3, #1
   1d694:	b	1d67c <__flatcc_fb_gen_c_verifier@@Base+0x1a1c>
   1d698:	andeq	sp, r1, ip, lsr #16
   1d69c:	push	{r4, r5, r6, lr}
   1d6a0:	ldr	r5, [r0, #4]
   1d6a4:	ldr	r4, [r1, #4]
   1d6a8:	ldr	r0, [r0]
   1d6ac:	cmp	r5, r4
   1d6b0:	movlt	r2, r5
   1d6b4:	movge	r2, r4
   1d6b8:	ldr	r1, [r1]
   1d6bc:	bl	1403c <memcmp@plt>
   1d6c0:	cmp	r0, #0
   1d6c4:	subeq	r0, r5, r4
   1d6c8:	pop	{r4, r5, r6, pc}
   1d6cc:	cmp	r0, #0
   1d6d0:	bxeq	lr
   1d6d4:	b	14018 <free@plt>
   1d6d8:	push	{r4, lr}
   1d6dc:	mov	r4, r0
   1d6e0:	ldr	r0, [r0, #16]
   1d6e4:	cmp	r0, #0
   1d6e8:	beq	1d6f0 <__flatcc_fb_gen_c_verifier@@Base+0x1a90>
   1d6ec:	bl	14018 <free@plt>
   1d6f0:	ldr	r0, [r4, #20]
   1d6f4:	cmp	r0, #0
   1d6f8:	beq	1d700 <__flatcc_fb_gen_c_verifier@@Base+0x1aa0>
   1d6fc:	bl	14018 <free@plt>
   1d700:	ldr	r0, [r4, #24]
   1d704:	cmp	r0, #0
   1d708:	beq	1d710 <__flatcc_fb_gen_c_verifier@@Base+0x1ab0>
   1d70c:	bl	14018 <free@plt>
   1d710:	mov	r0, r4
   1d714:	mov	r2, #44	; 0x2c
   1d718:	mov	r1, #0
   1d71c:	pop	{r4, lr}
   1d720:	b	140fc <memset@plt>
   1d724:	ldrh	r3, [r1, #8]
   1d728:	cmp	r3, #4
   1d72c:	bxhi	lr
   1d730:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d734:	mov	r4, r0
   1d738:	ldr	r0, [r0, #40]	; 0x28
   1d73c:	mov	r5, r1
   1d740:	add	r0, r0, #172	; 0xac
   1d744:	ldr	r1, [r1, #16]
   1d748:	bl	233f8 <ptr_set_find_item@@Base>
   1d74c:	cmp	r0, #0
   1d750:	bne	1d7ac <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   1d754:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d758:	ldr	r1, [r8, #4]
   1d75c:	mov	r0, r3
   1d760:	ldr	r6, [r1, #4]
   1d764:	ldr	r1, [r1]
   1d768:	mov	r2, r6
   1d76c:	bl	14024 <memcpy@plt>
   1d770:	add	r6, r0, r6
   1d774:	add	r3, r6, #1
   1d778:	strb	r9, [r6]
   1d77c:	ldr	r8, [r8]
   1d780:	b	1d7d0 <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   1d784:	ldr	r3, [r4, #28]
   1d788:	stm	r3, {r5, r7}
   1d78c:	add	r3, r3, #8
   1d790:	str	r3, [r4, #28]
   1d794:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d798:	ldr	r3, [r4, #32]
   1d79c:	stm	r3, {r5, r7}
   1d7a0:	add	r3, r3, #8
   1d7a4:	str	r3, [r4, #32]
   1d7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7ac:	ldr	r3, [r4]
   1d7b0:	ldr	r7, [r4, #36]	; 0x24
   1d7b4:	cmp	r3, #0
   1d7b8:	moveq	r3, r7
   1d7bc:	beq	1d7d8 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   1d7c0:	ldr	r3, [r5, #12]
   1d7c4:	mov	r9, #46	; 0x2e
   1d7c8:	ldr	r8, [r3]
   1d7cc:	mov	r3, r7
   1d7d0:	cmp	r8, #0
   1d7d4:	bne	1d758 <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1d7d8:	ldr	r1, [r5, #4]
   1d7dc:	mov	r0, r3
   1d7e0:	ldr	r6, [r1, #4]
   1d7e4:	ldr	r1, [r1]
   1d7e8:	mov	r2, r6
   1d7ec:	bl	14024 <memcpy@plt>
   1d7f0:	mov	r1, #0
   1d7f4:	add	r2, r0, r6
   1d7f8:	add	r3, r2, #1
   1d7fc:	strb	r1, [r0, r6]
   1d800:	str	r3, [r4, #36]	; 0x24
   1d804:	ldrh	r3, [r5, #8]
   1d808:	cmp	r3, #4
   1d80c:	ldrls	pc, [pc, r3, lsl #2]
   1d810:	b	1d828 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   1d814:	andeq	sp, r1, r4, lsl #15
   1d818:	andeq	sp, r1, r4, lsl #15
   1d81c:	andeq	sp, r1, r8, lsr #16
   1d820:	muleq	r1, r8, r7
   1d824:	muleq	r1, r8, r7
   1d828:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d82c:	ldr	r1, [r1, #4]
   1d830:	ldr	r0, [r0, #4]
   1d834:	b	14000 <strcmp@plt>
   1d838:	push	{r0, r1, r4, r5, r6, lr}
   1d83c:	mov	r4, r0
   1d840:	mov	r6, r1
   1d844:	mov	r5, r2
   1d848:	ldr	r1, [pc, #248]	; 1d948 <__flatcc_fb_gen_c_verifier@@Base+0x1ce8>
   1d84c:	ldr	r2, [sp, #24]
   1d850:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d854:	ldr	r1, [pc, #240]	; 1d94c <__flatcc_fb_gen_c_verifier@@Base+0x1cec>
   1d858:	mov	r0, r4
   1d85c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d860:	ldr	r3, [r4, #220]	; 0xdc
   1d864:	add	r3, r3, #1
   1d868:	str	r3, [r4, #220]	; 0xdc
   1d86c:	ldr	r3, [r6, #40]	; 0x28
   1d870:	sub	r3, r3, #1
   1d874:	cmp	r3, #8
   1d878:	ldrls	pc, [pc, r3, lsl #2]
   1d87c:	b	1d8ec <__flatcc_fb_gen_c_verifier@@Base+0x1c8c>
   1d880:	andeq	sp, r1, r4, lsr #17
   1d884:	andeq	sp, r1, r4, lsr #17
   1d888:	andeq	sp, r1, r4, lsr #17
   1d88c:	andeq	sp, r1, r4, lsr #17
   1d890:	andeq	sp, r1, r4, lsr #17
   1d894:			; <UNDEFINED> instruction: 0x0001d8b0
   1d898:			; <UNDEFINED> instruction: 0x0001d8b0
   1d89c:			; <UNDEFINED> instruction: 0x0001d8b0
   1d8a0:			; <UNDEFINED> instruction: 0x0001d8b0
   1d8a4:	ldrd	r2, [r5, #48]	; 0x30
   1d8a8:	ldr	r1, [pc, #160]	; 1d950 <__flatcc_fb_gen_c_verifier@@Base+0x1cf0>
   1d8ac:	b	1d8c4 <__flatcc_fb_gen_c_verifier@@Base+0x1c64>
   1d8b0:	ldrd	r2, [r5, #48]	; 0x30
   1d8b4:	cmp	r2, #0
   1d8b8:	sbcs	r1, r3, #0
   1d8bc:	bge	1d8a8 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   1d8c0:	ldr	r1, [pc, #140]	; 1d954 <__flatcc_fb_gen_c_verifier@@Base+0x1cf4>
   1d8c4:	mov	r0, r4
   1d8c8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d8cc:	ldr	r3, [r4, #220]	; 0xdc
   1d8d0:	cmp	r3, #0
   1d8d4:	bne	1d920 <__flatcc_fb_gen_c_verifier@@Base+0x1cc0>
   1d8d8:	ldr	r3, [pc, #120]	; 1d958 <__flatcc_fb_gen_c_verifier@@Base+0x1cf8>
   1d8dc:	ldr	r2, [pc, #120]	; 1d95c <__flatcc_fb_gen_c_verifier@@Base+0x1cfc>
   1d8e0:	ldr	r1, [pc, #120]	; 1d960 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1d8e4:	ldr	r0, [pc, #120]	; 1d964 <__flatcc_fb_gen_c_verifier@@Base+0x1d04>
   1d8e8:	b	1d91c <__flatcc_fb_gen_c_verifier@@Base+0x1cbc>
   1d8ec:	ldr	r0, [pc, #116]	; 1d968 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   1d8f0:	ldr	r3, [pc, #116]	; 1d96c <__flatcc_fb_gen_c_verifier@@Base+0x1d0c>
   1d8f4:	ldr	r2, [pc, #100]	; 1d960 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1d8f8:	str	r3, [sp]
   1d8fc:	ldr	r1, [pc, #108]	; 1d970 <__flatcc_fb_gen_c_verifier@@Base+0x1d10>
   1d900:	ldr	r3, [pc, #108]	; 1d974 <__flatcc_fb_gen_c_verifier@@Base+0x1d14>
   1d904:	ldr	r0, [r0]
   1d908:	bl	140e4 <fprintf@plt>
   1d90c:	ldr	r3, [pc, #100]	; 1d978 <__flatcc_fb_gen_c_verifier@@Base+0x1d18>
   1d910:	ldr	r2, [pc, #92]	; 1d974 <__flatcc_fb_gen_c_verifier@@Base+0x1d14>
   1d914:	ldr	r1, [pc, #68]	; 1d960 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
   1d918:	ldr	r0, [pc, #92]	; 1d97c <__flatcc_fb_gen_c_verifier@@Base+0x1d1c>
   1d91c:	bl	141a4 <__assert_fail@plt>
   1d920:	sub	r3, r3, #1
   1d924:	str	r3, [r4, #220]	; 0xdc
   1d928:	ldr	r1, [pc, #80]	; 1d980 <__flatcc_fb_gen_c_verifier@@Base+0x1d20>
   1d92c:	mov	r0, r4
   1d930:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d934:	ldr	r3, [r4, #220]	; 0xdc
   1d938:	add	r3, r3, #1
   1d93c:	str	r3, [r4, #220]	; 0xdc
   1d940:	add	sp, sp, #8
   1d944:	pop	{r4, r5, r6, pc}
   1d948:	muleq	r4, sp, lr
   1d94c:	andeq	r4, r4, sp, ror #29
   1d950:	andeq	r4, r4, r0, lsl #30
   1d954:	andeq	r4, r4, sl, lsr #30
   1d958:	andeq	r3, r4, r1, lsl #28
   1d95c:	andeq	r0, r0, pc, asr #5
   1d960:			; <UNDEFINED> instruction: 0x00043fbb
   1d964:	andeq	r4, r4, r0, lsl r0
   1d968:	strheq	ip, [r5], -r0
   1d96c:	andeq	r4, r4, r4, asr pc
   1d970:	andeq	r1, r3, sl, ror #22
   1d974:	andeq	r0, r0, r6, asr #5
   1d978:	andeq	r3, r4, sl, ror #27
   1d97c:	andeq	sl, r3, r9, asr #3
   1d980:	muleq	r4, r0, r3
   1d984:	push	{r4, r5, lr}
   1d988:	sub	sp, sp, #228	; 0xe4
   1d98c:	mov	r4, r0
   1d990:	mov	r5, r2
   1d994:	ldr	r1, [pc, #176]	; 1da4c <__flatcc_fb_gen_c_verifier@@Base+0x1dec>
   1d998:	ldr	r2, [sp, #240]	; 0xf0
   1d99c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d9a0:	ldr	r1, [pc, #168]	; 1da50 <__flatcc_fb_gen_c_verifier@@Base+0x1df0>
   1d9a4:	mov	r0, r4
   1d9a8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1d9ac:	ldr	r3, [r4, #220]	; 0xdc
   1d9b0:	add	r3, r3, #1
   1d9b4:	str	r3, [r4, #220]	; 0xdc
   1d9b8:	ldrh	r3, [r5, #8]
   1d9bc:	sub	r3, r3, #3
   1d9c0:	cmp	r3, #1
   1d9c4:	bls	1d9dc <__flatcc_fb_gen_c_verifier@@Base+0x1d7c>
   1d9c8:	ldr	r3, [pc, #132]	; 1da54 <__flatcc_fb_gen_c_verifier@@Base+0x1df4>
   1d9cc:	ldr	r2, [pc, #132]	; 1da58 <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1d9d0:	ldr	r1, [pc, #132]	; 1da5c <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   1d9d4:	ldr	r0, [pc, #132]	; 1da60 <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   1d9d8:	bl	141a4 <__assert_fail@plt>
   1d9dc:	mov	r2, #220	; 0xdc
   1d9e0:	mov	r1, #0
   1d9e4:	add	r0, sp, #4
   1d9e8:	bl	140fc <memset@plt>
   1d9ec:	add	r1, sp, #4
   1d9f0:	mov	r0, r5
   1d9f4:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1d9f8:	add	r2, sp, #4
   1d9fc:	ldr	r1, [pc, #96]	; 1da64 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   1da00:	mov	r0, r4
   1da04:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1da08:	ldr	r3, [r4, #220]	; 0xdc
   1da0c:	cmp	r3, #0
   1da10:	ldreq	r3, [pc, #80]	; 1da68 <__flatcc_fb_gen_c_verifier@@Base+0x1e08>
   1da14:	ldreq	r2, [pc, #80]	; 1da6c <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   1da18:	ldreq	r1, [pc, #60]	; 1da5c <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   1da1c:	ldreq	r0, [pc, #76]	; 1da70 <__flatcc_fb_gen_c_verifier@@Base+0x1e10>
   1da20:	beq	1d9d8 <__flatcc_fb_gen_c_verifier@@Base+0x1d78>
   1da24:	sub	r3, r3, #1
   1da28:	str	r3, [r4, #220]	; 0xdc
   1da2c:	ldr	r1, [pc, #64]	; 1da74 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   1da30:	mov	r0, r4
   1da34:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1da38:	ldr	r3, [r4, #220]	; 0xdc
   1da3c:	add	r3, r3, #1
   1da40:	str	r3, [r4, #220]	; 0xdc
   1da44:	add	sp, sp, #228	; 0xe4
   1da48:	pop	{r4, r5, pc}
   1da4c:	andeq	r4, r4, r7, ror pc
   1da50:	andeq	r4, r4, sp, ror #29
   1da54:	andeq	r3, r4, r0, lsl lr
   1da58:	ldrdeq	r0, [r0], -r9
   1da5c:			; <UNDEFINED> instruction: 0x00043fbb
   1da60:	ldrdeq	r2, [r3], -r1
   1da64:			; <UNDEFINED> instruction: 0x00044fb9
   1da68:	andeq	r3, r4, r8, lsr #28
   1da6c:	andeq	r0, r0, r6, ror #5
   1da70:	andeq	r4, r4, r0, lsl r0
   1da74:	muleq	r4, r0, r3
   1da78:	push	{r4, r5, r6, r7, r8, lr}
   1da7c:	mov	r4, r0
   1da80:	mov	r5, r1
   1da84:	mov	r6, r2
   1da88:	ldr	r1, [pc, #120]	; 1db08 <__flatcc_fb_gen_c_verifier@@Base+0x1ea8>
   1da8c:	ldr	r2, [sp, #24]
   1da90:	mov	r7, r3
   1da94:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1da98:	ldr	r1, [pc, #108]	; 1db0c <__flatcc_fb_gen_c_verifier@@Base+0x1eac>
   1da9c:	mov	r0, r4
   1daa0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1daa4:	ldr	r2, [r4, #220]	; 0xdc
   1daa8:	mov	r3, r7
   1daac:	add	r2, r2, #1
   1dab0:	str	r2, [r4, #220]	; 0xdc
   1dab4:	mov	r1, r5
   1dab8:	mov	r2, r6
   1dabc:	mov	r0, r4
   1dac0:	bl	1ca58 <__flatcc_fb_gen_c_verifier@@Base+0xdf8>
   1dac4:	ldr	r3, [r4, #220]	; 0xdc
   1dac8:	cmp	r3, #0
   1dacc:	bne	1dae4 <__flatcc_fb_gen_c_verifier@@Base+0x1e84>
   1dad0:	ldr	r3, [pc, #56]	; 1db10 <__flatcc_fb_gen_c_verifier@@Base+0x1eb0>
   1dad4:	ldr	r2, [pc, #56]	; 1db14 <__flatcc_fb_gen_c_verifier@@Base+0x1eb4>
   1dad8:	ldr	r1, [pc, #56]	; 1db18 <__flatcc_fb_gen_c_verifier@@Base+0x1eb8>
   1dadc:	ldr	r0, [pc, #56]	; 1db1c <__flatcc_fb_gen_c_verifier@@Base+0x1ebc>
   1dae0:	bl	141a4 <__assert_fail@plt>
   1dae4:	sub	r3, r3, #1
   1dae8:	str	r3, [r4, #220]	; 0xdc
   1daec:	ldr	r1, [pc, #44]	; 1db20 <__flatcc_fb_gen_c_verifier@@Base+0x1ec0>
   1daf0:	mov	r0, r4
   1daf4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1daf8:	ldr	r3, [r4, #220]	; 0xdc
   1dafc:	add	r3, r3, #1
   1db00:	str	r3, [r4, #220]	; 0xdc
   1db04:	pop	{r4, r5, r6, r7, r8, pc}
   1db08:	andeq	r5, r4, r0
   1db0c:	andeq	r5, r4, r3, asr #32
   1db10:	andeq	r3, r4, r8, lsr lr
   1db14:	andeq	r0, r0, r3, lsr #5
   1db18:			; <UNDEFINED> instruction: 0x00043fbb
   1db1c:	andeq	r4, r4, r0, lsl r0
   1db20:	muleq	r4, r0, r3
   1db24:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db28:	mov	r2, #0
   1db2c:	mov	r5, r0
   1db30:	mov	r6, r0
   1db34:	mov	r7, r2
   1db38:	cmp	r6, #0
   1db3c:	bne	1db5c <__flatcc_fb_gen_c_verifier@@Base+0x1efc>
   1db40:	cmp	r7, #0
   1db44:	str	r7, [r1]
   1db48:	bne	1db94 <__flatcc_fb_gen_c_verifier@@Base+0x1f34>
   1db4c:	mov	r9, #0
   1db50:	mov	r0, r9
   1db54:	add	sp, sp, #12
   1db58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db5c:	ldrh	r3, [r6, #72]	; 0x48
   1db60:	tst	r3, #4
   1db64:	bne	1db8c <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1db68:	mov	r0, r6
   1db6c:	bl	1bfe0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1db70:	cmp	r0, #0
   1db74:	addne	r7, r7, #1
   1db78:	ldrne	r3, [r6, #4]
   1db7c:	add	r7, r7, #1
   1db80:	ldrne	r3, [r3, #4]
   1db84:	addne	r3, r3, #6
   1db88:	addne	r2, r2, r3
   1db8c:	ldr	r6, [r6]
   1db90:	b	1db38 <__flatcc_fb_gen_c_verifier@@Base+0x1ed8>
   1db94:	lsl	r8, r7, #4
   1db98:	add	r0, r2, r8
   1db9c:	bl	14090 <malloc@plt>
   1dba0:	subs	r9, r0, #0
   1dba4:	beq	1db4c <__flatcc_fb_gen_c_verifier@@Base+0x1eec>
   1dba8:	ldr	sl, [pc, #184]	; 1dc68 <__flatcc_fb_gen_c_verifier@@Base+0x2008>
   1dbac:	add	r8, r9, r8
   1dbb0:	mov	r4, r9
   1dbb4:	mov	fp, #1
   1dbb8:	cmp	r5, #0
   1dbbc:	bne	1dbd8 <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
   1dbc0:	ldr	r3, [pc, #164]	; 1dc6c <__flatcc_fb_gen_c_verifier@@Base+0x200c>
   1dbc4:	mov	r2, #16
   1dbc8:	mov	r1, r7
   1dbcc:	mov	r0, r9
   1dbd0:	bl	14168 <qsort@plt>
   1dbd4:	b	1db50 <__flatcc_fb_gen_c_verifier@@Base+0x1ef0>
   1dbd8:	ldrh	r3, [r5, #72]	; 0x48
   1dbdc:	ands	r3, r3, #4
   1dbe0:	bne	1dc60 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1dbe4:	ldr	r2, [r5, #4]
   1dbe8:	mov	r0, r5
   1dbec:	ldr	r1, [r2]
   1dbf0:	ldr	r2, [r2, #4]
   1dbf4:	str	r1, [r4]
   1dbf8:	str	r3, [r4, #12]
   1dbfc:	stmib	r4, {r2, r5}
   1dc00:	bl	1bfe0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1dc04:	cmp	r0, #0
   1dc08:	addeq	r4, r4, #16
   1dc0c:	beq	1dc60 <__flatcc_fb_gen_c_verifier@@Base+0x2000>
   1dc10:	add	r0, r2, #5
   1dc14:	add	r3, r6, #1
   1dc18:	str	r6, [r5, #112]	; 0x70
   1dc1c:	str	r0, [r4, #20]
   1dc20:	str	r8, [r4, #16]
   1dc24:	mov	r0, r8
   1dc28:	str	r3, [sp, #4]
   1dc2c:	bl	14024 <memcpy@plt>
   1dc30:	ldr	r2, [r5, #4]
   1dc34:	mov	r1, sl
   1dc38:	add	r4, r4, #32
   1dc3c:	ldr	r2, [r2, #4]
   1dc40:	add	r8, r8, r2
   1dc44:	mov	r0, r8
   1dc48:	bl	1406c <strcpy@plt>
   1dc4c:	ldr	r3, [sp, #4]
   1dc50:	str	r5, [r4, #-8]
   1dc54:	str	fp, [r4, #-4]
   1dc58:	add	r8, r8, #6
   1dc5c:	mov	r6, r3
   1dc60:	ldr	r5, [r5]
   1dc64:	b	1dbb8 <__flatcc_fb_gen_c_verifier@@Base+0x1f58>
   1dc68:	andeq	r2, r3, fp, asr #7
   1dc6c:	muleq	r1, ip, r6
   1dc70:	ldrh	r3, [r1, #8]
   1dc74:	sub	r3, r3, #3
   1dc78:	cmp	r3, #1
   1dc7c:	bxhi	lr
   1dc80:	push	{r4, r5, r6, lr}
   1dc84:	mov	r5, r0
   1dc88:	ldr	r0, [r0, #4]
   1dc8c:	mov	r4, r1
   1dc90:	add	r0, r0, #172	; 0xac
   1dc94:	ldr	r1, [r1, #16]
   1dc98:	bl	233f8 <ptr_set_find_item@@Base>
   1dc9c:	cmp	r0, #0
   1dca0:	popeq	{r4, r5, r6, pc}
   1dca4:	ldr	r2, [r4, #4]
   1dca8:	ldr	r3, [r5, #8]
   1dcac:	ldr	r1, [r2]
   1dcb0:	ldr	r2, [r2, #4]
   1dcb4:	str	r1, [r3]
   1dcb8:	stmib	r3, {r2, r4}
   1dcbc:	add	r3, r3, #16
   1dcc0:	str	r3, [r5, #8]
   1dcc4:	pop	{r4, r5, r6, pc}
   1dcc8:	ldrh	r3, [r1, #8]
   1dccc:	sub	r3, r3, #3
   1dcd0:	cmp	r3, #1
   1dcd4:	bxhi	lr
   1dcd8:	push	{r4, lr}
   1dcdc:	mov	r4, r0
   1dce0:	ldr	r0, [r0, #4]
   1dce4:	ldr	r1, [r1, #16]
   1dce8:	add	r0, r0, #172	; 0xac
   1dcec:	bl	233f8 <ptr_set_find_item@@Base>
   1dcf0:	cmp	r0, #0
   1dcf4:	ldrne	r3, [r4]
   1dcf8:	addne	r3, r3, #1
   1dcfc:	strne	r3, [r4]
   1dd00:	pop	{r4, pc}
   1dd04:	ldrh	r3, [r1, #8]
   1dd08:	cmp	r3, #4
   1dd0c:	bxhi	lr
   1dd10:	push	{r4, r5, r6, lr}
   1dd14:	mov	r4, r0
   1dd18:	ldr	r0, [r0, #40]	; 0x28
   1dd1c:	mov	r5, r1
   1dd20:	add	r0, r0, #172	; 0xac
   1dd24:	ldr	r1, [r1, #16]
   1dd28:	bl	233f8 <ptr_set_find_item@@Base>
   1dd2c:	cmp	r0, #0
   1dd30:	bne	1dd70 <__flatcc_fb_gen_c_verifier@@Base+0x2110>
   1dd34:	pop	{r4, r5, r6, pc}
   1dd38:	ldr	r1, [r2, #4]
   1dd3c:	ldr	r2, [r2]
   1dd40:	ldr	r1, [r1, #4]
   1dd44:	add	r1, r1, #1
   1dd48:	add	r3, r3, r1
   1dd4c:	b	1dd88 <__flatcc_fb_gen_c_verifier@@Base+0x2128>
   1dd50:	ldr	r3, [r4, #4]
   1dd54:	add	r3, r3, #1
   1dd58:	str	r3, [r4, #4]
   1dd5c:	pop	{r4, r5, r6, pc}
   1dd60:	ldr	r3, [r4, #8]
   1dd64:	add	r3, r3, #1
   1dd68:	str	r3, [r4, #8]
   1dd6c:	pop	{r4, r5, r6, pc}
   1dd70:	ldr	r3, [r4]
   1dd74:	cmp	r3, #0
   1dd78:	beq	1dd90 <__flatcc_fb_gen_c_verifier@@Base+0x2130>
   1dd7c:	ldr	r3, [r5, #12]
   1dd80:	ldr	r2, [r3]
   1dd84:	mov	r3, #0
   1dd88:	cmp	r2, #0
   1dd8c:	bne	1dd38 <__flatcc_fb_gen_c_verifier@@Base+0x20d8>
   1dd90:	ldr	r2, [r5, #4]
   1dd94:	ldr	r1, [r4, #12]
   1dd98:	ldr	r2, [r2, #4]
   1dd9c:	add	r2, r2, r1
   1dda0:	add	r2, r2, #1
   1dda4:	add	r3, r2, r3
   1dda8:	str	r3, [r4, #12]
   1ddac:	ldrh	r3, [r5, #8]
   1ddb0:	cmp	r3, #4
   1ddb4:	ldrls	pc, [pc, r3, lsl #2]
   1ddb8:	b	1ddd0 <__flatcc_fb_gen_c_verifier@@Base+0x2170>
   1ddbc:	andeq	sp, r1, r0, asr sp
   1ddc0:	andeq	sp, r1, r0, asr sp
   1ddc4:	ldrdeq	sp, [r1], -r0
   1ddc8:	andeq	sp, r1, r0, ror #26
   1ddcc:	andeq	sp, r1, r0, ror #26
   1ddd0:	pop	{r4, r5, r6, pc}
   1ddd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ddd8:	sub	sp, sp, #100	; 0x64
   1dddc:	mov	fp, r2
   1dde0:	str	r3, [sp, #8]
   1dde4:	mov	r2, #0
   1dde8:	mov	r3, #0
   1ddec:	ldr	r6, [sp, #136]	; 0x88
   1ddf0:	strd	r2, [sp, #48]	; 0x30
   1ddf4:	strd	r2, [sp, #56]	; 0x38
   1ddf8:	ldr	r3, [pc, #1680]	; 1e490 <__flatcc_fb_gen_c_verifier@@Base+0x2830>
   1ddfc:	mov	r4, r0
   1de00:	str	r3, [sp, #40]	; 0x28
   1de04:	mov	r3, #0
   1de08:	str	r3, [sp, #44]	; 0x2c
   1de0c:	ldr	r3, [r1]
   1de10:	mov	r5, r1
   1de14:	str	r3, [sp, #16]
   1de18:	ldr	r2, [sp, #16]
   1de1c:	lsl	r3, fp, #4
   1de20:	str	r3, [sp, #28]
   1de24:	add	r3, r2, r3
   1de28:	add	r2, r6, #7
   1de2c:	ldr	r3, [r3, #4]
   1de30:	str	r2, [sp, #32]
   1de34:	cmp	r3, r2
   1de38:	ble	1de48 <__flatcc_fb_gen_c_verifier@@Base+0x21e8>
   1de3c:	sub	r3, r3, r6
   1de40:	cmp	r3, #8
   1de44:	bne	1deb4 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1de48:	ldr	r3, [sp, #8]
   1de4c:	cmp	fp, r3
   1de50:	beq	1de8c <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   1de54:	ldr	r2, [sp, #8]
   1de58:	add	r3, fp, #1
   1de5c:	cmp	r2, r3
   1de60:	bne	1deb4 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1de64:	mov	r3, r2
   1de68:	ldr	r2, [sp, #16]
   1de6c:	add	r3, r2, r3, lsl #4
   1de70:	add	r2, r6, #7
   1de74:	ldr	r3, [r3, #4]
   1de78:	cmp	r3, r2
   1de7c:	ble	1de8c <__flatcc_fb_gen_c_verifier@@Base+0x222c>
   1de80:	sub	r3, r3, r6
   1de84:	cmp	r3, #8
   1de88:	bne	1deb4 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   1de8c:	mov	r3, #0
   1de90:	str	r3, [sp, #4]
   1de94:	str	r6, [sp]
   1de98:	ldr	r3, [sp, #8]
   1de9c:	mov	r2, fp
   1dea0:	mov	r1, r5
   1dea4:	mov	r0, r4
   1dea8:	bl	1c0e8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1deac:	add	sp, sp, #100	; 0x64
   1deb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1deb4:	ldr	r3, [sp, #8]
   1deb8:	mov	r2, #0
   1debc:	sub	r3, r3, fp
   1dec0:	add	r3, r3, r3, lsr #31
   1dec4:	add	r3, fp, r3, asr #1
   1dec8:	str	r3, [sp, #12]
   1decc:	mov	r3, #0
   1ded0:	ldr	sl, [sp, #12]
   1ded4:	strd	r2, [sp, #64]	; 0x40
   1ded8:	strd	r2, [sp, #72]	; 0x48
   1dedc:	strd	r2, [sp, #80]	; 0x50
   1dee0:	strd	r2, [sp, #88]	; 0x58
   1dee4:	ldr	r3, [sp, #12]
   1dee8:	ldr	r2, [sp, #16]
   1deec:	lsl	r3, r3, #4
   1def0:	str	r3, [sp, #24]
   1def4:	add	r3, r2, r3
   1def8:	str	r3, [sp, #20]
   1defc:	cmp	fp, sl
   1df00:	blt	1df2c <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   1df04:	mov	r3, #0
   1df08:	mov	r2, #0
   1df0c:	ldr	r7, [r5]
   1df10:	strd	r2, [sp, #64]	; 0x40
   1df14:	strd	r2, [sp, #72]	; 0x48
   1df18:	strd	r2, [sp, #80]	; 0x50
   1df1c:	strd	r2, [sp, #88]	; 0x58
   1df20:	ldr	r3, [sp, #24]
   1df24:	add	r7, r7, r3
   1df28:	b	1e0b4 <__flatcc_fb_gen_c_verifier@@Base+0x2454>
   1df2c:	ldr	r3, [sp, #20]
   1df30:	mov	r7, #0
   1df34:	sub	r3, r3, #16
   1df38:	mov	r8, r3
   1df3c:	str	r7, [sp, #4]
   1df40:	str	r7, [sp]
   1df44:	add	r3, sp, #80	; 0x50
   1df48:	add	r2, sp, #64	; 0x40
   1df4c:	mov	r1, r6
   1df50:	mov	r0, r8
   1df54:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1df58:	ldr	r2, [sp, #16]
   1df5c:	ldr	r3, [sp, #20]
   1df60:	str	r7, [sp, #4]
   1df64:	sub	r3, r3, r2
   1df68:	str	r3, [sp, #36]	; 0x24
   1df6c:	str	r7, [sp]
   1df70:	add	r3, sp, #88	; 0x58
   1df74:	add	r2, sp, #72	; 0x48
   1df78:	mov	r1, r6
   1df7c:	ldr	r0, [sp, #20]
   1df80:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1df84:	ldrd	r0, [sp, #72]	; 0x48
   1df88:	ldrd	r2, [sp, #64]	; 0x40
   1df8c:	str	r8, [sp, #20]
   1df90:	sub	r7, sl, #1
   1df94:	eor	r8, r2, r0
   1df98:	eor	r9, r3, r1
   1df9c:	ldrd	r2, [sp, #80]	; 0x50
   1dfa0:	mov	r0, r8
   1dfa4:	mov	r1, r9
   1dfa8:	and	r0, r0, r2
   1dfac:	and	r1, r1, r3
   1dfb0:	mov	r2, r0
   1dfb4:	mov	r3, r1
   1dfb8:	orrs	r3, r2, r3
   1dfbc:	bne	1e3d8 <__flatcc_fb_gen_c_verifier@@Base+0x2778>
   1dfc0:	mov	sl, r7
   1dfc4:	b	1defc <__flatcc_fb_gen_c_verifier@@Base+0x229c>
   1dfc8:	sub	r3, r3, #1
   1dfcc:	str	r3, [r4, #220]	; 0xdc
   1dfd0:	ldr	r2, [sp, #44]	; 0x2c
   1dfd4:	ldr	r3, [sp, #40]	; 0x28
   1dfd8:	ldr	r1, [pc, #1204]	; 1e494 <__flatcc_fb_gen_c_verifier@@Base+0x2834>
   1dfdc:	mov	r0, r4
   1dfe0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1dfe4:	ldr	r3, [r4, #220]	; 0xdc
   1dfe8:	str	r6, [sp]
   1dfec:	add	r3, r3, #1
   1dff0:	str	r3, [r4, #220]	; 0xdc
   1dff4:	mov	r2, sl
   1dff8:	ldr	r3, [sp, #8]
   1dffc:	mov	r1, r5
   1e000:	mov	r0, r4
   1e004:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e008:	ldr	r3, [r4, #220]	; 0xdc
   1e00c:	cmp	r3, #0
   1e010:	ldreq	r3, [pc, #1152]	; 1e498 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1e014:	ldreq	r2, [pc, #1152]	; 1e49c <__flatcc_fb_gen_c_verifier@@Base+0x283c>
   1e018:	beq	1e45c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1e01c:	sub	r3, r3, #1
   1e020:	str	r3, [r4, #220]	; 0xdc
   1e024:	ldr	r2, [sp, #44]	; 0x2c
   1e028:	ldr	r3, [sp, #40]	; 0x28
   1e02c:	ldr	r1, [pc, #1132]	; 1e4a0 <__flatcc_fb_gen_c_verifier@@Base+0x2840>
   1e030:	mov	r0, r4
   1e034:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e038:	b	1deac <__flatcc_fb_gen_c_verifier@@Base+0x224c>
   1e03c:	mov	r8, #0
   1e040:	str	r8, [sp, #4]
   1e044:	str	r8, [sp]
   1e048:	add	r3, sp, #80	; 0x50
   1e04c:	add	r2, sp, #64	; 0x40
   1e050:	mov	r1, r6
   1e054:	mov	r0, r7
   1e058:	add	r7, r7, #16
   1e05c:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e060:	str	r8, [sp, #4]
   1e064:	str	r8, [sp]
   1e068:	add	r3, sp, #88	; 0x58
   1e06c:	add	r2, sp, #72	; 0x48
   1e070:	mov	r1, r6
   1e074:	mov	r0, r7
   1e078:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e07c:	ldrd	r2, [sp, #64]	; 0x40
   1e080:	ldrd	r0, [sp, #72]	; 0x48
   1e084:	eor	r8, r2, r0
   1e088:	eor	r9, r3, r1
   1e08c:	mov	r2, r8
   1e090:	mov	r3, r9
   1e094:	ldrd	r8, [sp, #80]	; 0x50
   1e098:	and	r2, r2, r8
   1e09c:	and	r3, r3, r9
   1e0a0:	orrs	r3, r2, r3
   1e0a4:	ldr	r3, [sp, #12]
   1e0a8:	add	r8, r3, #1
   1e0ac:	bne	1e0c8 <__flatcc_fb_gen_c_verifier@@Base+0x2468>
   1e0b0:	str	r8, [sp, #12]
   1e0b4:	ldr	r3, [sp, #8]
   1e0b8:	ldr	r2, [sp, #12]
   1e0bc:	cmp	r3, r2
   1e0c0:	bgt	1e03c <__flatcc_fb_gen_c_verifier@@Base+0x23dc>
   1e0c4:	add	r8, r2, #1
   1e0c8:	ldr	r0, [r5]
   1e0cc:	ldr	r3, [sp, #28]
   1e0d0:	mov	r7, fp
   1e0d4:	add	r2, r0, r3
   1e0d8:	ldr	r3, [sp, #12]
   1e0dc:	cmp	r7, r3
   1e0e0:	bgt	1e100 <__flatcc_fb_gen_c_verifier@@Base+0x24a0>
   1e0e4:	ldr	r3, [r2, #4]
   1e0e8:	ldr	r1, [sp, #32]
   1e0ec:	cmp	r1, r3
   1e0f0:	bge	1e270 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   1e0f4:	sub	r3, r3, r6
   1e0f8:	cmp	r3, #8
   1e0fc:	ble	1e270 <__flatcc_fb_gen_c_verifier@@Base+0x2610>
   1e100:	cmp	r7, r8
   1e104:	movge	sl, r7
   1e108:	bge	1e2b4 <__flatcc_fb_gen_c_verifier@@Base+0x2654>
   1e10c:	cmp	fp, r7
   1e110:	bge	1e27c <__flatcc_fb_gen_c_verifier@@Base+0x261c>
   1e114:	add	r3, r0, r7, lsl #4
   1e118:	ldr	r9, [r3, #-12]
   1e11c:	add	r3, r6, #8
   1e120:	cmp	r3, r9
   1e124:	blt	1e27c <__flatcc_fb_gen_c_verifier@@Base+0x261c>
   1e128:	sub	r9, r9, r6
   1e12c:	sub	r9, r9, #8
   1e130:	clz	r9, r9
   1e134:	lsr	r9, r9, #5
   1e138:	add	r3, sp, #44	; 0x2c
   1e13c:	str	r3, [sp, #4]
   1e140:	lsl	sl, r7, #4
   1e144:	add	r3, sp, #40	; 0x28
   1e148:	str	r3, [sp]
   1e14c:	add	r2, sp, #48	; 0x30
   1e150:	add	r3, sp, #56	; 0x38
   1e154:	mov	r1, r6
   1e158:	add	r0, r0, sl
   1e15c:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e160:	ldr	r3, [sp, #40]	; 0x28
   1e164:	ldr	r1, [pc, #824]	; 1e4a4 <__flatcc_fb_gen_c_verifier@@Base+0x2844>
   1e168:	str	r3, [sp, #4]
   1e16c:	ldr	r3, [sp, #44]	; 0x2c
   1e170:	mov	r0, r4
   1e174:	str	r3, [sp]
   1e178:	ldrd	r2, [sp, #48]	; 0x30
   1e17c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e180:	ldr	r3, [r4, #220]	; 0xdc
   1e184:	cmp	r9, #0
   1e188:	add	r3, r3, #1
   1e18c:	str	r3, [r4, #220]	; 0xdc
   1e190:	beq	1e1e8 <__flatcc_fb_gen_c_verifier@@Base+0x2588>
   1e194:	ldr	r3, [sp, #40]	; 0x28
   1e198:	ldr	r2, [sp, #44]	; 0x2c
   1e19c:	ldr	r1, [pc, #772]	; 1e4a8 <__flatcc_fb_gen_c_verifier@@Base+0x2848>
   1e1a0:	mov	r0, r4
   1e1a4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e1a8:	ldr	r3, [r5]
   1e1ac:	sub	sl, sl, #16
   1e1b0:	add	sl, r3, sl
   1e1b4:	mov	r3, #8
   1e1b8:	str	r3, [sp]
   1e1bc:	ldr	r1, [r5, #12]
   1e1c0:	ldr	r3, [sl, #12]
   1e1c4:	ldr	r2, [sl, #8]
   1e1c8:	mov	r0, r4
   1e1cc:	ldr	ip, [r5, #4]
   1e1d0:	blx	ip
   1e1d4:	ldr	r3, [sp, #40]	; 0x28
   1e1d8:	ldr	r2, [sp, #44]	; 0x2c
   1e1dc:	ldr	r1, [pc, #712]	; 1e4ac <__flatcc_fb_gen_c_verifier@@Base+0x284c>
   1e1e0:	mov	r0, r4
   1e1e4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e1e8:	ldr	r1, [pc, #704]	; 1e4b0 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
   1e1ec:	mov	r0, r4
   1e1f0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e1f4:	ldr	r1, [pc, #696]	; 1e4b4 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   1e1f8:	mov	r0, r4
   1e1fc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e200:	add	r3, r6, #8
   1e204:	str	r3, [sp]
   1e208:	mov	r2, r7
   1e20c:	ldr	r3, [sp, #12]
   1e210:	mov	r1, r5
   1e214:	mov	r0, r4
   1e218:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e21c:	cmp	r9, #0
   1e220:	beq	1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2624>
   1e224:	ldr	r3, [r4, #220]	; 0xdc
   1e228:	cmp	r3, #0
   1e22c:	moveq	r2, #1040	; 0x410
   1e230:	ldreq	r3, [pc, #608]	; 1e498 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1e234:	beq	1e45c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1e238:	sub	r3, r3, #1
   1e23c:	str	r3, [r4, #220]	; 0xdc
   1e240:	ldr	r2, [sp, #44]	; 0x2c
   1e244:	ldr	r3, [sp, #40]	; 0x28
   1e248:	ldr	r1, [pc, #616]	; 1e4b8 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   1e24c:	mov	r0, r4
   1e250:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e254:	sub	sl, r7, #1
   1e258:	ldr	r3, [r4, #220]	; 0xdc
   1e25c:	cmp	r3, #0
   1e260:	bne	1e28c <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   1e264:	ldr	r3, [pc, #556]	; 1e498 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1e268:	ldr	r2, [pc, #588]	; 1e4bc <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1e26c:	b	1e45c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1e270:	add	r7, r7, #1
   1e274:	add	r2, r2, #16
   1e278:	b	1e0d8 <__flatcc_fb_gen_c_verifier@@Base+0x2478>
   1e27c:	mov	r9, #0
   1e280:	b	1e138 <__flatcc_fb_gen_c_verifier@@Base+0x24d8>
   1e284:	mov	sl, r7
   1e288:	b	1e258 <__flatcc_fb_gen_c_verifier@@Base+0x25f8>
   1e28c:	sub	r3, r3, #1
   1e290:	str	r3, [r4, #220]	; 0xdc
   1e294:	ldr	r2, [sp, #44]	; 0x2c
   1e298:	ldr	r3, [sp, #40]	; 0x28
   1e29c:	ldr	r1, [pc, #540]	; 1e4c0 <__flatcc_fb_gen_c_verifier@@Base+0x2860>
   1e2a0:	mov	r0, r4
   1e2a4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e2a8:	ldr	r3, [r4, #220]	; 0xdc
   1e2ac:	add	r3, r3, #1
   1e2b0:	str	r3, [r4, #220]	; 0xdc
   1e2b4:	ldr	r3, [sp, #8]
   1e2b8:	cmp	r3, r8
   1e2bc:	cmpge	sl, fp
   1e2c0:	movgt	r3, #1
   1e2c4:	ldrgt	r9, [r5, #24]
   1e2c8:	movle	r3, #0
   1e2cc:	addgt	r9, r9, #1
   1e2d0:	str	r3, [sp, #12]
   1e2d4:	strgt	r9, [r5, #24]
   1e2d8:	bgt	1e2e8 <__flatcc_fb_gen_c_verifier@@Base+0x2688>
   1e2dc:	cmp	sl, fp
   1e2e0:	ble	1e468 <__flatcc_fb_gen_c_verifier@@Base+0x2808>
   1e2e4:	ldr	r9, [sp, #12]
   1e2e8:	sub	r3, sl, #1
   1e2ec:	stm	sp, {r6, r9}
   1e2f0:	mov	r2, fp
   1e2f4:	mov	r1, r5
   1e2f8:	mov	r0, r4
   1e2fc:	bl	1c0e8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1e300:	ldr	r3, [sp, #12]
   1e304:	cmp	r3, #0
   1e308:	beq	1e468 <__flatcc_fb_gen_c_verifier@@Base+0x2808>
   1e30c:	mov	r2, r9
   1e310:	ldr	r1, [pc, #428]	; 1e4c4 <__flatcc_fb_gen_c_verifier@@Base+0x2864>
   1e314:	mov	r0, r4
   1e318:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e31c:	ldr	r3, [r4, #220]	; 0xdc
   1e320:	mov	sl, #0
   1e324:	str	r3, [r4, #228]	; 0xe4
   1e328:	mov	r2, r9
   1e32c:	ldr	r1, [pc, #404]	; 1e4c8 <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   1e330:	mov	r0, r4
   1e334:	str	sl, [r4, #220]	; 0xdc
   1e338:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e33c:	ldr	r3, [r4, #228]	; 0xe4
   1e340:	mov	r2, r8
   1e344:	str	r3, [r4, #220]	; 0xdc
   1e348:	mov	r1, r5
   1e34c:	ldr	r3, [sp, #8]
   1e350:	mov	r0, r4
   1e354:	str	r6, [sp]
   1e358:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e35c:	ldr	r3, [r4, #220]	; 0xdc
   1e360:	ldr	r1, [pc, #356]	; 1e4cc <__flatcc_fb_gen_c_verifier@@Base+0x286c>
   1e364:	str	r3, [r4, #228]	; 0xe4
   1e368:	mov	r0, r4
   1e36c:	str	sl, [r4, #220]	; 0xdc
   1e370:	mov	r2, r9
   1e374:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e378:	ldr	r3, [r4, #228]	; 0xe4
   1e37c:	ldr	r1, [pc, #332]	; 1e4d0 <__flatcc_fb_gen_c_verifier@@Base+0x2870>
   1e380:	str	r3, [r4, #220]	; 0xdc
   1e384:	mov	r0, r4
   1e388:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e38c:	cmp	r7, r8
   1e390:	bge	1deac <__flatcc_fb_gen_c_verifier@@Base+0x224c>
   1e394:	ldr	r3, [r4, #220]	; 0xdc
   1e398:	cmp	r3, #0
   1e39c:	moveq	r2, #1072	; 0x430
   1e3a0:	ldreq	r3, [pc, #240]	; 1e498 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1e3a4:	beq	1e45c <__flatcc_fb_gen_c_verifier@@Base+0x27fc>
   1e3a8:	sub	r3, r3, #1
   1e3ac:	str	r3, [r4, #220]	; 0xdc
   1e3b0:	ldr	r2, [sp, #44]	; 0x2c
   1e3b4:	ldr	r3, [sp, #40]	; 0x28
   1e3b8:	ldr	r1, [pc, #276]	; 1e4d4 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   1e3bc:	b	1e030 <__flatcc_fb_gen_c_verifier@@Base+0x23d0>
   1e3c0:	cmp	sl, fp
   1e3c4:	bgt	1e38c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1e3c8:	ldr	r3, [r5, #8]
   1e3cc:	mov	r0, r4
   1e3d0:	blx	r3
   1e3d4:	b	1e38c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1e3d8:	ldr	ip, [sp, #36]	; 0x24
   1e3dc:	ldr	r0, [r5]
   1e3e0:	add	r3, sp, #44	; 0x2c
   1e3e4:	str	r3, [sp, #4]
   1e3e8:	add	r3, sp, #40	; 0x28
   1e3ec:	add	r0, r0, ip
   1e3f0:	str	r3, [sp]
   1e3f4:	add	r2, sp, #48	; 0x30
   1e3f8:	add	r3, sp, #56	; 0x38
   1e3fc:	mov	r1, r6
   1e400:	bl	1bf20 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1e404:	ldr	r3, [sp, #40]	; 0x28
   1e408:	ldr	r1, [pc, #200]	; 1e4d8 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   1e40c:	str	r3, [sp, #4]
   1e410:	ldr	r3, [sp, #44]	; 0x2c
   1e414:	mov	r0, r4
   1e418:	str	r3, [sp]
   1e41c:	ldrd	r2, [sp, #48]	; 0x30
   1e420:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e424:	ldr	r3, [r4, #220]	; 0xdc
   1e428:	str	r6, [sp]
   1e42c:	add	r3, r3, #1
   1e430:	str	r3, [r4, #220]	; 0xdc
   1e434:	mov	r2, fp
   1e438:	mov	r3, r7
   1e43c:	mov	r1, r5
   1e440:	mov	r0, r4
   1e444:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e448:	ldr	r3, [r4, #220]	; 0xdc
   1e44c:	cmp	r3, #0
   1e450:	bne	1dfc8 <__flatcc_fb_gen_c_verifier@@Base+0x2368>
   1e454:	ldr	r3, [pc, #60]	; 1e498 <__flatcc_fb_gen_c_verifier@@Base+0x2838>
   1e458:	ldr	r2, [pc, #124]	; 1e4dc <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   1e45c:	ldr	r1, [pc, #124]	; 1e4e0 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   1e460:	ldr	r0, [pc, #124]	; 1e4e4 <__flatcc_fb_gen_c_verifier@@Base+0x2884>
   1e464:	bl	141a4 <__assert_fail@plt>
   1e468:	ldr	r3, [sp, #8]
   1e46c:	cmp	r3, r8
   1e470:	blt	1e3c0 <__flatcc_fb_gen_c_verifier@@Base+0x2760>
   1e474:	str	r6, [sp]
   1e478:	ldr	r3, [sp, #8]
   1e47c:	mov	r2, r8
   1e480:	mov	r1, r5
   1e484:	mov	r0, r4
   1e488:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e48c:	b	1e38c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   1e490:	andeq	r2, r3, sp, lsl pc
   1e494:	andeq	r5, r4, r6, asr r0
   1e498:	andeq	r3, r4, r8, asr #28
   1e49c:	andeq	r0, r0, pc, asr #7
   1e4a0:	andeq	r5, r4, r3, ror r0
   1e4a4:	andeq	r5, r4, r9, lsl #1
   1e4a8:	strheq	r5, [r4], -r1
   1e4ac:	ldrdeq	r5, [r4], -r1
   1e4b0:	andeq	r5, r4, sp, ror #1
   1e4b4:	strdeq	r5, [r4], -r7
   1e4b8:	andeq	r5, r4, r5, lsr #2
   1e4bc:	andeq	r0, r0, r4, lsl r4
   1e4c0:	andeq	r5, r4, r2, asr #2
   1e4c4:	andeq	r5, r4, r0, ror #2
   1e4c8:	andeq	r5, r4, r6, ror r1
   1e4cc:	andeq	r5, r4, r3, ror r1
   1e4d0:	andeq	r5, r4, r1, lsl #3
   1e4d4:	andeq	r5, r4, sl, lsl #3
   1e4d8:	andeq	r5, r4, r1, lsr #3
   1e4dc:	andeq	r0, r0, sp, asr #7
   1e4e0:			; <UNDEFINED> instruction: 0x00043fbb
   1e4e4:	andeq	r4, r4, r0, lsl r0
   1e4e8:	push	{r4, r5, r6, r7, lr}
   1e4ec:	sub	sp, sp, #260	; 0x104
   1e4f0:	mov	r6, r1
   1e4f4:	mov	r2, #28
   1e4f8:	mov	r4, r0
   1e4fc:	mov	r1, #0
   1e500:	add	r0, sp, #24
   1e504:	bl	140fc <memset@plt>
   1e508:	add	r1, sp, #52	; 0x34
   1e50c:	mov	r0, r6
   1e510:	bl	15a74 <__flatcc_fb_copy_scope@@Base>
   1e514:	ldr	r2, [r4, #208]	; 0xd0
   1e518:	add	r6, r6, #4
   1e51c:	mov	r3, #0
   1e520:	str	r2, [sp, #16]
   1e524:	ldr	r1, [pc, #544]	; 1e74c <__flatcc_fb_gen_c_verifier@@Base+0x2aec>
   1e528:	add	r2, sp, #12
   1e52c:	mov	r0, r6
   1e530:	str	r3, [sp, #12]
   1e534:	str	r3, [sp, #20]
   1e538:	bl	23934 <fb_symbol_table_visit@@Base>
   1e53c:	ldr	r5, [sp, #12]
   1e540:	cmp	r5, #0
   1e544:	moveq	r7, r5
   1e548:	beq	1e584 <__flatcc_fb_gen_c_verifier@@Base+0x2924>
   1e54c:	lsl	r0, r5, #4
   1e550:	bl	14090 <malloc@plt>
   1e554:	subs	r7, r0, #0
   1e558:	beq	1e584 <__flatcc_fb_gen_c_verifier@@Base+0x2924>
   1e55c:	add	r2, sp, #12
   1e560:	ldr	r1, [pc, #488]	; 1e750 <__flatcc_fb_gen_c_verifier@@Base+0x2af0>
   1e564:	mov	r0, r6
   1e568:	str	r7, [sp, #20]
   1e56c:	bl	23934 <fb_symbol_table_visit@@Base>
   1e570:	ldr	r3, [pc, #476]	; 1e754 <__flatcc_fb_gen_c_verifier@@Base+0x2af4>
   1e574:	mov	r2, #16
   1e578:	ldr	r1, [sp, #12]
   1e57c:	mov	r0, r7
   1e580:	bl	14168 <qsort@plt>
   1e584:	cmp	r5, #0
   1e588:	movle	r6, #0
   1e58c:	movgt	r6, #1
   1e590:	cmp	r7, #0
   1e594:	movne	r6, #0
   1e598:	cmp	r6, #0
   1e59c:	str	r7, [sp, #24]
   1e5a0:	beq	1e5d8 <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   1e5a4:	ldr	r0, [pc, #428]	; 1e758 <__flatcc_fb_gen_c_verifier@@Base+0x2af8>
   1e5a8:	ldr	r3, [pc, #428]	; 1e75c <__flatcc_fb_gen_c_verifier@@Base+0x2afc>
   1e5ac:	ldr	r2, [pc, #428]	; 1e760 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1e5b0:	str	r3, [sp]
   1e5b4:	ldr	r1, [pc, #424]	; 1e764 <__flatcc_fb_gen_c_verifier@@Base+0x2b04>
   1e5b8:	ldr	r3, [pc, #424]	; 1e768 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   1e5bc:	ldr	r0, [r0]
   1e5c0:	bl	140e4 <fprintf@plt>
   1e5c4:	ldr	r3, [pc, #416]	; 1e76c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1e5c8:	ldr	r2, [pc, #408]	; 1e768 <__flatcc_fb_gen_c_verifier@@Base+0x2b08>
   1e5cc:	ldr	r1, [pc, #396]	; 1e760 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1e5d0:	ldr	r0, [pc, #408]	; 1e770 <__flatcc_fb_gen_c_verifier@@Base+0x2b10>
   1e5d4:	bl	141a4 <__assert_fail@plt>
   1e5d8:	mov	r3, #3
   1e5dc:	str	r3, [sp, #40]	; 0x28
   1e5e0:	ldr	r3, [pc, #396]	; 1e774 <__flatcc_fb_gen_c_verifier@@Base+0x2b14>
   1e5e4:	ldr	r2, [r4, #208]	; 0xd0
   1e5e8:	str	r3, [sp, #28]
   1e5ec:	ldr	r3, [pc, #388]	; 1e778 <__flatcc_fb_gen_c_verifier@@Base+0x2b18>
   1e5f0:	ldr	r2, [r2, #160]	; 0xa0
   1e5f4:	str	r3, [sp, #32]
   1e5f8:	ldr	r1, [pc, #380]	; 1e77c <__flatcc_fb_gen_c_verifier@@Base+0x2b1c>
   1e5fc:	add	r3, sp, #52	; 0x34
   1e600:	mov	r0, r4
   1e604:	str	r6, [sp, #36]	; 0x24
   1e608:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e60c:	ldr	r3, [r4, #220]	; 0xdc
   1e610:	ldr	r1, [pc, #360]	; 1e780 <__flatcc_fb_gen_c_verifier@@Base+0x2b20>
   1e614:	add	r3, r3, #2
   1e618:	str	r3, [r4, #220]	; 0xdc
   1e61c:	mov	r0, r4
   1e620:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e624:	ldr	r3, [r4, #220]	; 0xdc
   1e628:	cmp	r3, #0
   1e62c:	bne	1e644 <__flatcc_fb_gen_c_verifier@@Base+0x29e4>
   1e630:	ldr	r3, [pc, #308]	; 1e76c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1e634:	mov	r2, #1152	; 0x480
   1e638:	ldr	r1, [pc, #288]	; 1e760 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   1e63c:	ldr	r0, [pc, #320]	; 1e784 <__flatcc_fb_gen_c_verifier@@Base+0x2b24>
   1e640:	b	1e5d4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   1e644:	cmp	r3, #1
   1e648:	streq	r6, [r4, #220]	; 0xdc
   1e64c:	beq	1e630 <__flatcc_fb_gen_c_verifier@@Base+0x29d0>
   1e650:	sub	r3, r3, #2
   1e654:	str	r3, [r4, #220]	; 0xdc
   1e658:	ldr	r1, [pc, #296]	; 1e788 <__flatcc_fb_gen_c_verifier@@Base+0x2b28>
   1e65c:	mov	r0, r4
   1e660:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e664:	ldr	r3, [r4, #220]	; 0xdc
   1e668:	cmp	r5, #0
   1e66c:	add	r3, r3, #1
   1e670:	str	r3, [r4, #220]	; 0xdc
   1e674:	bne	1e6a8 <__flatcc_fb_gen_c_verifier@@Base+0x2a48>
   1e678:	ldr	r1, [pc, #268]	; 1e78c <__flatcc_fb_gen_c_verifier@@Base+0x2b2c>
   1e67c:	mov	r0, r4
   1e680:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e684:	ldr	r1, [pc, #260]	; 1e790 <__flatcc_fb_gen_c_verifier@@Base+0x2b30>
   1e688:	mov	r0, r4
   1e68c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e690:	ldr	r3, [r4, #220]	; 0xdc
   1e694:	cmp	r3, #0
   1e698:	bne	1e71c <__flatcc_fb_gen_c_verifier@@Base+0x2abc>
   1e69c:	ldr	r3, [pc, #200]	; 1e76c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1e6a0:	ldr	r2, [pc, #236]	; 1e794 <__flatcc_fb_gen_c_verifier@@Base+0x2b34>
   1e6a4:	b	1e638 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   1e6a8:	ldr	r1, [pc, #232]	; 1e798 <__flatcc_fb_gen_c_verifier@@Base+0x2b38>
   1e6ac:	mov	r0, r4
   1e6b0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6b4:	ldr	r1, [pc, #224]	; 1e79c <__flatcc_fb_gen_c_verifier@@Base+0x2b3c>
   1e6b8:	mov	r0, r4
   1e6bc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6c0:	ldr	r1, [pc, #216]	; 1e7a0 <__flatcc_fb_gen_c_verifier@@Base+0x2b40>
   1e6c4:	mov	r0, r4
   1e6c8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6cc:	ldr	r1, [pc, #208]	; 1e7a4 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   1e6d0:	mov	r0, r4
   1e6d4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6d8:	ldr	r1, [pc, #200]	; 1e7a8 <__flatcc_fb_gen_c_verifier@@Base+0x2b48>
   1e6dc:	mov	r0, r4
   1e6e0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e6e4:	sub	r3, r5, #1
   1e6e8:	mov	r2, r6
   1e6ec:	add	r1, sp, #24
   1e6f0:	mov	r0, r4
   1e6f4:	str	r6, [sp]
   1e6f8:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e6fc:	ldr	r1, [pc, #168]	; 1e7ac <__flatcc_fb_gen_c_verifier@@Base+0x2b4c>
   1e700:	mov	r0, r4
   1e704:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e708:	ldr	r3, [r4, #220]	; 0xdc
   1e70c:	cmp	r3, #0
   1e710:	ldreq	r3, [pc, #84]	; 1e76c <__flatcc_fb_gen_c_verifier@@Base+0x2b0c>
   1e714:	ldreq	r2, [pc, #148]	; 1e7b0 <__flatcc_fb_gen_c_verifier@@Base+0x2b50>
   1e718:	beq	1e638 <__flatcc_fb_gen_c_verifier@@Base+0x29d8>
   1e71c:	sub	r3, r3, #1
   1e720:	str	r3, [r4, #220]	; 0xdc
   1e724:	mov	r0, r4
   1e728:	ldr	r1, [pc, #132]	; 1e7b4 <__flatcc_fb_gen_c_verifier@@Base+0x2b54>
   1e72c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e730:	ldr	r1, [pc, #108]	; 1e7a4 <__flatcc_fb_gen_c_verifier@@Base+0x2b44>
   1e734:	mov	r0, r4
   1e738:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e73c:	ldr	r0, [sp, #24]
   1e740:	bl	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1e744:	add	sp, sp, #260	; 0x104
   1e748:	pop	{r4, r5, r6, r7, pc}
   1e74c:	andeq	sp, r1, r8, asr #25
   1e750:	andeq	sp, r1, r0, ror ip
   1e754:	muleq	r1, ip, r6
   1e758:	strheq	ip, [r5], -r0
   1e75c:	andeq	r5, r4, r7, asr #3
   1e760:			; <UNDEFINED> instruction: 0x00043fbb
   1e764:	andeq	r1, r3, sl, ror #22
   1e768:	andeq	r0, r0, r4, ror r4
   1e76c:	andeq	r3, r4, r1, asr lr
   1e770:	andeq	sl, r3, r9, asr #3
   1e774:	andeq	sp, r1, r4, lsl #19
   1e778:	andeq	ip, r1, ip, asr #1
   1e77c:	andeq	r4, r4, r1, asr #32
   1e780:	andeq	r5, r4, r3, lsl #4
   1e784:	andeq	r4, r4, r0, lsl r0
   1e788:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1e78c:	andeq	r5, r4, r5, lsr r2
   1e790:	andeq	r5, r4, r7, ror #4
   1e794:	andeq	r0, r0, r5, lsl #9
   1e798:	andeq	r5, r4, r4, lsl #5
   1e79c:	andeq	r5, r4, r1, lsr #5
   1e7a0:			; <UNDEFINED> instruction: 0x000452b3
   1e7a4:	andeq	r2, r3, sp, lsl pc
   1e7a8:	strdeq	r5, [r4], -r7
   1e7ac:	andeq	r4, r4, r0, ror #7
   1e7b0:	andeq	r0, r0, lr, lsl #9
   1e7b4:	andeq	r8, r3, r3, lsl r1
   1e7b8:	push	{r4, r5, lr}
   1e7bc:	mov	r5, r1
   1e7c0:	sub	sp, sp, #268	; 0x10c
   1e7c4:	mov	r1, #0
   1e7c8:	mov	r4, r0
   1e7cc:	mov	r2, #28
   1e7d0:	add	r0, sp, #16
   1e7d4:	str	r1, [sp, #12]
   1e7d8:	bl	140fc <memset@plt>
   1e7dc:	ldrh	r3, [r5, #8]
   1e7e0:	sub	r3, r3, #3
   1e7e4:	cmp	r3, #1
   1e7e8:	bls	1e800 <__flatcc_fb_gen_c_verifier@@Base+0x2ba0>
   1e7ec:	ldr	r3, [pc, #520]	; 1e9fc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1e7f0:	ldr	r2, [pc, #520]	; 1ea00 <__flatcc_fb_gen_c_verifier@@Base+0x2da0>
   1e7f4:	ldr	r1, [pc, #520]	; 1ea04 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1e7f8:	ldr	r0, [pc, #520]	; 1ea08 <__flatcc_fb_gen_c_verifier@@Base+0x2da8>
   1e7fc:	bl	141a4 <__assert_fail@plt>
   1e800:	add	r1, sp, #12
   1e804:	ldr	r0, [r5, #20]
   1e808:	bl	1db24 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1e80c:	cmp	r0, #0
   1e810:	str	r0, [sp, #16]
   1e814:	bne	1e858 <__flatcc_fb_gen_c_verifier@@Base+0x2bf8>
   1e818:	ldr	r3, [sp, #12]
   1e81c:	cmp	r3, #0
   1e820:	ble	1e858 <__flatcc_fb_gen_c_verifier@@Base+0x2bf8>
   1e824:	ldr	r0, [pc, #480]	; 1ea0c <__flatcc_fb_gen_c_verifier@@Base+0x2dac>
   1e828:	ldr	r3, [pc, #480]	; 1ea10 <__flatcc_fb_gen_c_verifier@@Base+0x2db0>
   1e82c:	ldr	r2, [pc, #464]	; 1ea04 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1e830:	str	r3, [sp]
   1e834:	ldr	r1, [pc, #472]	; 1ea14 <__flatcc_fb_gen_c_verifier@@Base+0x2db4>
   1e838:	ldr	r3, [pc, #472]	; 1ea18 <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   1e83c:	ldr	r0, [r0]
   1e840:	bl	140e4 <fprintf@plt>
   1e844:	ldr	r3, [pc, #432]	; 1e9fc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1e848:	ldr	r2, [pc, #456]	; 1ea18 <__flatcc_fb_gen_c_verifier@@Base+0x2db8>
   1e84c:	ldr	r1, [pc, #432]	; 1ea04 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1e850:	ldr	r0, [pc, #452]	; 1ea1c <__flatcc_fb_gen_c_verifier@@Base+0x2dbc>
   1e854:	b	1e7fc <__flatcc_fb_gen_c_verifier@@Base+0x2b9c>
   1e858:	mov	r3, #2
   1e85c:	str	r3, [sp, #32]
   1e860:	ldr	r3, [pc, #440]	; 1ea20 <__flatcc_fb_gen_c_verifier@@Base+0x2dc0>
   1e864:	mov	r2, #220	; 0xdc
   1e868:	str	r3, [sp, #20]
   1e86c:	ldr	r3, [pc, #432]	; 1ea24 <__flatcc_fb_gen_c_verifier@@Base+0x2dc4>
   1e870:	mov	r1, #0
   1e874:	add	r0, sp, #44	; 0x2c
   1e878:	str	r3, [sp, #24]
   1e87c:	str	r5, [sp, #28]
   1e880:	bl	140fc <memset@plt>
   1e884:	add	r1, sp, #44	; 0x2c
   1e888:	mov	r0, r5
   1e88c:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1e890:	add	r2, sp, #44	; 0x2c
   1e894:	ldr	r1, [pc, #396]	; 1ea28 <__flatcc_fb_gen_c_verifier@@Base+0x2dc8>
   1e898:	mov	r0, r4
   1e89c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8a0:	ldr	r3, [r4, #220]	; 0xdc
   1e8a4:	ldr	r1, [pc, #384]	; 1ea2c <__flatcc_fb_gen_c_verifier@@Base+0x2dcc>
   1e8a8:	add	r3, r3, #2
   1e8ac:	str	r3, [r4, #220]	; 0xdc
   1e8b0:	mov	r0, r4
   1e8b4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8b8:	ldr	r3, [r4, #220]	; 0xdc
   1e8bc:	cmp	r3, #0
   1e8c0:	bne	1e8d8 <__flatcc_fb_gen_c_verifier@@Base+0x2c78>
   1e8c4:	ldr	r3, [pc, #304]	; 1e9fc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1e8c8:	ldr	r2, [pc, #352]	; 1ea30 <__flatcc_fb_gen_c_verifier@@Base+0x2dd0>
   1e8cc:	ldr	r1, [pc, #304]	; 1ea04 <__flatcc_fb_gen_c_verifier@@Base+0x2da4>
   1e8d0:	ldr	r0, [pc, #348]	; 1ea34 <__flatcc_fb_gen_c_verifier@@Base+0x2dd4>
   1e8d4:	b	1e7fc <__flatcc_fb_gen_c_verifier@@Base+0x2b9c>
   1e8d8:	cmp	r3, #1
   1e8dc:	moveq	r3, #0
   1e8e0:	streq	r3, [r4, #220]	; 0xdc
   1e8e4:	beq	1e8c4 <__flatcc_fb_gen_c_verifier@@Base+0x2c64>
   1e8e8:	sub	r3, r3, #2
   1e8ec:	str	r3, [r4, #220]	; 0xdc
   1e8f0:	ldr	r1, [pc, #320]	; 1ea38 <__flatcc_fb_gen_c_verifier@@Base+0x2dd8>
   1e8f4:	mov	r0, r4
   1e8f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e8fc:	ldr	r3, [r4, #220]	; 0xdc
   1e900:	add	r3, r3, #1
   1e904:	str	r3, [r4, #220]	; 0xdc
   1e908:	ldr	r3, [sp, #12]
   1e90c:	cmp	r3, #0
   1e910:	bne	1e950 <__flatcc_fb_gen_c_verifier@@Base+0x2cf0>
   1e914:	ldr	r1, [pc, #288]	; 1ea3c <__flatcc_fb_gen_c_verifier@@Base+0x2ddc>
   1e918:	mov	r0, r4
   1e91c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e920:	ldr	r1, [pc, #280]	; 1ea40 <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
   1e924:	mov	r0, r4
   1e928:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e92c:	ldr	r1, [pc, #272]	; 1ea44 <__flatcc_fb_gen_c_verifier@@Base+0x2de4>
   1e930:	mov	r0, r4
   1e934:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e938:	ldr	r3, [r4, #220]	; 0xdc
   1e93c:	cmp	r3, #0
   1e940:	bne	1e9c8 <__flatcc_fb_gen_c_verifier@@Base+0x2d68>
   1e944:	ldr	r3, [pc, #176]	; 1e9fc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1e948:	ldr	r2, [pc, #248]	; 1ea48 <__flatcc_fb_gen_c_verifier@@Base+0x2de8>
   1e94c:	b	1e8cc <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1e950:	ldr	r1, [pc, #244]	; 1ea4c <__flatcc_fb_gen_c_verifier@@Base+0x2dec>
   1e954:	mov	r0, r4
   1e958:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e95c:	ldr	r1, [pc, #236]	; 1ea50 <__flatcc_fb_gen_c_verifier@@Base+0x2df0>
   1e960:	mov	r0, r4
   1e964:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e968:	ldr	r1, [pc, #228]	; 1ea54 <__flatcc_fb_gen_c_verifier@@Base+0x2df4>
   1e96c:	mov	r0, r4
   1e970:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e974:	ldr	r1, [pc, #220]	; 1ea58 <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   1e978:	mov	r0, r4
   1e97c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e980:	ldr	r1, [pc, #212]	; 1ea5c <__flatcc_fb_gen_c_verifier@@Base+0x2dfc>
   1e984:	mov	r0, r4
   1e988:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e98c:	ldr	r3, [sp, #12]
   1e990:	mov	r2, #0
   1e994:	sub	r3, r3, #1
   1e998:	str	r2, [sp]
   1e99c:	add	r1, sp, #16
   1e9a0:	mov	r0, r4
   1e9a4:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1e9a8:	ldr	r1, [pc, #176]	; 1ea60 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
   1e9ac:	mov	r0, r4
   1e9b0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e9b4:	ldr	r3, [r4, #220]	; 0xdc
   1e9b8:	cmp	r3, #0
   1e9bc:	ldreq	r3, [pc, #56]	; 1e9fc <__flatcc_fb_gen_c_verifier@@Base+0x2d9c>
   1e9c0:	ldreq	r2, [pc, #156]	; 1ea64 <__flatcc_fb_gen_c_verifier@@Base+0x2e04>
   1e9c4:	beq	1e8cc <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1e9c8:	sub	r3, r3, #1
   1e9cc:	str	r3, [r4, #220]	; 0xdc
   1e9d0:	mov	r0, r4
   1e9d4:	ldr	r1, [pc, #140]	; 1ea68 <__flatcc_fb_gen_c_verifier@@Base+0x2e08>
   1e9d8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e9dc:	ldr	r1, [pc, #116]	; 1ea58 <__flatcc_fb_gen_c_verifier@@Base+0x2df8>
   1e9e0:	mov	r0, r4
   1e9e4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1e9e8:	ldr	r0, [sp, #16]
   1e9ec:	bl	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1e9f0:	mov	r0, #0
   1e9f4:	add	sp, sp, #268	; 0x10c
   1e9f8:	pop	{r4, r5, pc}
   1e9fc:	andeq	r3, r4, r8, ror #28
   1ea00:	ldrdeq	r0, [r0], -lr
   1ea04:			; <UNDEFINED> instruction: 0x00043fbb
   1ea08:	ldrdeq	r2, [r3], -r1
   1ea0c:	strheq	ip, [r5], -r0
   1ea10:	andeq	r5, r4, r7, asr #3
   1ea14:	andeq	r1, r3, sl, ror #22
   1ea18:	andeq	r0, r0, r1, ror #9
   1ea1c:	andeq	sl, r3, r9, asr #3
   1ea20:	andeq	sp, r1, r8, lsr r8
   1ea24:	ldrdeq	ip, [r1], -r8
   1ea28:			; <UNDEFINED> instruction: 0x000452bf
   1ea2c:	andeq	r5, r4, r2, lsr #6
   1ea30:	andeq	r0, r0, pc, ror #9
   1ea34:	andeq	r4, r4, r0, lsl r0
   1ea38:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1ea3c:	andeq	r5, r4, r4, asr r3
   1ea40:	andeq	r5, r4, lr, ror #6
   1ea44:	andeq	r5, r4, r7, ror #4
   1ea48:	strdeq	r0, [r0], -r5
   1ea4c:	andeq	r5, r4, r4, lsl #5
   1ea50:	andeq	r5, r4, r1, lsr #5
   1ea54:			; <UNDEFINED> instruction: 0x000452b3
   1ea58:	andeq	r2, r3, sp, lsl pc
   1ea5c:	strdeq	r5, [r4], -r7
   1ea60:	andeq	r4, r4, r0, ror #7
   1ea64:	strdeq	r0, [r0], -lr
   1ea68:	andeq	r8, r3, r3, lsl r1

0001ea6c <__flatcc_fb_gen_c_json_parser@@Base>:
   1ea6c:	ldr	r3, [r0, #208]	; 0xd0
   1ea70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea74:	mov	r4, r0
   1ea78:	sub	sp, sp, #268	; 0x10c
   1ea7c:	ldr	r2, [r3, #164]	; 0xa4
   1ea80:	ldr	r1, [pc, #3980]	; 1fa14 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   1ea84:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ea88:	ldr	r3, [r4, #208]	; 0xd0
   1ea8c:	ldr	r1, [pc, #3972]	; 1fa18 <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   1ea90:	mov	r0, r4
   1ea94:	ldr	r2, [r3, #164]	; 0xa4
   1ea98:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ea9c:	ldr	r1, [pc, #3960]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1eaa0:	mov	r0, r4
   1eaa4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eaa8:	ldr	r1, [pc, #3952]	; 1fa20 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   1eaac:	mov	r0, r4
   1eab0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eab4:	ldr	r1, [pc, #3936]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1eab8:	mov	r0, r4
   1eabc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eac0:	ldr	r1, [pc, #3932]	; 1fa24 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   1eac4:	mov	r0, r4
   1eac8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eacc:	ldr	r2, [pc, #3924]	; 1fa28 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1ead0:	ldr	r1, [pc, #3924]	; 1fa2c <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   1ead4:	mov	r0, r4
   1ead8:	bl	15954 <__flatcc_fb_gen_c_includes@@Base>
   1eadc:	ldr	r3, [r4, #212]	; 0xd4
   1eae0:	ldr	r3, [r3, #140]	; 0x8c
   1eae4:	cmp	r3, #0
   1eae8:	beq	1eaf8 <__flatcc_fb_gen_c_json_parser@@Base+0x8c>
   1eaec:	ldr	r1, [r4, #204]	; 0xcc
   1eaf0:	ldr	r0, [pc, #3896]	; 1fa30 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   1eaf4:	bl	14180 <fputs@plt>
   1eaf8:	ldr	r1, [pc, #3868]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1eafc:	mov	r0, r4
   1eb00:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb04:	ldr	r3, [r4, #208]	; 0xd0
   1eb08:	mov	r2, #220	; 0xdc
   1eb0c:	mov	r1, #0
   1eb10:	ldr	r5, [r3, #52]	; 0x34
   1eb14:	add	r0, sp, #44	; 0x2c
   1eb18:	bl	140fc <memset@plt>
   1eb1c:	cmp	r5, #0
   1eb20:	beq	1ec0c <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1eb24:	ldrh	r3, [r5, #8]
   1eb28:	cmp	r3, #1
   1eb2c:	bhi	1ec0c <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1eb30:	ldr	r1, [pc, #3836]	; 1fa34 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   1eb34:	mov	r0, r4
   1eb38:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb3c:	ldr	r1, [pc, #3828]	; 1fa38 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   1eb40:	mov	r0, r4
   1eb44:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb48:	ldr	r1, [pc, #3820]	; 1fa3c <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   1eb4c:	mov	r0, r4
   1eb50:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb54:	ldr	r1, [pc, #3812]	; 1fa40 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1eb58:	mov	r0, r4
   1eb5c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb60:	ldr	r1, [pc, #3804]	; 1fa44 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   1eb64:	mov	r0, r4
   1eb68:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb6c:	ldr	r1, [pc, #3796]	; 1fa48 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   1eb70:	mov	r0, r4
   1eb74:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb78:	ldr	r1, [pc, #3788]	; 1fa4c <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   1eb7c:	mov	r0, r4
   1eb80:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb84:	ldr	r1, [pc, #3780]	; 1fa50 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   1eb88:	mov	r0, r4
   1eb8c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb90:	ldr	r1, [pc, #3772]	; 1fa54 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   1eb94:	mov	r0, r4
   1eb98:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eb9c:	ldr	r3, [r4, #208]	; 0xd0
   1eba0:	ldr	r1, [pc, #3760]	; 1fa58 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1eba4:	mov	r0, r4
   1eba8:	ldr	r2, [r3, #160]	; 0xa0
   1ebac:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ebb0:	ldr	r3, [r4, #220]	; 0xdc
   1ebb4:	ldr	r1, [pc, #3744]	; 1fa5c <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   1ebb8:	add	r3, r3, #2
   1ebbc:	str	r3, [r4, #220]	; 0xdc
   1ebc0:	mov	r0, r4
   1ebc4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ebc8:	ldr	r3, [r4, #220]	; 0xdc
   1ebcc:	cmp	r3, #0
   1ebd0:	bne	1ebe8 <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   1ebd4:	ldr	r3, [pc, #3716]	; 1fa60 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1ebd8:	ldr	r2, [pc, #3716]	; 1fa64 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   1ebdc:	ldr	r1, [pc, #3716]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1ebe0:	ldr	r0, [pc, #3716]	; 1fa6c <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1ebe4:	bl	141a4 <__assert_fail@plt>
   1ebe8:	cmp	r3, #1
   1ebec:	moveq	r3, #0
   1ebf0:	streq	r3, [r4, #220]	; 0xdc
   1ebf4:	beq	1ebd4 <__flatcc_fb_gen_c_json_parser@@Base+0x168>
   1ebf8:	sub	r3, r3, #2
   1ebfc:	str	r3, [r4, #220]	; 0xdc
   1ec00:	ldr	r1, [pc, #3604]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1ec04:	mov	r0, r4
   1ec08:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec0c:	ldr	r3, [r4, #208]	; 0xd0
   1ec10:	ldr	r6, [pc, #3672]	; 1fa70 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1ec14:	ldr	r7, [pc, #3672]	; 1fa74 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1ec18:	ldr	r5, [r3, #40]	; 0x28
   1ec1c:	ldr	r8, [pc, #3668]	; 1fa78 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   1ec20:	cmp	r5, #0
   1ec24:	bne	1ec80 <__flatcc_fb_gen_c_json_parser@@Base+0x214>
   1ec28:	ldr	r3, [r4, #208]	; 0xd0
   1ec2c:	mov	r2, r4
   1ec30:	ldr	r1, [pc, #3652]	; 1fa7c <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1ec34:	ldr	r0, [r3, #60]	; 0x3c
   1ec38:	bl	24024 <fb_scope_table_visit@@Base>
   1ec3c:	ldr	r3, [r4, #208]	; 0xd0
   1ec40:	ldr	r1, [pc, #3640]	; 1fa80 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1ec44:	mov	r0, r4
   1ec48:	ldr	r2, [r3, #160]	; 0xa0
   1ec4c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec50:	ldr	r3, [r4, #220]	; 0xdc
   1ec54:	ldr	r1, [pc, #3608]	; 1fa74 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1ec58:	add	r3, r3, #2
   1ec5c:	str	r3, [r4, #220]	; 0xdc
   1ec60:	mov	r0, r4
   1ec64:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ec68:	ldr	r3, [r4, #220]	; 0xdc
   1ec6c:	cmp	r3, #0
   1ec70:	bne	1eddc <__flatcc_fb_gen_c_json_parser@@Base+0x370>
   1ec74:	ldr	r3, [pc, #3556]	; 1fa60 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1ec78:	ldr	r2, [pc, #3588]	; 1fa84 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   1ec7c:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ec80:	ldrh	r3, [r5, #8]
   1ec84:	cmp	r3, #4
   1ec88:	ldrls	pc, [pc, r3, lsl #2]
   1ec8c:	b	1ed50 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1ec90:	andeq	lr, r1, r8, asr sp
   1ec94:	andeq	lr, r1, r4, lsr #26
   1ec98:	andeq	lr, r1, r0, asr sp
   1ec9c:	andeq	lr, r1, r0, ror sp
   1eca0:	andeq	lr, r1, r4, lsr #25
   1eca4:	add	r1, sp, #44	; 0x2c
   1eca8:	mov	r0, r5
   1ecac:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ecb0:	add	r2, sp, #44	; 0x2c
   1ecb4:	ldr	r1, [pc, #3532]	; 1fa88 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1ecb8:	mov	r0, r4
   1ecbc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecc0:	add	r2, sp, #44	; 0x2c
   1ecc4:	ldr	r1, [pc, #3520]	; 1fa8c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1ecc8:	mov	r0, r4
   1eccc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecd0:	add	r2, sp, #44	; 0x2c
   1ecd4:	mov	r1, r6
   1ecd8:	mov	r0, r4
   1ecdc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ece0:	ldr	r3, [r4, #220]	; 0xdc
   1ece4:	mov	r1, r7
   1ece8:	add	r3, r3, #2
   1ecec:	str	r3, [r4, #220]	; 0xdc
   1ecf0:	mov	r0, r4
   1ecf4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ecf8:	ldr	r3, [r4, #220]	; 0xdc
   1ecfc:	cmp	r3, #0
   1ed00:	bne	1ed10 <__flatcc_fb_gen_c_json_parser@@Base+0x2a4>
   1ed04:	ldr	r3, [pc, #3412]	; 1fa60 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1ed08:	ldr	r2, [pc, #3456]	; 1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1ed0c:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ed10:	cmp	r3, #1
   1ed14:	bne	1edd0 <__flatcc_fb_gen_c_json_parser@@Base+0x364>
   1ed18:	mov	r3, #0
   1ed1c:	str	r3, [r4, #220]	; 0xdc
   1ed20:	b	1ed04 <__flatcc_fb_gen_c_json_parser@@Base+0x298>
   1ed24:	add	r1, sp, #44	; 0x2c
   1ed28:	mov	r0, r5
   1ed2c:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ed30:	add	r2, sp, #44	; 0x2c
   1ed34:	ldr	r1, [pc, #3416]	; 1fa94 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1ed38:	mov	r0, r4
   1ed3c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed40:	ldr	r1, [pc, #3408]	; 1fa98 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1ed44:	add	r2, sp, #44	; 0x2c
   1ed48:	mov	r0, r4
   1ed4c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed50:	ldr	r5, [r5]
   1ed54:	b	1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4>
   1ed58:	add	r1, sp, #44	; 0x2c
   1ed5c:	mov	r0, r5
   1ed60:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ed64:	add	r2, sp, #44	; 0x2c
   1ed68:	mov	r1, r8
   1ed6c:	b	1ed48 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc>
   1ed70:	add	r1, sp, #44	; 0x2c
   1ed74:	mov	r0, r5
   1ed78:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1ed7c:	add	r2, sp, #44	; 0x2c
   1ed80:	mov	r1, r6
   1ed84:	mov	r0, r4
   1ed88:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ed8c:	ldr	r3, [r4, #220]	; 0xdc
   1ed90:	add	r2, sp, #44	; 0x2c
   1ed94:	add	r3, r3, #2
   1ed98:	str	r3, [r4, #220]	; 0xdc
   1ed9c:	mov	r1, r7
   1eda0:	mov	r0, r4
   1eda4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1eda8:	ldr	r3, [r4, #220]	; 0xdc
   1edac:	cmp	r3, #0
   1edb0:	bne	1edc0 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   1edb4:	ldr	r3, [pc, #3236]	; 1fa60 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1edb8:	ldr	r2, [pc, #3292]	; 1fa9c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1edbc:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1edc0:	cmp	r3, #1
   1edc4:	moveq	r3, #0
   1edc8:	streq	r3, [r4, #220]	; 0xdc
   1edcc:	beq	1edb4 <__flatcc_fb_gen_c_json_parser@@Base+0x348>
   1edd0:	sub	r3, r3, #2
   1edd4:	str	r3, [r4, #220]	; 0xdc
   1edd8:	b	1ed50 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1eddc:	cmp	r3, #1
   1ede0:	streq	r5, [r4, #220]	; 0xdc
   1ede4:	beq	1ec74 <__flatcc_fb_gen_c_json_parser@@Base+0x208>
   1ede8:	sub	r3, r3, #2
   1edec:	str	r3, [r4, #220]	; 0xdc
   1edf0:	ldr	r1, [pc, #3108]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1edf4:	mov	r0, r4
   1edf8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1edfc:	ldr	r3, [r4, #208]	; 0xd0
   1ee00:	ldr	r7, [pc, #3224]	; 1faa0 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1ee04:	ldr	r5, [r3, #40]	; 0x28
   1ee08:	cmp	r5, #0
   1ee0c:	bne	1ef68 <__flatcc_fb_gen_c_json_parser@@Base+0x4fc>
   1ee10:	ldr	r3, [r4, #208]	; 0xd0
   1ee14:	mov	r2, r4
   1ee18:	ldr	r1, [pc, #3204]	; 1faa4 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1ee1c:	ldr	r0, [r3, #60]	; 0x3c
   1ee20:	bl	24024 <fb_scope_table_visit@@Base>
   1ee24:	mov	r2, #28
   1ee28:	mov	r1, r5
   1ee2c:	add	r0, sp, #16
   1ee30:	bl	140fc <memset@plt>
   1ee34:	ldr	r6, [r4, #208]	; 0xd0
   1ee38:	mov	r2, #44	; 0x2c
   1ee3c:	mov	r1, r5
   1ee40:	ldr	r8, [r6, #60]	; 0x3c
   1ee44:	add	r0, sp, r2
   1ee48:	bl	140fc <memset@plt>
   1ee4c:	mov	r3, #1
   1ee50:	add	r2, sp, #44	; 0x2c
   1ee54:	ldr	r1, [pc, #3148]	; 1faa8 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1ee58:	mov	r0, r8
   1ee5c:	str	r3, [sp, #44]	; 0x2c
   1ee60:	str	r6, [sp, #84]	; 0x54
   1ee64:	bl	24024 <fb_scope_table_visit@@Base>
   1ee68:	ldr	r7, [sp, #48]	; 0x30
   1ee6c:	mov	r1, #8
   1ee70:	mov	r0, r7
   1ee74:	bl	13fe8 <calloc@plt>
   1ee78:	ldr	sl, [sp, #52]	; 0x34
   1ee7c:	mov	r1, #8
   1ee80:	mov	fp, r0
   1ee84:	str	r0, [sp, #60]	; 0x3c
   1ee88:	mov	r0, sl
   1ee8c:	bl	13fe8 <calloc@plt>
   1ee90:	ldr	r9, [sp, #56]	; 0x38
   1ee94:	mov	r6, r0
   1ee98:	str	r0, [sp, #64]	; 0x40
   1ee9c:	mov	r0, r9
   1eea0:	bl	14090 <malloc@plt>
   1eea4:	cmp	r7, #0
   1eea8:	movle	r7, #0
   1eeac:	movgt	r7, #1
   1eeb0:	cmp	fp, #0
   1eeb4:	movne	r7, #0
   1eeb8:	cmp	r7, #0
   1eebc:	str	fp, [sp, #72]	; 0x48
   1eec0:	str	r6, [sp, #76]	; 0x4c
   1eec4:	str	r0, [sp, #68]	; 0x44
   1eec8:	str	r0, [sp, #80]	; 0x50
   1eecc:	bne	1ef00 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1eed0:	cmp	sl, #0
   1eed4:	clz	r6, r6
   1eed8:	lsr	r6, r6, #5
   1eedc:	movle	r6, #0
   1eee0:	cmp	r6, #0
   1eee4:	bne	1ef00 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1eee8:	cmp	r9, #0
   1eeec:	clz	r0, r0
   1eef0:	lsr	r0, r0, #5
   1eef4:	moveq	r0, #0
   1eef8:	cmp	r0, #0
   1eefc:	beq	1f864 <__flatcc_fb_gen_c_json_parser@@Base+0xdf8>
   1ef00:	add	r0, sp, #44	; 0x2c
   1ef04:	bl	1d6d8 <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1ef08:	ldr	r3, [r4, #208]	; 0xd0
   1ef0c:	ldr	r5, [r3, #52]	; 0x34
   1ef10:	cmp	r5, #0
   1ef14:	beq	1ef2c <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1ef18:	ldrh	r6, [r5, #8]
   1ef1c:	cmp	r6, #0
   1ef20:	beq	1fcec <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   1ef24:	cmp	r6, #1
   1ef28:	beq	1fe84 <__flatcc_fb_gen_c_json_parser@@Base+0x1418>
   1ef2c:	ldr	r3, [r4, #212]	; 0xd4
   1ef30:	ldr	r3, [r3, #140]	; 0x8c
   1ef34:	cmp	r3, #0
   1ef38:	beq	1ef48 <__flatcc_fb_gen_c_json_parser@@Base+0x4dc>
   1ef3c:	ldr	r1, [r4, #204]	; 0xcc
   1ef40:	ldr	r0, [pc, #2916]	; 1faac <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1ef44:	bl	14180 <fputs@plt>
   1ef48:	ldr	r3, [r4, #208]	; 0xd0
   1ef4c:	mov	r0, r4
   1ef50:	ldr	r1, [pc, #2904]	; 1fab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1ef54:	ldr	r2, [r3, #164]	; 0xa4
   1ef58:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ef5c:	mov	r0, #0
   1ef60:	add	sp, sp, #268	; 0x10c
   1ef64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef68:	ldrh	r3, [r5, #8]
   1ef6c:	cmp	r3, #4
   1ef70:	ldrls	pc, [pc, r3, lsl #2]
   1ef74:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1ef78:			; <UNDEFINED> instruction: 0x0001f3bc
   1ef7c:			; <UNDEFINED> instruction: 0x0001efb4
   1ef80:			; <UNDEFINED> instruction: 0x0001f3b4
   1ef84:	andeq	lr, r1, r4, lsr #31
   1ef88:	andeq	lr, r1, ip, lsl #31
   1ef8c:	mov	r1, r5
   1ef90:	mov	r0, r4
   1ef94:	bl	1c468 <__flatcc_fb_gen_c_verifier@@Base+0x808>
   1ef98:	mov	r1, r5
   1ef9c:	mov	r0, r4
   1efa0:	bl	1c8d8 <__flatcc_fb_gen_c_verifier@@Base+0xc78>
   1efa4:	mov	r1, r5
   1efa8:	mov	r0, r4
   1efac:	bl	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x2b58>
   1efb0:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1efb4:	mov	r2, #28
   1efb8:	mov	r1, #0
   1efbc:	add	r0, sp, #16
   1efc0:	bl	140fc <memset@plt>
   1efc4:	ldrh	r3, [r5, #8]
   1efc8:	cmp	r3, #1
   1efcc:	beq	1efe4 <__flatcc_fb_gen_c_json_parser@@Base+0x578>
   1efd0:	ldr	r3, [pc, #2780]	; 1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1efd4:	ldr	r2, [pc, #2780]	; 1fab8 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1efd8:	ldr	r1, [pc, #2696]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1efdc:	ldr	r0, [pc, #2776]	; 1fabc <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1efe0:	b	1ebe4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1efe4:	add	r1, sp, #12
   1efe8:	ldr	r0, [r5, #20]
   1efec:	bl	1db24 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1eff0:	cmp	r0, #0
   1eff4:	str	r0, [sp, #16]
   1eff8:	bne	1f03c <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   1effc:	ldr	r3, [sp, #12]
   1f000:	cmp	r3, #0
   1f004:	ble	1f03c <__flatcc_fb_gen_c_json_parser@@Base+0x5d0>
   1f008:	ldr	r0, [pc, #2736]	; 1fac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1f00c:	ldr	r3, [pc, #2736]	; 1fac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1f010:	ldr	r2, [pc, #2640]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1f014:	str	r3, [sp]
   1f018:	ldr	r1, [pc, #2728]	; 1fac8 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1f01c:	ldr	r3, [pc, #2728]	; 1facc <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1f020:	ldr	r0, [r0]
   1f024:	bl	140e4 <fprintf@plt>
   1f028:	ldr	r3, [pc, #2692]	; 1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1f02c:	ldr	r2, [pc, #2712]	; 1facc <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1f030:	ldr	r1, [pc, #2608]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1f034:	ldr	r0, [pc, #2708]	; 1fad0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1f038:	b	1ebe4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1f03c:	mov	r3, #1
   1f040:	str	r3, [sp, #32]
   1f044:	ldr	r3, [pc, #2696]	; 1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1f048:	mov	r2, #220	; 0xdc
   1f04c:	mov	r1, #0
   1f050:	add	r0, sp, #44	; 0x2c
   1f054:	str	r3, [sp, #24]
   1f058:	str	r5, [sp, #28]
   1f05c:	str	r7, [sp, #20]
   1f060:	bl	140fc <memset@plt>
   1f064:	add	r1, sp, #44	; 0x2c
   1f068:	mov	r0, r5
   1f06c:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1f070:	add	r2, sp, #44	; 0x2c
   1f074:	ldr	r1, [pc, #2652]	; 1fad8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1f078:	mov	r0, r4
   1f07c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f080:	ldr	r1, [pc, #2940]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f084:	mov	r0, r4
   1f088:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f08c:	ldr	r3, [r4, #220]	; 0xdc
   1f090:	ldr	r1, [pc, #2628]	; 1fadc <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1f094:	add	r3, r3, #1
   1f098:	str	r3, [r4, #220]	; 0xdc
   1f09c:	mov	r0, r4
   1f0a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0a4:	ldr	r3, [sp, #12]
   1f0a8:	cmp	r3, #0
   1f0ac:	ble	1f0e0 <__flatcc_fb_gen_c_json_parser@@Base+0x674>
   1f0b0:	ldr	r1, [pc, #2600]	; 1fae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1f0b4:	mov	r0, r4
   1f0b8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0bc:	ldr	r1, [pc, #2592]	; 1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1f0c0:	mov	r0, r4
   1f0c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0c8:	ldr	r1, [pc, #2804]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1f0cc:	mov	r0, r4
   1f0d0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0d4:	ldr	r1, [pc, #2796]	; 1fbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1f0d8:	mov	r0, r4
   1f0dc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0e0:	ldr	r1, [pc, #2356]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f0e4:	mov	r0, r4
   1f0e8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0ec:	ldr	r1, [pc, #2548]	; 1fae8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1f0f0:	mov	r0, r4
   1f0f4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f0f8:	ldr	r1, [pc, #2540]	; 1faec <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1f0fc:	mov	r0, r4
   1f100:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f104:	ldr	r3, [r4, #220]	; 0xdc
   1f108:	add	r3, r3, #1
   1f10c:	str	r3, [r4, #220]	; 0xdc
   1f110:	ldr	r3, [sp, #12]
   1f114:	cmp	r3, #0
   1f118:	bne	1f158 <__flatcc_fb_gen_c_json_parser@@Base+0x6ec>
   1f11c:	ldr	r1, [pc, #2508]	; 1faf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1f120:	mov	r0, r4
   1f124:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f128:	ldr	r1, [pc, #2500]	; 1faf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1f12c:	mov	r0, r4
   1f130:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f134:	ldr	r1, [pc, #2492]	; 1faf8 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1f138:	mov	r0, r4
   1f13c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f140:	ldr	r3, [r4, #220]	; 0xdc
   1f144:	cmp	r3, #0
   1f148:	bne	1f190 <__flatcc_fb_gen_c_json_parser@@Base+0x724>
   1f14c:	ldr	r3, [pc, #2400]	; 1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1f150:	ldr	r2, [pc, #2468]	; 1fafc <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1f154:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f158:	mov	r0, r4
   1f15c:	ldr	r1, [pc, #2460]	; 1fb00 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1f160:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f164:	mov	r0, r4
   1f168:	ldr	r1, [pc, #2652]	; 1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1f16c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f170:	ldr	r3, [sp, #12]
   1f174:	mov	r2, #0
   1f178:	str	r2, [sp]
   1f17c:	sub	r3, r3, #1
   1f180:	add	r1, sp, #16
   1f184:	mov	r0, r4
   1f188:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1f18c:	b	1f134 <__flatcc_fb_gen_c_json_parser@@Base+0x6c8>
   1f190:	sub	r3, r3, #1
   1f194:	str	r3, [r4, #220]	; 0xdc
   1f198:	ldr	r1, [pc, #2724]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f19c:	mov	r0, r4
   1f1a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f1a4:	ldr	r1, [pc, #2596]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f1a8:	mov	r0, r4
   1f1ac:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f1b0:	ldr	r3, [sp, #12]
   1f1b4:	cmp	r3, #0
   1f1b8:	ble	1f1ec <__flatcc_fb_gen_c_json_parser@@Base+0x780>
   1f1bc:	ldr	r3, [r4, #220]	; 0xdc
   1f1c0:	ldr	r1, [pc, #2364]	; 1fb04 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1f1c4:	str	r3, [r4, #228]	; 0xe4
   1f1c8:	mov	r3, #0
   1f1cc:	str	r3, [r4, #220]	; 0xdc
   1f1d0:	mov	r0, r4
   1f1d4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f1d8:	ldr	r3, [r4, #228]	; 0xe4
   1f1dc:	ldr	r1, [pc, #2340]	; 1fb08 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1f1e0:	str	r3, [r4, #220]	; 0xdc
   1f1e4:	mov	r0, r4
   1f1e8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f1ec:	ldr	r3, [r4, #220]	; 0xdc
   1f1f0:	cmp	r3, #0
   1f1f4:	ldreq	r3, [pc, #2232]	; 1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1f1f8:	ldreq	r2, [pc, #2316]	; 1fb0c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1f1fc:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f200:	sub	r3, r3, #1
   1f204:	str	r3, [r4, #220]	; 0xdc
   1f208:	ldr	r1, [pc, #2612]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f20c:	mov	r0, r4
   1f210:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f214:	ldr	r1, [pc, #2048]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f218:	mov	r0, r4
   1f21c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f220:	ldr	r0, [sp, #16]
   1f224:	bl	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1f228:	ldrh	r3, [r5, #8]
   1f22c:	cmp	r3, #1
   1f230:	ldrne	r3, [pc, #2264]	; 1fb10 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1f234:	ldrne	r2, [pc, #2264]	; 1fb14 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1f238:	bne	1efd8 <__flatcc_fb_gen_c_json_parser@@Base+0x56c>
   1f23c:	mov	r2, #220	; 0xdc
   1f240:	mov	r1, #0
   1f244:	add	r0, sp, #44	; 0x2c
   1f248:	bl	140fc <memset@plt>
   1f24c:	add	r1, sp, #44	; 0x2c
   1f250:	mov	r0, r5
   1f254:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1f258:	add	r2, sp, #44	; 0x2c
   1f25c:	ldr	r1, [pc, #2228]	; 1fb18 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   1f260:	mov	r0, r4
   1f264:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f268:	ldr	r1, [pc, #2452]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f26c:	mov	r0, r4
   1f270:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f274:	ldr	r3, [r4, #220]	; 0xdc
   1f278:	ldr	r1, [pc, #2148]	; 1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1f27c:	add	r3, r3, #1
   1f280:	str	r3, [r4, #220]	; 0xdc
   1f284:	mov	r0, r4
   1f288:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f28c:	ldr	r1, [pc, #1928]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f290:	mov	r0, r4
   1f294:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f298:	ldr	r1, [pc, #2172]	; 1fb1c <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1f29c:	mov	r0, r4
   1f2a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2a4:	ldrh	r1, [r5, #104]	; 0x68
   1f2a8:	ldrd	r2, [r5, #112]	; 0x70
   1f2ac:	mov	r0, r4
   1f2b0:	str	r1, [sp]
   1f2b4:	ldr	r1, [pc, #2148]	; 1fb20 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   1f2b8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2bc:	add	r2, sp, #44	; 0x2c
   1f2c0:	ldr	r1, [pc, #2140]	; 1fb24 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   1f2c4:	mov	r0, r4
   1f2c8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2cc:	ldr	r1, [pc, #2132]	; 1fb28 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   1f2d0:	mov	r0, r4
   1f2d4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2d8:	ldr	r1, [pc, #2288]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f2dc:	mov	r0, r4
   1f2e0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f2e4:	ldr	r3, [r4, #220]	; 0xdc
   1f2e8:	ldr	r1, [pc, #2068]	; 1fb04 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1f2ec:	str	r3, [r4, #228]	; 0xe4
   1f2f0:	mov	r3, #0
   1f2f4:	str	r3, [r4, #220]	; 0xdc
   1f2f8:	mov	r0, r4
   1f2fc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f300:	ldr	r3, [r4, #228]	; 0xe4
   1f304:	ldr	r1, [pc, #2044]	; 1fb08 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1f308:	str	r3, [r4, #220]	; 0xdc
   1f30c:	mov	r0, r4
   1f310:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f314:	ldr	r3, [r4, #220]	; 0xdc
   1f318:	cmp	r3, #0
   1f31c:	ldreq	r3, [pc, #2028]	; 1fb10 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1f320:	ldreq	r2, [pc, #2052]	; 1fb2c <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   1f324:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f328:	sub	r3, r3, #1
   1f32c:	str	r3, [r4, #220]	; 0xdc
   1f330:	ldr	r1, [pc, #2316]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f334:	mov	r0, r4
   1f338:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f33c:	ldr	r1, [pc, #1752]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f340:	mov	r0, r4
   1f344:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f348:	add	r2, sp, #44	; 0x2c
   1f34c:	ldr	r1, [pc, #2012]	; 1fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1f350:	mov	r0, r4
   1f354:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f358:	ldr	r1, [pc, #2212]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f35c:	mov	r0, r4
   1f360:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f364:	ldr	r3, [r4, #220]	; 0xdc
   1f368:	add	r2, sp, #44	; 0x2c
   1f36c:	add	r3, r3, #1
   1f370:	str	r3, [r4, #220]	; 0xdc
   1f374:	ldr	r1, [pc, #1976]	; 1fb34 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   1f378:	mov	r0, r4
   1f37c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f380:	ldr	r3, [r4, #220]	; 0xdc
   1f384:	cmp	r3, #0
   1f388:	ldreq	r3, [pc, #1920]	; 1fb10 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1f38c:	moveq	r2, #1376	; 0x560
   1f390:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f394:	sub	r3, r3, #1
   1f398:	ldr	r1, [pc, #2212]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f39c:	mov	r0, r4
   1f3a0:	str	r3, [r4, #220]	; 0xdc
   1f3a4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3a8:	ldr	r1, [pc, #1644]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f3ac:	mov	r0, r4
   1f3b0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f3b4:	ldr	r5, [r5]
   1f3b8:	b	1ee08 <__flatcc_fb_gen_c_json_parser@@Base+0x39c>
   1f3bc:	mov	r2, #28
   1f3c0:	mov	r1, #0
   1f3c4:	add	r0, sp, #16
   1f3c8:	bl	140fc <memset@plt>
   1f3cc:	ldrh	r3, [r5, #8]
   1f3d0:	cmp	r3, #0
   1f3d4:	ldrne	r3, [pc, #1884]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f3d8:	ldrne	r2, [pc, #1884]	; 1fb3c <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   1f3dc:	ldrne	r1, [pc, #1668]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1f3e0:	ldrne	r0, [pc, #1880]	; 1fb40 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   1f3e4:	bne	1ebe4 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1f3e8:	add	r1, sp, #12
   1f3ec:	ldr	r0, [r5, #20]
   1f3f0:	bl	1db24 <__flatcc_fb_gen_c_verifier@@Base+0x1ec4>
   1f3f4:	ldr	ip, [sp, #12]
   1f3f8:	cmp	r0, #0
   1f3fc:	str	r0, [sp, #16]
   1f400:	bne	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x9cc>
   1f404:	cmp	ip, #0
   1f408:	ble	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x9cc>
   1f40c:	ldr	r0, [pc, #1708]	; 1fac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1f410:	ldr	r3, [pc, #1708]	; 1fac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1f414:	ldr	r2, [pc, #1612]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1f418:	str	r3, [sp]
   1f41c:	ldr	r1, [pc, #1700]	; 1fac8 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1f420:	mov	r3, #1392	; 0x570
   1f424:	ldr	r0, [r0]
   1f428:	bl	140e4 <fprintf@plt>
   1f42c:	ldr	r3, [pc, #1796]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f430:	mov	r2, #1392	; 0x570
   1f434:	b	1f030 <__flatcc_fb_gen_c_json_parser@@Base+0x5c4>
   1f438:	ldr	r2, [pc, #1684]	; 1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1f43c:	mov	r3, #0
   1f440:	str	r2, [sp, #24]
   1f444:	add	r0, r0, #12
   1f448:	mov	r2, r3
   1f44c:	mov	r1, r3
   1f450:	mov	lr, #1
   1f454:	str	r5, [sp, #28]
   1f458:	str	r3, [sp, #32]
   1f45c:	str	r7, [sp, #20]
   1f460:	str	r3, [sp, #36]	; 0x24
   1f464:	cmp	r1, ip
   1f468:	add	r0, r0, #16
   1f46c:	blt	1f5e8 <__flatcc_fb_gen_c_json_parser@@Base+0xb7c>
   1f470:	cmp	r3, #0
   1f474:	strne	r2, [sp, #36]	; 0x24
   1f478:	mov	r1, #0
   1f47c:	mov	r2, #220	; 0xdc
   1f480:	add	r0, sp, #44	; 0x2c
   1f484:	bl	140fc <memset@plt>
   1f488:	add	r1, sp, #44	; 0x2c
   1f48c:	mov	r0, r5
   1f490:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1f494:	add	r2, sp, #44	; 0x2c
   1f498:	ldr	r1, [pc, #1700]	; 1fb44 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1f49c:	mov	r0, r4
   1f4a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4a4:	ldr	r1, [pc, #1880]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f4a8:	mov	r0, r4
   1f4ac:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4b0:	ldr	r3, [r4, #220]	; 0xdc
   1f4b4:	ldr	r1, [pc, #1568]	; 1fadc <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1f4b8:	add	r3, r3, #1
   1f4bc:	str	r3, [r4, #220]	; 0xdc
   1f4c0:	mov	r0, r4
   1f4c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4c8:	ldr	r3, [sp, #12]
   1f4cc:	cmp	r3, #0
   1f4d0:	ble	1f504 <__flatcc_fb_gen_c_json_parser@@Base+0xa98>
   1f4d4:	ldr	r1, [pc, #1544]	; 1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1f4d8:	mov	r0, r4
   1f4dc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4e0:	ldr	r1, [pc, #1632]	; 1fb48 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   1f4e4:	mov	r0, r4
   1f4e8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4ec:	ldr	r1, [pc, #1744]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1f4f0:	mov	r0, r4
   1f4f4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f4f8:	ldr	r1, [pc, #1736]	; 1fbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1f4fc:	mov	r0, r4
   1f500:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f504:	ldr	r3, [sp, #36]	; 0x24
   1f508:	cmp	r3, #0
   1f50c:	beq	1f51c <__flatcc_fb_gen_c_json_parser@@Base+0xab0>
   1f510:	ldr	r1, [pc, #1588]	; 1fb4c <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   1f514:	mov	r0, r4
   1f518:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f51c:	ldr	r1, [pc, #1272]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f520:	mov	r0, r4
   1f524:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f528:	ldr	r1, [pc, #1516]	; 1fb1c <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1f52c:	mov	r0, r4
   1f530:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f534:	ldrd	r2, [r5, #96]	; 0x60
   1f538:	ldr	r1, [pc, #1552]	; 1fb50 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   1f53c:	mov	r0, r4
   1f540:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f544:	ldr	r2, [sp, #36]	; 0x24
   1f548:	cmp	r2, #0
   1f54c:	beq	1f560 <__flatcc_fb_gen_c_json_parser@@Base+0xaf4>
   1f550:	asr	r3, r2, #31
   1f554:	ldr	r1, [pc, #1528]	; 1fb54 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   1f558:	mov	r0, r4
   1f55c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f560:	ldr	r1, [pc, #1408]	; 1fae8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1f564:	mov	r0, r4
   1f568:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f56c:	ldr	r1, [pc, #1400]	; 1faec <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1f570:	mov	r0, r4
   1f574:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f578:	ldr	r3, [r4, #220]	; 0xdc
   1f57c:	ldr	r1, [pc, #1404]	; 1fb00 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1f580:	add	r3, r3, #1
   1f584:	str	r3, [r4, #220]	; 0xdc
   1f588:	mov	r0, r4
   1f58c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f590:	ldr	r3, [sp, #12]
   1f594:	cmp	r3, #0
   1f598:	ble	1f600 <__flatcc_fb_gen_c_json_parser@@Base+0xb94>
   1f59c:	ldr	r1, [pc, #1576]	; 1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1f5a0:	mov	r0, r4
   1f5a4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5a8:	ldr	r3, [sp, #12]
   1f5ac:	mov	r2, #0
   1f5b0:	str	r2, [sp]
   1f5b4:	sub	r3, r3, #1
   1f5b8:	add	r1, sp, #16
   1f5bc:	mov	r0, r4
   1f5c0:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1f5c4:	ldr	r1, [pc, #1420]	; 1fb58 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   1f5c8:	mov	r0, r4
   1f5cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f5d0:	ldr	r3, [r4, #220]	; 0xdc
   1f5d4:	cmp	r3, #0
   1f5d8:	bne	1f61c <__flatcc_fb_gen_c_json_parser@@Base+0xbb0>
   1f5dc:	ldr	r3, [pc, #1364]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f5e0:	ldr	r2, [pc, #1396]	; 1fb5c <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1f5e4:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f5e8:	ldr	r3, [r0, #-16]
   1f5ec:	add	r1, r1, #1
   1f5f0:	cmp	r3, #0
   1f5f4:	addne	r2, r2, #1
   1f5f8:	mov	r3, lr
   1f5fc:	b	1f464 <__flatcc_fb_gen_c_json_parser@@Base+0x9f8>
   1f600:	mov	r0, r4
   1f604:	ldr	r1, [pc, #1364]	; 1fb60 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   1f608:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f60c:	ldr	r1, [pc, #1248]	; 1faf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1f610:	mov	r0, r4
   1f614:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f618:	b	1f5c4 <__flatcc_fb_gen_c_json_parser@@Base+0xb58>
   1f61c:	sub	r3, r3, #1
   1f620:	str	r3, [r4, #220]	; 0xdc
   1f624:	ldr	r1, [pc, #1560]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f628:	mov	r0, r4
   1f62c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f630:	ldr	r1, [pc, #1324]	; 1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1f634:	mov	r0, r4
   1f638:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f63c:	mov	r6, #0
   1f640:	ldr	r9, [pc, #1312]	; 1fb68 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   1f644:	ldr	sl, [pc, #1312]	; 1fb6c <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   1f648:	mov	r8, #1
   1f64c:	mov	fp, r6
   1f650:	ldr	r3, [sp, #12]
   1f654:	cmp	r6, r3
   1f658:	blt	1f67c <__flatcc_fb_gen_c_json_parser@@Base+0xc10>
   1f65c:	cmp	r8, #0
   1f660:	bne	1f758 <__flatcc_fb_gen_c_json_parser@@Base+0xcec>
   1f664:	ldr	r3, [r4, #220]	; 0xdc
   1f668:	cmp	r3, #0
   1f66c:	bne	1f6f8 <__flatcc_fb_gen_c_json_parser@@Base+0xc8c>
   1f670:	ldr	r3, [pc, #1216]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f674:	ldr	r2, [pc, #1268]	; 1fb70 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   1f678:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f67c:	ldr	r3, [sp, #16]
   1f680:	add	r3, r3, r6, lsl #4
   1f684:	ldr	r2, [r3, #8]
   1f688:	ldrh	r1, [r2, #72]	; 0x48
   1f68c:	tst	r1, #4
   1f690:	bne	1f6d8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1f694:	mov	r0, r2
   1f698:	bl	1bfe0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   1f69c:	tst	r1, #256	; 0x100
   1f6a0:	beq	1f6d8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1f6a4:	cmp	r8, #0
   1f6a8:	asr	r1, r0, #31
   1f6ac:	ldrd	r2, [r2, #96]	; 0x60
   1f6b0:	beq	1f6e0 <__flatcc_fb_gen_c_json_parser@@Base+0xc74>
   1f6b4:	subs	r2, r2, r0
   1f6b8:	sbc	r3, r3, r1
   1f6bc:	mov	r0, r4
   1f6c0:	mov	r1, sl
   1f6c4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f6c8:	ldr	r3, [r4, #220]	; 0xdc
   1f6cc:	mov	r8, fp
   1f6d0:	add	r3, r3, #1
   1f6d4:	str	r3, [r4, #220]	; 0xdc
   1f6d8:	add	r6, r6, #1
   1f6dc:	b	1f650 <__flatcc_fb_gen_c_json_parser@@Base+0xbe4>
   1f6e0:	subs	r2, r2, r0
   1f6e4:	sbc	r3, r3, r1
   1f6e8:	mov	r0, r4
   1f6ec:	mov	r1, r9
   1f6f0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f6f4:	b	1f6d8 <__flatcc_fb_gen_c_json_parser@@Base+0xc6c>
   1f6f8:	sub	r3, r3, #1
   1f6fc:	str	r3, [r4, #220]	; 0xdc
   1f700:	ldr	r1, [pc, #1132]	; 1fb74 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   1f704:	mov	r0, r4
   1f708:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f70c:	ldr	r3, [r4, #220]	; 0xdc
   1f710:	ldr	r1, [pc, #1120]	; 1fb78 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   1f714:	add	r3, r3, #1
   1f718:	str	r3, [r4, #220]	; 0xdc
   1f71c:	mov	r0, r4
   1f720:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f724:	ldr	r1, [pc, #1104]	; 1fb7c <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1f728:	mov	r0, r4
   1f72c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f730:	ldr	r3, [r4, #220]	; 0xdc
   1f734:	cmp	r3, #0
   1f738:	ldreq	r3, [pc, #1016]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f73c:	ldreq	r2, [pc, #1084]	; 1fb80 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   1f740:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f744:	sub	r3, r3, #1
   1f748:	str	r3, [r4, #220]	; 0xdc
   1f74c:	ldr	r1, [pc, #1264]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f750:	mov	r0, r4
   1f754:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f758:	ldr	r3, [sp, #36]	; 0x24
   1f75c:	cmp	r3, #0
   1f760:	beq	1f770 <__flatcc_fb_gen_c_json_parser@@Base+0xd04>
   1f764:	ldr	r1, [pc, #1048]	; 1fb84 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1f768:	mov	r0, r4
   1f76c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f770:	ldr	r1, [pc, #1040]	; 1fb88 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1f774:	mov	r0, r4
   1f778:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f77c:	ldr	r1, [pc, #1100]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f780:	mov	r0, r4
   1f784:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f788:	ldr	r3, [r4, #220]	; 0xdc
   1f78c:	ldr	r1, [pc, #880]	; 1fb04 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1f790:	str	r3, [r4, #228]	; 0xe4
   1f794:	mov	r3, #0
   1f798:	str	r3, [r4, #220]	; 0xdc
   1f79c:	mov	r0, r4
   1f7a0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f7a4:	ldr	r3, [r4, #228]	; 0xe4
   1f7a8:	ldr	r1, [pc, #856]	; 1fb08 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1f7ac:	str	r3, [r4, #220]	; 0xdc
   1f7b0:	mov	r0, r4
   1f7b4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f7b8:	ldr	r3, [r4, #220]	; 0xdc
   1f7bc:	cmp	r3, #0
   1f7c0:	ldreq	r3, [pc, #880]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f7c4:	ldreq	r2, [pc, #960]	; 1fb8c <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1f7c8:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f7cc:	sub	r3, r3, #1
   1f7d0:	str	r3, [r4, #220]	; 0xdc
   1f7d4:	ldr	r1, [pc, #1128]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f7d8:	mov	r0, r4
   1f7dc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f7e0:	ldr	r1, [pc, #564]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f7e4:	mov	r0, r4
   1f7e8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f7ec:	add	r2, sp, #44	; 0x2c
   1f7f0:	ldr	r1, [pc, #824]	; 1fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1f7f4:	mov	r0, r4
   1f7f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f7fc:	ldr	r1, [pc, #1024]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f800:	mov	r0, r4
   1f804:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f808:	ldr	r3, [r4, #220]	; 0xdc
   1f80c:	add	r2, sp, #44	; 0x2c
   1f810:	add	r3, r3, #1
   1f814:	str	r3, [r4, #220]	; 0xdc
   1f818:	ldr	r1, [pc, #880]	; 1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1f81c:	mov	r0, r4
   1f820:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f824:	ldr	r3, [r4, #220]	; 0xdc
   1f828:	cmp	r3, #0
   1f82c:	ldreq	r3, [pc, #772]	; 1fb38 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1f830:	ldreq	r2, [pc, #860]	; 1fb94 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1f834:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f838:	sub	r3, r3, #1
   1f83c:	str	r3, [r4, #220]	; 0xdc
   1f840:	mov	r0, r4
   1f844:	ldr	r1, [pc, #1016]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1f848:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f84c:	mov	r0, r4
   1f850:	ldr	r1, [pc, #452]	; 1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   1f854:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f858:	ldr	r0, [sp, #16]
   1f85c:	bl	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1f860:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1f864:	add	r2, sp, #44	; 0x2c
   1f868:	mov	r0, r8
   1f86c:	ldr	r1, [pc, #804]	; 1fb98 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   1f870:	bl	24024 <fb_scope_table_visit@@Base>
   1f874:	ldr	r1, [sp, #48]	; 0x30
   1f878:	ldr	r0, [sp, #60]	; 0x3c
   1f87c:	bl	1d660 <__flatcc_fb_gen_c_verifier@@Base+0x1a00>
   1f880:	ldr	r1, [sp, #52]	; 0x34
   1f884:	ldr	r0, [sp, #64]	; 0x40
   1f888:	bl	1d660 <__flatcc_fb_gen_c_verifier@@Base+0x1a00>
   1f88c:	ldr	r8, [sp, #52]	; 0x34
   1f890:	cmp	r8, #0
   1f894:	moveq	r7, r5
   1f898:	beq	1f8b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe4c>
   1f89c:	lsl	r0, r8, #4
   1f8a0:	bl	14090 <malloc@plt>
   1f8a4:	subs	r7, r0, #0
   1f8a8:	movne	r6, r7
   1f8ac:	ldrne	r9, [sp, #64]	; 0x40
   1f8b0:	movne	sl, r5
   1f8b4:	bne	1f924 <__flatcc_fb_gen_c_json_parser@@Base+0xeb8>
   1f8b8:	cmp	r8, #0
   1f8bc:	str	r7, [sp, #16]
   1f8c0:	clz	r7, r7
   1f8c4:	lsr	r7, r7, #5
   1f8c8:	movle	r7, #0
   1f8cc:	cmp	r7, #0
   1f8d0:	beq	1f950 <__flatcc_fb_gen_c_json_parser@@Base+0xee4>
   1f8d4:	add	r0, sp, #44	; 0x2c
   1f8d8:	bl	1d6d8 <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1f8dc:	ldr	r0, [pc, #476]	; 1fac0 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1f8e0:	ldr	r3, [pc, #476]	; 1fac4 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1f8e4:	ldr	r2, [pc, #380]	; 1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1f8e8:	str	r3, [sp]
   1f8ec:	ldr	r1, [pc, #468]	; 1fac8 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1f8f0:	ldr	r3, [pc, #676]	; 1fb9c <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1f8f4:	ldr	r0, [r0]
   1f8f8:	bl	140e4 <fprintf@plt>
   1f8fc:	ldr	r3, [pc, #720]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1f900:	ldr	r2, [pc, #660]	; 1fb9c <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1f904:	b	1f030 <__flatcc_fb_gen_c_json_parser@@Base+0x5c4>
   1f908:	ldr	r0, [r9, #-4]
   1f90c:	add	r5, r5, #1
   1f910:	str	r0, [r6, #-16]
   1f914:	bl	140cc <strlen@plt>
   1f918:	ldr	r3, [r9, #-8]
   1f91c:	stmdb	r6, {r3, sl}
   1f920:	str	r0, [r6, #-12]
   1f924:	cmp	r8, r5
   1f928:	add	r9, r9, #8
   1f92c:	add	r6, r6, #16
   1f930:	bgt	1f908 <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   1f934:	mov	r1, r8
   1f938:	ldr	r3, [pc, #608]	; 1fba0 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   1f93c:	mov	r2, #16
   1f940:	mov	r0, r7
   1f944:	bl	14168 <qsort@plt>
   1f948:	ldr	r8, [sp, #52]	; 0x34
   1f94c:	b	1f8b8 <__flatcc_fb_gen_c_json_parser@@Base+0xe4c>
   1f950:	mov	r3, #4
   1f954:	str	r3, [sp, #32]
   1f958:	ldr	r3, [pc, #580]	; 1fba4 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1f95c:	ldr	r1, [pc, #284]	; 1fa80 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1f960:	str	r3, [sp, #20]
   1f964:	ldr	r3, [pc, #572]	; 1fba8 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1f968:	mov	r0, r4
   1f96c:	str	r3, [sp, #24]
   1f970:	ldr	r3, [r4, #208]	; 0xd0
   1f974:	str	r7, [sp, #28]
   1f978:	ldr	r2, [r3, #160]	; 0xa0
   1f97c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f980:	ldr	r3, [r4, #220]	; 0xdc
   1f984:	ldr	r1, [pc, #544]	; 1fbac <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1f988:	add	r3, r3, #2
   1f98c:	str	r3, [r4, #220]	; 0xdc
   1f990:	mov	r0, r4
   1f994:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f998:	ldr	r3, [r4, #220]	; 0xdc
   1f99c:	cmp	r3, #0
   1f9a0:	bne	1f9b0 <__flatcc_fb_gen_c_json_parser@@Base+0xf44>
   1f9a4:	ldr	r3, [pc, #552]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1f9a8:	ldr	r2, [pc, #512]	; 1fbb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1f9ac:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f9b0:	cmp	r3, #1
   1f9b4:	streq	r7, [r4, #220]	; 0xdc
   1f9b8:	beq	1f9a4 <__flatcc_fb_gen_c_json_parser@@Base+0xf38>
   1f9bc:	sub	r3, r3, #2
   1f9c0:	str	r3, [r4, #220]	; 0xdc
   1f9c4:	ldr	r1, [pc, #568]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1f9c8:	mov	r0, r4
   1f9cc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f9d0:	ldr	r3, [r4, #220]	; 0xdc
   1f9d4:	cmp	r8, #0
   1f9d8:	add	r3, r3, #1
   1f9dc:	str	r3, [r4, #220]	; 0xdc
   1f9e0:	bne	1fc4c <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   1f9e4:	ldr	r1, [pc, #456]	; 1fbb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   1f9e8:	mov	r0, r4
   1f9ec:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f9f0:	ldr	r1, [pc, #448]	; 1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1f9f4:	mov	r0, r4
   1f9f8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1f9fc:	ldr	r3, [r4, #220]	; 0xdc
   1fa00:	cmp	r3, #0
   1fa04:	bne	1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   1fa08:	ldr	r3, [pc, #452]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1fa0c:	ldr	r2, [pc, #424]	; 1fbbc <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1fa10:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fa14:	andeq	r5, r4, lr, ror r3
   1fa18:	muleq	r4, r7, r3
   1fa1c:	andeq	r2, r3, sp, lsl pc
   1fa20:			; <UNDEFINED> instruction: 0x000453b0
   1fa24:	strdeq	r5, [r4], -pc	; <UNPREDICTABLE>
   1fa28:	andeq	r5, r4, r1, lsr #7
   1fa2c:	andeq	r1, r3, sp, lsr r8
   1fa30:	andeq	r2, r3, pc, asr #29
   1fa34:	andeq	r5, r4, r6, lsr #8
   1fa38:	andeq	r5, r4, r9, lsr #8
   1fa3c:	andeq	r5, r4, pc, ror r4
   1fa40:	andeq	r5, r4, r2, lsl #9
   1fa44:	andeq	r5, r4, r6, asr #9
   1fa48:	strdeq	r5, [r4], -ip
   1fa4c:	andeq	r5, r4, r4, lsr #10
   1fa50:	andeq	r5, r4, ip, ror #10
   1fa54:	andeq	r3, r4, r7, lsr #31
   1fa58:	andeq	r5, r4, sl, lsr #11
   1fa5c:	strdeq	r5, [r4], -r3
   1fa60:	andeq	r3, r4, r8, ror lr
   1fa64:			; <UNDEFINED> instruction: 0x000006b4
   1fa68:			; <UNDEFINED> instruction: 0x00043fbb
   1fa6c:	andeq	r4, r4, r0, lsl r0
   1fa70:			; <UNDEFINED> instruction: 0x000452bf
   1fa74:	andeq	r4, r4, sp, lsr #1
   1fa78:	andeq	r5, r4, r6, ror #15
   1fa7c:	andeq	ip, r1, ip, lsl #8
   1fa80:	andeq	r5, r4, r9, ror #16
   1fa84:	ldrdeq	r0, [r0], -fp
   1fa88:	andeq	r5, r4, pc, lsl r6
   1fa8c:	andeq	r5, r4, lr, lsr #13
   1fa90:	andeq	r0, r0, r3, asr #13
   1fa94:	andeq	r5, r4, r2, ror #13
   1fa98:	andeq	r5, r4, r2, ror #14
   1fa9c:	ldrdeq	r0, [r0], -r3
   1faa0:	andeq	sp, r1, r8, ror sl
   1faa4:	andeq	lr, r1, r8, ror #9
   1faa8:	andeq	sp, r1, r8, asr #12
   1faac:			; <UNDEFINED> instruction: 0x00038cb9
   1fab0:	andeq	r6, r4, r5, asr #4
   1fab4:	muleq	r4, r3, lr
   1fab8:	andeq	r0, r0, r5, lsl r5
   1fabc:	andeq	r1, r3, sp, asr #23
   1fac0:	strheq	ip, [r5], -r0
   1fac4:	andeq	r5, r4, r7, asr #3
   1fac8:	andeq	r1, r3, sl, ror #22
   1facc:	andeq	r0, r0, r7, lsl r5
   1fad0:	andeq	sl, r3, r9, asr #3
   1fad4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1fad8:	ldrdeq	r5, [r4], -r4
   1fadc:	andeq	r5, r4, r3, asr r9
   1fae0:	andeq	r5, r4, sp, asr r9
   1fae4:	andeq	r5, r4, r7, ror r9
   1fae8:	andeq	r5, r4, r3, lsl #19
   1faec:	andeq	r4, r4, fp, ror #12
   1faf0:	andeq	r5, r4, r0, asr #19
   1faf4:	andeq	r3, r4, r6, lsr #30
   1faf8:	andeq	r5, r4, sl, lsl #20
   1fafc:	andeq	r0, r0, r6, lsr r5
   1fb00:	ldrdeq	r5, [r4], -r4
   1fb04:	andeq	r5, r4, r6, asr #20
   1fb08:	strdeq	r4, [r4], -ip
   1fb0c:	andeq	r0, r0, pc, lsr r5
   1fb10:	andeq	r3, r4, ip, lsr #29
   1fb14:	andeq	r0, r0, r9, asr #10
   1fb18:	andeq	r5, r4, lr, asr #20
   1fb1c:	andeq	r4, r4, r0, ror r1
   1fb20:	ldrdeq	r5, [r4], -r1
   1fb24:	andeq	r4, r4, r5, lsl sl
   1fb28:	andeq	r5, r4, sp, lsl fp
   1fb2c:	andeq	r0, r0, sl, asr r5
   1fb30:	andeq	r5, r4, lr, ror #22
   1fb34:	andeq	r5, r4, r2, lsl #24
   1fb38:			; <UNDEFINED> instruction: 0x00043ebe
   1fb3c:	andeq	r0, r0, lr, ror #10
   1fb40:	andeq	r1, r3, sp, ror r9
   1fb44:	andeq	r5, r4, r3, ror #24
   1fb48:	andeq	r5, r4, r5, ror #25
   1fb4c:	andeq	r5, r4, r6, lsl #26
   1fb50:	andeq	r5, r4, r7, lsl sp
   1fb54:	andeq	r5, r4, r4, asr sp
   1fb58:	andeq	r5, r4, sl, asr #27
   1fb5c:	muleq	r0, lr, r5
   1fb60:	andeq	r5, r4, pc, lsr #27
   1fb64:	andeq	r5, r4, r5, lsl #28
   1fb68:	andeq	r5, r4, fp, asr lr
   1fb6c:	andeq	r5, r4, r2, lsr #28
   1fb70:			; <UNDEFINED> instruction: 0x000005b2
   1fb74:	andeq	r4, r4, r2, lsr r9
   1fb78:	muleq	r4, r4, lr
   1fb7c:	andeq	r4, r4, r5, asr r7
   1fb80:			; <UNDEFINED> instruction: 0x000005b5
   1fb84:	andeq	r5, r4, sl, ror #29
   1fb88:	andeq	r5, r4, sp, lsr #30
   1fb8c:	andeq	r0, r0, r1, asr #11
   1fb90:	andeq	r5, r4, pc, ror #30
   1fb94:	andeq	r0, r0, r7, asr #11
   1fb98:	andeq	sp, r1, r0, lsr r6
   1fb9c:	andeq	r0, r0, sl, lsr #9
   1fba0:	muleq	r1, ip, r6
   1fba4:	andeq	sp, r1, r4, lsl #19
   1fba8:	andeq	ip, r1, ip, asr #1
   1fbac:	andeq	r5, r4, r3, lsl #4
   1fbb0:			; <UNDEFINED> instruction: 0x000004b5
   1fbb4:	andeq	r5, r4, lr, asr #31
   1fbb8:	andeq	r5, r4, r7, ror #4
   1fbbc:			; <UNDEFINED> instruction: 0x000004ba
   1fbc0:	andeq	r5, r4, r4, lsl #5
   1fbc4:	andeq	r5, r4, r1, lsr #5
   1fbc8:			; <UNDEFINED> instruction: 0x000452b3
   1fbcc:	strdeq	r5, [r4], -r7
   1fbd0:	andeq	r4, r4, r0, ror #7
   1fbd4:	andeq	r3, r4, pc, asr #29
   1fbd8:	andeq	r0, r0, r3, asr #9
   1fbdc:	andeq	r0, r0, sl, asr #12
   1fbe0:	andeq	r6, r4, r2, lsr r0
   1fbe4:	andeq	r6, r4, sl, rrx
   1fbe8:	andeq	r6, r4, r5, lsr r1
   1fbec:	andeq	r0, r0, sl, asr r6
   1fbf0:	andeq	r3, r4, r7, ror #29
   1fbf4:	andeq	r0, r0, lr, asr r6
   1fbf8:	andeq	r5, r4, sl, lsr #11
   1fbfc:	andeq	r6, r4, r7
   1fc00:	andeq	r0, r0, sp, ror #12
   1fc04:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1fc08:	ldrdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   1fc0c:	andeq	r6, r4, pc, asr #32
   1fc10:	strdeq	r6, [r4], -r1
   1fc14:	andeq	r6, r4, r5, lsl #1
   1fc18:	andeq	r6, r4, r0, asr #1
   1fc1c:	andeq	r6, r4, sl, lsl #4
   1fc20:	andeq	r6, r4, r9, ror #2
   1fc24:	andeq	r6, r4, fp, ror r1
   1fc28:	andeq	r0, r0, sp, ror r6
   1fc2c:	strdeq	r6, [r4], -sp
   1fc30:	andeq	r6, r4, lr, lsl #3
   1fc34:	andeq	r6, r4, r2, asr #3
   1fc38:	andeq	r4, r4, r9, asr #9
   1fc3c:	strdeq	r3, [r4], -sp
   1fc40:	andeq	r0, r0, r1, lsl #13
   1fc44:	andeq	r8, r3, r3, lsl r1
   1fc48:	andeq	r2, r3, sp, lsl pc
   1fc4c:	ldr	r1, [pc, #-148]	; 1fbc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   1fc50:	mov	r0, r4
   1fc54:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fc58:	ldr	r1, [pc, #-156]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1fc5c:	mov	r0, r4
   1fc60:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fc64:	ldr	r1, [pc, #-164]	; 1fbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1fc68:	mov	r0, r4
   1fc6c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fc70:	ldr	r1, [pc, #-48]	; 1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1fc74:	mov	r0, r4
   1fc78:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fc7c:	ldr	r1, [pc, #-184]	; 1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1fc80:	mov	r0, r4
   1fc84:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fc88:	sub	r3, r8, #1
   1fc8c:	mov	r2, r7
   1fc90:	add	r1, sp, #16
   1fc94:	mov	r0, r4
   1fc98:	str	r7, [sp]
   1fc9c:	bl	1ddd4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1fca0:	ldr	r1, [pc, #-216]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1fca4:	mov	r0, r4
   1fca8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fcac:	ldr	r3, [r4, #220]	; 0xdc
   1fcb0:	cmp	r3, #0
   1fcb4:	ldreq	r3, [pc, #-232]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1fcb8:	ldreq	r2, [pc, #-232]	; 1fbd8 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1fcbc:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fcc0:	sub	r3, r3, #1
   1fcc4:	str	r3, [r4, #220]	; 0xdc
   1fcc8:	mov	r0, r4
   1fccc:	ldr	r1, [pc, #-144]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1fcd0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fcd4:	mov	r0, r4
   1fcd8:	ldr	r1, [pc, #-152]	; 1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1fcdc:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fce0:	ldr	r0, [sp, #16]
   1fce4:	bl	1d6cc <__flatcc_fb_gen_c_verifier@@Base+0x1a6c>
   1fce8:	b	1ef00 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1fcec:	mov	r2, #220	; 0xdc
   1fcf0:	mov	r1, r6
   1fcf4:	add	r0, sp, #44	; 0x2c
   1fcf8:	bl	140fc <memset@plt>
   1fcfc:	add	r1, sp, #44	; 0x2c
   1fd00:	mov	r0, r5
   1fd04:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1fd08:	ldr	r3, [r4, #208]	; 0xd0
   1fd0c:	ldr	r1, [pc, #-284]	; 1fbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   1fd10:	mov	r0, r4
   1fd14:	ldr	r2, [r3, #160]	; 0xa0
   1fd18:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd1c:	ldr	r3, [r4, #220]	; 0xdc
   1fd20:	ldr	r1, [pc, #-300]	; 1fbfc <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   1fd24:	add	r3, r3, #2
   1fd28:	str	r3, [r4, #220]	; 0xdc
   1fd2c:	mov	r0, r4
   1fd30:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd34:	ldr	r3, [r4, #220]	; 0xdc
   1fd38:	cmp	r3, #0
   1fd3c:	bne	1fd4c <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   1fd40:	ldr	r3, [pc, #-344]	; 1fbf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1fd44:	ldr	r2, [pc, #-368]	; 1fbdc <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1fd48:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fd4c:	cmp	r3, #1
   1fd50:	streq	r6, [r4, #220]	; 0xdc
   1fd54:	beq	1fd40 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   1fd58:	sub	r3, r3, #2
   1fd5c:	str	r3, [r4, #220]	; 0xdc
   1fd60:	ldr	r1, [pc, #-356]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1fd64:	mov	r0, r4
   1fd68:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd6c:	ldr	r3, [r4, #220]	; 0xdc
   1fd70:	ldr	r1, [pc, #-408]	; 1fbe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1fd74:	add	r3, r3, #1
   1fd78:	str	r3, [r4, #220]	; 0xdc
   1fd7c:	mov	r0, r4
   1fd80:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd84:	ldr	r1, [pc, #-384]	; 1fc0c <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   1fd88:	mov	r0, r4
   1fd8c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd90:	ldr	r1, [pc, #-336]	; 1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1fd94:	mov	r0, r4
   1fd98:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fd9c:	ldr	r1, [pc, #-448]	; 1fbe4 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1fda0:	mov	r0, r4
   1fda4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fda8:	ldr	r1, [pc, #-412]	; 1fc14 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   1fdac:	mov	r0, r4
   1fdb0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fdb4:	ldr	r2, [r4, #208]	; 0xd0
   1fdb8:	ldrh	r3, [r2, #16]
   1fdbc:	cmp	r3, #2
   1fdc0:	bne	1fe24 <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   1fdc4:	ldr	r3, [r2, #8]
   1fdc8:	ldr	r1, [pc, #-440]	; 1fc18 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   1fdcc:	ldr	r2, [r2, #12]
   1fdd0:	mov	r0, r4
   1fdd4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fdd8:	add	r2, sp, #44	; 0x2c
   1fddc:	ldr	r1, [pc, #-508]	; 1fbe8 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1fde0:	mov	r0, r4
   1fde4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fde8:	ldr	r1, [pc, #-464]	; 1fc20 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   1fdec:	mov	r0, r4
   1fdf0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fdf4:	ldr	r3, [r4, #220]	; 0xdc
   1fdf8:	ldr	r1, [pc, #-476]	; 1fc24 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   1fdfc:	add	r3, r3, #1
   1fe00:	str	r3, [r4, #220]	; 0xdc
   1fe04:	mov	r0, r4
   1fe08:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe0c:	ldr	r3, [r4, #220]	; 0xdc
   1fe10:	cmp	r3, #0
   1fe14:	bne	1fe34 <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   1fe18:	ldr	r3, [pc, #-560]	; 1fbf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1fe1c:	ldr	r2, [pc, #-568]	; 1fbec <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1fe20:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fe24:	ldr	r1, [pc, #-512]	; 1fc2c <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   1fe28:	mov	r0, r4
   1fe2c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe30:	b	1fdd8 <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   1fe34:	sub	r3, r3, #1
   1fe38:	str	r3, [r4, #220]	; 0xdc
   1fe3c:	ldr	r1, [pc, #-512]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1fe40:	mov	r0, r4
   1fe44:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe48:	ldr	r1, [pc, #-544]	; 1fc30 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   1fe4c:	mov	r0, r4
   1fe50:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe54:	ldr	r1, [pc, #-552]	; 1fc34 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   1fe58:	mov	r0, r4
   1fe5c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe60:	ldr	r1, [pc, #-560]	; 1fc38 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   1fe64:	mov	r0, r4
   1fe68:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fe6c:	ldr	r3, [r4, #220]	; 0xdc
   1fe70:	cmp	r3, #0
   1fe74:	bne	2001c <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1fe78:	ldr	r3, [pc, #-656]	; 1fbf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1fe7c:	ldr	r2, [pc, #-656]	; 1fbf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   1fe80:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fe84:	mov	r2, #220	; 0xdc
   1fe88:	mov	r1, #0
   1fe8c:	add	r0, sp, #44	; 0x2c
   1fe90:	bl	140fc <memset@plt>
   1fe94:	add	r1, sp, #44	; 0x2c
   1fe98:	mov	r0, r5
   1fe9c:	bl	1c458 <__flatcc_fb_gen_c_verifier@@Base+0x7f8>
   1fea0:	ldr	r3, [r4, #208]	; 0xd0
   1fea4:	ldr	r1, [pc, #-692]	; 1fbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   1fea8:	mov	r0, r4
   1feac:	ldr	r2, [r3, #160]	; 0xa0
   1feb0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1feb4:	ldr	r3, [r4, #220]	; 0xdc
   1feb8:	ldr	r1, [pc, #-708]	; 1fbfc <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   1febc:	add	r3, r3, #2
   1fec0:	str	r3, [r4, #220]	; 0xdc
   1fec4:	mov	r0, r4
   1fec8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fecc:	ldr	r3, [r4, #220]	; 0xdc
   1fed0:	cmp	r3, #0
   1fed4:	bne	1fee4 <__flatcc_fb_gen_c_json_parser@@Base+0x1478>
   1fed8:	ldr	r3, [pc, #-676]	; 1fc3c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   1fedc:	ldr	r2, [pc, #-740]	; 1fc00 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   1fee0:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1fee4:	cmp	r3, #1
   1fee8:	moveq	r3, #0
   1feec:	streq	r3, [r4, #220]	; 0xdc
   1fef0:	beq	1fed8 <__flatcc_fb_gen_c_json_parser@@Base+0x146c>
   1fef4:	sub	r3, r3, #2
   1fef8:	str	r3, [r4, #220]	; 0xdc
   1fefc:	ldr	r1, [pc, #-768]	; 1fc04 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   1ff00:	mov	r0, r4
   1ff04:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff08:	ldr	r3, [r4, #220]	; 0xdc
   1ff0c:	ldr	r1, [pc, #-780]	; 1fc08 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   1ff10:	add	r3, r3, #1
   1ff14:	str	r3, [r4, #220]	; 0xdc
   1ff18:	mov	r0, r4
   1ff1c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff20:	ldr	r1, [pc, #-796]	; 1fc0c <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   1ff24:	mov	r0, r4
   1ff28:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff2c:	ldr	r1, [pc, #-748]	; 1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   1ff30:	mov	r0, r4
   1ff34:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff38:	ldr	r1, [pc, #-816]	; 1fc10 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   1ff3c:	mov	r0, r4
   1ff40:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff44:	ldr	r1, [pc, #-824]	; 1fc14 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   1ff48:	mov	r0, r4
   1ff4c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff50:	ldr	r2, [r4, #208]	; 0xd0
   1ff54:	ldrh	r3, [r2, #16]
   1ff58:	cmp	r3, #2
   1ff5c:	bne	1ffc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1554>
   1ff60:	ldr	r3, [r2, #8]
   1ff64:	ldr	r1, [pc, #-852]	; 1fc18 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   1ff68:	ldr	r2, [r2, #12]
   1ff6c:	mov	r0, r4
   1ff70:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff74:	add	r2, sp, #44	; 0x2c
   1ff78:	ldr	r1, [pc, #-868]	; 1fc1c <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   1ff7c:	mov	r0, r4
   1ff80:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff84:	ldr	r1, [pc, #-876]	; 1fc20 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   1ff88:	mov	r0, r4
   1ff8c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ff90:	ldr	r3, [r4, #220]	; 0xdc
   1ff94:	ldr	r1, [pc, #-888]	; 1fc24 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   1ff98:	add	r3, r3, #1
   1ff9c:	str	r3, [r4, #220]	; 0xdc
   1ffa0:	mov	r0, r4
   1ffa4:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ffa8:	ldr	r3, [r4, #220]	; 0xdc
   1ffac:	cmp	r3, #0
   1ffb0:	bne	1ffd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1564>
   1ffb4:	ldr	r3, [pc, #-896]	; 1fc3c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   1ffb8:	ldr	r2, [pc, #-920]	; 1fc28 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   1ffbc:	b	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ffc0:	ldr	r1, [pc, #-924]	; 1fc2c <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   1ffc4:	mov	r0, r4
   1ffc8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ffcc:	b	1ff74 <__flatcc_fb_gen_c_json_parser@@Base+0x1508>
   1ffd0:	sub	r3, r3, #1
   1ffd4:	str	r3, [r4, #220]	; 0xdc
   1ffd8:	ldr	r1, [pc, #-924]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   1ffdc:	mov	r0, r4
   1ffe0:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1ffe4:	ldr	r1, [pc, #-956]	; 1fc30 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   1ffe8:	mov	r0, r4
   1ffec:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fff0:	ldr	r1, [pc, #-964]	; 1fc34 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   1fff4:	mov	r0, r4
   1fff8:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1fffc:	ldr	r1, [pc, #-972]	; 1fc38 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   20000:	mov	r0, r4
   20004:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   20008:	ldr	r3, [r4, #220]	; 0xdc
   2000c:	cmp	r3, #0
   20010:	ldreq	r3, [pc, #-988]	; 1fc3c <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   20014:	ldreq	r2, [pc, #-988]	; 1fc40 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   20018:	beq	1ebdc <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   2001c:	sub	r3, r3, #1
   20020:	mov	r0, r4
   20024:	str	r3, [r4, #220]	; 0xdc
   20028:	ldr	r1, [pc, #-1004]	; 1fc44 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   2002c:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   20030:	ldr	r1, [pc, #-1008]	; 1fc48 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   20034:	mov	r0, r4
   20038:	bl	1c008 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   2003c:	b	1ef2c <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   20040:	mov	r2, r1
   20044:	mov	r1, r0
   20048:	ldr	r0, [r0, #12]
   2004c:	b	15b18 <__flatcc_fb_scoped_symbol_name@@Base>
   20050:	push	{r0, r1, r2, lr}
   20054:	sub	r0, r0, #1
   20058:	cmp	r0, #10
   2005c:	ldrls	pc, [pc, r0, lsl #2]
   20060:	b	200dc <__flatcc_fb_gen_c_json_parser@@Base+0x1670>
   20064:	andeq	r0, r2, r0, lsl r1
   20068:	muleq	r2, r0, r0
   2006c:	andeq	r0, r2, r8, lsl r1
   20070:	muleq	r2, ip, r0
   20074:	andeq	r0, r2, r4, lsr #1
   20078:	andeq	r0, r2, ip, lsr #1
   2007c:	strheq	r0, [r2], -r4
   20080:	strheq	r0, [r2], -ip
   20084:	andeq	r0, r2, r4, asr #1
   20088:	ldrdeq	r0, [r2], -r4
   2008c:	andeq	r0, r2, ip, asr #1
   20090:	ldr	r0, [pc, #136]	; 20120 <__flatcc_fb_gen_c_json_parser@@Base+0x16b4>
   20094:	add	sp, sp, #12
   20098:	pop	{pc}		; (ldr pc, [sp], #4)
   2009c:	ldr	r0, [pc, #128]	; 20124 <__flatcc_fb_gen_c_json_parser@@Base+0x16b8>
   200a0:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200a4:	ldr	r0, [pc, #124]	; 20128 <__flatcc_fb_gen_c_json_parser@@Base+0x16bc>
   200a8:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200ac:	ldr	r0, [pc, #120]	; 2012c <__flatcc_fb_gen_c_json_parser@@Base+0x16c0>
   200b0:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200b4:	ldr	r0, [pc, #116]	; 20130 <__flatcc_fb_gen_c_json_parser@@Base+0x16c4>
   200b8:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200bc:	ldr	r0, [pc, #112]	; 20134 <__flatcc_fb_gen_c_json_parser@@Base+0x16c8>
   200c0:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200c4:	ldr	r0, [pc, #108]	; 20138 <__flatcc_fb_gen_c_json_parser@@Base+0x16cc>
   200c8:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200cc:	ldr	r0, [pc, #104]	; 2013c <__flatcc_fb_gen_c_json_parser@@Base+0x16d0>
   200d0:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200d4:	ldr	r0, [pc, #100]	; 20140 <__flatcc_fb_gen_c_json_parser@@Base+0x16d4>
   200d8:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   200dc:	ldr	r0, [pc, #96]	; 20144 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   200e0:	ldr	r3, [pc, #96]	; 20148 <__flatcc_fb_gen_c_json_parser@@Base+0x16dc>
   200e4:	ldr	r2, [pc, #96]	; 2014c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   200e8:	str	r3, [sp]
   200ec:	ldr	r1, [pc, #92]	; 20150 <__flatcc_fb_gen_c_json_parser@@Base+0x16e4>
   200f0:	mov	r3, #96	; 0x60
   200f4:	ldr	r0, [r0]
   200f8:	bl	140e4 <fprintf@plt>
   200fc:	ldr	r3, [pc, #80]	; 20154 <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   20100:	mov	r2, #96	; 0x60
   20104:	ldr	r1, [pc, #64]	; 2014c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   20108:	ldr	r0, [pc, #72]	; 20158 <__flatcc_fb_gen_c_json_parser@@Base+0x16ec>
   2010c:	bl	141a4 <__assert_fail@plt>
   20110:	ldr	r0, [pc, #68]	; 2015c <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   20114:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   20118:	ldr	r0, [pc, #64]	; 20160 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   2011c:	b	20094 <__flatcc_fb_gen_c_json_parser@@Base+0x1628>
   20120:			; <UNDEFINED> instruction: 0x00031bb3
   20124:	andeq	r1, r3, r1, asr #23
   20128:	andeq	r9, r4, r4, rrx
   2012c:	andeq	r1, r3, sp, lsr #23
   20130:			; <UNDEFINED> instruction: 0x00031bb4
   20134:			; <UNDEFINED> instruction: 0x00031bbb
   20138:	andeq	r1, r3, r2, asr #23
   2013c:	andeq	r1, r3, r4, lsl fp
   20140:	andeq	r1, r3, sl, lsl fp
   20144:	strheq	ip, [r5], -r0
   20148:	andeq	r1, r3, r5, ror fp
   2014c:	andeq	r1, r3, r1, lsr #22
   20150:	andeq	r1, r3, sl, ror #22
   20154:	andeq	r6, r4, r8, ror #4
   20158:	andeq	sl, r3, r9, asr #3
   2015c:	andeq	r1, r3, ip, lsr #23
   20160:			; <UNDEFINED> instruction: 0x00031bba
   20164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20168:	sub	sp, sp, #468	; 0x1d4
   2016c:	mov	r6, r1
   20170:	mov	r2, #220	; 0xdc
   20174:	mov	r1, #0
   20178:	mov	r4, r0
   2017c:	add	r0, sp, #24
   20180:	bl	140fc <memset@plt>
   20184:	mov	r2, #220	; 0xdc
   20188:	mov	r1, #0
   2018c:	add	r0, sp, #244	; 0xf4
   20190:	bl	140fc <memset@plt>
   20194:	add	r1, sp, #24
   20198:	mov	r0, r6
   2019c:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   201a0:	ldr	r5, [r6, #40]	; 0x28
   201a4:	mov	r0, r5
   201a8:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   201ac:	sub	r5, r5, #1
   201b0:	mov	r9, r0
   201b4:	cmp	r5, #10
   201b8:	ldrls	pc, [pc, r5, lsl #2]
   201bc:	b	2032c <__flatcc_fb_gen_c_json_parser@@Base+0x18c0>
   201c0:	andeq	r0, r2, r0, ror #6
   201c4:	muleq	r2, ip, r5
   201c8:	andeq	r0, r2, r8, ror #6
   201cc:	andeq	r0, r2, r4, lsr #11
   201d0:	muleq	r2, r0, r5
   201d4:	andeq	r0, r2, ip, ror #3
   201d8:	andeq	r0, r2, r4, lsl #6
   201dc:	andeq	r0, r2, ip, lsl #6
   201e0:	andeq	r0, r2, r4, lsl r3
   201e4:	andeq	r0, r2, r4, lsr #6
   201e8:	andeq	r0, r2, ip, lsl r3
   201ec:	ldr	r5, [pc, #952]	; 205ac <__flatcc_fb_gen_c_json_parser@@Base+0x1b40>
   201f0:	ldr	r1, [pc, #952]	; 205b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b44>
   201f4:	ldrh	r3, [r6, #92]	; 0x5c
   201f8:	ands	r3, r3, #32
   201fc:	str	r3, [sp, #20]
   20200:	beq	203c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1954>
   20204:	ldrd	r2, [r6, #112]	; 0x70
   20208:	subs	r2, r2, #1
   2020c:	sbc	r3, r3, #0
   20210:	cmp	r3, #0
   20214:	cmpeq	r2, #3
   20218:	bhi	20370 <__flatcc_fb_gen_c_json_parser@@Base+0x1904>
   2021c:	ldr	r3, [pc, #912]	; 205b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b48>
   20220:	add	r0, r3, r2, lsl #3
   20224:	add	r2, r3, r2, lsl #2
   20228:	ldrd	sl, [r0, #40]	; 0x28
   2022c:	ldr	r8, [r2, #72]	; 0x48
   20230:	ldr	r7, [r2, #88]	; 0x58
   20234:	ldr	r0, [r6, #20]
   20238:	cmp	r0, #0
   2023c:	bne	20384 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   20240:	mov	r3, r1
   20244:	str	r5, [sp]
   20248:	add	r2, sp, #24
   2024c:	ldr	r1, [pc, #868]	; 205b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4c>
   20250:	ldr	r0, [r4, #204]	; 0xcc
   20254:	bl	140e4 <fprintf@plt>
   20258:	ldr	r3, [sp, #20]
   2025c:	cmp	r3, #0
   20260:	beq	20484 <__flatcc_fb_gen_c_json_parser@@Base+0x1a18>
   20264:	mov	r1, r5
   20268:	mov	r0, r7
   2026c:	bl	14000 <strcmp@plt>
   20270:	cmp	r0, #0
   20274:	beq	203d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1968>
   20278:	mov	r3, r7
   2027c:	mov	r2, r7
   20280:	ldr	r1, [pc, #820]	; 205bc <__flatcc_fb_gen_c_json_parser@@Base+0x1b50>
   20284:	ldr	r0, [r4, #204]	; 0xcc
   20288:	bl	140e4 <fprintf@plt>
   2028c:	ldr	r1, [r4, #204]	; 0xcc
   20290:	ldr	r0, [pc, #808]	; 205c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b54>
   20294:	bl	14180 <fputs@plt>
   20298:	ldr	r1, [r4, #204]	; 0xcc
   2029c:	mov	r0, #10
   202a0:	bl	14144 <fputc@plt>
   202a4:	orrs	r3, sl, fp
   202a8:	beq	202c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1858>
   202ac:	str	r9, [sp]
   202b0:	mov	r2, sl
   202b4:	mov	r3, fp
   202b8:	ldr	r1, [pc, #772]	; 205c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b58>
   202bc:	ldr	r0, [r4, #204]	; 0xcc
   202c0:	bl	140e4 <fprintf@plt>
   202c4:	ldr	r1, [r4, #204]	; 0xcc
   202c8:	ldr	r0, [pc, #760]	; 205c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5c>
   202cc:	bl	14180 <fputs@plt>
   202d0:	ldr	r5, [r6, #20]
   202d4:	ldr	r6, [pc, #752]	; 205cc <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   202d8:	cmp	r5, #0
   202dc:	bne	203e8 <__flatcc_fb_gen_c_json_parser@@Base+0x197c>
   202e0:	ldr	r1, [r4, #204]	; 0xcc
   202e4:	ldr	r0, [pc, #732]	; 205c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5c>
   202e8:	bl	14180 <fputs@plt>
   202ec:	ldr	r1, [r4, #204]	; 0xcc
   202f0:	ldr	r0, [pc, #728]	; 205d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b64>
   202f4:	bl	14180 <fputs@plt>
   202f8:	mov	r0, #0
   202fc:	add	sp, sp, #468	; 0x1d4
   20300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20304:	ldr	r5, [pc, #712]	; 205d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b68>
   20308:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   2030c:	ldr	r5, [pc, #708]	; 205d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b6c>
   20310:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   20314:	ldr	r5, [pc, #704]	; 205dc <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
   20318:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   2031c:	ldr	r5, [pc, #700]	; 205e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b74>
   20320:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   20324:	ldr	r5, [pc, #696]	; 205e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b78>
   20328:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   2032c:	ldr	r0, [pc, #692]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   20330:	ldr	r3, [pc, #692]	; 205ec <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
   20334:	ldr	r2, [pc, #692]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   20338:	str	r3, [sp]
   2033c:	ldr	r1, [pc, #688]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   20340:	mov	r3, #141	; 0x8d
   20344:	ldr	r0, [r0]
   20348:	bl	140e4 <fprintf@plt>
   2034c:	ldr	r3, [pc, #676]	; 205f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b8c>
   20350:	ldr	r1, [pc, #664]	; 205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   20354:	mov	r2, #141	; 0x8d
   20358:	ldr	r0, [pc, #668]	; 205fc <__flatcc_fb_gen_c_json_parser@@Base+0x1b90>
   2035c:	bl	141a4 <__assert_fail@plt>
   20360:	ldr	r5, [pc, #664]	; 20600 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   20364:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   20368:	ldr	r5, [pc, #660]	; 20604 <__flatcc_fb_gen_c_json_parser@@Base+0x1b98>
   2036c:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   20370:	ldr	r7, [pc, #648]	; 20600 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   20374:	ldr	r8, [pc, #652]	; 20608 <__flatcc_fb_gen_c_json_parser@@Base+0x1b9c>
   20378:	mvn	sl, #0
   2037c:	mvn	fp, #0
   20380:	b	20234 <__flatcc_fb_gen_c_json_parser@@Base+0x17c8>
   20384:	ldrh	r3, [r0, #56]	; 0x38
   20388:	cmp	r3, #5
   2038c:	beq	203a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   20390:	cmp	r3, #6
   20394:	beq	203b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1948>
   20398:	cmp	r3, #4
   2039c:	bne	203ac <__flatcc_fb_gen_c_json_parser@@Base+0x1940>
   203a0:	ldrd	r2, [r0, #48]	; 0x30
   203a4:	bic	sl, sl, r2
   203a8:	bic	fp, fp, r3
   203ac:	ldr	r0, [r0]
   203b0:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   203b4:	ldrb	r2, [r0, #48]	; 0x30
   203b8:	mov	r3, #0
   203bc:	b	203a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1938>
   203c0:	ldr	r7, [pc, #488]	; 205b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b44>
   203c4:	mov	sl, #0
   203c8:	mov	r8, r7
   203cc:	mov	fp, #0
   203d0:	b	20240 <__flatcc_fb_gen_c_json_parser@@Base+0x17d4>
   203d4:	mov	r2, r7
   203d8:	ldr	r1, [pc, #556]	; 2060c <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   203dc:	ldr	r0, [r4, #204]	; 0xcc
   203e0:	bl	140e4 <fprintf@plt>
   203e4:	b	2028c <__flatcc_fb_gen_c_json_parser@@Base+0x1820>
   203e8:	ldrh	r3, [r5, #56]	; 0x38
   203ec:	cmp	r3, #5
   203f0:	beq	20404 <__flatcc_fb_gen_c_json_parser@@Base+0x1998>
   203f4:	cmp	r3, #6
   203f8:	beq	20440 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   203fc:	cmp	r3, #4
   20400:	bne	20454 <__flatcc_fb_gen_c_json_parser@@Base+0x19e8>
   20404:	ldr	r2, [r5, #4]
   20408:	ldrd	r0, [r5, #48]	; 0x30
   2040c:	ldr	r3, [r2, #4]
   20410:	str	r3, [sp, #12]
   20414:	ldr	r2, [r2]
   20418:	str	r3, [sp, #4]
   2041c:	str	r2, [sp, #8]
   20420:	mov	r3, r1
   20424:	mov	r2, r0
   20428:	str	r8, [sp]
   2042c:	mov	r1, r6
   20430:	ldr	r0, [r4, #204]	; 0xcc
   20434:	bl	140e4 <fprintf@plt>
   20438:	ldr	r5, [r5]
   2043c:	b	202d8 <__flatcc_fb_gen_c_json_parser@@Base+0x186c>
   20440:	ldr	r2, [r5, #4]
   20444:	ldrb	r0, [r5, #48]	; 0x30
   20448:	mov	r1, #0
   2044c:	ldr	r3, [r2, #4]
   20450:	b	20410 <__flatcc_fb_gen_c_json_parser@@Base+0x19a4>
   20454:	ldr	r0, [pc, #396]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   20458:	ldr	r3, [pc, #432]	; 20610 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba4>
   2045c:	ldr	r2, [pc, #432]	; 20614 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   20460:	str	r3, [sp]
   20464:	ldr	r1, [pc, #392]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   20468:	mov	r3, #134	; 0x86
   2046c:	ldr	r0, [r0]
   20470:	bl	140e4 <fprintf@plt>
   20474:	ldr	r3, [pc, #412]	; 20618 <__flatcc_fb_gen_c_json_parser@@Base+0x1bac>
   20478:	mov	r2, #134	; 0x86
   2047c:	ldr	r1, [pc, #400]	; 20614 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   20480:	b	20358 <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   20484:	ldr	r1, [r4, #204]	; 0xcc
   20488:	ldr	r0, [pc, #396]	; 2061c <__flatcc_fb_gen_c_json_parser@@Base+0x1bb0>
   2048c:	bl	14180 <fputs@plt>
   20490:	ldr	r7, [pc, #392]	; 20620 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb4>
   20494:	ldr	r5, [r6, #20]
   20498:	ldr	r8, [pc, #388]	; 20624 <__flatcc_fb_gen_c_json_parser@@Base+0x1bb8>
   2049c:	ldr	r6, [pc, #388]	; 20628 <__flatcc_fb_gen_c_json_parser@@Base+0x1bbc>
   204a0:	cmp	r5, #0
   204a4:	bne	204bc <__flatcc_fb_gen_c_json_parser@@Base+0x1a50>
   204a8:	mov	r2, r9
   204ac:	ldr	r1, [pc, #376]	; 2062c <__flatcc_fb_gen_c_json_parser@@Base+0x1bc0>
   204b0:	ldr	r0, [r4, #204]	; 0xcc
   204b4:	bl	140e4 <fprintf@plt>
   204b8:	b	202ec <__flatcc_fb_gen_c_json_parser@@Base+0x1880>
   204bc:	ldrh	r3, [r5, #56]	; 0x38
   204c0:	cmp	r3, #5
   204c4:	beq	20504 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   204c8:	cmp	r3, #6
   204cc:	beq	2053c <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   204d0:	cmp	r3, #4
   204d4:	bne	20564 <__flatcc_fb_gen_c_json_parser@@Base+0x1af8>
   204d8:	ldr	r2, [r5, #4]
   204dc:	ldrd	r0, [r5, #48]	; 0x30
   204e0:	ldr	r3, [r2, #4]
   204e4:	str	r3, [sp, #8]
   204e8:	ldr	r2, [r2]
   204ec:	str	r3, [sp]
   204f0:	str	r2, [sp, #4]
   204f4:	mov	r3, r1
   204f8:	mov	r2, r0
   204fc:	mov	r1, r8
   20500:	b	2052c <__flatcc_fb_gen_c_json_parser@@Base+0x1ac0>
   20504:	ldr	r2, [r5, #4]
   20508:	ldrd	r0, [r5, #48]	; 0x30
   2050c:	ldr	r3, [r2, #4]
   20510:	str	r3, [sp, #8]
   20514:	ldr	r2, [r2]
   20518:	str	r3, [sp]
   2051c:	str	r2, [sp, #4]
   20520:	mov	r3, r1
   20524:	mov	r2, r0
   20528:	mov	r1, r6
   2052c:	ldr	r0, [r4, #204]	; 0xcc
   20530:	bl	140e4 <fprintf@plt>
   20534:	ldr	r5, [r5]
   20538:	b	204a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   2053c:	ldr	r1, [r5, #4]
   20540:	ldrb	r2, [r5, #48]	; 0x30
   20544:	ldr	r0, [r4, #204]	; 0xcc
   20548:	ldr	r3, [r1, #4]
   2054c:	str	r3, [sp, #4]
   20550:	ldr	r1, [r1]
   20554:	str	r1, [sp]
   20558:	mov	r1, r7
   2055c:	bl	140e4 <fprintf@plt>
   20560:	b	20534 <__flatcc_fb_gen_c_json_parser@@Base+0x1ac8>
   20564:	ldr	r0, [pc, #124]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   20568:	ldr	r3, [pc, #160]	; 20610 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba4>
   2056c:	ldr	r2, [pc, #160]	; 20614 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   20570:	str	r3, [sp]
   20574:	ldr	r1, [pc, #120]	; 205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   20578:	mov	r3, #157	; 0x9d
   2057c:	ldr	r0, [r0]
   20580:	bl	140e4 <fprintf@plt>
   20584:	ldr	r3, [pc, #140]	; 20618 <__flatcc_fb_gen_c_json_parser@@Base+0x1bac>
   20588:	mov	r2, #157	; 0x9d
   2058c:	b	2047c <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   20590:	mov	r1, r4
   20594:	ldr	r5, [pc, #148]	; 20630 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   20598:	b	201f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1788>
   2059c:	ldr	r5, [pc, #144]	; 20634 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc8>
   205a0:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   205a4:	ldr	r5, [pc, #140]	; 20638 <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   205a8:	b	201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1784>
   205ac:	andeq	r1, r3, fp, ror #21
   205b0:	andeq	r2, r3, sp, lsl pc
   205b4:	andeq	r6, r4, r8, ror #4
   205b8:	andeq	r6, r4, pc, lsl r3
   205bc:	andeq	r6, r4, r5, ror #6
   205c0:	andeq	r6, r4, r7, lsl #7
   205c4:			; <UNDEFINED> instruction: 0x000463be
   205c8:	andeq	r6, r4, pc, lsl r4
   205cc:	andeq	r6, r4, fp, asr r4
   205d0:	andeq	r7, r4, fp, ror #4
   205d4:	strdeq	r1, [r3], -r4
   205d8:	strdeq	r1, [r3], -sp
   205dc:	andeq	r1, r3, r6, lsl #22
   205e0:	andeq	r1, r3, r4, lsl fp
   205e4:	andeq	r1, r3, sl, lsl fp
   205e8:	strheq	ip, [r5], -r0
   205ec:	andeq	r1, r3, r5, ror fp
   205f0:	andeq	r1, r3, r1, lsr #22
   205f4:	andeq	r1, r3, sl, ror #22
   205f8:	andeq	r6, r4, fp, ror r2
   205fc:	andeq	sl, r3, r9, asr #3
   20600:	andeq	r1, r3, sl, ror #21
   20604:	strdeq	r1, [r3], -ip
   20608:	andeq	r6, r4, fp, lsl r3
   2060c:	andeq	r6, r4, r8, ror r3
   20610:	strdeq	r6, [r4], -lr
   20614:	andeq	r6, r4, r8, lsr #9
   20618:	ldrdeq	r6, [r4], -r0
   2061c:	andeq	r6, r4, r8, lsr r5
   20620:	ldrdeq	r6, [r4], -r1
   20624:	andeq	r6, r4, lr, lsl #11
   20628:	andeq	r6, r4, fp, asr #10
   2062c:	andeq	r6, r4, r2, lsl r6
   20630:	andeq	r1, r3, sp, lsl #22
   20634:	strdeq	r1, [r3], -r3
   20638:	andeq	r1, r3, r5, lsl #22
   2063c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20640:	sub	sp, sp, #464	; 0x1d0
   20644:	mov	r4, r1
   20648:	mov	r5, r0
   2064c:	mov	r2, #220	; 0xdc
   20650:	mov	r1, #0
   20654:	add	r0, sp, #24
   20658:	add	r7, sp, #244	; 0xf4
   2065c:	bl	140fc <memset@plt>
   20660:	mov	r2, #220	; 0xdc
   20664:	mov	r1, #0
   20668:	mov	r0, r7
   2066c:	bl	140fc <memset@plt>
   20670:	mov	r0, r4
   20674:	add	r1, sp, #24
   20678:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   2067c:	add	r2, sp, #24
   20680:	ldr	r1, [pc, #344]	; 207e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d74>
   20684:	ldr	r0, [r5]
   20688:	bl	140e4 <fprintf@plt>
   2068c:	ldr	r8, [pc, #336]	; 207e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d78>
   20690:	ldr	r4, [r4, #20]
   20694:	ldr	r9, [pc, #332]	; 207e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   20698:	ldr	sl, [pc, #332]	; 207ec <__flatcc_fb_gen_c_json_parser@@Base+0x1d80>
   2069c:	mov	r6, #0
   206a0:	cmp	r4, #0
   206a4:	bne	206d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c68>
   206a8:	ldr	r1, [r5]
   206ac:	ldr	r0, [pc, #316]	; 207f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d84>
   206b0:	bl	14180 <fputs@plt>
   206b4:	add	r3, sp, #24
   206b8:	mov	r2, r3
   206bc:	ldr	r1, [pc, #304]	; 207f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d88>
   206c0:	ldr	r0, [r5]
   206c4:	bl	140e4 <fprintf@plt>
   206c8:	mov	r0, r4
   206cc:	add	sp, sp, #464	; 0x1d0
   206d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   206d4:	ldrh	r3, [r4, #72]	; 0x48
   206d8:	tst	r3, #4
   206dc:	bne	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   206e0:	ldrh	r3, [r4, #24]
   206e4:	cmp	r3, #8
   206e8:	beq	20700 <__flatcc_fb_gen_c_json_parser@@Base+0x1c94>
   206ec:	cmp	r3, #14
   206f0:	beq	20740 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd4>
   206f4:	add	r6, r6, #1
   206f8:	ldr	r4, [r4]
   206fc:	b	206a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1c34>
   20700:	ldr	r0, [r4, #16]
   20704:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20708:	ldr	r2, [r4, #4]
   2070c:	mov	r1, r8
   20710:	ldr	r3, [r2, #4]
   20714:	str	r3, [sp, #16]
   20718:	ldr	r2, [r2]
   2071c:	str	r3, [sp, #8]
   20720:	str	r2, [sp, #12]
   20724:	ldrd	r2, [r4, #80]	; 0x50
   20728:	strd	r2, [sp]
   2072c:	mov	r3, r6
   20730:	mov	r2, r0
   20734:	ldr	r0, [r5]
   20738:	bl	140e4 <fprintf@plt>
   2073c:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   20740:	mov	r1, r7
   20744:	ldr	r0, [r4, #16]
   20748:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   2074c:	ldr	r3, [r4, #16]
   20750:	ldrh	r2, [r3, #8]
   20754:	cmp	r2, #1
   20758:	beq	207a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d3c>
   2075c:	cmp	r2, #3
   20760:	bne	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   20764:	ldr	r0, [r3, #40]	; 0x28
   20768:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   2076c:	ldr	r2, [r4, #4]
   20770:	mov	r1, sl
   20774:	ldr	r3, [r2, #4]
   20778:	str	r7, [sp, #20]
   2077c:	str	r3, [sp, #16]
   20780:	ldr	r2, [r2]
   20784:	str	r3, [sp, #8]
   20788:	str	r2, [sp, #12]
   2078c:	ldrd	r2, [r4, #80]	; 0x50
   20790:	strd	r2, [sp]
   20794:	mov	r3, r6
   20798:	mov	r2, r0
   2079c:	ldr	r0, [r5]
   207a0:	bl	140e4 <fprintf@plt>
   207a4:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   207a8:	ldr	r2, [r4, #4]
   207ac:	mov	r1, r9
   207b0:	ldr	r0, [r5]
   207b4:	ldr	r3, [r2, #4]
   207b8:	str	r7, [sp, #20]
   207bc:	str	r3, [sp, #16]
   207c0:	ldr	r2, [r2]
   207c4:	str	r3, [sp, #8]
   207c8:	str	r2, [sp, #12]
   207cc:	ldrd	r2, [r4, #80]	; 0x50
   207d0:	strd	r2, [sp]
   207d4:	mov	r2, r6
   207d8:	bl	140e4 <fprintf@plt>
   207dc:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
   207e0:	andeq	r6, r4, sp, asr #12
   207e4:	muleq	r4, ip, r6
   207e8:	andeq	r6, r4, r7, asr #14
   207ec:	andeq	r6, r4, r5, ror #13
   207f0:	andeq	r7, r4, fp, ror #4
   207f4:	andeq	r6, r4, ip, lsr #15
   207f8:	push	{r4, r5, r6, r7, r8, lr}
   207fc:	sub	sp, sp, #448	; 0x1c0
   20800:	mov	r4, r1
   20804:	mov	r5, r0
   20808:	mov	r2, #220	; 0xdc
   2080c:	mov	r1, #0
   20810:	add	r0, sp, #8
   20814:	bl	140fc <memset@plt>
   20818:	mov	r2, #220	; 0xdc
   2081c:	mov	r1, #0
   20820:	add	r0, sp, #228	; 0xe4
   20824:	bl	140fc <memset@plt>
   20828:	mov	r0, r4
   2082c:	add	r1, sp, #8
   20830:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20834:	add	r2, sp, #8
   20838:	ldr	r1, [pc, #292]	; 20964 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef8>
   2083c:	ldr	r0, [r5]
   20840:	bl	140e4 <fprintf@plt>
   20844:	ldr	r6, [pc, #284]	; 20968 <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
   20848:	ldr	r4, [r4, #20]
   2084c:	ldr	r7, [pc, #280]	; 2096c <__flatcc_fb_gen_c_json_parser@@Base+0x1f00>
   20850:	ldr	r8, [pc, #280]	; 20970 <__flatcc_fb_gen_c_json_parser@@Base+0x1f04>
   20854:	cmp	r4, #0
   20858:	bne	20880 <__flatcc_fb_gen_c_json_parser@@Base+0x1e14>
   2085c:	ldr	r1, [r5]
   20860:	ldr	r0, [pc, #268]	; 20974 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
   20864:	bl	14180 <fputs@plt>
   20868:	ldr	r1, [r5]
   2086c:	ldr	r0, [pc, #260]	; 20978 <__flatcc_fb_gen_c_json_parser@@Base+0x1f0c>
   20870:	bl	14180 <fputs@plt>
   20874:	mov	r0, r4
   20878:	add	sp, sp, #448	; 0x1c0
   2087c:	pop	{r4, r5, r6, r7, r8, pc}
   20880:	ldrh	r3, [r4, #24]
   20884:	cmp	r3, #10
   20888:	beq	20924 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb8>
   2088c:	cmp	r3, #14
   20890:	beq	208a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e38>
   20894:	cmp	r3, #0
   20898:	bne	20938 <__flatcc_fb_gen_c_json_parser@@Base+0x1ecc>
   2089c:	ldr	r4, [r4]
   208a0:	b	20854 <__flatcc_fb_gen_c_json_parser@@Base+0x1de8>
   208a4:	add	r1, sp, #228	; 0xe4
   208a8:	ldr	r0, [r4, #16]
   208ac:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   208b0:	ldr	r3, [r4, #16]
   208b4:	ldrh	r3, [r3, #8]
   208b8:	cmp	r3, #0
   208bc:	beq	208fc <__flatcc_fb_gen_c_json_parser@@Base+0x1e90>
   208c0:	cmp	r3, #1
   208c4:	beq	20914 <__flatcc_fb_gen_c_json_parser@@Base+0x1ea8>
   208c8:	ldr	r0, [pc, #172]	; 2097c <__flatcc_fb_gen_c_json_parser@@Base+0x1f10>
   208cc:	ldr	r3, [pc, #172]	; 20980 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   208d0:	ldr	r2, [pc, #172]	; 20984 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   208d4:	str	r3, [sp]
   208d8:	ldr	r1, [pc, #168]	; 20988 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   208dc:	mov	r3, #240	; 0xf0
   208e0:	ldr	r0, [r0]
   208e4:	bl	140e4 <fprintf@plt>
   208e8:	ldr	r3, [pc, #156]	; 2098c <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   208ec:	mov	r2, #240	; 0xf0
   208f0:	ldr	r1, [pc, #140]	; 20984 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   208f4:	ldr	r0, [pc, #148]	; 20990 <__flatcc_fb_gen_c_json_parser@@Base+0x1f24>
   208f8:	bl	141a4 <__assert_fail@plt>
   208fc:	ldr	r2, [r4, #48]	; 0x30
   20900:	add	r3, sp, #228	; 0xe4
   20904:	mov	r1, r7
   20908:	ldr	r0, [r5]
   2090c:	bl	140e4 <fprintf@plt>
   20910:	b	2089c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   20914:	add	r3, sp, #228	; 0xe4
   20918:	ldr	r2, [r4, #48]	; 0x30
   2091c:	mov	r1, r8
   20920:	b	20908 <__flatcc_fb_gen_c_json_parser@@Base+0x1e9c>
   20924:	ldr	r2, [r4, #48]	; 0x30
   20928:	mov	r1, r6
   2092c:	ldr	r0, [r5]
   20930:	bl	140e4 <fprintf@plt>
   20934:	b	2089c <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
   20938:	ldr	r0, [pc, #60]	; 2097c <__flatcc_fb_gen_c_json_parser@@Base+0x1f10>
   2093c:	ldr	r3, [pc, #60]	; 20980 <__flatcc_fb_gen_c_json_parser@@Base+0x1f14>
   20940:	ldr	r2, [pc, #60]	; 20984 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   20944:	str	r3, [sp]
   20948:	ldr	r1, [pc, #56]	; 20988 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   2094c:	mov	r3, #251	; 0xfb
   20950:	ldr	r0, [r0]
   20954:	bl	140e4 <fprintf@plt>
   20958:	ldr	r3, [pc, #44]	; 2098c <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
   2095c:	mov	r2, #251	; 0xfb
   20960:	b	208f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e84>
   20964:	andeq	r6, r4, r3, lsl #17
   20968:	strdeq	r6, [r4], -r7
   2096c:	andeq	r6, r4, r6, lsl #18
   20970:	andeq	r6, r4, sl, ror #18
   20974:	andeq	r6, r4, r7, asr #20
   20978:	andeq	r3, r4, fp, lsl sl
   2097c:	strheq	ip, [r5], -r0
   20980:	ldrdeq	r6, [r4], -r0
   20984:	andeq	r6, r4, r8, lsr #9
   20988:	andeq	r1, r3, sl, ror #22
   2098c:	andeq	r6, r4, r6, ror #5
   20990:	andeq	sl, r3, r9, asr #3
   20994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20998:	sub	sp, sp, #492	; 0x1ec
   2099c:	mov	r6, r1
   209a0:	mov	r2, #220	; 0xdc
   209a4:	mov	r1, #0
   209a8:	mov	r4, r0
   209ac:	add	r5, sp, #268	; 0x10c
   209b0:	add	r0, sp, #48	; 0x30
   209b4:	bl	140fc <memset@plt>
   209b8:	mov	r2, #220	; 0xdc
   209bc:	mov	r1, #0
   209c0:	mov	r0, r5
   209c4:	bl	140fc <memset@plt>
   209c8:	add	r1, sp, #48	; 0x30
   209cc:	mov	r0, r6
   209d0:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   209d4:	ldr	r7, [r6, #96]	; 0x60
   209d8:	mov	r1, #4
   209dc:	mov	r0, r7
   209e0:	ldr	r8, [r6, #100]	; 0x64
   209e4:	bl	13fe8 <calloc@plt>
   209e8:	orrs	r3, r7, r8
   209ec:	movne	r3, #1
   209f0:	moveq	r3, #0
   209f4:	cmp	r0, #0
   209f8:	movne	r3, #0
   209fc:	andeq	r3, r3, #1
   20a00:	cmp	r3, #0
   20a04:	moveq	r7, r0
   20a08:	ldreq	r3, [r6, #20]
   20a0c:	beq	20a50 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe4>
   20a10:	ldr	r0, [pc, #1536]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20a14:	ldr	r3, [pc, #1536]	; 2101c <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   20a18:	ldr	r2, [pc, #1536]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20a1c:	str	r3, [sp]
   20a20:	ldr	r1, [pc, #1532]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   20a24:	ldr	r3, [pc, #1532]	; 21028 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   20a28:	ldr	r0, [r0]
   20a2c:	bl	140e4 <fprintf@plt>
   20a30:	ldr	r3, [pc, #1524]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20a34:	ldr	r2, [pc, #1516]	; 21028 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   20a38:	ldr	r1, [pc, #1504]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20a3c:	ldr	r0, [pc, #1516]	; 21030 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   20a40:	bl	141a4 <__assert_fail@plt>
   20a44:	ldr	r2, [r3, #96]	; 0x60
   20a48:	str	r3, [r7, r2, lsl #2]
   20a4c:	ldr	r3, [r3]
   20a50:	cmp	r3, #0
   20a54:	bne	20a44 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
   20a58:	add	r2, sp, #48	; 0x30
   20a5c:	ldr	r1, [pc, #1488]	; 21034 <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   20a60:	ldr	r0, [r4]
   20a64:	bl	140e4 <fprintf@plt>
   20a68:	sub	r8, r7, #4
   20a6c:	mov	r2, #0
   20a70:	mov	r3, #0
   20a74:	strd	r2, [sp, #40]	; 0x28
   20a78:	ldrd	r0, [sp, #40]	; 0x28
   20a7c:	ldrd	r2, [r6, #96]	; 0x60
   20a80:	cmp	r1, r3
   20a84:	cmpeq	r0, r2
   20a88:	bcc	20ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x205c>
   20a8c:	ldr	r1, [r4]
   20a90:	ldr	r0, [pc, #1440]	; 21038 <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   20a94:	bl	14180 <fputs@plt>
   20a98:	add	r3, sp, #48	; 0x30
   20a9c:	mov	r2, r3
   20aa0:	ldr	r1, [pc, #1428]	; 2103c <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   20aa4:	ldr	r0, [r4]
   20aa8:	bl	140e4 <fprintf@plt>
   20aac:	cmp	r7, #0
   20ab0:	beq	20abc <__flatcc_fb_gen_c_json_parser@@Base+0x2050>
   20ab4:	mov	r0, r7
   20ab8:	bl	14018 <free@plt>
   20abc:	mov	r0, #0
   20ac0:	add	sp, sp, #492	; 0x1ec
   20ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ac8:	ldr	r9, [r8, #4]!
   20acc:	cmp	r9, #0
   20ad0:	beq	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20ad4:	ldrh	r2, [r9, #72]	; 0x48
   20ad8:	tst	r2, #4
   20adc:	bne	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20ae0:	ldr	r1, [r4]
   20ae4:	ldr	r0, [pc, #1364]	; 21040 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   20ae8:	bl	14180 <fputs@plt>
   20aec:	ldrh	r2, [r9, #24]
   20af0:	sub	r2, r2, #7
   20af4:	cmp	r2, #8
   20af8:	ldrls	pc, [pc, r2, lsl #2]
   20afc:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20b00:	andeq	r0, r2, ip, lsr #24
   20b04:	andeq	r0, r2, r4, lsr #22
   20b08:	andeq	r0, r2, r0, lsr #26
   20b0c:	strdeq	r0, [r2], -r4
   20b10:	andeq	r0, r2, r8, lsl #23
   20b14:	andeq	r0, r2, r8, lsl #23
   20b18:	andeq	r0, r2, r8, lsl #23
   20b1c:	andeq	r0, r2, r4, asr #26
   20b20:	andeq	r0, r2, r8, ror #29
   20b24:	ldr	r0, [r9, #16]
   20b28:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20b2c:	ldrh	r1, [r9, #56]	; 0x38
   20b30:	sub	r1, r1, #3
   20b34:	mov	r2, r0
   20b38:	cmp	r1, #3
   20b3c:	ldrls	pc, [pc, r1, lsl #2]
   20b40:	b	20c00 <__flatcc_fb_gen_c_json_parser@@Base+0x2194>
   20b44:	andeq	r0, r2, r8, asr #23
   20b48:	muleq	r2, r8, fp
   20b4c:	andeq	r0, r2, r4, asr fp
   20b50:	andeq	r0, r2, r4, asr fp
   20b54:	ldr	r0, [r9, #4]
   20b58:	ldrd	sl, [r9, #48]	; 0x30
   20b5c:	ldr	r1, [r0, #4]
   20b60:	strd	sl, [sp, #24]
   20b64:	str	r1, [sp, #16]
   20b68:	ldr	r0, [r0]
   20b6c:	str	r1, [sp, #8]
   20b70:	str	r0, [sp, #12]
   20b74:	ldrd	r0, [r9, #96]	; 0x60
   20b78:	strd	r0, [sp]
   20b7c:	ldr	r1, [pc, #1216]	; 21044 <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   20b80:	ldr	r0, [r4]
   20b84:	bl	140e4 <fprintf@plt>
   20b88:	ldrd	r2, [sp, #40]	; 0x28
   20b8c:	adds	r2, r2, #1
   20b90:	adc	r3, r3, #0
   20b94:	b	20a74 <__flatcc_fb_gen_c_json_parser@@Base+0x2008>
   20b98:	ldr	r0, [r9, #4]
   20b9c:	ldrd	sl, [r9, #48]	; 0x30
   20ba0:	ldr	r1, [r0, #4]
   20ba4:	strd	sl, [sp, #24]
   20ba8:	str	r1, [sp, #16]
   20bac:	ldr	r0, [r0]
   20bb0:	str	r1, [sp, #8]
   20bb4:	str	r0, [sp, #12]
   20bb8:	ldrd	r0, [r9, #96]	; 0x60
   20bbc:	strd	r0, [sp]
   20bc0:	ldr	r1, [pc, #1152]	; 21048 <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   20bc4:	b	20b80 <__flatcc_fb_gen_c_json_parser@@Base+0x2114>
   20bc8:	vldr	d7, [r9, #48]	; 0x30
   20bcc:	ldr	r0, [r9, #4]
   20bd0:	ldr	r1, [r0, #4]
   20bd4:	vstr	d7, [sp, #24]
   20bd8:	str	r1, [sp, #16]
   20bdc:	ldr	r0, [r0]
   20be0:	str	r1, [sp, #8]
   20be4:	str	r0, [sp, #12]
   20be8:	ldrd	r0, [r9, #96]	; 0x60
   20bec:	strd	r0, [sp]
   20bf0:	ldr	r1, [pc, #1108]	; 2104c <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   20bf4:	ldr	r0, [r4]
   20bf8:	bl	140e4 <fprintf@plt>
   20bfc:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20c00:	ldr	r0, [pc, #1040]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20c04:	ldr	r3, [pc, #1092]	; 21050 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   20c08:	ldr	r2, [pc, #1040]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20c0c:	str	r3, [sp]
   20c10:	ldr	r1, [pc, #1036]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   20c14:	ldr	r3, [pc, #1080]	; 21054 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   20c18:	ldr	r0, [r0]
   20c1c:	bl	140e4 <fprintf@plt>
   20c20:	ldr	r3, [pc, #1028]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20c24:	ldr	r2, [pc, #1064]	; 21054 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   20c28:	b	20a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   20c2c:	ldrh	r1, [r9, #72]	; 0x48
   20c30:	tst	r1, #3072	; 0xc00
   20c34:	beq	20c70 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   20c38:	ldr	ip, [r9, #4]
   20c3c:	lsr	r1, r1, #10
   20c40:	eor	r1, r1, #1
   20c44:	ldr	r0, [ip, #4]
   20c48:	and	r1, r1, #1
   20c4c:	ldrd	r2, [r9, #96]	; 0x60
   20c50:	str	r1, [sp, #12]
   20c54:	str	r0, [sp, #8]
   20c58:	ldr	r1, [ip]
   20c5c:	stm	sp, {r0, r1}
   20c60:	ldr	r1, [pc, #1008]	; 21058 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   20c64:	ldr	r0, [r4]
   20c68:	bl	140e4 <fprintf@plt>
   20c6c:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20c70:	ldr	r0, [r9, #104]	; 0x68
   20c74:	cmp	r0, #0
   20c78:	beq	20cb8 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   20c7c:	mov	r1, r5
   20c80:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20c84:	ldr	r2, [r9, #104]	; 0x68
   20c88:	ldr	r1, [r9, #4]
   20c8c:	ldrh	r2, [r2, #8]
   20c90:	ldr	r0, [r1, #4]
   20c94:	cmp	r2, #0
   20c98:	ldrd	r2, [r9, #96]	; 0x60
   20c9c:	str	r5, [sp, #12]
   20ca0:	str	r0, [sp, #8]
   20ca4:	ldr	r1, [r1]
   20ca8:	stm	sp, {r0, r1}
   20cac:	ldrne	r1, [pc, #936]	; 2105c <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   20cb0:	ldreq	r1, [pc, #936]	; 21060 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   20cb4:	b	20c64 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20cb8:	ldr	r0, [r9, #16]
   20cbc:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20cc0:	ldr	r1, [r9, #4]
   20cc4:	ldr	r2, [r1, #4]
   20cc8:	str	r2, [sp, #16]
   20ccc:	ldr	r1, [r1]
   20cd0:	str	r2, [sp, #8]
   20cd4:	str	r1, [sp, #12]
   20cd8:	ldrd	r2, [r9, #96]	; 0x60
   20cdc:	ldr	r1, [pc, #896]	; 21064 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   20ce0:	strd	r2, [sp]
   20ce4:	mov	r2, r0
   20ce8:	ldr	r0, [r4]
   20cec:	bl	140e4 <fprintf@plt>
   20cf0:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20cf4:	ldr	r0, [r9, #4]
   20cf8:	ldrd	r2, [r9, #96]	; 0x60
   20cfc:	ldr	r1, [r0, #4]
   20d00:	str	r1, [sp, #8]
   20d04:	ldr	r0, [r0]
   20d08:	str	r1, [sp]
   20d0c:	ldr	r1, [pc, #852]	; 21068 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   20d10:	str	r0, [sp, #4]
   20d14:	ldr	r0, [r4]
   20d18:	bl	140e4 <fprintf@plt>
   20d1c:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20d20:	ldr	r0, [r9, #4]
   20d24:	ldrd	r2, [r9, #96]	; 0x60
   20d28:	ldr	r1, [r0, #4]
   20d2c:	str	r1, [sp, #8]
   20d30:	ldr	r0, [r0]
   20d34:	str	r1, [sp]
   20d38:	str	r0, [sp, #4]
   20d3c:	ldr	r1, [pc, #808]	; 2106c <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   20d40:	b	20d14 <__flatcc_fb_gen_c_json_parser@@Base+0x22a8>
   20d44:	mov	r1, r5
   20d48:	ldr	r0, [r9, #16]
   20d4c:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20d50:	ldr	r2, [r9, #16]
   20d54:	ldrh	r1, [r2, #8]
   20d58:	cmp	r1, #4
   20d5c:	ldrls	pc, [pc, r1, lsl #2]
   20d60:	b	20ebc <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   20d64:	andeq	r0, r2, r0, ror #28
   20d68:	andeq	r0, r2, r8, lsr lr
   20d6c:			; <UNDEFINED> instruction: 0x00020ebc
   20d70:	andeq	r0, r2, r8, ror sp
   20d74:	andeq	r0, r2, r8, lsl #29
   20d78:	ldr	r0, [r2, #40]	; 0x28
   20d7c:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20d80:	ldrh	r1, [r9, #56]	; 0x38
   20d84:	cmp	r1, #4
   20d88:	mov	r2, r0
   20d8c:	beq	20dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   20d90:	bcc	20e0c <__flatcc_fb_gen_c_json_parser@@Base+0x23a0>
   20d94:	cmp	r1, #6
   20d98:	bhi	20e0c <__flatcc_fb_gen_c_json_parser@@Base+0x23a0>
   20d9c:	ldr	r0, [r9, #4]
   20da0:	ldr	r1, [r0, #4]
   20da4:	str	r5, [sp, #32]
   20da8:	ldrd	sl, [r9, #48]	; 0x30
   20dac:	str	r1, [sp, #16]
   20db0:	strd	sl, [sp, #24]
   20db4:	ldr	r0, [r0]
   20db8:	str	r1, [sp, #8]
   20dbc:	str	r0, [sp, #12]
   20dc0:	ldrd	r0, [r9, #96]	; 0x60
   20dc4:	strd	r0, [sp]
   20dc8:	ldr	r1, [pc, #672]	; 21070 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   20dcc:	ldr	r0, [r4]
   20dd0:	bl	140e4 <fprintf@plt>
   20dd4:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20dd8:	ldr	r0, [r9, #4]
   20ddc:	ldr	r1, [r0, #4]
   20de0:	str	r5, [sp, #32]
   20de4:	ldrd	sl, [r9, #48]	; 0x30
   20de8:	str	r1, [sp, #16]
   20dec:	strd	sl, [sp, #24]
   20df0:	ldr	r0, [r0]
   20df4:	str	r1, [sp, #8]
   20df8:	str	r0, [sp, #12]
   20dfc:	ldrd	r0, [r9, #96]	; 0x60
   20e00:	strd	r0, [sp]
   20e04:	ldr	r1, [pc, #616]	; 21074 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   20e08:	b	20dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   20e0c:	ldr	r0, [pc, #516]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20e10:	ldr	r3, [pc, #608]	; 21078 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   20e14:	ldr	r2, [pc, #516]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20e18:	str	r3, [sp]
   20e1c:	ldr	r1, [pc, #512]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   20e20:	ldr	r3, [pc, #596]	; 2107c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   20e24:	ldr	r0, [r0]
   20e28:	bl	140e4 <fprintf@plt>
   20e2c:	ldr	r3, [pc, #504]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20e30:	ldr	r2, [pc, #580]	; 2107c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   20e34:	b	20a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   20e38:	ldr	r0, [r9, #4]
   20e3c:	ldrd	r2, [r9, #96]	; 0x60
   20e40:	ldr	r1, [r0, #4]
   20e44:	str	r5, [sp, #12]
   20e48:	str	r1, [sp, #8]
   20e4c:	ldr	r0, [r0]
   20e50:	str	r1, [sp]
   20e54:	str	r0, [sp, #4]
   20e58:	ldr	r1, [pc, #544]	; 21080 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   20e5c:	b	20c64 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20e60:	ldr	r0, [r9, #4]
   20e64:	ldrd	r2, [r9, #96]	; 0x60
   20e68:	ldr	r1, [r0, #4]
   20e6c:	str	r5, [sp, #12]
   20e70:	str	r1, [sp, #8]
   20e74:	ldr	r0, [r0]
   20e78:	str	r1, [sp]
   20e7c:	str	r0, [sp, #4]
   20e80:	ldr	r1, [pc, #508]	; 21084 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   20e84:	b	20c64 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20e88:	ldr	r0, [r9, #4]
   20e8c:	ldrd	r2, [r9, #96]	; 0x60
   20e90:	ldr	r1, [r0, #4]
   20e94:	str	r5, [sp, #16]
   20e98:	str	r1, [sp, #8]
   20e9c:	str	r5, [sp, #12]
   20ea0:	ldr	r0, [r0]
   20ea4:	str	r1, [sp]
   20ea8:	ldr	r1, [pc, #472]	; 21088 <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   20eac:	str	r0, [sp, #4]
   20eb0:	ldr	r0, [r4]
   20eb4:	bl	140e4 <fprintf@plt>
   20eb8:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20ebc:	ldr	r0, [pc, #340]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20ec0:	ldr	r3, [pc, #452]	; 2108c <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   20ec4:	ldr	r2, [pc, #340]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20ec8:	str	r3, [sp]
   20ecc:	ldr	r1, [pc, #336]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   20ed0:	mov	r3, #504	; 0x1f8
   20ed4:	ldr	r0, [r0]
   20ed8:	bl	140e4 <fprintf@plt>
   20edc:	ldr	r3, [pc, #328]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20ee0:	mov	r2, #504	; 0x1f8
   20ee4:	b	20a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   20ee8:	mov	r1, r5
   20eec:	ldr	r0, [r9, #16]
   20ef0:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   20ef4:	ldr	r2, [r9, #16]
   20ef8:	ldrh	r2, [r2, #8]
   20efc:	cmp	r2, #4
   20f00:	ldrls	pc, [pc, r2, lsl #2]
   20f04:	b	20fec <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   20f08:	andeq	r0, r2, ip, lsl pc
   20f0c:	andeq	r0, r2, r4, lsl #31
   20f10:	andeq	r0, r2, ip, ror #31
   20f14:	andeq	r0, r2, r4, asr #30
   20f18:	andeq	r0, r2, r0, asr #31
   20f1c:	ldr	r0, [r9, #4]
   20f20:	ldrd	r2, [r9, #96]	; 0x60
   20f24:	ldr	r1, [r0, #4]
   20f28:	str	r5, [sp, #12]
   20f2c:	str	r1, [sp, #8]
   20f30:	ldr	r0, [r0]
   20f34:	str	r1, [sp]
   20f38:	str	r0, [sp, #4]
   20f3c:	ldr	r1, [pc, #332]	; 21090 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   20f40:	b	20c64 <__flatcc_fb_gen_c_json_parser@@Base+0x21f8>
   20f44:	ldr	r0, [r9, #16]
   20f48:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x15e4>
   20f4c:	ldr	r1, [r9, #4]
   20f50:	ldrd	sl, [r6, #112]	; 0x70
   20f54:	ldr	r2, [r1, #4]
   20f58:	str	r5, [sp, #32]
   20f5c:	strd	sl, [sp, #24]
   20f60:	str	r2, [sp, #16]
   20f64:	ldr	r1, [r1]
   20f68:	str	r2, [sp, #8]
   20f6c:	str	r1, [sp, #12]
   20f70:	ldrd	r2, [r9, #96]	; 0x60
   20f74:	ldr	r1, [pc, #280]	; 21094 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   20f78:	strd	r2, [sp]
   20f7c:	mov	r2, r0
   20f80:	b	20dcc <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   20f84:	ldr	ip, [r9, #4]
   20f88:	ldrd	r0, [r9, #96]	; 0x60
   20f8c:	ldr	r2, [ip, #4]
   20f90:	str	r5, [sp, #24]
   20f94:	ldrd	sl, [r9, #88]	; 0x58
   20f98:	str	r2, [sp, #8]
   20f9c:	strd	sl, [sp, #16]
   20fa0:	ldr	r3, [ip]
   20fa4:	stm	sp, {r2, r3}
   20fa8:	mov	r2, r0
   20fac:	mov	r3, r1
   20fb0:	ldr	r0, [r4]
   20fb4:	ldr	r1, [pc, #220]	; 21098 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20fb8:	bl	140e4 <fprintf@plt>
   20fbc:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   20fc0:	ldr	r0, [r9, #4]
   20fc4:	ldrd	r2, [r9, #96]	; 0x60
   20fc8:	ldr	r1, [r0, #4]
   20fcc:	str	r5, [sp, #16]
   20fd0:	str	r1, [sp, #8]
   20fd4:	str	r5, [sp, #12]
   20fd8:	ldr	r0, [r0]
   20fdc:	str	r1, [sp]
   20fe0:	str	r0, [sp, #4]
   20fe4:	ldr	r1, [pc, #176]	; 2109c <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
   20fe8:	b	20eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   20fec:	ldr	r0, [pc, #36]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20ff0:	ldr	r3, [pc, #168]	; 210a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2634>
   20ff4:	ldr	r2, [pc, #36]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20ff8:	str	r3, [sp]
   20ffc:	ldr	r1, [pc, #32]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   21000:	ldr	r3, [pc, #156]	; 210a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   21004:	ldr	r0, [r0]
   21008:	bl	140e4 <fprintf@plt>
   2100c:	ldr	r3, [pc, #24]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   21010:	ldr	r2, [pc, #140]	; 210a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   21014:	b	20a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   21018:	strheq	ip, [r5], -r0
   2101c:	andeq	r6, r4, r4, ror #20
   21020:	andeq	r6, r4, r8, lsr #9
   21024:	andeq	r1, r3, sl, ror #22
   21028:	andeq	r0, r0, r9, ror #2
   2102c:	andeq	r6, r4, r4, lsl #6
   21030:	andeq	sl, r3, r9, asr #3
   21034:	andeq	r6, r4, lr, lsl #21
   21038:	andeq	r7, r4, sl, ror #4
   2103c:	muleq	r4, sl, r1
   21040:	strdeq	r6, [r4], -r8
   21044:	strdeq	r6, [r4], -lr
   21048:	andeq	r6, r4, lr, lsr fp
   2104c:	andeq	r6, r4, lr, ror fp
   21050:	andeq	r4, r4, r9, ror r9
   21054:	muleq	r0, r6, r1
   21058:			; <UNDEFINED> instruction: 0x00046bbd
   2105c:	andeq	r6, r4, sl, ror #24
   21060:	andeq	r6, r4, ip, lsl #24
   21064:	andeq	r6, r4, sl, asr #25
   21068:	andeq	r6, r4, fp, lsl #26
   2106c:	andeq	r6, r4, r9, asr #26
   21070:	andeq	r6, r4, lr, lsl #27
   21074:	andeq	r6, r4, r7, ror #27
   21078:	andeq	r6, r4, r0, asr #28
   2107c:	andeq	r0, r0, r3, ror #3
   21080:	andeq	r6, r4, r8, ror lr
   21084:	andeq	r6, r4, ip, asr #29
   21088:	andeq	r6, r4, lr, lsl pc
   2108c:	andeq	r6, r4, sl, lsl #31
   21090:	andeq	r6, r4, r8, asr #31
   21094:	andeq	r7, r4, r1, lsr #32
   21098:	andeq	r7, r4, r1, lsl #1
   2109c:	andeq	r7, r4, r2, ror #1
   210a0:	andeq	r7, r4, r5, asr r1
   210a4:	andeq	r0, r0, pc, lsl r2

000210a8 <__flatcc_fb_gen_c_json_printer@@Base>:
   210a8:	ldr	r3, [r0, #208]	; 0xd0
   210ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   210b0:	mov	r4, r0
   210b4:	ldr	r3, [r3, #164]	; 0xa4
   210b8:	sub	sp, sp, #236	; 0xec
   210bc:	mov	r2, r3
   210c0:	ldr	r1, [pc, #884]	; 2143c <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   210c4:	ldr	r0, [r0, #204]	; 0xcc
   210c8:	bl	140e4 <fprintf@plt>
   210cc:	ldr	r1, [r4, #204]	; 0xcc
   210d0:	ldr	r0, [pc, #872]	; 21440 <__flatcc_fb_gen_c_json_printer@@Base+0x398>
   210d4:	bl	14180 <fputs@plt>
   210d8:	ldr	r1, [r4, #204]	; 0xcc
   210dc:	ldr	r0, [pc, #864]	; 21444 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   210e0:	bl	14180 <fputs@plt>
   210e4:	ldr	r2, [pc, #860]	; 21448 <__flatcc_fb_gen_c_json_printer@@Base+0x3a0>
   210e8:	ldr	r1, [pc, #860]	; 2144c <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   210ec:	mov	r0, r4
   210f0:	bl	15954 <__flatcc_fb_gen_c_includes@@Base>
   210f4:	ldr	r3, [r4, #212]	; 0xd4
   210f8:	ldr	r3, [r3, #140]	; 0x8c
   210fc:	cmp	r3, #0
   21100:	beq	21110 <__flatcc_fb_gen_c_json_printer@@Base+0x68>
   21104:	ldr	r1, [r4, #204]	; 0xcc
   21108:	ldr	r0, [pc, #832]	; 21450 <__flatcc_fb_gen_c_json_printer@@Base+0x3a8>
   2110c:	bl	14180 <fputs@plt>
   21110:	ldr	r1, [r4, #204]	; 0xcc
   21114:	mov	r0, #10
   21118:	bl	14144 <fputc@plt>
   2111c:	ldr	r3, [r4, #208]	; 0xd0
   21120:	mov	r2, #220	; 0xdc
   21124:	mov	r1, #0
   21128:	ldr	r5, [r3, #52]	; 0x34
   2112c:	add	r0, sp, #12
   21130:	bl	140fc <memset@plt>
   21134:	cmp	r5, #0
   21138:	beq	21168 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   2113c:	ldrh	r3, [r5, #8]
   21140:	cmp	r3, #1
   21144:	bhi	21168 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   21148:	ldr	r1, [r4, #204]	; 0xcc
   2114c:	ldr	r0, [pc, #768]	; 21454 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   21150:	bl	14180 <fputs@plt>
   21154:	ldr	r3, [r4, #208]	; 0xd0
   21158:	ldr	r1, [pc, #760]	; 21458 <__flatcc_fb_gen_c_json_printer@@Base+0x3b0>
   2115c:	ldr	r0, [r4, #204]	; 0xcc
   21160:	ldr	r2, [r3, #160]	; 0xa0
   21164:	bl	140e4 <fprintf@plt>
   21168:	ldr	r3, [r4, #208]	; 0xd0
   2116c:	ldr	r6, [pc, #744]	; 2145c <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   21170:	ldr	r7, [pc, #744]	; 21460 <__flatcc_fb_gen_c_json_printer@@Base+0x3b8>
   21174:	ldr	r5, [r3, #40]	; 0x28
   21178:	ldr	r8, [pc, #740]	; 21464 <__flatcc_fb_gen_c_json_printer@@Base+0x3bc>
   2117c:	cmp	r5, #0
   21180:	bne	212ac <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   21184:	ldr	r1, [r4, #204]	; 0xcc
   21188:	mov	r0, #10
   2118c:	bl	14144 <fputc@plt>
   21190:	ldr	r3, [r4, #208]	; 0xd0
   21194:	ldr	r5, [r3, #40]	; 0x28
   21198:	cmp	r5, #0
   2119c:	bne	21324 <__flatcc_fb_gen_c_json_printer@@Base+0x27c>
   211a0:	ldr	r3, [r4, #208]	; 0xd0
   211a4:	ldr	r8, [pc, #700]	; 21468 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
   211a8:	ldr	r9, [pc, #700]	; 2146c <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   211ac:	ldr	r5, [r3, #40]	; 0x28
   211b0:	add	r7, r4, #204	; 0xcc
   211b4:	cmp	r5, #0
   211b8:	bne	21344 <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   211bc:	ldr	r3, [r4, #208]	; 0xd0
   211c0:	add	r6, r4, #204	; 0xcc
   211c4:	ldr	r5, [r3, #40]	; 0x28
   211c8:	cmp	r5, #0
   211cc:	bne	213ec <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   211d0:	ldr	r3, [r4, #208]	; 0xd0
   211d4:	add	r6, r4, #204	; 0xcc
   211d8:	ldr	r5, [r3, #40]	; 0x28
   211dc:	cmp	r5, #0
   211e0:	bne	2140c <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   211e4:	ldr	r3, [r4, #208]	; 0xd0
   211e8:	ldr	r6, [r3, #52]	; 0x34
   211ec:	cmp	r6, #0
   211f0:	beq	21270 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   211f4:	ldrh	r3, [r6, #8]
   211f8:	cmp	r3, #1
   211fc:	bhi	21270 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   21200:	mov	r2, #220	; 0xdc
   21204:	mov	r1, r5
   21208:	add	r0, sp, #12
   2120c:	bl	140fc <memset@plt>
   21210:	add	r1, sp, #12
   21214:	mov	r0, r6
   21218:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   2121c:	ldr	r3, [r4, #208]	; 0xd0
   21220:	ldr	r1, [pc, #584]	; 21470 <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   21224:	ldr	r0, [r4, #204]	; 0xcc
   21228:	ldr	r2, [r3, #160]	; 0xa0
   2122c:	bl	140e4 <fprintf@plt>
   21230:	add	r2, sp, #12
   21234:	ldr	r1, [pc, #568]	; 21474 <__flatcc_fb_gen_c_json_printer@@Base+0x3cc>
   21238:	ldr	r0, [r4, #204]	; 0xcc
   2123c:	bl	140e4 <fprintf@plt>
   21240:	ldr	r2, [r4, #208]	; 0xd0
   21244:	ldrh	r3, [r2, #16]
   21248:	cmp	r3, #2
   2124c:	bne	2142c <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   21250:	ldr	r3, [r2, #8]
   21254:	ldr	r1, [pc, #540]	; 21478 <__flatcc_fb_gen_c_json_printer@@Base+0x3d0>
   21258:	ldr	r2, [r2, #12]
   2125c:	ldr	r0, [r4, #204]	; 0xcc
   21260:	bl	140e4 <fprintf@plt>
   21264:	ldr	r1, [r4, #204]	; 0xcc
   21268:	ldr	r0, [pc, #524]	; 2147c <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   2126c:	bl	14180 <fputs@plt>
   21270:	ldr	r3, [r4, #212]	; 0xd4
   21274:	ldr	r3, [r3, #140]	; 0x8c
   21278:	cmp	r3, #0
   2127c:	beq	2128c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   21280:	ldr	r1, [r4, #204]	; 0xcc
   21284:	ldr	r0, [pc, #500]	; 21480 <__flatcc_fb_gen_c_json_printer@@Base+0x3d8>
   21288:	bl	14180 <fputs@plt>
   2128c:	ldr	r3, [r4, #208]	; 0xd0
   21290:	ldr	r1, [pc, #492]	; 21484 <__flatcc_fb_gen_c_json_printer@@Base+0x3dc>
   21294:	ldr	r0, [r4, #204]	; 0xcc
   21298:	ldr	r2, [r3, #164]	; 0xa4
   2129c:	bl	140e4 <fprintf@plt>
   212a0:	mov	r0, #0
   212a4:	add	sp, sp, #236	; 0xec
   212a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   212ac:	ldrh	r3, [r5, #8]
   212b0:	cmp	r3, #1
   212b4:	beq	2130c <__flatcc_fb_gen_c_json_printer@@Base+0x264>
   212b8:	bcc	212ec <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   212bc:	cmp	r3, #4
   212c0:	bne	212e4 <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
   212c4:	add	r1, sp, #12
   212c8:	mov	r0, r5
   212cc:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   212d0:	add	r3, sp, #12
   212d4:	mov	r2, r3
   212d8:	mov	r1, r8
   212dc:	ldr	r0, [r4, #204]	; 0xcc
   212e0:	bl	140e4 <fprintf@plt>
   212e4:	ldr	r5, [r5]
   212e8:	b	2117c <__flatcc_fb_gen_c_json_printer@@Base+0xd4>
   212ec:	add	r1, sp, #12
   212f0:	mov	r0, r5
   212f4:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   212f8:	add	r2, sp, #12
   212fc:	mov	r1, r7
   21300:	ldr	r0, [r4, #204]	; 0xcc
   21304:	bl	140e4 <fprintf@plt>
   21308:	b	212e4 <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
   2130c:	add	r1, sp, #12
   21310:	mov	r0, r5
   21314:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   21318:	add	r2, sp, #12
   2131c:	mov	r1, r6
   21320:	b	21300 <__flatcc_fb_gen_c_json_printer@@Base+0x258>
   21324:	ldrh	r3, [r5, #8]
   21328:	cmp	r3, #3
   2132c:	bne	2133c <__flatcc_fb_gen_c_json_printer@@Base+0x294>
   21330:	mov	r1, r5
   21334:	mov	r0, r4
   21338:	bl	20164 <__flatcc_fb_gen_c_json_parser@@Base+0x16f8>
   2133c:	ldr	r5, [r5]
   21340:	b	21198 <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   21344:	ldrh	r3, [r5, #8]
   21348:	cmp	r3, #4
   2134c:	bne	213ac <__flatcc_fb_gen_c_json_printer@@Base+0x304>
   21350:	mov	r2, #220	; 0xdc
   21354:	mov	r1, #0
   21358:	add	r0, sp, #12
   2135c:	bl	140fc <memset@plt>
   21360:	add	r1, sp, #12
   21364:	mov	r0, r5
   21368:	bl	20040 <__flatcc_fb_gen_c_json_parser@@Base+0x15d4>
   2136c:	add	r2, sp, #12
   21370:	mov	r1, r8
   21374:	ldr	r0, [r4, #204]	; 0xcc
   21378:	bl	140e4 <fprintf@plt>
   2137c:	ldr	r6, [r5, #20]
   21380:	cmp	r6, #0
   21384:	bne	213b4 <__flatcc_fb_gen_c_json_printer@@Base+0x30c>
   21388:	ldr	r1, [r4, #204]	; 0xcc
   2138c:	ldr	r0, [pc, #244]	; 21488 <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   21390:	bl	14180 <fputs@plt>
   21394:	ldr	r1, [r4, #204]	; 0xcc
   21398:	ldr	r0, [pc, #236]	; 2148c <__flatcc_fb_gen_c_json_printer@@Base+0x3e4>
   2139c:	bl	14180 <fputs@plt>
   213a0:	mov	r1, r5
   213a4:	mov	r0, r7
   213a8:	bl	207f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   213ac:	ldr	r5, [r5]
   213b0:	b	211b4 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   213b4:	ldrh	r3, [r6, #24]
   213b8:	cmp	r3, #0
   213bc:	beq	213e4 <__flatcc_fb_gen_c_json_printer@@Base+0x33c>
   213c0:	ldr	r2, [r6, #4]
   213c4:	mov	r1, r9
   213c8:	ldr	r0, [r4, #204]	; 0xcc
   213cc:	ldr	r3, [r2, #4]
   213d0:	str	r3, [sp, #4]
   213d4:	ldr	r2, [r2]
   213d8:	str	r2, [sp]
   213dc:	ldr	r2, [r6, #48]	; 0x30
   213e0:	bl	140e4 <fprintf@plt>
   213e4:	ldr	r6, [r6]
   213e8:	b	21380 <__flatcc_fb_gen_c_json_printer@@Base+0x2d8>
   213ec:	ldrh	r3, [r5, #8]
   213f0:	cmp	r3, #1
   213f4:	bne	21404 <__flatcc_fb_gen_c_json_printer@@Base+0x35c>
   213f8:	mov	r1, r5
   213fc:	mov	r0, r6
   21400:	bl	2063c <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   21404:	ldr	r5, [r5]
   21408:	b	211c8 <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   2140c:	ldrh	r3, [r5, #8]
   21410:	cmp	r3, #0
   21414:	bne	21424 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   21418:	mov	r1, r5
   2141c:	mov	r0, r6
   21420:	bl	20994 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   21424:	ldr	r5, [r5]
   21428:	b	211dc <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   2142c:	ldr	r1, [r4, #204]	; 0xcc
   21430:	ldr	r0, [pc, #88]	; 21490 <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   21434:	bl	14180 <fputs@plt>
   21438:	b	21264 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   2143c:	andeq	r7, r4, pc, ror #4
   21440:	andeq	r2, r3, r0, asr #27
   21444:	andeq	r7, r4, r4, lsr #5
   21448:	andeq	r7, r4, sp, asr #5
   2144c:	andeq	r1, r3, ip, asr #16
   21450:	andeq	r2, r3, pc, asr #29
   21454:	ldrdeq	r7, [r4], -sp
   21458:	andeq	r7, r4, r0, asr #9
   2145c:	andeq	r7, r4, r8, asr #12
   21460:	ldrdeq	r7, [r4], -lr
   21464:	andeq	r7, r4, r8, lsl r5
   21468:	muleq	r4, r6, r6
   2146c:	andeq	r7, r4, r8, lsl #14
   21470:	andeq	r7, r4, r8, lsr #15
   21474:	strdeq	r7, [r4], -lr
   21478:			; <UNDEFINED> instruction: 0x000478b4
   2147c:	andeq	r7, r4, fp, ror #4
   21480:			; <UNDEFINED> instruction: 0x00038cb9
   21484:	andeq	r7, r4, r2, asr #17
   21488:	andeq	r7, r4, r9, asr r7
   2148c:	andeq	r3, r4, fp, lsl sl
   21490:			; <UNDEFINED> instruction: 0x000478be
   21494:	andeq	r0, r0, r0
   21498:	push	{r4, lr}
   2149c:	mov	r4, r0
   214a0:	ldr	r0, [r0, #16]
   214a4:	cmp	r0, #0
   214a8:	beq	214b0 <__flatcc_fb_gen_c_json_printer@@Base+0x408>
   214ac:	bl	14018 <free@plt>
   214b0:	ldr	r0, [r4, #20]
   214b4:	cmp	r0, #0
   214b8:	beq	214c0 <__flatcc_fb_gen_c_json_printer@@Base+0x418>
   214bc:	bl	14018 <free@plt>
   214c0:	ldr	r0, [r4, #24]
   214c4:	cmp	r0, #0
   214c8:	beq	214d0 <__flatcc_fb_gen_c_json_printer@@Base+0x428>
   214cc:	bl	14018 <free@plt>
   214d0:	mov	r0, r4
   214d4:	mov	r2, #44	; 0x2c
   214d8:	mov	r1, #0
   214dc:	pop	{r4, lr}
   214e0:	b	140fc <memset@plt>
   214e4:	add	r3, r1, #4
   214e8:	mov	r2, r0
   214ec:	ldr	r1, [pc, #4]	; 214f8 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   214f0:	mov	r0, r3
   214f4:	b	23934 <fb_symbol_table_visit@@Base>
   214f8:	andeq	r1, r2, r4, lsl r5
   214fc:	add	r3, r1, #4
   21500:	mov	r2, r0
   21504:	ldr	r1, [pc, #4]	; 21510 <__flatcc_fb_gen_c_json_printer@@Base+0x468>
   21508:	mov	r0, r3
   2150c:	b	23934 <fb_symbol_table_visit@@Base>
   21510:	strdeq	r1, [r2], -r4
   21514:	ldrh	r3, [r1, #8]
   21518:	cmp	r3, #4
   2151c:	bxhi	lr
   21520:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21524:	mov	r4, r0
   21528:	ldr	r0, [r0, #40]	; 0x28
   2152c:	mov	r5, r1
   21530:	add	r0, r0, #172	; 0xac
   21534:	ldr	r1, [r1, #16]
   21538:	bl	233f8 <ptr_set_find_item@@Base>
   2153c:	cmp	r0, #0
   21540:	bne	2159c <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   21544:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21548:	ldr	r1, [r8, #4]
   2154c:	mov	r0, r3
   21550:	ldr	r6, [r1, #4]
   21554:	ldr	r1, [r1]
   21558:	mov	r2, r6
   2155c:	bl	14024 <memcpy@plt>
   21560:	add	r6, r0, r6
   21564:	add	r3, r6, #1
   21568:	strb	r9, [r6]
   2156c:	ldr	r8, [r8]
   21570:	b	215c0 <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   21574:	ldr	r3, [r4, #28]
   21578:	stm	r3, {r5, r7}
   2157c:	add	r3, r3, #8
   21580:	str	r3, [r4, #28]
   21584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21588:	ldr	r3, [r4, #32]
   2158c:	stm	r3, {r5, r7}
   21590:	add	r3, r3, #8
   21594:	str	r3, [r4, #32]
   21598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2159c:	ldr	r3, [r4]
   215a0:	ldr	r7, [r4, #36]	; 0x24
   215a4:	cmp	r3, #0
   215a8:	moveq	r3, r7
   215ac:	beq	215c8 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   215b0:	ldr	r3, [r5, #12]
   215b4:	mov	r9, #46	; 0x2e
   215b8:	ldr	r8, [r3]
   215bc:	mov	r3, r7
   215c0:	cmp	r8, #0
   215c4:	bne	21548 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
   215c8:	ldr	r1, [r5, #4]
   215cc:	mov	r0, r3
   215d0:	ldr	r6, [r1, #4]
   215d4:	ldr	r1, [r1]
   215d8:	mov	r2, r6
   215dc:	bl	14024 <memcpy@plt>
   215e0:	mov	r1, #0
   215e4:	add	r2, r0, r6
   215e8:	add	r3, r2, #1
   215ec:	strb	r1, [r0, r6]
   215f0:	str	r3, [r4, #36]	; 0x24
   215f4:	ldrh	r3, [r5, #8]
   215f8:	cmp	r3, #4
   215fc:	ldrls	pc, [pc, r3, lsl #2]
   21600:	b	21618 <__flatcc_fb_gen_c_json_printer@@Base+0x570>
   21604:	andeq	r1, r2, r4, ror r5
   21608:	andeq	r1, r2, r4, ror r5
   2160c:	andeq	r1, r2, r8, lsl r6
   21610:	andeq	r1, r2, r8, lsl #11
   21614:	andeq	r1, r2, r8, lsl #11
   21618:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2161c:	push	{r4, r5, r6, lr}
   21620:	mov	r2, #8
   21624:	ldr	r3, [pc, #40]	; 21654 <__flatcc_fb_gen_c_json_printer@@Base+0x5ac>
   21628:	mov	r5, r0
   2162c:	mov	r4, r1
   21630:	bl	14168 <qsort@plt>
   21634:	mov	r3, #0
   21638:	cmp	r3, r4
   2163c:	blt	21644 <__flatcc_fb_gen_c_json_printer@@Base+0x59c>
   21640:	pop	{r4, r5, r6, pc}
   21644:	ldr	r2, [r5, r3, lsl #3]
   21648:	str	r3, [r2, #124]	; 0x7c
   2164c:	add	r3, r3, #1
   21650:	b	21638 <__flatcc_fb_gen_c_json_printer@@Base+0x590>
   21654:	andeq	r1, r2, r8, asr r6
   21658:	ldr	r1, [r1, #4]
   2165c:	ldr	r0, [r0, #4]
   21660:	b	14000 <strcmp@plt>
   21664:	push	{r4, lr}
   21668:	subs	r4, r1, #0
   2166c:	bne	21678 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
   21670:	mvn	r0, #0
   21674:	pop	{r4, pc}
   21678:	mov	r1, #0
   2167c:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   21680:	cmp	r0, #0
   21684:	beq	21670 <__flatcc_fb_gen_c_json_printer@@Base+0x5c8>
   21688:	str	r4, [r0]
   2168c:	mov	r0, #0
   21690:	pop	{r4, pc}
   21694:	push	{r4, lr}
   21698:	subs	r4, r1, #0
   2169c:	bne	216a8 <__flatcc_fb_gen_c_json_printer@@Base+0x600>
   216a0:	mvn	r0, #0
   216a4:	pop	{r4, pc}
   216a8:	mov	r1, #1
   216ac:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   216b0:	cmp	r0, #0
   216b4:	beq	216a0 <__flatcc_fb_gen_c_json_printer@@Base+0x5f8>
   216b8:	str	r4, [r0]
   216bc:	mov	r0, #0
   216c0:	pop	{r4, pc}
   216c4:	push	{r4, lr}
   216c8:	subs	r4, r1, #0
   216cc:	beq	216ec <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   216d0:	mov	r3, #1
   216d4:	mov	r2, r3
   216d8:	mov	r1, #2
   216dc:	bl	2d1ec <flatcc_builder_table_add@@Base>
   216e0:	cmp	r0, #0
   216e4:	beq	216f4 <__flatcc_fb_gen_c_json_printer@@Base+0x64c>
   216e8:	strb	r4, [r0]
   216ec:	mov	r0, #0
   216f0:	pop	{r4, pc}
   216f4:	mvn	r0, #0
   216f8:	pop	{r4, pc}
   216fc:	push	{r4, lr}
   21700:	mov	r4, r0
   21704:	bl	2cb2c <flatcc_builder_end_offset_vector@@Base>
   21708:	mov	r1, r0
   2170c:	mov	r0, r4
   21710:	pop	{r4, lr}
   21714:	b	21694 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   21718:	cmp	r0, #0
   2171c:	push	{r4, r5, r6, lr}
   21720:	moveq	r4, r0
   21724:	ldrne	r4, [r0, #-4]
   21728:	mov	r5, r2
   2172c:	cmp	r2, r4
   21730:	movcs	r2, r4
   21734:	bl	1418c <strncmp@plt>
   21738:	cmp	r0, #0
   2173c:	popne	{r4, r5, r6, pc}
   21740:	cmp	r5, r4
   21744:	bhi	21754 <__flatcc_fb_gen_c_json_printer@@Base+0x6ac>
   21748:	movcc	r0, #1
   2174c:	movcs	r0, #0
   21750:	pop	{r4, r5, r6, pc}
   21754:	mvn	r0, #0
   21758:	pop	{r4, r5, r6, pc}
   2175c:	mov	r3, #2
   21760:	push	{r4, lr}
   21764:	mov	r2, r3
   21768:	mov	r4, r1
   2176c:	mov	r1, #3
   21770:	bl	2d1ec <flatcc_builder_table_add@@Base>
   21774:	cmp	r0, #0
   21778:	strhne	r4, [r0]
   2177c:	movne	r0, #0
   21780:	mvneq	r0, #0
   21784:	pop	{r4, pc}
   21788:	cmp	r0, #0
   2178c:	add	r2, r0, r1, lsl #2
   21790:	beq	217a0 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
   21794:	ldr	r3, [r0, #-4]
   21798:	cmp	r1, r3
   2179c:	bcc	217b8 <__flatcc_fb_gen_c_json_printer@@Base+0x710>
   217a0:	push	{r4, lr}
   217a4:	mov	r2, #192	; 0xc0
   217a8:	ldr	r3, [pc, #20]	; 217c4 <__flatcc_fb_gen_c_json_printer@@Base+0x71c>
   217ac:	ldr	r1, [pc, #20]	; 217c8 <__flatcc_fb_gen_c_json_printer@@Base+0x720>
   217b0:	ldr	r0, [pc, #20]	; 217cc <__flatcc_fb_gen_c_json_printer@@Base+0x724>
   217b4:	bl	141a4 <__assert_fail@plt>
   217b8:	ldr	r0, [r0, r1, lsl #2]
   217bc:	add	r0, r2, r0
   217c0:	bx	lr
   217c4:	andeq	r7, r4, r8, ror #17
   217c8:	strdeq	r7, [r4], -r7	; <UNPREDICTABLE>
   217cc:	andeq	r7, r4, r5, asr sl
   217d0:	cmp	r0, #0
   217d4:	push	{r4, lr}
   217d8:	bne	217f0 <__flatcc_fb_gen_c_json_printer@@Base+0x748>
   217dc:	ldr	r3, [pc, #84]	; 21838 <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   217e0:	ldr	r1, [pc, #84]	; 2183c <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   217e4:	ldr	r0, [pc, #84]	; 21840 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   217e8:	mov	r2, #195	; 0xc3
   217ec:	bl	141a4 <__assert_fail@plt>
   217f0:	ldr	r3, [r0]
   217f4:	sub	r3, r0, r3
   217f8:	ldrh	r2, [r3]
   217fc:	cmp	r2, #5
   21800:	bls	21810 <__flatcc_fb_gen_c_json_printer@@Base+0x768>
   21804:	ldrh	r2, [r3, #4]
   21808:	cmp	r2, #0
   2180c:	bne	21824 <__flatcc_fb_gen_c_json_printer@@Base+0x77c>
   21810:	ldr	r3, [pc, #32]	; 21838 <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   21814:	mov	r2, #195	; 0xc3
   21818:	ldr	r1, [pc, #28]	; 2183c <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   2181c:	ldr	r0, [pc, #32]	; 21844 <__flatcc_fb_gen_c_json_printer@@Base+0x79c>
   21820:	b	217ec <__flatcc_fb_gen_c_json_printer@@Base+0x744>
   21824:	add	r3, r0, r2
   21828:	ldr	r0, [r0, r2]
   2182c:	add	r0, r0, #4
   21830:	add	r0, r3, r0
   21834:	pop	{r4, pc}
   21838:	andeq	r7, r4, r0, lsl #18
   2183c:	strdeq	r7, [r4], -r7	; <UNPREDICTABLE>
   21840:	andeq	r7, r4, ip, lsl #21
   21844:			; <UNDEFINED> instruction: 0x00047ab2
   21848:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2184c:	mov	r5, r0
   21850:	mov	r6, r1
   21854:	mov	r8, r2
   21858:	mov	r7, #0
   2185c:	lsl	r4, r6, #1
   21860:	cmp	r4, r8
   21864:	bls	2186c <__flatcc_fb_gen_c_json_printer@@Base+0x7c4>
   21868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2186c:	bcs	218b4 <__flatcc_fb_gen_c_json_printer@@Base+0x80c>
   21870:	mov	r1, r4
   21874:	mov	r0, r5
   21878:	bl	21788 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   2187c:	bl	217d0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   21880:	add	r9, r4, #1
   21884:	mov	r1, r9
   21888:	mov	sl, r0
   2188c:	mov	r0, r5
   21890:	bl	21788 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   21894:	bl	217d0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   21898:	subs	r1, r0, #0
   2189c:	moveq	r2, r7
   218a0:	ldrne	r2, [r1, #-4]
   218a4:	mov	r0, sl
   218a8:	bl	21718 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   218ac:	cmp	r0, #0
   218b0:	movlt	r4, r9
   218b4:	mov	r1, r6
   218b8:	mov	r0, r5
   218bc:	bl	21788 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   218c0:	bl	217d0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   218c4:	mov	r1, r4
   218c8:	mov	r9, r0
   218cc:	mov	r0, r5
   218d0:	bl	21788 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   218d4:	bl	217d0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   218d8:	subs	r1, r0, #0
   218dc:	moveq	r2, r7
   218e0:	ldrne	r2, [r1, #-4]
   218e4:	mov	r0, r9
   218e8:	bl	21718 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
   218ec:	cmp	r0, #0
   218f0:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   218f4:	sub	r3, r6, r4
   218f8:	ldr	r2, [r5, r6, lsl #2]
   218fc:	ldr	r1, [r5, r4, lsl #2]
   21900:	lsl	r3, r3, #2
   21904:	add	r2, r3, r2
   21908:	sub	r3, r1, r3
   2190c:	str	r3, [r5, r6, lsl #2]
   21910:	str	r2, [r5, r4, lsl #2]
   21914:	mov	r6, r4
   21918:	b	2185c <__flatcc_fb_gen_c_json_printer@@Base+0x7b4>
   2191c:	push	{r4, r5, r6, r7, r8, lr}
   21920:	mov	r6, r1
   21924:	mov	r1, #3
   21928:	mov	r4, r0
   2192c:	mov	r5, r2
   21930:	mov	r7, r3
   21934:	bl	2c22c <flatcc_builder_start_table@@Base>
   21938:	cmp	r0, #0
   2193c:	bne	21968 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   21940:	cmn	r7, #1
   21944:	beq	2197c <__flatcc_fb_gen_c_json_printer@@Base+0x8d4>
   21948:	mov	r3, #4
   2194c:	mov	r2, r3
   21950:	mov	r1, #2
   21954:	mov	r0, r4
   21958:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2195c:	cmp	r0, #0
   21960:	strne	r7, [r0]
   21964:	bne	2197c <__flatcc_fb_gen_c_json_printer@@Base+0x8d4>
   21968:	mov	r0, #0
   2196c:	pop	{r4, r5, r6, r7, r8, pc}
   21970:	mov	r0, r4
   21974:	pop	{r4, r5, r6, r7, r8, lr}
   21978:	b	2c868 <flatcc_builder_end_table@@Base>
   2197c:	cmp	r6, #0
   21980:	beq	219a4 <__flatcc_fb_gen_c_json_printer@@Base+0x8fc>
   21984:	mov	r3, #1
   21988:	mov	r2, r3
   2198c:	mov	r1, #0
   21990:	mov	r0, r4
   21994:	bl	2d1ec <flatcc_builder_table_add@@Base>
   21998:	cmp	r0, #0
   2199c:	strbne	r6, [r0]
   219a0:	beq	21968 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   219a4:	cmp	r5, #0
   219a8:	beq	219cc <__flatcc_fb_gen_c_json_printer@@Base+0x924>
   219ac:	mov	r3, #1
   219b0:	mov	r2, r3
   219b4:	mov	r1, r3
   219b8:	mov	r0, r4
   219bc:	bl	2d1ec <flatcc_builder_table_add@@Base>
   219c0:	cmp	r0, #0
   219c4:	strbne	r5, [r0]
   219c8:	beq	21968 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   219cc:	mov	r2, #0
   219d0:	ldr	r1, [pc, #32]	; 219f8 <__flatcc_fb_gen_c_json_printer@@Base+0x950>
   219d4:	mov	r0, r4
   219d8:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   219dc:	cmp	r0, #0
   219e0:	bne	21970 <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   219e4:	ldr	r3, [pc, #16]	; 219fc <__flatcc_fb_gen_c_json_printer@@Base+0x954>
   219e8:	mov	r2, #23
   219ec:	ldr	r1, [pc, #12]	; 21a00 <__flatcc_fb_gen_c_json_printer@@Base+0x958>
   219f0:	ldr	r0, [pc, #12]	; 21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x95c>
   219f4:	bl	141a4 <__assert_fail@plt>
   219f8:	andeq	r7, r4, sl, lsr #18
   219fc:	andeq	r7, r4, r6, lsl r9
   21a00:	ldrdeq	r7, [r4], -r3
   21a04:	andeq	r7, r4, r2, lsr fp
   21a08:	sub	r2, r2, #2
   21a0c:	cmp	r2, #13
   21a10:	ldrls	pc, [pc, r2, lsl #2]
   21a14:	b	21b58 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
   21a18:	andeq	r1, r2, r0, lsl #22
   21a1c:	andeq	r1, r2, r8, asr fp
   21a20:	andeq	r1, r2, r8, asr fp
   21a24:	andeq	r1, r2, r8, asr fp
   21a28:	andeq	r1, r2, r8, asr fp
   21a2c:	andeq	r1, r2, r0, lsr #21
   21a30:	andeq	r1, r2, r0, asr sl
   21a34:			; <UNDEFINED> instruction: 0x00021ab0
   21a38:	andeq	r1, r2, r8, asr fp
   21a3c:	andeq	r1, r2, r8, asr fp
   21a40:	andeq	r1, r2, r8, asr fp
   21a44:	andeq	r1, r2, r8, asr fp
   21a48:	andeq	r1, r2, r0, lsl fp
   21a4c:	andeq	r1, r2, r4, asr #21
   21a50:	mov	r2, #0
   21a54:	mov	ip, r1
   21a58:	mov	r1, r2
   21a5c:	mvn	r3, #0
   21a60:	sub	ip, ip, #1
   21a64:	cmp	ip, #10
   21a68:	bhi	21b70 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   21a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   21a70:	cmp	r1, #0
   21a74:	ldr	lr, [pc, #280]	; 21b94 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   21a78:	add	ip, lr, ip
   21a7c:	ldrsb	ip, [ip, #68]	; 0x44
   21a80:	moveq	r1, ip
   21a84:	beq	21a98 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   21a88:	cmp	r1, #14
   21a8c:	bne	21a98 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
   21a90:	cmp	r2, #0
   21a94:	moveq	r2, ip
   21a98:	pop	{lr}		; (ldr lr, [sp], #4)
   21a9c:	b	2191c <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   21aa0:	mov	ip, r1
   21aa4:	mov	r2, #0
   21aa8:	mov	r1, #14
   21aac:	b	21a5c <__flatcc_fb_gen_c_json_printer@@Base+0x9b4>
   21ab0:	mov	r2, #13
   21ab4:	mov	r1, #14
   21ab8:	mvn	r3, #0
   21abc:	mov	ip, #0
   21ac0:	b	21a60 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21ac4:	ldrh	r2, [r1, #8]
   21ac8:	ldr	r3, [r1, #124]	; 0x7c
   21acc:	cmp	r2, #1
   21ad0:	bls	21af4 <__flatcc_fb_gen_c_json_printer@@Base+0xa4c>
   21ad4:	cmp	r2, #3
   21ad8:	moveq	r2, #0
   21adc:	ldreq	ip, [r1, #40]	; 0x28
   21ae0:	moveq	r1, #14
   21ae4:	beq	21a60 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21ae8:	mov	r2, #0
   21aec:	mov	r1, r2
   21af0:	b	21b40 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   21af4:	mov	r2, #15
   21af8:	mov	r1, #14
   21afc:	b	21abc <__flatcc_fb_gen_c_json_printer@@Base+0xa14>
   21b00:	mov	r2, #0
   21b04:	mov	r1, #13
   21b08:	mvn	r3, #0
   21b0c:	b	21b40 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   21b10:	ldrh	r2, [r1, #8]
   21b14:	ldr	r3, [r1, #124]	; 0x7c
   21b18:	cmp	r2, #4
   21b1c:	ldrls	pc, [pc, r2, lsl #2]
   21b20:	b	21b58 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
   21b24:	andeq	r1, r2, r4, ror #22
   21b28:	andeq	r1, r2, r4, ror #22
   21b2c:	andeq	r1, r2, r8, asr fp
   21b30:	andeq	r1, r2, r8, asr #22
   21b34:	andeq	r1, r2, r8, lsr fp
   21b38:	mov	r2, #0
   21b3c:	mov	r1, #16
   21b40:	mov	ip, r2
   21b44:	b	21a60 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21b48:	mov	r2, #0
   21b4c:	ldr	ip, [r1, #40]	; 0x28
   21b50:	mov	r1, r2
   21b54:	b	21a60 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   21b58:	mov	r2, #0
   21b5c:	mov	r1, r2
   21b60:	b	21b08 <__flatcc_fb_gen_c_json_printer@@Base+0xa60>
   21b64:	mov	r2, #0
   21b68:	mov	r1, #15
   21b6c:	b	21b40 <__flatcc_fb_gen_c_json_printer@@Base+0xa98>
   21b70:	mov	ip, #0
   21b74:	cmp	r1, #0
   21b78:	moveq	r1, ip
   21b7c:	beq	21a9c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21b80:	cmp	r1, #14
   21b84:	bne	21a9c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21b88:	cmp	r2, #0
   21b8c:	moveq	r2, ip
   21b90:	b	21a9c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   21b94:	andeq	r7, r4, r8, ror #17
   21b98:	push	{r4, lr}
   21b9c:	mov	r2, #2
   21ba0:	ldr	r1, [pc, #60]	; 21be4 <__flatcc_fb_gen_c_json_printer@@Base+0xb3c>
   21ba4:	mov	r4, r0
   21ba8:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   21bac:	cmp	r0, #0
   21bb0:	bne	21bc8 <__flatcc_fb_gen_c_json_printer@@Base+0xb20>
   21bb4:	ldr	r3, [pc, #44]	; 21be8 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
   21bb8:	mov	r2, #29
   21bbc:	ldr	r1, [pc, #40]	; 21bec <__flatcc_fb_gen_c_json_printer@@Base+0xb44>
   21bc0:	ldr	r0, [pc, #40]	; 21bf0 <__flatcc_fb_gen_c_json_printer@@Base+0xb48>
   21bc4:	bl	141a4 <__assert_fail@plt>
   21bc8:	mov	r0, r4
   21bcc:	bl	2c868 <flatcc_builder_end_table@@Base>
   21bd0:	subs	r1, r0, #0
   21bd4:	popeq	{r4, pc}
   21bd8:	mov	r0, r4
   21bdc:	pop	{r4, lr}
   21be0:	b	2bd9c <flatcc_builder_offset_vector_push@@Base>
   21be4:	andeq	r7, r4, r8, lsr r9
   21be8:	andeq	r7, r4, lr, lsr r9
   21bec:	ldrdeq	r7, [r4], -r3
   21bf0:			; <UNDEFINED> instruction: 0x00047bbf
   21bf4:	ldrh	r3, [r1, #8]
   21bf8:	cmp	r3, #4
   21bfc:	bxhi	lr
   21c00:	push	{r4, r5, r6, lr}
   21c04:	mov	r4, r0
   21c08:	ldr	r0, [r0, #40]	; 0x28
   21c0c:	mov	r5, r1
   21c10:	add	r0, r0, #172	; 0xac
   21c14:	ldr	r1, [r1, #16]
   21c18:	bl	233f8 <ptr_set_find_item@@Base>
   21c1c:	cmp	r0, #0
   21c20:	bne	21c60 <__flatcc_fb_gen_c_json_printer@@Base+0xbb8>
   21c24:	pop	{r4, r5, r6, pc}
   21c28:	ldr	r1, [r2, #4]
   21c2c:	ldr	r2, [r2]
   21c30:	ldr	r1, [r1, #4]
   21c34:	add	r1, r1, #1
   21c38:	add	r3, r3, r1
   21c3c:	b	21c78 <__flatcc_fb_gen_c_json_printer@@Base+0xbd0>
   21c40:	ldr	r3, [r4, #4]
   21c44:	add	r3, r3, #1
   21c48:	str	r3, [r4, #4]
   21c4c:	pop	{r4, r5, r6, pc}
   21c50:	ldr	r3, [r4, #8]
   21c54:	add	r3, r3, #1
   21c58:	str	r3, [r4, #8]
   21c5c:	pop	{r4, r5, r6, pc}
   21c60:	ldr	r3, [r4]
   21c64:	cmp	r3, #0
   21c68:	beq	21c80 <__flatcc_fb_gen_c_json_printer@@Base+0xbd8>
   21c6c:	ldr	r3, [r5, #12]
   21c70:	ldr	r2, [r3]
   21c74:	mov	r3, #0
   21c78:	cmp	r2, #0
   21c7c:	bne	21c28 <__flatcc_fb_gen_c_json_printer@@Base+0xb80>
   21c80:	ldr	r2, [r5, #4]
   21c84:	ldr	r1, [r4, #12]
   21c88:	ldr	r2, [r2, #4]
   21c8c:	add	r2, r2, r1
   21c90:	add	r2, r2, #1
   21c94:	add	r3, r2, r3
   21c98:	str	r3, [r4, #12]
   21c9c:	ldrh	r3, [r5, #8]
   21ca0:	cmp	r3, #4
   21ca4:	ldrls	pc, [pc, r3, lsl #2]
   21ca8:	b	21cc0 <__flatcc_fb_gen_c_json_printer@@Base+0xc18>
   21cac:	andeq	r1, r2, r0, asr #24
   21cb0:	andeq	r1, r2, r0, asr #24
   21cb4:	andeq	r1, r2, r0, asr #25
   21cb8:	andeq	r1, r2, r0, asr ip
   21cbc:	andeq	r1, r2, r0, asr ip
   21cc0:	pop	{r4, r5, r6, pc}
   21cc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21cc8:	vpush	{d8-d9}
   21ccc:	ldr	r8, [r2, #60]	; 0x3c
   21cd0:	ldr	r5, [r1, #184]	; 0xb8
   21cd4:	mov	r4, r0
   21cd8:	sub	sp, sp, #92	; 0x5c
   21cdc:	mov	r7, r1
   21ce0:	str	r2, [sp, #4]
   21ce4:	mov	r2, #44	; 0x2c
   21ce8:	mov	r1, #0
   21cec:	add	r0, sp, r2
   21cf0:	bl	140fc <memset@plt>
   21cf4:	ldr	r3, [sp, #4]
   21cf8:	add	r2, sp, #44	; 0x2c
   21cfc:	ldr	r1, [pc, #1444]	; 222a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1200>
   21d00:	mov	r0, r8
   21d04:	str	r3, [sp, #84]	; 0x54
   21d08:	str	r5, [sp, #44]	; 0x2c
   21d0c:	bl	24024 <fb_scope_table_visit@@Base>
   21d10:	ldr	fp, [sp, #48]	; 0x30
   21d14:	mov	r1, #8
   21d18:	mov	r0, fp
   21d1c:	bl	13fe8 <calloc@plt>
   21d20:	ldr	sl, [sp, #52]	; 0x34
   21d24:	mov	r1, #8
   21d28:	mov	r6, r0
   21d2c:	str	r0, [sp, #60]	; 0x3c
   21d30:	mov	r0, sl
   21d34:	bl	13fe8 <calloc@plt>
   21d38:	ldr	r9, [sp, #56]	; 0x38
   21d3c:	mov	r5, r0
   21d40:	str	r0, [sp, #64]	; 0x40
   21d44:	mov	r0, r9
   21d48:	bl	14090 <malloc@plt>
   21d4c:	cmp	fp, #0
   21d50:	str	r6, [sp, #72]	; 0x48
   21d54:	clz	r6, r6
   21d58:	lsr	r6, r6, #5
   21d5c:	movle	r6, #0
   21d60:	cmp	r6, #0
   21d64:	str	r5, [sp, #76]	; 0x4c
   21d68:	str	r0, [sp, #68]	; 0x44
   21d6c:	str	r0, [sp, #80]	; 0x50
   21d70:	bne	21da8 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   21d74:	cmp	sl, #0
   21d78:	clz	r5, r5
   21d7c:	lsr	r5, r5, #5
   21d80:	movle	r5, #0
   21d84:	cmp	r5, #0
   21d88:	bne	21da8 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   21d8c:	cmp	r9, #0
   21d90:	clz	r3, r0
   21d94:	lsr	r3, r3, #5
   21d98:	moveq	r3, #0
   21d9c:	cmp	r3, #0
   21da0:	str	r3, [sp, #16]
   21da4:	beq	21dc0 <__flatcc_fb_gen_c_json_printer@@Base+0xd18>
   21da8:	add	r0, sp, #44	; 0x2c
   21dac:	bl	21498 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   21db0:	mvn	r0, #0
   21db4:	add	sp, sp, #92	; 0x5c
   21db8:	vpop	{d8-d9}
   21dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21dc0:	add	r2, sp, #44	; 0x2c
   21dc4:	ldr	r1, [pc, #1248]	; 222ac <__flatcc_fb_gen_c_json_printer@@Base+0x1204>
   21dc8:	mov	r0, r8
   21dcc:	bl	24024 <fb_scope_table_visit@@Base>
   21dd0:	ldr	r1, [sp, #48]	; 0x30
   21dd4:	ldr	r0, [sp, #60]	; 0x3c
   21dd8:	bl	2161c <__flatcc_fb_gen_c_json_printer@@Base+0x574>
   21ddc:	ldr	r0, [sp, #64]	; 0x40
   21de0:	ldr	r1, [sp, #52]	; 0x34
   21de4:	bl	2161c <__flatcc_fb_gen_c_json_printer@@Base+0x574>
   21de8:	ldr	r0, [sp, #48]	; 0x30
   21dec:	cmp	r0, #0
   21df0:	ble	21f98 <__flatcc_fb_gen_c_json_printer@@Base+0xef0>
   21df4:	lsl	r0, r0, #2
   21df8:	bl	14090 <malloc@plt>
   21dfc:	subs	r3, r0, #0
   21e00:	str	r3, [sp, #8]
   21e04:	beq	21da8 <__flatcc_fb_gen_c_json_printer@@Base+0xd00>
   21e08:	ldr	r3, [r7, #188]	; 0xbc
   21e0c:	mov	r2, #0
   21e10:	cmp	r3, #0
   21e14:	movne	r3, #2
   21e18:	ldr	r1, [pc, #1168]	; 222b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1208>
   21e1c:	mov	r0, r4
   21e20:	bl	2ba28 <flatcc_builder_start_buffer@@Base>
   21e24:	cmp	r0, #0
   21e28:	bne	21e38 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
   21e2c:	mov	r1, #5
   21e30:	mov	r0, r4
   21e34:	bl	2c22c <flatcc_builder_start_table@@Base>
   21e38:	ldr	r3, [sp, #4]
   21e3c:	ldrh	r5, [r3, #16]
   21e40:	cmp	r5, #2
   21e44:	bne	21e74 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   21e48:	ldr	r2, [r3, #12]
   21e4c:	ldr	r1, [r3, #8]
   21e50:	mov	r0, r4
   21e54:	bl	2d05c <flatcc_builder_create_string@@Base>
   21e58:	subs	r6, r0, #0
   21e5c:	beq	21e74 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   21e60:	mov	r1, r5
   21e64:	mov	r0, r4
   21e68:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   21e6c:	cmp	r0, #0
   21e70:	strne	r6, [r0]
   21e74:	ldr	r3, [sp, #4]
   21e78:	ldrh	r3, [r3, #32]
   21e7c:	cmp	r3, #2
   21e80:	bne	21eb4 <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
   21e84:	ldr	r3, [sp, #4]
   21e88:	mov	r0, r4
   21e8c:	ldr	r2, [r3, #28]
   21e90:	ldr	r1, [r3, #24]
   21e94:	bl	2d05c <flatcc_builder_create_string@@Base>
   21e98:	subs	r5, r0, #0
   21e9c:	beq	21eb4 <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
   21ea0:	mov	r1, #3
   21ea4:	mov	r0, r4
   21ea8:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   21eac:	cmp	r0, #0
   21eb0:	strne	r5, [r0]
   21eb4:	ldr	r8, [sp, #60]	; 0x3c
   21eb8:	vldr	d9, [pc, #992]	; 222a0 <__flatcc_fb_gen_c_json_printer@@Base+0x11f8>
   21ebc:	ldr	r3, [sp, #48]	; 0x30
   21ec0:	add	r8, r8, #4
   21ec4:	mov	sl, #0
   21ec8:	str	r3, [sp, #24]
   21ecc:	ldr	r3, [sp, #24]
   21ed0:	cmp	r3, sl
   21ed4:	bgt	21fa4 <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   21ed8:	mov	r2, r3
   21edc:	ldr	r1, [sp, #8]
   21ee0:	mov	r0, r4
   21ee4:	bl	2cb8c <flatcc_builder_create_offset_vector@@Base>
   21ee8:	mov	sl, #0
   21eec:	mov	fp, #3
   21ef0:	mov	r1, r0
   21ef4:	mov	r0, r4
   21ef8:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   21efc:	ldr	r3, [sp, #52]	; 0x34
   21f00:	mov	r0, r4
   21f04:	ldr	r6, [sp, #64]	; 0x40
   21f08:	str	r3, [sp, #16]
   21f0c:	bl	2c168 <flatcc_builder_start_offset_vector@@Base>
   21f10:	add	r6, r6, #4
   21f14:	ldr	r3, [sp, #16]
   21f18:	cmp	r3, sl
   21f1c:	bgt	2242c <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   21f20:	mov	r0, r4
   21f24:	bl	216fc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   21f28:	ldr	r3, [sp, #4]
   21f2c:	ldr	r3, [r3, #52]	; 0x34
   21f30:	cmp	r3, #0
   21f34:	beq	21f6c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21f38:	ldrh	r2, [r3, #8]
   21f3c:	cmp	r2, #0
   21f40:	bne	21f6c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21f44:	ldr	r3, [r3, #124]	; 0x7c
   21f48:	ldr	r2, [sp, #8]
   21f4c:	ldr	r5, [r2, r3, lsl #2]
   21f50:	cmp	r5, #0
   21f54:	beq	21f6c <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   21f58:	mov	r1, #4
   21f5c:	mov	r0, r4
   21f60:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   21f64:	cmp	r0, #0
   21f68:	strne	r5, [r0]
   21f6c:	mov	r2, #2
   21f70:	ldr	r1, [pc, #828]	; 222b4 <__flatcc_fb_gen_c_json_printer@@Base+0x120c>
   21f74:	mov	r0, r4
   21f78:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   21f7c:	cmp	r0, #0
   21f80:	bne	225f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1550>
   21f84:	ldr	r3, [pc, #812]	; 222b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1210>
   21f88:	mov	r2, #33	; 0x21
   21f8c:	ldr	r1, [pc, #848]	; 222e4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   21f90:	ldr	r0, [pc, #804]	; 222bc <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   21f94:	b	2208c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   21f98:	ldr	r3, [sp, #16]
   21f9c:	str	r3, [sp, #8]
   21fa0:	b	21e08 <__flatcc_fb_gen_c_json_printer@@Base+0xd60>
   21fa4:	mov	r1, #5
   21fa8:	mov	r0, r4
   21fac:	ldr	r9, [r8, #-4]
   21fb0:	bl	2c22c <flatcc_builder_start_table@@Base>
   21fb4:	ldr	r1, [r8]
   21fb8:	mov	r0, r4
   21fbc:	bl	2d0f4 <flatcc_builder_create_string_str@@Base>
   21fc0:	mov	r1, r0
   21fc4:	mov	r0, r4
   21fc8:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   21fcc:	mov	r0, r4
   21fd0:	bl	2c168 <flatcc_builder_start_offset_vector@@Base>
   21fd4:	ldr	r5, [r9, #20]
   21fd8:	mov	r3, #0
   21fdc:	str	r3, [sp, #12]
   21fe0:	cmp	r5, #0
   21fe4:	bne	22090 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   21fe8:	mov	r0, r4
   21fec:	bl	216fc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   21ff0:	ldrh	r3, [r9, #8]
   21ff4:	cmp	r3, #1
   21ff8:	moveq	r6, #1
   21ffc:	movne	r6, #0
   22000:	bne	2202c <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   22004:	ldr	r5, [r9, #112]	; 0x70
   22008:	cmp	r5, #0
   2200c:	beq	2202c <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   22010:	mov	r3, #4
   22014:	mov	r2, r3
   22018:	mov	r1, r3
   2201c:	mov	r0, r4
   22020:	bl	2d1ec <flatcc_builder_table_add@@Base>
   22024:	cmp	r0, #0
   22028:	strne	r5, [r0]
   2202c:	mov	r1, r6
   22030:	mov	r0, r4
   22034:	bl	216c4 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   22038:	ldrh	r5, [r9, #104]	; 0x68
   2203c:	cmp	r5, #0
   22040:	beq	22060 <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   22044:	mov	r3, #4
   22048:	mov	r2, r3
   2204c:	mov	r1, #3
   22050:	mov	r0, r4
   22054:	bl	2d1ec <flatcc_builder_table_add@@Base>
   22058:	cmp	r0, #0
   2205c:	strne	r5, [r0]
   22060:	mov	r2, #2
   22064:	ldr	r1, [pc, #596]	; 222c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1218>
   22068:	mov	r0, r4
   2206c:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   22070:	add	r8, r8, #8
   22074:	cmp	r0, #0
   22078:	bne	22414 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   2207c:	ldr	r3, [pc, #576]	; 222c4 <__flatcc_fb_gen_c_json_printer@@Base+0x121c>
   22080:	ldr	r1, [pc, #604]	; 222e4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   22084:	ldr	r0, [pc, #572]	; 222c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
   22088:	mov	r2, #31
   2208c:	bl	141a4 <__assert_fail@plt>
   22090:	ldr	r3, [sp, #12]
   22094:	cmp	r3, #0
   22098:	ldrh	r3, [r5, #72]	; 0x48
   2209c:	ldrne	fp, [sp, #16]
   220a0:	str	r3, [sp, #20]
   220a4:	lsreq	fp, r3, #7
   220a8:	andeq	fp, fp, #1
   220ac:	uxtb	r3, fp
   220b0:	str	r3, [sp, #36]	; 0x24
   220b4:	ldr	r3, [sp, #20]
   220b8:	ands	r3, r3, #4
   220bc:	str	r3, [sp, #28]
   220c0:	movne	r3, #1
   220c4:	moveq	r3, #0
   220c8:	str	r3, [sp, #32]
   220cc:	ldrh	r3, [r5, #24]
   220d0:	cmp	r3, #14
   220d4:	bne	221d4 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   220d8:	ldr	r3, [r5, #16]
   220dc:	ldrh	r3, [r3, #8]
   220e0:	cmp	r3, #4
   220e4:	bne	221d4 <__flatcc_fb_gen_c_json_printer@@Base+0x112c>
   220e8:	mov	r1, #9
   220ec:	mov	r0, r4
   220f0:	bl	2c22c <flatcc_builder_start_table@@Base>
   220f4:	mov	r0, r4
   220f8:	bl	2c1b0 <flatcc_builder_start_string@@Base>
   220fc:	ldr	r3, [r5, #4]
   22100:	mov	r0, r4
   22104:	ldm	r3, {r1, r2}
   22108:	bl	2bee0 <flatcc_builder_append_string@@Base>
   2210c:	mov	r2, #5
   22110:	ldr	r1, [pc, #436]	; 222cc <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
   22114:	mov	r0, r4
   22118:	bl	2bee0 <flatcc_builder_append_string@@Base>
   2211c:	mov	r0, r4
   22120:	bl	2d154 <flatcc_builder_end_string@@Base>
   22124:	mov	r1, r0
   22128:	mov	r0, r4
   2212c:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   22130:	mvn	r3, #0
   22134:	mov	r2, #0
   22138:	mov	r1, #1
   2213c:	mov	r0, r4
   22140:	bl	2191c <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   22144:	mov	r1, r0
   22148:	mov	r0, r4
   2214c:	bl	21694 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   22150:	ldrh	r1, [r5, #96]	; 0x60
   22154:	add	r1, r1, #1
   22158:	lsl	r1, r1, #1
   2215c:	uxth	r1, r1
   22160:	cmp	r1, #0
   22164:	beq	22170 <__flatcc_fb_gen_c_json_printer@@Base+0x10c8>
   22168:	mov	r0, r4
   2216c:	bl	2175c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   22170:	ldrh	r6, [r5, #96]	; 0x60
   22174:	sub	r6, r6, #1
   22178:	uxth	r6, r6
   2217c:	cmp	r6, #0
   22180:	beq	221a0 <__flatcc_fb_gen_c_json_printer@@Base+0x10f8>
   22184:	mov	r3, #2
   22188:	mov	r2, r3
   2218c:	mov	r1, r3
   22190:	mov	r0, r4
   22194:	bl	2d1ec <flatcc_builder_table_add@@Base>
   22198:	cmp	r0, #0
   2219c:	strhne	r6, [r0]
   221a0:	ldr	r3, [sp, #28]
   221a4:	cmp	r3, #0
   221a8:	beq	221cc <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   221ac:	mov	r3, #1
   221b0:	mov	r2, r3
   221b4:	mov	r1, #6
   221b8:	mov	r0, r4
   221bc:	bl	2d1ec <flatcc_builder_table_add@@Base>
   221c0:	cmp	r0, #0
   221c4:	ldrbne	r3, [sp, #32]
   221c8:	strbne	r3, [r0]
   221cc:	mov	r0, r4
   221d0:	bl	21b98 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   221d4:	mov	r1, #9
   221d8:	mov	r0, r4
   221dc:	bl	2c22c <flatcc_builder_start_table@@Base>
   221e0:	ldr	r3, [r5, #4]
   221e4:	mov	r0, r4
   221e8:	ldm	r3, {r1, r2}
   221ec:	bl	2d05c <flatcc_builder_create_string@@Base>
   221f0:	mov	r1, r0
   221f4:	mov	r0, r4
   221f8:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   221fc:	ldrh	r2, [r5, #24]
   22200:	ldr	r1, [r5, #16]
   22204:	mov	r0, r4
   22208:	bl	21a08 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   2220c:	mov	r1, r0
   22210:	mov	r0, r4
   22214:	bl	21694 <__flatcc_fb_gen_c_json_printer@@Base+0x5ec>
   22218:	ldrh	r3, [r9, #8]
   2221c:	cmp	r3, #0
   22220:	beq	22278 <__flatcc_fb_gen_c_json_printer@@Base+0x11d0>
   22224:	cmp	r3, #1
   22228:	beq	223fc <__flatcc_fb_gen_c_json_printer@@Base+0x1354>
   2222c:	ldr	r3, [sp, #28]
   22230:	cmp	r3, #0
   22234:	beq	22258 <__flatcc_fb_gen_c_json_printer@@Base+0x11b0>
   22238:	mov	r3, #1
   2223c:	mov	r2, r3
   22240:	mov	r1, #6
   22244:	mov	r0, r4
   22248:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2224c:	cmp	r0, #0
   22250:	ldrbne	r3, [sp, #32]
   22254:	strbne	r3, [r0]
   22258:	mov	r0, r4
   2225c:	bl	21b98 <__flatcc_fb_gen_c_json_printer@@Base+0xaf0>
   22260:	ldr	r3, [sp, #12]
   22264:	ldr	r2, [sp, #36]	; 0x24
   22268:	ldr	r5, [r5]
   2226c:	orr	r3, r3, r2
   22270:	str	r3, [sp, #12]
   22274:	b	21fe0 <__flatcc_fb_gen_c_json_printer@@Base+0xf38>
   22278:	ldrh	r3, [r5, #56]	; 0x38
   2227c:	sub	r3, r3, #3
   22280:	cmp	r3, #3
   22284:	ldrls	pc, [pc, r3, lsl #2]
   22288:	b	223f4 <__flatcc_fb_gen_c_json_printer@@Base+0x134c>
   2228c:	andeq	r2, r2, r4, asr #7
   22290:	andeq	r2, r2, ip, ror #5
   22294:	andeq	r2, r2, ip, ror #5
   22298:			; <UNDEFINED> instruction: 0x000223b8
   2229c:	nop			; (mov r0, r0)
	...
   222a8:	strdeq	r1, [r2], -ip
   222ac:	andeq	r1, r2, r4, ror #9
   222b0:	andeq	r7, r4, pc, asr #24
   222b4:	andeq	r7, r4, r8, lsr #19
   222b8:	andeq	r7, r4, lr, lsr #19
   222bc:	andeq	r7, r4, sl, lsl #28
   222c0:	andeq	r7, r4, r4, asr r9
   222c4:	andeq	r7, r4, sl, asr r9
   222c8:	andeq	r7, r4, r4, asr ip
   222cc:	andeq	r2, r3, fp, asr #7
   222d0:	andeq	r7, r4, ip, lsl #19
   222d4:	muleq	r4, r4, r9
   222d8:	andeq	r7, r4, sp, ror sp
   222dc:	andeq	r7, r4, r0, ror r9
   222e0:	andeq	r7, r4, r4, ror r9
   222e4:	ldrdeq	r7, [r4], -r3
   222e8:	andeq	r7, r4, r7, ror #25
   222ec:	ldrd	r6, [r5, #48]	; 0x30
   222f0:	orrs	r3, r6, r7
   222f4:	beq	22314 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   222f8:	mov	r3, #8
   222fc:	mov	r2, r3
   22300:	mov	r1, #4
   22304:	mov	r0, r4
   22308:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2230c:	cmp	r0, #0
   22310:	strdne	r6, [r0]
   22314:	ldrh	r6, [r5, #96]	; 0x60
   22318:	cmp	r6, #0
   2231c:	moveq	r1, #4
   22320:	beq	22358 <__flatcc_fb_gen_c_json_printer@@Base+0x12b0>
   22324:	mov	r3, #2
   22328:	mov	r1, r3
   2232c:	mov	r2, r3
   22330:	mov	r0, r4
   22334:	bl	2d1ec <flatcc_builder_table_add@@Base>
   22338:	ldrh	r1, [r5, #96]	; 0x60
   2233c:	add	r1, r1, #2
   22340:	lsl	r1, r1, #1
   22344:	uxth	r1, r1
   22348:	cmp	r0, #0
   2234c:	strhne	r6, [r0]
   22350:	cmp	r1, #0
   22354:	beq	22360 <__flatcc_fb_gen_c_json_printer@@Base+0x12b8>
   22358:	mov	r0, r4
   2235c:	bl	2175c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   22360:	cmp	fp, #0
   22364:	beq	22388 <__flatcc_fb_gen_c_json_printer@@Base+0x12e0>
   22368:	mov	r3, #1
   2236c:	mov	r2, r3
   22370:	mov	r1, #8
   22374:	mov	r0, r4
   22378:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2237c:	cmp	r0, #0
   22380:	movne	r3, #1
   22384:	strbne	r3, [r0]
   22388:	ldr	r3, [sp, #20]
   2238c:	tst	r3, #256	; 0x100
   22390:	beq	2222c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   22394:	mov	r3, #1
   22398:	mov	r2, r3
   2239c:	mov	r1, #7
   223a0:	mov	r0, r4
   223a4:	bl	2d1ec <flatcc_builder_table_add@@Base>
   223a8:	cmp	r0, #0
   223ac:	movne	r3, #1
   223b0:	strbne	r3, [r0]
   223b4:	b	2222c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   223b8:	ldrb	r6, [r5, #48]	; 0x30
   223bc:	mov	r7, #0
   223c0:	b	222f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1248>
   223c4:	vldr	d8, [r5, #48]	; 0x30
   223c8:	vcmp.f64	d8, d9
   223cc:	vmrs	APSR_nzcv, fpscr
   223d0:	beq	22314 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   223d4:	mov	r3, #8
   223d8:	mov	r2, r3
   223dc:	mov	r1, #5
   223e0:	mov	r0, r4
   223e4:	bl	2d1ec <flatcc_builder_table_add@@Base>
   223e8:	cmp	r0, #0
   223ec:	vstrne	d8, [r0]
   223f0:	b	22314 <__flatcc_fb_gen_c_json_printer@@Base+0x126c>
   223f4:	vmov.f64	d8, d9
   223f8:	b	223c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1320>
   223fc:	ldrh	r1, [r5, #80]	; 0x50
   22400:	cmp	r1, #0
   22404:	beq	2222c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   22408:	mov	r0, r4
   2240c:	bl	2175c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   22410:	b	2222c <__flatcc_fb_gen_c_json_printer@@Base+0x1184>
   22414:	mov	r0, r4
   22418:	bl	2c868 <flatcc_builder_end_table@@Base>
   2241c:	ldr	r3, [sp, #8]
   22420:	str	r0, [r3, sl, lsl #2]
   22424:	add	sl, sl, #1
   22428:	b	21ecc <__flatcc_fb_gen_c_json_printer@@Base+0xe24>
   2242c:	ldr	r7, [r6, #-4]
   22430:	mov	r1, #4
   22434:	mov	r0, r4
   22438:	ldrh	r8, [r7, #8]
   2243c:	sub	r3, r8, #4
   22440:	clz	r3, r3
   22444:	lsr	r3, r3, #5
   22448:	str	r3, [sp, #20]
   2244c:	bl	2c22c <flatcc_builder_start_table@@Base>
   22450:	ldr	r1, [r6]
   22454:	mov	r0, r4
   22458:	bl	2d0f4 <flatcc_builder_create_string_str@@Base>
   2245c:	mov	r1, r0
   22460:	mov	r0, r4
   22464:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   22468:	mov	r0, r4
   2246c:	bl	2c168 <flatcc_builder_start_offset_vector@@Base>
   22470:	ldr	r5, [r7, #20]
   22474:	ldr	r3, [sp, #8]
   22478:	cmp	r8, #4
   2247c:	movne	r3, #0
   22480:	str	r3, [sp, #12]
   22484:	cmp	r5, #0
   22488:	bne	224f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   2248c:	mov	r0, r4
   22490:	bl	216fc <__flatcc_fb_gen_c_json_printer@@Base+0x654>
   22494:	ldr	r1, [sp, #20]
   22498:	mov	r0, r4
   2249c:	bl	216c4 <__flatcc_fb_gen_c_json_printer@@Base+0x61c>
   224a0:	ldrh	r2, [r7, #48]	; 0x30
   224a4:	ldr	r1, [r7, #40]	; 0x28
   224a8:	mov	r0, r4
   224ac:	bl	21a08 <__flatcc_fb_gen_c_json_printer@@Base+0x960>
   224b0:	subs	r5, r0, #0
   224b4:	beq	224cc <__flatcc_fb_gen_c_json_printer@@Base+0x1424>
   224b8:	mov	r1, fp
   224bc:	mov	r0, r4
   224c0:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   224c4:	cmp	r0, #0
   224c8:	strne	r5, [r0]
   224cc:	mov	r2, fp
   224d0:	ldr	r1, [pc, #-520]	; 222d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1228>
   224d4:	mov	r0, r4
   224d8:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   224dc:	cmp	r0, #0
   224e0:	bne	225d4 <__flatcc_fb_gen_c_json_printer@@Base+0x152c>
   224e4:	ldr	r3, [pc, #-536]	; 222d4 <__flatcc_fb_gen_c_json_printer@@Base+0x122c>
   224e8:	mov	r2, #27
   224ec:	ldr	r1, [pc, #-528]	; 222e4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   224f0:	ldr	r0, [pc, #-544]	; 222d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
   224f4:	b	2208c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   224f8:	mov	r1, fp
   224fc:	mov	r0, r4
   22500:	bl	2c22c <flatcc_builder_start_table@@Base>
   22504:	ldr	r3, [r5, #4]
   22508:	mov	r0, r4
   2250c:	ldm	r3, {r1, r2}
   22510:	bl	2d05c <flatcc_builder_create_string@@Base>
   22514:	mov	r1, r0
   22518:	mov	r0, r4
   2251c:	bl	21664 <__flatcc_fb_gen_c_json_printer@@Base+0x5bc>
   22520:	ldr	r3, [sp, #12]
   22524:	cmp	r3, #0
   22528:	beq	22564 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   2252c:	ldrh	r3, [r5, #24]
   22530:	cmp	r3, #14
   22534:	bne	22564 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   22538:	ldr	r3, [r5, #16]
   2253c:	ldr	r2, [sp, #12]
   22540:	ldr	r3, [r3, #124]	; 0x7c
   22544:	ldr	r8, [r2, r3, lsl #2]
   22548:	cmp	r8, #0
   2254c:	beq	22564 <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   22550:	mov	r1, #2
   22554:	mov	r0, r4
   22558:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   2255c:	cmp	r0, #0
   22560:	strne	r8, [r0]
   22564:	ldrd	r8, [r5, #48]	; 0x30
   22568:	orrs	r3, r8, r9
   2256c:	beq	2258c <__flatcc_fb_gen_c_json_printer@@Base+0x14e4>
   22570:	mov	r3, #8
   22574:	mov	r2, r3
   22578:	mov	r1, #1
   2257c:	mov	r0, r4
   22580:	bl	2d1ec <flatcc_builder_table_add@@Base>
   22584:	cmp	r0, #0
   22588:	strdne	r8, [r0]
   2258c:	mov	r2, #1
   22590:	ldr	r1, [pc, #-700]	; 222dc <__flatcc_fb_gen_c_json_printer@@Base+0x1234>
   22594:	mov	r0, r4
   22598:	bl	2c7e8 <flatcc_builder_check_required@@Base>
   2259c:	cmp	r0, #0
   225a0:	ldreq	r3, [pc, #-712]	; 222e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1238>
   225a4:	moveq	r2, #25
   225a8:	ldreq	r1, [pc, #-716]	; 222e4 <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   225ac:	ldreq	r0, [pc, #-716]	; 222e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   225b0:	beq	2208c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   225b4:	mov	r0, r4
   225b8:	bl	2c868 <flatcc_builder_end_table@@Base>
   225bc:	subs	r1, r0, #0
   225c0:	beq	225cc <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   225c4:	mov	r0, r4
   225c8:	bl	2bd9c <flatcc_builder_offset_vector_push@@Base>
   225cc:	ldr	r5, [r5]
   225d0:	b	22484 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   225d4:	mov	r0, r4
   225d8:	bl	2c868 <flatcc_builder_end_table@@Base>
   225dc:	subs	r1, r0, #0
   225e0:	beq	225ec <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   225e4:	mov	r0, r4
   225e8:	bl	2bd9c <flatcc_builder_offset_vector_push@@Base>
   225ec:	add	sl, sl, #1
   225f0:	add	r6, r6, #8
   225f4:	b	21f14 <__flatcc_fb_gen_c_json_printer@@Base+0xe6c>
   225f8:	mov	r0, r4
   225fc:	bl	2c868 <flatcc_builder_end_table@@Base>
   22600:	mov	r1, r0
   22604:	mov	r0, r4
   22608:	bl	2bac8 <flatcc_builder_end_buffer@@Base>
   2260c:	add	r0, sp, #44	; 0x2c
   22610:	bl	21498 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   22614:	ldr	r3, [sp, #8]
   22618:	cmp	r3, #0
   2261c:	beq	22628 <__flatcc_fb_gen_c_json_printer@@Base+0x1580>
   22620:	mov	r0, r3
   22624:	bl	14018 <free@plt>
   22628:	mov	r0, #0
   2262c:	b	21db4 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   22630:	cmp	r0, #0
   22634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22638:	sub	sp, sp, #20
   2263c:	beq	22654 <__flatcc_fb_gen_c_json_printer@@Base+0x15ac>
   22640:	ldr	r3, [pc, #380]	; 227c4 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   22644:	ldr	r2, [r0, #4]
   22648:	str	r3, [sp, #12]
   2264c:	cmp	r2, r3
   22650:	beq	2275c <__flatcc_fb_gen_c_json_printer@@Base+0x16b4>
   22654:	ldr	r3, [pc, #364]	; 227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   22658:	mov	r2, #237	; 0xed
   2265c:	ldr	r1, [pc, #360]	; 227cc <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   22660:	ldr	r0, [pc, #360]	; 227d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   22664:	b	22678 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
   22668:	ldr	r3, [pc, #344]	; 227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   2266c:	mov	r2, #237	; 0xed
   22670:	ldr	r1, [pc, #340]	; 227cc <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   22674:	ldr	r0, [pc, #344]	; 227d4 <__flatcc_fb_gen_c_json_printer@@Base+0x172c>
   22678:	bl	141a4 <__assert_fail@plt>
   2267c:	ldr	r3, [r6]
   22680:	adds	r2, r6, r3
   22684:	ldreq	r3, [pc, #332]	; 227d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   22688:	moveq	r2, #224	; 0xe0
   2268c:	beq	2265c <__flatcc_fb_gen_c_json_printer@@Base+0x15b4>
   22690:	ldr	r3, [r6, r3]
   22694:	sub	r3, r2, r3
   22698:	ldrh	r1, [r3]
   2269c:	cmp	r1, #7
   226a0:	bls	226d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   226a4:	ldrh	r3, [r3, #6]
   226a8:	cmp	r3, #0
   226ac:	beq	226d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   226b0:	add	r5, r2, r3
   226b4:	ldr	r3, [r2, r3]
   226b8:	add	r3, r3, #4
   226bc:	adds	r5, r5, r3
   226c0:	bne	226dc <__flatcc_fb_gen_c_json_printer@@Base+0x1634>
   226c4:	add	r9, r9, #1
   226c8:	add	r6, r6, #4
   226cc:	b	227a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
   226d0:	ldr	r3, [pc, #256]	; 227d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   226d4:	mov	r2, #224	; 0xe0
   226d8:	b	22670 <__flatcc_fb_gen_c_json_printer@@Base+0x15c8>
   226dc:	ldr	r4, [r5, #-4]
   226e0:	cmp	r4, #0
   226e4:	beq	226c4 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   226e8:	sub	r8, r4, #1
   226ec:	lsr	r3, r4, #1
   226f0:	mov	r1, r3
   226f4:	mov	r2, r8
   226f8:	mov	r0, r5
   226fc:	str	r3, [sp, #4]
   22700:	bl	21848 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
   22704:	ldr	r3, [sp, #4]
   22708:	subs	r3, r3, #1
   2270c:	bcs	226f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1648>
   22710:	add	r3, r5, r4, lsl #2
   22714:	mul	r4, sl, r4
   22718:	cmp	r8, #0
   2271c:	add	r4, r4, #4
   22720:	beq	226c4 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   22724:	ldr	r1, [r3, #-4]
   22728:	ldr	r2, [r5]
   2272c:	sub	r1, r1, r4
   22730:	add	r2, r4, r2
   22734:	sub	r8, r8, #1
   22738:	str	r1, [r5]
   2273c:	mov	r0, r5
   22740:	str	r2, [r3, #-4]!
   22744:	mov	r1, fp
   22748:	mov	r2, r8
   2274c:	str	r3, [sp, #4]
   22750:	bl	21848 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
   22754:	ldr	r3, [sp, #4]
   22758:	b	22718 <__flatcc_fb_gen_c_json_printer@@Base+0x1670>
   2275c:	ldr	r3, [r0]
   22760:	adds	r2, r0, r3
   22764:	beq	22654 <__flatcc_fb_gen_c_json_printer@@Base+0x15ac>
   22768:	ldr	r3, [r0, r3]
   2276c:	sub	r3, r2, r3
   22770:	ldrh	r1, [r3]
   22774:	cmp	r1, #5
   22778:	bls	22668 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   2277c:	ldrh	r3, [r3, #4]
   22780:	cmp	r3, #0
   22784:	beq	22668 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   22788:	add	r7, r2, r3
   2278c:	ldr	r3, [r2, r3]
   22790:	mov	r9, #0
   22794:	add	r3, r3, #4
   22798:	add	r7, r7, r3
   2279c:	mov	r6, r7
   227a0:	mvn	sl, #3
   227a4:	mov	fp, r9
   227a8:	cmp	r7, #0
   227ac:	beq	227bc <__flatcc_fb_gen_c_json_printer@@Base+0x1714>
   227b0:	ldr	r3, [r7, #-4]
   227b4:	cmp	r9, r3
   227b8:	bcc	2267c <__flatcc_fb_gen_c_json_printer@@Base+0x15d4>
   227bc:	add	sp, sp, #20
   227c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227c4:	movtpl	r4, #9794	; 0x2642
   227c8:	andeq	r7, r4, r4, asr #19
   227cc:	strdeq	r7, [r4], -r7	; <UNPREDICTABLE>
   227d0:	andeq	r7, r4, ip, lsl #21
   227d4:			; <UNDEFINED> instruction: 0x00047ab2
   227d8:	ldrdeq	r7, [r4], -lr

000227dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   227dc:	push	{r4, r5, r6, r7, lr}
   227e0:	sub	sp, sp, #236	; 0xec
   227e4:	mov	r5, r3
   227e8:	mov	r7, r1
   227ec:	mov	r6, r0
   227f0:	mov	r0, sp
   227f4:	mov	r4, r2
   227f8:	bl	2b324 <flatcc_builder_init@@Base>
   227fc:	mov	r2, r7
   22800:	mov	r1, r6
   22804:	mov	r0, sp
   22808:	bl	21cc4 <__flatcc_fb_gen_c_json_printer@@Base+0xc1c>
   2280c:	ldr	r2, [r5]
   22810:	mov	r1, r4
   22814:	mov	r0, sp
   22818:	bl	2d7e4 <flatcc_builder_copy_buffer@@Base>
   2281c:	cmp	r0, #0
   22820:	beq	2282c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   22824:	mov	r0, r4
   22828:	bl	22630 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   2282c:	mov	r0, sp
   22830:	bl	2d718 <flatcc_builder_get_buffer_size@@Base>
   22834:	str	r0, [r5]
   22838:	mov	r0, sp
   2283c:	bl	2b4b0 <flatcc_builder_clear@@Base>
   22840:	mov	r0, r4
   22844:	add	sp, sp, #236	; 0xec
   22848:	pop	{r4, r5, r6, r7, pc}

0002284c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2284c:	push	{r4, r5, r6, lr}
   22850:	sub	sp, sp, #232	; 0xe8
   22854:	mov	r6, r1
   22858:	mov	r5, r0
   2285c:	mov	r0, sp
   22860:	mov	r4, r2
   22864:	bl	2b324 <flatcc_builder_init@@Base>
   22868:	mov	r2, r6
   2286c:	mov	r1, r5
   22870:	mov	r0, sp
   22874:	bl	21cc4 <__flatcc_fb_gen_c_json_printer@@Base+0xc1c>
   22878:	cmp	r0, #0
   2287c:	movne	r4, #0
   22880:	bne	2289c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   22884:	mov	r1, r4
   22888:	mov	r0, sp
   2288c:	bl	2d830 <flatcc_builder_finalize_buffer@@Base>
   22890:	subs	r4, r0, #0
   22894:	beq	2289c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   22898:	bl	22630 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   2289c:	mov	r0, sp
   228a0:	bl	2b4b0 <flatcc_builder_clear@@Base>
   228a4:	mov	r0, r4
   228a8:	add	sp, sp, #232	; 0xe8
   228ac:	pop	{r4, r5, r6, pc}

000228b0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   228b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   228b4:	mov	r5, r0
   228b8:	ldr	r4, [r0, #216]	; 0xd8
   228bc:	ldr	r3, [pc, #316]	; 22a00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   228c0:	cmp	r4, #0
   228c4:	moveq	r4, r3
   228c8:	sub	sp, sp, #20
   228cc:	mov	r0, r4
   228d0:	ldr	r7, [r1, #160]	; 0xa0
   228d4:	mov	r6, r1
   228d8:	bl	140cc <strlen@plt>
   228dc:	mov	r9, r0
   228e0:	mov	r0, r7
   228e4:	bl	140cc <strlen@plt>
   228e8:	ldr	r2, [r5, #108]	; 0x6c
   228ec:	cmp	r2, #0
   228f0:	ldrne	r3, [pc, #268]	; 22a04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   228f4:	ldrne	r4, [r3]
   228f8:	bne	2296c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc>
   228fc:	ldr	r2, [pc, #260]	; 22a08 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   22900:	mov	r8, #1
   22904:	mov	r3, r0
   22908:	str	r2, [sp]
   2290c:	str	r8, [sp, #4]
   22910:	mov	r2, r7
   22914:	mov	r1, r9
   22918:	mov	r0, r4
   2291c:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   22920:	subs	r7, r0, #0
   22924:	bne	22940 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   22928:	ldr	r3, [pc, #220]	; 22a0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2292c:	ldr	r0, [pc, #220]	; 22a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   22930:	ldr	r1, [r3]
   22934:	bl	14180 <fputs@plt>
   22938:	mov	r0, r8
   2293c:	bl	140c0 <exit@plt>
   22940:	ldr	r1, [pc, #204]	; 22a14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164>
   22944:	bl	1400c <fopen@plt>
   22948:	subs	r4, r0, #0
   2294c:	bne	22964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb4>
   22950:	ldr	r3, [pc, #180]	; 22a0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   22954:	mov	r2, r7
   22958:	ldr	r1, [pc, #184]	; 22a18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   2295c:	ldr	r0, [r3]
   22960:	bl	140e4 <fprintf@plt>
   22964:	mov	r0, r7
   22968:	bl	14018 <free@plt>
   2296c:	cmp	r4, #0
   22970:	mvneq	r5, #0
   22974:	beq	229b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x104>
   22978:	mov	r1, r6
   2297c:	add	r2, sp, #12
   22980:	mov	r0, r5
   22984:	bl	2284c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   22988:	subs	r6, r0, #0
   2298c:	bne	229c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x110>
   22990:	ldr	r0, [pc, #132]	; 22a1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   22994:	bl	14084 <puts@plt>
   22998:	mvn	r5, #0
   2299c:	ldr	r3, [pc, #96]	; 22a04 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   229a0:	ldr	r3, [r3]
   229a4:	cmp	r4, r3
   229a8:	beq	229b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x104>
   229ac:	mov	r0, r4
   229b0:	bl	1412c <fclose@plt>
   229b4:	mov	r0, r5
   229b8:	add	sp, sp, #20
   229bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   229c0:	mov	r3, r4
   229c4:	ldr	r2, [sp, #12]
   229c8:	mov	r1, #1
   229cc:	bl	14060 <fwrite@plt>
   229d0:	ldr	r3, [sp, #12]
   229d4:	cmp	r0, r3
   229d8:	moveq	r5, #0
   229dc:	beq	229f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   229e0:	ldr	r3, [pc, #36]	; 22a0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   229e4:	ldr	r0, [pc, #52]	; 22a20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   229e8:	mvn	r5, #0
   229ec:	ldr	r1, [r3]
   229f0:	bl	14180 <fputs@plt>
   229f4:	mov	r0, r6
   229f8:	bl	14018 <free@plt>
   229fc:	b	2299c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xec>
   22a00:	andeq	r2, r3, sp, lsl pc
   22a04:	strheq	ip, [r5], -r4
   22a08:	andeq	r1, r3, sp, lsl #12
   22a0c:	strheq	ip, [r5], -r0
   22a10:	andeq	r1, r3, r5, ror #11
   22a14:	andeq	r1, r3, r4, lsl #14
   22a18:	muleq	r4, sp, lr
   22a1c:	andeq	r7, r4, pc, asr #29
   22a20:	strdeq	r7, [r4], -r0
   22a24:	push	{r4, r5, r6, r7, r8, lr}
   22a28:	mov	r5, r0
   22a2c:	ldr	r6, [r0]
   22a30:	mov	r7, r1
   22a34:	mov	r8, r2
   22a38:	mov	r4, #0
   22a3c:	ldr	r3, [r5, #12]
   22a40:	cmp	r4, r3
   22a44:	bcc	22a4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c>
   22a48:	pop	{r4, r5, r6, r7, r8, pc}
   22a4c:	ldr	r1, [r6, r4, lsl #2]
   22a50:	cmp	r1, #0
   22a54:	cmpne	r1, #2
   22a58:	beq	22a64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   22a5c:	mov	r0, r8
   22a60:	blx	r7
   22a64:	add	r4, r4, #1
   22a68:	b	22a3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c>
   22a6c:	push	{r4, lr}
   22a70:	mov	r4, r0
   22a74:	ldr	r0, [r0]
   22a78:	cmp	r0, #0
   22a7c:	beq	22a84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   22a80:	bl	14018 <free@plt>
   22a84:	mov	r0, r4
   22a88:	mov	r2, #16
   22a8c:	mov	r1, #0
   22a90:	pop	{r4, lr}
   22a94:	b	140fc <memset@plt>
   22a98:	push	{r0, r1, r2, r3, r4, lr}
   22a9c:	add	r3, sp, #8
   22aa0:	str	r3, [sp, #4]
   22aa4:	ldr	r3, [pc, #24]	; 22ac4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x214>
   22aa8:	mov	r2, r1
   22aac:	str	r3, [sp]
   22ab0:	mov	r3, #0
   22ab4:	bl	2dec4 <cmetrohash64_1@@Base>
   22ab8:	ldr	r0, [sp, #8]
   22abc:	add	sp, sp, #20
   22ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   22ac4:	svccs	0x00693b52
   22ac8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22acc:	subs	r8, r3, #0
   22ad0:	str	r1, [sp]
   22ad4:	bne	22aec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x23c>
   22ad8:	ldr	r3, [pc, #372]	; 22c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   22adc:	ldr	r1, [pc, #372]	; 22c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   22ae0:	ldr	r0, [pc, #372]	; 22c5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   22ae4:	mov	r2, #114	; 0x72
   22ae8:	bl	141a4 <__assert_fail@plt>
   22aec:	cmp	r8, #2
   22af0:	ldreq	r3, [pc, #348]	; 22c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   22af4:	moveq	r2, #115	; 0x73
   22af8:	ldreq	r1, [pc, #344]	; 22c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   22afc:	ldreq	r0, [pc, #348]	; 22c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   22b00:	beq	22ae8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   22b04:	cmp	r8, #1
   22b08:	ldreq	r3, [pc, #324]	; 22c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a4>
   22b0c:	moveq	r2, #116	; 0x74
   22b10:	ldreq	r1, [pc, #320]	; 22c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   22b14:	ldreq	r0, [pc, #328]	; 22c64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   22b18:	beq	22ae8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   22b1c:	mov	fp, r2
   22b20:	ldr	r2, [r0, #12]
   22b24:	mov	r3, #179	; 0xb3
   22b28:	ldr	r1, [r0, #8]
   22b2c:	mul	r3, r3, r2
   22b30:	mov	r6, r0
   22b34:	cmp	r1, r3, lsr #8
   22b38:	bcc	22b68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   22b3c:	lsl	r1, r1, #1
   22b40:	bl	22c74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   22b44:	cmp	r0, #0
   22b48:	beq	22b68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   22b4c:	ldr	r3, [pc, #276]	; 22c68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
   22b50:	ldr	r2, [pc, #276]	; 22c6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   22b54:	ldr	r1, [pc, #276]	; 22c70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   22b58:	ldr	r0, [r3]
   22b5c:	bl	140e4 <fprintf@plt>
   22b60:	mov	r0, #1
   22b64:	bl	140c0 <exit@plt>
   22b68:	mov	r1, fp
   22b6c:	ldr	r0, [sp]
   22b70:	ldr	r9, [r6, #12]
   22b74:	ldr	sl, [r6]
   22b78:	bl	22a98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   22b7c:	ldr	r3, [sp, #48]	; 0x30
   22b80:	sub	r9, r9, #1
   22b84:	sub	r3, r3, #2
   22b88:	cmp	r3, #1
   22b8c:	movhi	r7, #0
   22b90:	ldrls	r3, [r6, #8]
   22b94:	addls	r3, r3, #1
   22b98:	strls	r3, [r6, #8]
   22b9c:	and	r2, r9, r0
   22ba0:	add	r4, r0, #1
   22ba4:	bls	22bdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x32c>
   22ba8:	ldr	r5, [sl, r2, lsl #2]
   22bac:	add	r3, sl, r2, lsl #2
   22bb0:	cmp	r5, #0
   22bb4:	bne	22c00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   22bb8:	cmp	r7, #0
   22bbc:	moveq	r7, r3
   22bc0:	ldr	r3, [r6, #8]
   22bc4:	add	r3, r3, #1
   22bc8:	str	r3, [r6, #8]
   22bcc:	str	r8, [r7]
   22bd0:	b	22c48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   22bd4:	and	r2, r4, r9
   22bd8:	add	r4, r4, #1
   22bdc:	ldr	r5, [sl, r2, lsl #2]
   22be0:	add	r3, sl, r2, lsl #2
   22be4:	cmp	r5, #0
   22be8:	cmpne	r5, #2
   22bec:	movne	r5, #1
   22bf0:	moveq	r5, #0
   22bf4:	bne	22bd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   22bf8:	str	r8, [r3]
   22bfc:	b	22c48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   22c00:	cmp	r5, #2
   22c04:	bne	22c1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   22c08:	cmp	r7, #0
   22c0c:	moveq	r7, r3
   22c10:	and	r2, r9, r4
   22c14:	add	r4, r4, #1
   22c18:	b	22ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f8>
   22c1c:	mov	r2, fp
   22c20:	mov	r1, r5
   22c24:	ldr	r0, [sp]
   22c28:	str	r3, [sp, #4]
   22c2c:	bl	1418c <strncmp@plt>
   22c30:	ldr	r3, [sp, #4]
   22c34:	cmp	r0, #0
   22c38:	bne	22c10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
   22c3c:	ldr	r2, [sp, #48]	; 0x30
   22c40:	cmp	r2, #0
   22c44:	beq	22bf8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x348>
   22c48:	mov	r0, r5
   22c4c:	add	sp, sp, #12
   22c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c54:	andeq	r7, r4, r8, lsl pc
   22c58:	andeq	r7, r4, r0, lsr pc
   22c5c:	andeq	r7, r4, r0, lsl #31
   22c60:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   22c64:	andeq	r7, r4, lr, lsr #31
   22c68:	strheq	ip, [r5], -r0
   22c6c:	andeq	r7, r4, r3, asr #31
   22c70:	strdeq	r7, [r4], -r6
   22c74:	ldr	r3, [r0, #8]
   22c78:	push	{r4, r5, r6, r7, r8, lr}
   22c7c:	cmp	r1, r3
   22c80:	ldr	r7, [r0]
   22c84:	sub	sp, sp, #24
   22c88:	mov	r4, r0
   22c8c:	movcc	r1, r3
   22c90:	mov	r6, #4
   22c94:	mov	r2, #179	; 0xb3
   22c98:	mul	r3, r2, r6
   22c9c:	cmp	r1, r3, lsr #8
   22ca0:	bhi	22d1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   22ca4:	mov	r1, #4
   22ca8:	mov	r0, r6
   22cac:	bl	13fe8 <calloc@plt>
   22cb0:	cmp	r0, #0
   22cb4:	str	r0, [sp, #8]
   22cb8:	mvneq	r0, #0
   22cbc:	beq	22d14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x464>
   22cc0:	mov	r8, #3
   22cc4:	mov	r5, #0
   22cc8:	str	r5, [sp, #12]
   22ccc:	str	r6, [sp, #20]
   22cd0:	str	r5, [sp, #16]
   22cd4:	ldr	r3, [r4, #12]
   22cd8:	cmp	r5, r3
   22cdc:	bcc	22d24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   22ce0:	mov	r0, r4
   22ce4:	bl	22a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   22ce8:	add	r2, sp, #8
   22cec:	add	ip, sp, #24
   22cf0:	mov	r3, r2
   22cf4:	add	r4, r4, #8
   22cf8:	ldm	r3!, {r0, r1}
   22cfc:	cmp	r3, ip
   22d00:	str	r0, [r4, #-8]
   22d04:	str	r1, [r4, #-4]
   22d08:	mov	r2, r3
   22d0c:	bne	22cf0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x440>
   22d10:	mov	r0, #0
   22d14:	add	sp, sp, #24
   22d18:	pop	{r4, r5, r6, r7, r8, pc}
   22d1c:	lsl	r6, r6, #1
   22d20:	b	22c98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e8>
   22d24:	ldr	r6, [r7, r5, lsl #2]
   22d28:	cmp	r6, #0
   22d2c:	cmpne	r6, #2
   22d30:	beq	22d54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a4>
   22d34:	mov	r0, r6
   22d38:	bl	140cc <strlen@plt>
   22d3c:	str	r8, [sp]
   22d40:	mov	r3, r6
   22d44:	mov	r1, r6
   22d48:	mov	r2, r0
   22d4c:	add	r0, sp, #8
   22d50:	bl	22ac8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   22d54:	add	r5, r5, #1
   22d58:	b	22cd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x424>
   22d5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22d60:	ldr	r9, [r0]
   22d64:	cmp	r9, #0
   22d68:	bne	22d78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
   22d6c:	mov	r5, #0
   22d70:	mov	r0, r5
   22d74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22d78:	mov	r7, r1
   22d7c:	ldr	r6, [r0, #12]
   22d80:	mov	r1, r2
   22d84:	mov	r0, r7
   22d88:	mov	r8, r2
   22d8c:	bl	22a98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   22d90:	sub	r6, r6, #1
   22d94:	and	r3, r6, r0
   22d98:	add	r4, r0, #1
   22d9c:	ldr	r5, [r9, r3, lsl #2]
   22da0:	cmp	r5, #0
   22da4:	beq	22d6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4bc>
   22da8:	cmp	r5, #2
   22dac:	beq	22dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x518>
   22db0:	mov	r2, r8
   22db4:	mov	r1, r5
   22db8:	mov	r0, r7
   22dbc:	bl	1418c <strncmp@plt>
   22dc0:	cmp	r0, #0
   22dc4:	beq	22d70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   22dc8:	and	r3, r6, r4
   22dcc:	add	r4, r4, #1
   22dd0:	b	22d9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ec>
   22dd4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22dd8:	ldr	sl, [r0]
   22ddc:	cmp	sl, #0
   22de0:	bne	22df0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
   22de4:	mov	r6, #0
   22de8:	mov	r0, r6
   22dec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22df0:	mov	r8, r1
   22df4:	ldr	r7, [r0, #12]
   22df8:	mov	r5, r0
   22dfc:	mov	r1, r2
   22e00:	mov	r0, r8
   22e04:	mov	r9, r2
   22e08:	bl	22a98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e8>
   22e0c:	sub	r7, r7, #1
   22e10:	and	r3, r7, r0
   22e14:	add	r4, r0, #1
   22e18:	ldr	r6, [sl, r3, lsl #2]
   22e1c:	add	fp, sl, r3, lsl #2
   22e20:	cmp	r6, #0
   22e24:	beq	22de4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x534>
   22e28:	cmp	r6, #2
   22e2c:	beq	22e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   22e30:	mov	r2, r9
   22e34:	mov	r1, r6
   22e38:	mov	r0, r8
   22e3c:	bl	1418c <strncmp@plt>
   22e40:	cmp	r0, #0
   22e44:	bne	22e60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
   22e48:	mov	r3, #2
   22e4c:	str	r3, [fp]
   22e50:	ldr	r3, [r5, #8]
   22e54:	sub	r3, r3, #1
   22e58:	str	r3, [r5, #8]
   22e5c:	b	22de8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   22e60:	and	r3, r7, r4
   22e64:	add	r4, r4, #1
   22e68:	b	22e18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>

00022e6c <str_set_clear@@Base>:
   22e6c:	b	22a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>

00022e70 <str_set_destroy@@Base>:
   22e70:	cmp	r1, #0
   22e74:	push	{r4, lr}
   22e78:	mov	r4, r0
   22e7c:	beq	22e84 <str_set_destroy@@Base+0x14>
   22e80:	bl	22a24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   22e84:	mov	r0, r4
   22e88:	pop	{r4, lr}
   22e8c:	b	22a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>

00022e90 <str_set_init@@Base>:
   22e90:	push	{r4, r5, r6, lr}
   22e94:	mov	r2, #179	; 0xb3
   22e98:	mov	r5, r0
   22e9c:	mov	r4, #4
   22ea0:	mul	r3, r2, r4
   22ea4:	cmp	r1, r3, lsr #8
   22ea8:	bhi	22ed8 <str_set_init@@Base+0x48>
   22eac:	mov	r1, #4
   22eb0:	mov	r0, r4
   22eb4:	bl	13fe8 <calloc@plt>
   22eb8:	cmp	r0, #0
   22ebc:	str	r0, [r5]
   22ec0:	movne	r0, #0
   22ec4:	strne	r0, [r5, #4]
   22ec8:	strne	r4, [r5, #12]
   22ecc:	strne	r0, [r5, #8]
   22ed0:	mvneq	r0, #0
   22ed4:	pop	{r4, r5, r6, pc}
   22ed8:	lsl	r4, r4, #1
   22edc:	b	22ea0 <str_set_init@@Base+0x10>

00022ee0 <str_set_resize@@Base>:
   22ee0:	b	22c74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>

00022ee4 <str_set_insert@@Base>:
   22ee4:	b	22ac8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>

00022ee8 <str_set_insert_item@@Base>:
   22ee8:	push	{r0, r1, r4, r5, r6, lr}
   22eec:	mov	r5, r0
   22ef0:	mov	r0, r1
   22ef4:	mov	r4, r1
   22ef8:	mov	r6, r2
   22efc:	bl	140cc <strlen@plt>
   22f00:	str	r6, [sp]
   22f04:	mov	r3, r4
   22f08:	mov	r1, r4
   22f0c:	mov	r2, r0
   22f10:	mov	r0, r5
   22f14:	bl	22ac8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   22f18:	add	sp, sp, #8
   22f1c:	pop	{r4, r5, r6, pc}

00022f20 <str_set_find@@Base>:
   22f20:	b	22d5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>

00022f24 <str_set_find_item@@Base>:
   22f24:	push	{r4, r5, r6, lr}
   22f28:	mov	r5, r0
   22f2c:	mov	r0, r1
   22f30:	mov	r4, r1
   22f34:	bl	140cc <strlen@plt>
   22f38:	mov	r1, r4
   22f3c:	mov	r2, r0
   22f40:	mov	r0, r5
   22f44:	pop	{r4, r5, r6, lr}
   22f48:	b	22d5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>

00022f4c <str_set_remove@@Base>:
   22f4c:	b	22dd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x524>

00022f50 <str_set_remove_item@@Base>:
   22f50:	push	{r4, r5, r6, lr}
   22f54:	mov	r5, r0
   22f58:	mov	r0, r1
   22f5c:	mov	r4, r1
   22f60:	bl	140cc <strlen@plt>
   22f64:	mov	r1, r4
   22f68:	mov	r2, r0
   22f6c:	mov	r0, r5
   22f70:	pop	{r4, r5, r6, lr}
   22f74:	b	22dd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x524>

00022f78 <str_set_visit@@Base>:
   22f78:	b	22a24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   22f7c:	push	{r4, r5, r6, r7, r8, lr}
   22f80:	mov	r5, r0
   22f84:	ldr	r6, [r0]
   22f88:	mov	r7, r1
   22f8c:	mov	r8, r2
   22f90:	mov	r4, #0
   22f94:	ldr	r3, [r5, #12]
   22f98:	cmp	r4, r3
   22f9c:	bcc	22fa4 <str_set_visit@@Base+0x2c>
   22fa0:	pop	{r4, r5, r6, r7, r8, pc}
   22fa4:	ldr	r1, [r6, r4, lsl #2]
   22fa8:	cmp	r1, #0
   22fac:	cmpne	r1, #2
   22fb0:	beq	22fbc <str_set_visit@@Base+0x44>
   22fb4:	mov	r0, r8
   22fb8:	blx	r7
   22fbc:	add	r4, r4, #1
   22fc0:	b	22f94 <str_set_visit@@Base+0x1c>
   22fc4:	push	{r4, lr}
   22fc8:	mov	r4, r0
   22fcc:	ldr	r0, [r0]
   22fd0:	cmp	r0, #0
   22fd4:	beq	22fdc <str_set_visit@@Base+0x64>
   22fd8:	bl	14018 <free@plt>
   22fdc:	mov	r0, r4
   22fe0:	mov	r2, #16
   22fe4:	mov	r1, #0
   22fe8:	pop	{r4, lr}
   22fec:	b	140fc <memset@plt>
   22ff0:	push	{r0, r1, r2, r3, r4, lr}
   22ff4:	add	r3, sp, #8
   22ff8:	str	r3, [sp, #4]
   22ffc:	ldr	r3, [pc, #24]	; 2301c <str_set_visit@@Base+0xa4>
   23000:	mov	r2, #4
   23004:	str	r3, [sp]
   23008:	mov	r3, #0
   2300c:	bl	2dec4 <cmetrohash64_1@@Base>
   23010:	ldr	r0, [sp, #8]
   23014:	add	sp, sp, #20
   23018:	pop	{pc}		; (ldr pc, [sp], #4)
   2301c:	svccs	0x00693b52
   23020:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   23024:	subs	r5, r2, #0
   23028:	bne	23040 <str_set_visit@@Base+0xc8>
   2302c:	ldr	r3, [pc, #336]	; 23184 <str_set_visit@@Base+0x20c>
   23030:	ldr	r1, [pc, #336]	; 23188 <str_set_visit@@Base+0x210>
   23034:	ldr	r0, [pc, #336]	; 2318c <str_set_visit@@Base+0x214>
   23038:	mov	r2, #114	; 0x72
   2303c:	bl	141a4 <__assert_fail@plt>
   23040:	cmp	r5, #2
   23044:	ldreq	r3, [pc, #312]	; 23184 <str_set_visit@@Base+0x20c>
   23048:	moveq	r2, #115	; 0x73
   2304c:	ldreq	r1, [pc, #308]	; 23188 <str_set_visit@@Base+0x210>
   23050:	ldreq	r0, [pc, #312]	; 23190 <str_set_visit@@Base+0x218>
   23054:	beq	2303c <str_set_visit@@Base+0xc4>
   23058:	cmp	r5, #1
   2305c:	ldreq	r3, [pc, #288]	; 23184 <str_set_visit@@Base+0x20c>
   23060:	moveq	r2, #116	; 0x74
   23064:	ldreq	r1, [pc, #284]	; 23188 <str_set_visit@@Base+0x210>
   23068:	ldreq	r0, [pc, #292]	; 23194 <str_set_visit@@Base+0x21c>
   2306c:	beq	2303c <str_set_visit@@Base+0xc4>
   23070:	ldr	r2, [r0, #12]
   23074:	mov	r7, r3
   23078:	mov	r3, #179	; 0xb3
   2307c:	mov	r6, r1
   23080:	mul	r3, r3, r2
   23084:	ldr	r1, [r0, #8]
   23088:	mov	r4, r0
   2308c:	cmp	r1, r3, lsr #8
   23090:	bcc	230c0 <str_set_visit@@Base+0x148>
   23094:	lsl	r1, r1, #1
   23098:	bl	231a4 <str_set_visit@@Base+0x22c>
   2309c:	cmp	r0, #0
   230a0:	beq	230c0 <str_set_visit@@Base+0x148>
   230a4:	ldr	r3, [pc, #236]	; 23198 <str_set_visit@@Base+0x220>
   230a8:	ldr	r2, [pc, #236]	; 2319c <str_set_visit@@Base+0x224>
   230ac:	ldr	r1, [pc, #236]	; 231a0 <str_set_visit@@Base+0x228>
   230b0:	ldr	r0, [r3]
   230b4:	bl	140e4 <fprintf@plt>
   230b8:	mov	r0, #1
   230bc:	bl	140c0 <exit@plt>
   230c0:	add	r0, sp, #8
   230c4:	ldr	r8, [r4, #12]
   230c8:	str	r6, [r0, #-4]!
   230cc:	ldr	r9, [r4]
   230d0:	bl	22ff0 <str_set_visit@@Base+0x78>
   230d4:	sub	r3, r7, #2
   230d8:	cmp	r3, #1
   230dc:	sub	r8, r8, #1
   230e0:	ldrls	r2, [r4, #8]
   230e4:	movhi	r2, #0
   230e8:	addls	r2, r2, #1
   230ec:	and	r1, r8, r0
   230f0:	add	r3, r0, #1
   230f4:	strls	r2, [r4, #8]
   230f8:	bls	2312c <str_set_visit@@Base+0x1b4>
   230fc:	ldr	r0, [r9, r1, lsl #2]
   23100:	add	ip, r9, r1, lsl #2
   23104:	cmp	r0, #0
   23108:	bne	23150 <str_set_visit@@Base+0x1d8>
   2310c:	ldr	r3, [r4, #8]
   23110:	cmp	r2, #0
   23114:	add	r3, r3, #1
   23118:	moveq	r2, ip
   2311c:	str	r3, [r4, #8]
   23120:	b	23148 <str_set_visit@@Base+0x1d0>
   23124:	and	r1, r8, r3
   23128:	add	r3, r3, #1
   2312c:	ldr	r0, [r9, r1, lsl #2]
   23130:	add	r2, r9, r1, lsl #2
   23134:	cmp	r0, #0
   23138:	cmpne	r0, #2
   2313c:	movne	r0, #1
   23140:	moveq	r0, #0
   23144:	bne	23124 <str_set_visit@@Base+0x1ac>
   23148:	str	r5, [r2]
   2314c:	b	2317c <str_set_visit@@Base+0x204>
   23150:	cmp	r0, #2
   23154:	bne	2316c <str_set_visit@@Base+0x1f4>
   23158:	cmp	r2, #0
   2315c:	moveq	r2, ip
   23160:	and	r1, r8, r3
   23164:	add	r3, r3, #1
   23168:	b	230fc <str_set_visit@@Base+0x184>
   2316c:	cmp	r6, r0
   23170:	bne	23160 <str_set_visit@@Base+0x1e8>
   23174:	cmp	r7, #0
   23178:	streq	r5, [ip]
   2317c:	add	sp, sp, #12
   23180:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23184:	andeq	r8, r4, r0, lsl r0
   23188:	andeq	r7, r4, r0, lsr pc
   2318c:	andeq	r7, r4, r0, lsl #31
   23190:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   23194:	andeq	r7, r4, lr, lsr #31
   23198:	strheq	ip, [r5], -r0
   2319c:	andeq	r7, r4, r3, asr #31
   231a0:	strdeq	r7, [r4], -r6
   231a4:	ldr	r3, [r0, #8]
   231a8:	push	{r4, r5, r6, r7, lr}
   231ac:	cmp	r1, r3
   231b0:	ldr	r7, [r0]
   231b4:	sub	sp, sp, #20
   231b8:	mov	r4, r0
   231bc:	movcc	r1, r3
   231c0:	mov	r6, #4
   231c4:	mov	r2, #179	; 0xb3
   231c8:	mul	r3, r2, r6
   231cc:	cmp	r1, r3, lsr #8
   231d0:	bhi	2324c <str_set_visit@@Base+0x2d4>
   231d4:	mov	r1, #4
   231d8:	mov	r0, r6
   231dc:	bl	13fe8 <calloc@plt>
   231e0:	cmp	r0, #0
   231e4:	str	r0, [sp]
   231e8:	mvneq	r0, #0
   231ec:	beq	23244 <str_set_visit@@Base+0x2cc>
   231f0:	str	r6, [sp, #12]
   231f4:	mov	r6, #3
   231f8:	mov	r5, #0
   231fc:	str	r5, [sp, #4]
   23200:	str	r5, [sp, #8]
   23204:	ldr	r3, [r4, #12]
   23208:	cmp	r5, r3
   2320c:	bcc	23254 <str_set_visit@@Base+0x2dc>
   23210:	mov	r0, r4
   23214:	bl	22fc4 <str_set_visit@@Base+0x4c>
   23218:	mov	r2, sp
   2321c:	add	ip, sp, #16
   23220:	mov	r3, r2
   23224:	add	r4, r4, #8
   23228:	ldm	r3!, {r0, r1}
   2322c:	cmp	r3, ip
   23230:	str	r0, [r4, #-8]
   23234:	str	r1, [r4, #-4]
   23238:	mov	r2, r3
   2323c:	bne	23220 <str_set_visit@@Base+0x2a8>
   23240:	mov	r0, #0
   23244:	add	sp, sp, #20
   23248:	pop	{r4, r5, r6, r7, pc}
   2324c:	lsl	r6, r6, #1
   23250:	b	231c8 <str_set_visit@@Base+0x250>
   23254:	ldr	r2, [r7, r5, lsl #2]
   23258:	cmp	r2, #0
   2325c:	cmpne	r2, #2
   23260:	beq	23274 <str_set_visit@@Base+0x2fc>
   23264:	mov	r3, r6
   23268:	mov	r1, r2
   2326c:	mov	r0, sp
   23270:	bl	23020 <str_set_visit@@Base+0xa8>
   23274:	add	r5, r5, #1
   23278:	b	23204 <str_set_visit@@Base+0x28c>
   2327c:	push	{r0, r1, r4, r5, r6, lr}
   23280:	ldr	r6, [r0]
   23284:	cmp	r6, #0
   23288:	bne	23298 <str_set_visit@@Base+0x320>
   2328c:	mov	r0, #0
   23290:	add	sp, sp, #8
   23294:	pop	{r4, r5, r6, pc}
   23298:	ldr	r4, [r0, #12]
   2329c:	add	r0, sp, #8
   232a0:	mov	r5, r1
   232a4:	str	r1, [r0, #-4]!
   232a8:	bl	22ff0 <str_set_visit@@Base+0x78>
   232ac:	sub	r4, r4, #1
   232b0:	and	r2, r4, r0
   232b4:	add	r3, r0, #1
   232b8:	ldr	r0, [r6, r2, lsl #2]
   232bc:	cmp	r0, #0
   232c0:	beq	2328c <str_set_visit@@Base+0x314>
   232c4:	cmp	r0, #2
   232c8:	beq	232d4 <str_set_visit@@Base+0x35c>
   232cc:	cmp	r5, r0
   232d0:	beq	23290 <str_set_visit@@Base+0x318>
   232d4:	and	r2, r4, r3
   232d8:	add	r3, r3, #1
   232dc:	b	232b8 <str_set_visit@@Base+0x340>
   232e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   232e4:	ldr	r7, [r0]
   232e8:	cmp	r7, #0
   232ec:	bne	232fc <str_set_visit@@Base+0x384>
   232f0:	mov	r0, #0
   232f4:	add	sp, sp, #12
   232f8:	pop	{r4, r5, r6, r7, pc}
   232fc:	ldr	r5, [r0, #12]
   23300:	mov	r4, r0
   23304:	add	r0, sp, #8
   23308:	mov	r6, r1
   2330c:	str	r1, [r0, #-4]!
   23310:	bl	22ff0 <str_set_visit@@Base+0x78>
   23314:	sub	r5, r5, #1
   23318:	and	r2, r5, r0
   2331c:	add	r3, r0, #1
   23320:	ldr	r0, [r7, r2, lsl #2]
   23324:	add	r1, r7, r2, lsl #2
   23328:	cmp	r0, #0
   2332c:	beq	232f0 <str_set_visit@@Base+0x378>
   23330:	cmp	r0, #2
   23334:	beq	23358 <str_set_visit@@Base+0x3e0>
   23338:	cmp	r6, r0
   2333c:	bne	23358 <str_set_visit@@Base+0x3e0>
   23340:	mov	r3, #2
   23344:	str	r3, [r1]
   23348:	ldr	r3, [r4, #8]
   2334c:	sub	r3, r3, #1
   23350:	str	r3, [r4, #8]
   23354:	b	232f4 <str_set_visit@@Base+0x37c>
   23358:	and	r2, r5, r3
   2335c:	add	r3, r3, #1
   23360:	b	23320 <str_set_visit@@Base+0x3a8>

00023364 <ptr_set_clear@@Base>:
   23364:	b	22fc4 <str_set_visit@@Base+0x4c>

00023368 <ptr_set_destroy@@Base>:
   23368:	cmp	r1, #0
   2336c:	push	{r4, lr}
   23370:	mov	r4, r0
   23374:	beq	2337c <ptr_set_destroy@@Base+0x14>
   23378:	bl	22f7c <str_set_visit@@Base+0x4>
   2337c:	mov	r0, r4
   23380:	pop	{r4, lr}
   23384:	b	22fc4 <str_set_visit@@Base+0x4c>

00023388 <ptr_set_init@@Base>:
   23388:	push	{r4, r5, r6, lr}
   2338c:	mov	r2, #179	; 0xb3
   23390:	mov	r5, r0
   23394:	mov	r4, #4
   23398:	mul	r3, r2, r4
   2339c:	cmp	r1, r3, lsr #8
   233a0:	bhi	233d0 <ptr_set_init@@Base+0x48>
   233a4:	mov	r1, #4
   233a8:	mov	r0, r4
   233ac:	bl	13fe8 <calloc@plt>
   233b0:	cmp	r0, #0
   233b4:	str	r0, [r5]
   233b8:	movne	r0, #0
   233bc:	strne	r0, [r5, #4]
   233c0:	strne	r4, [r5, #12]
   233c4:	strne	r0, [r5, #8]
   233c8:	mvneq	r0, #0
   233cc:	pop	{r4, r5, r6, pc}
   233d0:	lsl	r4, r4, #1
   233d4:	b	23398 <ptr_set_init@@Base+0x10>

000233d8 <ptr_set_resize@@Base>:
   233d8:	b	231a4 <str_set_visit@@Base+0x22c>

000233dc <ptr_set_insert@@Base>:
   233dc:	mov	r2, r3
   233e0:	ldr	r3, [sp]
   233e4:	b	23020 <str_set_visit@@Base+0xa8>

000233e8 <ptr_set_insert_item@@Base>:
   233e8:	mov	r3, r2
   233ec:	mov	r2, r1
   233f0:	b	23020 <str_set_visit@@Base+0xa8>

000233f4 <ptr_set_find@@Base>:
   233f4:	b	2327c <str_set_visit@@Base+0x304>

000233f8 <ptr_set_find_item@@Base>:
   233f8:	b	2327c <str_set_visit@@Base+0x304>

000233fc <ptr_set_remove@@Base>:
   233fc:	b	232e0 <str_set_visit@@Base+0x368>

00023400 <ptr_set_remove_item@@Base>:
   23400:	b	232e0 <str_set_visit@@Base+0x368>

00023404 <ptr_set_visit@@Base>:
   23404:	b	22f7c <str_set_visit@@Base+0x4>
   23408:	push	{r4, r5, r6, r7, r8, lr}
   2340c:	mov	r5, r0
   23410:	ldr	r6, [r0]
   23414:	mov	r7, r1
   23418:	mov	r8, r2
   2341c:	mov	r4, #0
   23420:	ldr	r3, [r5, #12]
   23424:	cmp	r4, r3
   23428:	bcc	23430 <ptr_set_visit@@Base+0x2c>
   2342c:	pop	{r4, r5, r6, r7, r8, pc}
   23430:	ldr	r1, [r6, r4, lsl #2]
   23434:	cmp	r1, #0
   23438:	cmpne	r1, #2
   2343c:	beq	23448 <ptr_set_visit@@Base+0x44>
   23440:	mov	r0, r8
   23444:	blx	r7
   23448:	add	r4, r4, #1
   2344c:	b	23420 <ptr_set_visit@@Base+0x1c>
   23450:	push	{r4, lr}
   23454:	mov	r4, r0
   23458:	ldr	r0, [r0]
   2345c:	cmp	r0, #0
   23460:	beq	23468 <ptr_set_visit@@Base+0x64>
   23464:	bl	14018 <free@plt>
   23468:	mov	r0, r4
   2346c:	mov	r2, #16
   23470:	mov	r1, #0
   23474:	pop	{r4, lr}
   23478:	b	140fc <memset@plt>
   2347c:	push	{r0, r1, r2, r3, r4, lr}
   23480:	add	r3, sp, #8
   23484:	str	r3, [sp, #4]
   23488:	ldr	r3, [pc, #24]	; 234a8 <ptr_set_visit@@Base+0xa4>
   2348c:	mov	r2, r1
   23490:	str	r3, [sp]
   23494:	mov	r3, #0
   23498:	bl	2dec4 <cmetrohash64_1@@Base>
   2349c:	ldr	r0, [sp, #8]
   234a0:	add	sp, sp, #20
   234a4:	pop	{pc}		; (ldr pc, [sp], #4)
   234a8:	svccs	0x00693b52
   234ac:	ldr	r3, [r2, #4]
   234b0:	ldr	r2, [r3, #4]
   234b4:	cmp	r1, r2
   234b8:	bne	234d8 <ptr_set_visit@@Base+0xd4>
   234bc:	mov	r2, r1
   234c0:	push	{r4, lr}
   234c4:	ldr	r1, [r3]
   234c8:	bl	1403c <memcmp@plt>
   234cc:	clz	r0, r0
   234d0:	lsr	r0, r0, #5
   234d4:	pop	{r4, pc}
   234d8:	mov	r0, #0
   234dc:	bx	lr
   234e0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234e4:	subs	r8, r3, #0
   234e8:	str	r1, [sp]
   234ec:	bne	23504 <ptr_set_visit@@Base+0x100>
   234f0:	ldr	r3, [pc, #372]	; 2366c <ptr_set_visit@@Base+0x268>
   234f4:	ldr	r1, [pc, #372]	; 23670 <ptr_set_visit@@Base+0x26c>
   234f8:	ldr	r0, [pc, #372]	; 23674 <ptr_set_visit@@Base+0x270>
   234fc:	mov	r2, #114	; 0x72
   23500:	bl	141a4 <__assert_fail@plt>
   23504:	cmp	r8, #2
   23508:	ldreq	r3, [pc, #348]	; 2366c <ptr_set_visit@@Base+0x268>
   2350c:	moveq	r2, #115	; 0x73
   23510:	ldreq	r1, [pc, #344]	; 23670 <ptr_set_visit@@Base+0x26c>
   23514:	ldreq	r0, [pc, #348]	; 23678 <ptr_set_visit@@Base+0x274>
   23518:	beq	23500 <ptr_set_visit@@Base+0xfc>
   2351c:	cmp	r8, #1
   23520:	ldreq	r3, [pc, #324]	; 2366c <ptr_set_visit@@Base+0x268>
   23524:	moveq	r2, #116	; 0x74
   23528:	ldreq	r1, [pc, #320]	; 23670 <ptr_set_visit@@Base+0x26c>
   2352c:	ldreq	r0, [pc, #328]	; 2367c <ptr_set_visit@@Base+0x278>
   23530:	beq	23500 <ptr_set_visit@@Base+0xfc>
   23534:	mov	fp, r2
   23538:	ldr	r2, [r0, #12]
   2353c:	mov	r3, #179	; 0xb3
   23540:	ldr	r1, [r0, #8]
   23544:	mul	r3, r3, r2
   23548:	mov	r6, r0
   2354c:	cmp	r1, r3, lsr #8
   23550:	bcc	23580 <ptr_set_visit@@Base+0x17c>
   23554:	lsl	r1, r1, #1
   23558:	bl	2368c <ptr_set_visit@@Base+0x288>
   2355c:	cmp	r0, #0
   23560:	beq	23580 <ptr_set_visit@@Base+0x17c>
   23564:	ldr	r3, [pc, #276]	; 23680 <ptr_set_visit@@Base+0x27c>
   23568:	ldr	r2, [pc, #276]	; 23684 <ptr_set_visit@@Base+0x280>
   2356c:	ldr	r1, [pc, #276]	; 23688 <ptr_set_visit@@Base+0x284>
   23570:	ldr	r0, [r3]
   23574:	bl	140e4 <fprintf@plt>
   23578:	mov	r0, #1
   2357c:	bl	140c0 <exit@plt>
   23580:	mov	r1, fp
   23584:	ldr	r0, [sp]
   23588:	ldr	r9, [r6, #12]
   2358c:	ldr	sl, [r6]
   23590:	bl	2347c <ptr_set_visit@@Base+0x78>
   23594:	ldr	r3, [sp, #48]	; 0x30
   23598:	sub	r9, r9, #1
   2359c:	sub	r3, r3, #2
   235a0:	cmp	r3, #1
   235a4:	movhi	r7, #0
   235a8:	ldrls	r3, [r6, #8]
   235ac:	addls	r3, r3, #1
   235b0:	strls	r3, [r6, #8]
   235b4:	and	r2, r9, r0
   235b8:	add	r4, r0, #1
   235bc:	bls	235f4 <ptr_set_visit@@Base+0x1f0>
   235c0:	ldr	r5, [sl, r2, lsl #2]
   235c4:	add	r3, sl, r2, lsl #2
   235c8:	cmp	r5, #0
   235cc:	bne	23618 <ptr_set_visit@@Base+0x214>
   235d0:	cmp	r7, #0
   235d4:	moveq	r7, r3
   235d8:	ldr	r3, [r6, #8]
   235dc:	add	r3, r3, #1
   235e0:	str	r3, [r6, #8]
   235e4:	str	r8, [r7]
   235e8:	b	23660 <ptr_set_visit@@Base+0x25c>
   235ec:	and	r2, r4, r9
   235f0:	add	r4, r4, #1
   235f4:	ldr	r5, [sl, r2, lsl #2]
   235f8:	add	r3, sl, r2, lsl #2
   235fc:	cmp	r5, #0
   23600:	cmpne	r5, #2
   23604:	movne	r5, #1
   23608:	moveq	r5, #0
   2360c:	bne	235ec <ptr_set_visit@@Base+0x1e8>
   23610:	str	r8, [r3]
   23614:	b	23660 <ptr_set_visit@@Base+0x25c>
   23618:	cmp	r5, #2
   2361c:	bne	23634 <ptr_set_visit@@Base+0x230>
   23620:	cmp	r7, #0
   23624:	moveq	r7, r3
   23628:	and	r2, r9, r4
   2362c:	add	r4, r4, #1
   23630:	b	235c0 <ptr_set_visit@@Base+0x1bc>
   23634:	mov	r2, r5
   23638:	mov	r1, fp
   2363c:	ldr	r0, [sp]
   23640:	str	r3, [sp, #4]
   23644:	bl	234ac <ptr_set_visit@@Base+0xa8>
   23648:	ldr	r3, [sp, #4]
   2364c:	cmp	r0, #0
   23650:	beq	23628 <ptr_set_visit@@Base+0x224>
   23654:	ldr	r2, [sp, #48]	; 0x30
   23658:	cmp	r2, #0
   2365c:	beq	23610 <ptr_set_visit@@Base+0x20c>
   23660:	mov	r0, r5
   23664:	add	sp, sp, #12
   23668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2366c:	andeq	r8, r4, r8, lsr #32
   23670:	andeq	r7, r4, r0, lsr pc
   23674:	andeq	r7, r4, r0, lsl #31
   23678:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   2367c:	andeq	r7, r4, lr, lsr #31
   23680:	strheq	ip, [r5], -r0
   23684:	andeq	r7, r4, r3, asr #31
   23688:	strdeq	r7, [r4], -r6
   2368c:	ldr	r3, [r0, #8]
   23690:	push	{r4, r5, r6, r7, lr}
   23694:	cmp	r1, r3
   23698:	ldr	r7, [r0]
   2369c:	sub	sp, sp, #28
   236a0:	mov	r4, r0
   236a4:	movcc	r1, r3
   236a8:	mov	r6, #4
   236ac:	mov	r2, #179	; 0xb3
   236b0:	mul	r3, r2, r6
   236b4:	cmp	r1, r3, lsr #8
   236b8:	bhi	23734 <ptr_set_visit@@Base+0x330>
   236bc:	mov	r1, #4
   236c0:	mov	r0, r6
   236c4:	bl	13fe8 <calloc@plt>
   236c8:	cmp	r0, #0
   236cc:	str	r0, [sp, #8]
   236d0:	mvneq	r0, #0
   236d4:	beq	2372c <ptr_set_visit@@Base+0x328>
   236d8:	str	r6, [sp, #20]
   236dc:	mov	r6, #3
   236e0:	mov	r5, #0
   236e4:	str	r5, [sp, #12]
   236e8:	str	r5, [sp, #16]
   236ec:	ldr	r3, [r4, #12]
   236f0:	cmp	r5, r3
   236f4:	bcc	2373c <ptr_set_visit@@Base+0x338>
   236f8:	mov	r0, r4
   236fc:	bl	23450 <ptr_set_visit@@Base+0x4c>
   23700:	add	r2, sp, #8
   23704:	add	ip, sp, #24
   23708:	mov	r3, r2
   2370c:	add	r4, r4, #8
   23710:	ldm	r3!, {r0, r1}
   23714:	cmp	r3, ip
   23718:	str	r0, [r4, #-8]
   2371c:	str	r1, [r4, #-4]
   23720:	mov	r2, r3
   23724:	bne	23708 <ptr_set_visit@@Base+0x304>
   23728:	mov	r0, #0
   2372c:	add	sp, sp, #28
   23730:	pop	{r4, r5, r6, r7, pc}
   23734:	lsl	r6, r6, #1
   23738:	b	236b0 <ptr_set_visit@@Base+0x2ac>
   2373c:	ldr	r3, [r7, r5, lsl #2]
   23740:	cmp	r3, #0
   23744:	cmpne	r3, #2
   23748:	beq	23760 <ptr_set_visit@@Base+0x35c>
   2374c:	ldr	r1, [r3, #4]
   23750:	add	r0, sp, #8
   23754:	str	r6, [sp]
   23758:	ldm	r1, {r1, r2}
   2375c:	bl	234e0 <ptr_set_visit@@Base+0xdc>
   23760:	add	r5, r5, #1
   23764:	b	236ec <ptr_set_visit@@Base+0x2e8>
   23768:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2376c:	ldr	r9, [r0]
   23770:	cmp	r9, #0
   23774:	bne	23784 <ptr_set_visit@@Base+0x380>
   23778:	mov	r5, #0
   2377c:	mov	r0, r5
   23780:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23784:	mov	r7, r1
   23788:	ldr	r6, [r0, #12]
   2378c:	mov	r1, r2
   23790:	mov	r0, r7
   23794:	mov	r8, r2
   23798:	bl	2347c <ptr_set_visit@@Base+0x78>
   2379c:	sub	r6, r6, #1
   237a0:	and	r3, r6, r0
   237a4:	add	r4, r0, #1
   237a8:	ldr	r5, [r9, r3, lsl #2]
   237ac:	cmp	r5, #0
   237b0:	beq	23778 <ptr_set_visit@@Base+0x374>
   237b4:	cmp	r5, #2
   237b8:	beq	237d4 <ptr_set_visit@@Base+0x3d0>
   237bc:	mov	r2, r5
   237c0:	mov	r1, r8
   237c4:	mov	r0, r7
   237c8:	bl	234ac <ptr_set_visit@@Base+0xa8>
   237cc:	cmp	r0, #0
   237d0:	bne	2377c <ptr_set_visit@@Base+0x378>
   237d4:	and	r3, r6, r4
   237d8:	add	r4, r4, #1
   237dc:	b	237a8 <ptr_set_visit@@Base+0x3a4>
   237e0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237e4:	ldr	sl, [r0]
   237e8:	cmp	sl, #0
   237ec:	bne	237fc <ptr_set_visit@@Base+0x3f8>
   237f0:	mov	r6, #0
   237f4:	mov	r0, r6
   237f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237fc:	mov	r8, r1
   23800:	ldr	r7, [r0, #12]
   23804:	mov	r5, r0
   23808:	mov	r1, r2
   2380c:	mov	r0, r8
   23810:	mov	r9, r2
   23814:	bl	2347c <ptr_set_visit@@Base+0x78>
   23818:	sub	r7, r7, #1
   2381c:	and	r3, r7, r0
   23820:	add	r4, r0, #1
   23824:	ldr	r6, [sl, r3, lsl #2]
   23828:	add	fp, sl, r3, lsl #2
   2382c:	cmp	r6, #0
   23830:	beq	237f0 <ptr_set_visit@@Base+0x3ec>
   23834:	cmp	r6, #2
   23838:	beq	2386c <ptr_set_visit@@Base+0x468>
   2383c:	mov	r2, r6
   23840:	mov	r1, r9
   23844:	mov	r0, r8
   23848:	bl	234ac <ptr_set_visit@@Base+0xa8>
   2384c:	cmp	r0, #0
   23850:	beq	2386c <ptr_set_visit@@Base+0x468>
   23854:	mov	r3, #2
   23858:	str	r3, [fp]
   2385c:	ldr	r3, [r5, #8]
   23860:	sub	r3, r3, #1
   23864:	str	r3, [r5, #8]
   23868:	b	237f4 <ptr_set_visit@@Base+0x3f0>
   2386c:	and	r3, r7, r4
   23870:	add	r4, r4, #1
   23874:	b	23824 <ptr_set_visit@@Base+0x420>

00023878 <fb_symbol_table_clear@@Base>:
   23878:	b	23450 <ptr_set_visit@@Base+0x4c>

0002387c <fb_symbol_table_destroy@@Base>:
   2387c:	cmp	r1, #0
   23880:	push	{r4, lr}
   23884:	mov	r4, r0
   23888:	beq	23890 <fb_symbol_table_destroy@@Base+0x14>
   2388c:	bl	23408 <ptr_set_visit@@Base+0x4>
   23890:	mov	r0, r4
   23894:	pop	{r4, lr}
   23898:	b	23450 <ptr_set_visit@@Base+0x4c>

0002389c <fb_symbol_table_init@@Base>:
   2389c:	push	{r4, r5, r6, lr}
   238a0:	mov	r2, #179	; 0xb3
   238a4:	mov	r5, r0
   238a8:	mov	r4, #4
   238ac:	mul	r3, r2, r4
   238b0:	cmp	r1, r3, lsr #8
   238b4:	bhi	238e4 <fb_symbol_table_init@@Base+0x48>
   238b8:	mov	r1, #4
   238bc:	mov	r0, r4
   238c0:	bl	13fe8 <calloc@plt>
   238c4:	cmp	r0, #0
   238c8:	str	r0, [r5]
   238cc:	movne	r0, #0
   238d0:	strne	r0, [r5, #4]
   238d4:	strne	r4, [r5, #12]
   238d8:	strne	r0, [r5, #8]
   238dc:	mvneq	r0, #0
   238e0:	pop	{r4, r5, r6, pc}
   238e4:	lsl	r4, r4, #1
   238e8:	b	238ac <fb_symbol_table_init@@Base+0x10>

000238ec <fb_symbol_table_resize@@Base>:
   238ec:	b	2368c <ptr_set_visit@@Base+0x288>

000238f0 <fb_symbol_table_insert@@Base>:
   238f0:	b	234e0 <ptr_set_visit@@Base+0xdc>

000238f4 <fb_symbol_table_insert_item@@Base>:
   238f4:	ldr	ip, [r1, #4]
   238f8:	push	{r0, r1, r2, lr}
   238fc:	mov	r3, r1
   23900:	str	r2, [sp]
   23904:	ldm	ip, {r1, r2}
   23908:	bl	234e0 <ptr_set_visit@@Base+0xdc>
   2390c:	add	sp, sp, #12
   23910:	pop	{pc}		; (ldr pc, [sp], #4)

00023914 <fb_symbol_table_find@@Base>:
   23914:	b	23768 <ptr_set_visit@@Base+0x364>

00023918 <fb_symbol_table_find_item@@Base>:
   23918:	ldr	r3, [r1, #4]
   2391c:	ldm	r3, {r1, r2}
   23920:	b	23768 <ptr_set_visit@@Base+0x364>

00023924 <fb_symbol_table_remove@@Base>:
   23924:	b	237e0 <ptr_set_visit@@Base+0x3dc>

00023928 <fb_symbol_table_remove_item@@Base>:
   23928:	ldr	r3, [r1, #4]
   2392c:	ldm	r3, {r1, r2}
   23930:	b	237e0 <ptr_set_visit@@Base+0x3dc>

00023934 <fb_symbol_table_visit@@Base>:
   23934:	b	23408 <ptr_set_visit@@Base+0x4>
   23938:	push	{r4, r5, r6, r7, r8, lr}
   2393c:	mov	r5, r0
   23940:	ldr	r6, [r0]
   23944:	mov	r7, r1
   23948:	mov	r8, r2
   2394c:	mov	r4, #0
   23950:	ldr	r3, [r5, #12]
   23954:	cmp	r4, r3
   23958:	bcc	23960 <fb_symbol_table_visit@@Base+0x2c>
   2395c:	pop	{r4, r5, r6, r7, r8, pc}
   23960:	ldr	r1, [r6, r4, lsl #2]
   23964:	cmp	r1, #0
   23968:	cmpne	r1, #2
   2396c:	beq	23978 <fb_symbol_table_visit@@Base+0x44>
   23970:	mov	r0, r8
   23974:	blx	r7
   23978:	add	r4, r4, #1
   2397c:	b	23950 <fb_symbol_table_visit@@Base+0x1c>
   23980:	push	{r4, lr}
   23984:	mov	r4, r0
   23988:	ldr	r0, [r0]
   2398c:	cmp	r0, #0
   23990:	beq	23998 <fb_symbol_table_visit@@Base+0x64>
   23994:	bl	14018 <free@plt>
   23998:	mov	r0, r4
   2399c:	mov	r2, #16
   239a0:	mov	r1, #0
   239a4:	pop	{r4, lr}
   239a8:	b	140fc <memset@plt>
   239ac:	cmp	r1, #0
   239b0:	push	{r4, r5, r6, lr}
   239b4:	movgt	r5, r0
   239b8:	movgt	r0, r2
   239bc:	bgt	23aa4 <fb_symbol_table_visit@@Base+0x170>
   239c0:	mov	r6, r1
   239c4:	mov	r5, r0
   239c8:	mov	r4, r2
   239cc:	adds	r0, r4, #0
   239d0:	movne	r0, #1
   239d4:	adds	r2, r5, #0
   239d8:	movne	r2, #1
   239dc:	tst	r0, r2
   239e0:	bne	239f0 <fb_symbol_table_visit@@Base+0xbc>
   239e4:	orr	r0, r0, r2
   239e8:	eor	r0, r0, #1
   239ec:	pop	{r4, r5, r6, pc}
   239f0:	ldr	r3, [r4, #4]
   239f4:	ldr	r1, [r5, #4]
   239f8:	ldr	r2, [r3, #4]
   239fc:	ldr	r0, [r1, #4]
   23a00:	cmp	r2, r0
   23a04:	bne	23ab0 <fb_symbol_table_visit@@Base+0x17c>
   23a08:	ldr	r1, [r1]
   23a0c:	ldr	r0, [r3]
   23a10:	bl	1418c <strncmp@plt>
   23a14:	cmp	r0, #0
   23a18:	bne	23ab0 <fb_symbol_table_visit@@Base+0x17c>
   23a1c:	adds	r6, r6, #1
   23a20:	ldr	r4, [r4]
   23a24:	ldr	r5, [r5]
   23a28:	bne	239cc <fb_symbol_table_visit@@Base+0x98>
   23a2c:	clz	r0, r4
   23a30:	lsr	r0, r0, #5
   23a34:	pop	{r4, r5, r6, pc}
   23a38:	ldr	r3, [r0, #4]
   23a3c:	ldr	ip, [r3]
   23a40:	ldr	r3, [r3, #4]
   23a44:	cmp	r3, r1
   23a48:	bhi	23ab0 <fb_symbol_table_visit@@Base+0x17c>
   23a4c:	mov	r2, #0
   23a50:	cmp	r3, r2
   23a54:	bne	23a6c <fb_symbol_table_visit@@Base+0x138>
   23a58:	cmp	r1, r3
   23a5c:	bne	23a84 <fb_symbol_table_visit@@Base+0x150>
   23a60:	ldr	r0, [r0]
   23a64:	clz	r0, r0
   23a68:	b	23a30 <fb_symbol_table_visit@@Base+0xfc>
   23a6c:	ldrb	r4, [ip, r2]
   23a70:	ldrb	lr, [r5, r2]
   23a74:	cmp	r4, lr
   23a78:	bne	23ab0 <fb_symbol_table_visit@@Base+0x17c>
   23a7c:	add	r2, r2, #1
   23a80:	b	23a50 <fb_symbol_table_visit@@Base+0x11c>
   23a84:	ldrb	r2, [r5, r3]
   23a88:	cmp	r2, #46	; 0x2e
   23a8c:	bne	23ab0 <fb_symbol_table_visit@@Base+0x17c>
   23a90:	mvn	r2, r3
   23a94:	ldr	r0, [r0]
   23a98:	add	r3, r3, #1
   23a9c:	add	r1, r1, r2
   23aa0:	add	r5, r5, r3
   23aa4:	cmp	r0, #0
   23aa8:	bne	23a38 <fb_symbol_table_visit@@Base+0x104>
   23aac:	pop	{r4, r5, r6, pc}
   23ab0:	mov	r0, #0
   23ab4:	pop	{r4, r5, r6, pc}
   23ab8:	cmp	r1, #0
   23abc:	push	{r4, r5, r6, r7, r8, lr}
   23ac0:	ble	23b80 <fb_symbol_table_visit@@Base+0x24c>
   23ac4:	ldr	r7, [pc, #248]	; 23bc4 <fb_symbol_table_visit@@Base+0x290>
   23ac8:	ldr	r5, [pc, #248]	; 23bc8 <fb_symbol_table_visit@@Base+0x294>
   23acc:	ldr	r6, [pc, #248]	; 23bcc <fb_symbol_table_visit@@Base+0x298>
   23ad0:	mov	r3, r0
   23ad4:	mov	r0, #0
   23ad8:	mov	r2, #0
   23adc:	cmp	r1, r2
   23ae0:	bne	23ba4 <fb_symbol_table_visit@@Base+0x270>
   23ae4:	sub	r4, r2, #1
   23ae8:	add	r4, r3, r4
   23aec:	mov	lr, r3
   23af0:	mov	ip, r7
   23af4:	cmp	r4, lr
   23af8:	beq	23b08 <fb_symbol_table_visit@@Base+0x1d4>
   23afc:	ldrb	r8, [lr], #1
   23b00:	cmp	r8, #0
   23b04:	bne	23bb8 <fb_symbol_table_visit@@Base+0x284>
   23b08:	eor	r0, r0, r5
   23b0c:	eor	r0, r0, ip
   23b10:	cmp	r1, r2
   23b14:	mul	r0, r6, r0
   23b18:	popeq	{r4, r5, r6, r7, r8, pc}
   23b1c:	mvn	ip, r2
   23b20:	add	r2, r2, #1
   23b24:	add	r1, r1, ip
   23b28:	add	r3, r3, r2
   23b2c:	b	23ad8 <fb_symbol_table_visit@@Base+0x1a4>
   23b30:	ldr	r2, [r3, #4]
   23b34:	ldm	r2, {r1, ip}
   23b38:	mov	r2, r4
   23b3c:	sub	ip, ip, #1
   23b40:	add	ip, r1, ip
   23b44:	cmp	r1, ip
   23b48:	beq	23b58 <fb_symbol_table_visit@@Base+0x224>
   23b4c:	ldrb	r7, [r1], #1
   23b50:	cmp	r7, #0
   23b54:	bne	23b74 <fb_symbol_table_visit@@Base+0x240>
   23b58:	eor	r0, r0, r5
   23b5c:	eor	r0, r0, r2
   23b60:	adds	lr, lr, #1
   23b64:	mul	r0, r6, r0
   23b68:	ldr	r3, [r3]
   23b6c:	bne	23b98 <fb_symbol_table_visit@@Base+0x264>
   23b70:	pop	{r4, r5, r6, r7, r8, pc}
   23b74:	add	r2, r2, r2, lsl #5
   23b78:	eor	r2, r2, r7
   23b7c:	b	23b44 <fb_symbol_table_visit@@Base+0x210>
   23b80:	ldr	r4, [pc, #60]	; 23bc4 <fb_symbol_table_visit@@Base+0x290>
   23b84:	ldr	r5, [pc, #60]	; 23bc8 <fb_symbol_table_visit@@Base+0x294>
   23b88:	ldr	r6, [pc, #60]	; 23bcc <fb_symbol_table_visit@@Base+0x298>
   23b8c:	mov	r3, r0
   23b90:	mov	lr, r1
   23b94:	mov	r0, #0
   23b98:	cmp	r3, #0
   23b9c:	bne	23b30 <fb_symbol_table_visit@@Base+0x1fc>
   23ba0:	pop	{r4, r5, r6, r7, r8, pc}
   23ba4:	ldrb	ip, [r3, r2]
   23ba8:	cmp	ip, #46	; 0x2e
   23bac:	beq	23ae4 <fb_symbol_table_visit@@Base+0x1b0>
   23bb0:	add	r2, r2, #1
   23bb4:	b	23adc <fb_symbol_table_visit@@Base+0x1a8>
   23bb8:	add	ip, ip, ip, lsl #5
   23bbc:	eor	ip, ip, r8
   23bc0:	b	23af4 <fb_symbol_table_visit@@Base+0x1c0>
   23bc4:	svccs	0x00692e57
   23bc8:	svccs	0x00693b52
   23bcc:			; <UNDEFINED> instruction: 0x9e3779b1
   23bd0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bd4:	subs	r8, r3, #0
   23bd8:	str	r1, [sp]
   23bdc:	bne	23bf4 <fb_symbol_table_visit@@Base+0x2c0>
   23be0:	ldr	r3, [pc, #372]	; 23d5c <fb_symbol_table_visit@@Base+0x428>
   23be4:	ldr	r1, [pc, #372]	; 23d60 <fb_symbol_table_visit@@Base+0x42c>
   23be8:	ldr	r0, [pc, #372]	; 23d64 <fb_symbol_table_visit@@Base+0x430>
   23bec:	mov	r2, #114	; 0x72
   23bf0:	bl	141a4 <__assert_fail@plt>
   23bf4:	cmp	r8, #2
   23bf8:	ldreq	r3, [pc, #348]	; 23d5c <fb_symbol_table_visit@@Base+0x428>
   23bfc:	moveq	r2, #115	; 0x73
   23c00:	ldreq	r1, [pc, #344]	; 23d60 <fb_symbol_table_visit@@Base+0x42c>
   23c04:	ldreq	r0, [pc, #348]	; 23d68 <fb_symbol_table_visit@@Base+0x434>
   23c08:	beq	23bf0 <fb_symbol_table_visit@@Base+0x2bc>
   23c0c:	cmp	r8, #1
   23c10:	ldreq	r3, [pc, #324]	; 23d5c <fb_symbol_table_visit@@Base+0x428>
   23c14:	moveq	r2, #116	; 0x74
   23c18:	ldreq	r1, [pc, #320]	; 23d60 <fb_symbol_table_visit@@Base+0x42c>
   23c1c:	ldreq	r0, [pc, #328]	; 23d6c <fb_symbol_table_visit@@Base+0x438>
   23c20:	beq	23bf0 <fb_symbol_table_visit@@Base+0x2bc>
   23c24:	mov	fp, r2
   23c28:	ldr	r2, [r0, #12]
   23c2c:	mov	r3, #179	; 0xb3
   23c30:	ldr	r1, [r0, #8]
   23c34:	mul	r3, r3, r2
   23c38:	mov	r6, r0
   23c3c:	cmp	r1, r3, lsr #8
   23c40:	bcc	23c70 <fb_symbol_table_visit@@Base+0x33c>
   23c44:	lsl	r1, r1, #1
   23c48:	bl	23d7c <fb_symbol_table_visit@@Base+0x448>
   23c4c:	cmp	r0, #0
   23c50:	beq	23c70 <fb_symbol_table_visit@@Base+0x33c>
   23c54:	ldr	r3, [pc, #276]	; 23d70 <fb_symbol_table_visit@@Base+0x43c>
   23c58:	ldr	r2, [pc, #276]	; 23d74 <fb_symbol_table_visit@@Base+0x440>
   23c5c:	ldr	r1, [pc, #276]	; 23d78 <fb_symbol_table_visit@@Base+0x444>
   23c60:	ldr	r0, [r3]
   23c64:	bl	140e4 <fprintf@plt>
   23c68:	mov	r0, #1
   23c6c:	bl	140c0 <exit@plt>
   23c70:	mov	r1, fp
   23c74:	ldr	r0, [sp]
   23c78:	bl	23ab8 <fb_symbol_table_visit@@Base+0x184>
   23c7c:	ldr	r3, [sp, #48]	; 0x30
   23c80:	ldr	r9, [r6, #12]
   23c84:	sub	r3, r3, #2
   23c88:	cmp	r3, #1
   23c8c:	sub	r9, r9, #1
   23c90:	ldrls	r3, [r6, #8]
   23c94:	ldr	sl, [r6]
   23c98:	addls	r3, r3, #1
   23c9c:	movhi	r7, #0
   23ca0:	strls	r3, [r6, #8]
   23ca4:	and	r2, r9, r0
   23ca8:	add	r4, r0, #1
   23cac:	bls	23ce4 <fb_symbol_table_visit@@Base+0x3b0>
   23cb0:	ldr	r5, [sl, r2, lsl #2]
   23cb4:	add	r3, sl, r2, lsl #2
   23cb8:	cmp	r5, #0
   23cbc:	bne	23d08 <fb_symbol_table_visit@@Base+0x3d4>
   23cc0:	cmp	r7, #0
   23cc4:	moveq	r7, r3
   23cc8:	ldr	r3, [r6, #8]
   23ccc:	add	r3, r3, #1
   23cd0:	str	r3, [r6, #8]
   23cd4:	str	r8, [r7]
   23cd8:	b	23d50 <fb_symbol_table_visit@@Base+0x41c>
   23cdc:	and	r2, r4, r9
   23ce0:	add	r4, r4, #1
   23ce4:	ldr	r5, [sl, r2, lsl #2]
   23ce8:	add	r3, sl, r2, lsl #2
   23cec:	cmp	r5, #0
   23cf0:	cmpne	r5, #2
   23cf4:	movne	r5, #1
   23cf8:	moveq	r5, #0
   23cfc:	bne	23cdc <fb_symbol_table_visit@@Base+0x3a8>
   23d00:	str	r8, [r3]
   23d04:	b	23d50 <fb_symbol_table_visit@@Base+0x41c>
   23d08:	cmp	r5, #2
   23d0c:	bne	23d24 <fb_symbol_table_visit@@Base+0x3f0>
   23d10:	cmp	r7, #0
   23d14:	moveq	r7, r3
   23d18:	and	r2, r9, r4
   23d1c:	add	r4, r4, #1
   23d20:	b	23cb0 <fb_symbol_table_visit@@Base+0x37c>
   23d24:	ldr	r2, [r5]
   23d28:	mov	r1, fp
   23d2c:	ldr	r0, [sp]
   23d30:	str	r3, [sp, #4]
   23d34:	bl	239ac <fb_symbol_table_visit@@Base+0x78>
   23d38:	ldr	r3, [sp, #4]
   23d3c:	cmp	r0, #0
   23d40:	beq	23d18 <fb_symbol_table_visit@@Base+0x3e4>
   23d44:	ldr	r2, [sp, #48]	; 0x30
   23d48:	cmp	r2, #0
   23d4c:	beq	23d00 <fb_symbol_table_visit@@Base+0x3cc>
   23d50:	mov	r0, r5
   23d54:	add	sp, sp, #12
   23d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d5c:	andeq	r8, r4, r0, asr #32
   23d60:	andeq	r7, r4, r0, lsr pc
   23d64:	andeq	r7, r4, r0, lsl #31
   23d68:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   23d6c:	andeq	r7, r4, lr, lsr #31
   23d70:	strheq	ip, [r5], -r0
   23d74:	andeq	r7, r4, r3, asr #31
   23d78:	strdeq	r7, [r4], -r6
   23d7c:	ldr	r3, [r0, #8]
   23d80:	push	{r4, r5, r6, r7, r8, lr}
   23d84:	cmp	r1, r3
   23d88:	ldr	r7, [r0]
   23d8c:	sub	sp, sp, #24
   23d90:	mov	r4, r0
   23d94:	movcc	r1, r3
   23d98:	mov	r6, #4
   23d9c:	mov	r2, #179	; 0xb3
   23da0:	mul	r3, r2, r6
   23da4:	cmp	r1, r3, lsr #8
   23da8:	bhi	23e28 <fb_symbol_table_visit@@Base+0x4f4>
   23dac:	mov	r1, #4
   23db0:	mov	r0, r6
   23db4:	bl	13fe8 <calloc@plt>
   23db8:	cmp	r0, #0
   23dbc:	str	r0, [sp, #8]
   23dc0:	mvneq	r0, #0
   23dc4:	beq	23e20 <fb_symbol_table_visit@@Base+0x4ec>
   23dc8:	mov	r5, #0
   23dcc:	str	r6, [sp, #20]
   23dd0:	mov	r8, r5
   23dd4:	mov	r6, #3
   23dd8:	str	r5, [sp, #12]
   23ddc:	str	r5, [sp, #16]
   23de0:	ldr	r3, [r4, #12]
   23de4:	cmp	r5, r3
   23de8:	bcc	23e30 <fb_symbol_table_visit@@Base+0x4fc>
   23dec:	mov	r0, r4
   23df0:	bl	23980 <fb_symbol_table_visit@@Base+0x4c>
   23df4:	add	r2, sp, #8
   23df8:	add	ip, sp, #24
   23dfc:	mov	r3, r2
   23e00:	add	r4, r4, #8
   23e04:	ldm	r3!, {r0, r1}
   23e08:	cmp	r3, ip
   23e0c:	str	r0, [r4, #-8]
   23e10:	str	r1, [r4, #-4]
   23e14:	mov	r2, r3
   23e18:	bne	23dfc <fb_symbol_table_visit@@Base+0x4c8>
   23e1c:	mov	r0, #0
   23e20:	add	sp, sp, #24
   23e24:	pop	{r4, r5, r6, r7, r8, pc}
   23e28:	lsl	r6, r6, #1
   23e2c:	b	23da0 <fb_symbol_table_visit@@Base+0x46c>
   23e30:	ldr	r3, [r7, r5, lsl #2]
   23e34:	cmp	r3, #0
   23e38:	cmpne	r3, #2
   23e3c:	beq	23e54 <fb_symbol_table_visit@@Base+0x520>
   23e40:	str	r6, [sp]
   23e44:	mov	r2, r8
   23e48:	ldr	r1, [r3]
   23e4c:	add	r0, sp, #8
   23e50:	bl	23bd0 <fb_symbol_table_visit@@Base+0x29c>
   23e54:	add	r5, r5, #1
   23e58:	b	23de0 <fb_symbol_table_visit@@Base+0x4ac>
   23e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23e60:	ldr	r9, [r0]
   23e64:	cmp	r9, #0
   23e68:	moveq	r5, r9
   23e6c:	beq	23ea0 <fb_symbol_table_visit@@Base+0x56c>
   23e70:	mov	r7, r1
   23e74:	ldr	r6, [r0, #12]
   23e78:	mov	r1, r2
   23e7c:	mov	r0, r7
   23e80:	mov	r8, r2
   23e84:	bl	23ab8 <fb_symbol_table_visit@@Base+0x184>
   23e88:	sub	r6, r6, #1
   23e8c:	and	r3, r6, r0
   23e90:	add	r4, r0, #1
   23e94:	ldr	r5, [r9, r3, lsl #2]
   23e98:	cmp	r5, #0
   23e9c:	bne	23ea8 <fb_symbol_table_visit@@Base+0x574>
   23ea0:	mov	r0, r5
   23ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23ea8:	cmp	r5, #2
   23eac:	beq	23ec8 <fb_symbol_table_visit@@Base+0x594>
   23eb0:	ldr	r2, [r5]
   23eb4:	mov	r1, r8
   23eb8:	mov	r0, r7
   23ebc:	bl	239ac <fb_symbol_table_visit@@Base+0x78>
   23ec0:	cmp	r0, #0
   23ec4:	bne	23ea0 <fb_symbol_table_visit@@Base+0x56c>
   23ec8:	and	r3, r6, r4
   23ecc:	add	r4, r4, #1
   23ed0:	b	23e94 <fb_symbol_table_visit@@Base+0x560>
   23ed4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ed8:	ldr	r7, [r0]
   23edc:	cmp	r7, #0
   23ee0:	moveq	r6, r7
   23ee4:	beq	23f54 <fb_symbol_table_visit@@Base+0x620>
   23ee8:	mov	r9, r1
   23eec:	ldr	r8, [r0, #12]
   23ef0:	mov	r5, r0
   23ef4:	mov	r1, r2
   23ef8:	mov	r0, r9
   23efc:	mov	sl, r2
   23f00:	bl	23ab8 <fb_symbol_table_visit@@Base+0x184>
   23f04:	sub	r8, r8, #1
   23f08:	and	r3, r8, r0
   23f0c:	add	r4, r0, #1
   23f10:	ldr	r6, [r7, r3, lsl #2]
   23f14:	add	fp, r7, r3, lsl #2
   23f18:	cmp	r6, #0
   23f1c:	beq	23f54 <fb_symbol_table_visit@@Base+0x620>
   23f20:	cmp	r6, #2
   23f24:	beq	23f5c <fb_symbol_table_visit@@Base+0x628>
   23f28:	ldr	r2, [r6]
   23f2c:	mov	r1, sl
   23f30:	mov	r0, r9
   23f34:	bl	239ac <fb_symbol_table_visit@@Base+0x78>
   23f38:	cmp	r0, #0
   23f3c:	beq	23f5c <fb_symbol_table_visit@@Base+0x628>
   23f40:	mov	r3, #2
   23f44:	str	r3, [fp]
   23f48:	ldr	r3, [r5, #8]
   23f4c:	sub	r3, r3, #1
   23f50:	str	r3, [r5, #8]
   23f54:	mov	r0, r6
   23f58:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f5c:	and	r3, r8, r4
   23f60:	add	r4, r4, #1
   23f64:	b	23f10 <fb_symbol_table_visit@@Base+0x5dc>

00023f68 <fb_scope_table_clear@@Base>:
   23f68:	b	23980 <fb_symbol_table_visit@@Base+0x4c>

00023f6c <fb_scope_table_destroy@@Base>:
   23f6c:	cmp	r1, #0
   23f70:	push	{r4, lr}
   23f74:	mov	r4, r0
   23f78:	beq	23f80 <fb_scope_table_destroy@@Base+0x14>
   23f7c:	bl	23938 <fb_symbol_table_visit@@Base+0x4>
   23f80:	mov	r0, r4
   23f84:	pop	{r4, lr}
   23f88:	b	23980 <fb_symbol_table_visit@@Base+0x4c>

00023f8c <fb_scope_table_init@@Base>:
   23f8c:	push	{r4, r5, r6, lr}
   23f90:	mov	r2, #179	; 0xb3
   23f94:	mov	r5, r0
   23f98:	mov	r4, #4
   23f9c:	mul	r3, r2, r4
   23fa0:	cmp	r1, r3, lsr #8
   23fa4:	bhi	23fd4 <fb_scope_table_init@@Base+0x48>
   23fa8:	mov	r1, #4
   23fac:	mov	r0, r4
   23fb0:	bl	13fe8 <calloc@plt>
   23fb4:	cmp	r0, #0
   23fb8:	str	r0, [r5]
   23fbc:	movne	r0, #0
   23fc0:	strne	r0, [r5, #4]
   23fc4:	strne	r4, [r5, #12]
   23fc8:	strne	r0, [r5, #8]
   23fcc:	mvneq	r0, #0
   23fd0:	pop	{r4, r5, r6, pc}
   23fd4:	lsl	r4, r4, #1
   23fd8:	b	23f9c <fb_scope_table_init@@Base+0x10>

00023fdc <fb_scope_table_resize@@Base>:
   23fdc:	b	23d7c <fb_symbol_table_visit@@Base+0x448>

00023fe0 <fb_scope_table_insert@@Base>:
   23fe0:	b	23bd0 <fb_symbol_table_visit@@Base+0x29c>

00023fe4 <fb_scope_table_insert_item@@Base>:
   23fe4:	push	{r0, r1, r2, lr}
   23fe8:	mov	r3, r1
   23fec:	str	r2, [sp]
   23ff0:	mov	r2, #0
   23ff4:	ldr	r1, [r1]
   23ff8:	bl	23bd0 <fb_symbol_table_visit@@Base+0x29c>
   23ffc:	add	sp, sp, #12
   24000:	pop	{pc}		; (ldr pc, [sp], #4)

00024004 <fb_scope_table_find@@Base>:
   24004:	b	23e5c <fb_symbol_table_visit@@Base+0x528>

00024008 <fb_scope_table_find_item@@Base>:
   24008:	mov	r2, #0
   2400c:	ldr	r1, [r1]
   24010:	b	23e5c <fb_symbol_table_visit@@Base+0x528>

00024014 <fb_scope_table_remove@@Base>:
   24014:	b	23ed4 <fb_symbol_table_visit@@Base+0x5a0>

00024018 <fb_scope_table_remove_item@@Base>:
   24018:	mov	r2, #0
   2401c:	ldr	r1, [r1]
   24020:	b	23ed4 <fb_symbol_table_visit@@Base+0x5a0>

00024024 <fb_scope_table_visit@@Base>:
   24024:	b	23938 <fb_symbol_table_visit@@Base+0x4>
   24028:	push	{r4, r5, r6, r7, r8, lr}
   2402c:	mov	r5, r0
   24030:	ldr	r6, [r0]
   24034:	mov	r7, r1
   24038:	mov	r8, r2
   2403c:	mov	r4, #0
   24040:	ldr	r3, [r5, #12]
   24044:	cmp	r4, r3
   24048:	bcc	24050 <fb_scope_table_visit@@Base+0x2c>
   2404c:	pop	{r4, r5, r6, r7, r8, pc}
   24050:	ldr	r1, [r6, r4, lsl #2]
   24054:	cmp	r1, #0
   24058:	cmpne	r1, #2
   2405c:	beq	24068 <fb_scope_table_visit@@Base+0x44>
   24060:	mov	r0, r8
   24064:	blx	r7
   24068:	add	r4, r4, #1
   2406c:	b	24040 <fb_scope_table_visit@@Base+0x1c>
   24070:	push	{r4, lr}
   24074:	mov	r4, r0
   24078:	ldr	r0, [r0]
   2407c:	cmp	r0, #0
   24080:	beq	24088 <fb_scope_table_visit@@Base+0x64>
   24084:	bl	14018 <free@plt>
   24088:	mov	r0, r4
   2408c:	mov	r2, #16
   24090:	mov	r1, #0
   24094:	pop	{r4, lr}
   24098:	b	140fc <memset@plt>
   2409c:	push	{r0, r1, r2, r3, r4, lr}
   240a0:	add	r3, sp, #8
   240a4:	str	r3, [sp, #4]
   240a8:	ldr	r3, [pc, #24]	; 240c8 <fb_scope_table_visit@@Base+0xa4>
   240ac:	mov	r2, r1
   240b0:	str	r3, [sp]
   240b4:	mov	r3, #0
   240b8:	bl	2dec4 <cmetrohash64_1@@Base>
   240bc:	ldr	r0, [sp, #8]
   240c0:	add	sp, sp, #20
   240c4:	pop	{pc}		; (ldr pc, [sp], #4)
   240c8:	svccs	0x00693b52
   240cc:	ldr	ip, [r2, #148]	; 0x94
   240d0:	cmp	ip, r1
   240d4:	bne	240f8 <fb_scope_table_visit@@Base+0xd4>
   240d8:	mov	r3, r2
   240dc:	push	{r4, lr}
   240e0:	mov	r2, ip
   240e4:	ldr	r1, [r3, #144]	; 0x90
   240e8:	bl	1403c <memcmp@plt>
   240ec:	clz	r0, r0
   240f0:	lsr	r0, r0, #5
   240f4:	pop	{r4, pc}
   240f8:	mov	r0, #0
   240fc:	bx	lr
   24100:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24104:	subs	r8, r3, #0
   24108:	str	r1, [sp]
   2410c:	bne	24124 <fb_scope_table_visit@@Base+0x100>
   24110:	ldr	r3, [pc, #372]	; 2428c <fb_scope_table_visit@@Base+0x268>
   24114:	ldr	r1, [pc, #372]	; 24290 <fb_scope_table_visit@@Base+0x26c>
   24118:	ldr	r0, [pc, #372]	; 24294 <fb_scope_table_visit@@Base+0x270>
   2411c:	mov	r2, #114	; 0x72
   24120:	bl	141a4 <__assert_fail@plt>
   24124:	cmp	r8, #2
   24128:	ldreq	r3, [pc, #348]	; 2428c <fb_scope_table_visit@@Base+0x268>
   2412c:	moveq	r2, #115	; 0x73
   24130:	ldreq	r1, [pc, #344]	; 24290 <fb_scope_table_visit@@Base+0x26c>
   24134:	ldreq	r0, [pc, #348]	; 24298 <fb_scope_table_visit@@Base+0x274>
   24138:	beq	24120 <fb_scope_table_visit@@Base+0xfc>
   2413c:	cmp	r8, #1
   24140:	ldreq	r3, [pc, #324]	; 2428c <fb_scope_table_visit@@Base+0x268>
   24144:	moveq	r2, #116	; 0x74
   24148:	ldreq	r1, [pc, #320]	; 24290 <fb_scope_table_visit@@Base+0x26c>
   2414c:	ldreq	r0, [pc, #328]	; 2429c <fb_scope_table_visit@@Base+0x278>
   24150:	beq	24120 <fb_scope_table_visit@@Base+0xfc>
   24154:	mov	fp, r2
   24158:	ldr	r2, [r0, #12]
   2415c:	mov	r3, #179	; 0xb3
   24160:	ldr	r1, [r0, #8]
   24164:	mul	r3, r3, r2
   24168:	mov	r6, r0
   2416c:	cmp	r1, r3, lsr #8
   24170:	bcc	241a0 <fb_scope_table_visit@@Base+0x17c>
   24174:	lsl	r1, r1, #1
   24178:	bl	242ac <fb_scope_table_visit@@Base+0x288>
   2417c:	cmp	r0, #0
   24180:	beq	241a0 <fb_scope_table_visit@@Base+0x17c>
   24184:	ldr	r3, [pc, #276]	; 242a0 <fb_scope_table_visit@@Base+0x27c>
   24188:	ldr	r2, [pc, #276]	; 242a4 <fb_scope_table_visit@@Base+0x280>
   2418c:	ldr	r1, [pc, #276]	; 242a8 <fb_scope_table_visit@@Base+0x284>
   24190:	ldr	r0, [r3]
   24194:	bl	140e4 <fprintf@plt>
   24198:	mov	r0, #1
   2419c:	bl	140c0 <exit@plt>
   241a0:	mov	r1, fp
   241a4:	ldr	r0, [sp]
   241a8:	ldr	r9, [r6, #12]
   241ac:	ldr	sl, [r6]
   241b0:	bl	2409c <fb_scope_table_visit@@Base+0x78>
   241b4:	ldr	r3, [sp, #48]	; 0x30
   241b8:	sub	r9, r9, #1
   241bc:	sub	r3, r3, #2
   241c0:	cmp	r3, #1
   241c4:	movhi	r7, #0
   241c8:	ldrls	r3, [r6, #8]
   241cc:	addls	r3, r3, #1
   241d0:	strls	r3, [r6, #8]
   241d4:	and	r2, r9, r0
   241d8:	add	r4, r0, #1
   241dc:	bls	24214 <fb_scope_table_visit@@Base+0x1f0>
   241e0:	ldr	r5, [sl, r2, lsl #2]
   241e4:	add	r3, sl, r2, lsl #2
   241e8:	cmp	r5, #0
   241ec:	bne	24238 <fb_scope_table_visit@@Base+0x214>
   241f0:	cmp	r7, #0
   241f4:	moveq	r7, r3
   241f8:	ldr	r3, [r6, #8]
   241fc:	add	r3, r3, #1
   24200:	str	r3, [r6, #8]
   24204:	str	r8, [r7]
   24208:	b	24280 <fb_scope_table_visit@@Base+0x25c>
   2420c:	and	r2, r4, r9
   24210:	add	r4, r4, #1
   24214:	ldr	r5, [sl, r2, lsl #2]
   24218:	add	r3, sl, r2, lsl #2
   2421c:	cmp	r5, #0
   24220:	cmpne	r5, #2
   24224:	movne	r5, #1
   24228:	moveq	r5, #0
   2422c:	bne	2420c <fb_scope_table_visit@@Base+0x1e8>
   24230:	str	r8, [r3]
   24234:	b	24280 <fb_scope_table_visit@@Base+0x25c>
   24238:	cmp	r5, #2
   2423c:	bne	24254 <fb_scope_table_visit@@Base+0x230>
   24240:	cmp	r7, #0
   24244:	moveq	r7, r3
   24248:	and	r2, r9, r4
   2424c:	add	r4, r4, #1
   24250:	b	241e0 <fb_scope_table_visit@@Base+0x1bc>
   24254:	mov	r2, r5
   24258:	mov	r1, fp
   2425c:	ldr	r0, [sp]
   24260:	str	r3, [sp, #4]
   24264:	bl	240cc <fb_scope_table_visit@@Base+0xa8>
   24268:	ldr	r3, [sp, #4]
   2426c:	cmp	r0, #0
   24270:	beq	24248 <fb_scope_table_visit@@Base+0x224>
   24274:	ldr	r2, [sp, #48]	; 0x30
   24278:	cmp	r2, #0
   2427c:	beq	24230 <fb_scope_table_visit@@Base+0x20c>
   24280:	mov	r0, r5
   24284:	add	sp, sp, #12
   24288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2428c:	andeq	r8, r4, r8, asr r0
   24290:	andeq	r7, r4, r0, lsr pc
   24294:	andeq	r7, r4, r0, lsl #31
   24298:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   2429c:	andeq	r7, r4, lr, lsr #31
   242a0:	strheq	ip, [r5], -r0
   242a4:	andeq	r7, r4, r3, asr #31
   242a8:	strdeq	r7, [r4], -r6
   242ac:	ldr	r3, [r0, #8]
   242b0:	push	{r4, r5, r6, r7, lr}
   242b4:	cmp	r1, r3
   242b8:	ldr	r7, [r0]
   242bc:	sub	sp, sp, #28
   242c0:	mov	r4, r0
   242c4:	movcc	r1, r3
   242c8:	mov	r6, #4
   242cc:	mov	r2, #179	; 0xb3
   242d0:	mul	r3, r2, r6
   242d4:	cmp	r1, r3, lsr #8
   242d8:	bhi	24354 <fb_scope_table_visit@@Base+0x330>
   242dc:	mov	r1, #4
   242e0:	mov	r0, r6
   242e4:	bl	13fe8 <calloc@plt>
   242e8:	cmp	r0, #0
   242ec:	str	r0, [sp, #8]
   242f0:	mvneq	r0, #0
   242f4:	beq	2434c <fb_scope_table_visit@@Base+0x328>
   242f8:	str	r6, [sp, #20]
   242fc:	mov	r6, #3
   24300:	mov	r5, #0
   24304:	str	r5, [sp, #12]
   24308:	str	r5, [sp, #16]
   2430c:	ldr	r3, [r4, #12]
   24310:	cmp	r5, r3
   24314:	bcc	2435c <fb_scope_table_visit@@Base+0x338>
   24318:	mov	r0, r4
   2431c:	bl	24070 <fb_scope_table_visit@@Base+0x4c>
   24320:	add	r2, sp, #8
   24324:	add	ip, sp, #24
   24328:	mov	r3, r2
   2432c:	add	r4, r4, #8
   24330:	ldm	r3!, {r0, r1}
   24334:	cmp	r3, ip
   24338:	str	r0, [r4, #-8]
   2433c:	str	r1, [r4, #-4]
   24340:	mov	r2, r3
   24344:	bne	24328 <fb_scope_table_visit@@Base+0x304>
   24348:	mov	r0, #0
   2434c:	add	sp, sp, #28
   24350:	pop	{r4, r5, r6, r7, pc}
   24354:	lsl	r6, r6, #1
   24358:	b	242d0 <fb_scope_table_visit@@Base+0x2ac>
   2435c:	ldr	r3, [r7, r5, lsl #2]
   24360:	cmp	r3, #0
   24364:	cmpne	r3, #2
   24368:	beq	24380 <fb_scope_table_visit@@Base+0x35c>
   2436c:	str	r6, [sp]
   24370:	add	r0, sp, #8
   24374:	ldr	r2, [r3, #148]	; 0x94
   24378:	ldr	r1, [r3, #144]	; 0x90
   2437c:	bl	24100 <fb_scope_table_visit@@Base+0xdc>
   24380:	add	r5, r5, #1
   24384:	b	2430c <fb_scope_table_visit@@Base+0x2e8>
   24388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2438c:	ldr	r9, [r0]
   24390:	cmp	r9, #0
   24394:	bne	243a4 <fb_scope_table_visit@@Base+0x380>
   24398:	mov	r5, #0
   2439c:	mov	r0, r5
   243a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   243a4:	mov	r7, r1
   243a8:	ldr	r6, [r0, #12]
   243ac:	mov	r1, r2
   243b0:	mov	r0, r7
   243b4:	mov	r8, r2
   243b8:	bl	2409c <fb_scope_table_visit@@Base+0x78>
   243bc:	sub	r6, r6, #1
   243c0:	and	r3, r6, r0
   243c4:	add	r4, r0, #1
   243c8:	ldr	r5, [r9, r3, lsl #2]
   243cc:	cmp	r5, #0
   243d0:	beq	24398 <fb_scope_table_visit@@Base+0x374>
   243d4:	cmp	r5, #2
   243d8:	beq	243f4 <fb_scope_table_visit@@Base+0x3d0>
   243dc:	mov	r2, r5
   243e0:	mov	r1, r8
   243e4:	mov	r0, r7
   243e8:	bl	240cc <fb_scope_table_visit@@Base+0xa8>
   243ec:	cmp	r0, #0
   243f0:	bne	2439c <fb_scope_table_visit@@Base+0x378>
   243f4:	and	r3, r6, r4
   243f8:	add	r4, r4, #1
   243fc:	b	243c8 <fb_scope_table_visit@@Base+0x3a4>
   24400:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24404:	ldr	sl, [r0]
   24408:	cmp	sl, #0
   2440c:	bne	2441c <fb_scope_table_visit@@Base+0x3f8>
   24410:	mov	r6, #0
   24414:	mov	r0, r6
   24418:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2441c:	mov	r8, r1
   24420:	ldr	r7, [r0, #12]
   24424:	mov	r5, r0
   24428:	mov	r1, r2
   2442c:	mov	r0, r8
   24430:	mov	r9, r2
   24434:	bl	2409c <fb_scope_table_visit@@Base+0x78>
   24438:	sub	r7, r7, #1
   2443c:	and	r3, r7, r0
   24440:	add	r4, r0, #1
   24444:	ldr	r6, [sl, r3, lsl #2]
   24448:	add	fp, sl, r3, lsl #2
   2444c:	cmp	r6, #0
   24450:	beq	24410 <fb_scope_table_visit@@Base+0x3ec>
   24454:	cmp	r6, #2
   24458:	beq	2448c <fb_scope_table_visit@@Base+0x468>
   2445c:	mov	r2, r6
   24460:	mov	r1, r9
   24464:	mov	r0, r8
   24468:	bl	240cc <fb_scope_table_visit@@Base+0xa8>
   2446c:	cmp	r0, #0
   24470:	beq	2448c <fb_scope_table_visit@@Base+0x468>
   24474:	mov	r3, #2
   24478:	str	r3, [fp]
   2447c:	ldr	r3, [r5, #8]
   24480:	sub	r3, r3, #1
   24484:	str	r3, [r5, #8]
   24488:	b	24414 <fb_scope_table_visit@@Base+0x3f0>
   2448c:	and	r3, r7, r4
   24490:	add	r4, r4, #1
   24494:	b	24444 <fb_scope_table_visit@@Base+0x420>

00024498 <fb_schema_table_clear@@Base>:
   24498:	b	24070 <fb_scope_table_visit@@Base+0x4c>

0002449c <fb_schema_table_destroy@@Base>:
   2449c:	cmp	r1, #0
   244a0:	push	{r4, lr}
   244a4:	mov	r4, r0
   244a8:	beq	244b0 <fb_schema_table_destroy@@Base+0x14>
   244ac:	bl	24028 <fb_scope_table_visit@@Base+0x4>
   244b0:	mov	r0, r4
   244b4:	pop	{r4, lr}
   244b8:	b	24070 <fb_scope_table_visit@@Base+0x4c>

000244bc <fb_schema_table_init@@Base>:
   244bc:	push	{r4, r5, r6, lr}
   244c0:	mov	r2, #179	; 0xb3
   244c4:	mov	r5, r0
   244c8:	mov	r4, #4
   244cc:	mul	r3, r2, r4
   244d0:	cmp	r1, r3, lsr #8
   244d4:	bhi	24504 <fb_schema_table_init@@Base+0x48>
   244d8:	mov	r1, #4
   244dc:	mov	r0, r4
   244e0:	bl	13fe8 <calloc@plt>
   244e4:	cmp	r0, #0
   244e8:	str	r0, [r5]
   244ec:	movne	r0, #0
   244f0:	strne	r0, [r5, #4]
   244f4:	strne	r4, [r5, #12]
   244f8:	strne	r0, [r5, #8]
   244fc:	mvneq	r0, #0
   24500:	pop	{r4, r5, r6, pc}
   24504:	lsl	r4, r4, #1
   24508:	b	244cc <fb_schema_table_init@@Base+0x10>

0002450c <fb_schema_table_resize@@Base>:
   2450c:	b	242ac <fb_scope_table_visit@@Base+0x288>

00024510 <fb_schema_table_insert@@Base>:
   24510:	b	24100 <fb_scope_table_visit@@Base+0xdc>

00024514 <fb_schema_table_insert_item@@Base>:
   24514:	push	{r0, r1, r2, lr}
   24518:	mov	r3, r1
   2451c:	str	r2, [sp]
   24520:	ldr	r2, [r1, #148]	; 0x94
   24524:	ldr	r1, [r1, #144]	; 0x90
   24528:	bl	24100 <fb_scope_table_visit@@Base+0xdc>
   2452c:	add	sp, sp, #12
   24530:	pop	{pc}		; (ldr pc, [sp], #4)

00024534 <fb_schema_table_find@@Base>:
   24534:	b	24388 <fb_scope_table_visit@@Base+0x364>

00024538 <fb_schema_table_find_item@@Base>:
   24538:	ldr	r2, [r1, #148]	; 0x94
   2453c:	ldr	r1, [r1, #144]	; 0x90
   24540:	b	24388 <fb_scope_table_visit@@Base+0x364>

00024544 <fb_schema_table_remove@@Base>:
   24544:	b	24400 <fb_scope_table_visit@@Base+0x3dc>

00024548 <fb_schema_table_remove_item@@Base>:
   24548:	ldr	r2, [r1, #148]	; 0x94
   2454c:	ldr	r1, [r1, #144]	; 0x90
   24550:	b	24400 <fb_scope_table_visit@@Base+0x3dc>

00024554 <fb_schema_table_visit@@Base>:
   24554:	b	24028 <fb_scope_table_visit@@Base+0x4>

00024558 <__flatcc_fb_copy_path_n@@Base>:
   24558:	push	{r4, r5, r6, lr}
   2455c:	mov	r2, r1
   24560:	mov	r4, r1
   24564:	mov	r1, #0
   24568:	mov	r6, r0
   2456c:	bl	14120 <memchr@plt>
   24570:	cmp	r0, #0
   24574:	subne	r4, r0, r6
   24578:	add	r0, r4, #1
   2457c:	bl	14090 <malloc@plt>
   24580:	subs	r5, r0, #0
   24584:	beq	2459c <__flatcc_fb_copy_path_n@@Base+0x44>
   24588:	mov	r2, r4
   2458c:	mov	r1, r6
   24590:	bl	14024 <memcpy@plt>
   24594:	mov	r3, #0
   24598:	strb	r3, [r5, r4]
   2459c:	mov	r0, r5
   245a0:	pop	{r4, r5, r6, pc}

000245a4 <__flatcc_fb_copy_path@@Base>:
   245a4:	push	{r4, r5, r6, lr}
   245a8:	mov	r6, r0
   245ac:	bl	140cc <strlen@plt>
   245b0:	mov	r4, r0
   245b4:	add	r0, r0, #1
   245b8:	bl	14090 <malloc@plt>
   245bc:	subs	r5, r0, #0
   245c0:	beq	245d8 <__flatcc_fb_copy_path@@Base+0x34>
   245c4:	mov	r2, r4
   245c8:	mov	r1, r6
   245cc:	bl	14024 <memcpy@plt>
   245d0:	mov	r3, #0
   245d4:	strb	r3, [r5, r4]
   245d8:	mov	r0, r5
   245dc:	pop	{r4, r5, r6, pc}

000245e0 <__flatcc_fb_chomp@@Base>:
   245e0:	push	{r4, r5, r6, r7, r8, lr}
   245e4:	subs	r6, r2, #0
   245e8:	mov	r4, r1
   245ec:	beq	24620 <__flatcc_fb_chomp@@Base+0x40>
   245f0:	mov	r7, r0
   245f4:	mov	r0, r6
   245f8:	bl	140cc <strlen@plt>
   245fc:	cmp	r0, r4
   24600:	mov	r2, r0
   24604:	bcs	24620 <__flatcc_fb_chomp@@Base+0x40>
   24608:	sub	r5, r4, r0
   2460c:	mov	r1, r6
   24610:	add	r0, r7, r5
   24614:	bl	1418c <strncmp@plt>
   24618:	cmp	r0, #0
   2461c:	moveq	r4, r5
   24620:	mov	r0, r4
   24624:	pop	{r4, r5, r6, r7, r8, pc}

00024628 <__flatcc_fb_create_join_path_n@@Base>:
   24628:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2462c:	mov	r9, r0
   24630:	ldr	sl, [sp, #40]	; 0x28
   24634:	mov	r4, r1
   24638:	cmp	sl, #0
   2463c:	mov	fp, r2
   24640:	mov	r8, r3
   24644:	ldr	r5, [sp, #44]	; 0x2c
   24648:	moveq	r6, sl
   2464c:	beq	2465c <__flatcc_fb_create_join_path_n@@Base+0x34>
   24650:	mov	r0, sl
   24654:	bl	140cc <strlen@plt>
   24658:	mov	r6, r0
   2465c:	cmp	r9, #0
   24660:	moveq	r4, r9
   24664:	moveq	r5, r9
   24668:	beq	246c4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   2466c:	cmp	r8, #0
   24670:	beq	246a0 <__flatcc_fb_create_join_path_n@@Base+0x78>
   24674:	ldrb	r3, [fp]
   24678:	cmp	r3, #92	; 0x5c
   2467c:	cmpne	r3, #47	; 0x2f
   24680:	moveq	r3, #1
   24684:	movne	r3, #0
   24688:	beq	24734 <__flatcc_fb_create_join_path_n@@Base+0x10c>
   2468c:	cmp	r8, #1
   24690:	bls	246a0 <__flatcc_fb_create_join_path_n@@Base+0x78>
   24694:	ldrb	r2, [fp, #1]
   24698:	cmp	r2, #58	; 0x3a
   2469c:	beq	24740 <__flatcc_fb_create_join_path_n@@Base+0x118>
   246a0:	cmp	r5, #0
   246a4:	beq	246c4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   246a8:	cmp	r4, #0
   246ac:	beq	24738 <__flatcc_fb_create_join_path_n@@Base+0x110>
   246b0:	add	r3, r9, r4
   246b4:	ldrb	r3, [r3, #-1]
   246b8:	cmp	r3, #92	; 0x5c
   246bc:	cmpne	r3, #47	; 0x2f
   246c0:	moveq	r5, #0
   246c4:	add	r0, r8, #1
   246c8:	add	r0, r0, r6
   246cc:	add	r0, r0, r4
   246d0:	add	r0, r0, r5
   246d4:	bl	14090 <malloc@plt>
   246d8:	subs	r7, r0, #0
   246dc:	beq	2472c <__flatcc_fb_create_join_path_n@@Base+0x104>
   246e0:	mov	r2, r4
   246e4:	mov	r1, r9
   246e8:	bl	14024 <memcpy@plt>
   246ec:	cmp	r5, #0
   246f0:	movne	r3, #47	; 0x2f
   246f4:	mov	r2, r8
   246f8:	mov	r1, fp
   246fc:	strbne	r3, [r7, r4]
   24700:	addne	r4, r4, #1
   24704:	add	r0, r7, r4
   24708:	add	r4, r4, r8
   2470c:	bl	14024 <memcpy@plt>
   24710:	mov	r2, r6
   24714:	mov	r1, sl
   24718:	add	r0, r7, r4
   2471c:	add	r6, r7, r6
   24720:	bl	14024 <memcpy@plt>
   24724:	mov	r3, #0
   24728:	strb	r3, [r6, r4]
   2472c:	mov	r0, r7
   24730:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24734:	mov	r4, #0
   24738:	mov	r5, r4
   2473c:	b	246c4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   24740:	mov	r4, r3
   24744:	b	24738 <__flatcc_fb_create_join_path_n@@Base+0x110>

00024748 <__flatcc_fb_create_join_path@@Base>:
   24748:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2474c:	subs	r5, r0, #0
   24750:	mov	r4, r1
   24754:	mov	r7, r2
   24758:	mov	r8, r3
   2475c:	moveq	r6, r5
   24760:	beq	2476c <__flatcc_fb_create_join_path@@Base+0x24>
   24764:	bl	140cc <strlen@plt>
   24768:	mov	r6, r0
   2476c:	cmp	r4, #0
   24770:	moveq	r3, r4
   24774:	beq	24784 <__flatcc_fb_create_join_path@@Base+0x3c>
   24778:	mov	r0, r4
   2477c:	bl	140cc <strlen@plt>
   24780:	mov	r3, r0
   24784:	stm	sp, {r7, r8}
   24788:	mov	r2, r4
   2478c:	mov	r1, r6
   24790:	mov	r0, r5
   24794:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   24798:	add	sp, sp, #8
   2479c:	pop	{r4, r5, r6, r7, r8, pc}

000247a0 <__flatcc_fb_create_path_ext_n@@Base>:
   247a0:	mov	ip, #0
   247a4:	push	{r0, r1, r2, lr}
   247a8:	mov	r3, r1
   247ac:	stm	sp, {r2, ip}
   247b0:	mov	r1, ip
   247b4:	mov	r2, r0
   247b8:	mov	r0, ip
   247bc:	bl	24628 <__flatcc_fb_create_join_path_n@@Base>
   247c0:	add	sp, sp, #12
   247c4:	pop	{pc}		; (ldr pc, [sp], #4)

000247c8 <__flatcc_fb_create_path_ext@@Base>:
   247c8:	mov	r3, #0
   247cc:	mov	r2, r1
   247d0:	mov	r1, r0
   247d4:	mov	r0, r3
   247d8:	b	24748 <__flatcc_fb_create_join_path@@Base>

000247dc <__flatcc_fb_create_make_path_n@@Base>:
   247dc:	cmp	r1, #1
   247e0:	push	{r4, r5, r6, r7, r8, lr}
   247e4:	mov	r4, r0
   247e8:	bne	24824 <__flatcc_fb_create_make_path_n@@Base+0x48>
   247ec:	ldrb	r5, [r0]
   247f0:	cmp	r5, #92	; 0x5c
   247f4:	cmpne	r5, #32
   247f8:	bne	24830 <__flatcc_fb_create_make_path_n@@Base+0x54>
   247fc:	mov	r0, #3
   24800:	bl	14090 <malloc@plt>
   24804:	cmp	r0, #0
   24808:	popeq	{r4, r5, r6, r7, r8, pc}
   2480c:	mov	r3, #92	; 0x5c
   24810:	strb	r3, [r0]
   24814:	mov	r3, #0
   24818:	strb	r5, [r0, #1]
   2481c:	strb	r3, [r0, #2]
   24820:	pop	{r4, r5, r6, r7, r8, pc}
   24824:	movhi	r3, r0
   24828:	subhi	r6, r1, #1
   2482c:	bhi	2485c <__flatcc_fb_create_make_path_n@@Base+0x80>
   24830:	mov	r0, r4
   24834:	pop	{r4, r5, r6, r7, r8, lr}
   24838:	b	24558 <__flatcc_fb_copy_path_n@@Base>
   2483c:	ldrb	r2, [r3], #1
   24840:	cmp	r2, #92	; 0x5c
   24844:	bne	24854 <__flatcc_fb_create_make_path_n@@Base+0x78>
   24848:	ldrb	r0, [r3]
   2484c:	cmp	r0, #32
   24850:	addeq	r1, r1, #1
   24854:	cmp	r2, #32
   24858:	addeq	r1, r1, #1
   2485c:	sub	r2, r3, r4
   24860:	cmp	r2, r6
   24864:	bcc	2483c <__flatcc_fb_create_make_path_n@@Base+0x60>
   24868:	ldrb	r5, [r4, r6]
   2486c:	sub	r0, r5, #32
   24870:	clz	r0, r0
   24874:	lsr	r0, r0, #5
   24878:	add	r0, r0, #1
   2487c:	add	r0, r0, r1
   24880:	bl	14090 <malloc@plt>
   24884:	cmp	r0, #0
   24888:	movne	r2, r4
   2488c:	movne	r3, #0
   24890:	movne	lr, #92	; 0x5c
   24894:	bne	248a0 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   24898:	pop	{r4, r5, r6, r7, r8, pc}
   2489c:	mov	r3, r1
   248a0:	ldrb	r1, [r2], #1
   248a4:	add	ip, r3, #1
   248a8:	cmp	r1, #92	; 0x5c
   248ac:	bne	248f8 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   248b0:	ldrb	r7, [r2]
   248b4:	cmp	r7, #32
   248b8:	strbeq	r1, [r0, r3]
   248bc:	beq	24904 <__flatcc_fb_create_make_path_n@@Base+0x128>
   248c0:	sub	ip, r2, r4
   248c4:	cmp	r6, ip
   248c8:	strb	r1, [r0, r3]
   248cc:	add	r1, r3, #1
   248d0:	bhi	2489c <__flatcc_fb_create_make_path_n@@Base+0xc0>
   248d4:	cmp	r5, #32
   248d8:	moveq	r2, #92	; 0x5c
   248dc:	strbeq	r2, [r0, r1]
   248e0:	addeq	r1, r3, #2
   248e4:	mov	r3, r0
   248e8:	mov	r2, #0
   248ec:	strb	r5, [r3, r1]!
   248f0:	strb	r2, [r3, #1]
   248f4:	pop	{r4, r5, r6, r7, r8, pc}
   248f8:	cmp	r1, #32
   248fc:	bne	248c0 <__flatcc_fb_create_make_path_n@@Base+0xe4>
   24900:	strb	lr, [r0, r3]
   24904:	mov	r3, ip
   24908:	b	248c0 <__flatcc_fb_create_make_path_n@@Base+0xe4>

0002490c <__flatcc_fb_create_make_path@@Base>:
   2490c:	push	{r4, lr}
   24910:	mov	r4, r0
   24914:	bl	140cc <strlen@plt>
   24918:	mov	r1, r0
   2491c:	mov	r0, r4
   24920:	pop	{r4, lr}
   24924:	b	247dc <__flatcc_fb_create_make_path_n@@Base>

00024928 <__flatcc_fb_find_basename@@Base>:
   24928:	add	r1, r0, r1
   2492c:	cmp	r1, r0
   24930:	bne	2493c <__flatcc_fb_find_basename@@Base+0x14>
   24934:	sub	r0, r1, r0
   24938:	bx	lr
   2493c:	ldrb	r3, [r1, #-1]
   24940:	sub	r2, r1, #1
   24944:	cmp	r3, #92	; 0x5c
   24948:	cmpne	r3, #47	; 0x2f
   2494c:	beq	24934 <__flatcc_fb_find_basename@@Base+0xc>
   24950:	mov	r1, r2
   24954:	b	2492c <__flatcc_fb_find_basename@@Base+0x4>

00024958 <__flatcc_fb_create_basename@@Base>:
   24958:	push	{r4, r5, r6, lr}
   2495c:	mov	r5, r1
   24960:	mov	r6, r2
   24964:	mov	r4, r0
   24968:	bl	24928 <__flatcc_fb_find_basename@@Base>
   2496c:	mov	r2, r6
   24970:	add	r4, r4, r0
   24974:	sub	r1, r5, r0
   24978:	mov	r0, r4
   2497c:	bl	245e0 <__flatcc_fb_chomp@@Base>
   24980:	mov	r5, r0
   24984:	add	r0, r0, #1
   24988:	bl	14090 <malloc@plt>
   2498c:	subs	r6, r0, #0
   24990:	beq	249a8 <__flatcc_fb_create_basename@@Base+0x50>
   24994:	mov	r2, r5
   24998:	mov	r1, r4
   2499c:	bl	14024 <memcpy@plt>
   249a0:	mov	r3, #0
   249a4:	strb	r3, [r6, r5]
   249a8:	mov	r0, r6
   249ac:	pop	{r4, r5, r6, pc}

000249b0 <__flatcc_fb_read_file@@Base>:
   249b0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   249b4:	subs	r8, r2, #0
   249b8:	mov	r4, r1
   249bc:	ldr	r1, [pc, #208]	; 24a94 <__flatcc_fb_read_file@@Base+0xe4>
   249c0:	addeq	r8, sp, #4
   249c4:	bl	1400c <fopen@plt>
   249c8:	subs	r7, r0, #0
   249cc:	beq	24a8c <__flatcc_fb_read_file@@Base+0xdc>
   249d0:	mov	r2, #2
   249d4:	mov	r1, #0
   249d8:	bl	14174 <fseek@plt>
   249dc:	mov	r0, r7
   249e0:	bl	14030 <ftell@plt>
   249e4:	cmp	r4, #0
   249e8:	cmpne	r0, r4
   249ec:	mov	r5, r0
   249f0:	str	r0, [r8]
   249f4:	movhi	r4, #1
   249f8:	movls	r4, #0
   249fc:	bhi	24a24 <__flatcc_fb_read_file@@Base+0x74>
   24a00:	mov	r0, r7
   24a04:	bl	14048 <rewind@plt>
   24a08:	cmp	r5, #0
   24a0c:	movne	r0, r5
   24a10:	moveq	r0, #1
   24a14:	bl	14090 <malloc@plt>
   24a18:	subs	r6, r0, #0
   24a1c:	movne	r9, #1
   24a20:	bne	24a50 <__flatcc_fb_read_file@@Base+0xa0>
   24a24:	mov	r6, #0
   24a28:	mov	r0, r7
   24a2c:	bl	1412c <fclose@plt>
   24a30:	cmp	r6, #0
   24a34:	beq	24a40 <__flatcc_fb_read_file@@Base+0x90>
   24a38:	mov	r0, r6
   24a3c:	bl	14018 <free@plt>
   24a40:	str	r5, [r8]
   24a44:	mov	r6, #0
   24a48:	b	24a80 <__flatcc_fb_read_file@@Base+0xd0>
   24a4c:	add	r4, r4, r0
   24a50:	mov	r3, r7
   24a54:	sub	r2, r5, r4
   24a58:	mov	r1, r9
   24a5c:	add	r0, r6, r4
   24a60:	bl	14078 <fread@plt>
   24a64:	cmp	r0, #0
   24a68:	bne	24a4c <__flatcc_fb_read_file@@Base+0x9c>
   24a6c:	cmp	r4, r5
   24a70:	bne	24a28 <__flatcc_fb_read_file@@Base+0x78>
   24a74:	mov	r0, r7
   24a78:	bl	1412c <fclose@plt>
   24a7c:	str	r4, [r8]
   24a80:	mov	r0, r6
   24a84:	add	sp, sp, #12
   24a88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24a8c:	mov	r5, r7
   24a90:	b	24a40 <__flatcc_fb_read_file@@Base+0x90>
   24a94:	andeq	r8, r4, r0, ror r0
   24a98:	ldr	r3, [r0]
   24a9c:	mov	r2, #0
   24aa0:	cmp	r3, #0
   24aa4:	bne	24ab0 <__flatcc_fb_read_file@@Base+0x100>
   24aa8:	str	r2, [r0]
   24aac:	bx	lr
   24ab0:	ldr	r1, [r3]
   24ab4:	str	r2, [r3]
   24ab8:	mov	r2, r3
   24abc:	mov	r3, r1
   24ac0:	b	24aa0 <__flatcc_fb_read_file@@Base+0xf0>

00024ac4 <__flatcc_fb_default_error_out@@Base>:
   24ac4:	ldr	r3, [pc, #12]	; 24ad8 <__flatcc_fb_default_error_out@@Base+0x14>
   24ac8:	mov	r0, r1
   24acc:	mov	r1, #1
   24ad0:	ldr	r3, [r3]
   24ad4:	b	14060 <fwrite@plt>
   24ad8:	strheq	ip, [r5], -r0
   24adc:	add	r0, r1, #4
   24ae0:	b	23878 <fb_symbol_table_clear@@Base>
   24ae4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24ae8:	mov	r4, r0
   24aec:	mov	r6, r1
   24af0:	ldr	r1, [r4, #28]
   24af4:	mov	r7, #20
   24af8:	ldr	r0, [r0, #20]
   24afc:	mul	r7, r7, r1
   24b00:	mov	r5, r2
   24b04:	ldr	r2, [r4, #40]	; 0x28
   24b08:	mov	r8, r3
   24b0c:	add	r3, r0, r7
   24b10:	cmp	r3, r2
   24b14:	str	r3, [r4, #24]
   24b18:	bne	24b5c <__flatcc_fb_default_error_out@@Base+0x98>
   24b1c:	cmp	r1, #0
   24b20:	lslne	r1, r1, #1
   24b24:	moveq	r1, #1024	; 0x400
   24b28:	mov	r9, #20
   24b2c:	str	r1, [r4, #28]
   24b30:	mul	r1, r9, r1
   24b34:	bl	14054 <realloc@plt>
   24b38:	cmp	r0, #0
   24b3c:	str	r0, [r4, #20]
   24b40:	bne	24b48 <__flatcc_fb_default_error_out@@Base+0x84>
   24b44:	bl	141d4 <__assert_fail@plt+0x30>
   24b48:	ldr	r3, [r4, #28]
   24b4c:	mla	r3, r9, r3, r0
   24b50:	add	r0, r0, r7
   24b54:	str	r3, [r4, #24]
   24b58:	str	r0, [r4, #40]	; 0x28
   24b5c:	ldr	r1, [r4, #40]	; 0x28
   24b60:	ldr	r2, [r4, #60]	; 0x3c
   24b64:	sub	r8, r8, r5
   24b68:	str	r5, [r1]
   24b6c:	ldr	r3, [r4, #64]	; 0x40
   24b70:	sub	r5, r5, r2
   24b74:	add	r5, r5, #1
   24b78:	str	r6, [r1, #16]
   24b7c:	str	r8, [r1, #4]
   24b80:	str	r3, [r1, #8]
   24b84:	str	r5, [r1, #12]
   24b88:	add	r1, r1, #20
   24b8c:	str	r1, [r4, #40]	; 0x28
   24b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24b94:	mov	r3, r2
   24b98:	ldr	r2, [r0, #32]
   24b9c:	cmp	r2, #0
   24ba0:	bxeq	lr
   24ba4:	mov	r2, r1
   24ba8:	ldr	r1, [pc]	; 24bb0 <__flatcc_fb_default_error_out@@Base+0xec>
   24bac:	b	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   24bb0:			; <UNDEFINED> instruction: 0xfffffc3c
   24bb4:	push	{r4, r5, r6, lr}
   24bb8:	mov	r4, r0
   24bbc:	add	r1, r1, #15
   24bc0:	ldr	r0, [r0, #52]	; 0x34
   24bc4:	bic	r5, r1, #15
   24bc8:	ldr	r3, [r4, #44]	; 0x2c
   24bcc:	add	r2, r0, r5
   24bd0:	cmp	r2, r3
   24bd4:	bls	24c0c <__flatcc_fb_default_error_out@@Base+0x148>
   24bd8:	mov	r1, #1
   24bdc:	mov	r0, #65536	; 0x10000
   24be0:	bl	13fe8 <calloc@plt>
   24be4:	subs	r3, r0, #0
   24be8:	bne	24bf0 <__flatcc_fb_default_error_out@@Base+0x12c>
   24bec:	bl	141d4 <__assert_fail@plt+0x30>
   24bf0:	ldr	r2, [r4, #48]	; 0x30
   24bf4:	add	r0, r3, #16
   24bf8:	str	r2, [r3]
   24bfc:	str	r3, [r4, #48]	; 0x30
   24c00:	add	r3, r3, #65536	; 0x10000
   24c04:	str	r0, [r4, #52]	; 0x34
   24c08:	str	r3, [r4, #44]	; 0x2c
   24c0c:	ldr	r1, [r4, #52]	; 0x34
   24c10:	add	r5, r1, r5
   24c14:	str	r5, [r4, #52]	; 0x34
   24c18:	pop	{r4, r5, r6, pc}
   24c1c:	push	{r4, r5, r6, lr}
   24c20:	mov	r2, #0
   24c24:	mov	r5, r0
   24c28:	ldr	r0, [r0, #412]	; 0x19c
   24c2c:	mov	r6, r1
   24c30:	bl	24004 <fb_scope_table_find@@Base>
   24c34:	subs	r4, r0, #0
   24c38:	bne	24c70 <__flatcc_fb_default_error_out@@Base+0x1ac>
   24c3c:	mov	r1, #28
   24c40:	mov	r0, r5
   24c44:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   24c48:	add	r2, r5, #476	; 0x1dc
   24c4c:	mov	r3, r0
   24c50:	mov	r4, r0
   24c54:	ldm	r2, {r0, r1}
   24c58:	str	r6, [r3], #20
   24c5c:	mov	r2, #1
   24c60:	stm	r3, {r0, r1}
   24c64:	mov	r1, r4
   24c68:	ldr	r0, [r5, #412]	; 0x19c
   24c6c:	bl	23fe4 <fb_scope_table_insert_item@@Base>
   24c70:	mov	r0, r4
   24c74:	pop	{r4, r5, r6, pc}
   24c78:	push	{r4, r5, r6, lr}
   24c7c:	mov	r4, r0
   24c80:	mov	r6, #12
   24c84:	ldr	r3, [r4, #40]	; 0x28
   24c88:	ldr	r2, [r4, #24]
   24c8c:	add	r5, r3, #20
   24c90:	cmp	r5, r2
   24c94:	str	r5, [r4, #40]	; 0x28
   24c98:	bne	24cb4 <__flatcc_fb_default_error_out@@Base+0x1f0>
   24c9c:	str	r3, [r4, #40]	; 0x28
   24ca0:	ldr	r2, [pc, #64]	; 24ce8 <__flatcc_fb_default_error_out@@Base+0x224>
   24ca4:	ldr	r3, [pc, #64]	; 24cec <__flatcc_fb_default_error_out@@Base+0x228>
   24ca8:	ldr	r1, [pc, #64]	; 24cf0 <__flatcc_fb_default_error_out@@Base+0x22c>
   24cac:	ldr	r0, [pc, #64]	; 24cf4 <__flatcc_fb_default_error_out@@Base+0x230>
   24cb0:	bl	141a4 <__assert_fail@plt>
   24cb4:	ldr	r3, [r3, #36]	; 0x24
   24cb8:	cmn	r3, #964	; 0x3c4
   24cbc:	bne	24ce0 <__flatcc_fb_default_error_out@@Base+0x21c>
   24cc0:	mov	r1, r6
   24cc4:	mov	r0, r4
   24cc8:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   24ccc:	ldr	r3, [r4, #36]	; 0x24
   24cd0:	str	r5, [r0, #4]
   24cd4:	str	r3, [r0]
   24cd8:	str	r0, [r4, #36]	; 0x24
   24cdc:	b	24c84 <__flatcc_fb_default_error_out@@Base+0x1c0>
   24ce0:	mov	r0, r5
   24ce4:	pop	{r4, r5, r6, pc}
   24ce8:	andeq	r0, r0, r5, asr r1
   24cec:	andeq	r8, r4, r3, ror r0
   24cf0:	muleq	r4, r5, r1
   24cf4:	andeq	sl, r3, r9, asr #3
   24cf8:	push	{r4, lr}
   24cfc:	ldr	r4, [r0, #40]	; 0x28
   24d00:	ldr	r3, [r4, #16]
   24d04:	cmp	r3, r1
   24d08:	movne	r4, #0
   24d0c:	bne	24d14 <__flatcc_fb_default_error_out@@Base+0x250>
   24d10:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24d14:	mov	r0, r4
   24d18:	pop	{r4, pc}
   24d1c:	push	{r4, lr}
   24d20:	mov	r4, r0
   24d24:	ldr	r3, [r4, #40]	; 0x28
   24d28:	ldr	r3, [r3, #16]
   24d2c:	cmp	r3, #0
   24d30:	bne	24d38 <__flatcc_fb_default_error_out@@Base+0x274>
   24d34:	pop	{r4, pc}
   24d38:	cmp	r3, #59	; 0x3b
   24d3c:	bne	24d54 <__flatcc_fb_default_error_out@@Base+0x290>
   24d40:	mov	r0, r4
   24d44:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24d48:	mov	r3, #0
   24d4c:	str	r3, [r4, #36]	; 0x24
   24d50:	pop	{r4, pc}
   24d54:	cmp	r3, #125	; 0x7d
   24d58:	beq	24d48 <__flatcc_fb_default_error_out@@Base+0x284>
   24d5c:	mov	r0, r4
   24d60:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24d64:	b	24d24 <__flatcc_fb_default_error_out@@Base+0x260>
   24d68:	push	{r4, r5, r6, lr}
   24d6c:	mov	r4, r0
   24d70:	mov	r5, r1
   24d74:	ldr	r3, [r4, #40]	; 0x28
   24d78:	ldr	r3, [r3, #16]
   24d7c:	cmp	r3, #0
   24d80:	bne	24d88 <__flatcc_fb_default_error_out@@Base+0x2c4>
   24d84:	pop	{r4, r5, r6, pc}
   24d88:	cmp	r5, r3
   24d8c:	mov	r0, r4
   24d90:	bne	24da4 <__flatcc_fb_default_error_out@@Base+0x2e0>
   24d94:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24d98:	mov	r3, #0
   24d9c:	str	r3, [r4, #36]	; 0x24
   24da0:	pop	{r4, r5, r6, pc}
   24da4:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   24da8:	b	24d74 <__flatcc_fb_default_error_out@@Base+0x2b0>
   24dac:	push	{r4, r5, r6, lr}
   24db0:	mov	r6, r1
   24db4:	mov	r1, #120	; 0x78
   24db8:	mov	r5, r0
   24dbc:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   24dc0:	ldr	r3, [r6]
   24dc4:	str	r3, [r0]
   24dc8:	mov	r3, #5
   24dcc:	mov	r4, r0
   24dd0:	strh	r3, [r0, #8]
   24dd4:	str	r0, [r6]
   24dd8:	add	r0, r5, #36	; 0x24
   24ddc:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   24de0:	ldr	r3, [r5, #36]	; 0x24
   24de4:	mov	r0, r4
   24de8:	str	r3, [r4, #68]	; 0x44
   24dec:	mov	r3, #0
   24df0:	str	r3, [r5, #36]	; 0x24
   24df4:	pop	{r4, r5, r6, pc}

00024df8 <__flatcc_fb_print_error@@Base>:
   24df8:	push	{r1, r2, r3}
   24dfc:	mov	r1, #200	; 0xc8
   24e00:	push	{r4, r5, lr}
   24e04:	sub	sp, sp, #208	; 0xd0
   24e08:	add	r3, sp, #224	; 0xe0
   24e0c:	mov	r5, r0
   24e10:	ldr	r2, [sp, #220]	; 0xdc
   24e14:	add	r0, sp, #8
   24e18:	str	r3, [sp, #4]
   24e1c:	bl	1415c <vsnprintf@plt>
   24e20:	cmp	r0, #199	; 0xc7
   24e24:	movle	r4, r0
   24e28:	ble	24e3c <__flatcc_fb_print_error@@Base+0x44>
   24e2c:	ldr	r1, [pc, #48]	; 24e64 <__flatcc_fb_print_error@@Base+0x6c>
   24e30:	add	r0, sp, #203	; 0xcb
   24e34:	bl	1406c <strcpy@plt>
   24e38:	mov	r4, #199	; 0xc7
   24e3c:	ldr	r0, [r5, #12]
   24e40:	ldr	r3, [r5, #8]
   24e44:	mov	r2, r4
   24e48:	add	r1, sp, #8
   24e4c:	blx	r3
   24e50:	mov	r0, r4
   24e54:	add	sp, sp, #208	; 0xd0
   24e58:	pop	{r4, r5, lr}
   24e5c:	add	sp, sp, #12
   24e60:	bx	lr
   24e64:	andeq	r1, r3, r3, lsl #12

00024e68 <__flatcc_error_find_file_of_token@@Base>:
   24e68:	cmp	r0, #0
   24e6c:	bne	24e78 <__flatcc_error_find_file_of_token@@Base+0x10>
   24e70:	ldr	r0, [pc, #40]	; 24ea0 <__flatcc_error_find_file_of_token@@Base+0x38>
   24e74:	bx	lr
   24e78:	ldr	r3, [r0, #20]
   24e7c:	cmp	r3, r1
   24e80:	bhi	24e98 <__flatcc_error_find_file_of_token@@Base+0x30>
   24e84:	ldr	r3, [r0, #24]
   24e88:	cmp	r1, r3
   24e8c:	bcs	24e98 <__flatcc_error_find_file_of_token@@Base+0x30>
   24e90:	ldr	r0, [r0, #520]	; 0x208
   24e94:	bx	lr
   24e98:	ldr	r0, [r0]
   24e9c:	b	24e68 <__flatcc_error_find_file_of_token@@Base>
   24ea0:	andeq	r2, r3, sp, lsl pc

00024ea4 <__flatcc_error_report@@Base>:
   24ea4:	push	{r4, r5, r6, r7, r8, r9, lr}
   24ea8:	sub	sp, sp, #44	; 0x2c
   24eac:	mov	r6, r1
   24eb0:	ldr	r7, [sp, #72]	; 0x48
   24eb4:	adds	r1, r1, #0
   24eb8:	movne	r1, #1
   24ebc:	mov	r4, r3
   24ec0:	cmp	r7, #0
   24ec4:	movne	r3, #0
   24ec8:	andeq	r3, r1, #1
   24ecc:	cmp	r3, #0
   24ed0:	ldr	r8, [sp, #76]	; 0x4c
   24ed4:	ldmne	r6, {r7, r8}
   24ed8:	ldr	r3, [pc, #332]	; 2502c <__flatcc_error_report@@Base+0x188>
   24edc:	cmp	r2, #0
   24ee0:	moveq	r2, r3
   24ee4:	cmp	r7, #0
   24ee8:	moveq	r8, r7
   24eec:	moveq	r7, r3
   24ef0:	clz	r3, r4
   24ef4:	lsr	r3, r3, #5
   24ef8:	tst	r1, r3
   24efc:	mov	r5, r0
   24f00:	beq	24f38 <__flatcc_error_report@@Base+0x94>
   24f04:	mov	r1, r6
   24f08:	bl	24e68 <__flatcc_error_find_file_of_token@@Base>
   24f0c:	str	r7, [sp, #8]
   24f10:	str	r8, [sp, #4]
   24f14:	ldr	r1, [pc, #276]	; 25030 <__flatcc_error_report@@Base+0x18c>
   24f18:	str	r2, [sp, #12]
   24f1c:	ldr	r3, [r6, #12]
   24f20:	mov	r2, r0
   24f24:	str	r3, [sp]
   24f28:	ldr	r3, [r6, #8]
   24f2c:	mov	r0, r5
   24f30:	bl	24df8 <__flatcc_fb_print_error@@Base>
   24f34:	b	24fb0 <__flatcc_error_report@@Base+0x10c>
   24f38:	cmp	r4, #0
   24f3c:	moveq	r1, #0
   24f40:	andne	r1, r1, #1
   24f44:	cmp	r1, #0
   24f48:	beq	24fc4 <__flatcc_error_report@@Base+0x120>
   24f4c:	mov	r1, r6
   24f50:	bl	24e68 <__flatcc_error_find_file_of_token@@Base>
   24f54:	mov	r1, r4
   24f58:	mov	r9, r0
   24f5c:	mov	r0, r5
   24f60:	bl	24e68 <__flatcc_error_find_file_of_token@@Base>
   24f64:	ldr	r3, [r4]
   24f68:	str	r7, [sp, #8]
   24f6c:	str	r3, [sp, #32]
   24f70:	ldr	r3, [r4, #4]
   24f74:	str	r8, [sp, #4]
   24f78:	str	r3, [sp, #28]
   24f7c:	ldr	r3, [r4, #12]
   24f80:	ldr	r1, [pc, #172]	; 25034 <__flatcc_error_report@@Base+0x190>
   24f84:	str	r3, [sp, #24]
   24f88:	ldr	r3, [r4, #8]
   24f8c:	str	r3, [sp, #20]
   24f90:	str	r0, [sp, #16]
   24f94:	str	r2, [sp, #12]
   24f98:	ldr	r3, [r6, #12]
   24f9c:	mov	r2, r9
   24fa0:	str	r3, [sp]
   24fa4:	mov	r0, r5
   24fa8:	ldr	r3, [r6, #8]
   24fac:	bl	24df8 <__flatcc_fb_print_error@@Base>
   24fb0:	ldr	r3, [r5, #108]	; 0x6c
   24fb4:	add	r3, r3, #1
   24fb8:	str	r3, [r5, #108]	; 0x6c
   24fbc:	add	sp, sp, #44	; 0x2c
   24fc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24fc4:	cmp	r6, #0
   24fc8:	movne	r6, #0
   24fcc:	andeq	r6, r3, #1
   24fd0:	cmp	r6, #0
   24fd4:	beq	24fe4 <__flatcc_error_report@@Base+0x140>
   24fd8:	ldr	r1, [pc, #88]	; 25038 <__flatcc_error_report@@Base+0x194>
   24fdc:	bl	24df8 <__flatcc_fb_print_error@@Base>
   24fe0:	b	24fb0 <__flatcc_error_report@@Base+0x10c>
   24fe4:	cmp	r4, #0
   24fe8:	beq	25020 <__flatcc_error_report@@Base+0x17c>
   24fec:	mov	r1, r4
   24ff0:	bl	24e68 <__flatcc_error_find_file_of_token@@Base>
   24ff4:	ldr	r3, [r4]
   24ff8:	ldr	r1, [pc, #60]	; 2503c <__flatcc_error_report@@Base+0x198>
   24ffc:	str	r3, [sp, #12]
   25000:	ldr	r3, [r4, #4]
   25004:	str	r3, [sp, #8]
   25008:	ldr	r3, [r4, #12]
   2500c:	str	r3, [sp, #4]
   25010:	ldr	r3, [r4, #8]
   25014:	str	r3, [sp]
   25018:	mov	r3, r0
   2501c:	b	24f2c <__flatcc_error_report@@Base+0x88>
   25020:	ldr	r1, [pc, #24]	; 25040 <__flatcc_error_report@@Base+0x19c>
   25024:	bl	24df8 <__flatcc_fb_print_error@@Base>
   25028:	b	24fb0 <__flatcc_error_report@@Base+0x10c>
   2502c:	andeq	r2, r3, sp, lsl pc
   25030:	ldrdeq	r8, [r4], -fp
   25034:	strdeq	r8, [r4], -sl
   25038:	andeq	r8, r4, sp, lsr #4
   2503c:	andeq	r8, r4, r8, lsr r2
   25040:	andeq	r8, r4, r7, asr r2
   25044:	mov	r3, #0
   25048:	push	{r0, r1, r2, lr}
   2504c:	str	r3, [sp, #4]
   25050:	str	r3, [sp]
   25054:	bl	24ea4 <__flatcc_error_report@@Base>
   25058:	add	sp, sp, #12
   2505c:	pop	{pc}		; (ldr pc, [sp], #4)
   25060:	push	{r4, lr}
   25064:	ldr	r4, [r0, #40]	; 0x28
   25068:	ldr	r3, [r4, #16]
   2506c:	cmp	r3, r1
   25070:	bne	25080 <__flatcc_error_report@@Base+0x1dc>
   25074:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   25078:	mov	r0, r4
   2507c:	pop	{r4, pc}
   25080:	mov	r1, r4
   25084:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25088:	mov	r4, #0
   2508c:	b	25078 <__flatcc_error_report@@Base+0x1d4>
   25090:	push	{r4, r5, r6, r7, r8, lr}
   25094:	mov	r5, r1
   25098:	mov	r1, #12
   2509c:	ldr	r6, [r0, #40]	; 0x28
   250a0:	mov	r4, r0
   250a4:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   250a8:	mov	r7, #46	; 0x2e
   250ac:	mov	r8, #12
   250b0:	str	r6, [r0, #4]
   250b4:	str	r0, [r5]
   250b8:	mov	r0, r4
   250bc:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   250c0:	ldr	r6, [r5]
   250c4:	mov	r1, r7
   250c8:	mov	r0, r4
   250cc:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   250d0:	cmp	r0, #0
   250d4:	bne	250dc <__flatcc_error_report@@Base+0x238>
   250d8:	pop	{r4, r5, r6, r7, r8, pc}
   250dc:	ldr	r5, [r4, #40]	; 0x28
   250e0:	ldr	r3, [r5, #16]
   250e4:	cmp	r3, #9
   250e8:	beq	25100 <__flatcc_error_report@@Base+0x25c>
   250ec:	mov	r1, r5
   250f0:	mov	r0, r4
   250f4:	ldr	r2, [pc, #40]	; 25124 <__flatcc_error_report@@Base+0x280>
   250f8:	pop	{r4, r5, r6, r7, r8, lr}
   250fc:	b	25044 <__flatcc_error_report@@Base+0x1a0>
   25100:	mov	r1, r8
   25104:	mov	r0, r4
   25108:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   2510c:	str	r5, [r0, #4]
   25110:	str	r0, [r6]
   25114:	mov	r6, r0
   25118:	mov	r0, r4
   2511c:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   25120:	b	250c4 <__flatcc_error_report@@Base+0x220>
   25124:	andeq	r8, r4, r9, ror r2
   25128:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2512c:	mov	r3, #2
   25130:	ldr	r7, [pc, #296]	; 25260 <__flatcc_error_report@@Base+0x3bc>
   25134:	ldr	r8, [pc, #296]	; 25264 <__flatcc_error_report@@Base+0x3c0>
   25138:	mov	r5, r0
   2513c:	mov	r4, r1
   25140:	mov	r6, #1
   25144:	strh	r3, [r1, #8]
   25148:	mov	r3, #0
   2514c:	str	r3, [r1]
   25150:	str	r3, [r1, #4]
   25154:	ldr	r1, [r5, #40]	; 0x28
   25158:	ldr	r3, [r1, #16]
   2515c:	sub	r3, r3, #6
   25160:	cmp	r3, #17
   25164:	ldrls	pc, [pc, r3, lsl #2]
   25168:	b	25210 <__flatcc_error_report@@Base+0x36c>
   2516c:	andeq	r5, r2, r4, ror #3
   25170:	andeq	r5, r2, r0, lsl r2
   25174:	andeq	r5, r2, r0, lsl r2
   25178:	andeq	r5, r2, r0, lsl r2
   2517c:	andeq	r5, r2, r0, lsl r2
   25180:	andeq	r5, r2, r0, lsl r2
   25184:	andeq	r5, r2, r0, lsl r2
   25188:	andeq	r5, r2, r0, lsl r2
   2518c:	andeq	r5, r2, r0, lsl r2
   25190:	andeq	r5, r2, r0, lsl r2
   25194:	andeq	r5, r2, r0, lsl r2
   25198:	andeq	r5, r2, r0, lsl r2
   2519c:	andeq	r5, r2, r4, lsl #4
   251a0:	andeq	r5, r2, r0, lsl r2
   251a4:			; <UNDEFINED> instruction: 0x000251b4
   251a8:	ldrdeq	r5, [r2], -r0
   251ac:	andeq	r5, r2, r4, lsr #4
   251b0:	andeq	r5, r2, r4, lsr #4
   251b4:	ldr	r3, [r4]
   251b8:	cmp	r3, #0
   251bc:	ldreq	r3, [r1]
   251c0:	streq	r3, [r4]
   251c4:	mov	r0, r5
   251c8:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   251cc:	b	25154 <__flatcc_error_report@@Base+0x2b0>
   251d0:	ldr	r2, [pc, #144]	; 25268 <__flatcc_error_report@@Base+0x3c4>
   251d4:	strh	r6, [r4, #8]
   251d8:	mov	r0, r5
   251dc:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   251e0:	b	251c4 <__flatcc_error_report@@Base+0x320>
   251e4:	strh	r6, [r4, #8]
   251e8:	str	r6, [sp, #4]
   251ec:	str	r8, [sp]
   251f0:	mov	r3, #0
   251f4:	ldr	r2, [pc, #112]	; 2526c <__flatcc_error_report@@Base+0x3c8>
   251f8:	mov	r0, r5
   251fc:	bl	24ea4 <__flatcc_error_report@@Base>
   25200:	b	251c4 <__flatcc_error_report@@Base+0x320>
   25204:	strh	r6, [r4, #8]
   25208:	mov	r2, r7
   2520c:	b	251d8 <__flatcc_error_report@@Base+0x334>
   25210:	ldr	r2, [pc, #88]	; 25270 <__flatcc_error_report@@Base+0x3cc>
   25214:	mov	r0, r5
   25218:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   2521c:	mov	r3, #1
   25220:	strh	r3, [r4, #8]
   25224:	ldr	r2, [r4]
   25228:	mov	r1, #22
   2522c:	cmp	r2, #0
   25230:	mov	r0, r5
   25234:	ldrne	r3, [r5, #40]	; 0x28
   25238:	ldrne	r3, [r3]
   2523c:	subne	r3, r3, r2
   25240:	strne	r3, [r4, #4]
   25244:	ldr	r2, [pc, #40]	; 25274 <__flatcc_error_report@@Base+0x3d0>
   25248:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   2524c:	cmp	r0, #0
   25250:	moveq	r3, #1
   25254:	strheq	r3, [r4, #8]
   25258:	add	sp, sp, #8
   2525c:	pop	{r4, r5, r6, r7, r8, pc}
   25260:	andeq	r8, r4, r8, ror #5
   25264:	andeq	r8, r4, r6, ror #5
   25268:	muleq	r4, lr, r2
   2526c:			; <UNDEFINED> instruction: 0x000482bc
   25270:	andeq	r8, r4, r7, lsl #6
   25274:	andeq	r8, r4, r2, lsr r3
   25278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2527c:	mov	r4, r1
   25280:	sub	sp, sp, #28
   25284:	mov	r1, #45	; 0x2d
   25288:	mov	r6, r0
   2528c:	mov	r7, r3
   25290:	mov	r8, r2
   25294:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25298:	ldr	r5, [r6, #40]	; 0x28
   2529c:	ldr	r3, [r5, #16]
   252a0:	cmp	r3, #10
   252a4:	mov	sl, r0
   252a8:	beq	254d8 <__flatcc_error_report@@Base+0x634>
   252ac:	bgt	25300 <__flatcc_error_report@@Base+0x45c>
   252b0:	ldr	r2, [pc, #1020]	; 256b4 <__flatcc_error_report@@Base+0x810>
   252b4:	cmp	r3, r2
   252b8:	beq	255c0 <__flatcc_error_report@@Base+0x71c>
   252bc:	cmp	r3, #9
   252c0:	beq	25614 <__flatcc_error_report@@Base+0x770>
   252c4:	cmn	r3, #988	; 0x3dc
   252c8:	bne	25640 <__flatcc_error_report@@Base+0x79c>
   252cc:	mov	r3, #1
   252d0:	strb	r3, [r4]
   252d4:	cmp	sl, #0
   252d8:	mov	r3, #6
   252dc:	strh	r3, [r4, #8]
   252e0:	beq	25364 <__flatcc_error_report@@Base+0x4c0>
   252e4:	mov	r3, #1
   252e8:	strh	r3, [r4, #8]
   252ec:	ldr	r2, [pc, #964]	; 256b8 <__flatcc_error_report@@Base+0x814>
   252f0:	mov	r1, r5
   252f4:	mov	r0, r6
   252f8:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   252fc:	b	25364 <__flatcc_error_report@@Base+0x4c0>
   25300:	cmp	r3, #14
   25304:	beq	25370 <__flatcc_error_report@@Base+0x4cc>
   25308:	cmp	r3, #19
   2530c:	beq	255c8 <__flatcc_error_report@@Base+0x724>
   25310:	cmp	r3, #11
   25314:	bne	25640 <__flatcc_error_report@@Base+0x79c>
   25318:	mov	r3, #3
   2531c:	strh	r3, [r4, #8]
   25320:	add	r1, sp, #20
   25324:	ldr	r0, [r5]
   25328:	bl	14114 <strtod@plt>
   2532c:	ldr	r1, [sp, #20]
   25330:	vstr	d0, [r4]
   25334:	ldm	r5, {r2, r3}
   25338:	add	r3, r2, r3
   2533c:	cmp	r1, r3
   25340:	beq	25594 <__flatcc_error_report@@Base+0x6f0>
   25344:	ldr	r2, [pc, #880]	; 256bc <__flatcc_error_report@@Base+0x818>
   25348:	mov	r3, #1
   2534c:	strh	r3, [r4, #8]
   25350:	mov	r1, r5
   25354:	mov	r0, r6
   25358:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   2535c:	cmp	sl, #0
   25360:	bne	2569c <__flatcc_error_report@@Base+0x7f8>
   25364:	mov	r0, r6
   25368:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2536c:	b	2560c <__flatcc_error_report@@Base+0x768>
   25370:	mov	r3, #5
   25374:	strh	r3, [r4, #8]
   25378:	ldr	r2, [r5, #4]
   2537c:	ldr	r3, [r5]
   25380:	add	r0, r3, r2
   25384:	cmp	r3, r0
   25388:	beq	25450 <__flatcc_error_report@@Base+0x5ac>
   2538c:	ldrb	r7, [r3]
   25390:	sub	ip, r7, #45	; 0x2d
   25394:	clz	ip, ip
   25398:	lsr	ip, ip, #5
   2539c:	sub	r2, r2, ip
   253a0:	cmp	r2, #1
   253a4:	add	r1, r3, ip
   253a8:	ble	25450 <__flatcc_error_report@@Base+0x5ac>
   253ac:	ldrb	r3, [r3, ip]
   253b0:	cmp	r3, #48	; 0x30
   253b4:	bne	25450 <__flatcc_error_report@@Base+0x5ac>
   253b8:	ldrb	r3, [r1, #1]
   253bc:	orr	r3, r3, #32
   253c0:	cmp	r3, #120	; 0x78
   253c4:	bne	25450 <__flatcc_error_report@@Base+0x5ac>
   253c8:	add	lr, r1, #2
   253cc:	sub	r3, r0, lr
   253d0:	cmp	r3, #16
   253d4:	addgt	r1, r1, #18
   253d8:	movle	r1, r0
   253dc:	mov	ip, lr
   253e0:	mov	r2, #0
   253e4:	mov	r3, #0
   253e8:	cmp	r1, ip
   253ec:	mov	r9, ip
   253f0:	bne	2546c <__flatcc_error_report@@Base+0x5c8>
   253f4:	cmp	lr, r9
   253f8:	beq	25450 <__flatcc_error_report@@Base+0x5ac>
   253fc:	cmp	r0, r9
   25400:	beq	25444 <__flatcc_error_report@@Base+0x5a0>
   25404:	cmp	r9, r1
   25408:	ldrb	r0, [r9]
   2540c:	bne	2542c <__flatcc_error_report@@Base+0x588>
   25410:	sub	r1, r0, #48	; 0x30
   25414:	cmp	r1, #9
   25418:	bls	25450 <__flatcc_error_report@@Base+0x5ac>
   2541c:	orr	r0, r0, #32
   25420:	sub	r1, r0, #97	; 0x61
   25424:	cmp	r1, #5
   25428:	bls	25450 <__flatcc_error_report@@Base+0x5ac>
   2542c:	cmp	r0, #80	; 0x50
   25430:	beq	25450 <__flatcc_error_report@@Base+0x5ac>
   25434:	cmp	r0, #112	; 0x70
   25438:	beq	25450 <__flatcc_error_report@@Base+0x5ac>
   2543c:	cmp	r0, #46	; 0x2e
   25440:	beq	25450 <__flatcc_error_report@@Base+0x5ac>
   25444:	cmp	r7, #45	; 0x2d
   25448:	strd	r2, [r4]
   2544c:	bne	2567c <__flatcc_error_report@@Base+0x7d8>
   25450:	ldr	r2, [pc, #616]	; 256c0 <__flatcc_error_report@@Base+0x81c>
   25454:	mov	r3, #1
   25458:	strh	r3, [r4, #8]
   2545c:	mov	r1, r5
   25460:	mov	r0, r6
   25464:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25468:	b	2567c <__flatcc_error_report@@Base+0x7d8>
   2546c:	ldrb	r8, [ip], #1
   25470:	sub	fp, r8, #48	; 0x30
   25474:	cmp	fp, #9
   25478:	bhi	254a8 <__flatcc_error_report@@Base+0x604>
   2547c:	lsl	r9, r3, #4
   25480:	orr	r9, r9, r2, lsr #28
   25484:	lsl	r3, r2, #4
   25488:	str	r9, [sp, #4]
   2548c:	str	r3, [sp]
   25490:	ldrd	r2, [sp]
   25494:	subs	r2, r2, #48	; 0x30
   25498:	sbc	r3, r3, #0
   2549c:	adds	r2, r2, r8
   254a0:	adc	r3, r3, #0
   254a4:	b	253e8 <__flatcc_error_report@@Base+0x544>
   254a8:	orr	r8, r8, #32
   254ac:	sub	fp, r8, #97	; 0x61
   254b0:	cmp	fp, #5
   254b4:	bhi	253f4 <__flatcc_error_report@@Base+0x550>
   254b8:	lsl	r9, r3, #4
   254bc:	orr	r9, r9, r2, lsr #28
   254c0:	lsl	r3, r2, #4
   254c4:	str	r9, [sp, #12]
   254c8:	str	r3, [sp, #8]
   254cc:	ldrd	r2, [sp, #8]
   254d0:	subs	r2, r2, #87	; 0x57
   254d4:	b	25498 <__flatcc_error_report@@Base+0x5f4>
   254d8:	ldr	lr, [r5]
   254dc:	ldr	r8, [r5, #4]
   254e0:	mov	r2, #5
   254e4:	add	r8, lr, r8
   254e8:	cmp	lr, r8
   254ec:	strh	r2, [r4, #8]
   254f0:	beq	2553c <__flatcc_error_report@@Base+0x698>
   254f4:	ldrb	r9, [lr]
   254f8:	mov	r0, #0
   254fc:	mov	r1, #0
   25500:	cmp	r9, #45	; 0x2d
   25504:	movne	r7, lr
   25508:	addeq	r7, lr, #1
   2550c:	mov	ip, r7
   25510:	mov	fp, r3
   25514:	strd	r0, [sp]
   25518:	cmp	ip, r8
   2551c:	mov	r1, ip
   25520:	beq	256ac <__flatcc_error_report@@Base+0x808>
   25524:	ldrb	r2, [ip], #1
   25528:	sub	r0, r2, #48	; 0x30
   2552c:	cmp	r0, #9
   25530:	bls	2554c <__flatcc_error_report@@Base+0x6a8>
   25534:	cmp	lr, r1
   25538:	bne	25648 <__flatcc_error_report@@Base+0x7a4>
   2553c:	mov	r3, #1
   25540:	strh	r3, [r4, #8]
   25544:	ldr	r2, [pc, #376]	; 256c4 <__flatcc_error_report@@Base+0x820>
   25548:	b	2545c <__flatcc_error_report@@Base+0x5b8>
   2554c:	ldr	r3, [sp]
   25550:	umull	r0, r1, r3, fp
   25554:	ldr	r3, [sp, #4]
   25558:	subs	r0, r0, #48	; 0x30
   2555c:	mla	r1, fp, r3, r1
   25560:	sbc	r1, r1, #0
   25564:	adds	r0, r0, r2
   25568:	ldrd	r2, [sp]
   2556c:	adc	r1, r1, #0
   25570:	cmp	r3, r1
   25574:	cmpeq	r2, r0
   25578:	bhi	2553c <__flatcc_error_report@@Base+0x698>
   2557c:	strd	r0, [sp]
   25580:	b	25518 <__flatcc_error_report@@Base+0x674>
   25584:	cmp	r2, #101	; 0x65
   25588:	beq	2553c <__flatcc_error_report@@Base+0x698>
   2558c:	cmp	r2, #112	; 0x70
   25590:	b	25668 <__flatcc_error_report@@Base+0x7c4>
   25594:	ldrb	r3, [r2]
   25598:	cmp	r3, #46	; 0x2e
   2559c:	moveq	r3, #1
   255a0:	strheq	r3, [r4, #8]
   255a4:	ldreq	r2, [pc, #284]	; 256c8 <__flatcc_error_report@@Base+0x824>
   255a8:	beq	25350 <__flatcc_error_report@@Base+0x4ac>
   255ac:	cmp	sl, #0
   255b0:	vnegne.f64	d0, d0
   255b4:	vstrne	d0, [r4]
   255b8:	bne	2569c <__flatcc_error_report@@Base+0x7f8>
   255bc:	b	25364 <__flatcc_error_report@@Base+0x4c0>
   255c0:	mov	r3, #0
   255c4:	b	252d0 <__flatcc_error_report@@Base+0x42c>
   255c8:	mov	r0, r6
   255cc:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   255d0:	mov	r1, r4
   255d4:	mov	r0, r6
   255d8:	bl	25128 <__flatcc_error_report@@Base+0x284>
   255dc:	tst	r8, #1
   255e0:	moveq	r3, #1
   255e4:	strheq	r3, [r4, #8]
   255e8:	beq	25640 <__flatcc_error_report@@Base+0x79c>
   255ec:	cmp	sl, #0
   255f0:	beq	2560c <__flatcc_error_report@@Base+0x768>
   255f4:	ldr	r2, [pc, #208]	; 256cc <__flatcc_error_report@@Base+0x828>
   255f8:	mov	r3, #1
   255fc:	strh	r3, [r4, #8]
   25600:	mov	r1, r5
   25604:	mov	r0, r6
   25608:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   2560c:	add	sp, sp, #28
   25610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25614:	mov	r1, r4
   25618:	mov	r0, r6
   2561c:	bl	25090 <__flatcc_error_report@@Base+0x1ec>
   25620:	cmp	sl, #0
   25624:	moveq	r3, #13
   25628:	strheq	r3, [r4, #8]
   2562c:	beq	2560c <__flatcc_error_report@@Base+0x768>
   25630:	mov	r3, #1
   25634:	strh	r3, [r4, #8]
   25638:	ldr	r2, [pc, #144]	; 256d0 <__flatcc_error_report@@Base+0x82c>
   2563c:	b	25600 <__flatcc_error_report@@Base+0x75c>
   25640:	mov	r2, r7
   25644:	b	25600 <__flatcc_error_report@@Base+0x75c>
   25648:	cmp	r7, r1
   2564c:	beq	2553c <__flatcc_error_report@@Base+0x698>
   25650:	cmp	r2, #80	; 0x50
   25654:	beq	2553c <__flatcc_error_report@@Base+0x698>
   25658:	bhi	25584 <__flatcc_error_report@@Base+0x6e0>
   2565c:	cmp	r2, #46	; 0x2e
   25660:	beq	2553c <__flatcc_error_report@@Base+0x698>
   25664:	cmp	r2, #69	; 0x45
   25668:	beq	2553c <__flatcc_error_report@@Base+0x698>
   2566c:	ldrd	r2, [sp]
   25670:	cmp	r9, #45	; 0x2d
   25674:	strd	r2, [r4]
   25678:	beq	2553c <__flatcc_error_report@@Base+0x698>
   2567c:	cmp	sl, #0
   25680:	beq	25364 <__flatcc_error_report@@Base+0x4c0>
   25684:	ldrd	r2, [r4]
   25688:	rsbs	r2, r2, #0
   2568c:	rsc	r3, r3, #0
   25690:	strd	r2, [r4]
   25694:	mov	r3, #4
   25698:	strh	r3, [r4, #8]
   2569c:	ldrh	r3, [r4, #8]
   256a0:	cmp	r3, #6
   256a4:	bne	25364 <__flatcc_error_report@@Base+0x4c0>
   256a8:	b	252e4 <__flatcc_error_report@@Base+0x440>
   256ac:	cmp	r7, ip
   256b0:	b	25668 <__flatcc_error_report@@Base+0x7c4>
   256b4:			; <UNDEFINED> instruction: 0xfffffc26
   256b8:	strdeq	r8, [r4], -r4
   256bc:	andeq	r8, r4, r8, ror r3
   256c0:	andeq	r8, r4, r6, asr #6
   256c4:	andeq	r8, r4, r1, ror #6
   256c8:	andeq	r8, r4, sp, lsl #7
   256cc:			; <UNDEFINED> instruction: 0x000483b4
   256d0:	ldrdeq	r8, [r4], -r6
   256d4:	push	{r0, r1, r2, r4, r5, lr}
   256d8:	mov	lr, #0
   256dc:	ldr	r5, [r0, #40]	; 0x28
   256e0:	str	lr, [r0, #36]	; 0x24
   256e4:	ldr	ip, [r5, #16]
   256e8:	cmp	ip, r1
   256ec:	bne	256fc <__flatcc_error_report@@Base+0x858>
   256f0:	add	sp, sp, #12
   256f4:	pop	{r4, r5, lr}
   256f8:	b	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   256fc:	str	lr, [sp, #4]
   25700:	str	lr, [sp]
   25704:	mov	r1, r5
   25708:	mov	r4, r0
   2570c:	bl	24ea4 <__flatcc_error_report@@Base>
   25710:	ldr	r0, [r4, #40]	; 0x28
   25714:	add	sp, sp, #12
   25718:	pop	{r4, r5, pc}
   2571c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25720:	mov	r1, #40	; 0x28
   25724:	mov	r5, r0
   25728:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   2572c:	subs	r7, r0, #0
   25730:	moveq	r4, r7
   25734:	beq	257fc <__flatcc_error_report@@Base+0x958>
   25738:	mov	r1, #9
   2573c:	mov	r0, r5
   25740:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25744:	subs	r6, r0, #0
   25748:	beq	25804 <__flatcc_error_report@@Base+0x960>
   2574c:	ldr	fp, [pc, #204]	; 25820 <__flatcc_error_report@@Base+0x97c>
   25750:	ldr	r9, [pc, #204]	; 25824 <__flatcc_error_report@@Base+0x980>
   25754:	mov	r8, #0
   25758:	mov	sl, #24
   2575c:	mov	r1, sl
   25760:	mov	r0, r5
   25764:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   25768:	mov	r1, #58	; 0x3a
   2576c:	str	r8, [r0]
   25770:	str	r6, [r0, #4]
   25774:	mov	r4, r0
   25778:	mov	r0, r5
   2577c:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25780:	cmp	r0, #0
   25784:	beq	2579c <__flatcc_error_report@@Base+0x8f8>
   25788:	mov	r3, fp
   2578c:	mov	r2, #1
   25790:	add	r1, r4, #8
   25794:	mov	r0, r5
   25798:	bl	25278 <__flatcc_error_report@@Base+0x3d4>
   2579c:	ldr	r3, [r5, #108]	; 0x6c
   257a0:	cmp	r3, #9
   257a4:	bgt	257fc <__flatcc_error_report@@Base+0x958>
   257a8:	mov	r1, #44	; 0x2c
   257ac:	mov	r0, r5
   257b0:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   257b4:	cmp	r0, #0
   257b8:	beq	257d8 <__flatcc_error_report@@Base+0x934>
   257bc:	mov	r2, r9
   257c0:	mov	r1, #9
   257c4:	mov	r0, r5
   257c8:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   257cc:	mov	r8, r4
   257d0:	subs	r6, r0, #0
   257d4:	bne	2575c <__flatcc_error_report@@Base+0x8b8>
   257d8:	mov	r3, r7
   257dc:	ldr	r2, [pc, #68]	; 25828 <__flatcc_error_report@@Base+0x984>
   257e0:	mov	r1, #41	; 0x29
   257e4:	mov	r0, r5
   257e8:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   257ec:	mov	r3, r4
   257f0:	mov	r4, #0
   257f4:	cmp	r3, #0
   257f8:	bne	2580c <__flatcc_error_report@@Base+0x968>
   257fc:	mov	r0, r4
   25800:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25804:	mov	r4, r6
   25808:	b	257d8 <__flatcc_error_report@@Base+0x934>
   2580c:	ldr	r2, [r3]
   25810:	str	r4, [r3]
   25814:	mov	r4, r3
   25818:	mov	r3, r2
   2581c:	b	257f4 <__flatcc_error_report@@Base+0x950>
   25820:	andeq	r8, r4, r7, lsl r4
   25824:	andeq	r8, r4, r7, lsr r4
   25828:	andeq	r8, r4, r4, ror #8
   2582c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   25830:	mov	r4, r0
   25834:	mov	r6, r1
   25838:	mov	r5, #0
   2583c:	mov	r8, #91	; 0x5b
   25840:	mov	r3, #1
   25844:	ldr	r7, [r0, #40]	; 0x28
   25848:	strh	r3, [r1, #8]
   2584c:	mov	r1, r8
   25850:	mov	r0, r4
   25854:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25858:	cmp	r0, #0
   2585c:	bne	25910 <__flatcc_error_report@@Base+0xa6c>
   25860:	cmp	r5, #1
   25864:	ble	25878 <__flatcc_error_report@@Base+0x9d4>
   25868:	ldr	r2, [pc, #412]	; 25a0c <__flatcc_error_report@@Base+0xb68>
   2586c:	mov	r1, r7
   25870:	mov	r0, r4
   25874:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25878:	ldr	r2, [r4, #40]	; 0x28
   2587c:	ldr	r3, [r2, #16]
   25880:	cmn	r3, #984	; 0x3d8
   25884:	bgt	25938 <__flatcc_error_report@@Base+0xa94>
   25888:	mvn	r1, #984	; 0x3d8
   2588c:	cmp	r3, r1
   25890:	bge	258b4 <__flatcc_error_report@@Base+0xa10>
   25894:	cmn	r3, #988	; 0x3dc
   25898:	bge	25918 <__flatcc_error_report@@Base+0xa74>
   2589c:	cmn	r3, #996	; 0x3e4
   258a0:	bge	258b4 <__flatcc_error_report@@Base+0xa10>
   258a4:	add	r3, r3, #996	; 0x3e4
   258a8:	add	r3, r3, #3
   258ac:	cmp	r3, #1
   258b0:	bhi	25924 <__flatcc_error_report@@Base+0xa80>
   258b4:	cmp	r5, #0
   258b8:	movne	r3, #7
   258bc:	moveq	r3, #8
   258c0:	str	r2, [r6]
   258c4:	strh	r3, [r6, #8]
   258c8:	mov	r0, r4
   258cc:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   258d0:	mov	r6, #93	; 0x5d
   258d4:	mov	r1, r6
   258d8:	mov	r0, r4
   258dc:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   258e0:	cmp	r0, #0
   258e4:	beq	259b4 <__flatcc_error_report@@Base+0xb10>
   258e8:	subs	r5, r5, #1
   258ec:	bcs	258d4 <__flatcc_error_report@@Base+0xa30>
   258f0:	mov	r1, #0
   258f4:	str	r1, [sp, #4]
   258f8:	str	r1, [sp]
   258fc:	mov	r3, r7
   25900:	ldr	r2, [pc, #264]	; 25a10 <__flatcc_error_report@@Base+0xb6c>
   25904:	mov	r0, r4
   25908:	bl	24ea4 <__flatcc_error_report@@Base>
   2590c:	b	259bc <__flatcc_error_report@@Base+0xb18>
   25910:	add	r5, r5, #1
   25914:	b	2584c <__flatcc_error_report@@Base+0x9a8>
   25918:	ldr	r1, [pc, #244]	; 25a14 <__flatcc_error_report@@Base+0xb70>
   2591c:	cmp	r3, r1
   25920:	beq	258b4 <__flatcc_error_report@@Base+0xa10>
   25924:	ldr	r2, [pc, #236]	; 25a18 <__flatcc_error_report@@Base+0xb74>
   25928:	mov	r1, #0
   2592c:	mov	r0, r4
   25930:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25934:	b	258d0 <__flatcc_error_report@@Base+0xa2c>
   25938:	ldr	r1, [pc, #220]	; 25a1c <__flatcc_error_report@@Base+0xb78>
   2593c:	cmp	r3, r1
   25940:	beq	25980 <__flatcc_error_report@@Base+0xadc>
   25944:	bgt	25964 <__flatcc_error_report@@Base+0xac0>
   25948:	sub	r1, r1, #8
   2594c:	cmp	r3, r1
   25950:	blt	25924 <__flatcc_error_report@@Base+0xa80>
   25954:	cmn	r3, #976	; 0x3d0
   25958:	blt	258b4 <__flatcc_error_report@@Base+0xa10>
   2595c:	add	r1, r1, #7
   25960:	b	2591c <__flatcc_error_report@@Base+0xa78>
   25964:	cmp	r3, #9
   25968:	beq	25994 <__flatcc_error_report@@Base+0xaf0>
   2596c:	cmp	r3, #93	; 0x5d
   25970:	ldreq	r2, [pc, #168]	; 25a20 <__flatcc_error_report@@Base+0xb7c>
   25974:	beq	25928 <__flatcc_error_report@@Base+0xa84>
   25978:	cmn	r3, #972	; 0x3cc
   2597c:	b	25920 <__flatcc_error_report@@Base+0xa7c>
   25980:	cmp	r5, #0
   25984:	str	r2, [r6]
   25988:	movne	r3, #9
   2598c:	moveq	r3, #10
   25990:	b	258c4 <__flatcc_error_report@@Base+0xa20>
   25994:	mov	r1, r6
   25998:	mov	r0, r4
   2599c:	bl	25090 <__flatcc_error_report@@Base+0x1ec>
   259a0:	cmp	r5, #0
   259a4:	movne	r3, #11
   259a8:	moveq	r3, #12
   259ac:	strh	r3, [r6, #8]
   259b0:	b	258d0 <__flatcc_error_report@@Base+0xa2c>
   259b4:	cmp	r5, #0
   259b8:	bne	258f0 <__flatcc_error_report@@Base+0xa4c>
   259bc:	mov	r1, #93	; 0x5d
   259c0:	mov	r0, r4
   259c4:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   259c8:	subs	r1, r0, #0
   259cc:	beq	25a04 <__flatcc_error_report@@Base+0xb60>
   259d0:	mov	r3, #0
   259d4:	str	r3, [sp, #4]
   259d8:	str	r3, [sp]
   259dc:	ldr	r2, [pc, #64]	; 25a24 <__flatcc_error_report@@Base+0xb80>
   259e0:	mov	r3, r7
   259e4:	mov	r0, r4
   259e8:	bl	24ea4 <__flatcc_error_report@@Base>
   259ec:	mov	r5, #93	; 0x5d
   259f0:	mov	r1, r5
   259f4:	mov	r0, r4
   259f8:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   259fc:	cmp	r0, #0
   25a00:	bne	259f0 <__flatcc_error_report@@Base+0xb4c>
   25a04:	add	sp, sp, #8
   25a08:	pop	{r4, r5, r6, r7, r8, pc}
   25a0c:	andeq	r8, r4, r3, lsl #9
   25a10:	ldrdeq	r8, [r4], -lr
   25a14:			; <UNDEFINED> instruction: 0xfffffc25
   25a18:	andeq	r8, r4, r7, asr #9
   25a1c:			; <UNDEFINED> instruction: 0xfffffc32
   25a20:	andeq	r8, r4, fp, lsr #9
   25a24:	strdeq	r8, [r4], -pc	; <UNPREDICTABLE>
   25a28:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25a2c:	mov	r5, r1
   25a30:	mov	r8, r2
   25a34:	mov	r1, #9
   25a38:	ldr	r2, [pc, #560]	; 25c70 <__flatcc_error_report@@Base+0xdcc>
   25a3c:	mov	r4, r0
   25a40:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25a44:	cmp	r0, #0
   25a48:	beq	25bd4 <__flatcc_error_report@@Base+0xd30>
   25a4c:	str	r0, [r5, #4]
   25a50:	mov	r0, r4
   25a54:	bl	2571c <__flatcc_error_report@@Base+0x878>
   25a58:	ldr	r2, [pc, #532]	; 25c74 <__flatcc_error_report@@Base+0xdd0>
   25a5c:	mov	r1, #123	; 0x7b
   25a60:	str	r0, [r5, #28]
   25a64:	mov	r0, r4
   25a68:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25a6c:	cmp	r0, #0
   25a70:	beq	25bd4 <__flatcc_error_report@@Base+0xd30>
   25a74:	ldr	r7, [r4, #40]	; 0x28
   25a78:	ldr	r9, [pc, #504]	; 25c78 <__flatcc_error_report@@Base+0xdd4>
   25a7c:	ldr	sl, [pc, #504]	; 25c7c <__flatcc_error_report@@Base+0xdd8>
   25a80:	add	r5, r5, #20
   25a84:	ldr	r3, [r4, #40]	; 0x28
   25a88:	ldr	r1, [r3, #16]
   25a8c:	cmp	r1, #125	; 0x7d
   25a90:	bne	25ae4 <__flatcc_error_report@@Base+0xc40>
   25a94:	mov	r0, r4
   25a98:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25a9c:	adds	r3, r7, #0
   25aa0:	movne	r3, #1
   25aa4:	cmp	r0, #0
   25aa8:	movne	r3, #0
   25aac:	cmp	r3, #0
   25ab0:	beq	25ad4 <__flatcc_error_report@@Base+0xc30>
   25ab4:	mov	r3, #0
   25ab8:	str	r3, [sp, #4]
   25abc:	str	r3, [sp]
   25ac0:	ldr	r2, [pc, #440]	; 25c80 <__flatcc_error_report@@Base+0xddc>
   25ac4:	mov	r3, r7
   25ac8:	ldr	r1, [r4, #40]	; 0x28
   25acc:	mov	r0, r4
   25ad0:	bl	24ea4 <__flatcc_error_report@@Base>
   25ad4:	mov	r0, r5
   25ad8:	add	sp, sp, #12
   25adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25ae0:	b	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   25ae4:	cmp	r8, r9
   25ae8:	mov	r1, r5
   25aec:	mov	r0, r4
   25af0:	bne	25be8 <__flatcc_error_report@@Base+0xd44>
   25af4:	bl	24dac <__flatcc_fb_default_error_out@@Base+0x2e8>
   25af8:	ldr	r2, [pc, #388]	; 25c84 <__flatcc_error_report@@Base+0xde0>
   25afc:	mov	r1, #9
   25b00:	mov	r6, r0
   25b04:	mov	r0, r4
   25b08:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25b0c:	cmp	r0, #0
   25b10:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25b14:	str	r0, [r6, #4]
   25b18:	ldr	r2, [pc, #360]	; 25c88 <__flatcc_error_report@@Base+0xde4>
   25b1c:	mov	r1, #40	; 0x28
   25b20:	mov	r0, r4
   25b24:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25b28:	cmp	r0, #0
   25b2c:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25b30:	add	r1, r6, #32
   25b34:	mov	r0, r4
   25b38:	bl	2582c <__flatcc_error_report@@Base+0x988>
   25b3c:	ldr	r2, [pc, #328]	; 25c8c <__flatcc_error_report@@Base+0xde8>
   25b40:	mov	r1, #41	; 0x29
   25b44:	mov	r0, r4
   25b48:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25b4c:	cmp	r0, #0
   25b50:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25b54:	ldr	r2, [pc, #308]	; 25c90 <__flatcc_error_report@@Base+0xdec>
   25b58:	mov	r1, #58	; 0x3a
   25b5c:	mov	r0, r4
   25b60:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25b64:	cmp	r0, #0
   25b68:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25b6c:	add	r1, r6, #16
   25b70:	mov	r0, r4
   25b74:	bl	2582c <__flatcc_error_report@@Base+0x988>
   25b78:	mov	r1, #61	; 0x3d
   25b7c:	mov	r0, r4
   25b80:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25b84:	subs	fp, r0, #0
   25b88:	beq	25ba8 <__flatcc_error_report@@Base+0xd04>
   25b8c:	ldr	r2, [pc, #256]	; 25c94 <__flatcc_error_report@@Base+0xdf0>
   25b90:	mov	r1, fp
   25b94:	mov	r0, r4
   25b98:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25b9c:	mov	r0, r4
   25ba0:	bl	24d1c <__flatcc_fb_default_error_out@@Base+0x258>
   25ba4:	b	25bc8 <__flatcc_error_report@@Base+0xd24>
   25ba8:	mov	r0, r4
   25bac:	bl	2571c <__flatcc_error_report@@Base+0x878>
   25bb0:	ldr	r2, [pc, #224]	; 25c98 <__flatcc_error_report@@Base+0xdf4>
   25bb4:	mov	r3, fp
   25bb8:	str	r0, [r6, #64]	; 0x40
   25bbc:	mov	r1, #59	; 0x3b
   25bc0:	mov	r0, r4
   25bc4:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   25bc8:	ldr	r3, [r4, #108]	; 0x6c
   25bcc:	cmp	r3, #9
   25bd0:	ble	25a84 <__flatcc_error_report@@Base+0xbe0>
   25bd4:	mov	r1, #125	; 0x7d
   25bd8:	mov	r0, r4
   25bdc:	add	sp, sp, #12
   25be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25be4:	b	24d68 <__flatcc_fb_default_error_out@@Base+0x2a4>
   25be8:	bl	24dac <__flatcc_fb_default_error_out@@Base+0x2e8>
   25bec:	mov	r2, sl
   25bf0:	mov	r1, #9
   25bf4:	mov	r6, r0
   25bf8:	mov	r0, r4
   25bfc:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25c00:	cmp	r0, #0
   25c04:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25c08:	str	r0, [r6, #4]
   25c0c:	ldr	r2, [pc, #136]	; 25c9c <__flatcc_error_report@@Base+0xdf8>
   25c10:	mov	r1, #58	; 0x3a
   25c14:	mov	r0, r4
   25c18:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   25c1c:	cmp	r0, #0
   25c20:	beq	25b9c <__flatcc_error_report@@Base+0xcf8>
   25c24:	add	r1, r6, #16
   25c28:	mov	r0, r4
   25c2c:	bl	2582c <__flatcc_error_report@@Base+0x988>
   25c30:	mov	r1, #61	; 0x3d
   25c34:	mov	r0, r4
   25c38:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   25c3c:	cmp	r0, #0
   25c40:	beq	25c58 <__flatcc_error_report@@Base+0xdb4>
   25c44:	ldr	r3, [pc, #84]	; 25ca0 <__flatcc_error_report@@Base+0xdfc>
   25c48:	mov	r2, #2
   25c4c:	add	r1, r6, #48	; 0x30
   25c50:	mov	r0, r4
   25c54:	bl	25278 <__flatcc_error_report@@Base+0x3d4>
   25c58:	mov	r0, r4
   25c5c:	bl	2571c <__flatcc_error_report@@Base+0x878>
   25c60:	mov	r3, #0
   25c64:	ldr	r2, [pc, #56]	; 25ca4 <__flatcc_error_report@@Base+0xe00>
   25c68:	str	r0, [r6, #64]	; 0x40
   25c6c:	b	25bbc <__flatcc_error_report@@Base+0xd18>
   25c70:	andeq	r8, r4, r6, lsl r5
   25c74:	andeq	r8, r4, r9, lsr r5
   25c78:			; <UNDEFINED> instruction: 0xfffffc39
   25c7c:	andeq	r8, r4, r5, lsr r6
   25c80:			; <UNDEFINED> instruction: 0x000486bd
   25c84:	andeq	r8, r4, r2, asr r5
   25c88:	andeq	r8, r4, sp, ror #10
   25c8c:	muleq	r4, r2, r5
   25c90:			; <UNDEFINED> instruction: 0x000485b9
   25c94:	andeq	r8, r4, ip, ror #11
   25c98:	andeq	r8, r4, r2, lsl r6
   25c9c:	andeq	r8, r4, pc, asr #12
   25ca0:	andeq	r8, r4, r8, ror r6
   25ca4:	muleq	r4, fp, r6

00025ca8 <error_ref_sym@@Base>:
   25ca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25cac:	sub	sp, sp, #76	; 0x4c
   25cb0:	mov	r7, r3
   25cb4:	mov	sl, r0
   25cb8:	mov	r9, r1
   25cbc:	mov	fp, r2
   25cc0:	mov	r8, r1
   25cc4:	mov	r4, #0
   25cc8:	mov	r5, #50	; 0x32
   25ccc:	add	r3, sp, #20
   25cd0:	cmp	r8, #0
   25cd4:	cmpne	r5, #0
   25cd8:	movgt	r1, #1
   25cdc:	movle	r1, #0
   25ce0:	bgt	25d34 <error_ref_sym@@Base+0x8c>
   25ce4:	cmp	r4, #0
   25ce8:	add	r2, sp, #72	; 0x48
   25cec:	add	r2, r2, r4
   25cf0:	subgt	r4, r4, #1
   25cf4:	cmp	r5, #0
   25cf8:	strb	r1, [r2, #-52]	; 0xffffffcc
   25cfc:	ldrle	r2, [pc, #128]	; 25d84 <error_ref_sym@@Base+0xdc>
   25d00:	movle	r4, #50	; 0x32
   25d04:	ldr	r1, [r9, #4]
   25d08:	ldrle	r2, [r2]
   25d0c:	mov	r0, sl
   25d10:	strle	r2, [sp, #67]	; 0x43
   25d14:	cmp	r7, #0
   25d18:	mov	r2, fp
   25d1c:	ldrne	r7, [r7, #4]
   25d20:	stm	sp, {r3, r4}
   25d24:	mov	r3, r7
   25d28:	bl	24ea4 <__flatcc_error_report@@Base>
   25d2c:	add	sp, sp, #76	; 0x4c
   25d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d34:	ldr	r1, [r8, #4]
   25d38:	add	r0, r3, r4
   25d3c:	str	r3, [sp, #12]
   25d40:	ldr	r6, [r1, #4]
   25d44:	ldr	r1, [r1]
   25d48:	cmp	r5, r6
   25d4c:	movlt	r6, r5
   25d50:	mov	r2, r6
   25d54:	bl	14024 <memcpy@plt>
   25d58:	add	r4, r4, r6
   25d5c:	add	r3, sp, #72	; 0x48
   25d60:	add	r2, r3, r4
   25d64:	sub	r5, r5, r6
   25d68:	mov	r3, #46	; 0x2e
   25d6c:	strb	r3, [r2, #-52]	; 0xffffffcc
   25d70:	sub	r5, r5, #1
   25d74:	add	r4, r4, #1
   25d78:	ldr	r8, [r8]
   25d7c:	ldr	r3, [sp, #12]
   25d80:	b	25cd0 <error_ref_sym@@Base+0x28>
   25d84:	andeq	r8, r4, r8, ror r0

00025d88 <__flatcc_fb_init_parser@@Base>:
   25d88:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d8c:	mov	r6, r1
   25d90:	mov	r5, r2
   25d94:	mov	r1, #0
   25d98:	mov	r2, #560	; 0x230
   25d9c:	mov	r4, r0
   25da0:	mov	r8, r3
   25da4:	ldr	r7, [sp, #52]	; 0x34
   25da8:	bl	140fc <memset@plt>
   25dac:	cmp	r8, #0
   25db0:	strne	r8, [r4, #8]
   25db4:	ldrne	r3, [sp, #48]	; 0x30
   25db8:	ldreq	r3, [pc, #412]	; 25f5c <__flatcc_fb_init_parser@@Base+0x1d4>
   25dbc:	add	r0, r4, #128	; 0x80
   25dc0:	strne	r3, [r4, #12]
   25dc4:	streq	r3, [r4, #8]
   25dc8:	cmp	r6, #0
   25dcc:	beq	25e20 <__flatcc_fb_init_parser@@Base+0x98>
   25dd0:	mov	r2, #224	; 0xe0
   25dd4:	mov	r1, r6
   25dd8:	bl	14024 <memcpy@plt>
   25ddc:	ldr	r2, [r4, #192]	; 0xc0
   25de0:	cmp	r7, #0
   25de4:	addeq	r7, r4, #416	; 0x1a0
   25de8:	cmp	r2, #8
   25dec:	str	r7, [r4, #412]	; 0x19c
   25df0:	bhi	25e04 <__flatcc_fb_init_parser@@Base+0x7c>
   25df4:	mov	r3, #1
   25df8:	lsl	r2, r3, r2
   25dfc:	tst	r2, #276	; 0x114
   25e00:	bne	25e28 <__flatcc_fb_init_parser@@Base+0xa0>
   25e04:	ldr	r2, [pc, #340]	; 25f60 <__flatcc_fb_init_parser@@Base+0x1d8>
   25e08:	mov	r0, r4
   25e0c:	mov	r1, #0
   25e10:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   25e14:	mvn	r0, #0
   25e18:	add	sp, sp, #12
   25e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e20:	bl	14db8 <flatcc_init_options@@Base>
   25e24:	b	25ddc <__flatcc_fb_init_parser@@Base+0x54>
   25e28:	ldr	r2, [r4, #196]	; 0xc4
   25e2c:	cmp	r2, #8
   25e30:	bhi	25e40 <__flatcc_fb_init_parser@@Base+0xb8>
   25e34:	lsl	r3, r3, r2
   25e38:	tst	r3, #276	; 0x114
   25e3c:	bne	25e48 <__flatcc_fb_init_parser@@Base+0xc0>
   25e40:	ldr	r2, [pc, #284]	; 25f64 <__flatcc_fb_init_parser@@Base+0x1dc>
   25e44:	b	25e08 <__flatcc_fb_init_parser@@Base+0x80>
   25e48:	ldr	r3, [pc, #280]	; 25f68 <__flatcc_fb_init_parser@@Base+0x1e0>
   25e4c:	cmp	r5, #0
   25e50:	moveq	r5, r3
   25e54:	mov	r0, r5
   25e58:	bl	140cc <strlen@plt>
   25e5c:	ldr	r2, [r6, #96]	; 0x60
   25e60:	mov	r1, r0
   25e64:	mov	sl, r0
   25e68:	mov	r0, r5
   25e6c:	bl	24958 <__flatcc_fb_create_basename@@Base>
   25e70:	cmp	r0, #0
   25e74:	mov	r7, r0
   25e78:	str	r0, [r4, #512]	; 0x200
   25e7c:	bne	25e84 <__flatcc_fb_init_parser@@Base+0xfc>
   25e80:	bl	141d4 <__assert_fail@plt+0x30>
   25e84:	bl	140cc <strlen@plt>
   25e88:	mov	r9, r0
   25e8c:	mov	r1, r0
   25e90:	mov	r0, r7
   25e94:	bl	24558 <__flatcc_fb_copy_path_n@@Base>
   25e98:	subs	r7, r0, #0
   25e9c:	movne	r8, r7
   25ea0:	addne	r3, r7, r9
   25ea4:	beq	25e80 <__flatcc_fb_init_parser@@Base+0xf8>
   25ea8:	cmp	r8, r3
   25eac:	beq	25ebc <__flatcc_fb_init_parser@@Base+0x134>
   25eb0:	ldrb	fp, [r8], #1
   25eb4:	cmp	fp, #0
   25eb8:	bne	25f40 <__flatcc_fb_init_parser@@Base+0x1b8>
   25ebc:	str	r7, [r4, #516]	; 0x204
   25ec0:	str	r7, [r4, #496]	; 0x1f0
   25ec4:	str	r9, [r4, #500]	; 0x1f4
   25ec8:	ldr	r2, [pc, #156]	; 25f6c <__flatcc_fb_init_parser@@Base+0x1e4>
   25ecc:	mov	r1, sl
   25ed0:	mov	r0, r5
   25ed4:	bl	24958 <__flatcc_fb_create_basename@@Base>
   25ed8:	cmp	r0, #0
   25edc:	str	r0, [r4, #520]	; 0x208
   25ee0:	beq	25e80 <__flatcc_fb_init_parser@@Base+0xf8>
   25ee4:	ldr	r0, [r6, #192]	; 0xc0
   25ee8:	cmp	r0, #0
   25eec:	beq	25efc <__flatcc_fb_init_parser@@Base+0x174>
   25ef0:	str	r0, [r4, #476]	; 0x1dc
   25ef4:	bl	140cc <strlen@plt>
   25ef8:	str	r0, [r4, #480]	; 0x1e0
   25efc:	mov	r1, #0
   25f00:	mov	r0, r4
   25f04:	bl	24c1c <__flatcc_fb_default_error_out@@Base+0x158>
   25f08:	mov	r2, #0
   25f0c:	mov	r1, r2
   25f10:	mov	r5, r0
   25f14:	str	r0, [r4, #544]	; 0x220
   25f18:	ldr	r0, [r4, #412]	; 0x19c
   25f1c:	bl	24004 <fb_scope_table_find@@Base>
   25f20:	cmp	r5, r0
   25f24:	moveq	r0, #0
   25f28:	beq	25e18 <__flatcc_fb_init_parser@@Base+0x90>
   25f2c:	ldr	r3, [pc, #60]	; 25f70 <__flatcc_fb_init_parser@@Base+0x1e8>
   25f30:	ldr	r2, [pc, #60]	; 25f74 <__flatcc_fb_init_parser@@Base+0x1ec>
   25f34:	ldr	r1, [pc, #60]	; 25f78 <__flatcc_fb_init_parser@@Base+0x1f0>
   25f38:	ldr	r0, [pc, #60]	; 25f7c <__flatcc_fb_init_parser@@Base+0x1f4>
   25f3c:	bl	141a4 <__assert_fail@plt>
   25f40:	str	r3, [sp, #4]
   25f44:	bl	140a8 <__ctype_toupper_loc@plt>
   25f48:	ldr	r3, [sp, #4]
   25f4c:	ldr	r2, [r0]
   25f50:	ldr	r2, [r2, fp, lsl #2]
   25f54:	strb	r2, [r8, #-1]
   25f58:	b	25ea8 <__flatcc_fb_init_parser@@Base+0x120>
   25f5c:	andeq	r4, r2, r4, asr #21
   25f60:	andeq	r8, r4, fp, ror #13
   25f64:	andeq	r8, r4, r3, lsr #14
   25f68:	andeq	r8, r4, r6, ror #13
   25f6c:	andeq	r2, r3, sp, lsl pc
   25f70:	andeq	r8, r4, sp, ror r0
   25f74:	andeq	r0, r0, r3, lsr r5
   25f78:	muleq	r4, r5, r1
   25f7c:	andeq	r8, r4, ip, asr r7

00025f80 <__flatcc_fb_parse@@Base>:
   25f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f84:	mov	r5, r1
   25f88:	str	r1, [r0, #60]	; 0x3c
   25f8c:	mov	r1, #1
   25f90:	str	r1, [r0, #64]	; 0x40
   25f94:	mov	r1, #9
   25f98:	str	r1, [r0, #84]	; 0x54
   25f9c:	ldr	r1, [pc, #3996]	; 26f40 <__flatcc_fb_parse@@Base+0xfc0>
   25fa0:	mov	r4, r0
   25fa4:	str	r1, [r0, #68]	; 0x44
   25fa8:	mov	r1, #4
   25fac:	str	r1, [r0, #72]	; 0x48
   25fb0:	mov	r1, #0
   25fb4:	str	r1, [r0, #80]	; 0x50
   25fb8:	str	r1, [r0, #76]	; 0x4c
   25fbc:	ldr	r0, [pc, #3968]	; 26f44 <__flatcc_fb_parse@@Base+0xfc4>
   25fc0:	ldr	r8, [pc, #3968]	; 26f48 <__flatcc_fb_parse@@Base+0xfc8>
   25fc4:	str	r0, [r4, #104]	; 0x68
   25fc8:	ldr	r0, [pc, #3964]	; 26f4c <__flatcc_fb_parse@@Base+0xfcc>
   25fcc:	sub	sp, sp, #28
   25fd0:	add	r7, r5, r2
   25fd4:	str	r0, [r4, #88]	; 0x58
   25fd8:	cmp	r3, r1
   25fdc:	mov	r0, #5
   25fe0:	str	r0, [r4, #92]	; 0x5c
   25fe4:	str	r1, [r4, #100]	; 0x64
   25fe8:	str	r1, [r4, #96]	; 0x60
   25fec:	strne	r5, [r4, #16]
   25ff0:	ldr	r9, [pc, #3928]	; 26f50 <__flatcc_fb_parse@@Base+0xfd0>
   25ff4:	cmp	r7, r5
   25ff8:	beq	262a8 <__flatcc_fb_parse@@Base+0x328>
   25ffc:	ldrb	r1, [r5]
   26000:	cmp	r1, #57	; 0x39
   26004:	bhi	26524 <__flatcc_fb_parse@@Base+0x5a4>
   26008:	cmp	r1, #49	; 0x31
   2600c:	bcs	26c90 <__flatcc_fb_parse@@Base+0xd10>
   26010:	cmp	r1, #38	; 0x26
   26014:	beq	26874 <__flatcc_fb_parse@@Base+0x8f4>
   26018:	bhi	26478 <__flatcc_fb_parse@@Base+0x4f8>
   2601c:	cmp	r1, #13
   26020:	beq	266dc <__flatcc_fb_parse@@Base+0x75c>
   26024:	bhi	26400 <__flatcc_fb_parse@@Base+0x480>
   26028:	cmp	r1, #9
   2602c:	beq	26414 <__flatcc_fb_parse@@Base+0x494>
   26030:	cmp	r1, #10
   26034:	beq	266b0 <__flatcc_fb_parse@@Base+0x730>
   26038:	cmp	r1, #0
   2603c:	beq	262a8 <__flatcc_fb_parse@@Base+0x328>
   26040:	add	r6, r5, #1
   26044:	cmp	r1, #127	; 0x7f
   26048:	cmpne	r1, #31
   2604c:	mov	r3, r6
   26050:	mov	r2, r5
   26054:	bhi	26068 <__flatcc_fb_parse@@Base+0xe8>
   26058:	cmp	r1, #32
   2605c:	cmpne	r1, #9
   26060:	movne	r1, #5
   26064:	bne	267fc <__flatcc_fb_parse@@Base+0x87c>
   26068:	mov	r1, #8
   2606c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26070:	mov	r9, r6
   26074:	b	26150 <__flatcc_fb_parse@@Base+0x1d0>
   26078:	mov	r6, r7
   2607c:	b	26178 <__flatcc_fb_parse@@Base+0x1f8>
   26080:	cmp	r7, r6
   26084:	cmpne	r3, #0
   26088:	bne	260a8 <__flatcc_fb_parse@@Base+0x128>
   2608c:	mov	r3, r6
   26090:	mov	r2, r6
   26094:	mov	r1, #23
   26098:	mov	r0, r4
   2609c:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   260a0:	mov	r5, r6
   260a4:	b	25ff0 <__flatcc_fb_parse@@Base+0x70>
   260a8:	cmp	r3, #92	; 0x5c
   260ac:	bne	261e0 <__flatcc_fb_parse@@Base+0x260>
   260b0:	add	r5, r9, #2
   260b4:	mov	r3, r5
   260b8:	mov	r2, r6
   260bc:	mov	r1, #21
   260c0:	mov	r0, r4
   260c4:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   260c8:	cmp	r7, r5
   260cc:	beq	260ec <__flatcc_fb_parse@@Base+0x16c>
   260d0:	ldrb	r3, [r6, #1]
   260d4:	cmp	r3, #0
   260d8:	bne	260f4 <__flatcc_fb_parse@@Base+0x174>
   260dc:	mov	r3, r5
   260e0:	mov	r2, r5
   260e4:	mov	r1, #23
   260e8:	b	261b0 <__flatcc_fb_parse@@Base+0x230>
   260ec:	mov	r5, r7
   260f0:	b	260dc <__flatcc_fb_parse@@Base+0x15c>
   260f4:	cmp	r3, #34	; 0x22
   260f8:	cmpne	r3, #92	; 0x5c
   260fc:	addeq	r9, r6, #2
   26100:	beq	2614c <__flatcc_fb_parse@@Base+0x1cc>
   26104:	cmp	r3, #10
   26108:	bne	261bc <__flatcc_fb_parse@@Base+0x23c>
   2610c:	add	r9, r6, #2
   26110:	cmp	r7, r9
   26114:	beq	26124 <__flatcc_fb_parse@@Base+0x1a4>
   26118:	ldrb	r3, [r6, #2]
   2611c:	cmp	r3, #13
   26120:	addeq	r9, r6, #3
   26124:	ldr	r3, [r4, #64]	; 0x40
   26128:	mov	r2, r5
   2612c:	add	r3, r3, #1
   26130:	str	r3, [r4, #64]	; 0x40
   26134:	mov	r1, #18
   26138:	mov	r3, r9
   2613c:	str	r9, [r4, #60]	; 0x3c
   26140:	mov	r0, r4
   26144:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   26148:	mov	r5, r9
   2614c:	sub	r9, r9, #1
   26150:	add	r6, r9, #1
   26154:	cmp	r7, r6
   26158:	beq	26078 <__flatcc_fb_parse@@Base+0xf8>
   2615c:	ldrb	r3, [r9, #1]
   26160:	cmp	r3, #92	; 0x5c
   26164:	cmpne	r3, #34	; 0x22
   26168:	beq	26178 <__flatcc_fb_parse@@Base+0x1f8>
   2616c:	cmp	r3, #127	; 0x7f
   26170:	cmpne	r3, #31
   26174:	bhi	26070 <__flatcc_fb_parse@@Base+0xf0>
   26178:	cmp	r6, r5
   2617c:	beq	26194 <__flatcc_fb_parse@@Base+0x214>
   26180:	mov	r3, r6
   26184:	mov	r2, r5
   26188:	mov	r1, fp
   2618c:	mov	r0, r4
   26190:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   26194:	ldrb	r3, [r6]
   26198:	cmp	r3, #34	; 0x22
   2619c:	bne	26080 <__flatcc_fb_parse@@Base+0x100>
   261a0:	add	r5, r9, #2
   261a4:	mov	r3, r5
   261a8:	mov	r2, r6
   261ac:	mov	r1, #22
   261b0:	mov	r0, r4
   261b4:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   261b8:	b	25ff0 <__flatcc_fb_parse@@Base+0x70>
   261bc:	cmp	r3, #13
   261c0:	movne	r6, r5
   261c4:	bne	261e0 <__flatcc_fb_parse@@Base+0x260>
   261c8:	add	r9, r6, #2
   261cc:	cmp	r7, r9
   261d0:	beq	26124 <__flatcc_fb_parse@@Base+0x1a4>
   261d4:	ldrb	r3, [r6, #2]
   261d8:	cmp	r3, #10
   261dc:	b	26120 <__flatcc_fb_parse@@Base+0x1a0>
   261e0:	ldrb	r3, [r6]
   261e4:	cmp	r3, #13
   261e8:	cmpne	r3, #10
   261ec:	beq	2608c <__flatcc_fb_parse@@Base+0x10c>
   261f0:	add	r9, r6, #1
   261f4:	mov	r3, r9
   261f8:	mov	r2, r6
   261fc:	mov	r1, sl
   26200:	b	26140 <__flatcc_fb_parse@@Base+0x1c0>
   26204:	mov	r9, r5
   26208:	b	26250 <__flatcc_fb_parse@@Base+0x2d0>
   2620c:	ldrb	r3, [r5]
   26210:	cmp	r3, #0
   26214:	beq	2628c <__flatcc_fb_parse@@Base+0x30c>
   26218:	cmp	r3, #13
   2621c:	cmpne	r3, #10
   26220:	moveq	r3, #0
   26224:	streq	r3, [r4, #32]
   26228:	beq	25ff0 <__flatcc_fb_parse@@Base+0x70>
   2622c:	cmp	r3, #9
   26230:	cmpne	r3, #32
   26234:	add	r6, r9, #2
   26238:	bne	262b8 <__flatcc_fb_parse@@Base+0x338>
   2623c:	mov	r2, r6
   26240:	mov	r1, r5
   26244:	mov	r0, r4
   26248:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   2624c:	sub	r9, r6, #1
   26250:	add	r5, r9, #1
   26254:	cmp	r7, r5
   26258:	beq	27eb8 <__flatcc_fb_parse@@Base+0x1f38>
   2625c:	ldrb	r3, [r9, #1]
   26260:	cmp	r3, #127	; 0x7f
   26264:	cmpne	r3, #31
   26268:	bhi	26204 <__flatcc_fb_parse@@Base+0x284>
   2626c:	cmp	r6, r5
   26270:	beq	2620c <__flatcc_fb_parse@@Base+0x28c>
   26274:	mov	r2, r5
   26278:	mov	r1, r6
   2627c:	mov	r0, r4
   26280:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   26284:	cmp	r5, r7
   26288:	bne	2620c <__flatcc_fb_parse@@Base+0x28c>
   2628c:	mov	r3, r5
   26290:	mov	r2, r5
   26294:	mov	r1, #27
   26298:	mov	r0, r4
   2629c:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   262a0:	cmp	r7, r5
   262a4:	bne	274f8 <__flatcc_fb_parse@@Base+0x1578>
   262a8:	mov	r3, r5
   262ac:	mov	r2, r5
   262b0:	mov	r1, #0
   262b4:	b	2750c <__flatcc_fb_parse@@Base+0x158c>
   262b8:	mov	r3, r6
   262bc:	mov	r2, r5
   262c0:	mov	r1, sl
   262c4:	mov	r0, r4
   262c8:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   262cc:	b	2624c <__flatcc_fb_parse@@Base+0x2cc>
   262d0:	cmp	r2, #47	; 0x2f
   262d4:	bne	262e4 <__flatcc_fb_parse@@Base+0x364>
   262d8:	ldrb	r2, [r3, #-1]
   262dc:	cmp	r2, #42	; 0x2a
   262e0:	beq	262ec <__flatcc_fb_parse@@Base+0x36c>
   262e4:	mov	r5, r3
   262e8:	b	2633c <__flatcc_fb_parse@@Base+0x3bc>
   262ec:	cmp	r6, r5
   262f0:	bne	26368 <__flatcc_fb_parse@@Base+0x3e8>
   262f4:	cmp	r7, r5
   262f8:	beq	27ed0 <__flatcc_fb_parse@@Base+0x1f50>
   262fc:	ldrb	r3, [r5]
   26300:	cmp	r3, #0
   26304:	beq	2628c <__flatcc_fb_parse@@Base+0x30c>
   26308:	cmp	r3, #10
   2630c:	bne	26384 <__flatcc_fb_parse@@Base+0x404>
   26310:	add	r6, r5, #1
   26314:	cmp	r7, r6
   26318:	beq	26328 <__flatcc_fb_parse@@Base+0x3a8>
   2631c:	ldrb	r3, [r5, #1]
   26320:	cmp	r3, #13
   26324:	addeq	r6, r5, #2
   26328:	ldr	r3, [r4, #64]	; 0x40
   2632c:	str	r6, [r4, #60]	; 0x3c
   26330:	add	r3, r3, #1
   26334:	str	r3, [r4, #64]	; 0x40
   26338:	sub	r5, r6, #1
   2633c:	add	r3, r5, #1
   26340:	cmp	r7, r3
   26344:	beq	27ec8 <__flatcc_fb_parse@@Base+0x1f48>
   26348:	ldrb	r2, [r5, #1]
   2634c:	cmp	r2, #127	; 0x7f
   26350:	cmpne	r2, #31
   26354:	bhi	262d0 <__flatcc_fb_parse@@Base+0x350>
   26358:	cmp	r6, r3
   2635c:	moveq	r5, r6
   26360:	beq	262fc <__flatcc_fb_parse@@Base+0x37c>
   26364:	mov	r5, r3
   26368:	mov	r2, r5
   2636c:	mov	r1, r6
   26370:	mov	r0, r4
   26374:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   26378:	b	262f4 <__flatcc_fb_parse@@Base+0x374>
   2637c:	mov	r5, r7
   26380:	b	26368 <__flatcc_fb_parse@@Base+0x3e8>
   26384:	cmp	r3, #13
   26388:	bne	263a4 <__flatcc_fb_parse@@Base+0x424>
   2638c:	add	r6, r5, #1
   26390:	cmp	r7, r6
   26394:	beq	26328 <__flatcc_fb_parse@@Base+0x3a8>
   26398:	ldrb	r3, [r5, #1]
   2639c:	cmp	r3, #10
   263a0:	b	26324 <__flatcc_fb_parse@@Base+0x3a4>
   263a4:	cmp	r3, #127	; 0x7f
   263a8:	cmpne	r3, #31
   263ac:	movls	r2, #1
   263b0:	movhi	r2, #0
   263b4:	bhi	263f4 <__flatcc_fb_parse@@Base+0x474>
   263b8:	cmp	r3, #9
   263bc:	cmpne	r3, #32
   263c0:	add	r6, r5, #1
   263c4:	bne	263dc <__flatcc_fb_parse@@Base+0x45c>
   263c8:	mov	r2, r6
   263cc:	mov	r1, r5
   263d0:	mov	r0, r4
   263d4:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   263d8:	b	26338 <__flatcc_fb_parse@@Base+0x3b8>
   263dc:	mov	r3, r6
   263e0:	mov	r2, r5
   263e4:	mov	r1, r9
   263e8:	mov	r0, r4
   263ec:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   263f0:	b	26338 <__flatcc_fb_parse@@Base+0x3b8>
   263f4:	add	r5, r5, #2
   263f8:	str	r2, [r4, #32]
   263fc:	b	25ff0 <__flatcc_fb_parse@@Base+0x70>
   26400:	cmp	r1, #33	; 0x21
   26404:	beq	2644c <__flatcc_fb_parse@@Base+0x4cc>
   26408:	bhi	2643c <__flatcc_fb_parse@@Base+0x4bc>
   2640c:	cmp	r1, #32
   26410:	bne	26040 <__flatcc_fb_parse@@Base+0xc0>
   26414:	add	r5, r5, #1
   26418:	cmp	r5, r7
   2641c:	mov	r6, r5
   26420:	beq	26434 <__flatcc_fb_parse@@Base+0x4b4>
   26424:	ldrb	r3, [r5], #1
   26428:	cmp	r3, #9
   2642c:	cmpne	r3, #32
   26430:	beq	26418 <__flatcc_fb_parse@@Base+0x498>
   26434:	mov	r5, r6
   26438:	b	25ff4 <__flatcc_fb_parse@@Base+0x74>
   2643c:	cmp	r1, #34	; 0x22
   26440:	beq	266f4 <__flatcc_fb_parse@@Base+0x774>
   26444:	cmp	r1, #37	; 0x25
   26448:	bne	26040 <__flatcc_fb_parse@@Base+0xc0>
   2644c:	add	r6, r5, #1
   26450:	cmp	r7, r6
   26454:	beq	264a0 <__flatcc_fb_parse@@Base+0x520>
   26458:	ldrb	r3, [r5, #1]
   2645c:	cmp	r3, #61	; 0x3d
   26460:	bne	264a0 <__flatcc_fb_parse@@Base+0x520>
   26464:	add	r6, r5, #2
   26468:	mov	r3, r6
   2646c:	mov	r2, r5
   26470:	orr	r1, r1, #15616	; 0x3d00
   26474:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26478:	cmp	r1, #44	; 0x2c
   2647c:	beq	2649c <__flatcc_fb_parse@@Base+0x51c>
   26480:	add	r3, r5, #1
   26484:	bhi	264ac <__flatcc_fb_parse@@Base+0x52c>
   26488:	cmp	r1, #42	; 0x2a
   2648c:	beq	269c8 <__flatcc_fb_parse@@Base+0xa48>
   26490:	bhi	26bcc <__flatcc_fb_parse@@Base+0xc4c>
   26494:	cmp	r1, #40	; 0x28
   26498:	bcc	26040 <__flatcc_fb_parse@@Base+0xc0>
   2649c:	add	r6, r5, #1
   264a0:	mov	r3, r6
   264a4:	mov	r2, r5
   264a8:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   264ac:	cmp	r1, #46	; 0x2e
   264b0:	beq	26c20 <__flatcc_fb_parse@@Base+0xca0>
   264b4:	bcc	26b5c <__flatcc_fb_parse@@Base+0xbdc>
   264b8:	cmp	r1, #47	; 0x2f
   264bc:	beq	2671c <__flatcc_fb_parse@@Base+0x79c>
   264c0:	cmp	r1, #48	; 0x30
   264c4:	bne	26040 <__flatcc_fb_parse@@Base+0xc0>
   264c8:	cmp	r7, r3
   264cc:	beq	26c90 <__flatcc_fb_parse@@Base+0xd10>
   264d0:	ldrb	r3, [r5, #1]
   264d4:	cmp	r3, #88	; 0x58
   264d8:	beq	264e4 <__flatcc_fb_parse@@Base+0x564>
   264dc:	cmp	r3, #120	; 0x78
   264e0:	bne	26c90 <__flatcc_fb_parse@@Base+0xd10>
   264e4:	add	r2, r5, #2
   264e8:	cmp	r7, r2
   264ec:	mov	r6, r2
   264f0:	beq	26514 <__flatcc_fb_parse@@Base+0x594>
   264f4:	ldrb	r3, [r2], #1
   264f8:	sub	r1, r3, #48	; 0x30
   264fc:	cmp	r1, #9
   26500:	bls	264e8 <__flatcc_fb_parse@@Base+0x568>
   26504:	orr	r3, r3, #32
   26508:	sub	r3, r3, #97	; 0x61
   2650c:	cmp	r3, #5
   26510:	bls	264e8 <__flatcc_fb_parse@@Base+0x568>
   26514:	mov	r3, r6
   26518:	mov	r2, r5
   2651c:	mov	r1, #14
   26520:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26524:	cmp	r1, #93	; 0x5d
   26528:	add	r3, r5, #1
   2652c:	bhi	26670 <__flatcc_fb_parse@@Base+0x6f0>
   26530:	cmp	r1, #91	; 0x5b
   26534:	bcs	2649c <__flatcc_fb_parse@@Base+0x51c>
   26538:	cmp	r1, #61	; 0x3d
   2653c:	beq	268d0 <__flatcc_fb_parse@@Base+0x950>
   26540:	bhi	2658c <__flatcc_fb_parse@@Base+0x60c>
   26544:	cmp	r1, #59	; 0x3b
   26548:	beq	2649c <__flatcc_fb_parse@@Base+0x51c>
   2654c:	bls	26950 <__flatcc_fb_parse@@Base+0x9d0>
   26550:	cmp	r7, r3
   26554:	mov	r6, r3
   26558:	beq	26a94 <__flatcc_fb_parse@@Base+0xb14>
   2655c:	ldrb	r2, [r5, #1]
   26560:	cmp	r2, #60	; 0x3c
   26564:	beq	26a18 <__flatcc_fb_parse@@Base+0xa98>
   26568:	cmp	r2, #61	; 0x3d
   2656c:	beq	26a04 <__flatcc_fb_parse@@Base+0xa84>
   26570:	cmp	r2, #45	; 0x2d
   26574:	bne	26a94 <__flatcc_fb_parse@@Base+0xb14>
   26578:	add	r6, r5, #2
   2657c:	mov	r3, r6
   26580:	mov	r2, r5
   26584:	ldr	r1, [pc, #2504]	; 26f54 <__flatcc_fb_parse@@Base+0xfd4>
   26588:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   2658c:	cmp	r1, #63	; 0x3f
   26590:	beq	2649c <__flatcc_fb_parse@@Base+0x51c>
   26594:	bcc	26aa0 <__flatcc_fb_parse@@Base+0xb20>
   26598:	cmp	r1, #65	; 0x41
   2659c:	bcc	26040 <__flatcc_fb_parse@@Base+0xc0>
   265a0:	cmp	r7, r3
   265a4:	lsl	r1, r1, #8
   265a8:	mov	r6, r3
   265ac:	beq	265f0 <__flatcc_fb_parse@@Base+0x670>
   265b0:	ldrb	r3, [r5, #1]
   265b4:	add	r2, r8, r3
   265b8:	ldrb	r2, [r2, #34]	; 0x22
   265bc:	cmp	r2, #0
   265c0:	beq	265f0 <__flatcc_fb_parse@@Base+0x670>
   265c4:	orr	r1, r1, r3, lsl #16
   265c8:	add	r3, r5, #2
   265cc:	cmp	r7, r3
   265d0:	mov	r6, r3
   265d4:	beq	265f0 <__flatcc_fb_parse@@Base+0x670>
   265d8:	ldrb	r2, [r6]
   265dc:	add	r3, r3, #1
   265e0:	add	r2, r8, r2
   265e4:	ldrb	r2, [r2, #34]	; 0x22
   265e8:	cmp	r2, #0
   265ec:	bne	265cc <__flatcc_fb_parse@@Base+0x64c>
   265f0:	ldrb	r3, [r6, #-1]
   265f4:	orr	r1, r1, r3, lsl #24
   265f8:	sub	r3, r6, r5
   265fc:	uxtb	r3, r3
   26600:	add	r3, r3, #48	; 0x30
   26604:	orr	r1, r3, r1
   26608:	cmp	r1, r9
   2660c:	beq	274a8 <__flatcc_fb_parse@@Base+0x1528>
   26610:	bhi	26e70 <__flatcc_fb_parse@@Base+0xef0>
   26614:	ldr	r3, [pc, #2364]	; 26f58 <__flatcc_fb_parse@@Base+0xfd8>
   26618:	cmp	r1, r3
   2661c:	beq	27358 <__flatcc_fb_parse@@Base+0x13d8>
   26620:	bhi	26db8 <__flatcc_fb_parse@@Base+0xe38>
   26624:	add	r3, r3, #-67108863	; 0xfc000001
   26628:	cmp	r1, r3
   2662c:	beq	273f8 <__flatcc_fb_parse@@Base+0x1478>
   26630:	bhi	26d64 <__flatcc_fb_parse@@Base+0xde4>
   26634:	ldr	r3, [pc, #2336]	; 26f5c <__flatcc_fb_parse@@Base+0xfdc>
   26638:	cmp	r1, r3
   2663c:	beq	27428 <__flatcc_fb_parse@@Base+0x14a8>
   26640:	ldr	r3, [pc, #2328]	; 26f60 <__flatcc_fb_parse@@Base+0xfe0>
   26644:	cmp	r1, r3
   26648:	beq	27310 <__flatcc_fb_parse@@Base+0x1390>
   2664c:	ldr	r3, [pc, #2320]	; 26f64 <__flatcc_fb_parse@@Base+0xfe4>
   26650:	cmp	r1, r3
   26654:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26658:	mov	r1, r5
   2665c:	mov	r2, #6
   26660:	ldr	r0, [pc, #2304]	; 26f68 <__flatcc_fb_parse@@Base+0xfe8>
   26664:	bl	1403c <memcmp@plt>
   26668:	ldr	r1, [pc, #2300]	; 26f6c <__flatcc_fb_parse@@Base+0xfec>
   2666c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   26670:	cmp	r1, #122	; 0x7a
   26674:	bhi	26694 <__flatcc_fb_parse@@Base+0x714>
   26678:	cmp	r1, #97	; 0x61
   2667c:	bcs	265a0 <__flatcc_fb_parse@@Base+0x620>
   26680:	cmp	r1, #94	; 0x5e
   26684:	beq	2644c <__flatcc_fb_parse@@Base+0x4cc>
   26688:	cmp	r1, #95	; 0x5f
   2668c:	beq	265a0 <__flatcc_fb_parse@@Base+0x620>
   26690:	b	26040 <__flatcc_fb_parse@@Base+0xc0>
   26694:	cmp	r1, #124	; 0x7c
   26698:	beq	26814 <__flatcc_fb_parse@@Base+0x894>
   2669c:	bcc	2649c <__flatcc_fb_parse@@Base+0x51c>
   266a0:	cmp	r1, #125	; 0x7d
   266a4:	beq	2649c <__flatcc_fb_parse@@Base+0x51c>
   266a8:	cmp	r1, #126	; 0x7e
   266ac:	b	26448 <__flatcc_fb_parse@@Base+0x4c8>
   266b0:	add	r6, r5, #1
   266b4:	cmp	r7, r6
   266b8:	beq	266c8 <__flatcc_fb_parse@@Base+0x748>
   266bc:	ldrb	r3, [r5, #1]
   266c0:	cmp	r3, #13
   266c4:	addeq	r6, r5, #2
   266c8:	ldr	r3, [r4, #64]	; 0x40
   266cc:	str	r6, [r4, #60]	; 0x3c
   266d0:	add	r3, r3, #1
   266d4:	str	r3, [r4, #64]	; 0x40
   266d8:	b	26434 <__flatcc_fb_parse@@Base+0x4b4>
   266dc:	add	r6, r5, #1
   266e0:	cmp	r7, r6
   266e4:	beq	266c8 <__flatcc_fb_parse@@Base+0x748>
   266e8:	ldrb	r3, [r5, #1]
   266ec:	cmp	r3, #10
   266f0:	b	266c4 <__flatcc_fb_parse@@Base+0x744>
   266f4:	add	r9, r5, #1
   266f8:	mov	r2, r5
   266fc:	mov	r3, r9
   26700:	mov	r1, #19
   26704:	mov	r0, r4
   26708:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   2670c:	mov	r5, r9
   26710:	mov	fp, #20
   26714:	mov	sl, #6
   26718:	b	2614c <__flatcc_fb_parse@@Base+0x1cc>
   2671c:	cmp	r7, r3
   26720:	mov	r6, r3
   26724:	beq	26808 <__flatcc_fb_parse@@Base+0x888>
   26728:	ldrb	r2, [r5, #1]
   2672c:	cmp	r2, #47	; 0x2f
   26730:	beq	26798 <__flatcc_fb_parse@@Base+0x818>
   26734:	cmp	r2, #61	; 0x3d
   26738:	beq	267ec <__flatcc_fb_parse@@Base+0x86c>
   2673c:	cmp	r2, #42	; 0x2a
   26740:	bne	26808 <__flatcc_fb_parse@@Base+0x888>
   26744:	add	r3, r5, #2
   26748:	cmp	r7, r3
   2674c:	moveq	r6, #0
   26750:	beq	26768 <__flatcc_fb_parse@@Base+0x7e8>
   26754:	ldrb	r6, [r5, #2]
   26758:	cmp	r6, #33	; 0x21
   2675c:	cmpne	r6, #42	; 0x2a
   26760:	moveq	r6, #1
   26764:	movne	r6, #0
   26768:	add	r6, r3, r6
   2676c:	sub	r5, r6, r5
   26770:	sub	r5, r5, #3
   26774:	clz	r5, r5
   26778:	lsr	r5, r5, #5
   2677c:	str	r5, [r4, #32]
   26780:	mov	r2, r6
   26784:	mov	r1, r6
   26788:	mov	r0, r4
   2678c:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   26790:	mov	r9, #7
   26794:	b	26338 <__flatcc_fb_parse@@Base+0x3b8>
   26798:	add	r3, r5, #2
   2679c:	cmp	r7, r3
   267a0:	moveq	r6, #0
   267a4:	beq	267bc <__flatcc_fb_parse@@Base+0x83c>
   267a8:	ldrb	r6, [r5, #2]
   267ac:	cmp	r6, #33	; 0x21
   267b0:	cmpne	r6, #47	; 0x2f
   267b4:	moveq	r6, #1
   267b8:	movne	r6, #0
   267bc:	add	r6, r3, r6
   267c0:	sub	r5, r6, r5
   267c4:	sub	r5, r5, #3
   267c8:	clz	r5, r5
   267cc:	lsr	r5, r5, #5
   267d0:	str	r5, [r4, #32]
   267d4:	mov	r2, r6
   267d8:	mov	r1, r6
   267dc:	mov	r0, r4
   267e0:	bl	24b94 <__flatcc_fb_default_error_out@@Base+0xd0>
   267e4:	mov	sl, #7
   267e8:	b	2624c <__flatcc_fb_parse@@Base+0x2cc>
   267ec:	add	r6, r5, #2
   267f0:	ldr	r1, [pc, #1912]	; 26f70 <__flatcc_fb_parse@@Base+0xff0>
   267f4:	mov	r3, r6
   267f8:	mov	r2, r5
   267fc:	mov	r0, r4
   26800:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   26804:	b	26434 <__flatcc_fb_parse@@Base+0x4b4>
   26808:	mov	r2, r5
   2680c:	mov	r1, #47	; 0x2f
   26810:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26814:	cmp	r7, r3
   26818:	mov	r6, r3
   2681c:	beq	26834 <__flatcc_fb_parse@@Base+0x8b4>
   26820:	ldrb	r3, [r5, #1]
   26824:	cmp	r3, #61	; 0x3d
   26828:	beq	26844 <__flatcc_fb_parse@@Base+0x8c4>
   2682c:	cmp	r3, #124	; 0x7c
   26830:	beq	26858 <__flatcc_fb_parse@@Base+0x8d8>
   26834:	mov	r3, r6
   26838:	mov	r2, r5
   2683c:	mov	r1, #124	; 0x7c
   26840:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26844:	add	r6, r5, #2
   26848:	mov	r3, r6
   2684c:	mov	r2, r5
   26850:	ldr	r1, [pc, #1820]	; 26f74 <__flatcc_fb_parse@@Base+0xff4>
   26854:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26858:	add	r6, r5, #2
   2685c:	mov	r3, r6
   26860:	mov	r2, r5
   26864:	ldr	r1, [pc, #1804]	; 26f78 <__flatcc_fb_parse@@Base+0xff8>
   26868:	mov	r0, r4
   2686c:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   26870:	b	26834 <__flatcc_fb_parse@@Base+0x8b4>
   26874:	add	r6, r5, #1
   26878:	cmp	r7, r6
   2687c:	beq	268c0 <__flatcc_fb_parse@@Base+0x940>
   26880:	ldrb	r3, [r5, #1]
   26884:	cmp	r3, #38	; 0x26
   26888:	beq	268a8 <__flatcc_fb_parse@@Base+0x928>
   2688c:	cmp	r3, #61	; 0x3d
   26890:	bne	268c0 <__flatcc_fb_parse@@Base+0x940>
   26894:	add	r6, r5, #2
   26898:	mov	r3, r6
   2689c:	mov	r2, r5
   268a0:	ldr	r1, [pc, #1748]	; 26f7c <__flatcc_fb_parse@@Base+0xffc>
   268a4:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   268a8:	add	r6, r5, #2
   268ac:	mov	r3, r6
   268b0:	mov	r2, r5
   268b4:	ldr	r1, [pc, #1732]	; 26f80 <__flatcc_fb_parse@@Base+0x1000>
   268b8:	mov	r0, r4
   268bc:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   268c0:	mov	r3, r6
   268c4:	mov	r2, r5
   268c8:	mov	r1, #38	; 0x26
   268cc:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   268d0:	cmp	r7, r3
   268d4:	mov	r6, r3
   268d8:	beq	26940 <__flatcc_fb_parse@@Base+0x9c0>
   268dc:	ldrb	r3, [r5, #1]
   268e0:	cmp	r3, #61	; 0x3d
   268e4:	beq	26904 <__flatcc_fb_parse@@Base+0x984>
   268e8:	cmp	r3, #62	; 0x3e
   268ec:	bne	26940 <__flatcc_fb_parse@@Base+0x9c0>
   268f0:	add	r6, r5, #2
   268f4:	mov	r3, r6
   268f8:	mov	r2, r5
   268fc:	ldr	r1, [pc, #1664]	; 26f84 <__flatcc_fb_parse@@Base+0x1004>
   26900:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26904:	add	r6, r5, #2
   26908:	cmp	r7, r6
   2690c:	beq	2692c <__flatcc_fb_parse@@Base+0x9ac>
   26910:	ldrb	r3, [r5, #2]
   26914:	cmp	r3, #61	; 0x3d
   26918:	addeq	r6, r5, #3
   2691c:	moveq	r3, r6
   26920:	moveq	r2, r5
   26924:	ldreq	r1, [pc, #1628]	; 26f88 <__flatcc_fb_parse@@Base+0x1008>
   26928:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   2692c:	mov	r3, r6
   26930:	mov	r2, r5
   26934:	ldr	r1, [pc, #1616]	; 26f8c <__flatcc_fb_parse@@Base+0x100c>
   26938:	mov	r0, r4
   2693c:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   26940:	mov	r3, r6
   26944:	mov	r2, r5
   26948:	mov	r1, #61	; 0x3d
   2694c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26950:	cmp	r7, r3
   26954:	mov	r6, r3
   26958:	beq	269bc <__flatcc_fb_parse@@Base+0xa3c>
   2695c:	ldrb	r2, [r5, #1]
   26960:	cmp	r2, #58	; 0x3a
   26964:	beq	26984 <__flatcc_fb_parse@@Base+0xa04>
   26968:	cmp	r2, #61	; 0x3d
   2696c:	bne	269bc <__flatcc_fb_parse@@Base+0xa3c>
   26970:	add	r6, r5, #2
   26974:	mov	r3, r6
   26978:	mov	r2, r5
   2697c:	ldr	r1, [pc, #1548]	; 26f90 <__flatcc_fb_parse@@Base+0x1010>
   26980:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26984:	add	r6, r5, #2
   26988:	cmp	r7, r6
   2698c:	beq	269ac <__flatcc_fb_parse@@Base+0xa2c>
   26990:	ldrb	r3, [r5, #2]
   26994:	cmp	r3, #61	; 0x3d
   26998:	addeq	r6, r5, #3
   2699c:	moveq	r3, r6
   269a0:	moveq	r2, r5
   269a4:	ldreq	r1, [pc, #1512]	; 26f94 <__flatcc_fb_parse@@Base+0x1014>
   269a8:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   269ac:	mov	r3, r6
   269b0:	mov	r2, r5
   269b4:	ldr	r1, [pc, #1500]	; 26f98 <__flatcc_fb_parse@@Base+0x1018>
   269b8:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   269bc:	mov	r2, r5
   269c0:	mov	r1, #58	; 0x3a
   269c4:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   269c8:	cmp	r7, r3
   269cc:	mov	r6, r3
   269d0:	beq	269f8 <__flatcc_fb_parse@@Base+0xa78>
   269d4:	ldrb	r2, [r5, #1]
   269d8:	cmp	r2, #42	; 0x2a
   269dc:	moveq	r2, r5
   269e0:	ldreq	r1, [pc, #1460]	; 26f9c <__flatcc_fb_parse@@Base+0x101c>
   269e4:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   269e8:	cmp	r2, #61	; 0x3d
   269ec:	moveq	r2, r5
   269f0:	ldreq	r1, [pc, #1448]	; 26fa0 <__flatcc_fb_parse@@Base+0x1020>
   269f4:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   269f8:	mov	r2, r5
   269fc:	mov	r1, #42	; 0x2a
   26a00:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a04:	add	r6, r5, #2
   26a08:	mov	r3, r6
   26a0c:	mov	r2, r5
   26a10:	ldr	r1, [pc, #1420]	; 26fa4 <__flatcc_fb_parse@@Base+0x1024>
   26a14:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a18:	add	r6, r5, #2
   26a1c:	cmp	r7, r6
   26a20:	beq	26a84 <__flatcc_fb_parse@@Base+0xb04>
   26a24:	ldrb	r3, [r5, #2]
   26a28:	cmp	r3, #60	; 0x3c
   26a2c:	beq	26a4c <__flatcc_fb_parse@@Base+0xacc>
   26a30:	cmp	r3, #61	; 0x3d
   26a34:	bne	26a84 <__flatcc_fb_parse@@Base+0xb04>
   26a38:	add	r6, r5, #3
   26a3c:	mov	r3, r6
   26a40:	mov	r2, r5
   26a44:	ldr	r1, [pc, #1372]	; 26fa8 <__flatcc_fb_parse@@Base+0x1028>
   26a48:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a4c:	add	r6, r5, #3
   26a50:	cmp	r7, r6
   26a54:	beq	26a74 <__flatcc_fb_parse@@Base+0xaf4>
   26a58:	ldrb	r3, [r5, #3]
   26a5c:	cmp	r3, #61	; 0x3d
   26a60:	addeq	r6, r5, #4
   26a64:	moveq	r3, r6
   26a68:	moveq	r2, r5
   26a6c:	ldreq	r1, [pc, #1336]	; 26fac <__flatcc_fb_parse@@Base+0x102c>
   26a70:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a74:	mov	r3, r6
   26a78:	mov	r2, r5
   26a7c:	ldr	r1, [pc, #1324]	; 26fb0 <__flatcc_fb_parse@@Base+0x1030>
   26a80:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a84:	mov	r3, r6
   26a88:	mov	r2, r5
   26a8c:	ldr	r1, [pc, #1312]	; 26fb4 <__flatcc_fb_parse@@Base+0x1034>
   26a90:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26a94:	mov	r2, r5
   26a98:	mov	r1, #60	; 0x3c
   26a9c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26aa0:	cmp	r7, r3
   26aa4:	mov	r6, r3
   26aa8:	beq	26ac0 <__flatcc_fb_parse@@Base+0xb40>
   26aac:	ldrb	r2, [r5, #1]
   26ab0:	cmp	r2, #61	; 0x3d
   26ab4:	beq	26acc <__flatcc_fb_parse@@Base+0xb4c>
   26ab8:	cmp	r2, #62	; 0x3e
   26abc:	beq	26ae0 <__flatcc_fb_parse@@Base+0xb60>
   26ac0:	mov	r2, r5
   26ac4:	mov	r1, #62	; 0x3e
   26ac8:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26acc:	add	r6, r5, #2
   26ad0:	mov	r3, r6
   26ad4:	mov	r2, r5
   26ad8:	ldr	r1, [pc, #1240]	; 26fb8 <__flatcc_fb_parse@@Base+0x1038>
   26adc:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26ae0:	add	r6, r5, #2
   26ae4:	cmp	r7, r6
   26ae8:	beq	26b00 <__flatcc_fb_parse@@Base+0xb80>
   26aec:	ldrb	r3, [r5, #2]
   26af0:	cmp	r3, #61	; 0x3d
   26af4:	beq	26b10 <__flatcc_fb_parse@@Base+0xb90>
   26af8:	cmp	r3, #62	; 0x3e
   26afc:	beq	26b24 <__flatcc_fb_parse@@Base+0xba4>
   26b00:	mov	r3, r6
   26b04:	mov	r2, r5
   26b08:	ldr	r1, [pc, #1196]	; 26fbc <__flatcc_fb_parse@@Base+0x103c>
   26b0c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26b10:	add	r6, r5, #3
   26b14:	mov	r3, r6
   26b18:	mov	r2, r5
   26b1c:	ldr	r1, [pc, #1180]	; 26fc0 <__flatcc_fb_parse@@Base+0x1040>
   26b20:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26b24:	add	r6, r5, #3
   26b28:	cmp	r7, r6
   26b2c:	beq	26b4c <__flatcc_fb_parse@@Base+0xbcc>
   26b30:	ldrb	r3, [r5, #3]
   26b34:	cmp	r3, #61	; 0x3d
   26b38:	addeq	r6, r5, #4
   26b3c:	moveq	r3, r6
   26b40:	moveq	r2, r5
   26b44:	ldreq	r1, [pc, #1144]	; 26fc4 <__flatcc_fb_parse@@Base+0x1044>
   26b48:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   26b4c:	mov	r3, r6
   26b50:	mov	r2, r5
   26b54:	ldr	r1, [pc, #1132]	; 26fc8 <__flatcc_fb_parse@@Base+0x1048>
   26b58:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26b5c:	cmp	r7, r3
   26b60:	mov	r6, r3
   26b64:	beq	26bc0 <__flatcc_fb_parse@@Base+0xc40>
   26b68:	ldrb	r2, [r5, #1]
   26b6c:	cmp	r2, #61	; 0x3d
   26b70:	beq	26b98 <__flatcc_fb_parse@@Base+0xc18>
   26b74:	cmp	r2, #62	; 0x3e
   26b78:	beq	26bac <__flatcc_fb_parse@@Base+0xc2c>
   26b7c:	cmp	r2, #45	; 0x2d
   26b80:	bne	26bc0 <__flatcc_fb_parse@@Base+0xc40>
   26b84:	add	r6, r5, #2
   26b88:	mov	r3, r6
   26b8c:	mov	r2, r5
   26b90:	ldr	r1, [pc, #1076]	; 26fcc <__flatcc_fb_parse@@Base+0x104c>
   26b94:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26b98:	add	r6, r5, #2
   26b9c:	mov	r3, r6
   26ba0:	mov	r2, r5
   26ba4:	ldr	r1, [pc, #1060]	; 26fd0 <__flatcc_fb_parse@@Base+0x1050>
   26ba8:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26bac:	add	r6, r5, #2
   26bb0:	mov	r3, r6
   26bb4:	mov	r2, r5
   26bb8:	ldr	r1, [pc, #1044]	; 26fd4 <__flatcc_fb_parse@@Base+0x1054>
   26bbc:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26bc0:	mov	r2, r5
   26bc4:	mov	r1, #45	; 0x2d
   26bc8:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26bcc:	cmp	r7, r3
   26bd0:	mov	r6, r3
   26bd4:	beq	26c14 <__flatcc_fb_parse@@Base+0xc94>
   26bd8:	ldrb	r2, [r5, #1]
   26bdc:	cmp	r2, #43	; 0x2b
   26be0:	beq	26c00 <__flatcc_fb_parse@@Base+0xc80>
   26be4:	cmp	r2, #61	; 0x3d
   26be8:	bne	26c14 <__flatcc_fb_parse@@Base+0xc94>
   26bec:	add	r6, r5, #2
   26bf0:	mov	r3, r6
   26bf4:	mov	r2, r5
   26bf8:	ldr	r1, [pc, #984]	; 26fd8 <__flatcc_fb_parse@@Base+0x1058>
   26bfc:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c00:	add	r6, r5, #2
   26c04:	mov	r3, r6
   26c08:	mov	r2, r5
   26c0c:	ldr	r1, [pc, #968]	; 26fdc <__flatcc_fb_parse@@Base+0x105c>
   26c10:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c14:	mov	r2, r5
   26c18:	mov	r1, #43	; 0x2b
   26c1c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c20:	cmp	r7, r3
   26c24:	mov	r6, r3
   26c28:	beq	26c4c <__flatcc_fb_parse@@Base+0xccc>
   26c2c:	ldrb	r2, [r5, #1]
   26c30:	cmp	r2, #46	; 0x2e
   26c34:	beq	26c58 <__flatcc_fb_parse@@Base+0xcd8>
   26c38:	bcc	26c4c <__flatcc_fb_parse@@Base+0xccc>
   26c3c:	sub	r2, r2, #48	; 0x30
   26c40:	cmp	r2, #9
   26c44:	movls	r2, r5
   26c48:	bls	26ccc <__flatcc_fb_parse@@Base+0xd4c>
   26c4c:	mov	r2, r5
   26c50:	mov	r1, #46	; 0x2e
   26c54:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c58:	add	r6, r5, #2
   26c5c:	cmp	r7, r6
   26c60:	beq	26c80 <__flatcc_fb_parse@@Base+0xd00>
   26c64:	ldrb	r3, [r5, #2]
   26c68:	cmp	r3, #46	; 0x2e
   26c6c:	addeq	r6, r5, #3
   26c70:	moveq	r3, r6
   26c74:	moveq	r2, r5
   26c78:	ldreq	r1, [pc, #864]	; 26fe0 <__flatcc_fb_parse@@Base+0x1060>
   26c7c:	beq	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c80:	mov	r3, r6
   26c84:	mov	r2, r5
   26c88:	ldr	r1, [pc, #852]	; 26fe4 <__flatcc_fb_parse@@Base+0x1064>
   26c8c:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26c90:	add	r3, r5, #1
   26c94:	subs	r6, r3, #0
   26c98:	beq	27ed8 <__flatcc_fb_parse@@Base+0x1f58>
   26c9c:	ldrb	r2, [r3]
   26ca0:	add	r3, r6, #1
   26ca4:	sub	r1, r2, #48	; 0x30
   26ca8:	cmp	r1, #9
   26cac:	bls	26c94 <__flatcc_fb_parse@@Base+0xd14>
   26cb0:	cmp	r2, #46	; 0x2e
   26cb4:	moveq	r2, r6
   26cb8:	beq	26ccc <__flatcc_fb_parse@@Base+0xd4c>
   26cbc:	cmp	r7, r6
   26cc0:	beq	26d54 <__flatcc_fb_parse@@Base+0xdd4>
   26cc4:	mov	r2, r6
   26cc8:	b	26cf0 <__flatcc_fb_parse@@Base+0xd70>
   26ccc:	add	r3, r6, #1
   26cd0:	cmp	r3, r7
   26cd4:	mov	r6, r3
   26cd8:	beq	26d40 <__flatcc_fb_parse@@Base+0xdc0>
   26cdc:	ldrb	r1, [r6]
   26ce0:	add	r3, r3, #1
   26ce4:	sub	r1, r1, #48	; 0x30
   26ce8:	cmp	r1, #9
   26cec:	bls	26cd0 <__flatcc_fb_parse@@Base+0xd50>
   26cf0:	ldrb	r3, [r6]
   26cf4:	and	r3, r3, #223	; 0xdf
   26cf8:	cmp	r3, #69	; 0x45
   26cfc:	bne	26d40 <__flatcc_fb_parse@@Base+0xdc0>
   26d00:	add	r3, r6, #1
   26d04:	cmp	r7, r3
   26d08:	beq	26d1c <__flatcc_fb_parse@@Base+0xd9c>
   26d0c:	ldrb	r1, [r6, #1]
   26d10:	sub	r1, r1, #43	; 0x2b
   26d14:	tst	r1, #253	; 0xfd
   26d18:	movne	r3, r6
   26d1c:	add	r3, r3, #1
   26d20:	cmp	r7, r3
   26d24:	mov	r6, r3
   26d28:	beq	26d40 <__flatcc_fb_parse@@Base+0xdc0>
   26d2c:	ldrb	r1, [r6]
   26d30:	add	r3, r3, #1
   26d34:	sub	r1, r1, #48	; 0x30
   26d38:	cmp	r1, #9
   26d3c:	bls	26d20 <__flatcc_fb_parse@@Base+0xda0>
   26d40:	cmp	r6, r2
   26d44:	movne	r3, r6
   26d48:	movne	r2, r5
   26d4c:	movne	r1, #11
   26d50:	bne	267fc <__flatcc_fb_parse@@Base+0x87c>
   26d54:	mov	r3, r6
   26d58:	mov	r2, r5
   26d5c:	mov	r1, #10
   26d60:	b	267fc <__flatcc_fb_parse@@Base+0x87c>
   26d64:	ldr	r3, [pc, #636]	; 26fe8 <__flatcc_fb_parse@@Base+0x1068>
   26d68:	cmp	r1, r3
   26d6c:	beq	27328 <__flatcc_fb_parse@@Base+0x13a8>
   26d70:	bhi	26d88 <__flatcc_fb_parse@@Base+0xe08>
   26d74:	ldr	r3, [pc, #624]	; 26fec <__flatcc_fb_parse@@Base+0x106c>
   26d78:	cmp	r1, r3
   26d7c:	beq	27440 <__flatcc_fb_parse@@Base+0x14c0>
   26d80:	mov	r1, #9
   26d84:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   26d88:	ldr	r3, [pc, #608]	; 26ff0 <__flatcc_fb_parse@@Base+0x1070>
   26d8c:	cmp	r1, r3
   26d90:	beq	273e0 <__flatcc_fb_parse@@Base+0x1460>
   26d94:	ldr	r3, [pc, #600]	; 26ff4 <__flatcc_fb_parse@@Base+0x1074>
   26d98:	cmp	r1, r3
   26d9c:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26da0:	mov	r1, r5
   26da4:	mov	r2, #5
   26da8:	ldr	r0, [pc, #584]	; 26ff8 <__flatcc_fb_parse@@Base+0x1078>
   26dac:	bl	1403c <memcmp@plt>
   26db0:	ldr	r1, [pc, #580]	; 26ffc <__flatcc_fb_parse@@Base+0x107c>
   26db4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   26db8:	ldr	r3, [pc, #576]	; 27000 <__flatcc_fb_parse@@Base+0x1080>
   26dbc:	cmp	r1, r3
   26dc0:	beq	27340 <__flatcc_fb_parse@@Base+0x13c0>
   26dc4:	bhi	26e0c <__flatcc_fb_parse@@Base+0xe8c>
   26dc8:	sub	r3, r3, #3584	; 0xe00
   26dcc:	cmp	r1, r3
   26dd0:	beq	272f8 <__flatcc_fb_parse@@Base+0x1378>
   26dd4:	ldr	r3, [pc, #552]	; 27004 <__flatcc_fb_parse@@Base+0x1084>
   26dd8:	cmp	r1, r3
   26ddc:	beq	27488 <__flatcc_fb_parse@@Base+0x1508>
   26de0:	ldr	r3, [pc, #544]	; 27008 <__flatcc_fb_parse@@Base+0x1088>
   26de4:	cmp	r1, r3
   26de8:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26dec:	mov	r1, r5
   26df0:	mov	r2, #4
   26df4:	ldr	r0, [pc, #528]	; 2700c <__flatcc_fb_parse@@Base+0x108c>
   26df8:	bl	1403c <memcmp@plt>
   26dfc:	cmp	r0, #0
   26e00:	movne	r1, #9
   26e04:	mvneq	r1, #992	; 0x3e0
   26e08:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   26e0c:	ldr	r3, [pc, #508]	; 27010 <__flatcc_fb_parse@@Base+0x1090>
   26e10:	cmp	r1, r3
   26e14:	beq	27458 <__flatcc_fb_parse@@Base+0x14d8>
   26e18:	bhi	26e40 <__flatcc_fb_parse@@Base+0xec0>
   26e1c:	ldr	r3, [pc, #496]	; 27014 <__flatcc_fb_parse@@Base+0x1094>
   26e20:	cmp	r1, r3
   26e24:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26e28:	mov	r1, r5
   26e2c:	mov	r2, #5
   26e30:	ldr	r0, [pc, #276]	; 26f4c <__flatcc_fb_parse@@Base+0xfcc>
   26e34:	bl	1403c <memcmp@plt>
   26e38:	ldr	r1, [pc, #260]	; 26f44 <__flatcc_fb_parse@@Base+0xfc4>
   26e3c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   26e40:	ldr	r3, [pc, #464]	; 27018 <__flatcc_fb_parse@@Base+0x1098>
   26e44:	cmp	r1, r3
   26e48:	beq	273b0 <__flatcc_fb_parse@@Base+0x1430>
   26e4c:	ldr	r3, [pc, #456]	; 2701c <__flatcc_fb_parse@@Base+0x109c>
   26e50:	cmp	r1, r3
   26e54:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26e58:	mov	r1, r5
   26e5c:	mov	r2, #9
   26e60:	ldr	r0, [pc, #440]	; 27020 <__flatcc_fb_parse@@Base+0x10a0>
   26e64:	bl	1403c <memcmp@plt>
   26e68:	ldr	r1, [pc, #436]	; 27024 <__flatcc_fb_parse@@Base+0x10a4>
   26e6c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   26e70:	ldr	r3, [pc, #432]	; 27028 <__flatcc_fb_parse@@Base+0x10a8>
   26e74:	cmp	r1, r3
   26e78:	beq	274c0 <__flatcc_fb_parse@@Base+0x1540>
   26e7c:	bhi	271d0 <__flatcc_fb_parse@@Base+0x1250>
   26e80:	ldr	r3, [pc, #420]	; 2702c <__flatcc_fb_parse@@Base+0x10ac>
   26e84:	cmp	r1, r3
   26e88:	beq	27378 <__flatcc_fb_parse@@Base+0x13f8>
   26e8c:	bhi	26ecc <__flatcc_fb_parse@@Base+0xf4c>
   26e90:	ldr	r3, [pc, #408]	; 27030 <__flatcc_fb_parse@@Base+0x10b0>
   26e94:	cmp	r1, r3
   26e98:	beq	27470 <__flatcc_fb_parse@@Base+0x14f0>
   26e9c:	ldr	r3, [pc, #400]	; 27034 <__flatcc_fb_parse@@Base+0x10b4>
   26ea0:	cmp	r1, r3
   26ea4:	beq	272c8 <__flatcc_fb_parse@@Base+0x1348>
   26ea8:	ldr	r3, [pc, #392]	; 27038 <__flatcc_fb_parse@@Base+0x10b8>
   26eac:	cmp	r1, r3
   26eb0:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26eb4:	mov	r1, r5
   26eb8:	mov	r2, #4
   26ebc:	ldr	r0, [pc, #376]	; 2703c <__flatcc_fb_parse@@Base+0x10bc>
   26ec0:	bl	1403c <memcmp@plt>
   26ec4:	ldr	r1, [pc, #372]	; 27040 <__flatcc_fb_parse@@Base+0x10c0>
   26ec8:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   26ecc:	ldr	r3, [pc, #368]	; 27044 <__flatcc_fb_parse@@Base+0x10c4>
   26ed0:	cmp	r1, r3
   26ed4:	beq	273c8 <__flatcc_fb_parse@@Base+0x1448>
   26ed8:	bhi	26f08 <__flatcc_fb_parse@@Base+0xf88>
   26edc:	ldr	r3, [pc, #356]	; 27048 <__flatcc_fb_parse@@Base+0x10c8>
   26ee0:	cmp	r1, r3
   26ee4:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26ee8:	mov	r1, r5
   26eec:	mov	r2, #4
   26ef0:	ldr	r0, [pc, #340]	; 2704c <__flatcc_fb_parse@@Base+0x10cc>
   26ef4:	bl	1403c <memcmp@plt>
   26ef8:	cmp	r0, #0
   26efc:	movne	r1, #9
   26f00:	mvneq	r1, #988	; 0x3dc
   26f04:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   26f08:	ldr	r3, [pc, #320]	; 27050 <__flatcc_fb_parse@@Base+0x10d0>
   26f0c:	cmp	r1, r3
   26f10:	beq	272b0 <__flatcc_fb_parse@@Base+0x1330>
   26f14:	ldr	r3, [pc, #312]	; 27054 <__flatcc_fb_parse@@Base+0x10d4>
   26f18:	cmp	r1, r3
   26f1c:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   26f20:	mov	r1, r5
   26f24:	mov	r2, #4
   26f28:	ldr	r0, [pc, #296]	; 27058 <__flatcc_fb_parse@@Base+0x10d8>
   26f2c:	bl	1403c <memcmp@plt>
   26f30:	cmp	r0, #0
   26f34:	movne	r1, #9
   26f38:	mvneq	r1, #996	; 0x3e4
   26f3c:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   26f40:	andeq	r8, r4, pc, lsr #15
   26f44:			; <UNDEFINED> instruction: 0xfffffc2a
   26f48:	andeq	r8, r4, r3, ror r0
   26f4c:	andeq	r9, r4, r1, lsr #23
   26f50:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   26f54:	andeq	r2, r0, ip, lsr sp
   26f58:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   26f5c:	rsbcc	r6, ip, #57671680	; 0x3700000
   26f60:	rsbcc	r6, lr, #868352	; 0xd4000
   26f64:	rsbcc	r7, r9, #226492416	; 0xd800000
   26f68:			; <UNDEFINED> instruction: 0x00031bb3
   26f6c:			; <UNDEFINED> instruction: 0xfffffc2d
   26f70:	andeq	r3, r0, pc, lsr #26
   26f74:	andeq	r3, r0, ip, ror sp
   26f78:	andeq	r7, r0, ip, ror ip
   26f7c:	andeq	r3, r0, r6, lsr #26
   26f80:	andeq	r2, r0, r6, lsr #12
   26f84:	andeq	r3, r0, sp, lsr lr
   26f88:	eorseq	r3, sp, sp, lsr sp
   26f8c:	andeq	r3, r0, sp, lsr sp
   26f90:	andeq	r3, r0, sl, lsr sp
   26f94:	eorseq	r3, sp, sl, lsr sl
   26f98:	andeq	r3, r0, sl, lsr sl
   26f9c:	andeq	r2, r0, sl, lsr #20
   26fa0:	andeq	r3, r0, sl, lsr #26
   26fa4:	andeq	r3, r0, ip, lsr sp
   26fa8:	eorseq	r3, sp, ip, lsr ip
   26fac:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   26fb0:	eorseq	r3, ip, ip, lsr ip
   26fb4:	andeq	r3, r0, ip, lsr ip
   26fb8:	andeq	r3, r0, lr, lsr sp
   26fbc:	andeq	r3, r0, lr, lsr lr
   26fc0:	eorseq	r3, sp, lr, lsr lr
   26fc4:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   26fc8:	eorseq	r3, lr, lr, lsr lr
   26fcc:	andeq	r2, r0, sp, lsr #26
   26fd0:	andeq	r3, r0, sp, lsr #26
   26fd4:	andeq	r3, r0, sp, lsr #28
   26fd8:	andeq	r3, r0, fp, lsr #26
   26fdc:	andeq	r2, r0, fp, lsr #22
   26fe0:	eoreq	r2, lr, lr, lsr #28
   26fe4:	andeq	r2, r0, lr, lsr #28
   26fe8:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   26fec:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   26ff0:			; <UNDEFINED> instruction: 0x36697536
   26ff4:			; <UNDEFINED> instruction: 0x366e6935
   26ff8:			; <UNDEFINED> instruction: 0x00031bbb
   26ffc:			; <UNDEFINED> instruction: 0xfffffc20
   27000:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   27004:	strbvs	r6, [r1, #-3641]!	; 0xfffff1c7
   27008:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   2700c:	andeq	r1, r3, r2, asr #23
   27010:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   27014:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   27018:	strbvs	r6, [pc, #-1078]!	; 26bea <__flatcc_fb_parse@@Base+0xc6a>
   2701c:	strbvs	r7, [pc, #-569]!	; 26deb <__flatcc_fb_parse@@Base+0xe6b>
   27020:	andeq	r8, r4, lr, ror #15
   27024:			; <UNDEFINED> instruction: 0xfffffc38
   27028:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2702c:			; <UNDEFINED> instruction: 0x676c7535
   27030:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   27034:	ldrbvs	r6, [r9, #-564]!	; 0xfffffdcc
   27038:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   2703c:	andeq	r9, r4, r8, ror r2
   27040:			; <UNDEFINED> instruction: 0xfffffc24
   27044:			; <UNDEFINED> instruction: 0x67747336
   27048:			; <UNDEFINED> instruction: 0x676f6c34
   2704c:	andeq	r8, r4, r0, asr #15
   27050:	sfmvs	f6, 2, [pc], #-208	; 26f88 <__flatcc_fb_parse@@Base+0x1008>
   27054:	cfstr64vs	mvdx6, [lr, #-208]!	; 0xffffff30
   27058:	andeq	r9, r4, sp, lsl r0
   2705c:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   27060:	rsbvc	r6, r9, #66060288	; 0x3f00000
   27064:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   27068:	mcrvs	5, 3, r7, cr14, cr5, {1}
   2706c:	andeq	r2, r3, fp, lsl #8
   27070:			; <UNDEFINED> instruction: 0xfffffc30
   27074:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   27078:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   2707c:	andeq	r1, r3, r4, lsl fp
   27080:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   27084:	muleq	r4, sp, r1
   27088:	andeq	r6, r4, r4, asr #31
   2708c:			; <UNDEFINED> instruction: 0xfffffc1e
   27090:	andeq	r9, r4, r4, rrx
   27094:			; <UNDEFINED> instruction: 0xfffffc19
   27098:	andeq	r9, r4, r2, lsr #23
   2709c:			; <UNDEFINED> instruction: 0xfffffc1a
   270a0:			; <UNDEFINED> instruction: 0x000487b4
   270a4:			; <UNDEFINED> instruction: 0xfffffc25
   270a8:			; <UNDEFINED> instruction: 0x000487b9
   270ac:			; <UNDEFINED> instruction: 0xfffffc26
   270b0:			; <UNDEFINED> instruction: 0x00031bb4
   270b4:			; <UNDEFINED> instruction: 0xfffffc21
   270b8:	andeq	r1, r3, sp, lsr #23
   270bc:			; <UNDEFINED> instruction: 0xfffffc22
   270c0:	andeq	sl, r4, r1, asr #5
   270c4:			; <UNDEFINED> instruction: 0xfffffc29
   270c8:	andeq	r1, r3, r1, asr #23
   270cc:			; <UNDEFINED> instruction: 0x000487bf
   270d0:	andeq	r8, r4, r6, asr #15
   270d4:			; <UNDEFINED> instruction: 0xfffffc28
   270d8:	andeq	r1, r3, sl, lsl fp
   270dc:			; <UNDEFINED> instruction: 0xfffffc31
   270e0:	andeq	r8, r4, r2, lsl #30
   270e4:			; <UNDEFINED> instruction: 0xfffffc32
   270e8:			; <UNDEFINED> instruction: 0x00031bba
   270ec:			; <UNDEFINED> instruction: 0xfffffc2c
   270f0:	andeq	r1, r3, ip, lsr #23
   270f4:			; <UNDEFINED> instruction: 0xfffffc2e
   270f8:	andeq	r8, r4, r5, asr #15
   270fc:			; <UNDEFINED> instruction: 0xfffffc34
   27100:	andeq	r8, r4, ip, asr #15
   27104:			; <UNDEFINED> instruction: 0xfffffc1c
   27108:	ldrdeq	r8, [r4], -r4
   2710c:			; <UNDEFINED> instruction: 0xfffffc1d
   27110:	ldrdeq	r8, [r4], -ip
   27114:	andeq	r8, r4, r4, ror #15
   27118:	andeq	r1, r3, r8, lsr r2
   2711c:	strdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   27120:	andeq	r8, r4, r4, lsl #16
   27124:	andeq	r8, r4, r3, lsl r8
   27128:			; <UNDEFINED> instruction: 0xfffffc35
   2712c:	andeq	r8, r4, r3, lsr #16
   27130:	andeq	r8, r4, fp, asr r8
   27134:	andeq	r8, r4, r6, ror #5
   27138:	andeq	r8, r4, r4, ror #20
   2713c:	eoreq	r0, r0, r3, lsl #16
   27140:	andeq	r8, r4, r9, lsl #21
   27144:	andeq	r8, r4, r0, lsr #21
   27148:			; <UNDEFINED> instruction: 0x00048abe
   2714c:	andeq	r8, r4, r9, lsl #17
   27150:			; <UNDEFINED> instruction: 0xfffffc36
   27154:	ldrdeq	r8, [r4], -r3
   27158:	andeq	r8, r4, r0, ror #25
   2715c:			; <UNDEFINED> instruction: 0xfffffc3a
   27160:	andeq	r8, r4, fp, asr #18
   27164:	andeq	r8, r4, r7, ror #18
   27168:	andeq	r8, r4, pc, lsl #19
   2716c:			; <UNDEFINED> instruction: 0x000489b4
   27170:	muleq	r4, sp, ip
   27174:	andeq	r8, r4, r8, lsr #17
   27178:	andeq	r8, r4, r8, asr #17
   2717c:	andeq	r8, r4, r6, lsl #26
   27180:	andeq	r8, r4, sp, ror #17
   27184:	andeq	r8, r4, r8, lsl #18
   27188:	andeq	r8, r4, pc, lsr #18
   2718c:	ldrdeq	r8, [r4], -r1
   27190:	andeq	r8, r4, r7, ror #19
   27194:	andeq	r8, r4, ip, lsl #20
   27198:	andeq	r8, r4, lr, lsr #20
   2719c:	andeq	r8, r4, sp, asr #20
   271a0:			; <UNDEFINED> instruction: 0xfffffc39
   271a4:	strdeq	r8, [r4], -r4
   271a8:	andeq	r8, r4, r6, lsl fp
   271ac:	andeq	r8, r4, ip, lsr fp
   271b0:	andeq	r8, r4, fp, asr fp
   271b4:	andeq	r8, r4, r7, ror fp
   271b8:	ldrdeq	r8, [r4], -r9
   271bc:			; <UNDEFINED> instruction: 0x00048bb0
   271c0:	andeq	r8, r4, r9, lsl #24
   271c4:	andeq	r8, r4, fp, ror #24
   271c8:	ldrdeq	r8, [r4], -sl
   271cc:	andeq	r8, r4, r5, asr #25
   271d0:	ldr	r3, [pc, #-380]	; 2705c <__flatcc_fb_parse@@Base+0x10dc>
   271d4:	cmp	r1, r3
   271d8:	beq	272e0 <__flatcc_fb_parse@@Base+0x1360>
   271dc:	bhi	2721c <__flatcc_fb_parse@@Base+0x129c>
   271e0:	ldr	r3, [pc, #-392]	; 27060 <__flatcc_fb_parse@@Base+0x10e0>
   271e4:	cmp	r1, r3
   271e8:	beq	274d8 <__flatcc_fb_parse@@Base+0x1558>
   271ec:	ldr	r3, [pc, #-400]	; 27064 <__flatcc_fb_parse@@Base+0x10e4>
   271f0:	cmp	r1, r3
   271f4:	beq	27398 <__flatcc_fb_parse@@Base+0x1418>
   271f8:	ldr	r3, [pc, #-408]	; 27068 <__flatcc_fb_parse@@Base+0x10e8>
   271fc:	cmp	r1, r3
   27200:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   27204:	mov	r1, r5
   27208:	mov	r2, #5
   2720c:	ldr	r0, [pc, #-424]	; 2706c <__flatcc_fb_parse@@Base+0x10ec>
   27210:	bl	1403c <memcmp@plt>
   27214:	ldr	r1, [pc, #-428]	; 27070 <__flatcc_fb_parse@@Base+0x10f0>
   27218:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   2721c:	ldr	r3, [pc, #-432]	; 27074 <__flatcc_fb_parse@@Base+0x10f4>
   27220:	cmp	r1, r3
   27224:	beq	27290 <__flatcc_fb_parse@@Base+0x1310>
   27228:	bhi	27258 <__flatcc_fb_parse@@Base+0x12d8>
   2722c:	ldr	r3, [pc, #-444]	; 27078 <__flatcc_fb_parse@@Base+0x10f8>
   27230:	cmp	r1, r3
   27234:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   27238:	mov	r1, r5
   2723c:	mov	r2, #5
   27240:	ldr	r0, [pc, #-460]	; 2707c <__flatcc_fb_parse@@Base+0x10fc>
   27244:	bl	1403c <memcmp@plt>
   27248:	cmp	r0, #0
   2724c:	movne	r1, #9
   27250:	mvneq	r1, #984	; 0x3d8
   27254:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   27258:	ldr	r3, [pc, #-480]	; 27080 <__flatcc_fb_parse@@Base+0x1100>
   2725c:	cmp	r1, r3
   27260:	beq	27410 <__flatcc_fb_parse@@Base+0x1490>
   27264:	add	r3, r3, #65024	; 0xfe00
   27268:	cmp	r1, r3
   2726c:	bne	26d80 <__flatcc_fb_parse@@Base+0xe00>
   27270:	mov	r1, r5
   27274:	mov	r2, #6
   27278:	ldr	r0, [pc, #-508]	; 27084 <__flatcc_fb_parse@@Base+0x1104>
   2727c:	bl	1403c <memcmp@plt>
   27280:	cmp	r0, #0
   27284:	movne	r1, #9
   27288:	mvneq	r1, #972	; 0x3cc
   2728c:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   27290:	mov	r1, r5
   27294:	mov	r2, #3
   27298:	ldr	r0, [pc, #-536]	; 27088 <__flatcc_fb_parse@@Base+0x1108>
   2729c:	bl	1403c <memcmp@plt>
   272a0:	ldr	r1, [pc, #-540]	; 2708c <__flatcc_fb_parse@@Base+0x110c>
   272a4:	cmp	r0, #0
   272a8:	movne	r1, #9
   272ac:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   272b0:	mov	r1, r5
   272b4:	mov	r2, #4
   272b8:	ldr	r0, [pc, #-560]	; 27090 <__flatcc_fb_parse@@Base+0x1110>
   272bc:	bl	1403c <memcmp@plt>
   272c0:	ldr	r1, [pc, #-564]	; 27094 <__flatcc_fb_parse@@Base+0x1114>
   272c4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   272c8:	mov	r1, r5
   272cc:	mov	r2, #4
   272d0:	ldr	r0, [pc, #-576]	; 27098 <__flatcc_fb_parse@@Base+0x1118>
   272d4:	bl	1403c <memcmp@plt>
   272d8:	ldr	r1, [pc, #-580]	; 2709c <__flatcc_fb_parse@@Base+0x111c>
   272dc:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   272e0:	mov	r1, r5
   272e4:	mov	r2, #4
   272e8:	ldr	r0, [pc, #-592]	; 270a0 <__flatcc_fb_parse@@Base+0x1120>
   272ec:	bl	1403c <memcmp@plt>
   272f0:	ldr	r1, [pc, #-596]	; 270a4 <__flatcc_fb_parse@@Base+0x1124>
   272f4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   272f8:	mov	r1, r5
   272fc:	mov	r2, #5
   27300:	ldr	r0, [pc, #-608]	; 270a8 <__flatcc_fb_parse@@Base+0x1128>
   27304:	bl	1403c <memcmp@plt>
   27308:	ldr	r1, [pc, #-612]	; 270ac <__flatcc_fb_parse@@Base+0x112c>
   2730c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27310:	mov	r1, r5
   27314:	mov	r2, #5
   27318:	ldr	r0, [pc, #-624]	; 270b0 <__flatcc_fb_parse@@Base+0x1130>
   2731c:	bl	1403c <memcmp@plt>
   27320:	ldr	r1, [pc, #-628]	; 270b4 <__flatcc_fb_parse@@Base+0x1134>
   27324:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27328:	mov	r1, r5
   2732c:	mov	r2, #5
   27330:	ldr	r0, [pc, #-640]	; 270b8 <__flatcc_fb_parse@@Base+0x1138>
   27334:	bl	1403c <memcmp@plt>
   27338:	ldr	r1, [pc, #-644]	; 270bc <__flatcc_fb_parse@@Base+0x113c>
   2733c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27340:	mov	r1, r5
   27344:	mov	r2, #5
   27348:	ldr	r0, [pc, #-656]	; 270c0 <__flatcc_fb_parse@@Base+0x1140>
   2734c:	bl	1403c <memcmp@plt>
   27350:	ldr	r1, [pc, #-660]	; 270c4 <__flatcc_fb_parse@@Base+0x1144>
   27354:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27358:	mov	r1, r5
   2735c:	mov	r2, #5
   27360:	ldr	r0, [pc, #-672]	; 270c8 <__flatcc_fb_parse@@Base+0x1148>
   27364:	bl	1403c <memcmp@plt>
   27368:	cmp	r0, #0
   2736c:	movne	r1, #9
   27370:	mvneq	r1, #980	; 0x3d4
   27374:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   27378:	mov	r1, r5
   2737c:	mov	r2, #5
   27380:	ldr	r0, [pc, #-700]	; 270cc <__flatcc_fb_parse@@Base+0x114c>
   27384:	bl	1403c <memcmp@plt>
   27388:	cmp	r0, #0
   2738c:	movne	r1, #9
   27390:	mvneq	r1, #976	; 0x3d0
   27394:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   27398:	mov	r1, r5
   2739c:	mov	r2, #5
   273a0:	ldr	r0, [pc, #-728]	; 270d0 <__flatcc_fb_parse@@Base+0x1150>
   273a4:	bl	1403c <memcmp@plt>
   273a8:	ldr	r1, [pc, #-732]	; 270d4 <__flatcc_fb_parse@@Base+0x1154>
   273ac:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   273b0:	mov	r1, r5
   273b4:	mov	r2, #6
   273b8:	ldr	r0, [pc, #-744]	; 270d8 <__flatcc_fb_parse@@Base+0x1158>
   273bc:	bl	1403c <memcmp@plt>
   273c0:	ldr	r1, [pc, #-748]	; 270dc <__flatcc_fb_parse@@Base+0x115c>
   273c4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   273c8:	mov	r1, r5
   273cc:	mov	r2, #6
   273d0:	ldr	r0, [pc, #-760]	; 270e0 <__flatcc_fb_parse@@Base+0x1160>
   273d4:	bl	1403c <memcmp@plt>
   273d8:	ldr	r1, [pc, #-764]	; 270e4 <__flatcc_fb_parse@@Base+0x1164>
   273dc:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   273e0:	mov	r1, r5
   273e4:	mov	r2, #6
   273e8:	ldr	r0, [pc, #-776]	; 270e8 <__flatcc_fb_parse@@Base+0x1168>
   273ec:	bl	1403c <memcmp@plt>
   273f0:	ldr	r1, [pc, #-780]	; 270ec <__flatcc_fb_parse@@Base+0x116c>
   273f4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   273f8:	mov	r1, r5
   273fc:	mov	r2, #6
   27400:	ldr	r0, [pc, #-792]	; 270f0 <__flatcc_fb_parse@@Base+0x1170>
   27404:	bl	1403c <memcmp@plt>
   27408:	ldr	r1, [pc, #-796]	; 270f4 <__flatcc_fb_parse@@Base+0x1174>
   2740c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27410:	mov	r1, r5
   27414:	mov	r2, #6
   27418:	ldr	r0, [pc, #-808]	; 270f8 <__flatcc_fb_parse@@Base+0x1178>
   2741c:	bl	1403c <memcmp@plt>
   27420:	ldr	r1, [pc, #-812]	; 270fc <__flatcc_fb_parse@@Base+0x117c>
   27424:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27428:	mov	r1, r5
   2742c:	mov	r2, #7
   27430:	ldr	r0, [pc, #-824]	; 27100 <__flatcc_fb_parse@@Base+0x1180>
   27434:	bl	1403c <memcmp@plt>
   27438:	ldr	r1, [pc, #-828]	; 27104 <__flatcc_fb_parse@@Base+0x1184>
   2743c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27440:	mov	r1, r5
   27444:	mov	r2, #7
   27448:	ldr	r0, [pc, #-840]	; 27108 <__flatcc_fb_parse@@Base+0x1188>
   2744c:	bl	1403c <memcmp@plt>
   27450:	ldr	r1, [pc, #-844]	; 2710c <__flatcc_fb_parse@@Base+0x118c>
   27454:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27458:	mov	r1, r5
   2745c:	mov	r2, #7
   27460:	ldr	r0, [pc, #-856]	; 27110 <__flatcc_fb_parse@@Base+0x1190>
   27464:	bl	1403c <memcmp@plt>
   27468:	ldr	r1, [pc, #-840]	; 27128 <__flatcc_fb_parse@@Base+0x11a8>
   2746c:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27470:	mov	r1, r5
   27474:	mov	r2, #9
   27478:	ldr	r0, [pc, #-876]	; 27114 <__flatcc_fb_parse@@Base+0x1194>
   2747c:	bl	1403c <memcmp@plt>
   27480:	ldr	r1, [pc, #-824]	; 27150 <__flatcc_fb_parse@@Base+0x11d0>
   27484:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   27488:	mov	r1, r5
   2748c:	mov	r2, #9
   27490:	ldr	r0, [pc, #-896]	; 27118 <__flatcc_fb_parse@@Base+0x1198>
   27494:	bl	1403c <memcmp@plt>
   27498:	cmp	r0, #0
   2749c:	movne	r1, #9
   274a0:	mvneq	r1, #968	; 0x3c8
   274a4:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   274a8:	mov	r1, r5
   274ac:	mov	r2, #11
   274b0:	ldr	r0, [pc, #-924]	; 2711c <__flatcc_fb_parse@@Base+0x119c>
   274b4:	bl	1403c <memcmp@plt>
   274b8:	ldr	r1, [pc, #-800]	; 271a0 <__flatcc_fb_parse@@Base+0x1220>
   274bc:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   274c0:	mov	r1, r5
   274c4:	mov	r2, #14
   274c8:	ldr	r0, [pc, #-944]	; 27120 <__flatcc_fb_parse@@Base+0x11a0>
   274cc:	bl	1403c <memcmp@plt>
   274d0:	ldr	r1, [pc, #-892]	; 2715c <__flatcc_fb_parse@@Base+0x11dc>
   274d4:	b	272a4 <__flatcc_fb_parse@@Base+0x1324>
   274d8:	mov	r1, r5
   274dc:	mov	r2, #15
   274e0:	ldr	r0, [pc, #-964]	; 27124 <__flatcc_fb_parse@@Base+0x11a4>
   274e4:	bl	1403c <memcmp@plt>
   274e8:	cmp	r0, #0
   274ec:	movne	r1, #9
   274f0:	mvneq	r1, #964	; 0x3c4
   274f4:	b	264a0 <__flatcc_fb_parse@@Base+0x520>
   274f8:	ldrb	r1, [r5]
   274fc:	cmp	r1, #0
   27500:	moveq	r3, r5
   27504:	moveq	r2, r3
   27508:	bne	262a8 <__flatcc_fb_parse@@Base+0x328>
   2750c:	mov	r0, r4
   27510:	bl	24ae4 <__flatcc_fb_default_error_out@@Base+0x20>
   27514:	ldr	r3, [r4, #40]	; 0x28
   27518:	ldr	r5, [r4, #20]
   2751c:	str	r3, [r4, #24]
   27520:	str	r5, [r4, #40]	; 0x28
   27524:	ldr	r0, [r4, #216]	; 0xd8
   27528:	bl	14090 <malloc@plt>
   2752c:	cmp	r0, #0
   27530:	str	r0, [r4, #112]	; 0x70
   27534:	bne	2753c <__flatcc_fb_parse@@Base+0x15bc>
   27538:	bl	141d4 <__assert_fail@plt+0x30>
   2753c:	ldr	r3, [r5, #16]
   27540:	cmn	r3, #964	; 0x3c4
   27544:	bne	27550 <__flatcc_fb_parse@@Base+0x15d0>
   27548:	mov	r0, r4
   2754c:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27550:	ldr	r6, [r4, #40]	; 0x28
   27554:	ldr	r5, [pc, #-1076]	; 27128 <__flatcc_fb_parse@@Base+0x11a8>
   27558:	ldr	r7, [pc, #-1076]	; 2712c <__flatcc_fb_parse@@Base+0x11ac>
   2755c:	ldr	r8, [pc, #-1076]	; 27130 <__flatcc_fb_parse@@Base+0x11b0>
   27560:	mov	r1, r5
   27564:	mov	r0, r4
   27568:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   2756c:	cmp	r0, #0
   27570:	beq	2759c <__flatcc_fb_parse@@Base+0x161c>
   27574:	ldr	r3, [r4, #140]	; 0x8c
   27578:	cmp	r3, #0
   2757c:	beq	27590 <__flatcc_fb_parse@@Base+0x1610>
   27580:	mov	r2, r7
   27584:	mov	r1, r6
   27588:	mov	r0, r4
   2758c:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27590:	ldr	r3, [r4, #108]	; 0x6c
   27594:	cmp	r3, #9
   27598:	ble	27798 <__flatcc_fb_parse@@Base+0x1818>
   2759c:	ldr	r7, [r4, #40]	; 0x28
   275a0:	ldr	r9, [pc, #-1140]	; 27134 <__flatcc_fb_parse@@Base+0x11b4>
   275a4:	ldr	r3, [r7, #16]
   275a8:	cmp	r3, #0
   275ac:	beq	27e88 <__flatcc_fb_parse@@Base+0x1f08>
   275b0:	ldr	r3, [r4, #108]	; 0x6c
   275b4:	cmp	r3, #9
   275b8:	bgt	279cc <__flatcc_fb_parse@@Base+0x1a4c>
   275bc:	ldr	r1, [r4, #40]	; 0x28
   275c0:	ldr	r5, [r1, #16]
   275c4:	cmn	r5, #968	; 0x3c8
   275c8:	beq	27a4c <__flatcc_fb_parse@@Base+0x1acc>
   275cc:	bgt	27824 <__flatcc_fb_parse@@Base+0x18a4>
   275d0:	mvn	r3, #972	; 0x3cc
   275d4:	cmp	r5, r3
   275d8:	beq	27b1c <__flatcc_fb_parse@@Base+0x1b9c>
   275dc:	cmn	r5, #972	; 0x3cc
   275e0:	bge	277fc <__flatcc_fb_parse@@Base+0x187c>
   275e4:	sub	r3, r3, #10
   275e8:	cmp	r5, r3
   275ec:	beq	27b7c <__flatcc_fb_parse@@Base+0x1bfc>
   275f0:	cmn	r5, #976	; 0x3d0
   275f4:	beq	27c48 <__flatcc_fb_parse@@Base+0x1cc8>
   275f8:	mvn	r3, #996	; 0x3e4
   275fc:	cmp	r5, r3
   27600:	bne	2781c <__flatcc_fb_parse@@Base+0x189c>
   27604:	mov	r0, r4
   27608:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   2760c:	mov	r1, #128	; 0x80
   27610:	mov	r0, r4
   27614:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27618:	ldr	r3, [r4, #392]	; 0x188
   2761c:	str	r3, [r0]
   27620:	mov	r3, #3
   27624:	strh	r3, [r0, #8]
   27628:	ldr	r3, [r4, #544]	; 0x220
   2762c:	mov	r5, r0
   27630:	str	r0, [r4, #392]	; 0x188
   27634:	str	r3, [r0, #12]
   27638:	add	r0, r4, #36	; 0x24
   2763c:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27640:	ldr	r3, [r4, #36]	; 0x24
   27644:	ldr	r2, [pc, #-1300]	; 27138 <__flatcc_fb_parse@@Base+0x11b8>
   27648:	str	r3, [r5, #32]
   2764c:	mov	r3, #0
   27650:	str	r3, [r4, #36]	; 0x24
   27654:	mov	r1, #9
   27658:	mov	r0, r4
   2765c:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27660:	cmp	r0, #0
   27664:	str	r0, [r5, #4]
   27668:	beq	27c40 <__flatcc_fb_parse@@Base+0x1cc0>
   2766c:	mov	r1, #58	; 0x3a
   27670:	mov	r0, r4
   27674:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27678:	cmp	r0, #0
   2767c:	beq	276d0 <__flatcc_fb_parse@@Base+0x1750>
   27680:	add	r1, r5, #40	; 0x28
   27684:	mov	r0, r4
   27688:	bl	2582c <__flatcc_error_report@@Base+0x988>
   2768c:	ldrh	r3, [r5, #48]	; 0x30
   27690:	cmp	r3, #8
   27694:	ldrne	r2, [pc, #-1372]	; 27140 <__flatcc_fb_parse@@Base+0x11c0>
   27698:	ldrne	r1, [r5, #40]	; 0x28
   2769c:	bne	276c8 <__flatcc_fb_parse@@Base+0x1748>
   276a0:	ldr	r1, [r5, #40]	; 0x28
   276a4:	ldr	r3, [r1, #16]
   276a8:	add	r3, r3, #996	; 0x3e4
   276ac:	cmp	r3, #21
   276b0:	bhi	276d0 <__flatcc_fb_parse@@Base+0x1750>
   276b4:	ldr	r2, [pc, #-1408]	; 2713c <__flatcc_fb_parse@@Base+0x11bc>
   276b8:	mov	r0, #1
   276bc:	ands	r3, r2, r0, lsl r3
   276c0:	beq	276d0 <__flatcc_fb_parse@@Base+0x1750>
   276c4:	ldr	r2, [pc, #-1420]	; 27140 <__flatcc_fb_parse@@Base+0x11c0>
   276c8:	mov	r0, r4
   276cc:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   276d0:	mov	r0, r4
   276d4:	bl	2571c <__flatcc_error_report@@Base+0x878>
   276d8:	ldr	r2, [pc, #-1436]	; 27144 <__flatcc_fb_parse@@Base+0x11c4>
   276dc:	mov	r1, #123	; 0x7b
   276e0:	str	r0, [r5, #28]
   276e4:	mov	r0, r4
   276e8:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   276ec:	subs	r8, r0, #0
   276f0:	beq	27c40 <__flatcc_fb_parse@@Base+0x1cc0>
   276f4:	ldr	sl, [pc, #-1460]	; 27148 <__flatcc_fb_parse@@Base+0x11c8>
   276f8:	ldr	fp, [pc, #-1352]	; 271b8 <__flatcc_fb_parse@@Base+0x1238>
   276fc:	add	r5, r5, #20
   27700:	mov	r2, sl
   27704:	mov	r1, #9
   27708:	mov	r0, r4
   2770c:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27710:	subs	r3, r0, #0
   27714:	str	r3, [sp, #12]
   27718:	beq	27c40 <__flatcc_fb_parse@@Base+0x1cc0>
   2771c:	ldr	r2, [r4, #108]	; 0x6c
   27720:	cmp	r2, #9
   27724:	bgt	27c40 <__flatcc_fb_parse@@Base+0x1cc0>
   27728:	mov	r1, r5
   2772c:	mov	r0, r4
   27730:	bl	24dac <__flatcc_fb_default_error_out@@Base+0x2e8>
   27734:	ldr	r3, [sp, #12]
   27738:	mov	r1, #61	; 0x3d
   2773c:	str	r3, [r0, #4]
   27740:	mov	r6, r0
   27744:	mov	r0, r4
   27748:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   2774c:	cmp	r0, #0
   27750:	beq	27768 <__flatcc_fb_parse@@Base+0x17e8>
   27754:	mov	r3, fp
   27758:	mov	r2, #0
   2775c:	add	r1, r6, #48	; 0x30
   27760:	mov	r0, r4
   27764:	bl	25278 <__flatcc_error_report@@Base+0x3d4>
   27768:	mov	r1, #44	; 0x2c
   2776c:	mov	r0, r4
   27770:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27774:	cmp	r0, #0
   27778:	beq	27c20 <__flatcc_fb_parse@@Base+0x1ca0>
   2777c:	ldr	r3, [r4, #40]	; 0x28
   27780:	ldr	r3, [r3, #16]
   27784:	cmp	r3, #125	; 0x7d
   27788:	beq	27c20 <__flatcc_fb_parse@@Base+0x1ca0>
   2778c:	mov	r3, #0
   27790:	str	r3, [r4, #36]	; 0x24
   27794:	b	27700 <__flatcc_fb_parse@@Base+0x1780>
   27798:	mov	r2, r8
   2779c:	mov	r1, #19
   277a0:	mov	r0, r4
   277a4:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   277a8:	cmp	r0, #0
   277ac:	bne	277bc <__flatcc_fb_parse@@Base+0x183c>
   277b0:	mov	r1, #59	; 0x3b
   277b4:	mov	r0, r4
   277b8:	bl	24d68 <__flatcc_fb_default_error_out@@Base+0x2a4>
   277bc:	mov	r1, #24
   277c0:	mov	r0, r4
   277c4:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   277c8:	ldr	r3, [r4, #352]	; 0x160
   277cc:	add	r1, r0, #8
   277d0:	str	r3, [r0]
   277d4:	str	r0, [r4, #352]	; 0x160
   277d8:	mov	r0, r4
   277dc:	bl	25128 <__flatcc_error_report@@Base+0x284>
   277e0:	ldr	r2, [pc, #-1692]	; 2714c <__flatcc_fb_parse@@Base+0x11cc>
   277e4:	mov	r1, #59	; 0x3b
   277e8:	mov	r0, r4
   277ec:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   277f0:	b	27560 <__flatcc_fb_parse@@Base+0x15e0>
   277f4:	mov	r7, r3
   277f8:	b	275a4 <__flatcc_fb_parse@@Base+0x1624>
   277fc:	ldr	r3, [pc, #-1716]	; 27150 <__flatcc_fb_parse@@Base+0x11d0>
   27800:	cmp	r5, r3
   27804:	beq	27aa4 <__flatcc_fb_parse@@Base+0x1b24>
   27808:	bgt	27918 <__flatcc_fb_parse@@Base+0x1998>
   2780c:	sub	r3, r3, #1
   27810:	cmp	r5, r3
   27814:	ldreq	r2, [pc, #-1736]	; 27154 <__flatcc_fb_parse@@Base+0x11d4>
   27818:	beq	27e40 <__flatcc_fb_parse@@Base+0x1ec0>
   2781c:	ldr	r2, [pc, #-1740]	; 27158 <__flatcc_fb_parse@@Base+0x11d8>
   27820:	b	27e40 <__flatcc_fb_parse@@Base+0x1ec0>
   27824:	cmp	r5, #5
   27828:	beq	27e4c <__flatcc_fb_parse@@Base+0x1ecc>
   2782c:	bgt	278e8 <__flatcc_fb_parse@@Base+0x1968>
   27830:	ldr	r3, [pc, #-1756]	; 2715c <__flatcc_fb_parse@@Base+0x11dc>
   27834:	cmp	r5, r3
   27838:	beq	279d8 <__flatcc_fb_parse@@Base+0x1a58>
   2783c:	blt	27bc8 <__flatcc_fb_parse@@Base+0x1c48>
   27840:	mvn	r3, #964	; 0x3c4
   27844:	cmp	r5, r3
   27848:	bne	2781c <__flatcc_fb_parse@@Base+0x189c>
   2784c:	add	r5, r4, #360	; 0x168
   27850:	mov	r0, r4
   27854:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27858:	ldrh	r3, [r5, #8]
   2785c:	cmp	r3, #0
   27860:	beq	27888 <__flatcc_fb_parse@@Base+0x1908>
   27864:	ldr	r3, [r4, #364]	; 0x16c
   27868:	ldr	r2, [pc, #-1808]	; 27160 <__flatcc_fb_parse@@Base+0x11e0>
   2786c:	str	r3, [sp, #4]
   27870:	ldr	r3, [r4, #360]	; 0x168
   27874:	ldr	r1, [r4, #40]	; 0x28
   27878:	str	r3, [sp]
   2787c:	mov	r0, r4
   27880:	mov	r3, #0
   27884:	bl	24ea4 <__flatcc_error_report@@Base>
   27888:	ldr	r2, [pc, #-1836]	; 27164 <__flatcc_fb_parse@@Base+0x11e4>
   2788c:	mov	r1, #19
   27890:	mov	r0, r4
   27894:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27898:	cmp	r0, #0
   2789c:	beq	27964 <__flatcc_fb_parse@@Base+0x19e4>
   278a0:	mov	r1, r5
   278a4:	mov	r0, r4
   278a8:	ldr	r6, [r4, #40]	; 0x28
   278ac:	bl	25128 <__flatcc_error_report@@Base+0x284>
   278b0:	ldr	r3, [r4, #360]	; 0x168
   278b4:	cmp	r3, #0
   278b8:	beq	278e0 <__flatcc_fb_parse@@Base+0x1960>
   278bc:	ldr	r3, [r4, #364]	; 0x16c
   278c0:	cmp	r3, #4
   278c4:	beq	278e0 <__flatcc_fb_parse@@Base+0x1960>
   278c8:	mov	r3, #1
   278cc:	strh	r3, [r5, #8]
   278d0:	ldr	r2, [pc, #-1904]	; 27168 <__flatcc_fb_parse@@Base+0x11e8>
   278d4:	mov	r1, r6
   278d8:	mov	r0, r4
   278dc:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   278e0:	ldr	r2, [pc, #-1916]	; 2716c <__flatcc_fb_parse@@Base+0x11ec>
   278e4:	b	27a3c <__flatcc_fb_parse@@Base+0x1abc>
   278e8:	cmp	r5, #27
   278ec:	beq	27e6c <__flatcc_fb_parse@@Base+0x1eec>
   278f0:	cmp	r5, #123	; 0x7b
   278f4:	beq	27e3c <__flatcc_fb_parse@@Base+0x1ebc>
   278f8:	cmp	r5, #7
   278fc:	bne	2781c <__flatcc_fb_parse@@Base+0x189c>
   27900:	mov	r3, #1
   27904:	str	r3, [sp, #4]
   27908:	str	r9, [sp]
   2790c:	mov	r3, #0
   27910:	ldr	r2, [pc, #-1960]	; 27170 <__flatcc_fb_parse@@Base+0x11f0>
   27914:	b	27e60 <__flatcc_fb_parse@@Base+0x1ee0>
   27918:	mov	r0, r4
   2791c:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27920:	mov	r6, #0
   27924:	mov	r1, #59	; 0x3b
   27928:	mov	r0, r4
   2792c:	ldr	r5, [r4, #40]	; 0x28
   27930:	str	r6, [sp, #20]
   27934:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27938:	cmp	r0, r6
   2793c:	cmpne	r5, r6
   27940:	strne	r6, [r4, #544]	; 0x220
   27944:	bne	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27948:	ldr	r1, [r4, #40]	; 0x28
   2794c:	ldr	r3, [r1, #16]
   27950:	cmp	r3, #9
   27954:	beq	27974 <__flatcc_fb_parse@@Base+0x19f4>
   27958:	ldr	r2, [pc, #-2028]	; 27174 <__flatcc_fb_parse@@Base+0x11f4>
   2795c:	mov	r0, r4
   27960:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27964:	mov	r1, #59	; 0x3b
   27968:	mov	r0, r4
   2796c:	bl	24d68 <__flatcc_fb_default_error_out@@Base+0x2a4>
   27970:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27974:	add	r1, sp, #20
   27978:	mov	r0, r4
   2797c:	bl	25090 <__flatcc_error_report@@Base+0x1ec>
   27980:	mov	r3, r5
   27984:	ldr	r2, [pc, #-2068]	; 27178 <__flatcc_fb_parse@@Base+0x11f8>
   27988:	mov	r1, #59	; 0x3b
   2798c:	mov	r0, r4
   27990:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   27994:	ldr	r1, [sp, #20]
   27998:	mov	r0, r4
   2799c:	bl	24c1c <__flatcc_fb_default_error_out@@Base+0x158>
   279a0:	str	r0, [r4, #544]	; 0x220
   279a4:	ldr	r3, [r4, #40]	; 0x28
   279a8:	cmp	r7, r3
   279ac:	bne	277f4 <__flatcc_fb_parse@@Base+0x1874>
   279b0:	ldr	r3, [r4, #108]	; 0x6c
   279b4:	cmp	r3, #0
   279b8:	bne	279cc <__flatcc_fb_parse@@Base+0x1a4c>
   279bc:	ldr	r2, [pc, #-2120]	; 2717c <__flatcc_fb_parse@@Base+0x11fc>
   279c0:	mov	r1, r7
   279c4:	mov	r0, r4
   279c8:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   279cc:	ldr	r0, [r4, #108]	; 0x6c
   279d0:	add	sp, sp, #28
   279d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279d8:	add	r5, r4, #376	; 0x178
   279dc:	mov	r0, r4
   279e0:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   279e4:	ldrh	r3, [r5, #8]
   279e8:	cmp	r3, #2
   279ec:	bne	27a14 <__flatcc_fb_parse@@Base+0x1a94>
   279f0:	ldr	r3, [r4, #380]	; 0x17c
   279f4:	ldr	r2, [pc, #-2172]	; 27180 <__flatcc_fb_parse@@Base+0x1200>
   279f8:	str	r3, [sp, #4]
   279fc:	ldr	r3, [r4, #376]	; 0x178
   27a00:	ldr	r1, [r4, #40]	; 0x28
   27a04:	str	r3, [sp]
   27a08:	mov	r0, r4
   27a0c:	mov	r3, #0
   27a10:	bl	24ea4 <__flatcc_error_report@@Base>
   27a14:	ldr	r2, [pc, #-2200]	; 27184 <__flatcc_fb_parse@@Base+0x1204>
   27a18:	mov	r1, #19
   27a1c:	mov	r0, r4
   27a20:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27a24:	cmp	r0, #0
   27a28:	beq	27964 <__flatcc_fb_parse@@Base+0x19e4>
   27a2c:	mov	r1, r5
   27a30:	mov	r0, r4
   27a34:	bl	25128 <__flatcc_error_report@@Base+0x284>
   27a38:	ldr	r2, [pc, #-2232]	; 27188 <__flatcc_fb_parse@@Base+0x1208>
   27a3c:	mov	r1, #59	; 0x3b
   27a40:	mov	r0, r4
   27a44:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27a48:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27a4c:	mov	r0, r4
   27a50:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27a54:	ldr	r3, [r4, #400]	; 0x190
   27a58:	add	r6, r4, #400	; 0x190
   27a5c:	cmp	r3, #0
   27a60:	ldr	r5, [r4, #40]	; 0x28
   27a64:	beq	27a78 <__flatcc_fb_parse@@Base+0x1af8>
   27a68:	ldr	r2, [pc, #-2276]	; 2718c <__flatcc_fb_parse@@Base+0x120c>
   27a6c:	mov	r1, r5
   27a70:	mov	r0, r4
   27a74:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27a78:	mov	r1, r6
   27a7c:	mov	r0, r4
   27a80:	bl	25090 <__flatcc_error_report@@Base+0x1ec>
   27a84:	ldr	r3, [r4, #544]	; 0x220
   27a88:	ldr	r2, [pc, #-2304]	; 27190 <__flatcc_fb_parse@@Base+0x1210>
   27a8c:	str	r3, [r4, #408]	; 0x198
   27a90:	mov	r1, #59	; 0x3b
   27a94:	mov	r3, r5
   27a98:	mov	r0, r4
   27a9c:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   27aa0:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27aa4:	mov	r0, r4
   27aa8:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27aac:	mov	r1, #32
   27ab0:	mov	r0, r4
   27ab4:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27ab8:	ldr	r3, [r4, #356]	; 0x164
   27abc:	ldr	r2, [pc, #-2352]	; 27194 <__flatcc_fb_parse@@Base+0x1214>
   27ac0:	mov	r1, #19
   27ac4:	ldr	r6, [r4, #40]	; 0x28
   27ac8:	str	r3, [r0]
   27acc:	mov	r5, r0
   27ad0:	str	r0, [r4, #356]	; 0x164
   27ad4:	mov	r0, r4
   27ad8:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27adc:	cmp	r0, #0
   27ae0:	beq	27b14 <__flatcc_fb_parse@@Base+0x1b94>
   27ae4:	add	r1, r5, #8
   27ae8:	mov	r0, r4
   27aec:	bl	25128 <__flatcc_error_report@@Base+0x284>
   27af0:	ldr	r3, [r5, #12]
   27af4:	cmp	r3, #0
   27af8:	bne	27b14 <__flatcc_fb_parse@@Base+0x1b94>
   27afc:	str	r3, [sp, #4]
   27b00:	str	r3, [sp]
   27b04:	ldr	r2, [pc, #-2420]	; 27198 <__flatcc_fb_parse@@Base+0x1218>
   27b08:	mov	r1, r6
   27b0c:	mov	r0, r4
   27b10:	bl	24ea4 <__flatcc_error_report@@Base>
   27b14:	ldr	r2, [pc, #-2432]	; 2719c <__flatcc_fb_parse@@Base+0x121c>
   27b18:	b	27a3c <__flatcc_fb_parse@@Base+0x1abc>
   27b1c:	mov	r0, r4
   27b20:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27b24:	mov	r1, #128	; 0x80
   27b28:	mov	r0, r4
   27b2c:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27b30:	ldr	r3, [r4, #392]	; 0x188
   27b34:	str	r3, [r0]
   27b38:	mov	r3, #1
   27b3c:	strh	r3, [r0, #8]
   27b40:	ldr	r3, [r4, #544]	; 0x220
   27b44:	str	r0, [r4, #392]	; 0x188
   27b48:	mov	r6, r0
   27b4c:	str	r3, [r0, #12]
   27b50:	add	r0, r4, #36	; 0x24
   27b54:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27b58:	ldr	r3, [r4, #36]	; 0x24
   27b5c:	str	r3, [r6, #32]
   27b60:	mov	r3, #0
   27b64:	str	r3, [r4, #36]	; 0x24
   27b68:	mov	r2, r5
   27b6c:	mov	r1, r6
   27b70:	mov	r0, r4
   27b74:	bl	25a28 <__flatcc_error_report@@Base+0xb84>
   27b78:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27b7c:	mov	r0, r4
   27b80:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27b84:	mov	r1, #128	; 0x80
   27b88:	mov	r0, r4
   27b8c:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27b90:	ldr	r3, [r4, #392]	; 0x188
   27b94:	mov	r8, #0
   27b98:	str	r3, [r0]
   27b9c:	ldr	r3, [r4, #544]	; 0x220
   27ba0:	strh	r8, [r0, #8]
   27ba4:	mov	r6, r0
   27ba8:	str	r0, [r4, #392]	; 0x188
   27bac:	str	r3, [r0, #12]
   27bb0:	add	r0, r4, #36	; 0x24
   27bb4:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27bb8:	ldr	r3, [r4, #36]	; 0x24
   27bbc:	str	r3, [r6, #32]
   27bc0:	str	r8, [r4, #36]	; 0x24
   27bc4:	b	27b68 <__flatcc_fb_parse@@Base+0x1be8>
   27bc8:	mov	r0, r4
   27bcc:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27bd0:	mov	r1, #128	; 0x80
   27bd4:	mov	r0, r4
   27bd8:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27bdc:	ldr	r3, [r4, #392]	; 0x188
   27be0:	str	r3, [r0]
   27be4:	mov	r3, #2
   27be8:	strh	r3, [r0, #8]
   27bec:	ldr	r3, [r4, #544]	; 0x220
   27bf0:	mov	r5, r0
   27bf4:	str	r0, [r4, #392]	; 0x188
   27bf8:	str	r3, [r0, #12]
   27bfc:	add	r0, r4, #36	; 0x24
   27c00:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27c04:	ldr	r3, [r4, #36]	; 0x24
   27c08:	ldr	r2, [pc, #-2672]	; 271a0 <__flatcc_fb_parse@@Base+0x1220>
   27c0c:	str	r3, [r5, #32]
   27c10:	mov	r3, #0
   27c14:	str	r3, [r4, #36]	; 0x24
   27c18:	mov	r1, r5
   27c1c:	b	27b70 <__flatcc_fb_parse@@Base+0x1bf0>
   27c20:	mov	r3, r8
   27c24:	ldr	r2, [pc, #-2696]	; 271a4 <__flatcc_fb_parse@@Base+0x1224>
   27c28:	mov	r1, #125	; 0x7d
   27c2c:	mov	r0, r4
   27c30:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   27c34:	mov	r0, r5
   27c38:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27c3c:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27c40:	mov	r1, #125	; 0x7d
   27c44:	b	27968 <__flatcc_fb_parse@@Base+0x19e8>
   27c48:	mov	r0, r4
   27c4c:	bl	24c78 <__flatcc_fb_default_error_out@@Base+0x1b4>
   27c50:	mov	r1, #128	; 0x80
   27c54:	mov	r0, r4
   27c58:	bl	24bb4 <__flatcc_fb_default_error_out@@Base+0xf0>
   27c5c:	ldr	r3, [r4, #392]	; 0x188
   27c60:	str	r3, [r0]
   27c64:	mov	r3, #4
   27c68:	strh	r3, [r0, #8]
   27c6c:	ldr	r3, [r4, #544]	; 0x220
   27c70:	mov	r5, r0
   27c74:	str	r0, [r4, #392]	; 0x188
   27c78:	str	r3, [r0, #12]
   27c7c:	add	r0, r4, #36	; 0x24
   27c80:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27c84:	ldr	r3, [r4, #36]	; 0x24
   27c88:	ldr	r2, [pc, #-2792]	; 271a8 <__flatcc_fb_parse@@Base+0x1228>
   27c8c:	str	r3, [r5, #32]
   27c90:	mov	r3, #0
   27c94:	str	r3, [r4, #36]	; 0x24
   27c98:	mov	r1, #9
   27c9c:	mov	r0, r4
   27ca0:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27ca4:	cmp	r0, #0
   27ca8:	str	r0, [r5, #4]
   27cac:	beq	27cfc <__flatcc_fb_parse@@Base+0x1d7c>
   27cb0:	mov	r0, r4
   27cb4:	bl	2571c <__flatcc_error_report@@Base+0x878>
   27cb8:	ldr	r2, [pc, #-2836]	; 271ac <__flatcc_fb_parse@@Base+0x122c>
   27cbc:	mov	r1, #123	; 0x7b
   27cc0:	str	r0, [r5, #28]
   27cc4:	mov	r0, r4
   27cc8:	bl	25060 <__flatcc_error_report@@Base+0x1bc>
   27ccc:	subs	r3, r0, #0
   27cd0:	str	r3, [sp, #12]
   27cd4:	beq	27cfc <__flatcc_fb_parse@@Base+0x1d7c>
   27cd8:	mov	fp, #1
   27cdc:	ldr	sl, [r4, #40]	; 0x28
   27ce0:	ldr	r2, [sl, #16]
   27ce4:	cmp	r2, #9
   27ce8:	beq	27d08 <__flatcc_fb_parse@@Base+0x1d88>
   27cec:	ldr	r2, [pc, #-2884]	; 271b0 <__flatcc_fb_parse@@Base+0x1230>
   27cf0:	mov	r1, sl
   27cf4:	mov	r0, r4
   27cf8:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27cfc:	mov	r0, r4
   27d00:	bl	24d1c <__flatcc_fb_default_error_out@@Base+0x258>
   27d04:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27d08:	ldr	r2, [r4, #108]	; 0x6c
   27d0c:	cmp	r2, #9
   27d10:	bgt	27cfc <__flatcc_fb_parse@@Base+0x1d7c>
   27d14:	add	r8, r5, #20
   27d18:	mov	r1, r8
   27d1c:	mov	r0, r4
   27d20:	bl	24dac <__flatcc_fb_default_error_out@@Base+0x2e8>
   27d24:	add	r1, sp, #20
   27d28:	mov	r6, r0
   27d2c:	mov	r0, r4
   27d30:	bl	25090 <__flatcc_error_report@@Base+0x1ec>
   27d34:	mov	r1, #12
   27d38:	ldr	r2, [sp, #20]
   27d3c:	strh	r1, [r6, #24]
   27d40:	mov	r1, #0
   27d44:	str	r2, [r6, #16]
   27d48:	ldr	r0, [r2]
   27d4c:	cmp	r0, #0
   27d50:	bne	27dfc <__flatcc_fb_parse@@Base+0x1e7c>
   27d54:	cmp	r1, #0
   27d58:	strne	r2, [sp, #20]
   27d5c:	ldr	r2, [r2, #4]
   27d60:	mov	r1, #58	; 0x3a
   27d64:	str	r2, [r6, #4]
   27d68:	mov	r0, r4
   27d6c:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27d70:	cmp	r0, #0
   27d74:	beq	27da4 <__flatcc_fb_parse@@Base+0x1e24>
   27d78:	ldr	r2, [r6, #16]
   27d7c:	ldr	r2, [r2]
   27d80:	cmp	r2, #0
   27d84:	beq	27d98 <__flatcc_fb_parse@@Base+0x1e18>
   27d88:	ldr	r2, [pc, #-3036]	; 271b4 <__flatcc_fb_parse@@Base+0x1234>
   27d8c:	mov	r1, sl
   27d90:	mov	r0, r4
   27d94:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27d98:	add	r1, r6, #16
   27d9c:	mov	r0, r4
   27da0:	bl	2582c <__flatcc_error_report@@Base+0x988>
   27da4:	mov	r1, #61	; 0x3d
   27da8:	mov	r0, r4
   27dac:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27db0:	cmp	r0, #0
   27db4:	beq	27dcc <__flatcc_fb_parse@@Base+0x1e4c>
   27db8:	ldr	r3, [pc, #-3080]	; 271b8 <__flatcc_fb_parse@@Base+0x1238>
   27dbc:	mov	r2, #0
   27dc0:	add	r1, r6, #48	; 0x30
   27dc4:	mov	r0, r4
   27dc8:	bl	25278 <__flatcc_error_report@@Base+0x3d4>
   27dcc:	mov	r1, #44	; 0x2c
   27dd0:	mov	r0, r4
   27dd4:	bl	24cf8 <__flatcc_fb_default_error_out@@Base+0x234>
   27dd8:	cmp	r0, #0
   27ddc:	beq	27e08 <__flatcc_fb_parse@@Base+0x1e88>
   27de0:	ldr	r3, [r4, #40]	; 0x28
   27de4:	ldr	r3, [r3, #16]
   27de8:	cmp	r3, #125	; 0x7d
   27dec:	beq	27e08 <__flatcc_fb_parse@@Base+0x1e88>
   27df0:	mov	r3, #0
   27df4:	str	r3, [r4, #36]	; 0x24
   27df8:	b	27cdc <__flatcc_fb_parse@@Base+0x1d5c>
   27dfc:	mov	r1, fp
   27e00:	mov	r2, r0
   27e04:	b	27d48 <__flatcc_fb_parse@@Base+0x1dc8>
   27e08:	ldr	r3, [sp, #12]
   27e0c:	ldr	r2, [pc, #-3160]	; 271bc <__flatcc_fb_parse@@Base+0x123c>
   27e10:	mov	r1, #125	; 0x7d
   27e14:	mov	r0, r4
   27e18:	bl	256d4 <__flatcc_error_report@@Base+0x830>
   27e1c:	mov	r0, r8
   27e20:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27e24:	mov	r1, r8
   27e28:	mov	r0, r4
   27e2c:	bl	24dac <__flatcc_fb_default_error_out@@Base+0x2e8>
   27e30:	add	r3, r4, #68	; 0x44
   27e34:	str	r3, [r0, #4]
   27e38:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27e3c:	ldr	r2, [pc, #-3204]	; 271c0 <__flatcc_fb_parse@@Base+0x1240>
   27e40:	mov	r0, r4
   27e44:	bl	25044 <__flatcc_error_report@@Base+0x1a0>
   27e48:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27e4c:	mov	r3, #1
   27e50:	ldr	r2, [pc, #-3220]	; 271c4 <__flatcc_fb_parse@@Base+0x1244>
   27e54:	str	r3, [sp, #4]
   27e58:	mov	r3, #0
   27e5c:	str	r9, [sp]
   27e60:	mov	r0, r4
   27e64:	bl	24ea4 <__flatcc_error_report@@Base>
   27e68:	b	279a4 <__flatcc_fb_parse@@Base+0x1a24>
   27e6c:	mov	r3, #5
   27e70:	str	r3, [sp, #4]
   27e74:	ldr	r3, [pc, #-3252]	; 271c8 <__flatcc_fb_parse@@Base+0x1248>
   27e78:	ldr	r2, [pc, #-3252]	; 271cc <__flatcc_fb_parse@@Base+0x124c>
   27e7c:	str	r3, [sp]
   27e80:	mov	r3, #0
   27e84:	b	27e60 <__flatcc_fb_parse@@Base+0x1ee0>
   27e88:	ldr	r2, [r4, #356]	; 0x164
   27e8c:	cmp	r2, #0
   27e90:	bne	27ea4 <__flatcc_fb_parse@@Base+0x1f24>
   27e94:	str	r3, [r4, #356]	; 0x164
   27e98:	add	r0, r4, #392	; 0x188
   27e9c:	bl	24a98 <__flatcc_fb_read_file@@Base+0xe8>
   27ea0:	b	279cc <__flatcc_fb_parse@@Base+0x1a4c>
   27ea4:	ldr	r1, [r2]
   27ea8:	str	r3, [r2]
   27eac:	mov	r3, r2
   27eb0:	mov	r2, r1
   27eb4:	b	27e8c <__flatcc_fb_parse@@Base+0x1f0c>
   27eb8:	cmp	r7, r6
   27ebc:	mov	r5, r7
   27ec0:	bne	26274 <__flatcc_fb_parse@@Base+0x2f4>
   27ec4:	b	2628c <__flatcc_fb_parse@@Base+0x30c>
   27ec8:	cmp	r7, r6
   27ecc:	bne	2637c <__flatcc_fb_parse@@Base+0x3fc>
   27ed0:	mov	r5, r7
   27ed4:	b	2628c <__flatcc_fb_parse@@Base+0x30c>
   27ed8:	ldrb	r3, [r3]
   27edc:	udf	#0

00027ee0 <__flatcc_fb_clear_parser@@Base>:
   27ee0:	push	{r4, r5, r6, lr}
   27ee4:	mov	r4, r0
   27ee8:	ldr	r5, [r0, #392]	; 0x188
   27eec:	cmp	r5, #0
   27ef0:	bne	27fac <__flatcc_fb_clear_parser@@Base+0xcc>
   27ef4:	add	r0, r4, #448	; 0x1c0
   27ef8:	bl	24498 <fb_schema_table_clear@@Base>
   27efc:	add	r0, r4, #432	; 0x1b0
   27f00:	bl	2ee68 <fb_name_table_clear@@Base>
   27f04:	add	r0, r4, #524	; 0x20c
   27f08:	bl	23364 <ptr_set_clear@@Base>
   27f0c:	ldr	r0, [r4, #112]	; 0x70
   27f10:	cmp	r0, #0
   27f14:	beq	27f1c <__flatcc_fb_clear_parser@@Base+0x3c>
   27f18:	bl	14018 <free@plt>
   27f1c:	ldr	r0, [r4, #20]
   27f20:	cmp	r0, #0
   27f24:	beq	27f2c <__flatcc_fb_clear_parser@@Base+0x4c>
   27f28:	bl	14018 <free@plt>
   27f2c:	ldr	r0, [r4, #512]	; 0x200
   27f30:	cmp	r0, #0
   27f34:	beq	27f3c <__flatcc_fb_clear_parser@@Base+0x5c>
   27f38:	bl	14018 <free@plt>
   27f3c:	ldr	r0, [r4, #516]	; 0x204
   27f40:	cmp	r0, #0
   27f44:	beq	27f4c <__flatcc_fb_clear_parser@@Base+0x6c>
   27f48:	bl	14018 <free@plt>
   27f4c:	ldr	r0, [r4, #520]	; 0x208
   27f50:	cmp	r0, #0
   27f54:	beq	27f5c <__flatcc_fb_clear_parser@@Base+0x7c>
   27f58:	bl	14018 <free@plt>
   27f5c:	ldr	r0, [r4, #548]	; 0x224
   27f60:	cmp	r0, #0
   27f64:	beq	27f6c <__flatcc_fb_clear_parser@@Base+0x8c>
   27f68:	bl	14018 <free@plt>
   27f6c:	add	r0, r4, #416	; 0x1a0
   27f70:	mov	r2, #0
   27f74:	ldr	r1, [pc, #100]	; 27fe0 <__flatcc_fb_clear_parser@@Base+0x100>
   27f78:	bl	23f6c <fb_scope_table_destroy@@Base>
   27f7c:	ldr	r0, [r4, #48]	; 0x30
   27f80:	cmp	r0, #0
   27f84:	bne	27fd0 <__flatcc_fb_clear_parser@@Base+0xf0>
   27f88:	ldr	r0, [r4, #16]
   27f8c:	cmp	r0, #0
   27f90:	beq	27f98 <__flatcc_fb_clear_parser@@Base+0xb8>
   27f94:	bl	14018 <free@plt>
   27f98:	mov	r0, r4
   27f9c:	mov	r2, #560	; 0x230
   27fa0:	mov	r1, #0
   27fa4:	pop	{r4, r5, r6, lr}
   27fa8:	b	140fc <memset@plt>
   27fac:	ldrh	r3, [r5, #8]
   27fb0:	cmp	r3, #4
   27fb4:	bhi	27fc8 <__flatcc_fb_clear_parser@@Base+0xe8>
   27fb8:	add	r0, r5, #56	; 0x38
   27fbc:	bl	23878 <fb_symbol_table_clear@@Base>
   27fc0:	add	r0, r5, #72	; 0x48
   27fc4:	bl	2f3d8 <fb_value_set_clear@@Base>
   27fc8:	ldr	r5, [r5]
   27fcc:	b	27eec <__flatcc_fb_clear_parser@@Base+0xc>
   27fd0:	ldr	r5, [r0]
   27fd4:	bl	14018 <free@plt>
   27fd8:	mov	r0, r5
   27fdc:	b	27f80 <__flatcc_fb_clear_parser@@Base+0xa0>
   27fe0:	ldrdeq	r4, [r2], -ip
   27fe4:	mov	ip, #0
   27fe8:	push	{r0, r1, r2, lr}
   27fec:	str	ip, [sp, #4]
   27ff0:	str	ip, [sp]
   27ff4:	bl	24ea4 <__flatcc_error_report@@Base>
   27ff8:	add	sp, sp, #12
   27ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   28000:	mov	r3, #0
   28004:	b	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   28008:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2800c:	mov	r5, r0
   28010:	mov	r4, r1
   28014:	mov	r9, r2
   28018:	mov	r1, #0
   2801c:	mov	r2, #48	; 0x30
   28020:	mov	r0, r3
   28024:	mov	r8, r3
   28028:	bl	140fc <memset@plt>
   2802c:	ldr	sl, [pc, #312]	; 2816c <__flatcc_fb_clear_parser@@Base+0x28c>
   28030:	ldr	fp, [pc, #312]	; 28170 <__flatcc_fb_clear_parser@@Base+0x290>
   28034:	mov	r7, #100	; 0x64
   28038:	mov	r6, #0
   2803c:	cmp	r4, #0
   28040:	cmpne	r7, #0
   28044:	bne	28068 <__flatcc_fb_clear_parser@@Base+0x188>
   28048:	cmp	r4, #0
   2804c:	beq	28060 <__flatcc_fb_clear_parser@@Base+0x180>
   28050:	ldr	r2, [pc, #284]	; 28174 <__flatcc_fb_clear_parser@@Base+0x294>
   28054:	ldr	r1, [r4, #4]
   28058:	mov	r0, r5
   2805c:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28060:	mov	r0, r6
   28064:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28068:	ldr	r3, [r4, #4]
   2806c:	ldr	r0, [r5, #412]	; 0x19c
   28070:	ldm	r3, {r1, r2}
   28074:	add	r0, r0, #16
   28078:	bl	2ef04 <fb_name_table_find@@Base>
   2807c:	cmp	r0, #0
   28080:	ldreq	r2, [pc, #240]	; 28178 <__flatcc_fb_clear_parser@@Base+0x298>
   28084:	beq	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   28088:	ldr	r3, [r0, #24]
   2808c:	cmp	r3, #0
   28090:	beq	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28094:	asr	r2, r9, r3
   28098:	tst	r2, #1
   2809c:	ldreq	r2, [pc, #216]	; 2817c <__flatcc_fb_clear_parser@@Base+0x29c>
   280a0:	beq	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   280a4:	mov	r2, #1
   280a8:	orr	r6, r6, r2, lsl r3
   280ac:	ldr	r2, [r8, r3, lsl #2]
   280b0:	uxth	r6, r6
   280b4:	cmp	r2, #0
   280b8:	ldrne	r2, [pc, #192]	; 28180 <__flatcc_fb_clear_parser@@Base+0x2a0>
   280bc:	bne	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   280c0:	str	r4, [r8, r3, lsl #2]
   280c4:	ldr	r3, [sl, r3, lsl #2]
   280c8:	cmp	r3, #0
   280cc:	bne	280ec <__flatcc_fb_clear_parser@@Base+0x20c>
   280d0:	ldrh	r3, [r4, #16]
   280d4:	cmp	r3, #0
   280d8:	ldrne	r2, [pc, #164]	; 28184 <__flatcc_fb_clear_parser@@Base+0x2a4>
   280dc:	bne	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   280e0:	sub	r7, r7, #1
   280e4:	ldr	r4, [r4]
   280e8:	b	2803c <__flatcc_fb_clear_parser@@Base+0x15c>
   280ec:	cmp	r3, #2
   280f0:	bne	28114 <__flatcc_fb_clear_parser@@Base+0x234>
   280f4:	ldrh	r3, [r4, #16]
   280f8:	cmp	r3, #2
   280fc:	ldrne	r2, [pc, #132]	; 28188 <__flatcc_fb_clear_parser@@Base+0x2a8>
   28100:	beq	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28104:	ldr	r1, [r4, #4]
   28108:	mov	r0, r5
   2810c:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28110:	b	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28114:	cmp	r3, #5
   28118:	bne	28130 <__flatcc_fb_clear_parser@@Base+0x250>
   2811c:	ldrh	r3, [r4, #16]
   28120:	cmp	r3, #5
   28124:	ldrne	r2, [pc, #96]	; 2818c <__flatcc_fb_clear_parser@@Base+0x2ac>
   28128:	bne	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   2812c:	b	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28130:	cmp	r3, #4
   28134:	bne	28150 <__flatcc_fb_clear_parser@@Base+0x270>
   28138:	ldrh	r3, [r4, #16]
   2813c:	sub	r3, r3, #4
   28140:	cmp	r3, #1
   28144:	ldrhi	r2, [pc, #68]	; 28190 <__flatcc_fb_clear_parser@@Base+0x2b0>
   28148:	bhi	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   2814c:	b	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28150:	cmp	r3, #6
   28154:	bne	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28158:	ldrh	r3, [r4, #16]
   2815c:	cmp	r3, #6
   28160:	beq	280e0 <__flatcc_fb_clear_parser@@Base+0x200>
   28164:	mov	r2, fp
   28168:	b	28104 <__flatcc_fb_clear_parser@@Base+0x224>
   2816c:	andeq	r8, r4, ip, lsl sp
   28170:	andeq	r8, r4, r8, asr pc
   28174:	andeq	r8, r4, r2, lsl #31
   28178:	andeq	r8, r4, lr, asr #28
   2817c:	andeq	r8, r4, sp, ror #28
   28180:	muleq	r4, sl, lr
   28184:	andeq	r8, r4, r0, asr #29
   28188:	andeq	r8, r4, r8, ror #29
   2818c:	andeq	r8, r4, r9, lsl #30
   28190:	andeq	r8, r4, r5, lsr pc
   28194:	cmp	r0, #0
   28198:	bxeq	lr
   2819c:	ldr	r0, [r0, #60]	; 0x3c
   281a0:	cmp	r0, #0
   281a4:	bxeq	lr
   281a8:	rsb	r2, r2, #0
   281ac:	b	24004 <fb_scope_table_find@@Base>
   281b0:	push	{r4, r5, r6, lr}
   281b4:	subs	r6, r1, #0
   281b8:	movne	r4, #0
   281bc:	ldrne	r3, [r6]
   281c0:	bne	281d4 <__flatcc_fb_clear_parser@@Base+0x2f4>
   281c4:	mov	r0, r6
   281c8:	pop	{r4, r5, r6, pc}
   281cc:	ldr	r3, [r3]
   281d0:	add	r4, r4, #1
   281d4:	cmp	r3, #0
   281d8:	bne	281cc <__flatcc_fb_clear_parser@@Base+0x2ec>
   281dc:	cmp	r4, #0
   281e0:	addne	r5, r0, #352	; 0x160
   281e4:	bne	28208 <__flatcc_fb_clear_parser@@Base+0x328>
   281e8:	mov	r0, r4
   281ec:	pop	{r4, r5, r6, pc}
   281f0:	ldr	r1, [r6]
   281f4:	mov	r0, r5
   281f8:	bl	28194 <__flatcc_fb_clear_parser@@Base+0x2b4>
   281fc:	cmp	r0, #0
   28200:	beq	28208 <__flatcc_fb_clear_parser@@Base+0x328>
   28204:	pop	{r4, r5, r6, pc}
   28208:	subs	r4, r4, #1
   2820c:	mov	r2, r4
   28210:	bne	281f0 <__flatcc_fb_clear_parser@@Base+0x310>
   28214:	mov	r1, r4
   28218:	mov	r0, r5
   2821c:	pop	{r4, r5, r6, lr}
   28220:	b	28194 <__flatcc_fb_clear_parser@@Base+0x2b4>
   28224:	ldrh	r3, [r1, #8]
   28228:	cmp	r3, #4
   2822c:	bhi	28254 <__flatcc_fb_clear_parser@@Base+0x374>
   28230:	push	{r4, lr}
   28234:	add	r0, r0, #172	; 0xac
   28238:	mov	r4, r1
   2823c:	ldr	r1, [r1, #16]
   28240:	bl	233f8 <ptr_set_find_item@@Base>
   28244:	cmp	r0, #0
   28248:	movne	r0, r4
   2824c:	moveq	r0, #0
   28250:	pop	{r4, pc}
   28254:	mov	r0, #0
   28258:	bx	lr
   2825c:	push	{r4, r5, r6, r7, r8, lr}
   28260:	mov	r7, r1
   28264:	mov	r1, #0
   28268:	mov	r5, r0
   2826c:	mov	r4, r1
   28270:	mov	r0, r2
   28274:	mov	ip, r1
   28278:	cmp	r2, #0
   2827c:	bne	282e8 <__flatcc_fb_clear_parser@@Base+0x408>
   28280:	cmp	r3, #0
   28284:	strne	r4, [r3]
   28288:	movne	r4, ip
   2828c:	subne	r1, r1, #1
   28290:	cmp	r4, #0
   28294:	beq	282e0 <__flatcc_fb_clear_parser@@Base+0x400>
   28298:	adds	r3, r7, #0
   2829c:	movne	r3, #1
   282a0:	cmp	r1, #1
   282a4:	movne	r3, #0
   282a8:	cmp	r3, #0
   282ac:	beq	28318 <__flatcc_fb_clear_parser@@Base+0x438>
   282b0:	add	r8, r5, #352	; 0x160
   282b4:	ldr	r3, [r4, #4]
   282b8:	add	r0, r7, #4
   282bc:	ldm	r3, {r1, r2}
   282c0:	bl	23914 <fb_symbol_table_find@@Base>
   282c4:	subs	r6, r0, #0
   282c8:	bne	282fc <__flatcc_fb_clear_parser@@Base+0x41c>
   282cc:	mov	r1, r7
   282d0:	mov	r0, r5
   282d4:	bl	281b0 <__flatcc_fb_clear_parser@@Base+0x2d0>
   282d8:	subs	r7, r0, #0
   282dc:	bne	282b4 <__flatcc_fb_clear_parser@@Base+0x3d4>
   282e0:	mov	r6, #0
   282e4:	b	28310 <__flatcc_fb_clear_parser@@Base+0x430>
   282e8:	mov	ip, r4
   282ec:	add	r1, r1, #1
   282f0:	mov	r4, r2
   282f4:	ldr	r2, [r2]
   282f8:	b	28278 <__flatcc_fb_clear_parser@@Base+0x398>
   282fc:	mov	r1, r6
   28300:	mov	r0, r8
   28304:	bl	28224 <__flatcc_fb_clear_parser@@Base+0x344>
   28308:	cmp	r0, #0
   2830c:	beq	282cc <__flatcc_fb_clear_parser@@Base+0x3ec>
   28310:	mov	r0, r6
   28314:	pop	{r4, r5, r6, r7, r8, pc}
   28318:	cmp	r1, #1
   2831c:	add	r5, r5, #352	; 0x160
   28320:	sub	r2, r1, #1
   28324:	movne	r1, r0
   28328:	moveq	r1, #0
   2832c:	mov	r0, r5
   28330:	bl	28194 <__flatcc_fb_clear_parser@@Base+0x2b4>
   28334:	cmp	r0, #0
   28338:	beq	282e0 <__flatcc_fb_clear_parser@@Base+0x400>
   2833c:	ldr	r3, [r4, #4]
   28340:	add	r0, r0, #4
   28344:	ldm	r3, {r1, r2}
   28348:	bl	23914 <fb_symbol_table_find@@Base>
   2834c:	subs	r6, r0, #0
   28350:	beq	282e0 <__flatcc_fb_clear_parser@@Base+0x400>
   28354:	mov	r1, r6
   28358:	mov	r0, r5
   2835c:	bl	28224 <__flatcc_fb_clear_parser@@Base+0x344>
   28360:	cmp	r0, #0
   28364:	bne	28310 <__flatcc_fb_clear_parser@@Base+0x430>
   28368:	b	282e0 <__flatcc_fb_clear_parser@@Base+0x400>
   2836c:	push	{r0, r1, r4, r5, r6, lr}
   28370:	mov	r4, r2
   28374:	subs	r6, r3, #0
   28378:	mov	r2, #0
   2837c:	ldr	r5, [sp, #24]
   28380:	str	r2, [sp, #4]
   28384:	bne	2839c <__flatcc_fb_clear_parser@@Base+0x4bc>
   28388:	ldr	r3, [pc, #172]	; 2843c <__flatcc_fb_clear_parser@@Base+0x55c>
   2838c:	ldr	r2, [pc, #172]	; 28440 <__flatcc_fb_clear_parser@@Base+0x560>
   28390:	ldr	r1, [pc, #172]	; 28444 <__flatcc_fb_clear_parser@@Base+0x564>
   28394:	ldr	r0, [pc, #172]	; 28448 <__flatcc_fb_clear_parser@@Base+0x568>
   28398:	bl	141a4 <__assert_fail@plt>
   2839c:	cmp	r4, #0
   283a0:	beq	283c0 <__flatcc_fb_clear_parser@@Base+0x4e0>
   283a4:	ldrh	r3, [r4, #8]
   283a8:	cmp	r3, #3
   283ac:	ldrne	r3, [pc, #136]	; 2843c <__flatcc_fb_clear_parser@@Base+0x55c>
   283b0:	movne	r2, #348	; 0x15c
   283b4:	ldrne	r1, [pc, #136]	; 28444 <__flatcc_fb_clear_parser@@Base+0x564>
   283b8:	ldrne	r0, [pc, #140]	; 2844c <__flatcc_fb_clear_parser@@Base+0x56c>
   283bc:	bne	28398 <__flatcc_fb_clear_parser@@Base+0x4b8>
   283c0:	add	r3, sp, #4
   283c4:	mov	r2, r6
   283c8:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   283cc:	cmp	r0, #0
   283d0:	beq	283e0 <__flatcc_fb_clear_parser@@Base+0x500>
   283d4:	ldrh	r3, [r0, #8]
   283d8:	cmp	r3, #3
   283dc:	beq	28408 <__flatcc_fb_clear_parser@@Base+0x528>
   283e0:	ldr	r2, [r6]
   283e4:	clz	r3, r4
   283e8:	lsr	r3, r3, #5
   283ec:	cmp	r2, #0
   283f0:	orrne	r3, r3, #1
   283f4:	cmp	r3, #0
   283f8:	beq	2840c <__flatcc_fb_clear_parser@@Base+0x52c>
   283fc:	mvn	r0, #0
   28400:	add	sp, sp, #8
   28404:	pop	{r4, r5, r6, pc}
   28408:	mov	r4, r0
   2840c:	ldr	r3, [sp, #4]
   28410:	add	r0, r4, #56	; 0x38
   28414:	ldr	r3, [r3, #4]
   28418:	ldm	r3, {r1, r2}
   2841c:	bl	23914 <fb_symbol_table_find@@Base>
   28420:	cmp	r0, #0
   28424:	beq	283fc <__flatcc_fb_clear_parser@@Base+0x51c>
   28428:	add	r0, r0, #48	; 0x30
   2842c:	ldm	r0, {r0, r1, r2, r3}
   28430:	stm	r5, {r0, r1, r2, r3}
   28434:	mov	r0, #0
   28438:	b	28400 <__flatcc_fb_clear_parser@@Base+0x520>
   2843c:	andeq	r8, r4, r5, asr sp
   28440:	andeq	r0, r0, fp, asr r1
   28444:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   28448:	strdeq	r8, [r4], -r5
   2844c:	strdeq	r8, [r4], -r9
   28450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28454:	mov	r5, r0
   28458:	ldrh	r8, [r1, #8]
   2845c:	sub	sp, sp, #92	; 0x5c
   28460:	mov	r6, r1
   28464:	cmp	r8, #4
   28468:	beq	2857c <__flatcc_fb_clear_parser@@Base+0x69c>
   2846c:	cmp	r8, #3
   28470:	beq	28488 <__flatcc_fb_clear_parser@@Base+0x5a8>
   28474:	ldr	r3, [pc, #1352]	; 289c4 <__flatcc_fb_clear_parser@@Base+0xae4>
   28478:	ldr	r2, [pc, #1352]	; 289c8 <__flatcc_fb_clear_parser@@Base+0xae8>
   2847c:	ldr	r1, [pc, #1352]	; 289cc <__flatcc_fb_clear_parser@@Base+0xaec>
   28480:	ldr	r0, [pc, #1352]	; 289d0 <__flatcc_fb_clear_parser@@Base+0xaf0>
   28484:	bl	141a4 <__assert_fail@plt>
   28488:	ldrh	r3, [r1, #48]	; 0x30
   2848c:	cmp	r3, #0
   28490:	bne	284b0 <__flatcc_fb_clear_parser@@Base+0x5d0>
   28494:	ldr	r2, [pc, #1336]	; 289d4 <__flatcc_fb_clear_parser@@Base+0xaf4>
   28498:	mov	r3, #1
   2849c:	strh	r3, [r1, #48]	; 0x30
   284a0:	ldr	r1, [r6, #4]
   284a4:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   284a8:	mvn	r0, #0
   284ac:	b	2856c <__flatcc_fb_clear_parser@@Base+0x68c>
   284b0:	cmp	r3, #8
   284b4:	bne	28574 <__flatcc_fb_clear_parser@@Base+0x694>
   284b8:	ldr	r3, [r1, #40]	; 0x28
   284bc:	ldr	r2, [pc, #1300]	; 289d8 <__flatcc_fb_clear_parser@@Base+0xaf8>
   284c0:	ldr	r3, [r3, #16]
   284c4:	add	r3, r3, #996	; 0x3e4
   284c8:	add	r3, r3, #3
   284cc:	cmp	r3, #27
   284d0:	addls	r3, r2, r3
   284d4:	movhi	r3, #0
   284d8:	ldrbls	r3, [r3, #87]	; 0x57
   284dc:	str	r3, [r1, #40]	; 0x28
   284e0:	add	r2, r2, r3, lsl #2
   284e4:	mov	r1, #0
   284e8:	ldr	r3, [r2, #116]	; 0x74
   284ec:	mov	r0, r3
   284f0:	strd	r0, [r6, #112]	; 0x70
   284f4:	strh	r3, [r6, #104]	; 0x68
   284f8:	mov	r2, #32
   284fc:	add	r3, sp, #40	; 0x28
   28500:	ldr	r1, [r6, #28]
   28504:	mov	r0, r5
   28508:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   2850c:	strh	r0, [r6, #92]	; 0x5c
   28510:	ands	r0, r0, #32
   28514:	streq	r0, [sp, #4]
   28518:	movne	r3, #0
   2851c:	movne	r2, #0
   28520:	strdne	r2, [sp, #8]
   28524:	movne	r3, #1
   28528:	strne	r3, [sp, #4]
   2852c:	ldr	r2, [r6, #40]	; 0x28
   28530:	add	r7, sp, #8
   28534:	cmp	r2, #5
   28538:	bne	285ac <__flatcc_fb_clear_parser@@Base+0x6cc>
   2853c:	mov	r3, #0
   28540:	strb	r3, [sp, #8]
   28544:	mov	r3, #6
   28548:	strh	r3, [sp, #16]
   2854c:	ldm	r7, {r0, r1, r2, r3}
   28550:	add	r9, sp, #24
   28554:	ldr	r4, [r6, #20]
   28558:	mov	fp, #1
   2855c:	stm	r9, {r0, r1, r2, r3}
   28560:	cmp	r4, #0
   28564:	bne	285e8 <__flatcc_fb_clear_parser@@Base+0x708>
   28568:	mov	r0, r4
   2856c:	add	sp, sp, #92	; 0x5c
   28570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28574:	ldr	r2, [pc, #1120]	; 289dc <__flatcc_fb_clear_parser@@Base+0xafc>
   28578:	b	284a0 <__flatcc_fb_clear_parser@@Base+0x5c0>
   2857c:	ldrh	r3, [r1, #48]	; 0x30
   28580:	cmp	r3, #0
   28584:	ldrne	r2, [pc, #1108]	; 289e0 <__flatcc_fb_clear_parser@@Base+0xb00>
   28588:	bne	284a0 <__flatcc_fb_clear_parser@@Base+0x5c0>
   2858c:	mov	r3, #8
   28590:	strh	r3, [r1, #48]	; 0x30
   28594:	mov	r2, #1
   28598:	mov	r3, #0
   2859c:	str	r8, [r1, #40]	; 0x28
   285a0:	strd	r2, [r1, #112]	; 0x70
   285a4:	mov	r3, #1
   285a8:	b	284f4 <__flatcc_fb_clear_parser@@Base+0x614>
   285ac:	mov	r0, #0
   285b0:	mov	r1, #0
   285b4:	mov	r3, #4
   285b8:	strd	r0, [sp, #8]
   285bc:	strh	r3, [sp, #16]
   285c0:	mov	r1, r6
   285c4:	mov	r3, r7
   285c8:	mov	r0, r5
   285cc:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   285d0:	cmp	r0, #0
   285d4:	movne	r1, #0
   285d8:	ldrne	r2, [pc, #1028]	; 289e4 <__flatcc_fb_clear_parser@@Base+0xb04>
   285dc:	beq	2854c <__flatcc_fb_clear_parser@@Base+0x66c>
   285e0:	mov	r0, r5
   285e4:	b	284a4 <__flatcc_fb_clear_parser@@Base+0x5c4>
   285e8:	mov	r2, #1
   285ec:	mov	r1, r4
   285f0:	add	r0, r6, #56	; 0x38
   285f4:	bl	238f4 <fb_symbol_table_insert_item@@Base>
   285f8:	cmp	r0, #0
   285fc:	beq	2863c <__flatcc_fb_clear_parser@@Base+0x75c>
   28600:	ldr	r3, [r0, #4]
   28604:	add	r2, r5, #68	; 0x44
   28608:	cmp	r3, r2
   2860c:	ldreq	r2, [pc, #980]	; 289e8 <__flatcc_fb_clear_parser@@Base+0xb08>
   28610:	ldreq	r1, [r4, #4]
   28614:	beq	28740 <__flatcc_fb_clear_parser@@Base+0x860>
   28618:	ldr	r2, [pc, #972]	; 289ec <__flatcc_fb_clear_parser@@Base+0xb0c>
   2861c:	ldr	r1, [r4, #4]
   28620:	mov	r0, r5
   28624:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   28628:	mov	r3, #1
   2862c:	strh	r3, [r4, #24]
   28630:	ldr	r4, [r4]
   28634:	mov	fp, #0
   28638:	b	28560 <__flatcc_fb_clear_parser@@Base+0x680>
   2863c:	ldrh	r3, [r4, #8]
   28640:	cmp	r3, #5
   28644:	beq	28654 <__flatcc_fb_clear_parser@@Base+0x774>
   28648:	ldr	r2, [pc, #928]	; 289f0 <__flatcc_fb_clear_parser@@Base+0xb10>
   2864c:	ldr	r1, [r4, #4]
   28650:	b	285e0 <__flatcc_fb_clear_parser@@Base+0x700>
   28654:	ldr	r3, [r4, #64]	; 0x40
   28658:	cmp	r3, #0
   2865c:	ldrne	r3, [pc, #864]	; 289c4 <__flatcc_fb_clear_parser@@Base+0xae4>
   28660:	ldrne	r2, [pc, #908]	; 289f4 <__flatcc_fb_clear_parser@@Base+0xb14>
   28664:	ldrne	r1, [pc, #864]	; 289cc <__flatcc_fb_clear_parser@@Base+0xaec>
   28668:	ldrne	r0, [pc, #904]	; 289f8 <__flatcc_fb_clear_parser@@Base+0xb18>
   2866c:	bne	28484 <__flatcc_fb_clear_parser@@Base+0x5a4>
   28670:	cmp	r8, #4
   28674:	bne	286a4 <__flatcc_fb_clear_parser@@Base+0x7c4>
   28678:	ldr	r1, [r4, #4]
   2867c:	add	r2, r5, #68	; 0x44
   28680:	cmp	r1, r2
   28684:	strheq	r3, [r4, #24]
   28688:	beq	286a4 <__flatcc_fb_clear_parser@@Base+0x7c4>
   2868c:	ldrh	r2, [r4, #24]
   28690:	cmp	r2, #10
   28694:	bne	2872c <__flatcc_fb_clear_parser@@Base+0x84c>
   28698:	mov	r2, #0
   2869c:	mov	r3, #0
   286a0:	strd	r2, [r4, #88]	; 0x58
   286a4:	ldrh	r3, [r4, #56]	; 0x38
   286a8:	eor	fp, fp, #1
   286ac:	cmp	r3, #0
   286b0:	movne	r3, #0
   286b4:	andeq	r3, fp, #1
   286b8:	cmp	r3, #0
   286bc:	beq	28704 <__flatcc_fb_clear_parser@@Base+0x824>
   286c0:	ldrh	r3, [sp, #16]
   286c4:	cmp	r3, #5
   286c8:	bne	287a0 <__flatcc_fb_clear_parser@@Base+0x8c0>
   286cc:	ldr	r3, [r6, #40]	; 0x28
   286d0:	cmp	r3, #6
   286d4:	bne	286f4 <__flatcc_fb_clear_parser@@Base+0x814>
   286d8:	ldrd	r2, [sp, #8]
   286dc:	mvn	r1, #0
   286e0:	mvn	r0, #0
   286e4:	cmp	r3, r1
   286e8:	cmpeq	r2, r0
   286ec:	ldreq	r2, [pc, #776]	; 289fc <__flatcc_fb_clear_parser@@Base+0xb1c>
   286f0:	beq	287d0 <__flatcc_fb_clear_parser@@Base+0x8f0>
   286f4:	ldrd	r2, [sp, #8]
   286f8:	adds	r2, r2, #1
   286fc:	adc	r3, r3, #0
   28700:	strd	r2, [sp, #8]
   28704:	ldr	r3, [sp, #4]
   28708:	cmp	r3, #0
   2870c:	ldrh	r3, [r4, #56]	; 0x38
   28710:	beq	288c4 <__flatcc_fb_clear_parser@@Base+0x9e4>
   28714:	cmp	r3, #0
   28718:	beq	2881c <__flatcc_fb_clear_parser@@Base+0x93c>
   2871c:	cmp	r3, #5
   28720:	beq	28810 <__flatcc_fb_clear_parser@@Base+0x930>
   28724:	ldr	r2, [pc, #724]	; 28a00 <__flatcc_fb_clear_parser@@Base+0xb20>
   28728:	b	2864c <__flatcc_fb_clear_parser@@Base+0x76c>
   2872c:	cmp	r2, #12
   28730:	beq	2874c <__flatcc_fb_clear_parser@@Base+0x86c>
   28734:	cmp	r2, #1
   28738:	beq	28630 <__flatcc_fb_clear_parser@@Base+0x750>
   2873c:	ldr	r2, [pc, #704]	; 28a04 <__flatcc_fb_clear_parser@@Base+0xb24>
   28740:	mov	r0, r5
   28744:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28748:	b	28628 <__flatcc_fb_clear_parser@@Base+0x748>
   2874c:	ldr	r2, [r4, #16]
   28750:	ldr	r1, [r6, #12]
   28754:	mov	r0, r5
   28758:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   2875c:	cmp	r0, #0
   28760:	bne	2877c <__flatcc_fb_clear_parser@@Base+0x89c>
   28764:	mov	r3, r4
   28768:	ldr	r2, [pc, #664]	; 28a08 <__flatcc_fb_clear_parser@@Base+0xb28>
   2876c:	ldr	r1, [r4, #16]
   28770:	mov	r0, r5
   28774:	bl	25ca8 <error_ref_sym@@Base>
   28778:	b	28628 <__flatcc_fb_clear_parser@@Base+0x748>
   2877c:	ldrh	r3, [r0, #8]
   28780:	cmp	r3, #1
   28784:	ldrhi	r3, [r0, #4]
   28788:	ldrhi	r2, [pc, #636]	; 28a0c <__flatcc_fb_clear_parser@@Base+0xb2c>
   2878c:	bhi	2861c <__flatcc_fb_clear_parser@@Base+0x73c>
   28790:	mov	r3, #14
   28794:	strh	r3, [r4, #24]
   28798:	str	r0, [r4, #16]
   2879c:	b	28698 <__flatcc_fb_clear_parser@@Base+0x7b8>
   287a0:	cmp	r3, #4
   287a4:	bne	287e0 <__flatcc_fb_clear_parser@@Base+0x900>
   287a8:	ldr	r3, [r6, #40]	; 0x28
   287ac:	cmp	r3, #6
   287b0:	bne	286f4 <__flatcc_fb_clear_parser@@Base+0x814>
   287b4:	ldrd	r2, [sp, #8]
   287b8:	mvn	r1, #-2147483648	; 0x80000000
   287bc:	mvn	r0, #0
   287c0:	cmp	r3, r1
   287c4:	cmpeq	r2, r0
   287c8:	bne	286f4 <__flatcc_fb_clear_parser@@Base+0x814>
   287cc:	ldr	r2, [pc, #572]	; 28a10 <__flatcc_fb_clear_parser@@Base+0xb30>
   287d0:	ldr	r1, [r4, #4]
   287d4:	mov	r0, r5
   287d8:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   287dc:	b	286f4 <__flatcc_fb_clear_parser@@Base+0x814>
   287e0:	cmp	r3, #6
   287e4:	bne	28704 <__flatcc_fb_clear_parser@@Base+0x824>
   287e8:	ldrb	r3, [sp, #8]
   287ec:	cmp	r3, #1
   287f0:	bne	28804 <__flatcc_fb_clear_parser@@Base+0x924>
   287f4:	ldr	r2, [pc, #536]	; 28a14 <__flatcc_fb_clear_parser@@Base+0xb34>
   287f8:	ldr	r1, [r4, #4]
   287fc:	mov	r0, r5
   28800:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28804:	mov	r3, #1
   28808:	strb	r3, [sp, #8]
   2880c:	b	28704 <__flatcc_fb_clear_parser@@Base+0x824>
   28810:	add	r3, r4, #48	; 0x30
   28814:	ldm	r3, {r0, r1, r2, r3}
   28818:	stm	r7, {r0, r1, r2, r3}
   2881c:	ldr	sl, [r6, #40]	; 0x28
   28820:	ldr	r1, [pc, #432]	; 289d8 <__flatcc_fb_clear_parser@@Base+0xaf8>
   28824:	ldrd	r2, [sp, #8]
   28828:	add	r1, r1, sl, lsl #2
   2882c:	ldr	r0, [r1, #116]	; 0x74
   28830:	mov	r1, #0
   28834:	cmp	r3, r1
   28838:	lsl	r0, r0, #3
   2883c:	cmpeq	r2, r0
   28840:	bcc	2884c <__flatcc_fb_clear_parser@@Base+0x96c>
   28844:	ldr	r2, [pc, #460]	; 28a18 <__flatcc_fb_clear_parser@@Base+0xb38>
   28848:	b	2864c <__flatcc_fb_clear_parser@@Base+0x76c>
   2884c:	mov	r0, #1
   28850:	mov	r1, #0
   28854:	bl	2f688 <fb_value_set_visit@@Base+0x210>
   28858:	mov	r3, #5
   2885c:	strh	r3, [r4, #56]	; 0x38
   28860:	mov	r2, sl
   28864:	add	r3, r4, #48	; 0x30
   28868:	strd	r0, [r4, #48]	; 0x30
   2886c:	mov	r1, r4
   28870:	mov	r0, r5
   28874:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   28878:	cmp	r0, #0
   2887c:	bne	28844 <__flatcc_fb_clear_parser@@Base+0x964>
   28880:	cmp	fp, #0
   28884:	beq	28920 <__flatcc_fb_clear_parser@@Base+0xa40>
   28888:	ldr	r3, [r5, #180]	; 0xb4
   2888c:	cmp	r3, #0
   28890:	beq	28920 <__flatcc_fb_clear_parser@@Base+0xa40>
   28894:	ldrh	r3, [sp, #16]
   28898:	cmp	r3, #5
   2889c:	bne	28904 <__flatcc_fb_clear_parser@@Base+0xa24>
   288a0:	ldrd	r2, [sp, #24]
   288a4:	ldrd	r0, [sp, #8]
   288a8:	cmp	r1, r3
   288ac:	cmpeq	r0, r2
   288b0:	bhi	28920 <__flatcc_fb_clear_parser@@Base+0xa40>
   288b4:	cmp	r8, #4
   288b8:	beq	28950 <__flatcc_fb_clear_parser@@Base+0xa70>
   288bc:	ldr	r2, [pc, #344]	; 28a1c <__flatcc_fb_clear_parser@@Base+0xb3c>
   288c0:	b	28960 <__flatcc_fb_clear_parser@@Base+0xa80>
   288c4:	cmp	r3, #0
   288c8:	add	sl, r4, #48	; 0x30
   288cc:	bne	288dc <__flatcc_fb_clear_parser@@Base+0x9fc>
   288d0:	ldm	r7, {r0, r1, r2, r3}
   288d4:	stm	sl, {r0, r1, r2, r3}
   288d8:	b	28880 <__flatcc_fb_clear_parser@@Base+0x9a0>
   288dc:	ldm	sl, {r0, r1, r2, r3}
   288e0:	stm	r7, {r0, r1, r2, r3}
   288e4:	mov	r3, r7
   288e8:	ldr	r2, [r6, #40]	; 0x28
   288ec:	mov	r1, r4
   288f0:	mov	r0, r5
   288f4:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   288f8:	cmp	r0, #0
   288fc:	beq	288d0 <__flatcc_fb_clear_parser@@Base+0x9f0>
   28900:	b	284a8 <__flatcc_fb_clear_parser@@Base+0x5c8>
   28904:	cmp	r3, #4
   28908:	bne	28978 <__flatcc_fb_clear_parser@@Base+0xa98>
   2890c:	ldrd	r0, [sp, #24]
   28910:	ldrd	r2, [sp, #8]
   28914:	cmp	r0, r2
   28918:	sbcs	r3, r1, r3
   2891c:	bge	288b4 <__flatcc_fb_clear_parser@@Base+0x9d4>
   28920:	ldm	r7, {r0, r1, r2, r3}
   28924:	stm	r9, {r0, r1, r2, r3}
   28928:	mov	r2, #1
   2892c:	add	r1, r4, #48	; 0x30
   28930:	add	r0, r6, #72	; 0x48
   28934:	bl	2f45c <fb_value_set_insert_item@@Base>
   28938:	cmp	r0, #0
   2893c:	beq	289a4 <__flatcc_fb_clear_parser@@Base+0xac4>
   28940:	cmp	r8, #4
   28944:	bne	28998 <__flatcc_fb_clear_parser@@Base+0xab8>
   28948:	ldr	r2, [pc, #208]	; 28a20 <__flatcc_fb_clear_parser@@Base+0xb40>
   2894c:	b	28960 <__flatcc_fb_clear_parser@@Base+0xa80>
   28950:	ldrd	r2, [sp, #24]
   28954:	orrs	r3, r2, r3
   28958:	ldreq	r2, [pc, #196]	; 28a24 <__flatcc_fb_clear_parser@@Base+0xb44>
   2895c:	bne	288bc <__flatcc_fb_clear_parser@@Base+0x9dc>
   28960:	ldr	r1, [r4, #4]
   28964:	mov	r0, r5
   28968:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2896c:	mov	r3, #1
   28970:	strh	r3, [r4, #56]	; 0x38
   28974:	b	284a8 <__flatcc_fb_clear_parser@@Base+0x5c8>
   28978:	cmp	r3, #6
   2897c:	bne	28920 <__flatcc_fb_clear_parser@@Base+0xa40>
   28980:	ldrb	r2, [sp, #8]
   28984:	ldrb	r3, [sp, #24]
   28988:	cmp	r2, r3
   2898c:	bhi	28920 <__flatcc_fb_clear_parser@@Base+0xa40>
   28990:	ldr	r2, [pc, #144]	; 28a28 <__flatcc_fb_clear_parser@@Base+0xb48>
   28994:	b	28960 <__flatcc_fb_clear_parser@@Base+0xa80>
   28998:	ldrh	r3, [r4, #10]
   2899c:	orr	r3, r3, #4
   289a0:	strh	r3, [r4, #10]
   289a4:	ldr	r3, [r4, #64]	; 0x40
   289a8:	cmp	r3, #0
   289ac:	beq	28630 <__flatcc_fb_clear_parser@@Base+0x750>
   289b0:	ldr	r2, [pc, #116]	; 28a2c <__flatcc_fb_clear_parser@@Base+0xb4c>
   289b4:	ldr	r1, [r4, #4]
   289b8:	mov	r0, r5
   289bc:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   289c0:	b	28630 <__flatcc_fb_clear_parser@@Base+0x750>
   289c4:	andeq	r8, r4, r6, ror #26
   289c8:	andeq	r0, r0, sp, asr #9
   289cc:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   289d0:	andeq	r9, r4, r4
   289d4:	andeq	r9, r4, r2, lsr #32
   289d8:	andeq	r8, r4, ip, lsl sp
   289dc:	andeq	r9, r4, r8, lsr r0
   289e0:	andeq	r9, r4, r9, rrx
   289e4:	andeq	r9, r4, r8, lsr #1
   289e8:	andeq	r9, r4, r6, ror #1
   289ec:	andeq	r9, r4, r3, lsl #2
   289f0:	andeq	r9, r4, lr, lsl r1
   289f4:	andeq	r0, r0, r3, lsr #10
   289f8:	andeq	r9, r4, r7, asr #2
   289fc:	andeq	r9, r4, r8, lsl r2
   28a00:	andeq	r9, r4, sp, ror r2
   28a04:	andeq	r9, r4, sp, asr r1
   28a08:	andeq	r9, r4, r4, lsr #3
   28a0c:	ldrdeq	r9, [r4], -r2
   28a10:	andeq	r9, r4, r5, lsr r2
   28a14:	andeq	r9, r4, r0, asr r2
   28a18:			; <UNDEFINED> instruction: 0x000492b8
   28a1c:	andeq	r9, r4, ip, lsr #6
   28a20:	muleq	r4, r3, r3
   28a24:	andeq	r9, r4, fp, ror #5
   28a28:	andeq	r9, r4, r3, asr r3
   28a2c:	ldrdeq	r9, [r4], -sp
   28a30:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a34:	ldrh	r7, [r1, #8]
   28a38:	cmp	r7, #1
   28a3c:	beq	28a54 <__flatcc_fb_clear_parser@@Base+0xb74>
   28a40:	ldr	r3, [pc, #908]	; 28dd4 <__flatcc_fb_clear_parser@@Base+0xef4>
   28a44:	ldr	r2, [pc, #908]	; 28dd8 <__flatcc_fb_clear_parser@@Base+0xef8>
   28a48:	ldr	r1, [pc, #908]	; 28ddc <__flatcc_fb_clear_parser@@Base+0xefc>
   28a4c:	ldr	r0, [pc, #908]	; 28de0 <__flatcc_fb_clear_parser@@Base+0xf00>
   28a50:	bl	141a4 <__assert_fail@plt>
   28a54:	ldrh	r3, [r1, #10]
   28a58:	mov	r5, r0
   28a5c:	mov	r6, r1
   28a60:	ands	r0, r3, #1
   28a64:	ldrne	r3, [pc, #872]	; 28dd4 <__flatcc_fb_clear_parser@@Base+0xef4>
   28a68:	movne	r2, #504	; 0x1f8
   28a6c:	ldrne	r1, [pc, #872]	; 28ddc <__flatcc_fb_clear_parser@@Base+0xefc>
   28a70:	ldrne	r0, [pc, #876]	; 28de4 <__flatcc_fb_clear_parser@@Base+0xf04>
   28a74:	bne	28a50 <__flatcc_fb_clear_parser@@Base+0xb70>
   28a78:	tst	r3, #2
   28a7c:	bne	28b70 <__flatcc_fb_clear_parser@@Base+0xc90>
   28a80:	ldr	r2, [r1, #120]	; 0x78
   28a84:	cmp	r2, #0
   28a88:	ldrne	r3, [pc, #836]	; 28dd4 <__flatcc_fb_clear_parser@@Base+0xef4>
   28a8c:	movne	r2, #508	; 0x1fc
   28a90:	ldrne	r1, [pc, #836]	; 28ddc <__flatcc_fb_clear_parser@@Base+0xefc>
   28a94:	ldrne	r0, [pc, #844]	; 28de8 <__flatcc_fb_clear_parser@@Base+0xf08>
   28a98:	bne	28a50 <__flatcc_fb_clear_parser@@Base+0xb70>
   28a9c:	ldr	r4, [r1, #20]
   28aa0:	ldr	sl, [pc, #836]	; 28dec <__flatcc_fb_clear_parser@@Base+0xf0c>
   28aa4:	mov	fp, #0
   28aa8:	orr	r3, r3, #1
   28aac:	strh	r3, [r1, #10]
   28ab0:	cmp	r4, #0
   28ab4:	bne	28b2c <__flatcc_fb_clear_parser@@Base+0xc4c>
   28ab8:	ldrh	r3, [r6, #104]	; 0x68
   28abc:	cmp	r3, #0
   28ac0:	beq	28adc <__flatcc_fb_clear_parser@@Base+0xbfc>
   28ac4:	cmp	r7, r3
   28ac8:	bls	28ae0 <__flatcc_fb_clear_parser@@Base+0xc00>
   28acc:	ldr	r2, [pc, #796]	; 28df0 <__flatcc_fb_clear_parser@@Base+0xf10>
   28ad0:	ldr	r1, [r6, #4]
   28ad4:	mov	r0, r5
   28ad8:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28adc:	strh	r7, [r6, #104]	; 0x68
   28ae0:	ldrh	r0, [r6, #104]	; 0x68
   28ae4:	mov	r1, #0
   28ae8:	ldrd	r2, [r6, #112]	; 0x70
   28aec:	subs	r8, r0, #1
   28af0:	sbc	r9, r1, #0
   28af4:	cmp	r9, #0
   28af8:	cmpeq	r8, #255	; 0xff
   28afc:	bhi	28c1c <__flatcc_fb_clear_parser@@Base+0xd3c>
   28b00:	mov	r8, #1
   28b04:	mov	r9, #0
   28b08:	cmp	r1, r9
   28b0c:	cmpeq	r0, r8
   28b10:	beq	28d8c <__flatcc_fb_clear_parser@@Base+0xeac>
   28b14:	adds	r8, r8, r8
   28b18:	adc	r9, r9, r9
   28b1c:	cmp	r1, r9
   28b20:	cmpeq	r0, r8
   28b24:	bcs	28b08 <__flatcc_fb_clear_parser@@Base+0xc28>
   28b28:	b	28c1c <__flatcc_fb_clear_parser@@Base+0xd3c>
   28b2c:	ldr	r3, [r5, #116]	; 0x74
   28b30:	cmp	r3, #99	; 0x63
   28b34:	ble	28b4c <__flatcc_fb_clear_parser@@Base+0xc6c>
   28b38:	ldr	r2, [pc, #692]	; 28df4 <__flatcc_fb_clear_parser@@Base+0xf14>
   28b3c:	mov	r1, #0
   28b40:	mov	r0, r5
   28b44:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28b48:	b	28b6c <__flatcc_fb_clear_parser@@Base+0xc8c>
   28b4c:	ldrh	r3, [r4, #24]
   28b50:	cmp	r3, #8
   28b54:	beq	28b78 <__flatcc_fb_clear_parser@@Base+0xc98>
   28b58:	cmp	r3, #14
   28b5c:	beq	28c20 <__flatcc_fb_clear_parser@@Base+0xd40>
   28b60:	cmp	r3, #1
   28b64:	ldrne	r2, [pc, #652]	; 28df8 <__flatcc_fb_clear_parser@@Base+0xf18>
   28b68:	bne	28cd4 <__flatcc_fb_clear_parser@@Base+0xdf4>
   28b6c:	mvn	r0, #0
   28b70:	add	sp, sp, #12
   28b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28b78:	ldr	r3, [r4, #16]
   28b7c:	mov	r1, #0
   28b80:	ldr	r2, [r3, #16]
   28b84:	add	r2, r2, #996	; 0x3e4
   28b88:	add	r2, r2, #3
   28b8c:	cmp	r2, #27
   28b90:	addls	r2, sl, r2
   28b94:	movhi	r2, #0
   28b98:	ldrbls	r2, [r2, #87]	; 0x57
   28b9c:	str	r2, [r4, #16]
   28ba0:	add	r2, sl, r2, lsl #2
   28ba4:	ldr	r2, [r2, #116]	; 0x74
   28ba8:	cmp	r2, #0
   28bac:	mov	r0, r2
   28bb0:	bne	28bc8 <__flatcc_fb_clear_parser@@Base+0xce8>
   28bb4:	ldr	r2, [pc, #572]	; 28df8 <__flatcc_fb_clear_parser@@Base+0xf18>
   28bb8:	ldr	r1, [r4, #4]
   28bbc:	mov	r0, r5
   28bc0:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   28bc4:	b	28b6c <__flatcc_fb_clear_parser@@Base+0xc8c>
   28bc8:	strh	r2, [r4, #74]	; 0x4a
   28bcc:	strd	r0, [r4, #88]	; 0x58
   28bd0:	ldrd	r2, [r6, #112]	; 0x70
   28bd4:	ldrh	r0, [r4, #74]	; 0x4a
   28bd8:	mov	r1, #0
   28bdc:	strd	r2, [sp]
   28be0:	subs	r2, r0, #1
   28be4:	sbc	r3, r1, #0
   28be8:	cmp	r3, #0
   28bec:	cmpeq	r2, #255	; 0xff
   28bf0:	bhi	28c1c <__flatcc_fb_clear_parser@@Base+0xd3c>
   28bf4:	mov	r2, #1
   28bf8:	mov	r3, fp
   28bfc:	cmp	r1, r3
   28c00:	cmpeq	r0, r2
   28c04:	beq	28d34 <__flatcc_fb_clear_parser@@Base+0xe54>
   28c08:	adds	r2, r2, r2
   28c0c:	adc	r3, r3, r3
   28c10:	cmp	r1, r3
   28c14:	cmpeq	r0, r2
   28c18:	bcs	28bfc <__flatcc_fb_clear_parser@@Base+0xd1c>
   28c1c:	bl	141f8 <__assert_fail@plt+0x54>
   28c20:	ldr	r8, [r4, #16]
   28c24:	ldrh	r3, [r8, #8]
   28c28:	cmp	r3, #3
   28c2c:	bne	28c48 <__flatcc_fb_clear_parser@@Base+0xd68>
   28c30:	ldr	r3, [r8, #112]	; 0x70
   28c34:	ldr	r2, [r8, #116]	; 0x74
   28c38:	strh	r3, [r4, #74]	; 0x4a
   28c3c:	str	r3, [r4, #88]	; 0x58
   28c40:	str	r2, [r4, #92]	; 0x5c
   28c44:	b	28bd0 <__flatcc_fb_clear_parser@@Base+0xcf0>
   28c48:	cmp	r3, #1
   28c4c:	bne	28cd0 <__flatcc_fb_clear_parser@@Base+0xdf0>
   28c50:	ldrh	r3, [r8, #10]
   28c54:	tst	r3, #1
   28c58:	ldrne	r3, [r8, #4]
   28c5c:	ldrne	r2, [pc, #408]	; 28dfc <__flatcc_fb_clear_parser@@Base+0xf1c>
   28c60:	bne	28bb8 <__flatcc_fb_clear_parser@@Base+0xcd8>
   28c64:	tst	r3, #2
   28c68:	beq	28c80 <__flatcc_fb_clear_parser@@Base+0xda0>
   28c6c:	ldrh	r3, [r8, #104]	; 0x68
   28c70:	strh	r3, [r4, #74]	; 0x4a
   28c74:	ldrd	r2, [r8, #112]	; 0x70
   28c78:	strd	r2, [r4, #88]	; 0x58
   28c7c:	b	28bd0 <__flatcc_fb_clear_parser@@Base+0xcf0>
   28c80:	ldr	r3, [r5, #188]	; 0xbc
   28c84:	cmp	r3, #0
   28c88:	beq	28ca0 <__flatcc_fb_clear_parser@@Base+0xdc0>
   28c8c:	ldr	r3, [r8, #4]
   28c90:	ldr	r2, [pc, #360]	; 28e00 <__flatcc_fb_clear_parser@@Base+0xf20>
   28c94:	ldr	r1, [r4, #4]
   28c98:	mov	r0, r5
   28c9c:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   28ca0:	ldr	r3, [r5, #116]	; 0x74
   28ca4:	mov	r1, r8
   28ca8:	add	r3, r3, #1
   28cac:	str	r3, [r5, #116]	; 0x74
   28cb0:	mov	r0, r5
   28cb4:	bl	28a30 <__flatcc_fb_clear_parser@@Base+0xb50>
   28cb8:	ldr	r3, [r5, #116]	; 0x74
   28cbc:	sub	r3, r3, #1
   28cc0:	str	r3, [r5, #116]	; 0x74
   28cc4:	cmp	r0, #0
   28cc8:	beq	28c6c <__flatcc_fb_clear_parser@@Base+0xd8c>
   28ccc:	b	28b70 <__flatcc_fb_clear_parser@@Base+0xc90>
   28cd0:	ldr	r2, [pc, #300]	; 28e04 <__flatcc_fb_clear_parser@@Base+0xf24>
   28cd4:	ldr	r1, [r4, #4]
   28cd8:	b	28b40 <__flatcc_fb_clear_parser@@Base+0xc60>
   28cdc:	mov	r3, #0
   28ce0:	ldrd	r0, [sp]
   28ce4:	ldr	r2, [pc, #284]	; 28e08 <__flatcc_fb_clear_parser@@Base+0xf28>
   28ce8:	cmp	r9, r3
   28cec:	cmpeq	r8, r2
   28cf0:	movhi	r3, #1
   28cf4:	movls	r3, #0
   28cf8:	cmp	r1, r9
   28cfc:	cmpeq	r0, r8
   28d00:	orrhi	r3, r3, #1
   28d04:	cmp	r3, #0
   28d08:	beq	28d1c <__flatcc_fb_clear_parser@@Base+0xe3c>
   28d0c:	ldr	r2, [pc, #248]	; 28e0c <__flatcc_fb_clear_parser@@Base+0xf2c>
   28d10:	ldr	r1, [r4, #4]
   28d14:	mov	r0, r5
   28d18:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   28d1c:	ldrh	r3, [r4, #74]	; 0x4a
   28d20:	strd	r8, [r6, #112]	; 0x70
   28d24:	ldr	r4, [r4]
   28d28:	cmp	r3, r7
   28d2c:	movcs	r7, r3
   28d30:	b	28ab0 <__flatcc_fb_clear_parser@@Base+0xbd0>
   28d34:	ldrd	r2, [sp]
   28d38:	subs	r2, r2, #1
   28d3c:	sbc	r3, r3, #0
   28d40:	adds	r2, r2, r0
   28d44:	adc	r3, r3, r1
   28d48:	rsbs	r0, r0, #0
   28d4c:	rsc	r1, r1, #0
   28d50:	and	r2, r2, r0
   28d54:	and	r3, r3, r1
   28d58:	ldrd	r0, [sp]
   28d5c:	strd	r2, [r4, #80]	; 0x50
   28d60:	cmp	r1, r3
   28d64:	cmpeq	r0, r2
   28d68:	bhi	28d84 <__flatcc_fb_clear_parser@@Base+0xea4>
   28d6c:	ldrd	r8, [r4, #88]	; 0x58
   28d70:	adds	r8, r8, r2
   28d74:	adc	r9, r9, r3
   28d78:	cmp	r9, r3
   28d7c:	cmpeq	r8, r2
   28d80:	bcs	28cdc <__flatcc_fb_clear_parser@@Base+0xdfc>
   28d84:	ldr	r2, [pc, #132]	; 28e10 <__flatcc_fb_clear_parser@@Base+0xf30>
   28d88:	b	28cd4 <__flatcc_fb_clear_parser@@Base+0xdf4>
   28d8c:	subs	r2, r2, #1
   28d90:	sbc	r3, r3, #0
   28d94:	adds	r2, r2, r0
   28d98:	adc	r3, r3, r1
   28d9c:	rsbs	r0, r0, #0
   28da0:	rsc	r1, r1, #0
   28da4:	and	r2, r2, r0
   28da8:	and	r3, r3, r1
   28dac:	mov	r0, #0
   28db0:	strd	r2, [r6, #112]	; 0x70
   28db4:	ldrh	r3, [r6, #10]
   28db8:	bic	r3, r3, #1
   28dbc:	orr	r3, r3, #2
   28dc0:	strh	r3, [r6, #10]
   28dc4:	ldr	r3, [r5, #396]	; 0x18c
   28dc8:	str	r3, [r6, #120]	; 0x78
   28dcc:	str	r6, [r5, #396]	; 0x18c
   28dd0:	b	28b70 <__flatcc_fb_clear_parser@@Base+0xc90>
   28dd4:	andeq	r8, r4, r0, asr #27
   28dd8:	strdeq	r0, [r0], -r6
   28ddc:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   28de0:	andeq	r1, r3, sp, asr #23
   28de4:	andeq	r9, r4, r0, lsl #8
   28de8:	andeq	r9, r4, r7, lsr #8
   28dec:	andeq	r8, r4, ip, lsl sp
   28df0:	andeq	r9, r4, sp, asr r5
   28df4:	andeq	r9, r4, r2, lsr r4
   28df8:	andeq	r9, r4, fp, ror r4
   28dfc:	andeq	r9, r4, fp, lsl #9
   28e00:	andeq	r9, r4, fp, lsr #9
   28e04:	strdeq	r9, [r4], -r2
   28e08:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   28e0c:	andeq	r9, r4, sl, lsr #10
   28e10:	andeq	r9, r4, r5, lsl r5

00028e14 <__flatcc_fb_build_schema@@Base>:
   28e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28e18:	add	r3, r0, #352	; 0x160
   28e1c:	sub	sp, sp, #204	; 0xcc
   28e20:	mov	fp, r0
   28e24:	mov	r1, r3
   28e28:	add	r0, r0, #524	; 0x20c
   28e2c:	str	r3, [sp, #36]	; 0x24
   28e30:	bl	233f8 <ptr_set_find_item@@Base>
   28e34:	cmp	r0, #0
   28e38:	bne	28e50 <__flatcc_fb_build_schema@@Base+0x3c>
   28e3c:	ldr	r3, [pc, #3944]	; 29dac <__flatcc_fb_build_schema@@Base+0xf98>
   28e40:	ldr	r2, [pc, #3944]	; 29db0 <__flatcc_fb_build_schema@@Base+0xf9c>
   28e44:	ldr	r1, [pc, #3944]	; 29db4 <__flatcc_fb_build_schema@@Base+0xfa0>
   28e48:	ldr	r0, [pc, #3944]	; 29db8 <__flatcc_fb_build_schema@@Base+0xfa4>
   28e4c:	bl	141a4 <__assert_fail@plt>
   28e50:	ldr	r5, [fp, #392]	; 0x188
   28e54:	ldr	r4, [pc, #3936]	; 29dbc <__flatcc_fb_build_schema@@Base+0xfa8>
   28e58:	ldr	r6, [pc, #3936]	; 29dc0 <__flatcc_fb_build_schema@@Base+0xfac>
   28e5c:	cmp	r5, #0
   28e60:	bne	28ec8 <__flatcc_fb_build_schema@@Base+0xb4>
   28e64:	ldr	r4, [fp, #356]	; 0x164
   28e68:	ldr	r7, [pc, #3924]	; 29dc4 <__flatcc_fb_build_schema@@Base+0xfb0>
   28e6c:	mov	r6, #1
   28e70:	cmp	r4, #0
   28e74:	bne	28fa0 <__flatcc_fb_build_schema@@Base+0x18c>
   28e78:	ldr	r6, [pc, #3912]	; 29dc8 <__flatcc_fb_build_schema@@Base+0xfb4>
   28e7c:	mov	r5, r4
   28e80:	mov	r7, #2
   28e84:	mov	r8, r4
   28e88:	ldr	r4, [fp, #52]	; 0x34
   28e8c:	ldr	r3, [fp, #44]	; 0x2c
   28e90:	add	r2, r4, #32
   28e94:	cmp	r2, r3
   28e98:	bls	29004 <__flatcc_fb_build_schema@@Base+0x1f0>
   28e9c:	mov	r1, #1
   28ea0:	mov	r0, #65536	; 0x10000
   28ea4:	bl	13fe8 <calloc@plt>
   28ea8:	cmp	r0, #0
   28eac:	bne	28fe8 <__flatcc_fb_build_schema@@Base+0x1d4>
   28eb0:	ldr	r3, [pc, #3860]	; 29dcc <__flatcc_fb_build_schema@@Base+0xfb8>
   28eb4:	ldr	r0, [pc, #3860]	; 29dd0 <__flatcc_fb_build_schema@@Base+0xfbc>
   28eb8:	ldr	r1, [r3]
   28ebc:	bl	14180 <fputs@plt>
   28ec0:	mov	r0, #1
   28ec4:	bl	140c0 <exit@plt>
   28ec8:	ldrh	r3, [r5, #8]
   28ecc:	cmp	r3, #4
   28ed0:	bhi	28f78 <__flatcc_fb_build_schema@@Base+0x164>
   28ed4:	ldr	r0, [r5, #12]
   28ed8:	cmp	r0, #0
   28edc:	ldrne	r3, [r0]
   28ee0:	ldrne	r2, [pc, #3800]	; 29dc0 <__flatcc_fb_build_schema@@Base+0xfac>
   28ee4:	bne	28f10 <__flatcc_fb_build_schema@@Base+0xfc>
   28ee8:	ldr	r2, [pc, #3792]	; 29dc0 <__flatcc_fb_build_schema@@Base+0xfac>
   28eec:	b	28f18 <__flatcc_fb_build_schema@@Base+0x104>
   28ef0:	ldr	ip, [r3, #4]
   28ef4:	ldm	ip, {r1, ip}
   28ef8:	add	ip, r1, ip
   28efc:	cmp	r1, ip
   28f00:	bne	28f80 <__flatcc_fb_build_schema@@Base+0x16c>
   28f04:	eor	r2, r2, #46	; 0x2e
   28f08:	ldr	r3, [r3]
   28f0c:	mul	r2, r4, r2
   28f10:	cmp	r3, #0
   28f14:	bne	28ef0 <__flatcc_fb_build_schema@@Base+0xdc>
   28f18:	ldr	r1, [r5, #4]
   28f1c:	ldr	r3, [r1]
   28f20:	ldr	r1, [r1, #4]
   28f24:	add	r1, r3, r1
   28f28:	cmp	r3, r1
   28f2c:	bne	28f90 <__flatcc_fb_build_schema@@Base+0x17c>
   28f30:	cmp	r2, #0
   28f34:	ldr	r3, [sp, #36]	; 0x24
   28f38:	moveq	r2, r6
   28f3c:	cmp	r0, #0
   28f40:	str	r2, [r5, #88]	; 0x58
   28f44:	str	r3, [r5, #16]
   28f48:	beq	28f78 <__flatcc_fb_build_schema@@Base+0x164>
   28f4c:	mov	r2, #1
   28f50:	mov	r1, r5
   28f54:	add	r0, r0, #4
   28f58:	bl	238f4 <fb_symbol_table_insert_item@@Base>
   28f5c:	cmp	r0, #0
   28f60:	beq	28f78 <__flatcc_fb_build_schema@@Base+0x164>
   28f64:	ldr	r3, [r0, #4]
   28f68:	ldr	r2, [pc, #3684]	; 29dd4 <__flatcc_fb_build_schema@@Base+0xfc0>
   28f6c:	ldr	r1, [r5, #4]
   28f70:	mov	r0, fp
   28f74:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   28f78:	ldr	r5, [r5]
   28f7c:	b	28e5c <__flatcc_fb_build_schema@@Base+0x48>
   28f80:	ldrb	lr, [r1], #1
   28f84:	eor	r2, r2, lr
   28f88:	mul	r2, r4, r2
   28f8c:	b	28efc <__flatcc_fb_build_schema@@Base+0xe8>
   28f90:	ldrb	ip, [r3], #1
   28f94:	eor	r2, r2, ip
   28f98:	mul	r2, r4, r2
   28f9c:	b	28f28 <__flatcc_fb_build_schema@@Base+0x114>
   28fa0:	ldr	r0, [fp, #412]	; 0x19c
   28fa4:	mov	r2, r6
   28fa8:	mov	r1, r4
   28fac:	add	r0, r0, #16
   28fb0:	bl	2eee4 <fb_name_table_insert_item@@Base>
   28fb4:	cmp	r0, #0
   28fb8:	beq	28fe0 <__flatcc_fb_build_schema@@Base+0x1cc>
   28fbc:	ldr	r3, [r4, #12]
   28fc0:	mov	r2, r7
   28fc4:	str	r3, [sp, #4]
   28fc8:	ldr	r3, [r4, #8]
   28fcc:	mov	r1, #0
   28fd0:	str	r3, [sp]
   28fd4:	mov	r0, fp
   28fd8:	mov	r3, r5
   28fdc:	bl	24ea4 <__flatcc_error_report@@Base>
   28fe0:	ldr	r4, [r4]
   28fe4:	b	28e70 <__flatcc_fb_build_schema@@Base+0x5c>
   28fe8:	ldr	r3, [fp, #48]	; 0x30
   28fec:	add	r4, r0, #16
   28ff0:	str	r3, [r0]
   28ff4:	str	r0, [fp, #48]	; 0x30
   28ff8:	add	r0, r0, #65536	; 0x10000
   28ffc:	str	r4, [fp, #52]	; 0x34
   29000:	str	r0, [fp, #44]	; 0x2c
   29004:	ldr	r3, [fp, #52]	; 0x34
   29008:	ldr	r0, [r6, r5, lsl #2]
   2900c:	add	r3, r3, #32
   29010:	str	r3, [fp, #52]	; 0x34
   29014:	str	r5, [r4, #24]
   29018:	str	r0, [r4, #8]
   2901c:	bl	140cc <strlen@plt>
   29020:	strh	r7, [r4, #16]
   29024:	str	r8, [r4]
   29028:	mov	r2, #1
   2902c:	mov	r1, r4
   29030:	str	r0, [r4, #12]
   29034:	ldr	r0, [fp, #412]	; 0x19c
   29038:	add	r0, r0, #16
   2903c:	bl	2eee4 <fb_name_table_insert_item@@Base>
   29040:	cmp	r0, #0
   29044:	strne	r5, [r0, #24]
   29048:	add	r5, r5, #1
   2904c:	cmp	r5, #12
   29050:	bne	28e88 <__flatcc_fb_build_schema@@Base+0x74>
   29054:	ldr	r3, [fp, #184]	; 0xb8
   29058:	cmp	r3, #0
   2905c:	beq	290ec <__flatcc_fb_build_schema@@Base+0x2d8>
   29060:	ldr	r5, [fp, #392]	; 0x188
   29064:	ldr	r7, [pc, #3436]	; 29dd8 <__flatcc_fb_build_schema@@Base+0xfc4>
   29068:	mov	r8, #1
   2906c:	mov	r9, #0
   29070:	cmp	r5, #0
   29074:	bne	29124 <__flatcc_fb_build_schema@@Base+0x310>
   29078:	ldr	r4, [fp, #392]	; 0x188
   2907c:	cmp	r4, #0
   29080:	bne	29414 <__flatcc_fb_build_schema@@Base+0x600>
   29084:	ldr	r6, [fp, #392]	; 0x188
   29088:	cmp	r6, #0
   2908c:	bne	29448 <__flatcc_fb_build_schema@@Base+0x634>
   29090:	ldr	r3, [fp, #396]	; 0x18c
   29094:	cmp	r3, #0
   29098:	bne	2a31c <__flatcc_fb_build_schema@@Base+0x1508>
   2909c:	ldr	r5, [fp, #392]	; 0x188
   290a0:	str	r6, [fp, #396]	; 0x18c
   290a4:	add	r6, sp, #84	; 0x54
   290a8:	cmp	r5, #0
   290ac:	bne	2a330 <__flatcc_fb_build_schema@@Base+0x151c>
   290b0:	ldr	r2, [fp, #400]	; 0x190
   290b4:	cmp	r2, #0
   290b8:	bne	2a510 <__flatcc_fb_build_schema@@Base+0x16fc>
   290bc:	ldr	r3, [fp, #208]	; 0xd0
   290c0:	cmp	r3, #0
   290c4:	beq	290d8 <__flatcc_fb_build_schema@@Base+0x2c4>
   290c8:	ldr	r2, [pc, #3340]	; 29ddc <__flatcc_fb_build_schema@@Base+0xfc8>
   290cc:	mov	r1, r5
   290d0:	mov	r0, fp
   290d4:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   290d8:	ldr	r0, [fp, #108]	; 0x6c
   290dc:	clz	r3, r0
   290e0:	lsr	r3, r3, #5
   290e4:	str	r3, [fp, #120]	; 0x78
   290e8:	b	2940c <__flatcc_fb_build_schema@@Base+0x5f8>
   290ec:	ldr	r4, [fp, #392]	; 0x188
   290f0:	mov	r5, #1
   290f4:	cmp	r4, #0
   290f8:	beq	29060 <__flatcc_fb_build_schema@@Base+0x24c>
   290fc:	ldrh	r3, [r4, #8]
   29100:	cmp	r3, #3
   29104:	bne	2911c <__flatcc_fb_build_schema@@Base+0x308>
   29108:	mov	r1, r4
   2910c:	mov	r0, fp
   29110:	bl	28450 <__flatcc_fb_clear_parser@@Base+0x570>
   29114:	cmp	r0, #0
   29118:	strhne	r5, [r4, #48]	; 0x30
   2911c:	ldr	r4, [r4]
   29120:	b	290f4 <__flatcc_fb_build_schema@@Base+0x2e0>
   29124:	ldrh	r3, [r5, #8]
   29128:	cmp	r3, #4
   2912c:	ldrls	pc, [pc, r3, lsl #2]
   29130:	b	293f8 <__flatcc_fb_build_schema@@Base+0x5e4>
   29134:	strdeq	r9, [r2], -r0
   29138:	andeq	r9, r2, r8, asr #2
   2913c:	strdeq	r9, [r2], -r0
   29140:	ldrdeq	r9, [r2], -r0
   29144:	ldrdeq	r9, [r2], -ip
   29148:	ldrh	r3, [r5, #48]	; 0x30
   2914c:	cmp	r3, #0
   29150:	ldrne	r2, [pc, #3208]	; 29de0 <__flatcc_fb_build_schema@@Base+0xfcc>
   29154:	bne	2920c <__flatcc_fb_build_schema@@Base+0x3f8>
   29158:	add	r3, sp, #100	; 0x64
   2915c:	mov	r2, #16
   29160:	ldr	r1, [r5, #28]
   29164:	mov	r0, fp
   29168:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   2916c:	ldr	r3, [sp, #116]	; 0x74
   29170:	cmp	r3, #0
   29174:	strh	r0, [r5, #92]	; 0x5c
   29178:	beq	291cc <__flatcc_fb_build_schema@@Base+0x3b8>
   2917c:	ldrd	r0, [r3, #8]
   29180:	subs	r2, r0, #1
   29184:	sbc	r3, r1, #0
   29188:	cmp	r3, #0
   2918c:	cmpeq	r2, #255	; 0xff
   29190:	bhi	291bc <__flatcc_fb_build_schema@@Base+0x3a8>
   29194:	mov	r2, r8
   29198:	mov	r3, r9
   2919c:	cmp	r1, r3
   291a0:	cmpeq	r0, r2
   291a4:	beq	2a580 <__flatcc_fb_build_schema@@Base+0x176c>
   291a8:	adds	r2, r2, r2
   291ac:	adc	r3, r3, r3
   291b0:	cmp	r1, r3
   291b4:	cmpeq	r0, r2
   291b8:	bcs	2919c <__flatcc_fb_build_schema@@Base+0x388>
   291bc:	ldr	r2, [pc, #3104]	; 29de4 <__flatcc_fb_build_schema@@Base+0xfd0>
   291c0:	ldr	r1, [r5, #4]
   291c4:	mov	r0, fp
   291c8:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   291cc:	ldr	r4, [r5, #20]
   291d0:	mov	r6, #0
   291d4:	add	sl, r5, #56	; 0x38
   291d8:	cmp	r4, #0
   291dc:	bne	29214 <__flatcc_fb_build_schema@@Base+0x400>
   291e0:	cmp	r6, #0
   291e4:	beq	293f0 <__flatcc_fb_build_schema@@Base+0x5dc>
   291e8:	ldrh	r3, [r5, #10]
   291ec:	cmp	r6, #1
   291f0:	orr	r3, r3, #8
   291f4:	strh	r3, [r5, #10]
   291f8:	beq	293f0 <__flatcc_fb_build_schema@@Base+0x5dc>
   291fc:	ldr	r3, [fp, #156]	; 0x9c
   29200:	cmp	r3, #0
   29204:	bne	293f0 <__flatcc_fb_build_schema@@Base+0x5dc>
   29208:	ldr	r2, [pc, #3252]	; 29ec4 <__flatcc_fb_build_schema@@Base+0x10b0>
   2920c:	ldr	r1, [r5, #4]
   29210:	b	2925c <__flatcc_fb_build_schema@@Base+0x448>
   29214:	mov	r2, #1
   29218:	mov	r1, r4
   2921c:	mov	r0, sl
   29220:	bl	238f4 <fb_symbol_table_insert_item@@Base>
   29224:	cmp	r0, #0
   29228:	beq	29248 <__flatcc_fb_build_schema@@Base+0x434>
   2922c:	ldr	r3, [r0, #4]
   29230:	ldr	r2, [pc, #2992]	; 29de8 <__flatcc_fb_build_schema@@Base+0xfd4>
   29234:	ldr	r1, [r4, #4]
   29238:	mov	r0, fp
   2923c:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   29240:	ldr	r4, [r4]
   29244:	b	291d8 <__flatcc_fb_build_schema@@Base+0x3c4>
   29248:	ldrh	r3, [r4, #8]
   2924c:	cmp	r3, #5
   29250:	beq	29268 <__flatcc_fb_build_schema@@Base+0x454>
   29254:	ldr	r2, [pc, #2960]	; 29dec <__flatcc_fb_build_schema@@Base+0xfd8>
   29258:	ldr	r1, [r4, #4]
   2925c:	mov	r0, fp
   29260:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29264:	b	2935c <__flatcc_fb_build_schema@@Base+0x548>
   29268:	ldr	r2, [fp, #172]	; 0xac
   2926c:	ldr	r3, [fp, #168]	; 0xa8
   29270:	cmp	r2, #0
   29274:	movne	r2, #128	; 0x80
   29278:	moveq	r2, #0
   2927c:	cmp	r3, #0
   29280:	orrne	r2, r2, #4
   29284:	add	r3, sp, #100	; 0x64
   29288:	ldr	r1, [r4, #64]	; 0x40
   2928c:	mov	r0, fp
   29290:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   29294:	ldrh	r3, [r4, #24]
   29298:	cmp	r3, #8
   2929c:	strh	r0, [r4, #72]	; 0x48
   292a0:	beq	2939c <__flatcc_fb_build_schema@@Base+0x588>
   292a4:	cmp	r3, #12
   292a8:	bne	293c8 <__flatcc_fb_build_schema@@Base+0x5b4>
   292ac:	mov	r3, #0
   292b0:	ldr	r2, [r4, #16]
   292b4:	ldr	r1, [r5, #12]
   292b8:	mov	r0, fp
   292bc:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   292c0:	cmp	r0, #0
   292c4:	bne	292e8 <__flatcc_fb_build_schema@@Base+0x4d4>
   292c8:	mov	r3, r4
   292cc:	ldr	r2, [pc, #2844]	; 29df0 <__flatcc_fb_build_schema@@Base+0xfdc>
   292d0:	ldr	r1, [r4, #16]
   292d4:	mov	r0, fp
   292d8:	bl	25ca8 <error_ref_sym@@Base>
   292dc:	mov	r3, #1
   292e0:	strh	r3, [r4, #24]
   292e4:	b	29240 <__flatcc_fb_build_schema@@Base+0x42c>
   292e8:	mov	r3, #14
   292ec:	str	r0, [r4, #16]
   292f0:	strh	r3, [r4, #24]
   292f4:	ldrh	r3, [r0, #8]
   292f8:	cmp	r3, #1
   292fc:	beq	29374 <__flatcc_fb_build_schema@@Base+0x560>
   29300:	ldr	r2, [fp, #152]	; 0x98
   29304:	cmp	r2, #0
   29308:	beq	29368 <__flatcc_fb_build_schema@@Base+0x554>
   2930c:	cmp	r3, #3
   29310:	beq	2932c <__flatcc_fb_build_schema@@Base+0x518>
   29314:	ldr	r3, [r0, #4]
   29318:	ldr	r2, [pc, #2772]	; 29df4 <__flatcc_fb_build_schema@@Base+0xfe0>
   2931c:	ldr	r1, [r4, #4]
   29320:	mov	r0, fp
   29324:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   29328:	b	29354 <__flatcc_fb_build_schema@@Base+0x540>
   2932c:	ldrh	r3, [r4, #72]	; 0x48
   29330:	tst	r3, #128	; 0x80
   29334:	beq	293a8 <__flatcc_fb_build_schema@@Base+0x594>
   29338:	ldr	r3, [fp, #148]	; 0x94
   2933c:	cmp	r3, #0
   29340:	bne	293a4 <__flatcc_fb_build_schema@@Base+0x590>
   29344:	ldr	r2, [pc, #2732]	; 29df8 <__flatcc_fb_build_schema@@Base+0xfe4>
   29348:	ldr	r1, [r4, #4]
   2934c:	mov	r0, fp
   29350:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29354:	mov	r3, #1
   29358:	strh	r3, [r4, #24]
   2935c:	mov	r3, #1
   29360:	strh	r3, [r5, #48]	; 0x30
   29364:	b	293f0 <__flatcc_fb_build_schema@@Base+0x5dc>
   29368:	ldr	r3, [r0, #4]
   2936c:	ldr	r2, [pc, #2696]	; 29dfc <__flatcc_fb_build_schema@@Base+0xfe8>
   29370:	b	2931c <__flatcc_fb_build_schema@@Base+0x508>
   29374:	ldrh	r2, [r4, #72]	; 0x48
   29378:	tst	r2, #128	; 0x80
   2937c:	beq	293a8 <__flatcc_fb_build_schema@@Base+0x594>
   29380:	ldr	r2, [pc, #2672]	; 29df8 <__flatcc_fb_build_schema@@Base+0xfe4>
   29384:	ldr	r1, [r4, #4]
   29388:	mov	r0, fp
   2938c:	str	r3, [sp, #8]
   29390:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29394:	ldr	r3, [sp, #8]
   29398:	b	29358 <__flatcc_fb_build_schema@@Base+0x544>
   2939c:	tst	r0, #128	; 0x80
   293a0:	beq	293a8 <__flatcc_fb_build_schema@@Base+0x594>
   293a4:	add	r6, r6, #1
   293a8:	ldrh	r3, [r4, #56]	; 0x38
   293ac:	cmp	r3, #0
   293b0:	beq	29240 <__flatcc_fb_build_schema@@Base+0x42c>
   293b4:	mov	r2, r7
   293b8:	ldr	r1, [r4, #4]
   293bc:	mov	r0, fp
   293c0:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   293c4:	b	29240 <__flatcc_fb_build_schema@@Base+0x42c>
   293c8:	ldr	r2, [pc, #2608]	; 29e00 <__flatcc_fb_build_schema@@Base+0xfec>
   293cc:	b	29258 <__flatcc_fb_build_schema@@Base+0x444>
   293d0:	ldr	r3, [fp, #184]	; 0xb8
   293d4:	cmp	r3, #0
   293d8:	beq	293f0 <__flatcc_fb_build_schema@@Base+0x5dc>
   293dc:	mov	r1, r5
   293e0:	mov	r0, fp
   293e4:	bl	28450 <__flatcc_fb_clear_parser@@Base+0x570>
   293e8:	cmp	r0, #0
   293ec:	bne	2935c <__flatcc_fb_build_schema@@Base+0x548>
   293f0:	ldr	r5, [r5]
   293f4:	b	29070 <__flatcc_fb_build_schema@@Base+0x25c>
   293f8:	mov	r0, fp
   293fc:	ldr	r2, [pc, #2560]	; 29e04 <__flatcc_fb_build_schema@@Base+0xff0>
   29400:	ldr	r1, [r5, #4]
   29404:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29408:	mvn	r0, #0
   2940c:	add	sp, sp, #204	; 0xcc
   29410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29414:	ldrh	r5, [r4, #8]
   29418:	cmp	r5, #1
   2941c:	bne	29440 <__flatcc_fb_build_schema@@Base+0x62c>
   29420:	ldrh	r3, [r4, #48]	; 0x30
   29424:	cmp	r3, #1
   29428:	beq	29440 <__flatcc_fb_build_schema@@Base+0x62c>
   2942c:	mov	r1, r4
   29430:	mov	r0, fp
   29434:	bl	28a30 <__flatcc_fb_clear_parser@@Base+0xb50>
   29438:	cmp	r0, #0
   2943c:	strhne	r5, [r4, #48]	; 0x30
   29440:	ldr	r4, [r4]
   29444:	b	2907c <__flatcc_fb_build_schema@@Base+0x268>
   29448:	ldrh	r3, [r6, #8]
   2944c:	cmp	r3, #0
   29450:	beq	29464 <__flatcc_fb_build_schema@@Base+0x650>
   29454:	cmp	r3, #2
   29458:	beq	2a178 <__flatcc_fb_build_schema@@Base+0x1364>
   2945c:	ldr	r6, [r6]
   29460:	b	29088 <__flatcc_fb_build_schema@@Base+0x274>
   29464:	ldrh	r5, [r6, #48]	; 0x30
   29468:	cmp	r5, #1
   2946c:	beq	2945c <__flatcc_fb_build_schema@@Base+0x648>
   29470:	cmp	r5, #0
   29474:	beq	2948c <__flatcc_fb_build_schema@@Base+0x678>
   29478:	ldr	r3, [pc, #2440]	; 29e08 <__flatcc_fb_build_schema@@Base+0xff4>
   2947c:	ldr	r2, [pc, #2440]	; 29e0c <__flatcc_fb_build_schema@@Base+0xff8>
   29480:	ldr	r1, [pc, #2348]	; 29db4 <__flatcc_fb_build_schema@@Base+0xfa0>
   29484:	ldr	r0, [pc, #2436]	; 29e10 <__flatcc_fb_build_schema@@Base+0xffc>
   29488:	b	28e4c <__flatcc_fb_build_schema@@Base+0x38>
   2948c:	add	r3, sp, #52	; 0x34
   29490:	mov	r2, #8
   29494:	ldr	r1, [r6, #28]
   29498:	mov	r0, fp
   2949c:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   294a0:	mov	r2, #0
   294a4:	mov	r3, #0
   294a8:	ldr	r4, [r6, #20]
   294ac:	strd	r2, [sp, #24]
   294b0:	mov	r2, #0
   294b4:	mov	r3, #0
   294b8:	str	r5, [sp, #16]
   294bc:	str	r5, [sp, #32]
   294c0:	str	r5, [sp, #20]
   294c4:	strd	r2, [sp, #8]
   294c8:	strh	r0, [r6, #92]	; 0x5c
   294cc:	cmp	r4, #0
   294d0:	bne	29584 <__flatcc_fb_build_schema@@Base+0x770>
   294d4:	cmp	r5, #0
   294d8:	ldrdeq	r2, [sp, #8]
   294dc:	strdeq	r2, [r6, #96]	; 0x60
   294e0:	ldr	r3, [sp, #20]
   294e4:	eor	r7, r5, #1
   294e8:	ands	r7, r7, r3
   294ec:	beq	2a130 <__flatcc_fb_build_schema@@Base+0x131c>
   294f0:	ldr	r3, [sp, #8]
   294f4:	ldrd	r0, [sp, #8]
   294f8:	ldrd	r4, [sp, #24]
   294fc:	ldr	r2, [sp, #12]
   29500:	orrs	r3, r3, r2
   29504:	movne	r3, #1
   29508:	moveq	r3, #0
   2950c:	cmp	r1, r5
   29510:	cmpeq	r0, r4
   29514:	movhi	r3, #0
   29518:	andls	r3, r3, #1
   2951c:	cmp	r3, #0
   29520:	beq	2a588 <__flatcc_fb_build_schema@@Base+0x1774>
   29524:	ldr	r8, [pc, #2280]	; 29e14 <__flatcc_fb_build_schema@@Base+0x1000>
   29528:	mov	r3, #10
   2952c:	mov	r4, #0
   29530:	mov	r5, #0
   29534:	ldrd	r0, [sp, #24]
   29538:	cmp	r1, r5
   2953c:	cmpeq	r0, r4
   29540:	beq	29574 <__flatcc_fb_build_schema@@Base+0x760>
   29544:	ldr	r2, [sp, #16]
   29548:	add	r2, r2, r4
   2954c:	ldrb	r2, [r2]
   29550:	cmp	r2, #0
   29554:	bne	2a124 <__flatcc_fb_build_schema@@Base+0x1310>
   29558:	cmp	r3, #0
   2955c:	sub	r9, r3, #1
   29560:	bne	2a0fc <__flatcc_fb_build_schema@@Base+0x12e8>
   29564:	ldr	r2, [pc, #2220]	; 29e18 <__flatcc_fb_build_schema@@Base+0x1004>
   29568:	ldr	r1, [r6, #4]
   2956c:	mov	r0, fp
   29570:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29574:	ldr	r3, [sp, #32]
   29578:	cmp	r3, #0
   2957c:	bne	2a140 <__flatcc_fb_build_schema@@Base+0x132c>
   29580:	b	295d4 <__flatcc_fb_build_schema@@Base+0x7c0>
   29584:	mov	r2, #1
   29588:	mov	r1, r4
   2958c:	add	r0, r6, #56	; 0x38
   29590:	bl	238f4 <fb_symbol_table_insert_item@@Base>
   29594:	subs	r7, r0, #0
   29598:	beq	295b8 <__flatcc_fb_build_schema@@Base+0x7a4>
   2959c:	ldr	r3, [r7, #4]
   295a0:	ldr	r2, [pc, #2164]	; 29e1c <__flatcc_fb_build_schema@@Base+0x1008>
   295a4:	ldr	r1, [r4, #4]
   295a8:	mov	r0, fp
   295ac:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   295b0:	ldr	r4, [r4]
   295b4:	b	294cc <__flatcc_fb_build_schema@@Base+0x6b8>
   295b8:	ldrh	r3, [r4, #8]
   295bc:	cmp	r3, #5
   295c0:	beq	295e0 <__flatcc_fb_build_schema@@Base+0x7cc>
   295c4:	ldr	r2, [pc, #2316]	; 29ed8 <__flatcc_fb_build_schema@@Base+0x10c4>
   295c8:	ldr	r1, [r4, #4]
   295cc:	mov	r0, fp
   295d0:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   295d4:	mov	r3, #1
   295d8:	strh	r3, [r6, #48]	; 0x30
   295dc:	b	2945c <__flatcc_fb_build_schema@@Base+0x648>
   295e0:	ldrh	r3, [r4, #24]
   295e4:	cmp	r3, #1
   295e8:	beq	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   295ec:	sub	r3, r3, #7
   295f0:	cmp	r3, #1
   295f4:	bhi	29620 <__flatcc_fb_build_schema@@Base+0x80c>
   295f8:	ldr	r3, [r4, #16]
   295fc:	ldr	r3, [r3, #16]
   29600:	add	r3, r3, #996	; 0x3e4
   29604:	add	r3, r3, #3
   29608:	cmp	r3, #27
   2960c:	movhi	r3, r7
   29610:	ldrls	r2, [pc, #2056]	; 29e20 <__flatcc_fb_build_schema@@Base+0x100c>
   29614:	addls	r3, r2, r3
   29618:	ldrbls	r3, [r3, #87]	; 0x57
   2961c:	str	r3, [r4, #16]
   29620:	add	r3, sp, #52	; 0x34
   29624:	ldr	r2, [pc, #2040]	; 29e24 <__flatcc_fb_build_schema@@Base+0x1010>
   29628:	ldr	r1, [r4, #64]	; 0x40
   2962c:	mov	r0, fp
   29630:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   29634:	ldr	r8, [sp, #76]	; 0x4c
   29638:	cmp	r8, #0
   2963c:	strh	r0, [r4, #72]	; 0x48
   29640:	beq	2966c <__flatcc_fb_build_schema@@Base+0x858>
   29644:	ldrh	r3, [r4, #24]
   29648:	cmp	r3, #7
   2964c:	bne	2965c <__flatcc_fb_build_schema@@Base+0x848>
   29650:	ldr	r3, [r4, #16]
   29654:	cmp	r3, #4
   29658:	beq	297d8 <__flatcc_fb_build_schema@@Base+0x9c4>
   2965c:	ldr	r2, [pc, #1988]	; 29e28 <__flatcc_fb_build_schema@@Base+0x1014>
   29660:	ldr	r1, [r8, #4]
   29664:	mov	r0, fp
   29668:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2966c:	ldrh	r3, [r4, #72]	; 0x48
   29670:	tst	r3, #256	; 0x100
   29674:	beq	29694 <__flatcc_fb_build_schema@@Base+0x880>
   29678:	ldrh	r3, [r4, #24]
   2967c:	cmp	r3, #8
   29680:	bne	29694 <__flatcc_fb_build_schema@@Base+0x880>
   29684:	ldr	r2, [pc, #1952]	; 29e2c <__flatcc_fb_build_schema@@Base+0x1018>
   29688:	ldr	r1, [r4, #4]
   2968c:	mov	r0, fp
   29690:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29694:	ldrh	r3, [r4, #72]	; 0x48
   29698:	tst	r3, #1024	; 0x400
   2969c:	beq	296c8 <__flatcc_fb_build_schema@@Base+0x8b4>
   296a0:	ldrh	r3, [r4, #24]
   296a4:	cmp	r3, #7
   296a8:	bne	296b8 <__flatcc_fb_build_schema@@Base+0x8a4>
   296ac:	ldr	r3, [r4, #16]
   296b0:	cmp	r3, #4
   296b4:	beq	296c8 <__flatcc_fb_build_schema@@Base+0x8b4>
   296b8:	ldr	r2, [pc, #1904]	; 29e30 <__flatcc_fb_build_schema@@Base+0x101c>
   296bc:	ldr	r1, [r4, #4]
   296c0:	mov	r0, fp
   296c4:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   296c8:	ldrh	r3, [r4, #72]	; 0x48
   296cc:	tst	r3, #2048	; 0x800
   296d0:	beq	296fc <__flatcc_fb_build_schema@@Base+0x8e8>
   296d4:	ldrh	r3, [r4, #24]
   296d8:	cmp	r3, #7
   296dc:	bne	296ec <__flatcc_fb_build_schema@@Base+0x8d8>
   296e0:	ldr	r3, [r4, #16]
   296e4:	cmp	r3, #4
   296e8:	beq	296fc <__flatcc_fb_build_schema@@Base+0x8e8>
   296ec:	ldr	r2, [pc, #1856]	; 29e34 <__flatcc_fb_build_schema@@Base+0x1020>
   296f0:	ldr	r1, [r4, #4]
   296f4:	mov	r0, fp
   296f8:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   296fc:	ldrh	r3, [r4, #72]	; 0x48
   29700:	and	r3, r3, #3072	; 0xc00
   29704:	cmp	r3, #3072	; 0xc00
   29708:	bne	2971c <__flatcc_fb_build_schema@@Base+0x908>
   2970c:	ldr	r2, [pc, #1828]	; 29e38 <__flatcc_fb_build_schema@@Base+0x1024>
   29710:	ldr	r1, [r4, #4]
   29714:	mov	r0, fp
   29718:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2971c:	ldr	r9, [sp, #56]	; 0x38
   29720:	ldr	r2, [sp, #12]
   29724:	adds	r3, r9, #0
   29728:	movne	r3, #1
   2972c:	str	r3, [sp, #40]	; 0x28
   29730:	ldr	r3, [sp, #8]
   29734:	orrs	r3, r3, r2
   29738:	ldr	r3, [sp, #40]	; 0x28
   2973c:	movne	r3, #0
   29740:	andeq	r3, r3, #1
   29744:	cmp	r3, #0
   29748:	beq	2976c <__flatcc_fb_build_schema@@Base+0x958>
   2974c:	ldr	r3, [fp, #112]	; 0x70
   29750:	ldr	r2, [fp, #216]	; 0xd8
   29754:	mov	r0, r3
   29758:	mov	r1, #0
   2975c:	str	r3, [sp, #16]
   29760:	bl	140fc <memset@plt>
   29764:	mov	r3, #1
   29768:	str	r3, [sp, #20]
   2976c:	cmp	r5, #0
   29770:	bne	297ac <__flatcc_fb_build_schema@@Base+0x998>
   29774:	ldrd	r2, [fp, #216]	; 0xd8
   29778:	ldrd	r0, [sp, #8]
   2977c:	cmp	r1, r3
   29780:	cmpeq	r0, r2
   29784:	bcc	29948 <__flatcc_fb_build_schema@@Base+0xb34>
   29788:	ldr	r2, [pc, #1708]	; 29e3c <__flatcc_fb_build_schema@@Base+0x1028>
   2978c:	ldr	r1, [r4, #4]
   29790:	mov	r0, fp
   29794:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29798:	mov	r5, #1
   2979c:	ldrd	r2, [sp, #8]
   297a0:	adds	r2, r2, #1
   297a4:	adc	r3, r3, #0
   297a8:	strd	r2, [sp, #8]
   297ac:	ldrh	r3, [r4, #24]
   297b0:	sub	r3, r3, #7
   297b4:	cmp	r3, #5
   297b8:	ldrls	pc, [pc, r3, lsl #2]
   297bc:	b	2a044 <__flatcc_fb_build_schema@@Base+0x1230>
   297c0:	andeq	r9, r2, ip, ror #21
   297c4:	andeq	r9, r2, r4, ror r9
   297c8:	andeq	r9, r2, r4, asr #22
   297cc:	andeq	r9, r2, ip, lsr #22
   297d0:	andeq	r9, r2, r0, lsl #27
   297d4:	andeq	r9, r2, r8, asr fp
   297d8:	ldrh	r3, [r8, #16]
   297dc:	cmp	r3, #2
   297e0:	ldreq	r9, [r8, #12]
   297e4:	ldreq	r1, [r8, #8]
   297e8:	moveq	r2, r9
   297ec:	bne	2966c <__flatcc_fb_build_schema@@Base+0x858>
   297f0:	cmp	r2, #0
   297f4:	movle	sl, r1
   297f8:	ble	29818 <__flatcc_fb_build_schema@@Base+0xa04>
   297fc:	sub	r2, r2, #1
   29800:	ldrb	r3, [r1, r2]
   29804:	cmp	r3, #46	; 0x2e
   29808:	bne	297f0 <__flatcc_fb_build_schema@@Base+0x9dc>
   2980c:	add	sl, r2, #1
   29810:	add	sl, r1, sl
   29814:	sub	r9, r9, #1
   29818:	ldr	r3, [r6, #12]
   2981c:	sub	r9, r9, r2
   29820:	adds	r0, r3, #0
   29824:	movne	r0, #1
   29828:	cmp	r2, #0
   2982c:	movne	r0, #0
   29830:	cmp	r0, #0
   29834:	beq	298f8 <__flatcc_fb_build_schema@@Base+0xae4>
   29838:	mov	r2, r9
   2983c:	add	r0, r3, #4
   29840:	mov	r1, sl
   29844:	str	r3, [sp, #40]	; 0x28
   29848:	bl	23914 <fb_symbol_table_find@@Base>
   2984c:	ldr	r3, [sp, #40]	; 0x28
   29850:	subs	r2, r0, #0
   29854:	bne	29894 <__flatcc_fb_build_schema@@Base+0xa80>
   29858:	mov	r1, r3
   2985c:	mov	r0, fp
   29860:	bl	281b0 <__flatcc_fb_clear_parser@@Base+0x2d0>
   29864:	subs	r3, r0, #0
   29868:	bne	29838 <__flatcc_fb_build_schema@@Base+0xa24>
   2986c:	ldr	r3, [r8, #12]
   29870:	ldr	r2, [pc, #1480]	; 29e40 <__flatcc_fb_build_schema@@Base+0x102c>
   29874:	str	r3, [sp, #4]
   29878:	ldr	r3, [r8, #8]
   2987c:	mov	r0, fp
   29880:	str	r3, [sp]
   29884:	mov	r3, #0
   29888:	ldr	r1, [r8, #4]
   2988c:	bl	24ea4 <__flatcc_error_report@@Base>
   29890:	b	2966c <__flatcc_fb_build_schema@@Base+0x858>
   29894:	mov	r1, r2
   29898:	ldr	r0, [sp, #36]	; 0x24
   2989c:	str	r3, [sp, #44]	; 0x2c
   298a0:	str	r2, [sp, #40]	; 0x28
   298a4:	bl	28224 <__flatcc_fb_clear_parser@@Base+0x344>
   298a8:	ldr	r2, [sp, #40]	; 0x28
   298ac:	ldr	r3, [sp, #44]	; 0x2c
   298b0:	cmp	r0, #0
   298b4:	beq	29858 <__flatcc_fb_build_schema@@Base+0xa44>
   298b8:	ldrh	r3, [r2, #8]
   298bc:	cmp	r3, #0
   298c0:	beq	29940 <__flatcc_fb_build_schema@@Base+0xb2c>
   298c4:	ldr	r1, [fp, #176]	; 0xb0
   298c8:	cmp	r1, #0
   298cc:	ldreq	r3, [r2, #4]
   298d0:	ldreq	r2, [pc, #1388]	; 29e44 <__flatcc_fb_build_schema@@Base+0x1030>
   298d4:	beq	298e8 <__flatcc_fb_build_schema@@Base+0xad4>
   298d8:	cmp	r3, #1
   298dc:	beq	29940 <__flatcc_fb_build_schema@@Base+0xb2c>
   298e0:	ldr	r3, [r2, #4]
   298e4:	ldr	r2, [pc, #1372]	; 29e48 <__flatcc_fb_build_schema@@Base+0x1034>
   298e8:	ldr	r1, [r8, #4]
   298ec:	mov	r0, fp
   298f0:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   298f4:	b	2966c <__flatcc_fb_build_schema@@Base+0x858>
   298f8:	ldr	r3, [sp, #36]	; 0x24
   298fc:	cmp	r3, #0
   29900:	beq	2986c <__flatcc_fb_build_schema@@Base+0xa58>
   29904:	ldr	r0, [fp, #412]	; 0x19c
   29908:	cmp	r0, #0
   2990c:	beq	2986c <__flatcc_fb_build_schema@@Base+0xa58>
   29910:	cmp	r2, #0
   29914:	moveq	r1, #0
   29918:	bl	24004 <fb_scope_table_find@@Base>
   2991c:	cmp	r0, #0
   29920:	beq	2986c <__flatcc_fb_build_schema@@Base+0xa58>
   29924:	mov	r2, r9
   29928:	mov	r1, sl
   2992c:	add	r0, r0, #4
   29930:	bl	23914 <fb_symbol_table_find@@Base>
   29934:	subs	r2, r0, #0
   29938:	bne	298b8 <__flatcc_fb_build_schema@@Base+0xaa4>
   2993c:	b	2986c <__flatcc_fb_build_schema@@Base+0xa58>
   29940:	str	r2, [r4, #104]	; 0x68
   29944:	b	2966c <__flatcc_fb_build_schema@@Base+0x858>
   29948:	ldr	r3, [sp, #20]
   2994c:	cmp	r3, #0
   29950:	bne	2979c <__flatcc_fb_build_schema@@Base+0x988>
   29954:	ldrd	r2, [sp, #8]
   29958:	ldr	r0, [pc, #1348]	; 29ea4 <__flatcc_fb_build_schema@@Base+0x1090>
   2995c:	mov	r1, #0
   29960:	and	r2, r2, r0
   29964:	and	r3, r3, r1
   29968:	ldr	r5, [sp, #20]
   2996c:	strd	r2, [r4, #96]	; 0x60
   29970:	b	2979c <__flatcc_fb_build_schema@@Base+0x988>
   29974:	ldrh	r3, [r4, #56]	; 0x38
   29978:	cmp	r3, #13
   2997c:	bne	299ac <__flatcc_fb_build_schema@@Base+0xb98>
   29980:	add	r3, r4, #48	; 0x30
   29984:	str	r3, [sp]
   29988:	mov	r2, #0
   2998c:	ldr	r3, [r4, #48]	; 0x30
   29990:	ldr	r1, [r6, #12]
   29994:	mov	r0, fp
   29998:	bl	2836c <__flatcc_fb_clear_parser@@Base+0x48c>
   2999c:	cmp	r0, #0
   299a0:	movne	r3, r4
   299a4:	ldrne	r2, [pc, #1184]	; 29e4c <__flatcc_fb_build_schema@@Base+0x1038>
   299a8:	bne	29c90 <__flatcc_fb_build_schema@@Base+0xe7c>
   299ac:	ldrh	r3, [r4, #56]	; 0x38
   299b0:	cmp	r3, #0
   299b4:	moveq	r3, #5
   299b8:	strheq	r3, [r4, #56]	; 0x38
   299bc:	moveq	r2, #0
   299c0:	moveq	r3, #0
   299c4:	strdeq	r2, [r4, #48]	; 0x30
   299c8:	add	r3, r4, #48	; 0x30
   299cc:	ldr	r2, [r4, #16]
   299d0:	mov	r1, r4
   299d4:	mov	r0, fp
   299d8:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   299dc:	cmp	r0, #0
   299e0:	beq	299f0 <__flatcc_fb_build_schema@@Base+0xbdc>
   299e4:	mov	r3, #1
   299e8:	strh	r3, [r4, #24]
   299ec:	b	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   299f0:	ldr	r2, [r4, #16]
   299f4:	ldr	r3, [pc, #1060]	; 29e20 <__flatcc_fb_build_schema@@Base+0x100c>
   299f8:	mov	r1, #0
   299fc:	add	r3, r3, r2, lsl #2
   29a00:	mov	r8, #1
   29a04:	ldr	r3, [r3, #116]	; 0x74
   29a08:	mov	r0, r3
   29a0c:	strh	r3, [r4, #74]	; 0x4a
   29a10:	strd	r0, [r4, #88]	; 0x58
   29a14:	cmp	r5, #0
   29a18:	beq	29fc8 <__flatcc_fb_build_schema@@Base+0x11b4>
   29a1c:	ldr	r3, [sp, #20]
   29a20:	eor	sl, r5, #1
   29a24:	ands	sl, sl, r3
   29a28:	beq	29ab8 <__flatcc_fb_build_schema@@Base+0xca4>
   29a2c:	ldr	r3, [r4, #96]	; 0x60
   29a30:	ldr	r1, [sp, #16]
   29a34:	ldr	r2, [sp, #16]
   29a38:	ldrb	r5, [r1, r3]
   29a3c:	add	r2, r2, r3
   29a40:	cmp	r5, #2
   29a44:	bne	2a094 <__flatcc_fb_build_schema@@Base+0x1280>
   29a48:	ldr	r2, [pc, #1024]	; 29e50 <__flatcc_fb_build_schema@@Base+0x103c>
   29a4c:	ldr	r1, [r9, #4]
   29a50:	mov	r0, fp
   29a54:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29a58:	mov	r5, sl
   29a5c:	eor	r3, r5, #1
   29a60:	cmp	r7, #0
   29a64:	moveq	r3, #0
   29a68:	andne	r3, r3, #1
   29a6c:	cmp	r3, #0
   29a70:	beq	29ab8 <__flatcc_fb_build_schema@@Base+0xca4>
   29a74:	ldrh	r3, [r7, #8]
   29a78:	cmp	r3, #4
   29a7c:	movne	r5, #0
   29a80:	bne	29ab8 <__flatcc_fb_build_schema@@Base+0xca4>
   29a84:	ldrd	r0, [r4, #96]	; 0x60
   29a88:	ldrh	r3, [r4, #24]
   29a8c:	cmp	r1, #0
   29a90:	cmpeq	r0, #1
   29a94:	bhi	2a0bc <__flatcc_fb_build_schema@@Base+0x12a8>
   29a98:	ldr	r2, [pc, #948]	; 29e54 <__flatcc_fb_build_schema@@Base+0x1040>
   29a9c:	ldr	r1, [pc, #948]	; 29e58 <__flatcc_fb_build_schema@@Base+0x1044>
   29aa0:	cmp	r3, #11
   29aa4:	moveq	r2, r1
   29aa8:	mov	r0, fp
   29aac:	ldr	r1, [r9, #4]
   29ab0:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29ab4:	mov	r5, sl
   29ab8:	ldrh	r3, [r4, #72]	; 0x48
   29abc:	tst	r3, #128	; 0x80
   29ac0:	beq	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   29ac4:	ldr	r3, [sp, #32]
   29ac8:	cmp	r8, #0
   29acc:	add	r3, r3, #1
   29ad0:	str	r3, [sp, #32]
   29ad4:	bne	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   29ad8:	ldr	r2, [pc, #892]	; 29e5c <__flatcc_fb_build_schema@@Base+0x1048>
   29adc:	ldr	r1, [r4, #4]
   29ae0:	mov	r0, fp
   29ae4:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29ae8:	b	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   29aec:	ldr	r2, [r4, #16]
   29af0:	ldr	r3, [pc, #808]	; 29e20 <__flatcc_fb_build_schema@@Base+0x100c>
   29af4:	ldrh	r8, [r4, #56]	; 0x38
   29af8:	add	r3, r3, r2, lsl #2
   29afc:	mov	r1, #0
   29b00:	ldr	r3, [r3, #116]	; 0x74
   29b04:	cmp	r8, #0
   29b08:	mov	r0, r3
   29b0c:	strh	r3, [r4, #74]	; 0x4a
   29b10:	strd	r0, [r4, #88]	; 0x58
   29b14:	ldrne	r2, [pc, #836]	; 29e60 <__flatcc_fb_build_schema@@Base+0x104c>
   29b18:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29b1c:	ldr	r1, [r4, #4]
   29b20:	mov	r0, fp
   29b24:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29b28:	b	299e4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29b2c:	ldrh	r3, [r4, #56]	; 0x38
   29b30:	cmp	r3, #0
   29b34:	ldreq	r8, [fp, #164]	; 0xa4
   29b38:	ldrne	r2, [pc, #804]	; 29e64 <__flatcc_fb_build_schema@@Base+0x1050>
   29b3c:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29b40:	b	29b1c <__flatcc_fb_build_schema@@Base+0xd08>
   29b44:	ldrh	r8, [r4, #56]	; 0x38
   29b48:	cmp	r8, #0
   29b4c:	ldrne	r2, [pc, #788]	; 29e68 <__flatcc_fb_build_schema@@Base+0x1054>
   29b50:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29b54:	b	29b1c <__flatcc_fb_build_schema@@Base+0xd08>
   29b58:	mov	r3, #0
   29b5c:	ldr	r2, [r4, #16]
   29b60:	ldr	r1, [r6, #12]
   29b64:	mov	r0, fp
   29b68:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   29b6c:	subs	r7, r0, #0
   29b70:	bne	29b94 <__flatcc_fb_build_schema@@Base+0xd80>
   29b74:	mov	r3, r4
   29b78:	ldr	r2, [pc, #748]	; 29e6c <__flatcc_fb_build_schema@@Base+0x1058>
   29b7c:	ldr	r1, [r4, #16]
   29b80:	mov	r0, fp
   29b84:	mov	r5, #1
   29b88:	bl	25ca8 <error_ref_sym@@Base>
   29b8c:	strh	r5, [r4, #24]
   29b90:	b	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   29b94:	ldrh	r3, [r7, #8]
   29b98:	cmp	r3, #4
   29b9c:	ldrls	pc, [pc, r3, lsl #2]
   29ba0:	b	29cb8 <__flatcc_fb_build_schema@@Base+0xea4>
   29ba4:	andeq	r9, r2, r4, asr #25
   29ba8:	andeq	r9, r2, r4, asr #25
   29bac:	andeq	r9, r2, r0, lsr #25
   29bb0:			; <UNDEFINED> instruction: 0x00029bb8
   29bb4:	andeq	r9, r2, r4, asr #25
   29bb8:	ldrh	r3, [r4, #72]	; 0x48
   29bbc:	tst	r3, #256	; 0x100
   29bc0:	beq	29bd4 <__flatcc_fb_build_schema@@Base+0xdc0>
   29bc4:	ldr	r2, [pc, #676]	; 29e70 <__flatcc_fb_build_schema@@Base+0x105c>
   29bc8:	ldr	r1, [r4, #4]
   29bcc:	mov	r0, fp
   29bd0:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29bd4:	ldr	r8, [fp, #148]	; 0x94
   29bd8:	mov	r3, #14
   29bdc:	str	r7, [r4, #16]
   29be0:	strh	r3, [r4, #24]
   29be4:	ldrd	r2, [r7, #112]	; 0x70
   29be8:	ldrh	ip, [r7, #8]
   29bec:	strd	r2, [r4, #88]	; 0x58
   29bf0:	ldrh	r3, [r7, #104]	; 0x68
   29bf4:	eor	r2, r5, #1
   29bf8:	cmp	ip, #4
   29bfc:	movne	r2, #0
   29c00:	andeq	r2, r2, #1
   29c04:	cmp	r2, #0
   29c08:	strh	r3, [r4, #74]	; 0x4a
   29c0c:	beq	29c44 <__flatcc_fb_build_schema@@Base+0xe30>
   29c10:	ldr	r3, [sp, #20]
   29c14:	cmp	r3, #0
   29c18:	bne	29c34 <__flatcc_fb_build_schema@@Base+0xe20>
   29c1c:	ldrd	r0, [sp, #8]
   29c20:	ldr	r2, [pc, #636]	; 29ea4 <__flatcc_fb_build_schema@@Base+0x1090>
   29c24:	mov	r3, #0
   29c28:	and	r0, r0, r2
   29c2c:	and	r1, r1, r3
   29c30:	strd	r0, [r4, #96]	; 0x60
   29c34:	ldrd	r0, [sp, #8]
   29c38:	adds	r0, r0, #1
   29c3c:	adc	r1, r1, #0
   29c40:	strd	r0, [sp, #8]
   29c44:	ldrh	r2, [r4, #56]	; 0x38
   29c48:	cmp	r2, #0
   29c4c:	beq	29d14 <__flatcc_fb_build_schema@@Base+0xf00>
   29c50:	cmp	ip, #3
   29c54:	ldrne	r2, [pc, #564]	; 29e90 <__flatcc_fb_build_schema@@Base+0x107c>
   29c58:	bne	29b1c <__flatcc_fb_build_schema@@Base+0xd08>
   29c5c:	cmp	r2, #13
   29c60:	add	sl, r4, #48	; 0x30
   29c64:	bne	29ccc <__flatcc_fb_build_schema@@Base+0xeb8>
   29c68:	str	sl, [sp]
   29c6c:	mov	r2, r7
   29c70:	ldr	r3, [r4, #48]	; 0x30
   29c74:	ldr	r1, [r6, #12]
   29c78:	mov	r0, fp
   29c7c:	bl	2836c <__flatcc_fb_clear_parser@@Base+0x48c>
   29c80:	cmp	r0, #0
   29c84:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29c88:	ldr	r2, [pc, #484]	; 29e74 <__flatcc_fb_build_schema@@Base+0x1060>
   29c8c:	mov	r3, r4
   29c90:	ldr	r1, [r4, #48]	; 0x30
   29c94:	mov	r0, fp
   29c98:	bl	25ca8 <error_ref_sym@@Base>
   29c9c:	b	299e4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29ca0:	ldr	r3, [r7, #4]
   29ca4:	ldr	r2, [pc, #460]	; 29e78 <__flatcc_fb_build_schema@@Base+0x1064>
   29ca8:	ldr	r1, [r4, #4]
   29cac:	mov	r0, fp
   29cb0:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   29cb4:	b	299e4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29cb8:	ldr	r3, [r7, #4]
   29cbc:	ldr	r2, [pc, #440]	; 29e7c <__flatcc_fb_build_schema@@Base+0x1068>
   29cc0:	b	29ca8 <__flatcc_fb_build_schema@@Base+0xe94>
   29cc4:	mov	r8, #0
   29cc8:	b	29bd8 <__flatcc_fb_build_schema@@Base+0xdc4>
   29ccc:	mov	r3, sl
   29cd0:	ldr	r2, [r7, #40]	; 0x28
   29cd4:	mov	r1, r4
   29cd8:	mov	r0, fp
   29cdc:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   29ce0:	cmp	r0, #0
   29ce4:	bne	299e4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29ce8:	ldr	r3, [fp, #212]	; 0xd4
   29cec:	cmp	r3, #0
   29cf0:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29cf4:	ldr	r0, [r4, #16]
   29cf8:	mov	r1, sl
   29cfc:	add	r0, r0, #72	; 0x48
   29d00:	bl	2f46c <fb_value_set_find_item@@Base>
   29d04:	cmp	r0, #0
   29d08:	ldreq	r2, [pc, #368]	; 29e80 <__flatcc_fb_build_schema@@Base+0x106c>
   29d0c:	bne	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29d10:	b	29b1c <__flatcc_fb_build_schema@@Base+0xd08>
   29d14:	cmp	ip, #3
   29d18:	bne	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29d1c:	mov	r3, #5
   29d20:	strh	r3, [r4, #56]	; 0x38
   29d24:	mov	sl, r4
   29d28:	mov	r2, #0
   29d2c:	mov	r3, #0
   29d30:	mov	r1, r7
   29d34:	strd	r2, [sl, #48]!	; 0x30
   29d38:	mov	r0, fp
   29d3c:	mov	r3, sl
   29d40:	ldr	r2, [r7, #40]	; 0x28
   29d44:	bl	2a5b8 <__flatcc_fb_coerce_scalar_type@@Base>
   29d48:	cmp	r0, #0
   29d4c:	bne	299e4 <__flatcc_fb_build_schema@@Base+0xbd0>
   29d50:	ldr	r3, [fp, #212]	; 0xd4
   29d54:	cmp	r3, #0
   29d58:	beq	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29d5c:	ldr	r0, [r4, #16]
   29d60:	mov	r1, sl
   29d64:	add	r0, r0, #72	; 0x48
   29d68:	bl	2f46c <fb_value_set_find_item@@Base>
   29d6c:	cmp	r0, #0
   29d70:	ldreq	r3, [r7, #4]
   29d74:	ldreq	r2, [pc, #264]	; 29e84 <__flatcc_fb_build_schema@@Base+0x1070>
   29d78:	bne	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29d7c:	b	29ca8 <__flatcc_fb_build_schema@@Base+0xe94>
   29d80:	mov	r3, #0
   29d84:	ldr	r2, [r4, #16]
   29d88:	ldr	r1, [r6, #12]
   29d8c:	mov	r0, fp
   29d90:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   29d94:	subs	r7, r0, #0
   29d98:	bne	29f14 <__flatcc_fb_build_schema@@Base+0x1100>
   29d9c:	mov	r3, r4
   29da0:	ldr	r2, [pc, #224]	; 29e88 <__flatcc_fb_build_schema@@Base+0x1074>
   29da4:	ldr	r1, [r4, #16]
   29da8:	b	29c94 <__flatcc_fb_build_schema@@Base+0xe80>
   29dac:	andeq	r8, r4, pc, asr #27
   29db0:	andeq	r0, r0, r6, lsl r6
   29db4:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   29db8:	andeq	r9, r4, pc, lsl #15
   29dbc:			; <UNDEFINED> instruction: 0x01000193
   29dc0:	tsthi	ip, r5, asr #27
   29dc4:	andeq	r9, r4, r1, ror #15
   29dc8:	andeq	r8, r4, r8, ror #27
   29dcc:	strheq	ip, [r5], -r0
   29dd0:	andeq	r1, r3, r5, ror #11
   29dd4:	andeq	r9, r4, r5, asr #15
   29dd8:	andeq	r9, r4, r4, lsl #19
   29ddc:	andeq	sl, r4, ip, asr r2
   29de0:	strdeq	r9, [r4], -fp
   29de4:	andeq	sl, r4, r7, asr #5
   29de8:	andeq	r9, r4, r5, lsr #16
   29dec:	andeq	r9, r4, r7, asr #16
   29df0:	andeq	r9, r4, fp, ror #16
   29df4:	muleq	r4, r9, r8
   29df8:	ldrdeq	r9, [r4], -sp
   29dfc:	andeq	r9, r4, lr, lsl #18
   29e00:	andeq	r9, r4, sl, asr #18
   29e04:	strdeq	r9, [r4], -r1
   29e08:	andeq	r8, r4, r8, lsl lr
   29e0c:	andeq	r0, r0, r2, lsl #6
   29e10:	andeq	r9, r4, r3, lsr #20
   29e14:	muleq	r4, r1, r0
   29e18:	andeq	sl, r4, fp, ror r0
   29e1c:	andeq	r9, r4, r2, lsr sl
   29e20:	andeq	r8, r4, ip, lsl sp
   29e24:	andeq	r0, r0, r6, asr #31
   29e28:	andeq	r9, r4, r9, ror sl
   29e2c:	andeq	r9, r4, r3, lsr fp
   29e30:	andeq	r9, r4, fp, ror #22
   29e34:	andeq	r9, r4, r7, lsr #23
   29e38:	andeq	r9, r4, r6, ror #23
   29e3c:	andeq	r9, r4, sp, lsl ip
   29e40:			; <UNDEFINED> instruction: 0x00049ab6
   29e44:	ldrdeq	r9, [r4], -r1
   29e48:	strdeq	r9, [r4], -ip
   29e4c:	andeq	r9, r4, sp, lsr ip
   29e50:	andeq	r9, r4, r4, ror #31
   29e54:	andeq	r9, r4, r8, ror #11
   29e58:	muleq	r4, r8, r5
   29e5c:	andeq	sl, r4, sl, asr #32
   29e60:	andeq	r9, r4, pc, ror #24
   29e64:	muleq	r4, r9, ip
   29e68:			; <UNDEFINED> instruction: 0x00049cbc
   29e6c:	andeq	r9, r4, r6, ror #25
   29e70:	andeq	r9, r4, r3, lsl sp
   29e74:	andeq	r9, r4, r7, asr #27
   29e78:	andeq	r9, r4, r9, asr #26
   29e7c:	andeq	r9, r4, r5, ror sp
   29e80:	strdeq	r9, [r4], -r7
   29e84:	andeq	r9, r4, r7, lsr #28
   29e88:	andeq	r9, r4, ip, ror #28
   29e8c:	andeq	r9, r4, r0, lsr #29
   29e90:	muleq	r4, fp, sp
   29e94:	andeq	r9, r4, r3, lsl pc
   29e98:	andeq	r9, r4, r0, asr pc
   29e9c:	andeq	r9, r4, sl, lsl #31
   29ea0:	andeq	r9, r4, fp, ror #29
   29ea4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   29ea8:	andeq	r9, r4, r8, lsr #31
   29eac:	andeq	r9, r4, r8, asr #31
   29eb0:	andeq	sl, r4, sl, lsl r0
   29eb4:	muleq	r4, r2, r6
   29eb8:	andeq	r9, r4, r1, lsr r6
   29ebc:	andeq	r9, r4, r1, asr #14
   29ec0:	andeq	r9, r4, ip, ror #13
   29ec4:			; <UNDEFINED> instruction: 0x000499b5
   29ec8:	andeq	r8, r4, r6, lsr #28
   29ecc:	andeq	r0, r0, r9, ror #8
   29ed0:	andeq	sl, r4, r3, asr #1
   29ed4:	andeq	sl, r4, r7, ror #1
   29ed8:	andeq	r9, r4, r4, asr sl
   29edc:	andeq	sl, r4, r7, lsl #2
   29ee0:	andeq	sl, r4, r7, asr #2
   29ee4:	andeq	sl, r4, r4, lsl #3
   29ee8:			; <UNDEFINED> instruction: 0x0004a1b6
   29eec:	andeq	sl, r4, ip, ror #3
   29ef0:	andeq	sl, r4, pc, lsl r2
   29ef4:	andeq	r8, r0, r0, lsl #13
   29ef8:	andeq	r8, r4, sl, lsr lr
   29efc:	strdeq	r0, [r0], -r1
   29f00:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   29f04:	andeq	sl, r4, r6, asr r2
   29f08:	andeq	sl, r4, r3, ror r2
   29f0c:	andeq	sl, r4, r7, lsl #5
   29f10:	andeq	sl, r4, sp, lsr #5
   29f14:	ldrh	r3, [r7, #8]
   29f18:	cmp	r3, #4
   29f1c:	bhi	29f30 <__flatcc_fb_build_schema@@Base+0x111c>
   29f20:	mov	sl, #1
   29f24:	lsl	r3, sl, r3
   29f28:	tst	r3, #27
   29f2c:	bne	29f3c <__flatcc_fb_build_schema@@Base+0x1128>
   29f30:	ldr	r3, [r4, #16]
   29f34:	ldr	r2, [pc, #-176]	; 29e8c <__flatcc_fb_build_schema@@Base+0x1078>
   29f38:	b	29ca8 <__flatcc_fb_build_schema@@Base+0xe94>
   29f3c:	ldrh	r8, [r4, #56]	; 0x38
   29f40:	cmp	r8, #0
   29f44:	beq	29f60 <__flatcc_fb_build_schema@@Base+0x114c>
   29f48:	ldr	r2, [pc, #-192]	; 29e90 <__flatcc_fb_build_schema@@Base+0x107c>
   29f4c:	ldr	r1, [r4, #4]
   29f50:	mov	r0, fp
   29f54:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   29f58:	strh	sl, [r4, #24]
   29f5c:	b	295b0 <__flatcc_fb_build_schema@@Base+0x79c>
   29f60:	mov	r3, #15
   29f64:	str	r7, [r4, #16]
   29f68:	strh	r3, [r4, #24]
   29f6c:	ldrd	r2, [r7, #112]	; 0x70
   29f70:	strd	r2, [r4, #88]	; 0x58
   29f74:	ldrh	r3, [r7, #104]	; 0x68
   29f78:	strh	r3, [r4, #74]	; 0x4a
   29f7c:	ldrh	r3, [r7, #8]
   29f80:	cmp	r3, #4
   29f84:	bne	29a14 <__flatcc_fb_build_schema@@Base+0xc00>
   29f88:	cmp	r5, #0
   29f8c:	bne	29a1c <__flatcc_fb_build_schema@@Base+0xc08>
   29f90:	ldr	r3, [sp, #20]
   29f94:	cmp	r3, #0
   29f98:	bne	29fb4 <__flatcc_fb_build_schema@@Base+0x11a0>
   29f9c:	ldrd	r2, [sp, #8]
   29fa0:	ldr	r0, [pc, #-260]	; 29ea4 <__flatcc_fb_build_schema@@Base+0x1090>
   29fa4:	mov	r1, #0
   29fa8:	and	r2, r2, r0
   29fac:	and	r3, r3, r1
   29fb0:	strd	r2, [r4, #96]	; 0x60
   29fb4:	ldrd	r2, [sp, #8]
   29fb8:	mov	r8, r5
   29fbc:	adds	r2, r2, #1
   29fc0:	adc	r3, r3, #0
   29fc4:	strd	r2, [sp, #8]
   29fc8:	ldr	r3, [sp, #20]
   29fcc:	adds	r2, r9, #0
   29fd0:	movne	r2, #1
   29fd4:	eor	r3, r3, #1
   29fd8:	tst	r2, r3
   29fdc:	ldrne	r2, [pc, #-336]	; 29e94 <__flatcc_fb_build_schema@@Base+0x1080>
   29fe0:	bne	2a08c <__flatcc_fb_build_schema@@Base+0x1278>
   29fe4:	ldr	r3, [sp, #20]
   29fe8:	cmp	r9, #0
   29fec:	movne	r3, #0
   29ff0:	andeq	r3, r3, #1
   29ff4:	cmp	r3, #0
   29ff8:	ldrne	r2, [pc, #-360]	; 29e98 <__flatcc_fb_build_schema@@Base+0x1084>
   29ffc:	bne	2a030 <__flatcc_fb_build_schema@@Base+0x121c>
   2a000:	cmp	r9, #0
   2a004:	moveq	r5, r9
   2a008:	beq	29a1c <__flatcc_fb_build_schema@@Base+0xc08>
   2a00c:	ldrh	r3, [r9, #16]
   2a010:	cmp	r3, #5
   2a014:	bne	2a080 <__flatcc_fb_build_schema@@Base+0x126c>
   2a018:	ldrd	r2, [r9, #8]
   2a01c:	ldrd	r0, [fp, #216]	; 0xd8
   2a020:	cmp	r3, r1
   2a024:	cmpeq	r2, r0
   2a028:	bcc	2a04c <__flatcc_fb_build_schema@@Base+0x1238>
   2a02c:	ldr	r2, [pc, #-408]	; 29e9c <__flatcc_fb_build_schema@@Base+0x1088>
   2a030:	ldr	r1, [r4, #4]
   2a034:	mov	r0, fp
   2a038:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a03c:	mov	r5, #1
   2a040:	b	29a1c <__flatcc_fb_build_schema@@Base+0xc08>
   2a044:	ldr	r2, [pc, #-428]	; 29ea0 <__flatcc_fb_build_schema@@Base+0x108c>
   2a048:	b	29b1c <__flatcc_fb_build_schema@@Base+0xd08>
   2a04c:	ldr	r0, [pc, #-432]	; 29ea4 <__flatcc_fb_build_schema@@Base+0x1090>
   2a050:	mov	r1, #0
   2a054:	and	r0, r0, r2
   2a058:	and	r1, r1, r3
   2a05c:	mov	r2, r0
   2a060:	mov	r3, r1
   2a064:	ldrd	r0, [sp, #24]
   2a068:	strd	r2, [r4, #96]	; 0x60
   2a06c:	cmp	r1, r3
   2a070:	cmpeq	r0, r2
   2a074:	strdcc	r2, [sp, #24]
   2a078:	mov	r5, #0
   2a07c:	b	29a1c <__flatcc_fb_build_schema@@Base+0xc08>
   2a080:	cmp	r3, #4
   2a084:	ldreq	r2, [pc, #-484]	; 29ea8 <__flatcc_fb_build_schema@@Base+0x1094>
   2a088:	ldrne	r2, [pc, #-484]	; 29eac <__flatcc_fb_build_schema@@Base+0x1098>
   2a08c:	ldr	r1, [r9, #4]
   2a090:	b	2a034 <__flatcc_fb_build_schema@@Base+0x1220>
   2a094:	cmp	r5, #0
   2a098:	moveq	r3, #1
   2a09c:	strbeq	r3, [r2]
   2a0a0:	beq	29a5c <__flatcc_fb_build_schema@@Base+0xc48>
   2a0a4:	ldr	r2, [pc, #-508]	; 29eb0 <__flatcc_fb_build_schema@@Base+0x109c>
   2a0a8:	ldr	r1, [r9, #4]
   2a0ac:	mov	r0, fp
   2a0b0:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a0b4:	mov	r5, #0
   2a0b8:	b	29a5c <__flatcc_fb_build_schema@@Base+0xc48>
   2a0bc:	ldr	r1, [sp, #16]
   2a0c0:	sub	r0, r0, #1
   2a0c4:	ldr	r2, [sp, #16]
   2a0c8:	ldrb	r5, [r1, r0]
   2a0cc:	add	r2, r2, r0
   2a0d0:	cmp	r5, #2
   2a0d4:	ldreq	r2, [pc, #-552]	; 29eb4 <__flatcc_fb_build_schema@@Base+0x10a0>
   2a0d8:	ldreq	r1, [pc, #-552]	; 29eb8 <__flatcc_fb_build_schema@@Base+0x10a4>
   2a0dc:	beq	29aa0 <__flatcc_fb_build_schema@@Base+0xc8c>
   2a0e0:	cmp	r5, #0
   2a0e4:	moveq	r3, #2
   2a0e8:	strbeq	r3, [r2]
   2a0ec:	beq	29ab8 <__flatcc_fb_build_schema@@Base+0xca4>
   2a0f0:	ldr	r2, [pc, #-572]	; 29ebc <__flatcc_fb_build_schema@@Base+0x10a8>
   2a0f4:	ldr	r1, [pc, #-572]	; 29ec0 <__flatcc_fb_build_schema@@Base+0x10ac>
   2a0f8:	b	29aa0 <__flatcc_fb_build_schema@@Base+0xc8c>
   2a0fc:	mov	r3, r5
   2a100:	mov	r2, r4
   2a104:	mov	r1, r8
   2a108:	add	r0, sp, #100	; 0x64
   2a10c:	bl	14150 <sprintf@plt>
   2a110:	add	r2, sp, #100	; 0x64
   2a114:	ldr	r1, [r6, #4]
   2a118:	mov	r0, fp
   2a11c:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a120:	mov	r3, r9
   2a124:	adds	r4, r4, #1
   2a128:	adc	r5, r5, #0
   2a12c:	b	29534 <__flatcc_fb_build_schema@@Base+0x720>
   2a130:	ldr	r3, [sp, #32]
   2a134:	mov	r7, r5
   2a138:	cmp	r3, #0
   2a13c:	beq	2a16c <__flatcc_fb_build_schema@@Base+0x1358>
   2a140:	ldrh	r3, [r6, #10]
   2a144:	orr	r3, r3, #8
   2a148:	strh	r3, [r6, #10]
   2a14c:	ldr	r3, [sp, #32]
   2a150:	cmp	r3, #1
   2a154:	ble	2a16c <__flatcc_fb_build_schema@@Base+0x1358>
   2a158:	ldr	r3, [fp, #156]	; 0x9c
   2a15c:	cmp	r3, #0
   2a160:	ldreq	r2, [pc, #-676]	; 29ec4 <__flatcc_fb_build_schema@@Base+0x10b0>
   2a164:	ldreq	r1, [r6, #4]
   2a168:	beq	295cc <__flatcc_fb_build_schema@@Base+0x7b8>
   2a16c:	cmp	r7, #0
   2a170:	beq	2945c <__flatcc_fb_build_schema@@Base+0x648>
   2a174:	b	295d4 <__flatcc_fb_build_schema@@Base+0x7c0>
   2a178:	ldrh	r3, [r6, #48]	; 0x30
   2a17c:	cmp	r3, #1
   2a180:	beq	2945c <__flatcc_fb_build_schema@@Base+0x648>
   2a184:	cmp	r3, #0
   2a188:	ldrne	r3, [pc, #-712]	; 29ec8 <__flatcc_fb_build_schema@@Base+0x10b4>
   2a18c:	ldrne	r2, [pc, #-712]	; 29ecc <__flatcc_fb_build_schema@@Base+0x10b8>
   2a190:	bne	29480 <__flatcc_fb_build_schema@@Base+0x66c>
   2a194:	ldr	r3, [r6, #28]
   2a198:	cmp	r3, #0
   2a19c:	beq	2a1b0 <__flatcc_fb_build_schema@@Base+0x139c>
   2a1a0:	ldr	r2, [pc, #-728]	; 29ed0 <__flatcc_fb_build_schema@@Base+0x10bc>
   2a1a4:	ldr	r1, [r6, #4]
   2a1a8:	mov	r0, fp
   2a1ac:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a1b0:	ldr	r7, [r6, #20]
   2a1b4:	add	r9, r6, #56	; 0x38
   2a1b8:	mov	r4, #0
   2a1bc:	mov	r5, #0
   2a1c0:	cmp	r7, #0
   2a1c4:	beq	2945c <__flatcc_fb_build_schema@@Base+0x648>
   2a1c8:	mov	r2, #1
   2a1cc:	mov	r1, r7
   2a1d0:	mov	r0, r9
   2a1d4:	bl	238f4 <fb_symbol_table_insert_item@@Base>
   2a1d8:	cmp	r0, #0
   2a1dc:	beq	2a1fc <__flatcc_fb_build_schema@@Base+0x13e8>
   2a1e0:	ldr	r3, [r0, #4]
   2a1e4:	ldr	r2, [pc, #-792]	; 29ed4 <__flatcc_fb_build_schema@@Base+0x10c0>
   2a1e8:	ldr	r1, [r7, #4]
   2a1ec:	mov	r0, fp
   2a1f0:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   2a1f4:	ldr	r7, [r7]
   2a1f8:	b	2a1c0 <__flatcc_fb_build_schema@@Base+0x13ac>
   2a1fc:	ldrh	r3, [r7, #8]
   2a200:	cmp	r3, #5
   2a204:	ldrne	r2, [pc, #-820]	; 29ed8 <__flatcc_fb_build_schema@@Base+0x10c4>
   2a208:	ldrne	r1, [r7, #4]
   2a20c:	bne	295cc <__flatcc_fb_build_schema@@Base+0x7b8>
   2a210:	ldrh	r3, [r7, #56]	; 0x38
   2a214:	cmp	r3, #0
   2a218:	beq	2a22c <__flatcc_fb_build_schema@@Base+0x1418>
   2a21c:	ldr	r2, [pc, #-840]	; 29edc <__flatcc_fb_build_schema@@Base+0x10c8>
   2a220:	ldr	r1, [r7, #4]
   2a224:	mov	r0, fp
   2a228:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a22c:	ldrh	r3, [r7, #24]
   2a230:	cmp	r3, #1
   2a234:	beq	2a1f4 <__flatcc_fb_build_schema@@Base+0x13e0>
   2a238:	cmp	r3, #12
   2a23c:	beq	2a250 <__flatcc_fb_build_schema@@Base+0x143c>
   2a240:	ldr	r2, [pc, #-872]	; 29ee0 <__flatcc_fb_build_schema@@Base+0x10cc>
   2a244:	ldr	r1, [r7, #4]
   2a248:	mov	r0, fp
   2a24c:	bl	28000 <__flatcc_fb_clear_parser@@Base+0x120>
   2a250:	mov	r3, #0
   2a254:	ldr	r2, [r7, #32]
   2a258:	ldr	r1, [r6, #12]
   2a25c:	mov	r0, fp
   2a260:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   2a264:	cmp	r0, #0
   2a268:	bne	2a284 <__flatcc_fb_build_schema@@Base+0x1470>
   2a26c:	ldr	r2, [pc, #-912]	; 29ee4 <__flatcc_fb_build_schema@@Base+0x10d0>
   2a270:	ldr	r1, [r7, #32]
   2a274:	mov	r3, r7
   2a278:	mov	r0, fp
   2a27c:	bl	25ca8 <error_ref_sym@@Base>
   2a280:	b	2a2a4 <__flatcc_fb_build_schema@@Base+0x1490>
   2a284:	ldrh	r3, [r0, #8]
   2a288:	cmp	r3, #0
   2a28c:	beq	2a2b0 <__flatcc_fb_build_schema@@Base+0x149c>
   2a290:	ldr	r3, [r0, #4]
   2a294:	ldr	r2, [pc, #-948]	; 29ee8 <__flatcc_fb_build_schema@@Base+0x10d4>
   2a298:	ldr	r1, [r7, #4]
   2a29c:	mov	r0, fp
   2a2a0:	bl	27fe4 <__flatcc_fb_clear_parser@@Base+0x104>
   2a2a4:	mov	r3, #1
   2a2a8:	strh	r3, [r7, #24]
   2a2ac:	b	2a1f4 <__flatcc_fb_build_schema@@Base+0x13e0>
   2a2b0:	mov	r8, #14
   2a2b4:	str	r0, [r7, #32]
   2a2b8:	strh	r8, [r7, #40]	; 0x28
   2a2bc:	ldr	r2, [r7, #16]
   2a2c0:	ldr	r1, [r6, #12]
   2a2c4:	mov	r0, fp
   2a2c8:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   2a2cc:	cmp	r0, #0
   2a2d0:	moveq	r3, r7
   2a2d4:	ldreq	r2, [pc, #-1008]	; 29eec <__flatcc_fb_build_schema@@Base+0x10d8>
   2a2d8:	ldreq	r1, [r7, #16]
   2a2dc:	beq	2a278 <__flatcc_fb_build_schema@@Base+0x1464>
   2a2e0:	ldrh	r3, [r0, #8]
   2a2e4:	cmp	r3, #0
   2a2e8:	ldrne	r3, [r0, #4]
   2a2ec:	ldrne	r2, [pc, #-1028]	; 29ef0 <__flatcc_fb_build_schema@@Base+0x10dc>
   2a2f0:	bne	2a298 <__flatcc_fb_build_schema@@Base+0x1484>
   2a2f4:	str	r0, [r7, #16]
   2a2f8:	strh	r8, [r7, #24]
   2a2fc:	strd	r4, [r7, #88]	; 0x58
   2a300:	add	r3, sp, #100	; 0x64
   2a304:	mov	r2, #4
   2a308:	ldr	r1, [r7, #64]	; 0x40
   2a30c:	mov	r0, fp
   2a310:	bl	28008 <__flatcc_fb_clear_parser@@Base+0x128>
   2a314:	strh	r0, [r7, #72]	; 0x48
   2a318:	b	2a1f4 <__flatcc_fb_build_schema@@Base+0x13e0>
   2a31c:	ldr	r2, [r3, #120]	; 0x78
   2a320:	str	r6, [r3, #120]	; 0x78
   2a324:	mov	r6, r3
   2a328:	mov	r3, r2
   2a32c:	b	29094 <__flatcc_fb_build_schema@@Base+0x280>
   2a330:	ldrh	r3, [r5, #8]
   2a334:	cmp	r3, #0
   2a338:	bne	2a410 <__flatcc_fb_build_schema@@Base+0x15fc>
   2a33c:	ldrh	r1, [r5, #92]	; 0x5c
   2a340:	ldr	r4, [r5, #20]
   2a344:	ands	r7, r1, #8
   2a348:	strne	r3, [sp, #100]	; 0x64
   2a34c:	addne	r3, sp, #100	; 0x64
   2a350:	bne	2a3fc <__flatcc_fb_build_schema@@Base+0x15e8>
   2a354:	mov	r2, #36	; 0x24
   2a358:	mov	r1, r7
   2a35c:	add	r0, sp, #52	; 0x34
   2a360:	bl	140fc <memset@plt>
   2a364:	mov	r2, #36	; 0x24
   2a368:	mov	r1, r7
   2a36c:	add	r0, sp, #100	; 0x64
   2a370:	bl	140fc <memset@plt>
   2a374:	ldr	ip, [pc, #-1160]	; 29ef4 <__flatcc_fb_build_schema@@Base+0x10e0>
   2a378:	mov	r2, r4
   2a37c:	mov	lr, #1
   2a380:	mov	r1, r7
   2a384:	cmp	r2, #0
   2a388:	bne	2a418 <__flatcc_fb_build_schema@@Base+0x1604>
   2a38c:	mov	r1, #8
   2a390:	str	r6, [sp, #132]	; 0x84
   2a394:	sub	r2, r1, #1
   2a398:	add	r3, sp, #52	; 0x34
   2a39c:	uxth	r2, r2
   2a3a0:	add	r2, r3, r2, lsl #2
   2a3a4:	add	r2, r2, #4
   2a3a8:	mov	r3, r1
   2a3ac:	ldr	r0, [r2, #-4]!
   2a3b0:	sub	r3, r3, #1
   2a3b4:	cmp	r0, #0
   2a3b8:	uxth	r3, r3
   2a3bc:	bne	2a3c8 <__flatcc_fb_build_schema@@Base+0x15b4>
   2a3c0:	cmp	r3, #0
   2a3c4:	bne	2a3ac <__flatcc_fb_build_schema@@Base+0x1598>
   2a3c8:	add	r2, sp, #200	; 0xc8
   2a3cc:	add	r2, r2, r3, lsl #2
   2a3d0:	cmp	r3, #0
   2a3d4:	ldr	r0, [r2, #-148]	; 0xffffff6c
   2a3d8:	add	r2, sp, #200	; 0xc8
   2a3dc:	add	r1, r2, r1, lsl #2
   2a3e0:	ldr	r2, [r1, #-100]	; 0xffffff9c
   2a3e4:	str	r0, [r2]
   2a3e8:	bne	2a508 <__flatcc_fb_build_schema@@Base+0x16f4>
   2a3ec:	ldr	r3, [sp, #84]	; 0x54
   2a3f0:	b	2a40c <__flatcc_fb_build_schema@@Base+0x15f8>
   2a3f4:	add	r3, r4, #108	; 0x6c
   2a3f8:	ldr	r4, [r4]
   2a3fc:	cmp	r4, #0
   2a400:	str	r4, [r3]
   2a404:	bne	2a3f4 <__flatcc_fb_build_schema@@Base+0x15e0>
   2a408:	ldr	r3, [sp, #100]	; 0x64
   2a40c:	str	r3, [r5, #24]
   2a410:	ldr	r5, [r5]
   2a414:	b	290a8 <__flatcc_fb_build_schema@@Base+0x294>
   2a418:	ldrh	r3, [r2, #24]
   2a41c:	ldrh	r0, [r2, #74]	; 0x4a
   2a420:	cmp	r3, #15
   2a424:	bhi	2a468 <__flatcc_fb_build_schema@@Base+0x1654>
   2a428:	lsl	r3, lr, r3
   2a42c:	ands	r7, r3, ip
   2a430:	bne	2a4bc <__flatcc_fb_build_schema@@Base+0x16a8>
   2a434:	tst	r3, #2
   2a438:	bne	2a4c4 <__flatcc_fb_build_schema@@Base+0x16b0>
   2a43c:	tst	r3, #16384	; 0x4000
   2a440:	beq	2a468 <__flatcc_fb_build_schema@@Base+0x1654>
   2a444:	ldr	r0, [r2, #16]
   2a448:	ldrh	r3, [r0, #8]
   2a44c:	cmp	r3, #3
   2a450:	beq	2a464 <__flatcc_fb_build_schema@@Base+0x1650>
   2a454:	cmp	r3, #4
   2a458:	beq	2a4bc <__flatcc_fb_build_schema@@Base+0x16a8>
   2a45c:	cmp	r3, #1
   2a460:	bne	2a4bc <__flatcc_fb_build_schema@@Base+0x16a8>
   2a464:	ldrh	r0, [r0, #104]	; 0x68
   2a468:	cmp	r0, #0
   2a46c:	beq	2a4e8 <__flatcc_fb_build_schema@@Base+0x16d4>
   2a470:	mov	r3, r1
   2a474:	lsrs	r0, r0, #1
   2a478:	bne	2a4fc <__flatcc_fb_build_schema@@Base+0x16e8>
   2a47c:	cmp	r3, #7
   2a480:	movcs	r3, #7
   2a484:	add	r0, sp, #200	; 0xc8
   2a488:	lsl	r3, r3, #2
   2a48c:	add	r0, r0, r3
   2a490:	ldr	r7, [r0, #-148]	; 0xffffff6c
   2a494:	cmp	r7, #0
   2a498:	streq	r2, [r0, #-148]	; 0xffffff6c
   2a49c:	ldrne	r0, [r0, #-100]	; 0xffffff9c
   2a4a0:	strne	r2, [r0]
   2a4a4:	add	r0, sp, #200	; 0xc8
   2a4a8:	add	r3, r0, r3
   2a4ac:	add	r0, r2, #108	; 0x6c
   2a4b0:	str	r0, [r3, #-100]	; 0xffffff9c
   2a4b4:	ldr	r2, [r2]
   2a4b8:	b	2a384 <__flatcc_fb_build_schema@@Base+0x1570>
   2a4bc:	ldrh	r0, [fp, #192]	; 0xc0
   2a4c0:	b	2a468 <__flatcc_fb_build_schema@@Base+0x1654>
   2a4c4:	add	r3, sp, #200	; 0xc8
   2a4c8:	str	r7, [r3, #-152]!	; 0xffffff68
   2a4cc:	cmp	r4, #0
   2a4d0:	str	r4, [r3]
   2a4d4:	ldreq	r3, [sp, #48]	; 0x30
   2a4d8:	beq	2a40c <__flatcc_fb_build_schema@@Base+0x15f8>
   2a4dc:	add	r3, r4, #108	; 0x6c
   2a4e0:	ldr	r4, [r4]
   2a4e4:	b	2a4cc <__flatcc_fb_build_schema@@Base+0x16b8>
   2a4e8:	ldr	r3, [pc, #-1528]	; 29ef8 <__flatcc_fb_build_schema@@Base+0x10e4>
   2a4ec:	ldr	r2, [pc, #-1528]	; 29efc <__flatcc_fb_build_schema@@Base+0x10e8>
   2a4f0:	ldr	r1, [pc, #-1528]	; 29f00 <__flatcc_fb_build_schema@@Base+0x10ec>
   2a4f4:	ldr	r0, [pc, #-1528]	; 29f04 <__flatcc_fb_build_schema@@Base+0x10f0>
   2a4f8:	b	28e4c <__flatcc_fb_build_schema@@Base+0x38>
   2a4fc:	add	r3, r3, #1
   2a500:	uxth	r3, r3
   2a504:	b	2a474 <__flatcc_fb_build_schema@@Base+0x1660>
   2a508:	mov	r1, r3
   2a50c:	b	2a394 <__flatcc_fb_build_schema@@Base+0x1580>
   2a510:	mov	r3, r5
   2a514:	ldr	r1, [fp, #408]	; 0x198
   2a518:	mov	r0, fp
   2a51c:	bl	2825c <__flatcc_fb_clear_parser@@Base+0x37c>
   2a520:	cmp	r0, #0
   2a524:	str	r0, [fp, #404]	; 0x194
   2a528:	moveq	r3, r5
   2a52c:	ldreq	r2, [pc, #-1580]	; 29f08 <__flatcc_fb_build_schema@@Base+0x10f4>
   2a530:	beq	2a570 <__flatcc_fb_build_schema@@Base+0x175c>
   2a534:	ldr	r3, [fp, #176]	; 0xb0
   2a538:	cmp	r3, #0
   2a53c:	ldrh	r3, [r0, #8]
   2a540:	beq	2a560 <__flatcc_fb_build_schema@@Base+0x174c>
   2a544:	cmp	r3, #1
   2a548:	movhi	r3, r5
   2a54c:	ldrhi	r2, [pc, #-1608]	; 29f0c <__flatcc_fb_build_schema@@Base+0x10f8>
   2a550:	bhi	2a570 <__flatcc_fb_build_schema@@Base+0x175c>
   2a554:	mov	r3, #0
   2a558:	str	r3, [fp, #400]	; 0x190
   2a55c:	b	290d8 <__flatcc_fb_build_schema@@Base+0x2c4>
   2a560:	cmp	r3, #0
   2a564:	beq	2a554 <__flatcc_fb_build_schema@@Base+0x1740>
   2a568:	ldr	r2, [pc, #-1632]	; 29f10 <__flatcc_fb_build_schema@@Base+0x10fc>
   2a56c:	mov	r3, r5
   2a570:	ldr	r1, [fp, #400]	; 0x190
   2a574:	mov	r0, fp
   2a578:	bl	25ca8 <error_ref_sym@@Base>
   2a57c:	b	2a554 <__flatcc_fb_build_schema@@Base+0x1740>
   2a580:	strh	r0, [r5, #104]	; 0x68
   2a584:	b	291cc <__flatcc_fb_build_schema@@Base+0x3b8>
   2a588:	ldr	r2, [sp, #32]
   2a58c:	cmp	r2, #0
   2a590:	beq	2945c <__flatcc_fb_build_schema@@Base+0x648>
   2a594:	mov	r7, r3
   2a598:	b	2a140 <__flatcc_fb_build_schema@@Base+0x132c>
   2a59c:	mov	r3, #0
   2a5a0:	push	{r0, r1, r2, lr}
   2a5a4:	str	r3, [sp, #4]
   2a5a8:	str	r3, [sp]
   2a5ac:	bl	24ea4 <__flatcc_error_report@@Base>
   2a5b0:	add	sp, sp, #12
   2a5b4:	pop	{pc}		; (ldr pc, [sp], #4)

0002a5b8 <__flatcc_fb_coerce_scalar_type@@Base>:
   2a5b8:	ldrh	ip, [r3, #8]
   2a5bc:	cmp	ip, #0
   2a5c0:	bne	2a5cc <__flatcc_fb_coerce_scalar_type@@Base+0x14>
   2a5c4:	mov	r0, #0
   2a5c8:	bx	lr
   2a5cc:	cmp	ip, #4
   2a5d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a5d4:	vpush	{d8}
   2a5d8:	bne	2a5f0 <__flatcc_fb_coerce_scalar_type@@Base+0x38>
   2a5dc:	ldrd	r4, [r3]
   2a5e0:	cmp	r4, #0
   2a5e4:	sbcs	ip, r5, #0
   2a5e8:	movge	ip, #5
   2a5ec:	strhge	ip, [r3, #8]
   2a5f0:	ldrh	ip, [r3, #8]
   2a5f4:	cmp	ip, #1
   2a5f8:	beq	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a5fc:	cmp	r2, #5
   2a600:	mov	r4, r3
   2a604:	sub	r3, ip, #6
   2a608:	clz	r3, r3
   2a60c:	lsr	r3, r3, #5
   2a610:	moveq	r3, #0
   2a614:	cmp	r3, #0
   2a618:	mov	sl, r1
   2a61c:	mov	r5, r0
   2a620:	sub	r2, r2, #1
   2a624:	beq	2a668 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   2a628:	ldr	r3, [r0, #144]	; 0x90
   2a62c:	cmp	r3, #0
   2a630:	beq	2a668 <__flatcc_fb_coerce_scalar_type@@Base+0xb0>
   2a634:	ldrb	r0, [r4]
   2a638:	mov	r1, #0
   2a63c:	cmp	r1, #0
   2a640:	mov	r3, #5
   2a644:	cmpeq	r0, #1
   2a648:	strh	r3, [r4, #8]
   2a64c:	strd	r0, [r4]
   2a650:	bls	2a9c8 <__flatcc_fb_coerce_scalar_type@@Base+0x410>
   2a654:	ldr	r3, [pc, #932]	; 2aa00 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   2a658:	mov	r2, #52	; 0x34
   2a65c:	ldr	r1, [pc, #928]	; 2aa04 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2a660:	ldr	r0, [pc, #928]	; 2aa08 <__flatcc_fb_coerce_scalar_type@@Base+0x450>
   2a664:	bl	141a4 <__assert_fail@plt>
   2a668:	cmp	r2, #10
   2a66c:	ldrls	pc, [pc, r2, lsl #2]
   2a670:	b	2a9c0 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2a674:	andeq	sl, r2, r0, lsr #13
   2a678:			; <UNDEFINED> instruction: 0x0002a6b4
   2a67c:	andeq	sl, r2, r0, lsl #14
   2a680:	andeq	sl, r2, r0, lsr r7
   2a684:	muleq	r2, r4, r8
   2a688:	andeq	sl, r2, r8, asr r7
   2a68c:	muleq	r2, r8, r7
   2a690:	andeq	sl, r2, ip, ror #15
   2a694:	andeq	sl, r2, r0, asr #16
   2a698:	ldrdeq	sl, [r2], -r0
   2a69c:	andeq	sl, r2, ip, asr #18
   2a6a0:	cmp	ip, #5
   2a6a4:	ldrne	r2, [pc, #864]	; 2aa0c <__flatcc_fb_coerce_scalar_type@@Base+0x454>
   2a6a8:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a6ac:	mov	r0, #0
   2a6b0:	b	2a6f8 <__flatcc_fb_coerce_scalar_type@@Base+0x140>
   2a6b4:	ldrh	r3, [r4, #8]
   2a6b8:	cmp	r3, #5
   2a6bc:	ldrne	r2, [pc, #844]	; 2aa10 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   2a6c0:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a6c4:	ldrd	r2, [r4]
   2a6c8:	mov	r1, #0
   2a6cc:	mvn	r0, #0
   2a6d0:	cmp	r3, r1
   2a6d4:	cmpeq	r2, r0
   2a6d8:	ldrhi	r2, [pc, #820]	; 2aa14 <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   2a6dc:	bls	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a6e0:	mov	r0, r5
   2a6e4:	ldr	r1, [sl, #4]
   2a6e8:	bl	2a59c <__flatcc_fb_build_schema@@Base+0x1788>
   2a6ec:	mvn	r0, #0
   2a6f0:	mov	r3, #1
   2a6f4:	strh	r3, [r4, #8]
   2a6f8:	vpop	{d8}
   2a6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a700:	ldrh	r3, [r4, #8]
   2a704:	cmp	r3, #5
   2a708:	ldrne	r2, [pc, #776]	; 2aa18 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2a70c:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a710:	ldrd	r2, [r4]
   2a714:	ldr	r0, [pc, #768]	; 2aa1c <__flatcc_fb_coerce_scalar_type@@Base+0x464>
   2a718:	mov	r1, #0
   2a71c:	cmp	r3, r1
   2a720:	cmpeq	r2, r0
   2a724:	ldrhi	r2, [pc, #756]	; 2aa20 <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   2a728:	bls	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a72c:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a730:	ldrh	r3, [r4, #8]
   2a734:	cmp	r3, #5
   2a738:	ldrne	r2, [pc, #740]	; 2aa24 <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
   2a73c:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a740:	ldrd	r2, [r4]
   2a744:	cmp	r3, #0
   2a748:	cmpeq	r2, #255	; 0xff
   2a74c:	ldrhi	r2, [pc, #724]	; 2aa28 <__flatcc_fb_coerce_scalar_type@@Base+0x470>
   2a750:	bls	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a754:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a758:	ldrh	r3, [r4, #8]
   2a75c:	cmp	r3, #4
   2a760:	beq	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a764:	cmp	r3, #5
   2a768:	bne	2a790 <__flatcc_fb_coerce_scalar_type@@Base+0x1d8>
   2a76c:	ldrd	r2, [r4]
   2a770:	cmp	r2, #0
   2a774:	sbcs	r1, r3, #0
   2a778:	ldrlt	r2, [pc, #684]	; 2aa2c <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   2a77c:	blt	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a780:	strd	r2, [r4]
   2a784:	mov	r3, #4
   2a788:	strh	r3, [r4, #8]
   2a78c:	b	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a790:	ldr	r2, [pc, #664]	; 2aa30 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2a794:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a798:	ldrh	r3, [r4, #8]
   2a79c:	cmp	r3, #4
   2a7a0:	bne	2a7c4 <__flatcc_fb_coerce_scalar_type@@Base+0x20c>
   2a7a4:	ldrd	r2, [r4]
   2a7a8:	mov	r0, #-2147483648	; 0x80000000
   2a7ac:	mvn	r1, #0
   2a7b0:	cmp	r2, r0
   2a7b4:	sbcs	r3, r3, r1
   2a7b8:	ldrlt	r2, [pc, #628]	; 2aa34 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2a7bc:	bge	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a7c0:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a7c4:	cmp	r3, #5
   2a7c8:	bne	2a7e4 <__flatcc_fb_coerce_scalar_type@@Base+0x22c>
   2a7cc:	ldrd	r2, [r4]
   2a7d0:	cmp	r2, #-2147483648	; 0x80000000
   2a7d4:	sbcs	r3, r3, #0
   2a7d8:	ldrge	r2, [pc, #600]	; 2aa38 <__flatcc_fb_coerce_scalar_type@@Base+0x480>
   2a7dc:	blt	2a784 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   2a7e0:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a7e4:	ldr	r2, [pc, #592]	; 2aa3c <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   2a7e8:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a7ec:	ldrh	r3, [r4, #8]
   2a7f0:	cmp	r3, #4
   2a7f4:	bne	2a818 <__flatcc_fb_coerce_scalar_type@@Base+0x260>
   2a7f8:	ldrd	r2, [r4]
   2a7fc:	ldr	r0, [pc, #572]	; 2aa40 <__flatcc_fb_coerce_scalar_type@@Base+0x488>
   2a800:	mvn	r1, #0
   2a804:	cmp	r2, r0
   2a808:	sbcs	r3, r3, r1
   2a80c:	ldrlt	r2, [pc, #560]	; 2aa44 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   2a810:	bge	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a814:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a818:	cmp	r3, #5
   2a81c:	bne	2a838 <__flatcc_fb_coerce_scalar_type@@Base+0x280>
   2a820:	ldrd	r2, [r4]
   2a824:	cmp	r2, #32768	; 0x8000
   2a828:	sbcs	r3, r3, #0
   2a82c:	ldrge	r2, [pc, #532]	; 2aa48 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
   2a830:	blt	2a784 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   2a834:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a838:	ldr	r2, [pc, #524]	; 2aa4c <__flatcc_fb_coerce_scalar_type@@Base+0x494>
   2a83c:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a840:	ldrh	r3, [r4, #8]
   2a844:	cmp	r3, #4
   2a848:	bne	2a86c <__flatcc_fb_coerce_scalar_type@@Base+0x2b4>
   2a84c:	ldrd	r2, [r4]
   2a850:	mvn	r0, #127	; 0x7f
   2a854:	mvn	r1, #0
   2a858:	cmp	r2, r0
   2a85c:	sbcs	r3, r3, r1
   2a860:	ldrlt	r2, [pc, #488]	; 2aa50 <__flatcc_fb_coerce_scalar_type@@Base+0x498>
   2a864:	bge	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a868:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a86c:	cmp	r3, #5
   2a870:	bne	2a88c <__flatcc_fb_coerce_scalar_type@@Base+0x2d4>
   2a874:	ldrd	r2, [r4]
   2a878:	cmp	r2, #128	; 0x80
   2a87c:	sbcs	r3, r3, #0
   2a880:	ldrge	r2, [pc, #460]	; 2aa54 <__flatcc_fb_coerce_scalar_type@@Base+0x49c>
   2a884:	blt	2a784 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   2a888:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a88c:	ldr	r2, [pc, #452]	; 2aa58 <__flatcc_fb_coerce_scalar_type@@Base+0x4a0>
   2a890:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a894:	cmp	ip, #5
   2a898:	bne	2a8c0 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   2a89c:	ldr	r3, [r5, #144]	; 0x90
   2a8a0:	cmp	r3, #0
   2a8a4:	beq	2a8c8 <__flatcc_fb_coerce_scalar_type@@Base+0x310>
   2a8a8:	ldrd	r2, [r4]
   2a8ac:	cmp	r3, #0
   2a8b0:	cmpeq	r2, #1
   2a8b4:	ldrhi	r2, [pc, #416]	; 2aa5c <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   2a8b8:	bls	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a8bc:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a8c0:	cmp	ip, #6
   2a8c4:	beq	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a8c8:	ldr	r2, [pc, #400]	; 2aa60 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2a8cc:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a8d0:	ldrh	r3, [r4, #8]
   2a8d4:	cmp	r3, #4
   2a8d8:	beq	2a8f4 <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   2a8dc:	cmp	r3, #5
   2a8e0:	beq	2a92c <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2a8e4:	cmp	r3, #3
   2a8e8:	ldrne	r2, [pc, #372]	; 2aa64 <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   2a8ec:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a8f0:	b	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a8f4:	ldrd	r6, [r4]
   2a8f8:	mov	r0, r6
   2a8fc:	mov	r1, r7
   2a900:	bl	2f9fc <fb_value_set_visit@@Base+0x584>
   2a904:	mov	r8, r0
   2a908:	mov	r9, r1
   2a90c:	bl	2fd24 <fb_value_set_visit@@Base+0x8ac>
   2a910:	cmp	r7, r1
   2a914:	cmpeq	r6, r0
   2a918:	ldrne	r2, [pc, #328]	; 2aa68 <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   2a91c:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a920:	strd	r8, [r4]
   2a924:	mov	r3, #3
   2a928:	b	2a788 <__flatcc_fb_coerce_scalar_type@@Base+0x1d0>
   2a92c:	ldrd	r6, [r4]
   2a930:	mov	r0, r6
   2a934:	mov	r1, r7
   2a938:	bl	2f9e8 <fb_value_set_visit@@Base+0x570>
   2a93c:	mov	r8, r0
   2a940:	mov	r9, r1
   2a944:	bl	2fd98 <fb_value_set_visit@@Base+0x920>
   2a948:	b	2a910 <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   2a94c:	ldrh	r3, [r4, #8]
   2a950:	cmp	r3, #4
   2a954:	beq	2a970 <__flatcc_fb_coerce_scalar_type@@Base+0x3b8>
   2a958:	cmp	r3, #5
   2a95c:	beq	2a9a4 <__flatcc_fb_coerce_scalar_type@@Base+0x3ec>
   2a960:	cmp	r3, #3
   2a964:	ldrne	r2, [pc, #256]	; 2aa6c <__flatcc_fb_coerce_scalar_type@@Base+0x4b4>
   2a968:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a96c:	b	2a6ac <__flatcc_fb_coerce_scalar_type@@Base+0xf4>
   2a970:	ldrd	r6, [r4]
   2a974:	mov	r0, r6
   2a978:	mov	r1, r7
   2a97c:	bl	2fc30 <fb_value_set_visit@@Base+0x7b8>
   2a980:	vmov	s16, r0
   2a984:	bl	2fcf8 <fb_value_set_visit@@Base+0x880>
   2a988:	cmp	r7, r1
   2a98c:	cmpeq	r6, r0
   2a990:	ldrne	r2, [pc, #216]	; 2aa70 <__flatcc_fb_coerce_scalar_type@@Base+0x4b8>
   2a994:	bne	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a998:	vcvt.f64.f32	d8, s16
   2a99c:	vstr	d8, [r4]
   2a9a0:	b	2a924 <__flatcc_fb_coerce_scalar_type@@Base+0x36c>
   2a9a4:	ldrd	r6, [r4]
   2a9a8:	mov	r0, r6
   2a9ac:	mov	r1, r7
   2a9b0:	bl	2fc20 <fb_value_set_visit@@Base+0x7a8>
   2a9b4:	vmov	s16, r0
   2a9b8:	bl	2fd50 <fb_value_set_visit@@Base+0x8d8>
   2a9bc:	b	2a988 <__flatcc_fb_coerce_scalar_type@@Base+0x3d0>
   2a9c0:	ldr	r2, [pc, #172]	; 2aa74 <__flatcc_fb_coerce_scalar_type@@Base+0x4bc>
   2a9c4:	b	2a6e0 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
   2a9c8:	cmp	r2, #10
   2a9cc:	ldrls	pc, [pc, r2, lsl #2]
   2a9d0:	b	2a9c0 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2a9d4:	andeq	sl, r2, ip, lsr #13
   2a9d8:			; <UNDEFINED> instruction: 0x0002a6b4
   2a9dc:	andeq	sl, r2, r0, lsl #14
   2a9e0:	andeq	sl, r2, r0, lsr r7
   2a9e4:	andeq	sl, r2, r0, asr #19
   2a9e8:	andeq	sl, r2, r8, asr r7
   2a9ec:	muleq	r2, r8, r7
   2a9f0:	andeq	sl, r2, ip, ror #15
   2a9f4:	andeq	sl, r2, r0, asr #16
   2a9f8:	ldrdeq	sl, [r2], -r0
   2a9fc:	andeq	sl, r2, ip, asr #18
   2aa00:	andeq	sl, r4, r8, ror r3
   2aa04:	muleq	r4, r7, r3
   2aa08:	ldrdeq	sl, [r4], -sp
   2aa0c:	strdeq	sl, [r4], -ip
   2aa10:	andeq	sl, r4, r0, lsr r4
   2aa14:	andeq	sl, r4, r8, ror #8
   2aa18:	andeq	sl, r4, r5, lsl #9
   2aa1c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   2aa20:			; <UNDEFINED> instruction: 0x0004a4bf
   2aa24:	ldrdeq	sl, [r4], -lr
   2aa28:	andeq	sl, r4, r6, lsl r5
   2aa2c:	andeq	sl, r4, r3, lsr r5
   2aa30:	andeq	sl, r4, r2, asr r5
   2aa34:	andeq	sl, r4, ip, ror r5
   2aa38:	muleq	r4, r8, r5
   2aa3c:			; <UNDEFINED> instruction: 0x0004a5b3
   2aa40:			; <UNDEFINED> instruction: 0xffff8000
   2aa44:	andeq	sl, r4, r0, ror #11
   2aa48:	strdeq	sl, [r4], -lr
   2aa4c:	andeq	sl, r4, fp, lsl r6
   2aa50:	andeq	sl, r4, sl, asr #12
   2aa54:	andeq	sl, r4, r6, ror #12
   2aa58:	andeq	sl, r4, r1, lsl #13
   2aa5c:	andeq	sl, r4, lr, lsr #13
   2aa60:	andeq	sl, r4, ip, ror #13
   2aa64:	andeq	sl, r4, r2, asr r7
   2aa68:	andeq	sl, r4, r2, lsr #14
   2aa6c:			; <UNDEFINED> instruction: 0x0004a7ba
   2aa70:	andeq	sl, r4, fp, lsl #15
   2aa74:	strdeq	sl, [r4], -r2
   2aa78:	ldr	ip, [r0, #28]
   2aa7c:	ldr	r3, [r0, #64]	; 0x40
   2aa80:	ldr	r2, [r0, #60]	; 0x3c
   2aa84:	sub	r3, r3, ip
   2aa88:	cmp	r3, r1
   2aa8c:	strls	r3, [r0, #24]
   2aa90:	strhi	r1, [r0, #24]
   2aa94:	ldr	r3, [r0, #32]
   2aa98:	add	r2, r2, ip
   2aa9c:	str	r2, [r0, #16]
   2aaa0:	str	r1, [r3, #4]
   2aaa4:	bx	lr
   2aaa8:	push	{r0, r1, r4, r5, r6, lr}
   2aaac:	mov	r6, r2
   2aab0:	ldr	r2, [r0, #28]
   2aab4:	mov	r3, #1
   2aab8:	str	r3, [sp]
   2aabc:	add	r2, r1, r2
   2aac0:	ldr	r5, [r0, #48]	; 0x30
   2aac4:	add	r1, r0, #60	; 0x3c
   2aac8:	mov	r4, r0
   2aacc:	ldr	r0, [r0, #40]	; 0x28
   2aad0:	blx	r5
   2aad4:	subs	r5, r0, #0
   2aad8:	mvnne	r5, #0
   2aadc:	bne	2aaec <__flatcc_fb_coerce_scalar_type@@Base+0x534>
   2aae0:	mov	r1, r6
   2aae4:	mov	r0, r4
   2aae8:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2aaec:	mov	r0, r5
   2aaf0:	add	sp, sp, #8
   2aaf4:	pop	{r4, r5, r6, pc}
   2aaf8:	push	{r4, r5, r6, lr}
   2aafc:	mov	r4, r0
   2ab00:	ldr	r5, [r0, #20]
   2ab04:	ldr	r3, [r0, #24]
   2ab08:	add	r1, r5, r1
   2ab0c:	cmp	r1, r3
   2ab10:	str	r1, [r0, #20]
   2ab14:	bcs	2ab24 <__flatcc_fb_coerce_scalar_type@@Base+0x56c>
   2ab18:	ldr	r0, [r4, #16]
   2ab1c:	add	r0, r0, r5
   2ab20:	pop	{r4, r5, r6, pc}
   2ab24:	mvn	r2, #3
   2ab28:	add	r1, r1, #1
   2ab2c:	bl	2aaa8 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2ab30:	cmp	r0, #0
   2ab34:	beq	2ab18 <__flatcc_fb_coerce_scalar_type@@Base+0x560>
   2ab38:	mov	r0, #0
   2ab3c:	pop	{r4, r5, r6, pc}
   2ab40:	push	{r4, lr}
   2ab44:	mov	r4, r0
   2ab48:	ldr	r2, [r0, #20]
   2ab4c:	mov	r1, #0
   2ab50:	ldr	r0, [r0, #16]
   2ab54:	bl	140fc <memset@plt>
   2ab58:	ldr	r3, [r4, #32]
   2ab5c:	mov	r0, r4
   2ab60:	ldr	r2, [r3, #8]
   2ab64:	ldr	r1, [r3, #4]
   2ab68:	str	r2, [r4, #20]
   2ab6c:	ldr	r2, [r3]
   2ab70:	str	r2, [r4, #28]
   2ab74:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2ab78:	ldrh	r3, [r4, #130]	; 0x82
   2ab7c:	ldrh	r2, [r4, #128]	; 0x80
   2ab80:	cmp	r2, r3
   2ab84:	strhcc	r3, [r4, #128]	; 0x80
   2ab88:	ldr	r3, [r4, #32]
   2ab8c:	sub	r3, r3, #36	; 0x24
   2ab90:	ldrh	r2, [r3, #48]	; 0x30
   2ab94:	str	r3, [r4, #32]
   2ab98:	ldr	r3, [r4, #156]	; 0x9c
   2ab9c:	strh	r2, [r4, #130]	; 0x82
   2aba0:	sub	r3, r3, #1
   2aba4:	str	r3, [r4, #156]	; 0x9c
   2aba8:	pop	{r4, pc}
   2abac:	ldr	r3, [r0, #20]
   2abb0:	mov	r2, r1
   2abb4:	sub	r3, r3, r1
   2abb8:	str	r3, [r0, #20]
   2abbc:	ldr	r0, [r0, #16]
   2abc0:	mov	r1, #0
   2abc4:	add	r0, r0, r3
   2abc8:	b	140fc <memset@plt>
   2abcc:	push	{r4, r5, r6, lr}
   2abd0:	mov	r6, r1
   2abd4:	mov	r1, r2
   2abd8:	mov	r4, r2
   2abdc:	bl	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2abe0:	subs	r5, r0, #0
   2abe4:	beq	2abf4 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   2abe8:	mov	r2, r4
   2abec:	mov	r1, r6
   2abf0:	bl	14024 <memcpy@plt>
   2abf4:	mov	r0, r5
   2abf8:	pop	{r4, r5, r6, pc}
   2abfc:	push	{r0, r1, r4, lr}
   2ac00:	add	r3, sp, #8
   2ac04:	cmp	r0, #4
   2ac08:	mov	r4, #0
   2ac0c:	mov	r2, r1
   2ac10:	str	r4, [r3, #-4]!
   2ac14:	movcs	r1, r0
   2ac18:	movcc	r1, #4
   2ac1c:	mov	r0, r3
   2ac20:	bl	140f0 <posix_memalign@plt>
   2ac24:	cmp	r0, r4
   2ac28:	beq	2ac40 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   2ac2c:	ldr	r0, [sp, #4]
   2ac30:	cmp	r0, r4
   2ac34:	beq	2ac40 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   2ac38:	bl	14018 <free@plt>
   2ac3c:	str	r4, [sp, #4]
   2ac40:	ldr	r0, [sp, #4]
   2ac44:	add	sp, sp, #8
   2ac48:	pop	{r4, pc}

0002ac4c <flatcc_builder_default_alloc@@Base>:
   2ac4c:	push	{r4, r5, r6, r7, r8, lr}
   2ac50:	subs	r6, r2, #0
   2ac54:	mov	r5, r1
   2ac58:	bne	2ac7c <flatcc_builder_default_alloc@@Base+0x30>
   2ac5c:	ldr	r0, [r1]
   2ac60:	cmp	r0, #0
   2ac64:	popeq	{r4, r5, r6, r7, r8, pc}
   2ac68:	bl	14018 <free@plt>
   2ac6c:	str	r6, [r5]
   2ac70:	str	r6, [r5, #4]
   2ac74:	mov	r0, #0
   2ac78:	pop	{r4, r5, r6, r7, r8, pc}
   2ac7c:	ldr	r2, [sp, #24]
   2ac80:	mov	r7, r3
   2ac84:	sub	r2, r2, #1
   2ac88:	cmp	r2, #6
   2ac8c:	ldrls	pc, [pc, r2, lsl #2]
   2ac90:	b	2ad24 <flatcc_builder_default_alloc@@Base+0xd8>
   2ac94:	andeq	sl, r2, ip, lsr #26
   2ac98:	andeq	sl, r2, r4, lsr #26
   2ac9c:	andeq	sl, r2, r4, lsr #26
   2aca0:	andeq	sl, r2, r4, lsl sp
   2aca4:			; <UNDEFINED> instruction: 0x0002acb0
   2aca8:	andeq	sl, r2, r4, lsr #26
   2acac:	andeq	sl, r2, ip, lsl sp
   2acb0:	mov	r4, r6
   2acb4:	cmp	r6, r4
   2acb8:	bhi	2ad34 <flatcc_builder_default_alloc@@Base+0xe8>
   2acbc:	ldr	r2, [r5, #4]
   2acc0:	cmp	r6, r2
   2acc4:	bhi	2acd0 <flatcc_builder_default_alloc@@Base+0x84>
   2acc8:	cmp	r4, r2, lsr #1
   2accc:	bls	2ac74 <flatcc_builder_default_alloc@@Base+0x28>
   2acd0:	mov	r1, r4
   2acd4:	ldr	r0, [r5]
   2acd8:	bl	14054 <realloc@plt>
   2acdc:	subs	r6, r0, #0
   2ace0:	beq	2ad3c <flatcc_builder_default_alloc@@Base+0xf0>
   2ace4:	cmp	r7, #0
   2ace8:	beq	2ad08 <flatcc_builder_default_alloc@@Base+0xbc>
   2acec:	ldr	r0, [r5, #4]
   2acf0:	cmp	r4, r0
   2acf4:	bls	2ad08 <flatcc_builder_default_alloc@@Base+0xbc>
   2acf8:	sub	r2, r4, r0
   2acfc:	mov	r1, #0
   2ad00:	add	r0, r6, r0
   2ad04:	bl	140fc <memset@plt>
   2ad08:	str	r6, [r5]
   2ad0c:	str	r4, [r5, #4]
   2ad10:	b	2ac74 <flatcc_builder_default_alloc@@Base+0x28>
   2ad14:	mov	r4, #288	; 0x120
   2ad18:	b	2acb4 <flatcc_builder_default_alloc@@Base+0x68>
   2ad1c:	mov	r4, #64	; 0x40
   2ad20:	b	2acb4 <flatcc_builder_default_alloc@@Base+0x68>
   2ad24:	mov	r4, #32
   2ad28:	b	2acb4 <flatcc_builder_default_alloc@@Base+0x68>
   2ad2c:	mov	r4, #256	; 0x100
   2ad30:	b	2acb4 <flatcc_builder_default_alloc@@Base+0x68>
   2ad34:	lsl	r4, r4, #1
   2ad38:	b	2acb4 <flatcc_builder_default_alloc@@Base+0x68>
   2ad3c:	mvn	r0, #0
   2ad40:	pop	{r4, r5, r6, r7, r8, pc}
   2ad44:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2ad48:	add	r6, r0, #52	; 0x34
   2ad4c:	mov	r4, r1
   2ad50:	add	r1, r6, r1, lsl #3
   2ad54:	mov	r5, r2
   2ad58:	add	r2, r2, r3
   2ad5c:	ldr	r3, [r1, #4]
   2ad60:	cmp	r2, r3
   2ad64:	bls	2ad98 <flatcc_builder_default_alloc@@Base+0x14c>
   2ad68:	str	r4, [sp]
   2ad6c:	ldr	r3, [sp, #32]
   2ad70:	ldr	r7, [r0, #48]	; 0x30
   2ad74:	ldr	r0, [r0, #40]	; 0x28
   2ad78:	blx	r7
   2ad7c:	cmp	r0, #0
   2ad80:	beq	2ad98 <flatcc_builder_default_alloc@@Base+0x14c>
   2ad84:	ldr	r3, [pc, #28]	; 2ada8 <flatcc_builder_default_alloc@@Base+0x15c>
   2ad88:	mov	r2, #308	; 0x134
   2ad8c:	ldr	r1, [pc, #24]	; 2adac <flatcc_builder_default_alloc@@Base+0x160>
   2ad90:	ldr	r0, [pc, #24]	; 2adb0 <flatcc_builder_default_alloc@@Base+0x164>
   2ad94:	bl	141a4 <__assert_fail@plt>
   2ad98:	ldr	r0, [r6, r4, lsl #3]
   2ad9c:	add	r0, r0, r5
   2ada0:	add	sp, sp, #12
   2ada4:	pop	{r4, r5, r6, r7, pc}
   2ada8:	andeq	sl, r4, r7, lsl #16
   2adac:	andeq	sl, r4, r6, lsl #30
   2adb0:	andeq	sl, r3, r9, asr #3
   2adb4:	ldr	r2, [r0, #156]	; 0x9c
   2adb8:	ldr	r3, [r0, #160]	; 0xa0
   2adbc:	push	{r0, r1, r4, r5, r6, lr}
   2adc0:	mov	r5, r1
   2adc4:	add	r1, r2, #1
   2adc8:	cmp	r1, r3
   2adcc:	mov	r4, r0
   2add0:	str	r1, [r0, #156]	; 0x9c
   2add4:	ble	2ae84 <flatcc_builder_default_alloc@@Base+0x238>
   2add8:	ldr	r3, [r0, #176]	; 0xb0
   2addc:	cmp	r3, #0
   2ade0:	cmpgt	r1, r3
   2ade4:	movgt	r3, #1
   2ade8:	movle	r3, #0
   2adec:	ble	2adfc <flatcc_builder_default_alloc@@Base+0x1b0>
   2adf0:	mvn	r0, #0
   2adf4:	add	sp, sp, #8
   2adf8:	pop	{r4, r5, r6, pc}
   2adfc:	mov	r6, #36	; 0x24
   2ae00:	str	r3, [sp]
   2ae04:	mul	r2, r6, r2
   2ae08:	mov	r3, r6
   2ae0c:	mov	r1, #4
   2ae10:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2ae14:	cmp	r0, #0
   2ae18:	str	r0, [r4, #32]
   2ae1c:	beq	2adf0 <flatcc_builder_default_alloc@@Base+0x1a4>
   2ae20:	mov	r1, r6
   2ae24:	ldr	r0, [r4, #88]	; 0x58
   2ae28:	bl	2f47c <fb_value_set_visit@@Base+0x4>
   2ae2c:	ldr	r3, [r4, #176]	; 0xb0
   2ae30:	cmp	r3, #0
   2ae34:	cmpgt	r0, r3
   2ae38:	str	r0, [r4, #160]	; 0xa0
   2ae3c:	strgt	r3, [r4, #160]	; 0xa0
   2ae40:	ldrh	r1, [r4, #130]	; 0x82
   2ae44:	ldr	r2, [r4, #32]
   2ae48:	ldr	r3, [r4, #20]
   2ae4c:	mvn	r0, #3
   2ae50:	strh	r1, [r2, #12]
   2ae54:	ldr	r1, [r4, #28]
   2ae58:	str	r3, [r2, #8]
   2ae5c:	add	r3, r3, r1
   2ae60:	add	r3, r3, #7
   2ae64:	strh	r5, [r4, #130]	; 0x82
   2ae68:	bic	r3, r3, #7
   2ae6c:	str	r0, [r2, #4]
   2ae70:	mov	r0, #0
   2ae74:	str	r1, [r2]
   2ae78:	str	r3, [r4, #28]
   2ae7c:	str	r0, [r4, #20]
   2ae80:	b	2adf4 <flatcc_builder_default_alloc@@Base+0x1a8>
   2ae84:	ldr	r3, [r0, #32]
   2ae88:	add	r3, r3, #36	; 0x24
   2ae8c:	str	r3, [r0, #32]
   2ae90:	b	2ae40 <flatcc_builder_default_alloc@@Base+0x1f4>
   2ae94:	ldr	r3, [r0, #32]
   2ae98:	push	{r0, r1, r2, r4, r5, lr}
   2ae9c:	add	r1, r1, #2
   2aea0:	ldr	r2, [r3, #16]
   2aea4:	lsl	r5, r1, #1
   2aea8:	ldrh	r1, [r3, #28]
   2aeac:	mov	r3, #1
   2aeb0:	str	r3, [sp]
   2aeb4:	mov	r3, r5
   2aeb8:	add	r2, r2, r1, lsl #1
   2aebc:	mov	r1, #0
   2aec0:	mov	r4, r0
   2aec4:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2aec8:	cmp	r0, #0
   2aecc:	streq	r0, [r4, #4]
   2aed0:	mvneq	r0, #0
   2aed4:	beq	2af10 <flatcc_builder_default_alloc@@Base+0x2c4>
   2aed8:	ldr	r2, [r4, #32]
   2aedc:	add	r0, r0, #4
   2aee0:	mov	r3, #0
   2aee4:	str	r0, [r4, #4]
   2aee8:	str	r3, [sp]
   2aeec:	mov	r1, #3
   2aef0:	sub	r3, r5, #3
   2aef4:	ldr	r2, [r2, #20]
   2aef8:	mov	r0, r4
   2aefc:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2af00:	cmp	r0, #0
   2af04:	str	r0, [r4]
   2af08:	movne	r0, #0
   2af0c:	mvneq	r0, #0
   2af10:	add	sp, sp, #12
   2af14:	pop	{r4, r5, pc}
   2af18:	push	{r0, r1, r2, r4, r5, lr}
   2af1c:	ldr	r3, [r1]
   2af20:	ldr	r4, [r0, #140]	; 0x8c
   2af24:	add	r2, r3, r4
   2af28:	cmp	r4, r2
   2af2c:	str	r2, [r0, #140]	; 0x8c
   2af30:	ble	2af48 <flatcc_builder_default_alloc@@Base+0x2fc>
   2af34:	ldr	r3, [pc, #68]	; 2af80 <flatcc_builder_default_alloc@@Base+0x334>
   2af38:	ldr	r2, [pc, #68]	; 2af84 <flatcc_builder_default_alloc@@Base+0x338>
   2af3c:	ldr	r1, [pc, #68]	; 2af88 <flatcc_builder_default_alloc@@Base+0x33c>
   2af40:	ldr	r0, [pc, #68]	; 2af8c <flatcc_builder_default_alloc@@Base+0x340>
   2af44:	bl	141a4 <__assert_fail@plt>
   2af48:	str	r3, [sp]
   2af4c:	add	r1, r1, #8
   2af50:	ldr	r5, [r0, #44]	; 0x2c
   2af54:	ldr	r2, [r1, #-4]
   2af58:	mov	r3, r4
   2af5c:	ldr	r0, [r0, #36]	; 0x24
   2af60:	blx	r5
   2af64:	cmp	r0, #0
   2af68:	ldrne	r3, [pc, #16]	; 2af80 <flatcc_builder_default_alloc@@Base+0x334>
   2af6c:	ldrne	r2, [pc, #28]	; 2af90 <flatcc_builder_default_alloc@@Base+0x344>
   2af70:	bne	2af3c <flatcc_builder_default_alloc@@Base+0x2f0>
   2af74:	add	r0, r4, #1
   2af78:	add	sp, sp, #12
   2af7c:	pop	{r4, r5, pc}
   2af80:	andeq	sl, r4, r6, lsl r8
   2af84:	andeq	r0, r0, r1, lsr #5
   2af88:	andeq	sl, r4, r6, lsl #30
   2af8c:	andeq	sl, r3, r9, asr #3
   2af90:	andeq	r0, r0, r5, lsr #5
   2af94:	cmp	r2, #0
   2af98:	bne	2afa8 <flatcc_builder_default_alloc@@Base+0x35c>
   2af9c:	ldrh	r2, [r0, #132]	; 0x84
   2afa0:	cmp	r2, #0
   2afa4:	moveq	r2, #1
   2afa8:	ldrh	ip, [r1]
   2afac:	cmp	ip, #3
   2afb0:	movls	ip, #4
   2afb4:	strhls	ip, [r1]
   2afb8:	ldrh	ip, [r1]
   2afbc:	cmp	ip, r2
   2afc0:	strhcc	r2, [r1]
   2afc4:	cmp	r3, #0
   2afc8:	bne	2b02c <flatcc_builder_default_alloc@@Base+0x3e0>
   2afcc:	ldr	r3, [r0, #140]	; 0x8c
   2afd0:	sub	r2, r2, #1
   2afd4:	ands	r2, r2, r3
   2afd8:	beq	2b02c <flatcc_builder_default_alloc@@Base+0x3e0>
   2afdc:	push	{r4, lr}
   2afe0:	sub	sp, sp, #72	; 0x48
   2afe4:	ldr	r4, [pc, #72]	; 2b034 <flatcc_builder_default_alloc@@Base+0x3e8>
   2afe8:	mov	r3, #1
   2afec:	mov	r1, sp
   2aff0:	str	r2, [sp]
   2aff4:	str	r4, [sp, #8]
   2aff8:	str	r2, [sp, #12]
   2affc:	str	r3, [sp, #4]
   2b000:	bl	2af18 <flatcc_builder_default_alloc@@Base+0x2cc>
   2b004:	cmp	r0, #0
   2b008:	bne	2b020 <flatcc_builder_default_alloc@@Base+0x3d4>
   2b00c:	add	r3, r4, #512	; 0x200
   2b010:	ldr	r2, [pc, #32]	; 2b038 <flatcc_builder_default_alloc@@Base+0x3ec>
   2b014:	ldr	r1, [pc, #32]	; 2b03c <flatcc_builder_default_alloc@@Base+0x3f0>
   2b018:	ldr	r0, [pc, #32]	; 2b040 <flatcc_builder_default_alloc@@Base+0x3f4>
   2b01c:	bl	141a4 <__assert_fail@plt>
   2b020:	mov	r0, #0
   2b024:	add	sp, sp, #72	; 0x48
   2b028:	pop	{r4, pc}
   2b02c:	mov	r0, #0
   2b030:	bx	lr
   2b034:	andeq	sl, r4, r0, lsr #16
   2b038:			; <UNDEFINED> instruction: 0x000002be
   2b03c:	andeq	sl, r4, r6, lsl #30
   2b040:	andeq	sl, r3, r9, asr #3
   2b044:	ldr	r2, [r0, #136]	; 0x88
   2b048:	ldr	r3, [r1]
   2b04c:	push	{r0, r1, r4, r5, r6, lr}
   2b050:	sub	r4, r2, r3
   2b054:	cmp	r2, r4
   2b058:	bgt	2b070 <flatcc_builder_default_alloc@@Base+0x424>
   2b05c:	ldr	r3, [pc, #76]	; 2b0b0 <flatcc_builder_default_alloc@@Base+0x464>
   2b060:	ldr	r2, [pc, #76]	; 2b0b4 <flatcc_builder_default_alloc@@Base+0x468>
   2b064:	ldr	r1, [pc, #76]	; 2b0b8 <flatcc_builder_default_alloc@@Base+0x46c>
   2b068:	ldr	r0, [pc, #76]	; 2b0bc <flatcc_builder_default_alloc@@Base+0x470>
   2b06c:	bl	141a4 <__assert_fail@plt>
   2b070:	str	r3, [sp]
   2b074:	mov	r5, r0
   2b078:	ldr	r6, [r0, #44]	; 0x2c
   2b07c:	ldr	r2, [r1, #4]
   2b080:	mov	r3, r4
   2b084:	add	r1, r1, #8
   2b088:	ldr	r0, [r0, #36]	; 0x24
   2b08c:	blx	r6
   2b090:	cmp	r0, #0
   2b094:	ldrne	r3, [pc, #20]	; 2b0b0 <flatcc_builder_default_alloc@@Base+0x464>
   2b098:	ldrne	r2, [pc, #32]	; 2b0c0 <flatcc_builder_default_alloc@@Base+0x474>
   2b09c:	bne	2b064 <flatcc_builder_default_alloc@@Base+0x418>
   2b0a0:	mov	r0, r4
   2b0a4:	str	r4, [r5, #136]	; 0x88
   2b0a8:	add	sp, sp, #8
   2b0ac:	pop	{r4, r5, r6, pc}
   2b0b0:	andeq	sl, r4, pc, lsr #20
   2b0b4:	andeq	r0, r0, r7, lsl #5
   2b0b8:	andeq	sl, r4, r6, lsl #30
   2b0bc:	andeq	sl, r3, r9, asr #3
   2b0c0:	andeq	r0, r0, fp, lsl #5
   2b0c4:	ldr	r3, [r0, #20]
   2b0c8:	adds	r1, r3, r1
   2b0cc:	movcs	r3, #1
   2b0d0:	movcc	r3, #0
   2b0d4:	cmp	r1, r2
   2b0d8:	movls	r2, r3
   2b0dc:	orrhi	r2, r3, #1
   2b0e0:	cmp	r2, #0
   2b0e4:	beq	2b100 <flatcc_builder_default_alloc@@Base+0x4b4>
   2b0e8:	push	{r4, lr}
   2b0ec:	mov	r2, #892	; 0x37c
   2b0f0:	ldr	r3, [pc, #20]	; 2b10c <flatcc_builder_default_alloc@@Base+0x4c0>
   2b0f4:	ldr	r1, [pc, #20]	; 2b110 <flatcc_builder_default_alloc@@Base+0x4c4>
   2b0f8:	ldr	r0, [pc, #20]	; 2b114 <flatcc_builder_default_alloc@@Base+0x4c8>
   2b0fc:	bl	141a4 <__assert_fail@plt>
   2b100:	str	r1, [r0, #20]
   2b104:	mov	r0, r2
   2b108:	bx	lr
   2b10c:	andeq	sl, r4, sl, lsr sl
   2b110:	andeq	sl, r4, r6, lsl #30
   2b114:	andeq	sl, r4, ip, asr #30
   2b118:	ldrh	ip, [r0, #128]	; 0x80
   2b11c:	push	{r4, r5, r6, r7, lr}
   2b120:	sub	sp, sp, #84	; 0x54
   2b124:	cmp	ip, #3
   2b128:	movls	ip, #4
   2b12c:	strhls	ip, [r0, #128]	; 0x80
   2b130:	mov	ip, #4
   2b134:	add	r5, sp, ip
   2b138:	str	ip, [sp, #8]
   2b13c:	ldr	r4, [r0, #136]	; 0x88
   2b140:	str	ip, [sp, #20]
   2b144:	mov	ip, #1
   2b148:	str	ip, [sp, #12]
   2b14c:	lsls	ip, r2, #2
   2b150:	strne	ip, [sp, #28]
   2b154:	and	lr, r4, #3
   2b158:	str	r5, [sp, #16]
   2b15c:	addne	r5, ip, #4
   2b160:	movne	ip, #2
   2b164:	strne	r5, [sp, #8]
   2b168:	strne	r1, [sp, #24]
   2b16c:	strne	ip, [sp, #12]
   2b170:	cmp	lr, #0
   2b174:	str	r2, [sp, #4]
   2b178:	beq	2b1a8 <flatcc_builder_default_alloc@@Base+0x55c>
   2b17c:	ldr	ip, [sp, #8]
   2b180:	add	r5, sp, #80	; 0x50
   2b184:	add	ip, ip, lr
   2b188:	str	ip, [sp, #8]
   2b18c:	ldr	ip, [sp, #12]
   2b190:	ldr	r6, [pc, #204]	; 2b264 <flatcc_builder_default_alloc@@Base+0x618>
   2b194:	add	ip, ip, #1
   2b198:	str	ip, [sp, #12]
   2b19c:	add	r5, r5, ip, lsl #3
   2b1a0:	str	r6, [r5, #-72]	; 0xffffffb8
   2b1a4:	str	lr, [r5, #-68]	; 0xffffffbc
   2b1a8:	ldr	r5, [sp, #8]
   2b1ac:	sub	r6, r1, #4
   2b1b0:	sub	r5, r4, r5
   2b1b4:	mov	lr, r3
   2b1b8:	add	r2, r3, r2
   2b1bc:	mvn	r7, #3
   2b1c0:	cmp	r2, lr
   2b1c4:	bne	2b1d8 <flatcc_builder_default_alloc@@Base+0x58c>
   2b1c8:	add	r1, sp, #8
   2b1cc:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2b1d0:	add	sp, sp, #84	; 0x54
   2b1d4:	pop	{r4, r5, r6, r7, pc}
   2b1d8:	ldr	r4, [r6, #4]!
   2b1dc:	cmp	r4, #0
   2b1e0:	beq	2b220 <flatcc_builder_default_alloc@@Base+0x5d4>
   2b1e4:	sub	ip, r7, r6
   2b1e8:	add	ip, r1, ip
   2b1ec:	add	ip, ip, r4
   2b1f0:	sub	ip, ip, r5
   2b1f4:	cmp	r3, #0
   2b1f8:	str	ip, [r6]
   2b1fc:	beq	2b25c <flatcc_builder_default_alloc@@Base+0x610>
   2b200:	ldrb	ip, [lr]
   2b204:	cmp	ip, #0
   2b208:	bne	2b25c <flatcc_builder_default_alloc@@Base+0x610>
   2b20c:	ldr	r3, [pc, #84]	; 2b268 <flatcc_builder_default_alloc@@Base+0x61c>
   2b210:	ldr	r2, [pc, #84]	; 2b26c <flatcc_builder_default_alloc@@Base+0x620>
   2b214:	ldr	r1, [pc, #84]	; 2b270 <flatcc_builder_default_alloc@@Base+0x624>
   2b218:	ldr	r0, [pc, #84]	; 2b274 <flatcc_builder_default_alloc@@Base+0x628>
   2b21c:	bl	141a4 <__assert_fail@plt>
   2b220:	cmp	r3, #0
   2b224:	beq	2b248 <flatcc_builder_default_alloc@@Base+0x5fc>
   2b228:	ldrb	ip, [lr]
   2b22c:	cmp	ip, #0
   2b230:	beq	2b25c <flatcc_builder_default_alloc@@Base+0x610>
   2b234:	ldr	r3, [pc, #44]	; 2b268 <flatcc_builder_default_alloc@@Base+0x61c>
   2b238:	ldr	r2, [pc, #56]	; 2b278 <flatcc_builder_default_alloc@@Base+0x62c>
   2b23c:	ldr	r1, [pc, #44]	; 2b270 <flatcc_builder_default_alloc@@Base+0x624>
   2b240:	ldr	r0, [pc, #52]	; 2b27c <flatcc_builder_default_alloc@@Base+0x630>
   2b244:	b	2b21c <flatcc_builder_default_alloc@@Base+0x5d0>
   2b248:	ldr	r3, [pc, #24]	; 2b268 <flatcc_builder_default_alloc@@Base+0x61c>
   2b24c:	ldr	r2, [pc, #44]	; 2b280 <flatcc_builder_default_alloc@@Base+0x634>
   2b250:	ldr	r1, [pc, #24]	; 2b270 <flatcc_builder_default_alloc@@Base+0x624>
   2b254:	ldr	r0, [pc, #40]	; 2b284 <flatcc_builder_default_alloc@@Base+0x638>
   2b258:	b	2b21c <flatcc_builder_default_alloc@@Base+0x5d0>
   2b25c:	add	lr, lr, #1
   2b260:	b	2b1c0 <flatcc_builder_default_alloc@@Base+0x574>
   2b264:	andeq	sl, r4, r0, lsr #16
   2b268:	andeq	sl, r4, fp, asr #20
   2b26c:			; <UNDEFINED> instruction: 0x000005b1
   2b270:	andeq	sl, r4, r6, lsl #30
   2b274:	andeq	sl, r4, r7, ror #30
   2b278:			; <UNDEFINED> instruction: 0x000005b5
   2b27c:	andeq	sl, r4, r5, ror pc
   2b280:			; <UNDEFINED> instruction: 0x000005b7
   2b284:	andeq	sl, r3, r9, asr #3

0002b288 <flatcc_builder_flush_vtable_cache@@Base>:
   2b288:	ldr	r3, [r0, #116]	; 0x74
   2b28c:	cmp	r3, #0
   2b290:	bxeq	lr
   2b294:	push	{r4, lr}
   2b298:	mov	r1, #0
   2b29c:	mov	r4, r0
   2b2a0:	ldr	r2, [r0, #96]	; 0x60
   2b2a4:	ldr	r0, [r0, #92]	; 0x5c
   2b2a8:	bl	140fc <memset@plt>
   2b2ac:	mov	r3, #16
   2b2b0:	str	r3, [r4, #124]	; 0x7c
   2b2b4:	mov	r3, #0
   2b2b8:	str	r3, [r4, #120]	; 0x78
   2b2bc:	pop	{r4, pc}

0002b2c0 <flatcc_builder_custom_init@@Base>:
   2b2c0:	push	{r4, r5, r6, r7, r8, lr}
   2b2c4:	mov	r6, r1
   2b2c8:	mov	r7, r2
   2b2cc:	mov	r1, #0
   2b2d0:	mov	r2, #232	; 0xe8
   2b2d4:	mov	r4, r0
   2b2d8:	mov	r5, r3
   2b2dc:	bl	140fc <memset@plt>
   2b2e0:	cmp	r6, #0
   2b2e4:	moveq	r3, #1
   2b2e8:	addeq	r7, r4, #188	; 0xbc
   2b2ec:	ldreq	r6, [pc, #40]	; 2b31c <flatcc_builder_custom_init@@Base+0x5c>
   2b2f0:	str	r7, [r4, #36]	; 0x24
   2b2f4:	str	r6, [r4, #44]	; 0x2c
   2b2f8:	mov	r0, #0
   2b2fc:	streq	r3, [r4, #184]	; 0xb8
   2b300:	ldr	r3, [pc, #24]	; 2b320 <flatcc_builder_custom_init@@Base+0x60>
   2b304:	cmp	r5, #0
   2b308:	moveq	r5, r3
   2b30c:	ldr	r3, [sp, #24]
   2b310:	str	r5, [r4, #48]	; 0x30
   2b314:	str	r3, [r4, #40]	; 0x28
   2b318:	pop	{r4, r5, r6, r7, r8, pc}
   2b31c:	andeq	sp, r2, r0, lsr #21
   2b320:	andeq	sl, r2, ip, asr #24

0002b324 <flatcc_builder_init@@Base>:
   2b324:	push	{r4, lr}
   2b328:	mov	r2, #232	; 0xe8
   2b32c:	mov	r4, r0
   2b330:	mov	r1, #0
   2b334:	bl	140fc <memset@plt>
   2b338:	mov	r3, #1
   2b33c:	str	r3, [r4, #184]	; 0xb8
   2b340:	ldr	r3, [pc, #24]	; 2b360 <flatcc_builder_init@@Base+0x3c>
   2b344:	mov	r0, #0
   2b348:	str	r3, [r4, #48]	; 0x30
   2b34c:	add	r3, r4, #188	; 0xbc
   2b350:	str	r3, [r4, #36]	; 0x24
   2b354:	ldr	r3, [pc, #8]	; 2b364 <flatcc_builder_init@@Base+0x40>
   2b358:	str	r3, [r4, #44]	; 0x2c
   2b35c:	pop	{r4, pc}
   2b360:	andeq	sl, r2, ip, asr #24
   2b364:	andeq	sp, r2, r0, lsr #21

0002b368 <flatcc_builder_custom_reset@@Base>:
   2b368:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b36c:	mov	r6, #0
   2b370:	mov	r4, r0
   2b374:	mov	r7, r1
   2b378:	mov	r8, r2
   2b37c:	mov	r5, r0
   2b380:	mov	r9, #1
   2b384:	mov	sl, r6
   2b388:	ldr	r3, [r5, #52]	; 0x34
   2b38c:	add	r1, r5, #52	; 0x34
   2b390:	cmp	r3, #0
   2b394:	beq	2b474 <flatcc_builder_custom_reset@@Base+0x10c>
   2b398:	cmp	r6, #5
   2b39c:	cmpne	r8, #0
   2b3a0:	bne	2b44c <flatcc_builder_custom_reset@@Base+0xe4>
   2b3a4:	ldr	r2, [r5, #56]	; 0x38
   2b3a8:	mov	r1, sl
   2b3ac:	ldr	r0, [r5, #52]	; 0x34
   2b3b0:	bl	140fc <memset@plt>
   2b3b4:	add	r6, r6, #1
   2b3b8:	cmp	r6, #8
   2b3bc:	add	r5, r5, #8
   2b3c0:	bne	2b388 <flatcc_builder_custom_reset@@Base+0x20>
   2b3c4:	ldr	r2, [r4, #124]	; 0x7c
   2b3c8:	mov	r3, #0
   2b3cc:	cmp	r2, r3
   2b3d0:	movne	r2, #16
   2b3d4:	strne	r2, [r4, #124]	; 0x7c
   2b3d8:	ldr	r2, [r4, #60]	; 0x3c
   2b3dc:	ldr	r0, [r4, #184]	; 0xb8
   2b3e0:	str	r2, [r4, #16]
   2b3e4:	ldr	r2, [r4, #76]	; 0x4c
   2b3e8:	cmp	r7, #0
   2b3ec:	str	r2, [r4]
   2b3f0:	ldr	r2, [r4, #52]	; 0x34
   2b3f4:	strne	r3, [r4, #172]	; 0xac
   2b3f8:	strne	r3, [r4, #176]	; 0xb0
   2b3fc:	strne	r3, [r4, #180]	; 0xb4
   2b400:	cmp	r0, #0
   2b404:	str	r3, [r4, #120]	; 0x78
   2b408:	strh	r3, [r4, #128]	; 0x80
   2b40c:	str	r3, [r4, #136]	; 0x88
   2b410:	str	r3, [r4, #140]	; 0x8c
   2b414:	str	r3, [r4, #156]	; 0x9c
   2b418:	str	r3, [r4, #160]	; 0xa0
   2b41c:	str	r3, [r4, #20]
   2b420:	str	r3, [r4, #24]
   2b424:	str	r3, [r4, #148]	; 0x94
   2b428:	str	r3, [r4, #152]	; 0x98
   2b42c:	str	r2, [r4, #4]
   2b430:	str	r3, [r4, #32]
   2b434:	beq	2b444 <flatcc_builder_custom_reset@@Base+0xdc>
   2b438:	add	r0, r4, #188	; 0xbc
   2b43c:	bl	2d998 <flatcc_emitter_reset@@Base>
   2b440:	mov	r0, #0
   2b444:	add	sp, sp, #12
   2b448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b44c:	str	r6, [sp]
   2b450:	ldr	fp, [r4, #48]	; 0x30
   2b454:	mov	r3, r9
   2b458:	mov	r2, #1
   2b45c:	ldr	r0, [r4, #40]	; 0x28
   2b460:	blx	fp
   2b464:	cmp	r0, #0
   2b468:	beq	2b3a4 <flatcc_builder_custom_reset@@Base+0x3c>
   2b46c:	mvn	r0, #0
   2b470:	b	2b444 <flatcc_builder_custom_reset@@Base+0xdc>
   2b474:	ldr	r3, [r5, #56]	; 0x38
   2b478:	cmp	r3, #0
   2b47c:	beq	2b3b4 <flatcc_builder_custom_reset@@Base+0x4c>
   2b480:	ldr	r3, [pc, #12]	; 2b494 <flatcc_builder_custom_reset@@Base+0x12c>
   2b484:	ldr	r2, [pc, #12]	; 2b498 <flatcc_builder_custom_reset@@Base+0x130>
   2b488:	ldr	r1, [pc, #12]	; 2b49c <flatcc_builder_custom_reset@@Base+0x134>
   2b48c:	ldr	r0, [pc, #12]	; 2b4a0 <flatcc_builder_custom_reset@@Base+0x138>
   2b490:	bl	141a4 <__assert_fail@plt>
   2b494:	andeq	sl, r4, r8, ror #20
   2b498:			; <UNDEFINED> instruction: 0x000001b2
   2b49c:	andeq	sl, r4, r6, lsl #30
   2b4a0:	andeq	sl, r4, r3, lsl #31

0002b4a4 <flatcc_builder_reset@@Base>:
   2b4a4:	mov	r2, #0
   2b4a8:	mov	r1, r2
   2b4ac:	b	2b368 <flatcc_builder_custom_reset@@Base>

0002b4b0 <flatcc_builder_clear@@Base>:
   2b4b0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2b4b4:	mov	r5, #0
   2b4b8:	mov	r4, r0
   2b4bc:	add	r6, r0, #52	; 0x34
   2b4c0:	mov	r8, r5
   2b4c4:	str	r5, [sp]
   2b4c8:	mov	r1, r6
   2b4cc:	ldr	r7, [r4, #48]	; 0x30
   2b4d0:	mov	r3, r8
   2b4d4:	mov	r2, #0
   2b4d8:	ldr	r0, [r4, #40]	; 0x28
   2b4dc:	add	r5, r5, #1
   2b4e0:	blx	r7
   2b4e4:	cmp	r5, #8
   2b4e8:	add	r6, r6, #8
   2b4ec:	bne	2b4c4 <flatcc_builder_clear@@Base+0x14>
   2b4f0:	ldr	r3, [r4, #184]	; 0xb8
   2b4f4:	cmp	r3, #0
   2b4f8:	beq	2b504 <flatcc_builder_clear@@Base+0x54>
   2b4fc:	add	r0, r4, #188	; 0xbc
   2b500:	bl	2da48 <flatcc_emitter_clear@@Base>
   2b504:	mov	r2, #232	; 0xe8
   2b508:	mov	r1, #0
   2b50c:	mov	r0, r4
   2b510:	add	sp, sp, #8
   2b514:	pop	{r4, r5, r6, r7, r8, lr}
   2b518:	b	140fc <memset@plt>

0002b51c <flatcc_builder_enter_user_frame_ptr@@Base>:
   2b51c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2b520:	add	r4, r1, #3
   2b524:	bic	r4, r4, #3
   2b528:	add	r4, r4, #4
   2b52c:	mov	r7, #0
   2b530:	str	r7, [sp]
   2b534:	mov	r3, r4
   2b538:	ldr	r2, [r0, #228]	; 0xe4
   2b53c:	mov	r1, #7
   2b540:	mov	r6, r0
   2b544:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2b548:	subs	r5, r0, #0
   2b54c:	moveq	r0, r5
   2b550:	beq	2b580 <flatcc_builder_enter_user_frame_ptr@@Base+0x64>
   2b554:	mov	r2, r4
   2b558:	mov	r1, r7
   2b55c:	bl	140fc <memset@plt>
   2b560:	ldr	r3, [r6, #224]	; 0xe0
   2b564:	add	r0, r5, #4
   2b568:	str	r3, [r5]
   2b56c:	ldr	r1, [r6, #228]	; 0xe4
   2b570:	add	r3, r1, #4
   2b574:	add	r4, r4, r1
   2b578:	str	r3, [r6, #224]	; 0xe0
   2b57c:	str	r4, [r6, #228]	; 0xe4
   2b580:	add	sp, sp, #12
   2b584:	pop	{r4, r5, r6, r7, pc}

0002b588 <flatcc_builder_enter_user_frame@@Base>:
   2b588:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2b58c:	add	r4, r1, #3
   2b590:	bic	r4, r4, #3
   2b594:	add	r4, r4, #4
   2b598:	mov	r7, #0
   2b59c:	str	r7, [sp]
   2b5a0:	mov	r3, r4
   2b5a4:	ldr	r2, [r0, #228]	; 0xe4
   2b5a8:	mov	r1, #7
   2b5ac:	mov	r6, r0
   2b5b0:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2b5b4:	subs	r5, r0, #0
   2b5b8:	moveq	r0, r5
   2b5bc:	beq	2b5e8 <flatcc_builder_enter_user_frame@@Base+0x60>
   2b5c0:	mov	r2, r4
   2b5c4:	mov	r1, r7
   2b5c8:	bl	140fc <memset@plt>
   2b5cc:	ldr	r3, [r6, #224]	; 0xe0
   2b5d0:	str	r3, [r5]
   2b5d4:	ldr	r1, [r6, #228]	; 0xe4
   2b5d8:	add	r0, r1, #4
   2b5dc:	add	r4, r4, r1
   2b5e0:	str	r0, [r6, #224]	; 0xe0
   2b5e4:	str	r4, [r6, #228]	; 0xe4
   2b5e8:	add	sp, sp, #12
   2b5ec:	pop	{r4, r5, r6, r7, pc}

0002b5f0 <flatcc_builder_exit_user_frame@@Base>:
   2b5f0:	ldr	r3, [r0, #224]	; 0xe0
   2b5f4:	cmp	r3, #0
   2b5f8:	bne	2b614 <flatcc_builder_exit_user_frame@@Base+0x24>
   2b5fc:	push	{r4, lr}
   2b600:	ldr	r3, [pc, #44]	; 2b634 <flatcc_builder_exit_user_frame@@Base+0x44>
   2b604:	ldr	r2, [pc, #44]	; 2b638 <flatcc_builder_exit_user_frame@@Base+0x48>
   2b608:	ldr	r1, [pc, #44]	; 2b63c <flatcc_builder_exit_user_frame@@Base+0x4c>
   2b60c:	ldr	r0, [pc, #44]	; 2b640 <flatcc_builder_exit_user_frame@@Base+0x50>
   2b610:	bl	141a4 <__assert_fail@plt>
   2b614:	ldr	r1, [r0, #108]	; 0x6c
   2b618:	mov	r2, r0
   2b61c:	add	r1, r1, r3
   2b620:	sub	r3, r3, #4
   2b624:	str	r3, [r0, #228]	; 0xe4
   2b628:	ldr	r0, [r1, #-4]
   2b62c:	str	r0, [r2, #224]	; 0xe0
   2b630:	bx	lr
   2b634:	andeq	sl, r4, r4, lsl #21
   2b638:	andeq	r0, r0, lr, lsl r2
   2b63c:	andeq	sl, r4, r6, lsl #30
   2b640:	muleq	r4, r5, pc	; <UNPREDICTABLE>

0002b644 <flatcc_builder_exit_user_frame_at@@Base>:
   2b644:	ldr	r2, [r0, #224]	; 0xe0
   2b648:	cmp	r2, r1
   2b64c:	bcs	2b668 <flatcc_builder_exit_user_frame_at@@Base+0x24>
   2b650:	push	{r4, lr}
   2b654:	ldr	r3, [pc, #20]	; 2b670 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   2b658:	ldr	r2, [pc, #20]	; 2b674 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   2b65c:	ldr	r1, [pc, #20]	; 2b678 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   2b660:	ldr	r0, [pc, #20]	; 2b67c <flatcc_builder_exit_user_frame_at@@Base+0x38>
   2b664:	bl	141a4 <__assert_fail@plt>
   2b668:	str	r1, [r0, #224]	; 0xe0
   2b66c:	b	2b5f0 <flatcc_builder_exit_user_frame@@Base>
   2b670:	andeq	sl, r4, r3, lsr #21
   2b674:	andeq	r0, r0, r7, lsr #4
   2b678:	andeq	sl, r4, r6, lsl #30
   2b67c:	andeq	sl, r4, lr, lsr #31

0002b680 <flatcc_builder_get_current_user_frame@@Base>:
   2b680:	ldr	r0, [r0, #224]	; 0xe0
   2b684:	bx	lr

0002b688 <flatcc_builder_get_user_frame_ptr@@Base>:
   2b688:	ldr	r0, [r0, #108]	; 0x6c
   2b68c:	add	r0, r0, r1
   2b690:	bx	lr

0002b694 <flatcc_builder_embed_buffer@@Base>:
   2b694:	push	{r4, r5, r6, lr}
   2b698:	mov	r4, r3
   2b69c:	ldr	r3, [r0, #152]	; 0x98
   2b6a0:	sub	sp, sp, #80	; 0x50
   2b6a4:	adds	r3, r3, #0
   2b6a8:	movne	r3, #1
   2b6ac:	mov	r6, r2
   2b6b0:	mov	r2, r1
   2b6b4:	add	r1, sp, #96	; 0x60
   2b6b8:	mov	r5, r0
   2b6bc:	bl	2af94 <flatcc_builder_default_alloc@@Base+0x348>
   2b6c0:	cmp	r0, #0
   2b6c4:	movne	r0, #0
   2b6c8:	bne	2b79c <flatcc_builder_embed_buffer@@Base+0x108>
   2b6cc:	ldr	r3, [sp, #100]	; 0x64
   2b6d0:	str	r0, [sp, #8]
   2b6d4:	tst	r3, #2
   2b6d8:	ldr	r3, [r5, #136]	; 0x88
   2b6dc:	movne	r2, #4
   2b6e0:	moveq	r2, #0
   2b6e4:	sub	r3, r3, r4
   2b6e8:	sub	r3, r3, r2
   2b6ec:	ldrh	r2, [sp, #96]	; 0x60
   2b6f0:	str	r0, [sp, #12]
   2b6f4:	sub	r2, r2, #1
   2b6f8:	and	r3, r3, r2
   2b6fc:	add	r2, r4, r3
   2b700:	str	r2, [sp, #4]
   2b704:	ldr	r2, [r5, #152]	; 0x98
   2b708:	cmp	r2, #0
   2b70c:	beq	2b72c <flatcc_builder_embed_buffer@@Base+0x98>
   2b710:	mov	r2, #4
   2b714:	add	r1, sp, r2
   2b718:	str	r2, [sp, #8]
   2b71c:	str	r2, [sp, #20]
   2b720:	mov	r2, #1
   2b724:	str	r1, [sp, #16]
   2b728:	str	r2, [sp, #12]
   2b72c:	cmp	r4, #0
   2b730:	beq	2b75c <flatcc_builder_embed_buffer@@Base+0xc8>
   2b734:	ldr	r2, [sp, #8]
   2b738:	add	r1, sp, #80	; 0x50
   2b73c:	add	r2, r2, r4
   2b740:	str	r2, [sp, #8]
   2b744:	ldr	r2, [sp, #12]
   2b748:	add	r2, r2, #1
   2b74c:	str	r2, [sp, #12]
   2b750:	add	r1, r1, r2, lsl #3
   2b754:	str	r6, [r1, #-72]	; 0xffffffb8
   2b758:	str	r4, [r1, #-68]	; 0xffffffbc
   2b75c:	cmp	r3, #0
   2b760:	beq	2b790 <flatcc_builder_embed_buffer@@Base+0xfc>
   2b764:	ldr	r2, [sp, #8]
   2b768:	add	r1, sp, #80	; 0x50
   2b76c:	add	r2, r2, r3
   2b770:	str	r2, [sp, #8]
   2b774:	ldr	r2, [sp, #12]
   2b778:	ldr	r0, [pc, #36]	; 2b7a4 <flatcc_builder_embed_buffer@@Base+0x110>
   2b77c:	add	r2, r2, #1
   2b780:	str	r2, [sp, #12]
   2b784:	add	r1, r1, r2, lsl #3
   2b788:	str	r0, [r1, #-72]	; 0xffffffb8
   2b78c:	str	r3, [r1, #-68]	; 0xffffffbc
   2b790:	add	r1, sp, #8
   2b794:	mov	r0, r5
   2b798:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2b79c:	add	sp, sp, #80	; 0x50
   2b7a0:	pop	{r4, r5, r6, pc}
   2b7a4:	andeq	sl, r4, r0, lsr #16

0002b7a8 <flatcc_builder_create_buffer@@Base>:
   2b7a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b7ac:	sub	sp, sp, #92	; 0x5c
   2b7b0:	mov	r7, #0
   2b7b4:	ldr	r8, [sp, #124]	; 0x7c
   2b7b8:	mov	r9, r1
   2b7bc:	and	r6, r8, #1
   2b7c0:	mov	r5, r3
   2b7c4:	add	r1, sp, #120	; 0x78
   2b7c8:	mov	r3, r6
   2b7cc:	mov	r4, r0
   2b7d0:	str	r7, [sp, #12]
   2b7d4:	bl	2af94 <flatcc_builder_default_alloc@@Base+0x348>
   2b7d8:	cmp	r0, r7
   2b7dc:	bne	2b950 <flatcc_builder_create_buffer@@Base+0x1a8>
   2b7e0:	ldrh	r3, [r4, #128]	; 0x80
   2b7e4:	ldrh	r1, [sp, #120]	; 0x78
   2b7e8:	ldr	r2, [r4, #136]	; 0x88
   2b7ec:	and	r8, r8, #2
   2b7f0:	cmp	r3, r1
   2b7f4:	strhcc	r1, [r4, #128]	; 0x80
   2b7f8:	cmp	r9, #0
   2b7fc:	sub	r1, r1, #1
   2b800:	ldrne	r3, [r9]
   2b804:	strne	r3, [sp, #12]
   2b808:	ldr	r0, [sp, #12]
   2b80c:	sub	r3, r2, #4
   2b810:	cmp	r0, #0
   2b814:	movne	r0, #4
   2b818:	moveq	r0, #0
   2b81c:	cmp	r8, #0
   2b820:	moveq	ip, #0
   2b824:	movne	ip, #4
   2b828:	sub	r3, r3, r0
   2b82c:	sub	r3, r3, ip
   2b830:	and	r3, r3, r1
   2b834:	moveq	lr, r6
   2b838:	mov	r1, #0
   2b83c:	orrne	lr, r6, #1
   2b840:	cmp	lr, r1
   2b844:	str	r1, [sp, #16]
   2b848:	str	r1, [sp, #20]
   2b84c:	beq	2b86c <flatcc_builder_create_buffer@@Base+0xc4>
   2b850:	mov	r1, #4
   2b854:	str	r1, [sp, #16]
   2b858:	add	ip, sp, #8
   2b85c:	str	r1, [sp, #28]
   2b860:	mov	r1, #1
   2b864:	str	ip, [sp, #24]
   2b868:	str	r1, [sp, #20]
   2b86c:	ldr	r7, [sp, #20]
   2b870:	add	r8, sp, #88	; 0x58
   2b874:	add	r1, r7, #1
   2b878:	ldr	ip, [sp, #16]
   2b87c:	add	r8, r8, r1, lsl #3
   2b880:	add	r9, sp, #4
   2b884:	add	ip, ip, #4
   2b888:	str	r9, [r8, #-72]	; 0xffffffb8
   2b88c:	cmp	r0, #0
   2b890:	mov	r9, #4
   2b894:	str	ip, [sp, #16]
   2b898:	str	r9, [r8, #-68]	; 0xffffffbc
   2b89c:	str	r1, [sp, #20]
   2b8a0:	beq	2b8cc <flatcc_builder_create_buffer@@Base+0x124>
   2b8a4:	add	ip, r0, ip
   2b8a8:	add	r1, r7, #2
   2b8ac:	str	ip, [sp, #16]
   2b8b0:	add	ip, sp, #88	; 0x58
   2b8b4:	add	r1, ip, r1, lsl #3
   2b8b8:	add	r7, r7, #2
   2b8bc:	add	ip, sp, #12
   2b8c0:	str	ip, [r1, #-72]	; 0xffffffb8
   2b8c4:	str	r0, [r1, #-68]	; 0xffffffbc
   2b8c8:	str	r7, [sp, #20]
   2b8cc:	cmp	r3, #0
   2b8d0:	beq	2b900 <flatcc_builder_create_buffer@@Base+0x158>
   2b8d4:	ldr	r1, [sp, #16]
   2b8d8:	add	r0, sp, #88	; 0x58
   2b8dc:	add	r1, r1, r3
   2b8e0:	str	r1, [sp, #16]
   2b8e4:	ldr	r1, [sp, #20]
   2b8e8:	ldr	ip, [pc, #108]	; 2b95c <flatcc_builder_create_buffer@@Base+0x1b4>
   2b8ec:	add	r1, r1, #1
   2b8f0:	str	r1, [sp, #20]
   2b8f4:	add	r0, r0, r1, lsl #3
   2b8f8:	str	ip, [r0, #-72]	; 0xffffffb8
   2b8fc:	str	r3, [r0, #-68]	; 0xffffffbc
   2b900:	cmp	r6, #0
   2b904:	ldr	r3, [sp, #16]
   2b908:	add	r1, sp, #16
   2b90c:	sub	r3, r2, r3
   2b910:	ldrne	r2, [r4, #144]	; 0x90
   2b914:	ldreq	r2, [r4, #140]	; 0x8c
   2b918:	add	r3, r3, lr, lsl #2
   2b91c:	sub	r2, r2, r3
   2b920:	mov	r0, r4
   2b924:	sub	r3, r5, r3
   2b928:	str	r2, [sp, #8]
   2b92c:	str	r3, [sp, #4]
   2b930:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2b934:	cmp	r0, #0
   2b938:	bne	2b954 <flatcc_builder_create_buffer@@Base+0x1ac>
   2b93c:	ldr	r3, [pc, #28]	; 2b960 <flatcc_builder_create_buffer@@Base+0x1b8>
   2b940:	mov	r2, #772	; 0x304
   2b944:	ldr	r1, [pc, #24]	; 2b964 <flatcc_builder_create_buffer@@Base+0x1bc>
   2b948:	ldr	r0, [pc, #24]	; 2b968 <flatcc_builder_create_buffer@@Base+0x1c0>
   2b94c:	bl	141a4 <__assert_fail@plt>
   2b950:	mov	r0, r7
   2b954:	add	sp, sp, #92	; 0x5c
   2b958:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b95c:	andeq	sl, r4, r0, lsr #16
   2b960:	andeq	sl, r4, r5, asr #21
   2b964:	andeq	sl, r4, r6, lsl #30
   2b968:	andeq	sl, r3, r9, asr #3

0002b96c <flatcc_builder_create_struct@@Base>:
   2b96c:	cmp	r3, #0
   2b970:	push	{lr}		; (str lr, [sp, #-4]!)
   2b974:	sub	sp, sp, #76	; 0x4c
   2b978:	bne	2b990 <flatcc_builder_create_struct@@Base+0x24>
   2b97c:	ldr	r3, [pc, #144]	; 2ba14 <flatcc_builder_create_struct@@Base+0xa8>
   2b980:	ldr	r2, [pc, #144]	; 2ba18 <flatcc_builder_create_struct@@Base+0xac>
   2b984:	ldr	r1, [pc, #144]	; 2ba1c <flatcc_builder_create_struct@@Base+0xb0>
   2b988:	ldr	r0, [pc, #144]	; 2ba20 <flatcc_builder_create_struct@@Base+0xb4>
   2b98c:	bl	141a4 <__assert_fail@plt>
   2b990:	ldrh	ip, [r0, #128]	; 0x80
   2b994:	cmp	ip, r3
   2b998:	ldr	ip, [r0, #136]	; 0x88
   2b99c:	strhcc	r3, [r0, #128]	; 0x80
   2b9a0:	sub	ip, ip, r2
   2b9a4:	sub	r3, r3, #1
   2b9a8:	and	r3, r3, ip
   2b9ac:	mov	ip, #0
   2b9b0:	cmp	r2, ip
   2b9b4:	strne	r2, [sp, #12]
   2b9b8:	str	ip, [sp]
   2b9bc:	strne	r2, [sp]
   2b9c0:	movne	r2, #1
   2b9c4:	str	ip, [sp, #4]
   2b9c8:	strne	r1, [sp, #8]
   2b9cc:	strne	r2, [sp, #4]
   2b9d0:	cmp	r3, #0
   2b9d4:	beq	2ba04 <flatcc_builder_create_struct@@Base+0x98>
   2b9d8:	ldr	r2, [sp]
   2b9dc:	add	r1, sp, #72	; 0x48
   2b9e0:	add	r2, r2, r3
   2b9e4:	str	r2, [sp]
   2b9e8:	ldr	r2, [sp, #4]
   2b9ec:	ldr	ip, [pc, #48]	; 2ba24 <flatcc_builder_create_struct@@Base+0xb8>
   2b9f0:	add	r2, r2, #1
   2b9f4:	str	r2, [sp, #4]
   2b9f8:	add	r1, r1, r2, lsl #3
   2b9fc:	str	ip, [r1, #-72]	; 0xffffffb8
   2ba00:	str	r3, [r1, #-68]	; 0xffffffbc
   2ba04:	mov	r1, sp
   2ba08:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2ba0c:	add	sp, sp, #76	; 0x4c
   2ba10:	pop	{pc}		; (ldr pc, [sp], #4)
   2ba14:	andeq	sl, r4, r2, ror #21
   2ba18:	andeq	r0, r0, pc, lsl #6
   2ba1c:	andeq	sl, r4, r6, lsl #30
   2ba20:	andeq	sl, r4, sp, asr #31
   2ba24:	andeq	sl, r4, r0, lsr #16

0002ba28 <flatcc_builder_start_buffer@@Base>:
   2ba28:	push	{r4, r5, r6, r7, r8, lr}
   2ba2c:	mov	r5, r1
   2ba30:	ldrh	r1, [r0, #128]	; 0x80
   2ba34:	mov	r4, r0
   2ba38:	mov	r7, r2
   2ba3c:	mov	r6, r3
   2ba40:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2ba44:	cmp	r0, #0
   2ba48:	bne	2babc <flatcc_builder_start_buffer@@Base+0x94>
   2ba4c:	ldrh	r3, [r4, #132]	; 0x84
   2ba50:	ldr	ip, [r4, #32]
   2ba54:	mov	r1, #1
   2ba58:	strh	r1, [r4, #128]	; 0x80
   2ba5c:	strh	r3, [ip, #34]	; 0x22
   2ba60:	ldrh	r3, [r4, #164]	; 0xa4
   2ba64:	strh	r7, [r4, #132]	; 0x84
   2ba68:	cmp	r5, #0
   2ba6c:	strh	r3, [ip, #32]
   2ba70:	ldr	r3, [r4, #144]	; 0x90
   2ba74:	strh	r6, [r4, #164]	; 0xa4
   2ba78:	str	r3, [ip, #20]
   2ba7c:	ldr	r3, [r4, #152]	; 0x98
   2ba80:	str	r3, [ip, #28]
   2ba84:	ldr	r3, [r4, #136]	; 0x88
   2ba88:	str	r3, [r4, #144]	; 0x90
   2ba8c:	ldr	r3, [r4, #148]	; 0x94
   2ba90:	str	r3, [r4, #152]	; 0x98
   2ba94:	add	r2, r3, r1
   2ba98:	ldr	r3, [r4, #168]	; 0xa8
   2ba9c:	str	r2, [r4, #148]	; 0x94
   2baa0:	str	r3, [ip, #16]
   2baa4:	ldr	r3, [pc, #24]	; 2bac4 <flatcc_builder_start_buffer@@Base+0x9c>
   2baa8:	moveq	r5, r3
   2baac:	ldr	r3, [r5]
   2bab0:	str	r3, [r4, #168]	; 0xa8
   2bab4:	strh	r1, [ip, #14]
   2bab8:	pop	{r4, r5, r6, r7, r8, pc}
   2babc:	mvn	r0, #0
   2bac0:	pop	{r4, r5, r6, r7, r8, pc}
   2bac4:	andeq	sl, r4, r0, lsr #16

0002bac8 <flatcc_builder_end_buffer@@Base>:
   2bac8:	push	{r0, r1, r2, r4, r5, lr}
   2bacc:	mov	r4, r0
   2bad0:	ldrh	r0, [r0, #164]	; 0xa4
   2bad4:	ldr	r2, [r4, #152]	; 0x98
   2bad8:	and	r0, r0, #2
   2badc:	cmp	r2, #0
   2bae0:	orrne	r0, r0, #1
   2bae4:	ldr	r2, [r4, #32]
   2bae8:	ldrh	r2, [r2, #14]
   2baec:	cmp	r2, #1
   2baf0:	beq	2bb08 <flatcc_builder_end_buffer@@Base+0x40>
   2baf4:	ldr	r3, [pc, #120]	; 2bb74 <flatcc_builder_end_buffer@@Base+0xac>
   2baf8:	ldr	r2, [pc, #120]	; 2bb78 <flatcc_builder_end_buffer@@Base+0xb0>
   2bafc:	ldr	r1, [pc, #120]	; 2bb7c <flatcc_builder_end_buffer@@Base+0xb4>
   2bb00:	ldr	r0, [pc, #120]	; 2bb80 <flatcc_builder_end_buffer@@Base+0xb8>
   2bb04:	bl	141a4 <__assert_fail@plt>
   2bb08:	ldrh	r2, [r4, #132]	; 0x84
   2bb0c:	mov	r3, r1
   2bb10:	ldrh	r1, [r4, #128]	; 0x80
   2bb14:	str	r0, [sp, #4]
   2bb18:	mov	r0, r4
   2bb1c:	cmp	r1, r2
   2bb20:	strhcc	r2, [r4, #128]	; 0x80
   2bb24:	ldrh	r1, [r4, #128]	; 0x80
   2bb28:	str	r1, [sp]
   2bb2c:	add	r1, r4, #168	; 0xa8
   2bb30:	bl	2b7a8 <flatcc_builder_create_buffer@@Base>
   2bb34:	subs	r5, r0, #0
   2bb38:	beq	2bb68 <flatcc_builder_end_buffer@@Base+0xa0>
   2bb3c:	ldr	r3, [r4, #32]
   2bb40:	mov	r0, r4
   2bb44:	ldr	r2, [r3, #20]
   2bb48:	str	r2, [r4, #144]	; 0x90
   2bb4c:	ldr	r2, [r3, #28]
   2bb50:	str	r2, [r4, #152]	; 0x98
   2bb54:	ldr	r2, [r3, #16]
   2bb58:	str	r2, [r4, #168]	; 0xa8
   2bb5c:	ldrh	r3, [r3, #32]
   2bb60:	strh	r3, [r4, #164]	; 0xa4
   2bb64:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2bb68:	mov	r0, r5
   2bb6c:	add	sp, sp, #12
   2bb70:	pop	{r4, r5, pc}
   2bb74:	strdeq	sl, [r4], -pc	; <UNPREDICTABLE>
   2bb78:	andeq	r0, r0, r6, asr #6
   2bb7c:	andeq	sl, r4, r6, lsl #30
   2bb80:	ldrdeq	sl, [r4], -r8

0002bb84 <flatcc_builder_start_struct@@Base>:
   2bb84:	push	{r4, r5, r6, lr}
   2bb88:	mov	r5, r1
   2bb8c:	mov	r1, r2
   2bb90:	mov	r4, r0
   2bb94:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2bb98:	cmp	r0, #0
   2bb9c:	bne	2bbc8 <flatcc_builder_start_struct@@Base+0x44>
   2bba0:	ldr	r3, [r4, #32]
   2bba4:	mov	r2, #2
   2bba8:	mov	r0, r4
   2bbac:	mvn	r1, #3
   2bbb0:	strh	r2, [r3, #14]
   2bbb4:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2bbb8:	mov	r1, r5
   2bbbc:	mov	r0, r4
   2bbc0:	pop	{r4, r5, r6, lr}
   2bbc4:	b	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bbc8:	mov	r0, #0
   2bbcc:	pop	{r4, r5, r6, pc}

0002bbd0 <flatcc_builder_struct_edit@@Base>:
   2bbd0:	ldr	r0, [r0, #16]
   2bbd4:	bx	lr

0002bbd8 <flatcc_builder_end_struct@@Base>:
   2bbd8:	ldr	r3, [r0, #32]
   2bbdc:	push	{r4, r5, r6, lr}
   2bbe0:	ldrh	r3, [r3, #14]
   2bbe4:	cmp	r3, #2
   2bbe8:	beq	2bc00 <flatcc_builder_end_struct@@Base+0x28>
   2bbec:	ldr	r3, [pc, #56]	; 2bc2c <flatcc_builder_end_struct@@Base+0x54>
   2bbf0:	mov	r2, #872	; 0x368
   2bbf4:	ldr	r1, [pc, #52]	; 2bc30 <flatcc_builder_end_struct@@Base+0x58>
   2bbf8:	ldr	r0, [pc, #52]	; 2bc34 <flatcc_builder_end_struct@@Base+0x5c>
   2bbfc:	bl	141a4 <__assert_fail@plt>
   2bc00:	ldrh	r3, [r0, #130]	; 0x82
   2bc04:	ldr	r2, [r0, #20]
   2bc08:	ldr	r1, [r0, #16]
   2bc0c:	mov	r4, r0
   2bc10:	bl	2b96c <flatcc_builder_create_struct@@Base>
   2bc14:	subs	r5, r0, #0
   2bc18:	beq	2bc24 <flatcc_builder_end_struct@@Base+0x4c>
   2bc1c:	mov	r0, r4
   2bc20:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2bc24:	mov	r0, r5
   2bc28:	pop	{r4, r5, r6, pc}
   2bc2c:	andeq	sl, r4, r9, lsl fp
   2bc30:	andeq	sl, r4, r6, lsl #30
   2bc34:	andeq	fp, r4, r4

0002bc38 <flatcc_builder_extend_vector@@Base>:
   2bc38:	push	{r4, r5, r6, lr}
   2bc3c:	mov	r4, r0
   2bc40:	ldr	r0, [r0, #32]
   2bc44:	mov	r5, r1
   2bc48:	ldr	r2, [r0, #24]
   2bc4c:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2bc50:	cmp	r0, #0
   2bc54:	bne	2bc70 <flatcc_builder_extend_vector@@Base+0x38>
   2bc58:	ldr	r3, [r4, #32]
   2bc5c:	mov	r0, r4
   2bc60:	ldr	r1, [r3, #16]
   2bc64:	mul	r1, r1, r5
   2bc68:	pop	{r4, r5, r6, lr}
   2bc6c:	b	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bc70:	mov	r0, #0
   2bc74:	pop	{r4, r5, r6, pc}

0002bc78 <flatcc_builder_vector_push@@Base>:
   2bc78:	ldr	r3, [r0, #32]
   2bc7c:	push	{r4, lr}
   2bc80:	ldrh	r2, [r3, #14]
   2bc84:	cmp	r2, #4
   2bc88:	beq	2bca0 <flatcc_builder_vector_push@@Base+0x28>
   2bc8c:	ldr	r3, [pc, #64]	; 2bcd4 <flatcc_builder_vector_push@@Base+0x5c>
   2bc90:	ldr	r2, [pc, #64]	; 2bcd8 <flatcc_builder_vector_push@@Base+0x60>
   2bc94:	ldr	r1, [pc, #64]	; 2bcdc <flatcc_builder_vector_push@@Base+0x64>
   2bc98:	ldr	r0, [pc, #64]	; 2bce0 <flatcc_builder_vector_push@@Base+0x68>
   2bc9c:	bl	141a4 <__assert_fail@plt>
   2bca0:	ldr	r2, [r3, #20]
   2bca4:	ldr	ip, [r3, #24]
   2bca8:	cmp	r2, ip
   2bcac:	ldrhi	r3, [pc, #32]	; 2bcd4 <flatcc_builder_vector_push@@Base+0x5c>
   2bcb0:	movhi	r2, #908	; 0x38c
   2bcb4:	ldrhi	r1, [pc, #32]	; 2bcdc <flatcc_builder_vector_push@@Base+0x64>
   2bcb8:	ldrhi	r0, [pc, #36]	; 2bce4 <flatcc_builder_vector_push@@Base+0x6c>
   2bcbc:	bhi	2bc9c <flatcc_builder_vector_push@@Base+0x24>
   2bcc0:	add	r2, r2, #1
   2bcc4:	str	r2, [r3, #20]
   2bcc8:	ldr	r2, [r3, #16]
   2bccc:	pop	{r4, lr}
   2bcd0:	b	2abcc <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2bcd4:	andeq	sl, r4, r3, lsr fp
   2bcd8:	andeq	r0, r0, fp, lsl #7
   2bcdc:	andeq	sl, r4, r6, lsl #30
   2bce0:	andeq	fp, r4, r0, lsr r0
   2bce4:	andeq	fp, r4, ip, asr r0

0002bce8 <flatcc_builder_append_vector@@Base>:
   2bce8:	push	{r4, r5, r6, lr}
   2bcec:	mov	r4, r0
   2bcf0:	ldr	r0, [r0, #32]
   2bcf4:	ldrh	r3, [r0, #14]
   2bcf8:	cmp	r3, #4
   2bcfc:	beq	2bd14 <flatcc_builder_append_vector@@Base+0x2c>
   2bd00:	ldr	r3, [pc, #76]	; 2bd54 <flatcc_builder_append_vector@@Base+0x6c>
   2bd04:	ldr	r2, [pc, #76]	; 2bd58 <flatcc_builder_append_vector@@Base+0x70>
   2bd08:	ldr	r1, [pc, #76]	; 2bd5c <flatcc_builder_append_vector@@Base+0x74>
   2bd0c:	ldr	r0, [pc, #76]	; 2bd60 <flatcc_builder_append_vector@@Base+0x78>
   2bd10:	bl	141a4 <__assert_fail@plt>
   2bd14:	mov	r5, r2
   2bd18:	mov	r6, r1
   2bd1c:	ldr	r2, [r0, #24]
   2bd20:	mov	r1, r5
   2bd24:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2bd28:	cmp	r0, #0
   2bd2c:	bne	2bd4c <flatcc_builder_append_vector@@Base+0x64>
   2bd30:	ldr	r3, [r4, #32]
   2bd34:	mov	r1, r6
   2bd38:	mov	r0, r4
   2bd3c:	ldr	r2, [r3, #16]
   2bd40:	mul	r2, r2, r5
   2bd44:	pop	{r4, r5, r6, lr}
   2bd48:	b	2abcc <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2bd4c:	mov	r0, #0
   2bd50:	pop	{r4, r5, r6, pc}
   2bd54:	andeq	sl, r4, lr, asr #22
   2bd58:	muleq	r0, r3, r3
   2bd5c:	andeq	sl, r4, r6, lsl #30
   2bd60:	andeq	fp, r4, r0, lsr r0

0002bd64 <flatcc_builder_extend_offset_vector@@Base>:
   2bd64:	push	{r4, r5, r6, lr}
   2bd68:	mvn	r2, #-1073741824	; 0xc0000000
   2bd6c:	mov	r4, r0
   2bd70:	ldr	r0, [r0, #32]
   2bd74:	mov	r5, r1
   2bd78:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2bd7c:	cmp	r0, #0
   2bd80:	bne	2bd94 <flatcc_builder_extend_offset_vector@@Base+0x30>
   2bd84:	lsl	r1, r5, #2
   2bd88:	mov	r0, r4
   2bd8c:	pop	{r4, r5, r6, lr}
   2bd90:	b	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bd94:	mov	r0, #0
   2bd98:	pop	{r4, r5, r6, pc}

0002bd9c <flatcc_builder_offset_vector_push@@Base>:
   2bd9c:	ldr	r2, [r0, #32]
   2bda0:	push	{r4, lr}
   2bda4:	ldrh	r3, [r2, #14]
   2bda8:	cmp	r3, #5
   2bdac:	beq	2bdc4 <flatcc_builder_offset_vector_push@@Base+0x28>
   2bdb0:	ldr	r3, [pc, #64]	; 2bdf8 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2bdb4:	ldr	r2, [pc, #64]	; 2bdfc <flatcc_builder_offset_vector_push@@Base+0x60>
   2bdb8:	ldr	r1, [pc, #64]	; 2be00 <flatcc_builder_offset_vector_push@@Base+0x64>
   2bdbc:	ldr	r0, [pc, #64]	; 2be04 <flatcc_builder_offset_vector_push@@Base+0x68>
   2bdc0:	bl	141a4 <__assert_fail@plt>
   2bdc4:	ldr	r3, [r2, #20]
   2bdc8:	cmn	r3, #-1073741823	; 0xc0000001
   2bdcc:	beq	2bdf0 <flatcc_builder_offset_vector_push@@Base+0x54>
   2bdd0:	add	r3, r3, #1
   2bdd4:	mov	r4, r1
   2bdd8:	str	r3, [r2, #20]
   2bddc:	mov	r1, #4
   2bde0:	bl	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bde4:	cmp	r0, #0
   2bde8:	strne	r4, [r0]
   2bdec:	pop	{r4, pc}
   2bdf0:	mov	r0, #0
   2bdf4:	pop	{r4, pc}
   2bdf8:	andeq	sl, r4, fp, ror #22
   2bdfc:	andeq	r0, r0, r6, lsr #7
   2be00:	andeq	sl, r4, r6, lsl #30
   2be04:	muleq	r4, r9, r0

0002be08 <flatcc_builder_append_offset_vector@@Base>:
   2be08:	push	{r4, r5, r6, lr}
   2be0c:	mov	r4, r0
   2be10:	ldr	r0, [r0, #32]
   2be14:	ldrh	r3, [r0, #14]
   2be18:	cmp	r3, #5
   2be1c:	beq	2be34 <flatcc_builder_append_offset_vector@@Base+0x2c>
   2be20:	ldr	r3, [pc, #68]	; 2be6c <flatcc_builder_append_offset_vector@@Base+0x64>
   2be24:	mov	r2, #948	; 0x3b4
   2be28:	ldr	r1, [pc, #64]	; 2be70 <flatcc_builder_append_offset_vector@@Base+0x68>
   2be2c:	ldr	r0, [pc, #64]	; 2be74 <flatcc_builder_append_offset_vector@@Base+0x6c>
   2be30:	bl	141a4 <__assert_fail@plt>
   2be34:	mov	r5, r2
   2be38:	mov	r6, r1
   2be3c:	mvn	r2, #-1073741824	; 0xc0000000
   2be40:	mov	r1, r5
   2be44:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2be48:	cmp	r0, #0
   2be4c:	bne	2be64 <flatcc_builder_append_offset_vector@@Base+0x5c>
   2be50:	lsl	r2, r5, #2
   2be54:	mov	r1, r6
   2be58:	mov	r0, r4
   2be5c:	pop	{r4, r5, r6, lr}
   2be60:	b	2abcc <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2be64:	mov	r0, #0
   2be68:	pop	{r4, r5, r6, pc}
   2be6c:	andeq	sl, r4, sp, lsl #23
   2be70:	andeq	sl, r4, r6, lsl #30
   2be74:	muleq	r4, r9, r0

0002be78 <flatcc_builder_extend_string@@Base>:
   2be78:	push	{r4, r5, r6, lr}
   2be7c:	mov	r4, r0
   2be80:	ldr	r0, [r0, #32]
   2be84:	ldrh	r3, [r0, #14]
   2be88:	cmp	r3, #6
   2be8c:	beq	2bea4 <flatcc_builder_extend_string@@Base+0x2c>
   2be90:	ldr	r3, [pc, #56]	; 2bed0 <flatcc_builder_extend_string@@Base+0x58>
   2be94:	ldr	r2, [pc, #56]	; 2bed4 <flatcc_builder_extend_string@@Base+0x5c>
   2be98:	ldr	r1, [pc, #56]	; 2bed8 <flatcc_builder_extend_string@@Base+0x60>
   2be9c:	ldr	r0, [pc, #56]	; 2bedc <flatcc_builder_extend_string@@Base+0x64>
   2bea0:	bl	141a4 <__assert_fail@plt>
   2bea4:	mvn	r2, #0
   2bea8:	mov	r5, r1
   2beac:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2beb0:	cmp	r0, #0
   2beb4:	bne	2bec8 <flatcc_builder_extend_string@@Base+0x50>
   2beb8:	mov	r1, r5
   2bebc:	mov	r0, r4
   2bec0:	pop	{r4, r5, r6, lr}
   2bec4:	b	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bec8:	mov	r0, #0
   2becc:	pop	{r4, r5, r6, pc}
   2bed0:			; <UNDEFINED> instruction: 0x0004abb1
   2bed4:			; <UNDEFINED> instruction: 0x000003bd
   2bed8:	andeq	sl, r4, r6, lsl #30
   2bedc:	andeq	fp, r4, ip, asr #1

0002bee0 <flatcc_builder_append_string@@Base>:
   2bee0:	push	{r4, r5, r6, lr}
   2bee4:	mov	r4, r0
   2bee8:	ldr	r0, [r0, #32]
   2beec:	ldrh	r3, [r0, #14]
   2bef0:	cmp	r3, #6
   2bef4:	beq	2bf0c <flatcc_builder_append_string@@Base+0x2c>
   2bef8:	ldr	r3, [pc, #68]	; 2bf44 <flatcc_builder_append_string@@Base+0x64>
   2befc:	ldr	r2, [pc, #68]	; 2bf48 <flatcc_builder_append_string@@Base+0x68>
   2bf00:	ldr	r1, [pc, #68]	; 2bf4c <flatcc_builder_append_string@@Base+0x6c>
   2bf04:	ldr	r0, [pc, #68]	; 2bf50 <flatcc_builder_append_string@@Base+0x70>
   2bf08:	bl	141a4 <__assert_fail@plt>
   2bf0c:	mov	r5, r2
   2bf10:	mov	r6, r1
   2bf14:	mvn	r2, #0
   2bf18:	mov	r1, r5
   2bf1c:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2bf20:	cmp	r0, #0
   2bf24:	bne	2bf3c <flatcc_builder_append_string@@Base+0x5c>
   2bf28:	mov	r2, r5
   2bf2c:	mov	r1, r6
   2bf30:	mov	r0, r4
   2bf34:	pop	{r4, r5, r6, lr}
   2bf38:	b	2abcc <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2bf3c:	mov	r0, #0
   2bf40:	pop	{r4, r5, r6, pc}
   2bf44:	andeq	sl, r4, lr, asr #23
   2bf48:	andeq	r0, r0, r6, asr #7
   2bf4c:	andeq	sl, r4, r6, lsl #30
   2bf50:	andeq	fp, r4, ip, asr #1

0002bf54 <flatcc_builder_append_string_str@@Base>:
   2bf54:	push	{r4, r5, r6, lr}
   2bf58:	mov	r5, r0
   2bf5c:	mov	r0, r1
   2bf60:	mov	r4, r1
   2bf64:	bl	140cc <strlen@plt>
   2bf68:	mov	r1, r4
   2bf6c:	mov	r2, r0
   2bf70:	mov	r0, r5
   2bf74:	pop	{r4, r5, r6, lr}
   2bf78:	b	2bee0 <flatcc_builder_append_string@@Base>

0002bf7c <flatcc_builder_append_string_strn@@Base>:
   2bf7c:	push	{r4, r5, r6, lr}
   2bf80:	mov	r4, r1
   2bf84:	mov	r6, r0
   2bf88:	mov	r1, #0
   2bf8c:	mov	r0, r4
   2bf90:	mov	r5, r2
   2bf94:	bl	14120 <memchr@plt>
   2bf98:	mov	r1, r4
   2bf9c:	cmp	r0, #0
   2bfa0:	subne	r5, r0, r4
   2bfa4:	mov	r2, r5
   2bfa8:	mov	r0, r6
   2bfac:	pop	{r4, r5, r6, lr}
   2bfb0:	b	2bee0 <flatcc_builder_append_string@@Base>

0002bfb4 <flatcc_builder_truncate_vector@@Base>:
   2bfb4:	ldr	r3, [r0, #32]
   2bfb8:	push	{r4, lr}
   2bfbc:	ldrh	r2, [r3, #14]
   2bfc0:	cmp	r2, #4
   2bfc4:	beq	2bfdc <flatcc_builder_truncate_vector@@Base+0x28>
   2bfc8:	ldr	r3, [pc, #68]	; 2c014 <flatcc_builder_truncate_vector@@Base+0x60>
   2bfcc:	ldr	r2, [pc, #68]	; 2c018 <flatcc_builder_truncate_vector@@Base+0x64>
   2bfd0:	ldr	r1, [pc, #68]	; 2c01c <flatcc_builder_truncate_vector@@Base+0x68>
   2bfd4:	ldr	r0, [pc, #68]	; 2c020 <flatcc_builder_truncate_vector@@Base+0x6c>
   2bfd8:	bl	141a4 <__assert_fail@plt>
   2bfdc:	ldr	r2, [r3, #20]
   2bfe0:	cmp	r2, r1
   2bfe4:	ldrcc	r3, [pc, #40]	; 2c014 <flatcc_builder_truncate_vector@@Base+0x60>
   2bfe8:	ldrcc	r2, [pc, #52]	; 2c024 <flatcc_builder_truncate_vector@@Base+0x70>
   2bfec:	ldrcc	r1, [pc, #40]	; 2c01c <flatcc_builder_truncate_vector@@Base+0x68>
   2bff0:	ldrcc	r0, [pc, #48]	; 2c028 <flatcc_builder_truncate_vector@@Base+0x74>
   2bff4:	bcc	2bfd8 <flatcc_builder_truncate_vector@@Base+0x24>
   2bff8:	sub	r2, r2, r1
   2bffc:	str	r2, [r3, #20]
   2c000:	ldr	r3, [r3, #16]
   2c004:	mul	r1, r3, r1
   2c008:	bl	2abac <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2c00c:	mov	r0, #0
   2c010:	pop	{r4, pc}
   2c014:	andeq	sl, r4, fp, ror #23
   2c018:	ldrdeq	r0, [r0], -r9
   2c01c:	andeq	sl, r4, r6, lsl #30
   2c020:	andeq	fp, r4, r0, lsr r0
   2c024:	ldrdeq	r0, [r0], -sl
   2c028:	strdeq	fp, [r4], -r8

0002c02c <flatcc_builder_truncate_offset_vector@@Base>:
   2c02c:	ldr	r3, [r0, #32]
   2c030:	push	{r4, lr}
   2c034:	ldrh	r2, [r3, #14]
   2c038:	cmp	r2, #5
   2c03c:	beq	2c054 <flatcc_builder_truncate_offset_vector@@Base+0x28>
   2c040:	ldr	r3, [pc, #68]	; 2c08c <flatcc_builder_truncate_offset_vector@@Base+0x60>
   2c044:	ldr	r2, [pc, #68]	; 2c090 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2c048:	ldr	r1, [pc, #68]	; 2c094 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2c04c:	ldr	r0, [pc, #68]	; 2c098 <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   2c050:	bl	141a4 <__assert_fail@plt>
   2c054:	ldr	r2, [r3, #20]
   2c058:	cmp	r2, r1
   2c05c:	ldrcc	r3, [pc, #40]	; 2c08c <flatcc_builder_truncate_offset_vector@@Base+0x60>
   2c060:	ldrcc	r2, [pc, #52]	; 2c09c <flatcc_builder_truncate_offset_vector@@Base+0x70>
   2c064:	ldrcc	r1, [pc, #40]	; 2c094 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2c068:	ldrcc	r0, [pc, #48]	; 2c0a0 <flatcc_builder_truncate_offset_vector@@Base+0x74>
   2c06c:	bcc	2c050 <flatcc_builder_truncate_offset_vector@@Base+0x24>
   2c070:	sub	r2, r2, r1
   2c074:	str	r2, [r3, #20]
   2c078:	ldr	r3, [r3, #16]
   2c07c:	mul	r1, r3, r1
   2c080:	bl	2abac <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2c084:	mov	r0, #0
   2c088:	pop	{r4, pc}
   2c08c:	andeq	sl, r4, sl, lsl #24
   2c090:	andeq	r0, r0, r2, ror #7
   2c094:	andeq	sl, r4, r6, lsl #30
   2c098:	muleq	r4, r9, r0
   2c09c:	andeq	r0, r0, r3, ror #7
   2c0a0:	andeq	fp, r4, ip, lsl r1

0002c0a4 <flatcc_builder_truncate_string@@Base>:
   2c0a4:	ldr	r2, [r0, #32]
   2c0a8:	push	{r4, lr}
   2c0ac:	ldrh	r3, [r2, #14]
   2c0b0:	cmp	r3, #6
   2c0b4:	beq	2c0cc <flatcc_builder_truncate_string@@Base+0x28>
   2c0b8:	ldr	r3, [pc, #60]	; 2c0fc <flatcc_builder_truncate_string@@Base+0x58>
   2c0bc:	ldr	r2, [pc, #60]	; 2c100 <flatcc_builder_truncate_string@@Base+0x5c>
   2c0c0:	ldr	r1, [pc, #60]	; 2c104 <flatcc_builder_truncate_string@@Base+0x60>
   2c0c4:	ldr	r0, [pc, #60]	; 2c108 <flatcc_builder_truncate_string@@Base+0x64>
   2c0c8:	bl	141a4 <__assert_fail@plt>
   2c0cc:	ldr	r3, [r2, #20]
   2c0d0:	cmp	r3, r1
   2c0d4:	ldrcc	r3, [pc, #32]	; 2c0fc <flatcc_builder_truncate_string@@Base+0x58>
   2c0d8:	movcc	r2, #1004	; 0x3ec
   2c0dc:	ldrcc	r1, [pc, #32]	; 2c104 <flatcc_builder_truncate_string@@Base+0x60>
   2c0e0:	ldrcc	r0, [pc, #36]	; 2c10c <flatcc_builder_truncate_string@@Base+0x68>
   2c0e4:	bcc	2c0c8 <flatcc_builder_truncate_string@@Base+0x24>
   2c0e8:	sub	r3, r3, r1
   2c0ec:	str	r3, [r2, #20]
   2c0f0:	bl	2abac <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2c0f4:	mov	r0, #0
   2c0f8:	pop	{r4, pc}
   2c0fc:	andeq	sl, r4, r0, lsr ip
   2c100:	andeq	r0, r0, fp, ror #7
   2c104:	andeq	sl, r4, r6, lsl #30
   2c108:	andeq	fp, r4, ip, asr #1
   2c10c:	andeq	fp, r4, r7, asr r1

0002c110 <flatcc_builder_start_vector@@Base>:
   2c110:	cmp	r2, #4
   2c114:	push	{r4, r5, r6, r7, r8, lr}
   2c118:	mov	r7, r1
   2c11c:	movcs	r1, r2
   2c120:	movcc	r1, #4
   2c124:	mov	r5, r0
   2c128:	mov	r6, r3
   2c12c:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2c130:	subs	r4, r0, #0
   2c134:	mvnne	r4, #0
   2c138:	bne	2c160 <flatcc_builder_start_vector@@Base+0x50>
   2c13c:	ldr	r2, [r5, #32]
   2c140:	mov	r3, #4
   2c144:	mvn	r1, #3
   2c148:	str	r7, [r2, #16]
   2c14c:	str	r4, [r2, #20]
   2c150:	str	r6, [r2, #24]
   2c154:	strh	r3, [r2, #14]
   2c158:	mov	r0, r5
   2c15c:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2c160:	mov	r0, r4
   2c164:	pop	{r4, r5, r6, r7, r8, pc}

0002c168 <flatcc_builder_start_offset_vector@@Base>:
   2c168:	push	{r4, r5, r6, lr}
   2c16c:	mov	r1, #4
   2c170:	mov	r5, r0
   2c174:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2c178:	subs	r4, r0, #0
   2c17c:	mvnne	r4, #0
   2c180:	bne	2c1a8 <flatcc_builder_start_offset_vector@@Base+0x40>
   2c184:	ldr	r3, [r5, #32]
   2c188:	mov	r2, #4
   2c18c:	mvn	r1, #3
   2c190:	str	r2, [r3, #16]
   2c194:	mov	r2, #5
   2c198:	str	r4, [r3, #20]
   2c19c:	strh	r2, [r3, #14]
   2c1a0:	mov	r0, r5
   2c1a4:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2c1a8:	mov	r0, r4
   2c1ac:	pop	{r4, r5, r6, pc}

0002c1b0 <flatcc_builder_start_string@@Base>:
   2c1b0:	push	{r4, r5, r6, lr}
   2c1b4:	mov	r1, #1
   2c1b8:	mov	r5, r0
   2c1bc:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2c1c0:	subs	r4, r0, #0
   2c1c4:	mvnne	r4, #0
   2c1c8:	bne	2c1f0 <flatcc_builder_start_string@@Base+0x40>
   2c1cc:	ldr	r3, [r5, #32]
   2c1d0:	mov	r2, #1
   2c1d4:	mvn	r1, #3
   2c1d8:	str	r2, [r3, #16]
   2c1dc:	mov	r2, #6
   2c1e0:	str	r4, [r3, #20]
   2c1e4:	strh	r2, [r3, #14]
   2c1e8:	mov	r0, r5
   2c1ec:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2c1f0:	mov	r0, r4
   2c1f4:	pop	{r4, r5, r6, pc}

0002c1f8 <flatcc_builder_reserve_table@@Base>:
   2c1f8:	cmp	r1, #0
   2c1fc:	bge	2c218 <flatcc_builder_reserve_table@@Base+0x20>
   2c200:	push	{r4, lr}
   2c204:	ldr	r3, [pc, #16]	; 2c21c <flatcc_builder_reserve_table@@Base+0x24>
   2c208:	ldr	r2, [pc, #16]	; 2c220 <flatcc_builder_reserve_table@@Base+0x28>
   2c20c:	ldr	r1, [pc, #16]	; 2c224 <flatcc_builder_reserve_table@@Base+0x2c>
   2c210:	ldr	r0, [pc, #16]	; 2c228 <flatcc_builder_reserve_table@@Base+0x30>
   2c214:	bl	141a4 <__assert_fail@plt>
   2c218:	b	2ae94 <flatcc_builder_default_alloc@@Base+0x248>
   2c21c:	andeq	sl, r4, pc, asr #24
   2c220:	andeq	r0, r0, r9, lsr #8
   2c224:	andeq	sl, r4, r6, lsl #30
   2c228:	andeq	fp, r4, pc, lsl #3

0002c22c <flatcc_builder_start_table@@Base>:
   2c22c:	push	{r4, r5, r6, lr}
   2c230:	mov	r5, r1
   2c234:	mov	r1, #4
   2c238:	mov	r4, r0
   2c23c:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2c240:	cmp	r0, #0
   2c244:	beq	2c254 <flatcc_builder_start_table@@Base+0x28>
   2c248:	mvn	r5, #0
   2c24c:	mov	r0, r5
   2c250:	pop	{r4, r5, r6, pc}
   2c254:	ldr	r1, [r4, #52]	; 0x34
   2c258:	ldr	r2, [r4, #4]
   2c25c:	ldr	r3, [r4, #32]
   2c260:	sub	r2, r2, r1
   2c264:	str	r2, [r3, #16]
   2c268:	ldr	r1, [r4, #76]	; 0x4c
   2c26c:	ldr	r2, [r4]
   2c270:	sub	r2, r2, r1
   2c274:	str	r2, [r3, #20]
   2c278:	ldr	r2, [r4, #12]
   2c27c:	mov	r1, r5
   2c280:	str	r2, [r3, #24]
   2c284:	ldrh	r2, [r4, #8]
   2c288:	strh	r2, [r3, #28]
   2c28c:	ldr	r2, [pc, #44]	; 2c2c0 <flatcc_builder_start_table@@Base+0x94>
   2c290:	strh	r0, [r4, #8]
   2c294:	str	r2, [r4, #12]
   2c298:	mov	r2, #3
   2c29c:	strh	r2, [r3, #14]
   2c2a0:	mov	r0, r4
   2c2a4:	bl	2ae94 <flatcc_builder_default_alloc@@Base+0x248>
   2c2a8:	subs	r5, r0, #0
   2c2ac:	bne	2c248 <flatcc_builder_start_table@@Base+0x1c>
   2c2b0:	ldr	r1, [pc, #12]	; 2c2c4 <flatcc_builder_start_table@@Base+0x98>
   2c2b4:	mov	r0, r4
   2c2b8:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2c2bc:	b	2c24c <flatcc_builder_start_table@@Base+0x20>
   2c2c0:	svccs	0x00693b52
   2c2c4:	strdeq	pc, [r0], -ip

0002c2c8 <flatcc_builder_create_vtable@@Base>:
   2c2c8:	push	{lr}		; (str lr, [sp, #-4]!)
   2c2cc:	sub	sp, sp, #76	; 0x4c
   2c2d0:	cmp	r2, #0
   2c2d4:	mov	r3, #0
   2c2d8:	str	r3, [sp]
   2c2dc:	str	r3, [sp, #4]
   2c2e0:	movne	r3, #1
   2c2e4:	strne	r3, [sp, #4]
   2c2e8:	ldr	r3, [r0, #152]	; 0x98
   2c2ec:	strne	r1, [sp, #8]
   2c2f0:	strne	r2, [sp]
   2c2f4:	strne	r2, [sp, #12]
   2c2f8:	cmp	r3, #0
   2c2fc:	mov	r1, sp
   2c300:	bne	2c31c <flatcc_builder_create_vtable@@Base+0x54>
   2c304:	ldr	r3, [r0, #180]	; 0xb4
   2c308:	cmp	r3, #0
   2c30c:	bne	2c31c <flatcc_builder_create_vtable@@Base+0x54>
   2c310:	bl	2af18 <flatcc_builder_default_alloc@@Base+0x2cc>
   2c314:	add	sp, sp, #76	; 0x4c
   2c318:	pop	{pc}		; (ldr pc, [sp], #4)
   2c31c:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2c320:	cmp	r0, #0
   2c324:	addne	r0, r0, #1
   2c328:	b	2c314 <flatcc_builder_create_vtable@@Base+0x4c>

0002c32c <flatcc_builder_create_cached_vtable@@Base>:
   2c32c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c330:	mov	r4, r0
   2c334:	ldr	r5, [r0, #116]	; 0x74
   2c338:	sub	sp, sp, #20
   2c33c:	cmp	r5, #0
   2c340:	mov	fp, r1
   2c344:	mov	r7, r2
   2c348:	mov	r6, r3
   2c34c:	bne	2c3f4 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2c350:	ldr	r3, [r0, #124]	; 0x7c
   2c354:	add	r9, r0, #92	; 0x5c
   2c358:	cmp	r3, #0
   2c35c:	beq	2c374 <flatcc_builder_create_cached_vtable@@Base+0x48>
   2c360:	ldr	r3, [pc, #556]	; 2c594 <flatcc_builder_create_cached_vtable@@Base+0x268>
   2c364:	ldr	r2, [pc, #556]	; 2c598 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   2c368:	ldr	r1, [pc, #556]	; 2c59c <flatcc_builder_create_cached_vtable@@Base+0x270>
   2c36c:	ldr	r0, [pc, #556]	; 2c5a0 <flatcc_builder_create_cached_vtable@@Base+0x274>
   2c370:	bl	141a4 <__assert_fail@plt>
   2c374:	str	r5, [sp]
   2c378:	mov	r3, #16
   2c37c:	mov	r2, r5
   2c380:	mov	r1, #6
   2c384:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2c388:	cmp	r0, #0
   2c38c:	beq	2c3c8 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2c390:	mov	r3, #16
   2c394:	str	r3, [r4, #124]	; 0x7c
   2c398:	mov	r3, #5
   2c39c:	str	r3, [sp]
   2c3a0:	mov	r1, r9
   2c3a4:	mov	r3, #1
   2c3a8:	ldr	r8, [r4, #48]	; 0x30
   2c3ac:	mov	r2, #256	; 0x100
   2c3b0:	ldr	r0, [r4, #40]	; 0x28
   2c3b4:	blx	r8
   2c3b8:	cmp	r0, #0
   2c3bc:	moveq	r3, #256	; 0x100
   2c3c0:	ldreq	r1, [r4, #96]	; 0x60
   2c3c4:	beq	2c3d4 <flatcc_builder_create_cached_vtable@@Base+0xa8>
   2c3c8:	mov	r0, #0
   2c3cc:	b	2c544 <flatcc_builder_create_cached_vtable@@Base+0x218>
   2c3d0:	mov	r3, r2
   2c3d4:	lsl	r2, r3, #1
   2c3d8:	cmp	r2, r1
   2c3dc:	bls	2c3d0 <flatcc_builder_create_cached_vtable@@Base+0xa4>
   2c3e0:	lsr	r3, r3, #2
   2c3e4:	mov	r2, #1
   2c3e8:	cmp	r3, r2, lsl r5
   2c3ec:	bhi	2c4b4 <flatcc_builder_create_cached_vtable@@Base+0x188>
   2c3f0:	str	r5, [r4, #116]	; 0x74
   2c3f4:	ldr	r3, [r4, #116]	; 0x74
   2c3f8:	ldr	r8, [r4, #92]	; 0x5c
   2c3fc:	rsb	r3, r3, #32
   2c400:	lsr	r6, r6, r3
   2c404:	adds	r3, r8, r6, lsl #2
   2c408:	str	r3, [sp, #8]
   2c40c:	ldrne	r9, [r8, r6, lsl #2]
   2c410:	movne	sl, #0
   2c414:	beq	2c3c8 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2c418:	cmp	r9, #0
   2c41c:	bne	2c4bc <flatcc_builder_create_cached_vtable@@Base+0x190>
   2c420:	str	r9, [sp]
   2c424:	mov	r3, #16
   2c428:	ldr	r2, [r4, #124]	; 0x7c
   2c42c:	mov	r1, #6
   2c430:	mov	r0, r4
   2c434:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2c438:	subs	r5, r0, #0
   2c43c:	beq	2c3c8 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2c440:	ldr	r3, [r4, #124]	; 0x7c
   2c444:	mov	r1, fp
   2c448:	add	r2, r3, #16
   2c44c:	str	r2, [r4, #124]	; 0x7c
   2c450:	ldr	r2, [r4, #152]	; 0x98
   2c454:	mov	r0, r4
   2c458:	str	r2, [r5, #4]
   2c45c:	ldr	r2, [r8, r6, lsl #2]
   2c460:	str	r2, [r5, #12]
   2c464:	str	r3, [r8, r6, lsl #2]
   2c468:	mov	r2, r7
   2c46c:	bl	2c2c8 <flatcc_builder_create_vtable@@Base>
   2c470:	cmp	r0, #0
   2c474:	str	r0, [r5]
   2c478:	beq	2c3c8 <flatcc_builder_create_cached_vtable@@Base+0x9c>
   2c47c:	cmp	sl, #0
   2c480:	ldrne	r3, [sl, #8]
   2c484:	strne	r3, [r5, #8]
   2c488:	bne	2c540 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2c48c:	ldr	r2, [r4, #172]	; 0xac
   2c490:	cmp	r2, #0
   2c494:	beq	2c54c <flatcc_builder_create_cached_vtable@@Base+0x220>
   2c498:	ldr	r3, [r4, #120]	; 0x78
   2c49c:	add	r3, r7, r3
   2c4a0:	cmp	r2, r3
   2c4a4:	bcs	2c54c <flatcc_builder_create_cached_vtable@@Base+0x220>
   2c4a8:	mov	r0, r4
   2c4ac:	bl	2b288 <flatcc_builder_flush_vtable_cache@@Base>
   2c4b0:	b	2c540 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2c4b4:	add	r5, r5, #1
   2c4b8:	b	2c3e8 <flatcc_builder_create_cached_vtable@@Base+0xbc>
   2c4bc:	ldr	r5, [r4, #100]	; 0x64
   2c4c0:	ldr	r0, [r4, #68]	; 0x44
   2c4c4:	add	r5, r5, r9
   2c4c8:	ldr	r2, [r5, #8]
   2c4cc:	add	r1, r0, r2
   2c4d0:	ldrh	r2, [r0, r2]
   2c4d4:	cmp	r2, r7
   2c4d8:	bne	2c4f8 <flatcc_builder_create_cached_vtable@@Base+0x1cc>
   2c4dc:	mov	r2, r7
   2c4e0:	mov	r0, fp
   2c4e4:	str	r3, [sp, #12]
   2c4e8:	bl	1403c <memcmp@plt>
   2c4ec:	ldr	r3, [sp, #12]
   2c4f0:	cmp	r0, #0
   2c4f4:	beq	2c50c <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   2c4f8:	add	r3, r5, #12
   2c4fc:	ldr	r9, [r5, #12]
   2c500:	mov	r5, sl
   2c504:	mov	sl, r5
   2c508:	b	2c418 <flatcc_builder_create_cached_vtable@@Base+0xec>
   2c50c:	ldr	r1, [r5, #4]
   2c510:	ldr	r2, [r4, #152]	; 0x98
   2c514:	cmp	r1, r2
   2c518:	addne	r3, r5, #12
   2c51c:	ldrne	r9, [r5, #12]
   2c520:	bne	2c504 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
   2c524:	ldr	r2, [sp, #8]
   2c528:	cmp	r3, r2
   2c52c:	ldrne	r2, [r5, #12]
   2c530:	strne	r2, [r3]
   2c534:	ldrne	r3, [r8, r6, lsl #2]
   2c538:	strne	r3, [r5, #12]
   2c53c:	strne	r9, [r8, r6, lsl #2]
   2c540:	ldr	r0, [r5]
   2c544:	add	sp, sp, #20
   2c548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c54c:	mov	r3, #0
   2c550:	str	r3, [sp]
   2c554:	ldr	r2, [r4, #120]	; 0x78
   2c558:	mov	r3, r7
   2c55c:	mov	r1, #2
   2c560:	mov	r0, r4
   2c564:	bl	2ad44 <flatcc_builder_default_alloc@@Base+0xf8>
   2c568:	cmp	r0, #0
   2c56c:	mvneq	r0, #0
   2c570:	beq	2c544 <flatcc_builder_create_cached_vtable@@Base+0x218>
   2c574:	ldr	r3, [r4, #120]	; 0x78
   2c578:	mov	r2, r7
   2c57c:	str	r3, [r5, #8]
   2c580:	add	r3, r7, r3
   2c584:	str	r3, [r4, #120]	; 0x78
   2c588:	mov	r1, fp
   2c58c:	bl	14024 <memcpy@plt>
   2c590:	b	2c540 <flatcc_builder_create_cached_vtable@@Base+0x214>
   2c594:	andeq	sl, r4, ip, ror #24
   2c598:	andeq	r0, r0, r6, asr r1
   2c59c:	andeq	sl, r4, r6, lsl #30
   2c5a0:	andeq	fp, r4, r9, ror r1

0002c5a4 <flatcc_builder_create_table@@Base>:
   2c5a4:	push	{r4, r5, r6, r7, lr}
   2c5a8:	sub	sp, sp, #84	; 0x54
   2c5ac:	ldr	r4, [sp, #108]	; 0x6c
   2c5b0:	ldr	lr, [sp, #112]	; 0x70
   2c5b4:	cmp	r4, #0
   2c5b8:	bge	2c5d0 <flatcc_builder_create_table@@Base+0x2c>
   2c5bc:	ldr	r3, [pc, #268]	; 2c6d0 <flatcc_builder_create_table@@Base+0x12c>
   2c5c0:	ldr	r2, [pc, #268]	; 2c6d4 <flatcc_builder_create_table@@Base+0x130>
   2c5c4:	ldr	r1, [pc, #268]	; 2c6d8 <flatcc_builder_create_table@@Base+0x134>
   2c5c8:	ldr	r0, [pc, #268]	; 2c6dc <flatcc_builder_create_table@@Base+0x138>
   2c5cc:	bl	141a4 <__assert_fail@plt>
   2c5d0:	tst	lr, #1
   2c5d4:	ldreq	r3, [pc, #244]	; 2c6d0 <flatcc_builder_create_table@@Base+0x12c>
   2c5d8:	ldreq	r2, [pc, #256]	; 2c6e0 <flatcc_builder_create_table@@Base+0x13c>
   2c5dc:	ldreq	r1, [pc, #244]	; 2c6d8 <flatcc_builder_create_table@@Base+0x134>
   2c5e0:	ldreq	r0, [pc, #252]	; 2c6e4 <flatcc_builder_create_table@@Base+0x140>
   2c5e4:	beq	2c5cc <flatcc_builder_create_table@@Base+0x28>
   2c5e8:	ldrh	ip, [r0, #128]	; 0x80
   2c5ec:	cmp	r3, #4
   2c5f0:	movcc	r3, #4
   2c5f4:	ldr	r6, [r0, #136]	; 0x88
   2c5f8:	cmp	ip, r3
   2c5fc:	mvn	r5, #3
   2c600:	sub	ip, r6, r2
   2c604:	strhcc	r3, [r0, #128]	; 0x80
   2c608:	sub	r3, r3, #1
   2c60c:	and	r3, r3, ip
   2c610:	sub	ip, r5, r2
   2c614:	add	ip, ip, r6
   2c618:	sub	ip, ip, r3
   2c61c:	sub	lr, lr, #1
   2c620:	sub	lr, ip, lr
   2c624:	str	lr, [sp, #4]
   2c628:	ldr	lr, [sp, #104]	; 0x68
   2c62c:	sub	ip, r5, ip
   2c630:	add	r4, lr, r4, lsl #1
   2c634:	cmp	r4, lr
   2c638:	bne	2c6b8 <flatcc_builder_create_table@@Base+0x114>
   2c63c:	mov	ip, #4
   2c640:	cmp	r2, #0
   2c644:	str	ip, [sp, #8]
   2c648:	add	lr, sp, ip
   2c64c:	str	ip, [sp, #20]
   2c650:	mov	ip, #1
   2c654:	str	ip, [sp, #12]
   2c658:	strne	r2, [sp, #28]
   2c65c:	addne	ip, r2, #4
   2c660:	movne	r2, #2
   2c664:	strne	ip, [sp, #8]
   2c668:	strne	r1, [sp, #24]
   2c66c:	strne	r2, [sp, #12]
   2c670:	cmp	r3, #0
   2c674:	str	lr, [sp, #16]
   2c678:	beq	2c6a8 <flatcc_builder_create_table@@Base+0x104>
   2c67c:	ldr	r2, [sp, #8]
   2c680:	add	r1, sp, #80	; 0x50
   2c684:	add	r2, r2, r3
   2c688:	str	r2, [sp, #8]
   2c68c:	ldr	r2, [sp, #12]
   2c690:	ldr	ip, [pc, #80]	; 2c6e8 <flatcc_builder_create_table@@Base+0x144>
   2c694:	add	r2, r2, #1
   2c698:	str	r2, [sp, #12]
   2c69c:	add	r1, r1, r2, lsl #3
   2c6a0:	str	ip, [r1, #-72]	; 0xffffffb8
   2c6a4:	str	r3, [r1, #-68]	; 0xffffffbc
   2c6a8:	add	r1, sp, #8
   2c6ac:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2c6b0:	add	sp, sp, #84	; 0x54
   2c6b4:	pop	{r4, r5, r6, r7, pc}
   2c6b8:	ldrh	r5, [lr], #2
   2c6bc:	sub	r7, ip, r5
   2c6c0:	ldr	r6, [r1, r5]
   2c6c4:	add	r6, r6, r7
   2c6c8:	str	r6, [r1, r5]
   2c6cc:	b	2c634 <flatcc_builder_create_table@@Base+0x90>
   2c6d0:	andeq	sl, r4, r5, ror ip
   2c6d4:	ldrdeq	r0, [r0], -r5
   2c6d8:	andeq	sl, r4, r6, lsl #30
   2c6dc:	andeq	fp, r4, r8, lsl #3
   2c6e0:	ldrdeq	r0, [r0], -fp
   2c6e4:	muleq	r4, sl, r1
   2c6e8:	andeq	sl, r4, r0, lsr #16

0002c6ec <flatcc_builder_check_required_field@@Base>:
   2c6ec:	ldr	r3, [r0, #32]
   2c6f0:	ldrh	r3, [r3, #14]
   2c6f4:	cmp	r3, #3
   2c6f8:	beq	2c714 <flatcc_builder_check_required_field@@Base+0x28>
   2c6fc:	push	{r4, lr}
   2c700:	ldr	r3, [pc, #52]	; 2c73c <flatcc_builder_check_required_field@@Base+0x50>
   2c704:	ldr	r2, [pc, #52]	; 2c740 <flatcc_builder_check_required_field@@Base+0x54>
   2c708:	ldr	r1, [pc, #52]	; 2c744 <flatcc_builder_check_required_field@@Base+0x58>
   2c70c:	ldr	r0, [pc, #52]	; 2c748 <flatcc_builder_check_required_field@@Base+0x5c>
   2c710:	bl	141a4 <__assert_fail@plt>
   2c714:	ldrh	r3, [r0, #8]
   2c718:	cmp	r3, r1
   2c71c:	movls	r0, #0
   2c720:	bls	2c738 <flatcc_builder_check_required_field@@Base+0x4c>
   2c724:	ldr	r3, [r0, #4]
   2c728:	lsl	r1, r1, #1
   2c72c:	ldrh	r0, [r3, r1]
   2c730:	adds	r0, r0, #0
   2c734:	movne	r0, #1
   2c738:	bx	lr
   2c73c:	muleq	r4, r1, ip
   2c740:	strdeq	r0, [r0], -r8
   2c744:	andeq	sl, r4, r6, lsl #30
   2c748:	andeq	fp, r4, r5, lsr #3

0002c74c <flatcc_builder_check_union_field@@Base>:
   2c74c:	ldr	r3, [r0, #32]
   2c750:	ldrh	r3, [r3, #14]
   2c754:	cmp	r3, #3
   2c758:	beq	2c774 <flatcc_builder_check_union_field@@Base+0x28>
   2c75c:	push	{r4, lr}
   2c760:	ldr	r3, [pc, #112]	; 2c7d8 <flatcc_builder_check_union_field@@Base+0x8c>
   2c764:	ldr	r2, [pc, #112]	; 2c7dc <flatcc_builder_check_union_field@@Base+0x90>
   2c768:	ldr	r1, [pc, #112]	; 2c7e0 <flatcc_builder_check_union_field@@Base+0x94>
   2c76c:	ldr	r0, [pc, #112]	; 2c7e4 <flatcc_builder_check_union_field@@Base+0x98>
   2c770:	bl	141a4 <__assert_fail@plt>
   2c774:	cmp	r1, #0
   2c778:	beq	2c7d0 <flatcc_builder_check_union_field@@Base+0x84>
   2c77c:	ldrh	r3, [r0, #8]
   2c780:	cmp	r3, r1
   2c784:	bls	2c7d0 <flatcc_builder_check_union_field@@Base+0x84>
   2c788:	sub	r1, r1, #-2147483647	; 0x80000001
   2c78c:	ldr	r3, [r0, #4]
   2c790:	lsl	r1, r1, #1
   2c794:	ldrh	r2, [r3, r1]!
   2c798:	cmp	r2, #0
   2c79c:	ldrheq	r0, [r3, #2]
   2c7a0:	beq	2c7c4 <flatcc_builder_check_union_field@@Base+0x78>
   2c7a4:	ldr	r1, [r0, #16]
   2c7a8:	ldrh	r0, [r3, #2]
   2c7ac:	ldrb	r2, [r1, r2]
   2c7b0:	cmp	r2, #0
   2c7b4:	beq	2c7c4 <flatcc_builder_check_union_field@@Base+0x78>
   2c7b8:	adds	r0, r0, #0
   2c7bc:	movne	r0, #1
   2c7c0:	bx	lr
   2c7c4:	clz	r0, r0
   2c7c8:	lsr	r0, r0, #5
   2c7cc:	b	2c7c0 <flatcc_builder_check_union_field@@Base+0x74>
   2c7d0:	mov	r0, #0
   2c7d4:	b	2c7c0 <flatcc_builder_check_union_field@@Base+0x74>
   2c7d8:			; <UNDEFINED> instruction: 0x0004acb5
   2c7dc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2c7e0:	andeq	sl, r4, r6, lsl #30
   2c7e4:	andeq	fp, r4, r5, lsr #3

0002c7e8 <flatcc_builder_check_required@@Base>:
   2c7e8:	ldr	r3, [r0, #32]
   2c7ec:	push	{r4, lr}
   2c7f0:	ldrh	r3, [r3, #14]
   2c7f4:	cmp	r3, #3
   2c7f8:	beq	2c810 <flatcc_builder_check_required@@Base+0x28>
   2c7fc:	ldr	r3, [pc, #84]	; 2c858 <flatcc_builder_check_required@@Base+0x70>
   2c800:	ldr	r2, [pc, #84]	; 2c85c <flatcc_builder_check_required@@Base+0x74>
   2c804:	ldr	r1, [pc, #84]	; 2c860 <flatcc_builder_check_required@@Base+0x78>
   2c808:	ldr	r0, [pc, #84]	; 2c864 <flatcc_builder_check_required@@Base+0x7c>
   2c80c:	bl	141a4 <__assert_fail@plt>
   2c810:	ldrh	r3, [r0, #8]
   2c814:	cmp	r3, r2
   2c818:	subge	r1, r1, #2
   2c81c:	movge	ip, #0
   2c820:	bge	2c848 <flatcc_builder_check_required@@Base+0x60>
   2c824:	mov	r0, #0
   2c828:	pop	{r4, pc}
   2c82c:	ldrh	r3, [r1, #2]!
   2c830:	ldr	lr, [r0, #4]
   2c834:	lsl	r3, r3, #1
   2c838:	ldrh	r3, [lr, r3]
   2c83c:	cmp	r3, #0
   2c840:	beq	2c824 <flatcc_builder_check_required@@Base+0x3c>
   2c844:	add	ip, ip, #1
   2c848:	cmp	ip, r2
   2c84c:	blt	2c82c <flatcc_builder_check_required@@Base+0x44>
   2c850:	mov	r0, #1
   2c854:	pop	{r4, pc}
   2c858:	ldrdeq	sl, [r4], -r6
   2c85c:	andeq	r0, r0, r1, lsl r5
   2c860:	andeq	sl, r4, r6, lsl #30
   2c864:	andeq	fp, r4, r5, lsr #3

0002c868 <flatcc_builder_end_table@@Base>:
   2c868:	ldr	r3, [r0, #32]
   2c86c:	push	{r4, r5, r6, r7, lr}
   2c870:	sub	sp, sp, #20
   2c874:	ldrh	r3, [r3, #14]
   2c878:	cmp	r3, #3
   2c87c:	beq	2c894 <flatcc_builder_end_table@@Base+0x2c>
   2c880:	ldr	r3, [pc, #260]	; 2c98c <flatcc_builder_end_table@@Base+0x124>
   2c884:	ldr	r2, [pc, #260]	; 2c990 <flatcc_builder_end_table@@Base+0x128>
   2c888:	ldr	r1, [pc, #260]	; 2c994 <flatcc_builder_end_table@@Base+0x12c>
   2c88c:	ldr	r0, [pc, #260]	; 2c998 <flatcc_builder_end_table@@Base+0x130>
   2c890:	bl	141a4 <__assert_fail@plt>
   2c894:	ldrh	r5, [r0, #8]
   2c898:	ldr	r3, [r0, #20]
   2c89c:	ldr	r1, [r0, #4]
   2c8a0:	add	r5, r5, #2
   2c8a4:	add	r3, r3, #4
   2c8a8:	lsl	r5, r5, #1
   2c8ac:	uxth	r2, r3
   2c8b0:	uxth	r5, r5
   2c8b4:	ldr	r3, [r0, #12]
   2c8b8:	strh	r2, [r1, #-2]
   2c8bc:	strh	r5, [r1, #-4]
   2c8c0:	sub	r6, r1, #4
   2c8c4:	ldr	r1, [pc, #208]	; 2c99c <flatcc_builder_end_table@@Base+0x134>
   2c8c8:	eor	r3, r3, r5
   2c8cc:	mov	r4, r0
   2c8d0:	mul	r3, r1, r3
   2c8d4:	eor	r3, r3, r2
   2c8d8:	mov	r2, r5
   2c8dc:	mul	r3, r1, r3
   2c8e0:	mov	r1, r6
   2c8e4:	str	r3, [r0, #12]
   2c8e8:	bl	2c32c <flatcc_builder_create_cached_vtable@@Base>
   2c8ec:	subs	r7, r0, #0
   2c8f0:	beq	2c980 <flatcc_builder_end_table@@Base+0x118>
   2c8f4:	mov	r2, r5
   2c8f8:	mov	r1, #0
   2c8fc:	mov	r0, r6
   2c900:	bl	140fc <memset@plt>
   2c904:	ldr	r3, [r4, #32]
   2c908:	ldr	r1, [r4, #76]	; 0x4c
   2c90c:	mov	r0, r4
   2c910:	ldr	r3, [r3, #20]
   2c914:	add	r1, r1, r3
   2c918:	ldrh	r3, [r4, #130]	; 0x82
   2c91c:	str	r7, [sp, #8]
   2c920:	ldr	r2, [r4]
   2c924:	sub	r2, r2, r1
   2c928:	asr	r2, r2, #1
   2c92c:	stm	sp, {r1, r2}
   2c930:	ldr	r2, [r4, #20]
   2c934:	ldr	r1, [r4, #16]
   2c938:	bl	2c5a4 <flatcc_builder_create_table@@Base>
   2c93c:	subs	r7, r0, #0
   2c940:	beq	2c980 <flatcc_builder_end_table@@Base+0x118>
   2c944:	ldr	r3, [r4, #32]
   2c948:	mov	r0, r4
   2c94c:	ldr	r2, [r3, #24]
   2c950:	str	r2, [r4, #12]
   2c954:	ldrh	r2, [r3, #28]
   2c958:	strh	r2, [r4, #8]
   2c95c:	ldr	r2, [r4, #52]	; 0x34
   2c960:	ldr	r1, [r3, #16]
   2c964:	add	r2, r2, r1
   2c968:	str	r2, [r4, #4]
   2c96c:	ldr	r2, [r4, #76]	; 0x4c
   2c970:	ldr	r3, [r3, #20]
   2c974:	add	r3, r2, r3
   2c978:	str	r3, [r4]
   2c97c:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2c980:	mov	r0, r7
   2c984:	add	sp, sp, #20
   2c988:	pop	{r4, r5, r6, r7, pc}
   2c98c:	strdeq	sl, [r4], -r4
   2c990:	andeq	r0, r0, r5, lsr #10
   2c994:	andeq	sl, r4, r6, lsl #30
   2c998:	andeq	fp, r4, r5, lsr #3
   2c99c:			; <UNDEFINED> instruction: 0x9e3779b1

0002c9a0 <flatcc_builder_create_vector@@Base>:
   2c9a0:	push	{lr}		; (str lr, [sp, #-4]!)
   2c9a4:	sub	sp, sp, #84	; 0x54
   2c9a8:	ldr	lr, [sp, #92]	; 0x5c
   2c9ac:	ldrh	ip, [sp, #88]	; 0x58
   2c9b0:	cmp	r2, lr
   2c9b4:	bls	2c9cc <flatcc_builder_create_vector@@Base+0x2c>
   2c9b8:	ldr	r3, [pc, #180]	; 2ca74 <flatcc_builder_create_vector@@Base+0xd4>
   2c9bc:	ldr	r2, [pc, #180]	; 2ca78 <flatcc_builder_create_vector@@Base+0xd8>
   2c9c0:	ldr	r1, [pc, #180]	; 2ca7c <flatcc_builder_create_vector@@Base+0xdc>
   2c9c4:	ldr	r0, [pc, #180]	; 2ca80 <flatcc_builder_create_vector@@Base+0xe0>
   2c9c8:	bl	141a4 <__assert_fail@plt>
   2c9cc:	ldrh	lr, [r0, #128]	; 0x80
   2c9d0:	mul	r3, r3, r2
   2c9d4:	cmp	ip, #4
   2c9d8:	movcc	ip, #4
   2c9dc:	str	r2, [sp, #4]
   2c9e0:	ldr	r2, [r0, #136]	; 0x88
   2c9e4:	cmp	lr, ip
   2c9e8:	sub	r2, r2, r3
   2c9ec:	strhcc	ip, [r0, #128]	; 0x80
   2c9f0:	sub	ip, ip, #1
   2c9f4:	and	ip, ip, r2
   2c9f8:	mov	r2, #4
   2c9fc:	cmp	r3, #0
   2ca00:	str	r2, [sp, #8]
   2ca04:	add	lr, sp, r2
   2ca08:	str	r2, [sp, #20]
   2ca0c:	mov	r2, #1
   2ca10:	str	r2, [sp, #12]
   2ca14:	strne	r3, [sp, #28]
   2ca18:	addne	r2, r3, #4
   2ca1c:	movne	r3, #2
   2ca20:	strne	r2, [sp, #8]
   2ca24:	strne	r1, [sp, #24]
   2ca28:	strne	r3, [sp, #12]
   2ca2c:	cmp	ip, #0
   2ca30:	str	lr, [sp, #16]
   2ca34:	beq	2ca64 <flatcc_builder_create_vector@@Base+0xc4>
   2ca38:	ldr	r3, [sp, #8]
   2ca3c:	add	r2, sp, #80	; 0x50
   2ca40:	add	r3, r3, ip
   2ca44:	str	r3, [sp, #8]
   2ca48:	ldr	r3, [sp, #12]
   2ca4c:	ldr	r1, [pc, #48]	; 2ca84 <flatcc_builder_create_vector@@Base+0xe4>
   2ca50:	add	r3, r3, #1
   2ca54:	str	r3, [sp, #12]
   2ca58:	add	r2, r2, r3, lsl #3
   2ca5c:	str	r1, [r2, #-72]	; 0xffffffb8
   2ca60:	str	ip, [r2, #-68]	; 0xffffffbc
   2ca64:	add	r1, sp, #8
   2ca68:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2ca6c:	add	sp, sp, #84	; 0x54
   2ca70:	pop	{pc}		; (ldr pc, [sp], #4)
   2ca74:	andeq	sl, r4, sp, lsl #26
   2ca78:	andeq	r0, r0, r5, asr r5
   2ca7c:	andeq	sl, r4, r6, lsl #30
   2ca80:	ldrdeq	fp, [r4], -r0
   2ca84:	andeq	sl, r4, r0, lsr #16

0002ca88 <flatcc_builder_end_vector@@Base>:
   2ca88:	push	{r0, r1, r2, r4, r5, lr}
   2ca8c:	ldr	r2, [r0, #32]
   2ca90:	ldrh	r3, [r2, #14]
   2ca94:	cmp	r3, #4
   2ca98:	beq	2cab0 <flatcc_builder_end_vector@@Base+0x28>
   2ca9c:	ldr	r3, [pc, #76]	; 2caf0 <flatcc_builder_end_vector@@Base+0x68>
   2caa0:	ldr	r2, [pc, #76]	; 2caf4 <flatcc_builder_end_vector@@Base+0x6c>
   2caa4:	ldr	r1, [pc, #76]	; 2caf8 <flatcc_builder_end_vector@@Base+0x70>
   2caa8:	ldr	r0, [pc, #76]	; 2cafc <flatcc_builder_end_vector@@Base+0x74>
   2caac:	bl	141a4 <__assert_fail@plt>
   2cab0:	ldr	r3, [r2, #24]
   2cab4:	mov	r4, r0
   2cab8:	str	r3, [sp, #4]
   2cabc:	ldrh	r3, [r0, #130]	; 0x82
   2cac0:	str	r3, [sp]
   2cac4:	ldr	r3, [r2, #16]
   2cac8:	ldr	r1, [r0, #16]
   2cacc:	ldr	r2, [r2, #20]
   2cad0:	bl	2c9a0 <flatcc_builder_create_vector@@Base>
   2cad4:	subs	r5, r0, #0
   2cad8:	beq	2cae4 <flatcc_builder_end_vector@@Base+0x5c>
   2cadc:	mov	r0, r4
   2cae0:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2cae4:	mov	r0, r5
   2cae8:	add	sp, sp, #12
   2caec:	pop	{r4, r5, pc}
   2caf0:	andeq	sl, r4, sl, lsr #26
   2caf4:	andeq	r0, r0, r8, ror r5
   2caf8:	andeq	sl, r4, r6, lsl #30
   2cafc:	andeq	fp, r4, r0, lsr r0

0002cb00 <flatcc_builder_vector_count@@Base>:
   2cb00:	ldr	r3, [r0, #32]
   2cb04:	ldr	r0, [r3, #20]
   2cb08:	bx	lr

0002cb0c <flatcc_builder_vector_edit@@Base>:
   2cb0c:	ldr	r0, [r0, #16]
   2cb10:	bx	lr

0002cb14 <flatcc_builder_create_offset_vector_direct@@Base>:
   2cb14:	cmn	r2, #-1073741823	; 0xc0000001
   2cb18:	bhi	2cb24 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   2cb1c:	mov	r3, #0
   2cb20:	b	2b118 <flatcc_builder_default_alloc@@Base+0x4cc>
   2cb24:	mov	r0, #0
   2cb28:	bx	lr

0002cb2c <flatcc_builder_end_offset_vector@@Base>:
   2cb2c:	ldr	r3, [r0, #32]
   2cb30:	push	{r4, r5, r6, lr}
   2cb34:	ldrh	r2, [r3, #14]
   2cb38:	cmp	r2, #5
   2cb3c:	beq	2cb54 <flatcc_builder_end_offset_vector@@Base+0x28>
   2cb40:	ldr	r3, [pc, #52]	; 2cb7c <flatcc_builder_end_offset_vector@@Base+0x50>
   2cb44:	ldr	r2, [pc, #52]	; 2cb80 <flatcc_builder_end_offset_vector@@Base+0x54>
   2cb48:	ldr	r1, [pc, #52]	; 2cb84 <flatcc_builder_end_offset_vector@@Base+0x58>
   2cb4c:	ldr	r0, [pc, #52]	; 2cb88 <flatcc_builder_end_offset_vector@@Base+0x5c>
   2cb50:	bl	141a4 <__assert_fail@plt>
   2cb54:	ldr	r2, [r3, #20]
   2cb58:	ldr	r1, [r0, #16]
   2cb5c:	mov	r4, r0
   2cb60:	bl	2cb14 <flatcc_builder_create_offset_vector_direct@@Base>
   2cb64:	subs	r5, r0, #0
   2cb68:	beq	2cb74 <flatcc_builder_end_offset_vector@@Base+0x48>
   2cb6c:	mov	r0, r4
   2cb70:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2cb74:	mov	r0, r5
   2cb78:	pop	{r4, r5, r6, pc}
   2cb7c:	andeq	sl, r4, r4, asr #26
   2cb80:	andeq	r0, r0, r8, asr #11
   2cb84:	andeq	sl, r4, r6, lsl #30
   2cb88:	muleq	r4, r9, r0

0002cb8c <flatcc_builder_create_offset_vector@@Base>:
   2cb8c:	push	{r4, r5, r6, lr}
   2cb90:	mov	r4, r0
   2cb94:	mov	r6, r1
   2cb98:	mov	r5, r2
   2cb9c:	bl	2c168 <flatcc_builder_start_offset_vector@@Base>
   2cba0:	cmp	r0, #0
   2cba4:	bne	2cbd4 <flatcc_builder_create_offset_vector@@Base+0x48>
   2cba8:	mov	r1, r5
   2cbac:	mov	r0, r4
   2cbb0:	bl	2bd64 <flatcc_builder_extend_offset_vector@@Base>
   2cbb4:	cmp	r0, #0
   2cbb8:	beq	2cbd4 <flatcc_builder_create_offset_vector@@Base+0x48>
   2cbbc:	lsl	r2, r5, #2
   2cbc0:	mov	r1, r6
   2cbc4:	bl	14024 <memcpy@plt>
   2cbc8:	mov	r0, r4
   2cbcc:	pop	{r4, r5, r6, lr}
   2cbd0:	b	2cb2c <flatcc_builder_end_offset_vector@@Base>
   2cbd4:	mov	r0, #0
   2cbd8:	pop	{r4, r5, r6, pc}

0002cbdc <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2cbdc:	ldr	r2, [r0, #32]
   2cbe0:	mov	r3, r1
   2cbe4:	push	{r4, r5, r6, lr}
   2cbe8:	ldrh	r1, [r2, #14]
   2cbec:	cmp	r1, #5
   2cbf0:	beq	2cc08 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2cbf4:	ldr	r3, [pc, #64]	; 2cc3c <flatcc_builder_end_offset_vector_for_unions@@Base+0x60>
   2cbf8:	ldr	r2, [pc, #64]	; 2cc40 <flatcc_builder_end_offset_vector_for_unions@@Base+0x64>
   2cbfc:	ldr	r1, [pc, #64]	; 2cc44 <flatcc_builder_end_offset_vector_for_unions@@Base+0x68>
   2cc00:	ldr	r0, [pc, #64]	; 2cc48 <flatcc_builder_end_offset_vector_for_unions@@Base+0x6c>
   2cc04:	bl	141a4 <__assert_fail@plt>
   2cc08:	ldr	r2, [r2, #20]
   2cc0c:	cmn	r2, #-1073741823	; 0xc0000001
   2cc10:	movhi	r5, #0
   2cc14:	bhi	2cc34 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2cc18:	ldr	r1, [r0, #16]
   2cc1c:	mov	r4, r0
   2cc20:	bl	2b118 <flatcc_builder_default_alloc@@Base+0x4cc>
   2cc24:	subs	r5, r0, #0
   2cc28:	beq	2cc34 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2cc2c:	mov	r0, r4
   2cc30:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2cc34:	mov	r0, r5
   2cc38:	pop	{r4, r5, r6, pc}
   2cc3c:	andeq	sl, r4, r5, ror #26
   2cc40:	ldrdeq	r0, [r0], -r5
   2cc44:	andeq	sl, r4, r6, lsl #30
   2cc48:	muleq	r4, r9, r0

0002cc4c <flatcc_builder_offset_vector_edit@@Base>:
   2cc4c:	ldr	r0, [r0, #16]
   2cc50:	bx	lr

0002cc54 <flatcc_builder_offset_vector_count@@Base>:
   2cc54:	ldr	r3, [r0, #32]
   2cc58:	ldr	r0, [r3, #20]
   2cc5c:	bx	lr

0002cc60 <flatcc_builder_create_union_vector_direct@@Base>:
   2cc60:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2cc64:	mov	r4, r0
   2cc68:	ldr	r5, [sp, #32]
   2cc6c:	cmn	r5, #-1073741823	; 0xc0000001
   2cc70:	bls	2cc8c <flatcc_builder_create_union_vector_direct@@Base+0x2c>
   2cc74:	mov	r3, #0
   2cc78:	str	r3, [r4]
   2cc7c:	str	r3, [r4, #4]
   2cc80:	mov	r0, r4
   2cc84:	add	sp, sp, #8
   2cc88:	pop	{r4, r5, r6, r7, r8, pc}
   2cc8c:	mov	r7, r1
   2cc90:	mov	r8, r2
   2cc94:	mov	r1, r3
   2cc98:	mov	r0, r7
   2cc9c:	mov	r3, r2
   2cca0:	mov	r2, r5
   2cca4:	bl	2b118 <flatcc_builder_default_alloc@@Base+0x4cc>
   2cca8:	subs	r6, r0, #0
   2ccac:	beq	2cc74 <flatcc_builder_create_union_vector_direct@@Base+0x14>
   2ccb0:	mvn	r3, #0
   2ccb4:	str	r3, [sp, #4]
   2ccb8:	mov	r3, #1
   2ccbc:	str	r3, [sp]
   2ccc0:	mov	r2, r5
   2ccc4:	mov	r1, r8
   2ccc8:	mov	r0, r7
   2cccc:	bl	2c9a0 <flatcc_builder_create_vector@@Base>
   2ccd0:	stm	r4, {r0, r6}
   2ccd4:	b	2cc80 <flatcc_builder_create_union_vector_direct@@Base+0x20>

0002ccd8 <flatcc_builder_create_union_vector@@Base>:
   2ccd8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   2ccdc:	mov	r7, r0
   2cce0:	mov	r0, r1
   2cce4:	mov	r5, r1
   2cce8:	mov	r6, r2
   2ccec:	mov	r8, r3
   2ccf0:	bl	2c168 <flatcc_builder_start_offset_vector@@Base>
   2ccf4:	subs	r4, r0, #0
   2ccf8:	beq	2cd14 <flatcc_builder_create_union_vector@@Base+0x3c>
   2ccfc:	mov	r3, #0
   2cd00:	str	r3, [r7]
   2cd04:	str	r3, [r7, #4]
   2cd08:	mov	r0, r7
   2cd0c:	add	sp, sp, #16
   2cd10:	pop	{r4, r5, r6, r7, r8, pc}
   2cd14:	mov	r1, r8
   2cd18:	mov	r0, r5
   2cd1c:	bl	2bd64 <flatcc_builder_extend_offset_vector@@Base>
   2cd20:	cmp	r0, #0
   2cd24:	beq	2ccfc <flatcc_builder_create_union_vector@@Base+0x24>
   2cd28:	mov	r1, r8
   2cd2c:	mov	r0, r5
   2cd30:	bl	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2cd34:	subs	r2, r0, #0
   2cd38:	movne	ip, r6
   2cd3c:	ldrne	r3, [r5, #16]
   2cd40:	movne	r1, r4
   2cd44:	beq	2ccfc <flatcc_builder_create_union_vector@@Base+0x24>
   2cd48:	cmp	r1, r8
   2cd4c:	add	ip, ip, #8
   2cd50:	bne	2cd80 <flatcc_builder_create_union_vector@@Base+0xa8>
   2cd54:	str	r1, [sp]
   2cd58:	add	r0, sp, #8
   2cd5c:	mov	r1, r5
   2cd60:	bl	2cc60 <flatcc_builder_create_union_vector_direct@@Base>
   2cd64:	ldr	r6, [sp, #8]
   2cd68:	ldr	r4, [sp, #12]
   2cd6c:	mov	r0, r5
   2cd70:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2cd74:	str	r6, [r7]
   2cd78:	str	r4, [r7, #4]
   2cd7c:	b	2cd08 <flatcc_builder_create_union_vector@@Base+0x30>
   2cd80:	ldrb	r0, [ip, #-8]
   2cd84:	strb	r0, [r2, r1]
   2cd88:	ldr	r0, [ip, #-4]
   2cd8c:	str	r0, [r3, r1, lsl #2]
   2cd90:	add	r1, r1, #1
   2cd94:	b	2cd48 <flatcc_builder_create_union_vector@@Base+0x70>

0002cd98 <flatcc_builder_start_union_vector@@Base>:
   2cd98:	push	{r4, r5, r6, lr}
   2cd9c:	mov	r1, #4
   2cda0:	mov	r5, r0
   2cda4:	bl	2adb4 <flatcc_builder_default_alloc@@Base+0x168>
   2cda8:	subs	r4, r0, #0
   2cdac:	mvnne	r4, #0
   2cdb0:	bne	2cdd8 <flatcc_builder_start_union_vector@@Base+0x40>
   2cdb4:	ldr	r3, [r5, #32]
   2cdb8:	mov	r2, #8
   2cdbc:	mvn	r1, #3
   2cdc0:	str	r2, [r3, #16]
   2cdc4:	mov	r2, #7
   2cdc8:	str	r4, [r3, #20]
   2cdcc:	strh	r2, [r3, #14]
   2cdd0:	mov	r0, r5
   2cdd4:	bl	2aa78 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
   2cdd8:	mov	r0, r4
   2cddc:	pop	{r4, r5, r6, pc}

0002cde0 <flatcc_builder_end_union_vector@@Base>:
   2cde0:	ldr	r3, [r1, #32]
   2cde4:	push	{r4, r5, r6, r7, lr}
   2cde8:	sub	sp, sp, #20
   2cdec:	ldrh	r2, [r3, #14]
   2cdf0:	cmp	r2, #7
   2cdf4:	beq	2ce0c <flatcc_builder_end_union_vector@@Base+0x2c>
   2cdf8:	ldr	r3, [pc, #156]	; 2ce9c <flatcc_builder_end_union_vector@@Base+0xbc>
   2cdfc:	ldr	r2, [pc, #156]	; 2cea0 <flatcc_builder_end_union_vector@@Base+0xc0>
   2ce00:	ldr	r1, [pc, #156]	; 2cea4 <flatcc_builder_end_union_vector@@Base+0xc4>
   2ce04:	ldr	r0, [pc, #156]	; 2cea8 <flatcc_builder_end_union_vector@@Base+0xc8>
   2ce08:	bl	141a4 <__assert_fail@plt>
   2ce0c:	ldr	r7, [r3, #20]
   2ce10:	mov	r5, r1
   2ce14:	mov	r4, r0
   2ce18:	lsl	r6, r7, #2
   2ce1c:	add	r1, r6, r7
   2ce20:	mov	r0, r5
   2ce24:	bl	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2ce28:	subs	r3, r0, #0
   2ce2c:	streq	r3, [r4]
   2ce30:	streq	r3, [r4, #4]
   2ce34:	addne	r2, r3, r6
   2ce38:	ldrne	r0, [r5, #16]
   2ce3c:	movne	r1, #0
   2ce40:	bne	2ce64 <flatcc_builder_end_union_vector@@Base+0x84>
   2ce44:	mov	r0, r4
   2ce48:	add	sp, sp, #20
   2ce4c:	pop	{r4, r5, r6, r7, pc}
   2ce50:	ldrb	ip, [r0, #-8]
   2ce54:	strb	ip, [r2, r1]
   2ce58:	ldr	ip, [r0, #-4]
   2ce5c:	str	ip, [r3, r1, lsl #2]
   2ce60:	add	r1, r1, #1
   2ce64:	cmp	r1, r7
   2ce68:	add	r0, r0, #8
   2ce6c:	bne	2ce50 <flatcc_builder_end_union_vector@@Base+0x70>
   2ce70:	str	r1, [sp]
   2ce74:	add	r0, sp, #8
   2ce78:	mov	r1, r5
   2ce7c:	bl	2cc60 <flatcc_builder_create_union_vector_direct@@Base>
   2ce80:	ldr	r7, [sp, #8]
   2ce84:	ldr	r6, [sp, #12]
   2ce88:	mov	r0, r5
   2ce8c:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2ce90:	str	r7, [r4]
   2ce94:	str	r6, [r4, #4]
   2ce98:	b	2ce44 <flatcc_builder_end_union_vector@@Base+0x64>
   2ce9c:	muleq	r4, r1, sp
   2cea0:	andeq	r0, r0, r1, asr r6
   2cea4:	andeq	sl, r4, r6, lsl #30
   2cea8:	andeq	fp, r4, r3, ror #3

0002ceac <flatcc_builder_union_vector_edit@@Base>:
   2ceac:	ldr	r0, [r0, #16]
   2ceb0:	bx	lr

0002ceb4 <flatcc_builder_union_vector_count@@Base>:
   2ceb4:	ldr	r3, [r0, #32]
   2ceb8:	ldr	r0, [r3, #20]
   2cebc:	bx	lr

0002cec0 <flatcc_builder_extend_union_vector@@Base>:
   2cec0:	push	{r4, r5, r6, lr}
   2cec4:	mvn	r2, #-536870912	; 0xe0000000
   2cec8:	mov	r4, r0
   2cecc:	ldr	r0, [r0, #32]
   2ced0:	mov	r5, r1
   2ced4:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2ced8:	cmp	r0, #0
   2cedc:	bne	2cef0 <flatcc_builder_extend_union_vector@@Base+0x30>
   2cee0:	lsl	r1, r5, #3
   2cee4:	mov	r0, r4
   2cee8:	pop	{r4, r5, r6, lr}
   2ceec:	b	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2cef0:	mov	r0, #0
   2cef4:	pop	{r4, r5, r6, pc}

0002cef8 <flatcc_builder_truncate_union_vector@@Base>:
   2cef8:	ldr	r3, [r0, #32]
   2cefc:	push	{r4, lr}
   2cf00:	ldrh	r2, [r3, #14]
   2cf04:	cmp	r2, #7
   2cf08:	beq	2cf20 <flatcc_builder_truncate_union_vector@@Base+0x28>
   2cf0c:	ldr	r3, [pc, #68]	; 2cf58 <flatcc_builder_truncate_union_vector@@Base+0x60>
   2cf10:	ldr	r2, [pc, #68]	; 2cf5c <flatcc_builder_truncate_union_vector@@Base+0x64>
   2cf14:	ldr	r1, [pc, #68]	; 2cf60 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2cf18:	ldr	r0, [pc, #68]	; 2cf64 <flatcc_builder_truncate_union_vector@@Base+0x6c>
   2cf1c:	bl	141a4 <__assert_fail@plt>
   2cf20:	ldr	r2, [r3, #20]
   2cf24:	cmp	r2, r1
   2cf28:	ldrcc	r3, [pc, #40]	; 2cf58 <flatcc_builder_truncate_union_vector@@Base+0x60>
   2cf2c:	ldrcc	r2, [pc, #52]	; 2cf68 <flatcc_builder_truncate_union_vector@@Base+0x70>
   2cf30:	ldrcc	r1, [pc, #40]	; 2cf60 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2cf34:	ldrcc	r0, [pc, #48]	; 2cf6c <flatcc_builder_truncate_union_vector@@Base+0x74>
   2cf38:	bcc	2cf1c <flatcc_builder_truncate_union_vector@@Base+0x24>
   2cf3c:	sub	r2, r2, r1
   2cf40:	str	r2, [r3, #20]
   2cf44:	ldr	r3, [r3, #16]
   2cf48:	mul	r1, r3, r1
   2cf4c:	bl	2abac <__flatcc_fb_coerce_scalar_type@@Base+0x5f4>
   2cf50:	mov	r0, #0
   2cf54:	pop	{r4, pc}
   2cf58:			; <UNDEFINED> instruction: 0x0004adb1
   2cf5c:	andeq	r0, r0, r1, lsl #13
   2cf60:	andeq	sl, r4, r6, lsl #30
   2cf64:	andeq	fp, r4, r3, ror #3
   2cf68:	andeq	r0, r0, r2, lsl #13
   2cf6c:	andeq	fp, r4, ip, lsl r1

0002cf70 <flatcc_builder_union_vector_push@@Base>:
   2cf70:	push	{r0, r1, r4, lr}
   2cf74:	stm	sp, {r1, r2}
   2cf78:	ldr	r2, [r0, #32]
   2cf7c:	ldrh	r3, [r2, #14]
   2cf80:	cmp	r3, #7
   2cf84:	beq	2cf9c <flatcc_builder_union_vector_push@@Base+0x2c>
   2cf88:	ldr	r3, [pc, #72]	; 2cfd8 <flatcc_builder_union_vector_push@@Base+0x68>
   2cf8c:	ldr	r2, [pc, #72]	; 2cfdc <flatcc_builder_union_vector_push@@Base+0x6c>
   2cf90:	ldr	r1, [pc, #72]	; 2cfe0 <flatcc_builder_union_vector_push@@Base+0x70>
   2cf94:	ldr	r0, [pc, #72]	; 2cfe4 <flatcc_builder_union_vector_push@@Base+0x74>
   2cf98:	bl	141a4 <__assert_fail@plt>
   2cf9c:	ldr	r3, [r2, #20]
   2cfa0:	cmn	r3, #-536870911	; 0xe0000001
   2cfa4:	moveq	r3, #0
   2cfa8:	beq	2cfcc <flatcc_builder_union_vector_push@@Base+0x5c>
   2cfac:	add	r3, r3, #1
   2cfb0:	mov	r1, #8
   2cfb4:	str	r3, [r2, #20]
   2cfb8:	bl	2aaf8 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2cfbc:	subs	r3, r0, #0
   2cfc0:	movne	r4, sp
   2cfc4:	ldmne	r4, {r0, r1}
   2cfc8:	stmne	r3, {r0, r1}
   2cfcc:	mov	r0, r3
   2cfd0:	add	sp, sp, #8
   2cfd4:	pop	{r4, pc}
   2cfd8:	ldrdeq	sl, [r4], -r6
   2cfdc:	andeq	r0, r0, sp, lsl #13
   2cfe0:	andeq	sl, r4, r6, lsl #30
   2cfe4:	andeq	fp, r4, r3, ror #3

0002cfe8 <flatcc_builder_append_union_vector@@Base>:
   2cfe8:	push	{r4, r5, r6, lr}
   2cfec:	mov	r4, r0
   2cff0:	ldr	r0, [r0, #32]
   2cff4:	ldrh	r3, [r0, #14]
   2cff8:	cmp	r3, #7
   2cffc:	beq	2d014 <flatcc_builder_append_union_vector@@Base+0x2c>
   2d000:	ldr	r3, [pc, #68]	; 2d04c <flatcc_builder_append_union_vector@@Base+0x64>
   2d004:	ldr	r2, [pc, #68]	; 2d050 <flatcc_builder_append_union_vector@@Base+0x68>
   2d008:	ldr	r1, [pc, #68]	; 2d054 <flatcc_builder_append_union_vector@@Base+0x6c>
   2d00c:	ldr	r0, [pc, #68]	; 2d058 <flatcc_builder_append_union_vector@@Base+0x70>
   2d010:	bl	141a4 <__assert_fail@plt>
   2d014:	mov	r5, r2
   2d018:	mov	r6, r1
   2d01c:	mvn	r2, #-536870912	; 0xe0000000
   2d020:	mov	r1, r5
   2d024:	bl	2b0c4 <flatcc_builder_default_alloc@@Base+0x478>
   2d028:	cmp	r0, #0
   2d02c:	bne	2d044 <flatcc_builder_append_union_vector@@Base+0x5c>
   2d030:	lsl	r2, r5, #3
   2d034:	mov	r1, r6
   2d038:	mov	r0, r4
   2d03c:	pop	{r4, r5, r6, lr}
   2d040:	b	2abcc <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   2d044:	mov	r0, #0
   2d048:	pop	{r4, r5, r6, pc}
   2d04c:	strdeq	sl, [r4], -r7
   2d050:	muleq	r0, ip, r6
   2d054:	andeq	sl, r4, r6, lsl #30
   2d058:	andeq	fp, r4, r3, ror #3

0002d05c <flatcc_builder_create_string@@Base>:
   2d05c:	push	{lr}		; (str lr, [sp, #-4]!)
   2d060:	sub	sp, sp, #84	; 0x54
   2d064:	ldr	r3, [r0, #136]	; 0x88
   2d068:	mov	ip, #4
   2d06c:	cmp	r2, #0
   2d070:	str	ip, [sp, #8]
   2d074:	add	lr, sp, ip
   2d078:	str	ip, [sp, #20]
   2d07c:	sub	r3, r3, r2
   2d080:	mov	ip, #1
   2d084:	str	ip, [sp, #12]
   2d088:	strne	r2, [sp, #28]
   2d08c:	addne	ip, r2, #4
   2d090:	str	r2, [sp, #4]
   2d094:	sub	r3, r3, #1
   2d098:	movne	r2, #2
   2d09c:	strne	ip, [sp, #8]
   2d0a0:	strne	r2, [sp, #12]
   2d0a4:	and	r3, r3, #3
   2d0a8:	ldr	r2, [sp, #8]
   2d0ac:	add	r3, r3, #1
   2d0b0:	add	r2, r2, r3
   2d0b4:	str	r2, [sp, #8]
   2d0b8:	ldr	r2, [sp, #12]
   2d0bc:	strne	r1, [sp, #24]
   2d0c0:	add	r2, r2, #1
   2d0c4:	add	r1, sp, #80	; 0x50
   2d0c8:	add	r1, r1, r2, lsl #3
   2d0cc:	ldr	ip, [pc, #28]	; 2d0f0 <flatcc_builder_create_string@@Base+0x94>
   2d0d0:	str	lr, [sp, #16]
   2d0d4:	str	r3, [r1, #-68]	; 0xffffffbc
   2d0d8:	str	ip, [r1, #-72]	; 0xffffffb8
   2d0dc:	add	r1, sp, #8
   2d0e0:	str	r2, [sp, #12]
   2d0e4:	bl	2b044 <flatcc_builder_default_alloc@@Base+0x3f8>
   2d0e8:	add	sp, sp, #84	; 0x54
   2d0ec:	pop	{pc}		; (ldr pc, [sp], #4)
   2d0f0:	andeq	sl, r4, r0, lsr #16

0002d0f4 <flatcc_builder_create_string_str@@Base>:
   2d0f4:	push	{r4, r5, r6, lr}
   2d0f8:	mov	r5, r0
   2d0fc:	mov	r0, r1
   2d100:	mov	r4, r1
   2d104:	bl	140cc <strlen@plt>
   2d108:	mov	r1, r4
   2d10c:	mov	r2, r0
   2d110:	mov	r0, r5
   2d114:	pop	{r4, r5, r6, lr}
   2d118:	b	2d05c <flatcc_builder_create_string@@Base>

0002d11c <flatcc_builder_create_string_strn@@Base>:
   2d11c:	push	{r4, r5, r6, lr}
   2d120:	mov	r4, r1
   2d124:	mov	r6, r0
   2d128:	mov	r1, #0
   2d12c:	mov	r0, r4
   2d130:	mov	r5, r2
   2d134:	bl	14120 <memchr@plt>
   2d138:	mov	r1, r4
   2d13c:	cmp	r0, #0
   2d140:	subne	r5, r0, r4
   2d144:	mov	r2, r5
   2d148:	mov	r0, r6
   2d14c:	pop	{r4, r5, r6, lr}
   2d150:	b	2d05c <flatcc_builder_create_string@@Base>

0002d154 <flatcc_builder_end_string@@Base>:
   2d154:	ldr	r3, [r0, #32]
   2d158:	push	{r4, r5, r6, lr}
   2d15c:	ldrh	r2, [r3, #14]
   2d160:	cmp	r2, #6
   2d164:	beq	2d17c <flatcc_builder_end_string@@Base+0x28>
   2d168:	ldr	r3, [pc, #80]	; 2d1c0 <flatcc_builder_end_string@@Base+0x6c>
   2d16c:	ldr	r2, [pc, #80]	; 2d1c4 <flatcc_builder_end_string@@Base+0x70>
   2d170:	ldr	r1, [pc, #80]	; 2d1c8 <flatcc_builder_end_string@@Base+0x74>
   2d174:	ldr	r0, [pc, #80]	; 2d1cc <flatcc_builder_end_string@@Base+0x78>
   2d178:	bl	141a4 <__assert_fail@plt>
   2d17c:	ldr	r2, [r3, #20]
   2d180:	ldr	r3, [r0, #20]
   2d184:	mov	r4, r0
   2d188:	cmp	r2, r3
   2d18c:	ldrne	r3, [pc, #44]	; 2d1c0 <flatcc_builder_end_string@@Base+0x6c>
   2d190:	ldrne	r2, [pc, #56]	; 2d1d0 <flatcc_builder_end_string@@Base+0x7c>
   2d194:	ldrne	r1, [pc, #44]	; 2d1c8 <flatcc_builder_end_string@@Base+0x74>
   2d198:	ldrne	r0, [pc, #52]	; 2d1d4 <flatcc_builder_end_string@@Base+0x80>
   2d19c:	bne	2d178 <flatcc_builder_end_string@@Base+0x24>
   2d1a0:	ldr	r1, [r0, #16]
   2d1a4:	bl	2d05c <flatcc_builder_create_string@@Base>
   2d1a8:	subs	r5, r0, #0
   2d1ac:	beq	2d1b8 <flatcc_builder_end_string@@Base+0x64>
   2d1b0:	mov	r0, r4
   2d1b4:	bl	2ab40 <__flatcc_fb_coerce_scalar_type@@Base+0x588>
   2d1b8:	mov	r0, r5
   2d1bc:	pop	{r4, r5, r6, pc}
   2d1c0:	andeq	sl, r4, sl, lsl lr
   2d1c4:	andeq	r0, r0, r4, asr #13
   2d1c8:	andeq	sl, r4, r6, lsl #30
   2d1cc:	andeq	fp, r4, ip, asr #1
   2d1d0:	andeq	r0, r0, r5, asr #13
   2d1d4:	andeq	fp, r4, r5, lsl r2

0002d1d8 <flatcc_builder_string_edit@@Base>:
   2d1d8:	ldr	r0, [r0, #16]
   2d1dc:	bx	lr

0002d1e0 <flatcc_builder_string_len@@Base>:
   2d1e0:	ldr	r3, [r0, #32]
   2d1e4:	ldr	r0, [r3, #20]
   2d1e8:	bx	lr

0002d1ec <flatcc_builder_table_add@@Base>:
   2d1ec:	push	{r4, r5, r6, r7, r8, lr}
   2d1f0:	mov	r4, r0
   2d1f4:	ldr	r0, [r0, #32]
   2d1f8:	ldrh	r0, [r0, #14]
   2d1fc:	cmp	r0, #3
   2d200:	beq	2d218 <flatcc_builder_table_add@@Base+0x2c>
   2d204:	ldr	r3, [pc, #232]	; 2d2f4 <flatcc_builder_table_add@@Base+0x108>
   2d208:	ldr	r2, [pc, #232]	; 2d2f8 <flatcc_builder_table_add@@Base+0x10c>
   2d20c:	ldr	r1, [pc, #232]	; 2d2fc <flatcc_builder_table_add@@Base+0x110>
   2d210:	ldr	r0, [pc, #232]	; 2d300 <flatcc_builder_table_add@@Base+0x114>
   2d214:	bl	141a4 <__assert_fail@plt>
   2d218:	ldr	r0, [pc, #228]	; 2d304 <flatcc_builder_table_add@@Base+0x118>
   2d21c:	cmp	r1, r0
   2d220:	ldrhi	r3, [pc, #204]	; 2d2f4 <flatcc_builder_table_add@@Base+0x108>
   2d224:	ldrhi	r2, [pc, #220]	; 2d308 <flatcc_builder_table_add@@Base+0x11c>
   2d228:	ldrhi	r1, [pc, #204]	; 2d2fc <flatcc_builder_table_add@@Base+0x110>
   2d22c:	ldrhi	r0, [pc, #216]	; 2d30c <flatcc_builder_table_add@@Base+0x120>
   2d230:	bhi	2d214 <flatcc_builder_table_add@@Base+0x28>
   2d234:	ldrh	r0, [r4, #130]	; 0x82
   2d238:	lsl	r7, r1, #1
   2d23c:	cmp	r0, r3
   2d240:	ldr	r0, [r4, #4]
   2d244:	strhcc	r3, [r4, #130]	; 0x82
   2d248:	ldrh	r5, [r0, r7]
   2d24c:	cmp	r5, #0
   2d250:	ldrne	r3, [pc, #156]	; 2d2f4 <flatcc_builder_table_add@@Base+0x108>
   2d254:	ldrne	r2, [pc, #180]	; 2d310 <flatcc_builder_table_add@@Base+0x124>
   2d258:	ldrne	r1, [pc, #156]	; 2d2fc <flatcc_builder_table_add@@Base+0x110>
   2d25c:	ldrne	r0, [pc, #176]	; 2d314 <flatcc_builder_table_add@@Base+0x128>
   2d260:	bne	2d214 <flatcc_builder_table_add@@Base+0x28>
   2d264:	ldr	ip, [r4, #12]
   2d268:	ldr	lr, [pc, #168]	; 2d318 <flatcc_builder_table_add@@Base+0x12c>
   2d26c:	eor	ip, ip, r1
   2d270:	ldr	r6, [r4, #20]
   2d274:	mul	ip, lr, ip
   2d278:	sub	r0, r3, #1
   2d27c:	eor	ip, ip, r2
   2d280:	rsb	r3, r3, #0
   2d284:	add	r0, r0, r6
   2d288:	and	r6, r0, r3
   2d28c:	mul	ip, lr, ip
   2d290:	ldr	r3, [r4, #24]
   2d294:	uxth	r8, r1
   2d298:	add	r1, r2, r6
   2d29c:	cmp	r1, r3
   2d2a0:	str	ip, [r4, #12]
   2d2a4:	str	r1, [r4, #20]
   2d2a8:	bcs	2d2d4 <flatcc_builder_table_add@@Base+0xe8>
   2d2ac:	ldr	r3, [r4, #4]
   2d2b0:	add	r2, r6, #4
   2d2b4:	ldr	r0, [r4, #16]
   2d2b8:	strh	r2, [r3, r7]
   2d2bc:	ldrh	r3, [r4, #8]
   2d2c0:	add	r0, r0, r6
   2d2c4:	cmp	r3, r8
   2d2c8:	addls	r1, r8, #1
   2d2cc:	strhls	r1, [r4, #8]
   2d2d0:	pop	{r4, r5, r6, r7, r8, pc}
   2d2d4:	ldr	r2, [pc, #64]	; 2d31c <flatcc_builder_table_add@@Base+0x130>
   2d2d8:	add	r1, r1, #1
   2d2dc:	mov	r0, r4
   2d2e0:	bl	2aaa8 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2d2e4:	cmp	r0, #0
   2d2e8:	beq	2d2ac <flatcc_builder_table_add@@Base+0xc0>
   2d2ec:	mov	r0, r5
   2d2f0:	pop	{r4, r5, r6, r7, r8, pc}
   2d2f4:	andeq	sl, r4, r4, lsr lr
   2d2f8:	andeq	r0, r0, sp, ror #13
   2d2fc:	andeq	sl, r4, r6, lsl #30
   2d300:	andeq	fp, r4, r5, lsr #3
   2d304:	strdeq	r7, [r0], -ip
   2d308:	andeq	r0, r0, lr, ror #13
   2d30c:	andeq	fp, r4, r9, lsr r2
   2d310:	strdeq	r0, [r0], -r8
   2d314:	andeq	sl, r3, r9, asr #3
   2d318:			; <UNDEFINED> instruction: 0x9e3779b1
   2d31c:	strdeq	pc, [r0], -ip

0002d320 <flatcc_builder_table_edit@@Base>:
   2d320:	ldr	r3, [r0, #32]
   2d324:	ldrh	r3, [r3, #14]
   2d328:	cmp	r3, #3
   2d32c:	beq	2d348 <flatcc_builder_table_edit@@Base+0x28>
   2d330:	push	{r4, lr}
   2d334:	ldr	r3, [pc, #32]	; 2d35c <flatcc_builder_table_edit@@Base+0x3c>
   2d338:	ldr	r2, [pc, #32]	; 2d360 <flatcc_builder_table_edit@@Base+0x40>
   2d33c:	ldr	r1, [pc, #32]	; 2d364 <flatcc_builder_table_edit@@Base+0x44>
   2d340:	ldr	r0, [pc, #32]	; 2d368 <flatcc_builder_table_edit@@Base+0x48>
   2d344:	bl	141a4 <__assert_fail@plt>
   2d348:	ldr	r3, [r0, #20]
   2d34c:	ldr	r0, [r0, #16]
   2d350:	sub	r1, r3, r1
   2d354:	add	r0, r0, r1
   2d358:	bx	lr
   2d35c:	andeq	sl, r4, sp, asr #28
   2d360:	andeq	r0, r0, r2, lsl #14
   2d364:	andeq	sl, r4, r6, lsl #30
   2d368:	andeq	fp, r4, r5, lsr #3

0002d36c <flatcc_builder_table_add_copy@@Base>:
   2d36c:	push	{r4, r5, r6, lr}
   2d370:	mov	r4, r3
   2d374:	mov	r6, r2
   2d378:	ldrh	r3, [sp, #16]
   2d37c:	mov	r2, r4
   2d380:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2d384:	subs	r5, r0, #0
   2d388:	beq	2d398 <flatcc_builder_table_add_copy@@Base+0x2c>
   2d38c:	mov	r2, r4
   2d390:	mov	r1, r6
   2d394:	bl	14024 <memcpy@plt>
   2d398:	mov	r0, r5
   2d39c:	pop	{r4, r5, r6, pc}

0002d3a0 <flatcc_builder_table_add_offset@@Base>:
   2d3a0:	ldr	r3, [r0, #32]
   2d3a4:	push	{r4, r5, r6, r7, r8, lr}
   2d3a8:	ldrh	r3, [r3, #14]
   2d3ac:	cmp	r3, #3
   2d3b0:	beq	2d3c8 <flatcc_builder_table_add_offset@@Base+0x28>
   2d3b4:	ldr	r3, [pc, #228]	; 2d4a0 <flatcc_builder_table_add_offset@@Base+0x100>
   2d3b8:	ldr	r2, [pc, #228]	; 2d4a4 <flatcc_builder_table_add_offset@@Base+0x104>
   2d3bc:	ldr	r1, [pc, #228]	; 2d4a8 <flatcc_builder_table_add_offset@@Base+0x108>
   2d3c0:	ldr	r0, [pc, #228]	; 2d4ac <flatcc_builder_table_add_offset@@Base+0x10c>
   2d3c4:	bl	141a4 <__assert_fail@plt>
   2d3c8:	ldr	r3, [pc, #224]	; 2d4b0 <flatcc_builder_table_add_offset@@Base+0x110>
   2d3cc:	cmp	r1, r3
   2d3d0:	ldrhi	r3, [pc, #200]	; 2d4a0 <flatcc_builder_table_add_offset@@Base+0x100>
   2d3d4:	ldrhi	r2, [pc, #216]	; 2d4b4 <flatcc_builder_table_add_offset@@Base+0x114>
   2d3d8:	ldrhi	r1, [pc, #200]	; 2d4a8 <flatcc_builder_table_add_offset@@Base+0x108>
   2d3dc:	ldrhi	r0, [pc, #212]	; 2d4b8 <flatcc_builder_table_add_offset@@Base+0x118>
   2d3e0:	bhi	2d3c4 <flatcc_builder_table_add_offset@@Base+0x24>
   2d3e4:	ldr	r3, [r0, #4]
   2d3e8:	lsl	r7, r1, #1
   2d3ec:	mov	r4, r0
   2d3f0:	ldrh	r6, [r3, r7]
   2d3f4:	cmp	r6, #0
   2d3f8:	ldrne	r3, [pc, #160]	; 2d4a0 <flatcc_builder_table_add_offset@@Base+0x100>
   2d3fc:	ldrne	r2, [pc, #184]	; 2d4bc <flatcc_builder_table_add_offset@@Base+0x11c>
   2d400:	ldrne	r1, [pc, #160]	; 2d4a8 <flatcc_builder_table_add_offset@@Base+0x108>
   2d404:	ldrne	r0, [pc, #180]	; 2d4c0 <flatcc_builder_table_add_offset@@Base+0x120>
   2d408:	bne	2d3c4 <flatcc_builder_table_add_offset@@Base+0x24>
   2d40c:	ldr	r3, [r0, #12]
   2d410:	ldr	r2, [pc, #172]	; 2d4c4 <flatcc_builder_table_add_offset@@Base+0x124>
   2d414:	eor	r3, r3, r1
   2d418:	ldr	r8, [r0, #20]
   2d41c:	mul	r3, r2, r3
   2d420:	add	r8, r8, #3
   2d424:	eor	r3, r3, #4
   2d428:	bic	r8, r8, #3
   2d42c:	mul	r3, r2, r3
   2d430:	uxth	r5, r1
   2d434:	str	r3, [r0, #12]
   2d438:	ldr	r3, [r0, #24]
   2d43c:	add	r1, r8, #4
   2d440:	cmp	r1, r3
   2d444:	str	r1, [r0, #20]
   2d448:	bhi	2d488 <flatcc_builder_table_add_offset@@Base+0xe8>
   2d44c:	ldr	r3, [r4, #4]
   2d450:	uxth	r2, r8
   2d454:	add	r1, r2, #4
   2d458:	strh	r1, [r3, r7]
   2d45c:	ldrh	r3, [r4, #8]
   2d460:	ldr	r0, [r4, #16]
   2d464:	cmp	r3, r5
   2d468:	ldr	r3, [r4]
   2d46c:	addls	r1, r5, #1
   2d470:	strhls	r1, [r4, #8]
   2d474:	add	r1, r3, #2
   2d478:	str	r1, [r4]
   2d47c:	add	r0, r0, r8
   2d480:	strh	r2, [r3]
   2d484:	pop	{r4, r5, r6, r7, r8, pc}
   2d488:	ldr	r2, [pc, #56]	; 2d4c8 <flatcc_builder_table_add_offset@@Base+0x128>
   2d48c:	bl	2aaa8 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
   2d490:	cmp	r0, #0
   2d494:	beq	2d44c <flatcc_builder_table_add_offset@@Base+0xac>
   2d498:	mov	r0, r6
   2d49c:	pop	{r4, r5, r6, r7, r8, pc}
   2d4a0:	andeq	sl, r4, r7, ror #28
   2d4a4:	andeq	r0, r0, r3, lsl r7
   2d4a8:	andeq	sl, r4, r6, lsl #30
   2d4ac:	andeq	fp, r4, r5, lsr #3
   2d4b0:	strdeq	r7, [r0], -ip
   2d4b4:	andeq	r0, r0, r4, lsl r7
   2d4b8:	andeq	fp, r4, r9, lsr r2
   2d4bc:	andeq	r0, r0, fp, lsl r7
   2d4c0:	andeq	sl, r3, r9, asr #3
   2d4c4:			; <UNDEFINED> instruction: 0x9e3779b1
   2d4c8:	strdeq	pc, [r0], -ip

0002d4cc <flatcc_builder_table_add_union@@Base>:
   2d4cc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2d4d0:	add	ip, sp, #8
   2d4d4:	stmdb	ip, {r2, r3}
   2d4d8:	ldr	r3, [r0, #32]
   2d4dc:	ldrb	r5, [sp]
   2d4e0:	ldr	r4, [sp, #4]
   2d4e4:	ldrh	r3, [r3, #14]
   2d4e8:	cmp	r3, #3
   2d4ec:	beq	2d504 <flatcc_builder_table_add_union@@Base+0x38>
   2d4f0:	ldr	r3, [pc, #156]	; 2d594 <flatcc_builder_table_add_union@@Base+0xc8>
   2d4f4:	ldr	r2, [pc, #156]	; 2d598 <flatcc_builder_table_add_union@@Base+0xcc>
   2d4f8:	ldr	r1, [pc, #156]	; 2d59c <flatcc_builder_table_add_union@@Base+0xd0>
   2d4fc:	ldr	r0, [pc, #156]	; 2d5a0 <flatcc_builder_table_add_union@@Base+0xd4>
   2d500:	bl	141a4 <__assert_fail@plt>
   2d504:	cmp	r5, #0
   2d508:	mov	r6, r0
   2d50c:	mov	r7, r1
   2d510:	bne	2d530 <flatcc_builder_table_add_union@@Base+0x64>
   2d514:	cmp	r4, #0
   2d518:	beq	2d558 <flatcc_builder_table_add_union@@Base+0x8c>
   2d51c:	ldr	r3, [pc, #112]	; 2d594 <flatcc_builder_table_add_union@@Base+0xc8>
   2d520:	ldr	r2, [pc, #124]	; 2d5a4 <flatcc_builder_table_add_union@@Base+0xd8>
   2d524:	ldr	r1, [pc, #112]	; 2d59c <flatcc_builder_table_add_union@@Base+0xd0>
   2d528:	ldr	r0, [pc, #120]	; 2d5a8 <flatcc_builder_table_add_union@@Base+0xdc>
   2d52c:	b	2d500 <flatcc_builder_table_add_union@@Base+0x34>
   2d530:	cmp	r4, #0
   2d534:	beq	2d558 <flatcc_builder_table_add_union@@Base+0x8c>
   2d538:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   2d53c:	cmp	r0, #0
   2d540:	strne	r4, [r0]
   2d544:	ldreq	r3, [pc, #72]	; 2d594 <flatcc_builder_table_add_union@@Base+0xc8>
   2d548:	ldreq	r2, [pc, #92]	; 2d5ac <flatcc_builder_table_add_union@@Base+0xe0>
   2d54c:	ldreq	r1, [pc, #72]	; 2d59c <flatcc_builder_table_add_union@@Base+0xd0>
   2d550:	ldreq	r0, [pc, #88]	; 2d5b0 <flatcc_builder_table_add_union@@Base+0xe4>
   2d554:	beq	2d500 <flatcc_builder_table_add_union@@Base+0x34>
   2d558:	mov	r3, #1
   2d55c:	mov	r2, r3
   2d560:	sub	r1, r7, #1
   2d564:	mov	r0, r6
   2d568:	bl	2d1ec <flatcc_builder_table_add@@Base>
   2d56c:	cmp	r0, #0
   2d570:	ldreq	r3, [pc, #28]	; 2d594 <flatcc_builder_table_add_union@@Base+0xc8>
   2d574:	ldreq	r2, [pc, #56]	; 2d5b4 <flatcc_builder_table_add_union@@Base+0xe8>
   2d578:	ldreq	r1, [pc, #28]	; 2d59c <flatcc_builder_table_add_union@@Base+0xd0>
   2d57c:	ldreq	r0, [pc, #52]	; 2d5b8 <flatcc_builder_table_add_union@@Base+0xec>
   2d580:	beq	2d500 <flatcc_builder_table_add_union@@Base+0x34>
   2d584:	strb	r5, [r0]
   2d588:	mov	r0, #0
   2d58c:	add	sp, sp, #12
   2d590:	pop	{r4, r5, r6, r7, pc}
   2d594:	andeq	sl, r4, r7, lsl #29
   2d598:	andeq	r0, r0, lr, ror #11
   2d59c:	andeq	sl, r4, r6, lsl #30
   2d5a0:	andeq	fp, r4, r5, lsr #3
   2d5a4:	andeq	r0, r0, pc, ror #11
   2d5a8:	andeq	fp, r4, sp, ror r2
   2d5ac:	strdeq	r0, [r0], -r2
   2d5b0:	muleq	r4, pc, r2	; <UNPREDICTABLE>
   2d5b4:	strdeq	r0, [r0], -r6
   2d5b8:	andeq	fp, r4, r9, lsr #5

0002d5bc <flatcc_builder_table_add_union_vector@@Base>:
   2d5bc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2d5c0:	mov	r7, r1
   2d5c4:	add	r1, sp, #8
   2d5c8:	stmdb	r1, {r2, r3}
   2d5cc:	ldr	r3, [r0, #32]
   2d5d0:	ldm	sp, {r4, r5}
   2d5d4:	ldrh	r3, [r3, #14]
   2d5d8:	cmp	r3, #3
   2d5dc:	beq	2d5f4 <flatcc_builder_table_add_union_vector@@Base+0x38>
   2d5e0:	ldr	r3, [pc, #176]	; 2d698 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2d5e4:	ldr	r1, [pc, #176]	; 2d69c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2d5e8:	ldr	r0, [pc, #176]	; 2d6a0 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2d5ec:	mov	r2, #1536	; 0x600
   2d5f0:	bl	141a4 <__assert_fail@plt>
   2d5f4:	clz	r3, r5
   2d5f8:	clz	r2, r4
   2d5fc:	lsr	r3, r3, #5
   2d600:	lsr	r2, r2, #5
   2d604:	cmp	r2, r3
   2d608:	beq	2d634 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2d60c:	adds	r4, r4, #0
   2d610:	movne	r4, #1
   2d614:	cmp	r4, r3
   2d618:	mvnne	r0, #0
   2d61c:	bne	2d690 <flatcc_builder_table_add_union_vector@@Base+0xd4>
   2d620:	ldr	r3, [pc, #112]	; 2d698 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2d624:	ldr	r2, [pc, #120]	; 2d6a4 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   2d628:	ldr	r1, [pc, #108]	; 2d69c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2d62c:	ldr	r0, [pc, #116]	; 2d6a8 <flatcc_builder_table_add_union_vector@@Base+0xec>
   2d630:	b	2d5f0 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2d634:	cmp	r4, #0
   2d638:	moveq	r0, r4
   2d63c:	beq	2d690 <flatcc_builder_table_add_union_vector@@Base+0xd4>
   2d640:	sub	r1, r7, #1
   2d644:	mov	r6, r0
   2d648:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   2d64c:	cmp	r0, #0
   2d650:	bne	2d668 <flatcc_builder_table_add_union_vector@@Base+0xac>
   2d654:	ldr	r3, [pc, #60]	; 2d698 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2d658:	ldr	r2, [pc, #76]	; 2d6ac <flatcc_builder_table_add_union_vector@@Base+0xf0>
   2d65c:	ldr	r1, [pc, #56]	; 2d69c <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2d660:	ldr	r0, [pc, #72]	; 2d6b0 <flatcc_builder_table_add_union_vector@@Base+0xf4>
   2d664:	b	2d5f0 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2d668:	str	r4, [r0]
   2d66c:	mov	r1, r7
   2d670:	mov	r0, r6
   2d674:	bl	2d3a0 <flatcc_builder_table_add_offset@@Base>
   2d678:	cmp	r0, #0
   2d67c:	strne	r5, [r0]
   2d680:	movne	r0, #0
   2d684:	ldreq	r3, [pc, #12]	; 2d698 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2d688:	ldreq	r2, [pc, #36]	; 2d6b4 <flatcc_builder_table_add_union_vector@@Base+0xf8>
   2d68c:	beq	2d65c <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2d690:	add	sp, sp, #12
   2d694:	pop	{r4, r5, r6, r7, pc}
   2d698:	andeq	sl, r4, r6, lsr #29
   2d69c:	andeq	sl, r4, r6, lsl #30
   2d6a0:	andeq	fp, r4, r5, lsr #3
   2d6a4:	andeq	r0, r0, r1, lsl #12
   2d6a8:			; <UNDEFINED> instruction: 0x0004b2b5
   2d6ac:	andeq	r0, r0, r4, lsl #12
   2d6b0:	muleq	r4, pc, r2	; <UNPREDICTABLE>
   2d6b4:	andeq	r0, r0, r8, lsl #12

0002d6b8 <flatcc_builder_push_buffer_alignment@@Base>:
   2d6b8:	mov	r3, r0
   2d6bc:	mov	r2, #4
   2d6c0:	ldrh	r0, [r0, #128]	; 0x80
   2d6c4:	strh	r2, [r3, #128]	; 0x80
   2d6c8:	bx	lr

0002d6cc <flatcc_builder_pop_buffer_alignment@@Base>:
   2d6cc:	ldrh	r3, [r0, #128]	; 0x80
   2d6d0:	cmp	r3, r1
   2d6d4:	strhcc	r1, [r0, #128]	; 0x80
   2d6d8:	bx	lr

0002d6dc <flatcc_builder_get_buffer_alignment@@Base>:
   2d6dc:	ldrh	r0, [r0, #128]	; 0x80
   2d6e0:	bx	lr

0002d6e4 <flatcc_builder_set_vtable_clustering@@Base>:
   2d6e4:	clz	r1, r1
   2d6e8:	lsr	r1, r1, #5
   2d6ec:	str	r1, [r0, #180]	; 0xb4
   2d6f0:	bx	lr

0002d6f4 <flatcc_builder_set_block_align@@Base>:
   2d6f4:	strh	r1, [r0, #132]	; 0x84
   2d6f8:	bx	lr

0002d6fc <flatcc_builder_get_level@@Base>:
   2d6fc:	ldr	r0, [r0, #156]	; 0x9c
   2d700:	bx	lr

0002d704 <flatcc_builder_set_max_level@@Base>:
   2d704:	ldr	r3, [r0, #160]	; 0xa0
   2d708:	str	r1, [r0, #176]	; 0xb0
   2d70c:	cmp	r1, r3
   2d710:	strgt	r1, [r0, #160]	; 0xa0
   2d714:	bx	lr

0002d718 <flatcc_builder_get_buffer_size@@Base>:
   2d718:	ldr	r2, [r0, #140]	; 0x8c
   2d71c:	ldr	r0, [r0, #136]	; 0x88
   2d720:	sub	r0, r2, r0
   2d724:	bx	lr

0002d728 <flatcc_builder_get_buffer_start@@Base>:
   2d728:	ldr	r0, [r0, #136]	; 0x88
   2d72c:	bx	lr

0002d730 <flatcc_builder_get_buffer_end@@Base>:
   2d730:	ldr	r0, [r0, #140]	; 0x8c
   2d734:	bx	lr

0002d738 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2d738:	str	r1, [r0, #172]	; 0xac
   2d73c:	bx	lr

0002d740 <flatcc_builder_set_identifier@@Base>:
   2d740:	ldr	r3, [pc, #16]	; 2d758 <flatcc_builder_set_identifier@@Base+0x18>
   2d744:	cmp	r1, #0
   2d748:	moveq	r1, r3
   2d74c:	ldr	r3, [r1]
   2d750:	str	r3, [r0, #168]	; 0xa8
   2d754:	bx	lr
   2d758:	andeq	sl, r4, r0, lsr #16

0002d75c <flatcc_builder_get_type@@Base>:
   2d75c:	ldr	r0, [r0, #32]
   2d760:	cmp	r0, #0
   2d764:	ldrhne	r0, [r0, #14]
   2d768:	bx	lr

0002d76c <flatcc_builder_get_type_at@@Base>:
   2d76c:	cmp	r1, #0
   2d770:	ble	2d798 <flatcc_builder_get_type_at@@Base+0x2c>
   2d774:	ldr	r3, [r0, #156]	; 0x9c
   2d778:	cmp	r1, r3
   2d77c:	bgt	2d798 <flatcc_builder_get_type_at@@Base+0x2c>
   2d780:	sub	r1, r1, r3
   2d784:	mov	r2, #36	; 0x24
   2d788:	ldr	r3, [r0, #32]
   2d78c:	mla	r1, r2, r1, r3
   2d790:	ldrh	r0, [r1, #14]
   2d794:	bx	lr
   2d798:	mov	r0, #0
   2d79c:	bx	lr

0002d7a0 <flatcc_builder_get_direct_buffer@@Base>:
   2d7a0:	ldr	r3, [r0, #184]	; 0xb8
   2d7a4:	cmp	r3, #0
   2d7a8:	beq	2d7d0 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2d7ac:	ldr	r2, [r0, #188]	; 0xbc
   2d7b0:	ldr	r3, [r0, #192]	; 0xc0
   2d7b4:	cmp	r2, r3
   2d7b8:	bne	2d7d0 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2d7bc:	cmp	r1, #0
   2d7c0:	ldrne	r3, [r0, #212]	; 0xd4
   2d7c4:	ldr	r0, [r0, #196]	; 0xc4
   2d7c8:	strne	r3, [r1]
   2d7cc:	bx	lr
   2d7d0:	mov	r0, #0
   2d7d4:	cmp	r1, #0
   2d7d8:	strne	r0, [r1]
   2d7dc:	moveq	r0, r1
   2d7e0:	bx	lr

0002d7e4 <flatcc_builder_copy_buffer@@Base>:
   2d7e4:	ldr	r3, [r0, #184]	; 0xb8
   2d7e8:	cmp	r3, #0
   2d7ec:	beq	2d818 <flatcc_builder_copy_buffer@@Base+0x34>
   2d7f0:	push	{r4, lr}
   2d7f4:	add	r0, r0, #188	; 0xbc
   2d7f8:	bl	2ddd8 <flatcc_emitter_copy_buffer@@Base>
   2d7fc:	cmp	r0, #0
   2d800:	popne	{r4, pc}
   2d804:	ldr	r3, [pc, #20]	; 2d820 <flatcc_builder_copy_buffer@@Base+0x3c>
   2d808:	ldr	r2, [pc, #20]	; 2d824 <flatcc_builder_copy_buffer@@Base+0x40>
   2d80c:	ldr	r1, [pc, #20]	; 2d828 <flatcc_builder_copy_buffer@@Base+0x44>
   2d810:	ldr	r0, [pc, #20]	; 2d82c <flatcc_builder_copy_buffer@@Base+0x48>
   2d814:	bl	141a4 <__assert_fail@plt>
   2d818:	mov	r0, r3
   2d81c:	bx	lr
   2d820:	andeq	sl, r4, ip, asr #29
   2d824:	andeq	r0, r0, r6, lsl #15
   2d828:	andeq	sl, r4, r6, lsl #30
   2d82c:	strdeq	sl, [r4], -sp

0002d830 <flatcc_builder_finalize_buffer@@Base>:
   2d830:	push	{r4, r5, r6, lr}
   2d834:	cmp	r1, #0
   2d838:	ldr	r4, [r0, #140]	; 0x8c
   2d83c:	ldr	r2, [r0, #136]	; 0x88
   2d840:	mov	r5, r0
   2d844:	sub	r4, r4, r2
   2d848:	strne	r4, [r1]
   2d84c:	mov	r0, r4
   2d850:	bl	14090 <malloc@plt>
   2d854:	subs	r6, r0, #0
   2d858:	bne	2d870 <flatcc_builder_finalize_buffer@@Base+0x40>
   2d85c:	ldr	r3, [pc, #52]	; 2d898 <flatcc_builder_finalize_buffer@@Base+0x68>
   2d860:	ldr	r2, [pc, #52]	; 2d89c <flatcc_builder_finalize_buffer@@Base+0x6c>
   2d864:	ldr	r1, [pc, #52]	; 2d8a0 <flatcc_builder_finalize_buffer@@Base+0x70>
   2d868:	ldr	r0, [pc, #52]	; 2d8a4 <flatcc_builder_finalize_buffer@@Base+0x74>
   2d86c:	bl	141a4 <__assert_fail@plt>
   2d870:	mov	r2, r4
   2d874:	mov	r1, r6
   2d878:	mov	r0, r5
   2d87c:	bl	2d7e4 <flatcc_builder_copy_buffer@@Base>
   2d880:	cmp	r0, #0
   2d884:	ldreq	r3, [pc, #12]	; 2d898 <flatcc_builder_finalize_buffer@@Base+0x68>
   2d888:	ldreq	r2, [pc, #24]	; 2d8a8 <flatcc_builder_finalize_buffer@@Base+0x78>
   2d88c:	beq	2d864 <flatcc_builder_finalize_buffer@@Base+0x34>
   2d890:	mov	r0, r6
   2d894:	pop	{r4, r5, r6, pc}
   2d898:	andeq	sl, r4, r7, ror #29
   2d89c:	muleq	r0, r8, r7
   2d8a0:	andeq	sl, r4, r6, lsl #30
   2d8a4:	andeq	sl, r3, r9, asr #3
   2d8a8:	muleq	r0, ip, r7

0002d8ac <flatcc_builder_finalize_aligned_buffer@@Base>:
   2d8ac:	push	{r4, r5, r6, r7, r8, lr}
   2d8b0:	mov	r6, r0
   2d8b4:	ldr	r4, [r0, #140]	; 0x8c
   2d8b8:	ldr	r2, [r0, #136]	; 0x88
   2d8bc:	ldrh	r0, [r0, #128]	; 0x80
   2d8c0:	subs	r7, r1, #0
   2d8c4:	sub	r2, r4, r2
   2d8c8:	sub	r4, r0, #1
   2d8cc:	strne	r2, [r7]
   2d8d0:	add	r4, r4, r2
   2d8d4:	rsb	r2, r0, #0
   2d8d8:	and	r4, r4, r2
   2d8dc:	mov	r1, r4
   2d8e0:	bl	2abfc <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   2d8e4:	subs	r5, r0, #0
   2d8e8:	beq	2d910 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2d8ec:	mov	r2, r4
   2d8f0:	mov	r1, r5
   2d8f4:	mov	r0, r6
   2d8f8:	bl	2d7e4 <flatcc_builder_copy_buffer@@Base>
   2d8fc:	subs	r4, r0, #0
   2d900:	bne	2d910 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2d904:	mov	r0, r5
   2d908:	bl	14018 <free@plt>
   2d90c:	mov	r5, r4
   2d910:	cmp	r7, #0
   2d914:	clz	r3, r5
   2d918:	lsr	r3, r3, #5
   2d91c:	moveq	r3, #0
   2d920:	cmp	r3, #0
   2d924:	movne	r3, #0
   2d928:	strne	r3, [r7]
   2d92c:	mov	r0, r5
   2d930:	pop	{r4, r5, r6, r7, r8, pc}

0002d934 <flatcc_builder_aligned_alloc@@Base>:
   2d934:	b	2abfc <__flatcc_fb_coerce_scalar_type@@Base+0x644>

0002d938 <flatcc_builder_aligned_free@@Base>:
   2d938:	b	14018 <free@plt>

0002d93c <flatcc_builder_get_emit_context@@Base>:
   2d93c:	ldr	r0, [r0, #36]	; 0x24
   2d940:	bx	lr

0002d944 <flatcc_emitter_recycle_page@@Base>:
   2d944:	ldr	r3, [r0]
   2d948:	cmp	r3, r1
   2d94c:	beq	2d990 <flatcc_emitter_recycle_page@@Base+0x4c>
   2d950:	ldr	r2, [r0, #4]
   2d954:	cmp	r1, r2
   2d958:	beq	2d990 <flatcc_emitter_recycle_page@@Base+0x4c>
   2d95c:	ldr	r2, [r1, #2944]	; 0xb80
   2d960:	ldr	r0, [r1, #2948]	; 0xb84
   2d964:	str	r0, [r2, #2948]	; 0xb84
   2d968:	ldr	r0, [r1, #2948]	; 0xb84
   2d96c:	str	r2, [r0, #2944]	; 0xb80
   2d970:	ldr	r2, [r3, #2948]	; 0xb84
   2d974:	str	r3, [r1, #2944]	; 0xb80
   2d978:	str	r2, [r1, #2948]	; 0xb84
   2d97c:	str	r1, [r2, #2944]	; 0xb80
   2d980:	ldr	r3, [r1, #2944]	; 0xb80
   2d984:	mov	r0, #0
   2d988:	str	r1, [r3, #2948]	; 0xb84
   2d98c:	bx	lr
   2d990:	mvn	r0, #0
   2d994:	bx	lr

0002d998 <flatcc_emitter_reset@@Base>:
   2d998:	ldr	r3, [r0]
   2d99c:	cmp	r3, #0
   2d9a0:	bxeq	lr
   2d9a4:	add	r2, r3, #1472	; 0x5c0
   2d9a8:	push	{r4, lr}
   2d9ac:	mov	r4, r0
   2d9b0:	str	r2, [r0, #8]
   2d9b4:	str	r2, [r0, #16]
   2d9b8:	mov	r2, #1472	; 0x5c0
   2d9bc:	str	r2, [r0, #12]
   2d9c0:	str	r2, [r0, #20]
   2d9c4:	sub	r2, r2, #2944	; 0xb80
   2d9c8:	str	r3, [r0, #4]
   2d9cc:	str	r2, [r3, #2952]	; 0xb88
   2d9d0:	ldr	r3, [r0, #32]
   2d9d4:	cmp	r3, #0
   2d9d8:	ldr	r3, [r0, #24]
   2d9dc:	streq	r3, [r0, #32]
   2d9e0:	ldr	r2, [r0, #32]
   2d9e4:	lsr	r3, r3, #2
   2d9e8:	add	r2, r2, r2, lsl #1
   2d9ec:	add	r3, r3, r2, lsr #2
   2d9f0:	str	r3, [r0, #32]
   2d9f4:	mov	r3, #0
   2d9f8:	str	r3, [r0, #24]
   2d9fc:	ldr	r2, [r4, #32]
   2da00:	ldr	r3, [r4, #28]
   2da04:	cmp	r3, r2, lsl #1
   2da08:	popls	{r4, pc}
   2da0c:	ldr	r3, [r4, #4]
   2da10:	ldr	r2, [r4]
   2da14:	ldr	r0, [r3, #2944]	; 0xb80
   2da18:	cmp	r0, r2
   2da1c:	bne	2da24 <flatcc_emitter_reset@@Base+0x8c>
   2da20:	pop	{r4, pc}
   2da24:	ldr	r2, [r0, #2944]	; 0xb80
   2da28:	str	r2, [r3, #2944]	; 0xb80
   2da2c:	ldr	r2, [r0, #2944]	; 0xb80
   2da30:	str	r3, [r2, #2948]	; 0xb84
   2da34:	bl	14018 <free@plt>
   2da38:	ldr	r3, [r4, #28]
   2da3c:	sub	r3, r3, #2944	; 0xb80
   2da40:	str	r3, [r4, #28]
   2da44:	b	2d9fc <flatcc_emitter_reset@@Base+0x64>

0002da48 <flatcc_emitter_clear@@Base>:
   2da48:	ldr	r3, [r0]
   2da4c:	cmp	r3, #0
   2da50:	bxeq	lr
   2da54:	ldr	r2, [r3, #2948]	; 0xb84
   2da58:	push	{r4, r5, r6, lr}
   2da5c:	mov	r4, r0
   2da60:	mov	r1, #0
   2da64:	str	r1, [r2, #2944]	; 0xb80
   2da68:	ldr	r5, [r3, #2944]	; 0xb80
   2da6c:	cmp	r5, #0
   2da70:	bne	2da90 <flatcc_emitter_clear@@Base+0x48>
   2da74:	mov	r0, r3
   2da78:	bl	14018 <free@plt>
   2da7c:	mov	r1, r5
   2da80:	mov	r0, r4
   2da84:	mov	r2, #36	; 0x24
   2da88:	pop	{r4, r5, r6, lr}
   2da8c:	b	140fc <memset@plt>
   2da90:	ldr	r0, [r5, #2948]	; 0xb84
   2da94:	bl	14018 <free@plt>
   2da98:	mov	r3, r5
   2da9c:	b	2da68 <flatcc_emitter_clear@@Base+0x20>

0002daa0 <flatcc_emitter@@Base>:
   2daa0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2daa4:	mov	r4, r0
   2daa8:	ldr	r0, [sp, #48]	; 0x30
   2daac:	ldr	ip, [r4, #24]
   2dab0:	cmp	r3, #0
   2dab4:	add	ip, ip, r0
   2dab8:	str	ip, [r4, #24]
   2dabc:	bge	2dc6c <flatcc_emitter@@Base+0x1cc>
   2dac0:	ldr	ip, [r4, #12]
   2dac4:	cmp	r0, ip
   2dac8:	bhi	2db10 <flatcc_emitter@@Base+0x70>
   2dacc:	ldr	r3, [r4, #8]
   2dad0:	sub	r3, r3, r0
   2dad4:	sub	r0, ip, r0
   2dad8:	str	r3, [r4, #8]
   2dadc:	str	r0, [r4, #12]
   2dae0:	mov	r4, r1
   2dae4:	mov	r5, r2
   2dae8:	cmp	r5, #0
   2daec:	add	r4, r4, #8
   2daf0:	beq	2db28 <flatcc_emitter@@Base+0x88>
   2daf4:	ldmdb	r4, {r1, r2}
   2daf8:	mov	r0, r3
   2dafc:	bl	14024 <memcpy@plt>
   2db00:	ldr	r2, [r4, #-4]
   2db04:	sub	r5, r5, #1
   2db08:	add	r3, r0, r2
   2db0c:	b	2dae8 <flatcc_emitter@@Base+0x48>
   2db10:	ldr	sl, [pc, #696]	; 2ddd0 <flatcc_emitter@@Base+0x330>
   2db14:	add	r5, r1, r2, lsl #3
   2db18:	sub	r6, r2, #1
   2db1c:	mov	r9, #2944	; 0xb80
   2db20:	cmn	r6, #1
   2db24:	bne	2db30 <flatcc_emitter@@Base+0x90>
   2db28:	mov	r0, #0
   2db2c:	b	2dbd4 <flatcc_emitter@@Base+0x134>
   2db30:	ldr	r7, [r5, #-4]
   2db34:	ldr	fp, [r5, #-8]
   2db38:	mov	r8, #1472	; 0x5c0
   2db3c:	add	fp, fp, r7
   2db40:	cmp	r7, #0
   2db44:	subeq	r5, r5, #8
   2db48:	subeq	r6, r6, #1
   2db4c:	beq	2db20 <flatcc_emitter@@Base+0x80>
   2db50:	ldr	r3, [r4, #12]
   2db54:	cmp	r3, r7
   2db58:	bcs	2dc3c <flatcc_emitter@@Base+0x19c>
   2db5c:	cmp	r3, #0
   2db60:	movne	r2, r3
   2db64:	bne	2dc40 <flatcc_emitter@@Base+0x1a0>
   2db68:	ldr	r3, [r4]
   2db6c:	cmp	r3, #0
   2db70:	beq	2dbb8 <flatcc_emitter@@Base+0x118>
   2db74:	ldr	r2, [r3, #2948]	; 0xb84
   2db78:	ldr	r1, [r4, #4]
   2db7c:	cmp	r2, r1
   2db80:	beq	2dbb8 <flatcc_emitter@@Base+0x118>
   2db84:	ldr	r3, [r3, #2952]	; 0xb88
   2db88:	sub	r3, r3, #2944	; 0xb80
   2db8c:	str	r3, [r2, #2952]	; 0xb88
   2db90:	str	r2, [r4]
   2db94:	ldr	r3, [r4]
   2db98:	str	r9, [r4, #12]
   2db9c:	add	r2, r3, #2944	; 0xb80
   2dba0:	str	r2, [r4, #8]
   2dba4:	ldr	r2, [r3, #2944]	; 0xb80
   2dba8:	ldr	r2, [r2, #2952]	; 0xb88
   2dbac:	sub	r2, r2, #2944	; 0xb80
   2dbb0:	str	r2, [r3, #2952]	; 0xb88
   2dbb4:	b	2db40 <flatcc_emitter@@Base+0xa0>
   2dbb8:	mov	r0, sl
   2dbbc:	str	r3, [sp, #4]
   2dbc0:	bl	14090 <malloc@plt>
   2dbc4:	ldr	r3, [sp, #4]
   2dbc8:	cmp	r0, #0
   2dbcc:	bne	2dbdc <flatcc_emitter@@Base+0x13c>
   2dbd0:	mvn	r0, #0
   2dbd4:	add	sp, sp, #12
   2dbd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dbdc:	ldr	r2, [r4, #28]
   2dbe0:	cmp	r3, #0
   2dbe4:	add	r2, r2, #2944	; 0xb80
   2dbe8:	str	r2, [r4, #28]
   2dbec:	beq	2dc0c <flatcc_emitter@@Base+0x16c>
   2dbf0:	ldr	r2, [r4, #4]
   2dbf4:	str	r3, [r0, #2944]	; 0xb80
   2dbf8:	str	r2, [r0, #2948]	; 0xb84
   2dbfc:	str	r0, [r3, #2948]	; 0xb84
   2dc00:	str	r0, [r2, #2944]	; 0xb80
   2dc04:	str	r0, [r4]
   2dc08:	b	2db94 <flatcc_emitter@@Base+0xf4>
   2dc0c:	add	r3, r0, #1472	; 0x5c0
   2dc10:	str	r3, [r4, #8]
   2dc14:	str	r3, [r4, #16]
   2dc18:	ldr	r3, [pc, #436]	; 2ddd4 <flatcc_emitter@@Base+0x334>
   2dc1c:	str	r0, [r4]
   2dc20:	str	r0, [r4, #4]
   2dc24:	str	r0, [r0, #2944]	; 0xb80
   2dc28:	str	r0, [r0, #2948]	; 0xb84
   2dc2c:	str	r8, [r4, #12]
   2dc30:	str	r8, [r4, #20]
   2dc34:	str	r3, [r0, #2952]	; 0xb88
   2dc38:	b	2db40 <flatcc_emitter@@Base+0xa0>
   2dc3c:	mov	r2, r7
   2dc40:	ldr	r0, [r4, #8]
   2dc44:	rsb	r1, r2, #0
   2dc48:	add	r0, r0, r1
   2dc4c:	sub	r3, r3, r2
   2dc50:	add	fp, fp, r1
   2dc54:	str	r0, [r4, #8]
   2dc58:	str	r3, [r4, #12]
   2dc5c:	mov	r1, fp
   2dc60:	sub	r7, r7, r2
   2dc64:	bl	14024 <memcpy@plt>
   2dc68:	b	2db40 <flatcc_emitter@@Base+0xa0>
   2dc6c:	ldr	ip, [r4, #20]
   2dc70:	cmp	r0, ip
   2dc74:	bls	2dcb0 <flatcc_emitter@@Base+0x210>
   2dc78:	ldr	sl, [pc, #336]	; 2ddd0 <flatcc_emitter@@Base+0x330>
   2dc7c:	mov	r6, r2
   2dc80:	add	r5, r1, #8
   2dc84:	mov	r9, #2944	; 0xb80
   2dc88:	cmp	r6, #0
   2dc8c:	beq	2db28 <flatcc_emitter@@Base+0x88>
   2dc90:	ldr	r7, [r5, #-4]
   2dc94:	ldr	fp, [r5, #-8]
   2dc98:	mov	r8, #1472	; 0x5c0
   2dc9c:	cmp	r7, #0
   2dca0:	bne	2dcc8 <flatcc_emitter@@Base+0x228>
   2dca4:	sub	r6, r6, #1
   2dca8:	add	r5, r5, #8
   2dcac:	b	2dc88 <flatcc_emitter@@Base+0x1e8>
   2dcb0:	ldr	r3, [r4, #16]
   2dcb4:	add	lr, r3, r0
   2dcb8:	sub	r0, ip, r0
   2dcbc:	str	lr, [r4, #16]
   2dcc0:	str	r0, [r4, #20]
   2dcc4:	b	2dae0 <flatcc_emitter@@Base+0x40>
   2dcc8:	ldr	r3, [r4, #20]
   2dccc:	cmp	r3, r7
   2dcd0:	bcs	2dd90 <flatcc_emitter@@Base+0x2f0>
   2dcd4:	cmp	r3, #0
   2dcd8:	bne	2dd94 <flatcc_emitter@@Base+0x2f4>
   2dcdc:	ldr	r3, [r4, #4]
   2dce0:	cmp	r3, #0
   2dce4:	beq	2dcfc <flatcc_emitter@@Base+0x25c>
   2dce8:	ldr	r2, [r3, #2944]	; 0xb80
   2dcec:	ldr	r1, [r4]
   2dcf0:	cmp	r2, r1
   2dcf4:	strne	r2, [r4, #4]
   2dcf8:	bne	2dd40 <flatcc_emitter@@Base+0x2a0>
   2dcfc:	mov	r0, sl
   2dd00:	str	r3, [sp, #4]
   2dd04:	bl	14090 <malloc@plt>
   2dd08:	cmp	r0, #0
   2dd0c:	beq	2dbd0 <flatcc_emitter@@Base+0x130>
   2dd10:	ldr	r2, [r4, #28]
   2dd14:	ldr	r3, [sp, #4]
   2dd18:	add	r2, r2, #2944	; 0xb80
   2dd1c:	cmp	r3, #0
   2dd20:	str	r2, [r4, #28]
   2dd24:	beq	2dd60 <flatcc_emitter@@Base+0x2c0>
   2dd28:	ldr	r2, [r4]
   2dd2c:	str	r3, [r0, #2948]	; 0xb84
   2dd30:	str	r2, [r0, #2944]	; 0xb80
   2dd34:	str	r0, [r2, #2948]	; 0xb84
   2dd38:	str	r0, [r3, #2944]	; 0xb80
   2dd3c:	str	r0, [r4, #4]
   2dd40:	ldr	r3, [r4, #4]
   2dd44:	str	r9, [r4, #20]
   2dd48:	str	r3, [r4, #16]
   2dd4c:	ldr	r2, [r3, #2948]	; 0xb84
   2dd50:	ldr	r2, [r2, #2952]	; 0xb88
   2dd54:	add	r2, r2, #2944	; 0xb80
   2dd58:	str	r2, [r3, #2952]	; 0xb88
   2dd5c:	b	2dc9c <flatcc_emitter@@Base+0x1fc>
   2dd60:	add	r3, r0, #1472	; 0x5c0
   2dd64:	str	r3, [r4, #8]
   2dd68:	str	r3, [r4, #16]
   2dd6c:	ldr	r3, [pc, #96]	; 2ddd4 <flatcc_emitter@@Base+0x334>
   2dd70:	str	r0, [r4]
   2dd74:	str	r0, [r4, #4]
   2dd78:	str	r0, [r0, #2944]	; 0xb80
   2dd7c:	str	r0, [r0, #2948]	; 0xb84
   2dd80:	str	r8, [r4, #12]
   2dd84:	str	r8, [r4, #20]
   2dd88:	str	r3, [r0, #2952]	; 0xb88
   2dd8c:	b	2dc9c <flatcc_emitter@@Base+0x1fc>
   2dd90:	mov	r3, r7
   2dd94:	mov	r2, r3
   2dd98:	mov	r1, fp
   2dd9c:	ldr	r0, [r4, #16]
   2dda0:	str	r3, [sp, #4]
   2dda4:	bl	14024 <memcpy@plt>
   2dda8:	ldr	r3, [sp, #4]
   2ddac:	ldr	r2, [r4, #16]
   2ddb0:	sub	r7, r7, r3
   2ddb4:	add	r2, r2, r3
   2ddb8:	str	r2, [r4, #16]
   2ddbc:	ldr	r2, [r4, #20]
   2ddc0:	add	fp, fp, r3
   2ddc4:	sub	r3, r2, r3
   2ddc8:	str	r3, [r4, #20]
   2ddcc:	b	2dc9c <flatcc_emitter@@Base+0x1fc>
   2ddd0:	andeq	r0, r0, ip, lsl #23
   2ddd4:			; <UNDEFINED> instruction: 0xfffffa40

0002ddd8 <flatcc_emitter_copy_buffer@@Base>:
   2ddd8:	push	{r4, r5, r6, lr}
   2dddc:	mov	r4, r0
   2dde0:	ldr	r0, [r0, #24]
   2dde4:	cmp	r0, r2
   2dde8:	movhi	r3, #0
   2ddec:	bhi	2de60 <flatcc_emitter_copy_buffer@@Base+0x88>
   2ddf0:	ldr	r2, [r4]
   2ddf4:	cmp	r2, #0
   2ddf8:	moveq	r3, r2
   2ddfc:	beq	2de60 <flatcc_emitter_copy_buffer@@Base+0x88>
   2de00:	mov	r3, r1
   2de04:	ldr	r1, [r4, #4]
   2de08:	cmp	r2, r1
   2de0c:	moveq	r2, r0
   2de10:	ldr	r1, [r4, #8]
   2de14:	beq	2de54 <flatcc_emitter_copy_buffer@@Base+0x7c>
   2de18:	ldr	r5, [r4, #12]
   2de1c:	mov	r0, r3
   2de20:	rsb	r5, r5, #2944	; 0xb80
   2de24:	mov	r2, r5
   2de28:	bl	14024 <memcpy@plt>
   2de2c:	ldr	r2, [r4]
   2de30:	mov	r6, #2944	; 0xb80
   2de34:	add	r3, r0, r5
   2de38:	ldr	r5, [r2, #2944]	; 0xb80
   2de3c:	ldr	r2, [r4, #4]
   2de40:	cmp	r5, r2
   2de44:	bne	2de68 <flatcc_emitter_copy_buffer@@Base+0x90>
   2de48:	ldr	r2, [r4, #20]
   2de4c:	mov	r1, r5
   2de50:	rsb	r2, r2, #2944	; 0xb80
   2de54:	mov	r0, r3
   2de58:	bl	14024 <memcpy@plt>
   2de5c:	mov	r3, r0
   2de60:	mov	r0, r3
   2de64:	pop	{r4, r5, r6, pc}
   2de68:	mov	r1, r5
   2de6c:	mov	r0, r3
   2de70:	mov	r2, r6
   2de74:	bl	14024 <memcpy@plt>
   2de78:	ldr	r5, [r5, #2944]	; 0xb80
   2de7c:	add	r3, r0, #2944	; 0xb80
   2de80:	b	2de3c <flatcc_emitter_copy_buffer@@Base+0x64>
   2de84:	andeq	r0, r0, r0
   2de88:	ldrb	r3, [r0, #1]
   2de8c:	ldrb	r2, [r0]
   2de90:	ldrb	r1, [r0, #5]
   2de94:	ldrb	ip, [r0, #3]
   2de98:	orr	r2, r2, r3, lsl #8
   2de9c:	ldrb	r3, [r0, #2]
   2dea0:	orr	r2, r2, r3, lsl #16
   2dea4:	ldrb	r3, [r0, #4]
   2dea8:	orr	r3, r3, r1, lsl #8
   2deac:	ldrb	r1, [r0, #6]
   2deb0:	orr	r3, r3, r1, lsl #16
   2deb4:	ldrb	r1, [r0, #7]
   2deb8:	orr	r0, r2, ip, lsl #24
   2debc:	orr	r1, r3, r1, lsl #24
   2dec0:	bx	lr

0002dec4 <cmetrohash64_1@@Base>:
   2dec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dec8:	mov	sl, r0
   2decc:	sub	sp, sp, #84	; 0x54
   2ded0:	add	fp, r0, r2
   2ded4:	add	r1, pc, #876	; 0x36c
   2ded8:	ldrd	r0, [r1]
   2dedc:	ldr	r4, [pc, #888]	; 2e25c <cmetrohash64_1@@Base+0x398>
   2dee0:	ldr	ip, [sp, #120]	; 0x78
   2dee4:	adds	r0, r0, r2
   2dee8:	adc	r1, r1, r3
   2deec:	umlal	r0, r1, r4, ip
   2def0:	cmp	r3, #0
   2def4:	cmpeq	r2, #31
   2def8:	strd	r0, [sp, #16]
   2defc:	strd	r0, [sp, #72]	; 0x48
   2df00:	bls	2e1b0 <cmetrohash64_1@@Base+0x2ec>
   2df04:	mov	r3, r1
   2df08:	mov	r2, r0
   2df0c:	ldr	r5, [pc, #836]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2df10:	ldr	r9, [pc, #824]	; 2e250 <cmetrohash64_1@@Base+0x38c>
   2df14:	ldr	r8, [pc, #824]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2df18:	mov	r6, r0
   2df1c:	mov	r7, r1
   2df20:	strd	r2, [sp, #24]
   2df24:	strd	r2, [sp, #8]
   2df28:	strd	r2, [sp]
   2df2c:	sub	r3, fp, #32
   2df30:	str	r3, [sp, #68]	; 0x44
   2df34:	mov	r0, sl
   2df38:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2df3c:	umull	r2, r3, r0, r4
   2df40:	mla	r3, r4, r1, r3
   2df44:	ldrd	r0, [sp]
   2df48:	adds	r0, r0, r2
   2df4c:	adc	r1, r1, r3
   2df50:	mov	r3, r1
   2df54:	lsr	r1, r0, #29
   2df58:	orr	r1, r1, r3, lsl #3
   2df5c:	lsr	r3, r3, #29
   2df60:	orr	r3, r3, r0, lsl #3
   2df64:	str	r1, [sp, #32]
   2df68:	str	r3, [sp, #36]	; 0x24
   2df6c:	ldrd	r2, [sp, #32]
   2df70:	add	r0, sl, #8
   2df74:	adds	r2, r2, r6
   2df78:	adc	r3, r3, r7
   2df7c:	strd	r2, [sp]
   2df80:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2df84:	umull	r2, r3, r0, r5
   2df88:	mla	r3, r5, r1, r3
   2df8c:	ldrd	r0, [sp, #8]
   2df90:	adds	r0, r0, r2
   2df94:	adc	r1, r1, r3
   2df98:	lsr	r3, r0, #29
   2df9c:	orr	r3, r3, r1, lsl #3
   2dfa0:	str	r3, [sp, #40]	; 0x28
   2dfa4:	lsr	r3, r1, #29
   2dfa8:	orr	r3, r3, r0, lsl #3
   2dfac:	str	r3, [sp, #44]	; 0x2c
   2dfb0:	ldrd	r0, [sp, #24]
   2dfb4:	ldrd	r2, [sp, #40]	; 0x28
   2dfb8:	adds	r2, r2, r0
   2dfbc:	adc	r3, r3, r1
   2dfc0:	add	r0, sl, #16
   2dfc4:	strd	r2, [sp, #8]
   2dfc8:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dfcc:	umull	r2, r3, r0, r9
   2dfd0:	mla	r3, r9, r1, r3
   2dfd4:	adds	r6, r6, r2
   2dfd8:	adc	r7, r7, r3
   2dfdc:	lsr	r3, r6, #29
   2dfe0:	orr	r3, r3, r7, lsl #3
   2dfe4:	str	r3, [sp, #48]	; 0x30
   2dfe8:	lsr	r3, r7, #29
   2dfec:	orr	r3, r3, r6, lsl #3
   2dff0:	str	r3, [sp, #52]	; 0x34
   2dff4:	ldrd	r6, [sp, #48]	; 0x30
   2dff8:	ldrd	r2, [sp]
   2dffc:	add	r0, sl, #24
   2e000:	add	sl, sl, #32
   2e004:	adds	r6, r6, r2
   2e008:	adc	r7, r7, r3
   2e00c:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e010:	umull	r2, r3, r0, r8
   2e014:	mla	r3, r8, r1, r3
   2e018:	ldrd	r0, [sp, #24]
   2e01c:	adds	r0, r0, r2
   2e020:	adc	r1, r1, r3
   2e024:	lsr	r3, r0, #29
   2e028:	orr	r3, r3, r1, lsl #3
   2e02c:	str	r3, [sp, #56]	; 0x38
   2e030:	lsr	r3, r1, #29
   2e034:	orr	r3, r3, r0, lsl #3
   2e038:	str	r3, [sp, #60]	; 0x3c
   2e03c:	ldrd	r2, [sp, #56]	; 0x38
   2e040:	ldrd	r0, [sp, #8]
   2e044:	adds	r2, r2, r0
   2e048:	adc	r3, r3, r1
   2e04c:	strd	r2, [sp, #24]
   2e050:	ldr	r3, [sp, #68]	; 0x44
   2e054:	cmp	sl, r3
   2e058:	bls	2df34 <cmetrohash64_1@@Base+0x70>
   2e05c:	ldrd	r2, [sp, #24]
   2e060:	ldrd	r0, [sp]
   2e064:	adds	r0, r0, r2
   2e068:	adc	r1, r1, r3
   2e06c:	umull	r2, r3, r0, r4
   2e070:	mla	r3, r4, r1, r3
   2e074:	ldrd	r0, [sp, #8]
   2e078:	adds	r0, r0, r2
   2e07c:	adc	r1, r1, r3
   2e080:	mov	r3, r1
   2e084:	lsl	r8, r0, #31
   2e088:	orr	r8, r8, r3, lsr #1
   2e08c:	lsl	r1, r1, #31
   2e090:	umull	r8, r9, r8, r5
   2e094:	orr	r1, r1, r0, lsr #1
   2e098:	eor	r8, r8, r6
   2e09c:	mla	r9, r5, r1, r9
   2e0a0:	ldrd	r0, [sp, #8]
   2e0a4:	eor	r9, r9, r7
   2e0a8:	adds	r0, r0, r8
   2e0ac:	adc	r1, r1, r9
   2e0b0:	umull	r2, r3, r0, r5
   2e0b4:	mla	r3, r5, r1, r3
   2e0b8:	ldrd	r0, [sp]
   2e0bc:	adds	r0, r0, r2
   2e0c0:	adc	r1, r1, r3
   2e0c4:	mov	r3, r1
   2e0c8:	lsl	r6, r0, #31
   2e0cc:	orr	r6, r6, r3, lsr #1
   2e0d0:	lsl	r1, r1, #31
   2e0d4:	umull	r6, r7, r6, r4
   2e0d8:	ldrd	r2, [sp, #24]
   2e0dc:	orr	r1, r1, r0, lsr #1
   2e0e0:	mla	r7, r4, r1, r7
   2e0e4:	ldrd	r0, [sp]
   2e0e8:	eor	r2, r2, r6
   2e0ec:	eor	r3, r3, r7
   2e0f0:	adds	r0, r0, r8
   2e0f4:	mov	r7, r3
   2e0f8:	mov	r6, r2
   2e0fc:	umull	r2, r3, r0, r4
   2e100:	adc	r1, r1, r9
   2e104:	adds	r2, r2, r6
   2e108:	mla	r3, r4, r1, r3
   2e10c:	ldrd	r0, [sp, #8]
   2e110:	adc	r3, r3, r7
   2e114:	lsl	ip, r3, #31
   2e118:	orr	ip, ip, r2, lsr #1
   2e11c:	lsl	r2, r2, #31
   2e120:	orr	r2, r2, r3, lsr #1
   2e124:	umull	r2, r3, r2, r5
   2e128:	strd	r2, [sp, #24]
   2e12c:	ldr	r3, [sp, #28]
   2e130:	mla	r3, r5, ip, r3
   2e134:	str	r3, [sp, #28]
   2e138:	ldrd	r2, [sp]
   2e13c:	eor	r2, r2, r0
   2e140:	eor	r3, r3, r1
   2e144:	ldrd	r0, [sp, #24]
   2e148:	eor	r0, r0, r2
   2e14c:	eor	r1, r1, r3
   2e150:	mov	r2, r0
   2e154:	mov	r3, r1
   2e158:	ldrd	r0, [sp, #8]
   2e15c:	adds	r0, r0, r6
   2e160:	adc	r1, r1, r7
   2e164:	mov	r7, r1
   2e168:	umull	r0, r1, r0, r5
   2e16c:	mla	r1, r5, r7, r1
   2e170:	adds	r0, r0, r8
   2e174:	adc	r1, r1, r9
   2e178:	lsl	ip, r1, #31
   2e17c:	orr	ip, ip, r0, lsr #1
   2e180:	lsl	r0, r0, #31
   2e184:	orr	r0, r0, r1, lsr #1
   2e188:	umull	r0, r1, r0, r4
   2e18c:	mla	r1, r4, ip, r1
   2e190:	eor	r2, r2, r0
   2e194:	eor	r3, r3, r1
   2e198:	ldrd	r0, [sp, #16]
   2e19c:	adds	r0, r0, r2
   2e1a0:	adc	r1, r1, r3
   2e1a4:	mov	r2, r0
   2e1a8:	mov	r3, r1
   2e1ac:	strd	r2, [sp, #72]	; 0x48
   2e1b0:	sub	r3, fp, sl
   2e1b4:	cmp	r3, #15
   2e1b8:	ble	2e2b4 <cmetrohash64_1@@Base+0x3f0>
   2e1bc:	mov	r0, sl
   2e1c0:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e1c4:	ldr	r6, [pc, #144]	; 2e25c <cmetrohash64_1@@Base+0x398>
   2e1c8:	ldrd	r8, [sp, #72]	; 0x48
   2e1cc:	ldr	r7, [pc, #132]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2e1d0:	umull	r2, r3, r0, r6
   2e1d4:	mla	r3, r6, r1, r3
   2e1d8:	adds	r0, r2, r8
   2e1dc:	adc	r1, r3, r9
   2e1e0:	lsl	r4, r0, #31
   2e1e4:	orr	r4, r4, r1, lsr #1
   2e1e8:	lsl	r3, r1, #31
   2e1ec:	umull	r4, r5, r4, r7
   2e1f0:	orr	r3, r3, r0, lsr #1
   2e1f4:	add	r0, sl, #8
   2e1f8:	mla	r5, r7, r3, r5
   2e1fc:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e200:	add	sl, sl, #16
   2e204:	umull	r2, r3, r0, r7
   2e208:	mla	r3, r7, r1, r3
   2e20c:	adds	r0, r2, r8
   2e210:	adc	r1, r3, r9
   2e214:	lsl	r2, r0, #31
   2e218:	lsl	ip, r1, #31
   2e21c:	orr	r2, r2, r1, lsr #1
   2e220:	ldr	r1, [pc, #40]	; 2e250 <cmetrohash64_1@@Base+0x38c>
   2e224:	orr	ip, ip, r0, lsr #1
   2e228:	umull	r2, r3, r2, r1
   2e22c:	mla	r3, r1, ip, r3
   2e230:	umull	r0, r1, r4, r6
   2e234:	mla	r1, r6, r5, r1
   2e238:	lsl	ip, r1, #29
   2e23c:	orr	r7, ip, r0, lsr #3
   2e240:	lsl	r0, r0, #29
   2e244:	b	2e260 <cmetrohash64_1@@Base+0x39c>
   2e248:	svcge	0x00065edb
   2e24c:	rscvs	r5, r2, fp, lsr sp
   2e250:	blvc	ff7de344 <__bss_end__@@Base+0xff782248>
   2e254:	svccs	0x005870a5
   2e258:			; <UNDEFINED> instruction: 0x8648dbdb
   2e25c:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   2e260:	orr	r6, r0, r1, lsr #3
   2e264:	adds	r0, r6, r2
   2e268:	ldr	ip, [pc, #-28]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2e26c:	adc	r1, r7, r3
   2e270:	strd	r0, [sp]
   2e274:	umull	r0, r1, r2, ip
   2e278:	mla	r1, ip, r3, r1
   2e27c:	lsl	ip, r1, #29
   2e280:	orr	r7, ip, r0, lsr #3
   2e284:	lsl	r0, r0, #29
   2e288:	orr	r6, r0, r1, lsr #3
   2e28c:	ldrd	r0, [sp]
   2e290:	eor	r0, r0, r4
   2e294:	adds	r4, r0, r6
   2e298:	eor	r1, r1, r5
   2e29c:	adc	r5, r1, r7
   2e2a0:	eor	r4, r4, r2
   2e2a4:	adds	r8, r8, r4
   2e2a8:	eor	r5, r5, r3
   2e2ac:	adc	r9, r9, r5
   2e2b0:	strd	r8, [sp, #72]	; 0x48
   2e2b4:	sub	r3, fp, sl
   2e2b8:	cmp	r3, #7
   2e2bc:	ble	2e30c <cmetrohash64_1@@Base+0x448>
   2e2c0:	mov	r0, sl
   2e2c4:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e2c8:	ldr	r3, [pc, #-124]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2e2cc:	ldr	lr, [pc, #-124]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2e2d0:	add	sl, sl, #8
   2e2d4:	umull	r4, r5, r0, r3
   2e2d8:	mla	r5, r3, r1, r5
   2e2dc:	ldrd	r2, [sp, #72]	; 0x48
   2e2e0:	adds	r4, r4, r2
   2e2e4:	adc	r5, r5, r3
   2e2e8:	lsl	r2, r4, #31
   2e2ec:	orr	r2, r2, r5, lsr #1
   2e2f0:	lsl	ip, r5, #31
   2e2f4:	umull	r2, r3, r2, lr
   2e2f8:	orr	ip, ip, r4, lsr #1
   2e2fc:	eor	r2, r2, r4
   2e300:	mla	r3, lr, ip, r3
   2e304:	eor	r3, r3, r5
   2e308:	strd	r2, [sp, #72]	; 0x48
   2e30c:	sub	r3, fp, sl
   2e310:	cmp	r3, #3
   2e314:	ble	2e358 <cmetrohash64_1@@Base+0x494>
   2e318:	ldr	r0, [sl], #4
   2e31c:	ldrd	r2, [sp, #72]	; 0x48
   2e320:	ldr	r1, [pc, #-212]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2e324:	ldr	lr, [pc, #-212]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2e328:	umlal	r2, r3, r1, r0
   2e32c:	mov	r0, r2
   2e330:	lsr	r2, r2, #15
   2e334:	orr	r2, r2, r3, lsl #17
   2e338:	mov	r1, r3
   2e33c:	lsr	ip, r3, #15
   2e340:	umull	r2, r3, r2, lr
   2e344:	orr	ip, ip, r0, lsl #17
   2e348:	eor	r2, r2, r0
   2e34c:	mla	r3, lr, ip, r3
   2e350:	eor	r3, r3, r1
   2e354:	strd	r2, [sp, #72]	; 0x48
   2e358:	sub	r3, fp, sl
   2e35c:	cmp	r3, #1
   2e360:	ble	2e3a4 <cmetrohash64_1@@Base+0x4e0>
   2e364:	ldrh	r0, [sl], #2
   2e368:	ldrd	r2, [sp, #72]	; 0x48
   2e36c:	ldr	r1, [pc, #-288]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2e370:	ldr	lr, [pc, #-288]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2e374:	umlal	r2, r3, r1, r0
   2e378:	mov	r0, r2
   2e37c:	lsr	r2, r2, #13
   2e380:	orr	r2, r2, r3, lsl #19
   2e384:	mov	r1, r3
   2e388:	lsr	ip, r3, #13
   2e38c:	umull	r2, r3, r2, lr
   2e390:	orr	ip, ip, r0, lsl #19
   2e394:	eor	r2, r2, r0
   2e398:	mla	r3, lr, ip, r3
   2e39c:	eor	r3, r3, r1
   2e3a0:	strd	r2, [sp, #72]	; 0x48
   2e3a4:	sub	fp, fp, sl
   2e3a8:	cmp	fp, #0
   2e3ac:	ble	2e3f0 <cmetrohash64_1@@Base+0x52c>
   2e3b0:	ldrb	r2, [sl]
   2e3b4:	ldr	r0, [pc, #-360]	; 2e254 <cmetrohash64_1@@Base+0x390>
   2e3b8:	ldr	lr, [pc, #-360]	; 2e258 <cmetrohash64_1@@Base+0x394>
   2e3bc:	umull	r2, r3, r2, r0
   2e3c0:	ldrd	r0, [sp, #72]	; 0x48
   2e3c4:	adds	r0, r0, r2
   2e3c8:	adc	r1, r1, r3
   2e3cc:	lsr	r2, r0, #25
   2e3d0:	orr	r2, r2, r1, lsl #7
   2e3d4:	lsr	ip, r1, #25
   2e3d8:	umull	r2, r3, r2, lr
   2e3dc:	orr	ip, ip, r0, lsl #7
   2e3e0:	eor	r2, r2, r0
   2e3e4:	mla	r3, lr, ip, r3
   2e3e8:	eor	r3, r3, r1
   2e3ec:	strd	r2, [sp, #72]	; 0x48
   2e3f0:	ldrd	r0, [sp, #72]	; 0x48
   2e3f4:	lsl	ip, r1, #31
   2e3f8:	orr	r3, ip, r0, lsr #1
   2e3fc:	lsl	ip, r0, #31
   2e400:	orr	r2, ip, r1, lsr #1
   2e404:	ldr	ip, [pc, #-432]	; 2e25c <cmetrohash64_1@@Base+0x398>
   2e408:	eor	r2, r2, r0
   2e40c:	eor	r3, r3, r1
   2e410:	umull	r0, r1, r2, ip
   2e414:	mla	r1, ip, r3, r1
   2e418:	lsl	ip, r1, #31
   2e41c:	orr	r3, ip, r0, lsr #1
   2e420:	lsl	ip, r0, #31
   2e424:	orr	r2, ip, r1, lsr #1
   2e428:	eor	r0, r0, r2
   2e42c:	eor	r1, r1, r3
   2e430:	add	r3, sp, #80	; 0x50
   2e434:	strd	r0, [r3, #-8]!
   2e438:	ldm	r3!, {r0, r1}
   2e43c:	ldr	r3, [sp, #124]	; 0x7c
   2e440:	str	r0, [r3]
   2e444:	str	r1, [r3, #4]
   2e448:	add	sp, sp, #84	; 0x54
   2e44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e450 <cmetrohash64_2@@Base>:
   2e450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e454:	sub	sp, sp, #84	; 0x54
   2e458:	add	r7, pc, #864	; 0x360
   2e45c:	ldrd	r6, [r7]
   2e460:	ldr	r1, [sp, #120]	; 0x78
   2e464:	ldr	r4, [pc, #872]	; 2e7d4 <cmetrohash64_2@@Base+0x384>
   2e468:	adds	r6, r6, r2
   2e46c:	adc	r7, r7, r3
   2e470:	umlal	r6, r7, r4, r1
   2e474:	mov	r9, r0
   2e478:	add	r8, r0, r2
   2e47c:	mov	r1, r7
   2e480:	mov	r0, r6
   2e484:	cmp	r3, #0
   2e488:	cmpeq	r2, #31
   2e48c:	strd	r6, [sp, #16]
   2e490:	strd	r0, [sp, #72]	; 0x48
   2e494:	bls	2e740 <cmetrohash64_2@@Base+0x2f0>
   2e498:	mov	r3, r7
   2e49c:	mov	r2, r6
   2e4a0:	mov	sl, r6
   2e4a4:	mov	fp, r7
   2e4a8:	ldr	r5, [pc, #800]	; 2e7d0 <cmetrohash64_2@@Base+0x380>
   2e4ac:	ldr	r6, [pc, #788]	; 2e7c8 <cmetrohash64_2@@Base+0x378>
   2e4b0:	ldr	r7, [pc, #788]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e4b4:	strd	r2, [sp, #24]
   2e4b8:	strd	r2, [sp, #8]
   2e4bc:	strd	r2, [sp]
   2e4c0:	sub	r3, r8, #32
   2e4c4:	str	r3, [sp, #68]	; 0x44
   2e4c8:	mov	r0, r9
   2e4cc:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e4d0:	umull	r2, r3, r0, r4
   2e4d4:	mla	r3, r4, r1, r3
   2e4d8:	ldrd	r0, [sp]
   2e4dc:	adds	r0, r0, r2
   2e4e0:	adc	r1, r1, r3
   2e4e4:	mov	r3, r1
   2e4e8:	lsr	r1, r0, #29
   2e4ec:	orr	r1, r1, r3, lsl #3
   2e4f0:	lsr	r3, r3, #29
   2e4f4:	orr	r3, r3, r0, lsl #3
   2e4f8:	str	r1, [sp, #32]
   2e4fc:	str	r3, [sp, #36]	; 0x24
   2e500:	ldrd	r2, [sp, #32]
   2e504:	add	r0, r9, #8
   2e508:	adds	r2, r2, sl
   2e50c:	adc	r3, r3, fp
   2e510:	strd	r2, [sp]
   2e514:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e518:	umull	r2, r3, r0, r5
   2e51c:	mla	r3, r5, r1, r3
   2e520:	ldrd	r0, [sp, #8]
   2e524:	adds	r0, r0, r2
   2e528:	adc	r1, r1, r3
   2e52c:	lsr	r3, r0, #29
   2e530:	orr	r3, r3, r1, lsl #3
   2e534:	str	r3, [sp, #40]	; 0x28
   2e538:	lsr	r3, r1, #29
   2e53c:	orr	r3, r3, r0, lsl #3
   2e540:	str	r3, [sp, #44]	; 0x2c
   2e544:	ldrd	r0, [sp, #24]
   2e548:	ldrd	r2, [sp, #40]	; 0x28
   2e54c:	adds	r2, r2, r0
   2e550:	adc	r3, r3, r1
   2e554:	add	r0, r9, #16
   2e558:	strd	r2, [sp, #8]
   2e55c:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e560:	umull	r2, r3, r0, r6
   2e564:	mla	r3, r6, r1, r3
   2e568:	adds	sl, sl, r2
   2e56c:	adc	fp, fp, r3
   2e570:	lsr	r3, sl, #29
   2e574:	orr	r3, r3, fp, lsl #3
   2e578:	str	r3, [sp, #48]	; 0x30
   2e57c:	lsr	r3, fp, #29
   2e580:	orr	r3, r3, sl, lsl #3
   2e584:	str	r3, [sp, #52]	; 0x34
   2e588:	ldrd	sl, [sp, #48]	; 0x30
   2e58c:	ldrd	r2, [sp]
   2e590:	add	r0, r9, #24
   2e594:	add	r9, r9, #32
   2e598:	adds	sl, sl, r2
   2e59c:	adc	fp, fp, r3
   2e5a0:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e5a4:	umull	r2, r3, r0, r7
   2e5a8:	mla	r3, r7, r1, r3
   2e5ac:	ldrd	r0, [sp, #24]
   2e5b0:	adds	r0, r0, r2
   2e5b4:	adc	r1, r1, r3
   2e5b8:	lsr	r3, r0, #29
   2e5bc:	orr	r3, r3, r1, lsl #3
   2e5c0:	str	r3, [sp, #56]	; 0x38
   2e5c4:	lsr	r3, r1, #29
   2e5c8:	orr	r3, r3, r0, lsl #3
   2e5cc:	str	r3, [sp, #60]	; 0x3c
   2e5d0:	ldrd	r2, [sp, #56]	; 0x38
   2e5d4:	ldrd	r0, [sp, #8]
   2e5d8:	adds	r2, r2, r0
   2e5dc:	adc	r3, r3, r1
   2e5e0:	strd	r2, [sp, #24]
   2e5e4:	ldr	r3, [sp, #68]	; 0x44
   2e5e8:	cmp	r9, r3
   2e5ec:	bls	2e4c8 <cmetrohash64_2@@Base+0x78>
   2e5f0:	ldrd	r2, [sp, #24]
   2e5f4:	ldrd	r0, [sp]
   2e5f8:	adds	r0, r0, r2
   2e5fc:	adc	r1, r1, r3
   2e600:	umull	r2, r3, r0, r4
   2e604:	mla	r3, r4, r1, r3
   2e608:	ldrd	r0, [sp, #8]
   2e60c:	adds	r0, r0, r2
   2e610:	adc	r1, r1, r3
   2e614:	mov	r2, r0
   2e618:	lsr	r0, r0, #30
   2e61c:	orr	r0, r0, r1, lsl #2
   2e620:	lsr	r3, r1, #30
   2e624:	umull	r0, r1, r0, r5
   2e628:	orr	r2, r3, r2, lsl #2
   2e62c:	eor	sl, sl, r0
   2e630:	mla	r1, r5, r2, r1
   2e634:	eor	fp, fp, r1
   2e638:	ldrd	r0, [sp, #8]
   2e63c:	adds	r0, r0, sl
   2e640:	adc	r1, r1, fp
   2e644:	umull	r2, r3, r0, r5
   2e648:	mla	r3, r5, r1, r3
   2e64c:	ldrd	r0, [sp]
   2e650:	adds	r0, r0, r2
   2e654:	adc	r1, r1, r3
   2e658:	lsr	r6, r0, #30
   2e65c:	orr	r6, r6, r1, lsl #2
   2e660:	lsr	r3, r1, #30
   2e664:	umull	r6, r7, r6, r4
   2e668:	orr	r2, r3, r0, lsl #2
   2e66c:	ldrd	r0, [sp]
   2e670:	mla	r7, r4, r2, r7
   2e674:	ldrd	r2, [sp, #24]
   2e678:	adds	r0, r0, sl
   2e67c:	adc	r1, r1, fp
   2e680:	eor	r2, r2, r6
   2e684:	eor	r3, r3, r7
   2e688:	mov	r6, r2
   2e68c:	mov	r7, r3
   2e690:	umull	r2, r3, r0, r4
   2e694:	mla	r3, r4, r1, r3
   2e698:	adds	r2, r2, r6
   2e69c:	adc	r3, r3, r7
   2e6a0:	lsr	r0, r2, #30
   2e6a4:	orr	r0, r0, r3, lsl #2
   2e6a8:	lsr	r3, r3, #30
   2e6ac:	umull	r0, r1, r0, r5
   2e6b0:	orr	r3, r3, r2, lsl #2
   2e6b4:	strd	r0, [sp, #24]
   2e6b8:	ldr	r2, [sp, #28]
   2e6bc:	ldrd	r0, [sp, #8]
   2e6c0:	mla	r3, r5, r3, r2
   2e6c4:	str	r3, [sp, #28]
   2e6c8:	ldrd	r2, [sp]
   2e6cc:	eor	r2, r2, r0
   2e6d0:	eor	r3, r3, r1
   2e6d4:	ldrd	r0, [sp, #24]
   2e6d8:	eor	r0, r0, r2
   2e6dc:	eor	r1, r1, r3
   2e6e0:	mov	r2, r0
   2e6e4:	mov	r3, r1
   2e6e8:	ldrd	r0, [sp, #8]
   2e6ec:	adds	r0, r0, r6
   2e6f0:	adc	r1, r1, r7
   2e6f4:	mov	r7, r1
   2e6f8:	umull	r0, r1, r0, r5
   2e6fc:	mla	r1, r5, r7, r1
   2e700:	adds	r0, r0, sl
   2e704:	adc	r1, r1, fp
   2e708:	lsr	r6, r0, #30
   2e70c:	orr	r6, r6, r1, lsl #2
   2e710:	lsr	sl, r1, #30
   2e714:	umull	r6, r7, r6, r4
   2e718:	orr	r0, sl, r0, lsl #2
   2e71c:	eor	r2, r2, r6
   2e720:	mla	r7, r4, r0, r7
   2e724:	ldrd	r0, [sp, #16]
   2e728:	eor	r3, r3, r7
   2e72c:	adds	r0, r0, r2
   2e730:	adc	r1, r1, r3
   2e734:	mov	r2, r0
   2e738:	mov	r3, r1
   2e73c:	strd	r2, [sp, #72]	; 0x48
   2e740:	sub	r3, r8, r9
   2e744:	cmp	r3, #15
   2e748:	ble	2e85c <cmetrohash64_2@@Base+0x40c>
   2e74c:	mov	r0, r9
   2e750:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e754:	ldr	r7, [pc, #108]	; 2e7c8 <cmetrohash64_2@@Base+0x378>
   2e758:	ldrd	r2, [sp, #72]	; 0x48
   2e75c:	ldr	r6, [pc, #104]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e760:	strd	r2, [sp]
   2e764:	umull	r2, r3, r0, r7
   2e768:	mla	r3, r7, r1, r3
   2e76c:	ldrd	r0, [sp]
   2e770:	adds	r0, r0, r2
   2e774:	adc	r1, r1, r3
   2e778:	lsr	r4, r0, #29
   2e77c:	orr	r4, r4, r1, lsl #3
   2e780:	lsr	r3, r1, #29
   2e784:	umull	r4, r5, r4, r6
   2e788:	orr	r0, r3, r0, lsl #3
   2e78c:	mla	r5, r6, r0, r5
   2e790:	add	r0, r9, #8
   2e794:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e798:	ldr	ip, [pc, #52]	; 2e7d4 <cmetrohash64_2@@Base+0x384>
   2e79c:	add	r9, r9, #16
   2e7a0:	umull	r2, r3, r0, r7
   2e7a4:	mla	r3, r7, r1, r3
   2e7a8:	ldrd	r0, [sp]
   2e7ac:	adds	r0, r0, r2
   2e7b0:	adc	r1, r1, r3
   2e7b4:	lsr	r2, r0, #29
   2e7b8:	orr	r2, r2, r1, lsl #3
   2e7bc:	b	2e7d8 <cmetrohash64_2@@Base+0x388>
   2e7c0:	blle	ff96169c <__bss_end__@@Base+0xff9055a0>
   2e7c4:	adcspl	r3, ip, #-134217725	; 0xf8000003
   2e7c8:	addsvs	r2, r9, #772	; 0x304
   2e7cc:	adcscc	r5, ip, r9, lsr #22
   2e7d0:	adcge	r0, sl, #-335544320	; 0xec000000
   2e7d4:			; <UNDEFINED> instruction: 0xd6d018f5
   2e7d8:	lsr	r3, r1, #29
   2e7dc:	orr	r0, r3, r0, lsl #3
   2e7e0:	umull	r2, r3, r2, r6
   2e7e4:	mla	r3, r6, r0, r3
   2e7e8:	umull	r0, r1, r4, ip
   2e7ec:	mla	r1, ip, r5, r1
   2e7f0:	lsl	ip, r1, #30
   2e7f4:	orr	ip, ip, r0, lsr #2
   2e7f8:	lsl	r0, r0, #30
   2e7fc:	orr	r1, r0, r1, lsr #2
   2e800:	mov	sl, r1
   2e804:	adds	r0, sl, r2
   2e808:	adc	r1, ip, r3
   2e80c:	mov	sl, r0
   2e810:	mov	fp, r1
   2e814:	umull	r0, r1, r2, r6
   2e818:	mla	r1, r6, r3, r1
   2e81c:	lsl	ip, r1, #30
   2e820:	orr	r7, ip, r0, lsr #2
   2e824:	lsl	r0, r0, #30
   2e828:	orr	r6, r0, r1, lsr #2
   2e82c:	mov	r0, sl
   2e830:	mov	r1, fp
   2e834:	eor	r0, r0, r4
   2e838:	ldrd	sl, [sp]
   2e83c:	adds	r0, r0, r6
   2e840:	eor	r1, r1, r5
   2e844:	adc	r1, r1, r7
   2e848:	eor	r2, r2, r0
   2e84c:	adds	sl, sl, r2
   2e850:	eor	r3, r3, r1
   2e854:	adc	fp, fp, r3
   2e858:	strd	sl, [sp, #72]	; 0x48
   2e85c:	sub	r3, r8, r9
   2e860:	cmp	r3, #7
   2e864:	ble	2e8b4 <cmetrohash64_2@@Base+0x464>
   2e868:	mov	r0, r9
   2e86c:	bl	2de88 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2e870:	ldr	r3, [pc, #-172]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e874:	ldr	lr, [pc, #-172]	; 2e7d0 <cmetrohash64_2@@Base+0x380>
   2e878:	add	r9, r9, #8
   2e87c:	umull	r4, r5, r0, r3
   2e880:	mla	r5, r3, r1, r5
   2e884:	ldrd	r2, [sp, #72]	; 0x48
   2e888:	adds	r4, r4, r2
   2e88c:	adc	r5, r5, r3
   2e890:	lsl	r2, r4, #28
   2e894:	orr	r2, r2, r5, lsr #4
   2e898:	lsl	ip, r5, #28
   2e89c:	umull	r2, r3, r2, lr
   2e8a0:	orr	ip, ip, r4, lsr #4
   2e8a4:	eor	r2, r2, r4
   2e8a8:	mla	r3, lr, ip, r3
   2e8ac:	eor	r3, r3, r5
   2e8b0:	strd	r2, [sp, #72]	; 0x48
   2e8b4:	sub	r3, r8, r9
   2e8b8:	cmp	r3, #3
   2e8bc:	ble	2e900 <cmetrohash64_2@@Base+0x4b0>
   2e8c0:	ldr	r0, [r9], #4
   2e8c4:	ldrd	r2, [sp, #72]	; 0x48
   2e8c8:	ldr	r1, [pc, #-260]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e8cc:	ldr	lr, [pc, #-260]	; 2e7d0 <cmetrohash64_2@@Base+0x380>
   2e8d0:	umlal	r2, r3, r1, r0
   2e8d4:	mov	r0, r2
   2e8d8:	lsr	r2, r2, #15
   2e8dc:	orr	r2, r2, r3, lsl #17
   2e8e0:	mov	r1, r3
   2e8e4:	lsr	ip, r3, #15
   2e8e8:	umull	r2, r3, r2, lr
   2e8ec:	orr	ip, ip, r0, lsl #17
   2e8f0:	eor	r2, r2, r0
   2e8f4:	mla	r3, lr, ip, r3
   2e8f8:	eor	r3, r3, r1
   2e8fc:	strd	r2, [sp, #72]	; 0x48
   2e900:	sub	r3, r8, r9
   2e904:	cmp	r3, #1
   2e908:	ble	2e94c <cmetrohash64_2@@Base+0x4fc>
   2e90c:	ldrh	r0, [r9], #2
   2e910:	ldrd	r2, [sp, #72]	; 0x48
   2e914:	ldr	r1, [pc, #-336]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e918:	ldr	lr, [pc, #-336]	; 2e7d0 <cmetrohash64_2@@Base+0x380>
   2e91c:	umlal	r2, r3, r1, r0
   2e920:	mov	r0, r2
   2e924:	lsr	r2, r2, #15
   2e928:	orr	r2, r2, r3, lsl #17
   2e92c:	mov	r1, r3
   2e930:	lsr	ip, r3, #15
   2e934:	umull	r2, r3, r2, lr
   2e938:	orr	ip, ip, r0, lsl #17
   2e93c:	eor	r2, r2, r0
   2e940:	mla	r3, lr, ip, r3
   2e944:	eor	r3, r3, r1
   2e948:	strd	r2, [sp, #72]	; 0x48
   2e94c:	sub	r3, r8, r9
   2e950:	cmp	r3, #0
   2e954:	ble	2e998 <cmetrohash64_2@@Base+0x548>
   2e958:	ldrb	r2, [r9]
   2e95c:	ldr	r0, [pc, #-408]	; 2e7cc <cmetrohash64_2@@Base+0x37c>
   2e960:	ldr	lr, [pc, #-408]	; 2e7d0 <cmetrohash64_2@@Base+0x380>
   2e964:	umull	r2, r3, r2, r0
   2e968:	ldrd	r0, [sp, #72]	; 0x48
   2e96c:	adds	r0, r0, r2
   2e970:	adc	r1, r1, r3
   2e974:	lsr	r2, r0, #23
   2e978:	orr	r2, r2, r1, lsl #9
   2e97c:	lsr	ip, r1, #23
   2e980:	umull	r2, r3, r2, lr
   2e984:	orr	ip, ip, r0, lsl #9
   2e988:	eor	r2, r2, r0
   2e98c:	mla	r3, lr, ip, r3
   2e990:	eor	r3, r3, r1
   2e994:	strd	r2, [sp, #72]	; 0x48
   2e998:	ldrd	r0, [sp, #72]	; 0x48
   2e99c:	lsr	ip, r0, #28
   2e9a0:	orr	r2, ip, r1, lsl #4
   2e9a4:	lsr	ip, r1, #28
   2e9a8:	orr	r3, ip, r0, lsl #4
   2e9ac:	ldr	ip, [pc, #-480]	; 2e7d4 <cmetrohash64_2@@Base+0x384>
   2e9b0:	eor	r2, r2, r0
   2e9b4:	eor	r3, r3, r1
   2e9b8:	umull	r0, r1, r2, ip
   2e9bc:	mla	r1, ip, r3, r1
   2e9c0:	lsr	ip, r0, #29
   2e9c4:	orr	r2, ip, r1, lsl #3
   2e9c8:	lsr	ip, r1, #29
   2e9cc:	orr	r3, ip, r0, lsl #3
   2e9d0:	eor	r1, r1, r3
   2e9d4:	eor	r0, r0, r2
   2e9d8:	add	r3, sp, #80	; 0x50
   2e9dc:	strd	r0, [r3, #-8]!
   2e9e0:	ldm	r3!, {r0, r1}
   2e9e4:	ldr	r3, [sp, #124]	; 0x7c
   2e9e8:	str	r0, [r3]
   2e9ec:	str	r1, [r3, #4]
   2e9f0:	add	sp, sp, #84	; 0x54
   2e9f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9f8:	push	{r4, r5, r6, r7, r8, lr}
   2e9fc:	mov	r5, r0
   2ea00:	ldr	r6, [r0]
   2ea04:	mov	r7, r1
   2ea08:	mov	r8, r2
   2ea0c:	mov	r4, #0
   2ea10:	ldr	r3, [r5, #12]
   2ea14:	cmp	r4, r3
   2ea18:	bcc	2ea20 <cmetrohash64_2@@Base+0x5d0>
   2ea1c:	pop	{r4, r5, r6, r7, r8, pc}
   2ea20:	ldr	r1, [r6, r4, lsl #2]
   2ea24:	cmp	r1, #0
   2ea28:	cmpne	r1, #2
   2ea2c:	beq	2ea38 <cmetrohash64_2@@Base+0x5e8>
   2ea30:	mov	r0, r8
   2ea34:	blx	r7
   2ea38:	add	r4, r4, #1
   2ea3c:	b	2ea10 <cmetrohash64_2@@Base+0x5c0>
   2ea40:	push	{r4, lr}
   2ea44:	mov	r4, r0
   2ea48:	ldr	r0, [r0]
   2ea4c:	cmp	r0, #0
   2ea50:	beq	2ea58 <cmetrohash64_2@@Base+0x608>
   2ea54:	bl	14018 <free@plt>
   2ea58:	mov	r0, r4
   2ea5c:	mov	r2, #16
   2ea60:	mov	r1, #0
   2ea64:	pop	{r4, lr}
   2ea68:	b	140fc <memset@plt>
   2ea6c:	push	{r0, r1, r2, r3, r4, lr}
   2ea70:	add	r3, sp, #8
   2ea74:	str	r3, [sp, #4]
   2ea78:	ldr	r3, [pc, #24]	; 2ea98 <cmetrohash64_2@@Base+0x648>
   2ea7c:	mov	r2, r1
   2ea80:	str	r3, [sp]
   2ea84:	mov	r3, #0
   2ea88:	bl	2dec4 <cmetrohash64_1@@Base>
   2ea8c:	ldr	r0, [sp, #8]
   2ea90:	add	sp, sp, #20
   2ea94:	pop	{pc}		; (ldr pc, [sp], #4)
   2ea98:	svccs	0x00693b52
   2ea9c:	ldr	ip, [r2, #12]
   2eaa0:	cmp	ip, r1
   2eaa4:	bne	2eac8 <cmetrohash64_2@@Base+0x678>
   2eaa8:	mov	r3, r2
   2eaac:	push	{r4, lr}
   2eab0:	mov	r2, ip
   2eab4:	ldr	r1, [r3, #8]
   2eab8:	bl	1403c <memcmp@plt>
   2eabc:	clz	r0, r0
   2eac0:	lsr	r0, r0, #5
   2eac4:	pop	{r4, pc}
   2eac8:	mov	r0, #0
   2eacc:	bx	lr
   2ead0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ead4:	subs	r8, r3, #0
   2ead8:	str	r1, [sp]
   2eadc:	bne	2eaf4 <cmetrohash64_2@@Base+0x6a4>
   2eae0:	ldr	r3, [pc, #372]	; 2ec5c <cmetrohash64_2@@Base+0x80c>
   2eae4:	ldr	r1, [pc, #372]	; 2ec60 <cmetrohash64_2@@Base+0x810>
   2eae8:	ldr	r0, [pc, #372]	; 2ec64 <cmetrohash64_2@@Base+0x814>
   2eaec:	mov	r2, #114	; 0x72
   2eaf0:	bl	141a4 <__assert_fail@plt>
   2eaf4:	cmp	r8, #2
   2eaf8:	ldreq	r3, [pc, #348]	; 2ec5c <cmetrohash64_2@@Base+0x80c>
   2eafc:	moveq	r2, #115	; 0x73
   2eb00:	ldreq	r1, [pc, #344]	; 2ec60 <cmetrohash64_2@@Base+0x810>
   2eb04:	ldreq	r0, [pc, #348]	; 2ec68 <cmetrohash64_2@@Base+0x818>
   2eb08:	beq	2eaf0 <cmetrohash64_2@@Base+0x6a0>
   2eb0c:	cmp	r8, #1
   2eb10:	ldreq	r3, [pc, #324]	; 2ec5c <cmetrohash64_2@@Base+0x80c>
   2eb14:	moveq	r2, #116	; 0x74
   2eb18:	ldreq	r1, [pc, #320]	; 2ec60 <cmetrohash64_2@@Base+0x810>
   2eb1c:	ldreq	r0, [pc, #328]	; 2ec6c <cmetrohash64_2@@Base+0x81c>
   2eb20:	beq	2eaf0 <cmetrohash64_2@@Base+0x6a0>
   2eb24:	mov	fp, r2
   2eb28:	ldr	r2, [r0, #12]
   2eb2c:	mov	r3, #179	; 0xb3
   2eb30:	ldr	r1, [r0, #8]
   2eb34:	mul	r3, r3, r2
   2eb38:	mov	r6, r0
   2eb3c:	cmp	r1, r3, lsr #8
   2eb40:	bcc	2eb70 <cmetrohash64_2@@Base+0x720>
   2eb44:	lsl	r1, r1, #1
   2eb48:	bl	2ec7c <cmetrohash64_2@@Base+0x82c>
   2eb4c:	cmp	r0, #0
   2eb50:	beq	2eb70 <cmetrohash64_2@@Base+0x720>
   2eb54:	ldr	r3, [pc, #276]	; 2ec70 <cmetrohash64_2@@Base+0x820>
   2eb58:	ldr	r2, [pc, #276]	; 2ec74 <cmetrohash64_2@@Base+0x824>
   2eb5c:	ldr	r1, [pc, #276]	; 2ec78 <cmetrohash64_2@@Base+0x828>
   2eb60:	ldr	r0, [r3]
   2eb64:	bl	140e4 <fprintf@plt>
   2eb68:	mov	r0, #1
   2eb6c:	bl	140c0 <exit@plt>
   2eb70:	mov	r1, fp
   2eb74:	ldr	r0, [sp]
   2eb78:	ldr	r9, [r6, #12]
   2eb7c:	ldr	sl, [r6]
   2eb80:	bl	2ea6c <cmetrohash64_2@@Base+0x61c>
   2eb84:	ldr	r3, [sp, #48]	; 0x30
   2eb88:	sub	r9, r9, #1
   2eb8c:	sub	r3, r3, #2
   2eb90:	cmp	r3, #1
   2eb94:	movhi	r7, #0
   2eb98:	ldrls	r3, [r6, #8]
   2eb9c:	addls	r3, r3, #1
   2eba0:	strls	r3, [r6, #8]
   2eba4:	and	r2, r9, r0
   2eba8:	add	r4, r0, #1
   2ebac:	bls	2ebe4 <cmetrohash64_2@@Base+0x794>
   2ebb0:	ldr	r5, [sl, r2, lsl #2]
   2ebb4:	add	r3, sl, r2, lsl #2
   2ebb8:	cmp	r5, #0
   2ebbc:	bne	2ec08 <cmetrohash64_2@@Base+0x7b8>
   2ebc0:	cmp	r7, #0
   2ebc4:	moveq	r7, r3
   2ebc8:	ldr	r3, [r6, #8]
   2ebcc:	add	r3, r3, #1
   2ebd0:	str	r3, [r6, #8]
   2ebd4:	str	r8, [r7]
   2ebd8:	b	2ec50 <cmetrohash64_2@@Base+0x800>
   2ebdc:	and	r2, r4, r9
   2ebe0:	add	r4, r4, #1
   2ebe4:	ldr	r5, [sl, r2, lsl #2]
   2ebe8:	add	r3, sl, r2, lsl #2
   2ebec:	cmp	r5, #0
   2ebf0:	cmpne	r5, #2
   2ebf4:	movne	r5, #1
   2ebf8:	moveq	r5, #0
   2ebfc:	bne	2ebdc <cmetrohash64_2@@Base+0x78c>
   2ec00:	str	r8, [r3]
   2ec04:	b	2ec50 <cmetrohash64_2@@Base+0x800>
   2ec08:	cmp	r5, #2
   2ec0c:	bne	2ec24 <cmetrohash64_2@@Base+0x7d4>
   2ec10:	cmp	r7, #0
   2ec14:	moveq	r7, r3
   2ec18:	and	r2, r9, r4
   2ec1c:	add	r4, r4, #1
   2ec20:	b	2ebb0 <cmetrohash64_2@@Base+0x760>
   2ec24:	mov	r2, r5
   2ec28:	mov	r1, fp
   2ec2c:	ldr	r0, [sp]
   2ec30:	str	r3, [sp, #4]
   2ec34:	bl	2ea9c <cmetrohash64_2@@Base+0x64c>
   2ec38:	ldr	r3, [sp, #4]
   2ec3c:	cmp	r0, #0
   2ec40:	beq	2ec18 <cmetrohash64_2@@Base+0x7c8>
   2ec44:	ldr	r2, [sp, #48]	; 0x30
   2ec48:	cmp	r2, #0
   2ec4c:	beq	2ec00 <cmetrohash64_2@@Base+0x7b0>
   2ec50:	mov	r0, r5
   2ec54:	add	sp, sp, #12
   2ec58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ec5c:	andeq	fp, r4, r0, ror #5
   2ec60:	andeq	r7, r4, r0, lsr pc
   2ec64:	andeq	r7, r4, r0, lsl #31
   2ec68:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   2ec6c:	andeq	r7, r4, lr, lsr #31
   2ec70:	strheq	ip, [r5], -r0
   2ec74:	andeq	r7, r4, r3, asr #31
   2ec78:	strdeq	r7, [r4], -r6
   2ec7c:	ldr	r3, [r0, #8]
   2ec80:	push	{r4, r5, r6, r7, lr}
   2ec84:	cmp	r1, r3
   2ec88:	ldr	r7, [r0]
   2ec8c:	sub	sp, sp, #28
   2ec90:	mov	r4, r0
   2ec94:	movcc	r1, r3
   2ec98:	mov	r6, #4
   2ec9c:	mov	r2, #179	; 0xb3
   2eca0:	mul	r3, r2, r6
   2eca4:	cmp	r1, r3, lsr #8
   2eca8:	bhi	2ed24 <cmetrohash64_2@@Base+0x8d4>
   2ecac:	mov	r1, #4
   2ecb0:	mov	r0, r6
   2ecb4:	bl	13fe8 <calloc@plt>
   2ecb8:	cmp	r0, #0
   2ecbc:	str	r0, [sp, #8]
   2ecc0:	mvneq	r0, #0
   2ecc4:	beq	2ed1c <cmetrohash64_2@@Base+0x8cc>
   2ecc8:	str	r6, [sp, #20]
   2eccc:	mov	r6, #3
   2ecd0:	mov	r5, #0
   2ecd4:	str	r5, [sp, #12]
   2ecd8:	str	r5, [sp, #16]
   2ecdc:	ldr	r3, [r4, #12]
   2ece0:	cmp	r5, r3
   2ece4:	bcc	2ed2c <cmetrohash64_2@@Base+0x8dc>
   2ece8:	mov	r0, r4
   2ecec:	bl	2ea40 <cmetrohash64_2@@Base+0x5f0>
   2ecf0:	add	r2, sp, #8
   2ecf4:	add	ip, sp, #24
   2ecf8:	mov	r3, r2
   2ecfc:	add	r4, r4, #8
   2ed00:	ldm	r3!, {r0, r1}
   2ed04:	cmp	r3, ip
   2ed08:	str	r0, [r4, #-8]
   2ed0c:	str	r1, [r4, #-4]
   2ed10:	mov	r2, r3
   2ed14:	bne	2ecf8 <cmetrohash64_2@@Base+0x8a8>
   2ed18:	mov	r0, #0
   2ed1c:	add	sp, sp, #28
   2ed20:	pop	{r4, r5, r6, r7, pc}
   2ed24:	lsl	r6, r6, #1
   2ed28:	b	2eca0 <cmetrohash64_2@@Base+0x850>
   2ed2c:	ldr	r3, [r7, r5, lsl #2]
   2ed30:	cmp	r3, #0
   2ed34:	cmpne	r3, #2
   2ed38:	beq	2ed50 <cmetrohash64_2@@Base+0x900>
   2ed3c:	str	r6, [sp]
   2ed40:	add	r0, sp, #8
   2ed44:	ldr	r2, [r3, #12]
   2ed48:	ldr	r1, [r3, #8]
   2ed4c:	bl	2ead0 <cmetrohash64_2@@Base+0x680>
   2ed50:	add	r5, r5, #1
   2ed54:	b	2ecdc <cmetrohash64_2@@Base+0x88c>
   2ed58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed5c:	ldr	r9, [r0]
   2ed60:	cmp	r9, #0
   2ed64:	bne	2ed74 <cmetrohash64_2@@Base+0x924>
   2ed68:	mov	r5, #0
   2ed6c:	mov	r0, r5
   2ed70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ed74:	mov	r7, r1
   2ed78:	ldr	r6, [r0, #12]
   2ed7c:	mov	r1, r2
   2ed80:	mov	r0, r7
   2ed84:	mov	r8, r2
   2ed88:	bl	2ea6c <cmetrohash64_2@@Base+0x61c>
   2ed8c:	sub	r6, r6, #1
   2ed90:	and	r3, r6, r0
   2ed94:	add	r4, r0, #1
   2ed98:	ldr	r5, [r9, r3, lsl #2]
   2ed9c:	cmp	r5, #0
   2eda0:	beq	2ed68 <cmetrohash64_2@@Base+0x918>
   2eda4:	cmp	r5, #2
   2eda8:	beq	2edc4 <cmetrohash64_2@@Base+0x974>
   2edac:	mov	r2, r5
   2edb0:	mov	r1, r8
   2edb4:	mov	r0, r7
   2edb8:	bl	2ea9c <cmetrohash64_2@@Base+0x64c>
   2edbc:	cmp	r0, #0
   2edc0:	bne	2ed6c <cmetrohash64_2@@Base+0x91c>
   2edc4:	and	r3, r6, r4
   2edc8:	add	r4, r4, #1
   2edcc:	b	2ed98 <cmetrohash64_2@@Base+0x948>
   2edd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2edd4:	ldr	sl, [r0]
   2edd8:	cmp	sl, #0
   2eddc:	bne	2edec <cmetrohash64_2@@Base+0x99c>
   2ede0:	mov	r6, #0
   2ede4:	mov	r0, r6
   2ede8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2edec:	mov	r8, r1
   2edf0:	ldr	r7, [r0, #12]
   2edf4:	mov	r5, r0
   2edf8:	mov	r1, r2
   2edfc:	mov	r0, r8
   2ee00:	mov	r9, r2
   2ee04:	bl	2ea6c <cmetrohash64_2@@Base+0x61c>
   2ee08:	sub	r7, r7, #1
   2ee0c:	and	r3, r7, r0
   2ee10:	add	r4, r0, #1
   2ee14:	ldr	r6, [sl, r3, lsl #2]
   2ee18:	add	fp, sl, r3, lsl #2
   2ee1c:	cmp	r6, #0
   2ee20:	beq	2ede0 <cmetrohash64_2@@Base+0x990>
   2ee24:	cmp	r6, #2
   2ee28:	beq	2ee5c <cmetrohash64_2@@Base+0xa0c>
   2ee2c:	mov	r2, r6
   2ee30:	mov	r1, r9
   2ee34:	mov	r0, r8
   2ee38:	bl	2ea9c <cmetrohash64_2@@Base+0x64c>
   2ee3c:	cmp	r0, #0
   2ee40:	beq	2ee5c <cmetrohash64_2@@Base+0xa0c>
   2ee44:	mov	r3, #2
   2ee48:	str	r3, [fp]
   2ee4c:	ldr	r3, [r5, #8]
   2ee50:	sub	r3, r3, #1
   2ee54:	str	r3, [r5, #8]
   2ee58:	b	2ede4 <cmetrohash64_2@@Base+0x994>
   2ee5c:	and	r3, r7, r4
   2ee60:	add	r4, r4, #1
   2ee64:	b	2ee14 <cmetrohash64_2@@Base+0x9c4>

0002ee68 <fb_name_table_clear@@Base>:
   2ee68:	b	2ea40 <cmetrohash64_2@@Base+0x5f0>

0002ee6c <fb_name_table_destroy@@Base>:
   2ee6c:	cmp	r1, #0
   2ee70:	push	{r4, lr}
   2ee74:	mov	r4, r0
   2ee78:	beq	2ee80 <fb_name_table_destroy@@Base+0x14>
   2ee7c:	bl	2e9f8 <cmetrohash64_2@@Base+0x5a8>
   2ee80:	mov	r0, r4
   2ee84:	pop	{r4, lr}
   2ee88:	b	2ea40 <cmetrohash64_2@@Base+0x5f0>

0002ee8c <fb_name_table_init@@Base>:
   2ee8c:	push	{r4, r5, r6, lr}
   2ee90:	mov	r2, #179	; 0xb3
   2ee94:	mov	r5, r0
   2ee98:	mov	r4, #4
   2ee9c:	mul	r3, r2, r4
   2eea0:	cmp	r1, r3, lsr #8
   2eea4:	bhi	2eed4 <fb_name_table_init@@Base+0x48>
   2eea8:	mov	r1, #4
   2eeac:	mov	r0, r4
   2eeb0:	bl	13fe8 <calloc@plt>
   2eeb4:	cmp	r0, #0
   2eeb8:	str	r0, [r5]
   2eebc:	movne	r0, #0
   2eec0:	strne	r0, [r5, #4]
   2eec4:	strne	r4, [r5, #12]
   2eec8:	strne	r0, [r5, #8]
   2eecc:	mvneq	r0, #0
   2eed0:	pop	{r4, r5, r6, pc}
   2eed4:	lsl	r4, r4, #1
   2eed8:	b	2ee9c <fb_name_table_init@@Base+0x10>

0002eedc <fb_name_table_resize@@Base>:
   2eedc:	b	2ec7c <cmetrohash64_2@@Base+0x82c>

0002eee0 <fb_name_table_insert@@Base>:
   2eee0:	b	2ead0 <cmetrohash64_2@@Base+0x680>

0002eee4 <fb_name_table_insert_item@@Base>:
   2eee4:	push	{r0, r1, r2, lr}
   2eee8:	mov	r3, r1
   2eeec:	str	r2, [sp]
   2eef0:	ldr	r2, [r1, #12]
   2eef4:	ldr	r1, [r1, #8]
   2eef8:	bl	2ead0 <cmetrohash64_2@@Base+0x680>
   2eefc:	add	sp, sp, #12
   2ef00:	pop	{pc}		; (ldr pc, [sp], #4)

0002ef04 <fb_name_table_find@@Base>:
   2ef04:	b	2ed58 <cmetrohash64_2@@Base+0x908>

0002ef08 <fb_name_table_find_item@@Base>:
   2ef08:	ldr	r2, [r1, #12]
   2ef0c:	ldr	r1, [r1, #8]
   2ef10:	b	2ed58 <cmetrohash64_2@@Base+0x908>

0002ef14 <fb_name_table_remove@@Base>:
   2ef14:	b	2edd0 <cmetrohash64_2@@Base+0x980>

0002ef18 <fb_name_table_remove_item@@Base>:
   2ef18:	ldr	r2, [r1, #12]
   2ef1c:	ldr	r1, [r1, #8]
   2ef20:	b	2edd0 <cmetrohash64_2@@Base+0x980>

0002ef24 <fb_name_table_visit@@Base>:
   2ef24:	b	2e9f8 <cmetrohash64_2@@Base+0x5a8>
   2ef28:	push	{r4, r5, r6, r7, r8, lr}
   2ef2c:	mov	r5, r0
   2ef30:	ldr	r6, [r0]
   2ef34:	mov	r7, r1
   2ef38:	mov	r8, r2
   2ef3c:	mov	r4, #0
   2ef40:	ldr	r3, [r5, #12]
   2ef44:	cmp	r4, r3
   2ef48:	bcc	2ef50 <fb_name_table_visit@@Base+0x2c>
   2ef4c:	pop	{r4, r5, r6, r7, r8, pc}
   2ef50:	ldr	r1, [r6, r4, lsl #2]
   2ef54:	cmp	r1, #0
   2ef58:	cmpne	r1, #2
   2ef5c:	beq	2ef68 <fb_name_table_visit@@Base+0x44>
   2ef60:	mov	r0, r8
   2ef64:	blx	r7
   2ef68:	add	r4, r4, #1
   2ef6c:	b	2ef40 <fb_name_table_visit@@Base+0x1c>
   2ef70:	push	{r4, lr}
   2ef74:	mov	r4, r0
   2ef78:	ldr	r0, [r0]
   2ef7c:	cmp	r0, #0
   2ef80:	beq	2ef88 <fb_name_table_visit@@Base+0x64>
   2ef84:	bl	14018 <free@plt>
   2ef88:	mov	r0, r4
   2ef8c:	mov	r2, #16
   2ef90:	mov	r1, #0
   2ef94:	pop	{r4, lr}
   2ef98:	b	140fc <memset@plt>
   2ef9c:	ldrh	r3, [r0, #8]
   2efa0:	cmp	r3, #5
   2efa4:	beq	2efc8 <fb_name_table_visit@@Base+0xa4>
   2efa8:	cmp	r3, #6
   2efac:	beq	2efe0 <fb_name_table_visit@@Base+0xbc>
   2efb0:	cmp	r3, #4
   2efb4:	ldreq	r2, [r0]
   2efb8:	ldreq	r3, [pc, #44]	; 2efec <fb_name_table_visit@@Base+0xc8>
   2efbc:	beq	2efd0 <fb_name_table_visit@@Base+0xac>
   2efc0:	mov	r0, #0
   2efc4:	bx	lr
   2efc8:	ldr	r2, [r0]
   2efcc:	ldr	r3, [pc, #28]	; 2eff0 <fb_name_table_visit@@Base+0xcc>
   2efd0:	ldr	r0, [pc, #28]	; 2eff4 <fb_name_table_visit@@Base+0xd0>
   2efd4:	eor	r3, r3, r2
   2efd8:	mul	r0, r0, r3
   2efdc:	bx	lr
   2efe0:	ldrb	r2, [r0]
   2efe4:	ldr	r3, [pc, #12]	; 2eff8 <fb_name_table_visit@@Base+0xd4>
   2efe8:	b	2efd0 <fb_name_table_visit@@Base+0xac>
   2efec:	svccs	0x00693b56
   2eff0:	svccs	0x00693b57
   2eff4:			; <UNDEFINED> instruction: 0x9e3779b1
   2eff8:	svccs	0x00693b54
   2effc:	ldrh	r2, [r0, #8]
   2f000:	ldrh	r3, [r1, #8]
   2f004:	cmp	r3, r2
   2f008:	bne	2f05c <fb_name_table_visit@@Base+0x138>
   2f00c:	cmp	r3, #5
   2f010:	push	{r4, r5, lr}
   2f014:	beq	2f028 <fb_name_table_visit@@Base+0x104>
   2f018:	cmp	r3, #6
   2f01c:	beq	2f044 <fb_name_table_visit@@Base+0x120>
   2f020:	cmp	r3, #4
   2f024:	bne	2f064 <fb_name_table_visit@@Base+0x140>
   2f028:	ldrd	r4, [r0]
   2f02c:	ldrd	r2, [r1]
   2f030:	cmp	r5, r3
   2f034:	cmpeq	r4, r2
   2f038:	moveq	r0, #1
   2f03c:	movne	r0, #0
   2f040:	pop	{r4, r5, pc}
   2f044:	ldrb	r0, [r0]
   2f048:	ldrb	r3, [r1]
   2f04c:	sub	r0, r0, r3
   2f050:	clz	r0, r0
   2f054:	lsr	r0, r0, #5
   2f058:	pop	{r4, r5, pc}
   2f05c:	mov	r0, #0
   2f060:	bx	lr
   2f064:	mov	r0, #0
   2f068:	pop	{r4, r5, pc}
   2f06c:	push	{r4, r5, r6, r7, r8, lr}
   2f070:	ldr	r8, [r0]
   2f074:	cmp	r8, #0
   2f078:	moveq	r5, r8
   2f07c:	beq	2f0a8 <fb_name_table_visit@@Base+0x184>
   2f080:	ldr	r6, [r0, #12]
   2f084:	mov	r0, r1
   2f088:	mov	r7, r1
   2f08c:	bl	2ef9c <fb_name_table_visit@@Base+0x78>
   2f090:	sub	r6, r6, #1
   2f094:	and	r3, r6, r0
   2f098:	add	r4, r0, #1
   2f09c:	ldr	r5, [r8, r3, lsl #2]
   2f0a0:	cmp	r5, #0
   2f0a4:	bne	2f0b0 <fb_name_table_visit@@Base+0x18c>
   2f0a8:	mov	r0, r5
   2f0ac:	pop	{r4, r5, r6, r7, r8, pc}
   2f0b0:	cmp	r5, #2
   2f0b4:	beq	2f0cc <fb_name_table_visit@@Base+0x1a8>
   2f0b8:	mov	r1, r5
   2f0bc:	mov	r0, r7
   2f0c0:	bl	2effc <fb_name_table_visit@@Base+0xd8>
   2f0c4:	cmp	r0, #0
   2f0c8:	bne	2f0a8 <fb_name_table_visit@@Base+0x184>
   2f0cc:	and	r3, r6, r4
   2f0d0:	add	r4, r4, #1
   2f0d4:	b	2f09c <fb_name_table_visit@@Base+0x178>
   2f0d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f0dc:	ldr	r7, [r0]
   2f0e0:	cmp	r7, #0
   2f0e4:	moveq	r6, r7
   2f0e8:	beq	2f14c <fb_name_table_visit@@Base+0x228>
   2f0ec:	ldr	r9, [r0, #12]
   2f0f0:	mov	r5, r0
   2f0f4:	mov	r0, r1
   2f0f8:	mov	r8, r1
   2f0fc:	bl	2ef9c <fb_name_table_visit@@Base+0x78>
   2f100:	sub	r9, r9, #1
   2f104:	and	r3, r9, r0
   2f108:	add	r4, r0, #1
   2f10c:	ldr	r6, [r7, r3, lsl #2]
   2f110:	add	sl, r7, r3, lsl #2
   2f114:	cmp	r6, #0
   2f118:	beq	2f14c <fb_name_table_visit@@Base+0x228>
   2f11c:	cmp	r6, #2
   2f120:	beq	2f154 <fb_name_table_visit@@Base+0x230>
   2f124:	mov	r1, r6
   2f128:	mov	r0, r8
   2f12c:	bl	2effc <fb_name_table_visit@@Base+0xd8>
   2f130:	cmp	r0, #0
   2f134:	beq	2f154 <fb_name_table_visit@@Base+0x230>
   2f138:	mov	r3, #2
   2f13c:	str	r3, [sl]
   2f140:	ldr	r3, [r5, #8]
   2f144:	sub	r3, r3, #1
   2f148:	str	r3, [r5, #8]
   2f14c:	mov	r0, r6
   2f150:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f154:	and	r3, r9, r4
   2f158:	add	r4, r4, #1
   2f15c:	b	2f10c <fb_name_table_visit@@Base+0x1e8>
   2f160:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f164:	subs	r7, r2, #0
   2f168:	bne	2f180 <fb_name_table_visit@@Base+0x25c>
   2f16c:	ldr	r3, [pc, #364]	; 2f2e0 <fb_name_table_visit@@Base+0x3bc>
   2f170:	ldr	r1, [pc, #364]	; 2f2e4 <fb_name_table_visit@@Base+0x3c0>
   2f174:	ldr	r0, [pc, #364]	; 2f2e8 <fb_name_table_visit@@Base+0x3c4>
   2f178:	mov	r2, #114	; 0x72
   2f17c:	bl	141a4 <__assert_fail@plt>
   2f180:	cmp	r7, #2
   2f184:	ldreq	r3, [pc, #340]	; 2f2e0 <fb_name_table_visit@@Base+0x3bc>
   2f188:	moveq	r2, #115	; 0x73
   2f18c:	ldreq	r1, [pc, #336]	; 2f2e4 <fb_name_table_visit@@Base+0x3c0>
   2f190:	ldreq	r0, [pc, #340]	; 2f2ec <fb_name_table_visit@@Base+0x3c8>
   2f194:	beq	2f17c <fb_name_table_visit@@Base+0x258>
   2f198:	cmp	r7, #1
   2f19c:	ldreq	r3, [pc, #316]	; 2f2e0 <fb_name_table_visit@@Base+0x3bc>
   2f1a0:	moveq	r2, #116	; 0x74
   2f1a4:	ldreq	r1, [pc, #312]	; 2f2e4 <fb_name_table_visit@@Base+0x3c0>
   2f1a8:	ldreq	r0, [pc, #320]	; 2f2f0 <fb_name_table_visit@@Base+0x3cc>
   2f1ac:	beq	2f17c <fb_name_table_visit@@Base+0x258>
   2f1b0:	ldr	r2, [r0, #12]
   2f1b4:	mov	sl, r3
   2f1b8:	mov	r3, #179	; 0xb3
   2f1bc:	mov	r9, r1
   2f1c0:	mul	r3, r3, r2
   2f1c4:	ldr	r1, [r0, #8]
   2f1c8:	mov	r6, r0
   2f1cc:	cmp	r1, r3, lsr #8
   2f1d0:	bcc	2f200 <fb_name_table_visit@@Base+0x2dc>
   2f1d4:	lsl	r1, r1, #1
   2f1d8:	bl	2f300 <fb_name_table_visit@@Base+0x3dc>
   2f1dc:	cmp	r0, #0
   2f1e0:	beq	2f200 <fb_name_table_visit@@Base+0x2dc>
   2f1e4:	ldr	r3, [pc, #264]	; 2f2f4 <fb_name_table_visit@@Base+0x3d0>
   2f1e8:	ldr	r2, [pc, #264]	; 2f2f8 <fb_name_table_visit@@Base+0x3d4>
   2f1ec:	ldr	r1, [pc, #264]	; 2f2fc <fb_name_table_visit@@Base+0x3d8>
   2f1f0:	ldr	r0, [r3]
   2f1f4:	bl	140e4 <fprintf@plt>
   2f1f8:	mov	r0, #1
   2f1fc:	bl	140c0 <exit@plt>
   2f200:	mov	r0, r9
   2f204:	bl	2ef9c <fb_name_table_visit@@Base+0x78>
   2f208:	sub	r3, sl, #2
   2f20c:	cmp	r3, #1
   2f210:	ldr	r8, [r6, #12]
   2f214:	ldrls	r3, [r6, #8]
   2f218:	sub	r8, r8, #1
   2f21c:	addls	r3, r3, #1
   2f220:	ldr	fp, [r6]
   2f224:	movhi	r3, #0
   2f228:	strls	r3, [r6, #8]
   2f22c:	and	r1, r8, r0
   2f230:	add	r4, r0, #1
   2f234:	bls	2f268 <fb_name_table_visit@@Base+0x344>
   2f238:	ldr	r5, [fp, r1, lsl #2]
   2f23c:	add	r2, fp, r1, lsl #2
   2f240:	cmp	r5, #0
   2f244:	bne	2f28c <fb_name_table_visit@@Base+0x368>
   2f248:	cmp	r3, #0
   2f24c:	moveq	r3, r2
   2f250:	ldr	r2, [r6, #8]
   2f254:	add	r2, r2, #1
   2f258:	str	r2, [r6, #8]
   2f25c:	b	2f284 <fb_name_table_visit@@Base+0x360>
   2f260:	and	r1, r8, r4
   2f264:	add	r4, r4, #1
   2f268:	ldr	r5, [fp, r1, lsl #2]
   2f26c:	add	r3, fp, r1, lsl #2
   2f270:	cmp	r5, #0
   2f274:	cmpne	r5, #2
   2f278:	movne	r5, #1
   2f27c:	moveq	r5, #0
   2f280:	bne	2f260 <fb_name_table_visit@@Base+0x33c>
   2f284:	str	r7, [r3]
   2f288:	b	2f2d4 <fb_name_table_visit@@Base+0x3b0>
   2f28c:	cmp	r5, #2
   2f290:	bne	2f2a8 <fb_name_table_visit@@Base+0x384>
   2f294:	cmp	r3, #0
   2f298:	moveq	r3, r2
   2f29c:	and	r1, r8, r4
   2f2a0:	add	r4, r4, #1
   2f2a4:	b	2f238 <fb_name_table_visit@@Base+0x314>
   2f2a8:	mov	r1, r5
   2f2ac:	mov	r0, r9
   2f2b0:	str	r2, [sp, #4]
   2f2b4:	str	r3, [sp]
   2f2b8:	bl	2effc <fb_name_table_visit@@Base+0xd8>
   2f2bc:	ldr	r3, [sp]
   2f2c0:	ldr	r2, [sp, #4]
   2f2c4:	cmp	r0, #0
   2f2c8:	beq	2f29c <fb_name_table_visit@@Base+0x378>
   2f2cc:	cmp	sl, #0
   2f2d0:	streq	r7, [r2]
   2f2d4:	mov	r0, r5
   2f2d8:	add	sp, sp, #12
   2f2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2e0:	strdeq	fp, [r4], -r8
   2f2e4:	andeq	r7, r4, r0, lsr pc
   2f2e8:	andeq	r7, r4, r0, lsl #31
   2f2ec:	muleq	r4, r7, pc	; <UNPREDICTABLE>
   2f2f0:	andeq	r7, r4, lr, lsr #31
   2f2f4:	strheq	ip, [r5], -r0
   2f2f8:	andeq	r7, r4, r3, asr #31
   2f2fc:	strdeq	r7, [r4], -r6
   2f300:	ldr	r3, [r0, #8]
   2f304:	push	{r4, r5, r6, r7, lr}
   2f308:	cmp	r1, r3
   2f30c:	ldr	r7, [r0]
   2f310:	sub	sp, sp, #20
   2f314:	mov	r4, r0
   2f318:	movcc	r1, r3
   2f31c:	mov	r6, #4
   2f320:	mov	r2, #179	; 0xb3
   2f324:	mul	r3, r2, r6
   2f328:	cmp	r1, r3, lsr #8
   2f32c:	bhi	2f3a8 <fb_name_table_visit@@Base+0x484>
   2f330:	mov	r1, #4
   2f334:	mov	r0, r6
   2f338:	bl	13fe8 <calloc@plt>
   2f33c:	cmp	r0, #0
   2f340:	str	r0, [sp]
   2f344:	mvneq	r0, #0
   2f348:	beq	2f3a0 <fb_name_table_visit@@Base+0x47c>
   2f34c:	str	r6, [sp, #12]
   2f350:	mov	r6, #3
   2f354:	mov	r5, #0
   2f358:	str	r5, [sp, #4]
   2f35c:	str	r5, [sp, #8]
   2f360:	ldr	r3, [r4, #12]
   2f364:	cmp	r5, r3
   2f368:	bcc	2f3b0 <fb_name_table_visit@@Base+0x48c>
   2f36c:	mov	r0, r4
   2f370:	bl	2ef70 <fb_name_table_visit@@Base+0x4c>
   2f374:	mov	r2, sp
   2f378:	add	ip, sp, #16
   2f37c:	mov	r3, r2
   2f380:	add	r4, r4, #8
   2f384:	ldm	r3!, {r0, r1}
   2f388:	cmp	r3, ip
   2f38c:	str	r0, [r4, #-8]
   2f390:	str	r1, [r4, #-4]
   2f394:	mov	r2, r3
   2f398:	bne	2f37c <fb_name_table_visit@@Base+0x458>
   2f39c:	mov	r0, #0
   2f3a0:	add	sp, sp, #20
   2f3a4:	pop	{r4, r5, r6, r7, pc}
   2f3a8:	lsl	r6, r6, #1
   2f3ac:	b	2f324 <fb_name_table_visit@@Base+0x400>
   2f3b0:	ldr	r2, [r7, r5, lsl #2]
   2f3b4:	cmp	r2, #0
   2f3b8:	cmpne	r2, #2
   2f3bc:	beq	2f3d0 <fb_name_table_visit@@Base+0x4ac>
   2f3c0:	mov	r3, r6
   2f3c4:	mov	r1, r2
   2f3c8:	mov	r0, sp
   2f3cc:	bl	2f160 <fb_name_table_visit@@Base+0x23c>
   2f3d0:	add	r5, r5, #1
   2f3d4:	b	2f360 <fb_name_table_visit@@Base+0x43c>

0002f3d8 <fb_value_set_clear@@Base>:
   2f3d8:	b	2ef70 <fb_name_table_visit@@Base+0x4c>

0002f3dc <fb_value_set_destroy@@Base>:
   2f3dc:	cmp	r1, #0
   2f3e0:	push	{r4, lr}
   2f3e4:	mov	r4, r0
   2f3e8:	beq	2f3f0 <fb_value_set_destroy@@Base+0x14>
   2f3ec:	bl	2ef28 <fb_name_table_visit@@Base+0x4>
   2f3f0:	mov	r0, r4
   2f3f4:	pop	{r4, lr}
   2f3f8:	b	2ef70 <fb_name_table_visit@@Base+0x4c>

0002f3fc <fb_value_set_init@@Base>:
   2f3fc:	push	{r4, r5, r6, lr}
   2f400:	mov	r2, #179	; 0xb3
   2f404:	mov	r5, r0
   2f408:	mov	r4, #4
   2f40c:	mul	r3, r2, r4
   2f410:	cmp	r1, r3, lsr #8
   2f414:	bhi	2f444 <fb_value_set_init@@Base+0x48>
   2f418:	mov	r1, #4
   2f41c:	mov	r0, r4
   2f420:	bl	13fe8 <calloc@plt>
   2f424:	cmp	r0, #0
   2f428:	str	r0, [r5]
   2f42c:	movne	r0, #0
   2f430:	strne	r0, [r5, #4]
   2f434:	strne	r4, [r5, #12]
   2f438:	strne	r0, [r5, #8]
   2f43c:	mvneq	r0, #0
   2f440:	pop	{r4, r5, r6, pc}
   2f444:	lsl	r4, r4, #1
   2f448:	b	2f40c <fb_value_set_init@@Base+0x10>

0002f44c <fb_value_set_resize@@Base>:
   2f44c:	b	2f300 <fb_name_table_visit@@Base+0x3dc>

0002f450 <fb_value_set_insert@@Base>:
   2f450:	mov	r2, r3
   2f454:	ldr	r3, [sp]
   2f458:	b	2f160 <fb_name_table_visit@@Base+0x23c>

0002f45c <fb_value_set_insert_item@@Base>:
   2f45c:	mov	r3, r2
   2f460:	mov	r2, r1
   2f464:	b	2f160 <fb_name_table_visit@@Base+0x23c>

0002f468 <fb_value_set_find@@Base>:
   2f468:	b	2f06c <fb_name_table_visit@@Base+0x148>

0002f46c <fb_value_set_find_item@@Base>:
   2f46c:	b	2f06c <fb_name_table_visit@@Base+0x148>

0002f470 <fb_value_set_remove@@Base>:
   2f470:	b	2f0d8 <fb_name_table_visit@@Base+0x1b4>

0002f474 <fb_value_set_remove_item@@Base>:
   2f474:	b	2f0d8 <fb_name_table_visit@@Base+0x1b4>

0002f478 <fb_value_set_visit@@Base>:
   2f478:	b	2ef28 <fb_name_table_visit@@Base+0x4>
   2f47c:	subs	r2, r1, #1
   2f480:	bxeq	lr
   2f484:	bcc	2f65c <fb_value_set_visit@@Base+0x1e4>
   2f488:	cmp	r0, r1
   2f48c:	bls	2f640 <fb_value_set_visit@@Base+0x1c8>
   2f490:	tst	r1, r2
   2f494:	beq	2f64c <fb_value_set_visit@@Base+0x1d4>
   2f498:	clz	r3, r0
   2f49c:	clz	r2, r1
   2f4a0:	sub	r3, r2, r3
   2f4a4:	rsbs	r3, r3, #31
   2f4a8:	addne	r3, r3, r3, lsl #1
   2f4ac:	mov	r2, #0
   2f4b0:	addne	pc, pc, r3, lsl #2
   2f4b4:	nop			; (mov r0, r0)
   2f4b8:	cmp	r0, r1, lsl #31
   2f4bc:	adc	r2, r2, r2
   2f4c0:	subcs	r0, r0, r1, lsl #31
   2f4c4:	cmp	r0, r1, lsl #30
   2f4c8:	adc	r2, r2, r2
   2f4cc:	subcs	r0, r0, r1, lsl #30
   2f4d0:	cmp	r0, r1, lsl #29
   2f4d4:	adc	r2, r2, r2
   2f4d8:	subcs	r0, r0, r1, lsl #29
   2f4dc:	cmp	r0, r1, lsl #28
   2f4e0:	adc	r2, r2, r2
   2f4e4:	subcs	r0, r0, r1, lsl #28
   2f4e8:	cmp	r0, r1, lsl #27
   2f4ec:	adc	r2, r2, r2
   2f4f0:	subcs	r0, r0, r1, lsl #27
   2f4f4:	cmp	r0, r1, lsl #26
   2f4f8:	adc	r2, r2, r2
   2f4fc:	subcs	r0, r0, r1, lsl #26
   2f500:	cmp	r0, r1, lsl #25
   2f504:	adc	r2, r2, r2
   2f508:	subcs	r0, r0, r1, lsl #25
   2f50c:	cmp	r0, r1, lsl #24
   2f510:	adc	r2, r2, r2
   2f514:	subcs	r0, r0, r1, lsl #24
   2f518:	cmp	r0, r1, lsl #23
   2f51c:	adc	r2, r2, r2
   2f520:	subcs	r0, r0, r1, lsl #23
   2f524:	cmp	r0, r1, lsl #22
   2f528:	adc	r2, r2, r2
   2f52c:	subcs	r0, r0, r1, lsl #22
   2f530:	cmp	r0, r1, lsl #21
   2f534:	adc	r2, r2, r2
   2f538:	subcs	r0, r0, r1, lsl #21
   2f53c:	cmp	r0, r1, lsl #20
   2f540:	adc	r2, r2, r2
   2f544:	subcs	r0, r0, r1, lsl #20
   2f548:	cmp	r0, r1, lsl #19
   2f54c:	adc	r2, r2, r2
   2f550:	subcs	r0, r0, r1, lsl #19
   2f554:	cmp	r0, r1, lsl #18
   2f558:	adc	r2, r2, r2
   2f55c:	subcs	r0, r0, r1, lsl #18
   2f560:	cmp	r0, r1, lsl #17
   2f564:	adc	r2, r2, r2
   2f568:	subcs	r0, r0, r1, lsl #17
   2f56c:	cmp	r0, r1, lsl #16
   2f570:	adc	r2, r2, r2
   2f574:	subcs	r0, r0, r1, lsl #16
   2f578:	cmp	r0, r1, lsl #15
   2f57c:	adc	r2, r2, r2
   2f580:	subcs	r0, r0, r1, lsl #15
   2f584:	cmp	r0, r1, lsl #14
   2f588:	adc	r2, r2, r2
   2f58c:	subcs	r0, r0, r1, lsl #14
   2f590:	cmp	r0, r1, lsl #13
   2f594:	adc	r2, r2, r2
   2f598:	subcs	r0, r0, r1, lsl #13
   2f59c:	cmp	r0, r1, lsl #12
   2f5a0:	adc	r2, r2, r2
   2f5a4:	subcs	r0, r0, r1, lsl #12
   2f5a8:	cmp	r0, r1, lsl #11
   2f5ac:	adc	r2, r2, r2
   2f5b0:	subcs	r0, r0, r1, lsl #11
   2f5b4:	cmp	r0, r1, lsl #10
   2f5b8:	adc	r2, r2, r2
   2f5bc:	subcs	r0, r0, r1, lsl #10
   2f5c0:	cmp	r0, r1, lsl #9
   2f5c4:	adc	r2, r2, r2
   2f5c8:	subcs	r0, r0, r1, lsl #9
   2f5cc:	cmp	r0, r1, lsl #8
   2f5d0:	adc	r2, r2, r2
   2f5d4:	subcs	r0, r0, r1, lsl #8
   2f5d8:	cmp	r0, r1, lsl #7
   2f5dc:	adc	r2, r2, r2
   2f5e0:	subcs	r0, r0, r1, lsl #7
   2f5e4:	cmp	r0, r1, lsl #6
   2f5e8:	adc	r2, r2, r2
   2f5ec:	subcs	r0, r0, r1, lsl #6
   2f5f0:	cmp	r0, r1, lsl #5
   2f5f4:	adc	r2, r2, r2
   2f5f8:	subcs	r0, r0, r1, lsl #5
   2f5fc:	cmp	r0, r1, lsl #4
   2f600:	adc	r2, r2, r2
   2f604:	subcs	r0, r0, r1, lsl #4
   2f608:	cmp	r0, r1, lsl #3
   2f60c:	adc	r2, r2, r2
   2f610:	subcs	r0, r0, r1, lsl #3
   2f614:	cmp	r0, r1, lsl #2
   2f618:	adc	r2, r2, r2
   2f61c:	subcs	r0, r0, r1, lsl #2
   2f620:	cmp	r0, r1, lsl #1
   2f624:	adc	r2, r2, r2
   2f628:	subcs	r0, r0, r1, lsl #1
   2f62c:	cmp	r0, r1
   2f630:	adc	r2, r2, r2
   2f634:	subcs	r0, r0, r1
   2f638:	mov	r0, r2
   2f63c:	bx	lr
   2f640:	moveq	r0, #1
   2f644:	movne	r0, #0
   2f648:	bx	lr
   2f64c:	clz	r2, r1
   2f650:	rsb	r2, r2, #31
   2f654:	lsr	r0, r0, r2
   2f658:	bx	lr
   2f65c:	cmp	r0, #0
   2f660:	mvnne	r0, #0
   2f664:	b	2fce8 <fb_value_set_visit@@Base+0x870>
   2f668:	cmp	r1, #0
   2f66c:	beq	2f65c <fb_value_set_visit@@Base+0x1e4>
   2f670:	push	{r0, r1, lr}
   2f674:	bl	2f47c <fb_value_set_visit@@Base+0x4>
   2f678:	pop	{r1, r2, lr}
   2f67c:	mul	r3, r2, r0
   2f680:	sub	r1, r1, r3
   2f684:	bx	lr
   2f688:	subs	r3, r2, #32
   2f68c:	rsb	ip, r2, #32
   2f690:	lslmi	r1, r1, r2
   2f694:	lslpl	r1, r0, r3
   2f698:	orrmi	r1, r1, r0, lsr ip
   2f69c:	lsl	r0, r0, r2
   2f6a0:	bx	lr
   2f6a4:	eor	r1, r1, #-2147483648	; 0x80000000
   2f6a8:	b	2f6b0 <fb_value_set_visit@@Base+0x238>
   2f6ac:	eor	r3, r3, #-2147483648	; 0x80000000
   2f6b0:	push	{r4, r5, lr}
   2f6b4:	lsl	r4, r1, #1
   2f6b8:	lsl	r5, r3, #1
   2f6bc:	teq	r4, r5
   2f6c0:	teqeq	r0, r2
   2f6c4:	orrsne	ip, r4, r0
   2f6c8:	orrsne	ip, r5, r2
   2f6cc:	mvnsne	ip, r4, asr #21
   2f6d0:	mvnsne	ip, r5, asr #21
   2f6d4:	beq	2f8c0 <fb_value_set_visit@@Base+0x448>
   2f6d8:	lsr	r4, r4, #21
   2f6dc:	rsbs	r5, r4, r5, lsr #21
   2f6e0:	rsblt	r5, r5, #0
   2f6e4:	ble	2f704 <fb_value_set_visit@@Base+0x28c>
   2f6e8:	add	r4, r4, r5
   2f6ec:	eor	r2, r0, r2
   2f6f0:	eor	r3, r1, r3
   2f6f4:	eor	r0, r2, r0
   2f6f8:	eor	r1, r3, r1
   2f6fc:	eor	r2, r0, r2
   2f700:	eor	r3, r1, r3
   2f704:	cmp	r5, #54	; 0x36
   2f708:	pophi	{r4, r5, pc}
   2f70c:	tst	r1, #-2147483648	; 0x80000000
   2f710:	lsl	r1, r1, #12
   2f714:	mov	ip, #1048576	; 0x100000
   2f718:	orr	r1, ip, r1, lsr #12
   2f71c:	beq	2f728 <fb_value_set_visit@@Base+0x2b0>
   2f720:	rsbs	r0, r0, #0
   2f724:	rsc	r1, r1, #0
   2f728:	tst	r3, #-2147483648	; 0x80000000
   2f72c:	lsl	r3, r3, #12
   2f730:	orr	r3, ip, r3, lsr #12
   2f734:	beq	2f740 <fb_value_set_visit@@Base+0x2c8>
   2f738:	rsbs	r2, r2, #0
   2f73c:	rsc	r3, r3, #0
   2f740:	teq	r4, r5
   2f744:	beq	2f8a8 <fb_value_set_visit@@Base+0x430>
   2f748:	sub	r4, r4, #1
   2f74c:	rsbs	lr, r5, #32
   2f750:	blt	2f76c <fb_value_set_visit@@Base+0x2f4>
   2f754:	lsl	ip, r2, lr
   2f758:	adds	r0, r0, r2, lsr r5
   2f75c:	adc	r1, r1, #0
   2f760:	adds	r0, r0, r3, lsl lr
   2f764:	adcs	r1, r1, r3, asr r5
   2f768:	b	2f788 <fb_value_set_visit@@Base+0x310>
   2f76c:	sub	r5, r5, #32
   2f770:	add	lr, lr, #32
   2f774:	cmp	r2, #1
   2f778:	lsl	ip, r3, lr
   2f77c:	orrcs	ip, ip, #2
   2f780:	adds	r0, r0, r3, asr r5
   2f784:	adcs	r1, r1, r3, asr #31
   2f788:	and	r5, r1, #-2147483648	; 0x80000000
   2f78c:	bpl	2f79c <fb_value_set_visit@@Base+0x324>
   2f790:	rsbs	ip, ip, #0
   2f794:	rscs	r0, r0, #0
   2f798:	rsc	r1, r1, #0
   2f79c:	cmp	r1, #1048576	; 0x100000
   2f7a0:	bcc	2f7e0 <fb_value_set_visit@@Base+0x368>
   2f7a4:	cmp	r1, #2097152	; 0x200000
   2f7a8:	bcc	2f7c8 <fb_value_set_visit@@Base+0x350>
   2f7ac:	lsrs	r1, r1, #1
   2f7b0:	rrxs	r0, r0
   2f7b4:	rrx	ip, ip
   2f7b8:	add	r4, r4, #1
   2f7bc:	lsl	r2, r4, #21
   2f7c0:	cmn	r2, #4194304	; 0x400000
   2f7c4:	bcs	2f920 <fb_value_set_visit@@Base+0x4a8>
   2f7c8:	cmp	ip, #-2147483648	; 0x80000000
   2f7cc:	lsrseq	ip, r0, #1
   2f7d0:	adcs	r0, r0, #0
   2f7d4:	adc	r1, r1, r4, lsl #20
   2f7d8:	orr	r1, r1, r5
   2f7dc:	pop	{r4, r5, pc}
   2f7e0:	lsls	ip, ip, #1
   2f7e4:	adcs	r0, r0, r0
   2f7e8:	adc	r1, r1, r1
   2f7ec:	tst	r1, #1048576	; 0x100000
   2f7f0:	sub	r4, r4, #1
   2f7f4:	bne	2f7c8 <fb_value_set_visit@@Base+0x350>
   2f7f8:	teq	r1, #0
   2f7fc:	moveq	r1, r0
   2f800:	moveq	r0, #0
   2f804:	clz	r3, r1
   2f808:	addeq	r3, r3, #32
   2f80c:	sub	r3, r3, #11
   2f810:	subs	r2, r3, #32
   2f814:	bge	2f838 <fb_value_set_visit@@Base+0x3c0>
   2f818:	adds	r2, r2, #12
   2f81c:	ble	2f834 <fb_value_set_visit@@Base+0x3bc>
   2f820:	add	ip, r2, #20
   2f824:	rsb	r2, r2, #12
   2f828:	lsl	r0, r1, ip
   2f82c:	lsr	r1, r1, r2
   2f830:	b	2f848 <fb_value_set_visit@@Base+0x3d0>
   2f834:	add	r2, r2, #20
   2f838:	rsble	ip, r2, #32
   2f83c:	lsl	r1, r1, r2
   2f840:	orrle	r1, r1, r0, lsr ip
   2f844:	lslle	r0, r0, r2
   2f848:	subs	r4, r4, r3
   2f84c:	addge	r1, r1, r4, lsl #20
   2f850:	orrge	r1, r1, r5
   2f854:	popge	{r4, r5, pc}
   2f858:	mvn	r4, r4
   2f85c:	subs	r4, r4, #31
   2f860:	bge	2f89c <fb_value_set_visit@@Base+0x424>
   2f864:	adds	r4, r4, #12
   2f868:	bgt	2f884 <fb_value_set_visit@@Base+0x40c>
   2f86c:	add	r4, r4, #20
   2f870:	rsb	r2, r4, #32
   2f874:	lsr	r0, r0, r4
   2f878:	orr	r0, r0, r1, lsl r2
   2f87c:	orr	r1, r5, r1, lsr r4
   2f880:	pop	{r4, r5, pc}
   2f884:	rsb	r4, r4, #12
   2f888:	rsb	r2, r4, #32
   2f88c:	lsr	r0, r0, r2
   2f890:	orr	r0, r0, r1, lsl r4
   2f894:	mov	r1, r5
   2f898:	pop	{r4, r5, pc}
   2f89c:	lsr	r0, r1, r4
   2f8a0:	mov	r1, r5
   2f8a4:	pop	{r4, r5, pc}
   2f8a8:	teq	r4, #0
   2f8ac:	eor	r3, r3, #1048576	; 0x100000
   2f8b0:	eoreq	r1, r1, #1048576	; 0x100000
   2f8b4:	addeq	r4, r4, #1
   2f8b8:	subne	r5, r5, #1
   2f8bc:	b	2f748 <fb_value_set_visit@@Base+0x2d0>
   2f8c0:	mvns	ip, r4, asr #21
   2f8c4:	mvnsne	ip, r5, asr #21
   2f8c8:	beq	2f930 <fb_value_set_visit@@Base+0x4b8>
   2f8cc:	teq	r4, r5
   2f8d0:	teqeq	r0, r2
   2f8d4:	beq	2f8e8 <fb_value_set_visit@@Base+0x470>
   2f8d8:	orrs	ip, r4, r0
   2f8dc:	moveq	r1, r3
   2f8e0:	moveq	r0, r2
   2f8e4:	pop	{r4, r5, pc}
   2f8e8:	teq	r1, r3
   2f8ec:	movne	r1, #0
   2f8f0:	movne	r0, #0
   2f8f4:	popne	{r4, r5, pc}
   2f8f8:	lsrs	ip, r4, #21
   2f8fc:	bne	2f910 <fb_value_set_visit@@Base+0x498>
   2f900:	lsls	r0, r0, #1
   2f904:	adcs	r1, r1, r1
   2f908:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2f90c:	pop	{r4, r5, pc}
   2f910:	adds	r4, r4, #4194304	; 0x400000
   2f914:	addcc	r1, r1, #1048576	; 0x100000
   2f918:	popcc	{r4, r5, pc}
   2f91c:	and	r5, r1, #-2147483648	; 0x80000000
   2f920:	orr	r1, r5, #2130706432	; 0x7f000000
   2f924:	orr	r1, r1, #15728640	; 0xf00000
   2f928:	mov	r0, #0
   2f92c:	pop	{r4, r5, pc}
   2f930:	mvns	ip, r4, asr #21
   2f934:	movne	r1, r3
   2f938:	movne	r0, r2
   2f93c:	mvnseq	ip, r5, asr #21
   2f940:	movne	r3, r1
   2f944:	movne	r2, r0
   2f948:	orrs	r4, r0, r1, lsl #12
   2f94c:	orrseq	r5, r2, r3, lsl #12
   2f950:	teqeq	r1, r3
   2f954:	orrne	r1, r1, #524288	; 0x80000
   2f958:	pop	{r4, r5, pc}
   2f95c:	teq	r0, #0
   2f960:	moveq	r1, #0
   2f964:	bxeq	lr
   2f968:	push	{r4, r5, lr}
   2f96c:	mov	r4, #1024	; 0x400
   2f970:	add	r4, r4, #50	; 0x32
   2f974:	mov	r5, #0
   2f978:	mov	r1, #0
   2f97c:	b	2f7f8 <fb_value_set_visit@@Base+0x380>
   2f980:	teq	r0, #0
   2f984:	moveq	r1, #0
   2f988:	bxeq	lr
   2f98c:	push	{r4, r5, lr}
   2f990:	mov	r4, #1024	; 0x400
   2f994:	add	r4, r4, #50	; 0x32
   2f998:	ands	r5, r0, #-2147483648	; 0x80000000
   2f99c:	rsbmi	r0, r0, #0
   2f9a0:	mov	r1, #0
   2f9a4:	b	2f7f8 <fb_value_set_visit@@Base+0x380>
   2f9a8:	lsls	r2, r0, #1
   2f9ac:	asr	r1, r2, #3
   2f9b0:	rrx	r1, r1
   2f9b4:	lsl	r0, r2, #28
   2f9b8:	andsne	r3, r2, #-16777216	; 0xff000000
   2f9bc:	teqne	r3, #-16777216	; 0xff000000
   2f9c0:	eorne	r1, r1, #939524096	; 0x38000000
   2f9c4:	bxne	lr
   2f9c8:	teq	r2, #0
   2f9cc:	teqne	r3, #-16777216	; 0xff000000
   2f9d0:	bxeq	lr
   2f9d4:	push	{r4, r5, lr}
   2f9d8:	mov	r4, #896	; 0x380
   2f9dc:	and	r5, r1, #-2147483648	; 0x80000000
   2f9e0:	bic	r1, r1, #-2147483648	; 0x80000000
   2f9e4:	b	2f7f8 <fb_value_set_visit@@Base+0x380>
   2f9e8:	orrs	r2, r0, r1
   2f9ec:	bxeq	lr
   2f9f0:	push	{r4, r5, lr}
   2f9f4:	mov	r5, #0
   2f9f8:	b	2fa18 <fb_value_set_visit@@Base+0x5a0>
   2f9fc:	orrs	r2, r0, r1
   2fa00:	bxeq	lr
   2fa04:	push	{r4, r5, lr}
   2fa08:	ands	r5, r1, #-2147483648	; 0x80000000
   2fa0c:	bpl	2fa18 <fb_value_set_visit@@Base+0x5a0>
   2fa10:	rsbs	r0, r0, #0
   2fa14:	rsc	r1, r1, #0
   2fa18:	mov	r4, #1024	; 0x400
   2fa1c:	add	r4, r4, #50	; 0x32
   2fa20:	lsrs	ip, r1, #22
   2fa24:	beq	2f79c <fb_value_set_visit@@Base+0x324>
   2fa28:	mov	r2, #3
   2fa2c:	lsrs	ip, ip, #3
   2fa30:	addne	r2, r2, #3
   2fa34:	lsrs	ip, ip, #3
   2fa38:	addne	r2, r2, #3
   2fa3c:	add	r2, r2, ip, lsr #3
   2fa40:	rsb	r3, r2, #32
   2fa44:	lsl	ip, r0, r3
   2fa48:	lsr	r0, r0, r2
   2fa4c:	orr	r0, r0, r1, lsl r3
   2fa50:	lsr	r1, r1, r2
   2fa54:	add	r4, r4, r2
   2fa58:	b	2f79c <fb_value_set_visit@@Base+0x324>
   2fa5c:	eor	r0, r0, #-2147483648	; 0x80000000
   2fa60:	b	2fa68 <fb_value_set_visit@@Base+0x5f0>
   2fa64:	eor	r1, r1, #-2147483648	; 0x80000000
   2fa68:	lsls	r2, r0, #1
   2fa6c:	lslsne	r3, r1, #1
   2fa70:	teqne	r2, r3
   2fa74:	mvnsne	ip, r2, asr #24
   2fa78:	mvnsne	ip, r3, asr #24
   2fa7c:	beq	2fb74 <fb_value_set_visit@@Base+0x6fc>
   2fa80:	lsr	r2, r2, #24
   2fa84:	rsbs	r3, r2, r3, lsr #24
   2fa88:	addgt	r2, r2, r3
   2fa8c:	eorgt	r1, r0, r1
   2fa90:	eorgt	r0, r1, r0
   2fa94:	eorgt	r1, r0, r1
   2fa98:	rsblt	r3, r3, #0
   2fa9c:	cmp	r3, #25
   2faa0:	bxhi	lr
   2faa4:	tst	r0, #-2147483648	; 0x80000000
   2faa8:	orr	r0, r0, #8388608	; 0x800000
   2faac:	bic	r0, r0, #-16777216	; 0xff000000
   2fab0:	rsbne	r0, r0, #0
   2fab4:	tst	r1, #-2147483648	; 0x80000000
   2fab8:	orr	r1, r1, #8388608	; 0x800000
   2fabc:	bic	r1, r1, #-16777216	; 0xff000000
   2fac0:	rsbne	r1, r1, #0
   2fac4:	teq	r2, r3
   2fac8:	beq	2fb5c <fb_value_set_visit@@Base+0x6e4>
   2facc:	sub	r2, r2, #1
   2fad0:	adds	r0, r0, r1, asr r3
   2fad4:	rsb	r3, r3, #32
   2fad8:	lsl	r1, r1, r3
   2fadc:	and	r3, r0, #-2147483648	; 0x80000000
   2fae0:	bpl	2faec <fb_value_set_visit@@Base+0x674>
   2fae4:	rsbs	r1, r1, #0
   2fae8:	rsc	r0, r0, #0
   2faec:	cmp	r0, #8388608	; 0x800000
   2faf0:	bcc	2fb24 <fb_value_set_visit@@Base+0x6ac>
   2faf4:	cmp	r0, #16777216	; 0x1000000
   2faf8:	bcc	2fb10 <fb_value_set_visit@@Base+0x698>
   2fafc:	lsrs	r0, r0, #1
   2fb00:	rrx	r1, r1
   2fb04:	add	r2, r2, #1
   2fb08:	cmp	r2, #254	; 0xfe
   2fb0c:	bcs	2fbc8 <fb_value_set_visit@@Base+0x750>
   2fb10:	cmp	r1, #-2147483648	; 0x80000000
   2fb14:	adc	r0, r0, r2, lsl #23
   2fb18:	biceq	r0, r0, #1
   2fb1c:	orr	r0, r0, r3
   2fb20:	bx	lr
   2fb24:	lsls	r1, r1, #1
   2fb28:	adc	r0, r0, r0
   2fb2c:	tst	r0, #8388608	; 0x800000
   2fb30:	sub	r2, r2, #1
   2fb34:	bne	2fb10 <fb_value_set_visit@@Base+0x698>
   2fb38:	clz	ip, r0
   2fb3c:	sub	ip, ip, #8
   2fb40:	subs	r2, r2, ip
   2fb44:	lsl	r0, r0, ip
   2fb48:	addge	r0, r0, r2, lsl #23
   2fb4c:	rsblt	r2, r2, #0
   2fb50:	orrge	r0, r0, r3
   2fb54:	orrlt	r0, r3, r0, lsr r2
   2fb58:	bx	lr
   2fb5c:	teq	r2, #0
   2fb60:	eor	r1, r1, #8388608	; 0x800000
   2fb64:	eoreq	r0, r0, #8388608	; 0x800000
   2fb68:	addeq	r2, r2, #1
   2fb6c:	subne	r3, r3, #1
   2fb70:	b	2facc <fb_value_set_visit@@Base+0x654>
   2fb74:	lsl	r3, r1, #1
   2fb78:	mvns	ip, r2, asr #24
   2fb7c:	mvnsne	ip, r3, asr #24
   2fb80:	beq	2fbd4 <fb_value_set_visit@@Base+0x75c>
   2fb84:	teq	r2, r3
   2fb88:	beq	2fb98 <fb_value_set_visit@@Base+0x720>
   2fb8c:	teq	r2, #0
   2fb90:	moveq	r0, r1
   2fb94:	bx	lr
   2fb98:	teq	r0, r1
   2fb9c:	movne	r0, #0
   2fba0:	bxne	lr
   2fba4:	tst	r2, #-16777216	; 0xff000000
   2fba8:	bne	2fbb8 <fb_value_set_visit@@Base+0x740>
   2fbac:	lsls	r0, r0, #1
   2fbb0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   2fbb4:	bx	lr
   2fbb8:	adds	r2, r2, #33554432	; 0x2000000
   2fbbc:	addcc	r0, r0, #8388608	; 0x800000
   2fbc0:	bxcc	lr
   2fbc4:	and	r3, r0, #-2147483648	; 0x80000000
   2fbc8:	orr	r0, r3, #2130706432	; 0x7f000000
   2fbcc:	orr	r0, r0, #8388608	; 0x800000
   2fbd0:	bx	lr
   2fbd4:	mvns	r2, r2, asr #24
   2fbd8:	movne	r0, r1
   2fbdc:	mvnseq	r3, r3, asr #24
   2fbe0:	movne	r1, r0
   2fbe4:	lsls	r2, r0, #9
   2fbe8:	lslseq	r3, r1, #9
   2fbec:	teqeq	r0, r1
   2fbf0:	orrne	r0, r0, #4194304	; 0x400000
   2fbf4:	bx	lr
   2fbf8:	mov	r3, #0
   2fbfc:	b	2fc08 <fb_value_set_visit@@Base+0x790>
   2fc00:	ands	r3, r0, #-2147483648	; 0x80000000
   2fc04:	rsbmi	r0, r0, #0
   2fc08:	movs	ip, r0
   2fc0c:	bxeq	lr
   2fc10:	orr	r3, r3, #1258291200	; 0x4b000000
   2fc14:	mov	r1, r0
   2fc18:	mov	r0, #0
   2fc1c:	b	2fc60 <fb_value_set_visit@@Base+0x7e8>
   2fc20:	orrs	r2, r0, r1
   2fc24:	bxeq	lr
   2fc28:	mov	r3, #0
   2fc2c:	b	2fc48 <fb_value_set_visit@@Base+0x7d0>
   2fc30:	orrs	r2, r0, r1
   2fc34:	bxeq	lr
   2fc38:	ands	r3, r1, #-2147483648	; 0x80000000
   2fc3c:	bpl	2fc48 <fb_value_set_visit@@Base+0x7d0>
   2fc40:	rsbs	r0, r0, #0
   2fc44:	rsc	r1, r1, #0
   2fc48:	movs	ip, r1
   2fc4c:	moveq	ip, r0
   2fc50:	moveq	r1, r0
   2fc54:	moveq	r0, #0
   2fc58:	orr	r3, r3, #1526726656	; 0x5b000000
   2fc5c:	subeq	r3, r3, #268435456	; 0x10000000
   2fc60:	sub	r3, r3, #8388608	; 0x800000
   2fc64:	clz	r2, ip
   2fc68:	subs	r2, r2, #8
   2fc6c:	sub	r3, r3, r2, lsl #23
   2fc70:	blt	2fc90 <fb_value_set_visit@@Base+0x818>
   2fc74:	add	r3, r3, r1, lsl r2
   2fc78:	lsl	ip, r0, r2
   2fc7c:	rsb	r2, r2, #32
   2fc80:	cmp	ip, #-2147483648	; 0x80000000
   2fc84:	adc	r0, r3, r0, lsr r2
   2fc88:	biceq	r0, r0, #1
   2fc8c:	bx	lr
   2fc90:	add	r2, r2, #32
   2fc94:	lsl	ip, r1, r2
   2fc98:	rsb	r2, r2, #32
   2fc9c:	orrs	r0, r0, ip, lsl #1
   2fca0:	adc	r0, r3, r1, lsr r2
   2fca4:	biceq	r0, r0, ip, lsr #31
   2fca8:	bx	lr
   2fcac:	cmp	r3, #0
   2fcb0:	cmpeq	r2, #0
   2fcb4:	bne	2fccc <fb_value_set_visit@@Base+0x854>
   2fcb8:	cmp	r1, #0
   2fcbc:	cmpeq	r0, #0
   2fcc0:	mvnne	r1, #0
   2fcc4:	mvnne	r0, #0
   2fcc8:	b	2fce8 <fb_value_set_visit@@Base+0x870>
   2fccc:	sub	sp, sp, #8
   2fcd0:	push	{sp, lr}
   2fcd4:	bl	2fde0 <fb_value_set_visit@@Base+0x968>
   2fcd8:	ldr	lr, [sp, #4]
   2fcdc:	add	sp, sp, #8
   2fce0:	pop	{r2, r3}
   2fce4:	bx	lr
   2fce8:	push	{r1, lr}
   2fcec:	mov	r0, #8
   2fcf0:	bl	13ff4 <raise@plt>
   2fcf4:	pop	{r1, pc}
   2fcf8:	vmov	s15, r0
   2fcfc:	vcmpe.f32	s15, #0.0
   2fd00:	vmrs	APSR_nzcv, fpscr
   2fd04:	bmi	2fd0c <fb_value_set_visit@@Base+0x894>
   2fd08:	b	2fd50 <fb_value_set_visit@@Base+0x8d8>
   2fd0c:	push	{r4, lr}
   2fd10:	eor	r0, r0, #-2147483648	; 0x80000000
   2fd14:	bl	2fd50 <fb_value_set_visit@@Base+0x8d8>
   2fd18:	rsbs	r0, r0, #0
   2fd1c:	rsc	r1, r1, #0
   2fd20:	pop	{r4, pc}
   2fd24:	vmov	d7, r0, r1
   2fd28:	vcmpe.f64	d7, #0.0
   2fd2c:	vmrs	APSR_nzcv, fpscr
   2fd30:	bmi	2fd38 <fb_value_set_visit@@Base+0x8c0>
   2fd34:	b	2fd98 <fb_value_set_visit@@Base+0x920>
   2fd38:	push	{r4, lr}
   2fd3c:	eor	r1, r1, #-2147483648	; 0x80000000
   2fd40:	bl	2fd98 <fb_value_set_visit@@Base+0x920>
   2fd44:	rsbs	r0, r0, #0
   2fd48:	rsc	r1, r1, #0
   2fd4c:	pop	{r4, pc}
   2fd50:	vmov	s15, r0
   2fd54:	vldr	d6, [pc, #44]	; 2fd88 <fb_value_set_visit@@Base+0x910>
   2fd58:	vldr	d5, [pc, #48]	; 2fd90 <fb_value_set_visit@@Base+0x918>
   2fd5c:	mov	r0, #0
   2fd60:	vcvt.f64.f32	d7, s15
   2fd64:	vmul.f64	d6, d7, d6
   2fd68:	vcvt.u32.f64	s12, d6
   2fd6c:	vcvt.f64.u32	d4, s12
   2fd70:	vmov	r1, s12
   2fd74:	vmls.f64	d7, d4, d5
   2fd78:	vcvt.u32.f64	s14, d7
   2fd7c:	vmov	r3, s14
   2fd80:	orr	r0, r0, r3
   2fd84:	bx	lr
   2fd88:	andeq	r0, r0, r0
   2fd8c:	ldclcc	0, cr0, [r0]
   2fd90:	andeq	r0, r0, r0
   2fd94:	mvnsmi	r0, r0
   2fd98:	vmov	d7, r0, r1
   2fd9c:	vldr	d6, [pc, #44]	; 2fdd0 <fb_value_set_visit@@Base+0x958>
   2fda0:	vldr	d5, [pc, #48]	; 2fdd8 <fb_value_set_visit@@Base+0x960>
   2fda4:	mov	r0, #0
   2fda8:	vmul.f64	d6, d7, d6
   2fdac:	vcvt.u32.f64	s12, d6
   2fdb0:	vcvt.f64.u32	d4, s12
   2fdb4:	vmov	r1, s12
   2fdb8:	vmls.f64	d7, d4, d5
   2fdbc:	vcvt.u32.f64	s14, d7
   2fdc0:	vmov	r3, s14
   2fdc4:	orr	r0, r0, r3
   2fdc8:	bx	lr
   2fdcc:	nop			; (mov r0, r0)
   2fdd0:	andeq	r0, r0, r0
   2fdd4:	ldclcc	0, cr0, [r0]
   2fdd8:	andeq	r0, r0, r0
   2fddc:	mvnsmi	r0, r0
   2fde0:	cmp	r1, r3
   2fde4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fde8:	cmpeq	r0, r2
   2fdec:	mov	r4, r0
   2fdf0:	mov	r5, r1
   2fdf4:	ldr	r9, [sp, #28]
   2fdf8:	movcc	r0, #0
   2fdfc:	movcc	r1, #0
   2fe00:	bcc	2fef8 <fb_value_set_visit@@Base+0xa80>
   2fe04:	cmp	r3, #0
   2fe08:	clzeq	ip, r2
   2fe0c:	clzne	ip, r3
   2fe10:	addeq	ip, ip, #32
   2fe14:	cmp	r5, #0
   2fe18:	clzeq	r1, r4
   2fe1c:	addeq	r1, r1, #32
   2fe20:	clzne	r1, r5
   2fe24:	sub	ip, ip, r1
   2fe28:	sub	lr, ip, #32
   2fe2c:	lsl	r7, r3, ip
   2fe30:	rsb	r8, ip, #32
   2fe34:	orr	r7, r7, r2, lsl lr
   2fe38:	orr	r7, r7, r2, lsr r8
   2fe3c:	lsl	r6, r2, ip
   2fe40:	cmp	r5, r7
   2fe44:	cmpeq	r4, r6
   2fe48:	movcc	r0, #0
   2fe4c:	movcc	r1, #0
   2fe50:	bcc	2fe6c <fb_value_set_visit@@Base+0x9f4>
   2fe54:	mov	r3, #1
   2fe58:	subs	r4, r4, r6
   2fe5c:	lsl	r1, r3, lr
   2fe60:	lsl	r0, r3, ip
   2fe64:	orr	r1, r1, r3, lsr r8
   2fe68:	sbc	r5, r5, r7
   2fe6c:	cmp	ip, #0
   2fe70:	beq	2fef8 <fb_value_set_visit@@Base+0xa80>
   2fe74:	lsrs	r3, r7, #1
   2fe78:	rrx	r2, r6
   2fe7c:	mov	r6, ip
   2fe80:	b	2fea4 <fb_value_set_visit@@Base+0xa2c>
   2fe84:	subs	r4, r4, r2
   2fe88:	sbc	r5, r5, r3
   2fe8c:	adds	r4, r4, r4
   2fe90:	adc	r5, r5, r5
   2fe94:	adds	r4, r4, #1
   2fe98:	adc	r5, r5, #0
   2fe9c:	subs	r6, r6, #1
   2fea0:	beq	2fec0 <fb_value_set_visit@@Base+0xa48>
   2fea4:	cmp	r5, r3
   2fea8:	cmpeq	r4, r2
   2feac:	bcs	2fe84 <fb_value_set_visit@@Base+0xa0c>
   2feb0:	adds	r4, r4, r4
   2feb4:	adc	r5, r5, r5
   2feb8:	subs	r6, r6, #1
   2febc:	bne	2fea4 <fb_value_set_visit@@Base+0xa2c>
   2fec0:	lsr	r6, r4, ip
   2fec4:	lsr	r7, r5, ip
   2fec8:	orr	r6, r6, r5, lsl r8
   2fecc:	adds	r2, r0, r4
   2fed0:	orr	r6, r6, r5, lsr lr
   2fed4:	adc	r3, r1, r5
   2fed8:	lsl	r1, r7, ip
   2fedc:	orr	r1, r1, r6, lsl lr
   2fee0:	lsl	r0, r6, ip
   2fee4:	orr	r1, r1, r6, lsr r8
   2fee8:	subs	r0, r2, r0
   2feec:	mov	r4, r6
   2fef0:	mov	r5, r7
   2fef4:	sbc	r1, r3, r1
   2fef8:	cmp	r9, #0
   2fefc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   2ff00:	strd	r4, [r9]
   2ff04:	pop	{r4, r5, r6, r7, r8, r9, pc}

0002ff08 <__libc_csu_init@@Base>:
   2ff08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ff0c:	mov	r7, r0
   2ff10:	ldr	r6, [pc, #72]	; 2ff60 <__libc_csu_init@@Base+0x58>
   2ff14:	ldr	r5, [pc, #72]	; 2ff64 <__libc_csu_init@@Base+0x5c>
   2ff18:	add	r6, pc, r6
   2ff1c:	add	r5, pc, r5
   2ff20:	sub	r6, r6, r5
   2ff24:	mov	r8, r1
   2ff28:	mov	r9, r2
   2ff2c:	bl	13fc8 <calloc@plt-0x20>
   2ff30:	asrs	r6, r6, #2
   2ff34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ff38:	mov	r4, #0
   2ff3c:	add	r4, r4, #1
   2ff40:	ldr	r3, [r5], #4
   2ff44:	mov	r2, r9
   2ff48:	mov	r1, r8
   2ff4c:	mov	r0, r7
   2ff50:	blx	r3
   2ff54:	cmp	r6, r4
   2ff58:	bne	2ff3c <__libc_csu_init@@Base+0x34>
   2ff5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ff60:	strdeq	fp, [r2], -r0
   2ff64:	andeq	fp, r2, r8, ror #31

0002ff68 <__libc_csu_fini@@Base>:
   2ff68:	bx	lr

Disassembly of section .fini:

0002ff6c <.fini>:
   2ff6c:	push	{r3, lr}
   2ff70:	pop	{r3, pc}
