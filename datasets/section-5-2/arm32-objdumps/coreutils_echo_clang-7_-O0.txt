
../repos/coreutils/src/echo:     file format elf32-littlearm


Disassembly of section .init:

00010c38 <.init>:
   10c38:	push	{r3, lr}
   10c3c:	bl	10eb0 <__assert_fail@plt+0x48>
   10c40:	pop	{r3, pc}

Disassembly of section .plt:

00010c44 <calloc@plt-0x14>:
   10c44:	push	{lr}		; (str lr, [sp, #-4]!)
   10c48:	ldr	lr, [pc, #4]	; 10c54 <calloc@plt-0x4>
   10c4c:	add	lr, pc, lr
   10c50:	ldr	pc, [lr, #8]!
   10c54:	andeq	sl, r1, ip, lsr #7

00010c58 <calloc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #106496	; 0x1a000
   10c60:	ldr	pc, [ip, #940]!	; 0x3ac

00010c64 <fputs_unlocked@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #106496	; 0x1a000
   10c6c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c70 <raise@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #106496	; 0x1a000
   10c78:	ldr	pc, [ip, #924]!	; 0x39c

00010c7c <strcmp@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #106496	; 0x1a000
   10c84:	ldr	pc, [ip, #916]!	; 0x394

00010c88 <printf@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #106496	; 0x1a000
   10c90:	ldr	pc, [ip, #908]!	; 0x38c

00010c94 <fflush@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #106496	; 0x1a000
   10c9c:	ldr	pc, [ip, #900]!	; 0x384

00010ca0 <free@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #106496	; 0x1a000
   10ca8:	ldr	pc, [ip, #892]!	; 0x37c

00010cac <_exit@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #106496	; 0x1a000
   10cb4:	ldr	pc, [ip, #884]!	; 0x374

00010cb8 <memcpy@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #106496	; 0x1a000
   10cc0:	ldr	pc, [ip, #876]!	; 0x36c

00010cc4 <mbsinit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #106496	; 0x1a000
   10ccc:	ldr	pc, [ip, #868]!	; 0x364

00010cd0 <memcmp@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #106496	; 0x1a000
   10cd8:	ldr	pc, [ip, #860]!	; 0x35c

00010cdc <realloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #106496	; 0x1a000
   10ce4:	ldr	pc, [ip, #852]!	; 0x354

00010ce8 <textdomain@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #106496	; 0x1a000
   10cf0:	ldr	pc, [ip, #844]!	; 0x34c

00010cf4 <iswprint@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #106496	; 0x1a000
   10cfc:	ldr	pc, [ip, #836]!	; 0x344

00010d00 <lseek64@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #106496	; 0x1a000
   10d08:	ldr	pc, [ip, #828]!	; 0x33c

00010d0c <__ctype_get_mb_cur_max@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #106496	; 0x1a000
   10d14:	ldr	pc, [ip, #820]!	; 0x334

00010d18 <__fpending@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #106496	; 0x1a000
   10d20:	ldr	pc, [ip, #812]!	; 0x32c

00010d24 <ferror_unlocked@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #106496	; 0x1a000
   10d2c:	ldr	pc, [ip, #804]!	; 0x324

00010d30 <mbrtowc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #106496	; 0x1a000
   10d38:	ldr	pc, [ip, #796]!	; 0x31c

00010d3c <error@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #106496	; 0x1a000
   10d44:	ldr	pc, [ip, #788]!	; 0x314

00010d48 <getenv@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #106496	; 0x1a000
   10d50:	ldr	pc, [ip, #780]!	; 0x30c

00010d54 <malloc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #106496	; 0x1a000
   10d5c:	ldr	pc, [ip, #772]!	; 0x304

00010d60 <__libc_start_main@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #106496	; 0x1a000
   10d68:	ldr	pc, [ip, #764]!	; 0x2fc

00010d6c <__freading@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #106496	; 0x1a000
   10d74:	ldr	pc, [ip, #756]!	; 0x2f4

00010d78 <__gmon_start__@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #106496	; 0x1a000
   10d80:	ldr	pc, [ip, #748]!	; 0x2ec

00010d84 <__ctype_b_loc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #106496	; 0x1a000
   10d8c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d90 <exit@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #106496	; 0x1a000
   10d98:	ldr	pc, [ip, #732]!	; 0x2dc

00010d9c <gettext@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #106496	; 0x1a000
   10da4:	ldr	pc, [ip, #724]!	; 0x2d4

00010da8 <strlen@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #106496	; 0x1a000
   10db0:	ldr	pc, [ip, #716]!	; 0x2cc

00010db4 <fprintf@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #106496	; 0x1a000
   10dbc:	ldr	pc, [ip, #708]!	; 0x2c4

00010dc0 <__errno_location@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #106496	; 0x1a000
   10dc8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dcc <__cxa_atexit@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #106496	; 0x1a000
   10dd4:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd8 <memset@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #106496	; 0x1a000
   10de0:	ldr	pc, [ip, #684]!	; 0x2ac

00010de4 <fileno@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #106496	; 0x1a000
   10dec:	ldr	pc, [ip, #676]!	; 0x2a4

00010df0 <fclose@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #106496	; 0x1a000
   10df8:	ldr	pc, [ip, #668]!	; 0x29c

00010dfc <fseeko64@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #106496	; 0x1a000
   10e04:	ldr	pc, [ip, #660]!	; 0x294

00010e08 <setlocale@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #106496	; 0x1a000
   10e10:	ldr	pc, [ip, #652]!	; 0x28c

00010e14 <strrchr@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #106496	; 0x1a000
   10e1c:	ldr	pc, [ip, #644]!	; 0x284

00010e20 <nl_langinfo@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #106496	; 0x1a000
   10e28:	ldr	pc, [ip, #636]!	; 0x27c

00010e2c <bindtextdomain@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #106496	; 0x1a000
   10e34:	ldr	pc, [ip, #628]!	; 0x274

00010e38 <fputs@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #106496	; 0x1a000
   10e40:	ldr	pc, [ip, #620]!	; 0x26c

00010e44 <strncmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #106496	; 0x1a000
   10e4c:	ldr	pc, [ip, #612]!	; 0x264

00010e50 <abort@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #106496	; 0x1a000
   10e58:	ldr	pc, [ip, #604]!	; 0x25c

00010e5c <putchar_unlocked@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #106496	; 0x1a000
   10e64:	ldr	pc, [ip, #596]!	; 0x254

00010e68 <__assert_fail@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #106496	; 0x1a000
   10e70:	ldr	pc, [ip, #588]!	; 0x24c

Disassembly of section .text:

00010e74 <.text>:
   10e74:	mov	fp, #0
   10e78:	mov	lr, #0
   10e7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e80:	mov	r2, sp
   10e84:	push	{r2}		; (str r2, [sp, #-4]!)
   10e88:	push	{r0}		; (str r0, [sp, #-4]!)
   10e8c:	ldr	ip, [pc, #16]	; 10ea4 <__assert_fail@plt+0x3c>
   10e90:	push	{ip}		; (str ip, [sp, #-4]!)
   10e94:	ldr	r0, [pc, #12]	; 10ea8 <__assert_fail@plt+0x40>
   10e98:	ldr	r3, [pc, #12]	; 10eac <__assert_fail@plt+0x44>
   10e9c:	bl	10d60 <__libc_start_main@plt>
   10ea0:	bl	10e50 <abort@plt>
   10ea4:	andeq	sl, r1, r4, lsl #8
   10ea8:	ldrdeq	r1, [r1], -r4
   10eac:	andeq	sl, r1, r4, lsr #7
   10eb0:	ldr	r3, [pc, #20]	; 10ecc <__assert_fail@plt+0x64>
   10eb4:	ldr	r2, [pc, #20]	; 10ed0 <__assert_fail@plt+0x68>
   10eb8:	add	r3, pc, r3
   10ebc:	ldr	r2, [r3, r2]
   10ec0:	cmp	r2, #0
   10ec4:	bxeq	lr
   10ec8:	b	10d78 <__gmon_start__@plt>
   10ecc:	andeq	sl, r1, r0, asr #2
   10ed0:	andeq	r0, r0, r0, asr #1
   10ed4:	ldr	r0, [pc, #24]	; 10ef4 <__assert_fail@plt+0x8c>
   10ed8:	ldr	r3, [pc, #24]	; 10ef8 <__assert_fail@plt+0x90>
   10edc:	cmp	r3, r0
   10ee0:	bxeq	lr
   10ee4:	ldr	r3, [pc, #16]	; 10efc <__assert_fail@plt+0x94>
   10ee8:	cmp	r3, #0
   10eec:	bxeq	lr
   10ef0:	bx	r3
   10ef4:	andeq	fp, r2, r4, lsl r1
   10ef8:	andeq	fp, r2, r4, lsl r1
   10efc:	andeq	r0, r0, r0
   10f00:	ldr	r0, [pc, #36]	; 10f2c <__assert_fail@plt+0xc4>
   10f04:	ldr	r1, [pc, #36]	; 10f30 <__assert_fail@plt+0xc8>
   10f08:	sub	r1, r1, r0
   10f0c:	asr	r1, r1, #2
   10f10:	add	r1, r1, r1, lsr #31
   10f14:	asrs	r1, r1, #1
   10f18:	bxeq	lr
   10f1c:	ldr	r3, [pc, #16]	; 10f34 <__assert_fail@plt+0xcc>
   10f20:	cmp	r3, #0
   10f24:	bxeq	lr
   10f28:	bx	r3
   10f2c:	andeq	fp, r2, r4, lsl r1
   10f30:	andeq	fp, r2, r4, lsl r1
   10f34:	andeq	r0, r0, r0
   10f38:	push	{r4, lr}
   10f3c:	ldr	r4, [pc, #24]	; 10f5c <__assert_fail@plt+0xf4>
   10f40:	ldrb	r3, [r4]
   10f44:	cmp	r3, #0
   10f48:	popne	{r4, pc}
   10f4c:	bl	10ed4 <__assert_fail@plt+0x6c>
   10f50:	mov	r3, #1
   10f54:	strb	r3, [r4]
   10f58:	pop	{r4, pc}
   10f5c:	andeq	fp, r2, r8, lsr #2
   10f60:	b	10f00 <__assert_fail@plt+0x98>
   10f64:	push	{fp, lr}
   10f68:	mov	fp, sp
   10f6c:	sub	sp, sp, #48	; 0x30
   10f70:	str	r0, [fp, #-4]
   10f74:	ldr	r0, [fp, #-4]
   10f78:	cmp	r0, #0
   10f7c:	bne	10f84 <__assert_fail@plt+0x11c>
   10f80:	b	10fa4 <__assert_fail@plt+0x13c>
   10f84:	movw	r0, #42028	; 0xa42c
   10f88:	movt	r0, #1
   10f8c:	movw	r1, #42051	; 0xa443
   10f90:	movt	r1, #1
   10f94:	movw	r2, #40	; 0x28
   10f98:	movw	r3, #42062	; 0xa44e
   10f9c:	movt	r3, #1
   10fa0:	bl	10e68 <__assert_fail@plt>
   10fa4:	movw	r0, #42078	; 0xa45e
   10fa8:	movt	r0, #1
   10fac:	bl	10d9c <gettext@plt>
   10fb0:	movw	lr, #45364	; 0xb134
   10fb4:	movt	lr, #2
   10fb8:	ldr	r1, [lr]
   10fbc:	ldr	r2, [lr]
   10fc0:	bl	10c88 <printf@plt>
   10fc4:	movw	r1, #42141	; 0xa49d
   10fc8:	movt	r1, #1
   10fcc:	str	r0, [fp, #-8]
   10fd0:	mov	r0, r1
   10fd4:	bl	10d9c <gettext@plt>
   10fd8:	movw	r1, #45348	; 0xb124
   10fdc:	movt	r1, #2
   10fe0:	ldr	r1, [r1]
   10fe4:	bl	10c64 <fputs_unlocked@plt>
   10fe8:	movw	r1, #42234	; 0xa4fa
   10fec:	movt	r1, #1
   10ff0:	str	r0, [fp, #-12]
   10ff4:	mov	r0, r1
   10ff8:	bl	10d9c <gettext@plt>
   10ffc:	movw	r1, #45348	; 0xb124
   11000:	movt	r1, #2
   11004:	ldr	r1, [r1]
   11008:	bl	10c64 <fputs_unlocked@plt>
   1100c:	movw	r1, #42366	; 0xa57e
   11010:	movt	r1, #1
   11014:	str	r0, [fp, #-16]
   11018:	mov	r0, r1
   1101c:	bl	10d9c <gettext@plt>
   11020:	movw	r1, #45348	; 0xb124
   11024:	movt	r1, #2
   11028:	ldr	r1, [r1]
   1102c:	bl	10c64 <fputs_unlocked@plt>
   11030:	movw	r1, #42411	; 0xa5ab
   11034:	movt	r1, #1
   11038:	str	r0, [fp, #-20]	; 0xffffffec
   1103c:	mov	r0, r1
   11040:	bl	10d9c <gettext@plt>
   11044:	movw	r1, #45348	; 0xb124
   11048:	movt	r1, #2
   1104c:	ldr	r1, [r1]
   11050:	bl	10c64 <fputs_unlocked@plt>
   11054:	movw	r1, #42465	; 0xa5e1
   11058:	movt	r1, #1
   1105c:	str	r0, [sp, #24]
   11060:	mov	r0, r1
   11064:	bl	10d9c <gettext@plt>
   11068:	movw	r1, #45348	; 0xb124
   1106c:	movt	r1, #2
   11070:	ldr	r1, [r1]
   11074:	bl	10c64 <fputs_unlocked@plt>
   11078:	movw	r1, #42528	; 0xa620
   1107c:	movt	r1, #1
   11080:	str	r0, [sp, #20]
   11084:	mov	r0, r1
   11088:	bl	10d9c <gettext@plt>
   1108c:	movw	r1, #45348	; 0xb124
   11090:	movt	r1, #2
   11094:	ldr	r1, [r1]
   11098:	bl	10c64 <fputs_unlocked@plt>
   1109c:	movw	r1, #42757	; 0xa705
   110a0:	movt	r1, #1
   110a4:	str	r0, [sp, #16]
   110a8:	mov	r0, r1
   110ac:	bl	10d9c <gettext@plt>
   110b0:	movw	r1, #45348	; 0xb124
   110b4:	movt	r1, #2
   110b8:	ldr	r1, [r1]
   110bc:	bl	10c64 <fputs_unlocked@plt>
   110c0:	movw	r1, #42867	; 0xa773
   110c4:	movt	r1, #1
   110c8:	str	r0, [sp, #12]
   110cc:	mov	r0, r1
   110d0:	bl	10d9c <gettext@plt>
   110d4:	movw	r1, #43058	; 0xa832
   110d8:	movt	r1, #1
   110dc:	bl	10c88 <printf@plt>
   110e0:	movw	r1, #43063	; 0xa837
   110e4:	movt	r1, #1
   110e8:	str	r0, [sp, #8]
   110ec:	mov	r0, r1
   110f0:	bl	10d9c <gettext@plt>
   110f4:	movw	r1, #45348	; 0xb124
   110f8:	movt	r1, #2
   110fc:	ldr	r1, [r1]
   11100:	bl	10c64 <fputs_unlocked@plt>
   11104:	movw	r1, #43058	; 0xa832
   11108:	movt	r1, #1
   1110c:	str	r0, [sp, #4]
   11110:	mov	r0, r1
   11114:	bl	11120 <__assert_fail@plt+0x2b8>
   11118:	ldr	r0, [fp, #-4]
   1111c:	bl	10d90 <exit@plt>
   11120:	push	{fp, lr}
   11124:	mov	fp, sp
   11128:	sub	sp, sp, #96	; 0x60
   1112c:	add	r1, sp, #36	; 0x24
   11130:	movw	r2, #43576	; 0xaa38
   11134:	movt	r2, #1
   11138:	str	r0, [fp, #-4]
   1113c:	mov	r0, r1
   11140:	str	r1, [sp, #20]
   11144:	mov	r1, r2
   11148:	movw	r2, #56	; 0x38
   1114c:	bl	10cb8 <memcpy@plt>
   11150:	ldr	r0, [fp, #-4]
   11154:	str	r0, [sp, #32]
   11158:	ldr	r0, [sp, #20]
   1115c:	str	r0, [sp, #28]
   11160:	ldr	r0, [sp, #28]
   11164:	ldr	r0, [r0]
   11168:	movw	r1, #0
   1116c:	cmp	r0, r1
   11170:	movw	r0, #0
   11174:	str	r0, [sp, #16]
   11178:	beq	111a4 <__assert_fail@plt+0x33c>
   1117c:	ldr	r0, [fp, #-4]
   11180:	ldr	r1, [sp, #28]
   11184:	ldr	r1, [r1]
   11188:	bl	10c7c <strcmp@plt>
   1118c:	cmp	r0, #0
   11190:	movw	r0, #0
   11194:	moveq	r0, #1
   11198:	mvn	r1, #0
   1119c:	eor	r0, r0, r1
   111a0:	str	r0, [sp, #16]
   111a4:	ldr	r0, [sp, #16]
   111a8:	tst	r0, #1
   111ac:	beq	111c0 <__assert_fail@plt+0x358>
   111b0:	ldr	r0, [sp, #28]
   111b4:	add	r0, r0, #8
   111b8:	str	r0, [sp, #28]
   111bc:	b	11160 <__assert_fail@plt+0x2f8>
   111c0:	ldr	r0, [sp, #28]
   111c4:	ldr	r0, [r0, #4]
   111c8:	movw	r1, #0
   111cc:	cmp	r0, r1
   111d0:	beq	111e0 <__assert_fail@plt+0x378>
   111d4:	ldr	r0, [sp, #28]
   111d8:	ldr	r0, [r0, #4]
   111dc:	str	r0, [sp, #32]
   111e0:	movw	r0, #43358	; 0xa95e
   111e4:	movt	r0, #1
   111e8:	bl	10d9c <gettext@plt>
   111ec:	movw	r1, #43228	; 0xa8dc
   111f0:	movt	r1, #1
   111f4:	movw	r2, #43381	; 0xa975
   111f8:	movt	r2, #1
   111fc:	bl	10c88 <printf@plt>
   11200:	movw	r1, #5
   11204:	str	r0, [sp, #12]
   11208:	mov	r0, r1
   1120c:	movw	r1, #0
   11210:	bl	10e08 <setlocale@plt>
   11214:	str	r0, [sp, #24]
   11218:	ldr	r0, [sp, #24]
   1121c:	movw	r1, #0
   11220:	cmp	r0, r1
   11224:	beq	11264 <__assert_fail@plt+0x3fc>
   11228:	ldr	r0, [sp, #24]
   1122c:	movw	r1, #43421	; 0xa99d
   11230:	movt	r1, #1
   11234:	movw	r2, #3
   11238:	bl	10e44 <strncmp@plt>
   1123c:	cmp	r0, #0
   11240:	beq	11264 <__assert_fail@plt+0x3fc>
   11244:	movw	r0, #43425	; 0xa9a1
   11248:	movt	r0, #1
   1124c:	bl	10d9c <gettext@plt>
   11250:	movw	lr, #45348	; 0xb124
   11254:	movt	lr, #2
   11258:	ldr	r1, [lr]
   1125c:	bl	10c64 <fputs_unlocked@plt>
   11260:	str	r0, [sp, #8]
   11264:	movw	r0, #43496	; 0xa9e8
   11268:	movt	r0, #1
   1126c:	bl	10d9c <gettext@plt>
   11270:	ldr	r2, [fp, #-4]
   11274:	movw	r1, #43381	; 0xa975
   11278:	movt	r1, #1
   1127c:	bl	10c88 <printf@plt>
   11280:	movw	r1, #43523	; 0xaa03
   11284:	movt	r1, #1
   11288:	str	r0, [sp, #4]
   1128c:	mov	r0, r1
   11290:	bl	10d9c <gettext@plt>
   11294:	ldr	r1, [sp, #32]
   11298:	ldr	r2, [sp, #32]
   1129c:	ldr	lr, [fp, #-4]
   112a0:	cmp	r2, lr
   112a4:	movw	r2, #0
   112a8:	moveq	r2, #1
   112ac:	tst	r2, #1
   112b0:	movw	r2, #42527	; 0xa61f
   112b4:	movt	r2, #1
   112b8:	movw	lr, #43291	; 0xa91b
   112bc:	movt	lr, #1
   112c0:	movne	r2, lr
   112c4:	bl	10c88 <printf@plt>
   112c8:	str	r0, [sp]
   112cc:	mov	sp, fp
   112d0:	pop	{fp, pc}
   112d4:	push	{fp, lr}
   112d8:	mov	fp, sp
   112dc:	sub	sp, sp, #136	; 0x88
   112e0:	movw	r2, #0
   112e4:	str	r2, [fp, #-4]
   112e8:	str	r0, [fp, #-8]
   112ec:	str	r1, [fp, #-12]
   112f0:	movw	r0, #1
   112f4:	strb	r0, [fp, #-13]
   112f8:	movw	r0, #43168	; 0xa8a0
   112fc:	movt	r0, #1
   11300:	bl	10d48 <getenv@plt>
   11304:	movw	r1, #0
   11308:	cmp	r0, r1
   1130c:	movw	r0, #0
   11310:	movne	r0, #1
   11314:	mvn	r1, #0
   11318:	eor	r0, r0, r1
   1131c:	eor	r0, r0, r1
   11320:	and	r0, r0, #1
   11324:	strb	r0, [fp, #-14]
   11328:	ldrb	r0, [fp, #-14]
   1132c:	tst	r0, #1
   11330:	movw	r0, #1
   11334:	str	r0, [fp, #-36]	; 0xffffffdc
   11338:	beq	11380 <__assert_fail@plt+0x518>
   1133c:	ldr	r0, [fp, #-8]
   11340:	movw	r1, #1
   11344:	cmp	r1, r0
   11348:	movw	r0, #0
   1134c:	str	r0, [fp, #-40]	; 0xffffffd8
   11350:	bge	11378 <__assert_fail@plt+0x510>
   11354:	ldr	r0, [fp, #-12]
   11358:	ldr	r0, [r0, #4]
   1135c:	movw	r1, #43184	; 0xa8b0
   11360:	movt	r1, #1
   11364:	bl	10c7c <strcmp@plt>
   11368:	cmp	r0, #0
   1136c:	movw	r0, #0
   11370:	moveq	r0, #1
   11374:	str	r0, [fp, #-40]	; 0xffffffd8
   11378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1137c:	str	r0, [fp, #-36]	; 0xffffffdc
   11380:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11384:	and	r0, r0, #1
   11388:	strb	r0, [fp, #-15]
   1138c:	movw	r0, #0
   11390:	strb	r0, [fp, #-16]
   11394:	ldr	r0, [fp, #-12]
   11398:	ldr	r0, [r0]
   1139c:	bl	11dc0 <__assert_fail@plt+0xf58>
   113a0:	movw	r0, #6
   113a4:	movw	r1, #42527	; 0xa61f
   113a8:	movt	r1, #1
   113ac:	bl	10e08 <setlocale@plt>
   113b0:	movw	r1, #43232	; 0xa8e0
   113b4:	movt	r1, #1
   113b8:	str	r0, [fp, #-44]	; 0xffffffd4
   113bc:	mov	r0, r1
   113c0:	movw	r1, #43187	; 0xa8b3
   113c4:	movt	r1, #1
   113c8:	bl	10e2c <bindtextdomain@plt>
   113cc:	movw	r1, #43232	; 0xa8e0
   113d0:	movt	r1, #1
   113d4:	str	r0, [fp, #-48]	; 0xffffffd0
   113d8:	mov	r0, r1
   113dc:	bl	10ce8 <textdomain@plt>
   113e0:	movw	r1, #7328	; 0x1ca0
   113e4:	movt	r1, #1
   113e8:	str	r0, [fp, #-52]	; 0xffffffcc
   113ec:	mov	r0, r1
   113f0:	bl	1a408 <__assert_fail@plt+0x95a0>
   113f4:	ldrb	r1, [fp, #-15]
   113f8:	tst	r1, #1
   113fc:	str	r0, [fp, #-56]	; 0xffffffc8
   11400:	beq	114ac <__assert_fail@plt+0x644>
   11404:	ldr	r0, [fp, #-8]
   11408:	cmp	r0, #2
   1140c:	bne	114ac <__assert_fail@plt+0x644>
   11410:	ldr	r0, [fp, #-12]
   11414:	ldr	r0, [r0, #4]
   11418:	movw	r1, #43211	; 0xa8cb
   1141c:	movt	r1, #1
   11420:	bl	10c7c <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	11434 <__assert_fail@plt+0x5cc>
   1142c:	movw	r0, #0
   11430:	bl	10f64 <__assert_fail@plt+0xfc>
   11434:	ldr	r0, [fp, #-12]
   11438:	ldr	r0, [r0, #4]
   1143c:	movw	r1, #43218	; 0xa8d2
   11440:	movt	r1, #1
   11444:	bl	10c7c <strcmp@plt>
   11448:	cmp	r0, #0
   1144c:	bne	114a8 <__assert_fail@plt+0x640>
   11450:	movw	r0, #45348	; 0xb124
   11454:	movt	r0, #2
   11458:	ldr	r0, [r0]
   1145c:	movw	r1, #45260	; 0xb0cc
   11460:	movt	r1, #2
   11464:	ldr	r3, [r1]
   11468:	movw	r1, #43058	; 0xa832
   1146c:	movt	r1, #1
   11470:	movw	r2, #43228	; 0xa8dc
   11474:	movt	r2, #1
   11478:	movw	ip, #43242	; 0xa8ea
   1147c:	movt	ip, #1
   11480:	str	ip, [sp]
   11484:	movw	ip, #43252	; 0xa8f4
   11488:	movt	ip, #1
   1148c:	str	ip, [sp, #4]
   11490:	movw	ip, #0
   11494:	str	ip, [sp, #8]
   11498:	bl	14cd8 <__assert_fail@plt+0x3e70>
   1149c:	movw	r0, #0
   114a0:	str	r0, [fp, #-4]
   114a4:	b	11b28 <__assert_fail@plt+0xcc0>
   114a8:	b	114ac <__assert_fail@plt+0x644>
   114ac:	ldr	r0, [fp, #-8]
   114b0:	mvn	r1, #0
   114b4:	add	r0, r0, r1
   114b8:	str	r0, [fp, #-8]
   114bc:	ldr	r0, [fp, #-12]
   114c0:	add	r0, r0, #4
   114c4:	str	r0, [fp, #-12]
   114c8:	ldrb	r0, [fp, #-15]
   114cc:	tst	r0, #1
   114d0:	beq	11650 <__assert_fail@plt+0x7e8>
   114d4:	b	114d8 <__assert_fail@plt+0x670>
   114d8:	ldr	r0, [fp, #-8]
   114dc:	cmp	r0, #0
   114e0:	movw	r0, #0
   114e4:	str	r0, [fp, #-60]	; 0xffffffc4
   114e8:	ble	11508 <__assert_fail@plt+0x6a0>
   114ec:	ldr	r0, [fp, #-12]
   114f0:	ldr	r0, [r0]
   114f4:	ldrb	r0, [r0]
   114f8:	cmp	r0, #45	; 0x2d
   114fc:	movw	r0, #0
   11500:	moveq	r0, #1
   11504:	str	r0, [fp, #-60]	; 0xffffffc4
   11508:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1150c:	tst	r0, #1
   11510:	beq	1164c <__assert_fail@plt+0x7e4>
   11514:	ldr	r0, [fp, #-12]
   11518:	ldr	r0, [r0]
   1151c:	add	r0, r0, #1
   11520:	str	r0, [fp, #-20]	; 0xffffffec
   11524:	movw	r0, #0
   11528:	str	r0, [fp, #-24]	; 0xffffffe8
   1152c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11534:	add	r0, r0, r1
   11538:	ldrsb	r0, [r0]
   1153c:	cmp	r0, #0
   11540:	beq	115a0 <__assert_fail@plt+0x738>
   11544:	ldr	r0, [fp, #-20]	; 0xffffffec
   11548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1154c:	ldrb	r0, [r0, r1]
   11550:	mov	r1, r0
   11554:	cmp	r0, #69	; 0x45
   11558:	str	r1, [fp, #-64]	; 0xffffffc0
   1155c:	beq	11584 <__assert_fail@plt+0x71c>
   11560:	b	11564 <__assert_fail@plt+0x6fc>
   11564:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11568:	cmp	r0, #101	; 0x65
   1156c:	beq	11584 <__assert_fail@plt+0x71c>
   11570:	b	11574 <__assert_fail@plt+0x70c>
   11574:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11578:	cmp	r0, #110	; 0x6e
   1157c:	bne	11588 <__assert_fail@plt+0x720>
   11580:	b	11584 <__assert_fail@plt+0x71c>
   11584:	b	1158c <__assert_fail@plt+0x724>
   11588:	b	11654 <__assert_fail@plt+0x7ec>
   1158c:	b	11590 <__assert_fail@plt+0x728>
   11590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11594:	add	r0, r0, #1
   11598:	str	r0, [fp, #-24]	; 0xffffffe8
   1159c:	b	1152c <__assert_fail@plt+0x6c4>
   115a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115a4:	cmp	r0, #0
   115a8:	bne	115b0 <__assert_fail@plt+0x748>
   115ac:	b	11654 <__assert_fail@plt+0x7ec>
   115b0:	b	115b4 <__assert_fail@plt+0x74c>
   115b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   115b8:	ldrsb	r0, [r0]
   115bc:	cmp	r0, #0
   115c0:	beq	1162c <__assert_fail@plt+0x7c4>
   115c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   115c8:	add	r1, r0, #1
   115cc:	str	r1, [fp, #-20]	; 0xffffffec
   115d0:	ldrb	r0, [r0]
   115d4:	mov	r1, r0
   115d8:	cmp	r0, #69	; 0x45
   115dc:	str	r1, [sp, #68]	; 0x44
   115e0:	beq	11614 <__assert_fail@plt+0x7ac>
   115e4:	b	115e8 <__assert_fail@plt+0x780>
   115e8:	ldr	r0, [sp, #68]	; 0x44
   115ec:	cmp	r0, #101	; 0x65
   115f0:	beq	11608 <__assert_fail@plt+0x7a0>
   115f4:	b	115f8 <__assert_fail@plt+0x790>
   115f8:	ldr	r0, [sp, #68]	; 0x44
   115fc:	cmp	r0, #110	; 0x6e
   11600:	beq	11620 <__assert_fail@plt+0x7b8>
   11604:	b	11628 <__assert_fail@plt+0x7c0>
   11608:	movw	r0, #1
   1160c:	strb	r0, [fp, #-16]
   11610:	b	11628 <__assert_fail@plt+0x7c0>
   11614:	movw	r0, #0
   11618:	strb	r0, [fp, #-16]
   1161c:	b	11628 <__assert_fail@plt+0x7c0>
   11620:	movw	r0, #0
   11624:	strb	r0, [fp, #-13]
   11628:	b	115b4 <__assert_fail@plt+0x74c>
   1162c:	ldr	r0, [fp, #-8]
   11630:	mvn	r1, #0
   11634:	add	r0, r0, r1
   11638:	str	r0, [fp, #-8]
   1163c:	ldr	r0, [fp, #-12]
   11640:	add	r0, r0, #4
   11644:	str	r0, [fp, #-12]
   11648:	b	114d8 <__assert_fail@plt+0x670>
   1164c:	b	11650 <__assert_fail@plt+0x7e8>
   11650:	b	11654 <__assert_fail@plt+0x7ec>
   11654:	ldrb	r0, [fp, #-16]
   11658:	tst	r0, #1
   1165c:	bne	1166c <__assert_fail@plt+0x804>
   11660:	ldrb	r0, [fp, #-14]
   11664:	tst	r0, #1
   11668:	beq	11aa0 <__assert_fail@plt+0xc38>
   1166c:	b	11670 <__assert_fail@plt+0x808>
   11670:	ldr	r0, [fp, #-8]
   11674:	cmp	r0, #0
   11678:	ble	11a9c <__assert_fail@plt+0xc34>
   1167c:	ldr	r0, [fp, #-12]
   11680:	ldr	r0, [r0]
   11684:	str	r0, [fp, #-28]	; 0xffffffe4
   11688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1168c:	add	r1, r0, #1
   11690:	str	r1, [fp, #-28]	; 0xffffffe4
   11694:	ldrb	r0, [r0]
   11698:	strb	r0, [fp, #-29]	; 0xffffffe3
   1169c:	sxtb	r0, r0
   116a0:	cmp	r0, #0
   116a4:	beq	11a64 <__assert_fail@plt+0xbfc>
   116a8:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   116ac:	cmp	r0, #92	; 0x5c
   116b0:	bne	11a54 <__assert_fail@plt+0xbec>
   116b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   116b8:	ldrb	r0, [r0]
   116bc:	cmp	r0, #0
   116c0:	beq	11a54 <__assert_fail@plt+0xbec>
   116c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   116c8:	add	r1, r0, #1
   116cc:	str	r1, [fp, #-28]	; 0xffffffe4
   116d0:	ldrb	r0, [r0]
   116d4:	strb	r0, [fp, #-29]	; 0xffffffe3
   116d8:	sub	r0, r0, #48	; 0x30
   116dc:	cmp	r0, #72	; 0x48
   116e0:	str	r0, [sp, #64]	; 0x40
   116e4:	bhi	11a44 <__assert_fail@plt+0xbdc>
   116e8:	add	r0, pc, #8
   116ec:	ldr	r1, [sp, #64]	; 0x40
   116f0:	ldr	r0, [r0, r1, lsl #2]
   116f4:	mov	pc, r0
   116f8:	andeq	r1, r1, r8, asr #18
   116fc:	andeq	r1, r1, ip, lsl #19
   11700:	andeq	r1, r1, ip, lsl #19
   11704:	andeq	r1, r1, ip, lsl #19
   11708:	andeq	r1, r1, ip, lsl #19
   1170c:	andeq	r1, r1, ip, lsl #19
   11710:	andeq	r1, r1, ip, lsl #19
   11714:	andeq	r1, r1, ip, lsl #19
   11718:	andeq	r1, r1, r4, asr #20
   1171c:	andeq	r1, r1, r4, asr #20
   11720:	andeq	r1, r1, r4, asr #20
   11724:	andeq	r1, r1, r4, asr #20
   11728:	andeq	r1, r1, r4, asr #20
   1172c:	andeq	r1, r1, r4, asr #20
   11730:	andeq	r1, r1, r4, asr #20
   11734:	andeq	r1, r1, r4, asr #20
   11738:	andeq	r1, r1, r4, asr #20
   1173c:	andeq	r1, r1, r4, asr #20
   11740:	andeq	r1, r1, r4, asr #20
   11744:	andeq	r1, r1, r4, asr #20
   11748:	andeq	r1, r1, r4, asr #20
   1174c:	andeq	r1, r1, r4, asr #20
   11750:	andeq	r1, r1, r4, asr #20
   11754:	andeq	r1, r1, r4, asr #20
   11758:	andeq	r1, r1, r4, asr #20
   1175c:	andeq	r1, r1, r4, asr #20
   11760:	andeq	r1, r1, r4, asr #20
   11764:	andeq	r1, r1, r4, asr #20
   11768:	andeq	r1, r1, r4, asr #20
   1176c:	andeq	r1, r1, r4, asr #20
   11770:	andeq	r1, r1, r4, asr #20
   11774:	andeq	r1, r1, r4, asr #20
   11778:	andeq	r1, r1, r4, asr #20
   1177c:	andeq	r1, r1, r4, asr #20
   11780:	andeq	r1, r1, r4, asr #20
   11784:	andeq	r1, r1, r4, asr #20
   11788:	andeq	r1, r1, r4, asr #20
   1178c:	andeq	r1, r1, r4, asr #20
   11790:	andeq	r1, r1, r4, asr #20
   11794:	andeq	r1, r1, r4, asr #20
   11798:	andeq	r1, r1, r4, asr #20
   1179c:	andeq	r1, r1, r4, asr #20
   117a0:	andeq	r1, r1, r4, asr #20
   117a4:	andeq	r1, r1, r4, asr #20
   117a8:	andeq	r1, r1, ip, lsr sl
   117ac:	andeq	r1, r1, r4, asr #20
   117b0:	andeq	r1, r1, r4, asr #20
   117b4:	andeq	r1, r1, r4, asr #20
   117b8:	andeq	r1, r1, r4, asr #20
   117bc:	andeq	r1, r1, ip, lsl r8
   117c0:	andeq	r1, r1, r8, lsr #16
   117c4:	andeq	r1, r1, r4, lsr r8
   117c8:	andeq	r1, r1, r4, asr #20
   117cc:	andeq	r1, r1, r0, asr #16
   117d0:	andeq	r1, r1, ip, asr #16
   117d4:	andeq	r1, r1, r4, asr #20
   117d8:	andeq	r1, r1, r4, asr #20
   117dc:	andeq	r1, r1, r4, asr #20
   117e0:	andeq	r1, r1, r4, asr #20
   117e4:	andeq	r1, r1, r4, asr #20
   117e8:	andeq	r1, r1, r4, asr #20
   117ec:	andeq	r1, r1, r4, asr #20
   117f0:	andeq	r1, r1, r8, asr r8
   117f4:	andeq	r1, r1, r4, asr #20
   117f8:	andeq	r1, r1, r4, asr #20
   117fc:	andeq	r1, r1, r4, asr #20
   11800:	andeq	r1, r1, r4, ror #16
   11804:	andeq	r1, r1, r4, asr #20
   11808:	andeq	r1, r1, r0, ror r8
   1180c:	andeq	r1, r1, r4, asr #20
   11810:	andeq	r1, r1, ip, ror r8
   11814:	andeq	r1, r1, r4, asr #20
   11818:	andeq	r1, r1, r8, lsl #17
   1181c:	movw	r0, #7
   11820:	strb	r0, [fp, #-29]	; 0xffffffe3
   11824:	b	11a50 <__assert_fail@plt+0xbe8>
   11828:	movw	r0, #8
   1182c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11830:	b	11a50 <__assert_fail@plt+0xbe8>
   11834:	movw	r0, #0
   11838:	str	r0, [fp, #-4]
   1183c:	b	11b28 <__assert_fail@plt+0xcc0>
   11840:	movw	r0, #27
   11844:	strb	r0, [fp, #-29]	; 0xffffffe3
   11848:	b	11a50 <__assert_fail@plt+0xbe8>
   1184c:	movw	r0, #12
   11850:	strb	r0, [fp, #-29]	; 0xffffffe3
   11854:	b	11a50 <__assert_fail@plt+0xbe8>
   11858:	movw	r0, #10
   1185c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11860:	b	11a50 <__assert_fail@plt+0xbe8>
   11864:	movw	r0, #13
   11868:	strb	r0, [fp, #-29]	; 0xffffffe3
   1186c:	b	11a50 <__assert_fail@plt+0xbe8>
   11870:	movw	r0, #9
   11874:	strb	r0, [fp, #-29]	; 0xffffffe3
   11878:	b	11a50 <__assert_fail@plt+0xbe8>
   1187c:	movw	r0, #11
   11880:	strb	r0, [fp, #-29]	; 0xffffffe3
   11884:	b	11a50 <__assert_fail@plt+0xbe8>
   11888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1188c:	ldrb	r0, [r0]
   11890:	strb	r0, [fp, #-30]	; 0xffffffe2
   11894:	bl	10d84 <__ctype_b_loc@plt>
   11898:	ldr	r0, [r0]
   1189c:	ldrb	lr, [fp, #-30]	; 0xffffffe2
   118a0:	mov	r1, lr
   118a4:	add	r0, r0, lr, lsl #1
   118a8:	ldrh	r0, [r0]
   118ac:	and	r0, r0, #4096	; 0x1000
   118b0:	cmp	r0, #0
   118b4:	str	r1, [sp, #60]	; 0x3c
   118b8:	bne	118c0 <__assert_fail@plt+0xa58>
   118bc:	b	11a40 <__assert_fail@plt+0xbd8>
   118c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118c4:	add	r0, r0, #1
   118c8:	str	r0, [fp, #-28]	; 0xffffffe4
   118cc:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   118d0:	bl	11b34 <__assert_fail@plt+0xccc>
   118d4:	strb	r0, [fp, #-29]	; 0xffffffe3
   118d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118dc:	ldrb	r0, [r0]
   118e0:	strb	r0, [fp, #-30]	; 0xffffffe2
   118e4:	bl	10d84 <__ctype_b_loc@plt>
   118e8:	ldr	r0, [r0]
   118ec:	ldrb	lr, [fp, #-30]	; 0xffffffe2
   118f0:	mov	r1, lr
   118f4:	add	r0, r0, lr, lsl #1
   118f8:	ldrh	r0, [r0]
   118fc:	and	r0, r0, #4096	; 0x1000
   11900:	cmp	r0, #0
   11904:	str	r1, [sp, #56]	; 0x38
   11908:	beq	11944 <__assert_fail@plt+0xadc>
   1190c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11910:	add	r0, r0, #1
   11914:	str	r0, [fp, #-28]	; 0xffffffe4
   11918:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   1191c:	mov	r1, r0
   11920:	lsl	r0, r0, #4
   11924:	ldrb	r2, [fp, #-30]	; 0xffffffe2
   11928:	str	r0, [sp, #52]	; 0x34
   1192c:	mov	r0, r2
   11930:	str	r1, [sp, #48]	; 0x30
   11934:	bl	11b34 <__assert_fail@plt+0xccc>
   11938:	ldr	r1, [sp, #52]	; 0x34
   1193c:	add	r0, r1, r0
   11940:	strb	r0, [fp, #-29]	; 0xffffffe3
   11944:	b	11a50 <__assert_fail@plt+0xbe8>
   11948:	movw	r0, #0
   1194c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11950:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11954:	ldrb	r0, [r0]
   11958:	movw	r1, #48	; 0x30
   1195c:	cmp	r1, r0
   11960:	bgt	11974 <__assert_fail@plt+0xb0c>
   11964:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11968:	ldrb	r0, [r0]
   1196c:	cmp	r0, #55	; 0x37
   11970:	ble	11978 <__assert_fail@plt+0xb10>
   11974:	b	11a50 <__assert_fail@plt+0xbe8>
   11978:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1197c:	add	r1, r0, #1
   11980:	str	r1, [fp, #-28]	; 0xffffffe4
   11984:	ldrb	r0, [r0]
   11988:	strb	r0, [fp, #-29]	; 0xffffffe3
   1198c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11990:	sub	r0, r0, #48	; 0x30
   11994:	strb	r0, [fp, #-29]	; 0xffffffe3
   11998:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1199c:	ldrb	r0, [r0]
   119a0:	movw	r1, #48	; 0x30
   119a4:	cmp	r1, r0
   119a8:	bgt	119e8 <__assert_fail@plt+0xb80>
   119ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119b0:	ldrb	r0, [r0]
   119b4:	cmp	r0, #55	; 0x37
   119b8:	bgt	119e8 <__assert_fail@plt+0xb80>
   119bc:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   119c0:	mov	r1, r0
   119c4:	lsl	r0, r0, #3
   119c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   119cc:	add	r3, r2, #1
   119d0:	str	r3, [fp, #-28]	; 0xffffffe4
   119d4:	ldrb	r2, [r2]
   119d8:	sub	r2, r2, #48	; 0x30
   119dc:	add	r0, r0, r2
   119e0:	strb	r0, [fp, #-29]	; 0xffffffe3
   119e4:	str	r1, [sp, #44]	; 0x2c
   119e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119ec:	ldrb	r0, [r0]
   119f0:	movw	r1, #48	; 0x30
   119f4:	cmp	r1, r0
   119f8:	bgt	11a38 <__assert_fail@plt+0xbd0>
   119fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a00:	ldrb	r0, [r0]
   11a04:	cmp	r0, #55	; 0x37
   11a08:	bgt	11a38 <__assert_fail@plt+0xbd0>
   11a0c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a10:	mov	r1, r0
   11a14:	lsl	r0, r0, #3
   11a18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a1c:	add	r3, r2, #1
   11a20:	str	r3, [fp, #-28]	; 0xffffffe4
   11a24:	ldrb	r2, [r2]
   11a28:	sub	r2, r2, #48	; 0x30
   11a2c:	add	r0, r0, r2
   11a30:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a34:	str	r1, [sp, #40]	; 0x28
   11a38:	b	11a50 <__assert_fail@plt+0xbe8>
   11a3c:	b	11a50 <__assert_fail@plt+0xbe8>
   11a40:	b	11a44 <__assert_fail@plt+0xbdc>
   11a44:	movw	r0, #92	; 0x5c
   11a48:	bl	10e5c <putchar_unlocked@plt>
   11a4c:	str	r0, [sp, #36]	; 0x24
   11a50:	b	11a54 <__assert_fail@plt+0xbec>
   11a54:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a58:	bl	10e5c <putchar_unlocked@plt>
   11a5c:	str	r0, [sp, #32]
   11a60:	b	11688 <__assert_fail@plt+0x820>
   11a64:	ldr	r0, [fp, #-8]
   11a68:	mvn	r1, #0
   11a6c:	add	r0, r0, r1
   11a70:	str	r0, [fp, #-8]
   11a74:	ldr	r0, [fp, #-12]
   11a78:	add	r0, r0, #4
   11a7c:	str	r0, [fp, #-12]
   11a80:	ldr	r0, [fp, #-8]
   11a84:	cmp	r0, #0
   11a88:	ble	11a98 <__assert_fail@plt+0xc30>
   11a8c:	movw	r0, #32
   11a90:	bl	10e5c <putchar_unlocked@plt>
   11a94:	str	r0, [sp, #28]
   11a98:	b	11670 <__assert_fail@plt+0x808>
   11a9c:	b	11b08 <__assert_fail@plt+0xca0>
   11aa0:	b	11aa4 <__assert_fail@plt+0xc3c>
   11aa4:	ldr	r0, [fp, #-8]
   11aa8:	cmp	r0, #0
   11aac:	ble	11b04 <__assert_fail@plt+0xc9c>
   11ab0:	ldr	r0, [fp, #-12]
   11ab4:	ldr	r0, [r0]
   11ab8:	movw	r1, #45348	; 0xb124
   11abc:	movt	r1, #2
   11ac0:	ldr	r1, [r1]
   11ac4:	bl	10c64 <fputs_unlocked@plt>
   11ac8:	ldr	r1, [fp, #-8]
   11acc:	mvn	lr, #0
   11ad0:	add	r1, r1, lr
   11ad4:	str	r1, [fp, #-8]
   11ad8:	ldr	r1, [fp, #-12]
   11adc:	add	r1, r1, #4
   11ae0:	str	r1, [fp, #-12]
   11ae4:	ldr	r1, [fp, #-8]
   11ae8:	cmp	r1, #0
   11aec:	str	r0, [sp, #24]
   11af0:	ble	11b00 <__assert_fail@plt+0xc98>
   11af4:	movw	r0, #32
   11af8:	bl	10e5c <putchar_unlocked@plt>
   11afc:	str	r0, [sp, #20]
   11b00:	b	11aa4 <__assert_fail@plt+0xc3c>
   11b04:	b	11b08 <__assert_fail@plt+0xca0>
   11b08:	ldrb	r0, [fp, #-13]
   11b0c:	tst	r0, #1
   11b10:	beq	11b20 <__assert_fail@plt+0xcb8>
   11b14:	movw	r0, #10
   11b18:	bl	10e5c <putchar_unlocked@plt>
   11b1c:	str	r0, [sp, #16]
   11b20:	movw	r0, #0
   11b24:	str	r0, [fp, #-4]
   11b28:	ldr	r0, [fp, #-4]
   11b2c:	mov	sp, fp
   11b30:	pop	{fp, pc}
   11b34:	sub	sp, sp, #12
   11b38:	strb	r0, [sp, #7]
   11b3c:	ldrb	r0, [sp, #7]
   11b40:	sub	r0, r0, #65	; 0x41
   11b44:	cmp	r0, #37	; 0x25
   11b48:	str	r0, [sp]
   11b4c:	bhi	11bf8 <__assert_fail@plt+0xd90>
   11b50:	add	r0, pc, #8
   11b54:	ldr	r1, [sp]
   11b58:	ldr	r0, [r0, r1, lsl #2]
   11b5c:	mov	pc, r0
   11b60:	andeq	r1, r1, r8, lsl #24
   11b64:	andeq	r1, r1, r4, lsl ip
   11b68:	andeq	r1, r1, r0, lsr #24
   11b6c:	andeq	r1, r1, ip, lsr #24
   11b70:	andeq	r1, r1, r8, lsr ip
   11b74:	andeq	r1, r1, r4, asr #24
   11b78:	strdeq	r1, [r1], -r8
   11b7c:	strdeq	r1, [r1], -r8
   11b80:	strdeq	r1, [r1], -r8
   11b84:	strdeq	r1, [r1], -r8
   11b88:	strdeq	r1, [r1], -r8
   11b8c:	strdeq	r1, [r1], -r8
   11b90:	strdeq	r1, [r1], -r8
   11b94:	strdeq	r1, [r1], -r8
   11b98:	strdeq	r1, [r1], -r8
   11b9c:	strdeq	r1, [r1], -r8
   11ba0:	strdeq	r1, [r1], -r8
   11ba4:	strdeq	r1, [r1], -r8
   11ba8:	strdeq	r1, [r1], -r8
   11bac:	strdeq	r1, [r1], -r8
   11bb0:	strdeq	r1, [r1], -r8
   11bb4:	strdeq	r1, [r1], -r8
   11bb8:	strdeq	r1, [r1], -r8
   11bbc:	strdeq	r1, [r1], -r8
   11bc0:	strdeq	r1, [r1], -r8
   11bc4:	strdeq	r1, [r1], -r8
   11bc8:	strdeq	r1, [r1], -r8
   11bcc:	strdeq	r1, [r1], -r8
   11bd0:	strdeq	r1, [r1], -r8
   11bd4:	strdeq	r1, [r1], -r8
   11bd8:	strdeq	r1, [r1], -r8
   11bdc:	strdeq	r1, [r1], -r8
   11be0:	andeq	r1, r1, r8, lsl #24
   11be4:	andeq	r1, r1, r4, lsl ip
   11be8:	andeq	r1, r1, r0, lsr #24
   11bec:	andeq	r1, r1, ip, lsr #24
   11bf0:	andeq	r1, r1, r8, lsr ip
   11bf4:	andeq	r1, r1, r4, asr #24
   11bf8:	ldrb	r0, [sp, #7]
   11bfc:	sub	r0, r0, #48	; 0x30
   11c00:	str	r0, [sp, #8]
   11c04:	b	11c4c <__assert_fail@plt+0xde4>
   11c08:	movw	r0, #10
   11c0c:	str	r0, [sp, #8]
   11c10:	b	11c4c <__assert_fail@plt+0xde4>
   11c14:	movw	r0, #11
   11c18:	str	r0, [sp, #8]
   11c1c:	b	11c4c <__assert_fail@plt+0xde4>
   11c20:	movw	r0, #12
   11c24:	str	r0, [sp, #8]
   11c28:	b	11c4c <__assert_fail@plt+0xde4>
   11c2c:	movw	r0, #13
   11c30:	str	r0, [sp, #8]
   11c34:	b	11c4c <__assert_fail@plt+0xde4>
   11c38:	movw	r0, #14
   11c3c:	str	r0, [sp, #8]
   11c40:	b	11c4c <__assert_fail@plt+0xde4>
   11c44:	movw	r0, #15
   11c48:	str	r0, [sp, #8]
   11c4c:	ldr	r0, [sp, #8]
   11c50:	add	sp, sp, #12
   11c54:	bx	lr
   11c58:	sub	sp, sp, #4
   11c5c:	str	r0, [sp]
   11c60:	ldr	r0, [sp]
   11c64:	movw	r1, #45356	; 0xb12c
   11c68:	movt	r1, #2
   11c6c:	str	r0, [r1]
   11c70:	add	sp, sp, #4
   11c74:	bx	lr
   11c78:	sub	sp, sp, #4
   11c7c:	and	r0, r0, #1
   11c80:	strb	r0, [sp, #3]
   11c84:	ldrb	r0, [sp, #3]
   11c88:	and	r0, r0, #1
   11c8c:	movw	r1, #45360	; 0xb130
   11c90:	movt	r1, #2
   11c94:	strb	r0, [r1]
   11c98:	add	sp, sp, #4
   11c9c:	bx	lr
   11ca0:	push	{fp, lr}
   11ca4:	mov	fp, sp
   11ca8:	sub	sp, sp, #24
   11cac:	movw	r0, #45348	; 0xb124
   11cb0:	movt	r0, #2
   11cb4:	ldr	r0, [r0]
   11cb8:	bl	17efc <__assert_fail@plt+0x7094>
   11cbc:	cmp	r0, #0
   11cc0:	beq	11d90 <__assert_fail@plt+0xf28>
   11cc4:	movw	r0, #45360	; 0xb130
   11cc8:	movt	r0, #2
   11ccc:	ldrb	r0, [r0]
   11cd0:	tst	r0, #1
   11cd4:	beq	11ce8 <__assert_fail@plt+0xe80>
   11cd8:	bl	10dc0 <__errno_location@plt>
   11cdc:	ldr	r0, [r0]
   11ce0:	cmp	r0, #32
   11ce4:	beq	11d90 <__assert_fail@plt+0xf28>
   11ce8:	movw	r0, #43647	; 0xaa7f
   11cec:	movt	r0, #1
   11cf0:	bl	10d9c <gettext@plt>
   11cf4:	str	r0, [fp, #-4]
   11cf8:	movw	r0, #45356	; 0xb12c
   11cfc:	movt	r0, #2
   11d00:	ldr	r0, [r0]
   11d04:	movw	lr, #0
   11d08:	cmp	r0, lr
   11d0c:	beq	11d64 <__assert_fail@plt+0xefc>
   11d10:	bl	10dc0 <__errno_location@plt>
   11d14:	ldr	r1, [r0]
   11d18:	movw	r0, #45356	; 0xb12c
   11d1c:	movt	r0, #2
   11d20:	ldr	r0, [r0]
   11d24:	str	r1, [fp, #-8]
   11d28:	bl	14180 <__assert_fail@plt+0x3318>
   11d2c:	ldr	r1, [fp, #-4]
   11d30:	movw	lr, #0
   11d34:	str	r0, [sp, #12]
   11d38:	mov	r0, lr
   11d3c:	ldr	lr, [fp, #-8]
   11d40:	str	r1, [sp, #8]
   11d44:	mov	r1, lr
   11d48:	movw	r2, #43659	; 0xaa8b
   11d4c:	movt	r2, #1
   11d50:	ldr	r3, [sp, #12]
   11d54:	ldr	ip, [sp, #8]
   11d58:	str	ip, [sp]
   11d5c:	bl	10d3c <error@plt>
   11d60:	b	11d80 <__assert_fail@plt+0xf18>
   11d64:	bl	10dc0 <__errno_location@plt>
   11d68:	ldr	r1, [r0]
   11d6c:	ldr	r3, [fp, #-4]
   11d70:	movw	r0, #0
   11d74:	movw	r2, #43663	; 0xaa8f
   11d78:	movt	r2, #1
   11d7c:	bl	10d3c <error@plt>
   11d80:	movw	r0, #45264	; 0xb0d0
   11d84:	movt	r0, #2
   11d88:	ldr	r0, [r0]
   11d8c:	bl	10cac <_exit@plt>
   11d90:	movw	r0, #45344	; 0xb120
   11d94:	movt	r0, #2
   11d98:	ldr	r0, [r0]
   11d9c:	bl	17efc <__assert_fail@plt+0x7094>
   11da0:	cmp	r0, #0
   11da4:	beq	11db8 <__assert_fail@plt+0xf50>
   11da8:	movw	r0, #45264	; 0xb0d0
   11dac:	movt	r0, #2
   11db0:	ldr	r0, [r0]
   11db4:	bl	10cac <_exit@plt>
   11db8:	mov	sp, fp
   11dbc:	pop	{fp, pc}
   11dc0:	push	{fp, lr}
   11dc4:	mov	fp, sp
   11dc8:	sub	sp, sp, #24
   11dcc:	str	r0, [fp, #-4]
   11dd0:	ldr	r0, [fp, #-4]
   11dd4:	movw	r1, #0
   11dd8:	cmp	r0, r1
   11ddc:	bne	11e00 <__assert_fail@plt+0xf98>
   11de0:	movw	r0, #45344	; 0xb120
   11de4:	movt	r0, #2
   11de8:	ldr	r1, [r0]
   11dec:	movw	r0, #43666	; 0xaa92
   11df0:	movt	r0, #1
   11df4:	bl	10e38 <fputs@plt>
   11df8:	str	r0, [sp, #8]
   11dfc:	bl	10e50 <abort@plt>
   11e00:	ldr	r0, [fp, #-4]
   11e04:	movw	r1, #47	; 0x2f
   11e08:	bl	10e14 <strrchr@plt>
   11e0c:	str	r0, [fp, #-8]
   11e10:	ldr	r0, [fp, #-8]
   11e14:	movw	r1, #0
   11e18:	cmp	r0, r1
   11e1c:	beq	11e30 <__assert_fail@plt+0xfc8>
   11e20:	ldr	r0, [fp, #-8]
   11e24:	add	r0, r0, #1
   11e28:	str	r0, [sp, #4]
   11e2c:	b	11e38 <__assert_fail@plt+0xfd0>
   11e30:	ldr	r0, [fp, #-4]
   11e34:	str	r0, [sp, #4]
   11e38:	ldr	r0, [sp, #4]
   11e3c:	str	r0, [sp, #12]
   11e40:	ldr	r0, [sp, #12]
   11e44:	ldr	r1, [fp, #-4]
   11e48:	sub	r0, r0, r1
   11e4c:	cmp	r0, #7
   11e50:	blt	11ebc <__assert_fail@plt+0x1054>
   11e54:	ldr	r0, [sp, #12]
   11e58:	mvn	r1, #6
   11e5c:	add	r0, r0, r1
   11e60:	movw	r1, #43722	; 0xaaca
   11e64:	movt	r1, #1
   11e68:	movw	r2, #7
   11e6c:	bl	10e44 <strncmp@plt>
   11e70:	cmp	r0, #0
   11e74:	bne	11ebc <__assert_fail@plt+0x1054>
   11e78:	ldr	r0, [sp, #12]
   11e7c:	str	r0, [fp, #-4]
   11e80:	ldr	r0, [sp, #12]
   11e84:	movw	r1, #43730	; 0xaad2
   11e88:	movt	r1, #1
   11e8c:	movw	r2, #3
   11e90:	bl	10e44 <strncmp@plt>
   11e94:	cmp	r0, #0
   11e98:	bne	11eb8 <__assert_fail@plt+0x1050>
   11e9c:	ldr	r0, [sp, #12]
   11ea0:	add	r0, r0, #3
   11ea4:	str	r0, [fp, #-4]
   11ea8:	ldr	r0, [fp, #-4]
   11eac:	movw	r1, #45336	; 0xb118
   11eb0:	movt	r1, #2
   11eb4:	str	r0, [r1]
   11eb8:	b	11ebc <__assert_fail@plt+0x1054>
   11ebc:	ldr	r0, [fp, #-4]
   11ec0:	movw	r1, #45364	; 0xb134
   11ec4:	movt	r1, #2
   11ec8:	str	r0, [r1]
   11ecc:	ldr	r0, [fp, #-4]
   11ed0:	movw	r1, #45340	; 0xb11c
   11ed4:	movt	r1, #2
   11ed8:	str	r0, [r1]
   11edc:	mov	sp, fp
   11ee0:	pop	{fp, pc}
   11ee4:	push	{fp, lr}
   11ee8:	mov	fp, sp
   11eec:	sub	sp, sp, #24
   11ef0:	str	r0, [fp, #-4]
   11ef4:	bl	10dc0 <__errno_location@plt>
   11ef8:	ldr	r0, [r0]
   11efc:	str	r0, [fp, #-8]
   11f00:	ldr	r0, [fp, #-4]
   11f04:	movw	lr, #0
   11f08:	cmp	r0, lr
   11f0c:	beq	11f1c <__assert_fail@plt+0x10b4>
   11f10:	ldr	r0, [fp, #-4]
   11f14:	str	r0, [sp, #8]
   11f18:	b	11f2c <__assert_fail@plt+0x10c4>
   11f1c:	movw	r0, #45368	; 0xb138
   11f20:	movt	r0, #2
   11f24:	str	r0, [sp, #8]
   11f28:	b	11f2c <__assert_fail@plt+0x10c4>
   11f2c:	ldr	r0, [sp, #8]
   11f30:	movw	r1, #48	; 0x30
   11f34:	bl	17b44 <__assert_fail@plt+0x6cdc>
   11f38:	str	r0, [sp, #12]
   11f3c:	ldr	r0, [fp, #-8]
   11f40:	str	r0, [sp, #4]
   11f44:	bl	10dc0 <__errno_location@plt>
   11f48:	ldr	r1, [sp, #4]
   11f4c:	str	r1, [r0]
   11f50:	ldr	r0, [sp, #12]
   11f54:	mov	sp, fp
   11f58:	pop	{fp, pc}
   11f5c:	sub	sp, sp, #8
   11f60:	str	r0, [sp, #4]
   11f64:	ldr	r0, [sp, #4]
   11f68:	movw	r1, #0
   11f6c:	cmp	r0, r1
   11f70:	beq	11f80 <__assert_fail@plt+0x1118>
   11f74:	ldr	r0, [sp, #4]
   11f78:	str	r0, [sp]
   11f7c:	b	11f90 <__assert_fail@plt+0x1128>
   11f80:	movw	r0, #45368	; 0xb138
   11f84:	movt	r0, #2
   11f88:	str	r0, [sp]
   11f8c:	b	11f90 <__assert_fail@plt+0x1128>
   11f90:	ldr	r0, [sp]
   11f94:	ldr	r0, [r0]
   11f98:	add	sp, sp, #8
   11f9c:	bx	lr
   11fa0:	sub	sp, sp, #16
   11fa4:	str	r0, [sp, #12]
   11fa8:	str	r1, [sp, #8]
   11fac:	ldr	r0, [sp, #8]
   11fb0:	ldr	r1, [sp, #12]
   11fb4:	movw	r2, #0
   11fb8:	cmp	r1, r2
   11fbc:	str	r0, [sp, #4]
   11fc0:	beq	11fd0 <__assert_fail@plt+0x1168>
   11fc4:	ldr	r0, [sp, #12]
   11fc8:	str	r0, [sp]
   11fcc:	b	11fe0 <__assert_fail@plt+0x1178>
   11fd0:	movw	r0, #45368	; 0xb138
   11fd4:	movt	r0, #2
   11fd8:	str	r0, [sp]
   11fdc:	b	11fe0 <__assert_fail@plt+0x1178>
   11fe0:	ldr	r0, [sp]
   11fe4:	ldr	r1, [sp, #4]
   11fe8:	str	r1, [r0]
   11fec:	add	sp, sp, #16
   11ff0:	bx	lr
   11ff4:	sub	sp, sp, #32
   11ff8:	str	r0, [sp, #28]
   11ffc:	strb	r1, [sp, #27]
   12000:	str	r2, [sp, #20]
   12004:	ldrb	r0, [sp, #27]
   12008:	strb	r0, [sp, #19]
   1200c:	ldr	r0, [sp, #28]
   12010:	movw	r1, #0
   12014:	cmp	r0, r1
   12018:	beq	12028 <__assert_fail@plt+0x11c0>
   1201c:	ldr	r0, [sp, #28]
   12020:	str	r0, [sp]
   12024:	b	12038 <__assert_fail@plt+0x11d0>
   12028:	movw	r0, #45368	; 0xb138
   1202c:	movt	r0, #2
   12030:	str	r0, [sp]
   12034:	b	12038 <__assert_fail@plt+0x11d0>
   12038:	ldr	r0, [sp]
   1203c:	add	r0, r0, #8
   12040:	ldrb	r1, [sp, #19]
   12044:	lsr	r1, r1, #5
   12048:	add	r0, r0, r1, lsl #2
   1204c:	str	r0, [sp, #12]
   12050:	ldrb	r0, [sp, #19]
   12054:	and	r0, r0, #31
   12058:	str	r0, [sp, #8]
   1205c:	ldr	r0, [sp, #12]
   12060:	ldr	r0, [r0]
   12064:	ldr	r1, [sp, #8]
   12068:	lsr	r0, r0, r1
   1206c:	and	r0, r0, #1
   12070:	str	r0, [sp, #4]
   12074:	ldr	r0, [sp, #20]
   12078:	and	r0, r0, #1
   1207c:	ldr	r1, [sp, #4]
   12080:	eor	r0, r0, r1
   12084:	ldr	r1, [sp, #8]
   12088:	lsl	r0, r0, r1
   1208c:	ldr	r1, [sp, #12]
   12090:	ldr	r2, [r1]
   12094:	eor	r0, r2, r0
   12098:	str	r0, [r1]
   1209c:	ldr	r0, [sp, #4]
   120a0:	add	sp, sp, #32
   120a4:	bx	lr
   120a8:	sub	sp, sp, #12
   120ac:	str	r0, [sp, #8]
   120b0:	str	r1, [sp, #4]
   120b4:	ldr	r0, [sp, #8]
   120b8:	movw	r1, #0
   120bc:	cmp	r0, r1
   120c0:	bne	120d0 <__assert_fail@plt+0x1268>
   120c4:	movw	r0, #45368	; 0xb138
   120c8:	movt	r0, #2
   120cc:	str	r0, [sp, #8]
   120d0:	ldr	r0, [sp, #8]
   120d4:	ldr	r0, [r0, #4]
   120d8:	str	r0, [sp]
   120dc:	ldr	r0, [sp, #4]
   120e0:	ldr	r1, [sp, #8]
   120e4:	str	r0, [r1, #4]
   120e8:	ldr	r0, [sp]
   120ec:	add	sp, sp, #12
   120f0:	bx	lr
   120f4:	push	{fp, lr}
   120f8:	mov	fp, sp
   120fc:	sub	sp, sp, #16
   12100:	str	r0, [fp, #-4]
   12104:	str	r1, [sp, #8]
   12108:	str	r2, [sp, #4]
   1210c:	ldr	r0, [fp, #-4]
   12110:	movw	r1, #0
   12114:	cmp	r0, r1
   12118:	bne	12128 <__assert_fail@plt+0x12c0>
   1211c:	movw	r0, #45368	; 0xb138
   12120:	movt	r0, #2
   12124:	str	r0, [fp, #-4]
   12128:	ldr	r0, [fp, #-4]
   1212c:	movw	r1, #10
   12130:	str	r1, [r0]
   12134:	ldr	r0, [sp, #8]
   12138:	movw	r1, #0
   1213c:	cmp	r0, r1
   12140:	beq	12154 <__assert_fail@plt+0x12ec>
   12144:	ldr	r0, [sp, #4]
   12148:	movw	r1, #0
   1214c:	cmp	r0, r1
   12150:	bne	12158 <__assert_fail@plt+0x12f0>
   12154:	bl	10e50 <abort@plt>
   12158:	ldr	r0, [sp, #8]
   1215c:	ldr	r1, [fp, #-4]
   12160:	str	r0, [r1, #40]	; 0x28
   12164:	ldr	r0, [sp, #4]
   12168:	ldr	r1, [fp, #-4]
   1216c:	str	r0, [r1, #44]	; 0x2c
   12170:	mov	sp, fp
   12174:	pop	{fp, pc}
   12178:	push	{r4, r5, r6, sl, fp, lr}
   1217c:	add	fp, sp, #16
   12180:	sub	sp, sp, #64	; 0x40
   12184:	ldr	ip, [fp, #8]
   12188:	str	r0, [fp, #-20]	; 0xffffffec
   1218c:	str	r1, [fp, #-24]	; 0xffffffe8
   12190:	str	r2, [fp, #-28]	; 0xffffffe4
   12194:	str	r3, [fp, #-32]	; 0xffffffe0
   12198:	ldr	r0, [fp, #8]
   1219c:	movw	r1, #0
   121a0:	cmp	r0, r1
   121a4:	str	ip, [sp, #32]
   121a8:	beq	121b8 <__assert_fail@plt+0x1350>
   121ac:	ldr	r0, [fp, #8]
   121b0:	str	r0, [sp, #28]
   121b4:	b	121c8 <__assert_fail@plt+0x1360>
   121b8:	movw	r0, #45368	; 0xb138
   121bc:	movt	r0, #2
   121c0:	str	r0, [sp, #28]
   121c4:	b	121c8 <__assert_fail@plt+0x1360>
   121c8:	ldr	r0, [sp, #28]
   121cc:	str	r0, [fp, #-36]	; 0xffffffdc
   121d0:	bl	10dc0 <__errno_location@plt>
   121d4:	ldr	r0, [r0]
   121d8:	str	r0, [sp, #40]	; 0x28
   121dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   121e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   121e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121ec:	ldr	lr, [fp, #-36]	; 0xffffffdc
   121f0:	ldr	lr, [lr]
   121f4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   121f8:	ldr	ip, [ip, #4]
   121fc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12200:	add	r4, r4, #8
   12204:	ldr	r5, [fp, #-36]	; 0xffffffdc
   12208:	ldr	r5, [r5, #40]	; 0x28
   1220c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   12210:	ldr	r6, [r6, #44]	; 0x2c
   12214:	str	lr, [sp]
   12218:	str	ip, [sp, #4]
   1221c:	str	r4, [sp, #8]
   12220:	str	r5, [sp, #12]
   12224:	str	r6, [sp, #16]
   12228:	bl	12250 <__assert_fail@plt+0x13e8>
   1222c:	str	r0, [sp, #36]	; 0x24
   12230:	ldr	r0, [sp, #40]	; 0x28
   12234:	str	r0, [sp, #24]
   12238:	bl	10dc0 <__errno_location@plt>
   1223c:	ldr	r1, [sp, #24]
   12240:	str	r1, [r0]
   12244:	ldr	r0, [sp, #36]	; 0x24
   12248:	sub	sp, fp, #16
   1224c:	pop	{r4, r5, r6, sl, fp, pc}
   12250:	push	{r4, r5, r6, sl, fp, lr}
   12254:	add	fp, sp, #16
   12258:	sub	sp, sp, #168	; 0xa8
   1225c:	ldr	ip, [fp, #24]
   12260:	ldr	lr, [fp, #20]
   12264:	ldr	r4, [fp, #16]
   12268:	ldr	r5, [fp, #12]
   1226c:	ldr	r6, [fp, #8]
   12270:	str	r0, [fp, #-24]	; 0xffffffe8
   12274:	str	r1, [fp, #-28]	; 0xffffffe4
   12278:	str	r2, [fp, #-32]	; 0xffffffe0
   1227c:	str	r3, [fp, #-36]	; 0xffffffdc
   12280:	movw	r0, #0
   12284:	str	r0, [fp, #-44]	; 0xffffffd4
   12288:	str	r0, [fp, #-48]	; 0xffffffd0
   1228c:	str	r0, [fp, #-52]	; 0xffffffcc
   12290:	str	r0, [fp, #-56]	; 0xffffffc8
   12294:	movw	r0, #0
   12298:	strb	r0, [fp, #-57]	; 0xffffffc7
   1229c:	str	r6, [sp, #80]	; 0x50
   122a0:	str	lr, [sp, #76]	; 0x4c
   122a4:	str	r4, [sp, #72]	; 0x48
   122a8:	str	r5, [sp, #68]	; 0x44
   122ac:	str	ip, [sp, #64]	; 0x40
   122b0:	bl	10d0c <__ctype_get_mb_cur_max@plt>
   122b4:	cmp	r0, #1
   122b8:	movw	r0, #0
   122bc:	moveq	r0, #1
   122c0:	and	r0, r0, #1
   122c4:	strb	r0, [fp, #-58]	; 0xffffffc6
   122c8:	ldr	r0, [fp, #12]
   122cc:	and	r0, r0, #2
   122d0:	cmp	r0, #0
   122d4:	movw	r0, #0
   122d8:	movne	r0, #1
   122dc:	and	r0, r0, #1
   122e0:	strb	r0, [fp, #-59]	; 0xffffffc5
   122e4:	movw	r0, #0
   122e8:	strb	r0, [fp, #-60]	; 0xffffffc4
   122ec:	strb	r0, [fp, #-61]	; 0xffffffc3
   122f0:	movw	r0, #1
   122f4:	strb	r0, [fp, #-62]	; 0xffffffc2
   122f8:	ldr	r0, [fp, #8]
   122fc:	cmp	r0, #10
   12300:	str	r0, [sp, #60]	; 0x3c
   12304:	bhi	1252c <__assert_fail@plt+0x16c4>
   12308:	add	r0, pc, #8
   1230c:	ldr	r1, [sp, #60]	; 0x3c
   12310:	ldr	r0, [r0, r1, lsl #2]
   12314:	mov	pc, r0
   12318:	andeq	r2, r1, r0, lsr #10
   1231c:	muleq	r1, ip, r4
   12320:			; <UNDEFINED> instruction: 0x000124bc
   12324:	muleq	r1, r4, r4
   12328:	andeq	r2, r1, r4, lsr #9
   1232c:	andeq	r2, r1, r4, asr r3
   12330:	andeq	r2, r1, r4, asr #6
   12334:			; <UNDEFINED> instruction: 0x000123b8
   12338:	andeq	r2, r1, ip, asr #7
   1233c:	andeq	r2, r1, ip, asr #7
   12340:	andeq	r2, r1, ip, asr #7
   12344:	movw	r0, #5
   12348:	str	r0, [fp, #8]
   1234c:	movw	r0, #1
   12350:	strb	r0, [fp, #-59]	; 0xffffffc5
   12354:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12358:	tst	r0, #1
   1235c:	bne	12398 <__assert_fail@plt+0x1530>
   12360:	b	12364 <__assert_fail@plt+0x14fc>
   12364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12368:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1236c:	cmp	r0, r1
   12370:	bcs	12388 <__assert_fail@plt+0x1520>
   12374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1237c:	add	r0, r0, r1
   12380:	movw	r1, #34	; 0x22
   12384:	strb	r1, [r0]
   12388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1238c:	add	r0, r0, #1
   12390:	str	r0, [fp, #-44]	; 0xffffffd4
   12394:	b	12398 <__assert_fail@plt+0x1530>
   12398:	movw	r0, #1
   1239c:	strb	r0, [fp, #-57]	; 0xffffffc7
   123a0:	movw	r0, #43810	; 0xab22
   123a4:	movt	r0, #1
   123a8:	str	r0, [fp, #-52]	; 0xffffffcc
   123ac:	movw	r0, #1
   123b0:	str	r0, [fp, #-56]	; 0xffffffc8
   123b4:	b	12530 <__assert_fail@plt+0x16c8>
   123b8:	movw	r0, #1
   123bc:	strb	r0, [fp, #-57]	; 0xffffffc7
   123c0:	movw	r0, #0
   123c4:	strb	r0, [fp, #-59]	; 0xffffffc5
   123c8:	b	12530 <__assert_fail@plt+0x16c8>
   123cc:	ldr	r0, [fp, #8]
   123d0:	cmp	r0, #10
   123d4:	beq	12400 <__assert_fail@plt+0x1598>
   123d8:	ldr	r1, [fp, #8]
   123dc:	movw	r0, #43812	; 0xab24
   123e0:	movt	r0, #1
   123e4:	bl	14440 <__assert_fail@plt+0x35d8>
   123e8:	str	r0, [fp, #20]
   123ec:	ldr	r1, [fp, #8]
   123f0:	movw	r0, #43814	; 0xab26
   123f4:	movt	r0, #1
   123f8:	bl	14440 <__assert_fail@plt+0x35d8>
   123fc:	str	r0, [fp, #24]
   12400:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12404:	tst	r0, #1
   12408:	bne	12474 <__assert_fail@plt+0x160c>
   1240c:	ldr	r0, [fp, #20]
   12410:	str	r0, [fp, #-52]	; 0xffffffcc
   12414:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12418:	ldrsb	r0, [r0]
   1241c:	cmp	r0, #0
   12420:	beq	12470 <__assert_fail@plt+0x1608>
   12424:	b	12428 <__assert_fail@plt+0x15c0>
   12428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1242c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12430:	cmp	r0, r1
   12434:	bcs	12450 <__assert_fail@plt+0x15e8>
   12438:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1243c:	ldrb	r0, [r0]
   12440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12444:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12448:	add	r1, r1, r2
   1244c:	strb	r0, [r1]
   12450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12454:	add	r0, r0, #1
   12458:	str	r0, [fp, #-44]	; 0xffffffd4
   1245c:	b	12460 <__assert_fail@plt+0x15f8>
   12460:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12464:	add	r0, r0, #1
   12468:	str	r0, [fp, #-52]	; 0xffffffcc
   1246c:	b	12414 <__assert_fail@plt+0x15ac>
   12470:	b	12474 <__assert_fail@plt+0x160c>
   12474:	movw	r0, #1
   12478:	strb	r0, [fp, #-57]	; 0xffffffc7
   1247c:	ldr	r0, [fp, #24]
   12480:	str	r0, [fp, #-52]	; 0xffffffcc
   12484:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12488:	bl	10da8 <strlen@plt>
   1248c:	str	r0, [fp, #-56]	; 0xffffffc8
   12490:	b	12530 <__assert_fail@plt+0x16c8>
   12494:	movw	r0, #1
   12498:	strb	r0, [fp, #-57]	; 0xffffffc7
   1249c:	movw	r0, #1
   124a0:	strb	r0, [fp, #-59]	; 0xffffffc5
   124a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   124a8:	tst	r0, #1
   124ac:	bne	124b8 <__assert_fail@plt+0x1650>
   124b0:	movw	r0, #1
   124b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   124b8:	b	124bc <__assert_fail@plt+0x1654>
   124bc:	movw	r0, #2
   124c0:	str	r0, [fp, #8]
   124c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   124c8:	tst	r0, #1
   124cc:	bne	12508 <__assert_fail@plt+0x16a0>
   124d0:	b	124d4 <__assert_fail@plt+0x166c>
   124d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124dc:	cmp	r0, r1
   124e0:	bcs	124f8 <__assert_fail@plt+0x1690>
   124e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   124ec:	add	r0, r0, r1
   124f0:	movw	r1, #39	; 0x27
   124f4:	strb	r1, [r0]
   124f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124fc:	add	r0, r0, #1
   12500:	str	r0, [fp, #-44]	; 0xffffffd4
   12504:	b	12508 <__assert_fail@plt+0x16a0>
   12508:	movw	r0, #43814	; 0xab26
   1250c:	movt	r0, #1
   12510:	str	r0, [fp, #-52]	; 0xffffffcc
   12514:	movw	r0, #1
   12518:	str	r0, [fp, #-56]	; 0xffffffc8
   1251c:	b	12530 <__assert_fail@plt+0x16c8>
   12520:	movw	r0, #0
   12524:	strb	r0, [fp, #-59]	; 0xffffffc5
   12528:	b	12530 <__assert_fail@plt+0x16c8>
   1252c:	bl	10e50 <abort@plt>
   12530:	movw	r0, #0
   12534:	str	r0, [fp, #-40]	; 0xffffffd8
   12538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1253c:	cmn	r0, #1
   12540:	bne	1256c <__assert_fail@plt+0x1704>
   12544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12548:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1254c:	add	r0, r0, r1
   12550:	ldrb	r0, [r0]
   12554:	cmp	r0, #0
   12558:	movw	r0, #0
   1255c:	moveq	r0, #1
   12560:	and	r0, r0, #1
   12564:	str	r0, [sp, #56]	; 0x38
   12568:	b	12588 <__assert_fail@plt+0x1720>
   1256c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12570:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12574:	cmp	r0, r1
   12578:	movw	r0, #0
   1257c:	moveq	r0, #1
   12580:	and	r0, r0, #1
   12584:	str	r0, [sp, #56]	; 0x38
   12588:	ldr	r0, [sp, #56]	; 0x38
   1258c:	cmp	r0, #0
   12590:	movw	r0, #0
   12594:	movne	r0, #1
   12598:	mvn	r1, #0
   1259c:	eor	r0, r0, r1
   125a0:	tst	r0, #1
   125a4:	beq	13794 <__assert_fail@plt+0x292c>
   125a8:	movw	r0, #0
   125ac:	strb	r0, [fp, #-65]	; 0xffffffbf
   125b0:	strb	r0, [fp, #-66]	; 0xffffffbe
   125b4:	strb	r0, [fp, #-67]	; 0xffffffbd
   125b8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   125bc:	tst	r0, #1
   125c0:	beq	1266c <__assert_fail@plt+0x1804>
   125c4:	ldr	r0, [fp, #8]
   125c8:	cmp	r0, #2
   125cc:	beq	1266c <__assert_fail@plt+0x1804>
   125d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125d4:	cmp	r0, #0
   125d8:	beq	1266c <__assert_fail@plt+0x1804>
   125dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   125e4:	add	r0, r0, r1
   125e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   125ec:	cmn	r1, #1
   125f0:	str	r0, [sp, #52]	; 0x34
   125f4:	bne	1261c <__assert_fail@plt+0x17b4>
   125f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125fc:	movw	r1, #1
   12600:	cmp	r1, r0
   12604:	bcs	1261c <__assert_fail@plt+0x17b4>
   12608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1260c:	bl	10da8 <strlen@plt>
   12610:	str	r0, [fp, #-36]	; 0xffffffdc
   12614:	str	r0, [sp, #48]	; 0x30
   12618:	b	12624 <__assert_fail@plt+0x17bc>
   1261c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12620:	str	r0, [sp, #48]	; 0x30
   12624:	ldr	r0, [sp, #48]	; 0x30
   12628:	ldr	r1, [sp, #52]	; 0x34
   1262c:	cmp	r1, r0
   12630:	bhi	1266c <__assert_fail@plt+0x1804>
   12634:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12638:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1263c:	add	r0, r0, r1
   12640:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12644:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12648:	bl	10cd0 <memcmp@plt>
   1264c:	cmp	r0, #0
   12650:	bne	1266c <__assert_fail@plt+0x1804>
   12654:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12658:	tst	r0, #1
   1265c:	beq	12664 <__assert_fail@plt+0x17fc>
   12660:	b	13914 <__assert_fail@plt+0x2aac>
   12664:	movw	r0, #1
   12668:	strb	r0, [fp, #-65]	; 0xffffffbf
   1266c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12670:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12674:	ldrb	r0, [r0, r1]
   12678:	strb	r0, [fp, #-63]	; 0xffffffc1
   1267c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12680:	mov	r1, r0
   12684:	cmp	r0, #126	; 0x7e
   12688:	str	r1, [sp, #44]	; 0x2c
   1268c:	bhi	12efc <__assert_fail@plt+0x2094>
   12690:	add	r0, pc, #8
   12694:	ldr	r1, [sp, #44]	; 0x2c
   12698:	ldr	r0, [r0, r1, lsl #2]
   1269c:	mov	pc, r0
   126a0:	muleq	r1, ip, r8
   126a4:	strdeq	r2, [r1], -ip
   126a8:	strdeq	r2, [r1], -ip
   126ac:	strdeq	r2, [r1], -ip
   126b0:	strdeq	r2, [r1], -ip
   126b4:	strdeq	r2, [r1], -ip
   126b8:	strdeq	r2, [r1], -ip
   126bc:	andeq	r2, r1, r4, lsr #25
   126c0:			; <UNDEFINED> instruction: 0x00012cb0
   126c4:	andeq	r2, r1, r0, ror #25
   126c8:	andeq	r2, r1, r8, asr #25
   126cc:	andeq	r2, r1, ip, ror #25
   126d0:			; <UNDEFINED> instruction: 0x00012cbc
   126d4:	ldrdeq	r2, [r1], -r4
   126d8:	strdeq	r2, [r1], -ip
   126dc:	strdeq	r2, [r1], -ip
   126e0:	strdeq	r2, [r1], -ip
   126e4:	strdeq	r2, [r1], -ip
   126e8:	strdeq	r2, [r1], -ip
   126ec:	strdeq	r2, [r1], -ip
   126f0:	strdeq	r2, [r1], -ip
   126f4:	strdeq	r2, [r1], -ip
   126f8:	strdeq	r2, [r1], -ip
   126fc:	strdeq	r2, [r1], -ip
   12700:	strdeq	r2, [r1], -ip
   12704:	strdeq	r2, [r1], -ip
   12708:	strdeq	r2, [r1], -ip
   1270c:	strdeq	r2, [r1], -ip
   12710:	strdeq	r2, [r1], -ip
   12714:	strdeq	r2, [r1], -ip
   12718:	strdeq	r2, [r1], -ip
   1271c:	strdeq	r2, [r1], -ip
   12720:	ldrdeq	r2, [r1], -r0
   12724:	ldrdeq	r2, [r1], -r8
   12728:	ldrdeq	r2, [r1], -r8
   1272c:			; <UNDEFINED> instruction: 0x00012dbc
   12730:	ldrdeq	r2, [r1], -r8
   12734:	strdeq	r2, [r1], -r0
   12738:	ldrdeq	r2, [r1], -r8
   1273c:	strdeq	r2, [r1], -r8
   12740:	ldrdeq	r2, [r1], -r8
   12744:	ldrdeq	r2, [r1], -r8
   12748:	ldrdeq	r2, [r1], -r8
   1274c:	strdeq	r2, [r1], -r0
   12750:	strdeq	r2, [r1], -r0
   12754:	strdeq	r2, [r1], -r0
   12758:	strdeq	r2, [r1], -r0
   1275c:	strdeq	r2, [r1], -r0
   12760:	strdeq	r2, [r1], -r0
   12764:	strdeq	r2, [r1], -r0
   12768:	strdeq	r2, [r1], -r0
   1276c:	strdeq	r2, [r1], -r0
   12770:	strdeq	r2, [r1], -r0
   12774:	strdeq	r2, [r1], -r0
   12778:	strdeq	r2, [r1], -r0
   1277c:	strdeq	r2, [r1], -r0
   12780:	strdeq	r2, [r1], -r0
   12784:	strdeq	r2, [r1], -r0
   12788:	strdeq	r2, [r1], -r0
   1278c:	ldrdeq	r2, [r1], -r8
   12790:	ldrdeq	r2, [r1], -r8
   12794:	ldrdeq	r2, [r1], -r8
   12798:	ldrdeq	r2, [r1], -r8
   1279c:	andeq	r2, r1, r8, lsr #21
   127a0:	strdeq	r2, [r1], -ip
   127a4:	strdeq	r2, [r1], -r0
   127a8:	strdeq	r2, [r1], -r0
   127ac:	strdeq	r2, [r1], -r0
   127b0:	strdeq	r2, [r1], -r0
   127b4:	strdeq	r2, [r1], -r0
   127b8:	strdeq	r2, [r1], -r0
   127bc:	strdeq	r2, [r1], -r0
   127c0:	strdeq	r2, [r1], -r0
   127c4:	strdeq	r2, [r1], -r0
   127c8:	strdeq	r2, [r1], -r0
   127cc:	strdeq	r2, [r1], -r0
   127d0:	strdeq	r2, [r1], -r0
   127d4:	strdeq	r2, [r1], -r0
   127d8:	strdeq	r2, [r1], -r0
   127dc:	strdeq	r2, [r1], -r0
   127e0:	strdeq	r2, [r1], -r0
   127e4:	strdeq	r2, [r1], -r0
   127e8:	strdeq	r2, [r1], -r0
   127ec:	strdeq	r2, [r1], -r0
   127f0:	strdeq	r2, [r1], -r0
   127f4:	strdeq	r2, [r1], -r0
   127f8:	strdeq	r2, [r1], -r0
   127fc:	strdeq	r2, [r1], -r0
   12800:	strdeq	r2, [r1], -r0
   12804:	strdeq	r2, [r1], -r0
   12808:	strdeq	r2, [r1], -r0
   1280c:	ldrdeq	r2, [r1], -r8
   12810:	strdeq	r2, [r1], -r8
   12814:	strdeq	r2, [r1], -r0
   12818:	ldrdeq	r2, [r1], -r8
   1281c:	strdeq	r2, [r1], -r0
   12820:	ldrdeq	r2, [r1], -r8
   12824:	strdeq	r2, [r1], -r0
   12828:	strdeq	r2, [r1], -r0
   1282c:	strdeq	r2, [r1], -r0
   12830:	strdeq	r2, [r1], -r0
   12834:	strdeq	r2, [r1], -r0
   12838:	strdeq	r2, [r1], -r0
   1283c:	strdeq	r2, [r1], -r0
   12840:	strdeq	r2, [r1], -r0
   12844:	strdeq	r2, [r1], -r0
   12848:	strdeq	r2, [r1], -r0
   1284c:	strdeq	r2, [r1], -r0
   12850:	strdeq	r2, [r1], -r0
   12854:	strdeq	r2, [r1], -r0
   12858:	strdeq	r2, [r1], -r0
   1285c:	strdeq	r2, [r1], -r0
   12860:	strdeq	r2, [r1], -r0
   12864:	strdeq	r2, [r1], -r0
   12868:	strdeq	r2, [r1], -r0
   1286c:	strdeq	r2, [r1], -r0
   12870:	strdeq	r2, [r1], -r0
   12874:	strdeq	r2, [r1], -r0
   12878:	strdeq	r2, [r1], -r0
   1287c:	strdeq	r2, [r1], -r0
   12880:	strdeq	r2, [r1], -r0
   12884:	strdeq	r2, [r1], -r0
   12888:	strdeq	r2, [r1], -r0
   1288c:	andeq	r2, r1, r8, lsl #27
   12890:	ldrdeq	r2, [r1], -r8
   12894:	andeq	r2, r1, r8, lsl #27
   12898:			; <UNDEFINED> instruction: 0x00012dbc
   1289c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   128a0:	tst	r0, #1
   128a4:	beq	12a8c <__assert_fail@plt+0x1c24>
   128a8:	b	128ac <__assert_fail@plt+0x1a44>
   128ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   128b0:	tst	r0, #1
   128b4:	beq	128bc <__assert_fail@plt+0x1a54>
   128b8:	b	13914 <__assert_fail@plt+0x2aac>
   128bc:	movw	r0, #1
   128c0:	strb	r0, [fp, #-66]	; 0xffffffbe
   128c4:	ldr	r0, [fp, #8]
   128c8:	cmp	r0, #2
   128cc:	bne	12980 <__assert_fail@plt+0x1b18>
   128d0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   128d4:	tst	r0, #1
   128d8:	bne	12980 <__assert_fail@plt+0x1b18>
   128dc:	b	128e0 <__assert_fail@plt+0x1a78>
   128e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   128e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128e8:	cmp	r0, r1
   128ec:	bcs	12904 <__assert_fail@plt+0x1a9c>
   128f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   128f8:	add	r0, r0, r1
   128fc:	movw	r1, #39	; 0x27
   12900:	strb	r1, [r0]
   12904:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12908:	add	r0, r0, #1
   1290c:	str	r0, [fp, #-44]	; 0xffffffd4
   12910:	b	12914 <__assert_fail@plt+0x1aac>
   12914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1291c:	cmp	r0, r1
   12920:	bcs	12938 <__assert_fail@plt+0x1ad0>
   12924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12928:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1292c:	add	r0, r0, r1
   12930:	movw	r1, #36	; 0x24
   12934:	strb	r1, [r0]
   12938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1293c:	add	r0, r0, #1
   12940:	str	r0, [fp, #-44]	; 0xffffffd4
   12944:	b	12948 <__assert_fail@plt+0x1ae0>
   12948:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1294c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12950:	cmp	r0, r1
   12954:	bcs	1296c <__assert_fail@plt+0x1b04>
   12958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1295c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12960:	add	r0, r0, r1
   12964:	movw	r1, #39	; 0x27
   12968:	strb	r1, [r0]
   1296c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12970:	add	r0, r0, #1
   12974:	str	r0, [fp, #-44]	; 0xffffffd4
   12978:	movw	r0, #1
   1297c:	strb	r0, [fp, #-60]	; 0xffffffc4
   12980:	b	12984 <__assert_fail@plt+0x1b1c>
   12984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12988:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1298c:	cmp	r0, r1
   12990:	bcs	129a8 <__assert_fail@plt+0x1b40>
   12994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12998:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1299c:	add	r0, r0, r1
   129a0:	movw	r1, #92	; 0x5c
   129a4:	strb	r1, [r0]
   129a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129ac:	add	r0, r0, #1
   129b0:	str	r0, [fp, #-44]	; 0xffffffd4
   129b4:	b	129b8 <__assert_fail@plt+0x1b50>
   129b8:	ldr	r0, [fp, #8]
   129bc:	cmp	r0, #2
   129c0:	beq	12a80 <__assert_fail@plt+0x1c18>
   129c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   129c8:	add	r0, r0, #1
   129cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129d0:	cmp	r0, r1
   129d4:	bcs	12a80 <__assert_fail@plt+0x1c18>
   129d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   129e0:	add	r1, r1, #1
   129e4:	add	r0, r0, r1
   129e8:	ldrb	r0, [r0]
   129ec:	movw	r1, #48	; 0x30
   129f0:	cmp	r1, r0
   129f4:	bgt	12a80 <__assert_fail@plt+0x1c18>
   129f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12a00:	add	r1, r1, #1
   12a04:	add	r0, r0, r1
   12a08:	ldrb	r0, [r0]
   12a0c:	cmp	r0, #57	; 0x39
   12a10:	bgt	12a80 <__assert_fail@plt+0x1c18>
   12a14:	b	12a18 <__assert_fail@plt+0x1bb0>
   12a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a20:	cmp	r0, r1
   12a24:	bcs	12a3c <__assert_fail@plt+0x1bd4>
   12a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a30:	add	r0, r0, r1
   12a34:	movw	r1, #48	; 0x30
   12a38:	strb	r1, [r0]
   12a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a40:	add	r0, r0, #1
   12a44:	str	r0, [fp, #-44]	; 0xffffffd4
   12a48:	b	12a4c <__assert_fail@plt+0x1be4>
   12a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a54:	cmp	r0, r1
   12a58:	bcs	12a70 <__assert_fail@plt+0x1c08>
   12a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a64:	add	r0, r0, r1
   12a68:	movw	r1, #48	; 0x30
   12a6c:	strb	r1, [r0]
   12a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a74:	add	r0, r0, #1
   12a78:	str	r0, [fp, #-44]	; 0xffffffd4
   12a7c:	b	12a80 <__assert_fail@plt+0x1c18>
   12a80:	movw	r0, #48	; 0x30
   12a84:	strb	r0, [fp, #-63]	; 0xffffffc1
   12a88:	b	12aa4 <__assert_fail@plt+0x1c3c>
   12a8c:	ldr	r0, [fp, #12]
   12a90:	and	r0, r0, #1
   12a94:	cmp	r0, #0
   12a98:	beq	12aa0 <__assert_fail@plt+0x1c38>
   12a9c:	b	13784 <__assert_fail@plt+0x291c>
   12aa0:	b	12aa4 <__assert_fail@plt+0x1c3c>
   12aa4:	b	13520 <__assert_fail@plt+0x26b8>
   12aa8:	ldr	r0, [fp, #8]
   12aac:	cmp	r0, #2
   12ab0:	str	r0, [sp, #40]	; 0x28
   12ab4:	beq	12acc <__assert_fail@plt+0x1c64>
   12ab8:	b	12abc <__assert_fail@plt+0x1c54>
   12abc:	ldr	r0, [sp, #40]	; 0x28
   12ac0:	cmp	r0, #5
   12ac4:	beq	12ae0 <__assert_fail@plt+0x1c78>
   12ac8:	b	12c9c <__assert_fail@plt+0x1e34>
   12acc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ad0:	tst	r0, #1
   12ad4:	beq	12adc <__assert_fail@plt+0x1c74>
   12ad8:	b	13914 <__assert_fail@plt+0x2aac>
   12adc:	b	12ca0 <__assert_fail@plt+0x1e38>
   12ae0:	ldr	r0, [fp, #12]
   12ae4:	and	r0, r0, #4
   12ae8:	cmp	r0, #0
   12aec:	beq	12c98 <__assert_fail@plt+0x1e30>
   12af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12af4:	add	r0, r0, #2
   12af8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12afc:	cmp	r0, r1
   12b00:	bcs	12c98 <__assert_fail@plt+0x1e30>
   12b04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b0c:	add	r1, r1, #1
   12b10:	add	r0, r0, r1
   12b14:	ldrb	r0, [r0]
   12b18:	cmp	r0, #63	; 0x3f
   12b1c:	bne	12c98 <__assert_fail@plt+0x1e30>
   12b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b28:	add	r0, r0, r1
   12b2c:	ldrb	r0, [r0, #2]
   12b30:	mov	r1, r0
   12b34:	cmp	r0, #33	; 0x21
   12b38:	str	r1, [sp, #36]	; 0x24
   12b3c:	beq	12b8c <__assert_fail@plt+0x1d24>
   12b40:	b	12b44 <__assert_fail@plt+0x1cdc>
   12b44:	ldr	r0, [sp, #36]	; 0x24
   12b48:	sub	r1, r0, #39	; 0x27
   12b4c:	cmp	r1, #3
   12b50:	bcc	12b8c <__assert_fail@plt+0x1d24>
   12b54:	b	12b58 <__assert_fail@plt+0x1cf0>
   12b58:	ldr	r0, [sp, #36]	; 0x24
   12b5c:	cmp	r0, #45	; 0x2d
   12b60:	beq	12b8c <__assert_fail@plt+0x1d24>
   12b64:	b	12b68 <__assert_fail@plt+0x1d00>
   12b68:	ldr	r0, [sp, #36]	; 0x24
   12b6c:	cmp	r0, #47	; 0x2f
   12b70:	beq	12b8c <__assert_fail@plt+0x1d24>
   12b74:	b	12b78 <__assert_fail@plt+0x1d10>
   12b78:	ldr	r0, [sp, #36]	; 0x24
   12b7c:	sub	r1, r0, #60	; 0x3c
   12b80:	cmp	r1, #2
   12b84:	bhi	12c90 <__assert_fail@plt+0x1e28>
   12b88:	b	12b8c <__assert_fail@plt+0x1d24>
   12b8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b90:	tst	r0, #1
   12b94:	beq	12b9c <__assert_fail@plt+0x1d34>
   12b98:	b	13914 <__assert_fail@plt+0x2aac>
   12b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ba0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ba4:	add	r1, r1, #2
   12ba8:	add	r0, r0, r1
   12bac:	ldrb	r0, [r0]
   12bb0:	strb	r0, [fp, #-63]	; 0xffffffc1
   12bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12bb8:	add	r0, r0, #2
   12bbc:	str	r0, [fp, #-40]	; 0xffffffd8
   12bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bc8:	cmp	r0, r1
   12bcc:	bcs	12be4 <__assert_fail@plt+0x1d7c>
   12bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bd8:	add	r0, r0, r1
   12bdc:	movw	r1, #63	; 0x3f
   12be0:	strb	r1, [r0]
   12be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12be8:	add	r0, r0, #1
   12bec:	str	r0, [fp, #-44]	; 0xffffffd4
   12bf0:	b	12bf4 <__assert_fail@plt+0x1d8c>
   12bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bfc:	cmp	r0, r1
   12c00:	bcs	12c18 <__assert_fail@plt+0x1db0>
   12c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c0c:	add	r0, r0, r1
   12c10:	movw	r1, #34	; 0x22
   12c14:	strb	r1, [r0]
   12c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c1c:	add	r0, r0, #1
   12c20:	str	r0, [fp, #-44]	; 0xffffffd4
   12c24:	b	12c28 <__assert_fail@plt+0x1dc0>
   12c28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c30:	cmp	r0, r1
   12c34:	bcs	12c4c <__assert_fail@plt+0x1de4>
   12c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c40:	add	r0, r0, r1
   12c44:	movw	r1, #34	; 0x22
   12c48:	strb	r1, [r0]
   12c4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c50:	add	r0, r0, #1
   12c54:	str	r0, [fp, #-44]	; 0xffffffd4
   12c58:	b	12c5c <__assert_fail@plt+0x1df4>
   12c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c64:	cmp	r0, r1
   12c68:	bcs	12c80 <__assert_fail@plt+0x1e18>
   12c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c74:	add	r0, r0, r1
   12c78:	movw	r1, #63	; 0x3f
   12c7c:	strb	r1, [r0]
   12c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c84:	add	r0, r0, #1
   12c88:	str	r0, [fp, #-44]	; 0xffffffd4
   12c8c:	b	12c94 <__assert_fail@plt+0x1e2c>
   12c90:	b	12c94 <__assert_fail@plt+0x1e2c>
   12c94:	b	12c98 <__assert_fail@plt+0x1e30>
   12c98:	b	12ca0 <__assert_fail@plt+0x1e38>
   12c9c:	b	12ca0 <__assert_fail@plt+0x1e38>
   12ca0:	b	13520 <__assert_fail@plt+0x26b8>
   12ca4:	movw	r0, #97	; 0x61
   12ca8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cac:	b	12d6c <__assert_fail@plt+0x1f04>
   12cb0:	movw	r0, #98	; 0x62
   12cb4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cb8:	b	12d6c <__assert_fail@plt+0x1f04>
   12cbc:	movw	r0, #102	; 0x66
   12cc0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cc4:	b	12d6c <__assert_fail@plt+0x1f04>
   12cc8:	movw	r0, #110	; 0x6e
   12ccc:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cd0:	b	12d4c <__assert_fail@plt+0x1ee4>
   12cd4:	movw	r0, #114	; 0x72
   12cd8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cdc:	b	12d4c <__assert_fail@plt+0x1ee4>
   12ce0:	movw	r0, #116	; 0x74
   12ce4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ce8:	b	12d4c <__assert_fail@plt+0x1ee4>
   12cec:	movw	r0, #118	; 0x76
   12cf0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cf4:	b	12d6c <__assert_fail@plt+0x1f04>
   12cf8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12cfc:	strb	r0, [fp, #-64]	; 0xffffffc0
   12d00:	ldr	r0, [fp, #8]
   12d04:	cmp	r0, #2
   12d08:	bne	12d20 <__assert_fail@plt+0x1eb8>
   12d0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d10:	tst	r0, #1
   12d14:	beq	12d1c <__assert_fail@plt+0x1eb4>
   12d18:	b	13914 <__assert_fail@plt+0x2aac>
   12d1c:	b	136a8 <__assert_fail@plt+0x2840>
   12d20:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12d24:	tst	r0, #1
   12d28:	beq	12d48 <__assert_fail@plt+0x1ee0>
   12d2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d30:	tst	r0, #1
   12d34:	beq	12d48 <__assert_fail@plt+0x1ee0>
   12d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12d3c:	cmp	r0, #0
   12d40:	beq	12d48 <__assert_fail@plt+0x1ee0>
   12d44:	b	136a8 <__assert_fail@plt+0x2840>
   12d48:	b	12d4c <__assert_fail@plt+0x1ee4>
   12d4c:	ldr	r0, [fp, #8]
   12d50:	cmp	r0, #2
   12d54:	bne	12d68 <__assert_fail@plt+0x1f00>
   12d58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d5c:	tst	r0, #1
   12d60:	beq	12d68 <__assert_fail@plt+0x1f00>
   12d64:	b	13914 <__assert_fail@plt+0x2aac>
   12d68:	b	12d6c <__assert_fail@plt+0x1f04>
   12d6c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12d70:	tst	r0, #1
   12d74:	beq	12d84 <__assert_fail@plt+0x1f1c>
   12d78:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12d7c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d80:	b	13594 <__assert_fail@plt+0x272c>
   12d84:	b	13520 <__assert_fail@plt+0x26b8>
   12d88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d8c:	cmn	r0, #1
   12d90:	bne	12da8 <__assert_fail@plt+0x1f40>
   12d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d98:	ldrb	r0, [r0, #1]
   12d9c:	cmp	r0, #0
   12da0:	beq	12db8 <__assert_fail@plt+0x1f50>
   12da4:	b	12db4 <__assert_fail@plt+0x1f4c>
   12da8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12dac:	cmp	r0, #1
   12db0:	beq	12db8 <__assert_fail@plt+0x1f50>
   12db4:	b	13520 <__assert_fail@plt+0x26b8>
   12db8:	b	12dbc <__assert_fail@plt+0x1f54>
   12dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12dc0:	cmp	r0, #0
   12dc4:	beq	12dcc <__assert_fail@plt+0x1f64>
   12dc8:	b	13520 <__assert_fail@plt+0x26b8>
   12dcc:	b	12dd0 <__assert_fail@plt+0x1f68>
   12dd0:	movw	r0, #1
   12dd4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12dd8:	ldr	r0, [fp, #8]
   12ddc:	cmp	r0, #2
   12de0:	bne	12df4 <__assert_fail@plt+0x1f8c>
   12de4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12de8:	tst	r0, #1
   12dec:	beq	12df4 <__assert_fail@plt+0x1f8c>
   12df0:	b	13914 <__assert_fail@plt+0x2aac>
   12df4:	b	13520 <__assert_fail@plt+0x26b8>
   12df8:	movw	r0, #1
   12dfc:	strb	r0, [fp, #-61]	; 0xffffffc3
   12e00:	strb	r0, [fp, #-67]	; 0xffffffbd
   12e04:	ldr	r0, [fp, #8]
   12e08:	cmp	r0, #2
   12e0c:	bne	12eec <__assert_fail@plt+0x2084>
   12e10:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12e14:	tst	r0, #1
   12e18:	beq	12e20 <__assert_fail@plt+0x1fb8>
   12e1c:	b	13914 <__assert_fail@plt+0x2aac>
   12e20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e24:	cmp	r0, #0
   12e28:	beq	12e48 <__assert_fail@plt+0x1fe0>
   12e2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12e30:	cmp	r0, #0
   12e34:	bne	12e48 <__assert_fail@plt+0x1fe0>
   12e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e3c:	str	r0, [fp, #-48]	; 0xffffffd0
   12e40:	movw	r0, #0
   12e44:	str	r0, [fp, #-28]	; 0xffffffe4
   12e48:	b	12e4c <__assert_fail@plt+0x1fe4>
   12e4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e54:	cmp	r0, r1
   12e58:	bcs	12e70 <__assert_fail@plt+0x2008>
   12e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e64:	add	r0, r0, r1
   12e68:	movw	r1, #39	; 0x27
   12e6c:	strb	r1, [r0]
   12e70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e74:	add	r0, r0, #1
   12e78:	str	r0, [fp, #-44]	; 0xffffffd4
   12e7c:	b	12e80 <__assert_fail@plt+0x2018>
   12e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e88:	cmp	r0, r1
   12e8c:	bcs	12ea4 <__assert_fail@plt+0x203c>
   12e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e98:	add	r0, r0, r1
   12e9c:	movw	r1, #92	; 0x5c
   12ea0:	strb	r1, [r0]
   12ea4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ea8:	add	r0, r0, #1
   12eac:	str	r0, [fp, #-44]	; 0xffffffd4
   12eb0:	b	12eb4 <__assert_fail@plt+0x204c>
   12eb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ebc:	cmp	r0, r1
   12ec0:	bcs	12ed8 <__assert_fail@plt+0x2070>
   12ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ecc:	add	r0, r0, r1
   12ed0:	movw	r1, #39	; 0x27
   12ed4:	strb	r1, [r0]
   12ed8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12edc:	add	r0, r0, #1
   12ee0:	str	r0, [fp, #-44]	; 0xffffffd4
   12ee4:	movw	r0, #0
   12ee8:	strb	r0, [fp, #-60]	; 0xffffffc4
   12eec:	b	13520 <__assert_fail@plt+0x26b8>
   12ef0:	movw	r0, #1
   12ef4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ef8:	b	13520 <__assert_fail@plt+0x26b8>
   12efc:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12f00:	tst	r0, #1
   12f04:	beq	12f48 <__assert_fail@plt+0x20e0>
   12f08:	mov	r0, #1
   12f0c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f10:	bl	10d84 <__ctype_b_loc@plt>
   12f14:	ldr	r0, [r0]
   12f18:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   12f1c:	mov	r1, lr
   12f20:	add	r0, r0, lr, lsl #1
   12f24:	ldrh	r0, [r0]
   12f28:	and	r0, r0, #16384	; 0x4000
   12f2c:	cmp	r0, #0
   12f30:	movw	r0, #0
   12f34:	movne	r0, #1
   12f38:	and	r0, r0, #1
   12f3c:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f40:	str	r1, [sp, #32]
   12f44:	b	131d4 <__assert_fail@plt+0x236c>
   12f48:	sub	r0, fp, #84	; 0x54
   12f4c:	movw	r1, #0
   12f50:	and	r1, r1, #255	; 0xff
   12f54:	movw	r2, #8
   12f58:	bl	10dd8 <memset@plt>
   12f5c:	movw	r0, #0
   12f60:	str	r0, [fp, #-72]	; 0xffffffb8
   12f64:	movw	r0, #1
   12f68:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f70:	cmn	r0, #1
   12f74:	bne	12f84 <__assert_fail@plt+0x211c>
   12f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f7c:	bl	10da8 <strlen@plt>
   12f80:	str	r0, [fp, #-36]	; 0xffffffdc
   12f84:	b	12f88 <__assert_fail@plt+0x2120>
   12f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12f94:	add	r1, r1, r2
   12f98:	add	r1, r0, r1
   12f9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12fa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12fa4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12fa8:	add	r2, r2, r3
   12fac:	sub	r2, r0, r2
   12fb0:	sub	r0, fp, #88	; 0x58
   12fb4:	sub	r3, fp, #84	; 0x54
   12fb8:	bl	184e4 <__assert_fail@plt+0x767c>
   12fbc:	str	r0, [sp, #92]	; 0x5c
   12fc0:	ldr	r0, [sp, #92]	; 0x5c
   12fc4:	cmp	r0, #0
   12fc8:	bne	12fd0 <__assert_fail@plt+0x2168>
   12fcc:	b	131d0 <__assert_fail@plt+0x2368>
   12fd0:	ldr	r0, [sp, #92]	; 0x5c
   12fd4:	cmn	r0, #1
   12fd8:	bne	12fe8 <__assert_fail@plt+0x2180>
   12fdc:	movw	r0, #0
   12fe0:	strb	r0, [fp, #-73]	; 0xffffffb7
   12fe4:	b	131d0 <__assert_fail@plt+0x2368>
   12fe8:	ldr	r0, [sp, #92]	; 0x5c
   12fec:	cmn	r0, #2
   12ff0:	bne	13064 <__assert_fail@plt+0x21fc>
   12ff4:	movw	r0, #0
   12ff8:	strb	r0, [fp, #-73]	; 0xffffffb7
   12ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13000:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13004:	add	r0, r0, r1
   13008:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1300c:	cmp	r0, r1
   13010:	movw	r0, #0
   13014:	str	r0, [sp, #28]
   13018:	bcs	13044 <__assert_fail@plt+0x21dc>
   1301c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13020:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13024:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13028:	add	r1, r1, r2
   1302c:	add	r0, r0, r1
   13030:	ldrb	r0, [r0]
   13034:	cmp	r0, #0
   13038:	movw	r0, #0
   1303c:	movne	r0, #1
   13040:	str	r0, [sp, #28]
   13044:	ldr	r0, [sp, #28]
   13048:	tst	r0, #1
   1304c:	beq	13060 <__assert_fail@plt+0x21f8>
   13050:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13054:	add	r0, r0, #1
   13058:	str	r0, [fp, #-72]	; 0xffffffb8
   1305c:	b	12ffc <__assert_fail@plt+0x2194>
   13060:	b	131d0 <__assert_fail@plt+0x2368>
   13064:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13068:	tst	r0, #1
   1306c:	beq	13178 <__assert_fail@plt+0x2310>
   13070:	ldr	r0, [fp, #8]
   13074:	cmp	r0, #2
   13078:	bne	13178 <__assert_fail@plt+0x2310>
   1307c:	movw	r0, #1
   13080:	str	r0, [sp, #88]	; 0x58
   13084:	ldr	r0, [sp, #88]	; 0x58
   13088:	ldr	r1, [sp, #92]	; 0x5c
   1308c:	cmp	r0, r1
   13090:	bcs	13174 <__assert_fail@plt+0x230c>
   13094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13098:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1309c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   130a0:	add	r1, r1, r2
   130a4:	ldr	r2, [sp, #88]	; 0x58
   130a8:	add	r1, r1, r2
   130ac:	ldrb	r0, [r0, r1]
   130b0:	sub	r0, r0, #91	; 0x5b
   130b4:	cmp	r0, #33	; 0x21
   130b8:	str	r0, [sp, #24]
   130bc:	bhi	1315c <__assert_fail@plt+0x22f4>
   130c0:	add	r0, pc, #8
   130c4:	ldr	r1, [sp, #24]
   130c8:	ldr	r0, [r0, r1, lsl #2]
   130cc:	mov	pc, r0
   130d0:	andeq	r3, r1, r8, asr r1
   130d4:	andeq	r3, r1, r8, asr r1
   130d8:	andeq	r3, r1, ip, asr r1
   130dc:	andeq	r3, r1, r8, asr r1
   130e0:	andeq	r3, r1, ip, asr r1
   130e4:	andeq	r3, r1, r8, asr r1
   130e8:	andeq	r3, r1, ip, asr r1
   130ec:	andeq	r3, r1, ip, asr r1
   130f0:	andeq	r3, r1, ip, asr r1
   130f4:	andeq	r3, r1, ip, asr r1
   130f8:	andeq	r3, r1, ip, asr r1
   130fc:	andeq	r3, r1, ip, asr r1
   13100:	andeq	r3, r1, ip, asr r1
   13104:	andeq	r3, r1, ip, asr r1
   13108:	andeq	r3, r1, ip, asr r1
   1310c:	andeq	r3, r1, ip, asr r1
   13110:	andeq	r3, r1, ip, asr r1
   13114:	andeq	r3, r1, ip, asr r1
   13118:	andeq	r3, r1, ip, asr r1
   1311c:	andeq	r3, r1, ip, asr r1
   13120:	andeq	r3, r1, ip, asr r1
   13124:	andeq	r3, r1, ip, asr r1
   13128:	andeq	r3, r1, ip, asr r1
   1312c:	andeq	r3, r1, ip, asr r1
   13130:	andeq	r3, r1, ip, asr r1
   13134:	andeq	r3, r1, ip, asr r1
   13138:	andeq	r3, r1, ip, asr r1
   1313c:	andeq	r3, r1, ip, asr r1
   13140:	andeq	r3, r1, ip, asr r1
   13144:	andeq	r3, r1, ip, asr r1
   13148:	andeq	r3, r1, ip, asr r1
   1314c:	andeq	r3, r1, ip, asr r1
   13150:	andeq	r3, r1, ip, asr r1
   13154:	andeq	r3, r1, r8, asr r1
   13158:	b	13914 <__assert_fail@plt+0x2aac>
   1315c:	b	13160 <__assert_fail@plt+0x22f8>
   13160:	b	13164 <__assert_fail@plt+0x22fc>
   13164:	ldr	r0, [sp, #88]	; 0x58
   13168:	add	r0, r0, #1
   1316c:	str	r0, [sp, #88]	; 0x58
   13170:	b	13084 <__assert_fail@plt+0x221c>
   13174:	b	13178 <__assert_fail@plt+0x2310>
   13178:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1317c:	bl	10cf4 <iswprint@plt>
   13180:	cmp	r0, #0
   13184:	bne	13190 <__assert_fail@plt+0x2328>
   13188:	movw	r0, #0
   1318c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13190:	ldr	r0, [sp, #92]	; 0x5c
   13194:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13198:	add	r0, r1, r0
   1319c:	str	r0, [fp, #-72]	; 0xffffffb8
   131a0:	b	131a4 <__assert_fail@plt+0x233c>
   131a4:	b	131a8 <__assert_fail@plt+0x2340>
   131a8:	b	131ac <__assert_fail@plt+0x2344>
   131ac:	sub	r0, fp, #84	; 0x54
   131b0:	bl	10cc4 <mbsinit@plt>
   131b4:	cmp	r0, #0
   131b8:	movw	r0, #0
   131bc:	movne	r0, #1
   131c0:	mvn	lr, #0
   131c4:	eor	r0, r0, lr
   131c8:	tst	r0, #1
   131cc:	bne	12f88 <__assert_fail@plt+0x2120>
   131d0:	b	131d4 <__assert_fail@plt+0x236c>
   131d4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   131d8:	and	r0, r0, #1
   131dc:	strb	r0, [fp, #-67]	; 0xffffffbd
   131e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131e4:	movw	r1, #1
   131e8:	cmp	r1, r0
   131ec:	bcc	13208 <__assert_fail@plt+0x23a0>
   131f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   131f4:	tst	r0, #1
   131f8:	beq	1351c <__assert_fail@plt+0x26b4>
   131fc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13200:	tst	r0, #1
   13204:	bne	1351c <__assert_fail@plt+0x26b4>
   13208:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1320c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13210:	add	r0, r0, r1
   13214:	str	r0, [sp, #84]	; 0x54
   13218:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1321c:	tst	r0, #1
   13220:	beq	133d0 <__assert_fail@plt+0x2568>
   13224:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13228:	tst	r0, #1
   1322c:	bne	133d0 <__assert_fail@plt+0x2568>
   13230:	b	13234 <__assert_fail@plt+0x23cc>
   13234:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13238:	tst	r0, #1
   1323c:	beq	13244 <__assert_fail@plt+0x23dc>
   13240:	b	13914 <__assert_fail@plt+0x2aac>
   13244:	movw	r0, #1
   13248:	strb	r0, [fp, #-66]	; 0xffffffbe
   1324c:	ldr	r0, [fp, #8]
   13250:	cmp	r0, #2
   13254:	bne	13308 <__assert_fail@plt+0x24a0>
   13258:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1325c:	tst	r0, #1
   13260:	bne	13308 <__assert_fail@plt+0x24a0>
   13264:	b	13268 <__assert_fail@plt+0x2400>
   13268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1326c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13270:	cmp	r0, r1
   13274:	bcs	1328c <__assert_fail@plt+0x2424>
   13278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1327c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13280:	add	r0, r0, r1
   13284:	movw	r1, #39	; 0x27
   13288:	strb	r1, [r0]
   1328c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13290:	add	r0, r0, #1
   13294:	str	r0, [fp, #-44]	; 0xffffffd4
   13298:	b	1329c <__assert_fail@plt+0x2434>
   1329c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132a4:	cmp	r0, r1
   132a8:	bcs	132c0 <__assert_fail@plt+0x2458>
   132ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132b4:	add	r0, r0, r1
   132b8:	movw	r1, #36	; 0x24
   132bc:	strb	r1, [r0]
   132c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132c4:	add	r0, r0, #1
   132c8:	str	r0, [fp, #-44]	; 0xffffffd4
   132cc:	b	132d0 <__assert_fail@plt+0x2468>
   132d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132d8:	cmp	r0, r1
   132dc:	bcs	132f4 <__assert_fail@plt+0x248c>
   132e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132e8:	add	r0, r0, r1
   132ec:	movw	r1, #39	; 0x27
   132f0:	strb	r1, [r0]
   132f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132f8:	add	r0, r0, #1
   132fc:	str	r0, [fp, #-44]	; 0xffffffd4
   13300:	movw	r0, #1
   13304:	strb	r0, [fp, #-60]	; 0xffffffc4
   13308:	b	1330c <__assert_fail@plt+0x24a4>
   1330c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13314:	cmp	r0, r1
   13318:	bcs	13330 <__assert_fail@plt+0x24c8>
   1331c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13320:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13324:	add	r0, r0, r1
   13328:	movw	r1, #92	; 0x5c
   1332c:	strb	r1, [r0]
   13330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13334:	add	r0, r0, #1
   13338:	str	r0, [fp, #-44]	; 0xffffffd4
   1333c:	b	13340 <__assert_fail@plt+0x24d8>
   13340:	b	13344 <__assert_fail@plt+0x24dc>
   13344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1334c:	cmp	r0, r1
   13350:	bcs	13370 <__assert_fail@plt+0x2508>
   13354:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13358:	asr	r0, r0, #6
   1335c:	add	r0, r0, #48	; 0x30
   13360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13364:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13368:	add	r1, r1, r2
   1336c:	strb	r0, [r1]
   13370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13374:	add	r0, r0, #1
   13378:	str	r0, [fp, #-44]	; 0xffffffd4
   1337c:	b	13380 <__assert_fail@plt+0x2518>
   13380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13388:	cmp	r0, r1
   1338c:	bcs	133b0 <__assert_fail@plt+0x2548>
   13390:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13394:	asr	r0, r0, #3
   13398:	and	r0, r0, #7
   1339c:	add	r0, r0, #48	; 0x30
   133a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   133a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   133a8:	add	r1, r1, r2
   133ac:	strb	r0, [r1]
   133b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133b4:	add	r0, r0, #1
   133b8:	str	r0, [fp, #-44]	; 0xffffffd4
   133bc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   133c0:	and	r0, r0, #7
   133c4:	add	r0, r0, #48	; 0x30
   133c8:	strb	r0, [fp, #-63]	; 0xffffffc1
   133cc:	b	1341c <__assert_fail@plt+0x25b4>
   133d0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   133d4:	tst	r0, #1
   133d8:	beq	13418 <__assert_fail@plt+0x25b0>
   133dc:	b	133e0 <__assert_fail@plt+0x2578>
   133e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133e8:	cmp	r0, r1
   133ec:	bcs	13404 <__assert_fail@plt+0x259c>
   133f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133f8:	add	r0, r0, r1
   133fc:	movw	r1, #92	; 0x5c
   13400:	strb	r1, [r0]
   13404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13408:	add	r0, r0, #1
   1340c:	str	r0, [fp, #-44]	; 0xffffffd4
   13410:	movw	r0, #0
   13414:	strb	r0, [fp, #-65]	; 0xffffffbf
   13418:	b	1341c <__assert_fail@plt+0x25b4>
   1341c:	ldr	r0, [sp, #84]	; 0x54
   13420:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13424:	add	r1, r1, #1
   13428:	cmp	r0, r1
   1342c:	bhi	13434 <__assert_fail@plt+0x25cc>
   13430:	b	13518 <__assert_fail@plt+0x26b0>
   13434:	b	13438 <__assert_fail@plt+0x25d0>
   13438:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1343c:	tst	r0, #1
   13440:	beq	134c0 <__assert_fail@plt+0x2658>
   13444:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13448:	tst	r0, #1
   1344c:	bne	134c0 <__assert_fail@plt+0x2658>
   13450:	b	13454 <__assert_fail@plt+0x25ec>
   13454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13458:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1345c:	cmp	r0, r1
   13460:	bcs	13478 <__assert_fail@plt+0x2610>
   13464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13468:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1346c:	add	r0, r0, r1
   13470:	movw	r1, #39	; 0x27
   13474:	strb	r1, [r0]
   13478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1347c:	add	r0, r0, #1
   13480:	str	r0, [fp, #-44]	; 0xffffffd4
   13484:	b	13488 <__assert_fail@plt+0x2620>
   13488:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1348c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13490:	cmp	r0, r1
   13494:	bcs	134ac <__assert_fail@plt+0x2644>
   13498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1349c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   134a0:	add	r0, r0, r1
   134a4:	movw	r1, #39	; 0x27
   134a8:	strb	r1, [r0]
   134ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134b0:	add	r0, r0, #1
   134b4:	str	r0, [fp, #-44]	; 0xffffffd4
   134b8:	movw	r0, #0
   134bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   134c0:	b	134c4 <__assert_fail@plt+0x265c>
   134c4:	b	134c8 <__assert_fail@plt+0x2660>
   134c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134d0:	cmp	r0, r1
   134d4:	bcs	134ec <__assert_fail@plt+0x2684>
   134d8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   134dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   134e4:	add	r1, r1, r2
   134e8:	strb	r0, [r1]
   134ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134f0:	add	r0, r0, #1
   134f4:	str	r0, [fp, #-44]	; 0xffffffd4
   134f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13500:	add	r1, r1, #1
   13504:	str	r1, [fp, #-40]	; 0xffffffd8
   13508:	add	r0, r0, r1
   1350c:	ldrb	r0, [r0]
   13510:	strb	r0, [fp, #-63]	; 0xffffffc1
   13514:	b	13218 <__assert_fail@plt+0x23b0>
   13518:	b	136a8 <__assert_fail@plt+0x2840>
   1351c:	b	13520 <__assert_fail@plt+0x26b8>
   13520:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13524:	tst	r0, #1
   13528:	beq	13538 <__assert_fail@plt+0x26d0>
   1352c:	ldr	r0, [fp, #8]
   13530:	cmp	r0, #2
   13534:	bne	13544 <__assert_fail@plt+0x26dc>
   13538:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1353c:	tst	r0, #1
   13540:	beq	13580 <__assert_fail@plt+0x2718>
   13544:	ldr	r0, [fp, #16]
   13548:	movw	r1, #0
   1354c:	cmp	r0, r1
   13550:	beq	13580 <__assert_fail@plt+0x2718>
   13554:	ldr	r0, [fp, #16]
   13558:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1355c:	lsr	r1, r1, #5
   13560:	add	r0, r0, r1, lsl #2
   13564:	ldr	r0, [r0]
   13568:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1356c:	and	r1, r1, #31
   13570:	lsr	r0, r0, r1
   13574:	and	r0, r0, #1
   13578:	cmp	r0, #0
   1357c:	bne	13590 <__assert_fail@plt+0x2728>
   13580:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13584:	tst	r0, #1
   13588:	bne	13590 <__assert_fail@plt+0x2728>
   1358c:	b	136a8 <__assert_fail@plt+0x2840>
   13590:	b	13594 <__assert_fail@plt+0x272c>
   13594:	b	13598 <__assert_fail@plt+0x2730>
   13598:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1359c:	tst	r0, #1
   135a0:	beq	135a8 <__assert_fail@plt+0x2740>
   135a4:	b	13914 <__assert_fail@plt+0x2aac>
   135a8:	movw	r0, #1
   135ac:	strb	r0, [fp, #-66]	; 0xffffffbe
   135b0:	ldr	r0, [fp, #8]
   135b4:	cmp	r0, #2
   135b8:	bne	1366c <__assert_fail@plt+0x2804>
   135bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   135c0:	tst	r0, #1
   135c4:	bne	1366c <__assert_fail@plt+0x2804>
   135c8:	b	135cc <__assert_fail@plt+0x2764>
   135cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135d4:	cmp	r0, r1
   135d8:	bcs	135f0 <__assert_fail@plt+0x2788>
   135dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135e4:	add	r0, r0, r1
   135e8:	movw	r1, #39	; 0x27
   135ec:	strb	r1, [r0]
   135f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135f4:	add	r0, r0, #1
   135f8:	str	r0, [fp, #-44]	; 0xffffffd4
   135fc:	b	13600 <__assert_fail@plt+0x2798>
   13600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13604:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13608:	cmp	r0, r1
   1360c:	bcs	13624 <__assert_fail@plt+0x27bc>
   13610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13614:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13618:	add	r0, r0, r1
   1361c:	movw	r1, #36	; 0x24
   13620:	strb	r1, [r0]
   13624:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13628:	add	r0, r0, #1
   1362c:	str	r0, [fp, #-44]	; 0xffffffd4
   13630:	b	13634 <__assert_fail@plt+0x27cc>
   13634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13638:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1363c:	cmp	r0, r1
   13640:	bcs	13658 <__assert_fail@plt+0x27f0>
   13644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1364c:	add	r0, r0, r1
   13650:	movw	r1, #39	; 0x27
   13654:	strb	r1, [r0]
   13658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1365c:	add	r0, r0, #1
   13660:	str	r0, [fp, #-44]	; 0xffffffd4
   13664:	movw	r0, #1
   13668:	strb	r0, [fp, #-60]	; 0xffffffc4
   1366c:	b	13670 <__assert_fail@plt+0x2808>
   13670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13678:	cmp	r0, r1
   1367c:	bcs	13694 <__assert_fail@plt+0x282c>
   13680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13684:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13688:	add	r0, r0, r1
   1368c:	movw	r1, #92	; 0x5c
   13690:	strb	r1, [r0]
   13694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13698:	add	r0, r0, #1
   1369c:	str	r0, [fp, #-44]	; 0xffffffd4
   136a0:	b	136a4 <__assert_fail@plt+0x283c>
   136a4:	b	136a8 <__assert_fail@plt+0x2840>
   136a8:	b	136ac <__assert_fail@plt+0x2844>
   136ac:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   136b0:	tst	r0, #1
   136b4:	beq	13734 <__assert_fail@plt+0x28cc>
   136b8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   136bc:	tst	r0, #1
   136c0:	bne	13734 <__assert_fail@plt+0x28cc>
   136c4:	b	136c8 <__assert_fail@plt+0x2860>
   136c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136d0:	cmp	r0, r1
   136d4:	bcs	136ec <__assert_fail@plt+0x2884>
   136d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136e0:	add	r0, r0, r1
   136e4:	movw	r1, #39	; 0x27
   136e8:	strb	r1, [r0]
   136ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136f0:	add	r0, r0, #1
   136f4:	str	r0, [fp, #-44]	; 0xffffffd4
   136f8:	b	136fc <__assert_fail@plt+0x2894>
   136fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13700:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13704:	cmp	r0, r1
   13708:	bcs	13720 <__assert_fail@plt+0x28b8>
   1370c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13710:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13714:	add	r0, r0, r1
   13718:	movw	r1, #39	; 0x27
   1371c:	strb	r1, [r0]
   13720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13724:	add	r0, r0, #1
   13728:	str	r0, [fp, #-44]	; 0xffffffd4
   1372c:	movw	r0, #0
   13730:	strb	r0, [fp, #-60]	; 0xffffffc4
   13734:	b	13738 <__assert_fail@plt+0x28d0>
   13738:	b	1373c <__assert_fail@plt+0x28d4>
   1373c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13740:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13744:	cmp	r0, r1
   13748:	bcs	13760 <__assert_fail@plt+0x28f8>
   1374c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13754:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13758:	add	r1, r1, r2
   1375c:	strb	r0, [r1]
   13760:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13764:	add	r0, r0, #1
   13768:	str	r0, [fp, #-44]	; 0xffffffd4
   1376c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13770:	tst	r0, #1
   13774:	bne	13780 <__assert_fail@plt+0x2918>
   13778:	movw	r0, #0
   1377c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13780:	b	13784 <__assert_fail@plt+0x291c>
   13784:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13788:	add	r0, r0, #1
   1378c:	str	r0, [fp, #-40]	; 0xffffffd8
   13790:	b	12538 <__assert_fail@plt+0x16d0>
   13794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13798:	cmp	r0, #0
   1379c:	bne	137bc <__assert_fail@plt+0x2954>
   137a0:	ldr	r0, [fp, #8]
   137a4:	cmp	r0, #2
   137a8:	bne	137bc <__assert_fail@plt+0x2954>
   137ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137b0:	tst	r0, #1
   137b4:	beq	137bc <__assert_fail@plt+0x2954>
   137b8:	b	13914 <__assert_fail@plt+0x2aac>
   137bc:	ldr	r0, [fp, #8]
   137c0:	cmp	r0, #2
   137c4:	bne	13864 <__assert_fail@plt+0x29fc>
   137c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137cc:	tst	r0, #1
   137d0:	bne	13864 <__assert_fail@plt+0x29fc>
   137d4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   137d8:	tst	r0, #1
   137dc:	beq	13864 <__assert_fail@plt+0x29fc>
   137e0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   137e4:	tst	r0, #1
   137e8:	beq	13830 <__assert_fail@plt+0x29c8>
   137ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   137f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137fc:	ldr	ip, [fp, #12]
   13800:	ldr	lr, [fp, #16]
   13804:	ldr	r4, [fp, #20]
   13808:	ldr	r5, [fp, #24]
   1380c:	movw	r6, #5
   13810:	str	r6, [sp]
   13814:	str	ip, [sp, #4]
   13818:	str	lr, [sp, #8]
   1381c:	str	r4, [sp, #12]
   13820:	str	r5, [sp, #16]
   13824:	bl	12250 <__assert_fail@plt+0x13e8>
   13828:	str	r0, [fp, #-20]	; 0xffffffec
   1382c:	b	1397c <__assert_fail@plt+0x2b14>
   13830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13834:	cmp	r0, #0
   13838:	bne	1385c <__assert_fail@plt+0x29f4>
   1383c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13840:	cmp	r0, #0
   13844:	beq	1385c <__assert_fail@plt+0x29f4>
   13848:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1384c:	str	r0, [fp, #-28]	; 0xffffffe4
   13850:	movw	r0, #0
   13854:	str	r0, [fp, #-44]	; 0xffffffd4
   13858:	b	122f8 <__assert_fail@plt+0x1490>
   1385c:	b	13860 <__assert_fail@plt+0x29f8>
   13860:	b	13864 <__assert_fail@plt+0x29fc>
   13864:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13868:	movw	r1, #0
   1386c:	cmp	r0, r1
   13870:	beq	138e4 <__assert_fail@plt+0x2a7c>
   13874:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13878:	tst	r0, #1
   1387c:	bne	138e4 <__assert_fail@plt+0x2a7c>
   13880:	b	13884 <__assert_fail@plt+0x2a1c>
   13884:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13888:	ldrsb	r0, [r0]
   1388c:	cmp	r0, #0
   13890:	beq	138e0 <__assert_fail@plt+0x2a78>
   13894:	b	13898 <__assert_fail@plt+0x2a30>
   13898:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1389c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138a0:	cmp	r0, r1
   138a4:	bcs	138c0 <__assert_fail@plt+0x2a58>
   138a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138ac:	ldrb	r0, [r0]
   138b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   138b8:	add	r1, r1, r2
   138bc:	strb	r0, [r1]
   138c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138c4:	add	r0, r0, #1
   138c8:	str	r0, [fp, #-44]	; 0xffffffd4
   138cc:	b	138d0 <__assert_fail@plt+0x2a68>
   138d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138d4:	add	r0, r0, #1
   138d8:	str	r0, [fp, #-52]	; 0xffffffcc
   138dc:	b	13884 <__assert_fail@plt+0x2a1c>
   138e0:	b	138e4 <__assert_fail@plt+0x2a7c>
   138e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138ec:	cmp	r0, r1
   138f0:	bcs	13908 <__assert_fail@plt+0x2aa0>
   138f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138fc:	add	r0, r0, r1
   13900:	movw	r1, #0
   13904:	strb	r1, [r0]
   13908:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1390c:	str	r0, [fp, #-20]	; 0xffffffec
   13910:	b	1397c <__assert_fail@plt+0x2b14>
   13914:	ldr	r0, [fp, #8]
   13918:	cmp	r0, #2
   1391c:	bne	13934 <__assert_fail@plt+0x2acc>
   13920:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13924:	tst	r0, #1
   13928:	beq	13934 <__assert_fail@plt+0x2acc>
   1392c:	movw	r0, #4
   13930:	str	r0, [fp, #8]
   13934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1393c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13940:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13944:	ldr	ip, [fp, #8]
   13948:	ldr	lr, [fp, #12]
   1394c:	mvn	r4, #2
   13950:	and	lr, lr, r4
   13954:	ldr	r4, [fp, #20]
   13958:	ldr	r5, [fp, #24]
   1395c:	str	ip, [sp]
   13960:	str	lr, [sp, #4]
   13964:	movw	ip, #0
   13968:	str	ip, [sp, #8]
   1396c:	str	r4, [sp, #12]
   13970:	str	r5, [sp, #16]
   13974:	bl	12250 <__assert_fail@plt+0x13e8>
   13978:	str	r0, [fp, #-20]	; 0xffffffec
   1397c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13980:	sub	sp, fp, #16
   13984:	pop	{r4, r5, r6, sl, fp, pc}
   13988:	push	{fp, lr}
   1398c:	mov	fp, sp
   13990:	sub	sp, sp, #16
   13994:	str	r0, [fp, #-4]
   13998:	str	r1, [sp, #8]
   1399c:	str	r2, [sp, #4]
   139a0:	ldr	r0, [fp, #-4]
   139a4:	ldr	r1, [sp, #8]
   139a8:	ldr	r3, [sp, #4]
   139ac:	movw	r2, #0
   139b0:	bl	139bc <__assert_fail@plt+0x2b54>
   139b4:	mov	sp, fp
   139b8:	pop	{fp, pc}
   139bc:	push	{r4, r5, r6, sl, fp, lr}
   139c0:	add	fp, sp, #16
   139c4:	sub	sp, sp, #72	; 0x48
   139c8:	str	r0, [fp, #-20]	; 0xffffffec
   139cc:	str	r1, [fp, #-24]	; 0xffffffe8
   139d0:	str	r2, [fp, #-28]	; 0xffffffe4
   139d4:	str	r3, [fp, #-32]	; 0xffffffe0
   139d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139dc:	movw	r1, #0
   139e0:	cmp	r0, r1
   139e4:	beq	139f4 <__assert_fail@plt+0x2b8c>
   139e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139ec:	str	r0, [sp, #32]
   139f0:	b	13a04 <__assert_fail@plt+0x2b9c>
   139f4:	movw	r0, #45368	; 0xb138
   139f8:	movt	r0, #2
   139fc:	str	r0, [sp, #32]
   13a00:	b	13a04 <__assert_fail@plt+0x2b9c>
   13a04:	ldr	r0, [sp, #32]
   13a08:	str	r0, [fp, #-36]	; 0xffffffdc
   13a0c:	bl	10dc0 <__errno_location@plt>
   13a10:	ldr	r0, [r0]
   13a14:	str	r0, [fp, #-40]	; 0xffffffd8
   13a18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a1c:	ldr	r0, [r0, #4]
   13a20:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13a24:	movw	r1, #0
   13a28:	cmp	lr, r1
   13a2c:	movw	lr, #0
   13a30:	movne	lr, #1
   13a34:	tst	lr, #1
   13a38:	mov	lr, r1
   13a3c:	moveq	lr, #1
   13a40:	orr	r0, r0, lr
   13a44:	str	r0, [sp, #44]	; 0x2c
   13a48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a54:	ldr	r0, [r0]
   13a58:	ldr	lr, [sp, #44]	; 0x2c
   13a5c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13a60:	add	ip, ip, #8
   13a64:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13a68:	ldr	r4, [r4, #40]	; 0x28
   13a6c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13a70:	ldr	r5, [r5, #44]	; 0x2c
   13a74:	str	r0, [sp, #28]
   13a78:	mov	r0, r1
   13a7c:	ldr	r6, [sp, #28]
   13a80:	str	r6, [sp]
   13a84:	str	lr, [sp, #4]
   13a88:	str	ip, [sp, #8]
   13a8c:	str	r4, [sp, #12]
   13a90:	str	r5, [sp, #16]
   13a94:	bl	12250 <__assert_fail@plt+0x13e8>
   13a98:	add	r0, r0, #1
   13a9c:	str	r0, [sp, #40]	; 0x28
   13aa0:	ldr	r0, [sp, #40]	; 0x28
   13aa4:	bl	14ee0 <__assert_fail@plt+0x4078>
   13aa8:	str	r0, [sp, #36]	; 0x24
   13aac:	ldr	r0, [sp, #36]	; 0x24
   13ab0:	ldr	r1, [sp, #40]	; 0x28
   13ab4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13abc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13ac0:	ldr	ip, [ip]
   13ac4:	ldr	lr, [sp, #44]	; 0x2c
   13ac8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13acc:	add	r4, r4, #8
   13ad0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13ad4:	ldr	r5, [r5, #40]	; 0x28
   13ad8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13adc:	ldr	r6, [r6, #44]	; 0x2c
   13ae0:	str	ip, [sp]
   13ae4:	str	lr, [sp, #4]
   13ae8:	str	r4, [sp, #8]
   13aec:	str	r5, [sp, #12]
   13af0:	str	r6, [sp, #16]
   13af4:	bl	12250 <__assert_fail@plt+0x13e8>
   13af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13afc:	str	r0, [sp, #24]
   13b00:	str	r1, [sp, #20]
   13b04:	bl	10dc0 <__errno_location@plt>
   13b08:	ldr	r1, [sp, #20]
   13b0c:	str	r1, [r0]
   13b10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b14:	movw	r2, #0
   13b18:	cmp	r0, r2
   13b1c:	beq	13b30 <__assert_fail@plt+0x2cc8>
   13b20:	ldr	r0, [sp, #40]	; 0x28
   13b24:	sub	r0, r0, #1
   13b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b2c:	str	r0, [r1]
   13b30:	ldr	r0, [sp, #36]	; 0x24
   13b34:	sub	sp, fp, #16
   13b38:	pop	{r4, r5, r6, sl, fp, pc}
   13b3c:	push	{fp, lr}
   13b40:	mov	fp, sp
   13b44:	sub	sp, sp, #8
   13b48:	movw	r0, #45268	; 0xb0d4
   13b4c:	movt	r0, #2
   13b50:	ldr	r0, [r0]
   13b54:	str	r0, [sp, #4]
   13b58:	movw	r0, #1
   13b5c:	str	r0, [sp]
   13b60:	ldr	r0, [sp]
   13b64:	movw	r1, #45272	; 0xb0d8
   13b68:	movt	r1, #2
   13b6c:	ldr	r1, [r1]
   13b70:	cmp	r0, r1
   13b74:	bge	13b9c <__assert_fail@plt+0x2d34>
   13b78:	ldr	r0, [sp, #4]
   13b7c:	ldr	r1, [sp]
   13b80:	add	r0, r0, r1, lsl #3
   13b84:	ldr	r0, [r0, #4]
   13b88:	bl	18168 <__assert_fail@plt+0x7300>
   13b8c:	ldr	r0, [sp]
   13b90:	add	r0, r0, #1
   13b94:	str	r0, [sp]
   13b98:	b	13b60 <__assert_fail@plt+0x2cf8>
   13b9c:	ldr	r0, [sp, #4]
   13ba0:	ldr	r0, [r0, #4]
   13ba4:	movw	r1, #45416	; 0xb168
   13ba8:	movt	r1, #2
   13bac:	cmp	r0, r1
   13bb0:	beq	13bdc <__assert_fail@plt+0x2d74>
   13bb4:	ldr	r0, [sp, #4]
   13bb8:	ldr	r0, [r0, #4]
   13bbc:	bl	18168 <__assert_fail@plt+0x7300>
   13bc0:	movw	r0, #256	; 0x100
   13bc4:	movw	lr, #45276	; 0xb0dc
   13bc8:	movt	lr, #2
   13bcc:	str	r0, [lr]
   13bd0:	movw	r0, #45416	; 0xb168
   13bd4:	movt	r0, #2
   13bd8:	str	r0, [lr, #4]
   13bdc:	ldr	r0, [sp, #4]
   13be0:	movw	r1, #45276	; 0xb0dc
   13be4:	movt	r1, #2
   13be8:	cmp	r0, r1
   13bec:	beq	13c0c <__assert_fail@plt+0x2da4>
   13bf0:	ldr	r0, [sp, #4]
   13bf4:	bl	18168 <__assert_fail@plt+0x7300>
   13bf8:	movw	r0, #45268	; 0xb0d4
   13bfc:	movt	r0, #2
   13c00:	movw	lr, #45276	; 0xb0dc
   13c04:	movt	lr, #2
   13c08:	str	lr, [r0]
   13c0c:	movw	r0, #45272	; 0xb0d8
   13c10:	movt	r0, #2
   13c14:	movw	r1, #1
   13c18:	str	r1, [r0]
   13c1c:	mov	sp, fp
   13c20:	pop	{fp, pc}
   13c24:	push	{fp, lr}
   13c28:	mov	fp, sp
   13c2c:	sub	sp, sp, #8
   13c30:	str	r0, [sp, #4]
   13c34:	str	r1, [sp]
   13c38:	ldr	r0, [sp, #4]
   13c3c:	ldr	r1, [sp]
   13c40:	mvn	r2, #0
   13c44:	movw	r3, #45368	; 0xb138
   13c48:	movt	r3, #2
   13c4c:	bl	13c58 <__assert_fail@plt+0x2df0>
   13c50:	mov	sp, fp
   13c54:	pop	{fp, pc}
   13c58:	push	{r4, r5, r6, sl, fp, lr}
   13c5c:	add	fp, sp, #16
   13c60:	sub	sp, sp, #88	; 0x58
   13c64:	str	r0, [fp, #-20]	; 0xffffffec
   13c68:	str	r1, [fp, #-24]	; 0xffffffe8
   13c6c:	str	r2, [fp, #-28]	; 0xffffffe4
   13c70:	str	r3, [fp, #-32]	; 0xffffffe0
   13c74:	bl	10dc0 <__errno_location@plt>
   13c78:	ldr	r1, [pc, #676]	; 13f24 <__assert_fail@plt+0x30bc>
   13c7c:	ldr	r0, [r0]
   13c80:	str	r0, [fp, #-36]	; 0xffffffdc
   13c84:	movw	r0, #45268	; 0xb0d4
   13c88:	movt	r0, #2
   13c8c:	ldr	r0, [r0]
   13c90:	str	r0, [fp, #-40]	; 0xffffffd8
   13c94:	str	r1, [fp, #-44]	; 0xffffffd4
   13c98:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c9c:	movw	r1, #0
   13ca0:	cmp	r1, r0
   13ca4:	bgt	13cb8 <__assert_fail@plt+0x2e50>
   13ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cb0:	cmp	r0, r1
   13cb4:	blt	13cbc <__assert_fail@plt+0x2e54>
   13cb8:	bl	10e50 <abort@plt>
   13cbc:	movw	r0, #45272	; 0xb0d8
   13cc0:	movt	r0, #2
   13cc4:	ldr	r0, [r0]
   13cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ccc:	cmp	r0, r1
   13cd0:	bgt	13dc8 <__assert_fail@plt+0x2f60>
   13cd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13cd8:	movw	r1, #45276	; 0xb0dc
   13cdc:	movt	r1, #2
   13ce0:	cmp	r0, r1
   13ce4:	movw	r0, #0
   13ce8:	moveq	r0, #1
   13cec:	and	r0, r0, #1
   13cf0:	strb	r0, [fp, #-45]	; 0xffffffd3
   13cf4:	movw	r0, #45272	; 0xb0d8
   13cf8:	movt	r0, #2
   13cfc:	ldr	r0, [r0]
   13d00:	str	r0, [sp, #52]	; 0x34
   13d04:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13d08:	tst	r0, #1
   13d0c:	beq	13d1c <__assert_fail@plt+0x2eb4>
   13d10:	movw	r0, #0
   13d14:	str	r0, [sp, #32]
   13d18:	b	13d24 <__assert_fail@plt+0x2ebc>
   13d1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d20:	str	r0, [sp, #32]
   13d24:	ldr	r0, [sp, #32]
   13d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d2c:	movw	r2, #45272	; 0xb0d8
   13d30:	movt	r2, #2
   13d34:	ldr	r2, [r2]
   13d38:	sub	r1, r1, r2
   13d3c:	add	r2, r1, #1
   13d40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13d44:	add	r1, sp, #52	; 0x34
   13d48:	movw	ip, #8
   13d4c:	str	ip, [sp]
   13d50:	bl	1511c <__assert_fail@plt+0x42b4>
   13d54:	str	r0, [fp, #-40]	; 0xffffffd8
   13d58:	movw	r1, #45268	; 0xb0d4
   13d5c:	movt	r1, #2
   13d60:	str	r0, [r1]
   13d64:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13d68:	tst	r0, #1
   13d6c:	beq	13d8c <__assert_fail@plt+0x2f24>
   13d70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d74:	movw	r1, #45276	; 0xb0dc
   13d78:	movt	r1, #2
   13d7c:	ldr	r2, [r1]
   13d80:	str	r2, [r0]
   13d84:	ldr	r1, [r1, #4]
   13d88:	str	r1, [r0, #4]
   13d8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d90:	movw	r1, #45272	; 0xb0d8
   13d94:	movt	r1, #2
   13d98:	ldr	r1, [r1]
   13d9c:	add	r0, r0, r1, lsl #3
   13da0:	ldr	r2, [sp, #52]	; 0x34
   13da4:	sub	r1, r2, r1
   13da8:	lsl	r2, r1, #3
   13dac:	movw	r1, #0
   13db0:	and	r1, r1, #255	; 0xff
   13db4:	bl	10dd8 <memset@plt>
   13db8:	ldr	r0, [sp, #52]	; 0x34
   13dbc:	movw	r1, #45272	; 0xb0d8
   13dc0:	movt	r1, #2
   13dc4:	str	r0, [r1]
   13dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13dd0:	ldr	r0, [r0, r1, lsl #3]
   13dd4:	str	r0, [sp, #48]	; 0x30
   13dd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13de0:	add	r0, r0, r1, lsl #3
   13de4:	ldr	r0, [r0, #4]
   13de8:	str	r0, [sp, #44]	; 0x2c
   13dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13df0:	ldr	r0, [r0, #4]
   13df4:	orr	r0, r0, #1
   13df8:	str	r0, [sp, #40]	; 0x28
   13dfc:	ldr	r0, [sp, #44]	; 0x2c
   13e00:	ldr	r1, [sp, #48]	; 0x30
   13e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e0c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13e10:	ldr	ip, [ip]
   13e14:	ldr	lr, [sp, #40]	; 0x28
   13e18:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13e1c:	add	r4, r4, #8
   13e20:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13e24:	ldr	r5, [r5, #40]	; 0x28
   13e28:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13e2c:	ldr	r6, [r6, #44]	; 0x2c
   13e30:	str	ip, [sp]
   13e34:	str	lr, [sp, #4]
   13e38:	str	r4, [sp, #8]
   13e3c:	str	r5, [sp, #12]
   13e40:	str	r6, [sp, #16]
   13e44:	bl	12250 <__assert_fail@plt+0x13e8>
   13e48:	str	r0, [sp, #36]	; 0x24
   13e4c:	ldr	r0, [sp, #48]	; 0x30
   13e50:	ldr	r1, [sp, #36]	; 0x24
   13e54:	cmp	r0, r1
   13e58:	bhi	13f04 <__assert_fail@plt+0x309c>
   13e5c:	ldr	r0, [sp, #36]	; 0x24
   13e60:	add	r0, r0, #1
   13e64:	str	r0, [sp, #48]	; 0x30
   13e68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e70:	add	r1, r1, r2, lsl #3
   13e74:	str	r0, [r1]
   13e78:	ldr	r0, [sp, #44]	; 0x2c
   13e7c:	movw	r1, #45416	; 0xb168
   13e80:	movt	r1, #2
   13e84:	cmp	r0, r1
   13e88:	beq	13e94 <__assert_fail@plt+0x302c>
   13e8c:	ldr	r0, [sp, #44]	; 0x2c
   13e90:	bl	18168 <__assert_fail@plt+0x7300>
   13e94:	ldr	r0, [sp, #48]	; 0x30
   13e98:	bl	14ee0 <__assert_fail@plt+0x4078>
   13e9c:	mov	lr, r0
   13ea0:	str	r0, [sp, #44]	; 0x2c
   13ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13eac:	add	r0, r0, r1, lsl #3
   13eb0:	str	lr, [r0, #4]
   13eb4:	ldr	r0, [sp, #44]	; 0x2c
   13eb8:	ldr	r1, [sp, #48]	; 0x30
   13ebc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ec4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13ec8:	ldr	lr, [lr]
   13ecc:	ldr	ip, [sp, #40]	; 0x28
   13ed0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13ed4:	add	r4, r4, #8
   13ed8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13edc:	ldr	r5, [r5, #40]	; 0x28
   13ee0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13ee4:	ldr	r6, [r6, #44]	; 0x2c
   13ee8:	str	lr, [sp]
   13eec:	str	ip, [sp, #4]
   13ef0:	str	r4, [sp, #8]
   13ef4:	str	r5, [sp, #12]
   13ef8:	str	r6, [sp, #16]
   13efc:	bl	12250 <__assert_fail@plt+0x13e8>
   13f00:	str	r0, [sp, #28]
   13f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f08:	str	r0, [sp, #24]
   13f0c:	bl	10dc0 <__errno_location@plt>
   13f10:	ldr	lr, [sp, #24]
   13f14:	str	lr, [r0]
   13f18:	ldr	r0, [sp, #44]	; 0x2c
   13f1c:	sub	sp, fp, #16
   13f20:	pop	{r4, r5, r6, sl, fp, pc}
   13f24:	svcvc	0x00ffffff
   13f28:	push	{fp, lr}
   13f2c:	mov	fp, sp
   13f30:	sub	sp, sp, #16
   13f34:	str	r0, [fp, #-4]
   13f38:	str	r1, [sp, #8]
   13f3c:	str	r2, [sp, #4]
   13f40:	ldr	r0, [fp, #-4]
   13f44:	ldr	r1, [sp, #8]
   13f48:	ldr	r2, [sp, #4]
   13f4c:	movw	r3, #45368	; 0xb138
   13f50:	movt	r3, #2
   13f54:	bl	13c58 <__assert_fail@plt+0x2df0>
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #8
   13f6c:	str	r0, [sp, #4]
   13f70:	ldr	r1, [sp, #4]
   13f74:	movw	r0, #0
   13f78:	bl	13c24 <__assert_fail@plt+0x2dbc>
   13f7c:	mov	sp, fp
   13f80:	pop	{fp, pc}
   13f84:	push	{fp, lr}
   13f88:	mov	fp, sp
   13f8c:	sub	sp, sp, #8
   13f90:	str	r0, [sp, #4]
   13f94:	str	r1, [sp]
   13f98:	ldr	r1, [sp, #4]
   13f9c:	ldr	r2, [sp]
   13fa0:	movw	r0, #0
   13fa4:	bl	13f28 <__assert_fail@plt+0x30c0>
   13fa8:	mov	sp, fp
   13fac:	pop	{fp, pc}
   13fb0:	push	{fp, lr}
   13fb4:	mov	fp, sp
   13fb8:	sub	sp, sp, #64	; 0x40
   13fbc:	str	r0, [fp, #-4]
   13fc0:	str	r1, [fp, #-8]
   13fc4:	str	r2, [fp, #-12]
   13fc8:	ldr	r1, [fp, #-8]
   13fcc:	add	r0, sp, #4
   13fd0:	bl	13ff0 <__assert_fail@plt+0x3188>
   13fd4:	ldr	r0, [fp, #-4]
   13fd8:	ldr	r1, [fp, #-12]
   13fdc:	mvn	r2, #0
   13fe0:	add	r3, sp, #4
   13fe4:	bl	13c58 <__assert_fail@plt+0x2df0>
   13fe8:	mov	sp, fp
   13fec:	pop	{fp, pc}
   13ff0:	push	{fp, lr}
   13ff4:	mov	fp, sp
   13ff8:	sub	sp, sp, #8
   13ffc:	str	r1, [sp, #4]
   14000:	mov	r1, r0
   14004:	str	r0, [sp]
   14008:	mov	r0, r1
   1400c:	movw	r1, #0
   14010:	and	r1, r1, #255	; 0xff
   14014:	movw	r2, #48	; 0x30
   14018:	bl	10dd8 <memset@plt>
   1401c:	ldr	r0, [sp, #4]
   14020:	cmp	r0, #10
   14024:	bne	1402c <__assert_fail@plt+0x31c4>
   14028:	bl	10e50 <abort@plt>
   1402c:	ldr	r0, [sp, #4]
   14030:	ldr	r1, [sp]
   14034:	str	r0, [r1]
   14038:	mov	sp, fp
   1403c:	pop	{fp, pc}
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	sub	sp, sp, #64	; 0x40
   1404c:	str	r0, [fp, #-4]
   14050:	str	r1, [fp, #-8]
   14054:	str	r2, [fp, #-12]
   14058:	str	r3, [fp, #-16]
   1405c:	ldr	r1, [fp, #-8]
   14060:	mov	r0, sp
   14064:	bl	13ff0 <__assert_fail@plt+0x3188>
   14068:	ldr	r0, [fp, #-4]
   1406c:	ldr	r1, [fp, #-12]
   14070:	ldr	r2, [fp, #-16]
   14074:	mov	r3, sp
   14078:	bl	13c58 <__assert_fail@plt+0x2df0>
   1407c:	mov	sp, fp
   14080:	pop	{fp, pc}
   14084:	push	{fp, lr}
   14088:	mov	fp, sp
   1408c:	sub	sp, sp, #8
   14090:	str	r0, [sp, #4]
   14094:	str	r1, [sp]
   14098:	ldr	r1, [sp, #4]
   1409c:	ldr	r2, [sp]
   140a0:	movw	r0, #0
   140a4:	bl	13fb0 <__assert_fail@plt+0x3148>
   140a8:	mov	sp, fp
   140ac:	pop	{fp, pc}
   140b0:	push	{fp, lr}
   140b4:	mov	fp, sp
   140b8:	sub	sp, sp, #16
   140bc:	str	r0, [fp, #-4]
   140c0:	str	r1, [sp, #8]
   140c4:	str	r2, [sp, #4]
   140c8:	ldr	r1, [fp, #-4]
   140cc:	ldr	r2, [sp, #8]
   140d0:	ldr	r3, [sp, #4]
   140d4:	movw	r0, #0
   140d8:	bl	14040 <__assert_fail@plt+0x31d8>
   140dc:	mov	sp, fp
   140e0:	pop	{fp, pc}
   140e4:	push	{fp, lr}
   140e8:	mov	fp, sp
   140ec:	sub	sp, sp, #72	; 0x48
   140f0:	movw	r3, #45368	; 0xb138
   140f4:	movt	r3, #2
   140f8:	str	r0, [fp, #-4]
   140fc:	str	r1, [fp, #-8]
   14100:	strb	r2, [fp, #-9]
   14104:	add	r0, sp, #12
   14108:	mov	r1, r0
   1410c:	str	r0, [sp, #8]
   14110:	mov	r0, r1
   14114:	mov	r1, r3
   14118:	movw	r2, #48	; 0x30
   1411c:	bl	10cb8 <memcpy@plt>
   14120:	ldr	r0, [sp, #8]
   14124:	ldrb	r1, [fp, #-9]
   14128:	movw	r2, #1
   1412c:	bl	11ff4 <__assert_fail@plt+0x118c>
   14130:	ldr	r1, [fp, #-4]
   14134:	ldr	r2, [fp, #-8]
   14138:	movw	r3, #0
   1413c:	str	r0, [sp, #4]
   14140:	mov	r0, r3
   14144:	add	r3, sp, #12
   14148:	bl	13c58 <__assert_fail@plt+0x2df0>
   1414c:	mov	sp, fp
   14150:	pop	{fp, pc}
   14154:	push	{fp, lr}
   14158:	mov	fp, sp
   1415c:	sub	sp, sp, #8
   14160:	str	r0, [sp, #4]
   14164:	strb	r1, [sp, #3]
   14168:	ldr	r0, [sp, #4]
   1416c:	mvn	r1, #0
   14170:	ldrb	r2, [sp, #3]
   14174:	bl	140e4 <__assert_fail@plt+0x327c>
   14178:	mov	sp, fp
   1417c:	pop	{fp, pc}
   14180:	push	{fp, lr}
   14184:	mov	fp, sp
   14188:	sub	sp, sp, #8
   1418c:	str	r0, [sp, #4]
   14190:	ldr	r0, [sp, #4]
   14194:	movw	r1, #58	; 0x3a
   14198:	and	r1, r1, #255	; 0xff
   1419c:	bl	14154 <__assert_fail@plt+0x32ec>
   141a0:	mov	sp, fp
   141a4:	pop	{fp, pc}
   141a8:	push	{fp, lr}
   141ac:	mov	fp, sp
   141b0:	sub	sp, sp, #8
   141b4:	str	r0, [sp, #4]
   141b8:	str	r1, [sp]
   141bc:	ldr	r0, [sp, #4]
   141c0:	ldr	r1, [sp]
   141c4:	movw	r2, #58	; 0x3a
   141c8:	and	r2, r2, #255	; 0xff
   141cc:	bl	140e4 <__assert_fail@plt+0x327c>
   141d0:	mov	sp, fp
   141d4:	pop	{fp, pc}
   141d8:	push	{fp, lr}
   141dc:	mov	fp, sp
   141e0:	sub	sp, sp, #120	; 0x78
   141e4:	str	r0, [fp, #-4]
   141e8:	str	r1, [fp, #-8]
   141ec:	str	r2, [fp, #-12]
   141f0:	ldr	r1, [fp, #-8]
   141f4:	add	r0, sp, #12
   141f8:	bl	13ff0 <__assert_fail@plt+0x3188>
   141fc:	add	r0, sp, #60	; 0x3c
   14200:	mov	r1, r0
   14204:	add	r2, sp, #12
   14208:	str	r0, [sp, #8]
   1420c:	mov	r0, r1
   14210:	mov	r1, r2
   14214:	movw	r2, #48	; 0x30
   14218:	bl	10cb8 <memcpy@plt>
   1421c:	ldr	r0, [sp, #8]
   14220:	movw	r1, #58	; 0x3a
   14224:	and	r1, r1, #255	; 0xff
   14228:	movw	r2, #1
   1422c:	bl	11ff4 <__assert_fail@plt+0x118c>
   14230:	ldr	r1, [fp, #-4]
   14234:	ldr	r2, [fp, #-12]
   14238:	str	r0, [sp, #4]
   1423c:	mov	r0, r1
   14240:	mov	r1, r2
   14244:	mvn	r2, #0
   14248:	add	r3, sp, #60	; 0x3c
   1424c:	bl	13c58 <__assert_fail@plt+0x2df0>
   14250:	mov	sp, fp
   14254:	pop	{fp, pc}
   14258:	push	{fp, lr}
   1425c:	mov	fp, sp
   14260:	sub	sp, sp, #24
   14264:	str	r0, [fp, #-4]
   14268:	str	r1, [fp, #-8]
   1426c:	str	r2, [sp, #12]
   14270:	str	r3, [sp, #8]
   14274:	ldr	r0, [fp, #-4]
   14278:	ldr	r1, [fp, #-8]
   1427c:	ldr	r2, [sp, #12]
   14280:	ldr	r3, [sp, #8]
   14284:	mvn	ip, #0
   14288:	str	ip, [sp]
   1428c:	bl	14298 <__assert_fail@plt+0x3430>
   14290:	mov	sp, fp
   14294:	pop	{fp, pc}
   14298:	push	{fp, lr}
   1429c:	mov	fp, sp
   142a0:	sub	sp, sp, #72	; 0x48
   142a4:	ldr	ip, [fp, #8]
   142a8:	movw	lr, #45368	; 0xb138
   142ac:	movt	lr, #2
   142b0:	str	r0, [fp, #-4]
   142b4:	str	r1, [fp, #-8]
   142b8:	str	r2, [fp, #-12]
   142bc:	str	r3, [fp, #-16]
   142c0:	add	r0, sp, #8
   142c4:	mov	r1, r0
   142c8:	str	r0, [sp, #4]
   142cc:	mov	r0, r1
   142d0:	mov	r1, lr
   142d4:	movw	r2, #48	; 0x30
   142d8:	str	ip, [sp]
   142dc:	bl	10cb8 <memcpy@plt>
   142e0:	ldr	r1, [fp, #-8]
   142e4:	ldr	r2, [fp, #-12]
   142e8:	ldr	r0, [sp, #4]
   142ec:	bl	120f4 <__assert_fail@plt+0x128c>
   142f0:	ldr	r0, [fp, #-4]
   142f4:	ldr	r1, [fp, #-16]
   142f8:	ldr	r2, [fp, #8]
   142fc:	add	r3, sp, #8
   14300:	bl	13c58 <__assert_fail@plt+0x2df0>
   14304:	mov	sp, fp
   14308:	pop	{fp, pc}
   1430c:	push	{fp, lr}
   14310:	mov	fp, sp
   14314:	sub	sp, sp, #16
   14318:	str	r0, [fp, #-4]
   1431c:	str	r1, [sp, #8]
   14320:	str	r2, [sp, #4]
   14324:	ldr	r1, [fp, #-4]
   14328:	ldr	r2, [sp, #8]
   1432c:	ldr	r3, [sp, #4]
   14330:	movw	r0, #0
   14334:	bl	14258 <__assert_fail@plt+0x33f0>
   14338:	mov	sp, fp
   1433c:	pop	{fp, pc}
   14340:	push	{fp, lr}
   14344:	mov	fp, sp
   14348:	sub	sp, sp, #24
   1434c:	str	r0, [fp, #-4]
   14350:	str	r1, [fp, #-8]
   14354:	str	r2, [sp, #12]
   14358:	str	r3, [sp, #8]
   1435c:	ldr	r1, [fp, #-4]
   14360:	ldr	r2, [fp, #-8]
   14364:	ldr	r3, [sp, #12]
   14368:	ldr	r0, [sp, #8]
   1436c:	movw	ip, #0
   14370:	str	r0, [sp, #4]
   14374:	mov	r0, ip
   14378:	ldr	ip, [sp, #4]
   1437c:	str	ip, [sp]
   14380:	bl	14298 <__assert_fail@plt+0x3430>
   14384:	mov	sp, fp
   14388:	pop	{fp, pc}
   1438c:	push	{fp, lr}
   14390:	mov	fp, sp
   14394:	sub	sp, sp, #16
   14398:	str	r0, [fp, #-4]
   1439c:	str	r1, [sp, #8]
   143a0:	str	r2, [sp, #4]
   143a4:	ldr	r0, [fp, #-4]
   143a8:	ldr	r1, [sp, #8]
   143ac:	ldr	r2, [sp, #4]
   143b0:	movw	r3, #45284	; 0xb0e4
   143b4:	movt	r3, #2
   143b8:	bl	13c58 <__assert_fail@plt+0x2df0>
   143bc:	mov	sp, fp
   143c0:	pop	{fp, pc}
   143c4:	push	{fp, lr}
   143c8:	mov	fp, sp
   143cc:	sub	sp, sp, #8
   143d0:	str	r0, [sp, #4]
   143d4:	str	r1, [sp]
   143d8:	ldr	r1, [sp, #4]
   143dc:	ldr	r2, [sp]
   143e0:	movw	r0, #0
   143e4:	bl	1438c <__assert_fail@plt+0x3524>
   143e8:	mov	sp, fp
   143ec:	pop	{fp, pc}
   143f0:	push	{fp, lr}
   143f4:	mov	fp, sp
   143f8:	sub	sp, sp, #8
   143fc:	str	r0, [sp, #4]
   14400:	str	r1, [sp]
   14404:	ldr	r0, [sp, #4]
   14408:	ldr	r1, [sp]
   1440c:	mvn	r2, #0
   14410:	bl	1438c <__assert_fail@plt+0x3524>
   14414:	mov	sp, fp
   14418:	pop	{fp, pc}
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	sub	sp, sp, #8
   14428:	str	r0, [sp, #4]
   1442c:	ldr	r1, [sp, #4]
   14430:	movw	r0, #0
   14434:	bl	143f0 <__assert_fail@plt+0x3588>
   14438:	mov	sp, fp
   1443c:	pop	{fp, pc}
   14440:	push	{fp, lr}
   14444:	mov	fp, sp
   14448:	sub	sp, sp, #24
   1444c:	str	r0, [fp, #-8]
   14450:	str	r1, [sp, #12]
   14454:	ldr	r0, [fp, #-8]
   14458:	bl	10d9c <gettext@plt>
   1445c:	str	r0, [sp, #8]
   14460:	ldr	r0, [sp, #8]
   14464:	ldr	r1, [fp, #-8]
   14468:	cmp	r0, r1
   1446c:	beq	1447c <__assert_fail@plt+0x3614>
   14470:	ldr	r0, [sp, #8]
   14474:	str	r0, [fp, #-4]
   14478:	b	14548 <__assert_fail@plt+0x36e0>
   1447c:	bl	18488 <__assert_fail@plt+0x7620>
   14480:	str	r0, [sp, #4]
   14484:	ldr	r0, [sp, #4]
   14488:	movw	r1, #43816	; 0xab28
   1448c:	movt	r1, #1
   14490:	bl	17e44 <__assert_fail@plt+0x6fdc>
   14494:	cmp	r0, #0
   14498:	bne	144d0 <__assert_fail@plt+0x3668>
   1449c:	ldr	r0, [fp, #-8]
   144a0:	ldrb	r0, [r0]
   144a4:	cmp	r0, #96	; 0x60
   144a8:	movw	r0, #0
   144ac:	moveq	r0, #1
   144b0:	tst	r0, #1
   144b4:	movw	r0, #43826	; 0xab32
   144b8:	movt	r0, #1
   144bc:	movw	r1, #43822	; 0xab2e
   144c0:	movt	r1, #1
   144c4:	movne	r0, r1
   144c8:	str	r0, [fp, #-4]
   144cc:	b	14548 <__assert_fail@plt+0x36e0>
   144d0:	ldr	r0, [sp, #4]
   144d4:	movw	r1, #43830	; 0xab36
   144d8:	movt	r1, #1
   144dc:	bl	17e44 <__assert_fail@plt+0x6fdc>
   144e0:	cmp	r0, #0
   144e4:	bne	1451c <__assert_fail@plt+0x36b4>
   144e8:	ldr	r0, [fp, #-8]
   144ec:	ldrb	r0, [r0]
   144f0:	cmp	r0, #96	; 0x60
   144f4:	movw	r0, #0
   144f8:	moveq	r0, #1
   144fc:	tst	r0, #1
   14500:	movw	r0, #43842	; 0xab42
   14504:	movt	r0, #1
   14508:	movw	r1, #43838	; 0xab3e
   1450c:	movt	r1, #1
   14510:	movne	r0, r1
   14514:	str	r0, [fp, #-4]
   14518:	b	14548 <__assert_fail@plt+0x36e0>
   1451c:	ldr	r0, [sp, #12]
   14520:	cmp	r0, #9
   14524:	movw	r0, #0
   14528:	moveq	r0, #1
   1452c:	tst	r0, #1
   14530:	movw	r0, #43814	; 0xab26
   14534:	movt	r0, #1
   14538:	movw	r1, #43810	; 0xab22
   1453c:	movt	r1, #1
   14540:	movne	r0, r1
   14544:	str	r0, [fp, #-4]
   14548:	ldr	r0, [fp, #-4]
   1454c:	mov	sp, fp
   14550:	pop	{fp, pc}
   14554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14558:	add	fp, sp, #28
   1455c:	sub	sp, sp, #260	; 0x104
   14560:	ldr	ip, [fp, #12]
   14564:	ldr	lr, [fp, #8]
   14568:	str	r0, [fp, #-32]	; 0xffffffe0
   1456c:	str	r1, [fp, #-36]	; 0xffffffdc
   14570:	str	r2, [fp, #-40]	; 0xffffffd8
   14574:	str	r3, [fp, #-44]	; 0xffffffd4
   14578:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1457c:	movw	r1, #0
   14580:	cmp	r0, r1
   14584:	str	lr, [fp, #-48]	; 0xffffffd0
   14588:	str	ip, [fp, #-52]	; 0xffffffcc
   1458c:	beq	145c4 <__assert_fail@plt+0x375c>
   14590:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14594:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14598:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1459c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145a0:	movw	ip, #43932	; 0xab9c
   145a4:	movt	ip, #1
   145a8:	str	r1, [fp, #-56]	; 0xffffffc8
   145ac:	mov	r1, ip
   145b0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   145b4:	str	ip, [sp]
   145b8:	bl	10db4 <fprintf@plt>
   145bc:	str	r0, [fp, #-60]	; 0xffffffc4
   145c0:	b	145e0 <__assert_fail@plt+0x3778>
   145c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   145cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   145d0:	movw	r1, #43944	; 0xaba8
   145d4:	movt	r1, #1
   145d8:	bl	10db4 <fprintf@plt>
   145dc:	str	r0, [fp, #-64]	; 0xffffffc0
   145e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145e4:	movw	r1, #43951	; 0xabaf
   145e8:	movt	r1, #1
   145ec:	str	r0, [fp, #-68]	; 0xffffffbc
   145f0:	mov	r0, r1
   145f4:	bl	10d9c <gettext@plt>
   145f8:	movw	r1, #44669	; 0xae7d
   145fc:	movt	r1, #1
   14600:	movw	r3, #2022	; 0x7e6
   14604:	ldr	lr, [fp, #-68]	; 0xffffffbc
   14608:	str	r0, [fp, #-72]	; 0xffffffb8
   1460c:	mov	r0, lr
   14610:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14614:	bl	10db4 <fprintf@plt>
   14618:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1461c:	movw	r2, #42526	; 0xa61e
   14620:	movt	r2, #1
   14624:	str	r0, [fp, #-76]	; 0xffffffb4
   14628:	mov	r0, r2
   1462c:	str	r2, [fp, #-80]	; 0xffffffb0
   14630:	bl	10c64 <fputs_unlocked@plt>
   14634:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14638:	movw	r2, #43955	; 0xabb3
   1463c:	movt	r2, #1
   14640:	str	r0, [fp, #-84]	; 0xffffffac
   14644:	mov	r0, r2
   14648:	str	r1, [fp, #-88]	; 0xffffffa8
   1464c:	bl	10d9c <gettext@plt>
   14650:	movw	r2, #44126	; 0xac5e
   14654:	movt	r2, #1
   14658:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1465c:	str	r0, [fp, #-92]	; 0xffffffa4
   14660:	mov	r0, r1
   14664:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14668:	bl	10db4 <fprintf@plt>
   1466c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14670:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14674:	str	r0, [fp, #-96]	; 0xffffffa0
   14678:	mov	r0, r2
   1467c:	bl	10c64 <fputs_unlocked@plt>
   14680:	ldr	r1, [fp, #12]
   14684:	cmp	r1, #9
   14688:	str	r0, [fp, #-100]	; 0xffffff9c
   1468c:	str	r1, [fp, #-104]	; 0xffffff98
   14690:	bhi	14ad0 <__assert_fail@plt+0x3c68>
   14694:	add	r0, pc, #8
   14698:	ldr	r1, [fp, #-104]	; 0xffffff98
   1469c:	ldr	r0, [r0, r1, lsl #2]
   146a0:	mov	pc, r0
   146a4:	andeq	r4, r1, ip, asr #13
   146a8:	ldrdeq	r4, [r1], -r0
   146ac:	andeq	r4, r1, ip, lsl #14
   146b0:	andeq	r4, r1, r0, asr r7
   146b4:	andeq	r4, r1, ip, lsr #15
   146b8:	andeq	r4, r1, r4, lsl r8
   146bc:	andeq	r4, r1, r8, lsl #17
   146c0:	andeq	r4, r1, r8, lsl #18
   146c4:	muleq	r1, r4, r9
   146c8:	andeq	r4, r1, ip, lsr #20
   146cc:	b	14b70 <__assert_fail@plt+0x3d08>
   146d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146d4:	movw	r1, #44160	; 0xac80
   146d8:	movt	r1, #1
   146dc:	str	r0, [fp, #-108]	; 0xffffff94
   146e0:	mov	r0, r1
   146e4:	bl	10d9c <gettext@plt>
   146e8:	ldr	r1, [fp, #8]
   146ec:	ldr	r2, [r1]
   146f0:	ldr	r1, [fp, #-108]	; 0xffffff94
   146f4:	str	r0, [fp, #-112]	; 0xffffff90
   146f8:	mov	r0, r1
   146fc:	ldr	r1, [fp, #-112]	; 0xffffff90
   14700:	bl	10db4 <fprintf@plt>
   14704:	str	r0, [fp, #-116]	; 0xffffff8c
   14708:	b	14b70 <__assert_fail@plt+0x3d08>
   1470c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14710:	movw	r1, #44176	; 0xac90
   14714:	movt	r1, #1
   14718:	str	r0, [fp, #-120]	; 0xffffff88
   1471c:	mov	r0, r1
   14720:	bl	10d9c <gettext@plt>
   14724:	ldr	r1, [fp, #8]
   14728:	ldr	r2, [r1]
   1472c:	ldr	r1, [fp, #8]
   14730:	ldr	r3, [r1, #4]
   14734:	ldr	r1, [fp, #-120]	; 0xffffff88
   14738:	str	r0, [fp, #-124]	; 0xffffff84
   1473c:	mov	r0, r1
   14740:	ldr	r1, [fp, #-124]	; 0xffffff84
   14744:	bl	10db4 <fprintf@plt>
   14748:	str	r0, [fp, #-128]	; 0xffffff80
   1474c:	b	14b70 <__assert_fail@plt+0x3d08>
   14750:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14754:	movw	r1, #44199	; 0xaca7
   14758:	movt	r1, #1
   1475c:	str	r0, [fp, #-132]	; 0xffffff7c
   14760:	mov	r0, r1
   14764:	bl	10d9c <gettext@plt>
   14768:	ldr	r1, [fp, #8]
   1476c:	ldr	r2, [r1]
   14770:	ldr	r1, [fp, #8]
   14774:	ldr	r3, [r1, #4]
   14778:	ldr	r1, [fp, #8]
   1477c:	ldr	r1, [r1, #8]
   14780:	ldr	lr, [fp, #-132]	; 0xffffff7c
   14784:	str	r0, [fp, #-136]	; 0xffffff78
   14788:	mov	r0, lr
   1478c:	ldr	ip, [fp, #-136]	; 0xffffff78
   14790:	str	r1, [fp, #-140]	; 0xffffff74
   14794:	mov	r1, ip
   14798:	ldr	r4, [fp, #-140]	; 0xffffff74
   1479c:	str	r4, [sp]
   147a0:	bl	10db4 <fprintf@plt>
   147a4:	str	r0, [sp, #144]	; 0x90
   147a8:	b	14b70 <__assert_fail@plt+0x3d08>
   147ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147b0:	movw	r1, #44227	; 0xacc3
   147b4:	movt	r1, #1
   147b8:	str	r0, [sp, #140]	; 0x8c
   147bc:	mov	r0, r1
   147c0:	bl	10d9c <gettext@plt>
   147c4:	ldr	r1, [fp, #8]
   147c8:	ldr	r2, [r1]
   147cc:	ldr	r1, [fp, #8]
   147d0:	ldr	r3, [r1, #4]
   147d4:	ldr	r1, [fp, #8]
   147d8:	ldr	r1, [r1, #8]
   147dc:	ldr	lr, [fp, #8]
   147e0:	ldr	lr, [lr, #12]
   147e4:	ldr	ip, [sp, #140]	; 0x8c
   147e8:	str	r0, [sp, #136]	; 0x88
   147ec:	mov	r0, ip
   147f0:	ldr	r4, [sp, #136]	; 0x88
   147f4:	str	r1, [sp, #132]	; 0x84
   147f8:	mov	r1, r4
   147fc:	ldr	r5, [sp, #132]	; 0x84
   14800:	str	r5, [sp]
   14804:	str	lr, [sp, #4]
   14808:	bl	10db4 <fprintf@plt>
   1480c:	str	r0, [sp, #128]	; 0x80
   14810:	b	14b70 <__assert_fail@plt+0x3d08>
   14814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14818:	movw	r1, #44259	; 0xace3
   1481c:	movt	r1, #1
   14820:	str	r0, [sp, #124]	; 0x7c
   14824:	mov	r0, r1
   14828:	bl	10d9c <gettext@plt>
   1482c:	ldr	r1, [fp, #8]
   14830:	ldr	r2, [r1]
   14834:	ldr	r1, [fp, #8]
   14838:	ldr	r3, [r1, #4]
   1483c:	ldr	r1, [fp, #8]
   14840:	ldr	r1, [r1, #8]
   14844:	ldr	lr, [fp, #8]
   14848:	ldr	lr, [lr, #12]
   1484c:	ldr	ip, [fp, #8]
   14850:	ldr	ip, [ip, #16]
   14854:	ldr	r4, [sp, #124]	; 0x7c
   14858:	str	r0, [sp, #120]	; 0x78
   1485c:	mov	r0, r4
   14860:	ldr	r5, [sp, #120]	; 0x78
   14864:	str	r1, [sp, #116]	; 0x74
   14868:	mov	r1, r5
   1486c:	ldr	r6, [sp, #116]	; 0x74
   14870:	str	r6, [sp]
   14874:	str	lr, [sp, #4]
   14878:	str	ip, [sp, #8]
   1487c:	bl	10db4 <fprintf@plt>
   14880:	str	r0, [sp, #112]	; 0x70
   14884:	b	14b70 <__assert_fail@plt+0x3d08>
   14888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1488c:	movw	r1, #44295	; 0xad07
   14890:	movt	r1, #1
   14894:	str	r0, [sp, #108]	; 0x6c
   14898:	mov	r0, r1
   1489c:	bl	10d9c <gettext@plt>
   148a0:	ldr	r1, [fp, #8]
   148a4:	ldr	r2, [r1]
   148a8:	ldr	r1, [fp, #8]
   148ac:	ldr	r3, [r1, #4]
   148b0:	ldr	r1, [fp, #8]
   148b4:	ldr	r1, [r1, #8]
   148b8:	ldr	lr, [fp, #8]
   148bc:	ldr	lr, [lr, #12]
   148c0:	ldr	ip, [fp, #8]
   148c4:	ldr	ip, [ip, #16]
   148c8:	ldr	r4, [fp, #8]
   148cc:	ldr	r4, [r4, #20]
   148d0:	ldr	r5, [sp, #108]	; 0x6c
   148d4:	str	r0, [sp, #104]	; 0x68
   148d8:	mov	r0, r5
   148dc:	ldr	r6, [sp, #104]	; 0x68
   148e0:	str	r1, [sp, #100]	; 0x64
   148e4:	mov	r1, r6
   148e8:	ldr	r7, [sp, #100]	; 0x64
   148ec:	str	r7, [sp]
   148f0:	str	lr, [sp, #4]
   148f4:	str	ip, [sp, #8]
   148f8:	str	r4, [sp, #12]
   148fc:	bl	10db4 <fprintf@plt>
   14900:	str	r0, [sp, #96]	; 0x60
   14904:	b	14b70 <__assert_fail@plt+0x3d08>
   14908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1490c:	movw	r1, #44335	; 0xad2f
   14910:	movt	r1, #1
   14914:	str	r0, [sp, #92]	; 0x5c
   14918:	mov	r0, r1
   1491c:	bl	10d9c <gettext@plt>
   14920:	ldr	r1, [fp, #8]
   14924:	ldr	r2, [r1]
   14928:	ldr	r1, [fp, #8]
   1492c:	ldr	r3, [r1, #4]
   14930:	ldr	r1, [fp, #8]
   14934:	ldr	r1, [r1, #8]
   14938:	ldr	lr, [fp, #8]
   1493c:	ldr	lr, [lr, #12]
   14940:	ldr	ip, [fp, #8]
   14944:	ldr	ip, [ip, #16]
   14948:	ldr	r4, [fp, #8]
   1494c:	ldr	r4, [r4, #20]
   14950:	ldr	r5, [fp, #8]
   14954:	ldr	r5, [r5, #24]
   14958:	ldr	r6, [sp, #92]	; 0x5c
   1495c:	str	r0, [sp, #88]	; 0x58
   14960:	mov	r0, r6
   14964:	ldr	r7, [sp, #88]	; 0x58
   14968:	str	r1, [sp, #84]	; 0x54
   1496c:	mov	r1, r7
   14970:	ldr	r8, [sp, #84]	; 0x54
   14974:	str	r8, [sp]
   14978:	str	lr, [sp, #4]
   1497c:	str	ip, [sp, #8]
   14980:	str	r4, [sp, #12]
   14984:	str	r5, [sp, #16]
   14988:	bl	10db4 <fprintf@plt>
   1498c:	str	r0, [sp, #80]	; 0x50
   14990:	b	14b70 <__assert_fail@plt+0x3d08>
   14994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14998:	movw	r1, #44379	; 0xad5b
   1499c:	movt	r1, #1
   149a0:	str	r0, [sp, #76]	; 0x4c
   149a4:	mov	r0, r1
   149a8:	bl	10d9c <gettext@plt>
   149ac:	ldr	r1, [fp, #8]
   149b0:	ldr	r2, [r1]
   149b4:	ldr	r1, [fp, #8]
   149b8:	ldr	r3, [r1, #4]
   149bc:	ldr	r1, [fp, #8]
   149c0:	ldr	r1, [r1, #8]
   149c4:	ldr	lr, [fp, #8]
   149c8:	ldr	lr, [lr, #12]
   149cc:	ldr	ip, [fp, #8]
   149d0:	ldr	ip, [ip, #16]
   149d4:	ldr	r4, [fp, #8]
   149d8:	ldr	r4, [r4, #20]
   149dc:	ldr	r5, [fp, #8]
   149e0:	ldr	r5, [r5, #24]
   149e4:	ldr	r6, [fp, #8]
   149e8:	ldr	r6, [r6, #28]
   149ec:	ldr	r7, [sp, #76]	; 0x4c
   149f0:	str	r0, [sp, #72]	; 0x48
   149f4:	mov	r0, r7
   149f8:	ldr	r8, [sp, #72]	; 0x48
   149fc:	str	r1, [sp, #68]	; 0x44
   14a00:	mov	r1, r8
   14a04:	ldr	r9, [sp, #68]	; 0x44
   14a08:	str	r9, [sp]
   14a0c:	str	lr, [sp, #4]
   14a10:	str	ip, [sp, #8]
   14a14:	str	r4, [sp, #12]
   14a18:	str	r5, [sp, #16]
   14a1c:	str	r6, [sp, #20]
   14a20:	bl	10db4 <fprintf@plt>
   14a24:	str	r0, [sp, #64]	; 0x40
   14a28:	b	14b70 <__assert_fail@plt+0x3d08>
   14a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a30:	movw	r1, #44427	; 0xad8b
   14a34:	movt	r1, #1
   14a38:	str	r0, [sp, #60]	; 0x3c
   14a3c:	mov	r0, r1
   14a40:	bl	10d9c <gettext@plt>
   14a44:	ldr	r1, [fp, #8]
   14a48:	ldr	r2, [r1]
   14a4c:	ldr	r1, [fp, #8]
   14a50:	ldr	r3, [r1, #4]
   14a54:	ldr	r1, [fp, #8]
   14a58:	ldr	r1, [r1, #8]
   14a5c:	ldr	lr, [fp, #8]
   14a60:	ldr	lr, [lr, #12]
   14a64:	ldr	ip, [fp, #8]
   14a68:	ldr	ip, [ip, #16]
   14a6c:	ldr	r4, [fp, #8]
   14a70:	ldr	r4, [r4, #20]
   14a74:	ldr	r5, [fp, #8]
   14a78:	ldr	r5, [r5, #24]
   14a7c:	ldr	r6, [fp, #8]
   14a80:	ldr	r6, [r6, #28]
   14a84:	ldr	r7, [fp, #8]
   14a88:	ldr	r7, [r7, #32]
   14a8c:	ldr	r8, [sp, #60]	; 0x3c
   14a90:	str	r0, [sp, #56]	; 0x38
   14a94:	mov	r0, r8
   14a98:	ldr	r9, [sp, #56]	; 0x38
   14a9c:	str	r1, [sp, #52]	; 0x34
   14aa0:	mov	r1, r9
   14aa4:	ldr	sl, [sp, #52]	; 0x34
   14aa8:	str	sl, [sp]
   14aac:	str	lr, [sp, #4]
   14ab0:	str	ip, [sp, #8]
   14ab4:	str	r4, [sp, #12]
   14ab8:	str	r5, [sp, #16]
   14abc:	str	r6, [sp, #20]
   14ac0:	str	r7, [sp, #24]
   14ac4:	bl	10db4 <fprintf@plt>
   14ac8:	str	r0, [sp, #48]	; 0x30
   14acc:	b	14b70 <__assert_fail@plt+0x3d08>
   14ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ad4:	movw	r1, #44479	; 0xadbf
   14ad8:	movt	r1, #1
   14adc:	str	r0, [sp, #44]	; 0x2c
   14ae0:	mov	r0, r1
   14ae4:	bl	10d9c <gettext@plt>
   14ae8:	ldr	r1, [fp, #8]
   14aec:	ldr	r2, [r1]
   14af0:	ldr	r1, [fp, #8]
   14af4:	ldr	r3, [r1, #4]
   14af8:	ldr	r1, [fp, #8]
   14afc:	ldr	r1, [r1, #8]
   14b00:	ldr	lr, [fp, #8]
   14b04:	ldr	lr, [lr, #12]
   14b08:	ldr	ip, [fp, #8]
   14b0c:	ldr	ip, [ip, #16]
   14b10:	ldr	r4, [fp, #8]
   14b14:	ldr	r4, [r4, #20]
   14b18:	ldr	r5, [fp, #8]
   14b1c:	ldr	r5, [r5, #24]
   14b20:	ldr	r6, [fp, #8]
   14b24:	ldr	r6, [r6, #28]
   14b28:	ldr	r7, [fp, #8]
   14b2c:	ldr	r7, [r7, #32]
   14b30:	ldr	r8, [sp, #44]	; 0x2c
   14b34:	str	r0, [sp, #40]	; 0x28
   14b38:	mov	r0, r8
   14b3c:	ldr	r9, [sp, #40]	; 0x28
   14b40:	str	r1, [sp, #36]	; 0x24
   14b44:	mov	r1, r9
   14b48:	ldr	sl, [sp, #36]	; 0x24
   14b4c:	str	sl, [sp]
   14b50:	str	lr, [sp, #4]
   14b54:	str	ip, [sp, #8]
   14b58:	str	r4, [sp, #12]
   14b5c:	str	r5, [sp, #16]
   14b60:	str	r6, [sp, #20]
   14b64:	str	r7, [sp, #24]
   14b68:	bl	10db4 <fprintf@plt>
   14b6c:	str	r0, [sp, #32]
   14b70:	sub	sp, fp, #28
   14b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b78:	push	{fp, lr}
   14b7c:	mov	fp, sp
   14b80:	sub	sp, sp, #32
   14b84:	ldr	ip, [fp, #8]
   14b88:	str	r0, [fp, #-4]
   14b8c:	str	r1, [fp, #-8]
   14b90:	str	r2, [fp, #-12]
   14b94:	str	r3, [sp, #16]
   14b98:	movw	r0, #0
   14b9c:	str	r0, [sp, #12]
   14ba0:	str	ip, [sp, #8]
   14ba4:	ldr	r0, [fp, #8]
   14ba8:	ldr	r1, [sp, #12]
   14bac:	add	r0, r0, r1, lsl #2
   14bb0:	ldr	r0, [r0]
   14bb4:	movw	r1, #0
   14bb8:	cmp	r0, r1
   14bbc:	beq	14bd4 <__assert_fail@plt+0x3d6c>
   14bc0:	b	14bc4 <__assert_fail@plt+0x3d5c>
   14bc4:	ldr	r0, [sp, #12]
   14bc8:	add	r0, r0, #1
   14bcc:	str	r0, [sp, #12]
   14bd0:	b	14ba4 <__assert_fail@plt+0x3d3c>
   14bd4:	ldr	r0, [fp, #-4]
   14bd8:	ldr	r1, [fp, #-8]
   14bdc:	ldr	r2, [fp, #-12]
   14be0:	ldr	r3, [sp, #16]
   14be4:	ldr	ip, [fp, #8]
   14be8:	ldr	lr, [sp, #12]
   14bec:	str	ip, [sp]
   14bf0:	str	lr, [sp, #4]
   14bf4:	bl	14554 <__assert_fail@plt+0x36ec>
   14bf8:	mov	sp, fp
   14bfc:	pop	{fp, pc}
   14c00:	push	{fp, lr}
   14c04:	mov	fp, sp
   14c08:	sub	sp, sp, #80	; 0x50
   14c0c:	ldr	ip, [fp, #8]
   14c10:	str	ip, [fp, #-4]
   14c14:	str	r0, [fp, #-8]
   14c18:	str	r1, [fp, #-12]
   14c1c:	str	r2, [fp, #-16]
   14c20:	str	r3, [fp, #-20]	; 0xffffffec
   14c24:	movw	r0, #0
   14c28:	str	r0, [fp, #-24]	; 0xffffffe8
   14c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c30:	cmp	r0, #10
   14c34:	movw	r0, #0
   14c38:	str	r0, [sp, #12]
   14c3c:	bcs	14c74 <__assert_fail@plt+0x3e0c>
   14c40:	ldr	r0, [fp, #-4]
   14c44:	add	r1, r0, #4
   14c48:	str	r1, [fp, #-4]
   14c4c:	ldr	r0, [r0]
   14c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c54:	add	r2, sp, #16
   14c58:	add	r1, r2, r1, lsl #2
   14c5c:	str	r0, [r1]
   14c60:	movw	r1, #0
   14c64:	cmp	r0, r1
   14c68:	movw	r0, #0
   14c6c:	movne	r0, #1
   14c70:	str	r0, [sp, #12]
   14c74:	ldr	r0, [sp, #12]
   14c78:	tst	r0, #1
   14c7c:	beq	14c94 <__assert_fail@plt+0x3e2c>
   14c80:	b	14c84 <__assert_fail@plt+0x3e1c>
   14c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c88:	add	r0, r0, #1
   14c8c:	str	r0, [fp, #-24]	; 0xffffffe8
   14c90:	b	14c2c <__assert_fail@plt+0x3dc4>
   14c94:	add	r0, sp, #16
   14c98:	ldr	r1, [fp, #-8]
   14c9c:	ldr	r2, [fp, #-12]
   14ca0:	ldr	r3, [fp, #-16]
   14ca4:	ldr	ip, [fp, #-20]	; 0xffffffec
   14ca8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14cac:	str	r0, [sp, #8]
   14cb0:	mov	r0, r1
   14cb4:	mov	r1, r2
   14cb8:	mov	r2, r3
   14cbc:	mov	r3, ip
   14cc0:	ldr	ip, [sp, #8]
   14cc4:	str	ip, [sp]
   14cc8:	str	lr, [sp, #4]
   14ccc:	bl	14554 <__assert_fail@plt+0x36ec>
   14cd0:	mov	sp, fp
   14cd4:	pop	{fp, pc}
   14cd8:	push	{fp, lr}
   14cdc:	mov	fp, sp
   14ce0:	sub	sp, sp, #32
   14ce4:	str	r0, [fp, #-4]
   14ce8:	str	r1, [fp, #-8]
   14cec:	str	r2, [fp, #-12]
   14cf0:	str	r3, [sp, #16]
   14cf4:	add	r0, fp, #8
   14cf8:	str	r0, [sp, #12]
   14cfc:	ldr	r0, [fp, #-4]
   14d00:	ldr	r1, [fp, #-8]
   14d04:	ldr	r2, [fp, #-12]
   14d08:	ldr	r3, [sp, #16]
   14d0c:	ldr	ip, [sp, #12]
   14d10:	mov	lr, sp
   14d14:	str	ip, [lr]
   14d18:	bl	14c00 <__assert_fail@plt+0x3d98>
   14d1c:	add	r0, sp, #12
   14d20:	str	r0, [sp, #8]
   14d24:	mov	sp, fp
   14d28:	pop	{fp, pc}
   14d2c:	push	{fp, lr}
   14d30:	mov	fp, sp
   14d34:	sub	sp, sp, #16
   14d38:	movw	r0, #45348	; 0xb124
   14d3c:	movt	r0, #2
   14d40:	ldr	r1, [r0]
   14d44:	movw	r0, #42526	; 0xa61e
   14d48:	movt	r0, #1
   14d4c:	bl	10c64 <fputs_unlocked@plt>
   14d50:	movw	r1, #44539	; 0xadfb
   14d54:	movt	r1, #1
   14d58:	str	r0, [fp, #-4]
   14d5c:	mov	r0, r1
   14d60:	bl	10d9c <gettext@plt>
   14d64:	movw	r1, #44559	; 0xae0f
   14d68:	movt	r1, #1
   14d6c:	bl	10c88 <printf@plt>
   14d70:	movw	r1, #44581	; 0xae25
   14d74:	movt	r1, #1
   14d78:	str	r0, [sp, #8]
   14d7c:	mov	r0, r1
   14d80:	bl	10d9c <gettext@plt>
   14d84:	movw	r1, #43228	; 0xa8dc
   14d88:	movt	r1, #1
   14d8c:	movw	r2, #43381	; 0xa975
   14d90:	movt	r2, #1
   14d94:	bl	10c88 <printf@plt>
   14d98:	movw	r1, #44601	; 0xae39
   14d9c:	movt	r1, #1
   14da0:	str	r0, [sp, #4]
   14da4:	mov	r0, r1
   14da8:	bl	10d9c <gettext@plt>
   14dac:	movw	r1, #44640	; 0xae60
   14db0:	movt	r1, #1
   14db4:	bl	10c88 <printf@plt>
   14db8:	str	r0, [sp]
   14dbc:	mov	sp, fp
   14dc0:	pop	{fp, pc}
   14dc4:	push	{fp, lr}
   14dc8:	mov	fp, sp
   14dcc:	sub	sp, sp, #16
   14dd0:	str	r0, [fp, #-4]
   14dd4:	str	r1, [sp, #8]
   14dd8:	str	r2, [sp, #4]
   14ddc:	ldr	r0, [fp, #-4]
   14de0:	ldr	r1, [sp, #8]
   14de4:	ldr	r2, [sp, #4]
   14de8:	bl	14df4 <__assert_fail@plt+0x3f8c>
   14dec:	mov	sp, fp
   14df0:	pop	{fp, pc}
   14df4:	push	{fp, lr}
   14df8:	mov	fp, sp
   14dfc:	sub	sp, sp, #16
   14e00:	str	r0, [fp, #-4]
   14e04:	str	r1, [sp, #8]
   14e08:	str	r2, [sp, #4]
   14e0c:	ldr	r0, [fp, #-4]
   14e10:	ldr	r1, [sp, #8]
   14e14:	ldr	r2, [sp, #4]
   14e18:	bl	18594 <__assert_fail@plt+0x772c>
   14e1c:	str	r0, [sp]
   14e20:	ldr	r0, [sp]
   14e24:	movw	r1, #0
   14e28:	cmp	r0, r1
   14e2c:	bne	14e5c <__assert_fail@plt+0x3ff4>
   14e30:	ldr	r0, [fp, #-4]
   14e34:	movw	r1, #0
   14e38:	cmp	r0, r1
   14e3c:	beq	14e58 <__assert_fail@plt+0x3ff0>
   14e40:	ldr	r0, [sp, #8]
   14e44:	cmp	r0, #0
   14e48:	beq	14e5c <__assert_fail@plt+0x3ff4>
   14e4c:	ldr	r0, [sp, #4]
   14e50:	cmp	r0, #0
   14e54:	beq	14e5c <__assert_fail@plt+0x3ff4>
   14e58:	bl	17c44 <__assert_fail@plt+0x6ddc>
   14e5c:	ldr	r0, [sp]
   14e60:	mov	sp, fp
   14e64:	pop	{fp, pc}
   14e68:	push	{fp, lr}
   14e6c:	mov	fp, sp
   14e70:	sub	sp, sp, #8
   14e74:	str	r0, [sp, #4]
   14e78:	ldr	r0, [sp, #4]
   14e7c:	bl	17d30 <__assert_fail@plt+0x6ec8>
   14e80:	bl	14e8c <__assert_fail@plt+0x4024>
   14e84:	mov	sp, fp
   14e88:	pop	{fp, pc}
   14e8c:	push	{fp, lr}
   14e90:	mov	fp, sp
   14e94:	sub	sp, sp, #8
   14e98:	str	r0, [sp, #4]
   14e9c:	ldr	r0, [sp, #4]
   14ea0:	movw	r1, #0
   14ea4:	cmp	r0, r1
   14ea8:	bne	14eb0 <__assert_fail@plt+0x4048>
   14eac:	bl	17c44 <__assert_fail@plt+0x6ddc>
   14eb0:	ldr	r0, [sp, #4]
   14eb4:	mov	sp, fp
   14eb8:	pop	{fp, pc}
   14ebc:	push	{fp, lr}
   14ec0:	mov	fp, sp
   14ec4:	sub	sp, sp, #8
   14ec8:	str	r0, [sp, #4]
   14ecc:	ldr	r0, [sp, #4]
   14ed0:	bl	182d0 <__assert_fail@plt+0x7468>
   14ed4:	bl	14e8c <__assert_fail@plt+0x4024>
   14ed8:	mov	sp, fp
   14edc:	pop	{fp, pc}
   14ee0:	push	{fp, lr}
   14ee4:	mov	fp, sp
   14ee8:	sub	sp, sp, #8
   14eec:	str	r0, [sp, #4]
   14ef0:	ldr	r0, [sp, #4]
   14ef4:	bl	14e68 <__assert_fail@plt+0x4000>
   14ef8:	mov	sp, fp
   14efc:	pop	{fp, pc}
   14f00:	push	{fp, lr}
   14f04:	mov	fp, sp
   14f08:	sub	sp, sp, #16
   14f0c:	str	r0, [fp, #-4]
   14f10:	str	r1, [sp, #8]
   14f14:	ldr	r0, [fp, #-4]
   14f18:	ldr	r1, [sp, #8]
   14f1c:	bl	17da0 <__assert_fail@plt+0x6f38>
   14f20:	str	r0, [sp, #4]
   14f24:	ldr	r0, [sp, #4]
   14f28:	movw	r1, #0
   14f2c:	cmp	r0, r1
   14f30:	bne	14f54 <__assert_fail@plt+0x40ec>
   14f34:	ldr	r0, [fp, #-4]
   14f38:	movw	r1, #0
   14f3c:	cmp	r0, r1
   14f40:	beq	14f50 <__assert_fail@plt+0x40e8>
   14f44:	ldr	r0, [sp, #8]
   14f48:	cmp	r0, #0
   14f4c:	beq	14f54 <__assert_fail@plt+0x40ec>
   14f50:	bl	17c44 <__assert_fail@plt+0x6ddc>
   14f54:	ldr	r0, [sp, #4]
   14f58:	mov	sp, fp
   14f5c:	pop	{fp, pc}
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	sub	sp, sp, #8
   14f6c:	str	r0, [sp, #4]
   14f70:	str	r1, [sp]
   14f74:	ldr	r0, [sp, #4]
   14f78:	ldr	r1, [sp]
   14f7c:	bl	18310 <__assert_fail@plt+0x74a8>
   14f80:	bl	14e8c <__assert_fail@plt+0x4024>
   14f84:	mov	sp, fp
   14f88:	pop	{fp, pc}
   14f8c:	push	{fp, lr}
   14f90:	mov	fp, sp
   14f94:	sub	sp, sp, #16
   14f98:	str	r0, [fp, #-4]
   14f9c:	str	r1, [sp, #8]
   14fa0:	str	r2, [sp, #4]
   14fa4:	ldr	r0, [fp, #-4]
   14fa8:	ldr	r1, [sp, #8]
   14fac:	ldr	r2, [sp, #4]
   14fb0:	bl	18408 <__assert_fail@plt+0x75a0>
   14fb4:	bl	14e8c <__assert_fail@plt+0x4024>
   14fb8:	mov	sp, fp
   14fbc:	pop	{fp, pc}
   14fc0:	push	{fp, lr}
   14fc4:	mov	fp, sp
   14fc8:	sub	sp, sp, #8
   14fcc:	str	r0, [sp, #4]
   14fd0:	str	r1, [sp]
   14fd4:	ldr	r1, [sp, #4]
   14fd8:	ldr	r2, [sp]
   14fdc:	movw	r0, #0
   14fe0:	bl	14df4 <__assert_fail@plt+0x3f8c>
   14fe4:	mov	sp, fp
   14fe8:	pop	{fp, pc}
   14fec:	push	{fp, lr}
   14ff0:	mov	fp, sp
   14ff4:	sub	sp, sp, #8
   14ff8:	str	r0, [sp, #4]
   14ffc:	str	r1, [sp]
   15000:	ldr	r1, [sp, #4]
   15004:	ldr	r2, [sp]
   15008:	movw	r0, #0
   1500c:	bl	14f8c <__assert_fail@plt+0x4124>
   15010:	mov	sp, fp
   15014:	pop	{fp, pc}
   15018:	push	{fp, lr}
   1501c:	mov	fp, sp
   15020:	sub	sp, sp, #8
   15024:	str	r0, [sp, #4]
   15028:	str	r1, [sp]
   1502c:	ldr	r0, [sp, #4]
   15030:	ldr	r1, [sp]
   15034:	movw	r2, #1
   15038:	bl	15044 <__assert_fail@plt+0x41dc>
   1503c:	mov	sp, fp
   15040:	pop	{fp, pc}
   15044:	push	{fp, lr}
   15048:	mov	fp, sp
   1504c:	sub	sp, sp, #16
   15050:	str	r0, [fp, #-4]
   15054:	str	r1, [sp, #8]
   15058:	str	r2, [sp, #4]
   1505c:	ldr	r0, [sp, #8]
   15060:	ldr	r0, [r0]
   15064:	str	r0, [sp]
   15068:	ldr	r0, [fp, #-4]
   1506c:	movw	r1, #0
   15070:	cmp	r0, r1
   15074:	bne	150c0 <__assert_fail@plt+0x4258>
   15078:	ldr	r0, [sp]
   1507c:	cmp	r0, #0
   15080:	bne	150bc <__assert_fail@plt+0x4254>
   15084:	ldr	r0, [sp, #4]
   15088:	movw	r1, #64	; 0x40
   1508c:	udiv	r0, r1, r0
   15090:	str	r0, [sp]
   15094:	ldr	r0, [sp]
   15098:	cmp	r0, #0
   1509c:	movw	r0, #0
   150a0:	movne	r0, #1
   150a4:	mvn	r1, #0
   150a8:	eor	r0, r0, r1
   150ac:	and	r0, r0, #1
   150b0:	ldr	r1, [sp]
   150b4:	add	r0, r1, r0
   150b8:	str	r0, [sp]
   150bc:	b	150f0 <__assert_fail@plt+0x4288>
   150c0:	ldr	r0, [sp]
   150c4:	ldr	r1, [sp]
   150c8:	lsr	r1, r1, #1
   150cc:	add	r1, r1, #1
   150d0:	adds	r0, r0, r1
   150d4:	mov	r1, #0
   150d8:	adc	r1, r1, #0
   150dc:	str	r0, [sp]
   150e0:	tst	r1, #1
   150e4:	beq	150ec <__assert_fail@plt+0x4284>
   150e8:	bl	17c44 <__assert_fail@plt+0x6ddc>
   150ec:	b	150f0 <__assert_fail@plt+0x4288>
   150f0:	ldr	r0, [fp, #-4]
   150f4:	ldr	r1, [sp]
   150f8:	ldr	r2, [sp, #4]
   150fc:	bl	14df4 <__assert_fail@plt+0x3f8c>
   15100:	str	r0, [fp, #-4]
   15104:	ldr	r0, [sp]
   15108:	ldr	r1, [sp, #8]
   1510c:	str	r0, [r1]
   15110:	ldr	r0, [fp, #-4]
   15114:	mov	sp, fp
   15118:	pop	{fp, pc}
   1511c:	push	{fp, lr}
   15120:	mov	fp, sp
   15124:	sub	sp, sp, #376	; 0x178
   15128:	ldr	ip, [fp, #8]
   1512c:	str	r0, [fp, #-4]
   15130:	str	r1, [fp, #-8]
   15134:	str	r2, [fp, #-12]
   15138:	str	r3, [fp, #-16]
   1513c:	ldr	r0, [fp, #-8]
   15140:	ldr	r0, [r0]
   15144:	str	r0, [fp, #-20]	; 0xffffffec
   15148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1514c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15150:	asr	r1, r1, #1
   15154:	add	r1, r0, r1
   15158:	mov	r2, #1
   1515c:	cmp	r1, r0
   15160:	movwvc	r2, #0
   15164:	str	r1, [fp, #-24]	; 0xffffffe8
   15168:	tst	r2, #1
   1516c:	str	ip, [fp, #-36]	; 0xffffffdc
   15170:	beq	1517c <__assert_fail@plt+0x4314>
   15174:	ldr	r0, [pc, #4044]	; 16148 <__assert_fail@plt+0x52e0>
   15178:	str	r0, [fp, #-24]	; 0xffffffe8
   1517c:	ldr	r0, [fp, #-16]
   15180:	movw	r1, #0
   15184:	cmp	r1, r0
   15188:	bgt	151a4 <__assert_fail@plt+0x433c>
   1518c:	ldr	r0, [fp, #-16]
   15190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15194:	cmp	r0, r1
   15198:	bge	151a4 <__assert_fail@plt+0x433c>
   1519c:	ldr	r0, [fp, #-16]
   151a0:	str	r0, [fp, #-24]	; 0xffffffe8
   151a4:	b	1557c <__assert_fail@plt+0x4714>
   151a8:	b	151ac <__assert_fail@plt+0x4344>
   151ac:	ldr	r0, [fp, #8]
   151b0:	cmp	r0, #0
   151b4:	bge	152c8 <__assert_fail@plt+0x4460>
   151b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151bc:	cmp	r0, #0
   151c0:	bge	1524c <__assert_fail@plt+0x43e4>
   151c4:	b	151c8 <__assert_fail@plt+0x4360>
   151c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151cc:	ldr	r1, [fp, #8]
   151d0:	movw	r2, #127	; 0x7f
   151d4:	sdiv	r1, r2, r1
   151d8:	cmp	r0, r1
   151dc:	blt	15368 <__assert_fail@plt+0x4500>
   151e0:	b	15380 <__assert_fail@plt+0x4518>
   151e4:	b	151e8 <__assert_fail@plt+0x4380>
   151e8:	ldr	r0, [pc, #4076]	; 161dc <__assert_fail@plt+0x5374>
   151ec:	ldr	r1, [fp, #8]
   151f0:	cmp	r1, r0
   151f4:	blt	1520c <__assert_fail@plt+0x43a4>
   151f8:	b	15218 <__assert_fail@plt+0x43b0>
   151fc:	ldr	r0, [fp, #8]
   15200:	movw	r1, #0
   15204:	cmp	r1, r0
   15208:	bge	15218 <__assert_fail@plt+0x43b0>
   1520c:	movw	r0, #0
   15210:	str	r0, [fp, #-40]	; 0xffffffd8
   15214:	b	15230 <__assert_fail@plt+0x43c8>
   15218:	ldr	r0, [fp, #8]
   1521c:	movw	r1, #0
   15220:	sub	r0, r1, r0
   15224:	movw	r1, #127	; 0x7f
   15228:	sdiv	r0, r1, r0
   1522c:	str	r0, [fp, #-40]	; 0xffffffd8
   15230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15238:	mvn	r2, #0
   1523c:	sub	r1, r2, r1
   15240:	cmp	r0, r1
   15244:	ble	15368 <__assert_fail@plt+0x4500>
   15248:	b	15380 <__assert_fail@plt+0x4518>
   1524c:	b	15250 <__assert_fail@plt+0x43e8>
   15250:	b	152ac <__assert_fail@plt+0x4444>
   15254:	b	152ac <__assert_fail@plt+0x4444>
   15258:	ldr	r0, [fp, #8]
   1525c:	cmn	r0, #1
   15260:	bne	152ac <__assert_fail@plt+0x4444>
   15264:	b	15268 <__assert_fail@plt+0x4400>
   15268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1526c:	mvn	r1, #127	; 0x7f
   15270:	add	r0, r0, r1
   15274:	movw	r1, #0
   15278:	cmp	r1, r0
   1527c:	blt	15368 <__assert_fail@plt+0x4500>
   15280:	b	15380 <__assert_fail@plt+0x4518>
   15284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15288:	movw	r1, #0
   1528c:	cmp	r1, r0
   15290:	bge	15380 <__assert_fail@plt+0x4518>
   15294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15298:	sub	r0, r0, #1
   1529c:	movw	r1, #127	; 0x7f
   152a0:	cmp	r1, r0
   152a4:	blt	15368 <__assert_fail@plt+0x4500>
   152a8:	b	15380 <__assert_fail@plt+0x4518>
   152ac:	ldr	r0, [fp, #8]
   152b0:	mvn	r1, #127	; 0x7f
   152b4:	sdiv	r0, r1, r0
   152b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152bc:	cmp	r0, r1
   152c0:	blt	15368 <__assert_fail@plt+0x4500>
   152c4:	b	15380 <__assert_fail@plt+0x4518>
   152c8:	ldr	r0, [fp, #8]
   152cc:	cmp	r0, #0
   152d0:	bne	152d8 <__assert_fail@plt+0x4470>
   152d4:	b	15380 <__assert_fail@plt+0x4518>
   152d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152dc:	cmp	r0, #0
   152e0:	bge	15350 <__assert_fail@plt+0x44e8>
   152e4:	b	152e8 <__assert_fail@plt+0x4480>
   152e8:	b	15334 <__assert_fail@plt+0x44cc>
   152ec:	b	15334 <__assert_fail@plt+0x44cc>
   152f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f4:	cmn	r0, #1
   152f8:	bne	15334 <__assert_fail@plt+0x44cc>
   152fc:	b	15300 <__assert_fail@plt+0x4498>
   15300:	ldr	r0, [fp, #8]
   15304:	mvn	r1, #127	; 0x7f
   15308:	add	r0, r0, r1
   1530c:	movw	r1, #0
   15310:	cmp	r1, r0
   15314:	blt	15368 <__assert_fail@plt+0x4500>
   15318:	b	15380 <__assert_fail@plt+0x4518>
   1531c:	ldr	r0, [fp, #8]
   15320:	sub	r0, r0, #1
   15324:	movw	r1, #127	; 0x7f
   15328:	cmp	r1, r0
   1532c:	blt	15368 <__assert_fail@plt+0x4500>
   15330:	b	15380 <__assert_fail@plt+0x4518>
   15334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15338:	mvn	r1, #127	; 0x7f
   1533c:	sdiv	r0, r1, r0
   15340:	ldr	r1, [fp, #8]
   15344:	cmp	r0, r1
   15348:	blt	15368 <__assert_fail@plt+0x4500>
   1534c:	b	15380 <__assert_fail@plt+0x4518>
   15350:	ldr	r0, [fp, #8]
   15354:	movw	r1, #127	; 0x7f
   15358:	sdiv	r0, r1, r0
   1535c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15360:	cmp	r0, r1
   15364:	bge	15380 <__assert_fail@plt+0x4518>
   15368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1536c:	ldr	r1, [fp, #8]
   15370:	mul	r0, r0, r1
   15374:	sxtb	r0, r0
   15378:	str	r0, [fp, #-28]	; 0xffffffe4
   1537c:	b	16594 <__assert_fail@plt+0x572c>
   15380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15384:	ldr	r1, [fp, #8]
   15388:	mul	r0, r0, r1
   1538c:	sxtb	r0, r0
   15390:	str	r0, [fp, #-28]	; 0xffffffe4
   15394:	b	165a4 <__assert_fail@plt+0x573c>
   15398:	ldr	r0, [fp, #8]
   1539c:	cmp	r0, #0
   153a0:	bge	154b0 <__assert_fail@plt+0x4648>
   153a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153a8:	cmp	r0, #0
   153ac:	bge	15438 <__assert_fail@plt+0x45d0>
   153b0:	b	153b4 <__assert_fail@plt+0x454c>
   153b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153b8:	ldr	r1, [fp, #8]
   153bc:	movw	r2, #255	; 0xff
   153c0:	sdiv	r1, r2, r1
   153c4:	cmp	r0, r1
   153c8:	blt	1554c <__assert_fail@plt+0x46e4>
   153cc:	b	15564 <__assert_fail@plt+0x46fc>
   153d0:	b	153d4 <__assert_fail@plt+0x456c>
   153d4:	ldr	r0, [pc, #3584]	; 161dc <__assert_fail@plt+0x5374>
   153d8:	ldr	r1, [fp, #8]
   153dc:	cmp	r1, r0
   153e0:	blt	153f8 <__assert_fail@plt+0x4590>
   153e4:	b	15404 <__assert_fail@plt+0x459c>
   153e8:	ldr	r0, [fp, #8]
   153ec:	movw	r1, #0
   153f0:	cmp	r1, r0
   153f4:	bge	15404 <__assert_fail@plt+0x459c>
   153f8:	movw	r0, #0
   153fc:	str	r0, [fp, #-44]	; 0xffffffd4
   15400:	b	1541c <__assert_fail@plt+0x45b4>
   15404:	ldr	r0, [fp, #8]
   15408:	movw	r1, #0
   1540c:	sub	r0, r1, r0
   15410:	movw	r1, #255	; 0xff
   15414:	sdiv	r0, r1, r0
   15418:	str	r0, [fp, #-44]	; 0xffffffd4
   1541c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15424:	mvn	r2, #0
   15428:	sub	r1, r2, r1
   1542c:	cmp	r0, r1
   15430:	ble	1554c <__assert_fail@plt+0x46e4>
   15434:	b	15564 <__assert_fail@plt+0x46fc>
   15438:	b	1543c <__assert_fail@plt+0x45d4>
   1543c:	b	15494 <__assert_fail@plt+0x462c>
   15440:	b	15494 <__assert_fail@plt+0x462c>
   15444:	ldr	r0, [fp, #8]
   15448:	cmn	r0, #1
   1544c:	bne	15494 <__assert_fail@plt+0x462c>
   15450:	b	15454 <__assert_fail@plt+0x45ec>
   15454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15458:	add	r0, r0, #0
   1545c:	movw	r1, #0
   15460:	cmp	r1, r0
   15464:	blt	1554c <__assert_fail@plt+0x46e4>
   15468:	b	15564 <__assert_fail@plt+0x46fc>
   1546c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15470:	movw	r1, #0
   15474:	cmp	r1, r0
   15478:	bge	15564 <__assert_fail@plt+0x46fc>
   1547c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15480:	sub	r0, r0, #1
   15484:	mvn	r1, #0
   15488:	cmp	r1, r0
   1548c:	blt	1554c <__assert_fail@plt+0x46e4>
   15490:	b	15564 <__assert_fail@plt+0x46fc>
   15494:	ldr	r0, [fp, #8]
   15498:	movw	r1, #0
   1549c:	sdiv	r0, r1, r0
   154a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154a4:	cmp	r0, r1
   154a8:	blt	1554c <__assert_fail@plt+0x46e4>
   154ac:	b	15564 <__assert_fail@plt+0x46fc>
   154b0:	ldr	r0, [fp, #8]
   154b4:	cmp	r0, #0
   154b8:	bne	154c0 <__assert_fail@plt+0x4658>
   154bc:	b	15564 <__assert_fail@plt+0x46fc>
   154c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c4:	cmp	r0, #0
   154c8:	bge	15534 <__assert_fail@plt+0x46cc>
   154cc:	b	154d0 <__assert_fail@plt+0x4668>
   154d0:	b	15518 <__assert_fail@plt+0x46b0>
   154d4:	b	15518 <__assert_fail@plt+0x46b0>
   154d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154dc:	cmn	r0, #1
   154e0:	bne	15518 <__assert_fail@plt+0x46b0>
   154e4:	b	154e8 <__assert_fail@plt+0x4680>
   154e8:	ldr	r0, [fp, #8]
   154ec:	add	r0, r0, #0
   154f0:	movw	r1, #0
   154f4:	cmp	r1, r0
   154f8:	blt	1554c <__assert_fail@plt+0x46e4>
   154fc:	b	15564 <__assert_fail@plt+0x46fc>
   15500:	ldr	r0, [fp, #8]
   15504:	sub	r0, r0, #1
   15508:	mvn	r1, #0
   1550c:	cmp	r1, r0
   15510:	blt	1554c <__assert_fail@plt+0x46e4>
   15514:	b	15564 <__assert_fail@plt+0x46fc>
   15518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1551c:	movw	r1, #0
   15520:	sdiv	r0, r1, r0
   15524:	ldr	r1, [fp, #8]
   15528:	cmp	r0, r1
   1552c:	blt	1554c <__assert_fail@plt+0x46e4>
   15530:	b	15564 <__assert_fail@plt+0x46fc>
   15534:	ldr	r0, [fp, #8]
   15538:	movw	r1, #255	; 0xff
   1553c:	sdiv	r0, r1, r0
   15540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15544:	cmp	r0, r1
   15548:	bge	15564 <__assert_fail@plt+0x46fc>
   1554c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15550:	ldr	r1, [fp, #8]
   15554:	mul	r0, r0, r1
   15558:	and	r0, r0, #255	; 0xff
   1555c:	str	r0, [fp, #-28]	; 0xffffffe4
   15560:	b	16594 <__assert_fail@plt+0x572c>
   15564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15568:	ldr	r1, [fp, #8]
   1556c:	mul	r0, r0, r1
   15570:	and	r0, r0, #255	; 0xff
   15574:	str	r0, [fp, #-28]	; 0xffffffe4
   15578:	b	165a4 <__assert_fail@plt+0x573c>
   1557c:	b	15954 <__assert_fail@plt+0x4aec>
   15580:	b	15584 <__assert_fail@plt+0x471c>
   15584:	ldr	r0, [fp, #8]
   15588:	cmp	r0, #0
   1558c:	bge	156a0 <__assert_fail@plt+0x4838>
   15590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15594:	cmp	r0, #0
   15598:	bge	15624 <__assert_fail@plt+0x47bc>
   1559c:	b	155a0 <__assert_fail@plt+0x4738>
   155a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155a4:	ldr	r1, [fp, #8]
   155a8:	movw	r2, #32767	; 0x7fff
   155ac:	sdiv	r1, r2, r1
   155b0:	cmp	r0, r1
   155b4:	blt	15740 <__assert_fail@plt+0x48d8>
   155b8:	b	15758 <__assert_fail@plt+0x48f0>
   155bc:	b	155c0 <__assert_fail@plt+0x4758>
   155c0:	ldr	r0, [pc, #3092]	; 161dc <__assert_fail@plt+0x5374>
   155c4:	ldr	r1, [fp, #8]
   155c8:	cmp	r1, r0
   155cc:	blt	155e4 <__assert_fail@plt+0x477c>
   155d0:	b	155f0 <__assert_fail@plt+0x4788>
   155d4:	ldr	r0, [fp, #8]
   155d8:	movw	r1, #0
   155dc:	cmp	r1, r0
   155e0:	bge	155f0 <__assert_fail@plt+0x4788>
   155e4:	movw	r0, #0
   155e8:	str	r0, [fp, #-48]	; 0xffffffd0
   155ec:	b	15608 <__assert_fail@plt+0x47a0>
   155f0:	ldr	r0, [fp, #8]
   155f4:	movw	r1, #0
   155f8:	sub	r0, r1, r0
   155fc:	movw	r1, #32767	; 0x7fff
   15600:	sdiv	r0, r1, r0
   15604:	str	r0, [fp, #-48]	; 0xffffffd0
   15608:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1560c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15610:	mvn	r2, #0
   15614:	sub	r1, r2, r1
   15618:	cmp	r0, r1
   1561c:	ble	15740 <__assert_fail@plt+0x48d8>
   15620:	b	15758 <__assert_fail@plt+0x48f0>
   15624:	b	15628 <__assert_fail@plt+0x47c0>
   15628:	b	15684 <__assert_fail@plt+0x481c>
   1562c:	b	15684 <__assert_fail@plt+0x481c>
   15630:	ldr	r0, [fp, #8]
   15634:	cmn	r0, #1
   15638:	bne	15684 <__assert_fail@plt+0x481c>
   1563c:	b	15640 <__assert_fail@plt+0x47d8>
   15640:	ldr	r0, [pc, #3928]	; 165a0 <__assert_fail@plt+0x5738>
   15644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15648:	add	r0, r1, r0
   1564c:	movw	r1, #0
   15650:	cmp	r1, r0
   15654:	blt	15740 <__assert_fail@plt+0x48d8>
   15658:	b	15758 <__assert_fail@plt+0x48f0>
   1565c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15660:	movw	r1, #0
   15664:	cmp	r1, r0
   15668:	bge	15758 <__assert_fail@plt+0x48f0>
   1566c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15670:	sub	r0, r0, #1
   15674:	movw	r1, #32767	; 0x7fff
   15678:	cmp	r1, r0
   1567c:	blt	15740 <__assert_fail@plt+0x48d8>
   15680:	b	15758 <__assert_fail@plt+0x48f0>
   15684:	ldr	r0, [pc, #3860]	; 165a0 <__assert_fail@plt+0x5738>
   15688:	ldr	r1, [fp, #8]
   1568c:	sdiv	r0, r0, r1
   15690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15694:	cmp	r0, r1
   15698:	blt	15740 <__assert_fail@plt+0x48d8>
   1569c:	b	15758 <__assert_fail@plt+0x48f0>
   156a0:	ldr	r0, [fp, #8]
   156a4:	cmp	r0, #0
   156a8:	bne	156b0 <__assert_fail@plt+0x4848>
   156ac:	b	15758 <__assert_fail@plt+0x48f0>
   156b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156b4:	cmp	r0, #0
   156b8:	bge	15728 <__assert_fail@plt+0x48c0>
   156bc:	b	156c0 <__assert_fail@plt+0x4858>
   156c0:	b	1570c <__assert_fail@plt+0x48a4>
   156c4:	b	1570c <__assert_fail@plt+0x48a4>
   156c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156cc:	cmn	r0, #1
   156d0:	bne	1570c <__assert_fail@plt+0x48a4>
   156d4:	b	156d8 <__assert_fail@plt+0x4870>
   156d8:	ldr	r0, [pc, #3776]	; 165a0 <__assert_fail@plt+0x5738>
   156dc:	ldr	r1, [fp, #8]
   156e0:	add	r0, r1, r0
   156e4:	movw	r1, #0
   156e8:	cmp	r1, r0
   156ec:	blt	15740 <__assert_fail@plt+0x48d8>
   156f0:	b	15758 <__assert_fail@plt+0x48f0>
   156f4:	ldr	r0, [fp, #8]
   156f8:	sub	r0, r0, #1
   156fc:	movw	r1, #32767	; 0x7fff
   15700:	cmp	r1, r0
   15704:	blt	15740 <__assert_fail@plt+0x48d8>
   15708:	b	15758 <__assert_fail@plt+0x48f0>
   1570c:	ldr	r0, [pc, #3724]	; 165a0 <__assert_fail@plt+0x5738>
   15710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15714:	sdiv	r0, r0, r1
   15718:	ldr	r1, [fp, #8]
   1571c:	cmp	r0, r1
   15720:	blt	15740 <__assert_fail@plt+0x48d8>
   15724:	b	15758 <__assert_fail@plt+0x48f0>
   15728:	ldr	r0, [fp, #8]
   1572c:	movw	r1, #32767	; 0x7fff
   15730:	sdiv	r0, r1, r0
   15734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15738:	cmp	r0, r1
   1573c:	bge	15758 <__assert_fail@plt+0x48f0>
   15740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15744:	ldr	r1, [fp, #8]
   15748:	mul	r0, r0, r1
   1574c:	sxth	r0, r0
   15750:	str	r0, [fp, #-28]	; 0xffffffe4
   15754:	b	16594 <__assert_fail@plt+0x572c>
   15758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1575c:	ldr	r1, [fp, #8]
   15760:	mul	r0, r0, r1
   15764:	sxth	r0, r0
   15768:	str	r0, [fp, #-28]	; 0xffffffe4
   1576c:	b	165a4 <__assert_fail@plt+0x573c>
   15770:	ldr	r0, [fp, #8]
   15774:	cmp	r0, #0
   15778:	bge	15888 <__assert_fail@plt+0x4a20>
   1577c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15780:	cmp	r0, #0
   15784:	bge	15810 <__assert_fail@plt+0x49a8>
   15788:	b	1578c <__assert_fail@plt+0x4924>
   1578c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15790:	ldr	r1, [fp, #8]
   15794:	movw	r2, #65535	; 0xffff
   15798:	sdiv	r1, r2, r1
   1579c:	cmp	r0, r1
   157a0:	blt	15924 <__assert_fail@plt+0x4abc>
   157a4:	b	1593c <__assert_fail@plt+0x4ad4>
   157a8:	b	157ac <__assert_fail@plt+0x4944>
   157ac:	ldr	r0, [pc, #2600]	; 161dc <__assert_fail@plt+0x5374>
   157b0:	ldr	r1, [fp, #8]
   157b4:	cmp	r1, r0
   157b8:	blt	157d0 <__assert_fail@plt+0x4968>
   157bc:	b	157dc <__assert_fail@plt+0x4974>
   157c0:	ldr	r0, [fp, #8]
   157c4:	movw	r1, #0
   157c8:	cmp	r1, r0
   157cc:	bge	157dc <__assert_fail@plt+0x4974>
   157d0:	movw	r0, #0
   157d4:	str	r0, [fp, #-52]	; 0xffffffcc
   157d8:	b	157f4 <__assert_fail@plt+0x498c>
   157dc:	ldr	r0, [fp, #8]
   157e0:	movw	r1, #0
   157e4:	sub	r0, r1, r0
   157e8:	movw	r1, #65535	; 0xffff
   157ec:	sdiv	r0, r1, r0
   157f0:	str	r0, [fp, #-52]	; 0xffffffcc
   157f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   157f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157fc:	mvn	r2, #0
   15800:	sub	r1, r2, r1
   15804:	cmp	r0, r1
   15808:	ble	15924 <__assert_fail@plt+0x4abc>
   1580c:	b	1593c <__assert_fail@plt+0x4ad4>
   15810:	b	15814 <__assert_fail@plt+0x49ac>
   15814:	b	1586c <__assert_fail@plt+0x4a04>
   15818:	b	1586c <__assert_fail@plt+0x4a04>
   1581c:	ldr	r0, [fp, #8]
   15820:	cmn	r0, #1
   15824:	bne	1586c <__assert_fail@plt+0x4a04>
   15828:	b	1582c <__assert_fail@plt+0x49c4>
   1582c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15830:	add	r0, r0, #0
   15834:	movw	r1, #0
   15838:	cmp	r1, r0
   1583c:	blt	15924 <__assert_fail@plt+0x4abc>
   15840:	b	1593c <__assert_fail@plt+0x4ad4>
   15844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15848:	movw	r1, #0
   1584c:	cmp	r1, r0
   15850:	bge	1593c <__assert_fail@plt+0x4ad4>
   15854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15858:	sub	r0, r0, #1
   1585c:	mvn	r1, #0
   15860:	cmp	r1, r0
   15864:	blt	15924 <__assert_fail@plt+0x4abc>
   15868:	b	1593c <__assert_fail@plt+0x4ad4>
   1586c:	ldr	r0, [fp, #8]
   15870:	movw	r1, #0
   15874:	sdiv	r0, r1, r0
   15878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1587c:	cmp	r0, r1
   15880:	blt	15924 <__assert_fail@plt+0x4abc>
   15884:	b	1593c <__assert_fail@plt+0x4ad4>
   15888:	ldr	r0, [fp, #8]
   1588c:	cmp	r0, #0
   15890:	bne	15898 <__assert_fail@plt+0x4a30>
   15894:	b	1593c <__assert_fail@plt+0x4ad4>
   15898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1589c:	cmp	r0, #0
   158a0:	bge	1590c <__assert_fail@plt+0x4aa4>
   158a4:	b	158a8 <__assert_fail@plt+0x4a40>
   158a8:	b	158f0 <__assert_fail@plt+0x4a88>
   158ac:	b	158f0 <__assert_fail@plt+0x4a88>
   158b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b4:	cmn	r0, #1
   158b8:	bne	158f0 <__assert_fail@plt+0x4a88>
   158bc:	b	158c0 <__assert_fail@plt+0x4a58>
   158c0:	ldr	r0, [fp, #8]
   158c4:	add	r0, r0, #0
   158c8:	movw	r1, #0
   158cc:	cmp	r1, r0
   158d0:	blt	15924 <__assert_fail@plt+0x4abc>
   158d4:	b	1593c <__assert_fail@plt+0x4ad4>
   158d8:	ldr	r0, [fp, #8]
   158dc:	sub	r0, r0, #1
   158e0:	mvn	r1, #0
   158e4:	cmp	r1, r0
   158e8:	blt	15924 <__assert_fail@plt+0x4abc>
   158ec:	b	1593c <__assert_fail@plt+0x4ad4>
   158f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158f4:	movw	r1, #0
   158f8:	sdiv	r0, r1, r0
   158fc:	ldr	r1, [fp, #8]
   15900:	cmp	r0, r1
   15904:	blt	15924 <__assert_fail@plt+0x4abc>
   15908:	b	1593c <__assert_fail@plt+0x4ad4>
   1590c:	ldr	r0, [fp, #8]
   15910:	movw	r1, #65535	; 0xffff
   15914:	sdiv	r0, r1, r0
   15918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1591c:	cmp	r0, r1
   15920:	bge	1593c <__assert_fail@plt+0x4ad4>
   15924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15928:	ldr	r1, [fp, #8]
   1592c:	mul	r0, r0, r1
   15930:	uxth	r0, r0
   15934:	str	r0, [fp, #-28]	; 0xffffffe4
   15938:	b	16594 <__assert_fail@plt+0x572c>
   1593c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15940:	ldr	r1, [fp, #8]
   15944:	mul	r0, r0, r1
   15948:	uxth	r0, r0
   1594c:	str	r0, [fp, #-28]	; 0xffffffe4
   15950:	b	165a4 <__assert_fail@plt+0x573c>
   15954:	b	15958 <__assert_fail@plt+0x4af0>
   15958:	b	1595c <__assert_fail@plt+0x4af4>
   1595c:	ldr	r0, [fp, #8]
   15960:	cmp	r0, #0
   15964:	bge	15a68 <__assert_fail@plt+0x4c00>
   15968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1596c:	cmp	r0, #0
   15970:	bge	159fc <__assert_fail@plt+0x4b94>
   15974:	b	15978 <__assert_fail@plt+0x4b10>
   15978:	ldr	r0, [pc, #1992]	; 16148 <__assert_fail@plt+0x52e0>
   1597c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15980:	ldr	r2, [fp, #8]
   15984:	sdiv	r0, r0, r2
   15988:	cmp	r1, r0
   1598c:	blt	15af8 <__assert_fail@plt+0x4c90>
   15990:	b	15b0c <__assert_fail@plt+0x4ca4>
   15994:	b	15998 <__assert_fail@plt+0x4b30>
   15998:	ldr	r0, [pc, #2108]	; 161dc <__assert_fail@plt+0x5374>
   1599c:	ldr	r1, [fp, #8]
   159a0:	cmp	r1, r0
   159a4:	blt	159bc <__assert_fail@plt+0x4b54>
   159a8:	b	159c8 <__assert_fail@plt+0x4b60>
   159ac:	ldr	r0, [fp, #8]
   159b0:	movw	r1, #0
   159b4:	cmp	r1, r0
   159b8:	bge	159c8 <__assert_fail@plt+0x4b60>
   159bc:	movw	r0, #0
   159c0:	str	r0, [fp, #-56]	; 0xffffffc8
   159c4:	b	159e0 <__assert_fail@plt+0x4b78>
   159c8:	ldr	r0, [pc, #1912]	; 16148 <__assert_fail@plt+0x52e0>
   159cc:	ldr	r1, [fp, #8]
   159d0:	movw	r2, #0
   159d4:	sub	r1, r2, r1
   159d8:	sdiv	r0, r0, r1
   159dc:	str	r0, [fp, #-56]	; 0xffffffc8
   159e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   159e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159e8:	mvn	r2, #0
   159ec:	sub	r1, r2, r1
   159f0:	cmp	r0, r1
   159f4:	ble	15af8 <__assert_fail@plt+0x4c90>
   159f8:	b	15b0c <__assert_fail@plt+0x4ca4>
   159fc:	ldr	r0, [fp, #8]
   15a00:	cmn	r0, #1
   15a04:	bne	15a4c <__assert_fail@plt+0x4be4>
   15a08:	b	15a0c <__assert_fail@plt+0x4ba4>
   15a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a10:	add	r0, r0, #-2147483648	; 0x80000000
   15a14:	movw	r1, #0
   15a18:	cmp	r1, r0
   15a1c:	blt	15af8 <__assert_fail@plt+0x4c90>
   15a20:	b	15b0c <__assert_fail@plt+0x4ca4>
   15a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a28:	movw	r1, #0
   15a2c:	cmp	r1, r0
   15a30:	bge	15b0c <__assert_fail@plt+0x4ca4>
   15a34:	ldr	r0, [pc, #1804]	; 16148 <__assert_fail@plt+0x52e0>
   15a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a3c:	sub	r1, r1, #1
   15a40:	cmp	r0, r1
   15a44:	blt	15af8 <__assert_fail@plt+0x4c90>
   15a48:	b	15b0c <__assert_fail@plt+0x4ca4>
   15a4c:	ldr	r0, [pc, #4072]	; 16a3c <__assert_fail@plt+0x5bd4>
   15a50:	ldr	r1, [fp, #8]
   15a54:	sdiv	r0, r0, r1
   15a58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a5c:	cmp	r0, r1
   15a60:	blt	15af8 <__assert_fail@plt+0x4c90>
   15a64:	b	15b0c <__assert_fail@plt+0x4ca4>
   15a68:	ldr	r0, [fp, #8]
   15a6c:	cmp	r0, #0
   15a70:	bne	15a78 <__assert_fail@plt+0x4c10>
   15a74:	b	15b0c <__assert_fail@plt+0x4ca4>
   15a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a7c:	cmp	r0, #0
   15a80:	bge	15ae0 <__assert_fail@plt+0x4c78>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	cmn	r0, #1
   15a8c:	bne	15ac4 <__assert_fail@plt+0x4c5c>
   15a90:	b	15a94 <__assert_fail@plt+0x4c2c>
   15a94:	ldr	r0, [fp, #8]
   15a98:	add	r0, r0, #-2147483648	; 0x80000000
   15a9c:	movw	r1, #0
   15aa0:	cmp	r1, r0
   15aa4:	blt	15af8 <__assert_fail@plt+0x4c90>
   15aa8:	b	15b0c <__assert_fail@plt+0x4ca4>
   15aac:	ldr	r0, [pc, #1684]	; 16148 <__assert_fail@plt+0x52e0>
   15ab0:	ldr	r1, [fp, #8]
   15ab4:	sub	r1, r1, #1
   15ab8:	cmp	r0, r1
   15abc:	blt	15af8 <__assert_fail@plt+0x4c90>
   15ac0:	b	15b0c <__assert_fail@plt+0x4ca4>
   15ac4:	ldr	r0, [pc, #3952]	; 16a3c <__assert_fail@plt+0x5bd4>
   15ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15acc:	sdiv	r0, r0, r1
   15ad0:	ldr	r1, [fp, #8]
   15ad4:	cmp	r0, r1
   15ad8:	blt	15af8 <__assert_fail@plt+0x4c90>
   15adc:	b	15b0c <__assert_fail@plt+0x4ca4>
   15ae0:	ldr	r0, [pc, #1632]	; 16148 <__assert_fail@plt+0x52e0>
   15ae4:	ldr	r1, [fp, #8]
   15ae8:	sdiv	r0, r0, r1
   15aec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15af0:	cmp	r0, r1
   15af4:	bge	15b0c <__assert_fail@plt+0x4ca4>
   15af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15afc:	ldr	r1, [fp, #8]
   15b00:	mul	r0, r0, r1
   15b04:	str	r0, [fp, #-28]	; 0xffffffe4
   15b08:	b	16594 <__assert_fail@plt+0x572c>
   15b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b10:	ldr	r1, [fp, #8]
   15b14:	mul	r0, r0, r1
   15b18:	str	r0, [fp, #-28]	; 0xffffffe4
   15b1c:	b	165a4 <__assert_fail@plt+0x573c>
   15b20:	ldr	r0, [fp, #8]
   15b24:	cmp	r0, #0
   15b28:	bge	15c38 <__assert_fail@plt+0x4dd0>
   15b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b30:	cmp	r0, #0
   15b34:	bge	15bc0 <__assert_fail@plt+0x4d58>
   15b38:	b	15b58 <__assert_fail@plt+0x4cf0>
   15b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b40:	ldr	r1, [fp, #8]
   15b44:	mvn	r2, #0
   15b48:	udiv	r1, r2, r1
   15b4c:	cmp	r0, r1
   15b50:	bcc	15cd4 <__assert_fail@plt+0x4e6c>
   15b54:	b	15ce8 <__assert_fail@plt+0x4e80>
   15b58:	b	15b5c <__assert_fail@plt+0x4cf4>
   15b5c:	ldr	r0, [pc, #1656]	; 161dc <__assert_fail@plt+0x5374>
   15b60:	ldr	r1, [fp, #8]
   15b64:	cmp	r1, r0
   15b68:	blt	15b80 <__assert_fail@plt+0x4d18>
   15b6c:	b	15b8c <__assert_fail@plt+0x4d24>
   15b70:	ldr	r0, [fp, #8]
   15b74:	movw	r1, #0
   15b78:	cmp	r1, r0
   15b7c:	bge	15b8c <__assert_fail@plt+0x4d24>
   15b80:	movw	r0, #1
   15b84:	str	r0, [fp, #-60]	; 0xffffffc4
   15b88:	b	15ba4 <__assert_fail@plt+0x4d3c>
   15b8c:	ldr	r0, [fp, #8]
   15b90:	movw	r1, #0
   15b94:	sub	r0, r1, r0
   15b98:	mvn	r1, #0
   15b9c:	udiv	r0, r1, r0
   15ba0:	str	r0, [fp, #-60]	; 0xffffffc4
   15ba4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bac:	mvn	r2, #0
   15bb0:	sub	r1, r2, r1
   15bb4:	cmp	r0, r1
   15bb8:	bls	15cd4 <__assert_fail@plt+0x4e6c>
   15bbc:	b	15ce8 <__assert_fail@plt+0x4e80>
   15bc0:	b	15bc4 <__assert_fail@plt+0x4d5c>
   15bc4:	b	15c1c <__assert_fail@plt+0x4db4>
   15bc8:	b	15c1c <__assert_fail@plt+0x4db4>
   15bcc:	ldr	r0, [fp, #8]
   15bd0:	cmn	r0, #1
   15bd4:	bne	15c1c <__assert_fail@plt+0x4db4>
   15bd8:	b	15bdc <__assert_fail@plt+0x4d74>
   15bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15be0:	add	r0, r0, #0
   15be4:	movw	r1, #0
   15be8:	cmp	r1, r0
   15bec:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15bf0:	b	15ce8 <__assert_fail@plt+0x4e80>
   15bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf8:	movw	r1, #0
   15bfc:	cmp	r1, r0
   15c00:	bge	15ce8 <__assert_fail@plt+0x4e80>
   15c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c08:	sub	r0, r0, #1
   15c0c:	mvn	r1, #0
   15c10:	cmp	r1, r0
   15c14:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15c18:	b	15ce8 <__assert_fail@plt+0x4e80>
   15c1c:	ldr	r0, [fp, #8]
   15c20:	movw	r1, #0
   15c24:	sdiv	r0, r1, r0
   15c28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c2c:	cmp	r0, r1
   15c30:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15c34:	b	15ce8 <__assert_fail@plt+0x4e80>
   15c38:	ldr	r0, [fp, #8]
   15c3c:	cmp	r0, #0
   15c40:	bne	15c48 <__assert_fail@plt+0x4de0>
   15c44:	b	15ce8 <__assert_fail@plt+0x4e80>
   15c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c4c:	cmp	r0, #0
   15c50:	bge	15cbc <__assert_fail@plt+0x4e54>
   15c54:	b	15c58 <__assert_fail@plt+0x4df0>
   15c58:	b	15ca0 <__assert_fail@plt+0x4e38>
   15c5c:	b	15ca0 <__assert_fail@plt+0x4e38>
   15c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c64:	cmn	r0, #1
   15c68:	bne	15ca0 <__assert_fail@plt+0x4e38>
   15c6c:	b	15c70 <__assert_fail@plt+0x4e08>
   15c70:	ldr	r0, [fp, #8]
   15c74:	add	r0, r0, #0
   15c78:	movw	r1, #0
   15c7c:	cmp	r1, r0
   15c80:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15c84:	b	15ce8 <__assert_fail@plt+0x4e80>
   15c88:	ldr	r0, [fp, #8]
   15c8c:	sub	r0, r0, #1
   15c90:	mvn	r1, #0
   15c94:	cmp	r1, r0
   15c98:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15c9c:	b	15ce8 <__assert_fail@plt+0x4e80>
   15ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ca4:	movw	r1, #0
   15ca8:	sdiv	r0, r1, r0
   15cac:	ldr	r1, [fp, #8]
   15cb0:	cmp	r0, r1
   15cb4:	blt	15cd4 <__assert_fail@plt+0x4e6c>
   15cb8:	b	15ce8 <__assert_fail@plt+0x4e80>
   15cbc:	ldr	r0, [fp, #8]
   15cc0:	mvn	r1, #0
   15cc4:	udiv	r0, r1, r0
   15cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ccc:	cmp	r0, r1
   15cd0:	bcs	15ce8 <__assert_fail@plt+0x4e80>
   15cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cd8:	ldr	r1, [fp, #8]
   15cdc:	mul	r0, r0, r1
   15ce0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ce4:	b	16594 <__assert_fail@plt+0x572c>
   15ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cec:	ldr	r1, [fp, #8]
   15cf0:	mul	r0, r0, r1
   15cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   15cf8:	b	165a4 <__assert_fail@plt+0x573c>
   15cfc:	b	15d00 <__assert_fail@plt+0x4e98>
   15d00:	b	15d04 <__assert_fail@plt+0x4e9c>
   15d04:	ldr	r0, [fp, #8]
   15d08:	cmp	r0, #0
   15d0c:	bge	15e10 <__assert_fail@plt+0x4fa8>
   15d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d14:	cmp	r0, #0
   15d18:	bge	15da4 <__assert_fail@plt+0x4f3c>
   15d1c:	b	15d20 <__assert_fail@plt+0x4eb8>
   15d20:	ldr	r0, [pc, #1056]	; 16148 <__assert_fail@plt+0x52e0>
   15d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d28:	ldr	r2, [fp, #8]
   15d2c:	sdiv	r0, r0, r2
   15d30:	cmp	r1, r0
   15d34:	blt	15ea0 <__assert_fail@plt+0x5038>
   15d38:	b	15eb4 <__assert_fail@plt+0x504c>
   15d3c:	b	15d40 <__assert_fail@plt+0x4ed8>
   15d40:	ldr	r0, [pc, #1172]	; 161dc <__assert_fail@plt+0x5374>
   15d44:	ldr	r1, [fp, #8]
   15d48:	cmp	r1, r0
   15d4c:	blt	15d64 <__assert_fail@plt+0x4efc>
   15d50:	b	15d70 <__assert_fail@plt+0x4f08>
   15d54:	ldr	r0, [fp, #8]
   15d58:	movw	r1, #0
   15d5c:	cmp	r1, r0
   15d60:	bge	15d70 <__assert_fail@plt+0x4f08>
   15d64:	movw	r0, #0
   15d68:	str	r0, [fp, #-64]	; 0xffffffc0
   15d6c:	b	15d88 <__assert_fail@plt+0x4f20>
   15d70:	ldr	r0, [pc, #976]	; 16148 <__assert_fail@plt+0x52e0>
   15d74:	ldr	r1, [fp, #8]
   15d78:	movw	r2, #0
   15d7c:	sub	r1, r2, r1
   15d80:	sdiv	r0, r0, r1
   15d84:	str	r0, [fp, #-64]	; 0xffffffc0
   15d88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d90:	mvn	r2, #0
   15d94:	sub	r1, r2, r1
   15d98:	cmp	r0, r1
   15d9c:	ble	15ea0 <__assert_fail@plt+0x5038>
   15da0:	b	15eb4 <__assert_fail@plt+0x504c>
   15da4:	ldr	r0, [fp, #8]
   15da8:	cmn	r0, #1
   15dac:	bne	15df4 <__assert_fail@plt+0x4f8c>
   15db0:	b	15db4 <__assert_fail@plt+0x4f4c>
   15db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15db8:	add	r0, r0, #-2147483648	; 0x80000000
   15dbc:	movw	r1, #0
   15dc0:	cmp	r1, r0
   15dc4:	blt	15ea0 <__assert_fail@plt+0x5038>
   15dc8:	b	15eb4 <__assert_fail@plt+0x504c>
   15dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dd0:	movw	r1, #0
   15dd4:	cmp	r1, r0
   15dd8:	bge	15eb4 <__assert_fail@plt+0x504c>
   15ddc:	ldr	r0, [pc, #868]	; 16148 <__assert_fail@plt+0x52e0>
   15de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15de4:	sub	r1, r1, #1
   15de8:	cmp	r0, r1
   15dec:	blt	15ea0 <__assert_fail@plt+0x5038>
   15df0:	b	15eb4 <__assert_fail@plt+0x504c>
   15df4:	ldr	r0, [pc, #3136]	; 16a3c <__assert_fail@plt+0x5bd4>
   15df8:	ldr	r1, [fp, #8]
   15dfc:	sdiv	r0, r0, r1
   15e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e04:	cmp	r0, r1
   15e08:	blt	15ea0 <__assert_fail@plt+0x5038>
   15e0c:	b	15eb4 <__assert_fail@plt+0x504c>
   15e10:	ldr	r0, [fp, #8]
   15e14:	cmp	r0, #0
   15e18:	bne	15e20 <__assert_fail@plt+0x4fb8>
   15e1c:	b	15eb4 <__assert_fail@plt+0x504c>
   15e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e24:	cmp	r0, #0
   15e28:	bge	15e88 <__assert_fail@plt+0x5020>
   15e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e30:	cmn	r0, #1
   15e34:	bne	15e6c <__assert_fail@plt+0x5004>
   15e38:	b	15e3c <__assert_fail@plt+0x4fd4>
   15e3c:	ldr	r0, [fp, #8]
   15e40:	add	r0, r0, #-2147483648	; 0x80000000
   15e44:	movw	r1, #0
   15e48:	cmp	r1, r0
   15e4c:	blt	15ea0 <__assert_fail@plt+0x5038>
   15e50:	b	15eb4 <__assert_fail@plt+0x504c>
   15e54:	ldr	r0, [pc, #748]	; 16148 <__assert_fail@plt+0x52e0>
   15e58:	ldr	r1, [fp, #8]
   15e5c:	sub	r1, r1, #1
   15e60:	cmp	r0, r1
   15e64:	blt	15ea0 <__assert_fail@plt+0x5038>
   15e68:	b	15eb4 <__assert_fail@plt+0x504c>
   15e6c:	ldr	r0, [pc, #3016]	; 16a3c <__assert_fail@plt+0x5bd4>
   15e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e74:	sdiv	r0, r0, r1
   15e78:	ldr	r1, [fp, #8]
   15e7c:	cmp	r0, r1
   15e80:	blt	15ea0 <__assert_fail@plt+0x5038>
   15e84:	b	15eb4 <__assert_fail@plt+0x504c>
   15e88:	ldr	r0, [pc, #696]	; 16148 <__assert_fail@plt+0x52e0>
   15e8c:	ldr	r1, [fp, #8]
   15e90:	sdiv	r0, r0, r1
   15e94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e98:	cmp	r0, r1
   15e9c:	bge	15eb4 <__assert_fail@plt+0x504c>
   15ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ea4:	ldr	r1, [fp, #8]
   15ea8:	mul	r0, r0, r1
   15eac:	str	r0, [fp, #-28]	; 0xffffffe4
   15eb0:	b	16594 <__assert_fail@plt+0x572c>
   15eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15eb8:	ldr	r1, [fp, #8]
   15ebc:	mul	r0, r0, r1
   15ec0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ec4:	b	165a4 <__assert_fail@plt+0x573c>
   15ec8:	ldr	r0, [fp, #8]
   15ecc:	cmp	r0, #0
   15ed0:	bge	15fe0 <__assert_fail@plt+0x5178>
   15ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ed8:	cmp	r0, #0
   15edc:	bge	15f68 <__assert_fail@plt+0x5100>
   15ee0:	b	15f00 <__assert_fail@plt+0x5098>
   15ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ee8:	ldr	r1, [fp, #8]
   15eec:	mvn	r2, #0
   15ef0:	udiv	r1, r2, r1
   15ef4:	cmp	r0, r1
   15ef8:	bcc	1607c <__assert_fail@plt+0x5214>
   15efc:	b	16090 <__assert_fail@plt+0x5228>
   15f00:	b	15f04 <__assert_fail@plt+0x509c>
   15f04:	ldr	r0, [pc, #720]	; 161dc <__assert_fail@plt+0x5374>
   15f08:	ldr	r1, [fp, #8]
   15f0c:	cmp	r1, r0
   15f10:	blt	15f28 <__assert_fail@plt+0x50c0>
   15f14:	b	15f34 <__assert_fail@plt+0x50cc>
   15f18:	ldr	r0, [fp, #8]
   15f1c:	movw	r1, #0
   15f20:	cmp	r1, r0
   15f24:	bge	15f34 <__assert_fail@plt+0x50cc>
   15f28:	movw	r0, #1
   15f2c:	str	r0, [fp, #-68]	; 0xffffffbc
   15f30:	b	15f4c <__assert_fail@plt+0x50e4>
   15f34:	ldr	r0, [fp, #8]
   15f38:	movw	r1, #0
   15f3c:	sub	r0, r1, r0
   15f40:	mvn	r1, #0
   15f44:	udiv	r0, r1, r0
   15f48:	str	r0, [fp, #-68]	; 0xffffffbc
   15f4c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f54:	mvn	r2, #0
   15f58:	sub	r1, r2, r1
   15f5c:	cmp	r0, r1
   15f60:	bls	1607c <__assert_fail@plt+0x5214>
   15f64:	b	16090 <__assert_fail@plt+0x5228>
   15f68:	b	15f6c <__assert_fail@plt+0x5104>
   15f6c:	b	15fc4 <__assert_fail@plt+0x515c>
   15f70:	b	15fc4 <__assert_fail@plt+0x515c>
   15f74:	ldr	r0, [fp, #8]
   15f78:	cmn	r0, #1
   15f7c:	bne	15fc4 <__assert_fail@plt+0x515c>
   15f80:	b	15f84 <__assert_fail@plt+0x511c>
   15f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f88:	add	r0, r0, #0
   15f8c:	movw	r1, #0
   15f90:	cmp	r1, r0
   15f94:	blt	1607c <__assert_fail@plt+0x5214>
   15f98:	b	16090 <__assert_fail@plt+0x5228>
   15f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa0:	movw	r1, #0
   15fa4:	cmp	r1, r0
   15fa8:	bge	16090 <__assert_fail@plt+0x5228>
   15fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fb0:	sub	r0, r0, #1
   15fb4:	mvn	r1, #0
   15fb8:	cmp	r1, r0
   15fbc:	blt	1607c <__assert_fail@plt+0x5214>
   15fc0:	b	16090 <__assert_fail@plt+0x5228>
   15fc4:	ldr	r0, [fp, #8]
   15fc8:	movw	r1, #0
   15fcc:	sdiv	r0, r1, r0
   15fd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fd4:	cmp	r0, r1
   15fd8:	blt	1607c <__assert_fail@plt+0x5214>
   15fdc:	b	16090 <__assert_fail@plt+0x5228>
   15fe0:	ldr	r0, [fp, #8]
   15fe4:	cmp	r0, #0
   15fe8:	bne	15ff0 <__assert_fail@plt+0x5188>
   15fec:	b	16090 <__assert_fail@plt+0x5228>
   15ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff4:	cmp	r0, #0
   15ff8:	bge	16064 <__assert_fail@plt+0x51fc>
   15ffc:	b	16000 <__assert_fail@plt+0x5198>
   16000:	b	16048 <__assert_fail@plt+0x51e0>
   16004:	b	16048 <__assert_fail@plt+0x51e0>
   16008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1600c:	cmn	r0, #1
   16010:	bne	16048 <__assert_fail@plt+0x51e0>
   16014:	b	16018 <__assert_fail@plt+0x51b0>
   16018:	ldr	r0, [fp, #8]
   1601c:	add	r0, r0, #0
   16020:	movw	r1, #0
   16024:	cmp	r1, r0
   16028:	blt	1607c <__assert_fail@plt+0x5214>
   1602c:	b	16090 <__assert_fail@plt+0x5228>
   16030:	ldr	r0, [fp, #8]
   16034:	sub	r0, r0, #1
   16038:	mvn	r1, #0
   1603c:	cmp	r1, r0
   16040:	blt	1607c <__assert_fail@plt+0x5214>
   16044:	b	16090 <__assert_fail@plt+0x5228>
   16048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1604c:	movw	r1, #0
   16050:	sdiv	r0, r1, r0
   16054:	ldr	r1, [fp, #8]
   16058:	cmp	r0, r1
   1605c:	blt	1607c <__assert_fail@plt+0x5214>
   16060:	b	16090 <__assert_fail@plt+0x5228>
   16064:	ldr	r0, [fp, #8]
   16068:	mvn	r1, #0
   1606c:	udiv	r0, r1, r0
   16070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16074:	cmp	r0, r1
   16078:	bcs	16090 <__assert_fail@plt+0x5228>
   1607c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16080:	ldr	r1, [fp, #8]
   16084:	mul	r0, r0, r1
   16088:	str	r0, [fp, #-28]	; 0xffffffe4
   1608c:	b	16594 <__assert_fail@plt+0x572c>
   16090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16094:	ldr	r1, [fp, #8]
   16098:	mul	r0, r0, r1
   1609c:	str	r0, [fp, #-28]	; 0xffffffe4
   160a0:	b	165a4 <__assert_fail@plt+0x573c>
   160a4:	b	160a8 <__assert_fail@plt+0x5240>
   160a8:	ldr	r0, [fp, #8]
   160ac:	cmp	r0, #0
   160b0:	bge	16240 <__assert_fail@plt+0x53d8>
   160b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160b8:	cmp	r0, #0
   160bc:	bge	161a8 <__assert_fail@plt+0x5340>
   160c0:	b	160c4 <__assert_fail@plt+0x525c>
   160c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c8:	ldr	r1, [fp, #8]
   160cc:	asr	r3, r1, #31
   160d0:	mvn	r2, #0
   160d4:	mvn	ip, #-2147483648	; 0x80000000
   160d8:	str	r0, [fp, #-72]	; 0xffffffb8
   160dc:	mov	r0, r2
   160e0:	str	r1, [fp, #-76]	; 0xffffffb4
   160e4:	mov	r1, ip
   160e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   160ec:	bl	1a15c <__assert_fail@plt+0x92f4>
   160f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   160f4:	subs	r0, r2, r0
   160f8:	rscs	r1, r1, r2, asr #31
   160fc:	str	r0, [fp, #-80]	; 0xffffffb0
   16100:	str	r1, [fp, #-84]	; 0xffffffac
   16104:	blt	16320 <__assert_fail@plt+0x54b8>
   16108:	b	16334 <__assert_fail@plt+0x54cc>
   1610c:	b	16110 <__assert_fail@plt+0x52a8>
   16110:	ldr	r0, [pc, #196]	; 161dc <__assert_fail@plt+0x5374>
   16114:	ldr	r1, [fp, #8]
   16118:	cmp	r1, r0
   1611c:	blt	16134 <__assert_fail@plt+0x52cc>
   16120:	b	1614c <__assert_fail@plt+0x52e4>
   16124:	ldr	r0, [fp, #8]
   16128:	movw	r1, #0
   1612c:	cmp	r1, r0
   16130:	bge	1614c <__assert_fail@plt+0x52e4>
   16134:	mov	r0, #0
   16138:	mvn	r1, #0
   1613c:	str	r1, [fp, #-88]	; 0xffffffa8
   16140:	str	r0, [fp, #-92]	; 0xffffffa4
   16144:	b	16180 <__assert_fail@plt+0x5318>
   16148:	svcvc	0x00ffffff
   1614c:	ldr	r0, [fp, #8]
   16150:	rsb	r0, r0, #0
   16154:	asr	r3, r0, #31
   16158:	mvn	r1, #0
   1615c:	mvn	r2, #-2147483648	; 0x80000000
   16160:	str	r0, [fp, #-96]	; 0xffffffa0
   16164:	mov	r0, r1
   16168:	mov	r1, r2
   1616c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16170:	bl	1a15c <__assert_fail@plt+0x92f4>
   16174:	str	r0, [fp, #-88]	; 0xffffffa8
   16178:	str	r1, [fp, #-92]	; 0xffffffa4
   1617c:	b	16180 <__assert_fail@plt+0x5318>
   16180:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16184:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1618c:	mvn	r2, r2
   16190:	subs	r1, r2, r1
   16194:	rscs	r0, r0, r2, asr #31
   16198:	str	r1, [fp, #-100]	; 0xffffff9c
   1619c:	str	r0, [fp, #-104]	; 0xffffff98
   161a0:	bge	16320 <__assert_fail@plt+0x54b8>
   161a4:	b	16334 <__assert_fail@plt+0x54cc>
   161a8:	ldr	r0, [fp, #8]
   161ac:	cmn	r0, #1
   161b0:	bne	16200 <__assert_fail@plt+0x5398>
   161b4:	b	161b8 <__assert_fail@plt+0x5350>
   161b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161bc:	mov	r1, #-2147483648	; 0x80000000
   161c0:	add	r1, r1, r0, asr #31
   161c4:	rsbs	r0, r0, #0
   161c8:	rscs	r1, r1, #0
   161cc:	str	r0, [fp, #-108]	; 0xffffff94
   161d0:	str	r1, [fp, #-112]	; 0xffffff90
   161d4:	blt	16320 <__assert_fail@plt+0x54b8>
   161d8:	b	16334 <__assert_fail@plt+0x54cc>
   161dc:	andhi	r0, r0, r1
   161e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161e4:	movw	r1, #0
   161e8:	cmp	r1, r0
   161ec:	bge	16334 <__assert_fail@plt+0x54cc>
   161f0:	mov	r0, #0
   161f4:	cmp	r0, #0
   161f8:	bne	16320 <__assert_fail@plt+0x54b8>
   161fc:	b	16334 <__assert_fail@plt+0x54cc>
   16200:	ldr	r0, [fp, #8]
   16204:	asr	r3, r0, #31
   16208:	mov	r1, #0
   1620c:	mov	r2, #-2147483648	; 0x80000000
   16210:	str	r0, [fp, #-116]	; 0xffffff8c
   16214:	mov	r0, r1
   16218:	mov	r1, r2
   1621c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16220:	bl	1a15c <__assert_fail@plt+0x92f4>
   16224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16228:	subs	r0, r0, r2
   1622c:	sbcs	r1, r1, r2, asr #31
   16230:	str	r0, [fp, #-120]	; 0xffffff88
   16234:	str	r1, [fp, #-124]	; 0xffffff84
   16238:	blt	16320 <__assert_fail@plt+0x54b8>
   1623c:	b	16334 <__assert_fail@plt+0x54cc>
   16240:	ldr	r0, [fp, #8]
   16244:	cmp	r0, #0
   16248:	bne	16250 <__assert_fail@plt+0x53e8>
   1624c:	b	16334 <__assert_fail@plt+0x54cc>
   16250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16254:	cmp	r0, #0
   16258:	bge	162e0 <__assert_fail@plt+0x5478>
   1625c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16260:	cmn	r0, #1
   16264:	bne	162a0 <__assert_fail@plt+0x5438>
   16268:	b	1626c <__assert_fail@plt+0x5404>
   1626c:	ldr	r0, [fp, #8]
   16270:	mov	r1, #-2147483648	; 0x80000000
   16274:	add	r1, r1, r0, asr #31
   16278:	rsbs	r0, r0, #0
   1627c:	rscs	r1, r1, #0
   16280:	str	r0, [fp, #-128]	; 0xffffff80
   16284:	str	r1, [fp, #-132]	; 0xffffff7c
   16288:	blt	16320 <__assert_fail@plt+0x54b8>
   1628c:	b	16334 <__assert_fail@plt+0x54cc>
   16290:	mov	r0, #0
   16294:	cmp	r0, #0
   16298:	bne	16320 <__assert_fail@plt+0x54b8>
   1629c:	b	16334 <__assert_fail@plt+0x54cc>
   162a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a4:	asr	r3, r0, #31
   162a8:	mov	r1, #0
   162ac:	mov	r2, #-2147483648	; 0x80000000
   162b0:	str	r0, [fp, #-136]	; 0xffffff78
   162b4:	mov	r0, r1
   162b8:	mov	r1, r2
   162bc:	ldr	r2, [fp, #-136]	; 0xffffff78
   162c0:	bl	1a15c <__assert_fail@plt+0x92f4>
   162c4:	ldr	r2, [fp, #8]
   162c8:	subs	r0, r0, r2
   162cc:	sbcs	r1, r1, r2, asr #31
   162d0:	str	r0, [fp, #-140]	; 0xffffff74
   162d4:	str	r1, [fp, #-144]	; 0xffffff70
   162d8:	blt	16320 <__assert_fail@plt+0x54b8>
   162dc:	b	16334 <__assert_fail@plt+0x54cc>
   162e0:	ldr	r0, [fp, #8]
   162e4:	asr	r3, r0, #31
   162e8:	mvn	r1, #0
   162ec:	mvn	r2, #-2147483648	; 0x80000000
   162f0:	str	r0, [fp, #-148]	; 0xffffff6c
   162f4:	mov	r0, r1
   162f8:	mov	r1, r2
   162fc:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16300:	bl	1a15c <__assert_fail@plt+0x92f4>
   16304:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16308:	subs	r0, r0, r2
   1630c:	sbcs	r1, r1, r2, asr #31
   16310:	str	r0, [fp, #-152]	; 0xffffff68
   16314:	str	r1, [fp, #-156]	; 0xffffff64
   16318:	bge	16334 <__assert_fail@plt+0x54cc>
   1631c:	b	16320 <__assert_fail@plt+0x54b8>
   16320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16324:	ldr	r1, [fp, #8]
   16328:	mul	r0, r0, r1
   1632c:	str	r0, [fp, #-28]	; 0xffffffe4
   16330:	b	16594 <__assert_fail@plt+0x572c>
   16334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16338:	ldr	r1, [fp, #8]
   1633c:	mul	r0, r0, r1
   16340:	str	r0, [fp, #-28]	; 0xffffffe4
   16344:	b	165a4 <__assert_fail@plt+0x573c>
   16348:	ldr	r0, [fp, #8]
   1634c:	cmp	r0, #0
   16350:	bge	164b0 <__assert_fail@plt+0x5648>
   16354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16358:	cmp	r0, #0
   1635c:	bge	16438 <__assert_fail@plt+0x55d0>
   16360:	b	163a8 <__assert_fail@plt+0x5540>
   16364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16368:	ldr	r1, [fp, #8]
   1636c:	asr	r3, r1, #31
   16370:	mvn	r2, #0
   16374:	str	r0, [fp, #-160]	; 0xffffff60
   16378:	mov	r0, r2
   1637c:	str	r1, [fp, #-164]	; 0xffffff5c
   16380:	mov	r1, r2
   16384:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16388:	bl	1a230 <__assert_fail@plt+0x93c8>
   1638c:	ldr	r2, [fp, #-160]	; 0xffffff60
   16390:	subs	r0, r2, r0
   16394:	rscs	r1, r1, r2, asr #31
   16398:	str	r0, [fp, #-168]	; 0xffffff58
   1639c:	str	r1, [fp, #-172]	; 0xffffff54
   163a0:	bcc	1656c <__assert_fail@plt+0x5704>
   163a4:	b	16580 <__assert_fail@plt+0x5718>
   163a8:	b	163ac <__assert_fail@plt+0x5544>
   163ac:	ldr	r0, [pc, #-472]	; 161dc <__assert_fail@plt+0x5374>
   163b0:	ldr	r1, [fp, #8]
   163b4:	cmp	r1, r0
   163b8:	blt	163d0 <__assert_fail@plt+0x5568>
   163bc:	b	163e4 <__assert_fail@plt+0x557c>
   163c0:	ldr	r0, [fp, #8]
   163c4:	movw	r1, #0
   163c8:	cmp	r1, r0
   163cc:	bge	163e4 <__assert_fail@plt+0x557c>
   163d0:	mov	r0, #1
   163d4:	mvn	r1, #0
   163d8:	str	r1, [fp, #-176]	; 0xffffff50
   163dc:	str	r0, [fp, #-180]	; 0xffffff4c
   163e0:	b	16410 <__assert_fail@plt+0x55a8>
   163e4:	ldr	r0, [fp, #8]
   163e8:	rsb	r0, r0, #0
   163ec:	asr	r3, r0, #31
   163f0:	mvn	r1, #0
   163f4:	str	r0, [fp, #-184]	; 0xffffff48
   163f8:	mov	r0, r1
   163fc:	ldr	r2, [fp, #-184]	; 0xffffff48
   16400:	bl	1a230 <__assert_fail@plt+0x93c8>
   16404:	str	r0, [fp, #-176]	; 0xffffff50
   16408:	str	r1, [fp, #-180]	; 0xffffff4c
   1640c:	b	16410 <__assert_fail@plt+0x55a8>
   16410:	ldr	r0, [fp, #-180]	; 0xffffff4c
   16414:	ldr	r1, [fp, #-176]	; 0xffffff50
   16418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1641c:	mvn	r2, r2
   16420:	subs	r1, r2, r1
   16424:	rscs	r0, r0, r2, asr #31
   16428:	str	r1, [sp, #188]	; 0xbc
   1642c:	str	r0, [sp, #184]	; 0xb8
   16430:	bcs	1656c <__assert_fail@plt+0x5704>
   16434:	b	16580 <__assert_fail@plt+0x5718>
   16438:	b	1643c <__assert_fail@plt+0x55d4>
   1643c:	b	16494 <__assert_fail@plt+0x562c>
   16440:	b	16494 <__assert_fail@plt+0x562c>
   16444:	ldr	r0, [fp, #8]
   16448:	cmn	r0, #1
   1644c:	bne	16494 <__assert_fail@plt+0x562c>
   16450:	b	16454 <__assert_fail@plt+0x55ec>
   16454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16458:	add	r0, r0, #0
   1645c:	movw	r1, #0
   16460:	cmp	r1, r0
   16464:	blt	1656c <__assert_fail@plt+0x5704>
   16468:	b	16580 <__assert_fail@plt+0x5718>
   1646c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16470:	movw	r1, #0
   16474:	cmp	r1, r0
   16478:	bge	16580 <__assert_fail@plt+0x5718>
   1647c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16480:	sub	r0, r0, #1
   16484:	mvn	r1, #0
   16488:	cmp	r1, r0
   1648c:	blt	1656c <__assert_fail@plt+0x5704>
   16490:	b	16580 <__assert_fail@plt+0x5718>
   16494:	ldr	r0, [fp, #8]
   16498:	movw	r1, #0
   1649c:	sdiv	r0, r1, r0
   164a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164a4:	cmp	r0, r1
   164a8:	blt	1656c <__assert_fail@plt+0x5704>
   164ac:	b	16580 <__assert_fail@plt+0x5718>
   164b0:	ldr	r0, [fp, #8]
   164b4:	cmp	r0, #0
   164b8:	bne	164c0 <__assert_fail@plt+0x5658>
   164bc:	b	16580 <__assert_fail@plt+0x5718>
   164c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c4:	cmp	r0, #0
   164c8:	bge	16534 <__assert_fail@plt+0x56cc>
   164cc:	b	164d0 <__assert_fail@plt+0x5668>
   164d0:	b	16518 <__assert_fail@plt+0x56b0>
   164d4:	b	16518 <__assert_fail@plt+0x56b0>
   164d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164dc:	cmn	r0, #1
   164e0:	bne	16518 <__assert_fail@plt+0x56b0>
   164e4:	b	164e8 <__assert_fail@plt+0x5680>
   164e8:	ldr	r0, [fp, #8]
   164ec:	add	r0, r0, #0
   164f0:	movw	r1, #0
   164f4:	cmp	r1, r0
   164f8:	blt	1656c <__assert_fail@plt+0x5704>
   164fc:	b	16580 <__assert_fail@plt+0x5718>
   16500:	ldr	r0, [fp, #8]
   16504:	sub	r0, r0, #1
   16508:	mvn	r1, #0
   1650c:	cmp	r1, r0
   16510:	blt	1656c <__assert_fail@plt+0x5704>
   16514:	b	16580 <__assert_fail@plt+0x5718>
   16518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1651c:	movw	r1, #0
   16520:	sdiv	r0, r1, r0
   16524:	ldr	r1, [fp, #8]
   16528:	cmp	r0, r1
   1652c:	blt	1656c <__assert_fail@plt+0x5704>
   16530:	b	16580 <__assert_fail@plt+0x5718>
   16534:	ldr	r0, [fp, #8]
   16538:	asr	r3, r0, #31
   1653c:	mvn	r1, #0
   16540:	str	r0, [sp, #180]	; 0xb4
   16544:	mov	r0, r1
   16548:	ldr	r2, [sp, #180]	; 0xb4
   1654c:	bl	1a230 <__assert_fail@plt+0x93c8>
   16550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16554:	subs	r0, r0, r2
   16558:	sbcs	r1, r1, r2, asr #31
   1655c:	str	r0, [sp, #176]	; 0xb0
   16560:	str	r1, [sp, #172]	; 0xac
   16564:	bcs	16580 <__assert_fail@plt+0x5718>
   16568:	b	1656c <__assert_fail@plt+0x5704>
   1656c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16570:	ldr	r1, [fp, #8]
   16574:	mul	r0, r0, r1
   16578:	str	r0, [fp, #-28]	; 0xffffffe4
   1657c:	b	16594 <__assert_fail@plt+0x572c>
   16580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16584:	ldr	r1, [fp, #8]
   16588:	mul	r0, r0, r1
   1658c:	str	r0, [fp, #-28]	; 0xffffffe4
   16590:	b	165a4 <__assert_fail@plt+0x573c>
   16594:	ldr	r0, [pc, #-1108]	; 16148 <__assert_fail@plt+0x52e0>
   16598:	str	r0, [sp, #168]	; 0xa8
   1659c:	b	165c4 <__assert_fail@plt+0x575c>
   165a0:			; <UNDEFINED> instruction: 0xffff8000
   165a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   165a8:	cmp	r0, #64	; 0x40
   165ac:	movw	r0, #0
   165b0:	movlt	r0, #1
   165b4:	tst	r0, #1
   165b8:	movw	r0, #64	; 0x40
   165bc:	moveq	r0, #0
   165c0:	str	r0, [sp, #168]	; 0xa8
   165c4:	ldr	r0, [sp, #168]	; 0xa8
   165c8:	str	r0, [fp, #-32]	; 0xffffffe0
   165cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165d0:	cmp	r0, #0
   165d4:	beq	16604 <__assert_fail@plt+0x579c>
   165d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165dc:	ldr	r1, [fp, #8]
   165e0:	sdiv	r0, r0, r1
   165e4:	str	r0, [fp, #-24]	; 0xffffffe8
   165e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165ec:	mov	r1, r0
   165f0:	ldr	r2, [fp, #8]
   165f4:	sdiv	r3, r0, r2
   165f8:	mls	r0, r3, r2, r0
   165fc:	sub	r0, r1, r0
   16600:	str	r0, [fp, #-28]	; 0xffffffe4
   16604:	ldr	r0, [fp, #-4]
   16608:	movw	r1, #0
   1660c:	cmp	r0, r1
   16610:	bne	16620 <__assert_fail@plt+0x57b8>
   16614:	ldr	r0, [fp, #-8]
   16618:	movw	r1, #0
   1661c:	str	r1, [r0]
   16620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16624:	ldr	r1, [fp, #-20]	; 0xffffffec
   16628:	sub	r0, r0, r1
   1662c:	ldr	r1, [fp, #-12]
   16630:	cmp	r0, r1
   16634:	bge	17a6c <__assert_fail@plt+0x6c04>
   16638:	ldr	r0, [fp, #-20]	; 0xffffffec
   1663c:	ldr	r1, [fp, #-12]
   16640:	add	r1, r0, r1
   16644:	mov	r2, #1
   16648:	cmp	r1, r0
   1664c:	movwvc	r2, #0
   16650:	str	r1, [fp, #-24]	; 0xffffffe8
   16654:	tst	r2, #1
   16658:	bne	17a68 <__assert_fail@plt+0x6c00>
   1665c:	ldr	r0, [fp, #-16]
   16660:	movw	r1, #0
   16664:	cmp	r1, r0
   16668:	bgt	1667c <__assert_fail@plt+0x5814>
   1666c:	ldr	r0, [fp, #-16]
   16670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16674:	cmp	r0, r1
   16678:	blt	17a68 <__assert_fail@plt+0x6c00>
   1667c:	b	16a58 <__assert_fail@plt+0x5bf0>
   16680:	b	16684 <__assert_fail@plt+0x581c>
   16684:	ldr	r0, [fp, #8]
   16688:	cmp	r0, #0
   1668c:	bge	167a0 <__assert_fail@plt+0x5938>
   16690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16694:	cmp	r0, #0
   16698:	bge	16724 <__assert_fail@plt+0x58bc>
   1669c:	b	166a0 <__assert_fail@plt+0x5838>
   166a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166a4:	ldr	r1, [fp, #8]
   166a8:	movw	r2, #127	; 0x7f
   166ac:	sdiv	r1, r2, r1
   166b0:	cmp	r0, r1
   166b4:	blt	16840 <__assert_fail@plt+0x59d8>
   166b8:	b	16858 <__assert_fail@plt+0x59f0>
   166bc:	b	166c0 <__assert_fail@plt+0x5858>
   166c0:	ldr	r0, [pc, #-1260]	; 161dc <__assert_fail@plt+0x5374>
   166c4:	ldr	r1, [fp, #8]
   166c8:	cmp	r1, r0
   166cc:	blt	166e4 <__assert_fail@plt+0x587c>
   166d0:	b	166f0 <__assert_fail@plt+0x5888>
   166d4:	ldr	r0, [fp, #8]
   166d8:	movw	r1, #0
   166dc:	cmp	r1, r0
   166e0:	bge	166f0 <__assert_fail@plt+0x5888>
   166e4:	movw	r0, #0
   166e8:	str	r0, [sp, #164]	; 0xa4
   166ec:	b	16708 <__assert_fail@plt+0x58a0>
   166f0:	ldr	r0, [fp, #8]
   166f4:	movw	r1, #0
   166f8:	sub	r0, r1, r0
   166fc:	movw	r1, #127	; 0x7f
   16700:	sdiv	r0, r1, r0
   16704:	str	r0, [sp, #164]	; 0xa4
   16708:	ldr	r0, [sp, #164]	; 0xa4
   1670c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16710:	mvn	r2, #0
   16714:	sub	r1, r2, r1
   16718:	cmp	r0, r1
   1671c:	ble	16840 <__assert_fail@plt+0x59d8>
   16720:	b	16858 <__assert_fail@plt+0x59f0>
   16724:	b	16728 <__assert_fail@plt+0x58c0>
   16728:	b	16784 <__assert_fail@plt+0x591c>
   1672c:	b	16784 <__assert_fail@plt+0x591c>
   16730:	ldr	r0, [fp, #8]
   16734:	cmn	r0, #1
   16738:	bne	16784 <__assert_fail@plt+0x591c>
   1673c:	b	16740 <__assert_fail@plt+0x58d8>
   16740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16744:	mvn	r1, #127	; 0x7f
   16748:	add	r0, r0, r1
   1674c:	movw	r1, #0
   16750:	cmp	r1, r0
   16754:	blt	16840 <__assert_fail@plt+0x59d8>
   16758:	b	16858 <__assert_fail@plt+0x59f0>
   1675c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16760:	movw	r1, #0
   16764:	cmp	r1, r0
   16768:	bge	16858 <__assert_fail@plt+0x59f0>
   1676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16770:	sub	r0, r0, #1
   16774:	movw	r1, #127	; 0x7f
   16778:	cmp	r1, r0
   1677c:	blt	16840 <__assert_fail@plt+0x59d8>
   16780:	b	16858 <__assert_fail@plt+0x59f0>
   16784:	ldr	r0, [fp, #8]
   16788:	mvn	r1, #127	; 0x7f
   1678c:	sdiv	r0, r1, r0
   16790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16794:	cmp	r0, r1
   16798:	blt	16840 <__assert_fail@plt+0x59d8>
   1679c:	b	16858 <__assert_fail@plt+0x59f0>
   167a0:	ldr	r0, [fp, #8]
   167a4:	cmp	r0, #0
   167a8:	bne	167b0 <__assert_fail@plt+0x5948>
   167ac:	b	16858 <__assert_fail@plt+0x59f0>
   167b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167b4:	cmp	r0, #0
   167b8:	bge	16828 <__assert_fail@plt+0x59c0>
   167bc:	b	167c0 <__assert_fail@plt+0x5958>
   167c0:	b	1680c <__assert_fail@plt+0x59a4>
   167c4:	b	1680c <__assert_fail@plt+0x59a4>
   167c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167cc:	cmn	r0, #1
   167d0:	bne	1680c <__assert_fail@plt+0x59a4>
   167d4:	b	167d8 <__assert_fail@plt+0x5970>
   167d8:	ldr	r0, [fp, #8]
   167dc:	mvn	r1, #127	; 0x7f
   167e0:	add	r0, r0, r1
   167e4:	movw	r1, #0
   167e8:	cmp	r1, r0
   167ec:	blt	16840 <__assert_fail@plt+0x59d8>
   167f0:	b	16858 <__assert_fail@plt+0x59f0>
   167f4:	ldr	r0, [fp, #8]
   167f8:	sub	r0, r0, #1
   167fc:	movw	r1, #127	; 0x7f
   16800:	cmp	r1, r0
   16804:	blt	16840 <__assert_fail@plt+0x59d8>
   16808:	b	16858 <__assert_fail@plt+0x59f0>
   1680c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16810:	mvn	r1, #127	; 0x7f
   16814:	sdiv	r0, r1, r0
   16818:	ldr	r1, [fp, #8]
   1681c:	cmp	r0, r1
   16820:	blt	16840 <__assert_fail@plt+0x59d8>
   16824:	b	16858 <__assert_fail@plt+0x59f0>
   16828:	ldr	r0, [fp, #8]
   1682c:	movw	r1, #127	; 0x7f
   16830:	sdiv	r0, r1, r0
   16834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16838:	cmp	r0, r1
   1683c:	bge	16858 <__assert_fail@plt+0x59f0>
   16840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16844:	ldr	r1, [fp, #8]
   16848:	mul	r0, r0, r1
   1684c:	sxtb	r0, r0
   16850:	str	r0, [fp, #-28]	; 0xffffffe4
   16854:	b	17a68 <__assert_fail@plt+0x6c00>
   16858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1685c:	ldr	r1, [fp, #8]
   16860:	mul	r0, r0, r1
   16864:	sxtb	r0, r0
   16868:	str	r0, [fp, #-28]	; 0xffffffe4
   1686c:	b	17a6c <__assert_fail@plt+0x6c04>
   16870:	ldr	r0, [fp, #8]
   16874:	cmp	r0, #0
   16878:	bge	16988 <__assert_fail@plt+0x5b20>
   1687c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16880:	cmp	r0, #0
   16884:	bge	16910 <__assert_fail@plt+0x5aa8>
   16888:	b	1688c <__assert_fail@plt+0x5a24>
   1688c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16890:	ldr	r1, [fp, #8]
   16894:	movw	r2, #255	; 0xff
   16898:	sdiv	r1, r2, r1
   1689c:	cmp	r0, r1
   168a0:	blt	16a24 <__assert_fail@plt+0x5bbc>
   168a4:	b	16a40 <__assert_fail@plt+0x5bd8>
   168a8:	b	168ac <__assert_fail@plt+0x5a44>
   168ac:	ldr	r0, [pc, #-1752]	; 161dc <__assert_fail@plt+0x5374>
   168b0:	ldr	r1, [fp, #8]
   168b4:	cmp	r1, r0
   168b8:	blt	168d0 <__assert_fail@plt+0x5a68>
   168bc:	b	168dc <__assert_fail@plt+0x5a74>
   168c0:	ldr	r0, [fp, #8]
   168c4:	movw	r1, #0
   168c8:	cmp	r1, r0
   168cc:	bge	168dc <__assert_fail@plt+0x5a74>
   168d0:	movw	r0, #0
   168d4:	str	r0, [sp, #160]	; 0xa0
   168d8:	b	168f4 <__assert_fail@plt+0x5a8c>
   168dc:	ldr	r0, [fp, #8]
   168e0:	movw	r1, #0
   168e4:	sub	r0, r1, r0
   168e8:	movw	r1, #255	; 0xff
   168ec:	sdiv	r0, r1, r0
   168f0:	str	r0, [sp, #160]	; 0xa0
   168f4:	ldr	r0, [sp, #160]	; 0xa0
   168f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168fc:	mvn	r2, #0
   16900:	sub	r1, r2, r1
   16904:	cmp	r0, r1
   16908:	ble	16a24 <__assert_fail@plt+0x5bbc>
   1690c:	b	16a40 <__assert_fail@plt+0x5bd8>
   16910:	b	16914 <__assert_fail@plt+0x5aac>
   16914:	b	1696c <__assert_fail@plt+0x5b04>
   16918:	b	1696c <__assert_fail@plt+0x5b04>
   1691c:	ldr	r0, [fp, #8]
   16920:	cmn	r0, #1
   16924:	bne	1696c <__assert_fail@plt+0x5b04>
   16928:	b	1692c <__assert_fail@plt+0x5ac4>
   1692c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16930:	add	r0, r0, #0
   16934:	movw	r1, #0
   16938:	cmp	r1, r0
   1693c:	blt	16a24 <__assert_fail@plt+0x5bbc>
   16940:	b	16a40 <__assert_fail@plt+0x5bd8>
   16944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16948:	movw	r1, #0
   1694c:	cmp	r1, r0
   16950:	bge	16a40 <__assert_fail@plt+0x5bd8>
   16954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16958:	sub	r0, r0, #1
   1695c:	mvn	r1, #0
   16960:	cmp	r1, r0
   16964:	blt	16a24 <__assert_fail@plt+0x5bbc>
   16968:	b	16a40 <__assert_fail@plt+0x5bd8>
   1696c:	ldr	r0, [fp, #8]
   16970:	movw	r1, #0
   16974:	sdiv	r0, r1, r0
   16978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1697c:	cmp	r0, r1
   16980:	blt	16a24 <__assert_fail@plt+0x5bbc>
   16984:	b	16a40 <__assert_fail@plt+0x5bd8>
   16988:	ldr	r0, [fp, #8]
   1698c:	cmp	r0, #0
   16990:	bne	16998 <__assert_fail@plt+0x5b30>
   16994:	b	16a40 <__assert_fail@plt+0x5bd8>
   16998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1699c:	cmp	r0, #0
   169a0:	bge	16a0c <__assert_fail@plt+0x5ba4>
   169a4:	b	169a8 <__assert_fail@plt+0x5b40>
   169a8:	b	169f0 <__assert_fail@plt+0x5b88>
   169ac:	b	169f0 <__assert_fail@plt+0x5b88>
   169b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b4:	cmn	r0, #1
   169b8:	bne	169f0 <__assert_fail@plt+0x5b88>
   169bc:	b	169c0 <__assert_fail@plt+0x5b58>
   169c0:	ldr	r0, [fp, #8]
   169c4:	add	r0, r0, #0
   169c8:	movw	r1, #0
   169cc:	cmp	r1, r0
   169d0:	blt	16a24 <__assert_fail@plt+0x5bbc>
   169d4:	b	16a40 <__assert_fail@plt+0x5bd8>
   169d8:	ldr	r0, [fp, #8]
   169dc:	sub	r0, r0, #1
   169e0:	mvn	r1, #0
   169e4:	cmp	r1, r0
   169e8:	blt	16a24 <__assert_fail@plt+0x5bbc>
   169ec:	b	16a40 <__assert_fail@plt+0x5bd8>
   169f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f4:	movw	r1, #0
   169f8:	sdiv	r0, r1, r0
   169fc:	ldr	r1, [fp, #8]
   16a00:	cmp	r0, r1
   16a04:	blt	16a24 <__assert_fail@plt+0x5bbc>
   16a08:	b	16a40 <__assert_fail@plt+0x5bd8>
   16a0c:	ldr	r0, [fp, #8]
   16a10:	movw	r1, #255	; 0xff
   16a14:	sdiv	r0, r1, r0
   16a18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a1c:	cmp	r0, r1
   16a20:	bge	16a40 <__assert_fail@plt+0x5bd8>
   16a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a28:	ldr	r1, [fp, #8]
   16a2c:	mul	r0, r0, r1
   16a30:	and	r0, r0, #255	; 0xff
   16a34:	str	r0, [fp, #-28]	; 0xffffffe4
   16a38:	b	17a68 <__assert_fail@plt+0x6c00>
   16a3c:	andhi	r0, r0, r0
   16a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a44:	ldr	r1, [fp, #8]
   16a48:	mul	r0, r0, r1
   16a4c:	and	r0, r0, #255	; 0xff
   16a50:	str	r0, [fp, #-28]	; 0xffffffe4
   16a54:	b	17a6c <__assert_fail@plt+0x6c04>
   16a58:	b	16e30 <__assert_fail@plt+0x5fc8>
   16a5c:	b	16a60 <__assert_fail@plt+0x5bf8>
   16a60:	ldr	r0, [fp, #8]
   16a64:	cmp	r0, #0
   16a68:	bge	16b7c <__assert_fail@plt+0x5d14>
   16a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a70:	cmp	r0, #0
   16a74:	bge	16b00 <__assert_fail@plt+0x5c98>
   16a78:	b	16a7c <__assert_fail@plt+0x5c14>
   16a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a80:	ldr	r1, [fp, #8]
   16a84:	movw	r2, #32767	; 0x7fff
   16a88:	sdiv	r1, r2, r1
   16a8c:	cmp	r0, r1
   16a90:	blt	16c1c <__assert_fail@plt+0x5db4>
   16a94:	b	16c34 <__assert_fail@plt+0x5dcc>
   16a98:	b	16a9c <__assert_fail@plt+0x5c34>
   16a9c:	ldr	r0, [pc, #4084]	; 17a98 <__assert_fail@plt+0x6c30>
   16aa0:	ldr	r1, [fp, #8]
   16aa4:	cmp	r1, r0
   16aa8:	blt	16ac0 <__assert_fail@plt+0x5c58>
   16aac:	b	16acc <__assert_fail@plt+0x5c64>
   16ab0:	ldr	r0, [fp, #8]
   16ab4:	movw	r1, #0
   16ab8:	cmp	r1, r0
   16abc:	bge	16acc <__assert_fail@plt+0x5c64>
   16ac0:	movw	r0, #0
   16ac4:	str	r0, [sp, #156]	; 0x9c
   16ac8:	b	16ae4 <__assert_fail@plt+0x5c7c>
   16acc:	ldr	r0, [fp, #8]
   16ad0:	movw	r1, #0
   16ad4:	sub	r0, r1, r0
   16ad8:	movw	r1, #32767	; 0x7fff
   16adc:	sdiv	r0, r1, r0
   16ae0:	str	r0, [sp, #156]	; 0x9c
   16ae4:	ldr	r0, [sp, #156]	; 0x9c
   16ae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aec:	mvn	r2, #0
   16af0:	sub	r1, r2, r1
   16af4:	cmp	r0, r1
   16af8:	ble	16c1c <__assert_fail@plt+0x5db4>
   16afc:	b	16c34 <__assert_fail@plt+0x5dcc>
   16b00:	b	16b04 <__assert_fail@plt+0x5c9c>
   16b04:	b	16b60 <__assert_fail@plt+0x5cf8>
   16b08:	b	16b60 <__assert_fail@plt+0x5cf8>
   16b0c:	ldr	r0, [fp, #8]
   16b10:	cmn	r0, #1
   16b14:	bne	16b60 <__assert_fail@plt+0x5cf8>
   16b18:	b	16b1c <__assert_fail@plt+0x5cb4>
   16b1c:	ldr	r0, [pc, #3964]	; 17aa0 <__assert_fail@plt+0x6c38>
   16b20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b24:	add	r0, r1, r0
   16b28:	movw	r1, #0
   16b2c:	cmp	r1, r0
   16b30:	blt	16c1c <__assert_fail@plt+0x5db4>
   16b34:	b	16c34 <__assert_fail@plt+0x5dcc>
   16b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b3c:	movw	r1, #0
   16b40:	cmp	r1, r0
   16b44:	bge	16c34 <__assert_fail@plt+0x5dcc>
   16b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b4c:	sub	r0, r0, #1
   16b50:	movw	r1, #32767	; 0x7fff
   16b54:	cmp	r1, r0
   16b58:	blt	16c1c <__assert_fail@plt+0x5db4>
   16b5c:	b	16c34 <__assert_fail@plt+0x5dcc>
   16b60:	ldr	r0, [pc, #3896]	; 17aa0 <__assert_fail@plt+0x6c38>
   16b64:	ldr	r1, [fp, #8]
   16b68:	sdiv	r0, r0, r1
   16b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b70:	cmp	r0, r1
   16b74:	blt	16c1c <__assert_fail@plt+0x5db4>
   16b78:	b	16c34 <__assert_fail@plt+0x5dcc>
   16b7c:	ldr	r0, [fp, #8]
   16b80:	cmp	r0, #0
   16b84:	bne	16b8c <__assert_fail@plt+0x5d24>
   16b88:	b	16c34 <__assert_fail@plt+0x5dcc>
   16b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b90:	cmp	r0, #0
   16b94:	bge	16c04 <__assert_fail@plt+0x5d9c>
   16b98:	b	16b9c <__assert_fail@plt+0x5d34>
   16b9c:	b	16be8 <__assert_fail@plt+0x5d80>
   16ba0:	b	16be8 <__assert_fail@plt+0x5d80>
   16ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	cmn	r0, #1
   16bac:	bne	16be8 <__assert_fail@plt+0x5d80>
   16bb0:	b	16bb4 <__assert_fail@plt+0x5d4c>
   16bb4:	ldr	r0, [pc, #3812]	; 17aa0 <__assert_fail@plt+0x6c38>
   16bb8:	ldr	r1, [fp, #8]
   16bbc:	add	r0, r1, r0
   16bc0:	movw	r1, #0
   16bc4:	cmp	r1, r0
   16bc8:	blt	16c1c <__assert_fail@plt+0x5db4>
   16bcc:	b	16c34 <__assert_fail@plt+0x5dcc>
   16bd0:	ldr	r0, [fp, #8]
   16bd4:	sub	r0, r0, #1
   16bd8:	movw	r1, #32767	; 0x7fff
   16bdc:	cmp	r1, r0
   16be0:	blt	16c1c <__assert_fail@plt+0x5db4>
   16be4:	b	16c34 <__assert_fail@plt+0x5dcc>
   16be8:	ldr	r0, [pc, #3760]	; 17aa0 <__assert_fail@plt+0x6c38>
   16bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bf0:	sdiv	r0, r0, r1
   16bf4:	ldr	r1, [fp, #8]
   16bf8:	cmp	r0, r1
   16bfc:	blt	16c1c <__assert_fail@plt+0x5db4>
   16c00:	b	16c34 <__assert_fail@plt+0x5dcc>
   16c04:	ldr	r0, [fp, #8]
   16c08:	movw	r1, #32767	; 0x7fff
   16c0c:	sdiv	r0, r1, r0
   16c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c14:	cmp	r0, r1
   16c18:	bge	16c34 <__assert_fail@plt+0x5dcc>
   16c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c20:	ldr	r1, [fp, #8]
   16c24:	mul	r0, r0, r1
   16c28:	sxth	r0, r0
   16c2c:	str	r0, [fp, #-28]	; 0xffffffe4
   16c30:	b	17a68 <__assert_fail@plt+0x6c00>
   16c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c38:	ldr	r1, [fp, #8]
   16c3c:	mul	r0, r0, r1
   16c40:	sxth	r0, r0
   16c44:	str	r0, [fp, #-28]	; 0xffffffe4
   16c48:	b	17a6c <__assert_fail@plt+0x6c04>
   16c4c:	ldr	r0, [fp, #8]
   16c50:	cmp	r0, #0
   16c54:	bge	16d64 <__assert_fail@plt+0x5efc>
   16c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c5c:	cmp	r0, #0
   16c60:	bge	16cec <__assert_fail@plt+0x5e84>
   16c64:	b	16c68 <__assert_fail@plt+0x5e00>
   16c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c6c:	ldr	r1, [fp, #8]
   16c70:	movw	r2, #65535	; 0xffff
   16c74:	sdiv	r1, r2, r1
   16c78:	cmp	r0, r1
   16c7c:	blt	16e00 <__assert_fail@plt+0x5f98>
   16c80:	b	16e18 <__assert_fail@plt+0x5fb0>
   16c84:	b	16c88 <__assert_fail@plt+0x5e20>
   16c88:	ldr	r0, [pc, #3592]	; 17a98 <__assert_fail@plt+0x6c30>
   16c8c:	ldr	r1, [fp, #8]
   16c90:	cmp	r1, r0
   16c94:	blt	16cac <__assert_fail@plt+0x5e44>
   16c98:	b	16cb8 <__assert_fail@plt+0x5e50>
   16c9c:	ldr	r0, [fp, #8]
   16ca0:	movw	r1, #0
   16ca4:	cmp	r1, r0
   16ca8:	bge	16cb8 <__assert_fail@plt+0x5e50>
   16cac:	movw	r0, #0
   16cb0:	str	r0, [sp, #152]	; 0x98
   16cb4:	b	16cd0 <__assert_fail@plt+0x5e68>
   16cb8:	ldr	r0, [fp, #8]
   16cbc:	movw	r1, #0
   16cc0:	sub	r0, r1, r0
   16cc4:	movw	r1, #65535	; 0xffff
   16cc8:	sdiv	r0, r1, r0
   16ccc:	str	r0, [sp, #152]	; 0x98
   16cd0:	ldr	r0, [sp, #152]	; 0x98
   16cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cd8:	mvn	r2, #0
   16cdc:	sub	r1, r2, r1
   16ce0:	cmp	r0, r1
   16ce4:	ble	16e00 <__assert_fail@plt+0x5f98>
   16ce8:	b	16e18 <__assert_fail@plt+0x5fb0>
   16cec:	b	16cf0 <__assert_fail@plt+0x5e88>
   16cf0:	b	16d48 <__assert_fail@plt+0x5ee0>
   16cf4:	b	16d48 <__assert_fail@plt+0x5ee0>
   16cf8:	ldr	r0, [fp, #8]
   16cfc:	cmn	r0, #1
   16d00:	bne	16d48 <__assert_fail@plt+0x5ee0>
   16d04:	b	16d08 <__assert_fail@plt+0x5ea0>
   16d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d0c:	add	r0, r0, #0
   16d10:	movw	r1, #0
   16d14:	cmp	r1, r0
   16d18:	blt	16e00 <__assert_fail@plt+0x5f98>
   16d1c:	b	16e18 <__assert_fail@plt+0x5fb0>
   16d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d24:	movw	r1, #0
   16d28:	cmp	r1, r0
   16d2c:	bge	16e18 <__assert_fail@plt+0x5fb0>
   16d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d34:	sub	r0, r0, #1
   16d38:	mvn	r1, #0
   16d3c:	cmp	r1, r0
   16d40:	blt	16e00 <__assert_fail@plt+0x5f98>
   16d44:	b	16e18 <__assert_fail@plt+0x5fb0>
   16d48:	ldr	r0, [fp, #8]
   16d4c:	movw	r1, #0
   16d50:	sdiv	r0, r1, r0
   16d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d58:	cmp	r0, r1
   16d5c:	blt	16e00 <__assert_fail@plt+0x5f98>
   16d60:	b	16e18 <__assert_fail@plt+0x5fb0>
   16d64:	ldr	r0, [fp, #8]
   16d68:	cmp	r0, #0
   16d6c:	bne	16d74 <__assert_fail@plt+0x5f0c>
   16d70:	b	16e18 <__assert_fail@plt+0x5fb0>
   16d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d78:	cmp	r0, #0
   16d7c:	bge	16de8 <__assert_fail@plt+0x5f80>
   16d80:	b	16d84 <__assert_fail@plt+0x5f1c>
   16d84:	b	16dcc <__assert_fail@plt+0x5f64>
   16d88:	b	16dcc <__assert_fail@plt+0x5f64>
   16d8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d90:	cmn	r0, #1
   16d94:	bne	16dcc <__assert_fail@plt+0x5f64>
   16d98:	b	16d9c <__assert_fail@plt+0x5f34>
   16d9c:	ldr	r0, [fp, #8]
   16da0:	add	r0, r0, #0
   16da4:	movw	r1, #0
   16da8:	cmp	r1, r0
   16dac:	blt	16e00 <__assert_fail@plt+0x5f98>
   16db0:	b	16e18 <__assert_fail@plt+0x5fb0>
   16db4:	ldr	r0, [fp, #8]
   16db8:	sub	r0, r0, #1
   16dbc:	mvn	r1, #0
   16dc0:	cmp	r1, r0
   16dc4:	blt	16e00 <__assert_fail@plt+0x5f98>
   16dc8:	b	16e18 <__assert_fail@plt+0x5fb0>
   16dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dd0:	movw	r1, #0
   16dd4:	sdiv	r0, r1, r0
   16dd8:	ldr	r1, [fp, #8]
   16ddc:	cmp	r0, r1
   16de0:	blt	16e00 <__assert_fail@plt+0x5f98>
   16de4:	b	16e18 <__assert_fail@plt+0x5fb0>
   16de8:	ldr	r0, [fp, #8]
   16dec:	movw	r1, #65535	; 0xffff
   16df0:	sdiv	r0, r1, r0
   16df4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16df8:	cmp	r0, r1
   16dfc:	bge	16e18 <__assert_fail@plt+0x5fb0>
   16e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e04:	ldr	r1, [fp, #8]
   16e08:	mul	r0, r0, r1
   16e0c:	uxth	r0, r0
   16e10:	str	r0, [fp, #-28]	; 0xffffffe4
   16e14:	b	17a68 <__assert_fail@plt+0x6c00>
   16e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e1c:	ldr	r1, [fp, #8]
   16e20:	mul	r0, r0, r1
   16e24:	uxth	r0, r0
   16e28:	str	r0, [fp, #-28]	; 0xffffffe4
   16e2c:	b	17a6c <__assert_fail@plt+0x6c04>
   16e30:	b	16e34 <__assert_fail@plt+0x5fcc>
   16e34:	b	16e38 <__assert_fail@plt+0x5fd0>
   16e38:	ldr	r0, [fp, #8]
   16e3c:	cmp	r0, #0
   16e40:	bge	16f44 <__assert_fail@plt+0x60dc>
   16e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e48:	cmp	r0, #0
   16e4c:	bge	16ed8 <__assert_fail@plt+0x6070>
   16e50:	b	16e54 <__assert_fail@plt+0x5fec>
   16e54:	ldr	r0, [pc, #3128]	; 17a94 <__assert_fail@plt+0x6c2c>
   16e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e5c:	ldr	r2, [fp, #8]
   16e60:	sdiv	r0, r0, r2
   16e64:	cmp	r1, r0
   16e68:	blt	16fd4 <__assert_fail@plt+0x616c>
   16e6c:	b	16fe8 <__assert_fail@plt+0x6180>
   16e70:	b	16e74 <__assert_fail@plt+0x600c>
   16e74:	ldr	r0, [pc, #3100]	; 17a98 <__assert_fail@plt+0x6c30>
   16e78:	ldr	r1, [fp, #8]
   16e7c:	cmp	r1, r0
   16e80:	blt	16e98 <__assert_fail@plt+0x6030>
   16e84:	b	16ea4 <__assert_fail@plt+0x603c>
   16e88:	ldr	r0, [fp, #8]
   16e8c:	movw	r1, #0
   16e90:	cmp	r1, r0
   16e94:	bge	16ea4 <__assert_fail@plt+0x603c>
   16e98:	movw	r0, #0
   16e9c:	str	r0, [sp, #148]	; 0x94
   16ea0:	b	16ebc <__assert_fail@plt+0x6054>
   16ea4:	ldr	r0, [pc, #3048]	; 17a94 <__assert_fail@plt+0x6c2c>
   16ea8:	ldr	r1, [fp, #8]
   16eac:	movw	r2, #0
   16eb0:	sub	r1, r2, r1
   16eb4:	sdiv	r0, r0, r1
   16eb8:	str	r0, [sp, #148]	; 0x94
   16ebc:	ldr	r0, [sp, #148]	; 0x94
   16ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ec4:	mvn	r2, #0
   16ec8:	sub	r1, r2, r1
   16ecc:	cmp	r0, r1
   16ed0:	ble	16fd4 <__assert_fail@plt+0x616c>
   16ed4:	b	16fe8 <__assert_fail@plt+0x6180>
   16ed8:	ldr	r0, [fp, #8]
   16edc:	cmn	r0, #1
   16ee0:	bne	16f28 <__assert_fail@plt+0x60c0>
   16ee4:	b	16ee8 <__assert_fail@plt+0x6080>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	add	r0, r0, #-2147483648	; 0x80000000
   16ef0:	movw	r1, #0
   16ef4:	cmp	r1, r0
   16ef8:	blt	16fd4 <__assert_fail@plt+0x616c>
   16efc:	b	16fe8 <__assert_fail@plt+0x6180>
   16f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f04:	movw	r1, #0
   16f08:	cmp	r1, r0
   16f0c:	bge	16fe8 <__assert_fail@plt+0x6180>
   16f10:	ldr	r0, [pc, #2940]	; 17a94 <__assert_fail@plt+0x6c2c>
   16f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f18:	sub	r1, r1, #1
   16f1c:	cmp	r0, r1
   16f20:	blt	16fd4 <__assert_fail@plt+0x616c>
   16f24:	b	16fe8 <__assert_fail@plt+0x6180>
   16f28:	ldr	r0, [pc, #2924]	; 17a9c <__assert_fail@plt+0x6c34>
   16f2c:	ldr	r1, [fp, #8]
   16f30:	sdiv	r0, r0, r1
   16f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f38:	cmp	r0, r1
   16f3c:	blt	16fd4 <__assert_fail@plt+0x616c>
   16f40:	b	16fe8 <__assert_fail@plt+0x6180>
   16f44:	ldr	r0, [fp, #8]
   16f48:	cmp	r0, #0
   16f4c:	bne	16f54 <__assert_fail@plt+0x60ec>
   16f50:	b	16fe8 <__assert_fail@plt+0x6180>
   16f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f58:	cmp	r0, #0
   16f5c:	bge	16fbc <__assert_fail@plt+0x6154>
   16f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f64:	cmn	r0, #1
   16f68:	bne	16fa0 <__assert_fail@plt+0x6138>
   16f6c:	b	16f70 <__assert_fail@plt+0x6108>
   16f70:	ldr	r0, [fp, #8]
   16f74:	add	r0, r0, #-2147483648	; 0x80000000
   16f78:	movw	r1, #0
   16f7c:	cmp	r1, r0
   16f80:	blt	16fd4 <__assert_fail@plt+0x616c>
   16f84:	b	16fe8 <__assert_fail@plt+0x6180>
   16f88:	ldr	r0, [pc, #2820]	; 17a94 <__assert_fail@plt+0x6c2c>
   16f8c:	ldr	r1, [fp, #8]
   16f90:	sub	r1, r1, #1
   16f94:	cmp	r0, r1
   16f98:	blt	16fd4 <__assert_fail@plt+0x616c>
   16f9c:	b	16fe8 <__assert_fail@plt+0x6180>
   16fa0:	ldr	r0, [pc, #2804]	; 17a9c <__assert_fail@plt+0x6c34>
   16fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fa8:	sdiv	r0, r0, r1
   16fac:	ldr	r1, [fp, #8]
   16fb0:	cmp	r0, r1
   16fb4:	blt	16fd4 <__assert_fail@plt+0x616c>
   16fb8:	b	16fe8 <__assert_fail@plt+0x6180>
   16fbc:	ldr	r0, [pc, #2768]	; 17a94 <__assert_fail@plt+0x6c2c>
   16fc0:	ldr	r1, [fp, #8]
   16fc4:	sdiv	r0, r0, r1
   16fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fcc:	cmp	r0, r1
   16fd0:	bge	16fe8 <__assert_fail@plt+0x6180>
   16fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fd8:	ldr	r1, [fp, #8]
   16fdc:	mul	r0, r0, r1
   16fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   16fe4:	b	17a68 <__assert_fail@plt+0x6c00>
   16fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fec:	ldr	r1, [fp, #8]
   16ff0:	mul	r0, r0, r1
   16ff4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ff8:	b	17a6c <__assert_fail@plt+0x6c04>
   16ffc:	ldr	r0, [fp, #8]
   17000:	cmp	r0, #0
   17004:	bge	17114 <__assert_fail@plt+0x62ac>
   17008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1700c:	cmp	r0, #0
   17010:	bge	1709c <__assert_fail@plt+0x6234>
   17014:	b	17034 <__assert_fail@plt+0x61cc>
   17018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1701c:	ldr	r1, [fp, #8]
   17020:	mvn	r2, #0
   17024:	udiv	r1, r2, r1
   17028:	cmp	r0, r1
   1702c:	bcc	171b0 <__assert_fail@plt+0x6348>
   17030:	b	171c4 <__assert_fail@plt+0x635c>
   17034:	b	17038 <__assert_fail@plt+0x61d0>
   17038:	ldr	r0, [pc, #2648]	; 17a98 <__assert_fail@plt+0x6c30>
   1703c:	ldr	r1, [fp, #8]
   17040:	cmp	r1, r0
   17044:	blt	1705c <__assert_fail@plt+0x61f4>
   17048:	b	17068 <__assert_fail@plt+0x6200>
   1704c:	ldr	r0, [fp, #8]
   17050:	movw	r1, #0
   17054:	cmp	r1, r0
   17058:	bge	17068 <__assert_fail@plt+0x6200>
   1705c:	movw	r0, #1
   17060:	str	r0, [sp, #144]	; 0x90
   17064:	b	17080 <__assert_fail@plt+0x6218>
   17068:	ldr	r0, [fp, #8]
   1706c:	movw	r1, #0
   17070:	sub	r0, r1, r0
   17074:	mvn	r1, #0
   17078:	udiv	r0, r1, r0
   1707c:	str	r0, [sp, #144]	; 0x90
   17080:	ldr	r0, [sp, #144]	; 0x90
   17084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17088:	mvn	r2, #0
   1708c:	sub	r1, r2, r1
   17090:	cmp	r0, r1
   17094:	bls	171b0 <__assert_fail@plt+0x6348>
   17098:	b	171c4 <__assert_fail@plt+0x635c>
   1709c:	b	170a0 <__assert_fail@plt+0x6238>
   170a0:	b	170f8 <__assert_fail@plt+0x6290>
   170a4:	b	170f8 <__assert_fail@plt+0x6290>
   170a8:	ldr	r0, [fp, #8]
   170ac:	cmn	r0, #1
   170b0:	bne	170f8 <__assert_fail@plt+0x6290>
   170b4:	b	170b8 <__assert_fail@plt+0x6250>
   170b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170bc:	add	r0, r0, #0
   170c0:	movw	r1, #0
   170c4:	cmp	r1, r0
   170c8:	blt	171b0 <__assert_fail@plt+0x6348>
   170cc:	b	171c4 <__assert_fail@plt+0x635c>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	movw	r1, #0
   170d8:	cmp	r1, r0
   170dc:	bge	171c4 <__assert_fail@plt+0x635c>
   170e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e4:	sub	r0, r0, #1
   170e8:	mvn	r1, #0
   170ec:	cmp	r1, r0
   170f0:	blt	171b0 <__assert_fail@plt+0x6348>
   170f4:	b	171c4 <__assert_fail@plt+0x635c>
   170f8:	ldr	r0, [fp, #8]
   170fc:	movw	r1, #0
   17100:	sdiv	r0, r1, r0
   17104:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17108:	cmp	r0, r1
   1710c:	blt	171b0 <__assert_fail@plt+0x6348>
   17110:	b	171c4 <__assert_fail@plt+0x635c>
   17114:	ldr	r0, [fp, #8]
   17118:	cmp	r0, #0
   1711c:	bne	17124 <__assert_fail@plt+0x62bc>
   17120:	b	171c4 <__assert_fail@plt+0x635c>
   17124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17128:	cmp	r0, #0
   1712c:	bge	17198 <__assert_fail@plt+0x6330>
   17130:	b	17134 <__assert_fail@plt+0x62cc>
   17134:	b	1717c <__assert_fail@plt+0x6314>
   17138:	b	1717c <__assert_fail@plt+0x6314>
   1713c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17140:	cmn	r0, #1
   17144:	bne	1717c <__assert_fail@plt+0x6314>
   17148:	b	1714c <__assert_fail@plt+0x62e4>
   1714c:	ldr	r0, [fp, #8]
   17150:	add	r0, r0, #0
   17154:	movw	r1, #0
   17158:	cmp	r1, r0
   1715c:	blt	171b0 <__assert_fail@plt+0x6348>
   17160:	b	171c4 <__assert_fail@plt+0x635c>
   17164:	ldr	r0, [fp, #8]
   17168:	sub	r0, r0, #1
   1716c:	mvn	r1, #0
   17170:	cmp	r1, r0
   17174:	blt	171b0 <__assert_fail@plt+0x6348>
   17178:	b	171c4 <__assert_fail@plt+0x635c>
   1717c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17180:	movw	r1, #0
   17184:	sdiv	r0, r1, r0
   17188:	ldr	r1, [fp, #8]
   1718c:	cmp	r0, r1
   17190:	blt	171b0 <__assert_fail@plt+0x6348>
   17194:	b	171c4 <__assert_fail@plt+0x635c>
   17198:	ldr	r0, [fp, #8]
   1719c:	mvn	r1, #0
   171a0:	udiv	r0, r1, r0
   171a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171a8:	cmp	r0, r1
   171ac:	bcs	171c4 <__assert_fail@plt+0x635c>
   171b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b4:	ldr	r1, [fp, #8]
   171b8:	mul	r0, r0, r1
   171bc:	str	r0, [fp, #-28]	; 0xffffffe4
   171c0:	b	17a68 <__assert_fail@plt+0x6c00>
   171c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c8:	ldr	r1, [fp, #8]
   171cc:	mul	r0, r0, r1
   171d0:	str	r0, [fp, #-28]	; 0xffffffe4
   171d4:	b	17a6c <__assert_fail@plt+0x6c04>
   171d8:	b	171dc <__assert_fail@plt+0x6374>
   171dc:	b	171e0 <__assert_fail@plt+0x6378>
   171e0:	ldr	r0, [fp, #8]
   171e4:	cmp	r0, #0
   171e8:	bge	172ec <__assert_fail@plt+0x6484>
   171ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f0:	cmp	r0, #0
   171f4:	bge	17280 <__assert_fail@plt+0x6418>
   171f8:	b	171fc <__assert_fail@plt+0x6394>
   171fc:	ldr	r0, [pc, #2192]	; 17a94 <__assert_fail@plt+0x6c2c>
   17200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17204:	ldr	r2, [fp, #8]
   17208:	sdiv	r0, r0, r2
   1720c:	cmp	r1, r0
   17210:	blt	1737c <__assert_fail@plt+0x6514>
   17214:	b	17390 <__assert_fail@plt+0x6528>
   17218:	b	1721c <__assert_fail@plt+0x63b4>
   1721c:	ldr	r0, [pc, #2164]	; 17a98 <__assert_fail@plt+0x6c30>
   17220:	ldr	r1, [fp, #8]
   17224:	cmp	r1, r0
   17228:	blt	17240 <__assert_fail@plt+0x63d8>
   1722c:	b	1724c <__assert_fail@plt+0x63e4>
   17230:	ldr	r0, [fp, #8]
   17234:	movw	r1, #0
   17238:	cmp	r1, r0
   1723c:	bge	1724c <__assert_fail@plt+0x63e4>
   17240:	movw	r0, #0
   17244:	str	r0, [sp, #140]	; 0x8c
   17248:	b	17264 <__assert_fail@plt+0x63fc>
   1724c:	ldr	r0, [pc, #2112]	; 17a94 <__assert_fail@plt+0x6c2c>
   17250:	ldr	r1, [fp, #8]
   17254:	movw	r2, #0
   17258:	sub	r1, r2, r1
   1725c:	sdiv	r0, r0, r1
   17260:	str	r0, [sp, #140]	; 0x8c
   17264:	ldr	r0, [sp, #140]	; 0x8c
   17268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1726c:	mvn	r2, #0
   17270:	sub	r1, r2, r1
   17274:	cmp	r0, r1
   17278:	ble	1737c <__assert_fail@plt+0x6514>
   1727c:	b	17390 <__assert_fail@plt+0x6528>
   17280:	ldr	r0, [fp, #8]
   17284:	cmn	r0, #1
   17288:	bne	172d0 <__assert_fail@plt+0x6468>
   1728c:	b	17290 <__assert_fail@plt+0x6428>
   17290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17294:	add	r0, r0, #-2147483648	; 0x80000000
   17298:	movw	r1, #0
   1729c:	cmp	r1, r0
   172a0:	blt	1737c <__assert_fail@plt+0x6514>
   172a4:	b	17390 <__assert_fail@plt+0x6528>
   172a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ac:	movw	r1, #0
   172b0:	cmp	r1, r0
   172b4:	bge	17390 <__assert_fail@plt+0x6528>
   172b8:	ldr	r0, [pc, #2004]	; 17a94 <__assert_fail@plt+0x6c2c>
   172bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172c0:	sub	r1, r1, #1
   172c4:	cmp	r0, r1
   172c8:	blt	1737c <__assert_fail@plt+0x6514>
   172cc:	b	17390 <__assert_fail@plt+0x6528>
   172d0:	ldr	r0, [pc, #1988]	; 17a9c <__assert_fail@plt+0x6c34>
   172d4:	ldr	r1, [fp, #8]
   172d8:	sdiv	r0, r0, r1
   172dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172e0:	cmp	r0, r1
   172e4:	blt	1737c <__assert_fail@plt+0x6514>
   172e8:	b	17390 <__assert_fail@plt+0x6528>
   172ec:	ldr	r0, [fp, #8]
   172f0:	cmp	r0, #0
   172f4:	bne	172fc <__assert_fail@plt+0x6494>
   172f8:	b	17390 <__assert_fail@plt+0x6528>
   172fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17300:	cmp	r0, #0
   17304:	bge	17364 <__assert_fail@plt+0x64fc>
   17308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1730c:	cmn	r0, #1
   17310:	bne	17348 <__assert_fail@plt+0x64e0>
   17314:	b	17318 <__assert_fail@plt+0x64b0>
   17318:	ldr	r0, [fp, #8]
   1731c:	add	r0, r0, #-2147483648	; 0x80000000
   17320:	movw	r1, #0
   17324:	cmp	r1, r0
   17328:	blt	1737c <__assert_fail@plt+0x6514>
   1732c:	b	17390 <__assert_fail@plt+0x6528>
   17330:	ldr	r0, [pc, #1884]	; 17a94 <__assert_fail@plt+0x6c2c>
   17334:	ldr	r1, [fp, #8]
   17338:	sub	r1, r1, #1
   1733c:	cmp	r0, r1
   17340:	blt	1737c <__assert_fail@plt+0x6514>
   17344:	b	17390 <__assert_fail@plt+0x6528>
   17348:	ldr	r0, [pc, #1868]	; 17a9c <__assert_fail@plt+0x6c34>
   1734c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17350:	sdiv	r0, r0, r1
   17354:	ldr	r1, [fp, #8]
   17358:	cmp	r0, r1
   1735c:	blt	1737c <__assert_fail@plt+0x6514>
   17360:	b	17390 <__assert_fail@plt+0x6528>
   17364:	ldr	r0, [pc, #1832]	; 17a94 <__assert_fail@plt+0x6c2c>
   17368:	ldr	r1, [fp, #8]
   1736c:	sdiv	r0, r0, r1
   17370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17374:	cmp	r0, r1
   17378:	bge	17390 <__assert_fail@plt+0x6528>
   1737c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17380:	ldr	r1, [fp, #8]
   17384:	mul	r0, r0, r1
   17388:	str	r0, [fp, #-28]	; 0xffffffe4
   1738c:	b	17a68 <__assert_fail@plt+0x6c00>
   17390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17394:	ldr	r1, [fp, #8]
   17398:	mul	r0, r0, r1
   1739c:	str	r0, [fp, #-28]	; 0xffffffe4
   173a0:	b	17a6c <__assert_fail@plt+0x6c04>
   173a4:	ldr	r0, [fp, #8]
   173a8:	cmp	r0, #0
   173ac:	bge	174bc <__assert_fail@plt+0x6654>
   173b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b4:	cmp	r0, #0
   173b8:	bge	17444 <__assert_fail@plt+0x65dc>
   173bc:	b	173dc <__assert_fail@plt+0x6574>
   173c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c4:	ldr	r1, [fp, #8]
   173c8:	mvn	r2, #0
   173cc:	udiv	r1, r2, r1
   173d0:	cmp	r0, r1
   173d4:	bcc	17558 <__assert_fail@plt+0x66f0>
   173d8:	b	1756c <__assert_fail@plt+0x6704>
   173dc:	b	173e0 <__assert_fail@plt+0x6578>
   173e0:	ldr	r0, [pc, #1712]	; 17a98 <__assert_fail@plt+0x6c30>
   173e4:	ldr	r1, [fp, #8]
   173e8:	cmp	r1, r0
   173ec:	blt	17404 <__assert_fail@plt+0x659c>
   173f0:	b	17410 <__assert_fail@plt+0x65a8>
   173f4:	ldr	r0, [fp, #8]
   173f8:	movw	r1, #0
   173fc:	cmp	r1, r0
   17400:	bge	17410 <__assert_fail@plt+0x65a8>
   17404:	movw	r0, #1
   17408:	str	r0, [sp, #136]	; 0x88
   1740c:	b	17428 <__assert_fail@plt+0x65c0>
   17410:	ldr	r0, [fp, #8]
   17414:	movw	r1, #0
   17418:	sub	r0, r1, r0
   1741c:	mvn	r1, #0
   17420:	udiv	r0, r1, r0
   17424:	str	r0, [sp, #136]	; 0x88
   17428:	ldr	r0, [sp, #136]	; 0x88
   1742c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17430:	mvn	r2, #0
   17434:	sub	r1, r2, r1
   17438:	cmp	r0, r1
   1743c:	bls	17558 <__assert_fail@plt+0x66f0>
   17440:	b	1756c <__assert_fail@plt+0x6704>
   17444:	b	17448 <__assert_fail@plt+0x65e0>
   17448:	b	174a0 <__assert_fail@plt+0x6638>
   1744c:	b	174a0 <__assert_fail@plt+0x6638>
   17450:	ldr	r0, [fp, #8]
   17454:	cmn	r0, #1
   17458:	bne	174a0 <__assert_fail@plt+0x6638>
   1745c:	b	17460 <__assert_fail@plt+0x65f8>
   17460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17464:	add	r0, r0, #0
   17468:	movw	r1, #0
   1746c:	cmp	r1, r0
   17470:	blt	17558 <__assert_fail@plt+0x66f0>
   17474:	b	1756c <__assert_fail@plt+0x6704>
   17478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1747c:	movw	r1, #0
   17480:	cmp	r1, r0
   17484:	bge	1756c <__assert_fail@plt+0x6704>
   17488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1748c:	sub	r0, r0, #1
   17490:	mvn	r1, #0
   17494:	cmp	r1, r0
   17498:	blt	17558 <__assert_fail@plt+0x66f0>
   1749c:	b	1756c <__assert_fail@plt+0x6704>
   174a0:	ldr	r0, [fp, #8]
   174a4:	movw	r1, #0
   174a8:	sdiv	r0, r1, r0
   174ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174b0:	cmp	r0, r1
   174b4:	blt	17558 <__assert_fail@plt+0x66f0>
   174b8:	b	1756c <__assert_fail@plt+0x6704>
   174bc:	ldr	r0, [fp, #8]
   174c0:	cmp	r0, #0
   174c4:	bne	174cc <__assert_fail@plt+0x6664>
   174c8:	b	1756c <__assert_fail@plt+0x6704>
   174cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d0:	cmp	r0, #0
   174d4:	bge	17540 <__assert_fail@plt+0x66d8>
   174d8:	b	174dc <__assert_fail@plt+0x6674>
   174dc:	b	17524 <__assert_fail@plt+0x66bc>
   174e0:	b	17524 <__assert_fail@plt+0x66bc>
   174e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e8:	cmn	r0, #1
   174ec:	bne	17524 <__assert_fail@plt+0x66bc>
   174f0:	b	174f4 <__assert_fail@plt+0x668c>
   174f4:	ldr	r0, [fp, #8]
   174f8:	add	r0, r0, #0
   174fc:	movw	r1, #0
   17500:	cmp	r1, r0
   17504:	blt	17558 <__assert_fail@plt+0x66f0>
   17508:	b	1756c <__assert_fail@plt+0x6704>
   1750c:	ldr	r0, [fp, #8]
   17510:	sub	r0, r0, #1
   17514:	mvn	r1, #0
   17518:	cmp	r1, r0
   1751c:	blt	17558 <__assert_fail@plt+0x66f0>
   17520:	b	1756c <__assert_fail@plt+0x6704>
   17524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17528:	movw	r1, #0
   1752c:	sdiv	r0, r1, r0
   17530:	ldr	r1, [fp, #8]
   17534:	cmp	r0, r1
   17538:	blt	17558 <__assert_fail@plt+0x66f0>
   1753c:	b	1756c <__assert_fail@plt+0x6704>
   17540:	ldr	r0, [fp, #8]
   17544:	mvn	r1, #0
   17548:	udiv	r0, r1, r0
   1754c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17550:	cmp	r0, r1
   17554:	bcs	1756c <__assert_fail@plt+0x6704>
   17558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1755c:	ldr	r1, [fp, #8]
   17560:	mul	r0, r0, r1
   17564:	str	r0, [fp, #-28]	; 0xffffffe4
   17568:	b	17a68 <__assert_fail@plt+0x6c00>
   1756c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17570:	ldr	r1, [fp, #8]
   17574:	mul	r0, r0, r1
   17578:	str	r0, [fp, #-28]	; 0xffffffe4
   1757c:	b	17a6c <__assert_fail@plt+0x6c04>
   17580:	b	17584 <__assert_fail@plt+0x671c>
   17584:	ldr	r0, [fp, #8]
   17588:	cmp	r0, #0
   1758c:	bge	17714 <__assert_fail@plt+0x68ac>
   17590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17594:	cmp	r0, #0
   17598:	bge	17680 <__assert_fail@plt+0x6818>
   1759c:	b	175a0 <__assert_fail@plt+0x6738>
   175a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a4:	ldr	r1, [fp, #8]
   175a8:	asr	r3, r1, #31
   175ac:	mvn	r2, #0
   175b0:	mvn	ip, #-2147483648	; 0x80000000
   175b4:	str	r0, [sp, #132]	; 0x84
   175b8:	mov	r0, r2
   175bc:	str	r1, [sp, #128]	; 0x80
   175c0:	mov	r1, ip
   175c4:	ldr	r2, [sp, #128]	; 0x80
   175c8:	bl	1a15c <__assert_fail@plt+0x92f4>
   175cc:	ldr	r2, [sp, #132]	; 0x84
   175d0:	subs	r0, r2, r0
   175d4:	rscs	r1, r1, r2, asr #31
   175d8:	str	r0, [sp, #124]	; 0x7c
   175dc:	str	r1, [sp, #120]	; 0x78
   175e0:	blt	177f4 <__assert_fail@plt+0x698c>
   175e4:	b	17808 <__assert_fail@plt+0x69a0>
   175e8:	b	175ec <__assert_fail@plt+0x6784>
   175ec:	ldr	r0, [pc, #1188]	; 17a98 <__assert_fail@plt+0x6c30>
   175f0:	ldr	r1, [fp, #8]
   175f4:	cmp	r1, r0
   175f8:	blt	17610 <__assert_fail@plt+0x67a8>
   175fc:	b	17624 <__assert_fail@plt+0x67bc>
   17600:	ldr	r0, [fp, #8]
   17604:	movw	r1, #0
   17608:	cmp	r1, r0
   1760c:	bge	17624 <__assert_fail@plt+0x67bc>
   17610:	mov	r0, #0
   17614:	mvn	r1, #0
   17618:	str	r1, [sp, #116]	; 0x74
   1761c:	str	r0, [sp, #112]	; 0x70
   17620:	b	17658 <__assert_fail@plt+0x67f0>
   17624:	ldr	r0, [fp, #8]
   17628:	rsb	r0, r0, #0
   1762c:	asr	r3, r0, #31
   17630:	mvn	r1, #0
   17634:	mvn	r2, #-2147483648	; 0x80000000
   17638:	str	r0, [sp, #108]	; 0x6c
   1763c:	mov	r0, r1
   17640:	mov	r1, r2
   17644:	ldr	r2, [sp, #108]	; 0x6c
   17648:	bl	1a15c <__assert_fail@plt+0x92f4>
   1764c:	str	r0, [sp, #116]	; 0x74
   17650:	str	r1, [sp, #112]	; 0x70
   17654:	b	17658 <__assert_fail@plt+0x67f0>
   17658:	ldr	r0, [sp, #112]	; 0x70
   1765c:	ldr	r1, [sp, #116]	; 0x74
   17660:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17664:	mvn	r2, r2
   17668:	subs	r1, r2, r1
   1766c:	rscs	r0, r0, r2, asr #31
   17670:	str	r1, [sp, #104]	; 0x68
   17674:	str	r0, [sp, #100]	; 0x64
   17678:	bge	177f4 <__assert_fail@plt+0x698c>
   1767c:	b	17808 <__assert_fail@plt+0x69a0>
   17680:	ldr	r0, [fp, #8]
   17684:	cmn	r0, #1
   17688:	bne	176d4 <__assert_fail@plt+0x686c>
   1768c:	b	17690 <__assert_fail@plt+0x6828>
   17690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17694:	mov	r1, #-2147483648	; 0x80000000
   17698:	add	r1, r1, r0, asr #31
   1769c:	rsbs	r0, r0, #0
   176a0:	rscs	r1, r1, #0
   176a4:	str	r0, [sp, #96]	; 0x60
   176a8:	str	r1, [sp, #92]	; 0x5c
   176ac:	blt	177f4 <__assert_fail@plt+0x698c>
   176b0:	b	17808 <__assert_fail@plt+0x69a0>
   176b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176b8:	movw	r1, #0
   176bc:	cmp	r1, r0
   176c0:	bge	17808 <__assert_fail@plt+0x69a0>
   176c4:	mov	r0, #0
   176c8:	cmp	r0, #0
   176cc:	bne	177f4 <__assert_fail@plt+0x698c>
   176d0:	b	17808 <__assert_fail@plt+0x69a0>
   176d4:	ldr	r0, [fp, #8]
   176d8:	asr	r3, r0, #31
   176dc:	mov	r1, #0
   176e0:	mov	r2, #-2147483648	; 0x80000000
   176e4:	str	r0, [sp, #88]	; 0x58
   176e8:	mov	r0, r1
   176ec:	mov	r1, r2
   176f0:	ldr	r2, [sp, #88]	; 0x58
   176f4:	bl	1a15c <__assert_fail@plt+0x92f4>
   176f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176fc:	subs	r0, r0, r2
   17700:	sbcs	r1, r1, r2, asr #31
   17704:	str	r0, [sp, #84]	; 0x54
   17708:	str	r1, [sp, #80]	; 0x50
   1770c:	blt	177f4 <__assert_fail@plt+0x698c>
   17710:	b	17808 <__assert_fail@plt+0x69a0>
   17714:	ldr	r0, [fp, #8]
   17718:	cmp	r0, #0
   1771c:	bne	17724 <__assert_fail@plt+0x68bc>
   17720:	b	17808 <__assert_fail@plt+0x69a0>
   17724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17728:	cmp	r0, #0
   1772c:	bge	177b4 <__assert_fail@plt+0x694c>
   17730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17734:	cmn	r0, #1
   17738:	bne	17774 <__assert_fail@plt+0x690c>
   1773c:	b	17740 <__assert_fail@plt+0x68d8>
   17740:	ldr	r0, [fp, #8]
   17744:	mov	r1, #-2147483648	; 0x80000000
   17748:	add	r1, r1, r0, asr #31
   1774c:	rsbs	r0, r0, #0
   17750:	rscs	r1, r1, #0
   17754:	str	r0, [sp, #76]	; 0x4c
   17758:	str	r1, [sp, #72]	; 0x48
   1775c:	blt	177f4 <__assert_fail@plt+0x698c>
   17760:	b	17808 <__assert_fail@plt+0x69a0>
   17764:	mov	r0, #0
   17768:	cmp	r0, #0
   1776c:	bne	177f4 <__assert_fail@plt+0x698c>
   17770:	b	17808 <__assert_fail@plt+0x69a0>
   17774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17778:	asr	r3, r0, #31
   1777c:	mov	r1, #0
   17780:	mov	r2, #-2147483648	; 0x80000000
   17784:	str	r0, [sp, #68]	; 0x44
   17788:	mov	r0, r1
   1778c:	mov	r1, r2
   17790:	ldr	r2, [sp, #68]	; 0x44
   17794:	bl	1a15c <__assert_fail@plt+0x92f4>
   17798:	ldr	r2, [fp, #8]
   1779c:	subs	r0, r0, r2
   177a0:	sbcs	r1, r1, r2, asr #31
   177a4:	str	r0, [sp, #64]	; 0x40
   177a8:	str	r1, [sp, #60]	; 0x3c
   177ac:	blt	177f4 <__assert_fail@plt+0x698c>
   177b0:	b	17808 <__assert_fail@plt+0x69a0>
   177b4:	ldr	r0, [fp, #8]
   177b8:	asr	r3, r0, #31
   177bc:	mvn	r1, #0
   177c0:	mvn	r2, #-2147483648	; 0x80000000
   177c4:	str	r0, [sp, #56]	; 0x38
   177c8:	mov	r0, r1
   177cc:	mov	r1, r2
   177d0:	ldr	r2, [sp, #56]	; 0x38
   177d4:	bl	1a15c <__assert_fail@plt+0x92f4>
   177d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177dc:	subs	r0, r0, r2
   177e0:	sbcs	r1, r1, r2, asr #31
   177e4:	str	r0, [sp, #52]	; 0x34
   177e8:	str	r1, [sp, #48]	; 0x30
   177ec:	bge	17808 <__assert_fail@plt+0x69a0>
   177f0:	b	177f4 <__assert_fail@plt+0x698c>
   177f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177f8:	ldr	r1, [fp, #8]
   177fc:	mul	r0, r0, r1
   17800:	str	r0, [fp, #-28]	; 0xffffffe4
   17804:	b	17a68 <__assert_fail@plt+0x6c00>
   17808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1780c:	ldr	r1, [fp, #8]
   17810:	mul	r0, r0, r1
   17814:	str	r0, [fp, #-28]	; 0xffffffe4
   17818:	b	17a6c <__assert_fail@plt+0x6c04>
   1781c:	ldr	r0, [fp, #8]
   17820:	cmp	r0, #0
   17824:	bge	17984 <__assert_fail@plt+0x6b1c>
   17828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1782c:	cmp	r0, #0
   17830:	bge	1790c <__assert_fail@plt+0x6aa4>
   17834:	b	1787c <__assert_fail@plt+0x6a14>
   17838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1783c:	ldr	r1, [fp, #8]
   17840:	asr	r3, r1, #31
   17844:	mvn	r2, #0
   17848:	str	r0, [sp, #44]	; 0x2c
   1784c:	mov	r0, r2
   17850:	str	r1, [sp, #40]	; 0x28
   17854:	mov	r1, r2
   17858:	ldr	r2, [sp, #40]	; 0x28
   1785c:	bl	1a230 <__assert_fail@plt+0x93c8>
   17860:	ldr	r2, [sp, #44]	; 0x2c
   17864:	subs	r0, r2, r0
   17868:	rscs	r1, r1, r2, asr #31
   1786c:	str	r0, [sp, #36]	; 0x24
   17870:	str	r1, [sp, #32]
   17874:	bcc	17a40 <__assert_fail@plt+0x6bd8>
   17878:	b	17a54 <__assert_fail@plt+0x6bec>
   1787c:	b	17880 <__assert_fail@plt+0x6a18>
   17880:	ldr	r0, [pc, #528]	; 17a98 <__assert_fail@plt+0x6c30>
   17884:	ldr	r1, [fp, #8]
   17888:	cmp	r1, r0
   1788c:	blt	178a4 <__assert_fail@plt+0x6a3c>
   17890:	b	178b8 <__assert_fail@plt+0x6a50>
   17894:	ldr	r0, [fp, #8]
   17898:	movw	r1, #0
   1789c:	cmp	r1, r0
   178a0:	bge	178b8 <__assert_fail@plt+0x6a50>
   178a4:	mov	r0, #1
   178a8:	mvn	r1, #0
   178ac:	str	r1, [sp, #28]
   178b0:	str	r0, [sp, #24]
   178b4:	b	178e4 <__assert_fail@plt+0x6a7c>
   178b8:	ldr	r0, [fp, #8]
   178bc:	rsb	r0, r0, #0
   178c0:	asr	r3, r0, #31
   178c4:	mvn	r1, #0
   178c8:	str	r0, [sp, #20]
   178cc:	mov	r0, r1
   178d0:	ldr	r2, [sp, #20]
   178d4:	bl	1a230 <__assert_fail@plt+0x93c8>
   178d8:	str	r0, [sp, #28]
   178dc:	str	r1, [sp, #24]
   178e0:	b	178e4 <__assert_fail@plt+0x6a7c>
   178e4:	ldr	r0, [sp, #24]
   178e8:	ldr	r1, [sp, #28]
   178ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178f0:	mvn	r2, r2
   178f4:	subs	r1, r2, r1
   178f8:	rscs	r0, r0, r2, asr #31
   178fc:	str	r1, [sp, #16]
   17900:	str	r0, [sp, #12]
   17904:	bcs	17a40 <__assert_fail@plt+0x6bd8>
   17908:	b	17a54 <__assert_fail@plt+0x6bec>
   1790c:	b	17910 <__assert_fail@plt+0x6aa8>
   17910:	b	17968 <__assert_fail@plt+0x6b00>
   17914:	b	17968 <__assert_fail@plt+0x6b00>
   17918:	ldr	r0, [fp, #8]
   1791c:	cmn	r0, #1
   17920:	bne	17968 <__assert_fail@plt+0x6b00>
   17924:	b	17928 <__assert_fail@plt+0x6ac0>
   17928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1792c:	add	r0, r0, #0
   17930:	movw	r1, #0
   17934:	cmp	r1, r0
   17938:	blt	17a40 <__assert_fail@plt+0x6bd8>
   1793c:	b	17a54 <__assert_fail@plt+0x6bec>
   17940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17944:	movw	r1, #0
   17948:	cmp	r1, r0
   1794c:	bge	17a54 <__assert_fail@plt+0x6bec>
   17950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17954:	sub	r0, r0, #1
   17958:	mvn	r1, #0
   1795c:	cmp	r1, r0
   17960:	blt	17a40 <__assert_fail@plt+0x6bd8>
   17964:	b	17a54 <__assert_fail@plt+0x6bec>
   17968:	ldr	r0, [fp, #8]
   1796c:	movw	r1, #0
   17970:	sdiv	r0, r1, r0
   17974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17978:	cmp	r0, r1
   1797c:	blt	17a40 <__assert_fail@plt+0x6bd8>
   17980:	b	17a54 <__assert_fail@plt+0x6bec>
   17984:	ldr	r0, [fp, #8]
   17988:	cmp	r0, #0
   1798c:	bne	17994 <__assert_fail@plt+0x6b2c>
   17990:	b	17a54 <__assert_fail@plt+0x6bec>
   17994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17998:	cmp	r0, #0
   1799c:	bge	17a08 <__assert_fail@plt+0x6ba0>
   179a0:	b	179a4 <__assert_fail@plt+0x6b3c>
   179a4:	b	179ec <__assert_fail@plt+0x6b84>
   179a8:	b	179ec <__assert_fail@plt+0x6b84>
   179ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b0:	cmn	r0, #1
   179b4:	bne	179ec <__assert_fail@plt+0x6b84>
   179b8:	b	179bc <__assert_fail@plt+0x6b54>
   179bc:	ldr	r0, [fp, #8]
   179c0:	add	r0, r0, #0
   179c4:	movw	r1, #0
   179c8:	cmp	r1, r0
   179cc:	blt	17a40 <__assert_fail@plt+0x6bd8>
   179d0:	b	17a54 <__assert_fail@plt+0x6bec>
   179d4:	ldr	r0, [fp, #8]
   179d8:	sub	r0, r0, #1
   179dc:	mvn	r1, #0
   179e0:	cmp	r1, r0
   179e4:	blt	17a40 <__assert_fail@plt+0x6bd8>
   179e8:	b	17a54 <__assert_fail@plt+0x6bec>
   179ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179f0:	movw	r1, #0
   179f4:	sdiv	r0, r1, r0
   179f8:	ldr	r1, [fp, #8]
   179fc:	cmp	r0, r1
   17a00:	blt	17a40 <__assert_fail@plt+0x6bd8>
   17a04:	b	17a54 <__assert_fail@plt+0x6bec>
   17a08:	ldr	r0, [fp, #8]
   17a0c:	asr	r3, r0, #31
   17a10:	mvn	r1, #0
   17a14:	str	r0, [sp, #8]
   17a18:	mov	r0, r1
   17a1c:	ldr	r2, [sp, #8]
   17a20:	bl	1a230 <__assert_fail@plt+0x93c8>
   17a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a28:	subs	r0, r0, r2
   17a2c:	sbcs	r1, r1, r2, asr #31
   17a30:	str	r0, [sp, #4]
   17a34:	str	r1, [sp]
   17a38:	bcs	17a54 <__assert_fail@plt+0x6bec>
   17a3c:	b	17a40 <__assert_fail@plt+0x6bd8>
   17a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a44:	ldr	r1, [fp, #8]
   17a48:	mul	r0, r0, r1
   17a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a50:	b	17a68 <__assert_fail@plt+0x6c00>
   17a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a58:	ldr	r1, [fp, #8]
   17a5c:	mul	r0, r0, r1
   17a60:	str	r0, [fp, #-28]	; 0xffffffe4
   17a64:	b	17a6c <__assert_fail@plt+0x6c04>
   17a68:	bl	17c44 <__assert_fail@plt+0x6ddc>
   17a6c:	ldr	r0, [fp, #-4]
   17a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a74:	bl	14f00 <__assert_fail@plt+0x4098>
   17a78:	str	r0, [fp, #-4]
   17a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a80:	ldr	r1, [fp, #-8]
   17a84:	str	r0, [r1]
   17a88:	ldr	r0, [fp, #-4]
   17a8c:	mov	sp, fp
   17a90:	pop	{fp, pc}
   17a94:	svcvc	0x00ffffff
   17a98:	andhi	r0, r0, r1
   17a9c:	andhi	r0, r0, r0
   17aa0:			; <UNDEFINED> instruction: 0xffff8000
   17aa4:	push	{fp, lr}
   17aa8:	mov	fp, sp
   17aac:	sub	sp, sp, #8
   17ab0:	str	r0, [sp, #4]
   17ab4:	ldr	r0, [sp, #4]
   17ab8:	movw	r1, #1
   17abc:	bl	17ac8 <__assert_fail@plt+0x6c60>
   17ac0:	mov	sp, fp
   17ac4:	pop	{fp, pc}
   17ac8:	push	{fp, lr}
   17acc:	mov	fp, sp
   17ad0:	sub	sp, sp, #8
   17ad4:	str	r0, [sp, #4]
   17ad8:	str	r1, [sp]
   17adc:	ldr	r0, [sp, #4]
   17ae0:	ldr	r1, [sp]
   17ae4:	bl	17c94 <__assert_fail@plt+0x6e2c>
   17ae8:	bl	14e8c <__assert_fail@plt+0x4024>
   17aec:	mov	sp, fp
   17af0:	pop	{fp, pc}
   17af4:	push	{fp, lr}
   17af8:	mov	fp, sp
   17afc:	sub	sp, sp, #8
   17b00:	str	r0, [sp, #4]
   17b04:	ldr	r0, [sp, #4]
   17b08:	movw	r1, #1
   17b0c:	bl	17b18 <__assert_fail@plt+0x6cb0>
   17b10:	mov	sp, fp
   17b14:	pop	{fp, pc}
   17b18:	push	{fp, lr}
   17b1c:	mov	fp, sp
   17b20:	sub	sp, sp, #8
   17b24:	str	r0, [sp, #4]
   17b28:	str	r1, [sp]
   17b2c:	ldr	r0, [sp, #4]
   17b30:	ldr	r1, [sp]
   17b34:	bl	18378 <__assert_fail@plt+0x7510>
   17b38:	bl	14e8c <__assert_fail@plt+0x4024>
   17b3c:	mov	sp, fp
   17b40:	pop	{fp, pc}
   17b44:	push	{fp, lr}
   17b48:	mov	fp, sp
   17b4c:	sub	sp, sp, #16
   17b50:	str	r0, [fp, #-4]
   17b54:	str	r1, [sp, #8]
   17b58:	ldr	r0, [sp, #8]
   17b5c:	bl	14e68 <__assert_fail@plt+0x4000>
   17b60:	ldr	r1, [fp, #-4]
   17b64:	ldr	r2, [sp, #8]
   17b68:	str	r0, [sp, #4]
   17b6c:	bl	10cb8 <memcpy@plt>
   17b70:	ldr	r0, [sp, #4]
   17b74:	mov	sp, fp
   17b78:	pop	{fp, pc}
   17b7c:	push	{fp, lr}
   17b80:	mov	fp, sp
   17b84:	sub	sp, sp, #16
   17b88:	str	r0, [fp, #-4]
   17b8c:	str	r1, [sp, #8]
   17b90:	ldr	r0, [sp, #8]
   17b94:	bl	14ebc <__assert_fail@plt+0x4054>
   17b98:	ldr	r1, [fp, #-4]
   17b9c:	ldr	r2, [sp, #8]
   17ba0:	str	r0, [sp, #4]
   17ba4:	bl	10cb8 <memcpy@plt>
   17ba8:	ldr	r0, [sp, #4]
   17bac:	mov	sp, fp
   17bb0:	pop	{fp, pc}
   17bb4:	push	{fp, lr}
   17bb8:	mov	fp, sp
   17bbc:	sub	sp, sp, #16
   17bc0:	str	r0, [fp, #-4]
   17bc4:	str	r1, [sp, #8]
   17bc8:	ldr	r0, [sp, #8]
   17bcc:	add	r0, r0, #1
   17bd0:	bl	14ebc <__assert_fail@plt+0x4054>
   17bd4:	str	r0, [sp, #4]
   17bd8:	ldr	r0, [sp, #4]
   17bdc:	ldr	r1, [sp, #8]
   17be0:	add	r0, r0, r1
   17be4:	movw	r1, #0
   17be8:	strb	r1, [r0]
   17bec:	ldr	r0, [sp, #4]
   17bf0:	ldr	r1, [fp, #-4]
   17bf4:	ldr	r2, [sp, #8]
   17bf8:	str	r0, [sp]
   17bfc:	bl	10cb8 <memcpy@plt>
   17c00:	ldr	r0, [sp]
   17c04:	mov	sp, fp
   17c08:	pop	{fp, pc}
   17c0c:	push	{fp, lr}
   17c10:	mov	fp, sp
   17c14:	sub	sp, sp, #8
   17c18:	str	r0, [sp, #4]
   17c1c:	ldr	r0, [sp, #4]
   17c20:	ldr	r1, [sp, #4]
   17c24:	str	r0, [sp]
   17c28:	mov	r0, r1
   17c2c:	bl	10da8 <strlen@plt>
   17c30:	add	r1, r0, #1
   17c34:	ldr	r0, [sp]
   17c38:	bl	17b44 <__assert_fail@plt+0x6cdc>
   17c3c:	mov	sp, fp
   17c40:	pop	{fp, pc}
   17c44:	push	{fp, lr}
   17c48:	mov	fp, sp
   17c4c:	sub	sp, sp, #8
   17c50:	movw	r0, #45264	; 0xb0d0
   17c54:	movt	r0, #2
   17c58:	ldr	r0, [r0]
   17c5c:	movw	r1, #44716	; 0xaeac
   17c60:	movt	r1, #1
   17c64:	str	r0, [sp, #4]
   17c68:	mov	r0, r1
   17c6c:	bl	10d9c <gettext@plt>
   17c70:	ldr	r1, [sp, #4]
   17c74:	str	r0, [sp]
   17c78:	mov	r0, r1
   17c7c:	movw	r1, #0
   17c80:	movw	r2, #43663	; 0xaa8f
   17c84:	movt	r2, #1
   17c88:	ldr	r3, [sp]
   17c8c:	bl	10d3c <error@plt>
   17c90:	bl	10e50 <abort@plt>
   17c94:	push	{fp, lr}
   17c98:	mov	fp, sp
   17c9c:	sub	sp, sp, #16
   17ca0:	str	r0, [sp, #8]
   17ca4:	str	r1, [sp, #4]
   17ca8:	ldr	r0, [sp, #8]
   17cac:	cmp	r0, #0
   17cb0:	beq	17cc0 <__assert_fail@plt+0x6e58>
   17cb4:	ldr	r0, [sp, #4]
   17cb8:	cmp	r0, #0
   17cbc:	bne	17ccc <__assert_fail@plt+0x6e64>
   17cc0:	movw	r0, #1
   17cc4:	str	r0, [sp, #4]
   17cc8:	str	r0, [sp, #8]
   17ccc:	ldr	r0, [sp, #4]
   17cd0:	cmp	r0, #0
   17cd4:	beq	17d08 <__assert_fail@plt+0x6ea0>
   17cd8:	ldr	r0, [pc, #76]	; 17d2c <__assert_fail@plt+0x6ec4>
   17cdc:	ldr	r1, [sp, #4]
   17ce0:	udiv	r0, r0, r1
   17ce4:	ldr	r1, [sp, #8]
   17ce8:	cmp	r0, r1
   17cec:	bcs	17d08 <__assert_fail@plt+0x6ea0>
   17cf0:	bl	10dc0 <__errno_location@plt>
   17cf4:	movw	lr, #12
   17cf8:	str	lr, [r0]
   17cfc:	movw	r0, #0
   17d00:	str	r0, [fp, #-4]
   17d04:	b	17d20 <__assert_fail@plt+0x6eb8>
   17d08:	ldr	r0, [sp, #8]
   17d0c:	ldr	r1, [sp, #4]
   17d10:	bl	10c58 <calloc@plt>
   17d14:	str	r0, [sp]
   17d18:	ldr	r0, [sp]
   17d1c:	str	r0, [fp, #-4]
   17d20:	ldr	r0, [fp, #-4]
   17d24:	mov	sp, fp
   17d28:	pop	{fp, pc}
   17d2c:	svcvc	0x00ffffff
   17d30:	push	{fp, lr}
   17d34:	mov	fp, sp
   17d38:	sub	sp, sp, #16
   17d3c:	str	r0, [sp, #8]
   17d40:	ldr	r0, [sp, #8]
   17d44:	cmp	r0, #0
   17d48:	bne	17d54 <__assert_fail@plt+0x6eec>
   17d4c:	movw	r0, #1
   17d50:	str	r0, [sp, #8]
   17d54:	ldr	r0, [pc, #64]	; 17d9c <__assert_fail@plt+0x6f34>
   17d58:	ldr	r1, [sp, #8]
   17d5c:	cmp	r0, r1
   17d60:	bcs	17d7c <__assert_fail@plt+0x6f14>
   17d64:	bl	10dc0 <__errno_location@plt>
   17d68:	movw	lr, #12
   17d6c:	str	lr, [r0]
   17d70:	movw	r0, #0
   17d74:	str	r0, [fp, #-4]
   17d78:	b	17d90 <__assert_fail@plt+0x6f28>
   17d7c:	ldr	r0, [sp, #8]
   17d80:	bl	10d54 <malloc@plt>
   17d84:	str	r0, [sp, #4]
   17d88:	ldr	r0, [sp, #4]
   17d8c:	str	r0, [fp, #-4]
   17d90:	ldr	r0, [fp, #-4]
   17d94:	mov	sp, fp
   17d98:	pop	{fp, pc}
   17d9c:	svcvc	0x00ffffff
   17da0:	push	{fp, lr}
   17da4:	mov	fp, sp
   17da8:	sub	sp, sp, #16
   17dac:	str	r0, [sp, #8]
   17db0:	str	r1, [sp, #4]
   17db4:	ldr	r0, [sp, #8]
   17db8:	movw	r1, #0
   17dbc:	cmp	r0, r1
   17dc0:	bne	17dd4 <__assert_fail@plt+0x6f6c>
   17dc4:	ldr	r0, [sp, #4]
   17dc8:	bl	17d30 <__assert_fail@plt+0x6ec8>
   17dcc:	str	r0, [fp, #-4]
   17dd0:	b	17e34 <__assert_fail@plt+0x6fcc>
   17dd4:	ldr	r0, [sp, #4]
   17dd8:	cmp	r0, #0
   17ddc:	bne	17df4 <__assert_fail@plt+0x6f8c>
   17de0:	ldr	r0, [sp, #8]
   17de4:	bl	18168 <__assert_fail@plt+0x7300>
   17de8:	movw	r0, #0
   17dec:	str	r0, [fp, #-4]
   17df0:	b	17e34 <__assert_fail@plt+0x6fcc>
   17df4:	ldr	r0, [pc, #68]	; 17e40 <__assert_fail@plt+0x6fd8>
   17df8:	ldr	r1, [sp, #4]
   17dfc:	cmp	r0, r1
   17e00:	bcs	17e1c <__assert_fail@plt+0x6fb4>
   17e04:	bl	10dc0 <__errno_location@plt>
   17e08:	movw	lr, #12
   17e0c:	str	lr, [r0]
   17e10:	movw	r0, #0
   17e14:	str	r0, [fp, #-4]
   17e18:	b	17e34 <__assert_fail@plt+0x6fcc>
   17e1c:	ldr	r0, [sp, #8]
   17e20:	ldr	r1, [sp, #4]
   17e24:	bl	10cdc <realloc@plt>
   17e28:	str	r0, [sp]
   17e2c:	ldr	r0, [sp]
   17e30:	str	r0, [fp, #-4]
   17e34:	ldr	r0, [fp, #-4]
   17e38:	mov	sp, fp
   17e3c:	pop	{fp, pc}
   17e40:	svcvc	0x00ffffff
   17e44:	push	{fp, lr}
   17e48:	mov	fp, sp
   17e4c:	sub	sp, sp, #24
   17e50:	str	r0, [fp, #-8]
   17e54:	str	r1, [sp, #12]
   17e58:	ldr	r0, [fp, #-8]
   17e5c:	str	r0, [sp, #8]
   17e60:	ldr	r0, [sp, #12]
   17e64:	str	r0, [sp, #4]
   17e68:	ldr	r0, [sp, #8]
   17e6c:	ldr	r1, [sp, #4]
   17e70:	cmp	r0, r1
   17e74:	bne	17e84 <__assert_fail@plt+0x701c>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [fp, #-4]
   17e80:	b	17ef0 <__assert_fail@plt+0x7088>
   17e84:	b	17e88 <__assert_fail@plt+0x7020>
   17e88:	ldr	r0, [sp, #8]
   17e8c:	ldrb	r0, [r0]
   17e90:	bl	19edc <__assert_fail@plt+0x9074>
   17e94:	strb	r0, [sp, #3]
   17e98:	ldr	r0, [sp, #4]
   17e9c:	ldrb	r0, [r0]
   17ea0:	bl	19edc <__assert_fail@plt+0x9074>
   17ea4:	strb	r0, [sp, #2]
   17ea8:	ldrb	r0, [sp, #3]
   17eac:	cmp	r0, #0
   17eb0:	bne	17eb8 <__assert_fail@plt+0x7050>
   17eb4:	b	17ee0 <__assert_fail@plt+0x7078>
   17eb8:	ldr	r0, [sp, #8]
   17ebc:	add	r0, r0, #1
   17ec0:	str	r0, [sp, #8]
   17ec4:	ldr	r0, [sp, #4]
   17ec8:	add	r0, r0, #1
   17ecc:	str	r0, [sp, #4]
   17ed0:	ldrb	r0, [sp, #3]
   17ed4:	ldrb	r1, [sp, #2]
   17ed8:	cmp	r0, r1
   17edc:	beq	17e88 <__assert_fail@plt+0x7020>
   17ee0:	ldrb	r0, [sp, #3]
   17ee4:	ldrb	r1, [sp, #2]
   17ee8:	sub	r0, r0, r1
   17eec:	str	r0, [fp, #-4]
   17ef0:	ldr	r0, [fp, #-4]
   17ef4:	mov	sp, fp
   17ef8:	pop	{fp, pc}
   17efc:	push	{fp, lr}
   17f00:	mov	fp, sp
   17f04:	sub	sp, sp, #16
   17f08:	str	r0, [sp, #8]
   17f0c:	ldr	r0, [sp, #8]
   17f10:	bl	10d18 <__fpending@plt>
   17f14:	cmp	r0, #0
   17f18:	movw	r0, #0
   17f1c:	movne	r0, #1
   17f20:	and	r0, r0, #1
   17f24:	strb	r0, [sp, #7]
   17f28:	ldr	r0, [sp, #8]
   17f2c:	bl	10d24 <ferror_unlocked@plt>
   17f30:	cmp	r0, #0
   17f34:	movw	r0, #0
   17f38:	movne	r0, #1
   17f3c:	and	r0, r0, #1
   17f40:	strb	r0, [sp, #6]
   17f44:	ldr	r0, [sp, #8]
   17f48:	bl	17fcc <__assert_fail@plt+0x7164>
   17f4c:	cmp	r0, #0
   17f50:	movw	r0, #0
   17f54:	movne	r0, #1
   17f58:	and	r0, r0, #1
   17f5c:	strb	r0, [sp, #5]
   17f60:	ldrb	r0, [sp, #6]
   17f64:	tst	r0, #1
   17f68:	bne	17f94 <__assert_fail@plt+0x712c>
   17f6c:	ldrb	r0, [sp, #5]
   17f70:	tst	r0, #1
   17f74:	beq	17fb8 <__assert_fail@plt+0x7150>
   17f78:	ldrb	r0, [sp, #7]
   17f7c:	tst	r0, #1
   17f80:	bne	17f94 <__assert_fail@plt+0x712c>
   17f84:	bl	10dc0 <__errno_location@plt>
   17f88:	ldr	r0, [r0]
   17f8c:	cmp	r0, #9
   17f90:	beq	17fb8 <__assert_fail@plt+0x7150>
   17f94:	ldrb	r0, [sp, #5]
   17f98:	tst	r0, #1
   17f9c:	bne	17fac <__assert_fail@plt+0x7144>
   17fa0:	bl	10dc0 <__errno_location@plt>
   17fa4:	movw	lr, #0
   17fa8:	str	lr, [r0]
   17fac:	mvn	r0, #0
   17fb0:	str	r0, [fp, #-4]
   17fb4:	b	17fc0 <__assert_fail@plt+0x7158>
   17fb8:	movw	r0, #0
   17fbc:	str	r0, [fp, #-4]
   17fc0:	ldr	r0, [fp, #-4]
   17fc4:	mov	sp, fp
   17fc8:	pop	{fp, pc}
   17fcc:	push	{fp, lr}
   17fd0:	mov	fp, sp
   17fd4:	sub	sp, sp, #32
   17fd8:	str	r0, [fp, #-8]
   17fdc:	movw	r0, #0
   17fe0:	str	r0, [fp, #-12]
   17fe4:	str	r0, [sp, #12]
   17fe8:	ldr	r0, [fp, #-8]
   17fec:	bl	10de4 <fileno@plt>
   17ff0:	str	r0, [sp, #16]
   17ff4:	ldr	r0, [sp, #16]
   17ff8:	cmp	r0, #0
   17ffc:	bge	18010 <__assert_fail@plt+0x71a8>
   18000:	ldr	r0, [fp, #-8]
   18004:	bl	10df0 <fclose@plt>
   18008:	str	r0, [fp, #-4]
   1800c:	b	180ac <__assert_fail@plt+0x7244>
   18010:	ldr	r0, [fp, #-8]
   18014:	bl	10d6c <__freading@plt>
   18018:	cmp	r0, #0
   1801c:	beq	18054 <__assert_fail@plt+0x71ec>
   18020:	ldr	r0, [fp, #-8]
   18024:	bl	10de4 <fileno@plt>
   18028:	mov	lr, sp
   1802c:	mov	r1, #1
   18030:	str	r1, [lr]
   18034:	mov	r1, #0
   18038:	mov	r2, r1
   1803c:	mov	r3, r1
   18040:	bl	10d00 <lseek64@plt>
   18044:	and	r0, r0, r1
   18048:	cmn	r0, #1
   1804c:	beq	18070 <__assert_fail@plt+0x7208>
   18050:	b	18054 <__assert_fail@plt+0x71ec>
   18054:	ldr	r0, [fp, #-8]
   18058:	bl	180b8 <__assert_fail@plt+0x7250>
   1805c:	cmp	r0, #0
   18060:	beq	18070 <__assert_fail@plt+0x7208>
   18064:	bl	10dc0 <__errno_location@plt>
   18068:	ldr	r0, [r0]
   1806c:	str	r0, [fp, #-12]
   18070:	ldr	r0, [fp, #-8]
   18074:	bl	10df0 <fclose@plt>
   18078:	str	r0, [sp, #12]
   1807c:	ldr	r0, [fp, #-12]
   18080:	cmp	r0, #0
   18084:	beq	180a4 <__assert_fail@plt+0x723c>
   18088:	ldr	r0, [fp, #-12]
   1808c:	str	r0, [sp, #8]
   18090:	bl	10dc0 <__errno_location@plt>
   18094:	ldr	lr, [sp, #8]
   18098:	str	lr, [r0]
   1809c:	mvn	r0, #0
   180a0:	str	r0, [sp, #12]
   180a4:	ldr	r0, [sp, #12]
   180a8:	str	r0, [fp, #-4]
   180ac:	ldr	r0, [fp, #-4]
   180b0:	mov	sp, fp
   180b4:	pop	{fp, pc}
   180b8:	push	{fp, lr}
   180bc:	mov	fp, sp
   180c0:	sub	sp, sp, #8
   180c4:	str	r0, [sp]
   180c8:	ldr	r0, [sp]
   180cc:	movw	r1, #0
   180d0:	cmp	r0, r1
   180d4:	beq	180e8 <__assert_fail@plt+0x7280>
   180d8:	ldr	r0, [sp]
   180dc:	bl	10d6c <__freading@plt>
   180e0:	cmp	r0, #0
   180e4:	bne	180f8 <__assert_fail@plt+0x7290>
   180e8:	ldr	r0, [sp]
   180ec:	bl	10c94 <fflush@plt>
   180f0:	str	r0, [sp, #4]
   180f4:	b	1810c <__assert_fail@plt+0x72a4>
   180f8:	ldr	r0, [sp]
   180fc:	bl	18118 <__assert_fail@plt+0x72b0>
   18100:	ldr	r0, [sp]
   18104:	bl	10c94 <fflush@plt>
   18108:	str	r0, [sp, #4]
   1810c:	ldr	r0, [sp, #4]
   18110:	mov	sp, fp
   18114:	pop	{fp, pc}
   18118:	push	{fp, lr}
   1811c:	mov	fp, sp
   18120:	sub	sp, sp, #16
   18124:	str	r0, [fp, #-4]
   18128:	ldr	r0, [fp, #-4]
   1812c:	ldr	r0, [r0]
   18130:	and	r0, r0, #256	; 0x100
   18134:	cmp	r0, #0
   18138:	beq	18160 <__assert_fail@plt+0x72f8>
   1813c:	ldr	r0, [fp, #-4]
   18140:	mov	r1, sp
   18144:	mov	r2, #1
   18148:	str	r2, [r1]
   1814c:	mov	r1, #0
   18150:	mov	r2, r1
   18154:	mov	r3, r1
   18158:	bl	181a8 <__assert_fail@plt+0x7340>
   1815c:	str	r0, [sp, #8]
   18160:	mov	sp, fp
   18164:	pop	{fp, pc}
   18168:	push	{fp, lr}
   1816c:	mov	fp, sp
   18170:	sub	sp, sp, #16
   18174:	str	r0, [fp, #-4]
   18178:	bl	10dc0 <__errno_location@plt>
   1817c:	ldr	r0, [r0]
   18180:	str	r0, [sp, #8]
   18184:	ldr	r0, [fp, #-4]
   18188:	bl	10ca0 <free@plt>
   1818c:	ldr	r0, [sp, #8]
   18190:	str	r0, [sp, #4]
   18194:	bl	10dc0 <__errno_location@plt>
   18198:	ldr	lr, [sp, #4]
   1819c:	str	lr, [r0]
   181a0:	mov	sp, fp
   181a4:	pop	{fp, pc}
   181a8:	push	{fp, lr}
   181ac:	mov	fp, sp
   181b0:	sub	sp, sp, #32
   181b4:	ldr	r1, [fp, #8]
   181b8:	str	r0, [fp, #-8]
   181bc:	str	r3, [sp, #20]
   181c0:	str	r2, [sp, #16]
   181c4:	ldr	r0, [fp, #-8]
   181c8:	ldr	r0, [r0, #8]
   181cc:	ldr	r2, [fp, #-8]
   181d0:	ldr	r2, [r2, #4]
   181d4:	cmp	r0, r2
   181d8:	str	r1, [sp, #4]
   181dc:	bne	18288 <__assert_fail@plt+0x7420>
   181e0:	ldr	r0, [fp, #-8]
   181e4:	ldr	r0, [r0, #20]
   181e8:	ldr	r1, [fp, #-8]
   181ec:	ldr	r1, [r1, #16]
   181f0:	cmp	r0, r1
   181f4:	bne	18288 <__assert_fail@plt+0x7420>
   181f8:	ldr	r0, [fp, #-8]
   181fc:	ldr	r0, [r0, #36]	; 0x24
   18200:	movw	r1, #0
   18204:	cmp	r0, r1
   18208:	bne	18288 <__assert_fail@plt+0x7420>
   1820c:	ldr	r0, [fp, #-8]
   18210:	bl	10de4 <fileno@plt>
   18214:	ldr	r2, [sp, #16]
   18218:	ldr	r3, [sp, #20]
   1821c:	ldr	lr, [fp, #8]
   18220:	mov	r1, sp
   18224:	str	lr, [r1]
   18228:	bl	10d00 <lseek64@plt>
   1822c:	str	r1, [sp, #12]
   18230:	str	r0, [sp, #8]
   18234:	ldr	r0, [sp, #8]
   18238:	ldr	r1, [sp, #12]
   1823c:	and	r0, r0, r1
   18240:	cmn	r0, #1
   18244:	bne	18258 <__assert_fail@plt+0x73f0>
   18248:	b	1824c <__assert_fail@plt+0x73e4>
   1824c:	mvn	r0, #0
   18250:	str	r0, [fp, #-4]
   18254:	b	182a8 <__assert_fail@plt+0x7440>
   18258:	ldr	r0, [fp, #-8]
   1825c:	ldr	r1, [r0]
   18260:	bic	r1, r1, #16
   18264:	str	r1, [r0]
   18268:	ldr	r0, [sp, #8]
   1826c:	ldr	r1, [sp, #12]
   18270:	ldr	r2, [fp, #-8]
   18274:	str	r1, [r2, #84]	; 0x54
   18278:	str	r0, [r2, #80]	; 0x50
   1827c:	movw	r0, #0
   18280:	str	r0, [fp, #-4]
   18284:	b	182a8 <__assert_fail@plt+0x7440>
   18288:	ldr	r0, [fp, #-8]
   1828c:	ldr	r2, [sp, #16]
   18290:	ldr	r3, [sp, #20]
   18294:	ldr	r1, [fp, #8]
   18298:	mov	ip, sp
   1829c:	str	r1, [ip]
   182a0:	bl	10dfc <fseeko64@plt>
   182a4:	str	r0, [fp, #-4]
   182a8:	ldr	r0, [fp, #-4]
   182ac:	mov	sp, fp
   182b0:	pop	{fp, pc}
   182b4:	push	{fp, lr}
   182b8:	mov	fp, sp
   182bc:	bl	10dc0 <__errno_location@plt>
   182c0:	movw	lr, #12
   182c4:	str	lr, [r0]
   182c8:	movw	r0, #0
   182cc:	pop	{fp, pc}
   182d0:	push	{fp, lr}
   182d4:	mov	fp, sp
   182d8:	sub	sp, sp, #8
   182dc:	str	r0, [sp, #4]
   182e0:	ldr	r0, [sp, #4]
   182e4:	cmn	r0, #1
   182e8:	bhi	182fc <__assert_fail@plt+0x7494>
   182ec:	ldr	r0, [sp, #4]
   182f0:	bl	17d30 <__assert_fail@plt+0x6ec8>
   182f4:	str	r0, [sp]
   182f8:	b	18304 <__assert_fail@plt+0x749c>
   182fc:	bl	182b4 <__assert_fail@plt+0x744c>
   18300:	str	r0, [sp]
   18304:	ldr	r0, [sp]
   18308:	mov	sp, fp
   1830c:	pop	{fp, pc}
   18310:	push	{fp, lr}
   18314:	mov	fp, sp
   18318:	sub	sp, sp, #16
   1831c:	str	r0, [fp, #-4]
   18320:	str	r1, [sp, #8]
   18324:	ldr	r0, [sp, #8]
   18328:	cmn	r0, #1
   1832c:	bhi	18364 <__assert_fail@plt+0x74fc>
   18330:	ldr	r0, [fp, #-4]
   18334:	ldr	r1, [sp, #8]
   18338:	ldr	r2, [sp, #8]
   1833c:	cmp	r2, #0
   18340:	movw	r2, #0
   18344:	movne	r2, #1
   18348:	mvn	r3, #0
   1834c:	eor	r2, r2, r3
   18350:	and	r2, r2, #1
   18354:	orr	r1, r1, r2
   18358:	bl	17da0 <__assert_fail@plt+0x6f38>
   1835c:	str	r0, [sp, #4]
   18360:	b	1836c <__assert_fail@plt+0x7504>
   18364:	bl	182b4 <__assert_fail@plt+0x744c>
   18368:	str	r0, [sp, #4]
   1836c:	ldr	r0, [sp, #4]
   18370:	mov	sp, fp
   18374:	pop	{fp, pc}
   18378:	push	{fp, lr}
   1837c:	mov	fp, sp
   18380:	sub	sp, sp, #16
   18384:	str	r0, [sp, #8]
   18388:	str	r1, [sp, #4]
   1838c:	ldr	r0, [sp, #8]
   18390:	mvn	r1, #0
   18394:	cmp	r1, r0
   18398:	bcs	183bc <__assert_fail@plt+0x7554>
   1839c:	ldr	r0, [sp, #4]
   183a0:	cmp	r0, #0
   183a4:	beq	183b4 <__assert_fail@plt+0x754c>
   183a8:	bl	182b4 <__assert_fail@plt+0x744c>
   183ac:	str	r0, [fp, #-4]
   183b0:	b	183fc <__assert_fail@plt+0x7594>
   183b4:	movw	r0, #0
   183b8:	str	r0, [sp, #8]
   183bc:	ldr	r0, [sp, #4]
   183c0:	mvn	r1, #0
   183c4:	cmp	r1, r0
   183c8:	bcs	183ec <__assert_fail@plt+0x7584>
   183cc:	ldr	r0, [sp, #8]
   183d0:	cmp	r0, #0
   183d4:	beq	183e4 <__assert_fail@plt+0x757c>
   183d8:	bl	182b4 <__assert_fail@plt+0x744c>
   183dc:	str	r0, [fp, #-4]
   183e0:	b	183fc <__assert_fail@plt+0x7594>
   183e4:	movw	r0, #0
   183e8:	str	r0, [sp, #4]
   183ec:	ldr	r0, [sp, #8]
   183f0:	ldr	r1, [sp, #4]
   183f4:	bl	17c94 <__assert_fail@plt+0x6e2c>
   183f8:	str	r0, [fp, #-4]
   183fc:	ldr	r0, [fp, #-4]
   18400:	mov	sp, fp
   18404:	pop	{fp, pc}
   18408:	push	{fp, lr}
   1840c:	mov	fp, sp
   18410:	sub	sp, sp, #16
   18414:	str	r0, [fp, #-4]
   18418:	str	r1, [sp, #8]
   1841c:	str	r2, [sp, #4]
   18420:	ldr	r0, [sp, #8]
   18424:	cmp	r0, #0
   18428:	beq	18438 <__assert_fail@plt+0x75d0>
   1842c:	ldr	r0, [sp, #4]
   18430:	cmp	r0, #0
   18434:	bne	18444 <__assert_fail@plt+0x75dc>
   18438:	movw	r0, #1
   1843c:	str	r0, [sp, #4]
   18440:	str	r0, [sp, #8]
   18444:	ldr	r0, [sp, #8]
   18448:	cmn	r0, #1
   1844c:	bhi	18474 <__assert_fail@plt+0x760c>
   18450:	ldr	r0, [sp, #4]
   18454:	cmn	r0, #1
   18458:	bhi	18474 <__assert_fail@plt+0x760c>
   1845c:	ldr	r0, [fp, #-4]
   18460:	ldr	r1, [sp, #8]
   18464:	ldr	r2, [sp, #4]
   18468:	bl	18594 <__assert_fail@plt+0x772c>
   1846c:	str	r0, [sp]
   18470:	b	1847c <__assert_fail@plt+0x7614>
   18474:	bl	182b4 <__assert_fail@plt+0x744c>
   18478:	str	r0, [sp]
   1847c:	ldr	r0, [sp]
   18480:	mov	sp, fp
   18484:	pop	{fp, pc}
   18488:	push	{fp, lr}
   1848c:	mov	fp, sp
   18490:	sub	sp, sp, #8
   18494:	movw	r0, #14
   18498:	bl	10e20 <nl_langinfo@plt>
   1849c:	str	r0, [sp, #4]
   184a0:	ldr	r0, [sp, #4]
   184a4:	movw	lr, #0
   184a8:	cmp	r0, lr
   184ac:	bne	184bc <__assert_fail@plt+0x7654>
   184b0:	movw	r0, #42527	; 0xa61f
   184b4:	movt	r0, #1
   184b8:	str	r0, [sp, #4]
   184bc:	ldr	r0, [sp, #4]
   184c0:	ldrb	r0, [r0]
   184c4:	cmp	r0, #0
   184c8:	bne	184d8 <__assert_fail@plt+0x7670>
   184cc:	movw	r0, #44733	; 0xaebd
   184d0:	movt	r0, #1
   184d4:	str	r0, [sp, #4]
   184d8:	ldr	r0, [sp, #4]
   184dc:	mov	sp, fp
   184e0:	pop	{fp, pc}
   184e4:	push	{fp, lr}
   184e8:	mov	fp, sp
   184ec:	sub	sp, sp, #32
   184f0:	str	r0, [fp, #-8]
   184f4:	str	r1, [fp, #-12]
   184f8:	str	r2, [sp, #16]
   184fc:	str	r3, [sp, #12]
   18500:	ldr	r0, [fp, #-8]
   18504:	movw	r1, #0
   18508:	cmp	r0, r1
   1850c:	bne	18518 <__assert_fail@plt+0x76b0>
   18510:	add	r0, sp, #4
   18514:	str	r0, [fp, #-8]
   18518:	ldr	r0, [fp, #-8]
   1851c:	ldr	r1, [fp, #-12]
   18520:	ldr	r2, [sp, #16]
   18524:	ldr	r3, [sp, #12]
   18528:	bl	10d30 <mbrtowc@plt>
   1852c:	str	r0, [sp, #8]
   18530:	ldr	r0, [sp, #8]
   18534:	mvn	r1, #1
   18538:	cmp	r1, r0
   1853c:	bhi	18580 <__assert_fail@plt+0x7718>
   18540:	ldr	r0, [sp, #16]
   18544:	cmp	r0, #0
   18548:	beq	18580 <__assert_fail@plt+0x7718>
   1854c:	movw	r0, #0
   18550:	bl	19f64 <__assert_fail@plt+0x90fc>
   18554:	tst	r0, #1
   18558:	bne	18580 <__assert_fail@plt+0x7718>
   1855c:	ldr	r0, [fp, #-12]
   18560:	ldrb	r0, [r0]
   18564:	strb	r0, [sp, #3]
   18568:	ldrb	r0, [sp, #3]
   1856c:	ldr	r1, [fp, #-8]
   18570:	str	r0, [r1]
   18574:	movw	r0, #1
   18578:	str	r0, [fp, #-4]
   1857c:	b	18588 <__assert_fail@plt+0x7720>
   18580:	ldr	r0, [sp, #8]
   18584:	str	r0, [fp, #-4]
   18588:	ldr	r0, [fp, #-4]
   1858c:	mov	sp, fp
   18590:	pop	{fp, pc}
   18594:	push	{fp, lr}
   18598:	mov	fp, sp
   1859c:	sub	sp, sp, #176	; 0xb0
   185a0:	str	r0, [fp, #-8]
   185a4:	str	r1, [fp, #-12]
   185a8:	str	r2, [fp, #-16]
   185ac:	b	18964 <__assert_fail@plt+0x7afc>
   185b0:	b	18784 <__assert_fail@plt+0x791c>
   185b4:	ldr	r0, [fp, #-16]
   185b8:	cmp	r0, #0
   185bc:	bcs	186c0 <__assert_fail@plt+0x7858>
   185c0:	ldr	r0, [fp, #-12]
   185c4:	cmp	r0, #0
   185c8:	bcs	18650 <__assert_fail@plt+0x77e8>
   185cc:	b	185ec <__assert_fail@plt+0x7784>
   185d0:	ldr	r0, [fp, #-12]
   185d4:	ldr	r1, [fp, #-16]
   185d8:	movw	r2, #127	; 0x7f
   185dc:	udiv	r1, r2, r1
   185e0:	cmp	r0, r1
   185e4:	bcc	18754 <__assert_fail@plt+0x78ec>
   185e8:	b	1876c <__assert_fail@plt+0x7904>
   185ec:	b	18600 <__assert_fail@plt+0x7798>
   185f0:	ldr	r0, [fp, #-16]
   185f4:	cmp	r0, #1
   185f8:	bcc	18610 <__assert_fail@plt+0x77a8>
   185fc:	b	1861c <__assert_fail@plt+0x77b4>
   18600:	ldr	r0, [fp, #-16]
   18604:	movw	r1, #0
   18608:	cmp	r1, r0
   1860c:	bcs	1861c <__assert_fail@plt+0x77b4>
   18610:	movw	r0, #0
   18614:	str	r0, [fp, #-24]	; 0xffffffe8
   18618:	b	18634 <__assert_fail@plt+0x77cc>
   1861c:	ldr	r0, [fp, #-16]
   18620:	movw	r1, #0
   18624:	sub	r0, r1, r0
   18628:	movw	r1, #127	; 0x7f
   1862c:	udiv	r0, r1, r0
   18630:	str	r0, [fp, #-24]	; 0xffffffe8
   18634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18638:	ldr	r1, [fp, #-12]
   1863c:	mvn	r2, #0
   18640:	sub	r1, r2, r1
   18644:	cmp	r0, r1
   18648:	bls	18754 <__assert_fail@plt+0x78ec>
   1864c:	b	1876c <__assert_fail@plt+0x7904>
   18650:	ldr	r0, [fp, #-16]
   18654:	cmn	r0, #1
   18658:	bne	186a4 <__assert_fail@plt+0x783c>
   1865c:	b	1867c <__assert_fail@plt+0x7814>
   18660:	ldr	r0, [fp, #-12]
   18664:	mvn	r1, #127	; 0x7f
   18668:	add	r0, r0, r1
   1866c:	movw	r1, #0
   18670:	cmp	r1, r0
   18674:	bcc	18754 <__assert_fail@plt+0x78ec>
   18678:	b	1876c <__assert_fail@plt+0x7904>
   1867c:	ldr	r0, [fp, #-12]
   18680:	movw	r1, #0
   18684:	cmp	r1, r0
   18688:	bcs	1876c <__assert_fail@plt+0x7904>
   1868c:	ldr	r0, [fp, #-12]
   18690:	sub	r0, r0, #1
   18694:	movw	r1, #127	; 0x7f
   18698:	cmp	r1, r0
   1869c:	bcc	18754 <__assert_fail@plt+0x78ec>
   186a0:	b	1876c <__assert_fail@plt+0x7904>
   186a4:	ldr	r0, [fp, #-16]
   186a8:	mvn	r1, #127	; 0x7f
   186ac:	udiv	r0, r1, r0
   186b0:	ldr	r1, [fp, #-12]
   186b4:	cmp	r0, r1
   186b8:	bcc	18754 <__assert_fail@plt+0x78ec>
   186bc:	b	1876c <__assert_fail@plt+0x7904>
   186c0:	ldr	r0, [fp, #-16]
   186c4:	cmp	r0, #0
   186c8:	bne	186d0 <__assert_fail@plt+0x7868>
   186cc:	b	1876c <__assert_fail@plt+0x7904>
   186d0:	ldr	r0, [fp, #-12]
   186d4:	cmp	r0, #0
   186d8:	bcs	1873c <__assert_fail@plt+0x78d4>
   186dc:	ldr	r0, [fp, #-12]
   186e0:	cmn	r0, #1
   186e4:	bne	18720 <__assert_fail@plt+0x78b8>
   186e8:	b	18708 <__assert_fail@plt+0x78a0>
   186ec:	ldr	r0, [fp, #-16]
   186f0:	mvn	r1, #127	; 0x7f
   186f4:	add	r0, r0, r1
   186f8:	movw	r1, #0
   186fc:	cmp	r1, r0
   18700:	bcc	18754 <__assert_fail@plt+0x78ec>
   18704:	b	1876c <__assert_fail@plt+0x7904>
   18708:	ldr	r0, [fp, #-16]
   1870c:	sub	r0, r0, #1
   18710:	movw	r1, #127	; 0x7f
   18714:	cmp	r1, r0
   18718:	bcc	18754 <__assert_fail@plt+0x78ec>
   1871c:	b	1876c <__assert_fail@plt+0x7904>
   18720:	ldr	r0, [fp, #-12]
   18724:	mvn	r1, #127	; 0x7f
   18728:	udiv	r0, r1, r0
   1872c:	ldr	r1, [fp, #-16]
   18730:	cmp	r0, r1
   18734:	bcc	18754 <__assert_fail@plt+0x78ec>
   18738:	b	1876c <__assert_fail@plt+0x7904>
   1873c:	ldr	r0, [fp, #-16]
   18740:	movw	r1, #127	; 0x7f
   18744:	udiv	r0, r1, r0
   18748:	ldr	r1, [fp, #-12]
   1874c:	cmp	r0, r1
   18750:	bcs	1876c <__assert_fail@plt+0x7904>
   18754:	ldr	r0, [fp, #-12]
   18758:	ldr	r1, [fp, #-16]
   1875c:	mul	r0, r0, r1
   18760:	sxtb	r0, r0
   18764:	str	r0, [fp, #-20]	; 0xffffffec
   18768:	b	198e4 <__assert_fail@plt+0x8a7c>
   1876c:	ldr	r0, [fp, #-12]
   18770:	ldr	r1, [fp, #-16]
   18774:	mul	r0, r0, r1
   18778:	sxtb	r0, r0
   1877c:	str	r0, [fp, #-20]	; 0xffffffec
   18780:	b	198fc <__assert_fail@plt+0x8a94>
   18784:	ldr	r0, [fp, #-16]
   18788:	cmp	r0, #0
   1878c:	bcs	18898 <__assert_fail@plt+0x7a30>
   18790:	ldr	r0, [fp, #-12]
   18794:	cmp	r0, #0
   18798:	bcs	18820 <__assert_fail@plt+0x79b8>
   1879c:	b	187bc <__assert_fail@plt+0x7954>
   187a0:	ldr	r0, [fp, #-12]
   187a4:	ldr	r1, [fp, #-16]
   187a8:	movw	r2, #255	; 0xff
   187ac:	udiv	r1, r2, r1
   187b0:	cmp	r0, r1
   187b4:	bcc	18934 <__assert_fail@plt+0x7acc>
   187b8:	b	1894c <__assert_fail@plt+0x7ae4>
   187bc:	b	187d0 <__assert_fail@plt+0x7968>
   187c0:	ldr	r0, [fp, #-16]
   187c4:	cmp	r0, #1
   187c8:	bcc	187e0 <__assert_fail@plt+0x7978>
   187cc:	b	187ec <__assert_fail@plt+0x7984>
   187d0:	ldr	r0, [fp, #-16]
   187d4:	movw	r1, #0
   187d8:	cmp	r1, r0
   187dc:	bcs	187ec <__assert_fail@plt+0x7984>
   187e0:	movw	r0, #0
   187e4:	str	r0, [fp, #-28]	; 0xffffffe4
   187e8:	b	18804 <__assert_fail@plt+0x799c>
   187ec:	ldr	r0, [fp, #-16]
   187f0:	movw	r1, #0
   187f4:	sub	r0, r1, r0
   187f8:	movw	r1, #255	; 0xff
   187fc:	udiv	r0, r1, r0
   18800:	str	r0, [fp, #-28]	; 0xffffffe4
   18804:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18808:	ldr	r1, [fp, #-12]
   1880c:	mvn	r2, #0
   18810:	sub	r1, r2, r1
   18814:	cmp	r0, r1
   18818:	bls	18934 <__assert_fail@plt+0x7acc>
   1881c:	b	1894c <__assert_fail@plt+0x7ae4>
   18820:	b	18828 <__assert_fail@plt+0x79c0>
   18824:	b	1882c <__assert_fail@plt+0x79c4>
   18828:	b	1887c <__assert_fail@plt+0x7a14>
   1882c:	ldr	r0, [fp, #-16]
   18830:	cmn	r0, #1
   18834:	bne	1887c <__assert_fail@plt+0x7a14>
   18838:	b	18854 <__assert_fail@plt+0x79ec>
   1883c:	ldr	r0, [fp, #-12]
   18840:	add	r0, r0, #0
   18844:	movw	r1, #0
   18848:	cmp	r1, r0
   1884c:	bcc	18934 <__assert_fail@plt+0x7acc>
   18850:	b	1894c <__assert_fail@plt+0x7ae4>
   18854:	ldr	r0, [fp, #-12]
   18858:	movw	r1, #0
   1885c:	cmp	r1, r0
   18860:	bcs	1894c <__assert_fail@plt+0x7ae4>
   18864:	ldr	r0, [fp, #-12]
   18868:	sub	r0, r0, #1
   1886c:	mvn	r1, #0
   18870:	cmp	r1, r0
   18874:	bcc	18934 <__assert_fail@plt+0x7acc>
   18878:	b	1894c <__assert_fail@plt+0x7ae4>
   1887c:	ldr	r0, [fp, #-16]
   18880:	movw	r1, #0
   18884:	udiv	r0, r1, r0
   18888:	ldr	r1, [fp, #-12]
   1888c:	cmp	r0, r1
   18890:	bcc	18934 <__assert_fail@plt+0x7acc>
   18894:	b	1894c <__assert_fail@plt+0x7ae4>
   18898:	ldr	r0, [fp, #-16]
   1889c:	cmp	r0, #0
   188a0:	bne	188a8 <__assert_fail@plt+0x7a40>
   188a4:	b	1894c <__assert_fail@plt+0x7ae4>
   188a8:	ldr	r0, [fp, #-12]
   188ac:	cmp	r0, #0
   188b0:	bcs	1891c <__assert_fail@plt+0x7ab4>
   188b4:	b	188bc <__assert_fail@plt+0x7a54>
   188b8:	b	188c0 <__assert_fail@plt+0x7a58>
   188bc:	b	18900 <__assert_fail@plt+0x7a98>
   188c0:	ldr	r0, [fp, #-12]
   188c4:	cmn	r0, #1
   188c8:	bne	18900 <__assert_fail@plt+0x7a98>
   188cc:	b	188e8 <__assert_fail@plt+0x7a80>
   188d0:	ldr	r0, [fp, #-16]
   188d4:	add	r0, r0, #0
   188d8:	movw	r1, #0
   188dc:	cmp	r1, r0
   188e0:	bcc	18934 <__assert_fail@plt+0x7acc>
   188e4:	b	1894c <__assert_fail@plt+0x7ae4>
   188e8:	ldr	r0, [fp, #-16]
   188ec:	sub	r0, r0, #1
   188f0:	mvn	r1, #0
   188f4:	cmp	r1, r0
   188f8:	bcc	18934 <__assert_fail@plt+0x7acc>
   188fc:	b	1894c <__assert_fail@plt+0x7ae4>
   18900:	ldr	r0, [fp, #-12]
   18904:	movw	r1, #0
   18908:	udiv	r0, r1, r0
   1890c:	ldr	r1, [fp, #-16]
   18910:	cmp	r0, r1
   18914:	bcc	18934 <__assert_fail@plt+0x7acc>
   18918:	b	1894c <__assert_fail@plt+0x7ae4>
   1891c:	ldr	r0, [fp, #-16]
   18920:	movw	r1, #255	; 0xff
   18924:	udiv	r0, r1, r0
   18928:	ldr	r1, [fp, #-12]
   1892c:	cmp	r0, r1
   18930:	bcs	1894c <__assert_fail@plt+0x7ae4>
   18934:	ldr	r0, [fp, #-12]
   18938:	ldr	r1, [fp, #-16]
   1893c:	mul	r0, r0, r1
   18940:	and	r0, r0, #255	; 0xff
   18944:	str	r0, [fp, #-20]	; 0xffffffec
   18948:	b	198e4 <__assert_fail@plt+0x8a7c>
   1894c:	ldr	r0, [fp, #-12]
   18950:	ldr	r1, [fp, #-16]
   18954:	mul	r0, r0, r1
   18958:	and	r0, r0, #255	; 0xff
   1895c:	str	r0, [fp, #-20]	; 0xffffffec
   18960:	b	198fc <__assert_fail@plt+0x8a94>
   18964:	b	18d1c <__assert_fail@plt+0x7eb4>
   18968:	b	18b3c <__assert_fail@plt+0x7cd4>
   1896c:	ldr	r0, [fp, #-16]
   18970:	cmp	r0, #0
   18974:	bcs	18a78 <__assert_fail@plt+0x7c10>
   18978:	ldr	r0, [fp, #-12]
   1897c:	cmp	r0, #0
   18980:	bcs	18a08 <__assert_fail@plt+0x7ba0>
   18984:	b	189a4 <__assert_fail@plt+0x7b3c>
   18988:	ldr	r0, [fp, #-12]
   1898c:	ldr	r1, [fp, #-16]
   18990:	movw	r2, #32767	; 0x7fff
   18994:	udiv	r1, r2, r1
   18998:	cmp	r0, r1
   1899c:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   189a0:	b	18b24 <__assert_fail@plt+0x7cbc>
   189a4:	b	189b8 <__assert_fail@plt+0x7b50>
   189a8:	ldr	r0, [fp, #-16]
   189ac:	cmp	r0, #1
   189b0:	bcc	189c8 <__assert_fail@plt+0x7b60>
   189b4:	b	189d4 <__assert_fail@plt+0x7b6c>
   189b8:	ldr	r0, [fp, #-16]
   189bc:	movw	r1, #0
   189c0:	cmp	r1, r0
   189c4:	bcs	189d4 <__assert_fail@plt+0x7b6c>
   189c8:	movw	r0, #0
   189cc:	str	r0, [fp, #-32]	; 0xffffffe0
   189d0:	b	189ec <__assert_fail@plt+0x7b84>
   189d4:	ldr	r0, [fp, #-16]
   189d8:	movw	r1, #0
   189dc:	sub	r0, r1, r0
   189e0:	movw	r1, #32767	; 0x7fff
   189e4:	udiv	r0, r1, r0
   189e8:	str	r0, [fp, #-32]	; 0xffffffe0
   189ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189f0:	ldr	r1, [fp, #-12]
   189f4:	mvn	r2, #0
   189f8:	sub	r1, r2, r1
   189fc:	cmp	r0, r1
   18a00:	bls	18b0c <__assert_fail@plt+0x7ca4>
   18a04:	b	18b24 <__assert_fail@plt+0x7cbc>
   18a08:	ldr	r0, [fp, #-16]
   18a0c:	cmn	r0, #1
   18a10:	bne	18a5c <__assert_fail@plt+0x7bf4>
   18a14:	b	18a34 <__assert_fail@plt+0x7bcc>
   18a18:	ldr	r0, [pc, #3840]	; 19920 <__assert_fail@plt+0x8ab8>
   18a1c:	ldr	r1, [fp, #-12]
   18a20:	add	r0, r1, r0
   18a24:	movw	r1, #0
   18a28:	cmp	r1, r0
   18a2c:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18a30:	b	18b24 <__assert_fail@plt+0x7cbc>
   18a34:	ldr	r0, [fp, #-12]
   18a38:	movw	r1, #0
   18a3c:	cmp	r1, r0
   18a40:	bcs	18b24 <__assert_fail@plt+0x7cbc>
   18a44:	ldr	r0, [fp, #-12]
   18a48:	sub	r0, r0, #1
   18a4c:	movw	r1, #32767	; 0x7fff
   18a50:	cmp	r1, r0
   18a54:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18a58:	b	18b24 <__assert_fail@plt+0x7cbc>
   18a5c:	ldr	r0, [pc, #3772]	; 19920 <__assert_fail@plt+0x8ab8>
   18a60:	ldr	r1, [fp, #-16]
   18a64:	udiv	r0, r0, r1
   18a68:	ldr	r1, [fp, #-12]
   18a6c:	cmp	r0, r1
   18a70:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18a74:	b	18b24 <__assert_fail@plt+0x7cbc>
   18a78:	ldr	r0, [fp, #-16]
   18a7c:	cmp	r0, #0
   18a80:	bne	18a88 <__assert_fail@plt+0x7c20>
   18a84:	b	18b24 <__assert_fail@plt+0x7cbc>
   18a88:	ldr	r0, [fp, #-12]
   18a8c:	cmp	r0, #0
   18a90:	bcs	18af4 <__assert_fail@plt+0x7c8c>
   18a94:	ldr	r0, [fp, #-12]
   18a98:	cmn	r0, #1
   18a9c:	bne	18ad8 <__assert_fail@plt+0x7c70>
   18aa0:	b	18ac0 <__assert_fail@plt+0x7c58>
   18aa4:	ldr	r0, [pc, #3700]	; 19920 <__assert_fail@plt+0x8ab8>
   18aa8:	ldr	r1, [fp, #-16]
   18aac:	add	r0, r1, r0
   18ab0:	movw	r1, #0
   18ab4:	cmp	r1, r0
   18ab8:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18abc:	b	18b24 <__assert_fail@plt+0x7cbc>
   18ac0:	ldr	r0, [fp, #-16]
   18ac4:	sub	r0, r0, #1
   18ac8:	movw	r1, #32767	; 0x7fff
   18acc:	cmp	r1, r0
   18ad0:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18ad4:	b	18b24 <__assert_fail@plt+0x7cbc>
   18ad8:	ldr	r0, [pc, #3648]	; 19920 <__assert_fail@plt+0x8ab8>
   18adc:	ldr	r1, [fp, #-12]
   18ae0:	udiv	r0, r0, r1
   18ae4:	ldr	r1, [fp, #-16]
   18ae8:	cmp	r0, r1
   18aec:	bcc	18b0c <__assert_fail@plt+0x7ca4>
   18af0:	b	18b24 <__assert_fail@plt+0x7cbc>
   18af4:	ldr	r0, [fp, #-16]
   18af8:	movw	r1, #32767	; 0x7fff
   18afc:	udiv	r0, r1, r0
   18b00:	ldr	r1, [fp, #-12]
   18b04:	cmp	r0, r1
   18b08:	bcs	18b24 <__assert_fail@plt+0x7cbc>
   18b0c:	ldr	r0, [fp, #-12]
   18b10:	ldr	r1, [fp, #-16]
   18b14:	mul	r0, r0, r1
   18b18:	sxth	r0, r0
   18b1c:	str	r0, [fp, #-20]	; 0xffffffec
   18b20:	b	198e4 <__assert_fail@plt+0x8a7c>
   18b24:	ldr	r0, [fp, #-12]
   18b28:	ldr	r1, [fp, #-16]
   18b2c:	mul	r0, r0, r1
   18b30:	sxth	r0, r0
   18b34:	str	r0, [fp, #-20]	; 0xffffffec
   18b38:	b	198fc <__assert_fail@plt+0x8a94>
   18b3c:	ldr	r0, [fp, #-16]
   18b40:	cmp	r0, #0
   18b44:	bcs	18c50 <__assert_fail@plt+0x7de8>
   18b48:	ldr	r0, [fp, #-12]
   18b4c:	cmp	r0, #0
   18b50:	bcs	18bd8 <__assert_fail@plt+0x7d70>
   18b54:	b	18b74 <__assert_fail@plt+0x7d0c>
   18b58:	ldr	r0, [fp, #-12]
   18b5c:	ldr	r1, [fp, #-16]
   18b60:	movw	r2, #65535	; 0xffff
   18b64:	udiv	r1, r2, r1
   18b68:	cmp	r0, r1
   18b6c:	bcc	18cec <__assert_fail@plt+0x7e84>
   18b70:	b	18d04 <__assert_fail@plt+0x7e9c>
   18b74:	b	18b88 <__assert_fail@plt+0x7d20>
   18b78:	ldr	r0, [fp, #-16]
   18b7c:	cmp	r0, #1
   18b80:	bcc	18b98 <__assert_fail@plt+0x7d30>
   18b84:	b	18ba4 <__assert_fail@plt+0x7d3c>
   18b88:	ldr	r0, [fp, #-16]
   18b8c:	movw	r1, #0
   18b90:	cmp	r1, r0
   18b94:	bcs	18ba4 <__assert_fail@plt+0x7d3c>
   18b98:	movw	r0, #0
   18b9c:	str	r0, [fp, #-36]	; 0xffffffdc
   18ba0:	b	18bbc <__assert_fail@plt+0x7d54>
   18ba4:	ldr	r0, [fp, #-16]
   18ba8:	movw	r1, #0
   18bac:	sub	r0, r1, r0
   18bb0:	movw	r1, #65535	; 0xffff
   18bb4:	udiv	r0, r1, r0
   18bb8:	str	r0, [fp, #-36]	; 0xffffffdc
   18bbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18bc0:	ldr	r1, [fp, #-12]
   18bc4:	mvn	r2, #0
   18bc8:	sub	r1, r2, r1
   18bcc:	cmp	r0, r1
   18bd0:	bls	18cec <__assert_fail@plt+0x7e84>
   18bd4:	b	18d04 <__assert_fail@plt+0x7e9c>
   18bd8:	b	18be0 <__assert_fail@plt+0x7d78>
   18bdc:	b	18be4 <__assert_fail@plt+0x7d7c>
   18be0:	b	18c34 <__assert_fail@plt+0x7dcc>
   18be4:	ldr	r0, [fp, #-16]
   18be8:	cmn	r0, #1
   18bec:	bne	18c34 <__assert_fail@plt+0x7dcc>
   18bf0:	b	18c0c <__assert_fail@plt+0x7da4>
   18bf4:	ldr	r0, [fp, #-12]
   18bf8:	add	r0, r0, #0
   18bfc:	movw	r1, #0
   18c00:	cmp	r1, r0
   18c04:	bcc	18cec <__assert_fail@plt+0x7e84>
   18c08:	b	18d04 <__assert_fail@plt+0x7e9c>
   18c0c:	ldr	r0, [fp, #-12]
   18c10:	movw	r1, #0
   18c14:	cmp	r1, r0
   18c18:	bcs	18d04 <__assert_fail@plt+0x7e9c>
   18c1c:	ldr	r0, [fp, #-12]
   18c20:	sub	r0, r0, #1
   18c24:	mvn	r1, #0
   18c28:	cmp	r1, r0
   18c2c:	bcc	18cec <__assert_fail@plt+0x7e84>
   18c30:	b	18d04 <__assert_fail@plt+0x7e9c>
   18c34:	ldr	r0, [fp, #-16]
   18c38:	movw	r1, #0
   18c3c:	udiv	r0, r1, r0
   18c40:	ldr	r1, [fp, #-12]
   18c44:	cmp	r0, r1
   18c48:	bcc	18cec <__assert_fail@plt+0x7e84>
   18c4c:	b	18d04 <__assert_fail@plt+0x7e9c>
   18c50:	ldr	r0, [fp, #-16]
   18c54:	cmp	r0, #0
   18c58:	bne	18c60 <__assert_fail@plt+0x7df8>
   18c5c:	b	18d04 <__assert_fail@plt+0x7e9c>
   18c60:	ldr	r0, [fp, #-12]
   18c64:	cmp	r0, #0
   18c68:	bcs	18cd4 <__assert_fail@plt+0x7e6c>
   18c6c:	b	18c74 <__assert_fail@plt+0x7e0c>
   18c70:	b	18c78 <__assert_fail@plt+0x7e10>
   18c74:	b	18cb8 <__assert_fail@plt+0x7e50>
   18c78:	ldr	r0, [fp, #-12]
   18c7c:	cmn	r0, #1
   18c80:	bne	18cb8 <__assert_fail@plt+0x7e50>
   18c84:	b	18ca0 <__assert_fail@plt+0x7e38>
   18c88:	ldr	r0, [fp, #-16]
   18c8c:	add	r0, r0, #0
   18c90:	movw	r1, #0
   18c94:	cmp	r1, r0
   18c98:	bcc	18cec <__assert_fail@plt+0x7e84>
   18c9c:	b	18d04 <__assert_fail@plt+0x7e9c>
   18ca0:	ldr	r0, [fp, #-16]
   18ca4:	sub	r0, r0, #1
   18ca8:	mvn	r1, #0
   18cac:	cmp	r1, r0
   18cb0:	bcc	18cec <__assert_fail@plt+0x7e84>
   18cb4:	b	18d04 <__assert_fail@plt+0x7e9c>
   18cb8:	ldr	r0, [fp, #-12]
   18cbc:	movw	r1, #0
   18cc0:	udiv	r0, r1, r0
   18cc4:	ldr	r1, [fp, #-16]
   18cc8:	cmp	r0, r1
   18ccc:	bcc	18cec <__assert_fail@plt+0x7e84>
   18cd0:	b	18d04 <__assert_fail@plt+0x7e9c>
   18cd4:	ldr	r0, [fp, #-16]
   18cd8:	movw	r1, #65535	; 0xffff
   18cdc:	udiv	r0, r1, r0
   18ce0:	ldr	r1, [fp, #-12]
   18ce4:	cmp	r0, r1
   18ce8:	bcs	18d04 <__assert_fail@plt+0x7e9c>
   18cec:	ldr	r0, [fp, #-12]
   18cf0:	ldr	r1, [fp, #-16]
   18cf4:	mul	r0, r0, r1
   18cf8:	uxth	r0, r0
   18cfc:	str	r0, [fp, #-20]	; 0xffffffec
   18d00:	b	198e4 <__assert_fail@plt+0x8a7c>
   18d04:	ldr	r0, [fp, #-12]
   18d08:	ldr	r1, [fp, #-16]
   18d0c:	mul	r0, r0, r1
   18d10:	uxth	r0, r0
   18d14:	str	r0, [fp, #-20]	; 0xffffffec
   18d18:	b	198fc <__assert_fail@plt+0x8a94>
   18d1c:	b	18d20 <__assert_fail@plt+0x7eb8>
   18d20:	b	18ee4 <__assert_fail@plt+0x807c>
   18d24:	ldr	r0, [fp, #-16]
   18d28:	cmp	r0, #0
   18d2c:	bcs	18e2c <__assert_fail@plt+0x7fc4>
   18d30:	ldr	r0, [fp, #-12]
   18d34:	cmp	r0, #0
   18d38:	bcs	18dc0 <__assert_fail@plt+0x7f58>
   18d3c:	b	18d5c <__assert_fail@plt+0x7ef4>
   18d40:	ldr	r0, [pc, #3024]	; 19918 <__assert_fail@plt+0x8ab0>
   18d44:	ldr	r1, [fp, #-12]
   18d48:	ldr	r2, [fp, #-16]
   18d4c:	udiv	r0, r0, r2
   18d50:	cmp	r1, r0
   18d54:	bcc	18ebc <__assert_fail@plt+0x8054>
   18d58:	b	18ed0 <__assert_fail@plt+0x8068>
   18d5c:	b	18d70 <__assert_fail@plt+0x7f08>
   18d60:	ldr	r0, [fp, #-16]
   18d64:	cmp	r0, #1
   18d68:	bcc	18d80 <__assert_fail@plt+0x7f18>
   18d6c:	b	18d8c <__assert_fail@plt+0x7f24>
   18d70:	ldr	r0, [fp, #-16]
   18d74:	movw	r1, #0
   18d78:	cmp	r1, r0
   18d7c:	bcs	18d8c <__assert_fail@plt+0x7f24>
   18d80:	movw	r0, #0
   18d84:	str	r0, [fp, #-40]	; 0xffffffd8
   18d88:	b	18da4 <__assert_fail@plt+0x7f3c>
   18d8c:	ldr	r0, [pc, #2948]	; 19918 <__assert_fail@plt+0x8ab0>
   18d90:	ldr	r1, [fp, #-16]
   18d94:	movw	r2, #0
   18d98:	sub	r1, r2, r1
   18d9c:	udiv	r0, r0, r1
   18da0:	str	r0, [fp, #-40]	; 0xffffffd8
   18da4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18da8:	ldr	r1, [fp, #-12]
   18dac:	mvn	r2, #0
   18db0:	sub	r1, r2, r1
   18db4:	cmp	r0, r1
   18db8:	bls	18ebc <__assert_fail@plt+0x8054>
   18dbc:	b	18ed0 <__assert_fail@plt+0x8068>
   18dc0:	ldr	r0, [fp, #-16]
   18dc4:	cmn	r0, #1
   18dc8:	bne	18e10 <__assert_fail@plt+0x7fa8>
   18dcc:	b	18de8 <__assert_fail@plt+0x7f80>
   18dd0:	ldr	r0, [fp, #-12]
   18dd4:	add	r0, r0, #-2147483648	; 0x80000000
   18dd8:	movw	r1, #0
   18ddc:	cmp	r1, r0
   18de0:	bcc	18ebc <__assert_fail@plt+0x8054>
   18de4:	b	18ed0 <__assert_fail@plt+0x8068>
   18de8:	ldr	r0, [fp, #-12]
   18dec:	movw	r1, #0
   18df0:	cmp	r1, r0
   18df4:	bcs	18ed0 <__assert_fail@plt+0x8068>
   18df8:	ldr	r0, [pc, #2840]	; 19918 <__assert_fail@plt+0x8ab0>
   18dfc:	ldr	r1, [fp, #-12]
   18e00:	sub	r1, r1, #1
   18e04:	cmp	r0, r1
   18e08:	bcc	18ebc <__assert_fail@plt+0x8054>
   18e0c:	b	18ed0 <__assert_fail@plt+0x8068>
   18e10:	ldr	r0, [pc, #2820]	; 1991c <__assert_fail@plt+0x8ab4>
   18e14:	ldr	r1, [fp, #-16]
   18e18:	udiv	r0, r0, r1
   18e1c:	ldr	r1, [fp, #-12]
   18e20:	cmp	r0, r1
   18e24:	bcc	18ebc <__assert_fail@plt+0x8054>
   18e28:	b	18ed0 <__assert_fail@plt+0x8068>
   18e2c:	ldr	r0, [fp, #-16]
   18e30:	cmp	r0, #0
   18e34:	bne	18e3c <__assert_fail@plt+0x7fd4>
   18e38:	b	18ed0 <__assert_fail@plt+0x8068>
   18e3c:	ldr	r0, [fp, #-12]
   18e40:	cmp	r0, #0
   18e44:	bcs	18ea4 <__assert_fail@plt+0x803c>
   18e48:	ldr	r0, [fp, #-12]
   18e4c:	cmn	r0, #1
   18e50:	bne	18e88 <__assert_fail@plt+0x8020>
   18e54:	b	18e70 <__assert_fail@plt+0x8008>
   18e58:	ldr	r0, [fp, #-16]
   18e5c:	add	r0, r0, #-2147483648	; 0x80000000
   18e60:	movw	r1, #0
   18e64:	cmp	r1, r0
   18e68:	bcc	18ebc <__assert_fail@plt+0x8054>
   18e6c:	b	18ed0 <__assert_fail@plt+0x8068>
   18e70:	ldr	r0, [pc, #2720]	; 19918 <__assert_fail@plt+0x8ab0>
   18e74:	ldr	r1, [fp, #-16]
   18e78:	sub	r1, r1, #1
   18e7c:	cmp	r0, r1
   18e80:	bcc	18ebc <__assert_fail@plt+0x8054>
   18e84:	b	18ed0 <__assert_fail@plt+0x8068>
   18e88:	ldr	r0, [pc, #2700]	; 1991c <__assert_fail@plt+0x8ab4>
   18e8c:	ldr	r1, [fp, #-12]
   18e90:	udiv	r0, r0, r1
   18e94:	ldr	r1, [fp, #-16]
   18e98:	cmp	r0, r1
   18e9c:	bcc	18ebc <__assert_fail@plt+0x8054>
   18ea0:	b	18ed0 <__assert_fail@plt+0x8068>
   18ea4:	ldr	r0, [pc, #2668]	; 19918 <__assert_fail@plt+0x8ab0>
   18ea8:	ldr	r1, [fp, #-16]
   18eac:	udiv	r0, r0, r1
   18eb0:	ldr	r1, [fp, #-12]
   18eb4:	cmp	r0, r1
   18eb8:	bcs	18ed0 <__assert_fail@plt+0x8068>
   18ebc:	ldr	r0, [fp, #-12]
   18ec0:	ldr	r1, [fp, #-16]
   18ec4:	mul	r0, r0, r1
   18ec8:	str	r0, [fp, #-20]	; 0xffffffec
   18ecc:	b	198e4 <__assert_fail@plt+0x8a7c>
   18ed0:	ldr	r0, [fp, #-12]
   18ed4:	ldr	r1, [fp, #-16]
   18ed8:	mul	r0, r0, r1
   18edc:	str	r0, [fp, #-20]	; 0xffffffec
   18ee0:	b	198fc <__assert_fail@plt+0x8a94>
   18ee4:	ldr	r0, [fp, #-16]
   18ee8:	cmp	r0, #0
   18eec:	bcs	18ff8 <__assert_fail@plt+0x8190>
   18ef0:	ldr	r0, [fp, #-12]
   18ef4:	cmp	r0, #0
   18ef8:	bcs	18f80 <__assert_fail@plt+0x8118>
   18efc:	b	18f1c <__assert_fail@plt+0x80b4>
   18f00:	ldr	r0, [fp, #-12]
   18f04:	ldr	r1, [fp, #-16]
   18f08:	mvn	r2, #0
   18f0c:	udiv	r1, r2, r1
   18f10:	cmp	r0, r1
   18f14:	bcc	19094 <__assert_fail@plt+0x822c>
   18f18:	b	190a8 <__assert_fail@plt+0x8240>
   18f1c:	b	18f30 <__assert_fail@plt+0x80c8>
   18f20:	ldr	r0, [fp, #-16]
   18f24:	cmp	r0, #1
   18f28:	bcc	18f40 <__assert_fail@plt+0x80d8>
   18f2c:	b	18f4c <__assert_fail@plt+0x80e4>
   18f30:	ldr	r0, [fp, #-16]
   18f34:	movw	r1, #0
   18f38:	cmp	r1, r0
   18f3c:	bcs	18f4c <__assert_fail@plt+0x80e4>
   18f40:	movw	r0, #1
   18f44:	str	r0, [fp, #-44]	; 0xffffffd4
   18f48:	b	18f64 <__assert_fail@plt+0x80fc>
   18f4c:	ldr	r0, [fp, #-16]
   18f50:	movw	r1, #0
   18f54:	sub	r0, r1, r0
   18f58:	mvn	r1, #0
   18f5c:	udiv	r0, r1, r0
   18f60:	str	r0, [fp, #-44]	; 0xffffffd4
   18f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f68:	ldr	r1, [fp, #-12]
   18f6c:	mvn	r2, #0
   18f70:	sub	r1, r2, r1
   18f74:	cmp	r0, r1
   18f78:	bls	19094 <__assert_fail@plt+0x822c>
   18f7c:	b	190a8 <__assert_fail@plt+0x8240>
   18f80:	b	18f88 <__assert_fail@plt+0x8120>
   18f84:	b	18f8c <__assert_fail@plt+0x8124>
   18f88:	b	18fdc <__assert_fail@plt+0x8174>
   18f8c:	ldr	r0, [fp, #-16]
   18f90:	cmn	r0, #1
   18f94:	bne	18fdc <__assert_fail@plt+0x8174>
   18f98:	b	18fb4 <__assert_fail@plt+0x814c>
   18f9c:	ldr	r0, [fp, #-12]
   18fa0:	add	r0, r0, #0
   18fa4:	movw	r1, #0
   18fa8:	cmp	r1, r0
   18fac:	bcc	19094 <__assert_fail@plt+0x822c>
   18fb0:	b	190a8 <__assert_fail@plt+0x8240>
   18fb4:	ldr	r0, [fp, #-12]
   18fb8:	movw	r1, #0
   18fbc:	cmp	r1, r0
   18fc0:	bcs	190a8 <__assert_fail@plt+0x8240>
   18fc4:	ldr	r0, [fp, #-12]
   18fc8:	sub	r0, r0, #1
   18fcc:	mvn	r1, #0
   18fd0:	cmp	r1, r0
   18fd4:	bcc	19094 <__assert_fail@plt+0x822c>
   18fd8:	b	190a8 <__assert_fail@plt+0x8240>
   18fdc:	ldr	r0, [fp, #-16]
   18fe0:	movw	r1, #0
   18fe4:	udiv	r0, r1, r0
   18fe8:	ldr	r1, [fp, #-12]
   18fec:	cmp	r0, r1
   18ff0:	bcc	19094 <__assert_fail@plt+0x822c>
   18ff4:	b	190a8 <__assert_fail@plt+0x8240>
   18ff8:	ldr	r0, [fp, #-16]
   18ffc:	cmp	r0, #0
   19000:	bne	19008 <__assert_fail@plt+0x81a0>
   19004:	b	190a8 <__assert_fail@plt+0x8240>
   19008:	ldr	r0, [fp, #-12]
   1900c:	cmp	r0, #0
   19010:	bcs	1907c <__assert_fail@plt+0x8214>
   19014:	b	1901c <__assert_fail@plt+0x81b4>
   19018:	b	19020 <__assert_fail@plt+0x81b8>
   1901c:	b	19060 <__assert_fail@plt+0x81f8>
   19020:	ldr	r0, [fp, #-12]
   19024:	cmn	r0, #1
   19028:	bne	19060 <__assert_fail@plt+0x81f8>
   1902c:	b	19048 <__assert_fail@plt+0x81e0>
   19030:	ldr	r0, [fp, #-16]
   19034:	add	r0, r0, #0
   19038:	movw	r1, #0
   1903c:	cmp	r1, r0
   19040:	bcc	19094 <__assert_fail@plt+0x822c>
   19044:	b	190a8 <__assert_fail@plt+0x8240>
   19048:	ldr	r0, [fp, #-16]
   1904c:	sub	r0, r0, #1
   19050:	mvn	r1, #0
   19054:	cmp	r1, r0
   19058:	bcc	19094 <__assert_fail@plt+0x822c>
   1905c:	b	190a8 <__assert_fail@plt+0x8240>
   19060:	ldr	r0, [fp, #-12]
   19064:	movw	r1, #0
   19068:	udiv	r0, r1, r0
   1906c:	ldr	r1, [fp, #-16]
   19070:	cmp	r0, r1
   19074:	bcc	19094 <__assert_fail@plt+0x822c>
   19078:	b	190a8 <__assert_fail@plt+0x8240>
   1907c:	ldr	r0, [fp, #-16]
   19080:	mvn	r1, #0
   19084:	udiv	r0, r1, r0
   19088:	ldr	r1, [fp, #-12]
   1908c:	cmp	r0, r1
   19090:	bcs	190a8 <__assert_fail@plt+0x8240>
   19094:	ldr	r0, [fp, #-12]
   19098:	ldr	r1, [fp, #-16]
   1909c:	mul	r0, r0, r1
   190a0:	str	r0, [fp, #-20]	; 0xffffffec
   190a4:	b	198e4 <__assert_fail@plt+0x8a7c>
   190a8:	ldr	r0, [fp, #-12]
   190ac:	ldr	r1, [fp, #-16]
   190b0:	mul	r0, r0, r1
   190b4:	str	r0, [fp, #-20]	; 0xffffffec
   190b8:	b	198fc <__assert_fail@plt+0x8a94>
   190bc:	b	190c0 <__assert_fail@plt+0x8258>
   190c0:	b	19284 <__assert_fail@plt+0x841c>
   190c4:	ldr	r0, [fp, #-16]
   190c8:	cmp	r0, #0
   190cc:	bcs	191cc <__assert_fail@plt+0x8364>
   190d0:	ldr	r0, [fp, #-12]
   190d4:	cmp	r0, #0
   190d8:	bcs	19160 <__assert_fail@plt+0x82f8>
   190dc:	b	190fc <__assert_fail@plt+0x8294>
   190e0:	ldr	r0, [pc, #2096]	; 19918 <__assert_fail@plt+0x8ab0>
   190e4:	ldr	r1, [fp, #-12]
   190e8:	ldr	r2, [fp, #-16]
   190ec:	udiv	r0, r0, r2
   190f0:	cmp	r1, r0
   190f4:	bcc	1925c <__assert_fail@plt+0x83f4>
   190f8:	b	19270 <__assert_fail@plt+0x8408>
   190fc:	b	19110 <__assert_fail@plt+0x82a8>
   19100:	ldr	r0, [fp, #-16]
   19104:	cmp	r0, #1
   19108:	bcc	19120 <__assert_fail@plt+0x82b8>
   1910c:	b	1912c <__assert_fail@plt+0x82c4>
   19110:	ldr	r0, [fp, #-16]
   19114:	movw	r1, #0
   19118:	cmp	r1, r0
   1911c:	bcs	1912c <__assert_fail@plt+0x82c4>
   19120:	movw	r0, #0
   19124:	str	r0, [fp, #-48]	; 0xffffffd0
   19128:	b	19144 <__assert_fail@plt+0x82dc>
   1912c:	ldr	r0, [pc, #2020]	; 19918 <__assert_fail@plt+0x8ab0>
   19130:	ldr	r1, [fp, #-16]
   19134:	movw	r2, #0
   19138:	sub	r1, r2, r1
   1913c:	udiv	r0, r0, r1
   19140:	str	r0, [fp, #-48]	; 0xffffffd0
   19144:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19148:	ldr	r1, [fp, #-12]
   1914c:	mvn	r2, #0
   19150:	sub	r1, r2, r1
   19154:	cmp	r0, r1
   19158:	bls	1925c <__assert_fail@plt+0x83f4>
   1915c:	b	19270 <__assert_fail@plt+0x8408>
   19160:	ldr	r0, [fp, #-16]
   19164:	cmn	r0, #1
   19168:	bne	191b0 <__assert_fail@plt+0x8348>
   1916c:	b	19188 <__assert_fail@plt+0x8320>
   19170:	ldr	r0, [fp, #-12]
   19174:	add	r0, r0, #-2147483648	; 0x80000000
   19178:	movw	r1, #0
   1917c:	cmp	r1, r0
   19180:	bcc	1925c <__assert_fail@plt+0x83f4>
   19184:	b	19270 <__assert_fail@plt+0x8408>
   19188:	ldr	r0, [fp, #-12]
   1918c:	movw	r1, #0
   19190:	cmp	r1, r0
   19194:	bcs	19270 <__assert_fail@plt+0x8408>
   19198:	ldr	r0, [pc, #1912]	; 19918 <__assert_fail@plt+0x8ab0>
   1919c:	ldr	r1, [fp, #-12]
   191a0:	sub	r1, r1, #1
   191a4:	cmp	r0, r1
   191a8:	bcc	1925c <__assert_fail@plt+0x83f4>
   191ac:	b	19270 <__assert_fail@plt+0x8408>
   191b0:	ldr	r0, [pc, #1892]	; 1991c <__assert_fail@plt+0x8ab4>
   191b4:	ldr	r1, [fp, #-16]
   191b8:	udiv	r0, r0, r1
   191bc:	ldr	r1, [fp, #-12]
   191c0:	cmp	r0, r1
   191c4:	bcc	1925c <__assert_fail@plt+0x83f4>
   191c8:	b	19270 <__assert_fail@plt+0x8408>
   191cc:	ldr	r0, [fp, #-16]
   191d0:	cmp	r0, #0
   191d4:	bne	191dc <__assert_fail@plt+0x8374>
   191d8:	b	19270 <__assert_fail@plt+0x8408>
   191dc:	ldr	r0, [fp, #-12]
   191e0:	cmp	r0, #0
   191e4:	bcs	19244 <__assert_fail@plt+0x83dc>
   191e8:	ldr	r0, [fp, #-12]
   191ec:	cmn	r0, #1
   191f0:	bne	19228 <__assert_fail@plt+0x83c0>
   191f4:	b	19210 <__assert_fail@plt+0x83a8>
   191f8:	ldr	r0, [fp, #-16]
   191fc:	add	r0, r0, #-2147483648	; 0x80000000
   19200:	movw	r1, #0
   19204:	cmp	r1, r0
   19208:	bcc	1925c <__assert_fail@plt+0x83f4>
   1920c:	b	19270 <__assert_fail@plt+0x8408>
   19210:	ldr	r0, [pc, #1792]	; 19918 <__assert_fail@plt+0x8ab0>
   19214:	ldr	r1, [fp, #-16]
   19218:	sub	r1, r1, #1
   1921c:	cmp	r0, r1
   19220:	bcc	1925c <__assert_fail@plt+0x83f4>
   19224:	b	19270 <__assert_fail@plt+0x8408>
   19228:	ldr	r0, [pc, #1772]	; 1991c <__assert_fail@plt+0x8ab4>
   1922c:	ldr	r1, [fp, #-12]
   19230:	udiv	r0, r0, r1
   19234:	ldr	r1, [fp, #-16]
   19238:	cmp	r0, r1
   1923c:	bcc	1925c <__assert_fail@plt+0x83f4>
   19240:	b	19270 <__assert_fail@plt+0x8408>
   19244:	ldr	r0, [pc, #1740]	; 19918 <__assert_fail@plt+0x8ab0>
   19248:	ldr	r1, [fp, #-16]
   1924c:	udiv	r0, r0, r1
   19250:	ldr	r1, [fp, #-12]
   19254:	cmp	r0, r1
   19258:	bcs	19270 <__assert_fail@plt+0x8408>
   1925c:	ldr	r0, [fp, #-12]
   19260:	ldr	r1, [fp, #-16]
   19264:	mul	r0, r0, r1
   19268:	str	r0, [fp, #-20]	; 0xffffffec
   1926c:	b	198e4 <__assert_fail@plt+0x8a7c>
   19270:	ldr	r0, [fp, #-12]
   19274:	ldr	r1, [fp, #-16]
   19278:	mul	r0, r0, r1
   1927c:	str	r0, [fp, #-20]	; 0xffffffec
   19280:	b	198fc <__assert_fail@plt+0x8a94>
   19284:	ldr	r0, [fp, #-16]
   19288:	cmp	r0, #0
   1928c:	bcs	19398 <__assert_fail@plt+0x8530>
   19290:	ldr	r0, [fp, #-12]
   19294:	cmp	r0, #0
   19298:	bcs	19320 <__assert_fail@plt+0x84b8>
   1929c:	b	192bc <__assert_fail@plt+0x8454>
   192a0:	ldr	r0, [fp, #-12]
   192a4:	ldr	r1, [fp, #-16]
   192a8:	mvn	r2, #0
   192ac:	udiv	r1, r2, r1
   192b0:	cmp	r0, r1
   192b4:	bcc	19434 <__assert_fail@plt+0x85cc>
   192b8:	b	19448 <__assert_fail@plt+0x85e0>
   192bc:	b	192d0 <__assert_fail@plt+0x8468>
   192c0:	ldr	r0, [fp, #-16]
   192c4:	cmp	r0, #1
   192c8:	bcc	192e0 <__assert_fail@plt+0x8478>
   192cc:	b	192ec <__assert_fail@plt+0x8484>
   192d0:	ldr	r0, [fp, #-16]
   192d4:	movw	r1, #0
   192d8:	cmp	r1, r0
   192dc:	bcs	192ec <__assert_fail@plt+0x8484>
   192e0:	movw	r0, #1
   192e4:	str	r0, [fp, #-52]	; 0xffffffcc
   192e8:	b	19304 <__assert_fail@plt+0x849c>
   192ec:	ldr	r0, [fp, #-16]
   192f0:	movw	r1, #0
   192f4:	sub	r0, r1, r0
   192f8:	mvn	r1, #0
   192fc:	udiv	r0, r1, r0
   19300:	str	r0, [fp, #-52]	; 0xffffffcc
   19304:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19308:	ldr	r1, [fp, #-12]
   1930c:	mvn	r2, #0
   19310:	sub	r1, r2, r1
   19314:	cmp	r0, r1
   19318:	bls	19434 <__assert_fail@plt+0x85cc>
   1931c:	b	19448 <__assert_fail@plt+0x85e0>
   19320:	b	19328 <__assert_fail@plt+0x84c0>
   19324:	b	1932c <__assert_fail@plt+0x84c4>
   19328:	b	1937c <__assert_fail@plt+0x8514>
   1932c:	ldr	r0, [fp, #-16]
   19330:	cmn	r0, #1
   19334:	bne	1937c <__assert_fail@plt+0x8514>
   19338:	b	19354 <__assert_fail@plt+0x84ec>
   1933c:	ldr	r0, [fp, #-12]
   19340:	add	r0, r0, #0
   19344:	movw	r1, #0
   19348:	cmp	r1, r0
   1934c:	bcc	19434 <__assert_fail@plt+0x85cc>
   19350:	b	19448 <__assert_fail@plt+0x85e0>
   19354:	ldr	r0, [fp, #-12]
   19358:	movw	r1, #0
   1935c:	cmp	r1, r0
   19360:	bcs	19448 <__assert_fail@plt+0x85e0>
   19364:	ldr	r0, [fp, #-12]
   19368:	sub	r0, r0, #1
   1936c:	mvn	r1, #0
   19370:	cmp	r1, r0
   19374:	bcc	19434 <__assert_fail@plt+0x85cc>
   19378:	b	19448 <__assert_fail@plt+0x85e0>
   1937c:	ldr	r0, [fp, #-16]
   19380:	movw	r1, #0
   19384:	udiv	r0, r1, r0
   19388:	ldr	r1, [fp, #-12]
   1938c:	cmp	r0, r1
   19390:	bcc	19434 <__assert_fail@plt+0x85cc>
   19394:	b	19448 <__assert_fail@plt+0x85e0>
   19398:	ldr	r0, [fp, #-16]
   1939c:	cmp	r0, #0
   193a0:	bne	193a8 <__assert_fail@plt+0x8540>
   193a4:	b	19448 <__assert_fail@plt+0x85e0>
   193a8:	ldr	r0, [fp, #-12]
   193ac:	cmp	r0, #0
   193b0:	bcs	1941c <__assert_fail@plt+0x85b4>
   193b4:	b	193bc <__assert_fail@plt+0x8554>
   193b8:	b	193c0 <__assert_fail@plt+0x8558>
   193bc:	b	19400 <__assert_fail@plt+0x8598>
   193c0:	ldr	r0, [fp, #-12]
   193c4:	cmn	r0, #1
   193c8:	bne	19400 <__assert_fail@plt+0x8598>
   193cc:	b	193e8 <__assert_fail@plt+0x8580>
   193d0:	ldr	r0, [fp, #-16]
   193d4:	add	r0, r0, #0
   193d8:	movw	r1, #0
   193dc:	cmp	r1, r0
   193e0:	bcc	19434 <__assert_fail@plt+0x85cc>
   193e4:	b	19448 <__assert_fail@plt+0x85e0>
   193e8:	ldr	r0, [fp, #-16]
   193ec:	sub	r0, r0, #1
   193f0:	mvn	r1, #0
   193f4:	cmp	r1, r0
   193f8:	bcc	19434 <__assert_fail@plt+0x85cc>
   193fc:	b	19448 <__assert_fail@plt+0x85e0>
   19400:	ldr	r0, [fp, #-12]
   19404:	movw	r1, #0
   19408:	udiv	r0, r1, r0
   1940c:	ldr	r1, [fp, #-16]
   19410:	cmp	r0, r1
   19414:	bcc	19434 <__assert_fail@plt+0x85cc>
   19418:	b	19448 <__assert_fail@plt+0x85e0>
   1941c:	ldr	r0, [fp, #-16]
   19420:	mvn	r1, #0
   19424:	udiv	r0, r1, r0
   19428:	ldr	r1, [fp, #-12]
   1942c:	cmp	r0, r1
   19430:	bcs	19448 <__assert_fail@plt+0x85e0>
   19434:	ldr	r0, [fp, #-12]
   19438:	ldr	r1, [fp, #-16]
   1943c:	mul	r0, r0, r1
   19440:	str	r0, [fp, #-20]	; 0xffffffec
   19444:	b	198e4 <__assert_fail@plt+0x8a7c>
   19448:	ldr	r0, [fp, #-12]
   1944c:	ldr	r1, [fp, #-16]
   19450:	mul	r0, r0, r1
   19454:	str	r0, [fp, #-20]	; 0xffffffec
   19458:	b	198fc <__assert_fail@plt+0x8a94>
   1945c:	b	196b0 <__assert_fail@plt+0x8848>
   19460:	ldr	r0, [fp, #-16]
   19464:	cmp	r0, #0
   19468:	bcs	195c8 <__assert_fail@plt+0x8760>
   1946c:	ldr	r0, [fp, #-12]
   19470:	cmp	r0, #0
   19474:	bcs	19544 <__assert_fail@plt+0x86dc>
   19478:	b	1947c <__assert_fail@plt+0x8614>
   1947c:	ldr	r0, [fp, #-12]
   19480:	ldr	r2, [fp, #-16]
   19484:	mvn	r1, #0
   19488:	mvn	r3, #-2147483648	; 0x80000000
   1948c:	mov	ip, #0
   19490:	str	r0, [fp, #-56]	; 0xffffffc8
   19494:	mov	r0, r1
   19498:	mov	r1, r3
   1949c:	mov	r3, ip
   194a0:	bl	1a230 <__assert_fail@plt+0x93c8>
   194a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   194a8:	subs	r0, r2, r0
   194ac:	rscs	r1, r1, #0
   194b0:	str	r0, [fp, #-60]	; 0xffffffc4
   194b4:	str	r1, [fp, #-64]	; 0xffffffc0
   194b8:	blt	19688 <__assert_fail@plt+0x8820>
   194bc:	b	1969c <__assert_fail@plt+0x8834>
   194c0:	b	194d4 <__assert_fail@plt+0x866c>
   194c4:	ldr	r0, [fp, #-16]
   194c8:	cmp	r0, #1
   194cc:	bcc	194e4 <__assert_fail@plt+0x867c>
   194d0:	b	194f8 <__assert_fail@plt+0x8690>
   194d4:	ldr	r0, [fp, #-16]
   194d8:	movw	r1, #0
   194dc:	cmp	r1, r0
   194e0:	bcs	194f8 <__assert_fail@plt+0x8690>
   194e4:	mov	r0, #0
   194e8:	mvn	r1, #0
   194ec:	str	r1, [fp, #-68]	; 0xffffffbc
   194f0:	str	r0, [fp, #-72]	; 0xffffffb8
   194f4:	b	1951c <__assert_fail@plt+0x86b4>
   194f8:	ldr	r0, [fp, #-16]
   194fc:	rsb	r2, r0, #0
   19500:	mvn	r0, #0
   19504:	mvn	r1, #-2147483648	; 0x80000000
   19508:	mov	r3, #0
   1950c:	bl	1a230 <__assert_fail@plt+0x93c8>
   19510:	str	r0, [fp, #-68]	; 0xffffffbc
   19514:	str	r1, [fp, #-72]	; 0xffffffb8
   19518:	b	1951c <__assert_fail@plt+0x86b4>
   1951c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19520:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19524:	ldr	r2, [fp, #-12]
   19528:	mvn	r2, r2
   1952c:	subs	r1, r2, r1
   19530:	rscs	r0, r0, #0
   19534:	str	r1, [fp, #-76]	; 0xffffffb4
   19538:	str	r0, [fp, #-80]	; 0xffffffb0
   1953c:	bge	19688 <__assert_fail@plt+0x8820>
   19540:	b	1969c <__assert_fail@plt+0x8834>
   19544:	ldr	r0, [fp, #-16]
   19548:	cmn	r0, #1
   1954c:	bne	19594 <__assert_fail@plt+0x872c>
   19550:	b	19574 <__assert_fail@plt+0x870c>
   19554:	ldr	r0, [fp, #-12]
   19558:	rsbs	r0, r0, #0
   1955c:	mov	r1, #0
   19560:	sbcs	r1, r1, #-2147483648	; 0x80000000
   19564:	str	r0, [fp, #-84]	; 0xffffffac
   19568:	str	r1, [sp, #88]	; 0x58
   1956c:	blt	19688 <__assert_fail@plt+0x8820>
   19570:	b	1969c <__assert_fail@plt+0x8834>
   19574:	ldr	r0, [fp, #-12]
   19578:	movw	r1, #0
   1957c:	cmp	r1, r0
   19580:	bcs	1969c <__assert_fail@plt+0x8834>
   19584:	mov	r0, #0
   19588:	cmp	r0, #0
   1958c:	bne	19688 <__assert_fail@plt+0x8820>
   19590:	b	1969c <__assert_fail@plt+0x8834>
   19594:	ldr	r2, [fp, #-16]
   19598:	mov	r1, #-2147483648	; 0x80000000
   1959c:	mov	r0, #0
   195a0:	str	r0, [sp, #84]	; 0x54
   195a4:	ldr	r3, [sp, #84]	; 0x54
   195a8:	bl	1a15c <__assert_fail@plt+0x92f4>
   195ac:	ldr	r2, [fp, #-12]
   195b0:	subs	r0, r0, r2
   195b4:	sbcs	r1, r1, #0
   195b8:	str	r0, [sp, #80]	; 0x50
   195bc:	str	r1, [sp, #76]	; 0x4c
   195c0:	blt	19688 <__assert_fail@plt+0x8820>
   195c4:	b	1969c <__assert_fail@plt+0x8834>
   195c8:	ldr	r0, [fp, #-16]
   195cc:	cmp	r0, #0
   195d0:	bne	195d8 <__assert_fail@plt+0x8770>
   195d4:	b	1969c <__assert_fail@plt+0x8834>
   195d8:	ldr	r0, [fp, #-12]
   195dc:	cmp	r0, #0
   195e0:	bcs	19658 <__assert_fail@plt+0x87f0>
   195e4:	ldr	r0, [fp, #-12]
   195e8:	cmn	r0, #1
   195ec:	bne	19624 <__assert_fail@plt+0x87bc>
   195f0:	b	19614 <__assert_fail@plt+0x87ac>
   195f4:	ldr	r0, [fp, #-16]
   195f8:	rsbs	r0, r0, #0
   195fc:	mov	r1, #0
   19600:	sbcs	r1, r1, #-2147483648	; 0x80000000
   19604:	str	r0, [sp, #72]	; 0x48
   19608:	str	r1, [sp, #68]	; 0x44
   1960c:	blt	19688 <__assert_fail@plt+0x8820>
   19610:	b	1969c <__assert_fail@plt+0x8834>
   19614:	mov	r0, #0
   19618:	cmp	r0, #0
   1961c:	bne	19688 <__assert_fail@plt+0x8820>
   19620:	b	1969c <__assert_fail@plt+0x8834>
   19624:	ldr	r2, [fp, #-12]
   19628:	mov	r1, #-2147483648	; 0x80000000
   1962c:	mov	r0, #0
   19630:	str	r0, [sp, #64]	; 0x40
   19634:	ldr	r3, [sp, #64]	; 0x40
   19638:	bl	1a15c <__assert_fail@plt+0x92f4>
   1963c:	ldr	r2, [fp, #-16]
   19640:	subs	r0, r0, r2
   19644:	sbcs	r1, r1, #0
   19648:	str	r0, [sp, #60]	; 0x3c
   1964c:	str	r1, [sp, #56]	; 0x38
   19650:	blt	19688 <__assert_fail@plt+0x8820>
   19654:	b	1969c <__assert_fail@plt+0x8834>
   19658:	ldr	r2, [fp, #-16]
   1965c:	mvn	r0, #0
   19660:	mvn	r1, #-2147483648	; 0x80000000
   19664:	mov	r3, #0
   19668:	bl	1a230 <__assert_fail@plt+0x93c8>
   1966c:	ldr	r2, [fp, #-12]
   19670:	subs	r0, r0, r2
   19674:	sbcs	r1, r1, #0
   19678:	str	r0, [sp, #52]	; 0x34
   1967c:	str	r1, [sp, #48]	; 0x30
   19680:	bge	1969c <__assert_fail@plt+0x8834>
   19684:	b	19688 <__assert_fail@plt+0x8820>
   19688:	ldr	r0, [fp, #-12]
   1968c:	ldr	r1, [fp, #-16]
   19690:	mul	r0, r0, r1
   19694:	str	r0, [fp, #-20]	; 0xffffffec
   19698:	b	198e4 <__assert_fail@plt+0x8a7c>
   1969c:	ldr	r0, [fp, #-12]
   196a0:	ldr	r1, [fp, #-16]
   196a4:	mul	r0, r0, r1
   196a8:	str	r0, [fp, #-20]	; 0xffffffec
   196ac:	b	198fc <__assert_fail@plt+0x8a94>
   196b0:	ldr	r0, [fp, #-16]
   196b4:	cmp	r0, #0
   196b8:	bcs	19804 <__assert_fail@plt+0x899c>
   196bc:	ldr	r0, [fp, #-12]
   196c0:	cmp	r0, #0
   196c4:	bcs	1978c <__assert_fail@plt+0x8924>
   196c8:	b	19704 <__assert_fail@plt+0x889c>
   196cc:	ldr	r0, [fp, #-12]
   196d0:	ldr	r2, [fp, #-16]
   196d4:	mvn	r1, #0
   196d8:	mov	r3, #0
   196dc:	str	r0, [sp, #44]	; 0x2c
   196e0:	mov	r0, r1
   196e4:	bl	1a230 <__assert_fail@plt+0x93c8>
   196e8:	ldr	r2, [sp, #44]	; 0x2c
   196ec:	subs	r0, r2, r0
   196f0:	rscs	r1, r1, #0
   196f4:	str	r0, [sp, #40]	; 0x28
   196f8:	str	r1, [sp, #36]	; 0x24
   196fc:	bcc	198bc <__assert_fail@plt+0x8a54>
   19700:	b	198d0 <__assert_fail@plt+0x8a68>
   19704:	b	19718 <__assert_fail@plt+0x88b0>
   19708:	ldr	r0, [fp, #-16]
   1970c:	cmp	r0, #1
   19710:	bcc	19728 <__assert_fail@plt+0x88c0>
   19714:	b	1973c <__assert_fail@plt+0x88d4>
   19718:	ldr	r0, [fp, #-16]
   1971c:	movw	r1, #0
   19720:	cmp	r1, r0
   19724:	bcs	1973c <__assert_fail@plt+0x88d4>
   19728:	mov	r0, #1
   1972c:	mvn	r1, #0
   19730:	str	r1, [sp, #32]
   19734:	str	r0, [sp, #28]
   19738:	b	19764 <__assert_fail@plt+0x88fc>
   1973c:	ldr	r0, [fp, #-16]
   19740:	rsb	r2, r0, #0
   19744:	mvn	r0, #0
   19748:	mov	r3, #0
   1974c:	str	r0, [sp, #24]
   19750:	ldr	r1, [sp, #24]
   19754:	bl	1a230 <__assert_fail@plt+0x93c8>
   19758:	str	r0, [sp, #32]
   1975c:	str	r1, [sp, #28]
   19760:	b	19764 <__assert_fail@plt+0x88fc>
   19764:	ldr	r0, [sp, #28]
   19768:	ldr	r1, [sp, #32]
   1976c:	ldr	r2, [fp, #-12]
   19770:	mvn	r2, r2
   19774:	subs	r1, r2, r1
   19778:	rscs	r0, r0, #0
   1977c:	str	r1, [sp, #20]
   19780:	str	r0, [sp, #16]
   19784:	bcs	198bc <__assert_fail@plt+0x8a54>
   19788:	b	198d0 <__assert_fail@plt+0x8a68>
   1978c:	b	19794 <__assert_fail@plt+0x892c>
   19790:	b	19798 <__assert_fail@plt+0x8930>
   19794:	b	197e8 <__assert_fail@plt+0x8980>
   19798:	ldr	r0, [fp, #-16]
   1979c:	cmn	r0, #1
   197a0:	bne	197e8 <__assert_fail@plt+0x8980>
   197a4:	b	197c0 <__assert_fail@plt+0x8958>
   197a8:	ldr	r0, [fp, #-12]
   197ac:	add	r0, r0, #0
   197b0:	movw	r1, #0
   197b4:	cmp	r1, r0
   197b8:	bcc	198bc <__assert_fail@plt+0x8a54>
   197bc:	b	198d0 <__assert_fail@plt+0x8a68>
   197c0:	ldr	r0, [fp, #-12]
   197c4:	movw	r1, #0
   197c8:	cmp	r1, r0
   197cc:	bcs	198d0 <__assert_fail@plt+0x8a68>
   197d0:	ldr	r0, [fp, #-12]
   197d4:	sub	r0, r0, #1
   197d8:	mvn	r1, #0
   197dc:	cmp	r1, r0
   197e0:	bcc	198bc <__assert_fail@plt+0x8a54>
   197e4:	b	198d0 <__assert_fail@plt+0x8a68>
   197e8:	ldr	r0, [fp, #-16]
   197ec:	movw	r1, #0
   197f0:	udiv	r0, r1, r0
   197f4:	ldr	r1, [fp, #-12]
   197f8:	cmp	r0, r1
   197fc:	bcc	198bc <__assert_fail@plt+0x8a54>
   19800:	b	198d0 <__assert_fail@plt+0x8a68>
   19804:	ldr	r0, [fp, #-16]
   19808:	cmp	r0, #0
   1980c:	bne	19814 <__assert_fail@plt+0x89ac>
   19810:	b	198d0 <__assert_fail@plt+0x8a68>
   19814:	ldr	r0, [fp, #-12]
   19818:	cmp	r0, #0
   1981c:	bcs	19888 <__assert_fail@plt+0x8a20>
   19820:	b	19828 <__assert_fail@plt+0x89c0>
   19824:	b	1982c <__assert_fail@plt+0x89c4>
   19828:	b	1986c <__assert_fail@plt+0x8a04>
   1982c:	ldr	r0, [fp, #-12]
   19830:	cmn	r0, #1
   19834:	bne	1986c <__assert_fail@plt+0x8a04>
   19838:	b	19854 <__assert_fail@plt+0x89ec>
   1983c:	ldr	r0, [fp, #-16]
   19840:	add	r0, r0, #0
   19844:	movw	r1, #0
   19848:	cmp	r1, r0
   1984c:	bcc	198bc <__assert_fail@plt+0x8a54>
   19850:	b	198d0 <__assert_fail@plt+0x8a68>
   19854:	ldr	r0, [fp, #-16]
   19858:	sub	r0, r0, #1
   1985c:	mvn	r1, #0
   19860:	cmp	r1, r0
   19864:	bcc	198bc <__assert_fail@plt+0x8a54>
   19868:	b	198d0 <__assert_fail@plt+0x8a68>
   1986c:	ldr	r0, [fp, #-12]
   19870:	movw	r1, #0
   19874:	udiv	r0, r1, r0
   19878:	ldr	r1, [fp, #-16]
   1987c:	cmp	r0, r1
   19880:	bcc	198bc <__assert_fail@plt+0x8a54>
   19884:	b	198d0 <__assert_fail@plt+0x8a68>
   19888:	ldr	r2, [fp, #-16]
   1988c:	mvn	r0, #0
   19890:	mov	r3, #0
   19894:	str	r0, [sp, #12]
   19898:	ldr	r1, [sp, #12]
   1989c:	bl	1a230 <__assert_fail@plt+0x93c8>
   198a0:	ldr	r2, [fp, #-12]
   198a4:	subs	r0, r0, r2
   198a8:	sbcs	r1, r1, #0
   198ac:	str	r0, [sp, #8]
   198b0:	str	r1, [sp, #4]
   198b4:	bcs	198d0 <__assert_fail@plt+0x8a68>
   198b8:	b	198bc <__assert_fail@plt+0x8a54>
   198bc:	ldr	r0, [fp, #-12]
   198c0:	ldr	r1, [fp, #-16]
   198c4:	mul	r0, r0, r1
   198c8:	str	r0, [fp, #-20]	; 0xffffffec
   198cc:	b	198e4 <__assert_fail@plt+0x8a7c>
   198d0:	ldr	r0, [fp, #-12]
   198d4:	ldr	r1, [fp, #-16]
   198d8:	mul	r0, r0, r1
   198dc:	str	r0, [fp, #-20]	; 0xffffffec
   198e0:	b	198fc <__assert_fail@plt+0x8a94>
   198e4:	bl	10dc0 <__errno_location@plt>
   198e8:	movw	lr, #12
   198ec:	str	lr, [r0]
   198f0:	movw	r0, #0
   198f4:	str	r0, [fp, #-4]
   198f8:	b	1990c <__assert_fail@plt+0x8aa4>
   198fc:	ldr	r0, [fp, #-8]
   19900:	ldr	r1, [fp, #-20]	; 0xffffffec
   19904:	bl	17da0 <__assert_fail@plt+0x6f38>
   19908:	str	r0, [fp, #-4]
   1990c:	ldr	r0, [fp, #-4]
   19910:	mov	sp, fp
   19914:	pop	{fp, pc}
   19918:	svcvc	0x00ffffff
   1991c:	andhi	r0, r0, r0
   19920:			; <UNDEFINED> instruction: 0xffff8000
   19924:	sub	sp, sp, #12
   19928:	str	r0, [sp, #4]
   1992c:	ldr	r0, [sp, #4]
   19930:	sub	r1, r0, #48	; 0x30
   19934:	cmp	r1, #10
   19938:	str	r0, [sp]
   1993c:	bcc	1996c <__assert_fail@plt+0x8b04>
   19940:	b	19944 <__assert_fail@plt+0x8adc>
   19944:	ldr	r0, [sp]
   19948:	sub	r1, r0, #65	; 0x41
   1994c:	cmp	r1, #26
   19950:	bcc	1996c <__assert_fail@plt+0x8b04>
   19954:	b	19958 <__assert_fail@plt+0x8af0>
   19958:	ldr	r0, [sp]
   1995c:	sub	r1, r0, #97	; 0x61
   19960:	cmp	r1, #25
   19964:	bhi	1997c <__assert_fail@plt+0x8b14>
   19968:	b	1996c <__assert_fail@plt+0x8b04>
   1996c:	movw	r0, #1
   19970:	and	r0, r0, #1
   19974:	strb	r0, [sp, #11]
   19978:	b	19988 <__assert_fail@plt+0x8b20>
   1997c:	movw	r0, #0
   19980:	and	r0, r0, #1
   19984:	strb	r0, [sp, #11]
   19988:	ldrb	r0, [sp, #11]
   1998c:	and	r0, r0, #1
   19990:	add	sp, sp, #12
   19994:	bx	lr
   19998:	sub	sp, sp, #12
   1999c:	str	r0, [sp, #4]
   199a0:	ldr	r0, [sp, #4]
   199a4:	sub	r1, r0, #65	; 0x41
   199a8:	cmp	r1, #26
   199ac:	str	r0, [sp]
   199b0:	bcc	199cc <__assert_fail@plt+0x8b64>
   199b4:	b	199b8 <__assert_fail@plt+0x8b50>
   199b8:	ldr	r0, [sp]
   199bc:	sub	r1, r0, #97	; 0x61
   199c0:	cmp	r1, #25
   199c4:	bhi	199dc <__assert_fail@plt+0x8b74>
   199c8:	b	199cc <__assert_fail@plt+0x8b64>
   199cc:	movw	r0, #1
   199d0:	and	r0, r0, #1
   199d4:	strb	r0, [sp, #11]
   199d8:	b	199e8 <__assert_fail@plt+0x8b80>
   199dc:	movw	r0, #0
   199e0:	and	r0, r0, #1
   199e4:	strb	r0, [sp, #11]
   199e8:	ldrb	r0, [sp, #11]
   199ec:	and	r0, r0, #1
   199f0:	add	sp, sp, #12
   199f4:	bx	lr
   199f8:	sub	sp, sp, #8
   199fc:	str	r0, [sp]
   19a00:	ldr	r0, [sp]
   19a04:	cmp	r0, #127	; 0x7f
   19a08:	bhi	19a20 <__assert_fail@plt+0x8bb8>
   19a0c:	b	19a10 <__assert_fail@plt+0x8ba8>
   19a10:	movw	r0, #1
   19a14:	and	r0, r0, #1
   19a18:	strb	r0, [sp, #7]
   19a1c:	b	19a2c <__assert_fail@plt+0x8bc4>
   19a20:	movw	r0, #0
   19a24:	and	r0, r0, #1
   19a28:	strb	r0, [sp, #7]
   19a2c:	ldrb	r0, [sp, #7]
   19a30:	and	r0, r0, #1
   19a34:	add	sp, sp, #8
   19a38:	bx	lr
   19a3c:	sub	sp, sp, #8
   19a40:	str	r0, [sp, #4]
   19a44:	ldr	r0, [sp, #4]
   19a48:	cmp	r0, #32
   19a4c:	movw	r0, #1
   19a50:	str	r0, [sp]
   19a54:	beq	19a6c <__assert_fail@plt+0x8c04>
   19a58:	ldr	r0, [sp, #4]
   19a5c:	cmp	r0, #9
   19a60:	movw	r0, #0
   19a64:	moveq	r0, #1
   19a68:	str	r0, [sp]
   19a6c:	ldr	r0, [sp]
   19a70:	and	r0, r0, #1
   19a74:	add	sp, sp, #8
   19a78:	bx	lr
   19a7c:	sub	sp, sp, #12
   19a80:	str	r0, [sp, #4]
   19a84:	ldr	r0, [sp, #4]
   19a88:	cmp	r0, #32
   19a8c:	str	r0, [sp]
   19a90:	bcc	19aa8 <__assert_fail@plt+0x8c40>
   19a94:	b	19a98 <__assert_fail@plt+0x8c30>
   19a98:	ldr	r0, [sp]
   19a9c:	cmp	r0, #127	; 0x7f
   19aa0:	bne	19ab8 <__assert_fail@plt+0x8c50>
   19aa4:	b	19aa8 <__assert_fail@plt+0x8c40>
   19aa8:	movw	r0, #1
   19aac:	and	r0, r0, #1
   19ab0:	strb	r0, [sp, #11]
   19ab4:	b	19ac4 <__assert_fail@plt+0x8c5c>
   19ab8:	movw	r0, #0
   19abc:	and	r0, r0, #1
   19ac0:	strb	r0, [sp, #11]
   19ac4:	ldrb	r0, [sp, #11]
   19ac8:	and	r0, r0, #1
   19acc:	add	sp, sp, #12
   19ad0:	bx	lr
   19ad4:	sub	sp, sp, #8
   19ad8:	str	r0, [sp]
   19adc:	ldr	r0, [sp]
   19ae0:	sub	r0, r0, #48	; 0x30
   19ae4:	cmp	r0, #9
   19ae8:	bhi	19b00 <__assert_fail@plt+0x8c98>
   19aec:	b	19af0 <__assert_fail@plt+0x8c88>
   19af0:	movw	r0, #1
   19af4:	and	r0, r0, #1
   19af8:	strb	r0, [sp, #7]
   19afc:	b	19b0c <__assert_fail@plt+0x8ca4>
   19b00:	movw	r0, #0
   19b04:	and	r0, r0, #1
   19b08:	strb	r0, [sp, #7]
   19b0c:	ldrb	r0, [sp, #7]
   19b10:	and	r0, r0, #1
   19b14:	add	sp, sp, #8
   19b18:	bx	lr
   19b1c:	sub	sp, sp, #8
   19b20:	str	r0, [sp]
   19b24:	ldr	r0, [sp]
   19b28:	sub	r0, r0, #33	; 0x21
   19b2c:	cmp	r0, #93	; 0x5d
   19b30:	bhi	19b48 <__assert_fail@plt+0x8ce0>
   19b34:	b	19b38 <__assert_fail@plt+0x8cd0>
   19b38:	movw	r0, #1
   19b3c:	and	r0, r0, #1
   19b40:	strb	r0, [sp, #7]
   19b44:	b	19b54 <__assert_fail@plt+0x8cec>
   19b48:	movw	r0, #0
   19b4c:	and	r0, r0, #1
   19b50:	strb	r0, [sp, #7]
   19b54:	ldrb	r0, [sp, #7]
   19b58:	and	r0, r0, #1
   19b5c:	add	sp, sp, #8
   19b60:	bx	lr
   19b64:	sub	sp, sp, #8
   19b68:	str	r0, [sp]
   19b6c:	ldr	r0, [sp]
   19b70:	sub	r0, r0, #97	; 0x61
   19b74:	cmp	r0, #25
   19b78:	bhi	19b90 <__assert_fail@plt+0x8d28>
   19b7c:	b	19b80 <__assert_fail@plt+0x8d18>
   19b80:	movw	r0, #1
   19b84:	and	r0, r0, #1
   19b88:	strb	r0, [sp, #7]
   19b8c:	b	19b9c <__assert_fail@plt+0x8d34>
   19b90:	movw	r0, #0
   19b94:	and	r0, r0, #1
   19b98:	strb	r0, [sp, #7]
   19b9c:	ldrb	r0, [sp, #7]
   19ba0:	and	r0, r0, #1
   19ba4:	add	sp, sp, #8
   19ba8:	bx	lr
   19bac:	sub	sp, sp, #8
   19bb0:	str	r0, [sp]
   19bb4:	ldr	r0, [sp]
   19bb8:	sub	r0, r0, #32
   19bbc:	cmp	r0, #94	; 0x5e
   19bc0:	bhi	19bd8 <__assert_fail@plt+0x8d70>
   19bc4:	b	19bc8 <__assert_fail@plt+0x8d60>
   19bc8:	movw	r0, #1
   19bcc:	and	r0, r0, #1
   19bd0:	strb	r0, [sp, #7]
   19bd4:	b	19be4 <__assert_fail@plt+0x8d7c>
   19bd8:	movw	r0, #0
   19bdc:	and	r0, r0, #1
   19be0:	strb	r0, [sp, #7]
   19be4:	ldrb	r0, [sp, #7]
   19be8:	and	r0, r0, #1
   19bec:	add	sp, sp, #8
   19bf0:	bx	lr
   19bf4:	sub	sp, sp, #12
   19bf8:	str	r0, [sp, #4]
   19bfc:	ldr	r0, [sp, #4]
   19c00:	sub	r0, r0, #33	; 0x21
   19c04:	cmp	r0, #93	; 0x5d
   19c08:	str	r0, [sp]
   19c0c:	bhi	19da8 <__assert_fail@plt+0x8f40>
   19c10:	add	r0, pc, #8
   19c14:	ldr	r1, [sp]
   19c18:	ldr	r0, [r0, r1, lsl #2]
   19c1c:	mov	pc, r0
   19c20:	muleq	r1, r8, sp
   19c24:	muleq	r1, r8, sp
   19c28:	muleq	r1, r8, sp
   19c2c:	muleq	r1, r8, sp
   19c30:	muleq	r1, r8, sp
   19c34:	muleq	r1, r8, sp
   19c38:	muleq	r1, r8, sp
   19c3c:	muleq	r1, r8, sp
   19c40:	muleq	r1, r8, sp
   19c44:	muleq	r1, r8, sp
   19c48:	muleq	r1, r8, sp
   19c4c:	muleq	r1, r8, sp
   19c50:	muleq	r1, r8, sp
   19c54:	muleq	r1, r8, sp
   19c58:	muleq	r1, r8, sp
   19c5c:	andeq	r9, r1, r8, lsr #27
   19c60:	andeq	r9, r1, r8, lsr #27
   19c64:	andeq	r9, r1, r8, lsr #27
   19c68:	andeq	r9, r1, r8, lsr #27
   19c6c:	andeq	r9, r1, r8, lsr #27
   19c70:	andeq	r9, r1, r8, lsr #27
   19c74:	andeq	r9, r1, r8, lsr #27
   19c78:	andeq	r9, r1, r8, lsr #27
   19c7c:	andeq	r9, r1, r8, lsr #27
   19c80:	andeq	r9, r1, r8, lsr #27
   19c84:	muleq	r1, r8, sp
   19c88:	muleq	r1, r8, sp
   19c8c:	muleq	r1, r8, sp
   19c90:	muleq	r1, r8, sp
   19c94:	muleq	r1, r8, sp
   19c98:	muleq	r1, r8, sp
   19c9c:	muleq	r1, r8, sp
   19ca0:	andeq	r9, r1, r8, lsr #27
   19ca4:	andeq	r9, r1, r8, lsr #27
   19ca8:	andeq	r9, r1, r8, lsr #27
   19cac:	andeq	r9, r1, r8, lsr #27
   19cb0:	andeq	r9, r1, r8, lsr #27
   19cb4:	andeq	r9, r1, r8, lsr #27
   19cb8:	andeq	r9, r1, r8, lsr #27
   19cbc:	andeq	r9, r1, r8, lsr #27
   19cc0:	andeq	r9, r1, r8, lsr #27
   19cc4:	andeq	r9, r1, r8, lsr #27
   19cc8:	andeq	r9, r1, r8, lsr #27
   19ccc:	andeq	r9, r1, r8, lsr #27
   19cd0:	andeq	r9, r1, r8, lsr #27
   19cd4:	andeq	r9, r1, r8, lsr #27
   19cd8:	andeq	r9, r1, r8, lsr #27
   19cdc:	andeq	r9, r1, r8, lsr #27
   19ce0:	andeq	r9, r1, r8, lsr #27
   19ce4:	andeq	r9, r1, r8, lsr #27
   19ce8:	andeq	r9, r1, r8, lsr #27
   19cec:	andeq	r9, r1, r8, lsr #27
   19cf0:	andeq	r9, r1, r8, lsr #27
   19cf4:	andeq	r9, r1, r8, lsr #27
   19cf8:	andeq	r9, r1, r8, lsr #27
   19cfc:	andeq	r9, r1, r8, lsr #27
   19d00:	andeq	r9, r1, r8, lsr #27
   19d04:	andeq	r9, r1, r8, lsr #27
   19d08:	muleq	r1, r8, sp
   19d0c:	muleq	r1, r8, sp
   19d10:	muleq	r1, r8, sp
   19d14:	muleq	r1, r8, sp
   19d18:	muleq	r1, r8, sp
   19d1c:	muleq	r1, r8, sp
   19d20:	andeq	r9, r1, r8, lsr #27
   19d24:	andeq	r9, r1, r8, lsr #27
   19d28:	andeq	r9, r1, r8, lsr #27
   19d2c:	andeq	r9, r1, r8, lsr #27
   19d30:	andeq	r9, r1, r8, lsr #27
   19d34:	andeq	r9, r1, r8, lsr #27
   19d38:	andeq	r9, r1, r8, lsr #27
   19d3c:	andeq	r9, r1, r8, lsr #27
   19d40:	andeq	r9, r1, r8, lsr #27
   19d44:	andeq	r9, r1, r8, lsr #27
   19d48:	andeq	r9, r1, r8, lsr #27
   19d4c:	andeq	r9, r1, r8, lsr #27
   19d50:	andeq	r9, r1, r8, lsr #27
   19d54:	andeq	r9, r1, r8, lsr #27
   19d58:	andeq	r9, r1, r8, lsr #27
   19d5c:	andeq	r9, r1, r8, lsr #27
   19d60:	andeq	r9, r1, r8, lsr #27
   19d64:	andeq	r9, r1, r8, lsr #27
   19d68:	andeq	r9, r1, r8, lsr #27
   19d6c:	andeq	r9, r1, r8, lsr #27
   19d70:	andeq	r9, r1, r8, lsr #27
   19d74:	andeq	r9, r1, r8, lsr #27
   19d78:	andeq	r9, r1, r8, lsr #27
   19d7c:	andeq	r9, r1, r8, lsr #27
   19d80:	andeq	r9, r1, r8, lsr #27
   19d84:	andeq	r9, r1, r8, lsr #27
   19d88:	muleq	r1, r8, sp
   19d8c:	muleq	r1, r8, sp
   19d90:	muleq	r1, r8, sp
   19d94:	muleq	r1, r8, sp
   19d98:	movw	r0, #1
   19d9c:	and	r0, r0, #1
   19da0:	strb	r0, [sp, #11]
   19da4:	b	19db4 <__assert_fail@plt+0x8f4c>
   19da8:	movw	r0, #0
   19dac:	and	r0, r0, #1
   19db0:	strb	r0, [sp, #11]
   19db4:	ldrb	r0, [sp, #11]
   19db8:	and	r0, r0, #1
   19dbc:	add	sp, sp, #12
   19dc0:	bx	lr
   19dc4:	sub	sp, sp, #12
   19dc8:	str	r0, [sp, #4]
   19dcc:	ldr	r0, [sp, #4]
   19dd0:	sub	r1, r0, #9
   19dd4:	cmp	r1, #5
   19dd8:	str	r0, [sp]
   19ddc:	bcc	19df4 <__assert_fail@plt+0x8f8c>
   19de0:	b	19de4 <__assert_fail@plt+0x8f7c>
   19de4:	ldr	r0, [sp]
   19de8:	cmp	r0, #32
   19dec:	bne	19e04 <__assert_fail@plt+0x8f9c>
   19df0:	b	19df4 <__assert_fail@plt+0x8f8c>
   19df4:	movw	r0, #1
   19df8:	and	r0, r0, #1
   19dfc:	strb	r0, [sp, #11]
   19e00:	b	19e10 <__assert_fail@plt+0x8fa8>
   19e04:	movw	r0, #0
   19e08:	and	r0, r0, #1
   19e0c:	strb	r0, [sp, #11]
   19e10:	ldrb	r0, [sp, #11]
   19e14:	and	r0, r0, #1
   19e18:	add	sp, sp, #12
   19e1c:	bx	lr
   19e20:	sub	sp, sp, #8
   19e24:	str	r0, [sp]
   19e28:	ldr	r0, [sp]
   19e2c:	sub	r0, r0, #65	; 0x41
   19e30:	cmp	r0, #25
   19e34:	bhi	19e4c <__assert_fail@plt+0x8fe4>
   19e38:	b	19e3c <__assert_fail@plt+0x8fd4>
   19e3c:	movw	r0, #1
   19e40:	and	r0, r0, #1
   19e44:	strb	r0, [sp, #7]
   19e48:	b	19e58 <__assert_fail@plt+0x8ff0>
   19e4c:	movw	r0, #0
   19e50:	and	r0, r0, #1
   19e54:	strb	r0, [sp, #7]
   19e58:	ldrb	r0, [sp, #7]
   19e5c:	and	r0, r0, #1
   19e60:	add	sp, sp, #8
   19e64:	bx	lr
   19e68:	sub	sp, sp, #12
   19e6c:	str	r0, [sp, #4]
   19e70:	ldr	r0, [sp, #4]
   19e74:	sub	r1, r0, #48	; 0x30
   19e78:	cmp	r1, #10
   19e7c:	str	r0, [sp]
   19e80:	bcc	19eb0 <__assert_fail@plt+0x9048>
   19e84:	b	19e88 <__assert_fail@plt+0x9020>
   19e88:	ldr	r0, [sp]
   19e8c:	sub	r1, r0, #65	; 0x41
   19e90:	cmp	r1, #6
   19e94:	bcc	19eb0 <__assert_fail@plt+0x9048>
   19e98:	b	19e9c <__assert_fail@plt+0x9034>
   19e9c:	ldr	r0, [sp]
   19ea0:	sub	r1, r0, #97	; 0x61
   19ea4:	cmp	r1, #5
   19ea8:	bhi	19ec0 <__assert_fail@plt+0x9058>
   19eac:	b	19eb0 <__assert_fail@plt+0x9048>
   19eb0:	movw	r0, #1
   19eb4:	and	r0, r0, #1
   19eb8:	strb	r0, [sp, #11]
   19ebc:	b	19ecc <__assert_fail@plt+0x9064>
   19ec0:	movw	r0, #0
   19ec4:	and	r0, r0, #1
   19ec8:	strb	r0, [sp, #11]
   19ecc:	ldrb	r0, [sp, #11]
   19ed0:	and	r0, r0, #1
   19ed4:	add	sp, sp, #12
   19ed8:	bx	lr
   19edc:	sub	sp, sp, #8
   19ee0:	str	r0, [sp]
   19ee4:	ldr	r0, [sp]
   19ee8:	sub	r0, r0, #65	; 0x41
   19eec:	cmp	r0, #25
   19ef0:	bhi	19f0c <__assert_fail@plt+0x90a4>
   19ef4:	b	19ef8 <__assert_fail@plt+0x9090>
   19ef8:	ldr	r0, [sp]
   19efc:	sub	r0, r0, #65	; 0x41
   19f00:	add	r0, r0, #97	; 0x61
   19f04:	str	r0, [sp, #4]
   19f08:	b	19f14 <__assert_fail@plt+0x90ac>
   19f0c:	ldr	r0, [sp]
   19f10:	str	r0, [sp, #4]
   19f14:	ldr	r0, [sp, #4]
   19f18:	add	sp, sp, #8
   19f1c:	bx	lr
   19f20:	sub	sp, sp, #8
   19f24:	str	r0, [sp]
   19f28:	ldr	r0, [sp]
   19f2c:	sub	r0, r0, #97	; 0x61
   19f30:	cmp	r0, #25
   19f34:	bhi	19f50 <__assert_fail@plt+0x90e8>
   19f38:	b	19f3c <__assert_fail@plt+0x90d4>
   19f3c:	ldr	r0, [sp]
   19f40:	sub	r0, r0, #97	; 0x61
   19f44:	add	r0, r0, #65	; 0x41
   19f48:	str	r0, [sp, #4]
   19f4c:	b	19f58 <__assert_fail@plt+0x90f0>
   19f50:	ldr	r0, [sp]
   19f54:	str	r0, [sp, #4]
   19f58:	ldr	r0, [sp, #4]
   19f5c:	add	sp, sp, #8
   19f60:	bx	lr
   19f64:	push	{r4, r5, fp, lr}
   19f68:	add	fp, sp, #8
   19f6c:	sub	sp, sp, #272	; 0x110
   19f70:	add	r1, sp, #7
   19f74:	str	r0, [fp, #-16]
   19f78:	ldr	r0, [fp, #-16]
   19f7c:	movw	r2, #257	; 0x101
   19f80:	bl	1a000 <__assert_fail@plt+0x9198>
   19f84:	cmp	r0, #0
   19f88:	beq	19f9c <__assert_fail@plt+0x9134>
   19f8c:	movw	r0, #0
   19f90:	and	r0, r0, #1
   19f94:	strb	r0, [fp, #-9]
   19f98:	b	19ff0 <__assert_fail@plt+0x9188>
   19f9c:	add	r0, sp, #7
   19fa0:	movw	r1, #44739	; 0xaec3
   19fa4:	movt	r1, #1
   19fa8:	bl	10c7c <strcmp@plt>
   19fac:	cmp	r0, #0
   19fb0:	movw	r0, #1
   19fb4:	str	r0, [sp]
   19fb8:	beq	19fdc <__assert_fail@plt+0x9174>
   19fbc:	add	r0, sp, #7
   19fc0:	movw	r1, #44741	; 0xaec5
   19fc4:	movt	r1, #1
   19fc8:	bl	10c7c <strcmp@plt>
   19fcc:	cmp	r0, #0
   19fd0:	movw	r0, #0
   19fd4:	moveq	r0, #1
   19fd8:	str	r0, [sp]
   19fdc:	ldr	r0, [sp]
   19fe0:	mvn	r1, #0
   19fe4:	eor	r0, r0, r1
   19fe8:	and	r0, r0, #1
   19fec:	strb	r0, [fp, #-9]
   19ff0:	ldrb	r0, [fp, #-9]
   19ff4:	and	r0, r0, #1
   19ff8:	sub	sp, fp, #8
   19ffc:	pop	{r4, r5, fp, pc}
   1a000:	push	{fp, lr}
   1a004:	mov	fp, sp
   1a008:	sub	sp, sp, #16
   1a00c:	str	r0, [fp, #-4]
   1a010:	str	r1, [sp, #8]
   1a014:	str	r2, [sp, #4]
   1a018:	ldr	r0, [fp, #-4]
   1a01c:	ldr	r1, [sp, #8]
   1a020:	ldr	r2, [sp, #4]
   1a024:	bl	1a030 <__assert_fail@plt+0x91c8>
   1a028:	mov	sp, fp
   1a02c:	pop	{fp, pc}
   1a030:	push	{fp, lr}
   1a034:	mov	fp, sp
   1a038:	sub	sp, sp, #24
   1a03c:	str	r0, [fp, #-8]
   1a040:	str	r1, [sp, #12]
   1a044:	str	r2, [sp, #8]
   1a048:	ldr	r0, [fp, #-8]
   1a04c:	bl	1a130 <__assert_fail@plt+0x92c8>
   1a050:	str	r0, [sp, #4]
   1a054:	ldr	r0, [sp, #4]
   1a058:	movw	r1, #0
   1a05c:	cmp	r0, r1
   1a060:	bne	1a088 <__assert_fail@plt+0x9220>
   1a064:	ldr	r0, [sp, #8]
   1a068:	cmp	r0, #0
   1a06c:	bls	1a07c <__assert_fail@plt+0x9214>
   1a070:	ldr	r0, [sp, #12]
   1a074:	movw	r1, #0
   1a078:	strb	r1, [r0]
   1a07c:	movw	r0, #22
   1a080:	str	r0, [fp, #-4]
   1a084:	b	1a104 <__assert_fail@plt+0x929c>
   1a088:	ldr	r0, [sp, #4]
   1a08c:	bl	10da8 <strlen@plt>
   1a090:	str	r0, [sp]
   1a094:	ldr	r0, [sp]
   1a098:	ldr	lr, [sp, #8]
   1a09c:	cmp	r0, lr
   1a0a0:	bcs	1a0c4 <__assert_fail@plt+0x925c>
   1a0a4:	ldr	r0, [sp, #12]
   1a0a8:	ldr	r1, [sp, #4]
   1a0ac:	ldr	r2, [sp]
   1a0b0:	add	r2, r2, #1
   1a0b4:	bl	10cb8 <memcpy@plt>
   1a0b8:	movw	r0, #0
   1a0bc:	str	r0, [fp, #-4]
   1a0c0:	b	1a104 <__assert_fail@plt+0x929c>
   1a0c4:	ldr	r0, [sp, #8]
   1a0c8:	cmp	r0, #0
   1a0cc:	bls	1a0fc <__assert_fail@plt+0x9294>
   1a0d0:	ldr	r0, [sp, #12]
   1a0d4:	ldr	r1, [sp, #4]
   1a0d8:	ldr	r2, [sp, #8]
   1a0dc:	sub	r2, r2, #1
   1a0e0:	bl	10cb8 <memcpy@plt>
   1a0e4:	ldr	r0, [sp, #12]
   1a0e8:	ldr	r1, [sp, #8]
   1a0ec:	sub	r1, r1, #1
   1a0f0:	add	r0, r0, r1
   1a0f4:	movw	r1, #0
   1a0f8:	strb	r1, [r0]
   1a0fc:	movw	r0, #34	; 0x22
   1a100:	str	r0, [fp, #-4]
   1a104:	ldr	r0, [fp, #-4]
   1a108:	mov	sp, fp
   1a10c:	pop	{fp, pc}
   1a110:	push	{fp, lr}
   1a114:	mov	fp, sp
   1a118:	sub	sp, sp, #8
   1a11c:	str	r0, [sp, #4]
   1a120:	ldr	r0, [sp, #4]
   1a124:	bl	1a130 <__assert_fail@plt+0x92c8>
   1a128:	mov	sp, fp
   1a12c:	pop	{fp, pc}
   1a130:	push	{fp, lr}
   1a134:	mov	fp, sp
   1a138:	sub	sp, sp, #8
   1a13c:	str	r0, [sp, #4]
   1a140:	ldr	r0, [sp, #4]
   1a144:	movw	r1, #0
   1a148:	bl	10e08 <setlocale@plt>
   1a14c:	str	r0, [sp]
   1a150:	ldr	r0, [sp]
   1a154:	mov	sp, fp
   1a158:	pop	{fp, pc}
   1a15c:	cmp	r3, #0
   1a160:	cmpeq	r2, #0
   1a164:	bne	1a188 <__assert_fail@plt+0x9320>
   1a168:	cmp	r1, #0
   1a16c:	movlt	r1, #-2147483648	; 0x80000000
   1a170:	movlt	r0, #0
   1a174:	blt	1a184 <__assert_fail@plt+0x931c>
   1a178:	cmpeq	r0, #0
   1a17c:	mvnne	r1, #-2147483648	; 0x80000000
   1a180:	mvnne	r0, #0
   1a184:	b	1a26c <__assert_fail@plt+0x9404>
   1a188:	sub	sp, sp, #8
   1a18c:	push	{sp, lr}
   1a190:	cmp	r1, #0
   1a194:	blt	1a1b4 <__assert_fail@plt+0x934c>
   1a198:	cmp	r3, #0
   1a19c:	blt	1a1e8 <__assert_fail@plt+0x9380>
   1a1a0:	bl	1a27c <__assert_fail@plt+0x9414>
   1a1a4:	ldr	lr, [sp, #4]
   1a1a8:	add	sp, sp, #8
   1a1ac:	pop	{r2, r3}
   1a1b0:	bx	lr
   1a1b4:	rsbs	r0, r0, #0
   1a1b8:	sbc	r1, r1, r1, lsl #1
   1a1bc:	cmp	r3, #0
   1a1c0:	blt	1a20c <__assert_fail@plt+0x93a4>
   1a1c4:	bl	1a27c <__assert_fail@plt+0x9414>
   1a1c8:	ldr	lr, [sp, #4]
   1a1cc:	add	sp, sp, #8
   1a1d0:	pop	{r2, r3}
   1a1d4:	rsbs	r0, r0, #0
   1a1d8:	sbc	r1, r1, r1, lsl #1
   1a1dc:	rsbs	r2, r2, #0
   1a1e0:	sbc	r3, r3, r3, lsl #1
   1a1e4:	bx	lr
   1a1e8:	rsbs	r2, r2, #0
   1a1ec:	sbc	r3, r3, r3, lsl #1
   1a1f0:	bl	1a27c <__assert_fail@plt+0x9414>
   1a1f4:	ldr	lr, [sp, #4]
   1a1f8:	add	sp, sp, #8
   1a1fc:	pop	{r2, r3}
   1a200:	rsbs	r0, r0, #0
   1a204:	sbc	r1, r1, r1, lsl #1
   1a208:	bx	lr
   1a20c:	rsbs	r2, r2, #0
   1a210:	sbc	r3, r3, r3, lsl #1
   1a214:	bl	1a27c <__assert_fail@plt+0x9414>
   1a218:	ldr	lr, [sp, #4]
   1a21c:	add	sp, sp, #8
   1a220:	pop	{r2, r3}
   1a224:	rsbs	r2, r2, #0
   1a228:	sbc	r3, r3, r3, lsl #1
   1a22c:	bx	lr
   1a230:	cmp	r3, #0
   1a234:	cmpeq	r2, #0
   1a238:	bne	1a250 <__assert_fail@plt+0x93e8>
   1a23c:	cmp	r1, #0
   1a240:	cmpeq	r0, #0
   1a244:	mvnne	r1, #0
   1a248:	mvnne	r0, #0
   1a24c:	b	1a26c <__assert_fail@plt+0x9404>
   1a250:	sub	sp, sp, #8
   1a254:	push	{sp, lr}
   1a258:	bl	1a27c <__assert_fail@plt+0x9414>
   1a25c:	ldr	lr, [sp, #4]
   1a260:	add	sp, sp, #8
   1a264:	pop	{r2, r3}
   1a268:	bx	lr
   1a26c:	push	{r1, lr}
   1a270:	mov	r0, #8
   1a274:	bl	10c70 <raise@plt>
   1a278:	pop	{r1, pc}
   1a27c:	cmp	r1, r3
   1a280:	cmpeq	r0, r2
   1a284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a288:	mov	r4, r0
   1a28c:	movcc	r0, #0
   1a290:	mov	r5, r1
   1a294:	ldr	lr, [sp, #36]	; 0x24
   1a298:	movcc	r1, r0
   1a29c:	bcc	1a398 <__assert_fail@plt+0x9530>
   1a2a0:	cmp	r3, #0
   1a2a4:	clzeq	ip, r2
   1a2a8:	clzne	ip, r3
   1a2ac:	addeq	ip, ip, #32
   1a2b0:	cmp	r5, #0
   1a2b4:	clzeq	r1, r4
   1a2b8:	addeq	r1, r1, #32
   1a2bc:	clzne	r1, r5
   1a2c0:	sub	ip, ip, r1
   1a2c4:	sub	sl, ip, #32
   1a2c8:	lsl	r9, r3, ip
   1a2cc:	rsb	fp, ip, #32
   1a2d0:	orr	r9, r9, r2, lsl sl
   1a2d4:	orr	r9, r9, r2, lsr fp
   1a2d8:	lsl	r8, r2, ip
   1a2dc:	cmp	r5, r9
   1a2e0:	cmpeq	r4, r8
   1a2e4:	movcc	r0, #0
   1a2e8:	movcc	r1, r0
   1a2ec:	bcc	1a308 <__assert_fail@plt+0x94a0>
   1a2f0:	mov	r0, #1
   1a2f4:	subs	r4, r4, r8
   1a2f8:	lsl	r1, r0, sl
   1a2fc:	orr	r1, r1, r0, lsr fp
   1a300:	lsl	r0, r0, ip
   1a304:	sbc	r5, r5, r9
   1a308:	cmp	ip, #0
   1a30c:	beq	1a398 <__assert_fail@plt+0x9530>
   1a310:	lsr	r6, r8, #1
   1a314:	orr	r6, r6, r9, lsl #31
   1a318:	lsr	r7, r9, #1
   1a31c:	mov	r2, ip
   1a320:	b	1a344 <__assert_fail@plt+0x94dc>
   1a324:	subs	r3, r4, r6
   1a328:	sbc	r8, r5, r7
   1a32c:	adds	r3, r3, r3
   1a330:	adc	r8, r8, r8
   1a334:	adds	r4, r3, #1
   1a338:	adc	r5, r8, #0
   1a33c:	subs	r2, r2, #1
   1a340:	beq	1a360 <__assert_fail@plt+0x94f8>
   1a344:	cmp	r5, r7
   1a348:	cmpeq	r4, r6
   1a34c:	bcs	1a324 <__assert_fail@plt+0x94bc>
   1a350:	adds	r4, r4, r4
   1a354:	adc	r5, r5, r5
   1a358:	subs	r2, r2, #1
   1a35c:	bne	1a344 <__assert_fail@plt+0x94dc>
   1a360:	lsr	r3, r4, ip
   1a364:	orr	r3, r3, r5, lsl fp
   1a368:	lsr	r2, r5, ip
   1a36c:	orr	r3, r3, r5, lsr sl
   1a370:	adds	r0, r0, r4
   1a374:	mov	r4, r3
   1a378:	lsl	r3, r2, ip
   1a37c:	orr	r3, r3, r4, lsl sl
   1a380:	lsl	ip, r4, ip
   1a384:	orr	r3, r3, r4, lsr fp
   1a388:	adc	r1, r1, r5
   1a38c:	subs	r0, r0, ip
   1a390:	mov	r5, r2
   1a394:	sbc	r1, r1, r3
   1a398:	cmp	lr, #0
   1a39c:	strdne	r4, [lr]
   1a3a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3a8:	mov	r7, r0
   1a3ac:	ldr	r6, [pc, #72]	; 1a3fc <__assert_fail@plt+0x9594>
   1a3b0:	ldr	r5, [pc, #72]	; 1a400 <__assert_fail@plt+0x9598>
   1a3b4:	add	r6, pc, r6
   1a3b8:	add	r5, pc, r5
   1a3bc:	sub	r6, r6, r5
   1a3c0:	mov	r8, r1
   1a3c4:	mov	r9, r2
   1a3c8:	bl	10c38 <calloc@plt-0x20>
   1a3cc:	asrs	r6, r6, #2
   1a3d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a3d4:	mov	r4, #0
   1a3d8:	add	r4, r4, #1
   1a3dc:	ldr	r3, [r5], #4
   1a3e0:	mov	r2, r9
   1a3e4:	mov	r1, r8
   1a3e8:	mov	r0, r7
   1a3ec:	blx	r3
   1a3f0:	cmp	r6, r4
   1a3f4:	bne	1a3d8 <__assert_fail@plt+0x9570>
   1a3f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a3fc:	andeq	r0, r1, r0, asr fp
   1a400:	andeq	r0, r1, r8, asr #22
   1a404:	bx	lr
   1a408:	ldr	r3, [pc, #12]	; 1a41c <__assert_fail@plt+0x95b4>
   1a40c:	mov	r1, #0
   1a410:	add	r3, pc, r3
   1a414:	ldr	r2, [r3]
   1a418:	b	10dcc <__cxa_atexit@plt>
   1a41c:			; <UNDEFINED> instruction: 0x00010cb0

Disassembly of section .fini:

0001a420 <.fini>:
   1a420:	push	{r3, lr}
   1a424:	pop	{r3, pc}
