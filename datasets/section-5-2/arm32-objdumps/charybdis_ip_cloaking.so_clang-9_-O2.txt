
../repos/charybdis/extensions/.libs/ip_cloaking.so:     file format elf32-littlearm


Disassembly of section .init:

00000698 <_init>:
 698:	push	{r3, lr}
 69c:	bl	76c <call_weak_fn>
 6a0:	pop	{r3, pc}

Disassembly of section .plt:

000006a4 <.plt>:
 6a4:	push	{lr}		; (str lr, [sp, #-4]!)
 6a8:	ldr	lr, [pc, #4]	; 6b4 <.plt+0x10>
 6ac:	add	lr, pc, lr
 6b0:	ldr	pc, [lr, #8]!
 6b4:	.word	0x0001194c

000006b8 <calloc@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2380]!	; 0x94c

000006c4 <strcmp@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2372]!	; 0x944

000006d0 <__cxa_finalize@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2364]!	; 0x93c

000006dc <rb_outofmemory@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2356]!	; 0x934

000006e8 <find_umode_slot@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2348]!	; 0x92c

000006f4 <fnv_hash@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2340]!	; 0x924

00000700 <sendto_server@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2332]!	; 0x91c

0000070c <__gmon_start__@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2324]!	; 0x914

00000718 <__ctype_b_loc@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2316]!	; 0x90c

00000724 <sendto_one_numeric@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2308]!	; 0x904

00000730 <strchr@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2300]!	; 0x8fc

0000073c <change_nick_user_host@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2292]!	; 0x8f4

00000748 <rb_strlcpy@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2284]!	; 0x8ec

00000754 <irccmp@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2276]!	; 0x8e4

00000760 <construct_umodebuf@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2268]!	; 0x8dc

Disassembly of section .text:

0000076c <call_weak_fn>:
 76c:	ldr	r3, [pc, #20]	; 788 <call_weak_fn+0x1c>
 770:	ldr	r2, [pc, #20]	; 78c <call_weak_fn+0x20>
 774:	add	r3, pc, r3
 778:	ldr	r2, [r3, r2]
 77c:	cmp	r2, #0
 780:	bxeq	lr
 784:	b	70c <__gmon_start__@plt>
 788:	.word	0x00011884
 78c:	.word	0x00000058

00000790 <deregister_tm_clones>:
 790:	ldr	r0, [pc, #44]	; 7c4 <deregister_tm_clones+0x34>
 794:	ldr	r3, [pc, #44]	; 7c8 <deregister_tm_clones+0x38>
 798:	add	r0, pc, r0
 79c:	add	r3, pc, r3
 7a0:	cmp	r3, r0
 7a4:	ldr	r3, [pc, #32]	; 7cc <deregister_tm_clones+0x3c>
 7a8:	add	r3, pc, r3
 7ac:	bxeq	lr
 7b0:	ldr	r2, [pc, #24]	; 7d0 <deregister_tm_clones+0x40>
 7b4:	ldr	r3, [r3, r2]
 7b8:	cmp	r3, #0
 7bc:	bxeq	lr
 7c0:	bx	r3
 7c4:	.word	0x00011918
 7c8:	.word	0x00011914
 7cc:	.word	0x00011850
 7d0:	.word	0x0000004c

000007d4 <register_tm_clones>:
 7d4:	ldr	r0, [pc, #56]	; 814 <register_tm_clones+0x40>
 7d8:	ldr	r3, [pc, #56]	; 818 <register_tm_clones+0x44>
 7dc:	add	r0, pc, r0
 7e0:	add	r3, pc, r3
 7e4:	sub	r1, r3, r0
 7e8:	ldr	r3, [pc, #44]	; 81c <register_tm_clones+0x48>
 7ec:	asr	r1, r1, #2
 7f0:	add	r3, pc, r3
 7f4:	add	r1, r1, r1, lsr #31
 7f8:	asrs	r1, r1, #1
 7fc:	bxeq	lr
 800:	ldr	r2, [pc, #24]	; 820 <register_tm_clones+0x4c>
 804:	ldr	r3, [r3, r2]
 808:	cmp	r3, #0
 80c:	bxeq	lr
 810:	bx	r3
 814:	.word	0x000118d4
 818:	.word	0x000118d0
 81c:	.word	0x00011808
 820:	.word	0x00000060

00000824 <__do_global_dtors_aux>:
 824:	ldr	r3, [pc, #76]	; 878 <__do_global_dtors_aux+0x54>
 828:	ldr	r2, [pc, #76]	; 87c <__do_global_dtors_aux+0x58>
 82c:	add	r3, pc, r3
 830:	add	r2, pc, r2
 834:	ldrb	r3, [r3]
 838:	cmp	r3, #0
 83c:	bxne	lr
 840:	ldr	r3, [pc, #56]	; 880 <__do_global_dtors_aux+0x5c>
 844:	push	{r4, lr}
 848:	ldr	r3, [r2, r3]
 84c:	cmp	r3, #0
 850:	beq	860 <__do_global_dtors_aux+0x3c>
 854:	ldr	r3, [pc, #40]	; 884 <__do_global_dtors_aux+0x60>
 858:	ldr	r0, [pc, r3]
 85c:	bl	6d0 <__cxa_finalize@plt>
 860:	bl	790 <deregister_tm_clones>
 864:	ldr	r3, [pc, #28]	; 888 <__do_global_dtors_aux+0x64>
 868:	mov	r2, #1
 86c:	add	r3, pc, r3
 870:	strb	r2, [r3]
 874:	pop	{r4, pc}
 878:	.word	0x00011884
 87c:	.word	0x000117c8
 880:	.word	0x00000048
 884:	.word	0x00011808
 888:	.word	0x00011844

0000088c <frame_dummy>:
 88c:	b	7d4 <register_tm_clones>

00000890 <check_umode_change>:
 890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 894:	add	fp, sp, #28
 898:	sub	sp, sp, #20
 89c:	ldr	r4, [r0]
 8a0:	mov	r7, r4
 8a4:	ldr	r1, [r7, #64]!	; 0x40
 8a8:	tst	r1, #8192	; 0x2000
 8ac:	beq	a54 <check_umode_change+0x1c4>
 8b0:	ldrh	r2, [r4, #80]	; 0x50
 8b4:	cmp	r2, #64	; 0x40
 8b8:	bne	a54 <check_umode_change+0x1c4>
 8bc:	ldr	r0, [r0, #4]
 8c0:	ldr	r5, [r4, #56]	; 0x38
 8c4:	ldr	r2, [pc, #772]	; bd0 <check_umode_change+0x340>
 8c8:	ldr	r2, [pc, r2]
 8cc:	eor	r0, r5, r0
 8d0:	ldr	r6, [r2, #416]	; 0x1a0
 8d4:	tst	r0, r6
 8d8:	beq	a54 <check_umode_change+0x1c4>
 8dc:	tst	r6, r5
 8e0:	beq	928 <check_umode_change+0x98>
 8e4:	tst	r1, #16777216	; 0x1000000
 8e8:	bne	918 <check_umode_change+0x88>
 8ec:	ldr	r0, [r4, #432]	; 0x1b0
 8f0:	ldr	sl, [r0, #432]	; 0x1b0
 8f4:	cmp	sl, #0
 8f8:	beq	918 <check_umode_change+0x88>
 8fc:	tst	r1, #131072	; 0x20000
 900:	beq	a5c <check_umode_change+0x1cc>
 904:	add	r0, r4, #163	; 0xa3
 908:	mov	r1, sl
 90c:	bl	6c4 <strcmp@plt>
 910:	cmp	r0, #0
 914:	beq	a5c <check_umode_change+0x1cc>
 918:	bic	r0, r5, r6
 91c:	str	r0, [r4, #56]	; 0x38
 920:	sub	sp, fp, #28
 924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 928:	ldr	r0, [r4, #432]	; 0x1b0
 92c:	ldr	r1, [r0, #432]	; 0x1b0
 930:	cmp	r1, #0
 934:	beq	a54 <check_umode_change+0x1c4>
 938:	add	r0, r4, #163	; 0xa3
 93c:	bl	6c4 <strcmp@plt>
 940:	cmp	r0, #0
 944:	bne	a54 <check_umode_change+0x1c4>
 948:	ldr	r2, [pc, #688]	; c00 <check_umode_change+0x370>
 94c:	add	r8, r4, #227	; 0xe3
 950:	mov	r0, r4
 954:	mov	r1, #396	; 0x18c
 958:	mov	r3, r8
 95c:	add	r2, pc, r2
 960:	bl	724 <sendto_one_numeric@plt>
 964:	ldr	r0, [pc, #664]	; c04 <check_umode_change+0x374>
 968:	mov	r6, r4
 96c:	add	r9, r4, #88	; 0x58
 970:	ldr	r0, [pc, r0]
 974:	ldr	r0, [r0]
 978:	ldr	r1, [pc, #648]	; c08 <check_umode_change+0x378>
 97c:	ldr	r1, [pc, r1]
 980:	ldr	r1, [r1]
 984:	ldr	r5, [pc, #640]	; c0c <check_umode_change+0x37c>
 988:	ldr	r5, [pc, r5]
 98c:	ldrb	r3, [r6, #396]!	; 0x18c
 990:	ldrb	r2, [r5, #396]!	; 0x18c
 994:	ldr	ip, [pc, #628]	; c10 <check_umode_change+0x380>
 998:	cmp	r3, #0
 99c:	mov	r3, r6
 9a0:	moveq	r3, r9
 9a4:	sub	sl, r5, #308	; 0x134
 9a8:	cmp	r2, #0
 9ac:	mov	r2, r5
 9b0:	add	ip, pc, ip
 9b4:	moveq	r2, sl
 9b8:	str	ip, [sp]
 9bc:	stmib	sp, {r2, r3, r8}
 9c0:	orr	r2, r0, r1
 9c4:	mov	r0, #0
 9c8:	mov	r1, #0
 9cc:	mov	r3, #0
 9d0:	bl	700 <sendto_server@plt>
 9d4:	ldr	r0, [pc, #568]	; c14 <check_umode_change+0x384>
 9d8:	ldr	r0, [pc, r0]
 9dc:	ldr	r3, [r0]
 9e0:	ldr	r0, [pc, #560]	; c18 <check_umode_change+0x388>
 9e4:	ldr	r0, [pc, r0]
 9e8:	ldrb	r1, [r6]
 9ec:	ldr	r2, [r0]
 9f0:	ldrb	r0, [r5]
 9f4:	ldr	ip, [pc, #544]	; c1c <check_umode_change+0x38c>
 9f8:	cmp	r1, #0
 9fc:	mov	r1, #0
 a00:	moveq	r6, r9
 a04:	cmp	r0, #0
 a08:	add	ip, pc, ip
 a0c:	mov	r0, #0
 a10:	moveq	r5, sl
 a14:	str	ip, [sp]
 a18:	stmib	sp, {r5, r6, r8}
 a1c:	bl	700 <sendto_server@plt>
 a20:	ldr	r0, [pc, #504]	; c20 <check_umode_change+0x390>
 a24:	mov	r1, #0
 a28:	add	r2, r4, #152	; 0x98
 a2c:	mov	r3, r8
 a30:	str	r1, [sp]
 a34:	mov	r1, r9
 a38:	add	r0, pc, r0
 a3c:	str	r0, [sp, #4]
 a40:	mov	r0, r4
 a44:	bl	73c <change_nick_user_host@plt>
 a48:	ldr	r0, [r7]
 a4c:	bic	r0, r0, #131072	; 0x20000
 a50:	str	r0, [r7]
 a54:	sub	sp, fp, #28
 a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a5c:	add	r6, r4, #163	; 0xa3
 a60:	mov	r1, sl
 a64:	mov	r0, r6
 a68:	bl	6c4 <strcmp@plt>
 a6c:	cmp	r0, #0
 a70:	beq	bb0 <check_umode_change+0x320>
 a74:	add	r1, r4, #227	; 0xe3
 a78:	mov	r3, sl
 a7c:	str	r1, [sp, #16]
 a80:	cmp	r1, sl
 a84:	mov	r1, #396	; 0x18c
 a88:	ldr	r0, [pc, #324]	; bd4 <check_umode_change+0x344>
 a8c:	ldr	r2, [pc, #324]	; bd8 <check_umode_change+0x348>
 a90:	add	r0, pc, r0
 a94:	add	r2, pc, r2
 a98:	movne	r2, r0
 a9c:	mov	r0, r4
 aa0:	bl	724 <sendto_one_numeric@plt>
 aa4:	ldr	r0, [pc, #304]	; bdc <check_umode_change+0x34c>
 aa8:	mov	r5, r4
 aac:	add	r9, r4, #88	; 0x58
 ab0:	ldr	r0, [pc, r0]
 ab4:	ldr	r0, [r0]
 ab8:	ldr	r1, [pc, #288]	; be0 <check_umode_change+0x350>
 abc:	ldr	r1, [pc, r1]
 ac0:	ldr	r1, [r1]
 ac4:	ldr	r6, [pc, #280]	; be4 <check_umode_change+0x354>
 ac8:	ldr	r6, [pc, r6]
 acc:	ldrb	r3, [r5, #396]!	; 0x18c
 ad0:	ldrb	r2, [r6, #396]!	; 0x18c
 ad4:	ldr	ip, [pc, #268]	; be8 <check_umode_change+0x358>
 ad8:	cmp	r3, #0
 adc:	mov	r3, r5
 ae0:	moveq	r3, r9
 ae4:	sub	r8, r6, #308	; 0x134
 ae8:	cmp	r2, #0
 aec:	mov	r2, r6
 af0:	add	ip, pc, ip
 af4:	moveq	r2, r8
 af8:	str	ip, [sp]
 afc:	stmib	sp, {r2, r3, sl}
 b00:	orr	r2, r0, r1
 b04:	mov	r0, #0
 b08:	mov	r1, #0
 b0c:	mov	r3, #0
 b10:	bl	700 <sendto_server@plt>
 b14:	ldr	r0, [pc, #208]	; bec <check_umode_change+0x35c>
 b18:	ldr	r0, [pc, r0]
 b1c:	ldr	r3, [r0]
 b20:	ldr	r0, [pc, #200]	; bf0 <check_umode_change+0x360>
 b24:	ldr	r0, [pc, r0]
 b28:	ldrb	r1, [r5]
 b2c:	ldr	r2, [r0]
 b30:	ldrb	r0, [r6]
 b34:	ldr	ip, [pc, #184]	; bf4 <check_umode_change+0x364>
 b38:	cmp	r1, #0
 b3c:	mov	r1, #0
 b40:	str	sl, [sp, #12]
 b44:	moveq	r5, r9
 b48:	str	r5, [sp, #8]
 b4c:	cmp	r0, #0
 b50:	add	ip, pc, ip
 b54:	mov	r0, #0
 b58:	moveq	r6, r8
 b5c:	str	ip, [sp]
 b60:	str	r6, [sp, #4]
 b64:	bl	700 <sendto_server@plt>
 b68:	ldr	r0, [pc, #136]	; bf8 <check_umode_change+0x368>
 b6c:	mov	r1, #0
 b70:	add	r2, r4, #152	; 0x98
 b74:	mov	r3, sl
 b78:	str	r1, [sp]
 b7c:	mov	r1, r9
 b80:	add	r0, pc, r0
 b84:	str	r0, [sp, #4]
 b88:	mov	r0, r4
 b8c:	bl	73c <change_nick_user_host@plt>
 b90:	ldr	r2, [sp, #16]
 b94:	ldr	r0, [r7]
 b98:	cmp	r2, sl
 b9c:	bic	r1, r0, #131072	; 0x20000
 ba0:	orrne	r1, r0, #131072	; 0x20000
 ba4:	str	r1, [r7]
 ba8:	sub	sp, fp, #28
 bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 bb0:	ldr	r2, [pc, #68]	; bfc <check_umode_change+0x36c>
 bb4:	mov	r0, r4
 bb8:	mov	r1, #396	; 0x18c
 bbc:	mov	r3, r6
 bc0:	add	r2, pc, r2
 bc4:	sub	sp, fp, #28
 bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bcc:	b	724 <sendto_one_numeric@plt>
 bd0:	.word	0x00011784
 bd4:	.word	0x00000511
 bd8:	.word	0x00000529
 bdc:	.word	0x00011598
 be0:	.word	0x00011598
 be4:	.word	0x00011594
 be8:	.word	0x000004e0
 bec:	.word	0x0001153c
 bf0:	.word	0x00011524
 bf4:	.word	0x00000493
 bf8:	.word	0x0000047e
 bfc:	.word	0x000003e1
 c00:	.word	0x00000661
 c04:	.word	0x000116d8
 c08:	.word	0x000116d8
 c0c:	.word	0x000116d4
 c10:	.word	0x00000620
 c14:	.word	0x0001167c
 c18:	.word	0x00011664
 c1c:	.word	0x000005db
 c20:	.word	0x000005c6

00000c24 <check_new_user>:
 c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c28:	add	fp, sp, #28
 c2c:	sub	sp, sp, #12
 c30:	mov	sl, r0
 c34:	ldrb	r0, [r0, #67]	; 0x43
 c38:	tst	r0, #1
 c3c:	bne	cd0 <check_new_user+0xac>
 c40:	mov	r0, #1
 c44:	mov	r1, #64	; 0x40
 c48:	bl	6b8 <calloc@plt>
 c4c:	cmp	r0, #0
 c50:	beq	f2c <check_new_user+0x308>
 c54:	ldr	r1, [sl, #432]	; 0x1b0
 c58:	add	r7, sl, #227	; 0xe3
 c5c:	add	r4, sl, #64	; 0x40
 c60:	str	r0, [r1, #432]	; 0x1b0
 c64:	movw	r0, #291	; 0x123
 c68:	add	r1, sl, r0
 c6c:	mov	r0, r7
 c70:	bl	754 <irccmp@plt>
 c74:	mov	r5, r0
 c78:	ldr	r0, [sl, #432]	; 0x1b0
 c7c:	mov	r1, #32
 c80:	ldr	r8, [r0, #432]	; 0x1b0
 c84:	mov	r0, r7
 c88:	bl	6f4 <fnv_hash@plt>
 c8c:	mov	r6, r0
 c90:	mov	r0, r8
 c94:	mov	r1, r7
 c98:	mov	r2, #64	; 0x40
 c9c:	str	r7, [sp, #4]
 ca0:	bl	748 <rb_strlcpy@plt>
 ca4:	cmp	r5, #0
 ca8:	str	r4, [sp, #8]
 cac:	beq	dac <check_new_user+0x188>
 cb0:	str	sl, [sp]
 cb4:	movw	r5, #60495	; 0xec4f
 cb8:	mov	r4, #26
 cbc:	mov	r7, r8
 cc0:	ldr	r9, [pc, #620]	; f34 <check_new_user+0x310>
 cc4:	movt	r5, #20164	; 0x4ec4
 cc8:	add	r9, pc, r9
 ccc:	b	d30 <check_new_user+0x10c>
 cd0:	ldr	r0, [sl, #56]	; 0x38
 cd4:	ldr	r1, [pc, #596]	; f30 <check_new_user+0x30c>
 cd8:	ldr	r1, [pc, r1]
 cdc:	ldr	r1, [r1, #416]	; 0x1a0
 ce0:	bic	r0, r0, r1
 ce4:	str	r0, [sl, #56]	; 0x38
 ce8:	sub	sp, fp, #28
 cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 cf0:	bl	718 <__ctype_b_loc@plt>
 cf4:	cmp	sl, #45	; 0x2d
 cf8:	beq	d2c <check_new_user+0x108>
 cfc:	ldr	r0, [r0]
 d00:	add	r0, r0, sl, lsl #1
 d04:	ldrh	r0, [r0]
 d08:	ands	r0, r0, #2048	; 0x800
 d0c:	bne	d2c <check_new_user+0x108>
 d10:	add	r0, r6, sl
 d14:	ror	r6, r6, #31
 d18:	umull	r1, r2, r0, r5
 d1c:	lsr	r1, r2, #3
 d20:	mls	r0, r1, r4, r0
 d24:	ldrb	r0, [r9, r0]
 d28:	strb	r0, [r7]
 d2c:	add	r7, r7, #1
 d30:	ldrb	sl, [r7]
 d34:	cmp	sl, #0
 d38:	cmpne	sl, #46	; 0x2e
 d3c:	bne	cf0 <check_new_user+0xcc>
 d40:	ldrb	r5, [r8]
 d44:	ldr	sl, [sp]
 d48:	cmp	r5, #0
 d4c:	beq	eac <check_new_user+0x288>
 d50:	add	r4, r8, #1
 d54:	bl	718 <__ctype_b_loc@plt>
 d58:	movw	r1, #52429	; 0xcccd
 d5c:	movt	r1, #52428	; 0xcccc
 d60:	b	d74 <check_new_user+0x150>
 d64:	ldrb	r5, [r4], #1
 d68:	ror	r6, r6, #31
 d6c:	cmp	r5, #0
 d70:	beq	eac <check_new_user+0x288>
 d74:	ldr	r3, [r0]
 d78:	uxtb	r2, r5
 d7c:	add	r3, r3, r2, lsl #1
 d80:	ldrb	r3, [r3, #1]
 d84:	tst	r3, #8
 d88:	beq	d64 <check_new_user+0x140>
 d8c:	add	r2, r6, r2
 d90:	umull	r3, r7, r2, r1
 d94:	lsr	r3, r7, #3
 d98:	add	r3, r3, r3, lsl #2
 d9c:	sub	r2, r2, r3, lsl #1
 da0:	orr	r2, r2, #48	; 0x30
 da4:	strb	r2, [r4, #-1]
 da8:	b	d64 <check_new_user+0x140>
 dac:	mov	r0, r8
 db0:	mov	r1, #58	; 0x3a
 db4:	bl	730 <strchr@plt>
 db8:	cmp	r0, #0
 dbc:	beq	df0 <check_new_user+0x1cc>
 dc0:	mov	r1, #0
 dc4:	mov	r0, r8
 dc8:	b	dd4 <check_new_user+0x1b0>
 dcc:	add	r1, r1, #1
 dd0:	add	r0, r0, #1
 dd4:	ldrb	r2, [r0]
 dd8:	cmp	r2, #58	; 0x3a
 ddc:	beq	dcc <check_new_user+0x1a8>
 de0:	cmp	r2, #0
 de4:	bne	dd0 <check_new_user+0x1ac>
 de8:	mov	r3, #1
 dec:	b	e0c <check_new_user+0x1e8>
 df0:	mov	r0, r8
 df4:	mov	r1, #46	; 0x2e
 df8:	bl	730 <strchr@plt>
 dfc:	mov	r1, #0
 e00:	cmp	r0, #0
 e04:	mov	r3, #0
 e08:	beq	eac <check_new_user+0x288>
 e0c:	ldr	lr, [pc, #292]	; f38 <check_new_user+0x314>
 e10:	add	r1, r1, r1, lsr #31
 e14:	movw	ip, #52429	; 0xcccd
 e18:	mov	r2, #0
 e1c:	eor	r9, r3, #1
 e20:	movt	ip, #52428	; 0xcccc
 e24:	asr	r1, r1, #1
 e28:	add	lr, pc, lr
 e2c:	b	e34 <check_new_user+0x210>
 e30:	add	r8, r8, #1
 e34:	ldrb	r7, [r8]
 e38:	cmp	r7, #46	; 0x2e
 e3c:	cmpne	r7, #58	; 0x3a
 e40:	bne	e50 <check_new_user+0x22c>
 e44:	add	r2, r2, #1
 e48:	add	r8, r8, #1
 e4c:	b	e34 <check_new_user+0x210>
 e50:	cmp	r7, #0
 e54:	beq	eac <check_new_user+0x288>
 e58:	cmp	r2, r1
 e5c:	mov	r5, #0
 e60:	mov	r4, #0
 e64:	mov	r0, r3
 e68:	movwlt	r5, #1
 e6c:	cmp	r2, #2
 e70:	movwlt	r4, #1
 e74:	cmp	r3, #0
 e78:	movwne	r0, #1
 e7c:	tst	r0, r5
 e80:	andseq	r0, r9, r4
 e84:	bne	e30 <check_new_user+0x20c>
 e88:	add	r0, r6, r7
 e8c:	ror	r6, r6, #31
 e90:	umull	r4, r5, r0, ip
 e94:	lsr	r4, r5, #4
 e98:	add	r4, r4, r4, lsl #2
 e9c:	sub	r0, r0, r4, lsl #2
 ea0:	ldrb	r0, [lr, r0]
 ea4:	strb	r0, [r8]
 ea8:	b	e30 <check_new_user+0x20c>
 eac:	ldr	r5, [sp, #8]
 eb0:	ldrb	r0, [r5, #2]
 eb4:	tst	r0, #2
 eb8:	bne	ec4 <check_new_user+0x2a0>
 ebc:	ldr	r0, [sl, #56]	; 0x38
 ec0:	b	edc <check_new_user+0x2b8>
 ec4:	ldr	r0, [sl, #56]	; 0x38
 ec8:	ldr	r1, [pc, #108]	; f3c <check_new_user+0x318>
 ecc:	ldr	r1, [pc, r1]
 ed0:	ldr	r1, [r1, #416]	; 0x1a0
 ed4:	bic	r0, r0, r1
 ed8:	str	r0, [sl, #56]	; 0x38
 edc:	ldr	r1, [pc, #92]	; f40 <check_new_user+0x31c>
 ee0:	ldr	r1, [pc, r1]
 ee4:	ldr	r1, [r1, #416]	; 0x1a0
 ee8:	tst	r1, r0
 eec:	beq	f24 <check_new_user+0x300>
 ef0:	ldr	r0, [sl, #432]	; 0x1b0
 ef4:	add	r4, sl, #163	; 0xa3
 ef8:	mov	r2, #64	; 0x40
 efc:	ldr	r1, [r0, #432]	; 0x1b0
 f00:	mov	r0, r4
 f04:	bl	748 <rb_strlcpy@plt>
 f08:	ldr	r1, [sp, #4]
 f0c:	mov	r0, r4
 f10:	bl	754 <irccmp@plt>
 f14:	cmp	r0, #0
 f18:	ldrne	r0, [r5]
 f1c:	orrne	r0, r0, #131072	; 0x20000
 f20:	strne	r0, [r5]
 f24:	sub	sp, fp, #28
 f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 f2c:	bl	6dc <rb_outofmemory@plt>
 f30:	.word	0x00011374
 f34:	.word	0x00000344
 f38:	.word	0x000001ea
 f3c:	.word	0x00011180
 f40:	.word	0x0001116c

00000f44 <_modinit>:
 f44:	push	{fp, lr}
 f48:	mov	fp, sp
 f4c:	bl	6e8 <find_umode_slot@plt>
 f50:	ldr	r1, [pc, #16]	; f68 <_modinit+0x24>
 f54:	ldr	r1, [pc, r1]
 f58:	str	r0, [r1, #416]	; 0x1a0
 f5c:	bl	760 <construct_umodebuf@plt>
 f60:	mov	r0, #0
 f64:	pop	{fp, pc}
 f68:	.word	0x000110f8

00000f6c <_moddeinit>:
 f6c:	ldr	r0, [pc, #12]	; f80 <_moddeinit+0x14>
 f70:	mov	r1, #0
 f74:	ldr	r0, [pc, r0]
 f78:	str	r1, [r0, #416]	; 0x1a0
 f7c:	b	760 <construct_umodebuf@plt>
 f80:	.word	0x000110d8

Disassembly of section .fini:

00000f84 <_fini>:
 f84:	push	{r3, lr}
 f88:	pop	{r3, pc}
