
../repos/inetutils/src/rsh:     file format elf32-littlearm


Disassembly of section .init:

00010fc8 <.init>:
   10fc8:	push	{r3, lr}
   10fcc:	bl	11324 <__assert_fail@plt+0x48>
   10fd0:	pop	{r3, pc}

Disassembly of section .plt:

00010fd4 <fputs_unlocked@plt-0x14>:
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	ldr	lr, [pc, #4]	; 10fe4 <fputs_unlocked@plt-0x4>
   10fdc:	add	lr, pc, lr
   10fe0:	ldr	pc, [lr, #8]!
   10fe4:	andeq	r8, r1, ip, lsl r0

00010fe8 <fputs_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #24, 20	; 0x18000
   10ff0:	ldr	pc, [ip, #28]!

00010ff4 <strcmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #24, 20	; 0x18000
   10ffc:	ldr	pc, [ip, #20]!

00011000 <strtol@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #24, 20	; 0x18000
   11008:	ldr	pc, [ip, #12]!

0001100c <getpwuid@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #4]!

00011018 <setsockopt@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #4092]!	; 0xffc

00011024 <printf@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #4084]!	; 0xff4

00011030 <read@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #4076]!	; 0xfec

0001103c <getuid@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #4068]!	; 0xfe4

00011048 <sigprocmask@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #4060]!	; 0xfdc

00011054 <memmove@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #4052]!	; 0xfd4

00011060 <strchrnul@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #4044]!	; 0xfcc

0001106c <free@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #4036]!	; 0xfc4

00011078 <strndup@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #4028]!	; 0xfbc

00011084 <memcpy@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #4020]!	; 0xfb4

00011090 <signal@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #4012]!	; 0xfac

0001109c <fwrite_unlocked@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #94208	; 0x17000
   110a4:	ldr	pc, [ip, #4004]!	; 0xfa4

000110a8 <select@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #94208	; 0x17000
   110b0:	ldr	pc, [ip, #3996]!	; 0xf9c

000110b4 <sleep@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #94208	; 0x17000
   110bc:	ldr	pc, [ip, #3988]!	; 0xf94

000110c0 <realloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #94208	; 0x17000
   110c8:	ldr	pc, [ip, #3980]!	; 0xf8c

000110cc <strcasecmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #94208	; 0x17000
   110d4:	ldr	pc, [ip, #3972]!	; 0xf84

000110d8 <funlockfile@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #94208	; 0x17000
   110e0:	ldr	pc, [ip, #3964]!	; 0xf7c

000110e4 <seteuid@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #94208	; 0x17000
   110ec:	ldr	pc, [ip, #3956]!	; 0xf74

000110f0 <sigaction@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #94208	; 0x17000
   110f8:	ldr	pc, [ip, #3948]!	; 0xf6c

000110fc <fwrite@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #94208	; 0x17000
   11104:	ldr	pc, [ip, #3940]!	; 0xf64

00011108 <ioctl@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #94208	; 0x17000
   11110:	ldr	pc, [ip, #3932]!	; 0xf5c

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #94208	; 0x17000
   1111c:	ldr	pc, [ip, #3924]!	; 0xf54

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #94208	; 0x17000
   11128:	ldr	pc, [ip, #3916]!	; 0xf4c

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #94208	; 0x17000
   11134:	ldr	pc, [ip, #3908]!	; 0xf44

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #94208	; 0x17000
   11140:	ldr	pc, [ip, #3900]!	; 0xf3c

00011144 <sigaddset@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #94208	; 0x17000
   1114c:	ldr	pc, [ip, #3892]!	; 0xf34

00011150 <__libc_start_main@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #94208	; 0x17000
   11158:	ldr	pc, [ip, #3884]!	; 0xf2c

0001115c <strerror@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #94208	; 0x17000
   11164:	ldr	pc, [ip, #3876]!	; 0xf24

00011168 <__ctype_tolower_loc@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #94208	; 0x17000
   11170:	ldr	pc, [ip, #3868]!	; 0xf1c

00011174 <__gmon_start__@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #94208	; 0x17000
   1117c:	ldr	pc, [ip, #3860]!	; 0xf14

00011180 <rcmd_af@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #94208	; 0x17000
   11188:	ldr	pc, [ip, #3852]!	; 0xf0c

0001118c <mempcpy@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #94208	; 0x17000
   11194:	ldr	pc, [ip, #3844]!	; 0xf04

00011198 <kill@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #94208	; 0x17000
   111a0:	ldr	pc, [ip, #3836]!	; 0xefc

000111a4 <__ctype_b_loc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #94208	; 0x17000
   111ac:	ldr	pc, [ip, #3828]!	; 0xef4

000111b0 <exit@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #94208	; 0x17000
   111b8:	ldr	pc, [ip, #3820]!	; 0xeec

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #94208	; 0x17000
   111c4:	ldr	pc, [ip, #3812]!	; 0xee4

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #94208	; 0x17000
   111d0:	ldr	pc, [ip, #3804]!	; 0xedc

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #94208	; 0x17000
   111dc:	ldr	pc, [ip, #3796]!	; 0xed4

000111e0 <execv@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #94208	; 0x17000
   111e8:	ldr	pc, [ip, #3788]!	; 0xecc

000111ec <__errno_location@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #94208	; 0x17000
   111f4:	ldr	pc, [ip, #3780]!	; 0xec4

000111f8 <getservbyname@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #94208	; 0x17000
   11200:	ldr	pc, [ip, #3772]!	; 0xebc

00011204 <strerror_r@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #94208	; 0x17000
   1120c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011210 <memset@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #94208	; 0x17000
   11218:	ldr	pc, [ip, #3756]!	; 0xeac

0001121c <write@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #94208	; 0x17000
   11224:	ldr	pc, [ip, #3748]!	; 0xea4

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #94208	; 0x17000
   11230:	ldr	pc, [ip, #3740]!	; 0xe9c

00011234 <shutdown@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #94208	; 0x17000
   1123c:	ldr	pc, [ip, #3732]!	; 0xe94

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #94208	; 0x17000
   11248:	ldr	pc, [ip, #3724]!	; 0xe8c

0001124c <sigemptyset@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #94208	; 0x17000
   11254:	ldr	pc, [ip, #3716]!	; 0xe84

00011258 <fork@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #94208	; 0x17000
   11260:	ldr	pc, [ip, #3708]!	; 0xe7c

00011264 <strrchr@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #94208	; 0x17000
   1126c:	ldr	pc, [ip, #3700]!	; 0xe74

00011270 <vfprintf@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #94208	; 0x17000
   11278:	ldr	pc, [ip, #3692]!	; 0xe6c

0001127c <fputc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #94208	; 0x17000
   11284:	ldr	pc, [ip, #3684]!	; 0xe64

00011288 <setuid@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #94208	; 0x17000
   11290:	ldr	pc, [ip, #3676]!	; 0xe5c

00011294 <flockfile@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #94208	; 0x17000
   1129c:	ldr	pc, [ip, #3668]!	; 0xe54

000112a0 <vsnprintf@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #94208	; 0x17000
   112a8:	ldr	pc, [ip, #3660]!	; 0xe4c

000112ac <qsort@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #94208	; 0x17000
   112b4:	ldr	pc, [ip, #3652]!	; 0xe44

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #94208	; 0x17000
   112c0:	ldr	pc, [ip, #3644]!	; 0xe3c

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #94208	; 0x17000
   112cc:	ldr	pc, [ip, #3636]!	; 0xe34

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #94208	; 0x17000
   112d8:	ldr	pc, [ip, #3628]!	; 0xe2c

000112dc <__assert_fail@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #94208	; 0x17000
   112e4:	ldr	pc, [ip, #3620]!	; 0xe24

Disassembly of section .text:

000112e8 <argp_parse@@Base-0x12d4>:
   112e8:	mov	fp, #0
   112ec:	mov	lr, #0
   112f0:	pop	{r1}		; (ldr r1, [sp], #4)
   112f4:	mov	r2, sp
   112f8:	push	{r2}		; (str r2, [sp, #-4]!)
   112fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11300:	ldr	ip, [pc, #16]	; 11318 <__assert_fail@plt+0x3c>
   11304:	push	{ip}		; (str ip, [sp, #-4]!)
   11308:	ldr	r0, [pc, #12]	; 1131c <__assert_fail@plt+0x40>
   1130c:	ldr	r3, [pc, #12]	; 11320 <__assert_fail@plt+0x44>
   11310:	bl	11150 <__libc_start_main@plt>
   11314:	bl	112c4 <abort@plt>
   11318:	andeq	r7, r1, r8, asr #27
   1131c:	strdeq	r1, [r1], -r8
   11320:	andeq	r7, r1, r8, ror #26
   11324:	ldr	r3, [pc, #20]	; 11340 <__assert_fail@plt+0x64>
   11328:	ldr	r2, [pc, #20]	; 11344 <__assert_fail@plt+0x68>
   1132c:	add	r3, pc, r3
   11330:	ldr	r2, [r3, r2]
   11334:	cmp	r2, #0
   11338:	bxeq	lr
   1133c:	b	11174 <__gmon_start__@plt>
   11340:	andeq	r7, r1, ip, asr #25
   11344:	andeq	r0, r0, ip, lsl #2
   11348:	ldr	r3, [pc, #28]	; 1136c <__assert_fail@plt+0x90>
   1134c:	ldr	r0, [pc, #28]	; 11370 <__assert_fail@plt+0x94>
   11350:	sub	r3, r3, r0
   11354:	cmp	r3, #6
   11358:	bxls	lr
   1135c:	ldr	r3, [pc, #16]	; 11374 <__assert_fail@plt+0x98>
   11360:	cmp	r3, #0
   11364:	bxeq	lr
   11368:	bx	r3
   1136c:	andeq	r9, r2, r7, lsr r2
   11370:	andeq	r9, r2, r4, lsr r2
   11374:	andeq	r0, r0, r0
   11378:	ldr	r1, [pc, #36]	; 113a4 <__assert_fail@plt+0xc8>
   1137c:	ldr	r0, [pc, #36]	; 113a8 <__assert_fail@plt+0xcc>
   11380:	sub	r1, r1, r0
   11384:	asr	r1, r1, #2
   11388:	add	r1, r1, r1, lsr #31
   1138c:	asrs	r1, r1, #1
   11390:	bxeq	lr
   11394:	ldr	r3, [pc, #16]	; 113ac <__assert_fail@plt+0xd0>
   11398:	cmp	r3, #0
   1139c:	bxeq	lr
   113a0:	bx	r3
   113a4:	andeq	r9, r2, r4, lsr r2
   113a8:	andeq	r9, r2, r4, lsr r2
   113ac:	andeq	r0, r0, r0
   113b0:	push	{r4, lr}
   113b4:	ldr	r4, [pc, #24]	; 113d4 <__assert_fail@plt+0xf8>
   113b8:	ldrb	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	popne	{r4, pc}
   113c4:	bl	11348 <__assert_fail@plt+0x6c>
   113c8:	mov	r3, #1
   113cc:	strb	r3, [r4]
   113d0:	pop	{r4, pc}
   113d4:	andeq	r9, r2, r8, asr #4
   113d8:	ldr	r0, [pc, #40]	; 11408 <__assert_fail@plt+0x12c>
   113dc:	ldr	r3, [r0]
   113e0:	cmp	r3, #0
   113e4:	bne	113ec <__assert_fail@plt+0x110>
   113e8:	b	11378 <__assert_fail@plt+0x9c>
   113ec:	ldr	r3, [pc, #24]	; 1140c <__assert_fail@plt+0x130>
   113f0:	cmp	r3, #0
   113f4:	beq	113e8 <__assert_fail@plt+0x10c>
   113f8:	push	{r4, lr}
   113fc:	blx	r3
   11400:	pop	{r4, lr}
   11404:	b	11378 <__assert_fail@plt+0x9c>
   11408:	andeq	r8, r2, ip, lsl #30
   1140c:	andeq	r0, r0, r0
   11410:	sub	r0, r0, #52	; 0x34
   11414:	cmp	r0, #67	; 0x43
   11418:	ldrls	pc, [pc, r0, lsl #2]
   1141c:	b	11598 <__assert_fail@plt+0x2bc>
   11420:	andeq	r1, r1, r8, lsr r5
   11424:	muleq	r1, r8, r5
   11428:	andeq	r1, r1, ip, asr #10
   1142c:	muleq	r1, r8, r5
   11430:	andeq	r1, r1, r0, lsr r5
   11434:	muleq	r1, r8, r5
   11438:	muleq	r1, r8, r5
   1143c:	muleq	r1, r8, r5
   11440:	muleq	r1, r8, r5
   11444:	muleq	r1, r8, r5
   11448:	muleq	r1, r8, r5
   1144c:	muleq	r1, r8, r5
   11450:	muleq	r1, r8, r5
   11454:	muleq	r1, r8, r5
   11458:	muleq	r1, r8, r5
   1145c:	muleq	r1, r8, r5
   11460:	muleq	r1, r8, r5
   11464:	muleq	r1, r8, r5
   11468:	muleq	r1, r8, r5
   1146c:	muleq	r1, r8, r5
   11470:	muleq	r1, r8, r5
   11474:	muleq	r1, r8, r5
   11478:	muleq	r1, r8, r5
   1147c:	muleq	r1, r8, r5
   11480:	andeq	r1, r1, r0, lsr r5
   11484:	muleq	r1, r8, r5
   11488:	muleq	r1, r8, r5
   1148c:	muleq	r1, r8, r5
   11490:	muleq	r1, r8, r5
   11494:	muleq	r1, r8, r5
   11498:	muleq	r1, r8, r5
   1149c:	muleq	r1, r8, r5
   114a0:	muleq	r1, r8, r5
   114a4:	muleq	r1, r8, r5
   114a8:	muleq	r1, r8, r5
   114ac:	muleq	r1, r8, r5
   114b0:	muleq	r1, r8, r5
   114b4:	muleq	r1, r8, r5
   114b8:	muleq	r1, r8, r5
   114bc:	muleq	r1, r8, r5
   114c0:	muleq	r1, r8, r5
   114c4:	muleq	r1, r8, r5
   114c8:	muleq	r1, r8, r5
   114cc:	muleq	r1, r8, r5
   114d0:	muleq	r1, r8, r5
   114d4:	muleq	r1, r8, r5
   114d8:	muleq	r1, r8, r5
   114dc:	muleq	r1, r8, r5
   114e0:	andeq	r1, r1, r0, ror #10
   114e4:	andeq	r1, r1, r0, lsr r5
   114e8:	muleq	r1, r8, r5
   114ec:	muleq	r1, r8, r5
   114f0:	muleq	r1, r8, r5
   114f4:	muleq	r1, r8, r5
   114f8:	muleq	r1, r8, r5
   114fc:	muleq	r1, r8, r5
   11500:	andeq	r1, r1, r4, ror r5
   11504:	muleq	r1, r8, r5
   11508:	andeq	r1, r1, r4, lsl #11
   1150c:	muleq	r1, r8, r5
   11510:	muleq	r1, r8, r5
   11514:	muleq	r1, r8, r5
   11518:	muleq	r1, r8, r5
   1151c:	muleq	r1, r8, r5
   11520:	muleq	r1, r8, r5
   11524:	muleq	r1, r8, r5
   11528:	muleq	r1, r8, r5
   1152c:	andeq	r1, r1, r0, lsr r5
   11530:	mov	r0, #0
   11534:	bx	lr
   11538:	mov	r2, #2
   1153c:	ldr	r3, [pc, #92]	; 115a0 <__assert_fail@plt+0x2c4>
   11540:	strh	r2, [r3]
   11544:	mov	r0, #0
   11548:	bx	lr
   1154c:	mov	r2, #10
   11550:	ldr	r3, [pc, #72]	; 115a0 <__assert_fail@plt+0x2c4>
   11554:	strh	r2, [r3]
   11558:	mov	r0, #0
   1155c:	bx	lr
   11560:	mov	r2, #1
   11564:	ldr	r3, [pc, #52]	; 115a0 <__assert_fail@plt+0x2c4>
   11568:	str	r2, [r3, #4]
   1156c:	mov	r0, #0
   11570:	bx	lr
   11574:	ldr	r3, [pc, #36]	; 115a0 <__assert_fail@plt+0x2c4>
   11578:	str	r1, [r3, #8]
   1157c:	mov	r0, #0
   11580:	bx	lr
   11584:	mov	r2, #1
   11588:	ldr	r3, [pc, #16]	; 115a0 <__assert_fail@plt+0x2c4>
   1158c:	str	r2, [r3, #12]
   11590:	mov	r0, #0
   11594:	bx	lr
   11598:	mov	r0, #7
   1159c:	bx	lr
   115a0:	andeq	r9, r2, ip, asr #4
   115a4:	ldr	r2, [pc, #12]	; 115b8 <__assert_fail@plt+0x2dc>
   115a8:	ldr	r3, [r2, #16]
   115ac:	add	r3, r3, #1
   115b0:	str	r3, [r2, #16]
   115b4:	bx	lr
   115b8:	andeq	r9, r2, ip, asr #4
   115bc:	push	{lr}		; (str lr, [sp, #-4]!)
   115c0:	sub	sp, sp, #12
   115c4:	add	r1, sp, #8
   115c8:	strb	r0, [r1, #-1]!
   115cc:	mov	r2, #1
   115d0:	ldr	r3, [pc, #12]	; 115e4 <__assert_fail@plt+0x308>
   115d4:	ldr	r0, [r3]
   115d8:	bl	1121c <write@plt>
   115dc:	add	sp, sp, #12
   115e0:	pop	{pc}		; (ldr pc, [sp], #4)
   115e4:	muleq	r2, r8, r2
   115e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115ec:	sub	sp, sp, #8704	; 0x2200
   115f0:	sub	sp, sp, #36	; 0x24
   115f4:	mov	r4, r3
   115f8:	cmp	r0, #0
   115fc:	cmpeq	r2, #0
   11600:	beq	116f8 <__assert_fail@plt+0x41c>
   11604:	mov	r2, #0
   11608:	mov	r0, #2
   1160c:	bl	11048 <sigprocmask@plt>
   11610:	add	r0, sp, #24
   11614:	bl	1124c <sigemptyset@plt>
   11618:	mov	r3, #268435456	; 0x10000000
   1161c:	str	r3, [sp, #152]	; 0x98
   11620:	ldr	r3, [pc, #1012]	; 11a1c <__assert_fail@plt+0x740>
   11624:	str	r3, [sp, #20]
   11628:	mov	r2, #0
   1162c:	add	r1, sp, #20
   11630:	mov	r0, #13
   11634:	bl	110f0 <sigaction@plt>
   11638:	add	r3, sp, #8576	; 0x2180
   1163c:	add	r3, r3, #28
   11640:	add	r1, sp, #8704	; 0x2200
   11644:	add	r1, r1, #28
   11648:	mov	r2, #0
   1164c:	str	r2, [r3, #4]!
   11650:	cmp	r3, r1
   11654:	bne	1164c <__assert_fail@plt+0x370>
   11658:	ldr	r3, [pc, #960]	; 11a20 <__assert_fail@plt+0x744>
   1165c:	ldr	r3, [r3]
   11660:	add	r2, r3, #31
   11664:	cmp	r3, #0
   11668:	movge	r2, r3
   1166c:	asr	r2, r2, #5
   11670:	add	r1, sp, #8704	; 0x2200
   11674:	add	r1, r1, #32
   11678:	add	r2, r1, r2, lsl #2
   1167c:	asr	r1, r3, #31
   11680:	lsr	r1, r1, #27
   11684:	add	r3, r3, r1
   11688:	and	r3, r3, #31
   1168c:	sub	r3, r3, r1
   11690:	mov	r0, #1
   11694:	ldr	r1, [r2, #-128]	; 0xffffff80
   11698:	orr	r3, r1, r0, lsl r3
   1169c:	str	r3, [r2, #-128]	; 0xffffff80
   116a0:	add	r7, r4, #31
   116a4:	cmp	r4, #0
   116a8:	movge	r7, r4
   116ac:	asr	r7, r7, #5
   116b0:	asr	r3, r4, #31
   116b4:	lsr	r8, r3, #27
   116b8:	add	r3, r4, r8
   116bc:	and	r3, r3, #31
   116c0:	sub	r3, r3, r8
   116c4:	lsl	r8, r0, r3
   116c8:	add	r3, sp, #8704	; 0x2200
   116cc:	add	r3, r3, #32
   116d0:	add	r2, r3, r7, lsl #2
   116d4:	ldr	r3, [r2, #-128]	; 0xffffff80
   116d8:	orr	r3, r3, r8
   116dc:	str	r3, [r2, #-128]	; 0xffffff80
   116e0:	ldr	r5, [pc, #824]	; 11a20 <__assert_fail@plt+0x744>
   116e4:	mov	r6, r0
   116e8:	mov	r7, r2
   116ec:	ldr	sl, [pc, #816]	; 11a24 <__assert_fail@plt+0x748>
   116f0:	ldr	r9, [pc, #816]	; 11a28 <__assert_fail@plt+0x74c>
   116f4:	b	11930 <__assert_fail@plt+0x654>
   116f8:	ldr	r3, [pc, #800]	; 11a20 <__assert_fail@plt+0x744>
   116fc:	ldr	r0, [r3]
   11700:	bl	112d0 <close@plt>
   11704:	bl	111ec <__errno_location@plt>
   11708:	mov	r9, r0
   1170c:	add	r7, r4, #31
   11710:	cmp	r4, #0
   11714:	movge	r7, r4
   11718:	asr	r7, r7, #5
   1171c:	asr	r3, r4, #31
   11720:	lsr	r2, r3, #27
   11724:	add	r3, r4, r2
   11728:	and	r3, r3, #31
   1172c:	sub	r3, r3, r2
   11730:	mov	r2, #1
   11734:	lsl	fp, r2, r3
   11738:	mov	r5, #0
   1173c:	add	r3, sp, #8704	; 0x2200
   11740:	add	r3, r3, #32
   11744:	add	r7, r3, r7, lsl #2
   11748:	str	r5, [r9]
   1174c:	mov	r2, #8192	; 0x2000
   11750:	add	r1, sp, #160	; 0xa0
   11754:	mov	r0, r5
   11758:	bl	11030 <read@plt>
   1175c:	subs	r8, r0, #0
   11760:	ble	11818 <__assert_fail@plt+0x53c>
   11764:	add	sl, sp, #160	; 0xa0
   11768:	add	r6, sp, #8448	; 0x2100
   1176c:	add	r6, r6, #28
   11770:	add	r3, r4, #1
   11774:	str	r3, [sp, #12]
   11778:	b	11794 <__assert_fail@plt+0x4b8>
   1177c:	ldr	r1, [r9]
   11780:	cmp	r1, #4
   11784:	beq	11794 <__assert_fail@plt+0x4b8>
   11788:	ldr	r2, [pc, #660]	; 11a24 <__assert_fail@plt+0x748>
   1178c:	mov	r0, #1
   11790:	bl	11120 <error@plt>
   11794:	add	r3, sp, #8320	; 0x2080
   11798:	add	r3, r3, #28
   1179c:	str	r5, [r3, #4]!
   117a0:	cmp	r3, r6
   117a4:	bne	1179c <__assert_fail@plt+0x4c0>
   117a8:	ldr	r3, [r7, #-384]	; 0xfffffe80
   117ac:	orr	r3, r3, fp
   117b0:	str	r3, [r7, #-384]	; 0xfffffe80
   117b4:	str	r5, [sp]
   117b8:	mov	r3, r5
   117bc:	add	r2, sp, #8320	; 0x2080
   117c0:	add	r2, r2, #32
   117c4:	mov	r1, r5
   117c8:	ldr	r0, [sp, #12]
   117cc:	bl	110a8 <select@plt>
   117d0:	cmp	r0, #0
   117d4:	blt	1177c <__assert_fail@plt+0x4a0>
   117d8:	ldr	r3, [r7, #-384]	; 0xfffffe80
   117dc:	tst	fp, r3
   117e0:	beq	11794 <__assert_fail@plt+0x4b8>
   117e4:	mov	r2, r8
   117e8:	mov	r1, sl
   117ec:	mov	r0, r4
   117f0:	bl	1121c <write@plt>
   117f4:	cmp	r0, #0
   117f8:	blt	1180c <__assert_fail@plt+0x530>
   117fc:	add	sl, sl, r0
   11800:	subs	r8, r8, r0
   11804:	bne	11794 <__assert_fail@plt+0x4b8>
   11808:	b	11748 <__assert_fail@plt+0x46c>
   1180c:	ldr	r3, [r9]
   11810:	cmp	r3, #11
   11814:	beq	11794 <__assert_fail@plt+0x4b8>
   11818:	mov	r1, #1
   1181c:	mov	r0, r4
   11820:	bl	11234 <shutdown@plt>
   11824:	mov	r0, #0
   11828:	bl	111b0 <exit@plt>
   1182c:	bl	111ec <__errno_location@plt>
   11830:	ldr	r1, [r0]
   11834:	cmp	r1, #4
   11838:	beq	119c4 <__assert_fail@plt+0x6e8>
   1183c:	mov	r2, sl
   11840:	mov	r0, r6
   11844:	bl	11120 <error@plt>
   11848:	b	119c4 <__assert_fail@plt+0x6e8>
   1184c:	bl	111ec <__errno_location@plt>
   11850:	mov	fp, r0
   11854:	mov	r3, #0
   11858:	str	r3, [r0]
   1185c:	mov	r2, #8192	; 0x2000
   11860:	add	r1, sp, #160	; 0xa0
   11864:	ldr	r0, [r5]
   11868:	bl	11030 <read@plt>
   1186c:	subs	r2, r0, #0
   11870:	ble	11884 <__assert_fail@plt+0x5a8>
   11874:	add	r1, sp, #160	; 0xa0
   11878:	mov	r0, #2
   1187c:	bl	1121c <write@plt>
   11880:	b	119b8 <__assert_fail@plt+0x6dc>
   11884:	ldr	r3, [fp]
   11888:	cmp	r3, #11
   1188c:	beq	119b8 <__assert_fail@plt+0x6dc>
   11890:	ldr	r3, [r5]
   11894:	add	r2, r3, #31
   11898:	cmp	r3, #0
   1189c:	movge	r2, r3
   118a0:	asr	r2, r2, #5
   118a4:	add	r1, sp, #8704	; 0x2200
   118a8:	add	r1, r1, #32
   118ac:	add	r2, r1, r2, lsl #2
   118b0:	asr	r1, r3, #31
   118b4:	lsr	r1, r1, #27
   118b8:	add	r3, r3, r1
   118bc:	and	r3, r3, #31
   118c0:	sub	r3, r3, r1
   118c4:	ldr	r1, [r2, #-128]	; 0xffffff80
   118c8:	bic	r3, r1, r6, lsl r3
   118cc:	str	r3, [r2, #-128]	; 0xffffff80
   118d0:	b	119b8 <__assert_fail@plt+0x6dc>
   118d4:	bl	111ec <__errno_location@plt>
   118d8:	mov	fp, r0
   118dc:	mov	r3, #0
   118e0:	str	r3, [r0]
   118e4:	mov	r2, #8192	; 0x2000
   118e8:	add	r1, sp, #160	; 0xa0
   118ec:	mov	r0, r4
   118f0:	bl	11030 <read@plt>
   118f4:	subs	r2, r0, #0
   118f8:	ble	1190c <__assert_fail@plt+0x630>
   118fc:	add	r1, sp, #160	; 0xa0
   11900:	mov	r0, r6
   11904:	bl	1121c <write@plt>
   11908:	b	119c4 <__assert_fail@plt+0x6e8>
   1190c:	ldr	r3, [fp]
   11910:	cmp	r3, #11
   11914:	ldrne	r3, [r7, #-128]	; 0xffffff80
   11918:	bicne	r3, r3, r8
   1191c:	strne	r3, [r7, #-128]	; 0xffffff80
   11920:	b	119c4 <__assert_fail@plt+0x6e8>
   11924:	ldr	r3, [r9, #16]
   11928:	cmp	r3, #0
   1192c:	bne	11a10 <__assert_fail@plt+0x734>
   11930:	ldr	fp, [r5]
   11934:	cmp	r4, fp
   11938:	movge	fp, r4
   1193c:	mov	r2, #128	; 0x80
   11940:	add	r1, sp, #8576	; 0x2180
   11944:	add	r1, r1, #32
   11948:	add	r0, sp, #8448	; 0x2100
   1194c:	add	r0, r0, #32
   11950:	bl	11084 <memcpy@plt>
   11954:	mov	r2, #0
   11958:	str	r2, [sp]
   1195c:	mov	r3, r2
   11960:	add	r1, sp, #8448	; 0x2100
   11964:	add	r1, r1, #32
   11968:	add	r0, fp, #1
   1196c:	bl	110a8 <select@plt>
   11970:	cmp	r0, #0
   11974:	blt	1182c <__assert_fail@plt+0x550>
   11978:	ldr	r3, [r5]
   1197c:	add	r2, r3, #31
   11980:	cmp	r3, #0
   11984:	movge	r2, r3
   11988:	asr	r2, r2, #5
   1198c:	add	r1, sp, #8704	; 0x2200
   11990:	add	r1, r1, #32
   11994:	add	r2, r1, r2, lsl #2
   11998:	asr	r1, r3, #31
   1199c:	lsr	r1, r1, #27
   119a0:	add	r3, r3, r1
   119a4:	and	r3, r3, #31
   119a8:	sub	r3, r3, r1
   119ac:	ldr	r2, [r2, #-256]	; 0xffffff00
   119b0:	ands	r3, r2, r6, lsl r3
   119b4:	bne	1184c <__assert_fail@plt+0x570>
   119b8:	ldr	r3, [r7, #-256]	; 0xffffff00
   119bc:	tst	r8, r3
   119c0:	bne	118d4 <__assert_fail@plt+0x5f8>
   119c4:	ldr	r3, [r5]
   119c8:	add	r2, r3, #31
   119cc:	cmp	r3, #0
   119d0:	movge	r2, r3
   119d4:	asr	r2, r2, #5
   119d8:	add	r1, sp, #8704	; 0x2200
   119dc:	add	r1, r1, #32
   119e0:	add	r2, r1, r2, lsl #2
   119e4:	asr	r1, r3, #31
   119e8:	lsr	r1, r1, #27
   119ec:	add	r3, r3, r1
   119f0:	and	r3, r3, #31
   119f4:	sub	r3, r3, r1
   119f8:	ldr	r2, [r2, #-128]	; 0xffffff80
   119fc:	ands	r3, r2, r6, lsl r3
   11a00:	bne	11924 <__assert_fail@plt+0x648>
   11a04:	ldr	r3, [r7, #-128]	; 0xffffff80
   11a08:	tst	r8, r3
   11a0c:	bne	11924 <__assert_fail@plt+0x648>
   11a10:	add	sp, sp, #8704	; 0x2200
   11a14:	add	sp, sp, #36	; 0x24
   11a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a1c:	andeq	r1, r1, r4, lsr #11
   11a20:	muleq	r2, r8, r2
   11a24:	andeq	r7, r1, r8, lsl #28
   11a28:	andeq	r9, r2, ip, asr #4
   11a2c:	push	{r4, r5, r6, r7, r8, lr}
   11a30:	mov	r6, r0
   11a34:	ldr	r0, [r0]
   11a38:	cmp	r0, #0
   11a3c:	beq	11acc <__assert_fail@plt+0x7f0>
   11a40:	mov	r5, r6
   11a44:	mov	r4, #0
   11a48:	bl	111bc <strlen@plt>
   11a4c:	add	r4, r4, #1
   11a50:	add	r4, r4, r0
   11a54:	ldr	r0, [r5, #4]!
   11a58:	cmp	r0, #0
   11a5c:	bne	11a48 <__assert_fail@plt+0x76c>
   11a60:	mov	r0, r4
   11a64:	bl	137c8 <argp_parse@@Base+0x120c>
   11a68:	subs	r7, r0, #0
   11a6c:	beq	11ad4 <__assert_fail@plt+0x7f8>
   11a70:	ldr	r4, [r6]
   11a74:	cmp	r4, #0
   11a78:	beq	11aec <__assert_fail@plt+0x810>
   11a7c:	mov	r5, r7
   11a80:	mov	r8, #32
   11a84:	mov	r1, r4
   11a88:	mov	r0, r5
   11a8c:	bl	11114 <strcpy@plt>
   11a90:	mov	r1, r4
   11a94:	mov	r0, r5
   11a98:	bl	11114 <strcpy@plt>
   11a9c:	ldrb	r3, [r0]
   11aa0:	cmp	r3, #0
   11aa4:	beq	11ab4 <__assert_fail@plt+0x7d8>
   11aa8:	ldrb	r3, [r0, #1]!
   11aac:	cmp	r3, #0
   11ab0:	bne	11aa8 <__assert_fail@plt+0x7cc>
   11ab4:	ldr	r4, [r6, #4]!
   11ab8:	cmp	r4, #0
   11abc:	beq	11aec <__assert_fail@plt+0x810>
   11ac0:	add	r5, r0, #1
   11ac4:	strb	r8, [r0]
   11ac8:	b	11a84 <__assert_fail@plt+0x7a8>
   11acc:	mov	r4, #0
   11ad0:	b	11a60 <__assert_fail@plt+0x784>
   11ad4:	bl	111ec <__errno_location@plt>
   11ad8:	ldr	r2, [pc, #20]	; 11af4 <__assert_fail@plt+0x818>
   11adc:	ldr	r1, [r0]
   11ae0:	mov	r0, #1
   11ae4:	bl	11120 <error@plt>
   11ae8:	b	11a70 <__assert_fail@plt+0x794>
   11aec:	mov	r0, r7
   11af0:	pop	{r4, r5, r6, r7, r8, pc}
   11af4:	andeq	r7, r1, r0, lsl lr
   11af8:	push	{r4, r5, r6, r7, lr}
   11afc:	sub	sp, sp, #292	; 0x124
   11b00:	mov	r6, r0
   11b04:	mov	r4, r1
   11b08:	ldr	r0, [r1]
   11b0c:	bl	132f0 <argp_parse@@Base+0xd34>
   11b10:	mov	r3, #0
   11b14:	ldr	r2, [pc, #1120]	; 11f7c <__assert_fail@plt+0xca0>
   11b18:	str	r3, [r2, #8]
   11b1c:	str	r3, [sp, #24]
   11b20:	ldr	r5, [r4]
   11b24:	mov	r1, #47	; 0x2f
   11b28:	mov	r0, r5
   11b2c:	bl	11264 <strrchr@plt>
   11b30:	cmp	r0, #0
   11b34:	addne	r5, r0, #1
   11b38:	ldr	r1, [pc, #1088]	; 11f80 <__assert_fail@plt+0xca4>
   11b3c:	mov	r0, r5
   11b40:	bl	10ff4 <strcmp@plt>
   11b44:	cmp	r0, #0
   11b48:	strne	r5, [sp, #24]
   11b4c:	movne	r5, #0
   11b50:	moveq	r5, #1
   11b54:	ldr	r2, [pc, #1064]	; 11f84 <__assert_fail@plt+0xca8>
   11b58:	ldr	r3, [pc, #1064]	; 11f88 <__assert_fail@plt+0xcac>
   11b5c:	str	r2, [r3]
   11b60:	ldr	r1, [pc, #1060]	; 11f8c <__assert_fail@plt+0xcb0>
   11b64:	ldr	r0, [pc, #1044]	; 11f80 <__assert_fail@plt+0xca4>
   11b68:	bl	130c8 <argp_parse@@Base+0xb0c>
   11b6c:	mov	r3, #0
   11b70:	str	r3, [sp, #4]
   11b74:	add	r3, sp, #284	; 0x11c
   11b78:	str	r3, [sp]
   11b7c:	mov	r3, #8
   11b80:	mov	r2, r4
   11b84:	mov	r1, r6
   11b88:	ldr	r0, [pc, #1024]	; 11f90 <__assert_fail@plt+0xcb4>
   11b8c:	bl	125bc <argp_parse@@Base>
   11b90:	ldr	r3, [sp, #284]	; 0x11c
   11b94:	cmp	r6, r3
   11b98:	addgt	r2, r3, #1
   11b9c:	strgt	r2, [sp, #284]	; 0x11c
   11ba0:	ldrgt	r3, [r4, r3, lsl #2]
   11ba4:	strgt	r3, [sp, #24]
   11ba8:	ldr	r3, [sp, #24]
   11bac:	cmp	r3, #0
   11bb0:	beq	11ddc <__assert_fail@plt+0xb00>
   11bb4:	ldr	r3, [sp, #284]	; 0x11c
   11bb8:	ldr	r3, [r4, r3, lsl #2]
   11bbc:	cmp	r3, #0
   11bc0:	beq	11df0 <__assert_fail@plt+0xb14>
   11bc4:	ldr	r3, [sp, #284]	; 0x11c
   11bc8:	add	r4, r4, r3, lsl #2
   11bcc:	bl	1103c <getuid@plt>
   11bd0:	mov	r5, r0
   11bd4:	bl	1100c <getpwuid@plt>
   11bd8:	subs	r6, r0, #0
   11bdc:	beq	11e38 <__assert_fail@plt+0xb5c>
   11be0:	mov	r1, #64	; 0x40
   11be4:	ldr	r0, [sp, #24]
   11be8:	bl	111c8 <strchr@plt>
   11bec:	cmp	r0, #0
   11bf0:	beq	11c20 <__assert_fail@plt+0x944>
   11bf4:	mov	r3, #0
   11bf8:	strb	r3, [r0]
   11bfc:	ldr	r3, [pc, #888]	; 11f7c <__assert_fail@plt+0xca0>
   11c00:	ldr	r3, [r3, #8]
   11c04:	cmp	r3, #0
   11c08:	beq	11e4c <__assert_fail@plt+0xb70>
   11c0c:	add	r3, r0, #1
   11c10:	str	r3, [sp, #24]
   11c14:	ldrb	r3, [r0, #1]
   11c18:	cmp	r3, #0
   11c1c:	beq	11e60 <__assert_fail@plt+0xb84>
   11c20:	mov	r0, r4
   11c24:	bl	11a2c <__assert_fail@plt+0x750>
   11c28:	mov	r4, r0
   11c2c:	ldr	r1, [pc, #864]	; 11f94 <__assert_fail@plt+0xcb8>
   11c30:	ldr	r0, [pc, #864]	; 11f98 <__assert_fail@plt+0xcbc>
   11c34:	bl	111f8 <getservbyname@plt>
   11c38:	subs	r7, r0, #0
   11c3c:	beq	11e74 <__assert_fail@plt+0xb98>
   11c40:	ldr	r3, [pc, #820]	; 11f7c <__assert_fail@plt+0xca0>
   11c44:	ldr	r3, [r3, #8]
   11c48:	cmp	r3, #0
   11c4c:	ldreq	r2, [r6]
   11c50:	ldreq	r3, [pc, #804]	; 11f7c <__assert_fail@plt+0xca0>
   11c54:	streq	r2, [r3, #8]
   11c58:	ldr	r0, [pc, #796]	; 11f7c <__assert_fail@plt+0xca0>
   11c5c:	ldr	r3, [r0, #8]
   11c60:	ldr	r2, [r6]
   11c64:	ldrh	r1, [r7, #8]
   11c68:	ldrh	r0, [r0]
   11c6c:	str	r0, [sp, #8]
   11c70:	ldr	r0, [pc, #804]	; 11f9c <__assert_fail@plt+0xcc0>
   11c74:	str	r0, [sp, #4]
   11c78:	str	r4, [sp]
   11c7c:	add	r0, sp, #24
   11c80:	bl	11180 <rcmd_af@plt>
   11c84:	subs	r7, r0, #0
   11c88:	blt	11e88 <__assert_fail@plt+0xbac>
   11c8c:	ldr	r3, [pc, #776]	; 11f9c <__assert_fail@plt+0xcc0>
   11c90:	ldr	r3, [r3]
   11c94:	cmp	r3, #0
   11c98:	blt	11eb4 <__assert_fail@plt+0xbd8>
   11c9c:	ldr	r3, [pc, #728]	; 11f7c <__assert_fail@plt+0xca0>
   11ca0:	ldr	r3, [r3, #4]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11ec8 <__assert_fail@plt+0xbec>
   11cac:	mov	r0, r5
   11cb0:	bl	110e4 <seteuid@plt>
   11cb4:	mov	r0, r5
   11cb8:	bl	11288 <setuid@plt>
   11cbc:	add	r0, sp, #156	; 0x9c
   11cc0:	bl	1124c <sigemptyset@plt>
   11cc4:	mov	r1, #2
   11cc8:	add	r0, sp, #156	; 0x9c
   11ccc:	bl	11144 <sigaddset@plt>
   11cd0:	mov	r1, #3
   11cd4:	add	r0, sp, #156	; 0x9c
   11cd8:	bl	11144 <sigaddset@plt>
   11cdc:	mov	r1, #15
   11ce0:	add	r0, sp, #156	; 0x9c
   11ce4:	bl	11144 <sigaddset@plt>
   11ce8:	add	r2, sp, #28
   11cec:	add	r1, sp, #156	; 0x9c
   11cf0:	mov	r0, #0
   11cf4:	bl	11048 <sigprocmask@plt>
   11cf8:	mov	r1, #1
   11cfc:	mov	r0, #2
   11d00:	bl	11090 <signal@plt>
   11d04:	cmp	r0, #1
   11d08:	beq	11d18 <__assert_fail@plt+0xa3c>
   11d0c:	ldr	r1, [pc, #652]	; 11fa0 <__assert_fail@plt+0xcc4>
   11d10:	mov	r0, #2
   11d14:	bl	11090 <signal@plt>
   11d18:	mov	r1, #1
   11d1c:	mov	r0, #3
   11d20:	bl	11090 <signal@plt>
   11d24:	cmp	r0, #1
   11d28:	beq	11d38 <__assert_fail@plt+0xa5c>
   11d2c:	ldr	r1, [pc, #620]	; 11fa0 <__assert_fail@plt+0xcc4>
   11d30:	mov	r0, #3
   11d34:	bl	11090 <signal@plt>
   11d38:	mov	r1, #1
   11d3c:	mov	r0, #15
   11d40:	bl	11090 <signal@plt>
   11d44:	cmp	r0, #1
   11d48:	beq	11d58 <__assert_fail@plt+0xa7c>
   11d4c:	ldr	r1, [pc, #588]	; 11fa0 <__assert_fail@plt+0xcc4>
   11d50:	mov	r0, #15
   11d54:	bl	11090 <signal@plt>
   11d58:	ldr	r3, [pc, #540]	; 11f7c <__assert_fail@plt+0xca0>
   11d5c:	ldr	r3, [r3, #12]
   11d60:	cmp	r3, #0
   11d64:	beq	11f48 <__assert_fail@plt+0xc6c>
   11d68:	mov	r1, #1
   11d6c:	mov	r0, r7
   11d70:	bl	11234 <shutdown@plt>
   11d74:	mov	r6, #0
   11d78:	add	r4, sp, #288	; 0x120
   11d7c:	mov	r3, #1
   11d80:	str	r3, [r4, #-268]!	; 0xfffffef4
   11d84:	ldr	r5, [pc, #536]	; 11fa4 <__assert_fail@plt+0xcc8>
   11d88:	mov	r2, r4
   11d8c:	mov	r1, r5
   11d90:	ldr	r3, [pc, #516]	; 11f9c <__assert_fail@plt+0xcc0>
   11d94:	ldr	r0, [r3]
   11d98:	bl	132c0 <argp_parse@@Base+0xd04>
   11d9c:	mov	r2, r4
   11da0:	mov	r1, r5
   11da4:	mov	r0, r7
   11da8:	bl	132c0 <argp_parse@@Base+0xd04>
   11dac:	ldr	r4, [pc, #456]	; 11f7c <__assert_fail@plt+0xca0>
   11db0:	mov	r3, r7
   11db4:	mov	r2, r6
   11db8:	add	r1, sp, #28
   11dbc:	ldr	r0, [r4, #12]
   11dc0:	bl	115e8 <__assert_fail@plt+0x30c>
   11dc4:	ldr	r3, [r4, #12]
   11dc8:	cmp	r3, #0
   11dcc:	beq	11f6c <__assert_fail@plt+0xc90>
   11dd0:	mov	r0, #0
   11dd4:	add	sp, sp, #292	; 0x124
   11dd8:	pop	{r4, r5, r6, r7, pc}
   11ddc:	ldr	r2, [pc, #452]	; 11fa8 <__assert_fail@plt+0xccc>
   11de0:	mov	r1, #0
   11de4:	mov	r0, #1
   11de8:	bl	11120 <error@plt>
   11dec:	b	11bb4 <__assert_fail@plt+0x8d8>
   11df0:	cmp	r5, #0
   11df4:	ldrne	r3, [pc, #432]	; 11fac <__assert_fail@plt+0xcd0>
   11df8:	strne	r3, [r4]
   11dfc:	bl	1103c <getuid@plt>
   11e00:	bl	110e4 <seteuid@plt>
   11e04:	bl	1103c <getuid@plt>
   11e08:	bl	11288 <setuid@plt>
   11e0c:	ldr	r5, [pc, #412]	; 11fb0 <__assert_fail@plt+0xcd4>
   11e10:	mov	r1, r4
   11e14:	mov	r0, r5
   11e18:	bl	111e0 <execv@plt>
   11e1c:	bl	111ec <__errno_location@plt>
   11e20:	mov	r3, r5
   11e24:	ldr	r2, [pc, #392]	; 11fb4 <__assert_fail@plt+0xcd8>
   11e28:	ldr	r1, [r0]
   11e2c:	mov	r0, #1
   11e30:	bl	11120 <error@plt>
   11e34:	b	11bc4 <__assert_fail@plt+0x8e8>
   11e38:	ldr	r2, [pc, #376]	; 11fb8 <__assert_fail@plt+0xcdc>
   11e3c:	mov	r1, #0
   11e40:	mov	r0, #1
   11e44:	bl	11120 <error@plt>
   11e48:	b	11be0 <__assert_fail@plt+0x904>
   11e4c:	ldr	r3, [sp, #24]
   11e50:	cmp	r0, r3
   11e54:	ldrhi	r2, [pc, #288]	; 11f7c <__assert_fail@plt+0xca0>
   11e58:	strhi	r3, [r2, #8]
   11e5c:	b	11c0c <__assert_fail@plt+0x930>
   11e60:	ldr	r2, [pc, #340]	; 11fbc <__assert_fail@plt+0xce0>
   11e64:	mov	r1, #0
   11e68:	mov	r0, #1
   11e6c:	bl	11120 <error@plt>
   11e70:	b	11c20 <__assert_fail@plt+0x944>
   11e74:	ldr	r2, [pc, #324]	; 11fc0 <__assert_fail@plt+0xce4>
   11e78:	mov	r1, #0
   11e7c:	mov	r0, #1
   11e80:	bl	11120 <error@plt>
   11e84:	b	11c40 <__assert_fail@plt+0x964>
   11e88:	bl	111ec <__errno_location@plt>
   11e8c:	ldr	r3, [r0]
   11e90:	cmp	r3, #13
   11e94:	beq	11ea0 <__assert_fail@plt+0xbc4>
   11e98:	mov	r0, #1
   11e9c:	bl	111b0 <exit@plt>
   11ea0:	ldr	r2, [pc, #284]	; 11fc4 <__assert_fail@plt+0xce8>
   11ea4:	mov	r1, #0
   11ea8:	mov	r0, #1
   11eac:	bl	11120 <error@plt>
   11eb0:	b	11e98 <__assert_fail@plt+0xbbc>
   11eb4:	ldr	r2, [pc, #268]	; 11fc8 <__assert_fail@plt+0xcec>
   11eb8:	mov	r1, #0
   11ebc:	mov	r0, #1
   11ec0:	bl	11120 <error@plt>
   11ec4:	b	11c9c <__assert_fail@plt+0x9c0>
   11ec8:	mov	r1, #1
   11ecc:	add	r3, sp, #288	; 0x120
   11ed0:	str	r1, [r3, #-268]!	; 0xfffffef4
   11ed4:	mov	r2, #4
   11ed8:	str	r2, [sp]
   11edc:	mov	r2, r1
   11ee0:	mov	r0, r7
   11ee4:	bl	11018 <setsockopt@plt>
   11ee8:	cmp	r0, #0
   11eec:	blt	11f30 <__assert_fail@plt+0xc54>
   11ef0:	mov	r3, #4
   11ef4:	str	r3, [sp]
   11ef8:	add	r3, sp, #20
   11efc:	mov	r2, #1
   11f00:	mov	r1, r2
   11f04:	ldr	r0, [pc, #144]	; 11f9c <__assert_fail@plt+0xcc0>
   11f08:	ldr	r0, [r0]
   11f0c:	bl	11018 <setsockopt@plt>
   11f10:	cmp	r0, #0
   11f14:	bge	11cac <__assert_fail@plt+0x9d0>
   11f18:	bl	111ec <__errno_location@plt>
   11f1c:	ldr	r2, [pc, #168]	; 11fcc <__assert_fail@plt+0xcf0>
   11f20:	ldr	r1, [r0]
   11f24:	mov	r0, #0
   11f28:	bl	11120 <error@plt>
   11f2c:	b	11cac <__assert_fail@plt+0x9d0>
   11f30:	bl	111ec <__errno_location@plt>
   11f34:	ldr	r2, [pc, #144]	; 11fcc <__assert_fail@plt+0xcf0>
   11f38:	ldr	r1, [r0]
   11f3c:	mov	r0, #0
   11f40:	bl	11120 <error@plt>
   11f44:	b	11ef0 <__assert_fail@plt+0xc14>
   11f48:	bl	11258 <fork@plt>
   11f4c:	subs	r6, r0, #0
   11f50:	bge	11d78 <__assert_fail@plt+0xa9c>
   11f54:	bl	111ec <__errno_location@plt>
   11f58:	ldr	r2, [pc, #112]	; 11fd0 <__assert_fail@plt+0xcf4>
   11f5c:	ldr	r1, [r0]
   11f60:	mov	r0, #1
   11f64:	bl	11120 <error@plt>
   11f68:	b	11d78 <__assert_fail@plt+0xa9c>
   11f6c:	mov	r1, #9
   11f70:	mov	r0, r6
   11f74:	bl	11198 <kill@plt>
   11f78:	b	11dd0 <__assert_fail@plt+0xaf4>
   11f7c:	andeq	r9, r2, ip, asr #4
   11f80:	andeq	r7, r1, ip, lsl lr
   11f84:	andeq	r7, r1, r0, lsr #28
   11f88:	muleq	r2, ip, r2
   11f8c:	strdeq	r9, [r2], -r4
   11f90:	andeq	r9, r2, r8, lsl r1
   11f94:	andeq	r7, r1, r0, lsr #29
   11f98:	andeq	r7, r1, r4, lsr #29
   11f9c:	muleq	r2, r8, r2
   11fa0:			; <UNDEFINED> instruction: 0x000115bc
   11fa4:	andeq	r5, r0, r1, lsr #8
   11fa8:	andeq	r7, r1, r8, lsr lr
   11fac:	andeq	r7, r1, ip, asr #28
   11fb0:	andeq	r7, r1, r4, asr lr
   11fb4:	andeq	r7, r1, ip, ror #28
   11fb8:	andeq	r7, r1, r0, lsl #29
   11fbc:	muleq	r1, r0, lr
   11fc0:	andeq	r7, r1, ip, lsr #29
   11fc4:	andeq	r7, r1, r8, asr #29
   11fc8:	andeq	r7, r1, r8, ror #29
   11fcc:	andeq	r7, r1, r0, lsl #30
   11fd0:	andeq	r7, r1, ip, lsl pc
   11fd4:	ldr	ip, [r0]
   11fd8:	cmp	ip, #0
   11fdc:	beq	12030 <__assert_fail@plt+0xd54>
   11fe0:	push	{r4, r5, r6, lr}
   11fe4:	mov	ip, r2
   11fe8:	mov	r5, r1
   11fec:	mov	r4, r0
   11ff0:	ldr	r2, [r0, #32]
   11ff4:	str	r2, [r1, #36]	; 0x24
   11ff8:	ldr	r2, [r0, #24]
   11ffc:	str	r2, [r1, #28]
   12000:	ldr	r2, [r0, #28]
   12004:	str	r2, [r1, #32]
   12008:	ldr	r2, [r0, #12]
   1200c:	str	r2, [r1, #20]
   12010:	ldr	r6, [r0]
   12014:	mov	r2, r1
   12018:	mov	r1, r3
   1201c:	mov	r0, ip
   12020:	blx	r6
   12024:	ldr	r3, [r5, #36]	; 0x24
   12028:	str	r3, [r4, #32]
   1202c:	pop	{r4, r5, r6, pc}
   12030:	mov	r0, #7
   12034:	bx	lr
   12038:	push	{r4, r5, r6, lr}
   1203c:	ldr	r5, [r0, #16]
   12040:	ldr	r3, [r0]
   12044:	cmp	r3, #0
   12048:	beq	12060 <__assert_fail@plt+0xd84>
   1204c:	ldr	r2, [r1, #8]
   12050:	add	r2, r2, #1
   12054:	str	r2, [r1, #8]
   12058:	mov	r2, #0
   1205c:	b	120b4 <__assert_fail@plt+0xdd8>
   12060:	ldr	r3, [r0, #4]
   12064:	cmp	r3, #0
   12068:	ldrne	r3, [r1, #8]
   1206c:	addne	r3, r3, #1
   12070:	strne	r3, [r1, #8]
   12074:	cmp	r5, #0
   12078:	popeq	{r4, r5, r6, pc}
   1207c:	ldr	r0, [r5]
   12080:	cmp	r0, #0
   12084:	popeq	{r4, r5, r6, pc}
   12088:	mov	r4, r1
   1208c:	mov	r1, r4
   12090:	bl	12038 <__assert_fail@plt+0xd5c>
   12094:	ldr	r3, [r4, #12]
   12098:	add	r3, r3, #1
   1209c:	str	r3, [r4, #12]
   120a0:	ldr	r0, [r5, #16]!
   120a4:	cmp	r0, #0
   120a8:	bne	1208c <__assert_fail@plt+0xdb0>
   120ac:	pop	{r4, r5, r6, pc}
   120b0:	add	r2, r2, #1
   120b4:	add	r3, r3, #24
   120b8:	ldr	r0, [r3, #-20]	; 0xffffffec
   120bc:	cmp	r0, #0
   120c0:	bne	120b0 <__assert_fail@plt+0xdd4>
   120c4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   120c8:	cmp	r0, #0
   120cc:	bne	120b0 <__assert_fail@plt+0xdd4>
   120d0:	ldr	r0, [r3, #-8]
   120d4:	cmp	r0, #0
   120d8:	bne	120b0 <__assert_fail@plt+0xdd4>
   120dc:	ldr	r0, [r3, #-4]
   120e0:	cmp	r0, #0
   120e4:	bne	120b0 <__assert_fail@plt+0xdd4>
   120e8:	add	r0, r2, r2, lsl #1
   120ec:	ldr	r3, [r1]
   120f0:	add	r3, r3, r0
   120f4:	str	r3, [r1]
   120f8:	ldr	r3, [r1, #4]
   120fc:	add	r2, r3, r2
   12100:	str	r2, [r1, #4]
   12104:	b	12074 <__assert_fail@plt+0xd98>
   12108:	cmp	r0, #86	; 0x56
   1210c:	beq	12118 <__assert_fail@plt+0xe3c>
   12110:	mov	r0, #7
   12114:	bx	lr
   12118:	push	{r4, lr}
   1211c:	mov	r4, r2
   12120:	ldr	r3, [pc, #100]	; 1218c <__assert_fail@plt+0xeb0>
   12124:	ldr	r3, [r3]
   12128:	cmp	r3, #0
   1212c:	beq	12150 <__assert_fail@plt+0xe74>
   12130:	mov	r1, r2
   12134:	ldr	r0, [r2, #48]	; 0x30
   12138:	blx	r3
   1213c:	ldr	r3, [r4, #16]
   12140:	tst	r3, #32
   12144:	beq	12184 <__assert_fail@plt+0xea8>
   12148:	mov	r0, #0
   1214c:	pop	{r4, pc}
   12150:	ldr	r3, [pc, #56]	; 12190 <__assert_fail@plt+0xeb4>
   12154:	ldr	r2, [r3]
   12158:	cmp	r2, #0
   1215c:	beq	12170 <__assert_fail@plt+0xe94>
   12160:	ldr	r1, [pc, #44]	; 12194 <__assert_fail@plt+0xeb8>
   12164:	ldr	r0, [r4, #48]	; 0x30
   12168:	bl	111d4 <fprintf@plt>
   1216c:	b	1213c <__assert_fail@plt+0xe60>
   12170:	ldr	r2, [pc, #32]	; 12198 <__assert_fail@plt+0xebc>
   12174:	ldr	r1, [pc, #32]	; 1219c <__assert_fail@plt+0xec0>
   12178:	mov	r0, r4
   1217c:	bl	16878 <argp_error@@Base>
   12180:	b	1213c <__assert_fail@plt+0xe60>
   12184:	mov	r0, #0
   12188:	bl	111b0 <exit@plt>
   1218c:	andeq	r9, r2, r4, ror #4
   12190:	andeq	r9, r2, r0, lsr #5
   12194:	andeq	r8, r1, r0, asr #6
   12198:	andeq	r8, r1, r0, lsr #3
   1219c:	andeq	r8, r1, r4, asr #3
   121a0:	push	{r4, r5, r6, lr}
   121a4:	mov	r4, r2
   121a8:	cmn	r0, #3
   121ac:	beq	12248 <__assert_fail@plt+0xf6c>
   121b0:	mov	r5, r1
   121b4:	ble	121e0 <__assert_fail@plt+0xf04>
   121b8:	cmn	r0, #2
   121bc:	beq	12260 <__assert_fail@plt+0xf84>
   121c0:	cmp	r0, #63	; 0x3f
   121c4:	bne	122a4 <__assert_fail@plt+0xfc8>
   121c8:	ldr	r2, [pc, #228]	; 122b4 <__assert_fail@plt+0xfd8>
   121cc:	ldr	r1, [r4, #48]	; 0x30
   121d0:	mov	r0, r4
   121d4:	bl	167bc <argp_state_help@@Base>
   121d8:	mov	r0, #0
   121dc:	pop	{r4, r5, r6, pc}
   121e0:	cmn	r0, #4
   121e4:	bne	122a4 <__assert_fail@plt+0xfc8>
   121e8:	mov	r2, #10
   121ec:	mov	r1, #0
   121f0:	ldr	r0, [pc, #192]	; 122b8 <__assert_fail@plt+0xfdc>
   121f4:	cmp	r5, r1
   121f8:	movne	r0, r5
   121fc:	bl	11000 <strtol@plt>
   12200:	ldr	r3, [pc, #180]	; 122bc <__assert_fail@plt+0xfe0>
   12204:	str	r0, [r3]
   12208:	ldr	r2, [r3]
   1220c:	sub	r1, r2, #1
   12210:	str	r1, [r3]
   12214:	cmp	r2, #0
   12218:	ble	122ac <__assert_fail@plt+0xfd0>
   1221c:	mov	r5, #1
   12220:	mov	r4, r3
   12224:	mov	r0, r5
   12228:	bl	110b4 <sleep@plt>
   1222c:	ldr	r3, [r4]
   12230:	sub	r2, r3, #1
   12234:	str	r2, [r4]
   12238:	cmp	r3, #0
   1223c:	bgt	12224 <__assert_fail@plt+0xf48>
   12240:	mov	r0, #0
   12244:	pop	{r4, r5, r6, pc}
   12248:	ldr	r2, [pc, #112]	; 122c0 <__assert_fail@plt+0xfe4>
   1224c:	ldr	r1, [r4, #48]	; 0x30
   12250:	mov	r0, r4
   12254:	bl	167bc <argp_state_help@@Base>
   12258:	mov	r0, #0
   1225c:	pop	{r4, r5, r6, pc}
   12260:	ldr	r3, [pc, #92]	; 122c4 <__assert_fail@plt+0xfe8>
   12264:	str	r1, [r3]
   12268:	mov	r0, r1
   1226c:	bl	130f0 <argp_parse@@Base+0xb34>
   12270:	str	r0, [r4, #40]	; 0x28
   12274:	ldr	r3, [pc, #76]	; 122c8 <__assert_fail@plt+0xfec>
   12278:	str	r0, [r3]
   1227c:	ldr	r3, [r4, #16]
   12280:	and	r3, r3, #3
   12284:	cmp	r3, #1
   12288:	beq	12294 <__assert_fail@plt+0xfb8>
   1228c:	mov	r0, #0
   12290:	pop	{r4, r5, r6, pc}
   12294:	ldr	r3, [r4, #8]
   12298:	str	r5, [r3]
   1229c:	mov	r0, #0
   122a0:	pop	{r4, r5, r6, pc}
   122a4:	mov	r0, #7
   122a8:	pop	{r4, r5, r6, pc}
   122ac:	mov	r0, #0
   122b0:	pop	{r4, r5, r6, pc}
   122b4:	andeq	r0, r0, sl, ror r2
   122b8:	andeq	r8, r1, r8, asr #3
   122bc:	andeq	r9, r2, r0, ror #4
   122c0:	andeq	r0, r0, r1, lsl #4
   122c4:	andeq	r9, r2, ip, lsr r2
   122c8:	andeq	r9, r2, r8, lsr r2
   122cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d0:	sub	sp, sp, #36	; 0x24
   122d4:	str	r0, [sp, #12]
   122d8:	str	r1, [sp, #16]
   122dc:	str	r2, [sp, #20]
   122e0:	mov	r8, r3
   122e4:	ldr	sl, [sp, #72]	; 0x48
   122e8:	ldr	r9, [r0]
   122ec:	ldr	r5, [r0, #16]
   122f0:	cmp	r9, #0
   122f4:	addne	r6, r9, #24
   122f8:	strne	r5, [sp, #28]
   122fc:	strne	r8, [sp, #24]
   12300:	bne	1240c <__assert_fail@plt+0x1130>
   12304:	ldr	r3, [sp, #12]
   12308:	ldr	r3, [r3, #4]
   1230c:	cmp	r3, #0
   12310:	moveq	r0, r8
   12314:	moveq	r8, #0
   12318:	beq	12398 <__assert_fail@plt+0x10bc>
   1231c:	ldr	r2, [sp, #12]
   12320:	ldr	r3, [r2, #4]
   12324:	str	r3, [r8]
   12328:	str	r2, [r8, #4]
   1232c:	ldr	r3, [sl, #4]
   12330:	str	r3, [r8, #8]
   12334:	mov	r3, #0
   12338:	str	r3, [r8, #12]
   1233c:	ldr	r2, [sp, #16]
   12340:	str	r2, [r8, #16]
   12344:	ldr	r2, [sp, #20]
   12348:	str	r2, [r8, #20]
   1234c:	str	r3, [r8, #24]
   12350:	str	r3, [r8, #32]
   12354:	str	r3, [r8, #28]
   12358:	cmp	r5, r3
   1235c:	beq	12394 <__assert_fail@plt+0x10b8>
   12360:	ldr	r3, [r5]
   12364:	cmp	r3, #0
   12368:	beq	125b4 <__assert_fail@plt+0x12d8>
   1236c:	mov	r3, #0
   12370:	add	r3, r3, #1
   12374:	ldr	r2, [r5, r3, lsl #4]
   12378:	cmp	r2, #0
   1237c:	bne	12370 <__assert_fail@plt+0x1094>
   12380:	ldr	r2, [sl, #12]
   12384:	str	r2, [r8, #28]
   12388:	ldr	r2, [sl, #12]
   1238c:	add	r3, r2, r3, lsl #2
   12390:	str	r3, [sl, #12]
   12394:	add	r0, r8, #36	; 0x24
   12398:	cmp	r5, #0
   1239c:	beq	123d8 <__assert_fail@plt+0x10fc>
   123a0:	ldr	ip, [r5]
   123a4:	cmp	ip, #0
   123a8:	beq	123d8 <__assert_fail@plt+0x10fc>
   123ac:	mov	r2, #0
   123b0:	add	r4, r2, #1
   123b4:	str	sl, [sp]
   123b8:	mov	r3, r0
   123bc:	mov	r1, r8
   123c0:	mov	r0, ip
   123c4:	bl	122cc <__assert_fail@plt+0xff0>
   123c8:	ldr	ip, [r5, r4, lsl #4]
   123cc:	mov	r2, r4
   123d0:	cmp	ip, #0
   123d4:	bne	123b0 <__assert_fail@plt+0x10d4>
   123d8:	add	sp, sp, #36	; 0x24
   123dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123e0:	ldr	r0, [r4, #16]!
   123e4:	cmp	r0, #0
   123e8:	beq	124f4 <__assert_fail@plt+0x1218>
   123ec:	mov	r1, r7
   123f0:	bl	10ff4 <strcmp@plt>
   123f4:	cmp	r0, #0
   123f8:	bne	123e0 <__assert_fail@plt+0x1104>
   123fc:	sub	r4, r4, fp
   12400:	cmn	r4, #15
   12404:	blt	124f4 <__assert_fail@plt+0x1218>
   12408:	add	r6, r6, #24
   1240c:	sub	r2, r6, #24
   12410:	mov	r8, r6
   12414:	ldr	r4, [r6, #-20]	; 0xffffffec
   12418:	cmp	r4, #0
   1241c:	bne	1242c <__assert_fail@plt+0x1150>
   12420:	ldr	r3, [r6, #-24]	; 0xffffffe8
   12424:	cmp	r3, #0
   12428:	beq	12590 <__assert_fail@plt+0x12b4>
   1242c:	ldr	r3, [r8, #-12]
   12430:	and	r1, r3, #4
   12434:	cmp	r1, #0
   12438:	moveq	r9, r2
   1243c:	ldr	r5, [r9, #12]
   12440:	ands	r5, r5, #8
   12444:	bne	12408 <__assert_fail@plt+0x112c>
   12448:	tst	r3, #8
   1244c:	bne	124d0 <__assert_fail@plt+0x11f4>
   12450:	sub	r3, r4, #1
   12454:	cmp	r3, #254	; 0xfe
   12458:	bhi	124d0 <__assert_fail@plt+0x11f4>
   1245c:	bl	111a4 <__ctype_b_loc@plt>
   12460:	ldr	r3, [r0]
   12464:	lsl	r4, r4, #1
   12468:	ldrh	r3, [r3, r4]
   1246c:	tst	r3, #16384	; 0x4000
   12470:	beq	124d0 <__assert_fail@plt+0x11f4>
   12474:	ldr	r3, [sl, #4]
   12478:	add	r2, r3, #1
   1247c:	str	r2, [sl, #4]
   12480:	ldr	r2, [r8, #-20]	; 0xffffffec
   12484:	strb	r2, [r3]
   12488:	ldr	r3, [r9, #8]
   1248c:	cmp	r3, #0
   12490:	beq	124c4 <__assert_fail@plt+0x11e8>
   12494:	ldr	r3, [sl, #4]
   12498:	add	r2, r3, #1
   1249c:	str	r2, [sl, #4]
   124a0:	mov	r2, #58	; 0x3a
   124a4:	strb	r2, [r3]
   124a8:	ldr	r3, [r9, #12]
   124ac:	tst	r3, #1
   124b0:	ldrne	r3, [sl, #4]
   124b4:	addne	r2, r3, #1
   124b8:	strne	r2, [sl, #4]
   124bc:	movne	r2, #58	; 0x3a
   124c0:	strbne	r2, [r3]
   124c4:	ldr	r3, [sl, #4]
   124c8:	mov	r2, #0
   124cc:	strb	r2, [r3]
   124d0:	ldr	r7, [r8, #-24]	; 0xffffffe8
   124d4:	cmp	r7, #0
   124d8:	beq	12408 <__assert_fail@plt+0x112c>
   124dc:	ldr	r3, [sl]
   124e0:	ldr	fp, [r3, #8]
   124e4:	ldr	r0, [fp]
   124e8:	cmp	r0, #0
   124ec:	movne	r4, fp
   124f0:	bne	123ec <__assert_fail@plt+0x1110>
   124f4:	ldr	r3, [sl, #8]
   124f8:	str	r7, [r3]
   124fc:	ldr	r3, [sl, #8]
   12500:	ldr	r2, [r9, #8]
   12504:	cmp	r2, #0
   12508:	beq	12520 <__assert_fail@plt+0x1244>
   1250c:	ldr	r5, [r9, #12]
   12510:	and	r5, r5, #1
   12514:	cmp	r5, #0
   12518:	movne	r5, #2
   1251c:	moveq	r5, #1
   12520:	str	r5, [r3, #4]
   12524:	ldr	r3, [sl, #8]
   12528:	mov	r2, #0
   1252c:	str	r2, [r3, #8]
   12530:	ldr	r1, [sl, #8]
   12534:	ldr	r0, [r8, #-20]	; 0xffffffec
   12538:	cmp	r0, r2
   1253c:	ldreq	r0, [r9, #4]
   12540:	bic	r0, r0, #-16777216	; 0xff000000
   12544:	ldr	r3, [sl]
   12548:	ldr	r3, [r3, #48]	; 0x30
   1254c:	ldr	r2, [sp, #24]
   12550:	sub	r3, r2, r3
   12554:	asr	r3, r3, #2
   12558:	rsb	r2, r3, r3, lsl #3
   1255c:	add	r2, r2, r2, lsl #6
   12560:	add	r2, r3, r2, lsl #3
   12564:	rsb	r2, r2, r2, lsl #15
   12568:	add	r3, r3, r2, lsl #3
   1256c:	add	r3, r3, #1
   12570:	add	r3, r0, r3, lsl #24
   12574:	str	r3, [r1, #12]
   12578:	ldr	r3, [sl, #8]
   1257c:	add	r2, r3, #16
   12580:	str	r2, [sl, #8]
   12584:	mov	r2, #0
   12588:	str	r2, [r3, #16]
   1258c:	b	12408 <__assert_fail@plt+0x112c>
   12590:	ldr	r3, [r6, #-8]
   12594:	cmp	r3, #0
   12598:	bne	1242c <__assert_fail@plt+0x1150>
   1259c:	ldr	r3, [r6, #-4]
   125a0:	cmp	r3, #0
   125a4:	bne	1242c <__assert_fail@plt+0x1150>
   125a8:	ldr	r5, [sp, #28]
   125ac:	ldr	r8, [sp, #24]
   125b0:	b	1231c <__assert_fail@plt+0x1040>
   125b4:	mov	r3, #0
   125b8:	b	12380 <__assert_fail@plt+0x10a4>

000125bc <argp_parse@@Base>:
   125bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125c0:	add	fp, sp, #32
   125c4:	sub	sp, sp, #220	; 0xdc
   125c8:	mov	r8, r0
   125cc:	str	r1, [fp, #-236]	; 0xffffff14
   125d0:	str	r2, [fp, #-232]	; 0xffffff18
   125d4:	mov	r6, r3
   125d8:	tst	r3, #1
   125dc:	bne	1260c <argp_parse@@Base+0x50>
   125e0:	ldr	r3, [pc, #2548]	; 12fdc <argp_parse@@Base+0xa20>
   125e4:	ldr	r3, [r3]
   125e8:	cmp	r3, #0
   125ec:	moveq	r3, r2
   125f0:	ldreq	r2, [r3]
   125f4:	ldreq	r3, [pc, #2528]	; 12fdc <argp_parse@@Base+0xa20>
   125f8:	streq	r2, [r3]
   125fc:	ldr	r3, [pc, #2524]	; 12fe0 <argp_parse@@Base+0xa24>
   12600:	ldr	r3, [r3]
   12604:	cmp	r3, #0
   12608:	beq	127fc <argp_parse@@Base+0x240>
   1260c:	tst	r6, #16
   12610:	beq	12814 <argp_parse@@Base+0x258>
   12614:	mov	r2, #36	; 0x24
   12618:	mov	r1, #0
   1261c:	sub	r0, fp, #196	; 0xc4
   12620:	bl	11210 <memset@plt>
   12624:	ands	r3, r6, #4
   12628:	str	r3, [fp, #-240]	; 0xffffff10
   1262c:	moveq	r3, #1
   12630:	movne	r3, #0
   12634:	str	r3, [fp, #-228]	; 0xffffff1c
   12638:	mov	r3, #0
   1263c:	str	r3, [fp, #-224]	; 0xffffff20
   12640:	str	r3, [fp, #-220]	; 0xffffff24
   12644:	str	r3, [fp, #-216]	; 0xffffff28
   12648:	cmp	r8, r3
   1264c:	beq	1265c <argp_parse@@Base+0xa0>
   12650:	sub	r1, fp, #228	; 0xe4
   12654:	mov	r0, r8
   12658:	bl	12038 <__assert_fail@plt+0xd5c>
   1265c:	ldr	r4, [fp, #-220]	; 0xffffff24
   12660:	add	r4, r4, #1
   12664:	add	r4, r4, r4, lsl #3
   12668:	lsl	r4, r4, #2
   1266c:	ldr	r9, [fp, #-216]	; 0xffffff28
   12670:	lsl	r9, r9, #2
   12674:	add	sl, r9, r4
   12678:	ldr	r5, [fp, #-224]	; 0xffffff20
   1267c:	add	r5, r5, #1
   12680:	add	r5, sl, r5, lsl #4
   12684:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12688:	add	r0, r0, #1
   1268c:	add	r0, r0, r5
   12690:	bl	137c8 <argp_parse@@Base+0x120c>
   12694:	mov	r7, r0
   12698:	str	r0, [fp, #-40]	; 0xffffffd8
   1269c:	cmp	r0, #0
   126a0:	moveq	r4, #12
   126a4:	beq	12e2c <argp_parse@@Base+0x870>
   126a8:	str	r0, [fp, #-112]	; 0xffffff90
   126ac:	add	r4, r0, r4
   126b0:	str	r4, [fp, #-104]	; 0xffffff98
   126b4:	add	r3, r0, sl
   126b8:	str	r3, [fp, #-244]	; 0xffffff0c
   126bc:	str	r3, [fp, #-152]	; 0xffffff68
   126c0:	add	sl, r0, r5
   126c4:	str	sl, [fp, #-156]	; 0xffffff64
   126c8:	mov	r3, #1
   126cc:	str	r3, [fp, #-196]	; 0xffffff3c
   126d0:	str	r3, [fp, #-192]	; 0xffffff40
   126d4:	sub	ip, fp, #148	; 0x94
   126d8:	sub	lr, fp, #196	; 0xc4
   126dc:	ldm	lr!, {r0, r1, r2, r3}
   126e0:	stmia	ip!, {r0, r1, r2, r3}
   126e4:	ldm	lr!, {r0, r1, r2, r3}
   126e8:	stmia	ip!, {r0, r1, r2, r3}
   126ec:	ldr	r3, [lr]
   126f0:	str	r3, [ip]
   126f4:	mov	r2, r9
   126f8:	mov	r1, #0
   126fc:	mov	r0, r4
   12700:	bl	11210 <memset@plt>
   12704:	sub	r3, fp, #160	; 0xa0
   12708:	str	r3, [fp, #-212]	; 0xffffff2c
   1270c:	str	sl, [fp, #-208]	; 0xffffff30
   12710:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12714:	str	r3, [fp, #-204]	; 0xffffff34
   12718:	str	r4, [fp, #-200]	; 0xffffff38
   1271c:	tst	r6, #8
   12720:	beq	128ac <argp_parse@@Base+0x2f0>
   12724:	add	sl, sl, #1
   12728:	str	sl, [fp, #-208]	; 0xffffff30
   1272c:	mov	r3, #45	; 0x2d
   12730:	strb	r3, [r7, r5]
   12734:	mov	r3, #0
   12738:	ldr	r2, [fp, #-208]	; 0xffffff30
   1273c:	strb	r3, [r2]
   12740:	ldr	r2, [fp, #-204]	; 0xffffff34
   12744:	str	r3, [r2]
   12748:	str	r8, [fp, #-160]	; 0xffffff60
   1274c:	cmp	r8, r3
   12750:	beq	128c8 <argp_parse@@Base+0x30c>
   12754:	sub	r3, fp, #212	; 0xd4
   12758:	str	r3, [sp]
   1275c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12760:	mov	r2, #0
   12764:	mov	r1, r2
   12768:	mov	r0, r8
   1276c:	bl	122cc <__assert_fail@plt+0xff0>
   12770:	str	r0, [fp, #-108]	; 0xffffff94
   12774:	mov	r2, #56	; 0x38
   12778:	mov	r1, #0
   1277c:	sub	r0, fp, #96	; 0x60
   12780:	bl	11210 <memset@plt>
   12784:	ldr	r3, [fp, #-160]	; 0xffffff60
   12788:	str	r3, [fp, #-96]	; 0xffffffa0
   1278c:	ldr	r3, [fp, #-236]	; 0xffffff14
   12790:	str	r3, [fp, #-92]	; 0xffffffa4
   12794:	ldr	r3, [fp, #-232]	; 0xffffff18
   12798:	str	r3, [fp, #-88]	; 0xffffffa8
   1279c:	str	r6, [fp, #-80]	; 0xffffffb0
   127a0:	ldr	r3, [pc, #2108]	; 12fe4 <argp_parse@@Base+0xa28>
   127a4:	ldr	r3, [r3]
   127a8:	str	r3, [fp, #-52]	; 0xffffffcc
   127ac:	ldr	r3, [pc, #2100]	; 12fe8 <argp_parse@@Base+0xa2c>
   127b0:	ldr	r3, [r3]
   127b4:	str	r3, [fp, #-48]	; 0xffffffd0
   127b8:	sub	r3, fp, #160	; 0xa0
   127bc:	str	r3, [fp, #-44]	; 0xffffffd4
   127c0:	mov	r3, #1
   127c4:	str	r3, [fp, #-100]	; 0xffffff9c
   127c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   127cc:	ldr	r2, [fp, #-108]	; 0xffffff94
   127d0:	cmp	r3, r2
   127d4:	bcs	12960 <argp_parse@@Base+0x3a4>
   127d8:	ldr	r2, [fp, #8]
   127dc:	str	r2, [r3, #24]
   127e0:	ldr	r5, [fp, #-112]	; 0xffffff90
   127e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   127e8:	cmp	r5, r3
   127ec:	bcs	1296c <argp_parse@@Base+0x3b0>
   127f0:	ldr	r7, [pc, #2036]	; 12fec <argp_parse@@Base+0xa30>
   127f4:	mov	r6, #0
   127f8:	b	12904 <argp_parse@@Base+0x348>
   127fc:	ldr	r3, [fp, #-232]	; 0xffffff18
   12800:	ldr	r0, [r3]
   12804:	bl	130f0 <argp_parse@@Base+0xb34>
   12808:	ldr	r3, [pc, #2000]	; 12fe0 <argp_parse@@Base+0xa24>
   1280c:	str	r0, [r3]
   12810:	b	1260c <argp_parse@@Base+0x50>
   12814:	sub	sp, sp, #72	; 0x48
   12818:	add	r5, sp, #8
   1281c:	sub	sp, sp, #40	; 0x28
   12820:	add	r4, sp, #8
   12824:	mov	r1, #0
   12828:	str	r1, [r4]
   1282c:	str	r1, [r4, #4]
   12830:	str	r1, [r4, #8]
   12834:	str	r1, [r4, #12]
   12838:	str	r1, [r4, #20]
   1283c:	str	r1, [r4, #24]
   12840:	str	r5, [r4, #16]
   12844:	mov	r2, #64	; 0x40
   12848:	mov	r0, r5
   1284c:	bl	11210 <memset@plt>
   12850:	cmp	r8, #0
   12854:	addne	r3, r5, #16
   12858:	strne	r8, [r5]
   1285c:	moveq	r3, r5
   12860:	ldr	r2, [pc, #1928]	; 12ff0 <argp_parse@@Base+0xa34>
   12864:	str	r2, [r3]
   12868:	ldr	r2, [pc, #1924]	; 12ff4 <argp_parse@@Base+0xa38>
   1286c:	ldr	r2, [r2]
   12870:	cmp	r2, #0
   12874:	beq	12894 <argp_parse@@Base+0x2d8>
   12878:	add	r2, r3, #32
   1287c:	ldr	r1, [pc, #1908]	; 12ff8 <argp_parse@@Base+0xa3c>
   12880:	str	r1, [r3, #16]
   12884:	mov	r3, #0
   12888:	str	r3, [r2]
   1288c:	mov	r8, r4
   12890:	b	12614 <argp_parse@@Base+0x58>
   12894:	ldr	r2, [pc, #1888]	; 12ffc <argp_parse@@Base+0xa40>
   12898:	ldr	r2, [r2]
   1289c:	cmp	r2, #0
   128a0:	addeq	r2, r3, #16
   128a4:	bne	12878 <argp_parse@@Base+0x2bc>
   128a8:	b	12884 <argp_parse@@Base+0x2c8>
   128ac:	ldr	r3, [fp, #-240]	; 0xffffff10
   128b0:	cmp	r3, #0
   128b4:	addne	sl, sl, #1
   128b8:	strne	sl, [fp, #-208]	; 0xffffff30
   128bc:	movne	r3, #43	; 0x2b
   128c0:	strbne	r3, [r7, r5]
   128c4:	b	12734 <argp_parse@@Base+0x178>
   128c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   128cc:	str	r3, [fp, #-108]	; 0xffffff94
   128d0:	b	12774 <argp_parse@@Base+0x1b8>
   128d4:	mov	r3, r6
   128d8:	mov	r2, r7
   128dc:	sub	r1, fp, #96	; 0x60
   128e0:	mov	r0, r5
   128e4:	bl	11fd4 <__assert_fail@plt+0xcf8>
   128e8:	add	r5, r5, #36	; 0x24
   128ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   128f0:	cmp	r5, r3
   128f4:	bcs	12950 <argp_parse@@Base+0x394>
   128f8:	cmp	r0, #7
   128fc:	cmpne	r0, #0
   12900:	bne	12950 <argp_parse@@Base+0x394>
   12904:	ldr	r3, [r5, #16]
   12908:	cmp	r3, #0
   1290c:	ldrne	r2, [r5, #20]
   12910:	ldrne	r3, [r3, #28]
   12914:	ldrne	r3, [r3, r2, lsl #2]
   12918:	strne	r3, [r5, #24]
   1291c:	ldr	r3, [r5]
   12920:	cmp	r3, #0
   12924:	bne	128d4 <argp_parse@@Base+0x318>
   12928:	ldr	r3, [r5, #4]
   1292c:	ldr	r3, [r3, #16]
   12930:	cmp	r3, #0
   12934:	beq	128d4 <argp_parse@@Base+0x318>
   12938:	ldr	r3, [r3]
   1293c:	cmp	r3, #0
   12940:	ldrne	r3, [r5, #28]
   12944:	ldrne	r2, [r5, #24]
   12948:	strne	r2, [r3]
   1294c:	b	128d4 <argp_parse@@Base+0x318>
   12950:	mov	r4, r0
   12954:	cmp	r0, #7
   12958:	beq	1296c <argp_parse@@Base+0x3b0>
   1295c:	b	12964 <argp_parse@@Base+0x3a8>
   12960:	mov	r4, #0
   12964:	cmp	r4, #0
   12968:	bne	12e2c <argp_parse@@Base+0x870>
   1296c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12970:	tst	r3, #2
   12974:	moveq	r3, #1
   12978:	streq	r3, [fp, #-144]	; 0xffffff70
   1297c:	beq	129a8 <argp_parse@@Base+0x3ec>
   12980:	mov	r2, #0
   12984:	str	r2, [fp, #-144]	; 0xffffff70
   12988:	tst	r3, #1
   1298c:	beq	129a8 <argp_parse@@Base+0x3ec>
   12990:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12994:	sub	r3, r3, #4
   12998:	str	r3, [fp, #-88]	; 0xffffffa8
   1299c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   129a0:	add	r3, r3, #1
   129a4:	str	r3, [fp, #-92]	; 0xffffffa4
   129a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   129ac:	ldr	r2, [fp, #-232]	; 0xffffff18
   129b0:	cmp	r2, r3
   129b4:	beq	129d4 <argp_parse@@Base+0x418>
   129b8:	ldr	r3, [pc, #1568]	; 12fe0 <argp_parse@@Base+0xa24>
   129bc:	ldr	r3, [r3]
   129c0:	str	r3, [fp, #-56]	; 0xffffffc8
   129c4:	mov	r6, #0
   129c8:	mov	sl, #1
   129cc:	mvn	r9, #0
   129d0:	b	12c44 <argp_parse@@Base+0x688>
   129d4:	ldr	r0, [r2]
   129d8:	cmp	r0, #0
   129dc:	beq	129b8 <argp_parse@@Base+0x3fc>
   129e0:	bl	130f0 <argp_parse@@Base+0xb34>
   129e4:	str	r0, [fp, #-56]	; 0xffffffc8
   129e8:	b	129c4 <argp_parse@@Base+0x408>
   129ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   129f0:	str	r3, [fp, #-148]	; 0xffffff6c
   129f4:	str	r9, [fp, #-140]	; 0xffffff74
   129f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   129fc:	tst	r3, #64	; 0x40
   12a00:	beq	12acc <argp_parse@@Base+0x510>
   12a04:	sub	r3, fp, #148	; 0x94
   12a08:	str	r3, [sp, #4]
   12a0c:	str	r6, [sp]
   12a10:	ldr	r3, [fp, #-152]	; 0xffffff68
   12a14:	ldr	r2, [fp, #-156]	; 0xffffff64
   12a18:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12a1c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12a20:	bl	1328c <argp_parse@@Base+0xcd0>
   12a24:	mov	r5, r0
   12a28:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12a2c:	str	r4, [fp, #-84]	; 0xffffffac
   12a30:	cmn	r5, #1
   12a34:	beq	12af4 <argp_parse@@Base+0x538>
   12a38:	cmp	r5, #63	; 0x3f
   12a3c:	beq	12b20 <argp_parse@@Base+0x564>
   12a40:	cmp	r5, #1
   12a44:	beq	12b58 <argp_parse@@Base+0x59c>
   12a48:	ldr	r4, [fp, #-136]	; 0xffffff78
   12a4c:	asrs	r3, r5, #24
   12a50:	bne	12c04 <argp_parse@@Base+0x648>
   12a54:	mov	r1, r5
   12a58:	ldr	r0, [fp, #-156]	; 0xffffff64
   12a5c:	bl	111c8 <strchr@plt>
   12a60:	subs	r1, r0, #0
   12a64:	beq	12ab4 <argp_parse@@Base+0x4f8>
   12a68:	ldr	r0, [fp, #-112]	; 0xffffff90
   12a6c:	ldr	r2, [fp, #-108]	; 0xffffff94
   12a70:	cmp	r2, r0
   12a74:	bls	12ab4 <argp_parse@@Base+0x4f8>
   12a78:	ldr	r3, [r0, #8]
   12a7c:	cmp	r1, r3
   12a80:	bcc	12a9c <argp_parse@@Base+0x4e0>
   12a84:	add	r0, r0, #36	; 0x24
   12a88:	cmp	r2, r0
   12a8c:	bls	12ab4 <argp_parse@@Base+0x4f8>
   12a90:	ldr	r3, [r0, #8]
   12a94:	cmp	r1, r3
   12a98:	bcs	12a84 <argp_parse@@Base+0x4c8>
   12a9c:	mov	r3, r4
   12aa0:	mov	r2, r5
   12aa4:	sub	r1, fp, #96	; 0x60
   12aa8:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12aac:	cmp	r0, #7
   12ab0:	bne	12c3c <argp_parse@@Base+0x680>
   12ab4:	ldr	r3, [pc, #1348]	; 13000 <argp_parse@@Base+0xa44>
   12ab8:	mov	r2, r5
   12abc:	ldr	r1, [pc, #1344]	; 13004 <argp_parse@@Base+0xa48>
   12ac0:	sub	r0, fp, #96	; 0x60
   12ac4:	bl	16878 <argp_error@@Base>
   12ac8:	b	12ce4 <argp_parse@@Base+0x728>
   12acc:	sub	r3, fp, #148	; 0x94
   12ad0:	str	r3, [sp, #4]
   12ad4:	str	r6, [sp]
   12ad8:	ldr	r3, [fp, #-152]	; 0xffffff68
   12adc:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ae0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ae4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12ae8:	bl	13230 <argp_parse@@Base+0xc74>
   12aec:	mov	r5, r0
   12af0:	b	12a28 <argp_parse@@Base+0x46c>
   12af4:	str	r6, [fp, #-100]	; 0xffffff9c
   12af8:	cmp	r4, #1
   12afc:	ble	12c6c <argp_parse@@Base+0x6b0>
   12b00:	sub	r3, r4, #-1073741823	; 0xc0000001
   12b04:	ldr	r1, [pc, #1276]	; 13008 <argp_parse@@Base+0xa4c>
   12b08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12b0c:	ldr	r0, [r2, r3, lsl #2]
   12b10:	bl	10ff4 <strcmp@plt>
   12b14:	cmp	r0, #0
   12b18:	streq	r4, [fp, #-72]	; 0xffffffb8
   12b1c:	b	12c6c <argp_parse@@Base+0x6b0>
   12b20:	ldr	r3, [fp, #-140]	; 0xffffff74
   12b24:	cmn	r3, #1
   12b28:	beq	12a48 <argp_parse@@Base+0x48c>
   12b2c:	mov	r3, #0
   12b30:	b	12cf4 <argp_parse@@Base+0x738>
   12b34:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12b38:	tst	r2, #4
   12b3c:	movne	r3, #1
   12b40:	bne	12cf4 <argp_parse@@Base+0x738>
   12b44:	add	r2, r3, #1
   12b48:	str	r2, [fp, #-84]	; 0xffffffac
   12b4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12b50:	ldr	r3, [r2, r3, lsl #2]
   12b54:	str	r3, [fp, #-136]	; 0xffffff78
   12b58:	ldr	r7, [fp, #-136]	; 0xffffff78
   12b5c:	ldr	r8, [fp, #-84]	; 0xffffffac
   12b60:	sub	r8, r8, #1
   12b64:	str	r8, [fp, #-84]	; 0xffffffac
   12b68:	ldr	r5, [fp, #-112]	; 0xffffff90
   12b6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12b70:	cmp	r3, r5
   12b74:	bhi	12bc0 <argp_parse@@Base+0x604>
   12b78:	b	12bfc <argp_parse@@Base+0x640>
   12b7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12b80:	sub	r3, r3, #1
   12b84:	str	r3, [fp, #-84]	; 0xffffffac
   12b88:	mov	r3, r6
   12b8c:	ldr	r2, [pc, #1144]	; 1300c <argp_parse@@Base+0xa50>
   12b90:	sub	r1, fp, #96	; 0x60
   12b94:	mov	r0, r5
   12b98:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12b9c:	add	r5, r5, #36	; 0x24
   12ba0:	ldr	r3, [fp, #-108]	; 0xffffff94
   12ba4:	cmp	r5, r3
   12ba8:	movcs	r3, #0
   12bac:	movcc	r3, #1
   12bb0:	cmp	r0, #7
   12bb4:	movne	r3, #0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12fa0 <argp_parse@@Base+0x9e4>
   12bc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   12bc4:	add	r3, r3, #1
   12bc8:	str	r3, [fp, #-84]	; 0xffffffac
   12bcc:	mov	r3, r7
   12bd0:	mov	r2, r6
   12bd4:	sub	r1, fp, #96	; 0x60
   12bd8:	mov	r0, r5
   12bdc:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12be0:	cmp	r0, #7
   12be4:	beq	12b7c <argp_parse@@Base+0x5c0>
   12be8:	add	r5, r5, #36	; 0x24
   12bec:	cmp	r0, #0
   12bf0:	beq	12fb0 <argp_parse@@Base+0x9f4>
   12bf4:	cmp	r0, #7
   12bf8:	bne	12c3c <argp_parse@@Base+0x680>
   12bfc:	mov	r5, #1
   12c00:	b	12ce4 <argp_parse@@Base+0x728>
   12c04:	ands	r1, r5, #8388608	; 0x800000
   12c08:	movne	r1, #-16777216	; 0xff000000
   12c0c:	bic	r2, r5, #-16777216	; 0xff000000
   12c10:	add	r0, r3, r3, lsl #3
   12c14:	lsl	r0, r0, #2
   12c18:	sub	r0, r0, #36	; 0x24
   12c1c:	mov	r3, r4
   12c20:	orr	r2, r2, r1
   12c24:	sub	r1, fp, #96	; 0x60
   12c28:	ldr	ip, [fp, #-112]	; 0xffffff90
   12c2c:	add	r0, ip, r0
   12c30:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12c34:	cmp	r0, #7
   12c38:	beq	12c84 <argp_parse@@Base+0x6c8>
   12c3c:	cmp	r0, #0
   12c40:	bne	12d94 <argp_parse@@Base+0x7d8>
   12c44:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12c48:	cmp	r3, #0
   12c4c:	beq	12c60 <argp_parse@@Base+0x6a4>
   12c50:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c54:	cmp	r3, r2
   12c58:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12c5c:	ble	12c6c <argp_parse@@Base+0x6b0>
   12c60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12c64:	cmp	r3, #0
   12c68:	bne	129ec <argp_parse@@Base+0x430>
   12c6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12c74:	cmp	r3, r2
   12c78:	blt	12b34 <argp_parse@@Base+0x578>
   12c7c:	mov	r3, #1
   12c80:	b	12cf4 <argp_parse@@Base+0x738>
   12c84:	ldr	r3, [fp, #-152]	; 0xffffff68
   12c88:	ldr	r2, [r3, #12]
   12c8c:	cmp	r2, r5
   12c90:	beq	12cc4 <argp_parse@@Base+0x708>
   12c94:	ldr	r2, [r3]
   12c98:	cmp	r2, #0
   12c9c:	beq	12d8c <argp_parse@@Base+0x7d0>
   12ca0:	add	r3, r3, #16
   12ca4:	ldr	r2, [r3, #12]
   12ca8:	cmp	r2, r5
   12cac:	beq	12cc4 <argp_parse@@Base+0x708>
   12cb0:	ldr	r2, [r3]
   12cb4:	cmp	r2, #0
   12cb8:	bne	12ca0 <argp_parse@@Base+0x6e4>
   12cbc:	ldr	r2, [pc, #844]	; 13010 <argp_parse@@Base+0xa54>
   12cc0:	b	12cd4 <argp_parse@@Base+0x718>
   12cc4:	ldr	r2, [r3]
   12cc8:	ldr	r3, [pc, #832]	; 13010 <argp_parse@@Base+0xa54>
   12ccc:	cmp	r2, #0
   12cd0:	moveq	r2, r3
   12cd4:	ldr	r3, [pc, #804]	; 13000 <argp_parse@@Base+0xa44>
   12cd8:	ldr	r1, [pc, #820]	; 13014 <argp_parse@@Base+0xa58>
   12cdc:	sub	r0, fp, #96	; 0x60
   12ce0:	bl	16878 <argp_error@@Base>
   12ce4:	add	r5, r5, #1
   12ce8:	bics	r3, r5, #2
   12cec:	moveq	r3, #1
   12cf0:	movne	r3, #0
   12cf4:	cmp	r3, #0
   12cf8:	moveq	r4, #7
   12cfc:	beq	12d98 <argp_parse@@Base+0x7dc>
   12d00:	ldr	r3, [fp, #-84]	; 0xffffffac
   12d04:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12d08:	cmp	r3, r2
   12d0c:	beq	12e38 <argp_parse@@Base+0x87c>
   12d10:	ldr	r2, [fp, #4]
   12d14:	cmp	r2, #0
   12d18:	strne	r3, [r2]
   12d1c:	beq	12f34 <argp_parse@@Base+0x978>
   12d20:	ldr	r5, [fp, #-108]	; 0xffffff94
   12d24:	sub	r5, r5, #36	; 0x24
   12d28:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d2c:	cmp	r5, r3
   12d30:	bcc	12f70 <argp_parse@@Base+0x9b4>
   12d34:	ldr	r7, [pc, #732]	; 13018 <argp_parse@@Base+0xa5c>
   12d38:	mov	r6, #0
   12d3c:	mov	r3, r6
   12d40:	mov	r2, r7
   12d44:	sub	r1, fp, #96	; 0x60
   12d48:	mov	r0, r5
   12d4c:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12d50:	sub	r5, r5, #36	; 0x24
   12d54:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d58:	cmp	r5, r3
   12d5c:	bcc	12d6c <argp_parse@@Base+0x7b0>
   12d60:	cmp	r0, #7
   12d64:	cmpne	r0, #0
   12d68:	beq	12d3c <argp_parse@@Base+0x780>
   12d6c:	mov	r4, r0
   12d70:	cmp	r0, #7
   12d74:	moveq	r4, #0
   12d78:	ldr	r5, [fp, #-108]	; 0xffffff94
   12d7c:	sub	r5, r5, #36	; 0x24
   12d80:	cmp	r3, r5
   12d84:	bls	12df0 <argp_parse@@Base+0x834>
   12d88:	b	12e24 <argp_parse@@Base+0x868>
   12d8c:	ldr	r2, [pc, #636]	; 13010 <argp_parse@@Base+0xa54>
   12d90:	b	12cd4 <argp_parse@@Base+0x718>
   12d94:	mov	r4, r0
   12d98:	cmp	r4, #7
   12d9c:	beq	12f58 <argp_parse@@Base+0x99c>
   12da0:	ldr	r5, [fp, #-112]	; 0xffffff90
   12da4:	ldr	r3, [fp, #-108]	; 0xffffff94
   12da8:	cmp	r3, r5
   12dac:	bls	12ddc <argp_parse@@Base+0x820>
   12db0:	ldr	r7, [pc, #612]	; 1301c <argp_parse@@Base+0xa60>
   12db4:	mov	r6, #0
   12db8:	mov	r3, r6
   12dbc:	mov	r2, r7
   12dc0:	sub	r1, fp, #96	; 0x60
   12dc4:	mov	r0, r5
   12dc8:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12dcc:	add	r5, r5, #36	; 0x24
   12dd0:	ldr	r3, [fp, #-108]	; 0xffffff94
   12dd4:	cmp	r5, r3
   12dd8:	bcc	12db8 <argp_parse@@Base+0x7fc>
   12ddc:	ldr	r5, [fp, #-108]	; 0xffffff94
   12de0:	sub	r5, r5, #36	; 0x24
   12de4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12de8:	cmp	r3, r5
   12dec:	bhi	12e1c <argp_parse@@Base+0x860>
   12df0:	ldr	r7, [pc, #552]	; 13020 <argp_parse@@Base+0xa64>
   12df4:	mov	r6, #0
   12df8:	mov	r3, r6
   12dfc:	mov	r2, r7
   12e00:	sub	r1, fp, #96	; 0x60
   12e04:	mov	r0, r5
   12e08:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12e0c:	sub	r5, r5, #36	; 0x24
   12e10:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e14:	cmp	r5, r3
   12e18:	bcs	12df8 <argp_parse@@Base+0x83c>
   12e1c:	cmp	r4, #7
   12e20:	moveq	r4, #22
   12e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e28:	bl	131b0 <argp_parse@@Base+0xbf4>
   12e2c:	mov	r0, r4
   12e30:	sub	sp, fp, #32
   12e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e38:	ldr	r6, [fp, #-112]	; 0xffffff90
   12e3c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12e40:	cmp	r6, r5
   12e44:	bcs	12f78 <argp_parse@@Base+0x9bc>
   12e48:	mov	r4, #0
   12e4c:	ldr	r8, [pc, #464]	; 13024 <argp_parse@@Base+0xa68>
   12e50:	mov	r7, r4
   12e54:	mov	r0, r4
   12e58:	b	12e78 <argp_parse@@Base+0x8bc>
   12e5c:	add	r6, r6, #36	; 0x24
   12e60:	ldr	r5, [fp, #-108]	; 0xffffff94
   12e64:	cmp	r6, r5
   12e68:	bcs	12ea4 <argp_parse@@Base+0x8e8>
   12e6c:	cmp	r0, #7
   12e70:	cmpne	r0, #0
   12e74:	bne	12e9c <argp_parse@@Base+0x8e0>
   12e78:	ldr	r3, [r6, #12]
   12e7c:	cmp	r3, #0
   12e80:	bne	12e5c <argp_parse@@Base+0x8a0>
   12e84:	mov	r3, r7
   12e88:	mov	r2, r8
   12e8c:	sub	r1, fp, #96	; 0x60
   12e90:	mov	r0, r6
   12e94:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12e98:	b	12e5c <argp_parse@@Base+0x8a0>
   12e9c:	mov	r4, r0
   12ea0:	b	12f08 <argp_parse@@Base+0x94c>
   12ea4:	mov	r4, r0
   12ea8:	sub	r5, r5, #36	; 0x24
   12eac:	ldr	r3, [fp, #-112]	; 0xffffff90
   12eb0:	cmp	r3, r5
   12eb4:	bhi	12f08 <argp_parse@@Base+0x94c>
   12eb8:	cmp	r0, #0
   12ebc:	cmpne	r0, #7
   12ec0:	bne	12f08 <argp_parse@@Base+0x94c>
   12ec4:	ldr	r7, [pc, #348]	; 13028 <argp_parse@@Base+0xa6c>
   12ec8:	mov	r6, #0
   12ecc:	mov	r3, r6
   12ed0:	mov	r2, r7
   12ed4:	sub	r1, fp, #96	; 0x60
   12ed8:	mov	r0, r5
   12edc:	bl	11fd4 <__assert_fail@plt+0xcf8>
   12ee0:	sub	r5, r5, #36	; 0x24
   12ee4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ee8:	cmp	r5, r3
   12eec:	bcc	12f04 <argp_parse@@Base+0x948>
   12ef0:	cmp	r0, #7
   12ef4:	cmpne	r0, #0
   12ef8:	beq	12ecc <argp_parse@@Base+0x910>
   12efc:	mov	r4, r0
   12f00:	b	12f08 <argp_parse@@Base+0x94c>
   12f04:	mov	r4, r0
   12f08:	cmp	r4, #7
   12f0c:	beq	12f8c <argp_parse@@Base+0x9d0>
   12f10:	ldr	r3, [fp, #4]
   12f14:	cmp	r3, #0
   12f18:	beq	12fd0 <argp_parse@@Base+0xa14>
   12f1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12f20:	ldr	r2, [fp, #4]
   12f24:	str	r3, [r2]
   12f28:	cmp	r4, #0
   12f2c:	beq	12d20 <argp_parse@@Base+0x764>
   12f30:	b	12d98 <argp_parse@@Base+0x7dc>
   12f34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12f38:	tst	r3, #2
   12f3c:	bne	12f58 <argp_parse@@Base+0x99c>
   12f40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12f44:	cmp	r0, #0
   12f48:	beq	12f58 <argp_parse@@Base+0x99c>
   12f4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12f50:	ldr	r1, [pc, #212]	; 1302c <argp_parse@@Base+0xa70>
   12f54:	bl	111d4 <fprintf@plt>
   12f58:	mov	r2, #260	; 0x104
   12f5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12f60:	sub	r0, fp, #96	; 0x60
   12f64:	bl	167bc <argp_state_help@@Base>
   12f68:	mov	r4, #7
   12f6c:	b	12da0 <argp_parse@@Base+0x7e4>
   12f70:	mov	r4, #0
   12f74:	b	12e1c <argp_parse@@Base+0x860>
   12f78:	sub	r5, r5, #36	; 0x24
   12f7c:	cmp	r6, r5
   12f80:	movhi	r4, #0
   12f84:	bls	12ec4 <argp_parse@@Base+0x908>
   12f88:	b	12f10 <argp_parse@@Base+0x954>
   12f8c:	ldr	r3, [fp, #4]
   12f90:	cmp	r3, #0
   12f94:	movne	r4, #0
   12f98:	bne	12f1c <argp_parse@@Base+0x960>
   12f9c:	b	12d20 <argp_parse@@Base+0x764>
   12fa0:	cmp	r0, #0
   12fa4:	bne	12bf4 <argp_parse@@Base+0x638>
   12fa8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12fac:	str	r3, [fp, #-84]	; 0xffffffac
   12fb0:	ldr	r3, [fp, #-84]	; 0xffffffac
   12fb4:	cmp	r8, r3
   12fb8:	sublt	r8, r3, r8
   12fbc:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   12fc0:	addlt	r8, r3, r8
   12fc4:	strlt	r8, [r5, #-24]	; 0xffffffe8
   12fc8:	strge	sl, [fp, #-100]	; 0xffffff9c
   12fcc:	b	12c44 <argp_parse@@Base+0x688>
   12fd0:	cmp	r4, #0
   12fd4:	beq	12d20 <argp_parse@@Base+0x764>
   12fd8:	b	12da0 <argp_parse@@Base+0x7e4>
   12fdc:	andeq	r9, r2, ip, lsr r2
   12fe0:	andeq	r9, r2, r8, lsr r2
   12fe4:	andeq	r9, r2, r0, asr #4
   12fe8:	andeq	r9, r2, r4, asr #4
   12fec:	tsteq	r0, r3
   12ff0:	andeq	r8, r1, r8, lsl #1
   12ff4:	andeq	r9, r2, r0, lsr #5
   12ff8:	andeq	r8, r1, r4, lsr #1
   12ffc:	andeq	r9, r2, r4, ror #4
   13000:	andeq	r8, r1, r0, asr #1
   13004:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13008:	ldrdeq	r8, [r1], -r4
   1300c:	tsteq	r0, r6
   13010:	ldrdeq	r8, [r1], -r0
   13014:	andeq	r8, r1, r0, ror #3
   13018:	tsteq	r0, r4
   1301c:	tsteq	r0, r5
   13020:	tsteq	r0, r7
   13024:	tsteq	r0, r2
   13028:	tsteq	r0, r1
   1302c:	andeq	r8, r1, ip, ror #3
   13030:	cmp	r1, #0
   13034:	beq	13080 <argp_parse@@Base+0xac4>
   13038:	ldr	r2, [r1, #52]	; 0x34
   1303c:	ldr	r3, [r2, #48]	; 0x30
   13040:	ldr	r1, [r2, #52]	; 0x34
   13044:	cmp	r3, r1
   13048:	bcs	13088 <argp_parse@@Base+0xacc>
   1304c:	ldr	r2, [r3, #4]
   13050:	cmp	r0, r2
   13054:	beq	13070 <argp_parse@@Base+0xab4>
   13058:	add	r3, r3, #36	; 0x24
   1305c:	cmp	r3, r1
   13060:	bcs	13078 <argp_parse@@Base+0xabc>
   13064:	ldr	r2, [r3, #4]
   13068:	cmp	r2, r0
   1306c:	bne	13058 <argp_parse@@Base+0xa9c>
   13070:	ldr	r0, [r3, #24]
   13074:	bx	lr
   13078:	mov	r0, #0
   1307c:	bx	lr
   13080:	mov	r0, #0
   13084:	bx	lr
   13088:	mov	r0, #0
   1308c:	bx	lr
   13090:	push	{lr}		; (str lr, [sp, #-4]!)
   13094:	sub	sp, sp, #12
   13098:	ldr	r3, [pc, #28]	; 130bc <argp_parse@@Base+0xb00>
   1309c:	ldr	r1, [r3]
   130a0:	ldr	r3, [r3, #4]
   130a4:	str	r3, [sp]
   130a8:	ldr	r3, [pc, #16]	; 130c0 <argp_parse@@Base+0xb04>
   130ac:	ldr	r2, [pc, #16]	; 130c4 <argp_parse@@Base+0xb08>
   130b0:	bl	136a0 <argp_parse@@Base+0x10e4>
   130b4:	add	sp, sp, #12
   130b8:	pop	{pc}		; (ldr pc, [sp], #4)
   130bc:	andeq	r9, r2, r8, ror #4
   130c0:	ldrdeq	r8, [r1], -r4
   130c4:	andeq	r8, r1, r4, ror #5
   130c8:	ldr	r2, [pc, #20]	; 130e4 <argp_parse@@Base+0xb28>
   130cc:	ldr	r3, [pc, #20]	; 130e8 <argp_parse@@Base+0xb2c>
   130d0:	str	r2, [r3]
   130d4:	ldr	r3, [pc, #16]	; 130ec <argp_parse@@Base+0xb30>
   130d8:	str	r0, [r3]
   130dc:	str	r1, [r3, #4]
   130e0:	bx	lr
   130e4:	muleq	r1, r0, r0
   130e8:	andeq	r9, r2, r4, ror #4
   130ec:	andeq	r9, r2, r8, ror #4
   130f0:	ldrb	r3, [r0]
   130f4:	cmp	r3, #47	; 0x2f
   130f8:	bne	13108 <argp_parse@@Base+0xb4c>
   130fc:	ldrb	r3, [r0, #1]!
   13100:	cmp	r3, #47	; 0x2f
   13104:	beq	130fc <argp_parse@@Base+0xb40>
   13108:	ldrb	r2, [r0]
   1310c:	cmp	r2, #0
   13110:	bxeq	lr
   13114:	push	{lr}		; (str lr, [sp, #-4]!)
   13118:	mov	r1, r0
   1311c:	mov	r3, #0
   13120:	mov	lr, #1
   13124:	mov	ip, r3
   13128:	b	13138 <argp_parse@@Base+0xb7c>
   1312c:	ldrb	r2, [r1, #1]!
   13130:	cmp	r2, #0
   13134:	beq	13154 <argp_parse@@Base+0xb98>
   13138:	cmp	r2, #47	; 0x2f
   1313c:	moveq	r3, lr
   13140:	beq	1312c <argp_parse@@Base+0xb70>
   13144:	cmp	r3, #0
   13148:	movne	r0, r1
   1314c:	movne	r3, ip
   13150:	b	1312c <argp_parse@@Base+0xb70>
   13154:	pop	{pc}		; (ldr pc, [sp], #4)
   13158:	push	{r4, lr}
   1315c:	mov	r4, r0
   13160:	bl	111bc <strlen@plt>
   13164:	cmp	r0, #1
   13168:	popls	{r4, pc}
   1316c:	sub	r3, r0, #1
   13170:	add	r2, r4, r3
   13174:	ldrb	r1, [r4, r3]
   13178:	cmp	r1, #47	; 0x2f
   1317c:	popne	{r4, pc}
   13180:	cmp	r3, #1
   13184:	beq	131a8 <argp_parse@@Base+0xbec>
   13188:	sub	r0, r3, #1
   1318c:	ldrb	r1, [r2, #-1]!
   13190:	cmp	r1, #47	; 0x2f
   13194:	beq	131a0 <argp_parse@@Base+0xbe4>
   13198:	mov	r0, r3
   1319c:	pop	{r4, pc}
   131a0:	mov	r3, r0
   131a4:	b	13180 <argp_parse@@Base+0xbc4>
   131a8:	mov	r0, #1
   131ac:	pop	{r4, pc}
   131b0:	push	{r4, r5, lr}
   131b4:	sub	sp, sp, #12
   131b8:	mov	r5, r0
   131bc:	bl	111ec <__errno_location@plt>
   131c0:	mov	r4, r0
   131c4:	ldr	r3, [r0]
   131c8:	str	r3, [sp]
   131cc:	str	r3, [sp, #4]
   131d0:	mov	r3, #0
   131d4:	str	r3, [r0]
   131d8:	mov	r0, r5
   131dc:	bl	1106c <free@plt>
   131e0:	ldr	r3, [r4]
   131e4:	cmp	r3, #0
   131e8:	moveq	r3, #4
   131ec:	movne	r3, #0
   131f0:	add	r2, sp, #8
   131f4:	add	r3, r2, r3
   131f8:	ldr	r3, [r3, #-8]
   131fc:	str	r3, [r4]
   13200:	add	sp, sp, #12
   13204:	pop	{r4, r5, pc}
   13208:	push	{lr}		; (str lr, [sp, #-4]!)
   1320c:	sub	sp, sp, #20
   13210:	mov	ip, #0
   13214:	str	ip, [sp, #8]
   13218:	str	ip, [sp, #4]
   1321c:	ldr	ip, [sp, #24]
   13220:	str	ip, [sp]
   13224:	bl	174f4 <argp_error@@Base+0xc7c>
   13228:	add	sp, sp, #20
   1322c:	pop	{pc}		; (ldr pc, [sp], #4)
   13230:	push	{lr}		; (str lr, [sp, #-4]!)
   13234:	sub	sp, sp, #20
   13238:	mov	ip, #0
   1323c:	str	ip, [sp, #12]
   13240:	ldr	lr, [sp, #28]
   13244:	str	lr, [sp, #8]
   13248:	str	ip, [sp, #4]
   1324c:	ldr	ip, [sp, #24]
   13250:	str	ip, [sp]
   13254:	bl	16f78 <argp_error@@Base+0x700>
   13258:	add	sp, sp, #20
   1325c:	pop	{pc}		; (ldr pc, [sp], #4)
   13260:	push	{lr}		; (str lr, [sp, #-4]!)
   13264:	sub	sp, sp, #20
   13268:	mov	ip, #0
   1326c:	str	ip, [sp, #8]
   13270:	mov	ip, #1
   13274:	str	ip, [sp, #4]
   13278:	ldr	ip, [sp, #24]
   1327c:	str	ip, [sp]
   13280:	bl	174f4 <argp_error@@Base+0xc7c>
   13284:	add	sp, sp, #20
   13288:	pop	{pc}		; (ldr pc, [sp], #4)
   1328c:	push	{lr}		; (str lr, [sp, #-4]!)
   13290:	sub	sp, sp, #20
   13294:	mov	ip, #0
   13298:	str	ip, [sp, #12]
   1329c:	ldr	ip, [sp, #28]
   132a0:	str	ip, [sp, #8]
   132a4:	mov	ip, #1
   132a8:	str	ip, [sp, #4]
   132ac:	ldr	ip, [sp, #24]
   132b0:	str	ip, [sp]
   132b4:	bl	16f78 <argp_error@@Base+0x700>
   132b8:	add	sp, sp, #20
   132bc:	pop	{pc}		; (ldr pc, [sp], #4)
   132c0:	push	{r1, r2, r3}
   132c4:	push	{lr}		; (str lr, [sp, #-4]!)
   132c8:	sub	sp, sp, #8
   132cc:	add	r3, sp, #20
   132d0:	str	r3, [sp, #4]
   132d4:	ldr	r2, [sp, #16]
   132d8:	ldr	r1, [sp, #12]
   132dc:	bl	11108 <ioctl@plt>
   132e0:	add	sp, sp, #8
   132e4:	pop	{lr}		; (ldr lr, [sp], #4)
   132e8:	add	sp, sp, #12
   132ec:	bx	lr
   132f0:	push	{r4, r5, r6, lr}
   132f4:	subs	r4, r0, #0
   132f8:	beq	13370 <argp_parse@@Base+0xdb4>
   132fc:	mov	r1, #47	; 0x2f
   13300:	mov	r0, r4
   13304:	bl	11264 <strrchr@plt>
   13308:	cmp	r0, #0
   1330c:	addne	r5, r0, #1
   13310:	moveq	r5, r4
   13314:	sub	r3, r5, r4
   13318:	cmp	r3, #6
   1331c:	ble	1335c <argp_parse@@Base+0xda0>
   13320:	mov	r2, #7
   13324:	ldr	r1, [pc, #96]	; 1338c <argp_parse@@Base+0xdd0>
   13328:	sub	r0, r5, #7
   1332c:	bl	112b8 <strncmp@plt>
   13330:	cmp	r0, #0
   13334:	bne	1335c <argp_parse@@Base+0xda0>
   13338:	mov	r2, #3
   1333c:	ldr	r1, [pc, #76]	; 13390 <argp_parse@@Base+0xdd4>
   13340:	mov	r0, r5
   13344:	bl	112b8 <strncmp@plt>
   13348:	cmp	r0, #0
   1334c:	addeq	r4, r5, #3
   13350:	ldreq	r3, [pc, #60]	; 13394 <argp_parse@@Base+0xdd8>
   13354:	streq	r4, [r3]
   13358:	movne	r4, r5
   1335c:	ldr	r3, [pc, #52]	; 13398 <argp_parse@@Base+0xddc>
   13360:	str	r4, [r3]
   13364:	ldr	r3, [pc, #48]	; 1339c <argp_parse@@Base+0xde0>
   13368:	str	r4, [r3]
   1336c:	pop	{r4, r5, r6, pc}
   13370:	ldr	r3, [pc, #40]	; 133a0 <argp_parse@@Base+0xde4>
   13374:	ldr	r3, [r3]
   13378:	mov	r2, #55	; 0x37
   1337c:	mov	r1, #1
   13380:	ldr	r0, [pc, #28]	; 133a4 <argp_parse@@Base+0xde8>
   13384:	bl	110fc <fwrite@plt>
   13388:	bl	112c4 <abort@plt>
   1338c:	andeq	r8, r1, ip, lsr #6
   13390:	andeq	r8, r1, r4, lsr r3
   13394:	andeq	r9, r2, r8, lsr r2
   13398:	andeq	r9, r2, r0, ror r2
   1339c:	andeq	r9, r2, ip, lsr r2
   133a0:	andeq	r9, r2, r0, asr #4
   133a4:	strdeq	r8, [r1], -r4
   133a8:	push	{r4, r5, r6, lr}
   133ac:	sub	sp, sp, #32
   133b0:	mov	r4, r0
   133b4:	ldr	r5, [sp, #48]	; 0x30
   133b8:	ldr	r6, [sp, #52]	; 0x34
   133bc:	cmp	r1, #0
   133c0:	beq	13448 <argp_parse@@Base+0xe8c>
   133c4:	str	r3, [sp]
   133c8:	mov	r3, r2
   133cc:	mov	r2, r1
   133d0:	ldr	r1, [pc, #644]	; 1365c <argp_parse@@Base+0x10a0>
   133d4:	bl	111d4 <fprintf@plt>
   133d8:	ldr	r3, [pc, #640]	; 13660 <argp_parse@@Base+0x10a4>
   133dc:	ldr	r2, [pc, #640]	; 13664 <argp_parse@@Base+0x10a8>
   133e0:	ldr	r1, [pc, #640]	; 13668 <argp_parse@@Base+0x10ac>
   133e4:	mov	r0, r4
   133e8:	bl	111d4 <fprintf@plt>
   133ec:	mov	r1, r4
   133f0:	mov	r0, #10
   133f4:	bl	1127c <fputc@plt>
   133f8:	ldr	r2, [pc, #620]	; 1366c <argp_parse@@Base+0x10b0>
   133fc:	ldr	r1, [pc, #620]	; 13670 <argp_parse@@Base+0x10b4>
   13400:	mov	r0, r4
   13404:	bl	111d4 <fprintf@plt>
   13408:	mov	r1, r4
   1340c:	mov	r0, #10
   13410:	bl	1127c <fputc@plt>
   13414:	cmp	r6, #9
   13418:	ldrls	pc, [pc, r6, lsl #2]
   1341c:	b	1360c <argp_parse@@Base+0x1050>
   13420:	andeq	r3, r1, r4, ror #8
   13424:	andeq	r3, r1, r4, asr r4
   13428:	andeq	r3, r1, ip, ror #8
   1342c:	andeq	r3, r1, r4, lsl #9
   13430:	andeq	r3, r1, r4, lsr #9
   13434:	andeq	r3, r1, ip, asr #9
   13438:	strdeq	r3, [r1], -ip
   1343c:	andeq	r3, r1, r4, lsr r5
   13440:	andeq	r3, r1, r4, ror r5
   13444:			; <UNDEFINED> instruction: 0x000135bc
   13448:	ldr	r1, [pc, #548]	; 13674 <argp_parse@@Base+0x10b8>
   1344c:	bl	111d4 <fprintf@plt>
   13450:	b	133d8 <argp_parse@@Base+0xe1c>
   13454:	ldr	r2, [r5]
   13458:	ldr	r1, [pc, #536]	; 13678 <argp_parse@@Base+0x10bc>
   1345c:	mov	r0, r4
   13460:	bl	111d4 <fprintf@plt>
   13464:	add	sp, sp, #32
   13468:	pop	{r4, r5, r6, pc}
   1346c:	ldr	r3, [r5, #4]
   13470:	ldr	r2, [r5]
   13474:	ldr	r1, [pc, #512]	; 1367c <argp_parse@@Base+0x10c0>
   13478:	mov	r0, r4
   1347c:	bl	111d4 <fprintf@plt>
   13480:	b	13464 <argp_parse@@Base+0xea8>
   13484:	ldr	r3, [r5, #4]
   13488:	ldr	r2, [r5]
   1348c:	ldr	r1, [r5, #8]
   13490:	str	r1, [sp]
   13494:	ldr	r1, [pc, #484]	; 13680 <argp_parse@@Base+0x10c4>
   13498:	mov	r0, r4
   1349c:	bl	111d4 <fprintf@plt>
   134a0:	b	13464 <argp_parse@@Base+0xea8>
   134a4:	ldr	r3, [r5, #4]
   134a8:	ldr	r2, [r5]
   134ac:	ldr	r1, [r5, #12]
   134b0:	str	r1, [sp, #4]
   134b4:	ldr	r1, [r5, #8]
   134b8:	str	r1, [sp]
   134bc:	ldr	r1, [pc, #448]	; 13684 <argp_parse@@Base+0x10c8>
   134c0:	mov	r0, r4
   134c4:	bl	111d4 <fprintf@plt>
   134c8:	b	13464 <argp_parse@@Base+0xea8>
   134cc:	ldr	r3, [r5, #4]
   134d0:	ldr	r2, [r5]
   134d4:	ldr	r1, [r5, #16]
   134d8:	str	r1, [sp, #8]
   134dc:	ldr	r1, [r5, #12]
   134e0:	str	r1, [sp, #4]
   134e4:	ldr	r1, [r5, #8]
   134e8:	str	r1, [sp]
   134ec:	ldr	r1, [pc, #404]	; 13688 <argp_parse@@Base+0x10cc>
   134f0:	mov	r0, r4
   134f4:	bl	111d4 <fprintf@plt>
   134f8:	b	13464 <argp_parse@@Base+0xea8>
   134fc:	ldr	r3, [r5, #4]
   13500:	ldr	r2, [r5]
   13504:	ldr	r1, [r5, #20]
   13508:	str	r1, [sp, #12]
   1350c:	ldr	r1, [r5, #16]
   13510:	str	r1, [sp, #8]
   13514:	ldr	r1, [r5, #12]
   13518:	str	r1, [sp, #4]
   1351c:	ldr	r1, [r5, #8]
   13520:	str	r1, [sp]
   13524:	ldr	r1, [pc, #352]	; 1368c <argp_parse@@Base+0x10d0>
   13528:	mov	r0, r4
   1352c:	bl	111d4 <fprintf@plt>
   13530:	b	13464 <argp_parse@@Base+0xea8>
   13534:	ldr	r3, [r5, #4]
   13538:	ldr	r2, [r5]
   1353c:	ldr	r1, [r5, #24]
   13540:	str	r1, [sp, #16]
   13544:	ldr	r1, [r5, #20]
   13548:	str	r1, [sp, #12]
   1354c:	ldr	r1, [r5, #16]
   13550:	str	r1, [sp, #8]
   13554:	ldr	r1, [r5, #12]
   13558:	str	r1, [sp, #4]
   1355c:	ldr	r1, [r5, #8]
   13560:	str	r1, [sp]
   13564:	ldr	r1, [pc, #292]	; 13690 <argp_parse@@Base+0x10d4>
   13568:	mov	r0, r4
   1356c:	bl	111d4 <fprintf@plt>
   13570:	b	13464 <argp_parse@@Base+0xea8>
   13574:	ldr	r3, [r5, #4]
   13578:	ldr	r2, [r5]
   1357c:	ldr	r1, [r5, #28]
   13580:	str	r1, [sp, #20]
   13584:	ldr	r1, [r5, #24]
   13588:	str	r1, [sp, #16]
   1358c:	ldr	r1, [r5, #20]
   13590:	str	r1, [sp, #12]
   13594:	ldr	r1, [r5, #16]
   13598:	str	r1, [sp, #8]
   1359c:	ldr	r1, [r5, #12]
   135a0:	str	r1, [sp, #4]
   135a4:	ldr	r1, [r5, #8]
   135a8:	str	r1, [sp]
   135ac:	ldr	r1, [pc, #224]	; 13694 <argp_parse@@Base+0x10d8>
   135b0:	mov	r0, r4
   135b4:	bl	111d4 <fprintf@plt>
   135b8:	b	13464 <argp_parse@@Base+0xea8>
   135bc:	ldr	r3, [r5, #4]
   135c0:	ldr	r2, [r5]
   135c4:	ldr	r1, [r5, #32]
   135c8:	str	r1, [sp, #24]
   135cc:	ldr	r1, [r5, #28]
   135d0:	str	r1, [sp, #20]
   135d4:	ldr	r1, [r5, #24]
   135d8:	str	r1, [sp, #16]
   135dc:	ldr	r1, [r5, #20]
   135e0:	str	r1, [sp, #12]
   135e4:	ldr	r1, [r5, #16]
   135e8:	str	r1, [sp, #8]
   135ec:	ldr	r1, [r5, #12]
   135f0:	str	r1, [sp, #4]
   135f4:	ldr	r1, [r5, #8]
   135f8:	str	r1, [sp]
   135fc:	ldr	r1, [pc, #148]	; 13698 <argp_parse@@Base+0x10dc>
   13600:	mov	r0, r4
   13604:	bl	111d4 <fprintf@plt>
   13608:	b	13464 <argp_parse@@Base+0xea8>
   1360c:	ldr	r3, [r5, #4]
   13610:	ldr	r2, [r5]
   13614:	ldr	r1, [r5, #32]
   13618:	str	r1, [sp, #24]
   1361c:	ldr	r1, [r5, #28]
   13620:	str	r1, [sp, #20]
   13624:	ldr	r1, [r5, #24]
   13628:	str	r1, [sp, #16]
   1362c:	ldr	r1, [r5, #20]
   13630:	str	r1, [sp, #12]
   13634:	ldr	r1, [r5, #16]
   13638:	str	r1, [sp, #8]
   1363c:	ldr	r1, [r5, #12]
   13640:	str	r1, [sp, #4]
   13644:	ldr	r1, [r5, #8]
   13648:	str	r1, [sp]
   1364c:	ldr	r1, [pc, #72]	; 1369c <argp_parse@@Base+0x10e0>
   13650:	mov	r0, r4
   13654:	bl	111d4 <fprintf@plt>
   13658:	b	13464 <argp_parse@@Base+0xea8>
   1365c:	andeq	r8, r1, r8, lsr r3
   13660:	andeq	r0, r0, r6, ror #15
   13664:	andeq	r8, r1, ip, asr #6
   13668:	andeq	r8, r1, ip, asr #12
   1366c:	andeq	r8, r1, r0, asr r3
   13670:	andeq	r8, r1, r4, ror r3
   13674:	andeq	r8, r1, r4, asr #6
   13678:	andeq	r8, r1, r0, lsr #8
   1367c:	andeq	r8, r1, r0, lsr r4
   13680:	andeq	r8, r1, r8, asr #8
   13684:	andeq	r8, r1, r4, ror #8
   13688:	andeq	r8, r1, r4, lsl #9
   1368c:	andeq	r8, r1, r8, lsr #9
   13690:	ldrdeq	r8, [r1], -r0
   13694:	strdeq	r8, [r1], -ip
   13698:	andeq	r8, r1, ip, lsr #10
   1369c:	andeq	r8, r1, r0, ror #10
   136a0:	push	{r4, r5, lr}
   136a4:	sub	sp, sp, #12
   136a8:	ldr	r5, [sp, #24]
   136ac:	ldr	ip, [r5]
   136b0:	cmp	ip, #0
   136b4:	beq	136e4 <argp_parse@@Base+0x1128>
   136b8:	mov	lr, r5
   136bc:	mov	ip, #0
   136c0:	add	ip, ip, #1
   136c4:	ldr	r4, [lr, #4]!
   136c8:	cmp	r4, #0
   136cc:	bne	136c0 <argp_parse@@Base+0x1104>
   136d0:	str	ip, [sp, #4]
   136d4:	str	r5, [sp]
   136d8:	bl	133a8 <argp_parse@@Base+0xdec>
   136dc:	add	sp, sp, #12
   136e0:	pop	{r4, r5, pc}
   136e4:	mov	ip, #0
   136e8:	b	136d0 <argp_parse@@Base+0x1114>
   136ec:	push	{r4, r5, lr}
   136f0:	sub	sp, sp, #52	; 0x34
   136f4:	ldr	r4, [sp, #64]	; 0x40
   136f8:	sub	r4, r4, #4
   136fc:	add	r5, sp, #4
   13700:	mov	ip, #0
   13704:	ldr	lr, [r4, #4]!
   13708:	str	lr, [r5, #4]!
   1370c:	cmp	lr, #0
   13710:	beq	13720 <argp_parse@@Base+0x1164>
   13714:	add	ip, ip, #1
   13718:	cmp	ip, #10
   1371c:	bne	13704 <argp_parse@@Base+0x1148>
   13720:	str	ip, [sp, #4]
   13724:	add	ip, sp, #8
   13728:	str	ip, [sp]
   1372c:	bl	133a8 <argp_parse@@Base+0xdec>
   13730:	add	sp, sp, #52	; 0x34
   13734:	pop	{r4, r5, pc}
   13738:	push	{r3}		; (str r3, [sp, #-4]!)
   1373c:	push	{lr}		; (str lr, [sp, #-4]!)
   13740:	sub	sp, sp, #16
   13744:	add	r3, sp, #24
   13748:	str	r3, [sp, #12]
   1374c:	str	r3, [sp]
   13750:	ldr	r3, [sp, #20]
   13754:	bl	136ec <argp_parse@@Base+0x1130>
   13758:	add	sp, sp, #16
   1375c:	pop	{lr}		; (ldr lr, [sp], #4)
   13760:	add	sp, sp, #4
   13764:	bx	lr
   13768:	push	{r4, lr}
   1376c:	ldr	r3, [pc, #52]	; 137a8 <argp_parse@@Base+0x11ec>
   13770:	ldr	r1, [r3]
   13774:	mov	r0, #10
   13778:	bl	1127c <fputc@plt>
   1377c:	ldr	r1, [pc, #40]	; 137ac <argp_parse@@Base+0x11f0>
   13780:	ldr	r0, [pc, #40]	; 137b0 <argp_parse@@Base+0x11f4>
   13784:	bl	11024 <printf@plt>
   13788:	ldr	r2, [pc, #36]	; 137b4 <argp_parse@@Base+0x11f8>
   1378c:	ldr	r1, [pc, #36]	; 137b8 <argp_parse@@Base+0x11fc>
   13790:	ldr	r0, [pc, #36]	; 137bc <argp_parse@@Base+0x1200>
   13794:	bl	11024 <printf@plt>
   13798:	ldr	r1, [pc, #32]	; 137c0 <argp_parse@@Base+0x1204>
   1379c:	ldr	r0, [pc, #32]	; 137c4 <argp_parse@@Base+0x1208>
   137a0:	bl	11024 <printf@plt>
   137a4:	pop	{r4, pc}
   137a8:	andeq	r9, r2, r4, asr #4
   137ac:	muleq	r1, ip, r5
   137b0:			; <UNDEFINED> instruction: 0x000185b4
   137b4:	andeq	r8, r1, r8, asr #11
   137b8:	andeq	r8, r1, r4, ror #5
   137bc:	strdeq	r8, [r1], -r0
   137c0:	andeq	r8, r1, r4, lsl #12
   137c4:	andeq	r8, r1, r4, lsr #12
   137c8:	push	{r4, lr}
   137cc:	cmp	r0, #0
   137d0:	moveq	r0, #1
   137d4:	cmp	r0, #0
   137d8:	blt	137e4 <argp_parse@@Base+0x1228>
   137dc:	bl	11138 <malloc@plt>
   137e0:	pop	{r4, pc}
   137e4:	bl	111ec <__errno_location@plt>
   137e8:	mov	r3, #12
   137ec:	str	r3, [r0]
   137f0:	mov	r0, #0
   137f4:	pop	{r4, pc}
   137f8:	ldr	r3, [r0]
   137fc:	ldr	r2, [r0, #4]
   13800:	cmp	r2, #0
   13804:	beq	13840 <argp_parse@@Base+0x1284>
   13808:	add	r3, r3, #24
   1380c:	b	1381c <argp_parse@@Base+0x1260>
   13810:	add	r3, r3, #24
   13814:	subs	r2, r2, #1
   13818:	beq	13838 <argp_parse@@Base+0x127c>
   1381c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13820:	cmp	r0, #0
   13824:	beq	13810 <argp_parse@@Base+0x1254>
   13828:	ldr	r1, [r3, #-12]
   1382c:	tst	r1, #2
   13830:	bne	13810 <argp_parse@@Base+0x1254>
   13834:	bx	lr
   13838:	mov	r0, #0
   1383c:	bx	lr
   13840:	mov	r0, #0
   13844:	bx	lr
   13848:	ldr	r2, [r0, #8]
   1384c:	cmp	r2, #0
   13850:	beq	1385c <argp_parse@@Base+0x12a0>
   13854:	mov	r0, #0
   13858:	bx	lr
   1385c:	ldr	r2, [r1, #8]
   13860:	cmp	r2, #0
   13864:	bne	13854 <argp_parse@@Base+0x1298>
   13868:	ldr	r2, [r0, #12]
   1386c:	ldr	r1, [r1, #12]
   13870:	orr	r2, r2, r1
   13874:	tst	r2, #16
   13878:	ldreq	r2, [r3]
   1387c:	addeq	r1, r2, #1
   13880:	streq	r1, [r3]
   13884:	ldreq	r3, [r0, #4]
   13888:	strbeq	r3, [r2]
   1388c:	b	13854 <argp_parse@@Base+0x1298>
   13890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13894:	sub	sp, sp, #12
   13898:	ldr	r4, [r0]
   1389c:	ldr	r9, [r0, #8]
   138a0:	ldr	r5, [r0, #4]
   138a4:	cmp	r5, #0
   138a8:	beq	138fc <argp_parse@@Base+0x1340>
   138ac:	str	r3, [sp, #4]
   138b0:	str	r2, [sp]
   138b4:	mov	fp, r1
   138b8:	mov	sl, r4
   138bc:	mov	r8, #0
   138c0:	b	1393c <argp_parse@@Base+0x1380>
   138c4:	and	r3, r6, #4
   138c8:	cmp	r3, #0
   138cc:	moveq	sl, r4
   138d0:	tst	r6, #2
   138d4:	beq	138e0 <argp_parse@@Base+0x1324>
   138d8:	add	r9, r9, #1
   138dc:	b	13918 <argp_parse@@Base+0x135c>
   138e0:	ldr	r3, [sp, #4]
   138e4:	ldr	r2, [sp]
   138e8:	mov	r1, sl
   138ec:	mov	r0, r4
   138f0:	blx	fp
   138f4:	mov	r8, r0
   138f8:	b	138d8 <argp_parse@@Base+0x131c>
   138fc:	mov	r8, #0
   13900:	mov	r0, r8
   13904:	add	sp, sp, #12
   13908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1390c:	ldrb	r3, [r9]
   13910:	cmp	r3, r7
   13914:	beq	138c4 <argp_parse@@Base+0x1308>
   13918:	add	r4, r4, #24
   1391c:	subs	r5, r5, #1
   13920:	movne	r3, #1
   13924:	moveq	r3, #0
   13928:	cmp	r8, #0
   1392c:	movne	r3, #0
   13930:	andeq	r3, r3, #1
   13934:	cmp	r3, #0
   13938:	beq	13900 <argp_parse@@Base+0x1344>
   1393c:	ldr	r6, [r4, #12]
   13940:	tst	r6, #8
   13944:	bne	13918 <argp_parse@@Base+0x135c>
   13948:	ldr	r7, [r4, #4]
   1394c:	sub	r3, r7, #1
   13950:	cmp	r3, #254	; 0xfe
   13954:	bhi	13918 <argp_parse@@Base+0x135c>
   13958:	bl	111a4 <__ctype_b_loc@plt>
   1395c:	ldr	r2, [r0]
   13960:	lsl	r3, r7, #1
   13964:	ldrh	r3, [r2, r3]
   13968:	tst	r3, #16384	; 0x4000
   1396c:	bne	1390c <argp_parse@@Base+0x1350>
   13970:	b	13918 <argp_parse@@Base+0x135c>
   13974:	push	{r4, r5, r6, lr}
   13978:	ldr	r4, [r0, #12]
   1397c:	ands	r4, r4, #8
   13980:	movne	r4, #0
   13984:	bne	139b4 <argp_parse@@Base+0x13f8>
   13988:	ldr	r5, [r0, #4]
   1398c:	sub	r3, r5, #1
   13990:	cmp	r3, #254	; 0xfe
   13994:	bhi	139b4 <argp_parse@@Base+0x13f8>
   13998:	bl	111a4 <__ctype_b_loc@plt>
   1399c:	ldr	r2, [r0]
   139a0:	lsl	r3, r5, #1
   139a4:	ldrh	r3, [r2, r3]
   139a8:	and	r3, r3, #16384	; 0x4000
   139ac:	cmp	r3, #0
   139b0:	movne	r4, r5
   139b4:	mov	r0, r4
   139b8:	pop	{r4, r5, r6, pc}
   139bc:	push	{r4, lr}
   139c0:	mov	r4, r0
   139c4:	bl	111a4 <__ctype_b_loc@plt>
   139c8:	b	139d4 <argp_parse@@Base+0x1418>
   139cc:	add	r3, r3, #1
   139d0:	str	r3, [r4]
   139d4:	ldr	r3, [r4]
   139d8:	ldrb	r2, [r3]
   139dc:	ldr	ip, [r0]
   139e0:	lsl	r1, r2, #1
   139e4:	ldrh	r1, [ip, r1]
   139e8:	tst	r1, #8192	; 0x2000
   139ec:	bne	139cc <argp_parse@@Base+0x1410>
   139f0:	subs	ip, r2, #45	; 0x2d
   139f4:	movne	ip, #1
   139f8:	cmp	r2, #0
   139fc:	beq	13a30 <argp_parse@@Base+0x1474>
   13a00:	tst	r1, #8
   13a04:	bne	13a30 <argp_parse@@Base+0x1474>
   13a08:	add	r3, r3, #1
   13a0c:	str	r3, [r4]
   13a10:	ldrb	r2, [r3]
   13a14:	cmp	r2, #0
   13a18:	beq	13a30 <argp_parse@@Base+0x1474>
   13a1c:	ldr	r1, [r0]
   13a20:	lsl	r2, r2, #1
   13a24:	ldrh	r2, [r1, r2]
   13a28:	tst	r2, #8
   13a2c:	beq	13a08 <argp_parse@@Base+0x144c>
   13a30:	mov	r0, ip
   13a34:	pop	{r4, pc}
   13a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a3c:	add	fp, sp, #32
   13a40:	sub	sp, sp, #12
   13a44:	ldr	r5, [r0, #4]
   13a48:	cmp	r5, #0
   13a4c:	bne	13a58 <argp_parse@@Base+0x149c>
   13a50:	sub	sp, fp, #32
   13a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a58:	mov	r9, r1
   13a5c:	mov	r6, r0
   13a60:	ldr	r0, [r0, #8]
   13a64:	bl	111bc <strlen@plt>
   13a68:	add	r3, r0, #15
   13a6c:	bic	r3, r3, #7
   13a70:	sub	sp, sp, r3
   13a74:	mov	sl, sp
   13a78:	sub	r7, fp, #36	; 0x24
   13a7c:	str	sp, [r7, #-4]!
   13a80:	ldr	r4, [r6]
   13a84:	ldr	r8, [pc, #336]	; 13bdc <argp_parse@@Base+0x1620>
   13a88:	ldr	r2, [r4, #20]
   13a8c:	mov	r3, r7
   13a90:	ldr	r2, [r2, #24]
   13a94:	mov	r1, r8
   13a98:	mov	r0, r4
   13a9c:	bl	13890 <argp_parse@@Base+0x12d4>
   13aa0:	add	r4, r4, #28
   13aa4:	subs	r5, r5, #1
   13aa8:	bne	13a88 <argp_parse@@Base+0x14cc>
   13aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ab0:	cmp	sl, r3
   13ab4:	bcc	13b0c <argp_parse@@Base+0x1550>
   13ab8:	ldr	r4, [r6]
   13abc:	ldr	r5, [r6, #4]
   13ac0:	cmp	r5, #0
   13ac4:	beq	13a50 <argp_parse@@Base+0x1494>
   13ac8:	ldr	r7, [pc, #272]	; 13be0 <argp_parse@@Base+0x1624>
   13acc:	ldr	r2, [r4, #20]
   13ad0:	mov	r3, r9
   13ad4:	ldr	r2, [r2, #24]
   13ad8:	mov	r1, r7
   13adc:	mov	r0, r4
   13ae0:	bl	13890 <argp_parse@@Base+0x12d4>
   13ae4:	add	r4, r4, #28
   13ae8:	subs	r5, r5, #1
   13aec:	bne	13acc <argp_parse@@Base+0x1510>
   13af0:	ldr	r7, [r6]
   13af4:	ldr	r8, [r6, #4]
   13af8:	cmp	r8, #0
   13afc:	beq	13a50 <argp_parse@@Base+0x1494>
   13b00:	add	r7, r7, #28
   13b04:	ldr	sl, [pc, #216]	; 13be4 <argp_parse@@Base+0x1628>
   13b08:	b	13bc4 <argp_parse@@Base+0x1608>
   13b0c:	add	r2, r3, #1
   13b10:	str	r2, [fp, #-40]	; 0xffffffd8
   13b14:	mov	r2, #0
   13b18:	strb	r2, [r3]
   13b1c:	mov	r2, sl
   13b20:	ldr	r1, [pc, #192]	; 13be8 <argp_parse@@Base+0x162c>
   13b24:	mov	r0, r9
   13b28:	bl	17c98 <argp_error@@Base+0x1420>
   13b2c:	b	13ab8 <argp_parse@@Base+0x14fc>
   13b30:	tst	r1, #16
   13b34:	bne	13b58 <argp_parse@@Base+0x159c>
   13b38:	ldr	r3, [r6, #8]
   13b3c:	cmp	r3, #0
   13b40:	beq	13ba8 <argp_parse@@Base+0x15ec>
   13b44:	tst	r1, #1
   13b48:	ldrne	r1, [pc, #156]	; 13bec <argp_parse@@Base+0x1630>
   13b4c:	moveq	r1, sl
   13b50:	mov	r0, r9
   13b54:	bl	17c98 <argp_error@@Base+0x1420>
   13b58:	add	r4, r4, #24
   13b5c:	subs	r5, r5, #1
   13b60:	beq	13bb8 <argp_parse@@Base+0x15fc>
   13b64:	ldr	r2, [r4]
   13b68:	cmp	r2, #0
   13b6c:	beq	13b58 <argp_parse@@Base+0x159c>
   13b70:	ldr	r1, [r4, #12]
   13b74:	and	r3, r1, #4
   13b78:	cmp	r3, #0
   13b7c:	moveq	r6, r4
   13b80:	tst	r1, #2
   13b84:	bne	13b58 <argp_parse@@Base+0x159c>
   13b88:	ldr	r3, [r4, #8]
   13b8c:	ldr	r0, [r6, #12]
   13b90:	orr	r1, r1, r0
   13b94:	cmp	r3, #0
   13b98:	beq	13b30 <argp_parse@@Base+0x1574>
   13b9c:	tst	r1, #16
   13ba0:	beq	13b44 <argp_parse@@Base+0x1588>
   13ba4:	b	13b58 <argp_parse@@Base+0x159c>
   13ba8:	ldr	r1, [pc, #64]	; 13bf0 <argp_parse@@Base+0x1634>
   13bac:	mov	r0, r9
   13bb0:	bl	17c98 <argp_error@@Base+0x1420>
   13bb4:	b	13b58 <argp_parse@@Base+0x159c>
   13bb8:	add	r7, r7, #28
   13bbc:	subs	r8, r8, #1
   13bc0:	beq	13a50 <argp_parse@@Base+0x1494>
   13bc4:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13bc8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13bcc:	cmp	r5, #0
   13bd0:	beq	13bb8 <argp_parse@@Base+0x15fc>
   13bd4:	mov	r6, r4
   13bd8:	b	13b64 <argp_parse@@Base+0x15a8>
   13bdc:	andeq	r3, r1, r8, asr #16
   13be0:	andeq	r3, r1, r8, lsl #29
   13be4:	andeq	r8, r1, ip, lsr r7
   13be8:	andeq	r8, r1, r4, lsr #14
   13bec:	andeq	r8, r1, ip, lsr #14
   13bf0:	andeq	r8, r1, r8, asr #14
   13bf4:	push	{r4, r5, r6, lr}
   13bf8:	mov	r5, r0
   13bfc:	ldr	r0, [r0, #12]
   13c00:	cmp	r0, #0
   13c04:	beq	13c1c <argp_parse@@Base+0x1660>
   13c08:	ldr	r4, [r0, #24]
   13c0c:	bl	131b0 <argp_parse@@Base+0xbf4>
   13c10:	mov	r0, r4
   13c14:	cmp	r4, #0
   13c18:	bne	13c08 <argp_parse@@Base+0x164c>
   13c1c:	ldr	r3, [r5, #4]
   13c20:	cmp	r3, #0
   13c24:	bne	13c34 <argp_parse@@Base+0x1678>
   13c28:	mov	r0, r5
   13c2c:	bl	131b0 <argp_parse@@Base+0xbf4>
   13c30:	pop	{r4, r5, r6, pc}
   13c34:	ldr	r0, [r5]
   13c38:	bl	131b0 <argp_parse@@Base+0xbf4>
   13c3c:	ldr	r0, [r5, #8]
   13c40:	bl	131b0 <argp_parse@@Base+0xbf4>
   13c44:	b	13c28 <argp_parse@@Base+0x166c>
   13c48:	push	{r4, r5, r6, r7, r8, lr}
   13c4c:	mov	r6, r1
   13c50:	ldr	r7, [r0]
   13c54:	ldr	r3, [r0, #4]
   13c58:	sub	r8, r3, #1
   13c5c:	cmp	r3, #0
   13c60:	bne	13cbc <argp_parse@@Base+0x1700>
   13c64:	mov	r7, #0
   13c68:	b	13ca4 <argp_parse@@Base+0x16e8>
   13c6c:	sub	r5, r5, #1
   13c70:	add	r4, r4, #24
   13c74:	cmn	r5, #1
   13c78:	beq	13cac <argp_parse@@Base+0x16f0>
   13c7c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13c80:	cmp	r0, #0
   13c84:	beq	13c6c <argp_parse@@Base+0x16b0>
   13c88:	ldr	r3, [r4, #-12]
   13c8c:	tst	r3, #2
   13c90:	bne	13c6c <argp_parse@@Base+0x16b0>
   13c94:	mov	r1, r6
   13c98:	bl	10ff4 <strcmp@plt>
   13c9c:	cmp	r0, #0
   13ca0:	bne	13c6c <argp_parse@@Base+0x16b0>
   13ca4:	mov	r0, r7
   13ca8:	pop	{r4, r5, r6, r7, r8, pc}
   13cac:	add	r7, r7, #28
   13cb0:	sub	r8, r8, #1
   13cb4:	cmn	r8, #1
   13cb8:	beq	13cd8 <argp_parse@@Base+0x171c>
   13cbc:	ldr	r4, [r7]
   13cc0:	ldr	r3, [r7, #4]
   13cc4:	sub	r5, r3, #1
   13cc8:	cmp	r3, #0
   13ccc:	beq	13cac <argp_parse@@Base+0x16f0>
   13cd0:	add	r4, r4, #24
   13cd4:	b	13c7c <argp_parse@@Base+0x16c0>
   13cd8:	mov	r7, #0
   13cdc:	b	13ca4 <argp_parse@@Base+0x16e8>
   13ce0:	push	{r4, r5, r6, lr}
   13ce4:	ldr	r4, [r0, #16]
   13ce8:	ldr	r0, [r0, #8]
   13cec:	cmp	r0, #0
   13cf0:	moveq	r5, #0
   13cf4:	beq	13d08 <argp_parse@@Base+0x174c>
   13cf8:	mov	r1, #10
   13cfc:	bl	111c8 <strchr@plt>
   13d00:	adds	r5, r0, #0
   13d04:	movne	r5, #1
   13d08:	cmp	r4, #0
   13d0c:	beq	13d30 <argp_parse@@Base+0x1774>
   13d10:	ldr	r0, [r4]
   13d14:	cmp	r0, #0
   13d18:	beq	13d30 <argp_parse@@Base+0x1774>
   13d1c:	bl	13ce0 <argp_parse@@Base+0x1724>
   13d20:	add	r5, r5, r0
   13d24:	ldr	r0, [r4, #16]!
   13d28:	cmp	r0, #0
   13d2c:	bne	13d1c <argp_parse@@Base+0x1760>
   13d30:	mov	r0, r5
   13d34:	pop	{r4, r5, r6, pc}
   13d38:	push	{r4, r5, r6, r7, r8, lr}
   13d3c:	mov	r4, r0
   13d40:	mov	r5, r1
   13d44:	ldr	r3, [r0, #28]
   13d48:	ldr	r2, [r0, #24]
   13d4c:	sub	r3, r3, r2
   13d50:	ldr	r2, [r0, #16]
   13d54:	cmp	r3, r2
   13d58:	bhi	13d74 <argp_parse@@Base+0x17b8>
   13d5c:	ldr	r3, [r4, #20]
   13d60:	cmp	r3, #0
   13d64:	subge	r5, r5, r3
   13d68:	mov	r6, #32
   13d6c:	mov	r7, #1
   13d70:	b	13d90 <argp_parse@@Base+0x17d4>
   13d74:	bl	17604 <argp_error@@Base+0xd8c>
   13d78:	b	13d5c <argp_parse@@Base+0x17a0>
   13d7c:	ldr	r3, [r4, #28]
   13d80:	add	r2, r3, #1
   13d84:	str	r2, [r4, #28]
   13d88:	strb	r6, [r3]
   13d8c:	sub	r5, r5, #1
   13d90:	cmp	r5, #0
   13d94:	ble	13dc0 <argp_parse@@Base+0x1804>
   13d98:	ldr	r2, [r4, #28]
   13d9c:	ldr	r3, [r4, #32]
   13da0:	cmp	r2, r3
   13da4:	bcc	13d7c <argp_parse@@Base+0x17c0>
   13da8:	mov	r1, r7
   13dac:	mov	r0, r4
   13db0:	bl	17ba8 <argp_error@@Base+0x1330>
   13db4:	cmp	r0, #0
   13db8:	beq	13d8c <argp_parse@@Base+0x17d0>
   13dbc:	b	13d7c <argp_parse@@Base+0x17c0>
   13dc0:	pop	{r4, r5, r6, r7, r8, pc}
   13dc4:	push	{r4, r5, r6, lr}
   13dc8:	mov	r4, r0
   13dcc:	mov	r5, r1
   13dd0:	ldr	r3, [r0, #28]
   13dd4:	ldr	r2, [r0, #24]
   13dd8:	sub	r3, r3, r2
   13ddc:	ldr	r2, [r0, #16]
   13de0:	cmp	r3, r2
   13de4:	bhi	13e28 <argp_parse@@Base+0x186c>
   13de8:	ldr	r3, [r4, #20]
   13dec:	cmp	r3, #0
   13df0:	addge	r5, r5, r3
   13df4:	ldr	r3, [r4, #8]
   13df8:	cmp	r5, r3
   13dfc:	bcc	13e48 <argp_parse@@Base+0x188c>
   13e00:	ldr	r2, [r4, #28]
   13e04:	ldr	r3, [r4, #32]
   13e08:	cmp	r2, r3
   13e0c:	bcs	13e30 <argp_parse@@Base+0x1874>
   13e10:	ldr	r3, [r4, #28]
   13e14:	add	r2, r3, #1
   13e18:	str	r2, [r4, #28]
   13e1c:	mov	r2, #10
   13e20:	strb	r2, [r3]
   13e24:	pop	{r4, r5, r6, pc}
   13e28:	bl	17604 <argp_error@@Base+0xd8c>
   13e2c:	b	13de8 <argp_parse@@Base+0x182c>
   13e30:	mov	r1, #1
   13e34:	mov	r0, r4
   13e38:	bl	17ba8 <argp_error@@Base+0x1330>
   13e3c:	cmp	r0, #0
   13e40:	popeq	{r4, r5, r6, pc}
   13e44:	b	13e10 <argp_parse@@Base+0x1854>
   13e48:	ldr	r2, [r4, #28]
   13e4c:	ldr	r3, [r4, #32]
   13e50:	cmp	r2, r3
   13e54:	bcs	13e70 <argp_parse@@Base+0x18b4>
   13e58:	ldr	r3, [r4, #28]
   13e5c:	add	r2, r3, #1
   13e60:	str	r2, [r4, #28]
   13e64:	mov	r2, #32
   13e68:	strb	r2, [r3]
   13e6c:	pop	{r4, r5, r6, pc}
   13e70:	mov	r1, #1
   13e74:	mov	r0, r4
   13e78:	bl	17ba8 <argp_error@@Base+0x1330>
   13e7c:	cmp	r0, #0
   13e80:	bne	13e58 <argp_parse@@Base+0x189c>
   13e84:	pop	{r4, r5, r6, pc}
   13e88:	push	{r4, r5, r6, lr}
   13e8c:	ldr	r5, [r0, #8]
   13e90:	ldr	r2, [r0, #12]
   13e94:	ldr	ip, [r1, #12]
   13e98:	orr	r2, r2, ip
   13e9c:	cmp	r5, #0
   13ea0:	beq	13eec <argp_parse@@Base+0x1930>
   13ea4:	tst	r2, #16
   13ea8:	bne	13ee4 <argp_parse@@Base+0x1928>
   13eac:	mov	r6, r3
   13eb0:	mov	r4, r0
   13eb4:	tst	r2, #1
   13eb8:	bne	13efc <argp_parse@@Base+0x1940>
   13ebc:	mov	r0, r5
   13ec0:	bl	111bc <strlen@plt>
   13ec4:	add	r1, r0, #6
   13ec8:	mov	r0, r6
   13ecc:	bl	13dc4 <argp_parse@@Base+0x1808>
   13ed0:	mov	r3, r5
   13ed4:	ldr	r2, [r4, #4]
   13ed8:	ldr	r1, [pc, #52]	; 13f14 <argp_parse@@Base+0x1958>
   13edc:	mov	r0, r6
   13ee0:	bl	17c98 <argp_error@@Base+0x1420>
   13ee4:	mov	r0, #0
   13ee8:	pop	{r4, r5, r6, pc}
   13eec:	ldr	r5, [r1, #8]
   13ef0:	cmp	r5, #0
   13ef4:	beq	13ee4 <argp_parse@@Base+0x1928>
   13ef8:	b	13ea4 <argp_parse@@Base+0x18e8>
   13efc:	mov	r3, r5
   13f00:	ldr	r2, [r0, #4]
   13f04:	ldr	r1, [pc, #12]	; 13f18 <argp_parse@@Base+0x195c>
   13f08:	mov	r0, r6
   13f0c:	bl	17c98 <argp_error@@Base+0x1420>
   13f10:	b	13ee4 <argp_parse@@Base+0x1928>
   13f14:	andeq	r8, r1, ip, asr r7
   13f18:	andeq	r8, r1, r0, asr r7
   13f1c:	push	{r4, r5, r6, lr}
   13f20:	subs	r5, r2, #0
   13f24:	popeq	{r4, r5, r6, pc}
   13f28:	ldr	ip, [r5, #20]
   13f2c:	cmp	ip, #0
   13f30:	popeq	{r4, r5, r6, pc}
   13f34:	mov	r6, r1
   13f38:	mov	r4, r0
   13f3c:	mov	r1, r3
   13f40:	mov	r0, r5
   13f44:	bl	13030 <argp_parse@@Base+0xa74>
   13f48:	ldr	r3, [r5, #20]
   13f4c:	mov	r2, r0
   13f50:	mov	r1, r4
   13f54:	mov	r0, r6
   13f58:	blx	r3
   13f5c:	pop	{r4, r5, r6, pc}
   13f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f64:	sub	sp, sp, #28
   13f68:	str	r1, [sp, #16]
   13f6c:	mov	r8, r2
   13f70:	mov	r4, r3
   13f74:	ldr	r5, [sp, #64]	; 0x40
   13f78:	ldr	r3, [r2]
   13f7c:	mov	r6, r3
   13f80:	str	r3, [sp, #20]
   13f84:	ldr	sl, [r0, #16]
   13f88:	ldr	r2, [r0, #8]
   13f8c:	mov	ip, r2
   13f90:	str	r2, [sp, #12]
   13f94:	mov	r3, r1
   13f98:	mov	r2, r0
   13f9c:	ldr	r1, [pc, #424]	; 1414c <argp_parse@@Base+0x1b90>
   13fa0:	mov	r0, ip
   13fa4:	bl	13f1c <argp_parse@@Base+0x1960>
   13fa8:	subs	r3, r0, #0
   13fac:	str	r3, [sp, #8]
   13fb0:	beq	14138 <argp_parse@@Base+0x1b7c>
   13fb4:	mov	r1, #10
   13fb8:	mov	r0, r3
   13fbc:	bl	11060 <strchrnul@plt>
   13fc0:	mov	r7, r0
   13fc4:	ldrb	r3, [r0]
   13fc8:	cmp	r3, #0
   13fcc:	beq	14108 <argp_parse@@Base+0x1b4c>
   13fd0:	ldrb	fp, [r6]
   13fd4:	cmp	fp, #0
   13fd8:	ble	14100 <argp_parse@@Base+0x1b44>
   13fdc:	mov	r6, #0
   13fe0:	add	r9, r0, #1
   13fe4:	mov	r1, #10
   13fe8:	mov	r0, r9
   13fec:	bl	11060 <strchrnul@plt>
   13ff0:	add	r6, r6, #1
   13ff4:	cmp	r6, fp
   13ff8:	bne	13fe0 <argp_parse@@Base+0x1a24>
   13ffc:	mov	r7, r0
   14000:	ldr	r3, [r8]
   14004:	add	r3, r3, #1
   14008:	str	r3, [r8]
   1400c:	mov	fp, #1
   14010:	add	r1, r7, #1
   14014:	sub	r1, r1, r9
   14018:	mov	r0, r5
   1401c:	bl	13dc4 <argp_parse@@Base+0x1808>
   14020:	sub	r6, r7, r9
   14024:	ldr	r3, [r5, #28]
   14028:	add	r3, r3, r6
   1402c:	ldr	r2, [r5, #32]
   14030:	cmp	r2, r3
   14034:	bcs	1404c <argp_parse@@Base+0x1a90>
   14038:	mov	r1, r6
   1403c:	mov	r0, r5
   14040:	bl	17ba8 <argp_error@@Base+0x1330>
   14044:	cmp	r0, #0
   14048:	beq	14068 <argp_parse@@Base+0x1aac>
   1404c:	mov	r2, r6
   14050:	mov	r1, r9
   14054:	ldr	r0, [r5, #28]
   14058:	bl	11084 <memcpy@plt>
   1405c:	ldr	r3, [r5, #28]
   14060:	add	r6, r3, r6
   14064:	str	r6, [r5, #28]
   14068:	ldr	r3, [sp, #12]
   1406c:	ldr	r2, [sp, #8]
   14070:	cmp	r3, r2
   14074:	bne	14114 <argp_parse@@Base+0x1b58>
   14078:	cmp	sl, #0
   1407c:	beq	140bc <argp_parse@@Base+0x1b00>
   14080:	ldr	r0, [sl]
   14084:	cmp	r0, #0
   14088:	beq	140bc <argp_parse@@Base+0x1b00>
   1408c:	mov	r3, r4
   14090:	ldr	r4, [sp, #16]
   14094:	str	r5, [sp]
   14098:	mov	r2, r8
   1409c:	mov	r1, r4
   140a0:	bl	13f60 <argp_parse@@Base+0x19a4>
   140a4:	clz	r3, r0
   140a8:	lsr	r3, r3, #5
   140ac:	ldr	r0, [sl, #16]!
   140b0:	cmp	r0, #0
   140b4:	bne	14094 <argp_parse@@Base+0x1ad8>
   140b8:	mov	r4, r3
   140bc:	cmp	r4, #0
   140c0:	moveq	fp, #0
   140c4:	andne	fp, fp, #1
   140c8:	cmp	fp, #0
   140cc:	beq	140f0 <argp_parse@@Base+0x1b34>
   140d0:	ldrb	r3, [r7]
   140d4:	cmp	r3, #0
   140d8:	bne	14120 <argp_parse@@Base+0x1b64>
   140dc:	ldr	r2, [sp, #20]
   140e0:	ldrb	r3, [r2]
   140e4:	cmp	r3, #0
   140e8:	movne	r3, #0
   140ec:	strbne	r3, [r2]
   140f0:	clz	r0, r4
   140f4:	lsr	r0, r0, #5
   140f8:	add	sp, sp, #28
   140fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14100:	ldr	r9, [sp, #8]
   14104:	b	14000 <argp_parse@@Base+0x1a44>
   14108:	ldr	r9, [sp, #8]
   1410c:	mov	fp, #0
   14110:	b	14010 <argp_parse@@Base+0x1a54>
   14114:	mov	r0, r2
   14118:	bl	131b0 <argp_parse@@Base+0xbf4>
   1411c:	b	14078 <argp_parse@@Base+0x1abc>
   14120:	ldr	r2, [sp, #20]
   14124:	ldrb	r3, [r2]
   14128:	add	r3, r3, #1
   1412c:	strb	r3, [r2]
   14130:	mov	r4, #0
   14134:	b	140f0 <argp_parse@@Base+0x1b34>
   14138:	cmp	sl, #0
   1413c:	beq	140f0 <argp_parse@@Base+0x1b34>
   14140:	ldr	r7, [sp, #8]
   14144:	mov	fp, #0
   14148:	b	14080 <argp_parse@@Base+0x1ac4>
   1414c:	andeq	r0, r0, #6
   14150:	push	{r4, r5, r6, r7, r8, lr}
   14154:	mov	r7, r0
   14158:	mov	r4, r2
   1415c:	ldr	r3, [r2, #16]
   14160:	mov	r2, r1
   14164:	ldr	r1, [pc, #448]	; 1432c <argp_parse@@Base+0x1d70>
   14168:	bl	13f1c <argp_parse@@Base+0x1960>
   1416c:	subs	r5, r0, #0
   14170:	beq	142c4 <argp_parse@@Base+0x1d08>
   14174:	ldrb	r3, [r5]
   14178:	cmp	r3, #0
   1417c:	beq	142b8 <argp_parse@@Base+0x1cfc>
   14180:	ldr	r3, [r4, #8]
   14184:	ldr	r3, [r3]
   14188:	cmp	r3, #0
   1418c:	beq	141b8 <argp_parse@@Base+0x1bfc>
   14190:	ldr	r6, [r4, #4]
   14194:	ldr	r2, [r6, #28]
   14198:	ldr	r3, [r6, #32]
   1419c:	cmp	r2, r3
   141a0:	bcs	142d8 <argp_parse@@Base+0x1d1c>
   141a4:	ldr	r3, [r6, #28]
   141a8:	add	r2, r3, #1
   141ac:	str	r2, [r6, #28]
   141b0:	mov	r2, #10
   141b4:	strb	r2, [r3]
   141b8:	ldr	r8, [pc, #368]	; 14330 <argp_parse@@Base+0x1d74>
   141bc:	ldr	r1, [r8, #24]
   141c0:	ldr	r0, [r4, #4]
   141c4:	bl	13d38 <argp_parse@@Base+0x177c>
   141c8:	ldr	r6, [r4, #4]
   141cc:	ldr	r8, [r8, #24]
   141d0:	ldr	r3, [r6, #28]
   141d4:	ldr	r2, [r6, #24]
   141d8:	sub	r3, r3, r2
   141dc:	ldr	r2, [r6, #16]
   141e0:	cmp	r3, r2
   141e4:	bhi	142f0 <argp_parse@@Base+0x1d34>
   141e8:	str	r8, [r6, #4]
   141ec:	ldr	r6, [r4, #4]
   141f0:	ldr	r3, [pc, #312]	; 14330 <argp_parse@@Base+0x1d74>
   141f4:	ldr	r8, [r3, #24]
   141f8:	ldr	r3, [r6, #28]
   141fc:	ldr	r2, [r6, #24]
   14200:	sub	r3, r3, r2
   14204:	ldr	r2, [r6, #16]
   14208:	cmp	r3, r2
   1420c:	bhi	142fc <argp_parse@@Base+0x1d40>
   14210:	str	r8, [r6, #12]
   14214:	mov	r0, r5
   14218:	bl	111bc <strlen@plt>
   1421c:	subs	r8, r0, #0
   14220:	beq	1426c <argp_parse@@Base+0x1cb0>
   14224:	ldr	r6, [r4, #4]
   14228:	ldr	r3, [r6, #28]
   1422c:	add	r3, r3, r8
   14230:	ldr	r2, [r6, #32]
   14234:	cmp	r2, r3
   14238:	bcs	14250 <argp_parse@@Base+0x1c94>
   1423c:	mov	r1, r8
   14240:	mov	r0, r6
   14244:	bl	17ba8 <argp_error@@Base+0x1330>
   14248:	cmp	r0, #0
   1424c:	beq	1426c <argp_parse@@Base+0x1cb0>
   14250:	mov	r2, r8
   14254:	mov	r1, r5
   14258:	ldr	r0, [r6, #28]
   1425c:	bl	11084 <memcpy@plt>
   14260:	ldr	r3, [r6, #28]
   14264:	add	r8, r3, r8
   14268:	str	r8, [r6, #28]
   1426c:	ldr	r6, [r4, #4]
   14270:	ldr	r3, [r6, #28]
   14274:	ldr	r2, [r6, #24]
   14278:	sub	r3, r3, r2
   1427c:	ldr	r2, [r6, #16]
   14280:	cmp	r3, r2
   14284:	bhi	14308 <argp_parse@@Base+0x1d4c>
   14288:	mov	r3, #0
   1428c:	str	r3, [r6, #4]
   14290:	ldr	r6, [r4, #4]
   14294:	ldr	r2, [r6, #28]
   14298:	ldr	r3, [r6, #32]
   1429c:	cmp	r2, r3
   142a0:	bcs	14314 <argp_parse@@Base+0x1d58>
   142a4:	ldr	r3, [r6, #28]
   142a8:	add	r2, r3, #1
   142ac:	str	r2, [r6, #28]
   142b0:	mov	r2, #10
   142b4:	strb	r2, [r3]
   142b8:	ldr	r3, [r4, #8]
   142bc:	mov	r2, #1
   142c0:	str	r2, [r3, #4]
   142c4:	cmp	r7, r5
   142c8:	popeq	{r4, r5, r6, r7, r8, pc}
   142cc:	mov	r0, r5
   142d0:	bl	131b0 <argp_parse@@Base+0xbf4>
   142d4:	pop	{r4, r5, r6, r7, r8, pc}
   142d8:	mov	r1, #1
   142dc:	mov	r0, r6
   142e0:	bl	17ba8 <argp_error@@Base+0x1330>
   142e4:	cmp	r0, #0
   142e8:	beq	141b8 <argp_parse@@Base+0x1bfc>
   142ec:	b	141a4 <argp_parse@@Base+0x1be8>
   142f0:	mov	r0, r6
   142f4:	bl	17604 <argp_error@@Base+0xd8c>
   142f8:	b	141e8 <argp_parse@@Base+0x1c2c>
   142fc:	mov	r0, r6
   14300:	bl	17604 <argp_error@@Base+0xd8c>
   14304:	b	14210 <argp_parse@@Base+0x1c54>
   14308:	mov	r0, r6
   1430c:	bl	17604 <argp_error@@Base+0xd8c>
   14310:	b	14288 <argp_parse@@Base+0x1ccc>
   14314:	mov	r1, #1
   14318:	mov	r0, r6
   1431c:	bl	17ba8 <argp_error@@Base+0x1330>
   14320:	cmp	r0, #0
   14324:	beq	142b8 <argp_parse@@Base+0x1cfc>
   14328:	b	142a4 <argp_parse@@Base+0x1ce8>
   1432c:	andeq	r0, r0, #3
   14330:	strdeq	r9, [r2], -ip
   14334:	push	{r4, r5, r6, r7, r8, lr}
   14338:	mov	r6, r0
   1433c:	mov	r4, r1
   14340:	ldr	r3, [r1, #12]
   14344:	cmp	r3, #0
   14348:	beq	14468 <argp_parse@@Base+0x1eac>
   1434c:	ldr	r3, [r1, #8]
   14350:	ldr	r7, [r3]
   14354:	ldr	r2, [r1]
   14358:	ldr	r5, [r2, #16]
   1435c:	ldr	r3, [r3, #4]
   14360:	cmp	r3, #0
   14364:	cmpne	r7, #0
   14368:	beq	143a4 <argp_parse@@Base+0x1de8>
   1436c:	ldr	r2, [r2, #12]
   14370:	ldr	r3, [r7, #12]
   14374:	cmp	r2, r3
   14378:	beq	143a4 <argp_parse@@Base+0x1de8>
   1437c:	ldr	r8, [r1, #4]
   14380:	ldr	r2, [r8, #28]
   14384:	ldr	r3, [r8, #32]
   14388:	cmp	r2, r3
   1438c:	bcs	14444 <argp_parse@@Base+0x1e88>
   14390:	ldr	r3, [r8, #28]
   14394:	add	r2, r3, #1
   14398:	str	r2, [r8, #28]
   1439c:	mov	r2, #10
   143a0:	strb	r2, [r3]
   143a4:	cmp	r5, #0
   143a8:	beq	1442c <argp_parse@@Base+0x1e70>
   143ac:	ldr	r0, [r5]
   143b0:	cmp	r0, #0
   143b4:	beq	1442c <argp_parse@@Base+0x1e70>
   143b8:	ldrb	r3, [r0]
   143bc:	cmp	r3, #0
   143c0:	beq	1442c <argp_parse@@Base+0x1e70>
   143c4:	cmp	r7, #0
   143c8:	beq	143f8 <argp_parse@@Base+0x1e3c>
   143cc:	ldr	r3, [r7, #16]
   143d0:	cmp	r5, r3
   143d4:	beq	1442c <argp_parse@@Base+0x1e70>
   143d8:	cmp	r3, #0
   143dc:	beq	143f8 <argp_parse@@Base+0x1e3c>
   143e0:	ldr	r3, [r3, #12]
   143e4:	cmp	r3, #0
   143e8:	cmpne	r5, r3
   143ec:	bne	143e0 <argp_parse@@Base+0x1e24>
   143f0:	cmp	r5, r3
   143f4:	beq	1442c <argp_parse@@Base+0x1e70>
   143f8:	ldr	r3, [r4, #4]
   143fc:	ldr	r7, [r3, #12]
   14400:	mov	r2, r4
   14404:	ldr	r1, [r5, #16]
   14408:	bl	14150 <argp_parse@@Base+0x1b94>
   1440c:	ldr	r5, [r4, #4]
   14410:	ldr	r3, [r5, #28]
   14414:	ldr	r2, [r5, #24]
   14418:	sub	r3, r3, r2
   1441c:	ldr	r2, [r5, #16]
   14420:	cmp	r3, r2
   14424:	bhi	1445c <argp_parse@@Base+0x1ea0>
   14428:	str	r7, [r5, #12]
   1442c:	mov	r3, #0
   14430:	str	r3, [r4, #12]
   14434:	mov	r1, r6
   14438:	ldr	r0, [r4, #4]
   1443c:	bl	13d38 <argp_parse@@Base+0x177c>
   14440:	pop	{r4, r5, r6, r7, r8, pc}
   14444:	mov	r1, #1
   14448:	mov	r0, r8
   1444c:	bl	17ba8 <argp_error@@Base+0x1330>
   14450:	cmp	r0, #0
   14454:	beq	143a4 <argp_parse@@Base+0x1de8>
   14458:	b	14390 <argp_parse@@Base+0x1dd4>
   1445c:	mov	r0, r5
   14460:	bl	17604 <argp_error@@Base+0xd8c>
   14464:	b	14428 <argp_parse@@Base+0x1e6c>
   14468:	ldr	r5, [r1, #4]
   1446c:	ldr	r3, [r5, #28]
   14470:	add	r3, r3, #2
   14474:	ldr	r2, [r5, #32]
   14478:	cmp	r2, r3
   1447c:	bcs	14494 <argp_parse@@Base+0x1ed8>
   14480:	mov	r1, #2
   14484:	mov	r0, r5
   14488:	bl	17ba8 <argp_error@@Base+0x1330>
   1448c:	cmp	r0, #0
   14490:	beq	14434 <argp_parse@@Base+0x1e78>
   14494:	ldr	r3, [r5, #28]
   14498:	ldr	r2, [pc, #20]	; 144b4 <argp_parse@@Base+0x1ef8>
   1449c:	ldrh	r2, [r2]
   144a0:	strh	r2, [r3]
   144a4:	ldr	r3, [r5, #28]
   144a8:	add	r3, r3, #2
   144ac:	str	r3, [r5, #28]
   144b0:	b	14434 <argp_parse@@Base+0x1e78>
   144b4:	andeq	r8, r1, r8, ror #14
   144b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144bc:	sub	sp, sp, #28
   144c0:	mov	fp, r0
   144c4:	str	r1, [sp, #8]
   144c8:	mov	r6, r2
   144cc:	mov	r8, r3
   144d0:	ldr	r7, [sp, #64]	; 0x40
   144d4:	ldr	r5, [sp, #68]	; 0x44
   144d8:	ldr	r9, [r0, #12]
   144dc:	ldr	r3, [r0, #16]
   144e0:	str	r3, [sp, #16]
   144e4:	cmp	r9, #0
   144e8:	beq	14944 <argp_parse@@Base+0x2388>
   144ec:	mov	r1, #11
   144f0:	mov	r0, r9
   144f4:	bl	111c8 <strchr@plt>
   144f8:	cmp	r6, #0
   144fc:	beq	147f4 <argp_parse@@Base+0x2238>
   14500:	cmp	r0, #0
   14504:	addne	r9, r0, #1
   14508:	beq	1492c <argp_parse@@Base+0x2370>
   1450c:	ldr	r3, [fp, #20]
   14510:	cmp	r3, #0
   14514:	movne	sl, #0
   14518:	beq	14934 <argp_parse@@Base+0x2378>
   1451c:	ldr	r1, [sp, #8]
   14520:	mov	r0, fp
   14524:	bl	13030 <argp_parse@@Base+0xa74>
   14528:	str	r0, [sp, #12]
   1452c:	ldr	r3, [fp, #20]
   14530:	ldr	r2, [pc, #1140]	; 149ac <argp_parse@@Base+0x23f0>
   14534:	ldr	r0, [pc, #1140]	; 149b0 <argp_parse@@Base+0x23f4>
   14538:	cmp	r6, #0
   1453c:	moveq	r0, r2
   14540:	ldr	r2, [sp, #12]
   14544:	mov	r1, r9
   14548:	blx	r3
   1454c:	mov	r4, r0
   14550:	cmp	r4, #0
   14554:	beq	148e4 <argp_parse@@Base+0x2328>
   14558:	cmp	r8, #0
   1455c:	beq	14584 <argp_parse@@Base+0x1fc8>
   14560:	ldr	r2, [r5, #28]
   14564:	ldr	r3, [r5, #32]
   14568:	cmp	r2, r3
   1456c:	bcs	14838 <argp_parse@@Base+0x227c>
   14570:	ldr	r3, [r5, #28]
   14574:	add	r2, r3, #1
   14578:	str	r2, [r5, #28]
   1457c:	mov	r2, #10
   14580:	strb	r2, [r3]
   14584:	cmp	r4, r9
   14588:	movne	r3, #0
   1458c:	moveq	r3, #1
   14590:	cmp	sl, #0
   14594:	moveq	r3, #0
   14598:	cmp	r3, #0
   1459c:	beq	14850 <argp_parse@@Base+0x2294>
   145a0:	ldr	r3, [r5, #28]
   145a4:	add	r3, r3, sl
   145a8:	ldr	r2, [r5, #32]
   145ac:	cmp	r2, r3
   145b0:	bcs	145c8 <argp_parse@@Base+0x200c>
   145b4:	mov	r1, sl
   145b8:	mov	r0, r5
   145bc:	bl	17ba8 <argp_error@@Base+0x1330>
   145c0:	cmp	r0, #0
   145c4:	beq	145e4 <argp_parse@@Base+0x2028>
   145c8:	mov	r2, sl
   145cc:	mov	r1, r9
   145d0:	ldr	r0, [r5, #28]
   145d4:	bl	11084 <memcpy@plt>
   145d8:	ldr	r3, [r5, #28]
   145dc:	add	r3, r3, sl
   145e0:	str	r3, [r5, #28]
   145e4:	ldr	r3, [r5, #28]
   145e8:	ldr	r2, [r5, #24]
   145ec:	sub	r3, r3, r2
   145f0:	ldr	r2, [r5, #16]
   145f4:	cmp	r3, r2
   145f8:	bhi	148b0 <argp_parse@@Base+0x22f4>
   145fc:	ldr	r3, [r5, #20]
   14600:	bic	r3, r3, r3, asr #31
   14604:	ldr	r2, [r5, #4]
   14608:	cmp	r2, r3
   1460c:	bcs	14634 <argp_parse@@Base+0x2078>
   14610:	ldr	r2, [r5, #28]
   14614:	ldr	r3, [r5, #32]
   14618:	cmp	r2, r3
   1461c:	bcs	148bc <argp_parse@@Base+0x2300>
   14620:	ldr	r3, [r5, #28]
   14624:	add	r2, r3, #1
   14628:	str	r2, [r5, #28]
   1462c:	mov	r2, #10
   14630:	strb	r2, [r3]
   14634:	cmp	r4, r9
   14638:	moveq	r4, #1
   1463c:	bne	148d4 <argp_parse@@Base+0x2318>
   14640:	cmp	r9, #0
   14644:	cmpne	sl, #0
   14648:	beq	14660 <argp_parse@@Base+0x20a4>
   1464c:	ldr	r3, [fp, #20]
   14650:	cmp	r3, #0
   14654:	beq	1476c <argp_parse@@Base+0x21b0>
   14658:	mov	r0, r9
   1465c:	bl	131b0 <argp_parse@@Base+0xbf4>
   14660:	cmp	r6, #0
   14664:	beq	1476c <argp_parse@@Base+0x21b0>
   14668:	ldr	r3, [fp, #20]
   1466c:	cmp	r3, #0
   14670:	beq	1476c <argp_parse@@Base+0x21b0>
   14674:	ldr	r2, [sp, #12]
   14678:	mov	r1, #0
   1467c:	ldr	r0, [pc, #816]	; 149b4 <argp_parse@@Base+0x23f8>
   14680:	blx	r3
   14684:	subs	r9, r0, #0
   14688:	beq	1476c <argp_parse@@Base+0x21b0>
   1468c:	orrs	r3, r8, r4
   14690:	beq	146b8 <argp_parse@@Base+0x20fc>
   14694:	ldr	r2, [r5, #28]
   14698:	ldr	r3, [r5, #32]
   1469c:	cmp	r2, r3
   146a0:	bcs	148ec <argp_parse@@Base+0x2330>
   146a4:	ldr	r3, [r5, #28]
   146a8:	add	r2, r3, #1
   146ac:	str	r2, [r5, #28]
   146b0:	mov	r2, #10
   146b4:	strb	r2, [r3]
   146b8:	mov	r0, r9
   146bc:	bl	111bc <strlen@plt>
   146c0:	subs	r4, r0, #0
   146c4:	beq	1470c <argp_parse@@Base+0x2150>
   146c8:	ldr	r3, [r5, #28]
   146cc:	add	r3, r3, r4
   146d0:	ldr	r2, [r5, #32]
   146d4:	cmp	r2, r3
   146d8:	bcs	146f0 <argp_parse@@Base+0x2134>
   146dc:	mov	r1, r4
   146e0:	mov	r0, r5
   146e4:	bl	17ba8 <argp_error@@Base+0x1330>
   146e8:	cmp	r0, #0
   146ec:	beq	1470c <argp_parse@@Base+0x2150>
   146f0:	mov	r2, r4
   146f4:	mov	r1, r9
   146f8:	ldr	r0, [r5, #28]
   146fc:	bl	11084 <memcpy@plt>
   14700:	ldr	r3, [r5, #28]
   14704:	add	r4, r3, r4
   14708:	str	r4, [r5, #28]
   1470c:	mov	r0, r9
   14710:	bl	131b0 <argp_parse@@Base+0xbf4>
   14714:	ldr	r3, [r5, #28]
   14718:	ldr	r2, [r5, #24]
   1471c:	sub	r3, r3, r2
   14720:	ldr	r2, [r5, #16]
   14724:	cmp	r3, r2
   14728:	bhi	14904 <argp_parse@@Base+0x2348>
   1472c:	ldr	r3, [r5, #20]
   14730:	bic	r3, r3, r3, asr #31
   14734:	ldr	r2, [r5, #4]
   14738:	cmp	r2, r3
   1473c:	movcs	r4, #1
   14740:	bcs	1476c <argp_parse@@Base+0x21b0>
   14744:	ldr	r2, [r5, #28]
   14748:	ldr	r3, [r5, #32]
   1474c:	cmp	r2, r3
   14750:	bcs	14910 <argp_parse@@Base+0x2354>
   14754:	ldr	r3, [r5, #28]
   14758:	add	r2, r3, #1
   1475c:	str	r2, [r5, #28]
   14760:	mov	r2, #10
   14764:	strb	r2, [r3]
   14768:	mov	r4, #1
   1476c:	ldr	r3, [sp, #16]
   14770:	cmp	r3, #0
   14774:	beq	147e8 <argp_parse@@Base+0x222c>
   14778:	ldr	r0, [r3]
   1477c:	cmp	r0, #0
   14780:	beq	147e8 <argp_parse@@Base+0x222c>
   14784:	clz	r9, r7
   14788:	lsr	r9, r9, #5
   1478c:	cmp	r7, #0
   14790:	cmpne	r4, #0
   14794:	bne	147e8 <argp_parse@@Base+0x222c>
   14798:	mov	sl, r3
   1479c:	ldr	fp, [sp, #8]
   147a0:	orrs	r3, r8, r4
   147a4:	str	r5, [sp, #4]
   147a8:	str	r7, [sp]
   147ac:	movne	r3, #1
   147b0:	moveq	r3, #0
   147b4:	mov	r2, r6
   147b8:	mov	r1, fp
   147bc:	bl	144b8 <argp_parse@@Base+0x1efc>
   147c0:	orr	r4, r4, r0
   147c4:	ldr	r0, [sl, #16]
   147c8:	cmp	r0, #0
   147cc:	beq	147e8 <argp_parse@@Base+0x222c>
   147d0:	add	sl, sl, #16
   147d4:	cmp	r4, #0
   147d8:	movne	r3, r9
   147dc:	orreq	r3, r9, #1
   147e0:	cmp	r3, #0
   147e4:	bne	147a0 <argp_parse@@Base+0x21e4>
   147e8:	mov	r0, r4
   147ec:	add	sp, sp, #28
   147f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147f4:	cmp	r0, #0
   147f8:	beq	1497c <argp_parse@@Base+0x23c0>
   147fc:	sub	sl, r0, r9
   14800:	ldr	r3, [fp, #20]
   14804:	cmp	r3, #0
   14808:	beq	14828 <argp_parse@@Base+0x226c>
   1480c:	cmp	sl, #0
   14810:	beq	1451c <argp_parse@@Base+0x1f60>
   14814:	mov	r1, sl
   14818:	mov	r0, r9
   1481c:	bl	11078 <strndup@plt>
   14820:	mov	r9, r0
   14824:	b	1451c <argp_parse@@Base+0x1f60>
   14828:	mov	r4, r9
   1482c:	mov	r3, #0
   14830:	str	r3, [sp, #12]
   14834:	b	14558 <argp_parse@@Base+0x1f9c>
   14838:	mov	r1, #1
   1483c:	mov	r0, r5
   14840:	bl	17ba8 <argp_error@@Base+0x1330>
   14844:	cmp	r0, #0
   14848:	beq	14584 <argp_parse@@Base+0x1fc8>
   1484c:	b	14570 <argp_parse@@Base+0x1fb4>
   14850:	mov	r0, r4
   14854:	bl	111bc <strlen@plt>
   14858:	subs	r3, r0, #0
   1485c:	mov	r1, r3
   14860:	str	r3, [sp, #20]
   14864:	beq	145e4 <argp_parse@@Base+0x2028>
   14868:	ldr	r3, [r5, #28]
   1486c:	add	r3, r3, r1
   14870:	ldr	r2, [r5, #32]
   14874:	cmp	r2, r3
   14878:	bcs	1488c <argp_parse@@Base+0x22d0>
   1487c:	mov	r0, r5
   14880:	bl	17ba8 <argp_error@@Base+0x1330>
   14884:	cmp	r0, #0
   14888:	beq	145e4 <argp_parse@@Base+0x2028>
   1488c:	ldr	r2, [sp, #20]
   14890:	mov	r1, r4
   14894:	ldr	r0, [r5, #28]
   14898:	bl	11084 <memcpy@plt>
   1489c:	ldr	r3, [r5, #28]
   148a0:	ldr	r2, [sp, #20]
   148a4:	add	r3, r3, r2
   148a8:	str	r3, [r5, #28]
   148ac:	b	145e4 <argp_parse@@Base+0x2028>
   148b0:	mov	r0, r5
   148b4:	bl	17604 <argp_error@@Base+0xd8c>
   148b8:	b	145fc <argp_parse@@Base+0x2040>
   148bc:	mov	r1, #1
   148c0:	mov	r0, r5
   148c4:	bl	17ba8 <argp_error@@Base+0x1330>
   148c8:	cmp	r0, #0
   148cc:	beq	14634 <argp_parse@@Base+0x2078>
   148d0:	b	14620 <argp_parse@@Base+0x2064>
   148d4:	mov	r0, r4
   148d8:	bl	131b0 <argp_parse@@Base+0xbf4>
   148dc:	mov	r4, #1
   148e0:	b	14640 <argp_parse@@Base+0x2084>
   148e4:	mov	r4, #0
   148e8:	b	14640 <argp_parse@@Base+0x2084>
   148ec:	mov	r1, #1
   148f0:	mov	r0, r5
   148f4:	bl	17ba8 <argp_error@@Base+0x1330>
   148f8:	cmp	r0, #0
   148fc:	beq	146b8 <argp_parse@@Base+0x20fc>
   14900:	b	146a4 <argp_parse@@Base+0x20e8>
   14904:	mov	r0, r5
   14908:	bl	17604 <argp_error@@Base+0xd8c>
   1490c:	b	1472c <argp_parse@@Base+0x2170>
   14910:	mov	r1, #1
   14914:	mov	r0, r5
   14918:	bl	17ba8 <argp_error@@Base+0x1330>
   1491c:	cmp	r0, #0
   14920:	moveq	r4, #1
   14924:	beq	1476c <argp_parse@@Base+0x21b0>
   14928:	b	14754 <argp_parse@@Base+0x2198>
   1492c:	mov	r9, #0
   14930:	b	1450c <argp_parse@@Base+0x1f50>
   14934:	mov	r4, r9
   14938:	mov	sl, #0
   1493c:	str	sl, [sp, #12]
   14940:	b	14550 <argp_parse@@Base+0x1f94>
   14944:	ldr	r3, [r0, #20]
   14948:	cmp	r3, #0
   1494c:	movne	sl, #0
   14950:	bne	1451c <argp_parse@@Base+0x1f60>
   14954:	mov	r3, r9
   14958:	cmp	r9, #0
   1495c:	moveq	r4, #0
   14960:	streq	r4, [sp, #12]
   14964:	beq	14660 <argp_parse@@Base+0x20a4>
   14968:	mov	r4, r9
   1496c:	mov	r9, r3
   14970:	mov	sl, #0
   14974:	str	sl, [sp, #12]
   14978:	b	14558 <argp_parse@@Base+0x1f9c>
   1497c:	ldr	r3, [fp, #20]
   14980:	cmp	r3, #0
   14984:	moveq	r3, r9
   14988:	beq	14958 <argp_parse@@Base+0x239c>
   1498c:	ldr	r1, [sp, #8]
   14990:	mov	r0, fp
   14994:	bl	13030 <argp_parse@@Base+0xa74>
   14998:	str	r0, [sp, #12]
   1499c:	ldr	r3, [fp, #20]
   149a0:	mov	sl, #0
   149a4:	ldr	r0, [pc]	; 149ac <argp_parse@@Base+0x23f0>
   149a8:	b	14540 <argp_parse@@Base+0x1f84>
   149ac:	andeq	r0, r0, #1
   149b0:	andeq	r0, r0, #2
   149b4:	andeq	r0, r0, #4
   149b8:	ldr	r3, [r0, #12]
   149bc:	ldr	r2, [r1, #12]
   149c0:	cmp	r3, r2
   149c4:	beq	14a1c <argp_parse@@Base+0x2460>
   149c8:	push	{r4, r5, r6, lr}
   149cc:	mov	r5, r1
   149d0:	mov	r4, r0
   149d4:	mov	r1, r2
   149d8:	mov	r0, r3
   149dc:	bl	149b8 <argp_parse@@Base+0x23fc>
   149e0:	subs	r3, r0, #0
   149e4:	bne	14a14 <argp_parse@@Base+0x2458>
   149e8:	ldr	r0, [r4, #8]
   149ec:	ldr	r3, [r5, #8]
   149f0:	mvn	r2, r3
   149f4:	lsr	r2, r2, #31
   149f8:	cmp	r2, r0, lsr #31
   149fc:	subne	r3, r0, r3
   14a00:	subeq	r3, r3, r0
   14a04:	cmp	r3, #0
   14a08:	ldreq	r3, [r5, #4]
   14a0c:	ldreq	r0, [r4, #4]
   14a10:	subeq	r3, r3, r0
   14a14:	mov	r0, r3
   14a18:	pop	{r4, r5, r6, pc}
   14a1c:	ldr	r2, [r0, #8]
   14a20:	ldr	r3, [r1, #8]
   14a24:	mvn	ip, r3
   14a28:	lsr	ip, ip, #31
   14a2c:	cmp	ip, r2, lsr #31
   14a30:	subne	r3, r2, r3
   14a34:	subeq	r3, r3, r2
   14a38:	cmp	r3, #0
   14a3c:	ldreq	r3, [r1, #4]
   14a40:	ldreq	r0, [r0, #4]
   14a44:	subeq	r3, r3, r0
   14a48:	mov	r0, r3
   14a4c:	bx	lr
   14a50:	push	{r4, r5, r6, r7, r8, lr}
   14a54:	sub	sp, sp, #8
   14a58:	ldr	lr, [r0, #16]
   14a5c:	cmp	lr, #0
   14a60:	movne	r2, lr
   14a64:	bne	14a74 <argp_parse@@Base+0x24b8>
   14a68:	ldr	ip, [r0, #12]
   14a6c:	b	14a84 <argp_parse@@Base+0x24c8>
   14a70:	mov	r2, r3
   14a74:	ldr	r3, [r2, #12]
   14a78:	cmp	r3, #0
   14a7c:	bne	14a70 <argp_parse@@Base+0x24b4>
   14a80:	ldr	ip, [r2, #8]
   14a84:	ldr	r5, [r1, #16]
   14a88:	cmp	r5, #0
   14a8c:	movne	r2, r5
   14a90:	bne	14aa0 <argp_parse@@Base+0x24e4>
   14a94:	ldr	r4, [r1, #12]
   14a98:	b	14ab0 <argp_parse@@Base+0x24f4>
   14a9c:	mov	r2, r3
   14aa0:	ldr	r3, [r2, #12]
   14aa4:	cmp	r3, #0
   14aa8:	bne	14a9c <argp_parse@@Base+0x24e0>
   14aac:	ldr	r4, [r2, #8]
   14ab0:	mvn	r3, r4
   14ab4:	lsr	r3, r3, #31
   14ab8:	cmp	r3, ip, lsr #31
   14abc:	subne	r4, ip, r4
   14ac0:	subeq	r4, r4, ip
   14ac4:	cmp	r4, #0
   14ac8:	bne	14b30 <argp_parse@@Base+0x2574>
   14acc:	adds	r4, r5, #0
   14ad0:	movne	r4, #1
   14ad4:	cmp	lr, #0
   14ad8:	rsbeq	r4, r4, #0
   14adc:	rsbne	r4, r4, #1
   14ae0:	cmp	r4, #0
   14ae4:	bne	14b30 <argp_parse@@Base+0x2574>
   14ae8:	mov	r6, r1
   14aec:	mov	r7, r0
   14af0:	cmp	lr, #0
   14af4:	beq	14b80 <argp_parse@@Base+0x25c4>
   14af8:	ldr	ip, [lr, #20]
   14afc:	ldr	r2, [r5, #20]
   14b00:	cmp	ip, r2
   14b04:	ble	14b3c <argp_parse@@Base+0x2580>
   14b08:	mov	r0, lr
   14b0c:	ldr	r0, [r0, #12]
   14b10:	ldr	r3, [r0, #20]
   14b14:	cmp	r2, r3
   14b18:	blt	14b0c <argp_parse@@Base+0x2550>
   14b1c:	mov	r1, r5
   14b20:	bl	149b8 <argp_parse@@Base+0x23fc>
   14b24:	subs	r4, r0, #0
   14b28:	cmp	r0, #0
   14b2c:	moveq	r4, #1
   14b30:	mov	r0, r4
   14b34:	add	sp, sp, #8
   14b38:	pop	{r4, r5, r6, r7, r8, pc}
   14b3c:	cmp	ip, r2
   14b40:	bge	14b6c <argp_parse@@Base+0x25b0>
   14b44:	mov	r1, r5
   14b48:	ldr	r1, [r1, #12]
   14b4c:	ldr	r3, [r1, #20]
   14b50:	cmp	ip, r3
   14b54:	blt	14b48 <argp_parse@@Base+0x258c>
   14b58:	mov	r0, lr
   14b5c:	bl	149b8 <argp_parse@@Base+0x23fc>
   14b60:	subs	r4, r0, #0
   14b64:	mvneq	r4, #0
   14b68:	b	14b30 <argp_parse@@Base+0x2574>
   14b6c:	mov	r1, r5
   14b70:	mov	r0, lr
   14b74:	bl	149b8 <argp_parse@@Base+0x23fc>
   14b78:	subs	r4, r0, #0
   14b7c:	bne	14b30 <argp_parse@@Base+0x2574>
   14b80:	ldr	r3, [r7, #12]
   14b84:	ldr	r4, [r6, #12]
   14b88:	mvn	r2, r4
   14b8c:	lsr	r2, r2, #31
   14b90:	cmp	r2, r3, lsr #31
   14b94:	subne	r4, r3, r4
   14b98:	subeq	r4, r4, r3
   14b9c:	cmp	r4, #0
   14ba0:	bne	14b30 <argp_parse@@Base+0x2574>
   14ba4:	mov	r0, r7
   14ba8:	bl	137f8 <argp_parse@@Base+0x123c>
   14bac:	mov	r5, r0
   14bb0:	str	r0, [sp]
   14bb4:	mov	r0, r6
   14bb8:	bl	137f8 <argp_parse@@Base+0x123c>
   14bbc:	str	r0, [sp, #4]
   14bc0:	ldr	r3, [r7]
   14bc4:	ldr	r3, [r3, #12]
   14bc8:	adds	r5, r5, #0
   14bcc:	movne	r5, #1
   14bd0:	ands	r3, r5, r3, lsr #3
   14bd4:	beq	14d18 <argp_parse@@Base+0x275c>
   14bd8:	mov	r0, sp
   14bdc:	bl	139bc <argp_parse@@Base+0x1400>
   14be0:	adds	r5, r0, #0
   14be4:	movne	r5, #1
   14be8:	ldr	r3, [r6]
   14bec:	ldr	r0, [r3, #12]
   14bf0:	ands	r0, r0, #8
   14bf4:	beq	14c14 <argp_parse@@Base+0x2658>
   14bf8:	ldr	r3, [sp, #4]
   14bfc:	cmp	r3, #0
   14c00:	beq	14d10 <argp_parse@@Base+0x2754>
   14c04:	add	r0, sp, #4
   14c08:	bl	139bc <argp_parse@@Base+0x1400>
   14c0c:	adds	r0, r0, #0
   14c10:	movne	r0, #1
   14c14:	subs	r4, r5, r0
   14c18:	bne	14b30 <argp_parse@@Base+0x2574>
   14c1c:	ldr	r2, [r7, #20]
   14c20:	ldr	r4, [pc, #276]	; 14d3c <argp_parse@@Base+0x2780>
   14c24:	mov	r3, #0
   14c28:	ldr	r2, [r2, #24]
   14c2c:	mov	r1, r4
   14c30:	mov	r0, r7
   14c34:	bl	13890 <argp_parse@@Base+0x12d4>
   14c38:	mov	r5, r0
   14c3c:	uxtb	r8, r0
   14c40:	ldr	r2, [r6, #20]
   14c44:	mov	r3, #0
   14c48:	ldr	r2, [r2, #24]
   14c4c:	mov	r1, r4
   14c50:	mov	r0, r6
   14c54:	bl	13890 <argp_parse@@Base+0x12d4>
   14c58:	uxtb	r7, r0
   14c5c:	cmp	r8, #0
   14c60:	movne	r5, r8
   14c64:	bne	14c78 <argp_parse@@Base+0x26bc>
   14c68:	ldr	r3, [sp]
   14c6c:	cmp	r3, #0
   14c70:	ldrbne	r5, [r3]
   14c74:	moveq	r5, #0
   14c78:	cmp	r7, #0
   14c7c:	uxtbne	r6, r0
   14c80:	bne	14c94 <argp_parse@@Base+0x26d8>
   14c84:	ldr	r3, [sp, #4]
   14c88:	cmp	r3, #0
   14c8c:	ldrbne	r6, [r3]
   14c90:	moveq	r6, #0
   14c94:	bl	11168 <__ctype_tolower_loc@plt>
   14c98:	ldr	r3, [r0]
   14c9c:	ldr	r4, [r3, r5, lsl #2]
   14ca0:	ldr	r3, [r3, r6, lsl #2]
   14ca4:	subs	r4, r4, r3
   14ca8:	bne	14b30 <argp_parse@@Base+0x2574>
   14cac:	subs	r4, r6, r5
   14cb0:	bne	14b30 <argp_parse@@Base+0x2574>
   14cb4:	adds	r4, r7, #0
   14cb8:	movne	r4, #1
   14cbc:	cmp	r8, #0
   14cc0:	rsbeq	r4, r4, #0
   14cc4:	rsbne	r4, r4, #1
   14cc8:	cmp	r4, #0
   14ccc:	bne	14b30 <argp_parse@@Base+0x2574>
   14cd0:	cmp	r8, #0
   14cd4:	bne	14b30 <argp_parse@@Base+0x2574>
   14cd8:	ldr	r0, [sp]
   14cdc:	ldr	r1, [sp, #4]
   14ce0:	adds	r4, r1, #0
   14ce4:	movne	r4, #1
   14ce8:	cmp	r0, #0
   14cec:	rsbeq	r4, r4, #0
   14cf0:	rsbne	r4, r4, #1
   14cf4:	cmp	r4, #0
   14cf8:	bne	14b30 <argp_parse@@Base+0x2574>
   14cfc:	cmp	r0, #0
   14d00:	beq	14b30 <argp_parse@@Base+0x2574>
   14d04:	bl	110cc <strcasecmp@plt>
   14d08:	mov	r4, r0
   14d0c:	b	14b30 <argp_parse@@Base+0x2574>
   14d10:	mov	r0, r4
   14d14:	b	14c14 <argp_parse@@Base+0x2658>
   14d18:	ldr	r3, [r6]
   14d1c:	ldr	r3, [r3, #12]
   14d20:	tst	r3, #8
   14d24:	beq	14c1c <argp_parse@@Base+0x2660>
   14d28:	ldr	r3, [sp, #4]
   14d2c:	cmp	r3, #0
   14d30:	movne	r5, r4
   14d34:	bne	14c04 <argp_parse@@Base+0x2648>
   14d38:	b	14c1c <argp_parse@@Base+0x2660>
   14d3c:	andeq	r3, r1, r4, ror r9
   14d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d44:	sub	sp, sp, #52	; 0x34
   14d48:	str	r0, [sp, #24]
   14d4c:	str	r1, [sp, #28]
   14d50:	ldr	r2, [r0, #16]
   14d54:	str	r2, [sp, #8]
   14d58:	ldr	r5, [r0]
   14d5c:	mov	r0, #16
   14d60:	bl	137c8 <argp_parse@@Base+0x120c>
   14d64:	subs	fp, r0, #0
   14d68:	beq	14d98 <argp_parse@@Base+0x27dc>
   14d6c:	mov	r3, #0
   14d70:	str	r3, [fp, #4]
   14d74:	str	r3, [fp, #12]
   14d78:	cmp	r5, r3
   14d7c:	beq	14f70 <argp_parse@@Base+0x29b4>
   14d80:	ldr	r4, [r5, #12]
   14d84:	ands	r4, r4, #4
   14d88:	bne	14dac <argp_parse@@Base+0x27f0>
   14d8c:	add	r6, r5, #24
   14d90:	mov	r8, r3
   14d94:	b	14dd4 <argp_parse@@Base+0x2818>
   14d98:	ldr	r3, [pc, #1576]	; 153c8 <argp_parse@@Base+0x2e0c>
   14d9c:	ldr	r2, [pc, #1576]	; 153cc <argp_parse@@Base+0x2e10>
   14da0:	ldr	r1, [pc, #1576]	; 153d0 <argp_parse@@Base+0x2e14>
   14da4:	ldr	r0, [pc, #1576]	; 153d4 <argp_parse@@Base+0x2e18>
   14da8:	bl	112dc <__assert_fail@plt>
   14dac:	ldr	r3, [pc, #1556]	; 153c8 <argp_parse@@Base+0x2e0c>
   14db0:	mov	r2, #460	; 0x1cc
   14db4:	ldr	r1, [pc, #1556]	; 153d0 <argp_parse@@Base+0x2e14>
   14db8:	ldr	r0, [pc, #1560]	; 153d8 <argp_parse@@Base+0x2e1c>
   14dbc:	bl	112dc <__assert_fail@plt>
   14dc0:	ldr	r2, [fp, #4]
   14dc4:	add	r2, r2, #1
   14dc8:	str	r2, [fp, #4]
   14dcc:	b	14dfc <argp_parse@@Base+0x2840>
   14dd0:	add	r6, r6, #24
   14dd4:	mov	r3, r6
   14dd8:	ldr	r2, [r6, #-20]	; 0xffffffec
   14ddc:	cmp	r2, #0
   14de0:	bne	14df0 <argp_parse@@Base+0x2834>
   14de4:	ldr	r2, [r6, #-24]	; 0xffffffe8
   14de8:	cmp	r2, #0
   14dec:	beq	14e34 <argp_parse@@Base+0x2878>
   14df0:	ldr	r2, [r3, #-12]
   14df4:	tst	r2, #4
   14df8:	beq	14dc0 <argp_parse@@Base+0x2804>
   14dfc:	ldr	r2, [r3, #-12]
   14e00:	tst	r2, #8
   14e04:	bne	14dd0 <argp_parse@@Base+0x2814>
   14e08:	ldr	r7, [r3, #-20]	; 0xffffffec
   14e0c:	sub	r3, r7, #1
   14e10:	cmp	r3, #254	; 0xfe
   14e14:	bhi	14dd0 <argp_parse@@Base+0x2814>
   14e18:	bl	111a4 <__ctype_b_loc@plt>
   14e1c:	ldr	r3, [r0]
   14e20:	lsl	r7, r7, #1
   14e24:	ldrh	r3, [r3, r7]
   14e28:	tst	r3, #16384	; 0x4000
   14e2c:	addne	r8, r8, #1
   14e30:	b	14dd0 <argp_parse@@Base+0x2814>
   14e34:	ldr	r2, [r6, #-8]
   14e38:	cmp	r2, #0
   14e3c:	bne	14df0 <argp_parse@@Base+0x2834>
   14e40:	ldr	r2, [r6, #-4]
   14e44:	cmp	r2, #0
   14e48:	bne	14df0 <argp_parse@@Base+0x2834>
   14e4c:	ldr	r0, [fp, #4]
   14e50:	rsb	r0, r0, r0, lsl #3
   14e54:	lsl	r0, r0, #2
   14e58:	bl	137c8 <argp_parse@@Base+0x120c>
   14e5c:	str	r0, [fp]
   14e60:	add	r0, r8, #1
   14e64:	bl	137c8 <argp_parse@@Base+0x120c>
   14e68:	str	r0, [fp, #8]
   14e6c:	ldr	r8, [fp]
   14e70:	cmp	r0, #0
   14e74:	cmpne	r8, #0
   14e78:	bne	14e90 <argp_parse@@Base+0x28d4>
   14e7c:	ldr	r3, [pc, #1348]	; 153c8 <argp_parse@@Base+0x2e0c>
   14e80:	ldr	r2, [pc, #1364]	; 153dc <argp_parse@@Base+0x2e20>
   14e84:	ldr	r1, [pc, #1348]	; 153d0 <argp_parse@@Base+0x2e14>
   14e88:	ldr	r0, [pc, #1360]	; 153e0 <argp_parse@@Base+0x2e24>
   14e8c:	bl	112dc <__assert_fail@plt>
   14e90:	ldr	r2, [fp, #4]
   14e94:	ldr	r3, [pc, #1352]	; 153e4 <argp_parse@@Base+0x2e28>
   14e98:	cmp	r2, r3
   14e9c:	addls	r8, r8, #28
   14ea0:	movls	r7, r0
   14ea4:	movls	sl, #0
   14ea8:	bls	14ef4 <argp_parse@@Base+0x2938>
   14eac:	ldr	r3, [pc, #1300]	; 153c8 <argp_parse@@Base+0x2e0c>
   14eb0:	mov	r2, #476	; 0x1dc
   14eb4:	ldr	r1, [pc, #1300]	; 153d0 <argp_parse@@Base+0x2e14>
   14eb8:	ldr	r0, [pc, #1320]	; 153e8 <argp_parse@@Base+0x2e2c>
   14ebc:	bl	112dc <__assert_fail@plt>
   14ec0:	ldr	r3, [r5, #4]
   14ec4:	cmp	r3, #0
   14ec8:	addeq	r9, r4, #1
   14ecc:	movne	r9, r4
   14ed0:	b	14f38 <argp_parse@@Base+0x297c>
   14ed4:	ldr	r3, [r5, #16]
   14ed8:	cmp	r3, #0
   14edc:	bne	152e4 <argp_parse@@Base+0x2d28>
   14ee0:	ldr	r3, [r5, #20]
   14ee4:	cmp	r3, #0
   14ee8:	bne	152e4 <argp_parse@@Base+0x2d28>
   14eec:	add	r8, r8, #28
   14ef0:	mov	r4, r9
   14ef4:	ldr	r3, [r5, #4]
   14ef8:	cmp	r3, #0
   14efc:	bne	14f0c <argp_parse@@Base+0x2950>
   14f00:	ldr	r3, [r5]
   14f04:	cmp	r3, #0
   14f08:	beq	14f50 <argp_parse@@Base+0x2994>
   14f0c:	mov	r6, r8
   14f10:	str	r5, [r8, #-28]	; 0xffffffe4
   14f14:	str	sl, [r8, #-24]	; 0xffffffe8
   14f18:	str	r7, [r8, #-20]	; 0xffffffec
   14f1c:	ldr	r9, [r5, #20]
   14f20:	cmp	r9, #0
   14f24:	bne	14f38 <argp_parse@@Base+0x297c>
   14f28:	ldr	r3, [r5]
   14f2c:	cmp	r3, #0
   14f30:	movne	r9, r4
   14f34:	beq	14ec0 <argp_parse@@Base+0x2904>
   14f38:	str	r9, [r6, #-16]
   14f3c:	ldr	r3, [sp, #28]
   14f40:	str	r3, [r6, #-12]
   14f44:	ldr	r3, [sp, #24]
   14f48:	str	r3, [r6, #-8]
   14f4c:	b	152f0 <argp_parse@@Base+0x2d34>
   14f50:	ldr	r3, [r5, #16]
   14f54:	cmp	r3, #0
   14f58:	bne	14f0c <argp_parse@@Base+0x2950>
   14f5c:	ldr	r3, [r5, #20]
   14f60:	cmp	r3, #0
   14f64:	bne	14f0c <argp_parse@@Base+0x2950>
   14f68:	mov	r3, #0
   14f6c:	strb	r3, [r7]
   14f70:	ldr	r3, [sp, #8]
   14f74:	cmp	r3, #0
   14f78:	beq	152b4 <argp_parse@@Base+0x2cf8>
   14f7c:	ldr	r3, [r3]
   14f80:	cmp	r3, #0
   14f84:	beq	152b4 <argp_parse@@Base+0x2cf8>
   14f88:	add	r3, fp, #12
   14f8c:	str	r3, [sp, #44]	; 0x2c
   14f90:	str	fp, [sp, #20]
   14f94:	b	15024 <argp_parse@@Base+0x2a68>
   14f98:	ldr	r1, [sp, #28]
   14f9c:	b	150a4 <argp_parse@@Base+0x2ae8>
   14fa0:	mov	r2, r3
   14fa4:	ldr	r3, [r2, #24]
   14fa8:	cmp	r3, #0
   14fac:	bne	14fa0 <argp_parse@@Base+0x29e4>
   14fb0:	add	r2, r2, #24
   14fb4:	ldr	r1, [sp, #16]
   14fb8:	ldr	r3, [r1, #12]
   14fbc:	str	r3, [r2]
   14fc0:	mov	r2, #0
   14fc4:	str	r2, [r1, #12]
   14fc8:	ldr	r3, [r1, #4]
   14fcc:	cmp	r3, r2
   14fd0:	beq	15008 <argp_parse@@Base+0x2a4c>
   14fd4:	ldr	r0, [sp, #20]
   14fd8:	ldr	r2, [r0, #4]
   14fdc:	cmp	r2, #0
   14fe0:	bne	150cc <argp_parse@@Base+0x2b10>
   14fe4:	str	r3, [r0, #4]
   14fe8:	mov	r2, r1
   14fec:	ldr	r3, [r1]
   14ff0:	str	r3, [r0]
   14ff4:	ldr	r3, [r2, #8]
   14ff8:	str	r3, [r0, #8]
   14ffc:	mov	r3, r2
   15000:	mov	r2, #0
   15004:	str	r2, [r3, #4]
   15008:	ldr	r0, [sp, #16]
   1500c:	bl	13bf4 <argp_parse@@Base+0x1638>
   15010:	ldr	r2, [sp, #8]
   15014:	ldr	r3, [r2, #16]!
   15018:	str	r2, [sp, #8]
   1501c:	cmp	r3, #0
   15020:	beq	152b0 <argp_parse@@Base+0x2cf4>
   15024:	ldr	r3, [sp, #8]
   15028:	ldr	r4, [r3, #12]
   1502c:	cmp	r4, #0
   15030:	bne	15040 <argp_parse@@Base+0x2a84>
   15034:	ldr	r3, [r3, #8]
   15038:	cmp	r3, #0
   1503c:	beq	14f98 <argp_parse@@Base+0x29dc>
   15040:	ldr	r2, [sp, #8]
   15044:	ldr	r5, [r2, #8]
   15048:	ldr	r7, [sp, #24]
   1504c:	ldr	r3, [r7, #16]
   15050:	sub	r3, r2, r3
   15054:	asr	r6, r3, #4
   15058:	mov	r0, #28
   1505c:	bl	137c8 <argp_parse@@Base+0x120c>
   15060:	subs	r1, r0, #0
   15064:	beq	150a4 <argp_parse@@Base+0x2ae8>
   15068:	str	r4, [r1, #8]
   1506c:	str	r5, [r1]
   15070:	str	r6, [r1, #4]
   15074:	ldr	r3, [sp, #28]
   15078:	str	r3, [r1, #12]
   1507c:	str	r7, [r1, #16]
   15080:	cmp	r3, #0
   15084:	ldrne	r3, [r3, #20]
   15088:	addne	r3, r3, #1
   1508c:	moveq	r3, #0
   15090:	str	r3, [r1, #20]
   15094:	ldr	r2, [sp, #20]
   15098:	ldr	r3, [r2, #12]
   1509c:	str	r3, [r1, #24]
   150a0:	str	r1, [r2, #12]
   150a4:	ldr	r3, [sp, #8]
   150a8:	ldr	r0, [r3]
   150ac:	bl	14d40 <argp_parse@@Base+0x2784>
   150b0:	str	r0, [sp, #16]
   150b4:	ldr	r3, [sp, #20]
   150b8:	ldr	r2, [r3, #12]
   150bc:	cmp	r2, #0
   150c0:	ldreq	r2, [sp, #44]	; 0x2c
   150c4:	bne	14fa4 <argp_parse@@Base+0x29e8>
   150c8:	b	14fb4 <argp_parse@@Base+0x29f8>
   150cc:	add	r3, r3, r2
   150d0:	str	r3, [sp, #36]	; 0x24
   150d4:	rsb	r0, r3, r3, lsl #3
   150d8:	lsl	r0, r0, #2
   150dc:	bl	137c8 <argp_parse@@Base+0x120c>
   150e0:	mov	r4, r0
   150e4:	str	r0, [sp, #32]
   150e8:	ldr	r3, [sp, #20]
   150ec:	ldr	r0, [r3, #8]
   150f0:	bl	111bc <strlen@plt>
   150f4:	mov	r6, r0
   150f8:	ldr	r3, [sp, #16]
   150fc:	ldr	r0, [r3, #8]
   15100:	bl	111bc <strlen@plt>
   15104:	add	r0, r6, r0
   15108:	add	r0, r0, #1
   1510c:	bl	137c8 <argp_parse@@Base+0x120c>
   15110:	mov	sl, r0
   15114:	cmp	r4, #0
   15118:	cmpne	r0, #0
   1511c:	beq	151e8 <argp_parse@@Base+0x2c2c>
   15120:	ldr	r3, [sp, #36]	; 0x24
   15124:	ldr	r2, [pc, #696]	; 153e4 <argp_parse@@Base+0x2e28>
   15128:	cmp	r3, r2
   1512c:	bhi	151fc <argp_parse@@Base+0x2c40>
   15130:	ldr	r5, [sp, #20]
   15134:	ldr	r2, [r5]
   15138:	mov	r1, r2
   1513c:	str	r2, [sp, #40]	; 0x28
   15140:	ldr	r4, [r5, #4]
   15144:	rsb	r7, r4, r4, lsl #3
   15148:	lsl	r7, r7, #2
   1514c:	mov	r2, r7
   15150:	ldr	r8, [sp, #32]
   15154:	mov	r0, r8
   15158:	bl	1118c <mempcpy@plt>
   1515c:	ldr	r3, [sp, #16]
   15160:	ldr	r1, [r3, #4]
   15164:	str	r1, [sp, #4]
   15168:	rsb	r2, r1, r1, lsl #3
   1516c:	lsl	r2, r2, #2
   15170:	ldr	r1, [r3]
   15174:	bl	11084 <memcpy@plt>
   15178:	ldr	r5, [r5, #8]
   1517c:	mov	r2, r6
   15180:	mov	r1, r5
   15184:	mov	r0, sl
   15188:	bl	11084 <memcpy@plt>
   1518c:	cmp	r4, #0
   15190:	beq	15210 <argp_parse@@Base+0x2c54>
   15194:	mov	r2, r8
   15198:	ldr	r3, [r2, #8]
   1519c:	sub	r3, r3, r5
   151a0:	add	r3, sl, r3
   151a4:	str	r3, [r2, #8]
   151a8:	add	r2, r2, #28
   151ac:	subs	r4, r4, #1
   151b0:	bne	15198 <argp_parse@@Base+0x2bdc>
   151b4:	ldr	r3, [sp, #32]
   151b8:	add	r7, r3, r7
   151bc:	add	r3, sl, r6
   151c0:	str	r3, [sp, #12]
   151c4:	ldr	r2, [sp, #16]
   151c8:	ldr	r8, [r2, #8]
   151cc:	ldr	r2, [sp, #4]
   151d0:	cmp	r2, #0
   151d4:	beq	15278 <argp_parse@@Base+0x2cbc>
   151d8:	add	r9, r7, #28
   151dc:	mov	fp, r3
   151e0:	sub	r7, r3, #1
   151e4:	b	15260 <argp_parse@@Base+0x2ca4>
   151e8:	ldr	r3, [pc, #508]	; 153ec <argp_parse@@Base+0x2e30>
   151ec:	ldr	r2, [pc, #508]	; 153f0 <argp_parse@@Base+0x2e34>
   151f0:	ldr	r1, [pc, #472]	; 153d0 <argp_parse@@Base+0x2e14>
   151f4:	ldr	r0, [pc, #504]	; 153f4 <argp_parse@@Base+0x2e38>
   151f8:	bl	112dc <__assert_fail@plt>
   151fc:	ldr	r3, [pc, #488]	; 153ec <argp_parse@@Base+0x2e30>
   15200:	mov	r2, #972	; 0x3cc
   15204:	ldr	r1, [pc, #452]	; 153d0 <argp_parse@@Base+0x2e14>
   15208:	ldr	r0, [pc, #488]	; 153f8 <argp_parse@@Base+0x2e3c>
   1520c:	bl	112dc <__assert_fail@plt>
   15210:	ldr	r7, [sp, #32]
   15214:	b	151bc <argp_parse@@Base+0x2c00>
   15218:	ldr	r3, [sp, #12]
   1521c:	cmp	sl, r3
   15220:	bcs	153b8 <argp_parse@@Base+0x2dfc>
   15224:	ldrb	r3, [sl]
   15228:	cmp	r3, r1
   1522c:	beq	153c0 <argp_parse@@Base+0x2e04>
   15230:	mov	r3, sl
   15234:	cmp	r7, r3
   15238:	beq	153b8 <argp_parse@@Base+0x2dfc>
   1523c:	ldrb	r2, [r3, #1]!
   15240:	cmp	r2, r1
   15244:	bne	15234 <argp_parse@@Base+0x2c78>
   15248:	b	153c0 <argp_parse@@Base+0x2e04>
   1524c:	add	r9, r9, #28
   15250:	ldr	r3, [sp, #4]
   15254:	subs	r3, r3, #1
   15258:	str	r3, [sp, #4]
   1525c:	beq	1527c <argp_parse@@Base+0x2cc0>
   15260:	str	fp, [r9, #-20]	; 0xffffffec
   15264:	ldr	r5, [r9, #-24]	; 0xffffffe8
   15268:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1526c:	cmp	r5, #0
   15270:	bne	15380 <argp_parse@@Base+0x2dc4>
   15274:	b	1524c <argp_parse@@Base+0x2c90>
   15278:	ldr	fp, [sp, #12]
   1527c:	mov	r3, #0
   15280:	strb	r3, [fp]
   15284:	ldr	r0, [sp, #40]	; 0x28
   15288:	bl	131b0 <argp_parse@@Base+0xbf4>
   1528c:	ldr	r4, [sp, #20]
   15290:	ldr	r0, [r4, #8]
   15294:	bl	131b0 <argp_parse@@Base+0xbf4>
   15298:	ldr	r2, [sp, #32]
   1529c:	str	r2, [r4]
   152a0:	ldr	r2, [sp, #36]	; 0x24
   152a4:	str	r2, [r4, #4]
   152a8:	str	sl, [r4, #8]
   152ac:	b	15008 <argp_parse@@Base+0x2a4c>
   152b0:	ldr	fp, [sp, #20]
   152b4:	mov	r0, fp
   152b8:	add	sp, sp, #52	; 0x34
   152bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c0:	strb	r4, [r7]
   152c4:	add	r7, r7, #1
   152c8:	add	r5, r5, #24
   152cc:	ldr	r3, [r5, #4]
   152d0:	cmp	r3, #0
   152d4:	bne	152e4 <argp_parse@@Base+0x2d28>
   152d8:	ldr	r3, [r5]
   152dc:	cmp	r3, #0
   152e0:	beq	14ed4 <argp_parse@@Base+0x2918>
   152e4:	ldr	r3, [r5, #12]
   152e8:	tst	r3, #4
   152ec:	beq	14eec <argp_parse@@Base+0x2930>
   152f0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   152f4:	add	r3, r3, #1
   152f8:	str	r3, [r6, #-24]	; 0xffffffe8
   152fc:	ldr	r3, [r5, #12]
   15300:	tst	r3, #8
   15304:	bne	152c8 <argp_parse@@Base+0x2d0c>
   15308:	ldr	r4, [r5, #4]
   1530c:	sub	r3, r4, #1
   15310:	cmp	r3, #254	; 0xfe
   15314:	bhi	152c8 <argp_parse@@Base+0x2d0c>
   15318:	bl	111a4 <__ctype_b_loc@plt>
   1531c:	ldr	r2, [r0]
   15320:	lsl	r3, r4, #1
   15324:	ldrh	r3, [r2, r3]
   15328:	tst	r3, #16384	; 0x4000
   1532c:	beq	152c8 <argp_parse@@Base+0x2d0c>
   15330:	uxtb	r4, r4
   15334:	ldr	r3, [fp, #8]
   15338:	cmp	r3, r7
   1533c:	bcs	152c0 <argp_parse@@Base+0x2d04>
   15340:	ldrb	r2, [r3]
   15344:	cmp	r2, r4
   15348:	beq	152c8 <argp_parse@@Base+0x2d0c>
   1534c:	sub	r1, r7, #1
   15350:	cmp	r3, r1
   15354:	beq	152c0 <argp_parse@@Base+0x2d04>
   15358:	ldrb	r2, [r3, #1]!
   1535c:	cmp	r2, r4
   15360:	bne	15350 <argp_parse@@Base+0x2d94>
   15364:	b	152c8 <argp_parse@@Base+0x2d0c>
   15368:	ldrb	r1, [r8]
   1536c:	cmp	r1, r6
   15370:	beq	15218 <argp_parse@@Base+0x2c5c>
   15374:	add	r4, r4, #24
   15378:	subs	r5, r5, #1
   1537c:	beq	1524c <argp_parse@@Base+0x2c90>
   15380:	ldr	r3, [r4, #12]
   15384:	tst	r3, #8
   15388:	bne	15374 <argp_parse@@Base+0x2db8>
   1538c:	ldr	r6, [r4, #4]
   15390:	sub	r3, r6, #1
   15394:	cmp	r3, #254	; 0xfe
   15398:	bhi	15374 <argp_parse@@Base+0x2db8>
   1539c:	bl	111a4 <__ctype_b_loc@plt>
   153a0:	ldr	r2, [r0]
   153a4:	lsl	r3, r6, #1
   153a8:	ldrh	r3, [r2, r3]
   153ac:	tst	r3, #16384	; 0x4000
   153b0:	bne	15368 <argp_parse@@Base+0x2dac>
   153b4:	b	15374 <argp_parse@@Base+0x2db8>
   153b8:	strb	r1, [fp]
   153bc:	add	fp, fp, #1
   153c0:	add	r8, r8, #1
   153c4:	b	15374 <argp_parse@@Base+0x2db8>
   153c8:	andeq	r8, r1, ip, ror r6
   153cc:	andeq	r0, r0, r2, asr #3
   153d0:	andeq	r8, r1, ip, ror #14
   153d4:	andeq	r8, r1, r8, ror r7
   153d8:	andeq	r8, r1, ip, ror r7
   153dc:	ldrdeq	r0, [r0], -sl
   153e0:	andeq	r8, r1, ip, lsl #15
   153e4:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   153e8:			; <UNDEFINED> instruction: 0x000187b0
   153ec:	andeq	r8, r1, r8, lsl #13
   153f0:	andeq	r0, r0, sl, asr #7
   153f4:	andeq	r8, r1, ip, ror #15
   153f8:	andeq	r8, r1, r8, lsl #16

000153fc <argp_failure@@Base>:
   153fc:	push	{r3}		; (str r3, [sp, #-4]!)
   15400:	push	{r4, r5, r6, r7, lr}
   15404:	sub	sp, sp, #200	; 0xc8
   15408:	mov	r7, r1
   1540c:	mov	r6, r2
   15410:	subs	r5, r0, #0
   15414:	beq	15564 <argp_failure@@Base+0x168>
   15418:	ldr	r3, [r5, #16]
   1541c:	tst	r3, #2
   15420:	bne	15554 <argp_failure@@Base+0x158>
   15424:	ldr	r4, [r5, #44]	; 0x2c
   15428:	cmp	r4, #0
   1542c:	beq	15554 <argp_failure@@Base+0x158>
   15430:	mov	r0, r4
   15434:	bl	11294 <flockfile@plt>
   15438:	ldr	r0, [r5, #40]	; 0x28
   1543c:	mov	r1, r4
   15440:	bl	10fe8 <fputs_unlocked@plt>
   15444:	ldr	r3, [sp, #220]	; 0xdc
   15448:	cmp	r3, #0
   1544c:	beq	154a8 <argp_failure@@Base+0xac>
   15450:	add	r3, sp, #224	; 0xe0
   15454:	str	r3, [sp]
   15458:	ldr	r3, [r4, #20]
   1545c:	ldr	r2, [r4, #24]
   15460:	cmp	r3, r2
   15464:	addcc	r2, r3, #1
   15468:	strcc	r2, [r4, #20]
   1546c:	movcc	r2, #58	; 0x3a
   15470:	strbcc	r2, [r3]
   15474:	bcs	15588 <argp_failure@@Base+0x18c>
   15478:	ldr	r3, [r4, #20]
   1547c:	ldr	r2, [r4, #24]
   15480:	cmp	r3, r2
   15484:	addcc	r2, r3, #1
   15488:	strcc	r2, [r4, #20]
   1548c:	movcc	r2, #32
   15490:	strbcc	r2, [r3]
   15494:	bcs	15598 <argp_failure@@Base+0x19c>
   15498:	ldr	r2, [sp]
   1549c:	ldr	r1, [sp, #220]	; 0xdc
   154a0:	mov	r0, r4
   154a4:	bl	11270 <vfprintf@plt>
   154a8:	cmp	r6, #0
   154ac:	beq	15510 <argp_failure@@Base+0x114>
   154b0:	ldr	r3, [r4, #20]
   154b4:	ldr	r2, [r4, #24]
   154b8:	cmp	r3, r2
   154bc:	addcc	r2, r3, #1
   154c0:	strcc	r2, [r4, #20]
   154c4:	movcc	r2, #58	; 0x3a
   154c8:	strbcc	r2, [r3]
   154cc:	bcs	155a8 <argp_failure@@Base+0x1ac>
   154d0:	ldr	r3, [r4, #20]
   154d4:	ldr	r2, [r4, #24]
   154d8:	cmp	r3, r2
   154dc:	addcc	r2, r3, #1
   154e0:	strcc	r2, [r4, #20]
   154e4:	movcc	r2, #32
   154e8:	strbcc	r2, [r3]
   154ec:	bcs	155b8 <argp_failure@@Base+0x1bc>
   154f0:	mov	r2, #200	; 0xc8
   154f4:	mov	r1, sp
   154f8:	mov	r0, r6
   154fc:	bl	11204 <strerror_r@plt>
   15500:	cmp	r0, #0
   15504:	beq	155c8 <argp_failure@@Base+0x1cc>
   15508:	mov	r1, r4
   1550c:	bl	10fe8 <fputs_unlocked@plt>
   15510:	ldr	r3, [r4, #20]
   15514:	ldr	r2, [r4, #24]
   15518:	cmp	r3, r2
   1551c:	addcc	r2, r3, #1
   15520:	strcc	r2, [r4, #20]
   15524:	movcc	r2, #10
   15528:	strbcc	r2, [r3]
   1552c:	bcs	155e0 <argp_failure@@Base+0x1e4>
   15530:	mov	r0, r4
   15534:	bl	110d8 <funlockfile@plt>
   15538:	cmp	r7, #0
   1553c:	beq	15554 <argp_failure@@Base+0x158>
   15540:	cmp	r5, #0
   15544:	beq	155f0 <argp_failure@@Base+0x1f4>
   15548:	ldr	r3, [r5, #16]
   1554c:	tst	r3, #32
   15550:	beq	155f0 <argp_failure@@Base+0x1f4>
   15554:	add	sp, sp, #200	; 0xc8
   15558:	pop	{r4, r5, r6, r7, lr}
   1555c:	add	sp, sp, #4
   15560:	bx	lr
   15564:	ldr	r3, [pc, #140]	; 155f8 <argp_failure@@Base+0x1fc>
   15568:	ldr	r4, [r3]
   1556c:	cmp	r4, #0
   15570:	beq	15554 <argp_failure@@Base+0x158>
   15574:	mov	r0, r4
   15578:	bl	11294 <flockfile@plt>
   1557c:	ldr	r3, [pc, #120]	; 155fc <argp_failure@@Base+0x200>
   15580:	ldr	r0, [r3]
   15584:	b	1543c <argp_failure@@Base+0x40>
   15588:	mov	r1, #58	; 0x3a
   1558c:	mov	r0, r4
   15590:	bl	11240 <__overflow@plt>
   15594:	b	15478 <argp_failure@@Base+0x7c>
   15598:	mov	r1, #32
   1559c:	mov	r0, r4
   155a0:	bl	11240 <__overflow@plt>
   155a4:	b	15498 <argp_failure@@Base+0x9c>
   155a8:	mov	r1, #58	; 0x3a
   155ac:	mov	r0, r4
   155b0:	bl	11240 <__overflow@plt>
   155b4:	b	154d0 <argp_failure@@Base+0xd4>
   155b8:	mov	r1, #32
   155bc:	mov	r0, r4
   155c0:	bl	11240 <__overflow@plt>
   155c4:	b	154f0 <argp_failure@@Base+0xf4>
   155c8:	mov	r0, r6
   155cc:	bl	1115c <strerror@plt>
   155d0:	ldr	r3, [pc, #40]	; 15600 <argp_failure@@Base+0x204>
   155d4:	cmp	r0, #0
   155d8:	moveq	r0, r3
   155dc:	b	15508 <argp_failure@@Base+0x10c>
   155e0:	mov	r1, #10
   155e4:	mov	r0, r4
   155e8:	bl	11240 <__overflow@plt>
   155ec:	b	15530 <argp_failure@@Base+0x134>
   155f0:	mov	r0, r7
   155f4:	bl	111b0 <exit@plt>
   155f8:	andeq	r9, r2, r0, asr #4
   155fc:	andeq	r9, r2, r8, lsr r2
   15600:	andeq	r8, r1, ip, lsr r8
   15604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15608:	add	fp, sp, #32
   1560c:	sub	sp, sp, #108	; 0x6c
   15610:	str	r0, [fp, #-112]	; 0xffffff90
   15614:	str	r1, [fp, #-100]	; 0xffffff9c
   15618:	str	r3, [fp, #-104]	; 0xffffff98
   1561c:	subs	r3, r2, #0
   15620:	str	r3, [fp, #-132]	; 0xffffff7c
   15624:	beq	16690 <argp_failure@@Base+0x1294>
   15628:	mov	r0, r3
   1562c:	bl	11294 <flockfile@plt>
   15630:	ldr	r3, [pc, #3772]	; 164f4 <argp_failure@@Base+0x10f8>
   15634:	ldr	r3, [r3, #36]	; 0x24
   15638:	str	r3, [fp, #-108]	; 0xffffff94
   1563c:	cmp	r3, #0
   15640:	beq	15718 <argp_failure@@Base+0x31c>
   15644:	mov	r3, #0
   15648:	ldr	r2, [pc, #3748]	; 164f4 <argp_failure@@Base+0x10f8>
   1564c:	ldr	r2, [r2, #32]
   15650:	mov	r1, r3
   15654:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15658:	bl	1758c <argp_error@@Base+0xd14>
   1565c:	subs	sl, r0, #0
   15660:	beq	15ac4 <argp_failure@@Base+0x6c8>
   15664:	ldr	r3, [fp, #-104]	; 0xffffff98
   15668:	tst	r3, #11
   1566c:	moveq	r3, #0
   15670:	streq	r3, [fp, #-108]	; 0xffffff94
   15674:	bne	15ad0 <argp_failure@@Base+0x6d4>
   15678:	ldr	r3, [fp, #-104]	; 0xffffff98
   1567c:	tst	r3, #3
   15680:	moveq	r4, #0
   15684:	bne	15b54 <argp_failure@@Base+0x758>
   15688:	ldr	r3, [fp, #-104]	; 0xffffff98
   1568c:	tst	r3, #16
   15690:	bne	15d50 <argp_failure@@Base+0x954>
   15694:	ldr	r3, [fp, #-104]	; 0xffffff98
   15698:	tst	r3, #4
   1569c:	bne	15d78 <argp_failure@@Base+0x97c>
   156a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   156a4:	tst	r3, #8
   156a8:	beq	16604 <argp_failure@@Base+0x1208>
   156ac:	ldr	r3, [fp, #-108]	; 0xffffff94
   156b0:	ldr	r3, [r3, #4]
   156b4:	cmp	r3, #0
   156b8:	beq	16604 <argp_failure@@Base+0x1208>
   156bc:	cmp	r4, #0
   156c0:	beq	156e8 <argp_failure@@Base+0x2ec>
   156c4:	ldr	r2, [sl, #28]
   156c8:	ldr	r3, [sl, #32]
   156cc:	cmp	r2, r3
   156d0:	bcs	15d94 <argp_failure@@Base+0x998>
   156d4:	ldr	r3, [sl, #28]
   156d8:	add	r2, r3, #1
   156dc:	str	r2, [sl, #28]
   156e0:	mov	r2, #10
   156e4:	strb	r2, [r3]
   156e8:	mov	r3, #0
   156ec:	str	r3, [fp, #-88]	; 0xffffffa8
   156f0:	str	r3, [fp, #-84]	; 0xffffffac
   156f4:	str	r3, [fp, #-80]	; 0xffffffb0
   156f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   156fc:	ldr	r2, [r3]
   15700:	str	r2, [fp, #-96]	; 0xffffffa0
   15704:	ldr	r3, [r3, #4]
   15708:	str	r3, [fp, #-120]	; 0xffffff88
   1570c:	cmp	r3, #0
   15710:	bne	1617c <argp_failure@@Base+0xd80>
   15714:	b	16600 <argp_failure@@Base+0x1204>
   15718:	ldr	r0, [pc, #3452]	; 1649c <argp_failure@@Base+0x10a0>
   1571c:	bl	1112c <getenv@plt>
   15720:	mov	r9, r0
   15724:	sub	ip, fp, #76	; 0x4c
   15728:	ldr	lr, [pc, #3524]	; 164f4 <argp_failure@@Base+0x10f8>
   1572c:	ldm	lr!, {r0, r1, r2, r3}
   15730:	stmia	ip!, {r0, r1, r2, r3}
   15734:	ldm	lr!, {r0, r1, r2, r3}
   15738:	stmia	ip!, {r0, r1, r2, r3}
   1573c:	ldm	lr, {r0, r1}
   15740:	stm	ip, {r0, r1}
   15744:	cmp	r9, #0
   15748:	ldrne	sl, [pc, #3408]	; 164a0 <argp_failure@@Base+0x10a4>
   1574c:	addne	r8, sl, #168	; 0xa8
   15750:	bne	159f4 <argp_failure@@Base+0x5f8>
   15754:	b	15644 <argp_failure@@Base+0x248>
   15758:	mov	r5, r3
   1575c:	mov	r9, r5
   15760:	mov	r3, r5
   15764:	ldrb	r0, [r3], #1
   15768:	lsl	r2, r0, #1
   1576c:	ldrh	r2, [r1, r2]
   15770:	tst	r2, #8192	; 0x2000
   15774:	bne	15758 <argp_failure@@Base+0x35c>
   15778:	tst	r2, #1024	; 0x400
   1577c:	beq	159ec <argp_failure@@Base+0x5f0>
   15780:	cmp	r0, #95	; 0x5f
   15784:	cmpne	r0, #45	; 0x2d
   15788:	moveq	r3, #1
   1578c:	movne	r3, #0
   15790:	lsl	r2, r2, #28
   15794:	orrs	r3, r3, r2, lsr #31
   15798:	beq	16714 <argp_failure@@Base+0x1318>
   1579c:	mov	r4, r5
   157a0:	ldrb	r3, [r4, #1]!
   157a4:	lsl	r2, r3, #1
   157a8:	ldrh	r2, [r1, r2]
   157ac:	lsl	r2, r2, #28
   157b0:	cmp	r3, #95	; 0x5f
   157b4:	cmpne	r3, #45	; 0x2d
   157b8:	moveq	r3, #1
   157bc:	movne	r3, #0
   157c0:	orrs	r3, r3, r2, lsr #31
   157c4:	bne	157a0 <argp_failure@@Base+0x3a4>
   157c8:	sub	r5, r4, r5
   157cc:	ldrb	r3, [r4]
   157d0:	lsl	r2, r3, #1
   157d4:	ldrh	r2, [r1, r2]
   157d8:	tst	r2, #8192	; 0x2000
   157dc:	beq	157f4 <argp_failure@@Base+0x3f8>
   157e0:	ldrb	r3, [r4, #1]!
   157e4:	lsl	r2, r3, #1
   157e8:	ldrh	r2, [r1, r2]
   157ec:	tst	r2, #8192	; 0x2000
   157f0:	bne	157e0 <argp_failure@@Base+0x3e4>
   157f4:	cmp	r3, #44	; 0x2c
   157f8:	cmpne	r3, #0
   157fc:	beq	1672c <argp_failure@@Base+0x1330>
   15800:	cmp	r3, #61	; 0x3d
   15804:	beq	1582c <argp_failure@@Base+0x430>
   15808:	ldrb	r3, [r4]
   1580c:	lsl	r3, r3, #1
   15810:	ldrh	r3, [r1, r3]
   15814:	tst	r3, #2048	; 0x800
   15818:	bne	158ac <argp_failure@@Base+0x4b0>
   1581c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15820:	str	r3, [fp, #-96]	; 0xffffffa0
   15824:	str	r3, [fp, #-116]	; 0xffffff8c
   15828:	b	16740 <argp_failure@@Base+0x1344>
   1582c:	add	r2, r4, #1
   15830:	ldrb	r3, [r4, #1]
   15834:	lsl	r3, r3, #1
   15838:	ldrh	r3, [r1, r3]
   1583c:	tst	r3, #8192	; 0x2000
   15840:	beq	16724 <argp_failure@@Base+0x1328>
   15844:	ldrb	r3, [r2, #1]!
   15848:	lsl	r3, r3, #1
   1584c:	ldrh	r3, [r1, r3]
   15850:	tst	r3, #8192	; 0x2000
   15854:	bne	15844 <argp_failure@@Base+0x448>
   15858:	mov	r4, r2
   1585c:	b	15808 <argp_failure@@Base+0x40c>
   15860:	ldrb	r3, [r9, #1]
   15864:	cmp	r3, #111	; 0x6f
   15868:	movne	r3, #1
   1586c:	strne	r3, [fp, #-96]	; 0xffffffa0
   15870:	strne	r3, [fp, #-116]	; 0xffffff8c
   15874:	bne	16740 <argp_failure@@Base+0x1344>
   15878:	ldrb	r3, [r9, #2]
   1587c:	cmp	r3, #45	; 0x2d
   15880:	movne	r3, #1
   15884:	strne	r3, [fp, #-96]	; 0xffffffa0
   15888:	strne	r3, [fp, #-116]	; 0xffffff8c
   1588c:	bne	16740 <argp_failure@@Base+0x1344>
   15890:	add	r9, r9, #3
   15894:	sub	r5, r5, #3
   15898:	ldr	r3, [fp, #-108]	; 0xffffff94
   1589c:	str	r3, [fp, #-116]	; 0xffffff8c
   158a0:	mov	r3, #1
   158a4:	str	r3, [fp, #-96]	; 0xffffffa0
   158a8:	b	16740 <argp_failure@@Base+0x1344>
   158ac:	mov	r2, #10
   158b0:	mov	r1, #0
   158b4:	mov	r0, r4
   158b8:	bl	11000 <strtol@plt>
   158bc:	str	r0, [fp, #-116]	; 0xffffff8c
   158c0:	ldr	r2, [r6]
   158c4:	ldrb	r3, [r4]
   158c8:	lsl	r3, r3, #1
   158cc:	ldrh	r3, [r2, r3]
   158d0:	tst	r3, #2048	; 0x800
   158d4:	beq	158ec <argp_failure@@Base+0x4f0>
   158d8:	ldrb	r3, [r4, #1]!
   158dc:	lsl	r3, r3, #1
   158e0:	ldrh	r3, [r2, r3]
   158e4:	tst	r3, #2048	; 0x800
   158e8:	bne	158d8 <argp_failure@@Base+0x4dc>
   158ec:	ldrb	r3, [r4]
   158f0:	lsl	r3, r3, #1
   158f4:	ldrh	r3, [r2, r3]
   158f8:	tst	r3, #8192	; 0x2000
   158fc:	beq	15920 <argp_failure@@Base+0x524>
   15900:	ldrb	r3, [r4, #1]!
   15904:	lsl	r3, r3, #1
   15908:	ldrh	r3, [r2, r3]
   1590c:	tst	r3, #8192	; 0x2000
   15910:	bne	15900 <argp_failure@@Base+0x504>
   15914:	ldr	r3, [fp, #-108]	; 0xffffff94
   15918:	str	r3, [fp, #-96]	; 0xffffffa0
   1591c:	b	16740 <argp_failure@@Base+0x1344>
   15920:	ldr	r3, [fp, #-108]	; 0xffffff94
   15924:	str	r3, [fp, #-96]	; 0xffffffa0
   15928:	b	16740 <argp_failure@@Base+0x1344>
   1592c:	str	r9, [sp, #4]
   15930:	str	r7, [sp]
   15934:	ldr	r3, [pc, #2920]	; 164a4 <argp_failure@@Base+0x10a8>
   15938:	mov	r2, #0
   1593c:	mov	r1, r2
   15940:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15944:	bl	153fc <argp_failure@@Base>
   15948:	b	159b0 <argp_failure@@Base+0x5b4>
   1594c:	add	r6, r6, #16
   15950:	cmp	r6, r8
   15954:	beq	159cc <argp_failure@@Base+0x5d0>
   15958:	mov	r0, r6
   1595c:	bl	111bc <strlen@plt>
   15960:	mov	r7, r0
   15964:	cmp	r0, r5
   15968:	bne	1594c <argp_failure@@Base+0x550>
   1596c:	mov	r2, r5
   15970:	mov	r1, r6
   15974:	mov	r0, r9
   15978:	bl	112b8 <strncmp@plt>
   1597c:	cmp	r0, #0
   15980:	bne	1594c <argp_failure@@Base+0x550>
   15984:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15988:	cmp	r3, #0
   1598c:	beq	1599c <argp_failure@@Base+0x5a0>
   15990:	ldrb	r3, [r6, #14]
   15994:	cmp	r3, #0
   15998:	beq	1592c <argp_failure@@Base+0x530>
   1599c:	ldrb	r3, [r6, #15]
   159a0:	sub	r2, fp, #36	; 0x24
   159a4:	add	r3, r2, r3
   159a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   159ac:	str	r2, [r3, #-40]	; 0xffffffd8
   159b0:	cmp	r6, r8
   159b4:	beq	159cc <argp_failure@@Base+0x5d0>
   159b8:	ldrb	r3, [r4]
   159bc:	cmp	r3, #44	; 0x2c
   159c0:	addeq	r9, r4, #1
   159c4:	movne	r9, r4
   159c8:	b	159f4 <argp_failure@@Base+0x5f8>
   159cc:	str	r9, [sp, #4]
   159d0:	str	r5, [sp]
   159d4:	ldr	r3, [pc, #2764]	; 164a8 <argp_failure@@Base+0x10ac>
   159d8:	mov	r2, #0
   159dc:	mov	r1, r2
   159e0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   159e4:	bl	153fc <argp_failure@@Base>
   159e8:	b	159b8 <argp_failure@@Base+0x5bc>
   159ec:	cmp	r0, #0
   159f0:	bne	15a14 <argp_failure@@Base+0x618>
   159f4:	ldrb	r3, [r9]
   159f8:	cmp	r3, #0
   159fc:	beq	15a2c <argp_failure@@Base+0x630>
   15a00:	bl	111a4 <__ctype_b_loc@plt>
   15a04:	mov	r6, r0
   15a08:	ldr	r1, [r0]
   15a0c:	mov	r5, r9
   15a10:	b	1575c <argp_failure@@Base+0x360>
   15a14:	str	r5, [sp]
   15a18:	ldr	r3, [pc, #2700]	; 164ac <argp_failure@@Base+0x10b0>
   15a1c:	mov	r2, #0
   15a20:	mov	r1, r2
   15a24:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15a28:	bl	153fc <argp_failure@@Base>
   15a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a30:	ldr	r3, [pc, #2680]	; 164b0 <argp_failure@@Base+0x10b4>
   15a34:	add	r1, r3, #144	; 0x90
   15a38:	add	r3, r3, #16
   15a3c:	cmp	r3, r1
   15a40:	beq	15a94 <argp_failure@@Base+0x698>
   15a44:	ldrb	r2, [r3, #14]
   15a48:	cmp	r2, #0
   15a4c:	bne	15a38 <argp_failure@@Base+0x63c>
   15a50:	ldrb	r2, [r3, #15]
   15a54:	cmp	r2, #32
   15a58:	beq	15a38 <argp_failure@@Base+0x63c>
   15a5c:	sub	ip, fp, #36	; 0x24
   15a60:	add	r2, ip, r2
   15a64:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15a68:	cmp	r2, r0
   15a6c:	blt	15a38 <argp_failure@@Base+0x63c>
   15a70:	str	r3, [sp, #4]
   15a74:	ldr	r3, [pc, #2616]	; 164b4 <argp_failure@@Base+0x10b8>
   15a78:	str	r3, [sp]
   15a7c:	ldr	r3, [pc, #2612]	; 164b8 <argp_failure@@Base+0x10bc>
   15a80:	mov	r2, #0
   15a84:	mov	r1, r2
   15a88:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15a8c:	bl	153fc <argp_failure@@Base>
   15a90:	b	15644 <argp_failure@@Base+0x248>
   15a94:	ldr	r4, [pc, #2648]	; 164f4 <argp_failure@@Base+0x10f8>
   15a98:	mov	ip, r4
   15a9c:	sub	lr, fp, #76	; 0x4c
   15aa0:	ldm	lr!, {r0, r1, r2, r3}
   15aa4:	stmia	ip!, {r0, r1, r2, r3}
   15aa8:	ldm	lr!, {r0, r1, r2, r3}
   15aac:	stmia	ip!, {r0, r1, r2, r3}
   15ab0:	ldm	lr, {r0, r1}
   15ab4:	stm	ip, {r0, r1}
   15ab8:	mov	r3, #1
   15abc:	str	r3, [r4, #36]	; 0x24
   15ac0:	b	15644 <argp_failure@@Base+0x248>
   15ac4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15ac8:	bl	110d8 <funlockfile@plt>
   15acc:	b	16690 <argp_failure@@Base+0x1294>
   15ad0:	mov	r1, #0
   15ad4:	ldr	r0, [fp, #-112]	; 0xffffff90
   15ad8:	bl	14d40 <argp_parse@@Base+0x2784>
   15adc:	str	r0, [fp, #-108]	; 0xffffff94
   15ae0:	ldr	r1, [pc, #2516]	; 164bc <argp_failure@@Base+0x10c0>
   15ae4:	bl	13c48 <argp_parse@@Base+0x168c>
   15ae8:	cmp	r0, #0
   15aec:	mvnne	r3, #0
   15af0:	strne	r3, [r0, #12]
   15af4:	ldr	r1, [pc, #2500]	; 164c0 <argp_failure@@Base+0x10c4>
   15af8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15afc:	bl	13c48 <argp_parse@@Base+0x168c>
   15b00:	cmp	r0, #0
   15b04:	mvnne	r3, #0
   15b08:	strne	r3, [r0, #12]
   15b0c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b10:	ldr	r3, [r0, #4]
   15b14:	cmp	r3, #0
   15b18:	beq	15678 <argp_failure@@Base+0x27c>
   15b1c:	ldr	r2, [r0]
   15b20:	mov	r3, #0
   15b24:	str	r3, [r2, #24]
   15b28:	add	r3, r3, #1
   15b2c:	add	r2, r2, #28
   15b30:	ldr	r1, [r0, #4]
   15b34:	cmp	r3, r1
   15b38:	bcc	15b24 <argp_failure@@Base+0x728>
   15b3c:	ldr	r3, [pc, #2432]	; 164c4 <argp_failure@@Base+0x10c8>
   15b40:	mov	r2, #28
   15b44:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b48:	ldr	r0, [r0]
   15b4c:	bl	112ac <qsort@plt>
   15b50:	b	15678 <argp_failure@@Base+0x27c>
   15b54:	ldr	r0, [fp, #-112]	; 0xffffff90
   15b58:	bl	13ce0 <argp_parse@@Base+0x1724>
   15b5c:	mov	r2, r0
   15b60:	add	r3, r0, #14
   15b64:	bic	r3, r3, #7
   15b68:	sub	sp, sp, r3
   15b6c:	add	r8, sp, #8
   15b70:	mov	r1, #0
   15b74:	mov	r0, r8
   15b78:	bl	11210 <memset@plt>
   15b7c:	mov	r5, #1
   15b80:	ldr	r4, [pc, #2412]	; 164f4 <argp_failure@@Base+0x10f8>
   15b84:	ldr	r9, [pc, #2364]	; 164c8 <argp_failure@@Base+0x10cc>
   15b88:	str	r8, [fp, #-96]	; 0xffffffa0
   15b8c:	ldr	r8, [fp, #-104]	; 0xffffff98
   15b90:	b	15c40 <argp_failure@@Base+0x844>
   15b94:	mov	r0, sl
   15b98:	bl	17604 <argp_error@@Base+0xd8c>
   15b9c:	b	15c5c <argp_failure@@Base+0x860>
   15ba0:	mov	r0, sl
   15ba4:	bl	17604 <argp_error@@Base+0xd8c>
   15ba8:	b	15ca4 <argp_failure@@Base+0x8a8>
   15bac:	mov	r1, sl
   15bb0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bb4:	bl	13a38 <argp_parse@@Base+0x147c>
   15bb8:	orr	r8, r8, #2
   15bbc:	str	sl, [sp]
   15bc0:	mov	r3, #1
   15bc4:	sub	r2, fp, #76	; 0x4c
   15bc8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15bcc:	ldr	r0, [fp, #-112]	; 0xffffff90
   15bd0:	bl	13f60 <argp_parse@@Base+0x19a4>
   15bd4:	mov	r6, r0
   15bd8:	ldr	r3, [sl, #28]
   15bdc:	ldr	r2, [sl, #24]
   15be0:	sub	r3, r3, r2
   15be4:	ldr	r2, [sl, #16]
   15be8:	cmp	r3, r2
   15bec:	bhi	15d14 <argp_failure@@Base+0x918>
   15bf0:	str	r7, [sl, #12]
   15bf4:	ldr	r3, [sl, #28]
   15bf8:	ldr	r2, [sl, #24]
   15bfc:	sub	r3, r3, r2
   15c00:	ldr	r2, [sl, #16]
   15c04:	cmp	r3, r2
   15c08:	bhi	15d20 <argp_failure@@Base+0x924>
   15c0c:	str	r5, [sl, #4]
   15c10:	ldr	r2, [sl, #28]
   15c14:	ldr	r3, [sl, #32]
   15c18:	cmp	r2, r3
   15c1c:	bcs	15d2c <argp_failure@@Base+0x930>
   15c20:	ldr	r3, [sl, #28]
   15c24:	add	r2, r3, #1
   15c28:	str	r2, [sl, #28]
   15c2c:	mov	r2, #10
   15c30:	strb	r2, [r3]
   15c34:	mov	r5, #0
   15c38:	cmp	r6, r5
   15c3c:	beq	15d44 <argp_failure@@Base+0x948>
   15c40:	ldr	r6, [r4, #28]
   15c44:	ldr	r3, [sl, #28]
   15c48:	ldr	r2, [sl, #24]
   15c4c:	sub	r3, r3, r2
   15c50:	ldr	r2, [sl, #16]
   15c54:	cmp	r3, r2
   15c58:	bhi	15b94 <argp_failure@@Base+0x798>
   15c5c:	ldr	r7, [sl, #12]
   15c60:	str	r6, [sl, #12]
   15c64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c68:	str	r3, [fp, #-76]	; 0xffffffb4
   15c6c:	cmp	r5, #0
   15c70:	ldr	r3, [fp, #4]
   15c74:	ldrne	r2, [pc, #2128]	; 164cc <argp_failure@@Base+0x10d0>
   15c78:	ldreq	r2, [pc, #2128]	; 164d0 <argp_failure@@Base+0x10d4>
   15c7c:	mov	r1, r9
   15c80:	mov	r0, sl
   15c84:	bl	17c98 <argp_error@@Base+0x1420>
   15c88:	ldr	r6, [r4, #28]
   15c8c:	ldr	r3, [sl, #28]
   15c90:	ldr	r2, [sl, #24]
   15c94:	sub	r3, r3, r2
   15c98:	ldr	r2, [sl, #16]
   15c9c:	cmp	r3, r2
   15ca0:	bhi	15ba0 <argp_failure@@Base+0x7a4>
   15ca4:	ldr	r5, [sl, #4]
   15ca8:	str	r6, [sl, #4]
   15cac:	tst	r8, #2
   15cb0:	beq	15bac <argp_failure@@Base+0x7b0>
   15cb4:	ldr	r3, [fp, #-108]	; 0xffffff94
   15cb8:	ldr	r3, [r3, #4]
   15cbc:	cmp	r3, #0
   15cc0:	beq	15bbc <argp_failure@@Base+0x7c0>
   15cc4:	ldr	r3, [sl, #28]
   15cc8:	add	r3, r3, #12
   15ccc:	ldr	r2, [sl, #32]
   15cd0:	cmp	r2, r3
   15cd4:	bcs	15cec <argp_failure@@Base+0x8f0>
   15cd8:	mov	r1, #12
   15cdc:	mov	r0, sl
   15ce0:	bl	17ba8 <argp_error@@Base+0x1330>
   15ce4:	cmp	r0, #0
   15ce8:	beq	15bbc <argp_failure@@Base+0x7c0>
   15cec:	ldr	ip, [sl, #28]
   15cf0:	ldr	r3, [pc, #2012]	; 164d4 <argp_failure@@Base+0x10d8>
   15cf4:	ldm	r3!, {r0, r1, r2}
   15cf8:	str	r0, [ip]
   15cfc:	str	r1, [ip, #4]
   15d00:	str	r2, [ip, #8]
   15d04:	ldr	r3, [sl, #28]
   15d08:	add	r3, r3, #12
   15d0c:	str	r3, [sl, #28]
   15d10:	b	15bbc <argp_failure@@Base+0x7c0>
   15d14:	mov	r0, sl
   15d18:	bl	17604 <argp_error@@Base+0xd8c>
   15d1c:	b	15bf0 <argp_failure@@Base+0x7f4>
   15d20:	mov	r0, sl
   15d24:	bl	17604 <argp_error@@Base+0xd8c>
   15d28:	b	15c0c <argp_failure@@Base+0x810>
   15d2c:	mov	r1, #1
   15d30:	mov	r0, sl
   15d34:	bl	17ba8 <argp_error@@Base+0x1330>
   15d38:	cmp	r0, #0
   15d3c:	beq	15c34 <argp_failure@@Base+0x838>
   15d40:	b	15c20 <argp_failure@@Base+0x824>
   15d44:	str	r8, [fp, #-104]	; 0xffffff98
   15d48:	mov	r4, #1
   15d4c:	b	15688 <argp_failure@@Base+0x28c>
   15d50:	str	sl, [sp, #4]
   15d54:	mov	r3, #1
   15d58:	str	r3, [sp]
   15d5c:	mov	r3, #0
   15d60:	mov	r2, r3
   15d64:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15d68:	ldr	r0, [fp, #-112]	; 0xffffff90
   15d6c:	bl	144b8 <argp_parse@@Base+0x1efc>
   15d70:	orr	r4, r4, r0
   15d74:	b	15694 <argp_failure@@Base+0x298>
   15d78:	ldr	r3, [fp, #4]
   15d7c:	mov	r2, r3
   15d80:	ldr	r1, [pc, #1872]	; 164d8 <argp_failure@@Base+0x10dc>
   15d84:	mov	r0, sl
   15d88:	bl	17c98 <argp_error@@Base+0x1420>
   15d8c:	mov	r4, #1
   15d90:	b	156a0 <argp_failure@@Base+0x2a4>
   15d94:	mov	r1, #1
   15d98:	mov	r0, sl
   15d9c:	bl	17ba8 <argp_error@@Base+0x1330>
   15da0:	cmp	r0, #0
   15da4:	beq	156e8 <argp_failure@@Base+0x2ec>
   15da8:	b	156d4 <argp_failure@@Base+0x2d8>
   15dac:	mov	r0, sl
   15db0:	bl	17604 <argp_error@@Base+0xd8c>
   15db4:	b	161a0 <argp_failure@@Base+0xda4>
   15db8:	add	r3, r3, #24
   15dbc:	subs	r2, r2, #1
   15dc0:	beq	15de4 <argp_failure@@Base+0x9e8>
   15dc4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15dc8:	cmp	r1, #0
   15dcc:	beq	15db8 <argp_failure@@Base+0x9bc>
   15dd0:	ldr	r1, [r3, #-12]
   15dd4:	tst	r1, #2
   15dd8:	bne	15db8 <argp_failure@@Base+0x9bc>
   15ddc:	mov	r3, #1
   15de0:	str	r3, [fp, #-116]	; 0xffffff8c
   15de4:	ldr	r3, [pc, #1800]	; 164f4 <argp_failure@@Base+0x10f8>
   15de8:	ldr	r4, [r3, #8]
   15dec:	ldr	r3, [sl, #28]
   15df0:	ldr	r2, [sl, #24]
   15df4:	sub	r3, r3, r2
   15df8:	ldr	r2, [sl, #16]
   15dfc:	cmp	r3, r2
   15e00:	bhi	15e20 <argp_failure@@Base+0xa24>
   15e04:	str	r4, [sl, #12]
   15e08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e0c:	ldr	r5, [r3, #4]
   15e10:	cmp	r5, #0
   15e14:	beq	15f1c <argp_failure@@Base+0xb20>
   15e18:	mov	r4, r8
   15e1c:	b	16760 <argp_failure@@Base+0x1364>
   15e20:	mov	r0, sl
   15e24:	bl	17604 <argp_error@@Base+0xd8c>
   15e28:	b	15e04 <argp_failure@@Base+0xa08>
   15e2c:	tst	r6, #2
   15e30:	beq	15e3c <argp_failure@@Base+0xa40>
   15e34:	add	r9, r9, #1
   15e38:	b	16754 <argp_failure@@Base+0x1358>
   15e3c:	sub	r1, fp, #76	; 0x4c
   15e40:	ldr	r3, [pc, #1708]	; 164f4 <argp_failure@@Base+0x10f8>
   15e44:	ldr	r0, [r3, #8]
   15e48:	bl	14334 <argp_parse@@Base+0x1d78>
   15e4c:	ldr	r2, [sl, #28]
   15e50:	ldr	r3, [sl, #32]
   15e54:	cmp	r2, r3
   15e58:	bcs	15ed8 <argp_failure@@Base+0xadc>
   15e5c:	ldr	r3, [sl, #28]
   15e60:	add	r2, r3, #1
   15e64:	str	r2, [sl, #28]
   15e68:	mov	r2, #45	; 0x2d
   15e6c:	strb	r2, [r3]
   15e70:	ldrb	r6, [r9]
   15e74:	ldr	r2, [sl, #28]
   15e78:	ldr	r3, [sl, #32]
   15e7c:	cmp	r2, r3
   15e80:	bcs	15ef0 <argp_failure@@Base+0xaf4>
   15e84:	ldr	r3, [sl, #28]
   15e88:	add	r2, r3, #1
   15e8c:	str	r2, [sl, #28]
   15e90:	strb	r6, [r3]
   15e94:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15e98:	cmp	r3, #0
   15e9c:	beq	15eb0 <argp_failure@@Base+0xab4>
   15ea0:	ldr	r3, [pc, #1612]	; 164f4 <argp_failure@@Base+0x10f8>
   15ea4:	ldr	r3, [r3]
   15ea8:	cmp	r3, #0
   15eac:	beq	15f08 <argp_failure@@Base+0xb0c>
   15eb0:	ldr	r2, [r8, #8]
   15eb4:	cmp	r2, #0
   15eb8:	beq	15e34 <argp_failure@@Base+0xa38>
   15ebc:	ldr	r3, [r8, #12]
   15ec0:	tst	r3, #1
   15ec4:	ldrne	r1, [pc, #1552]	; 164dc <argp_failure@@Base+0x10e0>
   15ec8:	ldreq	r1, [pc, #1552]	; 164e0 <argp_failure@@Base+0x10e4>
   15ecc:	mov	r0, sl
   15ed0:	bl	17c98 <argp_error@@Base+0x1420>
   15ed4:	b	15e34 <argp_failure@@Base+0xa38>
   15ed8:	mov	r1, #1
   15edc:	mov	r0, sl
   15ee0:	bl	17ba8 <argp_error@@Base+0x1330>
   15ee4:	cmp	r0, #0
   15ee8:	beq	15e70 <argp_failure@@Base+0xa74>
   15eec:	b	15e5c <argp_failure@@Base+0xa60>
   15ef0:	mov	r1, #1
   15ef4:	mov	r0, sl
   15ef8:	bl	17ba8 <argp_error@@Base+0x1330>
   15efc:	cmp	r0, #0
   15f00:	beq	15e94 <argp_failure@@Base+0xa98>
   15f04:	b	15e84 <argp_failure@@Base+0xa88>
   15f08:	ldr	r3, [r8, #8]
   15f0c:	cmp	r3, #0
   15f10:	movne	r3, #1
   15f14:	strne	r3, [fp, #-80]	; 0xffffffb0
   15f18:	b	15e34 <argp_failure@@Base+0xa38>
   15f1c:	ldr	r3, [r8, #12]
   15f20:	tst	r3, #8
   15f24:	beq	16000 <argp_failure@@Base+0xc04>
   15f28:	ldr	r3, [pc, #1476]	; 164f4 <argp_failure@@Base+0x10f8>
   15f2c:	ldr	r4, [r3, #16]
   15f30:	ldr	r3, [sl, #28]
   15f34:	ldr	r2, [sl, #24]
   15f38:	sub	r3, r3, r2
   15f3c:	ldr	r2, [sl, #16]
   15f40:	cmp	r3, r2
   15f44:	bhi	15f64 <argp_failure@@Base+0xb68>
   15f48:	str	r4, [sl, #12]
   15f4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f50:	ldr	r5, [r3, #4]
   15f54:	cmp	r5, #0
   15f58:	beq	160b4 <argp_failure@@Base+0xcb8>
   15f5c:	add	r4, r8, #24
   15f60:	b	15f98 <argp_failure@@Base+0xb9c>
   15f64:	mov	r0, sl
   15f68:	bl	17604 <argp_error@@Base+0xd8c>
   15f6c:	b	15f48 <argp_failure@@Base+0xb4c>
   15f70:	mov	r2, r6
   15f74:	mov	r1, r7
   15f78:	ldr	r0, [sl, #28]
   15f7c:	bl	11084 <memcpy@plt>
   15f80:	ldr	r3, [sl, #28]
   15f84:	add	r6, r3, r6
   15f88:	str	r6, [sl, #28]
   15f8c:	add	r4, r4, #24
   15f90:	subs	r5, r5, #1
   15f94:	beq	160b4 <argp_failure@@Base+0xcb8>
   15f98:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15f9c:	cmp	r3, #0
   15fa0:	beq	15f8c <argp_failure@@Base+0xb90>
   15fa4:	ldr	r3, [r4, #-12]
   15fa8:	tst	r3, #2
   15fac:	bne	15f8c <argp_failure@@Base+0xb90>
   15fb0:	sub	r1, fp, #76	; 0x4c
   15fb4:	ldr	r3, [pc, #1336]	; 164f4 <argp_failure@@Base+0x10f8>
   15fb8:	ldr	r0, [r3, #16]
   15fbc:	bl	14334 <argp_parse@@Base+0x1d78>
   15fc0:	ldr	r7, [r4, #-24]	; 0xffffffe8
   15fc4:	mov	r0, r7
   15fc8:	bl	111bc <strlen@plt>
   15fcc:	subs	r6, r0, #0
   15fd0:	beq	15f8c <argp_failure@@Base+0xb90>
   15fd4:	ldr	r3, [sl, #28]
   15fd8:	add	r3, r3, r6
   15fdc:	ldr	r2, [sl, #32]
   15fe0:	cmp	r2, r3
   15fe4:	bcs	15f70 <argp_failure@@Base+0xb74>
   15fe8:	mov	r1, r6
   15fec:	mov	r0, sl
   15ff0:	bl	17ba8 <argp_error@@Base+0x1330>
   15ff4:	cmp	r0, #0
   15ff8:	beq	15f8c <argp_failure@@Base+0xb90>
   15ffc:	b	15f70 <argp_failure@@Base+0xb74>
   16000:	ldr	r3, [pc, #1260]	; 164f4 <argp_failure@@Base+0x10f8>
   16004:	ldr	r4, [r3, #12]
   16008:	ldr	r3, [sl, #28]
   1600c:	ldr	r2, [sl, #24]
   16010:	sub	r3, r3, r2
   16014:	ldr	r2, [sl, #16]
   16018:	cmp	r3, r2
   1601c:	bhi	1603c <argp_failure@@Base+0xc40>
   16020:	str	r4, [sl, #12]
   16024:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16028:	ldr	r5, [r3, #4]
   1602c:	cmp	r5, #0
   16030:	beq	160b4 <argp_failure@@Base+0xcb8>
   16034:	add	r4, r8, #24
   16038:	b	16054 <argp_failure@@Base+0xc58>
   1603c:	mov	r0, sl
   16040:	bl	17604 <argp_error@@Base+0xd8c>
   16044:	b	16020 <argp_failure@@Base+0xc24>
   16048:	add	r4, r4, #24
   1604c:	subs	r5, r5, #1
   16050:	beq	160b4 <argp_failure@@Base+0xcb8>
   16054:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16058:	cmp	r3, #0
   1605c:	beq	16048 <argp_failure@@Base+0xc4c>
   16060:	ldr	r3, [r4, #-12]
   16064:	tst	r3, #2
   16068:	bne	16048 <argp_failure@@Base+0xc4c>
   1606c:	sub	r1, fp, #76	; 0x4c
   16070:	ldr	r3, [pc, #1148]	; 164f4 <argp_failure@@Base+0x10f8>
   16074:	ldr	r0, [r3, #12]
   16078:	bl	14334 <argp_parse@@Base+0x1d78>
   1607c:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16080:	ldr	r1, [pc, #1116]	; 164e4 <argp_failure@@Base+0x10e8>
   16084:	mov	r0, sl
   16088:	bl	17c98 <argp_error@@Base+0x1420>
   1608c:	ldr	r2, [r8, #8]
   16090:	cmp	r2, #0
   16094:	beq	16048 <argp_failure@@Base+0xc4c>
   16098:	ldr	r3, [r8, #12]
   1609c:	tst	r3, #1
   160a0:	ldrne	r1, [pc, #1088]	; 164e8 <argp_failure@@Base+0x10ec>
   160a4:	ldreq	r1, [pc, #1088]	; 164ec <argp_failure@@Base+0x10f0>
   160a8:	mov	r0, sl
   160ac:	bl	17c98 <argp_error@@Base+0x1420>
   160b0:	b	16048 <argp_failure@@Base+0xc4c>
   160b4:	ldr	r3, [sl, #28]
   160b8:	ldr	r2, [sl, #24]
   160bc:	sub	r3, r3, r2
   160c0:	ldr	r2, [sl, #16]
   160c4:	cmp	r3, r2
   160c8:	bhi	16208 <argp_failure@@Base+0xe0c>
   160cc:	mov	r3, #0
   160d0:	str	r3, [sl, #4]
   160d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160d8:	cmp	r3, #0
   160dc:	beq	1622c <argp_failure@@Base+0xe30>
   160e0:	ldr	r3, [r8, #12]
   160e4:	tst	r3, #8
   160e8:	bne	16114 <argp_failure@@Base+0xd18>
   160ec:	ldr	r4, [r8, #4]
   160f0:	sub	r3, r4, #1
   160f4:	cmp	r3, #254	; 0xfe
   160f8:	bhi	16114 <argp_failure@@Base+0xd18>
   160fc:	bl	111a4 <__ctype_b_loc@plt>
   16100:	ldr	r3, [r0]
   16104:	lsl	r4, r4, #1
   16108:	ldrh	r3, [r3, r4]
   1610c:	tst	r3, #16384	; 0x4000
   16110:	bne	16120 <argp_failure@@Base+0xd24>
   16114:	ldr	r3, [r8]
   16118:	cmp	r3, #0
   1611c:	beq	16214 <argp_failure@@Base+0xe18>
   16120:	ldr	r3, [sl, #28]
   16124:	ldr	r2, [sl, #24]
   16128:	sub	r3, r3, r2
   1612c:	ldr	r2, [sl, #16]
   16130:	cmp	r3, r2
   16134:	bhi	16484 <argp_failure@@Base+0x1088>
   16138:	ldr	r3, [fp, #-124]	; 0xffffff84
   1613c:	str	r3, [sl, #4]
   16140:	ldr	r3, [sl, #28]
   16144:	ldr	r2, [sl, #24]
   16148:	sub	r3, r3, r2
   1614c:	ldr	r2, [sl, #16]
   16150:	cmp	r3, r2
   16154:	bhi	16490 <argp_failure@@Base+0x1094>
   16158:	ldr	r3, [fp, #-128]	; 0xffffff80
   1615c:	str	r3, [sl, #12]
   16160:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16164:	add	r3, r3, #28
   16168:	str	r3, [fp, #-96]	; 0xffffffa0
   1616c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16170:	subs	r3, r3, #1
   16174:	str	r3, [fp, #-120]	; 0xffffff88
   16178:	beq	16508 <argp_failure@@Base+0x110c>
   1617c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16180:	ldr	r8, [r3]
   16184:	ldr	r9, [r3, #8]
   16188:	ldr	r3, [sl, #28]
   1618c:	ldr	r2, [sl, #24]
   16190:	sub	r3, r3, r2
   16194:	ldr	r2, [sl, #16]
   16198:	cmp	r3, r2
   1619c:	bhi	15dac <argp_failure@@Base+0x9b0>
   161a0:	ldr	r3, [sl, #4]
   161a4:	str	r3, [fp, #-124]	; 0xffffff84
   161a8:	mov	r3, #0
   161ac:	str	r3, [sl, #4]
   161b0:	ldr	r3, [sl, #12]
   161b4:	str	r3, [fp, #-128]	; 0xffffff80
   161b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   161bc:	str	r2, [fp, #-76]	; 0xffffffb4
   161c0:	str	sl, [fp, #-72]	; 0xffffffb8
   161c4:	sub	r3, fp, #88	; 0x58
   161c8:	str	r3, [fp, #-68]	; 0xffffffbc
   161cc:	mov	r3, #1
   161d0:	str	r3, [fp, #-64]	; 0xffffffc0
   161d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   161d8:	str	r3, [fp, #-60]	; 0xffffffc4
   161dc:	ldr	r3, [r8, #12]
   161e0:	ands	r3, r3, #8
   161e4:	str	r3, [fp, #-116]	; 0xffffff8c
   161e8:	movne	r3, #0
   161ec:	strne	r3, [fp, #-116]	; 0xffffff8c
   161f0:	bne	15de4 <argp_failure@@Base+0x9e8>
   161f4:	ldr	r2, [r2, #4]
   161f8:	cmp	r2, #0
   161fc:	beq	15de4 <argp_failure@@Base+0x9e8>
   16200:	add	r3, r8, #24
   16204:	b	15dc4 <argp_failure@@Base+0x9c8>
   16208:	mov	r0, sl
   1620c:	bl	17604 <argp_error@@Base+0xd8c>
   16210:	b	160cc <argp_failure@@Base+0xcd0>
   16214:	sub	r2, fp, #76	; 0x4c
   16218:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1621c:	ldr	r1, [r3, #20]
   16220:	ldr	r0, [r8, #16]
   16224:	bl	14150 <argp_parse@@Base+0x1b94>
   16228:	b	16384 <argp_failure@@Base+0xf88>
   1622c:	ldr	r7, [r8, #16]
   16230:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16234:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16238:	ldr	r2, [r2, #20]
   1623c:	ldr	r1, [r8, #4]
   16240:	mov	r0, r7
   16244:	bl	13f1c <argp_parse@@Base+0x1960>
   16248:	subs	r4, r0, #0
   1624c:	beq	16340 <argp_failure@@Base+0xf44>
   16250:	ldrb	r3, [r4]
   16254:	cmp	r3, #0
   16258:	beq	16338 <argp_failure@@Base+0xf3c>
   1625c:	ldr	r3, [sl, #28]
   16260:	ldr	r2, [sl, #24]
   16264:	sub	r3, r3, r2
   16268:	ldr	r2, [sl, #16]
   1626c:	cmp	r3, r2
   16270:	bhi	16390 <argp_failure@@Base+0xf94>
   16274:	ldr	r5, [sl, #20]
   16278:	bic	r5, r5, r5, asr #31
   1627c:	ldr	r3, [pc, #624]	; 164f4 <argp_failure@@Base+0x10f8>
   16280:	ldr	r6, [r3, #20]
   16284:	str	r6, [sl, #4]
   16288:	ldr	r3, [pc, #612]	; 164f4 <argp_failure@@Base+0x10f8>
   1628c:	ldr	r6, [r3, #20]
   16290:	ldr	r3, [sl, #28]
   16294:	ldr	r2, [sl, #24]
   16298:	sub	r3, r3, r2
   1629c:	ldr	r2, [sl, #16]
   162a0:	cmp	r3, r2
   162a4:	bhi	163cc <argp_failure@@Base+0xfd0>
   162a8:	str	r6, [sl, #12]
   162ac:	ldr	r3, [pc, #576]	; 164f4 <argp_failure@@Base+0x10f8>
   162b0:	ldr	r1, [r3, #20]
   162b4:	add	r3, r1, #3
   162b8:	cmp	r3, r5
   162bc:	bcs	163f0 <argp_failure@@Base+0xff4>
   162c0:	ldr	r2, [sl, #28]
   162c4:	ldr	r3, [sl, #32]
   162c8:	cmp	r2, r3
   162cc:	bcs	163d8 <argp_failure@@Base+0xfdc>
   162d0:	ldr	r3, [sl, #28]
   162d4:	add	r2, r3, #1
   162d8:	str	r2, [sl, #28]
   162dc:	mov	r2, #10
   162e0:	strb	r2, [r3]
   162e4:	mov	r0, r4
   162e8:	bl	111bc <strlen@plt>
   162ec:	subs	r5, r0, #0
   162f0:	beq	16338 <argp_failure@@Base+0xf3c>
   162f4:	ldr	r3, [sl, #28]
   162f8:	add	r3, r3, r5
   162fc:	ldr	r2, [sl, #32]
   16300:	cmp	r2, r3
   16304:	bcs	1631c <argp_failure@@Base+0xf20>
   16308:	mov	r1, r5
   1630c:	mov	r0, sl
   16310:	bl	17ba8 <argp_error@@Base+0x1330>
   16314:	cmp	r0, #0
   16318:	beq	16338 <argp_failure@@Base+0xf3c>
   1631c:	mov	r2, r5
   16320:	mov	r1, r4
   16324:	ldr	r0, [sl, #28]
   16328:	bl	11084 <memcpy@plt>
   1632c:	ldr	r3, [sl, #28]
   16330:	add	r5, r3, r5
   16334:	str	r5, [sl, #28]
   16338:	cmp	r7, r4
   1633c:	bne	16454 <argp_failure@@Base+0x1058>
   16340:	ldr	r3, [sl, #28]
   16344:	ldr	r2, [sl, #24]
   16348:	sub	r3, r3, r2
   1634c:	ldr	r2, [sl, #16]
   16350:	cmp	r3, r2
   16354:	bhi	16460 <argp_failure@@Base+0x1064>
   16358:	mov	r3, #0
   1635c:	str	r3, [sl, #4]
   16360:	ldr	r2, [sl, #28]
   16364:	ldr	r3, [sl, #32]
   16368:	cmp	r2, r3
   1636c:	bcs	1646c <argp_failure@@Base+0x1070>
   16370:	ldr	r3, [sl, #28]
   16374:	add	r2, r3, #1
   16378:	str	r2, [sl, #28]
   1637c:	mov	r2, #10
   16380:	strb	r2, [r3]
   16384:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16388:	str	r3, [fp, #-88]	; 0xffffffa8
   1638c:	b	16120 <argp_failure@@Base+0xd24>
   16390:	mov	r0, sl
   16394:	bl	17604 <argp_error@@Base+0xd8c>
   16398:	ldr	r5, [sl, #20]
   1639c:	bic	r5, r5, r5, asr #31
   163a0:	ldr	r3, [pc, #332]	; 164f4 <argp_failure@@Base+0x10f8>
   163a4:	ldr	r6, [r3, #20]
   163a8:	ldr	r3, [sl, #28]
   163ac:	ldr	r2, [sl, #24]
   163b0:	sub	r3, r3, r2
   163b4:	ldr	r2, [sl, #16]
   163b8:	cmp	r3, r2
   163bc:	bls	16284 <argp_failure@@Base+0xe88>
   163c0:	mov	r0, sl
   163c4:	bl	17604 <argp_error@@Base+0xd8c>
   163c8:	b	16284 <argp_failure@@Base+0xe88>
   163cc:	mov	r0, sl
   163d0:	bl	17604 <argp_error@@Base+0xd8c>
   163d4:	b	162a8 <argp_failure@@Base+0xeac>
   163d8:	mov	r1, #1
   163dc:	mov	r0, sl
   163e0:	bl	17ba8 <argp_error@@Base+0x1330>
   163e4:	cmp	r0, #0
   163e8:	beq	162e4 <argp_failure@@Base+0xee8>
   163ec:	b	162d0 <argp_failure@@Base+0xed4>
   163f0:	cmp	r1, r5
   163f4:	bhi	16448 <argp_failure@@Base+0x104c>
   163f8:	ldr	r3, [sl, #28]
   163fc:	add	r3, r3, #3
   16400:	ldr	r2, [sl, #32]
   16404:	cmp	r2, r3
   16408:	bcs	16420 <argp_failure@@Base+0x1024>
   1640c:	mov	r1, #3
   16410:	mov	r0, sl
   16414:	bl	17ba8 <argp_error@@Base+0x1330>
   16418:	cmp	r0, #0
   1641c:	beq	162e4 <argp_failure@@Base+0xee8>
   16420:	ldr	r3, [sl, #28]
   16424:	ldr	r2, [pc, #196]	; 164f0 <argp_failure@@Base+0x10f4>
   16428:	ldrh	r1, [r2]
   1642c:	ldrb	r2, [r2, #2]
   16430:	strh	r1, [r3]
   16434:	strb	r2, [r3, #2]
   16438:	ldr	r3, [sl, #28]
   1643c:	add	r3, r3, #3
   16440:	str	r3, [sl, #28]
   16444:	b	162e4 <argp_failure@@Base+0xee8>
   16448:	mov	r0, sl
   1644c:	bl	13d38 <argp_parse@@Base+0x177c>
   16450:	b	162e4 <argp_failure@@Base+0xee8>
   16454:	mov	r0, r4
   16458:	bl	131b0 <argp_parse@@Base+0xbf4>
   1645c:	b	16340 <argp_failure@@Base+0xf44>
   16460:	mov	r0, sl
   16464:	bl	17604 <argp_error@@Base+0xd8c>
   16468:	b	16358 <argp_failure@@Base+0xf5c>
   1646c:	mov	r1, #1
   16470:	mov	r0, sl
   16474:	bl	17ba8 <argp_error@@Base+0x1330>
   16478:	cmp	r0, #0
   1647c:	beq	16384 <argp_failure@@Base+0xf88>
   16480:	b	16370 <argp_failure@@Base+0xf74>
   16484:	mov	r0, sl
   16488:	bl	17604 <argp_error@@Base+0xd8c>
   1648c:	b	16138 <argp_failure@@Base+0xd3c>
   16490:	mov	r0, sl
   16494:	bl	17604 <argp_error@@Base+0xd8c>
   16498:	b	16158 <argp_failure@@Base+0xd5c>
   1649c:	andeq	r8, r1, r4, asr r8
   164a0:	andeq	r8, r1, ip, ror r6
   164a4:	andeq	r8, r1, r4, ror #16
   164a8:	muleq	r1, r4, r8
   164ac:			; <UNDEFINED> instruction: 0x000188bc
   164b0:	muleq	r1, r4, r6
   164b4:	andeq	r8, r1, r0, lsl r9
   164b8:	ldrdeq	r8, [r1], -ip
   164bc:	andeq	r8, r1, ip, lsr #4
   164c0:	andeq	r8, r1, ip, lsl #4
   164c4:	andeq	r4, r1, r0, asr sl
   164c8:	andeq	r8, r1, r0, lsr #18
   164cc:	andeq	r8, r1, r8, lsl r9
   164d0:	andeq	r8, r1, r8, lsr #18
   164d4:	andeq	r8, r1, r0, lsr r9
   164d8:	andeq	r8, r1, r0, asr #18
   164dc:	andeq	r8, r1, r8, ror r9
   164e0:	ldrdeq	r8, [r1], -ip
   164e4:	andeq	r8, r1, r0, lsl #19
   164e8:	andeq	r8, r1, r8, lsl #19
   164ec:	muleq	r1, r0, r9
   164f0:	muleq	r1, r4, r9
   164f4:	strdeq	r9, [r2], -ip
   164f8:	andeq	r0, r0, #5
   164fc:	muleq	r1, r8, r9
   16500:	muleq	r2, ip, r2
   16504:	andeq	r8, r1, ip, lsl #20
   16508:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1650c:	cmp	r3, #0
   16510:	beq	16600 <argp_failure@@Base+0x1204>
   16514:	ldr	r3, [pc, #-40]	; 164f4 <argp_failure@@Base+0x10f8>
   16518:	ldr	r3, [r3, #4]
   1651c:	cmp	r3, #0
   16520:	beq	16600 <argp_failure@@Base+0x1204>
   16524:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16528:	cmp	r3, #0
   1652c:	ldrne	r2, [r3]
   16530:	moveq	r2, #0
   16534:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16538:	ldr	r1, [pc, #-72]	; 164f8 <argp_failure@@Base+0x10fc>
   1653c:	ldr	r0, [pc, #-72]	; 164fc <argp_failure@@Base+0x1100>
   16540:	bl	13f1c <argp_parse@@Base+0x1960>
   16544:	subs	r4, r0, #0
   16548:	beq	16600 <argp_failure@@Base+0x1204>
   1654c:	ldrb	r3, [r4]
   16550:	cmp	r3, #0
   16554:	beq	165f4 <argp_failure@@Base+0x11f8>
   16558:	ldr	r2, [sl, #28]
   1655c:	ldr	r3, [sl, #32]
   16560:	cmp	r2, r3
   16564:	bcs	16698 <argp_failure@@Base+0x129c>
   16568:	ldr	r3, [sl, #28]
   1656c:	add	r2, r3, #1
   16570:	str	r2, [sl, #28]
   16574:	mov	r2, #10
   16578:	strb	r2, [r3]
   1657c:	mov	r0, r4
   16580:	bl	111bc <strlen@plt>
   16584:	subs	r5, r0, #0
   16588:	beq	165d0 <argp_failure@@Base+0x11d4>
   1658c:	ldr	r3, [sl, #28]
   16590:	add	r3, r3, r5
   16594:	ldr	r2, [sl, #32]
   16598:	cmp	r2, r3
   1659c:	bcs	165b4 <argp_failure@@Base+0x11b8>
   165a0:	mov	r1, r5
   165a4:	mov	r0, sl
   165a8:	bl	17ba8 <argp_error@@Base+0x1330>
   165ac:	cmp	r0, #0
   165b0:	beq	165d0 <argp_failure@@Base+0x11d4>
   165b4:	mov	r2, r5
   165b8:	mov	r1, r4
   165bc:	ldr	r0, [sl, #28]
   165c0:	bl	11084 <memcpy@plt>
   165c4:	ldr	r3, [sl, #28]
   165c8:	add	r5, r3, r5
   165cc:	str	r5, [sl, #28]
   165d0:	ldr	r2, [sl, #28]
   165d4:	ldr	r3, [sl, #32]
   165d8:	cmp	r2, r3
   165dc:	bcs	166b0 <argp_failure@@Base+0x12b4>
   165e0:	ldr	r3, [sl, #28]
   165e4:	add	r2, r3, #1
   165e8:	str	r2, [sl, #28]
   165ec:	mov	r2, #10
   165f0:	strb	r2, [r3]
   165f4:	ldr	r3, [pc, #-256]	; 164fc <argp_failure@@Base+0x1100>
   165f8:	cmp	r4, r3
   165fc:	bne	166c8 <argp_failure@@Base+0x12cc>
   16600:	mov	r4, #1
   16604:	ldr	r3, [fp, #-104]	; 0xffffff98
   16608:	tst	r3, #32
   1660c:	bne	166d4 <argp_failure@@Base+0x12d8>
   16610:	ldr	r3, [fp, #-104]	; 0xffffff98
   16614:	tst	r3, #64	; 0x40
   16618:	beq	1666c <argp_failure@@Base+0x1270>
   1661c:	ldr	r3, [pc, #-292]	; 16500 <argp_failure@@Base+0x1104>
   16620:	ldr	r3, [r3]
   16624:	cmp	r3, #0
   16628:	beq	1666c <argp_failure@@Base+0x1270>
   1662c:	cmp	r4, #0
   16630:	beq	16658 <argp_failure@@Base+0x125c>
   16634:	ldr	r2, [sl, #28]
   16638:	ldr	r3, [sl, #32]
   1663c:	cmp	r2, r3
   16640:	bcs	166fc <argp_failure@@Base+0x1300>
   16644:	ldr	r3, [sl, #28]
   16648:	add	r2, r3, #1
   1664c:	str	r2, [sl, #28]
   16650:	mov	r2, #10
   16654:	strb	r2, [r3]
   16658:	ldr	r3, [pc, #-352]	; 16500 <argp_failure@@Base+0x1104>
   1665c:	ldr	r2, [r3]
   16660:	ldr	r1, [pc, #-356]	; 16504 <argp_failure@@Base+0x1108>
   16664:	mov	r0, sl
   16668:	bl	17c98 <argp_error@@Base+0x1420>
   1666c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16670:	bl	110d8 <funlockfile@plt>
   16674:	ldr	r3, [fp, #-108]	; 0xffffff94
   16678:	cmp	r3, #0
   1667c:	beq	16688 <argp_failure@@Base+0x128c>
   16680:	mov	r0, r3
   16684:	bl	13bf4 <argp_parse@@Base+0x1638>
   16688:	mov	r0, sl
   1668c:	bl	17b68 <argp_error@@Base+0x12f0>
   16690:	sub	sp, fp, #32
   16694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16698:	mov	r1, #1
   1669c:	mov	r0, sl
   166a0:	bl	17ba8 <argp_error@@Base+0x1330>
   166a4:	cmp	r0, #0
   166a8:	beq	1657c <argp_failure@@Base+0x1180>
   166ac:	b	16568 <argp_failure@@Base+0x116c>
   166b0:	mov	r1, #1
   166b4:	mov	r0, sl
   166b8:	bl	17ba8 <argp_error@@Base+0x1330>
   166bc:	cmp	r0, #0
   166c0:	beq	165f4 <argp_failure@@Base+0x11f8>
   166c4:	b	165e0 <argp_failure@@Base+0x11e4>
   166c8:	mov	r0, r4
   166cc:	bl	131b0 <argp_parse@@Base+0xbf4>
   166d0:	b	16600 <argp_failure@@Base+0x1204>
   166d4:	str	sl, [sp, #4]
   166d8:	mov	r3, #0
   166dc:	str	r3, [sp]
   166e0:	mov	r3, r4
   166e4:	mov	r2, #1
   166e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   166ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   166f0:	bl	144b8 <argp_parse@@Base+0x1efc>
   166f4:	orr	r4, r4, r0
   166f8:	b	16610 <argp_failure@@Base+0x1214>
   166fc:	mov	r1, #1
   16700:	mov	r0, sl
   16704:	bl	17ba8 <argp_error@@Base+0x1330>
   16708:	cmp	r0, #0
   1670c:	beq	16658 <argp_failure@@Base+0x125c>
   16710:	b	16644 <argp_failure@@Base+0x1248>
   16714:	ldrb	r3, [r5]
   16718:	mov	r4, r5
   1671c:	mov	r5, #0
   16720:	b	157f4 <argp_failure@@Base+0x3f8>
   16724:	mov	r4, r2
   16728:	b	15808 <argp_failure@@Base+0x40c>
   1672c:	cmp	r0, #110	; 0x6e
   16730:	beq	15860 <argp_failure@@Base+0x464>
   16734:	mov	r3, #1
   16738:	str	r3, [fp, #-96]	; 0xffffffa0
   1673c:	str	r3, [fp, #-116]	; 0xffffff8c
   16740:	add	r6, sl, #24
   16744:	b	15958 <argp_failure@@Base+0x55c>
   16748:	ldrb	r3, [r9]
   1674c:	cmp	r7, r3
   16750:	beq	15e2c <argp_failure@@Base+0xa30>
   16754:	add	r4, r4, #24
   16758:	subs	r5, r5, #1
   1675c:	beq	15f1c <argp_failure@@Base+0xb20>
   16760:	ldr	r6, [r4, #12]
   16764:	tst	r6, #8
   16768:	bne	16754 <argp_failure@@Base+0x1358>
   1676c:	ldr	r7, [r4, #4]
   16770:	sub	r3, r7, #1
   16774:	cmp	r3, #254	; 0xfe
   16778:	bhi	16754 <argp_failure@@Base+0x1358>
   1677c:	bl	111a4 <__ctype_b_loc@plt>
   16780:	ldr	r2, [r0]
   16784:	lsl	r3, r7, #1
   16788:	ldrh	r3, [r2, r3]
   1678c:	tst	r3, #16384	; 0x4000
   16790:	bne	16748 <argp_failure@@Base+0x134c>
   16794:	b	16754 <argp_failure@@Base+0x1358>

00016798 <argp_help@@Base>:
   16798:	push	{lr}		; (str lr, [sp, #-4]!)
   1679c:	sub	sp, sp, #12
   167a0:	str	r3, [sp]
   167a4:	mov	r3, r2
   167a8:	mov	r2, r1
   167ac:	mov	r1, #0
   167b0:	bl	15604 <argp_failure@@Base+0x208>
   167b4:	add	sp, sp, #12
   167b8:	pop	{pc}		; (ldr pc, [sp], #4)

000167bc <argp_state_help@@Base>:
   167bc:	push	{r4, r5, lr}
   167c0:	sub	sp, sp, #12
   167c4:	mov	r5, r2
   167c8:	subs	r4, r0, #0
   167cc:	beq	16830 <argp_state_help@@Base+0x74>
   167d0:	ldr	r3, [r4, #16]
   167d4:	tst	r3, #2
   167d8:	bne	16828 <argp_state_help@@Base+0x6c>
   167dc:	cmp	r1, #0
   167e0:	beq	16828 <argp_state_help@@Base+0x6c>
   167e4:	ldr	r3, [r4, #16]
   167e8:	tst	r3, #64	; 0x40
   167ec:	orrne	r5, r5, #128	; 0x80
   167f0:	ldr	r0, [r4]
   167f4:	ldr	r3, [r4, #40]	; 0x28
   167f8:	str	r3, [sp]
   167fc:	mov	r3, r5
   16800:	mov	r2, r1
   16804:	mov	r1, r4
   16808:	bl	15604 <argp_failure@@Base+0x208>
   1680c:	ldr	r3, [r4, #16]
   16810:	tst	r3, #32
   16814:	bne	16828 <argp_state_help@@Base+0x6c>
   16818:	tst	r5, #256	; 0x100
   1681c:	bne	1685c <argp_state_help@@Base+0xa0>
   16820:	tst	r5, #512	; 0x200
   16824:	bne	16868 <argp_state_help@@Base+0xac>
   16828:	add	sp, sp, #12
   1682c:	pop	{r4, r5, pc}
   16830:	cmp	r1, #0
   16834:	beq	16828 <argp_state_help@@Base+0x6c>
   16838:	ldr	r3, [pc, #48]	; 16870 <argp_state_help@@Base+0xb4>
   1683c:	ldr	r3, [r3]
   16840:	str	r3, [sp]
   16844:	mov	r3, r2
   16848:	mov	r2, r1
   1684c:	mov	r1, #0
   16850:	mov	r0, r1
   16854:	bl	15604 <argp_failure@@Base+0x208>
   16858:	b	16818 <argp_state_help@@Base+0x5c>
   1685c:	ldr	r3, [pc, #16]	; 16874 <argp_state_help@@Base+0xb8>
   16860:	ldr	r0, [r3]
   16864:	bl	111b0 <exit@plt>
   16868:	mov	r0, #0
   1686c:	bl	111b0 <exit@plt>
   16870:	andeq	r9, r2, r8, lsr r2
   16874:	andeq	r9, r2, r0, lsr r2

00016878 <argp_error@@Base>:
   16878:	push	{r1, r2, r3}
   1687c:	push	{r4, r5, lr}
   16880:	sub	sp, sp, #8
   16884:	subs	r5, r0, #0
   16888:	beq	16958 <argp_error@@Base+0xe0>
   1688c:	ldr	r3, [r5, #16]
   16890:	tst	r3, #2
   16894:	bne	16948 <argp_error@@Base+0xd0>
   16898:	ldr	r4, [r5, #44]	; 0x2c
   1689c:	cmp	r4, #0
   168a0:	beq	16948 <argp_error@@Base+0xd0>
   168a4:	mov	r0, r4
   168a8:	bl	11294 <flockfile@plt>
   168ac:	add	r3, sp, #24
   168b0:	str	r3, [sp, #4]
   168b4:	ldr	r0, [r5, #40]	; 0x28
   168b8:	mov	r1, r4
   168bc:	bl	10fe8 <fputs_unlocked@plt>
   168c0:	ldr	r3, [r4, #20]
   168c4:	ldr	r2, [r4, #24]
   168c8:	cmp	r3, r2
   168cc:	addcc	r2, r3, #1
   168d0:	strcc	r2, [r4, #20]
   168d4:	movcc	r2, #58	; 0x3a
   168d8:	strbcc	r2, [r3]
   168dc:	bcs	16984 <argp_error@@Base+0x10c>
   168e0:	ldr	r3, [r4, #20]
   168e4:	ldr	r2, [r4, #24]
   168e8:	cmp	r3, r2
   168ec:	addcc	r2, r3, #1
   168f0:	strcc	r2, [r4, #20]
   168f4:	movcc	r2, #32
   168f8:	strbcc	r2, [r3]
   168fc:	bcs	16994 <argp_error@@Base+0x11c>
   16900:	ldr	r2, [sp, #4]
   16904:	ldr	r1, [sp, #20]
   16908:	mov	r0, r4
   1690c:	bl	11270 <vfprintf@plt>
   16910:	ldr	r3, [r4, #20]
   16914:	ldr	r2, [r4, #24]
   16918:	cmp	r3, r2
   1691c:	addcc	r2, r3, #1
   16920:	strcc	r2, [r4, #20]
   16924:	movcc	r2, #10
   16928:	strbcc	r2, [r3]
   1692c:	bcs	169a4 <argp_error@@Base+0x12c>
   16930:	mov	r2, #260	; 0x104
   16934:	mov	r1, r4
   16938:	mov	r0, r5
   1693c:	bl	167bc <argp_state_help@@Base>
   16940:	mov	r0, r4
   16944:	bl	110d8 <funlockfile@plt>
   16948:	add	sp, sp, #8
   1694c:	pop	{r4, r5, lr}
   16950:	add	sp, sp, #12
   16954:	bx	lr
   16958:	ldr	r3, [pc, #84]	; 169b4 <argp_error@@Base+0x13c>
   1695c:	ldr	r4, [r3]
   16960:	cmp	r4, #0
   16964:	beq	16948 <argp_error@@Base+0xd0>
   16968:	mov	r0, r4
   1696c:	bl	11294 <flockfile@plt>
   16970:	add	r3, sp, #24
   16974:	str	r3, [sp, #4]
   16978:	ldr	r3, [pc, #56]	; 169b8 <argp_error@@Base+0x140>
   1697c:	ldr	r0, [r3]
   16980:	b	168b8 <argp_error@@Base+0x40>
   16984:	mov	r1, #58	; 0x3a
   16988:	mov	r0, r4
   1698c:	bl	11240 <__overflow@plt>
   16990:	b	168e0 <argp_error@@Base+0x68>
   16994:	mov	r1, #32
   16998:	mov	r0, r4
   1699c:	bl	11240 <__overflow@plt>
   169a0:	b	16900 <argp_error@@Base+0x88>
   169a4:	mov	r1, #10
   169a8:	mov	r0, r4
   169ac:	bl	11240 <__overflow@plt>
   169b0:	b	16930 <argp_error@@Base+0xb8>
   169b4:	andeq	r9, r2, r0, asr #4
   169b8:	andeq	r9, r2, r8, lsr r2
   169bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   169c0:	ldr	r4, [r1, #28]
   169c4:	ldr	r5, [r1, #32]
   169c8:	ldr	r6, [r1]
   169cc:	add	r7, r0, r5, lsl #2
   169d0:	b	16a08 <argp_error@@Base+0x190>
   169d4:	cmp	sl, #0
   169d8:	ble	16a04 <argp_error@@Base+0x18c>
   169dc:	add	r2, r0, r4, lsl #2
   169e0:	sub	r3, r6, sl
   169e4:	add	r3, r0, r3, lsl #2
   169e8:	add	r8, r0, r6, lsl #2
   169ec:	ldr	ip, [r2]
   169f0:	ldr	lr, [r3]
   169f4:	str	lr, [r2], #4
   169f8:	str	ip, [r3], #4
   169fc:	cmp	r3, r8
   16a00:	bne	169ec <argp_error@@Base+0x174>
   16a04:	sub	r6, r6, sl
   16a08:	cmp	r6, r5
   16a0c:	movle	r3, #0
   16a10:	movgt	r3, #1
   16a14:	cmp	r4, r5
   16a18:	movge	r3, #0
   16a1c:	cmp	r3, #0
   16a20:	beq	16a6c <argp_error@@Base+0x1f4>
   16a24:	sub	r9, r6, r5
   16a28:	sub	sl, r5, r4
   16a2c:	cmp	r9, sl
   16a30:	bgt	169d4 <argp_error@@Base+0x15c>
   16a34:	cmp	r9, #0
   16a38:	addgt	r3, r0, r4, lsl #2
   16a3c:	addgt	r8, r9, r4
   16a40:	addgt	r8, r0, r8, lsl #2
   16a44:	movgt	r2, r7
   16a48:	ble	16a64 <argp_error@@Base+0x1ec>
   16a4c:	ldr	ip, [r3]
   16a50:	ldr	lr, [r2]
   16a54:	str	lr, [r3], #4
   16a58:	str	ip, [r2], #4
   16a5c:	cmp	r3, r8
   16a60:	bne	16a4c <argp_error@@Base+0x1d4>
   16a64:	add	r4, r4, r9
   16a68:	b	16a08 <argp_error@@Base+0x190>
   16a6c:	ldr	r0, [r1]
   16a70:	ldr	r3, [r1, #32]
   16a74:	sub	r2, r0, r3
   16a78:	ldr	r3, [r1, #28]
   16a7c:	add	r3, r3, r2
   16a80:	str	r3, [r1, #28]
   16a84:	str	r0, [r1, #32]
   16a88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a90:	sub	sp, sp, #44	; 0x2c
   16a94:	str	r0, [sp, #20]
   16a98:	str	r1, [sp, #12]
   16a9c:	str	r2, [sp, #24]
   16aa0:	str	r3, [sp, #8]
   16aa4:	ldr	fp, [sp, #88]	; 0x58
   16aa8:	ldr	sl, [fp, #20]
   16aac:	ldrb	r3, [sl]
   16ab0:	cmp	r3, #0
   16ab4:	cmpne	r3, #61	; 0x3d
   16ab8:	beq	16af4 <argp_error@@Base+0x27c>
   16abc:	mov	r8, sl
   16ac0:	ldrb	r3, [r8, #1]!
   16ac4:	cmp	r3, #0
   16ac8:	cmpne	r3, #61	; 0x3d
   16acc:	bne	16ac0 <argp_error@@Base+0x248>
   16ad0:	sub	r7, r8, sl
   16ad4:	ldr	r5, [sp, #8]
   16ad8:	ldr	r3, [r5]
   16adc:	str	r3, [sp, #16]
   16ae0:	cmp	r3, #0
   16ae4:	beq	16de8 <argp_error@@Base+0x570>
   16ae8:	mov	r4, r3
   16aec:	mov	r6, #0
   16af0:	b	16b0c <argp_error@@Base+0x294>
   16af4:	mov	r8, sl
   16af8:	b	16ad0 <argp_error@@Base+0x258>
   16afc:	add	r6, r6, #1
   16b00:	ldr	r4, [r5, #16]!
   16b04:	cmp	r4, #0
   16b08:	beq	16b44 <argp_error@@Base+0x2cc>
   16b0c:	mov	r9, r5
   16b10:	mov	r2, r7
   16b14:	mov	r1, sl
   16b18:	mov	r0, r4
   16b1c:	bl	112b8 <strncmp@plt>
   16b20:	cmp	r0, #0
   16b24:	bne	16afc <argp_error@@Base+0x284>
   16b28:	mov	r0, r4
   16b2c:	bl	111bc <strlen@plt>
   16b30:	cmp	r7, r0
   16b34:	bne	16afc <argp_error@@Base+0x284>
   16b38:	cmp	r5, #0
   16b3c:	strne	r6, [sp, #28]
   16b40:	bne	16d98 <argp_error@@Base+0x520>
   16b44:	ldr	r4, [sp, #8]
   16b48:	mvn	r3, #0
   16b4c:	str	r3, [sp, #28]
   16b50:	mov	sl, #0
   16b54:	str	sl, [sp, #36]	; 0x24
   16b58:	mov	r5, sl
   16b5c:	mov	r9, sl
   16b60:	str	r8, [sp, #32]
   16b64:	mov	r8, sl
   16b68:	ldr	r0, [sp, #16]
   16b6c:	b	16bbc <argp_error@@Base+0x344>
   16b70:	ldr	r2, [r9, #8]
   16b74:	ldr	r3, [r4, #8]
   16b78:	cmp	r2, r3
   16b7c:	bne	16bf4 <argp_error@@Base+0x37c>
   16b80:	ldr	r2, [r9, #12]
   16b84:	ldr	r3, [r4, #12]
   16b88:	cmp	r2, r3
   16b8c:	bne	16bf4 <argp_error@@Base+0x37c>
   16b90:	b	16bac <argp_error@@Base+0x334>
   16b94:	cmp	r8, #0
   16b98:	moveq	sl, #1
   16b9c:	beq	16bac <argp_error@@Base+0x334>
   16ba0:	mov	sl, #1
   16ba4:	mov	r3, #1
   16ba8:	strb	r3, [r8, r5]
   16bac:	add	r5, r5, #1
   16bb0:	ldr	r0, [r4, #16]!
   16bb4:	cmp	r0, #0
   16bb8:	beq	16c5c <argp_error@@Base+0x3e4>
   16bbc:	mov	r2, r7
   16bc0:	ldr	r1, [fp, #20]
   16bc4:	bl	112b8 <strncmp@plt>
   16bc8:	cmp	r0, #0
   16bcc:	bne	16bac <argp_error@@Base+0x334>
   16bd0:	cmp	r9, #0
   16bd4:	beq	16c48 <argp_error@@Base+0x3d0>
   16bd8:	ldr	r3, [sp, #84]	; 0x54
   16bdc:	cmp	r3, #0
   16be0:	bne	16bf4 <argp_error@@Base+0x37c>
   16be4:	ldr	r2, [r9, #4]
   16be8:	ldr	r3, [r4, #4]
   16bec:	cmp	r2, r3
   16bf0:	beq	16b70 <argp_error@@Base+0x2f8>
   16bf4:	cmp	sl, #0
   16bf8:	bne	16bac <argp_error@@Base+0x334>
   16bfc:	ldr	r3, [sp, #92]	; 0x5c
   16c00:	cmp	r3, #0
   16c04:	beq	16b94 <argp_error@@Base+0x31c>
   16c08:	cmp	r8, #0
   16c0c:	bne	16ba4 <argp_error@@Base+0x32c>
   16c10:	mov	r0, r6
   16c14:	bl	137c8 <argp_parse@@Base+0x120c>
   16c18:	subs	r8, r0, #0
   16c1c:	beq	16c54 <argp_error@@Base+0x3dc>
   16c20:	mov	r2, r6
   16c24:	mov	r1, #0
   16c28:	mov	r0, r8
   16c2c:	bl	11210 <memset@plt>
   16c30:	ldr	r3, [sp, #28]
   16c34:	mov	r2, #1
   16c38:	strb	r2, [r8, r3]
   16c3c:	mov	r3, #1
   16c40:	str	r3, [sp, #36]	; 0x24
   16c44:	b	16ba4 <argp_error@@Base+0x32c>
   16c48:	str	r5, [sp, #28]
   16c4c:	mov	r9, r4
   16c50:	b	16bac <argp_error@@Base+0x334>
   16c54:	mov	sl, #1
   16c58:	b	16bac <argp_error@@Base+0x334>
   16c5c:	mov	r3, r8
   16c60:	str	r8, [sp, #16]
   16c64:	ldr	r8, [sp, #32]
   16c68:	cmp	sl, #0
   16c6c:	cmpeq	r3, #0
   16c70:	beq	16d90 <argp_error@@Base+0x518>
   16c74:	ldr	r3, [sp, #92]	; 0x5c
   16c78:	cmp	r3, #0
   16c7c:	beq	16cac <argp_error@@Base+0x434>
   16c80:	cmp	sl, #0
   16c84:	beq	16ce8 <argp_error@@Base+0x470>
   16c88:	ldr	r3, [sp, #12]
   16c8c:	ldr	r2, [r3]
   16c90:	ldr	r3, [pc, #708]	; 16f5c <argp_error@@Base+0x6e4>
   16c94:	ldr	r0, [r3]
   16c98:	ldr	r3, [fp, #20]
   16c9c:	str	r3, [sp]
   16ca0:	ldr	r3, [sp, #96]	; 0x60
   16ca4:	ldr	r1, [pc, #692]	; 16f60 <argp_error@@Base+0x6e8>
   16ca8:	bl	111d4 <fprintf@plt>
   16cac:	ldr	r3, [sp, #36]	; 0x24
   16cb0:	cmp	r3, #0
   16cb4:	bne	16d84 <argp_error@@Base+0x50c>
   16cb8:	ldr	r4, [fp, #20]
   16cbc:	mov	r0, r4
   16cc0:	bl	111bc <strlen@plt>
   16cc4:	add	r0, r4, r0
   16cc8:	str	r0, [fp, #20]
   16ccc:	ldr	r3, [fp]
   16cd0:	add	r3, r3, #1
   16cd4:	str	r3, [fp]
   16cd8:	mov	r3, #0
   16cdc:	str	r3, [fp, #8]
   16ce0:	mov	r0, #63	; 0x3f
   16ce4:	b	16edc <argp_error@@Base+0x664>
   16ce8:	ldr	r4, [pc, #620]	; 16f5c <argp_error@@Base+0x6e4>
   16cec:	ldr	r0, [r4]
   16cf0:	bl	11294 <flockfile@plt>
   16cf4:	ldr	r3, [sp, #12]
   16cf8:	ldr	r2, [r3]
   16cfc:	ldr	r0, [r4]
   16d00:	ldr	r3, [fp, #20]
   16d04:	str	r3, [sp]
   16d08:	ldr	r3, [sp, #96]	; 0x60
   16d0c:	ldr	r1, [pc, #592]	; 16f64 <argp_error@@Base+0x6ec>
   16d10:	bl	111d4 <fprintf@plt>
   16d14:	cmp	r6, #0
   16d18:	ble	16d68 <argp_error@@Base+0x4f0>
   16d1c:	ldr	r3, [sp, #16]
   16d20:	mov	r4, r3
   16d24:	add	r6, r3, r6
   16d28:	ldr	r7, [pc, #568]	; 16f68 <argp_error@@Base+0x6f0>
   16d2c:	ldr	r5, [pc, #552]	; 16f5c <argp_error@@Base+0x6e4>
   16d30:	ldr	r8, [sp, #8]
   16d34:	b	16d44 <argp_error@@Base+0x4cc>
   16d38:	add	sl, sl, #1
   16d3c:	cmp	r4, r6
   16d40:	beq	16d68 <argp_error@@Base+0x4f0>
   16d44:	ldrb	r3, [r4], #1
   16d48:	cmp	r3, #0
   16d4c:	beq	16d38 <argp_error@@Base+0x4c0>
   16d50:	ldr	r3, [r8, sl, lsl #4]
   16d54:	ldr	r2, [sp, #96]	; 0x60
   16d58:	mov	r1, r7
   16d5c:	ldr	r0, [r5]
   16d60:	bl	111d4 <fprintf@plt>
   16d64:	b	16d38 <argp_error@@Base+0x4c0>
   16d68:	ldr	r4, [pc, #492]	; 16f5c <argp_error@@Base+0x6e4>
   16d6c:	ldr	r1, [r4]
   16d70:	mov	r0, #10
   16d74:	bl	1127c <fputc@plt>
   16d78:	ldr	r0, [r4]
   16d7c:	bl	110d8 <funlockfile@plt>
   16d80:	b	16cac <argp_error@@Base+0x434>
   16d84:	ldr	r0, [sp, #16]
   16d88:	bl	131b0 <argp_parse@@Base+0xbf4>
   16d8c:	b	16cb8 <argp_error@@Base+0x440>
   16d90:	cmp	r9, #0
   16d94:	beq	16de8 <argp_error@@Base+0x570>
   16d98:	ldr	r2, [fp]
   16d9c:	add	r3, r2, #1
   16da0:	str	r3, [fp]
   16da4:	mov	r1, #0
   16da8:	str	r1, [fp, #20]
   16dac:	ldrb	r1, [r8]
   16db0:	cmp	r1, #0
   16db4:	beq	16ea8 <argp_error@@Base+0x630>
   16db8:	ldr	r3, [r9, #4]
   16dbc:	cmp	r3, #0
   16dc0:	addne	r8, r8, #1
   16dc4:	strne	r8, [fp, #12]
   16dc8:	bne	16eb4 <argp_error@@Base+0x63c>
   16dcc:	ldr	r3, [sp, #92]	; 0x5c
   16dd0:	cmp	r3, #0
   16dd4:	bne	16e80 <argp_error@@Base+0x608>
   16dd8:	ldr	r3, [r9, #12]
   16ddc:	str	r3, [fp, #8]
   16de0:	mov	r0, #63	; 0x3f
   16de4:	b	16edc <argp_error@@Base+0x664>
   16de8:	ldr	r3, [sp, #84]	; 0x54
   16dec:	cmp	r3, #0
   16df0:	bne	16e20 <argp_error@@Base+0x5a8>
   16df4:	ldr	r3, [sp, #92]	; 0x5c
   16df8:	cmp	r3, #0
   16dfc:	bne	16e58 <argp_error@@Base+0x5e0>
   16e00:	mov	r2, #0
   16e04:	str	r2, [fp, #20]
   16e08:	ldr	r3, [fp]
   16e0c:	add	r3, r3, #1
   16e10:	str	r3, [fp]
   16e14:	str	r2, [fp, #8]
   16e18:	mov	r0, #63	; 0x3f
   16e1c:	b	16edc <argp_error@@Base+0x664>
   16e20:	ldr	r3, [fp]
   16e24:	ldr	r2, [sp, #12]
   16e28:	ldr	r3, [r2, r3, lsl #2]
   16e2c:	ldrb	r3, [r3, #1]
   16e30:	cmp	r3, #45	; 0x2d
   16e34:	beq	16df4 <argp_error@@Base+0x57c>
   16e38:	ldr	r3, [fp, #20]
   16e3c:	ldrb	r1, [r3]
   16e40:	ldr	r0, [sp, #24]
   16e44:	bl	111c8 <strchr@plt>
   16e48:	cmp	r0, #0
   16e4c:	beq	16df4 <argp_error@@Base+0x57c>
   16e50:	mvn	r0, #0
   16e54:	b	16edc <argp_error@@Base+0x664>
   16e58:	ldr	r3, [sp, #12]
   16e5c:	ldr	r2, [r3]
   16e60:	ldr	r3, [pc, #244]	; 16f5c <argp_error@@Base+0x6e4>
   16e64:	ldr	r0, [r3]
   16e68:	ldr	r3, [fp, #20]
   16e6c:	str	r3, [sp]
   16e70:	ldr	r3, [sp, #96]	; 0x60
   16e74:	ldr	r1, [pc, #240]	; 16f6c <argp_error@@Base+0x6f4>
   16e78:	bl	111d4 <fprintf@plt>
   16e7c:	b	16e00 <argp_error@@Base+0x588>
   16e80:	ldr	r3, [sp, #12]
   16e84:	ldr	r2, [r3]
   16e88:	ldr	r3, [pc, #204]	; 16f5c <argp_error@@Base+0x6e4>
   16e8c:	ldr	r0, [r3]
   16e90:	ldr	r3, [r9]
   16e94:	str	r3, [sp]
   16e98:	ldr	r3, [sp, #96]	; 0x60
   16e9c:	ldr	r1, [pc, #204]	; 16f70 <argp_error@@Base+0x6f8>
   16ea0:	bl	111d4 <fprintf@plt>
   16ea4:	b	16dd8 <argp_error@@Base+0x560>
   16ea8:	ldr	r1, [r9, #4]
   16eac:	cmp	r1, #1
   16eb0:	beq	16ee4 <argp_error@@Base+0x66c>
   16eb4:	ldr	r3, [sp, #80]	; 0x50
   16eb8:	cmp	r3, #0
   16ebc:	ldrne	r2, [sp, #28]
   16ec0:	strne	r2, [r3]
   16ec4:	ldr	r3, [r9, #8]
   16ec8:	cmp	r3, #0
   16ecc:	ldrne	r2, [r9, #12]
   16ed0:	strne	r2, [r3]
   16ed4:	movne	r0, #0
   16ed8:	ldreq	r0, [r9, #12]
   16edc:	add	sp, sp, #44	; 0x2c
   16ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ee4:	ldr	r1, [sp, #20]
   16ee8:	cmp	r3, r1
   16eec:	bge	16f08 <argp_error@@Base+0x690>
   16ef0:	add	r2, r2, #2
   16ef4:	str	r2, [fp]
   16ef8:	ldr	r2, [sp, #12]
   16efc:	ldr	r3, [r2, r3, lsl #2]
   16f00:	str	r3, [fp, #12]
   16f04:	b	16eb4 <argp_error@@Base+0x63c>
   16f08:	ldr	r3, [sp, #92]	; 0x5c
   16f0c:	cmp	r3, #0
   16f10:	bne	16f34 <argp_error@@Base+0x6bc>
   16f14:	ldr	r3, [r9, #12]
   16f18:	str	r3, [fp, #8]
   16f1c:	ldr	r3, [sp, #24]
   16f20:	ldrb	r0, [r3]
   16f24:	cmp	r0, #58	; 0x3a
   16f28:	moveq	r0, #58	; 0x3a
   16f2c:	movne	r0, #63	; 0x3f
   16f30:	b	16edc <argp_error@@Base+0x664>
   16f34:	ldr	r3, [sp, #12]
   16f38:	ldr	r2, [r3]
   16f3c:	ldr	r3, [pc, #24]	; 16f5c <argp_error@@Base+0x6e4>
   16f40:	ldr	r0, [r3]
   16f44:	ldr	r3, [r9]
   16f48:	str	r3, [sp]
   16f4c:	ldr	r3, [sp, #96]	; 0x60
   16f50:	ldr	r1, [pc, #28]	; 16f74 <argp_error@@Base+0x6fc>
   16f54:	bl	111d4 <fprintf@plt>
   16f58:	b	16f14 <argp_error@@Base+0x69c>
   16f5c:	andeq	r9, r2, r0, asr #4
   16f60:	andeq	r8, r1, r0, lsr #20
   16f64:	andeq	r8, r1, r0, asr #20
   16f68:	andeq	r8, r1, r0, ror sl
   16f6c:	andeq	r8, r1, r8, ror sl
   16f70:	muleq	r1, r8, sl
   16f74:	andeq	r8, r1, r8, asr #21
   16f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f7c:	sub	sp, sp, #36	; 0x24
   16f80:	str	r3, [sp, #24]
   16f84:	ldr	r4, [sp, #80]	; 0x50
   16f88:	ldr	r8, [r4, #4]
   16f8c:	subs	r5, r0, #0
   16f90:	ble	17498 <argp_error@@Base+0xc20>
   16f94:	mov	r9, r1
   16f98:	mov	r6, r2
   16f9c:	mov	r3, #0
   16fa0:	str	r3, [r4, #12]
   16fa4:	ldr	r3, [r4]
   16fa8:	cmp	r3, #0
   16fac:	beq	16fd0 <argp_error@@Base+0x758>
   16fb0:	ldr	r3, [r4, #16]
   16fb4:	cmp	r3, #0
   16fb8:	beq	16fd8 <argp_error@@Base+0x760>
   16fbc:	ldrb	r3, [r2]
   16fc0:	sub	r3, r3, #43	; 0x2b
   16fc4:	tst	r3, #253	; 0xfd
   16fc8:	addeq	r6, r2, #1
   16fcc:	b	17034 <argp_error@@Base+0x7bc>
   16fd0:	mov	r3, #1
   16fd4:	str	r3, [r4]
   16fd8:	ldr	r3, [r4]
   16fdc:	str	r3, [r4, #32]
   16fe0:	str	r3, [r4, #28]
   16fe4:	mov	r3, #0
   16fe8:	str	r3, [r4, #20]
   16fec:	ldrb	r3, [r6]
   16ff0:	cmp	r3, #45	; 0x2d
   16ff4:	moveq	r3, #2
   16ff8:	streq	r3, [r4, #24]
   16ffc:	addeq	r6, r6, #1
   17000:	beq	1702c <argp_error@@Base+0x7b4>
   17004:	cmp	r3, #43	; 0x2b
   17008:	moveq	r3, #0
   1700c:	streq	r3, [r4, #24]
   17010:	addeq	r6, r6, #1
   17014:	beq	1702c <argp_error@@Base+0x7b4>
   17018:	ldr	r3, [sp, #84]	; 0x54
   1701c:	cmp	r3, #0
   17020:	beq	170d0 <argp_error@@Base+0x858>
   17024:	mov	r3, #0
   17028:	str	r3, [r4, #24]
   1702c:	mov	r3, #1
   17030:	str	r3, [r4, #16]
   17034:	ldrb	r3, [r6]
   17038:	cmp	r3, #58	; 0x3a
   1703c:	moveq	r8, #0
   17040:	ldr	r3, [r4, #20]
   17044:	cmp	r3, #0
   17048:	beq	17058 <argp_error@@Base+0x7e0>
   1704c:	ldrb	r3, [r3]
   17050:	cmp	r3, #0
   17054:	bne	171e4 <argp_error@@Base+0x96c>
   17058:	ldr	r3, [r4]
   1705c:	ldr	r2, [r4, #32]
   17060:	cmp	r2, r3
   17064:	strgt	r3, [r4, #32]
   17068:	ldr	r2, [r4, #28]
   1706c:	cmp	r3, r2
   17070:	strlt	r3, [r4, #28]
   17074:	ldr	r2, [r4, #24]
   17078:	cmp	r2, #1
   1707c:	beq	170ec <argp_error@@Base+0x874>
   17080:	ldr	r7, [r4]
   17084:	cmp	r5, r7
   17088:	beq	17170 <argp_error@@Base+0x8f8>
   1708c:	ldr	sl, [r9, r7, lsl #2]
   17090:	ldr	r1, [pc, #1088]	; 174d8 <argp_error@@Base+0xc60>
   17094:	mov	r0, sl
   17098:	bl	10ff4 <strcmp@plt>
   1709c:	cmp	r0, #0
   170a0:	bne	174a8 <argp_error@@Base+0xc30>
   170a4:	add	r7, r7, #1
   170a8:	str	r7, [r4]
   170ac:	ldr	r2, [r4, #28]
   170b0:	ldr	r3, [r4, #32]
   170b4:	cmp	r7, r3
   170b8:	cmpne	r2, r3
   170bc:	beq	17160 <argp_error@@Base+0x8e8>
   170c0:	mov	r1, r4
   170c4:	mov	r0, r9
   170c8:	bl	169bc <argp_error@@Base+0x144>
   170cc:	b	17168 <argp_error@@Base+0x8f0>
   170d0:	ldr	r0, [pc, #1028]	; 174dc <argp_error@@Base+0xc64>
   170d4:	bl	1112c <getenv@plt>
   170d8:	cmp	r0, #0
   170dc:	bne	17024 <argp_error@@Base+0x7ac>
   170e0:	mov	r3, #1
   170e4:	str	r3, [r4, #24]
   170e8:	b	1702c <argp_error@@Base+0x7b4>
   170ec:	ldr	r2, [r4, #32]
   170f0:	ldr	r1, [r4, #28]
   170f4:	cmp	r1, r2
   170f8:	cmpne	r3, r2
   170fc:	beq	17110 <argp_error@@Base+0x898>
   17100:	mov	r1, r4
   17104:	mov	r0, r9
   17108:	bl	169bc <argp_error@@Base+0x144>
   1710c:	b	17118 <argp_error@@Base+0x8a0>
   17110:	cmp	r3, r2
   17114:	strne	r3, [r4, #28]
   17118:	ldr	r3, [r4]
   1711c:	cmp	r5, r3
   17120:	ble	17158 <argp_error@@Base+0x8e0>
   17124:	add	r1, r9, r3, lsl #2
   17128:	b	1713c <argp_error@@Base+0x8c4>
   1712c:	add	r3, r3, #1
   17130:	str	r3, [r4]
   17134:	cmp	r5, r3
   17138:	beq	17158 <argp_error@@Base+0x8e0>
   1713c:	ldr	r2, [r1], #4
   17140:	ldrb	r0, [r2]
   17144:	cmp	r0, #45	; 0x2d
   17148:	bne	1712c <argp_error@@Base+0x8b4>
   1714c:	ldrb	r2, [r2, #1]
   17150:	cmp	r2, #0
   17154:	beq	1712c <argp_error@@Base+0x8b4>
   17158:	str	r3, [r4, #32]
   1715c:	b	17080 <argp_error@@Base+0x808>
   17160:	cmp	r2, r3
   17164:	streq	r7, [r4, #28]
   17168:	str	r5, [r4, #32]
   1716c:	str	r5, [r4]
   17170:	ldr	r3, [r4, #28]
   17174:	ldr	r2, [r4, #32]
   17178:	cmp	r3, r2
   1717c:	mvneq	r0, #0
   17180:	strne	r3, [r4]
   17184:	mvnne	r0, #0
   17188:	b	172e8 <argp_error@@Base+0xa70>
   1718c:	ldrb	r1, [sl, #1]
   17190:	cmp	r1, #0
   17194:	beq	174b4 <argp_error@@Base+0xc3c>
   17198:	ldr	r3, [sp, #24]
   1719c:	cmp	r3, #0
   171a0:	beq	171d4 <argp_error@@Base+0x95c>
   171a4:	cmp	r1, #45	; 0x2d
   171a8:	beq	1724c <argp_error@@Base+0x9d4>
   171ac:	ldr	r3, [sp, #76]	; 0x4c
   171b0:	cmp	r3, #0
   171b4:	beq	171d4 <argp_error@@Base+0x95c>
   171b8:	ldrb	r3, [sl, #2]
   171bc:	cmp	r3, #0
   171c0:	bne	1728c <argp_error@@Base+0xa14>
   171c4:	mov	r0, r6
   171c8:	bl	111c8 <strchr@plt>
   171cc:	cmp	r0, #0
   171d0:	beq	1728c <argp_error@@Base+0xa14>
   171d4:	ldr	r3, [r4]
   171d8:	ldr	r3, [r9, r3, lsl #2]
   171dc:	add	r3, r3, #1
   171e0:	str	r3, [r4, #20]
   171e4:	ldr	sl, [r4, #20]
   171e8:	add	fp, sl, #1
   171ec:	str	fp, [r4, #20]
   171f0:	ldrb	r7, [sl]
   171f4:	str	r7, [sp, #28]
   171f8:	mov	r1, r7
   171fc:	mov	r0, r6
   17200:	bl	111c8 <strchr@plt>
   17204:	ldrb	r3, [sl, #1]
   17208:	cmp	r3, #0
   1720c:	ldreq	r3, [r4]
   17210:	addeq	r3, r3, #1
   17214:	streq	r3, [r4]
   17218:	sub	r3, r7, #58	; 0x3a
   1721c:	uxtb	r3, r3
   17220:	cmp	r0, #0
   17224:	cmpne	r3, #1
   17228:	bls	172d4 <argp_error@@Base+0xa5c>
   1722c:	ldrb	r3, [r0]
   17230:	cmp	r3, #87	; 0x57
   17234:	beq	1730c <argp_error@@Base+0xa94>
   17238:	ldrb	r3, [r0, #1]
   1723c:	cmp	r3, #58	; 0x3a
   17240:	beq	173d8 <argp_error@@Base+0xb60>
   17244:	mov	r0, r7
   17248:	b	172e8 <argp_error@@Base+0xa70>
   1724c:	add	sl, sl, #2
   17250:	str	sl, [r4, #20]
   17254:	ldr	r3, [pc, #636]	; 174d8 <argp_error@@Base+0xc60>
   17258:	str	r3, [sp, #16]
   1725c:	str	r8, [sp, #12]
   17260:	str	r4, [sp, #8]
   17264:	ldr	r3, [sp, #76]	; 0x4c
   17268:	str	r3, [sp, #4]
   1726c:	ldr	r3, [sp, #72]	; 0x48
   17270:	str	r3, [sp]
   17274:	ldr	r3, [sp, #24]
   17278:	mov	r2, r6
   1727c:	mov	r1, r9
   17280:	mov	r0, r5
   17284:	bl	16a8c <argp_error@@Base+0x214>
   17288:	b	172e8 <argp_error@@Base+0xa70>
   1728c:	add	sl, sl, #1
   17290:	str	sl, [r4, #20]
   17294:	ldr	r3, [pc, #580]	; 174e0 <argp_error@@Base+0xc68>
   17298:	str	r3, [sp, #16]
   1729c:	str	r8, [sp, #12]
   172a0:	str	r4, [sp, #8]
   172a4:	ldr	r3, [sp, #76]	; 0x4c
   172a8:	str	r3, [sp, #4]
   172ac:	ldr	r3, [sp, #72]	; 0x48
   172b0:	str	r3, [sp]
   172b4:	ldr	r3, [sp, #24]
   172b8:	mov	r2, r6
   172bc:	mov	r1, r9
   172c0:	mov	r0, r5
   172c4:	bl	16a8c <argp_error@@Base+0x214>
   172c8:	cmn	r0, #1
   172cc:	bne	172e8 <argp_error@@Base+0xa70>
   172d0:	b	171d4 <argp_error@@Base+0x95c>
   172d4:	cmp	r8, #0
   172d8:	bne	172f0 <argp_error@@Base+0xa78>
   172dc:	ldr	r3, [sp, #28]
   172e0:	str	r3, [r4, #8]
   172e4:	mov	r0, #63	; 0x3f
   172e8:	add	sp, sp, #36	; 0x24
   172ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172f0:	ldr	r3, [sp, #28]
   172f4:	ldr	r2, [r9]
   172f8:	ldr	r1, [pc, #484]	; 174e4 <argp_error@@Base+0xc6c>
   172fc:	ldr	r0, [pc, #484]	; 174e8 <argp_error@@Base+0xc70>
   17300:	ldr	r0, [r0]
   17304:	bl	111d4 <fprintf@plt>
   17308:	b	172dc <argp_error@@Base+0xa64>
   1730c:	ldrb	r3, [r0, #1]
   17310:	ldr	r2, [sp, #24]
   17314:	cmp	r3, #59	; 0x3b
   17318:	movne	r3, #0
   1731c:	moveq	r3, #1
   17320:	cmp	r2, #0
   17324:	moveq	r3, #0
   17328:	cmp	r3, #0
   1732c:	beq	17238 <argp_error@@Base+0x9c0>
   17330:	ldrb	r3, [sl, #1]
   17334:	cmp	r3, #0
   17338:	strne	fp, [r4, #12]
   1733c:	bne	17354 <argp_error@@Base+0xadc>
   17340:	ldr	r3, [r4]
   17344:	cmp	r5, r3
   17348:	beq	17398 <argp_error@@Base+0xb20>
   1734c:	ldr	r3, [r9, r3, lsl #2]
   17350:	str	r3, [r4, #12]
   17354:	ldr	r3, [r4, #12]
   17358:	str	r3, [r4, #20]
   1735c:	mov	r3, #0
   17360:	str	r3, [r4, #12]
   17364:	ldr	r2, [pc, #384]	; 174ec <argp_error@@Base+0xc74>
   17368:	str	r2, [sp, #16]
   1736c:	str	r8, [sp, #12]
   17370:	str	r4, [sp, #8]
   17374:	str	r3, [sp, #4]
   17378:	ldr	r3, [sp, #72]	; 0x48
   1737c:	str	r3, [sp]
   17380:	ldr	r3, [sp, #24]
   17384:	mov	r2, r6
   17388:	mov	r1, r9
   1738c:	mov	r0, r5
   17390:	bl	16a8c <argp_error@@Base+0x214>
   17394:	b	172e8 <argp_error@@Base+0xa70>
   17398:	cmp	r8, #0
   1739c:	bne	173bc <argp_error@@Base+0xb44>
   173a0:	ldr	r3, [sp, #28]
   173a4:	str	r3, [r4, #8]
   173a8:	ldrb	r0, [r6]
   173ac:	cmp	r0, #58	; 0x3a
   173b0:	moveq	r0, #58	; 0x3a
   173b4:	movne	r0, #63	; 0x3f
   173b8:	b	172e8 <argp_error@@Base+0xa70>
   173bc:	ldr	r3, [sp, #28]
   173c0:	ldr	r2, [r9]
   173c4:	ldr	r1, [pc, #292]	; 174f0 <argp_error@@Base+0xc78>
   173c8:	ldr	r0, [pc, #280]	; 174e8 <argp_error@@Base+0xc70>
   173cc:	ldr	r0, [r0]
   173d0:	bl	111d4 <fprintf@plt>
   173d4:	b	173a0 <argp_error@@Base+0xb28>
   173d8:	ldrb	r3, [r0, #2]
   173dc:	cmp	r3, #58	; 0x3a
   173e0:	beq	1740c <argp_error@@Base+0xb94>
   173e4:	ldrb	r3, [sl, #1]
   173e8:	cmp	r3, #0
   173ec:	beq	17438 <argp_error@@Base+0xbc0>
   173f0:	str	fp, [r4, #12]
   173f4:	ldr	r3, [r4]
   173f8:	add	r3, r3, #1
   173fc:	str	r3, [r4]
   17400:	mov	r3, #0
   17404:	str	r3, [r4, #20]
   17408:	b	17244 <argp_error@@Base+0x9cc>
   1740c:	ldrb	r3, [sl, #1]
   17410:	cmp	r3, #0
   17414:	strne	fp, [r4, #12]
   17418:	ldrne	r3, [r4]
   1741c:	addne	r3, r3, #1
   17420:	strne	r3, [r4]
   17424:	moveq	r3, #0
   17428:	streq	r3, [r4, #12]
   1742c:	mov	r3, #0
   17430:	str	r3, [r4, #20]
   17434:	b	17244 <argp_error@@Base+0x9cc>
   17438:	ldr	r3, [r4]
   1743c:	cmp	r5, r3
   17440:	beq	17458 <argp_error@@Base+0xbe0>
   17444:	add	r2, r3, #1
   17448:	str	r2, [r4]
   1744c:	ldr	r3, [r9, r3, lsl #2]
   17450:	str	r3, [r4, #12]
   17454:	b	17400 <argp_error@@Base+0xb88>
   17458:	cmp	r8, #0
   1745c:	bne	1747c <argp_error@@Base+0xc04>
   17460:	ldr	r3, [sp, #28]
   17464:	str	r3, [r4, #8]
   17468:	ldrb	r7, [r6]
   1746c:	cmp	r7, #58	; 0x3a
   17470:	moveq	r7, #58	; 0x3a
   17474:	movne	r7, #63	; 0x3f
   17478:	b	17400 <argp_error@@Base+0xb88>
   1747c:	ldr	r3, [sp, #28]
   17480:	ldr	r2, [r9]
   17484:	ldr	r1, [pc, #100]	; 174f0 <argp_error@@Base+0xc78>
   17488:	ldr	r0, [pc, #88]	; 174e8 <argp_error@@Base+0xc70>
   1748c:	ldr	r0, [r0]
   17490:	bl	111d4 <fprintf@plt>
   17494:	b	17460 <argp_error@@Base+0xbe8>
   17498:	mvn	r0, #0
   1749c:	b	172e8 <argp_error@@Base+0xa70>
   174a0:	mvn	r0, #0
   174a4:	b	172e8 <argp_error@@Base+0xa70>
   174a8:	ldrb	r3, [sl]
   174ac:	cmp	r3, #45	; 0x2d
   174b0:	beq	1718c <argp_error@@Base+0x914>
   174b4:	ldr	r3, [r4, #24]
   174b8:	cmp	r3, #0
   174bc:	beq	174a0 <argp_error@@Base+0xc28>
   174c0:	add	r3, r7, #1
   174c4:	str	r3, [r4]
   174c8:	ldr	r3, [r9, r7, lsl #2]
   174cc:	str	r3, [r4, #12]
   174d0:	mov	r0, #1
   174d4:	b	172e8 <argp_error@@Base+0xa70>
   174d8:	ldrdeq	r8, [r1], -r4
   174dc:	strdeq	r8, [r1], -r0
   174e0:	andeq	r8, r1, r0, lsl #22
   174e4:	andeq	r8, r1, r4, lsl #22
   174e8:	andeq	r9, r2, r0, asr #4
   174ec:	andeq	r8, r1, ip, asr #22
   174f0:	andeq	r8, r1, r0, lsr #22
   174f4:	push	{r4, r5, lr}
   174f8:	sub	sp, sp, #20
   174fc:	ldr	r4, [pc, #84]	; 17558 <argp_error@@Base+0xce0>
   17500:	ldr	r5, [pc, #84]	; 1755c <argp_error@@Base+0xce4>
   17504:	ldr	ip, [r5]
   17508:	str	ip, [r4]
   1750c:	ldr	ip, [r5, #4]
   17510:	str	ip, [r4, #4]
   17514:	ldr	ip, [sp, #40]	; 0x28
   17518:	str	ip, [sp, #12]
   1751c:	str	r4, [sp, #8]
   17520:	ldr	ip, [sp, #36]	; 0x24
   17524:	str	ip, [sp, #4]
   17528:	ldr	ip, [sp, #32]
   1752c:	str	ip, [sp]
   17530:	bl	16f78 <argp_error@@Base+0x700>
   17534:	ldr	r3, [r4]
   17538:	str	r3, [r5]
   1753c:	ldr	r2, [r4, #12]
   17540:	ldr	r3, [pc, #24]	; 17560 <argp_error@@Base+0xce8>
   17544:	str	r2, [r3]
   17548:	ldr	r3, [r4, #8]
   1754c:	str	r3, [r5, #8]
   17550:	add	sp, sp, #20
   17554:	pop	{r4, r5, pc}
   17558:	andeq	r9, r2, r4, ror r2
   1755c:	andeq	r9, r2, r4, lsr #4
   17560:	andeq	r9, r2, r4, lsr #5
   17564:	push	{lr}		; (str lr, [sp, #-4]!)
   17568:	sub	sp, sp, #20
   1756c:	mov	r3, #1
   17570:	str	r3, [sp, #8]
   17574:	mov	r3, #0
   17578:	str	r3, [sp, #4]
   1757c:	str	r3, [sp]
   17580:	bl	174f4 <argp_error@@Base+0xc7c>
   17584:	add	sp, sp, #20
   17588:	pop	{pc}		; (ldr pc, [sp], #4)
   1758c:	push	{r4, r5, r6, r7, r8, lr}
   17590:	mov	r8, r0
   17594:	mov	r7, r1
   17598:	mov	r6, r2
   1759c:	mov	r5, r3
   175a0:	mov	r0, #36	; 0x24
   175a4:	bl	137c8 <argp_parse@@Base+0x120c>
   175a8:	subs	r4, r0, #0
   175ac:	beq	175ec <argp_error@@Base+0xd74>
   175b0:	str	r8, [r4]
   175b4:	str	r7, [r4, #4]
   175b8:	str	r6, [r4, #8]
   175bc:	str	r5, [r4, #12]
   175c0:	mov	r3, #0
   175c4:	str	r3, [r4, #20]
   175c8:	str	r3, [r4, #16]
   175cc:	mov	r0, #200	; 0xc8
   175d0:	bl	137c8 <argp_parse@@Base+0x120c>
   175d4:	str	r0, [r4, #24]
   175d8:	cmp	r0, #0
   175dc:	strne	r0, [r4, #28]
   175e0:	addne	r0, r0, #200	; 0xc8
   175e4:	strne	r0, [r4, #32]
   175e8:	beq	175f4 <argp_error@@Base+0xd7c>
   175ec:	mov	r0, r4
   175f0:	pop	{r4, r5, r6, r7, r8, pc}
   175f4:	mov	r0, r4
   175f8:	bl	131b0 <argp_parse@@Base+0xbf4>
   175fc:	mov	r4, #0
   17600:	b	175ec <argp_error@@Base+0xd74>
   17604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17608:	sub	sp, sp, #20
   1760c:	mov	r4, r0
   17610:	ldr	r2, [r0, #24]
   17614:	ldr	r3, [r0, #16]
   17618:	add	r9, r2, r3
   1761c:	mov	sl, #32
   17620:	b	176cc <argp_error@@Base+0xe54>
   17624:	add	r5, r5, #1
   17628:	cmp	r6, r5
   1762c:	beq	1765c <argp_error@@Base+0xde4>
   17630:	ldr	r0, [r4]
   17634:	ldr	r3, [r0, #20]
   17638:	ldr	r2, [r0, #24]
   1763c:	cmp	r3, r2
   17640:	addcc	r2, r3, #1
   17644:	strcc	r2, [r0, #20]
   17648:	strbcc	sl, [r3]
   1764c:	bcc	17624 <argp_error@@Base+0xdac>
   17650:	mov	r1, sl
   17654:	bl	11240 <__overflow@plt>
   17658:	b	17624 <argp_error@@Base+0xdac>
   1765c:	str	r6, [r4, #20]
   17660:	ldr	fp, [r4, #28]
   17664:	str	fp, [sp, #8]
   17668:	str	r9, [sp, #4]
   1766c:	sub	r3, fp, r9
   17670:	str	r3, [sp]
   17674:	mov	r2, r3
   17678:	mov	r1, #10
   1767c:	mov	r0, r9
   17680:	bl	11228 <memchr@plt>
   17684:	mov	r7, r0
   17688:	ldr	r3, [r4, #20]
   1768c:	cmp	r3, #0
   17690:	movlt	r3, #0
   17694:	strlt	r3, [r4, #20]
   17698:	cmp	r7, #0
   1769c:	beq	1773c <argp_error@@Base+0xec4>
   176a0:	ldr	r0, [r4, #20]
   176a4:	mov	r5, r7
   176a8:	ldr	r8, [r4, #8]
   176ac:	ldr	r3, [sp, #4]
   176b0:	sub	r3, r7, r3
   176b4:	add	r3, r3, r0
   176b8:	cmp	r3, r8
   176bc:	bge	1778c <argp_error@@Base+0xf14>
   176c0:	mov	r3, #0
   176c4:	str	r3, [r4, #20]
   176c8:	add	r9, r7, #1
   176cc:	ldr	fp, [r4, #28]
   176d0:	cmp	r9, fp
   176d4:	bcs	17774 <argp_error@@Base+0xefc>
   176d8:	ldr	r3, [r4, #20]
   176dc:	cmp	r3, #0
   176e0:	bne	17660 <argp_error@@Base+0xde8>
   176e4:	ldr	r6, [r4, #4]
   176e8:	cmp	r6, #0
   176ec:	beq	17b38 <argp_error@@Base+0x12c0>
   176f0:	add	r3, fp, r6
   176f4:	ldr	r2, [r4, #32]
   176f8:	cmp	r2, r3
   176fc:	movls	r5, #0
   17700:	bls	17630 <argp_error@@Base+0xdb8>
   17704:	add	r5, r9, r6
   17708:	sub	r2, fp, r9
   1770c:	mov	r1, r9
   17710:	mov	r0, r5
   17714:	bl	11054 <memmove@plt>
   17718:	ldr	r3, [r4, #28]
   1771c:	add	r3, r3, r6
   17720:	str	r3, [r4, #28]
   17724:	mov	r2, r6
   17728:	mov	r1, sl
   1772c:	mov	r0, r9
   17730:	bl	11210 <memset@plt>
   17734:	mov	r9, r5
   17738:	b	1765c <argp_error@@Base+0xde4>
   1773c:	ldr	r3, [r4, #20]
   17740:	ldr	r2, [sp]
   17744:	add	r3, r2, r3
   17748:	ldr	r6, [r4, #8]
   1774c:	cmp	r3, r6
   17750:	bcc	17770 <argp_error@@Base+0xef8>
   17754:	sub	r6, r6, #1
   17758:	ldr	r3, [r4, #12]
   1775c:	str	r3, [sp, #12]
   17760:	cmp	r3, #0
   17764:	blt	17880 <argp_error@@Base+0x1008>
   17768:	mov	r7, fp
   1776c:	b	177a0 <argp_error@@Base+0xf28>
   17770:	str	r3, [r4, #20]
   17774:	ldr	r3, [r4, #28]
   17778:	ldr	r2, [r4, #24]
   1777c:	sub	r3, r3, r2
   17780:	str	r3, [r4, #16]
   17784:	add	sp, sp, #20
   17788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1778c:	sub	r6, r8, #1
   17790:	ldr	r3, [r4, #12]
   17794:	str	r3, [sp, #12]
   17798:	cmp	r3, #0
   1779c:	blt	17834 <argp_error@@Base+0xfbc>
   177a0:	ldr	r5, [r4, #20]
   177a4:	rsb	r5, r5, #1
   177a8:	add	r5, r5, r6
   177ac:	adds	r5, r9, r5
   177b0:	bcs	17b60 <argp_error@@Base+0x12e8>
   177b4:	bl	111a4 <__ctype_b_loc@plt>
   177b8:	ldr	r0, [r0]
   177bc:	mov	r3, r5
   177c0:	mov	r1, r3
   177c4:	sub	r3, r3, #1
   177c8:	ldrb	r2, [r1]
   177cc:	lsl	r2, r2, #1
   177d0:	ldrh	r2, [r0, r2]
   177d4:	tst	r2, #1
   177d8:	bne	178a0 <argp_error@@Base+0x1028>
   177dc:	mov	r1, r3
   177e0:	cmp	r3, r9
   177e4:	bcs	177c0 <argp_error@@Base+0xf48>
   177e8:	add	r6, r1, #1
   177ec:	cmp	r6, r9
   177f0:	bhi	178dc <argp_error@@Base+0x1064>
   177f4:	cmp	r5, r7
   177f8:	bcs	1798c <argp_error@@Base+0x1114>
   177fc:	add	r6, r5, #1
   17800:	mov	r8, r7
   17804:	mov	r5, r6
   17808:	cmp	r8, r6
   1780c:	beq	1798c <argp_error@@Base+0x1114>
   17810:	bl	111a4 <__ctype_b_loc@plt>
   17814:	add	r6, r6, #1
   17818:	ldrb	r3, [r5]
   1781c:	ldr	r2, [r0]
   17820:	lsl	r3, r3, #1
   17824:	ldrh	r3, [r2, r3]
   17828:	tst	r3, #1
   1782c:	beq	17804 <argp_error@@Base+0xf8c>
   17830:	b	179a0 <argp_error@@Base+0x1128>
   17834:	cmp	fp, r7
   17838:	bls	17880 <argp_error@@Base+0x1008>
   1783c:	sub	r0, r6, r0
   17840:	ldr	r3, [sp, #8]
   17844:	sub	r2, r3, r7
   17848:	mov	r1, r7
   1784c:	add	r0, r9, r0
   17850:	bl	11054 <memmove@plt>
   17854:	ldr	r3, [r4, #20]
   17858:	sub	r6, r6, r3
   1785c:	add	r6, r9, r6
   17860:	sub	r5, r6, r7
   17864:	ldr	r3, [r4, #28]
   17868:	sub	r5, r3, r5
   1786c:	str	r5, [r4, #28]
   17870:	mov	r3, #0
   17874:	str	r3, [r4, #20]
   17878:	add	r9, r9, r8
   1787c:	b	176cc <argp_error@@Base+0xe54>
   17880:	ldr	r3, [r4, #20]
   17884:	ldr	r2, [sp]
   17888:	add	r3, r2, r3
   1788c:	str	r3, [r4, #20]
   17890:	sub	r3, r6, r3
   17894:	add	r3, fp, r3
   17898:	str	r3, [r4, #28]
   1789c:	b	17774 <argp_error@@Base+0xefc>
   178a0:	add	r6, r1, #1
   178a4:	cmp	r6, r9
   178a8:	bls	177f4 <argp_error@@Base+0xf7c>
   178ac:	cmp	r1, r9
   178b0:	bcc	178dc <argp_error@@Base+0x1064>
   178b4:	sub	ip, r9, #1
   178b8:	mov	r1, r3
   178bc:	cmp	ip, r3
   178c0:	beq	178dc <argp_error@@Base+0x1064>
   178c4:	sub	r3, r3, #1
   178c8:	ldrb	r2, [r1]
   178cc:	lsl	r2, r2, #1
   178d0:	ldrh	r2, [r0, r2]
   178d4:	tst	r2, #1
   178d8:	bne	178b8 <argp_error@@Base+0x1040>
   178dc:	add	r5, r1, #1
   178e0:	ldr	r3, [sp]
   178e4:	add	r3, r3, #1
   178e8:	add	r3, r9, r3
   178ec:	cmp	r6, r3
   178f0:	beq	179c4 <argp_error@@Base+0x114c>
   178f4:	add	r3, r5, #1
   178f8:	sub	r3, r6, r3
   178fc:	ldr	r2, [sp, #12]
   17900:	cmp	r3, r2
   17904:	bge	179dc <argp_error@@Base+0x1164>
   17908:	cmp	r6, fp
   1790c:	bcs	179dc <argp_error@@Base+0x1164>
   17910:	ldr	r3, [r4, #32]
   17914:	ldr	r2, [sp, #8]
   17918:	sub	r3, r3, r2
   1791c:	ldr	r2, [sp, #12]
   17920:	add	r2, r2, #1
   17924:	cmp	r3, r2
   17928:	bgt	17a24 <argp_error@@Base+0x11ac>
   1792c:	ldr	r0, [r4, #24]
   17930:	cmp	r5, r0
   17934:	bls	17948 <argp_error@@Base+0x10d0>
   17938:	ldr	r3, [r4]
   1793c:	sub	r2, r5, r0
   17940:	mov	r1, #1
   17944:	bl	1109c <fwrite_unlocked@plt>
   17948:	ldr	r0, [r4]
   1794c:	ldr	r3, [r0, #20]
   17950:	ldr	r2, [r0, #24]
   17954:	cmp	r3, r2
   17958:	addcc	r2, r3, #1
   1795c:	strcc	r2, [r0, #20]
   17960:	movcc	r2, #10
   17964:	strbcc	r2, [r3]
   17968:	bcs	17a70 <argp_error@@Base+0x11f8>
   1796c:	ldr	r7, [r4, #24]
   17970:	ldr	r3, [sp, #4]
   17974:	sub	r3, r3, r7
   17978:	ldr	r2, [sp]
   1797c:	add	r3, r2, r3
   17980:	str	r3, [sp]
   17984:	mov	r9, r7
   17988:	b	179ec <argp_error@@Base+0x1174>
   1798c:	cmp	r5, r7
   17990:	moveq	r3, #0
   17994:	streq	r3, [r4, #20]
   17998:	addeq	r9, r7, #1
   1799c:	beq	176cc <argp_error@@Base+0xe54>
   179a0:	bl	111a4 <__ctype_b_loc@plt>
   179a4:	ldr	r2, [r0]
   179a8:	mov	r6, r5
   179ac:	ldrb	r3, [r6, #1]!
   179b0:	lsl	r3, r3, #1
   179b4:	ldrh	r3, [r2, r3]
   179b8:	tst	r3, #1
   179bc:	bne	179ac <argp_error@@Base+0x1134>
   179c0:	b	178e0 <argp_error@@Base+0x1068>
   179c4:	ldr	r3, [r4, #32]
   179c8:	sub	r3, r3, r5
   179cc:	ldr	r2, [sp, #12]
   179d0:	add	r2, r2, #1
   179d4:	cmp	r3, r2
   179d8:	blt	17908 <argp_error@@Base+0x1090>
   179dc:	mov	r3, #10
   179e0:	strb	r3, [r5]
   179e4:	mov	r7, r9
   179e8:	add	r9, r5, #1
   179ec:	mov	r8, r6
   179f0:	ldr	r3, [r4, #12]
   179f4:	sub	r2, r6, r9
   179f8:	cmp	r2, r3
   179fc:	bge	17a8c <argp_error@@Base+0x1214>
   17a00:	ldr	r2, [sp]
   17a04:	add	r2, r2, #1
   17a08:	add	r2, r7, r2
   17a0c:	cmp	r6, r2
   17a10:	beq	17a7c <argp_error@@Base+0x1204>
   17a14:	cmp	r3, #0
   17a18:	movgt	r5, #0
   17a1c:	bgt	17af0 <argp_error@@Base+0x1278>
   17a20:	b	17ab0 <argp_error@@Base+0x1238>
   17a24:	ldr	r3, [sp, #8]
   17a28:	sub	r7, r3, r6
   17a2c:	mov	r0, r2
   17a30:	mov	r2, r7
   17a34:	mov	r1, r6
   17a38:	add	r0, r5, r0
   17a3c:	bl	11054 <memmove@plt>
   17a40:	ldr	r6, [r4, #12]
   17a44:	add	r6, r6, #1
   17a48:	add	r6, r5, r6
   17a4c:	add	r7, r6, r7
   17a50:	ldr	r3, [sp, #4]
   17a54:	sub	r3, r7, r3
   17a58:	str	r3, [sp]
   17a5c:	mov	r3, #10
   17a60:	strb	r3, [r5]
   17a64:	mov	r7, r9
   17a68:	add	r9, r5, #1
   17a6c:	b	179ec <argp_error@@Base+0x1174>
   17a70:	mov	r1, #10
   17a74:	bl	11240 <__overflow@plt>
   17a78:	b	1796c <argp_error@@Base+0x10f4>
   17a7c:	ldr	r2, [r4, #32]
   17a80:	sub	r2, r2, r6
   17a84:	cmp	r3, r2
   17a88:	bgt	17a14 <argp_error@@Base+0x119c>
   17a8c:	cmp	r3, #0
   17a90:	ble	17ab0 <argp_error@@Base+0x1238>
   17a94:	mov	r3, r9
   17a98:	strb	sl, [r3], #1
   17a9c:	sub	r1, r3, r9
   17aa0:	ldr	r2, [r4, #12]
   17aa4:	cmp	r1, r2
   17aa8:	blt	17a98 <argp_error@@Base+0x1220>
   17aac:	mov	r9, r3
   17ab0:	cmp	r9, r6
   17ab4:	bcc	17b1c <argp_error@@Base+0x12a4>
   17ab8:	sub	r7, r8, r7
   17abc:	ldr	r3, [sp]
   17ac0:	sub	r7, r3, r7
   17ac4:	add	r7, r9, r7
   17ac8:	str	r7, [r4, #28]
   17acc:	ldr	r3, [r4, #12]
   17ad0:	cmp	r3, #0
   17ad4:	mvneq	r3, #0
   17ad8:	str	r3, [r4, #20]
   17adc:	b	176cc <argp_error@@Base+0xe54>
   17ae0:	add	r5, r5, #1
   17ae4:	ldr	r3, [r4, #12]
   17ae8:	cmp	r3, r5
   17aec:	ble	17ab0 <argp_error@@Base+0x1238>
   17af0:	ldr	r0, [r4]
   17af4:	ldr	r3, [r0, #20]
   17af8:	ldr	r2, [r0, #24]
   17afc:	cmp	r3, r2
   17b00:	addcc	r2, r3, #1
   17b04:	strcc	r2, [r0, #20]
   17b08:	strbcc	sl, [r3]
   17b0c:	bcc	17ae0 <argp_error@@Base+0x1268>
   17b10:	mov	r1, sl
   17b14:	bl	11240 <__overflow@plt>
   17b18:	b	17ae0 <argp_error@@Base+0x1268>
   17b1c:	ldr	r3, [sp]
   17b20:	add	r2, r7, r3
   17b24:	sub	r2, r2, r8
   17b28:	mov	r1, r6
   17b2c:	mov	r0, r9
   17b30:	bl	11054 <memmove@plt>
   17b34:	b	17ab8 <argp_error@@Base+0x1240>
   17b38:	str	fp, [sp, #8]
   17b3c:	str	r9, [sp, #4]
   17b40:	sub	r3, fp, r9
   17b44:	str	r3, [sp]
   17b48:	mov	r2, r3
   17b4c:	mov	r1, #10
   17b50:	mov	r0, r9
   17b54:	bl	11228 <memchr@plt>
   17b58:	mov	r7, r0
   17b5c:	b	17698 <argp_error@@Base+0xe20>
   17b60:	mov	r1, r5
   17b64:	b	177e8 <argp_error@@Base+0xf70>
   17b68:	push	{r4, lr}
   17b6c:	mov	r4, r0
   17b70:	bl	17604 <argp_error@@Base+0xd8c>
   17b74:	ldr	r2, [r4, #28]
   17b78:	ldr	r0, [r4, #24]
   17b7c:	cmp	r2, r0
   17b80:	bls	17b94 <argp_error@@Base+0x131c>
   17b84:	ldr	r3, [r4]
   17b88:	sub	r2, r2, r0
   17b8c:	mov	r1, #1
   17b90:	bl	1109c <fwrite_unlocked@plt>
   17b94:	ldr	r0, [r4, #24]
   17b98:	bl	131b0 <argp_parse@@Base+0xbf4>
   17b9c:	mov	r0, r4
   17ba0:	bl	131b0 <argp_parse@@Base+0xbf4>
   17ba4:	pop	{r4, pc}
   17ba8:	ldr	r3, [r0, #32]
   17bac:	ldr	r2, [r0, #28]
   17bb0:	sub	r3, r3, r2
   17bb4:	cmp	r3, r1
   17bb8:	bcc	17bc4 <argp_error@@Base+0x134c>
   17bbc:	mov	r0, #1
   17bc0:	bx	lr
   17bc4:	push	{r4, r5, r6, lr}
   17bc8:	mov	r5, r1
   17bcc:	mov	r4, r0
   17bd0:	bl	17604 <argp_error@@Base+0xd8c>
   17bd4:	ldr	r0, [r4, #24]
   17bd8:	ldr	r2, [r4, #28]
   17bdc:	ldr	r3, [r4]
   17be0:	sub	r2, r2, r0
   17be4:	mov	r1, #1
   17be8:	bl	1109c <fwrite_unlocked@plt>
   17bec:	ldr	r2, [r4, #28]
   17bf0:	ldr	r3, [r4, #24]
   17bf4:	sub	r1, r2, r3
   17bf8:	cmp	r0, r1
   17bfc:	bne	17c40 <argp_error@@Base+0x13c8>
   17c00:	str	r3, [r4, #28]
   17c04:	mov	r2, #0
   17c08:	str	r2, [r4, #16]
   17c0c:	ldr	r1, [r4, #32]
   17c10:	sub	r1, r1, r3
   17c14:	cmp	r5, r1
   17c18:	bls	17c38 <argp_error@@Base+0x13c0>
   17c1c:	adds	r5, r5, r1
   17c20:	bcc	17c6c <argp_error@@Base+0x13f4>
   17c24:	bl	111ec <__errno_location@plt>
   17c28:	mov	r3, #12
   17c2c:	str	r3, [r0]
   17c30:	mov	r0, #0
   17c34:	pop	{r4, r5, r6, pc}
   17c38:	mov	r0, #1
   17c3c:	pop	{r4, r5, r6, pc}
   17c40:	sub	r2, r2, r0
   17c44:	str	r2, [r4, #28]
   17c48:	ldr	r1, [r4, #16]
   17c4c:	sub	r1, r1, r0
   17c50:	str	r1, [r4, #16]
   17c54:	sub	r2, r2, r3
   17c58:	add	r1, r3, r0
   17c5c:	mov	r0, r3
   17c60:	bl	11054 <memmove@plt>
   17c64:	mov	r0, #0
   17c68:	pop	{r4, r5, r6, pc}
   17c6c:	mov	r1, r5
   17c70:	mov	r0, r3
   17c74:	bl	17d18 <argp_error@@Base+0x14a0>
   17c78:	cmp	r0, #0
   17c7c:	beq	17c24 <argp_error@@Base+0x13ac>
   17c80:	str	r0, [r4, #24]
   17c84:	add	r5, r0, r5
   17c88:	str	r5, [r4, #32]
   17c8c:	str	r0, [r4, #28]
   17c90:	mov	r0, #1
   17c94:	pop	{r4, r5, r6, pc}
   17c98:	push	{r1, r2, r3}
   17c9c:	push	{r4, r5, r6, r7, lr}
   17ca0:	sub	sp, sp, #8
   17ca4:	mov	r5, r0
   17ca8:	ldr	r7, [sp, #28]
   17cac:	mov	r1, #150	; 0x96
   17cb0:	add	r6, sp, #32
   17cb4:	mov	r0, r5
   17cb8:	bl	17ba8 <argp_error@@Base+0x1330>
   17cbc:	cmp	r0, #0
   17cc0:	beq	17cf4 <argp_error@@Base+0x147c>
   17cc4:	str	r6, [sp, #4]
   17cc8:	ldr	r0, [r5, #28]
   17ccc:	ldr	r4, [r5, #32]
   17cd0:	sub	r4, r4, r0
   17cd4:	mov	r3, r6
   17cd8:	mov	r2, r7
   17cdc:	mov	r1, r4
   17ce0:	bl	112a0 <vsnprintf@plt>
   17ce4:	cmp	r4, r0
   17ce8:	bhi	17cfc <argp_error@@Base+0x1484>
   17cec:	add	r1, r0, #1
   17cf0:	b	17cb4 <argp_error@@Base+0x143c>
   17cf4:	mvn	r0, #0
   17cf8:	b	17d08 <argp_error@@Base+0x1490>
   17cfc:	ldr	r3, [r5, #28]
   17d00:	add	r3, r3, r0
   17d04:	str	r3, [r5, #28]
   17d08:	add	sp, sp, #8
   17d0c:	pop	{r4, r5, r6, r7, lr}
   17d10:	add	sp, sp, #12
   17d14:	bx	lr
   17d18:	push	{r4, lr}
   17d1c:	cmp	r0, #0
   17d20:	beq	17d3c <argp_error@@Base+0x14c4>
   17d24:	cmp	r1, #0
   17d28:	beq	17d48 <argp_error@@Base+0x14d0>
   17d2c:	cmp	r1, #0
   17d30:	blt	17d54 <argp_error@@Base+0x14dc>
   17d34:	bl	110c0 <realloc@plt>
   17d38:	pop	{r4, pc}
   17d3c:	mov	r0, r1
   17d40:	bl	137c8 <argp_parse@@Base+0x120c>
   17d44:	pop	{r4, pc}
   17d48:	bl	131b0 <argp_parse@@Base+0xbf4>
   17d4c:	mov	r0, #0
   17d50:	pop	{r4, pc}
   17d54:	bl	111ec <__errno_location@plt>
   17d58:	mov	r3, #12
   17d5c:	str	r3, [r0]
   17d60:	mov	r0, #0
   17d64:	pop	{r4, pc}
   17d68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d6c:	mov	r7, r0
   17d70:	ldr	r6, [pc, #72]	; 17dc0 <argp_error@@Base+0x1548>
   17d74:	ldr	r5, [pc, #72]	; 17dc4 <argp_error@@Base+0x154c>
   17d78:	add	r6, pc, r6
   17d7c:	add	r5, pc, r5
   17d80:	sub	r6, r6, r5
   17d84:	mov	r8, r1
   17d88:	mov	r9, r2
   17d8c:	bl	10fc8 <fputs_unlocked@plt-0x20>
   17d90:	asrs	r6, r6, #2
   17d94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d98:	mov	r4, #0
   17d9c:	add	r4, r4, #1
   17da0:	ldr	r3, [r5], #4
   17da4:	mov	r2, r9
   17da8:	mov	r1, r8
   17dac:	mov	r0, r7
   17db0:	blx	r3
   17db4:	cmp	r6, r4
   17db8:	bne	17d9c <argp_error@@Base+0x1524>
   17dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17dc0:	andeq	r1, r1, r8, lsl #3
   17dc4:	andeq	r1, r1, r0, lsl #3
   17dc8:	bx	lr

Disassembly of section .fini:

00017dcc <.fini>:
   17dcc:	push	{r3, lr}
   17dd0:	pop	{r3, pc}
