
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000cc8 <_init>:
 cc8:	push	{r3, lr}
 ccc:	bl	ed4 <call_weak_fn>
 cd0:	pop	{r3, pc}

Disassembly of section .plt:

00000cd4 <.plt>:
 cd4:	push	{lr}		; (str lr, [sp, #-4]!)
 cd8:	ldr	lr, [pc, #4]	; ce4 <.plt+0x10>
 cdc:	add	lr, pc, lr
 ce0:	ldr	pc, [lr, #8]!
 ce4:	.word	0x0003031c

00000ce8 <calloc@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #48, 20	; 0x30000
 cf0:	ldr	pc, [ip, #796]!	; 0x31c

00000cf4 <strcmp@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #48, 20	; 0x30000
 cfc:	ldr	pc, [ip, #788]!	; 0x314

00000d00 <__cxa_finalize@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #48, 20	; 0x30000
 d08:	ldr	pc, [ip, #780]!	; 0x30c

00000d0c <printf@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #48, 20	; 0x30000
 d14:	ldr	pc, [ip, #772]!	; 0x304

00000d18 <fopen@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #48, 20	; 0x30000
 d20:	ldr	pc, [ip, #764]!	; 0x2fc

00000d24 <getprotobyname@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #48, 20	; 0x30000
 d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00000d30 <longjmp@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #48, 20	; 0x30000
 d38:	ldr	pc, [ip, #748]!	; 0x2ec

00000d3c <_setjmp@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #48, 20	; 0x30000
 d44:	ldr	pc, [ip, #740]!	; 0x2e4

00000d48 <free@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #48, 20	; 0x30000
 d50:	ldr	pc, [ip, #732]!	; 0x2dc

00000d54 <getnetbyname@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #48, 20	; 0x30000
 d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00000d60 <ferror@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #48, 20	; 0x30000
 d68:	ldr	pc, [ip, #716]!	; 0x2cc

00000d6c <memcpy@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #48, 20	; 0x30000
 d74:	ldr	pc, [ip, #708]!	; 0x2c4

00000d78 <strdup@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #48, 20	; 0x30000
 d80:	ldr	pc, [ip, #700]!	; 0x2bc

00000d84 <rewind@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #48, 20	; 0x30000
 d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00000d90 <realloc@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #48, 20	; 0x30000
 d98:	ldr	pc, [ip, #684]!	; 0x2ac

00000d9c <fwrite@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #48, 20	; 0x30000
 da4:	ldr	pc, [ip, #676]!	; 0x2a4

00000da8 <fread@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #48, 20	; 0x30000
 db0:	ldr	pc, [ip, #668]!	; 0x29c

00000db4 <puts@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #48, 20	; 0x30000
 dbc:	ldr	pc, [ip, #660]!	; 0x294

00000dc0 <malloc@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #48, 20	; 0x30000
 dc8:	ldr	pc, [ip, #652]!	; 0x28c

00000dcc <__gmon_start__@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #48, 20	; 0x30000
 dd4:	ldr	pc, [ip, #644]!	; 0x284

00000dd8 <__ctype_b_loc@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #48, 20	; 0x30000
 de0:	ldr	pc, [ip, #636]!	; 0x27c

00000de4 <exit@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #48, 20	; 0x30000
 dec:	ldr	pc, [ip, #628]!	; 0x274

00000df0 <strlen@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #48, 20	; 0x30000
 df8:	ldr	pc, [ip, #620]!	; 0x26c

00000dfc <strchr@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #48, 20	; 0x30000
 e04:	ldr	pc, [ip, #612]!	; 0x264

00000e08 <fprintf@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #48, 20	; 0x30000
 e10:	ldr	pc, [ip, #604]!	; 0x25c

00000e14 <__errno_location@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #48, 20	; 0x30000
 e1c:	ldr	pc, [ip, #596]!	; 0x254

00000e20 <getservbyname@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #48, 20	; 0x30000
 e28:	ldr	pc, [ip, #588]!	; 0x24c

00000e2c <memset@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #48, 20	; 0x30000
 e34:	ldr	pc, [ip, #580]!	; 0x244

00000e38 <putchar@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #48, 20	; 0x30000
 e40:	ldr	pc, [ip, #572]!	; 0x23c

00000e44 <strncpy@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #48, 20	; 0x30000
 e4c:	ldr	pc, [ip, #564]!	; 0x234

00000e50 <fileno@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #48, 20	; 0x30000
 e58:	ldr	pc, [ip, #556]!	; 0x22c

00000e5c <sscanf@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #48, 20	; 0x30000
 e64:	ldr	pc, [ip, #548]!	; 0x224

00000e68 <clearerr@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #48, 20	; 0x30000
 e70:	ldr	pc, [ip, #540]!	; 0x21c

00000e74 <vsnprintf@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #48, 20	; 0x30000
 e7c:	ldr	pc, [ip, #532]!	; 0x214

00000e80 <freeaddrinfo@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #48, 20	; 0x30000
 e88:	ldr	pc, [ip, #524]!	; 0x20c

00000e8c <getaddrinfo@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #48, 20	; 0x30000
 e94:	ldr	pc, [ip, #516]!	; 0x204

00000e98 <ffs@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #48, 20	; 0x30000
 ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00000ea4 <gethostbyname@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #48, 20	; 0x30000
 eac:	ldr	pc, [ip, #500]!	; 0x1f4

00000eb0 <isatty@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #48, 20	; 0x30000
 eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00000ebc <abort@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #48, 20	; 0x30000
 ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00000ec8 <getc@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #48, 20	; 0x30000
 ed0:	ldr	pc, [ip, #476]!	; 0x1dc

Disassembly of section .text:

00000ed4 <call_weak_fn>:
     ed4:	ldr	r3, [pc, #20]	; ef0 <call_weak_fn+0x1c>
     ed8:	ldr	r2, [pc, #20]	; ef4 <call_weak_fn+0x20>
     edc:	add	r3, pc, r3
     ee0:	ldr	r2, [r3, r2]
     ee4:	cmp	r2, #0
     ee8:	bxeq	lr
     eec:	b	dcc <__gmon_start__@plt>
     ef0:	.word	0x0003011c
     ef4:	.word	0x000000dc

00000ef8 <deregister_tm_clones>:
     ef8:	ldr	r0, [pc, #44]	; f2c <deregister_tm_clones+0x34>
     efc:	ldr	r3, [pc, #44]	; f30 <deregister_tm_clones+0x38>
     f00:	add	r0, pc, r0
     f04:	add	r3, pc, r3
     f08:	cmp	r3, r0
     f0c:	ldr	r3, [pc, #32]	; f34 <deregister_tm_clones+0x3c>
     f10:	add	r3, pc, r3
     f14:	bxeq	lr
     f18:	ldr	r2, [pc, #24]	; f38 <deregister_tm_clones+0x40>
     f1c:	ldr	r3, [r3, r2]
     f20:	cmp	r3, #0
     f24:	bxeq	lr
     f28:	bx	r3
     f2c:	.word	0x00030454
     f30:	.word	0x00030450
     f34:	.word	0x000300e8
     f38:	.word	0x000000bc

00000f3c <register_tm_clones>:
     f3c:	ldr	r0, [pc, #56]	; f7c <register_tm_clones+0x40>
     f40:	ldr	r3, [pc, #56]	; f80 <register_tm_clones+0x44>
     f44:	add	r0, pc, r0
     f48:	add	r3, pc, r3
     f4c:	sub	r1, r3, r0
     f50:	ldr	r3, [pc, #44]	; f84 <register_tm_clones+0x48>
     f54:	asr	r1, r1, #2
     f58:	add	r3, pc, r3
     f5c:	add	r1, r1, r1, lsr #31
     f60:	asrs	r1, r1, #1
     f64:	bxeq	lr
     f68:	ldr	r2, [pc, #24]	; f88 <register_tm_clones+0x4c>
     f6c:	ldr	r3, [r3, r2]
     f70:	cmp	r3, #0
     f74:	bxeq	lr
     f78:	bx	r3
     f7c:	.word	0x00030410
     f80:	.word	0x0003040c
     f84:	.word	0x000300a0
     f88:	.word	0x000000f8

00000f8c <__do_global_dtors_aux>:
     f8c:	ldr	r3, [pc, #76]	; fe0 <__do_global_dtors_aux+0x54>
     f90:	ldr	r2, [pc, #76]	; fe4 <__do_global_dtors_aux+0x58>
     f94:	add	r3, pc, r3
     f98:	add	r2, pc, r2
     f9c:	ldrb	r3, [r3]
     fa0:	cmp	r3, #0
     fa4:	bxne	lr
     fa8:	ldr	r3, [pc, #56]	; fe8 <__do_global_dtors_aux+0x5c>
     fac:	push	{r4, lr}
     fb0:	ldr	r3, [r2, r3]
     fb4:	cmp	r3, #0
     fb8:	beq	fc8 <__do_global_dtors_aux+0x3c>
     fbc:	ldr	r3, [pc, #40]	; fec <__do_global_dtors_aux+0x60>
     fc0:	ldr	r0, [pc, r3]
     fc4:	bl	d00 <__cxa_finalize@plt>
     fc8:	bl	ef8 <deregister_tm_clones>
     fcc:	ldr	r3, [pc, #28]	; ff0 <__do_global_dtors_aux+0x64>
     fd0:	mov	r2, #1
     fd4:	add	r3, pc, r3
     fd8:	strb	r2, [r3]
     fdc:	pop	{r4, pc}
     fe0:	.word	0x000303c4
     fe4:	.word	0x00030060
     fe8:	.word	0x000000b8
     fec:	.word	0x0003013c
     ff0:	.word	0x00030384

00000ff4 <frame_dummy>:
     ff4:	b	f3c <register_tm_clones>

00000ff8 <sfbpf_filter>:
     ff8:	cmp	r0, #0
     ffc:	bne	1008 <sfbpf_filter+0x10>
    1000:	mvn	r0, #0
    1004:	bx	lr
    1008:	strd	r4, [sp, #-16]!
    100c:	str	r6, [sp, #8]
    1010:	str	lr, [sp, #12]
    1014:	sub	sp, sp, #64	; 0x40
    1018:	sub	ip, r0, #8
    101c:	mov	r4, #0
    1020:	mov	r0, r4
    1024:	mov	r5, r2
    1028:	add	lr, ip, #8
    102c:	ldrh	r6, [ip, #8]
    1030:	cmp	r6, #177	; 0xb1
    1034:	addls	pc, pc, r6, lsl #2
    1038:	b	131c <sfbpf_filter+0x324>
    103c:	b	1494 <sfbpf_filter+0x49c>
    1040:	b	14a0 <sfbpf_filter+0x4a8>
    1044:	b	14dc <sfbpf_filter+0x4e4>
    1048:	b	14f4 <sfbpf_filter+0x4fc>
    104c:	b	1658 <sfbpf_filter+0x660>
    1050:	b	150c <sfbpf_filter+0x514>
    1054:	b	1320 <sfbpf_filter+0x328>
    1058:	b	16e4 <sfbpf_filter+0x6ec>
    105c:	b	131c <sfbpf_filter+0x324>
    1060:	b	131c <sfbpf_filter+0x324>
    1064:	b	131c <sfbpf_filter+0x324>
    1068:	b	131c <sfbpf_filter+0x324>
    106c:	b	15e8 <sfbpf_filter+0x5f0>
    1070:	b	131c <sfbpf_filter+0x324>
    1074:	b	131c <sfbpf_filter+0x324>
    1078:	b	131c <sfbpf_filter+0x324>
    107c:	b	131c <sfbpf_filter+0x324>
    1080:	b	131c <sfbpf_filter+0x324>
    1084:	b	131c <sfbpf_filter+0x324>
    1088:	b	131c <sfbpf_filter+0x324>
    108c:	b	1668 <sfbpf_filter+0x670>
    1090:	b	1550 <sfbpf_filter+0x558>
    1094:	b	1324 <sfbpf_filter+0x32c>
    1098:	b	131c <sfbpf_filter+0x324>
    109c:	b	131c <sfbpf_filter+0x324>
    10a0:	b	131c <sfbpf_filter+0x324>
    10a4:	b	131c <sfbpf_filter+0x324>
    10a8:	b	131c <sfbpf_filter+0x324>
    10ac:	b	15f4 <sfbpf_filter+0x5fc>
    10b0:	b	15b8 <sfbpf_filter+0x5c0>
    10b4:	b	131c <sfbpf_filter+0x324>
    10b8:	b	131c <sfbpf_filter+0x324>
    10bc:	b	1338 <sfbpf_filter+0x340>
    10c0:	b	131c <sfbpf_filter+0x324>
    10c4:	b	131c <sfbpf_filter+0x324>
    10c8:	b	131c <sfbpf_filter+0x324>
    10cc:	b	1678 <sfbpf_filter+0x680>
    10d0:	b	1518 <sfbpf_filter+0x520>
    10d4:	b	131c <sfbpf_filter+0x324>
    10d8:	b	131c <sfbpf_filter+0x324>
    10dc:	b	137c <sfbpf_filter+0x384>
    10e0:	b	131c <sfbpf_filter+0x324>
    10e4:	b	131c <sfbpf_filter+0x324>
    10e8:	b	131c <sfbpf_filter+0x324>
    10ec:	b	1600 <sfbpf_filter+0x608>
    10f0:	b	1588 <sfbpf_filter+0x590>
    10f4:	b	131c <sfbpf_filter+0x324>
    10f8:	b	131c <sfbpf_filter+0x324>
    10fc:	b	13ac <sfbpf_filter+0x3b4>
    1100:	b	131c <sfbpf_filter+0x324>
    1104:	b	131c <sfbpf_filter+0x324>
    1108:	b	131c <sfbpf_filter+0x324>
    110c:	b	1688 <sfbpf_filter+0x690>
    1110:	b	1534 <sfbpf_filter+0x53c>
    1114:	b	131c <sfbpf_filter+0x324>
    1118:	b	131c <sfbpf_filter+0x324>
    111c:	b	131c <sfbpf_filter+0x324>
    1120:	b	131c <sfbpf_filter+0x324>
    1124:	b	131c <sfbpf_filter+0x324>
    1128:	b	131c <sfbpf_filter+0x324>
    112c:	b	160c <sfbpf_filter+0x614>
    1130:	b	15a0 <sfbpf_filter+0x5a8>
    1134:	b	131c <sfbpf_filter+0x324>
    1138:	b	131c <sfbpf_filter+0x324>
    113c:	b	13cc <sfbpf_filter+0x3d4>
    1140:	b	131c <sfbpf_filter+0x324>
    1144:	b	131c <sfbpf_filter+0x324>
    1148:	b	131c <sfbpf_filter+0x324>
    114c:	b	16a8 <sfbpf_filter+0x6b0>
    1150:	b	156c <sfbpf_filter+0x574>
    1154:	b	131c <sfbpf_filter+0x324>
    1158:	b	131c <sfbpf_filter+0x324>
    115c:	b	1414 <sfbpf_filter+0x41c>
    1160:	b	131c <sfbpf_filter+0x324>
    1164:	b	131c <sfbpf_filter+0x324>
    1168:	b	131c <sfbpf_filter+0x324>
    116c:	b	1634 <sfbpf_filter+0x63c>
    1170:	b	15d0 <sfbpf_filter+0x5d8>
    1174:	b	131c <sfbpf_filter+0x324>
    1178:	b	131c <sfbpf_filter+0x324>
    117c:	b	1448 <sfbpf_filter+0x450>
    1180:	b	131c <sfbpf_filter+0x324>
    1184:	b	131c <sfbpf_filter+0x324>
    1188:	b	131c <sfbpf_filter+0x324>
    118c:	b	1698 <sfbpf_filter+0x6a0>
    1190:	b	131c <sfbpf_filter+0x324>
    1194:	b	131c <sfbpf_filter+0x324>
    1198:	b	131c <sfbpf_filter+0x324>
    119c:	b	131c <sfbpf_filter+0x324>
    11a0:	b	131c <sfbpf_filter+0x324>
    11a4:	b	131c <sfbpf_filter+0x324>
    11a8:	b	131c <sfbpf_filter+0x324>
    11ac:	b	1628 <sfbpf_filter+0x630>
    11b0:	b	131c <sfbpf_filter+0x324>
    11b4:	b	131c <sfbpf_filter+0x324>
    11b8:	b	131c <sfbpf_filter+0x324>
    11bc:	b	14ac <sfbpf_filter+0x4b4>
    11c0:	b	14c4 <sfbpf_filter+0x4cc>
    11c4:	b	131c <sfbpf_filter+0x324>
    11c8:	b	131c <sfbpf_filter+0x324>
    11cc:	b	16b8 <sfbpf_filter+0x6c0>
    11d0:	b	131c <sfbpf_filter+0x324>
    11d4:	b	131c <sfbpf_filter+0x324>
    11d8:	b	131c <sfbpf_filter+0x324>
    11dc:	b	131c <sfbpf_filter+0x324>
    11e0:	b	131c <sfbpf_filter+0x324>
    11e4:	b	131c <sfbpf_filter+0x324>
    11e8:	b	131c <sfbpf_filter+0x324>
    11ec:	b	1640 <sfbpf_filter+0x648>
    11f0:	b	131c <sfbpf_filter+0x324>
    11f4:	b	131c <sfbpf_filter+0x324>
    11f8:	b	131c <sfbpf_filter+0x324>
    11fc:	b	131c <sfbpf_filter+0x324>
    1200:	b	131c <sfbpf_filter+0x324>
    1204:	b	131c <sfbpf_filter+0x324>
    1208:	b	131c <sfbpf_filter+0x324>
    120c:	b	16c8 <sfbpf_filter+0x6d0>
    1210:	b	131c <sfbpf_filter+0x324>
    1214:	b	131c <sfbpf_filter+0x324>
    1218:	b	131c <sfbpf_filter+0x324>
    121c:	b	131c <sfbpf_filter+0x324>
    1220:	b	131c <sfbpf_filter+0x324>
    1224:	b	131c <sfbpf_filter+0x324>
    1228:	b	131c <sfbpf_filter+0x324>
    122c:	b	164c <sfbpf_filter+0x654>
    1230:	b	131c <sfbpf_filter+0x324>
    1234:	b	131c <sfbpf_filter+0x324>
    1238:	b	131c <sfbpf_filter+0x324>
    123c:	b	1304 <sfbpf_filter+0x30c>
    1240:	b	1310 <sfbpf_filter+0x318>
    1244:	b	131c <sfbpf_filter+0x324>
    1248:	b	131c <sfbpf_filter+0x324>
    124c:	b	16d8 <sfbpf_filter+0x6e0>
    1250:	b	131c <sfbpf_filter+0x324>
    1254:	b	131c <sfbpf_filter+0x324>
    1258:	b	16f0 <sfbpf_filter+0x6f8>
    125c:	b	131c <sfbpf_filter+0x324>
    1260:	b	131c <sfbpf_filter+0x324>
    1264:	b	131c <sfbpf_filter+0x324>
    1268:	b	131c <sfbpf_filter+0x324>
    126c:	b	131c <sfbpf_filter+0x324>
    1270:	b	131c <sfbpf_filter+0x324>
    1274:	b	131c <sfbpf_filter+0x324>
    1278:	b	131c <sfbpf_filter+0x324>
    127c:	b	131c <sfbpf_filter+0x324>
    1280:	b	131c <sfbpf_filter+0x324>
    1284:	b	131c <sfbpf_filter+0x324>
    1288:	b	131c <sfbpf_filter+0x324>
    128c:	b	131c <sfbpf_filter+0x324>
    1290:	b	131c <sfbpf_filter+0x324>
    1294:	b	131c <sfbpf_filter+0x324>
    1298:	b	131c <sfbpf_filter+0x324>
    129c:	b	131c <sfbpf_filter+0x324>
    12a0:	b	131c <sfbpf_filter+0x324>
    12a4:	b	131c <sfbpf_filter+0x324>
    12a8:	b	131c <sfbpf_filter+0x324>
    12ac:	b	131c <sfbpf_filter+0x324>
    12b0:	b	131c <sfbpf_filter+0x324>
    12b4:	b	131c <sfbpf_filter+0x324>
    12b8:	b	131c <sfbpf_filter+0x324>
    12bc:	b	131c <sfbpf_filter+0x324>
    12c0:	b	131c <sfbpf_filter+0x324>
    12c4:	b	131c <sfbpf_filter+0x324>
    12c8:	b	131c <sfbpf_filter+0x324>
    12cc:	b	131c <sfbpf_filter+0x324>
    12d0:	b	131c <sfbpf_filter+0x324>
    12d4:	b	131c <sfbpf_filter+0x324>
    12d8:	b	131c <sfbpf_filter+0x324>
    12dc:	b	131c <sfbpf_filter+0x324>
    12e0:	b	131c <sfbpf_filter+0x324>
    12e4:	b	131c <sfbpf_filter+0x324>
    12e8:	b	131c <sfbpf_filter+0x324>
    12ec:	b	131c <sfbpf_filter+0x324>
    12f0:	b	131c <sfbpf_filter+0x324>
    12f4:	b	131c <sfbpf_filter+0x324>
    12f8:	b	131c <sfbpf_filter+0x324>
    12fc:	b	131c <sfbpf_filter+0x324>
    1300:	b	146c <sfbpf_filter+0x474>
    1304:	mov	r0, r2
    1308:	mov	ip, lr
    130c:	b	1028 <sfbpf_filter+0x30>
    1310:	mov	r4, r5
    1314:	mov	ip, lr
    1318:	b	1028 <sfbpf_filter+0x30>
    131c:	bl	ebc <abort@plt>
    1320:	ldr	r0, [ip, #12]
    1324:	add	sp, sp, #64	; 0x40
    1328:	ldrd	r4, [sp]
    132c:	ldr	r6, [sp, #8]
    1330:	add	sp, sp, #12
    1334:	pop	{pc}		; (ldr pc, [sp], #4)
    1338:	ldr	r0, [ip, #12]
    133c:	add	ip, r0, #4
    1340:	cmp	ip, r3
    1344:	bls	1350 <sfbpf_filter+0x358>
    1348:	mov	r0, #0
    134c:	b	1324 <sfbpf_filter+0x32c>
    1350:	add	ip, r1, r0
    1354:	ldrb	r6, [r1, r0]
    1358:	ldrb	r0, [ip, #1]
    135c:	lsl	r0, r0, #16
    1360:	orr	r0, r0, r6, lsl #24
    1364:	ldrb	r6, [ip, #3]
    1368:	orr	r0, r0, r6
    136c:	ldrb	ip, [ip, #2]
    1370:	orr	r0, r0, ip, lsl #8
    1374:	mov	ip, lr
    1378:	b	1028 <sfbpf_filter+0x30>
    137c:	ldr	r0, [ip, #12]
    1380:	add	ip, r0, #2
    1384:	cmp	ip, r3
    1388:	bls	1394 <sfbpf_filter+0x39c>
    138c:	mov	r0, #0
    1390:	b	1324 <sfbpf_filter+0x32c>
    1394:	add	r6, r1, r0
    1398:	ldrb	ip, [r1, r0]
    139c:	ldrb	r0, [r6, #1]
    13a0:	orr	r0, r0, ip, lsl #8
    13a4:	mov	ip, lr
    13a8:	b	1028 <sfbpf_filter+0x30>
    13ac:	ldr	r0, [ip, #12]
    13b0:	cmp	r0, r3
    13b4:	bcc	13c0 <sfbpf_filter+0x3c8>
    13b8:	mov	r0, #0
    13bc:	b	1324 <sfbpf_filter+0x32c>
    13c0:	ldrb	r0, [r1, r0]
    13c4:	mov	ip, lr
    13c8:	b	1028 <sfbpf_filter+0x30>
    13cc:	ldr	r0, [ip, #12]
    13d0:	add	r0, r4, r0
    13d4:	add	ip, r0, #4
    13d8:	cmp	ip, r3
    13dc:	bls	13e8 <sfbpf_filter+0x3f0>
    13e0:	mov	r0, #0
    13e4:	b	1324 <sfbpf_filter+0x32c>
    13e8:	add	ip, r1, r0
    13ec:	ldrb	r6, [r1, r0]
    13f0:	ldrb	r0, [ip, #1]
    13f4:	lsl	r0, r0, #16
    13f8:	orr	r0, r0, r6, lsl #24
    13fc:	ldrb	r6, [ip, #3]
    1400:	orr	r0, r0, r6
    1404:	ldrb	ip, [ip, #2]
    1408:	orr	r0, r0, ip, lsl #8
    140c:	mov	ip, lr
    1410:	b	1028 <sfbpf_filter+0x30>
    1414:	ldr	r0, [ip, #12]
    1418:	add	r0, r4, r0
    141c:	add	ip, r0, #2
    1420:	cmp	ip, r3
    1424:	bls	1430 <sfbpf_filter+0x438>
    1428:	mov	r0, #0
    142c:	b	1324 <sfbpf_filter+0x32c>
    1430:	add	r6, r1, r0
    1434:	ldrb	ip, [r1, r0]
    1438:	ldrb	r0, [r6, #1]
    143c:	orr	r0, r0, ip, lsl #8
    1440:	mov	ip, lr
    1444:	b	1028 <sfbpf_filter+0x30>
    1448:	ldr	r0, [ip, #12]
    144c:	add	r0, r4, r0
    1450:	cmp	r0, r3
    1454:	bcc	1460 <sfbpf_filter+0x468>
    1458:	mov	r0, #0
    145c:	b	1324 <sfbpf_filter+0x32c>
    1460:	ldrb	r0, [r1, r0]
    1464:	mov	ip, lr
    1468:	b	1028 <sfbpf_filter+0x30>
    146c:	ldr	ip, [ip, #12]
    1470:	cmp	ip, r3
    1474:	bcc	1480 <sfbpf_filter+0x488>
    1478:	mov	r0, #0
    147c:	b	1324 <sfbpf_filter+0x32c>
    1480:	ldrb	r4, [r1, ip]
    1484:	lsl	r4, r4, #2
    1488:	and	r4, r4, #60	; 0x3c
    148c:	mov	ip, lr
    1490:	b	1028 <sfbpf_filter+0x30>
    1494:	ldr	r0, [ip, #12]
    1498:	mov	ip, lr
    149c:	b	1028 <sfbpf_filter+0x30>
    14a0:	ldr	r4, [ip, #12]
    14a4:	mov	ip, lr
    14a8:	b	1028 <sfbpf_filter+0x30>
    14ac:	ldr	r0, [ip, #12]
    14b0:	add	ip, sp, #64	; 0x40
    14b4:	add	r0, ip, r0, lsl #2
    14b8:	ldr	r0, [r0, #-64]	; 0xffffffc0
    14bc:	mov	ip, lr
    14c0:	b	1028 <sfbpf_filter+0x30>
    14c4:	ldr	ip, [ip, #12]
    14c8:	add	r4, sp, #64	; 0x40
    14cc:	add	ip, r4, ip, lsl #2
    14d0:	ldr	r4, [ip, #-64]	; 0xffffffc0
    14d4:	mov	ip, lr
    14d8:	b	1028 <sfbpf_filter+0x30>
    14dc:	ldr	ip, [ip, #12]
    14e0:	add	r6, sp, #64	; 0x40
    14e4:	add	ip, r6, ip, lsl #2
    14e8:	str	r0, [ip, #-64]	; 0xffffffc0
    14ec:	mov	ip, lr
    14f0:	b	1028 <sfbpf_filter+0x30>
    14f4:	ldr	ip, [ip, #12]
    14f8:	add	r6, sp, #64	; 0x40
    14fc:	add	ip, r6, ip, lsl #2
    1500:	str	r4, [ip, #-64]	; 0xffffffc0
    1504:	mov	ip, lr
    1508:	b	1028 <sfbpf_filter+0x30>
    150c:	ldr	ip, [ip, #12]
    1510:	add	ip, lr, ip, lsl #3
    1514:	b	1028 <sfbpf_filter+0x30>
    1518:	ldr	r6, [ip, #12]
    151c:	cmp	r6, r0
    1520:	ldrbcc	ip, [ip, #10]
    1524:	ldrbcs	ip, [ip, #11]
    1528:	lsl	ip, ip, #3
    152c:	add	ip, lr, ip
    1530:	b	1028 <sfbpf_filter+0x30>
    1534:	ldr	r6, [ip, #12]
    1538:	cmp	r6, r0
    153c:	ldrbls	ip, [ip, #10]
    1540:	ldrbhi	ip, [ip, #11]
    1544:	lsl	ip, ip, #3
    1548:	add	ip, lr, ip
    154c:	b	1028 <sfbpf_filter+0x30>
    1550:	ldr	r6, [ip, #12]
    1554:	cmp	r6, r0
    1558:	ldrbeq	ip, [ip, #10]
    155c:	ldrbne	ip, [ip, #11]
    1560:	lsl	ip, ip, #3
    1564:	add	ip, lr, ip
    1568:	b	1028 <sfbpf_filter+0x30>
    156c:	ldr	r6, [ip, #12]
    1570:	tst	r0, r6
    1574:	ldrbne	ip, [ip, #10]
    1578:	ldrbeq	ip, [ip, #11]
    157c:	lsl	ip, ip, #3
    1580:	add	ip, lr, ip
    1584:	b	1028 <sfbpf_filter+0x30>
    1588:	cmp	r0, r4
    158c:	ldrbhi	ip, [ip, #10]
    1590:	ldrbls	ip, [ip, #11]
    1594:	lsl	ip, ip, #3
    1598:	add	ip, lr, ip
    159c:	b	1028 <sfbpf_filter+0x30>
    15a0:	cmp	r0, r4
    15a4:	ldrbcs	ip, [ip, #10]
    15a8:	ldrbcc	ip, [ip, #11]
    15ac:	lsl	ip, ip, #3
    15b0:	add	ip, lr, ip
    15b4:	b	1028 <sfbpf_filter+0x30>
    15b8:	cmp	r0, r4
    15bc:	ldrbeq	ip, [ip, #10]
    15c0:	ldrbne	ip, [ip, #11]
    15c4:	lsl	ip, ip, #3
    15c8:	add	ip, lr, ip
    15cc:	b	1028 <sfbpf_filter+0x30>
    15d0:	tst	r0, r4
    15d4:	ldrbne	ip, [ip, #10]
    15d8:	ldrbeq	ip, [ip, #11]
    15dc:	lsl	ip, ip, #3
    15e0:	add	ip, lr, ip
    15e4:	b	1028 <sfbpf_filter+0x30>
    15e8:	add	r0, r0, r4
    15ec:	mov	ip, lr
    15f0:	b	1028 <sfbpf_filter+0x30>
    15f4:	sub	r0, r0, r4
    15f8:	mov	ip, lr
    15fc:	b	1028 <sfbpf_filter+0x30>
    1600:	mul	r0, r4, r0
    1604:	mov	ip, lr
    1608:	b	1028 <sfbpf_filter+0x30>
    160c:	cmp	r4, #0
    1610:	bne	161c <sfbpf_filter+0x624>
    1614:	mov	r0, r4
    1618:	b	1324 <sfbpf_filter+0x32c>
    161c:	udiv	r0, r0, r4
    1620:	mov	ip, lr
    1624:	b	1028 <sfbpf_filter+0x30>
    1628:	and	r0, r0, r4
    162c:	mov	ip, lr
    1630:	b	1028 <sfbpf_filter+0x30>
    1634:	orr	r0, r0, r4
    1638:	mov	ip, lr
    163c:	b	1028 <sfbpf_filter+0x30>
    1640:	lsl	r0, r0, r4
    1644:	mov	ip, lr
    1648:	b	1028 <sfbpf_filter+0x30>
    164c:	lsr	r0, r0, r4
    1650:	mov	ip, lr
    1654:	b	1028 <sfbpf_filter+0x30>
    1658:	ldr	ip, [ip, #12]
    165c:	add	r0, r0, ip
    1660:	mov	ip, lr
    1664:	b	1028 <sfbpf_filter+0x30>
    1668:	ldr	ip, [ip, #12]
    166c:	sub	r0, r0, ip
    1670:	mov	ip, lr
    1674:	b	1028 <sfbpf_filter+0x30>
    1678:	ldr	ip, [ip, #12]
    167c:	mul	r0, ip, r0
    1680:	mov	ip, lr
    1684:	b	1028 <sfbpf_filter+0x30>
    1688:	ldr	ip, [ip, #12]
    168c:	udiv	r0, r0, ip
    1690:	mov	ip, lr
    1694:	b	1028 <sfbpf_filter+0x30>
    1698:	ldr	ip, [ip, #12]
    169c:	and	r0, r0, ip
    16a0:	mov	ip, lr
    16a4:	b	1028 <sfbpf_filter+0x30>
    16a8:	ldr	ip, [ip, #12]
    16ac:	orr	r0, r0, ip
    16b0:	mov	ip, lr
    16b4:	b	1028 <sfbpf_filter+0x30>
    16b8:	ldr	ip, [ip, #12]
    16bc:	lsl	r0, r0, ip
    16c0:	mov	ip, lr
    16c4:	b	1028 <sfbpf_filter+0x30>
    16c8:	ldr	ip, [ip, #12]
    16cc:	lsr	r0, r0, ip
    16d0:	mov	ip, lr
    16d4:	b	1028 <sfbpf_filter+0x30>
    16d8:	rsb	r0, r0, #0
    16dc:	mov	ip, lr
    16e0:	b	1028 <sfbpf_filter+0x30>
    16e4:	mov	r4, r0
    16e8:	mov	ip, lr
    16ec:	b	1028 <sfbpf_filter+0x30>
    16f0:	mov	r0, r4
    16f4:	mov	ip, lr
    16f8:	b	1028 <sfbpf_filter+0x30>

000016fc <sfbpf_validate>:
    16fc:	cmp	r1, #0
    1700:	ble	1900 <sfbpf_validate+0x204>
    1704:	strd	r4, [sp, #-12]!
    1708:	str	lr, [sp, #8]
    170c:	mov	r5, r1
    1710:	mov	r2, r0
    1714:	mov	lr, #0
    1718:	b	1794 <sfbpf_validate+0x98>
    171c:	and	r3, r3, #224	; 0xe0
    1720:	cmp	r3, #64	; 0x40
    1724:	beq	1784 <sfbpf_validate+0x88>
    1728:	bls	1758 <sfbpf_validate+0x5c>
    172c:	cmp	r3, #128	; 0x80
    1730:	beq	1784 <sfbpf_validate+0x88>
    1734:	cmp	r3, #160	; 0xa0
    1738:	beq	1784 <sfbpf_validate+0x88>
    173c:	cmp	r3, #96	; 0x60
    1740:	bne	1910 <sfbpf_validate+0x214>
    1744:	ldr	r3, [r2, #4]
    1748:	cmp	r3, #15
    174c:	bls	1784 <sfbpf_validate+0x88>
    1750:	mov	r0, #0
    1754:	b	176c <sfbpf_validate+0x70>
    1758:	cmp	r3, #0
    175c:	beq	1784 <sfbpf_validate+0x88>
    1760:	cmp	r3, #32
    1764:	beq	1784 <sfbpf_validate+0x88>
    1768:	mov	r0, #0
    176c:	ldrd	r4, [sp]
    1770:	add	sp, sp, #8
    1774:	pop	{pc}		; (ldr pc, [sp], #4)
    1778:	ldr	r3, [r2, #4]
    177c:	cmp	r3, #15
    1780:	bhi	1918 <sfbpf_validate+0x21c>
    1784:	add	lr, lr, #1
    1788:	add	r2, r2, #8
    178c:	cmp	lr, r5
    1790:	beq	18e4 <sfbpf_validate+0x1e8>
    1794:	mov	r4, r2
    1798:	ldrh	r3, [r2]
    179c:	and	ip, r3, #7
    17a0:	cmp	ip, #7
    17a4:	addls	pc, pc, ip, lsl #2
    17a8:	b	1908 <sfbpf_validate+0x20c>
    17ac:	b	171c <sfbpf_validate+0x20>
    17b0:	b	171c <sfbpf_validate+0x20>
    17b4:	b	1778 <sfbpf_validate+0x7c>
    17b8:	b	1778 <sfbpf_validate+0x7c>
    17bc:	b	17cc <sfbpf_validate+0xd0>
    17c0:	b	1860 <sfbpf_validate+0x164>
    17c4:	b	1784 <sfbpf_validate+0x88>
    17c8:	b	1784 <sfbpf_validate+0x88>
    17cc:	and	ip, r3, #240	; 0xf0
    17d0:	cmp	ip, #64	; 0x40
    17d4:	beq	1784 <sfbpf_validate+0x88>
    17d8:	bhi	182c <sfbpf_validate+0x130>
    17dc:	cmp	ip, #16
    17e0:	beq	1784 <sfbpf_validate+0x88>
    17e4:	bls	1814 <sfbpf_validate+0x118>
    17e8:	cmp	ip, #32
    17ec:	beq	1784 <sfbpf_validate+0x88>
    17f0:	cmp	ip, #48	; 0x30
    17f4:	bne	1824 <sfbpf_validate+0x128>
    17f8:	tst	r3, #24
    17fc:	bne	1784 <sfbpf_validate+0x88>
    1800:	ldr	r3, [r2, #4]
    1804:	cmp	r3, #0
    1808:	bne	1784 <sfbpf_validate+0x88>
    180c:	mov	r0, #0
    1810:	b	176c <sfbpf_validate+0x70>
    1814:	cmp	ip, #0
    1818:	beq	1784 <sfbpf_validate+0x88>
    181c:	mov	r0, #0
    1820:	b	176c <sfbpf_validate+0x70>
    1824:	mov	r0, #0
    1828:	b	176c <sfbpf_validate+0x70>
    182c:	cmp	ip, #96	; 0x60
    1830:	beq	1784 <sfbpf_validate+0x88>
    1834:	bls	1850 <sfbpf_validate+0x154>
    1838:	cmp	ip, #112	; 0x70
    183c:	beq	1784 <sfbpf_validate+0x88>
    1840:	cmp	ip, #128	; 0x80
    1844:	beq	1784 <sfbpf_validate+0x88>
    1848:	mov	r0, #0
    184c:	b	176c <sfbpf_validate+0x70>
    1850:	cmp	ip, #80	; 0x50
    1854:	beq	1784 <sfbpf_validate+0x88>
    1858:	mov	r0, #0
    185c:	b	176c <sfbpf_validate+0x70>
    1860:	add	ip, lr, #1
    1864:	and	r3, r3, #240	; 0xf0
    1868:	cmp	r3, #32
    186c:	beq	18bc <sfbpf_validate+0x1c0>
    1870:	bhi	18a4 <sfbpf_validate+0x1a8>
    1874:	cmp	r3, #0
    1878:	bne	1894 <sfbpf_validate+0x198>
    187c:	ldr	r3, [r2, #4]
    1880:	add	ip, ip, r3
    1884:	cmp	ip, r5
    1888:	bcc	1784 <sfbpf_validate+0x88>
    188c:	mov	r0, #0
    1890:	b	176c <sfbpf_validate+0x70>
    1894:	cmp	r3, #16
    1898:	beq	18bc <sfbpf_validate+0x1c0>
    189c:	mov	r0, #0
    18a0:	b	176c <sfbpf_validate+0x70>
    18a4:	cmp	r3, #48	; 0x30
    18a8:	beq	18bc <sfbpf_validate+0x1c0>
    18ac:	cmp	r3, #64	; 0x40
    18b0:	beq	18bc <sfbpf_validate+0x1c0>
    18b4:	mov	r0, #0
    18b8:	b	176c <sfbpf_validate+0x70>
    18bc:	ldrb	r3, [r4, #2]
    18c0:	add	r3, r3, ip
    18c4:	cmp	r3, r5
    18c8:	bcs	1920 <sfbpf_validate+0x224>
    18cc:	ldrb	r3, [r4, #3]
    18d0:	add	ip, r3, ip
    18d4:	cmp	ip, r5
    18d8:	bcc	1784 <sfbpf_validate+0x88>
    18dc:	mov	r0, #0
    18e0:	b	176c <sfbpf_validate+0x70>
    18e4:	add	r0, r0, r1, lsl #3
    18e8:	ldrh	r0, [r0, #-8]
    18ec:	and	r0, r0, #7
    18f0:	cmp	r0, #6
    18f4:	movne	r0, #0
    18f8:	moveq	r0, #1
    18fc:	b	176c <sfbpf_validate+0x70>
    1900:	mov	r0, #0
    1904:	bx	lr
    1908:	mov	r0, #0
    190c:	b	176c <sfbpf_validate+0x70>
    1910:	mov	r0, #0
    1914:	b	176c <sfbpf_validate+0x70>
    1918:	mov	r0, #0
    191c:	b	176c <sfbpf_validate+0x70>
    1920:	mov	r0, #0
    1924:	b	176c <sfbpf_validate+0x70>

00001928 <get_code_name>:
    1928:	mov	r3, r0
    192c:	ldr	r0, [r0, #4]
    1930:	cmp	r0, #0
    1934:	beq	195c <get_code_name+0x34>
    1938:	ldr	r2, [r3]
    193c:	cmp	r1, r2
    1940:	beq	195c <get_code_name+0x34>
    1944:	ldr	r0, [r3, #12]
    1948:	cmp	r0, #0
    194c:	beq	195c <get_code_name+0x34>
    1950:	ldr	r2, [r3, #8]!
    1954:	cmp	r2, r1
    1958:	bne	1944 <get_code_name+0x1c>
    195c:	bx	lr

00001960 <sfbpf_print>:
    1960:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1964:	strd	r6, [sp, #8]
    1968:	strd	r8, [sp, #16]
    196c:	strd	sl, [sp, #24]
    1970:	str	lr, [sp, #32]
    1974:	sub	sp, sp, #20
    1978:	mov	r8, r0
    197c:	mov	r9, r1
    1980:	ldr	r0, [pc, #1784]	; 2080 <sfbpf_print+0x720>
    1984:	add	r0, pc, r0
    1988:	bl	db4 <puts@plt>
    198c:	ldr	r3, [r8]
    1990:	cmp	r3, #0
    1994:	beq	2064 <sfbpf_print+0x704>
    1998:	mov	r4, #0
    199c:	ldr	sl, [pc, #1760]	; 2084 <sfbpf_print+0x724>
    19a0:	add	sl, pc, sl
    19a4:	ldr	r3, [pc, #1756]	; 2088 <sfbpf_print+0x728>
    19a8:	add	r3, pc, r3
    19ac:	str	r3, [sp, #12]
    19b0:	ldr	fp, [pc, #1748]	; 208c <sfbpf_print+0x72c>
    19b4:	add	fp, pc, fp
    19b8:	add	fp, fp, #344	; 0x158
    19bc:	ldr	r3, [pc, #1740]	; 2090 <sfbpf_print+0x730>
    19c0:	add	r3, pc, r3
    19c4:	add	r3, r3, #312	; 0x138
    19c8:	str	r3, [sp, #4]
    19cc:	b	1a30 <sfbpf_print+0xd0>
    19d0:	ldr	r6, [pc, #1724]	; 2094 <sfbpf_print+0x734>
    19d4:	add	r6, pc, r6
    19d8:	and	r1, r5, #24
    19dc:	add	r0, r6, #72	; 0x48
    19e0:	bl	1928 <get_code_name>
    19e4:	str	r0, [sp, #8]
    19e8:	and	r1, r5, #224	; 0xe0
    19ec:	add	r0, r6, #104	; 0x68
    19f0:	bl	1928 <get_code_name>
    19f4:	mov	r2, r0
    19f8:	ldr	r1, [sp, #8]
    19fc:	ldr	r0, [pc, #1684]	; 2098 <sfbpf_print+0x738>
    1a00:	add	r0, pc, r0
    1a04:	bl	d0c <printf@plt>
    1a08:	ldr	r3, [r7, #4]
    1a0c:	ldrb	r2, [r7, #3]
    1a10:	ldrb	r1, [r7, #2]
    1a14:	ldr	r0, [pc, #1664]	; 209c <sfbpf_print+0x73c>
    1a18:	add	r0, pc, r0
    1a1c:	bl	d0c <printf@plt>
    1a20:	add	r4, r4, #1
    1a24:	ldr	r3, [r8]
    1a28:	cmp	r3, r4
    1a2c:	bls	2064 <sfbpf_print+0x704>
    1a30:	lsl	r5, r4, #3
    1a34:	ldr	r6, [r8, #4]
    1a38:	add	r7, r6, r5
    1a3c:	mov	r1, r4
    1a40:	mov	r0, sl
    1a44:	bl	d0c <printf@plt>
    1a48:	cmp	r9, #0
    1a4c:	beq	1b60 <sfbpf_print+0x200>
    1a50:	ldrh	r1, [r6, r5]
    1a54:	and	r1, r1, #7
    1a58:	ldr	r0, [pc, #1600]	; 20a0 <sfbpf_print+0x740>
    1a5c:	add	r0, pc, r0
    1a60:	bl	1928 <get_code_name>
    1a64:	mov	r1, r0
    1a68:	ldr	r0, [pc, #1588]	; 20a4 <sfbpf_print+0x744>
    1a6c:	add	r0, pc, r0
    1a70:	bl	d0c <printf@plt>
    1a74:	ldrh	r5, [r6, r5]
    1a78:	and	r3, r5, #7
    1a7c:	cmp	r3, #7
    1a80:	addls	pc, pc, r3, lsl #2
    1a84:	b	1a08 <sfbpf_print+0xa8>
    1a88:	b	19d0 <sfbpf_print+0x70>
    1a8c:	b	19d0 <sfbpf_print+0x70>
    1a90:	b	1a08 <sfbpf_print+0xa8>
    1a94:	b	1a08 <sfbpf_print+0xa8>
    1a98:	b	1aa8 <sfbpf_print+0x148>
    1a9c:	b	1ae4 <sfbpf_print+0x184>
    1aa0:	b	1b20 <sfbpf_print+0x1c0>
    1aa4:	b	1b40 <sfbpf_print+0x1e0>
    1aa8:	ldr	r6, [pc, #1528]	; 20a8 <sfbpf_print+0x748>
    1aac:	add	r6, pc, r6
    1ab0:	and	r1, r5, #240	; 0xf0
    1ab4:	add	r0, r6, #160	; 0xa0
    1ab8:	bl	1928 <get_code_name>
    1abc:	str	r0, [sp, #8]
    1ac0:	and	r1, r5, #8
    1ac4:	add	r0, r6, #240	; 0xf0
    1ac8:	bl	1928 <get_code_name>
    1acc:	mov	r2, r0
    1ad0:	ldr	r1, [sp, #8]
    1ad4:	ldr	r0, [pc, #1488]	; 20ac <sfbpf_print+0x74c>
    1ad8:	add	r0, pc, r0
    1adc:	bl	d0c <printf@plt>
    1ae0:	b	1a08 <sfbpf_print+0xa8>
    1ae4:	ldr	r6, [pc, #1476]	; 20b0 <sfbpf_print+0x750>
    1ae8:	add	r6, pc, r6
    1aec:	and	r1, r5, #240	; 0xf0
    1af0:	add	r0, r6, #264	; 0x108
    1af4:	bl	1928 <get_code_name>
    1af8:	str	r0, [sp, #8]
    1afc:	and	r1, r5, #8
    1b00:	add	r0, r6, #240	; 0xf0
    1b04:	bl	1928 <get_code_name>
    1b08:	mov	r2, r0
    1b0c:	ldr	r1, [sp, #8]
    1b10:	ldr	r0, [pc, #1436]	; 20b4 <sfbpf_print+0x754>
    1b14:	add	r0, pc, r0
    1b18:	bl	d0c <printf@plt>
    1b1c:	b	1a08 <sfbpf_print+0xa8>
    1b20:	and	r1, r5, #24
    1b24:	ldr	r0, [sp, #4]
    1b28:	bl	1928 <get_code_name>
    1b2c:	mov	r1, r0
    1b30:	ldr	r0, [pc, #1408]	; 20b8 <sfbpf_print+0x758>
    1b34:	add	r0, pc, r0
    1b38:	bl	d0c <printf@plt>
    1b3c:	b	1a08 <sfbpf_print+0xa8>
    1b40:	and	r1, r5, #248	; 0xf8
    1b44:	mov	r0, fp
    1b48:	bl	1928 <get_code_name>
    1b4c:	mov	r1, r0
    1b50:	ldr	r0, [pc, #1380]	; 20bc <sfbpf_print+0x75c>
    1b54:	add	r0, pc, r0
    1b58:	bl	d0c <printf@plt>
    1b5c:	b	1a08 <sfbpf_print+0xa8>
    1b60:	ldrh	r3, [r6, r5]
    1b64:	and	r2, r3, #7
    1b68:	cmp	r2, #7
    1b6c:	addls	pc, pc, r2, lsl #2
    1b70:	b	1a20 <sfbpf_print+0xc0>
    1b74:	b	1b94 <sfbpf_print+0x234>
    1b78:	b	1c9c <sfbpf_print+0x33c>
    1b7c:	b	1d28 <sfbpf_print+0x3c8>
    1b80:	b	1d3c <sfbpf_print+0x3dc>
    1b84:	b	1d50 <sfbpf_print+0x3f0>
    1b88:	b	1e9c <sfbpf_print+0x53c>
    1b8c:	b	1f9c <sfbpf_print+0x63c>
    1b90:	b	2010 <sfbpf_print+0x6b0>
    1b94:	ldr	r0, [pc, #1316]	; 20c0 <sfbpf_print+0x760>
    1b98:	add	r0, pc, r0
    1b9c:	bl	d0c <printf@plt>
    1ba0:	ldrh	r2, [r6, r5]
    1ba4:	and	r3, r2, #224	; 0xe0
    1ba8:	cmp	r3, #64	; 0x40
    1bac:	beq	1c28 <sfbpf_print+0x2c8>
    1bb0:	bhi	1c00 <sfbpf_print+0x2a0>
    1bb4:	cmp	r3, #0
    1bb8:	beq	1c64 <sfbpf_print+0x304>
    1bbc:	cmp	r3, #32
    1bc0:	bne	1c8c <sfbpf_print+0x32c>
    1bc4:	ldr	r1, [r7, #4]
    1bc8:	ands	r2, r2, #24
    1bcc:	moveq	r2, #4
    1bd0:	beq	1be8 <sfbpf_print+0x288>
    1bd4:	cmp	r2, #8
    1bd8:	beq	1c20 <sfbpf_print+0x2c0>
    1bdc:	cmp	r2, #16
    1be0:	movne	r2, #0
    1be4:	moveq	r2, #1
    1be8:	ldr	r0, [pc, #1236]	; 20c4 <sfbpf_print+0x764>
    1bec:	add	r0, pc, r0
    1bf0:	bl	d0c <printf@plt>
    1bf4:	mov	r0, #10
    1bf8:	bl	e38 <putchar@plt>
    1bfc:	b	1a20 <sfbpf_print+0xc0>
    1c00:	cmp	r3, #96	; 0x60
    1c04:	beq	1c78 <sfbpf_print+0x318>
    1c08:	cmp	r3, #128	; 0x80
    1c0c:	bne	1c8c <sfbpf_print+0x32c>
    1c10:	ldr	r0, [pc, #1200]	; 20c8 <sfbpf_print+0x768>
    1c14:	add	r0, pc, r0
    1c18:	bl	d0c <printf@plt>
    1c1c:	b	1bf4 <sfbpf_print+0x294>
    1c20:	mov	r2, #2
    1c24:	b	1be8 <sfbpf_print+0x288>
    1c28:	ldr	r1, [r7, #4]
    1c2c:	ands	r2, r2, #24
    1c30:	moveq	r2, #4
    1c34:	beq	1c4c <sfbpf_print+0x2ec>
    1c38:	cmp	r2, #8
    1c3c:	beq	1c5c <sfbpf_print+0x2fc>
    1c40:	cmp	r2, #16
    1c44:	movne	r2, #0
    1c48:	moveq	r2, #1
    1c4c:	ldr	r0, [pc, #1144]	; 20cc <sfbpf_print+0x76c>
    1c50:	add	r0, pc, r0
    1c54:	bl	d0c <printf@plt>
    1c58:	b	1bf4 <sfbpf_print+0x294>
    1c5c:	mov	r2, #2
    1c60:	b	1c4c <sfbpf_print+0x2ec>
    1c64:	ldr	r1, [r7, #4]
    1c68:	ldr	r0, [pc, #1120]	; 20d0 <sfbpf_print+0x770>
    1c6c:	add	r0, pc, r0
    1c70:	bl	d0c <printf@plt>
    1c74:	b	1bf4 <sfbpf_print+0x294>
    1c78:	ldr	r1, [r7, #4]
    1c7c:	ldr	r0, [pc, #1104]	; 20d4 <sfbpf_print+0x774>
    1c80:	add	r0, pc, r0
    1c84:	bl	d0c <printf@plt>
    1c88:	b	1bf4 <sfbpf_print+0x294>
    1c8c:	ldr	r0, [pc, #1092]	; 20d8 <sfbpf_print+0x778>
    1c90:	add	r0, pc, r0
    1c94:	bl	d0c <printf@plt>
    1c98:	b	1bf4 <sfbpf_print+0x294>
    1c9c:	ldr	r0, [pc, #1080]	; 20dc <sfbpf_print+0x77c>
    1ca0:	add	r0, pc, r0
    1ca4:	bl	d0c <printf@plt>
    1ca8:	ldrh	r3, [r6, r5]
    1cac:	and	r3, r3, #224	; 0xe0
    1cb0:	cmp	r3, #96	; 0x60
    1cb4:	beq	1d14 <sfbpf_print+0x3b4>
    1cb8:	bls	1ce0 <sfbpf_print+0x380>
    1cbc:	cmp	r3, #128	; 0x80
    1cc0:	beq	1cfc <sfbpf_print+0x39c>
    1cc4:	cmp	r3, #160	; 0xa0
    1cc8:	bne	1d08 <sfbpf_print+0x3a8>
    1ccc:	ldr	r1, [r7, #4]
    1cd0:	ldr	r0, [pc, #1032]	; 20e0 <sfbpf_print+0x780>
    1cd4:	add	r0, pc, r0
    1cd8:	bl	d0c <printf@plt>
    1cdc:	b	1d08 <sfbpf_print+0x3a8>
    1ce0:	cmp	r3, #0
    1ce4:	bne	1d08 <sfbpf_print+0x3a8>
    1ce8:	ldr	r1, [r7, #4]
    1cec:	ldr	r0, [pc, #1008]	; 20e4 <sfbpf_print+0x784>
    1cf0:	add	r0, pc, r0
    1cf4:	bl	d0c <printf@plt>
    1cf8:	b	1d08 <sfbpf_print+0x3a8>
    1cfc:	ldr	r0, [pc, #996]	; 20e8 <sfbpf_print+0x788>
    1d00:	add	r0, pc, r0
    1d04:	bl	d0c <printf@plt>
    1d08:	mov	r0, #10
    1d0c:	bl	e38 <putchar@plt>
    1d10:	b	1a20 <sfbpf_print+0xc0>
    1d14:	ldr	r1, [r7, #4]
    1d18:	ldr	r0, [pc, #972]	; 20ec <sfbpf_print+0x78c>
    1d1c:	add	r0, pc, r0
    1d20:	bl	d0c <printf@plt>
    1d24:	b	1d08 <sfbpf_print+0x3a8>
    1d28:	ldr	r1, [r7, #4]
    1d2c:	ldr	r0, [pc, #956]	; 20f0 <sfbpf_print+0x790>
    1d30:	add	r0, pc, r0
    1d34:	bl	d0c <printf@plt>
    1d38:	b	1a20 <sfbpf_print+0xc0>
    1d3c:	ldr	r1, [r7, #4]
    1d40:	ldr	r0, [pc, #940]	; 20f4 <sfbpf_print+0x794>
    1d44:	add	r0, pc, r0
    1d48:	bl	d0c <printf@plt>
    1d4c:	b	1a20 <sfbpf_print+0xc0>
    1d50:	and	r3, r3, #240	; 0xf0
    1d54:	cmp	r3, #64	; 0x40
    1d58:	beq	1e2c <sfbpf_print+0x4cc>
    1d5c:	bhi	1de0 <sfbpf_print+0x480>
    1d60:	cmp	r3, #16
    1d64:	beq	1e38 <sfbpf_print+0x4d8>
    1d68:	bls	1d88 <sfbpf_print+0x428>
    1d6c:	cmp	r3, #32
    1d70:	beq	1e44 <sfbpf_print+0x4e4>
    1d74:	cmp	r3, #48	; 0x30
    1d78:	bne	1dd4 <sfbpf_print+0x474>
    1d7c:	ldr	r1, [pc, #884]	; 20f8 <sfbpf_print+0x798>
    1d80:	add	r1, pc, r1
    1d84:	b	1da4 <sfbpf_print+0x444>
    1d88:	cmp	r3, #0
    1d8c:	bne	1d9c <sfbpf_print+0x43c>
    1d90:	ldr	r1, [pc, #868]	; 20fc <sfbpf_print+0x79c>
    1d94:	add	r1, pc, r1
    1d98:	b	1da4 <sfbpf_print+0x444>
    1d9c:	ldr	r1, [pc, #860]	; 2100 <sfbpf_print+0x7a0>
    1da0:	add	r1, pc, r1
    1da4:	ldr	r0, [pc, #856]	; 2104 <sfbpf_print+0x7a4>
    1da8:	add	r0, pc, r0
    1dac:	bl	d0c <printf@plt>
    1db0:	ldrh	r3, [r6, r5]
    1db4:	ands	r3, r3, #8
    1db8:	beq	1e74 <sfbpf_print+0x514>
    1dbc:	cmp	r3, #8
    1dc0:	beq	1e90 <sfbpf_print+0x530>
    1dc4:	ldr	r0, [pc, #828]	; 2108 <sfbpf_print+0x7a8>
    1dc8:	add	r0, pc, r0
    1dcc:	bl	d0c <printf@plt>
    1dd0:	b	1e84 <sfbpf_print+0x524>
    1dd4:	ldr	r1, [pc, #816]	; 210c <sfbpf_print+0x7ac>
    1dd8:	add	r1, pc, r1
    1ddc:	b	1da4 <sfbpf_print+0x444>
    1de0:	cmp	r3, #96	; 0x60
    1de4:	beq	1e50 <sfbpf_print+0x4f0>
    1de8:	bls	1e0c <sfbpf_print+0x4ac>
    1dec:	cmp	r3, #112	; 0x70
    1df0:	beq	1e5c <sfbpf_print+0x4fc>
    1df4:	cmp	r3, #128	; 0x80
    1df8:	bne	1e68 <sfbpf_print+0x508>
    1dfc:	ldr	r0, [pc, #780]	; 2110 <sfbpf_print+0x7b0>
    1e00:	add	r0, pc, r0
    1e04:	bl	db4 <puts@plt>
    1e08:	b	1a20 <sfbpf_print+0xc0>
    1e0c:	cmp	r3, #80	; 0x50
    1e10:	bne	1e20 <sfbpf_print+0x4c0>
    1e14:	ldr	r1, [pc, #760]	; 2114 <sfbpf_print+0x7b4>
    1e18:	add	r1, pc, r1
    1e1c:	b	1da4 <sfbpf_print+0x444>
    1e20:	ldr	r1, [pc, #752]	; 2118 <sfbpf_print+0x7b8>
    1e24:	add	r1, pc, r1
    1e28:	b	1da4 <sfbpf_print+0x444>
    1e2c:	ldr	r1, [pc, #744]	; 211c <sfbpf_print+0x7bc>
    1e30:	add	r1, pc, r1
    1e34:	b	1da4 <sfbpf_print+0x444>
    1e38:	ldr	r1, [pc, #736]	; 2120 <sfbpf_print+0x7c0>
    1e3c:	add	r1, pc, r1
    1e40:	b	1da4 <sfbpf_print+0x444>
    1e44:	ldr	r1, [pc, #728]	; 2124 <sfbpf_print+0x7c4>
    1e48:	add	r1, pc, r1
    1e4c:	b	1da4 <sfbpf_print+0x444>
    1e50:	ldr	r1, [pc, #720]	; 2128 <sfbpf_print+0x7c8>
    1e54:	add	r1, pc, r1
    1e58:	b	1da4 <sfbpf_print+0x444>
    1e5c:	ldr	r1, [pc, #712]	; 212c <sfbpf_print+0x7cc>
    1e60:	add	r1, pc, r1
    1e64:	b	1da4 <sfbpf_print+0x444>
    1e68:	ldr	r1, [pc, #704]	; 2130 <sfbpf_print+0x7d0>
    1e6c:	add	r1, pc, r1
    1e70:	b	1da4 <sfbpf_print+0x444>
    1e74:	ldr	r1, [r7, #4]
    1e78:	ldr	r0, [pc, #692]	; 2134 <sfbpf_print+0x7d4>
    1e7c:	add	r0, pc, r0
    1e80:	bl	d0c <printf@plt>
    1e84:	mov	r0, #10
    1e88:	bl	e38 <putchar@plt>
    1e8c:	b	1a20 <sfbpf_print+0xc0>
    1e90:	mov	r0, #88	; 0x58
    1e94:	bl	e38 <putchar@plt>
    1e98:	b	1e84 <sfbpf_print+0x524>
    1e9c:	and	r3, r3, #240	; 0xf0
    1ea0:	cmp	r3, #32
    1ea4:	beq	1f44 <sfbpf_print+0x5e4>
    1ea8:	bhi	1f00 <sfbpf_print+0x5a0>
    1eac:	cmp	r3, #0
    1eb0:	beq	1f28 <sfbpf_print+0x5c8>
    1eb4:	cmp	r3, #16
    1eb8:	bne	1ec8 <sfbpf_print+0x568>
    1ebc:	ldr	r1, [pc, #628]	; 2138 <sfbpf_print+0x7d8>
    1ec0:	add	r1, pc, r1
    1ec4:	b	1ed0 <sfbpf_print+0x570>
    1ec8:	ldr	r1, [pc, #620]	; 213c <sfbpf_print+0x7dc>
    1ecc:	add	r1, pc, r1
    1ed0:	ldr	r0, [pc, #616]	; 2140 <sfbpf_print+0x7e0>
    1ed4:	add	r0, pc, r0
    1ed8:	bl	d0c <printf@plt>
    1edc:	ldrh	r3, [r6, r5]
    1ee0:	ands	r3, r3, #8
    1ee4:	beq	1f5c <sfbpf_print+0x5fc>
    1ee8:	cmp	r3, #8
    1eec:	beq	1f90 <sfbpf_print+0x630>
    1ef0:	ldr	r0, [pc, #588]	; 2144 <sfbpf_print+0x7e4>
    1ef4:	add	r0, pc, r0
    1ef8:	bl	d0c <printf@plt>
    1efc:	b	1f6c <sfbpf_print+0x60c>
    1f00:	cmp	r3, #48	; 0x30
    1f04:	beq	1f50 <sfbpf_print+0x5f0>
    1f08:	cmp	r3, #64	; 0x40
    1f0c:	bne	1f1c <sfbpf_print+0x5bc>
    1f10:	ldr	r1, [pc, #560]	; 2148 <sfbpf_print+0x7e8>
    1f14:	add	r1, pc, r1
    1f18:	b	1ed0 <sfbpf_print+0x570>
    1f1c:	ldr	r1, [pc, #552]	; 214c <sfbpf_print+0x7ec>
    1f20:	add	r1, pc, r1
    1f24:	b	1ed0 <sfbpf_print+0x570>
    1f28:	add	r3, r4, #1
    1f2c:	ldr	r1, [r7, #4]
    1f30:	add	r1, r3, r1
    1f34:	ldr	r0, [pc, #532]	; 2150 <sfbpf_print+0x7f0>
    1f38:	add	r0, pc, r0
    1f3c:	bl	d0c <printf@plt>
    1f40:	b	1a20 <sfbpf_print+0xc0>
    1f44:	ldr	r1, [pc, #520]	; 2154 <sfbpf_print+0x7f4>
    1f48:	add	r1, pc, r1
    1f4c:	b	1ed0 <sfbpf_print+0x570>
    1f50:	ldr	r1, [pc, #512]	; 2158 <sfbpf_print+0x7f8>
    1f54:	add	r1, pc, r1
    1f58:	b	1ed0 <sfbpf_print+0x570>
    1f5c:	ldr	r1, [r7, #4]
    1f60:	ldr	r0, [pc, #500]	; 215c <sfbpf_print+0x7fc>
    1f64:	add	r0, pc, r0
    1f68:	bl	d0c <printf@plt>
    1f6c:	add	r3, r4, #1
    1f70:	ldrb	r2, [r7, #3]
    1f74:	ldrb	r1, [r7, #2]
    1f78:	add	r2, r2, r3
    1f7c:	add	r1, r1, r3
    1f80:	ldr	r0, [pc, #472]	; 2160 <sfbpf_print+0x800>
    1f84:	add	r0, pc, r0
    1f88:	bl	d0c <printf@plt>
    1f8c:	b	1a20 <sfbpf_print+0xc0>
    1f90:	mov	r0, #88	; 0x58
    1f94:	bl	e38 <putchar@plt>
    1f98:	b	1f6c <sfbpf_print+0x60c>
    1f9c:	ldr	r0, [pc, #448]	; 2164 <sfbpf_print+0x804>
    1fa0:	add	r0, pc, r0
    1fa4:	bl	d0c <printf@plt>
    1fa8:	ldrh	r3, [r6, r5]
    1fac:	and	r3, r3, #24
    1fb0:	cmp	r3, #8
    1fb4:	beq	1ff8 <sfbpf_print+0x698>
    1fb8:	cmp	r3, #16
    1fbc:	beq	2004 <sfbpf_print+0x6a4>
    1fc0:	cmp	r3, #0
    1fc4:	beq	1fd8 <sfbpf_print+0x678>
    1fc8:	ldr	r0, [pc, #408]	; 2168 <sfbpf_print+0x808>
    1fcc:	add	r0, pc, r0
    1fd0:	bl	d0c <printf@plt>
    1fd4:	b	1fe8 <sfbpf_print+0x688>
    1fd8:	ldr	r1, [r7, #4]
    1fdc:	ldr	r0, [pc, #392]	; 216c <sfbpf_print+0x80c>
    1fe0:	add	r0, pc, r0
    1fe4:	bl	d0c <printf@plt>
    1fe8:	ldr	r0, [pc, #384]	; 2170 <sfbpf_print+0x810>
    1fec:	add	r0, pc, r0
    1ff0:	bl	db4 <puts@plt>
    1ff4:	b	1a20 <sfbpf_print+0xc0>
    1ff8:	mov	r0, #88	; 0x58
    1ffc:	bl	e38 <putchar@plt>
    2000:	b	1fe8 <sfbpf_print+0x688>
    2004:	mov	r0, #65	; 0x41
    2008:	bl	e38 <putchar@plt>
    200c:	b	1fe8 <sfbpf_print+0x688>
    2010:	ldr	r0, [sp, #12]
    2014:	bl	d0c <printf@plt>
    2018:	ldrh	r3, [r6, r5]
    201c:	ands	r3, r3, #248	; 0xf8
    2020:	beq	203c <sfbpf_print+0x6dc>
    2024:	cmp	r3, #128	; 0x80
    2028:	beq	2054 <sfbpf_print+0x6f4>
    202c:	ldr	r0, [pc, #320]	; 2174 <sfbpf_print+0x814>
    2030:	add	r0, pc, r0
    2034:	bl	d0c <printf@plt>
    2038:	b	2048 <sfbpf_print+0x6e8>
    203c:	ldr	r0, [pc, #308]	; 2178 <sfbpf_print+0x818>
    2040:	add	r0, pc, r0
    2044:	bl	d0c <printf@plt>
    2048:	mov	r0, #10
    204c:	bl	e38 <putchar@plt>
    2050:	b	1a20 <sfbpf_print+0xc0>
    2054:	ldr	r0, [pc, #288]	; 217c <sfbpf_print+0x81c>
    2058:	add	r0, pc, r0
    205c:	bl	d0c <printf@plt>
    2060:	b	2048 <sfbpf_print+0x6e8>
    2064:	add	sp, sp, #20
    2068:	ldrd	r4, [sp]
    206c:	ldrd	r6, [sp, #8]
    2070:	ldrd	r8, [sp, #16]
    2074:	ldrd	sl, [sp, #24]
    2078:	add	sp, sp, #32
    207c:	pop	{pc}		; (ldr pc, [sp], #4)
    2080:	.word	0x00011da0
    2084:	.word	0x00011d94
    2088:	.word	0x00011eb8
    208c:	.word	0x0002f74c
    2090:	.word	0x0002f740
    2094:	.word	0x0002f72c
    2098:	.word	0x00011d3c
    209c:	.word	0x00011d5c
    20a0:	.word	0x0002f6a4
    20a4:	.word	0x00011dc8
    20a8:	.word	0x0002f654
    20ac:	.word	0x00011c78
    20b0:	.word	0x0002f618
    20b4:	.word	0x00011c3c
    20b8:	.word	0x00011c2c
    20bc:	.word	0x00011c18
    20c0:	.word	0x00011bf4
    20c4:	.word	0x00011bac
    20c8:	.word	0x00011b9c
    20cc:	.word	0x00011b54
    20d0:	.word	0x00011b48
    20d4:	.word	0x00011b38
    20d8:	.word	0x00011a64
    20dc:	.word	0x00011b20
    20e0:	.word	0x00011af8
    20e4:	.word	0x00011ac4
    20e8:	.word	0x00011ab0
    20ec:	.word	0x00011a9c
    20f0:	.word	0x00011aac
    20f4:	.word	0x00011aac
    20f8:	.word	0x00011980
    20fc:	.word	0x00011964
    2100:	.word	0x00011954
    2104:	.word	0x00011a64
    2108:	.word	0x0001192c
    210c:	.word	0x0001191c
    2110:	.word	0x00011a04
    2114:	.word	0x000118f0
    2118:	.word	0x000118d0
    211c:	.word	0x000118d4
    2120:	.word	0x000118d8
    2124:	.word	0x000118b4
    2128:	.word	0x000118b8
    212c:	.word	0x000118b0
    2130:	.word	0x00011888
    2134:	.word	0x00011938
    2138:	.word	0x00011858
    213c:	.word	0x00011828
    2140:	.word	0x00011958
    2144:	.word	0x00011800
    2148:	.word	0x000117f4
    214c:	.word	0x000117d4
    2150:	.word	0x000118e8
    2154:	.word	0x000117d8
    2158:	.word	0x000117c8
    215c:	.word	0x00011850
    2160:	.word	0x000118b4
    2164:	.word	0x000118a8
    2168:	.word	0x00011728
    216c:	.word	0x000117d4
    2170:	.word	0x0001186c
    2174:	.word	0x000116c4
    2178:	.word	0x00011828
    217c:	.word	0x00011818

00002180 <backpatch>:
    2180:	cmp	r0, #0
    2184:	beq	21ac <backpatch+0x2c>
    2188:	ldr	r3, [r0, #44]	; 0x2c
    218c:	cmp	r3, #0
    2190:	ldreq	r3, [r0, #60]	; 0x3c
    2194:	streq	r1, [r0, #60]	; 0x3c
    2198:	ldrne	r3, [r0, #84]	; 0x54
    219c:	strne	r1, [r0, #84]	; 0x54
    21a0:	mov	r0, r3
    21a4:	cmp	r3, #0
    21a8:	bne	2188 <backpatch+0x8>
    21ac:	bx	lr

000021b0 <ethertype_to_ppptype>:
    21b0:	cmp	r0, #1536	; 0x600
    21b4:	beq	2210 <ethertype_to_ppptype+0x60>
    21b8:	ble	21e8 <ethertype_to_ppptype+0x38>
    21bc:	movw	r3, #24579	; 0x6003
    21c0:	cmp	r0, r3
    21c4:	beq	2228 <ethertype_to_ppptype+0x78>
    21c8:	ble	2204 <ethertype_to_ppptype+0x54>
    21cc:	movw	r3, #32923	; 0x809b
    21d0:	cmp	r0, r3
    21d4:	beq	2230 <ethertype_to_ppptype+0x80>
    21d8:	movw	r3, #34525	; 0x86dd
    21dc:	cmp	r0, r3
    21e0:	moveq	r0, #87	; 0x57
    21e4:	bx	lr
    21e8:	cmp	r0, #224	; 0xe0
    21ec:	beq	2218 <ethertype_to_ppptype+0x68>
    21f0:	cmp	r0, #254	; 0xfe
    21f4:	beq	2220 <ethertype_to_ppptype+0x70>
    21f8:	cmp	r0, #66	; 0x42
    21fc:	moveq	r0, #49	; 0x31
    2200:	bx	lr
    2204:	cmp	r0, #2048	; 0x800
    2208:	moveq	r0, #33	; 0x21
    220c:	bx	lr
    2210:	mov	r0, #37	; 0x25
    2214:	bx	lr
    2218:	mov	r0, #43	; 0x2b
    221c:	bx	lr
    2220:	mov	r0, #35	; 0x23
    2224:	bx	lr
    2228:	mov	r0, #39	; 0x27
    222c:	bx	lr
    2230:	mov	r0, #41	; 0x29
    2234:	bx	lr

00002238 <freechunks>:
    2238:	strd	r4, [sp, #-16]!
    223c:	str	r6, [sp, #8]
    2240:	str	lr, [sp, #12]
    2244:	ldr	r5, [pc, #76]	; 2298 <freechunks+0x60>
    2248:	add	r5, pc, r5
    224c:	mov	r4, r5
    2250:	mov	r3, #0
    2254:	str	r3, [r4], #4
    2258:	add	r5, r5, #132	; 0x84
    225c:	mov	r6, r3
    2260:	b	2278 <freechunks+0x40>
    2264:	bl	d48 <free@plt>
    2268:	str	r6, [r4, #4]
    226c:	add	r4, r4, #8
    2270:	cmp	r4, r5
    2274:	beq	2288 <freechunks+0x50>
    2278:	ldr	r0, [r4, #4]
    227c:	cmp	r0, #0
    2280:	bne	2264 <freechunks+0x2c>
    2284:	b	226c <freechunks+0x34>
    2288:	ldrd	r4, [sp]
    228c:	ldr	r6, [sp, #8]
    2290:	add	sp, sp, #12
    2294:	pop	{pc}		; (ldr pc, [sp], #4)
    2298:	.word	0x0002f118

0000229c <sf_bpf_error>:
    229c:	push	{r0, r1, r2, r3}
    22a0:	push	{lr}		; (str lr, [sp, #-4]!)
    22a4:	sub	sp, sp, #12
    22a8:	add	r3, sp, #20
    22ac:	str	r3, [sp, #4]
    22b0:	ldr	r4, [pc, #28]	; 22d4 <sf_bpf_error+0x38>
    22b4:	add	r4, pc, r4
    22b8:	ldr	r2, [sp, #16]
    22bc:	mov	r1, #256	; 0x100
    22c0:	add	r0, r4, #132	; 0x84
    22c4:	bl	e74 <vsnprintf@plt>
    22c8:	mov	r1, #1
    22cc:	add	r0, r4, #392	; 0x188
    22d0:	bl	d30 <longjmp@plt>
    22d4:	.word	0x0002f0ac

000022d8 <newchunk>:
    22d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    22dc:	strd	r6, [sp, #8]
    22e0:	str	r8, [sp, #16]
    22e4:	str	lr, [sp, #20]
    22e8:	add	r0, r0, #3
    22ec:	bic	r5, r0, #3
    22f0:	ldr	r3, [pc, #192]	; 23b8 <newchunk+0xe0>
    22f4:	add	r3, pc, r3
    22f8:	mov	r4, r3
    22fc:	ldr	r2, [r4], #4
    2300:	lsl	r1, r2, #3
    2304:	add	r4, r4, r1
    2308:	add	r3, r3, r1
    230c:	ldr	r3, [r3, #4]
    2310:	cmp	r3, r5
    2314:	bcs	236c <newchunk+0x94>
    2318:	add	r7, r4, #8
    231c:	add	r2, r2, #1
    2320:	ldr	r3, [pc, #148]	; 23bc <newchunk+0xe4>
    2324:	add	r3, pc, r3
    2328:	str	r2, [r3]
    232c:	cmp	r2, #15
    2330:	bgt	2394 <newchunk+0xbc>
    2334:	mov	r6, #1024	; 0x400
    2338:	lsl	r6, r6, r2
    233c:	mov	r0, r6
    2340:	bl	dc0 <malloc@plt>
    2344:	str	r0, [r4, #12]
    2348:	cmp	r0, #0
    234c:	beq	23a0 <newchunk+0xc8>
    2350:	mov	r2, r6
    2354:	mov	r1, #0
    2358:	bl	e2c <memset@plt>
    235c:	str	r6, [r4, #8]
    2360:	cmp	r5, r6
    2364:	movls	r4, r7
    2368:	bhi	23ac <newchunk+0xd4>
    236c:	ldr	r0, [r4]
    2370:	sub	r0, r0, r5
    2374:	str	r0, [r4]
    2378:	ldr	r3, [r4, #4]
    237c:	add	r0, r3, r0
    2380:	ldrd	r4, [sp]
    2384:	ldrd	r6, [sp, #8]
    2388:	ldr	r8, [sp, #16]
    238c:	add	sp, sp, #20
    2390:	pop	{pc}		; (ldr pc, [sp], #4)
    2394:	ldr	r0, [pc, #36]	; 23c0 <newchunk+0xe8>
    2398:	add	r0, pc, r0
    239c:	bl	229c <sf_bpf_error>
    23a0:	ldr	r0, [pc, #28]	; 23c4 <newchunk+0xec>
    23a4:	add	r0, pc, r0
    23a8:	bl	229c <sf_bpf_error>
    23ac:	ldr	r0, [pc, #20]	; 23c8 <newchunk+0xf0>
    23b0:	add	r0, pc, r0
    23b4:	bl	229c <sf_bpf_error>
    23b8:	.word	0x0002f06c
    23bc:	.word	0x0002f03c
    23c0:	.word	0x000115a4
    23c4:	.word	0x00011598
    23c8:	.word	0x0001158c

000023cc <gen_uncond>:
    23cc:	strd	r4, [sp, #-16]!
    23d0:	str	r6, [sp, #8]
    23d4:	str	lr, [sp, #12]
    23d8:	mov	r4, r0
    23dc:	mov	r0, #20
    23e0:	bl	22d8 <newchunk>
    23e4:	mov	r5, r0
    23e8:	mov	r3, #0
    23ec:	str	r3, [r0]
    23f0:	clz	r0, r4
    23f4:	lsr	r0, r0, #5
    23f8:	str	r0, [r5, #12]
    23fc:	mov	r0, #208	; 0xd0
    2400:	bl	22d8 <newchunk>
    2404:	mov	r3, r0
    2408:	mov	r2, #21
    240c:	str	r2, [r0, #8]
    2410:	str	r0, [r3, #96]	; 0x60
    2414:	str	r5, [r0, #4]
    2418:	ldrd	r4, [sp]
    241c:	ldr	r6, [sp, #8]
    2420:	add	sp, sp, #12
    2424:	pop	{pc}		; (ldr pc, [sp], #4)

00002428 <xfer_to_x>:
    2428:	str	r4, [sp, #-8]!
    242c:	str	lr, [sp, #4]
    2430:	mov	r4, r0
    2434:	mov	r0, #20
    2438:	bl	22d8 <newchunk>
    243c:	mov	r2, #97	; 0x61
    2440:	str	r2, [r0]
    2444:	ldr	r2, [r4, #8]
    2448:	str	r2, [r0, #12]
    244c:	ldr	r4, [sp]
    2450:	add	sp, sp, #4
    2454:	pop	{pc}		; (ldr pc, [sp], #4)

00002458 <xfer_to_a>:
    2458:	str	r4, [sp, #-8]!
    245c:	str	lr, [sp, #4]
    2460:	mov	r4, r0
    2464:	mov	r0, #20
    2468:	bl	22d8 <newchunk>
    246c:	mov	r2, #96	; 0x60
    2470:	str	r2, [r0]
    2474:	ldr	r2, [r4, #8]
    2478:	str	r2, [r0, #12]
    247c:	ldr	r4, [sp]
    2480:	add	sp, sp, #4
    2484:	pop	{pc}		; (ldr pc, [sp], #4)

00002488 <alloc_reg>:
    2488:	str	r4, [sp, #-8]!
    248c:	str	lr, [sp, #4]
    2490:	ldr	r3, [pc, #196]	; 255c <alloc_reg+0xd4>
    2494:	add	r3, pc, r3
    2498:	ldr	r0, [r3, #784]	; 0x310
    249c:	add	r3, r3, r0, lsl #2
    24a0:	ldr	r3, [r3, #788]	; 0x314
    24a4:	cmp	r3, #0
    24a8:	beq	253c <alloc_reg+0xb4>
    24ac:	add	r0, r0, #1
    24b0:	rsbs	r3, r0, #0
    24b4:	and	r0, r0, #15
    24b8:	and	r3, r3, #15
    24bc:	rsbpl	r0, r3, #0
    24c0:	ldr	r3, [pc, #152]	; 2560 <alloc_reg+0xd8>
    24c4:	add	r3, pc, r3
    24c8:	str	r0, [r3, #784]	; 0x310
    24cc:	mov	r2, #15
    24d0:	mov	ip, #0
    24d4:	ldr	r1, [pc, #136]	; 2564 <alloc_reg+0xdc>
    24d8:	add	r1, pc, r1
    24dc:	mov	lr, #1
    24e0:	add	r3, r1, r0, lsl #2
    24e4:	ldr	r3, [r3, #788]	; 0x314
    24e8:	cmp	r3, #0
    24ec:	beq	2528 <alloc_reg+0xa0>
    24f0:	add	r0, r0, #1
    24f4:	rsbs	r3, r0, #0
    24f8:	and	r0, r0, #15
    24fc:	and	r3, r3, #15
    2500:	rsbpl	r0, r3, #0
    2504:	mov	ip, lr
    2508:	subs	r2, r2, #1
    250c:	bne	24e0 <alloc_reg+0x58>
    2510:	ldr	r3, [pc, #80]	; 2568 <alloc_reg+0xe0>
    2514:	add	r3, pc, r3
    2518:	str	r0, [r3, #784]	; 0x310
    251c:	ldr	r0, [pc, #72]	; 256c <alloc_reg+0xe4>
    2520:	add	r0, pc, r0
    2524:	bl	229c <sf_bpf_error>
    2528:	cmp	ip, #0
    252c:	beq	253c <alloc_reg+0xb4>
    2530:	ldr	r3, [pc, #56]	; 2570 <alloc_reg+0xe8>
    2534:	add	r3, pc, r3
    2538:	str	r0, [r3, #784]	; 0x310
    253c:	ldr	r3, [pc, #48]	; 2574 <alloc_reg+0xec>
    2540:	add	r3, pc, r3
    2544:	add	r3, r3, r0, lsl #2
    2548:	mov	r2, #1
    254c:	str	r2, [r3, #788]	; 0x314
    2550:	ldr	r4, [sp]
    2554:	add	sp, sp, #4
    2558:	pop	{pc}		; (ldr pc, [sp], #4)
    255c:	.word	0x0002eecc
    2560:	.word	0x0002ee9c
    2564:	.word	0x0002ee88
    2568:	.word	0x0002ee4c
    256c:	.word	0x0001142c
    2570:	.word	0x0002ee2c
    2574:	.word	0x0002ee20

00002578 <gen_llprefixlen>:
    2578:	str	r4, [sp, #-8]!
    257c:	str	lr, [sp, #4]
    2580:	ldr	r3, [pc, #360]	; 26f0 <gen_llprefixlen+0x178>
    2584:	add	r3, pc, r3
    2588:	ldr	r3, [r3, #852]	; 0x354
    258c:	cmp	r3, #127	; 0x7f
    2590:	beq	2690 <gen_llprefixlen+0x118>
    2594:	ble	25e4 <gen_llprefixlen+0x6c>
    2598:	cmp	r3, #163	; 0xa3
    259c:	beq	2644 <gen_llprefixlen+0xcc>
    25a0:	cmp	r3, #192	; 0xc0
    25a4:	movne	r0, #0
    25a8:	bne	2624 <gen_llprefixlen+0xac>
    25ac:	ldr	r3, [pc, #320]	; 26f4 <gen_llprefixlen+0x17c>
    25b0:	add	r3, pc, r3
    25b4:	ldr	r3, [r3, #856]	; 0x358
    25b8:	cmn	r3, #1
    25bc:	beq	26dc <gen_llprefixlen+0x164>
    25c0:	mov	r0, #20
    25c4:	bl	22d8 <newchunk>
    25c8:	mov	r3, #97	; 0x61
    25cc:	str	r3, [r0]
    25d0:	ldr	r3, [pc, #288]	; 26f8 <gen_llprefixlen+0x180>
    25d4:	add	r3, pc, r3
    25d8:	ldr	r3, [r3, #856]	; 0x358
    25dc:	str	r3, [r0, #12]
    25e0:	b	2624 <gen_llprefixlen+0xac>
    25e4:	cmp	r3, #119	; 0x77
    25e8:	movne	r0, #0
    25ec:	bne	2624 <gen_llprefixlen+0xac>
    25f0:	ldr	r3, [pc, #260]	; 26fc <gen_llprefixlen+0x184>
    25f4:	add	r3, pc, r3
    25f8:	ldr	r3, [r3, #856]	; 0x358
    25fc:	cmn	r3, #1
    2600:	beq	2630 <gen_llprefixlen+0xb8>
    2604:	mov	r0, #20
    2608:	bl	22d8 <newchunk>
    260c:	mov	r3, #97	; 0x61
    2610:	str	r3, [r0]
    2614:	ldr	r3, [pc, #228]	; 2700 <gen_llprefixlen+0x188>
    2618:	add	r3, pc, r3
    261c:	ldr	r3, [r3, #856]	; 0x358
    2620:	str	r3, [r0, #12]
    2624:	ldr	r4, [sp]
    2628:	add	sp, sp, #4
    262c:	pop	{pc}		; (ldr pc, [sp], #4)
    2630:	bl	2488 <alloc_reg>
    2634:	ldr	r3, [pc, #200]	; 2704 <gen_llprefixlen+0x18c>
    2638:	add	r3, pc, r3
    263c:	str	r0, [r3, #856]	; 0x358
    2640:	b	2604 <gen_llprefixlen+0x8c>
    2644:	ldr	r3, [pc, #188]	; 2708 <gen_llprefixlen+0x190>
    2648:	add	r3, pc, r3
    264c:	ldr	r3, [r3, #856]	; 0x358
    2650:	cmn	r3, #1
    2654:	beq	267c <gen_llprefixlen+0x104>
    2658:	mov	r0, #20
    265c:	bl	22d8 <newchunk>
    2660:	mov	r3, #97	; 0x61
    2664:	str	r3, [r0]
    2668:	ldr	r3, [pc, #156]	; 270c <gen_llprefixlen+0x194>
    266c:	add	r3, pc, r3
    2670:	ldr	r3, [r3, #856]	; 0x358
    2674:	str	r3, [r0, #12]
    2678:	b	2624 <gen_llprefixlen+0xac>
    267c:	bl	2488 <alloc_reg>
    2680:	ldr	r3, [pc, #136]	; 2710 <gen_llprefixlen+0x198>
    2684:	add	r3, pc, r3
    2688:	str	r0, [r3, #856]	; 0x358
    268c:	b	2658 <gen_llprefixlen+0xe0>
    2690:	ldr	r3, [pc, #124]	; 2714 <gen_llprefixlen+0x19c>
    2694:	add	r3, pc, r3
    2698:	ldr	r3, [r3, #856]	; 0x358
    269c:	cmn	r3, #1
    26a0:	beq	26c8 <gen_llprefixlen+0x150>
    26a4:	mov	r0, #20
    26a8:	bl	22d8 <newchunk>
    26ac:	mov	r3, #97	; 0x61
    26b0:	str	r3, [r0]
    26b4:	ldr	r3, [pc, #92]	; 2718 <gen_llprefixlen+0x1a0>
    26b8:	add	r3, pc, r3
    26bc:	ldr	r3, [r3, #856]	; 0x358
    26c0:	str	r3, [r0, #12]
    26c4:	b	2624 <gen_llprefixlen+0xac>
    26c8:	bl	2488 <alloc_reg>
    26cc:	ldr	r3, [pc, #72]	; 271c <gen_llprefixlen+0x1a4>
    26d0:	add	r3, pc, r3
    26d4:	str	r0, [r3, #856]	; 0x358
    26d8:	b	26a4 <gen_llprefixlen+0x12c>
    26dc:	bl	2488 <alloc_reg>
    26e0:	ldr	r3, [pc, #56]	; 2720 <gen_llprefixlen+0x1a8>
    26e4:	add	r3, pc, r3
    26e8:	str	r0, [r3, #856]	; 0x358
    26ec:	b	25c0 <gen_llprefixlen+0x48>
    26f0:	.word	0x0002eddc
    26f4:	.word	0x0002edb0
    26f8:	.word	0x0002ed8c
    26fc:	.word	0x0002ed6c
    2700:	.word	0x0002ed48
    2704:	.word	0x0002ed28
    2708:	.word	0x0002ed18
    270c:	.word	0x0002ecf4
    2710:	.word	0x0002ecdc
    2714:	.word	0x0002eccc
    2718:	.word	0x0002eca8
    271c:	.word	0x0002ec90
    2720:	.word	0x0002ec7c

00002724 <gen_off_macpl>:
    2724:	ldr	r3, [pc, #112]	; 279c <gen_off_macpl+0x78>
    2728:	add	r3, pc, r3
    272c:	ldr	r3, [r3, #860]	; 0x35c
    2730:	cmp	r3, #0
    2734:	beq	2794 <gen_off_macpl+0x70>
    2738:	str	r4, [sp, #-8]!
    273c:	str	lr, [sp, #4]
    2740:	ldr	r3, [pc, #88]	; 27a0 <gen_off_macpl+0x7c>
    2744:	add	r3, pc, r3
    2748:	ldr	r3, [r3, #864]	; 0x360
    274c:	cmn	r3, #1
    2750:	beq	2780 <gen_off_macpl+0x5c>
    2754:	mov	r0, #20
    2758:	bl	22d8 <newchunk>
    275c:	mov	r3, #97	; 0x61
    2760:	str	r3, [r0]
    2764:	ldr	r3, [pc, #56]	; 27a4 <gen_off_macpl+0x80>
    2768:	add	r3, pc, r3
    276c:	ldr	r3, [r3, #864]	; 0x360
    2770:	str	r3, [r0, #12]
    2774:	ldr	r4, [sp]
    2778:	add	sp, sp, #4
    277c:	pop	{pc}		; (ldr pc, [sp], #4)
    2780:	bl	2488 <alloc_reg>
    2784:	ldr	r3, [pc, #28]	; 27a8 <gen_off_macpl+0x84>
    2788:	add	r3, pc, r3
    278c:	str	r0, [r3, #864]	; 0x360
    2790:	b	2754 <gen_off_macpl+0x30>
    2794:	mov	r0, #0
    2798:	bx	lr
    279c:	.word	0x0002ec38
    27a0:	.word	0x0002ec1c
    27a4:	.word	0x0002ebf8
    27a8:	.word	0x0002ebd8

000027ac <lookup_proto>:
    27ac:	str	r4, [sp, #-8]!
    27b0:	str	lr, [sp, #4]
    27b4:	mov	r4, r0
    27b8:	cmp	r1, #24
    27bc:	addls	pc, pc, r1, lsl #2
    27c0:	b	28d4 <lookup_proto+0x128>
    27c4:	b	2828 <lookup_proto+0x7c>
    27c8:	b	2850 <lookup_proto+0xa4>
    27cc:	b	2828 <lookup_proto+0x7c>
    27d0:	b	28d4 <lookup_proto+0x128>
    27d4:	b	28d4 <lookup_proto+0x128>
    27d8:	b	28d4 <lookup_proto+0x128>
    27dc:	b	28d4 <lookup_proto+0x128>
    27e0:	b	28d4 <lookup_proto+0x128>
    27e4:	b	28d4 <lookup_proto+0x128>
    27e8:	b	28d4 <lookup_proto+0x128>
    27ec:	b	28d4 <lookup_proto+0x128>
    27f0:	b	28d4 <lookup_proto+0x128>
    27f4:	b	28d4 <lookup_proto+0x128>
    27f8:	b	28d4 <lookup_proto+0x128>
    27fc:	b	28d4 <lookup_proto+0x128>
    2800:	b	28d4 <lookup_proto+0x128>
    2804:	b	28d4 <lookup_proto+0x128>
    2808:	b	2828 <lookup_proto+0x7c>
    280c:	b	28d4 <lookup_proto+0x128>
    2810:	b	28d4 <lookup_proto+0x128>
    2814:	b	28d4 <lookup_proto+0x128>
    2818:	b	28d4 <lookup_proto+0x128>
    281c:	b	28d4 <lookup_proto+0x128>
    2820:	b	28d4 <lookup_proto+0x128>
    2824:	b	287c <lookup_proto+0xd0>
    2828:	bl	c448 <pcap_nametoproto>
    282c:	cmn	r0, #1
    2830:	beq	2840 <lookup_proto+0x94>
    2834:	ldr	r4, [sp]
    2838:	add	sp, sp, #4
    283c:	pop	{pc}		; (ldr pc, [sp], #4)
    2840:	mov	r1, r4
    2844:	ldr	r0, [pc, #160]	; 28ec <lookup_proto+0x140>
    2848:	add	r0, pc, r0
    284c:	bl	229c <sf_bpf_error>
    2850:	bl	c46c <pcap_nametoeproto>
    2854:	cmn	r0, #1
    2858:	bne	2834 <lookup_proto+0x88>
    285c:	mov	r0, r4
    2860:	bl	c4e0 <pcap_nametollc>
    2864:	cmn	r0, #1
    2868:	bne	2834 <lookup_proto+0x88>
    286c:	mov	r1, r4
    2870:	ldr	r0, [pc, #120]	; 28f0 <lookup_proto+0x144>
    2874:	add	r0, pc, r0
    2878:	bl	229c <sf_bpf_error>
    287c:	ldr	r1, [pc, #112]	; 28f4 <lookup_proto+0x148>
    2880:	add	r1, pc, r1
    2884:	bl	cf4 <strcmp@plt>
    2888:	cmp	r0, #0
    288c:	beq	28dc <lookup_proto+0x130>
    2890:	ldr	r1, [pc, #96]	; 28f8 <lookup_proto+0x14c>
    2894:	add	r1, pc, r1
    2898:	mov	r0, r4
    289c:	bl	cf4 <strcmp@plt>
    28a0:	cmp	r0, #0
    28a4:	beq	28e4 <lookup_proto+0x138>
    28a8:	ldr	r1, [pc, #76]	; 28fc <lookup_proto+0x150>
    28ac:	add	r1, pc, r1
    28b0:	mov	r0, r4
    28b4:	bl	cf4 <strcmp@plt>
    28b8:	cmp	r0, #0
    28bc:	moveq	r0, #129	; 0x81
    28c0:	beq	2834 <lookup_proto+0x88>
    28c4:	mov	r1, r4
    28c8:	ldr	r0, [pc, #48]	; 2900 <lookup_proto+0x154>
    28cc:	add	r0, pc, r0
    28d0:	bl	229c <sf_bpf_error>
    28d4:	mvn	r0, #0
    28d8:	b	2834 <lookup_proto+0x88>
    28dc:	mov	r0, #130	; 0x82
    28e0:	b	2834 <lookup_proto+0x88>
    28e4:	mov	r0, #131	; 0x83
    28e8:	b	2834 <lookup_proto+0x88>
    28ec:	.word	0x00011138
    28f0:	.word	0x00011124
    28f4:	.word	0x00011134
    28f8:	.word	0x00011128
    28fc:	.word	0x00011118
    2900:	.word	0x00011100

00002904 <sf_sdup>:
    2904:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2908:	strd	r6, [sp, #8]
    290c:	str	r8, [sp, #16]
    2910:	str	lr, [sp, #20]
    2914:	mov	r7, r0
    2918:	bl	df0 <strlen@plt>
    291c:	mov	r5, r0
    2920:	add	r6, r0, #1
    2924:	mov	r0, r6
    2928:	bl	22d8 <newchunk>
    292c:	mov	r4, r0
    2930:	mov	r2, r6
    2934:	mov	r1, r7
    2938:	bl	e44 <strncpy@plt>
    293c:	mov	r3, #0
    2940:	strb	r3, [r4, r5]
    2944:	mov	r0, r4
    2948:	ldrd	r4, [sp]
    294c:	ldrd	r6, [sp, #8]
    2950:	ldr	r8, [sp, #16]
    2954:	add	sp, sp, #20
    2958:	pop	{pc}		; (ldr pc, [sp], #4)

0000295c <sfbpf_compile>:
    295c:	strd	r4, [sp, #-16]!
    2960:	str	r6, [sp, #8]
    2964:	str	lr, [sp, #12]
    2968:	sub	sp, sp, #24
    296c:	str	r0, [sp, #4]
    2970:	str	r1, [sp, #8]
    2974:	str	r2, [sp, #12]
    2978:	ldr	r2, [pc, #3900]	; 38bc <sfbpf_compile+0xf60>
    297c:	add	r2, pc, r2
    2980:	str	r2, [sp]
    2984:	str	r3, [sp, #20]
    2988:	ldr	r3, [pc, #3888]	; 38c0 <sfbpf_compile+0xf64>
    298c:	ldr	r3, [r2, r3]
    2990:	mov	r1, #0
    2994:	str	r1, [r3]
    2998:	ldr	r3, [pc, #3876]	; 38c4 <sfbpf_compile+0xf68>
    299c:	ldr	r3, [r2, r3]
    29a0:	str	r1, [r3]
    29a4:	ldr	r4, [pc, #3868]	; 38c8 <sfbpf_compile+0xf6c>
    29a8:	add	r4, pc, r4
    29ac:	str	r1, [r4, #868]	; 0x364
    29b0:	str	r1, [r4, #784]	; 0x310
    29b4:	mov	r2, #64	; 0x40
    29b8:	add	r0, r4, #788	; 0x314
    29bc:	bl	e2c <memset@plt>
    29c0:	add	r0, r4, #392	; 0x188
    29c4:	bl	d3c <_setjmp@plt>
    29c8:	cmp	r0, #0
    29cc:	beq	2a1c <sfbpf_compile+0xc0>
    29d0:	ldr	r3, [pc, #3828]	; 38cc <sfbpf_compile+0xf70>
    29d4:	add	r3, pc, r3
    29d8:	ldr	r0, [r3, #872]	; 0x368
    29dc:	cmp	r0, #0
    29e0:	beq	29f8 <sfbpf_compile+0x9c>
    29e4:	bl	e80 <freeaddrinfo@plt>
    29e8:	ldr	r3, [pc, #3808]	; 38d0 <sfbpf_compile+0xf74>
    29ec:	add	r3, pc, r3
    29f0:	mov	r2, #0
    29f4:	str	r2, [r3, #872]	; 0x368
    29f8:	bl	136a8 <sf_lex_cleanup>
    29fc:	bl	2238 <freechunks>
    2a00:	mvn	r4, #0
    2a04:	mov	r0, r4
    2a08:	add	sp, sp, #24
    2a0c:	ldrd	r4, [sp]
    2a10:	ldr	r6, [sp, #8]
    2a14:	add	sp, sp, #12
    2a18:	pop	{pc}		; (ldr pc, [sp], #4)
    2a1c:	ldr	r3, [pc, #3760]	; 38d4 <sfbpf_compile+0xf78>
    2a20:	add	r3, pc, r3
    2a24:	ldr	r2, [sp, #44]	; 0x2c
    2a28:	str	r2, [r3, #876]	; 0x36c
    2a2c:	ldr	r2, [sp, #4]
    2a30:	str	r2, [r3, #880]	; 0x370
    2a34:	cmp	r2, #0
    2a38:	beq	2e64 <sfbpf_compile+0x508>
    2a3c:	ldr	r3, [sp, #20]
    2a40:	cmp	r3, #0
    2a44:	beq	2ea4 <sfbpf_compile+0x548>
    2a48:	ldr	r0, [sp, #20]
    2a4c:	bl	13680 <sf_lex_init>
    2a50:	ldr	r3, [pc, #3712]	; 38d8 <sfbpf_compile+0xf7c>
    2a54:	add	r3, pc, r3
    2a58:	ldr	ip, [sp, #8]
    2a5c:	str	ip, [r3, #852]	; 0x354
    2a60:	mov	r1, #0
    2a64:	str	r1, [r3, #884]	; 0x374
    2a68:	str	r1, [r3, #888]	; 0x378
    2a6c:	str	r1, [r3, #892]	; 0x37c
    2a70:	mvn	r2, #0
    2a74:	str	r2, [r3, #896]	; 0x380
    2a78:	str	r2, [r3, #900]	; 0x384
    2a7c:	str	r2, [r3, #904]	; 0x388
    2a80:	str	r2, [r3, #908]	; 0x38c
    2a84:	str	r1, [r3, #912]	; 0x390
    2a88:	str	r2, [r3, #916]	; 0x394
    2a8c:	str	r2, [r3, #920]	; 0x398
    2a90:	str	r2, [r3, #924]	; 0x39c
    2a94:	str	r2, [r3, #928]	; 0x3a0
    2a98:	str	r2, [r3, #932]	; 0x3a4
    2a9c:	str	r1, [r3, #936]	; 0x3a8
    2aa0:	str	r1, [r3, #940]	; 0x3ac
    2aa4:	str	r1, [r3, #860]	; 0x35c
    2aa8:	ldr	r0, [pc, #3628]	; 38dc <sfbpf_compile+0xf80>
    2aac:	add	r0, pc, r0
    2ab0:	str	r2, [r0]
    2ab4:	str	r1, [r0, #4]
    2ab8:	str	r2, [r3, #856]	; 0x358
    2abc:	str	r2, [r3, #864]	; 0x360
    2ac0:	cmp	ip, #229	; 0xe5
    2ac4:	addls	pc, pc, ip, lsl #2
    2ac8:	b	3834 <sfbpf_compile+0xed8>
    2acc:	b	2ffc <sfbpf_compile+0x6a0>
    2ad0:	b	2f80 <sfbpf_compile+0x624>
    2ad4:	b	3834 <sfbpf_compile+0xed8>
    2ad8:	b	3834 <sfbpf_compile+0xed8>
    2adc:	b	3834 <sfbpf_compile+0xed8>
    2ae0:	b	3834 <sfbpf_compile+0xed8>
    2ae4:	b	30e4 <sfbpf_compile+0x788>
    2ae8:	b	2eb0 <sfbpf_compile+0x554>
    2aec:	b	2fac <sfbpf_compile+0x650>
    2af0:	b	3044 <sfbpf_compile+0x6e8>
    2af4:	b	30bc <sfbpf_compile+0x760>
    2af8:	b	3164 <sfbpf_compile+0x808>
    2afc:	b	31d8 <sfbpf_compile+0x87c>
    2b00:	b	3834 <sfbpf_compile+0xed8>
    2b04:	b	3834 <sfbpf_compile+0xed8>
    2b08:	b	2fd4 <sfbpf_compile+0x678>
    2b0c:	b	3094 <sfbpf_compile+0x738>
    2b10:	b	3834 <sfbpf_compile+0xed8>
    2b14:	b	3834 <sfbpf_compile+0xed8>
    2b18:	b	3164 <sfbpf_compile+0x808>
    2b1c:	b	3834 <sfbpf_compile+0xed8>
    2b20:	b	3834 <sfbpf_compile+0xed8>
    2b24:	b	3834 <sfbpf_compile+0xed8>
    2b28:	b	3834 <sfbpf_compile+0xed8>
    2b2c:	b	3834 <sfbpf_compile+0xed8>
    2b30:	b	3834 <sfbpf_compile+0xed8>
    2b34:	b	3834 <sfbpf_compile+0xed8>
    2b38:	b	3834 <sfbpf_compile+0xed8>
    2b3c:	b	3834 <sfbpf_compile+0xed8>
    2b40:	b	3834 <sfbpf_compile+0xed8>
    2b44:	b	3834 <sfbpf_compile+0xed8>
    2b48:	b	3834 <sfbpf_compile+0xed8>
    2b4c:	b	3834 <sfbpf_compile+0xed8>
    2b50:	b	3834 <sfbpf_compile+0xed8>
    2b54:	b	3834 <sfbpf_compile+0xed8>
    2b58:	b	3834 <sfbpf_compile+0xed8>
    2b5c:	b	3834 <sfbpf_compile+0xed8>
    2b60:	b	3834 <sfbpf_compile+0xed8>
    2b64:	b	3834 <sfbpf_compile+0xed8>
    2b68:	b	3834 <sfbpf_compile+0xed8>
    2b6c:	b	3834 <sfbpf_compile+0xed8>
    2b70:	b	3834 <sfbpf_compile+0xed8>
    2b74:	b	3834 <sfbpf_compile+0xed8>
    2b78:	b	3834 <sfbpf_compile+0xed8>
    2b7c:	b	3834 <sfbpf_compile+0xed8>
    2b80:	b	3834 <sfbpf_compile+0xed8>
    2b84:	b	3834 <sfbpf_compile+0xed8>
    2b88:	b	3834 <sfbpf_compile+0xed8>
    2b8c:	b	3834 <sfbpf_compile+0xed8>
    2b90:	b	3834 <sfbpf_compile+0xed8>
    2b94:	b	3044 <sfbpf_compile+0x6e8>
    2b98:	b	306c <sfbpf_compile+0x710>
    2b9c:	b	3834 <sfbpf_compile+0xed8>
    2ba0:	b	3834 <sfbpf_compile+0xed8>
    2ba4:	b	3834 <sfbpf_compile+0xed8>
    2ba8:	b	3834 <sfbpf_compile+0xed8>
    2bac:	b	3834 <sfbpf_compile+0xed8>
    2bb0:	b	3834 <sfbpf_compile+0xed8>
    2bb4:	b	3834 <sfbpf_compile+0xed8>
    2bb8:	b	3834 <sfbpf_compile+0xed8>
    2bbc:	b	3834 <sfbpf_compile+0xed8>
    2bc0:	b	3834 <sfbpf_compile+0xed8>
    2bc4:	b	3834 <sfbpf_compile+0xed8>
    2bc8:	b	3834 <sfbpf_compile+0xed8>
    2bcc:	b	3834 <sfbpf_compile+0xed8>
    2bd0:	b	3834 <sfbpf_compile+0xed8>
    2bd4:	b	3834 <sfbpf_compile+0xed8>
    2bd8:	b	3834 <sfbpf_compile+0xed8>
    2bdc:	b	3834 <sfbpf_compile+0xed8>
    2be0:	b	3834 <sfbpf_compile+0xed8>
    2be4:	b	3834 <sfbpf_compile+0xed8>
    2be8:	b	3834 <sfbpf_compile+0xed8>
    2bec:	b	3834 <sfbpf_compile+0xed8>
    2bf0:	b	3834 <sfbpf_compile+0xed8>
    2bf4:	b	3834 <sfbpf_compile+0xed8>
    2bf8:	b	3834 <sfbpf_compile+0xed8>
    2bfc:	b	3834 <sfbpf_compile+0xed8>
    2c00:	b	3834 <sfbpf_compile+0xed8>
    2c04:	b	3834 <sfbpf_compile+0xed8>
    2c08:	b	3834 <sfbpf_compile+0xed8>
    2c0c:	b	3834 <sfbpf_compile+0xed8>
    2c10:	b	3834 <sfbpf_compile+0xed8>
    2c14:	b	3834 <sfbpf_compile+0xed8>
    2c18:	b	3834 <sfbpf_compile+0xed8>
    2c1c:	b	3834 <sfbpf_compile+0xed8>
    2c20:	b	3834 <sfbpf_compile+0xed8>
    2c24:	b	3834 <sfbpf_compile+0xed8>
    2c28:	b	3834 <sfbpf_compile+0xed8>
    2c2c:	b	3834 <sfbpf_compile+0xed8>
    2c30:	b	3834 <sfbpf_compile+0xed8>
    2c34:	b	3834 <sfbpf_compile+0xed8>
    2c38:	b	3834 <sfbpf_compile+0xed8>
    2c3c:	b	3834 <sfbpf_compile+0xed8>
    2c40:	b	3834 <sfbpf_compile+0xed8>
    2c44:	b	3834 <sfbpf_compile+0xed8>
    2c48:	b	3834 <sfbpf_compile+0xed8>
    2c4c:	b	3834 <sfbpf_compile+0xed8>
    2c50:	b	3834 <sfbpf_compile+0xed8>
    2c54:	b	3834 <sfbpf_compile+0xed8>
    2c58:	b	3314 <sfbpf_compile+0x9b8>
    2c5c:	b	3834 <sfbpf_compile+0xed8>
    2c60:	b	3834 <sfbpf_compile+0xed8>
    2c64:	b	3834 <sfbpf_compile+0xed8>
    2c68:	b	3834 <sfbpf_compile+0xed8>
    2c6c:	b	3044 <sfbpf_compile+0x6e8>
    2c70:	b	310c <sfbpf_compile+0x7b0>
    2c74:	b	3834 <sfbpf_compile+0xed8>
    2c78:	b	3268 <sfbpf_compile+0x90c>
    2c7c:	b	2ffc <sfbpf_compile+0x6a0>
    2c80:	b	3020 <sfbpf_compile+0x6c4>
    2c84:	b	3834 <sfbpf_compile+0xed8>
    2c88:	b	3834 <sfbpf_compile+0xed8>
    2c8c:	b	3834 <sfbpf_compile+0xed8>
    2c90:	b	31f8 <sfbpf_compile+0x89c>
    2c94:	b	3220 <sfbpf_compile+0x8c4>
    2c98:	b	3834 <sfbpf_compile+0xed8>
    2c9c:	b	3834 <sfbpf_compile+0xed8>
    2ca0:	b	3834 <sfbpf_compile+0xed8>
    2ca4:	b	3834 <sfbpf_compile+0xed8>
    2ca8:	b	310c <sfbpf_compile+0x7b0>
    2cac:	b	3834 <sfbpf_compile+0xed8>
    2cb0:	b	3834 <sfbpf_compile+0xed8>
    2cb4:	b	3240 <sfbpf_compile+0x8e4>
    2cb8:	b	3188 <sfbpf_compile+0x82c>
    2cbc:	b	3834 <sfbpf_compile+0xed8>
    2cc0:	b	3834 <sfbpf_compile+0xed8>
    2cc4:	b	3834 <sfbpf_compile+0xed8>
    2cc8:	b	310c <sfbpf_compile+0x7b0>
    2ccc:	b	3834 <sfbpf_compile+0xed8>
    2cd0:	b	2f58 <sfbpf_compile+0x5fc>
    2cd4:	b	333c <sfbpf_compile+0x9e0>
    2cd8:	b	333c <sfbpf_compile+0x9e0>
    2cdc:	b	3438 <sfbpf_compile+0xadc>
    2ce0:	b	340c <sfbpf_compile+0xab0>
    2ce4:	b	333c <sfbpf_compile+0x9e0>
    2ce8:	b	338c <sfbpf_compile+0xa30>
    2cec:	b	3484 <sfbpf_compile+0xb28>
    2cf0:	b	3364 <sfbpf_compile+0xa08>
    2cf4:	b	32ac <sfbpf_compile+0x950>
    2cf8:	b	3558 <sfbpf_compile+0xbfc>
    2cfc:	b	3514 <sfbpf_compile+0xbb8>
    2d00:	b	3834 <sfbpf_compile+0xed8>
    2d04:	b	3834 <sfbpf_compile+0xed8>
    2d08:	b	32f4 <sfbpf_compile+0x998>
    2d0c:	b	32d4 <sfbpf_compile+0x978>
    2d10:	b	3834 <sfbpf_compile+0xed8>
    2d14:	b	3834 <sfbpf_compile+0xed8>
    2d18:	b	3834 <sfbpf_compile+0xed8>
    2d1c:	b	3834 <sfbpf_compile+0xed8>
    2d20:	b	3834 <sfbpf_compile+0xed8>
    2d24:	b	3834 <sfbpf_compile+0xed8>
    2d28:	b	3834 <sfbpf_compile+0xed8>
    2d2c:	b	3834 <sfbpf_compile+0xed8>
    2d30:	b	3834 <sfbpf_compile+0xed8>
    2d34:	b	3834 <sfbpf_compile+0xed8>
    2d38:	b	3834 <sfbpf_compile+0xed8>
    2d3c:	b	3834 <sfbpf_compile+0xed8>
    2d40:	b	3834 <sfbpf_compile+0xed8>
    2d44:	b	3834 <sfbpf_compile+0xed8>
    2d48:	b	3834 <sfbpf_compile+0xed8>
    2d4c:	b	3834 <sfbpf_compile+0xed8>
    2d50:	b	3834 <sfbpf_compile+0xed8>
    2d54:	b	3834 <sfbpf_compile+0xed8>
    2d58:	b	310c <sfbpf_compile+0x7b0>
    2d5c:	b	345c <sfbpf_compile+0xb00>
    2d60:	b	3834 <sfbpf_compile+0xed8>
    2d64:	b	3044 <sfbpf_compile+0x6e8>
    2d68:	b	33b4 <sfbpf_compile+0xa58>
    2d6c:	b	33e0 <sfbpf_compile+0xa84>
    2d70:	b	3834 <sfbpf_compile+0xed8>
    2d74:	b	3834 <sfbpf_compile+0xed8>
    2d78:	b	3834 <sfbpf_compile+0xed8>
    2d7c:	b	3834 <sfbpf_compile+0xed8>
    2d80:	b	3834 <sfbpf_compile+0xed8>
    2d84:	b	3834 <sfbpf_compile+0xed8>
    2d88:	b	3834 <sfbpf_compile+0xed8>
    2d8c:	b	3834 <sfbpf_compile+0xed8>
    2d90:	b	35e0 <sfbpf_compile+0xc84>
    2d94:	b	33b4 <sfbpf_compile+0xa58>
    2d98:	b	333c <sfbpf_compile+0x9e0>
    2d9c:	b	333c <sfbpf_compile+0x9e0>
    2da0:	b	333c <sfbpf_compile+0x9e0>
    2da4:	b	3288 <sfbpf_compile+0x92c>
    2da8:	b	34a8 <sfbpf_compile+0xb4c>
    2dac:	b	3834 <sfbpf_compile+0xed8>
    2db0:	b	3834 <sfbpf_compile+0xed8>
    2db4:	b	3600 <sfbpf_compile+0xca4>
    2db8:	b	3620 <sfbpf_compile+0xcc4>
    2dbc:	b	3834 <sfbpf_compile+0xed8>
    2dc0:	b	3640 <sfbpf_compile+0xce4>
    2dc4:	b	3660 <sfbpf_compile+0xd04>
    2dc8:	b	3680 <sfbpf_compile+0xd24>
    2dcc:	b	3138 <sfbpf_compile+0x7dc>
    2dd0:	b	36a0 <sfbpf_compile+0xd44>
    2dd4:	b	34f0 <sfbpf_compile+0xb94>
    2dd8:	b	36c0 <sfbpf_compile+0xd64>
    2ddc:	b	36e0 <sfbpf_compile+0xd84>
    2de0:	b	359c <sfbpf_compile+0xc40>
    2de4:	b	3700 <sfbpf_compile+0xda4>
    2de8:	b	3720 <sfbpf_compile+0xdc4>
    2dec:	b	34cc <sfbpf_compile+0xb70>
    2df0:	b	3740 <sfbpf_compile+0xde4>
    2df4:	b	3760 <sfbpf_compile+0xe04>
    2df8:	b	3834 <sfbpf_compile+0xed8>
    2dfc:	b	3834 <sfbpf_compile+0xed8>
    2e00:	b	3834 <sfbpf_compile+0xed8>
    2e04:	b	3834 <sfbpf_compile+0xed8>
    2e08:	b	3834 <sfbpf_compile+0xed8>
    2e0c:	b	3834 <sfbpf_compile+0xed8>
    2e10:	b	3834 <sfbpf_compile+0xed8>
    2e14:	b	3834 <sfbpf_compile+0xed8>
    2e18:	b	3834 <sfbpf_compile+0xed8>
    2e1c:	b	3834 <sfbpf_compile+0xed8>
    2e20:	b	3834 <sfbpf_compile+0xed8>
    2e24:	b	3834 <sfbpf_compile+0xed8>
    2e28:	b	3788 <sfbpf_compile+0xe2c>
    2e2c:	b	3834 <sfbpf_compile+0xed8>
    2e30:	b	3834 <sfbpf_compile+0xed8>
    2e34:	b	3834 <sfbpf_compile+0xed8>
    2e38:	b	37a8 <sfbpf_compile+0xe4c>
    2e3c:	b	37c8 <sfbpf_compile+0xe6c>
    2e40:	b	3834 <sfbpf_compile+0xed8>
    2e44:	b	3834 <sfbpf_compile+0xed8>
    2e48:	b	3834 <sfbpf_compile+0xed8>
    2e4c:	b	3834 <sfbpf_compile+0xed8>
    2e50:	b	3834 <sfbpf_compile+0xed8>
    2e54:	b	3808 <sfbpf_compile+0xeac>
    2e58:	b	37e8 <sfbpf_compile+0xe8c>
    2e5c:	b	31d8 <sfbpf_compile+0x87c>
    2e60:	b	31d8 <sfbpf_compile+0x87c>
    2e64:	ldr	ip, [pc, #2676]	; 38e0 <sfbpf_compile+0xf84>
    2e68:	add	ip, pc, ip
    2e6c:	ldr	r3, [pc, #2672]	; 38e4 <sfbpf_compile+0xf88>
    2e70:	add	r3, pc, r3
    2e74:	ldrd	r0, [r3]
    2e78:	strd	r0, [ip, #132]	; 0x84
    2e7c:	ldrd	r0, [r3, #8]
    2e80:	strd	r0, [ip, #140]	; 0x8c
    2e84:	ldrd	r0, [r3, #16]
    2e88:	strd	r0, [ip, #148]	; 0x94
    2e8c:	ldrd	r0, [r3, #24]
    2e90:	strd	r0, [ip, #156]	; 0x9c
    2e94:	ldrb	r3, [r3, #32]
    2e98:	strb	r3, [ip, #164]	; 0xa4
    2e9c:	mvn	r4, #0
    2ea0:	b	2a04 <sfbpf_compile+0xa8>
    2ea4:	ldr	r0, [pc, #2620]	; 38e8 <sfbpf_compile+0xf8c>
    2ea8:	add	r0, pc, r0
    2eac:	b	2a4c <sfbpf_compile+0xf0>
    2eb0:	ldr	r3, [pc, #2612]	; 38ec <sfbpf_compile+0xf90>
    2eb4:	add	r3, pc, r3
    2eb8:	mov	r2, #2
    2ebc:	str	r2, [r3, #944]	; 0x3b0
    2ec0:	mov	r2, #6
    2ec4:	str	r2, [r3, #940]	; 0x3ac
    2ec8:	mov	r2, #0
    2ecc:	str	r2, [r3, #948]	; 0x3b4
    2ed0:	str	r2, [r3, #952]	; 0x3b8
    2ed4:	bl	fd54 <sfbpf_parse>
    2ed8:	ldr	r3, [pc, #2532]	; 38c4 <sfbpf_compile+0xf68>
    2edc:	ldr	r2, [sp]
    2ee0:	ldr	r3, [r2, r3]
    2ee4:	ldr	r4, [r3]
    2ee8:	cmp	r4, #0
    2eec:	bne	3844 <sfbpf_compile+0xee8>
    2ef0:	ldr	r3, [pc, #2552]	; 38f0 <sfbpf_compile+0xf94>
    2ef4:	add	r3, pc, r3
    2ef8:	ldr	r3, [r3, #868]	; 0x364
    2efc:	cmp	r3, #0
    2f00:	beq	3850 <sfbpf_compile+0xef4>
    2f04:	ldr	r3, [sp, #40]	; 0x28
    2f08:	cmp	r3, #0
    2f0c:	beq	2f28 <sfbpf_compile+0x5cc>
    2f10:	ldr	r3, [pc, #2472]	; 38c0 <sfbpf_compile+0xf64>
    2f14:	ldr	r2, [sp]
    2f18:	ldr	r3, [r2, r3]
    2f1c:	ldr	r3, [r3]
    2f20:	cmp	r3, #0
    2f24:	beq	387c <sfbpf_compile+0xf20>
    2f28:	add	r1, sp, #16
    2f2c:	ldr	r3, [pc, #2496]	; 38f4 <sfbpf_compile+0xf98>
    2f30:	add	r3, pc, r3
    2f34:	ldr	r0, [r3, #868]	; 0x364
    2f38:	bl	f94c <sf_icode_to_fcode>
    2f3c:	ldr	r2, [sp, #12]
    2f40:	str	r0, [r2, #4]
    2f44:	ldr	r3, [sp, #16]
    2f48:	str	r3, [r2]
    2f4c:	bl	136a8 <sf_lex_cleanup>
    2f50:	bl	2238 <freechunks>
    2f54:	b	2a04 <sfbpf_compile+0xa8>
    2f58:	ldr	r3, [pc, #2456]	; 38f8 <sfbpf_compile+0xf9c>
    2f5c:	add	r3, pc, r3
    2f60:	mov	r2, #4
    2f64:	str	r2, [r3, #944]	; 0x3b0
    2f68:	mov	r2, #8
    2f6c:	str	r2, [r3, #940]	; 0x3ac
    2f70:	mov	r2, #0
    2f74:	str	r2, [r3, #948]	; 0x3b4
    2f78:	str	r2, [r3, #952]	; 0x3b8
    2f7c:	b	2ed4 <sfbpf_compile+0x578>
    2f80:	ldr	r3, [pc, #2420]	; 38fc <sfbpf_compile+0xfa0>
    2f84:	add	r3, pc, r3
    2f88:	mov	r2, #12
    2f8c:	str	r2, [r3, #944]	; 0x3b0
    2f90:	mov	r2, #14
    2f94:	str	r2, [r3, #940]	; 0x3ac
    2f98:	mov	r2, #0
    2f9c:	str	r2, [r3, #948]	; 0x3b4
    2fa0:	mov	r2, #3
    2fa4:	str	r2, [r3, #952]	; 0x3b8
    2fa8:	b	2ed4 <sfbpf_compile+0x578>
    2fac:	ldr	r3, [pc, #2380]	; 3900 <sfbpf_compile+0xfa4>
    2fb0:	add	r3, pc, r3
    2fb4:	mvn	r2, #0
    2fb8:	str	r2, [r3, #944]	; 0x3b0
    2fbc:	mov	r2, #16
    2fc0:	str	r2, [r3, #940]	; 0x3ac
    2fc4:	mov	r2, #0
    2fc8:	str	r2, [r3, #948]	; 0x3b4
    2fcc:	str	r2, [r3, #952]	; 0x3b8
    2fd0:	b	2ed4 <sfbpf_compile+0x578>
    2fd4:	ldr	r3, [pc, #2344]	; 3904 <sfbpf_compile+0xfa8>
    2fd8:	add	r3, pc, r3
    2fdc:	mvn	r2, #0
    2fe0:	str	r2, [r3, #944]	; 0x3b0
    2fe4:	mov	r2, #24
    2fe8:	str	r2, [r3, #940]	; 0x3ac
    2fec:	mov	r2, #0
    2ff0:	str	r2, [r3, #948]	; 0x3b4
    2ff4:	str	r2, [r3, #952]	; 0x3b8
    2ff8:	b	2ed4 <sfbpf_compile+0x578>
    2ffc:	ldr	r3, [pc, #2308]	; 3908 <sfbpf_compile+0xfac>
    3000:	add	r3, pc, r3
    3004:	mov	r2, #0
    3008:	str	r2, [r3, #944]	; 0x3b0
    300c:	mov	r1, #4
    3010:	str	r1, [r3, #940]	; 0x3ac
    3014:	str	r2, [r3, #948]	; 0x3b4
    3018:	str	r2, [r3, #952]	; 0x3b8
    301c:	b	2ed4 <sfbpf_compile+0x578>
    3020:	ldr	r3, [pc, #2276]	; 390c <sfbpf_compile+0xfb0>
    3024:	add	r3, pc, r3
    3028:	mov	r2, #0
    302c:	str	r2, [r3, #944]	; 0x3b0
    3030:	mov	r1, #12
    3034:	str	r1, [r3, #940]	; 0x3ac
    3038:	str	r2, [r3, #948]	; 0x3b4
    303c:	str	r2, [r3, #952]	; 0x3b8
    3040:	b	2ed4 <sfbpf_compile+0x578>
    3044:	ldr	r3, [pc, #2244]	; 3910 <sfbpf_compile+0xfb4>
    3048:	add	r3, pc, r3
    304c:	mov	r2, #2
    3050:	str	r2, [r3, #944]	; 0x3b0
    3054:	mov	r2, #4
    3058:	str	r2, [r3, #940]	; 0x3ac
    305c:	mov	r2, #0
    3060:	str	r2, [r3, #948]	; 0x3b4
    3064:	str	r2, [r3, #952]	; 0x3b8
    3068:	b	2ed4 <sfbpf_compile+0x578>
    306c:	ldr	r3, [pc, #2208]	; 3914 <sfbpf_compile+0xfb8>
    3070:	add	r3, pc, r3
    3074:	mov	r2, #6
    3078:	str	r2, [r3, #944]	; 0x3b0
    307c:	mov	r2, #8
    3080:	str	r2, [r3, #940]	; 0x3ac
    3084:	mov	r2, #0
    3088:	str	r2, [r3, #948]	; 0x3b4
    308c:	str	r2, [r3, #952]	; 0x3b8
    3090:	b	2ed4 <sfbpf_compile+0x578>
    3094:	ldr	r3, [pc, #2172]	; 3918 <sfbpf_compile+0xfbc>
    3098:	add	r3, pc, r3
    309c:	mov	r2, #5
    30a0:	str	r2, [r3, #944]	; 0x3b0
    30a4:	mov	r2, #24
    30a8:	str	r2, [r3, #940]	; 0x3ac
    30ac:	mov	r2, #0
    30b0:	str	r2, [r3, #948]	; 0x3b4
    30b4:	str	r2, [r3, #952]	; 0x3b8
    30b8:	b	2ed4 <sfbpf_compile+0x578>
    30bc:	ldr	r3, [pc, #2136]	; 391c <sfbpf_compile+0xfc0>
    30c0:	add	r3, pc, r3
    30c4:	mov	r2, #13
    30c8:	str	r2, [r3, #944]	; 0x3b0
    30cc:	str	r2, [r3, #940]	; 0x3ac
    30d0:	mov	r2, #8
    30d4:	str	r2, [r3, #948]	; 0x3b4
    30d8:	mov	r2, #3
    30dc:	str	r2, [r3, #952]	; 0x3b8
    30e0:	b	2ed4 <sfbpf_compile+0x578>
    30e4:	ldr	r3, [pc, #2100]	; 3920 <sfbpf_compile+0xfc4>
    30e8:	add	r3, pc, r3
    30ec:	mov	r2, #14
    30f0:	str	r2, [r3, #944]	; 0x3b0
    30f4:	str	r2, [r3, #940]	; 0x3ac
    30f8:	mov	r2, #8
    30fc:	str	r2, [r3, #948]	; 0x3b4
    3100:	mov	r2, #3
    3104:	str	r2, [r3, #952]	; 0x3b8
    3108:	b	2ed4 <sfbpf_compile+0x578>
    310c:	ldr	r3, [pc, #2064]	; 3924 <sfbpf_compile+0xfc8>
    3110:	add	r3, pc, r3
    3114:	mov	r2, #24
    3118:	str	r2, [r3, #944]	; 0x3b0
    311c:	mov	r2, #1
    3120:	str	r2, [r3, #860]	; 0x35c
    3124:	mov	r2, #8
    3128:	str	r2, [r3, #948]	; 0x3b4
    312c:	mov	r2, #3
    3130:	str	r2, [r3, #952]	; 0x3b8
    3134:	b	2ed4 <sfbpf_compile+0x578>
    3138:	ldr	r3, [pc, #2024]	; 3928 <sfbpf_compile+0xfcc>
    313c:	add	r3, pc, r3
    3140:	mov	r2, #24
    3144:	str	r2, [r3, #944]	; 0x3b0
    3148:	mov	r2, #1
    314c:	str	r2, [r3, #860]	; 0x35c
    3150:	mov	r2, #8
    3154:	str	r2, [r3, #948]	; 0x3b4
    3158:	mov	r2, #3
    315c:	str	r2, [r3, #952]	; 0x3b8
    3160:	b	2ed4 <sfbpf_compile+0x578>
    3164:	ldr	r3, [pc, #1984]	; 392c <sfbpf_compile+0xfd0>
    3168:	add	r3, pc, r3
    316c:	mov	r2, #0
    3170:	str	r2, [r3, #944]	; 0x3b0
    3174:	mov	r2, #8
    3178:	str	r2, [r3, #948]	; 0x3b4
    317c:	mov	r2, #3
    3180:	str	r2, [r3, #952]	; 0x3b8
    3184:	b	2ed4 <sfbpf_compile+0x578>
    3188:	ldr	r3, [pc, #1952]	; 3930 <sfbpf_compile+0xfd4>
    318c:	add	r3, pc, r3
    3190:	mov	r2, #1
    3194:	str	r2, [r3, #888]	; 0x378
    3198:	str	r2, [r3, #896]	; 0x380
    319c:	mov	r2, #2
    31a0:	str	r2, [r3, #900]	; 0x384
    31a4:	mov	r2, #0
    31a8:	str	r2, [r3, #904]	; 0x388
    31ac:	mvn	r2, #0
    31b0:	str	r2, [r3, #884]	; 0x374
    31b4:	mov	r2, #4
    31b8:	str	r2, [r3, #908]	; 0x38c
    31bc:	str	r2, [r3, #944]	; 0x3b0
    31c0:	str	r2, [r3, #940]	; 0x3ac
    31c4:	mov	r2, #8
    31c8:	str	r2, [r3, #948]	; 0x3b4
    31cc:	mov	r2, #3
    31d0:	str	r2, [r3, #952]	; 0x3b8
    31d4:	b	2ed4 <sfbpf_compile+0x578>
    31d8:	ldr	r3, [pc, #1876]	; 3934 <sfbpf_compile+0xfd8>
    31dc:	add	r3, pc, r3
    31e0:	mvn	r2, #0
    31e4:	str	r2, [r3, #944]	; 0x3b0
    31e8:	mov	r2, #0
    31ec:	str	r2, [r3, #948]	; 0x3b4
    31f0:	str	r2, [r3, #952]	; 0x3b8
    31f4:	b	2ed4 <sfbpf_compile+0x578>
    31f8:	ldr	r3, [pc, #1848]	; 3938 <sfbpf_compile+0xfdc>
    31fc:	add	r3, pc, r3
    3200:	mov	r2, #14
    3204:	str	r2, [r3, #944]	; 0x3b0
    3208:	mov	r2, #16
    320c:	str	r2, [r3, #940]	; 0x3ac
    3210:	mov	r2, #0
    3214:	str	r2, [r3, #948]	; 0x3b4
    3218:	str	r2, [r3, #952]	; 0x3b8
    321c:	b	2ed4 <sfbpf_compile+0x578>
    3220:	ldr	r3, [pc, #1812]	; 393c <sfbpf_compile+0xfe0>
    3224:	add	r3, pc, r3
    3228:	mvn	r2, #0
    322c:	str	r2, [r3, #944]	; 0x3b0
    3230:	mov	r2, #0
    3234:	str	r2, [r3, #948]	; 0x3b4
    3238:	str	r2, [r3, #952]	; 0x3b8
    323c:	b	2ed4 <sfbpf_compile+0x578>
    3240:	ldr	r3, [pc, #1784]	; 3940 <sfbpf_compile+0xfe4>
    3244:	add	r3, pc, r3
    3248:	mov	r2, #16
    324c:	str	r2, [r3, #944]	; 0x3b0
    3250:	str	r2, [r3, #940]	; 0x3ac
    3254:	mov	r2, #8
    3258:	str	r2, [r3, #948]	; 0x3b4
    325c:	mov	r2, #3
    3260:	str	r2, [r3, #952]	; 0x3b8
    3264:	b	2ed4 <sfbpf_compile+0x578>
    3268:	ldr	r3, [pc, #1748]	; 3944 <sfbpf_compile+0xfe8>
    326c:	add	r3, pc, r3
    3270:	mvn	r2, #0
    3274:	str	r2, [r3, #944]	; 0x3b0
    3278:	mov	r2, #0
    327c:	str	r2, [r3, #948]	; 0x3b4
    3280:	str	r2, [r3, #952]	; 0x3b8
    3284:	b	2ed4 <sfbpf_compile+0x578>
    3288:	ldr	r3, [pc, #1720]	; 3948 <sfbpf_compile+0xfec>
    328c:	add	r3, pc, r3
    3290:	mvn	r2, #0
    3294:	str	r2, [r3, #944]	; 0x3b0
    3298:	mov	r2, #4
    329c:	str	r2, [r3, #948]	; 0x3b4
    32a0:	mov	r2, #0
    32a4:	str	r2, [r3, #952]	; 0x3b8
    32a8:	b	2ed4 <sfbpf_compile+0x578>
    32ac:	ldr	r3, [pc, #1688]	; 394c <sfbpf_compile+0xff0>
    32b0:	add	r3, pc, r3
    32b4:	mov	r2, #16
    32b8:	str	r2, [r3, #944]	; 0x3b0
    32bc:	mov	r2, #18
    32c0:	str	r2, [r3, #940]	; 0x3ac
    32c4:	mov	r2, #0
    32c8:	str	r2, [r3, #948]	; 0x3b4
    32cc:	str	r2, [r3, #952]	; 0x3b8
    32d0:	b	2ed4 <sfbpf_compile+0x578>
    32d4:	ldr	r3, [pc, #1652]	; 3950 <sfbpf_compile+0xff4>
    32d8:	add	r3, pc, r3
    32dc:	mvn	r2, #0
    32e0:	str	r2, [r3, #944]	; 0x3b0
    32e4:	str	r2, [r3, #940]	; 0x3ac
    32e8:	str	r2, [r3, #948]	; 0x3b4
    32ec:	str	r2, [r3, #952]	; 0x3b8
    32f0:	b	2ed4 <sfbpf_compile+0x578>
    32f4:	ldr	r3, [pc, #1624]	; 3954 <sfbpf_compile+0xff8>
    32f8:	add	r3, pc, r3
    32fc:	mvn	r2, #0
    3300:	str	r2, [r3, #944]	; 0x3b0
    3304:	str	r2, [r3, #940]	; 0x3ac
    3308:	str	r2, [r3, #948]	; 0x3b4
    330c:	str	r2, [r3, #952]	; 0x3b8
    3310:	b	2ed4 <sfbpf_compile+0x578>
    3314:	ldr	r3, [pc, #1596]	; 3958 <sfbpf_compile+0xffc>
    3318:	add	r3, pc, r3
    331c:	mov	r2, #6
    3320:	str	r2, [r3, #944]	; 0x3b0
    3324:	mov	r2, #44	; 0x2c
    3328:	str	r2, [r3, #940]	; 0x3ac
    332c:	mov	r2, #0
    3330:	str	r2, [r3, #948]	; 0x3b4
    3334:	str	r2, [r3, #952]	; 0x3b8
    3338:	b	2ed4 <sfbpf_compile+0x578>
    333c:	ldr	r3, [pc, #1560]	; 395c <sfbpf_compile+0x1000>
    3340:	add	r3, pc, r3
    3344:	mov	r2, #4
    3348:	str	r2, [r3, #944]	; 0x3b0
    334c:	str	r2, [r3, #940]	; 0x3ac
    3350:	mov	r2, #0
    3354:	str	r2, [r3, #948]	; 0x3b4
    3358:	mvn	r2, #0
    335c:	str	r2, [r3, #952]	; 0x3b8
    3360:	b	2ed4 <sfbpf_compile+0x578>
    3364:	ldr	r3, [pc, #1524]	; 3960 <sfbpf_compile+0x1004>
    3368:	add	r3, pc, r3
    336c:	mov	r2, #4
    3370:	str	r2, [r3, #944]	; 0x3b0
    3374:	str	r2, [r3, #940]	; 0x3ac
    3378:	mov	r2, #0
    337c:	str	r2, [r3, #948]	; 0x3b4
    3380:	mov	r2, #10
    3384:	str	r2, [r3, #952]	; 0x3b8
    3388:	b	2ed4 <sfbpf_compile+0x578>
    338c:	ldr	r3, [pc, #1488]	; 3964 <sfbpf_compile+0x1008>
    3390:	add	r3, pc, r3
    3394:	mov	r2, #8
    3398:	str	r2, [r3, #944]	; 0x3b0
    339c:	str	r2, [r3, #940]	; 0x3ac
    33a0:	mov	r2, #0
    33a4:	str	r2, [r3, #948]	; 0x3b4
    33a8:	mov	r2, #10
    33ac:	str	r2, [r3, #952]	; 0x3b8
    33b0:	b	2ed4 <sfbpf_compile+0x578>
    33b4:	ldr	r3, [pc, #1452]	; 3968 <sfbpf_compile+0x100c>
    33b8:	add	r3, pc, r3
    33bc:	mov	r2, #14
    33c0:	str	r2, [r3, #940]	; 0x3ac
    33c4:	mov	r2, #16
    33c8:	str	r2, [r3, #944]	; 0x3b0
    33cc:	mov	r2, #18
    33d0:	str	r2, [r3, #948]	; 0x3b4
    33d4:	mov	r2, #21
    33d8:	str	r2, [r3, #952]	; 0x3b8
    33dc:	b	2ed4 <sfbpf_compile+0x578>
    33e0:	ldr	r3, [pc, #1412]	; 396c <sfbpf_compile+0x1010>
    33e4:	add	r3, pc, r3
    33e8:	mov	r2, #4
    33ec:	str	r2, [r3, #944]	; 0x3b0
    33f0:	mov	r2, #6
    33f4:	str	r2, [r3, #940]	; 0x3ac
    33f8:	mov	r2, #0
    33fc:	str	r2, [r3, #948]	; 0x3b4
    3400:	mvn	r2, #0
    3404:	str	r2, [r3, #952]	; 0x3b8
    3408:	b	2ed4 <sfbpf_compile+0x578>
    340c:	ldr	r3, [pc, #1372]	; 3970 <sfbpf_compile+0x1014>
    3410:	add	r3, pc, r3
    3414:	mov	r2, #6
    3418:	str	r2, [r3, #944]	; 0x3b0
    341c:	mov	r2, #12
    3420:	str	r2, [r3, #940]	; 0x3ac
    3424:	mov	r2, #0
    3428:	str	r2, [r3, #948]	; 0x3b4
    342c:	mvn	r2, #0
    3430:	str	r2, [r3, #952]	; 0x3b8
    3434:	b	2ed4 <sfbpf_compile+0x578>
    3438:	ldr	r3, [pc, #1332]	; 3974 <sfbpf_compile+0x1018>
    343c:	add	r3, pc, r3
    3440:	mov	r2, #6
    3444:	str	r2, [r3, #944]	; 0x3b0
    3448:	mvn	r2, #0
    344c:	str	r2, [r3, #940]	; 0x3ac
    3450:	str	r2, [r3, #948]	; 0x3b4
    3454:	str	r2, [r3, #952]	; 0x3b8
    3458:	b	2ed4 <sfbpf_compile+0x578>
    345c:	ldr	r3, [pc, #1300]	; 3978 <sfbpf_compile+0x101c>
    3460:	add	r3, pc, r3
    3464:	mov	r2, #12
    3468:	str	r2, [r3, #944]	; 0x3b0
    346c:	str	r2, [r3, #940]	; 0x3ac
    3470:	mov	r2, #0
    3474:	str	r2, [r3, #948]	; 0x3b4
    3478:	mvn	r2, #0
    347c:	str	r2, [r3, #952]	; 0x3b8
    3480:	b	2ed4 <sfbpf_compile+0x578>
    3484:	ldr	r3, [pc, #1264]	; 397c <sfbpf_compile+0x1020>
    3488:	add	r3, pc, r3
    348c:	mov	r2, #12
    3490:	str	r2, [r3, #944]	; 0x3b0
    3494:	mvn	r2, #0
    3498:	str	r2, [r3, #940]	; 0x3ac
    349c:	str	r2, [r3, #948]	; 0x3b4
    34a0:	str	r2, [r3, #952]	; 0x3b8
    34a4:	b	2ed4 <sfbpf_compile+0x578>
    34a8:	ldr	r3, [pc, #1232]	; 3980 <sfbpf_compile+0x1024>
    34ac:	add	r3, pc, r3
    34b0:	mov	r2, #18
    34b4:	str	r2, [r3, #944]	; 0x3b0
    34b8:	mvn	r2, #0
    34bc:	str	r2, [r3, #940]	; 0x3ac
    34c0:	str	r2, [r3, #948]	; 0x3b4
    34c4:	str	r2, [r3, #952]	; 0x3b8
    34c8:	b	2ed4 <sfbpf_compile+0x578>
    34cc:	ldr	r3, [pc, #1200]	; 3984 <sfbpf_compile+0x1028>
    34d0:	add	r3, pc, r3
    34d4:	mov	r2, #18
    34d8:	str	r2, [r3, #944]	; 0x3b0
    34dc:	mvn	r2, #0
    34e0:	str	r2, [r3, #940]	; 0x3ac
    34e4:	str	r2, [r3, #948]	; 0x3b4
    34e8:	str	r2, [r3, #952]	; 0x3b8
    34ec:	b	2ed4 <sfbpf_compile+0x578>
    34f0:	ldr	r3, [pc, #1168]	; 3988 <sfbpf_compile+0x102c>
    34f4:	add	r3, pc, r3
    34f8:	mov	r2, #8
    34fc:	str	r2, [r3, #944]	; 0x3b0
    3500:	mvn	r2, #0
    3504:	str	r2, [r3, #940]	; 0x3ac
    3508:	str	r2, [r3, #948]	; 0x3b4
    350c:	str	r2, [r3, #952]	; 0x3b8
    3510:	b	2ed4 <sfbpf_compile+0x578>
    3514:	ldr	r3, [pc, #1136]	; 398c <sfbpf_compile+0x1030>
    3518:	add	r3, pc, r3
    351c:	mov	r2, #2
    3520:	str	r2, [r3, #916]	; 0x394
    3524:	mov	r2, #3
    3528:	str	r2, [r3, #920]	; 0x398
    352c:	mov	r2, #4
    3530:	str	r2, [r3, #924]	; 0x39c
    3534:	str	r2, [r3, #928]	; 0x3a0
    3538:	mov	r2, #7
    353c:	str	r2, [r3, #932]	; 0x3a4
    3540:	mvn	r2, #0
    3544:	str	r2, [r3, #944]	; 0x3b0
    3548:	str	r2, [r3, #940]	; 0x3ac
    354c:	str	r2, [r3, #948]	; 0x3b4
    3550:	str	r2, [r3, #952]	; 0x3b8
    3554:	b	2ed4 <sfbpf_compile+0x578>
    3558:	ldr	r3, [pc, #1072]	; 3990 <sfbpf_compile+0x1034>
    355c:	add	r3, pc, r3
    3560:	mov	r2, #6
    3564:	str	r2, [r3, #916]	; 0x394
    3568:	mov	r2, #7
    356c:	str	r2, [r3, #920]	; 0x398
    3570:	mov	r2, #8
    3574:	str	r2, [r3, #924]	; 0x39c
    3578:	str	r2, [r3, #928]	; 0x3a0
    357c:	mov	r2, #11
    3580:	str	r2, [r3, #932]	; 0x3a4
    3584:	mvn	r2, #0
    3588:	str	r2, [r3, #944]	; 0x3b0
    358c:	str	r2, [r3, #940]	; 0x3ac
    3590:	str	r2, [r3, #948]	; 0x3b4
    3594:	str	r2, [r3, #952]	; 0x3b8
    3598:	b	2ed4 <sfbpf_compile+0x578>
    359c:	ldr	r3, [pc, #1008]	; 3994 <sfbpf_compile+0x1038>
    35a0:	add	r3, pc, r3
    35a4:	mov	r2, #22
    35a8:	str	r2, [r3, #916]	; 0x394
    35ac:	mov	r2, #23
    35b0:	str	r2, [r3, #920]	; 0x398
    35b4:	mov	r2, #24
    35b8:	str	r2, [r3, #924]	; 0x39c
    35bc:	str	r2, [r3, #928]	; 0x3a0
    35c0:	mov	r2, #27
    35c4:	str	r2, [r3, #932]	; 0x3a4
    35c8:	mvn	r2, #0
    35cc:	str	r2, [r3, #944]	; 0x3b0
    35d0:	str	r2, [r3, #940]	; 0x3ac
    35d4:	str	r2, [r3, #948]	; 0x3b4
    35d8:	str	r2, [r3, #952]	; 0x3b8
    35dc:	b	2ed4 <sfbpf_compile+0x578>
    35e0:	ldr	r3, [pc, #944]	; 3998 <sfbpf_compile+0x103c>
    35e4:	add	r3, pc, r3
    35e8:	mvn	r2, #0
    35ec:	str	r2, [r3, #944]	; 0x3b0
    35f0:	str	r2, [r3, #940]	; 0x3ac
    35f4:	str	r2, [r3, #948]	; 0x3b4
    35f8:	str	r2, [r3, #952]	; 0x3b8
    35fc:	b	2ed4 <sfbpf_compile+0x578>
    3600:	ldr	r3, [pc, #916]	; 399c <sfbpf_compile+0x1040>
    3604:	add	r3, pc, r3
    3608:	mvn	r2, #0
    360c:	str	r2, [r3, #944]	; 0x3b0
    3610:	str	r2, [r3, #940]	; 0x3ac
    3614:	str	r2, [r3, #948]	; 0x3b4
    3618:	str	r2, [r3, #952]	; 0x3b8
    361c:	b	2ed4 <sfbpf_compile+0x578>
    3620:	ldr	r3, [pc, #888]	; 39a0 <sfbpf_compile+0x1044>
    3624:	add	r3, pc, r3
    3628:	mvn	r2, #0
    362c:	str	r2, [r3, #944]	; 0x3b0
    3630:	str	r2, [r3, #940]	; 0x3ac
    3634:	str	r2, [r3, #948]	; 0x3b4
    3638:	str	r2, [r3, #952]	; 0x3b8
    363c:	b	2ed4 <sfbpf_compile+0x578>
    3640:	ldr	r3, [pc, #860]	; 39a4 <sfbpf_compile+0x1048>
    3644:	add	r3, pc, r3
    3648:	mvn	r2, #0
    364c:	str	r2, [r3, #944]	; 0x3b0
    3650:	str	r2, [r3, #940]	; 0x3ac
    3654:	str	r2, [r3, #948]	; 0x3b4
    3658:	str	r2, [r3, #952]	; 0x3b8
    365c:	b	2ed4 <sfbpf_compile+0x578>
    3660:	ldr	r3, [pc, #832]	; 39a8 <sfbpf_compile+0x104c>
    3664:	add	r3, pc, r3
    3668:	mvn	r2, #0
    366c:	str	r2, [r3, #944]	; 0x3b0
    3670:	str	r2, [r3, #940]	; 0x3ac
    3674:	str	r2, [r3, #948]	; 0x3b4
    3678:	str	r2, [r3, #952]	; 0x3b8
    367c:	b	2ed4 <sfbpf_compile+0x578>
    3680:	ldr	r3, [pc, #804]	; 39ac <sfbpf_compile+0x1050>
    3684:	add	r3, pc, r3
    3688:	mvn	r2, #0
    368c:	str	r2, [r3, #944]	; 0x3b0
    3690:	str	r2, [r3, #940]	; 0x3ac
    3694:	str	r2, [r3, #948]	; 0x3b4
    3698:	str	r2, [r3, #952]	; 0x3b8
    369c:	b	2ed4 <sfbpf_compile+0x578>
    36a0:	ldr	r3, [pc, #776]	; 39b0 <sfbpf_compile+0x1054>
    36a4:	add	r3, pc, r3
    36a8:	mvn	r2, #0
    36ac:	str	r2, [r3, #944]	; 0x3b0
    36b0:	str	r2, [r3, #940]	; 0x3ac
    36b4:	str	r2, [r3, #948]	; 0x3b4
    36b8:	str	r2, [r3, #952]	; 0x3b8
    36bc:	b	2ed4 <sfbpf_compile+0x578>
    36c0:	ldr	r3, [pc, #748]	; 39b4 <sfbpf_compile+0x1058>
    36c4:	add	r3, pc, r3
    36c8:	mvn	r2, #0
    36cc:	str	r2, [r3, #944]	; 0x3b0
    36d0:	str	r2, [r3, #940]	; 0x3ac
    36d4:	str	r2, [r3, #948]	; 0x3b4
    36d8:	str	r2, [r3, #952]	; 0x3b8
    36dc:	b	2ed4 <sfbpf_compile+0x578>
    36e0:	ldr	r3, [pc, #720]	; 39b8 <sfbpf_compile+0x105c>
    36e4:	add	r3, pc, r3
    36e8:	mvn	r2, #0
    36ec:	str	r2, [r3, #944]	; 0x3b0
    36f0:	str	r2, [r3, #940]	; 0x3ac
    36f4:	str	r2, [r3, #948]	; 0x3b4
    36f8:	str	r2, [r3, #952]	; 0x3b8
    36fc:	b	2ed4 <sfbpf_compile+0x578>
    3700:	ldr	r3, [pc, #692]	; 39bc <sfbpf_compile+0x1060>
    3704:	add	r3, pc, r3
    3708:	mvn	r2, #0
    370c:	str	r2, [r3, #944]	; 0x3b0
    3710:	str	r2, [r3, #940]	; 0x3ac
    3714:	str	r2, [r3, #948]	; 0x3b4
    3718:	str	r2, [r3, #952]	; 0x3b8
    371c:	b	2ed4 <sfbpf_compile+0x578>
    3720:	ldr	r3, [pc, #664]	; 39c0 <sfbpf_compile+0x1064>
    3724:	add	r3, pc, r3
    3728:	mvn	r2, #0
    372c:	str	r2, [r3, #944]	; 0x3b0
    3730:	str	r2, [r3, #940]	; 0x3ac
    3734:	str	r2, [r3, #948]	; 0x3b4
    3738:	str	r2, [r3, #952]	; 0x3b8
    373c:	b	2ed4 <sfbpf_compile+0x578>
    3740:	ldr	r3, [pc, #636]	; 39c4 <sfbpf_compile+0x1068>
    3744:	add	r3, pc, r3
    3748:	mvn	r2, #0
    374c:	str	r2, [r3, #944]	; 0x3b0
    3750:	str	r2, [r3, #940]	; 0x3ac
    3754:	str	r2, [r3, #948]	; 0x3b4
    3758:	str	r2, [r3, #952]	; 0x3b8
    375c:	b	2ed4 <sfbpf_compile+0x578>
    3760:	ldr	r3, [pc, #608]	; 39c8 <sfbpf_compile+0x106c>
    3764:	add	r3, pc, r3
    3768:	mvn	r2, #0
    376c:	str	r2, [r3, #944]	; 0x3b0
    3770:	str	r2, [r3, #940]	; 0x3ac
    3774:	str	r2, [r3, #948]	; 0x3b4
    3778:	str	r2, [r3, #952]	; 0x3b8
    377c:	mov	r2, #1
    3780:	str	r2, [r3, #884]	; 0x374
    3784:	b	2ed4 <sfbpf_compile+0x578>
    3788:	ldr	r3, [pc, #572]	; 39cc <sfbpf_compile+0x1070>
    378c:	add	r3, pc, r3
    3790:	mvn	r2, #0
    3794:	str	r2, [r3, #944]	; 0x3b0
    3798:	str	r2, [r3, #940]	; 0x3ac
    379c:	str	r2, [r3, #948]	; 0x3b4
    37a0:	str	r2, [r3, #952]	; 0x3b8
    37a4:	b	2ed4 <sfbpf_compile+0x578>
    37a8:	ldr	r3, [pc, #544]	; 39d0 <sfbpf_compile+0x1074>
    37ac:	add	r3, pc, r3
    37b0:	mvn	r2, #0
    37b4:	str	r2, [r3, #944]	; 0x3b0
    37b8:	str	r2, [r3, #940]	; 0x3ac
    37bc:	str	r2, [r3, #948]	; 0x3b4
    37c0:	str	r2, [r3, #952]	; 0x3b8
    37c4:	b	2ed4 <sfbpf_compile+0x578>
    37c8:	ldr	r3, [pc, #516]	; 39d4 <sfbpf_compile+0x1078>
    37cc:	add	r3, pc, r3
    37d0:	mvn	r2, #0
    37d4:	str	r2, [r3, #944]	; 0x3b0
    37d8:	str	r2, [r3, #940]	; 0x3ac
    37dc:	str	r2, [r3, #948]	; 0x3b4
    37e0:	str	r2, [r3, #952]	; 0x3b8
    37e4:	b	2ed4 <sfbpf_compile+0x578>
    37e8:	ldr	r3, [pc, #488]	; 39d8 <sfbpf_compile+0x107c>
    37ec:	add	r3, pc, r3
    37f0:	mvn	r2, #0
    37f4:	str	r2, [r3, #944]	; 0x3b0
    37f8:	str	r2, [r3, #940]	; 0x3ac
    37fc:	str	r2, [r3, #948]	; 0x3b4
    3800:	str	r2, [r3, #952]	; 0x3b8
    3804:	b	2ed4 <sfbpf_compile+0x578>
    3808:	ldr	r3, [pc, #460]	; 39dc <sfbpf_compile+0x1080>
    380c:	add	r3, pc, r3
    3810:	mov	r2, #1
    3814:	str	r2, [r3, #944]	; 0x3b0
    3818:	mov	r2, #24
    381c:	str	r2, [r3, #940]	; 0x3ac
    3820:	mov	r2, #0
    3824:	str	r2, [r3, #948]	; 0x3b4
    3828:	mvn	r2, #0
    382c:	str	r2, [r3, #952]	; 0x3b8
    3830:	b	2ed4 <sfbpf_compile+0x578>
    3834:	ldr	r1, [sp, #8]
    3838:	ldr	r0, [pc, #416]	; 39e0 <sfbpf_compile+0x1084>
    383c:	add	r0, pc, r0
    3840:	bl	229c <sf_bpf_error>
    3844:	ldr	r0, [pc, #408]	; 39e4 <sfbpf_compile+0x1088>
    3848:	add	r0, pc, r0
    384c:	bl	229c <sf_bpf_error>
    3850:	ldr	r5, [pc, #400]	; 39e8 <sfbpf_compile+0x108c>
    3854:	add	r5, pc, r5
    3858:	ldr	r6, [r5, #880]	; 0x370
    385c:	mov	r0, #208	; 0xd0
    3860:	bl	22d8 <newchunk>
    3864:	mov	r3, #6
    3868:	str	r3, [r0, #8]
    386c:	str	r0, [r0, #96]	; 0x60
    3870:	str	r6, [r0, #20]
    3874:	str	r0, [r5, #868]	; 0x364
    3878:	b	2f04 <sfbpf_compile+0x5a8>
    387c:	ldr	r5, [pc, #360]	; 39ec <sfbpf_compile+0x1090>
    3880:	add	r5, pc, r5
    3884:	add	r0, r5, #868	; 0x364
    3888:	bl	f1f8 <sf_bpf_optimize>
    388c:	ldr	r3, [r5, #868]	; 0x364
    3890:	cmp	r3, #0
    3894:	beq	38b0 <sfbpf_compile+0xf54>
    3898:	ldr	r2, [r3, #8]
    389c:	cmp	r2, #6
    38a0:	bne	2f28 <sfbpf_compile+0x5cc>
    38a4:	ldr	r3, [r3, #20]
    38a8:	cmp	r3, #0
    38ac:	bne	2f28 <sfbpf_compile+0x5cc>
    38b0:	ldr	r0, [pc, #312]	; 39f0 <sfbpf_compile+0x1094>
    38b4:	add	r0, pc, r0
    38b8:	bl	229c <sf_bpf_error>
    38bc:	.word	0x0002e67c
    38c0:	.word	0x000000fc
    38c4:	.word	0x000000d4
    38c8:	.word	0x0002e9b8
    38cc:	.word	0x0002e98c
    38d0:	.word	0x0002e974
    38d4:	.word	0x0002e940
    38d8:	.word	0x0002e90c
    38dc:	.word	0x0002e7c4
    38e0:	.word	0x0002e4f8
    38e4:	.word	0x00010b74
    38e8:	.word	0x00010974
    38ec:	.word	0x0002e4ac
    38f0:	.word	0x0002e46c
    38f4:	.word	0x0002e430
    38f8:	.word	0x0002e404
    38fc:	.word	0x0002e3dc
    3900:	.word	0x0002e3b0
    3904:	.word	0x0002e388
    3908:	.word	0x0002e360
    390c:	.word	0x0002e33c
    3910:	.word	0x0002e318
    3914:	.word	0x0002e2f0
    3918:	.word	0x0002e2c8
    391c:	.word	0x0002e2a0
    3920:	.word	0x0002e278
    3924:	.word	0x0002e250
    3928:	.word	0x0002e224
    392c:	.word	0x0002e1f8
    3930:	.word	0x0002e1d4
    3934:	.word	0x0002e184
    3938:	.word	0x0002e164
    393c:	.word	0x0002e13c
    3940:	.word	0x0002e11c
    3944:	.word	0x0002e0f4
    3948:	.word	0x0002e0d4
    394c:	.word	0x0002e0b0
    3950:	.word	0x0002e088
    3954:	.word	0x0002e068
    3958:	.word	0x0002e048
    395c:	.word	0x0002e020
    3960:	.word	0x0002dff8
    3964:	.word	0x0002dfd0
    3968:	.word	0x0002dfa8
    396c:	.word	0x0002df7c
    3970:	.word	0x0002df50
    3974:	.word	0x0002df24
    3978:	.word	0x0002df00
    397c:	.word	0x0002ded8
    3980:	.word	0x0002deb4
    3984:	.word	0x0002de90
    3988:	.word	0x0002de6c
    398c:	.word	0x0002de48
    3990:	.word	0x0002de04
    3994:	.word	0x0002ddc0
    3998:	.word	0x0002dd7c
    399c:	.word	0x0002dd5c
    39a0:	.word	0x0002dd3c
    39a4:	.word	0x0002dd1c
    39a8:	.word	0x0002dcfc
    39ac:	.word	0x0002dcdc
    39b0:	.word	0x0002dcbc
    39b4:	.word	0x0002dc9c
    39b8:	.word	0x0002dc7c
    39bc:	.word	0x0002dc5c
    39c0:	.word	0x0002dc3c
    39c4:	.word	0x0002dc1c
    39c8:	.word	0x0002dbfc
    39cc:	.word	0x0002dbd4
    39d0:	.word	0x0002dbb4
    39d4:	.word	0x0002db94
    39d8:	.word	0x0002db74
    39dc:	.word	0x0002db54
    39e0:	.word	0x000101cc
    39e4:	.word	0x000101dc
    39e8:	.word	0x0002db0c
    39ec:	.word	0x0002dae0
    39f0:	.word	0x00010194

000039f4 <sfbpf_freecode>:
    39f4:	mov	r3, #0
    39f8:	str	r3, [r0]
    39fc:	ldr	r3, [r0, #4]
    3a00:	cmp	r3, #0
    3a04:	bxeq	lr
    3a08:	str	r4, [sp, #-8]!
    3a0c:	str	lr, [sp, #4]
    3a10:	mov	r4, r0
    3a14:	mov	r0, r3
    3a18:	bl	d48 <free@plt>
    3a1c:	mov	r3, #0
    3a20:	str	r3, [r4, #4]
    3a24:	ldr	r4, [sp]
    3a28:	add	sp, sp, #4
    3a2c:	pop	{pc}		; (ldr pc, [sp], #4)

00003a30 <sf_gen_and>:
    3a30:	strd	r4, [sp, #-12]!
    3a34:	str	lr, [sp, #8]
    3a38:	sub	sp, sp, #12
    3a3c:	mov	r5, r0
    3a40:	mov	r4, r1
    3a44:	ldr	r1, [r1, #96]	; 0x60
    3a48:	bl	2180 <backpatch>
    3a4c:	ldr	r3, [r5, #44]	; 0x2c
    3a50:	clz	r3, r3
    3a54:	lsr	r3, r3, #5
    3a58:	str	r3, [r5, #44]	; 0x2c
    3a5c:	ldr	r3, [r4, #44]	; 0x2c
    3a60:	clz	r3, r3
    3a64:	lsr	r3, r3, #5
    3a68:	str	r3, [r4, #44]	; 0x2c
    3a6c:	str	r4, [sp, #4]
    3a70:	add	r3, sp, #4
    3a74:	ldr	r2, [r3]
    3a78:	cmp	r2, #0
    3a7c:	beq	3a94 <sf_gen_and+0x64>
    3a80:	ldr	r3, [r2, #44]	; 0x2c
    3a84:	cmp	r3, #0
    3a88:	addeq	r3, r2, #60	; 0x3c
    3a8c:	addne	r3, r2, #84	; 0x54
    3a90:	b	3a74 <sf_gen_and+0x44>
    3a94:	str	r5, [r3]
    3a98:	ldr	r3, [r4, #44]	; 0x2c
    3a9c:	clz	r3, r3
    3aa0:	lsr	r3, r3, #5
    3aa4:	str	r3, [r4, #44]	; 0x2c
    3aa8:	ldr	r3, [r5, #96]	; 0x60
    3aac:	str	r3, [r4, #96]	; 0x60
    3ab0:	add	sp, sp, #12
    3ab4:	ldrd	r4, [sp]
    3ab8:	add	sp, sp, #8
    3abc:	pop	{pc}		; (ldr pc, [sp], #4)

00003ac0 <sf_gen_or>:
    3ac0:	strd	r4, [sp, #-12]!
    3ac4:	str	lr, [sp, #8]
    3ac8:	sub	sp, sp, #12
    3acc:	mov	r4, r0
    3ad0:	mov	r5, r1
    3ad4:	ldr	r3, [r0, #44]	; 0x2c
    3ad8:	clz	r3, r3
    3adc:	lsr	r3, r3, #5
    3ae0:	str	r3, [r0, #44]	; 0x2c
    3ae4:	ldr	r1, [r1, #96]	; 0x60
    3ae8:	bl	2180 <backpatch>
    3aec:	ldr	r3, [r4, #44]	; 0x2c
    3af0:	clz	r3, r3
    3af4:	lsr	r3, r3, #5
    3af8:	str	r3, [r4, #44]	; 0x2c
    3afc:	str	r5, [sp, #4]
    3b00:	add	r3, sp, #4
    3b04:	ldr	r2, [r3]
    3b08:	cmp	r2, #0
    3b0c:	beq	3b24 <sf_gen_or+0x64>
    3b10:	ldr	r3, [r2, #44]	; 0x2c
    3b14:	cmp	r3, #0
    3b18:	addeq	r3, r2, #60	; 0x3c
    3b1c:	addne	r3, r2, #84	; 0x54
    3b20:	b	3b04 <sf_gen_or+0x44>
    3b24:	str	r4, [r3]
    3b28:	ldr	r3, [r4, #96]	; 0x60
    3b2c:	str	r3, [r5, #96]	; 0x60
    3b30:	add	sp, sp, #12
    3b34:	ldrd	r4, [sp]
    3b38:	add	sp, sp, #8
    3b3c:	pop	{pc}		; (ldr pc, [sp], #4)

00003b40 <sf_gen_not>:
    3b40:	ldr	r3, [r0, #44]	; 0x2c
    3b44:	clz	r3, r3
    3b48:	lsr	r3, r3, #5
    3b4c:	str	r3, [r0, #44]	; 0x2c
    3b50:	bx	lr

00003b54 <sf_append>:
    3b54:	b	3b5c <sf_append+0x8>
    3b58:	mov	r0, r3
    3b5c:	ldr	r3, [r0, #16]
    3b60:	cmp	r3, #0
    3b64:	bne	3b58 <sf_append+0x4>
    3b68:	str	r1, [r0, #16]
    3b6c:	bx	lr

00003b70 <sf_finish_parse>:
    3b70:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3b74:	strd	r6, [sp, #8]
    3b78:	strd	r8, [sp, #16]
    3b7c:	strd	sl, [sp, #24]
    3b80:	str	lr, [sp, #32]
    3b84:	sub	sp, sp, #12
    3b88:	mov	r6, r0
    3b8c:	ldr	r7, [pc, #2240]	; 4454 <sf_finish_parse+0x8e4>
    3b90:	add	r7, pc, r7
    3b94:	ldr	r3, [r0, #96]	; 0x60
    3b98:	str	r3, [sp]
    3b9c:	ldr	r3, [pc, #2228]	; 4458 <sf_finish_parse+0x8e8>
    3ba0:	add	r3, pc, r3
    3ba4:	ldr	r5, [r3, #852]	; 0x354
    3ba8:	cmp	r5, #127	; 0x7f
    3bac:	beq	41e8 <sf_finish_parse+0x678>
    3bb0:	ble	3cb4 <sf_finish_parse+0x144>
    3bb4:	cmp	r5, #163	; 0xa3
    3bb8:	beq	4174 <sf_finish_parse+0x604>
    3bbc:	cmp	r5, #192	; 0xc0
    3bc0:	bne	42d8 <sf_finish_parse+0x768>
    3bc4:	ldr	r3, [pc, #2192]	; 445c <sf_finish_parse+0x8ec>
    3bc8:	add	r3, pc, r3
    3bcc:	ldr	r9, [r3, #856]	; 0x358
    3bd0:	cmn	r9, #1
    3bd4:	moveq	r4, #0
    3bd8:	beq	3e14 <sf_finish_parse+0x2a4>
    3bdc:	mov	r0, #20
    3be0:	bl	22d8 <newchunk>
    3be4:	mov	r4, r0
    3be8:	mov	sl, #48	; 0x30
    3bec:	str	sl, [r0]
    3bf0:	mov	r3, #3
    3bf4:	str	r3, [r0, #12]
    3bf8:	mov	r0, #20
    3bfc:	bl	22d8 <newchunk>
    3c00:	mov	r8, r0
    3c04:	mov	r3, #100	; 0x64
    3c08:	str	r3, [r0]
    3c0c:	mov	r1, r0
    3c10:	mov	r0, r4
    3c14:	bl	3b54 <sf_append>
    3c18:	mov	r3, #8
    3c1c:	str	r3, [r8, #12]
    3c20:	mov	r0, #20
    3c24:	bl	22d8 <newchunk>
    3c28:	mov	r1, r0
    3c2c:	mov	fp, #7
    3c30:	str	fp, [r0]
    3c34:	mov	r0, r4
    3c38:	bl	3b54 <sf_append>
    3c3c:	mov	r0, #20
    3c40:	bl	22d8 <newchunk>
    3c44:	mov	r8, r0
    3c48:	str	sl, [r0]
    3c4c:	mov	r1, r0
    3c50:	mov	r0, r4
    3c54:	bl	3b54 <sf_append>
    3c58:	mov	sl, #2
    3c5c:	str	sl, [r8, #12]
    3c60:	mov	r0, #20
    3c64:	bl	22d8 <newchunk>
    3c68:	mov	r1, r0
    3c6c:	mov	r3, #76	; 0x4c
    3c70:	str	r3, [r0]
    3c74:	mov	r0, r4
    3c78:	bl	3b54 <sf_append>
    3c7c:	mov	r0, #20
    3c80:	bl	22d8 <newchunk>
    3c84:	mov	r1, r0
    3c88:	str	sl, [r0]
    3c8c:	str	r9, [r0, #12]
    3c90:	mov	r0, r4
    3c94:	bl	3b54 <sf_append>
    3c98:	mov	r0, #20
    3c9c:	bl	22d8 <newchunk>
    3ca0:	mov	r1, r0
    3ca4:	str	fp, [r0]
    3ca8:	mov	r0, r4
    3cac:	bl	3b54 <sf_append>
    3cb0:	b	3e14 <sf_finish_parse+0x2a4>
    3cb4:	cmp	r5, #119	; 0x77
    3cb8:	bne	42d8 <sf_finish_parse+0x768>
    3cbc:	ldr	r3, [pc, #1948]	; 4460 <sf_finish_parse+0x8f0>
    3cc0:	ldr	r3, [r7, r3]
    3cc4:	mov	r2, #1
    3cc8:	str	r2, [r3]
    3ccc:	ldr	r3, [pc, #1936]	; 4464 <sf_finish_parse+0x8f4>
    3cd0:	add	r3, pc, r3
    3cd4:	ldr	fp, [r3, #856]	; 0x358
    3cd8:	cmn	fp, #1
    3cdc:	moveq	r4, #0
    3ce0:	beq	3e14 <sf_finish_parse+0x2a4>
    3ce4:	mov	r0, #20
    3ce8:	bl	22d8 <newchunk>
    3cec:	mov	r4, r0
    3cf0:	mov	sl, #32
    3cf4:	str	sl, [r0]
    3cf8:	mov	r3, #0
    3cfc:	str	r3, [r0, #12]
    3d00:	mov	r0, #20
    3d04:	bl	22d8 <newchunk>
    3d08:	mov	r1, r0
    3d0c:	mov	r3, #84	; 0x54
    3d10:	str	r3, [r0]
    3d14:	mov	r3, #61440	; 0xf000
    3d18:	movt	r3, #65535	; 0xffff
    3d1c:	str	r3, [r0, #12]
    3d20:	mov	r0, r4
    3d24:	bl	3b54 <sf_append>
    3d28:	mov	r0, #20
    3d2c:	bl	22d8 <newchunk>
    3d30:	mov	r8, r0
    3d34:	mov	r3, #21
    3d38:	str	r3, [r0]
    3d3c:	mov	r3, #4096	; 0x1000
    3d40:	movt	r3, #32801	; 0x8021
    3d44:	str	r3, [r0, #12]
    3d48:	mov	r1, r0
    3d4c:	mov	r0, r4
    3d50:	bl	3b54 <sf_append>
    3d54:	mov	r0, #20
    3d58:	bl	22d8 <newchunk>
    3d5c:	mov	r9, r0
    3d60:	str	sl, [r0]
    3d64:	mov	r3, #4
    3d68:	str	r3, [r0, #12]
    3d6c:	mov	r1, r0
    3d70:	mov	r0, r4
    3d74:	bl	3b54 <sf_append>
    3d78:	str	r9, [r8, #4]
    3d7c:	mov	r0, #20
    3d80:	bl	22d8 <newchunk>
    3d84:	mov	r9, r0
    3d88:	mov	r3, #5
    3d8c:	str	r3, [r0]
    3d90:	mov	r3, #1
    3d94:	str	r3, [r0, #12]
    3d98:	mov	r1, r0
    3d9c:	mov	r0, r4
    3da0:	bl	3b54 <sf_append>
    3da4:	mov	r0, #20
    3da8:	bl	22d8 <newchunk>
    3dac:	mov	sl, r0
    3db0:	mov	r3, #0
    3db4:	str	r3, [r0]
    3db8:	mov	r3, #144	; 0x90
    3dbc:	str	r3, [r0, #12]
    3dc0:	mov	r1, r0
    3dc4:	mov	r0, r4
    3dc8:	bl	3b54 <sf_append>
    3dcc:	str	sl, [r8, #8]
    3dd0:	mov	r0, #20
    3dd4:	bl	22d8 <newchunk>
    3dd8:	mov	r8, r0
    3ddc:	mov	r3, #2
    3de0:	str	r3, [r0]
    3de4:	str	fp, [r0, #12]
    3de8:	mov	r1, r0
    3dec:	mov	r0, r4
    3df0:	bl	3b54 <sf_append>
    3df4:	str	r8, [r9, #8]
    3df8:	mov	r0, #20
    3dfc:	bl	22d8 <newchunk>
    3e00:	mov	r1, r0
    3e04:	mov	r3, #7
    3e08:	str	r3, [r0]
    3e0c:	mov	r0, r4
    3e10:	bl	3b54 <sf_append>
    3e14:	ldr	r3, [pc, #1612]	; 4468 <sf_finish_parse+0x8f8>
    3e18:	add	r3, pc, r3
    3e1c:	ldr	r9, [r3, #864]	; 0x360
    3e20:	cmn	r9, #1
    3e24:	beq	42f8 <sf_finish_parse+0x788>
    3e28:	ldr	r3, [sp]
    3e2c:	ldr	fp, [r3, #4]
    3e30:	ldr	r3, [pc, #1576]	; 4460 <sf_finish_parse+0x8f0>
    3e34:	ldr	r3, [r7, r3]
    3e38:	mov	r2, #1
    3e3c:	str	r2, [r3]
    3e40:	cmp	r4, #0
    3e44:	beq	43e0 <sf_finish_parse+0x870>
    3e48:	mov	r0, #20
    3e4c:	bl	22d8 <newchunk>
    3e50:	mov	r1, r0
    3e54:	mov	r3, #135	; 0x87
    3e58:	str	r3, [r0]
    3e5c:	mov	r0, r4
    3e60:	bl	3b54 <sf_append>
    3e64:	mov	r0, #20
    3e68:	bl	22d8 <newchunk>
    3e6c:	mov	r1, r0
    3e70:	mov	sl, #4
    3e74:	str	sl, [r0]
    3e78:	mov	r3, #24
    3e7c:	str	r3, [r0, #12]
    3e80:	mov	r0, r4
    3e84:	bl	3b54 <sf_append>
    3e88:	mov	r0, #20
    3e8c:	bl	22d8 <newchunk>
    3e90:	mov	r1, r0
    3e94:	mov	r8, #2
    3e98:	str	r8, [r0]
    3e9c:	str	r9, [r0, #12]
    3ea0:	mov	r0, r4
    3ea4:	bl	3b54 <sf_append>
    3ea8:	mov	r0, #20
    3eac:	bl	22d8 <newchunk>
    3eb0:	mov	r1, r0
    3eb4:	mov	r3, #80	; 0x50
    3eb8:	str	r3, [r0]
    3ebc:	mov	r3, #0
    3ec0:	str	r3, [r0, #12]
    3ec4:	mov	r0, r4
    3ec8:	bl	3b54 <sf_append>
    3ecc:	mov	r0, #20
    3ed0:	bl	22d8 <newchunk>
    3ed4:	mov	r7, r0
    3ed8:	mov	r3, #69	; 0x45
    3edc:	str	r3, [r0]
    3ee0:	mov	r3, #8
    3ee4:	str	r3, [r0, #12]
    3ee8:	mov	r1, r0
    3eec:	mov	r0, r4
    3ef0:	bl	3b54 <sf_append>
    3ef4:	mov	r0, #20
    3ef8:	bl	22d8 <newchunk>
    3efc:	mov	r8, r0
    3f00:	mov	r3, #69	; 0x45
    3f04:	str	r3, [r0]
    3f08:	str	r0, [r7, #4]
    3f0c:	str	sl, [r0, #12]
    3f10:	mov	r1, r0
    3f14:	mov	r0, r4
    3f18:	bl	3b54 <sf_append>
    3f1c:	str	fp, [r7, #8]
    3f20:	str	fp, [r8, #4]
    3f24:	mov	r0, #20
    3f28:	bl	22d8 <newchunk>
    3f2c:	mov	r7, r0
    3f30:	mov	r3, #69	; 0x45
    3f34:	str	r3, [r0]
    3f38:	str	r0, [r8, #8]
    3f3c:	mov	r3, #128	; 0x80
    3f40:	str	r3, [r0, #12]
    3f44:	mov	r1, r0
    3f48:	mov	r0, r4
    3f4c:	bl	3b54 <sf_append>
    3f50:	mov	r0, #20
    3f54:	bl	22d8 <newchunk>
    3f58:	mov	r1, r0
    3f5c:	mov	r3, #96	; 0x60
    3f60:	str	r3, [r0]
    3f64:	str	r0, [r7, #4]
    3f68:	str	r9, [r0, #12]
    3f6c:	mov	r0, r4
    3f70:	bl	3b54 <sf_append>
    3f74:	mov	r0, #20
    3f78:	bl	22d8 <newchunk>
    3f7c:	mov	r1, r0
    3f80:	str	sl, [r0]
    3f84:	mov	r8, #2
    3f88:	str	r8, [r0, #12]
    3f8c:	mov	r0, r4
    3f90:	bl	3b54 <sf_append>
    3f94:	mov	r0, #20
    3f98:	bl	22d8 <newchunk>
    3f9c:	mov	r1, r0
    3fa0:	str	r8, [r0]
    3fa4:	str	r9, [r0, #12]
    3fa8:	mov	r0, r4
    3fac:	bl	3b54 <sf_append>
    3fb0:	cmp	r5, #127	; 0x7f
    3fb4:	strne	fp, [r7, #8]
    3fb8:	bne	42f8 <sf_finish_parse+0x788>
    3fbc:	mov	r0, #20
    3fc0:	bl	22d8 <newchunk>
    3fc4:	mov	r1, r0
    3fc8:	mov	r3, #32
    3fcc:	str	r3, [r0]
    3fd0:	str	r0, [r7, #8]
    3fd4:	str	sl, [r1, #12]
    3fd8:	mov	r0, r4
    3fdc:	bl	3b54 <sf_append>
    3fe0:	mov	r0, #20
    3fe4:	bl	22d8 <newchunk>
    3fe8:	mov	r8, r0
    3fec:	mov	sl, #69	; 0x45
    3ff0:	str	sl, [r0]
    3ff4:	mov	r3, #33554432	; 0x2000000
    3ff8:	str	r3, [r0, #12]
    3ffc:	mov	r1, r0
    4000:	mov	r0, r4
    4004:	bl	3b54 <sf_append>
    4008:	str	fp, [r8, #8]
    400c:	mov	r0, #20
    4010:	bl	22d8 <newchunk>
    4014:	mov	r7, r0
    4018:	str	sl, [r0]
    401c:	str	r0, [r8, #4]
    4020:	mov	r3, #16777216	; 0x1000000
    4024:	str	r3, [r0, #12]
    4028:	mov	r1, r0
    402c:	mov	r0, r4
    4030:	bl	3b54 <sf_append>
    4034:	mov	r0, #20
    4038:	bl	22d8 <newchunk>
    403c:	mov	r1, r0
    4040:	mov	r8, #48	; 0x30
    4044:	str	r8, [r0]
    4048:	str	r0, [r7, #4]
    404c:	mov	r3, #16
    4050:	str	r3, [r0, #12]
    4054:	mov	r0, r4
    4058:	bl	3b54 <sf_append>
    405c:	mov	r0, #20
    4060:	bl	22d8 <newchunk>
    4064:	str	sl, [r0]
    4068:	mov	r2, #32
    406c:	str	r2, [r0, #12]
    4070:	str	r0, [sp, #4]
    4074:	mov	r1, r0
    4078:	mov	r0, r4
    407c:	bl	3b54 <sf_append>
    4080:	mov	r0, #20
    4084:	bl	22d8 <newchunk>
    4088:	mov	r1, r0
    408c:	str	r8, [r0]
    4090:	str	r0, [r7, #8]
    4094:	mov	r3, #8
    4098:	str	r3, [r0, #12]
    409c:	mov	r0, r4
    40a0:	bl	3b54 <sf_append>
    40a4:	mov	r0, #20
    40a8:	bl	22d8 <newchunk>
    40ac:	mov	r7, r0
    40b0:	str	sl, [r0]
    40b4:	mov	r2, #32
    40b8:	str	r2, [r0, #12]
    40bc:	mov	r1, r0
    40c0:	mov	r0, r4
    40c4:	bl	3b54 <sf_append>
    40c8:	mov	r0, #20
    40cc:	bl	22d8 <newchunk>
    40d0:	mov	r8, r0
    40d4:	mov	r3, #96	; 0x60
    40d8:	str	r3, [r0]
    40dc:	str	r9, [r0, #12]
    40e0:	mov	r1, r0
    40e4:	mov	r0, r4
    40e8:	bl	3b54 <sf_append>
    40ec:	mov	r0, #20
    40f0:	bl	22d8 <newchunk>
    40f4:	mov	r1, r0
    40f8:	mov	r0, #4
    40fc:	str	r0, [r1]
    4100:	mov	r3, #3
    4104:	str	r3, [r1, #12]
    4108:	mov	r0, r4
    410c:	bl	3b54 <sf_append>
    4110:	mov	r0, #20
    4114:	bl	22d8 <newchunk>
    4118:	mov	r1, r0
    411c:	mov	r3, #84	; 0x54
    4120:	str	r3, [r0]
    4124:	mvn	r3, #3
    4128:	str	r3, [r0, #12]
    412c:	mov	r0, r4
    4130:	bl	3b54 <sf_append>
    4134:	mov	r0, #20
    4138:	bl	22d8 <newchunk>
    413c:	mov	r1, r0
    4140:	mov	r3, #2
    4144:	str	r3, [r0]
    4148:	str	r9, [r0, #12]
    414c:	mov	r0, r4
    4150:	bl	3b54 <sf_append>
    4154:	ldr	r3, [sp, #4]
    4158:	str	r8, [r3, #4]
    415c:	str	fp, [r3, #8]
    4160:	str	r8, [r7, #4]
    4164:	str	fp, [r7, #8]
    4168:	cmp	r4, #0
    416c:	bne	4300 <sf_finish_parse+0x790>
    4170:	b	431c <sf_finish_parse+0x7ac>
    4174:	ldr	r3, [pc, #752]	; 446c <sf_finish_parse+0x8fc>
    4178:	add	r3, pc, r3
    417c:	ldr	r8, [r3, #856]	; 0x358
    4180:	cmn	r8, #1
    4184:	moveq	r4, #0
    4188:	beq	3e14 <sf_finish_parse+0x2a4>
    418c:	mov	r0, #20
    4190:	bl	22d8 <newchunk>
    4194:	mov	r4, r0
    4198:	mov	r3, #32
    419c:	str	r3, [r0]
    41a0:	mov	r3, #4
    41a4:	str	r3, [r0, #12]
    41a8:	mov	r0, #20
    41ac:	bl	22d8 <newchunk>
    41b0:	mov	r1, r0
    41b4:	mov	r3, #2
    41b8:	str	r3, [r0]
    41bc:	str	r8, [r0, #12]
    41c0:	mov	r0, r4
    41c4:	bl	3b54 <sf_append>
    41c8:	mov	r0, #20
    41cc:	bl	22d8 <newchunk>
    41d0:	mov	r1, r0
    41d4:	mov	r3, #7
    41d8:	str	r3, [r0]
    41dc:	mov	r0, r4
    41e0:	bl	3b54 <sf_append>
    41e4:	b	3e14 <sf_finish_parse+0x2a4>
    41e8:	ldr	r3, [pc, #640]	; 4470 <sf_finish_parse+0x900>
    41ec:	add	r3, pc, r3
    41f0:	ldr	r9, [r3, #856]	; 0x358
    41f4:	cmn	r9, #1
    41f8:	moveq	r4, #0
    41fc:	beq	3e14 <sf_finish_parse+0x2a4>
    4200:	mov	r0, #20
    4204:	bl	22d8 <newchunk>
    4208:	mov	r4, r0
    420c:	mov	sl, #48	; 0x30
    4210:	str	sl, [r0]
    4214:	mov	r3, #3
    4218:	str	r3, [r0, #12]
    421c:	mov	r0, #20
    4220:	bl	22d8 <newchunk>
    4224:	mov	r8, r0
    4228:	mov	r3, #100	; 0x64
    422c:	str	r3, [r0]
    4230:	mov	r1, r0
    4234:	mov	r0, r4
    4238:	bl	3b54 <sf_append>
    423c:	mov	r3, #8
    4240:	str	r3, [r8, #12]
    4244:	mov	r0, #20
    4248:	bl	22d8 <newchunk>
    424c:	mov	r1, r0
    4250:	mov	fp, #7
    4254:	str	fp, [r0]
    4258:	mov	r0, r4
    425c:	bl	3b54 <sf_append>
    4260:	mov	r0, #20
    4264:	bl	22d8 <newchunk>
    4268:	mov	r8, r0
    426c:	str	sl, [r0]
    4270:	mov	r1, r0
    4274:	mov	r0, r4
    4278:	bl	3b54 <sf_append>
    427c:	mov	sl, #2
    4280:	str	sl, [r8, #12]
    4284:	mov	r0, #20
    4288:	bl	22d8 <newchunk>
    428c:	mov	r1, r0
    4290:	mov	r3, #76	; 0x4c
    4294:	str	r3, [r0]
    4298:	mov	r0, r4
    429c:	bl	3b54 <sf_append>
    42a0:	mov	r0, #20
    42a4:	bl	22d8 <newchunk>
    42a8:	mov	r1, r0
    42ac:	str	sl, [r0]
    42b0:	str	r9, [r0, #12]
    42b4:	mov	r0, r4
    42b8:	bl	3b54 <sf_append>
    42bc:	mov	r0, #20
    42c0:	bl	22d8 <newchunk>
    42c4:	mov	r1, r0
    42c8:	str	fp, [r0]
    42cc:	mov	r0, r4
    42d0:	bl	3b54 <sf_append>
    42d4:	b	3e14 <sf_finish_parse+0x2a4>
    42d8:	cmp	r5, #127	; 0x7f
    42dc:	beq	43c0 <sf_finish_parse+0x850>
    42e0:	bgt	43a4 <sf_finish_parse+0x834>
    42e4:	cmp	r5, #105	; 0x69
    42e8:	beq	43c8 <sf_finish_parse+0x858>
    42ec:	cmp	r5, #119	; 0x77
    42f0:	beq	43d0 <sf_finish_parse+0x860>
    42f4:	mov	r4, #0
    42f8:	cmp	r4, #0
    42fc:	beq	4314 <sf_finish_parse+0x7a4>
    4300:	ldr	r7, [sp]
    4304:	ldr	r1, [r7, #4]
    4308:	mov	r0, r4
    430c:	bl	3b54 <sf_append>
    4310:	str	r4, [r7, #4]
    4314:	cmp	r5, #192	; 0xc0
    4318:	beq	4408 <sf_finish_parse+0x898>
    431c:	ldr	r4, [pc, #336]	; 4474 <sf_finish_parse+0x904>
    4320:	add	r4, pc, r4
    4324:	ldr	r7, [r4, #880]	; 0x370
    4328:	mov	r0, #208	; 0xd0
    432c:	bl	22d8 <newchunk>
    4330:	mov	r1, r0
    4334:	mov	r5, #6
    4338:	str	r5, [r0, #8]
    433c:	str	r0, [r1, #96]	; 0x60
    4340:	str	r7, [r0, #20]
    4344:	mov	r0, r6
    4348:	bl	2180 <backpatch>
    434c:	ldr	r3, [r6, #44]	; 0x2c
    4350:	clz	r3, r3
    4354:	lsr	r3, r3, #5
    4358:	str	r3, [r6, #44]	; 0x2c
    435c:	mov	r0, #208	; 0xd0
    4360:	bl	22d8 <newchunk>
    4364:	mov	r1, r0
    4368:	str	r5, [r0, #8]
    436c:	str	r0, [r1, #96]	; 0x60
    4370:	mov	r3, #0
    4374:	str	r3, [r0, #20]
    4378:	mov	r0, r6
    437c:	bl	2180 <backpatch>
    4380:	ldr	r3, [r6, #96]	; 0x60
    4384:	str	r3, [r4, #868]	; 0x364
    4388:	add	sp, sp, #12
    438c:	ldrd	r4, [sp]
    4390:	ldrd	r6, [sp, #8]
    4394:	ldrd	r8, [sp, #16]
    4398:	ldrd	sl, [sp, #24]
    439c:	add	sp, sp, #32
    43a0:	pop	{pc}		; (ldr pc, [sp], #4)
    43a4:	cmp	r5, #163	; 0xa3
    43a8:	beq	43d8 <sf_finish_parse+0x868>
    43ac:	cmp	r5, #192	; 0xc0
    43b0:	moveq	r4, #0
    43b4:	beq	3e14 <sf_finish_parse+0x2a4>
    43b8:	mov	r4, #0
    43bc:	b	42f8 <sf_finish_parse+0x788>
    43c0:	mov	r4, #0
    43c4:	b	3e14 <sf_finish_parse+0x2a4>
    43c8:	mov	r4, #0
    43cc:	b	3e14 <sf_finish_parse+0x2a4>
    43d0:	mov	r4, #0
    43d4:	b	3e14 <sf_finish_parse+0x2a4>
    43d8:	mov	r4, #0
    43dc:	b	3e14 <sf_finish_parse+0x2a4>
    43e0:	mov	r0, #20
    43e4:	bl	22d8 <newchunk>
    43e8:	mov	r4, r0
    43ec:	mov	r3, #1
    43f0:	str	r3, [r0]
    43f4:	ldr	r3, [pc, #124]	; 4478 <sf_finish_parse+0x908>
    43f8:	add	r3, pc, r3
    43fc:	ldr	r3, [r3, #936]	; 0x3a8
    4400:	str	r3, [r0, #12]
    4404:	b	3e48 <sf_finish_parse+0x2d8>
    4408:	mov	r0, #20
    440c:	bl	22d8 <newchunk>
    4410:	mov	r4, r0
    4414:	mov	r3, #32
    4418:	str	r3, [r0]
    441c:	mov	r3, #4
    4420:	str	r3, [r0, #12]
    4424:	mov	r0, #208	; 0xd0
    4428:	bl	22d8 <newchunk>
    442c:	mov	r3, r0
    4430:	mov	r2, #21
    4434:	str	r2, [r0, #8]
    4438:	str	r0, [r3, #96]	; 0x60
    443c:	str	r4, [r0, #4]
    4440:	mov	r2, #1761607680	; 0x69000000
    4444:	str	r2, [r0, #20]
    4448:	mov	r1, r6
    444c:	bl	3a30 <sf_gen_and>
    4450:	b	431c <sf_finish_parse+0x7ac>
    4454:	.word	0x0002d468
    4458:	.word	0x0002d7c0
    445c:	.word	0x0002d798
    4460:	.word	0x000000fc
    4464:	.word	0x0002d690
    4468:	.word	0x0002d548
    446c:	.word	0x0002d1e8
    4470:	.word	0x0002d174
    4474:	.word	0x0002d040
    4478:	.word	0x0002cf68

0000447c <gen_load_llrel>:
    447c:	strd	r4, [sp, #-16]!
    4480:	str	r6, [sp, #8]
    4484:	str	lr, [sp, #12]
    4488:	mov	r6, r0
    448c:	mov	r4, r1
    4490:	bl	2578 <gen_llprefixlen>
    4494:	subs	r5, r0, #0
    4498:	beq	44d0 <gen_load_llrel+0x54>
    449c:	mov	r0, #20
    44a0:	bl	22d8 <newchunk>
    44a4:	mov	r1, r0
    44a8:	orr	r4, r4, #64	; 0x40
    44ac:	str	r4, [r0]
    44b0:	str	r6, [r0, #12]
    44b4:	mov	r0, r5
    44b8:	bl	3b54 <sf_append>
    44bc:	mov	r0, r5
    44c0:	ldrd	r4, [sp]
    44c4:	ldr	r6, [sp, #8]
    44c8:	add	sp, sp, #12
    44cc:	pop	{pc}		; (ldr pc, [sp], #4)
    44d0:	mov	r0, #20
    44d4:	bl	22d8 <newchunk>
    44d8:	mov	r5, r0
    44dc:	orr	r4, r4, #32
    44e0:	str	r4, [r0]
    44e4:	ldr	r3, [pc, #16]	; 44fc <gen_load_llrel+0x80>
    44e8:	add	r3, pc, r3
    44ec:	ldr	r3, [r3, #936]	; 0x3a8
    44f0:	add	r6, r3, r6
    44f4:	str	r6, [r0, #12]
    44f8:	b	44bc <gen_load_llrel+0x40>
    44fc:	.word	0x0002ce78

00004500 <gen_mac_multicast>:
    4500:	str	r4, [sp, #-8]!
    4504:	str	lr, [sp, #4]
    4508:	mov	r1, #16
    450c:	bl	447c <gen_load_llrel>
    4510:	mov	r4, r0
    4514:	mov	r0, #208	; 0xd0
    4518:	bl	22d8 <newchunk>
    451c:	mov	r3, r0
    4520:	mov	r2, #69	; 0x45
    4524:	str	r2, [r0, #8]
    4528:	str	r0, [r3, #96]	; 0x60
    452c:	mov	r2, #1
    4530:	str	r2, [r0, #20]
    4534:	str	r4, [r0, #4]
    4538:	ldr	r4, [sp]
    453c:	add	sp, sp, #4
    4540:	pop	{pc}		; (ldr pc, [sp], #4)

00004544 <gen_loadx_iphdrlen>:
    4544:	str	r4, [sp, #-8]!
    4548:	str	lr, [sp, #4]
    454c:	bl	2724 <gen_off_macpl>
    4550:	subs	r4, r0, #0
    4554:	beq	4614 <gen_loadx_iphdrlen+0xd0>
    4558:	mov	r0, #20
    455c:	bl	22d8 <newchunk>
    4560:	mov	r1, r0
    4564:	mov	r3, #80	; 0x50
    4568:	str	r3, [r0]
    456c:	ldr	r3, [pc, #208]	; 4644 <gen_loadx_iphdrlen+0x100>
    4570:	add	r3, pc, r3
    4574:	ldr	r3, [r3, #948]	; 0x3b4
    4578:	str	r3, [r0, #12]
    457c:	mov	r0, r4
    4580:	bl	3b54 <sf_append>
    4584:	mov	r0, #20
    4588:	bl	22d8 <newchunk>
    458c:	mov	r1, r0
    4590:	mov	r3, #84	; 0x54
    4594:	str	r3, [r0]
    4598:	mov	r3, #15
    459c:	str	r3, [r0, #12]
    45a0:	mov	r0, r4
    45a4:	bl	3b54 <sf_append>
    45a8:	mov	r0, #20
    45ac:	bl	22d8 <newchunk>
    45b0:	mov	r1, r0
    45b4:	mov	r3, #100	; 0x64
    45b8:	str	r3, [r0]
    45bc:	mov	r3, #2
    45c0:	str	r3, [r0, #12]
    45c4:	mov	r0, r4
    45c8:	bl	3b54 <sf_append>
    45cc:	mov	r0, #20
    45d0:	bl	22d8 <newchunk>
    45d4:	mov	r1, r0
    45d8:	mov	r3, #12
    45dc:	str	r3, [r0]
    45e0:	mov	r0, r4
    45e4:	bl	3b54 <sf_append>
    45e8:	mov	r0, #20
    45ec:	bl	22d8 <newchunk>
    45f0:	mov	r1, r0
    45f4:	mov	r3, #7
    45f8:	str	r3, [r0]
    45fc:	mov	r0, r4
    4600:	bl	3b54 <sf_append>
    4604:	mov	r0, r4
    4608:	ldr	r4, [sp]
    460c:	add	sp, sp, #4
    4610:	pop	{pc}		; (ldr pc, [sp], #4)
    4614:	mov	r0, #20
    4618:	bl	22d8 <newchunk>
    461c:	mov	r4, r0
    4620:	mov	r3, #177	; 0xb1
    4624:	str	r3, [r0]
    4628:	ldr	r2, [pc, #24]	; 4648 <gen_loadx_iphdrlen+0x104>
    462c:	add	r2, pc, r2
    4630:	ldr	r3, [r2, #940]	; 0x3ac
    4634:	ldr	r2, [r2, #948]	; 0x3b4
    4638:	add	r3, r3, r2
    463c:	str	r3, [r0, #12]
    4640:	b	4604 <gen_loadx_iphdrlen+0xc0>
    4644:	.word	0x0002cdf0
    4648:	.word	0x0002cd34

0000464c <gen_load_macplrel>:
    464c:	strd	r4, [sp, #-16]!
    4650:	str	r6, [sp, #8]
    4654:	str	lr, [sp, #12]
    4658:	mov	r6, r0
    465c:	mov	r4, r1
    4660:	bl	2724 <gen_off_macpl>
    4664:	subs	r5, r0, #0
    4668:	beq	46a0 <gen_load_macplrel+0x54>
    466c:	mov	r0, #20
    4670:	bl	22d8 <newchunk>
    4674:	mov	r1, r0
    4678:	orr	r4, r4, #64	; 0x40
    467c:	str	r4, [r0]
    4680:	str	r6, [r0, #12]
    4684:	mov	r0, r5
    4688:	bl	3b54 <sf_append>
    468c:	mov	r0, r5
    4690:	ldrd	r4, [sp]
    4694:	ldr	r6, [sp, #8]
    4698:	add	sp, sp, #12
    469c:	pop	{pc}		; (ldr pc, [sp], #4)
    46a0:	mov	r0, #20
    46a4:	bl	22d8 <newchunk>
    46a8:	mov	r5, r0
    46ac:	orr	r4, r4, #32
    46b0:	str	r4, [r0]
    46b4:	ldr	r3, [pc, #16]	; 46cc <gen_load_macplrel+0x80>
    46b8:	add	r3, pc, r3
    46bc:	ldr	r3, [r3, #940]	; 0x3ac
    46c0:	add	r6, r3, r6
    46c4:	str	r6, [r0, #12]
    46c8:	b	468c <gen_load_macplrel+0x40>
    46cc:	.word	0x0002cca8

000046d0 <gen_ipfrag>:
    46d0:	str	r4, [sp, #-8]!
    46d4:	str	lr, [sp, #4]
    46d8:	ldr	r3, [pc, #84]	; 4734 <gen_ipfrag+0x64>
    46dc:	add	r3, pc, r3
    46e0:	ldr	r0, [r3, #948]	; 0x3b4
    46e4:	mov	r1, #8
    46e8:	add	r0, r0, #6
    46ec:	bl	464c <gen_load_macplrel>
    46f0:	mov	r4, r0
    46f4:	mov	r0, #208	; 0xd0
    46f8:	bl	22d8 <newchunk>
    46fc:	mov	r3, r0
    4700:	mov	r2, #69	; 0x45
    4704:	str	r2, [r0, #8]
    4708:	str	r0, [r3, #96]	; 0x60
    470c:	movw	r2, #8191	; 0x1fff
    4710:	str	r2, [r0, #20]
    4714:	str	r4, [r0, #4]
    4718:	ldr	r2, [r0, #44]	; 0x2c
    471c:	clz	r2, r2
    4720:	lsr	r2, r2, #5
    4724:	str	r2, [r0, #44]	; 0x2c
    4728:	ldr	r4, [sp]
    472c:	add	sp, sp, #4
    4730:	pop	{pc}		; (ldr pc, [sp], #4)
    4734:	.word	0x0002cc84

00004738 <gen_ncmp>:
    4738:	strd	r4, [sp, #-24]!	; 0xffffffe8
    473c:	strd	r6, [sp, #8]
    4740:	str	r8, [sp, #16]
    4744:	str	lr, [sp, #20]
    4748:	mov	r8, r1
    474c:	mov	r6, r2
    4750:	mov	r7, r3
    4754:	ldr	r4, [sp, #24]
    4758:	cmp	r0, #6
    475c:	addls	pc, pc, r0, lsl #2
    4760:	b	48bc <gen_ncmp+0x184>
    4764:	b	4780 <gen_ncmp+0x48>
    4768:	b	47ec <gen_ncmp+0xb4>
    476c:	b	4800 <gen_ncmp+0xc8>
    4770:	b	4814 <gen_ncmp+0xdc>
    4774:	b	4834 <gen_ncmp+0xfc>
    4778:	b	4854 <gen_ncmp+0x11c>
    477c:	b	4898 <gen_ncmp+0x160>
    4780:	mov	r0, #20
    4784:	bl	22d8 <newchunk>
    4788:	mov	r5, r0
    478c:	orr	r6, r6, #32
    4790:	str	r6, [r0]
    4794:	str	r8, [r0, #12]
    4798:	cmn	r7, #1
    479c:	bne	48c0 <gen_ncmp+0x188>
    47a0:	mov	r0, #208	; 0xd0
    47a4:	bl	22d8 <newchunk>
    47a8:	orr	r3, r4, #5
    47ac:	str	r3, [r0, #8]
    47b0:	str	r0, [r0, #96]	; 0x60
    47b4:	str	r5, [r0, #4]
    47b8:	ldr	r3, [sp, #32]
    47bc:	str	r3, [r0, #20]
    47c0:	ldr	r3, [sp, #28]
    47c4:	cmp	r3, #0
    47c8:	beq	47d8 <gen_ncmp+0xa0>
    47cc:	bic	r4, r4, #16
    47d0:	cmp	r4, #32
    47d4:	beq	48e4 <gen_ncmp+0x1ac>
    47d8:	ldrd	r4, [sp]
    47dc:	ldrd	r6, [sp, #8]
    47e0:	ldr	r8, [sp, #16]
    47e4:	add	sp, sp, #20
    47e8:	pop	{pc}		; (ldr pc, [sp], #4)
    47ec:	mov	r1, r2
    47f0:	mov	r0, r8
    47f4:	bl	447c <gen_load_llrel>
    47f8:	mov	r5, r0
    47fc:	b	4798 <gen_ncmp+0x60>
    4800:	mov	r1, r2
    4804:	mov	r0, r8
    4808:	bl	464c <gen_load_macplrel>
    480c:	mov	r5, r0
    4810:	b	4798 <gen_ncmp+0x60>
    4814:	ldr	r3, [pc, #220]	; 48f8 <gen_ncmp+0x1c0>
    4818:	add	r3, pc, r3
    481c:	ldr	r0, [r3, #948]	; 0x3b4
    4820:	mov	r1, r2
    4824:	add	r0, r8, r0
    4828:	bl	464c <gen_load_macplrel>
    482c:	mov	r5, r0
    4830:	b	4798 <gen_ncmp+0x60>
    4834:	ldr	r3, [pc, #192]	; 48fc <gen_ncmp+0x1c4>
    4838:	add	r3, pc, r3
    483c:	ldr	r0, [r3, #952]	; 0x3b8
    4840:	mov	r1, r2
    4844:	add	r0, r8, r0
    4848:	bl	464c <gen_load_macplrel>
    484c:	mov	r5, r0
    4850:	b	4798 <gen_ncmp+0x60>
    4854:	bl	4544 <gen_loadx_iphdrlen>
    4858:	mov	r5, r0
    485c:	mov	r0, #20
    4860:	bl	22d8 <newchunk>
    4864:	mov	r1, r0
    4868:	orr	r6, r6, #64	; 0x40
    486c:	str	r6, [r0]
    4870:	ldr	r2, [pc, #136]	; 4900 <gen_ncmp+0x1c8>
    4874:	add	r2, pc, r2
    4878:	ldr	r3, [r2, #940]	; 0x3ac
    487c:	ldr	r2, [r2, #948]	; 0x3b4
    4880:	add	r3, r3, r2
    4884:	add	r8, r3, r8
    4888:	str	r8, [r0, #12]
    488c:	mov	r0, r5
    4890:	bl	3b54 <sf_append>
    4894:	b	4798 <gen_ncmp+0x60>
    4898:	ldr	r3, [pc, #100]	; 4904 <gen_ncmp+0x1cc>
    489c:	add	r3, pc, r3
    48a0:	ldr	r0, [r3, #948]	; 0x3b4
    48a4:	add	r0, r0, #40	; 0x28
    48a8:	mov	r1, r2
    48ac:	add	r0, r0, r8
    48b0:	bl	464c <gen_load_macplrel>
    48b4:	mov	r5, r0
    48b8:	b	4798 <gen_ncmp+0x60>
    48bc:	bl	ebc <abort@plt>
    48c0:	mov	r0, #20
    48c4:	bl	22d8 <newchunk>
    48c8:	mov	r1, r0
    48cc:	mov	r3, #84	; 0x54
    48d0:	str	r3, [r0]
    48d4:	str	r7, [r0, #12]
    48d8:	mov	r0, r5
    48dc:	bl	3b54 <sf_append>
    48e0:	b	47a0 <gen_ncmp+0x68>
    48e4:	ldr	r3, [r0, #44]	; 0x2c
    48e8:	clz	r3, r3
    48ec:	lsr	r3, r3, #5
    48f0:	str	r3, [r0, #44]	; 0x2c
    48f4:	b	47d8 <gen_ncmp+0xa0>
    48f8:	.word	0x0002cb48
    48fc:	.word	0x0002cb28
    4900:	.word	0x0002caec
    4904:	.word	0x0002cac4

00004908 <gen_cmp>:
    4908:	push	{lr}		; (str lr, [sp, #-4]!)
    490c:	sub	sp, sp, #20
    4910:	str	r3, [sp, #8]
    4914:	mov	r3, #0
    4918:	str	r3, [sp, #4]
    491c:	mov	r3, #16
    4920:	str	r3, [sp]
    4924:	mvn	r3, #0
    4928:	bl	4738 <gen_ncmp>
    492c:	add	sp, sp, #20
    4930:	pop	{pc}		; (ldr pc, [sp], #4)

00004934 <gen_bcmp>:
    4934:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4938:	strd	r6, [sp, #8]
    493c:	strd	r8, [sp, #16]
    4940:	strd	sl, [sp, #24]
    4944:	str	lr, [sp, #32]
    4948:	sub	sp, sp, #12
    494c:	str	r0, [sp, #4]
    4950:	mov	r9, r1
    4954:	mov	sl, r2
    4958:	mov	fp, r3
    495c:	cmp	r2, #3
    4960:	bls	4a64 <gen_bcmp+0x130>
    4964:	add	r4, r3, r2
    4968:	mov	r5, r2
    496c:	mov	r7, #0
    4970:	mov	r8, r7
    4974:	b	4994 <gen_bcmp+0x60>
    4978:	mov	r1, r0
    497c:	mov	r0, r7
    4980:	bl	3a30 <sf_gen_and>
    4984:	sub	r4, r4, #4
    4988:	mov	r7, r6
    498c:	cmp	r5, #3
    4990:	bls	49d8 <gen_bcmp+0xa4>
    4994:	sub	r5, r5, #4
    4998:	ldrb	r2, [r4, #-4]
    499c:	ldrb	r3, [r4, #-3]
    49a0:	lsl	r3, r3, #16
    49a4:	orr	r3, r3, r2, lsl #24
    49a8:	ldrb	r2, [r4, #-1]
    49ac:	orr	r3, r3, r2
    49b0:	ldrb	r2, [r4, #-2]
    49b4:	orr	r3, r3, r2, lsl #8
    49b8:	mov	r2, r8
    49bc:	add	r1, r5, r9
    49c0:	ldr	r0, [sp, #4]
    49c4:	bl	4908 <gen_cmp>
    49c8:	mov	r6, r0
    49cc:	cmp	r7, #0
    49d0:	bne	4978 <gen_bcmp+0x44>
    49d4:	b	4984 <gen_bcmp+0x50>
    49d8:	and	sl, sl, #3
    49dc:	cmp	sl, #1
    49e0:	bls	4a3c <gen_bcmp+0x108>
    49e4:	add	r5, fp, sl
    49e8:	mov	r4, sl
    49ec:	mov	r7, #8
    49f0:	sub	r4, r4, #2
    49f4:	ldrb	r2, [r5, #-2]
    49f8:	ldrb	r3, [r5, #-1]
    49fc:	orr	r3, r3, r2, lsl #8
    4a00:	mov	r2, r7
    4a04:	add	r1, r4, r9
    4a08:	ldr	r0, [sp, #4]
    4a0c:	bl	4908 <gen_cmp>
    4a10:	mov	r8, r0
    4a14:	cmp	r6, #0
    4a18:	beq	4a28 <gen_bcmp+0xf4>
    4a1c:	mov	r1, r0
    4a20:	mov	r0, r6
    4a24:	bl	3a30 <sf_gen_and>
    4a28:	sub	r5, r5, #2
    4a2c:	mov	r6, r8
    4a30:	cmp	r4, #1
    4a34:	bhi	49f0 <gen_bcmp+0xbc>
    4a38:	and	sl, sl, #1
    4a3c:	cmp	sl, #0
    4a40:	bne	4a6c <gen_bcmp+0x138>
    4a44:	mov	r0, r6
    4a48:	add	sp, sp, #12
    4a4c:	ldrd	r4, [sp]
    4a50:	ldrd	r6, [sp, #8]
    4a54:	ldrd	r8, [sp, #16]
    4a58:	ldrd	sl, [sp, #24]
    4a5c:	add	sp, sp, #32
    4a60:	pop	{pc}		; (ldr pc, [sp], #4)
    4a64:	mov	r6, #0
    4a68:	b	49dc <gen_bcmp+0xa8>
    4a6c:	ldrb	r3, [fp]
    4a70:	mov	r2, #16
    4a74:	mov	r1, r9
    4a78:	ldr	r0, [sp, #4]
    4a7c:	bl	4908 <gen_cmp>
    4a80:	mov	r4, r0
    4a84:	cmp	r6, #0
    4a88:	moveq	r6, r0
    4a8c:	beq	4a44 <gen_bcmp+0x110>
    4a90:	mov	r1, r0
    4a94:	mov	r0, r6
    4a98:	bl	3a30 <sf_gen_and>
    4a9c:	mov	r6, r4
    4aa0:	b	4a44 <gen_bcmp+0x110>

00004aa4 <gen_snap>:
    4aa4:	push	{lr}		; (str lr, [sp, #-4]!)
    4aa8:	sub	sp, sp, #12
    4aac:	mvn	r3, #85	; 0x55
    4ab0:	strb	r3, [sp]
    4ab4:	strb	r3, [sp, #1]
    4ab8:	mov	r3, #3
    4abc:	strb	r3, [sp, #2]
    4ac0:	lsr	r3, r0, #16
    4ac4:	strb	r3, [sp, #3]
    4ac8:	lsr	r3, r0, #8
    4acc:	strb	r3, [sp, #4]
    4ad0:	strb	r0, [sp, #5]
    4ad4:	lsr	r3, r1, #8
    4ad8:	strb	r3, [sp, #6]
    4adc:	strb	r1, [sp, #7]
    4ae0:	mov	r3, sp
    4ae4:	mov	r2, #8
    4ae8:	mov	r1, #0
    4aec:	mov	r0, #2
    4af0:	bl	4934 <gen_bcmp>
    4af4:	add	sp, sp, #12
    4af8:	pop	{pc}		; (ldr pc, [sp], #4)

00004afc <gen_fhostop>:
    4afc:	strd	r4, [sp, #-16]!
    4b00:	str	r6, [sp, #8]
    4b04:	str	lr, [sp, #12]
    4b08:	mov	r4, r0
    4b0c:	cmp	r1, #4
    4b10:	addls	pc, pc, r1, lsl #2
    4b14:	b	4bcc <gen_fhostop+0xd0>
    4b18:	b	4ba0 <gen_fhostop+0xa4>
    4b1c:	b	4b2c <gen_fhostop+0x30>
    4b20:	b	4b58 <gen_fhostop+0x5c>
    4b24:	b	4ba0 <gen_fhostop+0xa4>
    4b28:	b	4b74 <gen_fhostop+0x78>
    4b2c:	mov	r3, r0
    4b30:	mov	r2, #6
    4b34:	mov	r1, #7
    4b38:	mov	r0, #1
    4b3c:	bl	4934 <gen_bcmp>
    4b40:	mov	r4, r0
    4b44:	mov	r0, r4
    4b48:	ldrd	r4, [sp]
    4b4c:	ldr	r6, [sp, #8]
    4b50:	add	sp, sp, #12
    4b54:	pop	{pc}		; (ldr pc, [sp], #4)
    4b58:	mov	r3, r0
    4b5c:	mov	r2, #6
    4b60:	mov	r1, #1
    4b64:	mov	r0, r1
    4b68:	bl	4934 <gen_bcmp>
    4b6c:	mov	r4, r0
    4b70:	b	4b44 <gen_fhostop+0x48>
    4b74:	mov	r1, #1
    4b78:	bl	4afc <gen_fhostop>
    4b7c:	mov	r5, r0
    4b80:	mov	r1, #2
    4b84:	mov	r0, r4
    4b88:	bl	4afc <gen_fhostop>
    4b8c:	mov	r4, r0
    4b90:	mov	r1, r0
    4b94:	mov	r0, r5
    4b98:	bl	3a30 <sf_gen_and>
    4b9c:	b	4b44 <gen_fhostop+0x48>
    4ba0:	mov	r1, #1
    4ba4:	bl	4afc <gen_fhostop>
    4ba8:	mov	r5, r0
    4bac:	mov	r1, #2
    4bb0:	mov	r0, r4
    4bb4:	bl	4afc <gen_fhostop>
    4bb8:	mov	r4, r0
    4bbc:	mov	r1, r0
    4bc0:	mov	r0, r5
    4bc4:	bl	3ac0 <sf_gen_or>
    4bc8:	b	4b44 <gen_fhostop+0x48>
    4bcc:	bl	ebc <abort@plt>

00004bd0 <gen_thostop>:
    4bd0:	strd	r4, [sp, #-16]!
    4bd4:	str	r6, [sp, #8]
    4bd8:	str	lr, [sp, #12]
    4bdc:	mov	r4, r0
    4be0:	cmp	r1, #4
    4be4:	addls	pc, pc, r1, lsl #2
    4be8:	b	4ca0 <gen_thostop+0xd0>
    4bec:	b	4c74 <gen_thostop+0xa4>
    4bf0:	b	4c00 <gen_thostop+0x30>
    4bf4:	b	4c2c <gen_thostop+0x5c>
    4bf8:	b	4c74 <gen_thostop+0xa4>
    4bfc:	b	4c48 <gen_thostop+0x78>
    4c00:	mov	r3, r0
    4c04:	mov	r2, #6
    4c08:	mov	r1, #8
    4c0c:	mov	r0, #1
    4c10:	bl	4934 <gen_bcmp>
    4c14:	mov	r4, r0
    4c18:	mov	r0, r4
    4c1c:	ldrd	r4, [sp]
    4c20:	ldr	r6, [sp, #8]
    4c24:	add	sp, sp, #12
    4c28:	pop	{pc}		; (ldr pc, [sp], #4)
    4c2c:	mov	r3, r0
    4c30:	mov	r2, #6
    4c34:	mov	r1, #2
    4c38:	mov	r0, #1
    4c3c:	bl	4934 <gen_bcmp>
    4c40:	mov	r4, r0
    4c44:	b	4c18 <gen_thostop+0x48>
    4c48:	mov	r1, #1
    4c4c:	bl	4bd0 <gen_thostop>
    4c50:	mov	r5, r0
    4c54:	mov	r1, #2
    4c58:	mov	r0, r4
    4c5c:	bl	4bd0 <gen_thostop>
    4c60:	mov	r4, r0
    4c64:	mov	r1, r0
    4c68:	mov	r0, r5
    4c6c:	bl	3a30 <sf_gen_and>
    4c70:	b	4c18 <gen_thostop+0x48>
    4c74:	mov	r1, #1
    4c78:	bl	4bd0 <gen_thostop>
    4c7c:	mov	r5, r0
    4c80:	mov	r1, #2
    4c84:	mov	r0, r4
    4c88:	bl	4bd0 <gen_thostop>
    4c8c:	mov	r4, r0
    4c90:	mov	r1, r0
    4c94:	mov	r0, r5
    4c98:	bl	3ac0 <sf_gen_or>
    4c9c:	b	4c18 <gen_thostop+0x48>
    4ca0:	bl	ebc <abort@plt>

00004ca4 <gen_ipfchostop>:
    4ca4:	strd	r4, [sp, #-16]!
    4ca8:	str	r6, [sp, #8]
    4cac:	str	lr, [sp, #12]
    4cb0:	mov	r4, r0
    4cb4:	cmp	r1, #4
    4cb8:	addls	pc, pc, r1, lsl #2
    4cbc:	b	4d74 <gen_ipfchostop+0xd0>
    4cc0:	b	4d48 <gen_ipfchostop+0xa4>
    4cc4:	b	4cd4 <gen_ipfchostop+0x30>
    4cc8:	b	4d00 <gen_ipfchostop+0x5c>
    4ccc:	b	4d48 <gen_ipfchostop+0xa4>
    4cd0:	b	4d1c <gen_ipfchostop+0x78>
    4cd4:	mov	r3, r0
    4cd8:	mov	r2, #6
    4cdc:	mov	r1, #10
    4ce0:	mov	r0, #1
    4ce4:	bl	4934 <gen_bcmp>
    4ce8:	mov	r4, r0
    4cec:	mov	r0, r4
    4cf0:	ldrd	r4, [sp]
    4cf4:	ldr	r6, [sp, #8]
    4cf8:	add	sp, sp, #12
    4cfc:	pop	{pc}		; (ldr pc, [sp], #4)
    4d00:	mov	r3, r0
    4d04:	mov	r2, #6
    4d08:	mov	r1, #2
    4d0c:	mov	r0, #1
    4d10:	bl	4934 <gen_bcmp>
    4d14:	mov	r4, r0
    4d18:	b	4cec <gen_ipfchostop+0x48>
    4d1c:	mov	r1, #1
    4d20:	bl	4ca4 <gen_ipfchostop>
    4d24:	mov	r5, r0
    4d28:	mov	r1, #2
    4d2c:	mov	r0, r4
    4d30:	bl	4ca4 <gen_ipfchostop>
    4d34:	mov	r4, r0
    4d38:	mov	r1, r0
    4d3c:	mov	r0, r5
    4d40:	bl	3a30 <sf_gen_and>
    4d44:	b	4cec <gen_ipfchostop+0x48>
    4d48:	mov	r1, #1
    4d4c:	bl	4ca4 <gen_ipfchostop>
    4d50:	mov	r5, r0
    4d54:	mov	r1, #2
    4d58:	mov	r0, r4
    4d5c:	bl	4ca4 <gen_ipfchostop>
    4d60:	mov	r4, r0
    4d64:	mov	r1, r0
    4d68:	mov	r0, r5
    4d6c:	bl	3ac0 <sf_gen_or>
    4d70:	b	4cec <gen_ipfchostop+0x48>
    4d74:	bl	ebc <abort@plt>

00004d78 <gen_ehostop>:
    4d78:	strd	r4, [sp, #-16]!
    4d7c:	str	r6, [sp, #8]
    4d80:	str	lr, [sp, #12]
    4d84:	mov	r4, r0
    4d88:	cmp	r1, #4
    4d8c:	addls	pc, pc, r1, lsl #2
    4d90:	b	4e5c <gen_ehostop+0xe4>
    4d94:	b	4e30 <gen_ehostop+0xb8>
    4d98:	b	4da8 <gen_ehostop+0x30>
    4d9c:	b	4de0 <gen_ehostop+0x68>
    4da0:	b	4e30 <gen_ehostop+0xb8>
    4da4:	b	4e04 <gen_ehostop+0x8c>
    4da8:	ldr	r3, [pc, #176]	; 4e60 <gen_ehostop+0xe8>
    4dac:	add	r3, pc, r3
    4db0:	ldr	r1, [r3, #884]	; 0x374
    4db4:	mov	r3, r0
    4db8:	mov	r2, #6
    4dbc:	add	r1, r1, r2
    4dc0:	mov	r0, #1
    4dc4:	bl	4934 <gen_bcmp>
    4dc8:	mov	r4, r0
    4dcc:	mov	r0, r4
    4dd0:	ldrd	r4, [sp]
    4dd4:	ldr	r6, [sp, #8]
    4dd8:	add	sp, sp, #12
    4ddc:	pop	{pc}		; (ldr pc, [sp], #4)
    4de0:	mov	r3, r0
    4de4:	mov	r2, #6
    4de8:	ldr	r1, [pc, #116]	; 4e64 <gen_ehostop+0xec>
    4dec:	add	r1, pc, r1
    4df0:	ldr	r1, [r1, #884]	; 0x374
    4df4:	mov	r0, #1
    4df8:	bl	4934 <gen_bcmp>
    4dfc:	mov	r4, r0
    4e00:	b	4dcc <gen_ehostop+0x54>
    4e04:	mov	r1, #1
    4e08:	bl	4d78 <gen_ehostop>
    4e0c:	mov	r5, r0
    4e10:	mov	r1, #2
    4e14:	mov	r0, r4
    4e18:	bl	4d78 <gen_ehostop>
    4e1c:	mov	r4, r0
    4e20:	mov	r1, r0
    4e24:	mov	r0, r5
    4e28:	bl	3a30 <sf_gen_and>
    4e2c:	b	4dcc <gen_ehostop+0x54>
    4e30:	mov	r1, #1
    4e34:	bl	4d78 <gen_ehostop>
    4e38:	mov	r5, r0
    4e3c:	mov	r1, #2
    4e40:	mov	r0, r4
    4e44:	bl	4d78 <gen_ehostop>
    4e48:	mov	r4, r0
    4e4c:	mov	r1, r0
    4e50:	mov	r0, r5
    4e54:	bl	3ac0 <sf_gen_or>
    4e58:	b	4dcc <gen_ehostop+0x54>
    4e5c:	bl	ebc <abort@plt>
    4e60:	.word	0x0002c5b4
    4e64:	.word	0x0002c574

00004e68 <gen_ahostop>:
    4e68:	strd	r4, [sp, #-16]!
    4e6c:	str	r6, [sp, #8]
    4e70:	str	lr, [sp, #12]
    4e74:	mov	r4, r0
    4e78:	cmp	r1, #4
    4e7c:	addls	pc, pc, r1, lsl #2
    4e80:	b	4f38 <gen_ahostop+0xd0>
    4e84:	b	4f0c <gen_ahostop+0xa4>
    4e88:	b	4e98 <gen_ahostop+0x30>
    4e8c:	b	4ec4 <gen_ahostop+0x5c>
    4e90:	b	4f0c <gen_ahostop+0xa4>
    4e94:	b	4ee0 <gen_ahostop+0x78>
    4e98:	mov	r3, r0
    4e9c:	mov	r2, #1
    4ea0:	mov	r1, #0
    4ea4:	mov	r0, r2
    4ea8:	bl	4934 <gen_bcmp>
    4eac:	mov	r4, r0
    4eb0:	mov	r0, r4
    4eb4:	ldrd	r4, [sp]
    4eb8:	ldr	r6, [sp, #8]
    4ebc:	add	sp, sp, #12
    4ec0:	pop	{pc}		; (ldr pc, [sp], #4)
    4ec4:	mov	r3, r0
    4ec8:	mov	r2, #1
    4ecc:	mov	r1, r2
    4ed0:	mov	r0, r2
    4ed4:	bl	4934 <gen_bcmp>
    4ed8:	mov	r4, r0
    4edc:	b	4eb0 <gen_ahostop+0x48>
    4ee0:	mov	r1, #1
    4ee4:	bl	4e68 <gen_ahostop>
    4ee8:	mov	r5, r0
    4eec:	mov	r1, #2
    4ef0:	mov	r0, r4
    4ef4:	bl	4e68 <gen_ahostop>
    4ef8:	mov	r4, r0
    4efc:	mov	r1, r0
    4f00:	mov	r0, r5
    4f04:	bl	3a30 <sf_gen_and>
    4f08:	b	4eb0 <gen_ahostop+0x48>
    4f0c:	mov	r1, #1
    4f10:	bl	4e68 <gen_ahostop>
    4f14:	mov	r5, r0
    4f18:	mov	r1, #2
    4f1c:	mov	r0, r4
    4f20:	bl	4e68 <gen_ahostop>
    4f24:	mov	r4, r0
    4f28:	mov	r1, r0
    4f2c:	mov	r0, r5
    4f30:	bl	3ac0 <sf_gen_or>
    4f34:	b	4eb0 <gen_ahostop+0x48>
    4f38:	bl	ebc <abort@plt>

00004f3c <gen_llc_linktype>:
    4f3c:	str	r4, [sp, #-8]!
    4f40:	str	lr, [sp, #4]
    4f44:	cmp	r0, #240	; 0xf0
    4f48:	beq	4fa0 <gen_llc_linktype+0x64>
    4f4c:	bgt	4f78 <gen_llc_linktype+0x3c>
    4f50:	cmp	r0, #6
    4f54:	beq	4fa0 <gen_llc_linktype+0x64>
    4f58:	cmp	r0, #224	; 0xe0
    4f5c:	bne	4fc0 <gen_llc_linktype+0x84>
    4f60:	mov	r3, #224	; 0xe0
    4f64:	mov	r2, #16
    4f68:	mov	r1, #0
    4f6c:	mov	r0, #2
    4f70:	bl	4908 <gen_cmp>
    4f74:	b	4fb4 <gen_llc_linktype+0x78>
    4f78:	cmp	r0, #254	; 0xfe
    4f7c:	beq	4fa0 <gen_llc_linktype+0x64>
    4f80:	movw	r3, #32923	; 0x809b
    4f84:	cmp	r0, r3
    4f88:	bne	4fc0 <gen_llc_linktype+0x84>
    4f8c:	movw	r1, #32923	; 0x809b
    4f90:	mov	r0, #7
    4f94:	movt	r0, #8
    4f98:	bl	4aa4 <gen_snap>
    4f9c:	b	4fb4 <gen_llc_linktype+0x78>
    4fa0:	orr	r3, r0, r0, lsl #8
    4fa4:	mov	r2, #8
    4fa8:	mov	r1, #0
    4fac:	mov	r0, #2
    4fb0:	bl	4908 <gen_cmp>
    4fb4:	ldr	r4, [sp]
    4fb8:	add	sp, sp, #4
    4fbc:	pop	{pc}		; (ldr pc, [sp], #4)
    4fc0:	movw	r3, #1500	; 0x5dc
    4fc4:	cmp	r0, r3
    4fc8:	mov	r3, r0
    4fcc:	movle	r2, #16
    4fd0:	movle	r1, #0
    4fd4:	movgt	r2, #8
    4fd8:	movgt	r1, #6
    4fdc:	mov	r0, #2
    4fe0:	bl	4908 <gen_cmp>
    4fe4:	b	4fb4 <gen_llc_linktype+0x78>

00004fe8 <gen_portatom>:
    4fe8:	str	r4, [sp, #-8]!
    4fec:	str	lr, [sp, #4]
    4ff0:	mov	r3, r1
    4ff4:	mov	r2, #8
    4ff8:	mov	r1, r0
    4ffc:	mov	r0, #5
    5000:	bl	4908 <gen_cmp>
    5004:	ldr	r4, [sp]
    5008:	add	sp, sp, #4
    500c:	pop	{pc}		; (ldr pc, [sp], #4)

00005010 <gen_portatom6>:
    5010:	str	r4, [sp, #-8]!
    5014:	str	lr, [sp, #4]
    5018:	mov	r3, r1
    501c:	mov	r2, #8
    5020:	mov	r1, r0
    5024:	mov	r0, #6
    5028:	bl	4908 <gen_cmp>
    502c:	ldr	r4, [sp]
    5030:	add	sp, sp, #4
    5034:	pop	{pc}		; (ldr pc, [sp], #4)

00005038 <sf_gen_portop6>:
    5038:	strd	r4, [sp, #-24]!	; 0xffffffe8
    503c:	strd	r6, [sp, #8]
    5040:	str	r8, [sp, #16]
    5044:	str	lr, [sp, #20]
    5048:	mov	r5, r0
    504c:	mov	r4, r2
    5050:	mov	r3, r1
    5054:	mov	r2, #16
    5058:	mov	r1, #6
    505c:	mov	r0, #3
    5060:	bl	4908 <gen_cmp>
    5064:	mov	r6, r0
    5068:	cmp	r4, #4
    506c:	addls	pc, pc, r4, lsl #2
    5070:	b	5130 <sf_gen_portop6+0xf8>
    5074:	b	50d0 <sf_gen_portop6+0x98>
    5078:	b	5088 <sf_gen_portop6+0x50>
    507c:	b	50bc <sf_gen_portop6+0x84>
    5080:	b	50d0 <sf_gen_portop6+0x98>
    5084:	b	5100 <sf_gen_portop6+0xc8>
    5088:	mov	r1, r5
    508c:	mov	r0, #0
    5090:	bl	5010 <gen_portatom6>
    5094:	mov	r4, r0
    5098:	mov	r1, r4
    509c:	mov	r0, r6
    50a0:	bl	3a30 <sf_gen_and>
    50a4:	mov	r0, r4
    50a8:	ldrd	r4, [sp]
    50ac:	ldrd	r6, [sp, #8]
    50b0:	ldr	r8, [sp, #16]
    50b4:	add	sp, sp, #20
    50b8:	pop	{pc}		; (ldr pc, [sp], #4)
    50bc:	mov	r1, r5
    50c0:	mov	r0, #2
    50c4:	bl	5010 <gen_portatom6>
    50c8:	mov	r4, r0
    50cc:	b	5098 <sf_gen_portop6+0x60>
    50d0:	mov	r1, r5
    50d4:	mov	r0, #0
    50d8:	bl	5010 <gen_portatom6>
    50dc:	mov	r7, r0
    50e0:	mov	r1, r5
    50e4:	mov	r0, #2
    50e8:	bl	5010 <gen_portatom6>
    50ec:	mov	r4, r0
    50f0:	mov	r1, r0
    50f4:	mov	r0, r7
    50f8:	bl	3ac0 <sf_gen_or>
    50fc:	b	5098 <sf_gen_portop6+0x60>
    5100:	mov	r1, r5
    5104:	mov	r0, #0
    5108:	bl	5010 <gen_portatom6>
    510c:	mov	r7, r0
    5110:	mov	r1, r5
    5114:	mov	r0, #2
    5118:	bl	5010 <gen_portatom6>
    511c:	mov	r4, r0
    5120:	mov	r1, r0
    5124:	mov	r0, r7
    5128:	bl	3a30 <sf_gen_and>
    512c:	b	5098 <sf_gen_portop6+0x60>
    5130:	bl	ebc <abort@plt>

00005134 <sf_gen_portop>:
    5134:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5138:	strd	r6, [sp, #8]
    513c:	str	r8, [sp, #16]
    5140:	str	lr, [sp, #20]
    5144:	mov	r6, r0
    5148:	mov	r4, r2
    514c:	mov	r3, r1
    5150:	mov	r2, #16
    5154:	mov	r1, #9
    5158:	mov	r0, #3
    515c:	bl	4908 <gen_cmp>
    5160:	mov	r7, r0
    5164:	bl	46d0 <gen_ipfrag>
    5168:	mov	r5, r0
    516c:	mov	r1, r0
    5170:	mov	r0, r7
    5174:	bl	3a30 <sf_gen_and>
    5178:	cmp	r4, #4
    517c:	addls	pc, pc, r4, lsl #2
    5180:	b	5240 <sf_gen_portop+0x10c>
    5184:	b	51e0 <sf_gen_portop+0xac>
    5188:	b	5198 <sf_gen_portop+0x64>
    518c:	b	51cc <sf_gen_portop+0x98>
    5190:	b	51e0 <sf_gen_portop+0xac>
    5194:	b	5210 <sf_gen_portop+0xdc>
    5198:	mov	r1, r6
    519c:	mov	r0, #0
    51a0:	bl	4fe8 <gen_portatom>
    51a4:	mov	r4, r0
    51a8:	mov	r1, r4
    51ac:	mov	r0, r5
    51b0:	bl	3a30 <sf_gen_and>
    51b4:	mov	r0, r4
    51b8:	ldrd	r4, [sp]
    51bc:	ldrd	r6, [sp, #8]
    51c0:	ldr	r8, [sp, #16]
    51c4:	add	sp, sp, #20
    51c8:	pop	{pc}		; (ldr pc, [sp], #4)
    51cc:	mov	r1, r6
    51d0:	mov	r0, #2
    51d4:	bl	4fe8 <gen_portatom>
    51d8:	mov	r4, r0
    51dc:	b	51a8 <sf_gen_portop+0x74>
    51e0:	mov	r1, r6
    51e4:	mov	r0, #0
    51e8:	bl	4fe8 <gen_portatom>
    51ec:	mov	r7, r0
    51f0:	mov	r1, r6
    51f4:	mov	r0, #2
    51f8:	bl	4fe8 <gen_portatom>
    51fc:	mov	r4, r0
    5200:	mov	r1, r0
    5204:	mov	r0, r7
    5208:	bl	3ac0 <sf_gen_or>
    520c:	b	51a8 <sf_gen_portop+0x74>
    5210:	mov	r1, r6
    5214:	mov	r0, #0
    5218:	bl	4fe8 <gen_portatom>
    521c:	mov	r7, r0
    5220:	mov	r1, r6
    5224:	mov	r0, #2
    5228:	bl	4fe8 <gen_portatom>
    522c:	mov	r4, r0
    5230:	mov	r1, r0
    5234:	mov	r0, r7
    5238:	bl	3a30 <sf_gen_and>
    523c:	b	51a8 <sf_gen_portop+0x74>
    5240:	bl	ebc <abort@plt>

00005244 <gen_cmp_gt>:
    5244:	push	{lr}		; (str lr, [sp, #-4]!)
    5248:	sub	sp, sp, #20
    524c:	str	r3, [sp, #8]
    5250:	mov	r3, #0
    5254:	str	r3, [sp, #4]
    5258:	mov	r3, #32
    525c:	str	r3, [sp]
    5260:	mvn	r3, #0
    5264:	bl	4738 <gen_ncmp>
    5268:	add	sp, sp, #20
    526c:	pop	{pc}		; (ldr pc, [sp], #4)

00005270 <gen_ether_linktype>:
    5270:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5274:	strd	r6, [sp, #8]
    5278:	str	r8, [sp, #16]
    527c:	str	lr, [sp, #20]
    5280:	mov	r4, r0
    5284:	cmp	r0, #240	; 0xf0
    5288:	beq	53d0 <gen_ether_linktype+0x160>
    528c:	bgt	5348 <gen_ether_linktype+0xd8>
    5290:	cmp	r0, #6
    5294:	beq	53d0 <gen_ether_linktype+0x160>
    5298:	cmp	r0, #224	; 0xe0
    529c:	bne	5368 <gen_ether_linktype+0xf8>
    52a0:	mov	r3, #224	; 0xe0
    52a4:	mov	r2, #16
    52a8:	mov	r1, #0
    52ac:	mov	r0, #2
    52b0:	bl	4908 <gen_cmp>
    52b4:	mov	r4, r0
    52b8:	movw	r3, #65535	; 0xffff
    52bc:	mov	r2, #8
    52c0:	mov	r1, #0
    52c4:	mov	r0, #2
    52c8:	bl	4908 <gen_cmp>
    52cc:	mov	r5, r0
    52d0:	mov	r1, r0
    52d4:	mov	r0, r4
    52d8:	bl	3ac0 <sf_gen_or>
    52dc:	movw	r1, #33079	; 0x8137
    52e0:	mov	r0, #0
    52e4:	bl	4aa4 <gen_snap>
    52e8:	mov	r1, r5
    52ec:	bl	3ac0 <sf_gen_or>
    52f0:	ldr	r3, [pc, #508]	; 54f4 <gen_ether_linktype+0x284>
    52f4:	add	r3, pc, r3
    52f8:	ldr	r4, [r3, #944]	; 0x3b0
    52fc:	movw	r3, #1500	; 0x5dc
    5300:	mov	r2, #8
    5304:	mov	r1, r4
    5308:	mov	r0, #1
    530c:	bl	5244 <gen_cmp_gt>
    5310:	ldr	r3, [r0, #44]	; 0x2c
    5314:	clz	r3, r3
    5318:	lsr	r3, r3, #5
    531c:	str	r3, [r0, #44]	; 0x2c
    5320:	mov	r1, r5
    5324:	bl	3a30 <sf_gen_and>
    5328:	movw	r3, #33079	; 0x8137
    532c:	mov	r2, #8
    5330:	mov	r1, r4
    5334:	mov	r0, #1
    5338:	bl	4908 <gen_cmp>
    533c:	mov	r1, r5
    5340:	bl	3ac0 <sf_gen_or>
    5344:	b	5424 <gen_ether_linktype+0x1b4>
    5348:	movw	r3, #32923	; 0x809b
    534c:	cmp	r0, r3
    5350:	beq	543c <gen_ether_linktype+0x1cc>
    5354:	movw	r3, #33011	; 0x80f3
    5358:	cmp	r0, r3
    535c:	beq	543c <gen_ether_linktype+0x1cc>
    5360:	cmp	r0, #254	; 0xfe
    5364:	beq	53d0 <gen_ether_linktype+0x160>
    5368:	movw	r3, #1500	; 0x5dc
    536c:	cmp	r4, r3
    5370:	bgt	54d0 <gen_ether_linktype+0x260>
    5374:	ldr	r3, [pc, #380]	; 54f8 <gen_ether_linktype+0x288>
    5378:	add	r3, pc, r3
    537c:	ldr	r5, [r3, #944]	; 0x3b0
    5380:	movw	r3, #1500	; 0x5dc
    5384:	mov	r2, #8
    5388:	mov	r1, r5
    538c:	mov	r0, #1
    5390:	bl	5244 <gen_cmp_gt>
    5394:	mov	r6, r0
    5398:	ldr	r3, [r0, #44]	; 0x2c
    539c:	clz	r3, r3
    53a0:	lsr	r3, r3, #5
    53a4:	str	r3, [r0, #44]	; 0x2c
    53a8:	mov	r3, r4
    53ac:	mov	r2, #16
    53b0:	add	r1, r5, #2
    53b4:	mov	r0, #1
    53b8:	bl	4908 <gen_cmp>
    53bc:	mov	r5, r0
    53c0:	mov	r1, r0
    53c4:	mov	r0, r6
    53c8:	bl	3a30 <sf_gen_and>
    53cc:	b	5424 <gen_ether_linktype+0x1b4>
    53d0:	movw	r3, #1500	; 0x5dc
    53d4:	mov	r2, #8
    53d8:	ldr	r1, [pc, #284]	; 54fc <gen_ether_linktype+0x28c>
    53dc:	add	r1, pc, r1
    53e0:	ldr	r1, [r1, #944]	; 0x3b0
    53e4:	mov	r0, #1
    53e8:	bl	5244 <gen_cmp_gt>
    53ec:	mov	r6, r0
    53f0:	ldr	r3, [r0, #44]	; 0x2c
    53f4:	clz	r3, r3
    53f8:	lsr	r3, r3, #5
    53fc:	str	r3, [r0, #44]	; 0x2c
    5400:	orr	r3, r4, r4, lsl #8
    5404:	mov	r2, #8
    5408:	mov	r1, #0
    540c:	mov	r0, #2
    5410:	bl	4908 <gen_cmp>
    5414:	mov	r5, r0
    5418:	mov	r1, r0
    541c:	mov	r0, r6
    5420:	bl	3a30 <sf_gen_and>
    5424:	mov	r0, r5
    5428:	ldrd	r4, [sp]
    542c:	ldrd	r6, [sp, #8]
    5430:	ldr	r8, [sp, #16]
    5434:	add	sp, sp, #20
    5438:	pop	{pc}		; (ldr pc, [sp], #4)
    543c:	ldr	r3, [pc, #188]	; 5500 <gen_ether_linktype+0x290>
    5440:	add	r3, pc, r3
    5444:	ldr	r7, [r3, #944]	; 0x3b0
    5448:	movw	r3, #1500	; 0x5dc
    544c:	mov	r2, #8
    5450:	mov	r1, r7
    5454:	mov	r0, #1
    5458:	bl	5244 <gen_cmp_gt>
    545c:	mov	r6, r0
    5460:	ldr	r3, [r0, #44]	; 0x2c
    5464:	clz	r3, r3
    5468:	lsr	r3, r3, #5
    546c:	str	r3, [r0, #44]	; 0x2c
    5470:	movw	r3, #32923	; 0x809b
    5474:	cmp	r4, r3
    5478:	beq	54b8 <gen_ether_linktype+0x248>
    547c:	movw	r1, #33011	; 0x80f3
    5480:	mov	r0, #0
    5484:	bl	4aa4 <gen_snap>
    5488:	mov	r5, r0
    548c:	mov	r1, r5
    5490:	mov	r0, r6
    5494:	bl	3a30 <sf_gen_and>
    5498:	mov	r3, r4
    549c:	mov	r2, #8
    54a0:	mov	r1, r7
    54a4:	mov	r0, #1
    54a8:	bl	4908 <gen_cmp>
    54ac:	mov	r1, r5
    54b0:	bl	3ac0 <sf_gen_or>
    54b4:	b	5424 <gen_ether_linktype+0x1b4>
    54b8:	mov	r1, r3
    54bc:	mov	r0, #7
    54c0:	movt	r0, #8
    54c4:	bl	4aa4 <gen_snap>
    54c8:	mov	r5, r0
    54cc:	b	548c <gen_ether_linktype+0x21c>
    54d0:	mov	r3, r4
    54d4:	mov	r2, #8
    54d8:	ldr	r1, [pc, #36]	; 5504 <gen_ether_linktype+0x294>
    54dc:	add	r1, pc, r1
    54e0:	ldr	r1, [r1, #944]	; 0x3b0
    54e4:	mov	r0, #1
    54e8:	bl	4908 <gen_cmp>
    54ec:	mov	r5, r0
    54f0:	b	5424 <gen_ether_linktype+0x1b4>
    54f4:	.word	0x0002c06c
    54f8:	.word	0x0002bfe8
    54fc:	.word	0x0002bf84
    5500:	.word	0x0002bf20
    5504:	.word	0x0002be84

00005508 <gen_mcmp>:
    5508:	push	{lr}		; (str lr, [sp, #-4]!)
    550c:	sub	sp, sp, #20
    5510:	str	r3, [sp, #8]
    5514:	mov	r3, #0
    5518:	str	r3, [sp, #4]
    551c:	mov	r3, #16
    5520:	str	r3, [sp]
    5524:	ldr	r3, [sp, #24]
    5528:	bl	4738 <gen_ncmp>
    552c:	add	sp, sp, #20
    5530:	pop	{pc}		; (ldr pc, [sp], #4)

00005534 <gen_wlanhostop>:
    5534:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5538:	strd	r6, [sp, #8]
    553c:	strd	r8, [sp, #16]
    5540:	str	sl, [sp, #24]
    5544:	str	lr, [sp, #28]
    5548:	sub	sp, sp, #8
    554c:	mov	r5, r0
    5550:	cmp	r1, #8
    5554:	addls	pc, pc, r1, lsl #2
    5558:	b	5b84 <gen_wlanhostop+0x650>
    555c:	b	5b58 <gen_wlanhostop+0x624>
    5560:	b	5580 <gen_wlanhostop+0x4c>
    5564:	b	57f4 <gen_wlanhostop+0x2c0>
    5568:	b	5b58 <gen_wlanhostop+0x624>
    556c:	b	5b2c <gen_wlanhostop+0x5f8>
    5570:	b	59a8 <gen_wlanhostop+0x474>
    5574:	b	59c4 <gen_wlanhostop+0x490>
    5578:	b	5a90 <gen_wlanhostop+0x55c>
    557c:	b	5ae8 <gen_wlanhostop+0x5b4>
    5580:	mov	r1, #16
    5584:	mov	r0, #1
    5588:	bl	447c <gen_load_llrel>
    558c:	mov	r4, r0
    5590:	mov	r0, #208	; 0xd0
    5594:	bl	22d8 <newchunk>
    5598:	mov	r7, r0
    559c:	mov	r8, #69	; 0x45
    55a0:	str	r8, [r0, #8]
    55a4:	str	r0, [r7, #96]	; 0x60
    55a8:	mov	r6, #1
    55ac:	str	r6, [r0, #20]
    55b0:	str	r4, [r0, #4]
    55b4:	mov	r3, r5
    55b8:	mov	r2, #6
    55bc:	mov	r1, #24
    55c0:	mov	r0, r6
    55c4:	bl	4934 <gen_bcmp>
    55c8:	mov	r4, r0
    55cc:	mov	r1, r0
    55d0:	mov	r0, r7
    55d4:	bl	3a30 <sf_gen_and>
    55d8:	mov	r1, #16
    55dc:	mov	r0, r6
    55e0:	bl	447c <gen_load_llrel>
    55e4:	mov	r9, r0
    55e8:	mov	r0, #208	; 0xd0
    55ec:	bl	22d8 <newchunk>
    55f0:	mov	r7, r0
    55f4:	str	r8, [r0, #8]
    55f8:	str	r0, [r7, #96]	; 0x60
    55fc:	str	r6, [r0, #20]
    5600:	str	r9, [r0, #4]
    5604:	ldr	r3, [r0, #44]	; 0x2c
    5608:	clz	r3, r3
    560c:	lsr	r3, r3, #5
    5610:	str	r3, [r0, #44]	; 0x2c
    5614:	mov	r3, r5
    5618:	mov	r2, #6
    561c:	mov	r1, #16
    5620:	mov	r0, r6
    5624:	bl	4934 <gen_bcmp>
    5628:	mov	r9, r0
    562c:	mov	r1, r0
    5630:	mov	r0, r7
    5634:	bl	3a30 <sf_gen_and>
    5638:	mov	r1, r4
    563c:	mov	r0, r9
    5640:	bl	3ac0 <sf_gen_or>
    5644:	mov	r1, #16
    5648:	mov	r0, r6
    564c:	bl	447c <gen_load_llrel>
    5650:	mov	r7, r0
    5654:	mov	r0, #208	; 0xd0
    5658:	bl	22d8 <newchunk>
    565c:	mov	r3, r0
    5660:	str	r8, [r0, #8]
    5664:	str	r0, [r3, #96]	; 0x60
    5668:	mov	r9, #2
    566c:	str	r9, [r0, #20]
    5670:	str	r7, [r0, #4]
    5674:	mov	r1, r4
    5678:	bl	3a30 <sf_gen_and>
    567c:	mov	r1, #16
    5680:	mov	r0, r6
    5684:	bl	447c <gen_load_llrel>
    5688:	mov	sl, r0
    568c:	mov	r0, #208	; 0xd0
    5690:	bl	22d8 <newchunk>
    5694:	mov	r7, r0
    5698:	str	r8, [r0, #8]
    569c:	str	r0, [r7, #96]	; 0x60
    56a0:	str	r9, [r0, #20]
    56a4:	str	sl, [r0, #4]
    56a8:	ldr	r3, [r0, #44]	; 0x2c
    56ac:	clz	r3, r3
    56b0:	lsr	r3, r3, #5
    56b4:	str	r3, [r0, #44]	; 0x2c
    56b8:	mov	r3, r5
    56bc:	mov	r2, #6
    56c0:	mov	r1, #10
    56c4:	mov	r0, r6
    56c8:	bl	4934 <gen_bcmp>
    56cc:	mov	r9, r0
    56d0:	mov	r1, r0
    56d4:	mov	r0, r7
    56d8:	bl	3a30 <sf_gen_and>
    56dc:	mov	r1, r4
    56e0:	mov	r0, r9
    56e4:	bl	3ac0 <sf_gen_or>
    56e8:	mov	r1, #16
    56ec:	mov	r0, #0
    56f0:	bl	447c <gen_load_llrel>
    56f4:	mov	r7, r0
    56f8:	mov	r0, #208	; 0xd0
    56fc:	bl	22d8 <newchunk>
    5700:	mov	r3, r0
    5704:	str	r8, [r0, #8]
    5708:	str	r0, [r3, #96]	; 0x60
    570c:	mov	r9, #8
    5710:	str	r9, [r0, #20]
    5714:	str	r7, [r0, #4]
    5718:	mov	r1, r4
    571c:	bl	3a30 <sf_gen_and>
    5720:	mov	r1, #16
    5724:	mov	r0, #0
    5728:	bl	447c <gen_load_llrel>
    572c:	mov	sl, r0
    5730:	mov	r0, #208	; 0xd0
    5734:	bl	22d8 <newchunk>
    5738:	mov	r7, r0
    573c:	str	r8, [r0, #8]
    5740:	str	r0, [r7, #96]	; 0x60
    5744:	str	r9, [r0, #20]
    5748:	str	sl, [r0, #4]
    574c:	ldr	r3, [r0, #44]	; 0x2c
    5750:	clz	r3, r3
    5754:	lsr	r3, r3, #5
    5758:	str	r3, [r0, #44]	; 0x2c
    575c:	mov	r3, r5
    5760:	mov	r2, #6
    5764:	mov	r1, #10
    5768:	mov	r0, r6
    576c:	bl	4934 <gen_bcmp>
    5770:	mov	r5, r0
    5774:	mov	r1, r0
    5778:	mov	r0, r7
    577c:	bl	3a30 <sf_gen_and>
    5780:	mov	r1, r4
    5784:	mov	r0, r5
    5788:	bl	3ac0 <sf_gen_or>
    578c:	mov	r1, #16
    5790:	mov	r0, #0
    5794:	bl	447c <gen_load_llrel>
    5798:	mov	r5, r0
    579c:	mov	r0, #208	; 0xd0
    57a0:	bl	22d8 <newchunk>
    57a4:	mov	r3, r0
    57a8:	str	r8, [r0, #8]
    57ac:	str	r0, [r3, #96]	; 0x60
    57b0:	mov	r2, #4
    57b4:	str	r2, [r0, #20]
    57b8:	str	r5, [r0, #4]
    57bc:	ldr	r2, [r0, #44]	; 0x2c
    57c0:	clz	r2, r2
    57c4:	lsr	r2, r2, #5
    57c8:	str	r2, [r0, #44]	; 0x2c
    57cc:	mov	r1, r4
    57d0:	bl	3a30 <sf_gen_and>
    57d4:	mov	r0, r4
    57d8:	add	sp, sp, #8
    57dc:	ldrd	r4, [sp]
    57e0:	ldrd	r6, [sp, #8]
    57e4:	ldrd	r8, [sp, #16]
    57e8:	ldr	sl, [sp, #24]
    57ec:	add	sp, sp, #28
    57f0:	pop	{pc}		; (ldr pc, [sp], #4)
    57f4:	mov	r1, #16
    57f8:	mov	r0, #1
    57fc:	bl	447c <gen_load_llrel>
    5800:	mov	r4, r0
    5804:	mov	r0, #208	; 0xd0
    5808:	bl	22d8 <newchunk>
    580c:	mov	r6, r0
    5810:	mov	r8, #69	; 0x45
    5814:	str	r8, [r0, #8]
    5818:	str	r0, [r6, #96]	; 0x60
    581c:	mov	r7, #1
    5820:	str	r7, [r0, #20]
    5824:	str	r4, [r0, #4]
    5828:	mov	r3, r5
    582c:	mov	r2, #6
    5830:	mov	r1, #16
    5834:	mov	r0, r7
    5838:	bl	4934 <gen_bcmp>
    583c:	mov	r4, r0
    5840:	mov	r1, r0
    5844:	mov	r0, r6
    5848:	bl	3a30 <sf_gen_and>
    584c:	mov	r1, #16
    5850:	mov	r0, r7
    5854:	bl	447c <gen_load_llrel>
    5858:	mov	r9, r0
    585c:	mov	r0, #208	; 0xd0
    5860:	bl	22d8 <newchunk>
    5864:	mov	r6, r0
    5868:	str	r8, [r0, #8]
    586c:	str	r0, [r6, #96]	; 0x60
    5870:	str	r7, [r0, #20]
    5874:	str	r9, [r0, #4]
    5878:	ldr	r3, [r0, #44]	; 0x2c
    587c:	clz	r3, r3
    5880:	lsr	r3, r3, #5
    5884:	str	r3, [r0, #44]	; 0x2c
    5888:	mov	r3, r5
    588c:	mov	r2, #6
    5890:	mov	r1, #4
    5894:	mov	r0, r7
    5898:	bl	4934 <gen_bcmp>
    589c:	mov	r9, r0
    58a0:	mov	r1, r0
    58a4:	mov	r0, r6
    58a8:	bl	3a30 <sf_gen_and>
    58ac:	mov	r1, r4
    58b0:	mov	r0, r9
    58b4:	bl	3ac0 <sf_gen_or>
    58b8:	mov	r1, #16
    58bc:	mov	r0, #0
    58c0:	bl	447c <gen_load_llrel>
    58c4:	mov	r6, r0
    58c8:	mov	r0, #208	; 0xd0
    58cc:	bl	22d8 <newchunk>
    58d0:	mov	r3, r0
    58d4:	str	r8, [r0, #8]
    58d8:	str	r0, [r3, #96]	; 0x60
    58dc:	mov	r9, #8
    58e0:	str	r9, [r0, #20]
    58e4:	str	r6, [r0, #4]
    58e8:	mov	r1, r4
    58ec:	bl	3a30 <sf_gen_and>
    58f0:	mov	r1, #16
    58f4:	mov	r0, #0
    58f8:	bl	447c <gen_load_llrel>
    58fc:	mov	sl, r0
    5900:	mov	r0, #208	; 0xd0
    5904:	bl	22d8 <newchunk>
    5908:	mov	r6, r0
    590c:	str	r8, [r0, #8]
    5910:	str	r0, [r6, #96]	; 0x60
    5914:	str	r9, [r0, #20]
    5918:	str	sl, [r0, #4]
    591c:	ldr	r3, [r0, #44]	; 0x2c
    5920:	clz	r3, r3
    5924:	lsr	r3, r3, #5
    5928:	str	r3, [r0, #44]	; 0x2c
    592c:	mov	r3, r5
    5930:	mov	r2, #6
    5934:	mov	r1, #4
    5938:	mov	r0, r7
    593c:	bl	4934 <gen_bcmp>
    5940:	mov	r5, r0
    5944:	mov	r1, r0
    5948:	mov	r0, r6
    594c:	bl	3a30 <sf_gen_and>
    5950:	mov	r1, r4
    5954:	mov	r0, r5
    5958:	bl	3ac0 <sf_gen_or>
    595c:	mov	r1, #16
    5960:	mov	r0, #0
    5964:	bl	447c <gen_load_llrel>
    5968:	mov	r5, r0
    596c:	mov	r0, #208	; 0xd0
    5970:	bl	22d8 <newchunk>
    5974:	mov	r3, r0
    5978:	str	r8, [r0, #8]
    597c:	str	r0, [r3, #96]	; 0x60
    5980:	mov	r2, #4
    5984:	str	r2, [r0, #20]
    5988:	str	r5, [r0, #4]
    598c:	ldr	r2, [r0, #44]	; 0x2c
    5990:	clz	r2, r2
    5994:	lsr	r2, r2, #5
    5998:	str	r2, [r0, #44]	; 0x2c
    599c:	mov	r1, r4
    59a0:	bl	3a30 <sf_gen_and>
    59a4:	b	57d4 <gen_wlanhostop+0x2a0>
    59a8:	mov	r3, r0
    59ac:	mov	r2, #6
    59b0:	mov	r1, #4
    59b4:	mov	r0, #1
    59b8:	bl	4934 <gen_bcmp>
    59bc:	mov	r4, r0
    59c0:	b	57d4 <gen_wlanhostop+0x2a0>
    59c4:	mov	r3, #12
    59c8:	str	r3, [sp]
    59cc:	mov	r3, #4
    59d0:	mov	r2, #16
    59d4:	mov	r1, #0
    59d8:	mov	r0, #1
    59dc:	bl	5508 <gen_mcmp>
    59e0:	mov	r4, r0
    59e4:	ldr	r3, [r0, #44]	; 0x2c
    59e8:	clz	r3, r3
    59ec:	lsr	r3, r3, #5
    59f0:	str	r3, [r0, #44]	; 0x2c
    59f4:	mov	r6, #240	; 0xf0
    59f8:	str	r6, [sp]
    59fc:	mov	r3, #192	; 0xc0
    5a00:	mov	r2, #16
    5a04:	mov	r1, #0
    5a08:	mov	r0, #1
    5a0c:	bl	5508 <gen_mcmp>
    5a10:	mov	r7, r0
    5a14:	ldr	r3, [r0, #44]	; 0x2c
    5a18:	clz	r3, r3
    5a1c:	lsr	r3, r3, #5
    5a20:	str	r3, [r0, #44]	; 0x2c
    5a24:	str	r6, [sp]
    5a28:	mov	r3, #208	; 0xd0
    5a2c:	mov	r2, #16
    5a30:	mov	r1, #0
    5a34:	mov	r0, #1
    5a38:	bl	5508 <gen_mcmp>
    5a3c:	mov	r6, r0
    5a40:	ldr	r3, [r0, #44]	; 0x2c
    5a44:	clz	r3, r3
    5a48:	lsr	r3, r3, #5
    5a4c:	str	r3, [r0, #44]	; 0x2c
    5a50:	mov	r1, r0
    5a54:	mov	r0, r7
    5a58:	bl	3a30 <sf_gen_and>
    5a5c:	mov	r1, r6
    5a60:	mov	r0, r4
    5a64:	bl	3ac0 <sf_gen_or>
    5a68:	mov	r3, r5
    5a6c:	mov	r2, #6
    5a70:	mov	r1, #10
    5a74:	mov	r0, #1
    5a78:	bl	4934 <gen_bcmp>
    5a7c:	mov	r4, r0
    5a80:	mov	r1, r0
    5a84:	mov	r0, r6
    5a88:	bl	3a30 <sf_gen_and>
    5a8c:	b	57d4 <gen_wlanhostop+0x2a0>
    5a90:	mov	r3, #12
    5a94:	str	r3, [sp]
    5a98:	mov	r3, #4
    5a9c:	mov	r2, #16
    5aa0:	mov	r1, #0
    5aa4:	mov	r0, #1
    5aa8:	bl	5508 <gen_mcmp>
    5aac:	mov	r6, r0
    5ab0:	ldr	r3, [r0, #44]	; 0x2c
    5ab4:	clz	r3, r3
    5ab8:	lsr	r3, r3, #5
    5abc:	str	r3, [r0, #44]	; 0x2c
    5ac0:	mov	r3, r5
    5ac4:	mov	r2, #6
    5ac8:	mov	r1, #16
    5acc:	mov	r0, #1
    5ad0:	bl	4934 <gen_bcmp>
    5ad4:	mov	r4, r0
    5ad8:	mov	r1, r0
    5adc:	mov	r0, r6
    5ae0:	bl	3a30 <sf_gen_and>
    5ae4:	b	57d4 <gen_wlanhostop+0x2a0>
    5ae8:	mov	r3, #3
    5aec:	str	r3, [sp]
    5af0:	mov	r2, #16
    5af4:	mov	r1, #1
    5af8:	mov	r0, r1
    5afc:	bl	5508 <gen_mcmp>
    5b00:	mov	r6, r0
    5b04:	mov	r3, r5
    5b08:	mov	r2, #6
    5b0c:	mov	r1, #24
    5b10:	mov	r0, #1
    5b14:	bl	4934 <gen_bcmp>
    5b18:	mov	r4, r0
    5b1c:	mov	r1, r0
    5b20:	mov	r0, r6
    5b24:	bl	3a30 <sf_gen_and>
    5b28:	b	57d4 <gen_wlanhostop+0x2a0>
    5b2c:	mov	r1, #1
    5b30:	bl	5534 <gen_wlanhostop>
    5b34:	mov	r6, r0
    5b38:	mov	r1, #2
    5b3c:	mov	r0, r5
    5b40:	bl	5534 <gen_wlanhostop>
    5b44:	mov	r4, r0
    5b48:	mov	r1, r0
    5b4c:	mov	r0, r6
    5b50:	bl	3a30 <sf_gen_and>
    5b54:	b	57d4 <gen_wlanhostop+0x2a0>
    5b58:	mov	r1, #1
    5b5c:	bl	5534 <gen_wlanhostop>
    5b60:	mov	r6, r0
    5b64:	mov	r1, #2
    5b68:	mov	r0, r5
    5b6c:	bl	5534 <gen_wlanhostop>
    5b70:	mov	r4, r0
    5b74:	mov	r1, r0
    5b78:	mov	r0, r6
    5b7c:	bl	3ac0 <sf_gen_or>
    5b80:	b	57d4 <gen_wlanhostop+0x2a0>
    5b84:	bl	ebc <abort@plt>

00005b88 <sf_gen_ecode>:
    5b88:	strd	r4, [sp, #-16]!
    5b8c:	str	r6, [sp, #8]
    5b90:	str	lr, [sp, #12]
    5b94:	sub	sp, sp, #8
    5b98:	str	r1, [sp, #4]
    5b9c:	ubfx	r5, r1, #16, #8
    5ba0:	uxtb	r1, r1
    5ba4:	cmp	r1, #1
    5ba8:	bhi	5cf4 <sf_gen_ecode+0x16c>
    5bac:	mov	r4, r0
    5bb0:	ldrb	r3, [sp, #5]
    5bb4:	cmp	r3, #1
    5bb8:	bne	5cf4 <sf_gen_ecode+0x16c>
    5bbc:	ldr	r3, [pc, #316]	; 5d00 <sf_gen_ecode+0x178>
    5bc0:	add	r3, pc, r3
    5bc4:	ldr	r3, [r3, #852]	; 0x354
    5bc8:	cmp	r3, #119	; 0x77
    5bcc:	beq	5c2c <sf_gen_ecode+0xa4>
    5bd0:	bgt	5c40 <sf_gen_ecode+0xb8>
    5bd4:	cmp	r3, #6
    5bd8:	beq	5cd4 <sf_gen_ecode+0x14c>
    5bdc:	ble	5bf8 <sf_gen_ecode+0x70>
    5be0:	cmp	r3, #10
    5be4:	bne	5c24 <sf_gen_ecode+0x9c>
    5be8:	mov	r1, r5
    5bec:	bl	4afc <gen_fhostop>
    5bf0:	mov	r4, r0
    5bf4:	b	5c0c <sf_gen_ecode+0x84>
    5bf8:	cmp	r3, #1
    5bfc:	bne	5cc8 <sf_gen_ecode+0x140>
    5c00:	mov	r1, r5
    5c04:	bl	4d78 <gen_ehostop>
    5c08:	mov	r4, r0
    5c0c:	mov	r0, r4
    5c10:	add	sp, sp, #8
    5c14:	ldrd	r4, [sp]
    5c18:	ldr	r6, [sp, #8]
    5c1c:	add	sp, sp, #12
    5c20:	pop	{pc}		; (ldr pc, [sp], #4)
    5c24:	cmp	r3, #105	; 0x69
    5c28:	bne	5cc8 <sf_gen_ecode+0x140>
    5c2c:	mov	r1, r5
    5c30:	mov	r0, r4
    5c34:	bl	5534 <gen_wlanhostop>
    5c38:	mov	r4, r0
    5c3c:	b	5c0c <sf_gen_ecode+0x84>
    5c40:	cmp	r3, #127	; 0x7f
    5c44:	beq	5c2c <sf_gen_ecode+0xa4>
    5c48:	bgt	5cb8 <sf_gen_ecode+0x130>
    5c4c:	cmp	r3, #122	; 0x7a
    5c50:	beq	5ce4 <sf_gen_ecode+0x15c>
    5c54:	cmp	r3, #123	; 0x7b
    5c58:	bne	5cc8 <sf_gen_ecode+0x140>
    5c5c:	ldr	r3, [pc, #160]	; 5d04 <sf_gen_ecode+0x17c>
    5c60:	add	r3, pc, r3
    5c64:	ldr	r3, [r3, #892]	; 0x37c
    5c68:	cmp	r3, #0
    5c6c:	beq	5cf4 <sf_gen_ecode+0x16c>
    5c70:	mov	r3, #65280	; 0xff00
    5c74:	mov	r2, #8
    5c78:	mov	r1, #4
    5c7c:	mov	r0, #1
    5c80:	bl	4908 <gen_cmp>
    5c84:	mov	r6, r0
    5c88:	ldr	r3, [r0, #44]	; 0x2c
    5c8c:	clz	r3, r3
    5c90:	lsr	r3, r3, #5
    5c94:	str	r3, [r0, #44]	; 0x2c
    5c98:	mov	r1, r5
    5c9c:	mov	r0, r4
    5ca0:	bl	4d78 <gen_ehostop>
    5ca4:	mov	r4, r0
    5ca8:	mov	r1, r0
    5cac:	mov	r0, r6
    5cb0:	bl	3a30 <sf_gen_and>
    5cb4:	b	5c0c <sf_gen_ecode+0x84>
    5cb8:	cmp	r3, #163	; 0xa3
    5cbc:	beq	5c2c <sf_gen_ecode+0xa4>
    5cc0:	cmp	r3, #192	; 0xc0
    5cc4:	beq	5c2c <sf_gen_ecode+0xa4>
    5cc8:	ldr	r0, [pc, #56]	; 5d08 <sf_gen_ecode+0x180>
    5ccc:	add	r0, pc, r0
    5cd0:	bl	229c <sf_bpf_error>
    5cd4:	mov	r1, r5
    5cd8:	bl	4bd0 <gen_thostop>
    5cdc:	mov	r4, r0
    5ce0:	b	5c0c <sf_gen_ecode+0x84>
    5ce4:	mov	r1, r5
    5ce8:	bl	4ca4 <gen_ipfchostop>
    5cec:	mov	r4, r0
    5cf0:	b	5c0c <sf_gen_ecode+0x84>
    5cf4:	ldr	r0, [pc, #16]	; 5d0c <sf_gen_ecode+0x184>
    5cf8:	add	r0, pc, r0
    5cfc:	bl	229c <sf_bpf_error>
    5d00:	.word	0x0002b7a0
    5d04:	.word	0x0002b700
    5d08:	.word	0x0000dd9c
    5d0c:	.word	0x0000ddcc

00005d10 <gen_portrangeatom>:
    5d10:	strd	r4, [sp, #-16]!
    5d14:	str	r6, [sp, #8]
    5d18:	str	lr, [sp, #12]
    5d1c:	sub	sp, sp, #16
    5d20:	mov	r5, r0
    5d24:	cmp	r1, r2
    5d28:	movge	r3, r1
    5d2c:	movlt	r3, r2
    5d30:	movge	r1, r2
    5d34:	mov	r4, r3
    5d38:	str	r1, [sp, #8]
    5d3c:	mov	r3, #0
    5d40:	str	r3, [sp, #4]
    5d44:	mov	r3, #48	; 0x30
    5d48:	str	r3, [sp]
    5d4c:	mvn	r3, #0
    5d50:	mov	r2, #8
    5d54:	mov	r1, r0
    5d58:	mov	r0, #5
    5d5c:	bl	4738 <gen_ncmp>
    5d60:	mov	r6, r0
    5d64:	str	r4, [sp, #8]
    5d68:	mov	r3, #1
    5d6c:	str	r3, [sp, #4]
    5d70:	mov	r3, #32
    5d74:	str	r3, [sp]
    5d78:	mvn	r3, #0
    5d7c:	mov	r2, #8
    5d80:	mov	r1, r5
    5d84:	mov	r0, #5
    5d88:	bl	4738 <gen_ncmp>
    5d8c:	mov	r4, r0
    5d90:	mov	r1, r0
    5d94:	mov	r0, r6
    5d98:	bl	3a30 <sf_gen_and>
    5d9c:	mov	r0, r4
    5da0:	add	sp, sp, #16
    5da4:	ldrd	r4, [sp]
    5da8:	ldr	r6, [sp, #8]
    5dac:	add	sp, sp, #12
    5db0:	pop	{pc}		; (ldr pc, [sp], #4)

00005db4 <sf_gen_portrangeop>:
    5db4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5db8:	strd	r6, [sp, #8]
    5dbc:	str	r8, [sp, #16]
    5dc0:	str	lr, [sp, #20]
    5dc4:	mov	r6, r0
    5dc8:	mov	r7, r1
    5dcc:	mov	r4, r3
    5dd0:	mov	r3, r2
    5dd4:	mov	r2, #16
    5dd8:	mov	r1, #9
    5ddc:	mov	r0, #3
    5de0:	bl	4908 <gen_cmp>
    5de4:	mov	r8, r0
    5de8:	bl	46d0 <gen_ipfrag>
    5dec:	mov	r5, r0
    5df0:	mov	r1, r0
    5df4:	mov	r0, r8
    5df8:	bl	3a30 <sf_gen_and>
    5dfc:	cmp	r4, #4
    5e00:	addls	pc, pc, r4, lsl #2
    5e04:	b	5edc <sf_gen_portrangeop+0x128>
    5e08:	b	5e6c <sf_gen_portrangeop+0xb8>
    5e0c:	b	5e1c <sf_gen_portrangeop+0x68>
    5e10:	b	5e54 <sf_gen_portrangeop+0xa0>
    5e14:	b	5e6c <sf_gen_portrangeop+0xb8>
    5e18:	b	5ea4 <sf_gen_portrangeop+0xf0>
    5e1c:	mov	r2, r7
    5e20:	mov	r1, r6
    5e24:	mov	r0, #0
    5e28:	bl	5d10 <gen_portrangeatom>
    5e2c:	mov	r4, r0
    5e30:	mov	r1, r4
    5e34:	mov	r0, r5
    5e38:	bl	3a30 <sf_gen_and>
    5e3c:	mov	r0, r4
    5e40:	ldrd	r4, [sp]
    5e44:	ldrd	r6, [sp, #8]
    5e48:	ldr	r8, [sp, #16]
    5e4c:	add	sp, sp, #20
    5e50:	pop	{pc}		; (ldr pc, [sp], #4)
    5e54:	mov	r2, r7
    5e58:	mov	r1, r6
    5e5c:	mov	r0, #2
    5e60:	bl	5d10 <gen_portrangeatom>
    5e64:	mov	r4, r0
    5e68:	b	5e30 <sf_gen_portrangeop+0x7c>
    5e6c:	mov	r2, r7
    5e70:	mov	r1, r6
    5e74:	mov	r0, #0
    5e78:	bl	5d10 <gen_portrangeatom>
    5e7c:	mov	r8, r0
    5e80:	mov	r2, r7
    5e84:	mov	r1, r6
    5e88:	mov	r0, #2
    5e8c:	bl	5d10 <gen_portrangeatom>
    5e90:	mov	r4, r0
    5e94:	mov	r1, r0
    5e98:	mov	r0, r8
    5e9c:	bl	3ac0 <sf_gen_or>
    5ea0:	b	5e30 <sf_gen_portrangeop+0x7c>
    5ea4:	mov	r2, r7
    5ea8:	mov	r1, r6
    5eac:	mov	r0, #0
    5eb0:	bl	5d10 <gen_portrangeatom>
    5eb4:	mov	r8, r0
    5eb8:	mov	r2, r7
    5ebc:	mov	r1, r6
    5ec0:	mov	r0, #2
    5ec4:	bl	5d10 <gen_portrangeatom>
    5ec8:	mov	r4, r0
    5ecc:	mov	r1, r0
    5ed0:	mov	r0, r8
    5ed4:	bl	3a30 <sf_gen_and>
    5ed8:	b	5e30 <sf_gen_portrangeop+0x7c>
    5edc:	bl	ebc <abort@plt>

00005ee0 <gen_portrangeatom6>:
    5ee0:	strd	r4, [sp, #-16]!
    5ee4:	str	r6, [sp, #8]
    5ee8:	str	lr, [sp, #12]
    5eec:	sub	sp, sp, #16
    5ef0:	mov	r5, r0
    5ef4:	cmp	r1, r2
    5ef8:	movge	r3, r1
    5efc:	movlt	r3, r2
    5f00:	movge	r1, r2
    5f04:	mov	r4, r3
    5f08:	str	r1, [sp, #8]
    5f0c:	mov	r3, #0
    5f10:	str	r3, [sp, #4]
    5f14:	mov	r3, #48	; 0x30
    5f18:	str	r3, [sp]
    5f1c:	mvn	r3, #0
    5f20:	mov	r2, #8
    5f24:	mov	r1, r0
    5f28:	mov	r0, #6
    5f2c:	bl	4738 <gen_ncmp>
    5f30:	mov	r6, r0
    5f34:	str	r4, [sp, #8]
    5f38:	mov	r3, #1
    5f3c:	str	r3, [sp, #4]
    5f40:	mov	r3, #32
    5f44:	str	r3, [sp]
    5f48:	mvn	r3, #0
    5f4c:	mov	r2, #8
    5f50:	mov	r1, r5
    5f54:	mov	r0, #6
    5f58:	bl	4738 <gen_ncmp>
    5f5c:	mov	r4, r0
    5f60:	mov	r1, r0
    5f64:	mov	r0, r6
    5f68:	bl	3a30 <sf_gen_and>
    5f6c:	mov	r0, r4
    5f70:	add	sp, sp, #16
    5f74:	ldrd	r4, [sp]
    5f78:	ldr	r6, [sp, #8]
    5f7c:	add	sp, sp, #12
    5f80:	pop	{pc}		; (ldr pc, [sp], #4)

00005f84 <sf_gen_portrangeop6>:
    5f84:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5f88:	strd	r6, [sp, #8]
    5f8c:	str	r8, [sp, #16]
    5f90:	str	lr, [sp, #20]
    5f94:	mov	r5, r0
    5f98:	mov	r6, r1
    5f9c:	mov	r4, r3
    5fa0:	mov	r3, r2
    5fa4:	mov	r2, #16
    5fa8:	mov	r1, #6
    5fac:	mov	r0, #3
    5fb0:	bl	4908 <gen_cmp>
    5fb4:	mov	r7, r0
    5fb8:	cmp	r4, #4
    5fbc:	addls	pc, pc, r4, lsl #2
    5fc0:	b	6098 <sf_gen_portrangeop6+0x114>
    5fc4:	b	6028 <sf_gen_portrangeop6+0xa4>
    5fc8:	b	5fd8 <sf_gen_portrangeop6+0x54>
    5fcc:	b	6010 <sf_gen_portrangeop6+0x8c>
    5fd0:	b	6028 <sf_gen_portrangeop6+0xa4>
    5fd4:	b	6060 <sf_gen_portrangeop6+0xdc>
    5fd8:	mov	r2, r6
    5fdc:	mov	r1, r5
    5fe0:	mov	r0, #0
    5fe4:	bl	5ee0 <gen_portrangeatom6>
    5fe8:	mov	r4, r0
    5fec:	mov	r1, r4
    5ff0:	mov	r0, r7
    5ff4:	bl	3a30 <sf_gen_and>
    5ff8:	mov	r0, r4
    5ffc:	ldrd	r4, [sp]
    6000:	ldrd	r6, [sp, #8]
    6004:	ldr	r8, [sp, #16]
    6008:	add	sp, sp, #20
    600c:	pop	{pc}		; (ldr pc, [sp], #4)
    6010:	mov	r2, r6
    6014:	mov	r1, r5
    6018:	mov	r0, #2
    601c:	bl	5ee0 <gen_portrangeatom6>
    6020:	mov	r4, r0
    6024:	b	5fec <sf_gen_portrangeop6+0x68>
    6028:	mov	r2, r6
    602c:	mov	r1, r5
    6030:	mov	r0, #0
    6034:	bl	5ee0 <gen_portrangeatom6>
    6038:	mov	r8, r0
    603c:	mov	r2, r6
    6040:	mov	r1, r5
    6044:	mov	r0, #2
    6048:	bl	5ee0 <gen_portrangeatom6>
    604c:	mov	r4, r0
    6050:	mov	r1, r0
    6054:	mov	r0, r8
    6058:	bl	3ac0 <sf_gen_or>
    605c:	b	5fec <sf_gen_portrangeop6+0x68>
    6060:	mov	r2, r6
    6064:	mov	r1, r5
    6068:	mov	r0, #0
    606c:	bl	5ee0 <gen_portrangeatom6>
    6070:	mov	r8, r0
    6074:	mov	r2, r6
    6078:	mov	r1, r5
    607c:	mov	r0, #2
    6080:	bl	5ee0 <gen_portrangeatom6>
    6084:	mov	r4, r0
    6088:	mov	r1, r0
    608c:	mov	r0, r8
    6090:	bl	3a30 <sf_gen_and>
    6094:	b	5fec <sf_gen_portrangeop6+0x68>
    6098:	bl	ebc <abort@plt>

0000609c <sf_gen_relation>:
    609c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    60a0:	strd	r6, [sp, #8]
    60a4:	strd	r8, [sp, #16]
    60a8:	str	sl, [sp, #24]
    60ac:	str	lr, [sp, #28]
    60b0:	mov	r7, r0
    60b4:	mov	r6, r1
    60b8:	mov	r5, r2
    60bc:	mov	sl, r3
    60c0:	mov	r0, r2
    60c4:	bl	2428 <xfer_to_x>
    60c8:	mov	r8, r0
    60cc:	mov	r0, r6
    60d0:	bl	2458 <xfer_to_a>
    60d4:	mov	r9, r0
    60d8:	cmp	r7, #16
    60dc:	beq	6198 <sf_gen_relation+0xfc>
    60e0:	mov	r0, #208	; 0xd0
    60e4:	bl	22d8 <newchunk>
    60e8:	mov	r4, r0
    60ec:	orr	r7, r7, #13
    60f0:	str	r7, [r0, #8]
    60f4:	str	r0, [r4, #96]	; 0x60
    60f8:	cmp	sl, #0
    60fc:	bne	61d4 <sf_gen_relation+0x138>
    6100:	mov	r1, r9
    6104:	mov	r0, r8
    6108:	bl	3b54 <sf_append>
    610c:	mov	r1, r8
    6110:	ldr	r0, [r5, #4]
    6114:	bl	3b54 <sf_append>
    6118:	ldr	r1, [r5, #4]
    611c:	ldr	r0, [r6, #4]
    6120:	bl	3b54 <sf_append>
    6124:	ldr	r3, [r6, #4]
    6128:	str	r3, [r4, #4]
    612c:	ldr	r2, [r6, #8]
    6130:	ldr	r3, [pc, #192]	; 61f8 <sf_gen_relation+0x15c>
    6134:	add	r3, pc, r3
    6138:	add	r2, r3, r2, lsl #2
    613c:	mov	r1, #0
    6140:	str	r1, [r2, #788]	; 0x314
    6144:	ldr	r2, [r5, #8]
    6148:	add	r3, r3, r2, lsl #2
    614c:	str	r1, [r3, #788]	; 0x314
    6150:	ldr	r0, [r6]
    6154:	cmp	r0, r1
    6158:	beq	61e8 <sf_gen_relation+0x14c>
    615c:	ldr	r5, [r5]
    6160:	cmp	r5, r1
    6164:	beq	6174 <sf_gen_relation+0xd8>
    6168:	mov	r1, r5
    616c:	bl	3a30 <sf_gen_and>
    6170:	mov	r0, r5
    6174:	mov	r1, r4
    6178:	bl	3a30 <sf_gen_and>
    617c:	mov	r0, r4
    6180:	ldrd	r4, [sp]
    6184:	ldrd	r6, [sp, #8]
    6188:	ldrd	r8, [sp, #16]
    618c:	ldr	sl, [sp, #24]
    6190:	add	sp, sp, #28
    6194:	pop	{pc}		; (ldr pc, [sp], #4)
    6198:	mov	r0, #20
    619c:	bl	22d8 <newchunk>
    61a0:	mov	r7, r0
    61a4:	mov	r3, #28
    61a8:	str	r3, [r0]
    61ac:	mov	r0, #208	; 0xd0
    61b0:	bl	22d8 <newchunk>
    61b4:	mov	r4, r0
    61b8:	mov	r3, #21
    61bc:	str	r3, [r0, #8]
    61c0:	str	r0, [r4, #96]	; 0x60
    61c4:	mov	r1, r7
    61c8:	mov	r0, r9
    61cc:	bl	3b54 <sf_append>
    61d0:	b	60f8 <sf_gen_relation+0x5c>
    61d4:	ldr	r3, [r4, #44]	; 0x2c
    61d8:	clz	r3, r3
    61dc:	lsr	r3, r3, #5
    61e0:	str	r3, [r4, #44]	; 0x2c
    61e4:	b	6100 <sf_gen_relation+0x64>
    61e8:	ldr	r0, [r5]
    61ec:	cmp	r0, #0
    61f0:	beq	617c <sf_gen_relation+0xe0>
    61f4:	b	6174 <sf_gen_relation+0xd8>
    61f8:	.word	0x0002b22c

000061fc <sf_gen_loadlen>:
    61fc:	strd	r4, [sp, #-16]!
    6200:	str	r6, [sp, #8]
    6204:	str	lr, [sp, #12]
    6208:	bl	2488 <alloc_reg>
    620c:	mov	r6, r0
    6210:	mov	r0, #12
    6214:	bl	22d8 <newchunk>
    6218:	mov	r4, r0
    621c:	mov	r0, #20
    6220:	bl	22d8 <newchunk>
    6224:	mov	r5, r0
    6228:	mov	r3, #128	; 0x80
    622c:	str	r3, [r0]
    6230:	mov	r0, #20
    6234:	bl	22d8 <newchunk>
    6238:	mov	r3, #2
    623c:	str	r3, [r0]
    6240:	str	r0, [r5, #16]
    6244:	str	r6, [r0, #12]
    6248:	str	r5, [r4, #4]
    624c:	str	r6, [r4, #8]
    6250:	mov	r0, r4
    6254:	ldrd	r4, [sp]
    6258:	ldr	r6, [sp, #8]
    625c:	add	sp, sp, #12
    6260:	pop	{pc}		; (ldr pc, [sp], #4)

00006264 <sf_gen_loadi>:
    6264:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6268:	strd	r6, [sp, #8]
    626c:	str	r8, [sp, #16]
    6270:	str	lr, [sp, #20]
    6274:	mov	r7, r0
    6278:	mov	r0, #12
    627c:	bl	22d8 <newchunk>
    6280:	mov	r5, r0
    6284:	bl	2488 <alloc_reg>
    6288:	mov	r6, r0
    628c:	mov	r0, #20
    6290:	bl	22d8 <newchunk>
    6294:	mov	r4, r0
    6298:	mov	r3, #0
    629c:	str	r3, [r0]
    62a0:	str	r7, [r0, #12]
    62a4:	mov	r0, #20
    62a8:	bl	22d8 <newchunk>
    62ac:	mov	r3, #2
    62b0:	str	r3, [r0]
    62b4:	str	r0, [r4, #16]
    62b8:	str	r6, [r0, #12]
    62bc:	str	r4, [r5, #4]
    62c0:	str	r6, [r5, #8]
    62c4:	mov	r0, r5
    62c8:	ldrd	r4, [sp]
    62cc:	ldrd	r6, [sp, #8]
    62d0:	ldr	r8, [sp, #16]
    62d4:	add	sp, sp, #20
    62d8:	pop	{pc}		; (ldr pc, [sp], #4)

000062dc <sf_gen_neg>:
    62dc:	str	r4, [sp, #-8]!
    62e0:	str	lr, [sp, #4]
    62e4:	mov	r4, r0
    62e8:	bl	2458 <xfer_to_a>
    62ec:	mov	r1, r0
    62f0:	ldr	r0, [r4, #4]
    62f4:	bl	3b54 <sf_append>
    62f8:	mov	r0, #20
    62fc:	bl	22d8 <newchunk>
    6300:	mov	r1, r0
    6304:	mov	r3, #132	; 0x84
    6308:	str	r3, [r0]
    630c:	mov	r3, #0
    6310:	str	r3, [r0, #12]
    6314:	ldr	r0, [r4, #4]
    6318:	bl	3b54 <sf_append>
    631c:	mov	r0, #20
    6320:	bl	22d8 <newchunk>
    6324:	mov	r1, r0
    6328:	mov	r3, #2
    632c:	str	r3, [r0]
    6330:	ldr	r3, [r4, #8]
    6334:	str	r3, [r0, #12]
    6338:	ldr	r0, [r4, #4]
    633c:	bl	3b54 <sf_append>
    6340:	mov	r0, r4
    6344:	ldr	r4, [sp]
    6348:	add	sp, sp, #4
    634c:	pop	{pc}		; (ldr pc, [sp], #4)

00006350 <sf_gen_arth>:
    6350:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6354:	strd	r6, [sp, #8]
    6358:	str	r8, [sp, #16]
    635c:	str	lr, [sp, #20]
    6360:	mov	r6, r0
    6364:	mov	r4, r1
    6368:	mov	r5, r2
    636c:	mov	r0, r2
    6370:	bl	2428 <xfer_to_x>
    6374:	mov	r7, r0
    6378:	mov	r0, r4
    637c:	bl	2458 <xfer_to_a>
    6380:	mov	r8, r0
    6384:	mov	r0, #20
    6388:	bl	22d8 <newchunk>
    638c:	mov	r1, r0
    6390:	orr	r6, r6, #12
    6394:	str	r6, [r0]
    6398:	mov	r0, r8
    639c:	bl	3b54 <sf_append>
    63a0:	mov	r1, r8
    63a4:	mov	r0, r7
    63a8:	bl	3b54 <sf_append>
    63ac:	mov	r1, r7
    63b0:	ldr	r0, [r5, #4]
    63b4:	bl	3b54 <sf_append>
    63b8:	ldr	r1, [r5, #4]
    63bc:	ldr	r0, [r4, #4]
    63c0:	bl	3b54 <sf_append>
    63c4:	ldr	r2, [r4, #8]
    63c8:	ldr	r3, [pc, #92]	; 642c <sf_gen_arth+0xdc>
    63cc:	add	r3, pc, r3
    63d0:	add	r2, r3, r2, lsl #2
    63d4:	mov	r1, #0
    63d8:	str	r1, [r2, #788]	; 0x314
    63dc:	ldr	r2, [r5, #8]
    63e0:	add	r3, r3, r2, lsl #2
    63e4:	str	r1, [r3, #788]	; 0x314
    63e8:	mov	r0, #20
    63ec:	bl	22d8 <newchunk>
    63f0:	mov	r5, r0
    63f4:	mov	r3, #2
    63f8:	str	r3, [r0]
    63fc:	bl	2488 <alloc_reg>
    6400:	str	r0, [r5, #12]
    6404:	str	r0, [r4, #8]
    6408:	mov	r1, r5
    640c:	ldr	r0, [r4, #4]
    6410:	bl	3b54 <sf_append>
    6414:	mov	r0, r4
    6418:	ldrd	r4, [sp]
    641c:	ldrd	r6, [sp, #8]
    6420:	ldr	r8, [sp, #16]
    6424:	add	sp, sp, #20
    6428:	pop	{pc}		; (ldr pc, [sp], #4)
    642c:	.word	0x0002af94

00006430 <sf_gen_greater>:
    6430:	strd	r4, [sp, #-16]!
    6434:	str	r6, [sp, #8]
    6438:	str	lr, [sp, #12]
    643c:	mov	r5, r0
    6440:	mov	r0, #20
    6444:	bl	22d8 <newchunk>
    6448:	mov	r4, r0
    644c:	mov	r3, #128	; 0x80
    6450:	str	r3, [r0]
    6454:	mov	r0, #208	; 0xd0
    6458:	bl	22d8 <newchunk>
    645c:	mov	r3, r0
    6460:	mov	r2, #53	; 0x35
    6464:	str	r2, [r0, #8]
    6468:	str	r0, [r3, #96]	; 0x60
    646c:	str	r4, [r0, #4]
    6470:	str	r5, [r0, #20]
    6474:	ldrd	r4, [sp]
    6478:	ldr	r6, [sp, #8]
    647c:	add	sp, sp, #12
    6480:	pop	{pc}		; (ldr pc, [sp], #4)

00006484 <sf_gen_less>:
    6484:	strd	r4, [sp, #-16]!
    6488:	str	r6, [sp, #8]
    648c:	str	lr, [sp, #12]
    6490:	mov	r5, r0
    6494:	mov	r0, #20
    6498:	bl	22d8 <newchunk>
    649c:	mov	r4, r0
    64a0:	mov	r3, #128	; 0x80
    64a4:	str	r3, [r0]
    64a8:	mov	r0, #208	; 0xd0
    64ac:	bl	22d8 <newchunk>
    64b0:	mov	r3, r0
    64b4:	mov	r2, #37	; 0x25
    64b8:	str	r2, [r0, #8]
    64bc:	str	r0, [r3, #96]	; 0x60
    64c0:	str	r4, [r0, #4]
    64c4:	str	r5, [r0, #20]
    64c8:	ldr	r2, [r0, #44]	; 0x2c
    64cc:	clz	r2, r2
    64d0:	lsr	r2, r2, #5
    64d4:	str	r2, [r0, #44]	; 0x2c
    64d8:	ldrd	r4, [sp]
    64dc:	ldr	r6, [sp, #8]
    64e0:	add	sp, sp, #12
    64e4:	pop	{pc}		; (ldr pc, [sp], #4)

000064e8 <sf_gen_byteop>:
    64e8:	strd	r4, [sp, #-12]!
    64ec:	str	lr, [sp, #8]
    64f0:	sub	sp, sp, #20
    64f4:	mov	r4, r2
    64f8:	cmp	r0, #61	; 0x3d
    64fc:	beq	659c <sf_gen_byteop+0xb4>
    6500:	bgt	6538 <sf_gen_byteop+0x50>
    6504:	cmp	r0, #38	; 0x26
    6508:	beq	65c4 <sf_gen_byteop+0xdc>
    650c:	cmp	r0, #60	; 0x3c
    6510:	bne	6598 <sf_gen_byteop+0xb0>
    6514:	str	r2, [sp, #8]
    6518:	mov	r0, #1
    651c:	str	r0, [sp, #4]
    6520:	mov	r3, #48	; 0x30
    6524:	str	r3, [sp]
    6528:	mvn	r3, #0
    652c:	mov	r2, #16
    6530:	bl	4738 <gen_ncmp>
    6534:	b	6588 <sf_gen_byteop+0xa0>
    6538:	cmp	r0, #62	; 0x3e
    653c:	beq	65b0 <sf_gen_byteop+0xc8>
    6540:	cmp	r0, #124	; 0x7c
    6544:	bne	6598 <sf_gen_byteop+0xb0>
    6548:	mov	r0, #20
    654c:	bl	22d8 <newchunk>
    6550:	mov	r5, r0
    6554:	mov	r3, #68	; 0x44
    6558:	str	r3, [r0]
    655c:	str	r4, [r5, #12]
    6560:	mov	r0, #208	; 0xd0
    6564:	bl	22d8 <newchunk>
    6568:	mov	r3, #21
    656c:	str	r3, [r0, #8]
    6570:	str	r0, [r0, #96]	; 0x60
    6574:	str	r5, [r0, #4]
    6578:	ldr	r3, [r0, #44]	; 0x2c
    657c:	clz	r3, r3
    6580:	lsr	r3, r3, #5
    6584:	str	r3, [r0, #44]	; 0x2c
    6588:	add	sp, sp, #20
    658c:	ldrd	r4, [sp]
    6590:	add	sp, sp, #8
    6594:	pop	{pc}		; (ldr pc, [sp], #4)
    6598:	bl	ebc <abort@plt>
    659c:	mov	r3, r2
    65a0:	mov	r2, #16
    65a4:	mov	r0, #1
    65a8:	bl	4908 <gen_cmp>
    65ac:	b	6588 <sf_gen_byteop+0xa0>
    65b0:	mov	r3, r2
    65b4:	mov	r2, #16
    65b8:	mov	r0, #1
    65bc:	bl	5244 <gen_cmp_gt>
    65c0:	b	6588 <sf_gen_byteop+0xa0>
    65c4:	mov	r0, #20
    65c8:	bl	22d8 <newchunk>
    65cc:	mov	r5, r0
    65d0:	mov	r3, #84	; 0x54
    65d4:	str	r3, [r0]
    65d8:	b	655c <sf_gen_byteop+0x74>

000065dc <sf_gen_pf_ifname>:
    65dc:	str	r4, [sp, #-8]!
    65e0:	str	lr, [sp, #4]
    65e4:	ldr	r0, [pc, #4]	; 65f0 <sf_gen_pf_ifname+0x14>
    65e8:	add	r0, pc, r0
    65ec:	bl	229c <sf_bpf_error>
    65f0:	.word	0x0000d50c

000065f4 <sf_gen_pf_ruleset>:
    65f4:	str	r4, [sp, #-8]!
    65f8:	str	lr, [sp, #4]
    65fc:	ldr	r0, [pc, #4]	; 6608 <sf_gen_pf_ruleset+0x14>
    6600:	add	r0, pc, r0
    6604:	bl	229c <sf_bpf_error>
    6608:	.word	0x0000d51c

0000660c <sf_gen_pf_rnr>:
    660c:	str	r4, [sp, #-8]!
    6610:	str	lr, [sp, #4]
    6614:	ldr	r0, [pc, #4]	; 6620 <sf_gen_pf_rnr+0x14>
    6618:	add	r0, pc, r0
    661c:	bl	229c <sf_bpf_error>
    6620:	.word	0x0000d504

00006624 <sf_gen_pf_srnr>:
    6624:	str	r4, [sp, #-8]!
    6628:	str	lr, [sp, #4]
    662c:	ldr	r0, [pc, #4]	; 6638 <sf_gen_pf_srnr+0x14>
    6630:	add	r0, pc, r0
    6634:	bl	229c <sf_bpf_error>
    6638:	.word	0x0000d4ec

0000663c <sf_gen_pf_reason>:
    663c:	str	r4, [sp, #-8]!
    6640:	str	lr, [sp, #4]
    6644:	ldr	r0, [pc, #4]	; 6650 <sf_gen_pf_reason+0x14>
    6648:	add	r0, pc, r0
    664c:	bl	229c <sf_bpf_error>
    6650:	.word	0x0000d4d4

00006654 <sf_gen_pf_action>:
    6654:	str	r4, [sp, #-8]!
    6658:	str	lr, [sp, #4]
    665c:	ldr	r0, [pc, #4]	; 6668 <sf_gen_pf_action+0x14>
    6660:	add	r0, pc, r0
    6664:	bl	229c <sf_bpf_error>
    6668:	.word	0x0000d4bc

0000666c <sf_gen_p80211_type>:
    666c:	push	{lr}		; (str lr, [sp, #-4]!)
    6670:	sub	sp, sp, #12
    6674:	ldr	r2, [pc, #84]	; 66d0 <sf_gen_p80211_type+0x64>
    6678:	add	r2, pc, r2
    667c:	ldr	r2, [r2, #852]	; 0x354
    6680:	cmp	r2, #119	; 0x77
    6684:	beq	66b0 <sf_gen_p80211_type+0x44>
    6688:	ble	66a8 <sf_gen_p80211_type+0x3c>
    668c:	cmp	r2, #127	; 0x7f
    6690:	beq	66b0 <sf_gen_p80211_type+0x44>
    6694:	cmp	r2, #163	; 0xa3
    6698:	beq	66b0 <sf_gen_p80211_type+0x44>
    669c:	ldr	r0, [pc, #48]	; 66d4 <sf_gen_p80211_type+0x68>
    66a0:	add	r0, pc, r0
    66a4:	bl	229c <sf_bpf_error>
    66a8:	cmp	r2, #105	; 0x69
    66ac:	bne	669c <sf_gen_p80211_type+0x30>
    66b0:	str	r1, [sp]
    66b4:	mov	r3, r0
    66b8:	mov	r2, #16
    66bc:	mov	r1, #0
    66c0:	mov	r0, #1
    66c4:	bl	5508 <gen_mcmp>
    66c8:	add	sp, sp, #12
    66cc:	pop	{pc}		; (ldr pc, [sp], #4)
    66d0:	.word	0x0002ace8
    66d4:	.word	0x0000d4b4

000066d8 <sf_gen_p80211_fcdir>:
    66d8:	push	{lr}		; (str lr, [sp, #-4]!)
    66dc:	sub	sp, sp, #12
    66e0:	ldr	r2, [pc, #88]	; 6740 <sf_gen_p80211_fcdir+0x68>
    66e4:	add	r2, pc, r2
    66e8:	ldr	r2, [r2, #852]	; 0x354
    66ec:	cmp	r2, #119	; 0x77
    66f0:	beq	671c <sf_gen_p80211_fcdir+0x44>
    66f4:	ble	6714 <sf_gen_p80211_fcdir+0x3c>
    66f8:	cmp	r2, #127	; 0x7f
    66fc:	beq	671c <sf_gen_p80211_fcdir+0x44>
    6700:	cmp	r2, #163	; 0xa3
    6704:	beq	671c <sf_gen_p80211_fcdir+0x44>
    6708:	ldr	r0, [pc, #52]	; 6744 <sf_gen_p80211_fcdir+0x6c>
    670c:	add	r0, pc, r0
    6710:	bl	229c <sf_bpf_error>
    6714:	cmp	r2, #105	; 0x69
    6718:	bne	6708 <sf_gen_p80211_fcdir+0x30>
    671c:	mov	r3, #3
    6720:	str	r3, [sp]
    6724:	mov	r3, r0
    6728:	mov	r2, #16
    672c:	mov	r1, #1
    6730:	mov	r0, r1
    6734:	bl	5508 <gen_mcmp>
    6738:	add	sp, sp, #12
    673c:	pop	{pc}		; (ldr pc, [sp], #4)
    6740:	.word	0x0002ac7c
    6744:	.word	0x0000d47c

00006748 <sf_gen_acode>:
    6748:	push	{lr}		; (str lr, [sp, #-4]!)
    674c:	sub	sp, sp, #12
    6750:	str	r1, [sp, #4]
    6754:	ldr	r3, [pc, #84]	; 67b0 <sf_gen_acode+0x68>
    6758:	add	r3, pc, r3
    675c:	ldr	r3, [r3, #852]	; 0x354
    6760:	cmp	r3, #7
    6764:	beq	6770 <sf_gen_acode+0x28>
    6768:	cmp	r3, #129	; 0x81
    676c:	bne	67a4 <sf_gen_acode+0x5c>
    6770:	ldrb	r3, [sp, #4]
    6774:	cmp	r3, #1
    6778:	bhi	6798 <sf_gen_acode+0x50>
    677c:	ldrb	r3, [sp, #5]
    6780:	cmp	r3, #1
    6784:	bne	6798 <sf_gen_acode+0x50>
    6788:	ldrb	r1, [sp, #6]
    678c:	bl	4e68 <gen_ahostop>
    6790:	add	sp, sp, #12
    6794:	pop	{pc}		; (ldr pc, [sp], #4)
    6798:	ldr	r0, [pc, #20]	; 67b4 <sf_gen_acode+0x6c>
    679c:	add	r0, pc, r0
    67a0:	bl	229c <sf_bpf_error>
    67a4:	ldr	r0, [pc, #12]	; 67b8 <sf_gen_acode+0x70>
    67a8:	add	r0, pc, r0
    67ac:	bl	229c <sf_bpf_error>
    67b0:	.word	0x0002ac08
    67b4:	.word	0x0000d420
    67b8:	.word	0x0000d440

000067bc <sf_gen_vlan>:
    67bc:	strd	r4, [sp, #-16]!
    67c0:	str	r6, [sp, #8]
    67c4:	str	lr, [sp, #12]
    67c8:	sub	sp, sp, #8
    67cc:	ldr	r3, [pc, #224]	; 68b4 <sf_gen_vlan+0xf8>
    67d0:	add	r3, pc, r3
    67d4:	ldr	r3, [r3, #4]
    67d8:	cmp	r3, #0
    67dc:	bne	6868 <sf_gen_vlan+0xac>
    67e0:	mov	r6, r0
    67e4:	ldr	r3, [pc, #204]	; 68b8 <sf_gen_vlan+0xfc>
    67e8:	add	r3, pc, r3
    67ec:	ldr	r1, [r3, #948]	; 0x3b4
    67f0:	ldr	r2, [pc, #196]	; 68bc <sf_gen_vlan+0x100>
    67f4:	add	r2, pc, r2
    67f8:	str	r1, [r2]
    67fc:	ldr	r1, [r3, #852]	; 0x354
    6800:	cmp	r1, #1
    6804:	bne	68a8 <sf_gen_vlan+0xec>
    6808:	ldr	r3, [pc, #176]	; 68c0 <sf_gen_vlan+0x104>
    680c:	add	r3, pc, r3
    6810:	ldr	r4, [r3, #944]	; 0x3b0
    6814:	mov	r3, #33024	; 0x8100
    6818:	mov	r2, #8
    681c:	mov	r1, r4
    6820:	mov	r0, #1
    6824:	bl	4908 <gen_cmp>
    6828:	mov	r5, r0
    682c:	cmp	r6, #0
    6830:	bge	6874 <sf_gen_vlan+0xb8>
    6834:	ldr	r3, [pc, #136]	; 68c4 <sf_gen_vlan+0x108>
    6838:	add	r3, pc, r3
    683c:	ldr	r2, [r3, #940]	; 0x3ac
    6840:	add	r2, r2, #4
    6844:	str	r2, [r3, #940]	; 0x3ac
    6848:	add	r4, r4, #4
    684c:	str	r4, [r3, #944]	; 0x3b0
    6850:	mov	r0, r5
    6854:	add	sp, sp, #8
    6858:	ldrd	r4, [sp]
    685c:	ldr	r6, [sp, #8]
    6860:	add	sp, sp, #12
    6864:	pop	{pc}		; (ldr pc, [sp], #4)
    6868:	ldr	r0, [pc, #88]	; 68c8 <sf_gen_vlan+0x10c>
    686c:	add	r0, pc, r0
    6870:	bl	229c <sf_bpf_error>
    6874:	movw	r3, #4095	; 0xfff
    6878:	str	r3, [sp]
    687c:	mov	r3, r6
    6880:	mov	r2, #8
    6884:	mov	r1, #0
    6888:	mov	r0, #2
    688c:	bl	5508 <gen_mcmp>
    6890:	mov	r6, r0
    6894:	mov	r1, r0
    6898:	mov	r0, r5
    689c:	bl	3a30 <sf_gen_and>
    68a0:	mov	r5, r6
    68a4:	b	6834 <sf_gen_vlan+0x78>
    68a8:	ldr	r0, [pc, #28]	; 68cc <sf_gen_vlan+0x110>
    68ac:	add	r0, pc, r0
    68b0:	bl	229c <sf_bpf_error>
    68b4:	.word	0x0002aaa0
    68b8:	.word	0x0002ab78
    68bc:	.word	0x0002aa7c
    68c0:	.word	0x0002ab54
    68c4:	.word	0x0002ab28
    68c8:	.word	0x0000d39c
    68cc:	.word	0x0000d378

000068d0 <sf_gen_atmfield_code>:
    68d0:	push	{lr}		; (str lr, [sp, #-4]!)
    68d4:	sub	sp, sp, #20
    68d8:	sub	r0, r0, #51	; 0x33
    68dc:	cmp	r0, #4
    68e0:	addls	pc, pc, r0, lsl #2
    68e4:	b	6a8c <sf_gen_atmfield_code+0x1bc>
    68e8:	b	68fc <sf_gen_atmfield_code+0x2c>
    68ec:	b	6958 <sf_gen_atmfield_code+0x88>
    68f0:	b	69b4 <sf_gen_atmfield_code+0xe4>
    68f4:	b	69f4 <sf_gen_atmfield_code+0x124>
    68f8:	b	6a30 <sf_gen_atmfield_code+0x160>
    68fc:	ldr	r0, [pc, #396]	; 6a90 <sf_gen_atmfield_code+0x1c0>
    6900:	add	r0, pc, r0
    6904:	ldr	r0, [r0, #888]	; 0x378
    6908:	cmp	r0, #0
    690c:	beq	6948 <sf_gen_atmfield_code+0x78>
    6910:	ldr	r0, [pc, #380]	; 6a94 <sf_gen_atmfield_code+0x1c4>
    6914:	add	r0, pc, r0
    6918:	ldr	r0, [r0, #896]	; 0x380
    691c:	cmn	r0, #1
    6920:	beq	6954 <sf_gen_atmfield_code+0x84>
    6924:	str	r1, [sp, #8]
    6928:	str	r3, [sp, #4]
    692c:	str	r2, [sp]
    6930:	mvn	r3, #0
    6934:	mov	r2, #16
    6938:	mov	r1, r0
    693c:	mov	r0, #1
    6940:	bl	4738 <gen_ncmp>
    6944:	b	69e8 <sf_gen_atmfield_code+0x118>
    6948:	ldr	r0, [pc, #328]	; 6a98 <sf_gen_atmfield_code+0x1c8>
    694c:	add	r0, pc, r0
    6950:	bl	229c <sf_bpf_error>
    6954:	bl	ebc <abort@plt>
    6958:	ldr	r0, [pc, #316]	; 6a9c <sf_gen_atmfield_code+0x1cc>
    695c:	add	r0, pc, r0
    6960:	ldr	r0, [r0, #888]	; 0x378
    6964:	cmp	r0, #0
    6968:	beq	69a4 <sf_gen_atmfield_code+0xd4>
    696c:	ldr	r0, [pc, #300]	; 6aa0 <sf_gen_atmfield_code+0x1d0>
    6970:	add	r0, pc, r0
    6974:	ldr	r0, [r0, #900]	; 0x384
    6978:	cmn	r0, #1
    697c:	beq	69b0 <sf_gen_atmfield_code+0xe0>
    6980:	str	r1, [sp, #8]
    6984:	str	r3, [sp, #4]
    6988:	str	r2, [sp]
    698c:	mvn	r3, #0
    6990:	mov	r2, #8
    6994:	mov	r1, r0
    6998:	mov	r0, #1
    699c:	bl	4738 <gen_ncmp>
    69a0:	b	69e8 <sf_gen_atmfield_code+0x118>
    69a4:	ldr	r0, [pc, #248]	; 6aa4 <sf_gen_atmfield_code+0x1d4>
    69a8:	add	r0, pc, r0
    69ac:	bl	229c <sf_bpf_error>
    69b0:	bl	ebc <abort@plt>
    69b4:	ldr	r0, [pc, #236]	; 6aa8 <sf_gen_atmfield_code+0x1d8>
    69b8:	add	r0, pc, r0
    69bc:	ldr	r0, [r0, #904]	; 0x388
    69c0:	cmn	r0, #1
    69c4:	beq	69f0 <sf_gen_atmfield_code+0x120>
    69c8:	str	r1, [sp, #8]
    69cc:	str	r3, [sp, #4]
    69d0:	str	r2, [sp]
    69d4:	mov	r3, #15
    69d8:	mov	r2, #16
    69dc:	mov	r1, r0
    69e0:	mov	r0, #1
    69e4:	bl	4738 <gen_ncmp>
    69e8:	add	sp, sp, #20
    69ec:	pop	{pc}		; (ldr pc, [sp], #4)
    69f0:	bl	ebc <abort@plt>
    69f4:	ldr	r0, [pc, #176]	; 6aac <sf_gen_atmfield_code+0x1dc>
    69f8:	add	r0, pc, r0
    69fc:	ldr	r0, [r0, #908]	; 0x38c
    6a00:	cmn	r0, #1
    6a04:	beq	6a2c <sf_gen_atmfield_code+0x15c>
    6a08:	str	r1, [sp, #8]
    6a0c:	str	r3, [sp, #4]
    6a10:	str	r2, [sp]
    6a14:	mvn	r3, #0
    6a18:	mov	r2, #16
    6a1c:	add	r1, r0, #5
    6a20:	mov	r0, #1
    6a24:	bl	4738 <gen_ncmp>
    6a28:	b	69e8 <sf_gen_atmfield_code+0x118>
    6a2c:	bl	ebc <abort@plt>
    6a30:	ldr	r0, [pc, #120]	; 6ab0 <sf_gen_atmfield_code+0x1e0>
    6a34:	add	r0, pc, r0
    6a38:	ldr	r0, [r0, #888]	; 0x378
    6a3c:	cmp	r0, #0
    6a40:	beq	6a7c <sf_gen_atmfield_code+0x1ac>
    6a44:	ldr	r0, [pc, #104]	; 6ab4 <sf_gen_atmfield_code+0x1e4>
    6a48:	add	r0, pc, r0
    6a4c:	ldr	r0, [r0, #904]	; 0x388
    6a50:	cmn	r0, #1
    6a54:	beq	6a88 <sf_gen_atmfield_code+0x1b8>
    6a58:	str	r1, [sp, #8]
    6a5c:	str	r3, [sp, #4]
    6a60:	str	r2, [sp]
    6a64:	mvn	r3, #0
    6a68:	mov	r2, #16
    6a6c:	mov	r1, r0
    6a70:	mov	r0, #1
    6a74:	bl	4738 <gen_ncmp>
    6a78:	b	69e8 <sf_gen_atmfield_code+0x118>
    6a7c:	ldr	r0, [pc, #52]	; 6ab8 <sf_gen_atmfield_code+0x1e8>
    6a80:	add	r0, pc, r0
    6a84:	bl	229c <sf_bpf_error>
    6a88:	bl	ebc <abort@plt>
    6a8c:	bl	ebc <abort@plt>
    6a90:	.word	0x0002aa60
    6a94:	.word	0x0002aa4c
    6a98:	.word	0x0000d300
    6a9c:	.word	0x0002aa04
    6aa0:	.word	0x0002a9f0
    6aa4:	.word	0x0000d2c4
    6aa8:	.word	0x0002a9a8
    6aac:	.word	0x0002a968
    6ab0:	.word	0x0002a92c
    6ab4:	.word	0x0002a918
    6ab8:	.word	0x0000d20c

00006abc <gen_linktype>:
    6abc:	strd	r4, [sp, #-20]!	; 0xffffffec
    6ac0:	strd	r6, [sp, #8]
    6ac4:	str	lr, [sp, #16]
    6ac8:	sub	sp, sp, #12
    6acc:	mov	r4, r0
    6ad0:	ldr	r3, [pc, #3544]	; 78b0 <gen_linktype+0xdf4>
    6ad4:	add	r3, pc, r3
    6ad8:	ldr	r3, [r3, #4]
    6adc:	cmp	r3, #0
    6ae0:	beq	6bc4 <gen_linktype+0x108>
    6ae4:	cmp	r0, #87	; 0x57
    6ae8:	beq	6b04 <gen_linktype+0x48>
    6aec:	ble	6b50 <gen_linktype+0x94>
    6af0:	cmp	r0, #2048	; 0x800
    6af4:	beq	6b58 <gen_linktype+0x9c>
    6af8:	movw	r3, #34525	; 0x86dd
    6afc:	cmp	r0, r3
    6b00:	bne	6bb8 <gen_linktype+0xfc>
    6b04:	mov	r3, #1
    6b08:	str	r3, [sp]
    6b0c:	mov	r2, #16
    6b10:	mvn	r1, #1
    6b14:	mov	r0, #3
    6b18:	bl	5508 <gen_mcmp>
    6b1c:	mov	r4, r0
    6b20:	mov	r3, #240	; 0xf0
    6b24:	str	r3, [sp]
    6b28:	mov	r3, #96	; 0x60
    6b2c:	mov	r2, #16
    6b30:	mov	r1, #0
    6b34:	mov	r0, #3
    6b38:	bl	5508 <gen_mcmp>
    6b3c:	mov	r5, r0
    6b40:	mov	r1, r0
    6b44:	mov	r0, r4
    6b48:	bl	3a30 <sf_gen_and>
    6b4c:	b	6ba0 <gen_linktype+0xe4>
    6b50:	cmp	r0, #33	; 0x21
    6b54:	bne	6bb8 <gen_linktype+0xfc>
    6b58:	mov	r3, #1
    6b5c:	str	r3, [sp]
    6b60:	mov	r2, #16
    6b64:	mvn	r1, #1
    6b68:	mov	r0, #3
    6b6c:	bl	5508 <gen_mcmp>
    6b70:	mov	r4, r0
    6b74:	mov	r3, #240	; 0xf0
    6b78:	str	r3, [sp]
    6b7c:	mov	r3, #64	; 0x40
    6b80:	mov	r2, #16
    6b84:	mov	r1, #0
    6b88:	mov	r0, #3
    6b8c:	bl	5508 <gen_mcmp>
    6b90:	mov	r5, r0
    6b94:	mov	r1, r0
    6b98:	mov	r0, r4
    6b9c:	bl	3a30 <sf_gen_and>
    6ba0:	mov	r0, r5
    6ba4:	add	sp, sp, #12
    6ba8:	ldrd	r4, [sp]
    6bac:	ldrd	r6, [sp, #8]
    6bb0:	add	sp, sp, #16
    6bb4:	pop	{pc}		; (ldr pc, [sp], #4)
    6bb8:	ldr	r0, [pc, #3316]	; 78b4 <gen_linktype+0xdf8>
    6bbc:	add	r0, pc, r0
    6bc0:	bl	229c <sf_bpf_error>
    6bc4:	ldr	r3, [pc, #3308]	; 78b8 <gen_linktype+0xdfc>
    6bc8:	add	r3, pc, r3
    6bcc:	ldr	r3, [r3, #912]	; 0x390
    6bd0:	cmp	r3, #0
    6bd4:	bne	6f88 <gen_linktype+0x4cc>
    6bd8:	ldr	r3, [pc, #3292]	; 78bc <gen_linktype+0xe00>
    6bdc:	add	r3, pc, r3
    6be0:	ldr	r2, [r3, #852]	; 0x354
    6be4:	cmp	r2, #229	; 0xe5
    6be8:	addls	pc, pc, r2, lsl #2
    6bec:	b	7880 <gen_linktype+0xdc4>
    6bf0:	b	74b0 <gen_linktype+0x9f4>
    6bf4:	b	6fb0 <gen_linktype+0x4f4>
    6bf8:	b	7880 <gen_linktype+0xdc4>
    6bfc:	b	7880 <gen_linktype+0xdc4>
    6c00:	b	7880 <gen_linktype+0xdc4>
    6c04:	b	7880 <gen_linktype+0xdc4>
    6c08:	b	708c <gen_linktype+0x5d0>
    6c0c:	b	7504 <gen_linktype+0xa48>
    6c10:	b	7348 <gen_linktype+0x88c>
    6c14:	b	73e8 <gen_linktype+0x92c>
    6c18:	b	7080 <gen_linktype+0x5c4>
    6c1c:	b	7098 <gen_linktype+0x5dc>
    6c20:	b	7348 <gen_linktype+0x88c>
    6c24:	b	7880 <gen_linktype+0xdc4>
    6c28:	b	7880 <gen_linktype+0xdc4>
    6c2c:	b	7348 <gen_linktype+0x88c>
    6c30:	b	7410 <gen_linktype+0x954>
    6c34:	b	7880 <gen_linktype+0xdc4>
    6c38:	b	7880 <gen_linktype+0xdc4>
    6c3c:	b	7098 <gen_linktype+0x5dc>
    6c40:	b	7880 <gen_linktype+0xdc4>
    6c44:	b	7880 <gen_linktype+0xdc4>
    6c48:	b	7880 <gen_linktype+0xdc4>
    6c4c:	b	7880 <gen_linktype+0xdc4>
    6c50:	b	7880 <gen_linktype+0xdc4>
    6c54:	b	7880 <gen_linktype+0xdc4>
    6c58:	b	7880 <gen_linktype+0xdc4>
    6c5c:	b	7880 <gen_linktype+0xdc4>
    6c60:	b	7880 <gen_linktype+0xdc4>
    6c64:	b	7880 <gen_linktype+0xdc4>
    6c68:	b	7880 <gen_linktype+0xdc4>
    6c6c:	b	7880 <gen_linktype+0xdc4>
    6c70:	b	7880 <gen_linktype+0xdc4>
    6c74:	b	7880 <gen_linktype+0xdc4>
    6c78:	b	7880 <gen_linktype+0xdc4>
    6c7c:	b	7880 <gen_linktype+0xdc4>
    6c80:	b	7880 <gen_linktype+0xdc4>
    6c84:	b	7880 <gen_linktype+0xdc4>
    6c88:	b	7880 <gen_linktype+0xdc4>
    6c8c:	b	7880 <gen_linktype+0xdc4>
    6c90:	b	7880 <gen_linktype+0xdc4>
    6c94:	b	7880 <gen_linktype+0xdc4>
    6c98:	b	7880 <gen_linktype+0xdc4>
    6c9c:	b	7880 <gen_linktype+0xdc4>
    6ca0:	b	7880 <gen_linktype+0xdc4>
    6ca4:	b	7880 <gen_linktype+0xdc4>
    6ca8:	b	7880 <gen_linktype+0xdc4>
    6cac:	b	7880 <gen_linktype+0xdc4>
    6cb0:	b	7880 <gen_linktype+0xdc4>
    6cb4:	b	7880 <gen_linktype+0xdc4>
    6cb8:	b	73e8 <gen_linktype+0x92c>
    6cbc:	b	73e8 <gen_linktype+0x92c>
    6cc0:	b	7880 <gen_linktype+0xdc4>
    6cc4:	b	7880 <gen_linktype+0xdc4>
    6cc8:	b	7880 <gen_linktype+0xdc4>
    6ccc:	b	7880 <gen_linktype+0xdc4>
    6cd0:	b	7880 <gen_linktype+0xdc4>
    6cd4:	b	7880 <gen_linktype+0xdc4>
    6cd8:	b	7880 <gen_linktype+0xdc4>
    6cdc:	b	7880 <gen_linktype+0xdc4>
    6ce0:	b	7880 <gen_linktype+0xdc4>
    6ce4:	b	7880 <gen_linktype+0xdc4>
    6ce8:	b	7880 <gen_linktype+0xdc4>
    6cec:	b	7880 <gen_linktype+0xdc4>
    6cf0:	b	7880 <gen_linktype+0xdc4>
    6cf4:	b	7880 <gen_linktype+0xdc4>
    6cf8:	b	7880 <gen_linktype+0xdc4>
    6cfc:	b	7880 <gen_linktype+0xdc4>
    6d00:	b	7880 <gen_linktype+0xdc4>
    6d04:	b	7880 <gen_linktype+0xdc4>
    6d08:	b	7880 <gen_linktype+0xdc4>
    6d0c:	b	7880 <gen_linktype+0xdc4>
    6d10:	b	7880 <gen_linktype+0xdc4>
    6d14:	b	7880 <gen_linktype+0xdc4>
    6d18:	b	7880 <gen_linktype+0xdc4>
    6d1c:	b	7880 <gen_linktype+0xdc4>
    6d20:	b	7880 <gen_linktype+0xdc4>
    6d24:	b	7880 <gen_linktype+0xdc4>
    6d28:	b	7880 <gen_linktype+0xdc4>
    6d2c:	b	7880 <gen_linktype+0xdc4>
    6d30:	b	7880 <gen_linktype+0xdc4>
    6d34:	b	7880 <gen_linktype+0xdc4>
    6d38:	b	7880 <gen_linktype+0xdc4>
    6d3c:	b	7880 <gen_linktype+0xdc4>
    6d40:	b	7880 <gen_linktype+0xdc4>
    6d44:	b	7880 <gen_linktype+0xdc4>
    6d48:	b	7880 <gen_linktype+0xdc4>
    6d4c:	b	7880 <gen_linktype+0xdc4>
    6d50:	b	7880 <gen_linktype+0xdc4>
    6d54:	b	7880 <gen_linktype+0xdc4>
    6d58:	b	7880 <gen_linktype+0xdc4>
    6d5c:	b	7880 <gen_linktype+0xdc4>
    6d60:	b	7880 <gen_linktype+0xdc4>
    6d64:	b	7880 <gen_linktype+0xdc4>
    6d68:	b	7880 <gen_linktype+0xdc4>
    6d6c:	b	7880 <gen_linktype+0xdc4>
    6d70:	b	7880 <gen_linktype+0xdc4>
    6d74:	b	7880 <gen_linktype+0xdc4>
    6d78:	b	7880 <gen_linktype+0xdc4>
    6d7c:	b	7880 <gen_linktype+0xdc4>
    6d80:	b	7880 <gen_linktype+0xdc4>
    6d84:	b	7880 <gen_linktype+0xdc4>
    6d88:	b	7880 <gen_linktype+0xdc4>
    6d8c:	b	7880 <gen_linktype+0xdc4>
    6d90:	b	6fbc <gen_linktype+0x500>
    6d94:	b	6fe8 <gen_linktype+0x52c>
    6d98:	b	7880 <gen_linktype+0xdc4>
    6d9c:	b	7670 <gen_linktype+0xbb4>
    6da0:	b	74b0 <gen_linktype+0x9f4>
    6da4:	b	74b0 <gen_linktype+0x9f4>
    6da8:	b	7880 <gen_linktype+0xdc4>
    6dac:	b	7880 <gen_linktype+0xdc4>
    6db0:	b	7880 <gen_linktype+0xdc4>
    6db4:	b	7130 <gen_linktype+0x674>
    6db8:	b	7654 <gen_linktype+0xb98>
    6dbc:	b	7880 <gen_linktype+0xdc4>
    6dc0:	b	7880 <gen_linktype+0xdc4>
    6dc4:	b	7880 <gen_linktype+0xdc4>
    6dc8:	b	7880 <gen_linktype+0xdc4>
    6dcc:	b	6fe8 <gen_linktype+0x52c>
    6dd0:	b	7880 <gen_linktype+0xdc4>
    6dd4:	b	7880 <gen_linktype+0xdc4>
    6dd8:	b	7098 <gen_linktype+0x5dc>
    6ddc:	b	70a4 <gen_linktype+0x5e8>
    6de0:	b	7880 <gen_linktype+0xdc4>
    6de4:	b	7880 <gen_linktype+0xdc4>
    6de8:	b	7880 <gen_linktype+0xdc4>
    6dec:	b	6fe8 <gen_linktype+0x52c>
    6df0:	b	7880 <gen_linktype+0xdc4>
    6df4:	b	7504 <gen_linktype+0xa48>
    6df8:	b	7744 <gen_linktype+0xc88>
    6dfc:	b	7744 <gen_linktype+0xc88>
    6e00:	b	7744 <gen_linktype+0xc88>
    6e04:	b	7744 <gen_linktype+0xc88>
    6e08:	b	7744 <gen_linktype+0xc88>
    6e0c:	b	7744 <gen_linktype+0xc88>
    6e10:	b	7744 <gen_linktype+0xc88>
    6e14:	b	7744 <gen_linktype+0xc88>
    6e18:	b	7880 <gen_linktype+0xdc4>
    6e1c:	b	77f0 <gen_linktype+0xd34>
    6e20:	b	77f0 <gen_linktype+0xd34>
    6e24:	b	7880 <gen_linktype+0xdc4>
    6e28:	b	7880 <gen_linktype+0xdc4>
    6e2c:	b	77e4 <gen_linktype+0xd28>
    6e30:	b	77d8 <gen_linktype+0xd1c>
    6e34:	b	7880 <gen_linktype+0xdc4>
    6e38:	b	7880 <gen_linktype+0xdc4>
    6e3c:	b	7880 <gen_linktype+0xdc4>
    6e40:	b	7880 <gen_linktype+0xdc4>
    6e44:	b	7880 <gen_linktype+0xdc4>
    6e48:	b	7880 <gen_linktype+0xdc4>
    6e4c:	b	7880 <gen_linktype+0xdc4>
    6e50:	b	7880 <gen_linktype+0xdc4>
    6e54:	b	7880 <gen_linktype+0xdc4>
    6e58:	b	7880 <gen_linktype+0xdc4>
    6e5c:	b	7880 <gen_linktype+0xdc4>
    6e60:	b	7880 <gen_linktype+0xdc4>
    6e64:	b	7880 <gen_linktype+0xdc4>
    6e68:	b	7880 <gen_linktype+0xdc4>
    6e6c:	b	7880 <gen_linktype+0xdc4>
    6e70:	b	7880 <gen_linktype+0xdc4>
    6e74:	b	7880 <gen_linktype+0xdc4>
    6e78:	b	7880 <gen_linktype+0xdc4>
    6e7c:	b	6fe8 <gen_linktype+0x52c>
    6e80:	b	7744 <gen_linktype+0xc88>
    6e84:	b	7880 <gen_linktype+0xdc4>
    6e88:	b	73e8 <gen_linktype+0x92c>
    6e8c:	b	7744 <gen_linktype+0xc88>
    6e90:	b	7744 <gen_linktype+0xc88>
    6e94:	b	7880 <gen_linktype+0xdc4>
    6e98:	b	7880 <gen_linktype+0xdc4>
    6e9c:	b	7880 <gen_linktype+0xdc4>
    6ea0:	b	7880 <gen_linktype+0xdc4>
    6ea4:	b	7880 <gen_linktype+0xdc4>
    6ea8:	b	7880 <gen_linktype+0xdc4>
    6eac:	b	7880 <gen_linktype+0xdc4>
    6eb0:	b	7880 <gen_linktype+0xdc4>
    6eb4:	b	7808 <gen_linktype+0xd4c>
    6eb8:	b	7744 <gen_linktype+0xc88>
    6ebc:	b	7744 <gen_linktype+0xc88>
    6ec0:	b	7744 <gen_linktype+0xc88>
    6ec4:	b	7744 <gen_linktype+0xc88>
    6ec8:	b	7738 <gen_linktype+0xc7c>
    6ecc:	b	7744 <gen_linktype+0xc88>
    6ed0:	b	7880 <gen_linktype+0xdc4>
    6ed4:	b	7880 <gen_linktype+0xdc4>
    6ed8:	b	7814 <gen_linktype+0xd58>
    6edc:	b	7820 <gen_linktype+0xd64>
    6ee0:	b	7880 <gen_linktype+0xdc4>
    6ee4:	b	7814 <gen_linktype+0xd58>
    6ee8:	b	782c <gen_linktype+0xd70>
    6eec:	b	7838 <gen_linktype+0xd7c>
    6ef0:	b	6fe8 <gen_linktype+0x52c>
    6ef4:	b	7844 <gen_linktype+0xd88>
    6ef8:	b	7744 <gen_linktype+0xc88>
    6efc:	b	7838 <gen_linktype+0xd7c>
    6f00:	b	7850 <gen_linktype+0xd94>
    6f04:	b	77fc <gen_linktype+0xd40>
    6f08:	b	785c <gen_linktype+0xda0>
    6f0c:	b	7868 <gen_linktype+0xdac>
    6f10:	b	7744 <gen_linktype+0xc88>
    6f14:	b	7820 <gen_linktype+0xd64>
    6f18:	b	7874 <gen_linktype+0xdb8>
    6f1c:	b	7880 <gen_linktype+0xdc4>
    6f20:	b	7880 <gen_linktype+0xdc4>
    6f24:	b	7880 <gen_linktype+0xdc4>
    6f28:	b	7880 <gen_linktype+0xdc4>
    6f2c:	b	7880 <gen_linktype+0xdc4>
    6f30:	b	7880 <gen_linktype+0xdc4>
    6f34:	b	7880 <gen_linktype+0xdc4>
    6f38:	b	7880 <gen_linktype+0xdc4>
    6f3c:	b	7880 <gen_linktype+0xdc4>
    6f40:	b	7880 <gen_linktype+0xdc4>
    6f44:	b	7880 <gen_linktype+0xdc4>
    6f48:	b	7880 <gen_linktype+0xdc4>
    6f4c:	b	7838 <gen_linktype+0xd7c>
    6f50:	b	7880 <gen_linktype+0xdc4>
    6f54:	b	7880 <gen_linktype+0xdc4>
    6f58:	b	7880 <gen_linktype+0xdc4>
    6f5c:	b	7880 <gen_linktype+0xdc4>
    6f60:	b	7814 <gen_linktype+0xd58>
    6f64:	b	7880 <gen_linktype+0xdc4>
    6f68:	b	7880 <gen_linktype+0xdc4>
    6f6c:	b	7880 <gen_linktype+0xdc4>
    6f70:	b	7880 <gen_linktype+0xdc4>
    6f74:	b	7880 <gen_linktype+0xdc4>
    6f78:	b	776c <gen_linktype+0xcb0>
    6f7c:	b	782c <gen_linktype+0xd70>
    6f80:	b	73b4 <gen_linktype+0x8f8>
    6f84:	b	73cc <gen_linktype+0x910>
    6f88:	bl	21b0 <ethertype_to_ppptype>
    6f8c:	mov	r3, r0
    6f90:	mov	r2, #8
    6f94:	ldr	r1, [pc, #2340]	; 78c0 <gen_linktype+0xe04>
    6f98:	add	r1, pc, r1
    6f9c:	ldr	r1, [r1, #944]	; 0x3b0
    6fa0:	mov	r0, #2
    6fa4:	bl	4908 <gen_cmp>
    6fa8:	mov	r5, r0
    6fac:	b	6ba0 <gen_linktype+0xe4>
    6fb0:	bl	5270 <gen_ether_linktype>
    6fb4:	mov	r5, r0
    6fb8:	b	6ba0 <gen_linktype+0xe4>
    6fbc:	movw	r3, #65278	; 0xfefe
    6fc0:	cmp	r0, #254	; 0xfe
    6fc4:	movne	r3, r0
    6fc8:	mov	r2, #8
    6fcc:	ldr	r1, [pc, #2288]	; 78c4 <gen_linktype+0xe08>
    6fd0:	add	r1, pc, r1
    6fd4:	ldr	r1, [r1, #944]	; 0x3b0
    6fd8:	mov	r0, #1
    6fdc:	bl	4908 <gen_cmp>
    6fe0:	mov	r5, r0
    6fe4:	b	6ba0 <gen_linktype+0xe4>
    6fe8:	mov	r1, #16
    6fec:	mov	r0, #0
    6ff0:	bl	447c <gen_load_llrel>
    6ff4:	mov	r7, r0
    6ff8:	mov	r0, #208	; 0xd0
    6ffc:	bl	22d8 <newchunk>
    7000:	mov	r6, r0
    7004:	mov	r5, #69	; 0x45
    7008:	str	r5, [r0, #8]
    700c:	str	r0, [r6, #96]	; 0x60
    7010:	mov	r3, #8
    7014:	str	r3, [r0, #20]
    7018:	str	r7, [r0, #4]
    701c:	mov	r1, #16
    7020:	mov	r0, #0
    7024:	bl	447c <gen_load_llrel>
    7028:	mov	r7, r0
    702c:	mov	r0, #208	; 0xd0
    7030:	bl	22d8 <newchunk>
    7034:	mov	r3, r0
    7038:	str	r5, [r0, #8]
    703c:	str	r0, [r3, #96]	; 0x60
    7040:	mov	r2, #4
    7044:	str	r2, [r0, #20]
    7048:	str	r7, [r0, #4]
    704c:	ldr	r2, [r0, #44]	; 0x2c
    7050:	clz	r2, r2
    7054:	lsr	r2, r2, #5
    7058:	str	r2, [r0, #44]	; 0x2c
    705c:	mov	r1, r6
    7060:	bl	3a30 <sf_gen_and>
    7064:	mov	r0, r4
    7068:	bl	4f3c <gen_llc_linktype>
    706c:	mov	r5, r0
    7070:	mov	r1, r0
    7074:	mov	r0, r6
    7078:	bl	3a30 <sf_gen_and>
    707c:	b	6ba0 <gen_linktype+0xe4>
    7080:	bl	4f3c <gen_llc_linktype>
    7084:	mov	r5, r0
    7088:	b	6ba0 <gen_linktype+0xe4>
    708c:	bl	4f3c <gen_llc_linktype>
    7090:	mov	r5, r0
    7094:	b	6ba0 <gen_linktype+0xe4>
    7098:	bl	4f3c <gen_llc_linktype>
    709c:	mov	r5, r0
    70a0:	b	6ba0 <gen_linktype+0xe4>
    70a4:	ldr	r3, [pc, #2076]	; 78c8 <gen_linktype+0xe0c>
    70a8:	add	r3, pc, r3
    70ac:	ldr	r3, [r3, #892]	; 0x37c
    70b0:	cmp	r3, #0
    70b4:	beq	70fc <gen_linktype+0x640>
    70b8:	mov	r3, #65280	; 0xff00
    70bc:	mov	r2, #8
    70c0:	mov	r1, #4
    70c4:	mov	r0, #1
    70c8:	bl	4908 <gen_cmp>
    70cc:	mov	r6, r0
    70d0:	ldr	r3, [r0, #44]	; 0x2c
    70d4:	clz	r3, r3
    70d8:	lsr	r3, r3, #5
    70dc:	str	r3, [r0, #44]	; 0x2c
    70e0:	mov	r0, r4
    70e4:	bl	5270 <gen_ether_linktype>
    70e8:	mov	r5, r0
    70ec:	mov	r1, r0
    70f0:	mov	r0, r6
    70f4:	bl	3a30 <sf_gen_and>
    70f8:	b	6ba0 <gen_linktype+0xe4>
    70fc:	mov	r3, #0
    7100:	mov	r2, #16
    7104:	mov	r1, #2
    7108:	mov	r0, #53	; 0x35
    710c:	bl	68d0 <sf_gen_atmfield_code>
    7110:	mov	r6, r0
    7114:	mov	r0, r4
    7118:	bl	4f3c <gen_llc_linktype>
    711c:	mov	r5, r0
    7120:	mov	r1, r0
    7124:	mov	r0, r6
    7128:	bl	3a30 <sf_gen_and>
    712c:	b	6ba0 <gen_linktype+0xe4>
    7130:	cmp	r0, #240	; 0xf0
    7134:	beq	7258 <gen_linktype+0x79c>
    7138:	bgt	71e4 <gen_linktype+0x728>
    713c:	cmp	r0, #6
    7140:	beq	7258 <gen_linktype+0x79c>
    7144:	cmp	r0, #224	; 0xe0
    7148:	bne	7204 <gen_linktype+0x748>
    714c:	mov	r3, #224	; 0xe0
    7150:	mov	r2, #16
    7154:	mov	r1, #0
    7158:	mov	r0, #2
    715c:	bl	4908 <gen_cmp>
    7160:	mov	r4, r0
    7164:	movw	r1, #33079	; 0x8137
    7168:	mov	r0, #0
    716c:	bl	4aa4 <gen_snap>
    7170:	mov	r5, r0
    7174:	mov	r1, r0
    7178:	mov	r0, r4
    717c:	bl	3ac0 <sf_gen_or>
    7180:	ldr	r3, [pc, #1860]	; 78cc <gen_linktype+0xe10>
    7184:	add	r3, pc, r3
    7188:	ldr	r4, [r3, #944]	; 0x3b0
    718c:	mov	r3, #4
    7190:	mov	r2, #8
    7194:	mov	r1, r4
    7198:	mov	r0, #1
    719c:	bl	4908 <gen_cmp>
    71a0:	mov	r1, r5
    71a4:	bl	3a30 <sf_gen_and>
    71a8:	mov	r3, #1
    71ac:	mov	r2, #8
    71b0:	mov	r1, r4
    71b4:	mov	r0, r3
    71b8:	bl	4908 <gen_cmp>
    71bc:	mov	r1, r5
    71c0:	bl	3ac0 <sf_gen_or>
    71c4:	movw	r3, #33079	; 0x8137
    71c8:	mov	r2, #8
    71cc:	mov	r1, r4
    71d0:	mov	r0, #1
    71d4:	bl	4908 <gen_cmp>
    71d8:	mov	r1, r5
    71dc:	bl	3ac0 <sf_gen_or>
    71e0:	b	6ba0 <gen_linktype+0xe4>
    71e4:	movw	r3, #32923	; 0x809b
    71e8:	cmp	r0, r3
    71ec:	beq	72a0 <gen_linktype+0x7e4>
    71f0:	movw	r3, #33011	; 0x80f3
    71f4:	cmp	r0, r3
    71f8:	beq	72a0 <gen_linktype+0x7e4>
    71fc:	cmp	r0, #254	; 0xfe
    7200:	beq	7258 <gen_linktype+0x79c>
    7204:	movw	r3, #1500	; 0x5dc
    7208:	cmp	r4, r3
    720c:	bgt	7324 <gen_linktype+0x868>
    7210:	ldr	r5, [pc, #1720]	; 78d0 <gen_linktype+0xe14>
    7214:	add	r5, pc, r5
    7218:	mov	r3, #4
    721c:	mov	r2, #8
    7220:	ldr	r1, [r5, #944]	; 0x3b0
    7224:	mov	r0, #1
    7228:	bl	4908 <gen_cmp>
    722c:	mov	r6, r0
    7230:	mov	r3, r4
    7234:	mov	r2, #16
    7238:	ldr	r1, [r5, #940]	; 0x3ac
    723c:	mov	r0, #1
    7240:	bl	4908 <gen_cmp>
    7244:	mov	r5, r0
    7248:	mov	r1, r0
    724c:	mov	r0, r6
    7250:	bl	3a30 <sf_gen_and>
    7254:	b	6ba0 <gen_linktype+0xe4>
    7258:	mov	r3, #4
    725c:	mov	r2, #8
    7260:	ldr	r1, [pc, #1644]	; 78d4 <gen_linktype+0xe18>
    7264:	add	r1, pc, r1
    7268:	ldr	r1, [r1, #944]	; 0x3b0
    726c:	mov	r0, #1
    7270:	bl	4908 <gen_cmp>
    7274:	mov	r6, r0
    7278:	orr	r3, r4, r4, lsl #8
    727c:	mov	r2, #8
    7280:	mov	r1, #0
    7284:	mov	r0, #2
    7288:	bl	4908 <gen_cmp>
    728c:	mov	r5, r0
    7290:	mov	r1, r0
    7294:	mov	r0, r6
    7298:	bl	3a30 <sf_gen_and>
    729c:	b	6ba0 <gen_linktype+0xe4>
    72a0:	ldr	r3, [pc, #1584]	; 78d8 <gen_linktype+0xe1c>
    72a4:	add	r3, pc, r3
    72a8:	ldr	r6, [r3, #944]	; 0x3b0
    72ac:	mov	r3, #4
    72b0:	mov	r2, #8
    72b4:	mov	r1, r6
    72b8:	mov	r0, #1
    72bc:	bl	4908 <gen_cmp>
    72c0:	mov	r7, r0
    72c4:	movw	r3, #32923	; 0x809b
    72c8:	cmp	r4, r3
    72cc:	beq	730c <gen_linktype+0x850>
    72d0:	movw	r1, #33011	; 0x80f3
    72d4:	mov	r0, #0
    72d8:	bl	4aa4 <gen_snap>
    72dc:	mov	r5, r0
    72e0:	mov	r1, r5
    72e4:	mov	r0, r7
    72e8:	bl	3a30 <sf_gen_and>
    72ec:	mov	r3, r4
    72f0:	mov	r2, #8
    72f4:	mov	r1, r6
    72f8:	mov	r0, #1
    72fc:	bl	4908 <gen_cmp>
    7300:	mov	r1, r5
    7304:	bl	3ac0 <sf_gen_or>
    7308:	b	6ba0 <gen_linktype+0xe4>
    730c:	mov	r1, r3
    7310:	mov	r0, #7
    7314:	movt	r0, #8
    7318:	bl	4aa4 <gen_snap>
    731c:	mov	r5, r0
    7320:	b	72e0 <gen_linktype+0x824>
    7324:	mov	r3, r4
    7328:	mov	r2, #8
    732c:	ldr	r1, [pc, #1448]	; 78dc <gen_linktype+0xe20>
    7330:	add	r1, pc, r1
    7334:	ldr	r1, [r1, #944]	; 0x3b0
    7338:	mov	r0, #1
    733c:	bl	4908 <gen_cmp>
    7340:	mov	r5, r0
    7344:	b	6ba0 <gen_linktype+0xe4>
    7348:	cmp	r0, #2048	; 0x800
    734c:	beq	736c <gen_linktype+0x8b0>
    7350:	movw	r3, #34525	; 0x86dd
    7354:	cmp	r0, r3
    7358:	beq	7390 <gen_linktype+0x8d4>
    735c:	mov	r0, #0
    7360:	bl	23cc <gen_uncond>
    7364:	mov	r5, r0
    7368:	b	6ba0 <gen_linktype+0xe4>
    736c:	mov	r3, #240	; 0xf0
    7370:	str	r3, [sp]
    7374:	mov	r3, #64	; 0x40
    7378:	mov	r2, #16
    737c:	mov	r1, #0
    7380:	mov	r0, #1
    7384:	bl	5508 <gen_mcmp>
    7388:	mov	r5, r0
    738c:	b	6ba0 <gen_linktype+0xe4>
    7390:	mov	r3, #240	; 0xf0
    7394:	str	r3, [sp]
    7398:	mov	r3, #96	; 0x60
    739c:	mov	r2, #16
    73a0:	mov	r1, #0
    73a4:	mov	r0, #1
    73a8:	bl	5508 <gen_mcmp>
    73ac:	mov	r5, r0
    73b0:	b	6ba0 <gen_linktype+0xe4>
    73b4:	cmp	r0, #2048	; 0x800
    73b8:	moveq	r0, #1
    73bc:	movne	r0, #0
    73c0:	bl	23cc <gen_uncond>
    73c4:	mov	r5, r0
    73c8:	b	6ba0 <gen_linktype+0xe4>
    73cc:	movw	r3, #34525	; 0x86dd
    73d0:	cmp	r0, r3
    73d4:	moveq	r0, #1
    73d8:	movne	r0, #0
    73dc:	bl	23cc <gen_uncond>
    73e0:	mov	r5, r0
    73e4:	b	6ba0 <gen_linktype+0xe4>
    73e8:	bl	21b0 <ethertype_to_ppptype>
    73ec:	mov	r3, r0
    73f0:	mov	r2, #8
    73f4:	ldr	r1, [pc, #1252]	; 78e0 <gen_linktype+0xe24>
    73f8:	add	r1, pc, r1
    73fc:	ldr	r1, [r1, #944]	; 0x3b0
    7400:	mov	r0, #1
    7404:	bl	4908 <gen_cmp>
    7408:	mov	r5, r0
    740c:	b	6ba0 <gen_linktype+0xe4>
    7410:	cmp	r0, #2048	; 0x800
    7414:	beq	7440 <gen_linktype+0x984>
    7418:	bl	21b0 <ethertype_to_ppptype>
    741c:	mov	r3, r0
    7420:	mov	r2, #8
    7424:	ldr	r1, [pc, #1208]	; 78e4 <gen_linktype+0xe28>
    7428:	add	r1, pc, r1
    742c:	ldr	r1, [r1, #944]	; 0x3b0
    7430:	mov	r0, #1
    7434:	bl	4908 <gen_cmp>
    7438:	mov	r5, r0
    743c:	b	6ba0 <gen_linktype+0xe4>
    7440:	ldr	r3, [pc, #1184]	; 78e8 <gen_linktype+0xe2c>
    7444:	add	r3, pc, r3
    7448:	ldr	r4, [r3, #944]	; 0x3b0
    744c:	mov	r3, #33	; 0x21
    7450:	mov	r2, #8
    7454:	mov	r1, r4
    7458:	mov	r0, #1
    745c:	bl	4908 <gen_cmp>
    7460:	mov	r5, r0
    7464:	mov	r3, #45	; 0x2d
    7468:	mov	r2, #8
    746c:	mov	r1, r4
    7470:	mov	r0, #1
    7474:	bl	4908 <gen_cmp>
    7478:	mov	r6, r0
    747c:	mov	r1, r0
    7480:	mov	r0, r5
    7484:	bl	3ac0 <sf_gen_or>
    7488:	mov	r3, #47	; 0x2f
    748c:	mov	r2, #8
    7490:	mov	r1, r4
    7494:	mov	r0, #1
    7498:	bl	4908 <gen_cmp>
    749c:	mov	r5, r0
    74a0:	mov	r1, r0
    74a4:	mov	r0, r6
    74a8:	bl	3ac0 <sf_gen_or>
    74ac:	b	6ba0 <gen_linktype+0xe4>
    74b0:	cmp	r0, #2048	; 0x800
    74b4:	beq	74d4 <gen_linktype+0xa18>
    74b8:	movw	r3, #34525	; 0x86dd
    74bc:	cmp	r0, r3
    74c0:	beq	74dc <gen_linktype+0xa20>
    74c4:	mov	r0, #0
    74c8:	bl	23cc <gen_uncond>
    74cc:	mov	r5, r0
    74d0:	b	6ba0 <gen_linktype+0xe4>
    74d4:	mov	r3, #2
    74d8:	b	74e0 <gen_linktype+0xa24>
    74dc:	mov	r3, #10
    74e0:	cmp	r2, #109	; 0x6d
    74e4:	cmpne	r2, #0
    74e8:	reveq	r3, r3
    74ec:	mov	r2, #0
    74f0:	mov	r1, r2
    74f4:	mov	r0, #1
    74f8:	bl	4908 <gen_cmp>
    74fc:	mov	r5, r0
    7500:	b	6ba0 <gen_linktype+0xe4>
    7504:	movw	r3, #32821	; 0x8035
    7508:	cmp	r0, r3
    750c:	beq	760c <gen_linktype+0xb50>
    7510:	ble	7550 <gen_linktype+0xa94>
    7514:	movw	r3, #32923	; 0x809b
    7518:	cmp	r0, r3
    751c:	beq	7630 <gen_linktype+0xb74>
    7520:	movw	r3, #34525	; 0x86dd
    7524:	cmp	r0, r3
    7528:	bne	75b0 <gen_linktype+0xaf4>
    752c:	mov	r3, #196	; 0xc4
    7530:	mov	r2, #16
    7534:	ldr	r1, [pc, #944]	; 78ec <gen_linktype+0xe30>
    7538:	add	r1, pc, r1
    753c:	ldr	r1, [r1, #944]	; 0x3b0
    7540:	mov	r0, #1
    7544:	bl	4908 <gen_cmp>
    7548:	mov	r5, r0
    754c:	b	6ba0 <gen_linktype+0xe4>
    7550:	cmp	r0, #2048	; 0x800
    7554:	beq	75c0 <gen_linktype+0xb04>
    7558:	movw	r3, #2054	; 0x806
    755c:	cmp	r0, r3
    7560:	bne	75b0 <gen_linktype+0xaf4>
    7564:	ldr	r3, [pc, #900]	; 78f0 <gen_linktype+0xe34>
    7568:	add	r3, pc, r3
    756c:	ldr	r4, [r3, #944]	; 0x3b0
    7570:	mov	r3, #213	; 0xd5
    7574:	mov	r2, #16
    7578:	mov	r1, r4
    757c:	mov	r0, #1
    7580:	bl	4908 <gen_cmp>
    7584:	mov	r6, r0
    7588:	mov	r3, #241	; 0xf1
    758c:	mov	r2, #16
    7590:	mov	r1, r4
    7594:	mov	r0, #1
    7598:	bl	4908 <gen_cmp>
    759c:	mov	r5, r0
    75a0:	mov	r1, r0
    75a4:	mov	r0, r6
    75a8:	bl	3ac0 <sf_gen_or>
    75ac:	b	6ba0 <gen_linktype+0xe4>
    75b0:	mov	r0, #0
    75b4:	bl	23cc <gen_uncond>
    75b8:	mov	r5, r0
    75bc:	b	6ba0 <gen_linktype+0xe4>
    75c0:	ldr	r3, [pc, #812]	; 78f4 <gen_linktype+0xe38>
    75c4:	add	r3, pc, r3
    75c8:	ldr	r4, [r3, #944]	; 0x3b0
    75cc:	mov	r3, #212	; 0xd4
    75d0:	mov	r2, #16
    75d4:	mov	r1, r4
    75d8:	mov	r0, #1
    75dc:	bl	4908 <gen_cmp>
    75e0:	mov	r6, r0
    75e4:	mov	r3, #240	; 0xf0
    75e8:	mov	r2, #16
    75ec:	mov	r1, r4
    75f0:	mov	r0, #1
    75f4:	bl	4908 <gen_cmp>
    75f8:	mov	r5, r0
    75fc:	mov	r1, r0
    7600:	mov	r0, r6
    7604:	bl	3ac0 <sf_gen_or>
    7608:	b	6ba0 <gen_linktype+0xe4>
    760c:	mov	r3, #214	; 0xd6
    7610:	mov	r2, #16
    7614:	ldr	r1, [pc, #732]	; 78f8 <gen_linktype+0xe3c>
    7618:	add	r1, pc, r1
    761c:	ldr	r1, [r1, #944]	; 0x3b0
    7620:	mov	r0, #1
    7624:	bl	4908 <gen_cmp>
    7628:	mov	r5, r0
    762c:	b	6ba0 <gen_linktype+0xe4>
    7630:	mov	r3, #221	; 0xdd
    7634:	mov	r2, #16
    7638:	ldr	r1, [pc, #700]	; 78fc <gen_linktype+0xe40>
    763c:	add	r1, pc, r1
    7640:	ldr	r1, [r1, #944]	; 0x3b0
    7644:	mov	r0, #1
    7648:	bl	4908 <gen_cmp>
    764c:	mov	r5, r0
    7650:	b	6ba0 <gen_linktype+0xe4>
    7654:	movw	r3, #32923	; 0x809b
    7658:	cmp	r0, r3
    765c:	moveq	r0, #1
    7660:	movne	r0, #0
    7664:	bl	23cc <gen_uncond>
    7668:	mov	r5, r0
    766c:	b	6ba0 <gen_linktype+0xe4>
    7670:	cmp	r0, #2048	; 0x800
    7674:	beq	769c <gen_linktype+0xbe0>
    7678:	movw	r3, #34525	; 0x86dd
    767c:	cmp	r0, r3
    7680:	beq	76b8 <gen_linktype+0xbfc>
    7684:	cmp	r0, #254	; 0xfe
    7688:	beq	76d4 <gen_linktype+0xc18>
    768c:	mov	r0, #0
    7690:	bl	23cc <gen_uncond>
    7694:	mov	r5, r0
    7698:	b	6ba0 <gen_linktype+0xe4>
    769c:	mov	r3, #972	; 0x3cc
    76a0:	mov	r2, #8
    76a4:	mov	r1, #2
    76a8:	mov	r0, #1
    76ac:	bl	4908 <gen_cmp>
    76b0:	mov	r5, r0
    76b4:	b	6ba0 <gen_linktype+0xe4>
    76b8:	movw	r3, #910	; 0x38e
    76bc:	mov	r2, #8
    76c0:	mov	r1, #2
    76c4:	mov	r0, #1
    76c8:	bl	4908 <gen_cmp>
    76cc:	mov	r5, r0
    76d0:	b	6ba0 <gen_linktype+0xe4>
    76d4:	movw	r3, #897	; 0x381
    76d8:	mov	r2, #8
    76dc:	mov	r1, #2
    76e0:	mov	r0, #1
    76e4:	bl	4908 <gen_cmp>
    76e8:	mov	r4, r0
    76ec:	movw	r3, #898	; 0x382
    76f0:	mov	r2, #8
    76f4:	mov	r1, #2
    76f8:	mov	r0, #1
    76fc:	bl	4908 <gen_cmp>
    7700:	mov	r6, r0
    7704:	movw	r3, #899	; 0x383
    7708:	mov	r2, #8
    770c:	mov	r1, #2
    7710:	mov	r0, #1
    7714:	bl	4908 <gen_cmp>
    7718:	mov	r5, r0
    771c:	mov	r1, r0
    7720:	mov	r0, r6
    7724:	bl	3ac0 <sf_gen_or>
    7728:	mov	r1, r5
    772c:	mov	r0, r4
    7730:	bl	3ac0 <sf_gen_or>
    7734:	b	6ba0 <gen_linktype+0xe4>
    7738:	ldr	r0, [pc, #448]	; 7900 <gen_linktype+0xe44>
    773c:	add	r0, pc, r0
    7740:	bl	229c <sf_bpf_error>
    7744:	mvn	r3, #255	; 0xff
    7748:	str	r3, [sp]
    774c:	mov	r3, #17152	; 0x4300
    7750:	movt	r3, #19783	; 0x4d47
    7754:	mov	r2, #0
    7758:	mov	r1, r2
    775c:	mov	r0, #1
    7760:	bl	5508 <gen_mcmp>
    7764:	mov	r5, r0
    7768:	b	6ba0 <gen_linktype+0xe4>
    776c:	cmp	r0, #2048	; 0x800
    7770:	beq	7790 <gen_linktype+0xcd4>
    7774:	movw	r3, #34525	; 0x86dd
    7778:	cmp	r0, r3
    777c:	beq	77b4 <gen_linktype+0xcf8>
    7780:	mov	r0, #0
    7784:	bl	23cc <gen_uncond>
    7788:	mov	r5, r0
    778c:	b	6ba0 <gen_linktype+0xe4>
    7790:	mov	r3, #2
    7794:	mov	r2, #16
    7798:	ldr	r1, [pc, #356]	; 7904 <gen_linktype+0xe48>
    779c:	add	r1, pc, r1
    77a0:	ldr	r1, [r1, #944]	; 0x3b0
    77a4:	mov	r0, #1
    77a8:	bl	4908 <gen_cmp>
    77ac:	mov	r5, r0
    77b0:	b	6ba0 <gen_linktype+0xe4>
    77b4:	mov	r3, #26
    77b8:	mov	r2, #16
    77bc:	ldr	r1, [pc, #324]	; 7908 <gen_linktype+0xe4c>
    77c0:	add	r1, pc, r1
    77c4:	ldr	r1, [r1, #944]	; 0x3b0
    77c8:	mov	r0, #1
    77cc:	bl	4908 <gen_cmp>
    77d0:	mov	r5, r0
    77d4:	b	6ba0 <gen_linktype+0xe4>
    77d8:	ldr	r0, [pc, #300]	; 790c <gen_linktype+0xe50>
    77dc:	add	r0, pc, r0
    77e0:	bl	229c <sf_bpf_error>
    77e4:	ldr	r0, [pc, #292]	; 7910 <gen_linktype+0xe54>
    77e8:	add	r0, pc, r0
    77ec:	bl	229c <sf_bpf_error>
    77f0:	ldr	r0, [pc, #284]	; 7914 <gen_linktype+0xe58>
    77f4:	add	r0, pc, r0
    77f8:	bl	229c <sf_bpf_error>
    77fc:	ldr	r0, [pc, #276]	; 7918 <gen_linktype+0xe5c>
    7800:	add	r0, pc, r0
    7804:	bl	229c <sf_bpf_error>
    7808:	ldr	r0, [pc, #268]	; 791c <gen_linktype+0xe60>
    780c:	add	r0, pc, r0
    7810:	bl	229c <sf_bpf_error>
    7814:	ldr	r0, [pc, #260]	; 7920 <gen_linktype+0xe64>
    7818:	add	r0, pc, r0
    781c:	bl	229c <sf_bpf_error>
    7820:	ldr	r0, [pc, #252]	; 7924 <gen_linktype+0xe68>
    7824:	add	r0, pc, r0
    7828:	bl	229c <sf_bpf_error>
    782c:	ldr	r0, [pc, #244]	; 7928 <gen_linktype+0xe6c>
    7830:	add	r0, pc, r0
    7834:	bl	229c <sf_bpf_error>
    7838:	ldr	r0, [pc, #236]	; 792c <gen_linktype+0xe70>
    783c:	add	r0, pc, r0
    7840:	bl	229c <sf_bpf_error>
    7844:	ldr	r0, [pc, #228]	; 7930 <gen_linktype+0xe74>
    7848:	add	r0, pc, r0
    784c:	bl	229c <sf_bpf_error>
    7850:	ldr	r0, [pc, #220]	; 7934 <gen_linktype+0xe78>
    7854:	add	r0, pc, r0
    7858:	bl	229c <sf_bpf_error>
    785c:	ldr	r0, [pc, #212]	; 7938 <gen_linktype+0xe7c>
    7860:	add	r0, pc, r0
    7864:	bl	229c <sf_bpf_error>
    7868:	ldr	r0, [pc, #204]	; 793c <gen_linktype+0xe80>
    786c:	add	r0, pc, r0
    7870:	bl	229c <sf_bpf_error>
    7874:	ldr	r0, [pc, #196]	; 7940 <gen_linktype+0xe84>
    7878:	add	r0, pc, r0
    787c:	bl	229c <sf_bpf_error>
    7880:	ldr	r3, [pc, #188]	; 7944 <gen_linktype+0xe88>
    7884:	add	r3, pc, r3
    7888:	ldr	r1, [r3, #944]	; 0x3b0
    788c:	cmn	r1, #1
    7890:	beq	78ac <gen_linktype+0xdf0>
    7894:	mov	r3, r0
    7898:	mov	r2, #8
    789c:	mov	r0, #1
    78a0:	bl	4908 <gen_cmp>
    78a4:	mov	r5, r0
    78a8:	b	6ba0 <gen_linktype+0xe4>
    78ac:	bl	ebc <abort@plt>
    78b0:	.word	0x0002a79c
    78b4:	.word	0x0000d0f4
    78b8:	.word	0x0002a798
    78bc:	.word	0x0002a784
    78c0:	.word	0x0002a3c8
    78c4:	.word	0x0002a390
    78c8:	.word	0x0002a2b8
    78cc:	.word	0x0002a1dc
    78d0:	.word	0x0002a14c
    78d4:	.word	0x0002a0fc
    78d8:	.word	0x0002a0bc
    78dc:	.word	0x0002a030
    78e0:	.word	0x00029f68
    78e4:	.word	0x00029f38
    78e8:	.word	0x00029f1c
    78ec:	.word	0x00029e28
    78f0:	.word	0x00029df8
    78f4:	.word	0x00029d9c
    78f8:	.word	0x00029d48
    78fc:	.word	0x00029d24
    7900:	.word	0x0000c594
    7904:	.word	0x00029bc4
    7908:	.word	0x00029ba0
    790c:	.word	0x0000c538
    7910:	.word	0x0000c55c
    7914:	.word	0x0000c584
    7918:	.word	0x0000c5a8
    791c:	.word	0x0000c5cc
    7920:	.word	0x0000c5f0
    7924:	.word	0x0000c614
    7928:	.word	0x0000c63c
    792c:	.word	0x0000c660
    7930:	.word	0x0000c68c
    7934:	.word	0x0000c6b8
    7938:	.word	0x0000c6dc
    793c:	.word	0x0000c700
    7940:	.word	0x0000c724
    7944:	.word	0x00029adc

00007948 <gen_proto>:
    7948:	strd	r4, [sp, #-16]!
    794c:	str	r6, [sp, #8]
    7950:	str	lr, [sp, #12]
    7954:	cmp	r2, #0
    7958:	bne	7a10 <gen_proto+0xc8>
    795c:	mov	r4, r0
    7960:	cmp	r1, #40	; 0x28
    7964:	addls	pc, pc, r1, lsl #2
    7968:	b	7cc4 <gen_proto+0x37c>
    796c:	b	7a1c <gen_proto+0xd4>
    7970:	b	7bd0 <gen_proto+0x288>
    7974:	b	7a60 <gen_proto+0x118>
    7978:	b	7b70 <gen_proto+0x228>
    797c:	b	7b7c <gen_proto+0x234>
    7980:	b	7bf4 <gen_proto+0x2ac>
    7984:	b	7be8 <gen_proto+0x2a0>
    7988:	b	7bdc <gen_proto+0x294>
    798c:	b	7c00 <gen_proto+0x2b8>
    7990:	b	7c0c <gen_proto+0x2c4>
    7994:	b	7c18 <gen_proto+0x2d0>
    7998:	b	7b88 <gen_proto+0x240>
    799c:	b	7b94 <gen_proto+0x24c>
    79a0:	b	7bac <gen_proto+0x264>
    79a4:	b	7ba0 <gen_proto+0x258>
    79a8:	b	7bb8 <gen_proto+0x270>
    79ac:	b	7bc4 <gen_proto+0x27c>
    79b0:	b	7c3c <gen_proto+0x2f4>
    79b4:	b	7c70 <gen_proto+0x328>
    79b8:	b	7c7c <gen_proto+0x334>
    79bc:	b	7c88 <gen_proto+0x340>
    79c0:	b	7c24 <gen_proto+0x2dc>
    79c4:	b	7c30 <gen_proto+0x2e8>
    79c8:	b	7cc4 <gen_proto+0x37c>
    79cc:	b	7a94 <gen_proto+0x14c>
    79d0:	b	7cc4 <gen_proto+0x37c>
    79d4:	b	7b34 <gen_proto+0x1ec>
    79d8:	b	7cc4 <gen_proto+0x37c>
    79dc:	b	7c94 <gen_proto+0x34c>
    79e0:	b	7ca0 <gen_proto+0x358>
    79e4:	b	7cac <gen_proto+0x364>
    79e8:	b	7cc4 <gen_proto+0x37c>
    79ec:	b	7cc4 <gen_proto+0x37c>
    79f0:	b	7cc4 <gen_proto+0x37c>
    79f4:	b	7cc4 <gen_proto+0x37c>
    79f8:	b	7cc4 <gen_proto+0x37c>
    79fc:	b	7cc4 <gen_proto+0x37c>
    7a00:	b	7cc4 <gen_proto+0x37c>
    7a04:	b	7cc4 <gen_proto+0x37c>
    7a08:	b	7cc4 <gen_proto+0x37c>
    7a0c:	b	7cb8 <gen_proto+0x370>
    7a10:	ldr	r0, [pc, #688]	; 7cc8 <gen_proto+0x380>
    7a14:	add	r0, pc, r0
    7a18:	bl	229c <sf_bpf_error>
    7a1c:	mov	r2, #0
    7a20:	mov	r1, #2
    7a24:	bl	7948 <gen_proto>
    7a28:	mov	r5, r0
    7a2c:	mov	r2, #0
    7a30:	mov	r1, #17
    7a34:	mov	r0, r4
    7a38:	bl	7948 <gen_proto>
    7a3c:	mov	r4, r0
    7a40:	mov	r1, r0
    7a44:	mov	r0, r5
    7a48:	bl	3ac0 <sf_gen_or>
    7a4c:	mov	r0, r4
    7a50:	ldrd	r4, [sp]
    7a54:	ldr	r6, [sp, #8]
    7a58:	add	sp, sp, #12
    7a5c:	pop	{pc}		; (ldr pc, [sp], #4)
    7a60:	mov	r0, #2048	; 0x800
    7a64:	bl	6abc <gen_linktype>
    7a68:	mov	r5, r0
    7a6c:	mov	r3, r4
    7a70:	mov	r2, #16
    7a74:	mov	r1, #9
    7a78:	mov	r0, #3
    7a7c:	bl	4908 <gen_cmp>
    7a80:	mov	r4, r0
    7a84:	mov	r1, r0
    7a88:	mov	r0, r5
    7a8c:	bl	3a30 <sf_gen_and>
    7a90:	b	7a4c <gen_proto+0x104>
    7a94:	ldr	r3, [pc, #560]	; 7ccc <gen_proto+0x384>
    7a98:	add	r3, pc, r3
    7a9c:	ldr	r3, [r3, #852]	; 0x354
    7aa0:	cmp	r3, #104	; 0x68
    7aa4:	beq	7acc <gen_proto+0x184>
    7aa8:	cmp	r3, #107	; 0x6b
    7aac:	bne	7b00 <gen_proto+0x1b8>
    7ab0:	orr	r3, r0, #768	; 0x300
    7ab4:	mov	r2, #8
    7ab8:	mov	r1, #2
    7abc:	mov	r0, #1
    7ac0:	bl	4908 <gen_cmp>
    7ac4:	mov	r4, r0
    7ac8:	b	7a4c <gen_proto+0x104>
    7acc:	movw	r0, #65278	; 0xfefe
    7ad0:	bl	6abc <gen_linktype>
    7ad4:	mov	r5, r0
    7ad8:	mov	r3, r4
    7adc:	mov	r2, #16
    7ae0:	mov	r1, #1
    7ae4:	mov	r0, #4
    7ae8:	bl	4908 <gen_cmp>
    7aec:	mov	r4, r0
    7af0:	mov	r1, r0
    7af4:	mov	r0, r5
    7af8:	bl	3a30 <sf_gen_and>
    7afc:	b	7a4c <gen_proto+0x104>
    7b00:	mov	r0, #254	; 0xfe
    7b04:	bl	6abc <gen_linktype>
    7b08:	mov	r5, r0
    7b0c:	mov	r3, r4
    7b10:	mov	r2, #16
    7b14:	mov	r1, #0
    7b18:	mov	r0, #4
    7b1c:	bl	4908 <gen_cmp>
    7b20:	mov	r4, r0
    7b24:	mov	r1, r0
    7b28:	mov	r0, r5
    7b2c:	bl	3a30 <sf_gen_and>
    7b30:	b	7a4c <gen_proto+0x104>
    7b34:	mov	r2, #0
    7b38:	mov	r1, #24
    7b3c:	mov	r0, #131	; 0x83
    7b40:	bl	7948 <gen_proto>
    7b44:	mov	r5, r0
    7b48:	mov	r3, r4
    7b4c:	mov	r2, #16
    7b50:	mov	r1, #4
    7b54:	mov	r0, r1
    7b58:	bl	4908 <gen_cmp>
    7b5c:	mov	r4, r0
    7b60:	mov	r1, r0
    7b64:	mov	r0, r5
    7b68:	bl	3a30 <sf_gen_and>
    7b6c:	b	7a4c <gen_proto+0x104>
    7b70:	ldr	r0, [pc, #344]	; 7cd0 <gen_proto+0x388>
    7b74:	add	r0, pc, r0
    7b78:	bl	229c <sf_bpf_error>
    7b7c:	ldr	r0, [pc, #336]	; 7cd4 <gen_proto+0x38c>
    7b80:	add	r0, pc, r0
    7b84:	bl	229c <sf_bpf_error>
    7b88:	ldr	r0, [pc, #328]	; 7cd8 <gen_proto+0x390>
    7b8c:	add	r0, pc, r0
    7b90:	bl	229c <sf_bpf_error>
    7b94:	ldr	r0, [pc, #320]	; 7cdc <gen_proto+0x394>
    7b98:	add	r0, pc, r0
    7b9c:	bl	229c <sf_bpf_error>
    7ba0:	ldr	r0, [pc, #312]	; 7ce0 <gen_proto+0x398>
    7ba4:	add	r0, pc, r0
    7ba8:	bl	229c <sf_bpf_error>
    7bac:	ldr	r0, [pc, #304]	; 7ce4 <gen_proto+0x39c>
    7bb0:	add	r0, pc, r0
    7bb4:	bl	229c <sf_bpf_error>
    7bb8:	ldr	r0, [pc, #296]	; 7ce8 <gen_proto+0x3a0>
    7bbc:	add	r0, pc, r0
    7bc0:	bl	229c <sf_bpf_error>
    7bc4:	ldr	r0, [pc, #288]	; 7cec <gen_proto+0x3a4>
    7bc8:	add	r0, pc, r0
    7bcc:	bl	229c <sf_bpf_error>
    7bd0:	bl	6abc <gen_linktype>
    7bd4:	mov	r4, r0
    7bd8:	b	7a4c <gen_proto+0x104>
    7bdc:	ldr	r0, [pc, #268]	; 7cf0 <gen_proto+0x3a8>
    7be0:	add	r0, pc, r0
    7be4:	bl	229c <sf_bpf_error>
    7be8:	ldr	r0, [pc, #260]	; 7cf4 <gen_proto+0x3ac>
    7bec:	add	r0, pc, r0
    7bf0:	bl	229c <sf_bpf_error>
    7bf4:	ldr	r0, [pc, #252]	; 7cf8 <gen_proto+0x3b0>
    7bf8:	add	r0, pc, r0
    7bfc:	bl	229c <sf_bpf_error>
    7c00:	ldr	r0, [pc, #244]	; 7cfc <gen_proto+0x3b4>
    7c04:	add	r0, pc, r0
    7c08:	bl	229c <sf_bpf_error>
    7c0c:	ldr	r0, [pc, #236]	; 7d00 <gen_proto+0x3b8>
    7c10:	add	r0, pc, r0
    7c14:	bl	229c <sf_bpf_error>
    7c18:	ldr	r0, [pc, #228]	; 7d04 <gen_proto+0x3bc>
    7c1c:	add	r0, pc, r0
    7c20:	bl	229c <sf_bpf_error>
    7c24:	ldr	r0, [pc, #220]	; 7d08 <gen_proto+0x3c0>
    7c28:	add	r0, pc, r0
    7c2c:	bl	229c <sf_bpf_error>
    7c30:	ldr	r0, [pc, #212]	; 7d0c <gen_proto+0x3c4>
    7c34:	add	r0, pc, r0
    7c38:	bl	229c <sf_bpf_error>
    7c3c:	movw	r0, #34525	; 0x86dd
    7c40:	bl	6abc <gen_linktype>
    7c44:	mov	r5, r0
    7c48:	mov	r3, r4
    7c4c:	mov	r2, #16
    7c50:	mov	r1, #6
    7c54:	mov	r0, #3
    7c58:	bl	4908 <gen_cmp>
    7c5c:	mov	r4, r0
    7c60:	mov	r1, r0
    7c64:	mov	r0, r5
    7c68:	bl	3a30 <sf_gen_and>
    7c6c:	b	7a4c <gen_proto+0x104>
    7c70:	ldr	r0, [pc, #152]	; 7d10 <gen_proto+0x3c8>
    7c74:	add	r0, pc, r0
    7c78:	bl	229c <sf_bpf_error>
    7c7c:	ldr	r0, [pc, #144]	; 7d14 <gen_proto+0x3cc>
    7c80:	add	r0, pc, r0
    7c84:	bl	229c <sf_bpf_error>
    7c88:	ldr	r0, [pc, #136]	; 7d18 <gen_proto+0x3d0>
    7c8c:	add	r0, pc, r0
    7c90:	bl	229c <sf_bpf_error>
    7c94:	ldr	r0, [pc, #128]	; 7d1c <gen_proto+0x3d4>
    7c98:	add	r0, pc, r0
    7c9c:	bl	229c <sf_bpf_error>
    7ca0:	ldr	r0, [pc, #120]	; 7d20 <gen_proto+0x3d8>
    7ca4:	add	r0, pc, r0
    7ca8:	bl	229c <sf_bpf_error>
    7cac:	ldr	r0, [pc, #112]	; 7d24 <gen_proto+0x3dc>
    7cb0:	add	r0, pc, r0
    7cb4:	bl	229c <sf_bpf_error>
    7cb8:	ldr	r0, [pc, #104]	; 7d28 <gen_proto+0x3e0>
    7cbc:	add	r0, pc, r0
    7cc0:	bl	229c <sf_bpf_error>
    7cc4:	bl	ebc <abort@plt>
    7cc8:	.word	0x0000c5b8
    7ccc:	.word	0x000298c8
    7cd0:	.word	0x0000c478
    7cd4:	.word	0x0000c498
    7cd8:	.word	0x0000c4b8
    7cdc:	.word	0x0000c4d4
    7ce0:	.word	0x0000c4f0
    7ce4:	.word	0x0000c510
    7ce8:	.word	0x0000c530
    7cec:	.word	0x0000c550
    7cf0:	.word	0x0000c564
    7cf4:	.word	0x0000c570
    7cf8:	.word	0x0000c57c
    7cfc:	.word	0x0000c588
    7d00:	.word	0x0000c594
    7d04:	.word	0x0000c5a0
    7d08:	.word	0x0000c5ac
    7d0c:	.word	0x0000c5b8
    7d10:	.word	0x0000c590
    7d14:	.word	0x0000c59c
    7d18:	.word	0x0000c590
    7d1c:	.word	0x0000c598
    7d20:	.word	0x0000c5a4
    7d24:	.word	0x0000c5b0
    7d28:	.word	0x0000c5c0

00007d2c <sf_gen_proto_abbrev>:
    7d2c:	strd	r4, [sp, #-16]!
    7d30:	str	r6, [sp, #8]
    7d34:	str	lr, [sp, #12]
    7d38:	sub	r0, r0, #1
    7d3c:	cmp	r0, #39	; 0x27
    7d40:	addls	pc, pc, r0, lsl #2
    7d44:	b	8340 <sf_gen_proto_abbrev+0x614>
    7d48:	b	7f48 <sf_gen_proto_abbrev+0x21c>
    7d4c:	b	7f18 <sf_gen_proto_abbrev+0x1ec>
    7d50:	b	7f28 <sf_gen_proto_abbrev+0x1fc>
    7d54:	b	7f38 <sf_gen_proto_abbrev+0x20c>
    7d58:	b	7de8 <sf_gen_proto_abbrev+0xbc>
    7d5c:	b	7e28 <sf_gen_proto_abbrev+0xfc>
    7d60:	b	7e58 <sf_gen_proto_abbrev+0x12c>
    7d64:	b	7e88 <sf_gen_proto_abbrev+0x15c>
    7d68:	b	7ea0 <sf_gen_proto_abbrev+0x174>
    7d6c:	b	7eb8 <sf_gen_proto_abbrev+0x18c>
    7d70:	b	7f54 <sf_gen_proto_abbrev+0x228>
    7d74:	b	7f74 <sf_gen_proto_abbrev+0x248>
    7d78:	b	7f94 <sf_gen_proto_abbrev+0x268>
    7d7c:	b	7f84 <sf_gen_proto_abbrev+0x258>
    7d80:	b	7fb4 <sf_gen_proto_abbrev+0x288>
    7d84:	b	7fa4 <sf_gen_proto_abbrev+0x278>
    7d88:	b	7fc4 <sf_gen_proto_abbrev+0x298>
    7d8c:	b	7fd4 <sf_gen_proto_abbrev+0x2a8>
    7d90:	b	7fec <sf_gen_proto_abbrev+0x2c0>
    7d94:	b	801c <sf_gen_proto_abbrev+0x2f0>
    7d98:	b	7ed0 <sf_gen_proto_abbrev+0x1a4>
    7d9c:	b	7f00 <sf_gen_proto_abbrev+0x1d4>
    7da0:	b	7f64 <sf_gen_proto_abbrev+0x238>
    7da4:	b	804c <sf_gen_proto_abbrev+0x320>
    7da8:	b	805c <sf_gen_proto_abbrev+0x330>
    7dac:	b	8074 <sf_gen_proto_abbrev+0x348>
    7db0:	b	82ec <sf_gen_proto_abbrev+0x5c0>
    7db4:	b	8304 <sf_gen_proto_abbrev+0x5d8>
    7db8:	b	8314 <sf_gen_proto_abbrev+0x5e8>
    7dbc:	b	8324 <sf_gen_proto_abbrev+0x5f8>
    7dc0:	b	808c <sf_gen_proto_abbrev+0x360>
    7dc4:	b	810c <sf_gen_proto_abbrev+0x3e0>
    7dc8:	b	818c <sf_gen_proto_abbrev+0x460>
    7dcc:	b	8340 <sf_gen_proto_abbrev+0x614>
    7dd0:	b	8340 <sf_gen_proto_abbrev+0x614>
    7dd4:	b	8214 <sf_gen_proto_abbrev+0x4e8>
    7dd8:	b	827c <sf_gen_proto_abbrev+0x550>
    7ddc:	b	82b4 <sf_gen_proto_abbrev+0x588>
    7de0:	b	81dc <sf_gen_proto_abbrev+0x4b0>
    7de4:	b	8334 <sf_gen_proto_abbrev+0x608>
    7de8:	mov	r2, #0
    7dec:	mov	r1, #2
    7df0:	mov	r0, #132	; 0x84
    7df4:	bl	7948 <gen_proto>
    7df8:	mov	r4, r0
    7dfc:	mov	r2, #0
    7e00:	mov	r1, #17
    7e04:	mov	r0, #132	; 0x84
    7e08:	bl	7948 <gen_proto>
    7e0c:	mov	r1, r4
    7e10:	bl	3ac0 <sf_gen_or>
    7e14:	mov	r0, r4
    7e18:	ldrd	r4, [sp]
    7e1c:	ldr	r6, [sp, #8]
    7e20:	add	sp, sp, #12
    7e24:	pop	{pc}		; (ldr pc, [sp], #4)
    7e28:	mov	r2, #0
    7e2c:	mov	r1, #2
    7e30:	mov	r0, #6
    7e34:	bl	7948 <gen_proto>
    7e38:	mov	r4, r0
    7e3c:	mov	r2, #0
    7e40:	mov	r1, #17
    7e44:	mov	r0, #6
    7e48:	bl	7948 <gen_proto>
    7e4c:	mov	r1, r4
    7e50:	bl	3ac0 <sf_gen_or>
    7e54:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7e58:	mov	r2, #0
    7e5c:	mov	r1, #2
    7e60:	mov	r0, #17
    7e64:	bl	7948 <gen_proto>
    7e68:	mov	r4, r0
    7e6c:	mov	r2, #0
    7e70:	mov	r1, #17
    7e74:	mov	r0, r1
    7e78:	bl	7948 <gen_proto>
    7e7c:	mov	r1, r4
    7e80:	bl	3ac0 <sf_gen_or>
    7e84:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7e88:	mov	r2, #0
    7e8c:	mov	r1, #2
    7e90:	mov	r0, #1
    7e94:	bl	7948 <gen_proto>
    7e98:	mov	r4, r0
    7e9c:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7ea0:	mov	r2, #0
    7ea4:	mov	r1, #2
    7ea8:	mov	r0, r1
    7eac:	bl	7948 <gen_proto>
    7eb0:	mov	r4, r0
    7eb4:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7eb8:	mov	r2, #0
    7ebc:	mov	r1, #2
    7ec0:	mov	r0, #9
    7ec4:	bl	7948 <gen_proto>
    7ec8:	mov	r4, r0
    7ecc:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7ed0:	mov	r2, #0
    7ed4:	mov	r1, #2
    7ed8:	mov	r0, #103	; 0x67
    7edc:	bl	7948 <gen_proto>
    7ee0:	mov	r4, r0
    7ee4:	mov	r2, #0
    7ee8:	mov	r1, #17
    7eec:	mov	r0, #103	; 0x67
    7ef0:	bl	7948 <gen_proto>
    7ef4:	mov	r1, r4
    7ef8:	bl	3ac0 <sf_gen_or>
    7efc:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f00:	mov	r2, #0
    7f04:	mov	r1, #2
    7f08:	mov	r0, #112	; 0x70
    7f0c:	bl	7948 <gen_proto>
    7f10:	mov	r4, r0
    7f14:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f18:	mov	r0, #2048	; 0x800
    7f1c:	bl	6abc <gen_linktype>
    7f20:	mov	r4, r0
    7f24:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f28:	movw	r0, #2054	; 0x806
    7f2c:	bl	6abc <gen_linktype>
    7f30:	mov	r4, r0
    7f34:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f38:	movw	r0, #32821	; 0x8035
    7f3c:	bl	6abc <gen_linktype>
    7f40:	mov	r4, r0
    7f44:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f48:	ldr	r0, [pc, #1012]	; 8344 <sf_gen_proto_abbrev+0x618>
    7f4c:	add	r0, pc, r0
    7f50:	bl	229c <sf_bpf_error>
    7f54:	movw	r0, #32923	; 0x809b
    7f58:	bl	6abc <gen_linktype>
    7f5c:	mov	r4, r0
    7f60:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f64:	movw	r0, #33011	; 0x80f3
    7f68:	bl	6abc <gen_linktype>
    7f6c:	mov	r4, r0
    7f70:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f74:	movw	r0, #24579	; 0x6003
    7f78:	bl	6abc <gen_linktype>
    7f7c:	mov	r4, r0
    7f80:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f84:	movw	r0, #24583	; 0x6007
    7f88:	bl	6abc <gen_linktype>
    7f8c:	mov	r4, r0
    7f90:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7f94:	movw	r0, #24580	; 0x6004
    7f98:	bl	6abc <gen_linktype>
    7f9c:	mov	r4, r0
    7fa0:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7fa4:	movw	r0, #24577	; 0x6001
    7fa8:	bl	6abc <gen_linktype>
    7fac:	mov	r4, r0
    7fb0:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7fb4:	movw	r0, #24578	; 0x6002
    7fb8:	bl	6abc <gen_linktype>
    7fbc:	mov	r4, r0
    7fc0:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7fc4:	movw	r0, #34525	; 0x86dd
    7fc8:	bl	6abc <gen_linktype>
    7fcc:	mov	r4, r0
    7fd0:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7fd4:	mov	r2, #0
    7fd8:	mov	r1, #17
    7fdc:	mov	r0, #58	; 0x3a
    7fe0:	bl	7948 <gen_proto>
    7fe4:	mov	r4, r0
    7fe8:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    7fec:	mov	r2, #0
    7ff0:	mov	r1, #2
    7ff4:	mov	r0, #51	; 0x33
    7ff8:	bl	7948 <gen_proto>
    7ffc:	mov	r4, r0
    8000:	mov	r2, #0
    8004:	mov	r1, #17
    8008:	mov	r0, #51	; 0x33
    800c:	bl	7948 <gen_proto>
    8010:	mov	r1, r4
    8014:	bl	3ac0 <sf_gen_or>
    8018:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    801c:	mov	r2, #0
    8020:	mov	r1, #2
    8024:	mov	r0, #50	; 0x32
    8028:	bl	7948 <gen_proto>
    802c:	mov	r4, r0
    8030:	mov	r2, #0
    8034:	mov	r1, #17
    8038:	mov	r0, #50	; 0x32
    803c:	bl	7948 <gen_proto>
    8040:	mov	r1, r4
    8044:	bl	3ac0 <sf_gen_or>
    8048:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    804c:	mov	r0, #254	; 0xfe
    8050:	bl	6abc <gen_linktype>
    8054:	mov	r4, r0
    8058:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    805c:	mov	r2, #0
    8060:	mov	r1, #24
    8064:	mov	r0, #130	; 0x82
    8068:	bl	7948 <gen_proto>
    806c:	mov	r4, r0
    8070:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8074:	mov	r2, #0
    8078:	mov	r1, #24
    807c:	mov	r0, #131	; 0x83
    8080:	bl	7948 <gen_proto>
    8084:	mov	r4, r0
    8088:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    808c:	mov	r2, #0
    8090:	mov	r1, #26
    8094:	mov	r0, #15
    8098:	bl	7948 <gen_proto>
    809c:	mov	r5, r0
    80a0:	mov	r2, #0
    80a4:	mov	r1, #26
    80a8:	mov	r0, #17
    80ac:	bl	7948 <gen_proto>
    80b0:	mov	r4, r0
    80b4:	mov	r1, r0
    80b8:	mov	r0, r5
    80bc:	bl	3ac0 <sf_gen_or>
    80c0:	mov	r2, #0
    80c4:	mov	r1, #26
    80c8:	mov	r0, #18
    80cc:	bl	7948 <gen_proto>
    80d0:	mov	r1, r4
    80d4:	bl	3ac0 <sf_gen_or>
    80d8:	mov	r2, #0
    80dc:	mov	r1, #26
    80e0:	mov	r0, #24
    80e4:	bl	7948 <gen_proto>
    80e8:	mov	r1, r4
    80ec:	bl	3ac0 <sf_gen_or>
    80f0:	mov	r2, #0
    80f4:	mov	r1, #26
    80f8:	mov	r0, r1
    80fc:	bl	7948 <gen_proto>
    8100:	mov	r1, r4
    8104:	bl	3ac0 <sf_gen_or>
    8108:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    810c:	mov	r2, #0
    8110:	mov	r1, #26
    8114:	mov	r0, #16
    8118:	bl	7948 <gen_proto>
    811c:	mov	r5, r0
    8120:	mov	r2, #0
    8124:	mov	r1, #26
    8128:	mov	r0, #17
    812c:	bl	7948 <gen_proto>
    8130:	mov	r4, r0
    8134:	mov	r1, r0
    8138:	mov	r0, r5
    813c:	bl	3ac0 <sf_gen_or>
    8140:	mov	r2, #0
    8144:	mov	r1, #26
    8148:	mov	r0, #20
    814c:	bl	7948 <gen_proto>
    8150:	mov	r1, r4
    8154:	bl	3ac0 <sf_gen_or>
    8158:	mov	r2, #0
    815c:	mov	r1, #26
    8160:	mov	r0, #25
    8164:	bl	7948 <gen_proto>
    8168:	mov	r1, r4
    816c:	bl	3ac0 <sf_gen_or>
    8170:	mov	r2, #0
    8174:	mov	r1, #26
    8178:	mov	r0, #27
    817c:	bl	7948 <gen_proto>
    8180:	mov	r1, r4
    8184:	bl	3ac0 <sf_gen_or>
    8188:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    818c:	mov	r2, #0
    8190:	mov	r1, #26
    8194:	mov	r0, #15
    8198:	bl	7948 <gen_proto>
    819c:	mov	r5, r0
    81a0:	mov	r2, #0
    81a4:	mov	r1, #26
    81a8:	mov	r0, #16
    81ac:	bl	7948 <gen_proto>
    81b0:	mov	r4, r0
    81b4:	mov	r1, r0
    81b8:	mov	r0, r5
    81bc:	bl	3ac0 <sf_gen_or>
    81c0:	mov	r2, #0
    81c4:	mov	r1, #26
    81c8:	mov	r0, #17
    81cc:	bl	7948 <gen_proto>
    81d0:	mov	r1, r4
    81d4:	bl	3ac0 <sf_gen_or>
    81d8:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    81dc:	mov	r2, #0
    81e0:	mov	r1, #26
    81e4:	mov	r0, #18
    81e8:	bl	7948 <gen_proto>
    81ec:	mov	r5, r0
    81f0:	mov	r2, #0
    81f4:	mov	r1, #26
    81f8:	mov	r0, #20
    81fc:	bl	7948 <gen_proto>
    8200:	mov	r4, r0
    8204:	mov	r1, r0
    8208:	mov	r0, r5
    820c:	bl	3ac0 <sf_gen_or>
    8210:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8214:	mov	r2, #0
    8218:	mov	r1, #26
    821c:	mov	r0, #24
    8220:	bl	7948 <gen_proto>
    8224:	mov	r5, r0
    8228:	mov	r2, #0
    822c:	mov	r1, #26
    8230:	mov	r0, #25
    8234:	bl	7948 <gen_proto>
    8238:	mov	r4, r0
    823c:	mov	r1, r0
    8240:	mov	r0, r5
    8244:	bl	3ac0 <sf_gen_or>
    8248:	mov	r2, #0
    824c:	mov	r1, #26
    8250:	mov	r0, r1
    8254:	bl	7948 <gen_proto>
    8258:	mov	r1, r4
    825c:	bl	3ac0 <sf_gen_or>
    8260:	mov	r2, #0
    8264:	mov	r1, #26
    8268:	mov	r0, #27
    826c:	bl	7948 <gen_proto>
    8270:	mov	r1, r4
    8274:	bl	3ac0 <sf_gen_or>
    8278:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    827c:	mov	r2, #0
    8280:	mov	r1, #26
    8284:	mov	r0, #24
    8288:	bl	7948 <gen_proto>
    828c:	mov	r5, r0
    8290:	mov	r2, #0
    8294:	mov	r1, #26
    8298:	mov	r0, #25
    829c:	bl	7948 <gen_proto>
    82a0:	mov	r4, r0
    82a4:	mov	r1, r0
    82a8:	mov	r0, r5
    82ac:	bl	3ac0 <sf_gen_or>
    82b0:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    82b4:	mov	r2, #0
    82b8:	mov	r1, #26
    82bc:	mov	r0, r1
    82c0:	bl	7948 <gen_proto>
    82c4:	mov	r5, r0
    82c8:	mov	r2, #0
    82cc:	mov	r1, #26
    82d0:	mov	r0, #27
    82d4:	bl	7948 <gen_proto>
    82d8:	mov	r4, r0
    82dc:	mov	r1, r0
    82e0:	mov	r0, r5
    82e4:	bl	3ac0 <sf_gen_or>
    82e8:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    82ec:	mov	r2, #0
    82f0:	mov	r1, #24
    82f4:	mov	r0, #129	; 0x81
    82f8:	bl	7948 <gen_proto>
    82fc:	mov	r4, r0
    8300:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8304:	mov	r0, #66	; 0x42
    8308:	bl	6abc <gen_linktype>
    830c:	mov	r4, r0
    8310:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8314:	mov	r0, #224	; 0xe0
    8318:	bl	6abc <gen_linktype>
    831c:	mov	r4, r0
    8320:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8324:	mov	r0, #240	; 0xf0
    8328:	bl	6abc <gen_linktype>
    832c:	mov	r4, r0
    8330:	b	7e14 <sf_gen_proto_abbrev+0xe8>
    8334:	ldr	r0, [pc, #12]	; 8348 <sf_gen_proto_abbrev+0x61c>
    8338:	add	r0, pc, r0
    833c:	bl	229c <sf_bpf_error>
    8340:	bl	ebc <abort@plt>
    8344:	.word	0x0000c348
    8348:	.word	0x0000bf80

0000834c <sf_gen_load>:
    834c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8350:	strd	r6, [sp, #8]
    8354:	strd	r8, [sp, #16]
    8358:	str	sl, [sp, #24]
    835c:	str	lr, [sp, #28]
    8360:	mov	r7, r0
    8364:	mov	r4, r1
    8368:	mov	r5, r2
    836c:	bl	2488 <alloc_reg>
    8370:	mov	r6, r0
    8374:	ldr	r2, [r4, #8]
    8378:	ldr	r3, [pc, #1024]	; 8780 <sf_gen_load+0x434>
    837c:	add	r3, pc, r3
    8380:	add	r3, r3, r2, lsl #2
    8384:	mov	r2, #0
    8388:	str	r2, [r3, #788]	; 0x314
    838c:	cmp	r5, #2
    8390:	beq	83b0 <sf_gen_load+0x64>
    8394:	cmp	r5, #4
    8398:	beq	83b8 <sf_gen_load+0x6c>
    839c:	cmp	r5, #1
    83a0:	beq	846c <sf_gen_load+0x120>
    83a4:	ldr	r0, [pc, #984]	; 8784 <sf_gen_load+0x438>
    83a8:	add	r0, pc, r0
    83ac:	bl	229c <sf_bpf_error>
    83b0:	mov	r5, #8
    83b4:	b	83bc <sf_gen_load+0x70>
    83b8:	mov	r5, #0
    83bc:	sub	r3, r7, #1
    83c0:	cmp	r3, #39	; 0x27
    83c4:	addls	pc, pc, r3, lsl #2
    83c8:	b	8474 <sf_gen_load+0x128>
    83cc:	b	84e0 <sf_gen_load+0x194>
    83d0:	b	85c0 <sf_gen_load+0x274>
    83d4:	b	85c0 <sf_gen_load+0x274>
    83d8:	b	85c0 <sf_gen_load+0x274>
    83dc:	b	8690 <sf_gen_load+0x344>
    83e0:	b	8690 <sf_gen_load+0x344>
    83e4:	b	8690 <sf_gen_load+0x344>
    83e8:	b	8690 <sf_gen_load+0x344>
    83ec:	b	8690 <sf_gen_load+0x344>
    83f0:	b	8690 <sf_gen_load+0x344>
    83f4:	b	85c0 <sf_gen_load+0x274>
    83f8:	b	85c0 <sf_gen_load+0x274>
    83fc:	b	85c0 <sf_gen_load+0x274>
    8400:	b	85c0 <sf_gen_load+0x274>
    8404:	b	85c0 <sf_gen_load+0x274>
    8408:	b	85c0 <sf_gen_load+0x274>
    840c:	b	85c0 <sf_gen_load+0x274>
    8410:	b	8774 <sf_gen_load+0x428>
    8414:	b	8474 <sf_gen_load+0x128>
    8418:	b	8474 <sf_gen_load+0x128>
    841c:	b	8690 <sf_gen_load+0x344>
    8420:	b	8690 <sf_gen_load+0x344>
    8424:	b	8474 <sf_gen_load+0x128>
    8428:	b	8474 <sf_gen_load+0x128>
    842c:	b	8474 <sf_gen_load+0x128>
    8430:	b	8474 <sf_gen_load+0x128>
    8434:	b	8474 <sf_gen_load+0x128>
    8438:	b	8474 <sf_gen_load+0x128>
    843c:	b	8474 <sf_gen_load+0x128>
    8440:	b	8474 <sf_gen_load+0x128>
    8444:	b	8474 <sf_gen_load+0x128>
    8448:	b	8474 <sf_gen_load+0x128>
    844c:	b	8474 <sf_gen_load+0x128>
    8450:	b	8474 <sf_gen_load+0x128>
    8454:	b	8474 <sf_gen_load+0x128>
    8458:	b	8474 <sf_gen_load+0x128>
    845c:	b	8474 <sf_gen_load+0x128>
    8460:	b	8474 <sf_gen_load+0x128>
    8464:	b	8474 <sf_gen_load+0x128>
    8468:	b	8480 <sf_gen_load+0x134>
    846c:	mov	r5, #16
    8470:	b	83bc <sf_gen_load+0x70>
    8474:	ldr	r0, [pc, #780]	; 8788 <sf_gen_load+0x43c>
    8478:	add	r0, pc, r0
    847c:	bl	229c <sf_bpf_error>
    8480:	ldr	r3, [pc, #772]	; 878c <sf_gen_load+0x440>
    8484:	add	r3, pc, r3
    8488:	ldr	r3, [r3, #852]	; 0x354
    848c:	bic	r2, r3, #8
    8490:	cmp	r2, #119	; 0x77
    8494:	cmpne	r3, #163	; 0xa3
    8498:	bne	84d4 <sf_gen_load+0x188>
    849c:	mov	r0, r4
    84a0:	bl	2428 <xfer_to_x>
    84a4:	mov	r7, r0
    84a8:	mov	r0, #20
    84ac:	bl	22d8 <newchunk>
    84b0:	mov	r1, r0
    84b4:	orr	r5, r5, #64	; 0x40
    84b8:	str	r5, [r0]
    84bc:	mov	r0, r7
    84c0:	bl	3b54 <sf_append>
    84c4:	mov	r1, r7
    84c8:	ldr	r0, [r4, #4]
    84cc:	bl	3b54 <sf_append>
    84d0:	b	8570 <sf_gen_load+0x224>
    84d4:	ldr	r0, [pc, #692]	; 8790 <sf_gen_load+0x444>
    84d8:	add	r0, pc, r0
    84dc:	bl	229c <sf_bpf_error>
    84e0:	bl	2578 <gen_llprefixlen>
    84e4:	subs	r7, r0, #0
    84e8:	beq	85b0 <sf_gen_load+0x264>
    84ec:	mov	r0, r4
    84f0:	bl	2458 <xfer_to_a>
    84f4:	mov	r1, r0
    84f8:	mov	r0, r7
    84fc:	bl	3b54 <sf_append>
    8500:	mov	r0, #20
    8504:	bl	22d8 <newchunk>
    8508:	mov	r1, r0
    850c:	mov	r3, #12
    8510:	str	r3, [r0]
    8514:	mov	r0, r7
    8518:	bl	3b54 <sf_append>
    851c:	mov	r0, #20
    8520:	bl	22d8 <newchunk>
    8524:	mov	r1, r0
    8528:	mov	r3, #7
    852c:	str	r3, [r0]
    8530:	mov	r0, r7
    8534:	bl	3b54 <sf_append>
    8538:	mov	r0, #20
    853c:	bl	22d8 <newchunk>
    8540:	mov	r1, r0
    8544:	orr	r5, r5, #64	; 0x40
    8548:	str	r5, [r0]
    854c:	ldr	r3, [pc, #576]	; 8794 <sf_gen_load+0x448>
    8550:	add	r3, pc, r3
    8554:	ldr	r3, [r3, #936]	; 0x3a8
    8558:	str	r3, [r0, #12]
    855c:	mov	r0, r7
    8560:	bl	3b54 <sf_append>
    8564:	mov	r1, r7
    8568:	ldr	r0, [r4, #4]
    856c:	bl	3b54 <sf_append>
    8570:	str	r6, [r4, #8]
    8574:	mov	r0, #20
    8578:	bl	22d8 <newchunk>
    857c:	mov	r1, r0
    8580:	mov	r3, #2
    8584:	str	r3, [r0]
    8588:	str	r6, [r0, #12]
    858c:	ldr	r0, [r4, #4]
    8590:	bl	3b54 <sf_append>
    8594:	mov	r0, r4
    8598:	ldrd	r4, [sp]
    859c:	ldrd	r6, [sp, #8]
    85a0:	ldrd	r8, [sp, #16]
    85a4:	ldr	sl, [sp, #24]
    85a8:	add	sp, sp, #28
    85ac:	pop	{pc}		; (ldr pc, [sp], #4)
    85b0:	mov	r0, r4
    85b4:	bl	2428 <xfer_to_x>
    85b8:	mov	r7, r0
    85bc:	b	8538 <sf_gen_load+0x1ec>
    85c0:	bl	2724 <gen_off_macpl>
    85c4:	subs	r8, r0, #0
    85c8:	beq	8680 <sf_gen_load+0x334>
    85cc:	mov	r0, r4
    85d0:	bl	2458 <xfer_to_a>
    85d4:	mov	r1, r0
    85d8:	mov	r0, r8
    85dc:	bl	3b54 <sf_append>
    85e0:	mov	r0, #20
    85e4:	bl	22d8 <newchunk>
    85e8:	mov	r1, r0
    85ec:	mov	r3, #12
    85f0:	str	r3, [r0]
    85f4:	mov	r0, r8
    85f8:	bl	3b54 <sf_append>
    85fc:	mov	r0, #20
    8600:	bl	22d8 <newchunk>
    8604:	mov	r1, r0
    8608:	mov	r3, #7
    860c:	str	r3, [r0]
    8610:	mov	r0, r8
    8614:	bl	3b54 <sf_append>
    8618:	mov	r0, #20
    861c:	bl	22d8 <newchunk>
    8620:	mov	r1, r0
    8624:	orr	r5, r5, #64	; 0x40
    8628:	str	r5, [r0]
    862c:	ldr	r2, [pc, #356]	; 8798 <sf_gen_load+0x44c>
    8630:	add	r2, pc, r2
    8634:	ldr	r3, [r2, #940]	; 0x3ac
    8638:	ldr	r2, [r2, #948]	; 0x3b4
    863c:	add	r3, r3, r2
    8640:	str	r3, [r0, #12]
    8644:	mov	r0, r8
    8648:	bl	3b54 <sf_append>
    864c:	mov	r1, r8
    8650:	ldr	r0, [r4, #4]
    8654:	bl	3b54 <sf_append>
    8658:	mov	r0, r7
    865c:	bl	7d2c <sf_gen_proto_abbrev>
    8660:	mov	r5, r0
    8664:	ldr	r0, [r4]
    8668:	cmp	r0, #0
    866c:	beq	8678 <sf_gen_load+0x32c>
    8670:	mov	r1, r5
    8674:	bl	3a30 <sf_gen_and>
    8678:	str	r5, [r4]
    867c:	b	8570 <sf_gen_load+0x224>
    8680:	mov	r0, r4
    8684:	bl	2428 <xfer_to_x>
    8688:	mov	r8, r0
    868c:	b	8618 <sf_gen_load+0x2cc>
    8690:	bl	4544 <gen_loadx_iphdrlen>
    8694:	mov	r8, r0
    8698:	mov	r0, r4
    869c:	bl	2458 <xfer_to_a>
    86a0:	mov	r1, r0
    86a4:	mov	r0, r8
    86a8:	bl	3b54 <sf_append>
    86ac:	mov	r0, #20
    86b0:	bl	22d8 <newchunk>
    86b4:	mov	r1, r0
    86b8:	mov	r3, #12
    86bc:	str	r3, [r0]
    86c0:	mov	r0, r8
    86c4:	bl	3b54 <sf_append>
    86c8:	mov	r0, #20
    86cc:	bl	22d8 <newchunk>
    86d0:	mov	r1, r0
    86d4:	mov	r3, #7
    86d8:	str	r3, [r0]
    86dc:	mov	r0, r8
    86e0:	bl	3b54 <sf_append>
    86e4:	mov	r0, #20
    86e8:	bl	22d8 <newchunk>
    86ec:	mov	r9, r0
    86f0:	orr	r5, r5, #64	; 0x40
    86f4:	str	r5, [r0]
    86f8:	mov	r1, r0
    86fc:	mov	r0, r8
    8700:	bl	3b54 <sf_append>
    8704:	ldr	r2, [pc, #144]	; 879c <sf_gen_load+0x450>
    8708:	add	r2, pc, r2
    870c:	ldr	r3, [r2, #940]	; 0x3ac
    8710:	ldr	r2, [r2, #948]	; 0x3b4
    8714:	add	r3, r3, r2
    8718:	str	r3, [r9, #12]
    871c:	mov	r1, r8
    8720:	ldr	r0, [r4, #4]
    8724:	bl	3b54 <sf_append>
    8728:	mov	r0, r7
    872c:	bl	7d2c <sf_gen_proto_abbrev>
    8730:	mov	r7, r0
    8734:	bl	46d0 <gen_ipfrag>
    8738:	mov	r5, r0
    873c:	mov	r1, r0
    8740:	mov	r0, r7
    8744:	bl	3a30 <sf_gen_and>
    8748:	ldr	r0, [r4]
    874c:	cmp	r0, #0
    8750:	beq	875c <sf_gen_load+0x410>
    8754:	mov	r1, r5
    8758:	bl	3a30 <sf_gen_and>
    875c:	mov	r0, #2
    8760:	bl	7d2c <sf_gen_proto_abbrev>
    8764:	mov	r1, r5
    8768:	bl	3a30 <sf_gen_and>
    876c:	str	r5, [r4]
    8770:	b	8570 <sf_gen_load+0x224>
    8774:	ldr	r0, [pc, #36]	; 87a0 <sf_gen_load+0x454>
    8778:	add	r0, pc, r0
    877c:	bl	229c <sf_bpf_error>
    8780:	.word	0x00028fe4
    8784:	.word	0x0000bf38
    8788:	.word	0x0000be88
    878c:	.word	0x00028edc
    8790:	.word	0x0000be44
    8794:	.word	0x00028e10
    8798:	.word	0x00028d30
    879c:	.word	0x00028c58
    87a0:	.word	0x0000bbd0

000087a4 <sf_gen_inbound>:
    87a4:	strd	r4, [sp, #-12]!
    87a8:	str	lr, [sp, #8]
    87ac:	sub	sp, sp, #12
    87b0:	mov	r4, r0
    87b4:	ldr	r3, [pc, #404]	; 8950 <sf_gen_inbound+0x1ac>
    87b8:	add	r3, pc, r3
    87bc:	ldr	r1, [r3, #852]	; 0x354
    87c0:	cmp	r1, #168	; 0xa8
    87c4:	bgt	8840 <sf_gen_inbound+0x9c>
    87c8:	cmp	r1, #167	; 0xa7
    87cc:	bge	8888 <sf_gen_inbound+0xe4>
    87d0:	cmp	r1, #137	; 0x89
    87d4:	bgt	8810 <sf_gen_inbound+0x6c>
    87d8:	cmp	r1, #130	; 0x82
    87dc:	bge	8888 <sf_gen_inbound+0xe4>
    87e0:	cmp	r1, #8
    87e4:	beq	88c0 <sf_gen_inbound+0x11c>
    87e8:	cmp	r1, #113	; 0x71
    87ec:	bne	88b4 <sf_gen_inbound+0x110>
    87f0:	cmp	r0, #0
    87f4:	beq	8920 <sf_gen_inbound+0x17c>
    87f8:	mov	r3, #4
    87fc:	mov	r2, #8
    8800:	mov	r1, #0
    8804:	mov	r0, #1
    8808:	bl	4908 <gen_cmp>
    880c:	b	88f8 <sf_gen_inbound+0x154>
    8810:	cmp	r1, #164	; 0xa4
    8814:	beq	8888 <sf_gen_inbound+0xe4>
    8818:	cmp	r1, #166	; 0xa6
    881c:	bne	88b4 <sf_gen_inbound+0x110>
    8820:	cmp	r0, #0
    8824:	beq	8938 <sf_gen_inbound+0x194>
    8828:	mov	r3, #1
    882c:	mov	r2, #16
    8830:	mov	r1, #0
    8834:	mov	r0, r3
    8838:	bl	4908 <gen_cmp>
    883c:	b	88f8 <sf_gen_inbound+0x154>
    8840:	cmp	r1, #183	; 0xb7
    8844:	beq	8888 <sf_gen_inbound+0xe4>
    8848:	ble	887c <sf_gen_inbound+0xd8>
    884c:	cmp	r1, #200	; 0xc8
    8850:	beq	8888 <sf_gen_inbound+0xe4>
    8854:	cmp	r1, #226	; 0xe2
    8858:	bne	88ac <sf_gen_inbound+0x108>
    885c:	cmp	r0, #0
    8860:	beq	8908 <sf_gen_inbound+0x164>
    8864:	mov	r3, #1
    8868:	mov	r2, #8
    886c:	mov	r1, #2
    8870:	mov	r0, r3
    8874:	bl	4908 <gen_cmp>
    8878:	b	88f8 <sf_gen_inbound+0x154>
    887c:	sub	r3, r1, #178	; 0xb2
    8880:	cmp	r3, #3
    8884:	bhi	88b4 <sf_gen_inbound+0x110>
    8888:	cmp	r4, #0
    888c:	mov	r0, #1
    8890:	str	r0, [sp]
    8894:	movne	r3, #0
    8898:	moveq	r3, r0
    889c:	mov	r2, #16
    88a0:	mov	r1, #3
    88a4:	bl	5508 <gen_mcmp>
    88a8:	b	88f8 <sf_gen_inbound+0x154>
    88ac:	cmp	r1, #194	; 0xc2
    88b0:	beq	8888 <sf_gen_inbound+0xe4>
    88b4:	ldr	r0, [pc, #152]	; 8954 <sf_gen_inbound+0x1b0>
    88b8:	add	r0, pc, r0
    88bc:	bl	229c <sf_bpf_error>
    88c0:	mov	r0, #0
    88c4:	bl	6264 <sf_gen_loadi>
    88c8:	mov	r2, #1
    88cc:	mov	r1, r0
    88d0:	mov	r0, r2
    88d4:	bl	834c <sf_gen_load>
    88d8:	mov	r5, r0
    88dc:	mov	r0, #0
    88e0:	bl	6264 <sf_gen_loadi>
    88e4:	mov	r3, r4
    88e8:	mov	r2, r0
    88ec:	mov	r1, r5
    88f0:	mov	r0, #16
    88f4:	bl	609c <sf_gen_relation>
    88f8:	add	sp, sp, #12
    88fc:	ldrd	r4, [sp]
    8900:	add	sp, sp, #8
    8904:	pop	{pc}		; (ldr pc, [sp], #4)
    8908:	mov	r3, #2
    890c:	mov	r2, #8
    8910:	mov	r1, r3
    8914:	mov	r0, #1
    8918:	bl	4908 <gen_cmp>
    891c:	b	88f8 <sf_gen_inbound+0x154>
    8920:	mov	r3, #0
    8924:	mov	r2, #8
    8928:	mov	r1, r3
    892c:	mov	r0, #1
    8930:	bl	4908 <gen_cmp>
    8934:	b	88f8 <sf_gen_inbound+0x154>
    8938:	mov	r3, #0
    893c:	mov	r2, #16
    8940:	mov	r1, r3
    8944:	mov	r0, #1
    8948:	bl	4908 <gen_cmp>
    894c:	b	88f8 <sf_gen_inbound+0x154>
    8950:	.word	0x00028ba8
    8954:	.word	0x0000bac8

00008958 <gen_hostop>:
    8958:	strd	r4, [sp, #-28]!	; 0xffffffe4
    895c:	strd	r6, [sp, #8]
    8960:	strd	r8, [sp, #16]
    8964:	str	lr, [sp, #24]
    8968:	sub	sp, sp, #12
    896c:	mov	r5, r0
    8970:	mov	r6, r1
    8974:	mov	r7, r3
    8978:	ldr	r4, [sp, #40]	; 0x28
    897c:	ldr	r8, [sp, #44]	; 0x2c
    8980:	cmp	r2, #4
    8984:	addls	pc, pc, r2, lsl #2
    8988:	b	8a7c <gen_hostop+0x124>
    898c:	b	8a38 <gen_hostop+0xe0>
    8990:	b	89a4 <gen_hostop+0x4c>
    8994:	b	89a0 <gen_hostop+0x48>
    8998:	b	8a38 <gen_hostop+0xe0>
    899c:	b	89f4 <gen_hostop+0x9c>
    89a0:	mov	r4, r8
    89a4:	mov	r0, r7
    89a8:	bl	6abc <gen_linktype>
    89ac:	mov	r7, r0
    89b0:	str	r6, [sp]
    89b4:	mov	r3, r5
    89b8:	mov	r2, #0
    89bc:	mov	r1, r4
    89c0:	mov	r0, #3
    89c4:	bl	5508 <gen_mcmp>
    89c8:	mov	r4, r0
    89cc:	mov	r1, r0
    89d0:	mov	r0, r7
    89d4:	bl	3a30 <sf_gen_and>
    89d8:	mov	r0, r4
    89dc:	add	sp, sp, #12
    89e0:	ldrd	r4, [sp]
    89e4:	ldrd	r6, [sp, #8]
    89e8:	ldrd	r8, [sp, #16]
    89ec:	add	sp, sp, #24
    89f0:	pop	{pc}		; (ldr pc, [sp], #4)
    89f4:	str	r8, [sp, #4]
    89f8:	str	r4, [sp]
    89fc:	mov	r2, #1
    8a00:	bl	8958 <gen_hostop>
    8a04:	mov	r9, r0
    8a08:	str	r8, [sp, #4]
    8a0c:	str	r4, [sp]
    8a10:	mov	r3, r7
    8a14:	mov	r2, #2
    8a18:	mov	r1, r6
    8a1c:	mov	r0, r5
    8a20:	bl	8958 <gen_hostop>
    8a24:	mov	r4, r0
    8a28:	mov	r1, r0
    8a2c:	mov	r0, r9
    8a30:	bl	3a30 <sf_gen_and>
    8a34:	b	89d8 <gen_hostop+0x80>
    8a38:	str	r8, [sp, #4]
    8a3c:	str	r4, [sp]
    8a40:	mov	r2, #1
    8a44:	bl	8958 <gen_hostop>
    8a48:	mov	r9, r0
    8a4c:	str	r8, [sp, #4]
    8a50:	str	r4, [sp]
    8a54:	mov	r3, r7
    8a58:	mov	r2, #2
    8a5c:	mov	r1, r6
    8a60:	mov	r0, r5
    8a64:	bl	8958 <gen_hostop>
    8a68:	mov	r4, r0
    8a6c:	mov	r1, r0
    8a70:	mov	r0, r9
    8a74:	bl	3ac0 <sf_gen_or>
    8a78:	b	89d8 <gen_hostop+0x80>
    8a7c:	bl	ebc <abort@plt>

00008a80 <gen_dnhostop>:
    8a80:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8a84:	strd	r6, [sp, #8]
    8a88:	strd	r8, [sp, #16]
    8a8c:	strd	sl, [sp, #24]
    8a90:	str	lr, [sp, #32]
    8a94:	sub	sp, sp, #12
    8a98:	mov	r4, r0
    8a9c:	cmp	r1, #24
    8aa0:	addls	pc, pc, r1, lsl #2
    8aa4:	b	8b7c <gen_dnhostop+0xfc>
    8aa8:	b	8b44 <gen_dnhostop+0xc4>
    8aac:	b	8b0c <gen_dnhostop+0x8c>
    8ab0:	b	8b80 <gen_dnhostop+0x100>
    8ab4:	b	8b44 <gen_dnhostop+0xc4>
    8ab8:	b	8b18 <gen_dnhostop+0x98>
    8abc:	b	8b7c <gen_dnhostop+0xfc>
    8ac0:	b	8b7c <gen_dnhostop+0xfc>
    8ac4:	b	8b7c <gen_dnhostop+0xfc>
    8ac8:	b	8b7c <gen_dnhostop+0xfc>
    8acc:	b	8b7c <gen_dnhostop+0xfc>
    8ad0:	b	8b7c <gen_dnhostop+0xfc>
    8ad4:	b	8b7c <gen_dnhostop+0xfc>
    8ad8:	b	8b7c <gen_dnhostop+0xfc>
    8adc:	b	8b7c <gen_dnhostop+0xfc>
    8ae0:	b	8b7c <gen_dnhostop+0xfc>
    8ae4:	b	8b7c <gen_dnhostop+0xfc>
    8ae8:	b	8b7c <gen_dnhostop+0xfc>
    8aec:	b	8b7c <gen_dnhostop+0xfc>
    8af0:	b	8b7c <gen_dnhostop+0xfc>
    8af4:	b	8b7c <gen_dnhostop+0xfc>
    8af8:	b	8b7c <gen_dnhostop+0xfc>
    8afc:	b	8b7c <gen_dnhostop+0xfc>
    8b00:	b	8b7c <gen_dnhostop+0xfc>
    8b04:	b	8b7c <gen_dnhostop+0xfc>
    8b08:	b	8b70 <gen_dnhostop+0xf0>
    8b0c:	mov	r6, #3
    8b10:	mov	r7, #15
    8b14:	b	8b88 <gen_dnhostop+0x108>
    8b18:	mov	r1, #1
    8b1c:	bl	8a80 <gen_dnhostop>
    8b20:	mov	r5, r0
    8b24:	mov	r1, #2
    8b28:	mov	r0, r4
    8b2c:	bl	8a80 <gen_dnhostop>
    8b30:	mov	sl, r0
    8b34:	mov	r1, r0
    8b38:	mov	r0, r5
    8b3c:	bl	3a30 <sf_gen_and>
    8b40:	b	8cd4 <gen_dnhostop+0x254>
    8b44:	mov	r1, #1
    8b48:	bl	8a80 <gen_dnhostop>
    8b4c:	mov	r5, r0
    8b50:	mov	r1, #2
    8b54:	mov	r0, r4
    8b58:	bl	8a80 <gen_dnhostop>
    8b5c:	mov	sl, r0
    8b60:	mov	r1, r0
    8b64:	mov	r0, r5
    8b68:	bl	3ac0 <sf_gen_or>
    8b6c:	b	8cd4 <gen_dnhostop+0x254>
    8b70:	ldr	r0, [pc, #380]	; 8cf4 <gen_dnhostop+0x274>
    8b74:	add	r0, pc, r0
    8b78:	bl	229c <sf_bpf_error>
    8b7c:	bl	ebc <abort@plt>
    8b80:	mov	r6, #1
    8b84:	mov	r7, #7
    8b88:	movw	r0, #24579	; 0x6003
    8b8c:	bl	6abc <gen_linktype>
    8b90:	mov	r8, r0
    8b94:	movw	r5, #65287	; 0xff07
    8b98:	str	r5, [sp]
    8b9c:	movw	r3, #33030	; 0x8106
    8ba0:	mov	r2, #8
    8ba4:	mov	r1, #2
    8ba8:	mov	r0, #3
    8bac:	bl	5508 <gen_mcmp>
    8bb0:	mov	r9, r0
    8bb4:	rev16	r4, r4
    8bb8:	uxth	r4, r4
    8bbc:	mov	r3, r4
    8bc0:	mov	r2, #8
    8bc4:	add	r1, r7, #3
    8bc8:	mov	r0, #3
    8bcc:	bl	4908 <gen_cmp>
    8bd0:	mov	sl, r0
    8bd4:	mov	r1, r0
    8bd8:	mov	r0, r9
    8bdc:	bl	3a30 <sf_gen_and>
    8be0:	mov	r9, #7
    8be4:	str	r9, [sp]
    8be8:	mov	r3, #6
    8bec:	mov	r2, #16
    8bf0:	mov	r1, #2
    8bf4:	mov	r0, #3
    8bf8:	bl	5508 <gen_mcmp>
    8bfc:	mov	fp, r0
    8c00:	mov	r3, r4
    8c04:	mov	r2, #8
    8c08:	add	r1, r7, #2
    8c0c:	mov	r0, #3
    8c10:	bl	4908 <gen_cmp>
    8c14:	mov	r7, r0
    8c18:	mov	r1, r0
    8c1c:	mov	r0, fp
    8c20:	bl	3a30 <sf_gen_and>
    8c24:	mov	r1, sl
    8c28:	mov	r0, r7
    8c2c:	bl	3ac0 <sf_gen_or>
    8c30:	str	r5, [sp]
    8c34:	movw	r3, #33026	; 0x8102
    8c38:	mov	r2, #8
    8c3c:	mov	r1, #2
    8c40:	mov	r0, #3
    8c44:	bl	5508 <gen_mcmp>
    8c48:	mov	r7, r0
    8c4c:	mov	r3, r4
    8c50:	mov	r2, #8
    8c54:	add	r1, r6, #3
    8c58:	mov	r0, #3
    8c5c:	bl	4908 <gen_cmp>
    8c60:	mov	r5, r0
    8c64:	mov	r1, r0
    8c68:	mov	r0, r7
    8c6c:	bl	3a30 <sf_gen_and>
    8c70:	mov	r1, sl
    8c74:	mov	r0, r5
    8c78:	bl	3ac0 <sf_gen_or>
    8c7c:	str	r9, [sp]
    8c80:	mov	r3, #2
    8c84:	mov	r2, #16
    8c88:	mov	r1, r3
    8c8c:	mov	r0, #3
    8c90:	bl	5508 <gen_mcmp>
    8c94:	mov	r5, r0
    8c98:	mov	r3, r4
    8c9c:	mov	r2, #8
    8ca0:	add	r1, r6, #2
    8ca4:	mov	r0, #3
    8ca8:	bl	4908 <gen_cmp>
    8cac:	mov	r4, r0
    8cb0:	mov	r1, r0
    8cb4:	mov	r0, r5
    8cb8:	bl	3a30 <sf_gen_and>
    8cbc:	mov	r1, sl
    8cc0:	mov	r0, r4
    8cc4:	bl	3ac0 <sf_gen_or>
    8cc8:	mov	r1, sl
    8ccc:	mov	r0, r8
    8cd0:	bl	3a30 <sf_gen_and>
    8cd4:	mov	r0, sl
    8cd8:	add	sp, sp, #12
    8cdc:	ldrd	r4, [sp]
    8ce0:	ldrd	r6, [sp, #8]
    8ce4:	ldrd	r8, [sp, #16]
    8ce8:	ldrd	sl, [sp, #24]
    8cec:	add	sp, sp, #32
    8cf0:	pop	{pc}		; (ldr pc, [sp], #4)
    8cf4:	.word	0x0000b83c

00008cf8 <gen_host>:
    8cf8:	strd	r4, [sp, #-28]!	; 0xffffffe4
    8cfc:	strd	r6, [sp, #8]
    8d00:	strd	r8, [sp, #16]
    8d04:	str	lr, [sp, #24]
    8d08:	sub	sp, sp, #12
    8d0c:	mov	r6, r0
    8d10:	mov	r8, r1
    8d14:	mov	r7, r3
    8d18:	ldr	r4, [sp, #40]	; 0x28
    8d1c:	cmp	r4, #2
    8d20:	beq	8ddc <gen_host+0xe4>
    8d24:	ldr	r1, [pc, #812]	; 9058 <gen_host+0x360>
    8d28:	add	r1, pc, r1
    8d2c:	cmp	r2, #40	; 0x28
    8d30:	addls	pc, pc, r2, lsl #2
    8d34:	b	9054 <gen_host+0x35c>
    8d38:	b	8de8 <gen_host+0xf0>
    8d3c:	b	9054 <gen_host+0x35c>
    8d40:	b	8e6c <gen_host+0x174>
    8d44:	b	8edc <gen_host+0x1e4>
    8d48:	b	8eb0 <gen_host+0x1b8>
    8d4c:	b	8f14 <gen_host+0x21c>
    8d50:	b	8f08 <gen_host+0x210>
    8d54:	b	8f20 <gen_host+0x228>
    8d58:	b	8f2c <gen_host+0x234>
    8d5c:	b	8f38 <gen_host+0x240>
    8d60:	b	8f44 <gen_host+0x24c>
    8d64:	b	8f68 <gen_host+0x270>
    8d68:	b	8f80 <gen_host+0x288>
    8d6c:	b	8fa0 <gen_host+0x2a8>
    8d70:	b	8f94 <gen_host+0x29c>
    8d74:	b	8fb8 <gen_host+0x2c0>
    8d78:	b	8fac <gen_host+0x2b4>
    8d7c:	b	8fc4 <gen_host+0x2cc>
    8d80:	b	8fd0 <gen_host+0x2d8>
    8d84:	b	8fdc <gen_host+0x2e4>
    8d88:	b	8fe8 <gen_host+0x2f0>
    8d8c:	b	8f50 <gen_host+0x258>
    8d90:	b	8f5c <gen_host+0x264>
    8d94:	b	8f74 <gen_host+0x27c>
    8d98:	b	8ff4 <gen_host+0x2fc>
    8d9c:	b	9000 <gen_host+0x308>
    8da0:	b	900c <gen_host+0x314>
    8da4:	b	9018 <gen_host+0x320>
    8da8:	b	9024 <gen_host+0x32c>
    8dac:	b	9030 <gen_host+0x338>
    8db0:	b	903c <gen_host+0x344>
    8db4:	b	9054 <gen_host+0x35c>
    8db8:	b	9054 <gen_host+0x35c>
    8dbc:	b	9054 <gen_host+0x35c>
    8dc0:	b	9054 <gen_host+0x35c>
    8dc4:	b	9054 <gen_host+0x35c>
    8dc8:	b	9054 <gen_host+0x35c>
    8dcc:	b	9054 <gen_host+0x35c>
    8dd0:	b	9054 <gen_host+0x35c>
    8dd4:	b	9054 <gen_host+0x35c>
    8dd8:	b	9048 <gen_host+0x350>
    8ddc:	ldr	r1, [pc, #632]	; 905c <gen_host+0x364>
    8de0:	add	r1, pc, r1
    8de4:	b	8d2c <gen_host+0x34>
    8de8:	str	r4, [sp]
    8dec:	mov	r3, r7
    8df0:	mov	r2, #2
    8df4:	mov	r1, r8
    8df8:	mov	r0, r6
    8dfc:	bl	8cf8 <gen_host>
    8e00:	mov	r5, r0
    8e04:	ldr	r3, [pc, #596]	; 9060 <gen_host+0x368>
    8e08:	add	r3, pc, r3
    8e0c:	ldr	r3, [r3, #4]
    8e10:	cmp	r3, #0
    8e14:	bne	8e94 <gen_host+0x19c>
    8e18:	str	r4, [sp]
    8e1c:	mov	r3, r7
    8e20:	mov	r2, #3
    8e24:	mov	r1, r8
    8e28:	mov	r0, r6
    8e2c:	bl	8cf8 <gen_host>
    8e30:	mov	r9, r0
    8e34:	mov	r1, r0
    8e38:	mov	r0, r5
    8e3c:	bl	3ac0 <sf_gen_or>
    8e40:	str	r4, [sp]
    8e44:	mov	r3, r7
    8e48:	mov	r2, #4
    8e4c:	mov	r1, r8
    8e50:	mov	r0, r6
    8e54:	bl	8cf8 <gen_host>
    8e58:	mov	r5, r0
    8e5c:	mov	r1, r0
    8e60:	mov	r0, r9
    8e64:	bl	3ac0 <sf_gen_or>
    8e68:	b	8e94 <gen_host+0x19c>
    8e6c:	mov	r3, #16
    8e70:	str	r3, [sp, #4]
    8e74:	mov	r3, #12
    8e78:	str	r3, [sp]
    8e7c:	mov	r3, #2048	; 0x800
    8e80:	mov	r2, r7
    8e84:	mov	r1, r8
    8e88:	mov	r0, r6
    8e8c:	bl	8958 <gen_hostop>
    8e90:	mov	r5, r0
    8e94:	mov	r0, r5
    8e98:	add	sp, sp, #12
    8e9c:	ldrd	r4, [sp]
    8ea0:	ldrd	r6, [sp, #8]
    8ea4:	ldrd	r8, [sp, #16]
    8ea8:	add	sp, sp, #24
    8eac:	pop	{pc}		; (ldr pc, [sp], #4)
    8eb0:	mov	r3, #24
    8eb4:	str	r3, [sp, #4]
    8eb8:	mov	r3, #14
    8ebc:	str	r3, [sp]
    8ec0:	movw	r3, #32821	; 0x8035
    8ec4:	mov	r2, r7
    8ec8:	mov	r1, r8
    8ecc:	mov	r0, r6
    8ed0:	bl	8958 <gen_hostop>
    8ed4:	mov	r5, r0
    8ed8:	b	8e94 <gen_host+0x19c>
    8edc:	mov	r3, #24
    8ee0:	str	r3, [sp, #4]
    8ee4:	mov	r3, #14
    8ee8:	str	r3, [sp]
    8eec:	movw	r3, #2054	; 0x806
    8ef0:	mov	r2, r7
    8ef4:	mov	r1, r8
    8ef8:	mov	r0, r6
    8efc:	bl	8958 <gen_hostop>
    8f00:	mov	r5, r0
    8f04:	b	8e94 <gen_host+0x19c>
    8f08:	ldr	r0, [pc, #340]	; 9064 <gen_host+0x36c>
    8f0c:	add	r0, pc, r0
    8f10:	bl	229c <sf_bpf_error>
    8f14:	ldr	r0, [pc, #332]	; 9068 <gen_host+0x370>
    8f18:	add	r0, pc, r0
    8f1c:	bl	229c <sf_bpf_error>
    8f20:	ldr	r0, [pc, #324]	; 906c <gen_host+0x374>
    8f24:	add	r0, pc, r0
    8f28:	bl	229c <sf_bpf_error>
    8f2c:	ldr	r0, [pc, #316]	; 9070 <gen_host+0x378>
    8f30:	add	r0, pc, r0
    8f34:	bl	229c <sf_bpf_error>
    8f38:	ldr	r0, [pc, #308]	; 9074 <gen_host+0x37c>
    8f3c:	add	r0, pc, r0
    8f40:	bl	229c <sf_bpf_error>
    8f44:	ldr	r0, [pc, #300]	; 9078 <gen_host+0x380>
    8f48:	add	r0, pc, r0
    8f4c:	bl	229c <sf_bpf_error>
    8f50:	ldr	r0, [pc, #292]	; 907c <gen_host+0x384>
    8f54:	add	r0, pc, r0
    8f58:	bl	229c <sf_bpf_error>
    8f5c:	ldr	r0, [pc, #284]	; 9080 <gen_host+0x388>
    8f60:	add	r0, pc, r0
    8f64:	bl	229c <sf_bpf_error>
    8f68:	ldr	r0, [pc, #276]	; 9084 <gen_host+0x38c>
    8f6c:	add	r0, pc, r0
    8f70:	bl	229c <sf_bpf_error>
    8f74:	ldr	r0, [pc, #268]	; 9088 <gen_host+0x390>
    8f78:	add	r0, pc, r0
    8f7c:	bl	229c <sf_bpf_error>
    8f80:	mov	r1, r7
    8f84:	mov	r0, r6
    8f88:	bl	8a80 <gen_dnhostop>
    8f8c:	mov	r5, r0
    8f90:	b	8e94 <gen_host+0x19c>
    8f94:	ldr	r0, [pc, #240]	; 908c <gen_host+0x394>
    8f98:	add	r0, pc, r0
    8f9c:	bl	229c <sf_bpf_error>
    8fa0:	ldr	r0, [pc, #232]	; 9090 <gen_host+0x398>
    8fa4:	add	r0, pc, r0
    8fa8:	bl	229c <sf_bpf_error>
    8fac:	ldr	r0, [pc, #224]	; 9094 <gen_host+0x39c>
    8fb0:	add	r0, pc, r0
    8fb4:	bl	229c <sf_bpf_error>
    8fb8:	ldr	r0, [pc, #216]	; 9098 <gen_host+0x3a0>
    8fbc:	add	r0, pc, r0
    8fc0:	bl	229c <sf_bpf_error>
    8fc4:	ldr	r0, [pc, #208]	; 909c <gen_host+0x3a4>
    8fc8:	add	r0, pc, r0
    8fcc:	bl	229c <sf_bpf_error>
    8fd0:	ldr	r0, [pc, #200]	; 90a0 <gen_host+0x3a8>
    8fd4:	add	r0, pc, r0
    8fd8:	bl	229c <sf_bpf_error>
    8fdc:	ldr	r0, [pc, #192]	; 90a4 <gen_host+0x3ac>
    8fe0:	add	r0, pc, r0
    8fe4:	bl	229c <sf_bpf_error>
    8fe8:	ldr	r0, [pc, #184]	; 90a8 <gen_host+0x3b0>
    8fec:	add	r0, pc, r0
    8ff0:	bl	229c <sf_bpf_error>
    8ff4:	ldr	r0, [pc, #176]	; 90ac <gen_host+0x3b4>
    8ff8:	add	r0, pc, r0
    8ffc:	bl	229c <sf_bpf_error>
    9000:	ldr	r0, [pc, #168]	; 90b0 <gen_host+0x3b8>
    9004:	add	r0, pc, r0
    9008:	bl	229c <sf_bpf_error>
    900c:	ldr	r0, [pc, #160]	; 90b4 <gen_host+0x3bc>
    9010:	add	r0, pc, r0
    9014:	bl	229c <sf_bpf_error>
    9018:	ldr	r0, [pc, #152]	; 90b8 <gen_host+0x3c0>
    901c:	add	r0, pc, r0
    9020:	bl	229c <sf_bpf_error>
    9024:	ldr	r0, [pc, #144]	; 90bc <gen_host+0x3c4>
    9028:	add	r0, pc, r0
    902c:	bl	229c <sf_bpf_error>
    9030:	ldr	r0, [pc, #136]	; 90c0 <gen_host+0x3c8>
    9034:	add	r0, pc, r0
    9038:	bl	229c <sf_bpf_error>
    903c:	ldr	r0, [pc, #128]	; 90c4 <gen_host+0x3cc>
    9040:	add	r0, pc, r0
    9044:	bl	229c <sf_bpf_error>
    9048:	ldr	r0, [pc, #120]	; 90c8 <gen_host+0x3d0>
    904c:	add	r0, pc, r0
    9050:	bl	229c <sf_bpf_error>
    9054:	bl	ebc <abort@plt>
    9058:	.word	0x0000d7e4
    905c:	.word	0x0000b5f4
    9060:	.word	0x00028468
    9064:	.word	0x0000b4cc
    9068:	.word	0x0000b4e0
    906c:	.word	0x0000b4f4
    9070:	.word	0x0000b508
    9074:	.word	0x0000b51c
    9078:	.word	0x0000b530
    907c:	.word	0x0000b544
    9080:	.word	0x0000b558
    9084:	.word	0x0000b56c
    9088:	.word	0x0000b588
    908c:	.word	0x0000b58c
    9090:	.word	0x0000b5a4
    9094:	.word	0x0000b5bc
    9098:	.word	0x0000b5d8
    909c:	.word	0x0000b5f4
    90a0:	.word	0x0000b60c
    90a4:	.word	0x0000b620
    90a8:	.word	0x0000b630
    90ac:	.word	0x0000b3b8
    90b0:	.word	0x0000b638
    90b4:	.word	0x0000b64c
    90b8:	.word	0x0000b660
    90bc:	.word	0x0000b674
    90c0:	.word	0x0000b688
    90c4:	.word	0x0000b6a0
    90c8:	.word	0x0000b6b8

000090cc <sf_gen_mcode>:
    90cc:	strd	r4, [sp, #-20]!	; 0xffffffec
    90d0:	strd	r6, [sp, #8]
    90d4:	str	lr, [sp, #16]
    90d8:	sub	sp, sp, #28
    90dc:	mov	r7, r0
    90e0:	mov	r4, r1
    90e4:	mov	r5, r2
    90e8:	str	r3, [sp, #12]
    90ec:	uxtb	r6, r3
    90f0:	add	r1, sp, #20
    90f4:	bl	c558 <__pcap_atoin>
    90f8:	rsb	r0, r0, #32
    90fc:	ldr	r3, [sp, #20]
    9100:	lsl	r0, r3, r0
    9104:	str	r0, [sp, #20]
    9108:	cmp	r4, #0
    910c:	beq	9184 <sf_gen_mcode+0xb8>
    9110:	add	r1, sp, #16
    9114:	mov	r0, r4
    9118:	bl	c558 <__pcap_atoin>
    911c:	rsb	r0, r0, #32
    9120:	ldr	r3, [sp, #16]
    9124:	lsl	r0, r3, r0
    9128:	str	r0, [sp, #16]
    912c:	ldr	r3, [sp, #20]
    9130:	bics	r3, r3, r0
    9134:	bne	9170 <sf_gen_mcode+0xa4>
    9138:	cmp	r6, #2
    913c:	bne	91cc <sf_gen_mcode+0x100>
    9140:	mov	r3, #2
    9144:	str	r3, [sp]
    9148:	ldrb	r3, [sp, #14]
    914c:	ldrb	r2, [sp, #13]
    9150:	ldr	r1, [sp, #16]
    9154:	ldr	r0, [sp, #20]
    9158:	bl	8cf8 <gen_host>
    915c:	add	sp, sp, #28
    9160:	ldrd	r4, [sp]
    9164:	ldrd	r6, [sp, #8]
    9168:	add	sp, sp, #16
    916c:	pop	{pc}		; (ldr pc, [sp], #4)
    9170:	mov	r2, r4
    9174:	mov	r1, r7
    9178:	ldr	r0, [pc, #88]	; 91d8 <sf_gen_mcode+0x10c>
    917c:	add	r0, pc, r0
    9180:	bl	229c <sf_bpf_error>
    9184:	cmp	r5, #32
    9188:	bgt	91c0 <sf_gen_mcode+0xf4>
    918c:	cmp	r5, #0
    9190:	rsbne	r2, r5, #32
    9194:	mvnne	r3, #0
    9198:	lslne	r3, r3, r2
    919c:	moveq	r3, #0
    91a0:	str	r3, [sp, #16]
    91a4:	bics	r3, r0, r3
    91a8:	beq	9138 <sf_gen_mcode+0x6c>
    91ac:	mov	r2, r5
    91b0:	mov	r1, r7
    91b4:	ldr	r0, [pc, #32]	; 91dc <sf_gen_mcode+0x110>
    91b8:	add	r0, pc, r0
    91bc:	bl	229c <sf_bpf_error>
    91c0:	ldr	r0, [pc, #24]	; 91e0 <sf_gen_mcode+0x114>
    91c4:	add	r0, pc, r0
    91c8:	bl	229c <sf_bpf_error>
    91cc:	ldr	r0, [pc, #16]	; 91e4 <sf_gen_mcode+0x118>
    91d0:	add	r0, pc, r0
    91d4:	bl	229c <sf_bpf_error>
    91d8:	.word	0x0000b5a8
    91dc:	.word	0x0000b5b0
    91e0:	.word	0x0000b588
    91e4:	.word	0x0000b5b8

000091e8 <gen_hostop6>:
    91e8:	strd	r4, [sp, #-28]!	; 0xffffffe4
    91ec:	strd	r6, [sp, #8]
    91f0:	strd	r8, [sp, #16]
    91f4:	str	lr, [sp, #24]
    91f8:	sub	sp, sp, #12
    91fc:	mov	r7, r0
    9200:	mov	r6, r1
    9204:	mov	r8, r3
    9208:	ldr	r5, [sp, #40]	; 0x28
    920c:	ldr	r4, [sp, #44]	; 0x2c
    9210:	cmp	r2, #4
    9214:	addls	pc, pc, r2, lsl #2
    9218:	b	9394 <gen_hostop6+0x1ac>
    921c:	b	9350 <gen_hostop6+0x168>
    9220:	b	9234 <gen_hostop6+0x4c>
    9224:	b	9230 <gen_hostop6+0x48>
    9228:	b	9350 <gen_hostop6+0x168>
    922c:	b	930c <gen_hostop6+0x124>
    9230:	mov	r5, r4
    9234:	ldr	r3, [r7, #12]
    9238:	ldr	r2, [r6, #12]
    923c:	rev	r2, r2
    9240:	str	r2, [sp]
    9244:	rev	r3, r3
    9248:	mov	r2, #0
    924c:	add	r1, r5, #12
    9250:	mov	r0, #3
    9254:	bl	5508 <gen_mcmp>
    9258:	mov	r4, r0
    925c:	ldr	r3, [r7, #8]
    9260:	ldr	r2, [r6, #8]
    9264:	rev	r2, r2
    9268:	str	r2, [sp]
    926c:	rev	r3, r3
    9270:	mov	r2, #0
    9274:	add	r1, r5, #8
    9278:	mov	r0, #3
    927c:	bl	5508 <gen_mcmp>
    9280:	mov	r1, r4
    9284:	bl	3a30 <sf_gen_and>
    9288:	ldr	r3, [r7, #4]
    928c:	ldr	r2, [r6, #4]
    9290:	rev	r2, r2
    9294:	str	r2, [sp]
    9298:	rev	r3, r3
    929c:	mov	r2, #0
    92a0:	add	r1, r5, #4
    92a4:	mov	r0, #3
    92a8:	bl	5508 <gen_mcmp>
    92ac:	mov	r1, r4
    92b0:	bl	3a30 <sf_gen_and>
    92b4:	ldr	r3, [r7]
    92b8:	ldr	r2, [r6]
    92bc:	rev	r2, r2
    92c0:	str	r2, [sp]
    92c4:	rev	r3, r3
    92c8:	mov	r2, #0
    92cc:	mov	r1, r5
    92d0:	mov	r0, #3
    92d4:	bl	5508 <gen_mcmp>
    92d8:	mov	r1, r4
    92dc:	bl	3a30 <sf_gen_and>
    92e0:	mov	r0, r8
    92e4:	bl	6abc <gen_linktype>
    92e8:	mov	r1, r4
    92ec:	bl	3a30 <sf_gen_and>
    92f0:	mov	r0, r4
    92f4:	add	sp, sp, #12
    92f8:	ldrd	r4, [sp]
    92fc:	ldrd	r6, [sp, #8]
    9300:	ldrd	r8, [sp, #16]
    9304:	add	sp, sp, #24
    9308:	pop	{pc}		; (ldr pc, [sp], #4)
    930c:	str	r4, [sp, #4]
    9310:	str	r5, [sp]
    9314:	mov	r2, #1
    9318:	bl	91e8 <gen_hostop6>
    931c:	mov	r9, r0
    9320:	str	r4, [sp, #4]
    9324:	str	r5, [sp]
    9328:	mov	r3, r8
    932c:	mov	r2, #2
    9330:	mov	r1, r6
    9334:	mov	r0, r7
    9338:	bl	91e8 <gen_hostop6>
    933c:	mov	r4, r0
    9340:	mov	r1, r0
    9344:	mov	r0, r9
    9348:	bl	3a30 <sf_gen_and>
    934c:	b	92f0 <gen_hostop6+0x108>
    9350:	str	r4, [sp, #4]
    9354:	str	r5, [sp]
    9358:	mov	r2, #1
    935c:	bl	91e8 <gen_hostop6>
    9360:	mov	r9, r0
    9364:	str	r4, [sp, #4]
    9368:	str	r5, [sp]
    936c:	mov	r3, r8
    9370:	mov	r2, #2
    9374:	mov	r1, r6
    9378:	mov	r0, r7
    937c:	bl	91e8 <gen_hostop6>
    9380:	mov	r4, r0
    9384:	mov	r1, r0
    9388:	mov	r0, r9
    938c:	bl	3ac0 <sf_gen_or>
    9390:	b	92f0 <gen_hostop6+0x108>
    9394:	bl	ebc <abort@plt>

00009398 <gen_host6>:
    9398:	push	{lr}		; (str lr, [sp, #-4]!)
    939c:	sub	sp, sp, #12
    93a0:	mov	ip, r3
    93a4:	ldr	r3, [sp, #16]
    93a8:	cmp	r3, #2
    93ac:	beq	9468 <gen_host6+0xd0>
    93b0:	ldr	lr, [pc, #680]	; 9660 <gen_host6+0x2c8>
    93b4:	add	lr, pc, lr
    93b8:	cmp	r2, #40	; 0x28
    93bc:	addls	pc, pc, r2, lsl #2
    93c0:	b	965c <gen_host6+0x2c4>
    93c4:	b	9474 <gen_host6+0xdc>
    93c8:	b	965c <gen_host6+0x2c4>
    93cc:	b	948c <gen_host6+0xf4>
    93d0:	b	94ac <gen_host6+0x114>
    93d4:	b	949c <gen_host6+0x104>
    93d8:	b	94bc <gen_host6+0x124>
    93dc:	b	94cc <gen_host6+0x134>
    93e0:	b	94dc <gen_host6+0x144>
    93e4:	b	94ec <gen_host6+0x154>
    93e8:	b	94fc <gen_host6+0x164>
    93ec:	b	950c <gen_host6+0x174>
    93f0:	b	953c <gen_host6+0x1a4>
    93f4:	b	9554 <gen_host6+0x1bc>
    93f8:	b	9570 <gen_host6+0x1d8>
    93fc:	b	9564 <gen_host6+0x1cc>
    9400:	b	9588 <gen_host6+0x1f0>
    9404:	b	957c <gen_host6+0x1e4>
    9408:	b	9594 <gen_host6+0x1fc>
    940c:	b	95b4 <gen_host6+0x21c>
    9410:	b	95c4 <gen_host6+0x22c>
    9414:	b	95d4 <gen_host6+0x23c>
    9418:	b	951c <gen_host6+0x184>
    941c:	b	952c <gen_host6+0x194>
    9420:	b	9548 <gen_host6+0x1b0>
    9424:	b	95e4 <gen_host6+0x24c>
    9428:	b	95f0 <gen_host6+0x258>
    942c:	b	9600 <gen_host6+0x268>
    9430:	b	9610 <gen_host6+0x278>
    9434:	b	9620 <gen_host6+0x288>
    9438:	b	9630 <gen_host6+0x298>
    943c:	b	963c <gen_host6+0x2a4>
    9440:	b	965c <gen_host6+0x2c4>
    9444:	b	965c <gen_host6+0x2c4>
    9448:	b	965c <gen_host6+0x2c4>
    944c:	b	965c <gen_host6+0x2c4>
    9450:	b	965c <gen_host6+0x2c4>
    9454:	b	965c <gen_host6+0x2c4>
    9458:	b	965c <gen_host6+0x2c4>
    945c:	b	965c <gen_host6+0x2c4>
    9460:	b	965c <gen_host6+0x2c4>
    9464:	b	964c <gen_host6+0x2b4>
    9468:	ldr	lr, [pc, #500]	; 9664 <gen_host6+0x2cc>
    946c:	add	lr, pc, lr
    9470:	b	93b8 <gen_host6+0x20>
    9474:	str	r3, [sp]
    9478:	mov	r3, ip
    947c:	mov	r2, #17
    9480:	bl	9398 <gen_host6>
    9484:	add	sp, sp, #12
    9488:	pop	{pc}		; (ldr pc, [sp], #4)
    948c:	mov	r1, lr
    9490:	ldr	r0, [pc, #464]	; 9668 <gen_host6+0x2d0>
    9494:	add	r0, pc, r0
    9498:	bl	229c <sf_bpf_error>
    949c:	mov	r1, lr
    94a0:	ldr	r0, [pc, #452]	; 966c <gen_host6+0x2d4>
    94a4:	add	r0, pc, r0
    94a8:	bl	229c <sf_bpf_error>
    94ac:	mov	r1, lr
    94b0:	ldr	r0, [pc, #440]	; 9670 <gen_host6+0x2d8>
    94b4:	add	r0, pc, r0
    94b8:	bl	229c <sf_bpf_error>
    94bc:	mov	r1, lr
    94c0:	ldr	r0, [pc, #428]	; 9674 <gen_host6+0x2dc>
    94c4:	add	r0, pc, r0
    94c8:	bl	229c <sf_bpf_error>
    94cc:	mov	r1, lr
    94d0:	ldr	r0, [pc, #416]	; 9678 <gen_host6+0x2e0>
    94d4:	add	r0, pc, r0
    94d8:	bl	229c <sf_bpf_error>
    94dc:	mov	r1, lr
    94e0:	ldr	r0, [pc, #404]	; 967c <gen_host6+0x2e4>
    94e4:	add	r0, pc, r0
    94e8:	bl	229c <sf_bpf_error>
    94ec:	mov	r1, lr
    94f0:	ldr	r0, [pc, #392]	; 9680 <gen_host6+0x2e8>
    94f4:	add	r0, pc, r0
    94f8:	bl	229c <sf_bpf_error>
    94fc:	mov	r1, lr
    9500:	ldr	r0, [pc, #380]	; 9684 <gen_host6+0x2ec>
    9504:	add	r0, pc, r0
    9508:	bl	229c <sf_bpf_error>
    950c:	mov	r1, lr
    9510:	ldr	r0, [pc, #368]	; 9688 <gen_host6+0x2f0>
    9514:	add	r0, pc, r0
    9518:	bl	229c <sf_bpf_error>
    951c:	mov	r1, lr
    9520:	ldr	r0, [pc, #356]	; 968c <gen_host6+0x2f4>
    9524:	add	r0, pc, r0
    9528:	bl	229c <sf_bpf_error>
    952c:	mov	r1, lr
    9530:	ldr	r0, [pc, #344]	; 9690 <gen_host6+0x2f8>
    9534:	add	r0, pc, r0
    9538:	bl	229c <sf_bpf_error>
    953c:	ldr	r0, [pc, #336]	; 9694 <gen_host6+0x2fc>
    9540:	add	r0, pc, r0
    9544:	bl	229c <sf_bpf_error>
    9548:	ldr	r0, [pc, #328]	; 9698 <gen_host6+0x300>
    954c:	add	r0, pc, r0
    9550:	bl	229c <sf_bpf_error>
    9554:	mov	r1, lr
    9558:	ldr	r0, [pc, #316]	; 969c <gen_host6+0x304>
    955c:	add	r0, pc, r0
    9560:	bl	229c <sf_bpf_error>
    9564:	ldr	r0, [pc, #308]	; 96a0 <gen_host6+0x308>
    9568:	add	r0, pc, r0
    956c:	bl	229c <sf_bpf_error>
    9570:	ldr	r0, [pc, #300]	; 96a4 <gen_host6+0x30c>
    9574:	add	r0, pc, r0
    9578:	bl	229c <sf_bpf_error>
    957c:	ldr	r0, [pc, #292]	; 96a8 <gen_host6+0x310>
    9580:	add	r0, pc, r0
    9584:	bl	229c <sf_bpf_error>
    9588:	ldr	r0, [pc, #284]	; 96ac <gen_host6+0x314>
    958c:	add	r0, pc, r0
    9590:	bl	229c <sf_bpf_error>
    9594:	mov	r3, #24
    9598:	str	r3, [sp, #4]
    959c:	mov	r3, #8
    95a0:	str	r3, [sp]
    95a4:	movw	r3, #34525	; 0x86dd
    95a8:	mov	r2, ip
    95ac:	bl	91e8 <gen_hostop6>
    95b0:	b	9484 <gen_host6+0xec>
    95b4:	mov	r1, lr
    95b8:	ldr	r0, [pc, #240]	; 96b0 <gen_host6+0x318>
    95bc:	add	r0, pc, r0
    95c0:	bl	229c <sf_bpf_error>
    95c4:	mov	r1, lr
    95c8:	ldr	r0, [pc, #228]	; 96b4 <gen_host6+0x31c>
    95cc:	add	r0, pc, r0
    95d0:	bl	229c <sf_bpf_error>
    95d4:	mov	r1, lr
    95d8:	ldr	r0, [pc, #216]	; 96b8 <gen_host6+0x320>
    95dc:	add	r0, pc, r0
    95e0:	bl	229c <sf_bpf_error>
    95e4:	ldr	r0, [pc, #208]	; 96bc <gen_host6+0x324>
    95e8:	add	r0, pc, r0
    95ec:	bl	229c <sf_bpf_error>
    95f0:	mov	r1, lr
    95f4:	ldr	r0, [pc, #196]	; 96c0 <gen_host6+0x328>
    95f8:	add	r0, pc, r0
    95fc:	bl	229c <sf_bpf_error>
    9600:	mov	r1, lr
    9604:	ldr	r0, [pc, #184]	; 96c4 <gen_host6+0x32c>
    9608:	add	r0, pc, r0
    960c:	bl	229c <sf_bpf_error>
    9610:	mov	r1, lr
    9614:	ldr	r0, [pc, #172]	; 96c8 <gen_host6+0x330>
    9618:	add	r0, pc, r0
    961c:	bl	229c <sf_bpf_error>
    9620:	mov	r1, lr
    9624:	ldr	r0, [pc, #160]	; 96cc <gen_host6+0x334>
    9628:	add	r0, pc, r0
    962c:	bl	229c <sf_bpf_error>
    9630:	ldr	r0, [pc, #152]	; 96d0 <gen_host6+0x338>
    9634:	add	r0, pc, r0
    9638:	bl	229c <sf_bpf_error>
    963c:	mov	r1, lr
    9640:	ldr	r0, [pc, #140]	; 96d4 <gen_host6+0x33c>
    9644:	add	r0, pc, r0
    9648:	bl	229c <sf_bpf_error>
    964c:	mov	r1, lr
    9650:	ldr	r0, [pc, #128]	; 96d8 <gen_host6+0x340>
    9654:	add	r0, pc, r0
    9658:	bl	229c <sf_bpf_error>
    965c:	bl	ebc <abort@plt>
    9660:	.word	0x0000d158
    9664:	.word	0x0000af68
    9668:	.word	0x0000b314
    966c:	.word	0x0000b324
    9670:	.word	0x0000b338
    9674:	.word	0x0000af34
    9678:	.word	0x0000af04
    967c:	.word	0x0000af34
    9680:	.word	0x0000af44
    9684:	.word	0x0000af54
    9688:	.word	0x0000af64
    968c:	.word	0x0000af74
    9690:	.word	0x0000af84
    9694:	.word	0x0000af98
    9698:	.word	0x0000afb4
    969c:	.word	0x0000b2b4
    96a0:	.word	0x0000afbc
    96a4:	.word	0x0000afd4
    96a8:	.word	0x0000afec
    96ac:	.word	0x0000b008
    96b0:	.word	0x0000b024
    96b4:	.word	0x0000b034
    96b8:	.word	0x0000b040
    96bc:	.word	0x0000adc8
    96c0:	.word	0x0000b044
    96c4:	.word	0x0000b054
    96c8:	.word	0x0000b064
    96cc:	.word	0x0000b074
    96d0:	.word	0x0000b088
    96d4:	.word	0x0000b09c
    96d8:	.word	0x0000b0b0

000096dc <sf_gen_mcode6>:
    96dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
    96e0:	strd	r6, [sp, #8]
    96e4:	strd	r8, [sp, #16]
    96e8:	str	sl, [sp, #24]
    96ec:	str	lr, [sp, #28]
    96f0:	sub	sp, sp, #32
    96f4:	str	r3, [sp, #12]
    96f8:	cmp	r1, #0
    96fc:	bne	9844 <sf_gen_mcode6+0x168>
    9700:	mov	r9, r0
    9704:	mov	r4, r2
    9708:	uxtb	r8, r3
    970c:	bl	c1a8 <pcap_nametoaddrinfo>
    9710:	subs	r7, r0, #0
    9714:	beq	9850 <sf_gen_mcode6+0x174>
    9718:	ldr	r3, [pc, #404]	; 98b4 <sf_gen_mcode6+0x1d8>
    971c:	add	r3, pc, r3
    9720:	str	r7, [r3, #872]	; 0x368
    9724:	ldr	r3, [r7, #28]
    9728:	cmp	r3, #0
    972c:	bne	9860 <sf_gen_mcode6+0x184>
    9730:	ldr	r6, [r7, #20]
    9734:	add	sl, r6, #8
    9738:	cmp	r4, #128	; 0x80
    973c:	bhi	9870 <sf_gen_mcode6+0x194>
    9740:	mov	r2, #0
    9744:	mov	r3, #0
    9748:	strd	r2, [sp, #16]
    974c:	add	r0, sp, #16
    9750:	strd	r2, [r0, #8]
    9754:	add	r5, r4, #7
    9758:	cmp	r4, #0
    975c:	movge	r5, r4
    9760:	asr	r5, r5, #3
    9764:	mov	r2, r5
    9768:	mov	r1, #255	; 0xff
    976c:	bl	e2c <memset@plt>
    9770:	tst	r4, #7
    9774:	beq	97a0 <sf_gen_mcode6+0xc4>
    9778:	add	r3, sp, #32
    977c:	add	r5, r3, r5
    9780:	rsbs	r2, r4, #0
    9784:	and	r3, r4, #7
    9788:	and	r2, r2, #7
    978c:	rsbpl	r3, r2, #0
    9790:	rsb	r3, r3, #8
    9794:	mov	r2, #255	; 0xff
    9798:	lsl	r3, r2, r3
    979c:	strb	r3, [r5, #-16]
    97a0:	ldr	r3, [r6, #8]
    97a4:	ldr	r2, [sp, #16]
    97a8:	bics	r3, r3, r2
    97ac:	bne	9880 <sf_gen_mcode6+0x1a4>
    97b0:	ldr	r3, [r6, #12]
    97b4:	ldr	r2, [sp, #20]
    97b8:	bics	r3, r3, r2
    97bc:	bne	9880 <sf_gen_mcode6+0x1a4>
    97c0:	ldr	r3, [r6, #16]
    97c4:	ldr	r2, [sp, #24]
    97c8:	bics	r3, r3, r2
    97cc:	bne	9880 <sf_gen_mcode6+0x1a4>
    97d0:	ldr	r3, [r6, #20]
    97d4:	ldr	r2, [sp, #28]
    97d8:	bics	r3, r3, r2
    97dc:	bne	9880 <sf_gen_mcode6+0x1a4>
    97e0:	cmp	r8, #1
    97e4:	bls	9894 <sf_gen_mcode6+0x1b8>
    97e8:	cmp	r8, #2
    97ec:	bne	98a8 <sf_gen_mcode6+0x1cc>
    97f0:	str	r8, [sp]
    97f4:	ldrb	r3, [sp, #14]
    97f8:	ldrb	r2, [sp, #13]
    97fc:	add	r1, sp, #16
    9800:	mov	r0, sl
    9804:	bl	9398 <gen_host6>
    9808:	mov	r4, r0
    980c:	ldr	r3, [pc, #164]	; 98b8 <sf_gen_mcode6+0x1dc>
    9810:	add	r3, pc, r3
    9814:	mov	r2, #0
    9818:	str	r2, [r3, #872]	; 0x368
    981c:	mov	r0, r7
    9820:	bl	e80 <freeaddrinfo@plt>
    9824:	mov	r0, r4
    9828:	add	sp, sp, #32
    982c:	ldrd	r4, [sp]
    9830:	ldrd	r6, [sp, #8]
    9834:	ldrd	r8, [sp, #16]
    9838:	ldr	sl, [sp, #24]
    983c:	add	sp, sp, #28
    9840:	pop	{pc}		; (ldr pc, [sp], #4)
    9844:	ldr	r0, [pc, #112]	; 98bc <sf_gen_mcode6+0x1e0>
    9848:	add	r0, pc, r0
    984c:	bl	229c <sf_bpf_error>
    9850:	mov	r1, r9
    9854:	ldr	r0, [pc, #100]	; 98c0 <sf_gen_mcode6+0x1e4>
    9858:	add	r0, pc, r0
    985c:	bl	229c <sf_bpf_error>
    9860:	mov	r1, r9
    9864:	ldr	r0, [pc, #88]	; 98c4 <sf_gen_mcode6+0x1e8>
    9868:	add	r0, pc, r0
    986c:	bl	229c <sf_bpf_error>
    9870:	mov	r1, #128	; 0x80
    9874:	ldr	r0, [pc, #76]	; 98c8 <sf_gen_mcode6+0x1ec>
    9878:	add	r0, pc, r0
    987c:	bl	229c <sf_bpf_error>
    9880:	mov	r2, r4
    9884:	mov	r1, r9
    9888:	ldr	r0, [pc, #60]	; 98cc <sf_gen_mcode6+0x1f0>
    988c:	add	r0, pc, r0
    9890:	bl	229c <sf_bpf_error>
    9894:	cmp	r4, #128	; 0x80
    9898:	beq	97f0 <sf_gen_mcode6+0x114>
    989c:	ldr	r0, [pc, #44]	; 98d0 <sf_gen_mcode6+0x1f4>
    98a0:	add	r0, pc, r0
    98a4:	bl	229c <sf_bpf_error>
    98a8:	ldr	r0, [pc, #36]	; 98d4 <sf_gen_mcode6+0x1f8>
    98ac:	add	r0, pc, r0
    98b0:	bl	229c <sf_bpf_error>
    98b4:	.word	0x00027c44
    98b8:	.word	0x00027b50
    98bc:	.word	0x0000afec
    98c0:	.word	0x0000aff4
    98c4:	.word	0x0000affc
    98c8:	.word	0x0000b00c
    98cc:	.word	0x0000aedc
    98d0:	.word	0x0000aee8
    98d4:	.word	0x0000aff4

000098d8 <gen_port>:
    98d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    98dc:	strd	r6, [sp, #8]
    98e0:	str	r8, [sp, #16]
    98e4:	str	lr, [sp, #20]
    98e8:	mov	r5, r0
    98ec:	mov	r4, r1
    98f0:	mov	r6, r2
    98f4:	mov	r0, #2048	; 0x800
    98f8:	bl	6abc <gen_linktype>
    98fc:	mov	r7, r0
    9900:	cmp	r4, #6
    9904:	beq	9974 <gen_port+0x9c>
    9908:	bgt	9964 <gen_port+0x8c>
    990c:	cmn	r4, #1
    9910:	bne	99ac <gen_port+0xd4>
    9914:	mov	r2, r6
    9918:	mov	r1, #6
    991c:	mov	r0, r5
    9920:	bl	5134 <sf_gen_portop>
    9924:	mov	r8, r0
    9928:	mov	r2, r6
    992c:	mov	r1, #17
    9930:	mov	r0, r5
    9934:	bl	5134 <sf_gen_portop>
    9938:	mov	r4, r0
    993c:	mov	r1, r0
    9940:	mov	r0, r8
    9944:	bl	3ac0 <sf_gen_or>
    9948:	mov	r2, r6
    994c:	mov	r1, #132	; 0x84
    9950:	mov	r0, r5
    9954:	bl	5134 <sf_gen_portop>
    9958:	mov	r1, r4
    995c:	bl	3ac0 <sf_gen_or>
    9960:	b	9988 <gen_port+0xb0>
    9964:	cmp	r4, #17
    9968:	beq	9974 <gen_port+0x9c>
    996c:	cmp	r4, #132	; 0x84
    9970:	bne	99ac <gen_port+0xd4>
    9974:	mov	r2, r6
    9978:	mov	r1, r4
    997c:	mov	r0, r5
    9980:	bl	5134 <sf_gen_portop>
    9984:	mov	r4, r0
    9988:	mov	r1, r4
    998c:	mov	r0, r7
    9990:	bl	3a30 <sf_gen_and>
    9994:	mov	r0, r4
    9998:	ldrd	r4, [sp]
    999c:	ldrd	r6, [sp, #8]
    99a0:	ldr	r8, [sp, #16]
    99a4:	add	sp, sp, #20
    99a8:	pop	{pc}		; (ldr pc, [sp], #4)
    99ac:	bl	ebc <abort@plt>

000099b0 <gen_port6>:
    99b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    99b4:	strd	r6, [sp, #8]
    99b8:	str	r8, [sp, #16]
    99bc:	str	lr, [sp, #20]
    99c0:	mov	r5, r0
    99c4:	mov	r4, r1
    99c8:	mov	r6, r2
    99cc:	movw	r0, #34525	; 0x86dd
    99d0:	bl	6abc <gen_linktype>
    99d4:	mov	r7, r0
    99d8:	cmp	r4, #6
    99dc:	beq	9a4c <gen_port6+0x9c>
    99e0:	bgt	9a3c <gen_port6+0x8c>
    99e4:	cmn	r4, #1
    99e8:	bne	9a84 <gen_port6+0xd4>
    99ec:	mov	r2, r6
    99f0:	mov	r1, #6
    99f4:	mov	r0, r5
    99f8:	bl	5038 <sf_gen_portop6>
    99fc:	mov	r8, r0
    9a00:	mov	r2, r6
    9a04:	mov	r1, #17
    9a08:	mov	r0, r5
    9a0c:	bl	5038 <sf_gen_portop6>
    9a10:	mov	r4, r0
    9a14:	mov	r1, r0
    9a18:	mov	r0, r8
    9a1c:	bl	3ac0 <sf_gen_or>
    9a20:	mov	r2, r6
    9a24:	mov	r1, #132	; 0x84
    9a28:	mov	r0, r5
    9a2c:	bl	5038 <sf_gen_portop6>
    9a30:	mov	r1, r4
    9a34:	bl	3ac0 <sf_gen_or>
    9a38:	b	9a60 <gen_port6+0xb0>
    9a3c:	cmp	r4, #17
    9a40:	beq	9a4c <gen_port6+0x9c>
    9a44:	cmp	r4, #132	; 0x84
    9a48:	bne	9a84 <gen_port6+0xd4>
    9a4c:	mov	r2, r6
    9a50:	mov	r1, r4
    9a54:	mov	r0, r5
    9a58:	bl	5038 <sf_gen_portop6>
    9a5c:	mov	r4, r0
    9a60:	mov	r1, r4
    9a64:	mov	r0, r7
    9a68:	bl	3a30 <sf_gen_and>
    9a6c:	mov	r0, r4
    9a70:	ldrd	r4, [sp]
    9a74:	ldrd	r6, [sp, #8]
    9a78:	ldr	r8, [sp, #16]
    9a7c:	add	sp, sp, #20
    9a80:	pop	{pc}		; (ldr pc, [sp], #4)
    9a84:	bl	ebc <abort@plt>

00009a88 <gen_portrange>:
    9a88:	strd	r4, [sp, #-32]!	; 0xffffffe0
    9a8c:	strd	r6, [sp, #8]
    9a90:	strd	r8, [sp, #16]
    9a94:	str	sl, [sp, #24]
    9a98:	str	lr, [sp, #28]
    9a9c:	mov	r5, r0
    9aa0:	mov	r6, r1
    9aa4:	mov	r4, r2
    9aa8:	mov	r7, r3
    9aac:	mov	r0, #2048	; 0x800
    9ab0:	bl	6abc <gen_linktype>
    9ab4:	mov	r8, r0
    9ab8:	cmp	r4, #6
    9abc:	beq	9b38 <gen_portrange+0xb0>
    9ac0:	bgt	9b28 <gen_portrange+0xa0>
    9ac4:	cmn	r4, #1
    9ac8:	bne	9b78 <gen_portrange+0xf0>
    9acc:	mov	r3, r7
    9ad0:	mov	r2, #6
    9ad4:	mov	r1, r6
    9ad8:	mov	r0, r5
    9adc:	bl	5db4 <sf_gen_portrangeop>
    9ae0:	mov	r9, r0
    9ae4:	mov	r3, r7
    9ae8:	mov	r2, #17
    9aec:	mov	r1, r6
    9af0:	mov	r0, r5
    9af4:	bl	5db4 <sf_gen_portrangeop>
    9af8:	mov	r4, r0
    9afc:	mov	r1, r0
    9b00:	mov	r0, r9
    9b04:	bl	3ac0 <sf_gen_or>
    9b08:	mov	r3, r7
    9b0c:	mov	r2, #132	; 0x84
    9b10:	mov	r1, r6
    9b14:	mov	r0, r5
    9b18:	bl	5db4 <sf_gen_portrangeop>
    9b1c:	mov	r1, r4
    9b20:	bl	3ac0 <sf_gen_or>
    9b24:	b	9b50 <gen_portrange+0xc8>
    9b28:	cmp	r4, #17
    9b2c:	beq	9b38 <gen_portrange+0xb0>
    9b30:	cmp	r4, #132	; 0x84
    9b34:	bne	9b78 <gen_portrange+0xf0>
    9b38:	mov	r3, r7
    9b3c:	mov	r2, r4
    9b40:	mov	r1, r6
    9b44:	mov	r0, r5
    9b48:	bl	5db4 <sf_gen_portrangeop>
    9b4c:	mov	r4, r0
    9b50:	mov	r1, r4
    9b54:	mov	r0, r8
    9b58:	bl	3a30 <sf_gen_and>
    9b5c:	mov	r0, r4
    9b60:	ldrd	r4, [sp]
    9b64:	ldrd	r6, [sp, #8]
    9b68:	ldrd	r8, [sp, #16]
    9b6c:	ldr	sl, [sp, #24]
    9b70:	add	sp, sp, #28
    9b74:	pop	{pc}		; (ldr pc, [sp], #4)
    9b78:	bl	ebc <abort@plt>

00009b7c <gen_portrange6>:
    9b7c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    9b80:	strd	r6, [sp, #8]
    9b84:	strd	r8, [sp, #16]
    9b88:	str	sl, [sp, #24]
    9b8c:	str	lr, [sp, #28]
    9b90:	mov	r5, r0
    9b94:	mov	r6, r1
    9b98:	mov	r4, r2
    9b9c:	mov	r7, r3
    9ba0:	movw	r0, #34525	; 0x86dd
    9ba4:	bl	6abc <gen_linktype>
    9ba8:	mov	r8, r0
    9bac:	cmp	r4, #6
    9bb0:	beq	9c2c <gen_portrange6+0xb0>
    9bb4:	bgt	9c1c <gen_portrange6+0xa0>
    9bb8:	cmn	r4, #1
    9bbc:	bne	9c6c <gen_portrange6+0xf0>
    9bc0:	mov	r3, r7
    9bc4:	mov	r2, #6
    9bc8:	mov	r1, r6
    9bcc:	mov	r0, r5
    9bd0:	bl	5f84 <sf_gen_portrangeop6>
    9bd4:	mov	r9, r0
    9bd8:	mov	r3, r7
    9bdc:	mov	r2, #17
    9be0:	mov	r1, r6
    9be4:	mov	r0, r5
    9be8:	bl	5f84 <sf_gen_portrangeop6>
    9bec:	mov	r4, r0
    9bf0:	mov	r1, r0
    9bf4:	mov	r0, r9
    9bf8:	bl	3ac0 <sf_gen_or>
    9bfc:	mov	r3, r7
    9c00:	mov	r2, #132	; 0x84
    9c04:	mov	r1, r6
    9c08:	mov	r0, r5
    9c0c:	bl	5f84 <sf_gen_portrangeop6>
    9c10:	mov	r1, r4
    9c14:	bl	3ac0 <sf_gen_or>
    9c18:	b	9c44 <gen_portrange6+0xc8>
    9c1c:	cmp	r4, #17
    9c20:	beq	9c2c <gen_portrange6+0xb0>
    9c24:	cmp	r4, #132	; 0x84
    9c28:	bne	9c6c <gen_portrange6+0xf0>
    9c2c:	mov	r3, r7
    9c30:	mov	r2, r4
    9c34:	mov	r1, r6
    9c38:	mov	r0, r5
    9c3c:	bl	5f84 <sf_gen_portrangeop6>
    9c40:	mov	r4, r0
    9c44:	mov	r1, r4
    9c48:	mov	r0, r8
    9c4c:	bl	3a30 <sf_gen_and>
    9c50:	mov	r0, r4
    9c54:	ldrd	r4, [sp]
    9c58:	ldrd	r6, [sp, #8]
    9c5c:	ldrd	r8, [sp, #16]
    9c60:	ldr	sl, [sp, #24]
    9c64:	add	sp, sp, #28
    9c68:	pop	{pc}		; (ldr pc, [sp], #4)
    9c6c:	bl	ebc <abort@plt>

00009c70 <gen_protochain>:
    9c70:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9c74:	strd	r6, [sp, #8]
    9c78:	strd	r8, [sp, #16]
    9c7c:	strd	sl, [sp, #24]
    9c80:	str	lr, [sp, #32]
    9c84:	sub	sp, sp, #420	; 0x1a4
    9c88:	mov	r7, r0
    9c8c:	str	r0, [sp, #4]
    9c90:	mov	r4, r1
    9c94:	mov	r6, r2
    9c98:	ldr	r5, [pc, #1804]	; a3ac <gen_protochain+0x73c>
    9c9c:	add	r5, pc, r5
    9ca0:	bl	2488 <alloc_reg>
    9ca4:	str	r0, [sp]
    9ca8:	mov	r2, #400	; 0x190
    9cac:	mov	r1, #0
    9cb0:	add	r0, sp, #16
    9cb4:	bl	e2c <memset@plt>
    9cb8:	cmp	r4, #2
    9cbc:	beq	9d30 <gen_protochain+0xc0>
    9cc0:	cmp	r4, #17
    9cc4:	beq	9d30 <gen_protochain+0xc0>
    9cc8:	cmp	r4, #0
    9ccc:	bne	9d24 <gen_protochain+0xb4>
    9cd0:	mov	r2, r6
    9cd4:	mov	r1, #2
    9cd8:	mov	r0, r7
    9cdc:	bl	9c70 <gen_protochain>
    9ce0:	mov	r5, r0
    9ce4:	mov	r2, r6
    9ce8:	mov	r1, #17
    9cec:	mov	r0, r7
    9cf0:	bl	9c70 <gen_protochain>
    9cf4:	mov	r4, r0
    9cf8:	mov	r1, r0
    9cfc:	mov	r0, r5
    9d00:	bl	3ac0 <sf_gen_or>
    9d04:	mov	r0, r4
    9d08:	add	sp, sp, #420	; 0x1a4
    9d0c:	ldrd	r4, [sp]
    9d10:	ldrd	r6, [sp, #8]
    9d14:	ldrd	r8, [sp, #16]
    9d18:	ldrd	sl, [sp, #24]
    9d1c:	add	sp, sp, #32
    9d20:	pop	{pc}		; (ldr pc, [sp], #4)
    9d24:	ldr	r0, [pc, #1668]	; a3b0 <gen_protochain+0x740>
    9d28:	add	r0, pc, r0
    9d2c:	bl	229c <sf_bpf_error>
    9d30:	ldr	r3, [pc, #1660]	; a3b4 <gen_protochain+0x744>
    9d34:	add	r3, pc, r3
    9d38:	ldr	r3, [r3, #852]	; 0x354
    9d3c:	cmp	r3, #127	; 0x7f
    9d40:	beq	9d58 <gen_protochain+0xe8>
    9d44:	ble	9d64 <gen_protochain+0xf4>
    9d48:	cmp	r3, #163	; 0xa3
    9d4c:	beq	9d58 <gen_protochain+0xe8>
    9d50:	cmp	r3, #192	; 0xc0
    9d54:	bne	9d74 <gen_protochain+0x104>
    9d58:	ldr	r0, [pc, #1624]	; a3b8 <gen_protochain+0x748>
    9d5c:	add	r0, pc, r0
    9d60:	bl	229c <sf_bpf_error>
    9d64:	cmp	r3, #105	; 0x69
    9d68:	beq	9d58 <gen_protochain+0xe8>
    9d6c:	cmp	r3, #119	; 0x77
    9d70:	beq	9d58 <gen_protochain+0xe8>
    9d74:	ldr	r3, [pc, #1600]	; a3bc <gen_protochain+0x74c>
    9d78:	ldr	r3, [r5, r3]
    9d7c:	mov	r2, #1
    9d80:	str	r2, [r3]
    9d84:	mov	r0, #20
    9d88:	bl	22d8 <newchunk>
    9d8c:	mov	r3, #0
    9d90:	str	r3, [r0]
    9d94:	str	r0, [sp, #16]
    9d98:	cmp	r4, #2
    9d9c:	beq	a064 <gen_protochain+0x3f4>
    9da0:	cmp	r4, #17
    9da4:	bne	a3a0 <gen_protochain+0x730>
    9da8:	movw	r0, #34525	; 0x86dd
    9dac:	bl	6abc <gen_linktype>
    9db0:	str	r0, [sp, #8]
    9db4:	mov	r0, #20
    9db8:	bl	22d8 <newchunk>
    9dbc:	mov	r3, #48	; 0x30
    9dc0:	str	r3, [r0]
    9dc4:	str	r0, [sp, #20]
    9dc8:	ldr	r3, [pc, #1520]	; a3c0 <gen_protochain+0x750>
    9dcc:	add	r3, pc, r3
    9dd0:	ldr	r2, [r3, #940]	; 0x3ac
    9dd4:	ldr	r3, [r3, #948]	; 0x3b4
    9dd8:	add	r3, r2, r3
    9ddc:	str	r3, [sp, #12]
    9de0:	add	r3, r3, #6
    9de4:	str	r3, [r0, #12]
    9de8:	mov	r0, #20
    9dec:	bl	22d8 <newchunk>
    9df0:	mov	r2, #1
    9df4:	str	r2, [r0]
    9df8:	str	r0, [sp, #24]
    9dfc:	mov	r3, #40	; 0x28
    9e00:	str	r3, [r0, #12]
    9e04:	mov	r0, #20
    9e08:	bl	22d8 <newchunk>
    9e0c:	mov	r6, r0
    9e10:	mov	sl, #21
    9e14:	str	sl, [r0]
    9e18:	str	r0, [sp, #28]
    9e1c:	ldr	r1, [sp, #4]
    9e20:	str	r1, [r0, #12]
    9e24:	mov	r4, #0
    9e28:	str	r4, [r0, #4]
    9e2c:	str	r4, [r0, #8]
    9e30:	mov	r0, #20
    9e34:	bl	22d8 <newchunk>
    9e38:	mov	r5, r0
    9e3c:	str	sl, [r0]
    9e40:	str	r0, [sp, #32]
    9e44:	str	r4, [r0, #4]
    9e48:	str	r4, [r0, #8]
    9e4c:	mov	r3, #59	; 0x3b
    9e50:	str	r3, [r0, #12]
    9e54:	str	r0, [r6, #8]
    9e58:	mov	r0, #20
    9e5c:	bl	22d8 <newchunk>
    9e60:	mov	r8, r0
    9e64:	str	sl, [r0]
    9e68:	str	r0, [sp, #36]	; 0x24
    9e6c:	str	r4, [r0, #4]
    9e70:	str	r4, [r0, #8]
    9e74:	str	r4, [r0, #12]
    9e78:	str	r0, [r5, #8]
    9e7c:	mov	r0, #20
    9e80:	bl	22d8 <newchunk>
    9e84:	mov	r7, r0
    9e88:	str	sl, [r0]
    9e8c:	str	r0, [sp, #40]	; 0x28
    9e90:	str	r0, [r8, #8]
    9e94:	str	r4, [r0, #4]
    9e98:	str	r4, [r0, #8]
    9e9c:	mov	r3, #60	; 0x3c
    9ea0:	str	r3, [r0, #12]
    9ea4:	mov	r0, #20
    9ea8:	bl	22d8 <newchunk>
    9eac:	mov	r6, r0
    9eb0:	str	sl, [r0]
    9eb4:	str	r0, [sp, #44]	; 0x2c
    9eb8:	str	r0, [r7, #8]
    9ebc:	str	r4, [r0, #4]
    9ec0:	str	r4, [r0, #8]
    9ec4:	mov	r3, #43	; 0x2b
    9ec8:	str	r3, [r0, #12]
    9ecc:	mov	r0, #20
    9ed0:	bl	22d8 <newchunk>
    9ed4:	mov	r5, r0
    9ed8:	str	sl, [r0]
    9edc:	str	r0, [sp, #48]	; 0x30
    9ee0:	str	r0, [r6, #8]
    9ee4:	str	r4, [r0, #4]
    9ee8:	str	r4, [r0, #8]
    9eec:	mov	r3, #44	; 0x2c
    9ef0:	str	r3, [r0, #12]
    9ef4:	mov	r0, #20
    9ef8:	bl	22d8 <newchunk>
    9efc:	mov	fp, r0
    9f00:	mov	r9, #135	; 0x87
    9f04:	str	r9, [r0]
    9f08:	str	r0, [sp, #52]	; 0x34
    9f0c:	mov	r0, #20
    9f10:	bl	22d8 <newchunk>
    9f14:	mov	r1, #80	; 0x50
    9f18:	str	r1, [r0]
    9f1c:	str	r0, [sp, #56]	; 0x38
    9f20:	ldr	r3, [sp, #12]
    9f24:	str	r3, [r0, #12]
    9f28:	mov	r0, #20
    9f2c:	bl	22d8 <newchunk>
    9f30:	mov	r3, #2
    9f34:	str	r3, [r0]
    9f38:	str	r0, [sp, #60]	; 0x3c
    9f3c:	ldr	ip, [sp]
    9f40:	str	ip, [r0, #12]
    9f44:	mov	r0, #20
    9f48:	bl	22d8 <newchunk>
    9f4c:	str	r9, [r0]
    9f50:	str	r0, [sp, #64]	; 0x40
    9f54:	mov	r0, #20
    9f58:	bl	22d8 <newchunk>
    9f5c:	mov	lr, #4
    9f60:	str	lr, [r0]
    9f64:	str	r0, [sp, #68]	; 0x44
    9f68:	mov	r2, #1
    9f6c:	str	r2, [r0, #12]
    9f70:	mov	r0, #20
    9f74:	bl	22d8 <newchunk>
    9f78:	mov	r9, #7
    9f7c:	str	r9, [r0]
    9f80:	str	r0, [sp, #72]	; 0x48
    9f84:	mov	r0, #20
    9f88:	bl	22d8 <newchunk>
    9f8c:	mov	r1, #80	; 0x50
    9f90:	str	r1, [r0]
    9f94:	str	r0, [sp, #76]	; 0x4c
    9f98:	ldr	r3, [sp, #12]
    9f9c:	str	r3, [r0, #12]
    9fa0:	mov	r0, #20
    9fa4:	bl	22d8 <newchunk>
    9fa8:	mov	lr, #4
    9fac:	str	lr, [r0]
    9fb0:	str	r0, [sp, #80]	; 0x50
    9fb4:	mov	r2, #1
    9fb8:	str	r2, [r0, #12]
    9fbc:	mov	r0, #20
    9fc0:	bl	22d8 <newchunk>
    9fc4:	mov	r3, #36	; 0x24
    9fc8:	str	r3, [r0]
    9fcc:	str	r0, [sp, #84]	; 0x54
    9fd0:	mov	r3, #8
    9fd4:	str	r3, [r0, #12]
    9fd8:	mov	r0, #20
    9fdc:	bl	22d8 <newchunk>
    9fe0:	str	r9, [r0]
    9fe4:	str	r0, [sp, #88]	; 0x58
    9fe8:	mov	r0, #20
    9fec:	bl	22d8 <newchunk>
    9ff0:	mov	r9, r0
    9ff4:	mov	r3, #96	; 0x60
    9ff8:	str	r3, [r0]
    9ffc:	str	r0, [sp, #92]	; 0x5c
    a000:	ldr	ip, [sp]
    a004:	str	ip, [r0, #12]
    a008:	mov	r0, #20
    a00c:	bl	22d8 <newchunk>
    a010:	mov	r3, #5
    a014:	str	r3, [r0]
    a018:	str	r0, [sp, #96]	; 0x60
    a01c:	mvn	r3, #17
    a020:	str	r3, [r0, #12]
    a024:	str	r0, [r9, #8]
    a028:	str	fp, [r8, #4]
    a02c:	str	fp, [r7, #4]
    a030:	str	fp, [r6, #4]
    a034:	str	fp, [r5, #4]
    a038:	mov	r0, #20
    a03c:	bl	22d8 <newchunk>
    a040:	str	sl, [r0]
    a044:	str	r0, [sp, #100]	; 0x64
    a048:	str	r4, [r0, #4]
    a04c:	str	r4, [r0, #8]
    a050:	mov	r3, #51	; 0x33
    a054:	str	r3, [r0, #12]
    a058:	str	r0, [r5, #8]
    a05c:	mov	r4, sl
    a060:	b	a14c <gen_protochain+0x4dc>
    a064:	mov	r0, #2048	; 0x800
    a068:	bl	6abc <gen_linktype>
    a06c:	str	r0, [sp, #8]
    a070:	mov	r0, #20
    a074:	bl	22d8 <newchunk>
    a078:	mov	r3, #48	; 0x30
    a07c:	str	r3, [r0]
    a080:	str	r0, [sp, #20]
    a084:	ldr	r3, [pc, #824]	; a3c4 <gen_protochain+0x754>
    a088:	add	r3, pc, r3
    a08c:	ldr	r4, [r3, #940]	; 0x3ac
    a090:	ldr	r3, [r3, #948]	; 0x3b4
    a094:	add	r4, r4, r3
    a098:	add	r3, r4, #9
    a09c:	str	r3, [r0, #12]
    a0a0:	mov	r0, #20
    a0a4:	bl	22d8 <newchunk>
    a0a8:	mov	r3, #177	; 0xb1
    a0ac:	str	r3, [r0]
    a0b0:	str	r0, [sp, #24]
    a0b4:	str	r4, [r0, #12]
    a0b8:	mov	r0, #20
    a0bc:	bl	22d8 <newchunk>
    a0c0:	mov	r6, r0
    a0c4:	mov	r7, #21
    a0c8:	str	r7, [r0]
    a0cc:	str	r0, [sp, #28]
    a0d0:	ldr	r3, [sp, #4]
    a0d4:	str	r3, [r0, #12]
    a0d8:	mov	r4, #0
    a0dc:	str	r4, [r0, #4]
    a0e0:	str	r4, [r0, #8]
    a0e4:	mov	r0, #20
    a0e8:	bl	22d8 <newchunk>
    a0ec:	mov	r5, r0
    a0f0:	str	r7, [r0]
    a0f4:	str	r0, [sp, #32]
    a0f8:	str	r4, [r0, #4]
    a0fc:	str	r4, [r0, #8]
    a100:	mov	r3, #59	; 0x3b
    a104:	str	r3, [r0, #12]
    a108:	str	r0, [r6, #8]
    a10c:	mov	r0, #20
    a110:	bl	22d8 <newchunk>
    a114:	mov	r3, #4
    a118:	str	r3, [r0]
    a11c:	str	r0, [sp, #36]	; 0x24
    a120:	str	r4, [r0, #12]
    a124:	str	r0, [r5, #8]
    a128:	mov	r0, #20
    a12c:	bl	22d8 <newchunk>
    a130:	str	r7, [r0]
    a134:	str	r0, [sp, #40]	; 0x28
    a138:	str	r4, [r0, #4]
    a13c:	str	r4, [r0, #8]
    a140:	mov	r3, #51	; 0x33
    a144:	str	r3, [r0, #12]
    a148:	mov	r4, #6
    a14c:	mov	r0, #20
    a150:	bl	22d8 <newchunk>
    a154:	mov	fp, #135	; 0x87
    a158:	str	fp, [r0]
    a15c:	add	r3, sp, #416	; 0x1a0
    a160:	add	r3, r3, r4, lsl #2
    a164:	str	r0, [r3, #-396]	; 0xfffffe74
    a168:	lsl	r7, r4, #2
    a16c:	add	r3, sp, #416	; 0x1a0
    a170:	add	r8, r3, r7
    a174:	ldr	r3, [r8, #-400]	; 0xfffffe70
    a178:	str	r0, [r3, #4]
    a17c:	mov	r0, #20
    a180:	bl	22d8 <newchunk>
    a184:	mov	sl, #80	; 0x50
    a188:	str	sl, [r0]
    a18c:	add	r3, sp, #416	; 0x1a0
    a190:	add	r3, r3, r4, lsl #2
    a194:	str	r0, [r3, #-392]	; 0xfffffe78
    a198:	ldr	r3, [pc, #552]	; a3c8 <gen_protochain+0x758>
    a19c:	add	r3, pc, r3
    a1a0:	ldr	r6, [r3, #940]	; 0x3ac
    a1a4:	ldr	r3, [r3, #948]	; 0x3b4
    a1a8:	add	r6, r6, r3
    a1ac:	str	r6, [r0, #12]
    a1b0:	add	r5, r4, #3
    a1b4:	mov	r0, #20
    a1b8:	bl	22d8 <newchunk>
    a1bc:	mov	r9, #2
    a1c0:	str	r9, [r0]
    a1c4:	add	r3, sp, #416	; 0x1a0
    a1c8:	add	r5, r3, r5, lsl r9
    a1cc:	str	r0, [r5, #-400]	; 0xfffffe70
    a1d0:	ldr	r3, [sp]
    a1d4:	str	r3, [r0, #12]
    a1d8:	mov	r0, #20
    a1dc:	bl	22d8 <newchunk>
    a1e0:	str	fp, [r0]
    a1e4:	add	r2, sp, #416	; 0x1a0
    a1e8:	add	r3, r2, r4, lsl r9
    a1ec:	str	r0, [r3, #-384]	; 0xfffffe80
    a1f0:	ldr	r3, [r5, #-400]	; 0xfffffe70
    a1f4:	str	r0, [r3, #4]
    a1f8:	mov	r0, #20
    a1fc:	bl	22d8 <newchunk>
    a200:	mov	r5, #4
    a204:	str	r5, [r0]
    a208:	add	r2, sp, #416	; 0x1a0
    a20c:	add	r3, r2, r4, lsl r9
    a210:	str	r0, [r3, #-380]	; 0xfffffe84
    a214:	mov	r3, #1
    a218:	str	r3, [r0, #12]
    a21c:	mov	r0, #20
    a220:	bl	22d8 <newchunk>
    a224:	mov	fp, #7
    a228:	str	fp, [r0]
    a22c:	add	r2, sp, #416	; 0x1a0
    a230:	add	r3, r2, r4, lsl r9
    a234:	str	r0, [r3, #-376]	; 0xfffffe88
    a238:	mov	r0, #20
    a23c:	bl	22d8 <newchunk>
    a240:	str	sl, [r0]
    a244:	add	r2, sp, #416	; 0x1a0
    a248:	add	r3, r2, r4, lsl r9
    a24c:	str	r0, [r3, #-372]	; 0xfffffe8c
    a250:	str	r6, [r0, #12]
    a254:	mov	r0, #20
    a258:	bl	22d8 <newchunk>
    a25c:	str	r5, [r0]
    a260:	add	r2, sp, #416	; 0x1a0
    a264:	add	r3, r2, r4, lsl r9
    a268:	str	r0, [r3, #-368]	; 0xfffffe90
    a26c:	str	r9, [r0, #12]
    a270:	mov	r0, #20
    a274:	bl	22d8 <newchunk>
    a278:	mov	r3, #36	; 0x24
    a27c:	str	r3, [r0]
    a280:	add	r2, sp, #416	; 0x1a0
    a284:	add	r3, r2, r4, lsl r9
    a288:	str	r0, [r3, #-364]	; 0xfffffe94
    a28c:	str	r5, [r0, #12]
    a290:	mov	r0, #20
    a294:	bl	22d8 <newchunk>
    a298:	str	fp, [r0]
    a29c:	add	r2, sp, #416	; 0x1a0
    a2a0:	add	r3, r2, r4, lsl r9
    a2a4:	str	r0, [r3, #-360]	; 0xfffffe98
    a2a8:	mov	r0, #20
    a2ac:	bl	22d8 <newchunk>
    a2b0:	mov	r3, #96	; 0x60
    a2b4:	str	r3, [r0]
    a2b8:	add	r2, sp, #416	; 0x1a0
    a2bc:	add	r3, r2, r4, lsl r9
    a2c0:	str	r0, [r3, #-356]	; 0xfffffe9c
    a2c4:	ldr	r3, [sp]
    a2c8:	str	r3, [r0, #12]
    a2cc:	add	r6, r4, #12
    a2d0:	mov	r0, #20
    a2d4:	bl	22d8 <newchunk>
    a2d8:	mov	r3, #5
    a2dc:	str	r3, [r0]
    a2e0:	add	r3, sp, #416	; 0x1a0
    a2e4:	add	r3, r3, r6, lsl r9
    a2e8:	str	r0, [r3, #-400]	; 0xfffffe70
    a2ec:	sub	r6, r9, r6
    a2f0:	str	r6, [r0, #12]
    a2f4:	mov	r0, #20
    a2f8:	bl	22d8 <newchunk>
    a2fc:	str	r5, [r0]
    a300:	add	r3, sp, #416	; 0x1a0
    a304:	add	r4, r3, r4, lsl r9
    a308:	str	r0, [r4, #-348]	; 0xfffffea4
    a30c:	mov	r3, #0
    a310:	str	r3, [r0, #12]
    a314:	ldr	r3, [sp, #32]
    a318:	str	r0, [r3, #4]
    a31c:	ldr	r3, [r8, #-400]	; 0xfffffe70
    a320:	str	r0, [r3, #8]
    a324:	ldr	r3, [sp, #28]
    a328:	str	r0, [r3, #4]
    a32c:	add	r3, sp, #16
    a330:	add	r2, sp, #68	; 0x44
    a334:	add	r7, r2, r7
    a338:	ldr	r2, [r3]
    a33c:	ldr	r1, [r3, #4]!
    a340:	str	r1, [r2, #16]
    a344:	cmp	r3, r7
    a348:	bne	a338 <gen_protochain+0x6c8>
    a34c:	mov	r5, #0
    a350:	str	r5, [r0, #16]
    a354:	mov	r0, #208	; 0xd0
    a358:	bl	22d8 <newchunk>
    a35c:	mov	r4, r0
    a360:	mov	r3, #21
    a364:	str	r3, [r0, #8]
    a368:	str	r0, [r4, #96]	; 0x60
    a36c:	ldr	r3, [sp, #20]
    a370:	str	r3, [r0, #4]
    a374:	ldr	r3, [sp, #4]
    a378:	str	r3, [r0, #20]
    a37c:	ldr	r3, [pc, #72]	; a3cc <gen_protochain+0x75c>
    a380:	add	r3, pc, r3
    a384:	ldr	r2, [sp]
    a388:	add	r3, r3, r2, lsl #2
    a38c:	str	r5, [r3, #788]	; 0x314
    a390:	mov	r1, r0
    a394:	ldr	r0, [sp, #8]
    a398:	bl	3a30 <sf_gen_and>
    a39c:	b	9d04 <gen_protochain+0x94>
    a3a0:	ldr	r0, [pc, #40]	; a3d0 <gen_protochain+0x760>
    a3a4:	add	r0, pc, r0
    a3a8:	bl	229c <sf_bpf_error>
    a3ac:	.word	0x0002735c
    a3b0:	.word	0x0000aba0
    a3b4:	.word	0x0002762c
    a3b8:	.word	0x0000ab94
    a3bc:	.word	0x000000fc
    a3c0:	.word	0x00027594
    a3c4:	.word	0x000272d8
    a3c8:	.word	0x000271c4
    a3cc:	.word	0x00026fe0
    a3d0:	.word	0x0000a574

0000a3d4 <sf_gen_scode>:
    a3d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a3d8:	strd	r6, [sp, #8]
    a3dc:	strd	r8, [sp, #16]
    a3e0:	strd	sl, [sp, #24]
    a3e4:	str	lr, [sp, #32]
    a3e8:	sub	sp, sp, #60	; 0x3c
    a3ec:	str	r1, [sp, #20]
    a3f0:	uxtb	r5, r1
    a3f4:	ubfx	r4, r1, #8, #8
    a3f8:	ubfx	r7, r1, #16, #8
    a3fc:	cmp	r5, #4
    a400:	beq	ab24 <sf_gen_scode+0x750>
    a404:	mov	r8, r0
    a408:	bls	a484 <sf_gen_scode+0xb0>
    a40c:	cmp	r5, #6
    a410:	beq	ab68 <sf_gen_scode+0x794>
    a414:	bcc	ab30 <sf_gen_scode+0x75c>
    a418:	cmp	r5, #7
    a41c:	bne	a510 <sf_gen_scode+0x13c>
    a420:	cmp	r4, #0
    a424:	cmpne	r4, #7
    a428:	beq	aa2c <sf_gen_scode+0x658>
    a42c:	sub	r3, r4, #5
    a430:	cmp	r3, #1
    a434:	bhi	aa20 <sf_gen_scode+0x64c>
    a438:	add	r3, sp, #32
    a43c:	add	r2, sp, #24
    a440:	add	r1, sp, #28
    a444:	bl	c320 <pcap_nametoportrange>
    a448:	cmp	r0, #0
    a44c:	beq	aa78 <sf_gen_scode+0x6a4>
    a450:	cmp	r4, #6
    a454:	bne	aaa8 <sf_gen_scode+0x6d4>
    a458:	ldr	r3, [sp, #32]
    a45c:	cmp	r3, #17
    a460:	beq	aa98 <sf_gen_scode+0x6c4>
    a464:	cmp	r3, #132	; 0x84
    a468:	movne	r3, #6
    a46c:	strne	r3, [sp, #32]
    a470:	bne	aacc <sf_gen_scode+0x6f8>
    a474:	mov	r1, r8
    a478:	ldr	r0, [pc, #1828]	; aba4 <sf_gen_scode+0x7d0>
    a47c:	add	r0, pc, r0
    a480:	bl	229c <sf_bpf_error>
    a484:	cmp	r5, #2
    a488:	beq	a524 <sf_gen_scode+0x150>
    a48c:	bhi	a8c8 <sf_gen_scode+0x4f4>
    a490:	cmp	r4, #1
    a494:	beq	a5a0 <sf_gen_scode+0x1cc>
    a498:	mov	r9, r5
    a49c:	cmp	r4, #12
    a4a0:	beq	a7b4 <sf_gen_scode+0x3e0>
    a4a4:	mvn	r2, #0
    a4a8:	mvn	r3, #0
    a4ac:	strd	r2, [sp, #40]	; 0x28
    a4b0:	strd	r2, [sp, #48]	; 0x30
    a4b4:	bl	c1a8 <pcap_nametoaddrinfo>
    a4b8:	subs	r3, r0, #0
    a4bc:	str	r3, [sp, #12]
    a4c0:	beq	a7d4 <sf_gen_scode+0x400>
    a4c4:	ldr	r3, [pc, #1756]	; aba8 <sf_gen_scode+0x7d4>
    a4c8:	add	r3, pc, r3
    a4cc:	ldr	r5, [sp, #12]
    a4d0:	str	r5, [r3, #872]	; 0x368
    a4d4:	ldr	r3, [r3, #944]	; 0x3b0
    a4d8:	cmn	r3, #1
    a4dc:	movne	r3, #0
    a4e0:	moveq	r3, #1
    a4e4:	cmp	r4, #0
    a4e8:	movne	r3, #0
    a4ec:	cmp	r3, #0
    a4f0:	moveq	fp, r4
    a4f4:	movne	fp, #17
    a4f8:	moveq	sl, r4
    a4fc:	movne	sl, #2
    a500:	mov	r6, #0
    a504:	add	r3, sp, #40	; 0x28
    a508:	str	r3, [sp, #16]
    a50c:	b	a834 <sf_gen_scode+0x460>
    a510:	cmp	r5, #255	; 0xff
    a514:	bne	aba0 <sf_gen_scode+0x7cc>
    a518:	ldr	r0, [pc, #1676]	; abac <sf_gen_scode+0x7d8>
    a51c:	add	r0, pc, r0
    a520:	bl	229c <sf_bpf_error>
    a524:	bl	c204 <pcap_nametonetaddr>
    a528:	cmp	r0, #0
    a52c:	beq	a590 <sf_gen_scode+0x1bc>
    a530:	tst	r0, #-16777216	; 0xff000000
    a534:	mvnne	r1, #0
    a538:	bne	a558 <sf_gen_scode+0x184>
    a53c:	lsl	r0, r0, #8
    a540:	mvn	r1, #255	; 0xff
    a544:	tst	r0, #-16777216	; 0xff000000
    a548:	bne	a558 <sf_gen_scode+0x184>
    a54c:	lsl	r1, r1, #8
    a550:	lsls	r0, r0, #8
    a554:	bne	a544 <sf_gen_scode+0x170>
    a558:	mov	r3, #2
    a55c:	str	r3, [sp]
    a560:	mov	r3, r7
    a564:	mov	r2, r4
    a568:	bl	8cf8 <gen_host>
    a56c:	mov	r6, r0
    a570:	mov	r0, r6
    a574:	add	sp, sp, #60	; 0x3c
    a578:	ldrd	r4, [sp]
    a57c:	ldrd	r6, [sp, #8]
    a580:	ldrd	r8, [sp, #16]
    a584:	ldrd	sl, [sp, #24]
    a588:	add	sp, sp, #32
    a58c:	pop	{pc}		; (ldr pc, [sp], #4)
    a590:	mov	r1, r8
    a594:	ldr	r0, [pc, #1556]	; abb0 <sf_gen_scode+0x7dc>
    a598:	add	r0, pc, r0
    a59c:	bl	229c <sf_bpf_error>
    a5a0:	ldr	r3, [pc, #1548]	; abb4 <sf_gen_scode+0x7e0>
    a5a4:	add	r3, pc, r3
    a5a8:	ldr	r3, [r3, #852]	; 0x354
    a5ac:	cmp	r3, #119	; 0x77
    a5b0:	beq	a62c <sf_gen_scode+0x258>
    a5b4:	bgt	a658 <sf_gen_scode+0x284>
    a5b8:	cmp	r3, #6
    a5bc:	beq	a724 <sf_gen_scode+0x350>
    a5c0:	ble	a5f4 <sf_gen_scode+0x220>
    a5c4:	cmp	r3, #10
    a5c8:	bne	a624 <sf_gen_scode+0x250>
    a5cc:	bl	c730 <pcap_ether_hostton>
    a5d0:	subs	r4, r0, #0
    a5d4:	beq	a714 <sf_gen_scode+0x340>
    a5d8:	mov	r1, r7
    a5dc:	mov	r0, r4
    a5e0:	bl	4afc <gen_fhostop>
    a5e4:	mov	r6, r0
    a5e8:	mov	r0, r4
    a5ec:	bl	d48 <free@plt>
    a5f0:	b	a570 <sf_gen_scode+0x19c>
    a5f4:	cmp	r3, #1
    a5f8:	bne	a6f8 <sf_gen_scode+0x324>
    a5fc:	bl	c730 <pcap_ether_hostton>
    a600:	subs	r4, r0, #0
    a604:	beq	a704 <sf_gen_scode+0x330>
    a608:	mov	r1, r7
    a60c:	mov	r0, r4
    a610:	bl	4d78 <gen_ehostop>
    a614:	mov	r6, r0
    a618:	mov	r0, r4
    a61c:	bl	d48 <free@plt>
    a620:	b	a570 <sf_gen_scode+0x19c>
    a624:	cmp	r3, #105	; 0x69
    a628:	bne	a6f8 <sf_gen_scode+0x324>
    a62c:	mov	r0, r8
    a630:	bl	c730 <pcap_ether_hostton>
    a634:	subs	r4, r0, #0
    a638:	beq	a75c <sf_gen_scode+0x388>
    a63c:	mov	r1, r7
    a640:	mov	r0, r4
    a644:	bl	5534 <gen_wlanhostop>
    a648:	mov	r6, r0
    a64c:	mov	r0, r4
    a650:	bl	d48 <free@plt>
    a654:	b	a570 <sf_gen_scode+0x19c>
    a658:	cmp	r3, #127	; 0x7f
    a65c:	beq	a62c <sf_gen_scode+0x258>
    a660:	bgt	a6e8 <sf_gen_scode+0x314>
    a664:	cmp	r3, #122	; 0x7a
    a668:	beq	a76c <sf_gen_scode+0x398>
    a66c:	cmp	r3, #123	; 0x7b
    a670:	bne	a6f8 <sf_gen_scode+0x324>
    a674:	ldr	r3, [pc, #1340]	; abb8 <sf_gen_scode+0x7e4>
    a678:	add	r3, pc, r3
    a67c:	ldr	r3, [r3, #892]	; 0x37c
    a680:	cmp	r3, #0
    a684:	beq	a6f8 <sf_gen_scode+0x324>
    a688:	mov	r3, #65280	; 0xff00
    a68c:	mov	r2, #8
    a690:	mov	r1, #4
    a694:	mov	r0, #1
    a698:	bl	4908 <gen_cmp>
    a69c:	mov	r4, r0
    a6a0:	ldr	r3, [r0, #44]	; 0x2c
    a6a4:	clz	r3, r3
    a6a8:	lsr	r3, r3, #5
    a6ac:	str	r3, [r0, #44]	; 0x2c
    a6b0:	mov	r0, r8
    a6b4:	bl	c730 <pcap_ether_hostton>
    a6b8:	subs	r5, r0, #0
    a6bc:	beq	a7a4 <sf_gen_scode+0x3d0>
    a6c0:	mov	r1, r7
    a6c4:	mov	r0, r5
    a6c8:	bl	4d78 <gen_ehostop>
    a6cc:	mov	r6, r0
    a6d0:	mov	r1, r0
    a6d4:	mov	r0, r4
    a6d8:	bl	3a30 <sf_gen_and>
    a6dc:	mov	r0, r5
    a6e0:	bl	d48 <free@plt>
    a6e4:	b	a570 <sf_gen_scode+0x19c>
    a6e8:	cmp	r3, #163	; 0xa3
    a6ec:	beq	a62c <sf_gen_scode+0x258>
    a6f0:	cmp	r3, #192	; 0xc0
    a6f4:	beq	a62c <sf_gen_scode+0x258>
    a6f8:	ldr	r0, [pc, #1212]	; abbc <sf_gen_scode+0x7e8>
    a6fc:	add	r0, pc, r0
    a700:	bl	229c <sf_bpf_error>
    a704:	mov	r1, r8
    a708:	ldr	r0, [pc, #1200]	; abc0 <sf_gen_scode+0x7ec>
    a70c:	add	r0, pc, r0
    a710:	bl	229c <sf_bpf_error>
    a714:	mov	r1, r8
    a718:	ldr	r0, [pc, #1188]	; abc4 <sf_gen_scode+0x7f0>
    a71c:	add	r0, pc, r0
    a720:	bl	229c <sf_bpf_error>
    a724:	bl	c730 <pcap_ether_hostton>
    a728:	subs	r4, r0, #0
    a72c:	beq	a74c <sf_gen_scode+0x378>
    a730:	mov	r1, r7
    a734:	mov	r0, r4
    a738:	bl	4bd0 <gen_thostop>
    a73c:	mov	r6, r0
    a740:	mov	r0, r4
    a744:	bl	d48 <free@plt>
    a748:	b	a570 <sf_gen_scode+0x19c>
    a74c:	mov	r1, r8
    a750:	ldr	r0, [pc, #1136]	; abc8 <sf_gen_scode+0x7f4>
    a754:	add	r0, pc, r0
    a758:	bl	229c <sf_bpf_error>
    a75c:	mov	r1, r8
    a760:	ldr	r0, [pc, #1124]	; abcc <sf_gen_scode+0x7f8>
    a764:	add	r0, pc, r0
    a768:	bl	229c <sf_bpf_error>
    a76c:	bl	c730 <pcap_ether_hostton>
    a770:	subs	r4, r0, #0
    a774:	beq	a794 <sf_gen_scode+0x3c0>
    a778:	mov	r1, r7
    a77c:	mov	r0, r4
    a780:	bl	4ca4 <gen_ipfchostop>
    a784:	mov	r6, r0
    a788:	mov	r0, r4
    a78c:	bl	d48 <free@plt>
    a790:	b	a570 <sf_gen_scode+0x19c>
    a794:	mov	r1, r8
    a798:	ldr	r0, [pc, #1072]	; abd0 <sf_gen_scode+0x7fc>
    a79c:	add	r0, pc, r0
    a7a0:	bl	229c <sf_bpf_error>
    a7a4:	mov	r1, r8
    a7a8:	ldr	r0, [pc, #1060]	; abd4 <sf_gen_scode+0x800>
    a7ac:	add	r0, pc, r0
    a7b0:	bl	229c <sf_bpf_error>
    a7b4:	bl	c82c <__pcap_nametodnaddr>
    a7b8:	str	r5, [sp]
    a7bc:	mov	r3, r7
    a7c0:	mov	r2, #12
    a7c4:	mov	r1, #0
    a7c8:	bl	8cf8 <gen_host>
    a7cc:	mov	r6, r0
    a7d0:	b	a570 <sf_gen_scode+0x19c>
    a7d4:	mov	r1, r8
    a7d8:	ldr	r0, [pc, #1016]	; abd8 <sf_gen_scode+0x804>
    a7dc:	add	r0, pc, r0
    a7e0:	bl	229c <sf_bpf_error>
    a7e4:	cmp	sl, #17
    a7e8:	beq	a828 <sf_gen_scode+0x454>
    a7ec:	ldr	r3, [r5, #20]
    a7f0:	ldr	r0, [r3, #4]
    a7f4:	str	r9, [sp]
    a7f8:	mov	r3, r7
    a7fc:	mov	r2, sl
    a800:	mvn	r1, #0
    a804:	rev	r0, r0
    a808:	bl	8cf8 <gen_host>
    a80c:	str	r0, [sp, #8]
    a810:	cmp	r6, #0
    a814:	beq	a874 <sf_gen_scode+0x4a0>
    a818:	ldr	r1, [sp, #8]
    a81c:	mov	r0, r6
    a820:	bl	3ac0 <sf_gen_or>
    a824:	ldr	r6, [sp, #8]
    a828:	ldr	r5, [r5, #28]
    a82c:	cmp	r5, #0
    a830:	beq	a87c <sf_gen_scode+0x4a8>
    a834:	ldr	r3, [r5, #4]
    a838:	cmp	r3, #2
    a83c:	beq	a7e4 <sf_gen_scode+0x410>
    a840:	cmp	r3, #10
    a844:	bne	a828 <sf_gen_scode+0x454>
    a848:	cmp	fp, #2
    a84c:	beq	a828 <sf_gen_scode+0x454>
    a850:	ldr	r0, [r5, #20]
    a854:	str	r9, [sp]
    a858:	mov	r3, r7
    a85c:	mov	r2, fp
    a860:	ldr	r1, [sp, #16]
    a864:	add	r0, r0, #8
    a868:	bl	9398 <gen_host6>
    a86c:	str	r0, [sp, #8]
    a870:	b	a810 <sf_gen_scode+0x43c>
    a874:	ldr	r6, [sp, #8]
    a878:	b	a828 <sf_gen_scode+0x454>
    a87c:	ldr	r3, [pc, #856]	; abdc <sf_gen_scode+0x808>
    a880:	add	r3, pc, r3
    a884:	mov	r2, #0
    a888:	str	r2, [r3, #872]	; 0x368
    a88c:	ldr	r0, [sp, #12]
    a890:	bl	e80 <freeaddrinfo@plt>
    a894:	cmp	r6, #0
    a898:	bne	a570 <sf_gen_scode+0x19c>
    a89c:	cmp	r4, #0
    a8a0:	beq	a8bc <sf_gen_scode+0x4e8>
    a8a4:	ldr	r2, [pc, #820]	; abe0 <sf_gen_scode+0x80c>
    a8a8:	add	r2, pc, r2
    a8ac:	mov	r1, r8
    a8b0:	ldr	r0, [pc, #812]	; abe4 <sf_gen_scode+0x810>
    a8b4:	add	r0, pc, r0
    a8b8:	bl	229c <sf_bpf_error>
    a8bc:	ldr	r2, [pc, #804]	; abe8 <sf_gen_scode+0x814>
    a8c0:	add	r2, pc, r2
    a8c4:	b	a8ac <sf_gen_scode+0x4d8>
    a8c8:	cmp	r4, #0
    a8cc:	cmpne	r4, #7
    a8d0:	beq	a934 <sf_gen_scode+0x560>
    a8d4:	sub	r3, r4, #5
    a8d8:	cmp	r3, #1
    a8dc:	bhi	a928 <sf_gen_scode+0x554>
    a8e0:	add	r2, sp, #32
    a8e4:	add	r1, sp, #36	; 0x24
    a8e8:	bl	c228 <pcap_nametoport>
    a8ec:	cmp	r0, #0
    a8f0:	beq	a97c <sf_gen_scode+0x5a8>
    a8f4:	cmp	r4, #6
    a8f8:	bne	a9ac <sf_gen_scode+0x5d8>
    a8fc:	ldr	r3, [sp, #32]
    a900:	cmp	r3, #17
    a904:	beq	a99c <sf_gen_scode+0x5c8>
    a908:	cmp	r3, #132	; 0x84
    a90c:	movne	r3, #6
    a910:	strne	r3, [sp, #32]
    a914:	bne	a9d0 <sf_gen_scode+0x5fc>
    a918:	mov	r1, r8
    a91c:	ldr	r0, [pc, #712]	; abec <sf_gen_scode+0x818>
    a920:	add	r0, pc, r0
    a924:	bl	229c <sf_bpf_error>
    a928:	ldr	r0, [pc, #704]	; abf0 <sf_gen_scode+0x81c>
    a92c:	add	r0, pc, r0
    a930:	bl	229c <sf_bpf_error>
    a934:	add	r2, sp, #32
    a938:	add	r1, sp, #36	; 0x24
    a93c:	bl	c228 <pcap_nametoport>
    a940:	cmp	r0, #0
    a944:	beq	a97c <sf_gen_scode+0x5a8>
    a948:	cmp	r4, #7
    a94c:	bne	a8f4 <sf_gen_scode+0x520>
    a950:	ldr	r3, [sp, #32]
    a954:	cmp	r3, #6
    a958:	beq	a98c <sf_gen_scode+0x5b8>
    a95c:	cmp	r3, #132	; 0x84
    a960:	movne	r3, #17
    a964:	strne	r3, [sp, #32]
    a968:	bne	a9d0 <sf_gen_scode+0x5fc>
    a96c:	mov	r1, r8
    a970:	ldr	r0, [pc, #636]	; abf4 <sf_gen_scode+0x820>
    a974:	add	r0, pc, r0
    a978:	bl	229c <sf_bpf_error>
    a97c:	mov	r1, r8
    a980:	ldr	r0, [pc, #624]	; abf8 <sf_gen_scode+0x824>
    a984:	add	r0, pc, r0
    a988:	bl	229c <sf_bpf_error>
    a98c:	mov	r1, r8
    a990:	ldr	r0, [pc, #612]	; abfc <sf_gen_scode+0x828>
    a994:	add	r0, pc, r0
    a998:	bl	229c <sf_bpf_error>
    a99c:	mov	r1, r8
    a9a0:	ldr	r0, [pc, #600]	; ac00 <sf_gen_scode+0x82c>
    a9a4:	add	r0, pc, r0
    a9a8:	bl	229c <sf_bpf_error>
    a9ac:	cmp	r4, #5
    a9b0:	bne	a9d0 <sf_gen_scode+0x5fc>
    a9b4:	ldr	r3, [sp, #32]
    a9b8:	cmp	r3, #17
    a9bc:	beq	aa00 <sf_gen_scode+0x62c>
    a9c0:	cmp	r3, #6
    a9c4:	movne	r3, #132	; 0x84
    a9c8:	strne	r3, [sp, #32]
    a9cc:	beq	aa10 <sf_gen_scode+0x63c>
    a9d0:	mov	r2, r7
    a9d4:	ldr	r1, [sp, #32]
    a9d8:	ldr	r0, [sp, #36]	; 0x24
    a9dc:	bl	98d8 <gen_port>
    a9e0:	mov	r6, r0
    a9e4:	mov	r2, r7
    a9e8:	ldr	r1, [sp, #32]
    a9ec:	ldr	r0, [sp, #36]	; 0x24
    a9f0:	bl	99b0 <gen_port6>
    a9f4:	mov	r1, r6
    a9f8:	bl	3ac0 <sf_gen_or>
    a9fc:	b	a570 <sf_gen_scode+0x19c>
    aa00:	mov	r1, r8
    aa04:	ldr	r0, [pc, #504]	; ac04 <sf_gen_scode+0x830>
    aa08:	add	r0, pc, r0
    aa0c:	bl	229c <sf_bpf_error>
    aa10:	mov	r1, r8
    aa14:	ldr	r0, [pc, #492]	; ac08 <sf_gen_scode+0x834>
    aa18:	add	r0, pc, r0
    aa1c:	bl	229c <sf_bpf_error>
    aa20:	ldr	r0, [pc, #484]	; ac0c <sf_gen_scode+0x838>
    aa24:	add	r0, pc, r0
    aa28:	bl	229c <sf_bpf_error>
    aa2c:	add	r3, sp, #32
    aa30:	add	r2, sp, #24
    aa34:	add	r1, sp, #28
    aa38:	bl	c320 <pcap_nametoportrange>
    aa3c:	cmp	r0, #0
    aa40:	beq	aa78 <sf_gen_scode+0x6a4>
    aa44:	cmp	r4, #7
    aa48:	bne	a450 <sf_gen_scode+0x7c>
    aa4c:	ldr	r3, [sp, #32]
    aa50:	cmp	r3, #6
    aa54:	beq	aa88 <sf_gen_scode+0x6b4>
    aa58:	cmp	r3, #132	; 0x84
    aa5c:	movne	r3, #17
    aa60:	strne	r3, [sp, #32]
    aa64:	bne	aacc <sf_gen_scode+0x6f8>
    aa68:	mov	r1, r8
    aa6c:	ldr	r0, [pc, #412]	; ac10 <sf_gen_scode+0x83c>
    aa70:	add	r0, pc, r0
    aa74:	bl	229c <sf_bpf_error>
    aa78:	mov	r1, r8
    aa7c:	ldr	r0, [pc, #400]	; ac14 <sf_gen_scode+0x840>
    aa80:	add	r0, pc, r0
    aa84:	bl	229c <sf_bpf_error>
    aa88:	mov	r1, r8
    aa8c:	ldr	r0, [pc, #388]	; ac18 <sf_gen_scode+0x844>
    aa90:	add	r0, pc, r0
    aa94:	bl	229c <sf_bpf_error>
    aa98:	mov	r1, r8
    aa9c:	ldr	r0, [pc, #376]	; ac1c <sf_gen_scode+0x848>
    aaa0:	add	r0, pc, r0
    aaa4:	bl	229c <sf_bpf_error>
    aaa8:	cmp	r4, #5
    aaac:	bne	aacc <sf_gen_scode+0x6f8>
    aab0:	ldr	r3, [sp, #32]
    aab4:	cmp	r3, #17
    aab8:	beq	ab04 <sf_gen_scode+0x730>
    aabc:	cmp	r3, #6
    aac0:	movne	r3, #132	; 0x84
    aac4:	strne	r3, [sp, #32]
    aac8:	beq	ab14 <sf_gen_scode+0x740>
    aacc:	mov	r3, r7
    aad0:	ldr	r2, [sp, #32]
    aad4:	ldr	r1, [sp, #24]
    aad8:	ldr	r0, [sp, #28]
    aadc:	bl	9a88 <gen_portrange>
    aae0:	mov	r6, r0
    aae4:	mov	r3, r7
    aae8:	ldr	r2, [sp, #32]
    aaec:	ldr	r1, [sp, #24]
    aaf0:	ldr	r0, [sp, #28]
    aaf4:	bl	9b7c <gen_portrange6>
    aaf8:	mov	r1, r6
    aafc:	bl	3ac0 <sf_gen_or>
    ab00:	b	a570 <sf_gen_scode+0x19c>
    ab04:	mov	r1, r8
    ab08:	ldr	r0, [pc, #272]	; ac20 <sf_gen_scode+0x84c>
    ab0c:	add	r0, pc, r0
    ab10:	bl	229c <sf_bpf_error>
    ab14:	mov	r1, r8
    ab18:	ldr	r0, [pc, #260]	; ac24 <sf_gen_scode+0x850>
    ab1c:	add	r0, pc, r0
    ab20:	bl	229c <sf_bpf_error>
    ab24:	ldr	r0, [pc, #252]	; ac28 <sf_gen_scode+0x854>
    ab28:	add	r0, pc, r0
    ab2c:	bl	229c <sf_bpf_error>
    ab30:	mov	r1, r4
    ab34:	bl	27ac <lookup_proto>
    ab38:	str	r0, [sp, #32]
    ab3c:	cmp	r0, #0
    ab40:	blt	ab58 <sf_gen_scode+0x784>
    ab44:	mov	r2, r7
    ab48:	mov	r1, r4
    ab4c:	bl	7948 <gen_proto>
    ab50:	mov	r6, r0
    ab54:	b	a570 <sf_gen_scode+0x19c>
    ab58:	mov	r1, r8
    ab5c:	ldr	r0, [pc, #200]	; ac2c <sf_gen_scode+0x858>
    ab60:	add	r0, pc, r0
    ab64:	bl	229c <sf_bpf_error>
    ab68:	mov	r1, r4
    ab6c:	bl	27ac <lookup_proto>
    ab70:	str	r0, [sp, #32]
    ab74:	cmp	r0, #0
    ab78:	blt	ab90 <sf_gen_scode+0x7bc>
    ab7c:	mov	r2, r7
    ab80:	mov	r1, r4
    ab84:	bl	9c70 <gen_protochain>
    ab88:	mov	r6, r0
    ab8c:	b	a570 <sf_gen_scode+0x19c>
    ab90:	mov	r1, r8
    ab94:	ldr	r0, [pc, #148]	; ac30 <sf_gen_scode+0x85c>
    ab98:	add	r0, pc, r0
    ab9c:	bl	229c <sf_bpf_error>
    aba0:	bl	ebc <abort@plt>
    aba4:	.word	0x0000a6d0
    aba8:	.word	0x00026e98
    abac:	.word	0x00009508
    abb0:	.word	0x0000a3c4
    abb4:	.word	0x00026dbc
    abb8:	.word	0x00026ce8
    abbc:	.word	0x0000a304
    abc0:	.word	0x0000a268
    abc4:	.word	0x0000a270
    abc8:	.word	0x0000a250
    abcc:	.word	0x0000a260
    abd0:	.word	0x0000a244
    abd4:	.word	0x0000a1c8
    abd8:	.word	0x0000a280
    abdc:	.word	0x00026ae0
    abe0:	.word	0x0000a094
    abe4:	.word	0x0000a1bc
    abe8:	.word	0x00008f5c
    abec:	.word	0x0000a1a8
    abf0:	.word	0x0000a158
    abf4:	.word	0x0000a154
    abf8:	.word	0x0000a11c
    abfc:	.word	0x0000a120
    ac00:	.word	0x0000a138
    ac04:	.word	0x0000a0d4
    ac08:	.word	0x0000a09c
    ac0c:	.word	0x0000a0cc
    ac10:	.word	0x0000a0dc
    ac14:	.word	0x0000a094
    ac18:	.word	0x0000a0a0
    ac1c:	.word	0x0000a0c8
    ac20:	.word	0x0000a05c
    ac24:	.word	0x0000a014
    ac28:	.word	0x0000a05c
    ac2c:	.word	0x0000a054
    ac30:	.word	0x0000a01c

0000ac34 <sf_gen_ncode>:
    ac34:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ac38:	strd	r6, [sp, #8]
    ac3c:	str	r8, [sp, #16]
    ac40:	str	lr, [sp, #20]
    ac44:	sub	sp, sp, #16
    ac48:	str	r1, [sp, #12]
    ac4c:	str	r2, [sp, #8]
    ac50:	uxtb	r4, r2
    ac54:	ubfx	r5, r2, #8, #8
    ac58:	mov	r8, r5
    ac5c:	ubfx	r7, r2, #16, #8
    ac60:	subs	r6, r0, #0
    ac64:	beq	adb0 <sf_gen_ncode+0x17c>
    ac68:	cmp	r5, #12
    ac6c:	beq	acf8 <sf_gen_ncode+0xc4>
    ac70:	add	r1, sp, #12
    ac74:	mov	r0, r6
    ac78:	bl	c558 <__pcap_atoin>
    ac7c:	cmp	r4, #4
    ac80:	beq	aed4 <sf_gen_ncode+0x2a0>
    ac84:	bls	adb8 <sf_gen_ncode+0x184>
    ac88:	cmp	r4, #6
    ac8c:	beq	af10 <sf_gen_ncode+0x2dc>
    ac90:	bcc	aee0 <sf_gen_ncode+0x2ac>
    ac94:	cmp	r4, #7
    ac98:	bne	ae1c <sf_gen_ncode+0x1e8>
    ac9c:	cmp	r5, #7
    aca0:	beq	aec4 <sf_gen_ncode+0x290>
    aca4:	cmp	r5, #6
    aca8:	beq	acc0 <sf_gen_ncode+0x8c>
    acac:	cmp	r5, #5
    acb0:	beq	aecc <sf_gen_ncode+0x298>
    acb4:	cmp	r5, #0
    acb8:	mvneq	r8, #0
    acbc:	bne	aeb8 <sf_gen_ncode+0x284>
    acc0:	mov	r3, r7
    acc4:	mov	r2, r8
    acc8:	ldr	r1, [sp, #12]
    accc:	mov	r0, r1
    acd0:	bl	9a88 <gen_portrange>
    acd4:	mov	r4, r0
    acd8:	mov	r3, r7
    acdc:	mov	r2, r8
    ace0:	ldr	r1, [sp, #12]
    ace4:	mov	r0, r1
    ace8:	bl	9b7c <gen_portrange6>
    acec:	mov	r1, r4
    acf0:	bl	3ac0 <sf_gen_or>
    acf4:	b	aef4 <sf_gen_ncode+0x2c0>
    acf8:	add	r1, sp, #12
    acfc:	mov	r0, r6
    ad00:	bl	c5dc <__pcap_atodn>
    ad04:	cmp	r4, #4
    ad08:	beq	aed4 <sf_gen_ncode+0x2a0>
    ad0c:	bls	ad30 <sf_gen_ncode+0xfc>
    ad10:	cmp	r4, #6
    ad14:	beq	af10 <sf_gen_ncode+0x2dc>
    ad18:	bcc	aee0 <sf_gen_ncode+0x2ac>
    ad1c:	cmp	r4, #7
    ad20:	beq	ac9c <sf_gen_ncode+0x68>
    ad24:	cmp	r4, #255	; 0xff
    ad28:	beq	ae24 <sf_gen_ncode+0x1f0>
    ad2c:	bl	ebc <abort@plt>
    ad30:	cmp	r4, #2
    ad34:	bls	ad8c <sf_gen_ncode+0x158>
    ad38:	cmp	r5, #7
    ad3c:	beq	aea8 <sf_gen_ncode+0x274>
    ad40:	cmp	r5, #6
    ad44:	beq	ad5c <sf_gen_ncode+0x128>
    ad48:	cmp	r5, #5
    ad4c:	beq	aeb0 <sf_gen_ncode+0x27c>
    ad50:	cmp	r5, #0
    ad54:	mvneq	r8, #0
    ad58:	bne	ae9c <sf_gen_ncode+0x268>
    ad5c:	mov	r2, r7
    ad60:	mov	r1, r8
    ad64:	ldr	r0, [sp, #12]
    ad68:	bl	98d8 <gen_port>
    ad6c:	mov	r4, r0
    ad70:	mov	r2, r7
    ad74:	mov	r1, r8
    ad78:	ldr	r0, [sp, #12]
    ad7c:	bl	99b0 <gen_port6>
    ad80:	mov	r1, r4
    ad84:	bl	3ac0 <sf_gen_or>
    ad88:	b	aef4 <sf_gen_ncode+0x2c0>
    ad8c:	mov	r3, r4
    ad90:	str	r3, [sp]
    ad94:	mov	r3, r7
    ad98:	mov	r2, #12
    ad9c:	mov	r1, #0
    ada0:	ldr	r0, [sp, #12]
    ada4:	bl	8cf8 <gen_host>
    ada8:	mov	r4, r0
    adac:	b	aef4 <sf_gen_ncode+0x2c0>
    adb0:	mov	r0, #32
    adb4:	b	ac7c <sf_gen_ncode+0x48>
    adb8:	cmp	r4, #2
    adbc:	bhi	ad38 <sf_gen_ncode+0x104>
    adc0:	mov	r3, r4
    adc4:	cmp	r5, #12
    adc8:	beq	ad90 <sf_gen_ncode+0x15c>
    adcc:	cmp	r5, #1
    add0:	beq	ae30 <sf_gen_ncode+0x1fc>
    add4:	cmp	r4, #2
    add8:	cmpeq	r6, #0
    addc:	moveq	r6, #1
    ade0:	movne	r6, #0
    ade4:	beq	ae3c <sf_gen_ncode+0x208>
    ade8:	rsb	r0, r0, #32
    adec:	ldr	r3, [sp, #12]
    adf0:	lsl	r3, r3, r0
    adf4:	str	r3, [sp, #12]
    adf8:	mvn	r1, #0
    adfc:	lsl	r1, r1, r0
    ae00:	str	r4, [sp]
    ae04:	mov	r3, r7
    ae08:	mov	r2, r5
    ae0c:	ldr	r0, [sp, #12]
    ae10:	bl	8cf8 <gen_host>
    ae14:	mov	r4, r0
    ae18:	b	aef4 <sf_gen_ncode+0x2c0>
    ae1c:	cmp	r4, #255	; 0xff
    ae20:	bne	ad2c <sf_gen_ncode+0xf8>
    ae24:	ldr	r0, [pc, #252]	; af28 <sf_gen_ncode+0x2f4>
    ae28:	add	r0, pc, r0
    ae2c:	bl	229c <sf_bpf_error>
    ae30:	ldr	r0, [pc, #244]	; af2c <sf_gen_ncode+0x2f8>
    ae34:	add	r0, pc, r0
    ae38:	bl	229c <sf_bpf_error>
    ae3c:	ldr	r3, [sp, #12]
    ae40:	cmp	r3, #0
    ae44:	beq	ae94 <sf_gen_ncode+0x260>
    ae48:	tst	r3, #-16777216	; 0xff000000
    ae4c:	mvnne	r1, #0
    ae50:	bne	ae00 <sf_gen_ncode+0x1cc>
    ae54:	lsl	r3, r3, #8
    ae58:	str	r3, [sp, #12]
    ae5c:	mov	r2, #0
    ae60:	mvn	r1, #255	; 0xff
    ae64:	tst	r3, #-16777216	; 0xff000000
    ae68:	bne	ae88 <sf_gen_ncode+0x254>
    ae6c:	lsl	r1, r1, #8
    ae70:	mov	r2, r6
    ae74:	lsls	r3, r3, #8
    ae78:	bne	ae64 <sf_gen_ncode+0x230>
    ae7c:	mov	r3, #0
    ae80:	str	r3, [sp, #12]
    ae84:	b	ae00 <sf_gen_ncode+0x1cc>
    ae88:	cmp	r2, #0
    ae8c:	strne	r3, [sp, #12]
    ae90:	b	ae00 <sf_gen_ncode+0x1cc>
    ae94:	mvn	r1, #0
    ae98:	b	ae00 <sf_gen_ncode+0x1cc>
    ae9c:	ldr	r0, [pc, #140]	; af30 <sf_gen_ncode+0x2fc>
    aea0:	add	r0, pc, r0
    aea4:	bl	229c <sf_bpf_error>
    aea8:	mov	r8, #17
    aeac:	b	ad5c <sf_gen_ncode+0x128>
    aeb0:	mov	r8, #132	; 0x84
    aeb4:	b	ad5c <sf_gen_ncode+0x128>
    aeb8:	ldr	r0, [pc, #116]	; af34 <sf_gen_ncode+0x300>
    aebc:	add	r0, pc, r0
    aec0:	bl	229c <sf_bpf_error>
    aec4:	mov	r8, #17
    aec8:	b	acc0 <sf_gen_ncode+0x8c>
    aecc:	mov	r8, #132	; 0x84
    aed0:	b	acc0 <sf_gen_ncode+0x8c>
    aed4:	ldr	r0, [pc, #92]	; af38 <sf_gen_ncode+0x304>
    aed8:	add	r0, pc, r0
    aedc:	bl	229c <sf_bpf_error>
    aee0:	mov	r2, r7
    aee4:	mov	r1, r5
    aee8:	ldr	r0, [sp, #12]
    aeec:	bl	7948 <gen_proto>
    aef0:	mov	r4, r0
    aef4:	mov	r0, r4
    aef8:	add	sp, sp, #16
    aefc:	ldrd	r4, [sp]
    af00:	ldrd	r6, [sp, #8]
    af04:	ldr	r8, [sp, #16]
    af08:	add	sp, sp, #20
    af0c:	pop	{pc}		; (ldr pc, [sp], #4)
    af10:	mov	r2, r7
    af14:	mov	r1, r5
    af18:	ldr	r0, [sp, #12]
    af1c:	bl	9c70 <gen_protochain>
    af20:	mov	r4, r0
    af24:	b	aef4 <sf_gen_ncode+0x2c0>
    af28:	.word	0x00008bfc
    af2c:	.word	0x00009d98
    af30:	.word	0x00009be4
    af34:	.word	0x00009c34
    af38:	.word	0x00009d10

0000af3c <sf_gen_broadcast>:
    af3c:	strd	r4, [sp, #-16]!
    af40:	str	r6, [sp, #8]
    af44:	str	lr, [sp, #12]
    af48:	sub	sp, sp, #8
    af4c:	cmp	r0, #0
    af50:	blt	b18c <sf_gen_broadcast+0x250>
    af54:	cmp	r0, #1
    af58:	ble	aff0 <sf_gen_broadcast+0xb4>
    af5c:	cmp	r0, #2
    af60:	bne	b18c <sf_gen_broadcast+0x250>
    af64:	ldr	r3, [pc, #556]	; b198 <sf_gen_broadcast+0x25c>
    af68:	add	r3, pc, r3
    af6c:	ldr	r4, [r3, #876]	; 0x36c
    af70:	cmn	r4, #1
    af74:	beq	b180 <sf_gen_broadcast+0x244>
    af78:	mov	r0, #2048	; 0x800
    af7c:	bl	6abc <gen_linktype>
    af80:	mov	r5, r0
    af84:	mvn	r4, r4
    af88:	str	r4, [sp]
    af8c:	mov	r3, #0
    af90:	mov	r2, r3
    af94:	mov	r1, #16
    af98:	mov	r0, #3
    af9c:	bl	5508 <gen_mcmp>
    afa0:	mov	r6, r0
    afa4:	str	r4, [sp]
    afa8:	mov	r3, r4
    afac:	mov	r2, #0
    afb0:	mov	r1, #16
    afb4:	mov	r0, #3
    afb8:	bl	5508 <gen_mcmp>
    afbc:	mov	r4, r0
    afc0:	mov	r1, r0
    afc4:	mov	r0, r6
    afc8:	bl	3ac0 <sf_gen_or>
    afcc:	mov	r1, r4
    afd0:	mov	r0, r5
    afd4:	bl	3a30 <sf_gen_and>
    afd8:	mov	r0, r4
    afdc:	add	sp, sp, #8
    afe0:	ldrd	r4, [sp]
    afe4:	ldr	r6, [sp, #8]
    afe8:	add	sp, sp, #12
    afec:	pop	{pc}		; (ldr pc, [sp], #4)
    aff0:	ldr	r3, [pc, #420]	; b19c <sf_gen_broadcast+0x260>
    aff4:	add	r3, pc, r3
    aff8:	ldr	r3, [r3, #852]	; 0x354
    affc:	cmp	r3, #119	; 0x77
    b000:	beq	b06c <sf_gen_broadcast+0x130>
    b004:	bgt	b088 <sf_gen_broadcast+0x14c>
    b008:	cmp	r3, #7
    b00c:	beq	b120 <sf_gen_broadcast+0x1e4>
    b010:	bgt	b040 <sf_gen_broadcast+0x104>
    b014:	cmp	r3, #1
    b018:	beq	b13c <sf_gen_broadcast+0x200>
    b01c:	cmp	r3, #6
    b020:	bne	b174 <sf_gen_broadcast+0x238>
    b024:	mov	r1, #2
    b028:	ldr	r0, [pc, #368]	; b1a0 <sf_gen_broadcast+0x264>
    b02c:	add	r0, pc, r0
    b030:	add	r0, r0, #8
    b034:	bl	4bd0 <gen_thostop>
    b038:	mov	r4, r0
    b03c:	b	afd8 <sf_gen_broadcast+0x9c>
    b040:	cmp	r3, #10
    b044:	bne	b064 <sf_gen_broadcast+0x128>
    b048:	mov	r1, #2
    b04c:	ldr	r0, [pc, #336]	; b1a4 <sf_gen_broadcast+0x268>
    b050:	add	r0, pc, r0
    b054:	add	r0, r0, #8
    b058:	bl	4afc <gen_fhostop>
    b05c:	mov	r4, r0
    b060:	b	afd8 <sf_gen_broadcast+0x9c>
    b064:	cmp	r3, #105	; 0x69
    b068:	bne	b174 <sf_gen_broadcast+0x238>
    b06c:	mov	r1, #2
    b070:	ldr	r0, [pc, #304]	; b1a8 <sf_gen_broadcast+0x26c>
    b074:	add	r0, pc, r0
    b078:	add	r0, r0, #8
    b07c:	bl	5534 <gen_wlanhostop>
    b080:	mov	r4, r0
    b084:	b	afd8 <sf_gen_broadcast+0x9c>
    b088:	cmp	r3, #127	; 0x7f
    b08c:	beq	b06c <sf_gen_broadcast+0x130>
    b090:	bgt	b108 <sf_gen_broadcast+0x1cc>
    b094:	cmp	r3, #122	; 0x7a
    b098:	beq	b158 <sf_gen_broadcast+0x21c>
    b09c:	cmp	r3, #123	; 0x7b
    b0a0:	bne	b174 <sf_gen_broadcast+0x238>
    b0a4:	ldr	r3, [pc, #256]	; b1ac <sf_gen_broadcast+0x270>
    b0a8:	add	r3, pc, r3
    b0ac:	ldr	r3, [r3, #892]	; 0x37c
    b0b0:	cmp	r3, #0
    b0b4:	beq	b18c <sf_gen_broadcast+0x250>
    b0b8:	mov	r3, #65280	; 0xff00
    b0bc:	mov	r2, #8
    b0c0:	mov	r1, #4
    b0c4:	mov	r0, #1
    b0c8:	bl	4908 <gen_cmp>
    b0cc:	mov	r5, r0
    b0d0:	ldr	r3, [r0, #44]	; 0x2c
    b0d4:	clz	r3, r3
    b0d8:	lsr	r3, r3, #5
    b0dc:	str	r3, [r0, #44]	; 0x2c
    b0e0:	mov	r1, #2
    b0e4:	ldr	r0, [pc, #196]	; b1b0 <sf_gen_broadcast+0x274>
    b0e8:	add	r0, pc, r0
    b0ec:	add	r0, r0, #8
    b0f0:	bl	4d78 <gen_ehostop>
    b0f4:	mov	r4, r0
    b0f8:	mov	r1, r0
    b0fc:	mov	r0, r5
    b100:	bl	3a30 <sf_gen_and>
    b104:	b	afd8 <sf_gen_broadcast+0x9c>
    b108:	cmp	r3, #163	; 0xa3
    b10c:	beq	b06c <sf_gen_broadcast+0x130>
    b110:	cmp	r3, #192	; 0xc0
    b114:	beq	b06c <sf_gen_broadcast+0x130>
    b118:	cmp	r3, #129	; 0x81
    b11c:	bne	b174 <sf_gen_broadcast+0x238>
    b120:	mov	r1, #2
    b124:	ldr	r0, [pc, #136]	; b1b4 <sf_gen_broadcast+0x278>
    b128:	add	r0, pc, r0
    b12c:	add	r0, r0, #956	; 0x3bc
    b130:	bl	4e68 <gen_ahostop>
    b134:	mov	r4, r0
    b138:	b	afd8 <sf_gen_broadcast+0x9c>
    b13c:	mov	r1, #2
    b140:	ldr	r0, [pc, #112]	; b1b8 <sf_gen_broadcast+0x27c>
    b144:	add	r0, pc, r0
    b148:	add	r0, r0, #8
    b14c:	bl	4d78 <gen_ehostop>
    b150:	mov	r4, r0
    b154:	b	afd8 <sf_gen_broadcast+0x9c>
    b158:	mov	r1, #2
    b15c:	ldr	r0, [pc, #88]	; b1bc <sf_gen_broadcast+0x280>
    b160:	add	r0, pc, r0
    b164:	add	r0, r0, #8
    b168:	bl	4ca4 <gen_ipfchostop>
    b16c:	mov	r4, r0
    b170:	b	afd8 <sf_gen_broadcast+0x9c>
    b174:	ldr	r0, [pc, #68]	; b1c0 <sf_gen_broadcast+0x284>
    b178:	add	r0, pc, r0
    b17c:	bl	229c <sf_bpf_error>
    b180:	ldr	r0, [pc, #60]	; b1c4 <sf_gen_broadcast+0x288>
    b184:	add	r0, pc, r0
    b188:	bl	229c <sf_bpf_error>
    b18c:	ldr	r0, [pc, #52]	; b1c8 <sf_gen_broadcast+0x28c>
    b190:	add	r0, pc, r0
    b194:	bl	229c <sf_bpf_error>
    b198:	.word	0x000263f8
    b19c:	.word	0x0002636c
    b1a0:	.word	0x00026244
    b1a4:	.word	0x00026220
    b1a8:	.word	0x000261fc
    b1ac:	.word	0x000262b8
    b1b0:	.word	0x00026188
    b1b4:	.word	0x00026238
    b1b8:	.word	0x0002612c
    b1bc:	.word	0x00026110
    b1c0:	.word	0x00009a8c
    b1c4:	.word	0x00009a98
    b1c8:	.word	0x00009ac0

0000b1cc <sf_gen_multicast>:
    b1cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    b1d0:	strd	r6, [sp, #8]
    b1d4:	str	r8, [sp, #16]
    b1d8:	str	lr, [sp, #20]
    b1dc:	sub	sp, sp, #16
    b1e0:	cmp	r0, #17
    b1e4:	addls	pc, pc, r0, lsl #2
    b1e8:	b	b590 <sf_gen_multicast+0x3c4>
    b1ec:	b	b234 <sf_gen_multicast+0x68>
    b1f0:	b	b234 <sf_gen_multicast+0x68>
    b1f4:	b	b4f8 <sf_gen_multicast+0x32c>
    b1f8:	b	b590 <sf_gen_multicast+0x3c4>
    b1fc:	b	b590 <sf_gen_multicast+0x3c4>
    b200:	b	b590 <sf_gen_multicast+0x3c4>
    b204:	b	b590 <sf_gen_multicast+0x3c4>
    b208:	b	b590 <sf_gen_multicast+0x3c4>
    b20c:	b	b590 <sf_gen_multicast+0x3c4>
    b210:	b	b590 <sf_gen_multicast+0x3c4>
    b214:	b	b590 <sf_gen_multicast+0x3c4>
    b218:	b	b590 <sf_gen_multicast+0x3c4>
    b21c:	b	b590 <sf_gen_multicast+0x3c4>
    b220:	b	b590 <sf_gen_multicast+0x3c4>
    b224:	b	b590 <sf_gen_multicast+0x3c4>
    b228:	b	b590 <sf_gen_multicast+0x3c4>
    b22c:	b	b590 <sf_gen_multicast+0x3c4>
    b230:	b	b55c <sf_gen_multicast+0x390>
    b234:	ldr	r3, [pc, #864]	; b59c <sf_gen_multicast+0x3d0>
    b238:	add	r3, pc, r3
    b23c:	ldr	r3, [r3, #852]	; 0x354
    b240:	cmp	r3, #119	; 0x77
    b244:	beq	b298 <sf_gen_multicast+0xcc>
    b248:	bgt	b428 <sf_gen_multicast+0x25c>
    b24c:	cmp	r3, #7
    b250:	beq	b4bc <sf_gen_multicast+0x2f0>
    b254:	bgt	b278 <sf_gen_multicast+0xac>
    b258:	cmp	r3, #1
    b25c:	beq	b4d8 <sf_gen_multicast+0x30c>
    b260:	cmp	r3, #6
    b264:	bne	b590 <sf_gen_multicast+0x3c4>
    b268:	mov	r0, #2
    b26c:	bl	4500 <gen_mac_multicast>
    b270:	mov	r4, r0
    b274:	b	b540 <sf_gen_multicast+0x374>
    b278:	cmp	r3, #10
    b27c:	bne	b290 <sf_gen_multicast+0xc4>
    b280:	mov	r0, #1
    b284:	bl	4500 <gen_mac_multicast>
    b288:	mov	r4, r0
    b28c:	b	b540 <sf_gen_multicast+0x374>
    b290:	cmp	r3, #105	; 0x69
    b294:	bne	b590 <sf_gen_multicast+0x3c4>
    b298:	mov	r1, #16
    b29c:	mov	r0, #1
    b2a0:	bl	447c <gen_load_llrel>
    b2a4:	mov	r4, r0
    b2a8:	mov	r0, #208	; 0xd0
    b2ac:	bl	22d8 <newchunk>
    b2b0:	mov	r5, r0
    b2b4:	mov	r6, #69	; 0x45
    b2b8:	str	r6, [r0, #8]
    b2bc:	str	r0, [r5, #96]	; 0x60
    b2c0:	mov	r7, #1
    b2c4:	str	r7, [r0, #20]
    b2c8:	str	r4, [r0, #4]
    b2cc:	mov	r0, #16
    b2d0:	bl	4500 <gen_mac_multicast>
    b2d4:	mov	r4, r0
    b2d8:	mov	r1, r0
    b2dc:	mov	r0, r5
    b2e0:	bl	3a30 <sf_gen_and>
    b2e4:	mov	r1, #16
    b2e8:	mov	r0, r7
    b2ec:	bl	447c <gen_load_llrel>
    b2f0:	mov	r8, r0
    b2f4:	mov	r0, #208	; 0xd0
    b2f8:	bl	22d8 <newchunk>
    b2fc:	mov	r5, r0
    b300:	str	r6, [r0, #8]
    b304:	str	r0, [r5, #96]	; 0x60
    b308:	str	r7, [r0, #20]
    b30c:	str	r8, [r0, #4]
    b310:	ldr	r3, [r0, #44]	; 0x2c
    b314:	clz	r3, r3
    b318:	lsr	r3, r3, #5
    b31c:	str	r3, [r0, #44]	; 0x2c
    b320:	mov	r0, #4
    b324:	bl	4500 <gen_mac_multicast>
    b328:	mov	r7, r0
    b32c:	mov	r1, r0
    b330:	mov	r0, r5
    b334:	bl	3a30 <sf_gen_and>
    b338:	mov	r1, r4
    b33c:	mov	r0, r7
    b340:	bl	3ac0 <sf_gen_or>
    b344:	mov	r1, #16
    b348:	mov	r0, #0
    b34c:	bl	447c <gen_load_llrel>
    b350:	mov	r5, r0
    b354:	mov	r0, #208	; 0xd0
    b358:	bl	22d8 <newchunk>
    b35c:	mov	r3, r0
    b360:	str	r6, [r0, #8]
    b364:	str	r0, [r3, #96]	; 0x60
    b368:	mov	r7, #8
    b36c:	str	r7, [r0, #20]
    b370:	str	r5, [r0, #4]
    b374:	mov	r1, r4
    b378:	bl	3a30 <sf_gen_and>
    b37c:	mov	r1, #16
    b380:	mov	r0, #0
    b384:	bl	447c <gen_load_llrel>
    b388:	mov	r8, r0
    b38c:	mov	r0, #208	; 0xd0
    b390:	bl	22d8 <newchunk>
    b394:	mov	r5, r0
    b398:	str	r6, [r0, #8]
    b39c:	str	r0, [r5, #96]	; 0x60
    b3a0:	str	r7, [r0, #20]
    b3a4:	str	r8, [r0, #4]
    b3a8:	ldr	r3, [r0, #44]	; 0x2c
    b3ac:	clz	r3, r3
    b3b0:	lsr	r3, r3, #5
    b3b4:	str	r3, [r0, #44]	; 0x2c
    b3b8:	mov	r0, #4
    b3bc:	bl	4500 <gen_mac_multicast>
    b3c0:	mov	r7, r0
    b3c4:	mov	r1, r0
    b3c8:	mov	r0, r5
    b3cc:	bl	3a30 <sf_gen_and>
    b3d0:	mov	r1, r4
    b3d4:	mov	r0, r7
    b3d8:	bl	3ac0 <sf_gen_or>
    b3dc:	mov	r1, #16
    b3e0:	mov	r0, #0
    b3e4:	bl	447c <gen_load_llrel>
    b3e8:	mov	r5, r0
    b3ec:	mov	r0, #208	; 0xd0
    b3f0:	bl	22d8 <newchunk>
    b3f4:	mov	r3, r0
    b3f8:	str	r6, [r0, #8]
    b3fc:	str	r0, [r3, #96]	; 0x60
    b400:	mov	r2, #4
    b404:	str	r2, [r0, #20]
    b408:	str	r5, [r0, #4]
    b40c:	ldr	r2, [r0, #44]	; 0x2c
    b410:	clz	r2, r2
    b414:	lsr	r2, r2, #5
    b418:	str	r2, [r0, #44]	; 0x2c
    b41c:	mov	r1, r4
    b420:	bl	3a30 <sf_gen_and>
    b424:	b	b540 <sf_gen_multicast+0x374>
    b428:	cmp	r3, #127	; 0x7f
    b42c:	beq	b298 <sf_gen_multicast+0xcc>
    b430:	bgt	b4a4 <sf_gen_multicast+0x2d8>
    b434:	cmp	r3, #122	; 0x7a
    b438:	beq	b4e8 <sf_gen_multicast+0x31c>
    b43c:	cmp	r3, #123	; 0x7b
    b440:	bne	b590 <sf_gen_multicast+0x3c4>
    b444:	ldr	r3, [pc, #340]	; b5a0 <sf_gen_multicast+0x3d4>
    b448:	add	r3, pc, r3
    b44c:	ldr	r3, [r3, #892]	; 0x37c
    b450:	cmp	r3, #0
    b454:	beq	b590 <sf_gen_multicast+0x3c4>
    b458:	mov	r3, #65280	; 0xff00
    b45c:	mov	r2, #8
    b460:	mov	r1, #4
    b464:	mov	r0, #1
    b468:	bl	4908 <gen_cmp>
    b46c:	mov	r5, r0
    b470:	ldr	r3, [r0, #44]	; 0x2c
    b474:	clz	r3, r3
    b478:	lsr	r3, r3, #5
    b47c:	str	r3, [r0, #44]	; 0x2c
    b480:	ldr	r3, [pc, #284]	; b5a4 <sf_gen_multicast+0x3d8>
    b484:	add	r3, pc, r3
    b488:	ldr	r0, [r3, #884]	; 0x374
    b48c:	bl	4500 <gen_mac_multicast>
    b490:	mov	r4, r0
    b494:	mov	r1, r0
    b498:	mov	r0, r5
    b49c:	bl	3a30 <sf_gen_and>
    b4a0:	b	b540 <sf_gen_multicast+0x374>
    b4a4:	cmp	r3, #163	; 0xa3
    b4a8:	beq	b298 <sf_gen_multicast+0xcc>
    b4ac:	cmp	r3, #192	; 0xc0
    b4b0:	beq	b298 <sf_gen_multicast+0xcc>
    b4b4:	cmp	r3, #129	; 0x81
    b4b8:	bne	b590 <sf_gen_multicast+0x3c4>
    b4bc:	mov	r1, #2
    b4c0:	ldr	r0, [pc, #224]	; b5a8 <sf_gen_multicast+0x3dc>
    b4c4:	add	r0, pc, r0
    b4c8:	add	r0, r0, #956	; 0x3bc
    b4cc:	bl	4e68 <gen_ahostop>
    b4d0:	mov	r4, r0
    b4d4:	b	b540 <sf_gen_multicast+0x374>
    b4d8:	mov	r0, #0
    b4dc:	bl	4500 <gen_mac_multicast>
    b4e0:	mov	r4, r0
    b4e4:	b	b540 <sf_gen_multicast+0x374>
    b4e8:	mov	r0, #2
    b4ec:	bl	4500 <gen_mac_multicast>
    b4f0:	mov	r4, r0
    b4f4:	b	b540 <sf_gen_multicast+0x374>
    b4f8:	mov	r0, #2048	; 0x800
    b4fc:	bl	6abc <gen_linktype>
    b500:	mov	r5, r0
    b504:	mov	r3, #224	; 0xe0
    b508:	str	r3, [sp, #8]
    b50c:	mov	r3, #0
    b510:	str	r3, [sp, #4]
    b514:	mov	r3, #48	; 0x30
    b518:	str	r3, [sp]
    b51c:	mvn	r3, #0
    b520:	mov	r2, #16
    b524:	mov	r1, r2
    b528:	mov	r0, #3
    b52c:	bl	4738 <gen_ncmp>
    b530:	mov	r4, r0
    b534:	mov	r1, r0
    b538:	mov	r0, r5
    b53c:	bl	3a30 <sf_gen_and>
    b540:	mov	r0, r4
    b544:	add	sp, sp, #16
    b548:	ldrd	r4, [sp]
    b54c:	ldrd	r6, [sp, #8]
    b550:	ldr	r8, [sp, #16]
    b554:	add	sp, sp, #20
    b558:	pop	{pc}		; (ldr pc, [sp], #4)
    b55c:	movw	r0, #34525	; 0x86dd
    b560:	bl	6abc <gen_linktype>
    b564:	mov	r5, r0
    b568:	mov	r3, #255	; 0xff
    b56c:	mov	r2, #16
    b570:	mov	r1, #24
    b574:	mov	r0, #3
    b578:	bl	4908 <gen_cmp>
    b57c:	mov	r4, r0
    b580:	mov	r1, r0
    b584:	mov	r0, r5
    b588:	bl	3a30 <sf_gen_and>
    b58c:	b	b540 <sf_gen_multicast+0x374>
    b590:	ldr	r0, [pc, #20]	; b5ac <sf_gen_multicast+0x3e0>
    b594:	add	r0, pc, r0
    b598:	bl	229c <sf_bpf_error>
    b59c:	.word	0x00026128
    b5a0:	.word	0x00025f18
    b5a4:	.word	0x00025edc
    b5a8:	.word	0x00025e9c
    b5ac:	.word	0x000096ec

0000b5b0 <sf_gen_mpls>:
    b5b0:	strd	r4, [sp, #-20]!	; 0xffffffec
    b5b4:	strd	r6, [sp, #8]
    b5b8:	str	lr, [sp, #16]
    b5bc:	sub	sp, sp, #12
    b5c0:	mov	r7, r0
    b5c4:	ldr	r3, [pc, #272]	; b6dc <sf_gen_mpls+0x12c>
    b5c8:	add	r3, pc, r3
    b5cc:	ldr	r4, [r3, #948]	; 0x3b4
    b5d0:	ldr	r3, [pc, #264]	; b6e0 <sf_gen_mpls+0x130>
    b5d4:	add	r3, pc, r3
    b5d8:	str	r4, [r3]
    b5dc:	ldr	r5, [r3, #4]
    b5e0:	cmp	r5, #0
    b5e4:	bne	b618 <sf_gen_mpls+0x68>
    b5e8:	ldr	r3, [pc, #244]	; b6e4 <sf_gen_mpls+0x134>
    b5ec:	add	r3, pc, r3
    b5f0:	ldr	r1, [r3, #852]	; 0x354
    b5f4:	cmp	r1, #9
    b5f8:	beq	b694 <sf_gen_mpls+0xe4>
    b5fc:	cmp	r1, #104	; 0x68
    b600:	beq	b63c <sf_gen_mpls+0x8c>
    b604:	cmp	r1, #1
    b608:	beq	b63c <sf_gen_mpls+0x8c>
    b60c:	ldr	r0, [pc, #212]	; b6e8 <sf_gen_mpls+0x138>
    b610:	add	r0, pc, r0
    b614:	bl	229c <sf_bpf_error>
    b618:	mov	r3, #1
    b61c:	str	r3, [sp]
    b620:	mov	r3, #0
    b624:	mov	r2, #16
    b628:	sub	r1, r4, #2
    b62c:	mov	r0, #2
    b630:	bl	5508 <gen_mcmp>
    b634:	mov	r6, r0
    b638:	b	b648 <sf_gen_mpls+0x98>
    b63c:	movw	r0, #34887	; 0x8847
    b640:	bl	6abc <gen_linktype>
    b644:	mov	r6, r0
    b648:	cmp	r7, #0
    b64c:	bge	b6a4 <sf_gen_mpls+0xf4>
    b650:	ldr	r3, [pc, #148]	; b6ec <sf_gen_mpls+0x13c>
    b654:	add	r3, pc, r3
    b658:	ldr	r2, [r3, #952]	; 0x3b8
    b65c:	add	r2, r2, #4
    b660:	str	r2, [r3, #952]	; 0x3b8
    b664:	add	r4, r4, #4
    b668:	str	r4, [r3, #948]	; 0x3b4
    b66c:	add	r5, r5, #1
    b670:	ldr	r3, [pc, #120]	; b6f0 <sf_gen_mpls+0x140>
    b674:	add	r3, pc, r3
    b678:	str	r5, [r3, #4]
    b67c:	mov	r0, r6
    b680:	add	sp, sp, #12
    b684:	ldrd	r4, [sp]
    b688:	ldrd	r6, [sp, #8]
    b68c:	add	sp, sp, #16
    b690:	pop	{pc}		; (ldr pc, [sp], #4)
    b694:	movw	r0, #641	; 0x281
    b698:	bl	6abc <gen_linktype>
    b69c:	mov	r6, r0
    b6a0:	b	b648 <sf_gen_mpls+0x98>
    b6a4:	mov	r3, #61440	; 0xf000
    b6a8:	movt	r3, #65535	; 0xffff
    b6ac:	str	r3, [sp]
    b6b0:	lsl	r3, r7, #12
    b6b4:	mov	r2, #0
    b6b8:	mov	r1, r4
    b6bc:	mov	r0, #2
    b6c0:	bl	5508 <gen_mcmp>
    b6c4:	mov	r7, r0
    b6c8:	mov	r1, r0
    b6cc:	mov	r0, r6
    b6d0:	bl	3a30 <sf_gen_and>
    b6d4:	mov	r6, r7
    b6d8:	b	b650 <sf_gen_mpls+0xa0>
    b6dc:	.word	0x00025d98
    b6e0:	.word	0x00025c9c
    b6e4:	.word	0x00025d74
    b6e8:	.word	0x000096e0
    b6ec:	.word	0x00025d0c
    b6f0:	.word	0x00025bfc

0000b6f4 <sf_gen_pppoed>:
    b6f4:	str	r4, [sp, #-8]!
    b6f8:	str	lr, [sp, #4]
    b6fc:	movw	r0, #34915	; 0x8863
    b700:	bl	6abc <gen_linktype>
    b704:	ldr	r4, [sp]
    b708:	add	sp, sp, #4
    b70c:	pop	{pc}		; (ldr pc, [sp], #4)

0000b710 <sf_gen_pppoes>:
    b710:	str	r4, [sp, #-8]!
    b714:	str	lr, [sp, #4]
    b718:	movw	r0, #34916	; 0x8864
    b71c:	bl	6abc <gen_linktype>
    b720:	ldr	r3, [pc, #56]	; b760 <sf_gen_pppoes+0x50>
    b724:	add	r3, pc, r3
    b728:	ldr	r2, [r3, #948]	; 0x3b4
    b72c:	ldr	r1, [pc, #48]	; b764 <sf_gen_pppoes+0x54>
    b730:	add	r1, pc, r1
    b734:	str	r2, [r1]
    b738:	mov	r1, #1
    b73c:	str	r1, [r3, #912]	; 0x390
    b740:	add	r2, r2, #6
    b744:	str	r2, [r3, #944]	; 0x3b0
    b748:	mov	r2, #8
    b74c:	str	r2, [r3, #948]	; 0x3b4
    b750:	str	r2, [r3, #952]	; 0x3b8
    b754:	ldr	r4, [sp]
    b758:	add	sp, sp, #4
    b75c:	pop	{pc}		; (ldr pc, [sp], #4)
    b760:	.word	0x00025c3c
    b764:	.word	0x00025b40

0000b768 <sf_gen_atmtype_abbrev>:
    b768:	strd	r4, [sp, #-16]!
    b76c:	str	r6, [sp, #8]
    b770:	str	lr, [sp, #12]
    b774:	sub	r0, r0, #22
    b778:	cmp	r0, #9
    b77c:	addls	pc, pc, r0, lsl #2
    b780:	b	bac0 <sf_gen_atmtype_abbrev+0x358>
    b784:	b	b7ac <sf_gen_atmtype_abbrev+0x44>
    b788:	b	b81c <sf_gen_atmtype_abbrev+0xb4>
    b78c:	b	b87c <sf_gen_atmtype_abbrev+0x114>
    b790:	b	b8dc <sf_gen_atmtype_abbrev+0x174>
    b794:	b	b93c <sf_gen_atmtype_abbrev+0x1d4>
    b798:	b	b99c <sf_gen_atmtype_abbrev+0x234>
    b79c:	b	bac0 <sf_gen_atmtype_abbrev+0x358>
    b7a0:	b	bac0 <sf_gen_atmtype_abbrev+0x358>
    b7a4:	b	b9fc <sf_gen_atmtype_abbrev+0x294>
    b7a8:	b	ba74 <sf_gen_atmtype_abbrev+0x30c>
    b7ac:	ldr	r3, [pc, #784]	; bac4 <sf_gen_atmtype_abbrev+0x35c>
    b7b0:	add	r3, pc, r3
    b7b4:	ldr	r3, [r3, #888]	; 0x378
    b7b8:	cmp	r3, #0
    b7bc:	beq	b810 <sf_gen_atmtype_abbrev+0xa8>
    b7c0:	mov	r3, #0
    b7c4:	mov	r2, #16
    b7c8:	mov	r1, r3
    b7cc:	mov	r0, #51	; 0x33
    b7d0:	bl	68d0 <sf_gen_atmfield_code>
    b7d4:	mov	r5, r0
    b7d8:	mov	r3, #0
    b7dc:	mov	r2, #16
    b7e0:	mov	r1, #1
    b7e4:	mov	r0, #52	; 0x34
    b7e8:	bl	68d0 <sf_gen_atmfield_code>
    b7ec:	mov	r4, r0
    b7f0:	mov	r1, r0
    b7f4:	mov	r0, r5
    b7f8:	bl	3a30 <sf_gen_and>
    b7fc:	mov	r0, r4
    b800:	ldrd	r4, [sp]
    b804:	ldr	r6, [sp, #8]
    b808:	add	sp, sp, #12
    b80c:	pop	{pc}		; (ldr pc, [sp], #4)
    b810:	ldr	r0, [pc, #688]	; bac8 <sf_gen_atmtype_abbrev+0x360>
    b814:	add	r0, pc, r0
    b818:	bl	229c <sf_bpf_error>
    b81c:	ldr	r3, [pc, #680]	; bacc <sf_gen_atmtype_abbrev+0x364>
    b820:	add	r3, pc, r3
    b824:	ldr	r3, [r3, #888]	; 0x378
    b828:	cmp	r3, #0
    b82c:	beq	b870 <sf_gen_atmtype_abbrev+0x108>
    b830:	mov	r3, #0
    b834:	mov	r2, #16
    b838:	mov	r1, r3
    b83c:	mov	r0, #51	; 0x33
    b840:	bl	68d0 <sf_gen_atmfield_code>
    b844:	mov	r5, r0
    b848:	mov	r3, #0
    b84c:	mov	r2, #16
    b850:	mov	r1, #2
    b854:	mov	r0, #52	; 0x34
    b858:	bl	68d0 <sf_gen_atmfield_code>
    b85c:	mov	r4, r0
    b860:	mov	r1, r0
    b864:	mov	r0, r5
    b868:	bl	3a30 <sf_gen_and>
    b86c:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    b870:	ldr	r0, [pc, #600]	; bad0 <sf_gen_atmtype_abbrev+0x368>
    b874:	add	r0, pc, r0
    b878:	bl	229c <sf_bpf_error>
    b87c:	ldr	r3, [pc, #592]	; bad4 <sf_gen_atmtype_abbrev+0x36c>
    b880:	add	r3, pc, r3
    b884:	ldr	r3, [r3, #888]	; 0x378
    b888:	cmp	r3, #0
    b88c:	beq	b8d0 <sf_gen_atmtype_abbrev+0x168>
    b890:	mov	r3, #0
    b894:	mov	r2, #16
    b898:	mov	r1, r3
    b89c:	mov	r0, #51	; 0x33
    b8a0:	bl	68d0 <sf_gen_atmfield_code>
    b8a4:	mov	r5, r0
    b8a8:	mov	r3, #0
    b8ac:	mov	r2, #16
    b8b0:	mov	r1, #3
    b8b4:	mov	r0, #52	; 0x34
    b8b8:	bl	68d0 <sf_gen_atmfield_code>
    b8bc:	mov	r4, r0
    b8c0:	mov	r1, r0
    b8c4:	mov	r0, r5
    b8c8:	bl	3a30 <sf_gen_and>
    b8cc:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    b8d0:	ldr	r0, [pc, #512]	; bad8 <sf_gen_atmtype_abbrev+0x370>
    b8d4:	add	r0, pc, r0
    b8d8:	bl	229c <sf_bpf_error>
    b8dc:	ldr	r3, [pc, #504]	; badc <sf_gen_atmtype_abbrev+0x374>
    b8e0:	add	r3, pc, r3
    b8e4:	ldr	r3, [r3, #888]	; 0x378
    b8e8:	cmp	r3, #0
    b8ec:	beq	b930 <sf_gen_atmtype_abbrev+0x1c8>
    b8f0:	mov	r3, #0
    b8f4:	mov	r2, #16
    b8f8:	mov	r1, r3
    b8fc:	mov	r0, #51	; 0x33
    b900:	bl	68d0 <sf_gen_atmfield_code>
    b904:	mov	r5, r0
    b908:	mov	r3, #0
    b90c:	mov	r2, #16
    b910:	mov	r1, #4
    b914:	mov	r0, #52	; 0x34
    b918:	bl	68d0 <sf_gen_atmfield_code>
    b91c:	mov	r4, r0
    b920:	mov	r1, r0
    b924:	mov	r0, r5
    b928:	bl	3a30 <sf_gen_and>
    b92c:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    b930:	ldr	r0, [pc, #424]	; bae0 <sf_gen_atmtype_abbrev+0x378>
    b934:	add	r0, pc, r0
    b938:	bl	229c <sf_bpf_error>
    b93c:	ldr	r3, [pc, #416]	; bae4 <sf_gen_atmtype_abbrev+0x37c>
    b940:	add	r3, pc, r3
    b944:	ldr	r3, [r3, #888]	; 0x378
    b948:	cmp	r3, #0
    b94c:	beq	b990 <sf_gen_atmtype_abbrev+0x228>
    b950:	mov	r3, #0
    b954:	mov	r2, #16
    b958:	mov	r1, r3
    b95c:	mov	r0, #51	; 0x33
    b960:	bl	68d0 <sf_gen_atmfield_code>
    b964:	mov	r5, r0
    b968:	mov	r3, #0
    b96c:	mov	r2, #16
    b970:	mov	r1, #5
    b974:	mov	r0, #52	; 0x34
    b978:	bl	68d0 <sf_gen_atmfield_code>
    b97c:	mov	r4, r0
    b980:	mov	r1, r0
    b984:	mov	r0, r5
    b988:	bl	3a30 <sf_gen_and>
    b98c:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    b990:	ldr	r0, [pc, #336]	; bae8 <sf_gen_atmtype_abbrev+0x380>
    b994:	add	r0, pc, r0
    b998:	bl	229c <sf_bpf_error>
    b99c:	ldr	r3, [pc, #328]	; baec <sf_gen_atmtype_abbrev+0x384>
    b9a0:	add	r3, pc, r3
    b9a4:	ldr	r3, [r3, #888]	; 0x378
    b9a8:	cmp	r3, #0
    b9ac:	beq	b9f0 <sf_gen_atmtype_abbrev+0x288>
    b9b0:	mov	r3, #0
    b9b4:	mov	r2, #16
    b9b8:	mov	r1, r3
    b9bc:	mov	r0, #51	; 0x33
    b9c0:	bl	68d0 <sf_gen_atmfield_code>
    b9c4:	mov	r5, r0
    b9c8:	mov	r3, #0
    b9cc:	mov	r2, #16
    b9d0:	mov	r1, r2
    b9d4:	mov	r0, #52	; 0x34
    b9d8:	bl	68d0 <sf_gen_atmfield_code>
    b9dc:	mov	r4, r0
    b9e0:	mov	r1, r0
    b9e4:	mov	r0, r5
    b9e8:	bl	3a30 <sf_gen_and>
    b9ec:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    b9f0:	ldr	r0, [pc, #248]	; baf0 <sf_gen_atmtype_abbrev+0x388>
    b9f4:	add	r0, pc, r0
    b9f8:	bl	229c <sf_bpf_error>
    b9fc:	ldr	r3, [pc, #240]	; baf4 <sf_gen_atmtype_abbrev+0x38c>
    ba00:	add	r3, pc, r3
    ba04:	ldr	r3, [r3, #888]	; 0x378
    ba08:	cmp	r3, #0
    ba0c:	beq	ba68 <sf_gen_atmtype_abbrev+0x300>
    ba10:	mov	r3, #0
    ba14:	mov	r2, #16
    ba18:	mov	r1, #1
    ba1c:	mov	r0, #53	; 0x35
    ba20:	bl	68d0 <sf_gen_atmfield_code>
    ba24:	mov	r4, r0
    ba28:	ldr	r3, [pc, #200]	; baf8 <sf_gen_atmtype_abbrev+0x390>
    ba2c:	add	r3, pc, r3
    ba30:	mov	r2, #1
    ba34:	str	r2, [r3, #892]	; 0x37c
    ba38:	ldr	r2, [r3, #908]	; 0x38c
    ba3c:	add	r1, r2, #2
    ba40:	str	r1, [r3, #884]	; 0x374
    ba44:	add	r1, r2, #14
    ba48:	str	r1, [r3, #944]	; 0x3b0
    ba4c:	add	r2, r2, #16
    ba50:	str	r2, [r3, #940]	; 0x3ac
    ba54:	mov	r2, #0
    ba58:	str	r2, [r3, #948]	; 0x3b4
    ba5c:	mov	r2, #3
    ba60:	str	r2, [r3, #952]	; 0x3b8
    ba64:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    ba68:	ldr	r0, [pc, #140]	; bafc <sf_gen_atmtype_abbrev+0x394>
    ba6c:	add	r0, pc, r0
    ba70:	bl	229c <sf_bpf_error>
    ba74:	ldr	r3, [pc, #132]	; bb00 <sf_gen_atmtype_abbrev+0x398>
    ba78:	add	r3, pc, r3
    ba7c:	ldr	r3, [r3, #888]	; 0x378
    ba80:	cmp	r3, #0
    ba84:	beq	bab4 <sf_gen_atmtype_abbrev+0x34c>
    ba88:	mov	r3, #0
    ba8c:	mov	r2, #16
    ba90:	mov	r1, #2
    ba94:	mov	r0, #53	; 0x35
    ba98:	bl	68d0 <sf_gen_atmfield_code>
    ba9c:	mov	r4, r0
    baa0:	ldr	r3, [pc, #92]	; bb04 <sf_gen_atmtype_abbrev+0x39c>
    baa4:	add	r3, pc, r3
    baa8:	mov	r2, #0
    baac:	str	r2, [r3, #892]	; 0x37c
    bab0:	b	b7fc <sf_gen_atmtype_abbrev+0x94>
    bab4:	ldr	r0, [pc, #76]	; bb08 <sf_gen_atmtype_abbrev+0x3a0>
    bab8:	add	r0, pc, r0
    babc:	bl	229c <sf_bpf_error>
    bac0:	bl	ebc <abort@plt>
    bac4:	.word	0x00025bb0
    bac8:	.word	0x00009504
    bacc:	.word	0x00025b40
    bad0:	.word	0x000094c8
    bad4:	.word	0x00025ae0
    bad8:	.word	0x00009488
    badc:	.word	0x00025a80
    bae0:	.word	0x0000944c
    bae4:	.word	0x00025a20
    bae8:	.word	0x00009410
    baec:	.word	0x000259c0
    baf0:	.word	0x000093d0
    baf4:	.word	0x00025960
    baf8:	.word	0x00025934
    bafc:	.word	0x0000937c
    bb00:	.word	0x000258e8
    bb04:	.word	0x000258bc
    bb08:	.word	0x00009354

0000bb0c <sf_gen_mtp2type_abbrev>:
    bb0c:	strd	r4, [sp, #-16]!
    bb10:	str	r6, [sp, #8]
    bb14:	str	lr, [sp, #12]
    bb18:	sub	sp, sp, #16
    bb1c:	cmp	r0, #23
    bb20:	beq	bba0 <sf_gen_mtp2type_abbrev+0x94>
    bb24:	cmp	r0, #24
    bb28:	beq	bc30 <sf_gen_mtp2type_abbrev+0x124>
    bb2c:	cmp	r0, #22
    bb30:	bne	bc90 <sf_gen_mtp2type_abbrev+0x184>
    bb34:	ldr	r3, [pc, #344]	; bc94 <sf_gen_mtp2type_abbrev+0x188>
    bb38:	add	r3, pc, r3
    bb3c:	ldr	r3, [r3, #852]	; 0x354
    bb40:	sub	r2, r3, #139	; 0x8b
    bb44:	cmp	r3, #197	; 0xc5
    bb48:	cmpne	r2, #1
    bb4c:	bhi	bb94 <sf_gen_mtp2type_abbrev+0x88>
    bb50:	ldr	r3, [pc, #320]	; bc98 <sf_gen_mtp2type_abbrev+0x18c>
    bb54:	add	r3, pc, r3
    bb58:	ldr	r1, [r3, #916]	; 0x394
    bb5c:	mov	r0, #0
    bb60:	str	r0, [sp, #8]
    bb64:	str	r0, [sp, #4]
    bb68:	mov	r2, #16
    bb6c:	str	r2, [sp]
    bb70:	mov	r3, #63	; 0x3f
    bb74:	bl	4738 <gen_ncmp>
    bb78:	mov	r4, r0
    bb7c:	mov	r0, r4
    bb80:	add	sp, sp, #16
    bb84:	ldrd	r4, [sp]
    bb88:	ldr	r6, [sp, #8]
    bb8c:	add	sp, sp, #12
    bb90:	pop	{pc}		; (ldr pc, [sp], #4)
    bb94:	ldr	r0, [pc, #256]	; bc9c <sf_gen_mtp2type_abbrev+0x190>
    bb98:	add	r0, pc, r0
    bb9c:	bl	229c <sf_bpf_error>
    bba0:	ldr	r3, [pc, #248]	; bca0 <sf_gen_mtp2type_abbrev+0x194>
    bba4:	add	r3, pc, r3
    bba8:	ldr	r3, [r3, #852]	; 0x354
    bbac:	sub	r2, r3, #139	; 0x8b
    bbb0:	cmp	r3, #197	; 0xc5
    bbb4:	cmpne	r2, #1
    bbb8:	bhi	bc24 <sf_gen_mtp2type_abbrev+0x118>
    bbbc:	ldr	r3, [pc, #224]	; bca4 <sf_gen_mtp2type_abbrev+0x198>
    bbc0:	add	r3, pc, r3
    bbc4:	ldr	r5, [r3, #916]	; 0x394
    bbc8:	mov	r3, #2
    bbcc:	str	r3, [sp, #8]
    bbd0:	mov	r3, #1
    bbd4:	str	r3, [sp, #4]
    bbd8:	mov	r6, #32
    bbdc:	str	r6, [sp]
    bbe0:	mov	r3, #63	; 0x3f
    bbe4:	mov	r2, #16
    bbe8:	mov	r1, r5
    bbec:	mov	r0, #0
    bbf0:	bl	4738 <gen_ncmp>
    bbf4:	mov	r4, r0
    bbf8:	mov	r0, #0
    bbfc:	str	r0, [sp, #8]
    bc00:	str	r0, [sp, #4]
    bc04:	str	r6, [sp]
    bc08:	mov	r3, #63	; 0x3f
    bc0c:	mov	r2, #16
    bc10:	mov	r1, r5
    bc14:	bl	4738 <gen_ncmp>
    bc18:	mov	r1, r4
    bc1c:	bl	3a30 <sf_gen_and>
    bc20:	b	bb7c <sf_gen_mtp2type_abbrev+0x70>
    bc24:	ldr	r0, [pc, #124]	; bca8 <sf_gen_mtp2type_abbrev+0x19c>
    bc28:	add	r0, pc, r0
    bc2c:	bl	229c <sf_bpf_error>
    bc30:	ldr	r3, [pc, #116]	; bcac <sf_gen_mtp2type_abbrev+0x1a0>
    bc34:	add	r3, pc, r3
    bc38:	ldr	r3, [r3, #852]	; 0x354
    bc3c:	sub	r2, r3, #139	; 0x8b
    bc40:	cmp	r3, #197	; 0xc5
    bc44:	cmpne	r2, #1
    bc48:	bhi	bc84 <sf_gen_mtp2type_abbrev+0x178>
    bc4c:	ldr	r3, [pc, #92]	; bcb0 <sf_gen_mtp2type_abbrev+0x1a4>
    bc50:	add	r3, pc, r3
    bc54:	ldr	r1, [r3, #916]	; 0x394
    bc58:	mov	r3, #2
    bc5c:	str	r3, [sp, #8]
    bc60:	mov	r0, #0
    bc64:	str	r0, [sp, #4]
    bc68:	mov	r3, #32
    bc6c:	str	r3, [sp]
    bc70:	mov	r3, #63	; 0x3f
    bc74:	mov	r2, #16
    bc78:	bl	4738 <gen_ncmp>
    bc7c:	mov	r4, r0
    bc80:	b	bb7c <sf_gen_mtp2type_abbrev+0x70>
    bc84:	ldr	r0, [pc, #40]	; bcb4 <sf_gen_mtp2type_abbrev+0x1a8>
    bc88:	add	r0, pc, r0
    bc8c:	bl	229c <sf_bpf_error>
    bc90:	bl	ebc <abort@plt>
    bc94:	.word	0x00025828
    bc98:	.word	0x0002580c
    bc9c:	.word	0x00009294
    bca0:	.word	0x000257bc
    bca4:	.word	0x000257a0
    bca8:	.word	0x00009224
    bcac:	.word	0x0002572c
    bcb0:	.word	0x00025710
    bcb4:	.word	0x000091e4

0000bcb8 <sf_gen_mtp3field_code>:
    bcb8:	push	{lr}		; (str lr, [sp, #-4]!)
    bcbc:	sub	sp, sp, #20
    bcc0:	sub	r0, r0, #1
    bcc4:	cmp	r0, #3
    bcc8:	addls	pc, pc, r0, lsl #2
    bccc:	b	be74 <sf_gen_mtp3field_code+0x1bc>
    bcd0:	b	bce0 <sf_gen_mtp3field_code+0x28>
    bcd4:	b	bd3c <sf_gen_mtp3field_code+0x84>
    bcd8:	b	bdb0 <sf_gen_mtp3field_code+0xf8>
    bcdc:	b	be18 <sf_gen_mtp3field_code+0x160>
    bce0:	ldr	r0, [pc, #400]	; be78 <sf_gen_mtp3field_code+0x1c0>
    bce4:	add	r0, pc, r0
    bce8:	ldr	r0, [r0, #920]	; 0x398
    bcec:	cmn	r0, #1
    bcf0:	beq	bd24 <sf_gen_mtp3field_code+0x6c>
    bcf4:	cmp	r1, #255	; 0xff
    bcf8:	bhi	bd30 <sf_gen_mtp3field_code+0x78>
    bcfc:	str	r1, [sp, #8]
    bd00:	str	r3, [sp, #4]
    bd04:	str	r2, [sp]
    bd08:	mvn	r3, #0
    bd0c:	mov	r2, #16
    bd10:	mov	r1, r0
    bd14:	mov	r0, #0
    bd18:	bl	4738 <gen_ncmp>
    bd1c:	add	sp, sp, #20
    bd20:	pop	{pc}		; (ldr pc, [sp], #4)
    bd24:	ldr	r0, [pc, #336]	; be7c <sf_gen_mtp3field_code+0x1c4>
    bd28:	add	r0, pc, r0
    bd2c:	bl	229c <sf_bpf_error>
    bd30:	ldr	r0, [pc, #328]	; be80 <sf_gen_mtp3field_code+0x1c8>
    bd34:	add	r0, pc, r0
    bd38:	bl	229c <sf_bpf_error>
    bd3c:	ldr	r0, [pc, #320]	; be84 <sf_gen_mtp3field_code+0x1cc>
    bd40:	add	r0, pc, r0
    bd44:	ldr	lr, [r0, #924]	; 0x39c
    bd48:	cmn	lr, #1
    bd4c:	beq	bd98 <sf_gen_mtp3field_code+0xe0>
    bd50:	cmp	r1, #16384	; 0x4000
    bd54:	bcs	bda4 <sf_gen_mtp3field_code+0xec>
    bd58:	lsl	r0, r1, #22
    bd5c:	and	ip, r0, #12582912	; 0xc00000
    bd60:	lsl	r0, r1, #6
    bd64:	and	r0, r0, #65280	; 0xff00
    bd68:	orr	r0, r0, r1, lsr #10
    bd6c:	add	r0, r0, ip
    bd70:	str	r0, [sp, #8]
    bd74:	str	r3, [sp, #4]
    bd78:	str	r2, [sp]
    bd7c:	movw	r3, #65295	; 0xff0f
    bd80:	movt	r3, #192	; 0xc0
    bd84:	mov	r2, #0
    bd88:	mov	r1, lr
    bd8c:	mov	r0, r2
    bd90:	bl	4738 <gen_ncmp>
    bd94:	b	bd1c <sf_gen_mtp3field_code+0x64>
    bd98:	ldr	r0, [pc, #232]	; be88 <sf_gen_mtp3field_code+0x1d0>
    bd9c:	add	r0, pc, r0
    bda0:	bl	229c <sf_bpf_error>
    bda4:	ldr	r0, [pc, #224]	; be8c <sf_gen_mtp3field_code+0x1d4>
    bda8:	add	r0, pc, r0
    bdac:	bl	229c <sf_bpf_error>
    bdb0:	ldr	r0, [pc, #216]	; be90 <sf_gen_mtp3field_code+0x1d8>
    bdb4:	add	r0, pc, r0
    bdb8:	ldr	ip, [r0, #928]	; 0x3a0
    bdbc:	cmn	ip, #1
    bdc0:	beq	be00 <sf_gen_mtp3field_code+0x148>
    bdc4:	cmp	r1, #16384	; 0x4000
    bdc8:	bcs	be0c <sf_gen_mtp3field_code+0x154>
    bdcc:	lsl	r0, r1, #8
    bdd0:	and	r0, r0, #4128768	; 0x3f0000
    bdd4:	add	r0, r0, r1, lsl #24
    bdd8:	str	r0, [sp, #8]
    bddc:	str	r3, [sp, #4]
    bde0:	str	r2, [sp]
    bde4:	mov	r3, #0
    bde8:	movt	r3, #65343	; 0xff3f
    bdec:	mov	r2, #0
    bdf0:	mov	r1, ip
    bdf4:	mov	r0, r2
    bdf8:	bl	4738 <gen_ncmp>
    bdfc:	b	bd1c <sf_gen_mtp3field_code+0x64>
    be00:	ldr	r0, [pc, #140]	; be94 <sf_gen_mtp3field_code+0x1dc>
    be04:	add	r0, pc, r0
    be08:	bl	229c <sf_bpf_error>
    be0c:	ldr	r0, [pc, #132]	; be98 <sf_gen_mtp3field_code+0x1e0>
    be10:	add	r0, pc, r0
    be14:	bl	229c <sf_bpf_error>
    be18:	ldr	r0, [pc, #124]	; be9c <sf_gen_mtp3field_code+0x1e4>
    be1c:	add	r0, pc, r0
    be20:	ldr	ip, [r0, #932]	; 0x3a4
    be24:	cmn	ip, #1
    be28:	beq	be5c <sf_gen_mtp3field_code+0x1a4>
    be2c:	cmp	r1, #15
    be30:	bhi	be68 <sf_gen_mtp3field_code+0x1b0>
    be34:	lsl	r0, r1, #4
    be38:	str	r0, [sp, #8]
    be3c:	str	r3, [sp, #4]
    be40:	str	r2, [sp]
    be44:	mov	r3, #240	; 0xf0
    be48:	mov	r2, #16
    be4c:	mov	r1, ip
    be50:	mov	r0, #0
    be54:	bl	4738 <gen_ncmp>
    be58:	b	bd1c <sf_gen_mtp3field_code+0x64>
    be5c:	ldr	r0, [pc, #60]	; bea0 <sf_gen_mtp3field_code+0x1e8>
    be60:	add	r0, pc, r0
    be64:	bl	229c <sf_bpf_error>
    be68:	ldr	r0, [pc, #52]	; bea4 <sf_gen_mtp3field_code+0x1ec>
    be6c:	add	r0, pc, r0
    be70:	bl	229c <sf_bpf_error>
    be74:	bl	ebc <abort@plt>
    be78:	.word	0x0002567c
    be7c:	.word	0x00009164
    be80:	.word	0x00009174
    be84:	.word	0x00025620
    be88:	.word	0x00009134
    be8c:	.word	0x00009144
    be90:	.word	0x000255ac
    be94:	.word	0x00009110
    be98:	.word	0x00009120
    be9c:	.word	0x00025544
    bea0:	.word	0x000090f8
    bea4:	.word	0x00009108

0000bea8 <sf_gen_atmmulti_abbrev>:
    bea8:	strd	r4, [sp, #-16]!
    beac:	str	r6, [sp, #8]
    beb0:	str	lr, [sp, #12]
    beb4:	cmp	r0, #29
    beb8:	beq	bfd0 <sf_gen_atmmulti_abbrev+0x128>
    bebc:	ble	bf88 <sf_gen_atmmulti_abbrev+0xe0>
    bec0:	cmp	r0, #70	; 0x46
    bec4:	beq	c04c <sf_gen_atmmulti_abbrev+0x1a4>
    bec8:	cmp	r0, #71	; 0x47
    becc:	bne	c138 <sf_gen_atmmulti_abbrev+0x290>
    bed0:	ldr	r3, [pc, #612]	; c13c <sf_gen_atmmulti_abbrev+0x294>
    bed4:	add	r3, pc, r3
    bed8:	ldr	r3, [r3, #888]	; 0x378
    bedc:	cmp	r3, #0
    bee0:	beq	c12c <sf_gen_atmmulti_abbrev+0x284>
    bee4:	mov	r3, #0
    bee8:	mov	r2, #16
    beec:	mov	r1, #5
    bef0:	mov	r0, #54	; 0x36
    bef4:	bl	68d0 <sf_gen_atmfield_code>
    bef8:	mov	r5, r0
    befc:	mov	r3, #0
    bf00:	mov	r2, #16
    bf04:	mov	r1, #2
    bf08:	mov	r0, #54	; 0x36
    bf0c:	bl	68d0 <sf_gen_atmfield_code>
    bf10:	mov	r4, r0
    bf14:	mov	r1, r0
    bf18:	mov	r0, r5
    bf1c:	bl	3ac0 <sf_gen_or>
    bf20:	mov	r3, #0
    bf24:	mov	r2, #16
    bf28:	mov	r1, #7
    bf2c:	mov	r0, #54	; 0x36
    bf30:	bl	68d0 <sf_gen_atmfield_code>
    bf34:	mov	r1, r4
    bf38:	bl	3ac0 <sf_gen_or>
    bf3c:	mov	r3, #0
    bf40:	mov	r2, #16
    bf44:	mov	r1, #77	; 0x4d
    bf48:	mov	r0, #54	; 0x36
    bf4c:	bl	68d0 <sf_gen_atmfield_code>
    bf50:	mov	r1, r4
    bf54:	bl	3ac0 <sf_gen_or>
    bf58:	mov	r3, #0
    bf5c:	mov	r2, #16
    bf60:	mov	r1, #90	; 0x5a
    bf64:	mov	r0, #54	; 0x36
    bf68:	bl	68d0 <sf_gen_atmfield_code>
    bf6c:	mov	r1, r4
    bf70:	bl	3ac0 <sf_gen_or>
    bf74:	mov	r0, #22
    bf78:	bl	b768 <sf_gen_atmtype_abbrev>
    bf7c:	mov	r1, r4
    bf80:	bl	3a30 <sf_gen_and>
    bf84:	b	bfb0 <sf_gen_atmmulti_abbrev+0x108>
    bf88:	cmp	r0, #28
    bf8c:	bne	c138 <sf_gen_atmmulti_abbrev+0x290>
    bf90:	ldr	r3, [pc, #424]	; c140 <sf_gen_atmmulti_abbrev+0x298>
    bf94:	add	r3, pc, r3
    bf98:	ldr	r3, [r3, #888]	; 0x378
    bf9c:	cmp	r3, #0
    bfa0:	beq	bfc4 <sf_gen_atmmulti_abbrev+0x11c>
    bfa4:	mov	r0, #29
    bfa8:	bl	bea8 <sf_gen_atmmulti_abbrev>
    bfac:	mov	r4, r0
    bfb0:	mov	r0, r4
    bfb4:	ldrd	r4, [sp]
    bfb8:	ldr	r6, [sp, #8]
    bfbc:	add	sp, sp, #12
    bfc0:	pop	{pc}		; (ldr pc, [sp], #4)
    bfc4:	ldr	r0, [pc, #376]	; c144 <sf_gen_atmmulti_abbrev+0x29c>
    bfc8:	add	r0, pc, r0
    bfcc:	bl	229c <sf_bpf_error>
    bfd0:	ldr	r3, [pc, #368]	; c148 <sf_gen_atmmulti_abbrev+0x2a0>
    bfd4:	add	r3, pc, r3
    bfd8:	ldr	r3, [r3, #888]	; 0x378
    bfdc:	cmp	r3, #0
    bfe0:	beq	c040 <sf_gen_atmmulti_abbrev+0x198>
    bfe4:	mov	r3, #0
    bfe8:	mov	r2, #16
    bfec:	mov	r1, #3
    bff0:	mov	r0, #52	; 0x34
    bff4:	bl	68d0 <sf_gen_atmfield_code>
    bff8:	mov	r5, r0
    bffc:	mov	r3, #0
    c000:	mov	r2, #16
    c004:	mov	r1, #4
    c008:	mov	r0, #52	; 0x34
    c00c:	bl	68d0 <sf_gen_atmfield_code>
    c010:	mov	r4, r0
    c014:	mov	r1, r0
    c018:	mov	r0, r5
    c01c:	bl	3ac0 <sf_gen_or>
    c020:	mov	r3, #0
    c024:	mov	r2, #16
    c028:	mov	r1, r3
    c02c:	mov	r0, #51	; 0x33
    c030:	bl	68d0 <sf_gen_atmfield_code>
    c034:	mov	r1, r4
    c038:	bl	3a30 <sf_gen_and>
    c03c:	b	bfb0 <sf_gen_atmmulti_abbrev+0x108>
    c040:	ldr	r0, [pc, #260]	; c14c <sf_gen_atmmulti_abbrev+0x2a4>
    c044:	add	r0, pc, r0
    c048:	bl	229c <sf_bpf_error>
    c04c:	ldr	r3, [pc, #252]	; c150 <sf_gen_atmmulti_abbrev+0x2a8>
    c050:	add	r3, pc, r3
    c054:	ldr	r3, [r3, #888]	; 0x378
    c058:	cmp	r3, #0
    c05c:	beq	c120 <sf_gen_atmmulti_abbrev+0x278>
    c060:	mov	r3, #0
    c064:	mov	r2, #16
    c068:	mov	r1, #5
    c06c:	mov	r0, #54	; 0x36
    c070:	bl	68d0 <sf_gen_atmfield_code>
    c074:	mov	r5, r0
    c078:	mov	r3, #0
    c07c:	mov	r2, #16
    c080:	mov	r1, #2
    c084:	mov	r0, #54	; 0x36
    c088:	bl	68d0 <sf_gen_atmfield_code>
    c08c:	mov	r4, r0
    c090:	mov	r1, r0
    c094:	mov	r0, r5
    c098:	bl	3ac0 <sf_gen_or>
    c09c:	mov	r3, #0
    c0a0:	mov	r2, #16
    c0a4:	mov	r1, #7
    c0a8:	mov	r0, #54	; 0x36
    c0ac:	bl	68d0 <sf_gen_atmfield_code>
    c0b0:	mov	r1, r4
    c0b4:	bl	3ac0 <sf_gen_or>
    c0b8:	mov	r3, #0
    c0bc:	mov	r2, #16
    c0c0:	mov	r1, #15
    c0c4:	mov	r0, #54	; 0x36
    c0c8:	bl	68d0 <sf_gen_atmfield_code>
    c0cc:	mov	r1, r4
    c0d0:	bl	3ac0 <sf_gen_or>
    c0d4:	mov	r3, #0
    c0d8:	mov	r2, #16
    c0dc:	mov	r1, #77	; 0x4d
    c0e0:	mov	r0, #54	; 0x36
    c0e4:	bl	68d0 <sf_gen_atmfield_code>
    c0e8:	mov	r1, r4
    c0ec:	bl	3ac0 <sf_gen_or>
    c0f0:	mov	r3, #0
    c0f4:	mov	r2, #16
    c0f8:	mov	r1, #90	; 0x5a
    c0fc:	mov	r0, #54	; 0x36
    c100:	bl	68d0 <sf_gen_atmfield_code>
    c104:	mov	r1, r4
    c108:	bl	3ac0 <sf_gen_or>
    c10c:	mov	r0, #26
    c110:	bl	b768 <sf_gen_atmtype_abbrev>
    c114:	mov	r1, r4
    c118:	bl	3a30 <sf_gen_and>
    c11c:	b	bfb0 <sf_gen_atmmulti_abbrev+0x108>
    c120:	ldr	r0, [pc, #44]	; c154 <sf_gen_atmmulti_abbrev+0x2ac>
    c124:	add	r0, pc, r0
    c128:	bl	229c <sf_bpf_error>
    c12c:	ldr	r0, [pc, #36]	; c158 <sf_gen_atmmulti_abbrev+0x2b0>
    c130:	add	r0, pc, r0
    c134:	bl	229c <sf_bpf_error>
    c138:	bl	ebc <abort@plt>
    c13c:	.word	0x0002548c
    c140:	.word	0x000253cc
    c144:	.word	0x00008fd4
    c148:	.word	0x0002538c
    c14c:	.word	0x00008f78
    c150:	.word	0x00025310
    c154:	.word	0x00008ebc
    c158:	.word	0x00008ed8

0000c15c <pcap_nametoaddr>:
    c15c:	str	r4, [sp, #-8]!
    c160:	str	lr, [sp, #4]
    c164:	bl	ea4 <gethostbyname@plt>
    c168:	cmp	r0, #0
    c16c:	beq	c19c <pcap_nametoaddr+0x40>
    c170:	ldr	r1, [r0, #16]
    c174:	ldr	r3, [r1]
    c178:	cmp	r3, #0
    c17c:	beq	c198 <pcap_nametoaddr+0x3c>
    c180:	ldr	r2, [r3]
    c184:	rev	r2, r2
    c188:	str	r2, [r3]
    c18c:	ldr	r3, [r1, #4]!
    c190:	cmp	r3, #0
    c194:	bne	c180 <pcap_nametoaddr+0x24>
    c198:	ldr	r0, [r0, #16]
    c19c:	ldr	r4, [sp]
    c1a0:	add	sp, sp, #4
    c1a4:	pop	{pc}		; (ldr pc, [sp], #4)

0000c1a8 <pcap_nametoaddrinfo>:
    c1a8:	strd	r4, [sp, #-12]!
    c1ac:	str	lr, [sp, #8]
    c1b0:	sub	sp, sp, #44	; 0x2c
    c1b4:	mov	r4, #0
    c1b8:	mov	r5, #0
    c1bc:	strd	r4, [sp, #8]
    c1c0:	add	r2, sp, #8
    c1c4:	strd	r4, [r2, #16]
    c1c8:	strd	r4, [r2, #24]
    c1cc:	mov	r3, #1
    c1d0:	str	r3, [sp, #16]
    c1d4:	mov	r3, #6
    c1d8:	str	r3, [sp, #20]
    c1dc:	add	r3, sp, #4
    c1e0:	mov	r1, #0
    c1e4:	bl	e8c <getaddrinfo@plt>
    c1e8:	cmp	r0, #0
    c1ec:	ldreq	r0, [sp, #4]
    c1f0:	movne	r0, #0
    c1f4:	add	sp, sp, #44	; 0x2c
    c1f8:	ldrd	r4, [sp]
    c1fc:	add	sp, sp, #8
    c200:	pop	{pc}		; (ldr pc, [sp], #4)

0000c204 <pcap_nametonetaddr>:
    c204:	str	r4, [sp, #-8]!
    c208:	str	lr, [sp, #4]
    c20c:	bl	d54 <getnetbyname@plt>
    c210:	cmp	r0, #0
    c214:	ldrne	r0, [r0, #12]
    c218:	moveq	r0, #0
    c21c:	ldr	r4, [sp]
    c220:	add	sp, sp, #4
    c224:	pop	{pc}		; (ldr pc, [sp], #4)

0000c228 <pcap_nametoport>:
    c228:	strd	r4, [sp, #-24]!	; 0xffffffe8
    c22c:	strd	r6, [sp, #8]
    c230:	str	r8, [sp, #16]
    c234:	str	lr, [sp, #20]
    c238:	mov	r7, r0
    c23c:	mov	r5, r1
    c240:	mov	r6, r2
    c244:	ldr	r1, [pc, #200]	; c314 <pcap_nametoport+0xec>
    c248:	add	r1, pc, r1
    c24c:	bl	e20 <getservbyname@plt>
    c250:	cmp	r0, #0
    c254:	beq	c2d8 <pcap_nametoport+0xb0>
    c258:	ldr	r4, [r0, #8]
    c25c:	rev16	r4, r4
    c260:	uxth	r4, r4
    c264:	ldr	r1, [pc, #172]	; c318 <pcap_nametoport+0xf0>
    c268:	add	r1, pc, r1
    c26c:	mov	r0, r7
    c270:	bl	e20 <getservbyname@plt>
    c274:	cmp	r0, #0
    c278:	beq	c2c4 <pcap_nametoport+0x9c>
    c27c:	ldr	r3, [r0, #8]
    c280:	rev16	r3, r3
    c284:	uxth	r3, r3
    c288:	str	r4, [r5]
    c28c:	cmp	r4, r3
    c290:	mvneq	r3, #0
    c294:	streq	r3, [r6]
    c298:	moveq	r0, #1
    c29c:	bne	c2b4 <pcap_nametoport+0x8c>
    c2a0:	ldrd	r4, [sp]
    c2a4:	ldrd	r6, [sp, #8]
    c2a8:	ldr	r8, [sp, #16]
    c2ac:	add	sp, sp, #20
    c2b0:	pop	{pc}		; (ldr pc, [sp], #4)
    c2b4:	mov	r3, #6
    c2b8:	str	r3, [r6]
    c2bc:	mov	r0, #1
    c2c0:	b	c2a0 <pcap_nametoport+0x78>
    c2c4:	str	r4, [r5]
    c2c8:	mov	r3, #6
    c2cc:	str	r3, [r6]
    c2d0:	mov	r0, #1
    c2d4:	b	c2a0 <pcap_nametoport+0x78>
    c2d8:	ldr	r1, [pc, #60]	; c31c <pcap_nametoport+0xf4>
    c2dc:	add	r1, pc, r1
    c2e0:	mov	r0, r7
    c2e4:	bl	e20 <getservbyname@plt>
    c2e8:	cmp	r0, #0
    c2ec:	moveq	r0, #0
    c2f0:	beq	c2a0 <pcap_nametoport+0x78>
    c2f4:	ldr	r3, [r0, #8]
    c2f8:	rev16	r3, r3
    c2fc:	uxth	r3, r3
    c300:	str	r3, [r5]
    c304:	mov	r3, #17
    c308:	str	r3, [r6]
    c30c:	mov	r0, #1
    c310:	b	c2a0 <pcap_nametoport+0x78>
    c314:	.word	0x00008de8
    c318:	.word	0x00008dcc
    c31c:	.word	0x00008d58

0000c320 <pcap_nametoportrange>:
    c320:	strd	r4, [sp, #-28]!	; 0xffffffe4
    c324:	strd	r6, [sp, #8]
    c328:	strd	r8, [sp, #16]
    c32c:	str	lr, [sp, #24]
    c330:	sub	sp, sp, #12
    c334:	mov	r7, r0
    c338:	mov	r5, r1
    c33c:	mov	r6, r2
    c340:	mov	r4, r3
    c344:	mov	r3, sp
    c348:	add	r2, sp, #4
    c34c:	ldr	r1, [pc, #240]	; c444 <pcap_nametoportrange+0x124>
    c350:	add	r1, pc, r1
    c354:	bl	e5c <sscanf@plt>
    c358:	cmp	r0, #2
    c35c:	bne	c398 <pcap_nametoportrange+0x78>
    c360:	ldr	r3, [sp, #4]
    c364:	str	r3, [r5]
    c368:	ldr	r3, [sp]
    c36c:	str	r3, [r6]
    c370:	mvn	r3, #0
    c374:	str	r3, [r4]
    c378:	mov	r5, #1
    c37c:	mov	r0, r5
    c380:	add	sp, sp, #12
    c384:	ldrd	r4, [sp]
    c388:	ldrd	r6, [sp, #8]
    c38c:	ldrd	r8, [sp, #16]
    c390:	add	sp, sp, #24
    c394:	pop	{pc}		; (ldr pc, [sp], #4)
    c398:	mov	r0, r7
    c39c:	bl	d78 <strdup@plt>
    c3a0:	subs	r7, r0, #0
    c3a4:	moveq	r5, #0
    c3a8:	beq	c37c <pcap_nametoportrange+0x5c>
    c3ac:	mov	r1, #45	; 0x2d
    c3b0:	mov	r0, r7
    c3b4:	bl	dfc <strchr@plt>
    c3b8:	subs	r8, r0, #0
    c3bc:	beq	c41c <pcap_nametoportrange+0xfc>
    c3c0:	mov	r3, #0
    c3c4:	strb	r3, [r8]
    c3c8:	mov	r2, r4
    c3cc:	mov	r1, r5
    c3d0:	mov	r0, r7
    c3d4:	bl	c228 <pcap_nametoport>
    c3d8:	subs	r5, r0, #0
    c3dc:	beq	c42c <pcap_nametoportrange+0x10c>
    c3e0:	ldr	r9, [r4]
    c3e4:	mov	r2, r4
    c3e8:	mov	r1, r6
    c3ec:	add	r0, r8, #1
    c3f0:	bl	c228 <pcap_nametoport>
    c3f4:	subs	r5, r0, #0
    c3f8:	beq	c438 <pcap_nametoportrange+0x118>
    c3fc:	ldr	r3, [r4]
    c400:	cmp	r3, r9
    c404:	moveq	r5, #1
    c408:	beq	c37c <pcap_nametoportrange+0x5c>
    c40c:	mvn	r3, #0
    c410:	str	r3, [r4]
    c414:	mov	r5, #1
    c418:	b	c37c <pcap_nametoportrange+0x5c>
    c41c:	mov	r0, r7
    c420:	bl	d48 <free@plt>
    c424:	mov	r5, #0
    c428:	b	c37c <pcap_nametoportrange+0x5c>
    c42c:	mov	r0, r7
    c430:	bl	d48 <free@plt>
    c434:	b	c37c <pcap_nametoportrange+0x5c>
    c438:	mov	r0, r7
    c43c:	bl	d48 <free@plt>
    c440:	b	c37c <pcap_nametoportrange+0x5c>
    c444:	.word	0x00008ce8

0000c448 <pcap_nametoproto>:
    c448:	str	r4, [sp, #-8]!
    c44c:	str	lr, [sp, #4]
    c450:	bl	d24 <getprotobyname@plt>
    c454:	cmp	r0, #0
    c458:	ldrne	r0, [r0, #8]
    c45c:	mvneq	r0, #0
    c460:	ldr	r4, [sp]
    c464:	add	sp, sp, #4
    c468:	pop	{pc}		; (ldr pc, [sp], #4)

0000c46c <pcap_nametoeproto>:
    c46c:	strd	r4, [sp, #-16]!
    c470:	str	r6, [sp, #8]
    c474:	str	lr, [sp, #12]
    c478:	mov	r5, r0
    c47c:	ldr	r3, [pc, #84]	; c4d8 <pcap_nametoeproto+0x6c>
    c480:	add	r3, pc, r3
    c484:	ldr	r0, [r3]
    c488:	cmp	r0, #0
    c48c:	beq	c4d0 <pcap_nametoeproto+0x64>
    c490:	ldr	r4, [pc, #68]	; c4dc <pcap_nametoeproto+0x70>
    c494:	add	r4, pc, r4
    c498:	mov	r1, r5
    c49c:	bl	cf4 <strcmp@plt>
    c4a0:	cmp	r0, #0
    c4a4:	beq	c4bc <pcap_nametoeproto+0x50>
    c4a8:	ldr	r0, [r4, #8]!
    c4ac:	cmp	r0, #0
    c4b0:	bne	c498 <pcap_nametoeproto+0x2c>
    c4b4:	mvn	r0, #0
    c4b8:	b	c4c0 <pcap_nametoeproto+0x54>
    c4bc:	ldrh	r0, [r4, #4]
    c4c0:	ldrd	r4, [sp]
    c4c4:	ldr	r6, [sp, #8]
    c4c8:	add	sp, sp, #12
    c4cc:	pop	{pc}		; (ldr pc, [sp], #4)
    c4d0:	mvn	r0, #0
    c4d4:	b	c4c0 <pcap_nametoeproto+0x54>
    c4d8:	.word	0x00024e00
    c4dc:	.word	0x00024dec

0000c4e0 <pcap_nametollc>:
    c4e0:	strd	r4, [sp, #-16]!
    c4e4:	str	r6, [sp, #8]
    c4e8:	str	lr, [sp, #12]
    c4ec:	mov	r5, r0
    c4f0:	ldr	r3, [pc, #88]	; c550 <pcap_nametollc+0x70>
    c4f4:	add	r3, pc, r3
    c4f8:	ldr	r0, [r3, #168]	; 0xa8
    c4fc:	cmp	r0, #0
    c500:	beq	c548 <pcap_nametollc+0x68>
    c504:	ldr	r4, [pc, #72]	; c554 <pcap_nametollc+0x74>
    c508:	add	r4, pc, r4
    c50c:	add	r4, r4, #168	; 0xa8
    c510:	mov	r1, r5
    c514:	bl	cf4 <strcmp@plt>
    c518:	cmp	r0, #0
    c51c:	beq	c534 <pcap_nametollc+0x54>
    c520:	ldr	r0, [r4, #8]!
    c524:	cmp	r0, #0
    c528:	bne	c510 <pcap_nametollc+0x30>
    c52c:	mvn	r0, #0
    c530:	b	c538 <pcap_nametollc+0x58>
    c534:	ldrh	r0, [r4, #4]
    c538:	ldrd	r4, [sp]
    c53c:	ldr	r6, [sp, #8]
    c540:	add	sp, sp, #12
    c544:	pop	{pc}		; (ldr pc, [sp], #4)
    c548:	mvn	r0, #0
    c54c:	b	c538 <pcap_nametollc+0x58>
    c550:	.word	0x00024d8c
    c554:	.word	0x00024d78

0000c558 <__pcap_atoin>:
    c558:	str	r4, [sp, #-8]!
    c55c:	str	lr, [sp, #4]
    c560:	mov	ip, r0
    c564:	mov	r0, #0
    c568:	str	r0, [r1]
    c56c:	mov	r4, r0
    c570:	ldrb	r3, [ip]
    c574:	cmp	r3, #0
    c578:	cmpne	r3, #46	; 0x2e
    c57c:	beq	c5c8 <__pcap_atoin+0x70>
    c580:	mov	r2, r4
    c584:	add	r2, r2, r2, lsl #2
    c588:	add	r3, r3, r2, lsl #1
    c58c:	sub	r2, r3, #48	; 0x30
    c590:	ldrb	r3, [ip, #1]!
    c594:	cmp	r3, #0
    c598:	cmpne	r3, #46	; 0x2e
    c59c:	bne	c584 <__pcap_atoin+0x2c>
    c5a0:	ldr	lr, [r1]
    c5a4:	uxtb	r3, r2
    c5a8:	orr	r2, r3, lr, lsl #8
    c5ac:	str	r2, [r1]
    c5b0:	add	r0, r0, #8
    c5b4:	ldrb	r3, [ip]
    c5b8:	cmp	r3, #0
    c5bc:	beq	c5d0 <__pcap_atoin+0x78>
    c5c0:	add	ip, ip, #1
    c5c4:	b	c570 <__pcap_atoin+0x18>
    c5c8:	mov	r2, r4
    c5cc:	b	c5a0 <__pcap_atoin+0x48>
    c5d0:	ldr	r4, [sp]
    c5d4:	add	sp, sp, #4
    c5d8:	pop	{pc}		; (ldr pc, [sp], #4)

0000c5dc <__pcap_atodn>:
    c5dc:	strd	r4, [sp, #-12]!
    c5e0:	str	lr, [sp, #8]
    c5e4:	sub	sp, sp, #12
    c5e8:	mov	r5, r0
    c5ec:	mov	r4, r1
    c5f0:	add	r3, sp, #4
    c5f4:	mov	r2, sp
    c5f8:	ldr	r1, [pc, #76]	; c64c <__pcap_atodn+0x70>
    c5fc:	add	r1, pc, r1
    c600:	bl	e5c <sscanf@plt>
    c604:	cmp	r0, #2
    c608:	bne	c63c <__pcap_atodn+0x60>
    c60c:	ldr	r3, [sp]
    c610:	lsl	r3, r3, #10
    c614:	uxth	r3, r3
    c618:	ldr	r2, [sp, #4]
    c61c:	ubfx	r2, r2, #0, #10
    c620:	orr	r3, r3, r2
    c624:	str	r3, [r4]
    c628:	mov	r0, #32
    c62c:	add	sp, sp, #12
    c630:	ldrd	r4, [sp]
    c634:	add	sp, sp, #8
    c638:	pop	{pc}		; (ldr pc, [sp], #4)
    c63c:	mov	r1, r5
    c640:	ldr	r0, [pc, #8]	; c650 <__pcap_atodn+0x74>
    c644:	add	r0, pc, r0
    c648:	bl	229c <sf_bpf_error>
    c64c:	.word	0x00008a44
    c650:	.word	0x00008a04

0000c654 <pcap_ether_aton>:
    c654:	strd	r4, [sp, #-16]!
    c658:	str	r6, [sp, #8]
    c65c:	str	lr, [sp, #12]
    c660:	mov	r4, r0
    c664:	mov	r0, #6
    c668:	bl	dc0 <malloc@plt>
    c66c:	subs	r6, r0, #0
    c670:	beq	c71c <pcap_ether_aton+0xc8>
    c674:	ldrb	r5, [r4]
    c678:	cmp	r5, #0
    c67c:	beq	c71c <pcap_ether_aton+0xc8>
    c680:	bl	dd8 <__ctype_b_loc@plt>
    c684:	ldr	ip, [r0]
    c688:	mov	r0, r6
    c68c:	b	c6b0 <pcap_ether_aton+0x5c>
    c690:	tst	r1, #512	; 0x200
    c694:	subne	r2, lr, #87	; 0x57
    c698:	subeq	r2, lr, #55	; 0x37
    c69c:	orr	r2, r2, r3
    c6a0:	strb	r2, [r0], #1
    c6a4:	ldrb	r5, [r4]
    c6a8:	cmp	r5, #0
    c6ac:	beq	c71c <pcap_ether_aton+0xc8>
    c6b0:	sub	r3, r5, #45	; 0x2d
    c6b4:	uxtb	r3, r3
    c6b8:	cmp	r5, #58	; 0x3a
    c6bc:	cmpne	r3, #1
    c6c0:	addls	r4, r4, #1
    c6c4:	ldrb	r3, [r4]
    c6c8:	lsl	r2, r3, #1
    c6cc:	ldrh	r2, [ip, r2]
    c6d0:	tst	r2, #2048	; 0x800
    c6d4:	subne	r3, r3, #48	; 0x30
    c6d8:	bne	c6e8 <pcap_ether_aton+0x94>
    c6dc:	tst	r2, #512	; 0x200
    c6e0:	subne	r3, r3, #87	; 0x57
    c6e4:	subeq	r3, r3, #55	; 0x37
    c6e8:	mov	r2, r3
    c6ec:	ldrb	lr, [r4, #1]
    c6f0:	lsl	r1, lr, #1
    c6f4:	ldrh	r1, [ip, r1]
    c6f8:	tst	r1, #4096	; 0x1000
    c6fc:	addeq	r4, r4, #1
    c700:	beq	c6a0 <pcap_ether_aton+0x4c>
    c704:	lsl	r3, r3, #4
    c708:	add	r4, r4, #2
    c70c:	tst	r1, #2048	; 0x800
    c710:	subne	r2, lr, #48	; 0x30
    c714:	beq	c690 <pcap_ether_aton+0x3c>
    c718:	b	c69c <pcap_ether_aton+0x48>
    c71c:	mov	r0, r6
    c720:	ldrd	r4, [sp]
    c724:	ldr	r6, [sp, #8]
    c728:	add	sp, sp, #12
    c72c:	pop	{pc}		; (ldr pc, [sp], #4)

0000c730 <pcap_ether_hostton>:
    c730:	strd	r4, [sp, #-16]!
    c734:	str	r6, [sp, #8]
    c738:	str	lr, [sp, #12]
    c73c:	mov	r6, r0
    c740:	ldr	r3, [pc, #204]	; c814 <pcap_ether_hostton+0xe4>
    c744:	add	r3, pc, r3
    c748:	ldr	r3, [r3]
    c74c:	cmp	r3, #0
    c750:	beq	c7d8 <pcap_ether_hostton+0xa8>
    c754:	ldr	r3, [pc, #188]	; c818 <pcap_ether_hostton+0xe8>
    c758:	add	r3, pc, r3
    c75c:	ldr	r4, [r3, #4]
    c760:	cmp	r4, #0
    c764:	beq	c7c4 <pcap_ether_hostton+0x94>
    c768:	mov	r0, r4
    c76c:	bl	d84 <rewind@plt>
    c770:	ldr	r5, [pc, #164]	; c81c <pcap_ether_hostton+0xec>
    c774:	add	r5, pc, r5
    c778:	ldr	r0, [r5, #4]
    c77c:	bl	fa68 <pcap_next_etherent>
    c780:	subs	r4, r0, #0
    c784:	beq	c7c4 <pcap_ether_hostton+0x94>
    c788:	mov	r1, r6
    c78c:	add	r0, r4, #6
    c790:	bl	cf4 <strcmp@plt>
    c794:	cmp	r0, #0
    c798:	bne	c778 <pcap_ether_hostton+0x48>
    c79c:	mov	r0, #6
    c7a0:	bl	dc0 <malloc@plt>
    c7a4:	cmp	r0, #0
    c7a8:	moveq	r4, r0
    c7ac:	beq	c7c4 <pcap_ether_hostton+0x94>
    c7b0:	ldr	r3, [r4]
    c7b4:	str	r3, [r0]
    c7b8:	ldrh	r3, [r4, #4]
    c7bc:	strh	r3, [r0, #4]
    c7c0:	mov	r4, r0
    c7c4:	mov	r0, r4
    c7c8:	ldrd	r4, [sp]
    c7cc:	ldr	r6, [sp, #8]
    c7d0:	add	sp, sp, #12
    c7d4:	pop	{pc}		; (ldr pc, [sp], #4)
    c7d8:	ldr	r1, [pc, #64]	; c820 <pcap_ether_hostton+0xf0>
    c7dc:	add	r1, pc, r1
    c7e0:	ldr	r0, [pc, #60]	; c824 <pcap_ether_hostton+0xf4>
    c7e4:	add	r0, pc, r0
    c7e8:	bl	d18 <fopen@plt>
    c7ec:	mov	r4, r0
    c7f0:	ldr	r3, [pc, #48]	; c828 <pcap_ether_hostton+0xf8>
    c7f4:	add	r3, pc, r3
    c7f8:	str	r0, [r3, #4]
    c7fc:	ldr	r2, [r3]
    c800:	add	r2, r2, #1
    c804:	str	r2, [r3]
    c808:	cmp	r0, #0
    c80c:	bne	c770 <pcap_ether_hostton+0x40>
    c810:	b	c7c4 <pcap_ether_hostton+0x94>
    c814:	.word	0x00024fdc
    c818:	.word	0x00024fc8
    c81c:	.word	0x00024fac
    c820:	.word	0x0000888c
    c824:	.word	0x00008888
    c828:	.word	0x00024f2c

0000c82c <__pcap_nametodnaddr>:
    c82c:	str	r4, [sp, #-8]!
    c830:	str	lr, [sp, #4]
    c834:	mov	r1, r0
    c838:	ldr	r0, [pc, #4]	; c844 <__pcap_nametodnaddr+0x18>
    c83c:	add	r0, pc, r0
    c840:	bl	229c <sf_bpf_error>
    c844:	.word	0x0000883c

0000c848 <find_levels_r>:
    c848:	strd	r4, [sp, #-16]!
    c84c:	str	r6, [sp, #8]
    c850:	str	lr, [sp, #12]
    c854:	ldr	r5, [pc, #140]	; c8e8 <find_levels_r+0xa0>
    c858:	add	r5, pc, r5
    c85c:	ldr	r3, [pc, #136]	; c8ec <find_levels_r+0xa4>
    c860:	add	r3, pc, r3
    c864:	ldr	r3, [r3]
    c868:	ldr	r2, [r0, #24]
    c86c:	cmp	r2, r3
    c870:	beq	c8d8 <find_levels_r+0x90>
    c874:	mov	r4, r0
    c878:	str	r3, [r0, #24]
    c87c:	mov	r3, #0
    c880:	str	r3, [r0, #100]	; 0x64
    c884:	ldr	r0, [r0, #60]	; 0x3c
    c888:	cmp	r0, r3
    c88c:	moveq	r3, #0
    c890:	beq	c8bc <find_levels_r+0x74>
    c894:	bl	c848 <find_levels_r>
    c898:	ldr	r0, [r4, #84]	; 0x54
    c89c:	bl	c848 <find_levels_r>
    c8a0:	ldr	r3, [r4, #84]	; 0x54
    c8a4:	ldr	r2, [r4, #60]	; 0x3c
    c8a8:	ldr	r3, [r3, #36]	; 0x24
    c8ac:	ldr	r2, [r2, #36]	; 0x24
    c8b0:	cmp	r3, r2
    c8b4:	movlt	r3, r2
    c8b8:	add	r3, r3, #1
    c8bc:	str	r3, [r4, #36]	; 0x24
    c8c0:	ldr	r2, [pc, #40]	; c8f0 <find_levels_r+0xa8>
    c8c4:	ldr	r2, [r5, r2]
    c8c8:	ldr	r2, [r2]
    c8cc:	ldr	r1, [r2, r3, lsl #2]
    c8d0:	str	r1, [r4, #100]	; 0x64
    c8d4:	str	r4, [r2, r3, lsl #2]
    c8d8:	ldrd	r4, [sp]
    c8dc:	ldr	r6, [sp, #8]
    c8e0:	add	sp, sp, #12
    c8e4:	pop	{pc}		; (ldr pc, [sp], #4)
    c8e8:	.word	0x000247a0
    c8ec:	.word	0x00024ec8
    c8f0:	.word	0x000000c4

0000c8f4 <propedom>:
    c8f4:	str	r4, [sp, #-8]!
    c8f8:	str	lr, [sp, #4]
    c8fc:	ldr	r3, [r0]
    c900:	lsr	ip, r3, #5
    c904:	ldr	r1, [r0, #8]
    c908:	and	r3, r3, #31
    c90c:	ldr	r2, [r1, ip, lsl #2]
    c910:	mov	lr, #1
    c914:	orr	r3, r2, lr, lsl r3
    c918:	str	r3, [r1, ip, lsl #2]
    c91c:	ldr	r3, [r0, #12]
    c920:	cmp	r3, #0
    c924:	beq	c98c <propedom+0x98>
    c928:	ldr	r1, [r3, #56]	; 0x38
    c92c:	ldr	lr, [r0, #8]
    c930:	ldr	r3, [pc, #96]	; c998 <propedom+0xa4>
    c934:	add	r3, pc, r3
    c938:	ldr	r2, [r3, #4]
    c93c:	subs	r2, r2, #1
    c940:	bmi	c98c <propedom+0x98>
    c944:	mov	ip, r2
    c948:	ldr	r3, [r1], #4
    c94c:	ldr	r4, [lr], #4
    c950:	and	r3, r3, r4
    c954:	str	r3, [r1, #-4]
    c958:	sub	ip, ip, #1
    c95c:	cmn	ip, #1
    c960:	bne	c948 <propedom+0x54>
    c964:	ldr	r3, [r0, #12]
    c968:	ldr	r1, [r3, #80]	; 0x50
    c96c:	ldr	r0, [r0, #8]
    c970:	ldr	r3, [r1], #4
    c974:	ldr	ip, [r0], #4
    c978:	and	r3, r3, ip
    c97c:	str	r3, [r1, #-4]
    c980:	sub	r2, r2, #1
    c984:	cmn	r2, #1
    c988:	bne	c970 <propedom+0x7c>
    c98c:	ldr	r4, [sp]
    c990:	add	sp, sp, #4
    c994:	pop	{pc}		; (ldr pc, [sp], #4)
    c998:	.word	0x00024df4

0000c99c <atomdef>:
    c99c:	ldr	r3, [r0]
    c9a0:	cmn	r3, #1
    c9a4:	beq	ca08 <atomdef+0x6c>
    c9a8:	and	r2, r3, #7
    c9ac:	cmp	r2, #7
    c9b0:	addls	pc, pc, r2, lsl #2
    c9b4:	b	c9fc <atomdef+0x60>
    c9b8:	b	ca04 <atomdef+0x68>
    c9bc:	b	c9d8 <atomdef+0x3c>
    c9c0:	b	c9e0 <atomdef+0x44>
    c9c4:	b	c9e0 <atomdef+0x44>
    c9c8:	b	ca04 <atomdef+0x68>
    c9cc:	b	c9fc <atomdef+0x60>
    c9d0:	b	c9fc <atomdef+0x60>
    c9d4:	b	c9e8 <atomdef+0x4c>
    c9d8:	mov	r3, #17
    c9dc:	b	ca08 <atomdef+0x6c>
    c9e0:	ldr	r3, [r0, #12]
    c9e4:	b	ca08 <atomdef+0x6c>
    c9e8:	and	r3, r3, #248	; 0xf8
    c9ec:	cmp	r3, #0
    c9f0:	moveq	r3, #17
    c9f4:	movne	r3, #16
    c9f8:	b	ca08 <atomdef+0x6c>
    c9fc:	mvn	r3, #0
    ca00:	b	ca08 <atomdef+0x6c>
    ca04:	mov	r3, #16
    ca08:	mov	r0, r3
    ca0c:	bx	lr

0000ca10 <F>:
    ca10:	strd	r4, [sp, #-12]!
    ca14:	str	lr, [sp, #8]
    ca18:	mov	lr, r0
    ca1c:	ldr	r5, [pc, #240]	; cb14 <F+0x104>
    ca20:	add	r5, pc, r5
    ca24:	eor	r3, r0, r2, lsl #8
    ca28:	eor	r3, r3, r1, lsl #4
    ca2c:	movw	r4, #8923	; 0x22db
    ca30:	movt	r4, #39383	; 0x99d7
    ca34:	umull	r0, r4, r4, r3
    ca38:	lsr	r4, r4, #7
    ca3c:	mov	r0, #213	; 0xd5
    ca40:	mls	r4, r0, r4, r3
    ca44:	ldr	r3, [pc, #204]	; cb18 <F+0x108>
    ca48:	add	r3, pc, r3
    ca4c:	add	r3, r3, r4, lsl #2
    ca50:	ldr	r3, [r3, #8]
    ca54:	cmp	r3, #0
    ca58:	bne	cae8 <F+0xd8>
    ca5c:	ldr	r3, [pc, #184]	; cb1c <F+0x10c>
    ca60:	add	r3, pc, r3
    ca64:	ldr	r0, [r3, #860]	; 0x35c
    ca68:	add	r0, r0, #1
    ca6c:	str	r0, [r3, #860]	; 0x35c
    ca70:	tst	lr, #230	; 0xe6
    ca74:	bne	ca94 <F+0x84>
    ca78:	ldr	r3, [pc, #160]	; cb20 <F+0x110>
    ca7c:	ldr	r3, [r5, r3]
    ca80:	ldr	r3, [r3]
    ca84:	add	ip, r3, r0, lsl #3
    ca88:	str	r1, [ip, #4]
    ca8c:	mov	ip, #1
    ca90:	str	ip, [r3, r0, lsl #3]
    ca94:	ldr	r3, [pc, #136]	; cb24 <F+0x114>
    ca98:	ldr	ip, [r5, r3]
    ca9c:	ldr	r3, [ip]
    caa0:	add	r5, r3, #20
    caa4:	str	r5, [ip]
    caa8:	str	r0, [r3, #12]
    caac:	str	lr, [r3]
    cab0:	str	r1, [r3, #4]
    cab4:	str	r2, [r3, #8]
    cab8:	ldr	r2, [pc, #104]	; cb28 <F+0x118>
    cabc:	add	r2, pc, r2
    cac0:	add	r4, r2, r4, lsl #2
    cac4:	ldr	r2, [r4, #8]
    cac8:	str	r2, [r3, #16]
    cacc:	str	r3, [r4, #8]
    cad0:	ldrd	r4, [sp]
    cad4:	add	sp, sp, #8
    cad8:	pop	{pc}		; (ldr pc, [sp], #4)
    cadc:	ldr	r3, [r3, #16]
    cae0:	cmp	r3, #0
    cae4:	beq	ca5c <F+0x4c>
    cae8:	ldr	ip, [r3]
    caec:	cmp	ip, lr
    caf0:	bne	cadc <F+0xcc>
    caf4:	ldr	r0, [r3, #4]
    caf8:	cmp	r0, r1
    cafc:	bne	cadc <F+0xcc>
    cb00:	ldr	r0, [r3, #8]
    cb04:	cmp	r0, r2
    cb08:	bne	cadc <F+0xcc>
    cb0c:	ldr	r0, [r3, #12]
    cb10:	b	cad0 <F+0xc0>
    cb14:	.word	0x000245d8
    cb18:	.word	0x00024ce0
    cb1c:	.word	0x00024cc8
    cb20:	.word	0x00000100
    cb24:	.word	0x000000ec
    cb28:	.word	0x00024c6c

0000cb2c <use_conflict>:
    cb2c:	ldr	r2, [r1, #128]	; 0x80
    cb30:	cmp	r2, #0
    cb34:	beq	cb90 <use_conflict+0x64>
    cb38:	str	r4, [sp, #-8]!
    cb3c:	str	lr, [sp, #4]
    cb40:	mov	r3, #0
    cb44:	mov	ip, #1
    cb48:	add	r0, r0, #136	; 0x88
    cb4c:	add	r1, r1, #136	; 0x88
    cb50:	b	cb60 <use_conflict+0x34>
    cb54:	add	r3, r3, #1
    cb58:	cmp	r3, #18
    cb5c:	beq	cb80 <use_conflict+0x54>
    cb60:	ands	lr, r2, ip, lsl r3
    cb64:	beq	cb54 <use_conflict+0x28>
    cb68:	ldr	r4, [r0, r3, lsl #2]
    cb6c:	ldr	lr, [r1, r3, lsl #2]
    cb70:	cmp	r4, lr
    cb74:	beq	cb54 <use_conflict+0x28>
    cb78:	mov	r0, #1
    cb7c:	b	cb84 <use_conflict+0x58>
    cb80:	mov	r0, #0
    cb84:	ldr	r4, [sp]
    cb88:	add	sp, sp, #4
    cb8c:	pop	{pc}		; (ldr pc, [sp], #4)
    cb90:	mov	r0, #0
    cb94:	bx	lr

0000cb98 <find_inedges>:
    cb98:	push	{lr}		; (str lr, [sp, #-4]!)
    cb9c:	ldr	lr, [pc, #168]	; cc4c <find_inedges+0xb4>
    cba0:	add	lr, pc, lr
    cba4:	ldr	r3, [pc, #164]	; cc50 <find_inedges+0xb8>
    cba8:	add	r3, pc, r3
    cbac:	ldr	r1, [r3, #864]	; 0x360
    cbb0:	cmp	r1, #0
    cbb4:	ble	cbdc <find_inedges+0x44>
    cbb8:	ldr	r3, [pc, #148]	; cc54 <find_inedges+0xbc>
    cbbc:	ldr	r3, [lr, r3]
    cbc0:	ldr	r3, [r3]
    cbc4:	add	r1, r3, r1, lsl #2
    cbc8:	mov	ip, #0
    cbcc:	ldr	r2, [r3], #4
    cbd0:	str	ip, [r2, #112]	; 0x70
    cbd4:	cmp	r3, r1
    cbd8:	bne	cbcc <find_inedges+0x34>
    cbdc:	ldr	r0, [r0, #36]	; 0x24
    cbe0:	cmp	r0, #0
    cbe4:	ble	cc48 <find_inedges+0xb0>
    cbe8:	ldr	r3, [pc, #104]	; cc58 <find_inedges+0xc0>
    cbec:	ldr	r3, [lr, r3]
    cbf0:	ldr	ip, [r3]
    cbf4:	add	r0, ip, r0, lsl #2
    cbf8:	b	cc04 <find_inedges+0x6c>
    cbfc:	cmp	r0, ip
    cc00:	beq	cc48 <find_inedges+0xb0>
    cc04:	ldr	r3, [r0], #-4
    cc08:	cmp	r3, #0
    cc0c:	beq	cbfc <find_inedges+0x64>
    cc10:	ldr	r2, [r3, #60]	; 0x3c
    cc14:	ldr	r1, [r2, #112]	; 0x70
    cc18:	str	r1, [r3, #68]	; 0x44
    cc1c:	add	r1, r3, #48	; 0x30
    cc20:	str	r1, [r2, #112]	; 0x70
    cc24:	ldr	r2, [r3, #84]	; 0x54
    cc28:	ldr	r1, [r2, #112]	; 0x70
    cc2c:	str	r1, [r3, #92]	; 0x5c
    cc30:	add	r1, r3, #72	; 0x48
    cc34:	str	r1, [r2, #112]	; 0x70
    cc38:	ldr	r3, [r3, #100]	; 0x64
    cc3c:	cmp	r3, #0
    cc40:	bne	cc10 <find_inedges+0x78>
    cc44:	b	cbfc <find_inedges+0x64>
    cc48:	pop	{pc}		; (ldr pc, [sp], #4)
    cc4c:	.word	0x00024458
    cc50:	.word	0x00024b80
    cc54:	.word	0x000000cc
    cc58:	.word	0x000000c4

0000cc5c <make_marks>:
    cc5c:	ldr	r3, [pc, #76]	; ccb0 <make_marks+0x54>
    cc60:	add	r3, pc, r3
    cc64:	ldr	r3, [r3]
    cc68:	ldr	r2, [r0, #24]
    cc6c:	cmp	r2, r3
    cc70:	bxeq	lr
    cc74:	str	r3, [r0, #24]
    cc78:	ldr	r3, [r0, #8]
    cc7c:	and	r3, r3, #7
    cc80:	cmp	r3, #6
    cc84:	bxeq	lr
    cc88:	str	r4, [sp, #-8]!
    cc8c:	str	lr, [sp, #4]
    cc90:	mov	r4, r0
    cc94:	ldr	r0, [r0, #60]	; 0x3c
    cc98:	bl	cc5c <make_marks>
    cc9c:	ldr	r0, [r4, #84]	; 0x54
    cca0:	bl	cc5c <make_marks>
    cca4:	ldr	r4, [sp]
    cca8:	add	sp, sp, #4
    ccac:	pop	{pc}		; (ldr pc, [sp], #4)
    ccb0:	.word	0x00024ac8

0000ccb4 <slength>:
    ccb4:	subs	r3, r0, #0
    ccb8:	beq	ccdc <slength+0x28>
    ccbc:	mov	r0, #0
    ccc0:	ldr	r2, [r3]
    ccc4:	cmn	r2, #1
    ccc8:	addne	r0, r0, #1
    cccc:	ldr	r3, [r3, #16]
    ccd0:	cmp	r3, #0
    ccd4:	bne	ccc0 <slength+0xc>
    ccd8:	bx	lr
    ccdc:	mov	r0, #0
    cce0:	bx	lr

0000cce4 <count_blocks>:
    cce4:	strd	r4, [sp, #-16]!
    cce8:	str	r6, [sp, #8]
    ccec:	str	lr, [sp, #12]
    ccf0:	subs	r4, r0, #0
    ccf4:	moveq	r0, #0
    ccf8:	beq	cd38 <count_blocks+0x54>
    ccfc:	ldr	r3, [pc, #68]	; cd48 <count_blocks+0x64>
    cd00:	add	r3, pc, r3
    cd04:	ldr	r3, [r3]
    cd08:	ldr	r2, [r4, #24]
    cd0c:	cmp	r2, r3
    cd10:	moveq	r0, #0
    cd14:	beq	cd38 <count_blocks+0x54>
    cd18:	str	r3, [r4, #24]
    cd1c:	ldr	r0, [r4, #60]	; 0x3c
    cd20:	bl	cce4 <count_blocks>
    cd24:	mov	r5, r0
    cd28:	ldr	r0, [r4, #84]	; 0x54
    cd2c:	bl	cce4 <count_blocks>
    cd30:	add	r0, r5, r0
    cd34:	add	r0, r0, #1
    cd38:	ldrd	r4, [sp]
    cd3c:	ldr	r6, [sp, #8]
    cd40:	add	sp, sp, #12
    cd44:	pop	{pc}		; (ldr pc, [sp], #4)
    cd48:	.word	0x00024a28

0000cd4c <number_blks_r>:
    cd4c:	str	r4, [sp, #-8]!
    cd50:	str	lr, [sp, #4]
    cd54:	ldr	r3, [pc, #104]	; cdc4 <number_blks_r+0x78>
    cd58:	add	r3, pc, r3
    cd5c:	subs	r4, r0, #0
    cd60:	beq	cdb8 <number_blks_r+0x6c>
    cd64:	ldr	r2, [pc, #92]	; cdc8 <number_blks_r+0x7c>
    cd68:	add	r2, pc, r2
    cd6c:	ldr	r2, [r2]
    cd70:	ldr	r1, [r4, #24]
    cd74:	cmp	r1, r2
    cd78:	beq	cdb8 <number_blks_r+0x6c>
    cd7c:	str	r2, [r4, #24]
    cd80:	ldr	r1, [pc, #68]	; cdcc <number_blks_r+0x80>
    cd84:	add	r1, pc, r1
    cd88:	ldr	r2, [r1, #864]	; 0x360
    cd8c:	add	r0, r2, #1
    cd90:	str	r0, [r1, #864]	; 0x360
    cd94:	str	r2, [r4]
    cd98:	ldr	r1, [pc, #48]	; cdd0 <number_blks_r+0x84>
    cd9c:	ldr	r3, [r3, r1]
    cda0:	ldr	r3, [r3]
    cda4:	str	r4, [r3, r2, lsl #2]
    cda8:	ldr	r0, [r4, #60]	; 0x3c
    cdac:	bl	cd4c <number_blks_r>
    cdb0:	ldr	r0, [r4, #84]	; 0x54
    cdb4:	bl	cd4c <number_blks_r>
    cdb8:	ldr	r4, [sp]
    cdbc:	add	sp, sp, #4
    cdc0:	pop	{pc}		; (ldr pc, [sp], #4)
    cdc4:	.word	0x000242a0
    cdc8:	.word	0x000249c0
    cdcc:	.word	0x000249a4
    cdd0:	.word	0x000000cc

0000cdd4 <count_stmts>:
    cdd4:	strd	r4, [sp, #-16]!
    cdd8:	str	r6, [sp, #8]
    cddc:	str	lr, [sp, #12]
    cde0:	subs	r5, r0, #0
    cde4:	moveq	r0, #0
    cde8:	beq	ce44 <count_stmts+0x70>
    cdec:	ldr	r3, [pc, #96]	; ce54 <count_stmts+0x80>
    cdf0:	add	r3, pc, r3
    cdf4:	ldr	r3, [r3]
    cdf8:	ldr	r2, [r5, #24]
    cdfc:	cmp	r2, r3
    ce00:	moveq	r0, #0
    ce04:	beq	ce44 <count_stmts+0x70>
    ce08:	str	r3, [r5, #24]
    ce0c:	ldr	r0, [r5, #60]	; 0x3c
    ce10:	bl	cdd4 <count_stmts>
    ce14:	mov	r4, r0
    ce18:	ldr	r0, [r5, #84]	; 0x54
    ce1c:	bl	cdd4 <count_stmts>
    ce20:	add	r4, r4, r0
    ce24:	ldr	r0, [r5, #4]
    ce28:	bl	ccb4 <slength>
    ce2c:	add	r0, r0, r4
    ce30:	add	r0, r0, #1
    ce34:	ldr	r4, [r5, #28]
    ce38:	add	r0, r0, r4
    ce3c:	ldr	r3, [r5, #32]
    ce40:	add	r0, r0, r3
    ce44:	ldrd	r4, [sp]
    ce48:	ldr	r6, [sp, #8]
    ce4c:	add	sp, sp, #12
    ce50:	pop	{pc}		; (ldr pc, [sp], #4)
    ce54:	.word	0x00024938

0000ce58 <atomuse>:
    ce58:	ldr	r3, [r0]
    ce5c:	cmn	r3, #1
    ce60:	beq	cf10 <atomuse+0xb8>
    ce64:	and	r2, r3, #7
    ce68:	cmp	r2, #7
    ce6c:	addls	pc, pc, r2, lsl #2
    ce70:	b	cf00 <atomuse+0xa8>
    ce74:	b	ceb8 <atomuse+0x60>
    ce78:	b	ceb8 <atomuse+0x60>
    ce7c:	b	cf0c <atomuse+0xb4>
    ce80:	b	ce94 <atomuse+0x3c>
    ce84:	b	ced8 <atomuse+0x80>
    ce88:	b	ced8 <atomuse+0x80>
    ce8c:	b	ce9c <atomuse+0x44>
    ce90:	b	ceec <atomuse+0x94>
    ce94:	mov	r3, #17
    ce98:	b	cf10 <atomuse+0xb8>
    ce9c:	and	r3, r3, #24
    cea0:	cmp	r3, #16
    cea4:	beq	cf10 <atomuse+0xb8>
    cea8:	cmp	r3, #8
    ceac:	moveq	r3, #17
    ceb0:	mvnne	r3, #0
    ceb4:	b	cf10 <atomuse+0xb8>
    ceb8:	and	r3, r3, #224	; 0xe0
    cebc:	cmp	r3, #64	; 0x40
    cec0:	moveq	r3, #17
    cec4:	beq	cf10 <atomuse+0xb8>
    cec8:	cmp	r3, #96	; 0x60
    cecc:	bne	cf18 <atomuse+0xc0>
    ced0:	ldr	r3, [r0, #12]
    ced4:	b	cf10 <atomuse+0xb8>
    ced8:	and	r3, r3, #8
    cedc:	cmp	r3, #0
    cee0:	moveq	r3, #16
    cee4:	movne	r3, #18
    cee8:	b	cf10 <atomuse+0xb8>
    ceec:	and	r3, r3, #248	; 0xf8
    cef0:	cmp	r3, #128	; 0x80
    cef4:	moveq	r3, #17
    cef8:	movne	r3, #16
    cefc:	b	cf10 <atomuse+0xb8>
    cf00:	str	r4, [sp, #-8]!
    cf04:	str	lr, [sp, #4]
    cf08:	bl	ebc <abort@plt>
    cf0c:	mov	r3, #16
    cf10:	mov	r0, r3
    cf14:	bx	lr
    cf18:	mvn	r3, #0
    cf1c:	b	cf10 <atomuse+0xb8>

0000cf20 <deadstmt>:
    cf20:	strd	r4, [sp, #-16]!
    cf24:	str	r6, [sp, #8]
    cf28:	str	lr, [sp, #12]
    cf2c:	mov	r5, r0
    cf30:	mov	r4, r1
    cf34:	bl	ce58 <atomuse>
    cf38:	cmp	r0, #0
    cf3c:	blt	cf54 <deadstmt+0x34>
    cf40:	cmp	r0, #18
    cf44:	mov	r3, #0
    cf48:	streq	r3, [r4, #68]	; 0x44
    cf4c:	streq	r3, [r4, #64]	; 0x40
    cf50:	strne	r3, [r4, r0, lsl #2]
    cf54:	mov	r0, r5
    cf58:	bl	c99c <atomdef>
    cf5c:	cmp	r0, #0
    cf60:	blt	cf8c <deadstmt+0x6c>
    cf64:	ldr	r2, [r4, r0, lsl #2]
    cf68:	cmp	r2, #0
    cf6c:	beq	cf88 <deadstmt+0x68>
    cf70:	ldr	r3, [pc, #36]	; cf9c <deadstmt+0x7c>
    cf74:	add	r3, pc, r3
    cf78:	mov	r1, #0
    cf7c:	str	r1, [r3, #868]	; 0x364
    cf80:	mvn	r3, #0
    cf84:	str	r3, [r2]
    cf88:	str	r5, [r4, r0, lsl #2]
    cf8c:	ldrd	r4, [sp]
    cf90:	ldr	r6, [sp, #8]
    cf94:	add	sp, sp, #12
    cf98:	pop	{pc}		; (ldr pc, [sp], #4)
    cf9c:	.word	0x000247b4

0000cfa0 <fold_op>:
    cfa0:	str	r4, [sp, #-8]!
    cfa4:	str	lr, [sp, #4]
    cfa8:	ldr	r3, [pc, #244]	; d0a4 <fold_op+0x104>
    cfac:	add	r3, pc, r3
    cfb0:	ldr	ip, [pc, #240]	; d0a8 <fold_op+0x108>
    cfb4:	ldr	r3, [r3, ip]
    cfb8:	ldr	r3, [r3]
    cfbc:	add	r1, r3, r1, lsl #3
    cfc0:	ldr	r1, [r1, #4]
    cfc4:	add	r2, r3, r2, lsl #3
    cfc8:	ldr	r2, [r2, #4]
    cfcc:	ldr	r3, [r0]
    cfd0:	and	r3, r3, #240	; 0xf0
    cfd4:	cmp	r3, #64	; 0x40
    cfd8:	beq	d08c <fold_op+0xec>
    cfdc:	bgt	d03c <fold_op+0x9c>
    cfe0:	cmp	r3, #16
    cfe4:	beq	d070 <fold_op+0xd0>
    cfe8:	ble	d00c <fold_op+0x6c>
    cfec:	cmp	r3, #32
    cff0:	beq	d078 <fold_op+0xd8>
    cff4:	cmp	r3, #48	; 0x30
    cff8:	bne	d06c <fold_op+0xcc>
    cffc:	cmp	r2, #0
    d000:	beq	d080 <fold_op+0xe0>
    d004:	udiv	r1, r1, r2
    d008:	b	d018 <fold_op+0x78>
    d00c:	cmp	r3, #0
    d010:	addeq	r1, r1, r2
    d014:	bne	d06c <fold_op+0xcc>
    d018:	str	r1, [r0, #12]
    d01c:	mov	r3, #0
    d020:	str	r3, [r0]
    d024:	ldr	r2, [pc, #128]	; d0ac <fold_op+0x10c>
    d028:	add	r2, pc, r2
    d02c:	str	r3, [r2, #868]	; 0x364
    d030:	ldr	r4, [sp]
    d034:	add	sp, sp, #4
    d038:	pop	{pc}		; (ldr pc, [sp], #4)
    d03c:	cmp	r3, #96	; 0x60
    d040:	beq	d094 <fold_op+0xf4>
    d044:	ble	d060 <fold_op+0xc0>
    d048:	cmp	r3, #112	; 0x70
    d04c:	beq	d09c <fold_op+0xfc>
    d050:	cmp	r3, #128	; 0x80
    d054:	rsbeq	r1, r1, #0
    d058:	beq	d018 <fold_op+0x78>
    d05c:	b	d06c <fold_op+0xcc>
    d060:	cmp	r3, #80	; 0x50
    d064:	andeq	r1, r1, r2
    d068:	beq	d018 <fold_op+0x78>
    d06c:	bl	ebc <abort@plt>
    d070:	sub	r1, r1, r2
    d074:	b	d018 <fold_op+0x78>
    d078:	mul	r1, r2, r1
    d07c:	b	d018 <fold_op+0x78>
    d080:	ldr	r0, [pc, #40]	; d0b0 <fold_op+0x110>
    d084:	add	r0, pc, r0
    d088:	bl	229c <sf_bpf_error>
    d08c:	orr	r1, r1, r2
    d090:	b	d018 <fold_op+0x78>
    d094:	lsl	r1, r1, r2
    d098:	b	d018 <fold_op+0x78>
    d09c:	lsr	r1, r1, r2
    d0a0:	b	d018 <fold_op+0x78>
    d0a4:	.word	0x0002404c
    d0a8:	.word	0x00000100
    d0ac:	.word	0x00024700
    d0b0:	.word	0x000080d8

0000d0b4 <opt_j>:
    d0b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d0b8:	strd	r6, [sp, #8]
    d0bc:	strd	r8, [sp, #16]
    d0c0:	strd	sl, [sp, #24]
    d0c4:	str	lr, [sp, #32]
    d0c8:	sub	sp, sp, #28
    d0cc:	ldr	r5, [pc, #448]	; d294 <opt_j+0x1e0>
    d0d0:	add	r5, pc, r5
    d0d4:	ldr	r3, [r0, #12]
    d0d8:	ldr	r4, [r3, #60]	; 0x3c
    d0dc:	cmp	r4, #0
    d0e0:	beq	d278 <opt_j+0x1c4>
    d0e4:	mov	fp, r0
    d0e8:	ldr	r3, [r3, #84]	; 0x54
    d0ec:	cmp	r4, r3
    d0f0:	beq	d128 <opt_j+0x74>
    d0f4:	ldr	r3, [pc, #412]	; d298 <opt_j+0x1e4>
    d0f8:	add	r3, pc, r3
    d0fc:	ldr	r3, [r3, #4]
    d100:	str	r3, [sp, #16]
    d104:	ldr	r3, [pc, #400]	; d29c <opt_j+0x1e8>
    d108:	ldr	r3, [r5, r3]
    d10c:	ldr	r9, [r3]
    d110:	mov	sl, #1
    d114:	str	sl, [sp, #4]
    d118:	ldr	r3, [pc, #384]	; d2a0 <opt_j+0x1ec>
    d11c:	add	r3, pc, r3
    d120:	str	r3, [sp, #20]
    d124:	b	d214 <opt_j+0x160>
    d128:	mov	r1, r4
    d12c:	ldr	r0, [r0, #16]
    d130:	bl	cb2c <use_conflict>
    d134:	cmp	r0, #0
    d138:	bne	d0f4 <opt_j+0x40>
    d13c:	ldr	r3, [pc, #352]	; d2a4 <opt_j+0x1f0>
    d140:	add	r3, pc, r3
    d144:	mov	r2, #0
    d148:	str	r2, [r3, #868]	; 0x364
    d14c:	str	r4, [fp, #12]
    d150:	b	d0f4 <opt_j+0x40>
    d154:	cmp	r1, #0
    d158:	ldrne	r5, [r6, #60]	; 0x3c
    d15c:	ldreq	r5, [r6, #84]	; 0x54
    d160:	cmp	r5, #0
    d164:	beq	d17c <opt_j+0xc8>
    d168:	mov	r1, r5
    d16c:	ldr	r0, [fp, #16]
    d170:	bl	cb2c <use_conflict>
    d174:	cmp	r0, #0
    d178:	beq	d1f8 <opt_j+0x144>
    d17c:	cmp	r4, #0
    d180:	beq	d238 <opt_j+0x184>
    d184:	mov	r0, r4
    d188:	bl	e98 <ffs@plt>
    d18c:	sub	r0, r0, #1
    d190:	bic	r4, r4, sl, lsl r0
    d194:	add	r0, r0, r8
    d198:	ldr	r2, [r9, r0, lsl #2]
    d19c:	ldr	r3, [r2, #4]
    d1a0:	cmp	r3, #0
    d1a4:	rsblt	r3, r3, #0
    d1a8:	movlt	r1, #0
    d1ac:	ldrge	r1, [sp, #4]
    d1b0:	cmp	r7, r3
    d1b4:	bne	d17c <opt_j+0xc8>
    d1b8:	ldr	r2, [r2, #16]
    d1bc:	ldr	ip, [r6, #200]	; 0xc8
    d1c0:	ldr	r0, [r2, #200]	; 0xc8
    d1c4:	cmp	ip, r0
    d1c8:	bne	d17c <opt_j+0xc8>
    d1cc:	ldr	r0, [r6, #132]	; 0x84
    d1d0:	ldr	r2, [r2, #132]	; 0x84
    d1d4:	cmp	r0, r2
    d1d8:	beq	d154 <opt_j+0xa0>
    d1dc:	cmp	r3, #21
    d1e0:	movne	r3, #0
    d1e4:	andeq	r3, r1, #1
    d1e8:	cmp	r3, #0
    d1ec:	beq	d17c <opt_j+0xc8>
    d1f0:	ldr	r5, [r6, #84]	; 0x54
    d1f4:	b	d160 <opt_j+0xac>
    d1f8:	ldr	r3, [sp, #20]
    d1fc:	mov	r2, #0
    d200:	str	r2, [r3, #868]	; 0x364
    d204:	str	r5, [fp, #12]
    d208:	ldr	r3, [r5, #60]	; 0x3c
    d20c:	cmp	r3, r2
    d210:	beq	d278 <opt_j+0x1c4>
    d214:	ldr	r3, [sp, #16]
    d218:	cmp	r3, #0
    d21c:	ble	d278 <opt_j+0x1c4>
    d220:	ldr	r3, [fp, #8]
    d224:	sub	r3, r3, #4
    d228:	str	r3, [sp, #12]
    d22c:	mov	r3, #0
    d230:	str	r3, [sp, #8]
    d234:	b	d250 <opt_j+0x19c>
    d238:	ldr	r3, [sp, #8]
    d23c:	add	r3, r3, #1
    d240:	str	r3, [sp, #8]
    d244:	ldr	r2, [sp, #16]
    d248:	cmp	r2, r3
    d24c:	beq	d278 <opt_j+0x1c4>
    d250:	ldr	r3, [sp, #12]
    d254:	ldr	r4, [r3, #4]!
    d258:	str	r3, [sp, #12]
    d25c:	cmp	r4, #0
    d260:	beq	d238 <opt_j+0x184>
    d264:	ldr	r3, [sp, #8]
    d268:	lsl	r8, r3, #5
    d26c:	ldr	r6, [fp, #12]
    d270:	ldr	r7, [r6, #8]
    d274:	b	d184 <opt_j+0xd0>
    d278:	add	sp, sp, #28
    d27c:	ldrd	r4, [sp]
    d280:	ldrd	r6, [sp, #8]
    d284:	ldrd	r8, [sp, #16]
    d288:	ldrd	sl, [sp, #24]
    d28c:	add	sp, sp, #32
    d290:	pop	{pc}		; (ldr pc, [sp], #4)
    d294:	.word	0x00023f28
    d298:	.word	0x00024630
    d29c:	.word	0x000000e4
    d2a0:	.word	0x0002460c
    d2a4:	.word	0x000245e8

0000d2a8 <opt_loop>:
    d2a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d2ac:	strd	r6, [sp, #8]
    d2b0:	strd	r8, [sp, #16]
    d2b4:	strd	sl, [sp, #24]
    d2b8:	str	lr, [sp, #32]
    d2bc:	sub	sp, sp, #132	; 0x84
    d2c0:	str	r0, [sp, #12]
    d2c4:	mov	fp, r1
    d2c8:	ldr	sl, [pc, #3816]	; e1b8 <opt_loop+0xf10>
    d2cc:	add	sl, pc, sl
    d2d0:	ldr	r3, [pc, #3812]	; e1bc <opt_loop+0xf14>
    d2d4:	add	r3, pc, r3
    d2d8:	str	r3, [sp, #48]	; 0x30
    d2dc:	mov	r3, #1
    d2e0:	str	r3, [sp, #4]
    d2e4:	ldr	r3, [pc, #3884]	; e218 <opt_loop+0xf70>
    d2e8:	ldr	r3, [sl, r3]
    d2ec:	str	r3, [sp, #52]	; 0x34
    d2f0:	ldr	r3, [pc, #3784]	; e1c0 <opt_loop+0xf18>
    d2f4:	add	r3, pc, r3
    d2f8:	str	r3, [sp, #40]	; 0x28
    d2fc:	mov	r8, sl
    d300:	b	ebb8 <opt_loop+0x1910>
    d304:	ldr	lr, [ip], #4
    d308:	ldr	r7, [r6], #4
    d30c:	and	lr, lr, r7
    d310:	str	lr, [ip, #-4]
    d314:	sub	r0, r0, #1
    d318:	cmn	r0, #1
    d31c:	bne	d304 <opt_loop+0x5c>
    d320:	ldr	r3, [r3, #100]	; 0x64
    d324:	cmp	r3, #0
    d328:	beq	d39c <opt_loop+0xf4>
    d32c:	ldr	r0, [r3]
    d330:	lsr	r6, r0, #5
    d334:	ldr	lr, [r3, #104]	; 0x68
    d338:	and	r0, r0, #31
    d33c:	ldr	ip, [lr, r6, lsl #2]
    d340:	mov	r7, #1
    d344:	orr	r0, ip, r7, lsl r0
    d348:	str	r0, [lr, r6, lsl #2]
    d34c:	ldr	r0, [r3, #60]	; 0x3c
    d350:	cmp	r0, #0
    d354:	beq	d320 <opt_loop+0x78>
    d358:	ldr	ip, [r0, #104]	; 0x68
    d35c:	ldr	r6, [r3, #104]	; 0x68
    d360:	cmp	r4, #0
    d364:	blt	d320 <opt_loop+0x78>
    d368:	mov	r0, r4
    d36c:	ldr	lr, [ip], #4
    d370:	ldr	r7, [r6], #4
    d374:	and	lr, lr, r7
    d378:	str	lr, [ip, #-4]
    d37c:	sub	r0, r0, #1
    d380:	cmn	r0, #1
    d384:	bne	d36c <opt_loop+0xc4>
    d388:	ldr	r0, [r3, #84]	; 0x54
    d38c:	ldr	ip, [r0, #104]	; 0x68
    d390:	ldr	r6, [r3, #104]	; 0x68
    d394:	mov	r0, r4
    d398:	b	d304 <opt_loop+0x5c>
    d39c:	sub	r1, r1, #1
    d3a0:	cmn	r1, #1
    d3a4:	beq	d3bc <opt_loop+0x114>
    d3a8:	ldr	r3, [r5]
    d3ac:	ldr	r3, [r3, r1, lsl #2]
    d3b0:	cmp	r3, #0
    d3b4:	bne	d32c <opt_loop+0x84>
    d3b8:	b	d39c <opt_loop+0xf4>
    d3bc:	lsl	r2, r2, #2
    d3c0:	mov	r1, #0
    d3c4:	ldr	r3, [pc, #3576]	; e1c4 <opt_loop+0xf1c>
    d3c8:	add	r3, pc, r3
    d3cc:	ldr	r0, [r3, #880]	; 0x370
    d3d0:	bl	e2c <memset@plt>
    d3d4:	ldr	r3, [sp, #12]
    d3d8:	ldr	r2, [r3, #36]	; 0x24
    d3dc:	cmp	r2, #0
    d3e0:	blt	d6b0 <opt_loop+0x408>
    d3e4:	ldr	r3, [pc, #3628]	; e218 <opt_loop+0xf70>
    d3e8:	ldr	lr, [r8, r3]
    d3ec:	b	d494 <opt_loop+0x1ec>
    d3f0:	ldr	ip, [r0], #4
    d3f4:	ldr	r6, [r5], #4
    d3f8:	orr	ip, ip, r6
    d3fc:	str	ip, [r0, #-4]
    d400:	sub	r1, r1, #1
    d404:	cmn	r1, #1
    d408:	bne	d3f0 <opt_loop+0x148>
    d40c:	ldr	r3, [r3, #100]	; 0x64
    d410:	cmp	r3, #0
    d414:	beq	d488 <opt_loop+0x1e0>
    d418:	ldr	r1, [r3]
    d41c:	lsr	r5, r1, #5
    d420:	ldr	ip, [r3, #108]	; 0x6c
    d424:	and	r1, r1, #31
    d428:	ldr	r0, [ip, r5, lsl #2]
    d42c:	mov	r6, #1
    d430:	orr	r1, r0, r6, lsl r1
    d434:	str	r1, [ip, r5, lsl #2]
    d438:	ldr	r1, [r3, #60]	; 0x3c
    d43c:	cmp	r1, #0
    d440:	beq	d40c <opt_loop+0x164>
    d444:	ldr	r0, [r1, #108]	; 0x6c
    d448:	ldr	r5, [r3, #108]	; 0x6c
    d44c:	cmp	r4, #0
    d450:	blt	d40c <opt_loop+0x164>
    d454:	mov	r1, r4
    d458:	ldr	ip, [r0], #4
    d45c:	ldr	r6, [r5], #4
    d460:	orr	ip, ip, r6
    d464:	str	ip, [r0, #-4]
    d468:	sub	r1, r1, #1
    d46c:	cmn	r1, #1
    d470:	bne	d458 <opt_loop+0x1b0>
    d474:	ldr	r1, [r3, #84]	; 0x54
    d478:	ldr	r0, [r1, #108]	; 0x6c
    d47c:	ldr	r5, [r3, #108]	; 0x6c
    d480:	mov	r1, r4
    d484:	b	d3f0 <opt_loop+0x148>
    d488:	sub	r2, r2, #1
    d48c:	cmn	r2, #1
    d490:	beq	d4a8 <opt_loop+0x200>
    d494:	ldr	r3, [lr]
    d498:	ldr	r3, [r3, r2, lsl #2]
    d49c:	cmp	r3, #0
    d4a0:	bne	d418 <opt_loop+0x170>
    d4a4:	b	d488 <opt_loop+0x1e0>
    d4a8:	ldr	r3, [sp, #12]
    d4ac:	ldr	r2, [r3, #36]	; 0x24
    d4b0:	str	r2, [sp, #16]
    d4b4:	cmp	r2, #0
    d4b8:	blt	d638 <opt_loop+0x390>
    d4bc:	ldr	r3, [pc, #3412]	; e218 <opt_loop+0xf70>
    d4c0:	ldr	r3, [r8, r3]
    d4c4:	ldr	r3, [r3]
    d4c8:	add	r3, r3, r2, lsl #2
    d4cc:	mov	r9, r2
    d4d0:	str	fp, [sp, #20]
    d4d4:	mov	fp, r3
    d4d8:	str	r8, [sp, #24]
    d4dc:	b	d618 <opt_loop+0x370>
    d4e0:	tst	r6, #131072	; 0x20000
    d4e4:	orreq	r4, r4, #131072	; 0x20000
    d4e8:	tst	r6, #65536	; 0x10000
    d4ec:	orreq	r4, r4, #65536	; 0x10000
    d4f0:	b	d504 <opt_loop+0x25c>
    d4f4:	mov	r3, #1
    d4f8:	lsl	r0, r3, r0
    d4fc:	tst	r0, r6
    d500:	orreq	r4, r4, r0
    d504:	ldr	r0, [sp, #8]
    d508:	bl	c99c <atomdef>
    d50c:	cmp	r0, #0
    d510:	blt	d528 <opt_loop+0x280>
    d514:	mov	r3, #1
    d518:	lsl	r0, r3, r0
    d51c:	tst	r0, r4
    d520:	orreq	r7, r7, r0
    d524:	orr	r6, r6, r0
    d528:	ldr	r9, [r9, #16]
    d52c:	cmp	r9, #0
    d530:	beq	d574 <opt_loop+0x2cc>
    d534:	ldr	r3, [r9]
    d538:	cmn	r3, #1
    d53c:	beq	d528 <opt_loop+0x280>
    d540:	str	r9, [sp, #8]
    d544:	mov	r0, r9
    d548:	bl	ce58 <atomuse>
    d54c:	cmp	r0, #0
    d550:	blt	d504 <opt_loop+0x25c>
    d554:	cmp	r0, #18
    d558:	beq	d4e0 <opt_loop+0x238>
    d55c:	cmp	r0, #17
    d560:	ble	d4f4 <opt_loop+0x24c>
    d564:	bl	ebc <abort@plt>
    d568:	mov	r7, #0
    d56c:	mov	r4, r7
    d570:	mov	r6, r7
    d574:	ldr	r3, [r5, #8]
    d578:	and	r3, r3, #7
    d57c:	cmp	r3, #5
    d580:	beq	d5bc <opt_loop+0x314>
    d584:	str	r6, [r5, #116]	; 0x74
    d588:	str	r7, [r5, #120]	; 0x78
    d58c:	str	r4, [r5, #124]	; 0x7c
    d590:	str	r8, [r5, #128]	; 0x80
    d594:	ldr	r5, [r5, #100]	; 0x64
    d598:	cmp	r5, #0
    d59c:	beq	d608 <opt_loop+0x360>
    d5a0:	ldr	r9, [r5, #4]
    d5a4:	cmp	r9, #0
    d5a8:	beq	d568 <opt_loop+0x2c0>
    d5ac:	mov	r7, #0
    d5b0:	mov	r4, r7
    d5b4:	mov	r6, r7
    d5b8:	b	d534 <opt_loop+0x28c>
    d5bc:	add	r0, r5, #8
    d5c0:	bl	ce58 <atomuse>
    d5c4:	cmp	r0, #0
    d5c8:	blt	d584 <opt_loop+0x2dc>
    d5cc:	cmp	r0, #18
    d5d0:	beq	d5f0 <opt_loop+0x348>
    d5d4:	cmp	r0, #17
    d5d8:	bgt	d604 <opt_loop+0x35c>
    d5dc:	mov	r3, #1
    d5e0:	lsl	r0, r3, r0
    d5e4:	tst	r0, r6
    d5e8:	orreq	r4, r4, r0
    d5ec:	b	d584 <opt_loop+0x2dc>
    d5f0:	tst	r6, #131072	; 0x20000
    d5f4:	orreq	r4, r4, #131072	; 0x20000
    d5f8:	tst	r6, #65536	; 0x10000
    d5fc:	orreq	r4, r4, #65536	; 0x10000
    d600:	b	d584 <opt_loop+0x2dc>
    d604:	bl	ebc <abort@plt>
    d608:	mov	r9, sl
    d60c:	sub	r9, r9, #1
    d610:	cmn	r9, #1
    d614:	beq	d630 <opt_loop+0x388>
    d618:	ldr	r5, [fp], #-4
    d61c:	cmp	r5, #0
    d620:	beq	d60c <opt_loop+0x364>
    d624:	mov	r8, #0
    d628:	mov	sl, r9
    d62c:	b	d5a0 <opt_loop+0x2f8>
    d630:	ldr	fp, [sp, #20]
    d634:	ldr	r8, [sp, #24]
    d638:	ldr	r2, [sp, #16]
    d63c:	cmp	r2, #0
    d640:	ble	d6b0 <opt_loop+0x408>
    d644:	ldr	r3, [pc, #3020]	; e218 <opt_loop+0xf70>
    d648:	ldr	r3, [r8, r3]
    d64c:	ldr	r1, [r3]
    d650:	add	r0, r1, r2, lsl #2
    d654:	b	d6a0 <opt_loop+0x3f8>
    d658:	ldr	r2, [r3, #60]	; 0x3c
    d65c:	ldr	ip, [r3, #84]	; 0x54
    d660:	ldr	r2, [r2, #124]	; 0x7c
    d664:	ldr	ip, [ip, #124]	; 0x7c
    d668:	orr	r2, r2, ip
    d66c:	ldr	ip, [r3, #128]	; 0x80
    d670:	orr	r2, r2, ip
    d674:	str	r2, [r3, #128]	; 0x80
    d678:	ldr	ip, [r3, #120]	; 0x78
    d67c:	bic	r2, r2, ip
    d680:	ldr	ip, [r3, #124]	; 0x7c
    d684:	orr	r2, ip, r2
    d688:	str	r2, [r3, #124]	; 0x7c
    d68c:	ldr	r3, [r3, #100]	; 0x64
    d690:	cmp	r3, #0
    d694:	bne	d658 <opt_loop+0x3b0>
    d698:	cmp	r0, r1
    d69c:	beq	d6b0 <opt_loop+0x408>
    d6a0:	ldr	r3, [r1, #4]!
    d6a4:	cmp	r3, #0
    d6a8:	bne	d658 <opt_loop+0x3b0>
    d6ac:	b	d698 <opt_loop+0x3f0>
    d6b0:	ldr	r3, [pc, #2832]	; e1c8 <opt_loop+0xf20>
    d6b4:	add	r3, pc, r3
    d6b8:	ldr	r2, [r3, #884]	; 0x374
    d6bc:	ldr	r4, [r3, #4]
    d6c0:	ldr	r3, [r3, #888]	; 0x378
    d6c4:	mul	r3, r3, r4
    d6c8:	cmp	r3, #0
    d6cc:	ble	d6e4 <opt_loop+0x43c>
    d6d0:	add	r3, r2, r3, lsl #2
    d6d4:	mvn	r1, #0
    d6d8:	str	r1, [r3, #-4]!
    d6dc:	cmp	r3, r2
    d6e0:	bne	d6d8 <opt_loop+0x430>
    d6e4:	lsl	r4, r4, #2
    d6e8:	mov	r2, r4
    d6ec:	mov	r1, #0
    d6f0:	ldr	r5, [sp, #12]
    d6f4:	ldr	r0, [r5, #56]	; 0x38
    d6f8:	bl	e2c <memset@plt>
    d6fc:	mov	r2, r4
    d700:	mov	r1, #0
    d704:	ldr	r0, [r5, #80]	; 0x50
    d708:	bl	e2c <memset@plt>
    d70c:	ldr	r5, [r5, #36]	; 0x24
    d710:	cmp	r5, #0
    d714:	blt	d760 <opt_loop+0x4b8>
    d718:	ldr	r3, [pc, #2808]	; e218 <opt_loop+0xf70>
    d71c:	ldr	r6, [r8, r3]
    d720:	b	d74c <opt_loop+0x4a4>
    d724:	add	r0, r4, #48	; 0x30
    d728:	bl	c8f4 <propedom>
    d72c:	add	r0, r4, #72	; 0x48
    d730:	bl	c8f4 <propedom>
    d734:	ldr	r4, [r4, #100]	; 0x64
    d738:	cmp	r4, #0
    d73c:	bne	d724 <opt_loop+0x47c>
    d740:	sub	r5, r5, #1
    d744:	cmn	r5, #1
    d748:	beq	d760 <opt_loop+0x4b8>
    d74c:	ldr	r3, [r6]
    d750:	ldr	r4, [r3, r5, lsl #2]
    d754:	cmp	r4, #0
    d758:	bne	d724 <opt_loop+0x47c>
    d75c:	b	d740 <opt_loop+0x498>
    d760:	ldr	r4, [pc, #2660]	; e1cc <opt_loop+0xf24>
    d764:	add	r4, pc, r4
    d768:	mov	r5, #0
    d76c:	str	r5, [r4, #860]	; 0x35c
    d770:	ldr	r3, [pc, #2648]	; e1d0 <opt_loop+0xf28>
    d774:	ldr	r3, [r8, r3]
    d778:	ldr	r2, [pc, #2644]	; e1d4 <opt_loop+0xf2c>
    d77c:	ldr	r2, [r8, r2]
    d780:	ldr	r2, [r2]
    d784:	str	r2, [r3]
    d788:	ldr	r2, [r4, #892]	; 0x37c
    d78c:	ldr	r3, [pc, #2700]	; e220 <opt_loop+0xf78>
    d790:	ldr	r3, [r8, r3]
    d794:	lsl	r2, r2, #3
    d798:	mov	r1, r5
    d79c:	ldr	r0, [r3]
    d7a0:	bl	e2c <memset@plt>
    d7a4:	mov	r2, #852	; 0x354
    d7a8:	mov	r1, r5
    d7ac:	add	r0, r4, #8
    d7b0:	bl	e2c <memset@plt>
    d7b4:	ldr	r0, [sp, #12]
    d7b8:	ldr	r3, [r0, #36]	; 0x24
    d7bc:	mov	r4, r3
    d7c0:	str	r3, [sp, #44]	; 0x2c
    d7c4:	bl	cb98 <find_inedges>
    d7c8:	cmp	r4, r5
    d7cc:	blt	eca0 <opt_loop+0x19f8>
    d7d0:	str	r4, [sp, #16]
    d7d4:	ldr	r3, [pc, #2620]	; e218 <opt_loop+0xf70>
    d7d8:	ldr	r3, [r8, r3]
    d7dc:	str	r3, [sp, #28]
    d7e0:	ldr	r3, [pc, #2544]	; e1d8 <opt_loop+0xf30>
    d7e4:	add	r3, pc, r3
    d7e8:	str	r3, [sp, #32]
    d7ec:	ldr	r3, [pc, #2536]	; e1dc <opt_loop+0xf34>
    d7f0:	add	r3, pc, r3
    d7f4:	str	r3, [sp, #36]	; 0x24
    d7f8:	b	e710 <opt_loop+0x1468>
    d7fc:	mov	r2, #72	; 0x48
    d800:	mov	r1, sl
    d804:	add	r0, r4, #136	; 0x88
    d808:	bl	e2c <memset@plt>
    d80c:	ldr	r9, [r4, #200]	; 0xc8
    d810:	ldr	r7, [r4, #204]	; 0xcc
    d814:	ldr	r5, [r4, #4]
    d818:	cmp	r5, #0
    d81c:	beq	edf0 <opt_loop+0x1b48>
    d820:	str	r9, [sp, #20]
    d824:	str	r7, [sp, #24]
    d828:	b	d868 <opt_loop+0x5c0>
    d82c:	mov	r2, sl
    d830:	ldr	r1, [r5, #12]
    d834:	mov	r0, r6
    d838:	bl	ca10 <F>
    d83c:	cmp	fp, #0
    d840:	beq	d858 <opt_loop+0x5b0>
    d844:	ldr	r3, [r4, #200]	; 0xc8
    d848:	cmp	r0, r3
    d84c:	mvneq	r3, #0
    d850:	streq	r3, [r5]
    d854:	beq	d85c <opt_loop+0x5b4>
    d858:	str	r0, [r4, #200]	; 0xc8
    d85c:	ldr	r5, [r5, #16]
    d860:	cmp	r5, #0
    d864:	beq	e0f0 <opt_loop+0xe48>
    d868:	mov	r7, r5
    d86c:	add	r3, r4, #136	; 0x88
    d870:	ldr	r6, [r5]
    d874:	cmp	r6, #177	; 0xb1
    d878:	addls	pc, pc, r6, lsl #2
    d87c:	b	d85c <opt_loop+0x5b4>
    d880:	b	dc10 <opt_loop+0x968>
    d884:	b	dc44 <opt_loop+0x99c>
    d888:	b	e098 <opt_loop+0xdf0>
    d88c:	b	e0c4 <opt_loop+0xe1c>
    d890:	b	dd20 <opt_loop+0xa78>
    d894:	b	d85c <opt_loop+0x5b4>
    d898:	b	d85c <opt_loop+0x5b4>
    d89c:	b	dffc <opt_loop+0xd54>
    d8a0:	b	d85c <opt_loop+0x5b4>
    d8a4:	b	d85c <opt_loop+0x5b4>
    d8a8:	b	d85c <opt_loop+0x5b4>
    d8ac:	b	d85c <opt_loop+0x5b4>
    d8b0:	b	ddf8 <opt_loop+0xb50>
    d8b4:	b	d85c <opt_loop+0x5b4>
    d8b8:	b	d85c <opt_loop+0x5b4>
    d8bc:	b	d85c <opt_loop+0x5b4>
    d8c0:	b	d85c <opt_loop+0x5b4>
    d8c4:	b	d85c <opt_loop+0x5b4>
    d8c8:	b	d85c <opt_loop+0x5b4>
    d8cc:	b	d85c <opt_loop+0x5b4>
    d8d0:	b	dd20 <opt_loop+0xa78>
    d8d4:	b	d85c <opt_loop+0x5b4>
    d8d8:	b	d85c <opt_loop+0x5b4>
    d8dc:	b	d85c <opt_loop+0x5b4>
    d8e0:	b	d85c <opt_loop+0x5b4>
    d8e4:	b	d85c <opt_loop+0x5b4>
    d8e8:	b	d85c <opt_loop+0x5b4>
    d8ec:	b	d85c <opt_loop+0x5b4>
    d8f0:	b	ddf8 <opt_loop+0xb50>
    d8f4:	b	d85c <opt_loop+0x5b4>
    d8f8:	b	d85c <opt_loop+0x5b4>
    d8fc:	b	d85c <opt_loop+0x5b4>
    d900:	b	d82c <opt_loop+0x584>
    d904:	b	d85c <opt_loop+0x5b4>
    d908:	b	d85c <opt_loop+0x5b4>
    d90c:	b	d85c <opt_loop+0x5b4>
    d910:	b	dd20 <opt_loop+0xa78>
    d914:	b	d85c <opt_loop+0x5b4>
    d918:	b	d85c <opt_loop+0x5b4>
    d91c:	b	d85c <opt_loop+0x5b4>
    d920:	b	d82c <opt_loop+0x584>
    d924:	b	d85c <opt_loop+0x5b4>
    d928:	b	d85c <opt_loop+0x5b4>
    d92c:	b	d85c <opt_loop+0x5b4>
    d930:	b	ddf8 <opt_loop+0xb50>
    d934:	b	d85c <opt_loop+0x5b4>
    d938:	b	d85c <opt_loop+0x5b4>
    d93c:	b	d85c <opt_loop+0x5b4>
    d940:	b	d82c <opt_loop+0x584>
    d944:	b	d85c <opt_loop+0x5b4>
    d948:	b	d85c <opt_loop+0x5b4>
    d94c:	b	d85c <opt_loop+0x5b4>
    d950:	b	dd20 <opt_loop+0xa78>
    d954:	b	d85c <opt_loop+0x5b4>
    d958:	b	d85c <opt_loop+0x5b4>
    d95c:	b	d85c <opt_loop+0x5b4>
    d960:	b	d85c <opt_loop+0x5b4>
    d964:	b	d85c <opt_loop+0x5b4>
    d968:	b	d85c <opt_loop+0x5b4>
    d96c:	b	d85c <opt_loop+0x5b4>
    d970:	b	ddf8 <opt_loop+0xb50>
    d974:	b	d85c <opt_loop+0x5b4>
    d978:	b	d85c <opt_loop+0x5b4>
    d97c:	b	d85c <opt_loop+0x5b4>
    d980:	b	db48 <opt_loop+0x8a0>
    d984:	b	d85c <opt_loop+0x5b4>
    d988:	b	d85c <opt_loop+0x5b4>
    d98c:	b	d85c <opt_loop+0x5b4>
    d990:	b	dd20 <opt_loop+0xa78>
    d994:	b	d85c <opt_loop+0x5b4>
    d998:	b	d85c <opt_loop+0x5b4>
    d99c:	b	d85c <opt_loop+0x5b4>
    d9a0:	b	db48 <opt_loop+0x8a0>
    d9a4:	b	d85c <opt_loop+0x5b4>
    d9a8:	b	d85c <opt_loop+0x5b4>
    d9ac:	b	d85c <opt_loop+0x5b4>
    d9b0:	b	ddf8 <opt_loop+0xb50>
    d9b4:	b	d85c <opt_loop+0x5b4>
    d9b8:	b	d85c <opt_loop+0x5b4>
    d9bc:	b	d85c <opt_loop+0x5b4>
    d9c0:	b	db48 <opt_loop+0x8a0>
    d9c4:	b	d85c <opt_loop+0x5b4>
    d9c8:	b	d85c <opt_loop+0x5b4>
    d9cc:	b	d85c <opt_loop+0x5b4>
    d9d0:	b	dd20 <opt_loop+0xa78>
    d9d4:	b	d85c <opt_loop+0x5b4>
    d9d8:	b	d85c <opt_loop+0x5b4>
    d9dc:	b	d85c <opt_loop+0x5b4>
    d9e0:	b	d85c <opt_loop+0x5b4>
    d9e4:	b	d85c <opt_loop+0x5b4>
    d9e8:	b	d85c <opt_loop+0x5b4>
    d9ec:	b	d85c <opt_loop+0x5b4>
    d9f0:	b	ddf8 <opt_loop+0xb50>
    d9f4:	b	d85c <opt_loop+0x5b4>
    d9f8:	b	d85c <opt_loop+0x5b4>
    d9fc:	b	d85c <opt_loop+0x5b4>
    da00:	b	df8c <opt_loop+0xce4>
    da04:	b	e024 <opt_loop+0xd7c>
    da08:	b	d85c <opt_loop+0x5b4>
    da0c:	b	d85c <opt_loop+0x5b4>
    da10:	b	dd20 <opt_loop+0xa78>
    da14:	b	d85c <opt_loop+0x5b4>
    da18:	b	d85c <opt_loop+0x5b4>
    da1c:	b	d85c <opt_loop+0x5b4>
    da20:	b	d85c <opt_loop+0x5b4>
    da24:	b	d85c <opt_loop+0x5b4>
    da28:	b	d85c <opt_loop+0x5b4>
    da2c:	b	d85c <opt_loop+0x5b4>
    da30:	b	ddf8 <opt_loop+0xb50>
    da34:	b	d85c <opt_loop+0x5b4>
    da38:	b	d85c <opt_loop+0x5b4>
    da3c:	b	d85c <opt_loop+0x5b4>
    da40:	b	d85c <opt_loop+0x5b4>
    da44:	b	d85c <opt_loop+0x5b4>
    da48:	b	d85c <opt_loop+0x5b4>
    da4c:	b	d85c <opt_loop+0x5b4>
    da50:	b	dd20 <opt_loop+0xa78>
    da54:	b	d85c <opt_loop+0x5b4>
    da58:	b	d85c <opt_loop+0x5b4>
    da5c:	b	d85c <opt_loop+0x5b4>
    da60:	b	d85c <opt_loop+0x5b4>
    da64:	b	d85c <opt_loop+0x5b4>
    da68:	b	d85c <opt_loop+0x5b4>
    da6c:	b	d85c <opt_loop+0x5b4>
    da70:	b	ddf8 <opt_loop+0xb50>
    da74:	b	d85c <opt_loop+0x5b4>
    da78:	b	d85c <opt_loop+0x5b4>
    da7c:	b	d85c <opt_loop+0x5b4>
    da80:	b	dbdc <opt_loop+0x934>
    da84:	b	d85c <opt_loop+0x5b4>
    da88:	b	d85c <opt_loop+0x5b4>
    da8c:	b	d85c <opt_loop+0x5b4>
    da90:	b	dcac <opt_loop+0xa04>
    da94:	b	d85c <opt_loop+0x5b4>
    da98:	b	d85c <opt_loop+0x5b4>
    da9c:	b	df64 <opt_loop+0xcbc>
    daa0:	b	d85c <opt_loop+0x5b4>
    daa4:	b	d85c <opt_loop+0x5b4>
    daa8:	b	d85c <opt_loop+0x5b4>
    daac:	b	d85c <opt_loop+0x5b4>
    dab0:	b	d85c <opt_loop+0x5b4>
    dab4:	b	d85c <opt_loop+0x5b4>
    dab8:	b	d85c <opt_loop+0x5b4>
    dabc:	b	d85c <opt_loop+0x5b4>
    dac0:	b	d85c <opt_loop+0x5b4>
    dac4:	b	d85c <opt_loop+0x5b4>
    dac8:	b	d85c <opt_loop+0x5b4>
    dacc:	b	d85c <opt_loop+0x5b4>
    dad0:	b	d85c <opt_loop+0x5b4>
    dad4:	b	d85c <opt_loop+0x5b4>
    dad8:	b	d85c <opt_loop+0x5b4>
    dadc:	b	d85c <opt_loop+0x5b4>
    dae0:	b	d85c <opt_loop+0x5b4>
    dae4:	b	d85c <opt_loop+0x5b4>
    dae8:	b	d85c <opt_loop+0x5b4>
    daec:	b	d85c <opt_loop+0x5b4>
    daf0:	b	d85c <opt_loop+0x5b4>
    daf4:	b	d85c <opt_loop+0x5b4>
    daf8:	b	d85c <opt_loop+0x5b4>
    dafc:	b	d85c <opt_loop+0x5b4>
    db00:	b	d85c <opt_loop+0x5b4>
    db04:	b	d85c <opt_loop+0x5b4>
    db08:	b	d85c <opt_loop+0x5b4>
    db0c:	b	d85c <opt_loop+0x5b4>
    db10:	b	d85c <opt_loop+0x5b4>
    db14:	b	d85c <opt_loop+0x5b4>
    db18:	b	d85c <opt_loop+0x5b4>
    db1c:	b	d85c <opt_loop+0x5b4>
    db20:	b	d85c <opt_loop+0x5b4>
    db24:	b	d85c <opt_loop+0x5b4>
    db28:	b	d85c <opt_loop+0x5b4>
    db2c:	b	d85c <opt_loop+0x5b4>
    db30:	b	d85c <opt_loop+0x5b4>
    db34:	b	d85c <opt_loop+0x5b4>
    db38:	b	d85c <opt_loop+0x5b4>
    db3c:	b	d85c <opt_loop+0x5b4>
    db40:	b	d85c <opt_loop+0x5b4>
    db44:	b	dc78 <opt_loop+0x9d0>
    db48:	ldr	r2, [r4, #204]	; 0xcc
    db4c:	cmp	fp, #0
    db50:	beq	edfc <opt_loop+0x1b54>
    db54:	lsl	r1, r2, #3
    db58:	ldr	r3, [pc, #1728]	; e220 <opt_loop+0xf78>
    db5c:	ldr	r3, [r8, r3]
    db60:	ldr	r3, [r3]
    db64:	ldr	r3, [r3, r2, lsl #3]
    db68:	cmp	r3, #0
    db6c:	bne	db98 <opt_loop+0x8f0>
    db70:	ldr	r1, [r5, #12]
    db74:	mov	r0, r6
    db78:	bl	ca10 <F>
    db7c:	ldr	r3, [r4, #200]	; 0xc8
    db80:	cmp	r3, r0
    db84:	mvneq	r3, #0
    db88:	streq	r3, [r5]
    db8c:	beq	d85c <opt_loop+0x5b4>
    db90:	str	r0, [r4, #200]	; 0xc8
    db94:	b	d85c <opt_loop+0x5b4>
    db98:	and	r0, r6, #24
    db9c:	orr	r0, r0, #32
    dba0:	str	r0, [r5]
    dba4:	ldr	r3, [pc, #1652]	; e220 <opt_loop+0xf78>
    dba8:	ldr	r3, [r8, r3]
    dbac:	ldr	r3, [r3]
    dbb0:	add	r3, r3, r1
    dbb4:	ldr	r1, [r3, #4]
    dbb8:	ldr	r3, [r5, #12]
    dbbc:	add	r1, r1, r3
    dbc0:	str	r1, [r5, #12]
    dbc4:	mov	r2, sl
    dbc8:	bl	ca10 <F>
    dbcc:	ldr	r3, [pc, #1548]	; e1e0 <opt_loop+0xf38>
    dbd0:	add	r3, pc, r3
    dbd4:	str	sl, [r3, #868]	; 0x364
    dbd8:	b	db7c <opt_loop+0x8d4>
    dbdc:	mov	r2, sl
    dbe0:	mov	r1, sl
    dbe4:	mov	r0, #128	; 0x80
    dbe8:	bl	ca10 <F>
    dbec:	cmp	fp, #0
    dbf0:	beq	dc08 <opt_loop+0x960>
    dbf4:	ldr	r3, [r4, #200]	; 0xc8
    dbf8:	cmp	r0, r3
    dbfc:	mvneq	r3, #0
    dc00:	streq	r3, [r5]
    dc04:	beq	d85c <opt_loop+0x5b4>
    dc08:	str	r0, [r4, #200]	; 0xc8
    dc0c:	b	d85c <opt_loop+0x5b4>
    dc10:	mov	r2, sl
    dc14:	ldr	r1, [r5, #12]
    dc18:	mov	r0, sl
    dc1c:	bl	ca10 <F>
    dc20:	cmp	fp, #0
    dc24:	beq	dc3c <opt_loop+0x994>
    dc28:	ldr	r3, [r4, #200]	; 0xc8
    dc2c:	cmp	r0, r3
    dc30:	mvneq	r3, #0
    dc34:	streq	r3, [r5]
    dc38:	beq	d85c <opt_loop+0x5b4>
    dc3c:	str	r0, [r4, #200]	; 0xc8
    dc40:	b	d85c <opt_loop+0x5b4>
    dc44:	mov	r2, sl
    dc48:	ldr	r1, [r5, #12]
    dc4c:	mov	r0, sl
    dc50:	bl	ca10 <F>
    dc54:	cmp	fp, #0
    dc58:	beq	dc70 <opt_loop+0x9c8>
    dc5c:	ldr	r3, [r4, #204]	; 0xcc
    dc60:	cmp	r0, r3
    dc64:	mvneq	r3, #0
    dc68:	streq	r3, [r5]
    dc6c:	beq	d85c <opt_loop+0x5b4>
    dc70:	str	r0, [r4, #204]	; 0xcc
    dc74:	b	d85c <opt_loop+0x5b4>
    dc78:	mov	r2, sl
    dc7c:	ldr	r1, [r5, #12]
    dc80:	mov	r0, #177	; 0xb1
    dc84:	bl	ca10 <F>
    dc88:	cmp	fp, #0
    dc8c:	beq	dca4 <opt_loop+0x9fc>
    dc90:	ldr	r3, [r4, #204]	; 0xcc
    dc94:	cmp	r0, r3
    dc98:	mvneq	r3, #0
    dc9c:	streq	r3, [r5]
    dca0:	beq	d85c <opt_loop+0x5b4>
    dca4:	str	r0, [r4, #204]	; 0xcc
    dca8:	b	d85c <opt_loop+0x5b4>
    dcac:	cmp	fp, #0
    dcb0:	beq	dcd0 <opt_loop+0xa28>
    dcb4:	ldr	r2, [r4, #200]	; 0xc8
    dcb8:	ldr	r3, [pc, #1376]	; e220 <opt_loop+0xf78>
    dcbc:	ldr	r3, [r8, r3]
    dcc0:	ldr	r3, [r3]
    dcc4:	ldr	r3, [r3, r2, lsl #3]
    dcc8:	cmp	r3, #0
    dccc:	bne	dce8 <opt_loop+0xa40>
    dcd0:	mov	r2, sl
    dcd4:	ldr	r1, [r4, #200]	; 0xc8
    dcd8:	mov	r0, #132	; 0x84
    dcdc:	bl	ca10 <F>
    dce0:	str	r0, [r4, #200]	; 0xc8
    dce4:	b	d85c <opt_loop+0x5b4>
    dce8:	str	sl, [r5]
    dcec:	ldr	r2, [r4, #200]	; 0xc8
    dcf0:	ldr	r3, [pc, #1320]	; e220 <opt_loop+0xf78>
    dcf4:	ldr	r3, [r8, r3]
    dcf8:	ldr	r3, [r3]
    dcfc:	add	r3, r3, r2, lsl #3
    dd00:	ldr	r1, [r3, #4]
    dd04:	rsb	r1, r1, #0
    dd08:	str	r1, [r5, #12]
    dd0c:	ldr	r0, [sp, #8]
    dd10:	mov	r2, r0
    dd14:	bl	ca10 <F>
    dd18:	str	r0, [r4, #200]	; 0xc8
    dd1c:	b	d85c <opt_loop+0x5b4>
    dd20:	cmp	fp, #0
    dd24:	beq	dd7c <opt_loop+0xad4>
    dd28:	ldr	r1, [r5, #12]
    dd2c:	cmp	r1, #0
    dd30:	bne	dd60 <opt_loop+0xab8>
    dd34:	and	r3, r6, #224	; 0xe0
    dd38:	and	r2, r6, #176	; 0xb0
    dd3c:	cmp	r2, #0
    dd40:	cmpne	r3, #96	; 0x60
    dd44:	mvneq	r3, #0
    dd48:	streq	r3, [r5]
    dd4c:	beq	d85c <opt_loop+0x5b4>
    dd50:	and	r3, r6, #240	; 0xf0
    dd54:	cmp	r3, #80	; 0x50
    dd58:	cmpne	r3, #32
    dd5c:	beq	dda8 <opt_loop+0xb00>
    dd60:	ldr	r9, [r4, #200]	; 0xc8
    dd64:	ldr	r3, [pc, #1204]	; e220 <opt_loop+0xf78>
    dd68:	ldr	r3, [r8, r3]
    dd6c:	ldr	r3, [r3]
    dd70:	ldr	r3, [r3, r9, lsl #3]
    dd74:	cmp	r3, #0
    dd78:	bne	ddc4 <opt_loop+0xb1c>
    dd7c:	ldr	r7, [r4, #200]	; 0xc8
    dd80:	mov	r2, sl
    dd84:	ldr	r1, [r5, #12]
    dd88:	mov	r0, sl
    dd8c:	bl	ca10 <F>
    dd90:	mov	r2, r0
    dd94:	mov	r1, r7
    dd98:	mov	r0, r6
    dd9c:	bl	ca10 <F>
    dda0:	str	r0, [r4, #200]	; 0xc8
    dda4:	b	d85c <opt_loop+0x5b4>
    dda8:	str	sl, [r5]
    ddac:	ldr	r0, [sp, #8]
    ddb0:	mov	r2, r0
    ddb4:	mov	r1, r0
    ddb8:	bl	ca10 <F>
    ddbc:	str	r0, [r4, #200]	; 0xc8
    ddc0:	b	d85c <opt_loop+0x5b4>
    ddc4:	mov	r2, sl
    ddc8:	mov	r0, sl
    ddcc:	bl	ca10 <F>
    ddd0:	mov	r2, r0
    ddd4:	mov	r1, r9
    ddd8:	mov	r0, r7
    dddc:	bl	cfa0 <fold_op>
    dde0:	mov	r2, sl
    dde4:	ldr	r1, [r5, #12]
    dde8:	mov	r0, sl
    ddec:	bl	ca10 <F>
    ddf0:	str	r0, [r4, #200]	; 0xc8
    ddf4:	b	d85c <opt_loop+0x5b4>
    ddf8:	cmp	fp, #0
    ddfc:	beq	df4c <opt_loop+0xca4>
    de00:	and	r0, r6, #240	; 0xf0
    de04:	ldr	r3, [pc, #1044]	; e220 <opt_loop+0xf78>
    de08:	ldr	r3, [r8, r3]
    de0c:	ldr	r3, [r3]
    de10:	ldr	r2, [r4, #204]	; 0xcc
    de14:	ldr	r1, [r3, r2, lsl #3]
    de18:	cmp	r1, #0
    de1c:	beq	dea4 <opt_loop+0xbfc>
    de20:	ldr	r1, [r4, #200]	; 0xc8
    de24:	ldr	r3, [r3, r1, lsl #3]
    de28:	cmp	r3, #0
    de2c:	beq	de50 <opt_loop+0xba8>
    de30:	mov	r0, r5
    de34:	bl	cfa0 <fold_op>
    de38:	mov	r2, sl
    de3c:	ldr	r1, [r5, #12]
    de40:	mov	r0, sl
    de44:	bl	ca10 <F>
    de48:	str	r0, [r4, #200]	; 0xc8
    de4c:	b	d85c <opt_loop+0x5b4>
    de50:	orr	r6, r0, #4
    de54:	str	r6, [r5]
    de58:	ldr	r2, [r4, #204]	; 0xcc
    de5c:	ldr	r3, [pc, #956]	; e220 <opt_loop+0xf78>
    de60:	ldr	r3, [r8, r3]
    de64:	ldr	r3, [r3]
    de68:	add	r3, r3, r2, lsl #3
    de6c:	ldr	r1, [r3, #4]
    de70:	str	r1, [r5, #12]
    de74:	ldr	r3, [sp, #36]	; 0x24
    de78:	str	sl, [r3, #868]	; 0x364
    de7c:	ldr	r7, [r4, #200]	; 0xc8
    de80:	ldr	r0, [sp, #8]
    de84:	mov	r2, r0
    de88:	bl	ca10 <F>
    de8c:	mov	r2, r0
    de90:	mov	r1, r7
    de94:	mov	r0, r6
    de98:	bl	ca10 <F>
    de9c:	str	r0, [r4, #200]	; 0xc8
    dea0:	b	d85c <opt_loop+0x5b4>
    dea4:	ldr	r2, [r4, #200]	; 0xc8
    dea8:	add	r1, r3, r2, lsl #3
    deac:	ldr	r3, [r3, r2, lsl #3]
    deb0:	cmp	r3, #0
    deb4:	beq	df4c <opt_loop+0xca4>
    deb8:	ldr	r3, [r1, #4]
    debc:	cmp	r3, #0
    dec0:	bne	df4c <opt_loop+0xca4>
    dec4:	tst	r6, #176	; 0xb0
    dec8:	bne	def0 <opt_loop+0xc48>
    decc:	mov	r3, #135	; 0x87
    ded0:	str	r3, [r5]
    ded4:	ldr	r3, [r4, #204]	; 0xcc
    ded8:	ldr	r2, [r4, #200]	; 0xc8
    dedc:	cmp	r3, r2
    dee0:	mvneq	r3, #0
    dee4:	streq	r3, [r5]
    dee8:	strne	r3, [r4, #200]	; 0xc8
    deec:	b	d85c <opt_loop+0x5b4>
    def0:	and	r3, r6, #224	; 0xe0
    def4:	cmp	r3, #32
    def8:	beq	df0c <opt_loop+0xc64>
    defc:	and	r3, r6, #208	; 0xd0
    df00:	cmp	r0, #96	; 0x60
    df04:	cmpne	r3, #80	; 0x50
    df08:	bne	df3c <opt_loop+0xc94>
    df0c:	str	sl, [r5]
    df10:	str	sl, [r5, #12]
    df14:	ldr	r0, [sp, #8]
    df18:	mov	r2, r0
    df1c:	mov	r1, r0
    df20:	bl	ca10 <F>
    df24:	ldr	r3, [r4, #200]	; 0xc8
    df28:	cmp	r0, r3
    df2c:	mvneq	r3, #0
    df30:	streq	r3, [r5]
    df34:	strne	r0, [r4, #200]	; 0xc8
    df38:	b	d85c <opt_loop+0x5b4>
    df3c:	cmp	r0, #128	; 0x80
    df40:	mvneq	r3, #0
    df44:	streq	r3, [r5]
    df48:	beq	d85c <opt_loop+0x5b4>
    df4c:	ldr	r2, [r4, #204]	; 0xcc
    df50:	ldr	r1, [r4, #200]	; 0xc8
    df54:	mov	r0, r6
    df58:	bl	ca10 <F>
    df5c:	str	r0, [r4, #200]	; 0xc8
    df60:	b	d85c <opt_loop+0x5b4>
    df64:	ldr	r3, [r4, #204]	; 0xcc
    df68:	cmp	fp, #0
    df6c:	beq	df84 <opt_loop+0xcdc>
    df70:	ldr	r2, [r4, #200]	; 0xc8
    df74:	cmp	r3, r2
    df78:	mvneq	r3, #0
    df7c:	streq	r3, [r5]
    df80:	beq	d85c <opt_loop+0x5b4>
    df84:	str	r3, [r4, #200]	; 0xc8
    df88:	b	d85c <opt_loop+0x5b4>
    df8c:	ldr	r2, [r5, #12]
    df90:	ldr	r3, [r3, r2, lsl #2]
    df94:	cmp	fp, #0
    df98:	beq	dfe8 <opt_loop+0xd40>
    df9c:	lsl	r1, r3, #3
    dfa0:	ldr	r2, [pc, #632]	; e220 <opt_loop+0xf78>
    dfa4:	ldr	r2, [r8, r2]
    dfa8:	ldr	r2, [r2]
    dfac:	ldr	r2, [r2, r3, lsl #3]
    dfb0:	cmp	r2, #0
    dfb4:	beq	dfdc <opt_loop+0xd34>
    dfb8:	str	sl, [r5]
    dfbc:	ldr	r2, [pc, #604]	; e220 <opt_loop+0xf78>
    dfc0:	ldr	r2, [r8, r2]
    dfc4:	ldr	r2, [r2]
    dfc8:	add	r2, r2, r1
    dfcc:	ldr	r2, [r2, #4]
    dfd0:	str	r2, [r5, #12]
    dfd4:	ldr	r2, [sp, #32]
    dfd8:	str	sl, [r2, #868]	; 0x364
    dfdc:	ldr	r2, [r4, #200]	; 0xc8
    dfe0:	cmp	r3, r2
    dfe4:	beq	dff0 <opt_loop+0xd48>
    dfe8:	str	r3, [r4, #200]	; 0xc8
    dfec:	b	d85c <opt_loop+0x5b4>
    dff0:	mvn	r3, #0
    dff4:	str	r3, [r5]
    dff8:	b	d85c <opt_loop+0x5b4>
    dffc:	ldr	r3, [r4, #200]	; 0xc8
    e000:	cmp	fp, #0
    e004:	beq	e01c <opt_loop+0xd74>
    e008:	ldr	r2, [r4, #204]	; 0xcc
    e00c:	cmp	r3, r2
    e010:	mvneq	r3, #0
    e014:	streq	r3, [r5]
    e018:	beq	d85c <opt_loop+0x5b4>
    e01c:	str	r3, [r4, #204]	; 0xcc
    e020:	b	d85c <opt_loop+0x5b4>
    e024:	ldr	r2, [r5, #12]
    e028:	ldr	r3, [r3, r2, lsl #2]
    e02c:	cmp	fp, #0
    e030:	beq	e084 <opt_loop+0xddc>
    e034:	lsl	r1, r3, #3
    e038:	ldr	r2, [pc, #480]	; e220 <opt_loop+0xf78>
    e03c:	ldr	r2, [r8, r2]
    e040:	ldr	r2, [r2]
    e044:	ldr	r2, [r2, r3, lsl #3]
    e048:	cmp	r2, #0
    e04c:	beq	e078 <opt_loop+0xdd0>
    e050:	mov	r2, #1
    e054:	str	r2, [r5]
    e058:	ldr	r2, [pc, #448]	; e220 <opt_loop+0xf78>
    e05c:	ldr	r2, [r8, r2]
    e060:	ldr	r2, [r2]
    e064:	add	r2, r2, r1
    e068:	ldr	r2, [r2, #4]
    e06c:	str	r2, [r5, #12]
    e070:	ldr	r2, [sp, #40]	; 0x28
    e074:	str	sl, [r2, #868]	; 0x364
    e078:	ldr	r2, [r4, #204]	; 0xcc
    e07c:	cmp	r3, r2
    e080:	beq	e08c <opt_loop+0xde4>
    e084:	str	r3, [r4, #204]	; 0xcc
    e088:	b	d85c <opt_loop+0x5b4>
    e08c:	mvn	r3, #0
    e090:	str	r3, [r5]
    e094:	b	d85c <opt_loop+0x5b4>
    e098:	ldr	r2, [r5, #12]
    e09c:	ldr	r1, [r4, #200]	; 0xc8
    e0a0:	cmp	fp, #0
    e0a4:	beq	e0bc <opt_loop+0xe14>
    e0a8:	ldr	r0, [r3, r2, lsl #2]
    e0ac:	cmp	r1, r0
    e0b0:	mvneq	r3, #0
    e0b4:	streq	r3, [r5]
    e0b8:	beq	d85c <opt_loop+0x5b4>
    e0bc:	str	r1, [r3, r2, lsl #2]
    e0c0:	b	d85c <opt_loop+0x5b4>
    e0c4:	ldr	r2, [r5, #12]
    e0c8:	ldr	r1, [r4, #204]	; 0xcc
    e0cc:	cmp	fp, #0
    e0d0:	beq	e0e8 <opt_loop+0xe40>
    e0d4:	ldr	r0, [r3, r2, lsl #2]
    e0d8:	cmp	r1, r0
    e0dc:	mvneq	r3, #0
    e0e0:	streq	r3, [r5]
    e0e4:	beq	d85c <opt_loop+0x5b4>
    e0e8:	str	r1, [r3, r2, lsl #2]
    e0ec:	b	d85c <opt_loop+0x5b4>
    e0f0:	ldr	r9, [sp, #20]
    e0f4:	ldr	r7, [sp, #24]
    e0f8:	cmp	fp, #0
    e0fc:	beq	e12c <opt_loop+0xe84>
    e100:	ldr	r2, [r4, #128]	; 0x80
    e104:	adds	r3, r9, #0
    e108:	movne	r3, #1
    e10c:	cmp	r2, #0
    e110:	movne	r3, #0
    e114:	cmp	r3, #0
    e118:	bne	e154 <opt_loop+0xeac>
    e11c:	ldr	r3, [r4, #8]
    e120:	and	r3, r3, #7
    e124:	cmp	r3, #6
    e128:	beq	e180 <opt_loop+0xed8>
    e12c:	ldr	r1, [r4, #4]
    e130:	cmp	r1, #0
    e134:	beq	ed6c <opt_loop+0x1ac4>
    e138:	ldr	r3, [pc, #164]	; e1e4 <opt_loop+0xf3c>
    e13c:	add	r3, pc, r3
    e140:	ldr	lr, [r3, #868]	; 0x364
    e144:	mov	r5, sl
    e148:	mvn	r6, #0
    e14c:	mov	r9, #135	; 0x87
    e150:	b	e23c <opt_loop+0xf94>
    e154:	ldr	r2, [r4, #200]	; 0xc8
    e158:	cmp	r2, r9
    e15c:	movne	r3, #0
    e160:	moveq	r3, #1
    e164:	cmp	r7, #0
    e168:	moveq	r3, #0
    e16c:	cmp	r3, #0
    e170:	beq	e11c <opt_loop+0xe74>
    e174:	ldr	r3, [r4, #204]	; 0xcc
    e178:	cmp	r7, r3
    e17c:	bne	e11c <opt_loop+0xe74>
    e180:	ldr	r3, [r4, #4]
    e184:	cmp	r3, #0
    e188:	beq	e658 <opt_loop+0x13b0>
    e18c:	str	sl, [r4, #4]
    e190:	ldr	r3, [pc, #80]	; e1e8 <opt_loop+0xf40>
    e194:	add	r3, pc, r3
    e198:	str	sl, [r3, #868]	; 0x364
    e19c:	b	e658 <opt_loop+0x13b0>
    e1a0:	cmp	r5, #0
    e1a4:	beq	ed08 <opt_loop+0x1a60>
    e1a8:	ldr	r3, [pc, #60]	; e1ec <opt_loop+0xf44>
    e1ac:	add	r3, pc, r3
    e1b0:	str	lr, [r3, #868]	; 0x364
    e1b4:	b	ed08 <opt_loop+0x1a60>
    e1b8:	.word	0x00023d2c
    e1bc:	.word	0x00024454
    e1c0:	.word	0x00024434
    e1c4:	.word	0x00024360
    e1c8:	.word	0x00024074
    e1cc:	.word	0x00023fc4
    e1d0:	.word	0x000000ec
    e1d4:	.word	0x000000f4
    e1d8:	.word	0x00023f44
    e1dc:	.word	0x00023f38
    e1e0:	.word	0x00023b58
    e1e4:	.word	0x000235ec
    e1e8:	.word	0x00023594
    e1ec:	.word	0x0002357c
    e1f0:	.word	0x00023310
    e1f4:	.word	0x00023298
    e1f8:	.word	0x0002326c
    e1fc:	.word	0x00023244
    e200:	.word	0x00023210
    e204:	.word	0x00023160
    e208:	.word	0x000230d8
    e20c:	.word	0x00022b90
    e210:	.word	0x00022b80
    e214:	.word	0x00022ac0
    e218:	.word	0x000000c4
    e21c:	.word	0x00022a2c
    e220:	.word	0x00000100
    e224:	.word	0x00022974
    e228:	.word	0x0002294c
    e22c:	ldr	r1, [r3]
    e230:	cmp	r1, #97	; 0x61
    e234:	beq	e380 <opt_loop+0x10d8>
    e238:	mov	r1, r3
    e23c:	ldr	r3, [r1]
    e240:	cmn	r3, #1
    e244:	bne	ede8 <opt_loop+0x1b40>
    e248:	mov	r2, r1
    e24c:	ldr	r2, [r2, #16]
    e250:	cmp	r2, #0
    e254:	beq	edd0 <opt_loop+0x1b28>
    e258:	ldr	r3, [r2]
    e25c:	cmn	r3, #1
    e260:	beq	e24c <opt_loop+0xfa4>
    e264:	ldr	r3, [r2, #16]
    e268:	cmp	r3, #0
    e26c:	beq	e40c <opt_loop+0x1164>
    e270:	ldr	r0, [r3]
    e274:	cmn	r0, #1
    e278:	bne	e294 <opt_loop+0xfec>
    e27c:	ldr	r3, [r3, #16]
    e280:	cmp	r3, #0
    e284:	beq	e1a0 <opt_loop+0xef8>
    e288:	ldr	r0, [r3]
    e28c:	cmn	r0, #1
    e290:	beq	e27c <opt_loop+0xfd4>
    e294:	ldr	r1, [r2]
    e298:	cmp	r1, #2
    e29c:	beq	e22c <opt_loop+0xf84>
    e2a0:	cmp	r1, #0
    e2a4:	bne	ece8 <opt_loop+0x1a40>
    e2a8:	ldr	r1, [r3]
    e2ac:	cmp	r1, #7
    e2b0:	beq	e3a4 <opt_loop+0x10fc>
    e2b4:	ldr	r1, [r4, #128]	; 0x80
    e2b8:	tst	r1, #131072	; 0x20000
    e2bc:	bne	e238 <opt_loop+0xf90>
    e2c0:	ldr	r1, [r3]
    e2c4:	cmp	r1, #177	; 0xb1
    e2c8:	movne	r1, r3
    e2cc:	beq	e3d8 <opt_loop+0x1130>
    e2d0:	ldr	r0, [r1]
    e2d4:	cmp	r0, #12
    e2d8:	bne	e238 <opt_loop+0xf90>
    e2dc:	ldr	r0, [r1, #16]
    e2e0:	cmp	r0, #0
    e2e4:	beq	e238 <opt_loop+0xf90>
    e2e8:	ldr	ip, [r0]
    e2ec:	cmn	ip, #1
    e2f0:	bne	e30c <opt_loop+0x1064>
    e2f4:	ldr	r0, [r0, #16]
    e2f8:	cmp	r0, #0
    e2fc:	beq	e238 <opt_loop+0xf90>
    e300:	ldr	ip, [r0]
    e304:	cmn	ip, #1
    e308:	beq	e2f4 <opt_loop+0x104c>
    e30c:	ldr	ip, [r0]
    e310:	cmp	ip, #7
    e314:	bne	e238 <opt_loop+0xf90>
    e318:	ldr	ip, [r0, #16]
    e31c:	cmp	ip, #0
    e320:	beq	e238 <opt_loop+0xf90>
    e324:	ldr	r7, [ip]
    e328:	cmn	r7, #1
    e32c:	bne	e348 <opt_loop+0x10a0>
    e330:	ldr	ip, [ip, #16]
    e334:	cmp	ip, #0
    e338:	beq	e238 <opt_loop+0xf90>
    e33c:	ldr	r7, [ip]
    e340:	cmn	r7, #1
    e344:	beq	e330 <opt_loop+0x1088>
    e348:	ldr	r7, [ip]
    e34c:	and	r7, r7, #231	; 0xe7
    e350:	cmp	r7, #64	; 0x40
    e354:	bne	e238 <opt_loop+0xf90>
    e358:	ldr	lr, [ip, #12]
    e35c:	ldr	r5, [r2, #12]
    e360:	add	lr, lr, r5
    e364:	str	lr, [ip, #12]
    e368:	str	r6, [r2]
    e36c:	str	r6, [r1]
    e370:	str	r6, [r0]
    e374:	ldr	r5, [sp, #4]
    e378:	ldr	lr, [sp, #8]
    e37c:	b	e238 <opt_loop+0xf90>
    e380:	ldr	r0, [r2, #12]
    e384:	ldr	r1, [r3, #12]
    e388:	cmp	r0, r1
    e38c:	bne	e238 <opt_loop+0xf90>
    e390:	mov	r1, #7
    e394:	str	r1, [r3]
    e398:	ldr	r1, [r2]
    e39c:	cmp	r1, #0
    e3a0:	bne	e3cc <opt_loop+0x1124>
    e3a4:	mov	r1, #1
    e3a8:	str	r1, [r2]
    e3ac:	str	r9, [r3]
    e3b0:	ldr	lr, [r2]
    e3b4:	cmp	lr, #0
    e3b8:	ldrne	r5, [sp, #4]
    e3bc:	ldrne	lr, [sp, #8]
    e3c0:	bne	e238 <opt_loop+0xf90>
    e3c4:	ldr	r5, [sp, #4]
    e3c8:	b	e2b4 <opt_loop+0x100c>
    e3cc:	ldr	r5, [sp, #4]
    e3d0:	ldr	lr, [sp, #8]
    e3d4:	b	e238 <opt_loop+0xf90>
    e3d8:	ldr	r1, [r3, #16]
    e3dc:	cmp	r1, #0
    e3e0:	beq	e238 <opt_loop+0xf90>
    e3e4:	ldr	r0, [r1]
    e3e8:	cmn	r0, #1
    e3ec:	bne	e2d0 <opt_loop+0x1028>
    e3f0:	ldr	r1, [r1, #16]
    e3f4:	cmp	r1, #0
    e3f8:	beq	e238 <opt_loop+0xf90>
    e3fc:	ldr	r0, [r1]
    e400:	cmn	r0, #1
    e404:	beq	e3f0 <opt_loop+0x1148>
    e408:	b	e2d0 <opt_loop+0x1028>
    e40c:	cmp	r5, #0
    e410:	beq	ed08 <opt_loop+0x1a60>
    e414:	ldr	r3, [pc, #-556]	; e1f0 <opt_loop+0xf48>
    e418:	add	r3, pc, r3
    e41c:	str	lr, [r3, #868]	; 0x364
    e420:	b	ed08 <opt_loop+0x1a60>
    e424:	ldr	r3, [r4, #128]	; 0x80
    e428:	tst	r3, #65536	; 0x10000
    e42c:	bne	e44c <opt_loop+0x11a4>
    e430:	ldr	r3, [r1]
    e434:	cmp	r3, #28
    e438:	beq	e454 <opt_loop+0x11ac>
    e43c:	cmp	r3, #20
    e440:	beq	e4c8 <opt_loop+0x1220>
    e444:	cmp	r3, #84	; 0x54
    e448:	beq	e4f0 <opt_loop+0x1248>
    e44c:	ldr	r2, [r4, #8]
    e450:	b	ed20 <opt_loop+0x1a78>
    e454:	ldr	r3, [pc, #-572]	; e220 <opt_loop+0xf78>
    e458:	ldr	r3, [r8, r3]
    e45c:	ldr	r2, [r4, #204]	; 0xcc
    e460:	ldr	r3, [r3]
    e464:	add	r0, r3, r2, lsl #3
    e468:	ldr	r3, [r3, r2, lsl #3]
    e46c:	cmp	r3, #0
    e470:	beq	e49c <opt_loop+0x11f4>
    e474:	ldr	r3, [r4, #20]
    e478:	ldr	r2, [r0, #4]
    e47c:	add	r3, r3, r2
    e480:	str	r3, [r4, #20]
    e484:	mvn	r3, #0
    e488:	str	r3, [r1]
    e48c:	ldr	r3, [pc, #-672]	; e1f4 <opt_loop+0xf4c>
    e490:	add	r3, pc, r3
    e494:	str	sl, [r3, #868]	; 0x364
    e498:	b	ed14 <opt_loop+0x1a6c>
    e49c:	ldr	r3, [r4, #20]
    e4a0:	cmp	r3, #0
    e4a4:	bne	e44c <opt_loop+0x11a4>
    e4a8:	mvn	r3, #0
    e4ac:	str	r3, [r1]
    e4b0:	mov	r3, #29
    e4b4:	str	r3, [r4, #8]
    e4b8:	ldr	r3, [pc, #-712]	; e1f8 <opt_loop+0xf50>
    e4bc:	add	r3, pc, r3
    e4c0:	str	sl, [r3, #868]	; 0x364
    e4c4:	b	e44c <opt_loop+0x11a4>
    e4c8:	mvn	r3, #0
    e4cc:	str	r3, [r1]
    e4d0:	ldr	r3, [r4, #20]
    e4d4:	ldr	r2, [r1, #12]
    e4d8:	add	r3, r3, r2
    e4dc:	str	r3, [r4, #20]
    e4e0:	ldr	r3, [pc, #-748]	; e1fc <opt_loop+0xf54>
    e4e4:	add	r3, pc, r3
    e4e8:	str	sl, [r3, #868]	; 0x364
    e4ec:	b	ed14 <opt_loop+0x1a6c>
    e4f0:	ldr	r3, [r4, #20]
    e4f4:	cmp	r3, #0
    e4f8:	bne	e44c <opt_loop+0x11a4>
    e4fc:	ldr	r3, [r1, #12]
    e500:	str	r3, [r4, #20]
    e504:	mov	r3, #69	; 0x45
    e508:	str	r3, [r4, #8]
    e50c:	mvn	r3, #0
    e510:	str	r3, [r1]
    e514:	ldr	r3, [pc, #-796]	; e200 <opt_loop+0xf58>
    e518:	add	r3, pc, r3
    e51c:	str	sl, [r3, #868]	; 0x364
    e520:	ldr	r3, [r4, #60]	; 0x3c
    e524:	ldr	r2, [r4, #84]	; 0x54
    e528:	str	r2, [r4, #60]	; 0x3c
    e52c:	str	r3, [r4, #84]	; 0x54
    e530:	b	ed14 <opt_loop+0x1a6c>
    e534:	ldr	r3, [r4, #20]
    e538:	cmp	r3, #0
    e53c:	bne	e588 <opt_loop+0x12e0>
    e540:	ldr	r3, [r4, #84]	; 0x54
    e544:	str	r3, [r4, #60]	; 0x3c
    e548:	ldr	r3, [pc, #-816]	; e220 <opt_loop+0xf78>
    e54c:	ldr	r3, [r8, r3]
    e550:	ldr	r3, [r3]
    e554:	ldr	r2, [r4, #204]	; 0xcc
    e558:	ldr	r2, [r3, r2, lsl #3]
    e55c:	cmp	r2, #0
    e560:	bne	ed58 <opt_loop+0x1ab0>
    e564:	ldr	r1, [r4, #200]	; 0xc8
    e568:	add	r2, r3, r1, lsl #3
    e56c:	ldr	r3, [r3, r1, lsl #3]
    e570:	cmp	r3, #0
    e574:	beq	ed6c <opt_loop+0x1ac4>
    e578:	ldr	r3, [r4, #8]
    e57c:	tst	r3, #8
    e580:	bne	ed6c <opt_loop+0x1ac4>
    e584:	b	ecb8 <opt_loop+0x1a10>
    e588:	cmn	r3, #1
    e58c:	bne	e548 <opt_loop+0x12a0>
    e590:	ldr	r3, [r4, #60]	; 0x3c
    e594:	str	r3, [r4, #84]	; 0x54
    e598:	b	e548 <opt_loop+0x12a0>
    e59c:	cmp	r3, #16
    e5a0:	bne	e608 <opt_loop+0x1360>
    e5a4:	ldr	r3, [r4, #20]
    e5a8:	cmp	r3, r2
    e5ac:	movne	r3, #0
    e5b0:	moveq	r3, #1
    e5b4:	ldr	r2, [r4, #84]	; 0x54
    e5b8:	ldr	r1, [r4, #60]	; 0x3c
    e5bc:	cmp	r2, r1
    e5c0:	beq	e5d0 <opt_loop+0x1328>
    e5c4:	ldr	r0, [pc, #-968]	; e204 <opt_loop+0xf5c>
    e5c8:	add	r0, pc, r0
    e5cc:	str	sl, [r0, #868]	; 0x364
    e5d0:	cmp	r3, #0
    e5d4:	strne	r1, [r4, #84]	; 0x54
    e5d8:	streq	r2, [r4, #60]	; 0x3c
    e5dc:	b	ed6c <opt_loop+0x1ac4>
    e5e0:	ldr	r3, [r4, #20]
    e5e4:	cmp	r3, r2
    e5e8:	movcs	r3, #0
    e5ec:	movcc	r3, #1
    e5f0:	b	e5b4 <opt_loop+0x130c>
    e5f4:	ldr	r3, [r4, #20]
    e5f8:	cmp	r3, r2
    e5fc:	movhi	r3, #0
    e600:	movls	r3, #1
    e604:	b	e5b4 <opt_loop+0x130c>
    e608:	bl	ebc <abort@plt>
    e60c:	add	r3, r3, #1
    e610:	cmp	r3, #18
    e614:	beq	e644 <opt_loop+0x139c>
    e618:	ldr	ip, [r0, #4]!
    e61c:	cmp	ip, #0
    e620:	beq	e60c <opt_loop+0x1364>
    e624:	ldr	r5, [r4, #128]	; 0x80
    e628:	mov	r6, #1
    e62c:	ands	r5, r5, r6, lsl r3
    e630:	bne	e60c <opt_loop+0x1364>
    e634:	str	lr, [ip]
    e638:	ldr	r1, [sp, #4]
    e63c:	ldr	r2, [sp, #8]
    e640:	b	e60c <opt_loop+0x1364>
    e644:	cmp	r1, #0
    e648:	beq	e658 <opt_loop+0x13b0>
    e64c:	ldr	r3, [pc, #-1100]	; e208 <opt_loop+0xf60>
    e650:	add	r3, pc, r3
    e654:	str	r2, [r3, #868]	; 0x364
    e658:	ldr	r3, [r4, #8]
    e65c:	tst	r3, #8
    e660:	beq	e6e4 <opt_loop+0x143c>
    e664:	ldr	r3, [r4, #204]	; 0xcc
    e668:	str	r3, [r4, #132]	; 0x84
    e66c:	ldr	r3, [r4, #8]
    e670:	str	r3, [r4, #52]	; 0x34
    e674:	rsb	r3, r3, #0
    e678:	str	r3, [r4, #76]	; 0x4c
    e67c:	ldr	r4, [r4, #100]	; 0x64
    e680:	cmp	r4, #0
    e684:	beq	e6fc <opt_loop+0x1454>
    e688:	ldr	r5, [r4, #112]	; 0x70
    e68c:	cmp	r5, #0
    e690:	beq	d7fc <opt_loop+0x554>
    e694:	ldr	r1, [r5, #16]
    e698:	mov	r2, #72	; 0x48
    e69c:	add	r1, r1, #136	; 0x88
    e6a0:	add	r0, r4, #136	; 0x88
    e6a4:	bl	d6c <memcpy@plt>
    e6a8:	ldr	r5, [r5, #20]
    e6ac:	cmp	r5, #0
    e6b0:	beq	d80c <opt_loop+0x564>
    e6b4:	add	r2, r4, #132	; 0x84
    e6b8:	mov	r3, #0
    e6bc:	ldr	ip, [r5, #16]
    e6c0:	add	r1, r3, #34	; 0x22
    e6c4:	ldr	r0, [r2, #4]!
    e6c8:	ldr	r1, [ip, r1, lsl #2]
    e6cc:	cmp	r0, r1
    e6d0:	strne	sl, [r2]
    e6d4:	add	r3, r3, #1
    e6d8:	cmp	r3, #18
    e6dc:	bne	e6bc <opt_loop+0x1414>
    e6e0:	b	e6a8 <opt_loop+0x1400>
    e6e4:	mov	r2, sl
    e6e8:	ldr	r1, [r4, #20]
    e6ec:	mov	r0, sl
    e6f0:	bl	ca10 <F>
    e6f4:	str	r0, [r4, #132]	; 0x84
    e6f8:	b	e66c <opt_loop+0x13c4>
    e6fc:	ldr	r3, [sp, #16]
    e700:	sub	r3, r3, #1
    e704:	str	r3, [sp, #16]
    e708:	cmn	r3, #1
    e70c:	beq	e734 <opt_loop+0x148c>
    e710:	ldr	r3, [sp, #28]
    e714:	ldr	r3, [r3]
    e718:	ldr	r2, [sp, #16]
    e71c:	ldr	r4, [r3, r2, lsl #2]
    e720:	cmp	r4, #0
    e724:	beq	e6fc <opt_loop+0x1454>
    e728:	mov	sl, #0
    e72c:	str	sl, [sp, #8]
    e730:	b	e688 <opt_loop+0x13e0>
    e734:	cmp	fp, #0
    e738:	bne	eba4 <opt_loop+0x18fc>
    e73c:	ldr	r3, [sp, #44]	; 0x2c
    e740:	cmp	r3, #0
    e744:	ble	eca8 <opt_loop+0x1a00>
    e748:	add	r5, r3, #1
    e74c:	mov	r9, #1
    e750:	ldr	r3, [pc, #-1344]	; e218 <opt_loop+0xf70>
    e754:	ldr	r6, [r8, r3]
    e758:	b	e76c <opt_loop+0x14c4>
    e75c:	add	r3, r9, #1
    e760:	cmp	r3, r5
    e764:	beq	ec5c <opt_loop+0x19b4>
    e768:	mov	r9, r3
    e76c:	ldr	r3, [r6]
    e770:	ldr	r4, [r3, r9, lsl #2]
    e774:	cmp	r4, #0
    e778:	beq	e75c <opt_loop+0x14b4>
    e77c:	add	r0, r4, #48	; 0x30
    e780:	bl	d0b4 <opt_j>
    e784:	add	r0, r4, #72	; 0x48
    e788:	bl	d0b4 <opt_j>
    e78c:	ldr	r4, [r4, #100]	; 0x64
    e790:	cmp	r4, #0
    e794:	bne	e77c <opt_loop+0x14d4>
    e798:	b	e75c <opt_loop+0x14b4>
    e79c:	ldr	r2, [r0, #60]	; 0x3c
    e7a0:	cmp	r2, r3
    e7a4:	addeq	r0, r0, #60	; 0x3c
    e7a8:	addne	r0, r0, #84	; 0x54
    e7ac:	ldr	r2, [r0]
    e7b0:	cmp	r2, #0
    e7b4:	beq	ea14 <opt_loop+0x176c>
    e7b8:	ldr	r5, [r3, #60]	; 0x3c
    e7bc:	ldr	r1, [r2, #60]	; 0x3c
    e7c0:	cmp	r1, r5
    e7c4:	bne	ea14 <opt_loop+0x176c>
    e7c8:	ldr	r1, [r3]
    e7cc:	lsr	r6, r1, #5
    e7d0:	lsl	r7, r6, #2
    e7d4:	and	r1, r1, #31
    e7d8:	mov	ip, #1
    e7dc:	lsl	r1, ip, r1
    e7e0:	ldr	ip, [r2, #104]	; 0x68
    e7e4:	ldr	ip, [ip, r6, lsl #2]
    e7e8:	tst	r1, ip
    e7ec:	beq	ea14 <opt_loop+0x176c>
    e7f0:	ldr	r8, [sp, #4]
    e7f4:	ldr	ip, [r2, #200]	; 0xc8
    e7f8:	cmp	r4, ip
    e7fc:	bne	e834 <opt_loop+0x158c>
    e800:	add	r0, r2, #84	; 0x54
    e804:	ldr	r2, [r2, #84]	; 0x54
    e808:	cmp	r2, #0
    e80c:	beq	ea14 <opt_loop+0x176c>
    e810:	ldr	ip, [r2, #60]	; 0x3c
    e814:	cmp	ip, r5
    e818:	bne	ea14 <opt_loop+0x176c>
    e81c:	ldr	r8, [sp, #8]
    e820:	ldr	ip, [r2, #104]	; 0x68
    e824:	ldr	ip, [ip, r7]
    e828:	tst	r1, ip
    e82c:	bne	e7f4 <opt_loop+0x154c>
    e830:	b	ea14 <opt_loop+0x176c>
    e834:	str	r7, [sp, #16]
    e838:	ldr	ip, [r2, #84]	; 0x54
    e83c:	cmp	ip, #0
    e840:	beq	ea14 <opt_loop+0x176c>
    e844:	ldr	r7, [ip, #60]	; 0x3c
    e848:	cmp	r7, r5
    e84c:	bne	ea14 <opt_loop+0x176c>
    e850:	ldr	r7, [ip, #104]	; 0x68
    e854:	ldr	r6, [r7, r6, lsl #2]
    e858:	tst	r1, r6
    e85c:	beq	ea14 <opt_loop+0x176c>
    e860:	ldr	r6, [ip, #200]	; 0xc8
    e864:	cmp	r4, r6
    e868:	ldrne	r7, [sp, #16]
    e86c:	beq	e8f8 <opt_loop+0x1650>
    e870:	ldr	r6, [ip, #84]	; 0x54
    e874:	cmp	r6, #0
    e878:	beq	ea14 <opt_loop+0x176c>
    e87c:	ldr	r2, [r6, #60]	; 0x3c
    e880:	cmp	r2, r5
    e884:	bne	ea14 <opt_loop+0x176c>
    e888:	ldr	r2, [r6, #104]	; 0x68
    e88c:	ldr	r2, [r2, r7]
    e890:	tst	r1, r2
    e894:	beq	ea14 <opt_loop+0x176c>
    e898:	ldr	r2, [r6, #200]	; 0xc8
    e89c:	cmp	r4, r2
    e8a0:	beq	e8ac <opt_loop+0x1604>
    e8a4:	mov	ip, r6
    e8a8:	b	e870 <opt_loop+0x15c8>
    e8ac:	add	r2, ip, #84	; 0x54
    e8b0:	ldr	r1, [r6, #84]	; 0x54
    e8b4:	str	r1, [r2]
    e8b8:	ldr	r2, [r0]
    e8bc:	str	r2, [r6, #84]	; 0x54
    e8c0:	cmp	r8, #0
    e8c4:	beq	e904 <opt_loop+0x165c>
    e8c8:	ldr	r2, [r3, #112]	; 0x70
    e8cc:	cmp	r2, #0
    e8d0:	beq	eb34 <opt_loop+0x188c>
    e8d4:	ldr	r1, [r2, #16]
    e8d8:	ldr	r0, [r1, #60]	; 0x3c
    e8dc:	cmp	r0, r3
    e8e0:	streq	r6, [r1, #60]	; 0x3c
    e8e4:	strne	r6, [r1, #84]	; 0x54
    e8e8:	ldr	r2, [r2, #20]
    e8ec:	cmp	r2, #0
    e8f0:	bne	e8d4 <opt_loop+0x162c>
    e8f4:	b	e908 <opt_loop+0x1660>
    e8f8:	add	r2, r2, #84	; 0x54
    e8fc:	mov	r6, ip
    e900:	b	e8b0 <opt_loop+0x1608>
    e904:	str	r6, [r0]
    e908:	ldr	lr, [r3, #112]	; 0x70
    e90c:	cmp	lr, #0
    e910:	beq	eb48 <opt_loop+0x18a0>
    e914:	ldr	r2, [sp, #28]
    e918:	str	r2, [sp, #24]
    e91c:	ldr	r2, [sp, #4]
    e920:	str	r2, [sp, #20]
    e924:	b	ea14 <opt_loop+0x176c>
    e928:	ldr	r2, [r0, #60]	; 0x3c
    e92c:	cmp	r2, r3
    e930:	addeq	r0, r0, #60	; 0x3c
    e934:	addne	r0, r0, #84	; 0x54
    e938:	ldr	r2, [r0]
    e93c:	cmp	r2, #0
    e940:	beq	e9bc <opt_loop+0x1714>
    e944:	ldr	lr, [r3, #84]	; 0x54
    e948:	ldr	r1, [r2, #84]	; 0x54
    e94c:	cmp	r1, lr
    e950:	bne	e9bc <opt_loop+0x1714>
    e954:	ldr	r1, [r3]
    e958:	lsr	r5, r1, #5
    e95c:	lsl	r6, r5, #2
    e960:	and	r1, r1, #31
    e964:	mov	ip, #1
    e968:	lsl	r1, ip, r1
    e96c:	ldr	ip, [r2, #104]	; 0x68
    e970:	ldr	ip, [ip, r5, lsl #2]
    e974:	tst	r1, ip
    e978:	beq	e9bc <opt_loop+0x1714>
    e97c:	ldr	r7, [sp, #4]
    e980:	ldr	ip, [r2, #200]	; 0xc8
    e984:	cmp	r4, ip
    e988:	bne	ea58 <opt_loop+0x17b0>
    e98c:	add	r0, r2, #60	; 0x3c
    e990:	ldr	r2, [r2, #60]	; 0x3c
    e994:	cmp	r2, #0
    e998:	beq	e9bc <opt_loop+0x1714>
    e99c:	ldr	ip, [r2, #84]	; 0x54
    e9a0:	cmp	ip, lr
    e9a4:	bne	e9bc <opt_loop+0x1714>
    e9a8:	ldr	r7, [sp, #8]
    e9ac:	ldr	ip, [r2, #104]	; 0x68
    e9b0:	ldr	ip, [ip, r6]
    e9b4:	tst	r1, ip
    e9b8:	bne	e980 <opt_loop+0x16d8>
    e9bc:	ldr	r3, [r3, #100]	; 0x64
    e9c0:	cmp	r3, #0
    e9c4:	beq	eb5c <opt_loop+0x18b4>
    e9c8:	ldr	lr, [r3, #112]	; 0x70
    e9cc:	cmp	lr, #0
    e9d0:	beq	e9bc <opt_loop+0x1714>
    e9d4:	ldr	r0, [lr, #16]
    e9d8:	ldr	r4, [r0, #200]	; 0xc8
    e9dc:	ldr	r2, [lr, #20]
    e9e0:	cmp	r2, #0
    e9e4:	beq	e79c <opt_loop+0x14f4>
    e9e8:	ldr	r1, [r2, #16]
    e9ec:	ldr	r1, [r1, #200]	; 0xc8
    e9f0:	cmp	r4, r1
    e9f4:	bne	ea14 <opt_loop+0x176c>
    e9f8:	ldr	r2, [r2, #20]
    e9fc:	cmp	r2, #0
    ea00:	beq	e79c <opt_loop+0x14f4>
    ea04:	ldr	r1, [r2, #16]
    ea08:	ldr	r1, [r1, #200]	; 0xc8
    ea0c:	cmp	r4, r1
    ea10:	beq	e9f8 <opt_loop+0x1750>
    ea14:	ldr	r0, [lr, #16]
    ea18:	ldr	r4, [r0, #200]	; 0xc8
    ea1c:	ldr	r2, [lr, #20]
    ea20:	cmp	r2, #0
    ea24:	beq	e928 <opt_loop+0x1680>
    ea28:	ldr	r1, [r2, #16]
    ea2c:	ldr	r1, [r1, #200]	; 0xc8
    ea30:	cmp	r4, r1
    ea34:	bne	e9bc <opt_loop+0x1714>
    ea38:	ldr	r2, [r2, #20]
    ea3c:	cmp	r2, #0
    ea40:	beq	e928 <opt_loop+0x1680>
    ea44:	ldr	r1, [r2, #16]
    ea48:	ldr	r1, [r1, #200]	; 0xc8
    ea4c:	cmp	r4, r1
    ea50:	beq	ea38 <opt_loop+0x1790>
    ea54:	b	e9bc <opt_loop+0x1714>
    ea58:	ldr	ip, [r2, #60]	; 0x3c
    ea5c:	cmp	ip, #0
    ea60:	beq	e9bc <opt_loop+0x1714>
    ea64:	ldr	r8, [ip, #84]	; 0x54
    ea68:	cmp	r8, lr
    ea6c:	bne	e9bc <opt_loop+0x1714>
    ea70:	ldr	r8, [ip, #104]	; 0x68
    ea74:	ldr	r5, [r8, r5, lsl #2]
    ea78:	tst	r1, r5
    ea7c:	beq	e9bc <opt_loop+0x1714>
    ea80:	ldr	r5, [ip, #200]	; 0xc8
    ea84:	cmp	r4, r5
    ea88:	beq	eb28 <opt_loop+0x1880>
    ea8c:	ldr	r5, [ip, #60]	; 0x3c
    ea90:	cmp	r5, #0
    ea94:	beq	e9bc <opt_loop+0x1714>
    ea98:	ldr	r2, [r5, #84]	; 0x54
    ea9c:	cmp	r2, lr
    eaa0:	bne	e9bc <opt_loop+0x1714>
    eaa4:	ldr	r2, [r5, #104]	; 0x68
    eaa8:	ldr	r2, [r2, r6]
    eaac:	tst	r1, r2
    eab0:	beq	e9bc <opt_loop+0x1714>
    eab4:	ldr	r2, [r5, #200]	; 0xc8
    eab8:	cmp	r4, r2
    eabc:	beq	eac8 <opt_loop+0x1820>
    eac0:	mov	ip, r5
    eac4:	b	ea8c <opt_loop+0x17e4>
    eac8:	add	r2, ip, #60	; 0x3c
    eacc:	ldr	r1, [r5, #60]	; 0x3c
    ead0:	str	r1, [r2]
    ead4:	ldr	r2, [r0]
    ead8:	str	r2, [r5, #60]	; 0x3c
    eadc:	cmp	r7, #0
    eae0:	streq	r5, [r0]
    eae4:	beq	eb14 <opt_loop+0x186c>
    eae8:	ldr	r2, [r3, #112]	; 0x70
    eaec:	cmp	r2, #0
    eaf0:	beq	eb14 <opt_loop+0x186c>
    eaf4:	ldr	r1, [r2, #16]
    eaf8:	ldr	r0, [r1, #60]	; 0x3c
    eafc:	cmp	r0, r3
    eb00:	streq	r5, [r1, #60]	; 0x3c
    eb04:	strne	r5, [r1, #84]	; 0x54
    eb08:	ldr	r2, [r2, #20]
    eb0c:	cmp	r2, #0
    eb10:	bne	eaf4 <opt_loop+0x184c>
    eb14:	ldr	r2, [sp, #28]
    eb18:	str	r2, [sp, #24]
    eb1c:	ldr	r2, [sp, #4]
    eb20:	str	r2, [sp, #20]
    eb24:	b	e9bc <opt_loop+0x1714>
    eb28:	add	r2, r2, #60	; 0x3c
    eb2c:	mov	r5, ip
    eb30:	b	eacc <opt_loop+0x1824>
    eb34:	ldr	r2, [sp, #28]
    eb38:	str	r2, [sp, #24]
    eb3c:	ldr	r2, [sp, #4]
    eb40:	str	r2, [sp, #20]
    eb44:	b	e9bc <opt_loop+0x1714>
    eb48:	ldr	r2, [sp, #28]
    eb4c:	str	r2, [sp, #24]
    eb50:	ldr	r2, [sp, #4]
    eb54:	str	r2, [sp, #20]
    eb58:	b	e9bc <opt_loop+0x1714>
    eb5c:	add	r3, sl, #1
    eb60:	cmp	r9, sl
    eb64:	beq	eb80 <opt_loop+0x18d8>
    eb68:	mov	sl, r3
    eb6c:	ldr	r3, [fp]
    eb70:	ldr	r3, [r3, sl, lsl #2]
    eb74:	cmp	r3, #0
    eb78:	bne	e9c8 <opt_loop+0x1720>
    eb7c:	b	eb5c <opt_loop+0x18b4>
    eb80:	ldr	fp, [sp, #32]
    eb84:	ldr	r8, [sp, #36]	; 0x24
    eb88:	ldr	r3, [sp, #20]
    eb8c:	cmp	r3, #0
    eb90:	beq	eba4 <opt_loop+0x18fc>
    eb94:	ldr	r3, [pc, #-2448]	; e20c <opt_loop+0xf64>
    eb98:	add	r3, pc, r3
    eb9c:	ldr	r2, [sp, #24]
    eba0:	str	r2, [r3, #868]	; 0x364
    eba4:	ldr	r3, [pc, #-2460]	; e210 <opt_loop+0xf68>
    eba8:	add	r3, pc, r3
    ebac:	ldr	r3, [r3, #868]	; 0x364
    ebb0:	cmp	r3, #0
    ebb4:	bne	ee0c <opt_loop+0x1b64>
    ebb8:	ldr	r4, [sp, #48]	; 0x30
    ebbc:	ldr	r3, [sp, #4]
    ebc0:	str	r3, [r4, #868]	; 0x364
    ebc4:	ldr	r5, [r4, #864]	; 0x360
    ebc8:	lsl	r2, r5, #2
    ebcc:	mov	r1, #0
    ebd0:	ldr	r3, [sp, #52]	; 0x34
    ebd4:	ldr	r0, [r3]
    ebd8:	bl	e2c <memset@plt>
    ebdc:	ldr	r3, [r4]
    ebe0:	add	r3, r3, #1
    ebe4:	str	r3, [r4]
    ebe8:	ldr	r0, [sp, #12]
    ebec:	bl	c848 <find_levels_r>
    ebf0:	ldr	r1, [r4, #872]	; 0x368
    ebf4:	ldr	r4, [r4, #876]	; 0x36c
    ebf8:	mul	r2, r5, r4
    ebfc:	subs	r3, r2, #1
    ec00:	bmi	ec18 <opt_loop+0x1970>
    ec04:	mvn	r0, #0
    ec08:	str	r0, [r1], #4
    ec0c:	sub	r3, r3, #1
    ec10:	cmn	r3, #1
    ec14:	bne	ec08 <opt_loop+0x1960>
    ec18:	subs	r4, r4, #1
    ec1c:	bmi	ec40 <opt_loop+0x1998>
    ec20:	mov	r3, r4
    ec24:	mov	r0, #0
    ec28:	ldr	ip, [sp, #12]
    ec2c:	ldr	r1, [ip, #104]	; 0x68
    ec30:	str	r0, [r1, r3, lsl #2]
    ec34:	sub	r3, r3, #1
    ec38:	cmn	r3, #1
    ec3c:	bne	ec2c <opt_loop+0x1984>
    ec40:	ldr	r3, [sp, #12]
    ec44:	ldr	r1, [r3, #36]	; 0x24
    ec48:	cmp	r1, #0
    ec4c:	blt	d3bc <opt_loop+0x114>
    ec50:	ldr	r3, [pc, #-2624]	; e218 <opt_loop+0xf70>
    ec54:	ldr	r5, [r8, r3]
    ec58:	b	d3a8 <opt_loop+0x100>
    ec5c:	ldr	r0, [sp, #12]
    ec60:	bl	cb98 <find_inedges>
    ec64:	ldr	r3, [pc, #-2648]	; e214 <opt_loop+0xf6c>
    ec68:	add	r3, pc, r3
    ec6c:	ldr	r3, [r3, #868]	; 0x364
    ec70:	str	r3, [sp, #24]
    ec74:	mov	r3, #0
    ec78:	str	r3, [sp, #20]
    ec7c:	mov	sl, #1
    ec80:	ldr	r3, [pc, #-2672]	; e218 <opt_loop+0xf70>
    ec84:	ldr	r2, [r8, r3]
    ec88:	str	fp, [sp, #28]
    ec8c:	str	fp, [sp, #8]
    ec90:	str	fp, [sp, #32]
    ec94:	str	r8, [sp, #36]	; 0x24
    ec98:	mov	fp, r2
    ec9c:	b	eb6c <opt_loop+0x18c4>
    eca0:	cmp	fp, #0
    eca4:	bne	ee0c <opt_loop+0x1b64>
    eca8:	ldr	r0, [sp, #12]
    ecac:	bl	cb98 <find_inedges>
    ecb0:	b	eba4 <opt_loop+0x18fc>
    ecb4:	ldr	r3, [r4, #8]
    ecb8:	ldr	r2, [r2, #4]
    ecbc:	and	r3, r3, #240	; 0xf0
    ecc0:	cmp	r3, #32
    ecc4:	beq	e5e0 <opt_loop+0x1338>
    ecc8:	ble	e59c <opt_loop+0x12f4>
    eccc:	cmp	r3, #48	; 0x30
    ecd0:	beq	e5f4 <opt_loop+0x134c>
    ecd4:	cmp	r3, #64	; 0x40
    ecd8:	bne	e608 <opt_loop+0x1360>
    ecdc:	ldr	r3, [r4, #20]
    ece0:	and	r3, r3, r2
    ece4:	b	e5b4 <opt_loop+0x130c>
    ece8:	cmp	r3, #0
    ecec:	bne	e238 <opt_loop+0xf90>
    ecf0:	cmp	r5, #0
    ecf4:	beq	ed04 <opt_loop+0x1a5c>
    ecf8:	ldr	r2, [pc, #-2788]	; e21c <opt_loop+0xf74>
    ecfc:	add	r2, pc, r2
    ed00:	str	lr, [r2, #868]	; 0x364
    ed04:	mov	r1, r3
    ed08:	ldr	r3, [r4, #8]
    ed0c:	cmp	r3, #21
    ed10:	beq	e424 <opt_loop+0x117c>
    ed14:	ldr	r2, [r4, #8]
    ed18:	cmp	r2, #69	; 0x45
    ed1c:	beq	e534 <opt_loop+0x128c>
    ed20:	ldr	r3, [pc, #-2824]	; e220 <opt_loop+0xf78>
    ed24:	ldr	r3, [r8, r3]
    ed28:	ldr	r3, [r3]
    ed2c:	ldr	r1, [r4, #204]	; 0xcc
    ed30:	add	r0, r3, r1, lsl #3
    ed34:	ldr	r1, [r3, r1, lsl #3]
    ed38:	cmp	r1, #0
    ed3c:	beq	e564 <opt_loop+0x12bc>
    ed40:	tst	r2, #8
    ed44:	beq	ed58 <opt_loop+0x1ab0>
    ed48:	ldr	r1, [r0, #4]
    ed4c:	bic	r2, r2, #8
    ed50:	str	r2, [r4, #8]
    ed54:	str	r1, [r4, #20]
    ed58:	ldr	r1, [r4, #200]	; 0xc8
    ed5c:	add	r2, r3, r1, lsl #3
    ed60:	ldr	r3, [r3, r1, lsl #3]
    ed64:	cmp	r3, #0
    ed68:	bne	ecb4 <opt_loop+0x1a0c>
    ed6c:	mov	r2, #72	; 0x48
    ed70:	mov	r1, sl
    ed74:	add	r0, sp, #56	; 0x38
    ed78:	bl	e2c <memset@plt>
    ed7c:	ldr	r5, [r4, #4]
    ed80:	cmp	r5, #0
    ed84:	beq	eda4 <opt_loop+0x1afc>
    ed88:	add	r6, sp, #56	; 0x38
    ed8c:	mov	r1, r6
    ed90:	mov	r0, r5
    ed94:	bl	cf20 <deadstmt>
    ed98:	ldr	r5, [r5, #16]
    ed9c:	cmp	r5, #0
    eda0:	bne	ed8c <opt_loop+0x1ae4>
    eda4:	add	r1, sp, #56	; 0x38
    eda8:	add	r0, r4, #8
    edac:	bl	cf20 <deadstmt>
    edb0:	ldr	r3, [pc, #-2964]	; e224 <opt_loop+0xf7c>
    edb4:	add	r3, pc, r3
    edb8:	ldr	r2, [r3, #868]	; 0x364
    edbc:	add	r0, sp, #52	; 0x34
    edc0:	mov	r1, sl
    edc4:	mov	r3, sl
    edc8:	mvn	lr, #0
    edcc:	b	e618 <opt_loop+0x1370>
    edd0:	cmp	r5, #0
    edd4:	beq	ed08 <opt_loop+0x1a60>
    edd8:	ldr	r3, [pc, #-3000]	; e228 <opt_loop+0xf80>
    eddc:	add	r3, pc, r3
    ede0:	str	lr, [r3, #868]	; 0x364
    ede4:	b	ed08 <opt_loop+0x1a60>
    ede8:	mov	r2, r1
    edec:	b	e264 <opt_loop+0xfbc>
    edf0:	cmp	fp, #0
    edf4:	bne	e100 <opt_loop+0xe58>
    edf8:	b	ed6c <opt_loop+0x1ac4>
    edfc:	ldr	r1, [r5, #12]
    ee00:	mov	r0, r6
    ee04:	bl	ca10 <F>
    ee08:	b	db90 <opt_loop+0x8e8>
    ee0c:	add	sp, sp, #132	; 0x84
    ee10:	ldrd	r4, [sp]
    ee14:	ldrd	r6, [sp, #8]
    ee18:	ldrd	r8, [sp, #16]
    ee1c:	ldrd	sl, [sp, #24]
    ee20:	add	sp, sp, #32
    ee24:	pop	{pc}		; (ldr pc, [sp], #4)

0000ee28 <convert_code_r>:
    ee28:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ee2c:	strd	r6, [sp, #8]
    ee30:	strd	r8, [sp, #16]
    ee34:	strd	sl, [sp, #24]
    ee38:	str	lr, [sp, #32]
    ee3c:	sub	sp, sp, #20
    ee40:	subs	r7, r0, #0
    ee44:	beq	f198 <convert_code_r+0x370>
    ee48:	ldr	r3, [pc, #892]	; f1cc <convert_code_r+0x3a4>
    ee4c:	add	r3, pc, r3
    ee50:	ldr	r3, [r3]
    ee54:	ldr	r2, [r7, #24]
    ee58:	cmp	r2, r3
    ee5c:	beq	f1a0 <convert_code_r+0x378>
    ee60:	str	r3, [r7, #24]
    ee64:	ldr	r0, [r7, #84]	; 0x54
    ee68:	bl	ee28 <convert_code_r>
    ee6c:	cmp	r0, #0
    ee70:	beq	f1a4 <convert_code_r+0x37c>
    ee74:	ldr	r0, [r7, #60]	; 0x3c
    ee78:	bl	ee28 <convert_code_r>
    ee7c:	cmp	r0, #0
    ee80:	beq	f1a4 <convert_code_r+0x37c>
    ee84:	ldr	r4, [r7, #4]
    ee88:	mov	r0, r4
    ee8c:	bl	ccb4 <slength>
    ee90:	mov	r6, r0
    ee94:	ldr	r2, [pc, #820]	; f1d0 <convert_code_r+0x3a8>
    ee98:	add	r2, pc, r2
    ee9c:	add	r3, r0, #1
    eea0:	ldr	r1, [r7, #28]
    eea4:	add	r3, r3, r1
    eea8:	ldr	r5, [r7, #32]
    eeac:	add	r3, r3, r5
    eeb0:	ldr	r5, [r2, #896]	; 0x380
    eeb4:	sub	r5, r5, r3, lsl #3
    eeb8:	str	r5, [r2, #896]	; 0x380
    eebc:	ldr	r3, [r2, #900]	; 0x384
    eec0:	sub	r3, r5, r3
    eec4:	asr	r3, r3, #3
    eec8:	str	r3, [r7, #40]	; 0x28
    eecc:	cmp	r0, #0
    eed0:	bne	eee8 <convert_code_r+0xc0>
    eed4:	cmp	r4, #0
    eed8:	movne	r3, #0
    eedc:	strne	r3, [sp, #8]
    eee0:	bne	ef34 <convert_code_r+0x10c>
    eee4:	b	f0bc <convert_code_r+0x294>
    eee8:	mov	r8, r0
    eeec:	mov	r1, #4
    eef0:	bl	ce8 <calloc@plt>
    eef4:	subs	r3, r0, #0
    eef8:	str	r3, [sp, #8]
    eefc:	beq	ef50 <convert_code_r+0x128>
    ef00:	cmp	r6, #0
    ef04:	cmpne	r4, #0
    ef08:	beq	f1c0 <convert_code_r+0x398>
    ef0c:	ldr	r3, [sp, #8]
    ef10:	sub	r1, r3, #4
    ef14:	mov	r3, r4
    ef18:	mov	r2, #0
    ef1c:	str	r3, [r1, #4]!
    ef20:	ldr	r3, [r3, #16]
    ef24:	add	r2, r2, #1
    ef28:	cmp	r3, #0
    ef2c:	cmpne	r8, r2
    ef30:	bhi	ef1c <convert_code_r+0xf4>
    ef34:	mov	r2, #0
    ef38:	sub	fp, r6, #2
    ef3c:	str	r2, [sp, #4]
    ef40:	mov	sl, #1
    ef44:	ldr	r9, [sp, #8]
    ef48:	str	r7, [sp, #12]
    ef4c:	b	f014 <convert_code_r+0x1ec>
    ef50:	ldr	r0, [pc, #636]	; f1d4 <convert_code_r+0x3ac>
    ef54:	add	r0, pc, r0
    ef58:	bl	229c <sf_bpf_error>
    ef5c:	ldr	r1, [pc, #628]	; f1d8 <convert_code_r+0x3b0>
    ef60:	add	r1, pc, r1
    ef64:	ldr	r0, [pc, #624]	; f1dc <convert_code_r+0x3b4>
    ef68:	add	r0, pc, r0
    ef6c:	bl	229c <sf_bpf_error>
    ef70:	cmp	r7, #0
    ef74:	bne	ef88 <convert_code_r+0x160>
    ef78:	add	ip, r8, r3
    ef7c:	strb	ip, [r5, #2]
    ef80:	mov	r7, sl
    ef84:	b	efcc <convert_code_r+0x1a4>
    ef88:	ldr	r1, [pc, #592]	; f1e0 <convert_code_r+0x3b8>
    ef8c:	add	r1, pc, r1
    ef90:	ldr	r0, [pc, #588]	; f1e4 <convert_code_r+0x3bc>
    ef94:	add	r0, pc, r0
    ef98:	bl	229c <sf_bpf_error>
    ef9c:	ldr	r1, [pc, #580]	; f1e8 <convert_code_r+0x3c0>
    efa0:	add	r1, pc, r1
    efa4:	ldr	r0, [pc, #576]	; f1ec <convert_code_r+0x3c4>
    efa8:	add	r0, pc, r0
    efac:	bl	229c <sf_bpf_error>
    efb0:	add	r3, r3, #1
    efb4:	cmp	r6, r3
    efb8:	beq	eff0 <convert_code_r+0x1c8>
    efbc:	ldr	r1, [r0, #4]!
    efc0:	ldr	ip, [r4, #4]
    efc4:	cmp	r1, ip
    efc8:	beq	ef70 <convert_code_r+0x148>
    efcc:	ldr	ip, [r4, #8]
    efd0:	cmp	r1, ip
    efd4:	bne	efb0 <convert_code_r+0x188>
    efd8:	cmp	lr, #0
    efdc:	bne	ef9c <convert_code_r+0x174>
    efe0:	add	r1, r8, r3
    efe4:	strb	r1, [r5, #3]
    efe8:	mov	lr, sl
    efec:	b	efb0 <convert_code_r+0x188>
    eff0:	eor	r7, r7, #1
    eff4:	eor	lr, lr, #1
    eff8:	orrs	r3, r7, lr
    effc:	bne	f090 <convert_code_r+0x268>
    f000:	add	r5, r5, #8
    f004:	add	r2, r2, #1
    f008:	ldr	r4, [r4, #16]
    f00c:	cmp	r4, #0
    f010:	beq	f0a4 <convert_code_r+0x27c>
    f014:	ldr	r3, [r4]
    f018:	cmn	r3, #1
    f01c:	beq	f008 <convert_code_r+0x1e0>
    f020:	strh	r3, [r5]
    f024:	ldr	r3, [r4, #12]
    f028:	str	r3, [r5, #4]
    f02c:	ldr	r3, [r4]
    f030:	and	r1, r3, #7
    f034:	cmp	r3, #5
    f038:	movne	r3, #0
    f03c:	moveq	r3, #1
    f040:	cmp	r1, #5
    f044:	orrne	r3, r3, #1
    f048:	cmp	r3, #0
    f04c:	bne	f000 <convert_code_r+0x1d8>
    f050:	cmp	fp, r2
    f054:	beq	f000 <convert_code_r+0x1d8>
    f058:	ldr	r3, [r4, #4]
    f05c:	cmp	r3, #0
    f060:	beq	ef5c <convert_code_r+0x134>
    f064:	ldr	r3, [r4, #8]
    f068:	cmp	r3, #0
    f06c:	beq	ef5c <convert_code_r+0x134>
    f070:	cmp	r6, #0
    f074:	ble	f090 <convert_code_r+0x268>
    f078:	sub	r0, r9, #4
    f07c:	mov	lr, #0
    f080:	ldr	r7, [sp, #4]
    f084:	mov	r3, lr
    f088:	mvn	r8, r2
    f08c:	b	efbc <convert_code_r+0x194>
    f090:	ldr	r1, [pc, #344]	; f1f0 <convert_code_r+0x3c8>
    f094:	add	r1, pc, r1
    f098:	ldr	r0, [pc, #340]	; f1f4 <convert_code_r+0x3cc>
    f09c:	add	r0, pc, r0
    f0a0:	bl	229c <sf_bpf_error>
    f0a4:	ldr	r7, [sp, #12]
    f0a8:	ldr	r3, [sp, #8]
    f0ac:	cmp	r3, #0
    f0b0:	beq	f0bc <convert_code_r+0x294>
    f0b4:	ldr	r0, [sp, #8]
    f0b8:	bl	d48 <free@plt>
    f0bc:	ldr	r3, [r7, #8]
    f0c0:	strh	r3, [r5]
    f0c4:	ldr	r3, [r7, #20]
    f0c8:	str	r3, [r5, #4]
    f0cc:	ldr	r3, [r7, #60]	; 0x3c
    f0d0:	cmp	r3, #0
    f0d4:	moveq	r0, #1
    f0d8:	beq	f1a4 <convert_code_r+0x37c>
    f0dc:	ldr	r2, [r7, #40]	; 0x28
    f0e0:	add	r2, r6, r2
    f0e4:	ldr	r3, [r3, #40]	; 0x28
    f0e8:	sub	r3, r3, r2
    f0ec:	sub	r2, r3, #1
    f0f0:	cmp	r2, #255	; 0xff
    f0f4:	bls	f12c <convert_code_r+0x304>
    f0f8:	ldr	r0, [r7, #28]
    f0fc:	cmp	r0, #0
    f100:	moveq	r3, #1
    f104:	streq	r3, [r7, #28]
    f108:	beq	f1a4 <convert_code_r+0x37c>
    f10c:	mov	r2, #0
    f110:	strb	r2, [r5, #2]
    f114:	mov	r2, #5
    f118:	strh	r2, [r5, #8]
    f11c:	sub	r3, r3, #2
    f120:	str	r3, [r5, #12]
    f124:	mov	r2, #1
    f128:	b	f134 <convert_code_r+0x30c>
    f12c:	strb	r2, [r5, #2]
    f130:	mov	r2, #0
    f134:	ldr	r1, [r7, #84]	; 0x54
    f138:	ldr	r3, [r7, #40]	; 0x28
    f13c:	add	r6, r6, r3
    f140:	ldr	r3, [r1, #40]	; 0x28
    f144:	sub	r3, r3, r6
    f148:	sub	r3, r3, #1
    f14c:	cmp	r3, #255	; 0xff
    f150:	strbls	r3, [r5, #3]
    f154:	movls	r0, #1
    f158:	bls	f1a4 <convert_code_r+0x37c>
    f15c:	ldr	r0, [r7, #32]
    f160:	cmp	r0, #0
    f164:	moveq	r3, #1
    f168:	streq	r3, [r7, #32]
    f16c:	beq	f1a4 <convert_code_r+0x37c>
    f170:	strb	r2, [r5, #3]
    f174:	add	r2, r2, #1
    f178:	lsl	r1, r2, #3
    f17c:	add	r0, r5, r1
    f180:	mov	ip, #5
    f184:	strh	ip, [r5, r1]
    f188:	sub	r3, r3, r2
    f18c:	str	r3, [r0, #4]
    f190:	mov	r0, #1
    f194:	b	f1a4 <convert_code_r+0x37c>
    f198:	mov	r0, #1
    f19c:	b	f1a4 <convert_code_r+0x37c>
    f1a0:	mov	r0, #1
    f1a4:	add	sp, sp, #20
    f1a8:	ldrd	r4, [sp]
    f1ac:	ldrd	r6, [sp, #8]
    f1b0:	ldrd	r8, [sp, #16]
    f1b4:	ldrd	sl, [sp, #24]
    f1b8:	add	sp, sp, #32
    f1bc:	pop	{pc}		; (ldr pc, [sp], #4)
    f1c0:	cmp	r4, #0
    f1c4:	bne	ef34 <convert_code_r+0x10c>
    f1c8:	b	f0b4 <convert_code_r+0x28c>
    f1cc:	.word	0x000228dc
    f1d0:	.word	0x00022890
    f1d4:	.word	0x0000621c
    f1d8:	.word	0x00006220
    f1dc:	.word	0x0000622c
    f1e0:	.word	0x00006234
    f1e4:	.word	0x00006200
    f1e8:	.word	0x00006220
    f1ec:	.word	0x000061ec
    f1f0:	.word	0x00006140
    f1f4:	.word	0x000060f8

0000f1f8 <sf_bpf_optimize>:
    f1f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f1fc:	strd	r6, [sp, #8]
    f200:	strd	r8, [sp, #16]
    f204:	strd	sl, [sp, #24]
    f208:	str	lr, [sp, #32]
    f20c:	sub	sp, sp, #36	; 0x24
    f210:	mov	fp, r0
    f214:	ldr	r4, [pc, #1756]	; f8f8 <sf_bpf_optimize+0x700>
    f218:	add	r4, pc, r4
    f21c:	ldr	r3, [r0]
    f220:	mov	r0, r3
    f224:	str	r3, [sp, #12]
    f228:	ldr	r3, [pc, #1740]	; f8fc <sf_bpf_optimize+0x704>
    f22c:	add	r3, pc, r3
    f230:	ldr	r5, [r3]
    f234:	add	r2, r5, #1
    f238:	str	r2, [r3]
    f23c:	bl	cce4 <count_blocks>
    f240:	mov	r6, r0
    f244:	mov	r1, #4
    f248:	bl	ce8 <calloc@plt>
    f24c:	ldr	r3, [pc, #1708]	; f900 <sf_bpf_optimize+0x708>
    f250:	ldr	r3, [r4, r3]
    f254:	str	r0, [r3]
    f258:	cmp	r0, #0
    f25c:	beq	f4d8 <sf_bpf_optimize+0x2e0>
    f260:	ldr	r7, [pc, #1692]	; f904 <sf_bpf_optimize+0x70c>
    f264:	add	r7, pc, r7
    f268:	add	r3, r5, #2
    f26c:	str	r3, [r7]
    f270:	mov	r3, #0
    f274:	str	r3, [r7, #864]	; 0x360
    f278:	ldr	r0, [sp, #12]
    f27c:	bl	cd4c <number_blks_r>
    f280:	ldr	r5, [r7, #864]	; 0x360
    f284:	lsl	r9, r5, #1
    f288:	str	r9, [r7, #888]	; 0x378
    f28c:	mov	r1, #4
    f290:	mov	r0, r9
    f294:	bl	ce8 <calloc@plt>
    f298:	ldr	r3, [pc, #1640]	; f908 <sf_bpf_optimize+0x710>
    f29c:	ldr	r3, [r4, r3]
    f2a0:	str	r0, [r3]
    f2a4:	cmp	r0, #0
    f2a8:	beq	f4e4 <sf_bpf_optimize+0x2ec>
    f2ac:	mov	r1, #4
    f2b0:	mov	r0, r5
    f2b4:	bl	ce8 <calloc@plt>
    f2b8:	ldr	r3, [pc, #1612]	; f90c <sf_bpf_optimize+0x714>
    f2bc:	ldr	r3, [r4, r3]
    f2c0:	str	r0, [r3]
    f2c4:	cmp	r0, #0
    f2c8:	beq	f4f0 <sf_bpf_optimize+0x2f8>
    f2cc:	lsr	r2, r9, #5
    f2d0:	add	r7, r2, #1
    f2d4:	ldr	r3, [pc, #1588]	; f910 <sf_bpf_optimize+0x718>
    f2d8:	add	r3, pc, r3
    f2dc:	str	r7, [r3, #4]
    f2e0:	lsr	r8, r5, #5
    f2e4:	add	r8, r8, #1
    f2e8:	str	r8, [r3, #876]	; 0x36c
    f2ec:	mul	r3, r8, r5
    f2f0:	mul	r0, r7, r9
    f2f4:	add	r0, r0, r3, lsl #1
    f2f8:	lsl	r0, r0, #2
    f2fc:	bl	dc0 <malloc@plt>
    f300:	ldr	r3, [pc, #1548]	; f914 <sf_bpf_optimize+0x71c>
    f304:	ldr	r3, [r4, r3]
    f308:	str	r0, [r3]
    f30c:	cmp	r0, #0
    f310:	beq	f4fc <sf_bpf_optimize+0x304>
    f314:	ldr	r3, [pc, #1532]	; f918 <sf_bpf_optimize+0x720>
    f318:	add	r3, pc, r3
    f31c:	str	r0, [r3, #872]	; 0x368
    f320:	cmp	r6, #0
    f324:	ble	f7fc <sf_bpf_optimize+0x604>
    f328:	lsl	r8, r8, #2
    f32c:	ldr	r3, [pc, #1484]	; f900 <sf_bpf_optimize+0x708>
    f330:	ldr	r3, [r4, r3]
    f334:	ldr	r3, [r3]
    f338:	lsl	lr, r6, #2
    f33c:	add	ip, r3, lr
    f340:	mov	r1, r3
    f344:	mov	r2, r0
    f348:	ldr	r9, [r1], #4
    f34c:	str	r2, [r9, #104]	; 0x68
    f350:	add	r2, r2, r8
    f354:	cmp	r1, ip
    f358:	bne	f348 <sf_bpf_optimize+0x150>
    f35c:	mul	r1, r8, r6
    f360:	add	r0, r0, r1
    f364:	ldr	r2, [pc, #1456]	; f91c <sf_bpf_optimize+0x724>
    f368:	add	r2, pc, r2
    f36c:	str	r0, [r2, #880]	; 0x370
    f370:	mov	r2, r0
    f374:	ldr	r9, [r3], #4
    f378:	str	r2, [r9, #108]	; 0x6c
    f37c:	add	r2, r2, r8
    f380:	cmp	r3, ip
    f384:	bne	f374 <sf_bpf_optimize+0x17c>
    f388:	add	r0, r0, r1
    f38c:	ldr	r3, [pc, #1420]	; f920 <sf_bpf_optimize+0x728>
    f390:	add	r3, pc, r3
    f394:	str	r0, [r3, #884]	; 0x374
    f398:	lsl	sl, r7, #2
    f39c:	lsl	r2, r7, #3
    f3a0:	mov	ip, r5
    f3a4:	mov	r1, #0
    f3a8:	ldr	r3, [pc, #1360]	; f900 <sf_bpf_optimize+0x708>
    f3ac:	ldr	r9, [r4, r3]
    f3b0:	ldr	r3, [pc, #1360]	; f908 <sf_bpf_optimize+0x710>
    f3b4:	ldr	r8, [r4, r3]
    f3b8:	mov	r7, r6
    f3bc:	str	lr, [sp, #4]
    f3c0:	ldr	r3, [r9]
    f3c4:	ldr	r3, [r3, r1, lsl #2]
    f3c8:	str	r0, [r3, #56]	; 0x38
    f3cc:	add	r6, sl, r0
    f3d0:	str	r6, [r3, #80]	; 0x50
    f3d4:	mov	r6, r3
    f3d8:	str	r1, [r6, #48]!	; 0x30
    f3dc:	ldr	lr, [r8]
    f3e0:	str	r6, [lr, r1, lsl #2]
    f3e4:	mov	r6, r3
    f3e8:	str	ip, [r6, #72]!	; 0x48
    f3ec:	ldr	lr, [r8]
    f3f0:	str	r6, [lr, ip, lsl #2]
    f3f4:	str	r3, [r3, #64]	; 0x40
    f3f8:	str	r3, [r3, #88]	; 0x58
    f3fc:	add	r1, r1, #1
    f400:	add	ip, ip, #1
    f404:	add	r0, r0, r2
    f408:	cmp	r7, r1
    f40c:	bne	f3c0 <sf_bpf_optimize+0x1c8>
    f410:	ldr	lr, [sp, #4]
    f414:	ldr	r3, [pc, #1252]	; f900 <sf_bpf_optimize+0x708>
    f418:	ldr	r3, [r4, r3]
    f41c:	ldr	r7, [r3]
    f420:	add	r8, r7, lr
    f424:	mov	r6, #0
    f428:	ldr	r3, [r7], #4
    f42c:	ldr	r0, [r3, #4]
    f430:	bl	ccb4 <slength>
    f434:	add	r0, r0, #1
    f438:	add	r6, r6, r0
    f43c:	cmp	r7, r8
    f440:	bne	f428 <sf_bpf_optimize+0x230>
    f444:	add	r6, r6, r6, lsl #1
    f448:	ldr	r3, [pc, #1236]	; f924 <sf_bpf_optimize+0x72c>
    f44c:	add	r3, pc, r3
    f450:	str	r6, [r3, #892]	; 0x37c
    f454:	mov	r1, #8
    f458:	mov	r0, r6
    f45c:	bl	ce8 <calloc@plt>
    f460:	mov	r7, r0
    f464:	ldr	r3, [pc, #1212]	; f928 <sf_bpf_optimize+0x730>
    f468:	ldr	r3, [r4, r3]
    f46c:	str	r0, [r3]
    f470:	mov	r1, #20
    f474:	mov	r0, r6
    f478:	bl	ce8 <calloc@plt>
    f47c:	ldr	r3, [pc, #1192]	; f92c <sf_bpf_optimize+0x734>
    f480:	ldr	r3, [r4, r3]
    f484:	str	r0, [r3]
    f488:	cmp	r7, #0
    f48c:	cmpne	r0, #0
    f490:	beq	f508 <sf_bpf_optimize+0x310>
    f494:	mov	r1, #0
    f498:	ldr	r6, [sp, #12]
    f49c:	mov	r0, r6
    f4a0:	bl	d2a8 <opt_loop>
    f4a4:	mov	r1, #1
    f4a8:	mov	r0, r6
    f4ac:	bl	d2a8 <opt_loop>
    f4b0:	lsl	sl, r5, #2
    f4b4:	sub	r9, sl, #4
    f4b8:	ldr	r8, [pc, #1136]	; f930 <sf_bpf_optimize+0x738>
    f4bc:	add	r8, pc, r8
    f4c0:	mov	r3, #0
    f4c4:	str	r3, [sp, #20]
    f4c8:	mov	r7, fp
    f4cc:	mov	fp, sl
    f4d0:	mov	sl, r9
    f4d4:	b	f600 <sf_bpf_optimize+0x408>
    f4d8:	ldr	r0, [pc, #1108]	; f934 <sf_bpf_optimize+0x73c>
    f4dc:	add	r0, pc, r0
    f4e0:	bl	229c <sf_bpf_error>
    f4e4:	ldr	r0, [pc, #1100]	; f938 <sf_bpf_optimize+0x740>
    f4e8:	add	r0, pc, r0
    f4ec:	bl	229c <sf_bpf_error>
    f4f0:	ldr	r0, [pc, #1092]	; f93c <sf_bpf_optimize+0x744>
    f4f4:	add	r0, pc, r0
    f4f8:	bl	229c <sf_bpf_error>
    f4fc:	ldr	r0, [pc, #1084]	; f940 <sf_bpf_optimize+0x748>
    f500:	add	r0, pc, r0
    f504:	bl	229c <sf_bpf_error>
    f508:	ldr	r0, [pc, #1076]	; f944 <sf_bpf_optimize+0x74c>
    f50c:	add	r0, pc, r0
    f510:	bl	229c <sf_bpf_error>
    f514:	ldr	r2, [sp, #16]
    f518:	cmp	r2, #0
    f51c:	beq	f788 <sf_bpf_optimize+0x590>
    f520:	add	r0, r0, #1
    f524:	cmp	r0, r5
    f528:	beq	f798 <sf_bpf_optimize+0x5a0>
    f52c:	ldr	r1, [lr], #4
    f530:	ldr	r3, [r1, #24]
    f534:	cmp	r3, r6
    f538:	bne	f520 <sf_bpf_optimize+0x328>
    f53c:	ldr	r2, [ip, #8]
    f540:	ldr	r3, [r1, #8]
    f544:	cmp	r2, r3
    f548:	bne	f520 <sf_bpf_optimize+0x328>
    f54c:	ldr	r2, [ip, #20]
    f550:	ldr	r3, [r1, #20]
    f554:	cmp	r2, r3
    f558:	bne	f520 <sf_bpf_optimize+0x328>
    f55c:	ldr	r2, [ip, #60]	; 0x3c
    f560:	ldr	r3, [r1, #60]	; 0x3c
    f564:	cmp	r2, r3
    f568:	bne	f520 <sf_bpf_optimize+0x328>
    f56c:	ldr	r2, [ip, #84]	; 0x54
    f570:	ldr	r3, [r1, #84]	; 0x54
    f574:	cmp	r2, r3
    f578:	bne	f520 <sf_bpf_optimize+0x328>
    f57c:	ldr	r2, [ip, #4]
    f580:	ldr	r3, [r1, #4]
    f584:	str	r1, [sp, #8]
    f588:	str	r0, [sp, #4]
    f58c:	b	f8a0 <sf_bpf_optimize+0x6a8>
    f590:	ldr	r0, [sp, #4]
    f594:	b	f520 <sf_bpf_optimize+0x328>
    f598:	ldr	r0, [sp, #4]
    f59c:	b	f520 <sf_bpf_optimize+0x328>
    f5a0:	cmp	r5, #0
    f5a4:	ble	f658 <sf_bpf_optimize+0x460>
    f5a8:	mov	r0, r9
    f5ac:	add	r3, r9, fp
    f5b0:	mov	r1, #1
    f5b4:	b	f5e4 <sf_bpf_optimize+0x3ec>
    f5b8:	ldr	ip, [ip, #100]	; 0x64
    f5bc:	cmp	ip, #0
    f5c0:	strne	ip, [r2, #60]	; 0x3c
    f5c4:	ldrne	r1, [sp, #20]
    f5c8:	ldr	ip, [r2, #84]	; 0x54
    f5cc:	ldr	ip, [ip, #100]	; 0x64
    f5d0:	cmp	ip, #0
    f5d4:	strne	ip, [r2, #84]	; 0x54
    f5d8:	ldrne	r1, [sp, #20]
    f5dc:	cmp	r0, r3
    f5e0:	beq	f5f8 <sf_bpf_optimize+0x400>
    f5e4:	ldr	r2, [r0], #4
    f5e8:	ldr	ip, [r2, #60]	; 0x3c
    f5ec:	cmp	ip, #0
    f5f0:	bne	f5b8 <sf_bpf_optimize+0x3c0>
    f5f4:	b	f5dc <sf_bpf_optimize+0x3e4>
    f5f8:	cmp	r1, #0
    f5fc:	bne	f658 <sf_bpf_optimize+0x460>
    f600:	cmp	r5, #0
    f604:	ble	f62c <sf_bpf_optimize+0x434>
    f608:	ldr	r3, [pc, #752]	; f900 <sf_bpf_optimize+0x708>
    f60c:	ldr	r3, [r4, r3]
    f610:	ldr	r3, [r3]
    f614:	add	r2, r3, fp
    f618:	ldr	r1, [r3], #4
    f61c:	mov	r0, #0
    f620:	str	r0, [r1, #100]	; 0x64
    f624:	cmp	r3, r2
    f628:	bne	f618 <sf_bpf_optimize+0x420>
    f62c:	ldr	r6, [r8]
    f630:	add	r6, r6, #1
    f634:	str	r6, [r8]
    f638:	ldr	r0, [sp, #12]
    f63c:	bl	cc5c <make_marks>
    f640:	sub	r0, r5, #1
    f644:	ldr	r3, [pc, #692]	; f900 <sf_bpf_optimize+0x708>
    f648:	ldr	r3, [r4, r3]
    f64c:	ldr	r9, [r3]
    f650:	add	lr, r9, sl
    f654:	b	f7a0 <sf_bpf_optimize+0x5a8>
    f658:	mov	fp, r7
    f65c:	ldr	r3, [r7]
    f660:	ldr	r5, [r3, #4]
    f664:	mov	r2, #0
    f668:	str	r2, [r3, #4]
    f66c:	ldr	r2, [r7]
    f670:	ldr	r3, [r2, #8]
    f674:	and	r3, r3, #7
    f678:	cmp	r3, #5
    f67c:	bne	f770 <sf_bpf_optimize+0x578>
    f680:	ldr	r3, [r2, #60]	; 0x3c
    f684:	ldr	r1, [r2, #84]	; 0x54
    f688:	cmp	r3, r1
    f68c:	beq	f69c <sf_bpf_optimize+0x4a4>
    f690:	mov	r3, r2
    f694:	b	f6c0 <sf_bpf_optimize+0x4c8>
    f698:	mov	r3, r2
    f69c:	str	r3, [fp]
    f6a0:	ldr	r2, [r3, #8]
    f6a4:	and	r2, r2, #7
    f6a8:	cmp	r2, #5
    f6ac:	bne	f6c0 <sf_bpf_optimize+0x4c8>
    f6b0:	ldr	r2, [r3, #60]	; 0x3c
    f6b4:	ldr	r1, [r3, #84]	; 0x54
    f6b8:	cmp	r2, r1
    f6bc:	beq	f698 <sf_bpf_optimize+0x4a0>
    f6c0:	ldr	r1, [r3, #4]
    f6c4:	cmp	r1, #0
    f6c8:	beq	f6d4 <sf_bpf_optimize+0x4dc>
    f6cc:	mov	r0, r5
    f6d0:	bl	3b54 <sf_append>
    f6d4:	ldr	r3, [fp]
    f6d8:	str	r5, [r3, #4]
    f6dc:	ldr	r2, [fp]
    f6e0:	ldr	r3, [r2, #8]
    f6e4:	and	r3, r3, #7
    f6e8:	cmp	r3, #6
    f6ec:	moveq	r3, #0
    f6f0:	streq	r3, [r2, #4]
    f6f4:	ldr	r3, [pc, #560]	; f92c <sf_bpf_optimize+0x734>
    f6f8:	ldr	r3, [r4, r3]
    f6fc:	ldr	r0, [r3]
    f700:	bl	d48 <free@plt>
    f704:	ldr	r3, [pc, #540]	; f928 <sf_bpf_optimize+0x730>
    f708:	ldr	r3, [r4, r3]
    f70c:	ldr	r0, [r3]
    f710:	bl	d48 <free@plt>
    f714:	ldr	r3, [pc, #492]	; f908 <sf_bpf_optimize+0x710>
    f718:	ldr	r3, [r4, r3]
    f71c:	ldr	r0, [r3]
    f720:	bl	d48 <free@plt>
    f724:	ldr	r3, [pc, #488]	; f914 <sf_bpf_optimize+0x71c>
    f728:	ldr	r3, [r4, r3]
    f72c:	ldr	r0, [r3]
    f730:	bl	d48 <free@plt>
    f734:	ldr	r3, [pc, #464]	; f90c <sf_bpf_optimize+0x714>
    f738:	ldr	r3, [r4, r3]
    f73c:	ldr	r0, [r3]
    f740:	bl	d48 <free@plt>
    f744:	ldr	r3, [pc, #436]	; f900 <sf_bpf_optimize+0x708>
    f748:	ldr	r3, [r4, r3]
    f74c:	ldr	r0, [r3]
    f750:	bl	d48 <free@plt>
    f754:	add	sp, sp, #36	; 0x24
    f758:	ldrd	r4, [sp]
    f75c:	ldrd	r6, [sp, #8]
    f760:	ldrd	r8, [sp, #16]
    f764:	ldrd	sl, [sp, #24]
    f768:	add	sp, sp, #32
    f76c:	pop	{pc}		; (ldr pc, [sp], #4)
    f770:	mov	r3, r2
    f774:	b	f6c0 <sf_bpf_optimize+0x4c8>
    f778:	ldr	r1, [sp, #8]
    f77c:	ldr	r0, [sp, #4]
    f780:	cmp	r3, #0
    f784:	bne	f520 <sf_bpf_optimize+0x328>
    f788:	ldr	r3, [r1, #100]	; 0x64
    f78c:	cmp	r3, #0
    f790:	moveq	r3, r1
    f794:	str	r3, [ip, #100]	; 0x64
    f798:	ldr	lr, [sp, #28]
    f79c:	ldr	r0, [sp, #24]
    f7a0:	subs	r3, r0, #1
    f7a4:	str	r3, [sp, #24]
    f7a8:	bmi	f5a0 <sf_bpf_optimize+0x3a8>
    f7ac:	sub	r3, lr, #4
    f7b0:	str	r3, [sp, #28]
    f7b4:	ldr	ip, [lr, #-4]
    f7b8:	ldr	r3, [ip, #24]
    f7bc:	cmp	r3, r6
    f7c0:	bne	f798 <sf_bpf_optimize+0x5a0>
    f7c4:	cmp	r0, r5
    f7c8:	blt	f52c <sf_bpf_optimize+0x334>
    f7cc:	b	f798 <sf_bpf_optimize+0x5a0>
    f7d0:	cmp	r3, #0
    f7d4:	beq	f7f4 <sf_bpf_optimize+0x5fc>
    f7d8:	ldr	r1, [r3]
    f7dc:	cmn	r1, #1
    f7e0:	bne	f814 <sf_bpf_optimize+0x61c>
    f7e4:	ldr	r1, [sp, #8]
    f7e8:	ldr	r0, [sp, #4]
    f7ec:	str	r2, [sp, #16]
    f7f0:	b	f84c <sf_bpf_optimize+0x654>
    f7f4:	ldr	r1, [sp, #8]
    f7f8:	b	f788 <sf_bpf_optimize+0x590>
    f7fc:	ldr	r3, [pc, #324]	; f948 <sf_bpf_optimize+0x750>
    f800:	add	r3, pc, r3
    f804:	str	r0, [r3, #880]	; 0x370
    f808:	str	r0, [r3, #884]	; 0x374
    f80c:	mov	r6, #0
    f810:	b	f444 <sf_bpf_optimize+0x24c>
    f814:	ldr	r1, [sp, #8]
    f818:	ldr	r0, [sp, #4]
    f81c:	b	f780 <sf_bpf_optimize+0x588>
    f820:	str	r1, [sp, #8]
    f824:	str	r0, [sp, #4]
    f828:	ldr	r3, [sp, #16]
    f82c:	cmp	r3, #0
    f830:	beq	f788 <sf_bpf_optimize+0x590>
    f834:	ldr	r1, [r3]
    f838:	cmn	r1, #1
    f83c:	bne	f870 <sf_bpf_optimize+0x678>
    f840:	ldr	r1, [sp, #8]
    f844:	ldr	r0, [sp, #4]
    f848:	str	r2, [sp, #16]
    f84c:	ldr	r3, [r3, #16]
    f850:	cmp	r3, #0
    f854:	beq	f514 <sf_bpf_optimize+0x31c>
    f858:	ldr	r2, [r3]
    f85c:	cmn	r2, #1
    f860:	beq	f84c <sf_bpf_optimize+0x654>
    f864:	str	r1, [sp, #8]
    f868:	str	r0, [sp, #4]
    f86c:	ldr	r2, [sp, #16]
    f870:	cmp	r2, #0
    f874:	beq	f778 <sf_bpf_optimize+0x580>
    f878:	ldr	r1, [r2]
    f87c:	ldr	r0, [r3]
    f880:	cmp	r1, r0
    f884:	bne	f590 <sf_bpf_optimize+0x398>
    f888:	ldr	r1, [r2, #12]
    f88c:	ldr	r0, [r3, #12]
    f890:	cmp	r1, r0
    f894:	bne	f598 <sf_bpf_optimize+0x3a0>
    f898:	ldr	r2, [r2, #16]
    f89c:	ldr	r3, [r3, #16]
    f8a0:	cmp	r2, #0
    f8a4:	beq	f7d0 <sf_bpf_optimize+0x5d8>
    f8a8:	ldr	r1, [r2]
    f8ac:	cmn	r1, #1
    f8b0:	bne	f8e4 <sf_bpf_optimize+0x6ec>
    f8b4:	ldr	r1, [sp, #8]
    f8b8:	ldr	r0, [sp, #4]
    f8bc:	str	r3, [sp, #16]
    f8c0:	ldr	r2, [r2, #16]
    f8c4:	cmp	r2, #0
    f8c8:	beq	f820 <sf_bpf_optimize+0x628>
    f8cc:	ldr	r3, [r2]
    f8d0:	cmn	r3, #1
    f8d4:	beq	f8c0 <sf_bpf_optimize+0x6c8>
    f8d8:	str	r1, [sp, #8]
    f8dc:	str	r0, [sp, #4]
    f8e0:	ldr	r3, [sp, #16]
    f8e4:	cmp	r3, #0
    f8e8:	bne	f834 <sf_bpf_optimize+0x63c>
    f8ec:	ldr	r1, [sp, #8]
    f8f0:	ldr	r0, [sp, #4]
    f8f4:	b	f518 <sf_bpf_optimize+0x320>
    f8f8:	.word	0x00021de0
    f8fc:	.word	0x000224fc
    f900:	.word	0x000000cc
    f904:	.word	0x000224c4
    f908:	.word	0x000000e4
    f90c:	.word	0x000000c4
    f910:	.word	0x00022450
    f914:	.word	0x000000b4
    f918:	.word	0x00022410
    f91c:	.word	0x000223c0
    f920:	.word	0x00022398
    f924:	.word	0x000222dc
    f928:	.word	0x00000100
    f92c:	.word	0x000000f4
    f930:	.word	0x0002226c
    f934:	.word	0x00005d10
    f938:	.word	0x00005d04
    f93c:	.word	0x00005cf8
    f940:	.word	0x00005cec
    f944:	.word	0x00005ce0
    f948:	.word	0x00021f28

0000f94c <sf_icode_to_fcode>:
    f94c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f950:	strd	r6, [sp, #8]
    f954:	strd	r8, [sp, #16]
    f958:	strd	sl, [sp, #24]
    f95c:	str	lr, [sp, #32]
    f960:	sub	sp, sp, #4
    f964:	mov	r8, r0
    f968:	mov	r9, r1
    f96c:	ldr	r7, [pc, #164]	; fa18 <sf_icode_to_fcode+0xcc>
    f970:	add	r7, pc, r7
    f974:	mov	sl, #0
    f978:	ldr	r6, [pc, #156]	; fa1c <sf_icode_to_fcode+0xd0>
    f97c:	add	r6, pc, r6
    f980:	ldr	r5, [r7]
    f984:	add	r3, r5, #1
    f988:	str	r3, [r7]
    f98c:	mov	r0, r8
    f990:	bl	cdd4 <count_stmts>
    f994:	str	r0, [r9]
    f998:	lsl	r4, r0, #3
    f99c:	mov	r0, r4
    f9a0:	bl	dc0 <malloc@plt>
    f9a4:	subs	fp, r0, #0
    f9a8:	beq	f9ec <sf_icode_to_fcode+0xa0>
    f9ac:	mov	r2, r4
    f9b0:	mov	r1, sl
    f9b4:	mov	r0, fp
    f9b8:	bl	e2c <memset@plt>
    f9bc:	str	fp, [r6, #900]	; 0x384
    f9c0:	add	r4, fp, r4
    f9c4:	str	r4, [r6, #896]	; 0x380
    f9c8:	add	r5, r5, #2
    f9cc:	str	r5, [r6]
    f9d0:	mov	r0, r8
    f9d4:	bl	ee28 <convert_code_r>
    f9d8:	cmp	r0, #0
    f9dc:	bne	f9f8 <sf_icode_to_fcode+0xac>
    f9e0:	mov	r0, fp
    f9e4:	bl	d48 <free@plt>
    f9e8:	b	f980 <sf_icode_to_fcode+0x34>
    f9ec:	ldr	r0, [pc, #44]	; fa20 <sf_icode_to_fcode+0xd4>
    f9f0:	add	r0, pc, r0
    f9f4:	bl	229c <sf_bpf_error>
    f9f8:	mov	r0, fp
    f9fc:	add	sp, sp, #4
    fa00:	ldrd	r4, [sp]
    fa04:	ldrd	r6, [sp, #8]
    fa08:	ldrd	r8, [sp, #16]
    fa0c:	ldrd	sl, [sp, #24]
    fa10:	add	sp, sp, #32
    fa14:	pop	{pc}		; (ldr pc, [sp], #4)
    fa18:	.word	0x00021db8
    fa1c:	.word	0x00021dac
    fa20:	.word	0x000057fc

0000fa24 <sfbpf_strcasecmp>:
    fa24:	push	{lr}		; (str lr, [sp, #-4]!)
    fa28:	sub	r0, r0, #1
    fa2c:	ldr	ip, [pc, #48]	; fa64 <sfbpf_strcasecmp+0x40>
    fa30:	add	ip, pc, ip
    fa34:	ldrb	r3, [r0, #1]!
    fa38:	ldrb	r2, [ip, r3]
    fa3c:	ldrb	lr, [r1], #1
    fa40:	ldrb	lr, [ip, lr]
    fa44:	cmp	r2, lr
    fa48:	bne	fa5c <sfbpf_strcasecmp+0x38>
    fa4c:	cmp	r3, #0
    fa50:	bne	fa34 <sfbpf_strcasecmp+0x10>
    fa54:	mov	r0, #0
    fa58:	b	fa60 <sfbpf_strcasecmp+0x3c>
    fa5c:	sub	r0, r2, lr
    fa60:	pop	{pc}		; (ldr pc, [sp], #4)
    fa64:	.word	0x000057c4

0000fa68 <pcap_next_etherent>:
    fa68:	strd	r4, [sp, #-32]!	; 0xffffffe0
    fa6c:	strd	r6, [sp, #8]
    fa70:	strd	r8, [sp, #16]
    fa74:	str	sl, [sp, #24]
    fa78:	str	lr, [sp, #28]
    fa7c:	mov	r5, r0
    fa80:	mov	r2, #128	; 0x80
    fa84:	mov	r1, #0
    fa88:	ldr	r0, [pc, #584]	; fcd8 <pcap_next_etherent+0x270>
    fa8c:	add	r0, pc, r0
    fa90:	bl	e2c <memset@plt>
    fa94:	ldr	r8, [pc, #576]	; fcdc <pcap_next_etherent+0x274>
    fa98:	add	r8, pc, r8
    fa9c:	add	r7, r8, #6
    faa0:	b	fc40 <pcap_next_etherent+0x1d8>
    faa4:	tst	r3, #512	; 0x200
    faa8:	subne	r9, r4, #87	; 0x57
    faac:	subeq	r9, r4, #55	; 0x37
    fab0:	mov	r0, r5
    fab4:	bl	ec8 <getc@plt>
    fab8:	mov	r4, r0
    fabc:	ldr	r2, [r6]
    fac0:	lsl	r3, r0, #1
    fac4:	ldrh	r3, [r2, r3]
    fac8:	tst	r3, #4096	; 0x1000
    facc:	bne	fb0c <pcap_next_etherent+0xa4>
    fad0:	strb	r9, [sl], #1
    fad4:	cmp	r4, #58	; 0x3a
    fad8:	bne	fb3c <pcap_next_etherent+0xd4>
    fadc:	mov	r0, r5
    fae0:	bl	ec8 <getc@plt>
    fae4:	mov	r4, r0
    fae8:	cmp	sl, r7
    faec:	beq	fb3c <pcap_next_etherent+0xd4>
    faf0:	ldr	r2, [r6]
    faf4:	lsl	r3, r4, #1
    faf8:	ldrh	r3, [r2, r3]
    fafc:	tst	r3, #2048	; 0x800
    fb00:	subne	r9, r4, #48	; 0x30
    fb04:	beq	faa4 <pcap_next_etherent+0x3c>
    fb08:	b	fab0 <pcap_next_etherent+0x48>
    fb0c:	lsl	r9, r9, #4
    fb10:	tst	r3, #2048	; 0x800
    fb14:	subne	r4, r0, #48	; 0x30
    fb18:	bne	fb28 <pcap_next_etherent+0xc0>
    fb1c:	tst	r3, #512	; 0x200
    fb20:	subne	r4, r4, #87	; 0x57
    fb24:	subeq	r4, r4, #55	; 0x37
    fb28:	orr	r9, r9, r4
    fb2c:	mov	r0, r5
    fb30:	bl	ec8 <getc@plt>
    fb34:	mov	r4, r0
    fb38:	b	fad0 <pcap_next_etherent+0x68>
    fb3c:	cmn	r4, #1
    fb40:	beq	fcbc <pcap_next_etherent+0x254>
    fb44:	ldr	r3, [r6]
    fb48:	lsl	r4, r4, #1
    fb4c:	ldrh	r3, [r3, r4]
    fb50:	tst	r3, #8192	; 0x2000
    fb54:	beq	fc24 <pcap_next_etherent+0x1bc>
    fb58:	mov	r0, r5
    fb5c:	bl	ec8 <getc@plt>
    fb60:	ldr	r2, [r6]
    fb64:	lsl	r3, r0, #1
    fb68:	ldrh	r3, [r2, r3]
    fb6c:	ubfx	r3, r3, #13, #1
    fb70:	cmp	r0, #10
    fb74:	moveq	r3, #0
    fb78:	andne	r3, r3, #1
    fb7c:	cmp	r3, #0
    fb80:	bne	fb58 <pcap_next_etherent+0xf0>
    fb84:	cmp	r0, #10
    fb88:	beq	fc40 <pcap_next_etherent+0x1d8>
    fb8c:	cmp	r0, #35	; 0x23
    fb90:	beq	fca4 <pcap_next_etherent+0x23c>
    fb94:	ldr	r4, [pc, #324]	; fce0 <pcap_next_etherent+0x278>
    fb98:	add	r4, pc, r4
    fb9c:	add	r4, r4, #6
    fba0:	ldr	r7, [pc, #316]	; fce4 <pcap_next_etherent+0x27c>
    fba4:	add	r7, pc, r7
    fba8:	add	r7, r7, #127	; 0x7f
    fbac:	strb	r0, [r4], #1
    fbb0:	mov	r0, r5
    fbb4:	bl	ec8 <getc@plt>
    fbb8:	ldr	r2, [r6]
    fbbc:	lsl	r3, r0, #1
    fbc0:	ldrh	r3, [r2, r3]
    fbc4:	eor	r3, r3, #8192	; 0x2000
    fbc8:	adds	r2, r0, #1
    fbcc:	movne	r2, #1
    fbd0:	ands	r3, r2, r3, lsr #13
    fbd4:	beq	fbe0 <pcap_next_etherent+0x178>
    fbd8:	cmp	r4, r7
    fbdc:	bne	fbac <pcap_next_etherent+0x144>
    fbe0:	mov	r3, #0
    fbe4:	strb	r3, [r4]
    fbe8:	cmp	r0, #10
    fbec:	beq	fcc4 <pcap_next_etherent+0x25c>
    fbf0:	mov	r0, r5
    fbf4:	bl	ec8 <getc@plt>
    fbf8:	cmp	r0, #10
    fbfc:	cmnne	r0, #1
    fc00:	bne	fbf0 <pcap_next_etherent+0x188>
    fc04:	ldr	r0, [pc, #220]	; fce8 <pcap_next_etherent+0x280>
    fc08:	add	r0, pc, r0
    fc0c:	ldrd	r4, [sp]
    fc10:	ldrd	r6, [sp, #8]
    fc14:	ldrd	r8, [sp, #16]
    fc18:	ldr	sl, [sp, #24]
    fc1c:	add	sp, sp, #28
    fc20:	pop	{pc}		; (ldr pc, [sp], #4)
    fc24:	mov	r0, r5
    fc28:	bl	ec8 <getc@plt>
    fc2c:	cmp	r0, #10
    fc30:	cmnne	r0, #1
    fc34:	bne	fc24 <pcap_next_etherent+0x1bc>
    fc38:	cmn	r0, #1
    fc3c:	beq	fcd0 <pcap_next_etherent+0x268>
    fc40:	mov	r0, r5
    fc44:	bl	ec8 <getc@plt>
    fc48:	mov	r4, r0
    fc4c:	bl	dd8 <__ctype_b_loc@plt>
    fc50:	mov	r6, r0
    fc54:	ldr	r2, [r0]
    fc58:	lsl	r3, r4, #1
    fc5c:	ldrh	r2, [r2, r3]
    fc60:	ubfx	r3, r2, #13, #1
    fc64:	cmp	r4, #10
    fc68:	moveq	r3, #0
    fc6c:	andne	r3, r3, #1
    fc70:	cmp	r3, #0
    fc74:	bne	fc40 <pcap_next_etherent+0x1d8>
    fc78:	cmp	r4, #10
    fc7c:	beq	fc40 <pcap_next_etherent+0x1d8>
    fc80:	tst	r2, #4096	; 0x1000
    fc84:	movne	sl, r8
    fc88:	bne	faf0 <pcap_next_etherent+0x88>
    fc8c:	mov	r0, r5
    fc90:	bl	ec8 <getc@plt>
    fc94:	cmp	r0, #10
    fc98:	cmnne	r0, #1
    fc9c:	bne	fc8c <pcap_next_etherent+0x224>
    fca0:	b	fc38 <pcap_next_etherent+0x1d0>
    fca4:	mov	r0, r5
    fca8:	bl	ec8 <getc@plt>
    fcac:	cmp	r0, #10
    fcb0:	cmnne	r0, #1
    fcb4:	bne	fca4 <pcap_next_etherent+0x23c>
    fcb8:	b	fc38 <pcap_next_etherent+0x1d0>
    fcbc:	mov	r0, #0
    fcc0:	b	fc0c <pcap_next_etherent+0x1a4>
    fcc4:	ldr	r0, [pc, #32]	; fcec <pcap_next_etherent+0x284>
    fcc8:	add	r0, pc, r0
    fccc:	b	fc0c <pcap_next_etherent+0x1a4>
    fcd0:	mov	r0, #0
    fcd4:	b	fc0c <pcap_next_etherent+0x1a4>
    fcd8:	.word	0x00022024
    fcdc:	.word	0x00022018
    fce0:	.word	0x00021f18
    fce4:	.word	0x00021f0c
    fce8:	.word	0x00021ea8
    fcec:	.word	0x00021de8

0000fcf0 <str2tok>:
    fcf0:	strd	r4, [sp, #-16]!
    fcf4:	str	r6, [sp, #8]
    fcf8:	str	lr, [sp, #12]
    fcfc:	mov	r5, r0
    fd00:	ldr	r0, [r1, #4]
    fd04:	cmp	r0, #0
    fd08:	beq	fd4c <str2tok+0x5c>
    fd0c:	mov	r4, r1
    fd10:	mov	r1, r5
    fd14:	bl	fa24 <sfbpf_strcasecmp>
    fd18:	cmp	r0, #0
    fd1c:	beq	fd38 <str2tok+0x48>
    fd20:	add	r4, r4, #8
    fd24:	ldr	r0, [r4, #4]
    fd28:	cmp	r0, #0
    fd2c:	bne	fd10 <str2tok+0x20>
    fd30:	mvn	r0, #0
    fd34:	b	fd3c <str2tok+0x4c>
    fd38:	ldr	r0, [r4]
    fd3c:	ldrd	r4, [sp]
    fd40:	ldr	r6, [sp, #8]
    fd44:	add	sp, sp, #12
    fd48:	pop	{pc}		; (ldr pc, [sp], #4)
    fd4c:	mvn	r0, #0
    fd50:	b	fd3c <str2tok+0x4c>

0000fd54 <sfbpf_parse>:
    fd54:	strd	r4, [sp, #-36]!	; 0xffffffdc
    fd58:	strd	r6, [sp, #8]
    fd5c:	strd	r8, [sp, #16]
    fd60:	strd	sl, [sp, #24]
    fd64:	str	lr, [sp, #32]
    fd68:	sub	sp, sp, #3648	; 0xe40
    fd6c:	sub	sp, sp, #4
    fd70:	ldr	sl, [pc, #4080]	; 10d68 <sfbpf_parse+0x1014>
    fd74:	add	sl, pc, sl
    fd78:	ldr	r3, [pc, #4076]	; 10d6c <sfbpf_parse+0x1018>
    fd7c:	ldr	r3, [sl, r3]
    fd80:	mov	r4, #0
    fd84:	str	r4, [r3]
    fd88:	ldr	r3, [pc, #4064]	; 10d70 <sfbpf_parse+0x101c>
    fd8c:	ldr	r3, [sl, r3]
    fd90:	mvn	r2, #1
    fd94:	str	r2, [r3]
    fd98:	add	r3, sp, #3248	; 0xcb0
    fd9c:	strh	r4, [r3]
    fda0:	mov	fp, #200	; 0xc8
    fda4:	add	r5, sp, #48	; 0x30
    fda8:	str	r5, [sp, #12]
    fdac:	mov	r6, r3
    fdb0:	str	r3, [sp, #4]
    fdb4:	ldr	r3, [pc, #4024]	; 10d74 <sfbpf_parse+0x1020>
    fdb8:	add	r3, pc, r3
    fdbc:	sub	r3, r3, #3888	; 0xf30
    fdc0:	sub	r3, r3, #12
    fdc4:	str	r3, [sp, #16]
    fdc8:	ldr	r3, [pc, #4008]	; 10d78 <sfbpf_parse+0x1024>
    fdcc:	add	r3, pc, r3
    fdd0:	add	r3, r3, #400	; 0x190
    fdd4:	str	r3, [sp, #20]
    fdd8:	b	103c4 <sfbpf_parse+0x670>
    fddc:	bl	11c88 <sfbpf_lex>
    fde0:	ldr	r3, [pc, #3976]	; 10d70 <sfbpf_parse+0x101c>
    fde4:	ldr	r3, [sl, r3]
    fde8:	str	r0, [r3]
    fdec:	b	103f0 <sfbpf_parse+0x69c>
    fdf0:	ldr	r3, [pc, #3960]	; 10d70 <sfbpf_parse+0x101c>
    fdf4:	ldr	r3, [sl, r3]
    fdf8:	mov	r2, #0
    fdfc:	str	r2, [r3]
    fe00:	add	r7, r2, r7
    fe04:	movw	r3, #669	; 0x29d
    fe08:	cmp	r7, r3
    fe0c:	bhi	fe80 <sfbpf_parse+0x12c>
    fe10:	ldr	r3, [pc, #3940]	; 10d7c <sfbpf_parse+0x1028>
    fe14:	add	r3, pc, r3
    fe18:	lsl	r1, r7, #1
    fe1c:	add	r3, r3, #916	; 0x394
    fe20:	ldrsh	r3, [r3, r1]
    fe24:	cmp	r3, r2
    fe28:	bne	fe80 <sfbpf_parse+0x12c>
    fe2c:	ldr	r3, [pc, #3916]	; 10d80 <sfbpf_parse+0x102c>
    fe30:	add	r3, pc, r3
    fe34:	add	r3, r3, #2256	; 0x8d0
    fe38:	ldrsh	r4, [r3, r1]
    fe3c:	cmp	r4, #0
    fe40:	rsble	r4, r4, #0
    fe44:	ble	fe98 <sfbpf_parse+0x144>
    fe48:	ldr	r3, [pc, #3872]	; 10d70 <sfbpf_parse+0x101c>
    fe4c:	ldr	r3, [sl, r3]
    fe50:	mvn	r2, #1
    fe54:	str	r2, [r3]
    fe58:	add	r1, r5, #16
    fe5c:	ldr	r3, [pc, #3872]	; 10d84 <sfbpf_parse+0x1030>
    fe60:	ldr	r0, [sl, r3]
    fe64:	ldrd	r2, [r0]
    fe68:	strd	r2, [r5, #16]
    fe6c:	ldrd	r2, [r0, #8]
    fe70:	strd	r2, [r5, #24]
    fe74:	mov	r5, r1
    fe78:	mov	r7, r6
    fe7c:	b	102dc <sfbpf_parse+0x588>
    fe80:	ldr	r3, [pc, #3840]	; 10d88 <sfbpf_parse+0x1034>
    fe84:	add	r3, pc, r3
    fe88:	add	r4, r3, r4
    fe8c:	ldrb	r4, [r4, #3596]	; 0xe0c
    fe90:	cmp	r4, #0
    fe94:	beq	10208 <sfbpf_parse+0x4b4>
    fe98:	ldr	r3, [pc, #3820]	; 10d8c <sfbpf_parse+0x1038>
    fe9c:	add	r3, pc, r3
    fea0:	add	r3, r3, r4
    fea4:	ldrb	r7, [r3, #3872]	; 0xf20
    fea8:	rsb	r3, r7, #1
    feac:	lsl	r3, r3, #4
    feb0:	add	r1, r5, r3
    feb4:	ldrd	r2, [r3, r5]
    feb8:	strd	r2, [sp, #32]
    febc:	ldrd	r2, [r1, #8]
    fec0:	strd	r2, [sp, #40]	; 0x28
    fec4:	ldr	r3, [r1, #4]
    fec8:	str	r3, [sp, #8]
    fecc:	ldr	r9, [r1, #8]
    fed0:	ldr	r8, [r1, #12]
    fed4:	sub	r3, r4, #2
    fed8:	cmp	r3, #200	; 0xc8
    fedc:	addls	pc, pc, r3, lsl #2
    fee0:	b	1024c <sfbpf_parse+0x4f8>
    fee4:	b	10428 <sfbpf_parse+0x6d4>
    fee8:	b	1024c <sfbpf_parse+0x4f8>
    feec:	b	10434 <sfbpf_parse+0x6e0>
    fef0:	b	1024c <sfbpf_parse+0x4f8>
    fef4:	b	10448 <sfbpf_parse+0x6f4>
    fef8:	b	10478 <sfbpf_parse+0x724>
    fefc:	b	104a8 <sfbpf_parse+0x754>
    ff00:	b	104d8 <sfbpf_parse+0x784>
    ff04:	b	10508 <sfbpf_parse+0x7b4>
    ff08:	b	1052c <sfbpf_parse+0x7d8>
    ff0c:	b	1024c <sfbpf_parse+0x4f8>
    ff10:	b	10550 <sfbpf_parse+0x7fc>
    ff14:	b	1056c <sfbpf_parse+0x818>
    ff18:	b	10590 <sfbpf_parse+0x83c>
    ff1c:	b	105a8 <sfbpf_parse+0x854>
    ff20:	b	105c8 <sfbpf_parse+0x874>
    ff24:	b	105e8 <sfbpf_parse+0x894>
    ff28:	b	1065c <sfbpf_parse+0x908>
    ff2c:	b	1067c <sfbpf_parse+0x928>
    ff30:	b	1069c <sfbpf_parse+0x948>
    ff34:	b	106c4 <sfbpf_parse+0x970>
    ff38:	b	106ec <sfbpf_parse+0x998>
    ff3c:	b	10718 <sfbpf_parse+0x9c4>
    ff40:	b	1073c <sfbpf_parse+0x9e8>
    ff44:	b	1024c <sfbpf_parse+0x4f8>
    ff48:	b	10760 <sfbpf_parse+0xa0c>
    ff4c:	b	10790 <sfbpf_parse+0xa3c>
    ff50:	b	107c0 <sfbpf_parse+0xa6c>
    ff54:	b	1024c <sfbpf_parse+0x4f8>
    ff58:	b	1024c <sfbpf_parse+0x4f8>
    ff5c:	b	107dc <sfbpf_parse+0xa88>
    ff60:	b	10808 <sfbpf_parse+0xab4>
    ff64:	b	10824 <sfbpf_parse+0xad0>
    ff68:	b	10840 <sfbpf_parse+0xaec>
    ff6c:	b	1085c <sfbpf_parse+0xb08>
    ff70:	b	10878 <sfbpf_parse+0xb24>
    ff74:	b	10894 <sfbpf_parse+0xb40>
    ff78:	b	108b0 <sfbpf_parse+0xb5c>
    ff7c:	b	108d4 <sfbpf_parse+0xb80>
    ff80:	b	108e4 <sfbpf_parse+0xb90>
    ff84:	b	10904 <sfbpf_parse+0xbb0>
    ff88:	b	10930 <sfbpf_parse+0xbdc>
    ff8c:	b	1095c <sfbpf_parse+0xc08>
    ff90:	b	10974 <sfbpf_parse+0xc20>
    ff94:	b	10994 <sfbpf_parse+0xc40>
    ff98:	b	109b4 <sfbpf_parse+0xc60>
    ff9c:	b	109cc <sfbpf_parse+0xc78>
    ffa0:	b	109ec <sfbpf_parse+0xc98>
    ffa4:	b	1024c <sfbpf_parse+0x4f8>
    ffa8:	b	10a04 <sfbpf_parse+0xcb0>
    ffac:	b	10a10 <sfbpf_parse+0xcbc>
    ffb0:	b	10a1c <sfbpf_parse+0xcc8>
    ffb4:	b	10a28 <sfbpf_parse+0xcd4>
    ffb8:	b	10a34 <sfbpf_parse+0xce0>
    ffbc:	b	10a40 <sfbpf_parse+0xcec>
    ffc0:	b	10a4c <sfbpf_parse+0xcf8>
    ffc4:	b	10a58 <sfbpf_parse+0xd04>
    ffc8:	b	10a64 <sfbpf_parse+0xd10>
    ffcc:	b	10a70 <sfbpf_parse+0xd1c>
    ffd0:	b	10a7c <sfbpf_parse+0xd28>
    ffd4:	b	10a88 <sfbpf_parse+0xd34>
    ffd8:	b	10a94 <sfbpf_parse+0xd40>
    ffdc:	b	10aa0 <sfbpf_parse+0xd4c>
    ffe0:	b	10aac <sfbpf_parse+0xd58>
    ffe4:	b	10ab8 <sfbpf_parse+0xd64>
    ffe8:	b	10ac4 <sfbpf_parse+0xd70>
    ffec:	b	10ad0 <sfbpf_parse+0xd7c>
    fff0:	b	10adc <sfbpf_parse+0xd88>
    fff4:	b	10ae8 <sfbpf_parse+0xd94>
    fff8:	b	10af4 <sfbpf_parse+0xda0>
    fffc:	b	10b00 <sfbpf_parse+0xdac>
   10000:	b	10b0c <sfbpf_parse+0xdb8>
   10004:	b	10b18 <sfbpf_parse+0xdc4>
   10008:	b	10b24 <sfbpf_parse+0xdd0>
   1000c:	b	10b30 <sfbpf_parse+0xddc>
   10010:	b	10b3c <sfbpf_parse+0xde8>
   10014:	b	10b48 <sfbpf_parse+0xdf4>
   10018:	b	10b54 <sfbpf_parse+0xe00>
   1001c:	b	10b60 <sfbpf_parse+0xe0c>
   10020:	b	10b6c <sfbpf_parse+0xe18>
   10024:	b	10b78 <sfbpf_parse+0xe24>
   10028:	b	10b84 <sfbpf_parse+0xe30>
   1002c:	b	10b90 <sfbpf_parse+0xe3c>
   10030:	b	10b9c <sfbpf_parse+0xe48>
   10034:	b	10ba8 <sfbpf_parse+0xe54>
   10038:	b	10bb4 <sfbpf_parse+0xe60>
   1003c:	b	10bc0 <sfbpf_parse+0xe6c>
   10040:	b	10bcc <sfbpf_parse+0xe78>
   10044:	b	10bd8 <sfbpf_parse+0xe84>
   10048:	b	10be4 <sfbpf_parse+0xe90>
   1004c:	b	10bf0 <sfbpf_parse+0xe9c>
   10050:	b	10bfc <sfbpf_parse+0xea8>
   10054:	b	10c08 <sfbpf_parse+0xeb4>
   10058:	b	10c14 <sfbpf_parse+0xec0>
   1005c:	b	10c20 <sfbpf_parse+0xecc>
   10060:	b	10c2c <sfbpf_parse+0xed8>
   10064:	b	10c38 <sfbpf_parse+0xee4>
   10068:	b	10c44 <sfbpf_parse+0xef0>
   1006c:	b	10c50 <sfbpf_parse+0xefc>
   10070:	b	10c5c <sfbpf_parse+0xf08>
   10074:	b	10c68 <sfbpf_parse+0xf14>
   10078:	b	10c74 <sfbpf_parse+0xf20>
   1007c:	b	10c80 <sfbpf_parse+0xf2c>
   10080:	b	10c8c <sfbpf_parse+0xf38>
   10084:	b	10c9c <sfbpf_parse+0xf48>
   10088:	b	10cac <sfbpf_parse+0xf58>
   1008c:	b	10cbc <sfbpf_parse+0xf68>
   10090:	b	10ccc <sfbpf_parse+0xf78>
   10094:	b	10ce4 <sfbpf_parse+0xf90>
   10098:	b	10cf4 <sfbpf_parse+0xfa0>
   1009c:	b	10d04 <sfbpf_parse+0xfb0>
   100a0:	b	10d14 <sfbpf_parse+0xfc0>
   100a4:	b	10d24 <sfbpf_parse+0xfd0>
   100a8:	b	10d34 <sfbpf_parse+0xfe0>
   100ac:	b	10d44 <sfbpf_parse+0xff0>
   100b0:	b	10d50 <sfbpf_parse+0xffc>
   100b4:	b	10d5c <sfbpf_parse+0x1008>
   100b8:	b	10e44 <sfbpf_parse+0x10f0>
   100bc:	b	10e50 <sfbpf_parse+0x10fc>
   100c0:	b	10e60 <sfbpf_parse+0x110c>
   100c4:	b	10e70 <sfbpf_parse+0x111c>
   100c8:	b	10e80 <sfbpf_parse+0x112c>
   100cc:	b	10e90 <sfbpf_parse+0x113c>
   100d0:	b	10ea0 <sfbpf_parse+0x114c>
   100d4:	b	10eb0 <sfbpf_parse+0x115c>
   100d8:	b	10ecc <sfbpf_parse+0x1178>
   100dc:	b	10ee0 <sfbpf_parse+0x118c>
   100e0:	b	10ef4 <sfbpf_parse+0x11a0>
   100e4:	b	1024c <sfbpf_parse+0x4f8>
   100e8:	b	10f04 <sfbpf_parse+0x11b0>
   100ec:	b	1024c <sfbpf_parse+0x4f8>
   100f0:	b	10f30 <sfbpf_parse+0x11dc>
   100f4:	b	10fa0 <sfbpf_parse+0x124c>
   100f8:	b	1024c <sfbpf_parse+0x4f8>
   100fc:	b	1101c <sfbpf_parse+0x12c8>
   10100:	b	110b4 <sfbpf_parse+0x1360>
   10104:	b	110c0 <sfbpf_parse+0x136c>
   10108:	b	110cc <sfbpf_parse+0x1378>
   1010c:	b	110d8 <sfbpf_parse+0x1384>
   10110:	b	110e4 <sfbpf_parse+0x1390>
   10114:	b	110f0 <sfbpf_parse+0x139c>
   10118:	b	110fc <sfbpf_parse+0x13a8>
   1011c:	b	11108 <sfbpf_parse+0x13b4>
   10120:	b	11114 <sfbpf_parse+0x13c0>
   10124:	b	11120 <sfbpf_parse+0x13cc>
   10128:	b	1024c <sfbpf_parse+0x4f8>
   1012c:	b	11130 <sfbpf_parse+0x13dc>
   10130:	b	11148 <sfbpf_parse+0x13f4>
   10134:	b	11160 <sfbpf_parse+0x140c>
   10138:	b	11178 <sfbpf_parse+0x1424>
   1013c:	b	11190 <sfbpf_parse+0x143c>
   10140:	b	111a8 <sfbpf_parse+0x1454>
   10144:	b	111c0 <sfbpf_parse+0x146c>
   10148:	b	111d8 <sfbpf_parse+0x1484>
   1014c:	b	111f0 <sfbpf_parse+0x149c>
   10150:	b	11208 <sfbpf_parse+0x14b4>
   10154:	b	11220 <sfbpf_parse+0x14cc>
   10158:	b	11230 <sfbpf_parse+0x14dc>
   1015c:	b	1123c <sfbpf_parse+0x14e8>
   10160:	b	11248 <sfbpf_parse+0x14f4>
   10164:	b	11254 <sfbpf_parse+0x1500>
   10168:	b	11260 <sfbpf_parse+0x150c>
   1016c:	b	1126c <sfbpf_parse+0x1518>
   10170:	b	11278 <sfbpf_parse+0x1524>
   10174:	b	1024c <sfbpf_parse+0x4f8>
   10178:	b	11284 <sfbpf_parse+0x1530>
   1017c:	b	11290 <sfbpf_parse+0x153c>
   10180:	b	1129c <sfbpf_parse+0x1548>
   10184:	b	112a8 <sfbpf_parse+0x1554>
   10188:	b	112b4 <sfbpf_parse+0x1560>
   1018c:	b	112c0 <sfbpf_parse+0x156c>
   10190:	b	112cc <sfbpf_parse+0x1578>
   10194:	b	112d8 <sfbpf_parse+0x1584>
   10198:	b	112e4 <sfbpf_parse+0x1590>
   1019c:	b	112f0 <sfbpf_parse+0x159c>
   101a0:	b	112fc <sfbpf_parse+0x15a8>
   101a4:	b	11308 <sfbpf_parse+0x15b4>
   101a8:	b	11314 <sfbpf_parse+0x15c0>
   101ac:	b	10244 <sfbpf_parse+0x4f0>
   101b0:	b	11320 <sfbpf_parse+0x15cc>
   101b4:	b	1024c <sfbpf_parse+0x4f8>
   101b8:	b	1132c <sfbpf_parse+0x15d8>
   101bc:	b	11348 <sfbpf_parse+0x15f4>
   101c0:	b	11364 <sfbpf_parse+0x1610>
   101c4:	b	1137c <sfbpf_parse+0x1628>
   101c8:	b	1024c <sfbpf_parse+0x4f8>
   101cc:	b	113ac <sfbpf_parse+0x1658>
   101d0:	b	113dc <sfbpf_parse+0x1688>
   101d4:	b	113e8 <sfbpf_parse+0x1694>
   101d8:	b	113f4 <sfbpf_parse+0x16a0>
   101dc:	b	11400 <sfbpf_parse+0x16ac>
   101e0:	b	11408 <sfbpf_parse+0x16b4>
   101e4:	b	11410 <sfbpf_parse+0x16bc>
   101e8:	b	11418 <sfbpf_parse+0x16c4>
   101ec:	b	1024c <sfbpf_parse+0x4f8>
   101f0:	b	11420 <sfbpf_parse+0x16cc>
   101f4:	b	1143c <sfbpf_parse+0x16e8>
   101f8:	b	11458 <sfbpf_parse+0x1704>
   101fc:	b	11470 <sfbpf_parse+0x171c>
   10200:	b	1024c <sfbpf_parse+0x4f8>
   10204:	b	1149c <sfbpf_parse+0x1748>
   10208:	ldr	r3, [pc, #2908]	; 10d6c <sfbpf_parse+0x1018>
   1020c:	ldr	r2, [sl, r3]
   10210:	ldr	r3, [r2]
   10214:	add	r3, r3, #1
   10218:	str	r3, [r2]
   1021c:	ldr	r2, [pc, #2924]	; 10d90 <sfbpf_parse+0x103c>
   10220:	add	r2, pc, r2
   10224:	ldr	r3, [r2]
   10228:	add	r3, r3, #1
   1022c:	str	r3, [r2]
   10230:	ldr	r1, [pc, #2908]	; 10d94 <sfbpf_parse+0x1040>
   10234:	add	r1, pc, r1
   10238:	ldr	r0, [pc, #2904]	; 10d98 <sfbpf_parse+0x1044>
   1023c:	add	r0, pc, r0
   10240:	bl	229c <sf_bpf_error>
   10244:	mov	r3, #51	; 0x33
   10248:	str	r3, [sp, #8]
   1024c:	sub	r0, r5, r7, lsl #4
   10250:	sub	r7, r6, r7, lsl #1
   10254:	add	r5, r0, #16
   10258:	ldr	r3, [sp, #8]
   1025c:	str	r3, [sp, #36]	; 0x24
   10260:	str	r9, [sp, #40]	; 0x28
   10264:	str	r8, [sp, #44]	; 0x2c
   10268:	ldrd	r2, [sp, #32]
   1026c:	strd	r2, [r0, #16]
   10270:	ldrd	r2, [sp, #40]	; 0x28
   10274:	strd	r2, [r5, #8]
   10278:	ldr	r3, [pc, #2844]	; 10d9c <sfbpf_parse+0x1048>
   1027c:	add	r3, pc, r3
   10280:	add	r4, r3, r4
   10284:	ldrb	r3, [r4, #4080]	; 0xff0
   10288:	sub	r3, r3, #126	; 0x7e
   1028c:	ldrsh	r0, [r7]
   10290:	lsl	r2, r3, #1
   10294:	ldr	r1, [sp, #16]
   10298:	ldrsh	r2, [r1, r2]
   1029c:	add	r2, r2, r0
   102a0:	movw	r1, #669	; 0x29d
   102a4:	cmp	r2, r1
   102a8:	bhi	102c8 <sfbpf_parse+0x574>
   102ac:	ldr	r1, [pc, #2796]	; 10da0 <sfbpf_parse+0x104c>
   102b0:	add	r1, pc, r1
   102b4:	lsl	ip, r2, #1
   102b8:	add	r1, r1, #916	; 0x394
   102bc:	ldrsh	r1, [r1, ip]
   102c0:	cmp	r1, r0
   102c4:	beq	114cc <sfbpf_parse+0x1778>
   102c8:	ldr	r2, [pc, #2772]	; 10da4 <sfbpf_parse+0x1050>
   102cc:	add	r2, pc, r2
   102d0:	lsl	r3, r3, #1
   102d4:	sub	r2, r2, #3808	; 0xee0
   102d8:	ldrsh	r4, [r2, r3]
   102dc:	add	r6, r7, #2
   102e0:	strh	r4, [r7, #2]
   102e4:	sub	r3, fp, #-2147483647	; 0x80000001
   102e8:	lsl	r3, r3, #1
   102ec:	ldr	r7, [sp, #4]
   102f0:	add	r2, r7, r3
   102f4:	cmp	r6, r2
   102f8:	bcc	103bc <sfbpf_parse+0x668>
   102fc:	sub	r5, r6, r7
   10300:	asr	r5, r5, #1
   10304:	add	r5, r5, #1
   10308:	movw	r2, #9999	; 0x270f
   1030c:	cmp	fp, r2
   10310:	bhi	114e0 <sfbpf_parse+0x178c>
   10314:	add	r3, r3, #2
   10318:	movw	fp, #10000	; 0x2710
   1031c:	cmp	r3, fp
   10320:	movcc	fp, r3
   10324:	add	r0, fp, fp, lsl #3
   10328:	lsl	r0, r0, #1
   1032c:	add	r0, r0, #15
   10330:	bl	dc0 <malloc@plt>
   10334:	subs	r9, r0, #0
   10338:	beq	114e0 <sfbpf_parse+0x178c>
   1033c:	str	r9, [sp, #8]
   10340:	lsl	r6, r5, #1
   10344:	mov	r2, r6
   10348:	str	r7, [sp, #4]
   1034c:	mov	r1, r7
   10350:	mov	r0, r9
   10354:	bl	d6c <memcpy@plt>
   10358:	lsl	r8, fp, #1
   1035c:	add	r7, r8, #15
   10360:	bic	r7, r7, #15
   10364:	add	r7, r9, r7
   10368:	lsl	r5, r5, #4
   1036c:	mov	r2, r5
   10370:	ldr	r1, [sp, #12]
   10374:	mov	r0, r7
   10378:	bl	d6c <memcpy@plt>
   1037c:	add	r3, sp, #3248	; 0xcb0
   10380:	ldr	r2, [sp, #4]
   10384:	cmp	r2, r3
   10388:	beq	10394 <sfbpf_parse+0x640>
   1038c:	mov	r0, r2
   10390:	bl	d48 <free@plt>
   10394:	sub	r6, r6, #2
   10398:	add	r6, r9, r6
   1039c:	sub	r5, r5, #16
   103a0:	add	r5, r7, r5
   103a4:	sub	r8, r8, #2
   103a8:	add	r8, r9, r8
   103ac:	cmp	r6, r8
   103b0:	bcs	11568 <sfbpf_parse+0x1814>
   103b4:	str	r7, [sp, #12]
   103b8:	str	r9, [sp, #4]
   103bc:	cmp	r4, #3
   103c0:	beq	11508 <sfbpf_parse+0x17b4>
   103c4:	lsl	r3, r4, #1
   103c8:	ldr	r2, [pc, #2520]	; 10da8 <sfbpf_parse+0x1054>
   103cc:	add	r2, pc, r2
   103d0:	ldrsh	r7, [r2, r3]
   103d4:	cmn	r7, #198	; 0xc6
   103d8:	beq	fe80 <sfbpf_parse+0x12c>
   103dc:	ldr	r3, [pc, #2444]	; 10d70 <sfbpf_parse+0x101c>
   103e0:	ldr	r3, [sl, r3]
   103e4:	ldr	r3, [r3]
   103e8:	cmn	r3, #2
   103ec:	beq	fddc <sfbpf_parse+0x88>
   103f0:	ldr	r3, [pc, #2424]	; 10d70 <sfbpf_parse+0x101c>
   103f4:	ldr	r3, [sl, r3]
   103f8:	ldr	r3, [r3]
   103fc:	cmp	r3, #0
   10400:	ble	fdf0 <sfbpf_parse+0x9c>
   10404:	movw	r2, #365	; 0x16d
   10408:	cmp	r3, r2
   1040c:	movhi	r2, #2
   10410:	bhi	fe00 <sfbpf_parse+0xac>
   10414:	ldr	r2, [pc, #2448]	; 10dac <sfbpf_parse+0x1058>
   10418:	add	r2, pc, r2
   1041c:	add	r3, r2, r3
   10420:	ldrb	r2, [r3, #548]	; 0x224
   10424:	b	fe00 <sfbpf_parse+0xac>
   10428:	ldr	r0, [r5, #12]
   1042c:	bl	3b70 <sf_finish_parse>
   10430:	b	1024c <sfbpf_parse+0x4f8>
   10434:	ldr	r3, [pc, #2420]	; 10db0 <sfbpf_parse+0x105c>
   10438:	add	r3, pc, r3
   1043c:	ldr	r3, [r3, #4076]	; 0xfec
   10440:	str	r3, [sp, #32]
   10444:	b	1024c <sfbpf_parse+0x4f8>
   10448:	ldr	r8, [r5, #12]
   1044c:	mov	r1, r8
   10450:	ldr	r0, [r5, #-20]	; 0xffffffec
   10454:	bl	3a30 <sf_gen_and>
   10458:	ldrd	r2, [r5]
   1045c:	strd	r2, [sp, #32]
   10460:	ldrd	r2, [r5, #8]
   10464:	strd	r2, [sp, #40]	; 0x28
   10468:	ldr	r3, [r5, #4]
   1046c:	str	r3, [sp, #8]
   10470:	ldr	r9, [r5, #8]
   10474:	b	1024c <sfbpf_parse+0x4f8>
   10478:	ldr	r8, [r5, #12]
   1047c:	mov	r1, r8
   10480:	ldr	r0, [r5, #-20]	; 0xffffffec
   10484:	bl	3a30 <sf_gen_and>
   10488:	ldrd	r2, [r5]
   1048c:	strd	r2, [sp, #32]
   10490:	ldrd	r2, [r5, #8]
   10494:	strd	r2, [sp, #40]	; 0x28
   10498:	ldr	r3, [r5, #4]
   1049c:	str	r3, [sp, #8]
   104a0:	ldr	r9, [r5, #8]
   104a4:	b	1024c <sfbpf_parse+0x4f8>
   104a8:	ldr	r8, [r5, #12]
   104ac:	mov	r1, r8
   104b0:	ldr	r0, [r5, #-20]	; 0xffffffec
   104b4:	bl	3ac0 <sf_gen_or>
   104b8:	ldrd	r2, [r5]
   104bc:	strd	r2, [sp, #32]
   104c0:	ldrd	r2, [r5, #8]
   104c4:	strd	r2, [sp, #40]	; 0x28
   104c8:	ldr	r3, [r5, #4]
   104cc:	str	r3, [sp, #8]
   104d0:	ldr	r9, [r5, #8]
   104d4:	b	1024c <sfbpf_parse+0x4f8>
   104d8:	ldr	r8, [r5, #12]
   104dc:	mov	r1, r8
   104e0:	ldr	r0, [r5, #-20]	; 0xffffffec
   104e4:	bl	3ac0 <sf_gen_or>
   104e8:	ldrd	r2, [r5]
   104ec:	strd	r2, [sp, #32]
   104f0:	ldrd	r2, [r5, #8]
   104f4:	strd	r2, [sp, #40]	; 0x28
   104f8:	ldr	r3, [r5, #4]
   104fc:	str	r3, [sp, #8]
   10500:	ldr	r9, [r5, #8]
   10504:	b	1024c <sfbpf_parse+0x4f8>
   10508:	ldrd	r2, [r5, #-16]
   1050c:	strd	r2, [sp, #32]
   10510:	ldrd	r2, [r5, #-8]
   10514:	strd	r2, [sp, #40]	; 0x28
   10518:	ldr	r3, [r5, #-12]
   1051c:	str	r3, [sp, #8]
   10520:	ldr	r9, [r5, #-8]
   10524:	ldr	r8, [r5, #-4]
   10528:	b	1024c <sfbpf_parse+0x4f8>
   1052c:	ldrd	r2, [r5, #-16]
   10530:	strd	r2, [sp, #32]
   10534:	ldrd	r2, [r5, #-8]
   10538:	strd	r2, [sp, #40]	; 0x28
   1053c:	ldr	r3, [r5, #-12]
   10540:	str	r3, [sp, #8]
   10544:	ldr	r9, [r5, #-8]
   10548:	ldr	r8, [r5, #-4]
   1054c:	b	1024c <sfbpf_parse+0x4f8>
   10550:	ldr	r2, [r5, #-16]
   10554:	str	r2, [sp, #32]
   10558:	ldr	r1, [r5]
   1055c:	mov	r0, #0
   10560:	bl	ac34 <sf_gen_ncode>
   10564:	mov	r8, r0
   10568:	b	1024c <sfbpf_parse+0x4f8>
   1056c:	ldrd	r2, [r5, #-16]
   10570:	strd	r2, [sp, #32]
   10574:	ldrd	r2, [r5, #-8]
   10578:	strd	r2, [sp, #40]	; 0x28
   1057c:	ldr	r3, [r5, #-12]
   10580:	str	r3, [sp, #8]
   10584:	ldr	r9, [r5, #-8]
   10588:	ldr	r8, [r5, #-4]
   1058c:	b	1024c <sfbpf_parse+0x4f8>
   10590:	ldr	r1, [r5, #-16]
   10594:	str	r1, [sp, #32]
   10598:	ldr	r0, [r5]
   1059c:	bl	a3d4 <sf_gen_scode>
   105a0:	mov	r8, r0
   105a4:	b	1024c <sfbpf_parse+0x4f8>
   105a8:	ldr	r3, [r5, #-48]	; 0xffffffd0
   105ac:	str	r3, [sp, #32]
   105b0:	ldr	r2, [r5]
   105b4:	mov	r1, #0
   105b8:	ldr	r0, [r5, #-32]	; 0xffffffe0
   105bc:	bl	90cc <sf_gen_mcode>
   105c0:	mov	r8, r0
   105c4:	b	1024c <sfbpf_parse+0x4f8>
   105c8:	ldr	r3, [r5, #-48]	; 0xffffffd0
   105cc:	str	r3, [sp, #32]
   105d0:	mov	r2, #0
   105d4:	ldr	r1, [r5]
   105d8:	ldr	r0, [r5, #-32]	; 0xffffffe0
   105dc:	bl	90cc <sf_gen_mcode>
   105e0:	mov	r8, r0
   105e4:	b	1024c <sfbpf_parse+0x4f8>
   105e8:	ldr	r3, [r5, #-16]
   105ec:	str	r3, [sp, #32]
   105f0:	uxtb	r3, r3
   105f4:	cmp	r3, #3
   105f8:	beq	1062c <sfbpf_parse+0x8d8>
   105fc:	cmp	r3, #7
   10600:	beq	10638 <sfbpf_parse+0x8e4>
   10604:	cmp	r3, #5
   10608:	beq	10644 <sfbpf_parse+0x8f0>
   1060c:	cmp	r3, #6
   10610:	beq	10650 <sfbpf_parse+0x8fc>
   10614:	ldr	r2, [sp, #32]
   10618:	mov	r1, #0
   1061c:	ldr	r0, [r5]
   10620:	bl	ac34 <sf_gen_ncode>
   10624:	mov	r8, r0
   10628:	b	1024c <sfbpf_parse+0x4f8>
   1062c:	ldr	r0, [pc, #1920]	; 10db4 <sfbpf_parse+0x1060>
   10630:	add	r0, pc, r0
   10634:	bl	229c <sf_bpf_error>
   10638:	ldr	r0, [pc, #1912]	; 10db8 <sfbpf_parse+0x1064>
   1063c:	add	r0, pc, r0
   10640:	bl	229c <sf_bpf_error>
   10644:	ldr	r0, [pc, #1904]	; 10dbc <sfbpf_parse+0x1068>
   10648:	add	r0, pc, r0
   1064c:	bl	229c <sf_bpf_error>
   10650:	ldr	r0, [pc, #1896]	; 10dc0 <sfbpf_parse+0x106c>
   10654:	add	r0, pc, r0
   10658:	bl	229c <sf_bpf_error>
   1065c:	ldr	r3, [r5, #-48]	; 0xffffffd0
   10660:	str	r3, [sp, #32]
   10664:	ldr	r2, [r5]
   10668:	mov	r1, #0
   1066c:	ldr	r0, [r5, #-32]	; 0xffffffe0
   10670:	bl	96dc <sf_gen_mcode6>
   10674:	mov	r8, r0
   10678:	b	1024c <sfbpf_parse+0x4f8>
   1067c:	ldr	r3, [r5, #-16]
   10680:	str	r3, [sp, #32]
   10684:	mov	r2, #128	; 0x80
   10688:	mov	r1, #0
   1068c:	ldr	r0, [r5]
   10690:	bl	96dc <sf_gen_mcode6>
   10694:	mov	r8, r0
   10698:	b	1024c <sfbpf_parse+0x4f8>
   1069c:	ldr	r3, [r5]
   106a0:	ldr	r1, [r5, #-16]
   106a4:	str	r1, [sp, #32]
   106a8:	str	r3, [sp, #24]
   106ac:	mov	r0, r3
   106b0:	bl	5b88 <sf_gen_ecode>
   106b4:	mov	r8, r0
   106b8:	ldr	r0, [sp, #24]
   106bc:	bl	d48 <free@plt>
   106c0:	b	1024c <sfbpf_parse+0x4f8>
   106c4:	ldr	r3, [r5]
   106c8:	ldr	r1, [r5, #-16]
   106cc:	str	r1, [sp, #32]
   106d0:	str	r3, [sp, #24]
   106d4:	mov	r0, r3
   106d8:	bl	6748 <sf_gen_acode>
   106dc:	mov	r8, r0
   106e0:	ldr	r0, [sp, #24]
   106e4:	bl	d48 <free@plt>
   106e8:	b	1024c <sfbpf_parse+0x4f8>
   106ec:	ldr	r8, [r5, #12]
   106f0:	mov	r0, r8
   106f4:	bl	3b40 <sf_gen_not>
   106f8:	ldrd	r2, [r5]
   106fc:	strd	r2, [sp, #32]
   10700:	ldrd	r2, [r5, #8]
   10704:	strd	r2, [sp, #40]	; 0x28
   10708:	ldr	r3, [r5, #4]
   1070c:	str	r3, [sp, #8]
   10710:	ldr	r9, [r5, #8]
   10714:	b	1024c <sfbpf_parse+0x4f8>
   10718:	ldrd	r2, [r5, #-16]
   1071c:	strd	r2, [sp, #32]
   10720:	ldrd	r2, [r5, #-8]
   10724:	strd	r2, [sp, #40]	; 0x28
   10728:	ldr	r3, [r5, #-12]
   1072c:	str	r3, [sp, #8]
   10730:	ldr	r9, [r5, #-8]
   10734:	ldr	r8, [r5, #-4]
   10738:	b	1024c <sfbpf_parse+0x4f8>
   1073c:	ldrd	r2, [r5, #-16]
   10740:	strd	r2, [sp, #32]
   10744:	ldrd	r2, [r5, #-8]
   10748:	strd	r2, [sp, #40]	; 0x28
   1074c:	ldr	r3, [r5, #-12]
   10750:	str	r3, [sp, #8]
   10754:	ldr	r9, [r5, #-8]
   10758:	ldr	r8, [r5, #-4]
   1075c:	b	1024c <sfbpf_parse+0x4f8>
   10760:	ldr	r8, [r5, #12]
   10764:	mov	r1, r8
   10768:	ldr	r0, [r5, #-20]	; 0xffffffec
   1076c:	bl	3a30 <sf_gen_and>
   10770:	ldrd	r2, [r5]
   10774:	strd	r2, [sp, #32]
   10778:	ldrd	r2, [r5, #8]
   1077c:	strd	r2, [sp, #40]	; 0x28
   10780:	ldr	r3, [r5, #4]
   10784:	str	r3, [sp, #8]
   10788:	ldr	r9, [r5, #8]
   1078c:	b	1024c <sfbpf_parse+0x4f8>
   10790:	ldr	r8, [r5, #12]
   10794:	mov	r1, r8
   10798:	ldr	r0, [r5, #-20]	; 0xffffffec
   1079c:	bl	3ac0 <sf_gen_or>
   107a0:	ldrd	r2, [r5]
   107a4:	strd	r2, [sp, #32]
   107a8:	ldrd	r2, [r5, #8]
   107ac:	strd	r2, [sp, #40]	; 0x28
   107b0:	ldr	r3, [r5, #4]
   107b4:	str	r3, [sp, #8]
   107b8:	ldr	r9, [r5, #8]
   107bc:	b	1024c <sfbpf_parse+0x4f8>
   107c0:	ldr	r2, [r5, #-16]
   107c4:	str	r2, [sp, #32]
   107c8:	ldr	r1, [r5]
   107cc:	mov	r0, #0
   107d0:	bl	ac34 <sf_gen_ncode>
   107d4:	mov	r8, r0
   107d8:	b	1024c <sfbpf_parse+0x4f8>
   107dc:	ldr	r8, [r5, #12]
   107e0:	mov	r0, r8
   107e4:	bl	3b40 <sf_gen_not>
   107e8:	ldrd	r2, [r5]
   107ec:	strd	r2, [sp, #32]
   107f0:	ldrd	r2, [r5, #8]
   107f4:	strd	r2, [sp, #40]	; 0x28
   107f8:	ldr	r3, [r5, #4]
   107fc:	str	r3, [sp, #8]
   10800:	ldr	r9, [r5, #8]
   10804:	b	1024c <sfbpf_parse+0x4f8>
   10808:	ldr	r3, [r5, #-32]	; 0xffffffe0
   1080c:	strb	r3, [sp, #33]	; 0x21
   10810:	ldr	r3, [r5, #-16]
   10814:	strb	r3, [sp, #34]	; 0x22
   10818:	ldr	r3, [r5]
   1081c:	strb	r3, [sp, #32]
   10820:	b	1024c <sfbpf_parse+0x4f8>
   10824:	ldr	r3, [r5, #-16]
   10828:	strb	r3, [sp, #33]	; 0x21
   1082c:	ldr	r3, [r5]
   10830:	strb	r3, [sp, #34]	; 0x22
   10834:	mov	r3, #0
   10838:	strb	r3, [sp, #32]
   1083c:	b	1024c <sfbpf_parse+0x4f8>
   10840:	ldr	r3, [r5, #-16]
   10844:	strb	r3, [sp, #33]	; 0x21
   10848:	mov	r3, #0
   1084c:	strb	r3, [sp, #34]	; 0x22
   10850:	ldr	r3, [r5]
   10854:	strb	r3, [sp, #32]
   10858:	b	1024c <sfbpf_parse+0x4f8>
   1085c:	ldr	r3, [r5, #-16]
   10860:	strb	r3, [sp, #33]	; 0x21
   10864:	mov	r3, #0
   10868:	strb	r3, [sp, #34]	; 0x22
   1086c:	mov	r3, #5
   10870:	strb	r3, [sp, #32]
   10874:	b	1024c <sfbpf_parse+0x4f8>
   10878:	ldr	r3, [r5, #-16]
   1087c:	strb	r3, [sp, #33]	; 0x21
   10880:	mov	r3, #0
   10884:	strb	r3, [sp, #34]	; 0x22
   10888:	mov	r3, #6
   1088c:	strb	r3, [sp, #32]
   10890:	b	1024c <sfbpf_parse+0x4f8>
   10894:	ldr	r3, [r5, #-16]
   10898:	strb	r3, [sp, #33]	; 0x21
   1089c:	mov	r3, #0
   108a0:	strb	r3, [sp, #34]	; 0x22
   108a4:	ldr	r3, [r5]
   108a8:	strb	r3, [sp, #32]
   108ac:	b	1024c <sfbpf_parse+0x4f8>
   108b0:	ldrd	r2, [r5]
   108b4:	strd	r2, [sp, #32]
   108b8:	ldrd	r2, [r5, #8]
   108bc:	strd	r2, [sp, #40]	; 0x28
   108c0:	ldr	r3, [r5, #4]
   108c4:	str	r3, [sp, #8]
   108c8:	ldr	r9, [r5, #8]
   108cc:	ldr	r8, [r5, #12]
   108d0:	b	1024c <sfbpf_parse+0x4f8>
   108d4:	ldr	r8, [r5, #-4]
   108d8:	ldr	r3, [r5, #-32]	; 0xffffffe0
   108dc:	str	r3, [sp, #32]
   108e0:	b	1024c <sfbpf_parse+0x4f8>
   108e4:	ldr	r0, [r5]
   108e8:	bl	7d2c <sf_gen_proto_abbrev>
   108ec:	mov	r8, r0
   108f0:	ldr	r3, [pc, #1228]	; 10dc4 <sfbpf_parse+0x1070>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r3, [r3, #4076]	; 0xfec
   108fc:	str	r3, [sp, #32]
   10900:	b	1024c <sfbpf_parse+0x4f8>
   10904:	mov	r3, #0
   10908:	ldr	r2, [r5]
   1090c:	ldr	r1, [r5, #-32]	; 0xffffffe0
   10910:	ldr	r0, [r5, #-16]
   10914:	bl	609c <sf_gen_relation>
   10918:	mov	r8, r0
   1091c:	ldr	r3, [pc, #1188]	; 10dc8 <sfbpf_parse+0x1074>
   10920:	add	r3, pc, r3
   10924:	ldr	r3, [r3, #4076]	; 0xfec
   10928:	str	r3, [sp, #32]
   1092c:	b	1024c <sfbpf_parse+0x4f8>
   10930:	mov	r3, #1
   10934:	ldr	r2, [r5]
   10938:	ldr	r1, [r5, #-32]	; 0xffffffe0
   1093c:	ldr	r0, [r5, #-16]
   10940:	bl	609c <sf_gen_relation>
   10944:	mov	r8, r0
   10948:	ldr	r3, [pc, #1148]	; 10dcc <sfbpf_parse+0x1078>
   1094c:	add	r3, pc, r3
   10950:	ldr	r3, [r3, #4076]	; 0xfec
   10954:	str	r3, [sp, #32]
   10958:	b	1024c <sfbpf_parse+0x4f8>
   1095c:	ldr	r8, [r5]
   10960:	ldr	r3, [pc, #1128]	; 10dd0 <sfbpf_parse+0x107c>
   10964:	add	r3, pc, r3
   10968:	ldr	r3, [r3, #4076]	; 0xfec
   1096c:	str	r3, [sp, #32]
   10970:	b	1024c <sfbpf_parse+0x4f8>
   10974:	ldr	r0, [r5]
   10978:	bl	b768 <sf_gen_atmtype_abbrev>
   1097c:	mov	r8, r0
   10980:	ldr	r3, [pc, #1100]	; 10dd4 <sfbpf_parse+0x1080>
   10984:	add	r3, pc, r3
   10988:	ldr	r3, [r3, #4076]	; 0xfec
   1098c:	str	r3, [sp, #32]
   10990:	b	1024c <sfbpf_parse+0x4f8>
   10994:	ldr	r0, [r5]
   10998:	bl	bea8 <sf_gen_atmmulti_abbrev>
   1099c:	mov	r8, r0
   109a0:	ldr	r3, [pc, #1072]	; 10dd8 <sfbpf_parse+0x1084>
   109a4:	add	r3, pc, r3
   109a8:	ldr	r3, [r3, #4076]	; 0xfec
   109ac:	str	r3, [sp, #32]
   109b0:	b	1024c <sfbpf_parse+0x4f8>
   109b4:	ldr	r8, [r5, #12]
   109b8:	ldr	r3, [pc, #1052]	; 10ddc <sfbpf_parse+0x1088>
   109bc:	add	r3, pc, r3
   109c0:	ldr	r3, [r3, #4076]	; 0xfec
   109c4:	str	r3, [sp, #32]
   109c8:	b	1024c <sfbpf_parse+0x4f8>
   109cc:	ldr	r0, [r5]
   109d0:	bl	bb0c <sf_gen_mtp2type_abbrev>
   109d4:	mov	r8, r0
   109d8:	ldr	r3, [pc, #1024]	; 10de0 <sfbpf_parse+0x108c>
   109dc:	add	r3, pc, r3
   109e0:	ldr	r3, [r3, #4076]	; 0xfec
   109e4:	str	r3, [sp, #32]
   109e8:	b	1024c <sfbpf_parse+0x4f8>
   109ec:	ldr	r8, [r5, #12]
   109f0:	ldr	r3, [pc, #1004]	; 10de4 <sfbpf_parse+0x1090>
   109f4:	add	r3, pc, r3
   109f8:	ldr	r3, [r3, #4076]	; 0xfec
   109fc:	str	r3, [sp, #32]
   10a00:	b	1024c <sfbpf_parse+0x4f8>
   10a04:	mov	r3, #0
   10a08:	str	r3, [sp, #32]
   10a0c:	b	1024c <sfbpf_parse+0x4f8>
   10a10:	mov	r3, #1
   10a14:	str	r3, [sp, #32]
   10a18:	b	1024c <sfbpf_parse+0x4f8>
   10a1c:	mov	r3, #2
   10a20:	str	r3, [sp, #32]
   10a24:	b	1024c <sfbpf_parse+0x4f8>
   10a28:	mov	r3, #3
   10a2c:	str	r3, [sp, #32]
   10a30:	b	1024c <sfbpf_parse+0x4f8>
   10a34:	mov	r3, #3
   10a38:	str	r3, [sp, #32]
   10a3c:	b	1024c <sfbpf_parse+0x4f8>
   10a40:	mov	r3, #4
   10a44:	str	r3, [sp, #32]
   10a48:	b	1024c <sfbpf_parse+0x4f8>
   10a4c:	mov	r3, #4
   10a50:	str	r3, [sp, #32]
   10a54:	b	1024c <sfbpf_parse+0x4f8>
   10a58:	mov	r3, #5
   10a5c:	str	r3, [sp, #32]
   10a60:	b	1024c <sfbpf_parse+0x4f8>
   10a64:	mov	r3, #6
   10a68:	str	r3, [sp, #32]
   10a6c:	b	1024c <sfbpf_parse+0x4f8>
   10a70:	mov	r3, #7
   10a74:	str	r3, [sp, #32]
   10a78:	b	1024c <sfbpf_parse+0x4f8>
   10a7c:	mov	r3, #8
   10a80:	str	r3, [sp, #32]
   10a84:	b	1024c <sfbpf_parse+0x4f8>
   10a88:	mov	r3, #1
   10a8c:	str	r3, [sp, #32]
   10a90:	b	1024c <sfbpf_parse+0x4f8>
   10a94:	mov	r3, #2
   10a98:	str	r3, [sp, #32]
   10a9c:	b	1024c <sfbpf_parse+0x4f8>
   10aa0:	mov	r3, #3
   10aa4:	str	r3, [sp, #32]
   10aa8:	b	1024c <sfbpf_parse+0x4f8>
   10aac:	mov	r3, #7
   10ab0:	str	r3, [sp, #32]
   10ab4:	b	1024c <sfbpf_parse+0x4f8>
   10ab8:	mov	r3, #4
   10abc:	str	r3, [sp, #32]
   10ac0:	b	1024c <sfbpf_parse+0x4f8>
   10ac4:	mov	r3, #1
   10ac8:	str	r3, [sp, #32]
   10acc:	b	1024c <sfbpf_parse+0x4f8>
   10ad0:	mov	r3, #2
   10ad4:	str	r3, [sp, #32]
   10ad8:	b	1024c <sfbpf_parse+0x4f8>
   10adc:	mov	r3, #3
   10ae0:	str	r3, [sp, #32]
   10ae4:	b	1024c <sfbpf_parse+0x4f8>
   10ae8:	mov	r3, #4
   10aec:	str	r3, [sp, #32]
   10af0:	b	1024c <sfbpf_parse+0x4f8>
   10af4:	mov	r3, #5
   10af8:	str	r3, [sp, #32]
   10afc:	b	1024c <sfbpf_parse+0x4f8>
   10b00:	mov	r3, #6
   10b04:	str	r3, [sp, #32]
   10b08:	b	1024c <sfbpf_parse+0x4f8>
   10b0c:	mov	r3, #7
   10b10:	str	r3, [sp, #32]
   10b14:	b	1024c <sfbpf_parse+0x4f8>
   10b18:	mov	r3, #8
   10b1c:	str	r3, [sp, #32]
   10b20:	b	1024c <sfbpf_parse+0x4f8>
   10b24:	mov	r3, #9
   10b28:	str	r3, [sp, #32]
   10b2c:	b	1024c <sfbpf_parse+0x4f8>
   10b30:	mov	r3, #10
   10b34:	str	r3, [sp, #32]
   10b38:	b	1024c <sfbpf_parse+0x4f8>
   10b3c:	mov	r3, #21
   10b40:	str	r3, [sp, #32]
   10b44:	b	1024c <sfbpf_parse+0x4f8>
   10b48:	mov	r3, #22
   10b4c:	str	r3, [sp, #32]
   10b50:	b	1024c <sfbpf_parse+0x4f8>
   10b54:	mov	r3, #11
   10b58:	str	r3, [sp, #32]
   10b5c:	b	1024c <sfbpf_parse+0x4f8>
   10b60:	mov	r3, #23
   10b64:	str	r3, [sp, #32]
   10b68:	b	1024c <sfbpf_parse+0x4f8>
   10b6c:	mov	r3, #12
   10b70:	str	r3, [sp, #32]
   10b74:	b	1024c <sfbpf_parse+0x4f8>
   10b78:	mov	r3, #13
   10b7c:	str	r3, [sp, #32]
   10b80:	b	1024c <sfbpf_parse+0x4f8>
   10b84:	mov	r3, #14
   10b88:	str	r3, [sp, #32]
   10b8c:	b	1024c <sfbpf_parse+0x4f8>
   10b90:	mov	r3, #16
   10b94:	str	r3, [sp, #32]
   10b98:	b	1024c <sfbpf_parse+0x4f8>
   10b9c:	mov	r3, #15
   10ba0:	str	r3, [sp, #32]
   10ba4:	b	1024c <sfbpf_parse+0x4f8>
   10ba8:	mov	r3, #17
   10bac:	str	r3, [sp, #32]
   10bb0:	b	1024c <sfbpf_parse+0x4f8>
   10bb4:	mov	r3, #18
   10bb8:	str	r3, [sp, #32]
   10bbc:	b	1024c <sfbpf_parse+0x4f8>
   10bc0:	mov	r3, #19
   10bc4:	str	r3, [sp, #32]
   10bc8:	b	1024c <sfbpf_parse+0x4f8>
   10bcc:	mov	r3, #20
   10bd0:	str	r3, [sp, #32]
   10bd4:	b	1024c <sfbpf_parse+0x4f8>
   10bd8:	mov	r3, #24
   10bdc:	str	r3, [sp, #32]
   10be0:	b	1024c <sfbpf_parse+0x4f8>
   10be4:	mov	r3, #25
   10be8:	str	r3, [sp, #32]
   10bec:	b	1024c <sfbpf_parse+0x4f8>
   10bf0:	mov	r3, #26
   10bf4:	str	r3, [sp, #32]
   10bf8:	b	1024c <sfbpf_parse+0x4f8>
   10bfc:	mov	r3, #31
   10c00:	str	r3, [sp, #32]
   10c04:	b	1024c <sfbpf_parse+0x4f8>
   10c08:	mov	r3, #32
   10c0c:	str	r3, [sp, #32]
   10c10:	b	1024c <sfbpf_parse+0x4f8>
   10c14:	mov	r3, #33	; 0x21
   10c18:	str	r3, [sp, #32]
   10c1c:	b	1024c <sfbpf_parse+0x4f8>
   10c20:	mov	r3, #39	; 0x27
   10c24:	str	r3, [sp, #32]
   10c28:	b	1024c <sfbpf_parse+0x4f8>
   10c2c:	mov	r3, #36	; 0x24
   10c30:	str	r3, [sp, #32]
   10c34:	b	1024c <sfbpf_parse+0x4f8>
   10c38:	mov	r3, #38	; 0x26
   10c3c:	str	r3, [sp, #32]
   10c40:	b	1024c <sfbpf_parse+0x4f8>
   10c44:	mov	r3, #37	; 0x25
   10c48:	str	r3, [sp, #32]
   10c4c:	b	1024c <sfbpf_parse+0x4f8>
   10c50:	mov	r3, #27
   10c54:	str	r3, [sp, #32]
   10c58:	b	1024c <sfbpf_parse+0x4f8>
   10c5c:	mov	r3, #28
   10c60:	str	r3, [sp, #32]
   10c64:	b	1024c <sfbpf_parse+0x4f8>
   10c68:	mov	r3, #29
   10c6c:	str	r3, [sp, #32]
   10c70:	b	1024c <sfbpf_parse+0x4f8>
   10c74:	mov	r3, #30
   10c78:	str	r3, [sp, #32]
   10c7c:	b	1024c <sfbpf_parse+0x4f8>
   10c80:	mov	r3, #40	; 0x28
   10c84:	str	r3, [sp, #32]
   10c88:	b	1024c <sfbpf_parse+0x4f8>
   10c8c:	ldr	r0, [r5, #-16]
   10c90:	bl	af3c <sf_gen_broadcast>
   10c94:	str	r0, [sp, #32]
   10c98:	b	1024c <sfbpf_parse+0x4f8>
   10c9c:	ldr	r0, [r5, #-16]
   10ca0:	bl	b1cc <sf_gen_multicast>
   10ca4:	str	r0, [sp, #32]
   10ca8:	b	1024c <sfbpf_parse+0x4f8>
   10cac:	ldr	r0, [r5]
   10cb0:	bl	6484 <sf_gen_less>
   10cb4:	str	r0, [sp, #32]
   10cb8:	b	1024c <sfbpf_parse+0x4f8>
   10cbc:	ldr	r0, [r5]
   10cc0:	bl	6430 <sf_gen_greater>
   10cc4:	str	r0, [sp, #32]
   10cc8:	b	1024c <sfbpf_parse+0x4f8>
   10ccc:	ldr	r2, [r5]
   10cd0:	ldr	r1, [r5, #-32]	; 0xffffffe0
   10cd4:	ldr	r0, [r5, #-16]
   10cd8:	bl	64e8 <sf_gen_byteop>
   10cdc:	str	r0, [sp, #32]
   10ce0:	b	1024c <sfbpf_parse+0x4f8>
   10ce4:	mov	r0, #0
   10ce8:	bl	87a4 <sf_gen_inbound>
   10cec:	str	r0, [sp, #32]
   10cf0:	b	1024c <sfbpf_parse+0x4f8>
   10cf4:	mov	r0, #1
   10cf8:	bl	87a4 <sf_gen_inbound>
   10cfc:	str	r0, [sp, #32]
   10d00:	b	1024c <sfbpf_parse+0x4f8>
   10d04:	ldr	r0, [r5]
   10d08:	bl	67bc <sf_gen_vlan>
   10d0c:	str	r0, [sp, #32]
   10d10:	b	1024c <sfbpf_parse+0x4f8>
   10d14:	mvn	r0, #0
   10d18:	bl	67bc <sf_gen_vlan>
   10d1c:	str	r0, [sp, #32]
   10d20:	b	1024c <sfbpf_parse+0x4f8>
   10d24:	ldr	r0, [r5]
   10d28:	bl	b5b0 <sf_gen_mpls>
   10d2c:	str	r0, [sp, #32]
   10d30:	b	1024c <sfbpf_parse+0x4f8>
   10d34:	mvn	r0, #0
   10d38:	bl	b5b0 <sf_gen_mpls>
   10d3c:	str	r0, [sp, #32]
   10d40:	b	1024c <sfbpf_parse+0x4f8>
   10d44:	bl	b6f4 <sf_gen_pppoed>
   10d48:	str	r0, [sp, #32]
   10d4c:	b	1024c <sfbpf_parse+0x4f8>
   10d50:	bl	b710 <sf_gen_pppoes>
   10d54:	str	r0, [sp, #32]
   10d58:	b	1024c <sfbpf_parse+0x4f8>
   10d5c:	ldr	r3, [r5]
   10d60:	str	r3, [sp, #32]
   10d64:	b	1024c <sfbpf_parse+0x4f8>
   10d68:	.word	0x00021284
   10d6c:	.word	0x000000c8
   10d70:	.word	0x000000b0
   10d74:	.word	0x00007534
   10d78:	.word	0x00020f94
   10d7c:	.word	0x000054e0
   10d80:	.word	0x000054c4
   10d84:	.word	0x000000f0
   10d88:	.word	0x00005470
   10d8c:	.word	0x00005458
   10d90:	.word	0x00021910
   10d94:	.word	0x00006234
   10d98:	.word	0x000043c0
   10d9c:	.word	0x00005078
   10da0:	.word	0x00005044
   10da4:	.word	0x00007020
   10da8:	.word	0x00004f28
   10dac:	.word	0x00004edc
   10db0:	.word	0x00004ebc
   10db4:	.word	0x00005e48
   10db8:	.word	0x00005e60
   10dbc:	.word	0x00005e7c
   10dc0:	.word	0x00005e94
   10dc4:	.word	0x00004a00
   10dc8:	.word	0x000049d4
   10dcc:	.word	0x000049a8
   10dd0:	.word	0x00004990
   10dd4:	.word	0x00004970
   10dd8:	.word	0x00004950
   10ddc:	.word	0x00004938
   10de0:	.word	0x00004918
   10de4:	.word	0x00004900
   10de8:	.word	0x0001fe58
   10dec:	.word	0x000055ec
   10df0:	.word	0x000055e0
   10df4:	.word	0x0001fe04
   10df8:	.word	0x0001fdf8
   10dfc:	.word	0x0001fde8
   10e00:	.word	0x000055ac
   10e04:	.word	0x0001fdb8
   10e08:	.word	0x00005528
   10e0c:	.word	0x0001fd5c
   10e10:	.word	0x00005538
   10e14:	.word	0x00005520
   10e18:	.word	0x00005508
   10e1c:	.word	0x000054f0
   10e20:	.word	0x000054d4
   10e24:	.word	0x00002a58
   10e28:	.word	0x00002a4c
   10e2c:	.word	0x00003f88
   10e30:	.word	0x00003e94
   10e34:	.word	0x00003e24
   10e38:	.word	0x0002064c
   10e3c:	.word	0x000050a4
   10e40:	.word	0x000030fc
   10e44:	ldr	r3, [r5]
   10e48:	str	r3, [sp, #32]
   10e4c:	b	1024c <sfbpf_parse+0x4f8>
   10e50:	ldr	r0, [r5]
   10e54:	bl	65dc <sf_gen_pf_ifname>
   10e58:	str	r0, [sp, #32]
   10e5c:	b	1024c <sfbpf_parse+0x4f8>
   10e60:	ldr	r0, [r5]
   10e64:	bl	65f4 <sf_gen_pf_ruleset>
   10e68:	str	r0, [sp, #32]
   10e6c:	b	1024c <sfbpf_parse+0x4f8>
   10e70:	ldr	r0, [r5]
   10e74:	bl	660c <sf_gen_pf_rnr>
   10e78:	str	r0, [sp, #32]
   10e7c:	b	1024c <sfbpf_parse+0x4f8>
   10e80:	ldr	r0, [r5]
   10e84:	bl	6624 <sf_gen_pf_srnr>
   10e88:	str	r0, [sp, #32]
   10e8c:	b	1024c <sfbpf_parse+0x4f8>
   10e90:	ldr	r0, [r5]
   10e94:	bl	663c <sf_gen_pf_reason>
   10e98:	str	r0, [sp, #32]
   10e9c:	b	1024c <sfbpf_parse+0x4f8>
   10ea0:	ldr	r0, [r5]
   10ea4:	bl	6654 <sf_gen_pf_action>
   10ea8:	str	r0, [sp, #32]
   10eac:	b	1024c <sfbpf_parse+0x4f8>
   10eb0:	ldr	r0, [r5, #-32]	; 0xffffffe0
   10eb4:	ldr	r3, [r5]
   10eb8:	mov	r1, #252	; 0xfc
   10ebc:	orr	r0, r0, r3
   10ec0:	bl	666c <sf_gen_p80211_type>
   10ec4:	str	r0, [sp, #32]
   10ec8:	b	1024c <sfbpf_parse+0x4f8>
   10ecc:	mov	r1, #12
   10ed0:	ldr	r0, [r5]
   10ed4:	bl	666c <sf_gen_p80211_type>
   10ed8:	str	r0, [sp, #32]
   10edc:	b	1024c <sfbpf_parse+0x4f8>
   10ee0:	mov	r1, #252	; 0xfc
   10ee4:	ldr	r0, [r5]
   10ee8:	bl	666c <sf_gen_p80211_type>
   10eec:	str	r0, [sp, #32]
   10ef0:	b	1024c <sfbpf_parse+0x4f8>
   10ef4:	ldr	r0, [r5]
   10ef8:	bl	66d8 <sf_gen_p80211_fcdir>
   10efc:	str	r0, [sp, #32]
   10f00:	b	1024c <sfbpf_parse+0x4f8>
   10f04:	ldr	r1, [pc, #-292]	; 10de8 <sfbpf_parse+0x1094>
   10f08:	add	r1, pc, r1
   10f0c:	add	r1, r1, #352	; 0x160
   10f10:	ldr	r0, [r5]
   10f14:	bl	fcf0 <str2tok>
   10f18:	str	r0, [sp, #32]
   10f1c:	cmn	r0, #1
   10f20:	bne	1024c <sfbpf_parse+0x4f8>
   10f24:	ldr	r0, [pc, #-320]	; 10dec <sfbpf_parse+0x1098>
   10f28:	add	r0, pc, r0
   10f2c:	bl	229c <sf_bpf_error>
   10f30:	ldr	r3, [r5, #-32]	; 0xffffffe0
   10f34:	cmp	r3, #0
   10f38:	beq	10f74 <sfbpf_parse+0x1220>
   10f3c:	cmp	r3, #4
   10f40:	beq	10f58 <sfbpf_parse+0x1204>
   10f44:	cmp	r3, #8
   10f48:	beq	10f64 <sfbpf_parse+0x1210>
   10f4c:	ldr	r0, [pc, #-356]	; 10df0 <sfbpf_parse+0x109c>
   10f50:	add	r0, pc, r0
   10f54:	bl	229c <sf_bpf_error>
   10f58:	ldr	r1, [pc, #-364]	; 10df4 <sfbpf_parse+0x10a0>
   10f5c:	add	r1, pc, r1
   10f60:	b	10f80 <sfbpf_parse+0x122c>
   10f64:	ldr	r1, [pc, #-372]	; 10df8 <sfbpf_parse+0x10a4>
   10f68:	add	r1, pc, r1
   10f6c:	add	r1, r1, #56	; 0x38
   10f70:	b	10f80 <sfbpf_parse+0x122c>
   10f74:	ldr	r1, [pc, #-384]	; 10dfc <sfbpf_parse+0x10a8>
   10f78:	add	r1, pc, r1
   10f7c:	add	r1, r1, #184	; 0xb8
   10f80:	ldr	r0, [r5]
   10f84:	bl	fcf0 <str2tok>
   10f88:	str	r0, [sp, #32]
   10f8c:	cmn	r0, #1
   10f90:	bne	1024c <sfbpf_parse+0x4f8>
   10f94:	ldr	r0, [pc, #-412]	; 10e00 <sfbpf_parse+0x10ac>
   10f98:	add	r0, pc, r0
   10f9c:	bl	229c <sf_bpf_error>
   10fa0:	mov	r3, #0
   10fa4:	ldr	r1, [pc, #-424]	; 10e04 <sfbpf_parse+0x10b0>
   10fa8:	add	r1, pc, r1
   10fac:	add	r1, r1, #184	; 0xb8
   10fb0:	str	r7, [sp, #24]
   10fb4:	str	r9, [sp, #28]
   10fb8:	mov	r7, r3
   10fbc:	ldr	r9, [sp, #20]
   10fc0:	ldr	r0, [r5]
   10fc4:	bl	fcf0 <str2tok>
   10fc8:	str	r0, [sp, #32]
   10fcc:	cmn	r0, #1
   10fd0:	bne	10ff4 <sfbpf_parse+0x12a0>
   10fd4:	add	r7, r7, #1
   10fd8:	add	r3, r9, r7, lsl #3
   10fdc:	ldr	r1, [r3, #4]
   10fe0:	cmp	r1, #0
   10fe4:	bne	10fc0 <sfbpf_parse+0x126c>
   10fe8:	ldr	r0, [pc, #-488]	; 10e08 <sfbpf_parse+0x10b4>
   10fec:	add	r0, pc, r0
   10ff0:	bl	229c <sf_bpf_error>
   10ff4:	ldr	r9, [sp, #28]
   10ff8:	mov	r2, r7
   10ffc:	ldr	r7, [sp, #24]
   11000:	ldr	r3, [pc, #-508]	; 10e0c <sfbpf_parse+0x10b8>
   11004:	add	r3, pc, r3
   11008:	add	r3, r3, r2, lsl #3
   1100c:	ldr	r3, [r3, #400]	; 0x190
   11010:	orr	r3, r3, r0
   11014:	str	r3, [sp, #32]
   11018:	b	1024c <sfbpf_parse+0x4f8>
   1101c:	ldr	r3, [r5]
   11020:	str	r3, [sp, #24]
   11024:	ldr	r1, [pc, #-540]	; 10e10 <sfbpf_parse+0x10bc>
   11028:	add	r1, pc, r1
   1102c:	mov	r0, r3
   11030:	bl	fa24 <sfbpf_strcasecmp>
   11034:	cmp	r0, #0
   11038:	moveq	r3, #0
   1103c:	streq	r3, [sp, #32]
   11040:	beq	1024c <sfbpf_parse+0x4f8>
   11044:	ldr	r1, [pc, #-568]	; 10e14 <sfbpf_parse+0x10c0>
   11048:	add	r1, pc, r1
   1104c:	ldr	r0, [sp, #24]
   11050:	bl	fa24 <sfbpf_strcasecmp>
   11054:	cmp	r0, #0
   11058:	moveq	r3, #1
   1105c:	streq	r3, [sp, #32]
   11060:	beq	1024c <sfbpf_parse+0x4f8>
   11064:	ldr	r1, [pc, #-596]	; 10e18 <sfbpf_parse+0x10c4>
   11068:	add	r1, pc, r1
   1106c:	ldr	r0, [sp, #24]
   11070:	bl	fa24 <sfbpf_strcasecmp>
   11074:	cmp	r0, #0
   11078:	moveq	r3, #2
   1107c:	streq	r3, [sp, #32]
   11080:	beq	1024c <sfbpf_parse+0x4f8>
   11084:	ldr	r1, [pc, #-624]	; 10e1c <sfbpf_parse+0x10c8>
   11088:	add	r1, pc, r1
   1108c:	ldr	r0, [sp, #24]
   11090:	bl	fa24 <sfbpf_strcasecmp>
   11094:	cmp	r0, #0
   11098:	bne	110a8 <sfbpf_parse+0x1354>
   1109c:	mov	r3, #3
   110a0:	str	r3, [sp, #32]
   110a4:	b	1024c <sfbpf_parse+0x4f8>
   110a8:	ldr	r0, [pc, #-656]	; 10e20 <sfbpf_parse+0x10cc>
   110ac:	add	r0, pc, r0
   110b0:	bl	229c <sf_bpf_error>
   110b4:	ldr	r3, [r5]
   110b8:	str	r3, [sp, #32]
   110bc:	b	1024c <sfbpf_parse+0x4f8>
   110c0:	ldr	r0, [pc, #-676]	; 10e24 <sfbpf_parse+0x10d0>
   110c4:	add	r0, pc, r0
   110c8:	bl	229c <sf_bpf_error>
   110cc:	ldr	r0, [pc, #-684]	; 10e28 <sfbpf_parse+0x10d4>
   110d0:	add	r0, pc, r0
   110d4:	bl	229c <sf_bpf_error>
   110d8:	mov	r3, #32
   110dc:	str	r3, [sp, #32]
   110e0:	b	1024c <sfbpf_parse+0x4f8>
   110e4:	mov	r3, #48	; 0x30
   110e8:	str	r3, [sp, #32]
   110ec:	b	1024c <sfbpf_parse+0x4f8>
   110f0:	mov	r3, #16
   110f4:	str	r3, [sp, #32]
   110f8:	b	1024c <sfbpf_parse+0x4f8>
   110fc:	mov	r3, #32
   11100:	str	r3, [sp, #32]
   11104:	b	1024c <sfbpf_parse+0x4f8>
   11108:	mov	r3, #48	; 0x30
   1110c:	str	r3, [sp, #32]
   11110:	b	1024c <sfbpf_parse+0x4f8>
   11114:	mov	r3, #16
   11118:	str	r3, [sp, #32]
   1111c:	b	1024c <sfbpf_parse+0x4f8>
   11120:	ldr	r0, [r5]
   11124:	bl	6264 <sf_gen_loadi>
   11128:	str	r0, [sp, #32]
   1112c:	b	1024c <sfbpf_parse+0x4f8>
   11130:	mov	r2, #1
   11134:	ldr	r1, [r5, #-16]
   11138:	ldr	r0, [r5, #-48]	; 0xffffffd0
   1113c:	bl	834c <sf_gen_load>
   11140:	str	r0, [sp, #32]
   11144:	b	1024c <sfbpf_parse+0x4f8>
   11148:	ldr	r2, [r5, #-16]
   1114c:	ldr	r1, [r5, #-48]	; 0xffffffd0
   11150:	ldr	r0, [r5, #-80]	; 0xffffffb0
   11154:	bl	834c <sf_gen_load>
   11158:	str	r0, [sp, #32]
   1115c:	b	1024c <sfbpf_parse+0x4f8>
   11160:	ldr	r2, [r5]
   11164:	ldr	r1, [r5, #-32]	; 0xffffffe0
   11168:	mov	r0, #0
   1116c:	bl	6350 <sf_gen_arth>
   11170:	str	r0, [sp, #32]
   11174:	b	1024c <sfbpf_parse+0x4f8>
   11178:	ldr	r2, [r5]
   1117c:	ldr	r1, [r5, #-32]	; 0xffffffe0
   11180:	mov	r0, #16
   11184:	bl	6350 <sf_gen_arth>
   11188:	str	r0, [sp, #32]
   1118c:	b	1024c <sfbpf_parse+0x4f8>
   11190:	ldr	r2, [r5]
   11194:	ldr	r1, [r5, #-32]	; 0xffffffe0
   11198:	mov	r0, #32
   1119c:	bl	6350 <sf_gen_arth>
   111a0:	str	r0, [sp, #32]
   111a4:	b	1024c <sfbpf_parse+0x4f8>
   111a8:	ldr	r2, [r5]
   111ac:	ldr	r1, [r5, #-32]	; 0xffffffe0
   111b0:	mov	r0, #48	; 0x30
   111b4:	bl	6350 <sf_gen_arth>
   111b8:	str	r0, [sp, #32]
   111bc:	b	1024c <sfbpf_parse+0x4f8>
   111c0:	ldr	r2, [r5]
   111c4:	ldr	r1, [r5, #-32]	; 0xffffffe0
   111c8:	mov	r0, #80	; 0x50
   111cc:	bl	6350 <sf_gen_arth>
   111d0:	str	r0, [sp, #32]
   111d4:	b	1024c <sfbpf_parse+0x4f8>
   111d8:	ldr	r2, [r5]
   111dc:	ldr	r1, [r5, #-32]	; 0xffffffe0
   111e0:	mov	r0, #64	; 0x40
   111e4:	bl	6350 <sf_gen_arth>
   111e8:	str	r0, [sp, #32]
   111ec:	b	1024c <sfbpf_parse+0x4f8>
   111f0:	ldr	r2, [r5]
   111f4:	ldr	r1, [r5, #-32]	; 0xffffffe0
   111f8:	mov	r0, #96	; 0x60
   111fc:	bl	6350 <sf_gen_arth>
   11200:	str	r0, [sp, #32]
   11204:	b	1024c <sfbpf_parse+0x4f8>
   11208:	ldr	r2, [r5]
   1120c:	ldr	r1, [r5, #-32]	; 0xffffffe0
   11210:	mov	r0, #112	; 0x70
   11214:	bl	6350 <sf_gen_arth>
   11218:	str	r0, [sp, #32]
   1121c:	b	1024c <sfbpf_parse+0x4f8>
   11220:	ldr	r0, [r5]
   11224:	bl	62dc <sf_gen_neg>
   11228:	str	r0, [sp, #32]
   1122c:	b	1024c <sfbpf_parse+0x4f8>
   11230:	ldr	r3, [r5, #-16]
   11234:	str	r3, [sp, #32]
   11238:	b	1024c <sfbpf_parse+0x4f8>
   1123c:	bl	61fc <sf_gen_loadlen>
   11240:	str	r0, [sp, #32]
   11244:	b	1024c <sfbpf_parse+0x4f8>
   11248:	mov	r3, #38	; 0x26
   1124c:	str	r3, [sp, #32]
   11250:	b	1024c <sfbpf_parse+0x4f8>
   11254:	mov	r3, #124	; 0x7c
   11258:	str	r3, [sp, #32]
   1125c:	b	1024c <sfbpf_parse+0x4f8>
   11260:	mov	r3, #60	; 0x3c
   11264:	str	r3, [sp, #32]
   11268:	b	1024c <sfbpf_parse+0x4f8>
   1126c:	mov	r3, #62	; 0x3e
   11270:	str	r3, [sp, #32]
   11274:	b	1024c <sfbpf_parse+0x4f8>
   11278:	mov	r3, #61	; 0x3d
   1127c:	str	r3, [sp, #32]
   11280:	b	1024c <sfbpf_parse+0x4f8>
   11284:	ldr	r3, [r5, #-16]
   11288:	str	r3, [sp, #32]
   1128c:	b	1024c <sfbpf_parse+0x4f8>
   11290:	mov	r3, #30
   11294:	str	r3, [sp, #32]
   11298:	b	1024c <sfbpf_parse+0x4f8>
   1129c:	mov	r3, #31
   112a0:	str	r3, [sp, #32]
   112a4:	b	1024c <sfbpf_parse+0x4f8>
   112a8:	mov	r3, #22
   112ac:	str	r3, [sp, #32]
   112b0:	b	1024c <sfbpf_parse+0x4f8>
   112b4:	mov	r3, #23
   112b8:	str	r3, [sp, #32]
   112bc:	b	1024c <sfbpf_parse+0x4f8>
   112c0:	mov	r3, #25
   112c4:	str	r3, [sp, #32]
   112c8:	b	1024c <sfbpf_parse+0x4f8>
   112cc:	mov	r3, #24
   112d0:	str	r3, [sp, #32]
   112d4:	b	1024c <sfbpf_parse+0x4f8>
   112d8:	mov	r3, #26
   112dc:	str	r3, [sp, #32]
   112e0:	b	1024c <sfbpf_parse+0x4f8>
   112e4:	mov	r3, #27
   112e8:	str	r3, [sp, #32]
   112ec:	b	1024c <sfbpf_parse+0x4f8>
   112f0:	mov	r3, #28
   112f4:	str	r3, [sp, #32]
   112f8:	b	1024c <sfbpf_parse+0x4f8>
   112fc:	mov	r3, #29
   11300:	str	r3, [sp, #32]
   11304:	b	1024c <sfbpf_parse+0x4f8>
   11308:	mov	r3, #70	; 0x46
   1130c:	str	r3, [sp, #32]
   11310:	b	1024c <sfbpf_parse+0x4f8>
   11314:	mov	r3, #71	; 0x47
   11318:	str	r3, [sp, #32]
   1131c:	b	1024c <sfbpf_parse+0x4f8>
   11320:	mov	r3, #52	; 0x34
   11324:	str	r3, [sp, #8]
   11328:	b	1024c <sfbpf_parse+0x4f8>
   1132c:	mov	r3, #0
   11330:	ldr	r2, [r5, #-16]
   11334:	ldr	r1, [r5]
   11338:	ldr	r0, [r5, #-28]	; 0xffffffe4
   1133c:	bl	68d0 <sf_gen_atmfield_code>
   11340:	mov	r8, r0
   11344:	b	1024c <sfbpf_parse+0x4f8>
   11348:	mov	r3, #1
   1134c:	ldr	r2, [r5, #-16]
   11350:	ldr	r1, [r5]
   11354:	ldr	r0, [r5, #-28]	; 0xffffffe4
   11358:	bl	68d0 <sf_gen_atmfield_code>
   1135c:	mov	r8, r0
   11360:	b	1024c <sfbpf_parse+0x4f8>
   11364:	ldr	r8, [r5, #-4]
   11368:	ldr	r3, [pc, #-1348]	; 10e2c <sfbpf_parse+0x10d8>
   1136c:	add	r3, pc, r3
   11370:	ldr	r3, [r3, #4076]	; 0xfec
   11374:	str	r3, [sp, #32]
   11378:	b	1024c <sfbpf_parse+0x4f8>
   1137c:	ldr	r3, [r5, #-12]
   11380:	str	r3, [sp, #8]
   11384:	sub	r3, r3, #51	; 0x33
   11388:	cmp	r3, #1
   1138c:	bhi	1024c <sfbpf_parse+0x4f8>
   11390:	mov	r3, #0
   11394:	mov	r2, #16
   11398:	ldr	r1, [r5]
   1139c:	ldr	r0, [sp, #8]
   113a0:	bl	68d0 <sf_gen_atmfield_code>
   113a4:	mov	r8, r0
   113a8:	b	1024c <sfbpf_parse+0x4f8>
   113ac:	ldr	r8, [r5, #12]
   113b0:	mov	r1, r8
   113b4:	ldr	r0, [r5, #-20]	; 0xffffffec
   113b8:	bl	3ac0 <sf_gen_or>
   113bc:	ldrd	r2, [r5]
   113c0:	strd	r2, [sp, #32]
   113c4:	ldrd	r2, [r5, #8]
   113c8:	strd	r2, [sp, #40]	; 0x28
   113cc:	ldr	r3, [r5, #4]
   113d0:	str	r3, [sp, #8]
   113d4:	ldr	r9, [r5, #8]
   113d8:	b	1024c <sfbpf_parse+0x4f8>
   113dc:	mov	r3, #22
   113e0:	str	r3, [sp, #32]
   113e4:	b	1024c <sfbpf_parse+0x4f8>
   113e8:	mov	r3, #23
   113ec:	str	r3, [sp, #32]
   113f0:	b	1024c <sfbpf_parse+0x4f8>
   113f4:	mov	r3, #24
   113f8:	str	r3, [sp, #32]
   113fc:	b	1024c <sfbpf_parse+0x4f8>
   11400:	mov	r9, #1
   11404:	b	1024c <sfbpf_parse+0x4f8>
   11408:	mov	r9, #2
   1140c:	b	1024c <sfbpf_parse+0x4f8>
   11410:	mov	r9, #3
   11414:	b	1024c <sfbpf_parse+0x4f8>
   11418:	mov	r9, #4
   1141c:	b	1024c <sfbpf_parse+0x4f8>
   11420:	mov	r3, #0
   11424:	ldr	r2, [r5, #-16]
   11428:	ldr	r1, [r5]
   1142c:	ldr	r0, [r5, #-24]	; 0xffffffe8
   11430:	bl	bcb8 <sf_gen_mtp3field_code>
   11434:	mov	r8, r0
   11438:	b	1024c <sfbpf_parse+0x4f8>
   1143c:	mov	r3, #1
   11440:	ldr	r2, [r5, #-16]
   11444:	ldr	r1, [r5]
   11448:	ldr	r0, [r5, #-24]	; 0xffffffe8
   1144c:	bl	bcb8 <sf_gen_mtp3field_code>
   11450:	mov	r8, r0
   11454:	b	1024c <sfbpf_parse+0x4f8>
   11458:	ldr	r8, [r5, #-4]
   1145c:	ldr	r3, [pc, #-1588]	; 10e30 <sfbpf_parse+0x10dc>
   11460:	add	r3, pc, r3
   11464:	ldr	r3, [r3, #4076]	; 0xfec
   11468:	str	r3, [sp, #32]
   1146c:	b	1024c <sfbpf_parse+0x4f8>
   11470:	ldr	r9, [r5, #-8]
   11474:	sub	r3, r9, #1
   11478:	cmp	r3, #3
   1147c:	bhi	1024c <sfbpf_parse+0x4f8>
   11480:	mov	r3, #0
   11484:	mov	r2, #16
   11488:	ldr	r1, [r5]
   1148c:	mov	r0, r9
   11490:	bl	bcb8 <sf_gen_mtp3field_code>
   11494:	mov	r8, r0
   11498:	b	1024c <sfbpf_parse+0x4f8>
   1149c:	ldr	r8, [r5, #12]
   114a0:	mov	r1, r8
   114a4:	ldr	r0, [r5, #-20]	; 0xffffffec
   114a8:	bl	3ac0 <sf_gen_or>
   114ac:	ldrd	r2, [r5]
   114b0:	strd	r2, [sp, #32]
   114b4:	ldrd	r2, [r5, #8]
   114b8:	strd	r2, [sp, #40]	; 0x28
   114bc:	ldr	r3, [r5, #4]
   114c0:	str	r3, [sp, #8]
   114c4:	ldr	r9, [r5, #8]
   114c8:	b	1024c <sfbpf_parse+0x4f8>
   114cc:	ldr	r3, [pc, #-1696]	; 10e34 <sfbpf_parse+0x10e0>
   114d0:	add	r3, pc, r3
   114d4:	add	r3, r3, #2256	; 0x8d0
   114d8:	ldrsh	r4, [r3, ip]
   114dc:	b	102dc <sfbpf_parse+0x588>
   114e0:	ldr	r2, [pc, #-1712]	; 10e38 <sfbpf_parse+0x10e4>
   114e4:	add	r2, pc, r2
   114e8:	ldr	r3, [r2]
   114ec:	add	r3, r3, #1
   114f0:	str	r3, [r2]
   114f4:	ldr	r1, [pc, #-1728]	; 10e3c <sfbpf_parse+0x10e8>
   114f8:	add	r1, pc, r1
   114fc:	ldr	r0, [pc, #-1732]	; 10e40 <sfbpf_parse+0x10ec>
   11500:	add	r0, pc, r0
   11504:	bl	229c <sf_bpf_error>
   11508:	ldr	r3, [sp, #4]
   1150c:	cmp	r3, r6
   11510:	beq	11560 <sfbpf_parse+0x180c>
   11514:	mov	r4, #0
   11518:	sub	r6, r6, #2
   1151c:	cmp	r6, r3
   11520:	bne	11518 <sfbpf_parse+0x17c4>
   11524:	add	r3, sp, #3248	; 0xcb0
   11528:	ldr	r2, [sp, #4]
   1152c:	cmp	r2, r3
   11530:	beq	1153c <sfbpf_parse+0x17e8>
   11534:	ldr	r0, [sp, #4]
   11538:	bl	d48 <free@plt>
   1153c:	mov	r0, r4
   11540:	add	sp, sp, #3648	; 0xe40
   11544:	add	sp, sp, #4
   11548:	ldrd	r4, [sp]
   1154c:	ldrd	r6, [sp, #8]
   11550:	ldrd	r8, [sp, #16]
   11554:	ldrd	sl, [sp, #24]
   11558:	add	sp, sp, #32
   1155c:	pop	{pc}		; (ldr pc, [sp], #4)
   11560:	mov	r4, #0
   11564:	b	11524 <sfbpf_parse+0x17d0>
   11568:	ldr	r3, [sp, #8]
   1156c:	cmp	r3, r6
   11570:	streq	r3, [sp, #4]
   11574:	moveq	r4, #1
   11578:	beq	11534 <sfbpf_parse+0x17e0>
   1157c:	ldr	r3, [sp, #8]
   11580:	str	r3, [sp, #4]
   11584:	mov	r4, #1
   11588:	b	11518 <sfbpf_parse+0x17c4>

0001158c <yy_get_previous_state>:
   1158c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11590:	strd	r6, [sp, #8]
   11594:	strd	r8, [sp, #16]
   11598:	strd	sl, [sp, #24]
   1159c:	str	lr, [sp, #32]
   115a0:	sub	sp, sp, #20
   115a4:	ldr	r2, [pc, #364]	; 11718 <yy_get_previous_state+0x18c>
   115a8:	add	r2, pc, r2
   115ac:	ldr	r3, [pc, #360]	; 1171c <yy_get_previous_state+0x190>
   115b0:	add	r3, pc, r3
   115b4:	ldr	r0, [r3]
   115b8:	ldr	r1, [pc, #352]	; 11720 <yy_get_previous_state+0x194>
   115bc:	ldr	r2, [r2, r1]
   115c0:	ldr	r7, [r2]
   115c4:	ldr	r9, [r3, #4]
   115c8:	cmp	r7, r9
   115cc:	bcs	116fc <yy_get_previous_state+0x170>
   115d0:	ldr	r3, [pc, #332]	; 11724 <yy_get_previous_state+0x198>
   115d4:	add	r3, pc, r3
   115d8:	ldr	r2, [r3, #8]
   115dc:	str	r2, [sp, #4]
   115e0:	ldr	r3, [r3, #12]
   115e4:	str	r3, [sp, #12]
   115e8:	mov	r3, #0
   115ec:	str	r3, [sp, #8]
   115f0:	str	r3, [sp]
   115f4:	ldr	fp, [pc, #300]	; 11728 <yy_get_previous_state+0x19c>
   115f8:	add	fp, pc, fp
   115fc:	ldr	sl, [pc, #296]	; 1172c <yy_get_previous_state+0x1a0>
   11600:	add	sl, pc, sl
   11604:	add	sl, sl, #256	; 0x100
   11608:	ldr	r4, [pc, #288]	; 11730 <yy_get_previous_state+0x1a4>
   1160c:	add	r4, pc, r4
   11610:	sub	r4, r4, #1216	; 0x4c0
   11614:	ldr	r6, [pc, #280]	; 11734 <yy_get_previous_state+0x1a8>
   11618:	add	r6, pc, r6
   1161c:	add	r6, r6, #3120	; 0xc30
   11620:	add	r6, r6, #4
   11624:	ldr	r8, [pc, #268]	; 11738 <yy_get_previous_state+0x1ac>
   11628:	add	r8, pc, r8
   1162c:	b	11648 <yy_get_previous_state+0xbc>
   11630:	lsl	r3, r3, #1
   11634:	ldr	r2, [pc, #256]	; 1173c <yy_get_previous_state+0x1b0>
   11638:	add	r2, pc, r2
   1163c:	ldrsh	r0, [r2, r3]
   11640:	cmp	r7, r9
   11644:	beq	116c4 <yy_get_previous_state+0x138>
   11648:	mov	r1, r7
   1164c:	ldrb	r3, [r7], #1
   11650:	cmp	r3, #0
   11654:	ldrbne	r2, [fp, r3]
   11658:	moveq	r2, #1
   1165c:	lsl	r3, r0, #1
   11660:	ldrsh	r3, [sl, r3]
   11664:	cmp	r3, #0
   11668:	beq	11680 <yy_get_previous_state+0xf4>
   1166c:	str	r1, [sp, #12]
   11670:	str	r0, [sp, #4]
   11674:	mov	r3, #1
   11678:	str	r3, [sp, #8]
   1167c:	str	r3, [sp]
   11680:	ldr	lr, [pc, #184]	; 11740 <yy_get_previous_state+0x1b4>
   11684:	add	lr, pc, lr
   11688:	movw	r5, #1433	; 0x599
   1168c:	mov	r1, r2
   11690:	lsl	r3, r0, #1
   11694:	ldrsh	r3, [r4, r3]
   11698:	add	r3, r3, r2
   1169c:	lsl	ip, r3, #1
   116a0:	ldrsh	ip, [lr, ip]
   116a4:	cmp	ip, r0
   116a8:	beq	11630 <yy_get_previous_state+0xa4>
   116ac:	lsl	r0, r0, #1
   116b0:	ldrsh	r0, [r6, r0]
   116b4:	cmp	r0, r5
   116b8:	addgt	r1, r8, r1
   116bc:	ldrbgt	r2, [r1, #-1272]	; 0xfffffb08
   116c0:	b	1168c <yy_get_previous_state+0x100>
   116c4:	ldr	r3, [sp]
   116c8:	cmp	r3, #0
   116cc:	beq	116e0 <yy_get_previous_state+0x154>
   116d0:	ldr	r3, [pc, #108]	; 11744 <yy_get_previous_state+0x1b8>
   116d4:	add	r3, pc, r3
   116d8:	ldr	r2, [sp, #4]
   116dc:	str	r2, [r3, #8]
   116e0:	ldr	r3, [sp, #8]
   116e4:	cmp	r3, #0
   116e8:	beq	116fc <yy_get_previous_state+0x170>
   116ec:	ldr	r3, [pc, #84]	; 11748 <yy_get_previous_state+0x1bc>
   116f0:	add	r3, pc, r3
   116f4:	ldr	r2, [sp, #12]
   116f8:	str	r2, [r3, #12]
   116fc:	add	sp, sp, #20
   11700:	ldrd	r4, [sp]
   11704:	ldrd	r6, [sp, #8]
   11708:	ldrd	r8, [sp, #16]
   1170c:	ldrd	sl, [sp, #24]
   11710:	add	sp, sp, #32
   11714:	pop	{pc}		; (ldr pc, [sp], #4)
   11718:	.word	0x0001fa50
   1171c:	.word	0x00020584
   11720:	.word	0x000000d8
   11724:	.word	0x00020560
   11728:	.word	0x00005164
   1172c:	.word	0x0000515c
   11730:	.word	0x00007148
   11734:	.word	0x00005144
   11738:	.word	0x0000712c
   1173c:	.word	0x0000b568
   11740:	.word	0x00007adc
   11744:	.word	0x00020460
   11748:	.word	0x00020444

0001174c <sfbpf__load_buffer_state>:
   1174c:	push	{lr}		; (str lr, [sp, #-4]!)
   11750:	ldr	ip, [pc, #72]	; 117a0 <sfbpf__load_buffer_state+0x54>
   11754:	add	ip, pc, ip
   11758:	ldr	r3, [pc, #68]	; 117a4 <sfbpf__load_buffer_state+0x58>
   1175c:	add	r3, pc, r3
   11760:	ldr	r0, [r3, #20]
   11764:	ldr	r1, [r3, #16]
   11768:	ldr	r2, [r1, r0, lsl #2]
   1176c:	ldr	lr, [r2, #16]
   11770:	str	lr, [r3, #24]
   11774:	ldr	r2, [r2, #8]
   11778:	str	r2, [r3, #4]
   1177c:	ldr	lr, [pc, #36]	; 117a8 <sfbpf__load_buffer_state+0x5c>
   11780:	ldr	ip, [ip, lr]
   11784:	str	r2, [ip]
   11788:	ldr	r1, [r1, r0, lsl #2]
   1178c:	ldr	r1, [r1]
   11790:	str	r1, [r3, #28]
   11794:	ldrb	r2, [r2]
   11798:	strb	r2, [r3, #32]
   1179c:	pop	{pc}		; (ldr pc, [sp], #4)
   117a0:	.word	0x0001f8a4
   117a4:	.word	0x000203d8
   117a8:	.word	0x000000d8

000117ac <yy_fatal_error>:
   117ac:	str	r4, [sp, #-8]!
   117b0:	str	lr, [sp, #4]
   117b4:	ldr	r3, [pc, #36]	; 117e0 <yy_fatal_error+0x34>
   117b8:	add	r3, pc, r3
   117bc:	ldr	r2, [pc, #32]	; 117e4 <yy_fatal_error+0x38>
   117c0:	ldr	r3, [r3, r2]
   117c4:	mov	r2, r0
   117c8:	ldr	r1, [pc, #24]	; 117e8 <yy_fatal_error+0x3c>
   117cc:	add	r1, pc, r1
   117d0:	ldr	r0, [r3]
   117d4:	bl	e08 <fprintf@plt>
   117d8:	mov	r0, #2
   117dc:	bl	de4 <exit@plt>
   117e0:	.word	0x0001f840
   117e4:	.word	0x000000d0
   117e8:	.word	0x0000ee14

000117ec <sfbpf_ensure_buffer_stack>:
   117ec:	strd	r4, [sp, #-16]!
   117f0:	str	r6, [sp, #8]
   117f4:	str	lr, [sp, #12]
   117f8:	ldr	r3, [pc, #224]	; 118e0 <sfbpf_ensure_buffer_stack+0xf4>
   117fc:	add	r3, pc, r3
   11800:	ldr	r0, [r3, #16]
   11804:	cmp	r0, #0
   11808:	beq	11838 <sfbpf_ensure_buffer_stack+0x4c>
   1180c:	ldr	r3, [pc, #208]	; 118e4 <sfbpf_ensure_buffer_stack+0xf8>
   11810:	add	r3, pc, r3
   11814:	ldr	r2, [r3, #36]	; 0x24
   11818:	sub	r1, r2, #1
   1181c:	ldr	r3, [r3, #20]
   11820:	cmp	r1, r3
   11824:	bls	11880 <sfbpf_ensure_buffer_stack+0x94>
   11828:	ldrd	r4, [sp]
   1182c:	ldr	r6, [sp, #8]
   11830:	add	sp, sp, #12
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	mov	r0, #4
   1183c:	bl	dc0 <malloc@plt>
   11840:	ldr	r3, [pc, #160]	; 118e8 <sfbpf_ensure_buffer_stack+0xfc>
   11844:	add	r3, pc, r3
   11848:	str	r0, [r3, #16]
   1184c:	cmp	r0, #0
   11850:	beq	11874 <sfbpf_ensure_buffer_stack+0x88>
   11854:	mov	r2, #0
   11858:	str	r2, [r0]
   1185c:	ldr	r3, [pc, #136]	; 118ec <sfbpf_ensure_buffer_stack+0x100>
   11860:	add	r3, pc, r3
   11864:	mov	r1, #1
   11868:	str	r1, [r3, #36]	; 0x24
   1186c:	str	r2, [r3, #20]
   11870:	b	11828 <sfbpf_ensure_buffer_stack+0x3c>
   11874:	ldr	r0, [pc, #116]	; 118f0 <sfbpf_ensure_buffer_stack+0x104>
   11878:	add	r0, pc, r0
   1187c:	bl	117ac <yy_fatal_error>
   11880:	add	r4, r2, #8
   11884:	lsl	r5, r4, #2
   11888:	mov	r1, r5
   1188c:	bl	d90 <realloc@plt>
   11890:	ldr	r3, [pc, #92]	; 118f4 <sfbpf_ensure_buffer_stack+0x108>
   11894:	add	r3, pc, r3
   11898:	str	r0, [r3, #16]
   1189c:	cmp	r0, #0
   118a0:	beq	118d4 <sfbpf_ensure_buffer_stack+0xe8>
   118a4:	sub	r5, r5, #32
   118a8:	add	r1, r0, r5
   118ac:	mov	r2, #0
   118b0:	mov	r3, #0
   118b4:	strd	r2, [r0, r5]
   118b8:	strd	r2, [r1, #8]
   118bc:	strd	r2, [r1, #16]
   118c0:	strd	r2, [r1, #24]
   118c4:	ldr	r3, [pc, #44]	; 118f8 <sfbpf_ensure_buffer_stack+0x10c>
   118c8:	add	r3, pc, r3
   118cc:	str	r4, [r3, #36]	; 0x24
   118d0:	b	11828 <sfbpf_ensure_buffer_stack+0x3c>
   118d4:	ldr	r0, [pc, #32]	; 118fc <sfbpf_ensure_buffer_stack+0x110>
   118d8:	add	r0, pc, r0
   118dc:	bl	117ac <yy_fatal_error>
   118e0:	.word	0x00020338
   118e4:	.word	0x00020324
   118e8:	.word	0x000202f0
   118ec:	.word	0x000202d4
   118f0:	.word	0x0000ed6c
   118f4:	.word	0x000202a0
   118f8:	.word	0x0002026c
   118fc:	.word	0x0000ed0c

00011900 <sfbpf__switch_to_buffer>:
   11900:	str	r4, [sp, #-8]!
   11904:	str	lr, [sp, #4]
   11908:	mov	r4, r0
   1190c:	bl	117ec <sfbpf_ensure_buffer_stack>
   11910:	ldr	r3, [pc, #128]	; 11998 <sfbpf__switch_to_buffer+0x98>
   11914:	add	r3, pc, r3
   11918:	ldr	r3, [r3, #16]
   1191c:	cmp	r3, #0
   11920:	beq	1198c <sfbpf__switch_to_buffer+0x8c>
   11924:	ldr	r2, [pc, #112]	; 1199c <sfbpf__switch_to_buffer+0x9c>
   11928:	add	r2, pc, r2
   1192c:	ldr	r2, [r2, #20]
   11930:	ldr	r1, [r3, r2, lsl #2]
   11934:	cmp	r1, r4
   11938:	beq	11980 <sfbpf__switch_to_buffer+0x80>
   1193c:	cmp	r1, #0
   11940:	beq	1196c <sfbpf__switch_to_buffer+0x6c>
   11944:	ldr	r1, [pc, #84]	; 119a0 <sfbpf__switch_to_buffer+0xa0>
   11948:	add	r1, pc, r1
   1194c:	ldr	r0, [r1, #4]
   11950:	ldrb	ip, [r1, #32]
   11954:	strb	ip, [r0]
   11958:	ldr	ip, [r3, r2, lsl #2]
   1195c:	str	r0, [ip, #8]
   11960:	ldr	r2, [r3, r2, lsl #2]
   11964:	ldr	r1, [r1, #24]
   11968:	str	r1, [r2, #16]
   1196c:	ldr	r2, [pc, #48]	; 119a4 <sfbpf__switch_to_buffer+0xa4>
   11970:	add	r2, pc, r2
   11974:	ldr	r2, [r2, #20]
   11978:	str	r4, [r3, r2, lsl #2]
   1197c:	bl	1174c <sfbpf__load_buffer_state>
   11980:	ldr	r4, [sp]
   11984:	add	sp, sp, #4
   11988:	pop	{pc}		; (ldr pc, [sp], #4)
   1198c:	cmp	r4, #0
   11990:	bne	1196c <sfbpf__switch_to_buffer+0x6c>
   11994:	b	11980 <sfbpf__switch_to_buffer+0x80>
   11998:	.word	0x00020220
   1199c:	.word	0x0002020c
   119a0:	.word	0x000201ec
   119a4:	.word	0x000201c4

000119a8 <sfbpf__delete_buffer>:
   119a8:	str	r4, [sp, #-8]!
   119ac:	str	lr, [sp, #4]
   119b0:	subs	r4, r0, #0
   119b4:	beq	119fc <sfbpf__delete_buffer+0x54>
   119b8:	ldr	r3, [pc, #84]	; 11a14 <sfbpf__delete_buffer+0x6c>
   119bc:	add	r3, pc, r3
   119c0:	ldr	r3, [r3, #16]
   119c4:	cmp	r3, #0
   119c8:	beq	119e8 <sfbpf__delete_buffer+0x40>
   119cc:	ldr	r2, [pc, #68]	; 11a18 <sfbpf__delete_buffer+0x70>
   119d0:	add	r2, pc, r2
   119d4:	ldr	r2, [r2, #20]
   119d8:	ldr	r1, [r3, r2, lsl #2]
   119dc:	cmp	r4, r1
   119e0:	moveq	r1, #0
   119e4:	streq	r1, [r3, r2, lsl #2]
   119e8:	ldr	r3, [r4, #20]
   119ec:	cmp	r3, #0
   119f0:	bne	11a08 <sfbpf__delete_buffer+0x60>
   119f4:	mov	r0, r4
   119f8:	bl	d48 <free@plt>
   119fc:	ldr	r4, [sp]
   11a00:	add	sp, sp, #4
   11a04:	pop	{pc}		; (ldr pc, [sp], #4)
   11a08:	ldr	r0, [r4, #4]
   11a0c:	bl	d48 <free@plt>
   11a10:	b	119f4 <sfbpf__delete_buffer+0x4c>
   11a14:	.word	0x00020178
   11a18:	.word	0x00020164

00011a1c <sfbpf__flush_buffer>:
   11a1c:	cmp	r0, #0
   11a20:	bxeq	lr
   11a24:	mov	r3, #0
   11a28:	str	r3, [r0, #16]
   11a2c:	ldr	r2, [r0, #4]
   11a30:	strb	r3, [r2]
   11a34:	ldr	r2, [r0, #4]
   11a38:	strb	r3, [r2, #1]
   11a3c:	ldr	r2, [r0, #4]
   11a40:	str	r2, [r0, #8]
   11a44:	mov	r2, #1
   11a48:	str	r2, [r0, #28]
   11a4c:	str	r3, [r0, #44]	; 0x2c
   11a50:	ldr	r3, [pc, #60]	; 11a94 <sfbpf__flush_buffer+0x78>
   11a54:	add	r3, pc, r3
   11a58:	ldr	r3, [r3, #16]
   11a5c:	cmp	r3, #0
   11a60:	bxeq	lr
   11a64:	ldr	r2, [pc, #44]	; 11a98 <sfbpf__flush_buffer+0x7c>
   11a68:	add	r2, pc, r2
   11a6c:	ldr	r2, [r2, #20]
   11a70:	ldr	r3, [r3, r2, lsl #2]
   11a74:	cmp	r0, r3
   11a78:	bxne	lr
   11a7c:	str	r4, [sp, #-8]!
   11a80:	str	lr, [sp, #4]
   11a84:	bl	1174c <sfbpf__load_buffer_state>
   11a88:	ldr	r4, [sp]
   11a8c:	add	sp, sp, #4
   11a90:	pop	{pc}		; (ldr pc, [sp], #4)
   11a94:	.word	0x000200e0
   11a98:	.word	0x000200cc

00011a9c <sfbpf__init_buffer>:
   11a9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11aa0:	strd	r6, [sp, #8]
   11aa4:	str	r8, [sp, #16]
   11aa8:	str	lr, [sp, #20]
   11aac:	mov	r4, r0
   11ab0:	mov	r5, r1
   11ab4:	bl	e14 <__errno_location@plt>
   11ab8:	mov	r6, r0
   11abc:	ldr	r7, [r0]
   11ac0:	mov	r0, r4
   11ac4:	bl	11a1c <sfbpf__flush_buffer>
   11ac8:	str	r5, [r4]
   11acc:	mov	r3, #1
   11ad0:	str	r3, [r4, #40]	; 0x28
   11ad4:	ldr	r3, [pc, #116]	; 11b50 <sfbpf__init_buffer+0xb4>
   11ad8:	add	r3, pc, r3
   11adc:	ldr	r3, [r3, #16]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b00 <sfbpf__init_buffer+0x64>
   11ae8:	ldr	r2, [pc, #100]	; 11b54 <sfbpf__init_buffer+0xb8>
   11aec:	add	r2, pc, r2
   11af0:	ldr	r2, [r2, #20]
   11af4:	ldr	r3, [r3, r2, lsl #2]
   11af8:	cmp	r4, r3
   11afc:	beq	11b10 <sfbpf__init_buffer+0x74>
   11b00:	mov	r3, #1
   11b04:	str	r3, [r4, #32]
   11b08:	mov	r3, #0
   11b0c:	str	r3, [r4, #36]	; 0x24
   11b10:	cmp	r5, #0
   11b14:	moveq	r0, #0
   11b18:	beq	11b34 <sfbpf__init_buffer+0x98>
   11b1c:	mov	r0, r5
   11b20:	bl	e50 <fileno@plt>
   11b24:	bl	eb0 <isatty@plt>
   11b28:	cmp	r0, #0
   11b2c:	movle	r0, #0
   11b30:	movgt	r0, #1
   11b34:	str	r0, [r4, #24]
   11b38:	str	r7, [r6]
   11b3c:	ldrd	r4, [sp]
   11b40:	ldrd	r6, [sp, #8]
   11b44:	ldr	r8, [sp, #16]
   11b48:	add	sp, sp, #20
   11b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b50:	.word	0x0002005c
   11b54:	.word	0x00020048

00011b58 <sfbpf__create_buffer>:
   11b58:	strd	r4, [sp, #-16]!
   11b5c:	str	r6, [sp, #8]
   11b60:	str	lr, [sp, #12]
   11b64:	mov	r6, r0
   11b68:	mov	r5, r1
   11b6c:	mov	r0, #48	; 0x30
   11b70:	bl	dc0 <malloc@plt>
   11b74:	subs	r4, r0, #0
   11b78:	beq	11bbc <sfbpf__create_buffer+0x64>
   11b7c:	str	r5, [r4, #12]
   11b80:	add	r0, r5, #2
   11b84:	bl	dc0 <malloc@plt>
   11b88:	str	r0, [r4, #4]
   11b8c:	cmp	r0, #0
   11b90:	beq	11bc8 <sfbpf__create_buffer+0x70>
   11b94:	mov	r3, #1
   11b98:	str	r3, [r4, #20]
   11b9c:	mov	r1, r6
   11ba0:	mov	r0, r4
   11ba4:	bl	11a9c <sfbpf__init_buffer>
   11ba8:	mov	r0, r4
   11bac:	ldrd	r4, [sp]
   11bb0:	ldr	r6, [sp, #8]
   11bb4:	add	sp, sp, #12
   11bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bbc:	ldr	r0, [pc, #16]	; 11bd4 <sfbpf__create_buffer+0x7c>
   11bc0:	add	r0, pc, r0
   11bc4:	bl	117ac <yy_fatal_error>
   11bc8:	ldr	r0, [pc, #8]	; 11bd8 <sfbpf__create_buffer+0x80>
   11bcc:	add	r0, pc, r0
   11bd0:	bl	117ac <yy_fatal_error>
   11bd4:	.word	0x0000ea58
   11bd8:	.word	0x0000ea4c

00011bdc <sfbpf_restart>:
   11bdc:	strd	r4, [sp, #-16]!
   11be0:	str	r6, [sp, #8]
   11be4:	str	lr, [sp, #12]
   11be8:	mov	r5, r0
   11bec:	ldr	r3, [pc, #132]	; 11c78 <sfbpf_restart+0x9c>
   11bf0:	add	r3, pc, r3
   11bf4:	ldr	r4, [r3, #16]
   11bf8:	cmp	r4, #0
   11bfc:	beq	11c48 <sfbpf_restart+0x6c>
   11c00:	ldr	r3, [pc, #116]	; 11c7c <sfbpf_restart+0xa0>
   11c04:	add	r3, pc, r3
   11c08:	ldr	r3, [r3, #20]
   11c0c:	ldr	r3, [r4, r3, lsl #2]
   11c10:	cmp	r3, #0
   11c14:	beq	11c48 <sfbpf_restart+0x6c>
   11c18:	ldr	r3, [pc, #96]	; 11c80 <sfbpf_restart+0xa4>
   11c1c:	add	r3, pc, r3
   11c20:	ldr	r3, [r3, #20]
   11c24:	ldr	r4, [r4, r3, lsl #2]
   11c28:	mov	r1, r5
   11c2c:	mov	r0, r4
   11c30:	bl	11a9c <sfbpf__init_buffer>
   11c34:	bl	1174c <sfbpf__load_buffer_state>
   11c38:	ldrd	r4, [sp]
   11c3c:	ldr	r6, [sp, #8]
   11c40:	add	sp, sp, #12
   11c44:	pop	{pc}		; (ldr pc, [sp], #4)
   11c48:	bl	117ec <sfbpf_ensure_buffer_stack>
   11c4c:	ldr	r3, [pc, #48]	; 11c84 <sfbpf_restart+0xa8>
   11c50:	add	r3, pc, r3
   11c54:	ldr	r4, [r3, #16]
   11c58:	ldr	r6, [r3, #20]
   11c5c:	mov	r1, #16384	; 0x4000
   11c60:	ldr	r0, [r3, #28]
   11c64:	bl	11b58 <sfbpf__create_buffer>
   11c68:	str	r0, [r4, r6, lsl #2]
   11c6c:	cmp	r4, #0
   11c70:	beq	11c28 <sfbpf_restart+0x4c>
   11c74:	b	11c18 <sfbpf_restart+0x3c>
   11c78:	.word	0x0001ff44
   11c7c:	.word	0x0001ff30
   11c80:	.word	0x0001ff18
   11c84:	.word	0x0001fee4

00011c88 <sfbpf_lex>:
   11c88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11c8c:	strd	r6, [sp, #8]
   11c90:	strd	r8, [sp, #16]
   11c94:	strd	sl, [sp, #24]
   11c98:	str	lr, [sp, #32]
   11c9c:	sub	sp, sp, #108	; 0x6c
   11ca0:	ldr	fp, [pc, #3820]	; 12b94 <sfbpf_lex+0xf0c>
   11ca4:	add	fp, pc, fp
   11ca8:	ldr	r3, [pc, #3816]	; 12b98 <sfbpf_lex+0xf10>
   11cac:	add	r3, pc, r3
   11cb0:	ldr	r3, [r3, #40]	; 0x28
   11cb4:	cmp	r3, #0
   11cb8:	bne	11d3c <sfbpf_lex+0xb4>
   11cbc:	ldr	r3, [pc, #3800]	; 12b9c <sfbpf_lex+0xf14>
   11cc0:	add	r3, pc, r3
   11cc4:	mov	r2, #1
   11cc8:	str	r2, [r3, #40]	; 0x28
   11ccc:	ldr	r3, [r3]
   11cd0:	cmp	r3, #0
   11cd4:	bne	11ce4 <sfbpf_lex+0x5c>
   11cd8:	ldr	r3, [pc, #3776]	; 12ba0 <sfbpf_lex+0xf18>
   11cdc:	add	r3, pc, r3
   11ce0:	str	r2, [r3]
   11ce4:	ldr	r3, [pc, #3768]	; 12ba4 <sfbpf_lex+0xf1c>
   11ce8:	add	r3, pc, r3
   11cec:	ldr	r3, [r3, #28]
   11cf0:	cmp	r3, #0
   11cf4:	beq	11dcc <sfbpf_lex+0x144>
   11cf8:	ldr	r3, [pc, #3752]	; 12ba8 <sfbpf_lex+0xf20>
   11cfc:	add	r3, pc, r3
   11d00:	ldr	r3, [r3, #44]	; 0x2c
   11d04:	cmp	r3, #0
   11d08:	beq	11de8 <sfbpf_lex+0x160>
   11d0c:	ldr	r3, [pc, #3736]	; 12bac <sfbpf_lex+0xf24>
   11d10:	add	r3, pc, r3
   11d14:	ldr	r3, [r3, #16]
   11d18:	cmp	r3, #0
   11d1c:	beq	11e04 <sfbpf_lex+0x17c>
   11d20:	ldr	r2, [pc, #3720]	; 12bb0 <sfbpf_lex+0xf28>
   11d24:	add	r2, pc, r2
   11d28:	ldr	r2, [r2, #20]
   11d2c:	ldr	r3, [r3, r2, lsl #2]
   11d30:	cmp	r3, #0
   11d34:	beq	11e04 <sfbpf_lex+0x17c>
   11d38:	bl	1174c <sfbpf__load_buffer_state>
   11d3c:	ldr	r3, [pc, #3696]	; 12bb4 <sfbpf_lex+0xf2c>
   11d40:	add	r3, pc, r3
   11d44:	sub	r7, r3, #1216	; 0x4c0
   11d48:	ldr	r3, [pc, #3688]	; 12bb8 <sfbpf_lex+0xf30>
   11d4c:	add	r3, pc, r3
   11d50:	add	sl, r3, #3120	; 0xc30
   11d54:	add	sl, sl, #4
   11d58:	ldr	r5, [pc, #3676]	; 12bbc <sfbpf_lex+0xf34>
   11d5c:	add	r5, pc, r5
   11d60:	mov	r9, fp
   11d64:	mov	fp, sl
   11d68:	mov	sl, r7
   11d6c:	mov	r6, r5
   11d70:	ldr	r3, [pc, #3656]	; 12bc0 <sfbpf_lex+0xf38>
   11d74:	add	r3, pc, r3
   11d78:	ldr	r5, [r3, #4]
   11d7c:	ldrb	r2, [r3, #32]
   11d80:	strb	r2, [r5]
   11d84:	ldr	r0, [r3]
   11d88:	str	r5, [sp, #20]
   11d8c:	mov	r3, fp
   11d90:	mov	fp, r9
   11d94:	mov	r9, r3
   11d98:	ldr	r3, [pc, #3620]	; 12bc4 <sfbpf_lex+0xf3c>
   11d9c:	add	r3, pc, r3
   11da0:	ldr	r2, [r3, #8]
   11da4:	str	r2, [sp, #16]
   11da8:	ldr	r3, [r3, #12]
   11dac:	str	r3, [sp, #8]
   11db0:	mov	r3, #0
   11db4:	str	r3, [sp, #12]
   11db8:	str	r3, [sp, #4]
   11dbc:	ldr	r7, [pc, #3588]	; 12bc8 <sfbpf_lex+0xf40>
   11dc0:	add	r7, pc, r7
   11dc4:	add	r8, r7, #256	; 0x100
   11dc8:	b	11e88 <sfbpf_lex+0x200>
   11dcc:	ldr	r3, [pc, #3576]	; 12bcc <sfbpf_lex+0xf44>
   11dd0:	ldr	r3, [fp, r3]
   11dd4:	ldr	r2, [r3]
   11dd8:	ldr	r3, [pc, #3568]	; 12bd0 <sfbpf_lex+0xf48>
   11ddc:	add	r3, pc, r3
   11de0:	str	r2, [r3, #28]
   11de4:	b	11cf8 <sfbpf_lex+0x70>
   11de8:	ldr	r3, [pc, #3556]	; 12bd4 <sfbpf_lex+0xf4c>
   11dec:	ldr	r3, [fp, r3]
   11df0:	ldr	r2, [r3]
   11df4:	ldr	r3, [pc, #3548]	; 12bd8 <sfbpf_lex+0xf50>
   11df8:	add	r3, pc, r3
   11dfc:	str	r2, [r3, #44]	; 0x2c
   11e00:	b	11d0c <sfbpf_lex+0x84>
   11e04:	bl	117ec <sfbpf_ensure_buffer_stack>
   11e08:	ldr	r3, [pc, #3532]	; 12bdc <sfbpf_lex+0xf54>
   11e0c:	add	r3, pc, r3
   11e10:	ldr	r5, [r3, #20]
   11e14:	ldr	r4, [r3, #16]
   11e18:	mov	r1, #16384	; 0x4000
   11e1c:	ldr	r0, [r3, #28]
   11e20:	bl	11b58 <sfbpf__create_buffer>
   11e24:	str	r0, [r4, r5, lsl #2]
   11e28:	b	11d38 <sfbpf_lex+0xb0>
   11e2c:	ldr	sl, [sp, #12]
   11e30:	ldr	fp, [sp, #16]
   11e34:	ldr	r6, [sp, #24]
   11e38:	b	11d70 <sfbpf_lex+0xe8>
   11e3c:	str	r0, [sp, #16]
   11e40:	str	r3, [sp, #8]
   11e44:	mov	r3, #1
   11e48:	str	r3, [sp, #12]
   11e4c:	str	r3, [sp, #4]
   11e50:	b	11ea8 <sfbpf_lex+0x220>
   11e54:	lsl	r3, r3, #1
   11e58:	ldr	r2, [pc, #3456]	; 12be0 <sfbpf_lex+0xf58>
   11e5c:	add	r2, pc, r2
   11e60:	ldrsh	r0, [r2, r3]
   11e64:	mov	r4, r5
   11e68:	ldr	r3, [pc, #3444]	; 12be4 <sfbpf_lex+0xf5c>
   11e6c:	add	r3, pc, r3
   11e70:	lsl	r2, r0, #1
   11e74:	sub	r3, r3, #1216	; 0x4c0
   11e78:	ldrsh	r2, [r3, r2]
   11e7c:	movw	r3, #7401	; 0x1ce9
   11e80:	cmp	r2, r3
   11e84:	beq	11ef0 <sfbpf_lex+0x268>
   11e88:	mov	r3, r5
   11e8c:	add	r5, r5, #1
   11e90:	ldrb	r2, [r3]
   11e94:	ldrb	r2, [r7, r2]
   11e98:	lsl	r1, r0, #1
   11e9c:	ldrsh	r1, [r8, r1]
   11ea0:	cmp	r1, #0
   11ea4:	bne	11e3c <sfbpf_lex+0x1b4>
   11ea8:	ldr	lr, [pc, #3384]	; 12be8 <sfbpf_lex+0xf60>
   11eac:	add	lr, pc, lr
   11eb0:	movw	r4, #1433	; 0x599
   11eb4:	mov	r1, r2
   11eb8:	lsl	r3, r0, #1
   11ebc:	ldrsh	r3, [sl, r3]
   11ec0:	add	r3, r3, r2
   11ec4:	lsl	ip, r3, #1
   11ec8:	ldrsh	ip, [lr, ip]
   11ecc:	cmp	ip, r0
   11ed0:	beq	11e54 <sfbpf_lex+0x1cc>
   11ed4:	lsl	r0, r0, #1
   11ed8:	ldrsh	r0, [r9, r0]
   11edc:	cmp	r0, r4
   11ee0:	ble	11eb4 <sfbpf_lex+0x22c>
   11ee4:	add	r1, r6, r1
   11ee8:	ldrb	r2, [r1, #-1272]	; 0xfffffb08
   11eec:	b	11eb4 <sfbpf_lex+0x22c>
   11ef0:	ldr	r3, [sp, #4]
   11ef4:	cmp	r3, #0
   11ef8:	beq	11f0c <sfbpf_lex+0x284>
   11efc:	ldr	r3, [pc, #3304]	; 12bec <sfbpf_lex+0xf64>
   11f00:	add	r3, pc, r3
   11f04:	ldr	r2, [sp, #8]
   11f08:	str	r2, [r3, #12]
   11f0c:	ldr	r3, [sp, #12]
   11f10:	cmp	r3, #0
   11f14:	beq	11f28 <sfbpf_lex+0x2a0>
   11f18:	ldr	r3, [pc, #3280]	; 12bf0 <sfbpf_lex+0xf68>
   11f1c:	add	r3, pc, r3
   11f20:	ldr	r2, [sp, #16]
   11f24:	str	r2, [r3, #8]
   11f28:	ldr	r3, [pc, #3268]	; 12bf4 <sfbpf_lex+0xf6c>
   11f2c:	add	r3, pc, r3
   11f30:	add	r5, r3, #256	; 0x100
   11f34:	ldr	r7, [pc, #3260]	; 12bf8 <sfbpf_lex+0xf70>
   11f38:	add	r7, pc, r7
   11f3c:	ldr	r3, [pc, #3440]	; 12cb4 <sfbpf_lex+0x102c>
   11f40:	ldr	r3, [fp, r3]
   11f44:	str	r3, [sp, #4]
   11f48:	ldr	r3, [pc, #3244]	; 12bfc <sfbpf_lex+0xf74>
   11f4c:	ldr	r3, [fp, r3]
   11f50:	str	r3, [sp, #8]
   11f54:	ldr	r3, [pc, #3236]	; 12c00 <sfbpf_lex+0xf78>
   11f58:	add	r3, pc, r3
   11f5c:	str	r3, [sp, #40]	; 0x28
   11f60:	str	sl, [sp, #12]
   11f64:	mov	sl, r5
   11f68:	str	r9, [sp, #16]
   11f6c:	mov	r9, fp
   11f70:	mov	fp, r4
   11f74:	mov	r4, r7
   11f78:	str	r6, [sp, #24]
   11f7c:	lsl	r3, r0, #1
   11f80:	ldrsh	r3, [sl, r3]
   11f84:	cmp	r3, #0
   11f88:	bne	11fa8 <sfbpf_lex+0x320>
   11f8c:	ldr	fp, [r4, #12]
   11f90:	ldr	r3, [pc, #3180]	; 12c04 <sfbpf_lex+0xf7c>
   11f94:	add	r3, pc, r3
   11f98:	ldr	r2, [r4, #8]
   11f9c:	lsl	r2, r2, #1
   11fa0:	add	r3, r3, #256	; 0x100
   11fa4:	ldrsh	r3, [r3, r2]
   11fa8:	ldr	r1, [sp, #4]
   11fac:	ldr	r2, [sp, #20]
   11fb0:	str	r2, [r1]
   11fb4:	sub	r2, fp, r2
   11fb8:	ldr	r1, [sp, #8]
   11fbc:	str	r2, [r1]
   11fc0:	ldr	r2, [pc, #3136]	; 12c08 <sfbpf_lex+0xf80>
   11fc4:	add	r2, pc, r2
   11fc8:	ldrb	r1, [fp]
   11fcc:	strb	r1, [r2, #32]
   11fd0:	mov	r1, #0
   11fd4:	strb	r1, [fp]
   11fd8:	str	fp, [r2, #4]
   11fdc:	ldr	r2, [pc, #3112]	; 12c0c <sfbpf_lex+0xf84>
   11fe0:	add	r2, pc, r2
   11fe4:	str	r2, [sp, #32]
   11fe8:	ldr	r2, [pc, #3104]	; 12c10 <sfbpf_lex+0xf88>
   11fec:	add	r2, pc, r2
   11ff0:	str	r2, [sp, #36]	; 0x24
   11ff4:	ldr	r2, [pc, #3096]	; 12c14 <sfbpf_lex+0xf8c>
   11ff8:	add	r2, pc, r2
   11ffc:	str	r2, [sp, #44]	; 0x2c
   12000:	str	sl, [sp, #28]
   12004:	cmp	r3, #146	; 0x92
   12008:	addls	pc, pc, r3, lsl #2
   1200c:	b	13190 <sfbpf_lex+0x1508>
   12010:	b	12264 <sfbpf_lex+0x5dc>
   12014:	b	1319c <sfbpf_lex+0x1514>
   12018:	b	1225c <sfbpf_lex+0x5d4>
   1201c:	b	131a4 <sfbpf_lex+0x151c>
   12020:	b	131a4 <sfbpf_lex+0x151c>
   12024:	b	12284 <sfbpf_lex+0x5fc>
   12028:	b	1228c <sfbpf_lex+0x604>
   1202c:	b	12294 <sfbpf_lex+0x60c>
   12030:	b	1229c <sfbpf_lex+0x614>
   12034:	b	122a4 <sfbpf_lex+0x61c>
   12038:	b	122ac <sfbpf_lex+0x624>
   1203c:	b	122b4 <sfbpf_lex+0x62c>
   12040:	b	122bc <sfbpf_lex+0x634>
   12044:	b	122c4 <sfbpf_lex+0x63c>
   12048:	b	122cc <sfbpf_lex+0x644>
   1204c:	b	122d4 <sfbpf_lex+0x64c>
   12050:	b	122dc <sfbpf_lex+0x654>
   12054:	b	122e4 <sfbpf_lex+0x65c>
   12058:	b	122ec <sfbpf_lex+0x664>
   1205c:	b	122f4 <sfbpf_lex+0x66c>
   12060:	b	122fc <sfbpf_lex+0x674>
   12064:	b	12304 <sfbpf_lex+0x67c>
   12068:	b	1230c <sfbpf_lex+0x684>
   1206c:	b	12314 <sfbpf_lex+0x68c>
   12070:	b	1231c <sfbpf_lex+0x694>
   12074:	b	12324 <sfbpf_lex+0x69c>
   12078:	b	1232c <sfbpf_lex+0x6a4>
   1207c:	b	12334 <sfbpf_lex+0x6ac>
   12080:	b	1233c <sfbpf_lex+0x6b4>
   12084:	b	12344 <sfbpf_lex+0x6bc>
   12088:	b	1234c <sfbpf_lex+0x6c4>
   1208c:	b	12354 <sfbpf_lex+0x6cc>
   12090:	b	1235c <sfbpf_lex+0x6d4>
   12094:	b	12364 <sfbpf_lex+0x6dc>
   12098:	b	1236c <sfbpf_lex+0x6e4>
   1209c:	b	12374 <sfbpf_lex+0x6ec>
   120a0:	b	1237c <sfbpf_lex+0x6f4>
   120a4:	b	12384 <sfbpf_lex+0x6fc>
   120a8:	b	1238c <sfbpf_lex+0x704>
   120ac:	b	12394 <sfbpf_lex+0x70c>
   120b0:	b	1239c <sfbpf_lex+0x714>
   120b4:	b	123a4 <sfbpf_lex+0x71c>
   120b8:	b	123ac <sfbpf_lex+0x724>
   120bc:	b	123b4 <sfbpf_lex+0x72c>
   120c0:	b	123bc <sfbpf_lex+0x734>
   120c4:	b	123c4 <sfbpf_lex+0x73c>
   120c8:	b	123cc <sfbpf_lex+0x744>
   120cc:	b	123d4 <sfbpf_lex+0x74c>
   120d0:	b	123dc <sfbpf_lex+0x754>
   120d4:	b	123e4 <sfbpf_lex+0x75c>
   120d8:	b	123ec <sfbpf_lex+0x764>
   120dc:	b	123f4 <sfbpf_lex+0x76c>
   120e0:	b	123fc <sfbpf_lex+0x774>
   120e4:	b	12404 <sfbpf_lex+0x77c>
   120e8:	b	1240c <sfbpf_lex+0x784>
   120ec:	b	12414 <sfbpf_lex+0x78c>
   120f0:	b	1241c <sfbpf_lex+0x794>
   120f4:	b	12424 <sfbpf_lex+0x79c>
   120f8:	b	1242c <sfbpf_lex+0x7a4>
   120fc:	b	12434 <sfbpf_lex+0x7ac>
   12100:	b	1243c <sfbpf_lex+0x7b4>
   12104:	b	12444 <sfbpf_lex+0x7bc>
   12108:	b	1244c <sfbpf_lex+0x7c4>
   1210c:	b	12454 <sfbpf_lex+0x7cc>
   12110:	b	1245c <sfbpf_lex+0x7d4>
   12114:	b	12464 <sfbpf_lex+0x7dc>
   12118:	b	1246c <sfbpf_lex+0x7e4>
   1211c:	b	12474 <sfbpf_lex+0x7ec>
   12120:	b	1247c <sfbpf_lex+0x7f4>
   12124:	b	12484 <sfbpf_lex+0x7fc>
   12128:	b	1248c <sfbpf_lex+0x804>
   1212c:	b	12494 <sfbpf_lex+0x80c>
   12130:	b	1249c <sfbpf_lex+0x814>
   12134:	b	124a4 <sfbpf_lex+0x81c>
   12138:	b	124ac <sfbpf_lex+0x824>
   1213c:	b	124b4 <sfbpf_lex+0x82c>
   12140:	b	124bc <sfbpf_lex+0x834>
   12144:	b	124c4 <sfbpf_lex+0x83c>
   12148:	b	124cc <sfbpf_lex+0x844>
   1214c:	b	124d4 <sfbpf_lex+0x84c>
   12150:	b	124dc <sfbpf_lex+0x854>
   12154:	b	124e4 <sfbpf_lex+0x85c>
   12158:	b	124ec <sfbpf_lex+0x864>
   1215c:	b	124f4 <sfbpf_lex+0x86c>
   12160:	b	124fc <sfbpf_lex+0x874>
   12164:	b	12504 <sfbpf_lex+0x87c>
   12168:	b	1250c <sfbpf_lex+0x884>
   1216c:	b	12514 <sfbpf_lex+0x88c>
   12170:	b	1251c <sfbpf_lex+0x894>
   12174:	b	12524 <sfbpf_lex+0x89c>
   12178:	b	1252c <sfbpf_lex+0x8a4>
   1217c:	b	12534 <sfbpf_lex+0x8ac>
   12180:	b	1253c <sfbpf_lex+0x8b4>
   12184:	b	12544 <sfbpf_lex+0x8bc>
   12188:	b	1254c <sfbpf_lex+0x8c4>
   1218c:	b	12554 <sfbpf_lex+0x8cc>
   12190:	b	1255c <sfbpf_lex+0x8d4>
   12194:	b	12564 <sfbpf_lex+0x8dc>
   12198:	b	1256c <sfbpf_lex+0x8e4>
   1219c:	b	12574 <sfbpf_lex+0x8ec>
   121a0:	b	1257c <sfbpf_lex+0x8f4>
   121a4:	b	12584 <sfbpf_lex+0x8fc>
   121a8:	b	11e2c <sfbpf_lex+0x1a4>
   121ac:	b	1258c <sfbpf_lex+0x904>
   121b0:	b	125a0 <sfbpf_lex+0x918>
   121b4:	b	125a8 <sfbpf_lex+0x920>
   121b8:	b	125b0 <sfbpf_lex+0x928>
   121bc:	b	125b8 <sfbpf_lex+0x930>
   121c0:	b	125c0 <sfbpf_lex+0x938>
   121c4:	b	125c8 <sfbpf_lex+0x940>
   121c8:	b	125d0 <sfbpf_lex+0x948>
   121cc:	b	125f8 <sfbpf_lex+0x970>
   121d0:	b	1261c <sfbpf_lex+0x994>
   121d4:	b	126cc <sfbpf_lex+0xa44>
   121d8:	b	126f0 <sfbpf_lex+0xa68>
   121dc:	b	1277c <sfbpf_lex+0xaf4>
   121e0:	b	12794 <sfbpf_lex+0xb0c>
   121e4:	b	127ac <sfbpf_lex+0xb24>
   121e8:	b	127c4 <sfbpf_lex+0xb3c>
   121ec:	b	127dc <sfbpf_lex+0xb54>
   121f0:	b	127f4 <sfbpf_lex+0xb6c>
   121f4:	b	1280c <sfbpf_lex+0xb84>
   121f8:	b	12824 <sfbpf_lex+0xb9c>
   121fc:	b	1283c <sfbpf_lex+0xbb4>
   12200:	b	12854 <sfbpf_lex+0xbcc>
   12204:	b	1286c <sfbpf_lex+0xbe4>
   12208:	b	12884 <sfbpf_lex+0xbfc>
   1220c:	b	1289c <sfbpf_lex+0xc14>
   12210:	b	128b4 <sfbpf_lex+0xc2c>
   12214:	b	128cc <sfbpf_lex+0xc44>
   12218:	b	128e4 <sfbpf_lex+0xc5c>
   1221c:	b	128fc <sfbpf_lex+0xc74>
   12220:	b	12914 <sfbpf_lex+0xc8c>
   12224:	b	1292c <sfbpf_lex+0xca4>
   12228:	b	12944 <sfbpf_lex+0xcbc>
   1222c:	b	1295c <sfbpf_lex+0xcd4>
   12230:	b	12974 <sfbpf_lex+0xcec>
   12234:	b	1298c <sfbpf_lex+0xd04>
   12238:	b	129a4 <sfbpf_lex+0xd1c>
   1223c:	b	129bc <sfbpf_lex+0xd34>
   12240:	b	129d4 <sfbpf_lex+0xd4c>
   12244:	b	129f8 <sfbpf_lex+0xd70>
   12248:	b	12a20 <sfbpf_lex+0xd98>
   1224c:	b	12a38 <sfbpf_lex+0xdb0>
   12250:	b	12a54 <sfbpf_lex+0xdcc>
   12254:	b	12a98 <sfbpf_lex+0xe10>
   12258:	b	12a90 <sfbpf_lex+0xe08>
   1225c:	movw	r0, #259	; 0x103
   12260:	b	131a8 <sfbpf_lex+0x1520>
   12264:	ldr	sl, [sp, #28]
   12268:	ldr	r3, [pc, #2472]	; 12c18 <sfbpf_lex+0xf90>
   1226c:	add	r3, pc, r3
   12270:	ldrb	r2, [r3, #32]
   12274:	strb	r2, [fp]
   12278:	ldr	fp, [r3, #12]
   1227c:	ldr	r0, [r3, #8]
   12280:	b	11f7c <sfbpf_lex+0x2f4>
   12284:	movw	r0, #271	; 0x10f
   12288:	b	131a8 <sfbpf_lex+0x1520>
   1228c:	mov	r0, #272	; 0x110
   12290:	b	131a8 <sfbpf_lex+0x1520>
   12294:	movw	r0, #273	; 0x111
   12298:	b	131a8 <sfbpf_lex+0x1520>
   1229c:	movw	r0, #274	; 0x112
   122a0:	b	131a8 <sfbpf_lex+0x1520>
   122a4:	movw	r0, #275	; 0x113
   122a8:	b	131a8 <sfbpf_lex+0x1520>
   122ac:	mov	r0, #276	; 0x114
   122b0:	b	131a8 <sfbpf_lex+0x1520>
   122b4:	movw	r0, #277	; 0x115
   122b8:	b	131a8 <sfbpf_lex+0x1520>
   122bc:	movw	r0, #278	; 0x116
   122c0:	b	131a8 <sfbpf_lex+0x1520>
   122c4:	movw	r0, #279	; 0x117
   122c8:	b	131a8 <sfbpf_lex+0x1520>
   122cc:	mov	r0, #280	; 0x118
   122d0:	b	131a8 <sfbpf_lex+0x1520>
   122d4:	movw	r0, #281	; 0x119
   122d8:	b	131a8 <sfbpf_lex+0x1520>
   122dc:	movw	r0, #355	; 0x163
   122e0:	b	131a8 <sfbpf_lex+0x1520>
   122e4:	movw	r0, #319	; 0x13f
   122e8:	b	131a8 <sfbpf_lex+0x1520>
   122ec:	mov	r0, #320	; 0x140
   122f0:	b	131a8 <sfbpf_lex+0x1520>
   122f4:	movw	r0, #321	; 0x141
   122f8:	b	131a8 <sfbpf_lex+0x1520>
   122fc:	movw	r0, #322	; 0x142
   12300:	b	131a8 <sfbpf_lex+0x1520>
   12304:	movw	r0, #282	; 0x11a
   12308:	b	131a8 <sfbpf_lex+0x1520>
   1230c:	movw	r0, #283	; 0x11b
   12310:	b	131a8 <sfbpf_lex+0x1520>
   12314:	mov	r0, #284	; 0x11c
   12318:	b	131a8 <sfbpf_lex+0x1520>
   1231c:	movw	r0, #285	; 0x11d
   12320:	b	131a8 <sfbpf_lex+0x1520>
   12324:	movw	r0, #286	; 0x11e
   12328:	b	131a8 <sfbpf_lex+0x1520>
   1232c:	movw	r0, #287	; 0x11f
   12330:	b	131a8 <sfbpf_lex+0x1520>
   12334:	mov	r0, #288	; 0x120
   12338:	b	131a8 <sfbpf_lex+0x1520>
   1233c:	movw	r0, #327	; 0x147
   12340:	b	131a8 <sfbpf_lex+0x1520>
   12344:	mov	r0, #328	; 0x148
   12348:	b	131a8 <sfbpf_lex+0x1520>
   1234c:	mov	r0, #328	; 0x148
   12350:	b	131a8 <sfbpf_lex+0x1520>
   12354:	movw	r0, #330	; 0x14a
   12358:	b	131a8 <sfbpf_lex+0x1520>
   1235c:	movw	r0, #330	; 0x14a
   12360:	b	131a8 <sfbpf_lex+0x1520>
   12364:	movw	r0, #331	; 0x14b
   12368:	b	131a8 <sfbpf_lex+0x1520>
   1236c:	mov	r0, #332	; 0x14c
   12370:	b	131a8 <sfbpf_lex+0x1520>
   12374:	movw	r0, #333	; 0x14d
   12378:	b	131a8 <sfbpf_lex+0x1520>
   1237c:	movw	r0, #334	; 0x14e
   12380:	b	131a8 <sfbpf_lex+0x1520>
   12384:	movw	r0, #335	; 0x14f
   12388:	b	131a8 <sfbpf_lex+0x1520>
   1238c:	mov	r0, #336	; 0x150
   12390:	b	131a8 <sfbpf_lex+0x1520>
   12394:	movw	r0, #337	; 0x151
   12398:	b	131a8 <sfbpf_lex+0x1520>
   1239c:	movw	r0, #329	; 0x149
   123a0:	b	131a8 <sfbpf_lex+0x1520>
   123a4:	movw	r0, #338	; 0x152
   123a8:	b	131a8 <sfbpf_lex+0x1520>
   123ac:	movw	r0, #339	; 0x153
   123b0:	b	131a8 <sfbpf_lex+0x1520>
   123b4:	mov	r0, #340	; 0x154
   123b8:	b	131a8 <sfbpf_lex+0x1520>
   123bc:	mov	r0, #260	; 0x104
   123c0:	b	131a8 <sfbpf_lex+0x1520>
   123c4:	movw	r0, #262	; 0x106
   123c8:	b	131a8 <sfbpf_lex+0x1520>
   123cc:	movw	r0, #263	; 0x107
   123d0:	b	131a8 <sfbpf_lex+0x1520>
   123d4:	mov	r0, #264	; 0x108
   123d8:	b	131a8 <sfbpf_lex+0x1520>
   123dc:	movw	r0, #265	; 0x109
   123e0:	b	131a8 <sfbpf_lex+0x1520>
   123e4:	mov	r0, #268	; 0x10c
   123e8:	b	131a8 <sfbpf_lex+0x1520>
   123ec:	movw	r0, #269	; 0x10d
   123f0:	b	131a8 <sfbpf_lex+0x1520>
   123f4:	movw	r0, #261	; 0x105
   123f8:	b	131a8 <sfbpf_lex+0x1520>
   123fc:	mov	r0, #300	; 0x12c
   12400:	b	131a8 <sfbpf_lex+0x1520>
   12404:	movw	r0, #301	; 0x12d
   12408:	b	131a8 <sfbpf_lex+0x1520>
   1240c:	movw	r0, #302	; 0x12e
   12410:	b	131a8 <sfbpf_lex+0x1520>
   12414:	movw	r0, #303	; 0x12f
   12418:	b	131a8 <sfbpf_lex+0x1520>
   1241c:	mov	r0, #304	; 0x130
   12420:	b	131a8 <sfbpf_lex+0x1520>
   12424:	movw	r0, #305	; 0x131
   12428:	b	131a8 <sfbpf_lex+0x1520>
   1242c:	movw	r0, #306	; 0x132
   12430:	b	131a8 <sfbpf_lex+0x1520>
   12434:	movw	r0, #266	; 0x10a
   12438:	b	131a8 <sfbpf_lex+0x1520>
   1243c:	movw	r0, #267	; 0x10b
   12440:	b	131a8 <sfbpf_lex+0x1520>
   12444:	movw	r0, #270	; 0x10e
   12448:	b	131a8 <sfbpf_lex+0x1520>
   1244c:	movw	r0, #289	; 0x121
   12450:	b	131a8 <sfbpf_lex+0x1520>
   12454:	movw	r0, #290	; 0x122
   12458:	b	131a8 <sfbpf_lex+0x1520>
   1245c:	mov	r0, #364	; 0x16c
   12460:	b	131a8 <sfbpf_lex+0x1520>
   12464:	movw	r0, #363	; 0x16b
   12468:	b	131a8 <sfbpf_lex+0x1520>
   1246c:	mov	r0, #33	; 0x21
   12470:	b	131a8 <sfbpf_lex+0x1520>
   12474:	movw	r0, #318	; 0x13e
   12478:	b	131a8 <sfbpf_lex+0x1520>
   1247c:	mov	r0, #292	; 0x124
   12480:	b	131a8 <sfbpf_lex+0x1520>
   12484:	movw	r0, #293	; 0x125
   12488:	b	131a8 <sfbpf_lex+0x1520>
   1248c:	movw	r0, #323	; 0x143
   12490:	b	131a8 <sfbpf_lex+0x1520>
   12494:	mov	r0, #324	; 0x144
   12498:	b	131a8 <sfbpf_lex+0x1520>
   1249c:	movw	r0, #325	; 0x145
   124a0:	b	131a8 <sfbpf_lex+0x1520>
   124a4:	movw	r0, #326	; 0x146
   124a8:	b	131a8 <sfbpf_lex+0x1520>
   124ac:	movw	r0, #341	; 0x155
   124b0:	b	131a8 <sfbpf_lex+0x1520>
   124b4:	movw	r0, #342	; 0x156
   124b8:	b	131a8 <sfbpf_lex+0x1520>
   124bc:	movw	r0, #343	; 0x157
   124c0:	b	131a8 <sfbpf_lex+0x1520>
   124c4:	mov	r0, #344	; 0x158
   124c8:	b	131a8 <sfbpf_lex+0x1520>
   124cc:	movw	r0, #349	; 0x15d
   124d0:	b	131a8 <sfbpf_lex+0x1520>
   124d4:	movw	r0, #350	; 0x15e
   124d8:	b	131a8 <sfbpf_lex+0x1520>
   124dc:	movw	r0, #347	; 0x15b
   124e0:	b	131a8 <sfbpf_lex+0x1520>
   124e4:	mov	r0, #348	; 0x15c
   124e8:	b	131a8 <sfbpf_lex+0x1520>
   124ec:	movw	r0, #345	; 0x159
   124f0:	b	131a8 <sfbpf_lex+0x1520>
   124f4:	movw	r0, #346	; 0x15a
   124f8:	b	131a8 <sfbpf_lex+0x1520>
   124fc:	movw	r0, #353	; 0x161
   12500:	b	131a8 <sfbpf_lex+0x1520>
   12504:	movw	r0, #354	; 0x162
   12508:	b	131a8 <sfbpf_lex+0x1520>
   1250c:	movw	r0, #351	; 0x15f
   12510:	b	131a8 <sfbpf_lex+0x1520>
   12514:	mov	r0, #352	; 0x160
   12518:	b	131a8 <sfbpf_lex+0x1520>
   1251c:	movw	r0, #294	; 0x126
   12520:	b	131a8 <sfbpf_lex+0x1520>
   12524:	movw	r0, #295	; 0x127
   12528:	b	131a8 <sfbpf_lex+0x1520>
   1252c:	mov	r0, #296	; 0x128
   12530:	b	131a8 <sfbpf_lex+0x1520>
   12534:	movw	r0, #297	; 0x129
   12538:	b	131a8 <sfbpf_lex+0x1520>
   1253c:	movw	r0, #298	; 0x12a
   12540:	b	131a8 <sfbpf_lex+0x1520>
   12544:	movw	r0, #299	; 0x12b
   12548:	b	131a8 <sfbpf_lex+0x1520>
   1254c:	mov	r0, #356	; 0x164
   12550:	b	131a8 <sfbpf_lex+0x1520>
   12554:	movw	r0, #357	; 0x165
   12558:	b	131a8 <sfbpf_lex+0x1520>
   1255c:	movw	r0, #357	; 0x165
   12560:	b	131a8 <sfbpf_lex+0x1520>
   12564:	movw	r0, #358	; 0x166
   12568:	b	131a8 <sfbpf_lex+0x1520>
   1256c:	movw	r0, #359	; 0x167
   12570:	b	131a8 <sfbpf_lex+0x1520>
   12574:	mov	r0, #360	; 0x168
   12578:	b	131a8 <sfbpf_lex+0x1520>
   1257c:	movw	r0, #361	; 0x169
   12580:	b	131a8 <sfbpf_lex+0x1520>
   12584:	movw	r0, #362	; 0x16a
   12588:	b	131a8 <sfbpf_lex+0x1520>
   1258c:	ldr	r3, [pc, #1824]	; 12cb4 <sfbpf_lex+0x102c>
   12590:	ldr	r3, [r9, r3]
   12594:	ldr	r3, [r3]
   12598:	ldrb	r0, [r3]
   1259c:	b	131a8 <sfbpf_lex+0x1520>
   125a0:	mov	r0, #308	; 0x134
   125a4:	b	131a8 <sfbpf_lex+0x1520>
   125a8:	movw	r0, #309	; 0x135
   125ac:	b	131a8 <sfbpf_lex+0x1520>
   125b0:	movw	r0, #310	; 0x136
   125b4:	b	131a8 <sfbpf_lex+0x1520>
   125b8:	mov	r0, #61	; 0x3d
   125bc:	b	131a8 <sfbpf_lex+0x1520>
   125c0:	mov	r0, #316	; 0x13c
   125c4:	b	131a8 <sfbpf_lex+0x1520>
   125c8:	movw	r0, #317	; 0x13d
   125cc:	b	131a8 <sfbpf_lex+0x1520>
   125d0:	ldr	r3, [pc, #1756]	; 12cb4 <sfbpf_lex+0x102c>
   125d4:	ldr	r3, [r9, r3]
   125d8:	ldr	r0, [r3]
   125dc:	add	r0, r0, #1
   125e0:	bl	c654 <pcap_ether_aton>
   125e4:	ldr	r3, [pc, #1584]	; 12c1c <sfbpf_lex+0xf94>
   125e8:	ldr	r3, [r9, r3]
   125ec:	str	r0, [r3]
   125f0:	movw	r0, #315	; 0x13b
   125f4:	b	131a8 <sfbpf_lex+0x1520>
   125f8:	ldr	r3, [pc, #1716]	; 12cb4 <sfbpf_lex+0x102c>
   125fc:	ldr	r3, [r9, r3]
   12600:	ldr	r0, [r3]
   12604:	bl	c654 <pcap_ether_aton>
   12608:	ldr	r3, [pc, #1548]	; 12c1c <sfbpf_lex+0xf94>
   1260c:	ldr	r3, [r9, r3]
   12610:	str	r0, [r3]
   12614:	mov	r0, #312	; 0x138
   12618:	b	131a8 <sfbpf_lex+0x1520>
   1261c:	mov	fp, r9
   12620:	ldr	r3, [pc, #1676]	; 12cb4 <sfbpf_lex+0x102c>
   12624:	ldr	r3, [r9, r3]
   12628:	ldr	r5, [r3]
   1262c:	ldrb	r3, [r5]
   12630:	cmp	r3, #48	; 0x30
   12634:	movne	r6, #10
   12638:	beq	12658 <sfbpf_lex+0x9d0>
   1263c:	ldrb	r4, [r5]
   12640:	cmp	r4, #0
   12644:	beq	126b4 <sfbpf_lex+0xa2c>
   12648:	bl	dd8 <__ctype_b_loc@plt>
   1264c:	ldr	r0, [r0]
   12650:	mov	r3, #0
   12654:	b	12688 <sfbpf_lex+0xa00>
   12658:	ldrb	r3, [r5, #1]
   1265c:	and	r3, r3, #223	; 0xdf
   12660:	cmp	r3, #88	; 0x58
   12664:	addeq	r5, r5, #2
   12668:	moveq	r6, #16
   1266c:	addne	r5, r5, #1
   12670:	movne	r6, #8
   12674:	b	1263c <sfbpf_lex+0x9b4>
   12678:	add	r3, r3, r2
   1267c:	ldrb	r4, [r5, #1]!
   12680:	cmp	r4, #0
   12684:	beq	126b8 <sfbpf_lex+0xa30>
   12688:	mul	r3, r3, r6
   1268c:	mov	r2, r4
   12690:	lsl	r1, r4, #1
   12694:	ldrh	r1, [r0, r1]
   12698:	tst	r1, #2048	; 0x800
   1269c:	subne	r2, r4, #48	; 0x30
   126a0:	bne	12678 <sfbpf_lex+0x9f0>
   126a4:	tst	r1, #512	; 0x200
   126a8:	subne	r2, r2, #87	; 0x57
   126ac:	subeq	r2, r2, #55	; 0x37
   126b0:	b	12678 <sfbpf_lex+0x9f0>
   126b4:	mov	r3, #0
   126b8:	ldr	r2, [pc, #1372]	; 12c1c <sfbpf_lex+0xf94>
   126bc:	ldr	r2, [fp, r2]
   126c0:	str	r3, [r2]
   126c4:	movw	r0, #291	; 0x123
   126c8:	b	131a8 <sfbpf_lex+0x1520>
   126cc:	ldr	r3, [pc, #1504]	; 12cb4 <sfbpf_lex+0x102c>
   126d0:	ldr	r3, [r9, r3]
   126d4:	ldr	r0, [r3]
   126d8:	bl	2904 <sf_sdup>
   126dc:	ldr	r3, [pc, #1336]	; 12c1c <sfbpf_lex+0xf94>
   126e0:	ldr	r3, [r9, r3]
   126e4:	str	r0, [r3]
   126e8:	movw	r0, #313	; 0x139
   126ec:	b	131a8 <sfbpf_lex+0x1520>
   126f0:	mov	r0, #0
   126f4:	mov	r1, #0
   126f8:	strd	r0, [sp, #80]	; 0x50
   126fc:	strd	r0, [sp, #88]	; 0x58
   12700:	strd	r0, [sp, #96]	; 0x60
   12704:	mov	r3, #10
   12708:	str	r3, [sp, #76]	; 0x4c
   1270c:	mov	r3, #4
   12710:	str	r3, [sp, #72]	; 0x48
   12714:	ldr	r3, [pc, #1432]	; 12cb4 <sfbpf_lex+0x102c>
   12718:	ldr	r0, [r9, r3]
   1271c:	add	r3, sp, #68	; 0x44
   12720:	add	r2, sp, #72	; 0x48
   12724:	mov	r1, #0
   12728:	ldr	r0, [r0]
   1272c:	bl	e8c <getaddrinfo@plt>
   12730:	cmp	r0, #0
   12734:	bne	12764 <sfbpf_lex+0xadc>
   12738:	ldr	r0, [sp, #68]	; 0x44
   1273c:	bl	e80 <freeaddrinfo@plt>
   12740:	ldr	r3, [pc, #1388]	; 12cb4 <sfbpf_lex+0x102c>
   12744:	ldr	r3, [r9, r3]
   12748:	ldr	r0, [r3]
   1274c:	bl	2904 <sf_sdup>
   12750:	ldr	r3, [pc, #1220]	; 12c1c <sfbpf_lex+0xf94>
   12754:	ldr	r3, [r9, r3]
   12758:	str	r0, [r3]
   1275c:	movw	r0, #314	; 0x13a
   12760:	b	131a8 <sfbpf_lex+0x1520>
   12764:	ldr	r3, [pc, #1352]	; 12cb4 <sfbpf_lex+0x102c>
   12768:	ldr	r3, [r9, r3]
   1276c:	ldr	r1, [r3]
   12770:	ldr	r0, [pc, #1192]	; 12c20 <sfbpf_lex+0xf98>
   12774:	add	r0, pc, r0
   12778:	bl	229c <sf_bpf_error>
   1277c:	ldr	r3, [pc, #1328]	; 12cb4 <sfbpf_lex+0x102c>
   12780:	ldr	r3, [r9, r3]
   12784:	ldr	r1, [r3]
   12788:	ldr	r0, [pc, #1172]	; 12c24 <sfbpf_lex+0xf9c>
   1278c:	add	r0, pc, r0
   12790:	bl	229c <sf_bpf_error>
   12794:	ldr	r3, [pc, #1152]	; 12c1c <sfbpf_lex+0xf94>
   12798:	ldr	r3, [r9, r3]
   1279c:	mov	r2, #0
   127a0:	str	r2, [r3]
   127a4:	movw	r0, #291	; 0x123
   127a8:	b	131a8 <sfbpf_lex+0x1520>
   127ac:	ldr	r3, [pc, #1128]	; 12c1c <sfbpf_lex+0xf94>
   127b0:	ldr	r3, [r9, r3]
   127b4:	mov	r2, #1
   127b8:	str	r2, [r3]
   127bc:	movw	r0, #291	; 0x123
   127c0:	b	131a8 <sfbpf_lex+0x1520>
   127c4:	ldr	r3, [pc, #1104]	; 12c1c <sfbpf_lex+0xf94>
   127c8:	ldr	r3, [r9, r3]
   127cc:	mov	r2, #0
   127d0:	str	r2, [r3]
   127d4:	movw	r0, #291	; 0x123
   127d8:	b	131a8 <sfbpf_lex+0x1520>
   127dc:	ldr	r3, [pc, #1080]	; 12c1c <sfbpf_lex+0xf94>
   127e0:	ldr	r3, [r9, r3]
   127e4:	mov	r2, #3
   127e8:	str	r2, [r3]
   127ec:	movw	r0, #291	; 0x123
   127f0:	b	131a8 <sfbpf_lex+0x1520>
   127f4:	ldr	r3, [pc, #1056]	; 12c1c <sfbpf_lex+0xf94>
   127f8:	ldr	r3, [r9, r3]
   127fc:	mov	r2, #4
   12800:	str	r2, [r3]
   12804:	movw	r0, #291	; 0x123
   12808:	b	131a8 <sfbpf_lex+0x1520>
   1280c:	ldr	r3, [pc, #1032]	; 12c1c <sfbpf_lex+0xf94>
   12810:	ldr	r3, [r9, r3]
   12814:	mov	r2, #5
   12818:	str	r2, [r3]
   1281c:	movw	r0, #291	; 0x123
   12820:	b	131a8 <sfbpf_lex+0x1520>
   12824:	ldr	r3, [pc, #1008]	; 12c1c <sfbpf_lex+0xf94>
   12828:	ldr	r3, [r9, r3]
   1282c:	mov	r2, #8
   12830:	str	r2, [r3]
   12834:	movw	r0, #291	; 0x123
   12838:	b	131a8 <sfbpf_lex+0x1520>
   1283c:	ldr	r3, [pc, #984]	; 12c1c <sfbpf_lex+0xf94>
   12840:	ldr	r3, [r9, r3]
   12844:	mov	r2, #9
   12848:	str	r2, [r3]
   1284c:	movw	r0, #291	; 0x123
   12850:	b	131a8 <sfbpf_lex+0x1520>
   12854:	ldr	r3, [pc, #960]	; 12c1c <sfbpf_lex+0xf94>
   12858:	ldr	r3, [r9, r3]
   1285c:	mov	r2, #10
   12860:	str	r2, [r3]
   12864:	movw	r0, #291	; 0x123
   12868:	b	131a8 <sfbpf_lex+0x1520>
   1286c:	ldr	r3, [pc, #936]	; 12c1c <sfbpf_lex+0xf94>
   12870:	ldr	r3, [r9, r3]
   12874:	mov	r2, #11
   12878:	str	r2, [r3]
   1287c:	movw	r0, #291	; 0x123
   12880:	b	131a8 <sfbpf_lex+0x1520>
   12884:	ldr	r3, [pc, #912]	; 12c1c <sfbpf_lex+0xf94>
   12888:	ldr	r3, [r9, r3]
   1288c:	mov	r2, #12
   12890:	str	r2, [r3]
   12894:	movw	r0, #291	; 0x123
   12898:	b	131a8 <sfbpf_lex+0x1520>
   1289c:	ldr	r3, [pc, #888]	; 12c1c <sfbpf_lex+0xf94>
   128a0:	ldr	r3, [r9, r3]
   128a4:	mov	r2, #13
   128a8:	str	r2, [r3]
   128ac:	movw	r0, #291	; 0x123
   128b0:	b	131a8 <sfbpf_lex+0x1520>
   128b4:	ldr	r3, [pc, #864]	; 12c1c <sfbpf_lex+0xf94>
   128b8:	ldr	r3, [r9, r3]
   128bc:	mov	r2, #14
   128c0:	str	r2, [r3]
   128c4:	movw	r0, #291	; 0x123
   128c8:	b	131a8 <sfbpf_lex+0x1520>
   128cc:	ldr	r3, [pc, #840]	; 12c1c <sfbpf_lex+0xf94>
   128d0:	ldr	r3, [r9, r3]
   128d4:	mov	r2, #15
   128d8:	str	r2, [r3]
   128dc:	movw	r0, #291	; 0x123
   128e0:	b	131a8 <sfbpf_lex+0x1520>
   128e4:	ldr	r3, [pc, #816]	; 12c1c <sfbpf_lex+0xf94>
   128e8:	ldr	r3, [r9, r3]
   128ec:	mov	r2, #16
   128f0:	str	r2, [r3]
   128f4:	movw	r0, #291	; 0x123
   128f8:	b	131a8 <sfbpf_lex+0x1520>
   128fc:	ldr	r3, [pc, #792]	; 12c1c <sfbpf_lex+0xf94>
   12900:	ldr	r3, [r9, r3]
   12904:	mov	r2, #17
   12908:	str	r2, [r3]
   1290c:	movw	r0, #291	; 0x123
   12910:	b	131a8 <sfbpf_lex+0x1520>
   12914:	ldr	r3, [pc, #768]	; 12c1c <sfbpf_lex+0xf94>
   12918:	ldr	r3, [r9, r3]
   1291c:	mov	r2, #18
   12920:	str	r2, [r3]
   12924:	movw	r0, #291	; 0x123
   12928:	b	131a8 <sfbpf_lex+0x1520>
   1292c:	ldr	r3, [pc, #744]	; 12c1c <sfbpf_lex+0xf94>
   12930:	ldr	r3, [r9, r3]
   12934:	mov	r2, #13
   12938:	str	r2, [r3]
   1293c:	movw	r0, #291	; 0x123
   12940:	b	131a8 <sfbpf_lex+0x1520>
   12944:	ldr	r3, [pc, #720]	; 12c1c <sfbpf_lex+0xf94>
   12948:	ldr	r3, [r9, r3]
   1294c:	mov	r2, #1
   12950:	str	r2, [r3]
   12954:	movw	r0, #291	; 0x123
   12958:	b	131a8 <sfbpf_lex+0x1520>
   1295c:	ldr	r3, [pc, #696]	; 12c1c <sfbpf_lex+0xf94>
   12960:	ldr	r3, [r9, r3]
   12964:	mov	r2, #2
   12968:	str	r2, [r3]
   1296c:	movw	r0, #291	; 0x123
   12970:	b	131a8 <sfbpf_lex+0x1520>
   12974:	ldr	r3, [pc, #672]	; 12c1c <sfbpf_lex+0xf94>
   12978:	ldr	r3, [r9, r3]
   1297c:	mov	r2, #4
   12980:	str	r2, [r3]
   12984:	movw	r0, #291	; 0x123
   12988:	b	131a8 <sfbpf_lex+0x1520>
   1298c:	ldr	r3, [pc, #648]	; 12c1c <sfbpf_lex+0xf94>
   12990:	ldr	r3, [r9, r3]
   12994:	mov	r2, #8
   12998:	str	r2, [r3]
   1299c:	movw	r0, #291	; 0x123
   129a0:	b	131a8 <sfbpf_lex+0x1520>
   129a4:	ldr	r3, [pc, #624]	; 12c1c <sfbpf_lex+0xf94>
   129a8:	ldr	r3, [r9, r3]
   129ac:	mov	r2, #16
   129b0:	str	r2, [r3]
   129b4:	movw	r0, #291	; 0x123
   129b8:	b	131a8 <sfbpf_lex+0x1520>
   129bc:	ldr	r3, [pc, #600]	; 12c1c <sfbpf_lex+0xf94>
   129c0:	ldr	r3, [r9, r3]
   129c4:	mov	r2, #32
   129c8:	str	r2, [r3]
   129cc:	movw	r0, #291	; 0x123
   129d0:	b	131a8 <sfbpf_lex+0x1520>
   129d4:	ldr	r3, [pc, #728]	; 12cb4 <sfbpf_lex+0x102c>
   129d8:	ldr	r3, [r9, r3]
   129dc:	ldr	r0, [r3]
   129e0:	bl	2904 <sf_sdup>
   129e4:	ldr	r3, [pc, #560]	; 12c1c <sfbpf_lex+0xf94>
   129e8:	ldr	r3, [r9, r3]
   129ec:	str	r0, [r3]
   129f0:	movw	r0, #311	; 0x137
   129f4:	b	131a8 <sfbpf_lex+0x1520>
   129f8:	ldr	r3, [pc, #692]	; 12cb4 <sfbpf_lex+0x102c>
   129fc:	ldr	r3, [r9, r3]
   12a00:	ldr	r0, [r3]
   12a04:	add	r0, r0, #1
   12a08:	bl	2904 <sf_sdup>
   12a0c:	ldr	r3, [pc, #520]	; 12c1c <sfbpf_lex+0xf94>
   12a10:	ldr	r3, [r9, r3]
   12a14:	str	r0, [r3]
   12a18:	movw	r0, #311	; 0x137
   12a1c:	b	131a8 <sfbpf_lex+0x1520>
   12a20:	ldr	r3, [pc, #652]	; 12cb4 <sfbpf_lex+0x102c>
   12a24:	ldr	r3, [r9, r3]
   12a28:	ldr	r1, [r3]
   12a2c:	ldr	r0, [pc, #500]	; 12c28 <sfbpf_lex+0xfa0>
   12a30:	add	r0, pc, r0
   12a34:	bl	229c <sf_bpf_error>
   12a38:	ldr	r3, [pc, #628]	; 12cb4 <sfbpf_lex+0x102c>
   12a3c:	ldr	r3, [r9, r3]
   12a40:	ldr	r3, [r3]
   12a44:	ldrb	r1, [r3]
   12a48:	ldr	r0, [pc, #476]	; 12c2c <sfbpf_lex+0xfa4>
   12a4c:	add	r0, pc, r0
   12a50:	bl	229c <sf_bpf_error>
   12a54:	ldr	sl, [sp, #12]
   12a58:	ldr	fp, [sp, #16]
   12a5c:	ldr	r6, [sp, #24]
   12a60:	ldr	r3, [pc, #404]	; 12bfc <sfbpf_lex+0xf74>
   12a64:	ldr	r1, [r9, r3]
   12a68:	ldr	r3, [pc, #580]	; 12cb4 <sfbpf_lex+0x102c>
   12a6c:	ldr	r0, [r9, r3]
   12a70:	ldr	r3, [pc, #440]	; 12c30 <sfbpf_lex+0xfa8>
   12a74:	add	r3, pc, r3
   12a78:	ldr	r3, [r3, #44]	; 0x2c
   12a7c:	mov	r2, #1
   12a80:	ldr	r1, [r1]
   12a84:	ldr	r0, [r0]
   12a88:	bl	d9c <fwrite@plt>
   12a8c:	b	11d70 <sfbpf_lex+0xe8>
   12a90:	mov	r0, #0
   12a94:	b	131a8 <sfbpf_lex+0x1520>
   12a98:	ldr	r3, [pc, #532]	; 12cb4 <sfbpf_lex+0x102c>
   12a9c:	ldr	r3, [r9, r3]
   12aa0:	ldr	r3, [r3]
   12aa4:	sub	r3, fp, r3
   12aa8:	sub	r3, r3, #1
   12aac:	str	r3, [sp, #52]	; 0x34
   12ab0:	ldr	r2, [sp, #32]
   12ab4:	ldrb	r3, [r2, #32]
   12ab8:	strb	r3, [fp]
   12abc:	ldr	r6, [r2, #20]
   12ac0:	ldr	r5, [r2, #16]
   12ac4:	add	r3, r5, r6, lsl #2
   12ac8:	str	r3, [sp, #48]	; 0x30
   12acc:	ldr	r3, [r5, r6, lsl #2]
   12ad0:	ldr	r2, [r3, #44]	; 0x2c
   12ad4:	cmp	r2, #0
   12ad8:	bne	12afc <sfbpf_lex+0xe74>
   12adc:	ldr	r2, [r3, #16]
   12ae0:	ldr	r1, [sp, #36]	; 0x24
   12ae4:	str	r2, [r1, #24]
   12ae8:	ldr	r2, [r1, #28]
   12aec:	str	r2, [r3]
   12af0:	ldr	r3, [r5, r6, lsl #2]
   12af4:	mov	r2, #1
   12af8:	str	r2, [r3, #44]	; 0x2c
   12afc:	ldr	ip, [r5, r6, lsl #2]
   12b00:	ldr	r2, [ip, #4]
   12b04:	ldr	r3, [pc, #296]	; 12c34 <sfbpf_lex+0xfac>
   12b08:	add	r3, pc, r3
   12b0c:	ldr	r0, [r3, #24]
   12b10:	ldr	r1, [r3, #4]
   12b14:	add	r3, r2, r0
   12b18:	cmp	r1, r3
   12b1c:	bls	12cc0 <sfbpf_lex+0x1038>
   12b20:	ldr	r3, [pc, #396]	; 12cb4 <sfbpf_lex+0x102c>
   12b24:	ldr	r3, [r9, r3]
   12b28:	ldr	r3, [r3]
   12b2c:	add	r0, r0, #1
   12b30:	add	r0, r2, r0
   12b34:	cmp	r1, r0
   12b38:	bhi	12dec <sfbpf_lex+0x1164>
   12b3c:	ldr	r0, [ip, #40]	; 0x28
   12b40:	cmp	r0, #0
   12b44:	bne	12df8 <sfbpf_lex+0x1170>
   12b48:	sub	r3, r1, r3
   12b4c:	cmp	r3, #1
   12b50:	beq	1312c <sfbpf_lex+0x14a4>
   12b54:	ldr	sl, [sp, #28]
   12b58:	ldr	r3, [pc, #216]	; 12c38 <sfbpf_lex+0xfb0>
   12b5c:	add	r3, pc, r3
   12b60:	ldr	r1, [r3, #20]
   12b64:	ldr	r2, [r3, #16]
   12b68:	ldr	r2, [r2, r1, lsl #2]
   12b6c:	ldr	r1, [r2, #4]
   12b70:	ldr	r2, [r3, #24]
   12b74:	add	fp, r1, r2
   12b78:	str	fp, [r3, #4]
   12b7c:	bl	1158c <yy_get_previous_state>
   12b80:	ldr	r3, [pc, #300]	; 12cb4 <sfbpf_lex+0x102c>
   12b84:	ldr	r3, [r9, r3]
   12b88:	ldr	r3, [r3]
   12b8c:	str	r3, [sp, #20]
   12b90:	b	11f7c <sfbpf_lex+0x2f4>
   12b94:	.word	0x0001f354
   12b98:	.word	0x0001fe88
   12b9c:	.word	0x0001fe74
   12ba0:	.word	0x0001fe58
   12ba4:	.word	0x0001fe4c
   12ba8:	.word	0x0001fe38
   12bac:	.word	0x0001fe24
   12bb0:	.word	0x0001fe10
   12bb4:	.word	0x00006a14
   12bb8:	.word	0x00004a10
   12bbc:	.word	0x000069f8
   12bc0:	.word	0x0001fdc0
   12bc4:	.word	0x0001fd98
   12bc8:	.word	0x0000499c
   12bcc:	.word	0x000000e0
   12bd0:	.word	0x0001fd58
   12bd4:	.word	0x000000e8
   12bd8:	.word	0x0001fd3c
   12bdc:	.word	0x0001fd28
   12be0:	.word	0x0000ad44
   12be4:	.word	0x000068e8
   12be8:	.word	0x000072b4
   12bec:	.word	0x0001fc34
   12bf0:	.word	0x0001fc18
   12bf4:	.word	0x00004830
   12bf8:	.word	0x0001fbfc
   12bfc:	.word	0x000000c0
   12c00:	.word	0x0001fbdc
   12c04:	.word	0x000047c8
   12c08:	.word	0x0001fb70
   12c0c:	.word	0x0001fb54
   12c10:	.word	0x0001fb48
   12c14:	.word	0x0001fb3c
   12c18:	.word	0x0001f8c8
   12c1c:	.word	0x000000f0
   12c20:	.word	0x0000ded0
   12c24:	.word	0x0000ded0
   12c28:	.word	0x0000dc48
   12c2c:	.word	0x0000dc40
   12c30:	.word	0x0001f0c0
   12c34:	.word	0x0001f02c
   12c38:	.word	0x0001efd8
   12c3c:	.word	0x0001ee58
   12c40:	.word	0x00003a70
   12c44:	.word	0x0001ee2c
   12c48:	.word	0x00005a3c
   12c4c:	.word	0x0000642c
   12c50:	.word	0x00003a10
   12c54:	.word	0x000059f8
   12c58:	.word	0x000063f8
   12c5c:	.word	0x00009e08
   12c60:	.word	0x0001ed54
   12c64:	.word	0x0000d8b0
   12c68:	.word	0x0001ece8
   12c6c:	.word	0x0001ecd4
   12c70:	.word	0x0001ecbc
   12c74:	.word	0x0000d7ac
   12c78:	.word	0x0001ebf8
   12c7c:	.word	0x0001ebf0
   12c80:	.word	0x0001eb9c
   12c84:	.word	0x0001eb74
   12c88:	.word	0x0001eb68
   12c8c:	.word	0x0001eb3c
   12c90:	.word	0x0001eb14
   12c94:	.word	0x0001ea8c
   12c98:	.word	0x0000d644
   12c9c:	.word	0x0000d638
   12ca0:	.word	0x0001ea5c
   12ca4:	.word	0x0000d600
   12ca8:	.word	0x0001ea04
   12cac:	.word	0x0001e9cc
   12cb0:	.word	0x0000d5c0
   12cb4:	.word	0x000000d8
   12cb8:	.word	0x0001e930
   12cbc:	.word	0x0001e928
   12cc0:	ldr	sl, [sp, #28]
   12cc4:	ldr	r3, [pc, #-24]	; 12cb4 <sfbpf_lex+0x102c>
   12cc8:	ldr	r3, [r9, r3]
   12ccc:	ldr	r3, [r3]
   12cd0:	ldr	r2, [sp, #52]	; 0x34
   12cd4:	add	fp, r3, r2
   12cd8:	ldr	r3, [pc, #-164]	; 12c3c <sfbpf_lex+0xfb4>
   12cdc:	add	r3, pc, r3
   12ce0:	str	fp, [r3, #4]
   12ce4:	bl	1158c <yy_get_previous_state>
   12ce8:	ldr	r3, [pc, #-176]	; 12c40 <sfbpf_lex+0xfb8>
   12cec:	add	r3, pc, r3
   12cf0:	lsl	r2, r0, #1
   12cf4:	add	r3, r3, #256	; 0x100
   12cf8:	ldrsh	r3, [r3, r2]
   12cfc:	cmp	r3, #0
   12d00:	beq	12d14 <sfbpf_lex+0x108c>
   12d04:	ldr	r3, [pc, #-200]	; 12c44 <sfbpf_lex+0xfbc>
   12d08:	add	r3, pc, r3
   12d0c:	str	r0, [r3, #8]
   12d10:	str	fp, [r3, #12]
   12d14:	ldr	r3, [pc, #-212]	; 12c48 <sfbpf_lex+0xfc0>
   12d18:	add	r3, pc, r3
   12d1c:	lsl	r2, r0, #1
   12d20:	sub	r3, r3, #1216	; 0x4c0
   12d24:	ldrsh	r3, [r3, r2]
   12d28:	add	r3, r3, #1
   12d2c:	lsl	r2, r3, #1
   12d30:	ldr	r1, [pc, #-236]	; 12c4c <sfbpf_lex+0xfc4>
   12d34:	add	r1, pc, r1
   12d38:	ldrsh	r2, [r1, r2]
   12d3c:	cmp	r0, r2
   12d40:	beq	12d90 <sfbpf_lex+0x1108>
   12d44:	mov	r2, r0
   12d48:	ldr	lr, [pc, #-256]	; 12c50 <sfbpf_lex+0xfc8>
   12d4c:	add	lr, pc, lr
   12d50:	add	lr, lr, #3120	; 0xc30
   12d54:	add	lr, lr, #4
   12d58:	ldr	r1, [pc, #-268]	; 12c54 <sfbpf_lex+0xfcc>
   12d5c:	add	r1, pc, r1
   12d60:	sub	r1, r1, #1216	; 0x4c0
   12d64:	ldr	ip, [pc, #-276]	; 12c58 <sfbpf_lex+0xfd0>
   12d68:	add	ip, pc, ip
   12d6c:	lsl	r2, r2, #1
   12d70:	ldrsh	r2, [lr, r2]
   12d74:	lsl	r3, r2, #1
   12d78:	ldrsh	r3, [r1, r3]
   12d7c:	add	r3, r3, #1
   12d80:	lsl	r5, r3, #1
   12d84:	ldrsh	r5, [ip, r5]
   12d88:	cmp	r2, r5
   12d8c:	bne	12d6c <sfbpf_lex+0x10e4>
   12d90:	lsl	r3, r3, #1
   12d94:	ldr	r2, [pc, #-320]	; 12c5c <sfbpf_lex+0xfd4>
   12d98:	add	r2, pc, r2
   12d9c:	ldrsh	r3, [r2, r3]
   12da0:	movw	r2, #1433	; 0x599
   12da4:	cmp	r3, r2
   12da8:	beq	131c4 <sfbpf_lex+0x153c>
   12dac:	ldr	r2, [pc, #-256]	; 12cb4 <sfbpf_lex+0x102c>
   12db0:	ldr	r2, [r9, r2]
   12db4:	ldr	r2, [r2]
   12db8:	str	r2, [sp, #20]
   12dbc:	cmp	r3, #0
   12dc0:	beq	11f7c <sfbpf_lex+0x2f4>
   12dc4:	mov	r4, fp
   12dc8:	mov	fp, r9
   12dcc:	ldr	sl, [sp, #12]
   12dd0:	ldr	r9, [sp, #16]
   12dd4:	ldr	r6, [sp, #24]
   12dd8:	add	r5, r4, #1
   12ddc:	ldr	r2, [pc, #-388]	; 12c60 <sfbpf_lex+0xfd8>
   12de0:	add	r2, pc, r2
   12de4:	str	r5, [r2, #4]
   12de8:	b	13188 <sfbpf_lex+0x1500>
   12dec:	ldr	r0, [pc, #-400]	; 12c64 <sfbpf_lex+0xfdc>
   12df0:	add	r0, pc, r0
   12df4:	bl	117ac <yy_fatal_error>
   12df8:	sub	r1, r1, r3
   12dfc:	str	r1, [sp, #56]	; 0x38
   12e00:	sub	sl, r1, #1
   12e04:	cmp	sl, #0
   12e08:	ble	12e24 <sfbpf_lex+0x119c>
   12e0c:	sub	r2, r2, #1
   12e10:	add	r1, r3, sl
   12e14:	ldrb	r0, [r3], #1
   12e18:	strb	r0, [r2, #1]!
   12e1c:	cmp	r3, r1
   12e20:	bne	12e14 <sfbpf_lex+0x118c>
   12e24:	ldr	r3, [r5, r6, lsl #2]
   12e28:	ldr	r2, [r3, #44]	; 0x2c
   12e2c:	cmp	r2, #2
   12e30:	beq	12e58 <sfbpf_lex+0x11d0>
   12e34:	ldr	r7, [r3, #12]
   12e38:	sub	r7, r7, sl
   12e3c:	sub	r7, r7, #1
   12e40:	cmp	r7, #0
   12e44:	bgt	131d8 <sfbpf_lex+0x1550>
   12e48:	ldr	r3, [pc, #-488]	; 12c68 <sfbpf_lex+0xfe0>
   12e4c:	add	r3, pc, r3
   12e50:	str	r3, [sp, #60]	; 0x3c
   12e54:	b	12ed8 <sfbpf_lex+0x1250>
   12e58:	mov	r2, #0
   12e5c:	ldr	r1, [pc, #-504]	; 12c6c <sfbpf_lex+0xfe4>
   12e60:	add	r1, pc, r1
   12e64:	str	r2, [r1, #24]
   12e68:	str	r2, [r3, #16]
   12e6c:	cmp	sl, #0
   12e70:	beq	130d4 <sfbpf_lex+0x144c>
   12e74:	ldr	r3, [pc, #-524]	; 12c70 <sfbpf_lex+0xfe8>
   12e78:	add	r3, pc, r3
   12e7c:	ldr	r2, [r3, #20]
   12e80:	ldr	r3, [r3, #16]
   12e84:	ldr	r2, [r3, r2, lsl #2]
   12e88:	mov	r3, #2
   12e8c:	str	r3, [r2, #44]	; 0x2c
   12e90:	str	r3, [sp, #48]	; 0x30
   12e94:	b	12ff4 <sfbpf_lex+0x136c>
   12e98:	str	r1, [r8, #12]
   12e9c:	add	r1, r1, #2
   12ea0:	bl	d90 <realloc@plt>
   12ea4:	str	r0, [r8, #4]
   12ea8:	cmp	r0, #0
   12eac:	beq	12f28 <sfbpf_lex+0x12a0>
   12eb0:	add	r0, r0, r7
   12eb4:	ldr	r3, [sp, #40]	; 0x28
   12eb8:	str	r0, [r3, #4]
   12ebc:	ldr	r3, [sp, #48]	; 0x30
   12ec0:	ldr	r3, [r3]
   12ec4:	ldr	r7, [r3, #12]
   12ec8:	sub	r7, r7, sl
   12ecc:	sub	r7, r7, #1
   12ed0:	cmp	r7, #0
   12ed4:	bgt	131d8 <sfbpf_lex+0x1550>
   12ed8:	ldr	r3, [sp, #48]	; 0x30
   12edc:	ldr	r8, [r3]
   12ee0:	ldr	r0, [r8, #4]
   12ee4:	ldr	r3, [sp, #60]	; 0x3c
   12ee8:	ldr	r7, [r3, #4]
   12eec:	sub	r7, r7, r0
   12ef0:	ldr	r3, [r8, #20]
   12ef4:	cmp	r3, #0
   12ef8:	beq	12f20 <sfbpf_lex+0x1298>
   12efc:	ldr	r1, [r8, #12]
   12f00:	cmp	r1, #0
   12f04:	lslgt	r1, r1, #1
   12f08:	bgt	12e98 <sfbpf_lex+0x1210>
   12f0c:	add	r3, r1, #7
   12f10:	cmp	r1, #0
   12f14:	movge	r3, r1
   12f18:	add	r1, r1, r3, asr #3
   12f1c:	b	12e98 <sfbpf_lex+0x1210>
   12f20:	mov	r3, #0
   12f24:	str	r3, [r8, #4]
   12f28:	ldr	r0, [pc, #-700]	; 12c74 <sfbpf_lex+0xfec>
   12f2c:	add	r0, pc, r0
   12f30:	bl	117ac <yy_fatal_error>
   12f34:	mov	r5, #0
   12f38:	ldr	r8, [pc, #-712]	; 12c78 <sfbpf_lex+0xff0>
   12f3c:	add	r8, pc, r8
   12f40:	ldr	r6, [pc, #-716]	; 12c7c <sfbpf_lex+0xff4>
   12f44:	add	r6, pc, r6
   12f48:	ldr	r0, [r8, #28]
   12f4c:	bl	ec8 <getc@plt>
   12f50:	cmp	r0, #10
   12f54:	cmnne	r0, #1
   12f58:	beq	12f8c <sfbpf_lex+0x1304>
   12f5c:	ldr	r2, [r6, #20]
   12f60:	ldr	r3, [r6, #16]
   12f64:	ldr	r3, [r3, r2, lsl #2]
   12f68:	ldr	r3, [r3, #4]
   12f6c:	add	r3, r3, r5
   12f70:	ldr	r2, [sp, #56]	; 0x38
   12f74:	add	r3, r3, r2
   12f78:	strb	r0, [r3, #-1]
   12f7c:	add	r5, r5, #1
   12f80:	cmp	r5, r7
   12f84:	blt	12f48 <sfbpf_lex+0x12c0>
   12f88:	b	12fbc <sfbpf_lex+0x1334>
   12f8c:	cmp	r0, #10
   12f90:	bne	1309c <sfbpf_lex+0x1414>
   12f94:	ldr	r3, [pc, #-796]	; 12c80 <sfbpf_lex+0xff8>
   12f98:	add	r3, pc, r3
   12f9c:	ldr	r2, [r3, #20]
   12fa0:	ldr	r3, [r3, #16]
   12fa4:	ldr	r3, [r3, r2, lsl #2]
   12fa8:	ldr	r3, [r3, #4]
   12fac:	add	r3, r3, r5
   12fb0:	mov	r2, #10
   12fb4:	strb	r2, [r3, sl]
   12fb8:	add	r5, r5, #1
   12fbc:	ldr	r3, [pc, #-832]	; 12c84 <sfbpf_lex+0xffc>
   12fc0:	add	r3, pc, r3
   12fc4:	str	r5, [r3, #24]
   12fc8:	ldr	r3, [pc, #-840]	; 12c88 <sfbpf_lex+0x1000>
   12fcc:	add	r3, pc, r3
   12fd0:	ldr	r1, [r3, #20]
   12fd4:	ldr	r2, [r3, #16]
   12fd8:	ldr	r2, [r2, r1, lsl #2]
   12fdc:	ldr	r3, [r3, #24]
   12fe0:	str	r3, [r2, #16]
   12fe4:	cmp	r3, #0
   12fe8:	movne	r3, #0
   12fec:	strne	r3, [sp, #48]	; 0x30
   12ff0:	beq	12e6c <sfbpf_lex+0x11e4>
   12ff4:	ldr	r3, [pc, #-880]	; 12c8c <sfbpf_lex+0x1004>
   12ff8:	add	r3, pc, r3
   12ffc:	ldr	r5, [r3, #24]
   13000:	add	r8, sl, r5
   13004:	ldr	r7, [r3, #20]
   13008:	ldr	r6, [r3, #16]
   1300c:	ldr	sl, [r6, r7, lsl #2]
   13010:	ldr	r3, [sl, #12]
   13014:	cmp	r8, r3
   13018:	bgt	130f0 <sfbpf_lex+0x1468>
   1301c:	ldr	r3, [pc, #-916]	; 12c90 <sfbpf_lex+0x1008>
   13020:	add	r3, pc, r3
   13024:	str	r8, [r3, #24]
   13028:	ldr	r3, [r6, r7, lsl #2]
   1302c:	ldr	r3, [r3, #4]
   13030:	mov	r2, #0
   13034:	strb	r2, [r3, r8]
   13038:	ldr	r3, [r6, r7, lsl #2]
   1303c:	ldr	r3, [r3, #4]
   13040:	add	r8, r3, r8
   13044:	strb	r2, [r8, #1]
   13048:	ldr	r3, [r6, r7, lsl #2]
   1304c:	ldr	r3, [r3, #4]
   13050:	ldr	r2, [pc, #-932]	; 12cb4 <sfbpf_lex+0x102c>
   13054:	ldr	r2, [r9, r2]
   13058:	str	r3, [r2]
   1305c:	ldr	r2, [sp, #48]	; 0x30
   13060:	cmp	r2, #1
   13064:	beq	1312c <sfbpf_lex+0x14a4>
   13068:	ldr	sl, [sp, #28]
   1306c:	cmp	r2, #2
   13070:	beq	12b58 <sfbpf_lex+0xed0>
   13074:	mov	fp, r9
   13078:	ldr	sl, [sp, #12]
   1307c:	ldr	r9, [sp, #16]
   13080:	ldr	r6, [sp, #24]
   13084:	cmp	r2, #0
   13088:	beq	1315c <sfbpf_lex+0x14d4>
   1308c:	mov	r3, r9
   13090:	mov	r9, fp
   13094:	mov	fp, r3
   13098:	b	11d70 <sfbpf_lex+0xe8>
   1309c:	cmn	r0, #1
   130a0:	bne	12fbc <sfbpf_lex+0x1334>
   130a4:	ldr	r3, [pc, #-1048]	; 12c94 <sfbpf_lex+0x100c>
   130a8:	add	r3, pc, r3
   130ac:	ldr	r0, [r3, #28]
   130b0:	bl	d60 <ferror@plt>
   130b4:	cmp	r0, #0
   130b8:	beq	12fbc <sfbpf_lex+0x1334>
   130bc:	ldr	r0, [pc, #-1068]	; 12c98 <sfbpf_lex+0x1010>
   130c0:	add	r0, pc, r0
   130c4:	bl	117ac <yy_fatal_error>
   130c8:	ldr	r0, [pc, #-1076]	; 12c9c <sfbpf_lex+0x1014>
   130cc:	add	r0, pc, r0
   130d0:	bl	117ac <yy_fatal_error>
   130d4:	ldr	r3, [pc, #-1084]	; 12ca0 <sfbpf_lex+0x1018>
   130d8:	add	r3, pc, r3
   130dc:	ldr	r0, [r3, #28]
   130e0:	bl	11bdc <sfbpf_restart>
   130e4:	mov	r3, #1
   130e8:	str	r3, [sp, #48]	; 0x30
   130ec:	b	12ff4 <sfbpf_lex+0x136c>
   130f0:	add	r5, r8, r5, asr #1
   130f4:	mov	r1, r5
   130f8:	ldr	r0, [sl, #4]
   130fc:	bl	d90 <realloc@plt>
   13100:	str	r0, [sl, #4]
   13104:	ldr	r3, [r6, r7, lsl #2]
   13108:	ldr	r2, [r3, #4]
   1310c:	cmp	r2, #0
   13110:	beq	13120 <sfbpf_lex+0x1498>
   13114:	sub	r5, r5, #2
   13118:	str	r5, [r3, #12]
   1311c:	b	1301c <sfbpf_lex+0x1394>
   13120:	ldr	r0, [pc, #-1156]	; 12ca4 <sfbpf_lex+0x101c>
   13124:	add	r0, pc, r0
   13128:	bl	117ac <yy_fatal_error>
   1312c:	ldr	r3, [pc, #-1164]	; 12ca8 <sfbpf_lex+0x1020>
   13130:	add	r3, pc, r3
   13134:	ldr	r2, [pc, #-1160]	; 12cb4 <sfbpf_lex+0x102c>
   13138:	ldr	r2, [r9, r2]
   1313c:	ldr	r2, [r2]
   13140:	str	r2, [r3, #4]
   13144:	ldr	r3, [r3]
   13148:	sub	r3, r3, #1
   1314c:	add	r3, r3, r3, lsr #31
   13150:	asr	r3, r3, #1
   13154:	add	r3, r3, #146	; 0x92
   13158:	b	12004 <sfbpf_lex+0x37c>
   1315c:	ldr	r2, [sp, #52]	; 0x34
   13160:	add	r5, r3, r2
   13164:	ldr	r3, [pc, #-1216]	; 12cac <sfbpf_lex+0x1024>
   13168:	add	r3, pc, r3
   1316c:	str	r5, [r3, #4]
   13170:	bl	1158c <yy_get_previous_state>
   13174:	mov	r3, r0
   13178:	ldr	r2, [pc, #-1228]	; 12cb4 <sfbpf_lex+0x102c>
   1317c:	ldr	r2, [fp, r2]
   13180:	ldr	r2, [r2]
   13184:	str	r2, [sp, #20]
   13188:	mov	r0, r3
   1318c:	b	11d98 <sfbpf_lex+0x110>
   13190:	ldr	r0, [pc, #-1256]	; 12cb0 <sfbpf_lex+0x1028>
   13194:	add	r0, pc, r0
   13198:	bl	117ac <yy_fatal_error>
   1319c:	movw	r0, #258	; 0x102
   131a0:	b	131a8 <sfbpf_lex+0x1520>
   131a4:	movw	r0, #307	; 0x133
   131a8:	add	sp, sp, #108	; 0x6c
   131ac:	ldrd	r4, [sp]
   131b0:	ldrd	r6, [sp, #8]
   131b4:	ldrd	r8, [sp, #16]
   131b8:	ldrd	sl, [sp, #24]
   131bc:	add	sp, sp, #32
   131c0:	pop	{pc}		; (ldr pc, [sp], #4)
   131c4:	ldr	r3, [pc, #-1304]	; 12cb4 <sfbpf_lex+0x102c>
   131c8:	ldr	r3, [r9, r3]
   131cc:	ldr	r3, [r3]
   131d0:	str	r3, [sp, #20]
   131d4:	b	11f7c <sfbpf_lex+0x2f4>
   131d8:	cmp	r7, #8192	; 0x2000
   131dc:	movge	r7, #8192	; 0x2000
   131e0:	ldr	r3, [r5, r6, lsl #2]
   131e4:	ldr	r3, [r3, #24]
   131e8:	cmp	r3, #0
   131ec:	bne	12f34 <sfbpf_lex+0x12ac>
   131f0:	bl	e14 <__errno_location@plt>
   131f4:	mov	r6, r0
   131f8:	mov	r3, #0
   131fc:	str	r3, [r0]
   13200:	ldr	r5, [pc, #-1360]	; 12cb8 <sfbpf_lex+0x1030>
   13204:	add	r5, pc, r5
   13208:	ldr	r8, [pc, #-1364]	; 12cbc <sfbpf_lex+0x1034>
   1320c:	add	r8, pc, r8
   13210:	ldr	r2, [r5, #20]
   13214:	ldr	r3, [r5, #16]
   13218:	ldr	r3, [r3, r2, lsl #2]
   1321c:	ldr	r0, [r3, #4]
   13220:	ldr	r3, [r5, #28]
   13224:	mov	r2, r7
   13228:	mov	r1, #1
   1322c:	add	r0, r0, sl
   13230:	bl	da8 <fread@plt>
   13234:	str	r0, [r5, #24]
   13238:	cmp	r0, #0
   1323c:	bne	12fc8 <sfbpf_lex+0x1340>
   13240:	ldr	r3, [sp, #44]	; 0x2c
   13244:	ldr	r0, [r3, #28]
   13248:	bl	d60 <ferror@plt>
   1324c:	cmp	r0, #0
   13250:	beq	12fc8 <sfbpf_lex+0x1340>
   13254:	ldr	r3, [r6]
   13258:	cmp	r3, #4
   1325c:	bne	130c8 <sfbpf_lex+0x1440>
   13260:	mov	r3, #0
   13264:	str	r3, [r6]
   13268:	ldr	r0, [r8, #28]
   1326c:	bl	e68 <clearerr@plt>
   13270:	b	13210 <sfbpf_lex+0x1588>

00013274 <sfbpf_push_buffer_state>:
   13274:	str	r4, [sp, #-8]!
   13278:	str	lr, [sp, #4]
   1327c:	subs	r4, r0, #0
   13280:	beq	1330c <sfbpf_push_buffer_state+0x98>
   13284:	bl	117ec <sfbpf_ensure_buffer_stack>
   13288:	ldr	r3, [pc, #136]	; 13318 <sfbpf_push_buffer_state+0xa4>
   1328c:	add	r3, pc, r3
   13290:	ldr	r3, [r3, #16]
   13294:	cmp	r3, #0
   13298:	beq	132f8 <sfbpf_push_buffer_state+0x84>
   1329c:	ldr	r2, [pc, #120]	; 1331c <sfbpf_push_buffer_state+0xa8>
   132a0:	add	r2, pc, r2
   132a4:	ldr	r2, [r2, #20]
   132a8:	ldr	r1, [r3, r2, lsl #2]
   132ac:	cmp	r1, #0
   132b0:	beq	132f8 <sfbpf_push_buffer_state+0x84>
   132b4:	ldr	r1, [pc, #100]	; 13320 <sfbpf_push_buffer_state+0xac>
   132b8:	add	r1, pc, r1
   132bc:	ldr	r0, [r1, #4]
   132c0:	ldrb	ip, [r1, #32]
   132c4:	strb	ip, [r0]
   132c8:	ldr	ip, [r3, r2, lsl #2]
   132cc:	str	r0, [ip, #8]
   132d0:	ldr	r0, [r3, r2, lsl #2]
   132d4:	ldr	r1, [r1, #24]
   132d8:	str	r1, [r0, #16]
   132dc:	ldr	r1, [r3, r2, lsl #2]
   132e0:	cmp	r1, #0
   132e4:	beq	132f8 <sfbpf_push_buffer_state+0x84>
   132e8:	add	r2, r2, #1
   132ec:	ldr	r1, [pc, #48]	; 13324 <sfbpf_push_buffer_state+0xb0>
   132f0:	add	r1, pc, r1
   132f4:	str	r2, [r1, #20]
   132f8:	ldr	r2, [pc, #40]	; 13328 <sfbpf_push_buffer_state+0xb4>
   132fc:	add	r2, pc, r2
   13300:	ldr	r2, [r2, #20]
   13304:	str	r4, [r3, r2, lsl #2]
   13308:	bl	1174c <sfbpf__load_buffer_state>
   1330c:	ldr	r4, [sp]
   13310:	add	sp, sp, #4
   13314:	pop	{pc}		; (ldr pc, [sp], #4)
   13318:	.word	0x0001e8a8
   1331c:	.word	0x0001e894
   13320:	.word	0x0001e87c
   13324:	.word	0x0001e844
   13328:	.word	0x0001e838

0001332c <sfbpf_pop_buffer_state>:
   1332c:	strd	r4, [sp, #-16]!
   13330:	str	r6, [sp, #8]
   13334:	str	lr, [sp, #12]
   13338:	ldr	r3, [pc, #116]	; 133b4 <sfbpf_pop_buffer_state+0x88>
   1333c:	add	r3, pc, r3
   13340:	ldr	r4, [r3, #16]
   13344:	cmp	r4, #0
   13348:	beq	133a4 <sfbpf_pop_buffer_state+0x78>
   1334c:	ldr	r3, [pc, #100]	; 133b8 <sfbpf_pop_buffer_state+0x8c>
   13350:	add	r3, pc, r3
   13354:	ldr	r5, [r3, #20]
   13358:	ldr	r0, [r4, r5, lsl #2]
   1335c:	cmp	r0, #0
   13360:	beq	133a4 <sfbpf_pop_buffer_state+0x78>
   13364:	bl	119a8 <sfbpf__delete_buffer>
   13368:	mov	r3, #0
   1336c:	str	r3, [r4, r5, lsl #2]
   13370:	cmp	r5, r3
   13374:	beq	13388 <sfbpf_pop_buffer_state+0x5c>
   13378:	sub	r5, r5, #1
   1337c:	ldr	r3, [pc, #56]	; 133bc <sfbpf_pop_buffer_state+0x90>
   13380:	add	r3, pc, r3
   13384:	str	r5, [r3, #20]
   13388:	ldr	r3, [pc, #48]	; 133c0 <sfbpf_pop_buffer_state+0x94>
   1338c:	add	r3, pc, r3
   13390:	ldr	r3, [r3, #20]
   13394:	ldr	r3, [r4, r3, lsl #2]
   13398:	cmp	r3, #0
   1339c:	beq	133a4 <sfbpf_pop_buffer_state+0x78>
   133a0:	bl	1174c <sfbpf__load_buffer_state>
   133a4:	ldrd	r4, [sp]
   133a8:	ldr	r6, [sp, #8]
   133ac:	add	sp, sp, #12
   133b0:	pop	{pc}		; (ldr pc, [sp], #4)
   133b4:	.word	0x0001e7f8
   133b8:	.word	0x0001e7e4
   133bc:	.word	0x0001e7b4
   133c0:	.word	0x0001e7a8

000133c4 <sfbpf__scan_buffer>:
   133c4:	strd	r4, [sp, #-16]!
   133c8:	str	r6, [sp, #8]
   133cc:	str	lr, [sp, #12]
   133d0:	cmp	r1, #1
   133d4:	bls	13464 <sfbpf__scan_buffer+0xa0>
   133d8:	sub	r6, r1, #2
   133dc:	ldrb	r3, [r0, r6]
   133e0:	cmp	r3, #0
   133e4:	bne	1346c <sfbpf__scan_buffer+0xa8>
   133e8:	add	r1, r0, r1
   133ec:	ldrb	r3, [r1, #-1]
   133f0:	cmp	r3, #0
   133f4:	bne	13474 <sfbpf__scan_buffer+0xb0>
   133f8:	mov	r5, r0
   133fc:	mov	r0, #48	; 0x30
   13400:	bl	dc0 <malloc@plt>
   13404:	subs	r4, r0, #0
   13408:	beq	13458 <sfbpf__scan_buffer+0x94>
   1340c:	str	r6, [r4, #12]
   13410:	str	r5, [r4, #4]
   13414:	str	r5, [r4, #8]
   13418:	mov	r3, #0
   1341c:	str	r3, [r4, #20]
   13420:	str	r3, [r4]
   13424:	str	r6, [r4, #16]
   13428:	str	r3, [r4, #24]
   1342c:	mov	r2, #1
   13430:	str	r2, [r4, #28]
   13434:	str	r3, [r4, #40]	; 0x28
   13438:	str	r3, [r4, #44]	; 0x2c
   1343c:	mov	r0, r4
   13440:	bl	11900 <sfbpf__switch_to_buffer>
   13444:	mov	r0, r4
   13448:	ldrd	r4, [sp]
   1344c:	ldr	r6, [sp, #8]
   13450:	add	sp, sp, #12
   13454:	pop	{pc}		; (ldr pc, [sp], #4)
   13458:	ldr	r0, [pc, #28]	; 1347c <sfbpf__scan_buffer+0xb8>
   1345c:	add	r0, pc, r0
   13460:	bl	117ac <yy_fatal_error>
   13464:	mov	r4, #0
   13468:	b	13444 <sfbpf__scan_buffer+0x80>
   1346c:	mov	r4, #0
   13470:	b	13444 <sfbpf__scan_buffer+0x80>
   13474:	mov	r4, #0
   13478:	b	13444 <sfbpf__scan_buffer+0x80>
   1347c:	.word	0x0000d32c

00013480 <sfbpf__scan_bytes>:
   13480:	strd	r4, [sp, #-16]!
   13484:	str	r6, [sp, #8]
   13488:	str	lr, [sp, #12]
   1348c:	mov	r4, r0
   13490:	mov	r5, r1
   13494:	add	r6, r1, #2
   13498:	mov	r0, r6
   1349c:	bl	dc0 <malloc@plt>
   134a0:	cmp	r0, #0
   134a4:	beq	13504 <sfbpf__scan_bytes+0x84>
   134a8:	cmp	r5, #0
   134ac:	subgt	r3, r4, #1
   134b0:	subgt	r2, r0, #1
   134b4:	addgt	ip, r3, r5
   134b8:	ble	134cc <sfbpf__scan_bytes+0x4c>
   134bc:	ldrb	r1, [r3, #1]!
   134c0:	strb	r1, [r2, #1]!
   134c4:	cmp	r3, ip
   134c8:	bne	134bc <sfbpf__scan_bytes+0x3c>
   134cc:	add	r2, r0, r5
   134d0:	mov	r3, #0
   134d4:	strb	r3, [r2, #1]
   134d8:	strb	r3, [r0, r5]
   134dc:	mov	r1, r6
   134e0:	bl	133c4 <sfbpf__scan_buffer>
   134e4:	cmp	r0, #0
   134e8:	beq	13510 <sfbpf__scan_bytes+0x90>
   134ec:	mov	r3, #1
   134f0:	str	r3, [r0, #20]
   134f4:	ldrd	r4, [sp]
   134f8:	ldr	r6, [sp, #8]
   134fc:	add	sp, sp, #12
   13500:	pop	{pc}		; (ldr pc, [sp], #4)
   13504:	ldr	r0, [pc, #16]	; 1351c <sfbpf__scan_bytes+0x9c>
   13508:	add	r0, pc, r0
   1350c:	bl	117ac <yy_fatal_error>
   13510:	ldr	r0, [pc, #8]	; 13520 <sfbpf__scan_bytes+0xa0>
   13514:	add	r0, pc, r0
   13518:	bl	117ac <yy_fatal_error>
   1351c:	.word	0x0000d2ac
   13520:	.word	0x0000d2cc

00013524 <sfbpf__scan_string>:
   13524:	str	r4, [sp, #-8]!
   13528:	str	lr, [sp, #4]
   1352c:	mov	r4, r0
   13530:	bl	df0 <strlen@plt>
   13534:	mov	r1, r0
   13538:	mov	r0, r4
   1353c:	bl	13480 <sfbpf__scan_bytes>
   13540:	ldr	r4, [sp]
   13544:	add	sp, sp, #4
   13548:	pop	{pc}		; (ldr pc, [sp], #4)

0001354c <sfbpf_get_debug>:
   1354c:	ldr	r3, [pc, #8]	; 1355c <sfbpf_get_debug+0x10>
   13550:	add	r3, pc, r3
   13554:	ldr	r0, [r3, #48]	; 0x30
   13558:	bx	lr
   1355c:	.word	0x0001e5e4

00013560 <sfbpf_set_debug>:
   13560:	ldr	r3, [pc, #8]	; 13570 <sfbpf_set_debug+0x10>
   13564:	add	r3, pc, r3
   13568:	str	r0, [r3, #48]	; 0x30
   1356c:	bx	lr
   13570:	.word	0x0001e5d0

00013574 <sfbpf_lex_destroy>:
   13574:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13578:	strd	r6, [sp, #8]
   1357c:	str	r8, [sp, #16]
   13580:	str	lr, [sp, #20]
   13584:	ldr	r3, [pc, #156]	; 13628 <sfbpf_lex_destroy+0xb4>
   13588:	add	r3, pc, r3
   1358c:	ldr	r4, [r3, #16]
   13590:	cmp	r4, #0
   13594:	beq	135e0 <sfbpf_lex_destroy+0x6c>
   13598:	ldr	r3, [pc, #140]	; 1362c <sfbpf_lex_destroy+0xb8>
   1359c:	add	r3, pc, r3
   135a0:	ldr	r3, [r3, #20]
   135a4:	add	r5, r4, r3, lsl #2
   135a8:	ldr	r0, [r4, r3, lsl #2]
   135ac:	cmp	r0, #0
   135b0:	beq	135e0 <sfbpf_lex_destroy+0x6c>
   135b4:	mov	r7, #0
   135b8:	ldr	r6, [pc, #112]	; 13630 <sfbpf_lex_destroy+0xbc>
   135bc:	add	r6, pc, r6
   135c0:	bl	119a8 <sfbpf__delete_buffer>
   135c4:	str	r7, [r5]
   135c8:	bl	1332c <sfbpf_pop_buffer_state>
   135cc:	ldr	r3, [r6, #20]
   135d0:	add	r5, r4, r3, lsl #2
   135d4:	ldr	r0, [r4, r3, lsl #2]
   135d8:	cmp	r0, #0
   135dc:	bne	135c0 <sfbpf_lex_destroy+0x4c>
   135e0:	mov	r0, r4
   135e4:	bl	d48 <free@plt>
   135e8:	ldr	r3, [pc, #68]	; 13634 <sfbpf_lex_destroy+0xc0>
   135ec:	add	r3, pc, r3
   135f0:	mov	r0, #0
   135f4:	str	r0, [r3, #16]
   135f8:	str	r0, [r3, #20]
   135fc:	str	r0, [r3, #36]	; 0x24
   13600:	str	r0, [r3, #4]
   13604:	str	r0, [r3, #40]	; 0x28
   13608:	str	r0, [r3]
   1360c:	str	r0, [r3, #28]
   13610:	str	r0, [r3, #44]	; 0x2c
   13614:	ldrd	r4, [sp]
   13618:	ldrd	r6, [sp, #8]
   1361c:	ldr	r8, [sp, #16]
   13620:	add	sp, sp, #20
   13624:	pop	{pc}		; (ldr pc, [sp], #4)
   13628:	.word	0x0001e5ac
   1362c:	.word	0x0001e598
   13630:	.word	0x0001e578
   13634:	.word	0x0001e548

00013638 <sfbpf_alloc>:
   13638:	str	r4, [sp, #-8]!
   1363c:	str	lr, [sp, #4]
   13640:	bl	dc0 <malloc@plt>
   13644:	ldr	r4, [sp]
   13648:	add	sp, sp, #4
   1364c:	pop	{pc}		; (ldr pc, [sp], #4)

00013650 <sfbpf_realloc>:
   13650:	str	r4, [sp, #-8]!
   13654:	str	lr, [sp, #4]
   13658:	bl	d90 <realloc@plt>
   1365c:	ldr	r4, [sp]
   13660:	add	sp, sp, #4
   13664:	pop	{pc}		; (ldr pc, [sp], #4)

00013668 <sfbpf_free>:
   13668:	str	r4, [sp, #-8]!
   1366c:	str	lr, [sp, #4]
   13670:	bl	d48 <free@plt>
   13674:	ldr	r4, [sp]
   13678:	add	sp, sp, #4
   1367c:	pop	{pc}		; (ldr pc, [sp], #4)

00013680 <sf_lex_init>:
   13680:	str	r4, [sp, #-8]!
   13684:	str	lr, [sp, #4]
   13688:	bl	13524 <sfbpf__scan_string>
   1368c:	ldr	r3, [pc, #16]	; 136a4 <sf_lex_init+0x24>
   13690:	add	r3, pc, r3
   13694:	str	r0, [r3, #52]	; 0x34
   13698:	ldr	r4, [sp]
   1369c:	add	sp, sp, #4
   136a0:	pop	{pc}		; (ldr pc, [sp], #4)
   136a4:	.word	0x0001e4a4

000136a8 <sf_lex_cleanup>:
   136a8:	str	r4, [sp, #-8]!
   136ac:	str	lr, [sp, #4]
   136b0:	ldr	r3, [pc, #44]	; 136e4 <sf_lex_cleanup+0x3c>
   136b4:	add	r3, pc, r3
   136b8:	ldr	r0, [r3, #52]	; 0x34
   136bc:	cmp	r0, #0
   136c0:	beq	136c8 <sf_lex_cleanup+0x20>
   136c4:	bl	119a8 <sfbpf__delete_buffer>
   136c8:	ldr	r3, [pc, #24]	; 136e8 <sf_lex_cleanup+0x40>
   136cc:	add	r3, pc, r3
   136d0:	mov	r2, #0
   136d4:	str	r2, [r3, #52]	; 0x34
   136d8:	ldr	r4, [sp]
   136dc:	add	sp, sp, #4
   136e0:	pop	{pc}		; (ldr pc, [sp], #4)
   136e4:	.word	0x0001e480
   136e8:	.word	0x0001e468

000136ec <sfbpf_wrap>:
   136ec:	mov	r0, #1
   136f0:	bx	lr

Disassembly of section .fini:

000136f4 <_fini>:
   136f4:	push	{r3, lr}
   136f8:	pop	{r3, pc}
