
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010cc4 <.init>:
   10cc4:	push	{r3, lr}
   10cc8:	bl	10fc0 <rb_base64_encode@plt+0x48>
   10ccc:	pop	{r3, pc}

Disassembly of section .plt:

00010cd0 <open@plt-0x14>:
   10cd0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd4:	ldr	lr, [pc, #4]	; 10ce0 <open@plt-0x4>
   10cd8:	add	lr, pc, lr
   10cdc:	ldr	pc, [lr, #8]!
   10ce0:	andeq	r6, r1, r0, lsr #6

00010ce4 <open@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #90112	; 0x16000
   10cec:	ldr	pc, [ip, #800]!	; 0x320

00010cf0 <sigemptyset@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #90112	; 0x16000
   10cf8:	ldr	pc, [ip, #792]!	; 0x318

00010cfc <strerror@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #784]!	; 0x310

00010d08 <rb_get_type@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #776]!	; 0x308

00010d14 <abort@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #768]!	; 0x300

00010d20 <rb_event_addish@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #760]!	; 0x2f8

00010d2c <rb_ignore_errno@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #752]!	; 0x2f0

00010d38 <__libc_start_main@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #744]!	; 0x2e8

00010d44 <rb_setselect@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d50 <__gmon_start__@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #728]!	; 0x2d8

00010d5c <rb_send_fd_buf@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #720]!	; 0x2d0

00010d68 <vsnprintf@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #712]!	; 0x2c8

00010d74 <getenv@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d80 <calloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #696]!	; 0x2b8

00010d8c <htons@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #688]!	; 0x2b0

00010d98 <rb_set_nb@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #680]!	; 0x2a8

00010da4 <memset@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #672]!	; 0x2a0

00010db0 <__assert_fail@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #664]!	; 0x298

00010dbc <rb_linebuf_parse@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #656]!	; 0x290

00010dc8 <rb_strlcpy@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #648]!	; 0x288

00010dd4 <rb_init_rawbuffers@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #640]!	; 0x280

00010de0 <free@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #632]!	; 0x278

00010dec <rb_lib_loop@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #624]!	; 0x270

00010df8 <rb_read@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #616]!	; 0x268

00010e04 <rb_set_type@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #608]!	; 0x260

00010e10 <rb_linebuf_get@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #600]!	; 0x258

00010e1c <ntohs@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #592]!	; 0x250

00010e28 <rb_linebuf_flush@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #584]!	; 0x248

00010e34 <strlen@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #576]!	; 0x240

00010e40 <memcpy@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #568]!	; 0x238

00010e4c <rb_linebuf_donebuf@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #560]!	; 0x230

00010e58 <rb_strcasestr@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #552]!	; 0x228

00010e64 <rb_close@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #544]!	; 0x220

00010e70 <sigaddset@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #536]!	; 0x218

00010e7c <atoi@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #528]!	; 0x210

00010e88 <rb_rawbuf_length@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #520]!	; 0x208

00010e94 <rb_free_rawbuffer@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #512]!	; 0x200

00010ea0 <close@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #504]!	; 0x1f8

00010eac <fwrite@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #496]!	; 0x1f0

00010eb8 <rb_outofmemory@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #488]!	; 0x1e8

00010ec4 <rb_rawbuf_get@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #480]!	; 0x1e0

00010ed0 <sigaction@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #472]!	; 0x1d8

00010edc <rb_lib_init@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #464]!	; 0x1d0

00010ee8 <rb_new_rawbuffer@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ef4 <rb_open@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #448]!	; 0x1c0

00010f00 <rb_recv_fd_buf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #440]!	; 0x1b8

00010f0c <dup2@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #432]!	; 0x1b0

00010f18 <rb_linebuf_newbuf@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #90112	; 0x16000
   10f20:	ldr	pc, [ip, #424]!	; 0x1a8

00010f24 <htonl@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #90112	; 0x16000
   10f2c:	ldr	pc, [ip, #416]!	; 0x1a0

00010f30 <rb_linebuf_init@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #90112	; 0x16000
   10f38:	ldr	pc, [ip, #408]!	; 0x198

00010f3c <getrlimit@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #90112	; 0x16000
   10f44:	ldr	pc, [ip, #400]!	; 0x190

00010f48 <rb_rawbuf_append@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #90112	; 0x16000
   10f50:	ldr	pc, [ip, #392]!	; 0x188

00010f54 <rb_rawbuf_flush@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #90112	; 0x16000
   10f5c:	ldr	pc, [ip, #384]!	; 0x180

00010f60 <exit@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #376]!	; 0x178

00010f6c <__errno_location@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #368]!	; 0x170

00010f78 <rb_base64_encode@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #360]!	; 0x168

Disassembly of section .text:

00010f84 <.text>:
   10f84:	mov	fp, #0
   10f88:	mov	lr, #0
   10f8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f90:	mov	r2, sp
   10f94:	push	{r2}		; (str r2, [sp, #-4]!)
   10f98:	push	{r0}		; (str r0, [sp, #-4]!)
   10f9c:	ldr	ip, [pc, #16]	; 10fb4 <rb_base64_encode@plt+0x3c>
   10fa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa4:	ldr	r0, [pc, #12]	; 10fb8 <rb_base64_encode@plt+0x40>
   10fa8:	ldr	r3, [pc, #12]	; 10fbc <rb_base64_encode@plt+0x44>
   10fac:	bl	10d38 <__libc_start_main@plt>
   10fb0:	bl	10d14 <abort@plt>
   10fb4:	muleq	r1, r8, r2
   10fb8:	andeq	r3, r1, r0, lsr #15
   10fbc:	andeq	r6, r1, r8, lsr r2
   10fc0:	ldr	r3, [pc, #20]	; 10fdc <rb_base64_encode@plt+0x64>
   10fc4:	ldr	r2, [pc, #20]	; 10fe0 <rb_base64_encode@plt+0x68>
   10fc8:	add	r3, pc, r3
   10fcc:	ldr	r2, [r3, r2]
   10fd0:	cmp	r2, #0
   10fd4:	bxeq	lr
   10fd8:	b	10d50 <__gmon_start__@plt>
   10fdc:	andeq	r6, r1, r0, lsr r0
   10fe0:	andeq	r0, r0, ip, ror #1
   10fe4:	ldr	r3, [pc, #28]	; 11008 <rb_base64_encode@plt+0x90>
   10fe8:	ldr	r0, [pc, #28]	; 1100c <rb_base64_encode@plt+0x94>
   10fec:	sub	r3, r3, r0
   10ff0:	cmp	r3, #6
   10ff4:	bxls	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <rb_base64_encode@plt+0x98>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r7, r2, r3, lsl #2
   1100c:	andeq	r7, r2, r0, lsl #2
   11010:	andeq	r0, r0, r0
   11014:	ldr	r1, [pc, #36]	; 11040 <rb_base64_encode@plt+0xc8>
   11018:	ldr	r0, [pc, #36]	; 11044 <rb_base64_encode@plt+0xcc>
   1101c:	sub	r1, r1, r0
   11020:	asr	r1, r1, #2
   11024:	add	r1, r1, r1, lsr #31
   11028:	asrs	r1, r1, #1
   1102c:	bxeq	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <rb_base64_encode@plt+0xd0>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	andeq	r7, r2, r0, lsl #2
   11044:	andeq	r7, r2, r0, lsl #2
   11048:	andeq	r0, r0, r0
   1104c:	push	{r4, lr}
   11050:	ldr	r4, [pc, #24]	; 11070 <rb_base64_encode@plt+0xf8>
   11054:	ldrb	r3, [r4]
   11058:	cmp	r3, #0
   1105c:	popne	{r4, pc}
   11060:	bl	10fe4 <rb_base64_encode@plt+0x6c>
   11064:	mov	r3, #1
   11068:	strb	r3, [r4]
   1106c:	pop	{r4, pc}
   11070:	andeq	r7, r2, r0, lsl #2
   11074:	ldr	r0, [pc, #40]	; 110a4 <rb_base64_encode@plt+0x12c>
   11078:	ldr	r3, [r0]
   1107c:	cmp	r3, #0
   11080:	bne	11088 <rb_base64_encode@plt+0x110>
   11084:	b	11014 <rb_base64_encode@plt+0x9c>
   11088:	ldr	r3, [pc, #24]	; 110a8 <rb_base64_encode@plt+0x130>
   1108c:	cmp	r3, #0
   11090:	beq	11084 <rb_base64_encode@plt+0x10c>
   11094:	push	{r4, lr}
   11098:	blx	r3
   1109c:	pop	{r4, lr}
   110a0:	b	11014 <rb_base64_encode@plt+0x9c>
   110a4:	strdeq	r6, [r2], -ip
   110a8:	andeq	r0, r0, r0
   110ac:	push	{fp, lr}
   110b0:	add	fp, sp, #4
   110b4:	sub	sp, sp, #16
   110b8:	str	r0, [fp, #-8]
   110bc:	str	r1, [fp, #-12]
   110c0:	str	r2, [fp, #-16]
   110c4:	ldr	r3, [fp, #-8]
   110c8:	cmp	r3, #0
   110cc:	bne	110f0 <rb_base64_encode@plt+0x178>
   110d0:	ldr	r3, [pc, #260]	; 111dc <rb_base64_encode@plt+0x264>
   110d4:	add	r3, pc, r3
   110d8:	mov	r2, #143	; 0x8f
   110dc:	ldr	r1, [pc, #252]	; 111e0 <rb_base64_encode@plt+0x268>
   110e0:	add	r1, pc, r1
   110e4:	ldr	r0, [pc, #248]	; 111e4 <rb_base64_encode@plt+0x26c>
   110e8:	add	r0, pc, r0
   110ec:	bl	10db0 <__assert_fail@plt>
   110f0:	ldr	r3, [fp, #-12]
   110f4:	cmp	r3, #0
   110f8:	bne	1111c <rb_base64_encode@plt+0x1a4>
   110fc:	ldr	r3, [pc, #228]	; 111e8 <rb_base64_encode@plt+0x270>
   11100:	add	r3, pc, r3
   11104:	mov	r2, #144	; 0x90
   11108:	ldr	r1, [pc, #220]	; 111ec <rb_base64_encode@plt+0x274>
   1110c:	add	r1, pc, r1
   11110:	ldr	r0, [pc, #216]	; 111f0 <rb_base64_encode@plt+0x278>
   11114:	add	r0, pc, r0
   11118:	bl	10db0 <__assert_fail@plt>
   1111c:	ldr	r3, [fp, #-16]
   11120:	cmp	r3, #0
   11124:	bne	11148 <rb_base64_encode@plt+0x1d0>
   11128:	ldr	r3, [pc, #196]	; 111f4 <rb_base64_encode@plt+0x27c>
   1112c:	add	r3, pc, r3
   11130:	mov	r2, #145	; 0x91
   11134:	ldr	r1, [pc, #188]	; 111f8 <rb_base64_encode@plt+0x280>
   11138:	add	r1, pc, r1
   1113c:	ldr	r0, [pc, #184]	; 111fc <rb_base64_encode@plt+0x284>
   11140:	add	r0, pc, r0
   11144:	bl	10db0 <__assert_fail@plt>
   11148:	ldr	r3, [fp, #-12]
   1114c:	ldr	r2, [fp, #-8]
   11150:	str	r2, [r3]
   11154:	ldr	r3, [fp, #-12]
   11158:	mov	r2, #0
   1115c:	str	r2, [r3, #4]
   11160:	ldr	r3, [fp, #-16]
   11164:	ldr	r2, [r3]
   11168:	ldr	r3, [fp, #-12]
   1116c:	str	r2, [r3, #8]
   11170:	ldr	r3, [fp, #-16]
   11174:	ldr	r3, [r3]
   11178:	cmp	r3, #0
   1117c:	beq	11194 <rb_base64_encode@plt+0x21c>
   11180:	ldr	r3, [fp, #-16]
   11184:	ldr	r3, [r3]
   11188:	ldr	r2, [fp, #-12]
   1118c:	str	r2, [r3, #4]
   11190:	b	111b0 <rb_base64_encode@plt+0x238>
   11194:	ldr	r3, [fp, #-16]
   11198:	ldr	r3, [r3, #4]
   1119c:	cmp	r3, #0
   111a0:	bne	111b0 <rb_base64_encode@plt+0x238>
   111a4:	ldr	r3, [fp, #-16]
   111a8:	ldr	r2, [fp, #-12]
   111ac:	str	r2, [r3, #4]
   111b0:	ldr	r3, [fp, #-16]
   111b4:	ldr	r2, [fp, #-12]
   111b8:	str	r2, [r3]
   111bc:	ldr	r3, [fp, #-16]
   111c0:	ldr	r3, [r3, #8]
   111c4:	add	r2, r3, #1
   111c8:	ldr	r3, [fp, #-16]
   111cc:	str	r2, [r3, #8]
   111d0:	nop			; (mov r0, r0)
   111d4:	sub	sp, fp, #4
   111d8:	pop	{fp, pc}
   111dc:	andeq	r5, r0, r0, lsl #9
   111e0:	andeq	r5, r0, r0, asr #3
   111e4:	ldrdeq	r5, [r0], -r4
   111e8:	andeq	r5, r0, r4, asr r4
   111ec:	muleq	r0, r4, r1
   111f0:			; <UNDEFINED> instruction: 0x000051b8
   111f4:	andeq	r5, r0, r8, lsr #8
   111f8:	andeq	r5, r0, r8, ror #2
   111fc:	muleq	r0, r8, r1
   11200:	push	{fp, lr}
   11204:	add	fp, sp, #4
   11208:	sub	sp, sp, #16
   1120c:	str	r0, [fp, #-8]
   11210:	str	r1, [fp, #-12]
   11214:	str	r2, [fp, #-16]
   11218:	ldr	r3, [fp, #-12]
   1121c:	cmp	r3, #0
   11220:	bne	11244 <rb_base64_encode@plt+0x2cc>
   11224:	ldr	r3, [pc, #260]	; 11330 <rb_base64_encode@plt+0x3b8>
   11228:	add	r3, pc, r3
   1122c:	mov	r2, #211	; 0xd3
   11230:	ldr	r1, [pc, #252]	; 11334 <rb_base64_encode@plt+0x3bc>
   11234:	add	r1, pc, r1
   11238:	ldr	r0, [pc, #248]	; 11338 <rb_base64_encode@plt+0x3c0>
   1123c:	add	r0, pc, r0
   11240:	bl	10db0 <__assert_fail@plt>
   11244:	ldr	r3, [fp, #-16]
   11248:	cmp	r3, #0
   1124c:	bne	11270 <rb_base64_encode@plt+0x2f8>
   11250:	ldr	r3, [pc, #228]	; 1133c <rb_base64_encode@plt+0x3c4>
   11254:	add	r3, pc, r3
   11258:	mov	r2, #212	; 0xd4
   1125c:	ldr	r1, [pc, #220]	; 11340 <rb_base64_encode@plt+0x3c8>
   11260:	add	r1, pc, r1
   11264:	ldr	r0, [pc, #216]	; 11344 <rb_base64_encode@plt+0x3cc>
   11268:	add	r0, pc, r0
   1126c:	bl	10db0 <__assert_fail@plt>
   11270:	ldr	r3, [fp, #-8]
   11274:	cmp	r3, #0
   11278:	bne	1129c <rb_base64_encode@plt+0x324>
   1127c:	ldr	r3, [pc, #196]	; 11348 <rb_base64_encode@plt+0x3d0>
   11280:	add	r3, pc, r3
   11284:	mov	r2, #213	; 0xd5
   11288:	ldr	r1, [pc, #188]	; 1134c <rb_base64_encode@plt+0x3d4>
   1128c:	add	r1, pc, r1
   11290:	ldr	r0, [pc, #184]	; 11350 <rb_base64_encode@plt+0x3d8>
   11294:	add	r0, pc, r0
   11298:	bl	10db0 <__assert_fail@plt>
   1129c:	ldr	r3, [fp, #-12]
   112a0:	ldr	r2, [fp, #-8]
   112a4:	str	r2, [r3]
   112a8:	ldr	r3, [fp, #-12]
   112ac:	mov	r2, #0
   112b0:	str	r2, [r3, #8]
   112b4:	ldr	r3, [fp, #-16]
   112b8:	ldr	r2, [r3, #4]
   112bc:	ldr	r3, [fp, #-12]
   112c0:	str	r2, [r3, #4]
   112c4:	ldr	r3, [fp, #-16]
   112c8:	ldr	r3, [r3, #4]
   112cc:	cmp	r3, #0
   112d0:	beq	112e8 <rb_base64_encode@plt+0x370>
   112d4:	ldr	r3, [fp, #-16]
   112d8:	ldr	r3, [r3, #4]
   112dc:	ldr	r2, [fp, #-12]
   112e0:	str	r2, [r3, #8]
   112e4:	b	11304 <rb_base64_encode@plt+0x38c>
   112e8:	ldr	r3, [fp, #-16]
   112ec:	ldr	r3, [r3]
   112f0:	cmp	r3, #0
   112f4:	bne	11304 <rb_base64_encode@plt+0x38c>
   112f8:	ldr	r3, [fp, #-16]
   112fc:	ldr	r2, [fp, #-12]
   11300:	str	r2, [r3]
   11304:	ldr	r3, [fp, #-16]
   11308:	ldr	r2, [fp, #-12]
   1130c:	str	r2, [r3, #4]
   11310:	ldr	r3, [fp, #-16]
   11314:	ldr	r3, [r3, #8]
   11318:	add	r2, r3, #1
   1131c:	ldr	r3, [fp, #-16]
   11320:	str	r2, [r3, #8]
   11324:	nop			; (mov r0, r0)
   11328:	sub	sp, fp, #4
   1132c:	pop	{fp, pc}
   11330:	andeq	r5, r0, r8, asr #6
   11334:	andeq	r5, r0, ip, rrx
   11338:	muleq	r0, r0, r0
   1133c:	andeq	r5, r0, ip, lsl r3
   11340:	andeq	r5, r0, r0, asr #32
   11344:	andeq	r5, r0, r0, ror r0
   11348:	strdeq	r5, [r0], -r0
   1134c:	andeq	r5, r0, r4, lsl r0
   11350:	andeq	r5, r0, r8, lsr #32
   11354:	push	{fp, lr}
   11358:	add	fp, sp, #4
   1135c:	sub	sp, sp, #8
   11360:	str	r0, [fp, #-8]
   11364:	str	r1, [fp, #-12]
   11368:	ldr	r3, [fp, #-8]
   1136c:	cmp	r3, #0
   11370:	bne	11394 <rb_base64_encode@plt+0x41c>
   11374:	ldr	r3, [pc, #240]	; 1146c <rb_base64_encode@plt+0x4f4>
   11378:	add	r3, pc, r3
   1137c:	mov	r2, #235	; 0xeb
   11380:	ldr	r1, [pc, #232]	; 11470 <rb_base64_encode@plt+0x4f8>
   11384:	add	r1, pc, r1
   11388:	ldr	r0, [pc, #228]	; 11474 <rb_base64_encode@plt+0x4fc>
   1138c:	add	r0, pc, r0
   11390:	bl	10db0 <__assert_fail@plt>
   11394:	ldr	r3, [fp, #-12]
   11398:	cmp	r3, #0
   1139c:	bne	113c0 <rb_base64_encode@plt+0x448>
   113a0:	ldr	r3, [pc, #208]	; 11478 <rb_base64_encode@plt+0x500>
   113a4:	add	r3, pc, r3
   113a8:	mov	r2, #236	; 0xec
   113ac:	ldr	r1, [pc, #200]	; 1147c <rb_base64_encode@plt+0x504>
   113b0:	add	r1, pc, r1
   113b4:	ldr	r0, [pc, #196]	; 11480 <rb_base64_encode@plt+0x508>
   113b8:	add	r0, pc, r0
   113bc:	bl	10db0 <__assert_fail@plt>
   113c0:	ldr	r3, [fp, #-8]
   113c4:	ldr	r3, [r3, #8]
   113c8:	cmp	r3, #0
   113cc:	beq	113e8 <rb_base64_encode@plt+0x470>
   113d0:	ldr	r3, [fp, #-8]
   113d4:	ldr	r3, [r3, #8]
   113d8:	ldr	r2, [fp, #-8]
   113dc:	ldr	r2, [r2, #4]
   113e0:	str	r2, [r3, #4]
   113e4:	b	113f8 <rb_base64_encode@plt+0x480>
   113e8:	ldr	r3, [fp, #-8]
   113ec:	ldr	r2, [r3, #4]
   113f0:	ldr	r3, [fp, #-12]
   113f4:	str	r2, [r3, #4]
   113f8:	ldr	r3, [fp, #-8]
   113fc:	ldr	r3, [r3, #4]
   11400:	cmp	r3, #0
   11404:	beq	11420 <rb_base64_encode@plt+0x4a8>
   11408:	ldr	r3, [fp, #-8]
   1140c:	ldr	r3, [r3, #4]
   11410:	ldr	r2, [fp, #-8]
   11414:	ldr	r2, [r2, #8]
   11418:	str	r2, [r3, #8]
   1141c:	b	11430 <rb_base64_encode@plt+0x4b8>
   11420:	ldr	r3, [fp, #-8]
   11424:	ldr	r2, [r3, #8]
   11428:	ldr	r3, [fp, #-12]
   1142c:	str	r2, [r3]
   11430:	ldr	r3, [fp, #-8]
   11434:	mov	r2, #0
   11438:	str	r2, [r3, #4]
   1143c:	ldr	r3, [fp, #-8]
   11440:	ldr	r2, [r3, #4]
   11444:	ldr	r3, [fp, #-8]
   11448:	str	r2, [r3, #8]
   1144c:	ldr	r3, [fp, #-12]
   11450:	ldr	r3, [r3, #8]
   11454:	sub	r2, r3, #1
   11458:	ldr	r3, [fp, #-12]
   1145c:	str	r2, [r3, #8]
   11460:	nop			; (mov r0, r0)
   11464:	sub	sp, fp, #4
   11468:	pop	{fp, pc}
   1146c:	andeq	r5, r0, r8, ror #3
   11470:	andeq	r4, r0, ip, lsl pc
   11474:	andeq	r4, r0, r0, asr #30
   11478:			; <UNDEFINED> instruction: 0x000051bc
   1147c:	strdeq	r4, [r0], -r0
   11480:	andeq	r4, r0, r0, lsr #30
   11484:	push	{fp, lr}
   11488:	add	fp, sp, #4
   1148c:	sub	sp, sp, #16
   11490:	str	r0, [fp, #-16]
   11494:	ldr	r1, [fp, #-16]
   11498:	mov	r0, #1
   1149c:	bl	10d80 <calloc@plt>
   114a0:	mov	r3, r0
   114a4:	str	r3, [fp, #-8]
   114a8:	ldr	r3, [fp, #-8]
   114ac:	cmp	r3, #0
   114b0:	moveq	r3, #1
   114b4:	movne	r3, #0
   114b8:	uxtb	r3, r3
   114bc:	cmp	r3, #0
   114c0:	beq	114c8 <rb_base64_encode@plt+0x550>
   114c4:	bl	10eb8 <rb_outofmemory@plt>
   114c8:	ldr	r3, [fp, #-8]
   114cc:	mov	r0, r3
   114d0:	sub	sp, fp, #4
   114d4:	pop	{fp, pc}
   114d8:	push	{fp, lr}
   114dc:	add	fp, sp, #4
   114e0:	sub	sp, sp, #8
   114e4:	str	r0, [fp, #-8]
   114e8:	ldr	r3, [fp, #-8]
   114ec:	cmp	r3, #0
   114f0:	movne	r3, #1
   114f4:	moveq	r3, #0
   114f8:	uxtb	r3, r3
   114fc:	cmp	r3, #0
   11500:	beq	1150c <rb_base64_encode@plt+0x594>
   11504:	ldr	r0, [fp, #-8]
   11508:	bl	10de0 <free@plt>
   1150c:	nop			; (mov r0, r0)
   11510:	sub	sp, fp, #4
   11514:	pop	{fp, pc}
   11518:	push	{fp}		; (str fp, [sp, #-4]!)
   1151c:	add	fp, sp, #0
   11520:	sub	sp, sp, #20
   11524:	str	r0, [fp, #-16]
   11528:	ldr	r3, [fp, #-16]
   1152c:	ldr	r3, [r3]
   11530:	str	r3, [fp, #-8]
   11534:	ldr	r3, [fp, #-8]
   11538:	mov	r0, r3
   1153c:	add	sp, fp, #0
   11540:	pop	{fp}		; (ldr fp, [sp], #4)
   11544:	bx	lr
   11548:	push	{fp}		; (str fp, [sp, #-4]!)
   1154c:	add	fp, sp, #0
   11550:	sub	sp, sp, #12
   11554:	str	r0, [fp, #-8]
   11558:	str	r1, [fp, #-12]
   1155c:	ldr	r2, [fp, #-12]
   11560:	ldr	r3, [fp, #-8]
   11564:	str	r2, [r3]
   11568:	nop			; (mov r0, r0)
   1156c:	add	sp, fp, #0
   11570:	pop	{fp}		; (ldr fp, [sp], #4)
   11574:	bx	lr
   11578:	push	{fp}		; (str fp, [sp, #-4]!)
   1157c:	add	fp, sp, #0
   11580:	sub	sp, sp, #12
   11584:	str	r0, [fp, #-8]
   11588:	str	r1, [fp, #-12]
   1158c:	ldr	r3, [fp, #-8]
   11590:	ldrb	r3, [r3]
   11594:	bic	r3, r3, #15
   11598:	uxtb	r2, r3
   1159c:	ldr	r3, [fp, #-8]
   115a0:	strb	r2, [r3]
   115a4:	ldr	r3, [fp, #-8]
   115a8:	ldrb	r3, [r3]
   115ac:	sxtb	r2, r3
   115b0:	ldr	r3, [fp, #-12]
   115b4:	sxtb	r3, r3
   115b8:	and	r3, r3, #15
   115bc:	sxtb	r3, r3
   115c0:	orr	r3, r2, r3
   115c4:	sxtb	r3, r3
   115c8:	uxtb	r2, r3
   115cc:	ldr	r3, [fp, #-8]
   115d0:	strb	r2, [r3]
   115d4:	nop			; (mov r0, r0)
   115d8:	add	sp, fp, #0
   115dc:	pop	{fp}		; (ldr fp, [sp], #4)
   115e0:	bx	lr
   115e4:	push	{fp}		; (str fp, [sp, #-4]!)
   115e8:	add	fp, sp, #0
   115ec:	sub	sp, sp, #12
   115f0:	str	r0, [fp, #-8]
   115f4:	str	r1, [fp, #-12]
   115f8:	ldr	r3, [fp, #-8]
   115fc:	ldrb	r3, [r3]
   11600:	and	r3, r3, #127	; 0x7f
   11604:	uxtb	r2, r3
   11608:	ldr	r3, [fp, #-8]
   1160c:	strb	r2, [r3]
   11610:	ldr	r3, [fp, #-8]
   11614:	ldrb	r3, [r3]
   11618:	sxtb	r2, r3
   1161c:	ldr	r3, [fp, #-12]
   11620:	lsl	r3, r3, #7
   11624:	sxtb	r3, r3
   11628:	orr	r3, r2, r3
   1162c:	sxtb	r3, r3
   11630:	uxtb	r2, r3
   11634:	ldr	r3, [fp, #-8]
   11638:	strb	r2, [r3]
   1163c:	nop			; (mov r0, r0)
   11640:	add	sp, fp, #0
   11644:	pop	{fp}		; (ldr fp, [sp], #4)
   11648:	bx	lr
   1164c:	push	{fp}		; (str fp, [sp, #-4]!)
   11650:	add	fp, sp, #0
   11654:	sub	sp, sp, #12
   11658:	str	r0, [fp, #-8]
   1165c:	nop			; (mov r0, r0)
   11660:	add	sp, fp, #0
   11664:	pop	{fp}		; (ldr fp, [sp], #4)
   11668:	bx	lr
   1166c:	push	{fp, lr}
   11670:	add	fp, sp, #4
   11674:	sub	sp, sp, #144	; 0x90
   11678:	mov	r3, #0
   1167c:	str	r3, [fp, #-12]
   11680:	mov	r3, #1
   11684:	str	r3, [fp, #-144]	; 0xffffff70
   11688:	sub	r3, fp, #144	; 0x90
   1168c:	add	r3, r3, #4
   11690:	mov	r0, r3
   11694:	bl	10cf0 <sigemptyset@plt>
   11698:	sub	r3, fp, #144	; 0x90
   1169c:	add	r3, r3, #4
   116a0:	mov	r1, #13
   116a4:	mov	r0, r3
   116a8:	bl	10e70 <sigaddset@plt>
   116ac:	sub	r3, fp, #144	; 0x90
   116b0:	add	r3, r3, #4
   116b4:	mov	r1, #14
   116b8:	mov	r0, r3
   116bc:	bl	10e70 <sigaddset@plt>
   116c0:	sub	r3, fp, #144	; 0x90
   116c4:	add	r3, r3, #4
   116c8:	mov	r1, #5
   116cc:	mov	r0, r3
   116d0:	bl	10e70 <sigaddset@plt>
   116d4:	sub	r3, fp, #144	; 0x90
   116d8:	add	r3, r3, #4
   116dc:	mov	r1, #28
   116e0:	mov	r0, r3
   116e4:	bl	10e70 <sigaddset@plt>
   116e8:	sub	r3, fp, #144	; 0x90
   116ec:	mov	r2, #0
   116f0:	mov	r1, r3
   116f4:	mov	r0, #28
   116f8:	bl	10ed0 <sigaction@plt>
   116fc:	sub	r3, fp, #144	; 0x90
   11700:	mov	r2, #0
   11704:	mov	r1, r3
   11708:	mov	r0, #13
   1170c:	bl	10ed0 <sigaction@plt>
   11710:	sub	r3, fp, #144	; 0x90
   11714:	mov	r2, #0
   11718:	mov	r1, r3
   1171c:	mov	r0, #5
   11720:	bl	10ed0 <sigaction@plt>
   11724:	ldr	r3, [pc, #36]	; 11750 <rb_base64_encode@plt+0x7d8>
   11728:	add	r3, pc, r3
   1172c:	str	r3, [fp, #-144]	; 0xffffff70
   11730:	sub	r3, fp, #144	; 0x90
   11734:	mov	r2, #0
   11738:	mov	r1, r3
   1173c:	mov	r0, #14
   11740:	bl	10ed0 <sigaction@plt>
   11744:	nop			; (mov r0, r0)
   11748:	sub	sp, fp, #4
   1174c:	pop	{fp, pc}
   11750:			; <UNDEFINED> instruction: 0xffffff1c
   11754:	push	{fp, lr}
   11758:	add	fp, sp, #4
   1175c:	sub	sp, sp, #8
   11760:	sub	r3, fp, #12
   11764:	mov	r1, r3
   11768:	mov	r0, #7
   1176c:	bl	10f3c <getrlimit@plt>
   11770:	mov	r3, r0
   11774:	cmp	r3, #0
   11778:	bne	11784 <rb_base64_encode@plt+0x80c>
   1177c:	ldr	r3, [fp, #-12]
   11780:	b	11788 <rb_base64_encode@plt+0x810>
   11784:	ldr	r3, [pc, #8]	; 11794 <rb_base64_encode@plt+0x81c>
   11788:	mov	r0, r3
   1178c:	sub	sp, fp, #4
   11790:	pop	{fp, pc}
   11794:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   11798:	push	{fp, lr}
   1179c:	add	fp, sp, #4
   117a0:	sub	sp, sp, #8
   117a4:	str	r0, [fp, #-8]
   117a8:	str	r1, [fp, #-12]
   117ac:	ldr	r3, [fp, #-8]
   117b0:	ldr	r2, [fp, #-12]
   117b4:	str	r2, [r3, #80]	; 0x50
   117b8:	ldr	r0, [fp, #-8]
   117bc:	ldr	r3, [fp, #-12]
   117c0:	ldr	r2, [pc, #72]	; 11810 <rb_base64_encode@plt+0x898>
   117c4:	umull	r1, r2, r2, r3
   117c8:	lsr	r2, r2, #7
   117cc:	mov	r1, #2000	; 0x7d0
   117d0:	mul	r2, r1, r2
   117d4:	sub	r2, r3, r2
   117d8:	mov	r3, r2
   117dc:	lsl	r3, r3, #1
   117e0:	add	r3, r3, r2
   117e4:	lsl	r3, r3, #2
   117e8:	ldr	r2, [pc, #36]	; 11814 <rb_base64_encode@plt+0x89c>
   117ec:	add	r2, pc, r2
   117f0:	add	r3, r3, r2
   117f4:	mov	r2, r3
   117f8:	mov	r1, r0
   117fc:	ldr	r0, [fp, #-8]
   11800:	bl	110ac <rb_base64_encode@plt+0x134>
   11804:	nop			; (mov r0, r0)
   11808:	sub	sp, fp, #4
   1180c:	pop	{fp, pc}
   11810:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11814:	andeq	r5, r1, r8, lsl r9
   11818:	push	{fp, lr}
   1181c:	add	fp, sp, #4
   11820:	sub	sp, sp, #8
   11824:	str	r0, [fp, #-8]
   11828:	ldr	r3, [fp, #-8]
   1182c:	add	r3, r3, #52	; 0x34
   11830:	mov	r0, r3
   11834:	bl	10e4c <rb_linebuf_donebuf@plt>
   11838:	ldr	r3, [fp, #-8]
   1183c:	add	r3, r3, #24
   11840:	mov	r0, r3
   11844:	bl	10e4c <rb_linebuf_donebuf@plt>
   11848:	ldr	r3, [fp, #-8]
   1184c:	ldr	r3, [r3, #20]
   11850:	mov	r0, r3
   11854:	bl	10e94 <rb_free_rawbuffer@plt>
   11858:	ldr	r3, [fp, #-8]
   1185c:	ldr	r3, [r3, #16]
   11860:	mov	r0, r3
   11864:	bl	10e94 <rb_free_rawbuffer@plt>
   11868:	ldr	r0, [fp, #-8]
   1186c:	bl	114d8 <rb_base64_encode@plt+0x560>
   11870:	nop			; (mov r0, r0)
   11874:	sub	sp, fp, #4
   11878:	pop	{fp, pc}
   1187c:	push	{fp, lr}
   11880:	add	fp, sp, #4
   11884:	sub	sp, sp, #24
   11888:	str	r0, [fp, #-24]	; 0xffffffe8
   1188c:	ldr	r3, [pc, #168]	; 1193c <rb_base64_encode@plt+0x9c4>
   11890:	add	r3, pc, r3
   11894:	ldr	r3, [r3]
   11898:	str	r3, [fp, #-8]
   1189c:	ldr	r3, [fp, #-8]
   118a0:	cmp	r3, #0
   118a4:	beq	118b4 <rb_base64_encode@plt+0x93c>
   118a8:	ldr	r3, [fp, #-8]
   118ac:	ldr	r3, [r3, #8]
   118b0:	b	118b8 <rb_base64_encode@plt+0x940>
   118b4:	mov	r3, #0
   118b8:	str	r3, [fp, #-12]
   118bc:	b	118fc <rb_base64_encode@plt+0x984>
   118c0:	ldr	r3, [fp, #-8]
   118c4:	ldr	r3, [r3]
   118c8:	str	r3, [fp, #-16]
   118cc:	ldr	r0, [fp, #-16]
   118d0:	bl	11818 <rb_base64_encode@plt+0x8a0>
   118d4:	ldr	r3, [fp, #-12]
   118d8:	str	r3, [fp, #-8]
   118dc:	ldr	r3, [fp, #-8]
   118e0:	cmp	r3, #0
   118e4:	beq	118f4 <rb_base64_encode@plt+0x97c>
   118e8:	ldr	r3, [fp, #-8]
   118ec:	ldr	r3, [r3, #8]
   118f0:	b	118f8 <rb_base64_encode@plt+0x980>
   118f4:	mov	r3, #0
   118f8:	str	r3, [fp, #-12]
   118fc:	ldr	r3, [fp, #-8]
   11900:	cmp	r3, #0
   11904:	bne	118c0 <rb_base64_encode@plt+0x948>
   11908:	ldr	r3, [pc, #48]	; 11940 <rb_base64_encode@plt+0x9c8>
   1190c:	add	r3, pc, r3
   11910:	mov	r2, #0
   11914:	str	r2, [r3]
   11918:	ldr	r3, [pc, #36]	; 11944 <rb_base64_encode@plt+0x9cc>
   1191c:	add	r3, pc, r3
   11920:	ldr	r2, [r3]
   11924:	ldr	r3, [pc, #28]	; 11948 <rb_base64_encode@plt+0x9d0>
   11928:	add	r3, pc, r3
   1192c:	str	r2, [r3, #4]
   11930:	nop			; (mov r0, r0)
   11934:	sub	sp, fp, #4
   11938:	pop	{fp, pc}
   1193c:	andeq	fp, r1, r4, lsr r6
   11940:			; <UNDEFINED> instruction: 0x0001b5b8
   11944:	andeq	fp, r1, r8, lsr #11
   11948:	muleq	r1, ip, r5
   1194c:	push	{fp, lr}
   11950:	add	fp, sp, #4
   11954:	sub	sp, sp, #16
   11958:	str	r0, [fp, #-16]
   1195c:	str	r1, [fp, #-20]	; 0xffffffec
   11960:	ldr	r3, [fp, #-20]	; 0xffffffec
   11964:	str	r3, [fp, #-8]
   11968:	ldr	r3, [fp, #-8]
   1196c:	ldrb	r3, [r3, #128]	; 0x80
   11970:	and	r3, r3, #2
   11974:	cmp	r3, #0
   11978:	bne	11a60 <rb_base64_encode@plt+0xae8>
   1197c:	b	119a4 <rb_base64_encode@plt+0xa2c>
   11980:	ldr	r3, [fp, #-8]
   11984:	ldrd	r0, [r3, #120]	; 0x78
   11988:	ldr	r3, [fp, #-12]
   1198c:	mov	r2, r3
   11990:	asr	r3, r2, #31
   11994:	adds	r2, r2, r0
   11998:	adc	r3, r3, r1
   1199c:	ldr	r1, [fp, #-8]
   119a0:	strd	r2, [r1, #120]	; 0x78
   119a4:	ldr	r3, [fp, #-8]
   119a8:	add	r3, r3, #24
   119ac:	mov	r1, r3
   119b0:	ldr	r0, [fp, #-16]
   119b4:	bl	10e28 <rb_linebuf_flush@plt>
   119b8:	str	r0, [fp, #-12]
   119bc:	ldr	r3, [fp, #-12]
   119c0:	cmp	r3, #0
   119c4:	bgt	11980 <rb_base64_encode@plt+0xa08>
   119c8:	ldr	r3, [fp, #-12]
   119cc:	cmp	r3, #0
   119d0:	beq	11a00 <rb_base64_encode@plt+0xa88>
   119d4:	ldr	r3, [fp, #-12]
   119d8:	cmp	r3, #0
   119dc:	bge	11a14 <rb_base64_encode@plt+0xa9c>
   119e0:	bl	10f6c <__errno_location@plt>
   119e4:	mov	r3, r0
   119e8:	ldr	r3, [r3]
   119ec:	mov	r0, r3
   119f0:	bl	10d2c <rb_ignore_errno@plt>
   119f4:	mov	r3, r0
   119f8:	cmp	r3, #0
   119fc:	bne	11a14 <rb_base64_encode@plt+0xa9c>
   11a00:	mov	r2, #0
   11a04:	mov	r1, #0
   11a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a0c:	bl	1210c <rb_base64_encode@plt+0x1194>
   11a10:	b	11a64 <rb_base64_encode@plt+0xaec>
   11a14:	ldr	r3, [fp, #-8]
   11a18:	ldr	r3, [r3, #40]	; 0x28
   11a1c:	cmp	r3, #0
   11a20:	ble	11a44 <rb_base64_encode@plt+0xacc>
   11a24:	ldr	r3, [fp, #-8]
   11a28:	ldr	r0, [r3, #88]	; 0x58
   11a2c:	ldr	r3, [fp, #-8]
   11a30:	ldr	r2, [pc, #52]	; 11a6c <rb_base64_encode@plt+0xaf4>
   11a34:	add	r2, pc, r2
   11a38:	mov	r1, #2
   11a3c:	bl	10d44 <rb_setselect@plt>
   11a40:	b	11a64 <rb_base64_encode@plt+0xaec>
   11a44:	ldr	r3, [fp, #-8]
   11a48:	ldr	r0, [r3, #88]	; 0x58
   11a4c:	mov	r3, #0
   11a50:	mov	r2, #0
   11a54:	mov	r1, #2
   11a58:	bl	10d44 <rb_setselect@plt>
   11a5c:	b	11a64 <rb_base64_encode@plt+0xaec>
   11a60:	nop			; (mov r0, r0)
   11a64:	sub	sp, fp, #4
   11a68:	pop	{fp, pc}
   11a6c:			; <UNDEFINED> instruction: 0xffffff10
   11a70:	push	{fp, lr}
   11a74:	add	fp, sp, #4
   11a78:	sub	sp, sp, #24
   11a7c:	str	r0, [fp, #-24]	; 0xffffffe8
   11a80:	str	r1, [fp, #-28]	; 0xffffffe4
   11a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a88:	str	r3, [fp, #-8]
   11a8c:	ldr	r3, [fp, #-8]
   11a90:	ldrb	r3, [r3, #128]	; 0x80
   11a94:	and	r3, r3, #2
   11a98:	cmp	r3, #0
   11a9c:	bne	11c38 <rb_base64_encode@plt+0xcc0>
   11aa0:	b	11ac8 <rb_base64_encode@plt+0xb50>
   11aa4:	ldr	r3, [fp, #-8]
   11aa8:	ldrd	r0, [r3, #96]	; 0x60
   11aac:	ldr	r3, [fp, #-12]
   11ab0:	mov	r2, r3
   11ab4:	asr	r3, r2, #31
   11ab8:	adds	r2, r2, r0
   11abc:	adc	r3, r3, r1
   11ac0:	ldr	r1, [fp, #-8]
   11ac4:	strd	r2, [r1, #96]	; 0x60
   11ac8:	ldr	r3, [fp, #-8]
   11acc:	ldr	r3, [r3, #16]
   11ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ad4:	mov	r0, r3
   11ad8:	bl	10f54 <rb_rawbuf_flush@plt>
   11adc:	str	r0, [fp, #-12]
   11ae0:	ldr	r3, [fp, #-12]
   11ae4:	cmp	r3, #0
   11ae8:	bgt	11aa4 <rb_base64_encode@plt+0xb2c>
   11aec:	ldr	r3, [fp, #-12]
   11af0:	cmp	r3, #0
   11af4:	beq	11b24 <rb_base64_encode@plt+0xbac>
   11af8:	ldr	r3, [fp, #-12]
   11afc:	cmp	r3, #0
   11b00:	bge	11b84 <rb_base64_encode@plt+0xc0c>
   11b04:	bl	10f6c <__errno_location@plt>
   11b08:	mov	r3, r0
   11b0c:	ldr	r3, [r3]
   11b10:	mov	r0, r3
   11b14:	bl	10d2c <rb_ignore_errno@plt>
   11b18:	mov	r3, r0
   11b1c:	cmp	r3, #0
   11b20:	bne	11b84 <rb_base64_encode@plt+0xc0c>
   11b24:	ldr	r3, [fp, #-12]
   11b28:	cmp	r3, #0
   11b2c:	bne	11b50 <rb_base64_encode@plt+0xbd8>
   11b30:	ldr	r3, [pc, #268]	; 11c44 <rb_base64_encode@plt+0xccc>
   11b34:	add	r3, pc, r3
   11b38:	ldr	r3, [r3]
   11b3c:	ldr	r2, [pc, #260]	; 11c48 <rb_base64_encode@plt+0xcd0>
   11b40:	add	r2, pc, r2
   11b44:	mov	r1, #1
   11b48:	ldr	r0, [fp, #-8]
   11b4c:	bl	1210c <rb_base64_encode@plt+0x1194>
   11b50:	bl	10f6c <__errno_location@plt>
   11b54:	mov	r3, r0
   11b58:	ldr	r3, [r3]
   11b5c:	mov	r0, r3
   11b60:	bl	10cfc <strerror@plt>
   11b64:	str	r0, [fp, #-16]
   11b68:	ldr	r3, [fp, #-16]
   11b6c:	ldr	r2, [pc, #216]	; 11c4c <rb_base64_encode@plt+0xcd4>
   11b70:	add	r2, pc, r2
   11b74:	mov	r1, #1
   11b78:	ldr	r0, [fp, #-8]
   11b7c:	bl	1210c <rb_base64_encode@plt+0x1194>
   11b80:	b	11c3c <rb_base64_encode@plt+0xcc4>
   11b84:	ldr	r3, [fp, #-8]
   11b88:	ldr	r3, [r3, #16]
   11b8c:	mov	r0, r3
   11b90:	bl	10e88 <rb_rawbuf_length@plt>
   11b94:	mov	r3, r0
   11b98:	cmp	r3, #0
   11b9c:	ble	11bc0 <rb_base64_encode@plt+0xc48>
   11ba0:	ldr	r3, [fp, #-8]
   11ba4:	ldr	r0, [r3, #84]	; 0x54
   11ba8:	ldr	r3, [fp, #-8]
   11bac:	ldr	r2, [pc, #156]	; 11c50 <rb_base64_encode@plt+0xcd8>
   11bb0:	add	r2, pc, r2
   11bb4:	mov	r1, #2
   11bb8:	bl	10d44 <rb_setselect@plt>
   11bbc:	b	11bd8 <rb_base64_encode@plt+0xc60>
   11bc0:	ldr	r3, [fp, #-8]
   11bc4:	ldr	r0, [r3, #84]	; 0x54
   11bc8:	mov	r3, #0
   11bcc:	mov	r2, #0
   11bd0:	mov	r1, #2
   11bd4:	bl	10d44 <rb_setselect@plt>
   11bd8:	ldr	r3, [fp, #-8]
   11bdc:	ldrb	r3, [r3, #128]	; 0x80
   11be0:	and	r3, r3, #1
   11be4:	cmp	r3, #0
   11be8:	beq	11c3c <rb_base64_encode@plt+0xcc4>
   11bec:	ldr	r3, [fp, #-8]
   11bf0:	ldr	r3, [r3, #16]
   11bf4:	mov	r0, r3
   11bf8:	bl	10e88 <rb_rawbuf_length@plt>
   11bfc:	mov	r3, r0
   11c00:	cmp	r3, #0
   11c04:	bne	11c3c <rb_base64_encode@plt+0xcc4>
   11c08:	ldr	r3, [fp, #-8]
   11c0c:	ldrb	r3, [r3, #128]	; 0x80
   11c10:	bic	r3, r3, #1
   11c14:	uxtb	r2, r3
   11c18:	ldr	r3, [fp, #-8]
   11c1c:	strb	r2, [r3, #128]	; 0x80
   11c20:	ldr	r3, [fp, #-8]
   11c24:	ldr	r3, [r3, #88]	; 0x58
   11c28:	ldr	r1, [fp, #-8]
   11c2c:	mov	r0, r3
   11c30:	bl	12ffc <rb_base64_encode@plt+0x2084>
   11c34:	b	11c3c <rb_base64_encode@plt+0xcc4>
   11c38:	nop			; (mov r0, r0)
   11c3c:	sub	sp, fp, #4
   11c40:	pop	{fp, pc}
   11c44:	andeq	r5, r1, r0, asr #11
   11c48:	andeq	r4, r0, ip, asr #15
   11c4c:	andeq	r4, r0, r0, lsr #15
   11c50:			; <UNDEFINED> instruction: 0xfffffeb8
   11c54:	push	{fp, lr}
   11c58:	add	fp, sp, #4
   11c5c:	sub	sp, sp, #16
   11c60:	str	r0, [fp, #-8]
   11c64:	str	r1, [fp, #-12]
   11c68:	str	r2, [fp, #-16]
   11c6c:	ldr	r3, [fp, #-8]
   11c70:	ldrb	r3, [r3, #128]	; 0x80
   11c74:	and	r3, r3, #2
   11c78:	cmp	r3, #0
   11c7c:	bne	11c9c <rb_base64_encode@plt+0xd24>
   11c80:	ldr	r3, [fp, #-8]
   11c84:	ldr	r3, [r3, #16]
   11c88:	ldr	r2, [fp, #-16]
   11c8c:	ldr	r1, [fp, #-12]
   11c90:	mov	r0, r3
   11c94:	bl	10f48 <rb_rawbuf_append@plt>
   11c98:	b	11ca0 <rb_base64_encode@plt+0xd28>
   11c9c:	nop			; (mov r0, r0)
   11ca0:	sub	sp, fp, #4
   11ca4:	pop	{fp, pc}
   11ca8:	push	{fp, lr}
   11cac:	add	fp, sp, #4
   11cb0:	sub	sp, sp, #24
   11cb4:	str	r0, [fp, #-16]
   11cb8:	str	r1, [fp, #-20]	; 0xffffffec
   11cbc:	str	r2, [fp, #-24]	; 0xffffffe8
   11cc0:	mov	r3, #0
   11cc4:	strb	r3, [fp, #-8]
   11cc8:	mov	r3, #0
   11ccc:	strb	r3, [fp, #-7]
   11cd0:	sub	r3, fp, #8
   11cd4:	mov	r1, #1
   11cd8:	mov	r0, r3
   11cdc:	bl	11578 <rb_base64_encode@plt+0x600>
   11ce0:	sub	r3, fp, #8
   11ce4:	mov	r1, #1
   11ce8:	mov	r0, r3
   11cec:	bl	115e4 <rb_base64_encode@plt+0x66c>
   11cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cf4:	uxtb	r3, r3
   11cf8:	add	r3, r3, #2
   11cfc:	uxtb	r3, r3
   11d00:	and	r3, r3, #127	; 0x7f
   11d04:	uxtb	r3, r3
   11d08:	strb	r3, [fp, #-7]
   11d0c:	sub	r3, fp, #8
   11d10:	mov	r2, #2
   11d14:	mov	r1, r3
   11d18:	ldr	r0, [fp, #-16]
   11d1c:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d24:	mov	r2, r3
   11d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   11d2c:	ldr	r0, [fp, #-16]
   11d30:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11d34:	mov	r2, #2
   11d38:	ldr	r3, [pc, #24]	; 11d58 <rb_base64_encode@plt+0xde0>
   11d3c:	add	r3, pc, r3
   11d40:	mov	r1, r3
   11d44:	ldr	r0, [fp, #-16]
   11d48:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11d4c:	nop			; (mov r0, r0)
   11d50:	sub	sp, fp, #4
   11d54:	pop	{fp, pc}
   11d58:	andeq	r4, r0, r4, ror #11
   11d5c:	push	{fp, lr}
   11d60:	add	fp, sp, #4
   11d64:	sub	sp, sp, #24
   11d68:	str	r0, [fp, #-16]
   11d6c:	str	r1, [fp, #-20]	; 0xffffffec
   11d70:	str	r2, [fp, #-24]	; 0xffffffe8
   11d74:	mov	r3, #0
   11d78:	strb	r3, [fp, #-8]
   11d7c:	mov	r3, #0
   11d80:	strb	r3, [fp, #-7]
   11d84:	mov	r3, #0
   11d88:	strh	r3, [fp, #-6]
   11d8c:	sub	r3, fp, #8
   11d90:	mov	r1, #1
   11d94:	mov	r0, r3
   11d98:	bl	11578 <rb_base64_encode@plt+0x600>
   11d9c:	sub	r3, fp, #8
   11da0:	mov	r1, #1
   11da4:	mov	r0, r3
   11da8:	bl	115e4 <rb_base64_encode@plt+0x66c>
   11dac:	mov	r3, #126	; 0x7e
   11db0:	strb	r3, [fp, #-7]
   11db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11db8:	uxth	r3, r3
   11dbc:	add	r3, r3, #2
   11dc0:	uxth	r3, r3
   11dc4:	mov	r0, r3
   11dc8:	bl	10d8c <htons@plt>
   11dcc:	mov	r3, r0
   11dd0:	strh	r3, [fp, #-6]
   11dd4:	sub	r3, fp, #8
   11dd8:	mov	r2, #4
   11ddc:	mov	r1, r3
   11de0:	ldr	r0, [fp, #-16]
   11de4:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dec:	mov	r2, r3
   11df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11df4:	ldr	r0, [fp, #-16]
   11df8:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11dfc:	mov	r2, #2
   11e00:	ldr	r3, [pc, #24]	; 11e20 <rb_base64_encode@plt+0xea8>
   11e04:	add	r3, pc, r3
   11e08:	mov	r1, r3
   11e0c:	ldr	r0, [fp, #-16]
   11e10:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   11e14:	nop			; (mov r0, r0)
   11e18:	sub	sp, fp, #4
   11e1c:	pop	{fp, pc}
   11e20:	andeq	r4, r0, ip, lsl r5
   11e24:	push	{fp, lr}
   11e28:	add	fp, sp, #4
   11e2c:	sub	sp, sp, #16
   11e30:	str	r0, [fp, #-8]
   11e34:	str	r1, [fp, #-12]
   11e38:	str	r2, [fp, #-16]
   11e3c:	ldr	r3, [fp, #-8]
   11e40:	ldrb	r3, [r3, #128]	; 0x80
   11e44:	and	r3, r3, #2
   11e48:	cmp	r3, #0
   11e4c:	bne	11e84 <rb_base64_encode@plt+0xf0c>
   11e50:	ldr	r3, [fp, #-16]
   11e54:	cmp	r3, #122	; 0x7a
   11e58:	bgt	11e70 <rb_base64_encode@plt+0xef8>
   11e5c:	ldr	r2, [fp, #-16]
   11e60:	ldr	r1, [fp, #-12]
   11e64:	ldr	r0, [fp, #-8]
   11e68:	bl	11ca8 <rb_base64_encode@plt+0xd30>
   11e6c:	b	11e88 <rb_base64_encode@plt+0xf10>
   11e70:	ldr	r2, [fp, #-16]
   11e74:	ldr	r1, [fp, #-12]
   11e78:	ldr	r0, [fp, #-8]
   11e7c:	bl	11d5c <rb_base64_encode@plt+0xde4>
   11e80:	b	11e88 <rb_base64_encode@plt+0xf10>
   11e84:	nop			; (mov r0, r0)
   11e88:	sub	sp, fp, #4
   11e8c:	pop	{fp, pc}
   11e90:	push	{fp, lr}
   11e94:	add	fp, sp, #4
   11e98:	sub	sp, sp, #40	; 0x28
   11e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   11ea0:	str	r1, [fp, #-36]	; 0xffffffdc
   11ea4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ea8:	str	r3, [fp, #-20]	; 0xffffffec
   11eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   11eb0:	ldr	r3, [r3, #36]	; 0x24
   11eb4:	str	r3, [fp, #-8]
   11eb8:	ldr	r3, [fp, #-8]
   11ebc:	cmp	r3, #0
   11ec0:	beq	11ed0 <rb_base64_encode@plt+0xf58>
   11ec4:	ldr	r3, [fp, #-8]
   11ec8:	ldr	r3, [r3, #8]
   11ecc:	b	11ed4 <rb_base64_encode@plt+0xf5c>
   11ed0:	mov	r3, #0
   11ed4:	str	r3, [fp, #-12]
   11ed8:	b	12020 <rb_base64_encode@plt+0x10a8>
   11edc:	ldr	r3, [fp, #-8]
   11ee0:	ldr	r3, [r3]
   11ee4:	str	r3, [fp, #-24]	; 0xffffffe8
   11ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11eec:	ldr	r0, [r3, #16]
   11ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ef4:	add	r1, r3, #20
   11ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11efc:	ldr	ip, [r3, #36]	; 0x24
   11f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f04:	ldr	lr, [r3, #12]
   11f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f0c:	ldr	r3, [r3, #16]
   11f10:	ldr	r2, [pc, #332]	; 12064 <rb_base64_encode@plt+0x10ec>
   11f14:	add	r2, pc, r2
   11f18:	ldr	r2, [r2]
   11f1c:	str	r2, [sp, #4]
   11f20:	str	r3, [sp]
   11f24:	mov	r3, lr
   11f28:	mov	r2, ip
   11f2c:	bl	10d5c <rb_send_fd_buf@plt>
   11f30:	str	r0, [fp, #-28]	; 0xffffffe4
   11f34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f38:	cmp	r3, #0
   11f3c:	ble	11fb8 <rb_base64_encode@plt+0x1040>
   11f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f44:	add	r3, r3, #36	; 0x24
   11f48:	mov	r1, r3
   11f4c:	ldr	r0, [fp, #-8]
   11f50:	bl	11354 <rb_base64_encode@plt+0x3dc>
   11f54:	mov	r3, #0
   11f58:	str	r3, [fp, #-16]
   11f5c:	b	11f8c <rb_base64_encode@plt+0x1014>
   11f60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f64:	ldr	r3, [fp, #-16]
   11f68:	add	r3, r3, #4
   11f6c:	lsl	r3, r3, #2
   11f70:	add	r3, r2, r3
   11f74:	ldr	r3, [r3, #4]
   11f78:	mov	r0, r3
   11f7c:	bl	10e64 <rb_close@plt>
   11f80:	ldr	r3, [fp, #-16]
   11f84:	add	r3, r3, #1
   11f88:	str	r3, [fp, #-16]
   11f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f90:	ldr	r2, [r3, #36]	; 0x24
   11f94:	ldr	r3, [fp, #-16]
   11f98:	cmp	r2, r3
   11f9c:	bgt	11f60 <rb_base64_encode@plt+0xfe8>
   11fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fa4:	ldr	r3, [r3, #12]
   11fa8:	mov	r0, r3
   11fac:	bl	114d8 <rb_base64_encode@plt+0x560>
   11fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11fb4:	bl	114d8 <rb_base64_encode@plt+0x560>
   11fb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fbc:	cmp	r3, #0
   11fc0:	beq	11ff0 <rb_base64_encode@plt+0x1078>
   11fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fc8:	cmp	r3, #0
   11fcc:	bge	11ff8 <rb_base64_encode@plt+0x1080>
   11fd0:	bl	10f6c <__errno_location@plt>
   11fd4:	mov	r3, r0
   11fd8:	ldr	r3, [r3]
   11fdc:	mov	r0, r3
   11fe0:	bl	10d2c <rb_ignore_errno@plt>
   11fe4:	mov	r3, r0
   11fe8:	cmp	r3, #0
   11fec:	bne	11ff8 <rb_base64_encode@plt+0x1080>
   11ff0:	mov	r0, #0
   11ff4:	bl	10f60 <exit@plt>
   11ff8:	ldr	r3, [fp, #-12]
   11ffc:	str	r3, [fp, #-8]
   12000:	ldr	r3, [fp, #-8]
   12004:	cmp	r3, #0
   12008:	beq	12018 <rb_base64_encode@plt+0x10a0>
   1200c:	ldr	r3, [fp, #-8]
   12010:	ldr	r3, [r3, #8]
   12014:	b	1201c <rb_base64_encode@plt+0x10a4>
   12018:	mov	r3, #0
   1201c:	str	r3, [fp, #-12]
   12020:	ldr	r3, [fp, #-8]
   12024:	cmp	r3, #0
   12028:	bne	11edc <rb_base64_encode@plt+0xf64>
   1202c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12030:	ldr	r3, [r3, #44]	; 0x2c
   12034:	cmp	r3, #0
   12038:	beq	12058 <rb_base64_encode@plt+0x10e0>
   1203c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12040:	ldr	r0, [r3, #16]
   12044:	ldr	r3, [fp, #-20]	; 0xffffffec
   12048:	ldr	r2, [pc, #24]	; 12068 <rb_base64_encode@plt+0x10f0>
   1204c:	add	r2, pc, r2
   12050:	mov	r1, #2
   12054:	bl	10d44 <rb_setselect@plt>
   12058:	nop			; (mov r0, r0)
   1205c:	sub	sp, fp, #4
   12060:	pop	{fp, pc}
   12064:	andeq	r5, r1, r8, ror #3
   12068:			; <UNDEFINED> instruction: 0xfffffe3c
   1206c:	push	{fp, lr}
   12070:	add	fp, sp, #4
   12074:	sub	sp, sp, #24
   12078:	str	r0, [fp, #-16]
   1207c:	str	r1, [fp, #-20]	; 0xffffffec
   12080:	str	r2, [fp, #-24]	; 0xffffffe8
   12084:	mov	r0, #40	; 0x28
   12088:	bl	11484 <rb_base64_encode@plt+0x50c>
   1208c:	str	r0, [fp, #-8]
   12090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12094:	bl	11484 <rb_base64_encode@plt+0x50c>
   12098:	mov	r2, r0
   1209c:	ldr	r3, [fp, #-8]
   120a0:	str	r2, [r3, #12]
   120a4:	ldr	r3, [fp, #-8]
   120a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   120ac:	str	r2, [r3, #16]
   120b0:	ldr	r3, [fp, #-8]
   120b4:	ldr	r3, [r3, #12]
   120b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   120bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   120c0:	mov	r0, r3
   120c4:	bl	10e40 <memcpy@plt>
   120c8:	ldr	r3, [fp, #-8]
   120cc:	mov	r2, #0
   120d0:	str	r2, [r3, #36]	; 0x24
   120d4:	ldr	r1, [fp, #-8]
   120d8:	ldr	r3, [fp, #-16]
   120dc:	add	r3, r3, #36	; 0x24
   120e0:	mov	r2, r3
   120e4:	ldr	r0, [fp, #-8]
   120e8:	bl	11200 <rb_base64_encode@plt+0x288>
   120ec:	ldr	r3, [fp, #-16]
   120f0:	ldr	r3, [r3, #16]
   120f4:	ldr	r1, [fp, #-16]
   120f8:	mov	r0, r3
   120fc:	bl	11e90 <rb_base64_encode@plt+0xf18>
   12100:	nop			; (mov r0, r0)
   12104:	sub	sp, fp, #4
   12108:	pop	{fp, pc}
   1210c:	push	{r2, r3}
   12110:	push	{fp, lr}
   12114:	add	fp, sp, #4
   12118:	sub	sp, sp, #400	; 0x190
   1211c:	str	r0, [fp, #-400]	; 0xfffffe70
   12120:	str	r1, [fp, #-404]	; 0xfffffe6c
   12124:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12128:	ldrb	r3, [r3, #128]	; 0x80
   1212c:	and	r3, r3, #2
   12130:	cmp	r3, #0
   12134:	bne	12300 <rb_base64_encode@plt+0x1388>
   12138:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1213c:	ldrb	r3, [r3, #128]	; 0x80
   12140:	and	r3, r3, #8
   12144:	cmp	r3, #0
   12148:	beq	12154 <rb_base64_encode@plt+0x11dc>
   1214c:	ldr	r0, [fp, #-400]	; 0xfffffe70
   12150:	bl	12f08 <rb_base64_encode@plt+0x1f90>
   12154:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12158:	ldr	r2, [r3, #16]
   1215c:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12160:	ldr	r3, [r3, #84]	; 0x54
   12164:	mov	r1, r3
   12168:	mov	r0, r2
   1216c:	bl	10f54 <rb_rawbuf_flush@plt>
   12170:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12174:	ldr	r2, [r3, #88]	; 0x58
   12178:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1217c:	add	r3, r3, #24
   12180:	mov	r1, r3
   12184:	mov	r0, r2
   12188:	bl	10e28 <rb_linebuf_flush@plt>
   1218c:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12190:	ldr	r3, [r3, #84]	; 0x54
   12194:	mov	r0, r3
   12198:	bl	10e64 <rb_close@plt>
   1219c:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121a0:	ldrb	r3, [r3, #128]	; 0x80
   121a4:	orr	r3, r3, #2
   121a8:	uxtb	r2, r3
   121ac:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121b0:	strb	r2, [r3, #128]	; 0x80
   121b4:	ldr	r0, [fp, #-400]	; 0xfffffe70
   121b8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   121bc:	ldr	r3, [r3, #80]	; 0x50
   121c0:	ldr	r2, [pc, #332]	; 12314 <rb_base64_encode@plt+0x139c>
   121c4:	umull	r1, r2, r2, r3
   121c8:	lsr	r2, r2, #7
   121cc:	mov	r1, #2000	; 0x7d0
   121d0:	mul	r2, r1, r2
   121d4:	sub	r2, r3, r2
   121d8:	mov	r3, r2
   121dc:	lsl	r3, r3, #1
   121e0:	add	r3, r3, r2
   121e4:	lsl	r3, r3, #2
   121e8:	ldr	r2, [pc, #296]	; 12318 <rb_base64_encode@plt+0x13a0>
   121ec:	add	r2, pc, r2
   121f0:	add	r3, r3, r2
   121f4:	mov	r1, r3
   121f8:	bl	11354 <rb_base64_encode@plt+0x3dc>
   121fc:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   12200:	cmp	r3, #0
   12204:	beq	12214 <rb_base64_encode@plt+0x129c>
   12208:	ldr	r3, [fp, #4]
   1220c:	cmp	r3, #0
   12210:	bne	12240 <rb_base64_encode@plt+0x12c8>
   12214:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12218:	ldr	r3, [r3, #88]	; 0x58
   1221c:	mov	r0, r3
   12220:	bl	10e64 <rb_close@plt>
   12224:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12228:	ldr	r2, [pc, #236]	; 1231c <rb_base64_encode@plt+0x13a4>
   1222c:	add	r2, pc, r2
   12230:	mov	r1, r3
   12234:	ldr	r0, [fp, #-400]	; 0xfffffe70
   12238:	bl	110ac <rb_base64_encode@plt+0x134>
   1223c:	b	12304 <rb_base64_encode@plt+0x138c>
   12240:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12244:	ldr	r0, [r3, #88]	; 0x58
   12248:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1224c:	ldr	r2, [pc, #204]	; 12320 <rb_base64_encode@plt+0x13a8>
   12250:	add	r2, pc, r2
   12254:	mov	r1, #1
   12258:	bl	10d44 <rb_setselect@plt>
   1225c:	ldr	r3, [fp, #-400]	; 0xfffffe70
   12260:	ldr	r0, [r3, #88]	; 0x58
   12264:	mov	r3, #0
   12268:	mov	r2, #0
   1226c:	mov	r1, #2
   12270:	bl	10d44 <rb_setselect@plt>
   12274:	add	r3, fp, #8
   12278:	str	r3, [fp, #-12]
   1227c:	sub	r0, fp, #140	; 0x8c
   12280:	ldr	r3, [fp, #-12]
   12284:	ldr	r2, [fp, #4]
   12288:	mov	r1, #128	; 0x80
   1228c:	bl	10d68 <vsnprintf@plt>
   12290:	mov	r3, #68	; 0x44
   12294:	strb	r3, [fp, #-396]	; 0xfffffe74
   12298:	ldr	r3, [fp, #-400]	; 0xfffffe70
   1229c:	ldr	r2, [r3, #80]	; 0x50
   122a0:	sub	r3, fp, #396	; 0x18c
   122a4:	add	r3, r3, #1
   122a8:	mov	r1, r2
   122ac:	mov	r0, r3
   122b0:	bl	11548 <rb_base64_encode@plt+0x5d0>
   122b4:	sub	r1, fp, #140	; 0x8c
   122b8:	sub	r3, fp, #396	; 0x18c
   122bc:	add	r3, r3, #5
   122c0:	mov	r2, #251	; 0xfb
   122c4:	mov	r0, r3
   122c8:	bl	10dc8 <rb_strlcpy@plt>
   122cc:	sub	r3, fp, #140	; 0x8c
   122d0:	mov	r0, r3
   122d4:	bl	10e34 <strlen@plt>
   122d8:	mov	r3, r0
   122dc:	add	r3, r3, #6
   122e0:	str	r3, [fp, #-8]
   122e4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   122e8:	ldr	r3, [r3, #12]
   122ec:	ldr	r2, [fp, #-8]
   122f0:	sub	r1, fp, #396	; 0x18c
   122f4:	mov	r0, r3
   122f8:	bl	1206c <rb_base64_encode@plt+0x10f4>
   122fc:	b	12304 <rb_base64_encode@plt+0x138c>
   12300:	nop			; (mov r0, r0)
   12304:	sub	sp, fp, #4
   12308:	pop	{fp, lr}
   1230c:	add	sp, sp, #8
   12310:	bx	lr
   12314:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   12318:	andeq	r4, r1, r8, lsl pc
   1231c:	muleq	r1, r8, ip
   12320:			; <UNDEFINED> instruction: 0x00000fb0
   12324:	push	{fp, lr}
   12328:	add	fp, sp, #4
   1232c:	sub	sp, sp, #24
   12330:	str	r0, [fp, #-16]
   12334:	str	r1, [fp, #-20]	; 0xffffffec
   12338:	str	r2, [fp, #-24]	; 0xffffffe8
   1233c:	mov	r0, #168	; 0xa8
   12340:	bl	11484 <rb_base64_encode@plt+0x50c>
   12344:	str	r0, [fp, #-8]
   12348:	ldr	r3, [fp, #-8]
   1234c:	ldr	r2, [fp, #-16]
   12350:	str	r2, [r3, #12]
   12354:	ldr	r3, [fp, #-8]
   12358:	ldr	r2, [fp, #-20]	; 0xffffffec
   1235c:	str	r2, [r3, #84]	; 0x54
   12360:	ldr	r3, [fp, #-8]
   12364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12368:	str	r2, [r3, #88]	; 0x58
   1236c:	ldr	r3, [fp, #-8]
   12370:	mvn	r2, #0
   12374:	str	r2, [r3, #80]	; 0x50
   12378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1237c:	bl	10d98 <rb_set_nb@plt>
   12380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12384:	bl	10d98 <rb_set_nb@plt>
   12388:	ldr	r3, [fp, #-8]
   1238c:	add	r3, r3, #52	; 0x34
   12390:	mov	r0, r3
   12394:	bl	10f18 <rb_linebuf_newbuf@plt>
   12398:	ldr	r3, [fp, #-8]
   1239c:	add	r3, r3, #24
   123a0:	mov	r0, r3
   123a4:	bl	10f18 <rb_linebuf_newbuf@plt>
   123a8:	bl	10ee8 <rb_new_rawbuffer@plt>
   123ac:	mov	r2, r0
   123b0:	ldr	r3, [fp, #-8]
   123b4:	str	r2, [r3, #20]
   123b8:	bl	10ee8 <rb_new_rawbuffer@plt>
   123bc:	mov	r2, r0
   123c0:	ldr	r3, [fp, #-8]
   123c4:	str	r2, [r3, #16]
   123c8:	ldr	r3, [fp, #-8]
   123cc:	mov	r0, r3
   123d0:	sub	sp, fp, #4
   123d4:	pop	{fp, pc}
   123d8:	push	{fp, lr}
   123dc:	add	fp, sp, #4
   123e0:	sub	sp, sp, #16
   123e4:	str	r0, [fp, #-16]
   123e8:	str	r1, [fp, #-20]	; 0xffffffec
   123ec:	mov	r3, #0
   123f0:	str	r3, [fp, #-8]
   123f4:	b	12424 <rb_base64_encode@plt+0x14ac>
   123f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   123fc:	ldr	r3, [fp, #-8]
   12400:	add	r3, r3, #4
   12404:	lsl	r3, r3, #2
   12408:	add	r3, r2, r3
   1240c:	ldr	r3, [r3, #4]
   12410:	mov	r0, r3
   12414:	bl	10e64 <rb_close@plt>
   12418:	ldr	r3, [fp, #-8]
   1241c:	add	r3, r3, #1
   12420:	str	r3, [fp, #-8]
   12424:	ldr	r3, [fp, #-20]	; 0xffffffec
   12428:	ldr	r2, [r3, #36]	; 0x24
   1242c:	ldr	r3, [fp, #-8]
   12430:	cmp	r2, r3
   12434:	bgt	123f8 <rb_base64_encode@plt+0x1480>
   12438:	nop			; (mov r0, r0)
   1243c:	sub	sp, fp, #4
   12440:	pop	{fp, pc}
   12444:	push	{fp}		; (str fp, [sp, #-4]!)
   12448:	add	fp, sp, #0
   1244c:	sub	sp, sp, #28
   12450:	str	r0, [fp, #-16]
   12454:	str	r1, [fp, #-20]	; 0xffffffec
   12458:	str	r2, [fp, #-24]	; 0xffffffe8
   1245c:	mov	r3, #0
   12460:	str	r3, [fp, #-8]
   12464:	b	124c4 <rb_base64_encode@plt+0x154c>
   12468:	ldr	r3, [fp, #-8]
   1246c:	ldr	r2, [fp, #-16]
   12470:	add	r1, r2, r3
   12474:	ldr	r3, [fp, #-8]
   12478:	ldr	r2, [fp, #-16]
   1247c:	add	r3, r2, r3
   12480:	ldrb	r0, [r3]
   12484:	ldr	r2, [fp, #-8]
   12488:	asr	r3, r2, #31
   1248c:	lsr	r3, r3, #30
   12490:	add	r2, r2, r3
   12494:	and	r2, r2, #3
   12498:	sub	r3, r2, r3
   1249c:	mov	r2, r3
   124a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124a4:	add	r3, r3, r2
   124a8:	ldrb	r3, [r3]
   124ac:	eor	r3, r3, r0
   124b0:	uxtb	r3, r3
   124b4:	strb	r3, [r1]
   124b8:	ldr	r3, [fp, #-8]
   124bc:	add	r3, r3, #1
   124c0:	str	r3, [fp, #-8]
   124c4:	ldr	r2, [fp, #-8]
   124c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124cc:	cmp	r2, r3
   124d0:	blt	12468 <rb_base64_encode@plt+0x14f0>
   124d4:	nop			; (mov r0, r0)
   124d8:	add	sp, fp, #0
   124dc:	pop	{fp}		; (ldr fp, [sp], #4)
   124e0:	bx	lr
   124e4:	push	{fp, lr}
   124e8:	add	fp, sp, #4
   124ec:	sub	sp, sp, #152	; 0x98
   124f0:	str	r0, [fp, #-144]	; 0xffffff70
   124f4:	str	r1, [fp, #-148]	; 0xffffff6c
   124f8:	str	r2, [fp, #-152]	; 0xffffff68
   124fc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12500:	cmp	r3, #0
   12504:	beq	1254c <rb_base64_encode@plt+0x15d4>
   12508:	ldr	r3, [fp, #-144]	; 0xffffff70
   1250c:	ldr	r3, [r3, #20]
   12510:	sub	r1, fp, #140	; 0x8c
   12514:	mov	r2, #4
   12518:	mov	r0, r3
   1251c:	bl	10ec4 <rb_rawbuf_get@plt>
   12520:	str	r0, [fp, #-8]
   12524:	ldr	r3, [fp, #-8]
   12528:	cmp	r3, #0
   1252c:	bne	1254c <rb_base64_encode@plt+0x15d4>
   12530:	ldr	r3, [pc, #160]	; 125d8 <rb_base64_encode@plt+0x1660>
   12534:	add	r3, pc, r3
   12538:	mov	r2, r3
   1253c:	mov	r1, #1
   12540:	ldr	r0, [fp, #-144]	; 0xffffff70
   12544:	bl	1210c <rb_base64_encode@plt+0x1194>
   12548:	b	125d0 <rb_base64_encode@plt+0x1658>
   1254c:	ldr	r3, [fp, #-144]	; 0xffffff70
   12550:	ldr	r0, [r3, #20]
   12554:	ldr	r3, [fp, #-148]	; 0xffffff6c
   12558:	ldrb	r3, [r3, #1]
   1255c:	mov	r2, r3
   12560:	sub	r3, fp, #136	; 0x88
   12564:	mov	r1, r3
   12568:	bl	10ec4 <rb_rawbuf_get@plt>
   1256c:	str	r0, [fp, #-8]
   12570:	ldr	r3, [fp, #-8]
   12574:	cmp	r3, #0
   12578:	bne	12598 <rb_base64_encode@plt+0x1620>
   1257c:	ldr	r3, [pc, #88]	; 125dc <rb_base64_encode@plt+0x1664>
   12580:	add	r3, pc, r3
   12584:	mov	r2, r3
   12588:	mov	r1, #1
   1258c:	ldr	r0, [fp, #-144]	; 0xffffff70
   12590:	bl	1210c <rb_base64_encode@plt+0x1194>
   12594:	b	125d0 <rb_base64_encode@plt+0x1658>
   12598:	ldr	r3, [fp, #-152]	; 0xffffff68
   1259c:	cmp	r3, #0
   125a0:	beq	125b8 <rb_base64_encode@plt+0x1640>
   125a4:	sub	r2, fp, #140	; 0x8c
   125a8:	sub	r3, fp, #136	; 0x88
   125ac:	ldr	r1, [fp, #-8]
   125b0:	mov	r0, r3
   125b4:	bl	12444 <rb_base64_encode@plt+0x14cc>
   125b8:	ldr	r3, [fp, #-144]	; 0xffffff70
   125bc:	add	r0, r3, #24
   125c0:	sub	r1, fp, #136	; 0x88
   125c4:	mov	r3, #1
   125c8:	ldr	r2, [fp, #-8]
   125cc:	bl	10dbc <rb_linebuf_parse@plt>
   125d0:	sub	sp, fp, #4
   125d4:	pop	{fp, pc}
   125d8:	strdeq	r3, [r0], -r0
   125dc:	ldrdeq	r3, [r0], -r0
   125e0:	push	{fp, lr}
   125e4:	add	fp, sp, #4
   125e8:	sub	sp, sp, #16384	; 0x4000
   125ec:	sub	sp, sp, #32
   125f0:	sub	r3, fp, #16384	; 0x4000
   125f4:	sub	r3, r3, #4
   125f8:	str	r0, [r3, #-20]	; 0xffffffec
   125fc:	sub	r3, fp, #16384	; 0x4000
   12600:	sub	r3, r3, #4
   12604:	str	r1, [r3, #-24]	; 0xffffffe8
   12608:	sub	r3, fp, #16384	; 0x4000
   1260c:	sub	r3, r3, #4
   12610:	str	r2, [r3, #-28]	; 0xffffffe4
   12614:	sub	r3, fp, #16384	; 0x4000
   12618:	sub	r3, r3, #4
   1261c:	sub	r3, r3, #4
   12620:	mov	r2, #16384	; 0x4000
   12624:	mov	r1, #0
   12628:	mov	r0, r3
   1262c:	bl	10da4 <memset@plt>
   12630:	sub	r3, fp, #16384	; 0x4000
   12634:	sub	r3, r3, #4
   12638:	ldr	r3, [r3, #-20]	; 0xffffffec
   1263c:	ldr	r0, [r3, #20]
   12640:	sub	r3, fp, #16384	; 0x4000
   12644:	sub	r3, r3, #4
   12648:	sub	r3, r3, #6
   1264c:	mov	r2, #2
   12650:	mov	r1, r3
   12654:	bl	10ec4 <rb_rawbuf_get@plt>
   12658:	str	r0, [fp, #-8]
   1265c:	ldr	r3, [fp, #-8]
   12660:	cmp	r3, #0
   12664:	bne	12688 <rb_base64_encode@plt+0x1710>
   12668:	sub	r3, fp, #16384	; 0x4000
   1266c:	sub	r3, r3, #4
   12670:	ldr	r2, [pc, #368]	; 127e8 <rb_base64_encode@plt+0x1870>
   12674:	add	r2, pc, r2
   12678:	mov	r1, #1
   1267c:	ldr	r0, [r3, #-20]	; 0xffffffec
   12680:	bl	1210c <rb_base64_encode@plt+0x1194>
   12684:	b	127e0 <rb_base64_encode@plt+0x1868>
   12688:	sub	r3, fp, #16384	; 0x4000
   1268c:	sub	r3, r3, #4
   12690:	ldrh	r3, [r3, #-6]
   12694:	mov	r0, r3
   12698:	bl	10e1c <ntohs@plt>
   1269c:	mov	r3, r0
   126a0:	mov	r2, r3
   126a4:	sub	r3, fp, #16384	; 0x4000
   126a8:	sub	r3, r3, #4
   126ac:	strh	r2, [r3, #-6]
   126b0:	sub	r3, fp, #16384	; 0x4000
   126b4:	sub	r3, r3, #4
   126b8:	ldr	r3, [r3, #-28]	; 0xffffffe4
   126bc:	cmp	r3, #0
   126c0:	beq	1271c <rb_base64_encode@plt+0x17a4>
   126c4:	sub	r3, fp, #16384	; 0x4000
   126c8:	sub	r3, r3, #4
   126cc:	ldr	r3, [r3, #-20]	; 0xffffffec
   126d0:	ldr	r0, [r3, #20]
   126d4:	sub	r3, fp, #16384	; 0x4000
   126d8:	sub	r3, r3, #4
   126dc:	sub	r3, r3, #12
   126e0:	mov	r2, #4
   126e4:	mov	r1, r3
   126e8:	bl	10ec4 <rb_rawbuf_get@plt>
   126ec:	str	r0, [fp, #-8]
   126f0:	ldr	r3, [fp, #-8]
   126f4:	cmp	r3, #0
   126f8:	bne	1271c <rb_base64_encode@plt+0x17a4>
   126fc:	sub	r3, fp, #16384	; 0x4000
   12700:	sub	r3, r3, #4
   12704:	ldr	r2, [pc, #224]	; 127ec <rb_base64_encode@plt+0x1874>
   12708:	add	r2, pc, r2
   1270c:	mov	r1, #1
   12710:	ldr	r0, [r3, #-20]	; 0xffffffec
   12714:	bl	1210c <rb_base64_encode@plt+0x1194>
   12718:	b	127e0 <rb_base64_encode@plt+0x1868>
   1271c:	sub	r3, fp, #16384	; 0x4000
   12720:	sub	r3, r3, #4
   12724:	ldr	r3, [r3, #-20]	; 0xffffffec
   12728:	ldr	r0, [r3, #20]
   1272c:	sub	r3, fp, #16384	; 0x4000
   12730:	sub	r3, r3, #4
   12734:	ldrh	r3, [r3, #-6]
   12738:	mov	r2, r3
   1273c:	sub	r3, fp, #16384	; 0x4000
   12740:	sub	r3, r3, #4
   12744:	sub	r3, r3, #4
   12748:	mov	r1, r3
   1274c:	bl	10ec4 <rb_rawbuf_get@plt>
   12750:	str	r0, [fp, #-8]
   12754:	ldr	r3, [fp, #-8]
   12758:	cmp	r3, #0
   1275c:	bne	12780 <rb_base64_encode@plt+0x1808>
   12760:	sub	r3, fp, #16384	; 0x4000
   12764:	sub	r3, r3, #4
   12768:	ldr	r2, [pc, #128]	; 127f0 <rb_base64_encode@plt+0x1878>
   1276c:	add	r2, pc, r2
   12770:	mov	r1, #1
   12774:	ldr	r0, [r3, #-20]	; 0xffffffec
   12778:	bl	1210c <rb_base64_encode@plt+0x1194>
   1277c:	b	127e0 <rb_base64_encode@plt+0x1868>
   12780:	sub	r3, fp, #16384	; 0x4000
   12784:	sub	r3, r3, #4
   12788:	ldr	r3, [r3, #-28]	; 0xffffffe4
   1278c:	cmp	r3, #0
   12790:	beq	127b8 <rb_base64_encode@plt+0x1840>
   12794:	sub	r2, fp, #16384	; 0x4000
   12798:	sub	r2, r2, #4
   1279c:	sub	r2, r2, #12
   127a0:	sub	r3, fp, #16384	; 0x4000
   127a4:	sub	r3, r3, #4
   127a8:	sub	r3, r3, #4
   127ac:	ldr	r1, [fp, #-8]
   127b0:	mov	r0, r3
   127b4:	bl	12444 <rb_base64_encode@plt+0x14cc>
   127b8:	sub	r3, fp, #16384	; 0x4000
   127bc:	sub	r3, r3, #4
   127c0:	ldr	r3, [r3, #-20]	; 0xffffffec
   127c4:	add	r0, r3, #24
   127c8:	sub	r1, fp, #16384	; 0x4000
   127cc:	sub	r1, r1, #4
   127d0:	sub	r1, r1, #4
   127d4:	mov	r3, #1
   127d8:	ldr	r2, [fp, #-8]
   127dc:	bl	10dbc <rb_linebuf_parse@plt>
   127e0:	sub	sp, fp, #4
   127e4:	pop	{fp, pc}
   127e8:	andeq	r3, r0, r8, lsl #26
   127ec:	andeq	r3, r0, ip, lsl ip
   127f0:	andeq	r3, r0, r4, ror #23
   127f4:	push	{fp}		; (str fp, [sp, #-4]!)
   127f8:	add	fp, sp, #0
   127fc:	sub	sp, sp, #20
   12800:	str	r0, [fp, #-8]
   12804:	str	r1, [fp, #-12]
   12808:	str	r2, [fp, #-16]
   1280c:	nop			; (mov r0, r0)
   12810:	add	sp, fp, #0
   12814:	pop	{fp}		; (ldr fp, [sp], #4)
   12818:	bx	lr
   1281c:	push	{fp, lr}
   12820:	add	fp, sp, #4
   12824:	sub	sp, sp, #24
   12828:	str	r0, [fp, #-24]	; 0xffffffe8
   1282c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12830:	ldr	r3, [r3, #20]
   12834:	sub	r1, fp, #16
   12838:	mov	r2, #2
   1283c:	mov	r0, r3
   12840:	bl	10ec4 <rb_rawbuf_get@plt>
   12844:	str	r0, [fp, #-8]
   12848:	ldr	r3, [fp, #-8]
   1284c:	cmp	r3, #2
   12850:	bne	128e8 <rb_base64_encode@plt+0x1970>
   12854:	ldrb	r3, [fp, #-15]
   12858:	lsr	r3, r3, #7
   1285c:	uxtb	r3, r3
   12860:	cmp	r3, #1
   12864:	moveq	r3, #1
   12868:	movne	r3, #0
   1286c:	uxtb	r3, r3
   12870:	str	r3, [fp, #-12]
   12874:	ldrb	r3, [fp, #-15]
   12878:	and	r3, r3, #127	; 0x7f
   1287c:	uxtb	r3, r3
   12880:	strb	r3, [fp, #-15]
   12884:	ldrb	r3, [fp, #-15]
   12888:	cmp	r3, #126	; 0x7e
   1288c:	beq	1289c <rb_base64_encode@plt+0x1924>
   12890:	cmp	r3, #127	; 0x7f
   12894:	beq	128b4 <rb_base64_encode@plt+0x193c>
   12898:	b	128cc <rb_base64_encode@plt+0x1954>
   1289c:	sub	r3, fp, #16
   128a0:	ldr	r2, [fp, #-12]
   128a4:	mov	r1, r3
   128a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128ac:	bl	125e0 <rb_base64_encode@plt+0x1668>
   128b0:	b	128e4 <rb_base64_encode@plt+0x196c>
   128b4:	sub	r3, fp, #16
   128b8:	ldr	r2, [fp, #-12]
   128bc:	mov	r1, r3
   128c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128c4:	bl	127f4 <rb_base64_encode@plt+0x187c>
   128c8:	b	128e4 <rb_base64_encode@plt+0x196c>
   128cc:	sub	r3, fp, #16
   128d0:	ldr	r2, [fp, #-12]
   128d4:	mov	r1, r3
   128d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128dc:	bl	124e4 <rb_base64_encode@plt+0x156c>
   128e0:	nop			; (mov r0, r0)
   128e4:	b	1282c <rb_base64_encode@plt+0x18b4>
   128e8:	nop			; (mov r0, r0)
   128ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128f0:	ldr	r3, [r3, #88]	; 0x58
   128f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   128f8:	mov	r0, r3
   128fc:	bl	1194c <rb_base64_encode@plt+0x9d4>
   12900:	nop			; (mov r0, r0)
   12904:	sub	sp, fp, #4
   12908:	pop	{fp, pc}
   1290c:	push	{r4, fp, lr}
   12910:	add	fp, sp, #8
   12914:	sub	sp, sp, #16384	; 0x4000
   12918:	sub	sp, sp, #148	; 0x94
   1291c:	sub	r3, fp, #16384	; 0x4000
   12920:	sub	r3, r3, #12
   12924:	str	r0, [r3, #-140]	; 0xffffff74
   12928:	sub	r3, fp, #16384	; 0x4000
   1292c:	sub	r3, r3, #12
   12930:	sub	r3, r3, #20
   12934:	mov	r2, #16384	; 0x4000
   12938:	mov	r1, #0
   1293c:	mov	r0, r3
   12940:	bl	10da4 <memset@plt>
   12944:	mov	r3, #0
   12948:	str	r3, [fp, #-24]	; 0xffffffe8
   1294c:	sub	r3, fp, #16384	; 0x4000
   12950:	sub	r3, r3, #12
   12954:	ldr	r3, [r3, #-140]	; 0xffffff74
   12958:	ldr	r0, [r3, #20]
   1295c:	sub	r3, fp, #16384	; 0x4000
   12960:	sub	r3, r3, #12
   12964:	sub	r3, r3, #20
   12968:	mov	r2, #16384	; 0x4000
   1296c:	mov	r1, r3
   12970:	bl	10ec4 <rb_rawbuf_get@plt>
   12974:	str	r0, [fp, #-28]	; 0xffffffe4
   12978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1297c:	cmp	r3, #0
   12980:	beq	12ae4 <rb_base64_encode@plt+0x1b6c>
   12984:	sub	r3, fp, #16384	; 0x4000
   12988:	sub	r3, r3, #12
   1298c:	sub	r3, r3, #20
   12990:	ldr	r2, [pc, #692]	; 12c4c <rb_base64_encode@plt+0x1cd4>
   12994:	add	r2, pc, r2
   12998:	mov	r1, r2
   1299c:	mov	r0, r3
   129a0:	bl	10e58 <rb_strcasestr@plt>
   129a4:	str	r0, [fp, #-24]	; 0xffffffe8
   129a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129ac:	cmp	r3, #0
   129b0:	beq	12944 <rb_base64_encode@plt+0x19cc>
   129b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129b8:	add	r3, r3, #18
   129bc:	str	r3, [fp, #-16]
   129c0:	b	129f0 <rb_base64_encode@plt+0x1a78>
   129c4:	ldr	r3, [fp, #-16]
   129c8:	ldrb	r3, [r3]
   129cc:	cmp	r3, #32
   129d0:	beq	129e4 <rb_base64_encode@plt+0x1a6c>
   129d4:	ldr	r3, [fp, #-16]
   129d8:	ldrb	r3, [r3]
   129dc:	cmp	r3, #9
   129e0:	bne	12a20 <rb_base64_encode@plt+0x1aa8>
   129e4:	ldr	r3, [fp, #-16]
   129e8:	add	r3, r3, #1
   129ec:	str	r3, [fp, #-16]
   129f0:	sub	r3, fp, #16384	; 0x4000
   129f4:	sub	r3, r3, #12
   129f8:	sub	r3, r3, #20
   129fc:	add	r3, r3, #16384	; 0x4000
   12a00:	ldr	r2, [fp, #-16]
   12a04:	cmp	r3, r2
   12a08:	bls	12a24 <rb_base64_encode@plt+0x1aac>
   12a0c:	ldr	r3, [fp, #-16]
   12a10:	ldrb	r3, [r3]
   12a14:	cmp	r3, #0
   12a18:	bne	129c4 <rb_base64_encode@plt+0x1a4c>
   12a1c:	b	12a24 <rb_base64_encode@plt+0x1aac>
   12a20:	nop			; (mov r0, r0)
   12a24:	ldr	r3, [fp, #-16]
   12a28:	str	r3, [fp, #-20]	; 0xffffffec
   12a2c:	b	12a6c <rb_base64_encode@plt+0x1af4>
   12a30:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a34:	ldrb	r3, [r3]
   12a38:	cmp	r3, #13
   12a3c:	beq	12a50 <rb_base64_encode@plt+0x1ad8>
   12a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a44:	ldrb	r3, [r3]
   12a48:	cmp	r3, #10
   12a4c:	bne	12a60 <rb_base64_encode@plt+0x1ae8>
   12a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a54:	mov	r2, #0
   12a58:	strb	r2, [r3]
   12a5c:	b	12a98 <rb_base64_encode@plt+0x1b20>
   12a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a64:	add	r3, r3, #1
   12a68:	str	r3, [fp, #-20]	; 0xffffffec
   12a6c:	sub	r3, fp, #16384	; 0x4000
   12a70:	sub	r3, r3, #12
   12a74:	sub	r3, r3, #20
   12a78:	add	r3, r3, #16384	; 0x4000
   12a7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a80:	cmp	r3, r2
   12a84:	bls	12a98 <rb_base64_encode@plt+0x1b20>
   12a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a8c:	ldrb	r3, [r3]
   12a90:	cmp	r3, #0
   12a94:	bne	12a30 <rb_base64_encode@plt+0x1ab8>
   12a98:	sub	r3, fp, #16384	; 0x4000
   12a9c:	sub	r3, r3, #12
   12aa0:	ldr	r3, [r3, #-140]	; 0xffffff74
   12aa4:	add	r3, r3, #129	; 0x81
   12aa8:	mov	r2, #37	; 0x25
   12aac:	ldr	r1, [fp, #-16]
   12ab0:	mov	r0, r3
   12ab4:	bl	10dc8 <rb_strlcpy@plt>
   12ab8:	sub	r3, fp, #16384	; 0x4000
   12abc:	sub	r3, r3, #12
   12ac0:	ldr	r3, [r3, #-140]	; 0xffffff74
   12ac4:	ldrb	r3, [r3, #128]	; 0x80
   12ac8:	orr	r3, r3, #8
   12acc:	uxtb	r2, r3
   12ad0:	sub	r3, fp, #16384	; 0x4000
   12ad4:	sub	r3, r3, #12
   12ad8:	ldr	r3, [r3, #-140]	; 0xffffff74
   12adc:	strb	r2, [r3, #128]	; 0x80
   12ae0:	b	12944 <rb_base64_encode@plt+0x19cc>
   12ae4:	nop			; (mov r0, r0)
   12ae8:	sub	r3, fp, #16384	; 0x4000
   12aec:	sub	r3, r3, #12
   12af0:	ldr	r3, [r3, #-140]	; 0xffffff74
   12af4:	ldrb	r3, [r3, #128]	; 0x80
   12af8:	and	r3, r3, #8
   12afc:	cmp	r3, #0
   12b00:	beq	12c1c <rb_base64_encode@plt+0x1ca4>
   12b04:	sub	r3, fp, #16384	; 0x4000
   12b08:	sub	r3, r3, #12
   12b0c:	sub	r3, r3, #136	; 0x88
   12b10:	mov	r0, r3
   12b14:	bl	15f0c <rb_base64_encode@plt+0x4f94>
   12b18:	sub	r3, fp, #16384	; 0x4000
   12b1c:	sub	r3, r3, #12
   12b20:	ldr	r3, [r3, #-140]	; 0xffffff74
   12b24:	add	r4, r3, #129	; 0x81
   12b28:	sub	r3, fp, #16384	; 0x4000
   12b2c:	sub	r3, r3, #12
   12b30:	ldr	r3, [r3, #-140]	; 0xffffff74
   12b34:	add	r3, r3, #129	; 0x81
   12b38:	mov	r0, r3
   12b3c:	bl	10e34 <strlen@plt>
   12b40:	mov	r2, r0
   12b44:	sub	r3, fp, #16384	; 0x4000
   12b48:	sub	r3, r3, #12
   12b4c:	sub	r3, r3, #136	; 0x88
   12b50:	mov	r1, r4
   12b54:	mov	r0, r3
   12b58:	bl	15f8c <rb_base64_encode@plt+0x5014>
   12b5c:	sub	r3, fp, #16384	; 0x4000
   12b60:	sub	r3, r3, #12
   12b64:	sub	r3, r3, #136	; 0x88
   12b68:	mov	r2, #36	; 0x24
   12b6c:	ldr	r1, [pc, #220]	; 12c50 <rb_base64_encode@plt+0x1cd8>
   12b70:	add	r1, pc, r1
   12b74:	mov	r0, r3
   12b78:	bl	15f8c <rb_base64_encode@plt+0x5014>
   12b7c:	sub	r2, fp, #16384	; 0x4000
   12b80:	sub	r2, r2, #12
   12b84:	sub	r2, r2, #40	; 0x28
   12b88:	sub	r3, fp, #16384	; 0x4000
   12b8c:	sub	r3, r3, #12
   12b90:	sub	r3, r3, #136	; 0x88
   12b94:	mov	r1, r2
   12b98:	mov	r0, r3
   12b9c:	bl	160cc <rb_base64_encode@plt+0x5154>
   12ba0:	sub	r3, fp, #16384	; 0x4000
   12ba4:	sub	r3, r3, #12
   12ba8:	sub	r3, r3, #40	; 0x28
   12bac:	mov	r1, #20
   12bb0:	mov	r0, r3
   12bb4:	bl	10f78 <rb_base64_encode@plt>
   12bb8:	str	r0, [fp, #-32]	; 0xffffffe0
   12bbc:	sub	r3, fp, #16384	; 0x4000
   12bc0:	sub	r3, r3, #12
   12bc4:	mov	r2, #129	; 0x81
   12bc8:	ldr	r1, [pc, #132]	; 12c54 <rb_base64_encode@plt+0x1cdc>
   12bcc:	add	r1, pc, r1
   12bd0:	ldr	r0, [r3, #-140]	; 0xffffff74
   12bd4:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   12bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bdc:	bl	10e34 <strlen@plt>
   12be0:	mov	r2, r0
   12be4:	sub	r3, fp, #16384	; 0x4000
   12be8:	sub	r3, r3, #12
   12bec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12bf0:	ldr	r0, [r3, #-140]	; 0xffffff74
   12bf4:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   12bf8:	sub	r3, fp, #16384	; 0x4000
   12bfc:	sub	r3, r3, #12
   12c00:	mov	r2, #4
   12c04:	ldr	r1, [pc, #76]	; 12c58 <rb_base64_encode@plt+0x1ce0>
   12c08:	add	r1, pc, r1
   12c0c:	ldr	r0, [r3, #-140]	; 0xffffff74
   12c10:	bl	11c54 <rb_base64_encode@plt+0xcdc>
   12c14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c18:	bl	114d8 <rb_base64_encode@plt+0x560>
   12c1c:	sub	r3, fp, #16384	; 0x4000
   12c20:	sub	r3, r3, #12
   12c24:	ldr	r3, [r3, #-140]	; 0xffffff74
   12c28:	ldr	r3, [r3, #84]	; 0x54
   12c2c:	sub	r2, fp, #16384	; 0x4000
   12c30:	sub	r2, r2, #12
   12c34:	ldr	r1, [r2, #-140]	; 0xffffff74
   12c38:	mov	r0, r3
   12c3c:	bl	11a70 <rb_base64_encode@plt+0xaf8>
   12c40:	nop			; (mov r0, r0)
   12c44:	sub	sp, fp, #8
   12c48:	pop	{r4, fp, pc}
   12c4c:	andeq	r3, r0, r8, lsl sl
   12c50:	andeq	r3, r0, r0, asr r8
   12c54:	andeq	r3, r0, ip, lsl r8
   12c58:	andeq	r3, r0, r4, ror #16
   12c5c:	push	{fp, lr}
   12c60:	add	fp, sp, #4
   12c64:	sub	sp, sp, #16384	; 0x4000
   12c68:	sub	sp, sp, #16
   12c6c:	sub	r3, fp, #16384	; 0x4000
   12c70:	sub	r3, r3, #4
   12c74:	str	r0, [r3, #-12]
   12c78:	sub	r3, fp, #16384	; 0x4000
   12c7c:	sub	r3, r3, #4
   12c80:	str	r1, [r3, #-16]
   12c84:	sub	r3, fp, #16384	; 0x4000
   12c88:	sub	r3, r3, #4
   12c8c:	sub	r3, r3, #8
   12c90:	mov	r2, #16384	; 0x4000
   12c94:	mov	r1, #0
   12c98:	mov	r0, r3
   12c9c:	bl	10da4 <memset@plt>
   12ca0:	sub	r3, fp, #16384	; 0x4000
   12ca4:	sub	r3, r3, #4
   12ca8:	ldr	r3, [r3, #-16]
   12cac:	str	r3, [fp, #-8]
   12cb0:	mov	r3, #0
   12cb4:	str	r3, [fp, #-12]
   12cb8:	ldr	r3, [fp, #-8]
   12cbc:	cmp	r3, #0
   12cc0:	beq	12e40 <rb_base64_encode@plt+0x1ec8>
   12cc4:	ldr	r3, [fp, #-8]
   12cc8:	ldrb	r3, [r3, #128]	; 0x80
   12ccc:	and	r3, r3, #2
   12cd0:	cmp	r3, #0
   12cd4:	bne	12e48 <rb_base64_encode@plt+0x1ed0>
   12cd8:	ldr	r3, [fp, #-8]
   12cdc:	ldrb	r3, [r3, #128]	; 0x80
   12ce0:	and	r3, r3, #2
   12ce4:	cmp	r3, #0
   12ce8:	bne	12e50 <rb_base64_encode@plt+0x1ed8>
   12cec:	sub	r3, fp, #16384	; 0x4000
   12cf0:	sub	r3, r3, #4
   12cf4:	sub	r3, r3, #8
   12cf8:	sub	r2, fp, #16384	; 0x4000
   12cfc:	sub	r2, r2, #4
   12d00:	mov	r0, r2
   12d04:	mov	r2, #16384	; 0x4000
   12d08:	mov	r1, r3
   12d0c:	ldr	r0, [r0, #-12]
   12d10:	bl	10df8 <rb_read@plt>
   12d14:	str	r0, [fp, #-12]
   12d18:	ldr	r3, [fp, #-12]
   12d1c:	cmp	r3, #0
   12d20:	bge	12d9c <rb_base64_encode@plt+0x1e24>
   12d24:	bl	10f6c <__errno_location@plt>
   12d28:	mov	r3, r0
   12d2c:	ldr	r3, [r3]
   12d30:	mov	r0, r3
   12d34:	bl	10d2c <rb_ignore_errno@plt>
   12d38:	mov	r3, r0
   12d3c:	cmp	r3, #0
   12d40:	beq	12d80 <rb_base64_encode@plt+0x1e08>
   12d44:	sub	r3, fp, #16384	; 0x4000
   12d48:	sub	r3, r3, #4
   12d4c:	mov	r0, r3
   12d50:	ldr	r3, [fp, #-8]
   12d54:	ldr	r2, [pc, #256]	; 12e5c <rb_base64_encode@plt+0x1ee4>
   12d58:	add	r2, pc, r2
   12d5c:	mov	r1, #1
   12d60:	ldr	r0, [r0, #-12]
   12d64:	bl	10d44 <rb_setselect@plt>
   12d68:	ldr	r3, [fp, #-8]
   12d6c:	ldr	r3, [r3, #88]	; 0x58
   12d70:	ldr	r1, [fp, #-8]
   12d74:	mov	r0, r3
   12d78:	bl	1194c <rb_base64_encode@plt+0x9d4>
   12d7c:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12d80:	ldr	r3, [pc, #216]	; 12e60 <rb_base64_encode@plt+0x1ee8>
   12d84:	add	r3, pc, r3
   12d88:	mov	r2, r3
   12d8c:	mov	r1, #0
   12d90:	ldr	r0, [fp, #-8]
   12d94:	bl	1210c <rb_base64_encode@plt+0x1194>
   12d98:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12d9c:	ldr	r3, [fp, #-12]
   12da0:	cmp	r3, #0
   12da4:	bne	12dc4 <rb_base64_encode@plt+0x1e4c>
   12da8:	ldr	r3, [pc, #180]	; 12e64 <rb_base64_encode@plt+0x1eec>
   12dac:	add	r3, pc, r3
   12db0:	mov	r2, r3
   12db4:	mov	r1, #0
   12db8:	ldr	r0, [fp, #-8]
   12dbc:	bl	1210c <rb_base64_encode@plt+0x1194>
   12dc0:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12dc4:	ldr	r3, [fp, #-8]
   12dc8:	ldr	r0, [r3, #20]
   12dcc:	sub	r3, fp, #16384	; 0x4000
   12dd0:	sub	r3, r3, #4
   12dd4:	sub	r3, r3, #8
   12dd8:	ldr	r2, [fp, #-12]
   12ddc:	mov	r1, r3
   12de0:	bl	10f48 <rb_rawbuf_append@plt>
   12de4:	ldr	r3, [fp, #-8]
   12de8:	ldrb	r3, [r3, #128]	; 0x80
   12dec:	and	r3, r3, #8
   12df0:	cmp	r3, #0
   12df4:	bne	12e04 <rb_base64_encode@plt+0x1e8c>
   12df8:	ldr	r0, [fp, #-8]
   12dfc:	bl	1290c <rb_base64_encode@plt+0x1994>
   12e00:	b	12e0c <rb_base64_encode@plt+0x1e94>
   12e04:	ldr	r0, [fp, #-8]
   12e08:	bl	1281c <rb_base64_encode@plt+0x18a4>
   12e0c:	ldr	r3, [fp, #-12]
   12e10:	cmp	r3, #16384	; 0x4000
   12e14:	bcs	12cd8 <rb_base64_encode@plt+0x1d60>
   12e18:	sub	r3, fp, #16384	; 0x4000
   12e1c:	sub	r3, r3, #4
   12e20:	mov	r0, r3
   12e24:	ldr	r3, [fp, #-8]
   12e28:	ldr	r2, [pc, #56]	; 12e68 <rb_base64_encode@plt+0x1ef0>
   12e2c:	add	r2, pc, r2
   12e30:	mov	r1, #1
   12e34:	ldr	r0, [r0, #-12]
   12e38:	bl	10d44 <rb_setselect@plt>
   12e3c:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12e40:	nop			; (mov r0, r0)
   12e44:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12e48:	nop			; (mov r0, r0)
   12e4c:	b	12e54 <rb_base64_encode@plt+0x1edc>
   12e50:	nop			; (mov r0, r0)
   12e54:	sub	sp, fp, #4
   12e58:	pop	{fp, pc}
   12e5c:			; <UNDEFINED> instruction: 0xfffffefc
   12e60:	strdeq	r3, [r0], -r0
   12e64:	andeq	r3, r0, r8, asr #13
   12e68:			; <UNDEFINED> instruction: 0xfffffe28
   12e6c:	push	{fp, lr}
   12e70:	add	fp, sp, #4
   12e74:	sub	sp, sp, #8
   12e78:	str	r0, [fp, #-8]
   12e7c:	ldr	r3, [fp, #-8]
   12e80:	ldr	r3, [r3, #16]
   12e84:	mov	r0, r3
   12e88:	bl	10e88 <rb_rawbuf_length@plt>
   12e8c:	mov	r3, r0
   12e90:	cmp	r3, #4096	; 0x1000
   12e94:	blt	12ef8 <rb_base64_encode@plt+0x1f80>
   12e98:	ldr	r3, [fp, #-8]
   12e9c:	ldrb	r3, [r3, #128]	; 0x80
   12ea0:	orr	r3, r3, #1
   12ea4:	uxtb	r2, r3
   12ea8:	ldr	r3, [fp, #-8]
   12eac:	strb	r2, [r3, #128]	; 0x80
   12eb0:	ldr	r3, [fp, #-8]
   12eb4:	ldr	r0, [r3, #88]	; 0x58
   12eb8:	mov	r3, #0
   12ebc:	mov	r2, #0
   12ec0:	mov	r1, #1
   12ec4:	bl	10d44 <rb_setselect@plt>
   12ec8:	ldr	r3, [fp, #-8]
   12ecc:	ldrb	r3, [r3, #128]	; 0x80
   12ed0:	and	r3, r3, #8
   12ed4:	cmp	r3, #0
   12ed8:	beq	12ef0 <rb_base64_encode@plt+0x1f78>
   12edc:	ldr	r3, [fp, #-8]
   12ee0:	ldr	r3, [r3, #84]	; 0x54
   12ee4:	ldr	r1, [fp, #-8]
   12ee8:	mov	r0, r3
   12eec:	bl	11a70 <rb_base64_encode@plt+0xaf8>
   12ef0:	mov	r3, #1
   12ef4:	b	12efc <rb_base64_encode@plt+0x1f84>
   12ef8:	mov	r3, #0
   12efc:	mov	r0, r3
   12f00:	sub	sp, fp, #4
   12f04:	pop	{fp, pc}
   12f08:	push	{fp, lr}
   12f0c:	add	fp, sp, #4
   12f10:	sub	sp, sp, #16384	; 0x4000
   12f14:	sub	sp, sp, #24
   12f18:	sub	r3, fp, #16384	; 0x4000
   12f1c:	sub	r3, r3, #4
   12f20:	str	r0, [r3, #-12]
   12f24:	sub	r3, fp, #16384	; 0x4000
   12f28:	sub	r3, r3, #4
   12f2c:	sub	r3, r3, #4
   12f30:	mov	r2, #16384	; 0x4000
   12f34:	mov	r1, #0
   12f38:	mov	r0, r3
   12f3c:	bl	10da4 <memset@plt>
   12f40:	sub	r3, fp, #16384	; 0x4000
   12f44:	sub	r3, r3, #4
   12f48:	ldr	r3, [r3, #-12]
   12f4c:	add	r0, r3, #52	; 0x34
   12f50:	sub	r1, fp, #16384	; 0x4000
   12f54:	sub	r1, r1, #4
   12f58:	sub	r1, r1, #4
   12f5c:	mov	r3, #0
   12f60:	str	r3, [sp]
   12f64:	mov	r3, #0
   12f68:	mov	r2, #16384	; 0x4000
   12f6c:	bl	10e10 <rb_linebuf_get@plt>
   12f70:	str	r0, [fp, #-8]
   12f74:	ldr	r3, [fp, #-8]
   12f78:	cmp	r3, #0
   12f7c:	beq	12fac <rb_base64_encode@plt+0x2034>
   12f80:	sub	r3, fp, #16384	; 0x4000
   12f84:	sub	r3, r3, #4
   12f88:	sub	r3, r3, #4
   12f8c:	sub	r2, fp, #16384	; 0x4000
   12f90:	sub	r2, r2, #4
   12f94:	mov	r0, r2
   12f98:	ldr	r2, [fp, #-8]
   12f9c:	mov	r1, r3
   12fa0:	ldr	r0, [r0, #-12]
   12fa4:	bl	11e24 <rb_base64_encode@plt+0xeac>
   12fa8:	b	12f40 <rb_base64_encode@plt+0x1fc8>
   12fac:	nop			; (mov r0, r0)
   12fb0:	sub	r3, fp, #16384	; 0x4000
   12fb4:	sub	r3, r3, #4
   12fb8:	ldr	r3, [r3, #-12]
   12fbc:	ldrb	r3, [r3, #128]	; 0x80
   12fc0:	and	r3, r3, #8
   12fc4:	cmp	r3, #0
   12fc8:	beq	12ff0 <rb_base64_encode@plt+0x2078>
   12fcc:	sub	r3, fp, #16384	; 0x4000
   12fd0:	sub	r3, r3, #4
   12fd4:	ldr	r3, [r3, #-12]
   12fd8:	ldr	r3, [r3, #84]	; 0x54
   12fdc:	sub	r2, fp, #16384	; 0x4000
   12fe0:	sub	r2, r2, #4
   12fe4:	ldr	r1, [r2, #-12]
   12fe8:	mov	r0, r3
   12fec:	bl	11a70 <rb_base64_encode@plt+0xaf8>
   12ff0:	nop			; (mov r0, r0)
   12ff4:	sub	sp, fp, #4
   12ff8:	pop	{fp, pc}
   12ffc:	push	{fp, lr}
   13000:	add	fp, sp, #4
   13004:	sub	sp, sp, #16384	; 0x4000
   13008:	sub	sp, sp, #16
   1300c:	sub	r3, fp, #16384	; 0x4000
   13010:	sub	r3, r3, #4
   13014:	str	r0, [r3, #-12]
   13018:	sub	r3, fp, #16384	; 0x4000
   1301c:	sub	r3, r3, #4
   13020:	str	r1, [r3, #-16]
   13024:	sub	r3, fp, #16384	; 0x4000
   13028:	sub	r3, r3, #4
   1302c:	sub	r3, r3, #8
   13030:	mov	r2, #16384	; 0x4000
   13034:	mov	r1, #0
   13038:	mov	r0, r3
   1303c:	bl	10da4 <memset@plt>
   13040:	sub	r3, fp, #16384	; 0x4000
   13044:	sub	r3, r3, #4
   13048:	ldr	r3, [r3, #-16]
   1304c:	str	r3, [fp, #-8]
   13050:	mov	r3, #0
   13054:	str	r3, [fp, #-12]
   13058:	ldr	r3, [fp, #-8]
   1305c:	cmp	r3, #0
   13060:	beq	131c8 <rb_base64_encode@plt+0x2250>
   13064:	ldr	r3, [fp, #-8]
   13068:	ldrb	r3, [r3, #128]	; 0x80
   1306c:	and	r3, r3, #2
   13070:	cmp	r3, #0
   13074:	bne	131d0 <rb_base64_encode@plt+0x2258>
   13078:	ldr	r0, [fp, #-8]
   1307c:	bl	12e6c <rb_base64_encode@plt+0x1ef4>
   13080:	mov	r3, r0
   13084:	cmp	r3, #0
   13088:	bne	131d8 <rb_base64_encode@plt+0x2260>
   1308c:	ldr	r3, [fp, #-8]
   13090:	ldrb	r3, [r3, #128]	; 0x80
   13094:	and	r3, r3, #2
   13098:	cmp	r3, #0
   1309c:	bne	131e0 <rb_base64_encode@plt+0x2268>
   130a0:	ldr	r3, [fp, #-8]
   130a4:	ldr	r0, [r3, #88]	; 0x58
   130a8:	sub	r3, fp, #16384	; 0x4000
   130ac:	sub	r3, r3, #4
   130b0:	sub	r3, r3, #8
   130b4:	mov	r2, #16384	; 0x4000
   130b8:	mov	r1, r3
   130bc:	bl	10df8 <rb_read@plt>
   130c0:	str	r0, [fp, #-12]
   130c4:	ldr	r3, [fp, #-12]
   130c8:	cmp	r3, #0
   130cc:	beq	130fc <rb_base64_encode@plt+0x2184>
   130d0:	ldr	r3, [fp, #-12]
   130d4:	cmp	r3, #0
   130d8:	bge	13110 <rb_base64_encode@plt+0x2198>
   130dc:	bl	10f6c <__errno_location@plt>
   130e0:	mov	r3, r0
   130e4:	ldr	r3, [r3]
   130e8:	mov	r0, r3
   130ec:	bl	10d2c <rb_ignore_errno@plt>
   130f0:	mov	r3, r0
   130f4:	cmp	r3, #0
   130f8:	bne	13110 <rb_base64_encode@plt+0x2198>
   130fc:	mov	r2, #0
   13100:	mov	r1, #0
   13104:	ldr	r0, [fp, #-8]
   13108:	bl	1210c <rb_base64_encode@plt+0x1194>
   1310c:	b	131fc <rb_base64_encode@plt+0x2284>
   13110:	ldr	r3, [fp, #-12]
   13114:	cmp	r3, #0
   13118:	bge	13158 <rb_base64_encode@plt+0x21e0>
   1311c:	ldr	r3, [fp, #-8]
   13120:	ldr	r0, [r3, #88]	; 0x58
   13124:	ldr	r3, [fp, #-8]
   13128:	ldr	r2, [pc, #212]	; 13204 <rb_base64_encode@plt+0x228c>
   1312c:	add	r2, pc, r2
   13130:	mov	r1, #1
   13134:	bl	10d44 <rb_setselect@plt>
   13138:	ldr	r3, [fp, #-8]
   1313c:	ldrb	r3, [r3, #128]	; 0x80
   13140:	and	r3, r3, #8
   13144:	cmp	r3, #0
   13148:	beq	131e8 <rb_base64_encode@plt+0x2270>
   1314c:	ldr	r0, [fp, #-8]
   13150:	bl	12f08 <rb_base64_encode@plt+0x1f90>
   13154:	b	131e8 <rb_base64_encode@plt+0x2270>
   13158:	ldr	r3, [fp, #-8]
   1315c:	ldrd	r0, [r3, #112]	; 0x70
   13160:	ldr	r3, [fp, #-12]
   13164:	mov	r2, r3
   13168:	asr	r3, r2, #31
   1316c:	adds	r2, r2, r0
   13170:	adc	r3, r3, r1
   13174:	ldr	r1, [fp, #-8]
   13178:	strd	r2, [r1, #112]	; 0x70
   1317c:	ldr	r3, [fp, #-8]
   13180:	add	r0, r3, #52	; 0x34
   13184:	sub	r1, fp, #16384	; 0x4000
   13188:	sub	r1, r1, #4
   1318c:	sub	r1, r1, #8
   13190:	mov	r3, #0
   13194:	ldr	r2, [fp, #-12]
   13198:	bl	10dbc <rb_linebuf_parse@plt>
   1319c:	ldr	r3, [fp, #-8]
   131a0:	ldrb	r3, [r3, #128]	; 0x80
   131a4:	and	r3, r3, #2
   131a8:	cmp	r3, #0
   131ac:	bne	131f0 <rb_base64_encode@plt+0x2278>
   131b0:	ldr	r0, [fp, #-8]
   131b4:	bl	12e6c <rb_base64_encode@plt+0x1ef4>
   131b8:	mov	r3, r0
   131bc:	cmp	r3, #0
   131c0:	bne	131f8 <rb_base64_encode@plt+0x2280>
   131c4:	b	1308c <rb_base64_encode@plt+0x2114>
   131c8:	nop			; (mov r0, r0)
   131cc:	b	131fc <rb_base64_encode@plt+0x2284>
   131d0:	nop			; (mov r0, r0)
   131d4:	b	131fc <rb_base64_encode@plt+0x2284>
   131d8:	nop			; (mov r0, r0)
   131dc:	b	131fc <rb_base64_encode@plt+0x2284>
   131e0:	nop			; (mov r0, r0)
   131e4:	b	131fc <rb_base64_encode@plt+0x2284>
   131e8:	nop			; (mov r0, r0)
   131ec:	b	131fc <rb_base64_encode@plt+0x2284>
   131f0:	nop			; (mov r0, r0)
   131f4:	b	131fc <rb_base64_encode@plt+0x2284>
   131f8:	nop			; (mov r0, r0)
   131fc:	sub	sp, fp, #4
   13200:	pop	{fp, pc}
   13204:			; <UNDEFINED> instruction: 0xfffffec8
   13208:	push	{fp, lr}
   1320c:	add	fp, sp, #4
   13210:	sub	sp, sp, #16384	; 0x4000
   13214:	sub	sp, sp, #16
   13218:	sub	r3, fp, #16384	; 0x4000
   1321c:	sub	r3, r3, #4
   13220:	str	r0, [r3, #-12]
   13224:	sub	r3, fp, #16384	; 0x4000
   13228:	sub	r3, r3, #4
   1322c:	str	r1, [r3, #-16]
   13230:	sub	r3, fp, #16384	; 0x4000
   13234:	sub	r3, r3, #4
   13238:	ldr	r3, [r3, #-16]
   1323c:	str	r3, [fp, #-8]
   13240:	mov	r3, #0
   13244:	str	r3, [fp, #-12]
   13248:	ldr	r3, [fp, #-8]
   1324c:	cmp	r3, #0
   13250:	beq	13308 <rb_base64_encode@plt+0x2390>
   13254:	ldr	r3, [fp, #-8]
   13258:	ldr	r0, [r3, #88]	; 0x58
   1325c:	sub	r3, fp, #16384	; 0x4000
   13260:	sub	r3, r3, #4
   13264:	sub	r3, r3, #8
   13268:	mov	r2, #16384	; 0x4000
   1326c:	mov	r1, r3
   13270:	bl	10df8 <rb_read@plt>
   13274:	str	r0, [fp, #-12]
   13278:	ldr	r3, [fp, #-12]
   1327c:	cmp	r3, #0
   13280:	beq	132b0 <rb_base64_encode@plt+0x2338>
   13284:	ldr	r3, [fp, #-12]
   13288:	cmp	r3, #0
   1328c:	bge	132dc <rb_base64_encode@plt+0x2364>
   13290:	bl	10f6c <__errno_location@plt>
   13294:	mov	r3, r0
   13298:	ldr	r3, [r3]
   1329c:	mov	r0, r3
   132a0:	bl	10d2c <rb_ignore_errno@plt>
   132a4:	mov	r3, r0
   132a8:	cmp	r3, #0
   132ac:	bne	132dc <rb_base64_encode@plt+0x2364>
   132b0:	ldr	r3, [fp, #-8]
   132b4:	ldr	r3, [r3, #88]	; 0x58
   132b8:	mov	r0, r3
   132bc:	bl	10e64 <rb_close@plt>
   132c0:	ldr	r3, [fp, #-8]
   132c4:	ldr	r2, [pc, #72]	; 13314 <rb_base64_encode@plt+0x239c>
   132c8:	add	r2, pc, r2
   132cc:	mov	r1, r3
   132d0:	ldr	r0, [fp, #-8]
   132d4:	bl	110ac <rb_base64_encode@plt+0x134>
   132d8:	b	1330c <rb_base64_encode@plt+0x2394>
   132dc:	ldr	r3, [fp, #-12]
   132e0:	cmp	r3, #0
   132e4:	bge	13254 <rb_base64_encode@plt+0x22dc>
   132e8:	ldr	r3, [fp, #-8]
   132ec:	ldr	r0, [r3, #88]	; 0x58
   132f0:	ldr	r3, [fp, #-8]
   132f4:	ldr	r2, [pc, #28]	; 13318 <rb_base64_encode@plt+0x23a0>
   132f8:	add	r2, pc, r2
   132fc:	mov	r1, #1
   13300:	bl	10d44 <rb_setselect@plt>
   13304:	b	1330c <rb_base64_encode@plt+0x2394>
   13308:	nop			; (mov r0, r0)
   1330c:	sub	sp, fp, #4
   13310:	pop	{fp, pc}
   13314:	strdeq	r9, [r1], -ip
   13318:			; <UNDEFINED> instruction: 0xffffff08
   1331c:	push	{fp, lr}
   13320:	add	fp, sp, #4
   13324:	sub	sp, sp, #16
   13328:	str	r0, [fp, #-16]
   1332c:	str	r1, [fp, #-20]	; 0xffffffec
   13330:	ldr	r3, [fp, #-20]	; 0xffffffec
   13334:	ldr	r1, [r3, #20]
   13338:	ldr	r3, [fp, #-20]	; 0xffffffec
   1333c:	ldr	r3, [r3, #24]
   13340:	mov	r2, r3
   13344:	ldr	r0, [fp, #-16]
   13348:	bl	12324 <rb_base64_encode@plt+0x13ac>
   1334c:	str	r0, [fp, #-8]
   13350:	ldr	r3, [fp, #-20]	; 0xffffffec
   13354:	ldr	r3, [r3, #12]
   13358:	add	r3, r3, #1
   1335c:	mov	r0, r3
   13360:	bl	11518 <rb_base64_encode@plt+0x5a0>
   13364:	str	r0, [fp, #-12]
   13368:	ldr	r1, [fp, #-12]
   1336c:	ldr	r0, [fp, #-8]
   13370:	bl	11798 <rb_base64_encode@plt+0x820>
   13374:	ldr	r3, [fp, #-8]
   13378:	ldrb	r3, [r3, #128]	; 0x80
   1337c:	orr	r3, r3, #4
   13380:	uxtb	r2, r3
   13384:	ldr	r3, [fp, #-8]
   13388:	strb	r2, [r3, #128]	; 0x80
   1338c:	ldr	r3, [fp, #-8]
   13390:	ldr	r3, [r3, #84]	; 0x54
   13394:	mov	r0, r3
   13398:	bl	10d08 <rb_get_type@plt>
   1339c:	mov	r3, r0
   133a0:	and	r3, r3, #64	; 0x40
   133a4:	cmp	r3, #0
   133a8:	beq	133c0 <rb_base64_encode@plt+0x2448>
   133ac:	ldr	r3, [fp, #-8]
   133b0:	ldr	r3, [r3, #84]	; 0x54
   133b4:	mov	r1, #4
   133b8:	mov	r0, r3
   133bc:	bl	10e04 <rb_set_type@plt>
   133c0:	ldr	r3, [fp, #-8]
   133c4:	ldr	r3, [r3, #88]	; 0x58
   133c8:	mov	r0, r3
   133cc:	bl	10d08 <rb_get_type@plt>
   133d0:	mov	r3, r0
   133d4:	cmp	r3, #64	; 0x40
   133d8:	bne	133f0 <rb_base64_encode@plt+0x2478>
   133dc:	ldr	r3, [fp, #-8]
   133e0:	ldr	r3, [r3, #88]	; 0x58
   133e4:	mov	r1, #4
   133e8:	mov	r0, r3
   133ec:	bl	10e04 <rb_set_type@plt>
   133f0:	ldr	r3, [fp, #-8]
   133f4:	ldr	r3, [r3, #84]	; 0x54
   133f8:	ldr	r1, [fp, #-8]
   133fc:	mov	r0, r3
   13400:	bl	12c5c <rb_base64_encode@plt+0x1ce4>
   13404:	ldr	r3, [fp, #-8]
   13408:	ldr	r3, [r3, #88]	; 0x58
   1340c:	ldr	r1, [fp, #-8]
   13410:	mov	r0, r3
   13414:	bl	12ffc <rb_base64_encode@plt+0x2084>
   13418:	nop			; (mov r0, r0)
   1341c:	sub	sp, fp, #4
   13420:	pop	{fp, pc}
   13424:	push	{fp, lr}
   13428:	add	fp, sp, #4
   1342c:	sub	sp, sp, #24
   13430:	str	r0, [fp, #-24]	; 0xffffffe8
   13434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13438:	ldr	r3, [r3, #24]
   1343c:	str	r3, [fp, #-8]
   13440:	ldr	r3, [fp, #-8]
   13444:	cmp	r3, #0
   13448:	beq	13458 <rb_base64_encode@plt+0x24e0>
   1344c:	ldr	r3, [fp, #-8]
   13450:	ldr	r3, [r3, #8]
   13454:	b	1345c <rb_base64_encode@plt+0x24e4>
   13458:	mov	r3, #0
   1345c:	str	r3, [fp, #-12]
   13460:	b	1351c <rb_base64_encode@plt+0x25a4>
   13464:	ldr	r3, [fp, #-8]
   13468:	ldr	r3, [r3]
   1346c:	str	r3, [fp, #-16]
   13470:	ldr	r3, [fp, #-16]
   13474:	ldr	r3, [r3, #12]
   13478:	ldrb	r3, [r3]
   1347c:	cmp	r3, #65	; 0x41
   13480:	beq	13488 <rb_base64_encode@plt+0x2510>
   13484:	b	134c8 <rb_base64_encode@plt+0x2550>
   13488:	ldr	r3, [fp, #-16]
   1348c:	ldr	r3, [r3, #36]	; 0x24
   13490:	cmp	r3, #2
   13494:	bne	134a8 <rb_base64_encode@plt+0x2530>
   13498:	ldr	r3, [fp, #-16]
   1349c:	ldr	r3, [r3, #16]
   134a0:	cmp	r3, #5
   134a4:	beq	134b8 <rb_base64_encode@plt+0x2540>
   134a8:	ldr	r1, [fp, #-16]
   134ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134b0:	bl	123d8 <rb_base64_encode@plt+0x1460>
   134b4:	b	134c8 <rb_base64_encode@plt+0x2550>
   134b8:	ldr	r1, [fp, #-16]
   134bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134c0:	bl	1331c <rb_base64_encode@plt+0x23a4>
   134c4:	nop			; (mov r0, r0)
   134c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134cc:	add	r3, r3, #24
   134d0:	mov	r1, r3
   134d4:	ldr	r0, [fp, #-8]
   134d8:	bl	11354 <rb_base64_encode@plt+0x3dc>
   134dc:	ldr	r3, [fp, #-16]
   134e0:	ldr	r3, [r3, #12]
   134e4:	mov	r0, r3
   134e8:	bl	114d8 <rb_base64_encode@plt+0x560>
   134ec:	ldr	r0, [fp, #-16]
   134f0:	bl	114d8 <rb_base64_encode@plt+0x560>
   134f4:	ldr	r3, [fp, #-12]
   134f8:	str	r3, [fp, #-8]
   134fc:	ldr	r3, [fp, #-8]
   13500:	cmp	r3, #0
   13504:	beq	13514 <rb_base64_encode@plt+0x259c>
   13508:	ldr	r3, [fp, #-8]
   1350c:	ldr	r3, [r3, #8]
   13510:	b	13518 <rb_base64_encode@plt+0x25a0>
   13514:	mov	r3, #0
   13518:	str	r3, [fp, #-12]
   1351c:	ldr	r3, [fp, #-8]
   13520:	cmp	r3, #0
   13524:	bne	13464 <rb_base64_encode@plt+0x24ec>
   13528:	nop			; (mov r0, r0)
   1352c:	sub	sp, fp, #4
   13530:	pop	{fp, pc}
   13534:	push	{fp, lr}
   13538:	add	fp, sp, #4
   1353c:	sub	sp, sp, #32
   13540:	str	r0, [fp, #-24]	; 0xffffffe8
   13544:	str	r1, [fp, #-28]	; 0xffffffe4
   13548:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1354c:	str	r3, [fp, #-12]
   13550:	mov	r0, #40	; 0x28
   13554:	bl	11484 <rb_base64_encode@plt+0x50c>
   13558:	str	r0, [fp, #-16]
   1355c:	mov	r0, #16384	; 0x4000
   13560:	bl	11484 <rb_base64_encode@plt+0x50c>
   13564:	mov	r2, r0
   13568:	ldr	r3, [fp, #-16]
   1356c:	str	r2, [r3, #12]
   13570:	ldr	r3, [fp, #-16]
   13574:	mov	r2, #16384	; 0x4000
   13578:	str	r2, [r3, #16]
   1357c:	ldr	r3, [fp, #-12]
   13580:	ldr	r0, [r3, #16]
   13584:	ldr	r3, [fp, #-16]
   13588:	ldr	r1, [r3, #12]
   1358c:	ldr	r3, [fp, #-16]
   13590:	ldr	r2, [r3, #16]
   13594:	ldr	r3, [fp, #-16]
   13598:	add	ip, r3, #20
   1359c:	mov	r3, #4
   135a0:	str	r3, [sp]
   135a4:	mov	r3, ip
   135a8:	bl	10f00 <rb_recv_fd_buf@plt>
   135ac:	str	r0, [fp, #-20]	; 0xffffffec
   135b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   135b4:	cmp	r3, #0
   135b8:	bgt	135d8 <rb_base64_encode@plt+0x2660>
   135bc:	ldr	r3, [fp, #-16]
   135c0:	ldr	r3, [r3, #12]
   135c4:	mov	r0, r3
   135c8:	bl	114d8 <rb_base64_encode@plt+0x560>
   135cc:	ldr	r0, [fp, #-16]
   135d0:	bl	114d8 <rb_base64_encode@plt+0x560>
   135d4:	b	1364c <rb_base64_encode@plt+0x26d4>
   135d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   135dc:	ldr	r3, [fp, #-16]
   135e0:	str	r2, [r3, #16]
   135e4:	ldr	r1, [fp, #-16]
   135e8:	ldr	r3, [fp, #-12]
   135ec:	add	r3, r3, #24
   135f0:	mov	r2, r3
   135f4:	ldr	r0, [fp, #-16]
   135f8:	bl	11200 <rb_base64_encode@plt+0x288>
   135fc:	mov	r3, #0
   13600:	str	r3, [fp, #-8]
   13604:	b	13614 <rb_base64_encode@plt+0x269c>
   13608:	ldr	r3, [fp, #-8]
   1360c:	add	r3, r3, #1
   13610:	str	r3, [fp, #-8]
   13614:	ldr	r3, [fp, #-8]
   13618:	cmp	r3, #3
   1361c:	bgt	13640 <rb_base64_encode@plt+0x26c8>
   13620:	ldr	r2, [fp, #-16]
   13624:	ldr	r3, [fp, #-8]
   13628:	add	r3, r3, #4
   1362c:	lsl	r3, r3, #2
   13630:	add	r3, r2, r3
   13634:	ldr	r3, [r3, #4]
   13638:	cmp	r3, #0
   1363c:	bne	13608 <rb_base64_encode@plt+0x2690>
   13640:	ldr	r3, [fp, #-16]
   13644:	ldr	r2, [fp, #-8]
   13648:	str	r2, [r3, #36]	; 0x24
   1364c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13650:	cmp	r3, #0
   13654:	bgt	13550 <rb_base64_encode@plt+0x25d8>
   13658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1365c:	cmp	r3, #0
   13660:	beq	13690 <rb_base64_encode@plt+0x2718>
   13664:	ldr	r3, [fp, #-20]	; 0xffffffec
   13668:	cmp	r3, #0
   1366c:	bge	13698 <rb_base64_encode@plt+0x2720>
   13670:	bl	10f6c <__errno_location@plt>
   13674:	mov	r3, r0
   13678:	ldr	r3, [r3]
   1367c:	mov	r0, r3
   13680:	bl	10d2c <rb_ignore_errno@plt>
   13684:	mov	r3, r0
   13688:	cmp	r3, #0
   1368c:	bne	13698 <rb_base64_encode@plt+0x2720>
   13690:	mov	r0, #0
   13694:	bl	10f60 <exit@plt>
   13698:	ldr	r0, [fp, #-12]
   1369c:	bl	13424 <rb_base64_encode@plt+0x24ac>
   136a0:	ldr	r3, [fp, #-12]
   136a4:	ldr	r0, [r3, #16]
   136a8:	ldr	r3, [fp, #-12]
   136ac:	ldr	r2, [pc, #20]	; 136c8 <rb_base64_encode@plt+0x2750>
   136b0:	add	r2, pc, r2
   136b4:	mov	r1, #1
   136b8:	bl	10d44 <rb_setselect@plt>
   136bc:	nop			; (mov r0, r0)
   136c0:	sub	sp, fp, #4
   136c4:	pop	{fp, pc}
   136c8:			; <UNDEFINED> instruction: 0xfffffe7c
   136cc:	push	{fp, lr}
   136d0:	add	fp, sp, #4
   136d4:	sub	sp, sp, #16384	; 0x4000
   136d8:	sub	sp, sp, #16
   136dc:	sub	r3, fp, #16384	; 0x4000
   136e0:	sub	r3, r3, #4
   136e4:	str	r0, [r3, #-12]
   136e8:	sub	r3, fp, #16384	; 0x4000
   136ec:	sub	r3, r3, #4
   136f0:	str	r1, [r3, #-16]
   136f4:	sub	r3, fp, #16384	; 0x4000
   136f8:	sub	r3, r3, #4
   136fc:	sub	r3, r3, #4
   13700:	sub	r2, fp, #16384	; 0x4000
   13704:	sub	r2, r2, #4
   13708:	mov	r0, r2
   1370c:	mov	r2, #16384	; 0x4000
   13710:	mov	r1, r3
   13714:	ldr	r0, [r0, #-12]
   13718:	bl	10df8 <rb_read@plt>
   1371c:	str	r0, [fp, #-8]
   13720:	ldr	r3, [fp, #-8]
   13724:	cmp	r3, #0
   13728:	bgt	136f4 <rb_base64_encode@plt+0x277c>
   1372c:	ldr	r3, [fp, #-8]
   13730:	cmp	r3, #0
   13734:	beq	13764 <rb_base64_encode@plt+0x27ec>
   13738:	ldr	r3, [fp, #-8]
   1373c:	cmp	r3, #0
   13740:	bge	1376c <rb_base64_encode@plt+0x27f4>
   13744:	bl	10f6c <__errno_location@plt>
   13748:	mov	r3, r0
   1374c:	ldr	r3, [r3]
   13750:	mov	r0, r3
   13754:	bl	10d2c <rb_ignore_errno@plt>
   13758:	mov	r3, r0
   1375c:	cmp	r3, #0
   13760:	bne	1376c <rb_base64_encode@plt+0x27f4>
   13764:	mov	r0, #0
   13768:	bl	10f60 <exit@plt>
   1376c:	sub	r3, fp, #16384	; 0x4000
   13770:	sub	r3, r3, #4
   13774:	mov	r0, r3
   13778:	mov	r3, #0
   1377c:	ldr	r2, [pc, #24]	; 1379c <rb_base64_encode@plt+0x2824>
   13780:	add	r2, pc, r2
   13784:	mov	r1, #1
   13788:	ldr	r0, [r0, #-12]
   1378c:	bl	10d44 <rb_setselect@plt>
   13790:	nop			; (mov r0, r0)
   13794:	sub	sp, fp, #4
   13798:	pop	{fp, pc}
   1379c:			; <UNDEFINED> instruction: 0xffffff44
   137a0:	push	{r4, fp, lr}
   137a4:	add	fp, sp, #8
   137a8:	sub	sp, sp, #60	; 0x3c
   137ac:	str	r0, [fp, #-48]	; 0xffffffd0
   137b0:	str	r1, [fp, #-52]	; 0xffffffcc
   137b4:	ldr	r4, [pc, #816]	; 13aec <rb_base64_encode@plt+0x2b74>
   137b8:	add	r4, pc, r4
   137bc:	bl	11754 <rb_base64_encode@plt+0x7dc>
   137c0:	str	r0, [fp, #-20]	; 0xffffffec
   137c4:	ldr	r3, [pc, #804]	; 13af0 <rb_base64_encode@plt+0x2b78>
   137c8:	add	r3, pc, r3
   137cc:	mov	r0, r3
   137d0:	bl	10d74 <getenv@plt>
   137d4:	str	r0, [fp, #-24]	; 0xffffffe8
   137d8:	ldr	r3, [pc, #788]	; 13af4 <rb_base64_encode@plt+0x2b7c>
   137dc:	add	r3, pc, r3
   137e0:	mov	r0, r3
   137e4:	bl	10d74 <getenv@plt>
   137e8:	str	r0, [fp, #-28]	; 0xffffffe4
   137ec:	ldr	r3, [pc, #772]	; 13af8 <rb_base64_encode@plt+0x2b80>
   137f0:	add	r3, pc, r3
   137f4:	mov	r0, r3
   137f8:	bl	10d74 <getenv@plt>
   137fc:	str	r0, [fp, #-32]	; 0xffffffe0
   13800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13804:	cmp	r3, #0
   13808:	beq	13824 <rb_base64_encode@plt+0x28ac>
   1380c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13810:	cmp	r3, #0
   13814:	beq	13824 <rb_base64_encode@plt+0x28ac>
   13818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1381c:	cmp	r3, #0
   13820:	bne	1386c <rb_base64_encode@plt+0x28f4>
   13824:	ldr	r3, [pc, #720]	; 13afc <rb_base64_encode@plt+0x2b84>
   13828:	ldr	r3, [r4, r3]
   1382c:	ldr	r3, [r3]
   13830:	mov	r2, #52	; 0x34
   13834:	mov	r1, #1
   13838:	ldr	r0, [pc, #704]	; 13b00 <rb_base64_encode@plt+0x2b88>
   1383c:	add	r0, pc, r0
   13840:	bl	10eac <fwrite@plt>
   13844:	ldr	r3, [pc, #688]	; 13afc <rb_base64_encode@plt+0x2b84>
   13848:	ldr	r3, [r4, r3]
   1384c:	ldr	r3, [r3]
   13850:	mov	r2, #49	; 0x31
   13854:	mov	r1, #1
   13858:	ldr	r0, [pc, #676]	; 13b04 <rb_base64_encode@plt+0x2b8c>
   1385c:	add	r0, pc, r0
   13860:	bl	10eac <fwrite@plt>
   13864:	mov	r0, #1
   13868:	bl	10f60 <exit@plt>
   1386c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13870:	bl	10e7c <atoi@plt>
   13874:	str	r0, [fp, #-36]	; 0xffffffdc
   13878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1387c:	bl	10e7c <atoi@plt>
   13880:	str	r0, [fp, #-40]	; 0xffffffd8
   13884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13888:	bl	10e7c <atoi@plt>
   1388c:	mov	r2, r0
   13890:	ldr	r3, [pc, #624]	; 13b08 <rb_base64_encode@plt+0x2b90>
   13894:	add	r3, pc, r3
   13898:	str	r2, [r3]
   1389c:	mov	r3, #0
   138a0:	str	r3, [fp, #-16]
   138a4:	mov	r3, #0
   138a8:	str	r3, [fp, #-16]
   138ac:	b	138f0 <rb_base64_encode@plt+0x2978>
   138b0:	ldr	r2, [fp, #-16]
   138b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138b8:	cmp	r2, r3
   138bc:	beq	138e4 <rb_base64_encode@plt+0x296c>
   138c0:	ldr	r2, [fp, #-16]
   138c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   138c8:	cmp	r2, r3
   138cc:	beq	138e4 <rb_base64_encode@plt+0x296c>
   138d0:	ldr	r3, [fp, #-16]
   138d4:	cmp	r3, #2
   138d8:	ble	138e4 <rb_base64_encode@plt+0x296c>
   138dc:	ldr	r0, [fp, #-16]
   138e0:	bl	10ea0 <close@plt>
   138e4:	ldr	r3, [fp, #-16]
   138e8:	add	r3, r3, #1
   138ec:	str	r3, [fp, #-16]
   138f0:	ldr	r2, [fp, #-16]
   138f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   138f8:	cmp	r2, r3
   138fc:	blt	138b0 <rb_base64_encode@plt+0x2938>
   13900:	mov	r1, #2
   13904:	ldr	r3, [pc, #512]	; 13b0c <rb_base64_encode@plt+0x2b94>
   13908:	add	r3, pc, r3
   1390c:	mov	r0, r3
   13910:	bl	10ce4 <open@plt>
   13914:	str	r0, [fp, #-16]
   13918:	ldr	r3, [fp, #-16]
   1391c:	cmp	r3, #0
   13920:	blt	139a4 <rb_base64_encode@plt+0x2a2c>
   13924:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13928:	cmp	r3, #0
   1392c:	beq	13948 <rb_base64_encode@plt+0x29d0>
   13930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13934:	cmp	r3, #0
   13938:	beq	13948 <rb_base64_encode@plt+0x29d0>
   1393c:	mov	r1, #0
   13940:	ldr	r0, [fp, #-16]
   13944:	bl	10f0c <dup2@plt>
   13948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1394c:	cmp	r3, #1
   13950:	beq	1396c <rb_base64_encode@plt+0x29f4>
   13954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13958:	cmp	r3, #1
   1395c:	beq	1396c <rb_base64_encode@plt+0x29f4>
   13960:	mov	r1, #1
   13964:	ldr	r0, [fp, #-16]
   13968:	bl	10f0c <dup2@plt>
   1396c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13970:	cmp	r3, #2
   13974:	beq	13990 <rb_base64_encode@plt+0x2a18>
   13978:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1397c:	cmp	r3, #2
   13980:	beq	13990 <rb_base64_encode@plt+0x2a18>
   13984:	mov	r1, #2
   13988:	ldr	r0, [fp, #-16]
   1398c:	bl	10f0c <dup2@plt>
   13990:	ldr	r3, [fp, #-16]
   13994:	cmp	r3, #2
   13998:	ble	139a4 <rb_base64_encode@plt+0x2a2c>
   1399c:	ldr	r0, [fp, #-16]
   139a0:	bl	10ea0 <close@plt>
   139a4:	bl	1166c <rb_base64_encode@plt+0x6f4>
   139a8:	mov	r3, #4096	; 0x1000
   139ac:	str	r3, [sp, #8]
   139b0:	mov	r3, #1024	; 0x400
   139b4:	str	r3, [sp, #4]
   139b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139bc:	str	r3, [sp]
   139c0:	mov	r3, #0
   139c4:	mov	r2, #0
   139c8:	mov	r1, #0
   139cc:	mov	r0, #0
   139d0:	bl	10edc <rb_lib_init@plt>
   139d4:	mov	r0, #4096	; 0x1000
   139d8:	bl	10f30 <rb_linebuf_init@plt>
   139dc:	mov	r0, #4096	; 0x1000
   139e0:	bl	10dd4 <rb_init_rawbuffers@plt>
   139e4:	mov	r0, #48	; 0x30
   139e8:	bl	11484 <rb_base64_encode@plt+0x50c>
   139ec:	mov	r2, r0
   139f0:	ldr	r3, [pc, #280]	; 13b10 <rb_base64_encode@plt+0x2b98>
   139f4:	add	r3, pc, r3
   139f8:	str	r2, [r3]
   139fc:	ldr	r3, [pc, #272]	; 13b14 <rb_base64_encode@plt+0x2b9c>
   13a00:	add	r3, pc, r3
   13a04:	ldr	r4, [r3]
   13a08:	ldr	r3, [pc, #264]	; 13b18 <rb_base64_encode@plt+0x2ba0>
   13a0c:	add	r3, pc, r3
   13a10:	mov	r2, r3
   13a14:	mov	r1, #4
   13a18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a1c:	bl	10ef4 <rb_open@plt>
   13a20:	mov	r3, r0
   13a24:	str	r3, [r4, #16]
   13a28:	ldr	r3, [pc, #236]	; 13b1c <rb_base64_encode@plt+0x2ba4>
   13a2c:	add	r3, pc, r3
   13a30:	ldr	r4, [r3]
   13a34:	ldr	r3, [pc, #228]	; 13b20 <rb_base64_encode@plt+0x2ba8>
   13a38:	add	r3, pc, r3
   13a3c:	mov	r2, r3
   13a40:	mov	r1, #8
   13a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a48:	bl	10ef4 <rb_open@plt>
   13a4c:	mov	r3, r0
   13a50:	str	r3, [r4, #20]
   13a54:	ldr	r3, [pc, #200]	; 13b24 <rb_base64_encode@plt+0x2bac>
   13a58:	add	r3, pc, r3
   13a5c:	ldr	r3, [r3]
   13a60:	ldr	r3, [r3, #16]
   13a64:	mov	r0, r3
   13a68:	bl	10d98 <rb_set_nb@plt>
   13a6c:	ldr	r3, [pc, #180]	; 13b28 <rb_base64_encode@plt+0x2bb0>
   13a70:	add	r3, pc, r3
   13a74:	ldr	r3, [r3]
   13a78:	ldr	r3, [r3, #20]
   13a7c:	mov	r0, r3
   13a80:	bl	10d98 <rb_set_nb@plt>
   13a84:	mov	r3, #10
   13a88:	mov	r2, #0
   13a8c:	ldr	r1, [pc, #152]	; 13b2c <rb_base64_encode@plt+0x2bb4>
   13a90:	add	r1, pc, r1
   13a94:	ldr	r0, [pc, #148]	; 13b30 <rb_base64_encode@plt+0x2bb8>
   13a98:	add	r0, pc, r0
   13a9c:	bl	10d20 <rb_event_addish@plt>
   13aa0:	ldr	r3, [pc, #140]	; 13b34 <rb_base64_encode@plt+0x2bbc>
   13aa4:	add	r3, pc, r3
   13aa8:	ldr	r3, [r3]
   13aac:	ldr	r3, [r3, #20]
   13ab0:	mov	r1, #0
   13ab4:	mov	r0, r3
   13ab8:	bl	136cc <rb_base64_encode@plt+0x2754>
   13abc:	ldr	r3, [pc, #116]	; 13b38 <rb_base64_encode@plt+0x2bc0>
   13ac0:	add	r3, pc, r3
   13ac4:	ldr	r3, [r3]
   13ac8:	ldr	r2, [r3, #16]
   13acc:	ldr	r3, [pc, #104]	; 13b3c <rb_base64_encode@plt+0x2bc4>
   13ad0:	add	r3, pc, r3
   13ad4:	ldr	r3, [r3]
   13ad8:	mov	r1, r3
   13adc:	mov	r0, r2
   13ae0:	bl	13534 <rb_base64_encode@plt+0x25bc>
   13ae4:	mov	r0, #0
   13ae8:	bl	10dec <rb_lib_loop@plt>
   13aec:	andeq	r3, r1, r0, asr #16
   13af0:	andeq	r2, r0, r0, asr #25
   13af4:			; <UNDEFINED> instruction: 0x00002cb4
   13af8:	andeq	r2, r0, ip, lsr #25
   13afc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b00:	andeq	r2, r0, ip, ror #24
   13b04:	andeq	r2, r0, r4, lsl #25
   13b08:	andeq	r3, r1, r8, ror #16
   13b0c:	andeq	r2, r0, ip, lsl #24
   13b10:	andeq	r3, r1, ip, lsl #14
   13b14:	andeq	r3, r1, r0, lsl #14
   13b18:	andeq	r2, r0, r4, lsl fp
   13b1c:	ldrdeq	r3, [r1], -r4
   13b20:	strdeq	r2, [r0], -ip
   13b24:	andeq	r3, r1, r8, lsr #13
   13b28:	muleq	r1, r0, r6
   13b2c:			; <UNDEFINED> instruction: 0xffffdde4
   13b30:	andeq	r2, r0, r8, lsr #21
   13b34:	andeq	r3, r1, ip, asr r6
   13b38:	andeq	r3, r1, r0, asr #12
   13b3c:	andeq	r3, r1, r0, lsr r6
   13b40:	push	{r4, fp, lr}
   13b44:	add	fp, sp, #8
   13b48:	sub	sp, sp, #100	; 0x64
   13b4c:	str	r0, [fp, #-104]	; 0xffffff98
   13b50:	str	r1, [fp, #-108]	; 0xffffff94
   13b54:	sub	r3, fp, #96	; 0x60
   13b58:	mov	r2, #64	; 0x40
   13b5c:	ldr	r1, [fp, #-108]	; 0xffffff94
   13b60:	mov	r0, r3
   13b64:	bl	10e40 <memcpy@plt>
   13b68:	ldr	r3, [fp, #-104]	; 0xffffff98
   13b6c:	ldr	r3, [r3]
   13b70:	str	r3, [fp, #-16]
   13b74:	ldr	r3, [fp, #-104]	; 0xffffff98
   13b78:	ldr	r3, [r3, #4]
   13b7c:	str	r3, [fp, #-20]	; 0xffffffec
   13b80:	ldr	r3, [fp, #-104]	; 0xffffff98
   13b84:	ldr	r3, [r3, #8]
   13b88:	str	r3, [fp, #-24]	; 0xffffffe8
   13b8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   13b90:	ldr	r3, [r3, #12]
   13b94:	str	r3, [fp, #-28]	; 0xffffffe4
   13b98:	ldr	r3, [fp, #-104]	; 0xffffff98
   13b9c:	ldr	r3, [r3, #16]
   13ba0:	str	r3, [fp, #-32]	; 0xffffffe0
   13ba4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ba8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bac:	eor	r2, r2, r3
   13bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bb4:	and	r2, r2, r3
   13bb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bbc:	eor	r4, r2, r3
   13bc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13bc4:	mov	r0, r3
   13bc8:	bl	10f24 <htonl@plt>
   13bcc:	mov	r3, r0
   13bd0:	str	r3, [fp, #-96]	; 0xffffffa0
   13bd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13bd8:	add	r2, r4, r3
   13bdc:	ldr	r3, [fp, #-16]
   13be0:	ror	r3, r3, #27
   13be4:	add	r2, r2, r3
   13be8:	ldr	r3, [pc, #4088]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13bec:	add	r3, r2, r3
   13bf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13bf4:	add	r3, r2, r3
   13bf8:	str	r3, [fp, #-32]	; 0xffffffe0
   13bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c00:	ror	r3, r3, #2
   13c04:	str	r3, [fp, #-20]	; 0xffffffec
   13c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c10:	eor	r2, r2, r3
   13c14:	ldr	r3, [fp, #-16]
   13c18:	and	r2, r2, r3
   13c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c20:	eor	r4, r2, r3
   13c24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c28:	mov	r0, r3
   13c2c:	bl	10f24 <htonl@plt>
   13c30:	mov	r3, r0
   13c34:	str	r3, [fp, #-92]	; 0xffffffa4
   13c38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c3c:	add	r2, r4, r3
   13c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c44:	ror	r3, r3, #27
   13c48:	add	r2, r2, r3
   13c4c:	ldr	r3, [pc, #3988]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13c50:	add	r3, r2, r3
   13c54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13c58:	add	r3, r2, r3
   13c5c:	str	r3, [fp, #-28]	; 0xffffffe4
   13c60:	ldr	r3, [fp, #-16]
   13c64:	ror	r3, r3, #2
   13c68:	str	r3, [fp, #-16]
   13c6c:	ldr	r2, [fp, #-16]
   13c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c74:	eor	r2, r2, r3
   13c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13c7c:	and	r2, r2, r3
   13c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c84:	eor	r4, r2, r3
   13c88:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13c8c:	mov	r0, r3
   13c90:	bl	10f24 <htonl@plt>
   13c94:	mov	r3, r0
   13c98:	str	r3, [fp, #-88]	; 0xffffffa8
   13c9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13ca0:	add	r2, r4, r3
   13ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ca8:	ror	r3, r3, #27
   13cac:	add	r2, r2, r3
   13cb0:	ldr	r3, [pc, #3888]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13cb4:	add	r3, r2, r3
   13cb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13cbc:	add	r3, r2, r3
   13cc0:	str	r3, [fp, #-24]	; 0xffffffe8
   13cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13cc8:	ror	r3, r3, #2
   13ccc:	str	r3, [fp, #-32]	; 0xffffffe0
   13cd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13cd4:	ldr	r3, [fp, #-16]
   13cd8:	eor	r2, r2, r3
   13cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ce0:	and	r2, r2, r3
   13ce4:	ldr	r3, [fp, #-16]
   13ce8:	eor	r4, r2, r3
   13cec:	ldr	r3, [fp, #-84]	; 0xffffffac
   13cf0:	mov	r0, r3
   13cf4:	bl	10f24 <htonl@plt>
   13cf8:	mov	r3, r0
   13cfc:	str	r3, [fp, #-84]	; 0xffffffac
   13d00:	ldr	r3, [fp, #-84]	; 0xffffffac
   13d04:	add	r2, r4, r3
   13d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d0c:	ror	r3, r3, #27
   13d10:	add	r2, r2, r3
   13d14:	ldr	r3, [pc, #3788]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13d18:	add	r3, r2, r3
   13d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d20:	add	r3, r2, r3
   13d24:	str	r3, [fp, #-20]	; 0xffffffec
   13d28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d2c:	ror	r3, r3, #2
   13d30:	str	r3, [fp, #-28]	; 0xffffffe4
   13d34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d3c:	eor	r2, r2, r3
   13d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d44:	and	r2, r2, r3
   13d48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13d4c:	eor	r4, r2, r3
   13d50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13d54:	mov	r0, r3
   13d58:	bl	10f24 <htonl@plt>
   13d5c:	mov	r3, r0
   13d60:	str	r3, [fp, #-80]	; 0xffffffb0
   13d64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13d68:	add	r2, r4, r3
   13d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d70:	ror	r3, r3, #27
   13d74:	add	r2, r2, r3
   13d78:	ldr	r3, [pc, #3688]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13d7c:	add	r3, r2, r3
   13d80:	ldr	r2, [fp, #-16]
   13d84:	add	r3, r2, r3
   13d88:	str	r3, [fp, #-16]
   13d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d90:	ror	r3, r3, #2
   13d94:	str	r3, [fp, #-24]	; 0xffffffe8
   13d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13d9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13da0:	eor	r2, r2, r3
   13da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13da8:	and	r2, r2, r3
   13dac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13db0:	eor	r4, r2, r3
   13db4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13db8:	mov	r0, r3
   13dbc:	bl	10f24 <htonl@plt>
   13dc0:	mov	r3, r0
   13dc4:	str	r3, [fp, #-76]	; 0xffffffb4
   13dc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13dcc:	add	r2, r4, r3
   13dd0:	ldr	r3, [fp, #-16]
   13dd4:	ror	r3, r3, #27
   13dd8:	add	r2, r2, r3
   13ddc:	ldr	r3, [pc, #3588]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13de0:	add	r3, r2, r3
   13de4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13de8:	add	r3, r2, r3
   13dec:	str	r3, [fp, #-32]	; 0xffffffe0
   13df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13df4:	ror	r3, r3, #2
   13df8:	str	r3, [fp, #-20]	; 0xffffffec
   13dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e04:	eor	r2, r2, r3
   13e08:	ldr	r3, [fp, #-16]
   13e0c:	and	r2, r2, r3
   13e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e14:	eor	r4, r2, r3
   13e18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e1c:	mov	r0, r3
   13e20:	bl	10f24 <htonl@plt>
   13e24:	mov	r3, r0
   13e28:	str	r3, [fp, #-72]	; 0xffffffb8
   13e2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13e30:	add	r2, r4, r3
   13e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e38:	ror	r3, r3, #27
   13e3c:	add	r2, r2, r3
   13e40:	ldr	r3, [pc, #3488]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13e44:	add	r3, r2, r3
   13e48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13e4c:	add	r3, r2, r3
   13e50:	str	r3, [fp, #-28]	; 0xffffffe4
   13e54:	ldr	r3, [fp, #-16]
   13e58:	ror	r3, r3, #2
   13e5c:	str	r3, [fp, #-16]
   13e60:	ldr	r2, [fp, #-16]
   13e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e68:	eor	r2, r2, r3
   13e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13e70:	and	r2, r2, r3
   13e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e78:	eor	r4, r2, r3
   13e7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13e80:	mov	r0, r3
   13e84:	bl	10f24 <htonl@plt>
   13e88:	mov	r3, r0
   13e8c:	str	r3, [fp, #-68]	; 0xffffffbc
   13e90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13e94:	add	r2, r4, r3
   13e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e9c:	ror	r3, r3, #27
   13ea0:	add	r2, r2, r3
   13ea4:	ldr	r3, [pc, #3388]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13ea8:	add	r3, r2, r3
   13eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13eb0:	add	r3, r2, r3
   13eb4:	str	r3, [fp, #-24]	; 0xffffffe8
   13eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ebc:	ror	r3, r3, #2
   13ec0:	str	r3, [fp, #-32]	; 0xffffffe0
   13ec4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ec8:	ldr	r3, [fp, #-16]
   13ecc:	eor	r2, r2, r3
   13ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ed4:	and	r2, r2, r3
   13ed8:	ldr	r3, [fp, #-16]
   13edc:	eor	r4, r2, r3
   13ee0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ee4:	mov	r0, r3
   13ee8:	bl	10f24 <htonl@plt>
   13eec:	mov	r3, r0
   13ef0:	str	r3, [fp, #-64]	; 0xffffffc0
   13ef4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ef8:	add	r2, r4, r3
   13efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f00:	ror	r3, r3, #27
   13f04:	add	r2, r2, r3
   13f08:	ldr	r3, [pc, #3288]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13f0c:	add	r3, r2, r3
   13f10:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f14:	add	r3, r2, r3
   13f18:	str	r3, [fp, #-20]	; 0xffffffec
   13f1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f20:	ror	r3, r3, #2
   13f24:	str	r3, [fp, #-28]	; 0xffffffe4
   13f28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f30:	eor	r2, r2, r3
   13f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f38:	and	r2, r2, r3
   13f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f40:	eor	r4, r2, r3
   13f44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f48:	mov	r0, r3
   13f4c:	bl	10f24 <htonl@plt>
   13f50:	mov	r3, r0
   13f54:	str	r3, [fp, #-60]	; 0xffffffc4
   13f58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f5c:	add	r2, r4, r3
   13f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f64:	ror	r3, r3, #27
   13f68:	add	r2, r2, r3
   13f6c:	ldr	r3, [pc, #3188]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13f70:	add	r3, r2, r3
   13f74:	ldr	r2, [fp, #-16]
   13f78:	add	r3, r2, r3
   13f7c:	str	r3, [fp, #-16]
   13f80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f84:	ror	r3, r3, #2
   13f88:	str	r3, [fp, #-24]	; 0xffffffe8
   13f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13f94:	eor	r2, r2, r3
   13f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f9c:	and	r2, r2, r3
   13fa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13fa4:	eor	r4, r2, r3
   13fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13fac:	mov	r0, r3
   13fb0:	bl	10f24 <htonl@plt>
   13fb4:	mov	r3, r0
   13fb8:	str	r3, [fp, #-56]	; 0xffffffc8
   13fbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13fc0:	add	r2, r4, r3
   13fc4:	ldr	r3, [fp, #-16]
   13fc8:	ror	r3, r3, #27
   13fcc:	add	r2, r2, r3
   13fd0:	ldr	r3, [pc, #3088]	; 14be8 <rb_base64_encode@plt+0x3c70>
   13fd4:	add	r3, r2, r3
   13fd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fdc:	add	r3, r2, r3
   13fe0:	str	r3, [fp, #-32]	; 0xffffffe0
   13fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fe8:	ror	r3, r3, #2
   13fec:	str	r3, [fp, #-20]	; 0xffffffec
   13ff0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ff8:	eor	r2, r2, r3
   13ffc:	ldr	r3, [fp, #-16]
   14000:	and	r2, r2, r3
   14004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14008:	eor	r4, r2, r3
   1400c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14010:	mov	r0, r3
   14014:	bl	10f24 <htonl@plt>
   14018:	mov	r3, r0
   1401c:	str	r3, [fp, #-52]	; 0xffffffcc
   14020:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14024:	add	r2, r4, r3
   14028:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1402c:	ror	r3, r3, #27
   14030:	add	r2, r2, r3
   14034:	ldr	r3, [pc, #2988]	; 14be8 <rb_base64_encode@plt+0x3c70>
   14038:	add	r3, r2, r3
   1403c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14040:	add	r3, r2, r3
   14044:	str	r3, [fp, #-28]	; 0xffffffe4
   14048:	ldr	r3, [fp, #-16]
   1404c:	ror	r3, r3, #2
   14050:	str	r3, [fp, #-16]
   14054:	ldr	r2, [fp, #-16]
   14058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1405c:	eor	r2, r2, r3
   14060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14064:	and	r2, r2, r3
   14068:	ldr	r3, [fp, #-20]	; 0xffffffec
   1406c:	eor	r4, r2, r3
   14070:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14074:	mov	r0, r3
   14078:	bl	10f24 <htonl@plt>
   1407c:	mov	r3, r0
   14080:	str	r3, [fp, #-48]	; 0xffffffd0
   14084:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14088:	add	r2, r4, r3
   1408c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14090:	ror	r3, r3, #27
   14094:	add	r2, r2, r3
   14098:	ldr	r3, [pc, #2888]	; 14be8 <rb_base64_encode@plt+0x3c70>
   1409c:	add	r3, r2, r3
   140a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   140a4:	add	r3, r2, r3
   140a8:	str	r3, [fp, #-24]	; 0xffffffe8
   140ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140b0:	ror	r3, r3, #2
   140b4:	str	r3, [fp, #-32]	; 0xffffffe0
   140b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140bc:	ldr	r3, [fp, #-16]
   140c0:	eor	r2, r2, r3
   140c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140c8:	and	r2, r2, r3
   140cc:	ldr	r3, [fp, #-16]
   140d0:	eor	r4, r2, r3
   140d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   140d8:	mov	r0, r3
   140dc:	bl	10f24 <htonl@plt>
   140e0:	mov	r3, r0
   140e4:	str	r3, [fp, #-44]	; 0xffffffd4
   140e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   140ec:	add	r2, r4, r3
   140f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140f4:	ror	r3, r3, #27
   140f8:	add	r2, r2, r3
   140fc:	ldr	r3, [pc, #2788]	; 14be8 <rb_base64_encode@plt+0x3c70>
   14100:	add	r3, r2, r3
   14104:	ldr	r2, [fp, #-20]	; 0xffffffec
   14108:	add	r3, r2, r3
   1410c:	str	r3, [fp, #-20]	; 0xffffffec
   14110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14114:	ror	r3, r3, #2
   14118:	str	r3, [fp, #-28]	; 0xffffffe4
   1411c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14124:	eor	r2, r2, r3
   14128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1412c:	and	r2, r2, r3
   14130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14134:	eor	r4, r2, r3
   14138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1413c:	mov	r0, r3
   14140:	bl	10f24 <htonl@plt>
   14144:	mov	r3, r0
   14148:	str	r3, [fp, #-40]	; 0xffffffd8
   1414c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14150:	add	r2, r4, r3
   14154:	ldr	r3, [fp, #-20]	; 0xffffffec
   14158:	ror	r3, r3, #27
   1415c:	add	r2, r2, r3
   14160:	ldr	r3, [pc, #2688]	; 14be8 <rb_base64_encode@plt+0x3c70>
   14164:	add	r3, r2, r3
   14168:	ldr	r2, [fp, #-16]
   1416c:	add	r3, r2, r3
   14170:	str	r3, [fp, #-16]
   14174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14178:	ror	r3, r3, #2
   1417c:	str	r3, [fp, #-24]	; 0xffffffe8
   14180:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14188:	eor	r2, r2, r3
   1418c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14190:	and	r2, r2, r3
   14194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14198:	eor	r4, r2, r3
   1419c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141a0:	mov	r0, r3
   141a4:	bl	10f24 <htonl@plt>
   141a8:	mov	r3, r0
   141ac:	str	r3, [fp, #-36]	; 0xffffffdc
   141b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141b4:	add	r2, r4, r3
   141b8:	ldr	r3, [fp, #-16]
   141bc:	ror	r3, r3, #27
   141c0:	add	r2, r2, r3
   141c4:	ldr	r3, [pc, #2588]	; 14be8 <rb_base64_encode@plt+0x3c70>
   141c8:	add	r3, r2, r3
   141cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141d0:	add	r3, r2, r3
   141d4:	str	r3, [fp, #-32]	; 0xffffffe0
   141d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   141dc:	ror	r3, r3, #2
   141e0:	str	r3, [fp, #-20]	; 0xffffffec
   141e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   141e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141ec:	eor	r2, r2, r3
   141f0:	ldr	r3, [fp, #-16]
   141f4:	and	r2, r2, r3
   141f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141fc:	eor	r2, r2, r3
   14200:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14204:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14208:	eor	r1, r1, r3
   1420c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14210:	eor	r1, r1, r3
   14214:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14218:	eor	r3, r3, r1
   1421c:	ror	r3, r3, #31
   14220:	str	r3, [fp, #-96]	; 0xffffffa0
   14224:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14228:	add	r2, r2, r3
   1422c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14230:	ror	r3, r3, #27
   14234:	add	r2, r2, r3
   14238:	ldr	r3, [pc, #2472]	; 14be8 <rb_base64_encode@plt+0x3c70>
   1423c:	add	r3, r2, r3
   14240:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14244:	add	r3, r2, r3
   14248:	str	r3, [fp, #-28]	; 0xffffffe4
   1424c:	ldr	r3, [fp, #-16]
   14250:	ror	r3, r3, #2
   14254:	str	r3, [fp, #-16]
   14258:	ldr	r2, [fp, #-16]
   1425c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14260:	eor	r2, r2, r3
   14264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14268:	and	r2, r2, r3
   1426c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14270:	eor	r2, r2, r3
   14274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14278:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1427c:	eor	r1, r1, r3
   14280:	ldr	r3, [fp, #-84]	; 0xffffffac
   14284:	eor	r1, r1, r3
   14288:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1428c:	eor	r3, r3, r1
   14290:	ror	r3, r3, #31
   14294:	str	r3, [fp, #-92]	; 0xffffffa4
   14298:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1429c:	add	r2, r2, r3
   142a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142a4:	ror	r3, r3, #27
   142a8:	add	r2, r2, r3
   142ac:	ldr	r3, [pc, #2356]	; 14be8 <rb_base64_encode@plt+0x3c70>
   142b0:	add	r3, r2, r3
   142b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   142b8:	add	r3, r2, r3
   142bc:	str	r3, [fp, #-24]	; 0xffffffe8
   142c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142c4:	ror	r3, r3, #2
   142c8:	str	r3, [fp, #-32]	; 0xffffffe0
   142cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   142d0:	ldr	r3, [fp, #-16]
   142d4:	eor	r2, r2, r3
   142d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142dc:	and	r2, r2, r3
   142e0:	ldr	r3, [fp, #-16]
   142e4:	eor	r2, r2, r3
   142e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   142ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   142f0:	eor	r1, r1, r3
   142f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   142f8:	eor	r1, r1, r3
   142fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14300:	eor	r3, r3, r1
   14304:	ror	r3, r3, #31
   14308:	str	r3, [fp, #-88]	; 0xffffffa8
   1430c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14310:	add	r2, r2, r3
   14314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14318:	ror	r3, r3, #27
   1431c:	add	r2, r2, r3
   14320:	ldr	r3, [pc, #2240]	; 14be8 <rb_base64_encode@plt+0x3c70>
   14324:	add	r3, r2, r3
   14328:	ldr	r2, [fp, #-20]	; 0xffffffec
   1432c:	add	r3, r2, r3
   14330:	str	r3, [fp, #-20]	; 0xffffffec
   14334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14338:	ror	r3, r3, #2
   1433c:	str	r3, [fp, #-28]	; 0xffffffe4
   14340:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14344:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14348:	eor	r2, r2, r3
   1434c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14350:	and	r2, r2, r3
   14354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14358:	eor	r2, r2, r3
   1435c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14360:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14364:	eor	r1, r1, r3
   14368:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1436c:	eor	r1, r1, r3
   14370:	ldr	r3, [fp, #-84]	; 0xffffffac
   14374:	eor	r3, r3, r1
   14378:	ror	r3, r3, #31
   1437c:	str	r3, [fp, #-84]	; 0xffffffac
   14380:	ldr	r3, [fp, #-84]	; 0xffffffac
   14384:	add	r2, r2, r3
   14388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1438c:	ror	r3, r3, #27
   14390:	add	r2, r2, r3
   14394:	ldr	r3, [pc, #2124]	; 14be8 <rb_base64_encode@plt+0x3c70>
   14398:	add	r3, r2, r3
   1439c:	ldr	r2, [fp, #-16]
   143a0:	add	r3, r2, r3
   143a4:	str	r3, [fp, #-16]
   143a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143ac:	ror	r3, r3, #2
   143b0:	str	r3, [fp, #-24]	; 0xffffffe8
   143b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   143b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143bc:	eor	r2, r2, r3
   143c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   143c4:	eor	r2, r2, r3
   143c8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   143cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   143d0:	eor	r1, r1, r3
   143d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   143d8:	eor	r1, r1, r3
   143dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143e0:	eor	r3, r3, r1
   143e4:	ror	r3, r3, #31
   143e8:	str	r3, [fp, #-80]	; 0xffffffb0
   143ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143f0:	add	r2, r2, r3
   143f4:	ldr	r3, [fp, #-16]
   143f8:	ror	r3, r3, #27
   143fc:	add	r2, r2, r3
   14400:	ldr	r3, [pc, #2020]	; 14bec <rb_base64_encode@plt+0x3c74>
   14404:	add	r3, r2, r3
   14408:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1440c:	add	r3, r2, r3
   14410:	str	r3, [fp, #-32]	; 0xffffffe0
   14414:	ldr	r3, [fp, #-20]	; 0xffffffec
   14418:	ror	r3, r3, #2
   1441c:	str	r3, [fp, #-20]	; 0xffffffec
   14420:	ldr	r2, [fp, #-16]
   14424:	ldr	r3, [fp, #-20]	; 0xffffffec
   14428:	eor	r2, r2, r3
   1442c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14430:	eor	r2, r2, r3
   14434:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1443c:	eor	r1, r1, r3
   14440:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14444:	eor	r1, r1, r3
   14448:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1444c:	eor	r3, r3, r1
   14450:	ror	r3, r3, #31
   14454:	str	r3, [fp, #-76]	; 0xffffffb4
   14458:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1445c:	add	r2, r2, r3
   14460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14464:	ror	r3, r3, #27
   14468:	add	r2, r2, r3
   1446c:	ldr	r3, [pc, #1912]	; 14bec <rb_base64_encode@plt+0x3c74>
   14470:	add	r3, r2, r3
   14474:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14478:	add	r3, r2, r3
   1447c:	str	r3, [fp, #-28]	; 0xffffffe4
   14480:	ldr	r3, [fp, #-16]
   14484:	ror	r3, r3, #2
   14488:	str	r3, [fp, #-16]
   1448c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14490:	ldr	r3, [fp, #-16]
   14494:	eor	r2, r2, r3
   14498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1449c:	eor	r2, r2, r3
   144a0:	ldr	r1, [fp, #-84]	; 0xffffffac
   144a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144a8:	eor	r1, r1, r3
   144ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   144b0:	eor	r1, r1, r3
   144b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   144b8:	eor	r3, r3, r1
   144bc:	ror	r3, r3, #31
   144c0:	str	r3, [fp, #-72]	; 0xffffffb8
   144c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   144c8:	add	r2, r2, r3
   144cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144d0:	ror	r3, r3, #27
   144d4:	add	r2, r2, r3
   144d8:	ldr	r3, [pc, #1804]	; 14bec <rb_base64_encode@plt+0x3c74>
   144dc:	add	r3, r2, r3
   144e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144e4:	add	r3, r2, r3
   144e8:	str	r3, [fp, #-24]	; 0xffffffe8
   144ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144f0:	ror	r3, r3, #2
   144f4:	str	r3, [fp, #-32]	; 0xffffffe0
   144f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14500:	eor	r2, r2, r3
   14504:	ldr	r3, [fp, #-16]
   14508:	eor	r2, r2, r3
   1450c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14514:	eor	r1, r1, r3
   14518:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1451c:	eor	r1, r1, r3
   14520:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14524:	eor	r3, r3, r1
   14528:	ror	r3, r3, #31
   1452c:	str	r3, [fp, #-68]	; 0xffffffbc
   14530:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14534:	add	r2, r2, r3
   14538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1453c:	ror	r3, r3, #27
   14540:	add	r2, r2, r3
   14544:	ldr	r3, [pc, #1696]	; 14bec <rb_base64_encode@plt+0x3c74>
   14548:	add	r3, r2, r3
   1454c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14550:	add	r3, r2, r3
   14554:	str	r3, [fp, #-20]	; 0xffffffec
   14558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1455c:	ror	r3, r3, #2
   14560:	str	r3, [fp, #-28]	; 0xffffffe4
   14564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1456c:	eor	r2, r2, r3
   14570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14574:	eor	r2, r2, r3
   14578:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1457c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14580:	eor	r1, r1, r3
   14584:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14588:	eor	r1, r1, r3
   1458c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14590:	eor	r3, r3, r1
   14594:	ror	r3, r3, #31
   14598:	str	r3, [fp, #-64]	; 0xffffffc0
   1459c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   145a0:	add	r2, r2, r3
   145a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145a8:	ror	r3, r3, #27
   145ac:	add	r2, r2, r3
   145b0:	ldr	r3, [pc, #1588]	; 14bec <rb_base64_encode@plt+0x3c74>
   145b4:	add	r3, r2, r3
   145b8:	ldr	r2, [fp, #-16]
   145bc:	add	r3, r2, r3
   145c0:	str	r3, [fp, #-16]
   145c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145c8:	ror	r3, r3, #2
   145cc:	str	r3, [fp, #-24]	; 0xffffffe8
   145d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   145d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145d8:	eor	r2, r2, r3
   145dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145e0:	eor	r2, r2, r3
   145e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   145e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   145ec:	eor	r1, r1, r3
   145f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   145f4:	eor	r1, r1, r3
   145f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   145fc:	eor	r3, r3, r1
   14600:	ror	r3, r3, #31
   14604:	str	r3, [fp, #-60]	; 0xffffffc4
   14608:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1460c:	add	r2, r2, r3
   14610:	ldr	r3, [fp, #-16]
   14614:	ror	r3, r3, #27
   14618:	add	r2, r2, r3
   1461c:	ldr	r3, [pc, #1480]	; 14bec <rb_base64_encode@plt+0x3c74>
   14620:	add	r3, r2, r3
   14624:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14628:	add	r3, r2, r3
   1462c:	str	r3, [fp, #-32]	; 0xffffffe0
   14630:	ldr	r3, [fp, #-20]	; 0xffffffec
   14634:	ror	r3, r3, #2
   14638:	str	r3, [fp, #-20]	; 0xffffffec
   1463c:	ldr	r2, [fp, #-16]
   14640:	ldr	r3, [fp, #-20]	; 0xffffffec
   14644:	eor	r2, r2, r3
   14648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1464c:	eor	r2, r2, r3
   14650:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14654:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14658:	eor	r1, r1, r3
   1465c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14660:	eor	r1, r1, r3
   14664:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14668:	eor	r3, r3, r1
   1466c:	ror	r3, r3, #31
   14670:	str	r3, [fp, #-56]	; 0xffffffc8
   14674:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14678:	add	r2, r2, r3
   1467c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14680:	ror	r3, r3, #27
   14684:	add	r2, r2, r3
   14688:	ldr	r3, [pc, #1372]	; 14bec <rb_base64_encode@plt+0x3c74>
   1468c:	add	r3, r2, r3
   14690:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14694:	add	r3, r2, r3
   14698:	str	r3, [fp, #-28]	; 0xffffffe4
   1469c:	ldr	r3, [fp, #-16]
   146a0:	ror	r3, r3, #2
   146a4:	str	r3, [fp, #-16]
   146a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   146ac:	ldr	r3, [fp, #-16]
   146b0:	eor	r2, r2, r3
   146b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146b8:	eor	r2, r2, r3
   146bc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   146c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   146c4:	eor	r1, r1, r3
   146c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   146cc:	eor	r1, r1, r3
   146d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   146d4:	eor	r3, r3, r1
   146d8:	ror	r3, r3, #31
   146dc:	str	r3, [fp, #-52]	; 0xffffffcc
   146e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   146e4:	add	r2, r2, r3
   146e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146ec:	ror	r3, r3, #27
   146f0:	add	r2, r2, r3
   146f4:	ldr	r3, [pc, #1264]	; 14bec <rb_base64_encode@plt+0x3c74>
   146f8:	add	r3, r2, r3
   146fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14700:	add	r3, r2, r3
   14704:	str	r3, [fp, #-24]	; 0xffffffe8
   14708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1470c:	ror	r3, r3, #2
   14710:	str	r3, [fp, #-32]	; 0xffffffe0
   14714:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1471c:	eor	r2, r2, r3
   14720:	ldr	r3, [fp, #-16]
   14724:	eor	r2, r2, r3
   14728:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1472c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14730:	eor	r1, r1, r3
   14734:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14738:	eor	r1, r1, r3
   1473c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14740:	eor	r3, r3, r1
   14744:	ror	r3, r3, #31
   14748:	str	r3, [fp, #-48]	; 0xffffffd0
   1474c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14750:	add	r2, r2, r3
   14754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14758:	ror	r3, r3, #27
   1475c:	add	r2, r2, r3
   14760:	ldr	r3, [pc, #1156]	; 14bec <rb_base64_encode@plt+0x3c74>
   14764:	add	r3, r2, r3
   14768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1476c:	add	r3, r2, r3
   14770:	str	r3, [fp, #-20]	; 0xffffffec
   14774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14778:	ror	r3, r3, #2
   1477c:	str	r3, [fp, #-28]	; 0xffffffe4
   14780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14788:	eor	r2, r2, r3
   1478c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14790:	eor	r2, r2, r3
   14794:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14798:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1479c:	eor	r1, r1, r3
   147a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   147a4:	eor	r1, r1, r3
   147a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   147ac:	eor	r3, r3, r1
   147b0:	ror	r3, r3, #31
   147b4:	str	r3, [fp, #-44]	; 0xffffffd4
   147b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   147bc:	add	r2, r2, r3
   147c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   147c4:	ror	r3, r3, #27
   147c8:	add	r2, r2, r3
   147cc:	ldr	r3, [pc, #1048]	; 14bec <rb_base64_encode@plt+0x3c74>
   147d0:	add	r3, r2, r3
   147d4:	ldr	r2, [fp, #-16]
   147d8:	add	r3, r2, r3
   147dc:	str	r3, [fp, #-16]
   147e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147e4:	ror	r3, r3, #2
   147e8:	str	r3, [fp, #-24]	; 0xffffffe8
   147ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   147f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   147f4:	eor	r2, r2, r3
   147f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147fc:	eor	r2, r2, r3
   14800:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14804:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14808:	eor	r1, r1, r3
   1480c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14810:	eor	r1, r1, r3
   14814:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14818:	eor	r3, r3, r1
   1481c:	ror	r3, r3, #31
   14820:	str	r3, [fp, #-40]	; 0xffffffd8
   14824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14828:	add	r2, r2, r3
   1482c:	ldr	r3, [fp, #-16]
   14830:	ror	r3, r3, #27
   14834:	add	r2, r2, r3
   14838:	ldr	r3, [pc, #940]	; 14bec <rb_base64_encode@plt+0x3c74>
   1483c:	add	r3, r2, r3
   14840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14844:	add	r3, r2, r3
   14848:	str	r3, [fp, #-32]	; 0xffffffe0
   1484c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14850:	ror	r3, r3, #2
   14854:	str	r3, [fp, #-20]	; 0xffffffec
   14858:	ldr	r2, [fp, #-16]
   1485c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14860:	eor	r2, r2, r3
   14864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14868:	eor	r2, r2, r3
   1486c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14870:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14874:	eor	r1, r1, r3
   14878:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1487c:	eor	r1, r1, r3
   14880:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14884:	eor	r3, r3, r1
   14888:	ror	r3, r3, #31
   1488c:	str	r3, [fp, #-36]	; 0xffffffdc
   14890:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14894:	add	r2, r2, r3
   14898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1489c:	ror	r3, r3, #27
   148a0:	add	r2, r2, r3
   148a4:	ldr	r3, [pc, #832]	; 14bec <rb_base64_encode@plt+0x3c74>
   148a8:	add	r3, r2, r3
   148ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   148b0:	add	r3, r2, r3
   148b4:	str	r3, [fp, #-28]	; 0xffffffe4
   148b8:	ldr	r3, [fp, #-16]
   148bc:	ror	r3, r3, #2
   148c0:	str	r3, [fp, #-16]
   148c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   148c8:	ldr	r3, [fp, #-16]
   148cc:	eor	r2, r2, r3
   148d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   148d4:	eor	r2, r2, r3
   148d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   148e0:	eor	r1, r1, r3
   148e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   148e8:	eor	r1, r1, r3
   148ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   148f0:	eor	r3, r3, r1
   148f4:	ror	r3, r3, #31
   148f8:	str	r3, [fp, #-96]	; 0xffffffa0
   148fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14900:	add	r2, r2, r3
   14904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14908:	ror	r3, r3, #27
   1490c:	add	r2, r2, r3
   14910:	ldr	r3, [pc, #724]	; 14bec <rb_base64_encode@plt+0x3c74>
   14914:	add	r3, r2, r3
   14918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1491c:	add	r3, r2, r3
   14920:	str	r3, [fp, #-24]	; 0xffffffe8
   14924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14928:	ror	r3, r3, #2
   1492c:	str	r3, [fp, #-32]	; 0xffffffe0
   14930:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14938:	eor	r2, r2, r3
   1493c:	ldr	r3, [fp, #-16]
   14940:	eor	r2, r2, r3
   14944:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14948:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1494c:	eor	r1, r1, r3
   14950:	ldr	r3, [fp, #-84]	; 0xffffffac
   14954:	eor	r1, r1, r3
   14958:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1495c:	eor	r3, r3, r1
   14960:	ror	r3, r3, #31
   14964:	str	r3, [fp, #-92]	; 0xffffffa4
   14968:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1496c:	add	r2, r2, r3
   14970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14974:	ror	r3, r3, #27
   14978:	add	r2, r2, r3
   1497c:	ldr	r3, [pc, #616]	; 14bec <rb_base64_encode@plt+0x3c74>
   14980:	add	r3, r2, r3
   14984:	ldr	r2, [fp, #-20]	; 0xffffffec
   14988:	add	r3, r2, r3
   1498c:	str	r3, [fp, #-20]	; 0xffffffec
   14990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14994:	ror	r3, r3, #2
   14998:	str	r3, [fp, #-28]	; 0xffffffe4
   1499c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   149a4:	eor	r2, r2, r3
   149a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   149ac:	eor	r2, r2, r3
   149b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   149b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   149b8:	eor	r1, r1, r3
   149bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   149c0:	eor	r1, r1, r3
   149c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   149c8:	eor	r3, r3, r1
   149cc:	ror	r3, r3, #31
   149d0:	str	r3, [fp, #-88]	; 0xffffffa8
   149d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   149d8:	add	r2, r2, r3
   149dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   149e0:	ror	r3, r3, #27
   149e4:	add	r2, r2, r3
   149e8:	ldr	r3, [pc, #508]	; 14bec <rb_base64_encode@plt+0x3c74>
   149ec:	add	r3, r2, r3
   149f0:	ldr	r2, [fp, #-16]
   149f4:	add	r3, r2, r3
   149f8:	str	r3, [fp, #-16]
   149fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a00:	ror	r3, r3, #2
   14a04:	str	r3, [fp, #-24]	; 0xffffffe8
   14a08:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a10:	eor	r2, r2, r3
   14a14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14a18:	eor	r2, r2, r3
   14a1c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14a20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14a24:	eor	r1, r1, r3
   14a28:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14a2c:	eor	r1, r1, r3
   14a30:	ldr	r3, [fp, #-84]	; 0xffffffac
   14a34:	eor	r3, r3, r1
   14a38:	ror	r3, r3, #31
   14a3c:	str	r3, [fp, #-84]	; 0xffffffac
   14a40:	ldr	r3, [fp, #-84]	; 0xffffffac
   14a44:	add	r2, r2, r3
   14a48:	ldr	r3, [fp, #-16]
   14a4c:	ror	r3, r3, #27
   14a50:	add	r2, r2, r3
   14a54:	ldr	r3, [pc, #400]	; 14bec <rb_base64_encode@plt+0x3c74>
   14a58:	add	r3, r2, r3
   14a5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a60:	add	r3, r2, r3
   14a64:	str	r3, [fp, #-32]	; 0xffffffe0
   14a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a6c:	ror	r3, r3, #2
   14a70:	str	r3, [fp, #-20]	; 0xffffffec
   14a74:	ldr	r2, [fp, #-16]
   14a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a7c:	eor	r2, r2, r3
   14a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a84:	eor	r2, r2, r3
   14a88:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14a8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14a90:	eor	r1, r1, r3
   14a94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14a98:	eor	r1, r1, r3
   14a9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14aa0:	eor	r3, r3, r1
   14aa4:	ror	r3, r3, #31
   14aa8:	str	r3, [fp, #-80]	; 0xffffffb0
   14aac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14ab0:	add	r2, r2, r3
   14ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ab8:	ror	r3, r3, #27
   14abc:	add	r2, r2, r3
   14ac0:	ldr	r3, [pc, #292]	; 14bec <rb_base64_encode@plt+0x3c74>
   14ac4:	add	r3, r2, r3
   14ac8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14acc:	add	r3, r2, r3
   14ad0:	str	r3, [fp, #-28]	; 0xffffffe4
   14ad4:	ldr	r3, [fp, #-16]
   14ad8:	ror	r3, r3, #2
   14adc:	str	r3, [fp, #-16]
   14ae0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ae4:	ldr	r3, [fp, #-16]
   14ae8:	eor	r2, r2, r3
   14aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14af0:	eor	r2, r2, r3
   14af4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14af8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14afc:	eor	r1, r1, r3
   14b00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14b04:	eor	r1, r1, r3
   14b08:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14b0c:	eor	r3, r3, r1
   14b10:	ror	r3, r3, #31
   14b14:	str	r3, [fp, #-76]	; 0xffffffb4
   14b18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14b1c:	add	r2, r2, r3
   14b20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b24:	ror	r3, r3, #27
   14b28:	add	r2, r2, r3
   14b2c:	ldr	r3, [pc, #184]	; 14bec <rb_base64_encode@plt+0x3c74>
   14b30:	add	r3, r2, r3
   14b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b38:	add	r3, r2, r3
   14b3c:	str	r3, [fp, #-24]	; 0xffffffe8
   14b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b44:	ror	r3, r3, #2
   14b48:	str	r3, [fp, #-32]	; 0xffffffe0
   14b4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b54:	eor	r2, r2, r3
   14b58:	ldr	r3, [fp, #-16]
   14b5c:	eor	r2, r2, r3
   14b60:	ldr	r1, [fp, #-84]	; 0xffffffac
   14b64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14b68:	eor	r1, r1, r3
   14b6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14b70:	eor	r1, r1, r3
   14b74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14b78:	eor	r3, r3, r1
   14b7c:	ror	r3, r3, #31
   14b80:	str	r3, [fp, #-72]	; 0xffffffb8
   14b84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14b88:	add	r2, r2, r3
   14b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b90:	ror	r3, r3, #27
   14b94:	add	r2, r2, r3
   14b98:	ldr	r3, [pc, #76]	; 14bec <rb_base64_encode@plt+0x3c74>
   14b9c:	add	r3, r2, r3
   14ba0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ba4:	add	r3, r2, r3
   14ba8:	str	r3, [fp, #-20]	; 0xffffffec
   14bac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bb0:	ror	r3, r3, #2
   14bb4:	str	r3, [fp, #-28]	; 0xffffffe4
   14bb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14bc0:	eor	r2, r2, r3
   14bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14bc8:	eor	r2, r2, r3
   14bcc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14bd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bd4:	eor	r1, r1, r3
   14bd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14bdc:	eor	r1, r1, r3
   14be0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14be4:	b	14bf8 <rb_base64_encode@plt+0x3c80>
   14be8:	bpl	fe0b3254 <rb_base64_encode@plt+0xfe0a22dc>
   14bec:	vfnmsvs.f64	d30, d25, d17
   14bf0:	svchi	0x001bbcdc
   14bf4:	bgt	18c5354 <rb_base64_encode@plt+0x18b43dc>
   14bf8:	eor	r3, r3, r1
   14bfc:	ror	r3, r3, #31
   14c00:	str	r3, [fp, #-68]	; 0xffffffbc
   14c04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14c08:	add	r2, r2, r3
   14c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c10:	ror	r3, r3, #27
   14c14:	add	r2, r2, r3
   14c18:	ldr	r3, [pc, #-52]	; 14bec <rb_base64_encode@plt+0x3c74>
   14c1c:	add	r3, r2, r3
   14c20:	ldr	r2, [fp, #-16]
   14c24:	add	r3, r2, r3
   14c28:	str	r3, [fp, #-16]
   14c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c30:	ror	r3, r3, #2
   14c34:	str	r3, [fp, #-24]	; 0xffffffe8
   14c38:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c40:	orr	r2, r2, r3
   14c44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c48:	and	r2, r2, r3
   14c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c54:	and	r3, r3, r1
   14c58:	orr	r2, r2, r3
   14c5c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14c60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14c64:	eor	r1, r1, r3
   14c68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14c6c:	eor	r1, r1, r3
   14c70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14c74:	eor	r3, r3, r1
   14c78:	ror	r3, r3, #31
   14c7c:	str	r3, [fp, #-64]	; 0xffffffc0
   14c80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14c84:	add	r2, r2, r3
   14c88:	ldr	r3, [fp, #-16]
   14c8c:	ror	r3, r3, #27
   14c90:	add	r2, r2, r3
   14c94:	ldr	r3, [pc, #-172]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14c98:	add	r3, r2, r3
   14c9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14ca0:	add	r3, r2, r3
   14ca4:	str	r3, [fp, #-32]	; 0xffffffe0
   14ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cac:	ror	r3, r3, #2
   14cb0:	str	r3, [fp, #-20]	; 0xffffffec
   14cb4:	ldr	r2, [fp, #-16]
   14cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cbc:	orr	r2, r2, r3
   14cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cc4:	and	r2, r2, r3
   14cc8:	ldr	r1, [fp, #-16]
   14ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cd0:	and	r3, r3, r1
   14cd4:	orr	r2, r2, r3
   14cd8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14cdc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ce0:	eor	r1, r1, r3
   14ce4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14ce8:	eor	r1, r1, r3
   14cec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14cf0:	eor	r3, r3, r1
   14cf4:	ror	r3, r3, #31
   14cf8:	str	r3, [fp, #-60]	; 0xffffffc4
   14cfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14d00:	add	r2, r2, r3
   14d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d08:	ror	r3, r3, #27
   14d0c:	add	r2, r2, r3
   14d10:	ldr	r3, [pc, #-296]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14d14:	add	r3, r2, r3
   14d18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14d1c:	add	r3, r2, r3
   14d20:	str	r3, [fp, #-28]	; 0xffffffe4
   14d24:	ldr	r3, [fp, #-16]
   14d28:	ror	r3, r3, #2
   14d2c:	str	r3, [fp, #-16]
   14d30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d34:	ldr	r3, [fp, #-16]
   14d38:	orr	r2, r2, r3
   14d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d40:	and	r2, r2, r3
   14d44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d48:	ldr	r3, [fp, #-16]
   14d4c:	and	r3, r3, r1
   14d50:	orr	r2, r2, r3
   14d54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14d58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14d5c:	eor	r1, r1, r3
   14d60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14d64:	eor	r1, r1, r3
   14d68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14d6c:	eor	r3, r3, r1
   14d70:	ror	r3, r3, #31
   14d74:	str	r3, [fp, #-56]	; 0xffffffc8
   14d78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14d7c:	add	r2, r2, r3
   14d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d84:	ror	r3, r3, #27
   14d88:	add	r2, r2, r3
   14d8c:	ldr	r3, [pc, #-420]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14d90:	add	r3, r2, r3
   14d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d98:	add	r3, r2, r3
   14d9c:	str	r3, [fp, #-24]	; 0xffffffe8
   14da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14da4:	ror	r3, r3, #2
   14da8:	str	r3, [fp, #-32]	; 0xffffffe0
   14dac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14db0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14db4:	orr	r2, r2, r3
   14db8:	ldr	r3, [fp, #-16]
   14dbc:	and	r2, r2, r3
   14dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14dc8:	and	r3, r3, r1
   14dcc:	orr	r2, r2, r3
   14dd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14dd4:	ldr	r3, [fp, #-84]	; 0xffffffac
   14dd8:	eor	r1, r1, r3
   14ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14de0:	eor	r1, r1, r3
   14de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14de8:	eor	r3, r3, r1
   14dec:	ror	r3, r3, #31
   14df0:	str	r3, [fp, #-52]	; 0xffffffcc
   14df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14df8:	add	r2, r2, r3
   14dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e00:	ror	r3, r3, #27
   14e04:	add	r2, r2, r3
   14e08:	ldr	r3, [pc, #-544]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14e0c:	add	r3, r2, r3
   14e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e14:	add	r3, r2, r3
   14e18:	str	r3, [fp, #-20]	; 0xffffffec
   14e1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e20:	ror	r3, r3, #2
   14e24:	str	r3, [fp, #-28]	; 0xffffffe4
   14e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e30:	orr	r2, r2, r3
   14e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e38:	and	r2, r2, r3
   14e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e44:	and	r3, r3, r1
   14e48:	orr	r2, r2, r3
   14e4c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14e50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14e54:	eor	r1, r1, r3
   14e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14e5c:	eor	r1, r1, r3
   14e60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e64:	eor	r3, r3, r1
   14e68:	ror	r3, r3, #31
   14e6c:	str	r3, [fp, #-48]	; 0xffffffd0
   14e70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e74:	add	r2, r2, r3
   14e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e7c:	ror	r3, r3, #27
   14e80:	add	r2, r2, r3
   14e84:	ldr	r3, [pc, #-668]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14e88:	add	r3, r2, r3
   14e8c:	ldr	r2, [fp, #-16]
   14e90:	add	r3, r2, r3
   14e94:	str	r3, [fp, #-16]
   14e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e9c:	ror	r3, r3, #2
   14ea0:	str	r3, [fp, #-24]	; 0xffffffe8
   14ea4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14eac:	orr	r2, r2, r3
   14eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14eb4:	and	r2, r2, r3
   14eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ec0:	and	r3, r3, r1
   14ec4:	orr	r2, r2, r3
   14ec8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14ecc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14ed0:	eor	r1, r1, r3
   14ed4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ed8:	eor	r1, r1, r3
   14edc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ee0:	eor	r3, r3, r1
   14ee4:	ror	r3, r3, #31
   14ee8:	str	r3, [fp, #-44]	; 0xffffffd4
   14eec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14ef0:	add	r2, r2, r3
   14ef4:	ldr	r3, [fp, #-16]
   14ef8:	ror	r3, r3, #27
   14efc:	add	r2, r2, r3
   14f00:	ldr	r3, [pc, #-792]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14f04:	add	r3, r2, r3
   14f08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f0c:	add	r3, r2, r3
   14f10:	str	r3, [fp, #-32]	; 0xffffffe0
   14f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f18:	ror	r3, r3, #2
   14f1c:	str	r3, [fp, #-20]	; 0xffffffec
   14f20:	ldr	r2, [fp, #-16]
   14f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f28:	orr	r2, r2, r3
   14f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f30:	and	r2, r2, r3
   14f34:	ldr	r1, [fp, #-16]
   14f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f3c:	and	r3, r3, r1
   14f40:	orr	r2, r2, r3
   14f44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14f48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14f4c:	eor	r1, r1, r3
   14f50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14f54:	eor	r1, r1, r3
   14f58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14f5c:	eor	r3, r3, r1
   14f60:	ror	r3, r3, #31
   14f64:	str	r3, [fp, #-40]	; 0xffffffd8
   14f68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14f6c:	add	r2, r2, r3
   14f70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f74:	ror	r3, r3, #27
   14f78:	add	r2, r2, r3
   14f7c:	ldr	r3, [pc, #-916]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14f80:	add	r3, r2, r3
   14f84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14f88:	add	r3, r2, r3
   14f8c:	str	r3, [fp, #-28]	; 0xffffffe4
   14f90:	ldr	r3, [fp, #-16]
   14f94:	ror	r3, r3, #2
   14f98:	str	r3, [fp, #-16]
   14f9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fa0:	ldr	r3, [fp, #-16]
   14fa4:	orr	r2, r2, r3
   14fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fac:	and	r2, r2, r3
   14fb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14fb4:	ldr	r3, [fp, #-16]
   14fb8:	and	r3, r3, r1
   14fbc:	orr	r2, r2, r3
   14fc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14fc4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14fc8:	eor	r1, r1, r3
   14fcc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14fd0:	eor	r1, r1, r3
   14fd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14fd8:	eor	r3, r3, r1
   14fdc:	ror	r3, r3, #31
   14fe0:	str	r3, [fp, #-36]	; 0xffffffdc
   14fe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14fe8:	add	r2, r2, r3
   14fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ff0:	ror	r3, r3, #27
   14ff4:	add	r2, r2, r3
   14ff8:	ldr	r3, [pc, #-1040]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   14ffc:	add	r3, r2, r3
   15000:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15004:	add	r3, r2, r3
   15008:	str	r3, [fp, #-24]	; 0xffffffe8
   1500c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15010:	ror	r3, r3, #2
   15014:	str	r3, [fp, #-32]	; 0xffffffe0
   15018:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1501c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15020:	orr	r2, r2, r3
   15024:	ldr	r3, [fp, #-16]
   15028:	and	r2, r2, r3
   1502c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15034:	and	r3, r3, r1
   15038:	orr	r2, r2, r3
   1503c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15040:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15044:	eor	r1, r1, r3
   15048:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1504c:	eor	r1, r1, r3
   15050:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15054:	eor	r3, r3, r1
   15058:	ror	r3, r3, #31
   1505c:	str	r3, [fp, #-96]	; 0xffffffa0
   15060:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15064:	add	r2, r2, r3
   15068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1506c:	ror	r3, r3, #27
   15070:	add	r2, r2, r3
   15074:	ldr	r3, [pc, #-1164]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15078:	add	r3, r2, r3
   1507c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15080:	add	r3, r2, r3
   15084:	str	r3, [fp, #-20]	; 0xffffffec
   15088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1508c:	ror	r3, r3, #2
   15090:	str	r3, [fp, #-28]	; 0xffffffe4
   15094:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15098:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1509c:	orr	r2, r2, r3
   150a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   150a4:	and	r2, r2, r3
   150a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b0:	and	r3, r3, r1
   150b4:	orr	r2, r2, r3
   150b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   150bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   150c0:	eor	r1, r1, r3
   150c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   150c8:	eor	r1, r1, r3
   150cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150d0:	eor	r3, r3, r1
   150d4:	ror	r3, r3, #31
   150d8:	str	r3, [fp, #-92]	; 0xffffffa4
   150dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150e0:	add	r2, r2, r3
   150e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150e8:	ror	r3, r3, #27
   150ec:	add	r2, r2, r3
   150f0:	ldr	r3, [pc, #-1288]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   150f4:	add	r3, r2, r3
   150f8:	ldr	r2, [fp, #-16]
   150fc:	add	r3, r2, r3
   15100:	str	r3, [fp, #-16]
   15104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15108:	ror	r3, r3, #2
   1510c:	str	r3, [fp, #-24]	; 0xffffffe8
   15110:	ldr	r2, [fp, #-20]	; 0xffffffec
   15114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15118:	orr	r2, r2, r3
   1511c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15120:	and	r2, r2, r3
   15124:	ldr	r1, [fp, #-20]	; 0xffffffec
   15128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1512c:	and	r3, r3, r1
   15130:	orr	r2, r2, r3
   15134:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15138:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1513c:	eor	r1, r1, r3
   15140:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15144:	eor	r1, r1, r3
   15148:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1514c:	eor	r3, r3, r1
   15150:	ror	r3, r3, #31
   15154:	str	r3, [fp, #-88]	; 0xffffffa8
   15158:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1515c:	add	r2, r2, r3
   15160:	ldr	r3, [fp, #-16]
   15164:	ror	r3, r3, #27
   15168:	add	r2, r2, r3
   1516c:	ldr	r3, [pc, #-1412]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15170:	add	r3, r2, r3
   15174:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15178:	add	r3, r2, r3
   1517c:	str	r3, [fp, #-32]	; 0xffffffe0
   15180:	ldr	r3, [fp, #-20]	; 0xffffffec
   15184:	ror	r3, r3, #2
   15188:	str	r3, [fp, #-20]	; 0xffffffec
   1518c:	ldr	r2, [fp, #-16]
   15190:	ldr	r3, [fp, #-20]	; 0xffffffec
   15194:	orr	r2, r2, r3
   15198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1519c:	and	r2, r2, r3
   151a0:	ldr	r1, [fp, #-16]
   151a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151a8:	and	r3, r3, r1
   151ac:	orr	r2, r2, r3
   151b0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   151b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   151b8:	eor	r1, r1, r3
   151bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   151c0:	eor	r1, r1, r3
   151c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   151c8:	eor	r3, r3, r1
   151cc:	ror	r3, r3, #31
   151d0:	str	r3, [fp, #-84]	; 0xffffffac
   151d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   151d8:	add	r2, r2, r3
   151dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   151e0:	ror	r3, r3, #27
   151e4:	add	r2, r2, r3
   151e8:	ldr	r3, [pc, #-1536]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   151ec:	add	r3, r2, r3
   151f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   151f4:	add	r3, r2, r3
   151f8:	str	r3, [fp, #-28]	; 0xffffffe4
   151fc:	ldr	r3, [fp, #-16]
   15200:	ror	r3, r3, #2
   15204:	str	r3, [fp, #-16]
   15208:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1520c:	ldr	r3, [fp, #-16]
   15210:	orr	r2, r2, r3
   15214:	ldr	r3, [fp, #-20]	; 0xffffffec
   15218:	and	r2, r2, r3
   1521c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15220:	ldr	r3, [fp, #-16]
   15224:	and	r3, r3, r1
   15228:	orr	r2, r2, r3
   1522c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15230:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15234:	eor	r1, r1, r3
   15238:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1523c:	eor	r1, r1, r3
   15240:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15244:	eor	r3, r3, r1
   15248:	ror	r3, r3, #31
   1524c:	str	r3, [fp, #-80]	; 0xffffffb0
   15250:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15254:	add	r2, r2, r3
   15258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1525c:	ror	r3, r3, #27
   15260:	add	r2, r2, r3
   15264:	ldr	r3, [pc, #-1660]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15268:	add	r3, r2, r3
   1526c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15270:	add	r3, r2, r3
   15274:	str	r3, [fp, #-24]	; 0xffffffe8
   15278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1527c:	ror	r3, r3, #2
   15280:	str	r3, [fp, #-32]	; 0xffffffe0
   15284:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1528c:	orr	r2, r2, r3
   15290:	ldr	r3, [fp, #-16]
   15294:	and	r2, r2, r3
   15298:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1529c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152a0:	and	r3, r3, r1
   152a4:	orr	r2, r2, r3
   152a8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   152ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152b0:	eor	r1, r1, r3
   152b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   152b8:	eor	r1, r1, r3
   152bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   152c0:	eor	r3, r3, r1
   152c4:	ror	r3, r3, #31
   152c8:	str	r3, [fp, #-76]	; 0xffffffb4
   152cc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   152d0:	add	r2, r2, r3
   152d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152d8:	ror	r3, r3, #27
   152dc:	add	r2, r2, r3
   152e0:	ldr	r3, [pc, #-1784]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   152e4:	add	r3, r2, r3
   152e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   152ec:	add	r3, r2, r3
   152f0:	str	r3, [fp, #-20]	; 0xffffffec
   152f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152f8:	ror	r3, r3, #2
   152fc:	str	r3, [fp, #-28]	; 0xffffffe4
   15300:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15304:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15308:	orr	r2, r2, r3
   1530c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15310:	and	r2, r2, r3
   15314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1531c:	and	r3, r3, r1
   15320:	orr	r2, r2, r3
   15324:	ldr	r1, [fp, #-84]	; 0xffffffac
   15328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1532c:	eor	r1, r1, r3
   15330:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15334:	eor	r1, r1, r3
   15338:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1533c:	eor	r3, r3, r1
   15340:	ror	r3, r3, #31
   15344:	str	r3, [fp, #-72]	; 0xffffffb8
   15348:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1534c:	add	r2, r2, r3
   15350:	ldr	r3, [fp, #-20]	; 0xffffffec
   15354:	ror	r3, r3, #27
   15358:	add	r2, r2, r3
   1535c:	ldr	r3, [pc, #-1908]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15360:	add	r3, r2, r3
   15364:	ldr	r2, [fp, #-16]
   15368:	add	r3, r2, r3
   1536c:	str	r3, [fp, #-16]
   15370:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15374:	ror	r3, r3, #2
   15378:	str	r3, [fp, #-24]	; 0xffffffe8
   1537c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15384:	orr	r2, r2, r3
   15388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1538c:	and	r2, r2, r3
   15390:	ldr	r1, [fp, #-20]	; 0xffffffec
   15394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15398:	and	r3, r3, r1
   1539c:	orr	r2, r2, r3
   153a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   153a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   153a8:	eor	r1, r1, r3
   153ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   153b0:	eor	r1, r1, r3
   153b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   153b8:	eor	r3, r3, r1
   153bc:	ror	r3, r3, #31
   153c0:	str	r3, [fp, #-68]	; 0xffffffbc
   153c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   153c8:	add	r2, r2, r3
   153cc:	ldr	r3, [fp, #-16]
   153d0:	ror	r3, r3, #27
   153d4:	add	r2, r2, r3
   153d8:	ldr	r3, [pc, #-2032]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   153dc:	add	r3, r2, r3
   153e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   153e4:	add	r3, r2, r3
   153e8:	str	r3, [fp, #-32]	; 0xffffffe0
   153ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   153f0:	ror	r3, r3, #2
   153f4:	str	r3, [fp, #-20]	; 0xffffffec
   153f8:	ldr	r2, [fp, #-16]
   153fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15400:	orr	r2, r2, r3
   15404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15408:	and	r2, r2, r3
   1540c:	ldr	r1, [fp, #-16]
   15410:	ldr	r3, [fp, #-20]	; 0xffffffec
   15414:	and	r3, r3, r1
   15418:	orr	r2, r2, r3
   1541c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15420:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15424:	eor	r1, r1, r3
   15428:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1542c:	eor	r1, r1, r3
   15430:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15434:	eor	r3, r3, r1
   15438:	ror	r3, r3, #31
   1543c:	str	r3, [fp, #-64]	; 0xffffffc0
   15440:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15444:	add	r2, r2, r3
   15448:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1544c:	ror	r3, r3, #27
   15450:	add	r2, r2, r3
   15454:	ldr	r3, [pc, #-2156]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15458:	add	r3, r2, r3
   1545c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15460:	add	r3, r2, r3
   15464:	str	r3, [fp, #-28]	; 0xffffffe4
   15468:	ldr	r3, [fp, #-16]
   1546c:	ror	r3, r3, #2
   15470:	str	r3, [fp, #-16]
   15474:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15478:	ldr	r3, [fp, #-16]
   1547c:	orr	r2, r2, r3
   15480:	ldr	r3, [fp, #-20]	; 0xffffffec
   15484:	and	r2, r2, r3
   15488:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1548c:	ldr	r3, [fp, #-16]
   15490:	and	r3, r3, r1
   15494:	orr	r2, r2, r3
   15498:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1549c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   154a0:	eor	r1, r1, r3
   154a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   154a8:	eor	r1, r1, r3
   154ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   154b0:	eor	r3, r3, r1
   154b4:	ror	r3, r3, #31
   154b8:	str	r3, [fp, #-60]	; 0xffffffc4
   154bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   154c0:	add	r2, r2, r3
   154c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154c8:	ror	r3, r3, #27
   154cc:	add	r2, r2, r3
   154d0:	ldr	r3, [pc, #-2280]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   154d4:	add	r3, r2, r3
   154d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154dc:	add	r3, r2, r3
   154e0:	str	r3, [fp, #-24]	; 0xffffffe8
   154e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154e8:	ror	r3, r3, #2
   154ec:	str	r3, [fp, #-32]	; 0xffffffe0
   154f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   154f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154f8:	orr	r2, r2, r3
   154fc:	ldr	r3, [fp, #-16]
   15500:	and	r2, r2, r3
   15504:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1550c:	and	r3, r3, r1
   15510:	orr	r2, r2, r3
   15514:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15518:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1551c:	eor	r1, r1, r3
   15520:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15524:	eor	r1, r1, r3
   15528:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1552c:	eor	r3, r3, r1
   15530:	ror	r3, r3, #31
   15534:	str	r3, [fp, #-56]	; 0xffffffc8
   15538:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1553c:	add	r2, r2, r3
   15540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15544:	ror	r3, r3, #27
   15548:	add	r2, r2, r3
   1554c:	ldr	r3, [pc, #-2404]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   15550:	add	r3, r2, r3
   15554:	ldr	r2, [fp, #-20]	; 0xffffffec
   15558:	add	r3, r2, r3
   1555c:	str	r3, [fp, #-20]	; 0xffffffec
   15560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15564:	ror	r3, r3, #2
   15568:	str	r3, [fp, #-28]	; 0xffffffe4
   1556c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15574:	orr	r2, r2, r3
   15578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1557c:	and	r2, r2, r3
   15580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15584:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15588:	and	r3, r3, r1
   1558c:	orr	r2, r2, r3
   15590:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15594:	ldr	r3, [fp, #-84]	; 0xffffffac
   15598:	eor	r1, r1, r3
   1559c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   155a0:	eor	r1, r1, r3
   155a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   155a8:	eor	r3, r3, r1
   155ac:	ror	r3, r3, #31
   155b0:	str	r3, [fp, #-52]	; 0xffffffcc
   155b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   155b8:	add	r2, r2, r3
   155bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   155c0:	ror	r3, r3, #27
   155c4:	add	r2, r2, r3
   155c8:	ldr	r3, [pc, #-2528]	; 14bf0 <rb_base64_encode@plt+0x3c78>
   155cc:	add	r3, r2, r3
   155d0:	ldr	r2, [fp, #-16]
   155d4:	add	r3, r2, r3
   155d8:	str	r3, [fp, #-16]
   155dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155e0:	ror	r3, r3, #2
   155e4:	str	r3, [fp, #-24]	; 0xffffffe8
   155e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   155ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155f0:	eor	r2, r2, r3
   155f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155f8:	eor	r2, r2, r3
   155fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15600:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15604:	eor	r1, r1, r3
   15608:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1560c:	eor	r1, r1, r3
   15610:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15614:	eor	r3, r3, r1
   15618:	ror	r3, r3, #31
   1561c:	str	r3, [fp, #-48]	; 0xffffffd0
   15620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15624:	add	r2, r2, r3
   15628:	ldr	r3, [fp, #-16]
   1562c:	ror	r3, r3, #27
   15630:	add	r2, r2, r3
   15634:	ldr	r3, [pc, #-2632]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15638:	add	r3, r2, r3
   1563c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15640:	add	r3, r2, r3
   15644:	str	r3, [fp, #-32]	; 0xffffffe0
   15648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1564c:	ror	r3, r3, #2
   15650:	str	r3, [fp, #-20]	; 0xffffffec
   15654:	ldr	r2, [fp, #-16]
   15658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1565c:	eor	r2, r2, r3
   15660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15664:	eor	r2, r2, r3
   15668:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1566c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15670:	eor	r1, r1, r3
   15674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15678:	eor	r1, r1, r3
   1567c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15680:	eor	r3, r3, r1
   15684:	ror	r3, r3, #31
   15688:	str	r3, [fp, #-44]	; 0xffffffd4
   1568c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15690:	add	r2, r2, r3
   15694:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15698:	ror	r3, r3, #27
   1569c:	add	r2, r2, r3
   156a0:	ldr	r3, [pc, #-2740]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   156a4:	add	r3, r2, r3
   156a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   156ac:	add	r3, r2, r3
   156b0:	str	r3, [fp, #-28]	; 0xffffffe4
   156b4:	ldr	r3, [fp, #-16]
   156b8:	ror	r3, r3, #2
   156bc:	str	r3, [fp, #-16]
   156c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   156c4:	ldr	r3, [fp, #-16]
   156c8:	eor	r2, r2, r3
   156cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   156d0:	eor	r2, r2, r3
   156d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   156d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   156dc:	eor	r1, r1, r3
   156e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156e4:	eor	r1, r1, r3
   156e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   156ec:	eor	r3, r3, r1
   156f0:	ror	r3, r3, #31
   156f4:	str	r3, [fp, #-40]	; 0xffffffd8
   156f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   156fc:	add	r2, r2, r3
   15700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15704:	ror	r3, r3, #27
   15708:	add	r2, r2, r3
   1570c:	ldr	r3, [pc, #-2848]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15710:	add	r3, r2, r3
   15714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15718:	add	r3, r2, r3
   1571c:	str	r3, [fp, #-24]	; 0xffffffe8
   15720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15724:	ror	r3, r3, #2
   15728:	str	r3, [fp, #-32]	; 0xffffffe0
   1572c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15730:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15734:	eor	r2, r2, r3
   15738:	ldr	r3, [fp, #-16]
   1573c:	eor	r2, r2, r3
   15740:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15744:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15748:	eor	r1, r1, r3
   1574c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15750:	eor	r1, r1, r3
   15754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15758:	eor	r3, r3, r1
   1575c:	ror	r3, r3, #31
   15760:	str	r3, [fp, #-36]	; 0xffffffdc
   15764:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15768:	add	r2, r2, r3
   1576c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15770:	ror	r3, r3, #27
   15774:	add	r2, r2, r3
   15778:	ldr	r3, [pc, #-2956]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   1577c:	add	r3, r2, r3
   15780:	ldr	r2, [fp, #-20]	; 0xffffffec
   15784:	add	r3, r2, r3
   15788:	str	r3, [fp, #-20]	; 0xffffffec
   1578c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15790:	ror	r3, r3, #2
   15794:	str	r3, [fp, #-28]	; 0xffffffe4
   15798:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1579c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157a0:	eor	r2, r2, r3
   157a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   157a8:	eor	r2, r2, r3
   157ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   157b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   157b4:	eor	r1, r1, r3
   157b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   157bc:	eor	r1, r1, r3
   157c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   157c4:	eor	r3, r3, r1
   157c8:	ror	r3, r3, #31
   157cc:	str	r3, [fp, #-96]	; 0xffffffa0
   157d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   157d4:	add	r2, r2, r3
   157d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   157dc:	ror	r3, r3, #27
   157e0:	add	r2, r2, r3
   157e4:	ldr	r3, [pc, #-3064]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   157e8:	add	r3, r2, r3
   157ec:	ldr	r2, [fp, #-16]
   157f0:	add	r3, r2, r3
   157f4:	str	r3, [fp, #-16]
   157f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   157fc:	ror	r3, r3, #2
   15800:	str	r3, [fp, #-24]	; 0xffffffe8
   15804:	ldr	r2, [fp, #-20]	; 0xffffffec
   15808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1580c:	eor	r2, r2, r3
   15810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15814:	eor	r2, r2, r3
   15818:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1581c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15820:	eor	r1, r1, r3
   15824:	ldr	r3, [fp, #-84]	; 0xffffffac
   15828:	eor	r1, r1, r3
   1582c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15830:	eor	r3, r3, r1
   15834:	ror	r3, r3, #31
   15838:	str	r3, [fp, #-92]	; 0xffffffa4
   1583c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15840:	add	r2, r2, r3
   15844:	ldr	r3, [fp, #-16]
   15848:	ror	r3, r3, #27
   1584c:	add	r2, r2, r3
   15850:	ldr	r3, [pc, #-3172]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15854:	add	r3, r2, r3
   15858:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1585c:	add	r3, r2, r3
   15860:	str	r3, [fp, #-32]	; 0xffffffe0
   15864:	ldr	r3, [fp, #-20]	; 0xffffffec
   15868:	ror	r3, r3, #2
   1586c:	str	r3, [fp, #-20]	; 0xffffffec
   15870:	ldr	r2, [fp, #-16]
   15874:	ldr	r3, [fp, #-20]	; 0xffffffec
   15878:	eor	r2, r2, r3
   1587c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15880:	eor	r2, r2, r3
   15884:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15888:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1588c:	eor	r1, r1, r3
   15890:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15894:	eor	r1, r1, r3
   15898:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1589c:	eor	r3, r3, r1
   158a0:	ror	r3, r3, #31
   158a4:	str	r3, [fp, #-88]	; 0xffffffa8
   158a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   158ac:	add	r2, r2, r3
   158b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158b4:	ror	r3, r3, #27
   158b8:	add	r2, r2, r3
   158bc:	ldr	r3, [pc, #-3280]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   158c0:	add	r3, r2, r3
   158c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158c8:	add	r3, r2, r3
   158cc:	str	r3, [fp, #-28]	; 0xffffffe4
   158d0:	ldr	r3, [fp, #-16]
   158d4:	ror	r3, r3, #2
   158d8:	str	r3, [fp, #-16]
   158dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   158e0:	ldr	r3, [fp, #-16]
   158e4:	eor	r2, r2, r3
   158e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158ec:	eor	r2, r2, r3
   158f0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   158f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   158f8:	eor	r1, r1, r3
   158fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15900:	eor	r1, r1, r3
   15904:	ldr	r3, [fp, #-84]	; 0xffffffac
   15908:	eor	r3, r3, r1
   1590c:	ror	r3, r3, #31
   15910:	str	r3, [fp, #-84]	; 0xffffffac
   15914:	ldr	r3, [fp, #-84]	; 0xffffffac
   15918:	add	r2, r2, r3
   1591c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15920:	ror	r3, r3, #27
   15924:	add	r2, r2, r3
   15928:	ldr	r3, [pc, #-3388]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   1592c:	add	r3, r2, r3
   15930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15934:	add	r3, r2, r3
   15938:	str	r3, [fp, #-24]	; 0xffffffe8
   1593c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15940:	ror	r3, r3, #2
   15944:	str	r3, [fp, #-32]	; 0xffffffe0
   15948:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1594c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15950:	eor	r2, r2, r3
   15954:	ldr	r3, [fp, #-16]
   15958:	eor	r2, r2, r3
   1595c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15960:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15964:	eor	r1, r1, r3
   15968:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1596c:	eor	r1, r1, r3
   15970:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15974:	eor	r3, r3, r1
   15978:	ror	r3, r3, #31
   1597c:	str	r3, [fp, #-80]	; 0xffffffb0
   15980:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15984:	add	r2, r2, r3
   15988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1598c:	ror	r3, r3, #27
   15990:	add	r2, r2, r3
   15994:	ldr	r3, [pc, #-3496]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15998:	add	r3, r2, r3
   1599c:	ldr	r2, [fp, #-20]	; 0xffffffec
   159a0:	add	r3, r2, r3
   159a4:	str	r3, [fp, #-20]	; 0xffffffec
   159a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159ac:	ror	r3, r3, #2
   159b0:	str	r3, [fp, #-28]	; 0xffffffe4
   159b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   159b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   159bc:	eor	r2, r2, r3
   159c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   159c4:	eor	r2, r2, r3
   159c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   159cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   159d0:	eor	r1, r1, r3
   159d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   159d8:	eor	r1, r1, r3
   159dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   159e0:	eor	r3, r3, r1
   159e4:	ror	r3, r3, #31
   159e8:	str	r3, [fp, #-76]	; 0xffffffb4
   159ec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   159f0:	add	r2, r2, r3
   159f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   159f8:	ror	r3, r3, #27
   159fc:	add	r2, r2, r3
   15a00:	ldr	r3, [pc, #-3604]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15a04:	add	r3, r2, r3
   15a08:	ldr	r2, [fp, #-16]
   15a0c:	add	r3, r2, r3
   15a10:	str	r3, [fp, #-16]
   15a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a18:	ror	r3, r3, #2
   15a1c:	str	r3, [fp, #-24]	; 0xffffffe8
   15a20:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a28:	eor	r2, r2, r3
   15a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a30:	eor	r2, r2, r3
   15a34:	ldr	r1, [fp, #-84]	; 0xffffffac
   15a38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15a3c:	eor	r1, r1, r3
   15a40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15a44:	eor	r1, r1, r3
   15a48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15a4c:	eor	r3, r3, r1
   15a50:	ror	r3, r3, #31
   15a54:	str	r3, [fp, #-72]	; 0xffffffb8
   15a58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15a5c:	add	r2, r2, r3
   15a60:	ldr	r3, [fp, #-16]
   15a64:	ror	r3, r3, #27
   15a68:	add	r2, r2, r3
   15a6c:	ldr	r3, [pc, #-3712]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15a70:	add	r3, r2, r3
   15a74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a78:	add	r3, r2, r3
   15a7c:	str	r3, [fp, #-32]	; 0xffffffe0
   15a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a84:	ror	r3, r3, #2
   15a88:	str	r3, [fp, #-20]	; 0xffffffec
   15a8c:	ldr	r2, [fp, #-16]
   15a90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a94:	eor	r2, r2, r3
   15a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a9c:	eor	r2, r2, r3
   15aa0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   15aa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15aa8:	eor	r1, r1, r3
   15aac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15ab0:	eor	r1, r1, r3
   15ab4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15ab8:	eor	r3, r3, r1
   15abc:	ror	r3, r3, #31
   15ac0:	str	r3, [fp, #-68]	; 0xffffffbc
   15ac4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15ac8:	add	r2, r2, r3
   15acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ad0:	ror	r3, r3, #27
   15ad4:	add	r2, r2, r3
   15ad8:	ldr	r3, [pc, #-3820]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15adc:	add	r3, r2, r3
   15ae0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ae4:	add	r3, r2, r3
   15ae8:	str	r3, [fp, #-28]	; 0xffffffe4
   15aec:	ldr	r3, [fp, #-16]
   15af0:	ror	r3, r3, #2
   15af4:	str	r3, [fp, #-16]
   15af8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15afc:	ldr	r3, [fp, #-16]
   15b00:	eor	r2, r2, r3
   15b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b08:	eor	r2, r2, r3
   15b0c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15b10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15b14:	eor	r1, r1, r3
   15b18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b1c:	eor	r1, r1, r3
   15b20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b24:	eor	r3, r3, r1
   15b28:	ror	r3, r3, #31
   15b2c:	str	r3, [fp, #-64]	; 0xffffffc0
   15b30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b34:	add	r2, r2, r3
   15b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b3c:	ror	r3, r3, #27
   15b40:	add	r2, r2, r3
   15b44:	ldr	r3, [pc, #-3928]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15b48:	add	r3, r2, r3
   15b4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b50:	add	r3, r2, r3
   15b54:	str	r3, [fp, #-24]	; 0xffffffe8
   15b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b5c:	ror	r3, r3, #2
   15b60:	str	r3, [fp, #-32]	; 0xffffffe0
   15b64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b6c:	eor	r2, r2, r3
   15b70:	ldr	r3, [fp, #-16]
   15b74:	eor	r2, r2, r3
   15b78:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15b7c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b80:	eor	r1, r1, r3
   15b84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15b88:	eor	r1, r1, r3
   15b8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15b90:	eor	r3, r3, r1
   15b94:	ror	r3, r3, #31
   15b98:	str	r3, [fp, #-60]	; 0xffffffc4
   15b9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15ba0:	add	r2, r2, r3
   15ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15ba8:	ror	r3, r3, #27
   15bac:	add	r2, r2, r3
   15bb0:	ldr	r3, [pc, #-4036]	; 14bf4 <rb_base64_encode@plt+0x3c7c>
   15bb4:	add	r3, r2, r3
   15bb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15bbc:	add	r3, r2, r3
   15bc0:	str	r3, [fp, #-20]	; 0xffffffec
   15bc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bc8:	ror	r3, r3, #2
   15bcc:	str	r3, [fp, #-28]	; 0xffffffe4
   15bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bd8:	eor	r2, r2, r3
   15bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15be0:	eor	r2, r2, r3
   15be4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15be8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15bec:	eor	r1, r1, r3
   15bf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15bf4:	eor	r1, r1, r3
   15bf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15bfc:	eor	r3, r3, r1
   15c00:	ror	r3, r3, #31
   15c04:	str	r3, [fp, #-56]	; 0xffffffc8
   15c08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c0c:	add	r2, r2, r3
   15c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c14:	ror	r3, r3, #27
   15c18:	add	r2, r2, r3
   15c1c:	ldr	r3, [pc, #740]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15c20:	add	r3, r2, r3
   15c24:	ldr	r2, [fp, #-16]
   15c28:	add	r3, r2, r3
   15c2c:	str	r3, [fp, #-16]
   15c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c34:	ror	r3, r3, #2
   15c38:	str	r3, [fp, #-24]	; 0xffffffe8
   15c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c44:	eor	r2, r2, r3
   15c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c4c:	eor	r2, r2, r3
   15c50:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15c54:	ldr	r3, [fp, #-84]	; 0xffffffac
   15c58:	eor	r1, r1, r3
   15c5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c60:	eor	r1, r1, r3
   15c64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c68:	eor	r3, r3, r1
   15c6c:	ror	r3, r3, #31
   15c70:	str	r3, [fp, #-52]	; 0xffffffcc
   15c74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c78:	add	r2, r2, r3
   15c7c:	ldr	r3, [fp, #-16]
   15c80:	ror	r3, r3, #27
   15c84:	add	r2, r2, r3
   15c88:	ldr	r3, [pc, #632]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15c8c:	add	r3, r2, r3
   15c90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15c94:	add	r3, r2, r3
   15c98:	str	r3, [fp, #-32]	; 0xffffffe0
   15c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ca0:	ror	r3, r3, #2
   15ca4:	str	r3, [fp, #-20]	; 0xffffffec
   15ca8:	ldr	r2, [fp, #-16]
   15cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb0:	eor	r2, r2, r3
   15cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cb8:	eor	r2, r2, r3
   15cbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15cc0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15cc4:	eor	r1, r1, r3
   15cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ccc:	eor	r1, r1, r3
   15cd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15cd4:	eor	r3, r3, r1
   15cd8:	ror	r3, r3, #31
   15cdc:	str	r3, [fp, #-48]	; 0xffffffd0
   15ce0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ce4:	add	r2, r2, r3
   15ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15cec:	ror	r3, r3, #27
   15cf0:	add	r2, r2, r3
   15cf4:	ldr	r3, [pc, #524]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15cf8:	add	r3, r2, r3
   15cfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15d00:	add	r3, r2, r3
   15d04:	str	r3, [fp, #-28]	; 0xffffffe4
   15d08:	ldr	r3, [fp, #-16]
   15d0c:	ror	r3, r3, #2
   15d10:	str	r3, [fp, #-16]
   15d14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15d18:	ldr	r3, [fp, #-16]
   15d1c:	eor	r2, r2, r3
   15d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d24:	eor	r2, r2, r3
   15d28:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15d2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15d30:	eor	r1, r1, r3
   15d34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d38:	eor	r1, r1, r3
   15d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d40:	eor	r3, r3, r1
   15d44:	ror	r3, r3, #31
   15d48:	str	r3, [fp, #-44]	; 0xffffffd4
   15d4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d50:	add	r2, r2, r3
   15d54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d58:	ror	r3, r3, #27
   15d5c:	add	r2, r2, r3
   15d60:	ldr	r3, [pc, #416]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15d64:	add	r3, r2, r3
   15d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d6c:	add	r3, r2, r3
   15d70:	str	r3, [fp, #-24]	; 0xffffffe8
   15d74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d78:	ror	r3, r3, #2
   15d7c:	str	r3, [fp, #-32]	; 0xffffffe0
   15d80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15d84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d88:	eor	r2, r2, r3
   15d8c:	ldr	r3, [fp, #-16]
   15d90:	eor	r2, r2, r3
   15d94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15d9c:	eor	r1, r1, r3
   15da0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15da4:	eor	r1, r1, r3
   15da8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dac:	eor	r3, r3, r1
   15db0:	ror	r3, r3, #31
   15db4:	str	r3, [fp, #-40]	; 0xffffffd8
   15db8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15dbc:	add	r2, r2, r3
   15dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15dc4:	ror	r3, r3, #27
   15dc8:	add	r2, r2, r3
   15dcc:	ldr	r3, [pc, #308]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15dd0:	add	r3, r2, r3
   15dd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   15dd8:	add	r3, r2, r3
   15ddc:	str	r3, [fp, #-20]	; 0xffffffec
   15de0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15de4:	ror	r3, r3, #2
   15de8:	str	r3, [fp, #-28]	; 0xffffffe4
   15dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15df4:	eor	r2, r2, r3
   15df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15dfc:	eor	r2, r2, r3
   15e00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15e08:	eor	r1, r1, r3
   15e0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e10:	eor	r1, r1, r3
   15e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e18:	eor	r3, r3, r1
   15e1c:	ror	r3, r3, #31
   15e20:	str	r3, [fp, #-36]	; 0xffffffdc
   15e24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e28:	add	r2, r2, r3
   15e2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e30:	ror	r3, r3, #27
   15e34:	add	r2, r2, r3
   15e38:	ldr	r3, [pc, #200]	; 15f08 <rb_base64_encode@plt+0x4f90>
   15e3c:	add	r3, r2, r3
   15e40:	ldr	r2, [fp, #-16]
   15e44:	add	r3, r2, r3
   15e48:	str	r3, [fp, #-16]
   15e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e50:	ror	r3, r3, #2
   15e54:	str	r3, [fp, #-24]	; 0xffffffe8
   15e58:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e5c:	ldr	r2, [r3]
   15e60:	ldr	r3, [fp, #-16]
   15e64:	add	r2, r2, r3
   15e68:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e6c:	str	r2, [r3]
   15e70:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e74:	ldr	r2, [r3, #4]
   15e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e7c:	add	r2, r2, r3
   15e80:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e84:	str	r2, [r3, #4]
   15e88:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e8c:	ldr	r2, [r3, #8]
   15e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e94:	add	r2, r2, r3
   15e98:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e9c:	str	r2, [r3, #8]
   15ea0:	ldr	r3, [fp, #-104]	; 0xffffff98
   15ea4:	ldr	r2, [r3, #12]
   15ea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15eac:	add	r2, r2, r3
   15eb0:	ldr	r3, [fp, #-104]	; 0xffffff98
   15eb4:	str	r2, [r3, #12]
   15eb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15ebc:	ldr	r2, [r3, #16]
   15ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ec4:	add	r2, r2, r3
   15ec8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15ecc:	str	r2, [r3, #16]
   15ed0:	mov	r3, #0
   15ed4:	str	r3, [fp, #-32]	; 0xffffffe0
   15ed8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15edc:	str	r3, [fp, #-28]	; 0xffffffe4
   15ee0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ee4:	str	r3, [fp, #-24]	; 0xffffffe8
   15ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15eec:	str	r3, [fp, #-20]	; 0xffffffec
   15ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ef4:	str	r3, [fp, #-16]
   15ef8:	ldr	r3, [fp, #-16]
   15efc:	mov	r0, r3
   15f00:	sub	sp, fp, #8
   15f04:	pop	{r4, fp, pc}
   15f08:	bgt	18c6668 <rb_base64_encode@plt+0x18b56f0>
   15f0c:	push	{fp}		; (str fp, [sp, #-4]!)
   15f10:	add	fp, sp, #0
   15f14:	sub	sp, sp, #12
   15f18:	str	r0, [fp, #-8]
   15f1c:	ldr	r3, [fp, #-8]
   15f20:	ldr	r2, [pc, #80]	; 15f78 <rb_base64_encode@plt+0x5000>
   15f24:	str	r2, [r3]
   15f28:	ldr	r3, [fp, #-8]
   15f2c:	ldr	r2, [pc, #72]	; 15f7c <rb_base64_encode@plt+0x5004>
   15f30:	str	r2, [r3, #4]
   15f34:	ldr	r3, [fp, #-8]
   15f38:	ldr	r2, [pc, #64]	; 15f80 <rb_base64_encode@plt+0x5008>
   15f3c:	str	r2, [r3, #8]
   15f40:	ldr	r3, [fp, #-8]
   15f44:	ldr	r2, [pc, #56]	; 15f84 <rb_base64_encode@plt+0x500c>
   15f48:	str	r2, [r3, #12]
   15f4c:	ldr	r3, [fp, #-8]
   15f50:	ldr	r2, [pc, #48]	; 15f88 <rb_base64_encode@plt+0x5010>
   15f54:	str	r2, [r3, #16]
   15f58:	ldr	r1, [fp, #-8]
   15f5c:	mov	r2, #0
   15f60:	mov	r3, #0
   15f64:	strd	r2, [r1, #24]
   15f68:	nop			; (mov r0, r0)
   15f6c:	add	sp, fp, #0
   15f70:	pop	{fp}		; (ldr fp, [sp], #4)
   15f74:	bx	lr
   15f78:	strbvs	r2, [r5, -r1, lsl #6]
   15f7c:	svc	0x00cdab89
   15f80:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   15f84:	eorsne	r5, r2, r6, ror r4
   15f88:	bicsgt	lr, r2, #240, 2	; 0x3c
   15f8c:	push	{r4, r5, fp, lr}
   15f90:	add	fp, sp, #12
   15f94:	sub	sp, sp, #24
   15f98:	str	r0, [fp, #-24]	; 0xffffffe8
   15f9c:	str	r1, [fp, #-28]	; 0xffffffe4
   15fa0:	str	r2, [fp, #-32]	; 0xffffffe0
   15fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fa8:	ldrd	r2, [r3, #24]
   15fac:	lsr	r4, r2, #3
   15fb0:	orr	r4, r4, r3, lsl #29
   15fb4:	lsr	r5, r3, #3
   15fb8:	mov	r3, r4
   15fbc:	and	r3, r3, #63	; 0x3f
   15fc0:	str	r3, [fp, #-20]	; 0xffffffec
   15fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fc8:	ldrd	r0, [r3, #24]
   15fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15fd0:	lsl	r3, r3, #3
   15fd4:	mov	r2, r3
   15fd8:	mov	r3, #0
   15fdc:	adds	r2, r2, r0
   15fe0:	adc	r3, r3, r1
   15fe4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fe8:	strd	r2, [r1, #24]
   15fec:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ff4:	add	r3, r2, r3
   15ff8:	cmp	r3, #63	; 0x3f
   15ffc:	bls	16088 <rb_base64_encode@plt+0x5110>
   16000:	ldr	r3, [fp, #-20]	; 0xffffffec
   16004:	rsb	r3, r3, #64	; 0x40
   16008:	str	r3, [fp, #-16]
   1600c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16010:	add	r3, r3, #32
   16014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16018:	add	r3, r2, r3
   1601c:	ldr	r2, [fp, #-16]
   16020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16024:	mov	r0, r3
   16028:	bl	10e40 <memcpy@plt>
   1602c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16030:	add	r3, r3, #32
   16034:	mov	r1, r3
   16038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1603c:	bl	13b40 <rb_base64_encode@plt+0x2bc8>
   16040:	b	16068 <rb_base64_encode@plt+0x50f0>
   16044:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16048:	ldr	r3, [fp, #-16]
   1604c:	add	r3, r2, r3
   16050:	mov	r1, r3
   16054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16058:	bl	13b40 <rb_base64_encode@plt+0x2bc8>
   1605c:	ldr	r3, [fp, #-16]
   16060:	add	r3, r3, #64	; 0x40
   16064:	str	r3, [fp, #-16]
   16068:	ldr	r3, [fp, #-16]
   1606c:	add	r2, r3, #63	; 0x3f
   16070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16074:	cmp	r2, r3
   16078:	bcc	16044 <rb_base64_encode@plt+0x50cc>
   1607c:	mov	r3, #0
   16080:	str	r3, [fp, #-20]	; 0xffffffec
   16084:	b	16090 <rb_base64_encode@plt+0x5118>
   16088:	mov	r3, #0
   1608c:	str	r3, [fp, #-16]
   16090:	ldr	r3, [fp, #-20]	; 0xffffffec
   16094:	add	r3, r3, #32
   16098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1609c:	add	r0, r2, r3
   160a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   160a4:	ldr	r3, [fp, #-16]
   160a8:	add	r1, r2, r3
   160ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   160b0:	ldr	r3, [fp, #-16]
   160b4:	sub	r3, r2, r3
   160b8:	mov	r2, r3
   160bc:	bl	10e40 <memcpy@plt>
   160c0:	nop			; (mov r0, r0)
   160c4:	sub	sp, fp, #12
   160c8:	pop	{r4, r5, fp, pc}
   160cc:	push	{r4, fp, lr}
   160d0:	add	fp, sp, #8
   160d4:	sub	sp, sp, #28
   160d8:	str	r0, [fp, #-32]	; 0xffffffe0
   160dc:	str	r1, [fp, #-36]	; 0xffffffdc
   160e0:	mov	r1, #0
   160e4:	str	r1, [fp, #-16]
   160e8:	b	16140 <rb_base64_encode@plt+0x51c8>
   160ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   160f0:	ldrd	r0, [r1, #24]
   160f4:	ldr	ip, [fp, #-16]
   160f8:	mvn	ip, ip
   160fc:	and	ip, ip, #7
   16100:	lsl	ip, ip, #3
   16104:	rsb	r4, ip, #32
   16108:	sub	lr, ip, #32
   1610c:	lsr	r2, r0, ip
   16110:	orr	r2, r2, r1, lsl r4
   16114:	orr	r2, r2, r1, lsr lr
   16118:	lsr	r3, r1, ip
   1611c:	uxtb	ip, r2
   16120:	sub	r0, fp, #24
   16124:	ldr	r1, [fp, #-16]
   16128:	add	r1, r0, r1
   1612c:	mov	r0, ip
   16130:	strb	r0, [r1]
   16134:	ldr	r1, [fp, #-16]
   16138:	add	r1, r1, #1
   1613c:	str	r1, [fp, #-16]
   16140:	ldr	r1, [fp, #-16]
   16144:	cmp	r1, #7
   16148:	bls	160ec <rb_base64_encode@plt+0x5174>
   1614c:	mov	r2, #1
   16150:	ldr	r3, [pc, #216]	; 16230 <rb_base64_encode@plt+0x52b8>
   16154:	add	r3, pc, r3
   16158:	mov	r1, r3
   1615c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16160:	bl	15f8c <rb_base64_encode@plt+0x5014>
   16164:	b	16180 <rb_base64_encode@plt+0x5208>
   16168:	mov	r2, #1
   1616c:	ldr	r3, [pc, #192]	; 16234 <rb_base64_encode@plt+0x52bc>
   16170:	add	r3, pc, r3
   16174:	mov	r1, r3
   16178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1617c:	bl	15f8c <rb_base64_encode@plt+0x5014>
   16180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16184:	ldrd	r2, [r3, #24]
   16188:	mov	r0, #504	; 0x1f8
   1618c:	mov	r1, #0
   16190:	and	r2, r2, r0
   16194:	and	r3, r3, r1
   16198:	cmp	r3, #0
   1619c:	cmpeq	r2, #448	; 0x1c0
   161a0:	bne	16168 <rb_base64_encode@plt+0x51f0>
   161a4:	sub	r3, fp, #24
   161a8:	mov	r2, #8
   161ac:	mov	r1, r3
   161b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161b4:	bl	15f8c <rb_base64_encode@plt+0x5014>
   161b8:	mov	r3, #0
   161bc:	str	r3, [fp, #-16]
   161c0:	b	16208 <rb_base64_encode@plt+0x5290>
   161c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   161c8:	ldr	r3, [fp, #-16]
   161cc:	add	r3, r2, r3
   161d0:	ldr	r2, [fp, #-16]
   161d4:	lsr	r1, r2, #2
   161d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   161dc:	ldr	r1, [r2, r1, lsl #2]
   161e0:	ldr	r2, [fp, #-16]
   161e4:	mvn	r2, r2
   161e8:	and	r2, r2, #3
   161ec:	lsl	r2, r2, #3
   161f0:	lsr	r2, r1, r2
   161f4:	uxtb	r2, r2
   161f8:	strb	r2, [r3]
   161fc:	ldr	r3, [fp, #-16]
   16200:	add	r3, r3, #1
   16204:	str	r3, [fp, #-16]
   16208:	ldr	r3, [fp, #-16]
   1620c:	cmp	r3, #19
   16210:	bls	161c4 <rb_base64_encode@plt+0x524c>
   16214:	mov	r2, #96	; 0x60
   16218:	mov	r1, #0
   1621c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16220:	bl	10da4 <memset@plt>
   16224:	nop			; (mov r0, r0)
   16228:	sub	sp, fp, #8
   1622c:	pop	{r4, fp, pc}
   16230:	andeq	r0, r0, ip, lsr #8
   16234:	andeq	r0, r0, r4, lsl r4
   16238:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1623c:	mov	r7, r0
   16240:	ldr	r6, [pc, #72]	; 16290 <rb_base64_encode@plt+0x5318>
   16244:	ldr	r5, [pc, #72]	; 16294 <rb_base64_encode@plt+0x531c>
   16248:	add	r6, pc, r6
   1624c:	add	r5, pc, r5
   16250:	sub	r6, r6, r5
   16254:	mov	r8, r1
   16258:	mov	r9, r2
   1625c:	bl	10cc4 <open@plt-0x20>
   16260:	asrs	r6, r6, #2
   16264:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16268:	mov	r4, #0
   1626c:	add	r4, r4, #1
   16270:	ldr	r3, [r5], #4
   16274:	mov	r2, r9
   16278:	mov	r1, r8
   1627c:	mov	r0, r7
   16280:	blx	r3
   16284:	cmp	r6, r4
   16288:	bne	1626c <rb_base64_encode@plt+0x52f4>
   1628c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16290:	andeq	r0, r1, r8, lsr #25
   16294:	andeq	r0, r1, r0, lsr #25
   16298:	bx	lr

Disassembly of section .fini:

0001629c <.fini>:
   1629c:	push	{r3, lr}
   162a0:	pop	{r3, pc}
