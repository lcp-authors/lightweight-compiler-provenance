
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b60 <.init>:
   10b60:	push	{r3, lr}
   10b64:	bl	10e04 <_start@@Base+0x3c>
   10b68:	pop	{r3, pc}

Disassembly of section .plt:

00010b6c <calloc@plt-0x14>:
   10b6c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b70:	ldr	lr, [pc, #4]	; 10b7c <calloc@plt-0x4>
   10b74:	add	lr, pc, lr
   10b78:	ldr	pc, [lr, #8]!
   10b7c:	andeq	r1, r1, r4, lsl #9

00010b80 <calloc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1156]!	; 0x484

00010b8c <strcmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1148]!	; 0x47c

00010b98 <strtol@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1140]!	; 0x474

00010ba4 <printf@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb0 <fopen@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1124]!	; 0x464

00010bbc <memmove@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc8 <free@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1108]!	; 0x454

00010bd4 <fgets@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1100]!	; 0x44c

00010be0 <memcpy@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1092]!	; 0x444

00010bec <realloc@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf8 <strcpy@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1076]!	; 0x434

00010c04 <puts@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c10 <malloc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1060]!	; 0x424

00010c1c <__libc_start_main@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1052]!	; 0x41c

00010c28 <__gmon_start__@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1044]!	; 0x414

00010c34 <feof@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c40 <strlen@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #1028]!	; 0x404

00010c4c <strchr@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c58 <fclose@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #69632	; 0x11000
   10c60:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c64 <abort@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #69632	; 0x11000
   10c6c:	ldr	pc, [ip, #1004]!	; 0x3ec

Disassembly of section .text:

00010c70 <main@@Base>:
   10c70:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c74:	ldr	r1, [pc, #292]	; 10da0 <main@@Base+0x130>
   10c78:	ldr	r0, [pc, #292]	; 10da4 <main@@Base+0x134>
   10c7c:	bl	10bb0 <fopen@plt>
   10c80:	ldr	r1, [pc, #280]	; 10da0 <main@@Base+0x130>
   10c84:	mov	r8, r0
   10c88:	ldr	r0, [pc, #280]	; 10da8 <main@@Base+0x138>
   10c8c:	bl	10bb0 <fopen@plt>
   10c90:	ldr	r1, [pc, #264]	; 10da0 <main@@Base+0x130>
   10c94:	mov	r7, r0
   10c98:	ldr	r0, [pc, #268]	; 10dac <main@@Base+0x13c>
   10c9c:	bl	10bb0 <fopen@plt>
   10ca0:	mov	r6, r0
   10ca4:	mov	r0, r8
   10ca8:	bl	110b4 <lerAtores@@Base>
   10cac:	mov	r4, r0
   10cb0:	mov	r0, r7
   10cb4:	bl	11130 <lerFilmes@@Base>
   10cb8:	mov	r5, r0
   10cbc:	mov	r0, r6
   10cc0:	bl	11130 <lerFilmes@@Base>
   10cc4:	mov	r9, r0
   10cc8:	mov	r0, r4
   10ccc:	bl	112b4 <vetor_tamanho@@Base>
   10cd0:	mov	r1, r0
   10cd4:	ldr	r0, [pc, #212]	; 10db0 <main@@Base+0x140>
   10cd8:	bl	10ba4 <printf@plt>
   10cdc:	mov	r0, r4
   10ce0:	bl	10ef0 <retira_duplicados@@Base>
   10ce4:	mov	r0, r4
   10ce8:	bl	112b4 <vetor_tamanho@@Base>
   10cec:	mov	r1, r0
   10cf0:	ldr	r0, [pc, #188]	; 10db4 <main@@Base+0x144>
   10cf4:	bl	10ba4 <printf@plt>
   10cf8:	mov	r1, r9
   10cfc:	mov	r0, r5
   10d00:	bl	10f80 <interseta@@Base>
   10d04:	subs	fp, r0, #0
   10d08:	beq	10d94 <main@@Base+0x124>
   10d0c:	bl	112b4 <vetor_tamanho@@Base>
   10d10:	mov	r1, r0
   10d14:	ldr	r0, [pc, #156]	; 10db8 <main@@Base+0x148>
   10d18:	bl	10ba4 <printf@plt>
   10d1c:	mov	r1, #2000	; 0x7d0
   10d20:	mov	r0, r5
   10d24:	bl	11030 <anteriores@@Base>
   10d28:	subs	sl, r0, #0
   10d2c:	beq	10d88 <main@@Base+0x118>
   10d30:	bl	112b4 <vetor_tamanho@@Base>
   10d34:	mov	r1, r0
   10d38:	ldr	r0, [pc, #124]	; 10dbc <main@@Base+0x14c>
   10d3c:	bl	10ba4 <printf@plt>
   10d40:	mov	r0, r4
   10d44:	bl	111d4 <vetor_apaga@@Base>
   10d48:	mov	r0, fp
   10d4c:	bl	111d4 <vetor_apaga@@Base>
   10d50:	mov	r0, sl
   10d54:	bl	111d4 <vetor_apaga@@Base>
   10d58:	mov	r0, r5
   10d5c:	bl	115d4 <lista_apaga@@Base>
   10d60:	mov	r0, r9
   10d64:	bl	115d4 <lista_apaga@@Base>
   10d68:	mov	r0, r8
   10d6c:	bl	10c58 <fclose@plt>
   10d70:	mov	r0, r7
   10d74:	bl	10c58 <fclose@plt>
   10d78:	mov	r0, r6
   10d7c:	bl	10c58 <fclose@plt>
   10d80:	mov	r0, #0
   10d84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d88:	ldr	r0, [pc, #48]	; 10dc0 <main@@Base+0x150>
   10d8c:	bl	10c04 <puts@plt>
   10d90:	b	10d40 <main@@Base+0xd0>
   10d94:	ldr	r0, [pc, #40]	; 10dc4 <main@@Base+0x154>
   10d98:	bl	10c04 <puts@plt>
   10d9c:	b	10d1c <main@@Base+0xac>
   10da0:	ldrdeq	r1, [r1], -r8
   10da4:	ldrdeq	r1, [r1], -ip
   10da8:	andeq	r1, r1, r8, ror #19
   10dac:	strdeq	r1, [r1], -r4
   10db0:	andeq	r1, r1, r0, lsl #20
   10db4:	andeq	r1, r1, r4, lsl sl
   10db8:	andeq	r1, r1, r0, lsr sl
   10dbc:	andeq	r1, r1, r8, ror #20
   10dc0:	andeq	r1, r1, ip, lsl #21
   10dc4:	andeq	r1, r1, r0, asr sl

00010dc8 <_start@@Base>:
   10dc8:	mov	fp, #0
   10dcc:	mov	lr, #0
   10dd0:	pop	{r1}		; (ldr r1, [sp], #4)
   10dd4:	mov	r2, sp
   10dd8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ddc:	push	{r0}		; (str r0, [sp, #-4]!)
   10de0:	ldr	ip, [pc, #16]	; 10df8 <_start@@Base+0x30>
   10de4:	push	{ip}		; (str ip, [sp, #-4]!)
   10de8:	ldr	r0, [pc, #12]	; 10dfc <_start@@Base+0x34>
   10dec:	ldr	r3, [pc, #12]	; 10e00 <_start@@Base+0x38>
   10df0:	bl	10c1c <__libc_start_main@plt>
   10df4:	bl	10c64 <abort@plt>
   10df8:	andeq	r1, r1, r8, asr #19
   10dfc:	andeq	r0, r1, r0, ror ip
   10e00:	andeq	r1, r1, r8, ror #18
   10e04:	ldr	r3, [pc, #20]	; 10e20 <_start@@Base+0x58>
   10e08:	ldr	r2, [pc, #20]	; 10e24 <_start@@Base+0x5c>
   10e0c:	add	r3, pc, r3
   10e10:	ldr	r2, [r3, r2]
   10e14:	cmp	r2, #0
   10e18:	bxeq	lr
   10e1c:	b	10c28 <__gmon_start__@plt>
   10e20:	andeq	r1, r1, ip, ror #3
   10e24:	andeq	r0, r0, ip, asr r0
   10e28:	ldr	r3, [pc, #28]	; 10e4c <_start@@Base+0x84>
   10e2c:	ldr	r0, [pc, #28]	; 10e50 <_start@@Base+0x88>
   10e30:	sub	r3, r3, r0
   10e34:	cmp	r3, #6
   10e38:	bxls	lr
   10e3c:	ldr	r3, [pc, #16]	; 10e54 <_start@@Base+0x8c>
   10e40:	cmp	r3, #0
   10e44:	bxeq	lr
   10e48:	bx	r3
   10e4c:	andeq	r2, r2, fp, rrx
   10e50:	andeq	r2, r2, r8, rrx
   10e54:	andeq	r0, r0, r0
   10e58:	ldr	r1, [pc, #36]	; 10e84 <_start@@Base+0xbc>
   10e5c:	ldr	r0, [pc, #36]	; 10e88 <_start@@Base+0xc0>
   10e60:	sub	r1, r1, r0
   10e64:	asr	r1, r1, #2
   10e68:	add	r1, r1, r1, lsr #31
   10e6c:	asrs	r1, r1, #1
   10e70:	bxeq	lr
   10e74:	ldr	r3, [pc, #16]	; 10e8c <_start@@Base+0xc4>
   10e78:	cmp	r3, #0
   10e7c:	bxeq	lr
   10e80:	bx	r3
   10e84:	andeq	r2, r2, r8, rrx
   10e88:	andeq	r2, r2, r8, rrx
   10e8c:	andeq	r0, r0, r0
   10e90:	push	{r4, lr}
   10e94:	ldr	r4, [pc, #24]	; 10eb4 <_start@@Base+0xec>
   10e98:	ldrb	r3, [r4]
   10e9c:	cmp	r3, #0
   10ea0:	popne	{r4, pc}
   10ea4:	bl	10e28 <_start@@Base+0x60>
   10ea8:	mov	r3, #1
   10eac:	strb	r3, [r4]
   10eb0:	pop	{r4, pc}
   10eb4:	andeq	r2, r2, r8, rrx
   10eb8:	ldr	r0, [pc, #40]	; 10ee8 <_start@@Base+0x120>
   10ebc:	ldr	r3, [r0]
   10ec0:	cmp	r3, #0
   10ec4:	bne	10ecc <_start@@Base+0x104>
   10ec8:	b	10e58 <_start@@Base+0x90>
   10ecc:	ldr	r3, [pc, #24]	; 10eec <_start@@Base+0x124>
   10ed0:	cmp	r3, #0
   10ed4:	beq	10ec8 <_start@@Base+0x100>
   10ed8:	push	{r4, lr}
   10edc:	blx	r3
   10ee0:	pop	{r4, lr}
   10ee4:	b	10e58 <_start@@Base+0x90>
   10ee8:	andeq	r1, r2, r4, lsl pc
   10eec:	andeq	r0, r0, r0

00010ef0 <retira_duplicados@@Base>:
   10ef0:	push	{r4, r5, r6, r7, r8, lr}
   10ef4:	mov	r5, r0
   10ef8:	mov	r7, #0
   10efc:	mov	r0, r5
   10f00:	bl	112b4 <vetor_tamanho@@Base>
   10f04:	sub	r0, r0, #1
   10f08:	cmp	r7, r0
   10f0c:	bge	10f7c <retira_duplicados@@Base+0x8c>
   10f10:	add	r8, r7, #1
   10f14:	mov	r4, r8
   10f18:	b	10f20 <retira_duplicados@@Base+0x30>
   10f1c:	add	r4, r4, #1
   10f20:	mov	r0, r5
   10f24:	bl	112b4 <vetor_tamanho@@Base>
   10f28:	mov	r1, r7
   10f2c:	cmp	r4, r0
   10f30:	mov	r0, r5
   10f34:	bge	10f74 <retira_duplicados@@Base+0x84>
   10f38:	bl	112c4 <vetor_elemento@@Base>
   10f3c:	mov	r1, r4
   10f40:	mov	r6, r0
   10f44:	mov	r0, r5
   10f48:	bl	112c4 <vetor_elemento@@Base>
   10f4c:	mov	r1, r0
   10f50:	mov	r0, r6
   10f54:	bl	10b8c <strcmp@plt>
   10f58:	cmp	r0, #0
   10f5c:	bne	10f1c <retira_duplicados@@Base+0x2c>
   10f60:	mov	r1, r4
   10f64:	mov	r0, r5
   10f68:	bl	113dc <vetor_remove@@Base>
   10f6c:	sub	r4, r4, #1
   10f70:	b	10f1c <retira_duplicados@@Base+0x2c>
   10f74:	mov	r7, r8
   10f78:	b	10efc <retira_duplicados@@Base+0xc>
   10f7c:	pop	{r4, r5, r6, r7, r8, pc}

00010f80 <interseta@@Base>:
   10f80:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f84:	mov	r9, r0
   10f88:	mov	r7, r1
   10f8c:	bl	111b0 <vetor_novo@@Base>
   10f90:	ldr	r4, [r9]
   10f94:	ldr	r3, [r9, #8]
   10f98:	cmp	r3, #0
   10f9c:	cmple	r4, #0
   10fa0:	mov	fp, r0
   10fa4:	beq	11028 <interseta@@Base+0xa8>
   10fa8:	mov	sl, #0
   10fac:	mov	r5, sl
   10fb0:	mov	r8, sl
   10fb4:	b	10fcc <interseta@@Base+0x4c>
   10fb8:	ldr	r4, [r4, #4]
   10fbc:	ldr	r3, [r9, #8]
   10fc0:	cmp	r3, r5
   10fc4:	cmple	r4, #0
   10fc8:	beq	11028 <interseta@@Base+0xa8>
   10fcc:	mov	r2, r8
   10fd0:	ldr	r1, [r4]
   10fd4:	mov	r0, r7
   10fd8:	bl	11798 <lista_pesquisa@@Base>
   10fdc:	add	r5, r5, #1
   10fe0:	mov	r2, r8
   10fe4:	cmp	r0, #0
   10fe8:	mov	r0, r7
   10fec:	beq	10fb8 <interseta@@Base+0x38>
   10ff0:	ldr	r6, [r4]
   10ff4:	mov	r1, r6
   10ff8:	bl	11798 <lista_pesquisa@@Base>
   10ffc:	ldr	r1, [r0]
   11000:	mov	r0, r6
   11004:	bl	10b8c <strcmp@plt>
   11008:	cmp	r0, #0
   1100c:	bne	10fb8 <interseta@@Base+0x38>
   11010:	mov	r2, sl
   11014:	ldr	r1, [r4]
   11018:	mov	r0, fp
   1101c:	bl	112f8 <vetor_insere@@Base>
   11020:	add	sl, sl, #1
   11024:	b	10fb8 <interseta@@Base+0x38>
   11028:	mov	r0, fp
   1102c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011030 <anteriores@@Base>:
   11030:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11034:	mov	r4, r0
   11038:	mov	r6, r1
   1103c:	bl	111b0 <vetor_novo@@Base>
   11040:	ldr	r4, [r4]
   11044:	cmp	r4, #0
   11048:	mov	r9, r0
   1104c:	beq	110ac <anteriores@@Base+0x7c>
   11050:	mov	r8, #10
   11054:	mov	r7, #0
   11058:	b	11068 <anteriores@@Base+0x38>
   1105c:	ldr	r4, [r4, #4]
   11060:	cmp	r4, #0
   11064:	beq	110ac <anteriores@@Base+0x7c>
   11068:	ldr	r5, [r4]
   1106c:	mov	r0, r5
   11070:	bl	10c40 <strlen@plt>
   11074:	mov	r2, r8
   11078:	mov	r1, r7
   1107c:	sub	r0, r0, #5
   11080:	add	r0, r5, r0
   11084:	bl	10b98 <strtol@plt>
   11088:	cmp	r6, r0
   1108c:	ble	1105c <anteriores@@Base+0x2c>
   11090:	ldr	r1, [r4]
   11094:	ldr	r2, [r9]
   11098:	mov	r0, r9
   1109c:	bl	112f8 <vetor_insere@@Base>
   110a0:	ldr	r4, [r4, #4]
   110a4:	cmp	r4, #0
   110a8:	bne	11068 <anteriores@@Base+0x38>
   110ac:	mov	r0, r9
   110b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000110b4 <lerAtores@@Base>:
   110b4:	push	{r4, r5, r6, r7, r8, lr}
   110b8:	subs	r4, r0, #0
   110bc:	sub	sp, sp, #256	; 0x100
   110c0:	beq	11128 <lerAtores@@Base+0x74>
   110c4:	bl	111b0 <vetor_novo@@Base>
   110c8:	mov	r7, #255	; 0xff
   110cc:	mov	r8, #10
   110d0:	mov	r5, r0
   110d4:	b	11100 <lerAtores@@Base+0x4c>
   110d8:	bl	10bd4 <fgets@plt>
   110dc:	mov	r1, r8
   110e0:	mov	r0, sp
   110e4:	bl	10c4c <strchr@plt>
   110e8:	mov	r1, sp
   110ec:	subs	r3, r0, #0
   110f0:	mov	r0, r5
   110f4:	strbne	r6, [r3]
   110f8:	ldr	r2, [r5]
   110fc:	bl	112f8 <vetor_insere@@Base>
   11100:	mov	r0, r4
   11104:	bl	10c34 <feof@plt>
   11108:	mov	r2, r4
   1110c:	mov	r1, r7
   11110:	subs	r6, r0, #0
   11114:	mov	r0, sp
   11118:	beq	110d8 <lerAtores@@Base+0x24>
   1111c:	mov	r0, r5
   11120:	add	sp, sp, #256	; 0x100
   11124:	pop	{r4, r5, r6, r7, r8, pc}
   11128:	mov	r5, r4
   1112c:	b	1111c <lerAtores@@Base+0x68>

00011130 <lerFilmes@@Base>:
   11130:	push	{r4, r5, r6, r7, r8, r9, lr}
   11134:	subs	r4, r0, #0
   11138:	sub	sp, sp, #260	; 0x104
   1113c:	beq	111a8 <lerFilmes@@Base+0x78>
   11140:	bl	115b0 <lista_nova@@Base>
   11144:	mov	r7, #255	; 0xff
   11148:	mov	r9, #10
   1114c:	mov	r8, #0
   11150:	mov	r6, r0
   11154:	b	11180 <lerFilmes@@Base+0x50>
   11158:	bl	10bd4 <fgets@plt>
   1115c:	mov	r1, r9
   11160:	mov	r0, sp
   11164:	bl	10c4c <strchr@plt>
   11168:	mov	r2, r8
   1116c:	mov	r1, sp
   11170:	subs	r3, r0, #0
   11174:	mov	r0, r6
   11178:	strbne	r5, [r3]
   1117c:	bl	1163c <lista_insere@@Base>
   11180:	mov	r0, r4
   11184:	bl	10c34 <feof@plt>
   11188:	mov	r2, r4
   1118c:	mov	r1, r7
   11190:	subs	r5, r0, #0
   11194:	mov	r0, sp
   11198:	beq	11158 <lerFilmes@@Base+0x28>
   1119c:	mov	r0, r6
   111a0:	add	sp, sp, #260	; 0x104
   111a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   111a8:	mov	r6, r4
   111ac:	b	1119c <lerFilmes@@Base+0x6c>

000111b0 <vetor_novo@@Base>:
   111b0:	push	{r4, lr}
   111b4:	mov	r0, #12
   111b8:	bl	10c10 <malloc@plt>
   111bc:	cmp	r0, #0
   111c0:	movne	r3, #0
   111c4:	strne	r3, [r0]
   111c8:	strne	r3, [r0, #4]
   111cc:	strne	r3, [r0, #8]
   111d0:	pop	{r4, pc}

000111d4 <vetor_apaga@@Base>:
   111d4:	push	{r4, r5, r6, lr}
   111d8:	subs	r5, r0, #0
   111dc:	popeq	{r4, r5, r6, pc}
   111e0:	ldr	r3, [r5]
   111e4:	cmp	r3, #0
   111e8:	movgt	r4, #0
   111ec:	ble	1120c <vetor_apaga@@Base+0x38>
   111f0:	ldr	r3, [r5, #8]
   111f4:	ldr	r0, [r3, r4, lsl #2]
   111f8:	bl	10bc8 <free@plt>
   111fc:	ldr	r3, [r5]
   11200:	add	r4, r4, #1
   11204:	cmp	r3, r4
   11208:	bgt	111f0 <vetor_apaga@@Base+0x1c>
   1120c:	ldr	r0, [r5, #8]
   11210:	bl	10bc8 <free@plt>
   11214:	mov	r0, r5
   11218:	pop	{r4, r5, r6, lr}
   1121c:	b	10bc8 <free@plt>

00011220 <vetor_atribui@@Base>:
   11220:	clz	r3, r0
   11224:	lsr	r3, r3, #5
   11228:	orrs	r3, r3, r1, lsr #31
   1122c:	bne	112ac <vetor_atribui@@Base+0x8c>
   11230:	ldr	r3, [r0]
   11234:	cmp	r1, r3
   11238:	bge	112ac <vetor_atribui@@Base+0x8c>
   1123c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11240:	mov	r5, r0
   11244:	mov	r0, r2
   11248:	mov	r4, r1
   1124c:	mov	r6, r2
   11250:	bl	10c40 <strlen@plt>
   11254:	ldr	r8, [r5, #8]
   11258:	ldr	r7, [r8, r4, lsl #2]
   1125c:	mov	r9, r0
   11260:	mov	r0, r7
   11264:	bl	10c40 <strlen@plt>
   11268:	cmp	r9, r0
   1126c:	bls	11290 <vetor_atribui@@Base+0x70>
   11270:	mov	r0, r7
   11274:	add	r1, r9, #1
   11278:	bl	10bec <realloc@plt>
   1127c:	ldr	r3, [r5, #8]
   11280:	str	r0, [r8, r4, lsl #2]
   11284:	ldr	r7, [r3, r4, lsl #2]
   11288:	cmp	r7, #0
   1128c:	beq	112a4 <vetor_atribui@@Base+0x84>
   11290:	mov	r1, r6
   11294:	mov	r0, r7
   11298:	bl	10bf8 <strcpy@plt>
   1129c:	mov	r0, r4
   112a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a4:	mvn	r0, #0
   112a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112ac:	mvn	r0, #0
   112b0:	bx	lr

000112b4 <vetor_tamanho@@Base>:
   112b4:	cmp	r0, #0
   112b8:	ldrne	r0, [r0]
   112bc:	mvneq	r0, #0
   112c0:	bx	lr

000112c4 <vetor_elemento@@Base>:
   112c4:	lsr	r3, r1, #31
   112c8:	cmp	r0, #0
   112cc:	orreq	r3, r3, #1
   112d0:	cmp	r3, #0
   112d4:	bne	112f0 <vetor_elemento@@Base+0x2c>
   112d8:	ldr	r2, [r0]
   112dc:	cmp	r1, r2
   112e0:	bge	112f0 <vetor_elemento@@Base+0x2c>
   112e4:	ldr	r3, [r0, #8]
   112e8:	ldr	r0, [r3, r1, lsl #2]
   112ec:	bx	lr
   112f0:	mov	r0, #0
   112f4:	bx	lr

000112f8 <vetor_insere@@Base>:
   112f8:	clz	r3, r0
   112fc:	lsr	r3, r3, #5
   11300:	orrs	r3, r3, r2, lsr #31
   11304:	bne	113d4 <vetor_insere@@Base+0xdc>
   11308:	push	{r4, r5, r6, r7, r8, lr}
   1130c:	ldr	r5, [r0]
   11310:	cmp	r2, r5
   11314:	bgt	113cc <vetor_insere@@Base+0xd4>
   11318:	ldr	r3, [r0, #4]
   1131c:	mov	r6, r0
   11320:	cmp	r5, r3
   11324:	mov	r7, r1
   11328:	mov	r4, r2
   1132c:	beq	11398 <vetor_insere@@Base+0xa0>
   11330:	ldr	r8, [r0, #8]
   11334:	cmp	r4, r5
   11338:	bge	11360 <vetor_insere@@Base+0x68>
   1133c:	sub	r2, r5, r4
   11340:	lsl	r1, r5, #2
   11344:	lsl	r2, r2, #2
   11348:	add	r0, r1, #4
   1134c:	sub	r0, r0, r2
   11350:	sub	r1, r1, r2
   11354:	add	r1, r8, r1
   11358:	add	r0, r8, r0
   1135c:	bl	10bbc <memmove@plt>
   11360:	mov	r0, r7
   11364:	bl	10c40 <strlen@plt>
   11368:	mov	r1, #1
   1136c:	add	r0, r0, r1
   11370:	bl	10b80 <calloc@plt>
   11374:	cmp	r0, #0
   11378:	str	r0, [r8, r4, lsl #2]
   1137c:	beq	113cc <vetor_insere@@Base+0xd4>
   11380:	mov	r1, r7
   11384:	add	r5, r5, #1
   11388:	bl	10bf8 <strcpy@plt>
   1138c:	mov	r0, r4
   11390:	str	r5, [r6]
   11394:	pop	{r4, r5, r6, r7, r8, pc}
   11398:	cmp	r5, #0
   1139c:	lslne	r3, r5, #1
   113a0:	moveq	r3, #1
   113a4:	lslne	r1, r5, #3
   113a8:	moveq	r1, #4
   113ac:	str	r3, [r0, #4]
   113b0:	ldr	r0, [r0, #8]
   113b4:	bl	10bec <realloc@plt>
   113b8:	cmp	r0, #0
   113bc:	str	r0, [r6, #8]
   113c0:	ldrne	r5, [r6]
   113c4:	movne	r8, r0
   113c8:	bne	11334 <vetor_insere@@Base+0x3c>
   113cc:	mvn	r0, #0
   113d0:	pop	{r4, r5, r6, r7, r8, pc}
   113d4:	mvn	r0, #0
   113d8:	bx	lr

000113dc <vetor_remove@@Base>:
   113dc:	clz	r3, r0
   113e0:	lsr	r3, r3, #5
   113e4:	orrs	r3, r3, r1, lsr #31
   113e8:	bne	11458 <vetor_remove@@Base+0x7c>
   113ec:	ldr	r3, [r0]
   113f0:	cmp	r1, r3
   113f4:	bge	11458 <vetor_remove@@Base+0x7c>
   113f8:	ldr	r3, [r0, #8]
   113fc:	push	{r4, r5, r6, r7, r8, lr}
   11400:	mov	r5, r0
   11404:	ldr	r0, [r3, r1, lsl #2]
   11408:	mov	r4, r1
   1140c:	lsl	r7, r1, #2
   11410:	bl	10bc8 <free@plt>
   11414:	ldr	r6, [r5]
   11418:	add	r3, r4, #1
   1141c:	cmp	r3, r6
   11420:	bge	11448 <vetor_remove@@Base+0x6c>
   11424:	mvn	r2, #-1073741824	; 0xc0000000
   11428:	sub	r2, r2, r4
   1142c:	ldr	r0, [r5, #8]
   11430:	add	r2, r2, r6
   11434:	add	r1, r7, #4
   11438:	add	r1, r0, r1
   1143c:	lsl	r2, r2, #2
   11440:	add	r0, r0, r7
   11444:	bl	10bbc <memmove@plt>
   11448:	sub	r6, r6, #1
   1144c:	str	r6, [r5]
   11450:	mov	r0, #0
   11454:	pop	{r4, r5, r6, r7, r8, pc}
   11458:	mvn	r0, #0
   1145c:	bx	lr

00011460 <vetor_pesquisa@@Base>:
   11460:	cmp	r0, #0
   11464:	push	{r4, r5, r6, r7, r8, lr}
   11468:	beq	114b4 <vetor_pesquisa@@Base+0x54>
   1146c:	ldr	r7, [r0]
   11470:	cmp	r7, #0
   11474:	ble	114b4 <vetor_pesquisa@@Base+0x54>
   11478:	ldr	r5, [r0, #8]
   1147c:	mov	r6, r1
   11480:	mov	r4, #0
   11484:	sub	r5, r5, #4
   11488:	b	11498 <vetor_pesquisa@@Base+0x38>
   1148c:	add	r4, r4, #1
   11490:	cmp	r4, r7
   11494:	beq	114b4 <vetor_pesquisa@@Base+0x54>
   11498:	mov	r1, r6
   1149c:	ldr	r0, [r5, #4]!
   114a0:	bl	10b8c <strcmp@plt>
   114a4:	cmp	r0, #0
   114a8:	bne	1148c <vetor_pesquisa@@Base+0x2c>
   114ac:	mov	r0, r4
   114b0:	pop	{r4, r5, r6, r7, r8, pc}
   114b4:	mvn	r4, #0
   114b8:	mov	r0, r4
   114bc:	pop	{r4, r5, r6, r7, r8, pc}

000114c0 <vetor_ordena@@Base>:
   114c0:	cmp	r0, #0
   114c4:	beq	1153c <vetor_ordena@@Base+0x7c>
   114c8:	ldr	r3, [r0]
   114cc:	cmp	r3, #1
   114d0:	ble	11534 <vetor_ordena@@Base+0x74>
   114d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114d8:	sub	r3, r3, #-1073741823	; 0xc0000001
   114dc:	ldr	sl, [r0, #8]
   114e0:	mov	r8, #1
   114e4:	mov	r7, sl
   114e8:	add	r9, sl, r3, lsl #2
   114ec:	ldr	r6, [r7, #4]!
   114f0:	mov	r5, r8
   114f4:	mov	r4, r7
   114f8:	ldr	r1, [r4, #-4]
   114fc:	mov	r0, r6
   11500:	bl	10b8c <strcmp@plt>
   11504:	cmp	r0, #0
   11508:	bge	1151c <vetor_ordena@@Base+0x5c>
   1150c:	ldr	r3, [r4, #-4]!
   11510:	subs	r5, r5, #1
   11514:	str	r3, [r4, #4]
   11518:	bne	114f8 <vetor_ordena@@Base+0x38>
   1151c:	cmp	r9, r7
   11520:	str	r6, [sl, r5, lsl #2]
   11524:	add	r8, r8, #1
   11528:	bne	114ec <vetor_ordena@@Base+0x2c>
   1152c:	mov	r0, #0
   11530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11534:	mov	r0, #0
   11538:	bx	lr
   1153c:	mvn	r0, #0
   11540:	bx	lr

00011544 <novo_str@@Base>:
   11544:	push	{r4, r5, r6, r7, r8, lr}
   11548:	mov	r5, r0
   1154c:	mov	r0, #12
   11550:	bl	10c10 <malloc@plt>
   11554:	subs	r4, r0, #0
   11558:	beq	11598 <novo_str@@Base+0x54>
   1155c:	mov	r0, r5
   11560:	bl	10c40 <strlen@plt>
   11564:	add	r7, r0, #1
   11568:	mov	r0, r7
   1156c:	bl	10c10 <malloc@plt>
   11570:	cmp	r0, #0
   11574:	mov	r6, r0
   11578:	str	r0, [r4]
   1157c:	beq	115a0 <novo_str@@Base+0x5c>
   11580:	mov	r2, r7
   11584:	mov	r1, r5
   11588:	bl	10be0 <memcpy@plt>
   1158c:	mov	r3, #0
   11590:	str	r3, [r4, #4]
   11594:	str	r3, [r4, #8]
   11598:	mov	r0, r4
   1159c:	pop	{r4, r5, r6, r7, r8, pc}
   115a0:	mov	r0, r4
   115a4:	bl	10bc8 <free@plt>
   115a8:	mov	r4, r6
   115ac:	b	11598 <novo_str@@Base+0x54>

000115b0 <lista_nova@@Base>:
   115b0:	push	{r4, lr}
   115b4:	mov	r0, #12
   115b8:	bl	10c10 <malloc@plt>
   115bc:	cmp	r0, #0
   115c0:	movne	r3, #0
   115c4:	strne	r3, [r0]
   115c8:	strne	r3, [r0, #4]
   115cc:	strne	r3, [r0, #8]
   115d0:	pop	{r4, pc}

000115d4 <lista_apaga@@Base>:
   115d4:	push	{r4, r5, r6, lr}
   115d8:	subs	r5, r0, #0
   115dc:	bne	115f8 <lista_apaga@@Base+0x24>
   115e0:	b	11610 <lista_apaga@@Base+0x3c>
   115e4:	ldm	r4, {r0, r3}
   115e8:	str	r3, [r5]
   115ec:	bl	10bc8 <free@plt>
   115f0:	mov	r0, r4
   115f4:	bl	10bc8 <free@plt>
   115f8:	ldr	r4, [r5]
   115fc:	cmp	r4, #0
   11600:	bne	115e4 <lista_apaga@@Base+0x10>
   11604:	mov	r0, r5
   11608:	pop	{r4, r5, r6, lr}
   1160c:	b	10bc8 <free@plt>
   11610:	pop	{r4, r5, r6, pc}

00011614 <lista_tamanho@@Base>:
   11614:	cmp	r0, #0
   11618:	ldrne	r0, [r0, #8]
   1161c:	mvneq	r0, #0
   11620:	bx	lr

00011624 <lista_inicio@@Base>:
   11624:	cmp	r0, #0
   11628:	ldrne	r0, [r0]
   1162c:	bx	lr

00011630 <lista_fim@@Base>:
   11630:	cmp	r0, #0
   11634:	ldrne	r0, [r0, #4]
   11638:	bx	lr

0001163c <lista_insere@@Base>:
   1163c:	cmp	r1, #0
   11640:	cmpne	r0, #0
   11644:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11648:	moveq	r8, #1
   1164c:	movne	r8, #0
   11650:	beq	116ec <lista_insere@@Base+0xb0>
   11654:	mov	r9, r0
   11658:	mov	r0, #12
   1165c:	mov	sl, r1
   11660:	mov	r5, r2
   11664:	bl	10c10 <malloc@plt>
   11668:	subs	r4, r0, #0
   1166c:	beq	116ec <lista_insere@@Base+0xb0>
   11670:	mov	r0, sl
   11674:	bl	10c40 <strlen@plt>
   11678:	add	r6, r0, #1
   1167c:	mov	r0, r6
   11680:	bl	10c10 <malloc@plt>
   11684:	cmp	r0, #0
   11688:	mov	r7, r0
   1168c:	str	r0, [r4]
   11690:	beq	1171c <lista_insere@@Base+0xe0>
   11694:	mov	r2, r6
   11698:	mov	r1, sl
   1169c:	bl	10be0 <memcpy@plt>
   116a0:	ldr	r3, [r9, #8]
   116a4:	cmp	r5, #0
   116a8:	add	r3, r3, #1
   116ac:	str	r3, [r9, #8]
   116b0:	str	r8, [r4, #4]
   116b4:	str	r8, [r4, #8]
   116b8:	ldr	r3, [r9]
   116bc:	beq	116f8 <lista_insere@@Base+0xbc>
   116c0:	cmp	r5, r3
   116c4:	streq	r4, [r5, #8]
   116c8:	ldrne	r3, [r5, #8]
   116cc:	strne	r5, [r4, #4]
   116d0:	strne	r3, [r4, #8]
   116d4:	streq	r5, [r4, #4]
   116d8:	strne	r4, [r3, #4]
   116dc:	streq	r4, [r9]
   116e0:	strne	r4, [r5, #8]
   116e4:	mov	r0, r4
   116e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116ec:	mov	r4, #0
   116f0:	mov	r0, r4
   116f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116f8:	cmp	r3, #0
   116fc:	streq	r4, [r9, #4]
   11700:	ldrne	r3, [r9, #4]
   11704:	streq	r4, [r9]
   11708:	strne	r3, [r4, #8]
   1170c:	mov	r0, r4
   11710:	strne	r4, [r3, #4]
   11714:	strne	r4, [r9, #4]
   11718:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1171c:	mov	r0, r4
   11720:	bl	10bc8 <free@plt>
   11724:	mov	r4, r7
   11728:	b	116e4 <lista_insere@@Base+0xa8>

0001172c <lista_remove@@Base>:
   1172c:	cmp	r1, #0
   11730:	cmpne	r0, #0
   11734:	push	{r4, r5, r6, lr}
   11738:	beq	1178c <lista_remove@@Base+0x60>
   1173c:	ldr	r2, [r1, #8]
   11740:	ldr	r3, [r0, #8]
   11744:	cmp	r2, #0
   11748:	sub	r3, r3, #1
   1174c:	str	r3, [r0, #8]
   11750:	ldrne	r3, [r1, #4]
   11754:	ldreq	r5, [r1, #4]
   11758:	strne	r3, [r2, #4]
   1175c:	ldrne	r5, [r1, #4]
   11760:	streq	r5, [r0]
   11764:	cmp	r5, #0
   11768:	streq	r2, [r0, #4]
   1176c:	mov	r4, r1
   11770:	ldr	r0, [r1]
   11774:	strne	r2, [r5, #8]
   11778:	bl	10bc8 <free@plt>
   1177c:	mov	r0, r4
   11780:	bl	10bc8 <free@plt>
   11784:	mov	r0, r5
   11788:	pop	{r4, r5, r6, pc}
   1178c:	mov	r5, #0
   11790:	mov	r0, r5
   11794:	pop	{r4, r5, r6, pc}

00011798 <lista_pesquisa@@Base>:
   11798:	cmp	r1, #0
   1179c:	cmpne	r0, #0
   117a0:	push	{r4, r5, r6, lr}
   117a4:	moveq	r4, #1
   117a8:	movne	r4, #0
   117ac:	beq	11834 <lista_pesquisa@@Base+0x9c>
   117b0:	cmp	r2, #1
   117b4:	bhi	117f4 <lista_pesquisa@@Base+0x5c>
   117b8:	cmp	r2, #0
   117bc:	mov	r5, r1
   117c0:	bne	117fc <lista_pesquisa@@Base+0x64>
   117c4:	ldr	r4, [r0]
   117c8:	cmp	r4, #0
   117cc:	bne	117e0 <lista_pesquisa@@Base+0x48>
   117d0:	b	117f4 <lista_pesquisa@@Base+0x5c>
   117d4:	ldr	r4, [r4, #4]
   117d8:	cmp	r4, #0
   117dc:	beq	117f4 <lista_pesquisa@@Base+0x5c>
   117e0:	mov	r1, r5
   117e4:	ldr	r0, [r4]
   117e8:	bl	10b8c <strcmp@plt>
   117ec:	cmp	r0, #0
   117f0:	bne	117d4 <lista_pesquisa@@Base+0x3c>
   117f4:	mov	r0, r4
   117f8:	pop	{r4, r5, r6, pc}
   117fc:	ldr	r4, [r0, #4]
   11800:	cmp	r4, #0
   11804:	bne	11818 <lista_pesquisa@@Base+0x80>
   11808:	b	117f4 <lista_pesquisa@@Base+0x5c>
   1180c:	ldr	r4, [r4, #8]
   11810:	cmp	r4, #0
   11814:	beq	117f4 <lista_pesquisa@@Base+0x5c>
   11818:	mov	r1, r5
   1181c:	ldr	r0, [r4]
   11820:	bl	10b8c <strcmp@plt>
   11824:	cmp	r0, #0
   11828:	bne	1180c <lista_pesquisa@@Base+0x74>
   1182c:	mov	r0, r4
   11830:	pop	{r4, r5, r6, pc}
   11834:	mov	r4, #0
   11838:	mov	r0, r4
   1183c:	pop	{r4, r5, r6, pc}

00011840 <lista_ordena@@Base>:
   11840:	cmp	r0, #0
   11844:	beq	118b8 <lista_ordena@@Base+0x78>
   11848:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1184c:	ldr	r8, [r0]
   11850:	ldr	r9, [r8, #4]
   11854:	cmp	r9, #0
   11858:	beq	118b0 <lista_ordena@@Base+0x70>
   1185c:	ldr	sl, [r8]
   11860:	mov	r7, r8
   11864:	mov	r5, sl
   11868:	mov	r4, r9
   1186c:	ldr	r6, [r4]
   11870:	mov	r1, r5
   11874:	mov	r0, r6
   11878:	bl	10b8c <strcmp@plt>
   1187c:	cmp	r0, #0
   11880:	movlt	r7, r4
   11884:	ldr	r4, [r4, #4]
   11888:	movlt	r5, r6
   1188c:	cmp	r4, #0
   11890:	bne	1186c <lista_ordena@@Base+0x2c>
   11894:	cmp	r8, r7
   11898:	strne	r5, [r8]
   1189c:	mov	r8, r9
   118a0:	strne	sl, [r7]
   118a4:	ldr	r9, [r8, #4]
   118a8:	cmp	r9, #0
   118ac:	bne	1185c <lista_ordena@@Base+0x1c>
   118b0:	mov	r0, r9
   118b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118b8:	mvn	r0, #0
   118bc:	bx	lr

000118c0 <lista_inverte@@Base>:
   118c0:	push	{r4, r5, lr}
   118c4:	subs	r5, r0, #0
   118c8:	beq	11960 <lista_inverte@@Base+0xa0>
   118cc:	ldr	r4, [r5, #8]
   118d0:	cmp	r4, #1
   118d4:	ble	11950 <lista_inverte@@Base+0x90>
   118d8:	ldr	r2, [r5]
   118dc:	cmp	r4, #2
   118e0:	ldr	r3, [r2, #4]
   118e4:	beq	11958 <lista_inverte@@Base+0x98>
   118e8:	sub	r4, r4, #2
   118ec:	mov	r1, #0
   118f0:	b	118f8 <lista_inverte@@Base+0x38>
   118f4:	mov	r3, lr
   118f8:	ldr	ip, [r3, #8]
   118fc:	ldr	lr, [r3, #4]
   11900:	add	r1, r1, #1
   11904:	str	lr, [ip, #4]
   11908:	ldr	lr, [r3, #4]
   1190c:	cmp	r1, r4
   11910:	str	ip, [lr, #8]
   11914:	str	r2, [r3, #4]
   11918:	str	r3, [r2, #8]
   1191c:	mov	r2, r3
   11920:	bne	118f4 <lista_inverte@@Base+0x34>
   11924:	ldr	r2, [r5, #4]
   11928:	mov	r1, #0
   1192c:	mov	r0, r1
   11930:	ldr	ip, [r2, #8]
   11934:	str	ip, [r5, #4]
   11938:	str	r1, [ip, #4]
   1193c:	str	r1, [r2, #8]
   11940:	str	r3, [r2, #4]
   11944:	str	r2, [r3, #8]
   11948:	str	r2, [r5]
   1194c:	pop	{r4, r5, pc}
   11950:	mov	r0, #0
   11954:	pop	{r4, r5, pc}
   11958:	mov	r3, r2
   1195c:	b	11924 <lista_inverte@@Base+0x64>
   11960:	mvn	r0, #0
   11964:	pop	{r4, r5, pc}

00011968 <__libc_csu_init@@Base>:
   11968:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1196c:	mov	r7, r0
   11970:	ldr	r6, [pc, #72]	; 119c0 <__libc_csu_init@@Base+0x58>
   11974:	ldr	r5, [pc, #72]	; 119c4 <__libc_csu_init@@Base+0x5c>
   11978:	add	r6, pc, r6
   1197c:	add	r5, pc, r5
   11980:	sub	r6, r6, r5
   11984:	mov	r8, r1
   11988:	mov	r9, r2
   1198c:	bl	10b60 <calloc@plt-0x20>
   11990:	asrs	r6, r6, #2
   11994:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11998:	mov	r4, #0
   1199c:	add	r4, r4, #1
   119a0:	ldr	r3, [r5], #4
   119a4:	mov	r2, r9
   119a8:	mov	r1, r8
   119ac:	mov	r0, r7
   119b0:	blx	r3
   119b4:	cmp	r6, r4
   119b8:	bne	1199c <__libc_csu_init@@Base+0x34>
   119bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119c0:	muleq	r1, r0, r5
   119c4:	andeq	r0, r1, r8, lsl #11

000119c8 <__libc_csu_fini@@Base>:
   119c8:	bx	lr

Disassembly of section .fini:

000119cc <.fini>:
   119cc:	push	{r3, lr}
   119d0:	pop	{r3, pc}
