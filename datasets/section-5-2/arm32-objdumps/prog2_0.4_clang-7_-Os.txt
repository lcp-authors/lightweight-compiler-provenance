
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	1071c <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <printf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <printf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <printf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <puts@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <malloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <__libc_start_main@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <__gmon_start__@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__isoc99_scanf@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <abort@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

Disassembly of section .text:

000106e0 <_start@@Base>:
   106e0:	mov	fp, #0
   106e4:	mov	lr, #0
   106e8:	pop	{r1}		; (ldr r1, [sp], #4)
   106ec:	mov	r2, sp
   106f0:	push	{r2}		; (str r2, [sp, #-4]!)
   106f4:	push	{r0}		; (str r0, [sp, #-4]!)
   106f8:	ldr	ip, [pc, #16]	; 10710 <_start@@Base+0x30>
   106fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10700:	ldr	r0, [pc, #12]	; 10714 <_start@@Base+0x34>
   10704:	ldr	r3, [pc, #12]	; 10718 <_start@@Base+0x38>
   10708:	bl	106b0 <__libc_start_main@plt>
   1070c:	bl	106d4 <abort@plt>
   10710:			; <UNDEFINED> instruction: 0x000109bc
   10714:	andeq	r0, r1, r4, lsl r8
   10718:	andeq	r0, r1, ip, asr r9
   1071c:	ldr	r3, [pc, #20]	; 10738 <_start@@Base+0x58>
   10720:	ldr	r2, [pc, #20]	; 1073c <_start@@Base+0x5c>
   10724:	add	r3, pc, r3
   10728:	ldr	r2, [r3, r2]
   1072c:	cmp	r2, #0
   10730:	bxeq	lr
   10734:	b	106bc <__gmon_start__@plt>
   10738:	ldrdeq	r0, [r1], -r4
   1073c:	andeq	r0, r0, r8, lsr #32
   10740:	ldr	r0, [pc, #24]	; 10760 <_start@@Base+0x80>
   10744:	ldr	r3, [pc, #24]	; 10764 <_start@@Base+0x84>
   10748:	cmp	r3, r0
   1074c:	bxeq	lr
   10750:	ldr	r3, [pc, #16]	; 10768 <_start@@Base+0x88>
   10754:	cmp	r3, #0
   10758:	bxeq	lr
   1075c:	bx	r3
   10760:	andeq	r1, r2, r4, lsr r0
   10764:	andeq	r1, r2, r4, lsr r0
   10768:	andeq	r0, r0, r0
   1076c:	ldr	r0, [pc, #36]	; 10798 <_start@@Base+0xb8>
   10770:	ldr	r1, [pc, #36]	; 1079c <_start@@Base+0xbc>
   10774:	sub	r1, r1, r0
   10778:	asr	r1, r1, #2
   1077c:	add	r1, r1, r1, lsr #31
   10780:	asrs	r1, r1, #1
   10784:	bxeq	lr
   10788:	ldr	r3, [pc, #16]	; 107a0 <_start@@Base+0xc0>
   1078c:	cmp	r3, #0
   10790:	bxeq	lr
   10794:	bx	r3
   10798:	andeq	r1, r2, r4, lsr r0
   1079c:	andeq	r1, r2, r4, lsr r0
   107a0:	andeq	r0, r0, r0
   107a4:	push	{r4, lr}
   107a8:	ldr	r4, [pc, #24]	; 107c8 <_start@@Base+0xe8>
   107ac:	ldrb	r3, [r4]
   107b0:	cmp	r3, #0
   107b4:	popne	{r4, pc}
   107b8:	bl	10740 <_start@@Base+0x60>
   107bc:	mov	r3, #1
   107c0:	strb	r3, [r4]
   107c4:	pop	{r4, pc}
   107c8:	andeq	r1, r2, r4, lsr r0
   107cc:	b	1076c <_start@@Base+0x8c>

000107d0 <ordenado@@Base>:
   107d0:	mov	r2, #1
   107d4:	cmp	r1, #2
   107d8:	blt	1080c <ordenado@@Base+0x3c>
   107dc:	ldr	ip, [r0]
   107e0:	mov	r2, #1
   107e4:	ldr	r3, [r0, r2, lsl #2]
   107e8:	cmp	r3, ip
   107ec:	blt	10808 <ordenado@@Base+0x38>
   107f0:	add	r2, r2, #1
   107f4:	mov	ip, r3
   107f8:	cmp	r2, r1
   107fc:	blt	107e4 <ordenado@@Base+0x14>
   10800:	mov	r2, #1
   10804:	b	1080c <ordenado@@Base+0x3c>
   10808:	mov	r2, #0
   1080c:	mov	r0, r2
   10810:	bx	lr

00010814 <main@@Base>:
   10814:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10818:	add	fp, sp, #24
   1081c:	sub	sp, sp, #8
   10820:	movw	r0, #2516	; 0x9d4
   10824:	movt	r0, #1
   10828:	bl	1068c <printf@plt>
   1082c:	movw	r0, #2549	; 0x9f5
   10830:	add	r1, sp, #4
   10834:	movt	r0, #1
   10838:	bl	106c8 <__isoc99_scanf@plt>
   1083c:	ldr	r4, [sp, #4]
   10840:	cmp	r4, #101	; 0x65
   10844:	blt	1086c <main@@Base+0x58>
   10848:	movw	r0, #2552	; 0x9f8
   1084c:	movt	r0, #1
   10850:	bl	1068c <printf@plt>
   10854:	mov	r0, #100	; 0x64
   10858:	str	r0, [sp, #4]
   1085c:	mov	r0, #400	; 0x190
   10860:	bl	106a4 <malloc@plt>
   10864:	mov	r8, r0
   10868:	b	10880 <main@@Base+0x6c>
   1086c:	lsl	r0, r4, #2
   10870:	bl	106a4 <malloc@plt>
   10874:	mov	r8, r0
   10878:	cmp	r4, #1
   1087c:	blt	108f0 <main@@Base+0xdc>
   10880:	movw	r6, #2597	; 0xa25
   10884:	movw	r7, #2549	; 0x9f5
   10888:	mov	r5, #0
   1088c:	mov	r4, r8
   10890:	movt	r6, #1
   10894:	movt	r7, #1
   10898:	add	r5, r5, #1
   1089c:	mov	r0, r6
   108a0:	mov	r1, r5
   108a4:	bl	1068c <printf@plt>
   108a8:	mov	r0, r7
   108ac:	mov	r1, r4
   108b0:	bl	106c8 <__isoc99_scanf@plt>
   108b4:	ldr	r0, [sp, #4]
   108b8:	add	r4, r4, #4
   108bc:	cmp	r5, r0
   108c0:	blt	10898 <main@@Base+0x84>
   108c4:	cmp	r0, #2
   108c8:	blt	108f0 <main@@Base+0xdc>
   108cc:	ldr	r2, [r8]
   108d0:	mov	r1, #1
   108d4:	ldr	r3, [r8, r1, lsl #2]
   108d8:	cmp	r3, r2
   108dc:	blt	1094c <main@@Base+0x138>
   108e0:	add	r1, r1, #1
   108e4:	mov	r2, r3
   108e8:	cmp	r1, r0
   108ec:	blt	108d4 <main@@Base+0xc0>
   108f0:	movw	r0, #2621	; 0xa3d
   108f4:	movt	r0, #1
   108f8:	bl	1068c <printf@plt>
   108fc:	ldr	r5, [sp, #4]
   10900:	add	r0, r8, r5, lsl #2
   10904:	cmp	r5, #2
   10908:	ldr	r1, [r0, #-4]
   1090c:	blt	10934 <main@@Base+0x120>
   10910:	movw	r4, #2688	; 0xa80
   10914:	sub	r6, r8, #8
   10918:	movt	r4, #1
   1091c:	mov	r0, r4
   10920:	bl	1068c <printf@plt>
   10924:	ldr	r1, [r6, r5, lsl #2]
   10928:	sub	r5, r5, #1
   1092c:	cmp	r5, #1
   10930:	bgt	1091c <main@@Base+0x108>
   10934:	movw	r0, #2692	; 0xa84
   10938:	movt	r0, #1
   1093c:	bl	1068c <printf@plt>
   10940:	mov	r0, #0
   10944:	sub	sp, fp, #24
   10948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1094c:	movw	r0, #2704	; 0xa90
   10950:	movt	r0, #1
   10954:	bl	10698 <puts@plt>
   10958:	b	10940 <main@@Base+0x12c>

0001095c <__libc_csu_init@@Base>:
   1095c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10960:	mov	r7, r0
   10964:	ldr	r6, [pc, #72]	; 109b4 <__libc_csu_init@@Base+0x58>
   10968:	ldr	r5, [pc, #72]	; 109b8 <__libc_csu_init@@Base+0x5c>
   1096c:	add	r6, pc, r6
   10970:	add	r5, pc, r5
   10974:	sub	r6, r6, r5
   10978:	mov	r8, r1
   1097c:	mov	r9, r2
   10980:	bl	1066c <printf@plt-0x20>
   10984:	asrs	r6, r6, #2
   10988:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1098c:	mov	r4, #0
   10990:	add	r4, r4, #1
   10994:	ldr	r3, [r5], #4
   10998:	mov	r2, r9
   1099c:	mov	r1, r8
   109a0:	mov	r0, r7
   109a4:	blx	r3
   109a8:	cmp	r6, r4
   109ac:	bne	10990 <__libc_csu_init@@Base+0x34>
   109b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109b4:	muleq	r1, r8, r5
   109b8:	muleq	r1, r0, r5

000109bc <__libc_csu_fini@@Base>:
   109bc:	bx	lr

Disassembly of section .fini:

000109c0 <.fini>:
   109c0:	push	{r3, lr}
   109c4:	pop	{r3, pc}
