
../repos/eddieantonio-ocreval-3ab279a/ngram/ngram:     file format elf32-littlearm


Disassembly of section .init:

00010904 <.init>:
   10904:	push	{r3, lr}
   10908:	bl	10b64 <getc@plt+0xc0>
   1090c:	pop	{r3, pc}

Disassembly of section .plt:

00010910 <calloc@plt-0x14>:
   10910:	push	{lr}		; (str lr, [sp, #-4]!)
   10914:	ldr	lr, [pc, #4]	; 10920 <calloc@plt-0x4>
   10918:	add	lr, pc, lr
   1091c:	ldr	pc, [lr, #8]!
   10920:	andeq	r2, r1, r0, ror #13

00010924 <calloc@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1760]!	; 0x6e0

00010930 <raise@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1752]!	; 0x6d8

0001093c <strcmp@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #73728	; 0x12000
   10944:	ldr	pc, [ip, #1744]!	; 0x6d0

00010948 <printf@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #73728	; 0x12000
   10950:	ldr	pc, [ip, #1736]!	; 0x6c8

00010954 <fopen@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #73728	; 0x12000
   1095c:	ldr	pc, [ip, #1728]!	; 0x6c0

00010960 <free@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #73728	; 0x12000
   10968:	ldr	pc, [ip, #1720]!	; 0x6b8

0001096c <utf8proc_get_property@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #73728	; 0x12000
   10974:	ldr	pc, [ip, #1712]!	; 0x6b0

00010978 <fgets@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #73728	; 0x12000
   10980:	ldr	pc, [ip, #1704]!	; 0x6a8

00010984 <utf8proc_encode_char@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #73728	; 0x12000
   1098c:	ldr	pc, [ip, #1696]!	; 0x6a0

00010990 <strdup@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #73728	; 0x12000
   10998:	ldr	pc, [ip, #1688]!	; 0x698

0001099c <rewind@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #73728	; 0x12000
   109a4:	ldr	pc, [ip, #1680]!	; 0x690

000109a8 <unlink@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #73728	; 0x12000
   109b0:	ldr	pc, [ip, #1672]!	; 0x688

000109b4 <utf8proc_tolower@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #73728	; 0x12000
   109bc:	ldr	pc, [ip, #1664]!	; 0x680

000109c0 <__xstat@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #73728	; 0x12000
   109c8:	ldr	pc, [ip, #1656]!	; 0x678

000109cc <strcat@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #73728	; 0x12000
   109d4:	ldr	pc, [ip, #1648]!	; 0x670

000109d8 <fread@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #73728	; 0x12000
   109e0:	ldr	pc, [ip, #1640]!	; 0x668

000109e4 <utf8proc_iterate@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #73728	; 0x12000
   109ec:	ldr	pc, [ip, #1632]!	; 0x660

000109f0 <puts@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #73728	; 0x12000
   109f8:	ldr	pc, [ip, #1624]!	; 0x658

000109fc <__libc_start_main@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #73728	; 0x12000
   10a04:	ldr	pc, [ip, #1616]!	; 0x650

00010a08 <__sysv_signal@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #73728	; 0x12000
   10a10:	ldr	pc, [ip, #1608]!	; 0x648

00010a14 <__gmon_start__@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #73728	; 0x12000
   10a1c:	ldr	pc, [ip, #1600]!	; 0x640

00010a20 <getpid@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #73728	; 0x12000
   10a28:	ldr	pc, [ip, #1592]!	; 0x638

00010a2c <exit@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #73728	; 0x12000
   10a34:	ldr	pc, [ip, #1584]!	; 0x630

00010a38 <utf8proc_category@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #73728	; 0x12000
   10a40:	ldr	pc, [ip, #1576]!	; 0x628

00010a44 <strlen@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #73728	; 0x12000
   10a4c:	ldr	pc, [ip, #1568]!	; 0x620

00010a50 <fprintf@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #73728	; 0x12000
   10a58:	ldr	pc, [ip, #1560]!	; 0x618

00010a5c <fclose@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #73728	; 0x12000
   10a64:	ldr	pc, [ip, #1552]!	; 0x610

00010a68 <sprintf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #73728	; 0x12000
   10a70:	ldr	pc, [ip, #1544]!	; 0x608

00010a74 <utf8proc_errmsg@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #73728	; 0x12000
   10a7c:	ldr	pc, [ip, #1536]!	; 0x600

00010a80 <fputs@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #73728	; 0x12000
   10a88:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a8c <strncmp@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #73728	; 0x12000
   10a94:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a98 <abort@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #73728	; 0x12000
   10aa0:	ldr	pc, [ip, #1512]!	; 0x5e8

00010aa4 <getc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #73728	; 0x12000
   10aac:	ldr	pc, [ip, #1504]!	; 0x5e0

Disassembly of section .text:

00010ab0 <error@@Base-0xbac>:
   10ab0:	push	{r0, r1, r2, r4, r5, lr}
   10ab4:	add	ip, sp, #8
   10ab8:	ldr	r3, [pc, #88]	; 10b18 <getc@plt+0x74>
   10abc:	str	r0, [ip, #-4]!
   10ac0:	ldr	r2, [pc, #84]	; 10b1c <getc@plt+0x78>
   10ac4:	mov	r0, ip
   10ac8:	mov	r5, r1
   10acc:	bl	11780 <error@@Base+0x124>
   10ad0:	ldr	r3, [sp, #4]
   10ad4:	cmp	r3, #0
   10ad8:	bne	10ae4 <getc@plt+0x40>
   10adc:	ldr	r0, [pc, #60]	; 10b20 <getc@plt+0x7c>
   10ae0:	bl	1165c <error@@Base>
   10ae4:	bl	10ce8 <getc@plt+0x244>
   10ae8:	ldr	r3, [pc, #52]	; 10b24 <getc@plt+0x80>
   10aec:	mov	r4, #0
   10af0:	strh	r0, [r3]
   10af4:	ldr	r3, [sp, #4]
   10af8:	cmp	r4, r3
   10afc:	blt	10b08 <getc@plt+0x64>
   10b00:	bl	10f44 <getc@plt+0x4a0>
   10b04:	bl	11604 <getc@plt+0xb60>
   10b08:	ldr	r0, [r5, r4, lsl #2]
   10b0c:	bl	10df8 <getc@plt+0x354>
   10b10:	add	r4, r4, #1
   10b14:	b	10af4 <getc@plt+0x50>
   10b18:	andeq	r3, r2, r8, lsr #1
   10b1c:	andeq	r2, r1, sp, lsr r2
   10b20:	andeq	r2, r1, ip, ror #4
   10b24:	strdeq	r3, [r2], -r8
   10b28:	mov	fp, #0
   10b2c:	mov	lr, #0
   10b30:	pop	{r1}		; (ldr r1, [sp], #4)
   10b34:	mov	r2, sp
   10b38:	push	{r2}		; (str r2, [sp, #-4]!)
   10b3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b40:	ldr	ip, [pc, #16]	; 10b58 <getc@plt+0xb4>
   10b44:	push	{ip}		; (str ip, [sp, #-4]!)
   10b48:	ldr	r0, [pc, #12]	; 10b5c <getc@plt+0xb8>
   10b4c:	ldr	r3, [pc, #12]	; 10b60 <getc@plt+0xbc>
   10b50:	bl	109fc <__libc_start_main@plt>
   10b54:	bl	10a98 <abort@plt>
   10b58:	ldrdeq	r2, [r1], -r8
   10b5c:			; <UNDEFINED> instruction: 0x00010ab0
   10b60:	andeq	r2, r1, r8, ror r1
   10b64:	ldr	r3, [pc, #20]	; 10b80 <getc@plt+0xdc>
   10b68:	ldr	r2, [pc, #20]	; 10b84 <getc@plt+0xe0>
   10b6c:	add	r3, pc, r3
   10b70:	ldr	r2, [r3, r2]
   10b74:	cmp	r2, #0
   10b78:	bxeq	lr
   10b7c:	b	10a14 <__gmon_start__@plt>
   10b80:	andeq	r2, r1, ip, lsl #9
   10b84:	muleq	r0, r0, r0
   10b88:	ldr	r3, [pc, #28]	; 10bac <getc@plt+0x108>
   10b8c:	ldr	r0, [pc, #28]	; 10bb0 <getc@plt+0x10c>
   10b90:	sub	r3, r3, r0
   10b94:	cmp	r3, #6
   10b98:	bxls	lr
   10b9c:	ldr	r3, [pc, #16]	; 10bb4 <getc@plt+0x110>
   10ba0:	cmp	r3, #0
   10ba4:	bxeq	lr
   10ba8:	bx	r3
   10bac:	andeq	r3, r2, fp, asr #1
   10bb0:	andeq	r3, r2, r8, asr #1
   10bb4:	andeq	r0, r0, r0
   10bb8:	ldr	r1, [pc, #36]	; 10be4 <getc@plt+0x140>
   10bbc:	ldr	r0, [pc, #36]	; 10be8 <getc@plt+0x144>
   10bc0:	sub	r1, r1, r0
   10bc4:	asr	r1, r1, #2
   10bc8:	add	r1, r1, r1, lsr #31
   10bcc:	asrs	r1, r1, #1
   10bd0:	bxeq	lr
   10bd4:	ldr	r3, [pc, #16]	; 10bec <getc@plt+0x148>
   10bd8:	cmp	r3, #0
   10bdc:	bxeq	lr
   10be0:	bx	r3
   10be4:	andeq	r3, r2, r8, asr #1
   10be8:	andeq	r3, r2, r8, asr #1
   10bec:	andeq	r0, r0, r0
   10bf0:	push	{r4, lr}
   10bf4:	ldr	r4, [pc, #24]	; 10c14 <getc@plt+0x170>
   10bf8:	ldrb	r3, [r4]
   10bfc:	cmp	r3, #0
   10c00:	popne	{r4, pc}
   10c04:	bl	10b88 <getc@plt+0xe4>
   10c08:	mov	r3, #1
   10c0c:	strb	r3, [r4]
   10c10:	pop	{r4, pc}
   10c14:	ldrdeq	r3, [r2], -r8
   10c18:	ldr	r0, [pc, #40]	; 10c48 <getc@plt+0x1a4>
   10c1c:	ldr	r3, [r0]
   10c20:	cmp	r3, #0
   10c24:	bne	10c2c <getc@plt+0x188>
   10c28:	b	10bb8 <getc@plt+0x114>
   10c2c:	ldr	r3, [pc, #24]	; 10c4c <getc@plt+0x1a8>
   10c30:	cmp	r3, #0
   10c34:	beq	10c28 <getc@plt+0x184>
   10c38:	push	{r4, lr}
   10c3c:	blx	r3
   10c40:	pop	{r4, lr}
   10c44:	b	10bb8 <getc@plt+0x114>
   10c48:	andeq	r2, r2, r4, lsl #28
   10c4c:	andeq	r0, r0, r0
   10c50:	ldr	r3, [pc, #80]	; 10ca8 <getc@plt+0x204>
   10c54:	push	{lr}		; (str lr, [sp, #-4]!)
   10c58:	add	r0, r0, #12
   10c5c:	ldrsh	lr, [r3]
   10c60:	add	r1, r1, #12
   10c64:	mov	r3, #0
   10c68:	cmp	r3, lr
   10c6c:	bge	10c98 <getc@plt+0x1f4>
   10c70:	ldr	ip, [r0], #4
   10c74:	ldr	r2, [r1], #4
   10c78:	cmp	ip, r2
   10c7c:	beq	10c8c <getc@plt+0x1e8>
   10c80:	bcc	10ca0 <getc@plt+0x1fc>
   10c84:	mov	r0, #1
   10c88:	pop	{pc}		; (ldr pc, [sp], #4)
   10c8c:	add	r3, r3, #1
   10c90:	sxth	r3, r3
   10c94:	b	10c68 <getc@plt+0x1c4>
   10c98:	mov	r0, #0
   10c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   10ca0:	mvn	r0, #0
   10ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ca8:	strdeq	r3, [r2], -r8
   10cac:	push	{lr}		; (str lr, [sp, #-4]!)
   10cb0:	ldr	r3, [r1, #24]
   10cb4:	ldr	lr, [r0, #24]
   10cb8:	cmp	lr, r3
   10cbc:	beq	10cc8 <getc@plt+0x224>
   10cc0:	sub	r0, r3, lr
   10cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   10cc8:	ldr	r2, [r0, #28]
   10ccc:	ldr	r3, [r1, #28]
   10cd0:	cmp	r2, r3
   10cd4:	beq	10ce0 <getc@plt+0x23c>
   10cd8:	sub	r0, r3, r2
   10cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   10ce0:	pop	{lr}		; (ldr lr, [sp], #4)
   10ce4:	b	10c50 <getc@plt+0x1ac>
   10ce8:	ldr	r3, [pc, #64]	; 10d30 <getc@plt+0x28c>
   10cec:	ldr	r1, [r3]
   10cf0:	cmp	r1, #0
   10cf4:	beq	10d28 <getc@plt+0x284>
   10cf8:	ldrb	r0, [r1]
   10cfc:	sub	r3, r0, #49	; 0x31
   10d00:	cmp	r3, #2
   10d04:	bhi	10d1c <getc@plt+0x278>
   10d08:	ldrb	r3, [r1, #1]
   10d0c:	cmp	r3, #0
   10d10:	subeq	r0, r0, #48	; 0x30
   10d14:	sxtheq	r0, r0
   10d18:	beq	10d2c <getc@plt+0x288>
   10d1c:	push	{r4, lr}
   10d20:	ldr	r0, [pc, #12]	; 10d34 <getc@plt+0x290>
   10d24:	bl	116e4 <error@@Base+0x88>
   10d28:	mov	r0, #1
   10d2c:	bx	lr
   10d30:	strdeq	r3, [r2], -ip
   10d34:	strdeq	r2, [r1], -r8
   10d38:	push	{r4, r5, r6, r7, r8, lr}
   10d3c:	mov	r6, r0
   10d40:	mov	r7, r1
   10d44:	mov	r1, r0
   10d48:	ldr	r0, [pc, #156]	; 10dec <getc@plt+0x348>
   10d4c:	uxtb	r5, r2
   10d50:	bl	112b4 <getc@plt+0x810>
   10d54:	subs	r4, r0, #0
   10d58:	bne	10da0 <getc@plt+0x2fc>
   10d5c:	mov	r1, #32
   10d60:	mov	r0, #1
   10d64:	bl	11698 <error@@Base+0x3c>
   10d68:	mov	r4, r0
   10d6c:	mov	r0, r6
   10d70:	bl	10990 <strdup@plt>
   10d74:	ldr	r3, [pc, #116]	; 10df0 <getc@plt+0x34c>
   10d78:	add	r2, r4, #12
   10d7c:	str	r0, [r4, #8]
   10d80:	ldrsh	r0, [r3]
   10d84:	mov	r3, #0
   10d88:	sxth	r1, r3
   10d8c:	cmp	r0, r1
   10d90:	bgt	10ddc <getc@plt+0x338>
   10d94:	mov	r1, r4
   10d98:	ldr	r0, [pc, #76]	; 10dec <getc@plt+0x348>
   10d9c:	bl	112f8 <getc@plt+0x854>
   10da0:	ldr	r3, [r4, #24]
   10da4:	cmp	r5, #0
   10da8:	add	r3, r3, #1
   10dac:	str	r3, [r4, #24]
   10db0:	ldr	r3, [pc, #60]	; 10df4 <getc@plt+0x350>
   10db4:	ldr	r2, [r3, #3960]	; 0xf78
   10db8:	add	r2, r2, #1
   10dbc:	str	r2, [r3, #3960]	; 0xf78
   10dc0:	ldrne	r2, [r4, #28]
   10dc4:	addne	r2, r2, #1
   10dc8:	strne	r2, [r4, #28]
   10dcc:	ldrne	r2, [r3, #3964]	; 0xf7c
   10dd0:	addne	r2, r2, #1
   10dd4:	strne	r2, [r3, #3964]	; 0xf7c
   10dd8:	pop	{r4, r5, r6, r7, r8, pc}
   10ddc:	ldr	r1, [r7, r3, lsl #2]
   10de0:	add	r3, r3, #1
   10de4:	str	r1, [r2], #4
   10de8:	b	10d88 <getc@plt+0x2e4>
   10dec:	andeq	r3, r2, r0, lsl #2
   10df0:	strdeq	r3, [r2], -r8
   10df4:	andeq	r4, r2, r0, lsl #2
   10df8:	push	{r4, r5, r6, r7, r8, r9, lr}
   10dfc:	mov	r5, r0
   10e00:	ldr	r4, [pc, #192]	; 10ec8 <getc@plt+0x424>
   10e04:	sub	sp, sp, #60	; 0x3c
   10e08:	ldr	r1, [pc, #188]	; 10ecc <getc@plt+0x428>
   10e0c:	mov	r0, r4
   10e10:	bl	110e4 <getc@plt+0x640>
   10e14:	ldr	r2, [pc, #180]	; 10ed0 <getc@plt+0x42c>
   10e18:	mov	r1, r5
   10e1c:	mov	r0, r4
   10e20:	bl	119b4 <error@@Base+0x358>
   10e24:	ldr	r8, [pc, #168]	; 10ed4 <getc@plt+0x430>
   10e28:	ldr	r6, [r4]
   10e2c:	cmp	r6, #0
   10e30:	bne	10e3c <getc@plt+0x398>
   10e34:	add	sp, sp, #60	; 0x3c
   10e38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10e3c:	mov	r4, #0
   10e40:	add	r7, sp, #56	; 0x38
   10e44:	mov	r5, r6
   10e48:	mov	r9, r4
   10e4c:	strb	r4, [r7, #-28]!	; 0xffffffe4
   10e50:	ldrsh	r3, [r8]
   10e54:	cmp	r3, r4
   10e58:	bgt	10e74 <getc@plt+0x3d0>
   10e5c:	mov	r2, r9
   10e60:	add	r1, sp, #16
   10e64:	add	r0, sp, #28
   10e68:	bl	10d38 <getc@plt+0x294>
   10e6c:	ldr	r6, [r6, #4]
   10e70:	b	10e2c <getc@plt+0x388>
   10e74:	cmp	r5, #0
   10e78:	beq	10e34 <getc@plt+0x390>
   10e7c:	mov	r3, #1
   10e80:	add	r2, sp, #4
   10e84:	ldr	r1, [r5, #12]
   10e88:	mov	r0, #0
   10e8c:	bl	11d14 <error@@Base+0x6b8>
   10e90:	add	r1, sp, #4
   10e94:	mov	r0, r7
   10e98:	bl	109cc <strcat@plt>
   10e9c:	add	r3, sp, #56	; 0x38
   10ea0:	add	r3, r3, r4, lsl #2
   10ea4:	ldr	r2, [r5, #12]
   10ea8:	add	r4, r4, #1
   10eac:	str	r2, [r3, #-40]	; 0xffffffd8
   10eb0:	ldrb	r3, [r5, #8]
   10eb4:	sxth	r4, r4
   10eb8:	ldr	r5, [r5, #4]
   10ebc:	cmp	r3, #0
   10ec0:	movne	r9, #1
   10ec4:	b	10e50 <getc@plt+0x3ac>
   10ec8:	andeq	r3, r2, r8, ror #1
   10ecc:	andeq	r0, r1, r0, ror #18
   10ed0:	muleq	r2, ip, r0
   10ed4:	strdeq	r3, [r2], -r8
   10ed8:	push	{r4, r5, r6, lr}
   10edc:	mov	r5, #0
   10ee0:	ldr	r0, [pc, #76]	; 10f34 <getc@plt+0x490>
   10ee4:	bl	109f0 <puts@plt>
   10ee8:	ldr	r4, [pc, #72]	; 10f38 <getc@plt+0x494>
   10eec:	ldr	r6, [pc, #72]	; 10f3c <getc@plt+0x498>
   10ef0:	ldr	r3, [r4, #3956]	; 0xf74
   10ef4:	cmp	r5, r3
   10ef8:	blt	10f10 <getc@plt+0x46c>
   10efc:	ldr	r2, [r4, #3964]	; 0xf7c
   10f00:	ldr	r1, [r4, #3960]	; 0xf78
   10f04:	ldr	r0, [pc, #52]	; 10f40 <getc@plt+0x49c>
   10f08:	pop	{r4, r5, r6, lr}
   10f0c:	b	10948 <printf@plt>
   10f10:	ldr	r3, [r4, #3952]	; 0xf70
   10f14:	mov	r0, r6
   10f18:	ldr	r1, [r3, r5, lsl #2]
   10f1c:	add	r5, r5, #1
   10f20:	ldr	r3, [r1, #8]
   10f24:	ldr	r2, [r1, #28]
   10f28:	ldr	r1, [r1, #24]
   10f2c:	bl	10948 <printf@plt>
   10f30:	b	10ef0 <getc@plt+0x44c>
   10f34:	andeq	r2, r1, r6, lsl #4
   10f38:	andeq	r4, r2, r0, lsl #2
   10f3c:	andeq	r2, r1, r8, lsl r2
   10f40:	andeq	r2, r1, sl, lsr #4
   10f44:	push	{r4, lr}
   10f48:	ldr	r4, [pc, #60]	; 10f8c <getc@plt+0x4e8>
   10f4c:	mov	r0, r4
   10f50:	add	r4, r4, #4096	; 0x1000
   10f54:	bl	11390 <getc@plt+0x8ec>
   10f58:	ldr	r1, [r4, #3952]	; 0xf70
   10f5c:	ldr	r2, [pc, #44]	; 10f90 <getc@plt+0x4ec>
   10f60:	ldr	r0, [r4, #3956]	; 0xf74
   10f64:	bl	11224 <getc@plt+0x780>
   10f68:	bl	10ed8 <getc@plt+0x434>
   10f6c:	ldr	r0, [pc, #32]	; 10f94 <getc@plt+0x4f0>
   10f70:	bl	109f0 <puts@plt>
   10f74:	ldr	r1, [r4, #3952]	; 0xf70
   10f78:	ldr	r0, [r4, #3956]	; 0xf74
   10f7c:	ldr	r2, [pc, #20]	; 10f98 <getc@plt+0x4f4>
   10f80:	bl	11224 <getc@plt+0x780>
   10f84:	pop	{r4, lr}
   10f88:	b	10ed8 <getc@plt+0x434>
   10f8c:	andeq	r3, r2, r0, lsl #2
   10f90:	andeq	r0, r1, r0, asr ip
   10f94:	ldrdeq	r2, [r1], -sp
   10f98:	andeq	r0, r1, ip, lsr #25
   10f9c:	cmp	r1, #0
   10fa0:	push	{r4, lr}
   10fa4:	mov	r4, r0
   10fa8:	stm	r2, {r1, r3}
   10fac:	strne	r2, [r1, #4]
   10fb0:	streq	r2, [r0]
   10fb4:	cmp	r3, #0
   10fb8:	streq	r2, [r0, #4]
   10fbc:	ldr	r0, [r0, #8]
   10fc0:	strne	r2, [r3]
   10fc4:	cmp	r0, #0
   10fc8:	beq	10fd8 <getc@plt+0x534>
   10fcc:	bl	10960 <free@plt>
   10fd0:	mov	r3, #0
   10fd4:	str	r3, [r4, #8]
   10fd8:	ldr	r3, [r4, #12]
   10fdc:	add	r3, r3, #1
   10fe0:	str	r3, [r4, #12]
   10fe4:	pop	{r4, pc}
   10fe8:	mov	r3, #0
   10fec:	str	r3, [r0, #4]
   10ff0:	str	r3, [r0]
   10ff4:	str	r3, [r0, #8]
   10ff8:	str	r3, [r0, #12]
   10ffc:	bx	lr
   11000:	mov	r2, r1
   11004:	ldr	r3, [r0]
   11008:	mov	r1, #0
   1100c:	b	10f9c <getc@plt+0x4f8>
   11010:	mov	r2, r1
   11014:	mov	r3, #0
   11018:	ldr	r1, [r0, #4]
   1101c:	b	10f9c <getc@plt+0x4f8>
   11020:	mov	r3, r2
   11024:	mov	r2, r1
   11028:	ldr	r1, [r3]
   1102c:	b	10f9c <getc@plt+0x4f8>
   11030:	ldr	r3, [r1, #4]
   11034:	b	10f9c <getc@plt+0x4f8>
   11038:	ldr	r3, [r1]
   1103c:	ldr	r2, [r1, #4]
   11040:	cmp	r3, #0
   11044:	push	{r4, r5, r6, lr}
   11048:	mov	r4, r0
   1104c:	strne	r2, [r3, #4]
   11050:	streq	r2, [r0]
   11054:	ldr	r2, [r1, #4]
   11058:	mov	r5, #0
   1105c:	cmp	r2, #0
   11060:	streq	r3, [r0, #4]
   11064:	ldr	r0, [r0, #8]
   11068:	strne	r3, [r2]
   1106c:	cmp	r0, r5
   11070:	str	r5, [r1, #4]
   11074:	str	r5, [r1]
   11078:	beq	11084 <getc@plt+0x5e0>
   1107c:	bl	10960 <free@plt>
   11080:	str	r5, [r4, #8]
   11084:	ldr	r3, [r4, #12]
   11088:	sub	r3, r3, #1
   1108c:	str	r3, [r4, #12]
   11090:	pop	{r4, r5, r6, pc}
   11094:	ldr	r3, [r0, #8]
   11098:	cmp	r3, #0
   1109c:	bxne	lr
   110a0:	ldr	r3, [r0, #12]
   110a4:	cmp	r3, #0
   110a8:	bxeq	lr
   110ac:	push	{r4, lr}
   110b0:	mov	r1, #4
   110b4:	mov	r4, r0
   110b8:	mov	r0, r3
   110bc:	bl	11698 <error@@Base+0x3c>
   110c0:	ldr	r3, [r4]
   110c4:	str	r0, [r4, #8]
   110c8:	sub	r0, r0, #4
   110cc:	cmp	r3, #0
   110d0:	bne	110d8 <getc@plt+0x634>
   110d4:	pop	{r4, pc}
   110d8:	str	r3, [r0, #4]!
   110dc:	ldr	r3, [r3, #4]
   110e0:	b	110cc <getc@plt+0x628>
   110e4:	push	{r4, r5, r6, lr}
   110e8:	mov	r5, r0
   110ec:	mov	r6, r1
   110f0:	ldr	r4, [r5]
   110f4:	cmp	r4, #0
   110f8:	bne	11100 <getc@plt+0x65c>
   110fc:	pop	{r4, r5, r6, pc}
   11100:	mov	r0, r5
   11104:	mov	r1, r4
   11108:	bl	11038 <getc@plt+0x594>
   1110c:	mov	r0, r4
   11110:	blx	r6
   11114:	b	110f0 <getc@plt+0x64c>
   11118:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1111c:	mov	r7, r0
   11120:	ldr	sl, [pc, #248]	; 11220 <getc@plt+0x77c>
   11124:	mov	r9, r1
   11128:	mov	r6, sl
   1112c:	ldr	r3, [sl]
   11130:	mov	r4, r9
   11134:	mov	r5, r7
   11138:	ldr	fp, [r3, r7, lsl #2]
   1113c:	cmp	r5, r4
   11140:	blt	1118c <getc@plt+0x6e8>
   11144:	ldr	r3, [r6]
   11148:	sub	r1, r4, #1
   1114c:	cmp	r7, r1
   11150:	str	fp, [r3, r4, lsl #2]
   11154:	bge	11160 <getc@plt+0x6bc>
   11158:	mov	r0, r7
   1115c:	bl	11118 <getc@plt+0x674>
   11160:	add	r7, r5, #1
   11164:	cmp	r7, r9
   11168:	blt	1112c <getc@plt+0x688>
   1116c:	add	sp, sp, #12
   11170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11174:	sub	r4, r4, #1
   11178:	cmp	r5, r4
   1117c:	sub	r8, r8, #4
   11180:	bne	11190 <getc@plt+0x6ec>
   11184:	mov	r2, r4
   11188:	b	11204 <getc@plt+0x760>
   1118c:	lsl	r8, r4, #2
   11190:	ldm	r6, {r2, r3}
   11194:	mov	r0, fp
   11198:	ldr	r1, [r2, r8]
   1119c:	blx	r3
   111a0:	cmp	r0, #0
   111a4:	blt	11174 <getc@plt+0x6d0>
   111a8:	ldr	r2, [r6]
   111ac:	lsl	r1, r5, #2
   111b0:	add	r8, r5, #1
   111b4:	ldr	r0, [r2, r4, lsl #2]
   111b8:	lsl	r3, r4, #2
   111bc:	str	r0, [r2, r5, lsl #2]
   111c0:	add	r5, r1, #4
   111c4:	cmp	r8, r4
   111c8:	bge	11218 <getc@plt+0x774>
   111cc:	ldm	r6, {r1, r2}
   111d0:	mov	r0, fp
   111d4:	str	r3, [sp, #4]
   111d8:	ldr	r1, [r1, r5]
   111dc:	blx	r2
   111e0:	add	r5, r5, #4
   111e4:	ldr	r3, [sp, #4]
   111e8:	cmp	r0, #0
   111ec:	bgt	11210 <getc@plt+0x76c>
   111f0:	ldr	r1, [r6]
   111f4:	sub	r2, r4, #1
   111f8:	mov	r4, r8
   111fc:	ldr	r0, [r1, r8, lsl #2]
   11200:	str	r0, [r1, r3]
   11204:	mov	r5, r4
   11208:	mov	r4, r2
   1120c:	b	1113c <getc@plt+0x698>
   11210:	add	r8, r8, #1
   11214:	b	111c4 <getc@plt+0x720>
   11218:	bne	111f0 <getc@plt+0x74c>
   1121c:	b	11184 <getc@plt+0x6e0>
   11220:	ldrdeq	r3, [r2], -ip
   11224:	cmp	r0, #1
   11228:	bxle	lr
   1122c:	ldr	r3, [pc, #12]	; 11240 <getc@plt+0x79c>
   11230:	stm	r3, {r1, r2}
   11234:	sub	r1, r0, #1
   11238:	mov	r0, #0
   1123c:	b	11118 <getc@plt+0x674>
   11240:	ldrdeq	r3, [r2], -ip
   11244:	sub	r2, r0, #1
   11248:	mov	r0, #0
   1124c:	push	{r4, lr}
   11250:	ldrb	r3, [r2, #1]!
   11254:	cmp	r3, #0
   11258:	bne	1126c <getc@plt+0x7c8>
   1125c:	ldr	r1, [pc, #16]	; 11274 <getc@plt+0x7d0>
   11260:	bl	12148 <error@@Base+0xaec>
   11264:	sxth	r0, r1
   11268:	pop	{r4, pc}
   1126c:	add	r0, r0, r3
   11270:	b	11250 <getc@plt+0x7ac>
   11274:	strdeq	r0, [r0], -r7
   11278:	push	{r4, r5, r6, lr}
   1127c:	add	r6, r0, #8000	; 0x1f40
   11280:	mov	r4, r0
   11284:	mov	r5, r0
   11288:	add	r6, r6, #48	; 0x30
   1128c:	mov	r0, r5
   11290:	add	r5, r5, #16
   11294:	bl	10fe8 <getc@plt+0x544>
   11298:	cmp	r5, r6
   1129c:	bne	1128c <getc@plt+0x7e8>
   112a0:	add	r4, r4, #4096	; 0x1000
   112a4:	mov	r3, #0
   112a8:	str	r3, [r4, #3952]	; 0xf70
   112ac:	str	r3, [r4, #3956]	; 0xf74
   112b0:	pop	{r4, r5, r6, pc}
   112b4:	push	{r4, r5, r6, lr}
   112b8:	mov	r4, r0
   112bc:	mov	r0, r1
   112c0:	mov	r5, r1
   112c4:	bl	11244 <getc@plt+0x7a0>
   112c8:	ldr	r4, [r4, r0, lsl #4]
   112cc:	cmp	r4, #0
   112d0:	beq	112e8 <getc@plt+0x844>
   112d4:	ldr	r1, [r4, #8]
   112d8:	mov	r0, r5
   112dc:	bl	1093c <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	bne	112f0 <getc@plt+0x84c>
   112e8:	mov	r0, r4
   112ec:	pop	{r4, r5, r6, pc}
   112f0:	ldr	r4, [r4, #4]
   112f4:	b	112cc <getc@plt+0x828>
   112f8:	push	{r4, r5, r6, lr}
   112fc:	mov	r4, r0
   11300:	ldr	r0, [r1, #8]
   11304:	mov	r5, r1
   11308:	bl	11244 <getc@plt+0x7a0>
   1130c:	mov	r1, r5
   11310:	add	r0, r4, r0, lsl #4
   11314:	add	r4, r4, #4096	; 0x1000
   11318:	bl	11000 <getc@plt+0x55c>
   1131c:	ldr	r0, [r4, #3952]	; 0xf70
   11320:	cmp	r0, #0
   11324:	beq	11334 <getc@plt+0x890>
   11328:	bl	10960 <free@plt>
   1132c:	mov	r3, #0
   11330:	str	r3, [r4, #3952]	; 0xf70
   11334:	ldr	r3, [r4, #3956]	; 0xf74
   11338:	add	r3, r3, #1
   1133c:	str	r3, [r4, #3956]	; 0xf74
   11340:	pop	{r4, r5, r6, pc}
   11344:	push	{r4, r5, r6, lr}
   11348:	mov	r4, r0
   1134c:	ldr	r0, [r1, #8]
   11350:	mov	r5, r1
   11354:	bl	11244 <getc@plt+0x7a0>
   11358:	mov	r1, r5
   1135c:	add	r0, r4, r0, lsl #4
   11360:	add	r4, r4, #4096	; 0x1000
   11364:	bl	11038 <getc@plt+0x594>
   11368:	ldr	r0, [r4, #3952]	; 0xf70
   1136c:	cmp	r0, #0
   11370:	beq	11380 <getc@plt+0x8dc>
   11374:	bl	10960 <free@plt>
   11378:	mov	r3, #0
   1137c:	str	r3, [r4, #3952]	; 0xf70
   11380:	ldr	r3, [r4, #3956]	; 0xf74
   11384:	sub	r3, r3, #1
   11388:	str	r3, [r4, #3956]	; 0xf74
   1138c:	pop	{r4, r5, r6, pc}
   11390:	push	{r4, r5, r6, lr}
   11394:	add	r6, r0, #4096	; 0x1000
   11398:	ldr	r4, [r6, #3952]	; 0xf70
   1139c:	cmp	r4, #0
   113a0:	popne	{r4, r5, r6, pc}
   113a4:	ldr	r3, [r6, #3956]	; 0xf74
   113a8:	cmp	r3, #0
   113ac:	popeq	{r4, r5, r6, pc}
   113b0:	mov	r5, r0
   113b4:	mov	r1, #4
   113b8:	mov	r0, r3
   113bc:	bl	11698 <error@@Base+0x3c>
   113c0:	ldr	lr, [pc, #60]	; 11404 <getc@plt+0x960>
   113c4:	mov	r3, r4
   113c8:	mov	r2, r4
   113cc:	str	r0, [r6, #3952]	; 0xf70
   113d0:	ldr	r1, [r5, r2, lsl #4]
   113d4:	mov	ip, r3
   113d8:	cmp	r1, #0
   113dc:	mov	r3, ip
   113e0:	bne	113f4 <getc@plt+0x950>
   113e4:	add	r2, r2, #1
   113e8:	cmp	r2, lr
   113ec:	bne	113d0 <getc@plt+0x92c>
   113f0:	pop	{r4, r5, r6, pc}
   113f4:	str	r1, [r0, ip, lsl #2]
   113f8:	add	ip, ip, #1
   113fc:	ldr	r1, [r1, #4]
   11400:	b	113d8 <getc@plt+0x934>
   11404:	strdeq	r0, [r0], -r7
   11408:	push	{r4, r5, r6, r7, r8, lr}
   1140c:	add	r6, r0, #8000	; 0x1f40
   11410:	mov	r4, r0
   11414:	mov	r7, r1
   11418:	mov	r5, r0
   1141c:	add	r6, r6, #48	; 0x30
   11420:	mov	r0, r5
   11424:	mov	r1, r7
   11428:	add	r5, r5, #16
   1142c:	bl	110e4 <getc@plt+0x640>
   11430:	cmp	r5, r6
   11434:	bne	11420 <getc@plt+0x97c>
   11438:	add	r4, r4, #4096	; 0x1000
   1143c:	ldr	r0, [r4, #3952]	; 0xf70
   11440:	cmp	r0, #0
   11444:	beq	11454 <getc@plt+0x9b0>
   11448:	bl	10960 <free@plt>
   1144c:	mov	r3, #0
   11450:	str	r3, [r4, #3952]	; 0xf70
   11454:	mov	r3, #0
   11458:	str	r3, [r4, #3956]	; 0xf74
   1145c:	pop	{r4, r5, r6, r7, r8, pc}
   11460:	ldr	r3, [pc, #56]	; 114a0 <getc@plt+0x9fc>
   11464:	push	{r4, r5, lr}
   11468:	sub	sp, sp, #116	; 0x74
   1146c:	ldr	r4, [r3]
   11470:	mov	r5, r0
   11474:	bl	10a20 <getpid@plt>
   11478:	mov	r2, r4
   1147c:	ldr	r1, [pc, #32]	; 114a4 <getc@plt+0xa00>
   11480:	str	r5, [sp]
   11484:	mov	r3, r0
   11488:	add	r0, sp, #12
   1148c:	bl	10a68 <sprintf@plt>
   11490:	add	r0, sp, #12
   11494:	bl	10990 <strdup@plt>
   11498:	add	sp, sp, #116	; 0x74
   1149c:	pop	{r4, r5, pc}
   114a0:	andeq	r5, r2, r4, lsl #1
   114a4:	andeq	r2, r1, r4, lsl #5
   114a8:	ldr	r3, [pc, #84]	; 11504 <getc@plt+0xa60>
   114ac:	push	{r7, lr}
   114b0:	mov	r5, r0
   114b4:	ldr	r3, [r3]
   114b8:	cmp	r3, #0
   114bc:	beq	114c4 <getc@plt+0xa20>
   114c0:	blx	r3
   114c4:	ldr	r6, [pc, #60]	; 11508 <getc@plt+0xa64>
   114c8:	mov	r4, #1
   114cc:	ldrsh	r3, [r6]
   114d0:	cmp	r3, r4
   114d4:	bge	114e0 <getc@plt+0xa3c>
   114d8:	mov	r0, r5
   114dc:	bl	10a2c <exit@plt>
   114e0:	mov	r0, r4
   114e4:	bl	11460 <getc@plt+0x9bc>
   114e8:	add	r4, r4, #1
   114ec:	sxth	r4, r4
   114f0:	mov	r7, r0
   114f4:	bl	109a8 <unlink@plt>
   114f8:	mov	r0, r7
   114fc:	bl	10960 <free@plt>
   11500:	b	114cc <getc@plt+0xa28>
   11504:	andeq	r5, r2, r8, lsl #1
   11508:	andeq	r3, r2, r4, ror #1
   1150c:	mov	r3, #0
   11510:	ldrb	r2, [r0, r3]
   11514:	cmp	r2, #0
   11518:	beq	11544 <getc@plt+0xaa0>
   1151c:	ldrb	ip, [r1, r3]
   11520:	cmp	ip, r2
   11524:	beq	1153c <getc@plt+0xa98>
   11528:	ldrb	r3, [r1, r3]
   1152c:	cmp	r3, r2
   11530:	mvnhi	r0, #0
   11534:	movls	r0, #1
   11538:	bx	lr
   1153c:	add	r3, r3, #1
   11540:	b	11510 <getc@plt+0xa6c>
   11544:	ldrb	r0, [r1, r3]
   11548:	cmp	r0, #0
   1154c:	bne	11528 <getc@plt+0xa84>
   11550:	bx	lr
   11554:	ldr	r2, [pc, #28]	; 11578 <getc@plt+0xad4>
   11558:	ldr	r2, [r2]
   1155c:	cmp	r2, r0
   11560:	bxeq	lr
   11564:	ldr	r2, [pc, #16]	; 1157c <getc@plt+0xad8>
   11568:	ldr	r2, [r2]
   1156c:	cmp	r0, r2
   11570:	bxeq	lr
   11574:	b	10a5c <fclose@plt>
   11578:	ldrdeq	r3, [r2], -r0
   1157c:	ldrdeq	r3, [r2], -r4
   11580:	push	{lr}		; (str lr, [sp, #-4]!)
   11584:	sub	sp, sp, #92	; 0x5c
   11588:	mov	r1, sp
   1158c:	bl	121dc <error@@Base+0xb80>
   11590:	clz	r0, r0
   11594:	lsr	r0, r0, #5
   11598:	add	sp, sp, #92	; 0x5c
   1159c:	pop	{pc}		; (ldr pc, [sp], #4)
   115a0:	ldr	r3, [pc, #36]	; 115cc <getc@plt+0xb28>
   115a4:	push	{r4, lr}
   115a8:	ldrh	r0, [r3]
   115ac:	add	r0, r0, #1
   115b0:	sxth	r0, r0
   115b4:	strh	r0, [r3]
   115b8:	bl	11460 <getc@plt+0x9bc>
   115bc:	mov	r4, r0
   115c0:	bl	109a8 <unlink@plt>
   115c4:	mov	r0, r4
   115c8:	pop	{r4, pc}
   115cc:	andeq	r3, r2, r4, ror #1
   115d0:	push	{r4, lr}
   115d4:	mov	r4, r0
   115d8:	bl	10a44 <strlen@plt>
   115dc:	sub	r0, r0, #1
   115e0:	sxth	r0, r0
   115e4:	cmp	r0, #0
   115e8:	blt	115f8 <getc@plt+0xb54>
   115ec:	ldrb	r3, [r4, r0]
   115f0:	cmp	r3, #47	; 0x2f
   115f4:	bne	115dc <getc@plt+0xb38>
   115f8:	add	r0, r0, #1
   115fc:	add	r0, r4, r0
   11600:	pop	{r4, pc}
   11604:	push	{r4, lr}
   11608:	mov	r0, #0
   1160c:	bl	114a8 <getc@plt+0xa04>
   11610:	ldr	r2, [pc, #52]	; 1164c <getc@plt+0xba8>
   11614:	push	{r4, lr}
   11618:	ldr	r2, [r2]
   1161c:	cmp	r2, #0
   11620:	beq	1162c <getc@plt+0xb88>
   11624:	blx	r2
   11628:	bl	11604 <getc@plt+0xb60>
   1162c:	mov	r3, r0
   11630:	ldr	r2, [pc, #24]	; 11650 <getc@plt+0xbac>
   11634:	ldr	r0, [pc, #24]	; 11654 <getc@plt+0xbb0>
   11638:	ldr	r1, [pc, #24]	; 11658 <getc@plt+0xbb4>
   1163c:	ldr	r2, [r2]
   11640:	ldr	r0, [r0]
   11644:	bl	10a50 <fprintf@plt>
   11648:	b	11628 <getc@plt+0xb84>
   1164c:	andeq	r5, r2, r0, lsl #1
   11650:	andeq	r5, r2, r4, lsl #1
   11654:	andeq	r3, r2, r8, asr #1
   11658:	muleq	r1, r2, r2

0001165c <error@@Base>:
   1165c:	mov	r3, r0
   11660:	ldr	r2, [pc, #32]	; 11688 <error@@Base+0x2c>
   11664:	ldr	r0, [pc, #32]	; 1168c <error@@Base+0x30>
   11668:	push	{r4, lr}
   1166c:	ldr	r2, [r2]
   11670:	ldr	r1, [pc, #24]	; 11690 <error@@Base+0x34>
   11674:	ldr	r0, [r0]
   11678:	bl	10a50 <fprintf@plt>
   1167c:	ldr	r3, [pc, #16]	; 11694 <error@@Base+0x38>
   11680:	ldr	r0, [r3]
   11684:	bl	114a8 <getc@plt+0xa04>
   11688:	andeq	r5, r2, r4, lsl #1
   1168c:	andeq	r3, r2, r8, asr #1
   11690:	andeq	r2, r1, r1, lsr #5
   11694:	andeq	r3, r2, r0, asr #1
   11698:	push	{r4, lr}
   1169c:	bl	10924 <calloc@plt>
   116a0:	cmp	r0, #0
   116a4:	popne	{r4, pc}
   116a8:	ldr	r0, [pc]	; 116b0 <error@@Base+0x54>
   116ac:	bl	1165c <error@@Base>
   116b0:	andeq	r2, r1, r9, lsr #5
   116b4:	ldr	r3, [pc, #32]	; 116dc <error@@Base+0x80>
   116b8:	ldrb	r2, [r3, #2]
   116bc:	cmp	r2, #0
   116c0:	bne	116d8 <error@@Base+0x7c>
   116c4:	push	{r4, lr}
   116c8:	mov	r2, #1
   116cc:	ldr	r0, [pc, #12]	; 116e0 <error@@Base+0x84>
   116d0:	strb	r2, [r3, #2]
   116d4:	bl	1165c <error@@Base>
   116d8:	bx	lr
   116dc:	andeq	r3, r2, r4, ror #1
   116e0:	andeq	r2, r1, r3, asr #5
   116e4:	push	{r0, r1, r2, lr}
   116e8:	mov	r3, r0
   116ec:	ldr	r2, [pc, #32]	; 11714 <error@@Base+0xb8>
   116f0:	ldr	r0, [pc, #32]	; 11718 <error@@Base+0xbc>
   116f4:	str	r1, [sp]
   116f8:	ldr	r1, [pc, #28]	; 1171c <error@@Base+0xc0>
   116fc:	ldr	r2, [r2]
   11700:	ldr	r0, [r0]
   11704:	bl	10a50 <fprintf@plt>
   11708:	ldr	r3, [pc, #16]	; 11720 <error@@Base+0xc4>
   1170c:	ldr	r0, [r3]
   11710:	bl	114a8 <getc@plt+0xa04>
   11714:	andeq	r5, r2, r4, lsl #1
   11718:	andeq	r3, r2, r8, asr #1
   1171c:	ldrdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   11720:	andeq	r3, r2, r0, asr #1
   11724:	push	{r4, r5, r6, lr}
   11728:	subs	r4, r0, #0
   1172c:	mov	r5, r1
   11730:	bne	1174c <error@@Base+0xf0>
   11734:	ldrb	r3, [r1]
   11738:	cmp	r3, #114	; 0x72
   1173c:	ldreq	r3, [pc, #44]	; 11770 <error@@Base+0x114>
   11740:	ldrne	r3, [pc, #44]	; 11774 <error@@Base+0x118>
   11744:	ldr	r0, [r3]
   11748:	pop	{r4, r5, r6, pc}
   1174c:	bl	10954 <fopen@plt>
   11750:	cmp	r0, #0
   11754:	popne	{r4, r5, r6, pc}
   11758:	ldrb	r3, [r5]
   1175c:	mov	r1, r4
   11760:	cmp	r3, #119	; 0x77
   11764:	ldreq	r0, [pc, #12]	; 11778 <error@@Base+0x11c>
   11768:	ldrne	r0, [pc, #12]	; 1177c <error@@Base+0x120>
   1176c:	bl	116e4 <error@@Base+0x88>
   11770:	ldrdeq	r3, [r2], -r0
   11774:	ldrdeq	r3, [r2], -r4
   11778:	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
   1177c:	strdeq	r2, [r1], -r5
   11780:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11784:	mov	r8, r0
   11788:	ldr	r0, [r1]
   1178c:	str	r2, [sp]
   11790:	mov	r7, r1
   11794:	mov	r9, r3
   11798:	bl	115d0 <getc@plt+0xb2c>
   1179c:	ldr	r3, [pc, #396]	; 11930 <error@@Base+0x2d4>
   117a0:	ldr	r1, [pc, #396]	; 11934 <error@@Base+0x2d8>
   117a4:	str	r0, [r3]
   117a8:	mov	r0, #2
   117ac:	bl	10a08 <__sysv_signal@plt>
   117b0:	ldr	r1, [pc, #380]	; 11934 <error@@Base+0x2d8>
   117b4:	mov	r0, #15
   117b8:	bl	10a08 <__sysv_signal@plt>
   117bc:	ldr	r3, [r8]
   117c0:	cmp	r3, #1
   117c4:	movne	r6, #0
   117c8:	movne	r5, #1
   117cc:	bne	118f0 <error@@Base+0x294>
   117d0:	ldr	r3, [pc, #352]	; 11938 <error@@Base+0x2dc>
   117d4:	ldrb	r6, [r3, #4]
   117d8:	cmp	r6, #0
   117dc:	beq	118fc <error@@Base+0x2a0>
   117e0:	ldr	r0, [sp]
   117e4:	bl	11610 <getc@plt+0xb6c>
   117e8:	ldr	r4, [r7, r5, lsl #2]
   117ec:	lsl	sl, r5, #2
   117f0:	ldrb	r3, [r4]
   117f4:	cmp	r3, #45	; 0x2d
   117f8:	bne	11920 <error@@Base+0x2c4>
   117fc:	ldrb	r3, [r4, #1]
   11800:	cmp	r3, #0
   11804:	str	r3, [sp, #4]
   11808:	beq	11920 <error@@Base+0x2c4>
   1180c:	mov	r0, r4
   11810:	bl	10a44 <strlen@plt>
   11814:	mov	r1, r4
   11818:	mov	r2, r0
   1181c:	ldr	r0, [pc, #280]	; 1193c <error@@Base+0x2e0>
   11820:	bl	10a8c <strncmp@plt>
   11824:	cmp	r0, #0
   11828:	beq	117e0 <error@@Base+0x184>
   1182c:	add	r0, r5, #1
   11830:	cmp	r0, fp
   11834:	addlt	sl, r7, sl
   11838:	movge	r1, #0
   1183c:	ldrlt	r1, [sl, #4]
   11840:	cmp	r9, #0
   11844:	ldr	r3, [sp, #4]
   11848:	beq	11908 <error@@Base+0x2ac>
   1184c:	mov	r2, #0
   11850:	add	lr, r2, r2, lsl #1
   11854:	add	ip, r9, lr, lsl #2
   11858:	ldrb	lr, [r9, lr, lsl #2]
   1185c:	cmp	lr, #0
   11860:	beq	11908 <error@@Base+0x2ac>
   11864:	cmp	r3, lr
   11868:	bne	118a8 <error@@Base+0x24c>
   1186c:	ldr	r3, [ip, #4]
   11870:	cmp	r3, #0
   11874:	bne	118b4 <error@@Base+0x258>
   11878:	ldr	r3, [ip, #8]
   1187c:	cmp	r3, #0
   11880:	beq	11908 <error@@Base+0x2ac>
   11884:	ldrb	r2, [r4, #2]
   11888:	cmp	r2, #0
   1188c:	bne	11908 <error@@Base+0x2ac>
   11890:	ldrb	r2, [r3]
   11894:	cmp	r2, #0
   11898:	bne	11914 <error@@Base+0x2b8>
   1189c:	mov	r2, #1
   118a0:	strb	r2, [r3]
   118a4:	b	118e8 <error@@Base+0x28c>
   118a8:	add	r2, r2, #1
   118ac:	sxth	r2, r2
   118b0:	b	11850 <error@@Base+0x1f4>
   118b4:	ldrb	r2, [r4, #2]
   118b8:	cmp	r2, #0
   118bc:	cmpeq	r1, #0
   118c0:	beq	11878 <error@@Base+0x21c>
   118c4:	ldr	ip, [r3]
   118c8:	cmp	ip, #0
   118cc:	bne	11914 <error@@Base+0x2b8>
   118d0:	cmp	r2, #0
   118d4:	addne	r1, r4, #2
   118d8:	str	r1, [r3]
   118dc:	ldrb	r3, [r4, #2]
   118e0:	cmp	r3, #0
   118e4:	sxtheq	r5, r0
   118e8:	add	r5, r5, #1
   118ec:	sxth	r5, r5
   118f0:	ldr	fp, [r8]
   118f4:	cmp	r5, fp
   118f8:	blt	117e8 <error@@Base+0x18c>
   118fc:	str	r6, [r8]
   11900:	add	sp, sp, #12
   11904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11908:	ldr	r0, [pc, #48]	; 11940 <error@@Base+0x2e4>
   1190c:	mov	r1, r4
   11910:	bl	116e4 <error@@Base+0x88>
   11914:	mov	r1, r4
   11918:	ldr	r0, [pc, #36]	; 11944 <error@@Base+0x2e8>
   1191c:	b	11910 <error@@Base+0x2b4>
   11920:	add	r3, r6, #1
   11924:	str	r4, [r7, r6, lsl #2]
   11928:	sxth	r6, r3
   1192c:	b	118e8 <error@@Base+0x28c>
   11930:	andeq	r5, r2, r4, lsl #1
   11934:			; <UNDEFINED> instruction: 0x000116b4
   11938:	andeq	r3, r2, r0, asr #1
   1193c:	andeq	r2, r1, r9, lsl #6
   11940:	andeq	r2, r1, pc, lsl #6
   11944:	andeq	r2, r1, lr, lsl r3
   11948:	push	{r0, r1, r2, lr}
   1194c:	mov	r3, r0
   11950:	ldr	r2, [pc, #28]	; 11974 <error@@Base+0x318>
   11954:	ldr	r0, [pc, #28]	; 11978 <error@@Base+0x31c>
   11958:	str	r1, [sp]
   1195c:	ldr	r1, [pc, #24]	; 1197c <error@@Base+0x320>
   11960:	ldr	r2, [r2]
   11964:	ldr	r0, [r0]
   11968:	bl	10a50 <fprintf@plt>
   1196c:	add	sp, sp, #12
   11970:	pop	{pc}		; (ldr pc, [sp], #4)
   11974:	andeq	r5, r2, r4, lsl #1
   11978:	andeq	r3, r2, r8, asr #1
   1197c:	ldrdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   11980:	push	{r4, r5, r6, lr}
   11984:	mov	r4, r0
   11988:	uxtb	r6, r1
   1198c:	mov	r0, #1
   11990:	mov	r1, #16
   11994:	mov	r5, r2
   11998:	bl	11698 <error@@Base+0x3c>
   1199c:	strb	r6, [r0, #8]
   119a0:	str	r5, [r0, #12]
   119a4:	mov	r1, r0
   119a8:	mov	r0, r4
   119ac:	pop	{r4, r5, r6, lr}
   119b0:	b	11010 <getc@plt+0x56c>
   119b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119b8:	sub	sp, sp, #116	; 0x74
   119bc:	ldrb	r3, [r2]
   119c0:	adds	r3, r3, #0
   119c4:	movne	r3, #1
   119c8:	cmp	r1, #0
   119cc:	movne	r3, #0
   119d0:	cmp	r3, #0
   119d4:	beq	119e4 <error@@Base+0x388>
   119d8:	ldr	r1, [pc, #752]	; 11cd0 <error@@Base+0x674>
   119dc:	ldr	r0, [pc, #752]	; 11cd4 <error@@Base+0x678>
   119e0:	bl	116e4 <error@@Base+0x88>
   119e4:	mov	r6, r0
   119e8:	mov	r0, r1
   119ec:	ldr	r1, [pc, #740]	; 11cd8 <error@@Base+0x67c>
   119f0:	mov	r4, r2
   119f4:	ldr	r7, [r6, #4]
   119f8:	bl	11724 <error@@Base+0xc8>
   119fc:	ldrb	r3, [r4]
   11a00:	cmp	r3, #0
   11a04:	mov	r5, r0
   11a08:	beq	11a54 <error@@Base+0x3f8>
   11a0c:	mov	r2, r0
   11a10:	mov	r1, #99	; 0x63
   11a14:	add	r0, sp, #12
   11a18:	bl	10978 <fgets@plt>
   11a1c:	cmp	r0, #0
   11a20:	beq	11a44 <error@@Base+0x3e8>
   11a24:	mov	r2, #51	; 0x33
   11a28:	ldr	r1, [pc, #684]	; 11cdc <error@@Base+0x680>
   11a2c:	add	r0, sp, #12
   11a30:	bl	10a8c <strncmp@plt>
   11a34:	subs	r8, r0, #0
   11a38:	moveq	r9, #99	; 0x63
   11a3c:	ldreq	sl, [pc, #668]	; 11ce0 <error@@Base+0x684>
   11a40:	beq	11ad0 <error@@Base+0x474>
   11a44:	mov	r0, r5
   11a48:	bl	1099c <rewind@plt>
   11a4c:	mov	r3, #0
   11a50:	strb	r3, [r4, #11]
   11a54:	ldrb	r3, [r4, #1]
   11a58:	ldr	r8, [r4, #4]
   11a5c:	mov	r0, r5
   11a60:	cmp	r8, #0
   11a64:	mov	fp, #0
   11a68:	str	r3, [sp]
   11a6c:	moveq	r8, #94	; 0x5e
   11a70:	bl	10aa4 <getc@plt>
   11a74:	add	r3, sp, #9
   11a78:	str	r3, [sp, #4]
   11a7c:	cmn	r0, #1
   11a80:	bne	11af0 <error@@Base+0x494>
   11a84:	mov	r0, r5
   11a88:	bl	11554 <getc@plt+0xab0>
   11a8c:	ldrb	r3, [r4, #9]
   11a90:	cmp	r3, #0
   11a94:	bne	11b94 <error@@Base+0x538>
   11a98:	ldrb	r3, [r4, #10]
   11a9c:	cmp	r3, #0
   11aa0:	bne	11ca8 <error@@Base+0x64c>
   11aa4:	add	sp, sp, #116	; 0x74
   11aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aac:	mov	r1, sl
   11ab0:	add	r0, sp, #12
   11ab4:	bl	1093c <strcmp@plt>
   11ab8:	cmp	r0, #0
   11abc:	bne	11ad0 <error@@Base+0x474>
   11ac0:	add	r8, r8, #1
   11ac4:	sxth	r8, r8
   11ac8:	cmp	r8, #1
   11acc:	bgt	11ae8 <error@@Base+0x48c>
   11ad0:	mov	r2, r5
   11ad4:	mov	r1, r9
   11ad8:	add	r0, sp, #12
   11adc:	bl	10978 <fgets@plt>
   11ae0:	cmp	r0, #0
   11ae4:	bne	11aac <error@@Base+0x450>
   11ae8:	mov	r3, #1
   11aec:	b	11a50 <error@@Base+0x3f4>
   11af0:	ldr	r3, [pc, #492]	; 11ce4 <error@@Base+0x688>
   11af4:	ldrsb	r9, [r3, r0]
   11af8:	cmp	r9, #0
   11afc:	bgt	11b08 <error@@Base+0x4ac>
   11b00:	ldr	r0, [pc, #480]	; 11ce8 <error@@Base+0x68c>
   11b04:	bl	1165c <error@@Base>
   11b08:	cmp	r9, #1
   11b0c:	strb	r0, [sp, #8]
   11b10:	beq	11b38 <error@@Base+0x4dc>
   11b14:	sub	sl, r9, #1
   11b18:	mov	r3, r5
   11b1c:	mov	r2, sl
   11b20:	mov	r1, #1
   11b24:	ldr	r0, [sp, #4]
   11b28:	bl	109d8 <fread@plt>
   11b2c:	cmp	sl, r0
   11b30:	ldrne	r0, [pc, #436]	; 11cec <error@@Base+0x690>
   11b34:	bne	11b04 <error@@Base+0x4a8>
   11b38:	add	r2, sp, #12
   11b3c:	mov	r1, #4
   11b40:	add	r0, sp, #8
   11b44:	bl	109e4 <utf8proc_iterate@plt>
   11b48:	cmp	r9, r0
   11b4c:	beq	11b58 <error@@Base+0x4fc>
   11b50:	bl	10a74 <utf8proc_errmsg@plt>
   11b54:	b	11b04 <error@@Base+0x4a8>
   11b58:	ldr	r3, [sp]
   11b5c:	cmp	r3, #0
   11b60:	beq	11b74 <error@@Base+0x518>
   11b64:	ldr	r3, [sp, #12]
   11b68:	cmp	r8, r3
   11b6c:	moveq	fp, #1
   11b70:	beq	11b88 <error@@Base+0x52c>
   11b74:	mov	r1, fp
   11b78:	ldr	r2, [sp, #12]
   11b7c:	mov	r0, r6
   11b80:	bl	11980 <error@@Base+0x324>
   11b84:	mov	fp, #0
   11b88:	mov	r0, r5
   11b8c:	bl	10aa4 <getc@plt>
   11b90:	b	11a7c <error@@Base+0x420>
   11b94:	cmp	r7, #0
   11b98:	mov	sl, #32
   11b9c:	ldrne	r8, [r7, #4]
   11ba0:	ldreq	r8, [r6]
   11ba4:	mov	r5, r8
   11ba8:	cmp	r5, #0
   11bac:	bne	11c34 <error@@Base+0x5d8>
   11bb0:	cmp	r8, #0
   11bb4:	beq	11a98 <error@@Base+0x43c>
   11bb8:	ldr	r2, [r8, #12]
   11bbc:	ldr	r9, [r8, #4]
   11bc0:	cmp	r2, #32
   11bc4:	eor	r3, r5, #1
   11bc8:	bne	11c88 <error@@Base+0x62c>
   11bcc:	cmp	r9, #0
   11bd0:	orreq	r3, r3, #1
   11bd4:	cmp	r3, #0
   11bd8:	bne	11bec <error@@Base+0x590>
   11bdc:	ldr	r3, [r9, #12]
   11be0:	cmp	r3, #10
   11be4:	cmpne	r3, #32
   11be8:	bne	11c9c <error@@Base+0x640>
   11bec:	cmp	r9, #0
   11bf0:	moveq	r3, #0
   11bf4:	andne	r3, r5, #1
   11bf8:	cmp	r3, #0
   11bfc:	beq	11c18 <error@@Base+0x5bc>
   11c00:	ldr	r3, [r9, #12]
   11c04:	cmp	r3, #32
   11c08:	ldrbeq	r3, [r9, #8]
   11c0c:	ldrbeq	r2, [r8, #8]
   11c10:	orreq	r3, r3, r2
   11c14:	strbeq	r3, [r9, #8]
   11c18:	mov	r0, r6
   11c1c:	mov	r1, r8
   11c20:	bl	11038 <getc@plt+0x594>
   11c24:	mov	r0, r8
   11c28:	bl	10960 <free@plt>
   11c2c:	mov	r8, r9
   11c30:	b	11bb0 <error@@Base+0x554>
   11c34:	ldr	r9, [r5, #12]
   11c38:	mov	r0, r9
   11c3c:	bl	1096c <utf8proc_get_property@plt>
   11c40:	cmp	r9, #13
   11c44:	bhi	11c78 <error@@Base+0x61c>
   11c48:	cmp	r9, #11
   11c4c:	bcs	11c80 <error@@Base+0x624>
   11c50:	cmp	r9, #9
   11c54:	beq	11c80 <error@@Base+0x624>
   11c58:	cmp	r9, #10
   11c5c:	beq	11c70 <error@@Base+0x614>
   11c60:	ldrsh	r3, [r0]
   11c64:	sub	r3, r3, #23
   11c68:	cmp	r3, #2
   11c6c:	bls	11c80 <error@@Base+0x624>
   11c70:	ldr	r5, [r5, #4]
   11c74:	b	11ba8 <error@@Base+0x54c>
   11c78:	cmp	r9, #160	; 0xa0
   11c7c:	bne	11c60 <error@@Base+0x604>
   11c80:	str	sl, [r5, #12]
   11c84:	b	11c70 <error@@Base+0x614>
   11c88:	cmp	r2, #10
   11c8c:	movne	r3, #0
   11c90:	andeq	r3, r3, #1
   11c94:	cmp	r3, #0
   11c98:	bne	11bec <error@@Base+0x590>
   11c9c:	subs	r5, r2, #10
   11ca0:	movne	r5, #1
   11ca4:	b	11c2c <error@@Base+0x5d0>
   11ca8:	cmp	r7, #0
   11cac:	ldrne	r4, [r7, #4]
   11cb0:	ldreq	r4, [r6]
   11cb4:	cmp	r4, #0
   11cb8:	beq	11aa4 <error@@Base+0x448>
   11cbc:	ldr	r0, [r4, #12]
   11cc0:	bl	109b4 <utf8proc_tolower@plt>
   11cc4:	str	r0, [r4, #12]
   11cc8:	ldr	r4, [r4, #4]
   11ccc:	b	11cb4 <error@@Base+0x658>
   11cd0:	andeq	r2, r1, pc, lsr #6
   11cd4:	andeq	r2, r1, r9, lsr r3
   11cd8:	andeq	r2, r1, pc, asr #7
   11cdc:	andeq	r2, r1, r9, asr #6
   11ce0:	andeq	r2, r1, r1, lsl #7
   11ce4:	andeq	r2, r2, r8, lsl #28
   11ce8:			; <UNDEFINED> instruction: 0x000123b9
   11cec:	ldrdeq	r2, [r1], -r1
   11cf0:	push	{r4, lr}
   11cf4:	bl	10984 <utf8proc_encode_char@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bgt	11d08 <error@@Base+0x6ac>
   11d00:	ldr	r0, [pc, #8]	; 11d10 <error@@Base+0x6b4>
   11d04:	bl	1165c <error@@Base>
   11d08:	sxtb	r0, r0
   11d0c:	pop	{r4, pc}
   11d10:	andeq	r2, r1, r9, ror #7
   11d14:	push	{r4, r5, r6, r7, r8, lr}
   11d18:	uxtb	r4, r0
   11d1c:	cmp	r4, #0
   11d20:	mov	r7, r1
   11d24:	mov	r6, r2
   11d28:	uxtb	r8, r3
   11d2c:	beq	11d40 <error@@Base+0x6e4>
   11d30:	mov	r1, r2
   11d34:	mov	r0, #94	; 0x5e
   11d38:	bl	11cf0 <error@@Base+0x694>
   11d3c:	sxth	r4, r0
   11d40:	cmp	r7, #10
   11d44:	add	r5, r6, r4
   11d48:	bne	11d68 <error@@Base+0x70c>
   11d4c:	ldr	r2, [pc, #168]	; 11dfc <error@@Base+0x7a0>
   11d50:	cmp	r8, #0
   11d54:	ldr	r1, [pc, #164]	; 11e00 <error@@Base+0x7a4>
   11d58:	mov	r0, r5
   11d5c:	moveq	r1, r2
   11d60:	pop	{r4, r5, r6, r7, r8, lr}
   11d64:	b	10a68 <sprintf@plt>
   11d68:	mov	r0, r7
   11d6c:	bl	1096c <utf8proc_get_property@plt>
   11d70:	cmp	r7, #32
   11d74:	beq	11d94 <error@@Base+0x738>
   11d78:	ldrh	r3, [r0]
   11d7c:	cmp	r3, #29
   11d80:	bhi	11ddc <error@@Base+0x780>
   11d84:	ldr	r2, [pc, #120]	; 11e04 <error@@Base+0x7a8>
   11d88:	mov	r1, #1
   11d8c:	ands	r3, r2, r1, lsl r3
   11d90:	beq	11ddc <error@@Base+0x780>
   11d94:	mov	r0, r7
   11d98:	bl	10a38 <utf8proc_category@plt>
   11d9c:	sub	r0, r0, #6
   11da0:	cmp	r0, #2
   11da4:	bhi	11dbc <error@@Base+0x760>
   11da8:	mov	r1, r5
   11dac:	ldr	r0, [pc, #84]	; 11e08 <error@@Base+0x7ac>
   11db0:	bl	11cf0 <error@@Base+0x694>
   11db4:	add	r4, r0, r4
   11db8:	sxth	r4, r4
   11dbc:	add	r1, r6, r4
   11dc0:	mov	r0, r7
   11dc4:	bl	11cf0 <error@@Base+0x694>
   11dc8:	mov	r3, #0
   11dcc:	add	r0, r0, r4
   11dd0:	sxth	r0, r0
   11dd4:	strb	r3, [r6, r0]
   11dd8:	pop	{r4, r5, r6, r7, r8, pc}
   11ddc:	cmp	r7, #255	; 0xff
   11de0:	movhi	r2, r7
   11de4:	ldrhi	r1, [pc, #32]	; 11e0c <error@@Base+0x7b0>
   11de8:	ldrls	r1, [pc, #32]	; 11e10 <error@@Base+0x7b4>
   11dec:	movls	r2, r7
   11df0:	mov	r0, r5
   11df4:	pop	{r4, r5, r6, r7, r8, lr}
   11df8:	b	10a68 <sprintf@plt>
   11dfc:	ldrdeq	r2, [r1], -sp
   11e00:	andeq	r2, r1, r0, lsl #8
   11e04:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   11e08:	andeq	r2, r0, ip, asr #11
   11e0c:	andeq	r2, r1, ip, lsl #8
   11e10:	andeq	r2, r1, r5, lsl #8
   11e14:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11e18:	mov	r6, r0
   11e1c:	mov	r0, r1
   11e20:	ldr	r1, [pc, #132]	; 11eac <error@@Base+0x850>
   11e24:	mov	r5, r2
   11e28:	bl	11724 <error@@Base+0xc8>
   11e2c:	cmp	r5, #0
   11e30:	mov	r4, r0
   11e34:	beq	11e64 <error@@Base+0x808>
   11e38:	mov	r1, r0
   11e3c:	ldr	r0, [pc, #108]	; 11eb0 <error@@Base+0x854>
   11e40:	bl	10a80 <fputs@plt>
   11e44:	mov	r1, r4
   11e48:	ldr	r0, [pc, #100]	; 11eb4 <error@@Base+0x858>
   11e4c:	bl	10a80 <fputs@plt>
   11e50:	mov	r0, r4
   11e54:	blx	r5
   11e58:	mov	r1, r4
   11e5c:	ldr	r0, [pc, #80]	; 11eb4 <error@@Base+0x858>
   11e60:	bl	10a80 <fputs@plt>
   11e64:	ldr	r5, [r6]
   11e68:	mov	r6, #0
   11e6c:	cmp	r5, #0
   11e70:	bne	11e84 <error@@Base+0x828>
   11e74:	mov	r0, r4
   11e78:	bl	11554 <getc@plt+0xab0>
   11e7c:	add	sp, sp, #16
   11e80:	pop	{r4, r5, r6, pc}
   11e84:	ldr	r1, [r5, #12]
   11e88:	ldrb	r0, [r5, #8]
   11e8c:	mov	r3, r6
   11e90:	add	r2, sp, #4
   11e94:	bl	11d14 <error@@Base+0x6b8>
   11e98:	mov	r1, r4
   11e9c:	add	r0, sp, #4
   11ea0:	bl	10a80 <fputs@plt>
   11ea4:	ldr	r5, [r5, #4]
   11ea8:	b	11e6c <error@@Base+0x810>
   11eac:	andeq	r2, r1, r3, lsl r4
   11eb0:	andeq	r2, r1, r9, asr #6
   11eb4:	andeq	r2, r1, r1, lsl #7
   11eb8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11ebc:	mov	r4, r1
   11ec0:	mov	r1, #0
   11ec4:	add	r6, sp, #8
   11ec8:	mov	r7, r0
   11ecc:	mvn	r8, #0
   11ed0:	mov	r5, r1
   11ed4:	str	r1, [r6, #-4]!
   11ed8:	ldrb	r3, [r4]
   11edc:	cmp	r3, #0
   11ee0:	bne	11ef0 <error@@Base+0x894>
   11ee4:	mov	r0, #1
   11ee8:	add	sp, sp, #12
   11eec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ef0:	mov	r2, r6
   11ef4:	mov	r1, r8
   11ef8:	mov	r0, r4
   11efc:	bl	109e4 <utf8proc_iterate@plt>
   11f00:	subs	r9, r0, #0
   11f04:	ble	11f20 <error@@Base+0x8c4>
   11f08:	ldr	r2, [sp, #4]
   11f0c:	mov	r1, r5
   11f10:	mov	r0, r7
   11f14:	bl	11980 <error@@Base+0x324>
   11f18:	add	r4, r4, r9
   11f1c:	b	11ed8 <error@@Base+0x87c>
   11f20:	mov	r0, #0
   11f24:	b	11ee8 <error@@Base+0x88c>
   11f28:	cmp	r1, #0
   11f2c:	beq	12138 <error@@Base+0xadc>
   11f30:	eor	ip, r0, r1
   11f34:	rsbmi	r1, r1, #0
   11f38:	subs	r2, r1, #1
   11f3c:	beq	12104 <error@@Base+0xaa8>
   11f40:	movs	r3, r0
   11f44:	rsbmi	r3, r0, #0
   11f48:	cmp	r3, r1
   11f4c:	bls	12110 <error@@Base+0xab4>
   11f50:	tst	r1, r2
   11f54:	beq	12120 <error@@Base+0xac4>
   11f58:	clz	r2, r3
   11f5c:	clz	r0, r1
   11f60:	sub	r2, r0, r2
   11f64:	rsbs	r2, r2, #31
   11f68:	addne	r2, r2, r2, lsl #1
   11f6c:	mov	r0, #0
   11f70:	addne	pc, pc, r2, lsl #2
   11f74:	nop			; (mov r0, r0)
   11f78:	cmp	r3, r1, lsl #31
   11f7c:	adc	r0, r0, r0
   11f80:	subcs	r3, r3, r1, lsl #31
   11f84:	cmp	r3, r1, lsl #30
   11f88:	adc	r0, r0, r0
   11f8c:	subcs	r3, r3, r1, lsl #30
   11f90:	cmp	r3, r1, lsl #29
   11f94:	adc	r0, r0, r0
   11f98:	subcs	r3, r3, r1, lsl #29
   11f9c:	cmp	r3, r1, lsl #28
   11fa0:	adc	r0, r0, r0
   11fa4:	subcs	r3, r3, r1, lsl #28
   11fa8:	cmp	r3, r1, lsl #27
   11fac:	adc	r0, r0, r0
   11fb0:	subcs	r3, r3, r1, lsl #27
   11fb4:	cmp	r3, r1, lsl #26
   11fb8:	adc	r0, r0, r0
   11fbc:	subcs	r3, r3, r1, lsl #26
   11fc0:	cmp	r3, r1, lsl #25
   11fc4:	adc	r0, r0, r0
   11fc8:	subcs	r3, r3, r1, lsl #25
   11fcc:	cmp	r3, r1, lsl #24
   11fd0:	adc	r0, r0, r0
   11fd4:	subcs	r3, r3, r1, lsl #24
   11fd8:	cmp	r3, r1, lsl #23
   11fdc:	adc	r0, r0, r0
   11fe0:	subcs	r3, r3, r1, lsl #23
   11fe4:	cmp	r3, r1, lsl #22
   11fe8:	adc	r0, r0, r0
   11fec:	subcs	r3, r3, r1, lsl #22
   11ff0:	cmp	r3, r1, lsl #21
   11ff4:	adc	r0, r0, r0
   11ff8:	subcs	r3, r3, r1, lsl #21
   11ffc:	cmp	r3, r1, lsl #20
   12000:	adc	r0, r0, r0
   12004:	subcs	r3, r3, r1, lsl #20
   12008:	cmp	r3, r1, lsl #19
   1200c:	adc	r0, r0, r0
   12010:	subcs	r3, r3, r1, lsl #19
   12014:	cmp	r3, r1, lsl #18
   12018:	adc	r0, r0, r0
   1201c:	subcs	r3, r3, r1, lsl #18
   12020:	cmp	r3, r1, lsl #17
   12024:	adc	r0, r0, r0
   12028:	subcs	r3, r3, r1, lsl #17
   1202c:	cmp	r3, r1, lsl #16
   12030:	adc	r0, r0, r0
   12034:	subcs	r3, r3, r1, lsl #16
   12038:	cmp	r3, r1, lsl #15
   1203c:	adc	r0, r0, r0
   12040:	subcs	r3, r3, r1, lsl #15
   12044:	cmp	r3, r1, lsl #14
   12048:	adc	r0, r0, r0
   1204c:	subcs	r3, r3, r1, lsl #14
   12050:	cmp	r3, r1, lsl #13
   12054:	adc	r0, r0, r0
   12058:	subcs	r3, r3, r1, lsl #13
   1205c:	cmp	r3, r1, lsl #12
   12060:	adc	r0, r0, r0
   12064:	subcs	r3, r3, r1, lsl #12
   12068:	cmp	r3, r1, lsl #11
   1206c:	adc	r0, r0, r0
   12070:	subcs	r3, r3, r1, lsl #11
   12074:	cmp	r3, r1, lsl #10
   12078:	adc	r0, r0, r0
   1207c:	subcs	r3, r3, r1, lsl #10
   12080:	cmp	r3, r1, lsl #9
   12084:	adc	r0, r0, r0
   12088:	subcs	r3, r3, r1, lsl #9
   1208c:	cmp	r3, r1, lsl #8
   12090:	adc	r0, r0, r0
   12094:	subcs	r3, r3, r1, lsl #8
   12098:	cmp	r3, r1, lsl #7
   1209c:	adc	r0, r0, r0
   120a0:	subcs	r3, r3, r1, lsl #7
   120a4:	cmp	r3, r1, lsl #6
   120a8:	adc	r0, r0, r0
   120ac:	subcs	r3, r3, r1, lsl #6
   120b0:	cmp	r3, r1, lsl #5
   120b4:	adc	r0, r0, r0
   120b8:	subcs	r3, r3, r1, lsl #5
   120bc:	cmp	r3, r1, lsl #4
   120c0:	adc	r0, r0, r0
   120c4:	subcs	r3, r3, r1, lsl #4
   120c8:	cmp	r3, r1, lsl #3
   120cc:	adc	r0, r0, r0
   120d0:	subcs	r3, r3, r1, lsl #3
   120d4:	cmp	r3, r1, lsl #2
   120d8:	adc	r0, r0, r0
   120dc:	subcs	r3, r3, r1, lsl #2
   120e0:	cmp	r3, r1, lsl #1
   120e4:	adc	r0, r0, r0
   120e8:	subcs	r3, r3, r1, lsl #1
   120ec:	cmp	r3, r1
   120f0:	adc	r0, r0, r0
   120f4:	subcs	r3, r3, r1
   120f8:	cmp	ip, #0
   120fc:	rsbmi	r0, r0, #0
   12100:	bx	lr
   12104:	teq	ip, r0
   12108:	rsbmi	r0, r0, #0
   1210c:	bx	lr
   12110:	movcc	r0, #0
   12114:	asreq	r0, ip, #31
   12118:	orreq	r0, r0, #1
   1211c:	bx	lr
   12120:	clz	r2, r1
   12124:	rsb	r2, r2, #31
   12128:	cmp	ip, #0
   1212c:	lsr	r0, r3, r2
   12130:	rsbmi	r0, r0, #0
   12134:	bx	lr
   12138:	cmp	r0, #0
   1213c:	mvngt	r0, #-2147483648	; 0x80000000
   12140:	movlt	r0, #-2147483648	; 0x80000000
   12144:	b	12168 <error@@Base+0xb0c>
   12148:	cmp	r1, #0
   1214c:	beq	12138 <error@@Base+0xadc>
   12150:	push	{r0, r1, lr}
   12154:	bl	11f30 <error@@Base+0x8d4>
   12158:	pop	{r1, r2, lr}
   1215c:	mul	r3, r2, r0
   12160:	sub	r1, r1, r3
   12164:	bx	lr
   12168:	push	{r1, lr}
   1216c:	mov	r0, #8
   12170:	bl	10930 <raise@plt>
   12174:	pop	{r1, pc}
   12178:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1217c:	mov	r7, r0
   12180:	ldr	r6, [pc, #72]	; 121d0 <error@@Base+0xb74>
   12184:	ldr	r5, [pc, #72]	; 121d4 <error@@Base+0xb78>
   12188:	add	r6, pc, r6
   1218c:	add	r5, pc, r5
   12190:	sub	r6, r6, r5
   12194:	mov	r8, r1
   12198:	mov	r9, r2
   1219c:	bl	10904 <calloc@plt-0x20>
   121a0:	asrs	r6, r6, #2
   121a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121a8:	mov	r4, #0
   121ac:	add	r4, r4, #1
   121b0:	ldr	r3, [r5], #4
   121b4:	mov	r2, r9
   121b8:	mov	r1, r8
   121bc:	mov	r0, r7
   121c0:	blx	r3
   121c4:	cmp	r6, r4
   121c8:	bne	121ac <error@@Base+0xb50>
   121cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121d0:	andeq	r0, r1, r0, ror ip
   121d4:	andeq	r0, r1, r8, ror #24
   121d8:	bx	lr
   121dc:	mov	r2, r1
   121e0:	mov	r1, r0
   121e4:	mov	r0, #3
   121e8:	b	109c0 <__xstat@plt>

Disassembly of section .fini:

000121ec <.fini>:
   121ec:	push	{r3, lr}
   121f0:	pop	{r3, pc}
