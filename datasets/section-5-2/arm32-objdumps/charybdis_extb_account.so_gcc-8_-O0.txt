
../repos/charybdis/extensions/.libs/extb_account.so:     file format elf32-littlearm


Disassembly of section .init:

00000368 <_init>:
 368:	push	{r3, lr}
 36c:	bl	3ac <call_weak_fn>
 370:	pop	{r3, pc}

Disassembly of section .plt:

00000374 <.plt>:
 374:	push	{lr}		; (str lr, [sp, #-4]!)
 378:	ldr	lr, [pc, #4]	; 384 <.plt+0x10>
 37c:	add	lr, pc, lr
 380:	ldr	pc, [lr, #8]!
 384:	.word	0x00010c7c

00000388 <__cxa_finalize@plt>:
 388:	add	ip, pc, #0, 12
 38c:	add	ip, ip, #16, 20	; 0x10000
 390:	ldr	pc, [ip, #3196]!	; 0xc7c

00000394 <__gmon_start__@plt>:
 394:	add	ip, pc, #0, 12
 398:	add	ip, ip, #16, 20	; 0x10000
 39c:	ldr	pc, [ip, #3188]!	; 0xc74

000003a0 <match@plt>:
 3a0:	add	ip, pc, #0, 12
 3a4:	add	ip, ip, #16, 20	; 0x10000
 3a8:	ldr	pc, [ip, #3180]!	; 0xc6c

Disassembly of section .text:

000003ac <call_weak_fn>:
 3ac:	ldr	r3, [pc, #20]	; 3c8 <call_weak_fn+0x1c>
 3b0:	ldr	r2, [pc, #20]	; 3cc <call_weak_fn+0x20>
 3b4:	add	r3, pc, r3
 3b8:	ldr	r2, [r3, r2]
 3bc:	cmp	r2, #0
 3c0:	bxeq	lr
 3c4:	b	394 <__gmon_start__@plt>
 3c8:	.word	0x00010c44
 3cc:	.word	0x00000020

000003d0 <deregister_tm_clones>:
 3d0:	ldr	r0, [pc, #44]	; 404 <deregister_tm_clones+0x34>
 3d4:	ldr	r3, [pc, #44]	; 408 <deregister_tm_clones+0x38>
 3d8:	add	r0, pc, r0
 3dc:	add	r3, pc, r3
 3e0:	cmp	r3, r0
 3e4:	ldr	r3, [pc, #32]	; 40c <deregister_tm_clones+0x3c>
 3e8:	add	r3, pc, r3
 3ec:	bxeq	lr
 3f0:	ldr	r2, [pc, #24]	; 410 <deregister_tm_clones+0x40>
 3f4:	ldr	r3, [r3, r2]
 3f8:	cmp	r3, #0
 3fc:	bxeq	lr
 400:	bx	r3
 404:	.word	0x00010c78
 408:	.word	0x00010c74
 40c:	.word	0x00010c10
 410:	.word	0x0000001c

00000414 <register_tm_clones>:
 414:	ldr	r0, [pc, #56]	; 454 <register_tm_clones+0x40>
 418:	ldr	r3, [pc, #56]	; 458 <register_tm_clones+0x44>
 41c:	add	r0, pc, r0
 420:	add	r3, pc, r3
 424:	sub	r1, r3, r0
 428:	ldr	r3, [pc, #44]	; 45c <register_tm_clones+0x48>
 42c:	asr	r1, r1, #2
 430:	add	r3, pc, r3
 434:	add	r1, r1, r1, lsr #31
 438:	asrs	r1, r1, #1
 43c:	bxeq	lr
 440:	ldr	r2, [pc, #24]	; 460 <register_tm_clones+0x4c>
 444:	ldr	r3, [r3, r2]
 448:	cmp	r3, #0
 44c:	bxeq	lr
 450:	bx	r3
 454:	.word	0x00010c34
 458:	.word	0x00010c30
 45c:	.word	0x00010bc8
 460:	.word	0x00000028

00000464 <__do_global_dtors_aux>:
 464:	ldr	r3, [pc, #76]	; 4b8 <__do_global_dtors_aux+0x54>
 468:	ldr	r2, [pc, #76]	; 4bc <__do_global_dtors_aux+0x58>
 46c:	add	r3, pc, r3
 470:	add	r2, pc, r2
 474:	ldrb	r3, [r3]
 478:	cmp	r3, #0
 47c:	bxne	lr
 480:	ldr	r3, [pc, #56]	; 4c0 <__do_global_dtors_aux+0x5c>
 484:	push	{r4, lr}
 488:	ldr	r3, [r2, r3]
 48c:	cmp	r3, #0
 490:	beq	4a0 <__do_global_dtors_aux+0x3c>
 494:	ldr	r3, [pc, #40]	; 4c4 <__do_global_dtors_aux+0x60>
 498:	ldr	r0, [pc, r3]
 49c:	bl	388 <__cxa_finalize@plt>
 4a0:	bl	3d0 <deregister_tm_clones>
 4a4:	ldr	r3, [pc, #28]	; 4c8 <__do_global_dtors_aux+0x64>
 4a8:	mov	r2, #1
 4ac:	add	r3, pc, r3
 4b0:	strb	r2, [r3]
 4b4:	pop	{r4, pc}
 4b8:	.word	0x00010be4
 4bc:	.word	0x00010b88
 4c0:	.word	0x00000018
 4c4:	.word	0x00010b8c
 4c8:	.word	0x00010ba4

000004cc <frame_dummy>:
 4cc:	b	414 <register_tm_clones>

000004d0 <_modinit>:
 4d0:	push	{fp}		; (str fp, [sp, #-4]!)
 4d4:	add	fp, sp, #0
 4d8:	ldr	r2, [pc, #40]	; 508 <_modinit+0x38>
 4dc:	add	r2, pc, r2
 4e0:	ldr	r3, [pc, #36]	; 50c <_modinit+0x3c>
 4e4:	ldr	r3, [r2, r3]
 4e8:	ldr	r2, [pc, #32]	; 510 <_modinit+0x40>
 4ec:	add	r2, pc, r2
 4f0:	str	r2, [r3, #388]	; 0x184
 4f4:	mov	r3, #0
 4f8:	mov	r0, r3
 4fc:	add	sp, fp, #0
 500:	pop	{fp}		; (ldr fp, [sp], #4)
 504:	bx	lr
 508:	.word	0x00010b1c
 50c:	.word	0x00000024
 510:	.word	0x00000058

00000514 <_moddeinit>:
 514:	push	{fp}		; (str fp, [sp, #-4]!)
 518:	add	fp, sp, #0
 51c:	ldr	r2, [pc, #32]	; 544 <_moddeinit+0x30>
 520:	add	r2, pc, r2
 524:	ldr	r3, [pc, #28]	; 548 <_moddeinit+0x34>
 528:	ldr	r3, [r2, r3]
 52c:	mov	r2, #0
 530:	str	r2, [r3, #388]	; 0x184
 534:	nop	{0}
 538:	add	sp, fp, #0
 53c:	pop	{fp}		; (ldr fp, [sp], #4)
 540:	bx	lr
 544:	.word	0x00010ad8
 548:	.word	0x00000024

0000054c <eb_account>:
 54c:	str	fp, [sp, #-8]!
 550:	str	lr, [sp, #4]
 554:	add	fp, sp, #4
 558:	sub	sp, sp, #16
 55c:	str	r0, [fp, #-8]
 560:	str	r1, [fp, #-12]
 564:	str	r2, [fp, #-16]
 568:	str	r3, [fp, #-20]	; 0xffffffec
 56c:	ldr	r3, [fp, #-8]
 570:	cmp	r3, #0
 574:	bne	5b0 <eb_account+0x64>
 578:	ldr	r3, [fp, #-12]
 57c:	ldr	r3, [r3, #24]
 580:	add	r3, r3, #40	; 0x28
 584:	cmp	r3, #0
 588:	beq	5a8 <eb_account+0x5c>
 58c:	ldr	r3, [fp, #-12]
 590:	ldr	r3, [r3, #24]
 594:	ldrb	r3, [r3, #40]	; 0x28
 598:	cmp	r3, #0
 59c:	beq	5a8 <eb_account+0x5c>
 5a0:	mov	r3, #1
 5a4:	b	5dc <eb_account+0x90>
 5a8:	mov	r3, #0
 5ac:	b	5dc <eb_account+0x90>
 5b0:	ldr	r3, [fp, #-12]
 5b4:	ldr	r3, [r3, #24]
 5b8:	add	r3, r3, #40	; 0x28
 5bc:	mov	r1, r3
 5c0:	ldr	r0, [fp, #-8]
 5c4:	bl	3a0 <match@plt>
 5c8:	mov	r3, r0
 5cc:	cmp	r3, #0
 5d0:	movne	r3, #1
 5d4:	moveq	r3, #0
 5d8:	uxtb	r3, r3
 5dc:	mov	r0, r3
 5e0:	sub	sp, fp, #4
 5e4:	ldr	fp, [sp]
 5e8:	add	sp, sp, #4
 5ec:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000005f0 <_fini>:
 5f0:	push	{r3, lr}
 5f4:	pop	{r3, pc}
