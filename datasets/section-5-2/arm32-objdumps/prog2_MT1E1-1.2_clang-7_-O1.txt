
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

000107f8 <.init>:
   107f8:	push	{r3, lr}
   107fc:	bl	10908 <_start@@Base+0x3c>
   10800:	pop	{r3, pc}

Disassembly of section .plt:

00010804 <strcmp@plt-0x14>:
   10804:	push	{lr}		; (str lr, [sp, #-4]!)
   10808:	ldr	lr, [pc, #4]	; 10814 <strcmp@plt-0x4>
   1080c:	add	lr, pc, lr
   10810:	ldr	pc, [lr, #8]!
   10814:	andeq	r0, r1, ip, ror #15

00010818 <strcmp@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #16, 20	; 0x10000
   10820:	ldr	pc, [ip, #2028]!	; 0x7ec

00010824 <printf@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #16, 20	; 0x10000
   1082c:	ldr	pc, [ip, #2020]!	; 0x7e4

00010830 <__isoc99_fscanf@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #16, 20	; 0x10000
   10838:	ldr	pc, [ip, #2012]!	; 0x7dc

0001083c <fopen@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #16, 20	; 0x10000
   10844:	ldr	pc, [ip, #2004]!	; 0x7d4

00010848 <free@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #16, 20	; 0x10000
   10850:	ldr	pc, [ip, #1996]!	; 0x7cc

00010854 <realloc@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #16, 20	; 0x10000
   1085c:	ldr	pc, [ip, #1988]!	; 0x7c4

00010860 <fwrite@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #16, 20	; 0x10000
   10868:	ldr	pc, [ip, #1980]!	; 0x7bc

0001086c <strcpy@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #16, 20	; 0x10000
   10874:	ldr	pc, [ip, #1972]!	; 0x7b4

00010878 <malloc@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #16, 20	; 0x10000
   10880:	ldr	pc, [ip, #1964]!	; 0x7ac

00010884 <__libc_start_main@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #16, 20	; 0x10000
   1088c:	ldr	pc, [ip, #1956]!	; 0x7a4

00010890 <__gmon_start__@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #16, 20	; 0x10000
   10898:	ldr	pc, [ip, #1948]!	; 0x79c

0001089c <fprintf@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #16, 20	; 0x10000
   108a4:	ldr	pc, [ip, #1940]!	; 0x794

000108a8 <fclose@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #16, 20	; 0x10000
   108b0:	ldr	pc, [ip, #1932]!	; 0x78c

000108b4 <__isoc99_scanf@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #16, 20	; 0x10000
   108bc:	ldr	pc, [ip, #1924]!	; 0x784

000108c0 <abort@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #16, 20	; 0x10000
   108c8:	ldr	pc, [ip, #1916]!	; 0x77c

Disassembly of section .text:

000108cc <_start@@Base>:
   108cc:	mov	fp, #0
   108d0:	mov	lr, #0
   108d4:	pop	{r1}		; (ldr r1, [sp], #4)
   108d8:	mov	r2, sp
   108dc:	push	{r2}		; (str r2, [sp, #-4]!)
   108e0:	push	{r0}		; (str r0, [sp, #-4]!)
   108e4:	ldr	ip, [pc, #16]	; 108fc <_start@@Base+0x30>
   108e8:	push	{ip}		; (str ip, [sp, #-4]!)
   108ec:	ldr	r0, [pc, #12]	; 10900 <_start@@Base+0x34>
   108f0:	ldr	r3, [pc, #12]	; 10904 <_start@@Base+0x38>
   108f4:	bl	10884 <__libc_start_main@plt>
   108f8:	bl	108c0 <abort@plt>
   108fc:	andeq	r0, r1, r0, ror #24
   10900:	andeq	r0, r1, r4, lsr fp
   10904:	andeq	r0, r1, r0, lsl #24
   10908:	ldr	r3, [pc, #20]	; 10924 <_start@@Base+0x58>
   1090c:	ldr	r2, [pc, #20]	; 10928 <_start@@Base+0x5c>
   10910:	add	r3, pc, r3
   10914:	ldr	r2, [r3, r2]
   10918:	cmp	r2, #0
   1091c:	bxeq	lr
   10920:	b	10890 <__gmon_start__@plt>
   10924:	andeq	r0, r1, r8, ror #13
   10928:	andeq	r0, r0, r8, asr #32
   1092c:	ldr	r0, [pc, #24]	; 1094c <_start@@Base+0x80>
   10930:	ldr	r3, [pc, #24]	; 10950 <_start@@Base+0x84>
   10934:	cmp	r3, r0
   10938:	bxeq	lr
   1093c:	ldr	r3, [pc, #16]	; 10954 <_start@@Base+0x88>
   10940:	cmp	r3, #0
   10944:	bxeq	lr
   10948:	bx	r3
   1094c:	andeq	r1, r2, r4, asr r0
   10950:	andeq	r1, r2, r4, asr r0
   10954:	andeq	r0, r0, r0
   10958:	ldr	r0, [pc, #36]	; 10984 <_start@@Base+0xb8>
   1095c:	ldr	r1, [pc, #36]	; 10988 <_start@@Base+0xbc>
   10960:	sub	r1, r1, r0
   10964:	asr	r1, r1, #2
   10968:	add	r1, r1, r1, lsr #31
   1096c:	asrs	r1, r1, #1
   10970:	bxeq	lr
   10974:	ldr	r3, [pc, #16]	; 1098c <_start@@Base+0xc0>
   10978:	cmp	r3, #0
   1097c:	bxeq	lr
   10980:	bx	r3
   10984:	andeq	r1, r2, r4, asr r0
   10988:	andeq	r1, r2, r4, asr r0
   1098c:	andeq	r0, r0, r0
   10990:	push	{r4, lr}
   10994:	ldr	r4, [pc, #24]	; 109b4 <_start@@Base+0xe8>
   10998:	ldrb	r3, [r4]
   1099c:	cmp	r3, #0
   109a0:	popne	{r4, pc}
   109a4:	bl	1092c <_start@@Base+0x60>
   109a8:	mov	r3, #1
   109ac:	strb	r3, [r4]
   109b0:	pop	{r4, pc}
   109b4:	andeq	r1, r2, r4, asr r0
   109b8:	b	10958 <_start@@Base+0x8c>

000109bc <analisarFicheiro@@Base>:
   109bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109c0:	add	fp, sp, #28
   109c4:	sub	sp, sp, #60	; 0x3c
   109c8:	str	r1, [sp, #4]
   109cc:	mov	r6, r0
   109d0:	mov	r0, #104	; 0x68
   109d4:	bl	10878 <malloc@plt>
   109d8:	mov	r7, r0
   109dc:	movw	r1, #3184	; 0xc70
   109e0:	movt	r1, #1
   109e4:	add	r2, sp, #10
   109e8:	mov	r0, r6
   109ec:	bl	10830 <__isoc99_fscanf@plt>
   109f0:	mov	r8, #0
   109f4:	cmn	r0, #1
   109f8:	beq	10aa8 <analisarFicheiro@@Base+0xec>
   109fc:	movw	r9, #3184	; 0xc70
   10a00:	movt	r9, #1
   10a04:	add	r4, sp, #10
   10a08:	cmp	r8, #0
   10a0c:	blt	10a90 <analisarFicheiro@@Base+0xd4>
   10a10:	mov	sl, #0
   10a14:	mov	r5, r7
   10a18:	mov	r0, r4
   10a1c:	mov	r1, r5
   10a20:	bl	10818 <strcmp@plt>
   10a24:	cmp	r0, #0
   10a28:	beq	10a4c <analisarFicheiro@@Base+0x90>
   10a2c:	cmp	r8, sl
   10a30:	beq	10a5c <analisarFicheiro@@Base+0xa0>
   10a34:	add	r5, r5, #104	; 0x68
   10a38:	add	r0, sl, #1
   10a3c:	cmp	sl, r8
   10a40:	mov	sl, r0
   10a44:	blt	10a18 <analisarFicheiro@@Base+0x5c>
   10a48:	b	10a90 <analisarFicheiro@@Base+0xd4>
   10a4c:	ldr	r0, [r5, #100]	; 0x64
   10a50:	add	r0, r0, #1
   10a54:	str	r0, [r5, #100]	; 0x64
   10a58:	b	10a90 <analisarFicheiro@@Base+0xd4>
   10a5c:	mov	r5, #104	; 0x68
   10a60:	mul	r0, r8, r5
   10a64:	add	r1, r0, #104	; 0x68
   10a68:	mov	r0, r7
   10a6c:	bl	10854 <realloc@plt>
   10a70:	mov	r7, r0
   10a74:	mla	r5, r8, r5, r0
   10a78:	mov	r0, r5
   10a7c:	mov	r1, r4
   10a80:	bl	1086c <strcpy@plt>
   10a84:	mov	r0, #1
   10a88:	str	r0, [r5, #100]	; 0x64
   10a8c:	add	r8, r8, #1
   10a90:	mov	r0, r6
   10a94:	mov	r1, r9
   10a98:	mov	r2, r4
   10a9c:	bl	10830 <__isoc99_fscanf@plt>
   10aa0:	cmn	r0, #1
   10aa4:	bne	10a08 <analisarFicheiro@@Base+0x4c>
   10aa8:	ldr	r0, [sp, #4]
   10aac:	str	r8, [r0]
   10ab0:	mov	r0, r7
   10ab4:	sub	sp, fp, #28
   10ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010abc <gerarRelatorio@@Base>:
   10abc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ac0:	add	fp, sp, #24
   10ac4:	sub	sp, sp, #8
   10ac8:	mov	r4, r2
   10acc:	mov	r5, r1
   10ad0:	mov	r6, r0
   10ad4:	movw	r0, #3187	; 0xc73
   10ad8:	movt	r0, #1
   10adc:	mov	r1, #53	; 0x35
   10ae0:	mov	r2, #1
   10ae4:	mov	r3, r6
   10ae8:	bl	10860 <fwrite@plt>
   10aec:	cmp	r4, #1
   10af0:	blt	10b2c <gerarRelatorio@@Base+0x70>
   10af4:	mov	r7, #0
   10af8:	movw	r8, #3241	; 0xca9
   10afc:	movt	r8, #1
   10b00:	ldr	r0, [r5, #100]	; 0x64
   10b04:	str	r0, [sp]
   10b08:	add	r7, r7, #1
   10b0c:	mov	r0, r6
   10b10:	mov	r1, r8
   10b14:	mov	r2, r7
   10b18:	mov	r3, r5
   10b1c:	bl	1089c <fprintf@plt>
   10b20:	add	r5, r5, #104	; 0x68
   10b24:	cmp	r4, r7
   10b28:	bne	10b00 <gerarRelatorio@@Base+0x44>
   10b2c:	sub	sp, fp, #24
   10b30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010b34 <main@@Base>:
   10b34:	push	{r4, r5, r6, sl, fp, lr}
   10b38:	add	fp, sp, #16
   10b3c:	sub	sp, sp, #104	; 0x68
   10b40:	movw	r0, #3254	; 0xcb6
   10b44:	movt	r0, #1
   10b48:	bl	10824 <printf@plt>
   10b4c:	movw	r4, #3184	; 0xc70
   10b50:	movt	r4, #1
   10b54:	add	r5, sp, #54	; 0x36
   10b58:	mov	r0, r4
   10b5c:	mov	r1, r5
   10b60:	bl	108b4 <__isoc99_scanf@plt>
   10b64:	movw	r0, #3276	; 0xccc
   10b68:	movt	r0, #1
   10b6c:	bl	10824 <printf@plt>
   10b70:	add	r1, sp, #4
   10b74:	mov	r0, r4
   10b78:	bl	108b4 <__isoc99_scanf@plt>
   10b7c:	movw	r1, #3296	; 0xce0
   10b80:	movt	r1, #1
   10b84:	mov	r0, r5
   10b88:	bl	1083c <fopen@plt>
   10b8c:	mov	r6, #1
   10b90:	cmp	r0, #0
   10b94:	beq	10bf4 <main@@Base+0xc0>
   10b98:	mov	r4, r0
   10b9c:	add	r0, sp, #4
   10ba0:	movw	r1, #3298	; 0xce2
   10ba4:	movt	r1, #1
   10ba8:	bl	1083c <fopen@plt>
   10bac:	cmp	r0, #0
   10bb0:	beq	10bf4 <main@@Base+0xc0>
   10bb4:	mov	r5, r0
   10bb8:	mov	r1, sp
   10bbc:	mov	r0, r4
   10bc0:	bl	109bc <analisarFicheiro@@Base>
   10bc4:	mov	r6, r0
   10bc8:	ldr	r2, [sp]
   10bcc:	mov	r0, r5
   10bd0:	mov	r1, r6
   10bd4:	bl	10abc <gerarRelatorio@@Base>
   10bd8:	mov	r0, r4
   10bdc:	bl	108a8 <fclose@plt>
   10be0:	mov	r0, r5
   10be4:	bl	108a8 <fclose@plt>
   10be8:	mov	r0, r6
   10bec:	bl	10848 <free@plt>
   10bf0:	mov	r6, #0
   10bf4:	mov	r0, r6
   10bf8:	sub	sp, fp, #16
   10bfc:	pop	{r4, r5, r6, sl, fp, pc}

00010c00 <__libc_csu_init@@Base>:
   10c00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c04:	mov	r7, r0
   10c08:	ldr	r6, [pc, #72]	; 10c58 <__libc_csu_init@@Base+0x58>
   10c0c:	ldr	r5, [pc, #72]	; 10c5c <__libc_csu_init@@Base+0x5c>
   10c10:	add	r6, pc, r6
   10c14:	add	r5, pc, r5
   10c18:	sub	r6, r6, r5
   10c1c:	mov	r8, r1
   10c20:	mov	r9, r2
   10c24:	bl	107f8 <strcmp@plt-0x20>
   10c28:	asrs	r6, r6, #2
   10c2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c30:	mov	r4, #0
   10c34:	add	r4, r4, #1
   10c38:	ldr	r3, [r5], #4
   10c3c:	mov	r2, r9
   10c40:	mov	r1, r8
   10c44:	mov	r0, r7
   10c48:	blx	r3
   10c4c:	cmp	r6, r4
   10c50:	bne	10c34 <__libc_csu_init@@Base+0x34>
   10c54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c58:	strdeq	r0, [r1], -r4
   10c5c:	andeq	r0, r1, ip, ror #5

00010c60 <__libc_csu_fini@@Base>:
   10c60:	bx	lr

Disassembly of section .fini:

00010c64 <.fini>:
   10c64:	push	{r3, lr}
   10c68:	pop	{r3, pc}
