
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

00002100 <.init>:
    2100:	push	{r3, lr}
    2104:	bl	2588 <__assert_fail@plt+0xc>
    2108:	pop	{r3, pc}

Disassembly of section .plt:

0000210c <calloc@plt-0x14>:
    210c:	push	{lr}		; (str lr, [sp, #-4]!)
    2110:	ldr	lr, [pc, #4]	; 211c <calloc@plt-0x4>
    2114:	add	lr, pc, lr
    2118:	ldr	pc, [lr, #8]!
    211c:	andeq	r5, r2, r4, ror #29

00002120 <calloc@plt>:
    2120:	add	ip, pc, #0, 12
    2124:	add	ip, ip, #151552	; 0x25000
    2128:	ldr	pc, [ip, #3812]!	; 0xee4

0000212c <raise@plt>:
    212c:	add	ip, pc, #0, 12
    2130:	add	ip, ip, #151552	; 0x25000
    2134:	ldr	pc, [ip, #3804]!	; 0xedc

00002138 <btbb_piconet_new@plt>:
    2138:	add	ip, pc, #0, 12
    213c:	add	ip, ip, #151552	; 0x25000
    2140:	ldr	pc, [ip, #3796]!	; 0xed4

00002144 <gen_hop_pattern@plt>:
    2144:	add	ip, pc, #0, 12
    2148:	add	ip, ip, #151552	; 0x25000
    214c:	ldr	pc, [ip, #3788]!	; 0xecc

00002150 <count_bits@plt>:
    2150:	add	ip, pc, #0, 12
    2154:	add	ip, ip, #151552	; 0x25000
    2158:	ldr	pc, [ip, #3780]!	; 0xec4

0000215c <__cxa_finalize@plt>:
    215c:	add	ip, pc, #0, 12
    2160:	add	ip, ip, #151552	; 0x25000
    2164:	ldr	pc, [ip, #3772]!	; 0xebc

00002168 <btbb_get_payload_packed@plt>:
    2168:	add	ip, pc, #0, 12
    216c:	add	ip, ip, #151552	; 0x25000
    2170:	ldr	pc, [ip, #3764]!	; 0xeb4

00002174 <printf@plt>:
    2174:	add	ip, pc, #0, 12
    2178:	add	ip, ip, #151552	; 0x25000
    217c:	ldr	pc, [ip, #3756]!	; 0xeac

00002180 <fopen@plt>:
    2180:	add	ip, pc, #0, 12
    2184:	add	ip, ip, #151552	; 0x25000
    2188:	ldr	pc, [ip, #3748]!	; 0xea4

0000218c <lell_packet_is_data@plt>:
    218c:	add	ip, pc, #0, 12
    2190:	add	ip, ip, #151552	; 0x25000
    2194:	ldr	pc, [ip, #3740]!	; 0xe9c

00002198 <fflush@plt>:
    2198:	add	ip, pc, #0, 12
    219c:	add	ip, ip, #151552	; 0x25000
    21a0:	ldr	pc, [ip, #3732]!	; 0xe94

000021a4 <btbb_packet_set_flag@plt>:
    21a4:	add	ip, pc, #0, 12
    21a8:	add	ip, ip, #151552	; 0x25000
    21ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000021b0 <pcapng_append_interface_option@plt>:
    21b0:	add	ip, pc, #0, 12
    21b4:	add	ip, ip, #151552	; 0x25000
    21b8:	ldr	pc, [ip, #3716]!	; 0xe84

000021bc <free@plt>:
    21bc:	add	ip, pc, #0, 12
    21c0:	add	ip, ip, #151552	; 0x25000
    21c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000021c8 <btbb_packet_get_modulation@plt>:
    21c8:	add	ip, pc, #0, 12
    21cc:	add	ip, ip, #151552	; 0x25000
    21d0:	ldr	pc, [ip, #3700]!	; 0xe74

000021d4 <btbb_packet_get_ac_errors@plt>:
    21d4:	add	ip, pc, #0, 12
    21d8:	add	ip, ip, #151552	; 0x25000
    21dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000021e0 <memcpy@plt>:
    21e0:	add	ip, pc, #0, 12
    21e4:	add	ip, ip, #151552	; 0x25000
    21e8:	ldr	pc, [ip, #3684]!	; 0xe64

000021ec <btbb_uap_from_header@plt>:
    21ec:	add	ip, pc, #0, 12
    21f0:	add	ip, ip, #151552	; 0x25000
    21f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000021f8 <btbb_packet_get_flag@plt>:
    21f8:	add	ip, pc, #0, 12
    21fc:	add	ip, ip, #151552	; 0x25000
    2200:	ldr	pc, [ip, #3668]!	; 0xe54

00002204 <fhs@plt>:
    2204:	add	ip, pc, #0, 12
    2208:	add	ip, ip, #151552	; 0x25000
    220c:	ldr	pc, [ip, #3660]!	; 0xe4c

00002210 <EV4@plt>:
    2210:	add	ip, pc, #0, 12
    2214:	add	ip, ip, #151552	; 0x25000
    2218:	ldr	pc, [ip, #3652]!	; 0xe44

0000221c <btbb_piconet_get_uap@plt>:
    221c:	add	ip, pc, #0, 12
    2220:	add	ip, ip, #151552	; 0x25000
    2224:	ldr	pc, [ip, #3644]!	; 0xe3c

00002228 <memcmp@plt>:
    2228:	add	ip, pc, #0, 12
    222c:	add	ip, ip, #151552	; 0x25000
    2230:	ldr	pc, [ip, #3636]!	; 0xe34

00002234 <lell_pcap_close@plt>:
    2234:	add	ip, pc, #0, 12
    2238:	add	ip, ip, #151552	; 0x25000
    223c:	ldr	pc, [ip, #3628]!	; 0xe2c

00002240 <btbb_piconet_get_channel_seen@plt>:
    2240:	add	ip, pc, #0, 12
    2244:	add	ip, ip, #151552	; 0x25000
    2248:	ldr	pc, [ip, #3620]!	; 0xe24

0000224c <btbb_pcap_open@plt>:
    224c:	add	ip, pc, #0, 12
    2250:	add	ip, ip, #151552	; 0x25000
    2254:	ldr	pc, [ip, #3612]!	; 0xe1c

00002258 <btbb_header_present@plt>:
    2258:	add	ip, pc, #0, 12
    225c:	add	ip, ip, #151552	; 0x25000
    2260:	ldr	pc, [ip, #3604]!	; 0xe14

00002264 <btbb_piconet_get_flag@plt>:
    2264:	add	ip, pc, #0, 12
    2268:	add	ip, ip, #151552	; 0x25000
    226c:	ldr	pc, [ip, #3596]!	; 0xe0c

00002270 <pcapng_create@plt>:
    2270:	add	ip, pc, #0, 12
    2274:	add	ip, ip, #151552	; 0x25000
    2278:	ldr	pc, [ip, #3588]!	; 0xe04

0000227c <DM@plt>:
    227c:	add	ip, pc, #0, 12
    2280:	add	ip, ip, #151552	; 0x25000
    2284:	ldr	pc, [ip, #3580]!	; 0xdfc

00002288 <btbb_piconet_set_flag@plt>:
    2288:	add	ip, pc, #0, 12
    228c:	add	ip, ip, #151552	; 0x25000
    2290:	ldr	pc, [ip, #3572]!	; 0xdf4

00002294 <HV@plt>:
    2294:	add	ip, pc, #0, 12
    2298:	add	ip, ip, #151552	; 0x25000
    229c:	ldr	pc, [ip, #3564]!	; 0xdec

000022a0 <perror@plt>:
    22a0:	add	ip, pc, #0, 12
    22a4:	add	ip, ip, #151552	; 0x25000
    22a8:	ldr	pc, [ip, #3556]!	; 0xde4

000022ac <btbb_piconet_set_channel_seen@plt>:
    22ac:	add	ip, pc, #0, 12
    22b0:	add	ip, ip, #151552	; 0x25000
    22b4:	ldr	pc, [ip, #3548]!	; 0xddc

000022b8 <perm_table_init@plt>:
    22b8:	add	ip, pc, #0, 12
    22bc:	add	ip, ip, #151552	; 0x25000
    22c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000022c4 <btbb_packet_set_uap@plt>:
    22c4:	add	ip, pc, #0, 12
    22c8:	add	ip, ip, #151552	; 0x25000
    22cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000022d0 <fwrite@plt>:
    22d0:	add	ip, pc, #0, 12
    22d4:	add	ip, ip, #151552	; 0x25000
    22d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000022dc <btbb_gen_syncword@plt>:
    22dc:	add	ip, pc, #0, 12
    22e0:	add	ip, ip, #151552	; 0x25000
    22e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000022e8 <btbb_pcap_close@plt>:
    22e8:	add	ip, pc, #0, 12
    22ec:	add	ip, ip, #151552	; 0x25000
    22f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000022f4 <crc_check@plt>:
    22f4:	add	ip, pc, #0, 12
    22f8:	add	ip, ip, #151552	; 0x25000
    22fc:	ldr	pc, [ip, #3500]!	; 0xdac

00002300 <btbb_decode@plt>:
    2300:	add	ip, pc, #0, 12
    2304:	add	ip, ip, #151552	; 0x25000
    2308:	ldr	pc, [ip, #3492]!	; 0xda4

0000230c <btbb_winnow@plt>:
    230c:	add	ip, pc, #0, 12
    2310:	add	ip, ip, #151552	; 0x25000
    2314:	ldr	pc, [ip, #3484]!	; 0xd9c

00002318 <lell_get_adv_type_str@plt>:
    2318:	add	ip, pc, #0, 12
    231c:	add	ip, ip, #151552	; 0x25000
    2320:	ldr	pc, [ip, #3476]!	; 0xd94

00002324 <get_hop_pattern@plt>:
    2324:	add	ip, pc, #0, 12
    2328:	add	ip, ip, #151552	; 0x25000
    232c:	ldr	pc, [ip, #3468]!	; 0xd8c

00002330 <puts@plt>:
    2330:	add	ip, pc, #0, 12
    2334:	add	ip, ip, #151552	; 0x25000
    2338:	ldr	pc, [ip, #3460]!	; 0xd84

0000233c <malloc@plt>:
    233c:	add	ip, pc, #0, 12
    2340:	add	ip, ip, #151552	; 0x25000
    2344:	ldr	pc, [ip, #3452]!	; 0xd7c

00002348 <try_hop@plt>:
    2348:	add	ip, pc, #0, 12
    234c:	add	ip, ip, #151552	; 0x25000
    2350:	ldr	pc, [ip, #3444]!	; 0xd74

00002354 <btbb_packet_new@plt>:
    2354:	add	ip, pc, #0, 12
    2358:	add	ip, ip, #151552	; 0x25000
    235c:	ldr	pc, [ip, #3436]!	; 0xd6c

00002360 <btbb_pcap_dump@plt>:
    2360:	add	ip, pc, #0, 12
    2364:	add	ip, ip, #151552	; 0x25000
    2368:	ldr	pc, [ip, #3428]!	; 0xd64

0000236c <__gmon_start__@plt>:
    236c:	add	ip, pc, #0, 12
    2370:	add	ip, ip, #151552	; 0x25000
    2374:	ldr	pc, [ip, #3420]!	; 0xd5c

00002378 <open@plt>:
    2378:	add	ip, pc, #0, 12
    237c:	add	ip, ip, #151552	; 0x25000
    2380:	ldr	pc, [ip, #3412]!	; 0xd54

00002384 <__ctype_b_loc@plt>:
    2384:	add	ip, pc, #0, 12
    2388:	add	ip, ip, #151552	; 0x25000
    238c:	ldr	pc, [ip, #3404]!	; 0xd4c

00002390 <exit@plt>:
    2390:	add	ip, pc, #0, 12
    2394:	add	ip, ip, #151552	; 0x25000
    2398:	ldr	pc, [ip, #3396]!	; 0xd44

0000239c <btbb_packet_get_payload_length@plt>:
    239c:	add	ip, pc, #0, 12
    23a0:	add	ip, ip, #151552	; 0x25000
    23a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000023a8 <strlen@plt>:
    23a8:	add	ip, pc, #0, 12
    23ac:	add	ip, ip, #151552	; 0x25000
    23b0:	ldr	pc, [ip, #3380]!	; 0xd34

000023b4 <btbb_decode_header@plt>:
    23b4:	add	ip, pc, #0, 12
    23b8:	add	ip, ip, #151552	; 0x25000
    23bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000023c0 <mmap@plt>:
    23c0:	add	ip, pc, #0, 12
    23c4:	add	ip, ip, #151552	; 0x25000
    23c8:	ldr	pc, [ip, #3364]!	; 0xd24

000023cc <btbb_packet_get_header_packed@plt>:
    23cc:	add	ip, pc, #0, 12
    23d0:	add	ip, ip, #151552	; 0x25000
    23d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000023d8 <lell_pcapng_record_connect_req@plt>:
    23d8:	add	ip, pc, #0, 12
    23dc:	add	ip, ip, #151552	; 0x25000
    23e0:	ldr	pc, [ip, #3348]!	; 0xd14

000023e4 <lell_get_channel_k@plt>:
    23e4:	add	ip, pc, #0, 12
    23e8:	add	ip, ip, #151552	; 0x25000
    23ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000023f0 <fprintf@plt>:
    23f0:	add	ip, pc, #0, 12
    23f4:	add	ip, ip, #151552	; 0x25000
    23f8:	ldr	pc, [ip, #3332]!	; 0xd04

000023fc <getpagesize@plt>:
    23fc:	add	ip, pc, #0, 12
    2400:	add	ip, ip, #151552	; 0x25000
    2404:	ldr	pc, [ip, #3324]!	; 0xcfc

00002408 <pcapng_append_packet@plt>:
    2408:	add	ip, pc, #0, 12
    240c:	add	ip, ip, #151552	; 0x25000
    2410:	ldr	pc, [ip, #3316]!	; 0xcf4

00002414 <btbb_packet_get_transport@plt>:
    2414:	add	ip, pc, #0, 12
    2418:	add	ip, ip, #151552	; 0x25000
    241c:	ldr	pc, [ip, #3308]!	; 0xcec

00002420 <__errno_location@plt>:
    2420:	add	ip, pc, #0, 12
    2424:	add	ip, ip, #151552	; 0x25000
    2428:	ldr	pc, [ip, #3300]!	; 0xce4

0000242c <find_known_lap@plt>:
    242c:	add	ip, pc, #0, 12
    2430:	add	ip, ip, #151552	; 0x25000
    2434:	ldr	pc, [ip, #3292]!	; 0xcdc

00002438 <address_precalc@plt>:
    2438:	add	ip, pc, #0, 12
    243c:	add	ip, ip, #151552	; 0x25000
    2440:	ldr	pc, [ip, #3284]!	; 0xcd4

00002444 <memset@plt>:
    2444:	add	ip, pc, #0, 12
    2448:	add	ip, ip, #151552	; 0x25000
    244c:	ldr	pc, [ip, #3276]!	; 0xccc

00002450 <putchar@plt>:
    2450:	add	ip, pc, #0, 12
    2454:	add	ip, ip, #151552	; 0x25000
    2458:	ldr	pc, [ip, #3268]!	; 0xcc4

0000245c <strncpy@plt>:
    245c:	add	ip, pc, #0, 12
    2460:	add	ip, ip, #151552	; 0x25000
    2464:	ldr	pc, [ip, #3260]!	; 0xcbc

00002468 <EV3@plt>:
    2468:	add	ip, pc, #0, 12
    246c:	add	ip, ip, #151552	; 0x25000
    2470:	ldr	pc, [ip, #3252]!	; 0xcb4

00002474 <btbb_packet_get_lap@plt>:
    2474:	add	ip, pc, #0, 12
    2478:	add	ip, ip, #151552	; 0x25000
    247c:	ldr	pc, [ip, #3244]!	; 0xcac

00002480 <lell_packet_new@plt>:
    2480:	add	ip, pc, #0, 12
    2484:	add	ip, ip, #151552	; 0x25000
    2488:	ldr	pc, [ip, #3236]!	; 0xca4

0000248c <bt_compidtostr@plt>:
    248c:	add	ip, pc, #0, 12
    2490:	add	ip, ip, #151552	; 0x25000
    2494:	ldr	pc, [ip, #3228]!	; 0xc9c

00002498 <write@plt>:
    2498:	add	ip, pc, #0, 12
    249c:	add	ip, ip, #151552	; 0x25000
    24a0:	ldr	pc, [ip, #3220]!	; 0xc94

000024a4 <get_piconet@plt>:
    24a4:	add	ip, pc, #0, 12
    24a8:	add	ip, ip, #151552	; 0x25000
    24ac:	ldr	pc, [ip, #3212]!	; 0xc8c

000024b0 <perm5@plt>:
    24b0:	add	ip, pc, #0, 12
    24b4:	add	ip, ip, #151552	; 0x25000
    24b8:	ldr	pc, [ip, #3204]!	; 0xc84

000024bc <fclose@plt>:
    24bc:	add	ip, pc, #0, 12
    24c0:	add	ip, ip, #151552	; 0x25000
    24c4:	ldr	pc, [ip, #3196]!	; 0xc7c

000024c8 <EV5@plt>:
    24c8:	add	ip, pc, #0, 12
    24cc:	add	ip, ip, #151552	; 0x25000
    24d0:	ldr	pc, [ip, #3188]!	; 0xc74

000024d4 <munmap@plt>:
    24d4:	add	ip, pc, #0, 12
    24d8:	add	ip, ip, #151552	; 0x25000
    24dc:	ldr	pc, [ip, #3180]!	; 0xc6c

000024e0 <DH@plt>:
    24e0:	add	ip, pc, #0, 12
    24e4:	add	ip, ip, #151552	; 0x25000
    24e8:	ldr	pc, [ip, #3172]!	; 0xc64

000024ec <btbb_packet_get_channel@plt>:
    24ec:	add	ip, pc, #0, 12
    24f0:	add	ip, ip, #151552	; 0x25000
    24f4:	ldr	pc, [ip, #3164]!	; 0xc5c

000024f8 <precalc@plt>:
    24f8:	add	ip, pc, #0, 12
    24fc:	add	ip, ip, #151552	; 0x25000
    2500:	ldr	pc, [ip, #3156]!	; 0xc54

00002504 <btbb_decode_payload@plt>:
    2504:	add	ip, pc, #0, 12
    2508:	add	ip, ip, #151552	; 0x25000
    250c:	ldr	pc, [ip, #3148]!	; 0xc4c

00002510 <promiscuous_packet_search@plt>:
    2510:	add	ip, pc, #0, 12
    2514:	add	ip, ip, #151552	; 0x25000
    2518:	ldr	pc, [ip, #3140]!	; 0xc44

0000251c <pcapng_close@plt>:
    251c:	add	ip, pc, #0, 12
    2520:	add	ip, ip, #151552	; 0x25000
    2524:	ldr	pc, [ip, #3132]!	; 0xc3c

00002528 <btbb_print_packet@plt>:
    2528:	add	ip, pc, #0, 12
    252c:	add	ip, ip, #151552	; 0x25000
    2530:	ldr	pc, [ip, #3124]!	; 0xc34

00002534 <fast_perm@plt>:
    2534:	add	ip, pc, #0, 12
    2538:	add	ip, ip, #151552	; 0x25000
    253c:	ldr	pc, [ip, #3116]!	; 0xc2c

00002540 <try_clock@plt>:
    2540:	add	ip, pc, #0, 12
    2544:	add	ip, ip, #151552	; 0x25000
    2548:	ldr	pc, [ip, #3108]!	; 0xc24

0000254c <btbb_init_hop_reversal@plt>:
    254c:	add	ip, pc, #0, 12
    2550:	add	ip, ip, #151552	; 0x25000
    2554:	ldr	pc, [ip, #3100]!	; 0xc1c

00002558 <fputs@plt>:
    2558:	add	ip, pc, #0, 12
    255c:	add	ip, ip, #151552	; 0x25000
    2560:	ldr	pc, [ip, #3092]!	; 0xc14

00002564 <btbb_init_piconet@plt>:
    2564:	add	ip, pc, #0, 12
    2568:	add	ip, ip, #151552	; 0x25000
    256c:	ldr	pc, [ip, #3084]!	; 0xc0c

00002570 <close@plt>:
    2570:	add	ip, pc, #0, 12
    2574:	add	ip, ip, #151552	; 0x25000
    2578:	ldr	pc, [ip, #3076]!	; 0xc04

0000257c <__assert_fail@plt>:
    257c:	add	ip, pc, #0, 12
    2580:	add	ip, ip, #151552	; 0x25000
    2584:	ldr	pc, [ip, #3068]!	; 0xbfc

Disassembly of section .text:

00002588 <btbb_gen_syncword@@Base-0xa40>:
    2588:	ldr	r3, [pc, #20]	; 25a4 <__assert_fail@plt+0x28>
    258c:	ldr	r2, [pc, #20]	; 25a8 <__assert_fail@plt+0x2c>
    2590:	add	r3, pc, r3
    2594:	ldr	r2, [r3, r2]
    2598:	cmp	r2, #0
    259c:	bxeq	lr
    25a0:	b	236c <__gmon_start__@plt>
    25a4:	andeq	r5, r2, r8, ror #20
    25a8:	muleq	r0, r8, r1
    25ac:	ldr	r3, [pc, #52]	; 25e8 <__assert_fail@plt+0x6c>
    25b0:	ldr	r0, [pc, #52]	; 25ec <__assert_fail@plt+0x70>
    25b4:	add	r3, pc, r3
    25b8:	add	r0, pc, r0
    25bc:	add	r3, r3, #3
    25c0:	sub	r3, r3, r0
    25c4:	cmp	r3, #6
    25c8:	ldr	r3, [pc, #32]	; 25f0 <__assert_fail@plt+0x74>
    25cc:	add	r3, pc, r3
    25d0:	bxls	lr
    25d4:	ldr	r2, [pc, #24]	; 25f4 <__assert_fail@plt+0x78>
    25d8:	ldr	r3, [r3, r2]
    25dc:	cmp	r3, #0
    25e0:	bxeq	lr
    25e4:	bx	r3
    25e8:	strdeq	r5, [r2], -r4
    25ec:	strdeq	r5, [r2], -r0
    25f0:	andeq	r5, r2, ip, lsr #20
    25f4:	andeq	r0, r0, r8, lsl #3
    25f8:	ldr	r1, [pc, #56]	; 2638 <__assert_fail@plt+0xbc>
    25fc:	ldr	r0, [pc, #56]	; 263c <__assert_fail@plt+0xc0>
    2600:	add	r1, pc, r1
    2604:	add	r0, pc, r0
    2608:	sub	r1, r1, r0
    260c:	ldr	r3, [pc, #44]	; 2640 <__assert_fail@plt+0xc4>
    2610:	asr	r1, r1, #2
    2614:	add	r3, pc, r3
    2618:	add	r1, r1, r1, lsr #31
    261c:	asrs	r1, r1, #1
    2620:	bxeq	lr
    2624:	ldr	r2, [pc, #24]	; 2644 <__assert_fail@plt+0xc8>
    2628:	ldr	r3, [r3, r2]
    262c:	cmp	r3, #0
    2630:	bxeq	lr
    2634:	bx	r3
    2638:	andeq	r5, r2, r8, lsr #23
    263c:	andeq	r5, r2, r4, lsr #23
    2640:	andeq	r5, r2, r4, ror #19
    2644:	andeq	r0, r0, r4, lsr #3
    2648:	ldr	r3, [pc, #76]	; 269c <__assert_fail@plt+0x120>
    264c:	ldr	r2, [pc, #76]	; 26a0 <__assert_fail@plt+0x124>
    2650:	add	r3, pc, r3
    2654:	add	r2, pc, r2
    2658:	ldrb	r3, [r3]
    265c:	cmp	r3, #0
    2660:	bxne	lr
    2664:	ldr	r3, [pc, #56]	; 26a4 <__assert_fail@plt+0x128>
    2668:	push	{r4, lr}
    266c:	ldr	r3, [r2, r3]
    2670:	cmp	r3, #0
    2674:	beq	2684 <__assert_fail@plt+0x108>
    2678:	ldr	r3, [pc, #40]	; 26a8 <__assert_fail@plt+0x12c>
    267c:	ldr	r0, [pc, r3]
    2680:	bl	215c <__cxa_finalize@plt>
    2684:	bl	25ac <__assert_fail@plt+0x30>
    2688:	ldr	r3, [pc, #28]	; 26ac <__assert_fail@plt+0x130>
    268c:	mov	r2, #1
    2690:	add	r3, pc, r3
    2694:	strb	r2, [r3]
    2698:	pop	{r4, pc}
    269c:	andeq	r5, r2, r8, asr fp
    26a0:	andeq	r5, r2, r4, lsr #19
    26a4:	andeq	r0, r0, r4, lsl #3
    26a8:	andeq	r5, r2, r4, lsr #22
    26ac:	andeq	r5, r2, r8, lsl fp
    26b0:	ldr	r0, [pc, #56]	; 26f0 <__assert_fail@plt+0x174>
    26b4:	ldr	r3, [pc, #56]	; 26f4 <__assert_fail@plt+0x178>
    26b8:	add	r0, pc, r0
    26bc:	ldr	r2, [r0]
    26c0:	add	r3, pc, r3
    26c4:	cmp	r2, #0
    26c8:	bne	26d0 <__assert_fail@plt+0x154>
    26cc:	b	25f8 <__assert_fail@plt+0x7c>
    26d0:	ldr	r2, [pc, #32]	; 26f8 <__assert_fail@plt+0x17c>
    26d4:	ldr	r3, [r3, r2]
    26d8:	cmp	r3, #0
    26dc:	beq	26cc <__assert_fail@plt+0x150>
    26e0:	push	{r4, lr}
    26e4:	blx	r3
    26e8:	pop	{r4, lr}
    26ec:	b	25f8 <__assert_fail@plt+0x7c>
    26f0:	andeq	r5, r2, r4, asr r7
    26f4:	andeq	r5, r2, r8, lsr r9
    26f8:	muleq	r0, ip, r1
    26fc:	andeq	r0, r0, r0
    2700:	lsr	r2, r1, #24
    2704:	ldr	r3, [pc, #116]	; 2780 <__assert_fail@plt+0x204>
    2708:	lsl	r2, r2, #3
    270c:	add	r3, pc, r3
    2710:	push	{r4, r5, r6, r7, lr}
    2714:	mov	lr, r1
    2718:	ldrd	r6, [r3, r2]
    271c:	add	r3, r3, #2048	; 0x800
    2720:	ldr	ip, [pc, #92]	; 2784 <__assert_fail@plt+0x208>
    2724:	eor	r6, r6, r0
    2728:	and	r0, r1, #255	; 0xff
    272c:	add	ip, pc, ip
    2730:	lsl	r0, r0, #3
    2734:	sub	r4, ip, #4080	; 0xff0
    2738:	ldrd	r2, [r3, r0]
    273c:	lsr	r0, lr, #8
    2740:	and	r0, r0, #255	; 0xff
    2744:	eor	r2, r2, r6
    2748:	add	r0, r4, r0, lsl #3
    274c:	sub	ip, ip, #2032	; 0x7f0
    2750:	ldrd	r0, [r0, #-8]
    2754:	eor	r3, r3, r7
    2758:	mov	r5, #0
    275c:	eor	r2, r2, r0
    2760:	lsr	r0, lr, #16
    2764:	and	r0, r0, #255	; 0xff
    2768:	eor	r3, r3, r1
    276c:	add	ip, ip, r0, lsl #3
    2770:	ldrd	r0, [ip, #-8]
    2774:	eor	r0, r0, r2
    2778:	eor	r1, r1, r3
    277c:	pop	{r4, r5, r6, r7, pc}
    2780:	andeq	ip, r0, ip, lsl #23
    2784:	andeq	lr, r0, r4, ror #22
    2788:	mov	r3, #0
    278c:	mov	r2, r3
    2790:	cmp	r2, r1
    2794:	blt	27a0 <__assert_fail@plt+0x224>
    2798:	mov	r0, r3
    279c:	bx	lr
    27a0:	ldrb	ip, [r0, r2]
    27a4:	orr	r3, r3, ip, lsl r2
    27a8:	add	r2, r2, #1
    27ac:	uxtb	r3, r3
    27b0:	b	2790 <__assert_fail@plt+0x214>
    27b4:	mov	r3, #0
    27b8:	mov	r2, r3
    27bc:	cmp	r2, r1
    27c0:	blt	27cc <__assert_fail@plt+0x250>
    27c4:	mov	r0, r3
    27c8:	bx	lr
    27cc:	ldrb	ip, [r0, r2]
    27d0:	orr	r3, r3, ip, lsl r2
    27d4:	add	r2, r2, #1
    27d8:	uxth	r3, r3
    27dc:	b	27bc <__assert_fail@plt+0x240>
    27e0:	lsl	r3, r0, #7
    27e4:	asr	r2, r0, #5
    27e8:	orr	r3, r3, r0, lsr #7
    27ec:	and	r2, r2, #2
    27f0:	orr	r3, r3, r2
    27f4:	asr	r2, r0, #3
    27f8:	and	r2, r2, #4
    27fc:	orr	r3, r3, r2
    2800:	asr	r2, r0, #1
    2804:	and	r2, r2, #8
    2808:	orr	r3, r3, r2
    280c:	lsl	r2, r0, #1
    2810:	and	r2, r2, #16
    2814:	orr	r3, r3, r2
    2818:	lsl	r2, r0, #3
    281c:	and	r2, r2, #32
    2820:	lsl	r0, r0, #5
    2824:	orr	r3, r3, r2
    2828:	and	r0, r0, #64	; 0x40
    282c:	orr	r0, r3, r0
    2830:	uxtb	r0, r0
    2834:	bx	lr
    2838:	push	{r4, r5, r6, lr}
    283c:	mov	r5, r1
    2840:	mov	r4, #0
    2844:	sub	r3, r5, r1
    2848:	cmp	r2, r3
    284c:	add	r0, r0, #3
    2850:	bgt	2870 <__assert_fail@plt+0x2f4>
    2854:	cmp	r2, #0
    2858:	add	r3, r2, #3
    285c:	movlt	r2, r3
    2860:	cmp	r4, r2, asr #2
    2864:	movlt	r0, #1
    2868:	movge	r0, #0
    286c:	pop	{r4, r5, r6, pc}
    2870:	ldrb	lr, [r0, #-1]
    2874:	ldrb	ip, [r0, #-3]
    2878:	ldrb	r3, [r0, #-2]
    287c:	orr	r6, ip, lr
    2880:	and	r3, r3, r6
    2884:	and	ip, ip, lr
    2888:	orr	r3, r3, ip
    288c:	strb	r3, [r5], #1
    2890:	ldrb	ip, [r0, #-3]
    2894:	ldrb	lr, [r0, #-2]
    2898:	ldrb	r6, [r0, #-1]
    289c:	eor	r3, ip, lr
    28a0:	eor	lr, lr, r6
    28a4:	orr	r3, r3, lr
    28a8:	eor	ip, ip, r6
    28ac:	orr	r3, r3, ip
    28b0:	add	r4, r4, r3
    28b4:	b	2844 <__assert_fail@plt+0x2c8>
    28b8:	mov	r2, #9
    28bc:	tst	r1, #128	; 0x80
    28c0:	eorne	r1, r1, #101	; 0x65
    28c4:	asr	r3, r0, r2
    28c8:	eor	r3, r3, r1, lsr #7
    28cc:	and	r3, r3, #1
    28d0:	orr	r1, r3, r1, lsl #1
    28d4:	subs	r2, r2, #1
    28d8:	uxtb	r1, r1
    28dc:	bcs	28bc <__assert_fail@plt+0x340>
    28e0:	mov	r0, r1
    28e4:	b	27e0 <__assert_fail@plt+0x264>
    28e8:	ldr	r1, [r0, #64]	; 0x40
    28ec:	push	{r4, r5, r6, lr}
    28f0:	sub	r1, r1, #2
    28f4:	mov	r5, r0
    28f8:	add	r6, r0, #68	; 0x44
    28fc:	ldrb	r0, [r0, #9]
    2900:	lsl	r1, r1, #3
    2904:	bl	27e0 <__assert_fail@plt+0x264>
    2908:	mov	r3, #0
    290c:	lsl	r0, r0, #8
    2910:	uxth	r4, r0
    2914:	cmp	r1, r3
    2918:	bgt	293c <__assert_fail@plt+0x3c0>
    291c:	add	r0, r1, #68	; 0x44
    2920:	add	r0, r5, r0
    2924:	mov	r1, #16
    2928:	bl	27b4 <__assert_fail@plt+0x238>
    292c:	sub	r0, r0, r4
    2930:	clz	r0, r0
    2934:	lsr	r0, r0, #5
    2938:	pop	{r4, r5, r6, pc}
    293c:	ldrb	r0, [r6, r3]
    2940:	add	r3, r3, #1
    2944:	eor	r0, r0, r4
    2948:	lsr	r4, r4, #1
    294c:	orr	r4, r4, r0, lsl #15
    2950:	uxth	r3, r3
    2954:	sxth	r4, r4
    2958:	lsr	r0, r4, #5
    295c:	and	r0, r0, #1024	; 0x400
    2960:	eor	r4, r4, r0
    2964:	lsr	r0, r4, #12
    2968:	and	r0, r0, #8
    296c:	eor	r4, r4, r0
    2970:	uxth	r4, r4
    2974:	b	2914 <__assert_fail@plt+0x398>
    2978:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    297c:	mov	r7, r1
    2980:	mov	r5, r0
    2984:	mov	r1, #10
    2988:	mov	r0, r7
    298c:	bl	f080 <lell_pcapng_close@@Base+0x450>
    2990:	ldr	r8, [pc, #484]	; 2b7c <__assert_fail@plt+0x600>
    2994:	mov	sl, #10
    2998:	add	r8, pc, r8
    299c:	mov	r9, #5
    29a0:	mov	fp, #0
    29a4:	add	r8, r8, #8
    29a8:	uxtb	r1, r1
    29ac:	cmp	r1, #0
    29b0:	rsbne	r1, r1, #10
    29b4:	addne	r7, r7, r1
    29b8:	mov	r0, r7
    29bc:	bl	233c <malloc@plt>
    29c0:	mov	r6, r0
    29c4:	mov	r4, r0
    29c8:	sub	r3, r4, r6
    29cc:	cmp	r7, r3
    29d0:	ble	2b70 <__assert_fail@plt+0x5f4>
    29d4:	mov	r3, #0
    29d8:	ldrb	r2, [r5, r3]
    29dc:	strb	r2, [r4, r3]
    29e0:	add	r3, r3, #1
    29e4:	cmp	r3, #10
    29e8:	bne	29d8 <__assert_fail@plt+0x45c>
    29ec:	mov	r1, sl
    29f0:	mov	r0, r5
    29f4:	bl	27b4 <__assert_fail@plt+0x238>
    29f8:	mov	r1, r9
    29fc:	str	r0, [sp, #4]
    2a00:	add	r0, r5, #10
    2a04:	bl	2788 <__assert_fail@plt+0x20c>
    2a08:	ldr	r2, [sp, #4]
    2a0c:	mov	r3, fp
    2a10:	mov	r1, #0
    2a14:	asr	ip, r2, r1
    2a18:	tst	ip, #1
    2a1c:	lslne	ip, r1, #1
    2a20:	add	r1, r1, #1
    2a24:	ldrhne	ip, [ip, r8]
    2a28:	eorne	r3, r3, ip
    2a2c:	cmp	r1, #10
    2a30:	bne	2a14 <__assert_fail@plt+0x498>
    2a34:	eor	r3, r0, r3, lsr #10
    2a38:	uxtb	r3, r3
    2a3c:	sub	r2, r3, #1
    2a40:	tst	r2, r3
    2a44:	beq	2ac8 <__assert_fail@plt+0x54c>
    2a48:	sub	r3, r3, #7
    2a4c:	cmp	r3, #24
    2a50:	addls	pc, pc, r3, lsl #2
    2a54:	b	2b64 <__assert_fail@plt+0x5e8>
    2a58:	b	2ae4 <__assert_fail@plt+0x568>
    2a5c:	b	2b64 <__assert_fail@plt+0x5e8>
    2a60:	b	2b64 <__assert_fail@plt+0x5e8>
    2a64:	b	2b64 <__assert_fail@plt+0x5e8>
    2a68:	b	2abc <__assert_fail@plt+0x540>
    2a6c:	b	2b64 <__assert_fail@plt+0x5e8>
    2a70:	b	2b24 <__assert_fail@plt+0x5a8>
    2a74:	b	2af4 <__assert_fail@plt+0x578>
    2a78:	b	2b64 <__assert_fail@plt+0x5e8>
    2a7c:	b	2b64 <__assert_fail@plt+0x5e8>
    2a80:	b	2b64 <__assert_fail@plt+0x5e8>
    2a84:	b	2b64 <__assert_fail@plt+0x5e8>
    2a88:	b	2b14 <__assert_fail@plt+0x598>
    2a8c:	b	2b64 <__assert_fail@plt+0x5e8>
    2a90:	b	2b54 <__assert_fail@plt+0x5d8>
    2a94:	b	2ad4 <__assert_fail@plt+0x558>
    2a98:	b	2b64 <__assert_fail@plt+0x5e8>
    2a9c:	b	2b64 <__assert_fail@plt+0x5e8>
    2aa0:	b	2b64 <__assert_fail@plt+0x5e8>
    2aa4:	b	2b34 <__assert_fail@plt+0x5b8>
    2aa8:	b	2b64 <__assert_fail@plt+0x5e8>
    2aac:	b	2b04 <__assert_fail@plt+0x588>
    2ab0:	b	2b64 <__assert_fail@plt+0x5e8>
    2ab4:	b	2b64 <__assert_fail@plt+0x5e8>
    2ab8:	b	2b44 <__assert_fail@plt+0x5c8>
    2abc:	ldrb	r3, [r4]
    2ac0:	eor	r3, r3, #1
    2ac4:	strb	r3, [r4]
    2ac8:	add	r4, r4, #10
    2acc:	add	r5, r5, #15
    2ad0:	b	29c8 <__assert_fail@plt+0x44c>
    2ad4:	ldrb	r3, [r4, #1]
    2ad8:	eor	r3, r3, #1
    2adc:	strb	r3, [r4, #1]
    2ae0:	b	2ac8 <__assert_fail@plt+0x54c>
    2ae4:	ldrb	r3, [r4, #2]
    2ae8:	eor	r3, r3, #1
    2aec:	strb	r3, [r4, #2]
    2af0:	b	2ac8 <__assert_fail@plt+0x54c>
    2af4:	ldrb	r3, [r4, #3]
    2af8:	eor	r3, r3, #1
    2afc:	strb	r3, [r4, #3]
    2b00:	b	2ac8 <__assert_fail@plt+0x54c>
    2b04:	ldrb	r3, [r4, #4]
    2b08:	eor	r3, r3, #1
    2b0c:	strb	r3, [r4, #4]
    2b10:	b	2ac8 <__assert_fail@plt+0x54c>
    2b14:	ldrb	r3, [r4, #5]
    2b18:	eor	r3, r3, #1
    2b1c:	strb	r3, [r4, #5]
    2b20:	b	2ac8 <__assert_fail@plt+0x54c>
    2b24:	ldrb	r3, [r4, #6]
    2b28:	eor	r3, r3, #1
    2b2c:	strb	r3, [r4, #6]
    2b30:	b	2ac8 <__assert_fail@plt+0x54c>
    2b34:	ldrb	r3, [r4, #7]
    2b38:	eor	r3, r3, #1
    2b3c:	strb	r3, [r4, #7]
    2b40:	b	2ac8 <__assert_fail@plt+0x54c>
    2b44:	ldrb	r3, [r4, #8]
    2b48:	eor	r3, r3, #1
    2b4c:	strb	r3, [r4, #8]
    2b50:	b	2ac8 <__assert_fail@plt+0x54c>
    2b54:	ldrb	r3, [r4, #9]
    2b58:	eor	r3, r3, #1
    2b5c:	strb	r3, [r4, #9]
    2b60:	b	2ac8 <__assert_fail@plt+0x54c>
    2b64:	mov	r0, r6
    2b68:	bl	21bc <free@plt>
    2b6c:	mov	r6, #0
    2b70:	mov	r0, r6
    2b74:	add	sp, sp, #12
    2b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b7c:	strdeq	lr, [r0], -r8
    2b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2b84:	sub	r9, r3, #1
    2b88:	ldr	r3, [pc, #1048]	; 2fa8 <__assert_fail@plt+0xa2c>
    2b8c:	sub	sp, sp, #44	; 0x2c
    2b90:	add	r3, pc, r3
    2b94:	str	r3, [sp, #12]
    2b98:	ldr	r3, [pc, #1036]	; 2fac <__assert_fail@plt+0xa30>
    2b9c:	strd	r0, [sp, #16]
    2ba0:	add	r3, pc, r3
    2ba4:	str	r2, [sp]
    2ba8:	str	r3, [sp, #28]
    2bac:	ldr	r3, [sp]
    2bb0:	cmp	r3, #57	; 0x39
    2bb4:	ble	2bc0 <__assert_fail@plt+0x644>
    2bb8:	add	sp, sp, #44	; 0x2c
    2bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bc0:	ldr	r2, [sp]
    2bc4:	mov	r0, #1
    2bc8:	mov	r1, #0
    2bcc:	bl	f0a0 <lell_pcapng_close@@Base+0x470>
    2bd0:	ldrd	r6, [sp, #16]
    2bd4:	cmp	r9, #0
    2bd8:	orr	r6, r6, r0
    2bdc:	orr	r7, r7, r1
    2be0:	beq	2c0c <__assert_fail@plt+0x690>
    2be4:	ldr	r2, [sp]
    2be8:	mov	r3, r9
    2bec:	add	r2, r2, #1
    2bf0:	mov	r0, r6
    2bf4:	mov	r1, r7
    2bf8:	bl	2b80 <__assert_fail@plt+0x604>
    2bfc:	ldr	r3, [sp]
    2c00:	add	r3, r3, #1
    2c04:	str	r3, [sp]
    2c08:	b	2bac <__assert_fail@plt+0x630>
    2c0c:	add	r1, pc, #908	; 0x38c
    2c10:	ldrd	r0, [r1]
    2c14:	eor	r0, r0, r6
    2c18:	eor	r1, r1, r7
    2c1c:	bl	2700 <__assert_fail@plt+0x184>
    2c20:	mov	sl, r0
    2c24:	mov	r0, #48	; 0x30
    2c28:	mov	fp, r1
    2c2c:	bl	233c <malloc@plt>
    2c30:	mov	r3, #8
    2c34:	mov	r4, r0
    2c38:	strd	r6, [r0, #8]
    2c3c:	strd	sl, [r0]
    2c40:	str	r9, [r0, #24]
    2c44:	str	r0, [r4, #36]	; 0x24
    2c48:	str	r3, [r0, #40]	; 0x28
    2c4c:	ldr	r3, [sp, #12]
    2c50:	add	r6, r0, #16
    2c54:	ldr	r3, [r3]
    2c58:	cmp	r3, #0
    2c5c:	bne	2eec <__assert_fail@plt+0x970>
    2c60:	ldr	r3, [sp, #12]
    2c64:	str	r9, [r0, #20]
    2c68:	str	r0, [r3]
    2c6c:	mov	r0, #44	; 0x2c
    2c70:	bl	233c <malloc@plt>
    2c74:	cmp	r0, #0
    2c78:	mov	r5, r0
    2c7c:	str	r0, [r4, #16]
    2c80:	bne	2c8c <__assert_fail@plt+0x710>
    2c84:	mvn	r0, #0
    2c88:	bl	2390 <exit@plt>
    2c8c:	mov	r2, #44	; 0x2c
    2c90:	mov	r1, r9
    2c94:	bl	2444 <memset@plt>
    2c98:	mov	r2, #32
    2c9c:	mov	r3, #5
    2ca0:	str	r6, [r5, #16]
    2ca4:	stmib	r5, {r2, r3}
    2ca8:	mov	r3, #16
    2cac:	str	r3, [r5, #20]
    2cb0:	mov	r0, #384	; 0x180
    2cb4:	bl	233c <malloc@plt>
    2cb8:	cmp	r0, #0
    2cbc:	str	r0, [r5]
    2cc0:	beq	2c84 <__assert_fail@plt+0x708>
    2cc4:	mov	r2, #384	; 0x180
    2cc8:	mov	r1, r9
    2ccc:	bl	2444 <memset@plt>
    2cd0:	ldr	r3, [pc, #728]	; 2fb0 <__assert_fail@plt+0xa34>
    2cd4:	str	r3, [r5, #40]	; 0x28
    2cd8:	ldr	r3, [sp, #28]
    2cdc:	ldr	r2, [pc, #720]	; 2fb4 <__assert_fail@plt+0xa38>
    2ce0:	mov	lr, #0
    2ce4:	ldr	r0, [r3]
    2ce8:	ldr	r5, [r0, #16]
    2cec:	ldr	r3, [r5, #12]
    2cf0:	add	r3, r3, #1
    2cf4:	str	r3, [r5, #12]
    2cf8:	ldrb	r3, [r4, #7]
    2cfc:	ldrb	r1, [r4, #4]
    2d00:	ldrb	ip, [r4]
    2d04:	str	r5, [r4, #16]
    2d08:	add	r2, r1, r2
    2d0c:	add	r2, r2, r3, lsl #24
    2d10:	ldrb	r3, [r4, #6]
    2d14:	ldrb	r1, [r4, #3]
    2d18:	add	r2, r2, r3, lsl #16
    2d1c:	ldrb	r3, [r4, #5]
    2d20:	add	r2, r2, r3, lsl #8
    2d24:	ldr	r3, [pc, #652]	; 2fb8 <__assert_fail@plt+0xa3c>
    2d28:	add	r3, ip, r3
    2d2c:	add	r3, r3, r1, lsl #24
    2d30:	ldrb	r1, [r4, #2]
    2d34:	add	r3, r3, r1, lsl #16
    2d38:	ldrb	r1, [r4, #1]
    2d3c:	add	r3, r3, r1, lsl #8
    2d40:	ldr	r1, [pc, #628]	; 2fbc <__assert_fail@plt+0xa40>
    2d44:	sub	r3, r3, r2
    2d48:	eor	r1, r1, r3
    2d4c:	ldr	r3, [pc, #620]	; 2fc0 <__assert_fail@plt+0xa44>
    2d50:	add	r3, r2, r3
    2d54:	ldr	r2, [pc, #616]	; 2fc4 <__assert_fail@plt+0xa48>
    2d58:	sub	r3, r3, r1
    2d5c:	eor	r3, r3, r1, lsl #8
    2d60:	sub	r2, r2, r1
    2d64:	sub	r2, r2, r3
    2d68:	eor	r2, r2, r3, lsr #13
    2d6c:	sub	r1, r1, r3
    2d70:	sub	r1, r1, r2
    2d74:	eor	r1, r1, r2, lsr #12
    2d78:	sub	r3, r3, r2
    2d7c:	sub	r3, r3, r1
    2d80:	eor	r3, r3, r1, lsl #16
    2d84:	sub	r2, r2, r1
    2d88:	sub	r2, r2, r3
    2d8c:	eor	r2, r2, r3, lsr #5
    2d90:	sub	r1, r1, r3
    2d94:	sub	r1, r1, r2
    2d98:	eor	r1, r1, r2, lsr #3
    2d9c:	sub	r3, r3, r2
    2da0:	sub	r3, r3, r1
    2da4:	eor	r3, r3, r1, lsl #10
    2da8:	sub	r2, r2, r1
    2dac:	ldr	r1, [r0, #16]
    2db0:	sub	r2, r2, r3
    2db4:	eor	r2, r2, r3, lsr #15
    2db8:	ldr	r3, [r1, #4]
    2dbc:	str	r2, [r4, #44]	; 0x2c
    2dc0:	sub	r3, r3, #1
    2dc4:	and	r2, r2, r3
    2dc8:	mov	r3, #12
    2dcc:	ldr	r0, [r1]
    2dd0:	mul	r3, r3, r2
    2dd4:	add	r1, r0, r3
    2dd8:	ldr	ip, [r0, r3]
    2ddc:	ldr	r2, [r1, #4]
    2de0:	cmp	ip, lr
    2de4:	add	r2, r2, #1
    2de8:	str	r2, [r1, #4]
    2dec:	str	ip, [r4, #32]
    2df0:	str	lr, [r4, #28]
    2df4:	strne	r6, [ip, #12]
    2df8:	str	r6, [r0, r3]
    2dfc:	ldr	r3, [r1, #8]
    2e00:	add	r1, r3, #1
    2e04:	mov	r3, #10
    2e08:	mul	r3, r3, r1
    2e0c:	cmp	r2, r3
    2e10:	bcc	2bfc <__assert_fail@plt+0x680>
    2e14:	ldr	r3, [r5, #36]	; 0x24
    2e18:	cmp	r3, #1
    2e1c:	beq	2bfc <__assert_fail@plt+0x680>
    2e20:	ldr	r2, [r5, #4]
    2e24:	mov	r6, #24
    2e28:	mul	r6, r6, r2
    2e2c:	mov	r0, r6
    2e30:	bl	233c <malloc@plt>
    2e34:	subs	fp, r0, #0
    2e38:	beq	2c84 <__assert_fail@plt+0x708>
    2e3c:	mov	r2, r6
    2e40:	mov	r1, #0
    2e44:	bl	2444 <memset@plt>
    2e48:	ldr	r3, [r5, #4]
    2e4c:	ldr	r2, [r5, #12]
    2e50:	str	r3, [sp, #4]
    2e54:	lsl	r3, r3, #1
    2e58:	sub	r3, r3, #1
    2e5c:	str	r3, [sp, #8]
    2e60:	ldr	r1, [sp, #8]
    2e64:	ldr	r3, [r5, #8]
    2e68:	tst	r2, r1
    2e6c:	add	r3, r3, #1
    2e70:	movne	sl, #1
    2e74:	moveq	sl, #0
    2e78:	add	sl, sl, r2, lsr r3
    2e7c:	mov	r2, #12
    2e80:	mov	r6, #0
    2e84:	str	sl, [r5, #24]
    2e88:	str	r6, [r5, #28]
    2e8c:	ldr	r3, [sp, #4]
    2e90:	cmp	r3, r6
    2e94:	bne	2f0c <__assert_fail@plt+0x990>
    2e98:	ldr	r0, [r5]
    2e9c:	bl	21bc <free@plt>
    2ea0:	ldr	r3, [r4, #16]
    2ea4:	ldr	r2, [r3, #4]
    2ea8:	ldr	r1, [r3, #12]
    2eac:	str	fp, [r3]
    2eb0:	lsl	r2, r2, #1
    2eb4:	str	r2, [r3, #4]
    2eb8:	ldr	r2, [r3, #8]
    2ebc:	add	r2, r2, #1
    2ec0:	str	r2, [r3, #8]
    2ec4:	ldr	r2, [r3, #28]
    2ec8:	cmp	r2, r1, lsr #1
    2ecc:	movls	r2, #0
    2ed0:	ldrhi	r2, [r3, #32]
    2ed4:	addhi	r2, r2, #1
    2ed8:	cmp	r2, #1
    2edc:	str	r2, [r3, #32]
    2ee0:	movhi	r2, #1
    2ee4:	strhi	r2, [r3, #36]	; 0x24
    2ee8:	b	2bfc <__assert_fail@plt+0x680>
    2eec:	ldr	r2, [r3, #16]
    2ef0:	ldr	r3, [r2, #16]
    2ef4:	ldr	r1, [r2, #20]
    2ef8:	str	r0, [r3, #8]
    2efc:	sub	r3, r3, r1
    2f00:	str	r3, [r0, #20]
    2f04:	str	r6, [r2, #16]
    2f08:	b	2cd8 <__assert_fail@plt+0x75c>
    2f0c:	mul	r3, r2, r6
    2f10:	ldr	r1, [r5]
    2f14:	ldr	r7, [r1, r3]
    2f18:	cmp	r7, #0
    2f1c:	addeq	r6, r6, #1
    2f20:	beq	2e8c <__assert_fail@plt+0x910>
    2f24:	ldr	r3, [r7, #16]
    2f28:	ldr	r8, [r7, #28]
    2f2c:	str	r3, [sp, #24]
    2f30:	ldr	r3, [sp, #8]
    2f34:	and	r8, r8, r3
    2f38:	mul	r8, r2, r8
    2f3c:	add	r3, fp, r8
    2f40:	str	r3, [sp, #36]	; 0x24
    2f44:	ldr	r0, [r3, #4]
    2f48:	add	r0, r0, #1
    2f4c:	cmp	sl, r0
    2f50:	str	r0, [r3, #4]
    2f54:	bcs	2f7c <__assert_fail@plt+0xa00>
    2f58:	ldr	r1, [r5, #28]
    2f5c:	str	r2, [sp, #32]
    2f60:	add	r1, r1, #1
    2f64:	str	r1, [r5, #28]
    2f68:	mov	r1, sl
    2f6c:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    2f70:	ldr	r3, [sp, #36]	; 0x24
    2f74:	ldr	r2, [sp, #32]
    2f78:	str	r0, [r3, #8]
    2f7c:	mov	r3, #0
    2f80:	str	r3, [r7, #12]
    2f84:	ldr	r3, [fp, r8]
    2f88:	cmp	r3, #0
    2f8c:	str	r3, [r7, #16]
    2f90:	strne	r7, [r3, #12]
    2f94:	str	r7, [fp, r8]
    2f98:	ldr	r7, [sp, #24]
    2f9c:	b	2f18 <__assert_fail@plt+0x99c>
    2fa0:			; <UNDEFINED> instruction: 0xff614e1b
    2fa4:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    2fa8:	andeq	r5, r2, ip, lsl r6
    2fac:	andeq	r5, r2, ip, lsl #12
    2fb0:	andsge	r1, r1, r1, ror #31
    2fb4:			; <UNDEFINED> instruction: 0x9e3779b9
    2fb8:	svcls	0x0049bac2
    2fbc:	andeq	pc, r7, sp, ror #14
    2fc0:	tsteq	r2, r9, lsl #2
    2fc4:	mcr2	14, 7, fp, cr13, cr7, {7}

00002fc8 <btbb_gen_syncword@@Base>:
    2fc8:	ldr	r2, [pc, #72]	; 3018 <btbb_gen_syncword@@Base+0x50>
    2fcc:	mov	ip, r0
    2fd0:	add	r2, pc, r2
    2fd4:	add	r1, pc, #52	; 0x34
    2fd8:	ldrd	r0, [r1]
    2fdc:	push	{r4, r5, lr}
    2fe0:	mov	r3, #0
    2fe4:	mov	lr, #8388608	; 0x800000
    2fe8:	add	r2, r2, #32
    2fec:	ands	r4, ip, lr, asr r3
    2ff0:	lslne	r4, r3, #3
    2ff4:	ldrdne	r4, [r4, r2]
    2ff8:	eorne	r0, r0, r4
    2ffc:	eorne	r1, r1, r5
    3000:	add	r3, r3, #1
    3004:	cmp	r3, #24
    3008:	bne	2fec <btbb_gen_syncword@@Base+0x24>
    300c:	pop	{r4, r5, pc}
    3010:			; <UNDEFINED> instruction: 0xc7820e7e
    3014:	andlt	r0, r0, r2
    3018:	andeq	lr, r0, r0, asr #5

0000301c <btbb_get_release@@Base>:
    301c:	ldr	r0, [pc, #4]	; 3028 <btbb_get_release@@Base+0xc>
    3020:	add	r0, pc, r0
    3024:	bx	lr
    3028:			; <UNDEFINED> instruction: 0x0000e8ba

0000302c <btbb_get_version@@Base>:
    302c:	ldr	r0, [pc, #4]	; 3038 <btbb_get_version@@Base+0xc>
    3030:	add	r0, pc, r0
    3034:	bx	lr
    3038:			; <UNDEFINED> instruction: 0x0000e8b5

0000303c <btbb_init@@Base>:
    303c:	ldr	r3, [pc, #156]	; 30e0 <btbb_init@@Base+0xa4>
    3040:	cmp	r0, #5
    3044:	add	r3, pc, r3
    3048:	push	{r4, r5, r6, r7, r8, lr}
    304c:	bls	307c <btbb_init@@Base+0x40>
    3050:	ldr	r2, [pc, #140]	; 30e4 <btbb_init@@Base+0xa8>
    3054:	ldr	r1, [pc, #140]	; 30e8 <btbb_init@@Base+0xac>
    3058:	ldr	r3, [r3, r2]
    305c:	ldr	r2, [pc, #136]	; 30ec <btbb_init@@Base+0xb0>
    3060:	add	r1, pc, r1
    3064:	add	r2, pc, r2
    3068:	add	r2, r2, #224	; 0xe0
    306c:	ldr	r0, [r3]
    3070:	bl	23f0 <fprintf@plt>
    3074:	mvn	r0, #0
    3078:	pop	{r4, r5, r6, r7, r8, pc}
    307c:	ldr	r3, [pc, #108]	; 30f0 <btbb_init@@Base+0xb4>
    3080:	cmp	r0, #0
    3084:	add	r3, pc, r3
    3088:	mov	r5, r0
    308c:	ldr	r3, [r3]
    3090:	clz	r3, r3
    3094:	lsr	r3, r3, #5
    3098:	moveq	r3, #0
    309c:	cmp	r3, #0
    30a0:	bne	30ac <btbb_init@@Base+0x70>
    30a4:	mov	r0, #0
    30a8:	pop	{r4, r5, r6, r7, r8, pc}
    30ac:	mov	r4, #1
    30b0:	mov	r8, #0
    30b4:	mov	r6, #0
    30b8:	mov	r7, #0
    30bc:	mov	r3, r4
    30c0:	mov	r2, r8
    30c4:	mov	r0, r6
    30c8:	mov	r1, r7
    30cc:	add	r4, r4, #1
    30d0:	bl	2b80 <__assert_fail@plt+0x604>
    30d4:	cmp	r5, r4
    30d8:	bge	30bc <btbb_init@@Base+0x80>
    30dc:	b	30a4 <btbb_init@@Base+0x68>
    30e0:			; <UNDEFINED> instruction: 0x00024fb4
    30e4:	andeq	r0, r0, ip, lsl #3
    30e8:	andeq	lr, r0, r9, lsl #17
    30ec:	andeq	lr, r0, ip, lsr #4
    30f0:	andeq	r5, r2, r8, lsr #2

000030f4 <btbb_packet_new@@Base>:
    30f4:	push	{r4, r5, r6, lr}
    30f8:	mov	r1, #5952	; 0x1740
    30fc:	mov	r0, #1
    3100:	bl	2120 <calloc@plt>
    3104:	ldr	r5, [pc, #48]	; 313c <btbb_packet_new@@Base+0x48>
    3108:	add	r5, pc, r5
    310c:	subs	r4, r0, #0
    3110:	movne	r3, #1
    3114:	strne	r3, [r4]
    3118:	bne	3134 <btbb_packet_new@@Base+0x40>
    311c:	ldr	r3, [pc, #28]	; 3140 <btbb_packet_new@@Base+0x4c>
    3120:	ldr	r0, [pc, #28]	; 3144 <btbb_packet_new@@Base+0x50>
    3124:	ldr	r3, [r5, r3]
    3128:	add	r0, pc, r0
    312c:	ldr	r1, [r3]
    3130:	bl	2558 <fputs@plt>
    3134:	mov	r0, r4
    3138:	pop	{r4, r5, r6, pc}
    313c:	strdeq	r4, [r2], -r0
    3140:	andeq	r0, r0, ip, lsl #3
    3144:	andeq	lr, r0, r1, ror #15

00003148 <btbb_packet_ref@@Base>:
    3148:	ldr	r3, [r0]
    314c:	add	r3, r3, #1
    3150:	str	r3, [r0]
    3154:	bx	lr

00003158 <btbb_packet_unref@@Base>:
    3158:	ldr	r3, [r0]
    315c:	subs	r3, r3, #1
    3160:	beq	316c <btbb_packet_unref@@Base+0x14>
    3164:	str	r3, [r0]
    3168:	bx	lr
    316c:	b	21bc <free@plt>

00003170 <btbb_packet_get_lap@@Base>:
    3170:	ldr	r0, [r0, #12]
    3174:	bx	lr

00003178 <btbb_packet_get_uap@@Base>:
    3178:	ldrb	r0, [r0, #9]
    317c:	bx	lr

00003180 <btbb_packet_get_nap@@Base>:
    3180:	ldrh	r0, [r0, #10]
    3184:	bx	lr

00003188 <btbb_packet_get_clkn@@Base>:
    3188:	ldr	r0, [r0, #2816]	; 0xb00
    318c:	bx	lr

00003190 <btbb_packet_get_channel@@Base>:
    3190:	ldrb	r0, [r0, #8]
    3194:	bx	lr

00003198 <btbb_packet_set_modulation@@Base>:
    3198:	strb	r1, [r0, #16]
    319c:	bx	lr

000031a0 <btbb_packet_get_modulation@@Base>:
    31a0:	ldrb	r0, [r0, #16]
    31a4:	bx	lr

000031a8 <btbb_packet_set_transport@@Base>:
    31a8:	strb	r1, [r0, #17]
    31ac:	bx	lr

000031b0 <btbb_packet_get_transport@@Base>:
    31b0:	ldrb	r0, [r0, #17]
    31b4:	bx	lr

000031b8 <btbb_packet_get_ac_errors@@Base>:
    31b8:	ldrb	r0, [r0, #2820]	; 0xb04
    31bc:	bx	lr

000031c0 <promiscuous_packet_search@@Base>:
    31c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    31c4:	sub	sp, sp, #44	; 0x2c
    31c8:	mov	r5, r0
    31cc:	str	r1, [sp, #8]
    31d0:	add	r0, r0, #57	; 0x39
    31d4:	mov	r1, #6
    31d8:	str	r3, [sp, #16]
    31dc:	str	r2, [sp, #12]
    31e0:	bl	2788 <__assert_fail@plt+0x20c>
    31e4:	ldr	r3, [pc, #676]	; 3490 <promiscuous_packet_search@@Base+0x2d0>
    31e8:	ldr	sl, [sp, #80]	; 0x50
    31ec:	add	r5, r5, #62	; 0x3e
    31f0:	ldr	fp, [pc, r3]
    31f4:	ldr	r3, [pc, #664]	; 3494 <promiscuous_packet_search@@Base+0x2d4>
    31f8:	mov	r8, #0
    31fc:	add	r3, pc, r3
    3200:	str	r3, [sp, #20]
    3204:	ldr	r3, [pc, #652]	; 3498 <promiscuous_packet_search@@Base+0x2d8>
    3208:	add	r3, pc, r3
    320c:	add	r3, r3, #368	; 0x170
    3210:	str	r3, [sp, #24]
    3214:	add	r3, sp, #32
    3218:	str	r3, [sp, #28]
    321c:	lsl	r0, r0, #1
    3220:	uxtb	r4, r0
    3224:	ldr	r3, [sp, #8]
    3228:	cmp	r8, r3
    322c:	mvnge	r8, #0
    3230:	bge	3478 <promiscuous_packet_search@@Base+0x2b8>
    3234:	sub	r3, r5, #62	; 0x3e
    3238:	ldrb	r0, [r5, #1]!
    323c:	lsr	r4, r4, #1
    3240:	ldr	r2, [sp, #20]
    3244:	orr	r4, r4, r0, lsl #6
    3248:	uxtb	r4, r4
    324c:	add	r2, r2, r4
    3250:	ldrb	r2, [r2, #234]	; 0xea
    3254:	cmp	r2, #1
    3258:	bhi	3430 <promiscuous_packet_search@@Base+0x270>
    325c:	mov	r6, #0
    3260:	mov	r7, #0
    3264:	mov	r9, #0
    3268:	ldrb	r0, [r3, r9]
    326c:	mov	r2, r9
    3270:	mov	r1, #0
    3274:	str	r3, [sp]
    3278:	bl	f0a0 <lell_pcapng_close@@Base+0x470>
    327c:	add	r9, r9, #1
    3280:	cmp	r9, #64	; 0x40
    3284:	ldr	r3, [sp]
    3288:	orr	r6, r6, r0
    328c:	orr	r7, r7, r1
    3290:	bne	3268 <promiscuous_packet_search@@Base+0xa8>
    3294:	lsr	r3, r7, #25
    3298:	ldr	r2, [sp, #24]
    329c:	lsl	r3, r3, #3
    32a0:	add	r2, r2, r3
    32a4:	bic	r7, r7, #-33554432	; 0xfe000000
    32a8:	ldrd	r2, [r2]
    32ac:	orr	r0, r6, r2
    32b0:	orr	r1, r7, r3
    32b4:	strd	r0, [sp]
    32b8:	ldrd	r2, [sp]
    32bc:	add	r1, pc, #452	; 0x1c4
    32c0:	ldrd	r0, [r1]
    32c4:	eor	r1, r1, r3
    32c8:	eor	r0, r0, r2
    32cc:	bl	2700 <__assert_fail@plt+0x184>
    32d0:	mov	r3, #0
    32d4:	strb	r3, [sl]
    32d8:	orrs	r3, r0, r1
    32dc:	beq	3454 <promiscuous_packet_search@@Base+0x294>
    32e0:	cmp	fp, #0
    32e4:	strd	r0, [sp, #32]
    32e8:	beq	33e8 <promiscuous_packet_search@@Base+0x228>
    32ec:	ldrb	r0, [sp, #36]	; 0x24
    32f0:	ldrb	r3, [sp, #39]	; 0x27
    32f4:	ldrb	r2, [sp, #35]	; 0x23
    32f8:	add	r0, r0, #-1644167168	; 0x9e000000
    32fc:	add	r0, r0, #3620864	; 0x374000
    3300:	add	r0, r0, #14720	; 0x3980
    3304:	add	r0, r0, #57	; 0x39
    3308:	add	r0, r0, r3, lsl #24
    330c:	ldrb	r3, [sp, #38]	; 0x26
    3310:	ldrb	r1, [sp, #32]
    3314:	ldr	r7, [fp, #16]
    3318:	mov	r9, #8
    331c:	add	r0, r0, r3, lsl #16
    3320:	ldrb	r3, [sp, #37]	; 0x25
    3324:	add	r0, r0, r3, lsl #8
    3328:	ldr	r3, [pc, #364]	; 349c <promiscuous_packet_search@@Base+0x2dc>
    332c:	add	r3, r1, r3
    3330:	add	r3, r3, r2, lsl #24
    3334:	ldrb	r2, [sp, #34]	; 0x22
    3338:	ldr	r1, [pc, #352]	; 34a0 <promiscuous_packet_search@@Base+0x2e0>
    333c:	add	r3, r3, r2, lsl #16
    3340:	ldrb	r2, [sp, #33]	; 0x21
    3344:	add	r3, r3, r2, lsl #8
    3348:	ldr	r2, [pc, #340]	; 34a4 <promiscuous_packet_search@@Base+0x2e4>
    334c:	sub	r3, r3, r0
    3350:	eor	r1, r1, r3
    3354:	add	r2, r0, r2
    3358:	ldr	r3, [pc, #328]	; 34a8 <promiscuous_packet_search@@Base+0x2e8>
    335c:	sub	r2, r2, r1
    3360:	eor	r2, r2, r1, lsl #8
    3364:	sub	r3, r3, r1
    3368:	sub	r3, r3, r2
    336c:	eor	r3, r3, r2, lsr #13
    3370:	sub	r1, r1, r2
    3374:	sub	r1, r1, r3
    3378:	eor	r1, r1, r3, lsr #12
    337c:	sub	r2, r2, r3
    3380:	sub	r2, r2, r1
    3384:	eor	r2, r2, r1, lsl #16
    3388:	sub	r3, r3, r1
    338c:	sub	r3, r3, r2
    3390:	eor	r3, r3, r2, lsr #5
    3394:	sub	r1, r1, r2
    3398:	sub	r1, r1, r3
    339c:	eor	r1, r1, r3, lsr #3
    33a0:	sub	r2, r2, r3
    33a4:	sub	r2, r2, r1
    33a8:	eor	r2, r2, r1, lsl #10
    33ac:	sub	r3, r3, r1
    33b0:	sub	r3, r3, r2
    33b4:	eor	r3, r3, r2, lsr #15
    33b8:	ldr	r2, [r7, #4]
    33bc:	ldr	r1, [r7]
    33c0:	sub	r2, r2, #1
    33c4:	and	r3, r3, r2
    33c8:	mov	r2, #12
    33cc:	mul	r3, r2, r3
    33d0:	ldr	r6, [r1, r3]
    33d4:	cmp	r6, #0
    33d8:	ldrne	r3, [r7, #20]
    33dc:	subne	r6, r6, r3
    33e0:	cmp	r6, #0
    33e4:	bne	33f4 <promiscuous_packet_search@@Base+0x234>
    33e8:	mvn	r3, #0
    33ec:	strb	r3, [sl]
    33f0:	b	3454 <promiscuous_packet_search@@Base+0x294>
    33f4:	ldr	r3, [r6, #40]	; 0x28
    33f8:	cmp	r3, #8
    33fc:	bne	3418 <promiscuous_packet_search@@Base+0x258>
    3400:	mov	r2, r9
    3404:	ldr	r1, [sp, #28]
    3408:	ldr	r0, [r6, #36]	; 0x24
    340c:	bl	2228 <memcmp@plt>
    3410:	cmp	r0, #0
    3414:	beq	3438 <promiscuous_packet_search@@Base+0x278>
    3418:	ldr	r6, [r6, #32]
    341c:	cmp	r6, #0
    3420:	beq	33e8 <promiscuous_packet_search@@Base+0x228>
    3424:	ldr	r3, [r7, #20]
    3428:	sub	r6, r6, r3
    342c:	b	33e0 <promiscuous_packet_search@@Base+0x220>
    3430:	add	r8, r8, #1
    3434:	b	3224 <promiscuous_packet_search@@Base+0x64>
    3438:	ldrd	r0, [r6, #8]
    343c:	ldrd	r2, [sp]
    3440:	eor	r2, r2, r0
    3444:	eor	r3, r3, r1
    3448:	strd	r2, [sp]
    344c:	bl	f108 <lell_pcapng_close@@Base+0x4d8>
    3450:	strb	r0, [sl]
    3454:	ldrb	r3, [sl]
    3458:	ldr	r2, [sp, #16]
    345c:	cmp	r3, r2
    3460:	bgt	3430 <promiscuous_packet_search@@Base+0x270>
    3464:	ldr	r3, [sp, #4]
    3468:	ldr	r2, [sp, #12]
    346c:	lsr	r3, r3, #2
    3470:	bic	r3, r3, #-16777216	; 0xff000000
    3474:	str	r3, [r2]
    3478:	mov	r0, r8
    347c:	add	sp, sp, #44	; 0x2c
    3480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3484:	nop			; (mov r0, r0)
    3488:	bllt	ff318880 <perm_table@@Base+0xff2f06b8>
    348c:	orrhi	r8, r4, #9600	; 0x2580
    3490:			; <UNDEFINED> instruction: 0x00024fbc
    3494:	muleq	r0, r4, r0
    3498:	andeq	lr, r0, r8, lsl #1
    349c:	svcls	0x0049bac2
    34a0:	andeq	pc, r7, sp, ror #14
    34a4:	tsteq	r2, r9, lsl #2
    34a8:	mcr2	14, 7, fp, cr13, cr7, {7}

000034ac <find_known_lap@@Base>:
    34ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    34b0:	mov	r9, r0
    34b4:	mov	r0, r2
    34b8:	mov	r8, r1
    34bc:	mov	sl, r3
    34c0:	bl	22dc <btbb_gen_syncword@plt>
    34c4:	mov	r4, #0
    34c8:	strd	r0, [sp]
    34cc:	cmp	r4, r8
    34d0:	blt	34e4 <find_known_lap@@Base+0x38>
    34d4:	mvn	r4, #0
    34d8:	mov	r0, r4
    34dc:	add	sp, sp, #12
    34e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    34e4:	mov	r6, #0
    34e8:	mov	r7, #0
    34ec:	mov	r5, #0
    34f0:	add	fp, r9, r4
    34f4:	mov	r2, r5
    34f8:	ldrb	r0, [fp, r5]
    34fc:	mov	r1, #0
    3500:	bl	f0a0 <lell_pcapng_close@@Base+0x470>
    3504:	add	r5, r5, #1
    3508:	cmp	r5, #64	; 0x40
    350c:	orr	r6, r6, r0
    3510:	orr	r7, r7, r1
    3514:	bne	34f4 <find_known_lap@@Base+0x48>
    3518:	ldrd	r0, [sp]
    351c:	eor	r0, r0, r6
    3520:	eor	r1, r1, r7
    3524:	bl	f108 <lell_pcapng_close@@Base+0x4d8>
    3528:	ldr	r3, [sp, #48]	; 0x30
    352c:	cmp	r0, sl
    3530:	strb	r0, [r3]
    3534:	ble	34d8 <find_known_lap@@Base+0x2c>
    3538:	add	r4, r4, #1
    353c:	b	34cc <find_known_lap@@Base+0x20>

00003540 <btbb_packet_set_data@@Base>:
    3540:	ldr	ip, [pc, #68]	; 358c <btbb_packet_set_data@@Base+0x4c>
    3544:	push	{r4, r5, lr}
    3548:	cmp	r2, ip
    354c:	add	lr, r0, #2816	; 0xb00
    3550:	movge	r2, ip
    3554:	add	r4, lr, #8
    3558:	mov	ip, r1
    355c:	sub	r5, ip, r1
    3560:	cmp	r2, r5
    3564:	bgt	3580 <btbb_packet_set_data@@Base+0x40>
    3568:	strh	r2, [lr, #6]
    356c:	strb	r3, [r0, #8]
    3570:	ldr	r3, [sp, #12]
    3574:	lsr	r3, r3, #1
    3578:	str	r3, [r0, #2816]	; 0xb00
    357c:	pop	{r4, r5, pc}
    3580:	ldrb	r5, [ip], #1
    3584:	strb	r5, [r4], #1
    3588:	b	355c <btbb_packet_set_data@@Base+0x1c>
    358c:	andeq	r0, r0, r5, lsr ip

00003590 <btbb_packet_set_flag@@Base>:
    3590:	mov	r3, #1
    3594:	cmp	r2, #0
    3598:	lsl	r1, r3, r1
    359c:	ldr	r3, [r0, #4]
    35a0:	biceq	r1, r3, r1
    35a4:	orrne	r1, r1, r3
    35a8:	str	r1, [r0, #4]
    35ac:	bx	lr

000035b0 <btbb_packet_set_uap@@Base>:
    35b0:	strb	r1, [r0, #9]
    35b4:	mov	r2, #1
    35b8:	mov	r1, #2
    35bc:	b	21a4 <btbb_packet_set_flag@plt>

000035c0 <btbb_find_ac@@Base>:
    35c0:	push	{r4, r5, lr}
    35c4:	sub	sp, sp, #28
    35c8:	add	ip, sp, #23
    35cc:	cmn	r2, #1
    35d0:	str	r2, [sp, #12]
    35d4:	ldr	r5, [sp, #40]	; 0x28
    35d8:	str	ip, [sp]
    35dc:	bne	3638 <btbb_find_ac@@Base+0x78>
    35e0:	add	r2, sp, #12
    35e4:	bl	2510 <promiscuous_packet_search@plt>
    35e8:	cmp	r0, #0
    35ec:	mov	r4, r0
    35f0:	blt	362c <btbb_find_ac@@Base+0x6c>
    35f4:	ldr	r3, [r5]
    35f8:	cmp	r3, #0
    35fc:	bne	3608 <btbb_find_ac@@Base+0x48>
    3600:	bl	2354 <btbb_packet_new@plt>
    3604:	str	r0, [r5]
    3608:	ldr	r0, [r5]
    360c:	ldrb	r3, [sp, #23]
    3610:	ldr	r2, [sp, #12]
    3614:	mov	r1, #0
    3618:	str	r2, [r0, #12]
    361c:	strb	r3, [r0, #2820]	; 0xb04
    3620:	str	r1, [r0, #4]
    3624:	mov	r2, #1
    3628:	bl	21a4 <btbb_packet_set_flag@plt>
    362c:	mov	r0, r4
    3630:	add	sp, sp, #28
    3634:	pop	{r4, r5, pc}
    3638:	bl	242c <find_known_lap@plt>
    363c:	b	35e8 <btbb_find_ac@@Base+0x28>

00003640 <btbb_packet_get_flag@@Base>:
    3640:	ldr	r3, [r0, #4]
    3644:	mov	r2, #1
    3648:	ands	r3, r3, r2, lsl r1
    364c:	movne	r0, r2
    3650:	moveq	r0, #0
    3654:	bx	lr
    3658:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    365c:	mov	r7, r3
    3660:	ldr	r3, [pc, #144]	; 36f8 <btbb_packet_get_flag@@Base+0xb8>
    3664:	and	r2, r2, #63	; 0x3f
    3668:	add	r3, pc, r3
    366c:	add	r2, r3, r2
    3670:	mov	r6, r0
    3674:	ldrb	r0, [r2, #1392]	; 0x570
    3678:	ldr	r3, [sp, #40]	; 0x28
    367c:	mov	r5, r1
    3680:	add	r0, r0, r3
    3684:	mov	r1, #127	; 0x7f
    3688:	bl	f080 <lell_pcapng_close@@Base+0x450>
    368c:	ldr	r9, [pc, #104]	; 36fc <btbb_packet_get_flag@@Base+0xbc>
    3690:	sub	r5, r5, #1
    3694:	mov	r4, r6
    3698:	mov	r8, #0
    369c:	add	r9, pc, r9
    36a0:	mov	sl, #127	; 0x7f
    36a4:	mov	fp, r1
    36a8:	sub	r3, r4, r6
    36ac:	cmp	r7, r3
    36b0:	bgt	36b8 <btbb_packet_get_flag@@Base+0x78>
    36b4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    36b8:	mov	r1, r8
    36bc:	ldr	r0, [sp, #44]	; 0x2c
    36c0:	bl	21f8 <btbb_packet_get_flag@plt>
    36c4:	mov	r1, sl
    36c8:	add	r4, r4, #1
    36cc:	cmp	r0, #0
    36d0:	addne	r2, r9, fp
    36d4:	ldrbne	r3, [r4, #-1]
    36d8:	ldrbne	r2, [r2, #1456]	; 0x5b0
    36dc:	ldrbeq	r3, [r4, #-1]
    36e0:	add	r0, fp, #1
    36e4:	eorne	r3, r3, r2
    36e8:	strb	r3, [r5, #1]!
    36ec:	bl	f080 <lell_pcapng_close@@Base+0x450>
    36f0:	mov	fp, r1
    36f4:	b	36a8 <btbb_packet_get_flag@@Base+0x68>
    36f8:	andeq	sp, r0, r8, lsr #24
    36fc:	strdeq	sp, [r0], -r4
    3700:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3704:	mov	r6, r2
    3708:	cmp	r6, #2
    370c:	mov	r5, r1
    3710:	ldr	r2, [sp, #32]
    3714:	ldr	r4, [sp, #36]	; 0x24
    3718:	bne	380c <btbb_packet_get_flag@@Base+0x1cc>
    371c:	cmp	r3, #15
    3720:	bgt	3730 <btbb_packet_get_flag@@Base+0xf0>
    3724:	mov	r0, #0
    3728:	add	sp, sp, #12
    372c:	pop	{r4, r5, r6, r7, pc}
    3730:	cmp	r2, #0
    3734:	beq	37ec <btbb_packet_get_flag@@Base+0x1ac>
    3738:	cmp	r3, #29
    373c:	ble	3724 <btbb_packet_get_flag@@Base+0xe4>
    3740:	mov	r1, #16
    3744:	bl	2978 <__assert_fail@plt+0x3fc>
    3748:	subs	r7, r0, #0
    374c:	beq	3724 <btbb_packet_get_flag@@Base+0xe4>
    3750:	mov	r3, #18
    3754:	str	r3, [sp]
    3758:	str	r4, [sp, #4]
    375c:	mov	r3, #16
    3760:	mov	r2, r5
    3764:	add	r1, r4, #44	; 0x2c
    3768:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    376c:	mov	r0, r7
    3770:	bl	21bc <free@plt>
    3774:	mov	r1, #10
    3778:	add	r0, r4, #47	; 0x2f
    377c:	bl	27b4 <__assert_fail@plt+0x238>
    3780:	add	r0, r0, #4
    3784:	ldrb	r3, [r4, #18]
    3788:	str	r0, [r4, #64]	; 0x40
    378c:	sub	r3, r3, #3
    3790:	uxtb	r3, r3
    3794:	cmp	r3, #12
    3798:	movhi	r3, #0
    379c:	ldrls	r2, [pc, #232]	; 388c <btbb_packet_get_flag@@Base+0x24c>
    37a0:	lslls	r3, r3, #1
    37a4:	addls	r2, pc, r2
    37a8:	addls	r2, r2, #1584	; 0x630
    37ac:	ldrshls	r3, [r2, r3]
    37b0:	ldr	r2, [r4, #64]	; 0x40
    37b4:	mov	r1, #2
    37b8:	cmp	r2, r3
    37bc:	strle	r2, [r4, #64]	; 0x40
    37c0:	strgt	r3, [r4, #64]	; 0x40
    37c4:	add	r0, r4, #44	; 0x2c
    37c8:	bl	2788 <__assert_fail@plt+0x20c>
    37cc:	mov	r1, #1
    37d0:	strb	r0, [r4, #60]	; 0x3c
    37d4:	add	r0, r4, #46	; 0x2e
    37d8:	bl	2788 <__assert_fail@plt+0x20c>
    37dc:	str	r6, [r4, #40]	; 0x28
    37e0:	strb	r0, [r4, #61]	; 0x3d
    37e4:	mov	r0, #1
    37e8:	b	3728 <btbb_packet_get_flag@@Base+0xe8>
    37ec:	mov	r3, #18
    37f0:	str	r3, [sp]
    37f4:	mov	r2, r1
    37f8:	str	r4, [sp, #4]
    37fc:	mov	r3, #16
    3800:	add	r1, r4, #44	; 0x2c
    3804:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3808:	b	3774 <btbb_packet_get_flag@@Base+0x134>
    380c:	cmp	r3, #7
    3810:	ble	3724 <btbb_packet_get_flag@@Base+0xe4>
    3814:	cmp	r2, #0
    3818:	beq	386c <btbb_packet_get_flag@@Base+0x22c>
    381c:	cmp	r3, #14
    3820:	ble	3724 <btbb_packet_get_flag@@Base+0xe4>
    3824:	mov	r1, #8
    3828:	bl	2978 <__assert_fail@plt+0x3fc>
    382c:	subs	r7, r0, #0
    3830:	beq	3724 <btbb_packet_get_flag@@Base+0xe4>
    3834:	mov	r3, #18
    3838:	str	r3, [sp]
    383c:	str	r4, [sp, #4]
    3840:	mov	r3, #8
    3844:	mov	r2, r5
    3848:	add	r1, r4, #44	; 0x2c
    384c:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3850:	mov	r0, r7
    3854:	bl	21bc <free@plt>
    3858:	mov	r1, #5
    385c:	add	r0, r4, #47	; 0x2f
    3860:	bl	2788 <__assert_fail@plt+0x20c>
    3864:	add	r0, r0, #3
    3868:	b	3784 <btbb_packet_get_flag@@Base+0x144>
    386c:	mov	r3, #18
    3870:	str	r3, [sp]
    3874:	mov	r2, r1
    3878:	str	r4, [sp, #4]
    387c:	mov	r3, #8
    3880:	add	r1, r4, #44	; 0x2c
    3884:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3888:	b	3858 <btbb_packet_get_flag@@Base+0x218>
    388c:	andeq	sp, r0, ip, ror #21

00003890 <btbb_get_symbols@@Base>:
    3890:	add	r0, r0, #2816	; 0xb00
    3894:	add	r0, r0, #8
    3898:	bx	lr

0000389c <btbb_packet_get_payload_length@@Base>:
    389c:	ldr	r0, [r0, #64]	; 0x40
    38a0:	bx	lr

000038a4 <btbb_get_payload@@Base>:
    38a4:	add	r0, r0, #68	; 0x44
    38a8:	bx	lr

000038ac <btbb_get_payload_packed@@Base>:
    38ac:	push	{r4, r5, r6, r7, r8, lr}
    38b0:	mov	r7, r0
    38b4:	mov	r6, r1
    38b8:	add	r5, r0, #68	; 0x44
    38bc:	mov	r4, r1
    38c0:	mov	r8, #8
    38c4:	ldr	r0, [r7, #64]	; 0x40
    38c8:	sub	r3, r4, r6
    38cc:	cmp	r0, r3
    38d0:	bgt	38d8 <btbb_get_payload_packed@@Base+0x2c>
    38d4:	pop	{r4, r5, r6, r7, r8, pc}
    38d8:	mov	r0, r5
    38dc:	mov	r1, r8
    38e0:	bl	2788 <__assert_fail@plt+0x20c>
    38e4:	add	r5, r5, #8
    38e8:	strb	r0, [r4], #1
    38ec:	b	38c4 <btbb_get_payload_packed@@Base+0x18>

000038f0 <btbb_packet_get_type@@Base>:
    38f0:	ldrb	r0, [r0, #18]
    38f4:	bx	lr

000038f8 <btbb_packet_get_lt_addr@@Base>:
    38f8:	ldrb	r0, [r0, #19]
    38fc:	bx	lr

00003900 <btbb_packet_get_header_flags@@Base>:
    3900:	ldrb	r0, [r0, #20]
    3904:	bx	lr

00003908 <btbb_packet_get_hec@@Base>:
    3908:	ldrb	r0, [r0, #21]
    390c:	bx	lr

00003910 <btbb_packet_get_header_packed@@Base>:
    3910:	add	r1, r0, #22
    3914:	mov	r0, #0
    3918:	mov	r3, r0
    391c:	ldrb	r2, [r1, r3]
    3920:	orr	r0, r0, r2, lsl r3
    3924:	add	r3, r3, #1
    3928:	cmp	r3, #18
    392c:	bne	391c <btbb_packet_get_header_packed@@Base+0xc>
    3930:	bx	lr

00003934 <fhs@@Base>:
    3934:	add	r3, r1, #2816	; 0xb00
    3938:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    393c:	ldrh	r2, [r3, #6]
    3940:	mov	r3, #20
    3944:	str	r3, [r1, #64]	; 0x40
    3948:	ldr	r3, [pc, #196]	; 3a14 <fhs@@Base+0xe0>
    394c:	cmp	r2, r3
    3950:	movle	r5, #1
    3954:	ble	39c0 <fhs@@Base+0x8c>
    3958:	mov	r7, r0
    395c:	add	r0, r1, #2944	; 0xb80
    3960:	mov	r4, r1
    3964:	add	r0, r0, #2
    3968:	mov	r1, #160	; 0xa0
    396c:	bl	2978 <__assert_fail@plt+0x3fc>
    3970:	subs	r6, r0, #0
    3974:	moveq	r5, r6
    3978:	beq	39c0 <fhs@@Base+0x8c>
    397c:	ldr	r3, [r4, #64]	; 0x40
    3980:	add	r9, r4, #68	; 0x44
    3984:	mov	r8, #18
    3988:	mov	r2, r7
    398c:	lsl	r3, r3, #3
    3990:	mov	r1, r9
    3994:	str	r4, [sp, #4]
    3998:	str	r8, [sp]
    399c:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    39a0:	mov	r0, r4
    39a4:	bl	28e8 <__assert_fail@plt+0x36c>
    39a8:	cmp	r0, #0
    39ac:	moveq	r7, #32
    39b0:	beq	39cc <fhs@@Base+0x98>
    39b4:	mov	r0, r6
    39b8:	bl	21bc <free@plt>
    39bc:	mov	r5, #1000	; 0x3e8
    39c0:	mov	r0, r5
    39c4:	add	sp, sp, #12
    39c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    39cc:	ldr	r3, [r4, #64]	; 0x40
    39d0:	mov	r2, r7
    39d4:	mov	r1, r9
    39d8:	lsl	r3, r3, #3
    39dc:	mov	r0, r6
    39e0:	str	r4, [sp, #4]
    39e4:	str	r8, [sp]
    39e8:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    39ec:	mov	r0, r4
    39f0:	bl	28e8 <__assert_fail@plt+0x36c>
    39f4:	subs	r5, r0, #0
    39f8:	bne	39b4 <fhs@@Base+0x80>
    39fc:	add	r7, r7, #1
    3a00:	cmp	r7, #64	; 0x40
    3a04:	bne	39cc <fhs@@Base+0x98>
    3a08:	mov	r0, r6
    3a0c:	bl	21bc <free@plt>
    3a10:	b	39c0 <fhs@@Base+0x8c>
    3a14:	andeq	r0, r0, r9, ror #2

00003a18 <DM@@Base>:
    3a18:	add	r3, r1, #2816	; 0xb00
    3a1c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    3a20:	add	r7, r1, #2944	; 0xb80
    3a24:	ldrh	r2, [r3, #6]
    3a28:	ldrb	r3, [r1, #18]
    3a2c:	add	r7, r7, #2
    3a30:	sub	r9, r2, #122	; 0x7a
    3a34:	sub	r3, r3, #3
    3a38:	cmp	r3, #11
    3a3c:	addls	pc, pc, r3, lsl #2
    3a40:	b	3aa8 <DM@@Base+0x90>
    3a44:	b	3ad0 <DM@@Base+0xb8>
    3a48:	b	3aa8 <DM@@Base+0x90>
    3a4c:	b	3aa8 <DM@@Base+0x90>
    3a50:	b	3aa8 <DM@@Base+0x90>
    3a54:	b	3aa8 <DM@@Base+0x90>
    3a58:	b	3ab0 <DM@@Base+0x98>
    3a5c:	b	3aa8 <DM@@Base+0x90>
    3a60:	b	3a74 <DM@@Base+0x5c>
    3a64:	b	3aa8 <DM@@Base+0x90>
    3a68:	b	3aa8 <DM@@Base+0x90>
    3a6c:	b	3aa8 <DM@@Base+0x90>
    3a70:	b	3ac8 <DM@@Base+0xb0>
    3a74:	mov	sl, #125	; 0x7d
    3a78:	mov	r2, #2
    3a7c:	mov	r5, #1
    3a80:	str	r1, [sp, #4]
    3a84:	mov	r4, r1
    3a88:	mov	r8, r0
    3a8c:	mov	r1, r0
    3a90:	str	r5, [sp]
    3a94:	mov	r3, r9
    3a98:	mov	r0, r7
    3a9c:	bl	3700 <btbb_packet_get_flag@@Base+0xc0>
    3aa0:	cmp	r0, #0
    3aa4:	bne	3ad8 <DM@@Base+0xc0>
    3aa8:	mov	r0, #0
    3aac:	b	3b3c <DM@@Base+0x124>
    3ab0:	add	r7, r1, #3024	; 0xbd0
    3ab4:	add	r7, r7, #2
    3ab8:	sub	r9, r2, #202	; 0xca
    3abc:	mov	sl, #12
    3ac0:	mov	r2, #1
    3ac4:	b	3a7c <DM@@Base+0x64>
    3ac8:	mov	sl, #228	; 0xe4
    3acc:	b	3a78 <DM@@Base+0x60>
    3ad0:	mov	sl, #20
    3ad4:	b	3ac0 <DM@@Base+0xa8>
    3ad8:	ldr	r6, [r4, #64]	; 0x40
    3adc:	cmp	sl, r6
    3ae0:	blt	3b44 <DM@@Base+0x12c>
    3ae4:	lsl	r6, r6, #3
    3ae8:	cmp	r9, r6
    3aec:	blt	3b44 <DM@@Base+0x12c>
    3af0:	mov	r1, r6
    3af4:	mov	r0, r7
    3af8:	bl	2978 <__assert_fail@plt+0x3fc>
    3afc:	subs	r5, r0, #0
    3b00:	beq	3aa8 <DM@@Base+0x90>
    3b04:	mov	r3, #18
    3b08:	mov	r2, r8
    3b0c:	add	r1, r4, #68	; 0x44
    3b10:	str	r3, [sp]
    3b14:	str	r4, [sp, #4]
    3b18:	mov	r3, r6
    3b1c:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3b20:	mov	r0, r5
    3b24:	bl	21bc <free@plt>
    3b28:	mov	r0, r4
    3b2c:	bl	28e8 <__assert_fail@plt+0x36c>
    3b30:	cmp	r0, #0
    3b34:	movne	r0, #10
    3b38:	moveq	r0, #2
    3b3c:	add	sp, sp, #8
    3b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3b44:	mov	r0, r5
    3b48:	b	3b3c <DM@@Base+0x124>

00003b4c <DH@@Base>:
    3b4c:	add	r3, r1, #2816	; 0xb00
    3b50:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    3b54:	add	r5, r1, #2944	; 0xb80
    3b58:	ldrh	r7, [r3, #6]
    3b5c:	ldrb	r3, [r1, #18]
    3b60:	add	r5, r5, #2
    3b64:	sub	r7, r7, #122	; 0x7a
    3b68:	sub	r3, r3, #4
    3b6c:	cmp	r3, #11
    3b70:	addls	pc, pc, r3, lsl #2
    3b74:	b	3c50 <DH@@Base+0x104>
    3b78:	b	3c44 <DH@@Base+0xf8>
    3b7c:	b	3c50 <DH@@Base+0x104>
    3b80:	b	3c50 <DH@@Base+0x104>
    3b84:	b	3c50 <DH@@Base+0x104>
    3b88:	b	3c50 <DH@@Base+0x104>
    3b8c:	b	3c44 <DH@@Base+0xf8>
    3b90:	b	3c50 <DH@@Base+0x104>
    3b94:	b	3ba8 <DH@@Base+0x5c>
    3b98:	b	3c50 <DH@@Base+0x104>
    3b9c:	b	3c50 <DH@@Base+0x104>
    3ba0:	b	3c50 <DH@@Base+0x104>
    3ba4:	b	3c3c <DH@@Base+0xf0>
    3ba8:	mov	r8, #187	; 0xbb
    3bac:	mov	r2, #2
    3bb0:	mov	r3, #0
    3bb4:	str	r1, [sp, #4]
    3bb8:	str	r3, [sp]
    3bbc:	mov	r4, r1
    3bc0:	mov	r6, r0
    3bc4:	mov	r1, r0
    3bc8:	mov	r3, r7
    3bcc:	mov	r0, r5
    3bd0:	bl	3700 <btbb_packet_get_flag@@Base+0xc0>
    3bd4:	cmp	r0, #0
    3bd8:	beq	3c34 <DH@@Base+0xe8>
    3bdc:	ldr	r3, [r4, #64]	; 0x40
    3be0:	cmp	r8, r3
    3be4:	blt	3c58 <DH@@Base+0x10c>
    3be8:	lsl	r3, r3, #3
    3bec:	cmp	r7, r3
    3bf0:	blt	3c58 <DH@@Base+0x10c>
    3bf4:	mov	r2, #18
    3bf8:	str	r2, [sp]
    3bfc:	mov	r0, r5
    3c00:	str	r4, [sp, #4]
    3c04:	mov	r2, r6
    3c08:	add	r1, r4, #68	; 0x44
    3c0c:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3c10:	ldrb	r3, [r4, #18]
    3c14:	cmp	r3, #9
    3c18:	moveq	r0, #2
    3c1c:	beq	3c34 <DH@@Base+0xe8>
    3c20:	mov	r0, r4
    3c24:	bl	28e8 <__assert_fail@plt+0x36c>
    3c28:	cmp	r0, #0
    3c2c:	moveq	r0, #2
    3c30:	movne	r0, #10
    3c34:	add	sp, sp, #8
    3c38:	pop	{r4, r5, r6, r7, r8, pc}
    3c3c:	ldr	r8, [pc, #28]	; 3c60 <DH@@Base+0x114>
    3c40:	b	3bac <DH@@Base+0x60>
    3c44:	mov	r8, #30
    3c48:	mov	r2, #1
    3c4c:	b	3bb0 <DH@@Base+0x64>
    3c50:	mov	r0, #0
    3c54:	b	3c34 <DH@@Base+0xe8>
    3c58:	mov	r0, #1
    3c5c:	b	3c34 <DH@@Base+0xe8>
    3c60:	andeq	r0, r0, r7, asr r1

00003c64 <EV3@@Base>:
    3c64:	add	r3, r1, #2816	; 0xb00
    3c68:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    3c6c:	add	r5, r1, #2944	; 0xb80
    3c70:	ldrh	r6, [r3, #6]
    3c74:	mov	r7, r0
    3c78:	mov	r4, r1
    3c7c:	add	r5, r5, #2
    3c80:	sub	r6, r6, #122	; 0x7a
    3c84:	add	r8, r1, #68	; 0x44
    3c88:	mov	r9, #8
    3c8c:	mov	r3, #0
    3c90:	str	r3, [r1, #64]	; 0x40
    3c94:	ldr	r1, [r4, #64]	; 0x40
    3c98:	cmp	r1, #31
    3c9c:	ble	3cac <EV3@@Base+0x48>
    3ca0:	mov	r0, #2
    3ca4:	add	sp, sp, #8
    3ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3cac:	lsl	r1, r1, #3
    3cb0:	add	r3, r1, #7
    3cb4:	cmp	r6, r3
    3cb8:	ble	3d04 <EV3@@Base+0xa0>
    3cbc:	add	r3, r1, #18
    3cc0:	str	r3, [sp]
    3cc4:	str	r4, [sp, #4]
    3cc8:	mov	r3, r9
    3ccc:	mov	r2, r7
    3cd0:	add	r1, r8, r1
    3cd4:	mov	r0, r5
    3cd8:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3cdc:	ldr	sl, [r4, #64]	; 0x40
    3ce0:	cmp	sl, #2
    3ce4:	ble	3cf8 <EV3@@Base+0x94>
    3ce8:	mov	r0, r4
    3cec:	bl	28e8 <__assert_fail@plt+0x36c>
    3cf0:	cmp	r0, #0
    3cf4:	bne	3d0c <EV3@@Base+0xa8>
    3cf8:	add	sl, sl, #1
    3cfc:	str	sl, [r4, #64]	; 0x40
    3d00:	b	3c94 <EV3@@Base+0x30>
    3d04:	mov	r0, #1
    3d08:	b	3ca4 <EV3@@Base+0x40>
    3d0c:	mov	r0, #10
    3d10:	b	3ca4 <EV3@@Base+0x40>

00003d14 <EV4@@Base>:
    3d14:	add	r3, r1, #2816	; 0xb00
    3d18:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3d1c:	add	r7, r1, #2944	; 0xb80
    3d20:	ldrh	r8, [r3, #6]
    3d24:	mov	r6, #0
    3d28:	mov	sl, r0
    3d2c:	mov	r5, r1
    3d30:	add	r7, r7, #2
    3d34:	sub	r8, r8, #122	; 0x7a
    3d38:	mov	r4, r6
    3d3c:	mov	r9, #10
    3d40:	mov	r3, #1
    3d44:	str	r3, [r1, #64]	; 0x40
    3d48:	add	r3, r4, #14
    3d4c:	cmp	r8, r3
    3d50:	ble	3de8 <EV4@@Base+0xd4>
    3d54:	mov	r1, r9
    3d58:	add	r0, r7, r4
    3d5c:	bl	2978 <__assert_fail@plt+0x3fc>
    3d60:	subs	fp, r0, #0
    3d64:	bne	3d7c <EV4@@Base+0x68>
    3d68:	cmp	r4, #44	; 0x2c
    3d6c:	movle	r0, #0
    3d70:	movgt	r0, #1
    3d74:	add	sp, sp, #12
    3d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3d7c:	add	r3, r6, #18
    3d80:	add	r1, r6, #68	; 0x44
    3d84:	str	r3, [sp]
    3d88:	str	r5, [sp, #4]
    3d8c:	mov	r3, r9
    3d90:	mov	r2, sl
    3d94:	add	r1, r5, r1
    3d98:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3d9c:	mov	r0, fp
    3da0:	bl	21bc <free@plt>
    3da4:	ldr	fp, [r5, #64]	; 0x40
    3da8:	cmp	r6, fp, lsl #3
    3dac:	bge	3dcc <EV4@@Base+0xb8>
    3db0:	ldr	r3, [pc, #64]	; 3df8 <EV4@@Base+0xe4>
    3db4:	add	r4, r4, #15
    3db8:	cmp	r4, r3
    3dbc:	add	r6, r6, #10
    3dc0:	bne	3d48 <EV4@@Base+0x34>
    3dc4:	mov	r0, #2
    3dc8:	b	3d74 <EV4@@Base+0x60>
    3dcc:	mov	r0, r5
    3dd0:	bl	28e8 <__assert_fail@plt+0x36c>
    3dd4:	cmp	r0, #0
    3dd8:	bne	3df0 <EV4@@Base+0xdc>
    3ddc:	add	fp, fp, #1
    3de0:	str	fp, [r5, #64]	; 0x40
    3de4:	b	3da4 <EV4@@Base+0x90>
    3de8:	mov	r0, #1
    3dec:	b	3d74 <EV4@@Base+0x60>
    3df0:	mov	r0, #10
    3df4:	b	3d74 <EV4@@Base+0x60>
    3df8:			; <UNDEFINED> instruction: 0x000005be

00003dfc <EV5@@Base>:
    3dfc:	add	r3, r1, #2816	; 0xb00
    3e00:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    3e04:	add	r5, r1, #2944	; 0xb80
    3e08:	ldrh	r6, [r3, #6]
    3e0c:	mov	r7, r0
    3e10:	mov	r4, r1
    3e14:	add	r5, r5, #2
    3e18:	sub	r6, r6, #122	; 0x7a
    3e1c:	add	r8, r1, #68	; 0x44
    3e20:	mov	r9, #8
    3e24:	mov	r3, #0
    3e28:	str	r3, [r1, #64]	; 0x40
    3e2c:	ldr	r1, [r4, #64]	; 0x40
    3e30:	cmp	r1, #181	; 0xb5
    3e34:	ble	3e44 <EV5@@Base+0x48>
    3e38:	mov	r0, #2
    3e3c:	add	sp, sp, #8
    3e40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3e44:	lsl	r1, r1, #3
    3e48:	add	r3, r1, #7
    3e4c:	cmp	r6, r3
    3e50:	ble	3e9c <EV5@@Base+0xa0>
    3e54:	add	r3, r1, #18
    3e58:	str	r3, [sp]
    3e5c:	str	r4, [sp, #4]
    3e60:	mov	r3, r9
    3e64:	mov	r2, r7
    3e68:	add	r1, r8, r1
    3e6c:	mov	r0, r5
    3e70:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3e74:	ldr	sl, [r4, #64]	; 0x40
    3e78:	cmp	sl, #2
    3e7c:	ble	3e90 <EV5@@Base+0x94>
    3e80:	mov	r0, r4
    3e84:	bl	28e8 <__assert_fail@plt+0x36c>
    3e88:	cmp	r0, #0
    3e8c:	bne	3ea4 <EV5@@Base+0xa8>
    3e90:	add	sl, sl, #1
    3e94:	str	sl, [r4, #64]	; 0x40
    3e98:	b	3e2c <EV5@@Base+0x30>
    3e9c:	mov	r0, #1
    3ea0:	b	3e3c <EV5@@Base+0x40>
    3ea4:	mov	r0, #10
    3ea8:	b	3e3c <EV5@@Base+0x40>

00003eac <HV@@Base>:
    3eac:	add	r3, r1, #2816	; 0xb00
    3eb0:	ldr	r2, [pc, #332]	; 4004 <HV@@Base+0x158>
    3eb4:	ldrh	ip, [r3, #6]
    3eb8:	mov	r3, #0
    3ebc:	str	r3, [r1, #40]	; 0x28
    3ec0:	cmp	ip, r2
    3ec4:	bgt	3ed4 <HV@@Base+0x28>
    3ec8:	str	r3, [r1, #64]	; 0x40
    3ecc:	mov	r0, #1
    3ed0:	bx	lr
    3ed4:	push	{r4, r5, r6, r7, lr}
    3ed8:	add	r5, r1, #2944	; 0xb80
    3edc:	mov	r4, r1
    3ee0:	ldrb	r1, [r1, #18]
    3ee4:	sub	sp, sp, #92	; 0x5c
    3ee8:	mov	r6, r0
    3eec:	cmp	r1, #6
    3ef0:	add	r5, r5, #2
    3ef4:	beq	3f64 <HV@@Base+0xb8>
    3ef8:	cmp	r1, #7
    3efc:	beq	3fcc <HV@@Base+0x120>
    3f00:	cmp	r1, #5
    3f04:	bne	3fc0 <HV@@Base+0x114>
    3f08:	add	r7, sp, #8
    3f0c:	mov	r2, #80	; 0x50
    3f10:	mov	r1, r7
    3f14:	mov	r0, r5
    3f18:	bl	2838 <__assert_fail@plt+0x2bc>
    3f1c:	cmp	r0, #0
    3f20:	beq	3fc4 <HV@@Base+0x118>
    3f24:	mov	r3, #10
    3f28:	str	r3, [r4, #64]	; 0x40
    3f2c:	mov	r2, #1
    3f30:	mov	r1, #7
    3f34:	mov	r0, r4
    3f38:	bl	21a4 <btbb_packet_set_flag@plt>
    3f3c:	ldr	r3, [r4, #64]	; 0x40
    3f40:	mov	r2, #18
    3f44:	str	r2, [sp]
    3f48:	lsl	r3, r3, #3
    3f4c:	mov	r2, r6
    3f50:	add	r1, r4, #68	; 0x44
    3f54:	mov	r0, r7
    3f58:	str	r4, [sp, #4]
    3f5c:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3f60:	b	3fc0 <HV@@Base+0x114>
    3f64:	mov	r0, r5
    3f68:	mov	r1, #160	; 0xa0
    3f6c:	bl	2978 <__assert_fail@plt+0x3fc>
    3f70:	subs	r5, r0, #0
    3f74:	moveq	r0, r5
    3f78:	beq	3fc4 <HV@@Base+0x118>
    3f7c:	mov	r3, #20
    3f80:	str	r3, [r4, #64]	; 0x40
    3f84:	mov	r2, #1
    3f88:	mov	r1, #7
    3f8c:	mov	r0, r4
    3f90:	bl	21a4 <btbb_packet_set_flag@plt>
    3f94:	ldr	r3, [r4, #64]	; 0x40
    3f98:	mov	r2, #18
    3f9c:	str	r2, [sp]
    3fa0:	mov	r0, r5
    3fa4:	str	r4, [sp, #4]
    3fa8:	lsl	r3, r3, #3
    3fac:	mov	r2, r6
    3fb0:	add	r1, r4, #68	; 0x44
    3fb4:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    3fb8:	mov	r0, r5
    3fbc:	bl	21bc <free@plt>
    3fc0:	mov	r0, #2
    3fc4:	add	sp, sp, #92	; 0x5c
    3fc8:	pop	{r4, r5, r6, r7, pc}
    3fcc:	mov	r3, #30
    3fd0:	str	r3, [r4, #64]	; 0x40
    3fd4:	mov	r2, #1
    3fd8:	mov	r0, r4
    3fdc:	bl	21a4 <btbb_packet_set_flag@plt>
    3fe0:	ldr	r3, [r4, #64]	; 0x40
    3fe4:	mov	r2, #18
    3fe8:	str	r2, [sp]
    3fec:	str	r4, [sp, #4]
    3ff0:	lsl	r3, r3, #3
    3ff4:	mov	r2, r6
    3ff8:	add	r1, r4, #68	; 0x44
    3ffc:	mov	r0, r5
    4000:	b	3f5c <HV@@Base+0xb0>
    4004:	andeq	r0, r0, r9, ror #2

00004008 <crc_check@@Base>:
    4008:	ldrb	r3, [r1, #18]
    400c:	push	{r4, lr}
    4010:	mov	r4, r1
    4014:	sub	r3, r3, #2
    4018:	cmp	r3, #13
    401c:	addls	pc, pc, r3, lsl #2
    4020:	b	40d0 <crc_check@@Base+0xc8>
    4024:	b	405c <crc_check@@Base+0x54>
    4028:	b	4084 <crc_check@@Base+0x7c>
    402c:	b	408c <crc_check@@Base+0x84>
    4030:	b	40ac <crc_check@@Base+0xa4>
    4034:	b	40d0 <crc_check@@Base+0xc8>
    4038:	b	4094 <crc_check@@Base+0x8c>
    403c:	b	4084 <crc_check@@Base+0x7c>
    4040:	b	40d0 <crc_check@@Base+0xc8>
    4044:	b	4084 <crc_check@@Base+0x7c>
    4048:	b	408c <crc_check@@Base+0x84>
    404c:	b	409c <crc_check@@Base+0x94>
    4050:	b	40a4 <crc_check@@Base+0x9c>
    4054:	b	4084 <crc_check@@Base+0x7c>
    4058:	b	408c <crc_check@@Base+0x84>
    405c:	bl	2204 <fhs@plt>
    4060:	cmp	r0, #0
    4064:	bne	40b4 <crc_check@@Base+0xac>
    4068:	ldrb	r3, [r4, #18]
    406c:	sub	r0, r3, #2
    4070:	cmp	r3, #5
    4074:	cmpne	r0, #1
    4078:	movhi	r0, #1
    407c:	movls	r0, #0
    4080:	pop	{r4, pc}
    4084:	bl	227c <DM@plt>
    4088:	b	4060 <crc_check@@Base+0x58>
    408c:	bl	24e0 <DH@plt>
    4090:	b	4060 <crc_check@@Base+0x58>
    4094:	bl	2468 <EV3@plt>
    4098:	b	4060 <crc_check@@Base+0x58>
    409c:	bl	2210 <EV4@plt>
    40a0:	b	4060 <crc_check@@Base+0x58>
    40a4:	bl	24c8 <EV5@plt>
    40a8:	b	4060 <crc_check@@Base+0x58>
    40ac:	bl	2294 <HV@plt>
    40b0:	b	4060 <crc_check@@Base+0x58>
    40b4:	cmp	r0, #1
    40b8:	pople	{r4, pc}
    40bc:	ldrb	r3, [r4, #18]
    40c0:	cmp	r3, #13
    40c4:	cmpne	r3, #7
    40c8:	moveq	r0, #1
    40cc:	pop	{r4, pc}
    40d0:	mov	r0, #1
    40d4:	pop	{r4, pc}

000040d8 <try_clock@@Base>:
    40d8:	push	{r4, r5, r6, r7, lr}
    40dc:	sub	sp, sp, #52	; 0x34
    40e0:	mov	r4, r0
    40e4:	add	r7, sp, #8
    40e8:	add	r0, r1, #2880	; 0xb40
    40ec:	mov	r6, r1
    40f0:	mov	r2, #18
    40f4:	mov	r1, r7
    40f8:	add	r0, r0, #12
    40fc:	bl	2838 <__assert_fail@plt+0x2bc>
    4100:	subs	r5, r0, #0
    4104:	beq	416c <try_clock@@Base+0x94>
    4108:	mov	r2, r4
    410c:	mov	r3, #0
    4110:	add	r4, sp, #28
    4114:	str	r3, [sp]
    4118:	mov	r1, r4
    411c:	mov	r3, #18
    4120:	mov	r0, r7
    4124:	str	r6, [sp, #4]
    4128:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    412c:	mov	r1, #10
    4130:	mov	r0, r4
    4134:	bl	27b4 <__assert_fail@plt+0x238>
    4138:	mov	r1, #8
    413c:	mov	r5, r0
    4140:	add	r0, r4, #10
    4144:	bl	2788 <__assert_fail@plt+0x20c>
    4148:	mov	r1, r0
    414c:	mov	r0, r5
    4150:	bl	28b8 <__assert_fail@plt+0x33c>
    4154:	mov	r1, #4
    4158:	strb	r0, [r6, #9]
    415c:	mov	r5, r0
    4160:	add	r0, r4, #3
    4164:	bl	2788 <__assert_fail@plt+0x20c>
    4168:	strb	r0, [r6, #18]
    416c:	mov	r0, r5
    4170:	add	sp, sp, #52	; 0x34
    4174:	pop	{r4, r5, r6, r7, pc}

00004178 <btbb_decode_header@@Base>:
    4178:	push	{r4, r5, r6, r7, lr}
    417c:	mov	r1, #4
    4180:	sub	sp, sp, #36	; 0x24
    4184:	mov	r4, r0
    4188:	bl	21f8 <btbb_packet_get_flag@plt>
    418c:	cmp	r0, #0
    4190:	bne	41a0 <btbb_decode_header@@Base+0x28>
    4194:	mov	r0, #0
    4198:	add	sp, sp, #36	; 0x24
    419c:	pop	{r4, r5, r6, r7, pc}
    41a0:	add	r6, sp, #12
    41a4:	add	r0, r4, #2880	; 0xb40
    41a8:	mov	r2, #18
    41ac:	mov	r1, r6
    41b0:	add	r0, r0, #12
    41b4:	bl	2838 <__assert_fail@plt+0x2bc>
    41b8:	cmp	r0, #0
    41bc:	beq	4194 <btbb_decode_header@@Base+0x1c>
    41c0:	add	r5, r4, #22
    41c4:	mov	r3, #0
    41c8:	ldr	r2, [r4, #2816]	; 0xb00
    41cc:	mov	r0, r6
    41d0:	str	r3, [sp]
    41d4:	mov	r1, r5
    41d8:	mov	r3, #18
    41dc:	str	r4, [sp, #4]
    41e0:	bl	3658 <btbb_packet_get_flag@@Base+0x18>
    41e4:	mov	r1, #10
    41e8:	mov	r0, r5
    41ec:	bl	27b4 <__assert_fail@plt+0x238>
    41f0:	mov	r1, #8
    41f4:	mov	r7, r0
    41f8:	add	r0, r4, #32
    41fc:	bl	2788 <__assert_fail@plt+0x20c>
    4200:	mov	r1, r0
    4204:	mov	r6, r0
    4208:	mov	r0, r7
    420c:	bl	28b8 <__assert_fail@plt+0x33c>
    4210:	ldrb	r3, [r4, #9]
    4214:	cmp	r3, r0
    4218:	bne	4194 <btbb_decode_header@@Base+0x1c>
    421c:	mov	r1, #3
    4220:	mov	r0, r5
    4224:	bl	2788 <__assert_fail@plt+0x20c>
    4228:	mov	r1, #4
    422c:	strb	r0, [r4, #19]
    4230:	add	r0, r4, #25
    4234:	bl	2788 <__assert_fail@plt+0x20c>
    4238:	mov	r1, #3
    423c:	strb	r0, [r4, #18]
    4240:	add	r0, r4, #29
    4244:	bl	2788 <__assert_fail@plt+0x20c>
    4248:	strb	r6, [r4, #21]
    424c:	strb	r0, [r4, #20]
    4250:	mov	r0, #1
    4254:	b	4198 <btbb_decode_header@@Base+0x20>

00004258 <btbb_decode_payload@@Base>:
    4258:	push	{r4, r5, r6, lr}
    425c:	mov	r3, #0
    4260:	ldrb	r2, [r0, #18]
    4264:	mov	r4, r0
    4268:	str	r3, [r0, #40]	; 0x28
    426c:	cmp	r2, #15
    4270:	addls	pc, pc, r2, lsl #2
    4274:	b	4354 <btbb_decode_payload@@Base+0xfc>
    4278:	b	42b8 <btbb_decode_payload@@Base+0x60>
    427c:	b	42b8 <btbb_decode_payload@@Base+0x60>
    4280:	b	42d8 <btbb_decode_payload@@Base+0x80>
    4284:	b	4334 <btbb_decode_payload@@Base+0xdc>
    4288:	b	4344 <btbb_decode_payload@@Base+0xec>
    428c:	b	4304 <btbb_decode_payload@@Base+0xac>
    4290:	b	4304 <btbb_decode_payload@@Base+0xac>
    4294:	b	42ec <btbb_decode_payload@@Base+0x94>
    4298:	b	4334 <btbb_decode_payload@@Base+0xdc>
    429c:	b	4344 <btbb_decode_payload@@Base+0xec>
    42a0:	b	4334 <btbb_decode_payload@@Base+0xdc>
    42a4:	b	4344 <btbb_decode_payload@@Base+0xec>
    42a8:	b	4314 <btbb_decode_payload@@Base+0xbc>
    42ac:	b	4324 <btbb_decode_payload@@Base+0xcc>
    42b0:	b	4334 <btbb_decode_payload@@Base+0xdc>
    42b4:	b	4344 <btbb_decode_payload@@Base+0xec>
    42b8:	mov	r5, #1
    42bc:	str	r3, [r0, #64]	; 0x40
    42c0:	mov	r0, r4
    42c4:	mov	r2, #1
    42c8:	mov	r1, #7
    42cc:	bl	21a4 <btbb_packet_set_flag@plt>
    42d0:	mov	r0, r5
    42d4:	pop	{r4, r5, r6, pc}
    42d8:	mov	r1, r0
    42dc:	ldr	r0, [r0, #2816]	; 0xb00
    42e0:	bl	2204 <fhs@plt>
    42e4:	mov	r5, r0
    42e8:	b	42c0 <btbb_decode_payload@@Base+0x68>
    42ec:	mov	r1, r0
    42f0:	ldr	r0, [r0, #2816]	; 0xb00
    42f4:	bl	2468 <EV3@plt>
    42f8:	cmp	r0, #1
    42fc:	mov	r5, r0
    4300:	bgt	42c0 <btbb_decode_payload@@Base+0x68>
    4304:	mov	r1, r4
    4308:	ldr	r0, [r4, #2816]	; 0xb00
    430c:	bl	2294 <HV@plt>
    4310:	b	42e4 <btbb_decode_payload@@Base+0x8c>
    4314:	mov	r1, r0
    4318:	ldr	r0, [r0, #2816]	; 0xb00
    431c:	bl	2210 <EV4@plt>
    4320:	b	42e4 <btbb_decode_payload@@Base+0x8c>
    4324:	mov	r1, r0
    4328:	ldr	r0, [r0, #2816]	; 0xb00
    432c:	bl	24c8 <EV5@plt>
    4330:	b	42e4 <btbb_decode_payload@@Base+0x8c>
    4334:	mov	r1, r0
    4338:	ldr	r0, [r0, #2816]	; 0xb00
    433c:	bl	227c <DM@plt>
    4340:	b	42e4 <btbb_decode_payload@@Base+0x8c>
    4344:	mov	r1, r0
    4348:	ldr	r0, [r0, #2816]	; 0xb00
    434c:	bl	24e0 <DH@plt>
    4350:	b	42e4 <btbb_decode_payload@@Base+0x8c>
    4354:	mov	r5, #0
    4358:	b	42c0 <btbb_decode_payload@@Base+0x68>

0000435c <btbb_print_packet@@Base>:
    435c:	push	{r4, r5, r6, r7, r8, lr}
    4360:	mov	r1, #7
    4364:	mov	r4, r0
    4368:	bl	21f8 <btbb_packet_get_flag@plt>
    436c:	cmp	r0, #0
    4370:	popeq	{r4, r5, r6, r7, r8, pc}
    4374:	ldrb	r2, [r4, #18]
    4378:	ldr	r3, [pc, #196]	; 4444 <btbb_print_packet@@Base+0xe8>
    437c:	ldr	r0, [pc, #196]	; 4448 <btbb_print_packet@@Base+0xec>
    4380:	add	r3, pc, r3
    4384:	add	r0, pc, r0
    4388:	ldr	r1, [r3, r2, lsl #2]
    438c:	bl	2174 <printf@plt>
    4390:	ldr	r3, [r4, #40]	; 0x28
    4394:	cmp	r3, #0
    4398:	ble	43dc <btbb_print_packet@@Base+0x80>
    439c:	ldr	r0, [pc, #168]	; 444c <btbb_print_packet@@Base+0xf0>
    43a0:	ldrb	r1, [r4, #19]
    43a4:	add	r0, pc, r0
    43a8:	bl	2174 <printf@plt>
    43ac:	ldr	r0, [pc, #156]	; 4450 <btbb_print_packet@@Base+0xf4>
    43b0:	ldrb	r1, [r4, #60]	; 0x3c
    43b4:	add	r0, pc, r0
    43b8:	bl	2174 <printf@plt>
    43bc:	ldr	r0, [pc, #144]	; 4454 <btbb_print_packet@@Base+0xf8>
    43c0:	ldrb	r1, [r4, #61]	; 0x3d
    43c4:	add	r0, pc, r0
    43c8:	bl	2174 <printf@plt>
    43cc:	ldr	r0, [pc, #132]	; 4458 <btbb_print_packet@@Base+0xfc>
    43d0:	ldr	r1, [r4, #64]	; 0x40
    43d4:	add	r0, pc, r0
    43d8:	bl	2174 <printf@plt>
    43dc:	ldr	r3, [r4, #64]	; 0x40
    43e0:	cmp	r3, #0
    43e4:	popeq	{r4, r5, r6, r7, r8, pc}
    43e8:	ldr	r0, [pc, #108]	; 445c <btbb_print_packet@@Base+0x100>
    43ec:	ldr	r8, [pc, #108]	; 4460 <btbb_print_packet@@Base+0x104>
    43f0:	add	r0, pc, r0
    43f4:	bl	2174 <printf@plt>
    43f8:	add	r6, r4, #68	; 0x44
    43fc:	mov	r5, #0
    4400:	mov	r7, #8
    4404:	add	r8, pc, r8
    4408:	ldr	r3, [r4, #64]	; 0x40
    440c:	cmp	r5, r3
    4410:	blt	4420 <btbb_print_packet@@Base+0xc4>
    4414:	mov	r0, #10
    4418:	pop	{r4, r5, r6, r7, r8, lr}
    441c:	b	2450 <putchar@plt>
    4420:	mov	r1, r7
    4424:	mov	r0, r6
    4428:	bl	2788 <__assert_fail@plt+0x20c>
    442c:	add	r5, r5, #1
    4430:	add	r6, r6, #8
    4434:	mov	r1, r0
    4438:	mov	r0, r8
    443c:	bl	2174 <printf@plt>
    4440:	b	4408 <btbb_print_packet@@Base+0xac>
    4444:	muleq	r2, r0, sl
    4448:	muleq	r0, pc, r5	; <UNPREDICTABLE>
    444c:	andeq	sp, r0, fp, lsl #11
    4450:	andeq	sp, r0, sl, lsl #11
    4454:	andeq	sp, r0, r6, lsl #11
    4458:	andeq	sp, r0, r2, lsl #11
    445c:	andeq	sp, r0, r2, ror #29
    4460:	ldrdeq	sp, [r0], -r9

00004464 <btbb_decode@@Base>:
    4464:	push	{r4, r5, r6, lr}
    4468:	mov	r2, #0
    446c:	mov	r4, r0
    4470:	mov	r1, #7
    4474:	bl	21a4 <btbb_packet_set_flag@plt>
    4478:	mov	r0, r4
    447c:	bl	23b4 <btbb_decode_header@plt>
    4480:	subs	r5, r0, #0
    4484:	beq	44b8 <btbb_decode@@Base+0x54>
    4488:	mov	r0, r4
    448c:	bl	2504 <btbb_decode_payload@plt>
    4490:	subs	r5, r0, #0
    4494:	ble	44b8 <btbb_decode@@Base+0x54>
    4498:	ldr	r1, [r4, #2816]	; 0xb00
    449c:	ldr	r0, [pc, #28]	; 44c0 <btbb_decode@@Base+0x5c>
    44a0:	mov	r2, r5
    44a4:	and	r1, r1, #63	; 0x3f
    44a8:	add	r0, pc, r0
    44ac:	bl	2174 <printf@plt>
    44b0:	mov	r0, r4
    44b4:	bl	2528 <btbb_print_packet@plt>
    44b8:	mov	r0, r5
    44bc:	pop	{r4, r5, r6, pc}
    44c0:	andeq	sp, r0, r4, asr #9

000044c4 <tun_format@@Base>:
    44c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    44c8:	mov	r4, r0
    44cc:	ldr	r0, [r0, #64]	; 0x40
    44d0:	mov	r7, #0
    44d4:	add	r0, r0, #9
    44d8:	bl	233c <malloc@plt>
    44dc:	ldr	r3, [r4, #2816]	; 0xb00
    44e0:	mov	r1, #5
    44e4:	mov	r9, #8
    44e8:	lsr	r2, r3, #8
    44ec:	strb	r3, [r0]
    44f0:	strb	r2, [r0, #1]
    44f4:	lsr	r2, r3, #16
    44f8:	lsr	r3, r3, #24
    44fc:	strb	r3, [r0, #3]
    4500:	ldrb	r3, [r4, #8]
    4504:	strb	r2, [r0, #2]
    4508:	mov	r5, r0
    450c:	strb	r3, [r0, #4]
    4510:	mov	r0, r4
    4514:	bl	21f8 <btbb_packet_get_flag@plt>
    4518:	mov	r1, #1
    451c:	mov	r6, r0
    4520:	mov	r0, r4
    4524:	bl	21f8 <btbb_packet_get_flag@plt>
    4528:	mov	r1, #7
    452c:	orr	r0, r6, r0, lsl #1
    4530:	strb	r0, [r5, #5]
    4534:	add	r0, r4, #22
    4538:	bl	2788 <__assert_fail@plt+0x20c>
    453c:	mov	r1, #3
    4540:	mov	r6, r5
    4544:	strb	r0, [r5, #6]
    4548:	add	r0, r4, #29
    454c:	bl	2788 <__assert_fail@plt+0x20c>
    4550:	mov	r1, #8
    4554:	strb	r0, [r5, #7]
    4558:	add	r0, r4, #32
    455c:	bl	2788 <__assert_fail@plt+0x20c>
    4560:	add	r4, r4, #68	; 0x44
    4564:	ldr	r8, [r4, #-4]
    4568:	strb	r0, [r6, #8]!
    456c:	cmp	r7, r8
    4570:	blt	457c <tun_format@@Base+0xb8>
    4574:	mov	r0, r5
    4578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    457c:	mov	r0, r4
    4580:	mov	r1, r9
    4584:	bl	2788 <__assert_fail@plt+0x20c>
    4588:	add	r7, r7, #1
    458c:	add	r4, r4, #8
    4590:	strb	r0, [r6, #1]!
    4594:	b	456c <tun_format@@Base+0xa8>

00004598 <btbb_header_present@@Base>:
    4598:	add	r3, r0, #2816	; 0xb00
    459c:	ldrh	r3, [r3, #6]
    45a0:	cmp	r3, #121	; 0x79
    45a4:	bls	4634 <btbb_header_present@@Base+0x9c>
    45a8:	push	{r4, lr}
    45ac:	ldrb	r2, [r0, #2887]	; 0xb47
    45b0:	ldrb	r1, [r0, #2888]	; 0xb48
    45b4:	ldrb	r3, [r0, #2889]	; 0xb49
    45b8:	clz	ip, r2
    45bc:	lsr	ip, ip, #5
    45c0:	eor	r3, r3, r2
    45c4:	eor	r1, r1, ip
    45c8:	add	r1, r1, r3
    45cc:	ldrb	r3, [r0, #2890]	; 0xb4a
    45d0:	eor	r3, r3, ip
    45d4:	add	r1, r3, r1
    45d8:	ldrb	r3, [r0, #2891]	; 0xb4b
    45dc:	eor	r3, r3, r2
    45e0:	add	r2, r0, #2880	; 0xb40
    45e4:	add	r0, r0, #2944	; 0xb80
    45e8:	add	r3, r3, r1
    45ec:	add	r2, r2, #12
    45f0:	add	r0, r0, #2
    45f4:	ldrb	ip, [r2]
    45f8:	ldrb	lr, [r2, #1]
    45fc:	ldrb	r4, [r2, #2]
    4600:	add	r2, r2, #3
    4604:	eor	r1, ip, lr
    4608:	eor	lr, lr, r4
    460c:	orr	r1, r1, lr
    4610:	eor	ip, ip, r4
    4614:	orr	r1, r1, ip
    4618:	cmp	r0, r2
    461c:	add	r3, r3, r1
    4620:	bne	45f4 <btbb_header_present@@Base+0x5c>
    4624:	cmp	r3, #4
    4628:	movgt	r0, #0
    462c:	movle	r0, #1
    4630:	pop	{r4, pc}
    4634:	mov	r0, #0
    4638:	bx	lr

0000463c <lap_from_fhs@@Base>:
    463c:	add	r1, r0, #102	; 0x66
    4640:	mov	r0, #0
    4644:	mov	r3, r0
    4648:	ldrb	r2, [r1, r3]
    464c:	orr	r0, r0, r2, lsl r3
    4650:	add	r3, r3, #1
    4654:	cmp	r3, #24
    4658:	bne	4648 <lap_from_fhs@@Base+0xc>
    465c:	bx	lr

00004660 <uap_from_fhs@@Base>:
    4660:	mov	r1, #8
    4664:	add	r0, r0, #132	; 0x84
    4668:	b	2788 <__assert_fail@plt+0x20c>

0000466c <nap_from_fhs@@Base>:
    466c:	mov	r1, #16
    4670:	add	r0, r0, #140	; 0x8c
    4674:	b	27b4 <__assert_fail@plt+0x238>

00004678 <clock_from_fhs@@Base>:
    4678:	add	r1, r0, #183	; 0xb7
    467c:	mov	r0, #0
    4680:	mov	r3, r0
    4684:	ldrb	r2, [r1, r3]
    4688:	orr	r0, r0, r2, lsl r3
    468c:	add	r3, r3, #1
    4690:	cmp	r3, #26
    4694:	bne	4684 <clock_from_fhs@@Base+0xc>
    4698:	bx	lr

0000469c <count_bits@@Base>:
    469c:	mov	r3, r0
    46a0:	mov	r0, #0
    46a4:	cmp	r3, #0
    46a8:	bne	46b0 <count_bits@@Base+0x14>
    46ac:	bx	lr
    46b0:	sub	r2, r3, #1
    46b4:	and	r3, r3, r2
    46b8:	add	r0, r0, #1
    46bc:	b	46a4 <count_bits@@Base+0x8>

000046c0 <btbb_piconet_new@@Base>:
    46c0:	push	{r4, lr}
    46c4:	mov	r0, #1
    46c8:	ldr	r1, [pc, #12]	; 46dc <btbb_piconet_new@@Base+0x1c>
    46cc:	bl	2120 <calloc@plt>
    46d0:	mov	r3, #1
    46d4:	str	r3, [r0]
    46d8:	pop	{r4, pc}
    46dc:	andeq	r1, r0, ip, lsl r6

000046e0 <btbb_piconet_ref@@Base>:
    46e0:	ldr	r3, [r0]
    46e4:	add	r3, r3, #1
    46e8:	str	r3, [r0]
    46ec:	bx	lr

000046f0 <btbb_piconet_unref@@Base>:
    46f0:	ldr	r3, [r0]
    46f4:	subs	r3, r3, #1
    46f8:	beq	4704 <btbb_piconet_unref@@Base+0x14>
    46fc:	str	r3, [r0]
    4700:	bx	lr
    4704:	b	21bc <free@plt>

00004708 <btbb_init_survey@@Base>:
    4708:	ldr	r3, [pc, #16]	; 4720 <btbb_init_survey@@Base+0x18>
    470c:	mov	r2, #1
    4710:	add	r3, pc, r3
    4714:	mov	r0, #0
    4718:	str	r2, [r3]
    471c:	bx	lr
    4720:	andeq	r3, r2, r0, lsr #21

00004724 <btbb_piconet_set_flag@@Base>:
    4724:	mov	r3, #1
    4728:	cmp	r2, #0
    472c:	lsl	r1, r3, r1
    4730:	ldr	r3, [r0, #4]
    4734:	biceq	r1, r3, r1
    4738:	orrne	r1, r1, r3
    473c:	str	r1, [r0, #4]
    4740:	bx	lr

00004744 <btbb_init_piconet@@Base>:
    4744:	str	r1, [r0, #24]
    4748:	mov	r2, #1
    474c:	mov	r1, #3
    4750:	b	2288 <btbb_piconet_set_flag@plt>

00004754 <btbb_piconet_get_flag@@Base>:
    4754:	ldr	r3, [r0, #4]
    4758:	mov	r2, #1
    475c:	ands	r3, r3, r2, lsl r1
    4760:	movne	r0, r2
    4764:	moveq	r0, #0
    4768:	bx	lr
    476c:	push	{r4, lr}
    4770:	mov	r1, #9
    4774:	mov	r4, r0
    4778:	bl	2264 <btbb_piconet_get_flag@plt>
    477c:	cmp	r0, #0
    4780:	beq	4794 <btbb_piconet_get_flag@@Base+0x40>
    4784:	ldr	r0, [r4, #32]
    4788:	bl	21bc <free@plt>
    478c:	mov	r3, #0
    4790:	str	r3, [r4, #372]	; 0x174
    4794:	mov	r0, r4
    4798:	mov	r2, #0
    479c:	mov	r1, #10
    47a0:	bl	2288 <btbb_piconet_set_flag@plt>
    47a4:	mov	r0, r4
    47a8:	mov	r2, #0
    47ac:	mov	r1, #9
    47b0:	bl	2288 <btbb_piconet_set_flag@plt>
    47b4:	mov	r0, r4
    47b8:	mov	r2, #0
    47bc:	mov	r1, #2
    47c0:	bl	2288 <btbb_piconet_set_flag@plt>
    47c4:	mov	r0, r4
    47c8:	mov	r2, #0
    47cc:	mov	r1, #4
    47d0:	bl	2288 <btbb_piconet_set_flag@plt>
    47d4:	mov	r2, #0
    47d8:	mov	r0, r4
    47dc:	mov	r1, #5
    47e0:	bl	2288 <btbb_piconet_set_flag@plt>
    47e4:	mov	r3, #0
    47e8:	str	r3, [r4, #380]	; 0x17c
    47ec:	mov	r1, #12
    47f0:	mov	r0, r4
    47f4:	bl	2264 <btbb_piconet_get_flag@plt>
    47f8:	mov	r1, #11
    47fc:	mov	r2, r0
    4800:	mov	r0, r4
    4804:	pop	{r4, lr}
    4808:	b	2288 <btbb_piconet_set_flag@plt>

0000480c <btbb_piconet_set_uap@@Base>:
    480c:	strb	r1, [r0, #28]
    4810:	mov	r2, #1
    4814:	mov	r1, #2
    4818:	b	2288 <btbb_piconet_set_flag@plt>

0000481c <btbb_piconet_get_uap@@Base>:
    481c:	ldrb	r0, [r0, #28]
    4820:	bx	lr

00004824 <btbb_piconet_get_lap@@Base>:
    4824:	ldr	r0, [r0, #24]
    4828:	bx	lr

0000482c <btbb_piconet_get_nap@@Base>:
    482c:	ldrh	r0, [r0, #30]
    4830:	bx	lr

00004834 <btbb_piconet_get_bdaddr@@Base>:
    4834:	ldr	r1, [r0, #24]
    4838:	ldrh	r3, [r0, #30]
    483c:	ldrb	r0, [r0, #28]
    4840:	mov	r2, #0
    4844:	orr	r2, r2, r1
    4848:	lsl	r0, r0, #24
    484c:	orr	r2, r2, r0
    4850:	mov	r0, r2
    4854:	mov	r1, r3
    4858:	bx	lr

0000485c <btbb_piconet_get_clk_offset@@Base>:
    485c:	add	r0, r0, #4096	; 0x1000
    4860:	ldr	r0, [r0, #1552]	; 0x610
    4864:	bx	lr

00004868 <btbb_piconet_set_clk_offset@@Base>:
    4868:	add	r0, r0, #4096	; 0x1000
    486c:	str	r1, [r0, #1552]	; 0x610
    4870:	bx	lr

00004874 <btbb_piconet_get_afh_map@@Base>:
    4874:	add	r0, r0, #12
    4878:	bx	lr

0000487c <btbb_piconet_set_channel_seen@@Base>:
    487c:	add	ip, r0, r1, lsr #3
    4880:	and	r1, r1, #7
    4884:	ldrb	r2, [ip, #12]
    4888:	asr	r3, r2, r1
    488c:	tst	r3, #1
    4890:	moveq	r3, #1
    4894:	orreq	r1, r2, r3, lsl r1
    4898:	strbeq	r1, [ip, #12]
    489c:	ldrbeq	r2, [r0, #22]
    48a0:	addeq	r2, r2, r3
    48a4:	strbeq	r2, [r0, #22]
    48a8:	moveq	r0, r3
    48ac:	movne	r0, #0
    48b0:	bx	lr

000048b4 <btbb_piconet_clear_channel_seen@@Base>:
    48b4:	add	ip, r0, r1, lsr #3
    48b8:	and	r1, r1, #7
    48bc:	ldrb	r2, [ip, #12]
    48c0:	asr	r3, r2, r1
    48c4:	ands	r3, r3, #1
    48c8:	movne	r3, #1
    48cc:	bicne	r1, r2, r3, lsl r1
    48d0:	strbne	r1, [ip, #12]
    48d4:	ldrbne	r2, [r0, #22]
    48d8:	subne	r2, r2, #1
    48dc:	strbne	r2, [r0, #22]
    48e0:	mov	r0, r3
    48e4:	bx	lr

000048e8 <btbb_piconet_get_channel_seen@@Base>:
    48e8:	cmp	r1, #78	; 0x4e
    48ec:	addls	r0, r0, r1, lsr #3
    48f0:	andls	r1, r1, #7
    48f4:	ldrbls	r0, [r0, #12]
    48f8:	movhi	r0, #1
    48fc:	asrls	r0, r0, r1
    4900:	and	r0, r0, #1
    4904:	bx	lr

00004908 <precalc@@Base>:
    4908:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    490c:	mov	r4, #0
    4910:	mov	r5, r0
    4914:	add	r6, r0, #56	; 0x38
    4918:	mov	r7, r4
    491c:	mov	sl, #11
    4920:	mov	r8, #79	; 0x4f
    4924:	mov	r1, sl
    4928:	mov	r0, r5
    492c:	bl	2264 <btbb_piconet_get_flag@plt>
    4930:	mov	r1, r8
    4934:	cmp	r0, #0
    4938:	mov	r0, r4
    493c:	beq	4978 <precalc@@Base+0x70>
    4940:	bl	f080 <lell_pcapng_close@@Base+0x450>
    4944:	mov	r0, r5
    4948:	mov	r9, r1
    494c:	uxtb	r1, r1
    4950:	bl	2240 <btbb_piconet_get_channel_seen@plt>
    4954:	cmp	r0, #0
    4958:	addne	r3, r7, #14
    495c:	addne	r7, r7, #1
    4960:	strne	r9, [r5, r3, lsl #2]
    4964:	add	r4, r4, #2
    4968:	cmp	r4, #158	; 0x9e
    496c:	add	r6, r6, #4
    4970:	bne	4924 <precalc@@Base+0x1c>
    4974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4978:	bl	f080 <lell_pcapng_close@@Base+0x450>
    497c:	str	r1, [r6]
    4980:	b	4964 <precalc@@Base+0x5c>

00004984 <address_precalc@@Base>:
    4984:	asr	r3, r0, #23
    4988:	and	r3, r3, #31
    498c:	str	r3, [r1, #44]	; 0x2c
    4990:	asr	r3, r0, #19
    4994:	push	{r4, r5, lr}
    4998:	and	r3, r3, #15
    499c:	asr	r5, r0, #4
    49a0:	asr	r4, r0, #3
    49a4:	asr	lr, r0, #2
    49a8:	and	r2, r5, #16
    49ac:	str	r3, [r1, #36]	; 0x24
    49b0:	and	r3, r4, #8
    49b4:	asr	ip, r0, #1
    49b8:	orr	r2, r2, r3
    49bc:	and	r3, lr, #4
    49c0:	add	r2, r2, r3
    49c4:	and	r3, ip, #2
    49c8:	add	r2, r2, r3
    49cc:	and	r3, r0, #1
    49d0:	add	r2, r2, r3
    49d4:	ldr	r3, [pc, #80]	; 4a2c <address_precalc@@Base+0xa8>
    49d8:	str	r2, [r1, #48]	; 0x30
    49dc:	and	r3, r3, r0, asr #10
    49e0:	asr	r2, r0, #7
    49e4:	str	r3, [r1, #52]	; 0x34
    49e8:	asr	r3, r0, #6
    49ec:	and	r3, r3, #32
    49f0:	and	r2, r2, #64	; 0x40
    49f4:	asr	r0, r0, #5
    49f8:	orr	r2, r2, r3
    49fc:	and	r3, r0, #16
    4a00:	add	r3, r2, r3
    4a04:	and	r5, r5, #8
    4a08:	add	r3, r3, r5
    4a0c:	and	r4, r4, #4
    4a10:	add	r3, r3, r4
    4a14:	and	lr, lr, #2
    4a18:	add	r3, r3, lr
    4a1c:	and	ip, ip, #1
    4a20:	add	r3, r3, ip
    4a24:	str	r3, [r1, #40]	; 0x28
    4a28:	pop	{r4, r5, pc}
    4a2c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00004a30 <perm5@@Base>:
    4a30:	ldr	ip, [pc, #304]	; 4b68 <perm5@@Base+0x138>
    4a34:	push	{r4, r5, r6, r7, lr}
    4a38:	add	ip, pc, ip
    4a3c:	mov	r4, ip
    4a40:	mov	r5, r0
    4a44:	mov	r6, r1
    4a48:	mov	r7, r2
    4a4c:	ldm	r4!, {r0, r1, r2, r3}
    4a50:	sub	sp, sp, #196	; 0xc4
    4a54:	add	lr, sp, #80	; 0x50
    4a58:	add	ip, ip, #56	; 0x38
    4a5c:	stmia	lr!, {r0, r1, r2, r3}
    4a60:	ldm	r4!, {r0, r1, r2, r3}
    4a64:	stmia	lr!, {r0, r1, r2, r3}
    4a68:	ldm	r4!, {r0, r1, r2, r3}
    4a6c:	stmia	lr!, {r0, r1, r2, r3}
    4a70:	ldm	r4, {r0, r1}
    4a74:	stm	lr, {r0, r1}
    4a78:	ldm	ip!, {r0, r1, r2, r3}
    4a7c:	add	lr, sp, #136	; 0x88
    4a80:	stmia	lr!, {r0, r1, r2, r3}
    4a84:	ldm	ip!, {r0, r1, r2, r3}
    4a88:	stmia	lr!, {r0, r1, r2, r3}
    4a8c:	ldm	ip!, {r0, r1, r2, r3}
    4a90:	stmia	lr!, {r0, r1, r2, r3}
    4a94:	mov	r3, #0
    4a98:	ldm	ip, {r0, r1}
    4a9c:	add	ip, sp, #80	; 0x50
    4aa0:	stm	lr, {r0, r1}
    4aa4:	add	lr, sp, #136	; 0x88
    4aa8:	add	r0, sp, #24
    4aac:	asr	r2, r7, r3
    4ab0:	and	r2, r2, #1
    4ab4:	str	r2, [r0, r3, lsl #2]
    4ab8:	add	r3, r3, #1
    4abc:	cmp	r3, #9
    4ac0:	bne	4aac <perm5@@Base+0x7c>
    4ac4:	add	r1, r0, #36	; 0x24
    4ac8:	mov	r3, #0
    4acc:	asr	r2, r6, r3
    4ad0:	add	r3, r3, #1
    4ad4:	and	r2, r2, #1
    4ad8:	cmp	r3, #5
    4adc:	str	r2, [r1], #4
    4ae0:	bne	4acc <perm5@@Base+0x9c>
    4ae4:	mov	r3, #0
    4ae8:	add	r4, sp, #4
    4aec:	asr	r2, r5, r3
    4af0:	and	r2, r2, #1
    4af4:	str	r2, [r4, r3, lsl #2]
    4af8:	add	r3, r3, #1
    4afc:	cmp	r3, #5
    4b00:	bne	4aec <perm5@@Base+0xbc>
    4b04:	mov	r3, #13
    4b08:	ldr	r2, [r0, r3, lsl #2]
    4b0c:	cmp	r2, #0
    4b10:	beq	4b3c <perm5@@Base+0x10c>
    4b14:	ldr	r1, [ip, r3, lsl #2]
    4b18:	add	r2, sp, #192	; 0xc0
    4b1c:	add	r6, sp, #192	; 0xc0
    4b20:	add	r1, r2, r1, lsl #2
    4b24:	ldr	r2, [lr, r3, lsl #2]
    4b28:	ldr	r5, [r1, #-188]	; 0xffffff44
    4b2c:	add	r2, r6, r2, lsl #2
    4b30:	ldr	r6, [r2, #-188]	; 0xffffff44
    4b34:	str	r6, [r1, #-188]	; 0xffffff44
    4b38:	str	r5, [r2, #-188]	; 0xffffff44
    4b3c:	subs	r3, r3, #1
    4b40:	bcs	4b08 <perm5@@Base+0xd8>
    4b44:	mov	r0, #0
    4b48:	mov	r3, r0
    4b4c:	ldr	r2, [r4, r3, lsl #2]
    4b50:	add	r0, r0, r2, lsl r3
    4b54:	add	r3, r3, #1
    4b58:	cmp	r3, #5
    4b5c:	bne	4b4c <perm5@@Base+0x11c>
    4b60:	add	sp, sp, #196	; 0xc4
    4b64:	pop	{r4, r5, r6, r7, pc}
    4b68:	andeq	ip, r0, r0, ror #31

00004b6c <perm_table_init@@Base>:
    4b6c:	ldr	r3, [pc, #104]	; 4bdc <perm_table_init@@Base+0x70>
    4b70:	ldr	r2, [pc, #104]	; 4be0 <perm_table_init@@Base+0x74>
    4b74:	add	r3, pc, r3
    4b78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4b7c:	mov	r5, #0
    4b80:	ldr	r9, [r3, r2]
    4b84:	lsl	r8, r5, #5
    4b88:	mov	r4, #0
    4b8c:	b	4bbc <perm_table_init@@Base+0x50>
    4b90:	mov	r2, r6
    4b94:	mov	r1, r4
    4b98:	mov	r0, r5
    4b9c:	bl	24b0 <perm5@plt>
    4ba0:	strb	r0, [r7, r6]
    4ba4:	add	r6, r6, #1
    4ba8:	cmp	r6, #512	; 0x200
    4bac:	bne	4b90 <perm_table_init@@Base+0x24>
    4bb0:	add	r4, r4, #1
    4bb4:	cmp	r4, #32
    4bb8:	beq	4bcc <perm_table_init@@Base+0x60>
    4bbc:	add	r7, r4, r8
    4bc0:	mov	r6, #0
    4bc4:	add	r7, r9, r7, lsl #9
    4bc8:	b	4b90 <perm_table_init@@Base+0x24>
    4bcc:	add	r5, r5, #1
    4bd0:	cmp	r5, #32
    4bd4:	bne	4b84 <perm_table_init@@Base+0x18>
    4bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4bdc:	andeq	r3, r2, r4, lsl #9
    4be0:	muleq	r0, r0, r1

00004be4 <fast_perm@@Base>:
    4be4:	push	{r4, r5, r6, r7, r8, lr}
    4be8:	mov	r8, r0
    4bec:	ldr	r5, [pc, #64]	; 4c34 <fast_perm@@Base+0x50>
    4bf0:	ldr	r3, [pc, #64]	; 4c38 <fast_perm@@Base+0x54>
    4bf4:	add	r5, pc, r5
    4bf8:	mov	r4, r1
    4bfc:	ldr	r6, [r5, r3]
    4c00:	mov	r7, r2
    4c04:	ldr	r3, [r6]
    4c08:	cmp	r3, #0
    4c0c:	bne	4c1c <fast_perm@@Base+0x38>
    4c10:	bl	22b8 <perm_table_init@plt>
    4c14:	mov	r3, #1
    4c18:	str	r3, [r6]
    4c1c:	ldr	r3, [pc, #24]	; 4c3c <fast_perm@@Base+0x58>
    4c20:	add	r1, r4, r8, lsl #5
    4c24:	ldr	r3, [r5, r3]
    4c28:	add	r1, r3, r1, lsl #9
    4c2c:	ldrb	r0, [r1, r7]
    4c30:	pop	{r4, r5, r6, r7, r8, pc}
    4c34:	andeq	r3, r2, r4, lsl #8
    4c38:	muleq	r0, r4, r1
    4c3c:	muleq	r0, r0, r1

00004c40 <gen_hop_pattern@@Base>:
    4c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c44:	mov	sl, r0
    4c48:	ldr	r0, [pc, #576]	; 4e90 <gen_hop_pattern@@Base+0x250>
    4c4c:	sub	sp, sp, #68	; 0x44
    4c50:	add	r0, pc, r0
    4c54:	bl	2330 <puts@plt>
    4c58:	mov	r0, #134217728	; 0x8000000
    4c5c:	bl	233c <malloc@plt>
    4c60:	mov	r9, #0
    4c64:	mov	r8, r9
    4c68:	str	r0, [sl, #372]	; 0x174
    4c6c:	mov	r0, sl
    4c70:	bl	24f8 <precalc@plt>
    4c74:	ldrb	r2, [sl, #28]
    4c78:	ldr	r0, [sl, #24]
    4c7c:	mov	r1, sl
    4c80:	orr	r0, r0, r2, lsl #24
    4c84:	bic	r0, r0, #-268435456	; 0xf0000000
    4c88:	bl	2438 <address_precalc@plt>
    4c8c:	str	r9, [sp, #12]
    4c90:	mov	r5, #0
    4c94:	lsl	r3, r8, #2
    4c98:	str	r3, [sp, #32]
    4c9c:	ldr	r2, [sl, #44]	; 0x2c
    4ca0:	add	r3, r8, r5, lsl #18
    4ca4:	str	r3, [sp, #40]	; 0x28
    4ca8:	eor	r3, r5, r2
    4cac:	str	r3, [sp, #28]
    4cb0:	ldr	r3, [sp, #32]
    4cb4:	mov	r6, #0
    4cb8:	add	r3, r3, r5, lsl #20
    4cbc:	str	r3, [sp, #44]	; 0x2c
    4cc0:	ldr	r3, [sp, #40]	; 0x28
    4cc4:	ldr	r2, [sl, #48]	; 0x30
    4cc8:	add	r3, r3, r6, lsl #13
    4ccc:	str	r3, [sp, #16]
    4cd0:	eor	r3, r6, r2
    4cd4:	str	r3, [sp, #20]
    4cd8:	eor	r3, r3, #31
    4cdc:	str	r3, [sp, #36]	; 0x24
    4ce0:	ldr	r3, [sp, #44]	; 0x2c
    4ce4:	add	r3, r3, r6, lsl #15
    4ce8:	str	r3, [sp, #48]	; 0x30
    4cec:	mov	r3, #0
    4cf0:	str	r3, [sp, #4]
    4cf4:	ldr	r2, [sp, #4]
    4cf8:	ldr	r3, [sp, #48]	; 0x30
    4cfc:	add	r7, r3, r2, lsl #6
    4d00:	ldr	r2, [sl, #52]	; 0x34
    4d04:	ldr	r3, [sp, #4]
    4d08:	eor	r3, r3, r2
    4d0c:	str	r3, [sp, #24]
    4d10:	mov	r3, #0
    4d14:	str	r3, [sp, #8]
    4d18:	ldr	r3, [sp, #12]
    4d1c:	add	r3, r3, #32
    4d20:	str	r3, [sp, #52]	; 0x34
    4d24:	add	r3, r9, #32
    4d28:	str	r3, [sp, #56]	; 0x38
    4d2c:	ldr	r3, [sp, #8]
    4d30:	ldr	r2, [sp, #28]
    4d34:	ldr	r1, [sp, #20]
    4d38:	add	r4, r3, r2
    4d3c:	rsbs	r2, r4, #0
    4d40:	and	r2, r2, #31
    4d44:	and	r4, r4, #31
    4d48:	rsbpl	r4, r2, #0
    4d4c:	ldr	r2, [sl, #36]	; 0x24
    4d50:	eor	r4, r4, r2
    4d54:	mov	r0, r4
    4d58:	ldr	r2, [sp, #24]
    4d5c:	bl	2534 <fast_perm@plt>
    4d60:	mov	r1, #11
    4d64:	str	r0, [sp, #60]	; 0x3c
    4d68:	mov	r0, sl
    4d6c:	bl	2264 <btbb_piconet_get_flag@plt>
    4d70:	ldr	r2, [sp, #60]	; 0x3c
    4d74:	ldr	fp, [sl, #372]	; 0x174
    4d78:	cmp	r0, #0
    4d7c:	ldr	r0, [sl, #40]	; 0x28
    4d80:	ldreq	r3, [sp, #12]
    4d84:	add	r0, r2, r0
    4d88:	addeq	r0, r0, r3
    4d8c:	ldrbne	r1, [sl, #22]
    4d90:	addne	r0, r0, r9
    4d94:	moveq	r1, #79	; 0x4f
    4d98:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    4d9c:	mov	r0, r4
    4da0:	add	r1, r1, #14
    4da4:	ldr	r2, [sl, r1, lsl #2]
    4da8:	strb	r2, [fp, r7]
    4dac:	ldr	r2, [sp, #24]
    4db0:	ldr	r1, [sp, #36]	; 0x24
    4db4:	bl	2534 <fast_perm@plt>
    4db8:	mov	r1, #11
    4dbc:	mov	fp, r0
    4dc0:	mov	r0, sl
    4dc4:	bl	2264 <btbb_piconet_get_flag@plt>
    4dc8:	ldr	r4, [sl, #372]	; 0x174
    4dcc:	add	r4, r4, r7
    4dd0:	add	r7, r7, #2
    4dd4:	cmp	r0, #0
    4dd8:	ldr	r0, [sl, #40]	; 0x28
    4ddc:	ldrne	r3, [sp, #56]	; 0x38
    4de0:	ldreq	r3, [sp, #52]	; 0x34
    4de4:	add	r0, fp, r0
    4de8:	ldrbne	r1, [sl, #22]
    4dec:	moveq	r1, #79	; 0x4f
    4df0:	add	r0, r0, r3
    4df4:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    4df8:	add	r1, r1, #14
    4dfc:	ldr	r2, [sl, r1, lsl #2]
    4e00:	strb	r2, [r4, #1]
    4e04:	ldr	r3, [sp, #8]
    4e08:	add	r3, r3, #1
    4e0c:	cmp	r3, #32
    4e10:	str	r3, [sp, #8]
    4e14:	bne	4d2c <gen_hop_pattern@@Base+0xec>
    4e18:	ldr	r3, [sp, #16]
    4e1c:	mov	r1, #79	; 0x4f
    4e20:	add	r3, r3, #16
    4e24:	mov	r0, r3
    4e28:	str	r3, [sp, #16]
    4e2c:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    4e30:	str	r1, [sp, #12]
    4e34:	ldr	r0, [sp, #12]
    4e38:	ldrb	r1, [sl, #22]
    4e3c:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    4e40:	ldr	r3, [sp, #4]
    4e44:	add	r3, r3, #1
    4e48:	cmp	r3, #512	; 0x200
    4e4c:	str	r3, [sp, #4]
    4e50:	mov	r9, r1
    4e54:	bne	4cf4 <gen_hop_pattern@@Base+0xb4>
    4e58:	add	r6, r6, #1
    4e5c:	cmp	r6, #32
    4e60:	bne	4cc0 <gen_hop_pattern@@Base+0x80>
    4e64:	add	r5, r5, #1
    4e68:	cmp	r5, #32
    4e6c:	bne	4c9c <gen_hop_pattern@@Base+0x5c>
    4e70:	add	r8, r8, #8388608	; 0x800000
    4e74:	cmp	r8, #33554432	; 0x2000000
    4e78:	bne	4c90 <gen_hop_pattern@@Base+0x50>
    4e7c:	ldr	r0, [pc, #16]	; 4e94 <gen_hop_pattern@@Base+0x254>
    4e80:	add	r0, pc, r0
    4e84:	add	sp, sp, #68	; 0x44
    4e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4e8c:	b	2330 <puts@plt>
    4e90:	andeq	ip, r0, r8, lsr lr
    4e94:	andeq	ip, r0, r0, lsr ip

00004e98 <get_hop_pattern@@Base>:
    4e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4e9c:	mov	r1, #11
    4ea0:	sub	sp, sp, #36	; 0x24
    4ea4:	mov	r7, r0
    4ea8:	bl	2264 <btbb_piconet_get_flag@plt>
    4eac:	ldrb	r3, [r7, #22]
    4eb0:	ldr	r1, [r7, #24]
    4eb4:	mov	r2, #0
    4eb8:	mov	r9, r3
    4ebc:	ldrb	r3, [r7, #28]
    4ec0:	orr	r8, r2, r1
    4ec4:	mov	r4, r2
    4ec8:	ldr	sl, [pc, #1180]	; 536c <get_hop_pattern@@Base+0x4d4>
    4ecc:	lsl	r3, r3, #24
    4ed0:	orr	r8, r8, r3
    4ed4:	orr	r2, r8, r2
    4ed8:	lsl	r5, r0, #7
    4edc:	orr	r3, r9, r5
    4ee0:	ldr	r9, [pc, #1160]	; 5370 <get_hop_pattern@@Base+0x4d8>
    4ee4:	strd	r2, [sp]
    4ee8:	strd	r2, [sp, #24]
    4eec:	ldr	r3, [pc, #1152]	; 5374 <get_hop_pattern@@Base+0x4dc>
    4ef0:	ldr	r5, [pc, #1152]	; 5378 <get_hop_pattern@@Base+0x4e0>
    4ef4:	add	r3, pc, r3
    4ef8:	ldr	r2, [r3, #4]
    4efc:	cmp	r2, r4
    4f00:	ldr	r4, [pc, #1140]	; 537c <get_hop_pattern@@Base+0x4e4>
    4f04:	beq	4fc4 <get_hop_pattern@@Base+0x12c>
    4f08:	ldrb	r1, [sp, #27]
    4f0c:	ldrb	r3, [sp, #24]
    4f10:	ldr	r8, [r2, #12]
    4f14:	add	fp, sp, #24
    4f18:	add	r3, r3, r9
    4f1c:	add	r3, r3, r1, lsl #24
    4f20:	ldrb	r1, [sp, #26]
    4f24:	ldr	r2, [r8, #4]
    4f28:	sub	r2, r2, #1
    4f2c:	add	r3, r3, r1, lsl #16
    4f30:	ldrb	r1, [sp, #25]
    4f34:	add	r3, r3, r1, lsl #8
    4f38:	eor	r3, r3, sl
    4f3c:	sub	ip, r5, r3
    4f40:	eor	ip, ip, r3, lsl #8
    4f44:	sub	r0, r4, r3
    4f48:	sub	r0, r0, ip
    4f4c:	eor	r0, r0, ip, lsr #13
    4f50:	sub	r3, r3, ip
    4f54:	sub	r3, r3, r0
    4f58:	eor	r3, r3, r0, lsr #12
    4f5c:	sub	ip, ip, r0
    4f60:	sub	ip, ip, r3
    4f64:	eor	ip, ip, r3, lsl #16
    4f68:	sub	r0, r0, r3
    4f6c:	sub	r0, r0, ip
    4f70:	eor	r0, r0, ip, lsr #5
    4f74:	sub	r1, r3, ip
    4f78:	sub	r1, r1, r0
    4f7c:	eor	r1, r1, r0, lsr #3
    4f80:	sub	ip, ip, r0
    4f84:	sub	r3, ip, r1
    4f88:	eor	ip, r3, r1, lsl #10
    4f8c:	sub	r3, r0, r1
    4f90:	sub	r3, r3, ip
    4f94:	eor	r3, r3, ip, lsr #15
    4f98:	and	r3, r3, r2
    4f9c:	mov	r2, #12
    4fa0:	ldr	r1, [r8]
    4fa4:	mul	r3, r2, r3
    4fa8:	ldr	r6, [r1, r3]
    4fac:	cmp	r6, #0
    4fb0:	ldrne	r3, [r8, #20]
    4fb4:	subne	r6, r6, r3
    4fb8:	mov	r3, #4
    4fbc:	cmp	r6, #0
    4fc0:	bne	503c <get_hop_pattern@@Base+0x1a4>
    4fc4:	mov	r0, r7
    4fc8:	bl	2144 <gen_hop_pattern@plt>
    4fcc:	mov	r0, #48	; 0x30
    4fd0:	bl	233c <malloc@plt>
    4fd4:	ldrd	r2, [sp]
    4fd8:	strd	r2, [r0]
    4fdc:	ldr	r3, [r7, #372]	; 0x174
    4fe0:	mov	r6, r0
    4fe4:	str	r3, [r0, #8]
    4fe8:	mov	r3, #0
    4fec:	str	r3, [r0, #20]
    4ff0:	mov	r3, #4
    4ff4:	str	r0, [r6, #32]
    4ff8:	str	r3, [r0, #36]	; 0x24
    4ffc:	ldr	r3, [pc, #892]	; 5380 <get_hop_pattern@@Base+0x4e8>
    5000:	add	r8, r0, #12
    5004:	add	r3, pc, r3
    5008:	ldr	fp, [r3, #4]
    500c:	cmp	fp, #0
    5010:	bne	52a4 <get_hop_pattern@@Base+0x40c>
    5014:	str	fp, [r6, #16]
    5018:	mov	r0, #44	; 0x2c
    501c:	str	r6, [r3, #4]
    5020:	bl	233c <malloc@plt>
    5024:	cmp	r0, #0
    5028:	mov	r7, r0
    502c:	str	r0, [r6, #12]
    5030:	bne	5080 <get_hop_pattern@@Base+0x1e8>
    5034:	mvn	r0, #0
    5038:	bl	2390 <exit@plt>
    503c:	ldr	r2, [r6, #36]	; 0x24
    5040:	cmp	r2, #4
    5044:	bne	5068 <get_hop_pattern@@Base+0x1d0>
    5048:	mov	r2, r3
    504c:	mov	r1, fp
    5050:	ldr	r0, [r6, #32]
    5054:	str	r3, [sp, #12]
    5058:	bl	2228 <memcmp@plt>
    505c:	ldr	r3, [sp, #12]
    5060:	cmp	r0, #0
    5064:	beq	5354 <get_hop_pattern@@Base+0x4bc>
    5068:	ldr	r6, [r6, #28]
    506c:	cmp	r6, #0
    5070:	beq	4fc4 <get_hop_pattern@@Base+0x12c>
    5074:	ldr	r2, [r8, #20]
    5078:	sub	r6, r6, r2
    507c:	b	4fbc <get_hop_pattern@@Base+0x124>
    5080:	mov	r2, #44	; 0x2c
    5084:	mov	r1, fp
    5088:	bl	2444 <memset@plt>
    508c:	mov	r2, #32
    5090:	mov	r3, #5
    5094:	str	r8, [r7, #16]
    5098:	stmib	r7, {r2, r3}
    509c:	mov	r3, #12
    50a0:	str	r3, [r7, #20]
    50a4:	mov	r0, #384	; 0x180
    50a8:	bl	233c <malloc@plt>
    50ac:	cmp	r0, #0
    50b0:	str	r0, [r7]
    50b4:	beq	5034 <get_hop_pattern@@Base+0x19c>
    50b8:	mov	r2, #384	; 0x180
    50bc:	mov	r1, fp
    50c0:	bl	2444 <memset@plt>
    50c4:	ldr	r3, [pc, #696]	; 5384 <get_hop_pattern@@Base+0x4ec>
    50c8:	str	r3, [r7, #40]	; 0x28
    50cc:	ldr	r3, [pc, #692]	; 5388 <get_hop_pattern@@Base+0x4f0>
    50d0:	mov	ip, #0
    50d4:	add	r3, pc, r3
    50d8:	ldr	r3, [r3, #4]
    50dc:	ldr	r7, [r3, #12]
    50e0:	ldr	r2, [r7, #12]
    50e4:	add	r2, r2, #1
    50e8:	str	r2, [r7, #12]
    50ec:	ldrb	r2, [r6]
    50f0:	str	r7, [r6, #12]
    50f4:	ldr	r3, [r3, #12]
    50f8:	add	r9, r2, r9
    50fc:	ldrb	r2, [r6, #3]
    5100:	add	r9, r9, r2, lsl #24
    5104:	ldrb	r2, [r6, #2]
    5108:	add	r9, r9, r2, lsl #16
    510c:	ldrb	r2, [r6, #1]
    5110:	add	r9, r9, r2, lsl #8
    5114:	eor	sl, sl, r9
    5118:	sub	r5, r5, sl
    511c:	eor	r5, r5, sl, lsl #8
    5120:	sub	r2, r4, sl
    5124:	sub	r2, r2, r5
    5128:	eor	r2, r2, r5, lsr #13
    512c:	sub	sl, sl, r5
    5130:	sub	sl, sl, r2
    5134:	eor	sl, sl, r2, lsr #12
    5138:	sub	r1, r5, r2
    513c:	sub	r1, r1, sl
    5140:	eor	r1, r1, sl, lsl #16
    5144:	sub	r2, r2, sl
    5148:	sub	r2, r2, r1
    514c:	eor	r2, r2, r1, lsr #5
    5150:	sub	sl, sl, r1
    5154:	sub	sl, sl, r2
    5158:	eor	sl, sl, r2, lsr #3
    515c:	sub	r1, r1, r2
    5160:	sub	r1, r1, sl
    5164:	eor	r1, r1, sl, lsl #10
    5168:	sub	sl, r2, sl
    516c:	ldr	r2, [r3, #4]
    5170:	sub	sl, sl, r1
    5174:	eor	sl, sl, r1, lsr #15
    5178:	sub	r2, r2, #1
    517c:	str	sl, [r6, #40]	; 0x28
    5180:	and	r2, r2, sl
    5184:	mov	sl, #12
    5188:	ldr	r1, [r3]
    518c:	mul	sl, sl, r2
    5190:	add	r2, r1, sl
    5194:	ldr	r0, [r1, sl]
    5198:	ldr	r3, [r2, #4]
    519c:	cmp	r0, ip
    51a0:	add	r3, r3, #1
    51a4:	str	r3, [r2, #4]
    51a8:	ldr	r2, [r2, #8]
    51ac:	str	r0, [r6, #28]
    51b0:	str	ip, [r6, #24]
    51b4:	strne	r8, [r0, #12]
    51b8:	str	r8, [r1, sl]
    51bc:	add	r1, r2, #1
    51c0:	mov	r2, #10
    51c4:	mul	r2, r2, r1
    51c8:	cmp	r3, r2
    51cc:	bcc	529c <get_hop_pattern@@Base+0x404>
    51d0:	ldr	r3, [r7, #36]	; 0x24
    51d4:	cmp	r3, #1
    51d8:	beq	529c <get_hop_pattern@@Base+0x404>
    51dc:	ldr	r2, [r7, #4]
    51e0:	mov	r4, #24
    51e4:	mul	r4, r4, r2
    51e8:	mov	r0, r4
    51ec:	bl	233c <malloc@plt>
    51f0:	subs	sl, r0, #0
    51f4:	beq	5034 <get_hop_pattern@@Base+0x19c>
    51f8:	mov	r2, r4
    51fc:	mov	r1, #0
    5200:	bl	2444 <memset@plt>
    5204:	ldr	r3, [r7, #4]
    5208:	ldr	r2, [r7, #12]
    520c:	str	r3, [sp]
    5210:	lsl	fp, r3, #1
    5214:	ldr	r3, [r7, #8]
    5218:	sub	fp, fp, #1
    521c:	tst	r2, fp
    5220:	add	r3, r3, #1
    5224:	movne	r9, #1
    5228:	moveq	r9, #0
    522c:	add	r9, r9, r2, lsr r3
    5230:	mov	r2, #12
    5234:	mov	r4, #0
    5238:	str	r9, [r7, #24]
    523c:	str	r4, [r7, #28]
    5240:	ldr	r3, [sp]
    5244:	cmp	r4, r3
    5248:	bne	52c4 <get_hop_pattern@@Base+0x42c>
    524c:	ldr	r0, [r7]
    5250:	bl	21bc <free@plt>
    5254:	ldr	r3, [r6, #12]
    5258:	ldr	r2, [r3, #4]
    525c:	ldr	r1, [r3, #12]
    5260:	str	sl, [r3]
    5264:	lsl	r2, r2, #1
    5268:	str	r2, [r3, #4]
    526c:	ldr	r2, [r3, #8]
    5270:	add	r2, r2, #1
    5274:	str	r2, [r3, #8]
    5278:	ldr	r2, [r3, #28]
    527c:	cmp	r2, r1, lsr #1
    5280:	movls	r2, #0
    5284:	ldrhi	r2, [r3, #32]
    5288:	addhi	r2, r2, #1
    528c:	cmp	r2, #1
    5290:	str	r2, [r3, #32]
    5294:	movhi	r2, #1
    5298:	strhi	r2, [r3, #36]	; 0x24
    529c:	add	sp, sp, #36	; 0x24
    52a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    52a4:	ldr	r2, [fp, #12]
    52a8:	ldr	r3, [r2, #16]
    52ac:	ldr	r1, [r2, #20]
    52b0:	str	r6, [r3, #8]
    52b4:	sub	r3, r3, r1
    52b8:	str	r3, [r6, #16]
    52bc:	str	r8, [r2, #16]
    52c0:	b	50cc <get_hop_pattern@@Base+0x234>
    52c4:	mul	r3, r2, r4
    52c8:	ldr	r1, [r7]
    52cc:	ldr	r5, [r1, r3]
    52d0:	cmp	r5, #0
    52d4:	addeq	r4, r4, #1
    52d8:	beq	5240 <get_hop_pattern@@Base+0x3a8>
    52dc:	ldr	r8, [r5, #28]
    52e0:	ldr	r3, [r5, #16]
    52e4:	and	r8, r8, fp
    52e8:	str	r3, [sp, #12]
    52ec:	mul	r8, r2, r8
    52f0:	add	r3, sl, r8
    52f4:	str	r3, [sp, #20]
    52f8:	ldr	r0, [r3, #4]
    52fc:	add	r0, r0, #1
    5300:	cmp	r9, r0
    5304:	str	r0, [r3, #4]
    5308:	bcs	5330 <get_hop_pattern@@Base+0x498>
    530c:	ldr	r1, [r7, #28]
    5310:	str	r2, [sp, #16]
    5314:	add	r1, r1, #1
    5318:	str	r1, [r7, #28]
    531c:	mov	r1, r9
    5320:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    5324:	ldr	r3, [sp, #20]
    5328:	ldr	r2, [sp, #16]
    532c:	str	r0, [r3, #8]
    5330:	mov	r3, #0
    5334:	str	r3, [r5, #12]
    5338:	ldr	r3, [sl, r8]
    533c:	cmp	r3, #0
    5340:	str	r3, [r5, #16]
    5344:	strne	r5, [r3, #12]
    5348:	str	r5, [sl, r8]
    534c:	ldr	r5, [sp, #12]
    5350:	b	52d0 <get_hop_pattern@@Base+0x438>
    5354:	ldr	r0, [pc, #48]	; 538c <get_hop_pattern@@Base+0x4f4>
    5358:	add	r0, pc, r0
    535c:	bl	2330 <puts@plt>
    5360:	ldr	r3, [r6, #8]
    5364:	str	r3, [r7, #372]	; 0x174
    5368:	b	529c <get_hop_pattern@@Base+0x404>
    536c:	andeq	pc, r7, sp, ror #14
    5370:	tsteq	r2, sp, lsl #2
    5374:			; <UNDEFINED> instruction: 0x000232bc
    5378:	svcls	0x0049bac6
    537c:	mcr2	14, 7, fp, cr13, cr3, {7}
    5380:	andeq	r3, r2, ip, lsr #3
    5384:	andsge	r1, r1, r1, ror #31
    5388:	ldrdeq	r3, [r2], -ip
    538c:	andeq	ip, r0, r5, ror r7

00005390 <btbb_piconet_set_afh_map@@Base>:
    5390:	push	{r4, r5, r6, r7, r8, lr}
    5394:	mov	r4, r0
    5398:	sub	r6, r1, #1
    539c:	add	r5, r0, #12
    53a0:	add	r7, r0, #22
    53a4:	mov	r3, #0
    53a8:	strb	r3, [r0, #22]
    53ac:	ldrb	r0, [r6, #1]!
    53b0:	strb	r0, [r5], #1
    53b4:	bl	2150 <count_bits@plt>
    53b8:	ldrb	r3, [r4, #22]
    53bc:	cmp	r5, r7
    53c0:	add	r0, r3, r0
    53c4:	strb	r0, [r4, #22]
    53c8:	bne	53ac <btbb_piconet_set_afh_map@@Base+0x1c>
    53cc:	mov	r1, #2
    53d0:	mov	r0, r4
    53d4:	bl	2264 <btbb_piconet_get_flag@plt>
    53d8:	cmp	r0, #0
    53dc:	popeq	{r4, r5, r6, r7, r8, pc}
    53e0:	mov	r0, r4
    53e4:	pop	{r4, r5, r6, r7, r8, lr}
    53e8:	b	2324 <get_hop_pattern@plt>

000053ec <single_hop@@Base>:
    53ec:	push	{r4, r5, r6, r7, r8, lr}
    53f0:	mov	r4, r1
    53f4:	asr	r1, r0, #1
    53f8:	and	r1, r1, #1
    53fc:	mov	r3, #31
    5400:	ldr	r2, [r4, #52]	; 0x34
    5404:	lsl	r5, r1, #5
    5408:	mul	r1, r3, r1
    540c:	ldr	r3, [r4, #44]	; 0x2c
    5410:	eor	r2, r2, r0, asr #7
    5414:	ldr	ip, [r4, #48]	; 0x30
    5418:	ldr	r7, [pc, #152]	; 54b8 <single_hop@@Base+0xcc>
    541c:	eor	r3, r3, r0, asr #21
    5420:	eor	ip, ip, r0, asr #16
    5424:	and	r7, r7, r0, asr #3
    5428:	lsl	r2, r2, #23
    542c:	add	r0, r3, r0, lsr #2
    5430:	ldr	r3, [r4, #36]	; 0x24
    5434:	and	ip, ip, #31
    5438:	and	r0, r0, #31
    543c:	eor	r1, r1, ip
    5440:	eor	r0, r0, r3
    5444:	lsr	r2, r2, #23
    5448:	bl	2534 <fast_perm@plt>
    544c:	mov	r1, #11
    5450:	mov	r6, r0
    5454:	mov	r0, r4
    5458:	bl	2264 <btbb_piconet_get_flag@plt>
    545c:	ldr	r3, [r4, #40]	; 0x28
    5460:	cmp	r0, #0
    5464:	beq	549c <single_hop@@Base+0xb0>
    5468:	ldrb	r8, [r4, #22]
    546c:	mov	r0, r7
    5470:	add	r6, r6, r3
    5474:	mov	r1, r8
    5478:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    547c:	add	r0, r1, r5
    5480:	mov	r1, r8
    5484:	add	r0, r6, r0
    5488:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    548c:	add	r1, r1, #14
    5490:	ldr	r0, [r4, r1, lsl #2]
    5494:	uxtb	r0, r0
    5498:	pop	{r4, r5, r6, r7, r8, pc}
    549c:	mov	r1, #79	; 0x4f
    54a0:	mov	r0, r7
    54a4:	add	r6, r6, r3
    54a8:	bl	ee40 <lell_pcapng_close@@Base+0x210>
    54ac:	add	r0, r1, r5
    54b0:	mov	r1, #79	; 0x4f
    54b4:	b	5484 <single_hop@@Base+0x98>
    54b8:	ldrsheq	pc, [pc, #240]	; 55b0 <btbb_init_hop_reversal@@Base+0xe8>	; <UNPREDICTABLE>

000054bc <hop@@Base>:
    54bc:	ldr	r3, [r1, #372]	; 0x174
    54c0:	ldrb	r0, [r3, r0]
    54c4:	bx	lr

000054c8 <btbb_init_hop_reversal@@Base>:
    54c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    54cc:	mov	r7, r0
    54d0:	mov	r0, r1
    54d4:	mov	r4, r1
    54d8:	bl	2324 <get_hop_pattern@plt>
    54dc:	ldr	r3, [pc, #208]	; 55b4 <btbb_init_hop_reversal@@Base+0xec>
    54e0:	ldr	r0, [pc, #208]	; 55b8 <btbb_init_hop_reversal@@Base+0xf0>
    54e4:	cmp	r7, #0
    54e8:	moveq	r0, r3
    54ec:	mov	r6, #0
    54f0:	lsl	r0, r0, #2
    54f4:	bl	233c <malloc@plt>
    54f8:	add	r3, r4, #4096	; 0x1000
    54fc:	ldr	sl, [r4, #8]
    5500:	ldr	r5, [r3, #1552]	; 0x610
    5504:	mov	fp, #25
    5508:	str	r0, [r4, #32]
    550c:	ldrb	r9, [r3, #552]	; 0x228
    5510:	ldr	r3, [r3, #1556]	; 0x614
    5514:	mov	r8, r0
    5518:	add	r5, r5, r3
    551c:	and	r5, r5, #63	; 0x3f
    5520:	ldr	r3, [r4, #372]	; 0x174
    5524:	cmp	sl, #0
    5528:	ldrbeq	r1, [r3, r5]
    552c:	beq	5548 <btbb_init_hop_reversal@@Base+0x80>
    5530:	ldrb	r0, [r3, r5]
    5534:	mov	r1, fp
    5538:	add	r0, r0, #24
    553c:	bl	f080 <lell_pcapng_close@@Base+0x450>
    5540:	add	r1, r1, #26
    5544:	uxtb	r1, r1
    5548:	cmp	r9, r1
    554c:	streq	r5, [r8, r6, lsl #2]
    5550:	add	r5, r5, #64	; 0x40
    5554:	addeq	r6, r6, #1
    5558:	cmn	r5, #-134217727	; 0xf8000001
    555c:	ble	5520 <btbb_init_hop_reversal@@Base+0x58>
    5560:	mov	r5, #0
    5564:	mov	r0, r4
    5568:	str	r6, [r4, #376]	; 0x178
    556c:	str	r5, [r4, #388]	; 0x184
    5570:	mov	r2, #1
    5574:	mov	r1, #9
    5578:	bl	2288 <btbb_piconet_set_flag@plt>
    557c:	mov	r2, r5
    5580:	mov	r0, r4
    5584:	mov	r1, #5
    5588:	bl	2288 <btbb_piconet_set_flag@plt>
    558c:	mov	r2, r7
    5590:	mov	r0, r4
    5594:	mov	r1, #13
    5598:	bl	2288 <btbb_piconet_set_flag@plt>
    559c:	ldr	r0, [pc, #24]	; 55bc <btbb_init_hop_reversal@@Base+0xf4>
    55a0:	ldr	r1, [r4, #376]	; 0x178
    55a4:	add	r0, pc, r0
    55a8:	bl	2174 <printf@plt>
    55ac:	ldr	r0, [r4, #376]	; 0x178
    55b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    55b4:	andeq	ip, r0, r4, ror #30
    55b8:	andeq	r8, r2, ip, asr pc
    55bc:	andeq	ip, r0, fp, asr #10

000055c0 <btbb_winnow@@Base>:
    55c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    55c4:	mov	r4, r0
    55c8:	ldr	r9, [pc, #428]	; 577c <btbb_winnow@@Base+0x1bc>
    55cc:	ldr	r5, [r0, #376]	; 0x178
    55d0:	mov	r7, #0
    55d4:	mov	r8, #25
    55d8:	add	r9, pc, r9
    55dc:	ldr	r3, [r4, #388]	; 0x184
    55e0:	ldr	r2, [r4, #380]	; 0x17c
    55e4:	cmp	r3, r2
    55e8:	bge	5660 <btbb_winnow@@Base+0xa0>
    55ec:	add	r2, r3, #162	; 0xa2
    55f0:	add	r3, r4, r3
    55f4:	add	r3, r3, #4608	; 0x1200
    55f8:	mov	fp, #0
    55fc:	ldrb	r6, [r3, #40]	; 0x28
    5600:	ldr	sl, [r4, r2, lsl #2]
    5604:	mov	r5, r7
    5608:	mov	r2, fp
    560c:	ldr	r3, [r4, #376]	; 0x178
    5610:	cmp	r2, r3
    5614:	blt	566c <btbb_winnow@@Base+0xac>
    5618:	cmp	r5, #1
    561c:	str	r5, [r4, #376]	; 0x178
    5620:	bne	56e4 <btbb_winnow@@Base+0x124>
    5624:	ldr	r2, [r4, #32]
    5628:	add	r1, r4, #4096	; 0x1000
    562c:	ldr	r3, [r1, #1556]	; 0x614
    5630:	ldr	r0, [r2]
    5634:	lsl	r3, r3, #1
    5638:	rsb	r3, r3, r0, lsl #1
    563c:	ldr	r0, [pc, #316]	; 5780 <btbb_winnow@@Base+0x1c0>
    5640:	str	r3, [r1, #1552]	; 0x610
    5644:	add	r0, pc, r0
    5648:	ldr	r1, [r2]
    564c:	bl	2174 <printf@plt>
    5650:	mov	r2, r5
    5654:	mov	r1, #5
    5658:	mov	r0, r4
    565c:	bl	2288 <btbb_piconet_set_flag@plt>
    5660:	mov	r0, r5
    5664:	add	sp, sp, #12
    5668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    566c:	ldr	r3, [r4, #8]
    5670:	ldr	r0, [r4, #372]	; 0x174
    5674:	cmp	r3, #0
    5678:	ldr	r3, [r4, #32]
    567c:	beq	56d0 <btbb_winnow@@Base+0x110>
    5680:	ldr	r1, [r3, fp]
    5684:	str	r2, [sp, #4]
    5688:	add	r1, sl, r1
    568c:	bic	r1, r1, #-134217728	; 0xf8000000
    5690:	str	r3, [sp]
    5694:	ldrb	r0, [r0, r1]
    5698:	mov	r1, r8
    569c:	add	r0, r0, #24
    56a0:	bl	f080 <lell_pcapng_close@@Base+0x450>
    56a4:	ldr	r3, [sp]
    56a8:	ldr	r2, [sp, #4]
    56ac:	add	r1, r1, #26
    56b0:	uxtb	r1, r1
    56b4:	cmp	r6, r1
    56b8:	add	r2, r2, #1
    56bc:	ldreq	r1, [r3, fp]
    56c0:	add	fp, fp, #4
    56c4:	streq	r1, [r3, r5, lsl #2]
    56c8:	addeq	r5, r5, #1
    56cc:	b	560c <btbb_winnow@@Base+0x4c>
    56d0:	ldr	r1, [r3, fp]
    56d4:	add	r1, sl, r1
    56d8:	bic	r1, r1, #-134217728	; 0xf8000000
    56dc:	ldrb	r1, [r0, r1]
    56e0:	b	56b4 <btbb_winnow@@Base+0xf4>
    56e4:	cmp	r5, #0
    56e8:	bne	56f8 <btbb_winnow@@Base+0x138>
    56ec:	mov	r0, r4
    56f0:	bl	476c <btbb_piconet_get_flag@@Base+0x18>
    56f4:	b	5660 <btbb_winnow@@Base+0xa0>
    56f8:	cmp	r5, #1
    56fc:	beq	5660 <btbb_winnow@@Base+0xa0>
    5700:	ldr	r3, [r4, #380]	; 0x17c
    5704:	cmp	r3, #0
    5708:	ble	576c <btbb_winnow@@Base+0x1ac>
    570c:	ldr	r3, [r4, #388]	; 0x184
    5710:	mov	r1, #12
    5714:	add	r2, r3, #161	; 0xa1
    5718:	add	r3, r4, r3
    571c:	add	r3, r3, #4544	; 0x11c0
    5720:	add	r3, r3, #63	; 0x3f
    5724:	mov	r0, r4
    5728:	ldrb	r3, [r3, #40]	; 0x28
    572c:	ldr	fp, [r4, r2, lsl #2]
    5730:	str	r3, [sp]
    5734:	bl	2264 <btbb_piconet_get_flag@plt>
    5738:	cmp	r0, #0
    573c:	bne	576c <btbb_winnow@@Base+0x1ac>
    5740:	ldr	r3, [sp]
    5744:	add	fp, fp, #1
    5748:	cmp	fp, sl
    574c:	cmpeq	r6, r3
    5750:	bne	576c <btbb_winnow@@Base+0x1ac>
    5754:	mov	r0, r4
    5758:	mov	r2, #1
    575c:	mov	r1, #12
    5760:	bl	2288 <btbb_piconet_set_flag@plt>
    5764:	mov	r0, r9
    5768:	bl	2330 <puts@plt>
    576c:	ldr	r3, [r4, #388]	; 0x184
    5770:	add	r3, r3, #1
    5774:	str	r3, [r4, #388]	; 0x184
    5778:	b	55dc <btbb_winnow@@Base+0x1c>
    577c:	andeq	ip, r0, r2, asr r5
    5780:	andeq	ip, r0, sl, asr #9

00005784 <btbb_uap_from_header@@Base>:
    5784:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5788:	mov	r4, r1
    578c:	ldr	r3, [r0, #2816]	; 0xb00
    5790:	mov	r9, r0
    5794:	mov	r1, #10
    5798:	mov	r0, r4
    579c:	str	r3, [sp]
    57a0:	bl	2264 <btbb_piconet_get_flag@plt>
    57a4:	cmp	r0, #0
    57a8:	addeq	r3, r4, #4096	; 0x1000
    57ac:	ldreq	r2, [sp]
    57b0:	mov	r0, r4
    57b4:	streq	r2, [r3, #1556]	; 0x614
    57b8:	ldrb	r1, [r9, #8]
    57bc:	bl	22ac <btbb_piconet_set_channel_seen@plt>
    57c0:	ldr	r3, [r4, #380]	; 0x17c
    57c4:	cmp	r3, #1000	; 0x3e8
    57c8:	bge	5878 <btbb_uap_from_header@@Base+0xf4>
    57cc:	add	r6, r4, #4096	; 0x1000
    57d0:	ldr	r0, [sp]
    57d4:	ldr	r2, [r6, #1556]	; 0x614
    57d8:	add	r1, r3, #162	; 0xa2
    57dc:	sub	r2, r0, r2
    57e0:	str	r2, [r4, r1, lsl #2]
    57e4:	add	r2, r4, r3
    57e8:	ldrb	r1, [r9, #8]
    57ec:	add	r2, r2, #4608	; 0x1200
    57f0:	add	r3, r3, #1
    57f4:	strb	r1, [r2, #40]	; 0x28
    57f8:	mov	r5, #0
    57fc:	str	r3, [r4, #380]	; 0x17c
    5800:	ldr	r3, [r4, #384]	; 0x180
    5804:	add	fp, r4, #392	; 0x188
    5808:	mov	r7, r5
    580c:	mov	r8, r5
    5810:	add	r3, r3, #1
    5814:	str	r3, [r4, #384]	; 0x180
    5818:	ldr	r3, [fp]
    581c:	cmp	r3, #0
    5820:	blt	5894 <btbb_uap_from_header@@Base+0x110>
    5824:	ldr	r2, [sp]
    5828:	ldr	r3, [r6, #1556]	; 0x614
    582c:	mov	r1, r9
    5830:	sub	r3, r2, r3
    5834:	add	r3, r3, r8
    5838:	and	r3, r3, #63	; 0x3f
    583c:	mov	r0, r3
    5840:	str	r3, [sp, #4]
    5844:	bl	2540 <try_clock@plt>
    5848:	mov	r1, #10
    584c:	mov	sl, r0
    5850:	mov	r0, r4
    5854:	bl	2264 <btbb_piconet_get_flag@plt>
    5858:	ldr	r3, [sp, #4]
    585c:	cmp	r0, #0
    5860:	bne	5940 <btbb_uap_from_header@@Base+0x1bc>
    5864:	mov	r0, r3
    5868:	mov	r1, r9
    586c:	bl	22f4 <crc_check@plt>
    5870:	mov	r3, r0
    5874:	b	5950 <btbb_uap_from_header@@Base+0x1cc>
    5878:	ldr	r0, [pc, #476]	; 5a5c <btbb_uap_from_header@@Base+0x2d8>
    587c:	add	r0, pc, r0
    5880:	bl	2330 <puts@plt>
    5884:	mov	r0, r4
    5888:	bl	476c <btbb_piconet_get_flag@@Base+0x18>
    588c:	mov	r5, #0
    5890:	b	5a1c <btbb_uap_from_header@@Base+0x298>
    5894:	mov	r1, #10
    5898:	mov	r0, r4
    589c:	bl	2264 <btbb_piconet_get_flag@plt>
    58a0:	cmp	r0, #0
    58a4:	beq	5824 <btbb_uap_from_header@@Base+0xa0>
    58a8:	add	r8, r8, #1
    58ac:	cmp	r8, #64	; 0x40
    58b0:	add	fp, fp, #4
    58b4:	bne	5818 <btbb_uap_from_header@@Base+0x94>
    58b8:	mov	r2, #1
    58bc:	mov	r1, #10
    58c0:	mov	r0, r4
    58c4:	bl	2288 <btbb_piconet_set_flag@plt>
    58c8:	cmp	r5, #1
    58cc:	bne	5a48 <btbb_uap_from_header@@Base+0x2c4>
    58d0:	ldr	r3, [r6, #1556]	; 0x614
    58d4:	mov	r1, #2
    58d8:	sub	r3, r7, r3
    58dc:	and	r3, r3, #63	; 0x3f
    58e0:	str	r3, [r6, #1552]	; 0x610
    58e4:	mov	r0, r4
    58e8:	bl	2264 <btbb_piconet_get_flag@plt>
    58ec:	add	r7, r7, #98	; 0x62
    58f0:	ldr	r2, [r4, #384]	; 0x180
    58f4:	cmp	r0, #0
    58f8:	bne	5a38 <btbb_uap_from_header@@Base+0x2b4>
    58fc:	ldr	r0, [pc, #348]	; 5a60 <btbb_uap_from_header@@Base+0x2dc>
    5900:	ldr	r1, [r4, r7, lsl #2]
    5904:	add	r0, pc, r0
    5908:	bl	2174 <printf@plt>
    590c:	ldr	r3, [r4, r7, lsl #2]
    5910:	mov	r2, #1
    5914:	strb	r3, [r4, #28]
    5918:	mov	r1, #4
    591c:	mov	r0, r4
    5920:	bl	2288 <btbb_piconet_set_flag@plt>
    5924:	mov	r2, #1
    5928:	mov	r1, #2
    592c:	mov	r0, r4
    5930:	bl	2288 <btbb_piconet_set_flag@plt>
    5934:	mov	r3, #0
    5938:	str	r3, [r4, #384]	; 0x180
    593c:	b	5a1c <btbb_uap_from_header@@Base+0x298>
    5940:	ldr	r1, [fp]
    5944:	cmp	sl, r1
    5948:	mvnne	r3, #0
    594c:	beq	5864 <btbb_uap_from_header@@Base+0xe0>
    5950:	mov	r1, #2
    5954:	mov	r0, r4
    5958:	str	r3, [sp, #4]
    595c:	bl	2264 <btbb_piconet_get_flag@plt>
    5960:	ldr	r3, [sp, #4]
    5964:	cmp	r0, #0
    5968:	beq	5978 <btbb_uap_from_header@@Base+0x1f4>
    596c:	ldrb	r1, [r4, #28]
    5970:	cmp	r1, sl
    5974:	bne	5998 <btbb_uap_from_header@@Base+0x214>
    5978:	add	r0, r3, #1
    597c:	cmp	r0, #3
    5980:	addls	pc, pc, r0, lsl #2
    5984:	b	59b4 <btbb_uap_from_header@@Base+0x230>
    5988:	b	5998 <btbb_uap_from_header@@Base+0x214>
    598c:	b	5998 <btbb_uap_from_header@@Base+0x214>
    5990:	b	59a4 <btbb_uap_from_header@@Base+0x220>
    5994:	b	59a4 <btbb_uap_from_header@@Base+0x220>
    5998:	mvn	r3, #0
    599c:	str	r3, [fp]
    59a0:	b	58a8 <btbb_uap_from_header@@Base+0x124>
    59a4:	str	sl, [fp]
    59a8:	add	r5, r5, #1
    59ac:	mov	r7, r8
    59b0:	b	58a8 <btbb_uap_from_header@@Base+0x124>
    59b4:	ldr	r3, [r6, #1556]	; 0x614
    59b8:	mov	r1, #2
    59bc:	sub	r8, r8, r3
    59c0:	and	r8, r8, #63	; 0x3f
    59c4:	str	r8, [r6, #1552]	; 0x610
    59c8:	mov	r0, r4
    59cc:	bl	2264 <btbb_piconet_get_flag@plt>
    59d0:	ldr	r2, [r4, #384]	; 0x180
    59d4:	cmp	r0, #0
    59d8:	bne	5a28 <btbb_uap_from_header@@Base+0x2a4>
    59dc:	ldr	r0, [pc, #128]	; 5a64 <btbb_uap_from_header@@Base+0x2e0>
    59e0:	mov	r1, sl
    59e4:	add	r0, pc, r0
    59e8:	bl	2174 <printf@plt>
    59ec:	mov	r2, #1
    59f0:	mov	r1, #4
    59f4:	mov	r0, r4
    59f8:	strb	sl, [r4, #28]
    59fc:	bl	2288 <btbb_piconet_set_flag@plt>
    5a00:	mov	r5, #1
    5a04:	mov	r2, #1
    5a08:	mov	r1, #2
    5a0c:	mov	r0, r4
    5a10:	bl	2288 <btbb_piconet_set_flag@plt>
    5a14:	mov	r3, #0
    5a18:	str	r3, [r4, #384]	; 0x180
    5a1c:	mov	r0, r5
    5a20:	add	sp, sp, #12
    5a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5a28:	ldr	r0, [pc, #56]	; 5a68 <btbb_uap_from_header@@Base+0x2e4>
    5a2c:	ldr	r1, [r6, #1552]	; 0x610
    5a30:	add	r0, pc, r0
    5a34:	b	59e8 <btbb_uap_from_header@@Base+0x264>
    5a38:	ldr	r0, [pc, #44]	; 5a6c <btbb_uap_from_header@@Base+0x2e8>
    5a3c:	ldr	r1, [r6, #1552]	; 0x610
    5a40:	add	r0, pc, r0
    5a44:	b	5908 <btbb_uap_from_header@@Base+0x184>
    5a48:	cmp	r5, #0
    5a4c:	bne	588c <btbb_uap_from_header@@Base+0x108>
    5a50:	mov	r0, r4
    5a54:	bl	476c <btbb_piconet_get_flag@@Base+0x18>
    5a58:	b	5a1c <btbb_uap_from_header@@Base+0x298>
    5a5c:	ldrdeq	ip, [r0], -r0
    5a60:	andeq	ip, r0, fp, ror r2
    5a64:	andeq	ip, r0, lr, lsl #3
    5a68:	andeq	ip, r0, r9, ror r1
    5a6c:	andeq	ip, r0, r6, ror r1

00005a70 <try_hop@@Base>:
    5a70:	push	{r4, r5, r6, r7, r8, lr}
    5a74:	mov	r4, r1
    5a78:	ldrb	r6, [r1, #28]
    5a7c:	mov	r5, r0
    5a80:	bl	2300 <btbb_decode@plt>
    5a84:	mov	r1, #9
    5a88:	mov	r0, r4
    5a8c:	bl	2264 <btbb_piconet_get_flag@plt>
    5a90:	cmp	r0, #0
    5a94:	beq	5b3c <try_hop@@Base+0xcc>
    5a98:	add	r7, r4, #4096	; 0x1000
    5a9c:	ldr	r3, [r4, #380]	; 0x17c
    5aa0:	ldr	r0, [r7, #1556]	; 0x614
    5aa4:	ldr	r2, [r5, #2816]	; 0xb00
    5aa8:	add	r1, r3, #162	; 0xa2
    5aac:	sub	r2, r2, r0
    5ab0:	str	r2, [r4, r1, lsl #2]
    5ab4:	add	r2, r4, r3
    5ab8:	ldrb	r1, [r5, #8]
    5abc:	add	r2, r2, #4608	; 0x1200
    5ac0:	add	r3, r3, #1
    5ac4:	strb	r1, [r2, #40]	; 0x28
    5ac8:	str	r3, [r4, #380]	; 0x17c
    5acc:	ldr	r3, [r4, #384]	; 0x180
    5ad0:	mov	r0, r4
    5ad4:	add	r3, r3, #1
    5ad8:	str	r3, [r4, #384]	; 0x180
    5adc:	bl	230c <btbb_winnow@plt>
    5ae0:	mov	r1, #5
    5ae4:	mov	r0, r4
    5ae8:	bl	2264 <btbb_piconet_get_flag@plt>
    5aec:	cmp	r0, #0
    5af0:	beq	5b10 <try_hop@@Base+0xa0>
    5af4:	ldr	r0, [pc, #212]	; 5bd0 <try_hop@@Base+0x160>
    5af8:	add	r0, pc, r0
    5afc:	bl	2330 <puts@plt>
    5b00:	ldr	r0, [pc, #204]	; 5bd4 <try_hop@@Base+0x164>
    5b04:	ldr	r1, [r7, #1552]	; 0x610
    5b08:	add	r0, pc, r0
    5b0c:	bl	2174 <printf@plt>
    5b10:	mov	r1, #2
    5b14:	mov	r0, r4
    5b18:	bl	2264 <btbb_piconet_get_flag@plt>
    5b1c:	cmp	r0, #0
    5b20:	popne	{r4, r5, r6, r7, r8, pc}
    5b24:	mov	r2, #1
    5b28:	mov	r1, #2
    5b2c:	mov	r0, r4
    5b30:	bl	2288 <btbb_piconet_set_flag@plt>
    5b34:	strb	r6, [r4, #28]
    5b38:	pop	{r4, r5, r6, r7, r8, pc}
    5b3c:	mov	r1, #4
    5b40:	mov	r0, r4
    5b44:	bl	2264 <btbb_piconet_get_flag@plt>
    5b48:	mov	r1, r4
    5b4c:	subs	r7, r0, #0
    5b50:	mov	r0, r5
    5b54:	beq	5b90 <try_hop@@Base+0x120>
    5b58:	bl	21ec <btbb_uap_from_header@plt>
    5b5c:	mov	r1, #5
    5b60:	mov	r0, r4
    5b64:	bl	2264 <btbb_piconet_get_flag@plt>
    5b68:	cmp	r0, #0
    5b6c:	beq	5b10 <try_hop@@Base+0xa0>
    5b70:	ldr	r0, [pc, #96]	; 5bd8 <try_hop@@Base+0x168>
    5b74:	add	r0, pc, r0
    5b78:	bl	2330 <puts@plt>
    5b7c:	add	r3, r4, #4096	; 0x1000
    5b80:	ldr	r0, [pc, #84]	; 5bdc <try_hop@@Base+0x16c>
    5b84:	ldr	r1, [r3, #1552]	; 0x610
    5b88:	add	r0, pc, r0
    5b8c:	b	5b0c <try_hop@@Base+0x9c>
    5b90:	bl	21ec <btbb_uap_from_header@plt>
    5b94:	cmp	r0, #0
    5b98:	beq	5b10 <try_hop@@Base+0xa0>
    5b9c:	ldrb	r3, [r4, #28]
    5ba0:	cmp	r3, r6
    5ba4:	bne	5bc0 <try_hop@@Base+0x150>
    5ba8:	mov	r1, r4
    5bac:	mov	r0, r7
    5bb0:	bl	254c <btbb_init_hop_reversal@plt>
    5bb4:	mov	r0, r4
    5bb8:	bl	230c <btbb_winnow@plt>
    5bbc:	b	5b10 <try_hop@@Base+0xa0>
    5bc0:	ldr	r0, [pc, #24]	; 5be0 <try_hop@@Base+0x170>
    5bc4:	add	r0, pc, r0
    5bc8:	bl	2330 <puts@plt>
    5bcc:	b	5b10 <try_hop@@Base+0xa0>
    5bd0:	andeq	ip, r0, r9, ror #1
    5bd4:	andeq	ip, r0, r5, ror #1
    5bd8:	andeq	ip, r0, sp, rrx
    5bdc:	andeq	ip, r0, r5, rrx
    5be0:	andeq	ip, r0, sp, lsr r0

00005be4 <btbb_print_afh_map@@Base>:
    5be4:	push	{lr}		; (str lr, [sp, #-4]!)
    5be8:	sub	sp, sp, #36	; 0x24
    5bec:	ldrb	ip, [r0, #21]
    5bf0:	ldrb	r3, [r0, #14]
    5bf4:	ldrb	r2, [r0, #13]
    5bf8:	ldrb	r1, [r0, #12]
    5bfc:	str	ip, [sp, #24]
    5c00:	ldrb	ip, [r0, #20]
    5c04:	str	ip, [sp, #20]
    5c08:	ldrb	ip, [r0, #19]
    5c0c:	str	ip, [sp, #16]
    5c10:	ldrb	ip, [r0, #18]
    5c14:	str	ip, [sp, #12]
    5c18:	ldrb	ip, [r0, #17]
    5c1c:	str	ip, [sp, #8]
    5c20:	ldrb	ip, [r0, #16]
    5c24:	str	ip, [sp, #4]
    5c28:	ldrb	r0, [r0, #15]
    5c2c:	str	r0, [sp]
    5c30:	ldr	r0, [pc, #12]	; 5c44 <btbb_print_afh_map@@Base+0x60>
    5c34:	add	r0, pc, r0
    5c38:	bl	2174 <printf@plt>
    5c3c:	add	sp, sp, #36	; 0x24
    5c40:	pop	{pc}		; (ldr pc, [sp], #4)
    5c44:	andeq	fp, r0, r3, ror #31

00005c48 <get_piconet@@Base>:
    5c48:	ldr	r3, [pc, #1160]	; 60d8 <get_piconet@@Base+0x490>
    5c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5c50:	add	r3, pc, r3
    5c54:	sub	sp, sp, #28
    5c58:	ldr	r2, [r3, #8]
    5c5c:	str	r0, [sp, #20]
    5c60:	cmp	r2, #0
    5c64:	ldr	r9, [pc, #1136]	; 60dc <get_piconet@@Base+0x494>
    5c68:	ldr	sl, [pc, #1136]	; 60e0 <get_piconet@@Base+0x498>
    5c6c:	ldr	r8, [pc, #1136]	; 60e4 <get_piconet@@Base+0x49c>
    5c70:	beq	5d34 <get_piconet@@Base+0xec>
    5c74:	ldrb	r1, [sp, #23]
    5c78:	ldrb	r3, [sp, #20]
    5c7c:	ldr	r4, [r2, #8]
    5c80:	mov	r2, #12
    5c84:	add	r3, r3, r9
    5c88:	add	r3, r3, r1, lsl #24
    5c8c:	ldrb	r1, [sp, #22]
    5c90:	add	r6, sp, #20
    5c94:	mov	fp, #4
    5c98:	add	r3, r3, r1, lsl #16
    5c9c:	ldrb	r1, [sp, #21]
    5ca0:	add	r3, r3, r1, lsl #8
    5ca4:	eor	r3, r3, sl
    5ca8:	ldr	r1, [pc, #1080]	; 60e8 <get_piconet@@Base+0x4a0>
    5cac:	sub	r0, r8, r3
    5cb0:	eor	r0, r0, r3, lsl #8
    5cb4:	sub	r1, r1, r3
    5cb8:	sub	r1, r1, r0
    5cbc:	eor	r1, r1, r0, lsr #13
    5cc0:	sub	r3, r3, r0
    5cc4:	sub	r3, r3, r1
    5cc8:	eor	r3, r3, r1, lsr #12
    5ccc:	sub	r0, r0, r1
    5cd0:	sub	r0, r0, r3
    5cd4:	eor	r0, r0, r3, lsl #16
    5cd8:	sub	r1, r1, r3
    5cdc:	sub	r1, r1, r0
    5ce0:	eor	r1, r1, r0, lsr #5
    5ce4:	sub	r3, r3, r0
    5ce8:	sub	r3, r3, r1
    5cec:	eor	r3, r3, r1, lsr #3
    5cf0:	sub	r0, r0, r1
    5cf4:	sub	r0, r0, r3
    5cf8:	eor	r0, r0, r3, lsl #10
    5cfc:	sub	r3, r1, r3
    5d00:	ldr	r1, [r4, #4]
    5d04:	sub	r3, r3, r0
    5d08:	sub	r1, r1, #1
    5d0c:	eor	r3, r3, r0, lsr #15
    5d10:	and	r3, r3, r1
    5d14:	ldr	r1, [r4]
    5d18:	mul	r3, r2, r3
    5d1c:	ldr	r5, [r1, r3]
    5d20:	cmp	r5, #0
    5d24:	ldrne	r3, [r4, #20]
    5d28:	subne	r5, r5, r3
    5d2c:	cmp	r5, #0
    5d30:	bne	5dac <get_piconet@@Base+0x164>
    5d34:	bl	2138 <btbb_piconet_new@plt>
    5d38:	ldr	r5, [sp, #20]
    5d3c:	mov	r1, r5
    5d40:	mov	fp, r0
    5d44:	bl	2564 <btbb_init_piconet@plt>
    5d48:	mov	r0, #40	; 0x28
    5d4c:	bl	233c <malloc@plt>
    5d50:	ldr	r2, [pc, #916]	; 60ec <get_piconet@@Base+0x4a4>
    5d54:	mov	r3, #0
    5d58:	add	r2, pc, r2
    5d5c:	ldr	r7, [r2, #8]
    5d60:	cmp	r7, #0
    5d64:	mov	r4, r0
    5d68:	str	r3, [r0, #16]
    5d6c:	mov	r3, #4
    5d70:	stm	r0, {r5, fp}
    5d74:	add	r6, r0, #8
    5d78:	str	r0, [r4, #28]
    5d7c:	str	r3, [r0, #32]
    5d80:	bne	601c <get_piconet@@Base+0x3d4>
    5d84:	str	r7, [r4, #12]
    5d88:	mov	r0, #44	; 0x2c
    5d8c:	str	r4, [r2, #8]
    5d90:	bl	233c <malloc@plt>
    5d94:	cmp	r0, #0
    5d98:	mov	r5, r0
    5d9c:	str	r0, [r4, #8]
    5da0:	bne	5de8 <get_piconet@@Base+0x1a0>
    5da4:	mvn	r0, #0
    5da8:	bl	2390 <exit@plt>
    5dac:	ldr	r3, [r5, #32]
    5db0:	cmp	r3, #4
    5db4:	bne	5dd0 <get_piconet@@Base+0x188>
    5db8:	mov	r2, fp
    5dbc:	mov	r1, r6
    5dc0:	ldr	r0, [r5, #28]
    5dc4:	bl	2228 <memcmp@plt>
    5dc8:	cmp	r0, #0
    5dcc:	beq	60d0 <get_piconet@@Base+0x488>
    5dd0:	ldr	r5, [r5, #24]
    5dd4:	cmp	r5, #0
    5dd8:	beq	5d34 <get_piconet@@Base+0xec>
    5ddc:	ldr	r3, [r4, #20]
    5de0:	sub	r5, r5, r3
    5de4:	b	5d2c <get_piconet@@Base+0xe4>
    5de8:	mov	r2, #44	; 0x2c
    5dec:	mov	r1, r7
    5df0:	bl	2444 <memset@plt>
    5df4:	mov	r2, #32
    5df8:	mov	r3, #5
    5dfc:	str	r6, [r5, #16]
    5e00:	stmib	r5, {r2, r3}
    5e04:	mov	r2, #8
    5e08:	str	r2, [r5, #20]
    5e0c:	mov	r0, #384	; 0x180
    5e10:	bl	233c <malloc@plt>
    5e14:	cmp	r0, #0
    5e18:	str	r0, [r5]
    5e1c:	beq	5da4 <get_piconet@@Base+0x15c>
    5e20:	mov	r2, #384	; 0x180
    5e24:	mov	r1, r7
    5e28:	bl	2444 <memset@plt>
    5e2c:	ldr	r3, [pc, #700]	; 60f0 <get_piconet@@Base+0x4a8>
    5e30:	str	r3, [r5, #40]	; 0x28
    5e34:	ldr	r3, [pc, #696]	; 60f4 <get_piconet@@Base+0x4ac>
    5e38:	ldr	r1, [pc, #680]	; 60e8 <get_piconet@@Base+0x4a0>
    5e3c:	add	r3, pc, r3
    5e40:	mov	lr, #0
    5e44:	ldr	r2, [r3, #8]
    5e48:	ldr	r5, [r2, #8]
    5e4c:	ldr	r3, [r5, #12]
    5e50:	add	r3, r3, #1
    5e54:	str	r3, [r5, #12]
    5e58:	ldrb	r3, [r4]
    5e5c:	str	r5, [r4, #8]
    5e60:	ldr	r2, [r2, #8]
    5e64:	add	r3, r3, r9
    5e68:	ldrb	r9, [r4, #3]
    5e6c:	add	r3, r3, r9, lsl #24
    5e70:	ldrb	r9, [r4, #2]
    5e74:	add	r3, r3, r9, lsl #16
    5e78:	ldrb	r9, [r4, #1]
    5e7c:	add	r3, r3, r9, lsl #8
    5e80:	eor	r3, r3, sl
    5e84:	sub	r8, r8, r3
    5e88:	eor	r8, r8, r3, lsl #8
    5e8c:	sub	r1, r1, r3
    5e90:	sub	r1, r1, r8
    5e94:	eor	r1, r1, r8, lsr #13
    5e98:	sub	r3, r3, r8
    5e9c:	sub	r3, r3, r1
    5ea0:	eor	r3, r3, r1, lsr #12
    5ea4:	sub	r0, r8, r1
    5ea8:	sub	r0, r0, r3
    5eac:	eor	r0, r0, r3, lsl #16
    5eb0:	sub	r1, r1, r3
    5eb4:	sub	r1, r1, r0
    5eb8:	eor	r1, r1, r0, lsr #5
    5ebc:	sub	r3, r3, r0
    5ec0:	sub	r3, r3, r1
    5ec4:	eor	r3, r3, r1, lsr #3
    5ec8:	sub	r0, r0, r1
    5ecc:	sub	r0, r0, r3
    5ed0:	eor	r0, r0, r3, lsl #10
    5ed4:	sub	r3, r1, r3
    5ed8:	ldr	r1, [r2, #4]
    5edc:	sub	r3, r3, r0
    5ee0:	eor	r3, r3, r0, lsr #15
    5ee4:	sub	r1, r1, #1
    5ee8:	str	r3, [r4, #36]	; 0x24
    5eec:	and	r1, r1, r3
    5ef0:	mov	r3, #12
    5ef4:	ldr	r0, [r2]
    5ef8:	mul	r3, r3, r1
    5efc:	add	r1, r0, r3
    5f00:	ldr	ip, [r0, r3]
    5f04:	ldr	r2, [r1, #4]
    5f08:	cmp	ip, lr
    5f0c:	add	r2, r2, #1
    5f10:	str	r2, [r1, #4]
    5f14:	str	ip, [r4, #24]
    5f18:	str	lr, [r4, #20]
    5f1c:	strne	r6, [ip, #12]
    5f20:	str	r6, [r0, r3]
    5f24:	ldr	r3, [r1, #8]
    5f28:	add	r1, r3, #1
    5f2c:	mov	r3, #10
    5f30:	mul	r3, r3, r1
    5f34:	cmp	r2, r3
    5f38:	bcc	6010 <get_piconet@@Base+0x3c8>
    5f3c:	ldr	r3, [r5, #36]	; 0x24
    5f40:	cmp	r3, #1
    5f44:	beq	6010 <get_piconet@@Base+0x3c8>
    5f48:	ldr	r2, [r5, #4]
    5f4c:	mov	r6, #24
    5f50:	mul	r6, r6, r2
    5f54:	mov	r0, r6
    5f58:	bl	233c <malloc@plt>
    5f5c:	subs	sl, r0, #0
    5f60:	beq	5da4 <get_piconet@@Base+0x15c>
    5f64:	mov	r2, r6
    5f68:	mov	r1, #0
    5f6c:	bl	2444 <memset@plt>
    5f70:	ldr	r3, [r5, #4]
    5f74:	ldr	r2, [r5, #12]
    5f78:	str	r3, [sp]
    5f7c:	lsl	r3, r3, #1
    5f80:	sub	r3, r3, #1
    5f84:	str	r3, [sp, #4]
    5f88:	ldr	r1, [sp, #4]
    5f8c:	ldr	r3, [r5, #8]
    5f90:	tst	r2, r1
    5f94:	add	r3, r3, #1
    5f98:	movne	r9, #1
    5f9c:	moveq	r9, #0
    5fa0:	add	r9, r9, r2, lsr r3
    5fa4:	mov	r2, #12
    5fa8:	mov	r6, #0
    5fac:	str	r9, [r5, #24]
    5fb0:	str	r6, [r5, #28]
    5fb4:	ldr	r3, [sp]
    5fb8:	cmp	r6, r3
    5fbc:	bne	603c <get_piconet@@Base+0x3f4>
    5fc0:	ldr	r0, [r5]
    5fc4:	bl	21bc <free@plt>
    5fc8:	ldr	r3, [r4, #8]
    5fcc:	ldr	r2, [r3, #4]
    5fd0:	ldr	r1, [r3, #12]
    5fd4:	str	sl, [r3]
    5fd8:	lsl	r2, r2, #1
    5fdc:	str	r2, [r3, #4]
    5fe0:	ldr	r2, [r3, #8]
    5fe4:	add	r2, r2, #1
    5fe8:	str	r2, [r3, #8]
    5fec:	ldr	r2, [r3, #28]
    5ff0:	cmp	r2, r1, lsr #1
    5ff4:	movls	r2, #0
    5ff8:	ldrhi	r2, [r3, #32]
    5ffc:	addhi	r2, r2, #1
    6000:	cmp	r2, #1
    6004:	str	r2, [r3, #32]
    6008:	movhi	r2, #1
    600c:	strhi	r2, [r3, #36]	; 0x24
    6010:	mov	r0, fp
    6014:	add	sp, sp, #28
    6018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    601c:	ldr	r2, [r7, #8]
    6020:	ldr	r3, [r2, #16]
    6024:	ldr	r1, [r2, #20]
    6028:	str	r4, [r3, #8]
    602c:	sub	r3, r3, r1
    6030:	str	r3, [r4, #12]
    6034:	str	r6, [r2, #16]
    6038:	b	5e34 <get_piconet@@Base+0x1ec>
    603c:	mul	r3, r2, r6
    6040:	ldr	r1, [r5]
    6044:	ldr	r7, [r1, r3]
    6048:	cmp	r7, #0
    604c:	addeq	r6, r6, #1
    6050:	beq	5fb4 <get_piconet@@Base+0x36c>
    6054:	ldr	r3, [r7, #16]
    6058:	ldr	r8, [r7, #28]
    605c:	str	r3, [sp, #8]
    6060:	ldr	r3, [sp, #4]
    6064:	and	r8, r8, r3
    6068:	mul	r8, r2, r8
    606c:	add	r3, sl, r8
    6070:	str	r3, [sp, #16]
    6074:	ldr	r0, [r3, #4]
    6078:	add	r0, r0, #1
    607c:	cmp	r9, r0
    6080:	str	r0, [r3, #4]
    6084:	bcs	60ac <get_piconet@@Base+0x464>
    6088:	ldr	r1, [r5, #28]
    608c:	str	r2, [sp, #12]
    6090:	add	r1, r1, #1
    6094:	str	r1, [r5, #28]
    6098:	mov	r1, r9
    609c:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    60a0:	ldr	r3, [sp, #16]
    60a4:	ldr	r2, [sp, #12]
    60a8:	str	r0, [r3, #8]
    60ac:	mov	r3, #0
    60b0:	str	r3, [r7, #12]
    60b4:	ldr	r3, [sl, r8]
    60b8:	cmp	r3, #0
    60bc:	str	r3, [r7, #16]
    60c0:	strne	r7, [r3, #12]
    60c4:	str	r7, [sl, r8]
    60c8:	ldr	r7, [sp, #8]
    60cc:	b	6048 <get_piconet@@Base+0x400>
    60d0:	ldr	fp, [r5, #4]
    60d4:	b	6010 <get_piconet@@Base+0x3c8>
    60d8:	andeq	r2, r2, r0, ror #10
    60dc:	tsteq	r2, sp, lsl #2
    60e0:	andeq	pc, r7, sp, ror #14
    60e4:	svcls	0x0049bac6
    60e8:	mcr2	14, 7, fp, cr13, cr3, {7}
    60ec:	andeq	r2, r2, r8, asr r4
    60f0:	andsge	r1, r1, r1, ror #31
    60f4:	andeq	r2, r2, r4, ror r3

000060f8 <btbb_next_survey_result@@Base>:
    60f8:	ldr	r3, [pc, #44]	; 612c <btbb_next_survey_result@@Base+0x34>
    60fc:	push	{r4, lr}
    6100:	add	r3, pc, r3
    6104:	ldr	r0, [r3, #8]
    6108:	cmp	r0, #0
    610c:	moveq	r4, r0
    6110:	beq	6124 <btbb_next_survey_result@@Base+0x2c>
    6114:	ldr	r2, [r0, #16]
    6118:	ldr	r4, [r0, #4]
    611c:	str	r2, [r3, #8]
    6120:	bl	21bc <free@plt>
    6124:	mov	r0, r4
    6128:	pop	{r4, pc}
    612c:	strheq	r2, [r2], -r0

00006130 <btbb_process_packet@@Base>:
    6130:	ldr	r3, [pc, #364]	; 62a4 <btbb_process_packet@@Base+0x174>
    6134:	push	{r4, r5, r6, r7, r8, lr}
    6138:	mov	r4, r0
    613c:	ldr	r7, [pc, r3]
    6140:	cmp	r7, #0
    6144:	beq	619c <btbb_process_packet@@Base+0x6c>
    6148:	bl	2474 <btbb_packet_get_lap@plt>
    614c:	bl	24a4 <get_piconet@plt>
    6150:	ldrb	r1, [r4, #8]
    6154:	mov	r5, r0
    6158:	bl	22ac <btbb_piconet_set_channel_seen@plt>
    615c:	mov	r0, r4
    6160:	bl	2258 <btbb_header_present@plt>
    6164:	cmp	r0, #0
    6168:	bne	6178 <btbb_process_packet@@Base+0x48>
    616c:	mov	r6, #0
    6170:	mov	r0, r6
    6174:	pop	{r4, r5, r6, r7, r8, pc}
    6178:	mov	r1, #2
    617c:	mov	r0, r5
    6180:	bl	2264 <btbb_piconet_get_flag@plt>
    6184:	subs	r6, r0, #0
    6188:	moveq	r1, r5
    618c:	moveq	r0, r4
    6190:	bne	616c <btbb_process_packet@@Base+0x3c>
    6194:	bl	21ec <btbb_uap_from_header@plt>
    6198:	b	6170 <btbb_process_packet@@Base+0x40>
    619c:	cmp	r1, #0
    61a0:	mov	r5, r1
    61a4:	beq	616c <btbb_process_packet@@Base+0x3c>
    61a8:	ldrb	r1, [r0, #8]
    61ac:	mov	r0, r5
    61b0:	bl	22ac <btbb_piconet_set_channel_seen@plt>
    61b4:	mov	r1, #3
    61b8:	mov	r0, r5
    61bc:	bl	2264 <btbb_piconet_get_flag@plt>
    61c0:	cmp	r0, #0
    61c4:	beq	616c <btbb_process_packet@@Base+0x3c>
    61c8:	mov	r0, r4
    61cc:	bl	2258 <btbb_header_present@plt>
    61d0:	cmp	r0, #0
    61d4:	beq	616c <btbb_process_packet@@Base+0x3c>
    61d8:	mov	r1, #14
    61dc:	mov	r0, r5
    61e0:	bl	2264 <btbb_piconet_get_flag@plt>
    61e4:	subs	r6, r0, #0
    61e8:	mov	r0, r5
    61ec:	beq	624c <btbb_process_packet@@Base+0x11c>
    61f0:	bl	221c <btbb_piconet_get_uap@plt>
    61f4:	mov	r1, r0
    61f8:	mov	r0, r4
    61fc:	bl	22c4 <btbb_packet_set_uap@plt>
    6200:	mov	r2, #1
    6204:	mov	r1, #4
    6208:	mov	r0, r4
    620c:	bl	21a4 <btbb_packet_set_flag@plt>
    6210:	mov	r2, #1
    6214:	mov	r1, #5
    6218:	mov	r0, r4
    621c:	bl	21a4 <btbb_packet_set_flag@plt>
    6220:	mov	r0, r4
    6224:	bl	2300 <btbb_decode@plt>
    6228:	subs	r6, r0, #0
    622c:	beq	623c <btbb_process_packet@@Base+0x10c>
    6230:	mov	r0, r4
    6234:	bl	2528 <btbb_print_packet@plt>
    6238:	b	616c <btbb_process_packet@@Base+0x3c>
    623c:	ldr	r0, [pc, #100]	; 62a8 <btbb_process_packet@@Base+0x178>
    6240:	add	r0, pc, r0
    6244:	bl	2330 <puts@plt>
    6248:	b	6170 <btbb_process_packet@@Base+0x40>
    624c:	bl	221c <btbb_piconet_get_uap@plt>
    6250:	mov	r1, r5
    6254:	cmp	r0, #0
    6258:	mov	r0, r4
    625c:	beq	6194 <btbb_process_packet@@Base+0x64>
    6260:	bl	2348 <try_hop@plt>
    6264:	mov	r1, #4
    6268:	mov	r0, r5
    626c:	bl	2264 <btbb_piconet_get_flag@plt>
    6270:	cmp	r0, #0
    6274:	beq	616c <btbb_process_packet@@Base+0x3c>
    6278:	mov	r1, #5
    627c:	mov	r0, r5
    6280:	bl	2264 <btbb_piconet_get_flag@plt>
    6284:	cmp	r0, #0
    6288:	beq	616c <btbb_process_packet@@Base+0x3c>
    628c:	mov	r2, #1
    6290:	mov	r1, #14
    6294:	mov	r0, r5
    6298:	bl	2288 <btbb_piconet_set_flag@plt>
    629c:	mvn	r6, #0
    62a0:	b	6170 <btbb_process_packet@@Base+0x40>
    62a4:	andeq	r2, r2, r4, ror r0
    62a8:	andeq	fp, r0, ip, lsl #20
    62ac:	andeq	r0, r0, r0
    62b0:	push	{r4, r5, r6, r7, r8, lr}
    62b4:	add	r5, r1, r2
    62b8:	mov	r1, r0
    62bc:	ldr	r0, [pc, #88]	; 631c <btbb_process_packet@@Base+0x1ec>
    62c0:	ldrb	r2, [r5, #5]
    62c4:	add	r0, pc, r0
    62c8:	mov	r6, r3
    62cc:	bl	2174 <printf@plt>
    62d0:	ldr	r7, [pc, #72]	; 6320 <btbb_process_packet@@Base+0x1f0>
    62d4:	mov	r4, #4
    62d8:	add	r7, pc, r7
    62dc:	ldrb	r1, [r5, r4]
    62e0:	mov	r0, r7
    62e4:	bl	2174 <printf@plt>
    62e8:	subs	r4, r4, #1
    62ec:	bcs	62dc <btbb_process_packet@@Base+0x1ac>
    62f0:	cmp	r6, #0
    62f4:	bne	6310 <btbb_process_packet@@Base+0x1e0>
    62f8:	ldr	r1, [pc, #36]	; 6324 <btbb_process_packet@@Base+0x1f4>
    62fc:	add	r1, pc, r1
    6300:	ldr	r0, [pc, #32]	; 6328 <btbb_process_packet@@Base+0x1f8>
    6304:	pop	{r4, r5, r6, r7, r8, lr}
    6308:	add	r0, pc, r0
    630c:	b	2174 <printf@plt>
    6310:	ldr	r1, [pc, #20]	; 632c <btbb_process_packet@@Base+0x1fc>
    6314:	add	r1, pc, r1
    6318:	b	6300 <btbb_process_packet@@Base+0x1d0>
    631c:	andeq	fp, r0, lr, ror #23
    6320:	andeq	fp, r0, r5, ror #23
    6324:	andeq	fp, r0, pc, lsr #23
    6328:			; <UNDEFINED> instruction: 0x0000bbbb
    632c:	muleq	r0, r0, fp
    6330:	add	r3, r1, r2
    6334:	ldrb	ip, [r3, #1]
    6338:	ldrb	r3, [r1, r2]
    633c:	mov	r1, r0
    6340:	ldr	r0, [pc, #12]	; 6354 <btbb_process_packet@@Base+0x224>
    6344:	orr	r3, r3, ip, lsl #8
    6348:	mov	r2, r3
    634c:	add	r0, pc, r0
    6350:	b	2174 <printf@plt>
    6354:	andeq	fp, r0, lr, ror fp
    6358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    635c:	vpush	{d8}
    6360:	vldr	d8, [pc, #968]	; 6730 <btbb_process_packet@@Base+0x600>
    6364:	ldr	r3, [pc, #972]	; 6738 <btbb_process_packet@@Base+0x608>
    6368:	mov	r6, r0
    636c:	sub	sp, sp, #36	; 0x24
    6370:	mov	sl, r1
    6374:	mov	r9, #0
    6378:	add	r3, pc, r3
    637c:	str	r3, [sp, #8]
    6380:	cmp	r9, sl
    6384:	blt	6394 <btbb_process_packet@@Base+0x264>
    6388:	add	sp, sp, #36	; 0x24
    638c:	vpop	{d8}
    6390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6394:	ldrb	r4, [r6, r9]
    6398:	add	r7, r9, #1
    639c:	mov	r5, r9
    63a0:	add	r8, r6, r9
    63a4:	add	r9, r4, r7
    63a8:	cmp	sl, r9
    63ac:	bge	63d4 <btbb_process_packet@@Base+0x2a4>
    63b0:	ldr	r0, [pc, #900]	; 673c <btbb_process_packet@@Base+0x60c>
    63b4:	mov	r3, sl
    63b8:	mov	r2, r4
    63bc:	mov	r1, r7
    63c0:	add	r0, pc, r0
    63c4:	add	sp, sp, #36	; 0x24
    63c8:	vpop	{d8}
    63cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63d0:	b	2174 <printf@plt>
    63d4:	cmp	r4, #0
    63d8:	bne	63f4 <btbb_process_packet@@Base+0x2c4>
    63dc:	ldr	r0, [pc, #860]	; 6740 <btbb_process_packet@@Base+0x610>
    63e0:	add	r0, pc, r0
    63e4:	add	sp, sp, #36	; 0x24
    63e8:	vpop	{d8}
    63ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63f0:	b	2330 <puts@plt>
    63f4:	ldrb	fp, [r6, r7]
    63f8:	ldr	r0, [pc, #836]	; 6744 <btbb_process_packet@@Base+0x614>
    63fc:	mov	r1, fp
    6400:	add	r0, pc, r0
    6404:	bl	2174 <printf@plt>
    6408:	cmp	fp, #7
    640c:	beq	6830 <btbb_process_packet@@Base+0x700>
    6410:	bhi	65a4 <btbb_process_packet@@Base+0x474>
    6414:	cmp	fp, #2
    6418:	beq	67e4 <btbb_process_packet@@Base+0x6b4>
    641c:	bhi	646c <btbb_process_packet@@Base+0x33c>
    6420:	cmp	fp, #1
    6424:	beq	6690 <btbb_process_packet@@Base+0x560>
    6428:	mov	r0, #10
    642c:	bl	2450 <putchar@plt>
    6430:	ldr	r0, [pc, #784]	; 6748 <btbb_process_packet@@Base+0x618>
    6434:	ldr	r8, [pc, #784]	; 674c <btbb_process_packet@@Base+0x61c>
    6438:	add	r0, pc, r0
    643c:	bl	2174 <printf@plt>
    6440:	add	r7, r5, #1
    6444:	add	r7, r6, r7
    6448:	add	r5, r6, r5
    644c:	add	r8, pc, r8
    6450:	sub	r3, r7, r5
    6454:	cmp	r3, r4
    6458:	bge	6720 <btbb_process_packet@@Base+0x5f0>
    645c:	ldrb	r1, [r7, #1]!
    6460:	mov	r0, r8
    6464:	bl	2174 <printf@plt>
    6468:	b	6450 <btbb_process_packet@@Base+0x320>
    646c:	cmp	fp, #3
    6470:	beq	6824 <btbb_process_packet@@Base+0x6f4>
    6474:	cmp	fp, #6
    6478:	bne	6428 <btbb_process_packet@@Base+0x2f8>
    647c:	ldr	r0, [pc, #716]	; 6750 <btbb_process_packet@@Base+0x620>
    6480:	add	r0, pc, r0
    6484:	sub	r4, r4, #1
    6488:	bl	2330 <puts@plt>
    648c:	ands	r8, r4, #15
    6490:	bne	683c <btbb_process_packet@@Base+0x70c>
    6494:	ldr	r7, [pc, #696]	; 6754 <btbb_process_packet@@Base+0x624>
    6498:	add	r5, r5, #1
    649c:	ldr	r3, [pc, #692]	; 6758 <btbb_process_packet@@Base+0x628>
    64a0:	add	r5, r6, r5
    64a4:	add	r7, pc, r7
    64a8:	add	r3, pc, r3
    64ac:	str	r3, [sp, #4]
    64b0:	cmp	r8, r4
    64b4:	bge	6380 <btbb_process_packet@@Base+0x250>
    64b8:	and	r3, r8, #15
    64bc:	mvn	r2, r3
    64c0:	ldrb	r1, [r5, #1]!
    64c4:	add	r0, sp, #16
    64c8:	add	r2, r2, #16
    64cc:	cmp	r3, #15
    64d0:	strb	r1, [r0, r2]
    64d4:	bne	659c <btbb_process_packet@@Base+0x46c>
    64d8:	ldr	r0, [sp, #8]
    64dc:	bl	2174 <printf@plt>
    64e0:	add	fp, sp, #16
    64e4:	mov	r3, #0
    64e8:	ldrb	r1, [fp, r3]
    64ec:	mov	r0, r7
    64f0:	str	r3, [sp, #12]
    64f4:	bl	2174 <printf@plt>
    64f8:	ldr	r3, [sp, #12]
    64fc:	add	r3, r3, #1
    6500:	cmp	r3, #4
    6504:	bne	64e8 <btbb_process_packet@@Base+0x3b8>
    6508:	mov	r0, #45	; 0x2d
    650c:	bl	2450 <putchar@plt>
    6510:	ldrb	r1, [sp, #20]
    6514:	mov	r0, r7
    6518:	bl	2174 <printf@plt>
    651c:	ldrb	r1, [sp, #21]
    6520:	mov	r0, r7
    6524:	bl	2174 <printf@plt>
    6528:	mov	r0, #45	; 0x2d
    652c:	bl	2450 <putchar@plt>
    6530:	ldrb	r1, [sp, #22]
    6534:	mov	r0, r7
    6538:	bl	2174 <printf@plt>
    653c:	ldrb	r1, [sp, #23]
    6540:	mov	r0, r7
    6544:	bl	2174 <printf@plt>
    6548:	mov	r0, #45	; 0x2d
    654c:	bl	2450 <putchar@plt>
    6550:	ldrb	r1, [sp, #24]
    6554:	mov	r0, r7
    6558:	bl	2174 <printf@plt>
    655c:	ldrb	r1, [sp, #25]
    6560:	mov	r0, r7
    6564:	bl	2174 <printf@plt>
    6568:	mov	r0, #45	; 0x2d
    656c:	bl	2450 <putchar@plt>
    6570:	mov	r3, #10
    6574:	ldrb	r1, [fp, r3]
    6578:	ldr	r0, [sp, #4]
    657c:	str	r3, [sp, #12]
    6580:	bl	2174 <printf@plt>
    6584:	ldr	r3, [sp, #12]
    6588:	add	r3, r3, #1
    658c:	cmp	r3, #16
    6590:	bne	6574 <btbb_process_packet@@Base+0x444>
    6594:	mov	r0, #10
    6598:	bl	2450 <putchar@plt>
    659c:	add	r8, r8, #1
    65a0:	b	64b0 <btbb_process_packet@@Base+0x380>
    65a4:	cmp	fp, #18
    65a8:	beq	68b8 <btbb_process_packet@@Base+0x788>
    65ac:	bhi	65f4 <btbb_process_packet@@Base+0x4c4>
    65b0:	cmp	fp, #9
    65b4:	beq	6850 <btbb_process_packet@@Base+0x720>
    65b8:	cmp	fp, #10
    65bc:	bne	6428 <btbb_process_packet@@Base+0x2f8>
    65c0:	ldr	r0, [pc, #404]	; 675c <btbb_process_packet@@Base+0x62c>
    65c4:	add	r0, pc, r0
    65c8:	bl	2330 <puts@plt>
    65cc:	ldr	r0, [pc, #396]	; 6760 <btbb_process_packet@@Base+0x630>
    65d0:	add	r0, pc, r0
    65d4:	bl	2174 <printf@plt>
    65d8:	cmp	r4, #2
    65dc:	bne	68a8 <btbb_process_packet@@Base+0x778>
    65e0:	add	r7, r6, r7
    65e4:	ldr	r0, [pc, #376]	; 6764 <btbb_process_packet@@Base+0x634>
    65e8:	ldrb	r1, [r7, #1]
    65ec:	add	r0, pc, r0
    65f0:	b	6848 <btbb_process_packet@@Base+0x718>
    65f4:	cmp	fp, #22
    65f8:	beq	6940 <btbb_process_packet@@Base+0x810>
    65fc:	cmp	fp, #255	; 0xff
    6600:	bne	6428 <btbb_process_packet@@Base+0x2f8>
    6604:	ldr	r0, [pc, #348]	; 6768 <btbb_process_packet@@Base+0x638>
    6608:	add	r0, pc, r0
    660c:	bl	2330 <puts@plt>
    6610:	ldr	r0, [pc, #340]	; 676c <btbb_process_packet@@Base+0x63c>
    6614:	add	r0, pc, r0
    6618:	bl	2174 <printf@plt>
    661c:	cmp	r4, #2
    6620:	ble	69d0 <btbb_process_packet@@Base+0x8a0>
    6624:	add	r7, r6, r7
    6628:	ldr	r8, [pc, #320]	; 6770 <btbb_process_packet@@Base+0x640>
    662c:	ldrb	r0, [r7, #2]
    6630:	ldrb	r3, [r7, #1]
    6634:	add	r7, r5, #3
    6638:	add	r7, r6, r7
    663c:	orr	r0, r3, r0, lsl #8
    6640:	bl	248c <bt_compidtostr@plt>
    6644:	add	r5, r6, r5
    6648:	add	r8, pc, r8
    664c:	mov	r1, r0
    6650:	ldr	r0, [pc, #284]	; 6774 <btbb_process_packet@@Base+0x644>
    6654:	add	r0, pc, r0
    6658:	bl	2174 <printf@plt>
    665c:	ldr	r0, [pc, #276]	; 6778 <btbb_process_packet@@Base+0x648>
    6660:	add	r0, pc, r0
    6664:	bl	2174 <printf@plt>
    6668:	ldr	r0, [pc, #268]	; 677c <btbb_process_packet@@Base+0x64c>
    666c:	add	r0, pc, r0
    6670:	bl	2174 <printf@plt>
    6674:	sub	r3, r7, r5
    6678:	cmp	r4, r3
    667c:	ble	6720 <btbb_process_packet@@Base+0x5f0>
    6680:	ldrb	r1, [r7, #1]!
    6684:	mov	r0, r8
    6688:	bl	2174 <printf@plt>
    668c:	b	6674 <btbb_process_packet@@Base+0x544>
    6690:	ldr	r0, [pc, #232]	; 6780 <btbb_process_packet@@Base+0x650>
    6694:	ldr	r5, [pc, #232]	; 6784 <btbb_process_packet@@Base+0x654>
    6698:	add	r0, pc, r0
    669c:	bl	2330 <puts@plt>
    66a0:	ldr	r0, [pc, #224]	; 6788 <btbb_process_packet@@Base+0x658>
    66a4:	add	r7, r7, #1
    66a8:	add	r0, pc, r0
    66ac:	bl	2174 <printf@plt>
    66b0:	mov	r4, #7
    66b4:	add	r7, r6, r7
    66b8:	add	r5, pc, r5
    66bc:	ldrb	r1, [r7]
    66c0:	mov	r0, r5
    66c4:	asr	r1, r1, r4
    66c8:	and	r1, r1, #1
    66cc:	bl	2174 <printf@plt>
    66d0:	subs	r4, r4, #1
    66d4:	bcs	66bc <btbb_process_packet@@Base+0x58c>
    66d8:	mov	r0, #10
    66dc:	bl	2450 <putchar@plt>
    66e0:	ldr	r8, [pc, #164]	; 678c <btbb_process_packet@@Base+0x65c>
    66e4:	ldr	r5, [pc, #164]	; 6790 <btbb_process_packet@@Base+0x660>
    66e8:	mov	r4, #0
    66ec:	add	r8, pc, r8
    66f0:	add	r5, pc, r5
    66f4:	ldrb	r3, [r7]
    66f8:	asr	r3, r3, r4
    66fc:	tst	r3, #1
    6700:	beq	6714 <btbb_process_packet@@Base+0x5e4>
    6704:	mov	r0, r8
    6708:	bl	2174 <printf@plt>
    670c:	ldr	r0, [r5, r4, lsl #2]
    6710:	bl	2330 <puts@plt>
    6714:	add	r4, r4, #1
    6718:	cmp	r4, #8
    671c:	bne	66f4 <btbb_process_packet@@Base+0x5c4>
    6720:	mov	r0, #10
    6724:	bl	2450 <putchar@plt>
    6728:	b	6380 <btbb_process_packet@@Base+0x250>
    672c:	nop			; (mov r0, r0)
    6730:	andeq	r0, r0, r0
    6734:	svccc	0x00f40000
    6738:	ldrdeq	fp, [r0], -ip
    673c:	andeq	fp, r0, fp, lsl fp
    6740:	andeq	fp, r0, r5, lsr fp
    6744:	andeq	fp, r0, r2, lsr fp
    6748:	andeq	fp, r0, ip, lsl fp
    674c:	muleq	r0, r1, ip
    6750:	andeq	fp, r0, r2, lsr fp
    6754:	andeq	fp, r0, sl, lsr ip
    6758:	andeq	fp, r0, r6, lsr ip
    675c:	andeq	fp, r0, r3, ror sl
    6760:	andeq	fp, r0, r4, lsl #19
    6764:	andeq	fp, r0, sp, asr sl
    6768:	andeq	fp, r0, ip, lsl #22
    676c:	andeq	fp, r0, r0, asr #18
    6770:	muleq	r0, r5, sl
    6774:	ldrdeq	fp, [r0], -lr
    6778:	strdeq	fp, [r0], -r4
    677c:	andeq	fp, r0, r7, asr #23
    6780:	andeq	fp, r0, ip, lsr #17
    6784:	muleq	r0, r5, r8
    6788:	andeq	fp, r0, ip, lsr #17
    678c:	andeq	fp, r0, r4, ror #16
    6790:	andeq	r1, r2, r0, ror #14
    6794:	andeq	fp, r0, r8, ror r7
    6798:	muleq	r0, sp, r7
    679c:	andeq	fp, r0, r0, ror #14
    67a0:	andeq	fp, r0, r7, lsr #15
    67a4:			; <UNDEFINED> instruction: 0x0000b7b0
    67a8:	andeq	fp, r0, r8, asr #15
    67ac:	andeq	fp, r0, ip, ror #13
    67b0:	andeq	fp, r0, r1, lsr #15
    67b4:			; <UNDEFINED> instruction: 0x0000b7b5
    67b8:	andeq	fp, r0, ip, lsl #13
    67bc:	andeq	fp, r0, ip, lsr #15
    67c0:	andeq	fp, r0, r9, lsl #15
    67c4:	andeq	fp, r0, r0, ror r7
    67c8:	andeq	fp, r0, r4, lsl #15
    67cc:	andeq	fp, r0, r4, lsl #12
    67d0:	andeq	fp, r0, r8, ror #14
    67d4:	andeq	fp, r0, r7, asr r7
    67d8:	andeq	fp, r0, r1, asr #14
    67dc:	andeq	fp, r0, r9, lsr #14
    67e0:	andeq	fp, r0, r9, lsl r7
    67e4:	ldr	r0, [pc, #-88]	; 6794 <btbb_process_packet@@Base+0x664>
    67e8:	add	r0, pc, r0
    67ec:	sub	r4, r4, #1
    67f0:	bl	2330 <puts@plt>
    67f4:	tst	r4, #1
    67f8:	bne	6380 <btbb_process_packet@@Base+0x250>
    67fc:	ldr	r7, [pc, #-108]	; 6798 <btbb_process_packet@@Base+0x668>
    6800:	add	r5, r6, r5
    6804:	add	r7, pc, r7
    6808:	sub	r3, r8, r5
    680c:	cmp	r4, r3
    6810:	ble	6380 <btbb_process_packet@@Base+0x250>
    6814:	ldrh	r1, [r8, #2]!
    6818:	mov	r0, r7
    681c:	bl	2174 <printf@plt>
    6820:	b	6808 <btbb_process_packet@@Base+0x6d8>
    6824:	ldr	r0, [pc, #-144]	; 679c <btbb_process_packet@@Base+0x66c>
    6828:	add	r0, pc, r0
    682c:	b	67ec <btbb_process_packet@@Base+0x6bc>
    6830:	ldr	r0, [pc, #-152]	; 67a0 <btbb_process_packet@@Base+0x670>
    6834:	add	r0, pc, r0
    6838:	b	6484 <btbb_process_packet@@Base+0x354>
    683c:	ldr	r0, [pc, #-160]	; 67a4 <btbb_process_packet@@Base+0x674>
    6840:	mov	r1, r4
    6844:	add	r0, pc, r0
    6848:	bl	2174 <printf@plt>
    684c:	b	6380 <btbb_process_packet@@Base+0x250>
    6850:	ldr	r0, [pc, #-176]	; 67a8 <btbb_process_packet@@Base+0x678>
    6854:	add	r7, r5, #1
    6858:	add	r0, pc, r0
    685c:	bl	2330 <puts@plt>
    6860:	ldr	r0, [pc, #-188]	; 67ac <btbb_process_packet@@Base+0x67c>
    6864:	add	r7, r6, r7
    6868:	add	r0, pc, r0
    686c:	bl	2174 <printf@plt>
    6870:	add	r5, r6, r5
    6874:	sub	r3, r7, r5
    6878:	cmp	r4, r3
    687c:	ble	6720 <btbb_process_packet@@Base+0x5f0>
    6880:	bl	2384 <__ctype_b_loc@plt>
    6884:	ldrb	r3, [r7, #1]!
    6888:	lsl	r2, r3, #1
    688c:	ldr	r1, [r0]
    6890:	ldrh	r2, [r1, r2]
    6894:	tst	r2, #16384	; 0x4000
    6898:	movne	r0, r3
    689c:	moveq	r0, #46	; 0x2e
    68a0:	bl	2450 <putchar@plt>
    68a4:	b	6874 <btbb_process_packet@@Base+0x744>
    68a8:	ldr	r0, [pc, #-256]	; 67b0 <btbb_process_packet@@Base+0x680>
    68ac:	sub	r1, r4, #1
    68b0:	add	r0, pc, r0
    68b4:	b	6848 <btbb_process_packet@@Base+0x718>
    68b8:	ldr	r0, [pc, #-268]	; 67b4 <btbb_process_packet@@Base+0x684>
    68bc:	add	r0, pc, r0
    68c0:	bl	2330 <puts@plt>
    68c4:	ldr	r0, [pc, #-276]	; 67b8 <btbb_process_packet@@Base+0x688>
    68c8:	add	r0, pc, r0
    68cc:	bl	2174 <printf@plt>
    68d0:	cmp	r4, #5
    68d4:	bne	6930 <btbb_process_packet@@Base+0x800>
    68d8:	add	r7, r6, r7
    68dc:	ldr	r0, [pc, #-296]	; 67bc <btbb_process_packet@@Base+0x68c>
    68e0:	ldrb	r2, [r7, #2]
    68e4:	ldrb	r3, [r7, #1]
    68e8:	add	r0, pc, r0
    68ec:	orr	r3, r3, r2, lsl #8
    68f0:	vmov	s15, r3
    68f4:	vcvt.f64.s32	d7, s15
    68f8:	vmul.f64	d7, d7, d8
    68fc:	vmov	r2, r3, d7
    6900:	bl	2174 <printf@plt>
    6904:	ldrb	r2, [r7, #4]
    6908:	ldrb	r3, [r7, #3]
    690c:	ldr	r0, [pc, #-340]	; 67c0 <btbb_process_packet@@Base+0x690>
    6910:	orr	r3, r3, r2, lsl #8
    6914:	add	r0, pc, r0
    6918:	vmov	s15, r3
    691c:	vcvt.f64.s32	d7, s15
    6920:	vmul.f64	d7, d7, d8
    6924:	vmov	r2, r3, d7
    6928:	bl	2174 <printf@plt>
    692c:	b	6380 <btbb_process_packet@@Base+0x250>
    6930:	ldr	r0, [pc, #-372]	; 67c4 <btbb_process_packet@@Base+0x694>
    6934:	sub	r1, r4, #1
    6938:	add	r0, pc, r0
    693c:	b	6848 <btbb_process_packet@@Base+0x718>
    6940:	ldr	r0, [pc, #-384]	; 67c8 <btbb_process_packet@@Base+0x698>
    6944:	add	r0, pc, r0
    6948:	bl	2330 <puts@plt>
    694c:	ldr	r0, [pc, #-392]	; 67cc <btbb_process_packet@@Base+0x69c>
    6950:	add	r0, pc, r0
    6954:	bl	2174 <printf@plt>
    6958:	cmp	r4, #2
    695c:	ble	69c0 <btbb_process_packet@@Base+0x890>
    6960:	add	r7, r6, r7
    6964:	ldr	r0, [pc, #-412]	; 67d0 <btbb_process_packet@@Base+0x6a0>
    6968:	ldrb	r1, [r7, #2]
    696c:	ldrb	r3, [r7, #1]
    6970:	add	r0, pc, r0
    6974:	orr	r1, r3, r1, lsl #8
    6978:	bl	2174 <printf@plt>
    697c:	cmp	r4, #3
    6980:	beq	6720 <btbb_process_packet@@Base+0x5f0>
    6984:	ldr	r0, [pc, #-440]	; 67d4 <btbb_process_packet@@Base+0x6a4>
    6988:	ldr	r8, [pc, #-440]	; 67d8 <btbb_process_packet@@Base+0x6a8>
    698c:	add	r0, pc, r0
    6990:	bl	2174 <printf@plt>
    6994:	add	r7, r5, #3
    6998:	add	r7, r6, r7
    699c:	add	r8, pc, r8
    69a0:	ldrb	r1, [r7, #1]!
    69a4:	mov	r0, r8
    69a8:	bl	2174 <printf@plt>
    69ac:	sub	r3, r7, r6
    69b0:	sub	r3, r3, r5
    69b4:	cmp	r4, r3
    69b8:	bgt	69a0 <btbb_process_packet@@Base+0x870>
    69bc:	b	6720 <btbb_process_packet@@Base+0x5f0>
    69c0:	ldr	r0, [pc, #-492]	; 67dc <btbb_process_packet@@Base+0x6ac>
    69c4:	sub	r1, r4, #1
    69c8:	add	r0, pc, r0
    69cc:	b	6848 <btbb_process_packet@@Base+0x718>
    69d0:	ldr	r0, [pc, #-504]	; 67e0 <btbb_process_packet@@Base+0x6b0>
    69d4:	sub	r1, r4, #1
    69d8:	add	r0, pc, r0
    69dc:	b	6848 <btbb_process_packet@@Base+0x718>
    69e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    69e4:	sub	sp, sp, #580	; 0x244
    69e8:	ldr	r6, [pc, #912]	; 6d80 <btbb_process_packet@@Base+0xc50>
    69ec:	mov	r4, r0
    69f0:	add	r6, pc, r6
    69f4:	mov	r1, r6
    69f8:	uxtb	r5, r0
    69fc:	mov	r2, #256	; 0x100
    6a00:	add	r0, sp, #64	; 0x40
    6a04:	bl	21e0 <memcpy@plt>
    6a08:	mov	r2, #256	; 0x100
    6a0c:	add	r1, r6, r2
    6a10:	add	r0, sp, #320	; 0x140
    6a14:	bl	21e0 <memcpy@plt>
    6a18:	add	r3, sp, #576	; 0x240
    6a1c:	tst	r4, #1
    6a20:	add	r3, r3, r5
    6a24:	lsr	r1, r4, #8
    6a28:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    6a2c:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    6a30:	add	r2, sp, #576	; 0x240
    6a34:	uxtb	r3, r1
    6a38:	tst	r4, #128	; 0x80
    6a3c:	add	r2, r2, r3
    6a40:	lsr	ip, r4, #16
    6a44:	ldrbne	r2, [r2, #-256]	; 0xffffff00
    6a48:	ldrbeq	r2, [r2, #-512]	; 0xfffffe00
    6a4c:	uxtb	r6, ip
    6a50:	tst	r1, #128	; 0x80
    6a54:	add	r1, sp, #576	; 0x240
    6a58:	add	r1, r1, r6
    6a5c:	mov	r9, sp
    6a60:	add	r2, r0, r2
    6a64:	ldrbne	r0, [r1, #-256]	; 0xffffff00
    6a68:	ldrbeq	r0, [r1, #-512]	; 0xfffffe00
    6a6c:	lsr	r1, r4, #24
    6a70:	tst	ip, #128	; 0x80
    6a74:	add	r2, r0, r2
    6a78:	add	r0, sp, #576	; 0x240
    6a7c:	uxtb	lr, r1
    6a80:	add	r1, r0, r1
    6a84:	ldrbne	r0, [r1, #-256]	; 0xffffff00
    6a88:	ldrbeq	r0, [r1, #-512]	; 0xfffffe00
    6a8c:	ldr	r1, [pc, #752]	; 6d84 <btbb_process_packet@@Base+0xc54>
    6a90:	add	r0, r0, r2
    6a94:	cmp	r0, #24
    6a98:	add	r1, pc, r1
    6a9c:	subgt	r2, r0, #24
    6aa0:	movle	r2, #0
    6aa4:	add	ip, r1, #512	; 0x200
    6aa8:	add	r7, r1, #576	; 0x240
    6aac:	ldr	r0, [ip]
    6ab0:	ldr	r1, [ip, #4]
    6ab4:	mov	r8, r9
    6ab8:	add	ip, ip, #8
    6abc:	cmp	ip, r7
    6ac0:	stmia	r8!, {r0, r1}
    6ac4:	mov	r9, r8
    6ac8:	bne	6aac <btbb_process_packet@@Base+0x97c>
    6acc:	add	r1, sp, #576	; 0x240
    6ad0:	add	r1, r1, lr, lsr #2
    6ad4:	cmp	r5, r3
    6ad8:	cmpeq	r5, r6
    6adc:	ldrb	r0, [r1, #-576]	; 0xfffffdc0
    6ae0:	ldr	r3, [pc, #672]	; 6d88 <btbb_process_packet@@Base+0xc58>
    6ae4:	rsb	r0, r0, #1
    6ae8:	add	r2, r0, r2
    6aec:	moveq	r0, #1
    6af0:	movne	r0, #0
    6af4:	cmp	r5, lr
    6af8:	movne	r0, #0
    6afc:	andeq	r0, r0, #1
    6b00:	add	r0, r0, r2
    6b04:	cmp	r4, r3
    6b08:	addeq	r0, r0, #1
    6b0c:	mov	r2, #0
    6b10:	eor	r3, r3, r4
    6b14:	cmp	r3, #0
    6b18:	bne	6ba8 <btbb_process_packet@@Base+0xa78>
    6b1c:	ldr	r1, [pc, #616]	; 6d8c <btbb_process_packet@@Base+0xc5c>
    6b20:	ldr	ip, [pc, #616]	; 6d90 <btbb_process_packet@@Base+0xc60>
    6b24:	ldr	lr, [pc, #616]	; 6d94 <btbb_process_packet@@Base+0xc64>
    6b28:	ldr	r5, [pc, #616]	; 6d98 <btbb_process_packet@@Base+0xc68>
    6b2c:	ldr	r6, [pc, #616]	; 6d9c <btbb_process_packet@@Base+0xc6c>
    6b30:	ldr	r7, [pc, #616]	; 6da0 <btbb_process_packet@@Base+0xc70>
    6b34:	ldr	r8, [pc, #616]	; 6da4 <btbb_process_packet@@Base+0xc74>
    6b38:	ldr	r9, [pc, #616]	; 6da8 <btbb_process_packet@@Base+0xc78>
    6b3c:	ldr	sl, [pc, #616]	; 6dac <btbb_process_packet@@Base+0xc7c>
    6b40:	cmp	r2, #1
    6b44:	addeq	r0, r0, #1
    6b48:	mov	r2, r3
    6b4c:	and	r3, r1, r4, lsr r2
    6b50:	cmp	r3, ip
    6b54:	bhi	6c7c <btbb_process_packet@@Base+0xb4c>
    6b58:	ldr	fp, [pc, #592]	; 6db0 <btbb_process_packet@@Base+0xc80>
    6b5c:	cmp	r3, fp
    6b60:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6b64:	ldr	fp, [pc, #584]	; 6db4 <btbb_process_packet@@Base+0xc84>
    6b68:	cmp	r3, fp
    6b6c:	bhi	6bf4 <btbb_process_packet@@Base+0xac4>
    6b70:	sub	fp, fp, #3
    6b74:	cmp	r3, fp
    6b78:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6b7c:	ldr	fp, [pc, #564]	; 6db8 <btbb_process_packet@@Base+0xc88>
    6b80:	cmp	r3, fp
    6b84:	bhi	6bbc <btbb_process_packet@@Base+0xa8c>
    6b88:	cmp	r3, #254	; 0xfe
    6b8c:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6b90:	cmp	r3, #31
    6b94:	bls	6bd4 <btbb_process_packet@@Base+0xaa4>
    6b98:	sub	r3, r3, #127	; 0x7f
    6b9c:	cmp	r3, #1
    6ba0:	bhi	6cc0 <btbb_process_packet@@Base+0xb90>
    6ba4:	b	6bd4 <btbb_process_packet@@Base+0xaa4>
    6ba8:	add	r2, r2, #1
    6bac:	sub	r1, r3, #1
    6bb0:	and	r3, r3, r1
    6bb4:	uxtb	r2, r2
    6bb8:	b	6b14 <btbb_process_packet@@Base+0x9e4>
    6bbc:	cmp	r3, #512	; 0x200
    6bc0:	bcs	6bdc <btbb_process_packet@@Base+0xaac>
    6bc4:	cmp	r3, #508	; 0x1fc
    6bc8:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6bcc:	cmp	r3, #384	; 0x180
    6bd0:	bne	6cc0 <btbb_process_packet@@Base+0xb90>
    6bd4:	add	r0, r0, #1
    6bd8:	b	6cc0 <btbb_process_packet@@Base+0xb90>
    6bdc:	cmp	r3, #512	; 0x200
    6be0:	bls	6cc0 <btbb_process_packet@@Base+0xb90>
    6be4:	cmp	r3, #516	; 0x204
    6be8:	bcc	6bd4 <btbb_process_packet@@Base+0xaa4>
    6bec:	cmp	r3, #640	; 0x280
    6bf0:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6bf4:	ldr	fp, [pc, #448]	; 6dbc <btbb_process_packet@@Base+0xc8c>
    6bf8:	cmp	r3, fp
    6bfc:	bhi	6c44 <btbb_process_packet@@Base+0xb14>
    6c00:	sub	fp, fp, #3
    6c04:	cmp	r3, fp
    6c08:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c0c:	cmp	r3, #1024	; 0x400
    6c10:	bhi	6c24 <btbb_process_packet@@Base+0xaf4>
    6c14:	cmp	r3, #1016	; 0x3f8
    6c18:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c1c:	cmp	r3, #896	; 0x380
    6c20:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6c24:	ldr	fp, [pc, #404]	; 6dc0 <btbb_process_packet@@Base+0xc90>
    6c28:	cmp	r3, fp
    6c2c:	bcc	6cc0 <btbb_process_packet@@Base+0xb90>
    6c30:	add	fp, fp, #5
    6c34:	cmp	r3, fp
    6c38:	bls	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c3c:	cmp	r3, #1152	; 0x480
    6c40:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6c44:	cmp	r3, #1536	; 0x600
    6c48:	bcs	6c60 <btbb_process_packet@@Base+0xb30>
    6c4c:	ldr	fp, [pc, #368]	; 6dc4 <btbb_process_packet@@Base+0xc94>
    6c50:	cmp	r3, fp
    6c54:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c58:	cmp	r3, #1408	; 0x580
    6c5c:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6c60:	cmp	r3, #1536	; 0x600
    6c64:	bls	6cc0 <btbb_process_packet@@Base+0xb90>
    6c68:	ldr	fp, [pc, #344]	; 6dc8 <btbb_process_packet@@Base+0xc98>
    6c6c:	cmp	r3, fp
    6c70:	bls	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c74:	cmp	r3, #1664	; 0x680
    6c78:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6c7c:	cmp	r3, #2944	; 0xb80
    6c80:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c84:	bhi	6d0c <btbb_process_packet@@Base+0xbdc>
    6c88:	cmp	r3, #2432	; 0x980
    6c8c:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6c90:	bhi	6cd4 <btbb_process_packet@@Base+0xba4>
    6c94:	cmp	r3, sl
    6c98:	bhi	6cb0 <btbb_process_packet@@Base+0xb80>
    6c9c:	ldr	fp, [pc, #296]	; 6dcc <btbb_process_packet@@Base+0xc9c>
    6ca0:	cmp	r3, fp
    6ca4:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6ca8:	cmp	r3, #1920	; 0x780
    6cac:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6cb0:	cmp	r3, #2176	; 0x880
    6cb4:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6cb8:	subcs	r3, r3, #2288	; 0x8f0
    6cbc:	bcs	6d04 <btbb_process_packet@@Base+0xbd4>
    6cc0:	add	r2, r2, #4
    6cc4:	cmp	r2, #24
    6cc8:	bne	6b4c <btbb_process_packet@@Base+0xa1c>
    6ccc:	add	sp, sp, #580	; 0x244
    6cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cd4:	cmp	r3, r8
    6cd8:	bhi	6cf4 <btbb_process_packet@@Base+0xbc4>
    6cdc:	cmp	r3, r9
    6ce0:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6ce4:	sub	r3, r3, #2544	; 0x9f0
    6ce8:	sub	r3, r3, #12
    6cec:	cmp	r3, #3
    6cf0:	b	6ba0 <btbb_process_packet@@Base+0xa70>
    6cf4:	cmp	r3, #2688	; 0xa80
    6cf8:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6cfc:	subcs	r3, r3, #2800	; 0xaf0
    6d00:	bcc	6cc0 <btbb_process_packet@@Base+0xb90>
    6d04:	sub	r3, r3, #14
    6d08:	b	6cec <btbb_process_packet@@Base+0xbbc>
    6d0c:	cmp	r3, lr
    6d10:	bhi	6d48 <btbb_process_packet@@Base+0xc18>
    6d14:	cmp	r3, r5
    6d18:	bcs	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d1c:	cmp	r3, #3200	; 0xc80
    6d20:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d24:	subls	r3, r3, #3056	; 0xbf0
    6d28:	subls	r3, r3, #8
    6d2c:	bls	6d78 <btbb_process_packet@@Base+0xc48>
    6d30:	cmp	r3, r6
    6d34:	bcc	6cc0 <btbb_process_packet@@Base+0xb90>
    6d38:	cmp	r3, r7
    6d3c:	bls	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d40:	cmp	r3, #3456	; 0xd80
    6d44:	b	6bd0 <btbb_process_packet@@Base+0xaa0>
    6d48:	cmp	r3, #3968	; 0xf80
    6d4c:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d50:	bhi	6d68 <btbb_process_packet@@Base+0xc38>
    6d54:	cmp	r3, #3712	; 0xe80
    6d58:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d5c:	bcc	6cc0 <btbb_process_packet@@Base+0xb90>
    6d60:	sub	r3, r3, #3824	; 0xef0
    6d64:	b	6d04 <btbb_process_packet@@Base+0xbd4>
    6d68:	cmp	r3, #4064	; 0xfe0
    6d6c:	beq	6bd4 <btbb_process_packet@@Base+0xaa4>
    6d70:	bcc	6cc0 <btbb_process_packet@@Base+0xb90>
    6d74:	sub	r3, r3, #4080	; 0xff0
    6d78:	cmp	r3, #15
    6d7c:	b	6ba0 <btbb_process_packet@@Base+0xa70>
    6d80:	andeq	fp, r0, r4, ror r2
    6d84:	andeq	fp, r0, ip, asr #3
    6d88:	mcrhi	14, 4, fp, cr9, cr6, {6}
    6d8c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    6d90:	andeq	r0, r0, r1, lsl #14
    6d94:	andeq	r0, r0, r3, lsl #28
    6d98:	strdeq	r0, [r0], -ip
    6d9c:	strdeq	r0, [r0], -lr
    6da0:	andeq	r0, r0, r1, lsl #26
    6da4:	andeq	r0, r0, r3, lsl #20
    6da8:	andeq	r0, r0, r1, lsl #20
    6dac:	andeq	r0, r0, pc, lsl #16
    6db0:	strdeq	r0, [r0], -lr
    6db4:	andeq	r0, r0, r1, lsl #6
    6db8:	andeq	r0, r0, r1, lsl #2
    6dbc:	andeq	r0, r0, r1, lsl #10
    6dc0:	andeq	r0, r0, r2, lsl #8
    6dc4:	strdeq	r0, [r0], -ip
    6dc8:	andeq	r0, r0, r3, lsl #12
    6dcc:	strdeq	r0, [r0], -r4

00006dd0 <lell_packet_new@@Base>:
    6dd0:	push	{r4, lr}
    6dd4:	mov	r1, #104	; 0x68
    6dd8:	mov	r0, #1
    6ddc:	bl	2120 <calloc@plt>
    6de0:	mov	r3, #1
    6de4:	str	r3, [r0, #96]	; 0x60
    6de8:	pop	{r4, pc}

00006dec <lell_packet_ref@@Base>:
    6dec:	ldr	r3, [r0, #96]	; 0x60
    6df0:	add	r3, r3, #1
    6df4:	str	r3, [r0, #96]	; 0x60
    6df8:	bx	lr

00006dfc <lell_packet_unref@@Base>:
    6dfc:	ldr	r3, [r0, #96]	; 0x60
    6e00:	subs	r3, r3, #1
    6e04:	beq	6e10 <lell_packet_unref@@Base+0x14>
    6e08:	str	r3, [r0, #96]	; 0x60
    6e0c:	bx	lr
    6e10:	b	21bc <free@plt>

00006e14 <lell_packet_is_data@@Base>:
    6e14:	ldrb	r0, [r0, #68]	; 0x44
    6e18:	cmp	r0, #36	; 0x24
    6e1c:	movhi	r0, #0
    6e20:	movls	r0, #1
    6e24:	bx	lr

00006e28 <lell_allocate_and_decode@@Base>:
    6e28:	push	{r4, r5, r6, r7, r8, lr}
    6e2c:	mov	r7, r0
    6e30:	mov	r6, r3
    6e34:	mov	r5, r2
    6e38:	mov	r4, r1
    6e3c:	bl	2480 <lell_packet_new@plt>
    6e40:	mov	r3, r7
    6e44:	add	r2, r7, #64	; 0x40
    6e48:	str	r0, [r6]
    6e4c:	ldr	r1, [r3], #4
    6e50:	cmp	r3, r2
    6e54:	str	r1, [r0], #4
    6e58:	bne	6e4c <lell_allocate_and_decode@@Base+0x24>
    6e5c:	ldr	r3, [pc, #324]	; 6fa8 <lell_allocate_and_decode@@Base+0x180>
    6e60:	ldr	r0, [r6]
    6e64:	cmp	r4, r3
    6e68:	moveq	r1, #37	; 0x25
    6e6c:	sub	r3, r4, #2400	; 0x960
    6e70:	beq	6e90 <lell_allocate_and_decode@@Base+0x68>
    6e74:	ldr	r2, [pc, #304]	; 6fac <lell_allocate_and_decode@@Base+0x184>
    6e78:	cmp	r4, r2
    6e7c:	bhi	6ef4 <lell_allocate_and_decode@@Base+0xcc>
    6e80:	sub	r1, r3, #4
    6e84:	add	r1, r1, r1, lsr #31
    6e88:	asr	r1, r1, #1
    6e8c:	uxtb	r1, r1
    6e90:	sub	r3, r3, #2
    6e94:	strb	r1, [r0, #68]	; 0x44
    6e98:	add	r3, r3, r3, lsr #31
    6e9c:	str	r5, [r0, #76]	; 0x4c
    6ea0:	asr	r3, r3, #1
    6ea4:	strb	r3, [r0, #69]	; 0x45
    6ea8:	ldr	r3, [r0]
    6eac:	str	r3, [r0, #64]	; 0x40
    6eb0:	bl	218c <lell_packet_is_data@plt>
    6eb4:	ldr	r4, [r6]
    6eb8:	ldrb	r3, [r4, #5]
    6ebc:	subs	r1, r0, #0
    6ec0:	beq	6f28 <lell_allocate_and_decode@@Base+0x100>
    6ec4:	and	r3, r3, #31
    6ec8:	str	r3, [r4, #72]	; 0x48
    6ecc:	ldr	r0, [r4, #64]	; 0x40
    6ed0:	bl	69e0 <btbb_process_packet@@Base+0x8b0>
    6ed4:	ldrb	r3, [r4, #100]	; 0x64
    6ed8:	bic	r3, r3, #1
    6edc:	str	r0, [r4, #92]	; 0x5c
    6ee0:	cmp	r0, #0
    6ee4:	movne	r0, r3
    6ee8:	orreq	r0, r3, #1
    6eec:	strb	r0, [r4, #100]	; 0x64
    6ef0:	pop	{r4, r5, r6, r7, r8, pc}
    6ef4:	ldr	r2, [pc, #180]	; 6fb0 <lell_allocate_and_decode@@Base+0x188>
    6ef8:	cmp	r4, r2
    6efc:	moveq	r1, #38	; 0x26
    6f00:	beq	6e90 <lell_allocate_and_decode@@Base+0x68>
    6f04:	cmp	r4, #2480	; 0x9b0
    6f08:	movcs	r1, #39	; 0x27
    6f0c:	bcs	6e90 <lell_allocate_and_decode@@Base+0x68>
    6f10:	sub	r4, r4, #2416	; 0x970
    6f14:	sub	r4, r4, #12
    6f18:	add	r4, r4, r4, lsr #31
    6f1c:	asr	r1, r4, #1
    6f20:	add	r1, r1, #11
    6f24:	b	6e8c <lell_allocate_and_decode@@Base+0x64>
    6f28:	and	r3, r3, #63	; 0x3f
    6f2c:	str	r3, [r4, #72]	; 0x48
    6f30:	ldrb	r3, [r4, #4]
    6f34:	ldr	ip, [pc, #120]	; 6fb4 <lell_allocate_and_decode@@Base+0x18c>
    6f38:	and	r2, r3, #15
    6f3c:	strb	r2, [r4, #80]	; 0x50
    6f40:	lsr	r2, r3, #6
    6f44:	lsr	r3, r3, #7
    6f48:	str	r3, [r4, #88]	; 0x58
    6f4c:	ldrb	r3, [r4, #100]	; 0x64
    6f50:	and	r2, r2, #1
    6f54:	str	r2, [r4, #84]	; 0x54
    6f58:	ldr	r2, [r4, #64]	; 0x40
    6f5c:	bic	r3, r3, #1
    6f60:	cmp	r2, ip
    6f64:	orreq	r3, r3, #1
    6f68:	ands	r0, r3, #1
    6f6c:	strb	r3, [r4, #100]	; 0x64
    6f70:	eoreq	r3, r2, ip
    6f74:	beq	6f90 <lell_allocate_and_decode@@Base+0x168>
    6f78:	str	r1, [r4, #92]	; 0x5c
    6f7c:	pop	{r4, r5, r6, r7, r8, pc}
    6f80:	add	r0, r0, #1
    6f84:	sub	r2, r3, #1
    6f88:	and	r3, r3, r2
    6f8c:	uxtb	r0, r0
    6f90:	cmp	r3, #0
    6f94:	bne	6f80 <lell_allocate_and_decode@@Base+0x158>
    6f98:	cmp	r0, #1
    6f9c:	moveq	r1, #1
    6fa0:	movne	r1, #32
    6fa4:	b	6f78 <lell_allocate_and_decode@@Base+0x150>
    6fa8:	andeq	r0, r0, r2, ror #18
    6fac:	andeq	r0, r0, r9, ror r9
    6fb0:	andeq	r0, r0, sl, ror r9
    6fb4:	mcrhi	14, 4, fp, cr9, cr6, {6}

00006fb8 <lell_get_access_address@@Base>:
    6fb8:	ldr	r0, [r0, #64]	; 0x40
    6fbc:	bx	lr

00006fc0 <lell_get_access_address_offenses@@Base>:
    6fc0:	ldr	r0, [r0, #92]	; 0x5c
    6fc4:	bx	lr

00006fc8 <lell_get_channel_index@@Base>:
    6fc8:	ldrb	r0, [r0, #68]	; 0x44
    6fcc:	bx	lr

00006fd0 <lell_get_channel_k@@Base>:
    6fd0:	ldrb	r0, [r0, #69]	; 0x45
    6fd4:	bx	lr

00006fd8 <lell_get_adv_type_str@@Base>:
    6fd8:	push	{r4, lr}
    6fdc:	mov	r4, r0
    6fe0:	bl	218c <lell_packet_is_data@plt>
    6fe4:	cmp	r0, #0
    6fe8:	bne	700c <lell_get_adv_type_str@@Base+0x34>
    6fec:	ldrb	r2, [r4, #80]	; 0x50
    6ff0:	cmp	r2, #6
    6ff4:	bhi	7014 <lell_get_adv_type_str@@Base+0x3c>
    6ff8:	ldr	r3, [pc, #32]	; 7020 <lell_get_adv_type_str@@Base+0x48>
    6ffc:	add	r3, pc, r3
    7000:	add	r3, r3, r2, lsl #2
    7004:	ldr	r0, [r3, #32]
    7008:	pop	{r4, pc}
    700c:	mov	r0, #0
    7010:	pop	{r4, pc}
    7014:	ldr	r0, [pc, #8]	; 7024 <lell_get_adv_type_str@@Base+0x4c>
    7018:	add	r0, pc, r0
    701c:	pop	{r4, pc}
    7020:	andeq	r0, r2, r4, asr lr
    7024:	andeq	fp, r0, r7, lsr #2

00007028 <lell_print@@Base>:
    7028:	push	{r4, r5, r6, r7, r8, lr}
    702c:	mov	r4, r0
    7030:	bl	218c <lell_packet_is_data@plt>
    7034:	ldr	r1, [r4, #64]	; 0x40
    7038:	ldrb	r3, [r4, #100]	; 0x64
    703c:	cmp	r0, #0
    7040:	beq	7100 <lell_print@@Base+0xd8>
    7044:	ldrb	r5, [r4, #4]
    7048:	tst	r3, #1
    704c:	and	r5, r5, #3
    7050:	beq	70f4 <lell_print@@Base+0xcc>
    7054:	ldr	r2, [pc, #1096]	; 74a4 <lell_print@@Base+0x47c>
    7058:	add	r2, pc, r2
    705c:	ldr	r0, [pc, #1092]	; 74a8 <lell_print@@Base+0x480>
    7060:	ldr	r3, [r4, #72]	; 0x48
    7064:	add	r0, pc, r0
    7068:	bl	2174 <printf@plt>
    706c:	ldr	r6, [pc, #1080]	; 74ac <lell_print@@Base+0x484>
    7070:	ldr	r0, [pc, #1080]	; 74b0 <lell_print@@Base+0x488>
    7074:	ldrb	r1, [r4, #68]	; 0x44
    7078:	add	r0, pc, r0
    707c:	add	r6, pc, r6
    7080:	bl	2174 <printf@plt>
    7084:	add	r3, r6, r5, lsl #2
    7088:	ldr	r0, [pc, #1060]	; 74b4 <lell_print@@Base+0x48c>
    708c:	ldr	r2, [r3, #60]	; 0x3c
    7090:	mov	r1, r5
    7094:	add	r0, pc, r0
    7098:	bl	2174 <printf@plt>
    709c:	ldrb	r1, [r4, #4]
    70a0:	ldr	r0, [pc, #1040]	; 74b8 <lell_print@@Base+0x490>
    70a4:	add	r0, pc, r0
    70a8:	lsr	r3, r1, #4
    70ac:	lsr	r2, r1, #3
    70b0:	lsr	r1, r1, #2
    70b4:	and	r3, r3, #1
    70b8:	and	r2, r2, #1
    70bc:	and	r1, r1, #1
    70c0:	bl	2174 <printf@plt>
    70c4:	cmp	r5, #3
    70c8:	bne	7234 <lell_print@@Base+0x20c>
    70cc:	ldrb	r1, [r4, #6]
    70d0:	ldr	r0, [pc, #996]	; 74bc <lell_print@@Base+0x494>
    70d4:	cmp	r1, #20
    70d8:	movlt	r3, r1
    70dc:	movge	r3, #20
    70e0:	add	r0, pc, r0
    70e4:	add	r6, r6, r3, lsl #2
    70e8:	ldr	r2, [r6, #76]	; 0x4c
    70ec:	bl	2174 <printf@plt>
    70f0:	b	7234 <lell_print@@Base+0x20c>
    70f4:	ldr	r2, [pc, #964]	; 74c0 <lell_print@@Base+0x498>
    70f8:	add	r2, pc, r2
    70fc:	b	705c <lell_print@@Base+0x34>
    7100:	tst	r3, #1
    7104:	beq	7174 <lell_print@@Base+0x14c>
    7108:	ldr	r2, [pc, #948]	; 74c4 <lell_print@@Base+0x49c>
    710c:	add	r2, pc, r2
    7110:	ldr	r0, [pc, #944]	; 74c8 <lell_print@@Base+0x4a0>
    7114:	ldr	r3, [r4, #72]	; 0x48
    7118:	add	r0, pc, r0
    711c:	bl	2174 <printf@plt>
    7120:	ldr	r0, [pc, #932]	; 74cc <lell_print@@Base+0x4a4>
    7124:	ldrb	r1, [r4, #68]	; 0x44
    7128:	add	r0, pc, r0
    712c:	bl	2174 <printf@plt>
    7130:	mov	r0, r4
    7134:	bl	2318 <lell_get_adv_type_str@plt>
    7138:	mov	r1, r0
    713c:	ldr	r0, [pc, #908]	; 74d0 <lell_print@@Base+0x4a8>
    7140:	add	r0, pc, r0
    7144:	bl	2174 <printf@plt>
    7148:	ldrb	r3, [r4, #80]	; 0x50
    714c:	cmp	r3, #6
    7150:	addls	pc, pc, r3, lsl #2
    7154:	b	7234 <lell_print@@Base+0x20c>
    7158:	b	7180 <lell_print@@Base+0x158>
    715c:	b	7204 <lell_print@@Base+0x1dc>
    7160:	b	7180 <lell_print@@Base+0x158>
    7164:	b	72b8 <lell_print@@Base+0x290>
    7168:	b	72e8 <lell_print@@Base+0x2c0>
    716c:	b	7344 <lell_print@@Base+0x31c>
    7170:	b	7180 <lell_print@@Base+0x158>
    7174:	ldr	r2, [pc, #856]	; 74d4 <lell_print@@Base+0x4ac>
    7178:	add	r2, pc, r2
    717c:	b	7110 <lell_print@@Base+0xe8>
    7180:	ldr	r0, [pc, #848]	; 74d8 <lell_print@@Base+0x4b0>
    7184:	ldr	r3, [r4, #84]	; 0x54
    7188:	mov	r2, #6
    718c:	mov	r1, r4
    7190:	add	r0, pc, r0
    7194:	bl	62b0 <btbb_process_packet@@Base+0x180>
    7198:	ldr	r3, [r4, #72]	; 0x48
    719c:	cmp	r3, #6
    71a0:	ble	7234 <lell_print@@Base+0x20c>
    71a4:	ldr	r0, [pc, #816]	; 74dc <lell_print@@Base+0x4b4>
    71a8:	ldr	r8, [pc, #816]	; 74e0 <lell_print@@Base+0x4b8>
    71ac:	add	r0, pc, r0
    71b0:	bl	2174 <printf@plt>
    71b4:	add	r6, r4, #12
    71b8:	mov	r5, #0
    71bc:	mov	r7, r6
    71c0:	add	r8, pc, r8
    71c4:	ldr	r3, [r4, #72]	; 0x48
    71c8:	sub	r3, r3, #6
    71cc:	cmp	r5, r3
    71d0:	blt	71f0 <lell_print@@Base+0x1c8>
    71d4:	mov	r0, #10
    71d8:	bl	2450 <putchar@plt>
    71dc:	ldr	r1, [r4, #72]	; 0x48
    71e0:	mov	r0, r7
    71e4:	sub	r1, r1, #6
    71e8:	bl	6358 <btbb_process_packet@@Base+0x228>
    71ec:	b	7234 <lell_print@@Base+0x20c>
    71f0:	ldrb	r1, [r6], #1
    71f4:	mov	r0, r8
    71f8:	bl	2174 <printf@plt>
    71fc:	add	r5, r5, #1
    7200:	b	71c4 <lell_print@@Base+0x19c>
    7204:	ldr	r0, [pc, #728]	; 74e4 <lell_print@@Base+0x4bc>
    7208:	ldr	r3, [r4, #84]	; 0x54
    720c:	mov	r2, #6
    7210:	mov	r1, r4
    7214:	add	r0, pc, r0
    7218:	bl	62b0 <btbb_process_packet@@Base+0x180>
    721c:	ldr	r0, [pc, #708]	; 74e8 <lell_print@@Base+0x4c0>
    7220:	ldr	r3, [r4, #88]	; 0x58
    7224:	mov	r2, #12
    7228:	mov	r1, r4
    722c:	add	r0, pc, r0
    7230:	bl	62b0 <btbb_process_packet@@Base+0x180>
    7234:	mov	r0, #10
    7238:	bl	2450 <putchar@plt>
    723c:	ldr	r0, [pc, #680]	; 74ec <lell_print@@Base+0x4c4>
    7240:	ldr	r6, [pc, #680]	; 74f0 <lell_print@@Base+0x4c8>
    7244:	add	r0, pc, r0
    7248:	bl	2174 <printf@plt>
    724c:	add	r5, r4, #6
    7250:	add	r6, pc, r6
    7254:	ldr	r3, [r4, #72]	; 0x48
    7258:	sub	r2, r5, r4
    725c:	add	r3, r3, #5
    7260:	cmp	r3, r2
    7264:	bge	7494 <lell_print@@Base+0x46c>
    7268:	mov	r0, #10
    726c:	bl	2450 <putchar@plt>
    7270:	ldr	r0, [pc, #636]	; 74f4 <lell_print@@Base+0x4cc>
    7274:	ldr	r6, [pc, #636]	; 74f8 <lell_print@@Base+0x4d0>
    7278:	add	r0, pc, r0
    727c:	bl	2174 <printf@plt>
    7280:	mov	r5, #0
    7284:	add	r6, pc, r6
    7288:	ldr	r2, [r4, #72]	; 0x48
    728c:	add	r3, r4, r5
    7290:	add	r3, r3, r2
    7294:	mov	r0, r6
    7298:	ldrb	r1, [r3, #6]
    729c:	add	r5, r5, #1
    72a0:	bl	2174 <printf@plt>
    72a4:	cmp	r5, #3
    72a8:	bne	7288 <lell_print@@Base+0x260>
    72ac:	mov	r0, #10
    72b0:	pop	{r4, r5, r6, r7, r8, lr}
    72b4:	b	2450 <putchar@plt>
    72b8:	ldr	r0, [pc, #572]	; 74fc <lell_print@@Base+0x4d4>
    72bc:	ldr	r3, [r4, #84]	; 0x54
    72c0:	mov	r2, #6
    72c4:	mov	r1, r4
    72c8:	add	r0, pc, r0
    72cc:	bl	62b0 <btbb_process_packet@@Base+0x180>
    72d0:	ldr	r0, [pc, #552]	; 7500 <lell_print@@Base+0x4d8>
    72d4:	ldr	r3, [r4, #88]	; 0x58
    72d8:	mov	r2, #12
    72dc:	mov	r1, r4
    72e0:	add	r0, pc, r0
    72e4:	b	7230 <lell_print@@Base+0x208>
    72e8:	ldr	r0, [pc, #532]	; 7504 <lell_print@@Base+0x4dc>
    72ec:	ldr	r3, [r4, #84]	; 0x54
    72f0:	mov	r2, #6
    72f4:	mov	r1, r4
    72f8:	add	r0, pc, r0
    72fc:	bl	62b0 <btbb_process_packet@@Base+0x180>
    7300:	ldr	r0, [pc, #512]	; 7508 <lell_print@@Base+0x4e0>
    7304:	ldr	r8, [pc, #512]	; 750c <lell_print@@Base+0x4e4>
    7308:	add	r0, pc, r0
    730c:	bl	2174 <printf@plt>
    7310:	add	r6, r4, #12
    7314:	mov	r5, #0
    7318:	mov	r7, r6
    731c:	add	r8, pc, r8
    7320:	ldr	r3, [r4, #72]	; 0x48
    7324:	sub	r3, r3, #6
    7328:	cmp	r5, r3
    732c:	bge	71d4 <lell_print@@Base+0x1ac>
    7330:	ldrb	r1, [r6], #1
    7334:	mov	r0, r8
    7338:	bl	2174 <printf@plt>
    733c:	add	r5, r5, #1
    7340:	b	7320 <lell_print@@Base+0x2f8>
    7344:	ldr	r0, [pc, #452]	; 7510 <lell_print@@Base+0x4e8>
    7348:	ldr	r3, [r4, #84]	; 0x54
    734c:	mov	r2, #6
    7350:	mov	r1, r4
    7354:	add	r0, pc, r0
    7358:	bl	62b0 <btbb_process_packet@@Base+0x180>
    735c:	ldr	r0, [pc, #432]	; 7514 <lell_print@@Base+0x4ec>
    7360:	ldr	r3, [r4, #88]	; 0x58
    7364:	mov	r2, #12
    7368:	mov	r1, r4
    736c:	add	r0, pc, r0
    7370:	bl	62b0 <btbb_process_packet@@Base+0x180>
    7374:	ldr	r1, [pc, #412]	; 7518 <lell_print@@Base+0x4f0>
    7378:	ldr	r0, [pc, #412]	; 751c <lell_print@@Base+0x4f4>
    737c:	ldr	r2, [r4, #18]
    7380:	add	r1, pc, r1
    7384:	add	r0, pc, r0
    7388:	bl	2174 <printf@plt>
    738c:	ldrb	r3, [r4, #23]
    7390:	ldrb	r2, [r4, #24]
    7394:	ldr	r1, [pc, #388]	; 7520 <lell_print@@Base+0x4f8>
    7398:	ldr	r0, [pc, #388]	; 7524 <lell_print@@Base+0x4fc>
    739c:	lsl	r3, r3, #8
    73a0:	orr	r3, r3, r2, lsl #16
    73a4:	ldrb	r2, [r4, #22]
    73a8:	add	r1, pc, r1
    73ac:	add	r0, pc, r0
    73b0:	orr	r2, r3, r2
    73b4:	bl	2174 <printf@plt>
    73b8:	ldrb	r3, [r4, #25]
    73bc:	ldr	r1, [pc, #356]	; 7528 <lell_print@@Base+0x500>
    73c0:	ldr	r0, [pc, #356]	; 752c <lell_print@@Base+0x504>
    73c4:	mov	r2, r3
    73c8:	add	r1, pc, r1
    73cc:	add	r0, pc, r0
    73d0:	bl	2174 <printf@plt>
    73d4:	ldr	r0, [pc, #340]	; 7530 <lell_print@@Base+0x508>
    73d8:	mov	r2, #26
    73dc:	mov	r1, r4
    73e0:	add	r0, pc, r0
    73e4:	bl	6330 <btbb_process_packet@@Base+0x200>
    73e8:	ldr	r0, [pc, #324]	; 7534 <lell_print@@Base+0x50c>
    73ec:	mov	r2, #28
    73f0:	mov	r1, r4
    73f4:	add	r0, pc, r0
    73f8:	bl	6330 <btbb_process_packet@@Base+0x200>
    73fc:	ldr	r0, [pc, #308]	; 7538 <lell_print@@Base+0x510>
    7400:	mov	r2, #30
    7404:	mov	r1, r4
    7408:	add	r0, pc, r0
    740c:	bl	6330 <btbb_process_packet@@Base+0x200>
    7410:	ldr	r0, [pc, #292]	; 753c <lell_print@@Base+0x514>
    7414:	mov	r2, #32
    7418:	mov	r1, r4
    741c:	add	r0, pc, r0
    7420:	bl	6330 <btbb_process_packet@@Base+0x200>
    7424:	ldr	r0, [pc, #276]	; 7540 <lell_print@@Base+0x518>
    7428:	ldr	r7, [pc, #276]	; 7544 <lell_print@@Base+0x51c>
    742c:	add	r0, pc, r0
    7430:	bl	2174 <printf@plt>
    7434:	add	r5, r4, #34	; 0x22
    7438:	add	r6, r4, #39	; 0x27
    743c:	add	r7, pc, r7
    7440:	ldrb	r1, [r5], #1
    7444:	mov	r0, r7
    7448:	bl	2174 <printf@plt>
    744c:	cmp	r6, r5
    7450:	bne	7440 <lell_print@@Base+0x418>
    7454:	mov	r0, #10
    7458:	bl	2450 <putchar@plt>
    745c:	ldrb	r1, [r4, #39]	; 0x27
    7460:	ldr	r0, [pc, #224]	; 7548 <lell_print@@Base+0x520>
    7464:	and	r1, r1, #31
    7468:	add	r0, pc, r0
    746c:	bl	2174 <printf@plt>
    7470:	ldrb	r1, [r4, #39]	; 0x27
    7474:	ldr	r3, [pc, #208]	; 754c <lell_print@@Base+0x524>
    7478:	ldr	r0, [pc, #208]	; 7550 <lell_print@@Base+0x528>
    747c:	add	r3, pc, r3
    7480:	lsr	r1, r1, #5
    7484:	add	r0, pc, r0
    7488:	add	r3, r3, r1, lsl #2
    748c:	ldr	r2, [r3, #160]	; 0xa0
    7490:	b	70ec <lell_print@@Base+0xc4>
    7494:	ldrb	r1, [r5], #1
    7498:	mov	r0, r6
    749c:	bl	2174 <printf@plt>
    74a0:	b	7254 <lell_print@@Base+0x22c>
    74a4:	strdeq	fp, [r0], -r1
    74a8:	andeq	fp, r0, fp, ror #1
    74ac:	ldrdeq	r0, [r2], -r4
    74b0:	strdeq	fp, [r0], -r8
    74b4:	strdeq	fp, [r0], -r3
    74b8:	strdeq	fp, [r0], -r6
    74bc:	ldrdeq	fp, [r0], -r8
    74c0:	andeq	fp, r0, pc, asr #32
    74c4:	andeq	fp, r0, sp, lsr r0
    74c8:	strheq	fp, [r0], -r5
    74cc:	andeq	fp, r0, r8, asr #32
    74d0:	strheq	fp, [r0], -r4
    74d4:	andeq	sl, r0, pc, asr #31
    74d8:	andeq	fp, r0, r3, ror r0
    74dc:	andeq	fp, r0, pc, asr r0
    74e0:	andeq	sl, r0, sp, lsl pc
    74e4:	andeq	sl, r0, pc, ror #31
    74e8:	andeq	sl, r0, ip, ror #31
    74ec:	andeq	fp, r0, ip, lsl #1
    74f0:	andeq	sl, r0, sp, lsl #29
    74f4:	andeq	fp, r0, r3, rrx
    74f8:	andeq	sl, r0, r9, asr lr
    74fc:	andeq	sl, r0, r8, asr pc
    7500:	andeq	sl, r0, r3, lsr #30
    7504:	andeq	sl, r0, fp, lsl #30
    7508:	andeq	sl, r0, r0, lsr #30
    750c:	andeq	sl, r0, r1, asr #27
    7510:	andeq	sl, r0, r4, asr #29
    7514:	muleq	r0, r7, lr
    7518:			; <UNDEFINED> instruction: 0x0000aeb9
    751c:			; <UNDEFINED> instruction: 0x0000aebd
    7520:	andeq	sl, r0, r5, lsr #29
    7524:	andeq	sl, r0, fp, lsr #29
    7528:	muleq	r0, fp, lr
    752c:	andeq	sl, r0, r1, lsr #29
    7530:	muleq	r0, lr, lr
    7534:	muleq	r0, r6, lr
    7538:	andeq	sl, r0, sp, lsl #29
    753c:	andeq	sl, r0, r3, lsl #29
    7540:	andeq	sl, r0, sp, ror lr
    7544:	andeq	sl, r0, r1, lsr #25
    7548:	andeq	sl, r0, sl, asr #28
    754c:	ldrdeq	r0, [r2], -r4
    7550:	andeq	sl, r0, fp, lsr lr

00007554 <bt_compidtostr@@Base>:
    7554:	ldr	r3, [pc, #3380]	; 8290 <bt_compidtostr@@Base+0xd3c>
    7558:	cmp	r0, r3
    755c:	beq	c170 <bt_compidtostr@@Base+0x4c1c>
    7560:	bhi	8d90 <bt_compidtostr@@Base+0x183c>
    7564:	sub	r3, r3, #260	; 0x104
    7568:	cmp	r0, r3
    756c:	beq	b1dc <bt_compidtostr@@Base+0x3c88>
    7570:	bhi	7eb0 <bt_compidtostr@@Base+0x95c>
    7574:	cmp	r0, #129	; 0x81
    7578:	beq	ad44 <bt_compidtostr@@Base+0x37f0>
    757c:	bhi	7a14 <bt_compidtostr@@Base+0x4c0>
    7580:	cmp	r0, #64	; 0x40
    7584:	beq	aaf8 <bt_compidtostr@@Base+0x35a4>
    7588:	bhi	77d0 <bt_compidtostr@@Base+0x27c>
    758c:	cmp	r0, #31
    7590:	beq	a9c0 <bt_compidtostr@@Base+0x346c>
    7594:	bhi	76ac <bt_compidtostr@@Base+0x158>
    7598:	cmp	r0, #15
    759c:	beq	a930 <bt_compidtostr@@Base+0x33dc>
    75a0:	bhi	7628 <bt_compidtostr@@Base+0xd4>
    75a4:	cmp	r0, #7
    75a8:	beq	a8e8 <bt_compidtostr@@Base+0x3394>
    75ac:	bhi	75ec <bt_compidtostr@@Base+0x98>
    75b0:	cmp	r0, #3
    75b4:	beq	a8c4 <bt_compidtostr@@Base+0x3370>
    75b8:	bhi	75d4 <bt_compidtostr@@Base+0x80>
    75bc:	cmp	r0, #1
    75c0:	beq	a8ac <bt_compidtostr@@Base+0x3358>
    75c4:	bhi	a8b8 <bt_compidtostr@@Base+0x3364>
    75c8:	ldr	r0, [pc, #3268]	; 8294 <bt_compidtostr@@Base+0xd40>
    75cc:	add	r0, pc, r0
    75d0:	bx	lr
    75d4:	cmp	r0, #5
    75d8:	beq	a8d0 <bt_compidtostr@@Base+0x337c>
    75dc:	bhi	a8dc <bt_compidtostr@@Base+0x3388>
    75e0:	ldr	r0, [pc, #3248]	; 8298 <bt_compidtostr@@Base+0xd44>
    75e4:	add	r0, pc, r0
    75e8:	bx	lr
    75ec:	cmp	r0, #11
    75f0:	beq	a90c <bt_compidtostr@@Base+0x33b8>
    75f4:	bhi	7610 <bt_compidtostr@@Base+0xbc>
    75f8:	cmp	r0, #9
    75fc:	beq	a8f4 <bt_compidtostr@@Base+0x33a0>
    7600:	bhi	a900 <bt_compidtostr@@Base+0x33ac>
    7604:	ldr	r0, [pc, #3216]	; 829c <bt_compidtostr@@Base+0xd48>
    7608:	add	r0, pc, r0
    760c:	bx	lr
    7610:	cmp	r0, #13
    7614:	beq	a918 <bt_compidtostr@@Base+0x33c4>
    7618:	bhi	a924 <bt_compidtostr@@Base+0x33d0>
    761c:	ldr	r0, [pc, #3196]	; 82a0 <bt_compidtostr@@Base+0xd4c>
    7620:	add	r0, pc, r0
    7624:	bx	lr
    7628:	cmp	r0, #23
    762c:	beq	a978 <bt_compidtostr@@Base+0x3424>
    7630:	bhi	7670 <bt_compidtostr@@Base+0x11c>
    7634:	cmp	r0, #19
    7638:	beq	a954 <bt_compidtostr@@Base+0x3400>
    763c:	bhi	7658 <bt_compidtostr@@Base+0x104>
    7640:	cmp	r0, #17
    7644:	beq	a93c <bt_compidtostr@@Base+0x33e8>
    7648:	bhi	a948 <bt_compidtostr@@Base+0x33f4>
    764c:	ldr	r0, [pc, #3152]	; 82a4 <bt_compidtostr@@Base+0xd50>
    7650:	add	r0, pc, r0
    7654:	bx	lr
    7658:	cmp	r0, #21
    765c:	beq	a960 <bt_compidtostr@@Base+0x340c>
    7660:	bhi	a96c <bt_compidtostr@@Base+0x3418>
    7664:	ldr	r0, [pc, #3132]	; 82a8 <bt_compidtostr@@Base+0xd54>
    7668:	add	r0, pc, r0
    766c:	bx	lr
    7670:	cmp	r0, #27
    7674:	beq	a99c <bt_compidtostr@@Base+0x3448>
    7678:	bhi	7694 <bt_compidtostr@@Base+0x140>
    767c:	cmp	r0, #25
    7680:	beq	a984 <bt_compidtostr@@Base+0x3430>
    7684:	bhi	a990 <bt_compidtostr@@Base+0x343c>
    7688:	ldr	r0, [pc, #3100]	; 82ac <bt_compidtostr@@Base+0xd58>
    768c:	add	r0, pc, r0
    7690:	bx	lr
    7694:	cmp	r0, #29
    7698:	beq	a9a8 <bt_compidtostr@@Base+0x3454>
    769c:	bhi	a9b4 <bt_compidtostr@@Base+0x3460>
    76a0:	ldr	r0, [pc, #3080]	; 82b0 <bt_compidtostr@@Base+0xd5c>
    76a4:	add	r0, pc, r0
    76a8:	bx	lr
    76ac:	cmp	r0, #47	; 0x2f
    76b0:	beq	aa50 <bt_compidtostr@@Base+0x34fc>
    76b4:	bhi	773c <bt_compidtostr@@Base+0x1e8>
    76b8:	cmp	r0, #39	; 0x27
    76bc:	beq	aa08 <bt_compidtostr@@Base+0x34b4>
    76c0:	bhi	7700 <bt_compidtostr@@Base+0x1ac>
    76c4:	cmp	r0, #35	; 0x23
    76c8:	beq	a9e4 <bt_compidtostr@@Base+0x3490>
    76cc:	bhi	76e8 <bt_compidtostr@@Base+0x194>
    76d0:	cmp	r0, #33	; 0x21
    76d4:	beq	a9cc <bt_compidtostr@@Base+0x3478>
    76d8:	bhi	a9d8 <bt_compidtostr@@Base+0x3484>
    76dc:	ldr	r0, [pc, #3024]	; 82b4 <bt_compidtostr@@Base+0xd60>
    76e0:	add	r0, pc, r0
    76e4:	bx	lr
    76e8:	cmp	r0, #37	; 0x25
    76ec:	beq	a9f0 <bt_compidtostr@@Base+0x349c>
    76f0:	bhi	a9fc <bt_compidtostr@@Base+0x34a8>
    76f4:	ldr	r0, [pc, #3004]	; 82b8 <bt_compidtostr@@Base+0xd64>
    76f8:	add	r0, pc, r0
    76fc:	bx	lr
    7700:	cmp	r0, #43	; 0x2b
    7704:	beq	aa2c <bt_compidtostr@@Base+0x34d8>
    7708:	bhi	7724 <bt_compidtostr@@Base+0x1d0>
    770c:	cmp	r0, #41	; 0x29
    7710:	beq	aa14 <bt_compidtostr@@Base+0x34c0>
    7714:	bhi	aa20 <bt_compidtostr@@Base+0x34cc>
    7718:	ldr	r0, [pc, #2972]	; 82bc <bt_compidtostr@@Base+0xd68>
    771c:	add	r0, pc, r0
    7720:	bx	lr
    7724:	cmp	r0, #45	; 0x2d
    7728:	beq	aa38 <bt_compidtostr@@Base+0x34e4>
    772c:	bhi	aa44 <bt_compidtostr@@Base+0x34f0>
    7730:	ldr	r0, [pc, #2952]	; 82c0 <bt_compidtostr@@Base+0xd6c>
    7734:	add	r0, pc, r0
    7738:	bx	lr
    773c:	cmp	r0, #55	; 0x37
    7740:	beq	aa98 <bt_compidtostr@@Base+0x3544>
    7744:	bhi	7784 <bt_compidtostr@@Base+0x230>
    7748:	cmp	r0, #51	; 0x33
    774c:	beq	aa74 <bt_compidtostr@@Base+0x3520>
    7750:	bhi	776c <bt_compidtostr@@Base+0x218>
    7754:	cmp	r0, #49	; 0x31
    7758:	beq	aa5c <bt_compidtostr@@Base+0x3508>
    775c:	bhi	aa68 <bt_compidtostr@@Base+0x3514>
    7760:	ldr	r0, [pc, #2908]	; 82c4 <bt_compidtostr@@Base+0xd70>
    7764:	add	r0, pc, r0
    7768:	bx	lr
    776c:	cmp	r0, #53	; 0x35
    7770:	beq	aa80 <bt_compidtostr@@Base+0x352c>
    7774:	bhi	aa8c <bt_compidtostr@@Base+0x3538>
    7778:	ldr	r0, [pc, #2888]	; 82c8 <bt_compidtostr@@Base+0xd74>
    777c:	add	r0, pc, r0
    7780:	bx	lr
    7784:	cmp	r0, #59	; 0x3b
    7788:	beq	aabc <bt_compidtostr@@Base+0x3568>
    778c:	bhi	77a8 <bt_compidtostr@@Base+0x254>
    7790:	cmp	r0, #57	; 0x39
    7794:	beq	aaa4 <bt_compidtostr@@Base+0x3550>
    7798:	bhi	aab0 <bt_compidtostr@@Base+0x355c>
    779c:	ldr	r0, [pc, #2856]	; 82cc <bt_compidtostr@@Base+0xd78>
    77a0:	add	r0, pc, r0
    77a4:	bx	lr
    77a8:	cmp	r0, #61	; 0x3d
    77ac:	beq	aad4 <bt_compidtostr@@Base+0x3580>
    77b0:	bcc	aac8 <bt_compidtostr@@Base+0x3574>
    77b4:	cmp	r0, #62	; 0x3e
    77b8:	beq	aae0 <bt_compidtostr@@Base+0x358c>
    77bc:	cmp	r0, #63	; 0x3f
    77c0:	beq	aaec <bt_compidtostr@@Base+0x3598>
    77c4:	ldr	r0, [pc, #2820]	; 82d0 <bt_compidtostr@@Base+0xd7c>
    77c8:	add	r0, pc, r0
    77cc:	bx	lr
    77d0:	cmp	r0, #96	; 0x60
    77d4:	beq	ac18 <bt_compidtostr@@Base+0x36c4>
    77d8:	bhi	78f0 <bt_compidtostr@@Base+0x39c>
    77dc:	cmp	r0, #80	; 0x50
    77e0:	beq	ab88 <bt_compidtostr@@Base+0x3634>
    77e4:	bhi	786c <bt_compidtostr@@Base+0x318>
    77e8:	cmp	r0, #72	; 0x48
    77ec:	beq	ab40 <bt_compidtostr@@Base+0x35ec>
    77f0:	bhi	7830 <bt_compidtostr@@Base+0x2dc>
    77f4:	cmp	r0, #68	; 0x44
    77f8:	beq	ab1c <bt_compidtostr@@Base+0x35c8>
    77fc:	bhi	7818 <bt_compidtostr@@Base+0x2c4>
    7800:	cmp	r0, #66	; 0x42
    7804:	beq	ab04 <bt_compidtostr@@Base+0x35b0>
    7808:	bhi	ab10 <bt_compidtostr@@Base+0x35bc>
    780c:	ldr	r0, [pc, #2752]	; 82d4 <bt_compidtostr@@Base+0xd80>
    7810:	add	r0, pc, r0
    7814:	bx	lr
    7818:	cmp	r0, #70	; 0x46
    781c:	beq	ab28 <bt_compidtostr@@Base+0x35d4>
    7820:	bhi	ab34 <bt_compidtostr@@Base+0x35e0>
    7824:	ldr	r0, [pc, #2732]	; 82d8 <bt_compidtostr@@Base+0xd84>
    7828:	add	r0, pc, r0
    782c:	bx	lr
    7830:	cmp	r0, #76	; 0x4c
    7834:	beq	ab64 <bt_compidtostr@@Base+0x3610>
    7838:	bhi	7854 <bt_compidtostr@@Base+0x300>
    783c:	cmp	r0, #74	; 0x4a
    7840:	beq	ab4c <bt_compidtostr@@Base+0x35f8>
    7844:	bhi	ab58 <bt_compidtostr@@Base+0x3604>
    7848:	ldr	r0, [pc, #2700]	; 82dc <bt_compidtostr@@Base+0xd88>
    784c:	add	r0, pc, r0
    7850:	bx	lr
    7854:	cmp	r0, #78	; 0x4e
    7858:	beq	ab70 <bt_compidtostr@@Base+0x361c>
    785c:	bhi	ab7c <bt_compidtostr@@Base+0x3628>
    7860:	ldr	r0, [pc, #2680]	; 82e0 <bt_compidtostr@@Base+0xd8c>
    7864:	add	r0, pc, r0
    7868:	bx	lr
    786c:	cmp	r0, #88	; 0x58
    7870:	beq	abd0 <bt_compidtostr@@Base+0x367c>
    7874:	bhi	78b4 <bt_compidtostr@@Base+0x360>
    7878:	cmp	r0, #84	; 0x54
    787c:	beq	abac <bt_compidtostr@@Base+0x3658>
    7880:	bhi	789c <bt_compidtostr@@Base+0x348>
    7884:	cmp	r0, #82	; 0x52
    7888:	beq	ab94 <bt_compidtostr@@Base+0x3640>
    788c:	bhi	aba0 <bt_compidtostr@@Base+0x364c>
    7890:	ldr	r0, [pc, #2636]	; 82e4 <bt_compidtostr@@Base+0xd90>
    7894:	add	r0, pc, r0
    7898:	bx	lr
    789c:	cmp	r0, #86	; 0x56
    78a0:	beq	abb8 <bt_compidtostr@@Base+0x3664>
    78a4:	bhi	abc4 <bt_compidtostr@@Base+0x3670>
    78a8:	ldr	r0, [pc, #2616]	; 82e8 <bt_compidtostr@@Base+0xd94>
    78ac:	add	r0, pc, r0
    78b0:	bx	lr
    78b4:	cmp	r0, #92	; 0x5c
    78b8:	beq	abf4 <bt_compidtostr@@Base+0x36a0>
    78bc:	bhi	78d8 <bt_compidtostr@@Base+0x384>
    78c0:	cmp	r0, #90	; 0x5a
    78c4:	beq	abdc <bt_compidtostr@@Base+0x3688>
    78c8:	bhi	abe8 <bt_compidtostr@@Base+0x3694>
    78cc:	ldr	r0, [pc, #2584]	; 82ec <bt_compidtostr@@Base+0xd98>
    78d0:	add	r0, pc, r0
    78d4:	bx	lr
    78d8:	cmp	r0, #94	; 0x5e
    78dc:	beq	ac00 <bt_compidtostr@@Base+0x36ac>
    78e0:	bhi	ac0c <bt_compidtostr@@Base+0x36b8>
    78e4:	ldr	r0, [pc, #2564]	; 82f0 <bt_compidtostr@@Base+0xd9c>
    78e8:	add	r0, pc, r0
    78ec:	bx	lr
    78f0:	cmp	r0, #112	; 0x70
    78f4:	beq	aca8 <bt_compidtostr@@Base+0x3754>
    78f8:	bhi	7980 <bt_compidtostr@@Base+0x42c>
    78fc:	cmp	r0, #104	; 0x68
    7900:	beq	ac60 <bt_compidtostr@@Base+0x370c>
    7904:	bhi	7944 <bt_compidtostr@@Base+0x3f0>
    7908:	cmp	r0, #100	; 0x64
    790c:	beq	ac3c <bt_compidtostr@@Base+0x36e8>
    7910:	bhi	792c <bt_compidtostr@@Base+0x3d8>
    7914:	cmp	r0, #98	; 0x62
    7918:	beq	ac24 <bt_compidtostr@@Base+0x36d0>
    791c:	bhi	ac30 <bt_compidtostr@@Base+0x36dc>
    7920:	ldr	r0, [pc, #2508]	; 82f4 <bt_compidtostr@@Base+0xda0>
    7924:	add	r0, pc, r0
    7928:	bx	lr
    792c:	cmp	r0, #102	; 0x66
    7930:	beq	ac48 <bt_compidtostr@@Base+0x36f4>
    7934:	bhi	ac54 <bt_compidtostr@@Base+0x3700>
    7938:	ldr	r0, [pc, #2488]	; 82f8 <bt_compidtostr@@Base+0xda4>
    793c:	add	r0, pc, r0
    7940:	bx	lr
    7944:	cmp	r0, #108	; 0x6c
    7948:	beq	ac84 <bt_compidtostr@@Base+0x3730>
    794c:	bhi	7968 <bt_compidtostr@@Base+0x414>
    7950:	cmp	r0, #106	; 0x6a
    7954:	beq	ac6c <bt_compidtostr@@Base+0x3718>
    7958:	bhi	ac78 <bt_compidtostr@@Base+0x3724>
    795c:	ldr	r0, [pc, #2456]	; 82fc <bt_compidtostr@@Base+0xda8>
    7960:	add	r0, pc, r0
    7964:	bx	lr
    7968:	cmp	r0, #110	; 0x6e
    796c:	beq	ac90 <bt_compidtostr@@Base+0x373c>
    7970:	bhi	ac9c <bt_compidtostr@@Base+0x3748>
    7974:	ldr	r0, [pc, #2436]	; 8300 <bt_compidtostr@@Base+0xdac>
    7978:	add	r0, pc, r0
    797c:	bx	lr
    7980:	cmp	r0, #120	; 0x78
    7984:	beq	acf0 <bt_compidtostr@@Base+0x379c>
    7988:	bhi	79c8 <bt_compidtostr@@Base+0x474>
    798c:	cmp	r0, #116	; 0x74
    7990:	beq	accc <bt_compidtostr@@Base+0x3778>
    7994:	bhi	79b0 <bt_compidtostr@@Base+0x45c>
    7998:	cmp	r0, #114	; 0x72
    799c:	beq	acb4 <bt_compidtostr@@Base+0x3760>
    79a0:	bhi	acc0 <bt_compidtostr@@Base+0x376c>
    79a4:	ldr	r0, [pc, #2392]	; 8304 <bt_compidtostr@@Base+0xdb0>
    79a8:	add	r0, pc, r0
    79ac:	bx	lr
    79b0:	cmp	r0, #118	; 0x76
    79b4:	beq	acd8 <bt_compidtostr@@Base+0x3784>
    79b8:	bhi	ace4 <bt_compidtostr@@Base+0x3790>
    79bc:	ldr	r0, [pc, #2372]	; 8308 <bt_compidtostr@@Base+0xdb4>
    79c0:	add	r0, pc, r0
    79c4:	bx	lr
    79c8:	cmp	r0, #124	; 0x7c
    79cc:	beq	ad14 <bt_compidtostr@@Base+0x37c0>
    79d0:	bhi	79ec <bt_compidtostr@@Base+0x498>
    79d4:	cmp	r0, #122	; 0x7a
    79d8:	beq	acfc <bt_compidtostr@@Base+0x37a8>
    79dc:	bhi	ad08 <bt_compidtostr@@Base+0x37b4>
    79e0:	ldr	r0, [pc, #2340]	; 830c <bt_compidtostr@@Base+0xdb8>
    79e4:	add	r0, pc, r0
    79e8:	bx	lr
    79ec:	cmp	r0, #126	; 0x7e
    79f0:	beq	ad2c <bt_compidtostr@@Base+0x37d8>
    79f4:	bcc	ad20 <bt_compidtostr@@Base+0x37cc>
    79f8:	cmp	r0, #127	; 0x7f
    79fc:	beq	ad38 <bt_compidtostr@@Base+0x37e4>
    7a00:	cmp	r0, #128	; 0x80
    7a04:	bne	77c4 <bt_compidtostr@@Base+0x270>
    7a08:	ldr	r0, [pc, #2304]	; 8310 <bt_compidtostr@@Base+0xdbc>
    7a0c:	add	r0, pc, r0
    7a10:	bx	lr
    7a14:	cmp	r0, #194	; 0xc2
    7a18:	beq	af90 <bt_compidtostr@@Base+0x3a3c>
    7a1c:	bhi	7c64 <bt_compidtostr@@Base+0x710>
    7a20:	cmp	r0, #161	; 0xa1
    7a24:	beq	ae64 <bt_compidtostr@@Base+0x3910>
    7a28:	bhi	7b40 <bt_compidtostr@@Base+0x5ec>
    7a2c:	cmp	r0, #145	; 0x91
    7a30:	beq	add4 <bt_compidtostr@@Base+0x3880>
    7a34:	bhi	7abc <bt_compidtostr@@Base+0x568>
    7a38:	cmp	r0, #137	; 0x89
    7a3c:	beq	ad8c <bt_compidtostr@@Base+0x3838>
    7a40:	bhi	7a80 <bt_compidtostr@@Base+0x52c>
    7a44:	cmp	r0, #133	; 0x85
    7a48:	beq	ad68 <bt_compidtostr@@Base+0x3814>
    7a4c:	bhi	7a68 <bt_compidtostr@@Base+0x514>
    7a50:	cmp	r0, #131	; 0x83
    7a54:	beq	ad50 <bt_compidtostr@@Base+0x37fc>
    7a58:	bhi	ad5c <bt_compidtostr@@Base+0x3808>
    7a5c:	ldr	r0, [pc, #2224]	; 8314 <bt_compidtostr@@Base+0xdc0>
    7a60:	add	r0, pc, r0
    7a64:	bx	lr
    7a68:	cmp	r0, #135	; 0x87
    7a6c:	beq	ad74 <bt_compidtostr@@Base+0x3820>
    7a70:	bhi	ad80 <bt_compidtostr@@Base+0x382c>
    7a74:	ldr	r0, [pc, #2204]	; 8318 <bt_compidtostr@@Base+0xdc4>
    7a78:	add	r0, pc, r0
    7a7c:	bx	lr
    7a80:	cmp	r0, #141	; 0x8d
    7a84:	beq	adb0 <bt_compidtostr@@Base+0x385c>
    7a88:	bhi	7aa4 <bt_compidtostr@@Base+0x550>
    7a8c:	cmp	r0, #139	; 0x8b
    7a90:	beq	ad98 <bt_compidtostr@@Base+0x3844>
    7a94:	bhi	ada4 <bt_compidtostr@@Base+0x3850>
    7a98:	ldr	r0, [pc, #2172]	; 831c <bt_compidtostr@@Base+0xdc8>
    7a9c:	add	r0, pc, r0
    7aa0:	bx	lr
    7aa4:	cmp	r0, #143	; 0x8f
    7aa8:	beq	adbc <bt_compidtostr@@Base+0x3868>
    7aac:	bhi	adc8 <bt_compidtostr@@Base+0x3874>
    7ab0:	ldr	r0, [pc, #2152]	; 8320 <bt_compidtostr@@Base+0xdcc>
    7ab4:	add	r0, pc, r0
    7ab8:	bx	lr
    7abc:	cmp	r0, #153	; 0x99
    7ac0:	beq	ae1c <bt_compidtostr@@Base+0x38c8>
    7ac4:	bhi	7b04 <bt_compidtostr@@Base+0x5b0>
    7ac8:	cmp	r0, #149	; 0x95
    7acc:	beq	adf8 <bt_compidtostr@@Base+0x38a4>
    7ad0:	bhi	7aec <bt_compidtostr@@Base+0x598>
    7ad4:	cmp	r0, #147	; 0x93
    7ad8:	beq	ade0 <bt_compidtostr@@Base+0x388c>
    7adc:	bhi	adec <bt_compidtostr@@Base+0x3898>
    7ae0:	ldr	r0, [pc, #2108]	; 8324 <bt_compidtostr@@Base+0xdd0>
    7ae4:	add	r0, pc, r0
    7ae8:	bx	lr
    7aec:	cmp	r0, #151	; 0x97
    7af0:	beq	ae04 <bt_compidtostr@@Base+0x38b0>
    7af4:	bhi	ae10 <bt_compidtostr@@Base+0x38bc>
    7af8:	ldr	r0, [pc, #2088]	; 8328 <bt_compidtostr@@Base+0xdd4>
    7afc:	add	r0, pc, r0
    7b00:	bx	lr
    7b04:	cmp	r0, #157	; 0x9d
    7b08:	beq	ae40 <bt_compidtostr@@Base+0x38ec>
    7b0c:	bhi	7b28 <bt_compidtostr@@Base+0x5d4>
    7b10:	cmp	r0, #155	; 0x9b
    7b14:	beq	ae28 <bt_compidtostr@@Base+0x38d4>
    7b18:	bhi	ae34 <bt_compidtostr@@Base+0x38e0>
    7b1c:	ldr	r0, [pc, #2056]	; 832c <bt_compidtostr@@Base+0xdd8>
    7b20:	add	r0, pc, r0
    7b24:	bx	lr
    7b28:	cmp	r0, #159	; 0x9f
    7b2c:	beq	ae4c <bt_compidtostr@@Base+0x38f8>
    7b30:	bhi	ae58 <bt_compidtostr@@Base+0x3904>
    7b34:	ldr	r0, [pc, #2036]	; 8330 <bt_compidtostr@@Base+0xddc>
    7b38:	add	r0, pc, r0
    7b3c:	bx	lr
    7b40:	cmp	r0, #177	; 0xb1
    7b44:	beq	aef4 <bt_compidtostr@@Base+0x39a0>
    7b48:	bhi	7bd0 <bt_compidtostr@@Base+0x67c>
    7b4c:	cmp	r0, #169	; 0xa9
    7b50:	beq	aeac <bt_compidtostr@@Base+0x3958>
    7b54:	bhi	7b94 <bt_compidtostr@@Base+0x640>
    7b58:	cmp	r0, #165	; 0xa5
    7b5c:	beq	ae88 <bt_compidtostr@@Base+0x3934>
    7b60:	bhi	7b7c <bt_compidtostr@@Base+0x628>
    7b64:	cmp	r0, #163	; 0xa3
    7b68:	beq	ae70 <bt_compidtostr@@Base+0x391c>
    7b6c:	bhi	ae7c <bt_compidtostr@@Base+0x3928>
    7b70:	ldr	r0, [pc, #1980]	; 8334 <bt_compidtostr@@Base+0xde0>
    7b74:	add	r0, pc, r0
    7b78:	bx	lr
    7b7c:	cmp	r0, #167	; 0xa7
    7b80:	beq	ae94 <bt_compidtostr@@Base+0x3940>
    7b84:	bhi	aea0 <bt_compidtostr@@Base+0x394c>
    7b88:	ldr	r0, [pc, #1960]	; 8338 <bt_compidtostr@@Base+0xde4>
    7b8c:	add	r0, pc, r0
    7b90:	bx	lr
    7b94:	cmp	r0, #173	; 0xad
    7b98:	beq	aed0 <bt_compidtostr@@Base+0x397c>
    7b9c:	bhi	7bb8 <bt_compidtostr@@Base+0x664>
    7ba0:	cmp	r0, #171	; 0xab
    7ba4:	beq	aeb8 <bt_compidtostr@@Base+0x3964>
    7ba8:	bhi	aec4 <bt_compidtostr@@Base+0x3970>
    7bac:	ldr	r0, [pc, #1928]	; 833c <bt_compidtostr@@Base+0xde8>
    7bb0:	add	r0, pc, r0
    7bb4:	bx	lr
    7bb8:	cmp	r0, #175	; 0xaf
    7bbc:	beq	aedc <bt_compidtostr@@Base+0x3988>
    7bc0:	bhi	aee8 <bt_compidtostr@@Base+0x3994>
    7bc4:	ldr	r0, [pc, #1908]	; 8340 <bt_compidtostr@@Base+0xdec>
    7bc8:	add	r0, pc, r0
    7bcc:	bx	lr
    7bd0:	cmp	r0, #185	; 0xb9
    7bd4:	beq	af3c <bt_compidtostr@@Base+0x39e8>
    7bd8:	bhi	7c18 <bt_compidtostr@@Base+0x6c4>
    7bdc:	cmp	r0, #181	; 0xb5
    7be0:	beq	af18 <bt_compidtostr@@Base+0x39c4>
    7be4:	bhi	7c00 <bt_compidtostr@@Base+0x6ac>
    7be8:	cmp	r0, #179	; 0xb3
    7bec:	beq	af00 <bt_compidtostr@@Base+0x39ac>
    7bf0:	bhi	af0c <bt_compidtostr@@Base+0x39b8>
    7bf4:	ldr	r0, [pc, #1864]	; 8344 <bt_compidtostr@@Base+0xdf0>
    7bf8:	add	r0, pc, r0
    7bfc:	bx	lr
    7c00:	cmp	r0, #183	; 0xb7
    7c04:	beq	af24 <bt_compidtostr@@Base+0x39d0>
    7c08:	bhi	af30 <bt_compidtostr@@Base+0x39dc>
    7c0c:	ldr	r0, [pc, #1844]	; 8348 <bt_compidtostr@@Base+0xdf4>
    7c10:	add	r0, pc, r0
    7c14:	bx	lr
    7c18:	cmp	r0, #189	; 0xbd
    7c1c:	beq	af60 <bt_compidtostr@@Base+0x3a0c>
    7c20:	bhi	7c3c <bt_compidtostr@@Base+0x6e8>
    7c24:	cmp	r0, #187	; 0xbb
    7c28:	beq	af48 <bt_compidtostr@@Base+0x39f4>
    7c2c:	bhi	af54 <bt_compidtostr@@Base+0x3a00>
    7c30:	ldr	r0, [pc, #1812]	; 834c <bt_compidtostr@@Base+0xdf8>
    7c34:	add	r0, pc, r0
    7c38:	bx	lr
    7c3c:	cmp	r0, #191	; 0xbf
    7c40:	beq	af78 <bt_compidtostr@@Base+0x3a24>
    7c44:	bcc	af6c <bt_compidtostr@@Base+0x3a18>
    7c48:	cmp	r0, #192	; 0xc0
    7c4c:	beq	af84 <bt_compidtostr@@Base+0x3a30>
    7c50:	cmp	r0, #193	; 0xc1
    7c54:	bne	77c4 <bt_compidtostr@@Base+0x270>
    7c58:	ldr	r0, [pc, #1776]	; 8350 <bt_compidtostr@@Base+0xdfc>
    7c5c:	add	r0, pc, r0
    7c60:	bx	lr
    7c64:	cmp	r0, #226	; 0xe2
    7c68:	beq	b0b0 <bt_compidtostr@@Base+0x3b5c>
    7c6c:	bhi	7d84 <bt_compidtostr@@Base+0x830>
    7c70:	cmp	r0, #210	; 0xd2
    7c74:	beq	b020 <bt_compidtostr@@Base+0x3acc>
    7c78:	bhi	7d00 <bt_compidtostr@@Base+0x7ac>
    7c7c:	cmp	r0, #202	; 0xca
    7c80:	beq	afd8 <bt_compidtostr@@Base+0x3a84>
    7c84:	bhi	7cc4 <bt_compidtostr@@Base+0x770>
    7c88:	cmp	r0, #198	; 0xc6
    7c8c:	beq	afb4 <bt_compidtostr@@Base+0x3a60>
    7c90:	bhi	7cac <bt_compidtostr@@Base+0x758>
    7c94:	cmp	r0, #196	; 0xc4
    7c98:	beq	af9c <bt_compidtostr@@Base+0x3a48>
    7c9c:	bhi	afa8 <bt_compidtostr@@Base+0x3a54>
    7ca0:	ldr	r0, [pc, #1708]	; 8354 <bt_compidtostr@@Base+0xe00>
    7ca4:	add	r0, pc, r0
    7ca8:	bx	lr
    7cac:	cmp	r0, #200	; 0xc8
    7cb0:	beq	afc0 <bt_compidtostr@@Base+0x3a6c>
    7cb4:	bhi	afcc <bt_compidtostr@@Base+0x3a78>
    7cb8:	ldr	r0, [pc, #1688]	; 8358 <bt_compidtostr@@Base+0xe04>
    7cbc:	add	r0, pc, r0
    7cc0:	bx	lr
    7cc4:	cmp	r0, #206	; 0xce
    7cc8:	beq	affc <bt_compidtostr@@Base+0x3aa8>
    7ccc:	bhi	7ce8 <bt_compidtostr@@Base+0x794>
    7cd0:	cmp	r0, #204	; 0xcc
    7cd4:	beq	afe4 <bt_compidtostr@@Base+0x3a90>
    7cd8:	bhi	aff0 <bt_compidtostr@@Base+0x3a9c>
    7cdc:	ldr	r0, [pc, #1656]	; 835c <bt_compidtostr@@Base+0xe08>
    7ce0:	add	r0, pc, r0
    7ce4:	bx	lr
    7ce8:	cmp	r0, #208	; 0xd0
    7cec:	beq	b008 <bt_compidtostr@@Base+0x3ab4>
    7cf0:	bhi	b014 <bt_compidtostr@@Base+0x3ac0>
    7cf4:	ldr	r0, [pc, #1636]	; 8360 <bt_compidtostr@@Base+0xe0c>
    7cf8:	add	r0, pc, r0
    7cfc:	bx	lr
    7d00:	cmp	r0, #218	; 0xda
    7d04:	beq	b068 <bt_compidtostr@@Base+0x3b14>
    7d08:	bhi	7d48 <bt_compidtostr@@Base+0x7f4>
    7d0c:	cmp	r0, #214	; 0xd6
    7d10:	beq	b044 <bt_compidtostr@@Base+0x3af0>
    7d14:	bhi	7d30 <bt_compidtostr@@Base+0x7dc>
    7d18:	cmp	r0, #212	; 0xd4
    7d1c:	beq	b02c <bt_compidtostr@@Base+0x3ad8>
    7d20:	bhi	b038 <bt_compidtostr@@Base+0x3ae4>
    7d24:	ldr	r0, [pc, #1592]	; 8364 <bt_compidtostr@@Base+0xe10>
    7d28:	add	r0, pc, r0
    7d2c:	bx	lr
    7d30:	cmp	r0, #216	; 0xd8
    7d34:	beq	b050 <bt_compidtostr@@Base+0x3afc>
    7d38:	bhi	b05c <bt_compidtostr@@Base+0x3b08>
    7d3c:	ldr	r0, [pc, #1572]	; 8368 <bt_compidtostr@@Base+0xe14>
    7d40:	add	r0, pc, r0
    7d44:	bx	lr
    7d48:	cmp	r0, #222	; 0xde
    7d4c:	beq	b08c <bt_compidtostr@@Base+0x3b38>
    7d50:	bhi	7d6c <bt_compidtostr@@Base+0x818>
    7d54:	cmp	r0, #220	; 0xdc
    7d58:	beq	b074 <bt_compidtostr@@Base+0x3b20>
    7d5c:	bhi	b080 <bt_compidtostr@@Base+0x3b2c>
    7d60:	ldr	r0, [pc, #1540]	; 836c <bt_compidtostr@@Base+0xe18>
    7d64:	add	r0, pc, r0
    7d68:	bx	lr
    7d6c:	cmp	r0, #224	; 0xe0
    7d70:	beq	b098 <bt_compidtostr@@Base+0x3b44>
    7d74:	bhi	b0a4 <bt_compidtostr@@Base+0x3b50>
    7d78:	ldr	r0, [pc, #1520]	; 8370 <bt_compidtostr@@Base+0xe1c>
    7d7c:	add	r0, pc, r0
    7d80:	bx	lr
    7d84:	cmp	r0, #242	; 0xf2
    7d88:	beq	b140 <bt_compidtostr@@Base+0x3bec>
    7d8c:	bhi	7e14 <bt_compidtostr@@Base+0x8c0>
    7d90:	cmp	r0, #234	; 0xea
    7d94:	beq	b0f8 <bt_compidtostr@@Base+0x3ba4>
    7d98:	bhi	7dd8 <bt_compidtostr@@Base+0x884>
    7d9c:	cmp	r0, #230	; 0xe6
    7da0:	beq	b0d4 <bt_compidtostr@@Base+0x3b80>
    7da4:	bhi	7dc0 <bt_compidtostr@@Base+0x86c>
    7da8:	cmp	r0, #228	; 0xe4
    7dac:	beq	b0bc <bt_compidtostr@@Base+0x3b68>
    7db0:	bhi	b0c8 <bt_compidtostr@@Base+0x3b74>
    7db4:	ldr	r0, [pc, #1464]	; 8374 <bt_compidtostr@@Base+0xe20>
    7db8:	add	r0, pc, r0
    7dbc:	bx	lr
    7dc0:	cmp	r0, #232	; 0xe8
    7dc4:	beq	b0e0 <bt_compidtostr@@Base+0x3b8c>
    7dc8:	bhi	b0ec <bt_compidtostr@@Base+0x3b98>
    7dcc:	ldr	r0, [pc, #1444]	; 8378 <bt_compidtostr@@Base+0xe24>
    7dd0:	add	r0, pc, r0
    7dd4:	bx	lr
    7dd8:	cmp	r0, #238	; 0xee
    7ddc:	beq	b11c <bt_compidtostr@@Base+0x3bc8>
    7de0:	bhi	7dfc <bt_compidtostr@@Base+0x8a8>
    7de4:	cmp	r0, #236	; 0xec
    7de8:	beq	b104 <bt_compidtostr@@Base+0x3bb0>
    7dec:	bhi	b110 <bt_compidtostr@@Base+0x3bbc>
    7df0:	ldr	r0, [pc, #1412]	; 837c <bt_compidtostr@@Base+0xe28>
    7df4:	add	r0, pc, r0
    7df8:	bx	lr
    7dfc:	cmp	r0, #240	; 0xf0
    7e00:	beq	b128 <bt_compidtostr@@Base+0x3bd4>
    7e04:	bhi	b134 <bt_compidtostr@@Base+0x3be0>
    7e08:	ldr	r0, [pc, #1392]	; 8380 <bt_compidtostr@@Base+0xe2c>
    7e0c:	add	r0, pc, r0
    7e10:	bx	lr
    7e14:	cmp	r0, #250	; 0xfa
    7e18:	beq	b188 <bt_compidtostr@@Base+0x3c34>
    7e1c:	bhi	7e5c <bt_compidtostr@@Base+0x908>
    7e20:	cmp	r0, #246	; 0xf6
    7e24:	beq	b164 <bt_compidtostr@@Base+0x3c10>
    7e28:	bhi	7e44 <bt_compidtostr@@Base+0x8f0>
    7e2c:	cmp	r0, #244	; 0xf4
    7e30:	beq	b14c <bt_compidtostr@@Base+0x3bf8>
    7e34:	bhi	b158 <bt_compidtostr@@Base+0x3c04>
    7e38:	ldr	r0, [pc, #1348]	; 8384 <bt_compidtostr@@Base+0xe30>
    7e3c:	add	r0, pc, r0
    7e40:	bx	lr
    7e44:	cmp	r0, #248	; 0xf8
    7e48:	beq	b170 <bt_compidtostr@@Base+0x3c1c>
    7e4c:	bhi	b17c <bt_compidtostr@@Base+0x3c28>
    7e50:	ldr	r0, [pc, #1328]	; 8388 <bt_compidtostr@@Base+0xe34>
    7e54:	add	r0, pc, r0
    7e58:	bx	lr
    7e5c:	cmp	r0, #254	; 0xfe
    7e60:	beq	b1ac <bt_compidtostr@@Base+0x3c58>
    7e64:	bhi	7e80 <bt_compidtostr@@Base+0x92c>
    7e68:	cmp	r0, #252	; 0xfc
    7e6c:	beq	b194 <bt_compidtostr@@Base+0x3c40>
    7e70:	bhi	b1a0 <bt_compidtostr@@Base+0x3c4c>
    7e74:	ldr	r0, [pc, #1296]	; 838c <bt_compidtostr@@Base+0xe38>
    7e78:	add	r0, pc, r0
    7e7c:	bx	lr
    7e80:	cmp	r0, #256	; 0x100
    7e84:	beq	b1c4 <bt_compidtostr@@Base+0x3c70>
    7e88:	bcc	b1b8 <bt_compidtostr@@Base+0x3c64>
    7e8c:	ldr	r3, [pc, #1276]	; 8390 <bt_compidtostr@@Base+0xe3c>
    7e90:	cmp	r0, r3
    7e94:	beq	b1d0 <bt_compidtostr@@Base+0x3c7c>
    7e98:	add	r3, r3, #1
    7e9c:	cmp	r0, r3
    7ea0:	bne	77c4 <bt_compidtostr@@Base+0x270>
    7ea4:	ldr	r0, [pc, #1256]	; 8394 <bt_compidtostr@@Base+0xe40>
    7ea8:	add	r0, pc, r0
    7eac:	bx	lr
    7eb0:	ldr	r3, [pc, #1248]	; 8398 <bt_compidtostr@@Base+0xe44>
    7eb4:	cmp	r0, r3
    7eb8:	beq	b674 <bt_compidtostr@@Base+0x4120>
    7ebc:	bhi	8834 <bt_compidtostr@@Base+0x12e0>
    7ec0:	cmp	r0, #324	; 0x144
    7ec4:	beq	b428 <bt_compidtostr@@Base+0x3ed4>
    7ec8:	bhi	8194 <bt_compidtostr@@Base+0xc40>
    7ecc:	sub	r3, r3, #98	; 0x62
    7ed0:	cmp	r0, r3
    7ed4:	beq	b2fc <bt_compidtostr@@Base+0x3da8>
    7ed8:	bhi	802c <bt_compidtostr@@Base+0xad8>
    7edc:	sub	r3, r3, #16
    7ee0:	cmp	r0, r3
    7ee4:	beq	b26c <bt_compidtostr@@Base+0x3d18>
    7ee8:	bhi	7f8c <bt_compidtostr@@Base+0xa38>
    7eec:	sub	r3, r3, #8
    7ef0:	cmp	r0, r3
    7ef4:	beq	b224 <bt_compidtostr@@Base+0x3cd0>
    7ef8:	bhi	7f44 <bt_compidtostr@@Base+0x9f0>
    7efc:	sub	r3, r3, #4
    7f00:	cmp	r0, r3
    7f04:	beq	b200 <bt_compidtostr@@Base+0x3cac>
    7f08:	bhi	7f28 <bt_compidtostr@@Base+0x9d4>
    7f0c:	sub	r3, r3, #2
    7f10:	cmp	r0, r3
    7f14:	beq	b1e8 <bt_compidtostr@@Base+0x3c94>
    7f18:	bhi	b1f4 <bt_compidtostr@@Base+0x3ca0>
    7f1c:	ldr	r0, [pc, #1144]	; 839c <bt_compidtostr@@Base+0xe48>
    7f20:	add	r0, pc, r0
    7f24:	bx	lr
    7f28:	ldr	r3, [pc, #1136]	; 83a0 <bt_compidtostr@@Base+0xe4c>
    7f2c:	cmp	r0, r3
    7f30:	beq	b20c <bt_compidtostr@@Base+0x3cb8>
    7f34:	bhi	b218 <bt_compidtostr@@Base+0x3cc4>
    7f38:	ldr	r0, [pc, #1124]	; 83a4 <bt_compidtostr@@Base+0xe50>
    7f3c:	add	r0, pc, r0
    7f40:	bx	lr
    7f44:	ldr	r3, [pc, #1116]	; 83a8 <bt_compidtostr@@Base+0xe54>
    7f48:	cmp	r0, r3
    7f4c:	beq	b248 <bt_compidtostr@@Base+0x3cf4>
    7f50:	bhi	7f70 <bt_compidtostr@@Base+0xa1c>
    7f54:	sub	r3, r3, #2
    7f58:	cmp	r0, r3
    7f5c:	beq	b230 <bt_compidtostr@@Base+0x3cdc>
    7f60:	bhi	b23c <bt_compidtostr@@Base+0x3ce8>
    7f64:	ldr	r0, [pc, #1088]	; 83ac <bt_compidtostr@@Base+0xe58>
    7f68:	add	r0, pc, r0
    7f6c:	bx	lr
    7f70:	ldr	r3, [pc, #1080]	; 83b0 <bt_compidtostr@@Base+0xe5c>
    7f74:	cmp	r0, r3
    7f78:	beq	b254 <bt_compidtostr@@Base+0x3d00>
    7f7c:	bhi	b260 <bt_compidtostr@@Base+0x3d0c>
    7f80:	ldr	r0, [pc, #1068]	; 83b4 <bt_compidtostr@@Base+0xe60>
    7f84:	add	r0, pc, r0
    7f88:	bx	lr
    7f8c:	ldr	r3, [pc, #1060]	; 83b8 <bt_compidtostr@@Base+0xe64>
    7f90:	cmp	r0, r3
    7f94:	beq	b2b4 <bt_compidtostr@@Base+0x3d60>
    7f98:	bhi	7fe4 <bt_compidtostr@@Base+0xa90>
    7f9c:	sub	r3, r3, #4
    7fa0:	cmp	r0, r3
    7fa4:	beq	b290 <bt_compidtostr@@Base+0x3d3c>
    7fa8:	bhi	7fc8 <bt_compidtostr@@Base+0xa74>
    7fac:	sub	r3, r3, #2
    7fb0:	cmp	r0, r3
    7fb4:	beq	b278 <bt_compidtostr@@Base+0x3d24>
    7fb8:	bhi	b284 <bt_compidtostr@@Base+0x3d30>
    7fbc:	ldr	r0, [pc, #1016]	; 83bc <bt_compidtostr@@Base+0xe68>
    7fc0:	add	r0, pc, r0
    7fc4:	bx	lr
    7fc8:	ldr	r3, [pc, #1008]	; 83c0 <bt_compidtostr@@Base+0xe6c>
    7fcc:	cmp	r0, r3
    7fd0:	beq	b29c <bt_compidtostr@@Base+0x3d48>
    7fd4:	bhi	b2a8 <bt_compidtostr@@Base+0x3d54>
    7fd8:	ldr	r0, [pc, #996]	; 83c4 <bt_compidtostr@@Base+0xe70>
    7fdc:	add	r0, pc, r0
    7fe0:	bx	lr
    7fe4:	ldr	r3, [pc, #988]	; 83c8 <bt_compidtostr@@Base+0xe74>
    7fe8:	cmp	r0, r3
    7fec:	beq	b2d8 <bt_compidtostr@@Base+0x3d84>
    7ff0:	bhi	8010 <bt_compidtostr@@Base+0xabc>
    7ff4:	sub	r3, r3, #2
    7ff8:	cmp	r0, r3
    7ffc:	beq	b2c0 <bt_compidtostr@@Base+0x3d6c>
    8000:	bhi	b2cc <bt_compidtostr@@Base+0x3d78>
    8004:	ldr	r0, [pc, #960]	; 83cc <bt_compidtostr@@Base+0xe78>
    8008:	add	r0, pc, r0
    800c:	bx	lr
    8010:	ldr	r3, [pc, #952]	; 83d0 <bt_compidtostr@@Base+0xe7c>
    8014:	cmp	r0, r3
    8018:	beq	b2e4 <bt_compidtostr@@Base+0x3d90>
    801c:	bhi	b2f0 <bt_compidtostr@@Base+0x3d9c>
    8020:	ldr	r0, [pc, #940]	; 83d4 <bt_compidtostr@@Base+0xe80>
    8024:	add	r0, pc, r0
    8028:	bx	lr
    802c:	ldr	r3, [pc, #932]	; 83d8 <bt_compidtostr@@Base+0xe84>
    8030:	cmp	r0, r3
    8034:	beq	b38c <bt_compidtostr@@Base+0x3e38>
    8038:	bhi	80dc <bt_compidtostr@@Base+0xb88>
    803c:	sub	r3, r3, #8
    8040:	cmp	r0, r3
    8044:	beq	b344 <bt_compidtostr@@Base+0x3df0>
    8048:	bhi	8094 <bt_compidtostr@@Base+0xb40>
    804c:	sub	r3, r3, #4
    8050:	cmp	r0, r3
    8054:	beq	b320 <bt_compidtostr@@Base+0x3dcc>
    8058:	bhi	8078 <bt_compidtostr@@Base+0xb24>
    805c:	sub	r3, r3, #2
    8060:	cmp	r0, r3
    8064:	beq	b308 <bt_compidtostr@@Base+0x3db4>
    8068:	bhi	b314 <bt_compidtostr@@Base+0x3dc0>
    806c:	ldr	r0, [pc, #872]	; 83dc <bt_compidtostr@@Base+0xe88>
    8070:	add	r0, pc, r0
    8074:	bx	lr
    8078:	ldr	r3, [pc, #864]	; 83e0 <bt_compidtostr@@Base+0xe8c>
    807c:	cmp	r0, r3
    8080:	beq	b32c <bt_compidtostr@@Base+0x3dd8>
    8084:	bhi	b338 <bt_compidtostr@@Base+0x3de4>
    8088:	ldr	r0, [pc, #852]	; 83e4 <bt_compidtostr@@Base+0xe90>
    808c:	add	r0, pc, r0
    8090:	bx	lr
    8094:	ldr	r3, [pc, #844]	; 83e8 <bt_compidtostr@@Base+0xe94>
    8098:	cmp	r0, r3
    809c:	beq	b368 <bt_compidtostr@@Base+0x3e14>
    80a0:	bhi	80c0 <bt_compidtostr@@Base+0xb6c>
    80a4:	sub	r3, r3, #2
    80a8:	cmp	r0, r3
    80ac:	beq	b350 <bt_compidtostr@@Base+0x3dfc>
    80b0:	bhi	b35c <bt_compidtostr@@Base+0x3e08>
    80b4:	ldr	r0, [pc, #816]	; 83ec <bt_compidtostr@@Base+0xe98>
    80b8:	add	r0, pc, r0
    80bc:	bx	lr
    80c0:	ldr	r3, [pc, #808]	; 83f0 <bt_compidtostr@@Base+0xe9c>
    80c4:	cmp	r0, r3
    80c8:	beq	b374 <bt_compidtostr@@Base+0x3e20>
    80cc:	bhi	b380 <bt_compidtostr@@Base+0x3e2c>
    80d0:	ldr	r0, [pc, #796]	; 83f4 <bt_compidtostr@@Base+0xea0>
    80d4:	add	r0, pc, r0
    80d8:	bx	lr
    80dc:	ldr	r3, [pc, #788]	; 83f8 <bt_compidtostr@@Base+0xea4>
    80e0:	cmp	r0, r3
    80e4:	beq	b3d4 <bt_compidtostr@@Base+0x3e80>
    80e8:	bhi	8134 <bt_compidtostr@@Base+0xbe0>
    80ec:	sub	r3, r3, #4
    80f0:	cmp	r0, r3
    80f4:	beq	b3b0 <bt_compidtostr@@Base+0x3e5c>
    80f8:	bhi	8118 <bt_compidtostr@@Base+0xbc4>
    80fc:	sub	r3, r3, #2
    8100:	cmp	r0, r3
    8104:	beq	b398 <bt_compidtostr@@Base+0x3e44>
    8108:	bhi	b3a4 <bt_compidtostr@@Base+0x3e50>
    810c:	ldr	r0, [pc, #744]	; 83fc <bt_compidtostr@@Base+0xea8>
    8110:	add	r0, pc, r0
    8114:	bx	lr
    8118:	ldr	r3, [pc, #736]	; 8400 <bt_compidtostr@@Base+0xeac>
    811c:	cmp	r0, r3
    8120:	beq	b3bc <bt_compidtostr@@Base+0x3e68>
    8124:	bhi	b3c8 <bt_compidtostr@@Base+0x3e74>
    8128:	ldr	r0, [pc, #724]	; 8404 <bt_compidtostr@@Base+0xeb0>
    812c:	add	r0, pc, r0
    8130:	bx	lr
    8134:	ldr	r3, [pc, #716]	; 8408 <bt_compidtostr@@Base+0xeb4>
    8138:	cmp	r0, r3
    813c:	beq	b3f8 <bt_compidtostr@@Base+0x3ea4>
    8140:	bhi	8160 <bt_compidtostr@@Base+0xc0c>
    8144:	sub	r3, r3, #2
    8148:	cmp	r0, r3
    814c:	beq	b3e0 <bt_compidtostr@@Base+0x3e8c>
    8150:	bhi	b3ec <bt_compidtostr@@Base+0x3e98>
    8154:	ldr	r0, [pc, #688]	; 840c <bt_compidtostr@@Base+0xeb8>
    8158:	add	r0, pc, r0
    815c:	bx	lr
    8160:	ldr	r3, [pc, #680]	; 8410 <bt_compidtostr@@Base+0xebc>
    8164:	cmp	r0, r3
    8168:	beq	b410 <bt_compidtostr@@Base+0x3ebc>
    816c:	bcc	b404 <bt_compidtostr@@Base+0x3eb0>
    8170:	add	r3, r3, #1
    8174:	cmp	r0, r3
    8178:	beq	b41c <bt_compidtostr@@Base+0x3ec8>
    817c:	add	r3, r3, #1
    8180:	cmp	r0, r3
    8184:	bne	77c4 <bt_compidtostr@@Base+0x270>
    8188:	ldr	r0, [pc, #644]	; 8414 <bt_compidtostr@@Base+0xec0>
    818c:	add	r0, pc, r0
    8190:	bx	lr
    8194:	cmp	r0, #356	; 0x164
    8198:	beq	b548 <bt_compidtostr@@Base+0x3ff4>
    819c:	bhi	86ec <bt_compidtostr@@Base+0x1198>
    81a0:	cmp	r0, #340	; 0x154
    81a4:	beq	b4b8 <bt_compidtostr@@Base+0x3f64>
    81a8:	bhi	8240 <bt_compidtostr@@Base+0xcec>
    81ac:	cmp	r0, #332	; 0x14c
    81b0:	beq	b470 <bt_compidtostr@@Base+0x3f1c>
    81b4:	bhi	81fc <bt_compidtostr@@Base+0xca8>
    81b8:	cmp	r0, #328	; 0x148
    81bc:	beq	b44c <bt_compidtostr@@Base+0x3ef8>
    81c0:	bhi	81e0 <bt_compidtostr@@Base+0xc8c>
    81c4:	ldr	r3, [pc, #588]	; 8418 <bt_compidtostr@@Base+0xec4>
    81c8:	cmp	r0, r3
    81cc:	beq	b434 <bt_compidtostr@@Base+0x3ee0>
    81d0:	bhi	b440 <bt_compidtostr@@Base+0x3eec>
    81d4:	ldr	r0, [pc, #576]	; 841c <bt_compidtostr@@Base+0xec8>
    81d8:	add	r0, pc, r0
    81dc:	bx	lr
    81e0:	ldr	r3, [pc, #568]	; 8420 <bt_compidtostr@@Base+0xecc>
    81e4:	cmp	r0, r3
    81e8:	beq	b458 <bt_compidtostr@@Base+0x3f04>
    81ec:	bhi	b464 <bt_compidtostr@@Base+0x3f10>
    81f0:	ldr	r0, [pc, #556]	; 8424 <bt_compidtostr@@Base+0xed0>
    81f4:	add	r0, pc, r0
    81f8:	bx	lr
    81fc:	cmp	r0, #336	; 0x150
    8200:	beq	b494 <bt_compidtostr@@Base+0x3f40>
    8204:	bhi	8224 <bt_compidtostr@@Base+0xcd0>
    8208:	ldr	r3, [pc, #536]	; 8428 <bt_compidtostr@@Base+0xed4>
    820c:	cmp	r0, r3
    8210:	beq	b47c <bt_compidtostr@@Base+0x3f28>
    8214:	bhi	b488 <bt_compidtostr@@Base+0x3f34>
    8218:	ldr	r0, [pc, #524]	; 842c <bt_compidtostr@@Base+0xed8>
    821c:	add	r0, pc, r0
    8220:	bx	lr
    8224:	ldr	r3, [pc, #516]	; 8430 <bt_compidtostr@@Base+0xedc>
    8228:	cmp	r0, r3
    822c:	beq	b4a0 <bt_compidtostr@@Base+0x3f4c>
    8230:	bhi	b4ac <bt_compidtostr@@Base+0x3f58>
    8234:	ldr	r0, [pc, #504]	; 8434 <bt_compidtostr@@Base+0xee0>
    8238:	add	r0, pc, r0
    823c:	bx	lr
    8240:	cmp	r0, #348	; 0x15c
    8244:	beq	b500 <bt_compidtostr@@Base+0x3fac>
    8248:	bhi	86a8 <bt_compidtostr@@Base+0x1154>
    824c:	cmp	r0, #344	; 0x158
    8250:	beq	b4dc <bt_compidtostr@@Base+0x3f88>
    8254:	bhi	8274 <bt_compidtostr@@Base+0xd20>
    8258:	ldr	r3, [pc, #472]	; 8438 <bt_compidtostr@@Base+0xee4>
    825c:	cmp	r0, r3
    8260:	beq	b4c4 <bt_compidtostr@@Base+0x3f70>
    8264:	bhi	b4d0 <bt_compidtostr@@Base+0x3f7c>
    8268:	ldr	r0, [pc, #460]	; 843c <bt_compidtostr@@Base+0xee8>
    826c:	add	r0, pc, r0
    8270:	bx	lr
    8274:	ldr	r3, [pc, #452]	; 8440 <bt_compidtostr@@Base+0xeec>
    8278:	cmp	r0, r3
    827c:	beq	b4e8 <bt_compidtostr@@Base+0x3f94>
    8280:	bhi	b4f4 <bt_compidtostr@@Base+0x3fa0>
    8284:	ldr	r0, [pc, #440]	; 8444 <bt_compidtostr@@Base+0xef0>
    8288:	add	r0, pc, r0
    828c:	bx	lr
    8290:	andeq	r0, r0, r7, lsl #4
    8294:	andeq	fp, r0, r5, lsl #1
    8298:	strheq	fp, [r0], -r5
    829c:	strheq	fp, [r0], -r5
    82a0:	andeq	fp, r0, r4, ror #1
    82a4:	andeq	fp, r0, r0, lsr #2
    82a8:	andeq	fp, r0, r7, asr #2
    82ac:	andeq	fp, r0, pc, ror #2
    82b0:	andeq	fp, r0, pc, lsr #3
    82b4:	andeq	fp, r0, r6, lsr #3
    82b8:	ldrdeq	fp, [r0], -r9
    82bc:	andeq	fp, r0, r0, lsl r2
    82c0:	andeq	fp, r0, r8, lsr r2
    82c4:	andeq	fp, r0, r1, ror #4
    82c8:	muleq	r0, r2, r2
    82cc:	andeq	fp, r0, sl, ror #5
    82d0:			; <UNDEFINED> instruction: 0x0000fcb4
    82d4:	andeq	fp, r0, r2, ror #6
    82d8:	andeq	fp, r0, lr, lsr #7
    82dc:	ldrdeq	fp, [r0], -sp
    82e0:	andeq	fp, r0, sl, lsl r4
    82e4:	andeq	fp, r0, lr, lsr r4
    82e8:	andeq	fp, r0, pc, ror #8
    82ec:			; <UNDEFINED> instruction: 0x0000b4b3
    82f0:	andeq	fp, r0, r9, lsl #10
    82f4:	andeq	fp, r0, r7, lsr #10
    82f8:	andeq	fp, r0, sp, asr r5
    82fc:	andeq	fp, r0, ip, ror r5
    8300:			; <UNDEFINED> instruction: 0x0000b5b8
    8304:	andeq	fp, r0, lr, asr #11
    8308:	andeq	fp, r0, sl, lsl #12
    830c:	andeq	fp, r0, sl, lsr r6
    8310:	andeq	fp, r0, r7, lsr #13
    8314:	andeq	fp, r0, r1, lsl #13
    8318:	andeq	fp, r0, r6, asr #13
    831c:	ldrdeq	fp, [r0], -pc	; <UNPREDICTABLE>
    8320:	andeq	fp, r0, sp, asr #14
    8324:	andeq	fp, r0, r7, lsr #15
    8328:	andeq	fp, r0, r8, ror #15
    832c:	andeq	fp, r0, r3, lsr #16
    8330:	andeq	fp, r0, r1, ror #16
    8334:	andeq	fp, r0, r8, ror r8
    8338:	andeq	fp, r0, r5, lsr #17
    833c:	ldrdeq	fp, [r0], -r0
    8340:	andeq	fp, r0, r5, lsl r9
    8344:	andeq	fp, r0, sp, lsr #18
    8348:	andeq	fp, r0, r7, ror #18
    834c:	andeq	fp, r0, r0, lsr #19
    8350:	andeq	fp, r0, fp, lsl sl
    8354:	andeq	fp, r0, r9, lsl #20
    8358:	andeq	fp, r0, pc, lsr #20
    835c:	andeq	fp, r0, fp, lsr #20
    8360:	andeq	fp, r0, pc, asr sl
    8364:	andeq	fp, r0, sl, ror sl
    8368:	andeq	fp, r0, r5, asr #21
    836c:	andeq	fp, r0, r1, lsl #22
    8370:	andeq	fp, r0, r6, lsr #22
    8374:	andeq	fp, r0, r0, lsr #22
    8378:	andeq	fp, r0, r8, asr fp
    837c:	andeq	fp, r0, pc, ror fp
    8380:	andeq	fp, r0, r4, asr #23
    8384:	strdeq	fp, [r0], -lr
    8388:	andeq	fp, r0, r7, lsr #24
    838c:	andeq	fp, r0, r7, asr #24
    8390:	andeq	r0, r0, r1, lsl #2
    8394:	andeq	fp, r0, r1, lsl #25
    8398:	andeq	r0, r0, r5, lsl #3
    839c:	andeq	fp, r0, pc, lsr #24
    83a0:	andeq	r0, r0, r9, lsl #2
    83a4:	muleq	r0, r7, ip
    83a8:	andeq	r0, r0, pc, lsl #2
    83ac:	andeq	fp, r0, r9, lsr #25
    83b0:	andeq	r0, r0, r1, lsl r1
    83b4:	andeq	fp, r0, r2, ror #25
    83b8:	andeq	r0, r0, fp, lsl r1
    83bc:	strdeq	fp, [r0], -fp	; <UNPREDICTABLE>
    83c0:	andeq	r0, r0, r9, lsl r1
    83c4:	andeq	fp, r0, fp, lsl sp
    83c8:	andeq	r0, r0, pc, lsl r1
    83cc:	andeq	fp, r0, r2, asr #26
    83d0:	andeq	r0, r0, r1, lsr #2
    83d4:	andeq	fp, r0, r4, asr sp
    83d8:	andeq	r0, r0, r3, lsr r1
    83dc:	andeq	fp, r0, r9, asr #26
    83e0:	andeq	r0, r0, r9, lsr #2
    83e4:	andeq	fp, r0, sl, ror #26
    83e8:	andeq	r0, r0, pc, lsr #2
    83ec:	andeq	fp, r0, lr, lsl #27
    83f0:	andeq	r0, r0, r1, lsr r1
    83f4:			; <UNDEFINED> instruction: 0x0000bdb7
    83f8:	andeq	r0, r0, fp, lsr r1
    83fc:	ldrdeq	fp, [r0], -r1
    8400:	andeq	r0, r0, r9, lsr r1
    8404:	andeq	fp, r0, fp, lsl lr
    8408:	andeq	r0, r0, pc, lsr r1
    840c:	andeq	fp, r0, r5, lsr lr
    8410:	andeq	r0, r0, r1, asr #2
    8414:	muleq	r0, r6, lr
    8418:	andeq	r0, r0, r6, asr #2
    841c:	andeq	fp, r0, r4, ror #28
    8420:	andeq	r0, r0, sl, asr #2
    8424:	andeq	fp, r0, r7, lsl #29
    8428:	andeq	r0, r0, lr, asr #2
    842c:	muleq	r0, r8, lr
    8430:	andeq	r0, r0, r2, asr r1
    8434:	ldrdeq	fp, [r0], -r5
    8438:	andeq	r0, r0, r6, asr r1
    843c:	andeq	fp, r0, r1, ror #29
    8440:	andeq	r0, r0, sl, asr r1
    8444:	andeq	fp, r0, r6, lsl pc
    8448:	andeq	r0, r0, lr, asr r1
    844c:	andeq	fp, r0, r8, lsl fp
    8450:	andeq	r0, r0, r2, ror #2
    8454:	andeq	fp, r0, r8, lsr fp
    8458:	andeq	r0, r0, r6, ror #2
    845c:	andeq	fp, r0, r4, asr fp
    8460:	andeq	r0, r0, sl, ror #2
    8464:	muleq	r0, r8, fp
    8468:	andeq	r0, r0, lr, ror #2
    846c:	andeq	fp, r0, r6, lsr #23
    8470:	andeq	r0, r0, r2, ror r1
    8474:	andeq	fp, r0, sl, asr #23
    8478:	andeq	r0, r0, r6, ror r1
    847c:	strdeq	fp, [r0], -r1
    8480:	andeq	r0, r0, sl, ror r1
    8484:	andeq	fp, r0, r6, lsl ip
    8488:	andeq	r0, r0, lr, ror r1
    848c:	andeq	fp, r0, r5, lsr ip
    8490:	andeq	r0, r0, r2, lsl #3
    8494:	andeq	fp, r0, sp, ror ip
    8498:	andeq	r0, r0, r6, asr #3
    849c:	andeq	fp, r0, r5, lsr #24
    84a0:	andeq	r0, r0, fp, lsl #3
    84a4:	andeq	fp, r0, r2, asr ip
    84a8:	muleq	r0, r1, r1
    84ac:	andeq	fp, r0, r8, ror ip
    84b0:	muleq	r0, r3, r1
    84b4:	andeq	fp, r0, r8, lsr #25
    84b8:	muleq	r0, sp, r1
    84bc:			; <UNDEFINED> instruction: 0x0000bcb3
    84c0:	muleq	r0, fp, r1
    84c4:	strdeq	fp, [r0], -r5
    84c8:	andeq	r0, r0, r1, lsr #3
    84cc:	andeq	fp, r0, sp, lsl sp
    84d0:	andeq	r0, r0, r3, lsr #3
    84d4:	andeq	fp, r0, ip, lsr sp
    84d8:			; <UNDEFINED> instruction: 0x000001b5
    84dc:	andeq	fp, r0, r6, lsr sp
    84e0:	andeq	r0, r0, fp, lsr #3
    84e4:	andeq	fp, r0, lr, asr #26
    84e8:			; <UNDEFINED> instruction: 0x000001b1
    84ec:	andeq	fp, r0, r0, lsl #27
    84f0:			; <UNDEFINED> instruction: 0x000001b3
    84f4:	andeq	fp, r0, r1, asr #27
    84f8:			; <UNDEFINED> instruction: 0x000001bd
    84fc:			; <UNDEFINED> instruction: 0x0000bdbc
    8500:			; <UNDEFINED> instruction: 0x000001bb
    8504:	andeq	fp, r0, r3, ror #27
    8508:	andeq	r0, r0, r1, asr #3
    850c:	andeq	fp, r0, ip, lsl #28
    8510:	andeq	r0, r0, r3, asr #3
    8514:	andeq	fp, r0, r1, ror #28
    8518:	andeq	r0, r0, r6, ror #3
    851c:	andeq	fp, r0, r2, lsr #28
    8520:	andeq	fp, r0, r4, asr #28
    8524:	ldrdeq	r0, [r0], -r2
    8528:	andeq	fp, r0, r0, ror lr
    852c:	andeq	fp, r0, fp, lsl #29
    8530:	ldrdeq	r0, [r0], -lr
    8534:	andeq	fp, r0, fp, lsl #29
    8538:	andeq	fp, r0, r8, asr #29
    853c:	andeq	r0, r0, r2, ror #3
    8540:	andeq	fp, r0, r6, lsl #30
    8544:	andeq	fp, r0, r3, lsr #30
    8548:	strdeq	r0, [r0], -r6
    854c:	andeq	fp, r0, r1, lsr pc
    8550:	andeq	fp, r0, r9, asr pc
    8554:	strdeq	r0, [r0], -r2
    8558:	andeq	fp, r0, r2, lsl #31
    855c:			; <UNDEFINED> instruction: 0x0000bfbe
    8560:	strdeq	r0, [r0], -lr
    8564:	ldrdeq	fp, [r0], -r6
    8568:	andeq	ip, r0, r1, lsr #32
    856c:	andeq	r0, r0, r2, lsl #4
    8570:	andeq	ip, r0, r9, asr r0
    8574:	andeq	r0, r0, r5, lsl #4
    8578:	andeq	ip, r0, pc, lsr #1
    857c:	andeq	r0, r0, fp, lsl #6
    8580:	andeq	ip, r0, r6, asr #32
    8584:	andeq	r0, r0, sp, lsl #4
    8588:	andeq	ip, r0, r1, ror r0
    858c:	andeq	r0, r0, r3, lsl r2
    8590:	andeq	ip, r0, r3, lsr #1
    8594:	andeq	r0, r0, r5, lsl r2
    8598:	andeq	ip, r0, r7, asr #1
    859c:	andeq	r0, r0, pc, lsl r2
    85a0:	ldrdeq	ip, [r0], -r5
    85a4:	andeq	r0, r0, sp, lsl r2
    85a8:	strdeq	ip, [r0], -r8
    85ac:	andeq	r0, r0, r3, lsr #4
    85b0:	andeq	ip, r0, r5, lsl #2
    85b4:	andeq	r0, r0, r5, lsr #4
    85b8:	andeq	ip, r0, sp, lsr r1
    85bc:	andeq	r0, r0, r7, lsr r2
    85c0:	andeq	ip, r0, r6, lsr r1
    85c4:	andeq	r0, r0, sp, lsr #4
    85c8:	andeq	ip, r0, r5, ror #2
    85cc:	andeq	r0, r0, r3, lsr r2
    85d0:	muleq	r0, r0, r1
    85d4:	andeq	r0, r0, r5, lsr r2
    85d8:	ldrdeq	ip, [r0], -r0
    85dc:	andeq	r0, r0, pc, lsr r2
    85e0:	ldrdeq	ip, [r0], -lr
    85e4:	andeq	r0, r0, sp, lsr r2
    85e8:	andeq	ip, r0, ip, lsl r2
    85ec:	andeq	r0, r0, r3, asr #4
    85f0:	andeq	ip, r0, r0, lsr r2
    85f4:	andeq	r0, r0, r5, asr #4
    85f8:	andeq	ip, r0, r2, ror #4
    85fc:	andeq	r0, r0, sl, asr #4
    8600:	andeq	ip, r0, fp, lsr r2
    8604:	andeq	r0, r0, lr, asr #4
    8608:	andeq	ip, r0, r8, asr r2
    860c:	andeq	r0, r0, r2, asr r2
    8610:	muleq	r0, r7, r2
    8614:	andeq	r0, r0, r6, asr r2
    8618:			; <UNDEFINED> instruction: 0x0000c2b7
    861c:	andeq	r0, r0, sl, asr r2
    8620:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    8624:	andeq	r0, r0, lr, asr r2
    8628:	andeq	ip, r0, r7, asr #6
    862c:	andeq	r0, r0, r2, ror #4
    8630:	andeq	ip, r0, r9, ror #6
    8634:	andeq	r0, r0, r6, ror #4
    8638:	andeq	ip, r0, ip, lsl #7
    863c:	andeq	r0, r0, sl, ror #4
    8640:	andeq	ip, r0, ip, lsl #7
    8644:	andeq	r0, r0, lr, ror #4
    8648:	andeq	ip, r0, r9, asr #7
    864c:	andeq	r0, r0, r2, ror r2
    8650:	andeq	ip, r0, r3, ror #7
    8654:	andeq	r0, r0, r6, ror r2
    8658:	andeq	ip, r0, r4, lsl #8
    865c:	andeq	r0, r0, sl, ror r2
    8660:	andeq	ip, r0, r7, lsl r4
    8664:	andeq	r0, r0, lr, ror r2
    8668:	andeq	ip, r0, pc, lsr r4
    866c:	andeq	r0, r0, r2, lsl #5
    8670:	andeq	ip, r0, r7, lsl #9
    8674:	andeq	r0, r0, r6, lsl #5
    8678:	andeq	ip, r0, ip, asr #9
    867c:	andeq	r0, r0, sl, asr #5
    8680:	andeq	ip, r0, r6, lsl #9
    8684:	andeq	r0, r0, pc, lsl #5
    8688:	muleq	r0, r7, r4
    868c:	muleq	r0, r5, r2
    8690:	andeq	ip, r0, pc, lsr #9
    8694:	muleq	r0, r7, r2
    8698:	andeq	ip, r0, r3, asr #9
    869c:	andeq	r0, r0, r1, lsr #5
    86a0:	andeq	ip, r0, r3, asr #9
    86a4:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    86a8:	cmp	r0, #352	; 0x160
    86ac:	beq	b524 <bt_compidtostr@@Base+0x3fd0>
    86b0:	bhi	86d0 <bt_compidtostr@@Base+0x117c>
    86b4:	ldr	r3, [pc, #-628]	; 8448 <bt_compidtostr@@Base+0xef4>
    86b8:	cmp	r0, r3
    86bc:	beq	b50c <bt_compidtostr@@Base+0x3fb8>
    86c0:	bhi	b518 <bt_compidtostr@@Base+0x3fc4>
    86c4:	ldr	r0, [pc, #-640]	; 844c <bt_compidtostr@@Base+0xef8>
    86c8:	add	r0, pc, r0
    86cc:	bx	lr
    86d0:	ldr	r3, [pc, #-648]	; 8450 <bt_compidtostr@@Base+0xefc>
    86d4:	cmp	r0, r3
    86d8:	beq	b530 <bt_compidtostr@@Base+0x3fdc>
    86dc:	bhi	b53c <bt_compidtostr@@Base+0x3fe8>
    86e0:	ldr	r0, [pc, #-660]	; 8454 <bt_compidtostr@@Base+0xf00>
    86e4:	add	r0, pc, r0
    86e8:	bx	lr
    86ec:	cmp	r0, #372	; 0x174
    86f0:	beq	b5d8 <bt_compidtostr@@Base+0x4084>
    86f4:	bhi	878c <bt_compidtostr@@Base+0x1238>
    86f8:	cmp	r0, #364	; 0x16c
    86fc:	beq	b590 <bt_compidtostr@@Base+0x403c>
    8700:	bhi	8748 <bt_compidtostr@@Base+0x11f4>
    8704:	cmp	r0, #360	; 0x168
    8708:	beq	b56c <bt_compidtostr@@Base+0x4018>
    870c:	bhi	872c <bt_compidtostr@@Base+0x11d8>
    8710:	ldr	r3, [pc, #-704]	; 8458 <bt_compidtostr@@Base+0xf04>
    8714:	cmp	r0, r3
    8718:	beq	b554 <bt_compidtostr@@Base+0x4000>
    871c:	bhi	b560 <bt_compidtostr@@Base+0x400c>
    8720:	ldr	r0, [pc, #-716]	; 845c <bt_compidtostr@@Base+0xf08>
    8724:	add	r0, pc, r0
    8728:	bx	lr
    872c:	ldr	r3, [pc, #-724]	; 8460 <bt_compidtostr@@Base+0xf0c>
    8730:	cmp	r0, r3
    8734:	beq	b578 <bt_compidtostr@@Base+0x4024>
    8738:	bhi	b584 <bt_compidtostr@@Base+0x4030>
    873c:	ldr	r0, [pc, #-736]	; 8464 <bt_compidtostr@@Base+0xf10>
    8740:	add	r0, pc, r0
    8744:	bx	lr
    8748:	cmp	r0, #368	; 0x170
    874c:	beq	b5b4 <bt_compidtostr@@Base+0x4060>
    8750:	bhi	8770 <bt_compidtostr@@Base+0x121c>
    8754:	ldr	r3, [pc, #-756]	; 8468 <bt_compidtostr@@Base+0xf14>
    8758:	cmp	r0, r3
    875c:	beq	b59c <bt_compidtostr@@Base+0x4048>
    8760:	bhi	b5a8 <bt_compidtostr@@Base+0x4054>
    8764:	ldr	r0, [pc, #-768]	; 846c <bt_compidtostr@@Base+0xf18>
    8768:	add	r0, pc, r0
    876c:	bx	lr
    8770:	ldr	r3, [pc, #-776]	; 8470 <bt_compidtostr@@Base+0xf1c>
    8774:	cmp	r0, r3
    8778:	beq	b5c0 <bt_compidtostr@@Base+0x406c>
    877c:	bhi	b5cc <bt_compidtostr@@Base+0x4078>
    8780:	ldr	r0, [pc, #-788]	; 8474 <bt_compidtostr@@Base+0xf20>
    8784:	add	r0, pc, r0
    8788:	bx	lr
    878c:	cmp	r0, #380	; 0x17c
    8790:	beq	b620 <bt_compidtostr@@Base+0x40cc>
    8794:	bhi	87dc <bt_compidtostr@@Base+0x1288>
    8798:	cmp	r0, #376	; 0x178
    879c:	beq	b5fc <bt_compidtostr@@Base+0x40a8>
    87a0:	bhi	87c0 <bt_compidtostr@@Base+0x126c>
    87a4:	ldr	r3, [pc, #-820]	; 8478 <bt_compidtostr@@Base+0xf24>
    87a8:	cmp	r0, r3
    87ac:	beq	b5e4 <bt_compidtostr@@Base+0x4090>
    87b0:	bhi	b5f0 <bt_compidtostr@@Base+0x409c>
    87b4:	ldr	r0, [pc, #-832]	; 847c <bt_compidtostr@@Base+0xf28>
    87b8:	add	r0, pc, r0
    87bc:	bx	lr
    87c0:	ldr	r3, [pc, #-840]	; 8480 <bt_compidtostr@@Base+0xf2c>
    87c4:	cmp	r0, r3
    87c8:	beq	b608 <bt_compidtostr@@Base+0x40b4>
    87cc:	bhi	b614 <bt_compidtostr@@Base+0x40c0>
    87d0:	ldr	r0, [pc, #-852]	; 8484 <bt_compidtostr@@Base+0xf30>
    87d4:	add	r0, pc, r0
    87d8:	bx	lr
    87dc:	cmp	r0, #384	; 0x180
    87e0:	beq	b644 <bt_compidtostr@@Base+0x40f0>
    87e4:	bhi	8804 <bt_compidtostr@@Base+0x12b0>
    87e8:	ldr	r3, [pc, #-872]	; 8488 <bt_compidtostr@@Base+0xf34>
    87ec:	cmp	r0, r3
    87f0:	beq	b62c <bt_compidtostr@@Base+0x40d8>
    87f4:	bhi	b638 <bt_compidtostr@@Base+0x40e4>
    87f8:	ldr	r0, [pc, #-884]	; 848c <bt_compidtostr@@Base+0xf38>
    87fc:	add	r0, pc, r0
    8800:	bx	lr
    8804:	ldr	r3, [pc, #-892]	; 8490 <bt_compidtostr@@Base+0xf3c>
    8808:	cmp	r0, r3
    880c:	beq	b65c <bt_compidtostr@@Base+0x4108>
    8810:	bcc	b650 <bt_compidtostr@@Base+0x40fc>
    8814:	add	r3, r3, #1
    8818:	cmp	r0, r3
    881c:	beq	b668 <bt_compidtostr@@Base+0x4114>
    8820:	cmp	r0, #388	; 0x184
    8824:	bne	77c4 <bt_compidtostr@@Base+0x270>
    8828:	ldr	r0, [pc, #-924]	; 8494 <bt_compidtostr@@Base+0xf40>
    882c:	add	r0, pc, r0
    8830:	bx	lr
    8834:	ldr	r3, [pc, #-932]	; 8498 <bt_compidtostr@@Base+0xf44>
    8838:	cmp	r0, r3
    883c:	beq	b8c0 <bt_compidtostr@@Base+0x436c>
    8840:	bhi	8b08 <bt_compidtostr@@Base+0x15b4>
    8844:	sub	r3, r3, #33	; 0x21
    8848:	cmp	r0, r3
    884c:	beq	b794 <bt_compidtostr@@Base+0x4240>
    8850:	bhi	89a4 <bt_compidtostr@@Base+0x1450>
    8854:	sub	r3, r3, #16
    8858:	cmp	r0, r3
    885c:	beq	b704 <bt_compidtostr@@Base+0x41b0>
    8860:	bhi	8904 <bt_compidtostr@@Base+0x13b0>
    8864:	sub	r3, r3, #8
    8868:	cmp	r0, r3
    886c:	beq	b6bc <bt_compidtostr@@Base+0x4168>
    8870:	bhi	88bc <bt_compidtostr@@Base+0x1368>
    8874:	sub	r3, r3, #4
    8878:	cmp	r0, r3
    887c:	beq	b698 <bt_compidtostr@@Base+0x4144>
    8880:	bhi	88a0 <bt_compidtostr@@Base+0x134c>
    8884:	sub	r3, r3, #2
    8888:	cmp	r0, r3
    888c:	beq	b680 <bt_compidtostr@@Base+0x412c>
    8890:	bhi	b68c <bt_compidtostr@@Base+0x4138>
    8894:	ldr	r0, [pc, #-1024]	; 849c <bt_compidtostr@@Base+0xf48>
    8898:	add	r0, pc, r0
    889c:	bx	lr
    88a0:	ldr	r3, [pc, #-1032]	; 84a0 <bt_compidtostr@@Base+0xf4c>
    88a4:	cmp	r0, r3
    88a8:	beq	b6a4 <bt_compidtostr@@Base+0x4150>
    88ac:	bhi	b6b0 <bt_compidtostr@@Base+0x415c>
    88b0:	ldr	r0, [pc, #-1044]	; 84a4 <bt_compidtostr@@Base+0xf50>
    88b4:	add	r0, pc, r0
    88b8:	bx	lr
    88bc:	ldr	r3, [pc, #-1052]	; 84a8 <bt_compidtostr@@Base+0xf54>
    88c0:	cmp	r0, r3
    88c4:	beq	b6e0 <bt_compidtostr@@Base+0x418c>
    88c8:	bhi	88e8 <bt_compidtostr@@Base+0x1394>
    88cc:	sub	r3, r3, #2
    88d0:	cmp	r0, r3
    88d4:	beq	b6c8 <bt_compidtostr@@Base+0x4174>
    88d8:	bhi	b6d4 <bt_compidtostr@@Base+0x4180>
    88dc:	ldr	r0, [pc, #-1080]	; 84ac <bt_compidtostr@@Base+0xf58>
    88e0:	add	r0, pc, r0
    88e4:	bx	lr
    88e8:	ldr	r3, [pc, #-1088]	; 84b0 <bt_compidtostr@@Base+0xf5c>
    88ec:	cmp	r0, r3
    88f0:	beq	b6ec <bt_compidtostr@@Base+0x4198>
    88f4:	bhi	b6f8 <bt_compidtostr@@Base+0x41a4>
    88f8:	ldr	r0, [pc, #-1100]	; 84b4 <bt_compidtostr@@Base+0xf60>
    88fc:	add	r0, pc, r0
    8900:	bx	lr
    8904:	ldr	r3, [pc, #-1108]	; 84b8 <bt_compidtostr@@Base+0xf64>
    8908:	cmp	r0, r3
    890c:	beq	b74c <bt_compidtostr@@Base+0x41f8>
    8910:	bhi	895c <bt_compidtostr@@Base+0x1408>
    8914:	sub	r3, r3, #4
    8918:	cmp	r0, r3
    891c:	beq	b728 <bt_compidtostr@@Base+0x41d4>
    8920:	bhi	8940 <bt_compidtostr@@Base+0x13ec>
    8924:	sub	r3, r3, #2
    8928:	cmp	r0, r3
    892c:	beq	b710 <bt_compidtostr@@Base+0x41bc>
    8930:	bhi	b71c <bt_compidtostr@@Base+0x41c8>
    8934:	ldr	r0, [pc, #-1152]	; 84bc <bt_compidtostr@@Base+0xf68>
    8938:	add	r0, pc, r0
    893c:	bx	lr
    8940:	ldr	r3, [pc, #-1160]	; 84c0 <bt_compidtostr@@Base+0xf6c>
    8944:	cmp	r0, r3
    8948:	beq	b734 <bt_compidtostr@@Base+0x41e0>
    894c:	bhi	b740 <bt_compidtostr@@Base+0x41ec>
    8950:	ldr	r0, [pc, #-1172]	; 84c4 <bt_compidtostr@@Base+0xf70>
    8954:	add	r0, pc, r0
    8958:	bx	lr
    895c:	ldr	r3, [pc, #-1180]	; 84c8 <bt_compidtostr@@Base+0xf74>
    8960:	cmp	r0, r3
    8964:	beq	b770 <bt_compidtostr@@Base+0x421c>
    8968:	bhi	8988 <bt_compidtostr@@Base+0x1434>
    896c:	sub	r3, r3, #2
    8970:	cmp	r0, r3
    8974:	beq	b758 <bt_compidtostr@@Base+0x4204>
    8978:	bhi	b764 <bt_compidtostr@@Base+0x4210>
    897c:	ldr	r0, [pc, #-1208]	; 84cc <bt_compidtostr@@Base+0xf78>
    8980:	add	r0, pc, r0
    8984:	bx	lr
    8988:	ldr	r3, [pc, #-1216]	; 84d0 <bt_compidtostr@@Base+0xf7c>
    898c:	cmp	r0, r3
    8990:	beq	b77c <bt_compidtostr@@Base+0x4228>
    8994:	bhi	b788 <bt_compidtostr@@Base+0x4234>
    8998:	ldr	r0, [pc, #-1228]	; 84d4 <bt_compidtostr@@Base+0xf80>
    899c:	add	r0, pc, r0
    89a0:	bx	lr
    89a4:	ldr	r3, [pc, #-1236]	; 84d8 <bt_compidtostr@@Base+0xf84>
    89a8:	cmp	r0, r3
    89ac:	beq	b824 <bt_compidtostr@@Base+0x42d0>
    89b0:	bhi	8a54 <bt_compidtostr@@Base+0x1500>
    89b4:	sub	r3, r3, #8
    89b8:	cmp	r0, r3
    89bc:	beq	b7dc <bt_compidtostr@@Base+0x4288>
    89c0:	bhi	8a0c <bt_compidtostr@@Base+0x14b8>
    89c4:	sub	r3, r3, #4
    89c8:	cmp	r0, r3
    89cc:	beq	b7b8 <bt_compidtostr@@Base+0x4264>
    89d0:	bhi	89f0 <bt_compidtostr@@Base+0x149c>
    89d4:	sub	r3, r3, #2
    89d8:	cmp	r0, r3
    89dc:	beq	b7a0 <bt_compidtostr@@Base+0x424c>
    89e0:	bhi	b7ac <bt_compidtostr@@Base+0x4258>
    89e4:	ldr	r0, [pc, #-1296]	; 84dc <bt_compidtostr@@Base+0xf88>
    89e8:	add	r0, pc, r0
    89ec:	bx	lr
    89f0:	ldr	r3, [pc, #-1304]	; 84e0 <bt_compidtostr@@Base+0xf8c>
    89f4:	cmp	r0, r3
    89f8:	beq	b7c4 <bt_compidtostr@@Base+0x4270>
    89fc:	bhi	b7d0 <bt_compidtostr@@Base+0x427c>
    8a00:	ldr	r0, [pc, #-1316]	; 84e4 <bt_compidtostr@@Base+0xf90>
    8a04:	add	r0, pc, r0
    8a08:	bx	lr
    8a0c:	ldr	r3, [pc, #-1324]	; 84e8 <bt_compidtostr@@Base+0xf94>
    8a10:	cmp	r0, r3
    8a14:	beq	b800 <bt_compidtostr@@Base+0x42ac>
    8a18:	bhi	8a38 <bt_compidtostr@@Base+0x14e4>
    8a1c:	sub	r3, r3, #2
    8a20:	cmp	r0, r3
    8a24:	beq	b7e8 <bt_compidtostr@@Base+0x4294>
    8a28:	bhi	b7f4 <bt_compidtostr@@Base+0x42a0>
    8a2c:	ldr	r0, [pc, #-1352]	; 84ec <bt_compidtostr@@Base+0xf98>
    8a30:	add	r0, pc, r0
    8a34:	bx	lr
    8a38:	ldr	r3, [pc, #-1360]	; 84f0 <bt_compidtostr@@Base+0xf9c>
    8a3c:	cmp	r0, r3
    8a40:	beq	b80c <bt_compidtostr@@Base+0x42b8>
    8a44:	bhi	b818 <bt_compidtostr@@Base+0x42c4>
    8a48:	ldr	r0, [pc, #-1372]	; 84f4 <bt_compidtostr@@Base+0xfa0>
    8a4c:	add	r0, pc, r0
    8a50:	bx	lr
    8a54:	ldr	r3, [pc, #-1380]	; 84f8 <bt_compidtostr@@Base+0xfa4>
    8a58:	cmp	r0, r3
    8a5c:	beq	b86c <bt_compidtostr@@Base+0x4318>
    8a60:	bhi	8aac <bt_compidtostr@@Base+0x1558>
    8a64:	sub	r3, r3, #4
    8a68:	cmp	r0, r3
    8a6c:	beq	b848 <bt_compidtostr@@Base+0x42f4>
    8a70:	bhi	8a90 <bt_compidtostr@@Base+0x153c>
    8a74:	sub	r3, r3, #2
    8a78:	cmp	r0, r3
    8a7c:	beq	b830 <bt_compidtostr@@Base+0x42dc>
    8a80:	bhi	b83c <bt_compidtostr@@Base+0x42e8>
    8a84:	ldr	r0, [pc, #-1424]	; 84fc <bt_compidtostr@@Base+0xfa8>
    8a88:	add	r0, pc, r0
    8a8c:	bx	lr
    8a90:	ldr	r3, [pc, #-1432]	; 8500 <bt_compidtostr@@Base+0xfac>
    8a94:	cmp	r0, r3
    8a98:	beq	b854 <bt_compidtostr@@Base+0x4300>
    8a9c:	bhi	b860 <bt_compidtostr@@Base+0x430c>
    8aa0:	ldr	r0, [pc, #-1444]	; 8504 <bt_compidtostr@@Base+0xfb0>
    8aa4:	add	r0, pc, r0
    8aa8:	bx	lr
    8aac:	ldr	r3, [pc, #-1452]	; 8508 <bt_compidtostr@@Base+0xfb4>
    8ab0:	cmp	r0, r3
    8ab4:	beq	b890 <bt_compidtostr@@Base+0x433c>
    8ab8:	bhi	8ad8 <bt_compidtostr@@Base+0x1584>
    8abc:	sub	r3, r3, #2
    8ac0:	cmp	r0, r3
    8ac4:	beq	b878 <bt_compidtostr@@Base+0x4324>
    8ac8:	bhi	b884 <bt_compidtostr@@Base+0x4330>
    8acc:	ldr	r0, [pc, #-1480]	; 850c <bt_compidtostr@@Base+0xfb8>
    8ad0:	add	r0, pc, r0
    8ad4:	bx	lr
    8ad8:	ldr	r3, [pc, #-1488]	; 8510 <bt_compidtostr@@Base+0xfbc>
    8adc:	cmp	r0, r3
    8ae0:	beq	b8a8 <bt_compidtostr@@Base+0x4354>
    8ae4:	bcc	b89c <bt_compidtostr@@Base+0x4348>
    8ae8:	cmp	r0, #452	; 0x1c4
    8aec:	beq	b8b4 <bt_compidtostr@@Base+0x4360>
    8af0:	add	r3, r3, #2
    8af4:	cmp	r0, r3
    8af8:	bne	77c4 <bt_compidtostr@@Base+0x270>
    8afc:	ldr	r0, [pc, #-1520]	; 8514 <bt_compidtostr@@Base+0xfc0>
    8b00:	add	r0, pc, r0
    8b04:	bx	lr
    8b08:	ldr	r3, [pc, #-1528]	; 8518 <bt_compidtostr@@Base+0xfc4>
    8b0c:	cmp	r0, r3
    8b10:	beq	b9e0 <bt_compidtostr@@Base+0x448c>
    8b14:	bhi	8c48 <bt_compidtostr@@Base+0x16f4>
    8b18:	sub	r3, r3, #16
    8b1c:	cmp	r0, r3
    8b20:	beq	b950 <bt_compidtostr@@Base+0x43fc>
    8b24:	bhi	8bb8 <bt_compidtostr@@Base+0x1664>
    8b28:	sub	r3, r3, #8
    8b2c:	cmp	r0, r3
    8b30:	beq	b908 <bt_compidtostr@@Base+0x43b4>
    8b34:	bhi	8b78 <bt_compidtostr@@Base+0x1624>
    8b38:	sub	r3, r3, #4
    8b3c:	cmp	r0, r3
    8b40:	beq	b8e4 <bt_compidtostr@@Base+0x4390>
    8b44:	bhi	8b60 <bt_compidtostr@@Base+0x160c>
    8b48:	cmp	r0, #456	; 0x1c8
    8b4c:	beq	b8cc <bt_compidtostr@@Base+0x4378>
    8b50:	bhi	b8d8 <bt_compidtostr@@Base+0x4384>
    8b54:	ldr	r0, [pc, #-1600]	; 851c <bt_compidtostr@@Base+0xfc8>
    8b58:	add	r0, pc, r0
    8b5c:	bx	lr
    8b60:	cmp	r0, #460	; 0x1cc
    8b64:	beq	b8f0 <bt_compidtostr@@Base+0x439c>
    8b68:	bhi	b8fc <bt_compidtostr@@Base+0x43a8>
    8b6c:	ldr	r0, [pc, #-1620]	; 8520 <bt_compidtostr@@Base+0xfcc>
    8b70:	add	r0, pc, r0
    8b74:	bx	lr
    8b78:	ldr	r3, [pc, #-1628]	; 8524 <bt_compidtostr@@Base+0xfd0>
    8b7c:	cmp	r0, r3
    8b80:	beq	b92c <bt_compidtostr@@Base+0x43d8>
    8b84:	bhi	8ba0 <bt_compidtostr@@Base+0x164c>
    8b88:	cmp	r0, #464	; 0x1d0
    8b8c:	beq	b914 <bt_compidtostr@@Base+0x43c0>
    8b90:	bhi	b920 <bt_compidtostr@@Base+0x43cc>
    8b94:	ldr	r0, [pc, #-1652]	; 8528 <bt_compidtostr@@Base+0xfd4>
    8b98:	add	r0, pc, r0
    8b9c:	bx	lr
    8ba0:	cmp	r0, #468	; 0x1d4
    8ba4:	beq	b938 <bt_compidtostr@@Base+0x43e4>
    8ba8:	bhi	b944 <bt_compidtostr@@Base+0x43f0>
    8bac:	ldr	r0, [pc, #-1672]	; 852c <bt_compidtostr@@Base+0xfd8>
    8bb0:	add	r0, pc, r0
    8bb4:	bx	lr
    8bb8:	ldr	r3, [pc, #-1680]	; 8530 <bt_compidtostr@@Base+0xfdc>
    8bbc:	cmp	r0, r3
    8bc0:	beq	b998 <bt_compidtostr@@Base+0x4444>
    8bc4:	bhi	8c08 <bt_compidtostr@@Base+0x16b4>
    8bc8:	sub	r3, r3, #4
    8bcc:	cmp	r0, r3
    8bd0:	beq	b974 <bt_compidtostr@@Base+0x4420>
    8bd4:	bhi	8bf0 <bt_compidtostr@@Base+0x169c>
    8bd8:	cmp	r0, #472	; 0x1d8
    8bdc:	beq	b95c <bt_compidtostr@@Base+0x4408>
    8be0:	bhi	b968 <bt_compidtostr@@Base+0x4414>
    8be4:	ldr	r0, [pc, #-1720]	; 8534 <bt_compidtostr@@Base+0xfe0>
    8be8:	add	r0, pc, r0
    8bec:	bx	lr
    8bf0:	cmp	r0, #476	; 0x1dc
    8bf4:	beq	b980 <bt_compidtostr@@Base+0x442c>
    8bf8:	bhi	b98c <bt_compidtostr@@Base+0x4438>
    8bfc:	ldr	r0, [pc, #-1740]	; 8538 <bt_compidtostr@@Base+0xfe4>
    8c00:	add	r0, pc, r0
    8c04:	bx	lr
    8c08:	ldr	r3, [pc, #-1748]	; 853c <bt_compidtostr@@Base+0xfe8>
    8c0c:	cmp	r0, r3
    8c10:	beq	b9bc <bt_compidtostr@@Base+0x4468>
    8c14:	bhi	8c30 <bt_compidtostr@@Base+0x16dc>
    8c18:	cmp	r0, #480	; 0x1e0
    8c1c:	beq	b9a4 <bt_compidtostr@@Base+0x4450>
    8c20:	bhi	b9b0 <bt_compidtostr@@Base+0x445c>
    8c24:	ldr	r0, [pc, #-1772]	; 8540 <bt_compidtostr@@Base+0xfec>
    8c28:	add	r0, pc, r0
    8c2c:	bx	lr
    8c30:	cmp	r0, #484	; 0x1e4
    8c34:	beq	b9c8 <bt_compidtostr@@Base+0x4474>
    8c38:	bhi	b9d4 <bt_compidtostr@@Base+0x4480>
    8c3c:	ldr	r0, [pc, #-1792]	; 8544 <bt_compidtostr@@Base+0xff0>
    8c40:	add	r0, pc, r0
    8c44:	bx	lr
    8c48:	ldr	r3, [pc, #-1800]	; 8548 <bt_compidtostr@@Base+0xff4>
    8c4c:	cmp	r0, r3
    8c50:	beq	ba70 <bt_compidtostr@@Base+0x451c>
    8c54:	bhi	8ce8 <bt_compidtostr@@Base+0x1794>
    8c58:	sub	r3, r3, #8
    8c5c:	cmp	r0, r3
    8c60:	beq	ba28 <bt_compidtostr@@Base+0x44d4>
    8c64:	bhi	8ca8 <bt_compidtostr@@Base+0x1754>
    8c68:	sub	r3, r3, #4
    8c6c:	cmp	r0, r3
    8c70:	beq	ba04 <bt_compidtostr@@Base+0x44b0>
    8c74:	bhi	8c90 <bt_compidtostr@@Base+0x173c>
    8c78:	cmp	r0, #488	; 0x1e8
    8c7c:	beq	b9ec <bt_compidtostr@@Base+0x4498>
    8c80:	bhi	b9f8 <bt_compidtostr@@Base+0x44a4>
    8c84:	ldr	r0, [pc, #-1856]	; 854c <bt_compidtostr@@Base+0xff8>
    8c88:	add	r0, pc, r0
    8c8c:	bx	lr
    8c90:	cmp	r0, #492	; 0x1ec
    8c94:	beq	ba10 <bt_compidtostr@@Base+0x44bc>
    8c98:	bhi	ba1c <bt_compidtostr@@Base+0x44c8>
    8c9c:	ldr	r0, [pc, #-1876]	; 8550 <bt_compidtostr@@Base+0xffc>
    8ca0:	add	r0, pc, r0
    8ca4:	bx	lr
    8ca8:	ldr	r3, [pc, #-1884]	; 8554 <bt_compidtostr@@Base+0x1000>
    8cac:	cmp	r0, r3
    8cb0:	beq	ba4c <bt_compidtostr@@Base+0x44f8>
    8cb4:	bhi	8cd0 <bt_compidtostr@@Base+0x177c>
    8cb8:	cmp	r0, #496	; 0x1f0
    8cbc:	beq	ba34 <bt_compidtostr@@Base+0x44e0>
    8cc0:	bhi	ba40 <bt_compidtostr@@Base+0x44ec>
    8cc4:	ldr	r0, [pc, #-1908]	; 8558 <bt_compidtostr@@Base+0x1004>
    8cc8:	add	r0, pc, r0
    8ccc:	bx	lr
    8cd0:	cmp	r0, #500	; 0x1f4
    8cd4:	beq	ba58 <bt_compidtostr@@Base+0x4504>
    8cd8:	bhi	ba64 <bt_compidtostr@@Base+0x4510>
    8cdc:	ldr	r0, [pc, #-1928]	; 855c <bt_compidtostr@@Base+0x1008>
    8ce0:	add	r0, pc, r0
    8ce4:	bx	lr
    8ce8:	ldr	r3, [pc, #-1936]	; 8560 <bt_compidtostr@@Base+0x100c>
    8cec:	cmp	r0, r3
    8cf0:	beq	c11c <bt_compidtostr@@Base+0x4bc8>
    8cf4:	bhi	8d38 <bt_compidtostr@@Base+0x17e4>
    8cf8:	sub	r3, r3, #4
    8cfc:	cmp	r0, r3
    8d00:	beq	ba94 <bt_compidtostr@@Base+0x4540>
    8d04:	bhi	8d20 <bt_compidtostr@@Base+0x17cc>
    8d08:	cmp	r0, #504	; 0x1f8
    8d0c:	beq	ba7c <bt_compidtostr@@Base+0x4528>
    8d10:	bhi	ba88 <bt_compidtostr@@Base+0x4534>
    8d14:	ldr	r0, [pc, #-1976]	; 8564 <bt_compidtostr@@Base+0x1010>
    8d18:	add	r0, pc, r0
    8d1c:	bx	lr
    8d20:	cmp	r0, #508	; 0x1fc
    8d24:	beq	c104 <bt_compidtostr@@Base+0x4bb0>
    8d28:	bhi	c110 <bt_compidtostr@@Base+0x4bbc>
    8d2c:	ldr	r0, [pc, #-1996]	; 8568 <bt_compidtostr@@Base+0x1014>
    8d30:	add	r0, pc, r0
    8d34:	bx	lr
    8d38:	ldr	r3, [pc, #-2004]	; 856c <bt_compidtostr@@Base+0x1018>
    8d3c:	cmp	r0, r3
    8d40:	beq	c140 <bt_compidtostr@@Base+0x4bec>
    8d44:	bhi	8d60 <bt_compidtostr@@Base+0x180c>
    8d48:	cmp	r0, #512	; 0x200
    8d4c:	beq	c128 <bt_compidtostr@@Base+0x4bd4>
    8d50:	bhi	c134 <bt_compidtostr@@Base+0x4be0>
    8d54:	ldr	r0, [pc, #-2028]	; 8570 <bt_compidtostr@@Base+0x101c>
    8d58:	add	r0, pc, r0
    8d5c:	bx	lr
    8d60:	cmp	r0, #516	; 0x204
    8d64:	beq	c158 <bt_compidtostr@@Base+0x4c04>
    8d68:	bcc	c14c <bt_compidtostr@@Base+0x4bf8>
    8d6c:	ldr	r3, [pc, #-2048]	; 8574 <bt_compidtostr@@Base+0x1020>
    8d70:	cmp	r0, r3
    8d74:	beq	c164 <bt_compidtostr@@Base+0x4c10>
    8d78:	add	r3, r3, #1
    8d7c:	cmp	r0, r3
    8d80:	bne	77c4 <bt_compidtostr@@Base+0x270>
    8d84:	ldr	r0, [pc, #-2068]	; 8578 <bt_compidtostr@@Base+0x1024>
    8d88:	add	r0, pc, r0
    8d8c:	bx	lr
    8d90:	ldr	r3, [pc, #-2076]	; 857c <bt_compidtostr@@Base+0x1028>
    8d94:	cmp	r0, r3
    8d98:	beq	caa0 <bt_compidtostr@@Base+0x554c>
    8d9c:	bhi	9868 <bt_compidtostr@@Base+0x2314>
    8da0:	sub	r3, r3, #130	; 0x82
    8da4:	cmp	r0, r3
    8da8:	beq	c608 <bt_compidtostr@@Base+0x50b4>
    8dac:	bhi	930c <bt_compidtostr@@Base+0x1db8>
    8db0:	cmp	r0, #584	; 0x248
    8db4:	beq	c3bc <bt_compidtostr@@Base+0x4e68>
    8db8:	bhi	9084 <bt_compidtostr@@Base+0x1b30>
    8dbc:	sub	r3, r3, #98	; 0x62
    8dc0:	cmp	r0, r3
    8dc4:	beq	c290 <bt_compidtostr@@Base+0x4d3c>
    8dc8:	bhi	8f1c <bt_compidtostr@@Base+0x19c8>
    8dcc:	sub	r3, r3, #16
    8dd0:	cmp	r0, r3
    8dd4:	beq	c200 <bt_compidtostr@@Base+0x4cac>
    8dd8:	bhi	8e7c <bt_compidtostr@@Base+0x1928>
    8ddc:	sub	r3, r3, #8
    8de0:	cmp	r0, r3
    8de4:	beq	c1b8 <bt_compidtostr@@Base+0x4c64>
    8de8:	bhi	8e34 <bt_compidtostr@@Base+0x18e0>
    8dec:	sub	r3, r3, #4
    8df0:	cmp	r0, r3
    8df4:	beq	c194 <bt_compidtostr@@Base+0x4c40>
    8df8:	bhi	8e18 <bt_compidtostr@@Base+0x18c4>
    8dfc:	sub	r3, r3, #2
    8e00:	cmp	r0, r3
    8e04:	beq	c17c <bt_compidtostr@@Base+0x4c28>
    8e08:	bhi	c188 <bt_compidtostr@@Base+0x4c34>
    8e0c:	ldr	r0, [pc, #-2196]	; 8580 <bt_compidtostr@@Base+0x102c>
    8e10:	add	r0, pc, r0
    8e14:	bx	lr
    8e18:	ldr	r3, [pc, #-2204]	; 8584 <bt_compidtostr@@Base+0x1030>
    8e1c:	cmp	r0, r3
    8e20:	beq	c1a0 <bt_compidtostr@@Base+0x4c4c>
    8e24:	bhi	c1ac <bt_compidtostr@@Base+0x4c58>
    8e28:	ldr	r0, [pc, #-2216]	; 8588 <bt_compidtostr@@Base+0x1034>
    8e2c:	add	r0, pc, r0
    8e30:	bx	lr
    8e34:	ldr	r3, [pc, #-2224]	; 858c <bt_compidtostr@@Base+0x1038>
    8e38:	cmp	r0, r3
    8e3c:	beq	c1dc <bt_compidtostr@@Base+0x4c88>
    8e40:	bhi	8e60 <bt_compidtostr@@Base+0x190c>
    8e44:	sub	r3, r3, #2
    8e48:	cmp	r0, r3
    8e4c:	beq	c1c4 <bt_compidtostr@@Base+0x4c70>
    8e50:	bhi	c1d0 <bt_compidtostr@@Base+0x4c7c>
    8e54:	ldr	r0, [pc, #-2252]	; 8590 <bt_compidtostr@@Base+0x103c>
    8e58:	add	r0, pc, r0
    8e5c:	bx	lr
    8e60:	ldr	r3, [pc, #-2260]	; 8594 <bt_compidtostr@@Base+0x1040>
    8e64:	cmp	r0, r3
    8e68:	beq	c1e8 <bt_compidtostr@@Base+0x4c94>
    8e6c:	bhi	c1f4 <bt_compidtostr@@Base+0x4ca0>
    8e70:	ldr	r0, [pc, #-2272]	; 8598 <bt_compidtostr@@Base+0x1044>
    8e74:	add	r0, pc, r0
    8e78:	bx	lr
    8e7c:	ldr	r3, [pc, #-2280]	; 859c <bt_compidtostr@@Base+0x1048>
    8e80:	cmp	r0, r3
    8e84:	beq	c248 <bt_compidtostr@@Base+0x4cf4>
    8e88:	bhi	8ed4 <bt_compidtostr@@Base+0x1980>
    8e8c:	sub	r3, r3, #4
    8e90:	cmp	r0, r3
    8e94:	beq	c224 <bt_compidtostr@@Base+0x4cd0>
    8e98:	bhi	8eb8 <bt_compidtostr@@Base+0x1964>
    8e9c:	sub	r3, r3, #2
    8ea0:	cmp	r0, r3
    8ea4:	beq	c20c <bt_compidtostr@@Base+0x4cb8>
    8ea8:	bhi	c218 <bt_compidtostr@@Base+0x4cc4>
    8eac:	ldr	r0, [pc, #-2324]	; 85a0 <bt_compidtostr@@Base+0x104c>
    8eb0:	add	r0, pc, r0
    8eb4:	bx	lr
    8eb8:	ldr	r3, [pc, #-2332]	; 85a4 <bt_compidtostr@@Base+0x1050>
    8ebc:	cmp	r0, r3
    8ec0:	beq	c230 <bt_compidtostr@@Base+0x4cdc>
    8ec4:	bhi	c23c <bt_compidtostr@@Base+0x4ce8>
    8ec8:	ldr	r0, [pc, #-2344]	; 85a8 <bt_compidtostr@@Base+0x1054>
    8ecc:	add	r0, pc, r0
    8ed0:	bx	lr
    8ed4:	ldr	r3, [pc, #-2352]	; 85ac <bt_compidtostr@@Base+0x1058>
    8ed8:	cmp	r0, r3
    8edc:	beq	c26c <bt_compidtostr@@Base+0x4d18>
    8ee0:	bhi	8f00 <bt_compidtostr@@Base+0x19ac>
    8ee4:	sub	r3, r3, #2
    8ee8:	cmp	r0, r3
    8eec:	beq	c254 <bt_compidtostr@@Base+0x4d00>
    8ef0:	bhi	c260 <bt_compidtostr@@Base+0x4d0c>
    8ef4:	ldr	r0, [pc, #-2380]	; 85b0 <bt_compidtostr@@Base+0x105c>
    8ef8:	add	r0, pc, r0
    8efc:	bx	lr
    8f00:	ldr	r3, [pc, #-2388]	; 85b4 <bt_compidtostr@@Base+0x1060>
    8f04:	cmp	r0, r3
    8f08:	beq	c278 <bt_compidtostr@@Base+0x4d24>
    8f0c:	bhi	c284 <bt_compidtostr@@Base+0x4d30>
    8f10:	ldr	r0, [pc, #-2400]	; 85b8 <bt_compidtostr@@Base+0x1064>
    8f14:	add	r0, pc, r0
    8f18:	bx	lr
    8f1c:	ldr	r3, [pc, #-2408]	; 85bc <bt_compidtostr@@Base+0x1068>
    8f20:	cmp	r0, r3
    8f24:	beq	c320 <bt_compidtostr@@Base+0x4dcc>
    8f28:	bhi	8fcc <bt_compidtostr@@Base+0x1a78>
    8f2c:	sub	r3, r3, #8
    8f30:	cmp	r0, r3
    8f34:	beq	c2d8 <bt_compidtostr@@Base+0x4d84>
    8f38:	bhi	8f84 <bt_compidtostr@@Base+0x1a30>
    8f3c:	sub	r3, r3, #4
    8f40:	cmp	r0, r3
    8f44:	beq	c2b4 <bt_compidtostr@@Base+0x4d60>
    8f48:	bhi	8f68 <bt_compidtostr@@Base+0x1a14>
    8f4c:	sub	r3, r3, #2
    8f50:	cmp	r0, r3
    8f54:	beq	c29c <bt_compidtostr@@Base+0x4d48>
    8f58:	bhi	c2a8 <bt_compidtostr@@Base+0x4d54>
    8f5c:	ldr	r0, [pc, #-2468]	; 85c0 <bt_compidtostr@@Base+0x106c>
    8f60:	add	r0, pc, r0
    8f64:	bx	lr
    8f68:	ldr	r3, [pc, #-2476]	; 85c4 <bt_compidtostr@@Base+0x1070>
    8f6c:	cmp	r0, r3
    8f70:	beq	c2c0 <bt_compidtostr@@Base+0x4d6c>
    8f74:	bhi	c2cc <bt_compidtostr@@Base+0x4d78>
    8f78:	ldr	r0, [pc, #-2488]	; 85c8 <bt_compidtostr@@Base+0x1074>
    8f7c:	add	r0, pc, r0
    8f80:	bx	lr
    8f84:	ldr	r3, [pc, #-2496]	; 85cc <bt_compidtostr@@Base+0x1078>
    8f88:	cmp	r0, r3
    8f8c:	beq	c2fc <bt_compidtostr@@Base+0x4da8>
    8f90:	bhi	8fb0 <bt_compidtostr@@Base+0x1a5c>
    8f94:	sub	r3, r3, #2
    8f98:	cmp	r0, r3
    8f9c:	beq	c2e4 <bt_compidtostr@@Base+0x4d90>
    8fa0:	bhi	c2f0 <bt_compidtostr@@Base+0x4d9c>
    8fa4:	ldr	r0, [pc, #-2524]	; 85d0 <bt_compidtostr@@Base+0x107c>
    8fa8:	add	r0, pc, r0
    8fac:	bx	lr
    8fb0:	ldr	r3, [pc, #-2532]	; 85d4 <bt_compidtostr@@Base+0x1080>
    8fb4:	cmp	r0, r3
    8fb8:	beq	c308 <bt_compidtostr@@Base+0x4db4>
    8fbc:	bhi	c314 <bt_compidtostr@@Base+0x4dc0>
    8fc0:	ldr	r0, [pc, #-2544]	; 85d8 <bt_compidtostr@@Base+0x1084>
    8fc4:	add	r0, pc, r0
    8fc8:	bx	lr
    8fcc:	ldr	r3, [pc, #-2552]	; 85dc <bt_compidtostr@@Base+0x1088>
    8fd0:	cmp	r0, r3
    8fd4:	beq	c368 <bt_compidtostr@@Base+0x4e14>
    8fd8:	bhi	9024 <bt_compidtostr@@Base+0x1ad0>
    8fdc:	sub	r3, r3, #4
    8fe0:	cmp	r0, r3
    8fe4:	beq	c344 <bt_compidtostr@@Base+0x4df0>
    8fe8:	bhi	9008 <bt_compidtostr@@Base+0x1ab4>
    8fec:	sub	r3, r3, #2
    8ff0:	cmp	r0, r3
    8ff4:	beq	c32c <bt_compidtostr@@Base+0x4dd8>
    8ff8:	bhi	c338 <bt_compidtostr@@Base+0x4de4>
    8ffc:	ldr	r0, [pc, #-2596]	; 85e0 <bt_compidtostr@@Base+0x108c>
    9000:	add	r0, pc, r0
    9004:	bx	lr
    9008:	ldr	r3, [pc, #-2604]	; 85e4 <bt_compidtostr@@Base+0x1090>
    900c:	cmp	r0, r3
    9010:	beq	c350 <bt_compidtostr@@Base+0x4dfc>
    9014:	bhi	c35c <bt_compidtostr@@Base+0x4e08>
    9018:	ldr	r0, [pc, #-2616]	; 85e8 <bt_compidtostr@@Base+0x1094>
    901c:	add	r0, pc, r0
    9020:	bx	lr
    9024:	ldr	r3, [pc, #-2624]	; 85ec <bt_compidtostr@@Base+0x1098>
    9028:	cmp	r0, r3
    902c:	beq	c38c <bt_compidtostr@@Base+0x4e38>
    9030:	bhi	9050 <bt_compidtostr@@Base+0x1afc>
    9034:	sub	r3, r3, #2
    9038:	cmp	r0, r3
    903c:	beq	c374 <bt_compidtostr@@Base+0x4e20>
    9040:	bhi	c380 <bt_compidtostr@@Base+0x4e2c>
    9044:	ldr	r0, [pc, #-2652]	; 85f0 <bt_compidtostr@@Base+0x109c>
    9048:	add	r0, pc, r0
    904c:	bx	lr
    9050:	ldr	r3, [pc, #-2660]	; 85f4 <bt_compidtostr@@Base+0x10a0>
    9054:	cmp	r0, r3
    9058:	beq	c3a4 <bt_compidtostr@@Base+0x4e50>
    905c:	bcc	c398 <bt_compidtostr@@Base+0x4e44>
    9060:	add	r3, r3, #1
    9064:	cmp	r0, r3
    9068:	beq	c3b0 <bt_compidtostr@@Base+0x4e5c>
    906c:	add	r3, r3, #1
    9070:	cmp	r0, r3
    9074:	bne	77c4 <bt_compidtostr@@Base+0x270>
    9078:	ldr	r0, [pc, #-2696]	; 85f8 <bt_compidtostr@@Base+0x10a4>
    907c:	add	r0, pc, r0
    9080:	bx	lr
    9084:	cmp	r0, #616	; 0x268
    9088:	beq	c4dc <bt_compidtostr@@Base+0x4f88>
    908c:	bhi	91c4 <bt_compidtostr@@Base+0x1c70>
    9090:	cmp	r0, #600	; 0x258
    9094:	beq	c44c <bt_compidtostr@@Base+0x4ef8>
    9098:	bhi	9130 <bt_compidtostr@@Base+0x1bdc>
    909c:	cmp	r0, #592	; 0x250
    90a0:	beq	c404 <bt_compidtostr@@Base+0x4eb0>
    90a4:	bhi	90ec <bt_compidtostr@@Base+0x1b98>
    90a8:	cmp	r0, #588	; 0x24c
    90ac:	beq	c3e0 <bt_compidtostr@@Base+0x4e8c>
    90b0:	bhi	90d0 <bt_compidtostr@@Base+0x1b7c>
    90b4:	ldr	r3, [pc, #-2752]	; 85fc <bt_compidtostr@@Base+0x10a8>
    90b8:	cmp	r0, r3
    90bc:	beq	c3c8 <bt_compidtostr@@Base+0x4e74>
    90c0:	bhi	c3d4 <bt_compidtostr@@Base+0x4e80>
    90c4:	ldr	r0, [pc, #-2764]	; 8600 <bt_compidtostr@@Base+0x10ac>
    90c8:	add	r0, pc, r0
    90cc:	bx	lr
    90d0:	ldr	r3, [pc, #-2772]	; 8604 <bt_compidtostr@@Base+0x10b0>
    90d4:	cmp	r0, r3
    90d8:	beq	c3ec <bt_compidtostr@@Base+0x4e98>
    90dc:	bhi	c3f8 <bt_compidtostr@@Base+0x4ea4>
    90e0:	ldr	r0, [pc, #-2784]	; 8608 <bt_compidtostr@@Base+0x10b4>
    90e4:	add	r0, pc, r0
    90e8:	bx	lr
    90ec:	cmp	r0, #596	; 0x254
    90f0:	beq	c428 <bt_compidtostr@@Base+0x4ed4>
    90f4:	bhi	9114 <bt_compidtostr@@Base+0x1bc0>
    90f8:	ldr	r3, [pc, #-2804]	; 860c <bt_compidtostr@@Base+0x10b8>
    90fc:	cmp	r0, r3
    9100:	beq	c410 <bt_compidtostr@@Base+0x4ebc>
    9104:	bhi	c41c <bt_compidtostr@@Base+0x4ec8>
    9108:	ldr	r0, [pc, #-2816]	; 8610 <bt_compidtostr@@Base+0x10bc>
    910c:	add	r0, pc, r0
    9110:	bx	lr
    9114:	ldr	r3, [pc, #-2824]	; 8614 <bt_compidtostr@@Base+0x10c0>
    9118:	cmp	r0, r3
    911c:	beq	c434 <bt_compidtostr@@Base+0x4ee0>
    9120:	bhi	c440 <bt_compidtostr@@Base+0x4eec>
    9124:	ldr	r0, [pc, #-2836]	; 8618 <bt_compidtostr@@Base+0x10c4>
    9128:	add	r0, pc, r0
    912c:	bx	lr
    9130:	cmp	r0, #608	; 0x260
    9134:	beq	c494 <bt_compidtostr@@Base+0x4f40>
    9138:	bhi	9180 <bt_compidtostr@@Base+0x1c2c>
    913c:	cmp	r0, #604	; 0x25c
    9140:	beq	c470 <bt_compidtostr@@Base+0x4f1c>
    9144:	bhi	9164 <bt_compidtostr@@Base+0x1c10>
    9148:	ldr	r3, [pc, #-2868]	; 861c <bt_compidtostr@@Base+0x10c8>
    914c:	cmp	r0, r3
    9150:	beq	c458 <bt_compidtostr@@Base+0x4f04>
    9154:	bhi	c464 <bt_compidtostr@@Base+0x4f10>
    9158:	ldr	r0, [pc, #-2880]	; 8620 <bt_compidtostr@@Base+0x10cc>
    915c:	add	r0, pc, r0
    9160:	bx	lr
    9164:	ldr	r3, [pc, #-2888]	; 8624 <bt_compidtostr@@Base+0x10d0>
    9168:	cmp	r0, r3
    916c:	beq	c47c <bt_compidtostr@@Base+0x4f28>
    9170:	bhi	c488 <bt_compidtostr@@Base+0x4f34>
    9174:	ldr	r0, [pc, #-2900]	; 8628 <bt_compidtostr@@Base+0x10d4>
    9178:	add	r0, pc, r0
    917c:	bx	lr
    9180:	cmp	r0, #612	; 0x264
    9184:	beq	c4b8 <bt_compidtostr@@Base+0x4f64>
    9188:	bhi	91a8 <bt_compidtostr@@Base+0x1c54>
    918c:	ldr	r3, [pc, #-2920]	; 862c <bt_compidtostr@@Base+0x10d8>
    9190:	cmp	r0, r3
    9194:	beq	c4a0 <bt_compidtostr@@Base+0x4f4c>
    9198:	bhi	c4ac <bt_compidtostr@@Base+0x4f58>
    919c:	ldr	r0, [pc, #-2932]	; 8630 <bt_compidtostr@@Base+0x10dc>
    91a0:	add	r0, pc, r0
    91a4:	bx	lr
    91a8:	ldr	r3, [pc, #-2940]	; 8634 <bt_compidtostr@@Base+0x10e0>
    91ac:	cmp	r0, r3
    91b0:	beq	c4c4 <bt_compidtostr@@Base+0x4f70>
    91b4:	bhi	c4d0 <bt_compidtostr@@Base+0x4f7c>
    91b8:	ldr	r0, [pc, #-2952]	; 8638 <bt_compidtostr@@Base+0x10e4>
    91bc:	add	r0, pc, r0
    91c0:	bx	lr
    91c4:	cmp	r0, #632	; 0x278
    91c8:	beq	c56c <bt_compidtostr@@Base+0x5018>
    91cc:	bhi	9264 <bt_compidtostr@@Base+0x1d10>
    91d0:	cmp	r0, #624	; 0x270
    91d4:	beq	c524 <bt_compidtostr@@Base+0x4fd0>
    91d8:	bhi	9220 <bt_compidtostr@@Base+0x1ccc>
    91dc:	cmp	r0, #620	; 0x26c
    91e0:	beq	c500 <bt_compidtostr@@Base+0x4fac>
    91e4:	bhi	9204 <bt_compidtostr@@Base+0x1cb0>
    91e8:	ldr	r3, [pc, #-2996]	; 863c <bt_compidtostr@@Base+0x10e8>
    91ec:	cmp	r0, r3
    91f0:	beq	c4e8 <bt_compidtostr@@Base+0x4f94>
    91f4:	bhi	c4f4 <bt_compidtostr@@Base+0x4fa0>
    91f8:	ldr	r0, [pc, #-3008]	; 8640 <bt_compidtostr@@Base+0x10ec>
    91fc:	add	r0, pc, r0
    9200:	bx	lr
    9204:	ldr	r3, [pc, #-3016]	; 8644 <bt_compidtostr@@Base+0x10f0>
    9208:	cmp	r0, r3
    920c:	beq	c50c <bt_compidtostr@@Base+0x4fb8>
    9210:	bhi	c518 <bt_compidtostr@@Base+0x4fc4>
    9214:	ldr	r0, [pc, #-3028]	; 8648 <bt_compidtostr@@Base+0x10f4>
    9218:	add	r0, pc, r0
    921c:	bx	lr
    9220:	cmp	r0, #628	; 0x274
    9224:	beq	c548 <bt_compidtostr@@Base+0x4ff4>
    9228:	bhi	9248 <bt_compidtostr@@Base+0x1cf4>
    922c:	ldr	r3, [pc, #-3048]	; 864c <bt_compidtostr@@Base+0x10f8>
    9230:	cmp	r0, r3
    9234:	beq	c530 <bt_compidtostr@@Base+0x4fdc>
    9238:	bhi	c53c <bt_compidtostr@@Base+0x4fe8>
    923c:	ldr	r0, [pc, #-3060]	; 8650 <bt_compidtostr@@Base+0x10fc>
    9240:	add	r0, pc, r0
    9244:	bx	lr
    9248:	ldr	r3, [pc, #-3068]	; 8654 <bt_compidtostr@@Base+0x1100>
    924c:	cmp	r0, r3
    9250:	beq	c554 <bt_compidtostr@@Base+0x5000>
    9254:	bhi	c560 <bt_compidtostr@@Base+0x500c>
    9258:	ldr	r0, [pc, #-3080]	; 8658 <bt_compidtostr@@Base+0x1104>
    925c:	add	r0, pc, r0
    9260:	bx	lr
    9264:	cmp	r0, #640	; 0x280
    9268:	beq	c5b4 <bt_compidtostr@@Base+0x5060>
    926c:	bhi	92b4 <bt_compidtostr@@Base+0x1d60>
    9270:	cmp	r0, #636	; 0x27c
    9274:	beq	c590 <bt_compidtostr@@Base+0x503c>
    9278:	bhi	9298 <bt_compidtostr@@Base+0x1d44>
    927c:	ldr	r3, [pc, #-3112]	; 865c <bt_compidtostr@@Base+0x1108>
    9280:	cmp	r0, r3
    9284:	beq	c578 <bt_compidtostr@@Base+0x5024>
    9288:	bhi	c584 <bt_compidtostr@@Base+0x5030>
    928c:	ldr	r0, [pc, #-3124]	; 8660 <bt_compidtostr@@Base+0x110c>
    9290:	add	r0, pc, r0
    9294:	bx	lr
    9298:	ldr	r3, [pc, #-3132]	; 8664 <bt_compidtostr@@Base+0x1110>
    929c:	cmp	r0, r3
    92a0:	beq	c59c <bt_compidtostr@@Base+0x5048>
    92a4:	bhi	c5a8 <bt_compidtostr@@Base+0x5054>
    92a8:	ldr	r0, [pc, #-3144]	; 8668 <bt_compidtostr@@Base+0x1114>
    92ac:	add	r0, pc, r0
    92b0:	bx	lr
    92b4:	cmp	r0, #644	; 0x284
    92b8:	beq	c5d8 <bt_compidtostr@@Base+0x5084>
    92bc:	bhi	92dc <bt_compidtostr@@Base+0x1d88>
    92c0:	ldr	r3, [pc, #-3164]	; 866c <bt_compidtostr@@Base+0x1118>
    92c4:	cmp	r0, r3
    92c8:	beq	c5c0 <bt_compidtostr@@Base+0x506c>
    92cc:	bhi	c5cc <bt_compidtostr@@Base+0x5078>
    92d0:	ldr	r0, [pc, #-3176]	; 8670 <bt_compidtostr@@Base+0x111c>
    92d4:	add	r0, pc, r0
    92d8:	bx	lr
    92dc:	ldr	r3, [pc, #-3184]	; 8674 <bt_compidtostr@@Base+0x1120>
    92e0:	cmp	r0, r3
    92e4:	beq	c5f0 <bt_compidtostr@@Base+0x509c>
    92e8:	bcc	c5e4 <bt_compidtostr@@Base+0x5090>
    92ec:	add	r3, r3, #1
    92f0:	cmp	r0, r3
    92f4:	beq	c5fc <bt_compidtostr@@Base+0x50a8>
    92f8:	cmp	r0, #648	; 0x288
    92fc:	bne	77c4 <bt_compidtostr@@Base+0x270>
    9300:	ldr	r0, [pc, #-3216]	; 8678 <bt_compidtostr@@Base+0x1124>
    9304:	add	r0, pc, r0
    9308:	bx	lr
    930c:	ldr	r3, [pc, #-3224]	; 867c <bt_compidtostr@@Base+0x1128>
    9310:	cmp	r0, r3
    9314:	beq	c854 <bt_compidtostr@@Base+0x5300>
    9318:	bhi	95e0 <bt_compidtostr@@Base+0x208c>
    931c:	sub	r3, r3, #33	; 0x21
    9320:	cmp	r0, r3
    9324:	beq	c728 <bt_compidtostr@@Base+0x51d4>
    9328:	bhi	947c <bt_compidtostr@@Base+0x1f28>
    932c:	sub	r3, r3, #16
    9330:	cmp	r0, r3
    9334:	beq	c698 <bt_compidtostr@@Base+0x5144>
    9338:	bhi	93dc <bt_compidtostr@@Base+0x1e88>
    933c:	sub	r3, r3, #8
    9340:	cmp	r0, r3
    9344:	beq	c650 <bt_compidtostr@@Base+0x50fc>
    9348:	bhi	9394 <bt_compidtostr@@Base+0x1e40>
    934c:	sub	r3, r3, #4
    9350:	cmp	r0, r3
    9354:	beq	c62c <bt_compidtostr@@Base+0x50d8>
    9358:	bhi	9378 <bt_compidtostr@@Base+0x1e24>
    935c:	sub	r3, r3, #2
    9360:	cmp	r0, r3
    9364:	beq	c614 <bt_compidtostr@@Base+0x50c0>
    9368:	bhi	c620 <bt_compidtostr@@Base+0x50cc>
    936c:	ldr	r0, [pc, #-3316]	; 8680 <bt_compidtostr@@Base+0x112c>
    9370:	add	r0, pc, r0
    9374:	bx	lr
    9378:	ldr	r3, [pc, #-3324]	; 8684 <bt_compidtostr@@Base+0x1130>
    937c:	cmp	r0, r3
    9380:	beq	c638 <bt_compidtostr@@Base+0x50e4>
    9384:	bhi	c644 <bt_compidtostr@@Base+0x50f0>
    9388:	ldr	r0, [pc, #-3336]	; 8688 <bt_compidtostr@@Base+0x1134>
    938c:	add	r0, pc, r0
    9390:	bx	lr
    9394:	ldr	r3, [pc, #-3344]	; 868c <bt_compidtostr@@Base+0x1138>
    9398:	cmp	r0, r3
    939c:	beq	c674 <bt_compidtostr@@Base+0x5120>
    93a0:	bhi	93c0 <bt_compidtostr@@Base+0x1e6c>
    93a4:	sub	r3, r3, #2
    93a8:	cmp	r0, r3
    93ac:	beq	c65c <bt_compidtostr@@Base+0x5108>
    93b0:	bhi	c668 <bt_compidtostr@@Base+0x5114>
    93b4:	ldr	r0, [pc, #-3372]	; 8690 <bt_compidtostr@@Base+0x113c>
    93b8:	add	r0, pc, r0
    93bc:	bx	lr
    93c0:	ldr	r3, [pc, #-3380]	; 8694 <bt_compidtostr@@Base+0x1140>
    93c4:	cmp	r0, r3
    93c8:	beq	c680 <bt_compidtostr@@Base+0x512c>
    93cc:	bhi	c68c <bt_compidtostr@@Base+0x5138>
    93d0:	ldr	r0, [pc, #-3392]	; 8698 <bt_compidtostr@@Base+0x1144>
    93d4:	add	r0, pc, r0
    93d8:	bx	lr
    93dc:	ldr	r3, [pc, #-3400]	; 869c <bt_compidtostr@@Base+0x1148>
    93e0:	cmp	r0, r3
    93e4:	beq	c6e0 <bt_compidtostr@@Base+0x518c>
    93e8:	bhi	9434 <bt_compidtostr@@Base+0x1ee0>
    93ec:	sub	r3, r3, #4
    93f0:	cmp	r0, r3
    93f4:	beq	c6bc <bt_compidtostr@@Base+0x5168>
    93f8:	bhi	9418 <bt_compidtostr@@Base+0x1ec4>
    93fc:	sub	r3, r3, #2
    9400:	cmp	r0, r3
    9404:	beq	c6a4 <bt_compidtostr@@Base+0x5150>
    9408:	bhi	c6b0 <bt_compidtostr@@Base+0x515c>
    940c:	ldr	r0, [pc, #-3444]	; 86a0 <bt_compidtostr@@Base+0x114c>
    9410:	add	r0, pc, r0
    9414:	bx	lr
    9418:	ldr	r3, [pc, #-3452]	; 86a4 <bt_compidtostr@@Base+0x1150>
    941c:	cmp	r0, r3
    9420:	beq	c6c8 <bt_compidtostr@@Base+0x5174>
    9424:	bhi	c6d4 <bt_compidtostr@@Base+0x5180>
    9428:	ldr	r0, [pc, #3424]	; a190 <bt_compidtostr@@Base+0x2c3c>
    942c:	add	r0, pc, r0
    9430:	bx	lr
    9434:	ldr	r3, [pc, #3416]	; a194 <bt_compidtostr@@Base+0x2c40>
    9438:	cmp	r0, r3
    943c:	beq	c704 <bt_compidtostr@@Base+0x51b0>
    9440:	bhi	9460 <bt_compidtostr@@Base+0x1f0c>
    9444:	sub	r3, r3, #2
    9448:	cmp	r0, r3
    944c:	beq	c6ec <bt_compidtostr@@Base+0x5198>
    9450:	bhi	c6f8 <bt_compidtostr@@Base+0x51a4>
    9454:	ldr	r0, [pc, #3388]	; a198 <bt_compidtostr@@Base+0x2c44>
    9458:	add	r0, pc, r0
    945c:	bx	lr
    9460:	ldr	r3, [pc, #3380]	; a19c <bt_compidtostr@@Base+0x2c48>
    9464:	cmp	r0, r3
    9468:	beq	c710 <bt_compidtostr@@Base+0x51bc>
    946c:	bhi	c71c <bt_compidtostr@@Base+0x51c8>
    9470:	ldr	r0, [pc, #3368]	; a1a0 <bt_compidtostr@@Base+0x2c4c>
    9474:	add	r0, pc, r0
    9478:	bx	lr
    947c:	ldr	r3, [pc, #3360]	; a1a4 <bt_compidtostr@@Base+0x2c50>
    9480:	cmp	r0, r3
    9484:	beq	c7b8 <bt_compidtostr@@Base+0x5264>
    9488:	bhi	952c <bt_compidtostr@@Base+0x1fd8>
    948c:	sub	r3, r3, #8
    9490:	cmp	r0, r3
    9494:	beq	c770 <bt_compidtostr@@Base+0x521c>
    9498:	bhi	94e4 <bt_compidtostr@@Base+0x1f90>
    949c:	sub	r3, r3, #4
    94a0:	cmp	r0, r3
    94a4:	beq	c74c <bt_compidtostr@@Base+0x51f8>
    94a8:	bhi	94c8 <bt_compidtostr@@Base+0x1f74>
    94ac:	sub	r3, r3, #2
    94b0:	cmp	r0, r3
    94b4:	beq	c734 <bt_compidtostr@@Base+0x51e0>
    94b8:	bhi	c740 <bt_compidtostr@@Base+0x51ec>
    94bc:	ldr	r0, [pc, #3300]	; a1a8 <bt_compidtostr@@Base+0x2c54>
    94c0:	add	r0, pc, r0
    94c4:	bx	lr
    94c8:	ldr	r3, [pc, #3292]	; a1ac <bt_compidtostr@@Base+0x2c58>
    94cc:	cmp	r0, r3
    94d0:	beq	c758 <bt_compidtostr@@Base+0x5204>
    94d4:	bhi	c764 <bt_compidtostr@@Base+0x5210>
    94d8:	ldr	r0, [pc, #3280]	; a1b0 <bt_compidtostr@@Base+0x2c5c>
    94dc:	add	r0, pc, r0
    94e0:	bx	lr
    94e4:	ldr	r3, [pc, #3272]	; a1b4 <bt_compidtostr@@Base+0x2c60>
    94e8:	cmp	r0, r3
    94ec:	beq	c794 <bt_compidtostr@@Base+0x5240>
    94f0:	bhi	9510 <bt_compidtostr@@Base+0x1fbc>
    94f4:	sub	r3, r3, #2
    94f8:	cmp	r0, r3
    94fc:	beq	c77c <bt_compidtostr@@Base+0x5228>
    9500:	bhi	c788 <bt_compidtostr@@Base+0x5234>
    9504:	ldr	r0, [pc, #3244]	; a1b8 <bt_compidtostr@@Base+0x2c64>
    9508:	add	r0, pc, r0
    950c:	bx	lr
    9510:	ldr	r3, [pc, #3236]	; a1bc <bt_compidtostr@@Base+0x2c68>
    9514:	cmp	r0, r3
    9518:	beq	c7a0 <bt_compidtostr@@Base+0x524c>
    951c:	bhi	c7ac <bt_compidtostr@@Base+0x5258>
    9520:	ldr	r0, [pc, #3224]	; a1c0 <bt_compidtostr@@Base+0x2c6c>
    9524:	add	r0, pc, r0
    9528:	bx	lr
    952c:	ldr	r3, [pc, #3216]	; a1c4 <bt_compidtostr@@Base+0x2c70>
    9530:	cmp	r0, r3
    9534:	beq	c800 <bt_compidtostr@@Base+0x52ac>
    9538:	bhi	9584 <bt_compidtostr@@Base+0x2030>
    953c:	sub	r3, r3, #4
    9540:	cmp	r0, r3
    9544:	beq	c7dc <bt_compidtostr@@Base+0x5288>
    9548:	bhi	9568 <bt_compidtostr@@Base+0x2014>
    954c:	sub	r3, r3, #2
    9550:	cmp	r0, r3
    9554:	beq	c7c4 <bt_compidtostr@@Base+0x5270>
    9558:	bhi	c7d0 <bt_compidtostr@@Base+0x527c>
    955c:	ldr	r0, [pc, #3172]	; a1c8 <bt_compidtostr@@Base+0x2c74>
    9560:	add	r0, pc, r0
    9564:	bx	lr
    9568:	ldr	r3, [pc, #3164]	; a1cc <bt_compidtostr@@Base+0x2c78>
    956c:	cmp	r0, r3
    9570:	beq	c7e8 <bt_compidtostr@@Base+0x5294>
    9574:	bhi	c7f4 <bt_compidtostr@@Base+0x52a0>
    9578:	ldr	r0, [pc, #3152]	; a1d0 <bt_compidtostr@@Base+0x2c7c>
    957c:	add	r0, pc, r0
    9580:	bx	lr
    9584:	ldr	r3, [pc, #3144]	; a1d4 <bt_compidtostr@@Base+0x2c80>
    9588:	cmp	r0, r3
    958c:	beq	c824 <bt_compidtostr@@Base+0x52d0>
    9590:	bhi	95b0 <bt_compidtostr@@Base+0x205c>
    9594:	sub	r3, r3, #2
    9598:	cmp	r0, r3
    959c:	beq	c80c <bt_compidtostr@@Base+0x52b8>
    95a0:	bhi	c818 <bt_compidtostr@@Base+0x52c4>
    95a4:	ldr	r0, [pc, #3116]	; a1d8 <bt_compidtostr@@Base+0x2c84>
    95a8:	add	r0, pc, r0
    95ac:	bx	lr
    95b0:	ldr	r3, [pc, #3108]	; a1dc <bt_compidtostr@@Base+0x2c88>
    95b4:	cmp	r0, r3
    95b8:	beq	c83c <bt_compidtostr@@Base+0x52e8>
    95bc:	bcc	c830 <bt_compidtostr@@Base+0x52dc>
    95c0:	cmp	r0, #712	; 0x2c8
    95c4:	beq	c848 <bt_compidtostr@@Base+0x52f4>
    95c8:	add	r3, r3, #2
    95cc:	cmp	r0, r3
    95d0:	bne	77c4 <bt_compidtostr@@Base+0x270>
    95d4:	ldr	r0, [pc, #3076]	; a1e0 <bt_compidtostr@@Base+0x2c8c>
    95d8:	add	r0, pc, r0
    95dc:	bx	lr
    95e0:	ldr	r3, [pc, #3068]	; a1e4 <bt_compidtostr@@Base+0x2c90>
    95e4:	cmp	r0, r3
    95e8:	beq	c974 <bt_compidtostr@@Base+0x5420>
    95ec:	bhi	9720 <bt_compidtostr@@Base+0x21cc>
    95f0:	sub	r3, r3, #16
    95f4:	cmp	r0, r3
    95f8:	beq	c8e4 <bt_compidtostr@@Base+0x5390>
    95fc:	bhi	9690 <bt_compidtostr@@Base+0x213c>
    9600:	sub	r3, r3, #8
    9604:	cmp	r0, r3
    9608:	beq	c89c <bt_compidtostr@@Base+0x5348>
    960c:	bhi	9650 <bt_compidtostr@@Base+0x20fc>
    9610:	sub	r3, r3, #4
    9614:	cmp	r0, r3
    9618:	beq	c878 <bt_compidtostr@@Base+0x5324>
    961c:	bhi	9638 <bt_compidtostr@@Base+0x20e4>
    9620:	cmp	r0, #716	; 0x2cc
    9624:	beq	c860 <bt_compidtostr@@Base+0x530c>
    9628:	bhi	c86c <bt_compidtostr@@Base+0x5318>
    962c:	ldr	r0, [pc, #2996]	; a1e8 <bt_compidtostr@@Base+0x2c94>
    9630:	add	r0, pc, r0
    9634:	bx	lr
    9638:	cmp	r0, #720	; 0x2d0
    963c:	beq	c884 <bt_compidtostr@@Base+0x5330>
    9640:	bhi	c890 <bt_compidtostr@@Base+0x533c>
    9644:	ldr	r0, [pc, #2976]	; a1ec <bt_compidtostr@@Base+0x2c98>
    9648:	add	r0, pc, r0
    964c:	bx	lr
    9650:	ldr	r3, [pc, #2968]	; a1f0 <bt_compidtostr@@Base+0x2c9c>
    9654:	cmp	r0, r3
    9658:	beq	c8c0 <bt_compidtostr@@Base+0x536c>
    965c:	bhi	9678 <bt_compidtostr@@Base+0x2124>
    9660:	cmp	r0, #724	; 0x2d4
    9664:	beq	c8a8 <bt_compidtostr@@Base+0x5354>
    9668:	bhi	c8b4 <bt_compidtostr@@Base+0x5360>
    966c:	ldr	r0, [pc, #2944]	; a1f4 <bt_compidtostr@@Base+0x2ca0>
    9670:	add	r0, pc, r0
    9674:	bx	lr
    9678:	cmp	r0, #728	; 0x2d8
    967c:	beq	c8cc <bt_compidtostr@@Base+0x5378>
    9680:	bhi	c8d8 <bt_compidtostr@@Base+0x5384>
    9684:	ldr	r0, [pc, #2924]	; a1f8 <bt_compidtostr@@Base+0x2ca4>
    9688:	add	r0, pc, r0
    968c:	bx	lr
    9690:	ldr	r3, [pc, #2916]	; a1fc <bt_compidtostr@@Base+0x2ca8>
    9694:	cmp	r0, r3
    9698:	beq	c92c <bt_compidtostr@@Base+0x53d8>
    969c:	bhi	96e0 <bt_compidtostr@@Base+0x218c>
    96a0:	sub	r3, r3, #4
    96a4:	cmp	r0, r3
    96a8:	beq	c908 <bt_compidtostr@@Base+0x53b4>
    96ac:	bhi	96c8 <bt_compidtostr@@Base+0x2174>
    96b0:	cmp	r0, #732	; 0x2dc
    96b4:	beq	c8f0 <bt_compidtostr@@Base+0x539c>
    96b8:	bhi	c8fc <bt_compidtostr@@Base+0x53a8>
    96bc:	ldr	r0, [pc, #2876]	; a200 <bt_compidtostr@@Base+0x2cac>
    96c0:	add	r0, pc, r0
    96c4:	bx	lr
    96c8:	cmp	r0, #736	; 0x2e0
    96cc:	beq	c914 <bt_compidtostr@@Base+0x53c0>
    96d0:	bhi	c920 <bt_compidtostr@@Base+0x53cc>
    96d4:	ldr	r0, [pc, #2856]	; a204 <bt_compidtostr@@Base+0x2cb0>
    96d8:	add	r0, pc, r0
    96dc:	bx	lr
    96e0:	ldr	r3, [pc, #2848]	; a208 <bt_compidtostr@@Base+0x2cb4>
    96e4:	cmp	r0, r3
    96e8:	beq	c950 <bt_compidtostr@@Base+0x53fc>
    96ec:	bhi	9708 <bt_compidtostr@@Base+0x21b4>
    96f0:	cmp	r0, #740	; 0x2e4
    96f4:	beq	c938 <bt_compidtostr@@Base+0x53e4>
    96f8:	bhi	c944 <bt_compidtostr@@Base+0x53f0>
    96fc:	ldr	r0, [pc, #2824]	; a20c <bt_compidtostr@@Base+0x2cb8>
    9700:	add	r0, pc, r0
    9704:	bx	lr
    9708:	cmp	r0, #744	; 0x2e8
    970c:	beq	c95c <bt_compidtostr@@Base+0x5408>
    9710:	bhi	c968 <bt_compidtostr@@Base+0x5414>
    9714:	ldr	r0, [pc, #2804]	; a210 <bt_compidtostr@@Base+0x2cbc>
    9718:	add	r0, pc, r0
    971c:	bx	lr
    9720:	ldr	r3, [pc, #2796]	; a214 <bt_compidtostr@@Base+0x2cc0>
    9724:	cmp	r0, r3
    9728:	beq	ca04 <bt_compidtostr@@Base+0x54b0>
    972c:	bhi	97c0 <bt_compidtostr@@Base+0x226c>
    9730:	sub	r3, r3, #8
    9734:	cmp	r0, r3
    9738:	beq	c9bc <bt_compidtostr@@Base+0x5468>
    973c:	bhi	9780 <bt_compidtostr@@Base+0x222c>
    9740:	sub	r3, r3, #4
    9744:	cmp	r0, r3
    9748:	beq	c998 <bt_compidtostr@@Base+0x5444>
    974c:	bhi	9768 <bt_compidtostr@@Base+0x2214>
    9750:	cmp	r0, #748	; 0x2ec
    9754:	beq	c980 <bt_compidtostr@@Base+0x542c>
    9758:	bhi	c98c <bt_compidtostr@@Base+0x5438>
    975c:	ldr	r0, [pc, #2740]	; a218 <bt_compidtostr@@Base+0x2cc4>
    9760:	add	r0, pc, r0
    9764:	bx	lr
    9768:	cmp	r0, #752	; 0x2f0
    976c:	beq	c9a4 <bt_compidtostr@@Base+0x5450>
    9770:	bhi	c9b0 <bt_compidtostr@@Base+0x545c>
    9774:	ldr	r0, [pc, #2720]	; a21c <bt_compidtostr@@Base+0x2cc8>
    9778:	add	r0, pc, r0
    977c:	bx	lr
    9780:	ldr	r3, [pc, #2712]	; a220 <bt_compidtostr@@Base+0x2ccc>
    9784:	cmp	r0, r3
    9788:	beq	c9e0 <bt_compidtostr@@Base+0x548c>
    978c:	bhi	97a8 <bt_compidtostr@@Base+0x2254>
    9790:	cmp	r0, #756	; 0x2f4
    9794:	beq	c9c8 <bt_compidtostr@@Base+0x5474>
    9798:	bhi	c9d4 <bt_compidtostr@@Base+0x5480>
    979c:	ldr	r0, [pc, #2688]	; a224 <bt_compidtostr@@Base+0x2cd0>
    97a0:	add	r0, pc, r0
    97a4:	bx	lr
    97a8:	cmp	r0, #760	; 0x2f8
    97ac:	beq	c9ec <bt_compidtostr@@Base+0x5498>
    97b0:	bhi	c9f8 <bt_compidtostr@@Base+0x54a4>
    97b4:	ldr	r0, [pc, #2668]	; a228 <bt_compidtostr@@Base+0x2cd4>
    97b8:	add	r0, pc, r0
    97bc:	bx	lr
    97c0:	ldr	r3, [pc, #2660]	; a22c <bt_compidtostr@@Base+0x2cd8>
    97c4:	cmp	r0, r3
    97c8:	beq	ca4c <bt_compidtostr@@Base+0x54f8>
    97cc:	bhi	9810 <bt_compidtostr@@Base+0x22bc>
    97d0:	sub	r3, r3, #4
    97d4:	cmp	r0, r3
    97d8:	beq	ca28 <bt_compidtostr@@Base+0x54d4>
    97dc:	bhi	97f8 <bt_compidtostr@@Base+0x22a4>
    97e0:	cmp	r0, #764	; 0x2fc
    97e4:	beq	ca10 <bt_compidtostr@@Base+0x54bc>
    97e8:	bhi	ca1c <bt_compidtostr@@Base+0x54c8>
    97ec:	ldr	r0, [pc, #2620]	; a230 <bt_compidtostr@@Base+0x2cdc>
    97f0:	add	r0, pc, r0
    97f4:	bx	lr
    97f8:	cmp	r0, #768	; 0x300
    97fc:	beq	ca34 <bt_compidtostr@@Base+0x54e0>
    9800:	bhi	ca40 <bt_compidtostr@@Base+0x54ec>
    9804:	ldr	r0, [pc, #2600]	; a234 <bt_compidtostr@@Base+0x2ce0>
    9808:	add	r0, pc, r0
    980c:	bx	lr
    9810:	ldr	r3, [pc, #2592]	; a238 <bt_compidtostr@@Base+0x2ce4>
    9814:	cmp	r0, r3
    9818:	beq	ca70 <bt_compidtostr@@Base+0x551c>
    981c:	bhi	9838 <bt_compidtostr@@Base+0x22e4>
    9820:	cmp	r0, #772	; 0x304
    9824:	beq	ca58 <bt_compidtostr@@Base+0x5504>
    9828:	bhi	ca64 <bt_compidtostr@@Base+0x5510>
    982c:	ldr	r0, [pc, #2568]	; a23c <bt_compidtostr@@Base+0x2ce8>
    9830:	add	r0, pc, r0
    9834:	bx	lr
    9838:	cmp	r0, #776	; 0x308
    983c:	beq	ca88 <bt_compidtostr@@Base+0x5534>
    9840:	bcc	ca7c <bt_compidtostr@@Base+0x5528>
    9844:	ldr	r3, [pc, #2548]	; a240 <bt_compidtostr@@Base+0x2cec>
    9848:	cmp	r0, r3
    984c:	beq	ca94 <bt_compidtostr@@Base+0x5540>
    9850:	add	r3, r3, #1
    9854:	cmp	r0, r3
    9858:	bne	77c4 <bt_compidtostr@@Base+0x270>
    985c:	ldr	r0, [pc, #2528]	; a244 <bt_compidtostr@@Base+0x2cf0>
    9860:	add	r0, pc, r0
    9864:	bx	lr
    9868:	ldr	r3, [pc, #2520]	; a248 <bt_compidtostr@@Base+0x2cf4>
    986c:	cmp	r0, r3
    9870:	beq	cf38 <bt_compidtostr@@Base+0x59e4>
    9874:	bhi	9dd4 <bt_compidtostr@@Base+0x2880>
    9878:	cmp	r0, #844	; 0x34c
    987c:	beq	ccec <bt_compidtostr@@Base+0x5798>
    9880:	bhi	9b4c <bt_compidtostr@@Base+0x25f8>
    9884:	sub	r3, r3, #98	; 0x62
    9888:	cmp	r0, r3
    988c:	beq	cbc0 <bt_compidtostr@@Base+0x566c>
    9890:	bhi	99e4 <bt_compidtostr@@Base+0x2490>
    9894:	sub	r3, r3, #16
    9898:	cmp	r0, r3
    989c:	beq	cb30 <bt_compidtostr@@Base+0x55dc>
    98a0:	bhi	9944 <bt_compidtostr@@Base+0x23f0>
    98a4:	sub	r3, r3, #8
    98a8:	cmp	r0, r3
    98ac:	beq	cae8 <bt_compidtostr@@Base+0x5594>
    98b0:	bhi	98fc <bt_compidtostr@@Base+0x23a8>
    98b4:	sub	r3, r3, #4
    98b8:	cmp	r0, r3
    98bc:	beq	cac4 <bt_compidtostr@@Base+0x5570>
    98c0:	bhi	98e0 <bt_compidtostr@@Base+0x238c>
    98c4:	sub	r3, r3, #2
    98c8:	cmp	r0, r3
    98cc:	beq	caac <bt_compidtostr@@Base+0x5558>
    98d0:	bhi	cab8 <bt_compidtostr@@Base+0x5564>
    98d4:	ldr	r0, [pc, #2416]	; a24c <bt_compidtostr@@Base+0x2cf8>
    98d8:	add	r0, pc, r0
    98dc:	bx	lr
    98e0:	ldr	r3, [pc, #2408]	; a250 <bt_compidtostr@@Base+0x2cfc>
    98e4:	cmp	r0, r3
    98e8:	beq	cad0 <bt_compidtostr@@Base+0x557c>
    98ec:	bhi	cadc <bt_compidtostr@@Base+0x5588>
    98f0:	ldr	r0, [pc, #2396]	; a254 <bt_compidtostr@@Base+0x2d00>
    98f4:	add	r0, pc, r0
    98f8:	bx	lr
    98fc:	ldr	r3, [pc, #2388]	; a258 <bt_compidtostr@@Base+0x2d04>
    9900:	cmp	r0, r3
    9904:	beq	cb0c <bt_compidtostr@@Base+0x55b8>
    9908:	bhi	9928 <bt_compidtostr@@Base+0x23d4>
    990c:	sub	r3, r3, #2
    9910:	cmp	r0, r3
    9914:	beq	caf4 <bt_compidtostr@@Base+0x55a0>
    9918:	bhi	cb00 <bt_compidtostr@@Base+0x55ac>
    991c:	ldr	r0, [pc, #2360]	; a25c <bt_compidtostr@@Base+0x2d08>
    9920:	add	r0, pc, r0
    9924:	bx	lr
    9928:	ldr	r3, [pc, #2352]	; a260 <bt_compidtostr@@Base+0x2d0c>
    992c:	cmp	r0, r3
    9930:	beq	cb18 <bt_compidtostr@@Base+0x55c4>
    9934:	bhi	cb24 <bt_compidtostr@@Base+0x55d0>
    9938:	ldr	r0, [pc, #2340]	; a264 <bt_compidtostr@@Base+0x2d10>
    993c:	add	r0, pc, r0
    9940:	bx	lr
    9944:	ldr	r3, [pc, #2332]	; a268 <bt_compidtostr@@Base+0x2d14>
    9948:	cmp	r0, r3
    994c:	beq	cb78 <bt_compidtostr@@Base+0x5624>
    9950:	bhi	999c <bt_compidtostr@@Base+0x2448>
    9954:	sub	r3, r3, #4
    9958:	cmp	r0, r3
    995c:	beq	cb54 <bt_compidtostr@@Base+0x5600>
    9960:	bhi	9980 <bt_compidtostr@@Base+0x242c>
    9964:	sub	r3, r3, #2
    9968:	cmp	r0, r3
    996c:	beq	cb3c <bt_compidtostr@@Base+0x55e8>
    9970:	bhi	cb48 <bt_compidtostr@@Base+0x55f4>
    9974:	ldr	r0, [pc, #2288]	; a26c <bt_compidtostr@@Base+0x2d18>
    9978:	add	r0, pc, r0
    997c:	bx	lr
    9980:	ldr	r3, [pc, #2280]	; a270 <bt_compidtostr@@Base+0x2d1c>
    9984:	cmp	r0, r3
    9988:	beq	cb60 <bt_compidtostr@@Base+0x560c>
    998c:	bhi	cb6c <bt_compidtostr@@Base+0x5618>
    9990:	ldr	r0, [pc, #2268]	; a274 <bt_compidtostr@@Base+0x2d20>
    9994:	add	r0, pc, r0
    9998:	bx	lr
    999c:	ldr	r3, [pc, #2260]	; a278 <bt_compidtostr@@Base+0x2d24>
    99a0:	cmp	r0, r3
    99a4:	beq	cb9c <bt_compidtostr@@Base+0x5648>
    99a8:	bhi	99c8 <bt_compidtostr@@Base+0x2474>
    99ac:	sub	r3, r3, #2
    99b0:	cmp	r0, r3
    99b4:	beq	cb84 <bt_compidtostr@@Base+0x5630>
    99b8:	bhi	cb90 <bt_compidtostr@@Base+0x563c>
    99bc:	ldr	r0, [pc, #2232]	; a27c <bt_compidtostr@@Base+0x2d28>
    99c0:	add	r0, pc, r0
    99c4:	bx	lr
    99c8:	ldr	r3, [pc, #2224]	; a280 <bt_compidtostr@@Base+0x2d2c>
    99cc:	cmp	r0, r3
    99d0:	beq	cba8 <bt_compidtostr@@Base+0x5654>
    99d4:	bhi	cbb4 <bt_compidtostr@@Base+0x5660>
    99d8:	ldr	r0, [pc, #2212]	; a284 <bt_compidtostr@@Base+0x2d30>
    99dc:	add	r0, pc, r0
    99e0:	bx	lr
    99e4:	ldr	r3, [pc, #2204]	; a288 <bt_compidtostr@@Base+0x2d34>
    99e8:	cmp	r0, r3
    99ec:	beq	cc50 <bt_compidtostr@@Base+0x56fc>
    99f0:	bhi	9a94 <bt_compidtostr@@Base+0x2540>
    99f4:	sub	r3, r3, #8
    99f8:	cmp	r0, r3
    99fc:	beq	cc08 <bt_compidtostr@@Base+0x56b4>
    9a00:	bhi	9a4c <bt_compidtostr@@Base+0x24f8>
    9a04:	sub	r3, r3, #4
    9a08:	cmp	r0, r3
    9a0c:	beq	cbe4 <bt_compidtostr@@Base+0x5690>
    9a10:	bhi	9a30 <bt_compidtostr@@Base+0x24dc>
    9a14:	sub	r3, r3, #2
    9a18:	cmp	r0, r3
    9a1c:	beq	cbcc <bt_compidtostr@@Base+0x5678>
    9a20:	bhi	cbd8 <bt_compidtostr@@Base+0x5684>
    9a24:	ldr	r0, [pc, #2144]	; a28c <bt_compidtostr@@Base+0x2d38>
    9a28:	add	r0, pc, r0
    9a2c:	bx	lr
    9a30:	ldr	r3, [pc, #2136]	; a290 <bt_compidtostr@@Base+0x2d3c>
    9a34:	cmp	r0, r3
    9a38:	beq	cbf0 <bt_compidtostr@@Base+0x569c>
    9a3c:	bhi	cbfc <bt_compidtostr@@Base+0x56a8>
    9a40:	ldr	r0, [pc, #2124]	; a294 <bt_compidtostr@@Base+0x2d40>
    9a44:	add	r0, pc, r0
    9a48:	bx	lr
    9a4c:	ldr	r3, [pc, #2116]	; a298 <bt_compidtostr@@Base+0x2d44>
    9a50:	cmp	r0, r3
    9a54:	beq	cc2c <bt_compidtostr@@Base+0x56d8>
    9a58:	bhi	9a78 <bt_compidtostr@@Base+0x2524>
    9a5c:	sub	r3, r3, #2
    9a60:	cmp	r0, r3
    9a64:	beq	cc14 <bt_compidtostr@@Base+0x56c0>
    9a68:	bhi	cc20 <bt_compidtostr@@Base+0x56cc>
    9a6c:	ldr	r0, [pc, #2088]	; a29c <bt_compidtostr@@Base+0x2d48>
    9a70:	add	r0, pc, r0
    9a74:	bx	lr
    9a78:	ldr	r3, [pc, #2080]	; a2a0 <bt_compidtostr@@Base+0x2d4c>
    9a7c:	cmp	r0, r3
    9a80:	beq	cc38 <bt_compidtostr@@Base+0x56e4>
    9a84:	bhi	cc44 <bt_compidtostr@@Base+0x56f0>
    9a88:	ldr	r0, [pc, #2068]	; a2a4 <bt_compidtostr@@Base+0x2d50>
    9a8c:	add	r0, pc, r0
    9a90:	bx	lr
    9a94:	ldr	r3, [pc, #2060]	; a2a8 <bt_compidtostr@@Base+0x2d54>
    9a98:	cmp	r0, r3
    9a9c:	beq	cc98 <bt_compidtostr@@Base+0x5744>
    9aa0:	bhi	9aec <bt_compidtostr@@Base+0x2598>
    9aa4:	sub	r3, r3, #4
    9aa8:	cmp	r0, r3
    9aac:	beq	cc74 <bt_compidtostr@@Base+0x5720>
    9ab0:	bhi	9ad0 <bt_compidtostr@@Base+0x257c>
    9ab4:	sub	r3, r3, #2
    9ab8:	cmp	r0, r3
    9abc:	beq	cc5c <bt_compidtostr@@Base+0x5708>
    9ac0:	bhi	cc68 <bt_compidtostr@@Base+0x5714>
    9ac4:	ldr	r0, [pc, #2016]	; a2ac <bt_compidtostr@@Base+0x2d58>
    9ac8:	add	r0, pc, r0
    9acc:	bx	lr
    9ad0:	ldr	r3, [pc, #2008]	; a2b0 <bt_compidtostr@@Base+0x2d5c>
    9ad4:	cmp	r0, r3
    9ad8:	beq	cc80 <bt_compidtostr@@Base+0x572c>
    9adc:	bhi	cc8c <bt_compidtostr@@Base+0x5738>
    9ae0:	ldr	r0, [pc, #1996]	; a2b4 <bt_compidtostr@@Base+0x2d60>
    9ae4:	add	r0, pc, r0
    9ae8:	bx	lr
    9aec:	ldr	r3, [pc, #1988]	; a2b8 <bt_compidtostr@@Base+0x2d64>
    9af0:	cmp	r0, r3
    9af4:	beq	ccbc <bt_compidtostr@@Base+0x5768>
    9af8:	bhi	9b18 <bt_compidtostr@@Base+0x25c4>
    9afc:	sub	r3, r3, #2
    9b00:	cmp	r0, r3
    9b04:	beq	cca4 <bt_compidtostr@@Base+0x5750>
    9b08:	bhi	ccb0 <bt_compidtostr@@Base+0x575c>
    9b0c:	ldr	r0, [pc, #1960]	; a2bc <bt_compidtostr@@Base+0x2d68>
    9b10:	add	r0, pc, r0
    9b14:	bx	lr
    9b18:	ldr	r3, [pc, #1952]	; a2c0 <bt_compidtostr@@Base+0x2d6c>
    9b1c:	cmp	r0, r3
    9b20:	beq	ccd4 <bt_compidtostr@@Base+0x5780>
    9b24:	bcc	ccc8 <bt_compidtostr@@Base+0x5774>
    9b28:	add	r3, r3, #1
    9b2c:	cmp	r0, r3
    9b30:	beq	cce0 <bt_compidtostr@@Base+0x578c>
    9b34:	add	r3, r3, #1
    9b38:	cmp	r0, r3
    9b3c:	bne	77c4 <bt_compidtostr@@Base+0x270>
    9b40:	ldr	r0, [pc, #1916]	; a2c4 <bt_compidtostr@@Base+0x2d70>
    9b44:	add	r0, pc, r0
    9b48:	bx	lr
    9b4c:	cmp	r0, #876	; 0x36c
    9b50:	beq	ce0c <bt_compidtostr@@Base+0x58b8>
    9b54:	bhi	9c8c <bt_compidtostr@@Base+0x2738>
    9b58:	cmp	r0, #860	; 0x35c
    9b5c:	beq	cd7c <bt_compidtostr@@Base+0x5828>
    9b60:	bhi	9bf8 <bt_compidtostr@@Base+0x26a4>
    9b64:	cmp	r0, #852	; 0x354
    9b68:	beq	cd34 <bt_compidtostr@@Base+0x57e0>
    9b6c:	bhi	9bb4 <bt_compidtostr@@Base+0x2660>
    9b70:	cmp	r0, #848	; 0x350
    9b74:	beq	cd10 <bt_compidtostr@@Base+0x57bc>
    9b78:	bhi	9b98 <bt_compidtostr@@Base+0x2644>
    9b7c:	ldr	r3, [pc, #1860]	; a2c8 <bt_compidtostr@@Base+0x2d74>
    9b80:	cmp	r0, r3
    9b84:	beq	ccf8 <bt_compidtostr@@Base+0x57a4>
    9b88:	bhi	cd04 <bt_compidtostr@@Base+0x57b0>
    9b8c:	ldr	r0, [pc, #1848]	; a2cc <bt_compidtostr@@Base+0x2d78>
    9b90:	add	r0, pc, r0
    9b94:	bx	lr
    9b98:	ldr	r3, [pc, #1840]	; a2d0 <bt_compidtostr@@Base+0x2d7c>
    9b9c:	cmp	r0, r3
    9ba0:	beq	cd1c <bt_compidtostr@@Base+0x57c8>
    9ba4:	bhi	cd28 <bt_compidtostr@@Base+0x57d4>
    9ba8:	ldr	r0, [pc, #1828]	; a2d4 <bt_compidtostr@@Base+0x2d80>
    9bac:	add	r0, pc, r0
    9bb0:	bx	lr
    9bb4:	cmp	r0, #856	; 0x358
    9bb8:	beq	cd58 <bt_compidtostr@@Base+0x5804>
    9bbc:	bhi	9bdc <bt_compidtostr@@Base+0x2688>
    9bc0:	ldr	r3, [pc, #1808]	; a2d8 <bt_compidtostr@@Base+0x2d84>
    9bc4:	cmp	r0, r3
    9bc8:	beq	cd40 <bt_compidtostr@@Base+0x57ec>
    9bcc:	bhi	cd4c <bt_compidtostr@@Base+0x57f8>
    9bd0:	ldr	r0, [pc, #1796]	; a2dc <bt_compidtostr@@Base+0x2d88>
    9bd4:	add	r0, pc, r0
    9bd8:	bx	lr
    9bdc:	ldr	r3, [pc, #1788]	; a2e0 <bt_compidtostr@@Base+0x2d8c>
    9be0:	cmp	r0, r3
    9be4:	beq	cd64 <bt_compidtostr@@Base+0x5810>
    9be8:	bhi	cd70 <bt_compidtostr@@Base+0x581c>
    9bec:	ldr	r0, [pc, #1776]	; a2e4 <bt_compidtostr@@Base+0x2d90>
    9bf0:	add	r0, pc, r0
    9bf4:	bx	lr
    9bf8:	cmp	r0, #868	; 0x364
    9bfc:	beq	cdc4 <bt_compidtostr@@Base+0x5870>
    9c00:	bhi	9c48 <bt_compidtostr@@Base+0x26f4>
    9c04:	cmp	r0, #864	; 0x360
    9c08:	beq	cda0 <bt_compidtostr@@Base+0x584c>
    9c0c:	bhi	9c2c <bt_compidtostr@@Base+0x26d8>
    9c10:	ldr	r3, [pc, #1744]	; a2e8 <bt_compidtostr@@Base+0x2d94>
    9c14:	cmp	r0, r3
    9c18:	beq	cd88 <bt_compidtostr@@Base+0x5834>
    9c1c:	bhi	cd94 <bt_compidtostr@@Base+0x5840>
    9c20:	ldr	r0, [pc, #1732]	; a2ec <bt_compidtostr@@Base+0x2d98>
    9c24:	add	r0, pc, r0
    9c28:	bx	lr
    9c2c:	ldr	r3, [pc, #1724]	; a2f0 <bt_compidtostr@@Base+0x2d9c>
    9c30:	cmp	r0, r3
    9c34:	beq	cdac <bt_compidtostr@@Base+0x5858>
    9c38:	bhi	cdb8 <bt_compidtostr@@Base+0x5864>
    9c3c:	ldr	r0, [pc, #1712]	; a2f4 <bt_compidtostr@@Base+0x2da0>
    9c40:	add	r0, pc, r0
    9c44:	bx	lr
    9c48:	cmp	r0, #872	; 0x368
    9c4c:	beq	cde8 <bt_compidtostr@@Base+0x5894>
    9c50:	bhi	9c70 <bt_compidtostr@@Base+0x271c>
    9c54:	ldr	r3, [pc, #1692]	; a2f8 <bt_compidtostr@@Base+0x2da4>
    9c58:	cmp	r0, r3
    9c5c:	beq	cdd0 <bt_compidtostr@@Base+0x587c>
    9c60:	bhi	cddc <bt_compidtostr@@Base+0x5888>
    9c64:	ldr	r0, [pc, #1680]	; a2fc <bt_compidtostr@@Base+0x2da8>
    9c68:	add	r0, pc, r0
    9c6c:	bx	lr
    9c70:	ldr	r3, [pc, #1672]	; a300 <bt_compidtostr@@Base+0x2dac>
    9c74:	cmp	r0, r3
    9c78:	beq	cdf4 <bt_compidtostr@@Base+0x58a0>
    9c7c:	bhi	ce00 <bt_compidtostr@@Base+0x58ac>
    9c80:	ldr	r0, [pc, #1660]	; a304 <bt_compidtostr@@Base+0x2db0>
    9c84:	add	r0, pc, r0
    9c88:	bx	lr
    9c8c:	cmp	r0, #892	; 0x37c
    9c90:	beq	ce9c <bt_compidtostr@@Base+0x5948>
    9c94:	bhi	9d2c <bt_compidtostr@@Base+0x27d8>
    9c98:	cmp	r0, #884	; 0x374
    9c9c:	beq	ce54 <bt_compidtostr@@Base+0x5900>
    9ca0:	bhi	9ce8 <bt_compidtostr@@Base+0x2794>
    9ca4:	cmp	r0, #880	; 0x370
    9ca8:	beq	ce30 <bt_compidtostr@@Base+0x58dc>
    9cac:	bhi	9ccc <bt_compidtostr@@Base+0x2778>
    9cb0:	ldr	r3, [pc, #1616]	; a308 <bt_compidtostr@@Base+0x2db4>
    9cb4:	cmp	r0, r3
    9cb8:	beq	ce18 <bt_compidtostr@@Base+0x58c4>
    9cbc:	bhi	ce24 <bt_compidtostr@@Base+0x58d0>
    9cc0:	ldr	r0, [pc, #1604]	; a30c <bt_compidtostr@@Base+0x2db8>
    9cc4:	add	r0, pc, r0
    9cc8:	bx	lr
    9ccc:	ldr	r3, [pc, #1596]	; a310 <bt_compidtostr@@Base+0x2dbc>
    9cd0:	cmp	r0, r3
    9cd4:	beq	ce3c <bt_compidtostr@@Base+0x58e8>
    9cd8:	bhi	ce48 <bt_compidtostr@@Base+0x58f4>
    9cdc:	ldr	r0, [pc, #1584]	; a314 <bt_compidtostr@@Base+0x2dc0>
    9ce0:	add	r0, pc, r0
    9ce4:	bx	lr
    9ce8:	cmp	r0, #888	; 0x378
    9cec:	beq	ce78 <bt_compidtostr@@Base+0x5924>
    9cf0:	bhi	9d10 <bt_compidtostr@@Base+0x27bc>
    9cf4:	ldr	r3, [pc, #1564]	; a318 <bt_compidtostr@@Base+0x2dc4>
    9cf8:	cmp	r0, r3
    9cfc:	beq	ce60 <bt_compidtostr@@Base+0x590c>
    9d00:	bhi	ce6c <bt_compidtostr@@Base+0x5918>
    9d04:	ldr	r0, [pc, #1552]	; a31c <bt_compidtostr@@Base+0x2dc8>
    9d08:	add	r0, pc, r0
    9d0c:	bx	lr
    9d10:	ldr	r3, [pc, #1544]	; a320 <bt_compidtostr@@Base+0x2dcc>
    9d14:	cmp	r0, r3
    9d18:	beq	ce84 <bt_compidtostr@@Base+0x5930>
    9d1c:	bhi	ce90 <bt_compidtostr@@Base+0x593c>
    9d20:	ldr	r0, [pc, #1532]	; a324 <bt_compidtostr@@Base+0x2dd0>
    9d24:	add	r0, pc, r0
    9d28:	bx	lr
    9d2c:	cmp	r0, #900	; 0x384
    9d30:	beq	cee4 <bt_compidtostr@@Base+0x5990>
    9d34:	bhi	9d7c <bt_compidtostr@@Base+0x2828>
    9d38:	cmp	r0, #896	; 0x380
    9d3c:	beq	cec0 <bt_compidtostr@@Base+0x596c>
    9d40:	bhi	9d60 <bt_compidtostr@@Base+0x280c>
    9d44:	ldr	r3, [pc, #1500]	; a328 <bt_compidtostr@@Base+0x2dd4>
    9d48:	cmp	r0, r3
    9d4c:	beq	cea8 <bt_compidtostr@@Base+0x5954>
    9d50:	bhi	ceb4 <bt_compidtostr@@Base+0x5960>
    9d54:	ldr	r0, [pc, #1488]	; a32c <bt_compidtostr@@Base+0x2dd8>
    9d58:	add	r0, pc, r0
    9d5c:	bx	lr
    9d60:	ldr	r3, [pc, #1480]	; a330 <bt_compidtostr@@Base+0x2ddc>
    9d64:	cmp	r0, r3
    9d68:	beq	cecc <bt_compidtostr@@Base+0x5978>
    9d6c:	bhi	ced8 <bt_compidtostr@@Base+0x5984>
    9d70:	ldr	r0, [pc, #1468]	; a334 <bt_compidtostr@@Base+0x2de0>
    9d74:	add	r0, pc, r0
    9d78:	bx	lr
    9d7c:	cmp	r0, #904	; 0x388
    9d80:	beq	cf08 <bt_compidtostr@@Base+0x59b4>
    9d84:	bhi	9da4 <bt_compidtostr@@Base+0x2850>
    9d88:	ldr	r3, [pc, #1448]	; a338 <bt_compidtostr@@Base+0x2de4>
    9d8c:	cmp	r0, r3
    9d90:	beq	cef0 <bt_compidtostr@@Base+0x599c>
    9d94:	bhi	cefc <bt_compidtostr@@Base+0x59a8>
    9d98:	ldr	r0, [pc, #1436]	; a33c <bt_compidtostr@@Base+0x2de8>
    9d9c:	add	r0, pc, r0
    9da0:	bx	lr
    9da4:	ldr	r3, [pc, #1428]	; a340 <bt_compidtostr@@Base+0x2dec>
    9da8:	cmp	r0, r3
    9dac:	beq	cf20 <bt_compidtostr@@Base+0x59cc>
    9db0:	bcc	cf14 <bt_compidtostr@@Base+0x59c0>
    9db4:	add	r3, r3, #1
    9db8:	cmp	r0, r3
    9dbc:	beq	cf2c <bt_compidtostr@@Base+0x59d8>
    9dc0:	cmp	r0, #908	; 0x38c
    9dc4:	bne	77c4 <bt_compidtostr@@Base+0x270>
    9dc8:	ldr	r0, [pc, #1396]	; a344 <bt_compidtostr@@Base+0x2df0>
    9dcc:	add	r0, pc, r0
    9dd0:	bx	lr
    9dd4:	ldr	r3, [pc, #1388]	; a348 <bt_compidtostr@@Base+0x2df4>
    9dd8:	cmp	r0, r3
    9ddc:	beq	d184 <bt_compidtostr@@Base+0x5c30>
    9de0:	bhi	a0a8 <bt_compidtostr@@Base+0x2b54>
    9de4:	sub	r3, r3, #33	; 0x21
    9de8:	cmp	r0, r3
    9dec:	beq	d058 <bt_compidtostr@@Base+0x5b04>
    9df0:	bhi	9f44 <bt_compidtostr@@Base+0x29f0>
    9df4:	sub	r3, r3, #16
    9df8:	cmp	r0, r3
    9dfc:	beq	cfc8 <bt_compidtostr@@Base+0x5a74>
    9e00:	bhi	9ea4 <bt_compidtostr@@Base+0x2950>
    9e04:	sub	r3, r3, #8
    9e08:	cmp	r0, r3
    9e0c:	beq	cf80 <bt_compidtostr@@Base+0x5a2c>
    9e10:	bhi	9e5c <bt_compidtostr@@Base+0x2908>
    9e14:	sub	r3, r3, #4
    9e18:	cmp	r0, r3
    9e1c:	beq	cf5c <bt_compidtostr@@Base+0x5a08>
    9e20:	bhi	9e40 <bt_compidtostr@@Base+0x28ec>
    9e24:	sub	r3, r3, #2
    9e28:	cmp	r0, r3
    9e2c:	beq	cf44 <bt_compidtostr@@Base+0x59f0>
    9e30:	bhi	cf50 <bt_compidtostr@@Base+0x59fc>
    9e34:	ldr	r0, [pc, #1296]	; a34c <bt_compidtostr@@Base+0x2df8>
    9e38:	add	r0, pc, r0
    9e3c:	bx	lr
    9e40:	ldr	r3, [pc, #1288]	; a350 <bt_compidtostr@@Base+0x2dfc>
    9e44:	cmp	r0, r3
    9e48:	beq	cf68 <bt_compidtostr@@Base+0x5a14>
    9e4c:	bhi	cf74 <bt_compidtostr@@Base+0x5a20>
    9e50:	ldr	r0, [pc, #1276]	; a354 <bt_compidtostr@@Base+0x2e00>
    9e54:	add	r0, pc, r0
    9e58:	bx	lr
    9e5c:	ldr	r3, [pc, #1268]	; a358 <bt_compidtostr@@Base+0x2e04>
    9e60:	cmp	r0, r3
    9e64:	beq	cfa4 <bt_compidtostr@@Base+0x5a50>
    9e68:	bhi	9e88 <bt_compidtostr@@Base+0x2934>
    9e6c:	sub	r3, r3, #2
    9e70:	cmp	r0, r3
    9e74:	beq	cf8c <bt_compidtostr@@Base+0x5a38>
    9e78:	bhi	cf98 <bt_compidtostr@@Base+0x5a44>
    9e7c:	ldr	r0, [pc, #1240]	; a35c <bt_compidtostr@@Base+0x2e08>
    9e80:	add	r0, pc, r0
    9e84:	bx	lr
    9e88:	ldr	r3, [pc, #1232]	; a360 <bt_compidtostr@@Base+0x2e0c>
    9e8c:	cmp	r0, r3
    9e90:	beq	cfb0 <bt_compidtostr@@Base+0x5a5c>
    9e94:	bhi	cfbc <bt_compidtostr@@Base+0x5a68>
    9e98:	ldr	r0, [pc, #1220]	; a364 <bt_compidtostr@@Base+0x2e10>
    9e9c:	add	r0, pc, r0
    9ea0:	bx	lr
    9ea4:	ldr	r3, [pc, #1212]	; a368 <bt_compidtostr@@Base+0x2e14>
    9ea8:	cmp	r0, r3
    9eac:	beq	d010 <bt_compidtostr@@Base+0x5abc>
    9eb0:	bhi	9efc <bt_compidtostr@@Base+0x29a8>
    9eb4:	sub	r3, r3, #4
    9eb8:	cmp	r0, r3
    9ebc:	beq	cfec <bt_compidtostr@@Base+0x5a98>
    9ec0:	bhi	9ee0 <bt_compidtostr@@Base+0x298c>
    9ec4:	sub	r3, r3, #2
    9ec8:	cmp	r0, r3
    9ecc:	beq	cfd4 <bt_compidtostr@@Base+0x5a80>
    9ed0:	bhi	cfe0 <bt_compidtostr@@Base+0x5a8c>
    9ed4:	ldr	r0, [pc, #1168]	; a36c <bt_compidtostr@@Base+0x2e18>
    9ed8:	add	r0, pc, r0
    9edc:	bx	lr
    9ee0:	ldr	r3, [pc, #1160]	; a370 <bt_compidtostr@@Base+0x2e1c>
    9ee4:	cmp	r0, r3
    9ee8:	beq	cff8 <bt_compidtostr@@Base+0x5aa4>
    9eec:	bhi	d004 <bt_compidtostr@@Base+0x5ab0>
    9ef0:	ldr	r0, [pc, #1148]	; a374 <bt_compidtostr@@Base+0x2e20>
    9ef4:	add	r0, pc, r0
    9ef8:	bx	lr
    9efc:	ldr	r3, [pc, #1140]	; a378 <bt_compidtostr@@Base+0x2e24>
    9f00:	cmp	r0, r3
    9f04:	beq	d034 <bt_compidtostr@@Base+0x5ae0>
    9f08:	bhi	9f28 <bt_compidtostr@@Base+0x29d4>
    9f0c:	sub	r3, r3, #2
    9f10:	cmp	r0, r3
    9f14:	beq	d01c <bt_compidtostr@@Base+0x5ac8>
    9f18:	bhi	d028 <bt_compidtostr@@Base+0x5ad4>
    9f1c:	ldr	r0, [pc, #1112]	; a37c <bt_compidtostr@@Base+0x2e28>
    9f20:	add	r0, pc, r0
    9f24:	bx	lr
    9f28:	ldr	r3, [pc, #1104]	; a380 <bt_compidtostr@@Base+0x2e2c>
    9f2c:	cmp	r0, r3
    9f30:	beq	d040 <bt_compidtostr@@Base+0x5aec>
    9f34:	bhi	d04c <bt_compidtostr@@Base+0x5af8>
    9f38:	ldr	r0, [pc, #1092]	; a384 <bt_compidtostr@@Base+0x2e30>
    9f3c:	add	r0, pc, r0
    9f40:	bx	lr
    9f44:	ldr	r3, [pc, #1084]	; a388 <bt_compidtostr@@Base+0x2e34>
    9f48:	cmp	r0, r3
    9f4c:	beq	d0e8 <bt_compidtostr@@Base+0x5b94>
    9f50:	bhi	9ff4 <bt_compidtostr@@Base+0x2aa0>
    9f54:	sub	r3, r3, #8
    9f58:	cmp	r0, r3
    9f5c:	beq	d0a0 <bt_compidtostr@@Base+0x5b4c>
    9f60:	bhi	9fac <bt_compidtostr@@Base+0x2a58>
    9f64:	sub	r3, r3, #4
    9f68:	cmp	r0, r3
    9f6c:	beq	d07c <bt_compidtostr@@Base+0x5b28>
    9f70:	bhi	9f90 <bt_compidtostr@@Base+0x2a3c>
    9f74:	sub	r3, r3, #2
    9f78:	cmp	r0, r3
    9f7c:	beq	d064 <bt_compidtostr@@Base+0x5b10>
    9f80:	bhi	d070 <bt_compidtostr@@Base+0x5b1c>
    9f84:	ldr	r0, [pc, #1024]	; a38c <bt_compidtostr@@Base+0x2e38>
    9f88:	add	r0, pc, r0
    9f8c:	bx	lr
    9f90:	ldr	r3, [pc, #1016]	; a390 <bt_compidtostr@@Base+0x2e3c>
    9f94:	cmp	r0, r3
    9f98:	beq	d088 <bt_compidtostr@@Base+0x5b34>
    9f9c:	bhi	d094 <bt_compidtostr@@Base+0x5b40>
    9fa0:	ldr	r0, [pc, #1004]	; a394 <bt_compidtostr@@Base+0x2e40>
    9fa4:	add	r0, pc, r0
    9fa8:	bx	lr
    9fac:	ldr	r3, [pc, #996]	; a398 <bt_compidtostr@@Base+0x2e44>
    9fb0:	cmp	r0, r3
    9fb4:	beq	d0c4 <bt_compidtostr@@Base+0x5b70>
    9fb8:	bhi	9fd8 <bt_compidtostr@@Base+0x2a84>
    9fbc:	sub	r3, r3, #2
    9fc0:	cmp	r0, r3
    9fc4:	beq	d0ac <bt_compidtostr@@Base+0x5b58>
    9fc8:	bhi	d0b8 <bt_compidtostr@@Base+0x5b64>
    9fcc:	ldr	r0, [pc, #968]	; a39c <bt_compidtostr@@Base+0x2e48>
    9fd0:	add	r0, pc, r0
    9fd4:	bx	lr
    9fd8:	ldr	r3, [pc, #960]	; a3a0 <bt_compidtostr@@Base+0x2e4c>
    9fdc:	cmp	r0, r3
    9fe0:	beq	d0d0 <bt_compidtostr@@Base+0x5b7c>
    9fe4:	bhi	d0dc <bt_compidtostr@@Base+0x5b88>
    9fe8:	ldr	r0, [pc, #948]	; a3a4 <bt_compidtostr@@Base+0x2e50>
    9fec:	add	r0, pc, r0
    9ff0:	bx	lr
    9ff4:	ldr	r3, [pc, #940]	; a3a8 <bt_compidtostr@@Base+0x2e54>
    9ff8:	cmp	r0, r3
    9ffc:	beq	d130 <bt_compidtostr@@Base+0x5bdc>
    a000:	bhi	a04c <bt_compidtostr@@Base+0x2af8>
    a004:	sub	r3, r3, #4
    a008:	cmp	r0, r3
    a00c:	beq	d10c <bt_compidtostr@@Base+0x5bb8>
    a010:	bhi	a030 <bt_compidtostr@@Base+0x2adc>
    a014:	sub	r3, r3, #2
    a018:	cmp	r0, r3
    a01c:	beq	d0f4 <bt_compidtostr@@Base+0x5ba0>
    a020:	bhi	d100 <bt_compidtostr@@Base+0x5bac>
    a024:	ldr	r0, [pc, #896]	; a3ac <bt_compidtostr@@Base+0x2e58>
    a028:	add	r0, pc, r0
    a02c:	bx	lr
    a030:	ldr	r3, [pc, #888]	; a3b0 <bt_compidtostr@@Base+0x2e5c>
    a034:	cmp	r0, r3
    a038:	beq	d118 <bt_compidtostr@@Base+0x5bc4>
    a03c:	bhi	d124 <bt_compidtostr@@Base+0x5bd0>
    a040:	ldr	r0, [pc, #876]	; a3b4 <bt_compidtostr@@Base+0x2e60>
    a044:	add	r0, pc, r0
    a048:	bx	lr
    a04c:	ldr	r3, [pc, #868]	; a3b8 <bt_compidtostr@@Base+0x2e64>
    a050:	cmp	r0, r3
    a054:	beq	d154 <bt_compidtostr@@Base+0x5c00>
    a058:	bhi	a078 <bt_compidtostr@@Base+0x2b24>
    a05c:	sub	r3, r3, #2
    a060:	cmp	r0, r3
    a064:	beq	d13c <bt_compidtostr@@Base+0x5be8>
    a068:	bhi	d148 <bt_compidtostr@@Base+0x5bf4>
    a06c:	ldr	r0, [pc, #840]	; a3bc <bt_compidtostr@@Base+0x2e68>
    a070:	add	r0, pc, r0
    a074:	bx	lr
    a078:	ldr	r3, [pc, #832]	; a3c0 <bt_compidtostr@@Base+0x2e6c>
    a07c:	cmp	r0, r3
    a080:	beq	d16c <bt_compidtostr@@Base+0x5c18>
    a084:	bcc	d160 <bt_compidtostr@@Base+0x5c0c>
    a088:	cmp	r0, #972	; 0x3cc
    a08c:	beq	d178 <bt_compidtostr@@Base+0x5c24>
    a090:	add	r3, r3, #2
    a094:	cmp	r0, r3
    a098:	bne	77c4 <bt_compidtostr@@Base+0x270>
    a09c:	ldr	r0, [pc, #800]	; a3c4 <bt_compidtostr@@Base+0x2e70>
    a0a0:	add	r0, pc, r0
    a0a4:	bx	lr
    a0a8:	ldr	r3, [pc, #792]	; a3c8 <bt_compidtostr@@Base+0x2e74>
    a0ac:	cmp	r0, r3
    a0b0:	beq	d2a4 <bt_compidtostr@@Base+0x5d50>
    a0b4:	bhi	a758 <bt_compidtostr@@Base+0x3204>
    a0b8:	sub	r3, r3, #16
    a0bc:	cmp	r0, r3
    a0c0:	beq	d214 <bt_compidtostr@@Base+0x5cc0>
    a0c4:	bhi	a158 <bt_compidtostr@@Base+0x2c04>
    a0c8:	sub	r3, r3, #8
    a0cc:	cmp	r0, r3
    a0d0:	beq	d1cc <bt_compidtostr@@Base+0x5c78>
    a0d4:	bhi	a118 <bt_compidtostr@@Base+0x2bc4>
    a0d8:	sub	r3, r3, #4
    a0dc:	cmp	r0, r3
    a0e0:	beq	d1a8 <bt_compidtostr@@Base+0x5c54>
    a0e4:	bhi	a100 <bt_compidtostr@@Base+0x2bac>
    a0e8:	cmp	r0, #976	; 0x3d0
    a0ec:	beq	d190 <bt_compidtostr@@Base+0x5c3c>
    a0f0:	bhi	d19c <bt_compidtostr@@Base+0x5c48>
    a0f4:	ldr	r0, [pc, #720]	; a3cc <bt_compidtostr@@Base+0x2e78>
    a0f8:	add	r0, pc, r0
    a0fc:	bx	lr
    a100:	cmp	r0, #980	; 0x3d4
    a104:	beq	d1b4 <bt_compidtostr@@Base+0x5c60>
    a108:	bhi	d1c0 <bt_compidtostr@@Base+0x5c6c>
    a10c:	ldr	r0, [pc, #700]	; a3d0 <bt_compidtostr@@Base+0x2e7c>
    a110:	add	r0, pc, r0
    a114:	bx	lr
    a118:	ldr	r3, [pc, #692]	; a3d4 <bt_compidtostr@@Base+0x2e80>
    a11c:	cmp	r0, r3
    a120:	beq	d1f0 <bt_compidtostr@@Base+0x5c9c>
    a124:	bhi	a140 <bt_compidtostr@@Base+0x2bec>
    a128:	cmp	r0, #984	; 0x3d8
    a12c:	beq	d1d8 <bt_compidtostr@@Base+0x5c84>
    a130:	bhi	d1e4 <bt_compidtostr@@Base+0x5c90>
    a134:	ldr	r0, [pc, #668]	; a3d8 <bt_compidtostr@@Base+0x2e84>
    a138:	add	r0, pc, r0
    a13c:	bx	lr
    a140:	cmp	r0, #988	; 0x3dc
    a144:	beq	d1fc <bt_compidtostr@@Base+0x5ca8>
    a148:	bhi	d208 <bt_compidtostr@@Base+0x5cb4>
    a14c:	ldr	r0, [pc, #648]	; a3dc <bt_compidtostr@@Base+0x2e88>
    a150:	add	r0, pc, r0
    a154:	bx	lr
    a158:	ldr	r3, [pc, #640]	; a3e0 <bt_compidtostr@@Base+0x2e8c>
    a15c:	cmp	r0, r3
    a160:	beq	d25c <bt_compidtostr@@Base+0x5d08>
    a164:	bhi	a718 <bt_compidtostr@@Base+0x31c4>
    a168:	sub	r3, r3, #4
    a16c:	cmp	r0, r3
    a170:	beq	d238 <bt_compidtostr@@Base+0x5ce4>
    a174:	bhi	a700 <bt_compidtostr@@Base+0x31ac>
    a178:	cmp	r0, #992	; 0x3e0
    a17c:	beq	d220 <bt_compidtostr@@Base+0x5ccc>
    a180:	bhi	d22c <bt_compidtostr@@Base+0x5cd8>
    a184:	ldr	r0, [pc, #600]	; a3e4 <bt_compidtostr@@Base+0x2e90>
    a188:	add	r0, pc, r0
    a18c:	bx	lr
    a190:	strdeq	ip, [r0], -r6
    a194:	andeq	r0, r0, r5, lsr #5
    a198:	andeq	ip, r0, r3, lsr #10
    a19c:	andeq	r0, r0, r7, lsr #5
    a1a0:	andeq	ip, r0, r6, ror #10
    a1a4:			; <UNDEFINED> instruction: 0x000002b9
    a1a8:	andeq	ip, r0, r0, ror #10
    a1ac:	andeq	r0, r0, pc, lsr #5
    a1b0:	andeq	ip, r0, sp, lsl #11
    a1b4:			; <UNDEFINED> instruction: 0x000002b5
    a1b8:	andeq	ip, r0, fp, lsr #11
    a1bc:			; <UNDEFINED> instruction: 0x000002b7
    a1c0:	ldrdeq	ip, [r0], -r7
    a1c4:	andeq	r0, r0, r1, asr #5
    a1c8:	andeq	ip, r0, fp, ror #11
    a1cc:			; <UNDEFINED> instruction: 0x000002bf
    a1d0:	andeq	ip, r0, pc, lsl #12
    a1d4:	andeq	r0, r0, r5, asr #5
    a1d8:	andeq	ip, r0, sl, lsr r6
    a1dc:	andeq	r0, r0, r7, asr #5
    a1e0:	andeq	ip, r0, sl, ror #13
    a1e4:	andeq	r0, r0, sl, ror #5
    a1e8:			; <UNDEFINED> instruction: 0x0000c6b3
    a1ec:	andeq	ip, r0, r9, lsl #14
    a1f0:	ldrdeq	r0, [r0], -r6
    a1f4:	andeq	ip, r0, r3, lsl #14
    a1f8:	andeq	ip, r0, lr, lsr #14
    a1fc:	andeq	r0, r0, r2, ror #5
    a200:	andeq	ip, r0, fp, lsr r7
    a204:	muleq	r0, r1, r7
    a208:	andeq	r0, r0, r6, ror #5
    a20c:			; <UNDEFINED> instruction: 0x0000c7b6
    a210:	andeq	ip, r0, r2, lsl r8
    a214:	strdeq	r0, [r0], -sl
    a218:	andeq	ip, r0, r8, lsr #16
    a21c:	andeq	ip, r0, pc, asr r8
    a220:	strdeq	r0, [r0], -r6
    a224:	andeq	ip, r0, sp, ror r8
    a228:	andeq	ip, r0, r3, lsr #17
    a22c:	andeq	r0, r0, r2, lsl #6
    a230:	andeq	ip, r0, r1, asr #17
    a234:	andeq	ip, r0, sl, lsr #18
    a238:	andeq	r0, r0, r6, lsl #6
    a23c:	andeq	ip, r0, r0, asr r9
    a240:	andeq	r0, r0, r9, lsl #6
    a244:	muleq	r0, r0, r9
    a248:	andeq	r0, r0, sp, lsl #7
    a24c:	andeq	ip, r0, lr, lsr r9
    a250:	andeq	r0, r0, r1, lsl r3
    a254:	andeq	ip, r0, r3, asr r9
    a258:	andeq	r0, r0, r7, lsl r3
    a25c:	andeq	ip, r0, sp, ror #18
    a260:	andeq	r0, r0, r9, lsl r3
    a264:			; <UNDEFINED> instruction: 0x0000c9b3
    a268:	andeq	r0, r0, r3, lsr #6
    a26c:			; <UNDEFINED> instruction: 0x0000c9bb
    a270:	andeq	r0, r0, r1, lsr #6
    a274:	ldrdeq	ip, [r0], -lr
    a278:	andeq	r0, r0, r7, lsr #6
    a27c:	andeq	ip, r0, r1, lsl #20
    a280:	andeq	r0, r0, r9, lsr #6
    a284:	andeq	ip, r0, fp, lsr sl
    a288:	andeq	r0, r0, fp, lsr r3
    a28c:	andeq	ip, r0, r5, lsr #20
    a290:	andeq	r0, r0, r1, lsr r3
    a294:	andeq	ip, r0, r4, asr #20
    a298:	andeq	r0, r0, r7, lsr r3
    a29c:	andeq	ip, r0, sl, ror #20
    a2a0:	andeq	r0, r0, r9, lsr r3
    a2a4:	andeq	ip, r0, r3, lsl #21
    a2a8:	andeq	r0, r0, r3, asr #6
    a2ac:	andeq	ip, r0, sl, ror sl
    a2b0:	andeq	r0, r0, r1, asr #6
    a2b4:	andeq	ip, r0, r6, lsr #21
    a2b8:	andeq	r0, r0, r7, asr #6
    a2bc:	ldrdeq	ip, [r0], -r5
    a2c0:	andeq	r0, r0, r9, asr #6
    a2c4:	andeq	ip, r0, r3, lsl #22
    a2c8:	andeq	r0, r0, lr, asr #6
    a2cc:	ldrdeq	ip, [r0], -sl
    a2d0:	andeq	r0, r0, r2, asr r3
    a2d4:	andeq	ip, r0, r9, lsl fp
    a2d8:	andeq	r0, r0, r6, asr r3
    a2dc:	andeq	ip, r0, lr, asr #22
    a2e0:	andeq	r0, r0, sl, asr r3
    a2e4:	andeq	ip, r0, ip, ror fp
    a2e8:	andeq	r0, r0, lr, asr r3
    a2ec:	muleq	r0, sl, fp
    a2f0:	andeq	r0, r0, r2, ror #6
    a2f4:			; <UNDEFINED> instruction: 0x0000cbb0
    a2f8:	andeq	r0, r0, r6, ror #6
    a2fc:	andeq	ip, r0, r9, asr #23
    a300:	andeq	r0, r0, sl, ror #6
    a304:	andeq	ip, r0, fp, lsl #24
    a308:	andeq	r0, r0, lr, ror #6
    a30c:	andeq	ip, r0, r5, lsl #24
    a310:	andeq	r0, r0, r2, ror r3
    a314:	andeq	ip, r0, r6, lsr #24
    a318:	andeq	r0, r0, r6, ror r3
    a31c:	andeq	ip, r0, r7, lsr ip
    a320:	andeq	r0, r0, sl, ror r3
    a324:	andeq	ip, r0, r6, ror #24
    a328:	andeq	r0, r0, lr, ror r3
    a32c:	muleq	r0, r0, ip
    a330:	andeq	r0, r0, r2, lsl #7
    a334:			; <UNDEFINED> instruction: 0x0000ccb2
    a338:	andeq	r0, r0, r6, lsl #7
    a33c:	ldrdeq	ip, [r0], -r9
    a340:	andeq	r0, r0, sl, lsl #7
    a344:	andeq	ip, r0, pc, lsr sp
    a348:	andeq	r0, r0, lr, asr #7
    a34c:	andeq	ip, r0, sl, ror #25
    a350:	muleq	r0, r3, r3
    a354:	andeq	ip, r0, r9, lsl #26
    a358:	muleq	r0, r9, r3
    a35c:	andeq	ip, r0, r4, lsl sp
    a360:	muleq	r0, fp, r3
    a364:	andeq	ip, r0, r6, lsr sp
    a368:	andeq	r0, r0, r5, lsr #7
    a36c:	andeq	ip, r0, r5, asr sp
    a370:	andeq	r0, r0, r3, lsr #7
    a374:	andeq	ip, r0, r4, lsl #27
    a378:	andeq	r0, r0, r9, lsr #7
    a37c:			; <UNDEFINED> instruction: 0x0000cdbf
    a380:	andeq	r0, r0, fp, lsr #7
    a384:	ldrdeq	ip, [r0], -r4
    a388:			; <UNDEFINED> instruction: 0x000003bd
    a38c:	andeq	ip, r0, r2, asr #27
    a390:			; <UNDEFINED> instruction: 0x000003b3
    a394:	strdeq	ip, [r0], -lr
    a398:			; <UNDEFINED> instruction: 0x000003b9
    a39c:	andeq	ip, r0, ip, lsr #28
    a3a0:			; <UNDEFINED> instruction: 0x000003bb
    a3a4:	andeq	ip, r0, r9, asr #28
    a3a8:	andeq	r0, r0, r5, asr #7
    a3ac:	andeq	ip, r0, r0, ror #28
    a3b0:	andeq	r0, r0, r3, asr #7
    a3b4:	muleq	r0, sl, lr
    a3b8:	andeq	r0, r0, r9, asr #7
    a3bc:			; <UNDEFINED> instruction: 0x0000cebf
    a3c0:	andeq	r0, r0, fp, asr #7
    a3c4:	andeq	ip, r0, lr, lsl pc
    a3c8:	andeq	r0, r0, lr, ror #7
    a3cc:	andeq	ip, r0, sp, ror #29
    a3d0:	andeq	ip, r0, r7, lsl pc
    a3d4:	ldrdeq	r0, [r0], -sl
    a3d8:	andeq	ip, r0, fp, lsr pc
    a3dc:	andeq	ip, r0, sl, asr pc
    a3e0:	andeq	r0, r0, r6, ror #7
    a3e4:	andeq	ip, r0, r8, ror #30
    a3e8:	andeq	ip, r0, r7, asr #20
    a3ec:	andeq	r0, r0, sl, ror #7
    a3f0:	andeq	ip, r0, r7, asr sl
    a3f4:	andeq	ip, r0, sp, lsr #21
    a3f8:	strdeq	r0, [r0], -lr
    a3fc:	andeq	ip, r0, r8, lsr #21
    a400:	ldrdeq	ip, [r0], -r2
    a404:	strdeq	r0, [r0], -sl
    a408:	andeq	ip, r0, lr, ror #21
    a40c:	andeq	ip, r0, r9, lsr #22
    a410:	andeq	r0, r0, r6, lsl #8
    a414:	andeq	ip, r0, pc, lsr #22
    a418:	andeq	r0, r0, r4, lsl #8
    a41c:	andeq	ip, r0, r4, ror fp
    a420:	andeq	r0, r0, sl, lsl #8
    a424:	muleq	r0, r1, fp
    a428:	andeq	r0, r0, ip, lsl #8
    a42c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    a430:	andeq	ip, r0, fp, asr #23
    a434:			; <UNDEFINED> instruction: 0x00007dbf
    a438:	andeq	r7, r0, r7, asr #27
    a43c:	andeq	r7, r0, r7, asr #27
    a440:	ldrdeq	r7, [r0], -r3
    a444:	andeq	r7, r0, ip, asr #27
    a448:	andeq	r7, r0, sl, asr #27
    a44c:	andeq	r7, r0, lr, asr #27
    a450:	ldrdeq	r7, [r0], -fp
    a454:	andeq	r7, r0, r7, ror #27
    a458:	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    a45c:	andeq	r7, r0, r2, lsl #28
    a460:	andeq	r7, r0, r7, lsr #28
    a464:	andeq	r7, r0, r4, asr #28
    a468:	andeq	r7, r0, r5, asr #28
    a46c:	andeq	r7, r0, r5, asr #28
    a470:	andeq	r7, r0, fp, ror #28
    a474:	andeq	r7, r0, pc, ror #28
    a478:	andeq	r7, r0, r6, ror lr
    a47c:	andeq	r7, r0, r4, lsl #29
    a480:	muleq	r0, r6, lr
    a484:	muleq	r0, r9, lr
    a488:			; <UNDEFINED> instruction: 0x00007ebd
    a48c:			; <UNDEFINED> instruction: 0x00007eba
    a490:			; <UNDEFINED> instruction: 0x00007eb7
    a494:	andeq	r7, r0, r6, asr #29
    a498:	andeq	r7, r0, r7, asr #29
    a49c:	andeq	r7, r0, fp, asr #29
    a4a0:	andeq	r7, r0, r5, ror #29
    a4a4:	andeq	r7, r0, lr, lsl #30
    a4a8:	andeq	r7, r0, r1, lsl pc
    a4ac:	andeq	r7, r0, r6, lsr #30
    a4b0:	andeq	r7, r0, r6, lsr #30
    a4b4:	andeq	r7, r0, r4, lsr pc
    a4b8:	andeq	r7, r0, r0, asr pc
    a4bc:	andeq	r7, r0, r6, asr pc
    a4c0:	andeq	r7, r0, sl, asr pc
    a4c4:	andeq	r7, r0, r9, ror pc
    a4c8:	andeq	r7, r0, ip, ror pc
    a4cc:	andeq	r7, r0, fp, lsl #31
    a4d0:			; <UNDEFINED> instruction: 0x00007fb8
    a4d4:	andeq	r7, r0, r5, asr #31
    a4d8:	ldrdeq	r7, [r0], -r9
    a4dc:	andeq	r7, r0, r8, ror #31
    a4e0:	strdeq	r7, [r0], -sp
    a4e4:	andeq	r8, r0, sl, lsl r0
    a4e8:	andeq	r8, r0, r1, lsr #32
    a4ec:	andeq	r8, r0, r6, asr #32
    a4f0:	andeq	r8, r0, sl, asr #32
    a4f4:	andeq	r8, r0, r6, asr r0
    a4f8:	andeq	r8, r0, lr, asr r0
    a4fc:	muleq	r0, r3, r0
    a500:	andeq	r8, r0, sl, lsr #1
    a504:	andeq	r8, r0, r8, lsr #1
    a508:	andeq	r8, r0, r7, asr #1
    a50c:	andeq	r8, r0, sl, asr #1
    a510:	andeq	r8, r0, r7, asr #1
    a514:	andeq	r8, r0, sl, ror #1
    a518:	strdeq	r8, [r0], -r7
    a51c:	andeq	r8, r0, sl, lsl #2
    a520:	andeq	r8, r0, r8, lsr #2
    a524:	andeq	r8, r0, pc, lsr #2
    a528:	andeq	r8, r0, r6, lsr r1
    a52c:	andeq	r8, r0, r3, asr r1
    a530:	andeq	r8, r0, r7, asr r1
    a534:	andeq	r8, r0, r8, asr r1
    a538:	andeq	r8, r0, r1, ror r1
    a53c:	andeq	r8, r0, r9, lsl #3
    a540:	andeq	r8, r0, r3, lsr #3
    a544:			; <UNDEFINED> instruction: 0x000081bc
    a548:	andeq	r8, r0, ip, asr #3
    a54c:	ldrdeq	r8, [r0], -lr
    a550:	andeq	r8, r0, pc, lsl #4
    a554:	andeq	r8, r0, r8, lsl r2
    a558:	andeq	r8, r0, ip, lsl r2
    a55c:	andeq	r8, r0, r8, lsr r2
    a560:	andeq	r8, r0, fp, lsr r2
    a564:	andeq	r8, r0, lr, lsr r2
    a568:	andeq	r8, r0, r5, ror #4
    a56c:	andeq	r8, r0, r7, ror #4
    a570:	andeq	r8, r0, r9, ror #4
    a574:	andeq	r8, r0, r2, lsl #5
    a578:	andeq	r8, r0, r4, lsl #5
    a57c:	andeq	r8, r0, r9, lsl #5
    a580:	andeq	r8, r0, fp, lsr #5
    a584:	andeq	r8, r0, r0, asr #5
    a588:			; <UNDEFINED> instruction: 0x000082bd
    a58c:	andeq	r8, r0, sp, asr #5
    a590:	andeq	r8, r0, fp, ror #5
    a594:	strdeq	r8, [r0], -r0
    a598:	andeq	r8, r0, fp, lsl #6
    a59c:	andeq	r8, r0, r8, lsl r3
    a5a0:	andeq	r8, r0, pc, lsl r3
    a5a4:	andeq	r8, r0, sl, lsr #6
    a5a8:	andeq	r8, r0, r8, lsr r3
    a5ac:	andeq	r8, r0, r1, asr #6
    a5b0:	andeq	r8, r0, r5, asr #6
    a5b4:	andeq	r8, r0, r2, asr r3
    a5b8:	andeq	r8, r0, r8, ror #6
    a5bc:	andeq	r8, r0, ip, lsl #7
    a5c0:	andeq	r8, r0, fp, lsr #7
    a5c4:			; <UNDEFINED> instruction: 0x000083b9
    a5c8:	andeq	r8, r0, r1, asr #7
    a5cc:	ldrdeq	r8, [r0], -r1
    a5d0:	andeq	r8, r0, r0, ror #7
    a5d4:	ldrdeq	r8, [r0], -ip
    a5d8:	andeq	r8, r0, r7, ror #7
    a5dc:	strdeq	r8, [r0], -fp
    a5e0:	andeq	r8, r0, lr, lsr r4
    a5e4:	andeq	r8, r0, pc, asr #8
    a5e8:	andeq	r8, r0, lr, ror r4
    a5ec:	andeq	r8, r0, fp, lsl #9
    a5f0:			; <UNDEFINED> instruction: 0x000084b9
    a5f4:	andeq	r8, r0, r9, asr #9
    a5f8:	ldrdeq	r8, [r0], -r5
    a5fc:	strdeq	r8, [r0], -r1
    a600:	strdeq	r8, [r0], -r9
    a604:	strdeq	r8, [r0], -fp
    a608:	andeq	r8, r0, pc, lsl r5
    a60c:	andeq	r8, r0, r5, asr #10
    a610:	andeq	r8, r0, r7, asr #10
    a614:	andeq	r8, r0, sl, asr r5
    a618:	andeq	r8, r0, r8, asr r5
    a61c:	andeq	r8, r0, pc, ror #10
    a620:	muleq	r0, r2, r5
    a624:	muleq	r0, r6, r5
    a628:	muleq	r0, r4, r5
    a62c:	andeq	r8, r0, sl, lsr #11
    a630:			; <UNDEFINED> instruction: 0x000085b2
    a634:			; <UNDEFINED> instruction: 0x000085ba
    a638:	ldrdeq	r8, [r0], -r2
    a63c:	andeq	r8, r0, r7, ror #11
    a640:	strdeq	r8, [r0], -r0
    a644:	andeq	r8, r0, sl, lsl #12
    a648:	andeq	r8, r0, r6, lsl #12
    a64c:	andeq	r8, r0, r4, lsl r6
    a650:	andeq	r8, r0, fp, lsr #12
    a654:	andeq	r8, r0, pc, lsr r6
    a658:	andeq	r8, r0, ip, asr #12
    a65c:	andeq	r8, r0, r2, ror #12
    a660:	andeq	r8, r0, r1, ror #12
    a664:	andeq	r8, r0, sp, ror r6
    a668:	andeq	r8, r0, r2, lsr #13
    a66c:			; <UNDEFINED> instruction: 0x000086b2
    a670:			; <UNDEFINED> instruction: 0x000086b5
    a674:			; <UNDEFINED> instruction: 0x000086bb
    a678:			; <UNDEFINED> instruction: 0x000086bf
    a67c:	andeq	r8, r0, pc, asr #13
    a680:	andeq	r8, r0, lr, lsl #14
    a684:	andeq	r8, r0, r7, lsl r7
    a688:	andeq	r8, r0, sl, lsl r7
    a68c:	andeq	r8, r0, r9, lsr #14
    a690:	andeq	r8, r0, r2, lsr r7
    a694:	andeq	r8, r0, pc, lsr #14
    a698:	andeq	r8, r0, sl, lsr #14
    a69c:	andeq	r8, r0, pc, lsr #14
    a6a0:	andeq	r8, r0, r5, lsr r7
    a6a4:	andeq	r8, r0, r3, asr #14
    a6a8:	andeq	r8, r0, r5, asr r7
    a6ac:	andeq	r8, r0, r6, asr r7
    a6b0:	andeq	r8, r0, r4, ror #14
    a6b4:	muleq	r0, r8, r7
    a6b8:	muleq	r0, r6, r7
    a6bc:	andeq	r8, r0, r7, lsr #15
    a6c0:	andeq	r8, r0, sp, asr #15
    a6c4:	andeq	r8, r0, r6, ror #15
    a6c8:	andeq	r8, r0, pc, ror #15
    a6cc:	strdeq	r8, [r0], -fp
    a6d0:	andeq	r8, r0, r0, lsl #16
    a6d4:	andeq	r8, r0, r8, lsl #16
    a6d8:	andeq	r8, r0, ip, lsl r8
    a6dc:	andeq	r8, r0, r7, lsl r8
    a6e0:	andeq	r8, r0, r7, lsl r8
    a6e4:	andeq	r8, r0, ip, lsr #16
    a6e8:	andeq	r8, r0, r3, lsr r8
    a6ec:	andeq	r8, r0, r6, asr #16
    a6f0:	andeq	r8, r0, r4, asr r8
    a6f4:	andeq	r8, r0, sl, asr r8
    a6f8:	andeq	r8, r0, sp, asr r8
    a6fc:	andeq	r8, r0, r3, lsl #17
    a700:	cmp	r0, #996	; 0x3e4
    a704:	beq	d244 <bt_compidtostr@@Base+0x5cf0>
    a708:	bhi	d250 <bt_compidtostr@@Base+0x5cfc>
    a70c:	ldr	r0, [pc, #-812]	; a3e8 <bt_compidtostr@@Base+0x2e94>
    a710:	add	r0, pc, r0
    a714:	bx	lr
    a718:	ldr	r3, [pc, #-820]	; a3ec <bt_compidtostr@@Base+0x2e98>
    a71c:	cmp	r0, r3
    a720:	beq	d280 <bt_compidtostr@@Base+0x5d2c>
    a724:	bhi	a740 <bt_compidtostr@@Base+0x31ec>
    a728:	cmp	r0, #1000	; 0x3e8
    a72c:	beq	d268 <bt_compidtostr@@Base+0x5d14>
    a730:	bhi	d274 <bt_compidtostr@@Base+0x5d20>
    a734:	ldr	r0, [pc, #-844]	; a3f0 <bt_compidtostr@@Base+0x2e9c>
    a738:	add	r0, pc, r0
    a73c:	bx	lr
    a740:	cmp	r0, #1004	; 0x3ec
    a744:	beq	d28c <bt_compidtostr@@Base+0x5d38>
    a748:	bhi	d298 <bt_compidtostr@@Base+0x5d44>
    a74c:	ldr	r0, [pc, #-864]	; a3f4 <bt_compidtostr@@Base+0x2ea0>
    a750:	add	r0, pc, r0
    a754:	bx	lr
    a758:	ldr	r3, [pc, #-872]	; a3f8 <bt_compidtostr@@Base+0x2ea4>
    a75c:	cmp	r0, r3
    a760:	beq	d334 <bt_compidtostr@@Base+0x5de0>
    a764:	bhi	a7f8 <bt_compidtostr@@Base+0x32a4>
    a768:	sub	r3, r3, #8
    a76c:	cmp	r0, r3
    a770:	beq	d2ec <bt_compidtostr@@Base+0x5d98>
    a774:	bhi	a7b8 <bt_compidtostr@@Base+0x3264>
    a778:	sub	r3, r3, #4
    a77c:	cmp	r0, r3
    a780:	beq	d2c8 <bt_compidtostr@@Base+0x5d74>
    a784:	bhi	a7a0 <bt_compidtostr@@Base+0x324c>
    a788:	cmp	r0, #1008	; 0x3f0
    a78c:	beq	d2b0 <bt_compidtostr@@Base+0x5d5c>
    a790:	bhi	d2bc <bt_compidtostr@@Base+0x5d68>
    a794:	ldr	r0, [pc, #-928]	; a3fc <bt_compidtostr@@Base+0x2ea8>
    a798:	add	r0, pc, r0
    a79c:	bx	lr
    a7a0:	cmp	r0, #1012	; 0x3f4
    a7a4:	beq	d2d4 <bt_compidtostr@@Base+0x5d80>
    a7a8:	bhi	d2e0 <bt_compidtostr@@Base+0x5d8c>
    a7ac:	ldr	r0, [pc, #-948]	; a400 <bt_compidtostr@@Base+0x2eac>
    a7b0:	add	r0, pc, r0
    a7b4:	bx	lr
    a7b8:	ldr	r3, [pc, #-956]	; a404 <bt_compidtostr@@Base+0x2eb0>
    a7bc:	cmp	r0, r3
    a7c0:	beq	d310 <bt_compidtostr@@Base+0x5dbc>
    a7c4:	bhi	a7e0 <bt_compidtostr@@Base+0x328c>
    a7c8:	cmp	r0, #1016	; 0x3f8
    a7cc:	beq	d2f8 <bt_compidtostr@@Base+0x5da4>
    a7d0:	bhi	d304 <bt_compidtostr@@Base+0x5db0>
    a7d4:	ldr	r0, [pc, #-980]	; a408 <bt_compidtostr@@Base+0x2eb4>
    a7d8:	add	r0, pc, r0
    a7dc:	bx	lr
    a7e0:	cmp	r0, #1020	; 0x3fc
    a7e4:	beq	d31c <bt_compidtostr@@Base+0x5dc8>
    a7e8:	bhi	d328 <bt_compidtostr@@Base+0x5dd4>
    a7ec:	ldr	r0, [pc, #-1000]	; a40c <bt_compidtostr@@Base+0x2eb8>
    a7f0:	add	r0, pc, r0
    a7f4:	bx	lr
    a7f8:	ldr	r3, [pc, #-1008]	; a410 <bt_compidtostr@@Base+0x2ebc>
    a7fc:	cmp	r0, r3
    a800:	beq	d37c <bt_compidtostr@@Base+0x5e28>
    a804:	bhi	a84c <bt_compidtostr@@Base+0x32f8>
    a808:	sub	r3, r3, #4
    a80c:	cmp	r0, r3
    a810:	beq	d358 <bt_compidtostr@@Base+0x5e04>
    a814:	bhi	a830 <bt_compidtostr@@Base+0x32dc>
    a818:	cmp	r0, #1024	; 0x400
    a81c:	beq	d340 <bt_compidtostr@@Base+0x5dec>
    a820:	bhi	d34c <bt_compidtostr@@Base+0x5df8>
    a824:	ldr	r0, [pc, #-1048]	; a414 <bt_compidtostr@@Base+0x2ec0>
    a828:	add	r0, pc, r0
    a82c:	bx	lr
    a830:	ldr	r3, [pc, #-1056]	; a418 <bt_compidtostr@@Base+0x2ec4>
    a834:	cmp	r0, r3
    a838:	beq	d364 <bt_compidtostr@@Base+0x5e10>
    a83c:	bhi	d370 <bt_compidtostr@@Base+0x5e1c>
    a840:	ldr	r0, [pc, #-1068]	; a41c <bt_compidtostr@@Base+0x2ec8>
    a844:	add	r0, pc, r0
    a848:	bx	lr
    a84c:	ldr	r3, [pc, #-1076]	; a420 <bt_compidtostr@@Base+0x2ecc>
    a850:	cmp	r0, r3
    a854:	beq	d3a0 <bt_compidtostr@@Base+0x5e4c>
    a858:	bhi	a878 <bt_compidtostr@@Base+0x3324>
    a85c:	sub	r3, r3, #2
    a860:	cmp	r0, r3
    a864:	beq	d388 <bt_compidtostr@@Base+0x5e34>
    a868:	bhi	d394 <bt_compidtostr@@Base+0x5e40>
    a86c:	ldr	r0, [pc, #-1104]	; a424 <bt_compidtostr@@Base+0x2ed0>
    a870:	add	r0, pc, r0
    a874:	bx	lr
    a878:	ldr	r3, [pc, #-1112]	; a428 <bt_compidtostr@@Base+0x2ed4>
    a87c:	cmp	r0, r3
    a880:	beq	d3b8 <bt_compidtostr@@Base+0x5e64>
    a884:	bcc	d3ac <bt_compidtostr@@Base+0x5e58>
    a888:	add	r3, r3, #1
    a88c:	cmp	r0, r3
    a890:	beq	d3c4 <bt_compidtostr@@Base+0x5e70>
    a894:	ldr	r3, [pc, #-1136]	; a42c <bt_compidtostr@@Base+0x2ed8>
    a898:	cmp	r0, r3
    a89c:	bne	77c4 <bt_compidtostr@@Base+0x270>
    a8a0:	ldr	r0, [pc, #-1144]	; a430 <bt_compidtostr@@Base+0x2edc>
    a8a4:	add	r0, pc, r0
    a8a8:	bx	lr
    a8ac:	ldr	r0, [pc, #-1152]	; a434 <bt_compidtostr@@Base+0x2ee0>
    a8b0:	add	r0, pc, r0
    a8b4:	bx	lr
    a8b8:	ldr	r0, [pc, #-1160]	; a438 <bt_compidtostr@@Base+0x2ee4>
    a8bc:	add	r0, pc, r0
    a8c0:	bx	lr
    a8c4:	ldr	r0, [pc, #-1168]	; a43c <bt_compidtostr@@Base+0x2ee8>
    a8c8:	add	r0, pc, r0
    a8cc:	bx	lr
    a8d0:	ldr	r0, [pc, #-1176]	; a440 <bt_compidtostr@@Base+0x2eec>
    a8d4:	add	r0, pc, r0
    a8d8:	bx	lr
    a8dc:	ldr	r0, [pc, #-1184]	; a444 <bt_compidtostr@@Base+0x2ef0>
    a8e0:	add	r0, pc, r0
    a8e4:	bx	lr
    a8e8:	ldr	r0, [pc, #-1192]	; a448 <bt_compidtostr@@Base+0x2ef4>
    a8ec:	add	r0, pc, r0
    a8f0:	bx	lr
    a8f4:	ldr	r0, [pc, #-1200]	; a44c <bt_compidtostr@@Base+0x2ef8>
    a8f8:	add	r0, pc, r0
    a8fc:	bx	lr
    a900:	ldr	r0, [pc, #-1208]	; a450 <bt_compidtostr@@Base+0x2efc>
    a904:	add	r0, pc, r0
    a908:	bx	lr
    a90c:	ldr	r0, [pc, #-1216]	; a454 <bt_compidtostr@@Base+0x2f00>
    a910:	add	r0, pc, r0
    a914:	bx	lr
    a918:	ldr	r0, [pc, #-1224]	; a458 <bt_compidtostr@@Base+0x2f04>
    a91c:	add	r0, pc, r0
    a920:	bx	lr
    a924:	ldr	r0, [pc, #-1232]	; a45c <bt_compidtostr@@Base+0x2f08>
    a928:	add	r0, pc, r0
    a92c:	bx	lr
    a930:	ldr	r0, [pc, #-1240]	; a460 <bt_compidtostr@@Base+0x2f0c>
    a934:	add	r0, pc, r0
    a938:	bx	lr
    a93c:	ldr	r0, [pc, #-1248]	; a464 <bt_compidtostr@@Base+0x2f10>
    a940:	add	r0, pc, r0
    a944:	bx	lr
    a948:	ldr	r0, [pc, #-1256]	; a468 <bt_compidtostr@@Base+0x2f14>
    a94c:	add	r0, pc, r0
    a950:	bx	lr
    a954:	ldr	r0, [pc, #-1264]	; a46c <bt_compidtostr@@Base+0x2f18>
    a958:	add	r0, pc, r0
    a95c:	bx	lr
    a960:	ldr	r0, [pc, #-1272]	; a470 <bt_compidtostr@@Base+0x2f1c>
    a964:	add	r0, pc, r0
    a968:	bx	lr
    a96c:	ldr	r0, [pc, #-1280]	; a474 <bt_compidtostr@@Base+0x2f20>
    a970:	add	r0, pc, r0
    a974:	bx	lr
    a978:	ldr	r0, [pc, #-1288]	; a478 <bt_compidtostr@@Base+0x2f24>
    a97c:	add	r0, pc, r0
    a980:	bx	lr
    a984:	ldr	r0, [pc, #-1296]	; a47c <bt_compidtostr@@Base+0x2f28>
    a988:	add	r0, pc, r0
    a98c:	bx	lr
    a990:	ldr	r0, [pc, #-1304]	; a480 <bt_compidtostr@@Base+0x2f2c>
    a994:	add	r0, pc, r0
    a998:	bx	lr
    a99c:	ldr	r0, [pc, #-1312]	; a484 <bt_compidtostr@@Base+0x2f30>
    a9a0:	add	r0, pc, r0
    a9a4:	bx	lr
    a9a8:	ldr	r0, [pc, #-1320]	; a488 <bt_compidtostr@@Base+0x2f34>
    a9ac:	add	r0, pc, r0
    a9b0:	bx	lr
    a9b4:	ldr	r0, [pc, #-1328]	; a48c <bt_compidtostr@@Base+0x2f38>
    a9b8:	add	r0, pc, r0
    a9bc:	bx	lr
    a9c0:	ldr	r0, [pc, #-1336]	; a490 <bt_compidtostr@@Base+0x2f3c>
    a9c4:	add	r0, pc, r0
    a9c8:	bx	lr
    a9cc:	ldr	r0, [pc, #-1344]	; a494 <bt_compidtostr@@Base+0x2f40>
    a9d0:	add	r0, pc, r0
    a9d4:	bx	lr
    a9d8:	ldr	r0, [pc, #-1352]	; a498 <bt_compidtostr@@Base+0x2f44>
    a9dc:	add	r0, pc, r0
    a9e0:	bx	lr
    a9e4:	ldr	r0, [pc, #-1360]	; a49c <bt_compidtostr@@Base+0x2f48>
    a9e8:	add	r0, pc, r0
    a9ec:	bx	lr
    a9f0:	ldr	r0, [pc, #-1368]	; a4a0 <bt_compidtostr@@Base+0x2f4c>
    a9f4:	add	r0, pc, r0
    a9f8:	bx	lr
    a9fc:	ldr	r0, [pc, #-1376]	; a4a4 <bt_compidtostr@@Base+0x2f50>
    aa00:	add	r0, pc, r0
    aa04:	bx	lr
    aa08:	ldr	r0, [pc, #-1384]	; a4a8 <bt_compidtostr@@Base+0x2f54>
    aa0c:	add	r0, pc, r0
    aa10:	bx	lr
    aa14:	ldr	r0, [pc, #-1392]	; a4ac <bt_compidtostr@@Base+0x2f58>
    aa18:	add	r0, pc, r0
    aa1c:	bx	lr
    aa20:	ldr	r0, [pc, #-1400]	; a4b0 <bt_compidtostr@@Base+0x2f5c>
    aa24:	add	r0, pc, r0
    aa28:	bx	lr
    aa2c:	ldr	r0, [pc, #-1408]	; a4b4 <bt_compidtostr@@Base+0x2f60>
    aa30:	add	r0, pc, r0
    aa34:	bx	lr
    aa38:	ldr	r0, [pc, #-1416]	; a4b8 <bt_compidtostr@@Base+0x2f64>
    aa3c:	add	r0, pc, r0
    aa40:	bx	lr
    aa44:	ldr	r0, [pc, #-1424]	; a4bc <bt_compidtostr@@Base+0x2f68>
    aa48:	add	r0, pc, r0
    aa4c:	bx	lr
    aa50:	ldr	r0, [pc, #-1432]	; a4c0 <bt_compidtostr@@Base+0x2f6c>
    aa54:	add	r0, pc, r0
    aa58:	bx	lr
    aa5c:	ldr	r0, [pc, #-1440]	; a4c4 <bt_compidtostr@@Base+0x2f70>
    aa60:	add	r0, pc, r0
    aa64:	bx	lr
    aa68:	ldr	r0, [pc, #-1448]	; a4c8 <bt_compidtostr@@Base+0x2f74>
    aa6c:	add	r0, pc, r0
    aa70:	bx	lr
    aa74:	ldr	r0, [pc, #-1456]	; a4cc <bt_compidtostr@@Base+0x2f78>
    aa78:	add	r0, pc, r0
    aa7c:	bx	lr
    aa80:	ldr	r0, [pc, #-1464]	; a4d0 <bt_compidtostr@@Base+0x2f7c>
    aa84:	add	r0, pc, r0
    aa88:	bx	lr
    aa8c:	ldr	r0, [pc, #-1472]	; a4d4 <bt_compidtostr@@Base+0x2f80>
    aa90:	add	r0, pc, r0
    aa94:	bx	lr
    aa98:	ldr	r0, [pc, #-1480]	; a4d8 <bt_compidtostr@@Base+0x2f84>
    aa9c:	add	r0, pc, r0
    aaa0:	bx	lr
    aaa4:	ldr	r0, [pc, #-1488]	; a4dc <bt_compidtostr@@Base+0x2f88>
    aaa8:	add	r0, pc, r0
    aaac:	bx	lr
    aab0:	ldr	r0, [pc, #-1496]	; a4e0 <bt_compidtostr@@Base+0x2f8c>
    aab4:	add	r0, pc, r0
    aab8:	bx	lr
    aabc:	ldr	r0, [pc, #-1504]	; a4e4 <bt_compidtostr@@Base+0x2f90>
    aac0:	add	r0, pc, r0
    aac4:	bx	lr
    aac8:	ldr	r0, [pc, #-1512]	; a4e8 <bt_compidtostr@@Base+0x2f94>
    aacc:	add	r0, pc, r0
    aad0:	bx	lr
    aad4:	ldr	r0, [pc, #-1520]	; a4ec <bt_compidtostr@@Base+0x2f98>
    aad8:	add	r0, pc, r0
    aadc:	bx	lr
    aae0:	ldr	r0, [pc, #-1528]	; a4f0 <bt_compidtostr@@Base+0x2f9c>
    aae4:	add	r0, pc, r0
    aae8:	bx	lr
    aaec:	ldr	r0, [pc, #-1536]	; a4f4 <bt_compidtostr@@Base+0x2fa0>
    aaf0:	add	r0, pc, r0
    aaf4:	bx	lr
    aaf8:	ldr	r0, [pc, #-1544]	; a4f8 <bt_compidtostr@@Base+0x2fa4>
    aafc:	add	r0, pc, r0
    ab00:	bx	lr
    ab04:	ldr	r0, [pc, #-1552]	; a4fc <bt_compidtostr@@Base+0x2fa8>
    ab08:	add	r0, pc, r0
    ab0c:	bx	lr
    ab10:	ldr	r0, [pc, #-1560]	; a500 <bt_compidtostr@@Base+0x2fac>
    ab14:	add	r0, pc, r0
    ab18:	bx	lr
    ab1c:	ldr	r0, [pc, #-1568]	; a504 <bt_compidtostr@@Base+0x2fb0>
    ab20:	add	r0, pc, r0
    ab24:	bx	lr
    ab28:	ldr	r0, [pc, #-1576]	; a508 <bt_compidtostr@@Base+0x2fb4>
    ab2c:	add	r0, pc, r0
    ab30:	bx	lr
    ab34:	ldr	r0, [pc, #-1584]	; a50c <bt_compidtostr@@Base+0x2fb8>
    ab38:	add	r0, pc, r0
    ab3c:	bx	lr
    ab40:	ldr	r0, [pc, #-1592]	; a510 <bt_compidtostr@@Base+0x2fbc>
    ab44:	add	r0, pc, r0
    ab48:	bx	lr
    ab4c:	ldr	r0, [pc, #-1600]	; a514 <bt_compidtostr@@Base+0x2fc0>
    ab50:	add	r0, pc, r0
    ab54:	bx	lr
    ab58:	ldr	r0, [pc, #-1608]	; a518 <bt_compidtostr@@Base+0x2fc4>
    ab5c:	add	r0, pc, r0
    ab60:	bx	lr
    ab64:	ldr	r0, [pc, #-1616]	; a51c <bt_compidtostr@@Base+0x2fc8>
    ab68:	add	r0, pc, r0
    ab6c:	bx	lr
    ab70:	ldr	r0, [pc, #-1624]	; a520 <bt_compidtostr@@Base+0x2fcc>
    ab74:	add	r0, pc, r0
    ab78:	bx	lr
    ab7c:	ldr	r0, [pc, #-1632]	; a524 <bt_compidtostr@@Base+0x2fd0>
    ab80:	add	r0, pc, r0
    ab84:	bx	lr
    ab88:	ldr	r0, [pc, #-1640]	; a528 <bt_compidtostr@@Base+0x2fd4>
    ab8c:	add	r0, pc, r0
    ab90:	bx	lr
    ab94:	ldr	r0, [pc, #-1648]	; a52c <bt_compidtostr@@Base+0x2fd8>
    ab98:	add	r0, pc, r0
    ab9c:	bx	lr
    aba0:	ldr	r0, [pc, #-1656]	; a530 <bt_compidtostr@@Base+0x2fdc>
    aba4:	add	r0, pc, r0
    aba8:	bx	lr
    abac:	ldr	r0, [pc, #-1664]	; a534 <bt_compidtostr@@Base+0x2fe0>
    abb0:	add	r0, pc, r0
    abb4:	bx	lr
    abb8:	ldr	r0, [pc, #-1672]	; a538 <bt_compidtostr@@Base+0x2fe4>
    abbc:	add	r0, pc, r0
    abc0:	bx	lr
    abc4:	ldr	r0, [pc, #-1680]	; a53c <bt_compidtostr@@Base+0x2fe8>
    abc8:	add	r0, pc, r0
    abcc:	bx	lr
    abd0:	ldr	r0, [pc, #-1688]	; a540 <bt_compidtostr@@Base+0x2fec>
    abd4:	add	r0, pc, r0
    abd8:	bx	lr
    abdc:	ldr	r0, [pc, #-1696]	; a544 <bt_compidtostr@@Base+0x2ff0>
    abe0:	add	r0, pc, r0
    abe4:	bx	lr
    abe8:	ldr	r0, [pc, #-1704]	; a548 <bt_compidtostr@@Base+0x2ff4>
    abec:	add	r0, pc, r0
    abf0:	bx	lr
    abf4:	ldr	r0, [pc, #-1712]	; a54c <bt_compidtostr@@Base+0x2ff8>
    abf8:	add	r0, pc, r0
    abfc:	bx	lr
    ac00:	ldr	r0, [pc, #-1720]	; a550 <bt_compidtostr@@Base+0x2ffc>
    ac04:	add	r0, pc, r0
    ac08:	bx	lr
    ac0c:	ldr	r0, [pc, #-1728]	; a554 <bt_compidtostr@@Base+0x3000>
    ac10:	add	r0, pc, r0
    ac14:	bx	lr
    ac18:	ldr	r0, [pc, #-1736]	; a558 <bt_compidtostr@@Base+0x3004>
    ac1c:	add	r0, pc, r0
    ac20:	bx	lr
    ac24:	ldr	r0, [pc, #-1744]	; a55c <bt_compidtostr@@Base+0x3008>
    ac28:	add	r0, pc, r0
    ac2c:	bx	lr
    ac30:	ldr	r0, [pc, #-1752]	; a560 <bt_compidtostr@@Base+0x300c>
    ac34:	add	r0, pc, r0
    ac38:	bx	lr
    ac3c:	ldr	r0, [pc, #-1760]	; a564 <bt_compidtostr@@Base+0x3010>
    ac40:	add	r0, pc, r0
    ac44:	bx	lr
    ac48:	ldr	r0, [pc, #-1768]	; a568 <bt_compidtostr@@Base+0x3014>
    ac4c:	add	r0, pc, r0
    ac50:	bx	lr
    ac54:	ldr	r0, [pc, #-1776]	; a56c <bt_compidtostr@@Base+0x3018>
    ac58:	add	r0, pc, r0
    ac5c:	bx	lr
    ac60:	ldr	r0, [pc, #-1784]	; a570 <bt_compidtostr@@Base+0x301c>
    ac64:	add	r0, pc, r0
    ac68:	bx	lr
    ac6c:	ldr	r0, [pc, #-1792]	; a574 <bt_compidtostr@@Base+0x3020>
    ac70:	add	r0, pc, r0
    ac74:	bx	lr
    ac78:	ldr	r0, [pc, #-1800]	; a578 <bt_compidtostr@@Base+0x3024>
    ac7c:	add	r0, pc, r0
    ac80:	bx	lr
    ac84:	ldr	r0, [pc, #-1808]	; a57c <bt_compidtostr@@Base+0x3028>
    ac88:	add	r0, pc, r0
    ac8c:	bx	lr
    ac90:	ldr	r0, [pc, #-1816]	; a580 <bt_compidtostr@@Base+0x302c>
    ac94:	add	r0, pc, r0
    ac98:	bx	lr
    ac9c:	ldr	r0, [pc, #-1824]	; a584 <bt_compidtostr@@Base+0x3030>
    aca0:	add	r0, pc, r0
    aca4:	bx	lr
    aca8:	ldr	r0, [pc, #-1832]	; a588 <bt_compidtostr@@Base+0x3034>
    acac:	add	r0, pc, r0
    acb0:	bx	lr
    acb4:	ldr	r0, [pc, #-1840]	; a58c <bt_compidtostr@@Base+0x3038>
    acb8:	add	r0, pc, r0
    acbc:	bx	lr
    acc0:	ldr	r0, [pc, #-1848]	; a590 <bt_compidtostr@@Base+0x303c>
    acc4:	add	r0, pc, r0
    acc8:	bx	lr
    accc:	ldr	r0, [pc, #-1856]	; a594 <bt_compidtostr@@Base+0x3040>
    acd0:	add	r0, pc, r0
    acd4:	bx	lr
    acd8:	ldr	r0, [pc, #-1864]	; a598 <bt_compidtostr@@Base+0x3044>
    acdc:	add	r0, pc, r0
    ace0:	bx	lr
    ace4:	ldr	r0, [pc, #-1872]	; a59c <bt_compidtostr@@Base+0x3048>
    ace8:	add	r0, pc, r0
    acec:	bx	lr
    acf0:	ldr	r0, [pc, #-1880]	; a5a0 <bt_compidtostr@@Base+0x304c>
    acf4:	add	r0, pc, r0
    acf8:	bx	lr
    acfc:	ldr	r0, [pc, #-1888]	; a5a4 <bt_compidtostr@@Base+0x3050>
    ad00:	add	r0, pc, r0
    ad04:	bx	lr
    ad08:	ldr	r0, [pc, #-1896]	; a5a8 <bt_compidtostr@@Base+0x3054>
    ad0c:	add	r0, pc, r0
    ad10:	bx	lr
    ad14:	ldr	r0, [pc, #-1904]	; a5ac <bt_compidtostr@@Base+0x3058>
    ad18:	add	r0, pc, r0
    ad1c:	bx	lr
    ad20:	ldr	r0, [pc, #-1912]	; a5b0 <bt_compidtostr@@Base+0x305c>
    ad24:	add	r0, pc, r0
    ad28:	bx	lr
    ad2c:	ldr	r0, [pc, #-1920]	; a5b4 <bt_compidtostr@@Base+0x3060>
    ad30:	add	r0, pc, r0
    ad34:	bx	lr
    ad38:	ldr	r0, [pc, #-1928]	; a5b8 <bt_compidtostr@@Base+0x3064>
    ad3c:	add	r0, pc, r0
    ad40:	bx	lr
    ad44:	ldr	r0, [pc, #-1936]	; a5bc <bt_compidtostr@@Base+0x3068>
    ad48:	add	r0, pc, r0
    ad4c:	bx	lr
    ad50:	ldr	r0, [pc, #-1944]	; a5c0 <bt_compidtostr@@Base+0x306c>
    ad54:	add	r0, pc, r0
    ad58:	bx	lr
    ad5c:	ldr	r0, [pc, #-1952]	; a5c4 <bt_compidtostr@@Base+0x3070>
    ad60:	add	r0, pc, r0
    ad64:	bx	lr
    ad68:	ldr	r0, [pc, #-1960]	; a5c8 <bt_compidtostr@@Base+0x3074>
    ad6c:	add	r0, pc, r0
    ad70:	bx	lr
    ad74:	ldr	r0, [pc, #-1968]	; a5cc <bt_compidtostr@@Base+0x3078>
    ad78:	add	r0, pc, r0
    ad7c:	bx	lr
    ad80:	ldr	r0, [pc, #-1976]	; a5d0 <bt_compidtostr@@Base+0x307c>
    ad84:	add	r0, pc, r0
    ad88:	bx	lr
    ad8c:	ldr	r0, [pc, #-1984]	; a5d4 <bt_compidtostr@@Base+0x3080>
    ad90:	add	r0, pc, r0
    ad94:	bx	lr
    ad98:	ldr	r0, [pc, #-1992]	; a5d8 <bt_compidtostr@@Base+0x3084>
    ad9c:	add	r0, pc, r0
    ada0:	bx	lr
    ada4:	ldr	r0, [pc, #-2000]	; a5dc <bt_compidtostr@@Base+0x3088>
    ada8:	add	r0, pc, r0
    adac:	bx	lr
    adb0:	ldr	r0, [pc, #-2008]	; a5e0 <bt_compidtostr@@Base+0x308c>
    adb4:	add	r0, pc, r0
    adb8:	bx	lr
    adbc:	ldr	r0, [pc, #-2016]	; a5e4 <bt_compidtostr@@Base+0x3090>
    adc0:	add	r0, pc, r0
    adc4:	bx	lr
    adc8:	ldr	r0, [pc, #-2024]	; a5e8 <bt_compidtostr@@Base+0x3094>
    adcc:	add	r0, pc, r0
    add0:	bx	lr
    add4:	ldr	r0, [pc, #-2032]	; a5ec <bt_compidtostr@@Base+0x3098>
    add8:	add	r0, pc, r0
    addc:	bx	lr
    ade0:	ldr	r0, [pc, #-2040]	; a5f0 <bt_compidtostr@@Base+0x309c>
    ade4:	add	r0, pc, r0
    ade8:	bx	lr
    adec:	ldr	r0, [pc, #-2048]	; a5f4 <bt_compidtostr@@Base+0x30a0>
    adf0:	add	r0, pc, r0
    adf4:	bx	lr
    adf8:	ldr	r0, [pc, #-2056]	; a5f8 <bt_compidtostr@@Base+0x30a4>
    adfc:	add	r0, pc, r0
    ae00:	bx	lr
    ae04:	ldr	r0, [pc, #-2064]	; a5fc <bt_compidtostr@@Base+0x30a8>
    ae08:	add	r0, pc, r0
    ae0c:	bx	lr
    ae10:	ldr	r0, [pc, #-2072]	; a600 <bt_compidtostr@@Base+0x30ac>
    ae14:	add	r0, pc, r0
    ae18:	bx	lr
    ae1c:	ldr	r0, [pc, #-2080]	; a604 <bt_compidtostr@@Base+0x30b0>
    ae20:	add	r0, pc, r0
    ae24:	bx	lr
    ae28:	ldr	r0, [pc, #-2088]	; a608 <bt_compidtostr@@Base+0x30b4>
    ae2c:	add	r0, pc, r0
    ae30:	bx	lr
    ae34:	ldr	r0, [pc, #-2096]	; a60c <bt_compidtostr@@Base+0x30b8>
    ae38:	add	r0, pc, r0
    ae3c:	bx	lr
    ae40:	ldr	r0, [pc, #-2104]	; a610 <bt_compidtostr@@Base+0x30bc>
    ae44:	add	r0, pc, r0
    ae48:	bx	lr
    ae4c:	ldr	r0, [pc, #-2112]	; a614 <bt_compidtostr@@Base+0x30c0>
    ae50:	add	r0, pc, r0
    ae54:	bx	lr
    ae58:	ldr	r0, [pc, #-2120]	; a618 <bt_compidtostr@@Base+0x30c4>
    ae5c:	add	r0, pc, r0
    ae60:	bx	lr
    ae64:	ldr	r0, [pc, #-2128]	; a61c <bt_compidtostr@@Base+0x30c8>
    ae68:	add	r0, pc, r0
    ae6c:	bx	lr
    ae70:	ldr	r0, [pc, #-2136]	; a620 <bt_compidtostr@@Base+0x30cc>
    ae74:	add	r0, pc, r0
    ae78:	bx	lr
    ae7c:	ldr	r0, [pc, #-2144]	; a624 <bt_compidtostr@@Base+0x30d0>
    ae80:	add	r0, pc, r0
    ae84:	bx	lr
    ae88:	ldr	r0, [pc, #-2152]	; a628 <bt_compidtostr@@Base+0x30d4>
    ae8c:	add	r0, pc, r0
    ae90:	bx	lr
    ae94:	ldr	r0, [pc, #-2160]	; a62c <bt_compidtostr@@Base+0x30d8>
    ae98:	add	r0, pc, r0
    ae9c:	bx	lr
    aea0:	ldr	r0, [pc, #-2168]	; a630 <bt_compidtostr@@Base+0x30dc>
    aea4:	add	r0, pc, r0
    aea8:	bx	lr
    aeac:	ldr	r0, [pc, #-2176]	; a634 <bt_compidtostr@@Base+0x30e0>
    aeb0:	add	r0, pc, r0
    aeb4:	bx	lr
    aeb8:	ldr	r0, [pc, #-2184]	; a638 <bt_compidtostr@@Base+0x30e4>
    aebc:	add	r0, pc, r0
    aec0:	bx	lr
    aec4:	ldr	r0, [pc, #-2192]	; a63c <bt_compidtostr@@Base+0x30e8>
    aec8:	add	r0, pc, r0
    aecc:	bx	lr
    aed0:	ldr	r0, [pc, #-2200]	; a640 <bt_compidtostr@@Base+0x30ec>
    aed4:	add	r0, pc, r0
    aed8:	bx	lr
    aedc:	ldr	r0, [pc, #-2208]	; a644 <bt_compidtostr@@Base+0x30f0>
    aee0:	add	r0, pc, r0
    aee4:	bx	lr
    aee8:	ldr	r0, [pc, #-2216]	; a648 <bt_compidtostr@@Base+0x30f4>
    aeec:	add	r0, pc, r0
    aef0:	bx	lr
    aef4:	ldr	r0, [pc, #-2224]	; a64c <bt_compidtostr@@Base+0x30f8>
    aef8:	add	r0, pc, r0
    aefc:	bx	lr
    af00:	ldr	r0, [pc, #-2232]	; a650 <bt_compidtostr@@Base+0x30fc>
    af04:	add	r0, pc, r0
    af08:	bx	lr
    af0c:	ldr	r0, [pc, #-2240]	; a654 <bt_compidtostr@@Base+0x3100>
    af10:	add	r0, pc, r0
    af14:	bx	lr
    af18:	ldr	r0, [pc, #-2248]	; a658 <bt_compidtostr@@Base+0x3104>
    af1c:	add	r0, pc, r0
    af20:	bx	lr
    af24:	ldr	r0, [pc, #-2256]	; a65c <bt_compidtostr@@Base+0x3108>
    af28:	add	r0, pc, r0
    af2c:	bx	lr
    af30:	ldr	r0, [pc, #-2264]	; a660 <bt_compidtostr@@Base+0x310c>
    af34:	add	r0, pc, r0
    af38:	bx	lr
    af3c:	ldr	r0, [pc, #-2272]	; a664 <bt_compidtostr@@Base+0x3110>
    af40:	add	r0, pc, r0
    af44:	bx	lr
    af48:	ldr	r0, [pc, #-2280]	; a668 <bt_compidtostr@@Base+0x3114>
    af4c:	add	r0, pc, r0
    af50:	bx	lr
    af54:	ldr	r0, [pc, #-2288]	; a66c <bt_compidtostr@@Base+0x3118>
    af58:	add	r0, pc, r0
    af5c:	bx	lr
    af60:	ldr	r0, [pc, #-2296]	; a670 <bt_compidtostr@@Base+0x311c>
    af64:	add	r0, pc, r0
    af68:	bx	lr
    af6c:	ldr	r0, [pc, #-2304]	; a674 <bt_compidtostr@@Base+0x3120>
    af70:	add	r0, pc, r0
    af74:	bx	lr
    af78:	ldr	r0, [pc, #-2312]	; a678 <bt_compidtostr@@Base+0x3124>
    af7c:	add	r0, pc, r0
    af80:	bx	lr
    af84:	ldr	r0, [pc, #-2320]	; a67c <bt_compidtostr@@Base+0x3128>
    af88:	add	r0, pc, r0
    af8c:	bx	lr
    af90:	ldr	r0, [pc, #-2328]	; a680 <bt_compidtostr@@Base+0x312c>
    af94:	add	r0, pc, r0
    af98:	bx	lr
    af9c:	ldr	r0, [pc, #-2336]	; a684 <bt_compidtostr@@Base+0x3130>
    afa0:	add	r0, pc, r0
    afa4:	bx	lr
    afa8:	ldr	r0, [pc, #-2344]	; a688 <bt_compidtostr@@Base+0x3134>
    afac:	add	r0, pc, r0
    afb0:	bx	lr
    afb4:	ldr	r0, [pc, #-2352]	; a68c <bt_compidtostr@@Base+0x3138>
    afb8:	add	r0, pc, r0
    afbc:	bx	lr
    afc0:	ldr	r0, [pc, #-2360]	; a690 <bt_compidtostr@@Base+0x313c>
    afc4:	add	r0, pc, r0
    afc8:	bx	lr
    afcc:	ldr	r0, [pc, #-2368]	; a694 <bt_compidtostr@@Base+0x3140>
    afd0:	add	r0, pc, r0
    afd4:	bx	lr
    afd8:	ldr	r0, [pc, #-2376]	; a698 <bt_compidtostr@@Base+0x3144>
    afdc:	add	r0, pc, r0
    afe0:	bx	lr
    afe4:	ldr	r0, [pc, #-2384]	; a69c <bt_compidtostr@@Base+0x3148>
    afe8:	add	r0, pc, r0
    afec:	bx	lr
    aff0:	ldr	r0, [pc, #-2392]	; a6a0 <bt_compidtostr@@Base+0x314c>
    aff4:	add	r0, pc, r0
    aff8:	bx	lr
    affc:	ldr	r0, [pc, #-2400]	; a6a4 <bt_compidtostr@@Base+0x3150>
    b000:	add	r0, pc, r0
    b004:	bx	lr
    b008:	ldr	r0, [pc, #-2408]	; a6a8 <bt_compidtostr@@Base+0x3154>
    b00c:	add	r0, pc, r0
    b010:	bx	lr
    b014:	ldr	r0, [pc, #-2416]	; a6ac <bt_compidtostr@@Base+0x3158>
    b018:	add	r0, pc, r0
    b01c:	bx	lr
    b020:	ldr	r0, [pc, #-2424]	; a6b0 <bt_compidtostr@@Base+0x315c>
    b024:	add	r0, pc, r0
    b028:	bx	lr
    b02c:	ldr	r0, [pc, #-2432]	; a6b4 <bt_compidtostr@@Base+0x3160>
    b030:	add	r0, pc, r0
    b034:	bx	lr
    b038:	ldr	r0, [pc, #-2440]	; a6b8 <bt_compidtostr@@Base+0x3164>
    b03c:	add	r0, pc, r0
    b040:	bx	lr
    b044:	ldr	r0, [pc, #-2448]	; a6bc <bt_compidtostr@@Base+0x3168>
    b048:	add	r0, pc, r0
    b04c:	bx	lr
    b050:	ldr	r0, [pc, #-2456]	; a6c0 <bt_compidtostr@@Base+0x316c>
    b054:	add	r0, pc, r0
    b058:	bx	lr
    b05c:	ldr	r0, [pc, #-2464]	; a6c4 <bt_compidtostr@@Base+0x3170>
    b060:	add	r0, pc, r0
    b064:	bx	lr
    b068:	ldr	r0, [pc, #-2472]	; a6c8 <bt_compidtostr@@Base+0x3174>
    b06c:	add	r0, pc, r0
    b070:	bx	lr
    b074:	ldr	r0, [pc, #-2480]	; a6cc <bt_compidtostr@@Base+0x3178>
    b078:	add	r0, pc, r0
    b07c:	bx	lr
    b080:	ldr	r0, [pc, #-2488]	; a6d0 <bt_compidtostr@@Base+0x317c>
    b084:	add	r0, pc, r0
    b088:	bx	lr
    b08c:	ldr	r0, [pc, #-2496]	; a6d4 <bt_compidtostr@@Base+0x3180>
    b090:	add	r0, pc, r0
    b094:	bx	lr
    b098:	ldr	r0, [pc, #-2504]	; a6d8 <bt_compidtostr@@Base+0x3184>
    b09c:	add	r0, pc, r0
    b0a0:	bx	lr
    b0a4:	ldr	r0, [pc, #-2512]	; a6dc <bt_compidtostr@@Base+0x3188>
    b0a8:	add	r0, pc, r0
    b0ac:	bx	lr
    b0b0:	ldr	r0, [pc, #-2520]	; a6e0 <bt_compidtostr@@Base+0x318c>
    b0b4:	add	r0, pc, r0
    b0b8:	bx	lr
    b0bc:	ldr	r0, [pc, #-2528]	; a6e4 <bt_compidtostr@@Base+0x3190>
    b0c0:	add	r0, pc, r0
    b0c4:	bx	lr
    b0c8:	ldr	r0, [pc, #-2536]	; a6e8 <bt_compidtostr@@Base+0x3194>
    b0cc:	add	r0, pc, r0
    b0d0:	bx	lr
    b0d4:	ldr	r0, [pc, #-2544]	; a6ec <bt_compidtostr@@Base+0x3198>
    b0d8:	add	r0, pc, r0
    b0dc:	bx	lr
    b0e0:	ldr	r0, [pc, #-2552]	; a6f0 <bt_compidtostr@@Base+0x319c>
    b0e4:	add	r0, pc, r0
    b0e8:	bx	lr
    b0ec:	ldr	r0, [pc, #-2560]	; a6f4 <bt_compidtostr@@Base+0x31a0>
    b0f0:	add	r0, pc, r0
    b0f4:	bx	lr
    b0f8:	ldr	r0, [pc, #-2568]	; a6f8 <bt_compidtostr@@Base+0x31a4>
    b0fc:	add	r0, pc, r0
    b100:	bx	lr
    b104:	ldr	r0, [pc, #-2576]	; a6fc <bt_compidtostr@@Base+0x31a8>
    b108:	add	r0, pc, r0
    b10c:	bx	lr
    b110:	ldr	r0, [pc, #2440]	; baa0 <bt_compidtostr@@Base+0x454c>
    b114:	add	r0, pc, r0
    b118:	bx	lr
    b11c:	ldr	r0, [pc, #2432]	; baa4 <bt_compidtostr@@Base+0x4550>
    b120:	add	r0, pc, r0
    b124:	bx	lr
    b128:	ldr	r0, [pc, #2424]	; baa8 <bt_compidtostr@@Base+0x4554>
    b12c:	add	r0, pc, r0
    b130:	bx	lr
    b134:	ldr	r0, [pc, #2416]	; baac <bt_compidtostr@@Base+0x4558>
    b138:	add	r0, pc, r0
    b13c:	bx	lr
    b140:	ldr	r0, [pc, #2408]	; bab0 <bt_compidtostr@@Base+0x455c>
    b144:	add	r0, pc, r0
    b148:	bx	lr
    b14c:	ldr	r0, [pc, #2400]	; bab4 <bt_compidtostr@@Base+0x4560>
    b150:	add	r0, pc, r0
    b154:	bx	lr
    b158:	ldr	r0, [pc, #2392]	; bab8 <bt_compidtostr@@Base+0x4564>
    b15c:	add	r0, pc, r0
    b160:	bx	lr
    b164:	ldr	r0, [pc, #2384]	; babc <bt_compidtostr@@Base+0x4568>
    b168:	add	r0, pc, r0
    b16c:	bx	lr
    b170:	ldr	r0, [pc, #2376]	; bac0 <bt_compidtostr@@Base+0x456c>
    b174:	add	r0, pc, r0
    b178:	bx	lr
    b17c:	ldr	r0, [pc, #2368]	; bac4 <bt_compidtostr@@Base+0x4570>
    b180:	add	r0, pc, r0
    b184:	bx	lr
    b188:	ldr	r0, [pc, #2360]	; bac8 <bt_compidtostr@@Base+0x4574>
    b18c:	add	r0, pc, r0
    b190:	bx	lr
    b194:	ldr	r0, [pc, #2352]	; bacc <bt_compidtostr@@Base+0x4578>
    b198:	add	r0, pc, r0
    b19c:	bx	lr
    b1a0:	ldr	r0, [pc, #2344]	; bad0 <bt_compidtostr@@Base+0x457c>
    b1a4:	add	r0, pc, r0
    b1a8:	bx	lr
    b1ac:	ldr	r0, [pc, #2336]	; bad4 <bt_compidtostr@@Base+0x4580>
    b1b0:	add	r0, pc, r0
    b1b4:	bx	lr
    b1b8:	ldr	r0, [pc, #2328]	; bad8 <bt_compidtostr@@Base+0x4584>
    b1bc:	add	r0, pc, r0
    b1c0:	bx	lr
    b1c4:	ldr	r0, [pc, #2320]	; badc <bt_compidtostr@@Base+0x4588>
    b1c8:	add	r0, pc, r0
    b1cc:	bx	lr
    b1d0:	ldr	r0, [pc, #2312]	; bae0 <bt_compidtostr@@Base+0x458c>
    b1d4:	add	r0, pc, r0
    b1d8:	bx	lr
    b1dc:	ldr	r0, [pc, #2304]	; bae4 <bt_compidtostr@@Base+0x4590>
    b1e0:	add	r0, pc, r0
    b1e4:	bx	lr
    b1e8:	ldr	r0, [pc, #2296]	; bae8 <bt_compidtostr@@Base+0x4594>
    b1ec:	add	r0, pc, r0
    b1f0:	bx	lr
    b1f4:	ldr	r0, [pc, #2288]	; baec <bt_compidtostr@@Base+0x4598>
    b1f8:	add	r0, pc, r0
    b1fc:	bx	lr
    b200:	ldr	r0, [pc, #2280]	; baf0 <bt_compidtostr@@Base+0x459c>
    b204:	add	r0, pc, r0
    b208:	bx	lr
    b20c:	ldr	r0, [pc, #2272]	; baf4 <bt_compidtostr@@Base+0x45a0>
    b210:	add	r0, pc, r0
    b214:	bx	lr
    b218:	ldr	r0, [pc, #2264]	; baf8 <bt_compidtostr@@Base+0x45a4>
    b21c:	add	r0, pc, r0
    b220:	bx	lr
    b224:	ldr	r0, [pc, #2256]	; bafc <bt_compidtostr@@Base+0x45a8>
    b228:	add	r0, pc, r0
    b22c:	bx	lr
    b230:	ldr	r0, [pc, #2248]	; bb00 <bt_compidtostr@@Base+0x45ac>
    b234:	add	r0, pc, r0
    b238:	bx	lr
    b23c:	ldr	r0, [pc, #2240]	; bb04 <bt_compidtostr@@Base+0x45b0>
    b240:	add	r0, pc, r0
    b244:	bx	lr
    b248:	ldr	r0, [pc, #2232]	; bb08 <bt_compidtostr@@Base+0x45b4>
    b24c:	add	r0, pc, r0
    b250:	bx	lr
    b254:	ldr	r0, [pc, #2224]	; bb0c <bt_compidtostr@@Base+0x45b8>
    b258:	add	r0, pc, r0
    b25c:	bx	lr
    b260:	ldr	r0, [pc, #2216]	; bb10 <bt_compidtostr@@Base+0x45bc>
    b264:	add	r0, pc, r0
    b268:	bx	lr
    b26c:	ldr	r0, [pc, #2208]	; bb14 <bt_compidtostr@@Base+0x45c0>
    b270:	add	r0, pc, r0
    b274:	bx	lr
    b278:	ldr	r0, [pc, #2200]	; bb18 <bt_compidtostr@@Base+0x45c4>
    b27c:	add	r0, pc, r0
    b280:	bx	lr
    b284:	ldr	r0, [pc, #2192]	; bb1c <bt_compidtostr@@Base+0x45c8>
    b288:	add	r0, pc, r0
    b28c:	bx	lr
    b290:	ldr	r0, [pc, #2184]	; bb20 <bt_compidtostr@@Base+0x45cc>
    b294:	add	r0, pc, r0
    b298:	bx	lr
    b29c:	ldr	r0, [pc, #2176]	; bb24 <bt_compidtostr@@Base+0x45d0>
    b2a0:	add	r0, pc, r0
    b2a4:	bx	lr
    b2a8:	ldr	r0, [pc, #2168]	; bb28 <bt_compidtostr@@Base+0x45d4>
    b2ac:	add	r0, pc, r0
    b2b0:	bx	lr
    b2b4:	ldr	r0, [pc, #2160]	; bb2c <bt_compidtostr@@Base+0x45d8>
    b2b8:	add	r0, pc, r0
    b2bc:	bx	lr
    b2c0:	ldr	r0, [pc, #2152]	; bb30 <bt_compidtostr@@Base+0x45dc>
    b2c4:	add	r0, pc, r0
    b2c8:	bx	lr
    b2cc:	ldr	r0, [pc, #2144]	; bb34 <bt_compidtostr@@Base+0x45e0>
    b2d0:	add	r0, pc, r0
    b2d4:	bx	lr
    b2d8:	ldr	r0, [pc, #2136]	; bb38 <bt_compidtostr@@Base+0x45e4>
    b2dc:	add	r0, pc, r0
    b2e0:	bx	lr
    b2e4:	ldr	r0, [pc, #2128]	; bb3c <bt_compidtostr@@Base+0x45e8>
    b2e8:	add	r0, pc, r0
    b2ec:	bx	lr
    b2f0:	ldr	r0, [pc, #2120]	; bb40 <bt_compidtostr@@Base+0x45ec>
    b2f4:	add	r0, pc, r0
    b2f8:	bx	lr
    b2fc:	ldr	r0, [pc, #2112]	; bb44 <bt_compidtostr@@Base+0x45f0>
    b300:	add	r0, pc, r0
    b304:	bx	lr
    b308:	ldr	r0, [pc, #2104]	; bb48 <bt_compidtostr@@Base+0x45f4>
    b30c:	add	r0, pc, r0
    b310:	bx	lr
    b314:	ldr	r0, [pc, #2096]	; bb4c <bt_compidtostr@@Base+0x45f8>
    b318:	add	r0, pc, r0
    b31c:	bx	lr
    b320:	ldr	r0, [pc, #2088]	; bb50 <bt_compidtostr@@Base+0x45fc>
    b324:	add	r0, pc, r0
    b328:	bx	lr
    b32c:	ldr	r0, [pc, #2080]	; bb54 <bt_compidtostr@@Base+0x4600>
    b330:	add	r0, pc, r0
    b334:	bx	lr
    b338:	ldr	r0, [pc, #2072]	; bb58 <bt_compidtostr@@Base+0x4604>
    b33c:	add	r0, pc, r0
    b340:	bx	lr
    b344:	ldr	r0, [pc, #2064]	; bb5c <bt_compidtostr@@Base+0x4608>
    b348:	add	r0, pc, r0
    b34c:	bx	lr
    b350:	ldr	r0, [pc, #2056]	; bb60 <bt_compidtostr@@Base+0x460c>
    b354:	add	r0, pc, r0
    b358:	bx	lr
    b35c:	ldr	r0, [pc, #2048]	; bb64 <bt_compidtostr@@Base+0x4610>
    b360:	add	r0, pc, r0
    b364:	bx	lr
    b368:	ldr	r0, [pc, #2040]	; bb68 <bt_compidtostr@@Base+0x4614>
    b36c:	add	r0, pc, r0
    b370:	bx	lr
    b374:	ldr	r0, [pc, #2032]	; bb6c <bt_compidtostr@@Base+0x4618>
    b378:	add	r0, pc, r0
    b37c:	bx	lr
    b380:	ldr	r0, [pc, #2024]	; bb70 <bt_compidtostr@@Base+0x461c>
    b384:	add	r0, pc, r0
    b388:	bx	lr
    b38c:	ldr	r0, [pc, #2016]	; bb74 <bt_compidtostr@@Base+0x4620>
    b390:	add	r0, pc, r0
    b394:	bx	lr
    b398:	ldr	r0, [pc, #2008]	; bb78 <bt_compidtostr@@Base+0x4624>
    b39c:	add	r0, pc, r0
    b3a0:	bx	lr
    b3a4:	ldr	r0, [pc, #2000]	; bb7c <bt_compidtostr@@Base+0x4628>
    b3a8:	add	r0, pc, r0
    b3ac:	bx	lr
    b3b0:	ldr	r0, [pc, #1992]	; bb80 <bt_compidtostr@@Base+0x462c>
    b3b4:	add	r0, pc, r0
    b3b8:	bx	lr
    b3bc:	ldr	r0, [pc, #1984]	; bb84 <bt_compidtostr@@Base+0x4630>
    b3c0:	add	r0, pc, r0
    b3c4:	bx	lr
    b3c8:	ldr	r0, [pc, #1976]	; bb88 <bt_compidtostr@@Base+0x4634>
    b3cc:	add	r0, pc, r0
    b3d0:	bx	lr
    b3d4:	ldr	r0, [pc, #1968]	; bb8c <bt_compidtostr@@Base+0x4638>
    b3d8:	add	r0, pc, r0
    b3dc:	bx	lr
    b3e0:	ldr	r0, [pc, #1960]	; bb90 <bt_compidtostr@@Base+0x463c>
    b3e4:	add	r0, pc, r0
    b3e8:	bx	lr
    b3ec:	ldr	r0, [pc, #1952]	; bb94 <bt_compidtostr@@Base+0x4640>
    b3f0:	add	r0, pc, r0
    b3f4:	bx	lr
    b3f8:	ldr	r0, [pc, #1944]	; bb98 <bt_compidtostr@@Base+0x4644>
    b3fc:	add	r0, pc, r0
    b400:	bx	lr
    b404:	ldr	r0, [pc, #1936]	; bb9c <bt_compidtostr@@Base+0x4648>
    b408:	add	r0, pc, r0
    b40c:	bx	lr
    b410:	ldr	r0, [pc, #1928]	; bba0 <bt_compidtostr@@Base+0x464c>
    b414:	add	r0, pc, r0
    b418:	bx	lr
    b41c:	ldr	r0, [pc, #1920]	; bba4 <bt_compidtostr@@Base+0x4650>
    b420:	add	r0, pc, r0
    b424:	bx	lr
    b428:	ldr	r0, [pc, #1912]	; bba8 <bt_compidtostr@@Base+0x4654>
    b42c:	add	r0, pc, r0
    b430:	bx	lr
    b434:	ldr	r0, [pc, #1904]	; bbac <bt_compidtostr@@Base+0x4658>
    b438:	add	r0, pc, r0
    b43c:	bx	lr
    b440:	ldr	r0, [pc, #1896]	; bbb0 <bt_compidtostr@@Base+0x465c>
    b444:	add	r0, pc, r0
    b448:	bx	lr
    b44c:	ldr	r0, [pc, #1888]	; bbb4 <bt_compidtostr@@Base+0x4660>
    b450:	add	r0, pc, r0
    b454:	bx	lr
    b458:	ldr	r0, [pc, #1880]	; bbb8 <bt_compidtostr@@Base+0x4664>
    b45c:	add	r0, pc, r0
    b460:	bx	lr
    b464:	ldr	r0, [pc, #1872]	; bbbc <bt_compidtostr@@Base+0x4668>
    b468:	add	r0, pc, r0
    b46c:	bx	lr
    b470:	ldr	r0, [pc, #1864]	; bbc0 <bt_compidtostr@@Base+0x466c>
    b474:	add	r0, pc, r0
    b478:	bx	lr
    b47c:	ldr	r0, [pc, #1856]	; bbc4 <bt_compidtostr@@Base+0x4670>
    b480:	add	r0, pc, r0
    b484:	bx	lr
    b488:	ldr	r0, [pc, #1848]	; bbc8 <bt_compidtostr@@Base+0x4674>
    b48c:	add	r0, pc, r0
    b490:	bx	lr
    b494:	ldr	r0, [pc, #1840]	; bbcc <bt_compidtostr@@Base+0x4678>
    b498:	add	r0, pc, r0
    b49c:	bx	lr
    b4a0:	ldr	r0, [pc, #1832]	; bbd0 <bt_compidtostr@@Base+0x467c>
    b4a4:	add	r0, pc, r0
    b4a8:	bx	lr
    b4ac:	ldr	r0, [pc, #1824]	; bbd4 <bt_compidtostr@@Base+0x4680>
    b4b0:	add	r0, pc, r0
    b4b4:	bx	lr
    b4b8:	ldr	r0, [pc, #1816]	; bbd8 <bt_compidtostr@@Base+0x4684>
    b4bc:	add	r0, pc, r0
    b4c0:	bx	lr
    b4c4:	ldr	r0, [pc, #1808]	; bbdc <bt_compidtostr@@Base+0x4688>
    b4c8:	add	r0, pc, r0
    b4cc:	bx	lr
    b4d0:	ldr	r0, [pc, #1800]	; bbe0 <bt_compidtostr@@Base+0x468c>
    b4d4:	add	r0, pc, r0
    b4d8:	bx	lr
    b4dc:	ldr	r0, [pc, #1792]	; bbe4 <bt_compidtostr@@Base+0x4690>
    b4e0:	add	r0, pc, r0
    b4e4:	bx	lr
    b4e8:	ldr	r0, [pc, #1784]	; bbe8 <bt_compidtostr@@Base+0x4694>
    b4ec:	add	r0, pc, r0
    b4f0:	bx	lr
    b4f4:	ldr	r0, [pc, #1776]	; bbec <bt_compidtostr@@Base+0x4698>
    b4f8:	add	r0, pc, r0
    b4fc:	bx	lr
    b500:	ldr	r0, [pc, #1768]	; bbf0 <bt_compidtostr@@Base+0x469c>
    b504:	add	r0, pc, r0
    b508:	bx	lr
    b50c:	ldr	r0, [pc, #1760]	; bbf4 <bt_compidtostr@@Base+0x46a0>
    b510:	add	r0, pc, r0
    b514:	bx	lr
    b518:	ldr	r0, [pc, #1752]	; bbf8 <bt_compidtostr@@Base+0x46a4>
    b51c:	add	r0, pc, r0
    b520:	bx	lr
    b524:	ldr	r0, [pc, #1744]	; bbfc <bt_compidtostr@@Base+0x46a8>
    b528:	add	r0, pc, r0
    b52c:	bx	lr
    b530:	ldr	r0, [pc, #1736]	; bc00 <bt_compidtostr@@Base+0x46ac>
    b534:	add	r0, pc, r0
    b538:	bx	lr
    b53c:	ldr	r0, [pc, #1728]	; bc04 <bt_compidtostr@@Base+0x46b0>
    b540:	add	r0, pc, r0
    b544:	bx	lr
    b548:	ldr	r0, [pc, #1720]	; bc08 <bt_compidtostr@@Base+0x46b4>
    b54c:	add	r0, pc, r0
    b550:	bx	lr
    b554:	ldr	r0, [pc, #1712]	; bc0c <bt_compidtostr@@Base+0x46b8>
    b558:	add	r0, pc, r0
    b55c:	bx	lr
    b560:	ldr	r0, [pc, #1704]	; bc10 <bt_compidtostr@@Base+0x46bc>
    b564:	add	r0, pc, r0
    b568:	bx	lr
    b56c:	ldr	r0, [pc, #1696]	; bc14 <bt_compidtostr@@Base+0x46c0>
    b570:	add	r0, pc, r0
    b574:	bx	lr
    b578:	ldr	r0, [pc, #1688]	; bc18 <bt_compidtostr@@Base+0x46c4>
    b57c:	add	r0, pc, r0
    b580:	bx	lr
    b584:	ldr	r0, [pc, #1680]	; bc1c <bt_compidtostr@@Base+0x46c8>
    b588:	add	r0, pc, r0
    b58c:	bx	lr
    b590:	ldr	r0, [pc, #1672]	; bc20 <bt_compidtostr@@Base+0x46cc>
    b594:	add	r0, pc, r0
    b598:	bx	lr
    b59c:	ldr	r0, [pc, #1664]	; bc24 <bt_compidtostr@@Base+0x46d0>
    b5a0:	add	r0, pc, r0
    b5a4:	bx	lr
    b5a8:	ldr	r0, [pc, #1656]	; bc28 <bt_compidtostr@@Base+0x46d4>
    b5ac:	add	r0, pc, r0
    b5b0:	bx	lr
    b5b4:	ldr	r0, [pc, #1648]	; bc2c <bt_compidtostr@@Base+0x46d8>
    b5b8:	add	r0, pc, r0
    b5bc:	bx	lr
    b5c0:	ldr	r0, [pc, #1640]	; bc30 <bt_compidtostr@@Base+0x46dc>
    b5c4:	add	r0, pc, r0
    b5c8:	bx	lr
    b5cc:	ldr	r0, [pc, #1632]	; bc34 <bt_compidtostr@@Base+0x46e0>
    b5d0:	add	r0, pc, r0
    b5d4:	bx	lr
    b5d8:	ldr	r0, [pc, #1624]	; bc38 <bt_compidtostr@@Base+0x46e4>
    b5dc:	add	r0, pc, r0
    b5e0:	bx	lr
    b5e4:	ldr	r0, [pc, #1616]	; bc3c <bt_compidtostr@@Base+0x46e8>
    b5e8:	add	r0, pc, r0
    b5ec:	bx	lr
    b5f0:	ldr	r0, [pc, #1608]	; bc40 <bt_compidtostr@@Base+0x46ec>
    b5f4:	add	r0, pc, r0
    b5f8:	bx	lr
    b5fc:	ldr	r0, [pc, #1600]	; bc44 <bt_compidtostr@@Base+0x46f0>
    b600:	add	r0, pc, r0
    b604:	bx	lr
    b608:	ldr	r0, [pc, #1592]	; bc48 <bt_compidtostr@@Base+0x46f4>
    b60c:	add	r0, pc, r0
    b610:	bx	lr
    b614:	ldr	r0, [pc, #1584]	; bc4c <bt_compidtostr@@Base+0x46f8>
    b618:	add	r0, pc, r0
    b61c:	bx	lr
    b620:	ldr	r0, [pc, #1576]	; bc50 <bt_compidtostr@@Base+0x46fc>
    b624:	add	r0, pc, r0
    b628:	bx	lr
    b62c:	ldr	r0, [pc, #1568]	; bc54 <bt_compidtostr@@Base+0x4700>
    b630:	add	r0, pc, r0
    b634:	bx	lr
    b638:	ldr	r0, [pc, #1560]	; bc58 <bt_compidtostr@@Base+0x4704>
    b63c:	add	r0, pc, r0
    b640:	bx	lr
    b644:	ldr	r0, [pc, #1552]	; bc5c <bt_compidtostr@@Base+0x4708>
    b648:	add	r0, pc, r0
    b64c:	bx	lr
    b650:	ldr	r0, [pc, #1544]	; bc60 <bt_compidtostr@@Base+0x470c>
    b654:	add	r0, pc, r0
    b658:	bx	lr
    b65c:	ldr	r0, [pc, #1536]	; bc64 <bt_compidtostr@@Base+0x4710>
    b660:	add	r0, pc, r0
    b664:	bx	lr
    b668:	ldr	r0, [pc, #1528]	; bc68 <bt_compidtostr@@Base+0x4714>
    b66c:	add	r0, pc, r0
    b670:	bx	lr
    b674:	ldr	r0, [pc, #1520]	; bc6c <bt_compidtostr@@Base+0x4718>
    b678:	add	r0, pc, r0
    b67c:	bx	lr
    b680:	ldr	r0, [pc, #1512]	; bc70 <bt_compidtostr@@Base+0x471c>
    b684:	add	r0, pc, r0
    b688:	bx	lr
    b68c:	ldr	r0, [pc, #1504]	; bc74 <bt_compidtostr@@Base+0x4720>
    b690:	add	r0, pc, r0
    b694:	bx	lr
    b698:	ldr	r0, [pc, #1496]	; bc78 <bt_compidtostr@@Base+0x4724>
    b69c:	add	r0, pc, r0
    b6a0:	bx	lr
    b6a4:	ldr	r0, [pc, #1488]	; bc7c <bt_compidtostr@@Base+0x4728>
    b6a8:	add	r0, pc, r0
    b6ac:	bx	lr
    b6b0:	ldr	r0, [pc, #1480]	; bc80 <bt_compidtostr@@Base+0x472c>
    b6b4:	add	r0, pc, r0
    b6b8:	bx	lr
    b6bc:	ldr	r0, [pc, #1472]	; bc84 <bt_compidtostr@@Base+0x4730>
    b6c0:	add	r0, pc, r0
    b6c4:	bx	lr
    b6c8:	ldr	r0, [pc, #1464]	; bc88 <bt_compidtostr@@Base+0x4734>
    b6cc:	add	r0, pc, r0
    b6d0:	bx	lr
    b6d4:	ldr	r0, [pc, #1456]	; bc8c <bt_compidtostr@@Base+0x4738>
    b6d8:	add	r0, pc, r0
    b6dc:	bx	lr
    b6e0:	ldr	r0, [pc, #1448]	; bc90 <bt_compidtostr@@Base+0x473c>
    b6e4:	add	r0, pc, r0
    b6e8:	bx	lr
    b6ec:	ldr	r0, [pc, #1440]	; bc94 <bt_compidtostr@@Base+0x4740>
    b6f0:	add	r0, pc, r0
    b6f4:	bx	lr
    b6f8:	ldr	r0, [pc, #1432]	; bc98 <bt_compidtostr@@Base+0x4744>
    b6fc:	add	r0, pc, r0
    b700:	bx	lr
    b704:	ldr	r0, [pc, #1424]	; bc9c <bt_compidtostr@@Base+0x4748>
    b708:	add	r0, pc, r0
    b70c:	bx	lr
    b710:	ldr	r0, [pc, #1416]	; bca0 <bt_compidtostr@@Base+0x474c>
    b714:	add	r0, pc, r0
    b718:	bx	lr
    b71c:	ldr	r0, [pc, #1408]	; bca4 <bt_compidtostr@@Base+0x4750>
    b720:	add	r0, pc, r0
    b724:	bx	lr
    b728:	ldr	r0, [pc, #1400]	; bca8 <bt_compidtostr@@Base+0x4754>
    b72c:	add	r0, pc, r0
    b730:	bx	lr
    b734:	ldr	r0, [pc, #1392]	; bcac <bt_compidtostr@@Base+0x4758>
    b738:	add	r0, pc, r0
    b73c:	bx	lr
    b740:	ldr	r0, [pc, #1384]	; bcb0 <bt_compidtostr@@Base+0x475c>
    b744:	add	r0, pc, r0
    b748:	bx	lr
    b74c:	ldr	r0, [pc, #1376]	; bcb4 <bt_compidtostr@@Base+0x4760>
    b750:	add	r0, pc, r0
    b754:	bx	lr
    b758:	ldr	r0, [pc, #1368]	; bcb8 <bt_compidtostr@@Base+0x4764>
    b75c:	add	r0, pc, r0
    b760:	bx	lr
    b764:	ldr	r0, [pc, #1360]	; bcbc <bt_compidtostr@@Base+0x4768>
    b768:	add	r0, pc, r0
    b76c:	bx	lr
    b770:	ldr	r0, [pc, #1352]	; bcc0 <bt_compidtostr@@Base+0x476c>
    b774:	add	r0, pc, r0
    b778:	bx	lr
    b77c:	ldr	r0, [pc, #1344]	; bcc4 <bt_compidtostr@@Base+0x4770>
    b780:	add	r0, pc, r0
    b784:	bx	lr
    b788:	ldr	r0, [pc, #1336]	; bcc8 <bt_compidtostr@@Base+0x4774>
    b78c:	add	r0, pc, r0
    b790:	bx	lr
    b794:	ldr	r0, [pc, #1328]	; bccc <bt_compidtostr@@Base+0x4778>
    b798:	add	r0, pc, r0
    b79c:	bx	lr
    b7a0:	ldr	r0, [pc, #1320]	; bcd0 <bt_compidtostr@@Base+0x477c>
    b7a4:	add	r0, pc, r0
    b7a8:	bx	lr
    b7ac:	ldr	r0, [pc, #1312]	; bcd4 <bt_compidtostr@@Base+0x4780>
    b7b0:	add	r0, pc, r0
    b7b4:	bx	lr
    b7b8:	ldr	r0, [pc, #1304]	; bcd8 <bt_compidtostr@@Base+0x4784>
    b7bc:	add	r0, pc, r0
    b7c0:	bx	lr
    b7c4:	ldr	r0, [pc, #1296]	; bcdc <bt_compidtostr@@Base+0x4788>
    b7c8:	add	r0, pc, r0
    b7cc:	bx	lr
    b7d0:	ldr	r0, [pc, #1288]	; bce0 <bt_compidtostr@@Base+0x478c>
    b7d4:	add	r0, pc, r0
    b7d8:	bx	lr
    b7dc:	ldr	r0, [pc, #1280]	; bce4 <bt_compidtostr@@Base+0x4790>
    b7e0:	add	r0, pc, r0
    b7e4:	bx	lr
    b7e8:	ldr	r0, [pc, #1272]	; bce8 <bt_compidtostr@@Base+0x4794>
    b7ec:	add	r0, pc, r0
    b7f0:	bx	lr
    b7f4:	ldr	r0, [pc, #1264]	; bcec <bt_compidtostr@@Base+0x4798>
    b7f8:	add	r0, pc, r0
    b7fc:	bx	lr
    b800:	ldr	r0, [pc, #1256]	; bcf0 <bt_compidtostr@@Base+0x479c>
    b804:	add	r0, pc, r0
    b808:	bx	lr
    b80c:	ldr	r0, [pc, #1248]	; bcf4 <bt_compidtostr@@Base+0x47a0>
    b810:	add	r0, pc, r0
    b814:	bx	lr
    b818:	ldr	r0, [pc, #1240]	; bcf8 <bt_compidtostr@@Base+0x47a4>
    b81c:	add	r0, pc, r0
    b820:	bx	lr
    b824:	ldr	r0, [pc, #1232]	; bcfc <bt_compidtostr@@Base+0x47a8>
    b828:	add	r0, pc, r0
    b82c:	bx	lr
    b830:	ldr	r0, [pc, #1224]	; bd00 <bt_compidtostr@@Base+0x47ac>
    b834:	add	r0, pc, r0
    b838:	bx	lr
    b83c:	ldr	r0, [pc, #1216]	; bd04 <bt_compidtostr@@Base+0x47b0>
    b840:	add	r0, pc, r0
    b844:	bx	lr
    b848:	ldr	r0, [pc, #1208]	; bd08 <bt_compidtostr@@Base+0x47b4>
    b84c:	add	r0, pc, r0
    b850:	bx	lr
    b854:	ldr	r0, [pc, #1200]	; bd0c <bt_compidtostr@@Base+0x47b8>
    b858:	add	r0, pc, r0
    b85c:	bx	lr
    b860:	ldr	r0, [pc, #1192]	; bd10 <bt_compidtostr@@Base+0x47bc>
    b864:	add	r0, pc, r0
    b868:	bx	lr
    b86c:	ldr	r0, [pc, #1184]	; bd14 <bt_compidtostr@@Base+0x47c0>
    b870:	add	r0, pc, r0
    b874:	bx	lr
    b878:	ldr	r0, [pc, #1176]	; bd18 <bt_compidtostr@@Base+0x47c4>
    b87c:	add	r0, pc, r0
    b880:	bx	lr
    b884:	ldr	r0, [pc, #1168]	; bd1c <bt_compidtostr@@Base+0x47c8>
    b888:	add	r0, pc, r0
    b88c:	bx	lr
    b890:	ldr	r0, [pc, #1160]	; bd20 <bt_compidtostr@@Base+0x47cc>
    b894:	add	r0, pc, r0
    b898:	bx	lr
    b89c:	ldr	r0, [pc, #1152]	; bd24 <bt_compidtostr@@Base+0x47d0>
    b8a0:	add	r0, pc, r0
    b8a4:	bx	lr
    b8a8:	ldr	r0, [pc, #1144]	; bd28 <bt_compidtostr@@Base+0x47d4>
    b8ac:	add	r0, pc, r0
    b8b0:	bx	lr
    b8b4:	ldr	r0, [pc, #1136]	; bd2c <bt_compidtostr@@Base+0x47d8>
    b8b8:	add	r0, pc, r0
    b8bc:	bx	lr
    b8c0:	ldr	r0, [pc, #1128]	; bd30 <bt_compidtostr@@Base+0x47dc>
    b8c4:	add	r0, pc, r0
    b8c8:	bx	lr
    b8cc:	ldr	r0, [pc, #1120]	; bd34 <bt_compidtostr@@Base+0x47e0>
    b8d0:	add	r0, pc, r0
    b8d4:	bx	lr
    b8d8:	ldr	r0, [pc, #1112]	; bd38 <bt_compidtostr@@Base+0x47e4>
    b8dc:	add	r0, pc, r0
    b8e0:	bx	lr
    b8e4:	ldr	r0, [pc, #1104]	; bd3c <bt_compidtostr@@Base+0x47e8>
    b8e8:	add	r0, pc, r0
    b8ec:	bx	lr
    b8f0:	ldr	r0, [pc, #1096]	; bd40 <bt_compidtostr@@Base+0x47ec>
    b8f4:	add	r0, pc, r0
    b8f8:	bx	lr
    b8fc:	ldr	r0, [pc, #1088]	; bd44 <bt_compidtostr@@Base+0x47f0>
    b900:	add	r0, pc, r0
    b904:	bx	lr
    b908:	ldr	r0, [pc, #1080]	; bd48 <bt_compidtostr@@Base+0x47f4>
    b90c:	add	r0, pc, r0
    b910:	bx	lr
    b914:	ldr	r0, [pc, #1072]	; bd4c <bt_compidtostr@@Base+0x47f8>
    b918:	add	r0, pc, r0
    b91c:	bx	lr
    b920:	ldr	r0, [pc, #1064]	; bd50 <bt_compidtostr@@Base+0x47fc>
    b924:	add	r0, pc, r0
    b928:	bx	lr
    b92c:	ldr	r0, [pc, #1056]	; bd54 <bt_compidtostr@@Base+0x4800>
    b930:	add	r0, pc, r0
    b934:	bx	lr
    b938:	ldr	r0, [pc, #1048]	; bd58 <bt_compidtostr@@Base+0x4804>
    b93c:	add	r0, pc, r0
    b940:	bx	lr
    b944:	ldr	r0, [pc, #1040]	; bd5c <bt_compidtostr@@Base+0x4808>
    b948:	add	r0, pc, r0
    b94c:	bx	lr
    b950:	ldr	r0, [pc, #1032]	; bd60 <bt_compidtostr@@Base+0x480c>
    b954:	add	r0, pc, r0
    b958:	bx	lr
    b95c:	ldr	r0, [pc, #1024]	; bd64 <bt_compidtostr@@Base+0x4810>
    b960:	add	r0, pc, r0
    b964:	bx	lr
    b968:	ldr	r0, [pc, #1016]	; bd68 <bt_compidtostr@@Base+0x4814>
    b96c:	add	r0, pc, r0
    b970:	bx	lr
    b974:	ldr	r0, [pc, #1008]	; bd6c <bt_compidtostr@@Base+0x4818>
    b978:	add	r0, pc, r0
    b97c:	bx	lr
    b980:	ldr	r0, [pc, #1000]	; bd70 <bt_compidtostr@@Base+0x481c>
    b984:	add	r0, pc, r0
    b988:	bx	lr
    b98c:	ldr	r0, [pc, #992]	; bd74 <bt_compidtostr@@Base+0x4820>
    b990:	add	r0, pc, r0
    b994:	bx	lr
    b998:	ldr	r0, [pc, #984]	; bd78 <bt_compidtostr@@Base+0x4824>
    b99c:	add	r0, pc, r0
    b9a0:	bx	lr
    b9a4:	ldr	r0, [pc, #976]	; bd7c <bt_compidtostr@@Base+0x4828>
    b9a8:	add	r0, pc, r0
    b9ac:	bx	lr
    b9b0:	ldr	r0, [pc, #968]	; bd80 <bt_compidtostr@@Base+0x482c>
    b9b4:	add	r0, pc, r0
    b9b8:	bx	lr
    b9bc:	ldr	r0, [pc, #960]	; bd84 <bt_compidtostr@@Base+0x4830>
    b9c0:	add	r0, pc, r0
    b9c4:	bx	lr
    b9c8:	ldr	r0, [pc, #952]	; bd88 <bt_compidtostr@@Base+0x4834>
    b9cc:	add	r0, pc, r0
    b9d0:	bx	lr
    b9d4:	ldr	r0, [pc, #944]	; bd8c <bt_compidtostr@@Base+0x4838>
    b9d8:	add	r0, pc, r0
    b9dc:	bx	lr
    b9e0:	ldr	r0, [pc, #936]	; bd90 <bt_compidtostr@@Base+0x483c>
    b9e4:	add	r0, pc, r0
    b9e8:	bx	lr
    b9ec:	ldr	r0, [pc, #928]	; bd94 <bt_compidtostr@@Base+0x4840>
    b9f0:	add	r0, pc, r0
    b9f4:	bx	lr
    b9f8:	ldr	r0, [pc, #920]	; bd98 <bt_compidtostr@@Base+0x4844>
    b9fc:	add	r0, pc, r0
    ba00:	bx	lr
    ba04:	ldr	r0, [pc, #912]	; bd9c <bt_compidtostr@@Base+0x4848>
    ba08:	add	r0, pc, r0
    ba0c:	bx	lr
    ba10:	ldr	r0, [pc, #904]	; bda0 <bt_compidtostr@@Base+0x484c>
    ba14:	add	r0, pc, r0
    ba18:	bx	lr
    ba1c:	ldr	r0, [pc, #896]	; bda4 <bt_compidtostr@@Base+0x4850>
    ba20:	add	r0, pc, r0
    ba24:	bx	lr
    ba28:	ldr	r0, [pc, #888]	; bda8 <bt_compidtostr@@Base+0x4854>
    ba2c:	add	r0, pc, r0
    ba30:	bx	lr
    ba34:	ldr	r0, [pc, #880]	; bdac <bt_compidtostr@@Base+0x4858>
    ba38:	add	r0, pc, r0
    ba3c:	bx	lr
    ba40:	ldr	r0, [pc, #872]	; bdb0 <bt_compidtostr@@Base+0x485c>
    ba44:	add	r0, pc, r0
    ba48:	bx	lr
    ba4c:	ldr	r0, [pc, #864]	; bdb4 <bt_compidtostr@@Base+0x4860>
    ba50:	add	r0, pc, r0
    ba54:	bx	lr
    ba58:	ldr	r0, [pc, #856]	; bdb8 <bt_compidtostr@@Base+0x4864>
    ba5c:	add	r0, pc, r0
    ba60:	bx	lr
    ba64:	ldr	r0, [pc, #848]	; bdbc <bt_compidtostr@@Base+0x4868>
    ba68:	add	r0, pc, r0
    ba6c:	bx	lr
    ba70:	ldr	r0, [pc, #840]	; bdc0 <bt_compidtostr@@Base+0x486c>
    ba74:	add	r0, pc, r0
    ba78:	bx	lr
    ba7c:	ldr	r0, [pc, #832]	; bdc4 <bt_compidtostr@@Base+0x4870>
    ba80:	add	r0, pc, r0
    ba84:	bx	lr
    ba88:	ldr	r0, [pc, #824]	; bdc8 <bt_compidtostr@@Base+0x4874>
    ba8c:	add	r0, pc, r0
    ba90:	bx	lr
    ba94:	ldr	r0, [pc, #816]	; bdcc <bt_compidtostr@@Base+0x4878>
    ba98:	add	r0, pc, r0
    ba9c:	bx	lr
    baa0:	andeq	r8, r0, lr, lsl #17
    baa4:	muleq	r0, r3, r8
    baa8:			; <UNDEFINED> instruction: 0x000088b6
    baac:			; <UNDEFINED> instruction: 0x000088b7
    bab0:	andeq	r8, r0, r5, asr #17
    bab4:	strdeq	r8, [r0], -sp
    bab8:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    babc:	andeq	r8, r0, r1, lsl #18
    bac0:	andeq	r8, r0, sp, lsl r9
    bac4:	andeq	r8, r0, r4, lsr #18
    bac8:	andeq	r8, r0, r3, lsr #18
    bacc:	andeq	r8, r0, r4, lsr r9
    bad0:	andeq	r8, r0, fp, lsr r9
    bad4:	muleq	r0, lr, r2
    bad8:	andeq	r8, r0, r7, lsr r9
    badc:	andeq	r8, r0, lr, lsr r9
    bae0:	andeq	r8, r0, sl, asr #18
    bae4:	andeq	r8, r0, ip, asr r9
    bae8:	andeq	r8, r0, r2, lsl #19
    baec:	andeq	r8, r0, r2, lsr #19
    baf0:			; <UNDEFINED> instruction: 0x000089b4
    baf4:	andeq	r8, r0, r1, ror #19
    baf8:	ldrdeq	r8, [r0], -sp
    bafc:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    bb00:	strdeq	r8, [r0], -r5
    bb04:	strdeq	r8, [r0], -sp
    bb08:	strdeq	r8, [r0], -r9
    bb0c:	andeq	r8, r0, r5, lsr #20
    bb10:	andeq	r8, r0, r9, lsr #20
    bb14:	andeq	r8, r0, r9, lsr #20
    bb18:	andeq	r8, r0, r5, asr #20
    bb1c:	andeq	r8, r0, r5, asr #20
    bb20:	andeq	r8, r0, fp, asr #20
    bb24:	andeq	r8, r0, sp, ror #20
    bb28:	andeq	r8, r0, fp, ror sl
    bb2c:	andeq	r8, r0, r3, lsl #21
    bb30:	andeq	r8, r0, ip, lsl #21
    bb34:	andeq	r8, r0, sl, lsl #21
    bb38:	andeq	r8, r0, lr, lsl #21
    bb3c:	muleq	r0, fp, sl
    bb40:	andeq	r8, r0, fp, lsr #21
    bb44:	andeq	r8, r0, sp, lsr #21
    bb48:			; <UNDEFINED> instruction: 0x00008ab8
    bb4c:			; <UNDEFINED> instruction: 0x00008ab4
    bb50:			; <UNDEFINED> instruction: 0x00008ab8
    bb54:	ldrdeq	r8, [r0], -r9
    bb58:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    bb5c:	strdeq	r8, [r0], -r6
    bb60:	andeq	r8, r0, r9, lsl #22
    bb64:	andeq	r8, r0, lr, lsl #22
    bb68:	andeq	r8, r0, sp, lsl #22
    bb6c:	andeq	r8, r0, r9, lsr #22
    bb70:	andeq	r8, r0, pc, lsr fp
    bb74:	andeq	r8, r0, ip, lsr fp
    bb78:	andeq	r8, r0, pc, asr fp
    bb7c:	andeq	r8, r0, r0, ror #22
    bb80:	andeq	r8, r0, lr, ror fp
    bb84:	muleq	r0, r1, fp
    bb88:	muleq	r0, pc, fp	; <UNPREDICTABLE>
    bb8c:	andeq	r8, r0, ip, lsr #23
    bb90:	andeq	r8, r0, r7, asr #23
    bb94:	andeq	r8, r0, r8, asr #23
    bb98:	andeq	r8, r0, r6, asr #23
    bb9c:	ldrdeq	r8, [r0], -r4
    bba0:	andeq	r8, r0, ip, ror #23
    bba4:	andeq	r8, r0, pc, ror #23
    bba8:	andeq	r8, r0, r3, lsl #24
    bbac:	andeq	r8, r0, r5, lsl ip
    bbb0:	andeq	r8, r0, r1, lsl ip
    bbb4:	andeq	r8, r0, r7, lsl ip
    bbb8:	andeq	r8, r0, sp, lsr #24
    bbbc:	andeq	r8, r0, r3, lsr ip
    bbc0:	andeq	r8, r0, r3, lsr ip
    bbc4:	andeq	r8, r0, sl, asr ip
    bbc8:	andeq	r8, r0, lr, asr ip
    bbcc:	andeq	r8, r0, r1, ror #24
    bbd0:	andeq	r8, r0, r0, ror ip
    bbd4:	andeq	r8, r0, r2, lsl #25
    bbd8:	andeq	r8, r0, pc, ror ip
    bbdc:	andeq	r8, r0, sp, lsl #25
    bbe0:	andeq	r8, r0, pc, lsl #25
    bbe4:			; <UNDEFINED> instruction: 0x00008cb0
    bbe8:	andeq	r8, r0, r2, asr #25
    bbec:			; <UNDEFINED> instruction: 0x00008cbf
    bbf0:	andeq	r8, r0, ip, asr #25
    bbf4:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    bbf8:	andeq	r8, r0, sp, ror #25
    bbfc:	andeq	r8, r0, pc, ror #25
    bc00:	andeq	r8, r0, lr, ror #25
    bc04:	strdeq	r8, [r0], -r5
    bc08:	strdeq	r8, [r0], -fp
    bc0c:	andeq	r8, r0, r3, asr sp
    bc10:	andeq	r8, r0, r6, asr sp
    bc14:	andeq	r8, r0, fp, asr sp
    bc18:	andeq	r8, r0, r7, ror #26
    bc1c:	andeq	r8, r0, r5, ror sp
    bc20:	andeq	r8, r0, r1, ror sp
    bc24:	andeq	r8, r0, fp, ror sp
    bc28:	andeq	r8, r0, fp, ror sp
    bc2c:	andeq	r8, r0, lr, ror sp
    bc30:	andeq	r8, r0, r5, lsr #27
    bc34:			; <UNDEFINED> instruction: 0x00008dbe
    bc38:	andeq	r8, r0, r0, asr #27
    bc3c:	ldrdeq	r8, [r0], -r2
    bc40:	ldrdeq	r8, [r0], -r1
    bc44:	ldrdeq	r8, [r0], -r1
    bc48:	strdeq	r8, [r0], -ip
    bc4c:	andeq	r8, r0, r2, lsl #28
    bc50:	andeq	r8, r0, r2, lsl #28
    bc54:	andeq	r8, r0, fp, lsl #28
    bc58:	andeq	r8, r0, fp, lsl #28
    bc5c:	andeq	r8, r0, r8, lsl #28
    bc60:	andeq	r8, r0, r8, lsl lr
    bc64:	andeq	r8, r0, fp, lsr #28
    bc68:	andeq	r8, r0, lr, lsr #28
    bc6c:	andeq	r8, r0, r8, lsr lr
    bc70:	andeq	r8, r0, fp, asr #28
    bc74:	andeq	r8, r0, r2, asr lr
    bc78:	andeq	r8, r0, r0, asr lr
    bc7c:	andeq	r8, r0, ip, ror lr
    bc80:	andeq	r8, r0, r5, lsl #29
    bc84:	andeq	r8, r0, r1, lsl #29
    bc88:	muleq	r0, r9, lr
    bc8c:	muleq	r0, pc, lr	; <UNPREDICTABLE>
    bc90:			; <UNDEFINED> instruction: 0x00008eb0
    bc94:	andeq	r8, r0, r3, asr #29
    bc98:	andeq	r8, r0, lr, asr #29
    bc9c:	ldrdeq	r8, [r0], -lr
    bca0:	andeq	r8, r0, r9, ror #29
    bca4:	andeq	r8, r0, sl, ror #29
    bca8:	andeq	r8, r0, sl, lsl #30
    bcac:	andeq	r8, r0, r6, lsr pc
    bcb0:	andeq	r8, r0, sl, lsr pc
    bcb4:	andeq	r8, r0, r2, asr #30
    bcb8:	andeq	r8, r0, r8, asr #30
    bcbc:	andeq	r8, r0, ip, asr #30
    bcc0:	andeq	r8, r0, lr, asr pc
    bcc4:	andeq	r8, r0, r9, ror #30
    bcc8:	andeq	r8, r0, r3, ror #30
    bccc:	andeq	r8, r0, lr, ror #30
    bcd0:	andeq	r8, r0, r7, lsl #31
    bcd4:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    bcd8:	andeq	r8, r0, fp, lsl #31
    bcdc:	andeq	r8, r0, r6, lsr #31
    bce0:	andeq	r8, r0, r9, lsr #31
    bce4:			; <UNDEFINED> instruction: 0x00008fb5
    bce8:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bcec:	andeq	r8, r0, r8, ror #31
    bcf0:	strdeq	r8, [r0], -r5
    bcf4:	andeq	r9, r0, r7
    bcf8:	andeq	r9, r0, r7
    bcfc:	andeq	r9, r0, sp
    bd00:	andeq	r9, r0, r4, lsr #32
    bd04:	andeq	r9, r0, r1, lsr r0
    bd08:	andeq	r9, r0, pc, lsr #32
    bd0c:	andeq	r9, r0, r2, asr #32
    bd10:	andeq	r9, r0, sl, asr r0
    bd14:	andeq	r9, r0, fp, asr r0
    bd18:	andeq	r9, r0, r4, ror r0
    bd1c:	andeq	r9, r0, pc, lsl #1
    bd20:	muleq	r0, r0, r0
    bd24:	muleq	r0, r4, r0
    bd28:	muleq	r0, sl, r0
    bd2c:	muleq	r0, r4, r0
    bd30:	andeq	r9, r0, r9, lsr #1
    bd34:	strheq	r9, [r0], -r9	; <UNPREDICTABLE>
    bd38:	strheq	r9, [r0], -lr
    bd3c:	strheq	r9, [r0], -r9	; <UNPREDICTABLE>
    bd40:	andeq	r9, r0, sp, asr #1
    bd44:	andeq	r9, r0, pc, asr #1
    bd48:	andeq	r9, r0, r2, ror #1
    bd4c:	strdeq	r9, [r0], -r4
    bd50:	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    bd54:	strdeq	r9, [r0], -sl
    bd58:	andeq	r9, r0, pc, lsl #2
    bd5c:	andeq	r9, r0, r1, lsl r1
    bd60:	andeq	r9, r0, lr, lsl #2
    bd64:	andeq	r9, r0, sl, lsr #2
    bd68:	andeq	r9, r0, pc, lsr #2
    bd6c:	andeq	r9, r0, r6, lsr r1
    bd70:	andeq	r9, r0, r7, asr r1
    bd74:	andeq	r9, r0, r9, asr r1
    bd78:	andeq	r9, r0, r2, ror r1
    bd7c:	muleq	r0, r7, r1
    bd80:	muleq	r0, r5, r1
    bd84:	muleq	r0, r3, r1
    bd88:	andeq	r9, r0, r7, lsr #3
    bd8c:	andeq	r9, r0, pc, lsr #3
    bd90:			; <UNDEFINED> instruction: 0x000091b7
    bd94:	ldrdeq	r9, [r0], -r8
    bd98:	ldrdeq	r9, [r0], -r1
    bd9c:	andeq	r9, r0, pc, asr #3
    bda0:	strdeq	r9, [r0], -r1
    bda4:	andeq	r9, r0, ip, lsl #4
    bda8:	andeq	r9, r0, r0, lsl r2
    bdac:	andeq	r9, r0, pc, lsr #4
    bdb0:	andeq	r9, r0, pc, lsr #4
    bdb4:	andeq	r9, r0, r2, asr #4
    bdb8:	andeq	r9, r0, sl, asr r2
    bdbc:	andeq	r9, r0, r4, ror #4
    bdc0:	andeq	r9, r0, pc, ror #4
    bdc4:	andeq	r9, r0, pc, ror r2
    bdc8:	andeq	r9, r0, r9, lsr #5
    bdcc:	andeq	r9, r0, sp, lsr #5
    bdd0:	andeq	r8, r0, fp, asr ip
    bdd4:	andeq	r8, r0, r2, ror #24
    bdd8:	andeq	r8, r0, r8, ror ip
    bddc:	andeq	r8, r0, r3, lsr #25
    bde0:			; <UNDEFINED> instruction: 0x00008cbf
    bde4:			; <UNDEFINED> instruction: 0x00008cbd
    bde8:			; <UNDEFINED> instruction: 0x00008cbc
    bdec:			; <UNDEFINED> instruction: 0x00008cba
    bdf0:			; <UNDEFINED> instruction: 0x00008cbe
    bdf4:	ldrdeq	r8, [r0], -r7
    bdf8:	andeq	r8, r0, r3, ror #25
    bdfc:	andeq	r8, r0, sl, ror #25
    be00:	andeq	r8, r0, fp, ror #25
    be04:	andeq	r8, r0, r4, lsl sp
    be08:	andeq	r8, r0, r3, lsr #26
    be0c:	andeq	r8, r0, r1, lsr sp
    be10:	andeq	r8, r0, sl, lsr sp
    be14:	andeq	r8, r0, fp, asr #26
    be18:	andeq	r8, r0, r2, asr sp
    be1c:	andeq	r8, r0, ip, ror #26
    be20:	andeq	r8, r0, r6, ror sp
    be24:	andeq	r8, r0, r2, ror sp
    be28:	andeq	r8, r0, r0, lsl #27
    be2c:	andeq	r8, r0, r1, lsl #27
    be30:	andeq	r8, r0, sl, lsl #27
    be34:	muleq	r0, sp, sp
    be38:	muleq	r0, r8, sp
    be3c:	muleq	r0, r8, sp
    be40:			; <UNDEFINED> instruction: 0x00008db6
    be44:	andeq	r8, r0, r1, asr #27
    be48:	andeq	r8, r0, r5, asr #27
    be4c:	andeq	r8, r0, r0, ror #27
    be50:	andeq	r8, r0, fp, ror #27
    be54:	andeq	r8, r0, ip, ror #27
    be58:	andeq	r8, r0, sl, lsl #28
    be5c:	andeq	r8, r0, pc, lsl #28
    be60:	andeq	r8, r0, ip, lsl lr
    be64:	andeq	r8, r0, r2, lsr lr
    be68:	andeq	r8, r0, sp, lsr #28
    be6c:	andeq	r8, r0, ip, lsr #28
    be70:	andeq	r8, r0, sp, ror #28
    be74:	andeq	r8, r0, r8, ror #28
    be78:	andeq	r8, r0, r2, ror lr
    be7c:	andeq	r8, r0, sp, lsr #29
    be80:	andeq	r8, r0, sl, lsr #29
    be84:	andeq	r8, r0, ip, lsr #29
    be88:			; <UNDEFINED> instruction: 0x00008eb9
    be8c:			; <UNDEFINED> instruction: 0x00008eb9
    be90:	andeq	r8, r0, r0, asr #29
    be94:	andeq	r8, r0, pc, ror #29
    be98:	strdeq	r8, [r0], -r1
    be9c:	strdeq	r8, [r0], -r6
    bea0:	andeq	r8, r0, r5, lsl pc
    bea4:	andeq	r8, r0, r4, lsl pc
    bea8:	andeq	r8, r0, r2, lsl pc
    beac:	andeq	r8, r0, r2, lsl pc
    beb0:	andeq	r8, r0, r2, lsl pc
    beb4:	andeq	r8, r0, r5, lsl pc
    beb8:	andeq	r8, r0, lr, lsr #30
    bebc:	andeq	r8, r0, r8, asr #30
    bec0:	andeq	r8, r0, r6, asr #30
    bec4:	andeq	r8, r0, r4, asr #30
    bec8:	andeq	r8, r0, r1, ror #30
    becc:	andeq	r8, r0, r3, ror pc
    bed0:	andeq	r8, r0, r5, lsl #31
    bed4:	andeq	r8, r0, r2, lsr #31
    bed8:	andeq	r8, r0, r9, lsr #31
    bedc:	andeq	r8, r0, r9, lsr #31
    bee0:	andeq	r8, r0, r5, asr #31
    bee4:	andeq	r8, r0, fp, asr #31
    bee8:	ldrdeq	r8, [r0], -ip
    beec:	andeq	r8, r0, r3, ror #31
    bef0:	andeq	r9, r0, r4, lsl r0
    bef4:	andeq	r9, r0, r8, lsr #32
    bef8:	andeq	r9, r0, sl, asr r0
    befc:	andeq	r9, r0, r0, rrx
    bf00:	andeq	r9, r0, r9, rrx
    bf04:	andeq	r9, r0, r1, ror r0
    bf08:	andeq	r9, r0, r0, lsl #1
    bf0c:	andeq	r9, r0, r2, lsl #1
    bf10:	muleq	r0, r0, r0
    bf14:	muleq	r0, lr, r0
    bf18:	andeq	r9, r0, r1, lsr #1
    bf1c:	strheq	r9, [r0], -r0
    bf20:	andeq	r9, r0, ip, lsr #1
    bf24:	andeq	r9, r0, r2, asr #1
    bf28:	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    bf2c:	andeq	r9, r0, r2, ror #1
    bf30:	andeq	r9, r0, r8, ror #1
    bf34:	strdeq	r9, [r0], -fp
    bf38:	andeq	r9, r0, r7, lsl #2
    bf3c:	andeq	r9, r0, r4, lsl #2
    bf40:	andeq	r9, r0, pc, lsl #2
    bf44:	andeq	r9, r0, r2, lsr #2
    bf48:	andeq	r9, r0, r2, lsr #2
    bf4c:	andeq	r9, r0, sp, asr #2
    bf50:	andeq	r9, r0, lr, asr #2
    bf54:	andeq	r9, r0, sl, asr #2
    bf58:	andeq	r9, r0, r6, lsl #3
    bf5c:	andeq	r9, r0, sl, lsl #3
    bf60:	muleq	r0, r2, r1
    bf64:	muleq	r0, lr, r1
    bf68:	muleq	r0, ip, r1
    bf6c:	andeq	r9, r0, r5, lsr #3
    bf70:	andeq	r9, r0, sp, lsr #3
    bf74:			; <UNDEFINED> instruction: 0x000091ba
    bf78:			; <UNDEFINED> instruction: 0x000091bc
    bf7c:	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    bf80:	andeq	r9, r0, r7, ror #3
    bf84:	andeq	r9, r0, sl, ror #3
    bf88:	andeq	r9, r0, fp, ror #3
    bf8c:	strdeq	r9, [r0], -r7
    bf90:	andeq	r9, r0, r4, lsl #4
    bf94:	andeq	r9, r0, r4, lsl #4
    bf98:	andeq	r9, r0, r4, lsl r2
    bf9c:	andeq	r9, r0, r2, lsl r2
    bfa0:	andeq	r9, r0, r1, lsl r2
    bfa4:	andeq	r9, r0, r9, lsl r2
    bfa8:	andeq	r9, r0, sp, lsl r2
    bfac:	andeq	r9, r0, fp, lsl r2
    bfb0:	andeq	r9, r0, r9, lsr r2
    bfb4:	andeq	r9, r0, r2, asr #4
    bfb8:	andeq	r9, r0, pc, asr #4
    bfbc:	andeq	r9, r0, sl, ror #4
    bfc0:	andeq	r9, r0, r5, ror r2
    bfc4:	andeq	r9, r0, r0, lsl #5
    bfc8:	muleq	r0, r4, r2
    bfcc:	andeq	r9, r0, lr, lsl #5
    bfd0:	muleq	r0, r7, r2
    bfd4:	ldrdeq	r9, [r0], -r8
    bfd8:	andeq	r9, r0, r9, ror #5
    bfdc:	andeq	r9, r0, sl, ror #5
    bfe0:	strdeq	r9, [r0], -r4
    bfe4:	strdeq	r9, [r0], -r6
    bfe8:	andeq	r9, r0, r7, lsl #6
    bfec:	andeq	r9, r0, pc, lsl r3
    bff0:	andeq	r9, r0, r8, lsr #6
    bff4:	andeq	r9, r0, r5, lsr r3
    bff8:	andeq	r9, r0, sp, lsr r3
    bffc:	andeq	r9, r0, pc, lsr r3
    c000:	andeq	r9, r0, r1, asr #6
    c004:	andeq	r9, r0, sl, ror #6
    c008:	andeq	r9, r0, r4, ror r3
    c00c:	andeq	r9, r0, ip, ror r3
    c010:	muleq	r0, lr, r3
    c014:	muleq	r0, pc, r3	; <UNPREDICTABLE>
    c018:	muleq	r0, pc, r3	; <UNPREDICTABLE>
    c01c:			; <UNDEFINED> instruction: 0x000093bc
    c020:	andeq	r9, r0, fp, asr #7
    c024:	andeq	r9, r0, sp, asr #7
    c028:	andeq	r9, r0, r8, ror #7
    c02c:	andeq	r9, r0, r6, lsl #8
    c030:	andeq	r9, r0, r0, lsl r4
    c034:	andeq	r9, r0, sl, lsr r4
    c038:	andeq	r9, r0, sp, lsr r4
    c03c:	andeq	r9, r0, lr, asr #8
    c040:	andeq	r9, r0, r8, ror r4
    c044:	muleq	r0, r2, r4
    c048:	muleq	r0, lr, r4
    c04c:	andeq	r9, r0, r6, lsr #9
    c050:	andeq	r9, r0, pc, asr #9
    c054:	andeq	r9, r0, r6, asr #9
    c058:	andeq	r9, r0, r7, asr #9
    c05c:	ldrdeq	r9, [r0], -sp
    c060:	ldrdeq	r9, [r0], -sp
    c064:	andeq	r9, r0, r3, ror #9
    c068:	andeq	r9, r0, r1, lsl #10
    c06c:	strdeq	r9, [r0], -sp
    c070:	andeq	r9, r0, sl, lsl #10
    c074:	andeq	r9, r0, r2, lsr #10
    c078:	andeq	r9, r0, r1, lsr r5
    c07c:	andeq	r9, r0, r7, asr #10
    c080:	andeq	r9, r0, sl, ror #10
    c084:	andeq	r9, r0, r5, ror r5
    c088:	andeq	r9, r0, fp, ror r5
    c08c:	muleq	r0, r6, r5
    c090:	muleq	r0, r9, r5
    c094:	andeq	r9, r0, pc, asr #11
    c098:	ldrdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    c09c:	andeq	r9, r0, pc, ror #11
    c0a0:	andeq	r9, r0, r0, lsl #12
    c0a4:	andeq	r9, r0, r5, lsl r6
    c0a8:	andeq	r9, r0, ip, lsl r6
    c0ac:	andeq	r9, r0, r0, lsr #12
    c0b0:	andeq	r9, r0, r4, asr #12
    c0b4:	andeq	r9, r0, sl, asr #12
    c0b8:	andeq	r9, r0, r1, asr r6
    c0bc:	andeq	r9, r0, lr, asr r6
    c0c0:	andeq	r9, r0, lr, asr r6
    c0c4:	andeq	r9, r0, r3, ror #12
    c0c8:	andeq	r9, r0, r2, lsl #13
    c0cc:	andeq	r9, r0, r4, lsl #13
    c0d0:	muleq	r0, r5, r6
    c0d4:			; <UNDEFINED> instruction: 0x000096b9
    c0d8:	ldrdeq	r9, [r0], -r9	; <UNPREDICTABLE>
    c0dc:	ldrdeq	r9, [r0], -sl
    c0e0:	andeq	r9, r0, pc, lsl #14
    c0e4:	andeq	r9, r0, r3, lsl r7
    c0e8:	andeq	r9, r0, lr, lsl r7
    c0ec:	andeq	r9, r0, r6, lsr r7
    c0f0:	andeq	r9, r0, r7, lsr r7
    c0f4:	andeq	r9, r0, r5, lsr r7
    c0f8:	andeq	r9, r0, lr, lsr r7
    c0fc:	andeq	r9, r0, fp, asr #14
    c100:	andeq	r9, r0, sp, asr #14
    c104:	ldr	r0, [pc, #-828]	; bdd0 <bt_compidtostr@@Base+0x487c>
    c108:	add	r0, pc, r0
    c10c:	bx	lr
    c110:	ldr	r0, [pc, #-836]	; bdd4 <bt_compidtostr@@Base+0x4880>
    c114:	add	r0, pc, r0
    c118:	bx	lr
    c11c:	ldr	r0, [pc, #-844]	; bdd8 <bt_compidtostr@@Base+0x4884>
    c120:	add	r0, pc, r0
    c124:	bx	lr
    c128:	ldr	r0, [pc, #-852]	; bddc <bt_compidtostr@@Base+0x4888>
    c12c:	add	r0, pc, r0
    c130:	bx	lr
    c134:	ldr	r0, [pc, #-860]	; bde0 <bt_compidtostr@@Base+0x488c>
    c138:	add	r0, pc, r0
    c13c:	bx	lr
    c140:	ldr	r0, [pc, #-868]	; bde4 <bt_compidtostr@@Base+0x4890>
    c144:	add	r0, pc, r0
    c148:	bx	lr
    c14c:	ldr	r0, [pc, #-876]	; bde8 <bt_compidtostr@@Base+0x4894>
    c150:	add	r0, pc, r0
    c154:	bx	lr
    c158:	ldr	r0, [pc, #-884]	; bdec <bt_compidtostr@@Base+0x4898>
    c15c:	add	r0, pc, r0
    c160:	bx	lr
    c164:	ldr	r0, [pc, #-892]	; bdf0 <bt_compidtostr@@Base+0x489c>
    c168:	add	r0, pc, r0
    c16c:	bx	lr
    c170:	ldr	r0, [pc, #-900]	; bdf4 <bt_compidtostr@@Base+0x48a0>
    c174:	add	r0, pc, r0
    c178:	bx	lr
    c17c:	ldr	r0, [pc, #-908]	; bdf8 <bt_compidtostr@@Base+0x48a4>
    c180:	add	r0, pc, r0
    c184:	bx	lr
    c188:	ldr	r0, [pc, #-916]	; bdfc <bt_compidtostr@@Base+0x48a8>
    c18c:	add	r0, pc, r0
    c190:	bx	lr
    c194:	ldr	r0, [pc, #-924]	; be00 <bt_compidtostr@@Base+0x48ac>
    c198:	add	r0, pc, r0
    c19c:	bx	lr
    c1a0:	ldr	r0, [pc, #-932]	; be04 <bt_compidtostr@@Base+0x48b0>
    c1a4:	add	r0, pc, r0
    c1a8:	bx	lr
    c1ac:	ldr	r0, [pc, #-940]	; be08 <bt_compidtostr@@Base+0x48b4>
    c1b0:	add	r0, pc, r0
    c1b4:	bx	lr
    c1b8:	ldr	r0, [pc, #-948]	; be0c <bt_compidtostr@@Base+0x48b8>
    c1bc:	add	r0, pc, r0
    c1c0:	bx	lr
    c1c4:	ldr	r0, [pc, #-956]	; be10 <bt_compidtostr@@Base+0x48bc>
    c1c8:	add	r0, pc, r0
    c1cc:	bx	lr
    c1d0:	ldr	r0, [pc, #-964]	; be14 <bt_compidtostr@@Base+0x48c0>
    c1d4:	add	r0, pc, r0
    c1d8:	bx	lr
    c1dc:	ldr	r0, [pc, #-972]	; be18 <bt_compidtostr@@Base+0x48c4>
    c1e0:	add	r0, pc, r0
    c1e4:	bx	lr
    c1e8:	ldr	r0, [pc, #-980]	; be1c <bt_compidtostr@@Base+0x48c8>
    c1ec:	add	r0, pc, r0
    c1f0:	bx	lr
    c1f4:	ldr	r0, [pc, #-988]	; be20 <bt_compidtostr@@Base+0x48cc>
    c1f8:	add	r0, pc, r0
    c1fc:	bx	lr
    c200:	ldr	r0, [pc, #-996]	; be24 <bt_compidtostr@@Base+0x48d0>
    c204:	add	r0, pc, r0
    c208:	bx	lr
    c20c:	ldr	r0, [pc, #-1004]	; be28 <bt_compidtostr@@Base+0x48d4>
    c210:	add	r0, pc, r0
    c214:	bx	lr
    c218:	ldr	r0, [pc, #-1012]	; be2c <bt_compidtostr@@Base+0x48d8>
    c21c:	add	r0, pc, r0
    c220:	bx	lr
    c224:	ldr	r0, [pc, #-1020]	; be30 <bt_compidtostr@@Base+0x48dc>
    c228:	add	r0, pc, r0
    c22c:	bx	lr
    c230:	ldr	r0, [pc, #-1028]	; be34 <bt_compidtostr@@Base+0x48e0>
    c234:	add	r0, pc, r0
    c238:	bx	lr
    c23c:	ldr	r0, [pc, #-1036]	; be38 <bt_compidtostr@@Base+0x48e4>
    c240:	add	r0, pc, r0
    c244:	bx	lr
    c248:	ldr	r0, [pc, #-1044]	; be3c <bt_compidtostr@@Base+0x48e8>
    c24c:	add	r0, pc, r0
    c250:	bx	lr
    c254:	ldr	r0, [pc, #-1052]	; be40 <bt_compidtostr@@Base+0x48ec>
    c258:	add	r0, pc, r0
    c25c:	bx	lr
    c260:	ldr	r0, [pc, #-1060]	; be44 <bt_compidtostr@@Base+0x48f0>
    c264:	add	r0, pc, r0
    c268:	bx	lr
    c26c:	ldr	r0, [pc, #-1068]	; be48 <bt_compidtostr@@Base+0x48f4>
    c270:	add	r0, pc, r0
    c274:	bx	lr
    c278:	ldr	r0, [pc, #-1076]	; be4c <bt_compidtostr@@Base+0x48f8>
    c27c:	add	r0, pc, r0
    c280:	bx	lr
    c284:	ldr	r0, [pc, #-1084]	; be50 <bt_compidtostr@@Base+0x48fc>
    c288:	add	r0, pc, r0
    c28c:	bx	lr
    c290:	ldr	r0, [pc, #-1092]	; be54 <bt_compidtostr@@Base+0x4900>
    c294:	add	r0, pc, r0
    c298:	bx	lr
    c29c:	ldr	r0, [pc, #-1100]	; be58 <bt_compidtostr@@Base+0x4904>
    c2a0:	add	r0, pc, r0
    c2a4:	bx	lr
    c2a8:	ldr	r0, [pc, #-1108]	; be5c <bt_compidtostr@@Base+0x4908>
    c2ac:	add	r0, pc, r0
    c2b0:	bx	lr
    c2b4:	ldr	r0, [pc, #-1116]	; be60 <bt_compidtostr@@Base+0x490c>
    c2b8:	add	r0, pc, r0
    c2bc:	bx	lr
    c2c0:	ldr	r0, [pc, #-1124]	; be64 <bt_compidtostr@@Base+0x4910>
    c2c4:	add	r0, pc, r0
    c2c8:	bx	lr
    c2cc:	ldr	r0, [pc, #-1132]	; be68 <bt_compidtostr@@Base+0x4914>
    c2d0:	add	r0, pc, r0
    c2d4:	bx	lr
    c2d8:	ldr	r0, [pc, #-1140]	; be6c <bt_compidtostr@@Base+0x4918>
    c2dc:	add	r0, pc, r0
    c2e0:	bx	lr
    c2e4:	ldr	r0, [pc, #-1148]	; be70 <bt_compidtostr@@Base+0x491c>
    c2e8:	add	r0, pc, r0
    c2ec:	bx	lr
    c2f0:	ldr	r0, [pc, #-1156]	; be74 <bt_compidtostr@@Base+0x4920>
    c2f4:	add	r0, pc, r0
    c2f8:	bx	lr
    c2fc:	ldr	r0, [pc, #-1164]	; be78 <bt_compidtostr@@Base+0x4924>
    c300:	add	r0, pc, r0
    c304:	bx	lr
    c308:	ldr	r0, [pc, #-1172]	; be7c <bt_compidtostr@@Base+0x4928>
    c30c:	add	r0, pc, r0
    c310:	bx	lr
    c314:	ldr	r0, [pc, #-1180]	; be80 <bt_compidtostr@@Base+0x492c>
    c318:	add	r0, pc, r0
    c31c:	bx	lr
    c320:	ldr	r0, [pc, #-1188]	; be84 <bt_compidtostr@@Base+0x4930>
    c324:	add	r0, pc, r0
    c328:	bx	lr
    c32c:	ldr	r0, [pc, #-1196]	; be88 <bt_compidtostr@@Base+0x4934>
    c330:	add	r0, pc, r0
    c334:	bx	lr
    c338:	ldr	r0, [pc, #-1204]	; be8c <bt_compidtostr@@Base+0x4938>
    c33c:	add	r0, pc, r0
    c340:	bx	lr
    c344:	ldr	r0, [pc, #-1212]	; be90 <bt_compidtostr@@Base+0x493c>
    c348:	add	r0, pc, r0
    c34c:	bx	lr
    c350:	ldr	r0, [pc, #-1220]	; be94 <bt_compidtostr@@Base+0x4940>
    c354:	add	r0, pc, r0
    c358:	bx	lr
    c35c:	ldr	r0, [pc, #-1228]	; be98 <bt_compidtostr@@Base+0x4944>
    c360:	add	r0, pc, r0
    c364:	bx	lr
    c368:	ldr	r0, [pc, #-1236]	; be9c <bt_compidtostr@@Base+0x4948>
    c36c:	add	r0, pc, r0
    c370:	bx	lr
    c374:	ldr	r0, [pc, #-1244]	; bea0 <bt_compidtostr@@Base+0x494c>
    c378:	add	r0, pc, r0
    c37c:	bx	lr
    c380:	ldr	r0, [pc, #-1252]	; bea4 <bt_compidtostr@@Base+0x4950>
    c384:	add	r0, pc, r0
    c388:	bx	lr
    c38c:	ldr	r0, [pc, #-1260]	; bea8 <bt_compidtostr@@Base+0x4954>
    c390:	add	r0, pc, r0
    c394:	bx	lr
    c398:	ldr	r0, [pc, #-1268]	; beac <bt_compidtostr@@Base+0x4958>
    c39c:	add	r0, pc, r0
    c3a0:	bx	lr
    c3a4:	ldr	r0, [pc, #-1276]	; beb0 <bt_compidtostr@@Base+0x495c>
    c3a8:	add	r0, pc, r0
    c3ac:	bx	lr
    c3b0:	ldr	r0, [pc, #-1284]	; beb4 <bt_compidtostr@@Base+0x4960>
    c3b4:	add	r0, pc, r0
    c3b8:	bx	lr
    c3bc:	ldr	r0, [pc, #-1292]	; beb8 <bt_compidtostr@@Base+0x4964>
    c3c0:	add	r0, pc, r0
    c3c4:	bx	lr
    c3c8:	ldr	r0, [pc, #-1300]	; bebc <bt_compidtostr@@Base+0x4968>
    c3cc:	add	r0, pc, r0
    c3d0:	bx	lr
    c3d4:	ldr	r0, [pc, #-1308]	; bec0 <bt_compidtostr@@Base+0x496c>
    c3d8:	add	r0, pc, r0
    c3dc:	bx	lr
    c3e0:	ldr	r0, [pc, #-1316]	; bec4 <bt_compidtostr@@Base+0x4970>
    c3e4:	add	r0, pc, r0
    c3e8:	bx	lr
    c3ec:	ldr	r0, [pc, #-1324]	; bec8 <bt_compidtostr@@Base+0x4974>
    c3f0:	add	r0, pc, r0
    c3f4:	bx	lr
    c3f8:	ldr	r0, [pc, #-1332]	; becc <bt_compidtostr@@Base+0x4978>
    c3fc:	add	r0, pc, r0
    c400:	bx	lr
    c404:	ldr	r0, [pc, #-1340]	; bed0 <bt_compidtostr@@Base+0x497c>
    c408:	add	r0, pc, r0
    c40c:	bx	lr
    c410:	ldr	r0, [pc, #-1348]	; bed4 <bt_compidtostr@@Base+0x4980>
    c414:	add	r0, pc, r0
    c418:	bx	lr
    c41c:	ldr	r0, [pc, #-1356]	; bed8 <bt_compidtostr@@Base+0x4984>
    c420:	add	r0, pc, r0
    c424:	bx	lr
    c428:	ldr	r0, [pc, #-1364]	; bedc <bt_compidtostr@@Base+0x4988>
    c42c:	add	r0, pc, r0
    c430:	bx	lr
    c434:	ldr	r0, [pc, #-1372]	; bee0 <bt_compidtostr@@Base+0x498c>
    c438:	add	r0, pc, r0
    c43c:	bx	lr
    c440:	ldr	r0, [pc, #-1380]	; bee4 <bt_compidtostr@@Base+0x4990>
    c444:	add	r0, pc, r0
    c448:	bx	lr
    c44c:	ldr	r0, [pc, #-1388]	; bee8 <bt_compidtostr@@Base+0x4994>
    c450:	add	r0, pc, r0
    c454:	bx	lr
    c458:	ldr	r0, [pc, #-1396]	; beec <bt_compidtostr@@Base+0x4998>
    c45c:	add	r0, pc, r0
    c460:	bx	lr
    c464:	ldr	r0, [pc, #-1404]	; bef0 <bt_compidtostr@@Base+0x499c>
    c468:	add	r0, pc, r0
    c46c:	bx	lr
    c470:	ldr	r0, [pc, #-1412]	; bef4 <bt_compidtostr@@Base+0x49a0>
    c474:	add	r0, pc, r0
    c478:	bx	lr
    c47c:	ldr	r0, [pc, #-1420]	; bef8 <bt_compidtostr@@Base+0x49a4>
    c480:	add	r0, pc, r0
    c484:	bx	lr
    c488:	ldr	r0, [pc, #-1428]	; befc <bt_compidtostr@@Base+0x49a8>
    c48c:	add	r0, pc, r0
    c490:	bx	lr
    c494:	ldr	r0, [pc, #-1436]	; bf00 <bt_compidtostr@@Base+0x49ac>
    c498:	add	r0, pc, r0
    c49c:	bx	lr
    c4a0:	ldr	r0, [pc, #-1444]	; bf04 <bt_compidtostr@@Base+0x49b0>
    c4a4:	add	r0, pc, r0
    c4a8:	bx	lr
    c4ac:	ldr	r0, [pc, #-1452]	; bf08 <bt_compidtostr@@Base+0x49b4>
    c4b0:	add	r0, pc, r0
    c4b4:	bx	lr
    c4b8:	ldr	r0, [pc, #-1460]	; bf0c <bt_compidtostr@@Base+0x49b8>
    c4bc:	add	r0, pc, r0
    c4c0:	bx	lr
    c4c4:	ldr	r0, [pc, #-1468]	; bf10 <bt_compidtostr@@Base+0x49bc>
    c4c8:	add	r0, pc, r0
    c4cc:	bx	lr
    c4d0:	ldr	r0, [pc, #-1476]	; bf14 <bt_compidtostr@@Base+0x49c0>
    c4d4:	add	r0, pc, r0
    c4d8:	bx	lr
    c4dc:	ldr	r0, [pc, #-1484]	; bf18 <bt_compidtostr@@Base+0x49c4>
    c4e0:	add	r0, pc, r0
    c4e4:	bx	lr
    c4e8:	ldr	r0, [pc, #-1492]	; bf1c <bt_compidtostr@@Base+0x49c8>
    c4ec:	add	r0, pc, r0
    c4f0:	bx	lr
    c4f4:	ldr	r0, [pc, #-1500]	; bf20 <bt_compidtostr@@Base+0x49cc>
    c4f8:	add	r0, pc, r0
    c4fc:	bx	lr
    c500:	ldr	r0, [pc, #-1508]	; bf24 <bt_compidtostr@@Base+0x49d0>
    c504:	add	r0, pc, r0
    c508:	bx	lr
    c50c:	ldr	r0, [pc, #-1516]	; bf28 <bt_compidtostr@@Base+0x49d4>
    c510:	add	r0, pc, r0
    c514:	bx	lr
    c518:	ldr	r0, [pc, #-1524]	; bf2c <bt_compidtostr@@Base+0x49d8>
    c51c:	add	r0, pc, r0
    c520:	bx	lr
    c524:	ldr	r0, [pc, #-1532]	; bf30 <bt_compidtostr@@Base+0x49dc>
    c528:	add	r0, pc, r0
    c52c:	bx	lr
    c530:	ldr	r0, [pc, #-1540]	; bf34 <bt_compidtostr@@Base+0x49e0>
    c534:	add	r0, pc, r0
    c538:	bx	lr
    c53c:	ldr	r0, [pc, #-1548]	; bf38 <bt_compidtostr@@Base+0x49e4>
    c540:	add	r0, pc, r0
    c544:	bx	lr
    c548:	ldr	r0, [pc, #-1556]	; bf3c <bt_compidtostr@@Base+0x49e8>
    c54c:	add	r0, pc, r0
    c550:	bx	lr
    c554:	ldr	r0, [pc, #-1564]	; bf40 <bt_compidtostr@@Base+0x49ec>
    c558:	add	r0, pc, r0
    c55c:	bx	lr
    c560:	ldr	r0, [pc, #-1572]	; bf44 <bt_compidtostr@@Base+0x49f0>
    c564:	add	r0, pc, r0
    c568:	bx	lr
    c56c:	ldr	r0, [pc, #-1580]	; bf48 <bt_compidtostr@@Base+0x49f4>
    c570:	add	r0, pc, r0
    c574:	bx	lr
    c578:	ldr	r0, [pc, #-1588]	; bf4c <bt_compidtostr@@Base+0x49f8>
    c57c:	add	r0, pc, r0
    c580:	bx	lr
    c584:	ldr	r0, [pc, #-1596]	; bf50 <bt_compidtostr@@Base+0x49fc>
    c588:	add	r0, pc, r0
    c58c:	bx	lr
    c590:	ldr	r0, [pc, #-1604]	; bf54 <bt_compidtostr@@Base+0x4a00>
    c594:	add	r0, pc, r0
    c598:	bx	lr
    c59c:	ldr	r0, [pc, #-1612]	; bf58 <bt_compidtostr@@Base+0x4a04>
    c5a0:	add	r0, pc, r0
    c5a4:	bx	lr
    c5a8:	ldr	r0, [pc, #-1620]	; bf5c <bt_compidtostr@@Base+0x4a08>
    c5ac:	add	r0, pc, r0
    c5b0:	bx	lr
    c5b4:	ldr	r0, [pc, #-1628]	; bf60 <bt_compidtostr@@Base+0x4a0c>
    c5b8:	add	r0, pc, r0
    c5bc:	bx	lr
    c5c0:	ldr	r0, [pc, #-1636]	; bf64 <bt_compidtostr@@Base+0x4a10>
    c5c4:	add	r0, pc, r0
    c5c8:	bx	lr
    c5cc:	ldr	r0, [pc, #-1644]	; bf68 <bt_compidtostr@@Base+0x4a14>
    c5d0:	add	r0, pc, r0
    c5d4:	bx	lr
    c5d8:	ldr	r0, [pc, #-1652]	; bf6c <bt_compidtostr@@Base+0x4a18>
    c5dc:	add	r0, pc, r0
    c5e0:	bx	lr
    c5e4:	ldr	r0, [pc, #-1660]	; bf70 <bt_compidtostr@@Base+0x4a1c>
    c5e8:	add	r0, pc, r0
    c5ec:	bx	lr
    c5f0:	ldr	r0, [pc, #-1668]	; bf74 <bt_compidtostr@@Base+0x4a20>
    c5f4:	add	r0, pc, r0
    c5f8:	bx	lr
    c5fc:	ldr	r0, [pc, #-1676]	; bf78 <bt_compidtostr@@Base+0x4a24>
    c600:	add	r0, pc, r0
    c604:	bx	lr
    c608:	ldr	r0, [pc, #-1684]	; bf7c <bt_compidtostr@@Base+0x4a28>
    c60c:	add	r0, pc, r0
    c610:	bx	lr
    c614:	ldr	r0, [pc, #-1692]	; bf80 <bt_compidtostr@@Base+0x4a2c>
    c618:	add	r0, pc, r0
    c61c:	bx	lr
    c620:	ldr	r0, [pc, #-1700]	; bf84 <bt_compidtostr@@Base+0x4a30>
    c624:	add	r0, pc, r0
    c628:	bx	lr
    c62c:	ldr	r0, [pc, #-1708]	; bf88 <bt_compidtostr@@Base+0x4a34>
    c630:	add	r0, pc, r0
    c634:	bx	lr
    c638:	ldr	r0, [pc, #-1716]	; bf8c <bt_compidtostr@@Base+0x4a38>
    c63c:	add	r0, pc, r0
    c640:	bx	lr
    c644:	ldr	r0, [pc, #-1724]	; bf90 <bt_compidtostr@@Base+0x4a3c>
    c648:	add	r0, pc, r0
    c64c:	bx	lr
    c650:	ldr	r0, [pc, #-1732]	; bf94 <bt_compidtostr@@Base+0x4a40>
    c654:	add	r0, pc, r0
    c658:	bx	lr
    c65c:	ldr	r0, [pc, #-1740]	; bf98 <bt_compidtostr@@Base+0x4a44>
    c660:	add	r0, pc, r0
    c664:	bx	lr
    c668:	ldr	r0, [pc, #-1748]	; bf9c <bt_compidtostr@@Base+0x4a48>
    c66c:	add	r0, pc, r0
    c670:	bx	lr
    c674:	ldr	r0, [pc, #-1756]	; bfa0 <bt_compidtostr@@Base+0x4a4c>
    c678:	add	r0, pc, r0
    c67c:	bx	lr
    c680:	ldr	r0, [pc, #-1764]	; bfa4 <bt_compidtostr@@Base+0x4a50>
    c684:	add	r0, pc, r0
    c688:	bx	lr
    c68c:	ldr	r0, [pc, #-1772]	; bfa8 <bt_compidtostr@@Base+0x4a54>
    c690:	add	r0, pc, r0
    c694:	bx	lr
    c698:	ldr	r0, [pc, #-1780]	; bfac <bt_compidtostr@@Base+0x4a58>
    c69c:	add	r0, pc, r0
    c6a0:	bx	lr
    c6a4:	ldr	r0, [pc, #-1788]	; bfb0 <bt_compidtostr@@Base+0x4a5c>
    c6a8:	add	r0, pc, r0
    c6ac:	bx	lr
    c6b0:	ldr	r0, [pc, #-1796]	; bfb4 <bt_compidtostr@@Base+0x4a60>
    c6b4:	add	r0, pc, r0
    c6b8:	bx	lr
    c6bc:	ldr	r0, [pc, #-1804]	; bfb8 <bt_compidtostr@@Base+0x4a64>
    c6c0:	add	r0, pc, r0
    c6c4:	bx	lr
    c6c8:	ldr	r0, [pc, #-1812]	; bfbc <bt_compidtostr@@Base+0x4a68>
    c6cc:	add	r0, pc, r0
    c6d0:	bx	lr
    c6d4:	ldr	r0, [pc, #-1820]	; bfc0 <bt_compidtostr@@Base+0x4a6c>
    c6d8:	add	r0, pc, r0
    c6dc:	bx	lr
    c6e0:	ldr	r0, [pc, #-1828]	; bfc4 <bt_compidtostr@@Base+0x4a70>
    c6e4:	add	r0, pc, r0
    c6e8:	bx	lr
    c6ec:	ldr	r0, [pc, #-1836]	; bfc8 <bt_compidtostr@@Base+0x4a74>
    c6f0:	add	r0, pc, r0
    c6f4:	bx	lr
    c6f8:	ldr	r0, [pc, #-1844]	; bfcc <bt_compidtostr@@Base+0x4a78>
    c6fc:	add	r0, pc, r0
    c700:	bx	lr
    c704:	ldr	r0, [pc, #-1852]	; bfd0 <bt_compidtostr@@Base+0x4a7c>
    c708:	add	r0, pc, r0
    c70c:	bx	lr
    c710:	ldr	r0, [pc, #-1860]	; bfd4 <bt_compidtostr@@Base+0x4a80>
    c714:	add	r0, pc, r0
    c718:	bx	lr
    c71c:	ldr	r0, [pc, #-1868]	; bfd8 <bt_compidtostr@@Base+0x4a84>
    c720:	add	r0, pc, r0
    c724:	bx	lr
    c728:	ldr	r0, [pc, #-1876]	; bfdc <bt_compidtostr@@Base+0x4a88>
    c72c:	add	r0, pc, r0
    c730:	bx	lr
    c734:	ldr	r0, [pc, #-1884]	; bfe0 <bt_compidtostr@@Base+0x4a8c>
    c738:	add	r0, pc, r0
    c73c:	bx	lr
    c740:	ldr	r0, [pc, #-1892]	; bfe4 <bt_compidtostr@@Base+0x4a90>
    c744:	add	r0, pc, r0
    c748:	bx	lr
    c74c:	ldr	r0, [pc, #-1900]	; bfe8 <bt_compidtostr@@Base+0x4a94>
    c750:	add	r0, pc, r0
    c754:	bx	lr
    c758:	ldr	r0, [pc, #-1908]	; bfec <bt_compidtostr@@Base+0x4a98>
    c75c:	add	r0, pc, r0
    c760:	bx	lr
    c764:	ldr	r0, [pc, #-1916]	; bff0 <bt_compidtostr@@Base+0x4a9c>
    c768:	add	r0, pc, r0
    c76c:	bx	lr
    c770:	ldr	r0, [pc, #-1924]	; bff4 <bt_compidtostr@@Base+0x4aa0>
    c774:	add	r0, pc, r0
    c778:	bx	lr
    c77c:	ldr	r0, [pc, #-1932]	; bff8 <bt_compidtostr@@Base+0x4aa4>
    c780:	add	r0, pc, r0
    c784:	bx	lr
    c788:	ldr	r0, [pc, #-1940]	; bffc <bt_compidtostr@@Base+0x4aa8>
    c78c:	add	r0, pc, r0
    c790:	bx	lr
    c794:	ldr	r0, [pc, #-1948]	; c000 <bt_compidtostr@@Base+0x4aac>
    c798:	add	r0, pc, r0
    c79c:	bx	lr
    c7a0:	ldr	r0, [pc, #-1956]	; c004 <bt_compidtostr@@Base+0x4ab0>
    c7a4:	add	r0, pc, r0
    c7a8:	bx	lr
    c7ac:	ldr	r0, [pc, #-1964]	; c008 <bt_compidtostr@@Base+0x4ab4>
    c7b0:	add	r0, pc, r0
    c7b4:	bx	lr
    c7b8:	ldr	r0, [pc, #-1972]	; c00c <bt_compidtostr@@Base+0x4ab8>
    c7bc:	add	r0, pc, r0
    c7c0:	bx	lr
    c7c4:	ldr	r0, [pc, #-1980]	; c010 <bt_compidtostr@@Base+0x4abc>
    c7c8:	add	r0, pc, r0
    c7cc:	bx	lr
    c7d0:	ldr	r0, [pc, #-1988]	; c014 <bt_compidtostr@@Base+0x4ac0>
    c7d4:	add	r0, pc, r0
    c7d8:	bx	lr
    c7dc:	ldr	r0, [pc, #-1996]	; c018 <bt_compidtostr@@Base+0x4ac4>
    c7e0:	add	r0, pc, r0
    c7e4:	bx	lr
    c7e8:	ldr	r0, [pc, #-2004]	; c01c <bt_compidtostr@@Base+0x4ac8>
    c7ec:	add	r0, pc, r0
    c7f0:	bx	lr
    c7f4:	ldr	r0, [pc, #-2012]	; c020 <bt_compidtostr@@Base+0x4acc>
    c7f8:	add	r0, pc, r0
    c7fc:	bx	lr
    c800:	ldr	r0, [pc, #-2020]	; c024 <bt_compidtostr@@Base+0x4ad0>
    c804:	add	r0, pc, r0
    c808:	bx	lr
    c80c:	ldr	r0, [pc, #-2028]	; c028 <bt_compidtostr@@Base+0x4ad4>
    c810:	add	r0, pc, r0
    c814:	bx	lr
    c818:	ldr	r0, [pc, #-2036]	; c02c <bt_compidtostr@@Base+0x4ad8>
    c81c:	add	r0, pc, r0
    c820:	bx	lr
    c824:	ldr	r0, [pc, #-2044]	; c030 <bt_compidtostr@@Base+0x4adc>
    c828:	add	r0, pc, r0
    c82c:	bx	lr
    c830:	ldr	r0, [pc, #-2052]	; c034 <bt_compidtostr@@Base+0x4ae0>
    c834:	add	r0, pc, r0
    c838:	bx	lr
    c83c:	ldr	r0, [pc, #-2060]	; c038 <bt_compidtostr@@Base+0x4ae4>
    c840:	add	r0, pc, r0
    c844:	bx	lr
    c848:	ldr	r0, [pc, #-2068]	; c03c <bt_compidtostr@@Base+0x4ae8>
    c84c:	add	r0, pc, r0
    c850:	bx	lr
    c854:	ldr	r0, [pc, #-2076]	; c040 <bt_compidtostr@@Base+0x4aec>
    c858:	add	r0, pc, r0
    c85c:	bx	lr
    c860:	ldr	r0, [pc, #-2084]	; c044 <bt_compidtostr@@Base+0x4af0>
    c864:	add	r0, pc, r0
    c868:	bx	lr
    c86c:	ldr	r0, [pc, #-2092]	; c048 <bt_compidtostr@@Base+0x4af4>
    c870:	add	r0, pc, r0
    c874:	bx	lr
    c878:	ldr	r0, [pc, #-2100]	; c04c <bt_compidtostr@@Base+0x4af8>
    c87c:	add	r0, pc, r0
    c880:	bx	lr
    c884:	ldr	r0, [pc, #-2108]	; c050 <bt_compidtostr@@Base+0x4afc>
    c888:	add	r0, pc, r0
    c88c:	bx	lr
    c890:	ldr	r0, [pc, #-2116]	; c054 <bt_compidtostr@@Base+0x4b00>
    c894:	add	r0, pc, r0
    c898:	bx	lr
    c89c:	ldr	r0, [pc, #-2124]	; c058 <bt_compidtostr@@Base+0x4b04>
    c8a0:	add	r0, pc, r0
    c8a4:	bx	lr
    c8a8:	ldr	r0, [pc, #-2132]	; c05c <bt_compidtostr@@Base+0x4b08>
    c8ac:	add	r0, pc, r0
    c8b0:	bx	lr
    c8b4:	ldr	r0, [pc, #-2140]	; c060 <bt_compidtostr@@Base+0x4b0c>
    c8b8:	add	r0, pc, r0
    c8bc:	bx	lr
    c8c0:	ldr	r0, [pc, #-2148]	; c064 <bt_compidtostr@@Base+0x4b10>
    c8c4:	add	r0, pc, r0
    c8c8:	bx	lr
    c8cc:	ldr	r0, [pc, #-2156]	; c068 <bt_compidtostr@@Base+0x4b14>
    c8d0:	add	r0, pc, r0
    c8d4:	bx	lr
    c8d8:	ldr	r0, [pc, #-2164]	; c06c <bt_compidtostr@@Base+0x4b18>
    c8dc:	add	r0, pc, r0
    c8e0:	bx	lr
    c8e4:	ldr	r0, [pc, #-2172]	; c070 <bt_compidtostr@@Base+0x4b1c>
    c8e8:	add	r0, pc, r0
    c8ec:	bx	lr
    c8f0:	ldr	r0, [pc, #-2180]	; c074 <bt_compidtostr@@Base+0x4b20>
    c8f4:	add	r0, pc, r0
    c8f8:	bx	lr
    c8fc:	ldr	r0, [pc, #-2188]	; c078 <bt_compidtostr@@Base+0x4b24>
    c900:	add	r0, pc, r0
    c904:	bx	lr
    c908:	ldr	r0, [pc, #-2196]	; c07c <bt_compidtostr@@Base+0x4b28>
    c90c:	add	r0, pc, r0
    c910:	bx	lr
    c914:	ldr	r0, [pc, #-2204]	; c080 <bt_compidtostr@@Base+0x4b2c>
    c918:	add	r0, pc, r0
    c91c:	bx	lr
    c920:	ldr	r0, [pc, #-2212]	; c084 <bt_compidtostr@@Base+0x4b30>
    c924:	add	r0, pc, r0
    c928:	bx	lr
    c92c:	ldr	r0, [pc, #-2220]	; c088 <bt_compidtostr@@Base+0x4b34>
    c930:	add	r0, pc, r0
    c934:	bx	lr
    c938:	ldr	r0, [pc, #-2228]	; c08c <bt_compidtostr@@Base+0x4b38>
    c93c:	add	r0, pc, r0
    c940:	bx	lr
    c944:	ldr	r0, [pc, #-2236]	; c090 <bt_compidtostr@@Base+0x4b3c>
    c948:	add	r0, pc, r0
    c94c:	bx	lr
    c950:	ldr	r0, [pc, #-2244]	; c094 <bt_compidtostr@@Base+0x4b40>
    c954:	add	r0, pc, r0
    c958:	bx	lr
    c95c:	ldr	r0, [pc, #-2252]	; c098 <bt_compidtostr@@Base+0x4b44>
    c960:	add	r0, pc, r0
    c964:	bx	lr
    c968:	ldr	r0, [pc, #-2260]	; c09c <bt_compidtostr@@Base+0x4b48>
    c96c:	add	r0, pc, r0
    c970:	bx	lr
    c974:	ldr	r0, [pc, #-2268]	; c0a0 <bt_compidtostr@@Base+0x4b4c>
    c978:	add	r0, pc, r0
    c97c:	bx	lr
    c980:	ldr	r0, [pc, #-2276]	; c0a4 <bt_compidtostr@@Base+0x4b50>
    c984:	add	r0, pc, r0
    c988:	bx	lr
    c98c:	ldr	r0, [pc, #-2284]	; c0a8 <bt_compidtostr@@Base+0x4b54>
    c990:	add	r0, pc, r0
    c994:	bx	lr
    c998:	ldr	r0, [pc, #-2292]	; c0ac <bt_compidtostr@@Base+0x4b58>
    c99c:	add	r0, pc, r0
    c9a0:	bx	lr
    c9a4:	ldr	r0, [pc, #-2300]	; c0b0 <bt_compidtostr@@Base+0x4b5c>
    c9a8:	add	r0, pc, r0
    c9ac:	bx	lr
    c9b0:	ldr	r0, [pc, #-2308]	; c0b4 <bt_compidtostr@@Base+0x4b60>
    c9b4:	add	r0, pc, r0
    c9b8:	bx	lr
    c9bc:	ldr	r0, [pc, #-2316]	; c0b8 <bt_compidtostr@@Base+0x4b64>
    c9c0:	add	r0, pc, r0
    c9c4:	bx	lr
    c9c8:	ldr	r0, [pc, #-2324]	; c0bc <bt_compidtostr@@Base+0x4b68>
    c9cc:	add	r0, pc, r0
    c9d0:	bx	lr
    c9d4:	ldr	r0, [pc, #-2332]	; c0c0 <bt_compidtostr@@Base+0x4b6c>
    c9d8:	add	r0, pc, r0
    c9dc:	bx	lr
    c9e0:	ldr	r0, [pc, #-2340]	; c0c4 <bt_compidtostr@@Base+0x4b70>
    c9e4:	add	r0, pc, r0
    c9e8:	bx	lr
    c9ec:	ldr	r0, [pc, #-2348]	; c0c8 <bt_compidtostr@@Base+0x4b74>
    c9f0:	add	r0, pc, r0
    c9f4:	bx	lr
    c9f8:	ldr	r0, [pc, #-2356]	; c0cc <bt_compidtostr@@Base+0x4b78>
    c9fc:	add	r0, pc, r0
    ca00:	bx	lr
    ca04:	ldr	r0, [pc, #-2364]	; c0d0 <bt_compidtostr@@Base+0x4b7c>
    ca08:	add	r0, pc, r0
    ca0c:	bx	lr
    ca10:	ldr	r0, [pc, #-2372]	; c0d4 <bt_compidtostr@@Base+0x4b80>
    ca14:	add	r0, pc, r0
    ca18:	bx	lr
    ca1c:	ldr	r0, [pc, #-2380]	; c0d8 <bt_compidtostr@@Base+0x4b84>
    ca20:	add	r0, pc, r0
    ca24:	bx	lr
    ca28:	ldr	r0, [pc, #-2388]	; c0dc <bt_compidtostr@@Base+0x4b88>
    ca2c:	add	r0, pc, r0
    ca30:	bx	lr
    ca34:	ldr	r0, [pc, #-2396]	; c0e0 <bt_compidtostr@@Base+0x4b8c>
    ca38:	add	r0, pc, r0
    ca3c:	bx	lr
    ca40:	ldr	r0, [pc, #-2404]	; c0e4 <bt_compidtostr@@Base+0x4b90>
    ca44:	add	r0, pc, r0
    ca48:	bx	lr
    ca4c:	ldr	r0, [pc, #-2412]	; c0e8 <bt_compidtostr@@Base+0x4b94>
    ca50:	add	r0, pc, r0
    ca54:	bx	lr
    ca58:	ldr	r0, [pc, #-2420]	; c0ec <bt_compidtostr@@Base+0x4b98>
    ca5c:	add	r0, pc, r0
    ca60:	bx	lr
    ca64:	ldr	r0, [pc, #-2428]	; c0f0 <bt_compidtostr@@Base+0x4b9c>
    ca68:	add	r0, pc, r0
    ca6c:	bx	lr
    ca70:	ldr	r0, [pc, #-2436]	; c0f4 <bt_compidtostr@@Base+0x4ba0>
    ca74:	add	r0, pc, r0
    ca78:	bx	lr
    ca7c:	ldr	r0, [pc, #-2444]	; c0f8 <bt_compidtostr@@Base+0x4ba4>
    ca80:	add	r0, pc, r0
    ca84:	bx	lr
    ca88:	ldr	r0, [pc, #-2452]	; c0fc <bt_compidtostr@@Base+0x4ba8>
    ca8c:	add	r0, pc, r0
    ca90:	bx	lr
    ca94:	ldr	r0, [pc, #-2460]	; c100 <bt_compidtostr@@Base+0x4bac>
    ca98:	add	r0, pc, r0
    ca9c:	bx	lr
    caa0:	ldr	r0, [pc, #2344]	; d3d0 <bt_compidtostr@@Base+0x5e7c>
    caa4:	add	r0, pc, r0
    caa8:	bx	lr
    caac:	ldr	r0, [pc, #2336]	; d3d4 <bt_compidtostr@@Base+0x5e80>
    cab0:	add	r0, pc, r0
    cab4:	bx	lr
    cab8:	ldr	r0, [pc, #2328]	; d3d8 <bt_compidtostr@@Base+0x5e84>
    cabc:	add	r0, pc, r0
    cac0:	bx	lr
    cac4:	ldr	r0, [pc, #2320]	; d3dc <bt_compidtostr@@Base+0x5e88>
    cac8:	add	r0, pc, r0
    cacc:	bx	lr
    cad0:	ldr	r0, [pc, #2312]	; d3e0 <bt_compidtostr@@Base+0x5e8c>
    cad4:	add	r0, pc, r0
    cad8:	bx	lr
    cadc:	ldr	r0, [pc, #2304]	; d3e4 <bt_compidtostr@@Base+0x5e90>
    cae0:	add	r0, pc, r0
    cae4:	bx	lr
    cae8:	ldr	r0, [pc, #2296]	; d3e8 <bt_compidtostr@@Base+0x5e94>
    caec:	add	r0, pc, r0
    caf0:	bx	lr
    caf4:	ldr	r0, [pc, #2288]	; d3ec <bt_compidtostr@@Base+0x5e98>
    caf8:	add	r0, pc, r0
    cafc:	bx	lr
    cb00:	ldr	r0, [pc, #2280]	; d3f0 <bt_compidtostr@@Base+0x5e9c>
    cb04:	add	r0, pc, r0
    cb08:	bx	lr
    cb0c:	ldr	r0, [pc, #2272]	; d3f4 <bt_compidtostr@@Base+0x5ea0>
    cb10:	add	r0, pc, r0
    cb14:	bx	lr
    cb18:	ldr	r0, [pc, #2264]	; d3f8 <bt_compidtostr@@Base+0x5ea4>
    cb1c:	add	r0, pc, r0
    cb20:	bx	lr
    cb24:	ldr	r0, [pc, #2256]	; d3fc <bt_compidtostr@@Base+0x5ea8>
    cb28:	add	r0, pc, r0
    cb2c:	bx	lr
    cb30:	ldr	r0, [pc, #2248]	; d400 <bt_compidtostr@@Base+0x5eac>
    cb34:	add	r0, pc, r0
    cb38:	bx	lr
    cb3c:	ldr	r0, [pc, #2240]	; d404 <bt_compidtostr@@Base+0x5eb0>
    cb40:	add	r0, pc, r0
    cb44:	bx	lr
    cb48:	ldr	r0, [pc, #2232]	; d408 <bt_compidtostr@@Base+0x5eb4>
    cb4c:	add	r0, pc, r0
    cb50:	bx	lr
    cb54:	ldr	r0, [pc, #2224]	; d40c <bt_compidtostr@@Base+0x5eb8>
    cb58:	add	r0, pc, r0
    cb5c:	bx	lr
    cb60:	ldr	r0, [pc, #2216]	; d410 <bt_compidtostr@@Base+0x5ebc>
    cb64:	add	r0, pc, r0
    cb68:	bx	lr
    cb6c:	ldr	r0, [pc, #2208]	; d414 <bt_compidtostr@@Base+0x5ec0>
    cb70:	add	r0, pc, r0
    cb74:	bx	lr
    cb78:	ldr	r0, [pc, #2200]	; d418 <bt_compidtostr@@Base+0x5ec4>
    cb7c:	add	r0, pc, r0
    cb80:	bx	lr
    cb84:	ldr	r0, [pc, #2192]	; d41c <bt_compidtostr@@Base+0x5ec8>
    cb88:	add	r0, pc, r0
    cb8c:	bx	lr
    cb90:	ldr	r0, [pc, #2184]	; d420 <bt_compidtostr@@Base+0x5ecc>
    cb94:	add	r0, pc, r0
    cb98:	bx	lr
    cb9c:	ldr	r0, [pc, #2176]	; d424 <bt_compidtostr@@Base+0x5ed0>
    cba0:	add	r0, pc, r0
    cba4:	bx	lr
    cba8:	ldr	r0, [pc, #2168]	; d428 <bt_compidtostr@@Base+0x5ed4>
    cbac:	add	r0, pc, r0
    cbb0:	bx	lr
    cbb4:	ldr	r0, [pc, #2160]	; d42c <bt_compidtostr@@Base+0x5ed8>
    cbb8:	add	r0, pc, r0
    cbbc:	bx	lr
    cbc0:	ldr	r0, [pc, #2152]	; d430 <bt_compidtostr@@Base+0x5edc>
    cbc4:	add	r0, pc, r0
    cbc8:	bx	lr
    cbcc:	ldr	r0, [pc, #2144]	; d434 <bt_compidtostr@@Base+0x5ee0>
    cbd0:	add	r0, pc, r0
    cbd4:	bx	lr
    cbd8:	ldr	r0, [pc, #2136]	; d438 <bt_compidtostr@@Base+0x5ee4>
    cbdc:	add	r0, pc, r0
    cbe0:	bx	lr
    cbe4:	ldr	r0, [pc, #2128]	; d43c <bt_compidtostr@@Base+0x5ee8>
    cbe8:	add	r0, pc, r0
    cbec:	bx	lr
    cbf0:	ldr	r0, [pc, #2120]	; d440 <bt_compidtostr@@Base+0x5eec>
    cbf4:	add	r0, pc, r0
    cbf8:	bx	lr
    cbfc:	ldr	r0, [pc, #2112]	; d444 <bt_compidtostr@@Base+0x5ef0>
    cc00:	add	r0, pc, r0
    cc04:	bx	lr
    cc08:	ldr	r0, [pc, #2104]	; d448 <bt_compidtostr@@Base+0x5ef4>
    cc0c:	add	r0, pc, r0
    cc10:	bx	lr
    cc14:	ldr	r0, [pc, #2096]	; d44c <bt_compidtostr@@Base+0x5ef8>
    cc18:	add	r0, pc, r0
    cc1c:	bx	lr
    cc20:	ldr	r0, [pc, #2088]	; d450 <bt_compidtostr@@Base+0x5efc>
    cc24:	add	r0, pc, r0
    cc28:	bx	lr
    cc2c:	ldr	r0, [pc, #2080]	; d454 <bt_compidtostr@@Base+0x5f00>
    cc30:	add	r0, pc, r0
    cc34:	bx	lr
    cc38:	ldr	r0, [pc, #2072]	; d458 <bt_compidtostr@@Base+0x5f04>
    cc3c:	add	r0, pc, r0
    cc40:	bx	lr
    cc44:	ldr	r0, [pc, #2064]	; d45c <bt_compidtostr@@Base+0x5f08>
    cc48:	add	r0, pc, r0
    cc4c:	bx	lr
    cc50:	ldr	r0, [pc, #2056]	; d460 <bt_compidtostr@@Base+0x5f0c>
    cc54:	add	r0, pc, r0
    cc58:	bx	lr
    cc5c:	ldr	r0, [pc, #2048]	; d464 <bt_compidtostr@@Base+0x5f10>
    cc60:	add	r0, pc, r0
    cc64:	bx	lr
    cc68:	ldr	r0, [pc, #2040]	; d468 <bt_compidtostr@@Base+0x5f14>
    cc6c:	add	r0, pc, r0
    cc70:	bx	lr
    cc74:	ldr	r0, [pc, #2032]	; d46c <bt_compidtostr@@Base+0x5f18>
    cc78:	add	r0, pc, r0
    cc7c:	bx	lr
    cc80:	ldr	r0, [pc, #2024]	; d470 <bt_compidtostr@@Base+0x5f1c>
    cc84:	add	r0, pc, r0
    cc88:	bx	lr
    cc8c:	ldr	r0, [pc, #2016]	; d474 <bt_compidtostr@@Base+0x5f20>
    cc90:	add	r0, pc, r0
    cc94:	bx	lr
    cc98:	ldr	r0, [pc, #2008]	; d478 <bt_compidtostr@@Base+0x5f24>
    cc9c:	add	r0, pc, r0
    cca0:	bx	lr
    cca4:	ldr	r0, [pc, #2000]	; d47c <bt_compidtostr@@Base+0x5f28>
    cca8:	add	r0, pc, r0
    ccac:	bx	lr
    ccb0:	ldr	r0, [pc, #1992]	; d480 <bt_compidtostr@@Base+0x5f2c>
    ccb4:	add	r0, pc, r0
    ccb8:	bx	lr
    ccbc:	ldr	r0, [pc, #1984]	; d484 <bt_compidtostr@@Base+0x5f30>
    ccc0:	add	r0, pc, r0
    ccc4:	bx	lr
    ccc8:	ldr	r0, [pc, #1976]	; d488 <bt_compidtostr@@Base+0x5f34>
    cccc:	add	r0, pc, r0
    ccd0:	bx	lr
    ccd4:	ldr	r0, [pc, #1968]	; d48c <bt_compidtostr@@Base+0x5f38>
    ccd8:	add	r0, pc, r0
    ccdc:	bx	lr
    cce0:	ldr	r0, [pc, #1960]	; d490 <bt_compidtostr@@Base+0x5f3c>
    cce4:	add	r0, pc, r0
    cce8:	bx	lr
    ccec:	ldr	r0, [pc, #1952]	; d494 <bt_compidtostr@@Base+0x5f40>
    ccf0:	add	r0, pc, r0
    ccf4:	bx	lr
    ccf8:	ldr	r0, [pc, #1944]	; d498 <bt_compidtostr@@Base+0x5f44>
    ccfc:	add	r0, pc, r0
    cd00:	bx	lr
    cd04:	ldr	r0, [pc, #1936]	; d49c <bt_compidtostr@@Base+0x5f48>
    cd08:	add	r0, pc, r0
    cd0c:	bx	lr
    cd10:	ldr	r0, [pc, #1928]	; d4a0 <bt_compidtostr@@Base+0x5f4c>
    cd14:	add	r0, pc, r0
    cd18:	bx	lr
    cd1c:	ldr	r0, [pc, #1920]	; d4a4 <bt_compidtostr@@Base+0x5f50>
    cd20:	add	r0, pc, r0
    cd24:	bx	lr
    cd28:	ldr	r0, [pc, #1912]	; d4a8 <bt_compidtostr@@Base+0x5f54>
    cd2c:	add	r0, pc, r0
    cd30:	bx	lr
    cd34:	ldr	r0, [pc, #1904]	; d4ac <bt_compidtostr@@Base+0x5f58>
    cd38:	add	r0, pc, r0
    cd3c:	bx	lr
    cd40:	ldr	r0, [pc, #1896]	; d4b0 <bt_compidtostr@@Base+0x5f5c>
    cd44:	add	r0, pc, r0
    cd48:	bx	lr
    cd4c:	ldr	r0, [pc, #1888]	; d4b4 <bt_compidtostr@@Base+0x5f60>
    cd50:	add	r0, pc, r0
    cd54:	bx	lr
    cd58:	ldr	r0, [pc, #1880]	; d4b8 <bt_compidtostr@@Base+0x5f64>
    cd5c:	add	r0, pc, r0
    cd60:	bx	lr
    cd64:	ldr	r0, [pc, #1872]	; d4bc <bt_compidtostr@@Base+0x5f68>
    cd68:	add	r0, pc, r0
    cd6c:	bx	lr
    cd70:	ldr	r0, [pc, #1864]	; d4c0 <bt_compidtostr@@Base+0x5f6c>
    cd74:	add	r0, pc, r0
    cd78:	bx	lr
    cd7c:	ldr	r0, [pc, #1856]	; d4c4 <bt_compidtostr@@Base+0x5f70>
    cd80:	add	r0, pc, r0
    cd84:	bx	lr
    cd88:	ldr	r0, [pc, #1848]	; d4c8 <bt_compidtostr@@Base+0x5f74>
    cd8c:	add	r0, pc, r0
    cd90:	bx	lr
    cd94:	ldr	r0, [pc, #1840]	; d4cc <bt_compidtostr@@Base+0x5f78>
    cd98:	add	r0, pc, r0
    cd9c:	bx	lr
    cda0:	ldr	r0, [pc, #1832]	; d4d0 <bt_compidtostr@@Base+0x5f7c>
    cda4:	add	r0, pc, r0
    cda8:	bx	lr
    cdac:	ldr	r0, [pc, #1824]	; d4d4 <bt_compidtostr@@Base+0x5f80>
    cdb0:	add	r0, pc, r0
    cdb4:	bx	lr
    cdb8:	ldr	r0, [pc, #1816]	; d4d8 <bt_compidtostr@@Base+0x5f84>
    cdbc:	add	r0, pc, r0
    cdc0:	bx	lr
    cdc4:	ldr	r0, [pc, #1808]	; d4dc <bt_compidtostr@@Base+0x5f88>
    cdc8:	add	r0, pc, r0
    cdcc:	bx	lr
    cdd0:	ldr	r0, [pc, #1800]	; d4e0 <bt_compidtostr@@Base+0x5f8c>
    cdd4:	add	r0, pc, r0
    cdd8:	bx	lr
    cddc:	ldr	r0, [pc, #1792]	; d4e4 <bt_compidtostr@@Base+0x5f90>
    cde0:	add	r0, pc, r0
    cde4:	bx	lr
    cde8:	ldr	r0, [pc, #1784]	; d4e8 <bt_compidtostr@@Base+0x5f94>
    cdec:	add	r0, pc, r0
    cdf0:	bx	lr
    cdf4:	ldr	r0, [pc, #1776]	; d4ec <bt_compidtostr@@Base+0x5f98>
    cdf8:	add	r0, pc, r0
    cdfc:	bx	lr
    ce00:	ldr	r0, [pc, #1768]	; d4f0 <bt_compidtostr@@Base+0x5f9c>
    ce04:	add	r0, pc, r0
    ce08:	bx	lr
    ce0c:	ldr	r0, [pc, #1760]	; d4f4 <bt_compidtostr@@Base+0x5fa0>
    ce10:	add	r0, pc, r0
    ce14:	bx	lr
    ce18:	ldr	r0, [pc, #1752]	; d4f8 <bt_compidtostr@@Base+0x5fa4>
    ce1c:	add	r0, pc, r0
    ce20:	bx	lr
    ce24:	ldr	r0, [pc, #1744]	; d4fc <bt_compidtostr@@Base+0x5fa8>
    ce28:	add	r0, pc, r0
    ce2c:	bx	lr
    ce30:	ldr	r0, [pc, #1736]	; d500 <bt_compidtostr@@Base+0x5fac>
    ce34:	add	r0, pc, r0
    ce38:	bx	lr
    ce3c:	ldr	r0, [pc, #1728]	; d504 <bt_compidtostr@@Base+0x5fb0>
    ce40:	add	r0, pc, r0
    ce44:	bx	lr
    ce48:	ldr	r0, [pc, #1720]	; d508 <bt_compidtostr@@Base+0x5fb4>
    ce4c:	add	r0, pc, r0
    ce50:	bx	lr
    ce54:	ldr	r0, [pc, #1712]	; d50c <bt_compidtostr@@Base+0x5fb8>
    ce58:	add	r0, pc, r0
    ce5c:	bx	lr
    ce60:	ldr	r0, [pc, #1704]	; d510 <bt_compidtostr@@Base+0x5fbc>
    ce64:	add	r0, pc, r0
    ce68:	bx	lr
    ce6c:	ldr	r0, [pc, #1696]	; d514 <bt_compidtostr@@Base+0x5fc0>
    ce70:	add	r0, pc, r0
    ce74:	bx	lr
    ce78:	ldr	r0, [pc, #1688]	; d518 <bt_compidtostr@@Base+0x5fc4>
    ce7c:	add	r0, pc, r0
    ce80:	bx	lr
    ce84:	ldr	r0, [pc, #1680]	; d51c <bt_compidtostr@@Base+0x5fc8>
    ce88:	add	r0, pc, r0
    ce8c:	bx	lr
    ce90:	ldr	r0, [pc, #1672]	; d520 <bt_compidtostr@@Base+0x5fcc>
    ce94:	add	r0, pc, r0
    ce98:	bx	lr
    ce9c:	ldr	r0, [pc, #1664]	; d524 <bt_compidtostr@@Base+0x5fd0>
    cea0:	add	r0, pc, r0
    cea4:	bx	lr
    cea8:	ldr	r0, [pc, #1656]	; d528 <bt_compidtostr@@Base+0x5fd4>
    ceac:	add	r0, pc, r0
    ceb0:	bx	lr
    ceb4:	ldr	r0, [pc, #1648]	; d52c <bt_compidtostr@@Base+0x5fd8>
    ceb8:	add	r0, pc, r0
    cebc:	bx	lr
    cec0:	ldr	r0, [pc, #1640]	; d530 <bt_compidtostr@@Base+0x5fdc>
    cec4:	add	r0, pc, r0
    cec8:	bx	lr
    cecc:	ldr	r0, [pc, #1632]	; d534 <bt_compidtostr@@Base+0x5fe0>
    ced0:	add	r0, pc, r0
    ced4:	bx	lr
    ced8:	ldr	r0, [pc, #1624]	; d538 <bt_compidtostr@@Base+0x5fe4>
    cedc:	add	r0, pc, r0
    cee0:	bx	lr
    cee4:	ldr	r0, [pc, #1616]	; d53c <bt_compidtostr@@Base+0x5fe8>
    cee8:	add	r0, pc, r0
    ceec:	bx	lr
    cef0:	ldr	r0, [pc, #1608]	; d540 <bt_compidtostr@@Base+0x5fec>
    cef4:	add	r0, pc, r0
    cef8:	bx	lr
    cefc:	ldr	r0, [pc, #1600]	; d544 <bt_compidtostr@@Base+0x5ff0>
    cf00:	add	r0, pc, r0
    cf04:	bx	lr
    cf08:	ldr	r0, [pc, #1592]	; d548 <bt_compidtostr@@Base+0x5ff4>
    cf0c:	add	r0, pc, r0
    cf10:	bx	lr
    cf14:	ldr	r0, [pc, #1584]	; d54c <bt_compidtostr@@Base+0x5ff8>
    cf18:	add	r0, pc, r0
    cf1c:	bx	lr
    cf20:	ldr	r0, [pc, #1576]	; d550 <bt_compidtostr@@Base+0x5ffc>
    cf24:	add	r0, pc, r0
    cf28:	bx	lr
    cf2c:	ldr	r0, [pc, #1568]	; d554 <bt_compidtostr@@Base+0x6000>
    cf30:	add	r0, pc, r0
    cf34:	bx	lr
    cf38:	ldr	r0, [pc, #1560]	; d558 <bt_compidtostr@@Base+0x6004>
    cf3c:	add	r0, pc, r0
    cf40:	bx	lr
    cf44:	ldr	r0, [pc, #1552]	; d55c <bt_compidtostr@@Base+0x6008>
    cf48:	add	r0, pc, r0
    cf4c:	bx	lr
    cf50:	ldr	r0, [pc, #1544]	; d560 <bt_compidtostr@@Base+0x600c>
    cf54:	add	r0, pc, r0
    cf58:	bx	lr
    cf5c:	ldr	r0, [pc, #1536]	; d564 <bt_compidtostr@@Base+0x6010>
    cf60:	add	r0, pc, r0
    cf64:	bx	lr
    cf68:	ldr	r0, [pc, #1528]	; d568 <bt_compidtostr@@Base+0x6014>
    cf6c:	add	r0, pc, r0
    cf70:	bx	lr
    cf74:	ldr	r0, [pc, #1520]	; d56c <bt_compidtostr@@Base+0x6018>
    cf78:	add	r0, pc, r0
    cf7c:	bx	lr
    cf80:	ldr	r0, [pc, #1512]	; d570 <bt_compidtostr@@Base+0x601c>
    cf84:	add	r0, pc, r0
    cf88:	bx	lr
    cf8c:	ldr	r0, [pc, #1504]	; d574 <bt_compidtostr@@Base+0x6020>
    cf90:	add	r0, pc, r0
    cf94:	bx	lr
    cf98:	ldr	r0, [pc, #1496]	; d578 <bt_compidtostr@@Base+0x6024>
    cf9c:	add	r0, pc, r0
    cfa0:	bx	lr
    cfa4:	ldr	r0, [pc, #1488]	; d57c <bt_compidtostr@@Base+0x6028>
    cfa8:	add	r0, pc, r0
    cfac:	bx	lr
    cfb0:	ldr	r0, [pc, #1480]	; d580 <bt_compidtostr@@Base+0x602c>
    cfb4:	add	r0, pc, r0
    cfb8:	bx	lr
    cfbc:	ldr	r0, [pc, #1472]	; d584 <bt_compidtostr@@Base+0x6030>
    cfc0:	add	r0, pc, r0
    cfc4:	bx	lr
    cfc8:	ldr	r0, [pc, #1464]	; d588 <bt_compidtostr@@Base+0x6034>
    cfcc:	add	r0, pc, r0
    cfd0:	bx	lr
    cfd4:	ldr	r0, [pc, #1456]	; d58c <bt_compidtostr@@Base+0x6038>
    cfd8:	add	r0, pc, r0
    cfdc:	bx	lr
    cfe0:	ldr	r0, [pc, #1448]	; d590 <bt_compidtostr@@Base+0x603c>
    cfe4:	add	r0, pc, r0
    cfe8:	bx	lr
    cfec:	ldr	r0, [pc, #1440]	; d594 <bt_compidtostr@@Base+0x6040>
    cff0:	add	r0, pc, r0
    cff4:	bx	lr
    cff8:	ldr	r0, [pc, #1432]	; d598 <bt_compidtostr@@Base+0x6044>
    cffc:	add	r0, pc, r0
    d000:	bx	lr
    d004:	ldr	r0, [pc, #1424]	; d59c <bt_compidtostr@@Base+0x6048>
    d008:	add	r0, pc, r0
    d00c:	bx	lr
    d010:	ldr	r0, [pc, #1416]	; d5a0 <bt_compidtostr@@Base+0x604c>
    d014:	add	r0, pc, r0
    d018:	bx	lr
    d01c:	ldr	r0, [pc, #1408]	; d5a4 <bt_compidtostr@@Base+0x6050>
    d020:	add	r0, pc, r0
    d024:	bx	lr
    d028:	ldr	r0, [pc, #1400]	; d5a8 <bt_compidtostr@@Base+0x6054>
    d02c:	add	r0, pc, r0
    d030:	bx	lr
    d034:	ldr	r0, [pc, #1392]	; d5ac <bt_compidtostr@@Base+0x6058>
    d038:	add	r0, pc, r0
    d03c:	bx	lr
    d040:	ldr	r0, [pc, #1384]	; d5b0 <bt_compidtostr@@Base+0x605c>
    d044:	add	r0, pc, r0
    d048:	bx	lr
    d04c:	ldr	r0, [pc, #1376]	; d5b4 <bt_compidtostr@@Base+0x6060>
    d050:	add	r0, pc, r0
    d054:	bx	lr
    d058:	ldr	r0, [pc, #1368]	; d5b8 <bt_compidtostr@@Base+0x6064>
    d05c:	add	r0, pc, r0
    d060:	bx	lr
    d064:	ldr	r0, [pc, #1360]	; d5bc <bt_compidtostr@@Base+0x6068>
    d068:	add	r0, pc, r0
    d06c:	bx	lr
    d070:	ldr	r0, [pc, #1352]	; d5c0 <bt_compidtostr@@Base+0x606c>
    d074:	add	r0, pc, r0
    d078:	bx	lr
    d07c:	ldr	r0, [pc, #1344]	; d5c4 <bt_compidtostr@@Base+0x6070>
    d080:	add	r0, pc, r0
    d084:	bx	lr
    d088:	ldr	r0, [pc, #1336]	; d5c8 <bt_compidtostr@@Base+0x6074>
    d08c:	add	r0, pc, r0
    d090:	bx	lr
    d094:	ldr	r0, [pc, #1328]	; d5cc <bt_compidtostr@@Base+0x6078>
    d098:	add	r0, pc, r0
    d09c:	bx	lr
    d0a0:	ldr	r0, [pc, #1320]	; d5d0 <bt_compidtostr@@Base+0x607c>
    d0a4:	add	r0, pc, r0
    d0a8:	bx	lr
    d0ac:	ldr	r0, [pc, #1312]	; d5d4 <bt_compidtostr@@Base+0x6080>
    d0b0:	add	r0, pc, r0
    d0b4:	bx	lr
    d0b8:	ldr	r0, [pc, #1304]	; d5d8 <bt_compidtostr@@Base+0x6084>
    d0bc:	add	r0, pc, r0
    d0c0:	bx	lr
    d0c4:	ldr	r0, [pc, #1296]	; d5dc <bt_compidtostr@@Base+0x6088>
    d0c8:	add	r0, pc, r0
    d0cc:	bx	lr
    d0d0:	ldr	r0, [pc, #1288]	; d5e0 <bt_compidtostr@@Base+0x608c>
    d0d4:	add	r0, pc, r0
    d0d8:	bx	lr
    d0dc:	ldr	r0, [pc, #1280]	; d5e4 <bt_compidtostr@@Base+0x6090>
    d0e0:	add	r0, pc, r0
    d0e4:	bx	lr
    d0e8:	ldr	r0, [pc, #1272]	; d5e8 <bt_compidtostr@@Base+0x6094>
    d0ec:	add	r0, pc, r0
    d0f0:	bx	lr
    d0f4:	ldr	r0, [pc, #1264]	; d5ec <bt_compidtostr@@Base+0x6098>
    d0f8:	add	r0, pc, r0
    d0fc:	bx	lr
    d100:	ldr	r0, [pc, #1256]	; d5f0 <bt_compidtostr@@Base+0x609c>
    d104:	add	r0, pc, r0
    d108:	bx	lr
    d10c:	ldr	r0, [pc, #1248]	; d5f4 <bt_compidtostr@@Base+0x60a0>
    d110:	add	r0, pc, r0
    d114:	bx	lr
    d118:	ldr	r0, [pc, #1240]	; d5f8 <bt_compidtostr@@Base+0x60a4>
    d11c:	add	r0, pc, r0
    d120:	bx	lr
    d124:	ldr	r0, [pc, #1232]	; d5fc <bt_compidtostr@@Base+0x60a8>
    d128:	add	r0, pc, r0
    d12c:	bx	lr
    d130:	ldr	r0, [pc, #1224]	; d600 <bt_compidtostr@@Base+0x60ac>
    d134:	add	r0, pc, r0
    d138:	bx	lr
    d13c:	ldr	r0, [pc, #1216]	; d604 <bt_compidtostr@@Base+0x60b0>
    d140:	add	r0, pc, r0
    d144:	bx	lr
    d148:	ldr	r0, [pc, #1208]	; d608 <bt_compidtostr@@Base+0x60b4>
    d14c:	add	r0, pc, r0
    d150:	bx	lr
    d154:	ldr	r0, [pc, #1200]	; d60c <bt_compidtostr@@Base+0x60b8>
    d158:	add	r0, pc, r0
    d15c:	bx	lr
    d160:	ldr	r0, [pc, #1192]	; d610 <bt_compidtostr@@Base+0x60bc>
    d164:	add	r0, pc, r0
    d168:	bx	lr
    d16c:	ldr	r0, [pc, #1184]	; d614 <bt_compidtostr@@Base+0x60c0>
    d170:	add	r0, pc, r0
    d174:	bx	lr
    d178:	ldr	r0, [pc, #1176]	; d618 <bt_compidtostr@@Base+0x60c4>
    d17c:	add	r0, pc, r0
    d180:	bx	lr
    d184:	ldr	r0, [pc, #1168]	; d61c <bt_compidtostr@@Base+0x60c8>
    d188:	add	r0, pc, r0
    d18c:	bx	lr
    d190:	ldr	r0, [pc, #1160]	; d620 <bt_compidtostr@@Base+0x60cc>
    d194:	add	r0, pc, r0
    d198:	bx	lr
    d19c:	ldr	r0, [pc, #1152]	; d624 <bt_compidtostr@@Base+0x60d0>
    d1a0:	add	r0, pc, r0
    d1a4:	bx	lr
    d1a8:	ldr	r0, [pc, #1144]	; d628 <bt_compidtostr@@Base+0x60d4>
    d1ac:	add	r0, pc, r0
    d1b0:	bx	lr
    d1b4:	ldr	r0, [pc, #1136]	; d62c <bt_compidtostr@@Base+0x60d8>
    d1b8:	add	r0, pc, r0
    d1bc:	bx	lr
    d1c0:	ldr	r0, [pc, #1128]	; d630 <bt_compidtostr@@Base+0x60dc>
    d1c4:	add	r0, pc, r0
    d1c8:	bx	lr
    d1cc:	ldr	r0, [pc, #1120]	; d634 <bt_compidtostr@@Base+0x60e0>
    d1d0:	add	r0, pc, r0
    d1d4:	bx	lr
    d1d8:	ldr	r0, [pc, #1112]	; d638 <bt_compidtostr@@Base+0x60e4>
    d1dc:	add	r0, pc, r0
    d1e0:	bx	lr
    d1e4:	ldr	r0, [pc, #1104]	; d63c <bt_compidtostr@@Base+0x60e8>
    d1e8:	add	r0, pc, r0
    d1ec:	bx	lr
    d1f0:	ldr	r0, [pc, #1096]	; d640 <bt_compidtostr@@Base+0x60ec>
    d1f4:	add	r0, pc, r0
    d1f8:	bx	lr
    d1fc:	ldr	r0, [pc, #1088]	; d644 <bt_compidtostr@@Base+0x60f0>
    d200:	add	r0, pc, r0
    d204:	bx	lr
    d208:	ldr	r0, [pc, #1080]	; d648 <bt_compidtostr@@Base+0x60f4>
    d20c:	add	r0, pc, r0
    d210:	bx	lr
    d214:	ldr	r0, [pc, #1072]	; d64c <bt_compidtostr@@Base+0x60f8>
    d218:	add	r0, pc, r0
    d21c:	bx	lr
    d220:	ldr	r0, [pc, #1064]	; d650 <bt_compidtostr@@Base+0x60fc>
    d224:	add	r0, pc, r0
    d228:	bx	lr
    d22c:	ldr	r0, [pc, #1056]	; d654 <bt_compidtostr@@Base+0x6100>
    d230:	add	r0, pc, r0
    d234:	bx	lr
    d238:	ldr	r0, [pc, #1048]	; d658 <bt_compidtostr@@Base+0x6104>
    d23c:	add	r0, pc, r0
    d240:	bx	lr
    d244:	ldr	r0, [pc, #1040]	; d65c <bt_compidtostr@@Base+0x6108>
    d248:	add	r0, pc, r0
    d24c:	bx	lr
    d250:	ldr	r0, [pc, #1032]	; d660 <bt_compidtostr@@Base+0x610c>
    d254:	add	r0, pc, r0
    d258:	bx	lr
    d25c:	ldr	r0, [pc, #1024]	; d664 <bt_compidtostr@@Base+0x6110>
    d260:	add	r0, pc, r0
    d264:	bx	lr
    d268:	ldr	r0, [pc, #1016]	; d668 <bt_compidtostr@@Base+0x6114>
    d26c:	add	r0, pc, r0
    d270:	bx	lr
    d274:	ldr	r0, [pc, #1008]	; d66c <bt_compidtostr@@Base+0x6118>
    d278:	add	r0, pc, r0
    d27c:	bx	lr
    d280:	ldr	r0, [pc, #1000]	; d670 <bt_compidtostr@@Base+0x611c>
    d284:	add	r0, pc, r0
    d288:	bx	lr
    d28c:	ldr	r0, [pc, #992]	; d674 <bt_compidtostr@@Base+0x6120>
    d290:	add	r0, pc, r0
    d294:	bx	lr
    d298:	ldr	r0, [pc, #984]	; d678 <bt_compidtostr@@Base+0x6124>
    d29c:	add	r0, pc, r0
    d2a0:	bx	lr
    d2a4:	ldr	r0, [pc, #976]	; d67c <bt_compidtostr@@Base+0x6128>
    d2a8:	add	r0, pc, r0
    d2ac:	bx	lr
    d2b0:	ldr	r0, [pc, #968]	; d680 <bt_compidtostr@@Base+0x612c>
    d2b4:	add	r0, pc, r0
    d2b8:	bx	lr
    d2bc:	ldr	r0, [pc, #960]	; d684 <bt_compidtostr@@Base+0x6130>
    d2c0:	add	r0, pc, r0
    d2c4:	bx	lr
    d2c8:	ldr	r0, [pc, #952]	; d688 <bt_compidtostr@@Base+0x6134>
    d2cc:	add	r0, pc, r0
    d2d0:	bx	lr
    d2d4:	ldr	r0, [pc, #944]	; d68c <bt_compidtostr@@Base+0x6138>
    d2d8:	add	r0, pc, r0
    d2dc:	bx	lr
    d2e0:	ldr	r0, [pc, #936]	; d690 <bt_compidtostr@@Base+0x613c>
    d2e4:	add	r0, pc, r0
    d2e8:	bx	lr
    d2ec:	ldr	r0, [pc, #928]	; d694 <bt_compidtostr@@Base+0x6140>
    d2f0:	add	r0, pc, r0
    d2f4:	bx	lr
    d2f8:	ldr	r0, [pc, #920]	; d698 <bt_compidtostr@@Base+0x6144>
    d2fc:	add	r0, pc, r0
    d300:	bx	lr
    d304:	ldr	r0, [pc, #912]	; d69c <bt_compidtostr@@Base+0x6148>
    d308:	add	r0, pc, r0
    d30c:	bx	lr
    d310:	ldr	r0, [pc, #904]	; d6a0 <bt_compidtostr@@Base+0x614c>
    d314:	add	r0, pc, r0
    d318:	bx	lr
    d31c:	ldr	r0, [pc, #896]	; d6a4 <bt_compidtostr@@Base+0x6150>
    d320:	add	r0, pc, r0
    d324:	bx	lr
    d328:	ldr	r0, [pc, #888]	; d6a8 <bt_compidtostr@@Base+0x6154>
    d32c:	add	r0, pc, r0
    d330:	bx	lr
    d334:	ldr	r0, [pc, #880]	; d6ac <bt_compidtostr@@Base+0x6158>
    d338:	add	r0, pc, r0
    d33c:	bx	lr
    d340:	ldr	r0, [pc, #872]	; d6b0 <bt_compidtostr@@Base+0x615c>
    d344:	add	r0, pc, r0
    d348:	bx	lr
    d34c:	ldr	r0, [pc, #864]	; d6b4 <bt_compidtostr@@Base+0x6160>
    d350:	add	r0, pc, r0
    d354:	bx	lr
    d358:	ldr	r0, [pc, #856]	; d6b8 <bt_compidtostr@@Base+0x6164>
    d35c:	add	r0, pc, r0
    d360:	bx	lr
    d364:	ldr	r0, [pc, #848]	; d6bc <bt_compidtostr@@Base+0x6168>
    d368:	add	r0, pc, r0
    d36c:	bx	lr
    d370:	ldr	r0, [pc, #840]	; d6c0 <bt_compidtostr@@Base+0x616c>
    d374:	add	r0, pc, r0
    d378:	bx	lr
    d37c:	ldr	r0, [pc, #832]	; d6c4 <bt_compidtostr@@Base+0x6170>
    d380:	add	r0, pc, r0
    d384:	bx	lr
    d388:	ldr	r0, [pc, #824]	; d6c8 <bt_compidtostr@@Base+0x6174>
    d38c:	add	r0, pc, r0
    d390:	bx	lr
    d394:	ldr	r0, [pc, #816]	; d6cc <bt_compidtostr@@Base+0x6178>
    d398:	add	r0, pc, r0
    d39c:	bx	lr
    d3a0:	ldr	r0, [pc, #808]	; d6d0 <bt_compidtostr@@Base+0x617c>
    d3a4:	add	r0, pc, r0
    d3a8:	bx	lr
    d3ac:	ldr	r0, [pc, #800]	; d6d4 <bt_compidtostr@@Base+0x6180>
    d3b0:	add	r0, pc, r0
    d3b4:	bx	lr
    d3b8:	ldr	r0, [pc, #792]	; d6d8 <bt_compidtostr@@Base+0x6184>
    d3bc:	add	r0, pc, r0
    d3c0:	bx	lr
    d3c4:	ldr	r0, [pc, #784]	; d6dc <bt_compidtostr@@Base+0x6188>
    d3c8:	add	r0, pc, r0
    d3cc:	bx	lr
    d3d0:	andeq	r9, r0, r4, asr r7
    d3d4:	andeq	r9, r0, pc, ror #14
    d3d8:	andeq	r9, r0, r2, ror r7
    d3dc:	andeq	r9, r0, r1, ror r7
    d3e0:	andeq	r9, r0, r5, lsl #15
    d3e4:	andeq	r9, r0, r3, lsl #15
    d3e8:	muleq	r0, r3, r7
    d3ec:	andeq	r9, r0, r8, lsr #15
    d3f0:			; <UNDEFINED> instruction: 0x000097b5
    d3f4:	andeq	r9, r0, r4, asr #15
    d3f8:	andeq	r9, r0, r9, ror #15
    d3fc:	strdeq	r9, [r0], -r0
    d400:	strdeq	r9, [r0], -r8
    d404:	andeq	r9, r0, r8, lsl #16
    d408:	andeq	r9, r0, r9, lsl #16
    d40c:	andeq	r9, r0, r9, lsl #16
    d410:	andeq	r9, r0, r9, lsr #16
    d414:	andeq	r9, r0, r7, lsr #16
    d418:	andeq	r9, r0, pc, lsr #16
    d41c:	andeq	r9, r0, r5, asr #16
    d420:	andeq	r9, r0, sl, asr #16
    d424:	andeq	r9, r0, r5, ror #16
    d428:	andeq	r9, r0, r8, ror r8
    d42c:	andeq	r9, r0, r8, ror r8
    d430:	andeq	r9, r0, r2, lsl #17
    d434:	muleq	r0, r0, r8
    d438:	muleq	r0, r8, r8
    d43c:	muleq	r0, r6, r8
    d440:	andeq	r9, r0, fp, lsr #17
    d444:			; <UNDEFINED> instruction: 0x000098b9
    d448:	andeq	r9, r0, r3, asr #17
    d44c:	andeq	r9, r0, pc, asr #17
    d450:	ldrdeq	r9, [r0], -r1
    d454:	andeq	r9, r0, ip, asr #17
    d458:			; <UNDEFINED> instruction: 0x00008cba
    d45c:	ldrdeq	r9, [r0], -r1
    d460:	ldrdeq	r9, [r0], -r6
    d464:	andeq	r9, r0, ip, ror #17
    d468:	strdeq	r9, [r0], -r7
    d46c:	strdeq	r9, [r0], -r6
    d470:	andeq	r9, r0, r6, lsl r9
    d474:	andeq	r9, r0, r3, lsr #18
    d478:	andeq	r9, r0, fp, lsr #18
    d47c:	andeq	r9, r0, r7, asr #18
    d480:	andeq	r9, r0, sp, asr #18
    d484:	andeq	r9, r0, sp, asr r9
    d488:	andeq	r9, r0, r4, ror #18
    d48c:	andeq	r9, r0, r0, ror #18
    d490:	andeq	r9, r0, ip, asr r9
    d494:	andeq	r9, r0, r5, ror #18
    d498:	andeq	r9, r0, r8, lsl #19
    d49c:	andeq	r9, r0, ip, lsl #19
    d4a0:	muleq	r0, sl, r9
    d4a4:			; <UNDEFINED> instruction: 0x000099b0
    d4a8:	andeq	r9, r0, r7, asr #19
    d4ac:	ldrdeq	r9, [r0], -r4
    d4b0:	strdeq	r9, [r0], -r2
    d4b4:	strdeq	r9, [r0], -ip
    d4b8:	andeq	r9, r0, r1, lsl #20
    d4bc:	andeq	r9, r0, r9, lsl sl
    d4c0:	andeq	r9, r0, ip, lsr #20
    d4c4:	andeq	r9, r0, ip, lsr #20
    d4c8:	andeq	r9, r0, r6, lsr sl
    d4cc:	andeq	r9, r0, ip, lsr sl
    d4d0:	andeq	r9, r0, r8, lsr sl
    d4d4:	andeq	r9, r0, lr, asr #20
    d4d8:	andeq	r9, r0, r3, asr sl
    d4dc:	andeq	r9, r0, r2, asr sl
    d4e0:	andeq	r9, r0, r0, ror sl
    d4e4:	andeq	r9, r0, lr, lsl #21
    d4e8:	muleq	r0, r6, sl
    d4ec:	andeq	r9, r0, r2, lsr #21
    d4f0:	andeq	r9, r0, r7, lsr #21
    d4f4:			; <UNDEFINED> instruction: 0x00009ab2
    d4f8:			; <UNDEFINED> instruction: 0x00009abd
    d4fc:	andeq	r9, r0, r1, asr #21
    d500:	andeq	r9, r0, r1, asr #21
    d504:	andeq	r9, r0, lr, asr #21
    d508:	ldrdeq	r9, [r0], -r3
    d50c:	ldrdeq	r9, [r0], -r5
    d510:	andeq	r9, r0, r5, ror #21
    d514:	andeq	r9, r0, r0, lsl #22
    d518:	strdeq	r9, [r0], -sp
    d51c:	andeq	r9, r0, lr, lsr #22
    d520:	andeq	r9, r0, sl, lsr #22
    d524:	andeq	r9, r0, r0, lsr fp
    d528:	andeq	r9, r0, sl, asr #22
    d52c:	andeq	r9, r0, sp, asr #22
    d530:	andeq	r9, r0, sp, asr #22
    d534:	andeq	r9, r0, r8, ror #22
    d538:	andeq	r9, r0, r3, ror fp
    d53c:	andeq	r9, r0, fp, ror fp
    d540:			; <UNDEFINED> instruction: 0x00009bb4
    d544:			; <UNDEFINED> instruction: 0x00009bb5
    d548:			; <UNDEFINED> instruction: 0x00009bbb
    d54c:	andeq	r9, r0, r4, asr #23
    d550:	andeq	r9, r0, lr, asr #23
    d554:	ldrdeq	r9, [r0], -r6
    d558:	ldrdeq	r9, [r0], -fp
    d55c:	andeq	r9, r0, sl, ror #23
    d560:	andeq	r9, r0, sl, ror #23
    d564:	andeq	r9, r0, lr, ror #23
    d568:	strdeq	r9, [r0], -r5
    d56c:	strdeq	r9, [r0], -r8
    d570:	andeq	r9, r0, r7, lsl #24
    d574:	andeq	r9, r0, pc, lsl #24
    d578:	andeq	r9, r0, r3, lsl ip
    d57c:	andeq	r9, r0, r8, lsl ip
    d580:	andeq	r9, r0, r3, lsr #24
    d584:	andeq	r9, r0, sp, lsr ip
    d588:	andeq	r9, r0, r3, asr #24
    d58c:	andeq	r9, r0, r9, ror #24
    d590:	andeq	r9, r0, pc, ror #24
    d594:	andeq	r9, r0, r8, ror ip
    d598:	muleq	r0, r0, ip
    d59c:	andeq	r9, r0, r2, lsr #25
    d5a0:	andeq	r9, r0, r5, lsr #25
    d5a4:	andeq	r9, r0, fp, asr #25
    d5a8:	andeq	r9, r0, r9, asr #25
    d5ac:	andeq	r9, r0, sl, asr #25
    d5b0:	ldrdeq	r9, [r0], -ip
    d5b4:	andeq	r9, r0, fp, ror #25
    d5b8:	andeq	r9, r0, sl, ror #25
    d5bc:	strdeq	r9, [r0], -r0
    d5c0:	andeq	r9, r0, r1, lsl #26
    d5c4:	andeq	r9, r0, r4, lsl #26
    d5c8:	andeq	r9, r0, r2, lsr sp
    d5cc:	andeq	r9, r0, r5, asr #26
    d5d0:	andeq	r9, r0, fp, asr #26
    d5d4:	andeq	r9, r0, r3, asr sp
    d5d8:	andeq	r9, r0, r3, asr sp
    d5dc:	andeq	r9, r0, r6, asr sp
    d5e0:	andeq	r9, r0, fp, lsl #27
    d5e4:	muleq	r0, r4, sp
    d5e8:	muleq	r0, r5, sp
    d5ec:	andeq	r9, r0, r6, lsr #27
    d5f0:	andeq	r9, r0, pc, lsr #27
    d5f4:			; <UNDEFINED> instruction: 0x00009db5
    d5f8:	andeq	r9, r0, pc, asr #27
    d5fc:	ldrdeq	r9, [r0], -fp
    d600:	andeq	r9, r0, r4, ror #27
    d604:	strdeq	r9, [r0], -r8
    d608:	andeq	r9, r0, ip, lsl #28
    d60c:	andeq	r9, r0, r4, lsl lr
    d610:	andeq	r9, r0, r8, lsl lr
    d614:	andeq	r9, r0, fp, lsr #28
    d618:	andeq	r9, r0, sl, lsr #28
    d61c:	andeq	r9, r0, lr, asr #28
    d620:	andeq	r9, r0, ip, asr lr
    d624:	andeq	r9, r0, ip, asr lr
    d628:	andeq	r9, r0, sp, asr lr
    d62c:	andeq	r9, r0, r5, lsl #29
    d630:	andeq	r9, r0, r8, lsl #29
    d634:	muleq	r0, r2, lr
    d638:	andeq	r9, r0, r0, lsr #29
    d63c:	andeq	r9, r0, r4, lsr #29
    d640:	andeq	r9, r0, r9, lsr #29
    d644:			; <UNDEFINED> instruction: 0x00009eb9
    d648:			; <UNDEFINED> instruction: 0x00009eb7
    d64c:	andeq	r9, r0, r5, asr #29
    d650:	andeq	r9, r0, r3, ror #29
    d654:	andeq	r9, r0, r0, lsl #30
    d658:	andeq	r9, r0, r0, lsl pc
    d65c:	andeq	r9, r0, r1, lsr #30
    d660:	andeq	r9, r0, r1, lsr #30
    d664:	andeq	r9, r0, ip, lsl pc
    d668:	andeq	r9, r0, fp, lsr pc
    d66c:	andeq	r9, r0, r3, asr pc
    d670:	andeq	r9, r0, lr, ror #30
    d674:	andeq	r9, r0, sl, ror pc
    d678:	andeq	r9, r0, sp, ror pc
    d67c:	andeq	r9, r0, r6, lsl #31
    d680:	muleq	r0, sp, pc	; <UNPREDICTABLE>
    d684:	muleq	r0, r7, pc	; <UNPREDICTABLE>
    d688:	andeq	r9, r0, r5, lsr #31
    d68c:			; <UNDEFINED> instruction: 0x00009fb7
    d690:	andeq	r9, r0, r0, asr #31
    d694:	andeq	r9, r0, r0, asr #31
    d698:	ldrdeq	r9, [r0], -r8
    d69c:	ldrdeq	r9, [r0], -fp
    d6a0:	andeq	r9, r0, fp, ror #31
    d6a4:	andeq	sl, r0, r5
    d6a8:	andeq	sl, r0, r8
    d6ac:	andeq	sl, r0, r4, lsl r0
    d6b0:	andeq	sl, r0, ip, lsl r0
    d6b4:	andeq	sl, r0, fp, lsr #32
    d6b8:	andeq	sl, r0, r1, asr #32
    d6bc:	andeq	sl, r0, r8, rrx
    d6c0:	andeq	sl, r0, sl, rrx
    d6c4:	andeq	sl, r0, r9, ror r0
    d6c8:	andeq	sl, r0, r4, lsl #1
    d6cc:	andeq	sl, r0, r7, lsl #1
    d6d0:	andeq	sl, r0, r0, lsl #1
    d6d4:	andeq	sl, r0, pc, ror r0
    d6d8:	andeq	sl, r0, r2, lsl #1
    d6dc:	andeq	sl, r0, r8, lsl #1

0000d6e0 <btbb_pcap_open@@Base>:
    d6e0:	push	{r4, lr}
    d6e4:	sub	sp, sp, #24
    d6e8:	ldr	r3, [pc, #88]	; d748 <btbb_pcap_open@@Base+0x68>
    d6ec:	str	r1, [sp, #20]
    d6f0:	str	r3, [sp]
    d6f4:	ldr	r1, [pc, #80]	; d74c <btbb_pcap_open@@Base+0x6c>
    d6f8:	mov	r3, #2
    d6fc:	strh	r3, [sp, #4]
    d700:	mov	r3, #4
    d704:	strh	r3, [sp, #6]
    d708:	add	r1, pc, r1
    d70c:	mov	r3, #0
    d710:	str	r3, [sp, #8]
    d714:	str	r3, [sp, #12]
    d718:	str	r2, [sp, #16]
    d71c:	bl	2180 <fopen@plt>
    d720:	subs	r4, r0, #0
    d724:	beq	d73c <btbb_pcap_open@@Base+0x5c>
    d728:	mov	r3, r4
    d72c:	mov	r2, #1
    d730:	mov	r1, #24
    d734:	mov	r0, sp
    d738:	bl	22d0 <fwrite@plt>
    d73c:	mov	r0, r4
    d740:	add	sp, sp, #24
    d744:	pop	{r4, pc}
    d748:			; <UNDEFINED> instruction: 0xa1b23c4d
    d74c:	andeq	r9, r0, r1, lsl #27

0000d750 <btbb_pcap_dump@@Base>:
    d750:	push	{r4, r5, r6, lr}
    d754:	mov	r4, r1
    d758:	mov	r5, r0
    d75c:	mov	r6, r2
    d760:	mov	r3, r0
    d764:	mov	r2, #1
    d768:	mov	r1, #16
    d76c:	mov	r0, r4
    d770:	bl	22d0 <fwrite@plt>
    d774:	ldrb	r3, [r4, #9]
    d778:	ldrb	r1, [r4, #8]
    d77c:	ldrb	r0, [r4, #11]
    d780:	mov	r2, #1
    d784:	orr	r1, r1, r3, lsl #8
    d788:	ldrb	r3, [r4, #10]
    d78c:	orr	r1, r1, r3, lsl #16
    d790:	orr	r1, r1, r0, lsl #24
    d794:	mov	r3, r5
    d798:	mov	r0, r6
    d79c:	bl	22d0 <fwrite@plt>
    d7a0:	mov	r0, r5
    d7a4:	pop	{r4, r5, r6, lr}
    d7a8:	b	2198 <fflush@plt>

0000d7ac <btbb_pcap_append_packet@@Base>:
    d7ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7b0:	add	fp, sp, #32
    d7b4:	cmp	r0, #0
    d7b8:	sub	sp, sp, #484	; 0x1e4
    d7bc:	ldrsb	r7, [fp, #4]
    d7c0:	ldrsb	r6, [fp, #8]
    d7c4:	ldrb	r9, [fp, #16]
    d7c8:	beq	d964 <btbb_pcap_append_packet@@Base+0x1b8>
    d7cc:	ldr	r1, [r0]
    d7d0:	cmp	r1, #0
    d7d4:	beq	d964 <btbb_pcap_append_packet@@Base+0x1b8>
    d7d8:	sub	r1, fp, #484	; 0x1e4
    d7dc:	cmp	r6, r7
    d7e0:	strd	r2, [r1]
    d7e4:	ldr	r3, [fp, #12]
    d7e8:	movlt	r4, #7
    d7ec:	movge	r4, #3
    d7f0:	cmn	r3, #1
    d7f4:	movne	r3, #16
    d7f8:	moveq	r3, #0
    d7fc:	cmp	r9, #255	; 0xff
    d800:	orr	r3, r4, r3
    d804:	str	r0, [fp, #-512]	; 0xfffffe00
    d808:	movne	r4, #128	; 0x80
    d80c:	moveq	r4, #0
    d810:	ldr	r0, [fp, #20]
    d814:	orr	r4, r4, r3
    d818:	str	sp, [fp, #-488]	; 0xfffffe18
    d81c:	bl	239c <btbb_packet_get_payload_length@plt>
    d820:	add	r3, r0, #7
    d824:	bic	r3, r3, #7
    d828:	sub	sp, sp, r3
    d82c:	mov	r1, sp
    d830:	mov	r5, r0
    d834:	ldr	r0, [fp, #20]
    d838:	bl	2168 <btbb_get_payload_packed@plt>
    d83c:	cmp	r5, #400	; 0x190
    d840:	ldr	r0, [fp, #20]
    d844:	movcs	r5, #400	; 0x190
    d848:	bl	24ec <btbb_packet_get_channel@plt>
    d84c:	add	r8, r5, #22
    d850:	str	r0, [fp, #-496]	; 0xfffffe10
    d854:	ldr	r0, [fp, #20]
    d858:	bl	21d4 <btbb_packet_get_ac_errors@plt>
    d85c:	str	r0, [fp, #-500]	; 0xfffffe0c
    d860:	ldr	r0, [fp, #20]
    d864:	bl	2414 <btbb_packet_get_transport@plt>
    d868:	str	r0, [fp, #-504]	; 0xfffffe08
    d86c:	ldr	r0, [fp, #20]
    d870:	bl	21c8 <btbb_packet_get_modulation@plt>
    d874:	str	r0, [fp, #-508]	; 0xfffffe04
    d878:	ldr	r0, [fp, #20]
    d87c:	bl	2474 <btbb_packet_get_lap@plt>
    d880:	mov	sl, r0
    d884:	ldr	r0, [fp, #20]
    d888:	bl	23cc <btbb_packet_get_header_packed@plt>
    d88c:	sub	r1, fp, #484	; 0x1e4
    d890:	add	r3, pc, #216	; 0xd8
    d894:	ldrd	r2, [r3]
    d898:	str	r0, [fp, #-492]	; 0xfffffe14
    d89c:	ldrd	r0, [r1]
    d8a0:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    d8a4:	sub	r1, fp, #484	; 0x1e4
    d8a8:	add	r3, pc, #192	; 0xc0
    d8ac:	ldrd	r2, [r3]
    d8b0:	str	r0, [fp, #-476]	; 0xfffffe24
    d8b4:	ldrd	r0, [r1]
    d8b8:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    d8bc:	ldrb	r3, [fp, #-496]	; 0xfffffe10
    d8c0:	strb	r6, [fp, #-458]	; 0xfffffe36
    d8c4:	sub	r6, fp, #476	; 0x1dc
    d8c8:	strb	r3, [fp, #-460]	; 0xfffffe34
    d8cc:	ldrb	r3, [fp, #-500]	; 0xfffffe0c
    d8d0:	cmp	r5, #0
    d8d4:	str	r8, [fp, #-468]	; 0xfffffe2c
    d8d8:	strb	r3, [fp, #-457]	; 0xfffffe37
    d8dc:	ldr	r3, [fp, #-508]	; 0xfffffe04
    d8e0:	str	r8, [fp, #-464]	; 0xfffffe30
    d8e4:	strb	r7, [fp, #-459]	; 0xfffffe35
    d8e8:	str	sl, [fp, #-452]	; 0xfffffe3c
    d8ec:	strh	r4, [r6, #36]	; 0x24
    d8f0:	str	r2, [fp, #-472]	; 0xfffffe28
    d8f4:	ldr	r2, [fp, #-504]	; 0xfffffe08
    d8f8:	orr	r3, r3, r2, lsl #4
    d8fc:	strb	r3, [fp, #-456]	; 0xfffffe38
    d900:	mov	r3, #0
    d904:	strb	r3, [fp, #-455]	; 0xfffffe39
    d908:	strh	r3, [r6, #22]
    d90c:	ldr	r3, [fp, #12]
    d910:	bic	r3, r3, #-16777216	; 0xff000000
    d914:	orr	r3, r3, r9, lsl #24
    d918:	str	r3, [fp, #-448]	; 0xfffffe40
    d91c:	ldr	r3, [fp, #-492]	; 0xfffffe14
    d920:	str	r3, [fp, #-444]	; 0xfffffe44
    d924:	beq	d93c <btbb_pcap_append_packet@@Base+0x190>
    d928:	mov	r2, r5
    d92c:	mov	r1, sp
    d930:	add	r0, r6, #38	; 0x26
    d934:	bl	21e0 <memcpy@plt>
    d938:	orr	r4, r4, #32
    d93c:	ldr	r3, [fp, #-512]	; 0xfffffe00
    d940:	sub	r2, fp, #460	; 0x1cc
    d944:	mov	r1, r6
    d948:	ldr	r0, [r3]
    d94c:	strh	r4, [r6, #36]	; 0x24
    d950:	bl	2360 <btbb_pcap_dump@plt>
    d954:	ldr	sp, [fp, #-488]	; 0xfffffe18
    d958:	mov	r0, #0
    d95c:	sub	sp, fp, #32
    d960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d964:	mvn	r0, #0
    d968:	b	d95c <btbb_pcap_append_packet@@Base+0x1b0>
    d96c:	nop			; (mov r0, r0)
    d970:	blcc	fe6c0178 <perm_table@@Base+0xfe697fb0>
    d974:	andeq	r0, r0, r0

0000d978 <btbb_pcap_close@@Base>:
    d978:	push	{r4, lr}
    d97c:	subs	r4, r0, #0
    d980:	beq	d9a4 <btbb_pcap_close@@Base+0x2c>
    d984:	ldr	r0, [r4]
    d988:	cmp	r0, #0
    d98c:	beq	d994 <btbb_pcap_close@@Base+0x1c>
    d990:	bl	24bc <fclose@plt>
    d994:	mov	r0, r4
    d998:	bl	21bc <free@plt>
    d99c:	mov	r0, #0
    d9a0:	pop	{r4, pc}
    d9a4:	mvn	r0, #0
    d9a8:	pop	{r4, pc}

0000d9ac <btbb_pcap_create_file@@Base>:
    d9ac:	push	{r4, r5, r6, r7, r8, lr}
    d9b0:	mov	r7, r0
    d9b4:	mov	r0, #4
    d9b8:	mov	r6, r1
    d9bc:	bl	233c <malloc@plt>
    d9c0:	subs	r5, r0, #0
    d9c4:	beq	da10 <btbb_pcap_create_file@@Base+0x64>
    d9c8:	mov	r4, #0
    d9cc:	str	r4, [r5]
    d9d0:	mov	r2, #400	; 0x190
    d9d4:	mov	r1, #255	; 0xff
    d9d8:	mov	r0, r7
    d9dc:	bl	224c <btbb_pcap_open@plt>
    d9e0:	cmp	r0, r4
    d9e4:	str	r0, [r5]
    d9e8:	strne	r5, [r6]
    d9ec:	bne	da08 <btbb_pcap_create_file@@Base+0x5c>
    d9f0:	ldr	r0, [pc, #32]	; da18 <btbb_pcap_create_file@@Base+0x6c>
    d9f4:	mvn	r4, #1
    d9f8:	add	r0, pc, r0
    d9fc:	bl	22a0 <perror@plt>
    da00:	mov	r0, r5
    da04:	bl	22e8 <btbb_pcap_close@plt>
    da08:	mov	r0, r4
    da0c:	pop	{r4, r5, r6, r7, r8, pc}
    da10:	mvn	r4, #2
    da14:	b	da00 <btbb_pcap_create_file@@Base+0x54>
    da18:	muleq	r0, r3, sl

0000da1c <lell_pcap_append_packet@@Base>:
    da1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da20:	sub	sp, sp, #308	; 0x134
    da24:	add	r1, sp, #344	; 0x158
    da28:	cmp	r0, #0
    da2c:	ldrsb	r8, [r1]
    da30:	add	r1, sp, #348	; 0x15c
    da34:	ldr	r4, [sp, #356]	; 0x164
    da38:	ldrsb	r7, [r1]
    da3c:	beq	db2c <lell_pcap_append_packet@@Base+0x110>
    da40:	ldr	r1, [r0]
    da44:	cmp	r1, #0
    da48:	beq	db2c <lell_pcap_append_packet@@Base+0x110>
    da4c:	ldr	r1, [r0, #4]
    da50:	cmp	r1, #256	; 0x100
    da54:	bne	db2c <lell_pcap_append_packet@@Base+0x110>
    da58:	cmp	r7, r8
    da5c:	strd	r2, [sp]
    da60:	str	r0, [sp, #12]
    da64:	movlt	r3, #39	; 0x27
    da68:	movge	r3, #35	; 0x23
    da6c:	mov	r0, r4
    da70:	str	r3, [sp, #8]
    da74:	bl	218c <lell_packet_is_data@plt>
    da78:	ldr	r6, [r4, #72]	; 0x48
    da7c:	add	r3, pc, #180	; 0xb4
    da80:	ldrd	r2, [r3]
    da84:	add	r5, r6, #9
    da88:	ldrb	fp, [r4, #69]	; 0x45
    da8c:	ldrb	sl, [r4, #92]	; 0x5c
    da90:	add	r6, r6, #19
    da94:	cmp	r0, #0
    da98:	moveq	r9, #16
    da9c:	movne	r9, #0
    daa0:	ldrd	r0, [sp]
    daa4:	cmp	r5, #255	; 0xff
    daa8:	movcs	r5, #255	; 0xff
    daac:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    dab0:	add	r3, pc, #128	; 0x80
    dab4:	ldrd	r2, [r3]
    dab8:	str	r0, [sp, #20]
    dabc:	ldrd	r0, [sp]
    dac0:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    dac4:	add	r3, r5, #10
    dac8:	str	r3, [sp, #32]
    dacc:	ldr	r3, [sp, #352]	; 0x160
    dad0:	mov	r1, r4
    dad4:	str	r3, [sp, #40]	; 0x28
    dad8:	ldr	r3, [sp, #8]
    dadc:	add	r0, sp, #46	; 0x2e
    dae0:	orr	r9, r3, r9
    dae4:	str	r6, [sp, #28]
    dae8:	strb	fp, [sp, #36]	; 0x24
    daec:	strb	r8, [sp, #37]	; 0x25
    daf0:	strb	r7, [sp, #38]	; 0x26
    daf4:	strb	sl, [sp, #39]	; 0x27
    daf8:	strh	r9, [sp, #44]	; 0x2c
    dafc:	add	r6, sp, #20
    db00:	str	r2, [sp, #24]
    db04:	mov	r2, r5
    db08:	bl	21e0 <memcpy@plt>
    db0c:	ldr	r3, [sp, #12]
    db10:	add	r2, sp, #36	; 0x24
    db14:	mov	r1, r6
    db18:	ldr	r0, [r3]
    db1c:	bl	2360 <btbb_pcap_dump@plt>
    db20:	mov	r0, #0
    db24:	add	sp, sp, #308	; 0x134
    db28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db2c:	mvn	r0, #0
    db30:	b	db24 <lell_pcap_append_packet@@Base+0x108>
    db34:	nop			; (mov r0, r0)
    db38:	blcc	fe6c0340 <perm_table@@Base+0xfe698178>
    db3c:	andeq	r0, r0, r0

0000db40 <lell_pcap_append_ppi_packet@@Base>:
    db40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    db44:	sub	sp, sp, #296	; 0x128
    db48:	subs	r5, r0, #0
    db4c:	ldr	r7, [sp, #348]	; 0x15c
    db50:	beq	dc88 <lell_pcap_append_ppi_packet@@Base+0x148>
    db54:	ldr	r1, [r5]
    db58:	cmp	r1, #0
    db5c:	beq	dc88 <lell_pcap_append_ppi_packet@@Base+0x148>
    db60:	ldr	r1, [r5, #4]
    db64:	cmp	r1, #192	; 0xc0
    db68:	bne	dc88 <lell_pcap_append_ppi_packet@@Base+0x148>
    db6c:	mov	r0, r7
    db70:	mov	r8, r2
    db74:	mov	r9, r3
    db78:	bl	23e4 <lell_get_channel_k@plt>
    db7c:	ldr	sl, [r7, #72]	; 0x48
    db80:	add	r3, pc, #264	; 0x108
    db84:	ldrd	r2, [r3]
    db88:	add	r6, sl, #9
    db8c:	cmp	r6, #255	; 0xff
    db90:	mov	r1, r9
    db94:	movcs	r6, #255	; 0xff
    db98:	add	sl, sl, #33	; 0x21
    db9c:	mov	r4, r0
    dba0:	mov	r0, r8
    dba4:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    dba8:	add	r3, pc, #224	; 0xe0
    dbac:	ldrd	r2, [r3]
    dbb0:	mov	r1, r9
    dbb4:	str	r0, [sp]
    dbb8:	mov	r0, r8
    dbbc:	bl	f0bc <lell_pcapng_close@@Base+0x48c>
    dbc0:	add	r3, r6, #24
    dbc4:	str	r3, [sp, #8]
    dbc8:	mov	r3, #24
    dbcc:	strh	r3, [sp, #18]
    dbd0:	mov	r3, #147	; 0x93
    dbd4:	str	r3, [sp, #20]
    dbd8:	ldr	r3, [pc, #184]	; dc98 <lell_pcap_append_ppi_packet@@Base+0x158>
    dbdc:	mov	r8, #0
    dbe0:	strh	r3, [sp, #24]
    dbe4:	mov	r3, #12
    dbe8:	strh	r3, [sp, #26]
    dbec:	ldrb	r3, [r5, #8]
    dbf0:	mov	r1, r7
    dbf4:	add	r0, sp, #40	; 0x28
    dbf8:	strb	r3, [sp, #28]
    dbfc:	add	r3, r4, #1200	; 0x4b0
    dc00:	add	r3, r3, #1
    dc04:	str	sl, [sp, #12]
    dc08:	lsl	r3, r3, #1
    dc0c:	strb	r8, [sp, #16]
    dc10:	uxth	r3, r3
    dc14:	strb	r3, [sp, #29]
    dc18:	lsr	r3, r3, #8
    dc1c:	strb	r3, [sp, #30]
    dc20:	ldrb	r3, [sp, #328]	; 0x148
    dc24:	strb	r8, [sp, #17]
    dc28:	strb	r3, [sp, #31]
    dc2c:	ldr	r3, [r7, #76]	; 0x4c
    dc30:	str	r3, [sp, #32]
    dc34:	add	r3, sp, #336	; 0x150
    dc38:	str	r2, [sp, #4]
    dc3c:	ldrsb	r3, [r3]
    dc40:	mov	r2, r6
    dc44:	strb	r3, [sp, #36]	; 0x24
    dc48:	add	r3, sp, #332	; 0x14c
    dc4c:	ldrsb	r3, [r3]
    dc50:	strb	r3, [sp, #37]	; 0x25
    dc54:	add	r3, sp, #340	; 0x154
    dc58:	ldrsb	r3, [r3]
    dc5c:	strb	r3, [sp, #38]	; 0x26
    dc60:	ldrb	r3, [sp, #344]	; 0x158
    dc64:	strb	r3, [sp, #39]	; 0x27
    dc68:	bl	21e0 <memcpy@plt>
    dc6c:	ldr	r0, [r5]
    dc70:	add	r2, sp, #16
    dc74:	mov	r1, sp
    dc78:	bl	2360 <btbb_pcap_dump@plt>
    dc7c:	mov	r0, r8
    dc80:	add	sp, sp, #296	; 0x128
    dc84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    dc88:	mvn	r0, #0
    dc8c:	b	dc80 <lell_pcap_append_ppi_packet@@Base+0x140>
    dc90:	blcc	fe6c0498 <perm_table@@Base+0xfe6982d0>
    dc94:	andeq	r0, r0, r0
    dc98:	andeq	r7, r0, r6, lsr r5

0000dc9c <lell_pcap_close@@Base>:
    dc9c:	push	{r4, lr}
    dca0:	subs	r4, r0, #0
    dca4:	beq	dcc8 <lell_pcap_close@@Base+0x2c>
    dca8:	ldr	r0, [r4]
    dcac:	cmp	r0, #0
    dcb0:	beq	dcb8 <lell_pcap_close@@Base+0x1c>
    dcb4:	bl	24bc <fclose@plt>
    dcb8:	mov	r0, r4
    dcbc:	bl	21bc <free@plt>
    dcc0:	mov	r0, #0
    dcc4:	pop	{r4, pc}
    dcc8:	mvn	r0, #0
    dccc:	pop	{r4, pc}
    dcd0:	push	{r4, r5, r6, r7, r8, lr}
    dcd4:	mov	r8, r0
    dcd8:	mov	r0, #12
    dcdc:	mov	r6, r1
    dce0:	mov	r7, r2
    dce4:	bl	233c <malloc@plt>
    dce8:	subs	r5, r0, #0
    dcec:	beq	dd2c <lell_pcap_close@@Base+0x90>
    dcf0:	mov	r4, #0
    dcf4:	str	r4, [r5]
    dcf8:	str	r4, [r5, #4]
    dcfc:	str	r4, [r5, #8]
    dd00:	mov	r2, #400	; 0x190
    dd04:	mov	r1, r6
    dd08:	mov	r0, r8
    dd0c:	bl	224c <btbb_pcap_open@plt>
    dd10:	cmp	r0, r4
    dd14:	str	r0, [r5]
    dd18:	strne	r6, [r5, #4]
    dd1c:	strne	r5, [r7]
    dd20:	bne	dd38 <lell_pcap_close@@Base+0x9c>
    dd24:	mvn	r4, #1
    dd28:	b	dd30 <lell_pcap_close@@Base+0x94>
    dd2c:	mvn	r4, #2
    dd30:	mov	r0, r5
    dd34:	bl	2234 <lell_pcap_close@plt>
    dd38:	mov	r0, r4
    dd3c:	pop	{r4, r5, r6, r7, r8, pc}

0000dd40 <lell_pcap_create_file@@Base>:
    dd40:	mov	r2, r1
    dd44:	mov	r1, #256	; 0x100
    dd48:	b	dcd0 <lell_pcap_close@@Base+0x34>

0000dd4c <lell_pcap_ppi_create_file@@Base>:
    dd4c:	push	{r4, r5, r6, lr}
    dd50:	mov	r4, r1
    dd54:	mov	r1, #192	; 0xc0
    dd58:	mov	r5, r2
    dd5c:	bl	dcd0 <lell_pcap_close@@Base+0x34>
    dd60:	cmp	r0, #0
    dd64:	ldreq	r3, [r5]
    dd68:	strbeq	r4, [r3, #8]
    dd6c:	pop	{r4, r5, r6, pc}

0000dd70 <pcapng_append_section_option@@Base>:
    dd70:	push	{r4, r5, r6, lr}
    dd74:	subs	r5, r0, #0
    dd78:	beq	de0c <pcapng_append_section_option@@Base+0x9c>
    dd7c:	ldr	r2, [r5]
    dd80:	cmn	r2, #1
    dd84:	beq	de0c <pcapng_append_section_option@@Base+0x9c>
    dd88:	ldr	ip, [r5, #4]
    dd8c:	sub	r2, ip, #1
    dd90:	cmn	r2, #3
    dd94:	bhi	de14 <pcapng_append_section_option@@Base+0xa4>
    dd98:	ldr	r0, [r5, #12]
    dd9c:	cmp	r0, #0
    dda0:	cmpne	r1, #0
    dda4:	beq	de14 <pcapng_append_section_option@@Base+0xa4>
    dda8:	ldrb	r3, [r1, #3]
    ddac:	ldrb	r4, [r1, #2]
    ddb0:	add	r0, ip, r0
    ddb4:	orr	r4, r4, r3, lsl #8
    ddb8:	add	r2, r4, #4
    ddbc:	bl	21e0 <memcpy@plt>
    ddc0:	ldr	r2, [r5, #12]
    ddc4:	add	r3, r4, #7
    ddc8:	bic	r3, r3, #3
    ddcc:	add	r3, r3, r2
    ddd0:	ldr	r2, [r5, #8]
    ddd4:	ldr	r1, [pc, #64]	; de1c <pcapng_append_section_option@@Base+0xac>
    ddd8:	sub	r2, r2, #12
    dddc:	sub	r2, r2, r3
    dde0:	add	r1, pc, r1
    dde4:	uxth	r2, r2
    dde8:	ldr	r0, [r5, #4]
    ddec:	strb	r2, [r1, #2]
    ddf0:	lsr	r2, r2, #8
    ddf4:	strb	r2, [r1, #3]
    ddf8:	ldr	r2, [r1]
    ddfc:	str	r3, [r5, #12]
    de00:	str	r2, [r0, r3]
    de04:	mov	r0, #0
    de08:	pop	{r4, r5, r6, pc}
    de0c:	mov	r0, #1
    de10:	pop	{r4, r5, r6, pc}
    de14:	mov	r0, #5
    de18:	pop	{r4, r5, r6, pc}
    de1c:	andeq	sl, r1, r4, asr #7

0000de20 <pcapng_append_interface_option@@Base>:
    de20:	push	{r4, r5, r6, lr}
    de24:	subs	r5, r0, #0
    de28:	beq	debc <pcapng_append_interface_option@@Base+0x9c>
    de2c:	ldr	r2, [r5]
    de30:	cmn	r2, #1
    de34:	beq	debc <pcapng_append_interface_option@@Base+0x9c>
    de38:	ldr	ip, [r5, #16]
    de3c:	sub	r2, ip, #1
    de40:	cmn	r2, #3
    de44:	bhi	dec4 <pcapng_append_interface_option@@Base+0xa4>
    de48:	ldr	r0, [r5, #24]
    de4c:	cmp	r0, #0
    de50:	cmpne	r1, #0
    de54:	beq	dec4 <pcapng_append_interface_option@@Base+0xa4>
    de58:	ldrb	r3, [r1, #3]
    de5c:	ldrb	r4, [r1, #2]
    de60:	add	r0, ip, r0
    de64:	orr	r4, r4, r3, lsl #8
    de68:	add	r2, r4, #4
    de6c:	bl	21e0 <memcpy@plt>
    de70:	ldr	r2, [r5, #24]
    de74:	add	r3, r4, #7
    de78:	bic	r3, r3, #3
    de7c:	add	r3, r3, r2
    de80:	ldr	r2, [r5, #20]
    de84:	ldr	r1, [pc, #64]	; decc <pcapng_append_interface_option@@Base+0xac>
    de88:	sub	r2, r2, #12
    de8c:	sub	r2, r2, r3
    de90:	add	r1, pc, r1
    de94:	uxth	r2, r2
    de98:	ldr	r0, [r5, #16]
    de9c:	strb	r2, [r1, #2]
    dea0:	lsr	r2, r2, #8
    dea4:	strb	r2, [r1, #3]
    dea8:	ldr	r2, [r1]
    deac:	str	r3, [r5, #24]
    deb0:	str	r2, [r0, r3]
    deb4:	mov	r0, #0
    deb8:	pop	{r4, r5, r6, pc}
    debc:	mov	r0, #1
    dec0:	pop	{r4, r5, r6, pc}
    dec4:	mov	r0, #5
    dec8:	pop	{r4, r5, r6, pc}
    decc:	andeq	sl, r1, r4, lsl r3

0000ded0 <pcapng_append_packet@@Base>:
    ded0:	push	{r4, r5, r6, lr}
    ded4:	subs	r5, r0, #0
    ded8:	beq	df98 <pcapng_append_packet@@Base+0xc8>
    dedc:	ldr	r0, [r5]
    dee0:	cmn	r0, #1
    dee4:	beq	df98 <pcapng_append_packet@@Base+0xc8>
    dee8:	ldrb	r2, [r1, #5]
    deec:	ldrb	r4, [r1, #4]
    def0:	ldrb	r3, [r1, #7]
    def4:	orr	r4, r4, r2, lsl #8
    def8:	ldrb	r2, [r1, #6]
    defc:	orr	r4, r4, r2, lsl #16
    df00:	orr	r4, r4, r3, lsl #24
    df04:	mov	r2, r4
    df08:	bl	2498 <write@plt>
    df0c:	cmn	r0, #1
    df10:	beq	df90 <pcapng_append_packet@@Base+0xc0>
    df14:	ldr	r3, [r5, #4]
    df18:	ldrb	ip, [r3, #17]
    df1c:	ldrb	r2, [r3, #16]
    df20:	orr	r2, r2, ip, lsl #8
    df24:	ldrb	ip, [r3, #18]
    df28:	orr	r2, r2, ip, lsl #16
    df2c:	ldrb	ip, [r3, #19]
    df30:	orr	r0, r2, ip, lsl #24
    df34:	ldrb	ip, [r3, #21]
    df38:	ldrb	r2, [r3, #20]
    df3c:	adds	r0, r0, r4
    df40:	strb	r0, [r3, #16]
    df44:	orr	r2, r2, ip, lsl #8
    df48:	ldrb	ip, [r3, #22]
    df4c:	orr	r2, r2, ip, lsl #16
    df50:	ldrb	ip, [r3, #23]
    df54:	orr	r1, r2, ip, lsl #24
    df58:	lsr	r2, r0, #8
    df5c:	adc	r1, r1, #0
    df60:	strb	r2, [r3, #17]
    df64:	lsr	r2, r0, #16
    df68:	strb	r2, [r3, #18]
    df6c:	lsr	r2, r0, #24
    df70:	strb	r2, [r3, #19]
    df74:	lsr	r2, r1, #8
    df78:	strb	r2, [r3, #21]
    df7c:	lsr	r2, r1, #16
    df80:	strb	r2, [r3, #22]
    df84:	lsr	r2, r1, #24
    df88:	strb	r1, [r3, #20]
    df8c:	strb	r2, [r3, #23]
    df90:	mov	r0, #0
    df94:	pop	{r4, r5, r6, pc}
    df98:	mov	r0, #1
    df9c:	pop	{r4, r5, r6, pc}

0000dfa0 <pcapng_close@@Base>:
    dfa0:	push	{r4, lr}
    dfa4:	mov	r4, r0
    dfa8:	ldr	r0, [r0, #16]
    dfac:	sub	r3, r0, #1
    dfb0:	cmn	r3, #3
    dfb4:	bhi	dfc0 <pcapng_close@@Base+0x20>
    dfb8:	ldr	r1, [r4, #20]
    dfbc:	bl	24d4 <munmap@plt>
    dfc0:	ldr	r0, [r4, #4]
    dfc4:	sub	r3, r0, #1
    dfc8:	cmn	r3, #3
    dfcc:	bhi	dfd8 <pcapng_close@@Base+0x38>
    dfd0:	ldr	r1, [r4, #8]
    dfd4:	bl	24d4 <munmap@plt>
    dfd8:	ldr	r0, [r4]
    dfdc:	cmn	r0, #1
    dfe0:	beq	dfe8 <pcapng_close@@Base+0x48>
    dfe4:	bl	2570 <close@plt>
    dfe8:	mov	r0, #0
    dfec:	pop	{r4, pc}

0000dff0 <pcapng_create@@Base>:
    dff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dff4:	sub	sp, sp, #52	; 0x34
    dff8:	mov	r4, r0
    dffc:	mov	r6, r1
    e000:	mov	r8, r2
    e004:	str	r3, [sp, #12]
    e008:	bl	23fc <getpagesize@plt>
    e00c:	mov	r3, #0
    e010:	str	r3, [r4, #4]
    e014:	str	r3, [r4, #16]
    e018:	str	r3, [r4, #24]
    e01c:	str	r3, [r4, #20]
    e020:	str	r3, [r4, #12]
    e024:	str	r3, [r4, #8]
    e028:	mov	r2, #432	; 0x1b0
    e02c:	mov	r1, #194	; 0xc2
    e030:	ldr	r7, [sp, #96]	; 0x60
    e034:	mov	r5, r0
    e038:	mov	r0, r6
    e03c:	bl	2378 <open@plt>
    e040:	cmn	r0, #1
    e044:	mov	r6, r0
    e048:	str	r0, [r4]
    e04c:	bne	e078 <pcapng_create@@Base+0x88>
    e050:	bl	2420 <__errno_location@plt>
    e054:	ldr	r3, [r0]
    e058:	sub	r3, r3, #12
    e05c:	cmp	r3, #16
    e060:	bhi	e0f4 <pcapng_create@@Base+0x104>
    e064:	ldr	r2, [pc, #1120]	; e4cc <pcapng_create@@Base+0x4dc>
    e068:	add	r2, pc, r2
    e06c:	ldrb	r3, [r2, r3]
    e070:	cmp	r3, #0
    e074:	bne	e0f4 <pcapng_create@@Base+0x104>
    e078:	ldr	r2, [pc, #1104]	; e4d0 <pcapng_create@@Base+0x4e0>
    e07c:	add	ip, sp, #24
    e080:	add	r2, pc, r2
    e084:	add	r3, r2, #17
    e088:	mov	sl, ip
    e08c:	add	r2, r2, #41	; 0x29
    e090:	ldr	r0, [r3]
    e094:	ldr	r1, [r3, #4]
    e098:	mov	lr, ip
    e09c:	add	r3, r3, #8
    e0a0:	cmp	r3, r2
    e0a4:	stmia	lr!, {r0, r1}
    e0a8:	mov	ip, lr
    e0ac:	bne	e090 <pcapng_create@@Base+0xa0>
    e0b0:	mov	r2, #24
    e0b4:	mov	r0, r6
    e0b8:	str	r2, [r4, #8]
    e0bc:	mov	r1, sl
    e0c0:	bl	2498 <write@plt>
    e0c4:	ldr	r3, [pc, #1032]	; e4d4 <pcapng_create@@Base+0x4e4>
    e0c8:	add	r3, pc, r3
    e0cc:	add	r3, r3, #41	; 0x29
    e0d0:	str	r3, [sp, #16]
    e0d4:	mov	r6, r0
    e0d8:	cmp	r8, #0
    e0dc:	cmnne	r6, #1
    e0e0:	bne	e120 <pcapng_create@@Base+0x130>
    e0e4:	ldr	r8, [r4, #8]
    e0e8:	cmn	r6, #1
    e0ec:	str	r8, [r4, #12]
    e0f0:	bne	e18c <pcapng_create@@Base+0x19c>
    e0f4:	mov	r5, #6
    e0f8:	b	e20c <pcapng_create@@Base+0x21c>
    e0fc:	mov	r2, r3
    e100:	ldr	r1, [sp, #16]
    e104:	ldr	r0, [r4]
    e108:	str	r3, [sp, #20]
    e10c:	bl	2498 <write@plt>
    e110:	sub	fp, fp, #1
    e114:	ldr	r3, [sp, #20]
    e118:	mov	r6, r0
    e11c:	b	e164 <pcapng_create@@Base+0x174>
    e120:	ldrb	r2, [r8, #1]
    e124:	ldrb	r3, [r8]
    e128:	orrs	r3, r3, r2, lsl #8
    e12c:	beq	e0e4 <pcapng_create@@Base+0xf4>
    e130:	ldrb	r3, [r8, #3]
    e134:	ldrb	r2, [r8, #2]
    e138:	orrs	r2, r2, r3, lsl #8
    e13c:	beq	e0e4 <pcapng_create@@Base+0xf4>
    e140:	add	r9, r2, #3
    e144:	bic	r9, r9, #3
    e148:	sub	fp, r9, r2
    e14c:	mov	r1, r8
    e150:	add	r2, r2, #4
    e154:	ldr	r0, [r4]
    e158:	bl	2498 <write@plt>
    e15c:	mov	r3, #1
    e160:	mov	r6, r0
    e164:	cmp	fp, #0
    e168:	cmnne	r6, #1
    e16c:	bne	e0fc <pcapng_create@@Base+0x10c>
    e170:	add	r3, r9, #4
    e174:	add	r8, r8, r3
    e178:	ldr	r3, [r4, #8]
    e17c:	add	r3, r3, #4
    e180:	add	r9, r3, r9
    e184:	str	r9, [r4, #8]
    e188:	b	e0d8 <pcapng_create@@Base+0xe8>
    e18c:	ldr	r3, [sp, #12]
    e190:	mov	r1, r5
    e194:	add	r0, r3, #3
    e198:	add	r0, r0, r8
    e19c:	add	r0, r0, r5
    e1a0:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    e1a4:	ldr	fp, [pc, #812]	; e4d8 <pcapng_create@@Base+0x4e8>
    e1a8:	mov	r3, #1
    e1ac:	add	fp, pc, fp
    e1b0:	add	fp, fp, #41	; 0x29
    e1b4:	mul	r0, r5, r0
    e1b8:	sub	r8, r0, r8
    e1bc:	str	r0, [r4, #8]
    e1c0:	cmp	r8, #0
    e1c4:	cmnne	r6, #1
    e1c8:	movne	r9, #1
    e1cc:	moveq	r9, #0
    e1d0:	bne	e218 <pcapng_create@@Base+0x228>
    e1d4:	ldr	r3, [r4]
    e1d8:	str	r9, [sp, #4]
    e1dc:	str	r3, [sp]
    e1e0:	mov	r2, #3
    e1e4:	mov	r3, #1
    e1e8:	ldr	r1, [r4, #8]
    e1ec:	mov	r0, r9
    e1f0:	bl	23c0 <mmap@plt>
    e1f4:	cmn	r6, #1
    e1f8:	str	r0, [r4, #4]
    e1fc:	beq	e0f4 <pcapng_create@@Base+0x104>
    e200:	cmn	r0, #1
    e204:	bne	e23c <pcapng_create@@Base+0x24c>
    e208:	mov	r5, #7
    e20c:	mov	r0, r4
    e210:	bl	251c <pcapng_close@plt>
    e214:	b	e41c <pcapng_create@@Base+0x42c>
    e218:	mov	r2, r3
    e21c:	mov	r1, fp
    e220:	ldr	r0, [r4]
    e224:	str	r3, [sp, #12]
    e228:	bl	2498 <write@plt>
    e22c:	sub	r8, r8, #1
    e230:	ldr	r3, [sp, #12]
    e234:	mov	r6, r0
    e238:	b	e1c0 <pcapng_create@@Base+0x1d0>
    e23c:	mov	r6, #16
    e240:	mov	r2, r6
    e244:	mov	r1, r9
    e248:	mov	r0, sl
    e24c:	bl	2444 <memset@plt>
    e250:	mov	r3, #1
    e254:	str	r3, [sp, #24]
    e258:	ldrh	r3, [sp, #88]	; 0x58
    e25c:	str	r6, [r4, #20]
    e260:	mov	r2, r6
    e264:	strh	r3, [sp, #32]
    e268:	ldr	r3, [sp, #92]	; 0x5c
    e26c:	mov	r1, sl
    e270:	ldr	r0, [r4]
    e274:	str	r3, [sp, #36]	; 0x24
    e278:	bl	2498 <write@plt>
    e27c:	ldr	r8, [pc, #600]	; e4dc <pcapng_create@@Base+0x4ec>
    e280:	add	r8, pc, r8
    e284:	add	r8, r8, #41	; 0x29
    e288:	mov	r6, r0
    e28c:	cmp	r7, #0
    e290:	cmnne	r6, #1
    e294:	bne	e444 <pcapng_create@@Base+0x454>
    e298:	ldr	r7, [r4, #20]
    e29c:	cmn	r6, #1
    e2a0:	str	r7, [r4, #24]
    e2a4:	beq	e0f4 <pcapng_create@@Base+0x104>
    e2a8:	ldr	r0, [sp, #100]	; 0x64
    e2ac:	mov	r1, r5
    e2b0:	add	r0, r0, #3
    e2b4:	add	r0, r0, r7
    e2b8:	add	r0, r0, r5
    e2bc:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    e2c0:	ldr	r8, [pc, #536]	; e4e0 <pcapng_create@@Base+0x4f0>
    e2c4:	mov	r9, #1
    e2c8:	add	r8, pc, r8
    e2cc:	add	r8, r8, #41	; 0x29
    e2d0:	mul	r0, r5, r0
    e2d4:	sub	r7, r0, r7
    e2d8:	str	r0, [r4, #20]
    e2dc:	cmp	r7, #0
    e2e0:	cmnne	r6, #1
    e2e4:	movne	r5, #1
    e2e8:	moveq	r5, #0
    e2ec:	bne	e4b0 <pcapng_create@@Base+0x4c0>
    e2f0:	ldr	r3, [r4, #8]
    e2f4:	mov	r2, #3
    e2f8:	str	r3, [sp, #4]
    e2fc:	ldr	r3, [r4]
    e300:	ldr	r1, [r4, #20]
    e304:	str	r3, [sp]
    e308:	mov	r0, r5
    e30c:	mov	r3, #1
    e310:	bl	23c0 <mmap@plt>
    e314:	cmn	r6, #1
    e318:	str	r0, [r4, #16]
    e31c:	beq	e0f4 <pcapng_create@@Base+0x104>
    e320:	cmn	r0, #1
    e324:	beq	e208 <pcapng_create@@Base+0x218>
    e328:	ldr	r3, [r4, #8]
    e32c:	ldr	r1, [r4, #12]
    e330:	sub	r3, r3, #12
    e334:	sub	r3, r3, r1
    e338:	ldr	r2, [pc, #420]	; e4e4 <pcapng_create@@Base+0x4f4>
    e33c:	uxth	r3, r3
    e340:	add	r2, pc, r2
    e344:	ldr	r0, [r4, #4]
    e348:	strb	r3, [r2, #2]
    e34c:	lsr	r3, r3, #8
    e350:	strb	r3, [r2, #3]
    e354:	ldr	r3, [r2]
    e358:	str	r3, [r0, r1]
    e35c:	ldr	r1, [r4, #8]
    e360:	ldr	r3, [r4, #4]
    e364:	lsr	r0, r1, #8
    e368:	strb	r0, [r3, #5]
    e36c:	lsr	r0, r1, #16
    e370:	strb	r0, [r3, #6]
    e374:	lsr	r0, r1, #24
    e378:	strb	r0, [r3, #7]
    e37c:	bic	r0, r1, #3
    e380:	strb	r1, [r3, #4]
    e384:	add	r3, r3, r0
    e388:	str	r1, [r3, #-4]
    e38c:	ldr	r3, [r4, #20]
    e390:	ldr	r1, [r4, #24]
    e394:	sub	r3, r3, #12
    e398:	sub	r3, r3, r1
    e39c:	uxth	r3, r3
    e3a0:	strb	r3, [r2, #2]
    e3a4:	lsr	r3, r3, #8
    e3a8:	strb	r3, [r2, #3]
    e3ac:	ldr	r3, [r4, #16]
    e3b0:	ldr	r2, [r2]
    e3b4:	str	r2, [r3, r1]
    e3b8:	ldr	r2, [r4, #20]
    e3bc:	ldr	r3, [r4, #16]
    e3c0:	lsr	r1, r2, #8
    e3c4:	strb	r1, [r3, #5]
    e3c8:	lsr	r1, r2, #16
    e3cc:	strb	r1, [r3, #6]
    e3d0:	lsr	r1, r2, #24
    e3d4:	strb	r1, [r3, #7]
    e3d8:	bic	r1, r2, #3
    e3dc:	strb	r2, [r3, #4]
    e3e0:	add	r3, r3, r1
    e3e4:	str	r2, [r3, #-4]
    e3e8:	ldr	r0, [r4, #20]
    e3ec:	ldr	r3, [r4, #4]
    e3f0:	lsr	r2, r0, #8
    e3f4:	strb	r0, [r3, #16]
    e3f8:	strb	r2, [r3, #17]
    e3fc:	lsr	r2, r0, #16
    e400:	lsr	r0, r0, #24
    e404:	strb	r2, [r3, #18]
    e408:	strb	r0, [r3, #19]
    e40c:	strb	r5, [r3, #20]
    e410:	strb	r5, [r3, #21]
    e414:	strb	r5, [r3, #22]
    e418:	strb	r5, [r3, #23]
    e41c:	mov	r0, r5
    e420:	add	sp, sp, #52	; 0x34
    e424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e428:	mov	r2, fp
    e42c:	mov	r1, r8
    e430:	ldr	r0, [r4]
    e434:	bl	2498 <write@plt>
    e438:	sub	sl, sl, #1
    e43c:	mov	r6, r0
    e440:	b	e488 <pcapng_create@@Base+0x498>
    e444:	ldrb	r2, [r7, #1]
    e448:	ldrb	r3, [r7]
    e44c:	orrs	r3, r3, r2, lsl #8
    e450:	beq	e298 <pcapng_create@@Base+0x2a8>
    e454:	ldrb	r3, [r7, #3]
    e458:	ldrb	r2, [r7, #2]
    e45c:	orrs	r2, r2, r3, lsl #8
    e460:	beq	e298 <pcapng_create@@Base+0x2a8>
    e464:	add	r3, r2, #3
    e468:	bic	r9, r3, #3
    e46c:	sub	sl, r9, r2
    e470:	mov	r1, r7
    e474:	add	r2, r2, #4
    e478:	ldr	r0, [r4]
    e47c:	bl	2498 <write@plt>
    e480:	mov	fp, #1
    e484:	mov	r6, r0
    e488:	cmp	sl, #0
    e48c:	cmnne	r6, #1
    e490:	bne	e428 <pcapng_create@@Base+0x438>
    e494:	add	r3, r9, #4
    e498:	add	r7, r7, r3
    e49c:	ldr	r3, [r4, #20]
    e4a0:	add	r3, r3, #4
    e4a4:	add	r3, r3, r9
    e4a8:	str	r3, [r4, #20]
    e4ac:	b	e28c <pcapng_create@@Base+0x29c>
    e4b0:	mov	r2, r9
    e4b4:	mov	r1, r8
    e4b8:	ldr	r0, [r4]
    e4bc:	bl	2498 <write@plt>
    e4c0:	sub	r7, r7, #1
    e4c4:	mov	r6, r0
    e4c8:	b	e2dc <pcapng_create@@Base+0x2ec>
    e4cc:	andeq	r9, r0, pc, lsr #8
    e4d0:	andeq	r9, r0, r7, lsl r4
    e4d4:	andeq	r9, r0, pc, asr #7
    e4d8:	andeq	r9, r0, fp, ror #5
    e4dc:	andeq	r9, r0, r7, lsl r2
    e4e0:	andeq	r9, r0, pc, asr #3
    e4e4:	andeq	r9, r1, r4, ror #28
    e4e8:	push	{r0, r1, r4, lr}
    e4ec:	mov	ip, r0
    e4f0:	mov	r4, #0
    e4f4:	mov	lr, #1
    e4f8:	mov	r2, r4
    e4fc:	eor	r0, r2, #1
    e500:	cmp	r1, #0
    e504:	moveq	r0, #0
    e508:	andne	r0, r0, #1
    e50c:	cmp	r0, #0
    e510:	beq	e574 <pcapng_create@@Base+0x584>
    e514:	ldrh	r0, [r1]
    e518:	cmp	r0, #0
    e51c:	beq	e52c <pcapng_create@@Base+0x53c>
    e520:	ldrh	r3, [r1, #2]
    e524:	cmp	r3, #0
    e528:	bne	e554 <pcapng_create@@Base+0x564>
    e52c:	ldr	r3, [pc, #80]	; e584 <pcapng_create@@Base+0x594>
    e530:	mov	r1, sp
    e534:	add	r3, pc, r3
    e538:	ldr	r0, [r3]
    e53c:	ldrb	r3, [r3, #4]
    e540:	str	r0, [sp]
    e544:	mov	r0, ip
    e548:	strb	r3, [sp, #4]
    e54c:	bl	21b0 <pcapng_append_interface_option@plt>
    e550:	b	e57c <pcapng_create@@Base+0x58c>
    e554:	cmp	r0, #9
    e558:	mov	r2, lr
    e55c:	beq	e4fc <pcapng_create@@Base+0x50c>
    e560:	add	r3, r3, #3
    e564:	bic	r3, r3, #3
    e568:	add	r3, r3, #4
    e56c:	add	r1, r1, r3
    e570:	b	e4f8 <pcapng_create@@Base+0x508>
    e574:	cmp	r2, #0
    e578:	beq	e52c <pcapng_create@@Base+0x53c>
    e57c:	add	sp, sp, #8
    e580:	pop	{r4, pc}
    e584:	andeq	r8, r0, lr, lsl #31

0000e588 <btbb_pcapng_create_file@@Base>:
    e588:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e58c:	mov	r9, r0
    e590:	sub	sp, sp, #288	; 0x120
    e594:	mov	r0, #28
    e598:	mov	r5, r1
    e59c:	mov	r7, r2
    e5a0:	bl	233c <malloc@plt>
    e5a4:	ldr	r8, [pc, #220]	; e688 <btbb_pcapng_create_file@@Base+0x100>
    e5a8:	add	r8, pc, r8
    e5ac:	subs	r6, r0, #0
    e5b0:	mvneq	r5, #4
    e5b4:	beq	e67c <btbb_pcapng_create_file@@Base+0xf4>
    e5b8:	add	r4, sp, #28
    e5bc:	mov	r0, r4
    e5c0:	mov	r2, #260	; 0x104
    e5c4:	mov	r1, #0
    e5c8:	bl	2444 <memset@plt>
    e5cc:	mov	r3, #3
    e5d0:	cmp	r5, #0
    e5d4:	strh	r3, [r4]
    e5d8:	moveq	r4, r5
    e5dc:	beq	e608 <btbb_pcapng_create_file@@Base+0x80>
    e5e0:	add	sl, r4, #4
    e5e4:	mov	r2, #256	; 0x100
    e5e8:	mov	r1, r5
    e5ec:	mov	r0, sl
    e5f0:	bl	245c <strncpy@plt>
    e5f4:	mov	r3, #0
    e5f8:	mov	r0, sl
    e5fc:	strb	r3, [sp, #287]	; 0x11f
    e600:	bl	23a8 <strlen@plt>
    e604:	strh	r0, [r4, #2]
    e608:	bl	23fc <getpagesize@plt>
    e60c:	ldr	r2, [pc, #120]	; e68c <btbb_pcapng_create_file@@Base+0x104>
    e610:	mov	r1, #255	; 0xff
    e614:	ldr	r2, [r8, r2]
    e618:	str	r4, [sp, #8]
    e61c:	str	r2, [sp, #20]
    e620:	mov	r2, #400	; 0x190
    e624:	stm	sp, {r1, r2}
    e628:	ldr	r2, [sp, #20]
    e62c:	mov	r1, r9
    e630:	mov	r3, r0
    e634:	str	r0, [sp, #12]
    e638:	mov	r0, r6
    e63c:	bl	2270 <pcapng_create@plt>
    e640:	subs	r5, r0, #0
    e644:	bne	e664 <btbb_pcapng_create_file@@Base+0xdc>
    e648:	mov	r1, r4
    e64c:	mov	r0, r6
    e650:	bl	e4e8 <pcapng_create@@Base+0x4f8>
    e654:	subs	r5, r0, #0
    e658:	beq	e664 <btbb_pcapng_create_file@@Base+0xdc>
    e65c:	mov	r0, r6
    e660:	bl	251c <pcapng_close@plt>
    e664:	rsb	r5, r5, #0
    e668:	cmp	r5, #0
    e66c:	streq	r6, [r7]
    e670:	beq	e67c <btbb_pcapng_create_file@@Base+0xf4>
    e674:	mov	r0, r6
    e678:	bl	21bc <free@plt>
    e67c:	mov	r0, r5
    e680:	add	sp, sp, #288	; 0x120
    e684:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e688:	andeq	r9, r1, r0, asr sl
    e68c:	andeq	r0, r0, r0, lsr #3

0000e690 <btbb_pcapng_append_packet@@Base>:
    e690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e694:	add	fp, sp, #32
    e698:	sub	sp, sp, #492	; 0x1ec
    e69c:	str	r2, [fp, #-508]	; 0xfffffe04
    e6a0:	ldrsb	r9, [fp, #8]
    e6a4:	ldrsb	r2, [fp, #4]
    e6a8:	ldrb	r8, [fp, #16]
    e6ac:	str	r3, [fp, #-520]	; 0xfffffdf8
    e6b0:	ldr	r3, [fp, #12]
    e6b4:	cmp	r9, r2
    e6b8:	movlt	r5, #7
    e6bc:	movge	r5, #3
    e6c0:	cmn	r3, #1
    e6c4:	movne	r1, #16
    e6c8:	moveq	r1, #0
    e6cc:	cmp	r8, #255	; 0xff
    e6d0:	orr	r1, r5, r1
    e6d4:	mov	sl, r0
    e6d8:	movne	r5, #128	; 0x80
    e6dc:	moveq	r5, #0
    e6e0:	ldr	r0, [fp, #20]
    e6e4:	str	r2, [fp, #-516]	; 0xfffffdfc
    e6e8:	orr	r5, r5, r1
    e6ec:	bl	239c <btbb_packet_get_payload_length@plt>
    e6f0:	add	r1, r0, #7
    e6f4:	bic	r1, r1, #7
    e6f8:	sub	sp, sp, r1
    e6fc:	mov	r1, sp
    e700:	mov	r4, r0
    e704:	ldr	r0, [fp, #20]
    e708:	bl	2168 <btbb_get_payload_packed@plt>
    e70c:	cmp	r4, #400	; 0x190
    e710:	ldr	r0, [fp, #20]
    e714:	movge	r4, #400	; 0x190
    e718:	bl	24ec <btbb_packet_get_channel@plt>
    e71c:	add	r6, r4, #61	; 0x3d
    e720:	bic	r6, r6, #3
    e724:	str	r0, [fp, #-496]	; 0xfffffe10
    e728:	ldr	r0, [fp, #20]
    e72c:	bl	21d4 <btbb_packet_get_ac_errors@plt>
    e730:	str	r0, [fp, #-500]	; 0xfffffe0c
    e734:	ldr	r0, [fp, #20]
    e738:	bl	2414 <btbb_packet_get_transport@plt>
    e73c:	str	r0, [fp, #-504]	; 0xfffffe08
    e740:	ldr	r0, [fp, #20]
    e744:	bl	21c8 <btbb_packet_get_modulation@plt>
    e748:	mov	r7, r0
    e74c:	ldr	r0, [fp, #20]
    e750:	bl	2474 <btbb_packet_get_lap@plt>
    e754:	str	r0, [fp, #-512]	; 0xfffffe00
    e758:	ldr	r0, [fp, #20]
    e75c:	bl	23cc <btbb_packet_get_header_packed@plt>
    e760:	ldr	r3, [fp, #-520]	; 0xfffffdf8
    e764:	mov	ip, #6
    e768:	str	r3, [fp, #-476]	; 0xfffffe24
    e76c:	ldr	r3, [fp, #-508]	; 0xfffffe04
    e770:	str	ip, [fp, #-488]	; 0xfffffe18
    e774:	str	r3, [fp, #-472]	; 0xfffffe28
    e778:	ldrb	r3, [fp, #-496]	; 0xfffffe10
    e77c:	mov	ip, #0
    e780:	ldr	r2, [fp, #-516]	; 0xfffffdfc
    e784:	strb	r3, [fp, #-460]	; 0xfffffe34
    e788:	ldrb	r3, [fp, #-500]	; 0xfffffe0c
    e78c:	ldr	r1, [fp, #-512]	; 0xfffffe00
    e790:	add	lr, r4, #22
    e794:	strb	r3, [fp, #-457]	; 0xfffffe37
    e798:	ldr	r3, [fp, #-504]	; 0xfffffe08
    e79c:	cmp	r4, ip
    e7a0:	str	r6, [fp, #-484]	; 0xfffffe1c
    e7a4:	orr	r7, r7, r3, lsl #4
    e7a8:	ldr	r3, [fp, #12]
    e7ac:	strb	r7, [fp, #-456]	; 0xfffffe38
    e7b0:	bic	r3, r3, #-16777216	; 0xff000000
    e7b4:	sub	r7, fp, #488	; 0x1e8
    e7b8:	orr	r8, r3, r8, lsl #24
    e7bc:	str	ip, [fp, #-480]	; 0xfffffe20
    e7c0:	str	lr, [fp, #-468]	; 0xfffffe2c
    e7c4:	str	lr, [fp, #-464]	; 0xfffffe30
    e7c8:	strb	r2, [fp, #-459]	; 0xfffffe35
    e7cc:	strb	r9, [fp, #-458]	; 0xfffffe36
    e7d0:	strb	ip, [fp, #-455]	; 0xfffffe39
    e7d4:	strh	ip, [r7, #34]	; 0x22
    e7d8:	str	r1, [fp, #-452]	; 0xfffffe3c
    e7dc:	str	r8, [fp, #-448]	; 0xfffffe40
    e7e0:	str	r0, [fp, #-444]	; 0xfffffe44
    e7e4:	strh	r5, [r7, #48]	; 0x30
    e7e8:	beq	e82c <btbb_pcapng_append_packet@@Base+0x19c>
    e7ec:	cmp	r4, #400	; 0x190
    e7f0:	bls	e818 <btbb_pcapng_append_packet@@Base+0x188>
    e7f4:	ldr	r3, [pc, #96]	; e85c <btbb_pcapng_append_packet@@Base+0x1cc>
    e7f8:	ldr	r1, [pc, #96]	; e860 <btbb_pcapng_append_packet@@Base+0x1d0>
    e7fc:	ldr	r0, [pc, #96]	; e864 <btbb_pcapng_append_packet@@Base+0x1d4>
    e800:	add	r3, pc, r3
    e804:	add	r3, r3, #5
    e808:	mov	r2, #221	; 0xdd
    e80c:	add	r1, pc, r1
    e810:	add	r0, pc, r0
    e814:	bl	257c <__assert_fail@plt>
    e818:	mov	r2, r4
    e81c:	mov	r1, sp
    e820:	add	r0, r7, #50	; 0x32
    e824:	bl	21e0 <memcpy@plt>
    e828:	orr	r5, r5, #32
    e82c:	sub	r3, fp, #36	; 0x24
    e830:	add	r3, r3, r6
    e834:	mov	r2, #0
    e838:	strh	r5, [r7, #48]	; 0x30
    e83c:	mov	r1, r7
    e840:	str	r2, [r3, #-460]	; 0xfffffe34
    e844:	str	r6, [r3, #-456]	; 0xfffffe38
    e848:	mov	r0, sl
    e84c:	bl	2408 <pcapng_append_packet@plt>
    e850:	rsb	r0, r0, #0
    e854:	sub	sp, fp, #32
    e858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e85c:	andeq	r8, r0, r2, asr #25
    e860:	andeq	r8, r0, r2, lsl #26
    e864:	andeq	r8, r0, fp, asr #26

0000e868 <btbb_pcapng_record_bdaddr@@Base>:
    e868:	push	{r0, r1, r2, r3, r4, lr}
    e86c:	strb	r3, [sp, #12]
    e870:	lsr	r3, r3, #8
    e874:	strb	r3, [sp, #13]
    e878:	ldr	r1, [pc, #72]	; e8c8 <btbb_pcapng_record_bdaddr@@Base+0x60>
    e87c:	ldrb	r3, [sp, #24]
    e880:	strh	r1, [sp, #4]
    e884:	mov	r1, #12
    e888:	strh	r1, [sp, #6]
    e88c:	strb	r3, [sp, #14]
    e890:	lsr	r1, r2, #8
    e894:	ldrb	r3, [sp, #28]
    e898:	strb	r1, [sp, #9]
    e89c:	lsr	r1, r2, #16
    e8a0:	strb	r2, [sp, #8]
    e8a4:	strb	r1, [sp, #10]
    e8a8:	lsr	r2, r2, #24
    e8ac:	add	r1, sp, #4
    e8b0:	strb	r2, [sp, #11]
    e8b4:	strb	r3, [sp, #15]
    e8b8:	bl	21b0 <pcapng_append_interface_option@plt>
    e8bc:	rsb	r0, r0, #0
    e8c0:	add	sp, sp, #20
    e8c4:	pop	{pc}		; (ldr pc, [sp], #4)
    e8c8:			; <UNDEFINED> instruction: 0xffffd340

0000e8cc <btbb_pcapng_record_btclock@@Base>:
    e8cc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    e8d0:	mov	r1, sp
    e8d4:	ldr	r3, [pc, #60]	; e918 <btbb_pcapng_record_btclock@@Base+0x4c>
    e8d8:	str	r2, [sp, #12]
    e8dc:	strh	r3, [sp]
    e8e0:	mov	r3, #24
    e8e4:	strh	r3, [sp, #2]
    e8e8:	ldr	r3, [sp, #32]
    e8ec:	str	r3, [sp, #4]
    e8f0:	ldr	r3, [sp, #36]	; 0x24
    e8f4:	str	r3, [sp, #8]
    e8f8:	ldr	r3, [sp, #40]	; 0x28
    e8fc:	str	r3, [sp, #16]
    e900:	ldr	r3, [sp, #44]	; 0x2c
    e904:	str	r3, [sp, #20]
    e908:	bl	21b0 <pcapng_append_interface_option@plt>
    e90c:	rsb	r0, r0, #0
    e910:	add	sp, sp, #28
    e914:	pop	{pc}		; (ldr pc, [sp], #4)
    e918:			; <UNDEFINED> instruction: 0xffffd341

0000e91c <btbb_pcapng_close@@Base>:
    e91c:	push	{r4, lr}
    e920:	mov	r4, r0
    e924:	bl	251c <pcapng_close@plt>
    e928:	cmp	r4, #0
    e92c:	beq	e938 <btbb_pcapng_close@@Base+0x1c>
    e930:	mov	r0, r4
    e934:	bl	21bc <free@plt>
    e938:	mvn	r0, #0
    e93c:	pop	{r4, pc}

0000e940 <lell_pcapng_create_file@@Base>:
    e940:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e944:	mov	r9, r0
    e948:	sub	sp, sp, #288	; 0x120
    e94c:	mov	r0, #28
    e950:	mov	r5, r1
    e954:	mov	r7, r2
    e958:	bl	233c <malloc@plt>
    e95c:	ldr	r8, [pc, #220]	; ea40 <lell_pcapng_create_file@@Base+0x100>
    e960:	add	r8, pc, r8
    e964:	subs	r6, r0, #0
    e968:	mvneq	r5, #4
    e96c:	beq	ea34 <lell_pcapng_create_file@@Base+0xf4>
    e970:	add	r4, sp, #28
    e974:	mov	r0, r4
    e978:	mov	r2, #260	; 0x104
    e97c:	mov	r1, #0
    e980:	bl	2444 <memset@plt>
    e984:	mov	r3, #3
    e988:	cmp	r5, #0
    e98c:	strh	r3, [r4]
    e990:	moveq	r4, r5
    e994:	beq	e9c0 <lell_pcapng_create_file@@Base+0x80>
    e998:	add	sl, r4, #4
    e99c:	mov	r2, #256	; 0x100
    e9a0:	mov	r1, r5
    e9a4:	mov	r0, sl
    e9a8:	bl	245c <strncpy@plt>
    e9ac:	mov	r3, #0
    e9b0:	mov	r0, sl
    e9b4:	strb	r3, [sp, #287]	; 0x11f
    e9b8:	bl	23a8 <strlen@plt>
    e9bc:	strh	r0, [r4, #2]
    e9c0:	bl	23fc <getpagesize@plt>
    e9c4:	ldr	r2, [pc, #120]	; ea44 <lell_pcapng_create_file@@Base+0x104>
    e9c8:	mov	r1, #256	; 0x100
    e9cc:	ldr	r2, [r8, r2]
    e9d0:	str	r4, [sp, #8]
    e9d4:	str	r2, [sp, #20]
    e9d8:	mov	r2, #64	; 0x40
    e9dc:	stm	sp, {r1, r2}
    e9e0:	ldr	r2, [sp, #20]
    e9e4:	mov	r1, r9
    e9e8:	mov	r3, r0
    e9ec:	str	r0, [sp, #12]
    e9f0:	mov	r0, r6
    e9f4:	bl	2270 <pcapng_create@plt>
    e9f8:	subs	r5, r0, #0
    e9fc:	bne	ea1c <lell_pcapng_create_file@@Base+0xdc>
    ea00:	mov	r1, r4
    ea04:	mov	r0, r6
    ea08:	bl	e4e8 <pcapng_create@@Base+0x4f8>
    ea0c:	subs	r5, r0, #0
    ea10:	beq	ea1c <lell_pcapng_create_file@@Base+0xdc>
    ea14:	mov	r0, r6
    ea18:	bl	251c <pcapng_close@plt>
    ea1c:	rsb	r5, r5, #0
    ea20:	cmp	r5, #0
    ea24:	streq	r6, [r7]
    ea28:	beq	ea34 <lell_pcapng_create_file@@Base+0xf4>
    ea2c:	mov	r0, r6
    ea30:	bl	21bc <free@plt>
    ea34:	mov	r0, r5
    ea38:	add	sp, sp, #288	; 0x120
    ea3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ea40:	muleq	r1, r8, r6
    ea44:	andeq	r0, r0, r0, lsr #3

0000ea48 <lell_pcapng_record_connect_req@@Base>:
    ea48:	push	{r4, r5, r6, r7, r8, lr}
    ea4c:	mov	r5, #46	; 0x2e
    ea50:	sub	sp, sp, #48	; 0x30
    ea54:	mov	r8, r2
    ea58:	mov	r6, r0
    ea5c:	mov	r2, r5
    ea60:	mov	r1, #0
    ea64:	mov	r0, sp
    ea68:	mov	r7, r3
    ea6c:	bl	2444 <memset@plt>
    ea70:	ldr	r3, [pc, #92]	; ead4 <lell_pcapng_record_connect_req@@Base+0x8c>
    ea74:	mov	r4, sp
    ea78:	strh	r3, [sp]
    ea7c:	ldr	r3, [sp, #72]	; 0x48
    ea80:	add	r2, sp, #12
    ea84:	add	lr, r3, #32
    ea88:	strh	r5, [sp, #2]
    ea8c:	str	r8, [sp, #4]
    ea90:	str	r7, [sp, #8]
    ea94:	ldr	r0, [r3]
    ea98:	ldr	r1, [r3, #4]
    ea9c:	mov	ip, r2
    eaa0:	add	r3, r3, #8
    eaa4:	cmp	r3, lr
    eaa8:	stmia	ip!, {r0, r1}
    eaac:	mov	r2, ip
    eab0:	bne	ea94 <lell_pcapng_record_connect_req@@Base+0x4c>
    eab4:	ldrh	r3, [r3]
    eab8:	mov	r1, r4
    eabc:	mov	r0, r6
    eac0:	strh	r3, [ip]
    eac4:	bl	21b0 <pcapng_append_interface_option@plt>
    eac8:	rsb	r0, r0, #0
    eacc:	add	sp, sp, #48	; 0x30
    ead0:	pop	{r4, r5, r6, r7, r8, pc}
    ead4:			; <UNDEFINED> instruction: 0xffffd380

0000ead8 <lell_pcapng_append_packet@@Base>:
    ead8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eadc:	sub	sp, sp, #316	; 0x13c
    eae0:	mov	r7, r3
    eae4:	add	r3, sp, #352	; 0x160
    eae8:	ldr	r5, [sp, #364]	; 0x16c
    eaec:	ldrsb	fp, [r3]
    eaf0:	add	r3, sp, #356	; 0x164
    eaf4:	mov	r6, r0
    eaf8:	ldrsb	sl, [r3]
    eafc:	mov	r0, r5
    eb00:	mov	r8, r2
    eb04:	cmp	sl, fp
    eb08:	movlt	r4, #39	; 0x27
    eb0c:	movge	r4, #35	; 0x23
    eb10:	bl	218c <lell_packet_is_data@plt>
    eb14:	ldrb	ip, [r5, #69]	; 0x45
    eb18:	ldrb	r1, [r5, #92]	; 0x5c
    eb1c:	cmp	r0, #0
    eb20:	moveq	r0, #16
    eb24:	movne	r0, #0
    eb28:	orr	r0, r4, r0
    eb2c:	ldr	r4, [r5, #72]	; 0x48
    eb30:	add	r2, r4, #9
    eb34:	cmp	r2, #255	; 0xff
    eb38:	bls	eb60 <lell_pcapng_append_packet@@Base+0x88>
    eb3c:	ldr	r3, [pc, #220]	; ec20 <lell_pcapng_append_packet@@Base+0x148>
    eb40:	ldr	r1, [pc, #220]	; ec24 <lell_pcapng_append_packet@@Base+0x14c>
    eb44:	ldr	r0, [pc, #220]	; ec28 <lell_pcapng_append_packet@@Base+0x150>
    eb48:	add	r3, pc, r3
    eb4c:	add	r3, r3, #34	; 0x22
    eb50:	ldr	r2, [pc, #212]	; ec2c <lell_pcapng_append_packet@@Base+0x154>
    eb54:	add	r1, pc, r1
    eb58:	add	r0, pc, r0
    eb5c:	bl	257c <__assert_fail@plt>
    eb60:	add	r3, r4, #19
    eb64:	str	r3, [sp, #28]
    eb68:	str	r3, [sp, #32]
    eb6c:	add	r4, r4, #58	; 0x3a
    eb70:	ldr	r3, [sp, #360]	; 0x168
    eb74:	bic	r4, r4, #3
    eb78:	mov	lr, #6
    eb7c:	mov	r9, #0
    eb80:	strb	r1, [sp, #39]	; 0x27
    eb84:	strh	r0, [sp, #44]	; 0x2c
    eb88:	mov	r1, r5
    eb8c:	add	r0, sp, #46	; 0x2e
    eb90:	str	lr, [sp, #8]
    eb94:	str	r4, [sp, #12]
    eb98:	strb	ip, [sp, #36]	; 0x24
    eb9c:	strb	sl, [sp, #38]	; 0x26
    eba0:	str	r3, [sp, #40]	; 0x28
    eba4:	str	r9, [sp, #16]
    eba8:	str	r7, [sp, #20]
    ebac:	str	r8, [sp, #24]
    ebb0:	strb	fp, [sp, #37]	; 0x25
    ebb4:	bl	21e0 <memcpy@plt>
    ebb8:	add	r3, sp, #312	; 0x138
    ebbc:	add	r3, r3, r4
    ebc0:	add	sl, sp, #8
    ebc4:	str	r4, [r3, #-308]	; 0xfffffecc
    ebc8:	str	r9, [r3, #-312]	; 0xfffffec8
    ebcc:	mov	r1, sl
    ebd0:	mov	r0, r6
    ebd4:	bl	2408 <pcapng_append_packet@plt>
    ebd8:	rsb	r4, r0, #0
    ebdc:	cmp	r4, r9
    ebe0:	bne	ec14 <lell_pcapng_append_packet@@Base+0x13c>
    ebe4:	mov	r0, r5
    ebe8:	bl	218c <lell_packet_is_data@plt>
    ebec:	cmp	r0, r9
    ebf0:	bne	ec14 <lell_pcapng_append_packet@@Base+0x13c>
    ebf4:	ldrb	r3, [r5, #80]	; 0x50
    ebf8:	cmp	r3, #5
    ebfc:	bne	ec14 <lell_pcapng_append_packet@@Base+0x13c>
    ec00:	str	r5, [sp]
    ec04:	mov	r2, r8
    ec08:	mov	r3, r7
    ec0c:	mov	r0, r6
    ec10:	bl	23d8 <lell_pcapng_record_connect_req@plt>
    ec14:	mov	r0, r4
    ec18:	add	sp, sp, #316	; 0x13c
    ec1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ec20:	andeq	r8, r0, sl, ror r9
    ec24:			; <UNDEFINED> instruction: 0x000089ba
    ec28:	andeq	r8, r0, r8, lsr sl
    ec2c:			; <UNDEFINED> instruction: 0x000001b9

0000ec30 <lell_pcapng_close@@Base>:
    ec30:	push	{r4, lr}
    ec34:	mov	r4, r0
    ec38:	bl	251c <pcapng_close@plt>
    ec3c:	cmp	r4, #0
    ec40:	beq	ec4c <lell_pcapng_close@@Base+0x1c>
    ec44:	mov	r0, r4
    ec48:	bl	21bc <free@plt>
    ec4c:	mvn	r0, #0
    ec50:	pop	{r4, pc}
    ec54:	subs	r2, r1, #1
    ec58:	bxeq	lr
    ec5c:	bcc	ee34 <lell_pcapng_close@@Base+0x204>
    ec60:	cmp	r0, r1
    ec64:	bls	ee18 <lell_pcapng_close@@Base+0x1e8>
    ec68:	tst	r1, r2
    ec6c:	beq	ee24 <lell_pcapng_close@@Base+0x1f4>
    ec70:	clz	r3, r0
    ec74:	clz	r2, r1
    ec78:	sub	r3, r2, r3
    ec7c:	rsbs	r3, r3, #31
    ec80:	addne	r3, r3, r3, lsl #1
    ec84:	mov	r2, #0
    ec88:	addne	pc, pc, r3, lsl #2
    ec8c:	nop			; (mov r0, r0)
    ec90:	cmp	r0, r1, lsl #31
    ec94:	adc	r2, r2, r2
    ec98:	subcs	r0, r0, r1, lsl #31
    ec9c:	cmp	r0, r1, lsl #30
    eca0:	adc	r2, r2, r2
    eca4:	subcs	r0, r0, r1, lsl #30
    eca8:	cmp	r0, r1, lsl #29
    ecac:	adc	r2, r2, r2
    ecb0:	subcs	r0, r0, r1, lsl #29
    ecb4:	cmp	r0, r1, lsl #28
    ecb8:	adc	r2, r2, r2
    ecbc:	subcs	r0, r0, r1, lsl #28
    ecc0:	cmp	r0, r1, lsl #27
    ecc4:	adc	r2, r2, r2
    ecc8:	subcs	r0, r0, r1, lsl #27
    eccc:	cmp	r0, r1, lsl #26
    ecd0:	adc	r2, r2, r2
    ecd4:	subcs	r0, r0, r1, lsl #26
    ecd8:	cmp	r0, r1, lsl #25
    ecdc:	adc	r2, r2, r2
    ece0:	subcs	r0, r0, r1, lsl #25
    ece4:	cmp	r0, r1, lsl #24
    ece8:	adc	r2, r2, r2
    ecec:	subcs	r0, r0, r1, lsl #24
    ecf0:	cmp	r0, r1, lsl #23
    ecf4:	adc	r2, r2, r2
    ecf8:	subcs	r0, r0, r1, lsl #23
    ecfc:	cmp	r0, r1, lsl #22
    ed00:	adc	r2, r2, r2
    ed04:	subcs	r0, r0, r1, lsl #22
    ed08:	cmp	r0, r1, lsl #21
    ed0c:	adc	r2, r2, r2
    ed10:	subcs	r0, r0, r1, lsl #21
    ed14:	cmp	r0, r1, lsl #20
    ed18:	adc	r2, r2, r2
    ed1c:	subcs	r0, r0, r1, lsl #20
    ed20:	cmp	r0, r1, lsl #19
    ed24:	adc	r2, r2, r2
    ed28:	subcs	r0, r0, r1, lsl #19
    ed2c:	cmp	r0, r1, lsl #18
    ed30:	adc	r2, r2, r2
    ed34:	subcs	r0, r0, r1, lsl #18
    ed38:	cmp	r0, r1, lsl #17
    ed3c:	adc	r2, r2, r2
    ed40:	subcs	r0, r0, r1, lsl #17
    ed44:	cmp	r0, r1, lsl #16
    ed48:	adc	r2, r2, r2
    ed4c:	subcs	r0, r0, r1, lsl #16
    ed50:	cmp	r0, r1, lsl #15
    ed54:	adc	r2, r2, r2
    ed58:	subcs	r0, r0, r1, lsl #15
    ed5c:	cmp	r0, r1, lsl #14
    ed60:	adc	r2, r2, r2
    ed64:	subcs	r0, r0, r1, lsl #14
    ed68:	cmp	r0, r1, lsl #13
    ed6c:	adc	r2, r2, r2
    ed70:	subcs	r0, r0, r1, lsl #13
    ed74:	cmp	r0, r1, lsl #12
    ed78:	adc	r2, r2, r2
    ed7c:	subcs	r0, r0, r1, lsl #12
    ed80:	cmp	r0, r1, lsl #11
    ed84:	adc	r2, r2, r2
    ed88:	subcs	r0, r0, r1, lsl #11
    ed8c:	cmp	r0, r1, lsl #10
    ed90:	adc	r2, r2, r2
    ed94:	subcs	r0, r0, r1, lsl #10
    ed98:	cmp	r0, r1, lsl #9
    ed9c:	adc	r2, r2, r2
    eda0:	subcs	r0, r0, r1, lsl #9
    eda4:	cmp	r0, r1, lsl #8
    eda8:	adc	r2, r2, r2
    edac:	subcs	r0, r0, r1, lsl #8
    edb0:	cmp	r0, r1, lsl #7
    edb4:	adc	r2, r2, r2
    edb8:	subcs	r0, r0, r1, lsl #7
    edbc:	cmp	r0, r1, lsl #6
    edc0:	adc	r2, r2, r2
    edc4:	subcs	r0, r0, r1, lsl #6
    edc8:	cmp	r0, r1, lsl #5
    edcc:	adc	r2, r2, r2
    edd0:	subcs	r0, r0, r1, lsl #5
    edd4:	cmp	r0, r1, lsl #4
    edd8:	adc	r2, r2, r2
    eddc:	subcs	r0, r0, r1, lsl #4
    ede0:	cmp	r0, r1, lsl #3
    ede4:	adc	r2, r2, r2
    ede8:	subcs	r0, r0, r1, lsl #3
    edec:	cmp	r0, r1, lsl #2
    edf0:	adc	r2, r2, r2
    edf4:	subcs	r0, r0, r1, lsl #2
    edf8:	cmp	r0, r1, lsl #1
    edfc:	adc	r2, r2, r2
    ee00:	subcs	r0, r0, r1, lsl #1
    ee04:	cmp	r0, r1
    ee08:	adc	r2, r2, r2
    ee0c:	subcs	r0, r0, r1
    ee10:	mov	r0, r2
    ee14:	bx	lr
    ee18:	moveq	r0, #1
    ee1c:	movne	r0, #0
    ee20:	bx	lr
    ee24:	clz	r2, r1
    ee28:	rsb	r2, r2, #31
    ee2c:	lsr	r0, r0, r2
    ee30:	bx	lr
    ee34:	cmp	r0, #0
    ee38:	mvnne	r0, #0
    ee3c:	b	f0f8 <lell_pcapng_close@@Base+0x4c8>
    ee40:	cmp	r1, #0
    ee44:	beq	ee34 <lell_pcapng_close@@Base+0x204>
    ee48:	push	{r0, r1, lr}
    ee4c:	bl	ec54 <lell_pcapng_close@@Base+0x24>
    ee50:	pop	{r1, r2, lr}
    ee54:	mul	r3, r2, r0
    ee58:	sub	r1, r1, r3
    ee5c:	bx	lr
    ee60:	cmp	r1, #0
    ee64:	beq	f070 <lell_pcapng_close@@Base+0x440>
    ee68:	eor	ip, r0, r1
    ee6c:	rsbmi	r1, r1, #0
    ee70:	subs	r2, r1, #1
    ee74:	beq	f03c <lell_pcapng_close@@Base+0x40c>
    ee78:	movs	r3, r0
    ee7c:	rsbmi	r3, r0, #0
    ee80:	cmp	r3, r1
    ee84:	bls	f048 <lell_pcapng_close@@Base+0x418>
    ee88:	tst	r1, r2
    ee8c:	beq	f058 <lell_pcapng_close@@Base+0x428>
    ee90:	clz	r2, r3
    ee94:	clz	r0, r1
    ee98:	sub	r2, r0, r2
    ee9c:	rsbs	r2, r2, #31
    eea0:	addne	r2, r2, r2, lsl #1
    eea4:	mov	r0, #0
    eea8:	addne	pc, pc, r2, lsl #2
    eeac:	nop			; (mov r0, r0)
    eeb0:	cmp	r3, r1, lsl #31
    eeb4:	adc	r0, r0, r0
    eeb8:	subcs	r3, r3, r1, lsl #31
    eebc:	cmp	r3, r1, lsl #30
    eec0:	adc	r0, r0, r0
    eec4:	subcs	r3, r3, r1, lsl #30
    eec8:	cmp	r3, r1, lsl #29
    eecc:	adc	r0, r0, r0
    eed0:	subcs	r3, r3, r1, lsl #29
    eed4:	cmp	r3, r1, lsl #28
    eed8:	adc	r0, r0, r0
    eedc:	subcs	r3, r3, r1, lsl #28
    eee0:	cmp	r3, r1, lsl #27
    eee4:	adc	r0, r0, r0
    eee8:	subcs	r3, r3, r1, lsl #27
    eeec:	cmp	r3, r1, lsl #26
    eef0:	adc	r0, r0, r0
    eef4:	subcs	r3, r3, r1, lsl #26
    eef8:	cmp	r3, r1, lsl #25
    eefc:	adc	r0, r0, r0
    ef00:	subcs	r3, r3, r1, lsl #25
    ef04:	cmp	r3, r1, lsl #24
    ef08:	adc	r0, r0, r0
    ef0c:	subcs	r3, r3, r1, lsl #24
    ef10:	cmp	r3, r1, lsl #23
    ef14:	adc	r0, r0, r0
    ef18:	subcs	r3, r3, r1, lsl #23
    ef1c:	cmp	r3, r1, lsl #22
    ef20:	adc	r0, r0, r0
    ef24:	subcs	r3, r3, r1, lsl #22
    ef28:	cmp	r3, r1, lsl #21
    ef2c:	adc	r0, r0, r0
    ef30:	subcs	r3, r3, r1, lsl #21
    ef34:	cmp	r3, r1, lsl #20
    ef38:	adc	r0, r0, r0
    ef3c:	subcs	r3, r3, r1, lsl #20
    ef40:	cmp	r3, r1, lsl #19
    ef44:	adc	r0, r0, r0
    ef48:	subcs	r3, r3, r1, lsl #19
    ef4c:	cmp	r3, r1, lsl #18
    ef50:	adc	r0, r0, r0
    ef54:	subcs	r3, r3, r1, lsl #18
    ef58:	cmp	r3, r1, lsl #17
    ef5c:	adc	r0, r0, r0
    ef60:	subcs	r3, r3, r1, lsl #17
    ef64:	cmp	r3, r1, lsl #16
    ef68:	adc	r0, r0, r0
    ef6c:	subcs	r3, r3, r1, lsl #16
    ef70:	cmp	r3, r1, lsl #15
    ef74:	adc	r0, r0, r0
    ef78:	subcs	r3, r3, r1, lsl #15
    ef7c:	cmp	r3, r1, lsl #14
    ef80:	adc	r0, r0, r0
    ef84:	subcs	r3, r3, r1, lsl #14
    ef88:	cmp	r3, r1, lsl #13
    ef8c:	adc	r0, r0, r0
    ef90:	subcs	r3, r3, r1, lsl #13
    ef94:	cmp	r3, r1, lsl #12
    ef98:	adc	r0, r0, r0
    ef9c:	subcs	r3, r3, r1, lsl #12
    efa0:	cmp	r3, r1, lsl #11
    efa4:	adc	r0, r0, r0
    efa8:	subcs	r3, r3, r1, lsl #11
    efac:	cmp	r3, r1, lsl #10
    efb0:	adc	r0, r0, r0
    efb4:	subcs	r3, r3, r1, lsl #10
    efb8:	cmp	r3, r1, lsl #9
    efbc:	adc	r0, r0, r0
    efc0:	subcs	r3, r3, r1, lsl #9
    efc4:	cmp	r3, r1, lsl #8
    efc8:	adc	r0, r0, r0
    efcc:	subcs	r3, r3, r1, lsl #8
    efd0:	cmp	r3, r1, lsl #7
    efd4:	adc	r0, r0, r0
    efd8:	subcs	r3, r3, r1, lsl #7
    efdc:	cmp	r3, r1, lsl #6
    efe0:	adc	r0, r0, r0
    efe4:	subcs	r3, r3, r1, lsl #6
    efe8:	cmp	r3, r1, lsl #5
    efec:	adc	r0, r0, r0
    eff0:	subcs	r3, r3, r1, lsl #5
    eff4:	cmp	r3, r1, lsl #4
    eff8:	adc	r0, r0, r0
    effc:	subcs	r3, r3, r1, lsl #4
    f000:	cmp	r3, r1, lsl #3
    f004:	adc	r0, r0, r0
    f008:	subcs	r3, r3, r1, lsl #3
    f00c:	cmp	r3, r1, lsl #2
    f010:	adc	r0, r0, r0
    f014:	subcs	r3, r3, r1, lsl #2
    f018:	cmp	r3, r1, lsl #1
    f01c:	adc	r0, r0, r0
    f020:	subcs	r3, r3, r1, lsl #1
    f024:	cmp	r3, r1
    f028:	adc	r0, r0, r0
    f02c:	subcs	r3, r3, r1
    f030:	cmp	ip, #0
    f034:	rsbmi	r0, r0, #0
    f038:	bx	lr
    f03c:	teq	ip, r0
    f040:	rsbmi	r0, r0, #0
    f044:	bx	lr
    f048:	movcc	r0, #0
    f04c:	asreq	r0, ip, #31
    f050:	orreq	r0, r0, #1
    f054:	bx	lr
    f058:	clz	r2, r1
    f05c:	rsb	r2, r2, #31
    f060:	cmp	ip, #0
    f064:	lsr	r0, r3, r2
    f068:	rsbmi	r0, r0, #0
    f06c:	bx	lr
    f070:	cmp	r0, #0
    f074:	mvngt	r0, #-2147483648	; 0x80000000
    f078:	movlt	r0, #-2147483648	; 0x80000000
    f07c:	b	f0f8 <lell_pcapng_close@@Base+0x4c8>
    f080:	cmp	r1, #0
    f084:	beq	f070 <lell_pcapng_close@@Base+0x440>
    f088:	push	{r0, r1, lr}
    f08c:	bl	ee68 <lell_pcapng_close@@Base+0x238>
    f090:	pop	{r1, r2, lr}
    f094:	mul	r3, r2, r0
    f098:	sub	r1, r1, r3
    f09c:	bx	lr
    f0a0:	subs	r3, r2, #32
    f0a4:	rsb	ip, r2, #32
    f0a8:	lslmi	r1, r1, r2
    f0ac:	lslpl	r1, r0, r3
    f0b0:	orrmi	r1, r1, r0, lsr ip
    f0b4:	lsl	r0, r0, r2
    f0b8:	bx	lr
    f0bc:	cmp	r3, #0
    f0c0:	cmpeq	r2, #0
    f0c4:	bne	f0dc <lell_pcapng_close@@Base+0x4ac>
    f0c8:	cmp	r1, #0
    f0cc:	cmpeq	r0, #0
    f0d0:	mvnne	r1, #0
    f0d4:	mvnne	r0, #0
    f0d8:	b	f0f8 <lell_pcapng_close@@Base+0x4c8>
    f0dc:	sub	sp, sp, #8
    f0e0:	push	{sp, lr}
    f0e4:	bl	f16c <lell_pcapng_close@@Base+0x53c>
    f0e8:	ldr	lr, [sp, #4]
    f0ec:	add	sp, sp, #8
    f0f0:	pop	{r2, r3}
    f0f4:	bx	lr
    f0f8:	push	{r1, lr}
    f0fc:	mov	r0, #8
    f100:	bl	212c <raise@plt>
    f104:	pop	{r1, pc}
    f108:	ldr	ip, [pc, #80]	; f160 <lell_pcapng_close@@Base+0x530>
    f10c:	ldr	r2, [pc, #80]	; f164 <lell_pcapng_close@@Base+0x534>
    f110:	and	r3, ip, r0, lsr #1
    f114:	and	ip, ip, r1, lsr #1
    f118:	sub	ip, r1, ip
    f11c:	sub	r0, r0, r3
    f120:	and	r3, r0, r2
    f124:	and	r1, ip, r2
    f128:	and	r0, r2, r0, lsr #2
    f12c:	and	r2, r2, ip, lsr #2
    f130:	add	r3, r3, r0
    f134:	add	r1, r1, r2
    f138:	ldr	r0, [pc, #40]	; f168 <lell_pcapng_close@@Base+0x538>
    f13c:	add	r1, r1, r1, lsr #4
    f140:	add	r3, r3, r3, lsr #4
    f144:	and	r3, r3, r0
    f148:	and	r0, r0, r1
    f14c:	add	r0, r0, r3
    f150:	add	r0, r0, r0, lsl #8
    f154:	add	r0, r0, r0, lsl #16
    f158:	lsr	r0, r0, #24
    f15c:	bx	lr
    f160:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    f164:	teqcc	r3, #-872415232	; 0xcc000000
    f168:	svceq	0x000f0f0f
    f16c:	cmp	r1, r3
    f170:	push	{r4, r5, r6, r7, r8, r9, lr}
    f174:	cmpeq	r0, r2
    f178:	mov	r4, r0
    f17c:	mov	r5, r1
    f180:	ldr	r9, [sp, #28]
    f184:	movcc	r0, #0
    f188:	movcc	r1, #0
    f18c:	bcc	f284 <lell_pcapng_close@@Base+0x654>
    f190:	cmp	r3, #0
    f194:	clzeq	ip, r2
    f198:	clzne	ip, r3
    f19c:	addeq	ip, ip, #32
    f1a0:	cmp	r5, #0
    f1a4:	clzeq	r1, r4
    f1a8:	addeq	r1, r1, #32
    f1ac:	clzne	r1, r5
    f1b0:	sub	ip, ip, r1
    f1b4:	sub	lr, ip, #32
    f1b8:	lsl	r7, r3, ip
    f1bc:	rsb	r8, ip, #32
    f1c0:	orr	r7, r7, r2, lsl lr
    f1c4:	orr	r7, r7, r2, lsr r8
    f1c8:	lsl	r6, r2, ip
    f1cc:	cmp	r5, r7
    f1d0:	cmpeq	r4, r6
    f1d4:	movcc	r0, #0
    f1d8:	movcc	r1, #0
    f1dc:	bcc	f1f8 <lell_pcapng_close@@Base+0x5c8>
    f1e0:	mov	r3, #1
    f1e4:	subs	r4, r4, r6
    f1e8:	lsl	r1, r3, lr
    f1ec:	lsl	r0, r3, ip
    f1f0:	orr	r1, r1, r3, lsr r8
    f1f4:	sbc	r5, r5, r7
    f1f8:	cmp	ip, #0
    f1fc:	beq	f284 <lell_pcapng_close@@Base+0x654>
    f200:	lsrs	r3, r7, #1
    f204:	rrx	r2, r6
    f208:	mov	r6, ip
    f20c:	b	f230 <lell_pcapng_close@@Base+0x600>
    f210:	subs	r4, r4, r2
    f214:	sbc	r5, r5, r3
    f218:	adds	r4, r4, r4
    f21c:	adc	r5, r5, r5
    f220:	adds	r4, r4, #1
    f224:	adc	r5, r5, #0
    f228:	subs	r6, r6, #1
    f22c:	beq	f24c <lell_pcapng_close@@Base+0x61c>
    f230:	cmp	r5, r3
    f234:	cmpeq	r4, r2
    f238:	bcs	f210 <lell_pcapng_close@@Base+0x5e0>
    f23c:	adds	r4, r4, r4
    f240:	adc	r5, r5, r5
    f244:	subs	r6, r6, #1
    f248:	bne	f230 <lell_pcapng_close@@Base+0x600>
    f24c:	lsr	r6, r4, ip
    f250:	lsr	r7, r5, ip
    f254:	orr	r6, r6, r5, lsl r8
    f258:	adds	r2, r0, r4
    f25c:	orr	r6, r6, r5, lsr lr
    f260:	adc	r3, r1, r5
    f264:	lsl	r1, r7, ip
    f268:	orr	r1, r1, r6, lsl lr
    f26c:	lsl	r0, r6, ip
    f270:	orr	r1, r1, r6, lsr r8
    f274:	subs	r0, r2, r0
    f278:	mov	r4, r6
    f27c:	mov	r5, r7
    f280:	sbc	r1, r3, r1
    f284:	cmp	r9, #0
    f288:	popeq	{r4, r5, r6, r7, r8, r9, pc}
    f28c:	strd	r4, [r9]
    f290:	pop	{r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .fini:

0000f294 <.fini>:
    f294:	push	{r3, lr}
    f298:	pop	{r3, pc}
