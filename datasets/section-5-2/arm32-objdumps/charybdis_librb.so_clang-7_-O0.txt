
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

00004d00 <_init>:
    4d00:	push	{r3, lr}
    4d04:	bl	5704 <call_weak_fn>
    4d08:	pop	{r3, pc}

Disassembly of section .plt:

00004d0c <.plt>:
    4d0c:	push	{lr}		; (str lr, [sp, #-4]!)
    4d10:	ldr	lr, [pc, #4]	; 4d1c <.plt+0x10>
    4d14:	add	lr, pc, lr
    4d18:	ldr	pc, [lr, #8]!
    4d1c:	.word	0x000302e4

00004d20 <rb_helper_run@plt>:
    4d20:	add	ip, pc, #0, 12
    4d24:	add	ip, ip, #48, 20	; 0x30000
    4d28:	ldr	pc, [ip, #740]!	; 0x2e4

00004d2c <TLS_method@plt>:
    4d2c:	add	ip, pc, #0, 12
    4d30:	add	ip, ip, #48, 20	; 0x30000
    4d34:	ldr	pc, [ip, #732]!	; 0x2dc

00004d38 <open@plt>:
    4d38:	add	ip, pc, #0, 12
    4d3c:	add	ip, ip, #48, 20	; 0x30000
    4d40:	ldr	pc, [ip, #724]!	; 0x2d4

00004d44 <rb_init_netio@plt>:
    4d44:	add	ip, pc, #0, 12
    4d48:	add	ip, ip, #48, 20	; 0x30000
    4d4c:	ldr	pc, [ip, #716]!	; 0x2cc

00004d50 <sigemptyset@plt>:
    4d50:	add	ip, pc, #0, 12
    4d54:	add	ip, ip, #48, 20	; 0x30000
    4d58:	ldr	pc, [ip, #708]!	; 0x2c4

00004d5c <strerror@plt>:
    4d5c:	add	ip, pc, #0, 12
    4d60:	add	ip, ip, #48, 20	; 0x30000
    4d64:	ldr	pc, [ip, #700]!	; 0x2bc

00004d68 <rb_radixtree_elem_delete@plt>:
    4d68:	add	ip, pc, #0, 12
    4d6c:	add	ip, ip, #48, 20	; 0x30000
    4d70:	ldr	pc, [ip, #692]!	; 0x2b4

00004d74 <getdtablesize@plt>:
    4d74:	add	ip, pc, #0, 12
    4d78:	add	ip, ip, #48, 20	; 0x30000
    4d7c:	ldr	pc, [ip, #684]!	; 0x2ac

00004d80 <abort@plt>:
    4d80:	add	ip, pc, #0, 12
    4d84:	add	ip, ip, #48, 20	; 0x30000
    4d88:	ldr	pc, [ip, #676]!	; 0x2a4

00004d8c <connect@plt>:
    4d8c:	add	ip, pc, #0, 12
    4d90:	add	ip, ip, #48, 20	; 0x30000
    4d94:	ldr	pc, [ip, #668]!	; 0x29c

00004d98 <rb_ignore_errno@plt>:
    4d98:	add	ip, pc, #0, 12
    4d9c:	add	ip, ip, #48, 20	; 0x30000
    4da0:	ldr	pc, [ip, #660]!	; 0x294

00004da4 <rb_settimeout@plt>:
    4da4:	add	ip, pc, #0, 12
    4da8:	add	ip, ip, #48, 20	; 0x30000
    4dac:	ldr	pc, [ip, #652]!	; 0x28c

00004db0 <SSL_CTX_set_cipher_list@plt>:
    4db0:	add	ip, pc, #0, 12
    4db4:	add	ip, ip, #48, 20	; 0x30000
    4db8:	ldr	pc, [ip, #644]!	; 0x284

00004dbc <ERR_get_error@plt>:
    4dbc:	add	ip, pc, #0, 12
    4dc0:	add	ip, ip, #48, 20	; 0x30000
    4dc4:	ldr	pc, [ip, #636]!	; 0x27c

00004dc8 <rb_radixtree_foreach_start@plt>:
    4dc8:	add	ip, pc, #0, 12
    4dcc:	add	ip, ip, #48, 20	; 0x30000
    4dd0:	ldr	pc, [ip, #628]!	; 0x274

00004dd4 <strcasestr@plt>:
    4dd4:	add	ip, pc, #0, 12
    4dd8:	add	ip, ip, #48, 20	; 0x30000
    4ddc:	ldr	pc, [ip, #620]!	; 0x26c

00004de0 <rb_connect_tcp@plt>:
    4de0:	add	ip, pc, #0, 12
    4de4:	add	ip, ip, #48, 20	; 0x30000
    4de8:	ldr	pc, [ip, #612]!	; 0x264

00004dec <RAND_load_file@plt>:
    4dec:	add	ip, pc, #0, 12
    4df0:	add	ip, ip, #48, 20	; 0x30000
    4df4:	ldr	pc, [ip, #604]!	; 0x25c

00004df8 <signalfd@plt>:
    4df8:	add	ip, pc, #0, 12
    4dfc:	add	ip, ip, #48, 20	; 0x30000
    4e00:	ldr	pc, [ip, #596]!	; 0x254

00004e04 <rb_radixtree_foreach_next@plt>:
    4e04:	add	ip, pc, #0, 12
    4e08:	add	ip, ip, #48, 20	; 0x30000
    4e0c:	ldr	pc, [ip, #588]!	; 0x24c

00004e10 <memcmp@plt>:
    4e10:	add	ip, pc, #0, 12
    4e14:	add	ip, ip, #48, 20	; 0x30000
    4e18:	ldr	pc, [ip, #580]!	; 0x244

00004e1c <SSL_CTX_free@plt>:
    4e1c:	add	ip, pc, #0, 12
    4e20:	add	ip, ip, #48, 20	; 0x30000
    4e24:	ldr	pc, [ip, #572]!	; 0x23c

00004e28 <rb_getmaxconnect@plt>:
    4e28:	add	ip, pc, #0, 12
    4e2c:	add	ip, ip, #48, 20	; 0x30000
    4e30:	ldr	pc, [ip, #564]!	; 0x234

00004e34 <sigwaitinfo@plt>:
    4e34:	add	ip, pc, #0, 12
    4e38:	add	ip, ip, #48, 20	; 0x30000
    4e3c:	ldr	pc, [ip, #556]!	; 0x22c

00004e40 <__libc_current_sigrtmin@plt>:
    4e40:	add	ip, pc, #0, 12
    4e44:	add	ip, ip, #48, 20	; 0x30000
    4e48:	ldr	pc, [ip, #548]!	; 0x224

00004e4c <__xstat@plt>:
    4e4c:	add	ip, pc, #0, 12
    4e50:	add	ip, ip, #48, 20	; 0x30000
    4e54:	ldr	pc, [ip, #540]!	; 0x21c

00004e58 <rb_event_delete@plt>:
    4e58:	add	ip, pc, #0, 12
    4e5c:	add	ip, ip, #48, 20	; 0x30000
    4e60:	ldr	pc, [ip, #532]!	; 0x214

00004e64 <rb_setselect@plt>:
    4e64:	add	ip, pc, #0, 12
    4e68:	add	ip, ip, #48, 20	; 0x30000
    4e6c:	ldr	pc, [ip, #524]!	; 0x20c

00004e70 <rb_fd_ssl@plt>:
    4e70:	add	ip, pc, #0, 12
    4e74:	add	ip, ip, #48, 20	; 0x30000
    4e78:	ldr	pc, [ip, #516]!	; 0x204

00004e7c <sigtimedwait@plt>:
    4e7c:	add	ip, pc, #0, 12
    4e80:	add	ip, ip, #48, 20	; 0x30000
    4e84:	ldr	pc, [ip, #508]!	; 0x1fc

00004e88 <rb_setenv@plt>:
    4e88:	add	ip, pc, #0, 12
    4e8c:	add	ip, ip, #48, 20	; 0x30000
    4e90:	ldr	pc, [ip, #500]!	; 0x1f4

00004e94 <signal@plt>:
    4e94:	add	ip, pc, #0, 12
    4e98:	add	ip, ip, #48, 20	; 0x30000
    4e9c:	ldr	pc, [ip, #492]!	; 0x1ec

00004ea0 <rb_get_fd@plt>:
    4ea0:	add	ip, pc, #0, 12
    4ea4:	add	ip, ip, #48, 20	; 0x30000
    4ea8:	ldr	pc, [ip, #484]!	; 0x1e4

00004eac <labs@plt>:
    4eac:	add	ip, pc, #0, 12
    4eb0:	add	ip, ip, #48, 20	; 0x30000
    4eb4:	ldr	pc, [ip, #476]!	; 0x1dc

00004eb8 <epoll_create@plt>:
    4eb8:	add	ip, pc, #0, 12
    4ebc:	add	ip, ip, #48, 20	; 0x30000
    4ec0:	ldr	pc, [ip, #468]!	; 0x1d4

00004ec4 <rb_clear_patricia@plt>:
    4ec4:	add	ip, pc, #0, 12
    4ec8:	add	ip, ip, #48, 20	; 0x30000
    4ecc:	ldr	pc, [ip, #460]!	; 0x1cc

00004ed0 <__gmon_start__@plt>:
    4ed0:	add	ip, pc, #0, 12
    4ed4:	add	ip, ip, #48, 20	; 0x30000
    4ed8:	ldr	pc, [ip, #452]!	; 0x1c4

00004edc <SSL_CTX_clear_options@plt>:
    4edc:	add	ip, pc, #0, 12
    4ee0:	add	ip, ip, #48, 20	; 0x30000
    4ee4:	ldr	pc, [ip, #444]!	; 0x1bc

00004ee8 <SSL_get_current_cipher@plt>:
    4ee8:	add	ip, pc, #0, 12
    4eec:	add	ip, ip, #48, 20	; 0x30000
    4ef0:	ldr	pc, [ip, #436]!	; 0x1b4

00004ef4 <timer_create@plt>:
    4ef4:	add	ip, pc, #0, 12
    4ef8:	add	ip, ip, #48, 20	; 0x30000
    4efc:	ldr	pc, [ip, #428]!	; 0x1ac

00004f00 <X509_get_X509_PUBKEY@plt>:
    4f00:	add	ip, pc, #0, 12
    4f04:	add	ip, ip, #48, 20	; 0x30000
    4f08:	ldr	pc, [ip, #420]!	; 0x1a4

00004f0c <rb_select@plt>:
    4f0c:	add	ip, pc, #0, 12
    4f10:	add	ip, ip, #48, 20	; 0x30000
    4f14:	ldr	pc, [ip, #412]!	; 0x19c

00004f18 <rb_patricia_search_best@plt>:
    4f18:	add	ip, pc, #0, 12
    4f1c:	add	ip, ip, #48, 20	; 0x30000
    4f20:	ldr	pc, [ip, #404]!	; 0x194

00004f24 <vsnprintf@plt>:
    4f24:	add	ip, pc, #0, 12
    4f28:	add	ip, ip, #48, 20	; 0x30000
    4f2c:	ldr	pc, [ip, #396]!	; 0x18c

00004f30 <socketpair@plt>:
    4f30:	add	ip, pc, #0, 12
    4f34:	add	ip, ip, #48, 20	; 0x30000
    4f38:	ldr	pc, [ip, #388]!	; 0x184

00004f3c <strncpy@plt>:
    4f3c:	add	ip, pc, #0, 12
    4f40:	add	ip, ip, #48, 20	; 0x30000
    4f44:	ldr	pc, [ip, #380]!	; 0x17c

00004f48 <fclose@plt>:
    4f48:	add	ip, pc, #0, 12
    4f4c:	add	ip, ip, #48, 20	; 0x30000
    4f50:	ldr	pc, [ip, #372]!	; 0x174

00004f54 <recv@plt>:
    4f54:	add	ip, pc, #0, 12
    4f58:	add	ip, ip, #48, 20	; 0x30000
    4f5c:	ldr	pc, [ip, #364]!	; 0x16c

00004f60 <getenv@plt>:
    4f60:	add	ip, pc, #0, 12
    4f64:	add	ip, ip, #48, 20	; 0x30000
    4f68:	ldr	pc, [ip, #356]!	; 0x164

00004f6c <ERR_error_string_n@plt>:
    4f6c:	add	ip, pc, #0, 12
    4f70:	add	ip, ip, #48, 20	; 0x30000
    4f74:	ldr	pc, [ip, #348]!	; 0x15c

00004f78 <strchr@plt>:
    4f78:	add	ip, pc, #0, 12
    4f7c:	add	ip, ip, #48, 20	; 0x30000
    4f80:	ldr	pc, [ip, #340]!	; 0x154

00004f84 <rb_gettimeofday@plt>:
    4f84:	add	ip, pc, #0, 12
    4f88:	add	ip, ip, #48, 20	; 0x30000
    4f8c:	ldr	pc, [ip, #332]!	; 0x14c

00004f90 <strcasecmp@plt>:
    4f90:	add	ip, pc, #0, 12
    4f94:	add	ip, ip, #48, 20	; 0x30000
    4f98:	ldr	pc, [ip, #324]!	; 0x144

00004f9c <rb_helper_restart@plt>:
    4f9c:	add	ip, pc, #0, 12
    4fa0:	add	ip, ip, #48, 20	; 0x30000
    4fa4:	ldr	pc, [ip, #316]!	; 0x13c

00004fa8 <listen@plt>:
    4fa8:	add	ip, pc, #0, 12
    4fac:	add	ip, ip, #48, 20	; 0x30000
    4fb0:	ldr	pc, [ip, #308]!	; 0x134

00004fb4 <calloc@plt>:
    4fb4:	add	ip, pc, #0, 12
    4fb8:	add	ip, ip, #48, 20	; 0x30000
    4fbc:	ldr	pc, [ip, #300]!	; 0x12c

00004fc0 <SSL_write@plt>:
    4fc0:	add	ip, pc, #0, 12
    4fc4:	add	ip, ip, #48, 20	; 0x30000
    4fc8:	ldr	pc, [ip, #292]!	; 0x124

00004fcc <rb_event_init@plt>:
    4fcc:	add	ip, pc, #0, 12
    4fd0:	add	ip, ip, #48, 20	; 0x30000
    4fd4:	ldr	pc, [ip, #284]!	; 0x11c

00004fd8 <fopen@plt>:
    4fd8:	add	ip, pc, #0, 12
    4fdc:	add	ip, ip, #48, 20	; 0x30000
    4fe0:	ldr	pc, [ip, #276]!	; 0x114

00004fe4 <rb_set_nb@plt>:
    4fe4:	add	ip, pc, #0, 12
    4fe8:	add	ip, ip, #48, 20	; 0x30000
    4fec:	ldr	pc, [ip, #268]!	; 0x10c

00004ff0 <memset@plt>:
    4ff0:	add	ip, pc, #0, 12
    4ff4:	add	ip, ip, #48, 20	; 0x30000
    4ff8:	ldr	pc, [ip, #260]!	; 0x104

00004ffc <rb_inet_pton@plt>:
    4ffc:	add	ip, pc, #0, 12
    5000:	add	ip, ip, #48, 20	; 0x30000
    5004:	ldr	pc, [ip, #252]!	; 0xfc

00005008 <rb_radixtree_stats@plt>:
    5008:	add	ip, pc, #0, 12
    500c:	add	ip, ip, #48, 20	; 0x30000
    5010:	ldr	pc, [ip, #244]!	; 0xf4

00005014 <strrchr@plt>:
    5014:	add	ip, pc, #0, 12
    5018:	add	ip, ip, #48, 20	; 0x30000
    501c:	ldr	pc, [ip, #236]!	; 0xec

00005020 <rb_write@plt>:
    5020:	add	ip, pc, #0, 12
    5024:	add	ip, ip, #48, 20	; 0x30000
    5028:	ldr	pc, [ip, #228]!	; 0xe4

0000502c <SSL_set_fd@plt>:
    502c:	add	ip, pc, #0, 12
    5030:	add	ip, ip, #48, 20	; 0x30000
    5034:	ldr	pc, [ip, #220]!	; 0xdc

00005038 <SSL_CTX_ctrl@plt>:
    5038:	add	ip, pc, #0, 12
    503c:	add	ip, ip, #48, 20	; 0x30000
    5040:	ldr	pc, [ip, #212]!	; 0xd4

00005044 <rb_linebuf_parse@plt>:
    5044:	add	ip, pc, #0, 12
    5048:	add	ip, ip, #48, 20	; 0x30000
    504c:	ldr	pc, [ip, #204]!	; 0xcc

00005050 <writev@plt>:
    5050:	add	ip, pc, #0, 12
    5054:	add	ip, ip, #48, 20	; 0x30000
    5058:	ldr	pc, [ip, #196]!	; 0xc4

0000505c <rb_fsnprint@plt>:
    505c:	add	ip, pc, #0, 12
    5060:	add	ip, ip, #48, 20	; 0x30000
    5064:	ldr	pc, [ip, #188]!	; 0xbc

00005068 <rb_strlcpy@plt>:
    5068:	add	ip, pc, #0, 12
    506c:	add	ip, ip, #48, 20	; 0x30000
    5070:	ldr	pc, [ip, #180]!	; 0xb4

00005074 <ntohl@plt>:
    5074:	add	ip, pc, #0, 12
    5078:	add	ip, ip, #48, 20	; 0x30000
    507c:	ldr	pc, [ip, #172]!	; 0xac

00005080 <rb_patricia_search_best2@plt>:
    5080:	add	ip, pc, #0, 12
    5084:	add	ip, ip, #48, 20	; 0x30000
    5088:	ldr	pc, [ip, #164]!	; 0xa4

0000508c <SSL_CIPHER_get_name@plt>:
    508c:	add	ip, pc, #0, 12
    5090:	add	ip, ip, #48, 20	; 0x30000
    5094:	ldr	pc, [ip, #156]!	; 0x9c

00005098 <posix_spawnattr_init@plt>:
    5098:	add	ip, pc, #0, 12
    509c:	add	ip, ip, #48, 20	; 0x30000
    50a0:	ldr	pc, [ip, #148]!	; 0x94

000050a4 <OpenSSL_version_num@plt>:
    50a4:	add	ip, pc, #0, 12
    50a8:	add	ip, ip, #48, 20	; 0x30000
    50ac:	ldr	pc, [ip, #140]!	; 0x8c

000050b0 <rb_dictionary_foreach_next@plt>:
    50b0:	add	ip, pc, #0, 12
    50b4:	add	ip, ip, #48, 20	; 0x30000
    50b8:	ldr	pc, [ip, #132]!	; 0x84

000050bc <rb_kill@plt>:
    50bc:	add	ip, pc, #0, 12
    50c0:	add	ip, ip, #48, 20	; 0x30000
    50c4:	ldr	pc, [ip, #124]!	; 0x7c

000050c8 <free@plt>:
    50c8:	add	ip, pc, #0, 12
    50cc:	add	ip, ip, #48, 20	; 0x30000
    50d0:	ldr	pc, [ip, #116]!	; 0x74

000050d4 <sendmsg@plt>:
    50d4:	add	ip, pc, #0, 12
    50d8:	add	ip, ip, #48, 20	; 0x30000
    50dc:	ldr	pc, [ip, #108]!	; 0x6c

000050e0 <read@plt>:
    50e0:	add	ip, pc, #0, 12
    50e4:	add	ip, ip, #48, 20	; 0x30000
    50e8:	ldr	pc, [ip, #100]!	; 0x64

000050ec <rb_radixtree_elem_add@plt>:
    50ec:	add	ip, pc, #0, 12
    50f0:	add	ip, ip, #48, 20	; 0x30000
    50f4:	ldr	pc, [ip, #92]!	; 0x5c

000050f8 <write@plt>:
    50f8:	add	ip, pc, #0, 12
    50fc:	add	ip, ip, #48, 20	; 0x30000
    5100:	ldr	pc, [ip, #84]!	; 0x54

00005104 <SSL_new@plt>:
    5104:	add	ip, pc, #0, 12
    5108:	add	ip, ip, #48, 20	; 0x30000
    510c:	ldr	pc, [ip, #76]!	; 0x4c

00005110 <access@plt>:
    5110:	add	ip, pc, #0, 12
    5114:	add	ip, ip, #48, 20	; 0x30000
    5118:	ldr	pc, [ip, #68]!	; 0x44

0000511c <rb_lib_loop@plt>:
    511c:	add	ip, pc, #0, 12
    5120:	add	ip, ip, #48, 20	; 0x30000
    5124:	ldr	pc, [ip, #60]!	; 0x3c

00005128 <timer_settime@plt>:
    5128:	add	ip, pc, #0, 12
    512c:	add	ip, ip, #48, 20	; 0x30000
    5130:	ldr	pc, [ip, #52]!	; 0x34

00005134 <gettimeofday@plt>:
    5134:	add	ip, pc, #0, 12
    5138:	add	ip, ip, #48, 20	; 0x30000
    513c:	ldr	pc, [ip, #44]!	; 0x2c

00005140 <accept@plt>:
    5140:	add	ip, pc, #0, 12
    5144:	add	ip, ip, #48, 20	; 0x30000
    5148:	ldr	pc, [ip, #36]!	; 0x24

0000514c <SSL_read@plt>:
    514c:	add	ip, pc, #0, 12
    5150:	add	ip, ip, #48, 20	; 0x30000
    5154:	ldr	pc, [ip, #28]!

00005158 <rb_read@plt>:
    5158:	add	ip, pc, #0, 12
    515c:	add	ip, ip, #48, 20	; 0x30000
    5160:	ldr	pc, [ip, #20]!

00005164 <socket@plt>:
    5164:	add	ip, pc, #0, 12
    5168:	add	ip, ip, #48, 20	; 0x30000
    516c:	ldr	pc, [ip, #12]!

00005170 <rb_linebuf_get@plt>:
    5170:	add	ip, pc, #0, 12
    5174:	add	ip, ip, #48, 20	; 0x30000
    5178:	ldr	pc, [ip, #4]!

0000517c <rb_radixtree_foreach_cur@plt>:
    517c:	add	ip, pc, #0, 12
    5180:	add	ip, ip, #192512	; 0x2f000
    5184:	ldr	pc, [ip, #4092]!	; 0xffc

00005188 <epoll_wait@plt>:
    5188:	add	ip, pc, #0, 12
    518c:	add	ip, ip, #192512	; 0x2f000
    5190:	ldr	pc, [ip, #4084]!	; 0xff4

00005194 <SSL_do_handshake@plt>:
    5194:	add	ip, pc, #0, 12
    5198:	add	ip, ip, #192512	; 0x2f000
    519c:	ldr	pc, [ip, #4076]!	; 0xfec

000051a0 <rb_linebuf_flush@plt>:
    51a0:	add	ip, pc, #0, 12
    51a4:	add	ip, ip, #192512	; 0x2f000
    51a8:	ldr	pc, [ip, #4068]!	; 0xfe4

000051ac <posix_spawn@plt>:
    51ac:	add	ip, pc, #0, 12
    51b0:	add	ip, ip, #192512	; 0x2f000
    51b4:	ldr	pc, [ip, #4060]!	; 0xfdc

000051b8 <strlen@plt>:
    51b8:	add	ip, pc, #0, 12
    51bc:	add	ip, ip, #192512	; 0x2f000
    51c0:	ldr	pc, [ip, #4052]!	; 0xfd4

000051c4 <rb_current_time@plt>:
    51c4:	add	ip, pc, #0, 12
    51c8:	add	ip, ip, #192512	; 0x2f000
    51cc:	ldr	pc, [ip, #4044]!	; 0xfcc

000051d0 <strtoul@plt>:
    51d0:	add	ip, pc, #0, 12
    51d4:	add	ip, ip, #192512	; 0x2f000
    51d8:	ldr	pc, [ip, #4036]!	; 0xfc4

000051dc <memcpy@plt>:
    51dc:	add	ip, pc, #0, 12
    51e0:	add	ip, ip, #192512	; 0x2f000
    51e4:	ldr	pc, [ip, #4028]!	; 0xfbc

000051e8 <PEM_read_X509@plt>:
    51e8:	add	ip, pc, #0, 12
    51ec:	add	ip, ip, #192512	; 0x2f000
    51f0:	ldr	pc, [ip, #4020]!	; 0xfb4

000051f4 <posix_spawnattr_setflags@plt>:
    51f4:	add	ip, pc, #0, 12
    51f8:	add	ip, ip, #192512	; 0x2f000
    51fc:	ldr	pc, [ip, #4012]!	; 0xfac

00005200 <SSL_CTX_use_certificate_chain_file@plt>:
    5200:	add	ip, pc, #0, 12
    5204:	add	ip, ip, #192512	; 0x2f000
    5208:	ldr	pc, [ip, #4004]!	; 0xfa4

0000520c <rb_free_rb_dlink_node@plt>:
    520c:	add	ip, pc, #0, 12
    5210:	add	ip, ip, #192512	; 0x2f000
    5214:	ldr	pc, [ip, #3996]!	; 0xf9c

00005218 <SSL_CTX_set_options@plt>:
    5218:	add	ip, pc, #0, 12
    521c:	add	ip, ip, #192512	; 0x2f000
    5220:	ldr	pc, [ip, #3988]!	; 0xf94

00005224 <posix_spawnattr_destroy@plt>:
    5224:	add	ip, pc, #0, 12
    5228:	add	ip, ip, #192512	; 0x2f000
    522c:	ldr	pc, [ip, #3980]!	; 0xf8c

00005230 <rb_close@plt>:
    5230:	add	ip, pc, #0, 12
    5234:	add	ip, ip, #192512	; 0x2f000
    5238:	ldr	pc, [ip, #3972]!	; 0xf84

0000523c <strtol@plt>:
    523c:	add	ip, pc, #0, 12
    5240:	add	ip, ip, #192512	; 0x2f000
    5244:	ldr	pc, [ip, #3964]!	; 0xf7c

00005248 <sigaddset@plt>:
    5248:	add	ip, pc, #0, 12
    524c:	add	ip, ip, #192512	; 0x2f000
    5250:	ldr	pc, [ip, #3956]!	; 0xf74

00005254 <strcpy@plt>:
    5254:	add	ip, pc, #0, 12
    5258:	add	ip, ip, #192512	; 0x2f000
    525c:	ldr	pc, [ip, #3948]!	; 0xf6c

00005260 <waitpid@plt>:
    5260:	add	ip, pc, #0, 12
    5264:	add	ip, ip, #192512	; 0x2f000
    5268:	ldr	pc, [ip, #3940]!	; 0xf64

0000526c <rb_run_one_event@plt>:
    526c:	add	ip, pc, #0, 12
    5270:	add	ip, ip, #192512	; 0x2f000
    5274:	ldr	pc, [ip, #3932]!	; 0xf5c

00005278 <rb_patricia_search_exact@plt>:
    5278:	add	ip, pc, #0, 12
    527c:	add	ip, ip, #192512	; 0x2f000
    5280:	ldr	pc, [ip, #3924]!	; 0xf54

00005284 <strncat@plt>:
    5284:	add	ip, pc, #0, 12
    5288:	add	ip, ip, #192512	; 0x2f000
    528c:	ldr	pc, [ip, #3916]!	; 0xf4c

00005290 <atol@plt>:
    5290:	add	ip, pc, #0, 12
    5294:	add	ip, ip, #192512	; 0x2f000
    5298:	ldr	pc, [ip, #3908]!	; 0xf44

0000529c <rb_bh_free@plt>:
    529c:	add	ip, pc, #0, 12
    52a0:	add	ip, ip, #192512	; 0x2f000
    52a4:	ldr	pc, [ip, #3900]!	; 0xf3c

000052a8 <rb_init_rb_dlink_nodes@plt>:
    52a8:	add	ip, pc, #0, 12
    52ac:	add	ip, ip, #192512	; 0x2f000
    52b0:	ldr	pc, [ip, #3892]!	; 0xf34

000052b4 <EVP_sha1@plt>:
    52b4:	add	ip, pc, #0, 12
    52b8:	add	ip, ip, #192512	; 0x2f000
    52bc:	ldr	pc, [ip, #3884]!	; 0xf2c

000052c0 <rb_patricia_lookup@plt>:
    52c0:	add	ip, pc, #0, 12
    52c4:	add	ip, ip, #192512	; 0x2f000
    52c8:	ldr	pc, [ip, #3876]!	; 0xf24

000052cc <shutdown@plt>:
    52cc:	add	ip, pc, #0, 12
    52d0:	add	ip, ip, #192512	; 0x2f000
    52d4:	ldr	pc, [ip, #3868]!	; 0xf1c

000052d8 <bind@plt>:
    52d8:	add	ip, pc, #0, 12
    52dc:	add	ip, ip, #192512	; 0x2f000
    52e0:	ldr	pc, [ip, #3860]!	; 0xf14

000052e4 <rb_lib_log@plt>:
    52e4:	add	ip, pc, #0, 12
    52e8:	add	ip, ip, #192512	; 0x2f000
    52ec:	ldr	pc, [ip, #3852]!	; 0xf0c

000052f0 <SSL_CTX_use_PrivateKey_file@plt>:
    52f0:	add	ip, pc, #0, 12
    52f4:	add	ip, ip, #192512	; 0x2f000
    52f8:	ldr	pc, [ip, #3844]!	; 0xf04

000052fc <select@plt>:
    52fc:	add	ip, pc, #0, 12
    5300:	add	ip, ip, #192512	; 0x2f000
    5304:	ldr	pc, [ip, #3836]!	; 0xefc

00005308 <close@plt>:
    5308:	add	ip, pc, #0, 12
    530c:	add	ip, ip, #192512	; 0x2f000
    5310:	ldr	pc, [ip, #3828]!	; 0xef4

00005314 <rb_inet_ntop@plt>:
    5314:	add	ip, pc, #0, 12
    5318:	add	ip, ip, #192512	; 0x2f000
    531c:	ldr	pc, [ip, #3820]!	; 0xeec

00005320 <rb_bh_alloc@plt>:
    5320:	add	ip, pc, #0, 12
    5324:	add	ip, ip, #192512	; 0x2f000
    5328:	ldr	pc, [ip, #3812]!	; 0xee4

0000532c <SSL_free@plt>:
    532c:	add	ip, pc, #0, 12
    5330:	add	ip, ip, #192512	; 0x2f000
    5334:	ldr	pc, [ip, #3804]!	; 0xedc

00005338 <rb_pipe@plt>:
    5338:	add	ip, pc, #0, 12
    533c:	add	ip, ip, #192512	; 0x2f000
    5340:	ldr	pc, [ip, #3796]!	; 0xed4

00005344 <strncasecmp@plt>:
    5344:	add	ip, pc, #0, 12
    5348:	add	ip, ip, #192512	; 0x2f000
    534c:	ldr	pc, [ip, #3788]!	; 0xecc

00005350 <rb_outofmemory@plt>:
    5350:	add	ip, pc, #0, 12
    5354:	add	ip, ip, #192512	; 0x2f000
    5358:	ldr	pc, [ip, #3780]!	; 0xec4

0000535c <rb_set_time@plt>:
    535c:	add	ip, pc, #0, 12
    5360:	add	ip, ip, #192512	; 0x2f000
    5364:	ldr	pc, [ip, #3772]!	; 0xebc

00005368 <rb_dictionary_stats@plt>:
    5368:	add	ip, pc, #0, 12
    536c:	add	ip, ip, #192512	; 0x2f000
    5370:	ldr	pc, [ip, #3764]!	; 0xeb4

00005374 <malloc@plt>:
    5374:	add	ip, pc, #0, 12
    5378:	add	ip, ip, #192512	; 0x2f000
    537c:	ldr	pc, [ip, #3756]!	; 0xeac

00005380 <sigprocmask@plt>:
    5380:	add	ip, pc, #0, 12
    5384:	add	ip, ip, #192512	; 0x2f000
    5388:	ldr	pc, [ip, #3748]!	; 0xea4

0000538c <rb_event_run@plt>:
    538c:	add	ip, pc, #0, 12
    5390:	add	ip, ip, #192512	; 0x2f000
    5394:	ldr	pc, [ip, #3740]!	; 0xe9c

00005398 <SSL_set_accept_state@plt>:
    5398:	add	ip, pc, #0, 12
    539c:	add	ip, ip, #192512	; 0x2f000
    53a0:	ldr	pc, [ip, #3732]!	; 0xe94

000053a4 <rb_init_bh@plt>:
    53a4:	add	ip, pc, #0, 12
    53a8:	add	ip, ip, #192512	; 0x2f000
    53ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000053b0 <PEM_read_DHparams@plt>:
    53b0:	add	ip, pc, #0, 12
    53b4:	add	ip, ip, #192512	; 0x2f000
    53b8:	ldr	pc, [ip, #3716]!	; 0xe84

000053bc <gmtime_r@plt>:
    53bc:	add	ip, pc, #0, 12
    53c0:	add	ip, ip, #192512	; 0x2f000
    53c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000053c8 <poll@plt>:
    53c8:	add	ip, pc, #0, 12
    53cc:	add	ip, ip, #192512	; 0x2f000
    53d0:	ldr	pc, [ip, #3700]!	; 0xe74

000053d4 <ASN1_item_digest@plt>:
    53d4:	add	ip, pc, #0, 12
    53d8:	add	ip, ip, #192512	; 0x2f000
    53dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000053e0 <strnlen@plt>:
    53e0:	add	ip, pc, #0, 12
    53e4:	add	ip, ip, #192512	; 0x2f000
    53e8:	ldr	pc, [ip, #3684]!	; 0xe64

000053ec <SSL_get_peer_certificate@plt>:
    53ec:	add	ip, pc, #0, 12
    53f0:	add	ip, ip, #192512	; 0x2f000
    53f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000053f8 <rb_dictionary_find@plt>:
    53f8:	add	ip, pc, #0, 12
    53fc:	add	ip, ip, #192512	; 0x2f000
    5400:	ldr	pc, [ip, #3668]!	; 0xe54

00005404 <rb_lib_init@plt>:
    5404:	add	ip, pc, #0, 12
    5408:	add	ip, ip, #192512	; 0x2f000
    540c:	ldr	pc, [ip, #3660]!	; 0xe4c

00005410 <SSL_get_verify_result@plt>:
    5410:	add	ip, pc, #0, 12
    5414:	add	ip, ip, #192512	; 0x2f000
    5418:	ldr	pc, [ip, #3652]!	; 0xe44

0000541c <strtok_r@plt>:
    541c:	add	ip, pc, #0, 12
    5420:	add	ip, ip, #192512	; 0x2f000
    5424:	ldr	pc, [ip, #3644]!	; 0xe3c

00005428 <rb_lib_restart@plt>:
    5428:	add	ip, pc, #0, 12
    542c:	add	ip, ip, #192512	; 0x2f000
    5430:	ldr	pc, [ip, #3636]!	; 0xe34

00005434 <DH_free@plt>:
    5434:	add	ip, pc, #0, 12
    5438:	add	ip, ip, #192512	; 0x2f000
    543c:	ldr	pc, [ip, #3628]!	; 0xe2c

00005440 <timer_delete@plt>:
    5440:	add	ip, pc, #0, 12
    5444:	add	ip, ip, #192512	; 0x2f000
    5448:	ldr	pc, [ip, #3620]!	; 0xe24

0000544c <rb_open@plt>:
    544c:	add	ip, pc, #0, 12
    5450:	add	ip, ip, #192512	; 0x2f000
    5454:	ldr	pc, [ip, #3612]!	; 0xe1c

00005458 <rb_get_sockerr@plt>:
    5458:	add	ip, pc, #0, 12
    545c:	add	ip, ip, #192512	; 0x2f000
    5460:	ldr	pc, [ip, #3604]!	; 0xe14

00005464 <send@plt>:
    5464:	add	ip, pc, #0, 12
    5468:	add	ip, ip, #192512	; 0x2f000
    546c:	ldr	pc, [ip, #3596]!	; 0xe0c

00005470 <SSL_shutdown@plt>:
    5470:	add	ip, pc, #0, 12
    5474:	add	ip, ip, #192512	; 0x2f000
    5478:	ldr	pc, [ip, #3588]!	; 0xe04

0000547c <rb_bh_create@plt>:
    547c:	add	ip, pc, #0, 12
    5480:	add	ip, ip, #192512	; 0x2f000
    5484:	ldr	pc, [ip, #3580]!	; 0xdfc

00005488 <dup2@plt>:
    5488:	add	ip, pc, #0, 12
    548c:	add	ip, ip, #192512	; 0x2f000
    5490:	ldr	pc, [ip, #3572]!	; 0xdf4

00005494 <getpid@plt>:
    5494:	add	ip, pc, #0, 12
    5498:	add	ip, ip, #192512	; 0x2f000
    549c:	ldr	pc, [ip, #3564]!	; 0xdec

000054a0 <rb_writev@plt>:
    54a0:	add	ip, pc, #0, 12
    54a4:	add	ip, ip, #192512	; 0x2f000
    54a8:	ldr	pc, [ip, #3556]!	; 0xde4

000054ac <RAND_bytes@plt>:
    54ac:	add	ip, pc, #0, 12
    54b0:	add	ip, ip, #192512	; 0x2f000
    54b4:	ldr	pc, [ip, #3548]!	; 0xddc

000054b8 <rb_linebuf_newbuf@plt>:
    54b8:	add	ip, pc, #0, 12
    54bc:	add	ip, ip, #192512	; 0x2f000
    54c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000054c4 <rb_fdlist_init@plt>:
    54c4:	add	ip, pc, #0, 12
    54c8:	add	ip, ip, #192512	; 0x2f000
    54cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000054d0 <rb_event_add@plt>:
    54d0:	add	ip, pc, #0, 12
    54d4:	add	ip, ip, #192512	; 0x2f000
    54d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000054dc <readlink@plt>:
    54dc:	add	ip, pc, #0, 12
    54e0:	add	ip, ip, #192512	; 0x2f000
    54e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000054e8 <htonl@plt>:
    54e8:	add	ip, pc, #0, 12
    54ec:	add	ip, ip, #192512	; 0x2f000
    54f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000054f4 <SSL_CTX_new@plt>:
    54f4:	add	ip, pc, #0, 12
    54f8:	add	ip, ip, #192512	; 0x2f000
    54fc:	ldr	pc, [ip, #3500]!	; 0xdac

00005500 <rb_setup_fd@plt>:
    5500:	add	ip, pc, #0, 12
    5504:	add	ip, ip, #192512	; 0x2f000
    5508:	ldr	pc, [ip, #3492]!	; 0xda4

0000550c <recvmsg@plt>:
    550c:	add	ip, pc, #0, 12
    5510:	add	ip, ip, #192512	; 0x2f000
    5514:	ldr	pc, [ip, #3484]!	; 0xd9c

00005518 <rand@plt>:
    5518:	add	ip, pc, #0, 12
    551c:	add	ip, ip, #192512	; 0x2f000
    5520:	ldr	pc, [ip, #3476]!	; 0xd94

00005524 <rb_linebuf_init@plt>:
    5524:	add	ip, pc, #0, 12
    5528:	add	ip, ip, #192512	; 0x2f000
    552c:	ldr	pc, [ip, #3468]!	; 0xd8c

00005530 <__fxstat@plt>:
    5530:	add	ip, pc, #0, 12
    5534:	add	ip, ip, #192512	; 0x2f000
    5538:	ldr	pc, [ip, #3460]!	; 0xd84

0000553c <SSL_set_connect_state@plt>:
    553c:	add	ip, pc, #0, 12
    5540:	add	ip, ip, #192512	; 0x2f000
    5544:	ldr	pc, [ip, #3452]!	; 0xd7c

00005548 <rb_radixtree_elem_find@plt>:
    5548:	add	ip, pc, #0, 12
    554c:	add	ip, ip, #192512	; 0x2f000
    5550:	ldr	pc, [ip, #3444]!	; 0xd74

00005554 <rb_make_rb_dlink_node@plt>:
    5554:	add	ip, pc, #0, 12
    5558:	add	ip, ip, #192512	; 0x2f000
    555c:	ldr	pc, [ip, #3436]!	; 0xd6c

00005560 <rb_strlcat@plt>:
    5560:	add	ip, pc, #0, 12
    5564:	add	ip, ip, #192512	; 0x2f000
    5568:	ldr	pc, [ip, #3428]!	; 0xd64

0000556c <rb_spawn_process@plt>:
    556c:	add	ip, pc, #0, 12
    5570:	add	ip, ip, #192512	; 0x2f000
    5574:	ldr	pc, [ip, #3420]!	; 0xd5c

00005578 <EVP_sha512@plt>:
    5578:	add	ip, pc, #0, 12
    557c:	add	ip, ip, #192512	; 0x2f000
    5580:	ldr	pc, [ip, #3412]!	; 0xd54

00005584 <snprintf@plt>:
    5584:	add	ip, pc, #0, 12
    5588:	add	ip, ip, #192512	; 0x2f000
    558c:	ldr	pc, [ip, #3404]!	; 0xd4c

00005590 <RAND_status@plt>:
    5590:	add	ip, pc, #0, 12
    5594:	add	ip, ip, #192512	; 0x2f000
    5598:	ldr	pc, [ip, #3396]!	; 0xd44

0000559c <timerfd_create@plt>:
    559c:	add	ip, pc, #0, 12
    55a0:	add	ip, ip, #192512	; 0x2f000
    55a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000055a8 <EVP_sha256@plt>:
    55a8:	add	ip, pc, #0, 12
    55ac:	add	ip, ip, #192512	; 0x2f000
    55b0:	ldr	pc, [ip, #3380]!	; 0xd34

000055b4 <strcspn@plt>:
    55b4:	add	ip, pc, #0, 12
    55b8:	add	ip, ip, #192512	; 0x2f000
    55bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000055c0 <rb_linebuf_put@plt>:
    55c0:	add	ip, pc, #0, 12
    55c4:	add	ip, ip, #192512	; 0x2f000
    55c8:	ldr	pc, [ip, #3364]!	; 0xd24

000055cc <rb_listen@plt>:
    55cc:	add	ip, pc, #0, 12
    55d0:	add	ip, ip, #192512	; 0x2f000
    55d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000055d8 <fcntl@plt>:
    55d8:	add	ip, pc, #0, 12
    55dc:	add	ip, ip, #192512	; 0x2f000
    55e0:	ldr	pc, [ip, #3348]!	; 0xd14

000055e4 <strncmp@plt>:
    55e4:	add	ip, pc, #0, 12
    55e8:	add	ip, ip, #192512	; 0x2f000
    55ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000055f0 <kill@plt>:
    55f0:	add	ip, pc, #0, 12
    55f4:	add	ip, ip, #192512	; 0x2f000
    55f8:	ldr	pc, [ip, #3332]!	; 0xd04

000055fc <nanosleep@plt>:
    55fc:	add	ip, pc, #0, 12
    5600:	add	ip, ip, #192512	; 0x2f000
    5604:	ldr	pc, [ip, #3324]!	; 0xcfc

00005608 <rb_event_next@plt>:
    5608:	add	ip, pc, #0, 12
    560c:	add	ip, ip, #192512	; 0x2f000
    5610:	ldr	pc, [ip, #3316]!	; 0xcf4

00005614 <realloc@plt>:
    5614:	add	ip, pc, #0, 12
    5618:	add	ip, ip, #192512	; 0x2f000
    561c:	ldr	pc, [ip, #3308]!	; 0xcec

00005620 <timerfd_settime@plt>:
    5620:	add	ip, pc, #0, 12
    5624:	add	ip, ip, #192512	; 0x2f000
    5628:	ldr	pc, [ip, #3300]!	; 0xce4

0000562c <epoll_ctl@plt>:
    562c:	add	ip, pc, #0, 12
    5630:	add	ip, ip, #192512	; 0x2f000
    5634:	ldr	pc, [ip, #3292]!	; 0xcdc

00005638 <X509_free@plt>:
    5638:	add	ip, pc, #0, 12
    563c:	add	ip, ip, #192512	; 0x2f000
    5640:	ldr	pc, [ip, #3284]!	; 0xcd4

00005644 <readv@plt>:
    5644:	add	ip, pc, #0, 12
    5648:	add	ip, ip, #192512	; 0x2f000
    564c:	ldr	pc, [ip, #3276]!	; 0xccc

00005650 <getsockopt@plt>:
    5650:	add	ip, pc, #0, 12
    5654:	add	ip, ip, #192512	; 0x2f000
    5658:	ldr	pc, [ip, #3268]!	; 0xcc4

0000565c <pipe@plt>:
    565c:	add	ip, pc, #0, 12
    5660:	add	ip, ip, #192512	; 0x2f000
    5664:	ldr	pc, [ip, #3260]!	; 0xcbc

00005668 <OpenSSL_version@plt>:
    5668:	add	ip, pc, #0, 12
    566c:	add	ip, ip, #192512	; 0x2f000
    5670:	ldr	pc, [ip, #3252]!	; 0xcb4

00005674 <setsockopt@plt>:
    5674:	add	ip, pc, #0, 12
    5678:	add	ip, ip, #192512	; 0x2f000
    567c:	ldr	pc, [ip, #3244]!	; 0xcac

00005680 <SSL_get_error@plt>:
    5680:	add	ip, pc, #0, 12
    5684:	add	ip, ip, #192512	; 0x2f000
    5688:	ldr	pc, [ip, #3236]!	; 0xca4

0000568c <SSL_get_version@plt>:
    568c:	add	ip, pc, #0, 12
    5690:	add	ip, ip, #192512	; 0x2f000
    5694:	ldr	pc, [ip, #3228]!	; 0xc9c

00005698 <rb_radixtree_delete@plt>:
    5698:	add	ip, pc, #0, 12
    569c:	add	ip, ip, #192512	; 0x2f000
    56a0:	ldr	pc, [ip, #3220]!	; 0xc94

000056a4 <tolower@plt>:
    56a4:	add	ip, pc, #0, 12
    56a8:	add	ip, ip, #192512	; 0x2f000
    56ac:	ldr	pc, [ip, #3212]!	; 0xc8c

000056b0 <setenv@plt>:
    56b0:	add	ip, pc, #0, 12
    56b4:	add	ip, ip, #192512	; 0x2f000
    56b8:	ldr	pc, [ip, #3204]!	; 0xc84

000056bc <strcmp@plt>:
    56bc:	add	ip, pc, #0, 12
    56c0:	add	ip, ip, #192512	; 0x2f000
    56c4:	ldr	pc, [ip, #3196]!	; 0xc7c

000056c8 <__errno_location@plt>:
    56c8:	add	ip, pc, #0, 12
    56cc:	add	ip, ip, #192512	; 0x2f000
    56d0:	ldr	pc, [ip, #3188]!	; 0xc74

000056d4 <__cxa_finalize@plt>:
    56d4:	add	ip, pc, #0, 12
    56d8:	add	ip, ip, #192512	; 0x2f000
    56dc:	ldr	pc, [ip, #3180]!	; 0xc6c

000056e0 <sprintf@plt>:
    56e0:	add	ip, pc, #0, 12
    56e4:	add	ip, ip, #192512	; 0x2f000
    56e8:	ldr	pc, [ip, #3172]!	; 0xc64

000056ec <rb_bh_usage@plt>:
    56ec:	add	ip, pc, #0, 12
    56f0:	add	ip, ip, #192512	; 0x2f000
    56f4:	ldr	pc, [ip, #3164]!	; 0xc5c

000056f8 <SSL_CTX_set_verify@plt>:
    56f8:	add	ip, pc, #0, 12
    56fc:	add	ip, ip, #192512	; 0x2f000
    5700:	ldr	pc, [ip, #3156]!	; 0xc54

Disassembly of section .text:

00005704 <call_weak_fn>:
    5704:	ldr	r3, [pc, #20]	; 5720 <call_weak_fn+0x1c>
    5708:	ldr	r2, [pc, #20]	; 5724 <call_weak_fn+0x20>
    570c:	add	r3, pc, r3
    5710:	ldr	r2, [r3, r2]
    5714:	cmp	r2, #0
    5718:	bxeq	lr
    571c:	b	4ed0 <__gmon_start__@plt>
    5720:	.word	0x0002f8ec
    5724:	.word	0x00000368

00005728 <deregister_tm_clones>:
    5728:	ldr	r0, [pc, #44]	; 575c <deregister_tm_clones+0x34>
    572c:	ldr	r3, [pc, #44]	; 5760 <deregister_tm_clones+0x38>
    5730:	add	r0, pc, r0
    5734:	add	r3, pc, r3
    5738:	cmp	r3, r0
    573c:	ldr	r3, [pc, #32]	; 5764 <deregister_tm_clones+0x3c>
    5740:	add	r3, pc, r3
    5744:	bxeq	lr
    5748:	ldr	r2, [pc, #24]	; 5768 <deregister_tm_clones+0x40>
    574c:	ldr	r3, [r3, r2]
    5750:	cmp	r3, #0
    5754:	bxeq	lr
    5758:	bx	r3
    575c:	.word	0x00030260
    5760:	.word	0x0003025c
    5764:	.word	0x0002f8b8
    5768:	.word	0x00000384

0000576c <register_tm_clones>:
    576c:	ldr	r0, [pc, #56]	; 57ac <register_tm_clones+0x40>
    5770:	ldr	r3, [pc, #56]	; 57b0 <register_tm_clones+0x44>
    5774:	add	r0, pc, r0
    5778:	add	r3, pc, r3
    577c:	sub	r1, r3, r0
    5780:	ldr	r3, [pc, #44]	; 57b4 <register_tm_clones+0x48>
    5784:	asr	r1, r1, #2
    5788:	add	r3, pc, r3
    578c:	add	r1, r1, r1, lsr #31
    5790:	asrs	r1, r1, #1
    5794:	bxeq	lr
    5798:	ldr	r2, [pc, #24]	; 57b8 <register_tm_clones+0x4c>
    579c:	ldr	r3, [r3, r2]
    57a0:	cmp	r3, #0
    57a4:	bxeq	lr
    57a8:	bx	r3
    57ac:	.word	0x0003021c
    57b0:	.word	0x00030218
    57b4:	.word	0x0002f870
    57b8:	.word	0x00000394

000057bc <__do_global_dtors_aux>:
    57bc:	ldr	r3, [pc, #76]	; 5810 <__do_global_dtors_aux+0x54>
    57c0:	ldr	r2, [pc, #76]	; 5814 <__do_global_dtors_aux+0x58>
    57c4:	add	r3, pc, r3
    57c8:	add	r2, pc, r2
    57cc:	ldrb	r3, [r3]
    57d0:	cmp	r3, #0
    57d4:	bxne	lr
    57d8:	ldr	r3, [pc, #56]	; 5818 <__do_global_dtors_aux+0x5c>
    57dc:	push	{r4, lr}
    57e0:	ldr	r3, [r2, r3]
    57e4:	cmp	r3, #0
    57e8:	beq	57f8 <__do_global_dtors_aux+0x3c>
    57ec:	ldr	r3, [pc, #40]	; 581c <__do_global_dtors_aux+0x60>
    57f0:	ldr	r0, [pc, r3]
    57f4:	bl	56d4 <__cxa_finalize@plt>
    57f8:	bl	5728 <deregister_tm_clones>
    57fc:	ldr	r3, [pc, #28]	; 5820 <__do_global_dtors_aux+0x64>
    5800:	mov	r2, #1
    5804:	add	r3, pc, r3
    5808:	strb	r2, [r3]
    580c:	pop	{r4, pc}
    5810:	.word	0x000301cc
    5814:	.word	0x0002f830
    5818:	.word	0x00000424
    581c:	.word	0x0002fc34
    5820:	.word	0x0003018c

00005824 <frame_dummy>:
    5824:	b	576c <register_tm_clones>

00005828 <rb_spawn_process>:
    5828:	push	{r4, r5, fp, lr}
    582c:	add	fp, sp, #8
    5830:	sub	sp, sp, #392	; 0x188
    5834:	str	r0, [fp, #-12]
    5838:	str	r1, [fp, #-16]
    583c:	ldr	r0, [fp, #-16]
    5840:	str	r0, [fp, #-24]	; 0xffffffe8
    5844:	add	r0, sp, #32
    5848:	bl	5098 <posix_spawnattr_init@plt>
    584c:	add	r1, sp, #32
    5850:	str	r0, [sp, #28]
    5854:	mov	r0, r1
    5858:	movw	r1, #64	; 0x40
    585c:	sxth	r1, r1
    5860:	bl	51f4 <posix_spawnattr_setflags@plt>
    5864:	ldr	r1, [pc, #132]	; 58f0 <rb_spawn_process+0xc8>
    5868:	ldr	r1, [pc, r1]
    586c:	ldr	r1, [r1]
    5870:	str	r1, [fp, #-28]	; 0xffffffe4
    5874:	ldr	r1, [fp, #-12]
    5878:	ldr	lr, [fp, #-24]	; 0xffffffe8
    587c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5880:	sub	r3, fp, #20
    5884:	str	r0, [sp, #24]
    5888:	mov	r0, r3
    588c:	movw	r3, #0
    5890:	str	r2, [sp, #20]
    5894:	mov	r2, r3
    5898:	add	r3, sp, #32
    589c:	str	lr, [sp]
    58a0:	ldr	lr, [sp, #20]
    58a4:	str	lr, [sp, #4]
    58a8:	bl	51ac <posix_spawn@plt>
    58ac:	str	r0, [fp, #-32]	; 0xffffffe0
    58b0:	add	r0, sp, #32
    58b4:	bl	5224 <posix_spawnattr_destroy@plt>
    58b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    58bc:	cmp	r1, #0
    58c0:	str	r0, [sp, #16]
    58c4:	beq	58e4 <rb_spawn_process+0xbc>
    58c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    58cc:	str	r0, [sp, #12]
    58d0:	bl	56c8 <__errno_location@plt>
    58d4:	ldr	lr, [sp, #12]
    58d8:	str	lr, [r0]
    58dc:	mvn	r0, #0
    58e0:	str	r0, [fp, #-20]	; 0xffffffec
    58e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    58e8:	sub	sp, fp, #8
    58ec:	pop	{r4, r5, fp, pc}
    58f0:	.word	0x0002fb3c

000058f4 <rb_gettimeofday>:
    58f4:	push	{fp, lr}
    58f8:	mov	fp, sp
    58fc:	sub	sp, sp, #8
    5900:	str	r0, [sp, #4]
    5904:	str	r1, [sp]
    5908:	ldr	r0, [sp, #4]
    590c:	ldr	r1, [sp]
    5910:	bl	5134 <gettimeofday@plt>
    5914:	mov	sp, fp
    5918:	pop	{fp, pc}

0000591c <rb_sleep>:
    591c:	push	{fp, lr}
    5920:	mov	fp, sp
    5924:	sub	sp, sp, #24
    5928:	str	r0, [fp, #-4]
    592c:	str	r1, [fp, #-8]
    5930:	ldr	r0, [fp, #-8]
    5934:	movw	r1, #1000	; 0x3e8
    5938:	mul	r0, r0, r1
    593c:	str	r0, [sp, #12]
    5940:	ldr	r0, [fp, #-4]
    5944:	str	r0, [sp, #8]
    5948:	add	r0, sp, #8
    594c:	movw	r1, #0
    5950:	bl	55fc <nanosleep@plt>
    5954:	str	r0, [sp, #4]
    5958:	mov	sp, fp
    595c:	pop	{fp, pc}

00005960 <rb_strerror>:
    5960:	push	{fp, lr}
    5964:	mov	fp, sp
    5968:	sub	sp, sp, #8
    596c:	str	r0, [sp, #4]
    5970:	ldr	r0, [sp, #4]
    5974:	bl	4d5c <strerror@plt>
    5978:	mov	sp, fp
    597c:	pop	{fp, pc}

00005980 <rb_kill>:
    5980:	push	{fp, lr}
    5984:	mov	fp, sp
    5988:	sub	sp, sp, #8
    598c:	str	r0, [sp, #4]
    5990:	str	r1, [sp]
    5994:	ldr	r0, [sp, #4]
    5998:	ldr	r1, [sp]
    599c:	bl	55f0 <kill@plt>
    59a0:	mov	sp, fp
    59a4:	pop	{fp, pc}

000059a8 <rb_setenv>:
    59a8:	push	{fp, lr}
    59ac:	mov	fp, sp
    59b0:	sub	sp, sp, #16
    59b4:	str	r0, [fp, #-4]
    59b8:	str	r1, [sp, #8]
    59bc:	str	r2, [sp, #4]
    59c0:	ldr	r0, [fp, #-4]
    59c4:	ldr	r1, [sp, #8]
    59c8:	ldr	r2, [sp, #4]
    59cc:	bl	56b0 <setenv@plt>
    59d0:	mov	sp, fp
    59d4:	pop	{fp, pc}

000059d8 <rb_waitpid>:
    59d8:	push	{fp, lr}
    59dc:	mov	fp, sp
    59e0:	sub	sp, sp, #16
    59e4:	str	r0, [fp, #-4]
    59e8:	str	r1, [sp, #8]
    59ec:	str	r2, [sp, #4]
    59f0:	ldr	r0, [fp, #-4]
    59f4:	ldr	r1, [sp, #8]
    59f8:	ldr	r2, [sp, #4]
    59fc:	bl	5260 <waitpid@plt>
    5a00:	mov	sp, fp
    5a04:	pop	{fp, pc}

00005a08 <rb_getpid>:
    5a08:	push	{fp, lr}
    5a0c:	mov	fp, sp
    5a10:	bl	5494 <getpid@plt>
    5a14:	pop	{fp, pc}

00005a18 <rb_path_to_self>:
    5a18:	push	{fp, lr}
    5a1c:	mov	fp, sp
    5a20:	sub	sp, sp, #8
    5a24:	ldr	r0, [pc, #60]	; 5a68 <rb_path_to_self+0x50>
    5a28:	add	r0, pc, r0
    5a2c:	ldr	r1, [pc, #56]	; 5a6c <rb_path_to_self+0x54>
    5a30:	add	r1, pc, r1
    5a34:	movw	r2, #4096	; 0x1000
    5a38:	bl	54dc <readlink@plt>
    5a3c:	cmn	r0, #1
    5a40:	beq	5a54 <rb_path_to_self+0x3c>
    5a44:	ldr	r0, [pc, #36]	; 5a70 <rb_path_to_self+0x58>
    5a48:	add	r0, pc, r0
    5a4c:	str	r0, [sp, #4]
    5a50:	b	5a5c <rb_path_to_self+0x44>
    5a54:	movw	r0, #0
    5a58:	str	r0, [sp, #4]
    5a5c:	ldr	r0, [sp, #4]
    5a60:	mov	sp, fp
    5a64:	pop	{fp, pc}
    5a68:	.word	0x0001c840
    5a6c:	.word	0x0002ff61
    5a70:	.word	0x0002ff49

00005a74 <rb_init_netio_win32>:
    5a74:	push	{fp, lr}
    5a78:	mov	fp, sp
    5a7c:	bl	56c8 <__errno_location@plt>
    5a80:	movw	lr, #38	; 0x26
    5a84:	str	lr, [r0]
    5a88:	mvn	r0, #0
    5a8c:	pop	{fp, pc}

00005a90 <rb_setselect_win32>:
    5a90:	push	{fp, lr}
    5a94:	mov	fp, sp
    5a98:	sub	sp, sp, #16
    5a9c:	str	r0, [fp, #-4]
    5aa0:	str	r1, [sp, #8]
    5aa4:	str	r2, [sp, #4]
    5aa8:	str	r3, [sp]
    5aac:	bl	56c8 <__errno_location@plt>
    5ab0:	movw	r1, #38	; 0x26
    5ab4:	str	r1, [r0]
    5ab8:	mov	sp, fp
    5abc:	pop	{fp, pc}

00005ac0 <rb_select_win32>:
    5ac0:	push	{fp, lr}
    5ac4:	mov	fp, sp
    5ac8:	sub	sp, sp, #8
    5acc:	str	r0, [sp, #4]
    5ad0:	bl	56c8 <__errno_location@plt>
    5ad4:	movw	lr, #38	; 0x26
    5ad8:	str	lr, [r0]
    5adc:	mvn	r0, #0
    5ae0:	mov	sp, fp
    5ae4:	pop	{fp, pc}

00005ae8 <rb_setup_fd_win32>:
    5ae8:	push	{fp, lr}
    5aec:	mov	fp, sp
    5af0:	sub	sp, sp, #8
    5af4:	str	r0, [sp, #4]
    5af8:	bl	56c8 <__errno_location@plt>
    5afc:	movw	lr, #38	; 0x26
    5b00:	str	lr, [r0]
    5b04:	mvn	r0, #0
    5b08:	mov	sp, fp
    5b0c:	pop	{fp, pc}

00005b10 <rb_crypt>:
    5b10:	push	{fp, lr}
    5b14:	mov	fp, sp
    5b18:	sub	sp, sp, #16
    5b1c:	str	r0, [sp, #8]
    5b20:	str	r1, [sp, #4]
    5b24:	ldr	r0, [sp, #4]
    5b28:	ldrb	r0, [r0]
    5b2c:	cmp	r0, #36	; 0x24
    5b30:	bne	5bd8 <rb_crypt+0xc8>
    5b34:	ldr	r0, [sp, #4]
    5b38:	ldrb	r0, [r0, #2]
    5b3c:	cmp	r0, #36	; 0x24
    5b40:	beq	5b54 <rb_crypt+0x44>
    5b44:	ldr	r0, [sp, #4]
    5b48:	ldrb	r0, [r0, #3]
    5b4c:	cmp	r0, #36	; 0x24
    5b50:	bne	5bd8 <rb_crypt+0xc8>
    5b54:	ldr	r0, [sp, #4]
    5b58:	ldrb	r0, [r0, #1]
    5b5c:	mov	r1, r0
    5b60:	cmp	r0, #49	; 0x31
    5b64:	str	r1, [sp]
    5b68:	beq	5b90 <rb_crypt+0x80>
    5b6c:	b	5b70 <rb_crypt+0x60>
    5b70:	ldr	r0, [sp]
    5b74:	cmp	r0, #53	; 0x35
    5b78:	beq	5ba4 <rb_crypt+0x94>
    5b7c:	b	5b80 <rb_crypt+0x70>
    5b80:	ldr	r0, [sp]
    5b84:	cmp	r0, #54	; 0x36
    5b88:	beq	5bb8 <rb_crypt+0xa8>
    5b8c:	b	5bcc <rb_crypt+0xbc>
    5b90:	ldr	r0, [sp, #8]
    5b94:	ldr	r1, [sp, #4]
    5b98:	bl	5bf4 <rb_md5_crypt>
    5b9c:	str	r0, [fp, #-4]
    5ba0:	b	5be8 <rb_crypt+0xd8>
    5ba4:	ldr	r0, [sp, #8]
    5ba8:	ldr	r1, [sp, #4]
    5bac:	bl	638c <rb_sha256_crypt>
    5bb0:	str	r0, [fp, #-4]
    5bb4:	b	5be8 <rb_crypt+0xd8>
    5bb8:	ldr	r0, [sp, #8]
    5bbc:	ldr	r1, [sp, #4]
    5bc0:	bl	6448 <rb_sha512_crypt>
    5bc4:	str	r0, [fp, #-4]
    5bc8:	b	5be8 <rb_crypt+0xd8>
    5bcc:	movw	r0, #0
    5bd0:	str	r0, [fp, #-4]
    5bd4:	b	5be8 <rb_crypt+0xd8>
    5bd8:	ldr	r0, [sp, #8]
    5bdc:	ldr	r1, [sp, #4]
    5be0:	bl	6550 <rb_des_crypt>
    5be4:	str	r0, [fp, #-4]
    5be8:	ldr	r0, [fp, #-4]
    5bec:	mov	sp, fp
    5bf0:	pop	{fp, pc}

00005bf4 <rb_md5_crypt>:
    5bf4:	push	{r4, r5, fp, lr}
    5bf8:	add	fp, sp, #8
    5bfc:	sub	sp, sp, #336	; 0x150
    5c00:	ldr	r2, [pc, #1792]	; 6308 <rb_md5_crypt+0x714>
    5c04:	add	r2, pc, r2
    5c08:	ldr	r3, [pc, #1788]	; 630c <rb_md5_crypt+0x718>
    5c0c:	add	r3, pc, r3
    5c10:	str	r0, [fp, #-12]
    5c14:	str	r1, [fp, #-16]
    5c18:	ldr	r0, [fp, #-16]
    5c1c:	str	r0, [r3]
    5c20:	ldr	r0, [r3]
    5c24:	ldr	r1, [r2]
    5c28:	ldr	r2, [r2]
    5c2c:	str	r0, [sp, #116]	; 0x74
    5c30:	mov	r0, r2
    5c34:	str	r1, [sp, #112]	; 0x70
    5c38:	bl	51b8 <strlen@plt>
    5c3c:	ldr	r1, [sp, #116]	; 0x74
    5c40:	str	r0, [sp, #108]	; 0x6c
    5c44:	mov	r0, r1
    5c48:	ldr	r1, [sp, #112]	; 0x70
    5c4c:	ldr	r2, [sp, #108]	; 0x6c
    5c50:	bl	55e4 <strncmp@plt>
    5c54:	cmp	r0, #0
    5c58:	bne	5c8c <rb_md5_crypt+0x98>
    5c5c:	ldr	r0, [pc, #1708]	; 6310 <rb_md5_crypt+0x71c>
    5c60:	add	r0, pc, r0
    5c64:	ldr	r1, [pc, #1704]	; 6314 <rb_md5_crypt+0x720>
    5c68:	add	r1, pc, r1
    5c6c:	ldr	r1, [r1]
    5c70:	str	r0, [sp, #104]	; 0x68
    5c74:	mov	r0, r1
    5c78:	bl	51b8 <strlen@plt>
    5c7c:	ldr	r1, [sp, #104]	; 0x68
    5c80:	ldr	lr, [r1]
    5c84:	add	r0, lr, r0
    5c88:	str	r0, [r1]
    5c8c:	ldr	r0, [pc, #1668]	; 6318 <rb_md5_crypt+0x724>
    5c90:	add	r0, pc, r0
    5c94:	ldr	r1, [pc, #1664]	; 631c <rb_md5_crypt+0x728>
    5c98:	add	r1, pc, r1
    5c9c:	ldr	r1, [r1]
    5ca0:	str	r1, [r0]
    5ca4:	ldr	r0, [pc, #1652]	; 6320 <rb_md5_crypt+0x72c>
    5ca8:	add	r0, pc, r0
    5cac:	ldr	r0, [r0]
    5cb0:	ldrb	r0, [r0]
    5cb4:	cmp	r0, #0
    5cb8:	movw	r0, #0
    5cbc:	str	r0, [sp, #100]	; 0x64
    5cc0:	beq	5d10 <rb_md5_crypt+0x11c>
    5cc4:	ldr	r0, [pc, #1624]	; 6324 <rb_md5_crypt+0x730>
    5cc8:	add	r0, pc, r0
    5ccc:	ldr	r0, [r0]
    5cd0:	ldrb	r0, [r0]
    5cd4:	cmp	r0, #36	; 0x24
    5cd8:	movw	r0, #0
    5cdc:	str	r0, [sp, #100]	; 0x64
    5ce0:	beq	5d10 <rb_md5_crypt+0x11c>
    5ce4:	ldr	r0, [pc, #1596]	; 6328 <rb_md5_crypt+0x734>
    5ce8:	add	r0, pc, r0
    5cec:	ldr	r1, [pc, #1592]	; 632c <rb_md5_crypt+0x738>
    5cf0:	add	r1, pc, r1
    5cf4:	ldr	r1, [r1]
    5cf8:	ldr	r0, [r0]
    5cfc:	add	r0, r0, #8
    5d00:	cmp	r1, r0
    5d04:	movw	r0, #0
    5d08:	movcc	r0, #1
    5d0c:	str	r0, [sp, #100]	; 0x64
    5d10:	ldr	r0, [sp, #100]	; 0x64
    5d14:	tst	r0, #1
    5d18:	beq	5d38 <rb_md5_crypt+0x144>
    5d1c:	b	5d20 <rb_md5_crypt+0x12c>
    5d20:	ldr	r0, [pc, #1628]	; 6384 <rb_md5_crypt+0x790>
    5d24:	add	r0, pc, r0
    5d28:	ldr	r1, [r0]
    5d2c:	add	r1, r1, #1
    5d30:	str	r1, [r0]
    5d34:	b	5ca4 <rb_md5_crypt+0xb0>
    5d38:	ldr	r0, [pc, #1532]	; 633c <rb_md5_crypt+0x748>
    5d3c:	add	r0, pc, r0
    5d40:	ldr	r1, [pc, #1528]	; 6340 <rb_md5_crypt+0x74c>
    5d44:	add	r1, pc, r1
    5d48:	ldr	r1, [r1]
    5d4c:	ldr	r0, [r0]
    5d50:	sub	r0, r1, r0
    5d54:	str	r0, [sp, #144]	; 0x90
    5d58:	sub	r0, fp, #104	; 0x68
    5d5c:	bl	7dd0 <MD5Init>
    5d60:	ldr	r1, [fp, #-12]
    5d64:	ldr	r0, [fp, #-12]
    5d68:	str	r1, [sp, #96]	; 0x60
    5d6c:	bl	51b8 <strlen@plt>
    5d70:	sub	r1, fp, #104	; 0x68
    5d74:	str	r0, [sp, #92]	; 0x5c
    5d78:	mov	r0, r1
    5d7c:	ldr	r1, [sp, #96]	; 0x60
    5d80:	ldr	r2, [sp, #92]	; 0x5c
    5d84:	bl	7e3c <MD5Update>
    5d88:	ldr	r0, [pc, #1448]	; 6338 <rb_md5_crypt+0x744>
    5d8c:	add	r0, pc, r0
    5d90:	ldr	r1, [r0]
    5d94:	ldr	r0, [r0]
    5d98:	str	r1, [sp, #88]	; 0x58
    5d9c:	bl	51b8 <strlen@plt>
    5da0:	sub	r1, fp, #104	; 0x68
    5da4:	str	r0, [sp, #84]	; 0x54
    5da8:	mov	r0, r1
    5dac:	ldr	r1, [sp, #88]	; 0x58
    5db0:	ldr	r2, [sp, #84]	; 0x54
    5db4:	bl	7e3c <MD5Update>
    5db8:	ldr	r0, [pc, #1396]	; 6334 <rb_md5_crypt+0x740>
    5dbc:	add	r0, pc, r0
    5dc0:	ldr	r1, [r0]
    5dc4:	ldr	r2, [sp, #144]	; 0x90
    5dc8:	sub	r0, fp, #104	; 0x68
    5dcc:	bl	7e3c <MD5Update>
    5dd0:	add	r0, sp, #152	; 0x98
    5dd4:	bl	7dd0 <MD5Init>
    5dd8:	ldr	r1, [fp, #-12]
    5ddc:	ldr	r0, [fp, #-12]
    5de0:	str	r1, [sp, #80]	; 0x50
    5de4:	bl	51b8 <strlen@plt>
    5de8:	add	r1, sp, #152	; 0x98
    5dec:	str	r0, [sp, #76]	; 0x4c
    5df0:	mov	r0, r1
    5df4:	ldr	r1, [sp, #80]	; 0x50
    5df8:	ldr	r2, [sp, #76]	; 0x4c
    5dfc:	bl	7e3c <MD5Update>
    5e00:	ldr	r0, [pc, #1320]	; 6330 <rb_md5_crypt+0x73c>
    5e04:	add	r0, pc, r0
    5e08:	ldr	r1, [r0]
    5e0c:	ldr	r2, [sp, #144]	; 0x90
    5e10:	add	r0, sp, #152	; 0x98
    5e14:	bl	7e3c <MD5Update>
    5e18:	ldr	r1, [fp, #-12]
    5e1c:	ldr	r0, [fp, #-12]
    5e20:	str	r1, [sp, #72]	; 0x48
    5e24:	bl	51b8 <strlen@plt>
    5e28:	add	r1, sp, #152	; 0x98
    5e2c:	str	r0, [sp, #68]	; 0x44
    5e30:	mov	r0, r1
    5e34:	ldr	r1, [sp, #72]	; 0x48
    5e38:	ldr	r2, [sp, #68]	; 0x44
    5e3c:	bl	7e3c <MD5Update>
    5e40:	add	r0, sp, #120	; 0x78
    5e44:	add	r1, sp, #152	; 0x98
    5e48:	bl	7f94 <MD5Final>
    5e4c:	ldr	r0, [fp, #-12]
    5e50:	bl	51b8 <strlen@plt>
    5e54:	str	r0, [sp, #140]	; 0x8c
    5e58:	ldr	r0, [sp, #140]	; 0x8c
    5e5c:	cmp	r0, #0
    5e60:	ble	5eb8 <rb_md5_crypt+0x2c4>
    5e64:	add	r1, sp, #120	; 0x78
    5e68:	ldr	r0, [sp, #140]	; 0x8c
    5e6c:	cmp	r0, #16
    5e70:	str	r1, [sp, #64]	; 0x40
    5e74:	ble	5e84 <rb_md5_crypt+0x290>
    5e78:	movw	r0, #16
    5e7c:	str	r0, [sp, #60]	; 0x3c
    5e80:	b	5e8c <rb_md5_crypt+0x298>
    5e84:	ldr	r0, [sp, #140]	; 0x8c
    5e88:	str	r0, [sp, #60]	; 0x3c
    5e8c:	ldr	r0, [sp, #60]	; 0x3c
    5e90:	sub	r1, fp, #104	; 0x68
    5e94:	str	r0, [sp, #56]	; 0x38
    5e98:	mov	r0, r1
    5e9c:	ldr	r1, [sp, #64]	; 0x40
    5ea0:	ldr	r2, [sp, #56]	; 0x38
    5ea4:	bl	7e3c <MD5Update>
    5ea8:	ldr	r0, [sp, #140]	; 0x8c
    5eac:	sub	r0, r0, #16
    5eb0:	str	r0, [sp, #140]	; 0x8c
    5eb4:	b	5e58 <rb_md5_crypt+0x264>
    5eb8:	add	r0, sp, #120	; 0x78
    5ebc:	movw	r1, #0
    5ec0:	and	r1, r1, #255	; 0xff
    5ec4:	movw	r2, #16
    5ec8:	bl	4ff0 <memset@plt>
    5ecc:	ldr	r0, [fp, #-12]
    5ed0:	bl	51b8 <strlen@plt>
    5ed4:	str	r0, [sp, #136]	; 0x88
    5ed8:	ldr	r0, [sp, #136]	; 0x88
    5edc:	cmp	r0, #0
    5ee0:	beq	5f2c <rb_md5_crypt+0x338>
    5ee4:	ldr	r0, [sp, #136]	; 0x88
    5ee8:	and	r0, r0, #1
    5eec:	cmp	r0, #0
    5ef0:	beq	5f08 <rb_md5_crypt+0x314>
    5ef4:	add	r1, sp, #120	; 0x78
    5ef8:	sub	r0, fp, #104	; 0x68
    5efc:	movw	r2, #1
    5f00:	bl	7e3c <MD5Update>
    5f04:	b	5f18 <rb_md5_crypt+0x324>
    5f08:	ldr	r1, [fp, #-12]
    5f0c:	sub	r0, fp, #104	; 0x68
    5f10:	movw	r2, #1
    5f14:	bl	7e3c <MD5Update>
    5f18:	b	5f1c <rb_md5_crypt+0x328>
    5f1c:	ldr	r0, [sp, #136]	; 0x88
    5f20:	lsr	r0, r0, #1
    5f24:	str	r0, [sp, #136]	; 0x88
    5f28:	b	5ed8 <rb_md5_crypt+0x2e4>
    5f2c:	ldr	r0, [pc, #1056]	; 6354 <rb_md5_crypt+0x760>
    5f30:	add	r0, pc, r0
    5f34:	ldr	r1, [pc, #1052]	; 6358 <rb_md5_crypt+0x764>
    5f38:	add	r1, pc, r1
    5f3c:	ldr	r1, [r1]
    5f40:	movw	r2, #120	; 0x78
    5f44:	bl	5068 <rb_strlcpy@plt>
    5f48:	ldr	r1, [pc, #1020]	; 634c <rb_md5_crypt+0x758>
    5f4c:	add	r1, pc, r1
    5f50:	ldr	r2, [pc, #1016]	; 6350 <rb_md5_crypt+0x75c>
    5f54:	add	r2, pc, r2
    5f58:	ldr	r2, [r2]
    5f5c:	ldr	lr, [sp, #144]	; 0x90
    5f60:	str	r0, [sp, #52]	; 0x34
    5f64:	mov	r0, r1
    5f68:	mov	r1, r2
    5f6c:	mov	r2, lr
    5f70:	bl	5284 <strncat@plt>
    5f74:	ldr	r1, [pc, #968]	; 6344 <rb_md5_crypt+0x750>
    5f78:	add	r1, pc, r1
    5f7c:	ldr	r2, [pc, #964]	; 6348 <rb_md5_crypt+0x754>
    5f80:	add	r2, pc, r2
    5f84:	str	r0, [sp, #48]	; 0x30
    5f88:	mov	r0, r1
    5f8c:	mov	r1, r2
    5f90:	movw	r2, #120	; 0x78
    5f94:	bl	5560 <rb_strlcat@plt>
    5f98:	add	r1, sp, #120	; 0x78
    5f9c:	str	r0, [sp, #44]	; 0x2c
    5fa0:	mov	r0, r1
    5fa4:	sub	r1, fp, #104	; 0x68
    5fa8:	bl	7f94 <MD5Final>
    5fac:	movw	r0, #0
    5fb0:	str	r0, [sp, #136]	; 0x88
    5fb4:	ldr	r0, [sp, #136]	; 0x88
    5fb8:	cmp	r0, #1000	; 0x3e8
    5fbc:	bcs	6118 <rb_md5_crypt+0x524>
    5fc0:	add	r0, sp, #152	; 0x98
    5fc4:	bl	7dd0 <MD5Init>
    5fc8:	ldr	r0, [sp, #136]	; 0x88
    5fcc:	and	r0, r0, #1
    5fd0:	cmp	r0, #0
    5fd4:	beq	6004 <rb_md5_crypt+0x410>
    5fd8:	ldr	r1, [fp, #-12]
    5fdc:	ldr	r0, [fp, #-12]
    5fe0:	str	r1, [sp, #40]	; 0x28
    5fe4:	bl	51b8 <strlen@plt>
    5fe8:	add	r1, sp, #152	; 0x98
    5fec:	str	r0, [sp, #36]	; 0x24
    5ff0:	mov	r0, r1
    5ff4:	ldr	r1, [sp, #40]	; 0x28
    5ff8:	ldr	r2, [sp, #36]	; 0x24
    5ffc:	bl	7e3c <MD5Update>
    6000:	b	6014 <rb_md5_crypt+0x420>
    6004:	add	r1, sp, #120	; 0x78
    6008:	add	r0, sp, #152	; 0x98
    600c:	movw	r2, #16
    6010:	bl	7e3c <MD5Update>
    6014:	ldr	r0, [sp, #136]	; 0x88
    6018:	movw	r1, #43691	; 0xaaab
    601c:	movt	r1, #43690	; 0xaaaa
    6020:	umull	r1, r2, r0, r1
    6024:	lsr	r2, r2, #1
    6028:	add	r2, r2, r2, lsl #1
    602c:	sub	r0, r0, r2
    6030:	cmp	r0, #0
    6034:	str	r1, [sp, #32]
    6038:	beq	6054 <rb_md5_crypt+0x460>
    603c:	ldr	r0, [pc, #828]	; 6380 <rb_md5_crypt+0x78c>
    6040:	add	r0, pc, r0
    6044:	ldr	r1, [r0]
    6048:	ldr	r2, [sp, #144]	; 0x90
    604c:	add	r0, sp, #152	; 0x98
    6050:	bl	7e3c <MD5Update>
    6054:	ldr	r0, [sp, #136]	; 0x88
    6058:	movw	r1, #18725	; 0x4925
    605c:	movt	r1, #9362	; 0x2492
    6060:	umull	r1, r2, r0, r1
    6064:	sub	r3, r0, r2
    6068:	add	r2, r2, r3, lsr #1
    606c:	lsr	r3, r2, #2
    6070:	lsl	r3, r3, #3
    6074:	sub	r2, r3, r2, lsr #2
    6078:	sub	r0, r0, r2
    607c:	cmp	r0, #0
    6080:	str	r1, [sp, #28]
    6084:	beq	60b0 <rb_md5_crypt+0x4bc>
    6088:	ldr	r1, [fp, #-12]
    608c:	ldr	r0, [fp, #-12]
    6090:	str	r1, [sp, #24]
    6094:	bl	51b8 <strlen@plt>
    6098:	add	r1, sp, #152	; 0x98
    609c:	str	r0, [sp, #20]
    60a0:	mov	r0, r1
    60a4:	ldr	r1, [sp, #24]
    60a8:	ldr	r2, [sp, #20]
    60ac:	bl	7e3c <MD5Update>
    60b0:	ldr	r0, [sp, #136]	; 0x88
    60b4:	and	r0, r0, #1
    60b8:	cmp	r0, #0
    60bc:	beq	60d4 <rb_md5_crypt+0x4e0>
    60c0:	add	r1, sp, #120	; 0x78
    60c4:	add	r0, sp, #152	; 0x98
    60c8:	movw	r2, #16
    60cc:	bl	7e3c <MD5Update>
    60d0:	b	60fc <rb_md5_crypt+0x508>
    60d4:	ldr	r1, [fp, #-12]
    60d8:	ldr	r0, [fp, #-12]
    60dc:	str	r1, [sp, #16]
    60e0:	bl	51b8 <strlen@plt>
    60e4:	add	r1, sp, #152	; 0x98
    60e8:	str	r0, [sp, #12]
    60ec:	mov	r0, r1
    60f0:	ldr	r1, [sp, #16]
    60f4:	ldr	r2, [sp, #12]
    60f8:	bl	7e3c <MD5Update>
    60fc:	add	r0, sp, #120	; 0x78
    6100:	add	r1, sp, #152	; 0x98
    6104:	bl	7f94 <MD5Final>
    6108:	ldr	r0, [sp, #136]	; 0x88
    610c:	add	r0, r0, #1
    6110:	str	r0, [sp, #136]	; 0x88
    6114:	b	5fb4 <rb_md5_crypt+0x3c0>
    6118:	ldr	r0, [pc, #600]	; 6378 <rb_md5_crypt+0x784>
    611c:	add	r0, pc, r0
    6120:	ldr	r1, [pc, #596]	; 637c <rb_md5_crypt+0x788>
    6124:	add	r1, pc, r1
    6128:	ldr	r2, [pc, #600]	; 6388 <rb_md5_crypt+0x794>
    612c:	add	r2, pc, r2
    6130:	str	r0, [sp, #8]
    6134:	mov	r0, r2
    6138:	str	r1, [sp, #4]
    613c:	bl	51b8 <strlen@plt>
    6140:	ldr	r1, [sp, #4]
    6144:	add	r0, r1, r0
    6148:	ldr	r2, [sp, #8]
    614c:	str	r0, [r2]
    6150:	ldrb	r0, [sp, #120]	; 0x78
    6154:	lsl	r0, r0, #16
    6158:	ldrb	lr, [sp, #126]	; 0x7e
    615c:	lsl	lr, lr, #8
    6160:	orr	r0, r0, lr
    6164:	ldrb	lr, [sp, #132]	; 0x84
    6168:	orr	r0, r0, lr
    616c:	str	r0, [sp, #148]	; 0x94
    6170:	ldr	r0, [r2]
    6174:	ldr	r1, [sp, #148]	; 0x94
    6178:	movw	r2, #4
    617c:	bl	8054 <_crypt_to64>
    6180:	ldr	r0, [pc, #492]	; 6374 <rb_md5_crypt+0x780>
    6184:	add	r0, pc, r0
    6188:	ldr	r1, [r0]
    618c:	add	r1, r1, #4
    6190:	str	r1, [r0]
    6194:	ldrb	r1, [sp, #121]	; 0x79
    6198:	lsl	r1, r1, #16
    619c:	ldrb	r2, [sp, #127]	; 0x7f
    61a0:	lsl	r2, r2, #8
    61a4:	orr	r1, r1, r2
    61a8:	ldrb	r2, [sp, #133]	; 0x85
    61ac:	orr	r1, r1, r2
    61b0:	str	r1, [sp, #148]	; 0x94
    61b4:	ldr	r0, [r0]
    61b8:	ldr	r1, [sp, #148]	; 0x94
    61bc:	movw	r2, #4
    61c0:	bl	8054 <_crypt_to64>
    61c4:	ldr	r0, [pc, #420]	; 6370 <rb_md5_crypt+0x77c>
    61c8:	add	r0, pc, r0
    61cc:	ldr	r1, [r0]
    61d0:	add	r1, r1, #4
    61d4:	str	r1, [r0]
    61d8:	ldrb	r1, [sp, #122]	; 0x7a
    61dc:	lsl	r1, r1, #16
    61e0:	ldrb	r2, [sp, #128]	; 0x80
    61e4:	lsl	r2, r2, #8
    61e8:	orr	r1, r1, r2
    61ec:	ldrb	r2, [sp, #134]	; 0x86
    61f0:	orr	r1, r1, r2
    61f4:	str	r1, [sp, #148]	; 0x94
    61f8:	ldr	r0, [r0]
    61fc:	ldr	r1, [sp, #148]	; 0x94
    6200:	movw	r2, #4
    6204:	bl	8054 <_crypt_to64>
    6208:	ldr	r0, [pc, #348]	; 636c <rb_md5_crypt+0x778>
    620c:	add	r0, pc, r0
    6210:	ldr	r1, [r0]
    6214:	add	r1, r1, #4
    6218:	str	r1, [r0]
    621c:	ldrb	r1, [sp, #123]	; 0x7b
    6220:	lsl	r1, r1, #16
    6224:	ldrb	r2, [sp, #129]	; 0x81
    6228:	lsl	r2, r2, #8
    622c:	orr	r1, r1, r2
    6230:	ldrb	r2, [sp, #135]	; 0x87
    6234:	orr	r1, r1, r2
    6238:	str	r1, [sp, #148]	; 0x94
    623c:	ldr	r0, [r0]
    6240:	ldr	r1, [sp, #148]	; 0x94
    6244:	movw	r2, #4
    6248:	bl	8054 <_crypt_to64>
    624c:	ldr	r0, [pc, #276]	; 6368 <rb_md5_crypt+0x774>
    6250:	add	r0, pc, r0
    6254:	ldr	r1, [r0]
    6258:	add	r1, r1, #4
    625c:	str	r1, [r0]
    6260:	ldrb	r1, [sp, #124]	; 0x7c
    6264:	lsl	r1, r1, #16
    6268:	ldrb	r2, [sp, #130]	; 0x82
    626c:	lsl	r2, r2, #8
    6270:	orr	r1, r1, r2
    6274:	ldrb	r2, [sp, #125]	; 0x7d
    6278:	orr	r1, r1, r2
    627c:	str	r1, [sp, #148]	; 0x94
    6280:	ldr	r0, [r0]
    6284:	ldr	r1, [sp, #148]	; 0x94
    6288:	movw	r2, #4
    628c:	bl	8054 <_crypt_to64>
    6290:	ldr	r0, [pc, #204]	; 6364 <rb_md5_crypt+0x770>
    6294:	add	r0, pc, r0
    6298:	ldr	r1, [r0]
    629c:	add	r1, r1, #4
    62a0:	str	r1, [r0]
    62a4:	ldrb	r1, [sp, #131]	; 0x83
    62a8:	str	r1, [sp, #148]	; 0x94
    62ac:	ldr	r0, [r0]
    62b0:	ldr	r1, [sp, #148]	; 0x94
    62b4:	movw	r2, #2
    62b8:	bl	8054 <_crypt_to64>
    62bc:	ldr	r0, [pc, #152]	; 635c <rb_md5_crypt+0x768>
    62c0:	add	r0, pc, r0
    62c4:	add	r1, sp, #120	; 0x78
    62c8:	ldr	r2, [pc, #144]	; 6360 <rb_md5_crypt+0x76c>
    62cc:	add	r2, pc, r2
    62d0:	ldr	lr, [r2]
    62d4:	add	lr, lr, #2
    62d8:	str	lr, [r2]
    62dc:	ldr	r2, [r2]
    62e0:	movw	lr, #0
    62e4:	strb	lr, [r2]
    62e8:	str	r0, [sp]
    62ec:	mov	r0, r1
    62f0:	and	r1, lr, #255	; 0xff
    62f4:	movw	r2, #16
    62f8:	bl	4ff0 <memset@plt>
    62fc:	ldr	r0, [sp]
    6300:	sub	sp, fp, #8
    6304:	pop	{r4, r5, fp, pc}
    6308:	.word	0x0002f824
    630c:	.word	0x000421d4
    6310:	.word	0x00042180
    6314:	.word	0x0002f7c0
    6318:	.word	0x00042154
    631c:	.word	0x00042148
    6320:	.word	0x0004213c
    6324:	.word	0x0004211c
    6328:	.word	0x000420f8
    632c:	.word	0x000420f4
    6330:	.word	0x00041fdc
    6334:	.word	0x00042024
    6338:	.word	0x0002f69c
    633c:	.word	0x000420a4
    6340:	.word	0x000420a0
    6344:	.word	0x00041e70
    6348:	.word	0x0001cafa
    634c:	.word	0x00041e9c
    6350:	.word	0x00041e8c
    6354:	.word	0x00041eb8
    6358:	.word	0x0002f4f0
    635c:	.word	0x00041b28
    6360:	.word	0x00041b94
    6364:	.word	0x00041bcc
    6368:	.word	0x00041c10
    636c:	.word	0x00041c54
    6370:	.word	0x00041c98
    6374:	.word	0x00041cdc
    6378:	.word	0x00041d44
    637c:	.word	0x00041cc4
    6380:	.word	0x00041da0
    6384:	.word	0x000420c0
    6388:	.word	0x00041cbc

0000638c <rb_sha256_crypt>:
    638c:	push	{fp, lr}
    6390:	mov	fp, sp
    6394:	sub	sp, sp, #32
    6398:	str	r0, [fp, #-8]
    639c:	str	r1, [fp, #-12]
    63a0:	ldr	r0, [fp, #-12]
    63a4:	bl	51b8 <strlen@plt>
    63a8:	add	r0, r0, #21
    63ac:	add	r0, r0, #1
    63b0:	add	r0, r0, #43	; 0x2b
    63b4:	add	r0, r0, #1
    63b8:	str	r0, [sp, #16]
    63bc:	ldr	r0, [sp, #16]
    63c0:	bl	5374 <malloc@plt>
    63c4:	str	r0, [sp, #12]
    63c8:	ldr	r0, [sp, #12]
    63cc:	movw	r1, #0
    63d0:	cmp	r0, r1
    63d4:	bne	63e4 <rb_sha256_crypt+0x58>
    63d8:	movw	r0, #0
    63dc:	str	r0, [fp, #-4]
    63e0:	b	6434 <rb_sha256_crypt+0xa8>
    63e4:	ldr	r0, [pc, #84]	; 6440 <rb_sha256_crypt+0xb4>
    63e8:	add	r0, pc, r0
    63ec:	ldr	r1, [pc, #80]	; 6444 <rb_sha256_crypt+0xb8>
    63f0:	add	r1, pc, r1
    63f4:	ldr	r2, [sp, #12]
    63f8:	str	r2, [r1]
    63fc:	ldr	r2, [sp, #16]
    6400:	str	r2, [r0]
    6404:	ldr	r2, [fp, #-8]
    6408:	ldr	r3, [fp, #-12]
    640c:	ldr	r1, [r1]
    6410:	ldr	r0, [r0]
    6414:	str	r0, [sp, #8]
    6418:	mov	r0, r2
    641c:	str	r1, [sp, #4]
    6420:	mov	r1, r3
    6424:	ldr	r2, [sp, #4]
    6428:	ldr	r3, [sp, #8]
    642c:	bl	9d38 <rb_sha256_crypt_r>
    6430:	str	r0, [fp, #-4]
    6434:	ldr	r0, [fp, #-4]
    6438:	mov	sp, fp
    643c:	pop	{fp, pc}
    6440:	.word	0x00041a80
    6444:	.word	0x00041a74

00006448 <rb_sha512_crypt>:
    6448:	push	{fp, lr}
    644c:	mov	fp, sp
    6450:	sub	sp, sp, #32
    6454:	ldr	r2, [pc, #220]	; 6538 <rb_sha512_crypt+0xf0>
    6458:	add	r2, pc, r2
    645c:	str	r0, [fp, #-8]
    6460:	str	r1, [fp, #-12]
    6464:	ldr	r0, [fp, #-12]
    6468:	str	r2, [sp, #8]
    646c:	bl	51b8 <strlen@plt>
    6470:	add	r0, r0, #21
    6474:	add	r0, r0, #1
    6478:	add	r0, r0, #86	; 0x56
    647c:	add	r0, r0, #1
    6480:	str	r0, [sp, #16]
    6484:	ldr	r0, [sp, #8]
    6488:	ldr	r1, [r0]
    648c:	ldr	r2, [sp, #16]
    6490:	cmp	r1, r2
    6494:	bge	64ec <rb_sha512_crypt+0xa4>
    6498:	ldr	r0, [pc, #156]	; 653c <rb_sha512_crypt+0xf4>
    649c:	add	r0, pc, r0
    64a0:	ldr	r0, [r0]
    64a4:	ldr	r1, [sp, #16]
    64a8:	bl	5614 <realloc@plt>
    64ac:	str	r0, [sp, #12]
    64b0:	ldr	r0, [sp, #12]
    64b4:	movw	r1, #0
    64b8:	cmp	r0, r1
    64bc:	bne	64cc <rb_sha512_crypt+0x84>
    64c0:	movw	r0, #0
    64c4:	str	r0, [fp, #-4]
    64c8:	b	652c <rb_sha512_crypt+0xe4>
    64cc:	ldr	r0, [pc, #108]	; 6540 <rb_sha512_crypt+0xf8>
    64d0:	add	r0, pc, r0
    64d4:	ldr	r1, [pc, #104]	; 6544 <rb_sha512_crypt+0xfc>
    64d8:	add	r1, pc, r1
    64dc:	ldr	r2, [sp, #12]
    64e0:	str	r2, [r1]
    64e4:	ldr	r1, [sp, #16]
    64e8:	str	r1, [r0]
    64ec:	ldr	r0, [pc, #84]	; 6548 <rb_sha512_crypt+0x100>
    64f0:	add	r0, pc, r0
    64f4:	ldr	r1, [pc, #80]	; 654c <rb_sha512_crypt+0x104>
    64f8:	add	r1, pc, r1
    64fc:	ldr	r2, [fp, #-8]
    6500:	ldr	r3, [fp, #-12]
    6504:	ldr	r1, [r1]
    6508:	ldr	r0, [r0]
    650c:	str	r0, [sp, #4]
    6510:	mov	r0, r2
    6514:	str	r1, [sp]
    6518:	mov	r1, r3
    651c:	ldr	r2, [sp]
    6520:	ldr	r3, [sp, #4]
    6524:	bl	b9ac <rb_sha512_crypt_r>
    6528:	str	r0, [fp, #-4]
    652c:	ldr	r0, [fp, #-4]
    6530:	mov	sp, fp
    6534:	pop	{fp, pc}
    6538:	.word	0x00041a18
    653c:	.word	0x000419d0
    6540:	.word	0x000419a0
    6544:	.word	0x00041994
    6548:	.word	0x00041980
    654c:	.word	0x00041974

00006550 <rb_des_crypt>:
    6550:	push	{fp, lr}
    6554:	mov	fp, sp
    6558:	sub	sp, sp, #64	; 0x40
    655c:	str	r0, [fp, #-8]
    6560:	str	r1, [fp, #-12]
    6564:	bl	68ac <rb_des_init>
    6568:	add	r0, sp, #24
    656c:	str	r0, [sp, #16]
    6570:	add	r0, sp, #24
    6574:	ldr	r1, [sp, #16]
    6578:	sub	r0, r1, r0
    657c:	sub	r0, r0, #8
    6580:	cmp	r0, #0
    6584:	beq	65c4 <rb_des_crypt+0x74>
    6588:	ldr	r0, [fp, #-8]
    658c:	ldrb	r0, [r0]
    6590:	lsl	r0, r0, #1
    6594:	ldr	r1, [sp, #16]
    6598:	add	r2, r1, #1
    659c:	str	r2, [sp, #16]
    65a0:	strb	r0, [r1]
    65a4:	ldr	r0, [sp, #16]
    65a8:	ldrsb	r0, [r0, #-1]
    65ac:	cmp	r0, #0
    65b0:	beq	65c0 <rb_des_crypt+0x70>
    65b4:	ldr	r0, [fp, #-8]
    65b8:	add	r0, r0, #1
    65bc:	str	r0, [fp, #-8]
    65c0:	b	6570 <rb_des_crypt+0x20>
    65c4:	add	r0, sp, #24
    65c8:	bl	72f4 <rb_des_setkey>
    65cc:	cmp	r0, #0
    65d0:	beq	65e0 <rb_des_crypt+0x90>
    65d4:	movw	r0, #0
    65d8:	str	r0, [fp, #-4]
    65dc:	b	688c <rb_des_crypt+0x33c>
    65e0:	movw	r0, #25
    65e4:	str	r0, [fp, #-16]
    65e8:	ldr	r0, [fp, #-12]
    65ec:	ldrb	r0, [r0, #1]
    65f0:	bl	76f8 <rb_ascii_to_bin>
    65f4:	lsl	r0, r0, #6
    65f8:	ldr	lr, [fp, #-12]
    65fc:	ldrb	lr, [lr]
    6600:	str	r0, [sp, #12]
    6604:	mov	r0, lr
    6608:	bl	76f8 <rb_ascii_to_bin>
    660c:	ldr	lr, [pc, #644]	; 6898 <rb_des_crypt+0x348>
    6610:	add	lr, pc, lr
    6614:	ldr	r1, [sp, #12]
    6618:	orr	r0, r1, r0
    661c:	str	r0, [fp, #-20]	; 0xffffffec
    6620:	ldr	r0, [fp, #-12]
    6624:	ldrb	r0, [r0]
    6628:	strb	r0, [lr]
    662c:	ldr	r0, [fp, #-12]
    6630:	ldrb	r0, [r0, #1]
    6634:	cmp	r0, #0
    6638:	beq	664c <rb_des_crypt+0xfc>
    663c:	ldr	r0, [fp, #-12]
    6640:	ldrb	r0, [r0, #1]
    6644:	str	r0, [sp, #8]
    6648:	b	665c <rb_des_crypt+0x10c>
    664c:	ldr	r0, [pc, #584]	; 689c <rb_des_crypt+0x34c>
    6650:	add	r0, pc, r0
    6654:	ldrb	r0, [r0]
    6658:	str	r0, [sp, #8]
    665c:	ldr	r0, [sp, #8]
    6660:	ldr	r1, [pc, #568]	; 68a0 <rb_des_crypt+0x350>
    6664:	add	r1, pc, r1
    6668:	add	r2, r1, #2
    666c:	strb	r0, [r1, #1]
    6670:	str	r2, [sp, #20]
    6674:	ldr	r0, [fp, #-20]	; 0xffffffec
    6678:	bl	77b8 <rb_setup_salt>
    667c:	ldr	r0, [fp, #-16]
    6680:	movw	r1, #0
    6684:	str	r0, [sp, #4]
    6688:	mov	r0, r1
    668c:	sub	r2, fp, #28
    6690:	add	r3, sp, #32
    6694:	ldr	lr, [sp, #4]
    6698:	str	lr, [sp]
    669c:	bl	788c <rb_do_des>
    66a0:	cmp	r0, #0
    66a4:	beq	66b4 <rb_des_crypt+0x164>
    66a8:	movw	r0, #0
    66ac:	str	r0, [fp, #-4]
    66b0:	b	688c <rb_des_crypt+0x33c>
    66b4:	ldr	r0, [pc, #488]	; 68a4 <rb_des_crypt+0x354>
    66b8:	add	r0, pc, r0
    66bc:	ldr	r1, [pc, #484]	; 68a8 <rb_des_crypt+0x358>
    66c0:	add	r1, pc, r1
    66c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    66c8:	lsr	r2, r2, #8
    66cc:	str	r2, [fp, #-24]	; 0xffffffe8
    66d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    66d4:	lsr	r2, r2, #18
    66d8:	and	r2, r2, #63	; 0x3f
    66dc:	add	r2, r1, r2
    66e0:	ldrb	r2, [r2]
    66e4:	ldr	r3, [sp, #20]
    66e8:	add	ip, r3, #1
    66ec:	str	ip, [sp, #20]
    66f0:	strb	r2, [r3]
    66f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    66f8:	lsr	r2, r2, #12
    66fc:	and	r2, r2, #63	; 0x3f
    6700:	add	r2, r1, r2
    6704:	ldrb	r2, [r2]
    6708:	ldr	r3, [sp, #20]
    670c:	add	ip, r3, #1
    6710:	str	ip, [sp, #20]
    6714:	strb	r2, [r3]
    6718:	ldr	r2, [fp, #-24]	; 0xffffffe8
    671c:	lsr	r2, r2, #6
    6720:	and	r2, r2, #63	; 0x3f
    6724:	add	r2, r1, r2
    6728:	ldrb	r2, [r2]
    672c:	ldr	r3, [sp, #20]
    6730:	add	ip, r3, #1
    6734:	str	ip, [sp, #20]
    6738:	strb	r2, [r3]
    673c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6740:	and	r2, r2, #63	; 0x3f
    6744:	add	r2, r1, r2
    6748:	ldrb	r2, [r2]
    674c:	ldr	r3, [sp, #20]
    6750:	add	ip, r3, #1
    6754:	str	ip, [sp, #20]
    6758:	strb	r2, [r3]
    675c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6760:	lsl	r2, r2, #16
    6764:	ldr	r3, [sp, #32]
    6768:	lsr	r3, r3, #16
    676c:	movw	ip, #65535	; 0xffff
    6770:	and	r3, r3, ip
    6774:	orr	r2, r2, r3
    6778:	str	r2, [fp, #-24]	; 0xffffffe8
    677c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6780:	lsr	r2, r2, #18
    6784:	and	r2, r2, #63	; 0x3f
    6788:	add	r2, r1, r2
    678c:	ldrb	r2, [r2]
    6790:	ldr	r3, [sp, #20]
    6794:	add	ip, r3, #1
    6798:	str	ip, [sp, #20]
    679c:	strb	r2, [r3]
    67a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67a4:	lsr	r2, r2, #12
    67a8:	and	r2, r2, #63	; 0x3f
    67ac:	add	r2, r1, r2
    67b0:	ldrb	r2, [r2]
    67b4:	ldr	r3, [sp, #20]
    67b8:	add	ip, r3, #1
    67bc:	str	ip, [sp, #20]
    67c0:	strb	r2, [r3]
    67c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67c8:	lsr	r2, r2, #6
    67cc:	and	r2, r2, #63	; 0x3f
    67d0:	add	r2, r1, r2
    67d4:	ldrb	r2, [r2]
    67d8:	ldr	r3, [sp, #20]
    67dc:	add	ip, r3, #1
    67e0:	str	ip, [sp, #20]
    67e4:	strb	r2, [r3]
    67e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    67ec:	and	r2, r2, #63	; 0x3f
    67f0:	add	r2, r1, r2
    67f4:	ldrb	r2, [r2]
    67f8:	ldr	r3, [sp, #20]
    67fc:	add	ip, r3, #1
    6800:	str	ip, [sp, #20]
    6804:	strb	r2, [r3]
    6808:	ldr	r2, [sp, #32]
    680c:	lsl	r2, r2, #2
    6810:	str	r2, [fp, #-24]	; 0xffffffe8
    6814:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6818:	lsr	r2, r2, #12
    681c:	and	r2, r2, #63	; 0x3f
    6820:	add	r2, r1, r2
    6824:	ldrb	r2, [r2]
    6828:	ldr	r3, [sp, #20]
    682c:	add	ip, r3, #1
    6830:	str	ip, [sp, #20]
    6834:	strb	r2, [r3]
    6838:	ldr	r2, [fp, #-24]	; 0xffffffe8
    683c:	lsr	r2, r2, #6
    6840:	and	r2, r2, #63	; 0x3f
    6844:	add	r2, r1, r2
    6848:	ldrb	r2, [r2]
    684c:	ldr	r3, [sp, #20]
    6850:	add	ip, r3, #1
    6854:	str	ip, [sp, #20]
    6858:	strb	r2, [r3]
    685c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6860:	and	r2, r2, #63	; 0x3f
    6864:	add	r1, r1, r2
    6868:	ldrb	r1, [r1]
    686c:	ldr	r2, [sp, #20]
    6870:	add	r3, r2, #1
    6874:	str	r3, [sp, #20]
    6878:	strb	r1, [r2]
    687c:	ldr	r1, [sp, #20]
    6880:	movw	r2, #0
    6884:	strb	r2, [r1]
    6888:	str	r0, [fp, #-4]
    688c:	ldr	r0, [fp, #-4]
    6890:	mov	sp, fp
    6894:	pop	{fp, pc}
    6898:	.word	0x00030384
    689c:	.word	0x00030344
    68a0:	.word	0x00030330
    68a4:	.word	0x000302dc
    68a8:	.word	0x0001bbb8

000068ac <rb_des_init>:
    68ac:	push	{r4, r5, r6, sl, fp, lr}
    68b0:	add	fp, sp, #16
    68b4:	sub	sp, sp, #76	; 0x4c
    68b8:	ldr	r0, [pc, #2380]	; 720c <rb_des_init+0x960>
    68bc:	add	r0, pc, r0
    68c0:	ldr	r0, [r0]
    68c4:	cmp	r0, #1
    68c8:	bne	68d0 <rb_des_init+0x24>
    68cc:	b	7204 <rb_des_init+0x958>
    68d0:	ldr	r0, [pc, #2360]	; 7210 <rb_des_init+0x964>
    68d4:	add	r0, pc, r0
    68d8:	add	r1, r0, #32
    68dc:	ldr	r2, [pc, #2352]	; 7214 <rb_des_init+0x968>
    68e0:	add	r2, pc, r2
    68e4:	add	r0, r0, #16
    68e8:	ldr	r3, [pc, #2344]	; 7218 <rb_des_init+0x96c>
    68ec:	add	r3, pc, r3
    68f0:	ldr	ip, [pc, #2340]	; 721c <rb_des_init+0x970>
    68f4:	add	ip, pc, ip
    68f8:	ldr	lr, [pc, #2336]	; 7220 <rb_des_init+0x974>
    68fc:	add	lr, pc, lr
    6900:	ldr	r4, [pc, #2332]	; 7224 <rb_des_init+0x978>
    6904:	add	r4, pc, r4
    6908:	ldr	r5, [pc, #2328]	; 7228 <rb_des_init+0x97c>
    690c:	add	r5, pc, r5
    6910:	movw	r6, #0
    6914:	str	r6, [r5]
    6918:	str	r6, [r4]
    691c:	str	r6, [lr]
    6920:	str	r6, [ip]
    6924:	str	r0, [r3]
    6928:	str	r1, [r2]
    692c:	str	r6, [fp, #-20]	; 0xffffffec
    6930:	ldr	r0, [fp, #-20]	; 0xffffffec
    6934:	cmp	r0, #8
    6938:	bge	69cc <rb_des_init+0x120>
    693c:	movw	r0, #0
    6940:	str	r0, [fp, #-24]	; 0xffffffe8
    6944:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6948:	cmp	r0, #64	; 0x40
    694c:	bge	69b8 <rb_des_init+0x10c>
    6950:	ldr	r0, [pc, #2364]	; 7294 <rb_des_init+0x9e8>
    6954:	add	r0, pc, r0
    6958:	ldr	r1, [fp, #-24]	; 0xffffffe8
    695c:	and	r2, r1, #32
    6960:	and	r3, r1, #1
    6964:	orr	r2, r2, r3, lsl #4
    6968:	ubfx	r1, r1, #1, #4
    696c:	orr	r1, r2, r1
    6970:	str	r1, [fp, #-28]	; 0xffffffe4
    6974:	ldr	r1, [fp, #-20]	; 0xffffffec
    6978:	ldr	r2, [pc, #2328]	; 7298 <rb_des_init+0x9ec>
    697c:	add	r2, pc, r2
    6980:	add	r2, r2, r1, lsl #6
    6984:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6988:	ldrb	r2, [r2, r3]
    698c:	ldr	r3, [pc, #2312]	; 729c <rb_des_init+0x9f0>
    6990:	add	r3, pc, r3
    6994:	add	r1, r3, r1, lsl #6
    6998:	ldr	r3, [fp, #-24]	; 0xffffffe8
    699c:	add	r1, r1, r3
    69a0:	strb	r2, [r1]
    69a4:	str	r0, [sp, #28]
    69a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    69ac:	add	r0, r0, #1
    69b0:	str	r0, [fp, #-24]	; 0xffffffe8
    69b4:	b	6944 <rb_des_init+0x98>
    69b8:	b	69bc <rb_des_init+0x110>
    69bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    69c0:	add	r0, r0, #1
    69c4:	str	r0, [fp, #-20]	; 0xffffffec
    69c8:	b	6930 <rb_des_init+0x84>
    69cc:	movw	r0, #0
    69d0:	str	r0, [fp, #-28]	; 0xffffffe4
    69d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69d8:	cmp	r0, #4
    69dc:	bge	6a98 <rb_des_init+0x1ec>
    69e0:	movw	r0, #0
    69e4:	str	r0, [fp, #-20]	; 0xffffffec
    69e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    69ec:	cmp	r0, #64	; 0x40
    69f0:	bge	6a84 <rb_des_init+0x1d8>
    69f4:	movw	r0, #0
    69f8:	str	r0, [fp, #-24]	; 0xffffffe8
    69fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a00:	cmp	r0, #64	; 0x40
    6a04:	bge	6a70 <rb_des_init+0x1c4>
    6a08:	ldr	r0, [pc, #2176]	; 7290 <rb_des_init+0x9e4>
    6a0c:	add	r0, pc, r0
    6a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a14:	ldr	r2, [pc, #2180]	; 72a0 <rb_des_init+0x9f4>
    6a18:	add	r2, pc, r2
    6a1c:	add	r2, r2, r1, lsl #7
    6a20:	ldr	r3, [fp, #-20]	; 0xffffffec
    6a24:	ldrb	r3, [r2, r3]
    6a28:	ldr	ip, [fp, #-24]	; 0xffffffe8
    6a2c:	add	r2, r2, ip
    6a30:	ldrb	r2, [r2, #64]	; 0x40
    6a34:	orr	r2, r2, r3, lsl #4
    6a38:	ldr	r3, [pc, #2148]	; 72a4 <rb_des_init+0x9f8>
    6a3c:	add	r3, pc, r3
    6a40:	add	r1, r3, r1, lsl #12
    6a44:	ldr	r3, [fp, #-20]	; 0xffffffec
    6a48:	lsl	r3, r3, #6
    6a4c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    6a50:	orr	r3, r3, ip
    6a54:	add	r1, r1, r3
    6a58:	strb	r2, [r1]
    6a5c:	str	r0, [sp, #24]
    6a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a64:	add	r0, r0, #1
    6a68:	str	r0, [fp, #-24]	; 0xffffffe8
    6a6c:	b	69fc <rb_des_init+0x150>
    6a70:	b	6a74 <rb_des_init+0x1c8>
    6a74:	ldr	r0, [fp, #-20]	; 0xffffffec
    6a78:	add	r0, r0, #1
    6a7c:	str	r0, [fp, #-20]	; 0xffffffec
    6a80:	b	69e8 <rb_des_init+0x13c>
    6a84:	b	6a88 <rb_des_init+0x1dc>
    6a88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6a8c:	add	r0, r0, #1
    6a90:	str	r0, [fp, #-28]	; 0xffffffe4
    6a94:	b	69d4 <rb_des_init+0x128>
    6a98:	movw	r0, #0
    6a9c:	str	r0, [fp, #-20]	; 0xffffffec
    6aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6aa4:	cmp	r0, #64	; 0x40
    6aa8:	bge	6b18 <rb_des_init+0x26c>
    6aac:	ldr	r0, [pc, #1996]	; 7280 <rb_des_init+0x9d4>
    6ab0:	add	r0, pc, r0
    6ab4:	ldr	r1, [pc, #1992]	; 7284 <rb_des_init+0x9d8>
    6ab8:	add	r1, pc, r1
    6abc:	ldr	r2, [pc, #1988]	; 7288 <rb_des_init+0x9dc>
    6ac0:	add	r2, pc, r2
    6ac4:	ldr	r3, [pc, #1984]	; 728c <rb_des_init+0x9e0>
    6ac8:	add	r3, pc, r3
    6acc:	ldr	ip, [fp, #-20]	; 0xffffffec
    6ad0:	ldr	lr, [fp, #-20]	; 0xffffffec
    6ad4:	add	r3, r3, lr
    6ad8:	ldrb	r3, [r3]
    6adc:	sub	r3, r3, #1
    6ae0:	ldr	lr, [fp, #-20]	; 0xffffffec
    6ae4:	add	r2, r2, lr
    6ae8:	strb	r3, [r2]
    6aec:	and	r2, r3, #255	; 0xff
    6af0:	add	r1, r1, r2
    6af4:	strb	ip, [r1]
    6af8:	ldr	r1, [fp, #-20]	; 0xffffffec
    6afc:	add	r0, r0, r1
    6b00:	movw	r1, #255	; 0xff
    6b04:	strb	r1, [r0]
    6b08:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b0c:	add	r0, r0, #1
    6b10:	str	r0, [fp, #-20]	; 0xffffffec
    6b14:	b	6aa0 <rb_des_init+0x1f4>
    6b18:	movw	r0, #0
    6b1c:	str	r0, [fp, #-20]	; 0xffffffec
    6b20:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b24:	cmp	r0, #56	; 0x38
    6b28:	bge	6b80 <rb_des_init+0x2d4>
    6b2c:	ldr	r0, [pc, #1856]	; 7274 <rb_des_init+0x9c8>
    6b30:	add	r0, pc, r0
    6b34:	ldr	r1, [pc, #1852]	; 7278 <rb_des_init+0x9cc>
    6b38:	add	r1, pc, r1
    6b3c:	ldr	r2, [pc, #1848]	; 727c <rb_des_init+0x9d0>
    6b40:	add	r2, pc, r2
    6b44:	ldr	r3, [fp, #-20]	; 0xffffffec
    6b48:	ldr	ip, [fp, #-20]	; 0xffffffec
    6b4c:	add	r2, r2, ip
    6b50:	ldrb	r2, [r2]
    6b54:	sub	r2, r2, #1
    6b58:	add	r1, r1, r2
    6b5c:	strb	r3, [r1]
    6b60:	ldr	r1, [fp, #-20]	; 0xffffffec
    6b64:	add	r0, r0, r1
    6b68:	movw	r1, #255	; 0xff
    6b6c:	strb	r1, [r0]
    6b70:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b74:	add	r0, r0, #1
    6b78:	str	r0, [fp, #-20]	; 0xffffffec
    6b7c:	b	6b20 <rb_des_init+0x274>
    6b80:	movw	r0, #0
    6b84:	str	r0, [fp, #-20]	; 0xffffffec
    6b88:	ldr	r0, [fp, #-20]	; 0xffffffec
    6b8c:	cmp	r0, #48	; 0x30
    6b90:	bge	6bd0 <rb_des_init+0x324>
    6b94:	ldr	r0, [pc, #1744]	; 726c <rb_des_init+0x9c0>
    6b98:	add	r0, pc, r0
    6b9c:	ldr	r1, [pc, #1740]	; 7270 <rb_des_init+0x9c4>
    6ba0:	add	r1, pc, r1
    6ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
    6ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
    6bac:	add	r1, r1, r3
    6bb0:	ldrb	r1, [r1]
    6bb4:	sub	r1, r1, #1
    6bb8:	add	r0, r0, r1
    6bbc:	strb	r2, [r0]
    6bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
    6bc4:	add	r0, r0, #1
    6bc8:	str	r0, [fp, #-20]	; 0xffffffec
    6bcc:	b	6b88 <rb_des_init+0x2dc>
    6bd0:	movw	r0, #0
    6bd4:	str	r0, [fp, #-32]	; 0xffffffe0
    6bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6bdc:	cmp	r0, #8
    6be0:	bge	709c <rb_des_init+0x7f0>
    6be4:	movw	r0, #0
    6be8:	str	r0, [fp, #-20]	; 0xffffffec
    6bec:	ldr	r0, [fp, #-20]	; 0xffffffec
    6bf0:	cmp	r0, #256	; 0x100
    6bf4:	bge	6e04 <rb_des_init+0x558>
    6bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6bfc:	ldr	r1, [pc, #1700]	; 72a8 <rb_des_init+0x9fc>
    6c00:	add	r1, pc, r1
    6c04:	add	r0, r1, r0, lsl #10
    6c08:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c0c:	add	r2, r0, r1, lsl #2
    6c10:	str	r2, [sp, #44]	; 0x2c
    6c14:	mov	r2, #0
    6c18:	str	r2, [r0, r1, lsl #2]
    6c1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6c20:	ldr	r1, [pc, #1668]	; 72ac <rb_des_init+0xa00>
    6c24:	add	r1, pc, r1
    6c28:	add	r0, r1, r0, lsl #10
    6c2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c30:	add	r3, r0, r1, lsl #2
    6c34:	str	r3, [sp, #40]	; 0x28
    6c38:	str	r2, [r0, r1, lsl #2]
    6c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6c40:	ldr	r1, [pc, #1640]	; 72b0 <rb_des_init+0xa04>
    6c44:	add	r1, pc, r1
    6c48:	add	r0, r1, r0, lsl #10
    6c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c50:	add	r3, r0, r1, lsl #2
    6c54:	str	r3, [sp, #36]	; 0x24
    6c58:	str	r2, [r0, r1, lsl #2]
    6c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6c60:	ldr	r1, [pc, #1612]	; 72b4 <rb_des_init+0xa08>
    6c64:	add	r1, pc, r1
    6c68:	add	r0, r1, r0, lsl #10
    6c6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c70:	add	r0, r0, r1, lsl #2
    6c74:	str	r0, [sp, #32]
    6c78:	movw	r1, #0
    6c7c:	str	r1, [r0]
    6c80:	str	r1, [fp, #-24]	; 0xffffffe8
    6c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6c88:	cmp	r0, #8
    6c8c:	bge	6df0 <rb_des_init+0x544>
    6c90:	ldr	r0, [pc, #1464]	; 7250 <rb_des_init+0x9a4>
    6c94:	add	r0, pc, r0
    6c98:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6c9c:	lsl	r1, r1, #3
    6ca0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6ca4:	add	r1, r1, r2
    6ca8:	str	r1, [fp, #-36]	; 0xffffffdc
    6cac:	ldr	r1, [fp, #-20]	; 0xffffffec
    6cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6cb4:	add	r0, r0, r2
    6cb8:	ldrb	r0, [r0]
    6cbc:	and	r0, r1, r0
    6cc0:	cmp	r0, #0
    6cc4:	beq	6ddc <rb_des_init+0x530>
    6cc8:	ldr	r0, [pc, #1412]	; 7254 <rb_des_init+0x9a8>
    6ccc:	add	r0, pc, r0
    6cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6cd4:	add	r0, r0, r1
    6cd8:	ldrb	r0, [r0]
    6cdc:	str	r0, [fp, #-40]	; 0xffffffd8
    6ce0:	cmp	r0, #32
    6ce4:	bge	6d1c <rb_des_init+0x470>
    6ce8:	ldr	r0, [pc, #1388]	; 725c <rb_des_init+0x9b0>
    6cec:	add	r0, pc, r0
    6cf0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6cf4:	ldr	r2, [pc, #1468]	; 72b8 <rb_des_init+0xa0c>
    6cf8:	add	r2, pc, r2
    6cfc:	add	r1, r2, r1, lsl #2
    6d00:	ldr	r1, [r1]
    6d04:	ldr	r2, [sp, #44]	; 0x2c
    6d08:	ldr	r3, [r2]
    6d0c:	orr	r1, r3, r1
    6d10:	str	r1, [r2]
    6d14:	str	r0, [sp, #20]
    6d18:	b	6d50 <rb_des_init+0x4a4>
    6d1c:	ldr	r0, [pc, #1332]	; 7258 <rb_des_init+0x9ac>
    6d20:	add	r0, pc, r0
    6d24:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6d28:	sub	r1, r1, #32
    6d2c:	ldr	r2, [pc, #1416]	; 72bc <rb_des_init+0xa10>
    6d30:	add	r2, pc, r2
    6d34:	add	r1, r2, r1, lsl #2
    6d38:	ldr	r1, [r1]
    6d3c:	ldr	r2, [sp, #40]	; 0x28
    6d40:	ldr	r3, [r2]
    6d44:	orr	r1, r3, r1
    6d48:	str	r1, [r2]
    6d4c:	str	r0, [sp, #16]
    6d50:	ldr	r0, [pc, #1288]	; 7260 <rb_des_init+0x9b4>
    6d54:	add	r0, pc, r0
    6d58:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6d5c:	add	r0, r0, r1
    6d60:	ldrb	r0, [r0]
    6d64:	str	r0, [fp, #-40]	; 0xffffffd8
    6d68:	cmp	r0, #32
    6d6c:	bge	6da4 <rb_des_init+0x4f8>
    6d70:	ldr	r0, [pc, #1264]	; 7268 <rb_des_init+0x9bc>
    6d74:	add	r0, pc, r0
    6d78:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6d7c:	ldr	r2, [pc, #1340]	; 72c0 <rb_des_init+0xa14>
    6d80:	add	r2, pc, r2
    6d84:	add	r1, r2, r1, lsl #2
    6d88:	ldr	r1, [r1]
    6d8c:	ldr	r2, [sp, #36]	; 0x24
    6d90:	ldr	r3, [r2]
    6d94:	orr	r1, r3, r1
    6d98:	str	r1, [r2]
    6d9c:	str	r0, [sp, #12]
    6da0:	b	6dd8 <rb_des_init+0x52c>
    6da4:	ldr	r0, [pc, #1208]	; 7264 <rb_des_init+0x9b8>
    6da8:	add	r0, pc, r0
    6dac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6db0:	sub	r1, r1, #32
    6db4:	ldr	r2, [pc, #1288]	; 72c4 <rb_des_init+0xa18>
    6db8:	add	r2, pc, r2
    6dbc:	add	r1, r2, r1, lsl #2
    6dc0:	ldr	r1, [r1]
    6dc4:	ldr	r2, [sp, #32]
    6dc8:	ldr	r3, [r2]
    6dcc:	orr	r1, r3, r1
    6dd0:	str	r1, [r2]
    6dd4:	str	r0, [sp, #8]
    6dd8:	b	6ddc <rb_des_init+0x530>
    6ddc:	b	6de0 <rb_des_init+0x534>
    6de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6de4:	add	r0, r0, #1
    6de8:	str	r0, [fp, #-24]	; 0xffffffe8
    6dec:	b	6c84 <rb_des_init+0x3d8>
    6df0:	b	6df4 <rb_des_init+0x548>
    6df4:	ldr	r0, [fp, #-20]	; 0xffffffec
    6df8:	add	r0, r0, #1
    6dfc:	str	r0, [fp, #-20]	; 0xffffffec
    6e00:	b	6bec <rb_des_init+0x340>
    6e04:	movw	r0, #0
    6e08:	str	r0, [fp, #-20]	; 0xffffffec
    6e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    6e10:	cmp	r0, #128	; 0x80
    6e14:	bge	7088 <rb_des_init+0x7dc>
    6e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e1c:	ldr	r1, [pc, #1188]	; 72c8 <rb_des_init+0xa1c>
    6e20:	add	r1, pc, r1
    6e24:	add	r0, r1, r0, lsl #9
    6e28:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e2c:	add	r2, r0, r1, lsl #2
    6e30:	str	r2, [sp, #44]	; 0x2c
    6e34:	mov	r2, #0
    6e38:	str	r2, [r0, r1, lsl #2]
    6e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e40:	ldr	r1, [pc, #1156]	; 72cc <rb_des_init+0xa20>
    6e44:	add	r1, pc, r1
    6e48:	add	r0, r1, r0, lsl #9
    6e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e50:	add	r0, r0, r1, lsl #2
    6e54:	str	r0, [sp, #40]	; 0x28
    6e58:	movw	r1, #0
    6e5c:	str	r1, [r0]
    6e60:	str	r1, [fp, #-24]	; 0xffffffe8
    6e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e68:	cmp	r0, #7
    6e6c:	bge	6f44 <rb_des_init+0x698>
    6e70:	ldr	r0, [pc, #976]	; 7248 <rb_des_init+0x99c>
    6e74:	add	r0, pc, r0
    6e78:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6e7c:	lsl	r1, r1, #3
    6e80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e84:	add	r1, r1, r2
    6e88:	str	r1, [fp, #-36]	; 0xffffffdc
    6e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e94:	add	r2, r2, #1
    6e98:	add	r0, r0, r2
    6e9c:	ldrb	r0, [r0]
    6ea0:	and	r0, r1, r0
    6ea4:	cmp	r0, #0
    6ea8:	beq	6f30 <rb_des_init+0x684>
    6eac:	ldr	r0, [pc, #920]	; 724c <rb_des_init+0x9a0>
    6eb0:	add	r0, pc, r0
    6eb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6eb8:	add	r0, r0, r1
    6ebc:	ldrb	r0, [r0]
    6ec0:	str	r0, [fp, #-40]	; 0xffffffd8
    6ec4:	cmp	r0, #255	; 0xff
    6ec8:	bne	6ed0 <rb_des_init+0x624>
    6ecc:	b	6f34 <rb_des_init+0x688>
    6ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6ed4:	cmp	r0, #28
    6ed8:	bge	6f04 <rb_des_init+0x658>
    6edc:	ldr	r0, [pc, #1004]	; 72d0 <rb_des_init+0xa24>
    6ee0:	ldr	r0, [pc, r0]
    6ee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6ee8:	add	r0, r0, r1, lsl #2
    6eec:	ldr	r0, [r0]
    6ef0:	ldr	r1, [sp, #44]	; 0x2c
    6ef4:	ldr	r2, [r1]
    6ef8:	orr	r0, r2, r0
    6efc:	str	r0, [r1]
    6f00:	b	6f2c <rb_des_init+0x680>
    6f04:	ldr	r0, [pc, #968]	; 72d4 <rb_des_init+0xa28>
    6f08:	ldr	r0, [pc, r0]
    6f0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6f10:	sub	r1, r1, #28
    6f14:	add	r0, r0, r1, lsl #2
    6f18:	ldr	r0, [r0]
    6f1c:	ldr	r1, [sp, #40]	; 0x28
    6f20:	ldr	r2, [r1]
    6f24:	orr	r0, r2, r0
    6f28:	str	r0, [r1]
    6f2c:	b	6f30 <rb_des_init+0x684>
    6f30:	b	6f34 <rb_des_init+0x688>
    6f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f38:	add	r0, r0, #1
    6f3c:	str	r0, [fp, #-24]	; 0xffffffe8
    6f40:	b	6e64 <rb_des_init+0x5b8>
    6f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6f48:	ldr	r1, [pc, #904]	; 72d8 <rb_des_init+0xa2c>
    6f4c:	add	r1, pc, r1
    6f50:	add	r0, r1, r0, lsl #9
    6f54:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f58:	add	r2, r0, r1, lsl #2
    6f5c:	str	r2, [sp, #44]	; 0x2c
    6f60:	mov	r2, #0
    6f64:	str	r2, [r0, r1, lsl #2]
    6f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6f6c:	ldr	r1, [pc, #872]	; 72dc <rb_des_init+0xa30>
    6f70:	add	r1, pc, r1
    6f74:	add	r0, r1, r0, lsl #9
    6f78:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f7c:	add	r0, r0, r1, lsl #2
    6f80:	str	r0, [sp, #40]	; 0x28
    6f84:	movw	r1, #0
    6f88:	str	r1, [r0]
    6f8c:	str	r1, [fp, #-24]	; 0xffffffe8
    6f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f94:	cmp	r0, #7
    6f98:	bge	7074 <rb_des_init+0x7c8>
    6f9c:	ldr	r0, [pc, #668]	; 7240 <rb_des_init+0x994>
    6fa0:	add	r0, pc, r0
    6fa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6fa8:	movw	r2, #7
    6fac:	mul	r1, r1, r2
    6fb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6fb4:	add	r1, r1, r2
    6fb8:	str	r1, [fp, #-36]	; 0xffffffdc
    6fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    6fc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6fc4:	add	r2, r2, #1
    6fc8:	add	r0, r0, r2
    6fcc:	ldrb	r0, [r0]
    6fd0:	and	r0, r1, r0
    6fd4:	cmp	r0, #0
    6fd8:	beq	7060 <rb_des_init+0x7b4>
    6fdc:	ldr	r0, [pc, #608]	; 7244 <rb_des_init+0x998>
    6fe0:	add	r0, pc, r0
    6fe4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    6fe8:	add	r0, r0, r1
    6fec:	ldrb	r0, [r0]
    6ff0:	str	r0, [fp, #-40]	; 0xffffffd8
    6ff4:	cmp	r0, #255	; 0xff
    6ff8:	bne	7000 <rb_des_init+0x754>
    6ffc:	b	7064 <rb_des_init+0x7b8>
    7000:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7004:	cmp	r0, #24
    7008:	bge	7034 <rb_des_init+0x788>
    700c:	ldr	r0, [pc, #716]	; 72e0 <rb_des_init+0xa34>
    7010:	ldr	r0, [pc, r0]
    7014:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7018:	add	r0, r0, r1, lsl #2
    701c:	ldr	r0, [r0]
    7020:	ldr	r1, [sp, #44]	; 0x2c
    7024:	ldr	r2, [r1]
    7028:	orr	r0, r2, r0
    702c:	str	r0, [r1]
    7030:	b	705c <rb_des_init+0x7b0>
    7034:	ldr	r0, [pc, #680]	; 72e4 <rb_des_init+0xa38>
    7038:	ldr	r0, [pc, r0]
    703c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7040:	sub	r1, r1, #24
    7044:	add	r0, r0, r1, lsl #2
    7048:	ldr	r0, [r0]
    704c:	ldr	r1, [sp, #40]	; 0x28
    7050:	ldr	r2, [r1]
    7054:	orr	r0, r2, r0
    7058:	str	r0, [r1]
    705c:	b	7060 <rb_des_init+0x7b4>
    7060:	b	7064 <rb_des_init+0x7b8>
    7064:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7068:	add	r0, r0, #1
    706c:	str	r0, [fp, #-24]	; 0xffffffe8
    7070:	b	6f90 <rb_des_init+0x6e4>
    7074:	b	7078 <rb_des_init+0x7cc>
    7078:	ldr	r0, [fp, #-20]	; 0xffffffec
    707c:	add	r0, r0, #1
    7080:	str	r0, [fp, #-20]	; 0xffffffec
    7084:	b	6e0c <rb_des_init+0x560>
    7088:	b	708c <rb_des_init+0x7e0>
    708c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7090:	add	r0, r0, #1
    7094:	str	r0, [fp, #-32]	; 0xffffffe0
    7098:	b	6bd8 <rb_des_init+0x32c>
    709c:	movw	r0, #0
    70a0:	str	r0, [fp, #-20]	; 0xffffffec
    70a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    70a8:	cmp	r0, #32
    70ac:	bge	70ec <rb_des_init+0x840>
    70b0:	ldr	r0, [pc, #384]	; 7238 <rb_des_init+0x98c>
    70b4:	add	r0, pc, r0
    70b8:	ldr	r1, [pc, #380]	; 723c <rb_des_init+0x990>
    70bc:	add	r1, pc, r1
    70c0:	ldr	r2, [fp, #-20]	; 0xffffffec
    70c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    70c8:	add	r1, r1, r3
    70cc:	ldrb	r1, [r1]
    70d0:	sub	r1, r1, #1
    70d4:	add	r0, r0, r1
    70d8:	strb	r2, [r0]
    70dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    70e0:	add	r0, r0, #1
    70e4:	str	r0, [fp, #-20]	; 0xffffffec
    70e8:	b	70a4 <rb_des_init+0x7f8>
    70ec:	movw	r0, #0
    70f0:	str	r0, [fp, #-28]	; 0xffffffe4
    70f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    70f8:	cmp	r0, #4
    70fc:	bge	71f4 <rb_des_init+0x948>
    7100:	movw	r0, #0
    7104:	str	r0, [fp, #-20]	; 0xffffffec
    7108:	ldr	r0, [fp, #-20]	; 0xffffffec
    710c:	cmp	r0, #256	; 0x100
    7110:	bge	71e0 <rb_des_init+0x934>
    7114:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7118:	ldr	r1, [pc, #456]	; 72e8 <rb_des_init+0xa3c>
    711c:	add	r1, pc, r1
    7120:	add	r0, r1, r0, lsl #10
    7124:	ldr	r1, [fp, #-20]	; 0xffffffec
    7128:	add	r0, r0, r1, lsl #2
    712c:	str	r0, [fp, #-44]	; 0xffffffd4
    7130:	movw	r1, #0
    7134:	str	r1, [r0]
    7138:	str	r1, [fp, #-24]	; 0xffffffe8
    713c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7140:	cmp	r0, #8
    7144:	bge	71cc <rb_des_init+0x920>
    7148:	ldr	r0, [pc, #224]	; 7230 <rb_des_init+0x984>
    714c:	add	r0, pc, r0
    7150:	ldr	r1, [fp, #-20]	; 0xffffffec
    7154:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7158:	add	r0, r0, r2
    715c:	ldrb	r0, [r0]
    7160:	and	r0, r1, r0
    7164:	cmp	r0, #0
    7168:	beq	71b8 <rb_des_init+0x90c>
    716c:	ldr	r0, [pc, #192]	; 7234 <rb_des_init+0x988>
    7170:	add	r0, pc, r0
    7174:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7178:	ldr	r2, [fp, #-24]	; 0xffffffe8
    717c:	add	r1, r2, r1, lsl #3
    7180:	ldr	r2, [pc, #356]	; 72ec <rb_des_init+0xa40>
    7184:	add	r2, pc, r2
    7188:	ldrb	r1, [r2, r1]
    718c:	mov	r2, r1
    7190:	ldr	r3, [pc, #344]	; 72f0 <rb_des_init+0xa44>
    7194:	add	r3, pc, r3
    7198:	add	r1, r3, r1, lsl #2
    719c:	ldr	r1, [r1]
    71a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    71a4:	ldr	ip, [r3]
    71a8:	orr	r1, ip, r1
    71ac:	str	r1, [r3]
    71b0:	str	r0, [sp, #4]
    71b4:	str	r2, [sp]
    71b8:	b	71bc <rb_des_init+0x910>
    71bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    71c0:	add	r0, r0, #1
    71c4:	str	r0, [fp, #-24]	; 0xffffffe8
    71c8:	b	713c <rb_des_init+0x890>
    71cc:	b	71d0 <rb_des_init+0x924>
    71d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    71d4:	add	r0, r0, #1
    71d8:	str	r0, [fp, #-20]	; 0xffffffec
    71dc:	b	7108 <rb_des_init+0x85c>
    71e0:	b	71e4 <rb_des_init+0x938>
    71e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    71e8:	add	r0, r0, #1
    71ec:	str	r0, [fp, #-28]	; 0xffffffe4
    71f0:	b	70f4 <rb_des_init+0x848>
    71f4:	ldr	r0, [pc, #48]	; 722c <rb_des_init+0x980>
    71f8:	add	r0, pc, r0
    71fc:	movw	r1, #1
    7200:	str	r1, [r0]
    7204:	sub	sp, fp, #16
    7208:	pop	{r4, r5, r6, sl, fp, pc}
    720c:	.word	0x000300f0
    7210:	.word	0x0001b9e8
    7214:	.word	0x000300e4
    7218:	.word	0x000300d4
    721c:	.word	0x000300c8
    7220:	.word	0x000300bc
    7224:	.word	0x000300b0
    7228:	.word	0x000300a4
    722c:	.word	0x0002f7b4
    7230:	.word	0x0001b498
    7234:	.word	0x0001b14c
    7238:	.word	0x0003fc0c
    723c:	.word	0x0001b530
    7240:	.word	0x0001b644
    7244:	.word	0x00033ca8
    7248:	.word	0x0001b770
    724c:	.word	0x00033d98
    7250:	.word	0x0001b950
    7254:	.word	0x00033efc
    7258:	.word	0x0001b59c
    725c:	.word	0x0001b5d0
    7260:	.word	0x00033eb4
    7264:	.word	0x0001b514
    7268:	.word	0x0001b548
    726c:	.word	0x000340f0
    7270:	.word	0x0001ba14
    7274:	.word	0x00034158
    7278:	.word	0x00034110
    727c:	.word	0x0001ba3c
    7280:	.word	0x00034198
    7284:	.word	0x00034110
    7288:	.word	0x00034148
    728c:	.word	0x0001ba74
    7290:	.word	0x000301bc
    7294:	.word	0x00030074
    7298:	.word	0x0001b9c0
    729c:	.word	0x00030038
    72a0:	.word	0x0002ffb0
    72a4:	.word	0x0003018c
    72a8:	.word	0x000340c0
    72ac:	.word	0x0003609c
    72b0:	.word	0x0003807c
    72b4:	.word	0x0003a05c
    72b8:	.word	0x0001b5c4
    72bc:	.word	0x0001b58c
    72c0:	.word	0x0001b53c
    72c4:	.word	0x0001b504
    72c8:	.word	0x0003bea0
    72cc:	.word	0x0003ce7c
    72d0:	.word	0x0002fae0
    72d4:	.word	0x0002fab8
    72d8:	.word	0x0003dd74
    72dc:	.word	0x0003ed50
    72e0:	.word	0x0002f9b4
    72e4:	.word	0x0002f98c
    72e8:	.word	0x0003fbc4
    72ec:	.word	0x0003fb3c
    72f0:	.word	0x0001b128

000072f4 <rb_des_setkey>:
    72f4:	push	{fp, lr}
    72f8:	mov	fp, sp
    72fc:	sub	sp, sp, #56	; 0x38
    7300:	str	r0, [fp, #-8]
    7304:	bl	68ac <rb_des_init>
    7308:	ldr	r0, [fp, #-8]
    730c:	ldr	r0, [r0]
    7310:	bl	5074 <ntohl@plt>
    7314:	str	r0, [fp, #-20]	; 0xffffffec
    7318:	ldr	r0, [fp, #-8]
    731c:	ldr	r0, [r0, #4]
    7320:	bl	5074 <ntohl@plt>
    7324:	str	r0, [fp, #-24]	; 0xffffffe8
    7328:	ldr	r0, [fp, #-20]	; 0xffffffec
    732c:	ldr	lr, [fp, #-24]	; 0xffffffe8
    7330:	orr	r0, r0, lr
    7334:	cmp	r0, #0
    7338:	beq	7378 <rb_des_setkey+0x84>
    733c:	ldr	r0, [pc, #888]	; 76bc <rb_des_setkey+0x3c8>
    7340:	add	r0, pc, r0
    7344:	ldr	r1, [fp, #-20]	; 0xffffffec
    7348:	ldr	r0, [r0]
    734c:	cmp	r1, r0
    7350:	bne	7378 <rb_des_setkey+0x84>
    7354:	ldr	r0, [pc, #868]	; 76c0 <rb_des_setkey+0x3cc>
    7358:	add	r0, pc, r0
    735c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7360:	ldr	r0, [r0]
    7364:	cmp	r1, r0
    7368:	bne	7378 <rb_des_setkey+0x84>
    736c:	movw	r0, #0
    7370:	str	r0, [fp, #-4]
    7374:	b	76b0 <rb_des_setkey+0x3bc>
    7378:	ldr	r0, [pc, #836]	; 76c4 <rb_des_setkey+0x3d0>
    737c:	add	r0, pc, r0
    7380:	add	r0, r0, #3584	; 0xe00
    7384:	ldr	r1, [fp, #-20]	; 0xffffffec
    7388:	ldr	r2, [pc, #828]	; 76cc <rb_des_setkey+0x3d8>
    738c:	add	r2, pc, r2
    7390:	str	r1, [r2]
    7394:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7398:	ldr	r2, [pc, #816]	; 76d0 <rb_des_setkey+0x3dc>
    739c:	add	r2, pc, r2
    73a0:	str	r1, [r2]
    73a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    73a8:	lsr	r2, r1, #25
    73ac:	ldr	r3, [pc, #800]	; 76d4 <rb_des_setkey+0x3e0>
    73b0:	add	r3, pc, r3
    73b4:	ldr	r2, [r3, r2, lsl #2]
    73b8:	ubfx	ip, r1, #17, #7
    73bc:	add	ip, r3, ip, lsl #2
    73c0:	ldr	ip, [ip, #512]	; 0x200
    73c4:	orr	r2, r2, ip
    73c8:	ubfx	ip, r1, #9, #7
    73cc:	add	ip, r3, ip, lsl #2
    73d0:	ldr	ip, [ip, #1024]	; 0x400
    73d4:	orr	r2, r2, ip
    73d8:	and	r1, r1, #254	; 0xfe
    73dc:	add	r1, r3, r1, lsl #1
    73e0:	ldr	r1, [r1, #1536]	; 0x600
    73e4:	orr	r1, r2, r1
    73e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    73ec:	lsr	ip, r2, #25
    73f0:	add	ip, r3, ip, lsl #2
    73f4:	ldr	ip, [ip, #2048]	; 0x800
    73f8:	orr	r1, r1, ip
    73fc:	ubfx	ip, r2, #17, #7
    7400:	add	ip, r3, ip, lsl #2
    7404:	ldr	ip, [ip, #2560]	; 0xa00
    7408:	orr	r1, r1, ip
    740c:	ubfx	ip, r2, #9, #7
    7410:	add	ip, r3, ip, lsl #2
    7414:	ldr	ip, [ip, #3072]	; 0xc00
    7418:	orr	r1, r1, ip
    741c:	and	r2, r2, #254	; 0xfe
    7420:	add	r2, r3, r2, lsl #1
    7424:	ldr	r2, [r2, #3584]	; 0xe00
    7428:	orr	r1, r1, r2
    742c:	str	r1, [fp, #-12]
    7430:	ldr	r1, [fp, #-20]	; 0xffffffec
    7434:	lsr	r2, r1, #25
    7438:	ldr	r3, [pc, #664]	; 76d8 <rb_des_setkey+0x3e4>
    743c:	add	r3, pc, r3
    7440:	ldr	r2, [r3, r2, lsl #2]
    7444:	ubfx	ip, r1, #17, #7
    7448:	add	ip, r3, ip, lsl #2
    744c:	ldr	ip, [ip, #512]	; 0x200
    7450:	orr	r2, r2, ip
    7454:	ubfx	ip, r1, #9, #7
    7458:	add	ip, r3, ip, lsl #2
    745c:	ldr	ip, [ip, #1024]	; 0x400
    7460:	orr	r2, r2, ip
    7464:	and	r1, r1, #254	; 0xfe
    7468:	add	r1, r3, r1, lsl #1
    746c:	ldr	r1, [r1, #1536]	; 0x600
    7470:	orr	r1, r2, r1
    7474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7478:	lsr	ip, r2, #25
    747c:	add	ip, r3, ip, lsl #2
    7480:	ldr	ip, [ip, #2048]	; 0x800
    7484:	orr	r1, r1, ip
    7488:	ubfx	ip, r2, #17, #7
    748c:	add	ip, r3, ip, lsl #2
    7490:	ldr	ip, [ip, #2560]	; 0xa00
    7494:	orr	r1, r1, ip
    7498:	ubfx	ip, r2, #9, #7
    749c:	add	ip, r3, ip, lsl #2
    74a0:	ldr	ip, [ip, #3072]	; 0xc00
    74a4:	orr	r1, r1, ip
    74a8:	ubfx	r2, r2, #1, #7
    74ac:	mov	ip, r2
    74b0:	add	r2, r3, r2, lsl #2
    74b4:	add	r2, r2, #3584	; 0xe00
    74b8:	ldr	r2, [r2]
    74bc:	orr	r1, r1, r2
    74c0:	str	r1, [fp, #-16]
    74c4:	movw	r1, #0
    74c8:	str	r1, [sp, #28]
    74cc:	str	r1, [sp, #24]
    74d0:	str	r0, [sp, #12]
    74d4:	str	ip, [sp, #8]
    74d8:	ldr	r0, [sp, #24]
    74dc:	cmp	r0, #16
    74e0:	bge	76a8 <rb_des_setkey+0x3b4>
    74e4:	ldr	r0, [pc, #476]	; 76c8 <rb_des_setkey+0x3d4>
    74e8:	add	r0, pc, r0
    74ec:	ldr	r1, [sp, #24]
    74f0:	ldr	r2, [pc, #484]	; 76dc <rb_des_setkey+0x3e8>
    74f4:	add	r2, pc, r2
    74f8:	ldrb	r1, [r2, r1]
    74fc:	ldr	r2, [sp, #28]
    7500:	add	r1, r2, r1
    7504:	str	r1, [sp, #28]
    7508:	ldr	r1, [fp, #-12]
    750c:	ldr	r2, [sp, #28]
    7510:	lsl	r3, r1, r2
    7514:	rsb	r2, r2, #28
    7518:	orr	r1, r3, r1, lsr r2
    751c:	str	r1, [sp, #20]
    7520:	ldr	r1, [fp, #-16]
    7524:	ldr	r2, [sp, #28]
    7528:	lsl	r3, r1, r2
    752c:	rsb	r2, r2, #28
    7530:	orr	r1, r3, r1, lsr r2
    7534:	str	r1, [sp, #16]
    7538:	ldr	r1, [sp, #20]
    753c:	ubfx	r2, r1, #21, #7
    7540:	ldr	r3, [pc, #408]	; 76e0 <rb_des_setkey+0x3ec>
    7544:	add	r3, pc, r3
    7548:	ldr	r2, [r3, r2, lsl #2]
    754c:	ubfx	ip, r1, #14, #7
    7550:	add	ip, r3, ip, lsl #2
    7554:	ldr	ip, [ip, #512]	; 0x200
    7558:	orr	r2, r2, ip
    755c:	ubfx	ip, r1, #7, #7
    7560:	add	ip, r3, ip, lsl #2
    7564:	ldr	ip, [ip, #1024]	; 0x400
    7568:	orr	r2, r2, ip
    756c:	and	r1, r1, #127	; 0x7f
    7570:	add	r1, r3, r1, lsl #2
    7574:	ldr	r1, [r1, #1536]	; 0x600
    7578:	orr	r1, r2, r1
    757c:	ldr	r2, [sp, #16]
    7580:	ubfx	ip, r2, #21, #7
    7584:	add	ip, r3, ip, lsl #2
    7588:	ldr	ip, [ip, #2048]	; 0x800
    758c:	orr	r1, r1, ip
    7590:	ubfx	ip, r2, #14, #7
    7594:	add	ip, r3, ip, lsl #2
    7598:	ldr	ip, [ip, #2560]	; 0xa00
    759c:	orr	r1, r1, ip
    75a0:	ubfx	ip, r2, #7, #7
    75a4:	add	ip, r3, ip, lsl #2
    75a8:	ldr	ip, [ip, #3072]	; 0xc00
    75ac:	orr	r1, r1, ip
    75b0:	and	r2, r2, #127	; 0x7f
    75b4:	add	r2, r3, r2, lsl #2
    75b8:	ldr	r2, [r2, #3584]	; 0xe00
    75bc:	orr	r1, r1, r2
    75c0:	ldr	r2, [sp, #24]
    75c4:	ldr	r3, [pc, #280]	; 76e4 <rb_des_setkey+0x3f0>
    75c8:	add	r3, pc, r3
    75cc:	str	r1, [r3, r2, lsl #2]
    75d0:	ldr	r2, [sp, #24]
    75d4:	rsb	r2, r2, #15
    75d8:	ldr	r3, [pc, #264]	; 76e8 <rb_des_setkey+0x3f4>
    75dc:	add	r3, pc, r3
    75e0:	str	r1, [r3, r2, lsl #2]
    75e4:	ldr	r1, [sp, #20]
    75e8:	ubfx	r2, r1, #21, #7
    75ec:	ldr	r3, [pc, #248]	; 76ec <rb_des_setkey+0x3f8>
    75f0:	add	r3, pc, r3
    75f4:	ldr	r2, [r3, r2, lsl #2]
    75f8:	ubfx	ip, r1, #14, #7
    75fc:	add	ip, r3, ip, lsl #2
    7600:	ldr	ip, [ip, #512]	; 0x200
    7604:	orr	r2, r2, ip
    7608:	ubfx	ip, r1, #7, #7
    760c:	add	ip, r3, ip, lsl #2
    7610:	ldr	ip, [ip, #1024]	; 0x400
    7614:	orr	r2, r2, ip
    7618:	and	r1, r1, #127	; 0x7f
    761c:	add	r1, r3, r1, lsl #2
    7620:	ldr	r1, [r1, #1536]	; 0x600
    7624:	orr	r1, r2, r1
    7628:	ldr	r2, [sp, #16]
    762c:	ubfx	ip, r2, #21, #7
    7630:	add	ip, r3, ip, lsl #2
    7634:	ldr	ip, [ip, #2048]	; 0x800
    7638:	orr	r1, r1, ip
    763c:	ubfx	ip, r2, #14, #7
    7640:	add	ip, r3, ip, lsl #2
    7644:	ldr	ip, [ip, #2560]	; 0xa00
    7648:	orr	r1, r1, ip
    764c:	ubfx	ip, r2, #7, #7
    7650:	add	ip, r3, ip, lsl #2
    7654:	ldr	ip, [ip, #3072]	; 0xc00
    7658:	orr	r1, r1, ip
    765c:	and	r2, r2, #127	; 0x7f
    7660:	add	r2, r3, r2, lsl #2
    7664:	ldr	r2, [r2, #3584]	; 0xe00
    7668:	orr	r1, r1, r2
    766c:	ldr	r2, [sp, #24]
    7670:	ldr	r3, [pc, #120]	; 76f0 <rb_des_setkey+0x3fc>
    7674:	add	r3, pc, r3
    7678:	str	r1, [r3, r2, lsl #2]
    767c:	ldr	r2, [sp, #24]
    7680:	rsb	r2, r2, #15
    7684:	ldr	r3, [pc, #104]	; 76f4 <rb_des_setkey+0x400>
    7688:	add	r3, pc, r3
    768c:	add	r2, r3, r2, lsl #2
    7690:	str	r1, [r2]
    7694:	str	r0, [sp, #4]
    7698:	ldr	r0, [sp, #24]
    769c:	add	r0, r0, #1
    76a0:	str	r0, [sp, #24]
    76a4:	b	74d8 <rb_des_setkey+0x1e4>
    76a8:	movw	r0, #0
    76ac:	str	r0, [fp, #-4]
    76b0:	ldr	r0, [fp, #-4]
    76b4:	mov	sp, fp
    76b8:	pop	{fp, pc}
    76bc:	.word	0x0002f674
    76c0:	.word	0x0002f658
    76c4:	.word	0x0003c944
    76c8:	.word	0x000408b8
    76cc:	.word	0x0002f628
    76d0:	.word	0x0002f614
    76d4:	.word	0x0003b910
    76d8:	.word	0x0003c884
    76dc:	.word	0x0001b118
    76e0:	.word	0x0003d77c
    76e4:	.word	0x00040718
    76e8:	.word	0x00040744
    76ec:	.word	0x0003e6d0
    76f0:	.word	0x000406ec
    76f4:	.word	0x00040718

000076f8 <rb_ascii_to_bin>:
    76f8:	sub	sp, sp, #8
    76fc:	strb	r0, [sp, #3]
    7700:	ldrb	r0, [sp, #3]
    7704:	cmp	r0, #122	; 0x7a
    7708:	ble	7718 <rb_ascii_to_bin+0x20>
    770c:	movw	r0, #0
    7710:	str	r0, [sp, #4]
    7714:	b	77ac <rb_ascii_to_bin+0xb4>
    7718:	ldrb	r0, [sp, #3]
    771c:	cmp	r0, #97	; 0x61
    7720:	blt	7738 <rb_ascii_to_bin+0x40>
    7724:	ldrb	r0, [sp, #3]
    7728:	sub	r0, r0, #97	; 0x61
    772c:	add	r0, r0, #38	; 0x26
    7730:	str	r0, [sp, #4]
    7734:	b	77ac <rb_ascii_to_bin+0xb4>
    7738:	ldrb	r0, [sp, #3]
    773c:	cmp	r0, #90	; 0x5a
    7740:	ble	7750 <rb_ascii_to_bin+0x58>
    7744:	movw	r0, #0
    7748:	str	r0, [sp, #4]
    774c:	b	77ac <rb_ascii_to_bin+0xb4>
    7750:	ldrb	r0, [sp, #3]
    7754:	cmp	r0, #65	; 0x41
    7758:	blt	7770 <rb_ascii_to_bin+0x78>
    775c:	ldrb	r0, [sp, #3]
    7760:	sub	r0, r0, #65	; 0x41
    7764:	add	r0, r0, #12
    7768:	str	r0, [sp, #4]
    776c:	b	77ac <rb_ascii_to_bin+0xb4>
    7770:	ldrb	r0, [sp, #3]
    7774:	cmp	r0, #57	; 0x39
    7778:	ble	7788 <rb_ascii_to_bin+0x90>
    777c:	movw	r0, #0
    7780:	str	r0, [sp, #4]
    7784:	b	77ac <rb_ascii_to_bin+0xb4>
    7788:	ldrb	r0, [sp, #3]
    778c:	cmp	r0, #46	; 0x2e
    7790:	blt	77a4 <rb_ascii_to_bin+0xac>
    7794:	ldrb	r0, [sp, #3]
    7798:	sub	r0, r0, #46	; 0x2e
    779c:	str	r0, [sp, #4]
    77a0:	b	77ac <rb_ascii_to_bin+0xb4>
    77a4:	movw	r0, #0
    77a8:	str	r0, [sp, #4]
    77ac:	ldr	r0, [sp, #4]
    77b0:	add	sp, sp, #8
    77b4:	bx	lr

000077b8 <rb_setup_salt>:
    77b8:	sub	sp, sp, #16
    77bc:	ldr	r1, [pc, #180]	; 7878 <rb_setup_salt+0xc0>
    77c0:	add	r1, pc, r1
    77c4:	str	r0, [sp, #12]
    77c8:	ldr	r0, [sp, #12]
    77cc:	ldr	r1, [r1]
    77d0:	cmp	r0, r1
    77d4:	bne	77dc <rb_setup_salt+0x24>
    77d8:	b	7870 <rb_setup_salt+0xb8>
    77dc:	ldr	r0, [pc, #152]	; 787c <rb_setup_salt+0xc4>
    77e0:	ldr	r1, [pc, #152]	; 7880 <rb_setup_salt+0xc8>
    77e4:	add	r1, pc, r1
    77e8:	ldr	r2, [pc, #148]	; 7884 <rb_setup_salt+0xcc>
    77ec:	add	r2, pc, r2
    77f0:	ldr	r3, [sp, #12]
    77f4:	str	r3, [r2]
    77f8:	movw	r2, #0
    77fc:	str	r2, [r1]
    7800:	movw	r1, #1
    7804:	str	r1, [sp, #4]
    7808:	str	r0, [sp, #8]
    780c:	str	r2, [sp]
    7810:	ldr	r0, [sp]
    7814:	cmp	r0, #24
    7818:	bge	7870 <rb_setup_salt+0xb8>
    781c:	ldr	r0, [sp, #12]
    7820:	ldr	r1, [sp, #4]
    7824:	and	r0, r0, r1
    7828:	cmp	r0, #0
    782c:	beq	7848 <rb_setup_salt+0x90>
    7830:	ldr	r0, [pc, #80]	; 7888 <rb_setup_salt+0xd0>
    7834:	add	r0, pc, r0
    7838:	ldr	r1, [sp, #8]
    783c:	ldr	r2, [r0]
    7840:	orr	r1, r2, r1
    7844:	str	r1, [r0]
    7848:	ldr	r0, [sp, #4]
    784c:	lsl	r0, r0, #1
    7850:	str	r0, [sp, #4]
    7854:	ldr	r0, [sp, #8]
    7858:	lsr	r0, r0, #1
    785c:	str	r0, [sp, #8]
    7860:	ldr	r0, [sp]
    7864:	add	r0, r0, #1
    7868:	str	r0, [sp]
    786c:	b	7810 <rb_setup_salt+0x58>
    7870:	add	sp, sp, #16
    7874:	bx	lr
    7878:	.word	0x0002f1fc
    787c:	.word	0x00800000
    7880:	.word	0x0002f1d4
    7884:	.word	0x0002f1d0
    7888:	.word	0x0002f184

0000788c <rb_do_des>:
    788c:	push	{r4, r5, fp, lr}
    7890:	add	fp, sp, #8
    7894:	sub	sp, sp, #88	; 0x58
    7898:	ldr	ip, [fp, #8]
    789c:	str	r0, [fp, #-16]
    78a0:	str	r1, [fp, #-20]	; 0xffffffec
    78a4:	str	r2, [fp, #-24]	; 0xffffffe8
    78a8:	str	r3, [fp, #-28]	; 0xffffffe4
    78ac:	movw	r0, #0
    78b0:	str	r0, [sp, #40]	; 0x28
    78b4:	ldr	r0, [fp, #8]
    78b8:	cmp	r0, #0
    78bc:	str	ip, [sp, #24]
    78c0:	bne	78d0 <rb_do_des+0x44>
    78c4:	movw	r0, #1
    78c8:	str	r0, [fp, #-12]
    78cc:	b	7d8c <rb_do_des+0x500>
    78d0:	ldr	r0, [fp, #8]
    78d4:	cmp	r0, #0
    78d8:	ble	78f8 <rb_do_des+0x6c>
    78dc:	ldr	r0, [pc, #1212]	; 7da0 <rb_do_des+0x514>
    78e0:	add	r0, pc, r0
    78e4:	ldr	r1, [pc, #1208]	; 7da4 <rb_do_des+0x518>
    78e8:	add	r1, pc, r1
    78ec:	str	r1, [sp, #48]	; 0x30
    78f0:	str	r0, [sp, #44]	; 0x2c
    78f4:	b	7920 <rb_do_des+0x94>
    78f8:	ldr	r0, [pc, #1176]	; 7d98 <rb_do_des+0x50c>
    78fc:	add	r0, pc, r0
    7900:	ldr	r1, [pc, #1172]	; 7d9c <rb_do_des+0x510>
    7904:	add	r1, pc, r1
    7908:	ldr	r2, [fp, #8]
    790c:	movw	r3, #0
    7910:	sub	r2, r3, r2
    7914:	str	r2, [fp, #8]
    7918:	str	r1, [sp, #48]	; 0x30
    791c:	str	r0, [sp, #44]	; 0x2c
    7920:	b	7924 <rb_do_des+0x98>
    7924:	ldr	r0, [pc, #1148]	; 7da8 <rb_do_des+0x51c>
    7928:	add	r0, pc, r0
    792c:	add	r0, r0, #7168	; 0x1c00
    7930:	ldr	r1, [fp, #-16]
    7934:	lsr	r2, r1, #24
    7938:	ldr	r3, [pc, #1140]	; 7db4 <rb_do_des+0x528>
    793c:	add	r3, pc, r3
    7940:	ldr	r2, [r3, r2, lsl #2]
    7944:	ubfx	ip, r1, #16, #8
    7948:	add	ip, r3, ip, lsl #2
    794c:	ldr	ip, [ip, #1024]	; 0x400
    7950:	orr	r2, r2, ip
    7954:	ubfx	ip, r1, #8, #8
    7958:	add	ip, r3, ip, lsl #2
    795c:	ldr	ip, [ip, #2048]	; 0x800
    7960:	orr	r2, r2, ip
    7964:	uxtb	r1, r1
    7968:	add	r1, r3, r1, lsl #2
    796c:	ldr	r1, [r1, #3072]	; 0xc00
    7970:	orr	r1, r2, r1
    7974:	ldr	r2, [fp, #-20]	; 0xffffffec
    7978:	lsr	ip, r2, #24
    797c:	add	ip, r3, ip, lsl #2
    7980:	mov	lr, #4096	; 0x1000
    7984:	ldr	ip, [ip, lr]
    7988:	orr	r1, r1, ip
    798c:	ubfx	ip, r2, #16, #8
    7990:	add	ip, r3, ip, lsl #2
    7994:	mov	r4, #5120	; 0x1400
    7998:	ldr	ip, [ip, r4]
    799c:	orr	r1, r1, ip
    79a0:	ubfx	ip, r2, #8, #8
    79a4:	add	ip, r3, ip, lsl #2
    79a8:	mov	r5, #6144	; 0x1800
    79ac:	ldr	ip, [ip, r5]
    79b0:	orr	r1, r1, ip
    79b4:	uxtb	r2, r2
    79b8:	add	r2, r3, r2, lsl #2
    79bc:	mov	r3, #7168	; 0x1c00
    79c0:	ldr	r2, [r2, r3]
    79c4:	orr	r1, r1, r2
    79c8:	str	r1, [fp, #-32]	; 0xffffffe0
    79cc:	ldr	r1, [fp, #-16]
    79d0:	lsr	r2, r1, #24
    79d4:	ldr	r3, [pc, #988]	; 7db8 <rb_do_des+0x52c>
    79d8:	add	r3, pc, r3
    79dc:	ldr	r2, [r3, r2, lsl #2]
    79e0:	ubfx	ip, r1, #16, #8
    79e4:	add	ip, r3, ip, lsl #2
    79e8:	ldr	ip, [ip, #1024]	; 0x400
    79ec:	orr	r2, r2, ip
    79f0:	ubfx	ip, r1, #8, #8
    79f4:	add	ip, r3, ip, lsl #2
    79f8:	ldr	ip, [ip, #2048]	; 0x800
    79fc:	orr	r2, r2, ip
    7a00:	uxtb	r1, r1
    7a04:	add	r1, r3, r1, lsl #2
    7a08:	ldr	r1, [r1, #3072]	; 0xc00
    7a0c:	orr	r1, r2, r1
    7a10:	ldr	r2, [fp, #-20]	; 0xffffffec
    7a14:	lsr	ip, r2, #24
    7a18:	add	ip, r3, ip, lsl #2
    7a1c:	ldr	ip, [ip, lr]
    7a20:	orr	r1, r1, ip
    7a24:	ubfx	ip, r2, #16, #8
    7a28:	add	ip, r3, ip, lsl #2
    7a2c:	ldr	ip, [ip, r4]
    7a30:	orr	r1, r1, ip
    7a34:	ubfx	ip, r2, #8, #8
    7a38:	add	ip, r3, ip, lsl #2
    7a3c:	ldr	ip, [ip, r5]
    7a40:	orr	r1, r1, ip
    7a44:	uxtb	r2, r2
    7a48:	mov	ip, r2
    7a4c:	add	r2, r3, r2, lsl #2
    7a50:	add	r2, r2, #7168	; 0x1c00
    7a54:	ldr	r2, [r2]
    7a58:	orr	r1, r1, r2
    7a5c:	str	r1, [fp, #-36]	; 0xffffffdc
    7a60:	str	r0, [sp, #20]
    7a64:	str	ip, [sp, #16]
    7a68:	ldr	r0, [fp, #8]
    7a6c:	mvn	r1, #0
    7a70:	add	r1, r0, r1
    7a74:	str	r1, [fp, #8]
    7a78:	cmp	r0, #0
    7a7c:	beq	7c38 <rb_do_des+0x3ac>
    7a80:	ldr	r0, [sp, #48]	; 0x30
    7a84:	str	r0, [fp, #-40]	; 0xffffffd8
    7a88:	ldr	r0, [sp, #44]	; 0x2c
    7a8c:	str	r0, [fp, #-44]	; 0xffffffd4
    7a90:	movw	r0, #16
    7a94:	str	r0, [sp, #28]
    7a98:	ldr	r0, [sp, #28]
    7a9c:	mvn	r1, #0
    7aa0:	add	r1, r0, r1
    7aa4:	str	r1, [sp, #28]
    7aa8:	cmp	r0, #0
    7aac:	beq	7c24 <rb_do_des+0x398>
    7ab0:	ldr	r0, [pc, #760]	; 7db0 <rb_do_des+0x524>
    7ab4:	add	r0, pc, r0
    7ab8:	add	r0, r0, #3072	; 0xc00
    7abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7ac0:	and	r2, r1, #1
    7ac4:	lsl	r2, r2, #23
    7ac8:	and	r3, r1, #-134217728	; 0xf8000000
    7acc:	orr	r2, r2, r3, lsr #9
    7ad0:	and	r3, r1, #528482304	; 0x1f800000
    7ad4:	orr	r2, r2, r3, lsr #11
    7ad8:	and	r3, r1, #33030144	; 0x1f80000
    7adc:	orr	r2, r2, r3, lsr #13
    7ae0:	and	r1, r1, #2064384	; 0x1f8000
    7ae4:	orr	r1, r2, r1, lsr #15
    7ae8:	str	r1, [sp, #36]	; 0x24
    7aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7af0:	and	r2, r1, #129024	; 0x1f800
    7af4:	lsl	r2, r2, #7
    7af8:	and	r3, r1, #8064	; 0x1f80
    7afc:	orr	r2, r2, r3, lsl #5
    7b00:	and	r3, r1, #504	; 0x1f8
    7b04:	orr	r2, r2, r3, lsl #3
    7b08:	and	r3, r1, #31
    7b0c:	orr	r2, r2, r3, lsl #1
    7b10:	orr	r1, r2, r1, lsr #31
    7b14:	str	r1, [sp, #32]
    7b18:	ldr	r1, [sp, #36]	; 0x24
    7b1c:	ldr	r2, [sp, #32]
    7b20:	eor	r1, r1, r2
    7b24:	ldr	r2, [pc, #656]	; 7dbc <rb_do_des+0x530>
    7b28:	ldr	r2, [pc, r2]
    7b2c:	and	r1, r1, r2
    7b30:	str	r1, [sp, #40]	; 0x28
    7b34:	ldr	r1, [sp, #40]	; 0x28
    7b38:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7b3c:	add	r3, r2, #4
    7b40:	str	r3, [fp, #-40]	; 0xffffffd8
    7b44:	ldr	r2, [r2]
    7b48:	eor	r1, r1, r2
    7b4c:	ldr	r2, [sp, #36]	; 0x24
    7b50:	eor	r1, r2, r1
    7b54:	str	r1, [sp, #36]	; 0x24
    7b58:	ldr	r1, [sp, #40]	; 0x28
    7b5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    7b60:	add	r3, r2, #4
    7b64:	str	r3, [fp, #-44]	; 0xffffffd4
    7b68:	ldr	r2, [r2]
    7b6c:	eor	r1, r1, r2
    7b70:	ldr	r2, [sp, #32]
    7b74:	eor	r1, r2, r1
    7b78:	str	r1, [sp, #32]
    7b7c:	ldr	r1, [sp, #36]	; 0x24
    7b80:	ldr	r2, [pc, #568]	; 7dc0 <rb_do_des+0x534>
    7b84:	add	r2, pc, r2
    7b88:	ldrb	r3, [r2, r1, lsr #12]
    7b8c:	ldr	ip, [pc, #560]	; 7dc4 <rb_do_des+0x538>
    7b90:	add	ip, pc, ip
    7b94:	ldr	r3, [ip, r3, lsl #2]
    7b98:	bfc	r1, #12, #20
    7b9c:	add	r1, r2, r1
    7ba0:	mov	lr, #4096	; 0x1000
    7ba4:	ldrb	r1, [r1, lr]
    7ba8:	add	r1, ip, r1, lsl #2
    7bac:	ldr	r1, [r1, #1024]	; 0x400
    7bb0:	orr	r1, r3, r1
    7bb4:	ldr	r3, [sp, #32]
    7bb8:	add	lr, r2, r3, lsr #12
    7bbc:	mov	r4, #8192	; 0x2000
    7bc0:	ldrb	lr, [lr, r4]
    7bc4:	add	lr, ip, lr, lsl #2
    7bc8:	ldr	lr, [lr, #2048]	; 0x800
    7bcc:	orr	r1, r1, lr
    7bd0:	bfc	r3, #12, #20
    7bd4:	add	r2, r2, r3
    7bd8:	mov	r3, #12288	; 0x3000
    7bdc:	ldrb	r2, [r2, r3]
    7be0:	mov	r3, r2
    7be4:	add	r2, ip, r2, lsl #2
    7be8:	add	r2, r2, #3072	; 0xc00
    7bec:	ldr	r2, [r2]
    7bf0:	orr	r1, r1, r2
    7bf4:	str	r1, [sp, #40]	; 0x28
    7bf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7bfc:	ldr	r2, [sp, #40]	; 0x28
    7c00:	eor	r1, r2, r1
    7c04:	str	r1, [sp, #40]	; 0x28
    7c08:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7c0c:	str	r1, [fp, #-32]	; 0xffffffe0
    7c10:	ldr	r1, [sp, #40]	; 0x28
    7c14:	str	r1, [fp, #-36]	; 0xffffffdc
    7c18:	str	r0, [sp, #12]
    7c1c:	str	r3, [sp, #8]
    7c20:	b	7a98 <rb_do_des+0x20c>
    7c24:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7c28:	str	r0, [fp, #-36]	; 0xffffffdc
    7c2c:	ldr	r0, [sp, #40]	; 0x28
    7c30:	str	r0, [fp, #-32]	; 0xffffffe0
    7c34:	b	7a68 <rb_do_des+0x1dc>
    7c38:	ldr	r0, [pc, #364]	; 7dac <rb_do_des+0x520>
    7c3c:	add	r0, pc, r0
    7c40:	add	r0, r0, #7168	; 0x1c00
    7c44:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7c48:	lsr	r2, r1, #24
    7c4c:	ldr	r3, [pc, #372]	; 7dc8 <rb_do_des+0x53c>
    7c50:	add	r3, pc, r3
    7c54:	ldr	r2, [r3, r2, lsl #2]
    7c58:	ubfx	ip, r1, #16, #8
    7c5c:	add	ip, r3, ip, lsl #2
    7c60:	ldr	ip, [ip, #1024]	; 0x400
    7c64:	orr	r2, r2, ip
    7c68:	ubfx	ip, r1, #8, #8
    7c6c:	add	ip, r3, ip, lsl #2
    7c70:	ldr	ip, [ip, #2048]	; 0x800
    7c74:	orr	r2, r2, ip
    7c78:	uxtb	r1, r1
    7c7c:	add	r1, r3, r1, lsl #2
    7c80:	ldr	r1, [r1, #3072]	; 0xc00
    7c84:	orr	r1, r2, r1
    7c88:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7c8c:	lsr	ip, r2, #24
    7c90:	add	ip, r3, ip, lsl #2
    7c94:	mov	lr, #4096	; 0x1000
    7c98:	ldr	ip, [ip, lr]
    7c9c:	orr	r1, r1, ip
    7ca0:	ubfx	ip, r2, #16, #8
    7ca4:	add	ip, r3, ip, lsl #2
    7ca8:	mov	r4, #5120	; 0x1400
    7cac:	ldr	ip, [ip, r4]
    7cb0:	orr	r1, r1, ip
    7cb4:	ubfx	ip, r2, #8, #8
    7cb8:	add	ip, r3, ip, lsl #2
    7cbc:	mov	r5, #6144	; 0x1800
    7cc0:	ldr	ip, [ip, r5]
    7cc4:	orr	r1, r1, ip
    7cc8:	uxtb	r2, r2
    7ccc:	add	r2, r3, r2, lsl #2
    7cd0:	mov	r3, #7168	; 0x1c00
    7cd4:	ldr	r2, [r2, r3]
    7cd8:	orr	r1, r1, r2
    7cdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7ce0:	str	r1, [r2]
    7ce4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7ce8:	lsr	r2, r1, #24
    7cec:	ldr	r3, [pc, #216]	; 7dcc <rb_do_des+0x540>
    7cf0:	add	r3, pc, r3
    7cf4:	ldr	r2, [r3, r2, lsl #2]
    7cf8:	ubfx	ip, r1, #16, #8
    7cfc:	add	ip, r3, ip, lsl #2
    7d00:	ldr	ip, [ip, #1024]	; 0x400
    7d04:	orr	r2, r2, ip
    7d08:	ubfx	ip, r1, #8, #8
    7d0c:	add	ip, r3, ip, lsl #2
    7d10:	ldr	ip, [ip, #2048]	; 0x800
    7d14:	orr	r2, r2, ip
    7d18:	uxtb	r1, r1
    7d1c:	add	r1, r3, r1, lsl #2
    7d20:	ldr	r1, [r1, #3072]	; 0xc00
    7d24:	orr	r1, r2, r1
    7d28:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7d2c:	lsr	ip, r2, #24
    7d30:	add	ip, r3, ip, lsl #2
    7d34:	ldr	ip, [ip, lr]
    7d38:	orr	r1, r1, ip
    7d3c:	ubfx	ip, r2, #16, #8
    7d40:	add	ip, r3, ip, lsl #2
    7d44:	ldr	ip, [ip, r4]
    7d48:	orr	r1, r1, ip
    7d4c:	ubfx	ip, r2, #8, #8
    7d50:	add	ip, r3, ip, lsl #2
    7d54:	ldr	ip, [ip, r5]
    7d58:	orr	r1, r1, ip
    7d5c:	uxtb	r2, r2
    7d60:	mov	ip, r2
    7d64:	add	r2, r3, r2, lsl #2
    7d68:	add	r2, r2, #7168	; 0x1c00
    7d6c:	ldr	r2, [r2]
    7d70:	orr	r1, r1, r2
    7d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7d78:	str	r1, [r2]
    7d7c:	movw	r1, #0
    7d80:	str	r1, [fp, #-12]
    7d84:	str	r0, [sp, #4]
    7d88:	str	ip, [sp]
    7d8c:	ldr	r0, [fp, #-12]
    7d90:	sub	sp, fp, #8
    7d94:	pop	{r4, r5, fp, pc}
    7d98:	.word	0x000404a4
    7d9c:	.word	0x0004041c
    7da0:	.word	0x00040480
    7da4:	.word	0x000403f8
    7da8:	.word	0x00035398
    7dac:	.word	0x00039084
    7db0:	.word	0x0003f22c
    7db4:	.word	0x00033384
    7db8:	.word	0x000352e8
    7dbc:	.word	0x0002ee90
    7dc0:	.word	0x0002f044
    7dc4:	.word	0x0003f150
    7dc8:	.word	0x00037070
    7dcc:	.word	0x00038fd0

00007dd0 <MD5Init>:
    7dd0:	push	{fp, lr}
    7dd4:	mov	fp, sp
    7dd8:	sub	sp, sp, #4
    7ddc:	ldr	r1, [pc, #72]	; 7e2c <MD5Init+0x5c>
    7de0:	ldr	r2, [pc, #72]	; 7e30 <MD5Init+0x60>
    7de4:	ldr	r3, [pc, #72]	; 7e34 <MD5Init+0x64>
    7de8:	ldr	ip, [pc, #72]	; 7e38 <MD5Init+0x68>
    7dec:	str	r0, [sp]
    7df0:	ldr	r0, [sp]
    7df4:	movw	lr, #0
    7df8:	str	lr, [r0, #20]
    7dfc:	ldr	r0, [sp]
    7e00:	str	lr, [r0, #16]
    7e04:	ldr	r0, [sp]
    7e08:	str	ip, [r0]
    7e0c:	ldr	r0, [sp]
    7e10:	str	r3, [r0, #4]
    7e14:	ldr	r0, [sp]
    7e18:	str	r2, [r0, #8]
    7e1c:	ldr	r0, [sp]
    7e20:	str	r1, [r0, #12]
    7e24:	mov	sp, fp
    7e28:	pop	{fp, pc}
    7e2c:	.word	0x10325476
    7e30:	.word	0x98badcfe
    7e34:	.word	0xefcdab89
    7e38:	.word	0x67452301

00007e3c <MD5Update>:
    7e3c:	push	{fp, lr}
    7e40:	mov	fp, sp
    7e44:	sub	sp, sp, #32
    7e48:	str	r0, [fp, #-4]
    7e4c:	str	r1, [fp, #-8]
    7e50:	str	r2, [fp, #-12]
    7e54:	ldr	r0, [fp, #-8]
    7e58:	str	r0, [sp, #4]
    7e5c:	ldr	r0, [fp, #-4]
    7e60:	ldr	r0, [r0, #16]
    7e64:	lsr	r0, r0, #3
    7e68:	and	r0, r0, #63	; 0x3f
    7e6c:	str	r0, [sp, #12]
    7e70:	ldr	r0, [fp, #-12]
    7e74:	lsl	r0, r0, #3
    7e78:	ldr	r1, [fp, #-4]
    7e7c:	ldr	r2, [r1, #16]
    7e80:	add	r0, r2, r0
    7e84:	str	r0, [r1, #16]
    7e88:	ldr	r1, [fp, #-12]
    7e8c:	lsl	r1, r1, #3
    7e90:	cmp	r0, r1
    7e94:	bcs	7ea8 <MD5Update+0x6c>
    7e98:	ldr	r0, [fp, #-4]
    7e9c:	ldr	r1, [r0, #20]
    7ea0:	add	r1, r1, #1
    7ea4:	str	r1, [r0, #20]
    7ea8:	ldr	r0, [fp, #-12]
    7eac:	lsr	r0, r0, #29
    7eb0:	ldr	r1, [fp, #-4]
    7eb4:	ldr	r2, [r1, #20]
    7eb8:	add	r0, r2, r0
    7ebc:	str	r0, [r1, #20]
    7ec0:	ldr	r0, [sp, #12]
    7ec4:	movw	r1, #64	; 0x40
    7ec8:	sub	r0, r1, r0
    7ecc:	str	r0, [sp, #8]
    7ed0:	ldr	r0, [fp, #-12]
    7ed4:	ldr	r1, [sp, #8]
    7ed8:	cmp	r0, r1
    7edc:	bcc	7f58 <MD5Update+0x11c>
    7ee0:	ldr	r0, [fp, #-4]
    7ee4:	add	r0, r0, #24
    7ee8:	ldr	r1, [sp, #12]
    7eec:	add	r0, r0, r1
    7ef0:	ldr	r1, [sp, #4]
    7ef4:	ldr	r2, [sp, #8]
    7ef8:	bl	51dc <memcpy@plt>
    7efc:	ldr	r0, [fp, #-4]
    7f00:	ldr	r1, [fp, #-4]
    7f04:	add	r1, r1, #24
    7f08:	bl	80c0 <MD5Transform>
    7f0c:	ldr	r0, [sp, #8]
    7f10:	str	r0, [sp, #16]
    7f14:	ldr	r0, [sp, #16]
    7f18:	add	r0, r0, #63	; 0x3f
    7f1c:	ldr	r1, [fp, #-12]
    7f20:	cmp	r0, r1
    7f24:	bcs	7f4c <MD5Update+0x110>
    7f28:	ldr	r0, [fp, #-4]
    7f2c:	ldr	r1, [sp, #4]
    7f30:	ldr	r2, [sp, #16]
    7f34:	add	r1, r1, r2
    7f38:	bl	80c0 <MD5Transform>
    7f3c:	ldr	r0, [sp, #16]
    7f40:	add	r0, r0, #64	; 0x40
    7f44:	str	r0, [sp, #16]
    7f48:	b	7f14 <MD5Update+0xd8>
    7f4c:	movw	r0, #0
    7f50:	str	r0, [sp, #12]
    7f54:	b	7f60 <MD5Update+0x124>
    7f58:	movw	r0, #0
    7f5c:	str	r0, [sp, #16]
    7f60:	ldr	r0, [fp, #-4]
    7f64:	add	r0, r0, #24
    7f68:	ldr	r1, [sp, #12]
    7f6c:	add	r0, r0, r1
    7f70:	ldr	r1, [sp, #4]
    7f74:	ldr	r2, [sp, #16]
    7f78:	add	r1, r1, r2
    7f7c:	ldr	r2, [fp, #-12]
    7f80:	ldr	r3, [sp, #16]
    7f84:	sub	r2, r2, r3
    7f88:	bl	51dc <memcpy@plt>
    7f8c:	mov	sp, fp
    7f90:	pop	{fp, pc}

00007f94 <MD5Final>:
    7f94:	push	{fp, lr}
    7f98:	mov	fp, sp
    7f9c:	sub	sp, sp, #8
    7fa0:	str	r0, [sp, #4]
    7fa4:	str	r1, [sp]
    7fa8:	ldr	r0, [sp]
    7fac:	bl	9c68 <MD5Pad>
    7fb0:	ldr	r0, [sp, #4]
    7fb4:	ldr	r1, [sp]
    7fb8:	ldrb	lr, [r1]
    7fbc:	strb	lr, [r0]
    7fc0:	ldrb	lr, [r1, #1]
    7fc4:	strb	lr, [r0, #1]
    7fc8:	ldrb	lr, [r1, #2]
    7fcc:	strb	lr, [r0, #2]
    7fd0:	ldrb	lr, [r1, #3]
    7fd4:	strb	lr, [r0, #3]
    7fd8:	ldrb	lr, [r1, #4]
    7fdc:	strb	lr, [r0, #4]
    7fe0:	ldrb	lr, [r1, #5]
    7fe4:	strb	lr, [r0, #5]
    7fe8:	ldrb	lr, [r1, #6]
    7fec:	strb	lr, [r0, #6]
    7ff0:	ldrb	lr, [r1, #7]
    7ff4:	strb	lr, [r0, #7]
    7ff8:	ldrb	lr, [r1, #8]
    7ffc:	strb	lr, [r0, #8]
    8000:	ldrb	lr, [r1, #9]
    8004:	strb	lr, [r0, #9]
    8008:	ldrb	lr, [r1, #10]
    800c:	strb	lr, [r0, #10]
    8010:	ldrb	lr, [r1, #11]
    8014:	strb	lr, [r0, #11]
    8018:	ldrb	lr, [r1, #12]
    801c:	strb	lr, [r0, #12]
    8020:	ldrb	lr, [r1, #13]
    8024:	strb	lr, [r0, #13]
    8028:	ldrb	lr, [r1, #14]
    802c:	strb	lr, [r0, #14]
    8030:	ldrb	r1, [r1, #15]
    8034:	strb	r1, [r0, #15]
    8038:	ldr	r0, [sp]
    803c:	movw	r1, #0
    8040:	and	r1, r1, #255	; 0xff
    8044:	movw	r2, #88	; 0x58
    8048:	bl	4ff0 <memset@plt>
    804c:	mov	sp, fp
    8050:	pop	{fp, pc}

00008054 <_crypt_to64>:
    8054:	sub	sp, sp, #12
    8058:	str	r0, [sp, #8]
    805c:	str	r1, [sp, #4]
    8060:	str	r2, [sp]
    8064:	ldr	r0, [sp]
    8068:	mvn	r1, #0
    806c:	add	r0, r0, r1
    8070:	str	r0, [sp]
    8074:	cmp	r0, #0
    8078:	blt	80b4 <_crypt_to64+0x60>
    807c:	ldr	r0, [pc, #56]	; 80bc <_crypt_to64+0x68>
    8080:	add	r0, pc, r0
    8084:	ldr	r1, [sp, #4]
    8088:	and	r1, r1, #63	; 0x3f
    808c:	add	r0, r0, r1
    8090:	ldrb	r0, [r0]
    8094:	ldr	r1, [sp, #8]
    8098:	add	r2, r1, #1
    809c:	str	r2, [sp, #8]
    80a0:	strb	r0, [r1]
    80a4:	ldr	r0, [sp, #4]
    80a8:	lsr	r0, r0, #6
    80ac:	str	r0, [sp, #4]
    80b0:	b	8064 <_crypt_to64+0x10>
    80b4:	add	sp, sp, #12
    80b8:	bx	lr
    80bc:	.word	0x0001a1f8

000080c0 <MD5Transform>:
    80c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    80c4:	add	fp, sp, #28
    80c8:	sub	sp, sp, #364	; 0x16c
    80cc:	sub	r2, fp, #120	; 0x78
    80d0:	ldr	r3, [pc, #4080]	; 90c8 <MD5Transform+0x1008>
    80d4:	ldr	ip, [pc, #4080]	; 90cc <MD5Transform+0x100c>
    80d8:	ldr	lr, [pc, #4080]	; 90d0 <MD5Transform+0x1010>
    80dc:	ldr	r4, [pc, #4080]	; 90d4 <MD5Transform+0x1014>
    80e0:	ldr	r5, [pc, #4080]	; 90d8 <MD5Transform+0x1018>
    80e4:	ldr	r6, [pc, #4080]	; 90dc <MD5Transform+0x101c>
    80e8:	ldr	r7, [pc, #4080]	; 90e0 <MD5Transform+0x1020>
    80ec:	ldr	r8, [pc, #4080]	; 90e4 <MD5Transform+0x1024>
    80f0:	ldr	r9, [pc, #4080]	; 90e8 <MD5Transform+0x1028>
    80f4:	ldr	sl, [pc, #4080]	; 90ec <MD5Transform+0x102c>
    80f8:	str	r0, [fp, #-124]	; 0xffffff84
    80fc:	ldr	r0, [pc, #4076]	; 90f0 <MD5Transform+0x1030>
    8100:	str	r0, [fp, #-128]	; 0xffffff80
    8104:	ldr	r0, [pc, #4072]	; 90f4 <MD5Transform+0x1034>
    8108:	str	r0, [fp, #-132]	; 0xffffff7c
    810c:	ldr	r0, [pc, #4068]	; 90f8 <MD5Transform+0x1038>
    8110:	str	r0, [fp, #-136]	; 0xffffff78
    8114:	ldr	r0, [pc, #4064]	; 90fc <MD5Transform+0x103c>
    8118:	str	r0, [fp, #-140]	; 0xffffff74
    811c:	ldr	r0, [pc, #4060]	; 9100 <MD5Transform+0x1040>
    8120:	str	r0, [fp, #-144]	; 0xffffff70
    8124:	ldr	r0, [pc, #4056]	; 9104 <MD5Transform+0x1044>
    8128:	str	r0, [fp, #-148]	; 0xffffff6c
    812c:	ldr	r0, [pc, #4052]	; 9108 <MD5Transform+0x1048>
    8130:	str	r0, [fp, #-152]	; 0xffffff68
    8134:	ldr	r0, [pc, #4048]	; 910c <MD5Transform+0x104c>
    8138:	str	r0, [fp, #-156]	; 0xffffff64
    813c:	ldr	r0, [pc, #4044]	; 9110 <MD5Transform+0x1050>
    8140:	str	r0, [fp, #-160]	; 0xffffff60
    8144:	ldr	r0, [pc, #4040]	; 9114 <MD5Transform+0x1054>
    8148:	str	r0, [fp, #-164]	; 0xffffff5c
    814c:	ldr	r0, [pc, #4036]	; 9118 <MD5Transform+0x1058>
    8150:	str	r0, [fp, #-168]	; 0xffffff58
    8154:	ldr	r0, [pc, #4032]	; 911c <MD5Transform+0x105c>
    8158:	str	r0, [fp, #-172]	; 0xffffff54
    815c:	ldr	r0, [pc, #4028]	; 9120 <MD5Transform+0x1060>
    8160:	str	r0, [fp, #-176]	; 0xffffff50
    8164:	ldr	r0, [pc, #4024]	; 9124 <MD5Transform+0x1064>
    8168:	str	r0, [fp, #-180]	; 0xffffff4c
    816c:	ldr	r0, [pc, #4020]	; 9128 <MD5Transform+0x1068>
    8170:	str	r0, [fp, #-184]	; 0xffffff48
    8174:	ldr	r0, [pc, #4016]	; 912c <MD5Transform+0x106c>
    8178:	str	r0, [fp, #-188]	; 0xffffff44
    817c:	ldr	r0, [pc, #4012]	; 9130 <MD5Transform+0x1070>
    8180:	str	r0, [fp, #-192]	; 0xffffff40
    8184:	ldr	r0, [pc, #4008]	; 9134 <MD5Transform+0x1074>
    8188:	str	r0, [sp, #196]	; 0xc4
    818c:	ldr	r0, [pc, #4004]	; 9138 <MD5Transform+0x1078>
    8190:	str	r0, [sp, #192]	; 0xc0
    8194:	ldr	r0, [pc, #4000]	; 913c <MD5Transform+0x107c>
    8198:	str	r0, [sp, #188]	; 0xbc
    819c:	ldr	r0, [pc, #3996]	; 9140 <MD5Transform+0x1080>
    81a0:	str	r0, [sp, #184]	; 0xb8
    81a4:	ldr	r0, [pc, #3992]	; 9144 <MD5Transform+0x1084>
    81a8:	str	r0, [sp, #180]	; 0xb4
    81ac:	ldr	r0, [pc, #3988]	; 9148 <MD5Transform+0x1088>
    81b0:	str	r0, [sp, #176]	; 0xb0
    81b4:	ldr	r0, [pc, #3984]	; 914c <MD5Transform+0x108c>
    81b8:	str	r0, [sp, #172]	; 0xac
    81bc:	ldr	r0, [pc, #3980]	; 9150 <MD5Transform+0x1090>
    81c0:	str	r0, [sp, #168]	; 0xa8
    81c4:	ldr	r0, [pc, #3976]	; 9154 <MD5Transform+0x1094>
    81c8:	str	r0, [sp, #164]	; 0xa4
    81cc:	ldr	r0, [pc, #3972]	; 9158 <MD5Transform+0x1098>
    81d0:	str	r0, [sp, #160]	; 0xa0
    81d4:	ldr	r0, [pc, #3968]	; 915c <MD5Transform+0x109c>
    81d8:	str	r0, [sp, #156]	; 0x9c
    81dc:	ldr	r0, [pc, #3964]	; 9160 <MD5Transform+0x10a0>
    81e0:	str	r0, [sp, #152]	; 0x98
    81e4:	ldr	r0, [pc, #3960]	; 9164 <MD5Transform+0x10a4>
    81e8:	str	r0, [sp, #148]	; 0x94
    81ec:	ldr	r0, [pc, #3956]	; 9168 <MD5Transform+0x10a8>
    81f0:	str	r0, [sp, #144]	; 0x90
    81f4:	ldr	r0, [pc, #3952]	; 916c <MD5Transform+0x10ac>
    81f8:	str	r0, [sp, #140]	; 0x8c
    81fc:	ldr	r0, [pc, #3948]	; 9170 <MD5Transform+0x10b0>
    8200:	str	r0, [sp, #136]	; 0x88
    8204:	ldr	r0, [pc, #3944]	; 9174 <MD5Transform+0x10b4>
    8208:	str	r0, [sp, #132]	; 0x84
    820c:	ldr	r0, [pc, #3940]	; 9178 <MD5Transform+0x10b8>
    8210:	str	r0, [sp, #128]	; 0x80
    8214:	ldr	r0, [pc, #3936]	; 917c <MD5Transform+0x10bc>
    8218:	str	r0, [sp, #124]	; 0x7c
    821c:	ldr	r0, [pc, #3932]	; 9180 <MD5Transform+0x10c0>
    8220:	str	r0, [sp, #120]	; 0x78
    8224:	ldr	r0, [pc, #3928]	; 9184 <MD5Transform+0x10c4>
    8228:	str	r0, [sp, #116]	; 0x74
    822c:	ldr	r0, [pc, #3924]	; 9188 <MD5Transform+0x10c8>
    8230:	str	r0, [sp, #112]	; 0x70
    8234:	ldr	r0, [pc, #3920]	; 918c <MD5Transform+0x10cc>
    8238:	str	r0, [sp, #108]	; 0x6c
    823c:	ldr	r0, [pc, #3916]	; 9190 <MD5Transform+0x10d0>
    8240:	str	r0, [sp, #104]	; 0x68
    8244:	ldr	r0, [pc, #3912]	; 9194 <MD5Transform+0x10d4>
    8248:	str	r0, [sp, #100]	; 0x64
    824c:	ldr	r0, [pc, #3908]	; 9198 <MD5Transform+0x10d8>
    8250:	str	r0, [sp, #96]	; 0x60
    8254:	ldr	r0, [pc, #3904]	; 919c <MD5Transform+0x10dc>
    8258:	str	r0, [sp, #92]	; 0x5c
    825c:	ldr	r0, [pc, #3900]	; 91a0 <MD5Transform+0x10e0>
    8260:	str	r0, [sp, #88]	; 0x58
    8264:	ldr	r0, [pc, #3896]	; 91a4 <MD5Transform+0x10e4>
    8268:	str	r0, [sp, #84]	; 0x54
    826c:	ldr	r0, [pc, #3892]	; 91a8 <MD5Transform+0x10e8>
    8270:	str	r0, [sp, #80]	; 0x50
    8274:	ldr	r0, [pc, #3888]	; 91ac <MD5Transform+0x10ec>
    8278:	str	r0, [sp, #76]	; 0x4c
    827c:	ldr	r0, [pc, #3884]	; 91b0 <MD5Transform+0x10f0>
    8280:	str	r0, [sp, #72]	; 0x48
    8284:	ldr	r0, [pc, #3880]	; 91b4 <MD5Transform+0x10f4>
    8288:	str	r0, [sp, #68]	; 0x44
    828c:	ldr	r0, [pc, #3876]	; 91b8 <MD5Transform+0x10f8>
    8290:	str	r0, [sp, #64]	; 0x40
    8294:	ldr	r0, [pc, #3872]	; 91bc <MD5Transform+0x10fc>
    8298:	str	r0, [sp, #60]	; 0x3c
    829c:	ldr	r0, [pc, #3868]	; 91c0 <MD5Transform+0x1100>
    82a0:	str	r0, [sp, #56]	; 0x38
    82a4:	ldr	r0, [pc, #3864]	; 91c4 <MD5Transform+0x1104>
    82a8:	str	r0, [sp, #52]	; 0x34
    82ac:	ldr	r0, [fp, #-124]	; 0xffffff84
    82b0:	str	r0, [fp, #-36]	; 0xffffffdc
    82b4:	str	r1, [fp, #-40]	; 0xffffffd8
    82b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    82bc:	ldr	r1, [r1]
    82c0:	str	r1, [fp, #-44]	; 0xffffffd4
    82c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    82c8:	ldr	r1, [r1, #4]
    82cc:	str	r1, [fp, #-48]	; 0xffffffd0
    82d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    82d4:	ldr	r1, [r1, #8]
    82d8:	str	r1, [fp, #-52]	; 0xffffffcc
    82dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    82e0:	ldr	r1, [r1, #12]
    82e4:	str	r1, [fp, #-56]	; 0xffffffc8
    82e8:	mov	r1, r2
    82ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    82f0:	str	r0, [sp, #48]	; 0x30
    82f4:	mov	r0, r1
    82f8:	ldr	r1, [sp, #48]	; 0x30
    82fc:	str	r2, [sp, #44]	; 0x2c
    8300:	movw	r2, #64	; 0x40
    8304:	str	r2, [sp, #40]	; 0x28
    8308:	str	r9, [sp, #36]	; 0x24
    830c:	str	sl, [sp, #32]
    8310:	str	r8, [sp, #28]
    8314:	str	r3, [sp, #24]
    8318:	str	ip, [sp, #20]
    831c:	str	lr, [sp, #16]
    8320:	str	r4, [sp, #12]
    8324:	str	r5, [sp, #8]
    8328:	str	r6, [sp, #4]
    832c:	str	r7, [sp]
    8330:	bl	51dc <memcpy@plt>
    8334:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8338:	ldr	r1, [fp, #-52]	; 0xffffffcc
    833c:	and	r0, r0, r1
    8340:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8344:	mvn	r2, #0
    8348:	eor	r1, r1, r2
    834c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8350:	and	r1, r1, r3
    8354:	orr	r0, r0, r1
    8358:	ldr	r1, [fp, #-120]	; 0xffffff88
    835c:	add	r0, r0, r1
    8360:	ldr	r1, [sp, #52]	; 0x34
    8364:	add	r0, r0, r1
    8368:	ldr	r3, [fp, #-44]	; 0xffffffd4
    836c:	add	r0, r3, r0
    8370:	str	r0, [fp, #-44]	; 0xffffffd4
    8374:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8378:	lsl	r0, r0, #7
    837c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8380:	lsr	r3, r3, #25
    8384:	orr	r0, r0, r3
    8388:	str	r0, [fp, #-44]	; 0xffffffd4
    838c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8390:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8394:	add	r0, r3, r0
    8398:	str	r0, [fp, #-44]	; 0xffffffd4
    839c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    83a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    83a4:	and	r0, r0, r3
    83a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    83ac:	eor	r3, r3, r2
    83b0:	ldr	ip, [fp, #-52]	; 0xffffffcc
    83b4:	and	r3, r3, ip
    83b8:	orr	r0, r0, r3
    83bc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    83c0:	add	r0, r0, r3
    83c4:	ldr	r3, [sp, #56]	; 0x38
    83c8:	add	r0, r0, r3
    83cc:	ldr	ip, [fp, #-56]	; 0xffffffc8
    83d0:	add	r0, ip, r0
    83d4:	str	r0, [fp, #-56]	; 0xffffffc8
    83d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    83dc:	lsl	r0, r0, #12
    83e0:	ldr	ip, [fp, #-56]	; 0xffffffc8
    83e4:	lsr	ip, ip, #20
    83e8:	orr	r0, r0, ip
    83ec:	str	r0, [fp, #-56]	; 0xffffffc8
    83f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    83f4:	ldr	ip, [fp, #-56]	; 0xffffffc8
    83f8:	add	r0, ip, r0
    83fc:	str	r0, [fp, #-56]	; 0xffffffc8
    8400:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8404:	ldr	ip, [fp, #-44]	; 0xffffffd4
    8408:	and	r0, r0, ip
    840c:	ldr	ip, [fp, #-56]	; 0xffffffc8
    8410:	eor	ip, ip, r2
    8414:	ldr	lr, [fp, #-48]	; 0xffffffd0
    8418:	and	ip, ip, lr
    841c:	orr	r0, r0, ip
    8420:	ldr	ip, [fp, #-112]	; 0xffffff90
    8424:	add	r0, r0, ip
    8428:	ldr	ip, [sp, #60]	; 0x3c
    842c:	add	r0, r0, ip
    8430:	ldr	lr, [fp, #-52]	; 0xffffffcc
    8434:	add	r0, lr, r0
    8438:	str	r0, [fp, #-52]	; 0xffffffcc
    843c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8440:	lsl	r0, r0, #17
    8444:	ldr	lr, [fp, #-52]	; 0xffffffcc
    8448:	lsr	lr, lr, #15
    844c:	orr	r0, r0, lr
    8450:	str	r0, [fp, #-52]	; 0xffffffcc
    8454:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8458:	ldr	lr, [fp, #-52]	; 0xffffffcc
    845c:	add	r0, lr, r0
    8460:	str	r0, [fp, #-52]	; 0xffffffcc
    8464:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8468:	ldr	lr, [fp, #-56]	; 0xffffffc8
    846c:	and	r0, r0, lr
    8470:	ldr	lr, [fp, #-52]	; 0xffffffcc
    8474:	eor	lr, lr, r2
    8478:	ldr	r4, [fp, #-44]	; 0xffffffd4
    847c:	and	lr, lr, r4
    8480:	orr	r0, r0, lr
    8484:	ldr	lr, [fp, #-108]	; 0xffffff94
    8488:	add	r0, r0, lr
    848c:	ldr	lr, [sp, #64]	; 0x40
    8490:	add	r0, r0, lr
    8494:	ldr	r4, [fp, #-48]	; 0xffffffd0
    8498:	add	r0, r4, r0
    849c:	str	r0, [fp, #-48]	; 0xffffffd0
    84a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    84a4:	lsl	r0, r0, #22
    84a8:	ldr	r4, [fp, #-48]	; 0xffffffd0
    84ac:	lsr	r4, r4, #10
    84b0:	orr	r0, r0, r4
    84b4:	str	r0, [fp, #-48]	; 0xffffffd0
    84b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    84bc:	ldr	r4, [fp, #-48]	; 0xffffffd0
    84c0:	add	r0, r4, r0
    84c4:	str	r0, [fp, #-48]	; 0xffffffd0
    84c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    84cc:	ldr	r4, [fp, #-52]	; 0xffffffcc
    84d0:	and	r0, r0, r4
    84d4:	ldr	r4, [fp, #-48]	; 0xffffffd0
    84d8:	eor	r4, r4, r2
    84dc:	ldr	r5, [fp, #-56]	; 0xffffffc8
    84e0:	and	r4, r4, r5
    84e4:	orr	r0, r0, r4
    84e8:	ldr	r4, [fp, #-104]	; 0xffffff98
    84ec:	add	r0, r0, r4
    84f0:	ldr	r4, [sp, #68]	; 0x44
    84f4:	add	r0, r0, r4
    84f8:	ldr	r5, [fp, #-44]	; 0xffffffd4
    84fc:	add	r0, r5, r0
    8500:	str	r0, [fp, #-44]	; 0xffffffd4
    8504:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8508:	lsl	r0, r0, #7
    850c:	ldr	r5, [fp, #-44]	; 0xffffffd4
    8510:	lsr	r5, r5, #25
    8514:	orr	r0, r0, r5
    8518:	str	r0, [fp, #-44]	; 0xffffffd4
    851c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8520:	ldr	r5, [fp, #-44]	; 0xffffffd4
    8524:	add	r0, r5, r0
    8528:	str	r0, [fp, #-44]	; 0xffffffd4
    852c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8530:	ldr	r5, [fp, #-48]	; 0xffffffd0
    8534:	and	r0, r0, r5
    8538:	ldr	r5, [fp, #-44]	; 0xffffffd4
    853c:	eor	r5, r5, r2
    8540:	ldr	r6, [fp, #-52]	; 0xffffffcc
    8544:	and	r5, r5, r6
    8548:	orr	r0, r0, r5
    854c:	ldr	r5, [fp, #-100]	; 0xffffff9c
    8550:	add	r0, r0, r5
    8554:	ldr	r5, [sp, #72]	; 0x48
    8558:	add	r0, r0, r5
    855c:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8560:	add	r0, r6, r0
    8564:	str	r0, [fp, #-56]	; 0xffffffc8
    8568:	ldr	r0, [fp, #-56]	; 0xffffffc8
    856c:	lsl	r0, r0, #12
    8570:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8574:	lsr	r6, r6, #20
    8578:	orr	r0, r0, r6
    857c:	str	r0, [fp, #-56]	; 0xffffffc8
    8580:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8584:	ldr	r6, [fp, #-56]	; 0xffffffc8
    8588:	add	r0, r6, r0
    858c:	str	r0, [fp, #-56]	; 0xffffffc8
    8590:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8594:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8598:	and	r0, r0, r6
    859c:	ldr	r6, [fp, #-56]	; 0xffffffc8
    85a0:	eor	r6, r6, r2
    85a4:	ldr	r7, [fp, #-48]	; 0xffffffd0
    85a8:	and	r6, r6, r7
    85ac:	orr	r0, r0, r6
    85b0:	ldr	r6, [fp, #-96]	; 0xffffffa0
    85b4:	add	r0, r0, r6
    85b8:	ldr	r6, [sp, #76]	; 0x4c
    85bc:	add	r0, r0, r6
    85c0:	ldr	r7, [fp, #-52]	; 0xffffffcc
    85c4:	add	r0, r7, r0
    85c8:	str	r0, [fp, #-52]	; 0xffffffcc
    85cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    85d0:	lsl	r0, r0, #17
    85d4:	ldr	r7, [fp, #-52]	; 0xffffffcc
    85d8:	lsr	r7, r7, #15
    85dc:	orr	r0, r0, r7
    85e0:	str	r0, [fp, #-52]	; 0xffffffcc
    85e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    85e8:	ldr	r7, [fp, #-52]	; 0xffffffcc
    85ec:	add	r0, r7, r0
    85f0:	str	r0, [fp, #-52]	; 0xffffffcc
    85f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    85f8:	ldr	r7, [fp, #-56]	; 0xffffffc8
    85fc:	and	r0, r0, r7
    8600:	ldr	r7, [fp, #-52]	; 0xffffffcc
    8604:	eor	r7, r7, r2
    8608:	ldr	r8, [fp, #-44]	; 0xffffffd4
    860c:	and	r7, r7, r8
    8610:	orr	r0, r0, r7
    8614:	ldr	r7, [fp, #-92]	; 0xffffffa4
    8618:	add	r0, r0, r7
    861c:	ldr	r7, [sp, #80]	; 0x50
    8620:	add	r0, r0, r7
    8624:	ldr	r8, [fp, #-48]	; 0xffffffd0
    8628:	add	r0, r8, r0
    862c:	str	r0, [fp, #-48]	; 0xffffffd0
    8630:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8634:	lsl	r0, r0, #22
    8638:	ldr	r8, [fp, #-48]	; 0xffffffd0
    863c:	lsr	r8, r8, #10
    8640:	orr	r0, r0, r8
    8644:	str	r0, [fp, #-48]	; 0xffffffd0
    8648:	ldr	r0, [fp, #-52]	; 0xffffffcc
    864c:	ldr	r8, [fp, #-48]	; 0xffffffd0
    8650:	add	r0, r8, r0
    8654:	str	r0, [fp, #-48]	; 0xffffffd0
    8658:	ldr	r0, [fp, #-48]	; 0xffffffd0
    865c:	ldr	r8, [fp, #-52]	; 0xffffffcc
    8660:	and	r0, r0, r8
    8664:	ldr	r8, [fp, #-48]	; 0xffffffd0
    8668:	eor	r8, r8, r2
    866c:	ldr	r9, [fp, #-56]	; 0xffffffc8
    8670:	and	r8, r8, r9
    8674:	orr	r0, r0, r8
    8678:	ldr	r8, [fp, #-88]	; 0xffffffa8
    867c:	add	r0, r0, r8
    8680:	ldr	r8, [sp, #84]	; 0x54
    8684:	add	r0, r0, r8
    8688:	ldr	r9, [fp, #-44]	; 0xffffffd4
    868c:	add	r0, r9, r0
    8690:	str	r0, [fp, #-44]	; 0xffffffd4
    8694:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8698:	lsl	r0, r0, #7
    869c:	ldr	r9, [fp, #-44]	; 0xffffffd4
    86a0:	lsr	r9, r9, #25
    86a4:	orr	r0, r0, r9
    86a8:	str	r0, [fp, #-44]	; 0xffffffd4
    86ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    86b0:	ldr	r9, [fp, #-44]	; 0xffffffd4
    86b4:	add	r0, r9, r0
    86b8:	str	r0, [fp, #-44]	; 0xffffffd4
    86bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    86c0:	ldr	r9, [fp, #-48]	; 0xffffffd0
    86c4:	and	r0, r0, r9
    86c8:	ldr	r9, [fp, #-44]	; 0xffffffd4
    86cc:	eor	r9, r9, r2
    86d0:	ldr	sl, [fp, #-52]	; 0xffffffcc
    86d4:	and	r9, r9, sl
    86d8:	orr	r0, r0, r9
    86dc:	ldr	r9, [fp, #-84]	; 0xffffffac
    86e0:	add	r0, r0, r9
    86e4:	ldr	r9, [sp, #88]	; 0x58
    86e8:	add	r0, r0, r9
    86ec:	ldr	sl, [fp, #-56]	; 0xffffffc8
    86f0:	add	r0, sl, r0
    86f4:	str	r0, [fp, #-56]	; 0xffffffc8
    86f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    86fc:	lsl	r0, r0, #12
    8700:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8704:	lsr	sl, sl, #20
    8708:	orr	r0, r0, sl
    870c:	str	r0, [fp, #-56]	; 0xffffffc8
    8710:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8714:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8718:	add	r0, sl, r0
    871c:	str	r0, [fp, #-56]	; 0xffffffc8
    8720:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8724:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8728:	and	r0, r0, sl
    872c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8730:	eor	sl, sl, r2
    8734:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8738:	and	r1, sl, r1
    873c:	orr	r0, r0, r1
    8740:	ldr	r1, [fp, #-80]	; 0xffffffb0
    8744:	add	r0, r0, r1
    8748:	ldr	r1, [sp, #92]	; 0x5c
    874c:	add	r0, r0, r1
    8750:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8754:	add	r0, sl, r0
    8758:	str	r0, [fp, #-52]	; 0xffffffcc
    875c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8760:	lsl	r0, r0, #17
    8764:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8768:	lsr	sl, sl, #15
    876c:	orr	r0, r0, sl
    8770:	str	r0, [fp, #-52]	; 0xffffffcc
    8774:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8778:	ldr	sl, [fp, #-52]	; 0xffffffcc
    877c:	add	r0, sl, r0
    8780:	str	r0, [fp, #-52]	; 0xffffffcc
    8784:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8788:	ldr	sl, [fp, #-56]	; 0xffffffc8
    878c:	and	r0, r0, sl
    8790:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8794:	eor	sl, sl, r2
    8798:	ldr	r1, [fp, #-44]	; 0xffffffd4
    879c:	and	r1, sl, r1
    87a0:	orr	r0, r0, r1
    87a4:	ldr	r1, [fp, #-76]	; 0xffffffb4
    87a8:	add	r0, r0, r1
    87ac:	ldr	r1, [sp, #96]	; 0x60
    87b0:	add	r0, r0, r1
    87b4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    87b8:	add	r0, sl, r0
    87bc:	str	r0, [fp, #-48]	; 0xffffffd0
    87c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    87c4:	lsl	r0, r0, #22
    87c8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    87cc:	lsr	sl, sl, #10
    87d0:	orr	r0, r0, sl
    87d4:	str	r0, [fp, #-48]	; 0xffffffd0
    87d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    87dc:	ldr	sl, [fp, #-48]	; 0xffffffd0
    87e0:	add	r0, sl, r0
    87e4:	str	r0, [fp, #-48]	; 0xffffffd0
    87e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    87ec:	ldr	sl, [fp, #-52]	; 0xffffffcc
    87f0:	and	r0, r0, sl
    87f4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    87f8:	eor	sl, sl, r2
    87fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8800:	and	r1, sl, r1
    8804:	orr	r0, r0, r1
    8808:	ldr	r1, [fp, #-72]	; 0xffffffb8
    880c:	add	r0, r0, r1
    8810:	ldr	r1, [sp, #100]	; 0x64
    8814:	add	r0, r0, r1
    8818:	ldr	sl, [fp, #-44]	; 0xffffffd4
    881c:	add	r0, sl, r0
    8820:	str	r0, [fp, #-44]	; 0xffffffd4
    8824:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8828:	lsl	r0, r0, #7
    882c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8830:	lsr	sl, sl, #25
    8834:	orr	r0, r0, sl
    8838:	str	r0, [fp, #-44]	; 0xffffffd4
    883c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8840:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8844:	add	r0, sl, r0
    8848:	str	r0, [fp, #-44]	; 0xffffffd4
    884c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8850:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8854:	and	r0, r0, sl
    8858:	ldr	sl, [fp, #-44]	; 0xffffffd4
    885c:	eor	sl, sl, r2
    8860:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8864:	and	r1, sl, r1
    8868:	orr	r0, r0, r1
    886c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8870:	add	r0, r0, r1
    8874:	ldr	r1, [sp, #104]	; 0x68
    8878:	add	r0, r0, r1
    887c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8880:	add	r0, sl, r0
    8884:	str	r0, [fp, #-56]	; 0xffffffc8
    8888:	ldr	r0, [fp, #-56]	; 0xffffffc8
    888c:	lsl	r0, r0, #12
    8890:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8894:	lsr	sl, sl, #20
    8898:	orr	r0, r0, sl
    889c:	str	r0, [fp, #-56]	; 0xffffffc8
    88a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    88a4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    88a8:	add	r0, sl, r0
    88ac:	str	r0, [fp, #-56]	; 0xffffffc8
    88b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    88b4:	ldr	sl, [fp, #-44]	; 0xffffffd4
    88b8:	and	r0, r0, sl
    88bc:	ldr	sl, [fp, #-56]	; 0xffffffc8
    88c0:	eor	sl, sl, r2
    88c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    88c8:	and	r1, sl, r1
    88cc:	orr	r0, r0, r1
    88d0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    88d4:	add	r0, r0, r1
    88d8:	ldr	r1, [sp, #108]	; 0x6c
    88dc:	add	r0, r0, r1
    88e0:	ldr	sl, [fp, #-52]	; 0xffffffcc
    88e4:	add	r0, sl, r0
    88e8:	str	r0, [fp, #-52]	; 0xffffffcc
    88ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
    88f0:	lsl	r0, r0, #17
    88f4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    88f8:	lsr	sl, sl, #15
    88fc:	orr	r0, r0, sl
    8900:	str	r0, [fp, #-52]	; 0xffffffcc
    8904:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8908:	ldr	sl, [fp, #-52]	; 0xffffffcc
    890c:	add	r0, sl, r0
    8910:	str	r0, [fp, #-52]	; 0xffffffcc
    8914:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8918:	ldr	sl, [fp, #-56]	; 0xffffffc8
    891c:	and	r0, r0, sl
    8920:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8924:	eor	sl, sl, r2
    8928:	ldr	r1, [fp, #-44]	; 0xffffffd4
    892c:	and	r1, sl, r1
    8930:	orr	r0, r0, r1
    8934:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8938:	add	r0, r0, r1
    893c:	ldr	r1, [sp, #112]	; 0x70
    8940:	add	r0, r0, r1
    8944:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8948:	add	r0, sl, r0
    894c:	str	r0, [fp, #-48]	; 0xffffffd0
    8950:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8954:	lsl	r0, r0, #22
    8958:	ldr	sl, [fp, #-48]	; 0xffffffd0
    895c:	lsr	sl, sl, #10
    8960:	orr	r0, r0, sl
    8964:	str	r0, [fp, #-48]	; 0xffffffd0
    8968:	ldr	r0, [fp, #-52]	; 0xffffffcc
    896c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8970:	add	r0, sl, r0
    8974:	str	r0, [fp, #-48]	; 0xffffffd0
    8978:	ldr	r0, [fp, #-48]	; 0xffffffd0
    897c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8980:	and	r0, r0, sl
    8984:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8988:	ldr	r1, [fp, #-56]	; 0xffffffc8
    898c:	eor	r1, r1, r2
    8990:	and	r1, sl, r1
    8994:	orr	r0, r0, r1
    8998:	ldr	r1, [fp, #-116]	; 0xffffff8c
    899c:	add	r0, r0, r1
    89a0:	ldr	r1, [sp, #116]	; 0x74
    89a4:	add	r0, r0, r1
    89a8:	ldr	sl, [fp, #-44]	; 0xffffffd4
    89ac:	add	r0, sl, r0
    89b0:	str	r0, [fp, #-44]	; 0xffffffd4
    89b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    89b8:	lsl	r0, r0, #5
    89bc:	ldr	sl, [fp, #-44]	; 0xffffffd4
    89c0:	lsr	sl, sl, #27
    89c4:	orr	r0, r0, sl
    89c8:	str	r0, [fp, #-44]	; 0xffffffd4
    89cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    89d0:	ldr	sl, [fp, #-44]	; 0xffffffd4
    89d4:	add	r0, sl, r0
    89d8:	str	r0, [fp, #-44]	; 0xffffffd4
    89dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    89e0:	ldr	sl, [fp, #-52]	; 0xffffffcc
    89e4:	and	r0, r0, sl
    89e8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    89ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    89f0:	eor	r1, r1, r2
    89f4:	and	r1, sl, r1
    89f8:	orr	r0, r0, r1
    89fc:	ldr	r1, [fp, #-96]	; 0xffffffa0
    8a00:	add	r0, r0, r1
    8a04:	ldr	r1, [sp, #120]	; 0x78
    8a08:	add	r0, r0, r1
    8a0c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8a10:	add	r0, sl, r0
    8a14:	str	r0, [fp, #-56]	; 0xffffffc8
    8a18:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8a1c:	lsl	r0, r0, #9
    8a20:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8a24:	lsr	sl, sl, #23
    8a28:	orr	r0, r0, sl
    8a2c:	str	r0, [fp, #-56]	; 0xffffffc8
    8a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8a34:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8a38:	add	r0, sl, r0
    8a3c:	str	r0, [fp, #-56]	; 0xffffffc8
    8a40:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8a44:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8a48:	and	r0, r0, sl
    8a4c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8a50:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8a54:	eor	r1, r1, r2
    8a58:	and	r1, sl, r1
    8a5c:	orr	r0, r0, r1
    8a60:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8a64:	add	r0, r0, r1
    8a68:	ldr	r1, [sp, #124]	; 0x7c
    8a6c:	add	r0, r0, r1
    8a70:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a74:	add	r0, sl, r0
    8a78:	str	r0, [fp, #-52]	; 0xffffffcc
    8a7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8a80:	lsl	r0, r0, #14
    8a84:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a88:	lsr	sl, sl, #18
    8a8c:	orr	r0, r0, sl
    8a90:	str	r0, [fp, #-52]	; 0xffffffcc
    8a94:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8a98:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8a9c:	add	r0, sl, r0
    8aa0:	str	r0, [fp, #-52]	; 0xffffffcc
    8aa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8aa8:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8aac:	and	r0, r0, sl
    8ab0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8ab8:	eor	r1, r1, r2
    8abc:	and	r1, sl, r1
    8ac0:	orr	r0, r0, r1
    8ac4:	ldr	r1, [fp, #-120]	; 0xffffff88
    8ac8:	add	r0, r0, r1
    8acc:	ldr	r1, [sp, #128]	; 0x80
    8ad0:	add	r0, r0, r1
    8ad4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8ad8:	add	r0, sl, r0
    8adc:	str	r0, [fp, #-48]	; 0xffffffd0
    8ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8ae4:	lsl	r0, r0, #20
    8ae8:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8aec:	lsr	sl, sl, #12
    8af0:	orr	r0, r0, sl
    8af4:	str	r0, [fp, #-48]	; 0xffffffd0
    8af8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8afc:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8b00:	add	r0, sl, r0
    8b04:	str	r0, [fp, #-48]	; 0xffffffd0
    8b08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8b0c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8b10:	and	r0, r0, sl
    8b14:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8b18:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8b1c:	eor	r1, r1, r2
    8b20:	and	r1, sl, r1
    8b24:	orr	r0, r0, r1
    8b28:	ldr	r1, [fp, #-100]	; 0xffffff9c
    8b2c:	add	r0, r0, r1
    8b30:	ldr	r1, [sp, #132]	; 0x84
    8b34:	add	r0, r0, r1
    8b38:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b3c:	add	r0, sl, r0
    8b40:	str	r0, [fp, #-44]	; 0xffffffd4
    8b44:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8b48:	lsl	r0, r0, #5
    8b4c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b50:	lsr	sl, sl, #27
    8b54:	orr	r0, r0, sl
    8b58:	str	r0, [fp, #-44]	; 0xffffffd4
    8b5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8b60:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8b64:	add	r0, sl, r0
    8b68:	str	r0, [fp, #-44]	; 0xffffffd4
    8b6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8b70:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8b74:	and	r0, r0, sl
    8b78:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8b7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8b80:	eor	r1, r1, r2
    8b84:	and	r1, sl, r1
    8b88:	orr	r0, r0, r1
    8b8c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    8b90:	add	r0, r0, r1
    8b94:	ldr	r1, [sp, #136]	; 0x88
    8b98:	add	r0, r0, r1
    8b9c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ba0:	add	r0, sl, r0
    8ba4:	str	r0, [fp, #-56]	; 0xffffffc8
    8ba8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8bac:	lsl	r0, r0, #9
    8bb0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8bb4:	lsr	sl, sl, #23
    8bb8:	orr	r0, r0, sl
    8bbc:	str	r0, [fp, #-56]	; 0xffffffc8
    8bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8bc4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8bc8:	add	r0, sl, r0
    8bcc:	str	r0, [fp, #-56]	; 0xffffffc8
    8bd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8bd4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8bd8:	and	r0, r0, sl
    8bdc:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8be0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8be4:	eor	r1, r1, r2
    8be8:	and	r1, sl, r1
    8bec:	orr	r0, r0, r1
    8bf0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8bf4:	add	r0, r0, r1
    8bf8:	ldr	r1, [sp, #140]	; 0x8c
    8bfc:	add	r0, r0, r1
    8c00:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8c04:	add	r0, sl, r0
    8c08:	str	r0, [fp, #-52]	; 0xffffffcc
    8c0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8c10:	lsl	r0, r0, #14
    8c14:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8c18:	lsr	sl, sl, #18
    8c1c:	orr	r0, r0, sl
    8c20:	str	r0, [fp, #-52]	; 0xffffffcc
    8c24:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8c28:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8c2c:	add	r0, sl, r0
    8c30:	str	r0, [fp, #-52]	; 0xffffffcc
    8c34:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8c38:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8c3c:	and	r0, r0, sl
    8c40:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8c48:	eor	r1, r1, r2
    8c4c:	and	r1, sl, r1
    8c50:	orr	r0, r0, r1
    8c54:	ldr	r1, [fp, #-104]	; 0xffffff98
    8c58:	add	r0, r0, r1
    8c5c:	ldr	r1, [sp, #144]	; 0x90
    8c60:	add	r0, r0, r1
    8c64:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c68:	add	r0, sl, r0
    8c6c:	str	r0, [fp, #-48]	; 0xffffffd0
    8c70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8c74:	lsl	r0, r0, #20
    8c78:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c7c:	lsr	sl, sl, #12
    8c80:	orr	r0, r0, sl
    8c84:	str	r0, [fp, #-48]	; 0xffffffd0
    8c88:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8c8c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8c90:	add	r0, sl, r0
    8c94:	str	r0, [fp, #-48]	; 0xffffffd0
    8c98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8c9c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ca0:	and	r0, r0, sl
    8ca4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8ca8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8cac:	eor	r1, r1, r2
    8cb0:	and	r1, sl, r1
    8cb4:	orr	r0, r0, r1
    8cb8:	ldr	r1, [fp, #-84]	; 0xffffffac
    8cbc:	add	r0, r0, r1
    8cc0:	ldr	r1, [sp, #148]	; 0x94
    8cc4:	add	r0, r0, r1
    8cc8:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8ccc:	add	r0, sl, r0
    8cd0:	str	r0, [fp, #-44]	; 0xffffffd4
    8cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8cd8:	lsl	r0, r0, #5
    8cdc:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8ce0:	lsr	sl, sl, #27
    8ce4:	orr	r0, r0, sl
    8ce8:	str	r0, [fp, #-44]	; 0xffffffd4
    8cec:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8cf0:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8cf4:	add	r0, sl, r0
    8cf8:	str	r0, [fp, #-44]	; 0xffffffd4
    8cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8d00:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8d04:	and	r0, r0, sl
    8d08:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8d0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8d10:	eor	r1, r1, r2
    8d14:	and	r1, sl, r1
    8d18:	orr	r0, r0, r1
    8d1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8d20:	add	r0, r0, r1
    8d24:	ldr	r1, [sp, #152]	; 0x98
    8d28:	add	r0, r0, r1
    8d2c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8d30:	add	r0, sl, r0
    8d34:	str	r0, [fp, #-56]	; 0xffffffc8
    8d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d3c:	lsl	r0, r0, #9
    8d40:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8d44:	lsr	sl, sl, #23
    8d48:	orr	r0, r0, sl
    8d4c:	str	r0, [fp, #-56]	; 0xffffffc8
    8d50:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8d54:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8d58:	add	r0, sl, r0
    8d5c:	str	r0, [fp, #-56]	; 0xffffffc8
    8d60:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d64:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8d68:	and	r0, r0, sl
    8d6c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8d70:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8d74:	eor	r1, r1, r2
    8d78:	and	r1, sl, r1
    8d7c:	orr	r0, r0, r1
    8d80:	ldr	r1, [fp, #-108]	; 0xffffff94
    8d84:	add	r0, r0, r1
    8d88:	ldr	r1, [sp, #156]	; 0x9c
    8d8c:	add	r0, r0, r1
    8d90:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8d94:	add	r0, sl, r0
    8d98:	str	r0, [fp, #-52]	; 0xffffffcc
    8d9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8da0:	lsl	r0, r0, #14
    8da4:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8da8:	lsr	sl, sl, #18
    8dac:	orr	r0, r0, sl
    8db0:	str	r0, [fp, #-52]	; 0xffffffcc
    8db4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8db8:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8dbc:	add	r0, sl, r0
    8dc0:	str	r0, [fp, #-52]	; 0xffffffcc
    8dc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8dc8:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8dcc:	and	r0, r0, sl
    8dd0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8dd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8dd8:	eor	r1, r1, r2
    8ddc:	and	r1, sl, r1
    8de0:	orr	r0, r0, r1
    8de4:	ldr	r1, [fp, #-88]	; 0xffffffa8
    8de8:	add	r0, r0, r1
    8dec:	ldr	r1, [sp, #160]	; 0xa0
    8df0:	add	r0, r0, r1
    8df4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8df8:	add	r0, sl, r0
    8dfc:	str	r0, [fp, #-48]	; 0xffffffd0
    8e00:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8e04:	lsl	r0, r0, #20
    8e08:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8e0c:	lsr	sl, sl, #12
    8e10:	orr	r0, r0, sl
    8e14:	str	r0, [fp, #-48]	; 0xffffffd0
    8e18:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8e1c:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8e20:	add	r0, sl, r0
    8e24:	str	r0, [fp, #-48]	; 0xffffffd0
    8e28:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8e2c:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8e30:	and	r0, r0, sl
    8e34:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8e38:	ldr	r1, [fp, #-56]	; 0xffffffc8
    8e3c:	eor	r1, r1, r2
    8e40:	and	r1, sl, r1
    8e44:	orr	r0, r0, r1
    8e48:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8e4c:	add	r0, r0, r1
    8e50:	ldr	r1, [sp, #164]	; 0xa4
    8e54:	add	r0, r0, r1
    8e58:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e5c:	add	r0, sl, r0
    8e60:	str	r0, [fp, #-44]	; 0xffffffd4
    8e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8e68:	lsl	r0, r0, #5
    8e6c:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e70:	lsr	sl, sl, #27
    8e74:	orr	r0, r0, sl
    8e78:	str	r0, [fp, #-44]	; 0xffffffd4
    8e7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8e80:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8e84:	add	r0, sl, r0
    8e88:	str	r0, [fp, #-44]	; 0xffffffd4
    8e8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8e90:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8e94:	and	r0, r0, sl
    8e98:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8e9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    8ea0:	eor	r1, r1, r2
    8ea4:	and	r1, sl, r1
    8ea8:	orr	r0, r0, r1
    8eac:	ldr	r1, [fp, #-112]	; 0xffffff90
    8eb0:	add	r0, r0, r1
    8eb4:	ldr	r1, [sp, #168]	; 0xa8
    8eb8:	add	r0, r0, r1
    8ebc:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ec0:	add	r0, sl, r0
    8ec4:	str	r0, [fp, #-56]	; 0xffffffc8
    8ec8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ecc:	lsl	r0, r0, #9
    8ed0:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ed4:	lsr	sl, sl, #23
    8ed8:	orr	r0, r0, sl
    8edc:	str	r0, [fp, #-56]	; 0xffffffc8
    8ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8ee4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8ee8:	add	r0, sl, r0
    8eec:	str	r0, [fp, #-56]	; 0xffffffc8
    8ef0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ef4:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8ef8:	and	r0, r0, sl
    8efc:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8f00:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8f04:	eor	r1, r1, r2
    8f08:	and	r1, sl, r1
    8f0c:	orr	r0, r0, r1
    8f10:	ldr	r1, [fp, #-92]	; 0xffffffa4
    8f14:	add	r0, r0, r1
    8f18:	ldr	r1, [sp, #172]	; 0xac
    8f1c:	add	r0, r0, r1
    8f20:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8f24:	add	r0, sl, r0
    8f28:	str	r0, [fp, #-52]	; 0xffffffcc
    8f2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8f30:	lsl	r0, r0, #14
    8f34:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8f38:	lsr	sl, sl, #18
    8f3c:	orr	r0, r0, sl
    8f40:	str	r0, [fp, #-52]	; 0xffffffcc
    8f44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8f48:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8f4c:	add	r0, sl, r0
    8f50:	str	r0, [fp, #-52]	; 0xffffffcc
    8f54:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8f58:	ldr	sl, [fp, #-44]	; 0xffffffd4
    8f5c:	and	r0, r0, sl
    8f60:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8f64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8f68:	eor	r1, r1, r2
    8f6c:	and	r1, sl, r1
    8f70:	orr	r0, r0, r1
    8f74:	ldr	r1, [fp, #-72]	; 0xffffffb8
    8f78:	add	r0, r0, r1
    8f7c:	ldr	r1, [sp, #176]	; 0xb0
    8f80:	add	r0, r0, r1
    8f84:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8f88:	add	r0, sl, r0
    8f8c:	str	r0, [fp, #-48]	; 0xffffffd0
    8f90:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8f94:	lsl	r0, r0, #20
    8f98:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8f9c:	lsr	sl, sl, #12
    8fa0:	orr	r0, r0, sl
    8fa4:	str	r0, [fp, #-48]	; 0xffffffd0
    8fa8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8fac:	ldr	sl, [fp, #-48]	; 0xffffffd0
    8fb0:	add	r0, sl, r0
    8fb4:	str	r0, [fp, #-48]	; 0xffffffd0
    8fb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8fbc:	ldr	sl, [fp, #-52]	; 0xffffffcc
    8fc0:	eor	r0, r0, sl
    8fc4:	ldr	sl, [fp, #-56]	; 0xffffffc8
    8fc8:	eor	r0, r0, sl
    8fcc:	ldr	sl, [fp, #-100]	; 0xffffff9c
    8fd0:	add	r0, r0, sl
    8fd4:	ldr	sl, [sp, #180]	; 0xb4
    8fd8:	add	r0, r0, sl
    8fdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8fe0:	add	r0, r1, r0
    8fe4:	str	r0, [fp, #-44]	; 0xffffffd4
    8fe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8fec:	lsl	r0, r0, #4
    8ff0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8ff4:	lsr	r1, r1, #28
    8ff8:	orr	r0, r0, r1
    8ffc:	str	r0, [fp, #-44]	; 0xffffffd4
    9000:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9004:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9008:	add	r0, r1, r0
    900c:	str	r0, [fp, #-44]	; 0xffffffd4
    9010:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9014:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9018:	eor	r0, r0, r1
    901c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9020:	eor	r0, r0, r1
    9024:	ldr	r1, [fp, #-88]	; 0xffffffa8
    9028:	add	r0, r0, r1
    902c:	ldr	r1, [sp, #184]	; 0xb8
    9030:	add	r0, r0, r1
    9034:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9038:	add	r0, r1, r0
    903c:	str	r0, [fp, #-56]	; 0xffffffc8
    9040:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9044:	lsl	r0, r0, #11
    9048:	ldr	r1, [fp, #-56]	; 0xffffffc8
    904c:	lsr	r1, r1, #21
    9050:	orr	r0, r0, r1
    9054:	str	r0, [fp, #-56]	; 0xffffffc8
    9058:	ldr	r0, [fp, #-44]	; 0xffffffd4
    905c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9060:	add	r0, r1, r0
    9064:	str	r0, [fp, #-56]	; 0xffffffc8
    9068:	ldr	r0, [fp, #-56]	; 0xffffffc8
    906c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9070:	eor	r0, r0, r1
    9074:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9078:	eor	r0, r0, r1
    907c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    9080:	add	r0, r0, r1
    9084:	ldr	r1, [sp, #188]	; 0xbc
    9088:	add	r0, r0, r1
    908c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9090:	add	r0, r1, r0
    9094:	str	r0, [fp, #-52]	; 0xffffffcc
    9098:	ldr	r0, [fp, #-52]	; 0xffffffcc
    909c:	lsl	r0, r0, #16
    90a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    90a4:	lsr	r1, r1, #16
    90a8:	orr	r0, r0, r1
    90ac:	str	r0, [fp, #-52]	; 0xffffffcc
    90b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    90b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    90b8:	add	r0, r1, r0
    90bc:	str	r0, [fp, #-52]	; 0xffffffcc
    90c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    90c4:	b	91c8 <MD5Transform+0x1108>
    90c8:	.word	0xeb86d391
    90cc:	.word	0x2ad7d2bb
    90d0:	.word	0xbd3af235
    90d4:	.word	0xf7537e82
    90d8:	.word	0x4e0811a1
    90dc:	.word	0xa3014314
    90e0:	.word	0xfe2ce6e0
    90e4:	.word	0x6fa87e4f
    90e8:	.word	0x85845dd1
    90ec:	.word	0xffeff47d
    90f0:	.word	0x8f0ccc92
    90f4:	.word	0x655b59c3
    90f8:	.word	0xfc93a039
    90fc:	.word	0xab9423a7
    9100:	.word	0x432aff97
    9104:	.word	0xf4292244
    9108:	.word	0xc4ac5665
    910c:	.word	0x1fa27cf8
    9110:	.word	0xe6db99e5
    9114:	.word	0xd9d4d039
    9118:	.word	0x04881d05
    911c:	.word	0xd4ef3085
    9120:	.word	0xeaa127fa
    9124:	.word	0x289b7ec6
    9128:	.word	0xbebfbc70
    912c:	.word	0xf6bb4b60
    9130:	.word	0x4bdecfa9
    9134:	.word	0xa4beea44
    9138:	.word	0xfde5380c
    913c:	.word	0x6d9d6122
    9140:	.word	0x8771f681
    9144:	.word	0xfffa3942
    9148:	.word	0x8d2a4c8a
    914c:	.word	0x676f02d9
    9150:	.word	0xfcefa3f8
    9154:	.word	0xa9e3e905
    9158:	.word	0x455a14ed
    915c:	.word	0xf4d50d87
    9160:	.word	0xc33707d6
    9164:	.word	0x21e1cde6
    9168:	.word	0xe7d3fbc8
    916c:	.word	0xd8a1e681
    9170:	.word	0x02441453
    9174:	.word	0xd62f105d
    9178:	.word	0xe9b6c7aa
    917c:	.word	0x265e5a51
    9180:	.word	0xc040b340
    9184:	.word	0xf61e2562
    9188:	.word	0x49b40821
    918c:	.word	0xa679438e
    9190:	.word	0xfd987193
    9194:	.word	0x6b901122
    9198:	.word	0x895cd7be
    919c:	.word	0xffff5bb1
    91a0:	.word	0x8b44f7af
    91a4:	.word	0x698098d8
    91a8:	.word	0xfd469501
    91ac:	.word	0xa8304613
    91b0:	.word	0x4787c62a
    91b4:	.word	0xf57c0faf
    91b8:	.word	0xc1bdceee
    91bc:	.word	0x242070db
    91c0:	.word	0xe8c7b756
    91c4:	.word	0xd76aa478
    91c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    91cc:	eor	r0, r0, r1
    91d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    91d4:	eor	r0, r0, r1
    91d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
    91dc:	add	r0, r0, r1
    91e0:	ldr	r1, [sp, #192]	; 0xc0
    91e4:	add	r0, r0, r1
    91e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    91ec:	add	r0, r1, r0
    91f0:	str	r0, [fp, #-48]	; 0xffffffd0
    91f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    91f8:	lsl	r0, r0, #23
    91fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9200:	lsr	r1, r1, #9
    9204:	orr	r0, r0, r1
    9208:	str	r0, [fp, #-48]	; 0xffffffd0
    920c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9210:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9214:	add	r0, r1, r0
    9218:	str	r0, [fp, #-48]	; 0xffffffd0
    921c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9220:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9224:	eor	r0, r0, r1
    9228:	ldr	r1, [fp, #-56]	; 0xffffffc8
    922c:	eor	r0, r0, r1
    9230:	ldr	r1, [fp, #-116]	; 0xffffff8c
    9234:	add	r0, r0, r1
    9238:	ldr	r1, [sp, #196]	; 0xc4
    923c:	add	r0, r0, r1
    9240:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9244:	add	r0, r1, r0
    9248:	str	r0, [fp, #-44]	; 0xffffffd4
    924c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9250:	lsl	r0, r0, #4
    9254:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9258:	lsr	r1, r1, #28
    925c:	orr	r0, r0, r1
    9260:	str	r0, [fp, #-44]	; 0xffffffd4
    9264:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9268:	ldr	r1, [fp, #-44]	; 0xffffffd4
    926c:	add	r0, r1, r0
    9270:	str	r0, [fp, #-44]	; 0xffffffd4
    9274:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9278:	ldr	r1, [fp, #-48]	; 0xffffffd0
    927c:	eor	r0, r0, r1
    9280:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9284:	eor	r0, r0, r1
    9288:	ldr	r1, [fp, #-104]	; 0xffffff98
    928c:	add	r0, r0, r1
    9290:	ldr	r1, [fp, #-192]	; 0xffffff40
    9294:	add	r0, r0, r1
    9298:	ldr	r1, [fp, #-56]	; 0xffffffc8
    929c:	add	r0, r1, r0
    92a0:	str	r0, [fp, #-56]	; 0xffffffc8
    92a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    92a8:	lsl	r0, r0, #11
    92ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
    92b0:	lsr	r1, r1, #21
    92b4:	orr	r0, r0, r1
    92b8:	str	r0, [fp, #-56]	; 0xffffffc8
    92bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    92c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    92c4:	add	r0, r1, r0
    92c8:	str	r0, [fp, #-56]	; 0xffffffc8
    92cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    92d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    92d4:	eor	r0, r0, r1
    92d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    92dc:	eor	r0, r0, r1
    92e0:	ldr	r1, [fp, #-92]	; 0xffffffa4
    92e4:	add	r0, r0, r1
    92e8:	ldr	r1, [fp, #-188]	; 0xffffff44
    92ec:	add	r0, r0, r1
    92f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    92f4:	add	r0, r1, r0
    92f8:	str	r0, [fp, #-52]	; 0xffffffcc
    92fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9300:	lsl	r0, r0, #16
    9304:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9308:	lsr	r1, r1, #16
    930c:	orr	r0, r0, r1
    9310:	str	r0, [fp, #-52]	; 0xffffffcc
    9314:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9318:	ldr	r1, [fp, #-52]	; 0xffffffcc
    931c:	add	r0, r1, r0
    9320:	str	r0, [fp, #-52]	; 0xffffffcc
    9324:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9328:	ldr	r1, [fp, #-56]	; 0xffffffc8
    932c:	eor	r0, r0, r1
    9330:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9334:	eor	r0, r0, r1
    9338:	ldr	r1, [fp, #-80]	; 0xffffffb0
    933c:	add	r0, r0, r1
    9340:	ldr	r1, [fp, #-184]	; 0xffffff48
    9344:	add	r0, r0, r1
    9348:	ldr	r1, [fp, #-48]	; 0xffffffd0
    934c:	add	r0, r1, r0
    9350:	str	r0, [fp, #-48]	; 0xffffffd0
    9354:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9358:	lsl	r0, r0, #23
    935c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9360:	lsr	r1, r1, #9
    9364:	orr	r0, r0, r1
    9368:	str	r0, [fp, #-48]	; 0xffffffd0
    936c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9370:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9374:	add	r0, r1, r0
    9378:	str	r0, [fp, #-48]	; 0xffffffd0
    937c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9380:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9384:	eor	r0, r0, r1
    9388:	ldr	r1, [fp, #-56]	; 0xffffffc8
    938c:	eor	r0, r0, r1
    9390:	ldr	r1, [fp, #-68]	; 0xffffffbc
    9394:	add	r0, r0, r1
    9398:	ldr	r1, [fp, #-180]	; 0xffffff4c
    939c:	add	r0, r0, r1
    93a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    93a4:	add	r0, r1, r0
    93a8:	str	r0, [fp, #-44]	; 0xffffffd4
    93ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    93b0:	lsl	r0, r0, #4
    93b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    93b8:	lsr	r1, r1, #28
    93bc:	orr	r0, r0, r1
    93c0:	str	r0, [fp, #-44]	; 0xffffffd4
    93c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    93c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    93cc:	add	r0, r1, r0
    93d0:	str	r0, [fp, #-44]	; 0xffffffd4
    93d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    93d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    93dc:	eor	r0, r0, r1
    93e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    93e4:	eor	r0, r0, r1
    93e8:	ldr	r1, [fp, #-120]	; 0xffffff88
    93ec:	add	r0, r0, r1
    93f0:	ldr	r1, [fp, #-176]	; 0xffffff50
    93f4:	add	r0, r0, r1
    93f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    93fc:	add	r0, r1, r0
    9400:	str	r0, [fp, #-56]	; 0xffffffc8
    9404:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9408:	lsl	r0, r0, #11
    940c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9410:	lsr	r1, r1, #21
    9414:	orr	r0, r0, r1
    9418:	str	r0, [fp, #-56]	; 0xffffffc8
    941c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9420:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9424:	add	r0, r1, r0
    9428:	str	r0, [fp, #-56]	; 0xffffffc8
    942c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9430:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9434:	eor	r0, r0, r1
    9438:	ldr	r1, [fp, #-48]	; 0xffffffd0
    943c:	eor	r0, r0, r1
    9440:	ldr	r1, [fp, #-108]	; 0xffffff94
    9444:	add	r0, r0, r1
    9448:	ldr	r1, [fp, #-172]	; 0xffffff54
    944c:	add	r0, r0, r1
    9450:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9454:	add	r0, r1, r0
    9458:	str	r0, [fp, #-52]	; 0xffffffcc
    945c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9460:	lsl	r0, r0, #16
    9464:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9468:	lsr	r1, r1, #16
    946c:	orr	r0, r0, r1
    9470:	str	r0, [fp, #-52]	; 0xffffffcc
    9474:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9478:	ldr	r1, [fp, #-52]	; 0xffffffcc
    947c:	add	r0, r1, r0
    9480:	str	r0, [fp, #-52]	; 0xffffffcc
    9484:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9488:	ldr	r1, [fp, #-56]	; 0xffffffc8
    948c:	eor	r0, r0, r1
    9490:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9494:	eor	r0, r0, r1
    9498:	ldr	r1, [fp, #-96]	; 0xffffffa0
    949c:	add	r0, r0, r1
    94a0:	ldr	r1, [fp, #-168]	; 0xffffff58
    94a4:	add	r0, r0, r1
    94a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    94ac:	add	r0, r1, r0
    94b0:	str	r0, [fp, #-48]	; 0xffffffd0
    94b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    94b8:	lsl	r0, r0, #23
    94bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    94c0:	lsr	r1, r1, #9
    94c4:	orr	r0, r0, r1
    94c8:	str	r0, [fp, #-48]	; 0xffffffd0
    94cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    94d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    94d4:	add	r0, r1, r0
    94d8:	str	r0, [fp, #-48]	; 0xffffffd0
    94dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    94e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    94e4:	eor	r0, r0, r1
    94e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    94ec:	eor	r0, r0, r1
    94f0:	ldr	r1, [fp, #-84]	; 0xffffffac
    94f4:	add	r0, r0, r1
    94f8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    94fc:	add	r0, r0, r1
    9500:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9504:	add	r0, r1, r0
    9508:	str	r0, [fp, #-44]	; 0xffffffd4
    950c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9510:	lsl	r0, r0, #4
    9514:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9518:	lsr	r1, r1, #28
    951c:	orr	r0, r0, r1
    9520:	str	r0, [fp, #-44]	; 0xffffffd4
    9524:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9528:	ldr	r1, [fp, #-44]	; 0xffffffd4
    952c:	add	r0, r1, r0
    9530:	str	r0, [fp, #-44]	; 0xffffffd4
    9534:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9538:	ldr	r1, [fp, #-48]	; 0xffffffd0
    953c:	eor	r0, r0, r1
    9540:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9544:	eor	r0, r0, r1
    9548:	ldr	r1, [fp, #-72]	; 0xffffffb8
    954c:	add	r0, r0, r1
    9550:	ldr	r1, [fp, #-160]	; 0xffffff60
    9554:	add	r0, r0, r1
    9558:	ldr	r1, [fp, #-56]	; 0xffffffc8
    955c:	add	r0, r1, r0
    9560:	str	r0, [fp, #-56]	; 0xffffffc8
    9564:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9568:	lsl	r0, r0, #11
    956c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9570:	lsr	r1, r1, #21
    9574:	orr	r0, r0, r1
    9578:	str	r0, [fp, #-56]	; 0xffffffc8
    957c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9580:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9584:	add	r0, r1, r0
    9588:	str	r0, [fp, #-56]	; 0xffffffc8
    958c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9590:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9594:	eor	r0, r0, r1
    9598:	ldr	r1, [fp, #-48]	; 0xffffffd0
    959c:	eor	r0, r0, r1
    95a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    95a4:	add	r0, r0, r1
    95a8:	ldr	r1, [fp, #-156]	; 0xffffff64
    95ac:	add	r0, r0, r1
    95b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    95b4:	add	r0, r1, r0
    95b8:	str	r0, [fp, #-52]	; 0xffffffcc
    95bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    95c0:	lsl	r0, r0, #16
    95c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    95c8:	lsr	r1, r1, #16
    95cc:	orr	r0, r0, r1
    95d0:	str	r0, [fp, #-52]	; 0xffffffcc
    95d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    95d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    95dc:	add	r0, r1, r0
    95e0:	str	r0, [fp, #-52]	; 0xffffffcc
    95e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    95e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
    95ec:	eor	r0, r0, r1
    95f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    95f4:	eor	r0, r0, r1
    95f8:	ldr	r1, [fp, #-112]	; 0xffffff90
    95fc:	add	r0, r0, r1
    9600:	ldr	r1, [fp, #-152]	; 0xffffff68
    9604:	add	r0, r0, r1
    9608:	ldr	r1, [fp, #-48]	; 0xffffffd0
    960c:	add	r0, r1, r0
    9610:	str	r0, [fp, #-48]	; 0xffffffd0
    9614:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9618:	lsl	r0, r0, #23
    961c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9620:	lsr	r1, r1, #9
    9624:	orr	r0, r0, r1
    9628:	str	r0, [fp, #-48]	; 0xffffffd0
    962c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9630:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9634:	add	r0, r1, r0
    9638:	str	r0, [fp, #-48]	; 0xffffffd0
    963c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9640:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9644:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9648:	eor	r3, r3, r2
    964c:	orr	r1, r1, r3
    9650:	eor	r0, r0, r1
    9654:	ldr	r1, [fp, #-120]	; 0xffffff88
    9658:	add	r0, r0, r1
    965c:	ldr	r1, [fp, #-148]	; 0xffffff6c
    9660:	add	r0, r0, r1
    9664:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9668:	add	r0, r3, r0
    966c:	str	r0, [fp, #-44]	; 0xffffffd4
    9670:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9674:	lsl	r0, r0, #6
    9678:	ldr	r3, [fp, #-44]	; 0xffffffd4
    967c:	lsr	r3, r3, #26
    9680:	orr	r0, r0, r3
    9684:	str	r0, [fp, #-44]	; 0xffffffd4
    9688:	ldr	r0, [fp, #-48]	; 0xffffffd0
    968c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9690:	add	r0, r3, r0
    9694:	str	r0, [fp, #-44]	; 0xffffffd4
    9698:	ldr	r0, [fp, #-48]	; 0xffffffd0
    969c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    96a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    96a4:	eor	r1, r1, r2
    96a8:	orr	r1, r3, r1
    96ac:	eor	r0, r0, r1
    96b0:	ldr	r1, [fp, #-92]	; 0xffffffa4
    96b4:	add	r0, r0, r1
    96b8:	ldr	r1, [fp, #-144]	; 0xffffff70
    96bc:	add	r0, r0, r1
    96c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96c4:	add	r0, r3, r0
    96c8:	str	r0, [fp, #-56]	; 0xffffffc8
    96cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    96d0:	lsl	r0, r0, #10
    96d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96d8:	lsr	r3, r3, #22
    96dc:	orr	r0, r0, r3
    96e0:	str	r0, [fp, #-56]	; 0xffffffc8
    96e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    96e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96ec:	add	r0, r3, r0
    96f0:	str	r0, [fp, #-56]	; 0xffffffc8
    96f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    96f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    96fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9700:	eor	r1, r1, r2
    9704:	orr	r1, r3, r1
    9708:	eor	r0, r0, r1
    970c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    9710:	add	r0, r0, r1
    9714:	ldr	r1, [fp, #-140]	; 0xffffff74
    9718:	add	r0, r0, r1
    971c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9720:	add	r0, r3, r0
    9724:	str	r0, [fp, #-52]	; 0xffffffcc
    9728:	ldr	r0, [fp, #-52]	; 0xffffffcc
    972c:	lsl	r0, r0, #15
    9730:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9734:	lsr	r3, r3, #17
    9738:	orr	r0, r0, r3
    973c:	str	r0, [fp, #-52]	; 0xffffffcc
    9740:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9744:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9748:	add	r0, r3, r0
    974c:	str	r0, [fp, #-52]	; 0xffffffcc
    9750:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9754:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9758:	ldr	r1, [fp, #-44]	; 0xffffffd4
    975c:	eor	r1, r1, r2
    9760:	orr	r1, r3, r1
    9764:	eor	r0, r0, r1
    9768:	ldr	r1, [fp, #-100]	; 0xffffff9c
    976c:	add	r0, r0, r1
    9770:	ldr	r1, [fp, #-136]	; 0xffffff78
    9774:	add	r0, r0, r1
    9778:	ldr	r3, [fp, #-48]	; 0xffffffd0
    977c:	add	r0, r3, r0
    9780:	str	r0, [fp, #-48]	; 0xffffffd0
    9784:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9788:	lsl	r0, r0, #21
    978c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9790:	lsr	r3, r3, #11
    9794:	orr	r0, r0, r3
    9798:	str	r0, [fp, #-48]	; 0xffffffd0
    979c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    97a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97a4:	add	r0, r3, r0
    97a8:	str	r0, [fp, #-48]	; 0xffffffd0
    97ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
    97b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    97b8:	eor	r1, r1, r2
    97bc:	orr	r1, r3, r1
    97c0:	eor	r0, r0, r1
    97c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
    97c8:	add	r0, r0, r1
    97cc:	ldr	r1, [fp, #-132]	; 0xffffff7c
    97d0:	add	r0, r0, r1
    97d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97d8:	add	r0, r3, r0
    97dc:	str	r0, [fp, #-44]	; 0xffffffd4
    97e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    97e4:	lsl	r0, r0, #6
    97e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    97ec:	lsr	r3, r3, #26
    97f0:	orr	r0, r0, r3
    97f4:	str	r0, [fp, #-44]	; 0xffffffd4
    97f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    97fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9800:	add	r0, r3, r0
    9804:	str	r0, [fp, #-44]	; 0xffffffd4
    9808:	ldr	r0, [fp, #-48]	; 0xffffffd0
    980c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9810:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9814:	eor	r1, r1, r2
    9818:	orr	r1, r3, r1
    981c:	eor	r0, r0, r1
    9820:	ldr	r1, [fp, #-108]	; 0xffffff94
    9824:	add	r0, r0, r1
    9828:	ldr	r1, [fp, #-128]	; 0xffffff80
    982c:	add	r0, r0, r1
    9830:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9834:	add	r0, r3, r0
    9838:	str	r0, [fp, #-56]	; 0xffffffc8
    983c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9840:	lsl	r0, r0, #10
    9844:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9848:	lsr	r3, r3, #22
    984c:	orr	r0, r0, r3
    9850:	str	r0, [fp, #-56]	; 0xffffffc8
    9854:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9858:	ldr	r3, [fp, #-56]	; 0xffffffc8
    985c:	add	r0, r3, r0
    9860:	str	r0, [fp, #-56]	; 0xffffffc8
    9864:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9868:	ldr	r3, [fp, #-56]	; 0xffffffc8
    986c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9870:	eor	r1, r1, r2
    9874:	orr	r1, r3, r1
    9878:	eor	r0, r0, r1
    987c:	ldr	r1, [fp, #-80]	; 0xffffffb0
    9880:	add	r0, r0, r1
    9884:	ldr	r1, [sp, #32]
    9888:	add	r0, r0, r1
    988c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9890:	add	r0, r3, r0
    9894:	str	r0, [fp, #-52]	; 0xffffffcc
    9898:	ldr	r0, [fp, #-52]	; 0xffffffcc
    989c:	lsl	r0, r0, #15
    98a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    98a4:	lsr	r3, r3, #17
    98a8:	orr	r0, r0, r3
    98ac:	str	r0, [fp, #-52]	; 0xffffffcc
    98b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    98b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    98b8:	add	r0, r3, r0
    98bc:	str	r0, [fp, #-52]	; 0xffffffcc
    98c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    98c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    98c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    98cc:	eor	r1, r1, r2
    98d0:	orr	r1, r3, r1
    98d4:	eor	r0, r0, r1
    98d8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    98dc:	add	r0, r0, r1
    98e0:	ldr	r1, [sp, #36]	; 0x24
    98e4:	add	r0, r0, r1
    98e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    98ec:	add	r0, r3, r0
    98f0:	str	r0, [fp, #-48]	; 0xffffffd0
    98f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    98f8:	lsl	r0, r0, #21
    98fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9900:	lsr	r3, r3, #11
    9904:	orr	r0, r0, r3
    9908:	str	r0, [fp, #-48]	; 0xffffffd0
    990c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9910:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9914:	add	r0, r3, r0
    9918:	str	r0, [fp, #-48]	; 0xffffffd0
    991c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9920:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9924:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9928:	eor	r1, r1, r2
    992c:	orr	r1, r3, r1
    9930:	eor	r0, r0, r1
    9934:	ldr	r1, [fp, #-88]	; 0xffffffa8
    9938:	add	r0, r0, r1
    993c:	ldr	r1, [sp, #28]
    9940:	add	r0, r0, r1
    9944:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9948:	add	r0, r3, r0
    994c:	str	r0, [fp, #-44]	; 0xffffffd4
    9950:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9954:	lsl	r0, r0, #6
    9958:	ldr	r3, [fp, #-44]	; 0xffffffd4
    995c:	lsr	r3, r3, #26
    9960:	orr	r0, r0, r3
    9964:	str	r0, [fp, #-44]	; 0xffffffd4
    9968:	ldr	r0, [fp, #-48]	; 0xffffffd0
    996c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9970:	add	r0, r3, r0
    9974:	str	r0, [fp, #-44]	; 0xffffffd4
    9978:	ldr	r0, [fp, #-48]	; 0xffffffd0
    997c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9980:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9984:	eor	r1, r1, r2
    9988:	orr	r1, r3, r1
    998c:	eor	r0, r0, r1
    9990:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9994:	add	r0, r0, r1
    9998:	ldr	r1, [sp]
    999c:	add	r0, r0, r1
    99a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    99a4:	add	r0, r3, r0
    99a8:	str	r0, [fp, #-56]	; 0xffffffc8
    99ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    99b0:	lsl	r0, r0, #10
    99b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    99b8:	lsr	r3, r3, #22
    99bc:	orr	r0, r0, r3
    99c0:	str	r0, [fp, #-56]	; 0xffffffc8
    99c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    99c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    99cc:	add	r0, r3, r0
    99d0:	str	r0, [fp, #-56]	; 0xffffffc8
    99d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    99d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    99dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    99e0:	eor	r1, r1, r2
    99e4:	orr	r1, r3, r1
    99e8:	eor	r0, r0, r1
    99ec:	ldr	r1, [fp, #-96]	; 0xffffffa0
    99f0:	add	r0, r0, r1
    99f4:	ldr	r1, [sp, #4]
    99f8:	add	r0, r0, r1
    99fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9a00:	add	r0, r3, r0
    9a04:	str	r0, [fp, #-52]	; 0xffffffcc
    9a08:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9a0c:	lsl	r0, r0, #15
    9a10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9a14:	lsr	r3, r3, #17
    9a18:	orr	r0, r0, r3
    9a1c:	str	r0, [fp, #-52]	; 0xffffffcc
    9a20:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9a24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9a28:	add	r0, r3, r0
    9a2c:	str	r0, [fp, #-52]	; 0xffffffcc
    9a30:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9a34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9a38:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9a3c:	eor	r1, r1, r2
    9a40:	orr	r1, r3, r1
    9a44:	eor	r0, r0, r1
    9a48:	ldr	r1, [fp, #-68]	; 0xffffffbc
    9a4c:	add	r0, r0, r1
    9a50:	ldr	r1, [sp, #8]
    9a54:	add	r0, r0, r1
    9a58:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a5c:	add	r0, r3, r0
    9a60:	str	r0, [fp, #-48]	; 0xffffffd0
    9a64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9a68:	lsl	r0, r0, #21
    9a6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a70:	lsr	r3, r3, #11
    9a74:	orr	r0, r0, r3
    9a78:	str	r0, [fp, #-48]	; 0xffffffd0
    9a7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9a80:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a84:	add	r0, r3, r0
    9a88:	str	r0, [fp, #-48]	; 0xffffffd0
    9a8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9a90:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9a94:	ldr	r1, [fp, #-56]	; 0xffffffc8
    9a98:	eor	r1, r1, r2
    9a9c:	orr	r1, r3, r1
    9aa0:	eor	r0, r0, r1
    9aa4:	ldr	r1, [fp, #-104]	; 0xffffff98
    9aa8:	add	r0, r0, r1
    9aac:	ldr	r1, [sp, #12]
    9ab0:	add	r0, r0, r1
    9ab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9ab8:	add	r0, r3, r0
    9abc:	str	r0, [fp, #-44]	; 0xffffffd4
    9ac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9ac4:	lsl	r0, r0, #6
    9ac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9acc:	lsr	r3, r3, #26
    9ad0:	orr	r0, r0, r3
    9ad4:	str	r0, [fp, #-44]	; 0xffffffd4
    9ad8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9adc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9ae0:	add	r0, r3, r0
    9ae4:	str	r0, [fp, #-44]	; 0xffffffd4
    9ae8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9aec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9af0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9af4:	eor	r1, r1, r2
    9af8:	orr	r1, r3, r1
    9afc:	eor	r0, r0, r1
    9b00:	ldr	r1, [fp, #-76]	; 0xffffffb4
    9b04:	add	r0, r0, r1
    9b08:	ldr	r1, [sp, #16]
    9b0c:	add	r0, r0, r1
    9b10:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9b14:	add	r0, r3, r0
    9b18:	str	r0, [fp, #-56]	; 0xffffffc8
    9b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9b20:	lsl	r0, r0, #10
    9b24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9b28:	lsr	r3, r3, #22
    9b2c:	orr	r0, r0, r3
    9b30:	str	r0, [fp, #-56]	; 0xffffffc8
    9b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9b38:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9b3c:	add	r0, r3, r0
    9b40:	str	r0, [fp, #-56]	; 0xffffffc8
    9b44:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9b48:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9b4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9b50:	eor	r1, r1, r2
    9b54:	orr	r1, r3, r1
    9b58:	eor	r0, r0, r1
    9b5c:	ldr	r1, [fp, #-112]	; 0xffffff90
    9b60:	add	r0, r0, r1
    9b64:	ldr	r1, [sp, #20]
    9b68:	add	r0, r0, r1
    9b6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b70:	add	r0, r3, r0
    9b74:	str	r0, [fp, #-52]	; 0xffffffcc
    9b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9b7c:	lsl	r0, r0, #15
    9b80:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b84:	lsr	r3, r3, #17
    9b88:	orr	r0, r0, r3
    9b8c:	str	r0, [fp, #-52]	; 0xffffffcc
    9b90:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9b94:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b98:	add	r0, r3, r0
    9b9c:	str	r0, [fp, #-52]	; 0xffffffcc
    9ba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9ba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9bac:	eor	r1, r1, r2
    9bb0:	orr	r1, r3, r1
    9bb4:	eor	r0, r0, r1
    9bb8:	ldr	r1, [fp, #-84]	; 0xffffffac
    9bbc:	add	r0, r0, r1
    9bc0:	ldr	r1, [sp, #24]
    9bc4:	add	r0, r0, r1
    9bc8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9bcc:	add	r0, r2, r0
    9bd0:	str	r0, [fp, #-48]	; 0xffffffd0
    9bd4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9bd8:	lsl	r0, r0, #21
    9bdc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9be0:	lsr	r2, r2, #11
    9be4:	orr	r0, r0, r2
    9be8:	str	r0, [fp, #-48]	; 0xffffffd0
    9bec:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9bf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9bf4:	add	r0, r2, r0
    9bf8:	str	r0, [fp, #-48]	; 0xffffffd0
    9bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9c00:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9c04:	ldr	r3, [r2]
    9c08:	add	r0, r3, r0
    9c0c:	str	r0, [r2]
    9c10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9c14:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9c18:	ldr	r3, [r2, #4]
    9c1c:	add	r0, r3, r0
    9c20:	str	r0, [r2, #4]
    9c24:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9c28:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9c2c:	ldr	r3, [r2, #8]
    9c30:	add	r0, r3, r0
    9c34:	str	r0, [r2, #8]
    9c38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9c3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9c40:	ldr	r3, [r2, #12]
    9c44:	add	r0, r3, r0
    9c48:	str	r0, [r2, #12]
    9c4c:	ldr	r0, [sp, #44]	; 0x2c
    9c50:	movw	r2, #0
    9c54:	and	r1, r2, #255	; 0xff
    9c58:	ldr	r2, [sp, #40]	; 0x28
    9c5c:	bl	4ff0 <memset@plt>
    9c60:	sub	sp, fp, #28
    9c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009c68 <MD5Pad>:
    9c68:	push	{fp, lr}
    9c6c:	mov	fp, sp
    9c70:	sub	sp, sp, #24
    9c74:	str	r0, [fp, #-4]
    9c78:	ldr	r0, [fp, #-4]
    9c7c:	ldrb	r1, [r0, #16]
    9c80:	strb	r1, [sp, #12]
    9c84:	ldrb	r1, [r0, #17]
    9c88:	strb	r1, [sp, #13]
    9c8c:	ldrb	r1, [r0, #18]
    9c90:	strb	r1, [sp, #14]
    9c94:	ldrb	r1, [r0, #19]
    9c98:	strb	r1, [sp, #15]
    9c9c:	ldrb	r1, [r0, #20]
    9ca0:	strb	r1, [sp, #16]
    9ca4:	ldrb	r1, [r0, #21]
    9ca8:	strb	r1, [sp, #17]
    9cac:	ldrb	r1, [r0, #22]
    9cb0:	strb	r1, [sp, #18]
    9cb4:	ldrb	r0, [r0, #23]
    9cb8:	strb	r0, [sp, #19]
    9cbc:	ldr	r0, [fp, #-4]
    9cc0:	ldr	r0, [r0, #16]
    9cc4:	lsr	r0, r0, #3
    9cc8:	and	r0, r0, #63	; 0x3f
    9ccc:	str	r0, [sp, #8]
    9cd0:	ldr	r0, [sp, #8]
    9cd4:	cmp	r0, #56	; 0x38
    9cd8:	bcs	9cf0 <MD5Pad+0x88>
    9cdc:	ldr	r0, [sp, #8]
    9ce0:	movw	r1, #56	; 0x38
    9ce4:	sub	r0, r1, r0
    9ce8:	str	r0, [sp]
    9cec:	b	9d00 <MD5Pad+0x98>
    9cf0:	ldr	r0, [sp, #8]
    9cf4:	movw	r1, #120	; 0x78
    9cf8:	sub	r0, r1, r0
    9cfc:	str	r0, [sp]
    9d00:	ldr	r0, [sp]
    9d04:	ldr	r1, [pc, #40]	; 9d34 <MD5Pad+0xcc>
    9d08:	add	r1, pc, r1
    9d0c:	str	r0, [sp, #4]
    9d10:	ldr	r0, [fp, #-4]
    9d14:	ldr	r2, [sp, #4]
    9d18:	bl	7e3c <MD5Update>
    9d1c:	add	r1, sp, #12
    9d20:	ldr	r0, [fp, #-4]
    9d24:	movw	r2, #8
    9d28:	bl	7e3c <MD5Update>
    9d2c:	mov	sp, fp
    9d30:	pop	{fp, pc}
    9d34:	.word	0x0002b724

00009d38 <rb_sha256_crypt_r>:
    9d38:	push	{r4, sl, fp, lr}
    9d3c:	add	fp, sp, #8
    9d40:	sub	sp, sp, #776	; 0x308
    9d44:	ldr	ip, [pc, #4044]	; ad18 <rb_sha256_crypt_r+0xfe0>
    9d48:	add	ip, pc, ip
    9d4c:	str	r0, [fp, #-12]
    9d50:	str	r1, [fp, #-16]
    9d54:	str	r2, [fp, #-20]	; 0xffffffec
    9d58:	str	r3, [fp, #-24]	; 0xffffffe8
    9d5c:	movw	r0, #0
    9d60:	str	r0, [fp, #-452]	; 0xfffffe3c
    9d64:	str	r0, [fp, #-456]	; 0xfffffe38
    9d68:	movw	r1, #5000	; 0x1388
    9d6c:	str	r1, [fp, #-468]	; 0xfffffe2c
    9d70:	str	r0, [fp, #-472]	; 0xfffffe28
    9d74:	ldr	r1, [fp, #-16]
    9d78:	mov	r0, ip
    9d7c:	movw	r2, #3
    9d80:	bl	55e4 <strncmp@plt>
    9d84:	cmp	r0, #0
    9d88:	bne	9d98 <rb_sha256_crypt_r+0x60>
    9d8c:	ldr	r0, [fp, #-16]
    9d90:	add	r0, r0, #3
    9d94:	str	r0, [fp, #-16]
    9d98:	ldr	r0, [pc, #3964]	; ad1c <rb_sha256_crypt_r+0xfe4>
    9d9c:	add	r1, pc, r0
    9da0:	ldr	r0, [fp, #-16]
    9da4:	movw	r2, #7
    9da8:	bl	55e4 <strncmp@plt>
    9dac:	cmp	r0, #0
    9db0:	bne	9e80 <rb_sha256_crypt_r+0x148>
    9db4:	ldr	r0, [fp, #-16]
    9db8:	add	r0, r0, #8
    9dbc:	mvn	r1, #0
    9dc0:	add	r0, r0, r1
    9dc4:	str	r0, [fp, #-476]	; 0xfffffe24
    9dc8:	ldr	r0, [fp, #-476]	; 0xfffffe24
    9dcc:	sub	r1, fp, #480	; 0x1e0
    9dd0:	movw	r2, #10
    9dd4:	bl	51d0 <strtoul@plt>
    9dd8:	str	r0, [fp, #-484]	; 0xfffffe1c
    9ddc:	ldr	r0, [fp, #-480]	; 0xfffffe20
    9de0:	ldrb	r0, [r0]
    9de4:	cmp	r0, #36	; 0x24
    9de8:	bne	9e7c <rb_sha256_crypt_r+0x144>
    9dec:	ldr	r0, [pc, #4068]	; add8 <rb_sha256_crypt_r+0x10a0>
    9df0:	ldr	r1, [fp, #-480]	; 0xfffffe20
    9df4:	add	r1, r1, #1
    9df8:	str	r1, [fp, #-16]
    9dfc:	ldr	r1, [fp, #-484]	; 0xfffffe1c
    9e00:	cmp	r1, r0
    9e04:	bcs	9e14 <rb_sha256_crypt_r+0xdc>
    9e08:	ldr	r0, [fp, #-484]	; 0xfffffe1c
    9e0c:	str	r0, [fp, #-588]	; 0xfffffdb4
    9e10:	b	9e20 <rb_sha256_crypt_r+0xe8>
    9e14:	ldr	r0, [pc, #4028]	; add8 <rb_sha256_crypt_r+0x10a0>
    9e18:	str	r0, [fp, #-588]	; 0xfffffdb4
    9e1c:	b	9e20 <rb_sha256_crypt_r+0xe8>
    9e20:	ldr	r0, [fp, #-588]	; 0xfffffdb4
    9e24:	movw	r1, #1000	; 0x3e8
    9e28:	cmp	r1, r0
    9e2c:	bls	9e3c <rb_sha256_crypt_r+0x104>
    9e30:	movw	r0, #1000	; 0x3e8
    9e34:	str	r0, [fp, #-592]	; 0xfffffdb0
    9e38:	b	9e6c <rb_sha256_crypt_r+0x134>
    9e3c:	ldr	r0, [pc, #3988]	; add8 <rb_sha256_crypt_r+0x10a0>
    9e40:	ldr	r1, [fp, #-484]	; 0xfffffe1c
    9e44:	cmp	r1, r0
    9e48:	bcs	9e58 <rb_sha256_crypt_r+0x120>
    9e4c:	ldr	r0, [fp, #-484]	; 0xfffffe1c
    9e50:	str	r0, [fp, #-596]	; 0xfffffdac
    9e54:	b	9e64 <rb_sha256_crypt_r+0x12c>
    9e58:	ldr	r0, [pc, #3960]	; add8 <rb_sha256_crypt_r+0x10a0>
    9e5c:	str	r0, [fp, #-596]	; 0xfffffdac
    9e60:	b	9e64 <rb_sha256_crypt_r+0x12c>
    9e64:	ldr	r0, [fp, #-596]	; 0xfffffdac
    9e68:	str	r0, [fp, #-592]	; 0xfffffdb0
    9e6c:	ldr	r0, [fp, #-592]	; 0xfffffdb0
    9e70:	str	r0, [fp, #-468]	; 0xfffffe2c
    9e74:	movw	r0, #1
    9e78:	str	r0, [fp, #-472]	; 0xfffffe28
    9e7c:	b	9e80 <rb_sha256_crypt_r+0x148>
    9e80:	ldr	r0, [pc, #3924]	; addc <rb_sha256_crypt_r+0x10a4>
    9e84:	add	r1, pc, r0
    9e88:	ldr	r0, [fp, #-16]
    9e8c:	bl	55b4 <strcspn@plt>
    9e90:	cmp	r0, #16
    9e94:	bcs	9eb0 <rb_sha256_crypt_r+0x178>
    9e98:	ldr	r0, [pc, #4080]	; ae90 <rb_sha256_crypt_r+0x1158>
    9e9c:	add	r1, pc, r0
    9ea0:	ldr	r0, [fp, #-16]
    9ea4:	bl	55b4 <strcspn@plt>
    9ea8:	str	r0, [fp, #-600]	; 0xfffffda8
    9eac:	b	9ebc <rb_sha256_crypt_r+0x184>
    9eb0:	movw	r0, #16
    9eb4:	str	r0, [fp, #-600]	; 0xfffffda8
    9eb8:	b	9ebc <rb_sha256_crypt_r+0x184>
    9ebc:	ldr	r0, [fp, #-600]	; 0xfffffda8
    9ec0:	str	r0, [fp, #-436]	; 0xfffffe4c
    9ec4:	ldr	r0, [fp, #-12]
    9ec8:	bl	51b8 <strlen@plt>
    9ecc:	str	r0, [fp, #-440]	; 0xfffffe48
    9ed0:	ldr	r0, [fp, #-12]
    9ed4:	sub	r0, r0, #0
    9ed8:	and	r0, r0, #3
    9edc:	cmp	r0, #0
    9ee0:	beq	9f3c <rb_sha256_crypt_r+0x204>
    9ee4:	ldr	r0, [fp, #-440]	; 0xfffffe48
    9ee8:	add	r0, r0, #11
    9eec:	bic	r0, r0, #7
    9ef0:	mov	r1, sp
    9ef4:	sub	r0, r1, r0
    9ef8:	mov	sp, r0
    9efc:	str	r0, [fp, #-488]	; 0xfffffe18
    9f00:	ldr	r0, [fp, #-488]	; 0xfffffe18
    9f04:	add	r0, r0, #4
    9f08:	ldr	r1, [fp, #-488]	; 0xfffffe18
    9f0c:	sub	r1, r1, #0
    9f10:	and	r1, r1, #3
    9f14:	movw	r2, #0
    9f18:	sub	r1, r2, r1
    9f1c:	add	r0, r0, r1
    9f20:	ldr	r1, [fp, #-12]
    9f24:	ldr	r2, [fp, #-440]	; 0xfffffe48
    9f28:	str	r0, [fp, #-604]	; 0xfffffda4
    9f2c:	bl	51dc <memcpy@plt>
    9f30:	ldr	r0, [fp, #-604]	; 0xfffffda4
    9f34:	str	r0, [fp, #-452]	; 0xfffffe3c
    9f38:	str	r0, [fp, #-12]
    9f3c:	ldr	r0, [fp, #-16]
    9f40:	sub	r0, r0, #0
    9f44:	and	r0, r0, #3
    9f48:	cmp	r0, #0
    9f4c:	beq	9fa8 <rb_sha256_crypt_r+0x270>
    9f50:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    9f54:	add	r0, r0, #11
    9f58:	bic	r0, r0, #7
    9f5c:	mov	r1, sp
    9f60:	sub	r0, r1, r0
    9f64:	mov	sp, r0
    9f68:	str	r0, [fp, #-492]	; 0xfffffe14
    9f6c:	ldr	r0, [fp, #-492]	; 0xfffffe14
    9f70:	add	r0, r0, #4
    9f74:	ldr	r1, [fp, #-492]	; 0xfffffe14
    9f78:	sub	r1, r1, #0
    9f7c:	and	r1, r1, #3
    9f80:	movw	r2, #0
    9f84:	sub	r1, r2, r1
    9f88:	add	r0, r0, r1
    9f8c:	ldr	r1, [fp, #-16]
    9f90:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    9f94:	str	r0, [fp, #-608]	; 0xfffffda0
    9f98:	bl	51dc <memcpy@plt>
    9f9c:	ldr	r0, [fp, #-608]	; 0xfffffda0
    9fa0:	str	r0, [fp, #-456]	; 0xfffffe38
    9fa4:	str	r0, [fp, #-16]
    9fa8:	sub	r0, fp, #260	; 0x104
    9fac:	bl	afe0 <rb_sha256_init_ctx>
    9fb0:	ldr	r0, [fp, #-12]
    9fb4:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9fb8:	sub	r2, fp, #260	; 0x104
    9fbc:	bl	b094 <rb_sha256_process_bytes>
    9fc0:	ldr	r0, [fp, #-16]
    9fc4:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    9fc8:	sub	r2, fp, #260	; 0x104
    9fcc:	bl	b094 <rb_sha256_process_bytes>
    9fd0:	sub	r0, fp, #432	; 0x1b0
    9fd4:	bl	afe0 <rb_sha256_init_ctx>
    9fd8:	ldr	r0, [fp, #-12]
    9fdc:	ldr	r1, [fp, #-440]	; 0xfffffe48
    9fe0:	sub	r2, fp, #432	; 0x1b0
    9fe4:	bl	b094 <rb_sha256_process_bytes>
    9fe8:	ldr	r0, [fp, #-16]
    9fec:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    9ff0:	sub	r2, fp, #432	; 0x1b0
    9ff4:	bl	b094 <rb_sha256_process_bytes>
    9ff8:	ldr	r0, [fp, #-12]
    9ffc:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a000:	sub	r2, fp, #432	; 0x1b0
    a004:	bl	b094 <rb_sha256_process_bytes>
    a008:	sub	r1, fp, #56	; 0x38
    a00c:	sub	r0, fp, #432	; 0x1b0
    a010:	bl	b320 <rb_sha256_finish_ctx>
    a014:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a018:	str	r1, [fp, #-444]	; 0xfffffe44
    a01c:	str	r0, [fp, #-612]	; 0xfffffd9c
    a020:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a024:	cmp	r0, #32
    a028:	bls	a04c <rb_sha256_crypt_r+0x314>
    a02c:	sub	r0, fp, #56	; 0x38
    a030:	movw	r1, #32
    a034:	sub	r2, fp, #260	; 0x104
    a038:	bl	b094 <rb_sha256_process_bytes>
    a03c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a040:	sub	r0, r0, #32
    a044:	str	r0, [fp, #-444]	; 0xfffffe44
    a048:	b	a020 <rb_sha256_crypt_r+0x2e8>
    a04c:	sub	r0, fp, #56	; 0x38
    a050:	ldr	r1, [fp, #-444]	; 0xfffffe44
    a054:	sub	r2, fp, #260	; 0x104
    a058:	bl	b094 <rb_sha256_process_bytes>
    a05c:	ldr	r0, [fp, #-440]	; 0xfffffe48
    a060:	str	r0, [fp, #-444]	; 0xfffffe44
    a064:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a068:	cmp	r0, #0
    a06c:	bls	a0b8 <rb_sha256_crypt_r+0x380>
    a070:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a074:	and	r0, r0, #1
    a078:	cmp	r0, #0
    a07c:	beq	a094 <rb_sha256_crypt_r+0x35c>
    a080:	sub	r0, fp, #56	; 0x38
    a084:	movw	r1, #32
    a088:	sub	r2, fp, #260	; 0x104
    a08c:	bl	b094 <rb_sha256_process_bytes>
    a090:	b	a0a4 <rb_sha256_crypt_r+0x36c>
    a094:	ldr	r0, [fp, #-12]
    a098:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a09c:	sub	r2, fp, #260	; 0x104
    a0a0:	bl	b094 <rb_sha256_process_bytes>
    a0a4:	b	a0a8 <rb_sha256_crypt_r+0x370>
    a0a8:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a0ac:	lsr	r0, r0, #1
    a0b0:	str	r0, [fp, #-444]	; 0xfffffe44
    a0b4:	b	a064 <rb_sha256_crypt_r+0x32c>
    a0b8:	sub	r1, fp, #56	; 0x38
    a0bc:	sub	r0, fp, #260	; 0x104
    a0c0:	bl	b320 <rb_sha256_finish_ctx>
    a0c4:	sub	r1, fp, #432	; 0x1b0
    a0c8:	str	r0, [fp, #-616]	; 0xfffffd98
    a0cc:	mov	r0, r1
    a0d0:	bl	afe0 <rb_sha256_init_ctx>
    a0d4:	movw	r0, #0
    a0d8:	str	r0, [fp, #-444]	; 0xfffffe44
    a0dc:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a0e0:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a0e4:	cmp	r0, r1
    a0e8:	bcs	a10c <rb_sha256_crypt_r+0x3d4>
    a0ec:	ldr	r0, [fp, #-12]
    a0f0:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a0f4:	sub	r2, fp, #432	; 0x1b0
    a0f8:	bl	b094 <rb_sha256_process_bytes>
    a0fc:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a100:	add	r0, r0, #1
    a104:	str	r0, [fp, #-444]	; 0xfffffe44
    a108:	b	a0dc <rb_sha256_crypt_r+0x3a4>
    a10c:	sub	r0, fp, #432	; 0x1b0
    a110:	sub	r1, fp, #88	; 0x58
    a114:	bl	b320 <rb_sha256_finish_ctx>
    a118:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a11c:	add	r1, r1, #7
    a120:	bic	r1, r1, #7
    a124:	mov	lr, sp
    a128:	sub	r1, lr, r1
    a12c:	mov	sp, r1
    a130:	str	r1, [fp, #-460]	; 0xfffffe34
    a134:	str	r1, [fp, #-448]	; 0xfffffe40
    a138:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a13c:	str	r1, [fp, #-444]	; 0xfffffe44
    a140:	str	r0, [fp, #-620]	; 0xfffffd94
    a144:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a148:	cmp	r0, #32
    a14c:	bcc	a17c <rb_sha256_crypt_r+0x444>
    a150:	sub	r1, fp, #88	; 0x58
    a154:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a158:	movw	r2, #32
    a15c:	bl	51dc <memcpy@plt>
    a160:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a164:	add	r0, r0, #32
    a168:	str	r0, [fp, #-448]	; 0xfffffe40
    a16c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a170:	sub	r0, r0, #32
    a174:	str	r0, [fp, #-444]	; 0xfffffe44
    a178:	b	a144 <rb_sha256_crypt_r+0x40c>
    a17c:	sub	r1, fp, #88	; 0x58
    a180:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a184:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a188:	bl	51dc <memcpy@plt>
    a18c:	sub	r0, fp, #432	; 0x1b0
    a190:	bl	afe0 <rb_sha256_init_ctx>
    a194:	movw	r0, #0
    a198:	str	r0, [fp, #-444]	; 0xfffffe44
    a19c:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a1a0:	ldrb	r1, [fp, #-56]	; 0xffffffc8
    a1a4:	add	r1, r1, #16
    a1a8:	cmp	r0, r1
    a1ac:	bcs	a1d0 <rb_sha256_crypt_r+0x498>
    a1b0:	ldr	r0, [fp, #-16]
    a1b4:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a1b8:	sub	r2, fp, #432	; 0x1b0
    a1bc:	bl	b094 <rb_sha256_process_bytes>
    a1c0:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a1c4:	add	r0, r0, #1
    a1c8:	str	r0, [fp, #-444]	; 0xfffffe44
    a1cc:	b	a19c <rb_sha256_crypt_r+0x464>
    a1d0:	sub	r0, fp, #432	; 0x1b0
    a1d4:	sub	r1, fp, #88	; 0x58
    a1d8:	bl	b320 <rb_sha256_finish_ctx>
    a1dc:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a1e0:	add	r1, r1, #7
    a1e4:	bic	r1, r1, #7
    a1e8:	mov	lr, sp
    a1ec:	sub	r1, lr, r1
    a1f0:	mov	sp, r1
    a1f4:	str	r1, [fp, #-464]	; 0xfffffe30
    a1f8:	str	r1, [fp, #-448]	; 0xfffffe40
    a1fc:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a200:	str	r1, [fp, #-444]	; 0xfffffe44
    a204:	str	r0, [fp, #-624]	; 0xfffffd90
    a208:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a20c:	cmp	r0, #32
    a210:	bcc	a240 <rb_sha256_crypt_r+0x508>
    a214:	sub	r1, fp, #88	; 0x58
    a218:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a21c:	movw	r2, #32
    a220:	bl	51dc <memcpy@plt>
    a224:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a228:	add	r0, r0, #32
    a22c:	str	r0, [fp, #-448]	; 0xfffffe40
    a230:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a234:	sub	r0, r0, #32
    a238:	str	r0, [fp, #-444]	; 0xfffffe44
    a23c:	b	a208 <rb_sha256_crypt_r+0x4d0>
    a240:	sub	r1, fp, #88	; 0x58
    a244:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a248:	ldr	r2, [fp, #-444]	; 0xfffffe44
    a24c:	bl	51dc <memcpy@plt>
    a250:	movw	r0, #0
    a254:	str	r0, [fp, #-444]	; 0xfffffe44
    a258:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a25c:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    a260:	cmp	r0, r1
    a264:	bcs	a374 <rb_sha256_crypt_r+0x63c>
    a268:	sub	r0, fp, #260	; 0x104
    a26c:	bl	afe0 <rb_sha256_init_ctx>
    a270:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a274:	and	r0, r0, #1
    a278:	cmp	r0, #0
    a27c:	beq	a294 <rb_sha256_crypt_r+0x55c>
    a280:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a284:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a288:	sub	r2, fp, #260	; 0x104
    a28c:	bl	b094 <rb_sha256_process_bytes>
    a290:	b	a2a4 <rb_sha256_crypt_r+0x56c>
    a294:	sub	r0, fp, #56	; 0x38
    a298:	movw	r1, #32
    a29c:	sub	r2, fp, #260	; 0x104
    a2a0:	bl	b094 <rb_sha256_process_bytes>
    a2a4:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a2a8:	movw	r1, #43691	; 0xaaab
    a2ac:	movt	r1, #43690	; 0xaaaa
    a2b0:	umull	r1, r2, r0, r1
    a2b4:	lsr	r2, r2, #1
    a2b8:	add	r2, r2, r2, lsl #1
    a2bc:	sub	r0, r0, r2
    a2c0:	cmp	r0, #0
    a2c4:	str	r1, [fp, #-628]	; 0xfffffd8c
    a2c8:	beq	a2dc <rb_sha256_crypt_r+0x5a4>
    a2cc:	ldr	r0, [fp, #-464]	; 0xfffffe30
    a2d0:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a2d4:	sub	r2, fp, #260	; 0x104
    a2d8:	bl	b094 <rb_sha256_process_bytes>
    a2dc:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a2e0:	movw	r1, #18725	; 0x4925
    a2e4:	movt	r1, #9362	; 0x2492
    a2e8:	umull	r1, r2, r0, r1
    a2ec:	sub	r3, r0, r2
    a2f0:	add	r2, r2, r3, lsr #1
    a2f4:	lsr	r3, r2, #2
    a2f8:	lsl	r3, r3, #3
    a2fc:	sub	r2, r3, r2, lsr #2
    a300:	sub	r0, r0, r2
    a304:	cmp	r0, #0
    a308:	str	r1, [fp, #-632]	; 0xfffffd88
    a30c:	beq	a320 <rb_sha256_crypt_r+0x5e8>
    a310:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a314:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a318:	sub	r2, fp, #260	; 0x104
    a31c:	bl	b094 <rb_sha256_process_bytes>
    a320:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a324:	and	r0, r0, #1
    a328:	cmp	r0, #0
    a32c:	beq	a344 <rb_sha256_crypt_r+0x60c>
    a330:	sub	r0, fp, #56	; 0x38
    a334:	movw	r1, #32
    a338:	sub	r2, fp, #260	; 0x104
    a33c:	bl	b094 <rb_sha256_process_bytes>
    a340:	b	a354 <rb_sha256_crypt_r+0x61c>
    a344:	ldr	r0, [fp, #-460]	; 0xfffffe34
    a348:	ldr	r1, [fp, #-440]	; 0xfffffe48
    a34c:	sub	r2, fp, #260	; 0x104
    a350:	bl	b094 <rb_sha256_process_bytes>
    a354:	sub	r1, fp, #56	; 0x38
    a358:	sub	r0, fp, #260	; 0x104
    a35c:	bl	b320 <rb_sha256_finish_ctx>
    a360:	str	r0, [fp, #-636]	; 0xfffffd84
    a364:	ldr	r0, [fp, #-444]	; 0xfffffe44
    a368:	add	r0, r0, #1
    a36c:	str	r0, [fp, #-444]	; 0xfffffe44
    a370:	b	a258 <rb_sha256_crypt_r+0x520>
    a374:	ldr	r0, [fp, #-20]	; 0xffffffec
    a378:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a37c:	movw	r2, #0
    a380:	cmp	r2, r1
    a384:	str	r0, [fp, #-640]	; 0xfffffd80
    a388:	ble	a398 <rb_sha256_crypt_r+0x660>
    a38c:	movw	r0, #0
    a390:	str	r0, [fp, #-644]	; 0xfffffd7c
    a394:	b	a3a0 <rb_sha256_crypt_r+0x668>
    a398:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a39c:	str	r0, [fp, #-644]	; 0xfffffd7c
    a3a0:	ldr	r0, [fp, #-644]	; 0xfffffd7c
    a3a4:	ldr	r1, [fp, #-640]	; 0xfffffd80
    a3a8:	str	r0, [fp, #-648]	; 0xfffffd78
    a3ac:	mov	r0, r1
    a3b0:	movw	r2, #0
    a3b4:	and	r1, r2, #255	; 0xff
    a3b8:	ldr	r2, [fp, #-648]	; 0xfffffd78
    a3bc:	bl	4ff0 <memset@plt>
    a3c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a3c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a3c8:	movw	r2, #0
    a3cc:	cmp	r2, r1
    a3d0:	str	r0, [fp, #-652]	; 0xfffffd74
    a3d4:	ble	a3e4 <rb_sha256_crypt_r+0x6ac>
    a3d8:	movw	r0, #0
    a3dc:	str	r0, [fp, #-656]	; 0xfffffd70
    a3e0:	b	a3ec <rb_sha256_crypt_r+0x6b4>
    a3e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a3e8:	str	r0, [fp, #-656]	; 0xfffffd70
    a3ec:	ldr	r0, [fp, #-656]	; 0xfffffd70
    a3f0:	ldr	r1, [pc, #2992]	; afa8 <rb_sha256_crypt_r+0x1270>
    a3f4:	add	r1, pc, r1
    a3f8:	ldr	r2, [fp, #-652]	; 0xfffffd74
    a3fc:	str	r0, [fp, #-660]	; 0xfffffd6c
    a400:	mov	r0, r2
    a404:	ldr	r2, [fp, #-660]	; 0xfffffd6c
    a408:	bl	4f3c <strncpy@plt>
    a40c:	ldr	r1, [fp, #-20]	; 0xffffffec
    a410:	str	r0, [fp, #-664]	; 0xfffffd68
    a414:	mov	r0, r1
    a418:	movw	r1, #0
    a41c:	bl	4f78 <strchr@plt>
    a420:	str	r0, [fp, #-448]	; 0xfffffe40
    a424:	movw	r1, #0
    a428:	cmp	r0, r1
    a42c:	bne	a46c <rb_sha256_crypt_r+0x734>
    a430:	ldr	r0, [fp, #-20]	; 0xffffffec
    a434:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a438:	movw	r2, #0
    a43c:	cmp	r2, r1
    a440:	str	r0, [fp, #-668]	; 0xfffffd64
    a444:	ble	a454 <rb_sha256_crypt_r+0x71c>
    a448:	movw	r0, #0
    a44c:	str	r0, [fp, #-672]	; 0xfffffd60
    a450:	b	a45c <rb_sha256_crypt_r+0x724>
    a454:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a458:	str	r0, [fp, #-672]	; 0xfffffd60
    a45c:	ldr	r0, [fp, #-672]	; 0xfffffd60
    a460:	ldr	r1, [fp, #-668]	; 0xfffffd64
    a464:	add	r0, r1, r0
    a468:	str	r0, [fp, #-448]	; 0xfffffe40
    a46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a470:	sub	r0, r0, #3
    a474:	str	r0, [fp, #-24]	; 0xffffffe8
    a478:	ldr	r0, [fp, #-472]	; 0xfffffe28
    a47c:	cmp	r0, #0
    a480:	beq	a518 <rb_sha256_crypt_r+0x7e0>
    a484:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a488:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a48c:	movw	r2, #0
    a490:	cmp	r2, r1
    a494:	str	r0, [fp, #-676]	; 0xfffffd5c
    a498:	ble	a4a8 <rb_sha256_crypt_r+0x770>
    a49c:	movw	r0, #0
    a4a0:	str	r0, [fp, #-680]	; 0xfffffd58
    a4a4:	b	a4b0 <rb_sha256_crypt_r+0x778>
    a4a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a4ac:	str	r0, [fp, #-680]	; 0xfffffd58
    a4b0:	ldr	r0, [fp, #-680]	; 0xfffffd58
    a4b4:	ldr	r1, [pc, #2800]	; afac <rb_sha256_crypt_r+0x1274>
    a4b8:	add	r2, pc, r1
    a4bc:	ldr	r1, [pc, #2796]	; afb0 <rb_sha256_crypt_r+0x1278>
    a4c0:	add	r3, pc, r1
    a4c4:	ldr	r1, [fp, #-468]	; 0xfffffe2c
    a4c8:	sub	sp, sp, #8
    a4cc:	ldr	ip, [fp, #-676]	; 0xfffffd5c
    a4d0:	str	r0, [fp, #-684]	; 0xfffffd54
    a4d4:	mov	r0, ip
    a4d8:	ldr	lr, [fp, #-684]	; 0xfffffd54
    a4dc:	str	r1, [fp, #-688]	; 0xfffffd50
    a4e0:	mov	r1, lr
    a4e4:	ldr	r4, [fp, #-688]	; 0xfffffd50
    a4e8:	str	r4, [sp]
    a4ec:	bl	5584 <snprintf@plt>
    a4f0:	add	sp, sp, #8
    a4f4:	str	r0, [fp, #-496]	; 0xfffffe10
    a4f8:	ldr	r0, [fp, #-496]	; 0xfffffe10
    a4fc:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a500:	add	r0, r1, r0
    a504:	str	r0, [fp, #-448]	; 0xfffffe40
    a508:	ldr	r0, [fp, #-496]	; 0xfffffe10
    a50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a510:	sub	r0, r1, r0
    a514:	str	r0, [fp, #-24]	; 0xffffffe8
    a518:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a51c:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    a520:	movw	r1, #0
    a524:	and	r1, r1, #255	; 0xff
    a528:	bl	4ff0 <memset@plt>
    a52c:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a530:	ldr	r1, [fp, #-16]
    a534:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a538:	movw	lr, #0
    a53c:	cmp	lr, r2
    a540:	str	r0, [fp, #-692]	; 0xfffffd4c
    a544:	str	r1, [fp, #-696]	; 0xfffffd48
    a548:	ble	a558 <rb_sha256_crypt_r+0x820>
    a54c:	movw	r0, #0
    a550:	str	r0, [fp, #-700]	; 0xfffffd44
    a554:	b	a560 <rb_sha256_crypt_r+0x828>
    a558:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a55c:	str	r0, [fp, #-700]	; 0xfffffd44
    a560:	ldr	r0, [fp, #-700]	; 0xfffffd44
    a564:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a568:	cmp	r0, r1
    a56c:	bcs	a5a0 <rb_sha256_crypt_r+0x868>
    a570:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a574:	movw	r1, #0
    a578:	cmp	r1, r0
    a57c:	ble	a58c <rb_sha256_crypt_r+0x854>
    a580:	movw	r0, #0
    a584:	str	r0, [fp, #-704]	; 0xfffffd40
    a588:	b	a594 <rb_sha256_crypt_r+0x85c>
    a58c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a590:	str	r0, [fp, #-704]	; 0xfffffd40
    a594:	ldr	r0, [fp, #-704]	; 0xfffffd40
    a598:	str	r0, [fp, #-708]	; 0xfffffd3c
    a59c:	b	a5a8 <rb_sha256_crypt_r+0x870>
    a5a0:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a5a4:	str	r0, [fp, #-708]	; 0xfffffd3c
    a5a8:	ldr	r0, [fp, #-708]	; 0xfffffd3c
    a5ac:	ldr	r1, [fp, #-692]	; 0xfffffd4c
    a5b0:	str	r0, [fp, #-712]	; 0xfffffd38
    a5b4:	mov	r0, r1
    a5b8:	ldr	r1, [fp, #-696]	; 0xfffffd48
    a5bc:	ldr	r2, [fp, #-712]	; 0xfffffd38
    a5c0:	bl	4f3c <strncpy@plt>
    a5c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    a5c8:	str	r0, [fp, #-716]	; 0xfffffd34
    a5cc:	mov	r0, r1
    a5d0:	movw	r1, #0
    a5d4:	bl	4f78 <strchr@plt>
    a5d8:	str	r0, [fp, #-448]	; 0xfffffe40
    a5dc:	movw	r1, #0
    a5e0:	cmp	r0, r1
    a5e4:	bne	a5f8 <rb_sha256_crypt_r+0x8c0>
    a5e8:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a5ec:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a5f0:	add	r0, r1, r0
    a5f4:	str	r0, [fp, #-448]	; 0xfffffe40
    a5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5fc:	movw	r1, #0
    a600:	cmp	r1, r0
    a604:	ble	a614 <rb_sha256_crypt_r+0x8dc>
    a608:	movw	r0, #0
    a60c:	str	r0, [fp, #-720]	; 0xfffffd30
    a610:	b	a61c <rb_sha256_crypt_r+0x8e4>
    a614:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a618:	str	r0, [fp, #-720]	; 0xfffffd30
    a61c:	ldr	r0, [fp, #-720]	; 0xfffffd30
    a620:	ldr	r1, [fp, #-436]	; 0xfffffe4c
    a624:	cmp	r0, r1
    a628:	bcs	a65c <rb_sha256_crypt_r+0x924>
    a62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a630:	movw	r1, #0
    a634:	cmp	r1, r0
    a638:	ble	a648 <rb_sha256_crypt_r+0x910>
    a63c:	movw	r0, #0
    a640:	str	r0, [fp, #-724]	; 0xfffffd2c
    a644:	b	a650 <rb_sha256_crypt_r+0x918>
    a648:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a64c:	str	r0, [fp, #-724]	; 0xfffffd2c
    a650:	ldr	r0, [fp, #-724]	; 0xfffffd2c
    a654:	str	r0, [fp, #-728]	; 0xfffffd28
    a658:	b	a664 <rb_sha256_crypt_r+0x92c>
    a65c:	ldr	r0, [fp, #-436]	; 0xfffffe4c
    a660:	str	r0, [fp, #-728]	; 0xfffffd28
    a664:	ldr	r0, [fp, #-728]	; 0xfffffd28
    a668:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a66c:	sub	r0, r1, r0
    a670:	str	r0, [fp, #-24]	; 0xffffffe8
    a674:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a678:	cmp	r0, #0
    a67c:	ble	a6a4 <rb_sha256_crypt_r+0x96c>
    a680:	ldr	r0, [fp, #-448]	; 0xfffffe40
    a684:	add	r1, r0, #1
    a688:	str	r1, [fp, #-448]	; 0xfffffe40
    a68c:	movw	r1, #36	; 0x24
    a690:	strb	r1, [r0]
    a694:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a698:	mvn	r1, #0
    a69c:	add	r0, r0, r1
    a6a0:	str	r0, [fp, #-24]	; 0xffffffe8
    a6a4:	b	a6a8 <rb_sha256_crypt_r+0x970>
    a6a8:	ldrb	r0, [fp, #-56]	; 0xffffffc8
    a6ac:	lsl	r0, r0, #16
    a6b0:	ldrb	r1, [fp, #-46]	; 0xffffffd2
    a6b4:	lsl	r1, r1, #8
    a6b8:	orr	r0, r0, r1
    a6bc:	ldrb	r1, [fp, #-36]	; 0xffffffdc
    a6c0:	orr	r0, r0, r1
    a6c4:	str	r0, [fp, #-500]	; 0xfffffe0c
    a6c8:	movw	r0, #4
    a6cc:	str	r0, [fp, #-504]	; 0xfffffe08
    a6d0:	ldr	r0, [fp, #-504]	; 0xfffffe08
    a6d4:	mvn	r1, #0
    a6d8:	add	r1, r0, r1
    a6dc:	str	r1, [fp, #-504]	; 0xfffffe08
    a6e0:	cmp	r0, #0
    a6e4:	movw	r0, #0
    a6e8:	str	r0, [fp, #-732]	; 0xfffffd24
    a6ec:	ble	a704 <rb_sha256_crypt_r+0x9cc>
    a6f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a6f4:	cmp	r0, #0
    a6f8:	movw	r0, #0
    a6fc:	movgt	r0, #1
    a700:	str	r0, [fp, #-732]	; 0xfffffd24
    a704:	ldr	r0, [fp, #-732]	; 0xfffffd24
    a708:	tst	r0, #1
    a70c:	beq	a758 <rb_sha256_crypt_r+0xa20>
    a710:	ldr	r0, [pc, #2244]	; afdc <rb_sha256_crypt_r+0x12a4>
    a714:	add	r0, pc, r0
    a718:	ldr	r1, [fp, #-500]	; 0xfffffe0c
    a71c:	and	r1, r1, #63	; 0x3f
    a720:	add	r0, r0, r1
    a724:	ldrb	r0, [r0]
    a728:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a72c:	add	r2, r1, #1
    a730:	str	r2, [fp, #-448]	; 0xfffffe40
    a734:	strb	r0, [r1]
    a738:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a73c:	mvn	r1, #0
    a740:	add	r0, r0, r1
    a744:	str	r0, [fp, #-24]	; 0xffffffe8
    a748:	ldr	r0, [fp, #-500]	; 0xfffffe0c
    a74c:	lsr	r0, r0, #6
    a750:	str	r0, [fp, #-500]	; 0xfffffe0c
    a754:	b	a6d0 <rb_sha256_crypt_r+0x998>
    a758:	b	a75c <rb_sha256_crypt_r+0xa24>
    a75c:	b	a760 <rb_sha256_crypt_r+0xa28>
    a760:	ldrb	r0, [fp, #-35]	; 0xffffffdd
    a764:	lsl	r0, r0, #16
    a768:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    a76c:	lsl	r1, r1, #8
    a770:	orr	r0, r0, r1
    a774:	ldrb	r1, [fp, #-45]	; 0xffffffd3
    a778:	orr	r0, r0, r1
    a77c:	str	r0, [fp, #-508]	; 0xfffffe04
    a780:	movw	r0, #4
    a784:	str	r0, [fp, #-512]	; 0xfffffe00
    a788:	ldr	r0, [fp, #-512]	; 0xfffffe00
    a78c:	mvn	r1, #0
    a790:	add	r1, r0, r1
    a794:	str	r1, [fp, #-512]	; 0xfffffe00
    a798:	cmp	r0, #0
    a79c:	movw	r0, #0
    a7a0:	str	r0, [fp, #-736]	; 0xfffffd20
    a7a4:	ble	a7bc <rb_sha256_crypt_r+0xa84>
    a7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a7ac:	cmp	r0, #0
    a7b0:	movw	r0, #0
    a7b4:	movgt	r0, #1
    a7b8:	str	r0, [fp, #-736]	; 0xfffffd20
    a7bc:	ldr	r0, [fp, #-736]	; 0xfffffd20
    a7c0:	tst	r0, #1
    a7c4:	beq	a810 <rb_sha256_crypt_r+0xad8>
    a7c8:	ldr	r0, [pc, #2056]	; afd8 <rb_sha256_crypt_r+0x12a0>
    a7cc:	add	r0, pc, r0
    a7d0:	ldr	r1, [fp, #-508]	; 0xfffffe04
    a7d4:	and	r1, r1, #63	; 0x3f
    a7d8:	add	r0, r0, r1
    a7dc:	ldrb	r0, [r0]
    a7e0:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a7e4:	add	r2, r1, #1
    a7e8:	str	r2, [fp, #-448]	; 0xfffffe40
    a7ec:	strb	r0, [r1]
    a7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a7f4:	mvn	r1, #0
    a7f8:	add	r0, r0, r1
    a7fc:	str	r0, [fp, #-24]	; 0xffffffe8
    a800:	ldr	r0, [fp, #-508]	; 0xfffffe04
    a804:	lsr	r0, r0, #6
    a808:	str	r0, [fp, #-508]	; 0xfffffe04
    a80c:	b	a788 <rb_sha256_crypt_r+0xa50>
    a810:	b	a814 <rb_sha256_crypt_r+0xadc>
    a814:	b	a818 <rb_sha256_crypt_r+0xae0>
    a818:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    a81c:	lsl	r0, r0, #16
    a820:	ldrb	r1, [fp, #-34]	; 0xffffffde
    a824:	lsl	r1, r1, #8
    a828:	orr	r0, r0, r1
    a82c:	ldrb	r1, [fp, #-54]	; 0xffffffca
    a830:	orr	r0, r0, r1
    a834:	str	r0, [fp, #-516]	; 0xfffffdfc
    a838:	movw	r0, #4
    a83c:	str	r0, [fp, #-520]	; 0xfffffdf8
    a840:	ldr	r0, [fp, #-520]	; 0xfffffdf8
    a844:	mvn	r1, #0
    a848:	add	r1, r0, r1
    a84c:	str	r1, [fp, #-520]	; 0xfffffdf8
    a850:	cmp	r0, #0
    a854:	movw	r0, #0
    a858:	str	r0, [fp, #-740]	; 0xfffffd1c
    a85c:	ble	a874 <rb_sha256_crypt_r+0xb3c>
    a860:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a864:	cmp	r0, #0
    a868:	movw	r0, #0
    a86c:	movgt	r0, #1
    a870:	str	r0, [fp, #-740]	; 0xfffffd1c
    a874:	ldr	r0, [fp, #-740]	; 0xfffffd1c
    a878:	tst	r0, #1
    a87c:	beq	a8c8 <rb_sha256_crypt_r+0xb90>
    a880:	ldr	r0, [pc, #1868]	; afd4 <rb_sha256_crypt_r+0x129c>
    a884:	add	r0, pc, r0
    a888:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    a88c:	and	r1, r1, #63	; 0x3f
    a890:	add	r0, r0, r1
    a894:	ldrb	r0, [r0]
    a898:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a89c:	add	r2, r1, #1
    a8a0:	str	r2, [fp, #-448]	; 0xfffffe40
    a8a4:	strb	r0, [r1]
    a8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a8ac:	mvn	r1, #0
    a8b0:	add	r0, r0, r1
    a8b4:	str	r0, [fp, #-24]	; 0xffffffe8
    a8b8:	ldr	r0, [fp, #-516]	; 0xfffffdfc
    a8bc:	lsr	r0, r0, #6
    a8c0:	str	r0, [fp, #-516]	; 0xfffffdfc
    a8c4:	b	a840 <rb_sha256_crypt_r+0xb08>
    a8c8:	b	a8cc <rb_sha256_crypt_r+0xb94>
    a8cc:	b	a8d0 <rb_sha256_crypt_r+0xb98>
    a8d0:	ldrb	r0, [fp, #-53]	; 0xffffffcb
    a8d4:	lsl	r0, r0, #16
    a8d8:	ldrb	r1, [fp, #-43]	; 0xffffffd5
    a8dc:	lsl	r1, r1, #8
    a8e0:	orr	r0, r0, r1
    a8e4:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    a8e8:	orr	r0, r0, r1
    a8ec:	str	r0, [fp, #-524]	; 0xfffffdf4
    a8f0:	movw	r0, #4
    a8f4:	str	r0, [fp, #-528]	; 0xfffffdf0
    a8f8:	ldr	r0, [fp, #-528]	; 0xfffffdf0
    a8fc:	mvn	r1, #0
    a900:	add	r1, r0, r1
    a904:	str	r1, [fp, #-528]	; 0xfffffdf0
    a908:	cmp	r0, #0
    a90c:	movw	r0, #0
    a910:	str	r0, [fp, #-744]	; 0xfffffd18
    a914:	ble	a92c <rb_sha256_crypt_r+0xbf4>
    a918:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a91c:	cmp	r0, #0
    a920:	movw	r0, #0
    a924:	movgt	r0, #1
    a928:	str	r0, [fp, #-744]	; 0xfffffd18
    a92c:	ldr	r0, [fp, #-744]	; 0xfffffd18
    a930:	tst	r0, #1
    a934:	beq	a980 <rb_sha256_crypt_r+0xc48>
    a938:	ldr	r0, [pc, #1680]	; afd0 <rb_sha256_crypt_r+0x1298>
    a93c:	add	r0, pc, r0
    a940:	ldr	r1, [fp, #-524]	; 0xfffffdf4
    a944:	and	r1, r1, #63	; 0x3f
    a948:	add	r0, r0, r1
    a94c:	ldrb	r0, [r0]
    a950:	ldr	r1, [fp, #-448]	; 0xfffffe40
    a954:	add	r2, r1, #1
    a958:	str	r2, [fp, #-448]	; 0xfffffe40
    a95c:	strb	r0, [r1]
    a960:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a964:	mvn	r1, #0
    a968:	add	r0, r0, r1
    a96c:	str	r0, [fp, #-24]	; 0xffffffe8
    a970:	ldr	r0, [fp, #-524]	; 0xfffffdf4
    a974:	lsr	r0, r0, #6
    a978:	str	r0, [fp, #-524]	; 0xfffffdf4
    a97c:	b	a8f8 <rb_sha256_crypt_r+0xbc0>
    a980:	b	a984 <rb_sha256_crypt_r+0xc4c>
    a984:	b	a988 <rb_sha256_crypt_r+0xc50>
    a988:	ldrb	r0, [fp, #-32]	; 0xffffffe0
    a98c:	lsl	r0, r0, #16
    a990:	ldrb	r1, [fp, #-52]	; 0xffffffcc
    a994:	lsl	r1, r1, #8
    a998:	orr	r0, r0, r1
    a99c:	ldrb	r1, [fp, #-42]	; 0xffffffd6
    a9a0:	orr	r0, r0, r1
    a9a4:	str	r0, [fp, #-532]	; 0xfffffdec
    a9a8:	movw	r0, #4
    a9ac:	str	r0, [fp, #-536]	; 0xfffffde8
    a9b0:	ldr	r0, [fp, #-536]	; 0xfffffde8
    a9b4:	mvn	r1, #0
    a9b8:	add	r1, r0, r1
    a9bc:	str	r1, [fp, #-536]	; 0xfffffde8
    a9c0:	cmp	r0, #0
    a9c4:	movw	r0, #0
    a9c8:	str	r0, [fp, #-748]	; 0xfffffd14
    a9cc:	ble	a9e4 <rb_sha256_crypt_r+0xcac>
    a9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a9d4:	cmp	r0, #0
    a9d8:	movw	r0, #0
    a9dc:	movgt	r0, #1
    a9e0:	str	r0, [fp, #-748]	; 0xfffffd14
    a9e4:	ldr	r0, [fp, #-748]	; 0xfffffd14
    a9e8:	tst	r0, #1
    a9ec:	beq	aa38 <rb_sha256_crypt_r+0xd00>
    a9f0:	ldr	r0, [pc, #1492]	; afcc <rb_sha256_crypt_r+0x1294>
    a9f4:	add	r0, pc, r0
    a9f8:	ldr	r1, [fp, #-532]	; 0xfffffdec
    a9fc:	and	r1, r1, #63	; 0x3f
    aa00:	add	r0, r0, r1
    aa04:	ldrb	r0, [r0]
    aa08:	ldr	r1, [fp, #-448]	; 0xfffffe40
    aa0c:	add	r2, r1, #1
    aa10:	str	r2, [fp, #-448]	; 0xfffffe40
    aa14:	strb	r0, [r1]
    aa18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa1c:	mvn	r1, #0
    aa20:	add	r0, r0, r1
    aa24:	str	r0, [fp, #-24]	; 0xffffffe8
    aa28:	ldr	r0, [fp, #-532]	; 0xfffffdec
    aa2c:	lsr	r0, r0, #6
    aa30:	str	r0, [fp, #-532]	; 0xfffffdec
    aa34:	b	a9b0 <rb_sha256_crypt_r+0xc78>
    aa38:	b	aa3c <rb_sha256_crypt_r+0xd04>
    aa3c:	b	aa40 <rb_sha256_crypt_r+0xd08>
    aa40:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    aa44:	lsl	r0, r0, #16
    aa48:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    aa4c:	lsl	r1, r1, #8
    aa50:	orr	r0, r0, r1
    aa54:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    aa58:	orr	r0, r0, r1
    aa5c:	str	r0, [fp, #-540]	; 0xfffffde4
    aa60:	movw	r0, #4
    aa64:	str	r0, [fp, #-544]	; 0xfffffde0
    aa68:	ldr	r0, [fp, #-544]	; 0xfffffde0
    aa6c:	mvn	r1, #0
    aa70:	add	r1, r0, r1
    aa74:	str	r1, [fp, #-544]	; 0xfffffde0
    aa78:	cmp	r0, #0
    aa7c:	movw	r0, #0
    aa80:	str	r0, [fp, #-752]	; 0xfffffd10
    aa84:	ble	aa9c <rb_sha256_crypt_r+0xd64>
    aa88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aa8c:	cmp	r0, #0
    aa90:	movw	r0, #0
    aa94:	movgt	r0, #1
    aa98:	str	r0, [fp, #-752]	; 0xfffffd10
    aa9c:	ldr	r0, [fp, #-752]	; 0xfffffd10
    aaa0:	tst	r0, #1
    aaa4:	beq	aaf0 <rb_sha256_crypt_r+0xdb8>
    aaa8:	ldr	r0, [pc, #1304]	; afc8 <rb_sha256_crypt_r+0x1290>
    aaac:	add	r0, pc, r0
    aab0:	ldr	r1, [fp, #-540]	; 0xfffffde4
    aab4:	and	r1, r1, #63	; 0x3f
    aab8:	add	r0, r0, r1
    aabc:	ldrb	r0, [r0]
    aac0:	ldr	r1, [fp, #-448]	; 0xfffffe40
    aac4:	add	r2, r1, #1
    aac8:	str	r2, [fp, #-448]	; 0xfffffe40
    aacc:	strb	r0, [r1]
    aad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    aad4:	mvn	r1, #0
    aad8:	add	r0, r0, r1
    aadc:	str	r0, [fp, #-24]	; 0xffffffe8
    aae0:	ldr	r0, [fp, #-540]	; 0xfffffde4
    aae4:	lsr	r0, r0, #6
    aae8:	str	r0, [fp, #-540]	; 0xfffffde4
    aaec:	b	aa68 <rb_sha256_crypt_r+0xd30>
    aaf0:	b	aaf4 <rb_sha256_crypt_r+0xdbc>
    aaf4:	b	aaf8 <rb_sha256_crypt_r+0xdc0>
    aaf8:	ldrb	r0, [fp, #-50]	; 0xffffffce
    aafc:	lsl	r0, r0, #16
    ab00:	ldrb	r1, [fp, #-40]	; 0xffffffd8
    ab04:	lsl	r1, r1, #8
    ab08:	orr	r0, r0, r1
    ab0c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
    ab10:	orr	r0, r0, r1
    ab14:	str	r0, [fp, #-548]	; 0xfffffddc
    ab18:	movw	r0, #4
    ab1c:	str	r0, [fp, #-552]	; 0xfffffdd8
    ab20:	ldr	r0, [fp, #-552]	; 0xfffffdd8
    ab24:	mvn	r1, #0
    ab28:	add	r1, r0, r1
    ab2c:	str	r1, [fp, #-552]	; 0xfffffdd8
    ab30:	cmp	r0, #0
    ab34:	movw	r0, #0
    ab38:	str	r0, [fp, #-756]	; 0xfffffd0c
    ab3c:	ble	ab54 <rb_sha256_crypt_r+0xe1c>
    ab40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab44:	cmp	r0, #0
    ab48:	movw	r0, #0
    ab4c:	movgt	r0, #1
    ab50:	str	r0, [fp, #-756]	; 0xfffffd0c
    ab54:	ldr	r0, [fp, #-756]	; 0xfffffd0c
    ab58:	tst	r0, #1
    ab5c:	beq	aba8 <rb_sha256_crypt_r+0xe70>
    ab60:	ldr	r0, [pc, #1116]	; afc4 <rb_sha256_crypt_r+0x128c>
    ab64:	add	r0, pc, r0
    ab68:	ldr	r1, [fp, #-548]	; 0xfffffddc
    ab6c:	and	r1, r1, #63	; 0x3f
    ab70:	add	r0, r0, r1
    ab74:	ldrb	r0, [r0]
    ab78:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ab7c:	add	r2, r1, #1
    ab80:	str	r2, [fp, #-448]	; 0xfffffe40
    ab84:	strb	r0, [r1]
    ab88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab8c:	mvn	r1, #0
    ab90:	add	r0, r0, r1
    ab94:	str	r0, [fp, #-24]	; 0xffffffe8
    ab98:	ldr	r0, [fp, #-548]	; 0xfffffddc
    ab9c:	lsr	r0, r0, #6
    aba0:	str	r0, [fp, #-548]	; 0xfffffddc
    aba4:	b	ab20 <rb_sha256_crypt_r+0xde8>
    aba8:	b	abac <rb_sha256_crypt_r+0xe74>
    abac:	b	abb0 <rb_sha256_crypt_r+0xe78>
    abb0:	ldrb	r0, [fp, #-29]	; 0xffffffe3
    abb4:	lsl	r0, r0, #16
    abb8:	ldrb	r1, [fp, #-49]	; 0xffffffcf
    abbc:	lsl	r1, r1, #8
    abc0:	orr	r0, r0, r1
    abc4:	ldrb	r1, [fp, #-39]	; 0xffffffd9
    abc8:	orr	r0, r0, r1
    abcc:	str	r0, [fp, #-556]	; 0xfffffdd4
    abd0:	movw	r0, #4
    abd4:	str	r0, [fp, #-560]	; 0xfffffdd0
    abd8:	ldr	r0, [fp, #-560]	; 0xfffffdd0
    abdc:	mvn	r1, #0
    abe0:	add	r1, r0, r1
    abe4:	str	r1, [fp, #-560]	; 0xfffffdd0
    abe8:	cmp	r0, #0
    abec:	movw	r0, #0
    abf0:	str	r0, [fp, #-760]	; 0xfffffd08
    abf4:	ble	ac0c <rb_sha256_crypt_r+0xed4>
    abf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    abfc:	cmp	r0, #0
    ac00:	movw	r0, #0
    ac04:	movgt	r0, #1
    ac08:	str	r0, [fp, #-760]	; 0xfffffd08
    ac0c:	ldr	r0, [fp, #-760]	; 0xfffffd08
    ac10:	tst	r0, #1
    ac14:	beq	ac60 <rb_sha256_crypt_r+0xf28>
    ac18:	ldr	r0, [pc, #928]	; afc0 <rb_sha256_crypt_r+0x1288>
    ac1c:	add	r0, pc, r0
    ac20:	ldr	r1, [fp, #-556]	; 0xfffffdd4
    ac24:	and	r1, r1, #63	; 0x3f
    ac28:	add	r0, r0, r1
    ac2c:	ldrb	r0, [r0]
    ac30:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ac34:	add	r2, r1, #1
    ac38:	str	r2, [fp, #-448]	; 0xfffffe40
    ac3c:	strb	r0, [r1]
    ac40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ac44:	mvn	r1, #0
    ac48:	add	r0, r0, r1
    ac4c:	str	r0, [fp, #-24]	; 0xffffffe8
    ac50:	ldr	r0, [fp, #-556]	; 0xfffffdd4
    ac54:	lsr	r0, r0, #6
    ac58:	str	r0, [fp, #-556]	; 0xfffffdd4
    ac5c:	b	abd8 <rb_sha256_crypt_r+0xea0>
    ac60:	b	ac64 <rb_sha256_crypt_r+0xf2c>
    ac64:	b	ac68 <rb_sha256_crypt_r+0xf30>
    ac68:	ldrb	r0, [fp, #-38]	; 0xffffffda
    ac6c:	lsl	r0, r0, #16
    ac70:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    ac74:	lsl	r1, r1, #8
    ac78:	orr	r0, r0, r1
    ac7c:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    ac80:	orr	r0, r0, r1
    ac84:	str	r0, [fp, #-564]	; 0xfffffdcc
    ac88:	movw	r0, #4
    ac8c:	str	r0, [fp, #-568]	; 0xfffffdc8
    ac90:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    ac94:	mvn	r1, #0
    ac98:	add	r1, r0, r1
    ac9c:	str	r1, [fp, #-568]	; 0xfffffdc8
    aca0:	cmp	r0, #0
    aca4:	movw	r0, #0
    aca8:	str	r0, [fp, #-764]	; 0xfffffd04
    acac:	ble	acc4 <rb_sha256_crypt_r+0xf8c>
    acb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    acb4:	cmp	r0, #0
    acb8:	movw	r0, #0
    acbc:	movgt	r0, #1
    acc0:	str	r0, [fp, #-764]	; 0xfffffd04
    acc4:	ldr	r0, [fp, #-764]	; 0xfffffd04
    acc8:	tst	r0, #1
    accc:	beq	ad20 <rb_sha256_crypt_r+0xfe8>
    acd0:	ldr	r0, [pc, #740]	; afbc <rb_sha256_crypt_r+0x1284>
    acd4:	add	r0, pc, r0
    acd8:	ldr	r1, [fp, #-564]	; 0xfffffdcc
    acdc:	and	r1, r1, #63	; 0x3f
    ace0:	add	r0, r0, r1
    ace4:	ldrb	r0, [r0]
    ace8:	ldr	r1, [fp, #-448]	; 0xfffffe40
    acec:	add	r2, r1, #1
    acf0:	str	r2, [fp, #-448]	; 0xfffffe40
    acf4:	strb	r0, [r1]
    acf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    acfc:	mvn	r1, #0
    ad00:	add	r0, r0, r1
    ad04:	str	r0, [fp, #-24]	; 0xffffffe8
    ad08:	ldr	r0, [fp, #-564]	; 0xfffffdcc
    ad0c:	lsr	r0, r0, #6
    ad10:	str	r0, [fp, #-564]	; 0xfffffdcc
    ad14:	b	ac90 <rb_sha256_crypt_r+0xf58>
    ad18:	.word	0x000188d4
    ad1c:	.word	0x00018884
    ad20:	b	ad24 <rb_sha256_crypt_r+0xfec>
    ad24:	b	ad28 <rb_sha256_crypt_r+0xff0>
    ad28:	ldrb	r0, [fp, #-47]	; 0xffffffd1
    ad2c:	lsl	r0, r0, #16
    ad30:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    ad34:	lsl	r1, r1, #8
    ad38:	orr	r0, r0, r1
    ad3c:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    ad40:	orr	r0, r0, r1
    ad44:	str	r0, [fp, #-572]	; 0xfffffdc4
    ad48:	movw	r0, #4
    ad4c:	str	r0, [fp, #-576]	; 0xfffffdc0
    ad50:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    ad54:	mvn	r1, #0
    ad58:	add	r1, r0, r1
    ad5c:	str	r1, [fp, #-576]	; 0xfffffdc0
    ad60:	cmp	r0, #0
    ad64:	movw	r0, #0
    ad68:	str	r0, [fp, #-768]	; 0xfffffd00
    ad6c:	ble	ad84 <rb_sha256_crypt_r+0x104c>
    ad70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ad74:	cmp	r0, #0
    ad78:	movw	r0, #0
    ad7c:	movgt	r0, #1
    ad80:	str	r0, [fp, #-768]	; 0xfffffd00
    ad84:	ldr	r0, [fp, #-768]	; 0xfffffd00
    ad88:	tst	r0, #1
    ad8c:	beq	ade0 <rb_sha256_crypt_r+0x10a8>
    ad90:	ldr	r0, [pc, #544]	; afb8 <rb_sha256_crypt_r+0x1280>
    ad94:	add	r0, pc, r0
    ad98:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    ad9c:	and	r1, r1, #63	; 0x3f
    ada0:	add	r0, r0, r1
    ada4:	ldrb	r0, [r0]
    ada8:	ldr	r1, [fp, #-448]	; 0xfffffe40
    adac:	add	r2, r1, #1
    adb0:	str	r2, [fp, #-448]	; 0xfffffe40
    adb4:	strb	r0, [r1]
    adb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    adbc:	mvn	r1, #0
    adc0:	add	r0, r0, r1
    adc4:	str	r0, [fp, #-24]	; 0xffffffe8
    adc8:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    adcc:	lsr	r0, r0, #6
    add0:	str	r0, [fp, #-572]	; 0xfffffdc4
    add4:	b	ad50 <rb_sha256_crypt_r+0x1018>
    add8:	.word	0x3b9ac9ff
    addc:	.word	0x00018bf6
    ade0:	b	ade4 <rb_sha256_crypt_r+0x10ac>
    ade4:	b	ade8 <rb_sha256_crypt_r+0x10b0>
    ade8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
    adec:	lsl	r0, r0, #8
    adf0:	orr	r0, r0, #0
    adf4:	ldrb	r1, [fp, #-26]	; 0xffffffe6
    adf8:	orr	r0, r0, r1
    adfc:	str	r0, [fp, #-580]	; 0xfffffdbc
    ae00:	movw	r0, #3
    ae04:	str	r0, [fp, #-584]	; 0xfffffdb8
    ae08:	ldr	r0, [fp, #-584]	; 0xfffffdb8
    ae0c:	mvn	r1, #0
    ae10:	add	r1, r0, r1
    ae14:	str	r1, [fp, #-584]	; 0xfffffdb8
    ae18:	cmp	r0, #0
    ae1c:	movw	r0, #0
    ae20:	str	r0, [fp, #-772]	; 0xfffffcfc
    ae24:	ble	ae3c <rb_sha256_crypt_r+0x1104>
    ae28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae2c:	cmp	r0, #0
    ae30:	movw	r0, #0
    ae34:	movgt	r0, #1
    ae38:	str	r0, [fp, #-772]	; 0xfffffcfc
    ae3c:	ldr	r0, [fp, #-772]	; 0xfffffcfc
    ae40:	tst	r0, #1
    ae44:	beq	ae94 <rb_sha256_crypt_r+0x115c>
    ae48:	ldr	r0, [pc, #356]	; afb4 <rb_sha256_crypt_r+0x127c>
    ae4c:	add	r0, pc, r0
    ae50:	ldr	r1, [fp, #-580]	; 0xfffffdbc
    ae54:	and	r1, r1, #63	; 0x3f
    ae58:	add	r0, r0, r1
    ae5c:	ldrb	r0, [r0]
    ae60:	ldr	r1, [fp, #-448]	; 0xfffffe40
    ae64:	add	r2, r1, #1
    ae68:	str	r2, [fp, #-448]	; 0xfffffe40
    ae6c:	strb	r0, [r1]
    ae70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae74:	mvn	r1, #0
    ae78:	add	r0, r0, r1
    ae7c:	str	r0, [fp, #-24]	; 0xffffffe8
    ae80:	ldr	r0, [fp, #-580]	; 0xfffffdbc
    ae84:	lsr	r0, r0, #6
    ae88:	str	r0, [fp, #-580]	; 0xfffffdbc
    ae8c:	b	ae08 <rb_sha256_crypt_r+0x10d0>
    ae90:	.word	0x00018bde
    ae94:	b	ae98 <rb_sha256_crypt_r+0x1160>
    ae98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ae9c:	cmp	r0, #0
    aea0:	bgt	aebc <rb_sha256_crypt_r+0x1184>
    aea4:	bl	56c8 <__errno_location@plt>
    aea8:	movw	lr, #34	; 0x22
    aeac:	str	lr, [r0]
    aeb0:	movw	r0, #0
    aeb4:	str	r0, [fp, #-20]	; 0xffffffec
    aeb8:	b	aec8 <rb_sha256_crypt_r+0x1190>
    aebc:	ldr	r0, [fp, #-448]	; 0xfffffe40
    aec0:	movw	r1, #0
    aec4:	strb	r1, [r0]
    aec8:	sub	r0, fp, #260	; 0x104
    aecc:	bl	afe0 <rb_sha256_init_ctx>
    aed0:	sub	r1, fp, #56	; 0x38
    aed4:	sub	r0, fp, #260	; 0x104
    aed8:	bl	b320 <rb_sha256_finish_ctx>
    aedc:	sub	r1, fp, #88	; 0x58
    aee0:	str	r0, [fp, #-776]	; 0xfffffcf8
    aee4:	mov	r0, r1
    aee8:	movw	r1, #0
    aeec:	and	lr, r1, #255	; 0xff
    aef0:	str	r1, [fp, #-780]	; 0xfffffcf4
    aef4:	mov	r1, lr
    aef8:	movw	r2, #32
    aefc:	bl	4ff0 <memset@plt>
    af00:	ldr	r0, [fp, #-460]	; 0xfffffe34
    af04:	ldr	r2, [fp, #-440]	; 0xfffffe48
    af08:	ldr	r1, [fp, #-780]	; 0xfffffcf4
    af0c:	and	r1, r1, #255	; 0xff
    af10:	bl	4ff0 <memset@plt>
    af14:	ldr	r0, [fp, #-464]	; 0xfffffe30
    af18:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    af1c:	ldr	r1, [fp, #-780]	; 0xfffffcf4
    af20:	and	r1, r1, #255	; 0xff
    af24:	bl	4ff0 <memset@plt>
    af28:	sub	r0, fp, #260	; 0x104
    af2c:	ldr	r1, [fp, #-780]	; 0xfffffcf4
    af30:	and	r1, r1, #255	; 0xff
    af34:	movw	r2, #172	; 0xac
    af38:	str	r2, [fp, #-784]	; 0xfffffcf0
    af3c:	bl	4ff0 <memset@plt>
    af40:	sub	r0, fp, #432	; 0x1b0
    af44:	ldr	r1, [fp, #-780]	; 0xfffffcf4
    af48:	and	r1, r1, #255	; 0xff
    af4c:	ldr	r2, [fp, #-784]	; 0xfffffcf0
    af50:	bl	4ff0 <memset@plt>
    af54:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    af58:	movw	r1, #0
    af5c:	cmp	r0, r1
    af60:	beq	af78 <rb_sha256_crypt_r+0x1240>
    af64:	ldr	r0, [fp, #-452]	; 0xfffffe3c
    af68:	ldr	r2, [fp, #-440]	; 0xfffffe48
    af6c:	movw	r1, #0
    af70:	and	r1, r1, #255	; 0xff
    af74:	bl	4ff0 <memset@plt>
    af78:	ldr	r0, [fp, #-456]	; 0xfffffe38
    af7c:	movw	r1, #0
    af80:	cmp	r0, r1
    af84:	beq	af9c <rb_sha256_crypt_r+0x1264>
    af88:	ldr	r0, [fp, #-456]	; 0xfffffe38
    af8c:	ldr	r2, [fp, #-436]	; 0xfffffe4c
    af90:	movw	r1, #0
    af94:	and	r1, r1, #255	; 0xff
    af98:	bl	4ff0 <memset@plt>
    af9c:	ldr	r0, [fp, #-20]	; 0xffffffec
    afa0:	sub	sp, fp, #8
    afa4:	pop	{r4, sl, fp, pc}
    afa8:	.word	0x00018228
    afac:	.word	0x000185c4
    afb0:	.word	0x00018160
    afb4:	.word	0x0001742c
    afb8:	.word	0x000174e4
    afbc:	.word	0x000175a4
    afc0:	.word	0x0001765c
    afc4:	.word	0x00017714
    afc8:	.word	0x000177cc
    afcc:	.word	0x00017884
    afd0:	.word	0x0001793c
    afd4:	.word	0x000179f4
    afd8:	.word	0x00017aac
    afdc:	.word	0x00017b64

0000afe0 <rb_sha256_init_ctx>:
    afe0:	push	{r4, r5, r6, sl, fp, lr}
    afe4:	add	fp, sp, #16
    afe8:	sub	sp, sp, #4
    afec:	ldr	r1, [pc, #128]	; b074 <rb_sha256_init_ctx+0x94>
    aff0:	ldr	r2, [pc, #128]	; b078 <rb_sha256_init_ctx+0x98>
    aff4:	ldr	r3, [pc, #128]	; b07c <rb_sha256_init_ctx+0x9c>
    aff8:	ldr	ip, [pc, #128]	; b080 <rb_sha256_init_ctx+0xa0>
    affc:	ldr	lr, [pc, #128]	; b084 <rb_sha256_init_ctx+0xa4>
    b000:	ldr	r4, [pc, #128]	; b088 <rb_sha256_init_ctx+0xa8>
    b004:	ldr	r5, [pc, #128]	; b08c <rb_sha256_init_ctx+0xac>
    b008:	ldr	r6, [pc, #128]	; b090 <rb_sha256_init_ctx+0xb0>
    b00c:	str	r0, [sp]
    b010:	ldr	r0, [sp]
    b014:	str	r6, [r0]
    b018:	ldr	r0, [sp]
    b01c:	str	r5, [r0, #4]
    b020:	ldr	r0, [sp]
    b024:	str	r4, [r0, #8]
    b028:	ldr	r0, [sp]
    b02c:	str	lr, [r0, #12]
    b030:	ldr	r0, [sp]
    b034:	str	ip, [r0, #16]
    b038:	ldr	r0, [sp]
    b03c:	str	r3, [r0, #20]
    b040:	ldr	r0, [sp]
    b044:	str	r2, [r0, #24]
    b048:	ldr	r0, [sp]
    b04c:	str	r1, [r0, #28]
    b050:	ldr	r0, [sp]
    b054:	movw	r1, #0
    b058:	str	r1, [r0, #36]	; 0x24
    b05c:	ldr	r0, [sp]
    b060:	str	r1, [r0, #32]
    b064:	ldr	r0, [sp]
    b068:	str	r1, [r0, #40]	; 0x28
    b06c:	sub	sp, fp, #16
    b070:	pop	{r4, r5, r6, sl, fp, pc}
    b074:	.word	0x5be0cd19
    b078:	.word	0x1f83d9ab
    b07c:	.word	0x9b05688c
    b080:	.word	0x510e527f
    b084:	.word	0xa54ff53a
    b088:	.word	0x3c6ef372
    b08c:	.word	0xbb67ae85
    b090:	.word	0x6a09e667

0000b094 <rb_sha256_process_bytes>:
    b094:	push	{fp, lr}
    b098:	mov	fp, sp
    b09c:	sub	sp, sp, #40	; 0x28
    b0a0:	str	r0, [fp, #-4]
    b0a4:	str	r1, [fp, #-8]
    b0a8:	str	r2, [fp, #-12]
    b0ac:	ldr	r0, [fp, #-12]
    b0b0:	ldr	r0, [r0, #40]	; 0x28
    b0b4:	cmp	r0, #0
    b0b8:	beq	b1c8 <rb_sha256_process_bytes+0x134>
    b0bc:	ldr	r0, [fp, #-12]
    b0c0:	ldr	r0, [r0, #40]	; 0x28
    b0c4:	str	r0, [fp, #-16]
    b0c8:	ldr	r0, [fp, #-16]
    b0cc:	movw	r1, #128	; 0x80
    b0d0:	sub	r0, r1, r0
    b0d4:	ldr	r1, [fp, #-8]
    b0d8:	cmp	r0, r1
    b0dc:	bls	b0ec <rb_sha256_process_bytes+0x58>
    b0e0:	ldr	r0, [fp, #-8]
    b0e4:	str	r0, [sp, #12]
    b0e8:	b	b0fc <rb_sha256_process_bytes+0x68>
    b0ec:	ldr	r0, [fp, #-16]
    b0f0:	movw	r1, #128	; 0x80
    b0f4:	sub	r0, r1, r0
    b0f8:	str	r0, [sp, #12]
    b0fc:	ldr	r0, [sp, #12]
    b100:	str	r0, [sp, #20]
    b104:	ldr	r0, [fp, #-12]
    b108:	add	r0, r0, #44	; 0x2c
    b10c:	ldr	r1, [fp, #-16]
    b110:	add	r0, r0, r1
    b114:	ldr	r1, [fp, #-4]
    b118:	ldr	r2, [sp, #20]
    b11c:	bl	51dc <memcpy@plt>
    b120:	ldr	r0, [sp, #20]
    b124:	ldr	r1, [fp, #-12]
    b128:	ldr	r2, [r1, #40]	; 0x28
    b12c:	add	r0, r2, r0
    b130:	str	r0, [r1, #40]	; 0x28
    b134:	ldr	r0, [fp, #-12]
    b138:	ldr	r0, [r0, #40]	; 0x28
    b13c:	cmp	r0, #64	; 0x40
    b140:	bls	b1a8 <rb_sha256_process_bytes+0x114>
    b144:	ldr	r0, [fp, #-12]
    b148:	add	r0, r0, #44	; 0x2c
    b14c:	ldr	r1, [fp, #-12]
    b150:	ldr	r1, [r1, #40]	; 0x28
    b154:	mvn	r2, #63	; 0x3f
    b158:	and	r1, r1, r2
    b15c:	ldr	r2, [fp, #-12]
    b160:	bl	b58c <rb_sha256_process_block>
    b164:	ldr	r0, [fp, #-12]
    b168:	ldr	r1, [r0, #40]	; 0x28
    b16c:	and	r1, r1, #63	; 0x3f
    b170:	str	r1, [r0, #40]	; 0x28
    b174:	ldr	r0, [fp, #-12]
    b178:	add	r0, r0, #44	; 0x2c
    b17c:	ldr	r1, [fp, #-12]
    b180:	add	r1, r1, #44	; 0x2c
    b184:	ldr	r2, [fp, #-16]
    b188:	ldr	lr, [sp, #20]
    b18c:	add	r2, r2, lr
    b190:	mvn	lr, #63	; 0x3f
    b194:	and	r2, r2, lr
    b198:	add	r1, r1, r2
    b19c:	ldr	r2, [fp, #-12]
    b1a0:	ldr	r2, [r2, #40]	; 0x28
    b1a4:	bl	51dc <memcpy@plt>
    b1a8:	ldr	r0, [fp, #-4]
    b1ac:	ldr	r1, [sp, #20]
    b1b0:	add	r0, r0, r1
    b1b4:	str	r0, [fp, #-4]
    b1b8:	ldr	r0, [sp, #20]
    b1bc:	ldr	r1, [fp, #-8]
    b1c0:	sub	r0, r1, r0
    b1c4:	str	r0, [fp, #-8]
    b1c8:	ldr	r0, [fp, #-8]
    b1cc:	cmp	r0, #64	; 0x40
    b1d0:	bcc	b280 <rb_sha256_process_bytes+0x1ec>
    b1d4:	ldr	r0, [fp, #-4]
    b1d8:	and	r0, r0, #3
    b1dc:	cmp	r0, #0
    b1e0:	beq	b240 <rb_sha256_process_bytes+0x1ac>
    b1e4:	b	b1e8 <rb_sha256_process_bytes+0x154>
    b1e8:	ldr	r0, [fp, #-8]
    b1ec:	cmp	r0, #64	; 0x40
    b1f0:	bls	b23c <rb_sha256_process_bytes+0x1a8>
    b1f4:	ldr	r0, [fp, #-12]
    b1f8:	add	r0, r0, #44	; 0x2c
    b1fc:	ldr	r1, [fp, #-4]
    b200:	str	r0, [sp, #8]
    b204:	movw	r2, #64	; 0x40
    b208:	str	r2, [sp, #4]
    b20c:	bl	51dc <memcpy@plt>
    b210:	ldr	r2, [fp, #-12]
    b214:	ldr	r0, [sp, #8]
    b218:	ldr	r1, [sp, #4]
    b21c:	bl	b58c <rb_sha256_process_block>
    b220:	ldr	r0, [fp, #-4]
    b224:	add	r0, r0, #64	; 0x40
    b228:	str	r0, [fp, #-4]
    b22c:	ldr	r0, [fp, #-8]
    b230:	sub	r0, r0, #64	; 0x40
    b234:	str	r0, [fp, #-8]
    b238:	b	b1e8 <rb_sha256_process_bytes+0x154>
    b23c:	b	b27c <rb_sha256_process_bytes+0x1e8>
    b240:	ldr	r0, [fp, #-4]
    b244:	ldr	r1, [fp, #-8]
    b248:	mvn	r2, #63	; 0x3f
    b24c:	and	r1, r1, r2
    b250:	ldr	r2, [fp, #-12]
    b254:	bl	b58c <rb_sha256_process_block>
    b258:	ldr	r0, [fp, #-4]
    b25c:	ldr	r1, [fp, #-8]
    b260:	mvn	r2, #63	; 0x3f
    b264:	and	r1, r1, r2
    b268:	add	r0, r0, r1
    b26c:	str	r0, [fp, #-4]
    b270:	ldr	r0, [fp, #-8]
    b274:	and	r0, r0, #63	; 0x3f
    b278:	str	r0, [fp, #-8]
    b27c:	b	b280 <rb_sha256_process_bytes+0x1ec>
    b280:	ldr	r0, [fp, #-8]
    b284:	cmp	r0, #0
    b288:	bls	b318 <rb_sha256_process_bytes+0x284>
    b28c:	ldr	r0, [fp, #-12]
    b290:	ldr	r0, [r0, #40]	; 0x28
    b294:	str	r0, [sp, #16]
    b298:	ldr	r0, [fp, #-12]
    b29c:	add	r0, r0, #44	; 0x2c
    b2a0:	ldr	r1, [sp, #16]
    b2a4:	add	r0, r0, r1
    b2a8:	ldr	r1, [fp, #-4]
    b2ac:	ldr	r2, [fp, #-8]
    b2b0:	bl	51dc <memcpy@plt>
    b2b4:	ldr	r0, [fp, #-8]
    b2b8:	ldr	r1, [sp, #16]
    b2bc:	add	r0, r1, r0
    b2c0:	str	r0, [sp, #16]
    b2c4:	ldr	r0, [sp, #16]
    b2c8:	cmp	r0, #64	; 0x40
    b2cc:	bcc	b30c <rb_sha256_process_bytes+0x278>
    b2d0:	ldr	r0, [fp, #-12]
    b2d4:	add	r0, r0, #44	; 0x2c
    b2d8:	ldr	r2, [fp, #-12]
    b2dc:	movw	r1, #64	; 0x40
    b2e0:	bl	b58c <rb_sha256_process_block>
    b2e4:	ldr	r0, [sp, #16]
    b2e8:	sub	r0, r0, #64	; 0x40
    b2ec:	str	r0, [sp, #16]
    b2f0:	ldr	r0, [fp, #-12]
    b2f4:	add	r0, r0, #44	; 0x2c
    b2f8:	ldr	r1, [fp, #-12]
    b2fc:	add	r1, r1, #44	; 0x2c
    b300:	add	r1, r1, #64	; 0x40
    b304:	ldr	r2, [sp, #16]
    b308:	bl	51dc <memcpy@plt>
    b30c:	ldr	r0, [sp, #16]
    b310:	ldr	r1, [fp, #-12]
    b314:	str	r0, [r1, #40]	; 0x28
    b318:	mov	sp, fp
    b31c:	pop	{fp, pc}

0000b320 <rb_sha256_finish_ctx>:
    b320:	push	{fp, lr}
    b324:	mov	fp, sp
    b328:	sub	sp, sp, #32
    b32c:	str	r0, [fp, #-4]
    b330:	str	r1, [fp, #-8]
    b334:	ldr	r0, [fp, #-4]
    b338:	ldr	r0, [r0, #40]	; 0x28
    b33c:	str	r0, [fp, #-12]
    b340:	ldr	r0, [fp, #-12]
    b344:	ldr	r1, [fp, #-4]
    b348:	ldr	r2, [r1, #32]
    b34c:	add	r0, r2, r0
    b350:	str	r0, [r1, #32]
    b354:	ldr	r0, [fp, #-4]
    b358:	ldr	r0, [r0, #32]
    b35c:	ldr	r1, [fp, #-12]
    b360:	cmp	r0, r1
    b364:	bcs	b378 <rb_sha256_finish_ctx+0x58>
    b368:	ldr	r0, [fp, #-4]
    b36c:	ldr	r1, [r0, #36]	; 0x24
    b370:	add	r1, r1, #1
    b374:	str	r1, [r0, #36]	; 0x24
    b378:	ldr	r0, [fp, #-12]
    b37c:	cmp	r0, #56	; 0x38
    b380:	bcc	b398 <rb_sha256_finish_ctx+0x78>
    b384:	ldr	r0, [fp, #-12]
    b388:	movw	r1, #120	; 0x78
    b38c:	sub	r0, r1, r0
    b390:	str	r0, [sp, #4]
    b394:	b	b3a8 <rb_sha256_finish_ctx+0x88>
    b398:	ldr	r0, [fp, #-12]
    b39c:	movw	r1, #56	; 0x38
    b3a0:	sub	r0, r1, r0
    b3a4:	str	r0, [sp, #4]
    b3a8:	ldr	r0, [sp, #4]
    b3ac:	ldr	r1, [pc, #468]	; b588 <rb_sha256_finish_ctx+0x268>
    b3b0:	add	r1, pc, r1
    b3b4:	str	r0, [sp, #12]
    b3b8:	ldr	r0, [fp, #-4]
    b3bc:	add	r0, r0, #44	; 0x2c
    b3c0:	ldr	r2, [fp, #-12]
    b3c4:	add	r0, r0, r2
    b3c8:	ldr	r2, [sp, #12]
    b3cc:	bl	51dc <memcpy@plt>
    b3d0:	ldr	r0, [fp, #-4]
    b3d4:	add	r0, r0, #44	; 0x2c
    b3d8:	ldr	r1, [fp, #-12]
    b3dc:	ldr	r2, [sp, #12]
    b3e0:	add	r1, r1, r2
    b3e4:	add	r1, r1, #4
    b3e8:	add	r0, r0, r1
    b3ec:	str	r0, [sp, #16]
    b3f0:	ldr	r0, [fp, #-4]
    b3f4:	ldr	r0, [r0, #32]
    b3f8:	lsl	r0, r0, #3
    b3fc:	lsl	r0, r0, #24
    b400:	ldr	r1, [fp, #-4]
    b404:	ldr	r1, [r1, #32]
    b408:	lsl	r1, r1, #3
    b40c:	and	r1, r1, #65280	; 0xff00
    b410:	lsl	r1, r1, #8
    b414:	orr	r0, r0, r1
    b418:	ldr	r1, [fp, #-4]
    b41c:	ldr	r1, [r1, #32]
    b420:	lsl	r1, r1, #3
    b424:	lsr	r1, r1, #8
    b428:	and	r1, r1, #65280	; 0xff00
    b42c:	orr	r0, r0, r1
    b430:	ldr	r1, [fp, #-4]
    b434:	ldr	r1, [r1, #32]
    b438:	lsl	r1, r1, #3
    b43c:	lsr	r1, r1, #24
    b440:	orr	r0, r0, r1
    b444:	ldr	r1, [sp, #16]
    b448:	str	r0, [r1]
    b44c:	ldr	r0, [fp, #-4]
    b450:	add	r0, r0, #44	; 0x2c
    b454:	ldr	r1, [fp, #-12]
    b458:	ldr	r2, [sp, #12]
    b45c:	add	r1, r1, r2
    b460:	add	r0, r0, r1
    b464:	str	r0, [sp, #16]
    b468:	ldr	r0, [fp, #-4]
    b46c:	ldr	r0, [r0, #36]	; 0x24
    b470:	lsl	r0, r0, #3
    b474:	ldr	r1, [fp, #-4]
    b478:	ldr	r1, [r1, #32]
    b47c:	lsr	r1, r1, #29
    b480:	orr	r0, r0, r1
    b484:	lsl	r0, r0, #24
    b488:	ldr	r1, [fp, #-4]
    b48c:	ldr	r1, [r1, #36]	; 0x24
    b490:	lsl	r1, r1, #3
    b494:	ldr	r2, [fp, #-4]
    b498:	ldr	r2, [r2, #32]
    b49c:	lsr	r2, r2, #29
    b4a0:	orr	r1, r1, r2
    b4a4:	and	r1, r1, #65280	; 0xff00
    b4a8:	lsl	r1, r1, #8
    b4ac:	orr	r0, r0, r1
    b4b0:	ldr	r1, [fp, #-4]
    b4b4:	ldr	r1, [r1, #36]	; 0x24
    b4b8:	lsl	r1, r1, #3
    b4bc:	ldr	r2, [fp, #-4]
    b4c0:	ldr	r2, [r2, #32]
    b4c4:	lsr	r2, r2, #29
    b4c8:	orr	r1, r1, r2
    b4cc:	lsr	r1, r1, #8
    b4d0:	and	r1, r1, #65280	; 0xff00
    b4d4:	orr	r0, r0, r1
    b4d8:	ldr	r1, [fp, #-4]
    b4dc:	ldr	r1, [r1, #36]	; 0x24
    b4e0:	lsl	r1, r1, #3
    b4e4:	ldr	r2, [fp, #-4]
    b4e8:	ldr	r2, [r2, #32]
    b4ec:	lsr	r2, r2, #29
    b4f0:	orr	r1, r1, r2
    b4f4:	lsr	r1, r1, #24
    b4f8:	orr	r0, r0, r1
    b4fc:	ldr	r1, [sp, #16]
    b500:	str	r0, [r1]
    b504:	ldr	r0, [fp, #-4]
    b508:	add	r0, r0, #44	; 0x2c
    b50c:	ldr	r1, [fp, #-12]
    b510:	ldr	r2, [sp, #12]
    b514:	add	r1, r1, r2
    b518:	add	r1, r1, #8
    b51c:	ldr	r2, [fp, #-4]
    b520:	bl	b58c <rb_sha256_process_block>
    b524:	movw	r0, #0
    b528:	str	r0, [sp, #8]
    b52c:	ldr	r0, [sp, #8]
    b530:	cmp	r0, #8
    b534:	bcs	b57c <rb_sha256_finish_ctx+0x25c>
    b538:	ldr	r0, [fp, #-4]
    b53c:	ldr	r1, [sp, #8]
    b540:	ldr	r0, [r0, r1, lsl #2]
    b544:	lsl	r2, r0, #24
    b548:	and	r3, r0, #65280	; 0xff00
    b54c:	orr	r2, r2, r3, lsl #8
    b550:	mov	r3, #65280	; 0xff00
    b554:	and	r3, r3, r0, lsr #8
    b558:	orr	r2, r2, r3
    b55c:	orr	r0, r2, r0, lsr #24
    b560:	ldr	r2, [fp, #-8]
    b564:	add	r1, r2, r1, lsl #2
    b568:	str	r0, [r1]
    b56c:	ldr	r0, [sp, #8]
    b570:	add	r0, r0, #1
    b574:	str	r0, [sp, #8]
    b578:	b	b52c <rb_sha256_finish_ctx+0x20c>
    b57c:	ldr	r0, [fp, #-8]
    b580:	mov	sp, fp
    b584:	pop	{fp, pc}
    b588:	.word	0x00017378

0000b58c <rb_sha256_process_block>:
    b58c:	push	{r4, r5, fp, lr}
    b590:	add	fp, sp, #8
    b594:	sub	sp, sp, #352	; 0x160
    b598:	str	r0, [fp, #-12]
    b59c:	str	r1, [fp, #-16]
    b5a0:	str	r2, [fp, #-20]	; 0xffffffec
    b5a4:	ldr	r0, [fp, #-12]
    b5a8:	str	r0, [fp, #-24]	; 0xffffffe8
    b5ac:	ldr	r0, [fp, #-16]
    b5b0:	lsr	r0, r0, #2
    b5b4:	str	r0, [fp, #-28]	; 0xffffffe4
    b5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5bc:	ldr	r0, [r0]
    b5c0:	str	r0, [fp, #-32]	; 0xffffffe0
    b5c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5c8:	ldr	r0, [r0, #4]
    b5cc:	str	r0, [fp, #-36]	; 0xffffffdc
    b5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5d4:	ldr	r0, [r0, #8]
    b5d8:	str	r0, [fp, #-40]	; 0xffffffd8
    b5dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5e0:	ldr	r0, [r0, #12]
    b5e4:	str	r0, [fp, #-44]	; 0xffffffd4
    b5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5ec:	ldr	r0, [r0, #16]
    b5f0:	str	r0, [fp, #-48]	; 0xffffffd0
    b5f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5f8:	ldr	r0, [r0, #20]
    b5fc:	str	r0, [fp, #-52]	; 0xffffffcc
    b600:	ldr	r0, [fp, #-20]	; 0xffffffec
    b604:	ldr	r0, [r0, #24]
    b608:	str	r0, [fp, #-56]	; 0xffffffc8
    b60c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b610:	ldr	r0, [r0, #28]
    b614:	str	r0, [fp, #-60]	; 0xffffffc4
    b618:	ldr	r0, [fp, #-16]
    b61c:	ldr	r1, [fp, #-20]	; 0xffffffec
    b620:	ldr	r2, [r1, #32]
    b624:	add	r0, r2, r0
    b628:	str	r0, [r1, #32]
    b62c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b630:	ldr	r0, [r0, #32]
    b634:	ldr	r1, [fp, #-16]
    b638:	cmp	r0, r1
    b63c:	bcs	b650 <rb_sha256_process_block+0xc4>
    b640:	ldr	r0, [fp, #-20]	; 0xffffffec
    b644:	ldr	r1, [r0, #36]	; 0x24
    b648:	add	r1, r1, #1
    b64c:	str	r1, [r0, #36]	; 0x24
    b650:	b	b654 <rb_sha256_process_block+0xc8>
    b654:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b658:	cmp	r0, #0
    b65c:	bls	b940 <rb_sha256_process_block+0x3b4>
    b660:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b664:	str	r0, [sp, #40]	; 0x28
    b668:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b66c:	str	r0, [sp, #36]	; 0x24
    b670:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b674:	str	r0, [sp, #32]
    b678:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b67c:	str	r0, [sp, #28]
    b680:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b684:	str	r0, [sp, #24]
    b688:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b68c:	str	r0, [sp, #20]
    b690:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b694:	str	r0, [sp, #16]
    b698:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b69c:	str	r0, [sp, #12]
    b6a0:	movw	r0, #0
    b6a4:	str	r0, [sp, #8]
    b6a8:	ldr	r0, [sp, #8]
    b6ac:	cmp	r0, #16
    b6b0:	bcs	b704 <rb_sha256_process_block+0x178>
    b6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6b8:	ldr	r0, [r0]
    b6bc:	lsl	r1, r0, #24
    b6c0:	and	r2, r0, #65280	; 0xff00
    b6c4:	orr	r1, r1, r2, lsl #8
    b6c8:	mov	r2, #65280	; 0xff00
    b6cc:	and	r2, r2, r0, lsr #8
    b6d0:	orr	r1, r1, r2
    b6d4:	orr	r0, r1, r0, lsr #24
    b6d8:	ldr	r1, [sp, #8]
    b6dc:	add	r2, sp, #44	; 0x2c
    b6e0:	add	r1, r2, r1, lsl #2
    b6e4:	str	r0, [r1]
    b6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6ec:	add	r0, r0, #4
    b6f0:	str	r0, [fp, #-24]	; 0xffffffe8
    b6f4:	ldr	r0, [sp, #8]
    b6f8:	add	r0, r0, #1
    b6fc:	str	r0, [sp, #8]
    b700:	b	b6a8 <rb_sha256_process_block+0x11c>
    b704:	movw	r0, #16
    b708:	str	r0, [sp, #8]
    b70c:	ldr	r0, [sp, #8]
    b710:	cmp	r0, #64	; 0x40
    b714:	bcs	b76c <rb_sha256_process_block+0x1e0>
    b718:	ldr	r0, [sp, #8]
    b71c:	add	r1, sp, #44	; 0x2c
    b720:	add	r0, r1, r0, lsl #2
    b724:	ldr	r1, [r0, #-64]	; 0xffffffc0
    b728:	ldr	r2, [r0, #-60]	; 0xffffffc4
    b72c:	ldr	r3, [r0, #-28]	; 0xffffffe4
    b730:	ldr	ip, [r0, #-8]
    b734:	ror	lr, ip, #17
    b738:	eor	lr, lr, ip, ror #19
    b73c:	eor	ip, lr, ip, lsr #10
    b740:	add	r3, ip, r3
    b744:	ror	ip, r2, #7
    b748:	eor	ip, ip, r2, ror #18
    b74c:	eor	r2, ip, r2, lsr #3
    b750:	add	r2, r3, r2
    b754:	add	r1, r2, r1
    b758:	str	r1, [r0]
    b75c:	ldr	r0, [sp, #8]
    b760:	add	r0, r0, #1
    b764:	str	r0, [sp, #8]
    b768:	b	b70c <rb_sha256_process_block+0x180>
    b76c:	movw	r0, #0
    b770:	str	r0, [sp, #8]
    b774:	ldr	r0, [sp, #8]
    b778:	cmp	r0, #64	; 0x40
    b77c:	bcs	b8b0 <rb_sha256_process_block+0x324>
    b780:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b784:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b788:	ror	r2, r1, #6
    b78c:	eor	r2, r2, r1, ror #11
    b790:	eor	r2, r2, r1, ror #25
    b794:	add	r0, r0, r2
    b798:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b79c:	and	r2, r1, r2
    b7a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b7a4:	bic	r1, r3, r1
    b7a8:	eor	r1, r2, r1
    b7ac:	add	r0, r0, r1
    b7b0:	ldr	r1, [sp, #8]
    b7b4:	ldr	r2, [pc, #492]	; b9a8 <rb_sha256_process_block+0x41c>
    b7b8:	add	r2, pc, r2
    b7bc:	ldr	r2, [r2, r1, lsl #2]
    b7c0:	add	r0, r0, r2
    b7c4:	add	r2, sp, #44	; 0x2c
    b7c8:	add	r1, r2, r1, lsl #2
    b7cc:	ldr	r1, [r1]
    b7d0:	add	r0, r0, r1
    b7d4:	str	r0, [sp, #4]
    b7d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b7dc:	lsr	r0, r0, #2
    b7e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b7e4:	lsl	r1, r1, #30
    b7e8:	orr	r0, r0, r1
    b7ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b7f0:	lsr	r1, r1, #13
    b7f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b7f8:	lsl	r2, r2, #19
    b7fc:	orr	r1, r1, r2
    b800:	eor	r0, r0, r1
    b804:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b808:	lsr	r1, r1, #22
    b80c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b810:	lsl	r2, r2, #10
    b814:	orr	r1, r1, r2
    b818:	eor	r0, r0, r1
    b81c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b820:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b824:	and	r1, r1, r2
    b828:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b82c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b830:	and	r2, r2, r3
    b834:	eor	r1, r1, r2
    b838:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b840:	and	r2, r2, r3
    b844:	eor	r1, r1, r2
    b848:	add	r0, r0, r1
    b84c:	str	r0, [sp]
    b850:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b854:	str	r0, [fp, #-60]	; 0xffffffc4
    b858:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b85c:	str	r0, [fp, #-56]	; 0xffffffc8
    b860:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b864:	str	r0, [fp, #-52]	; 0xffffffcc
    b868:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b86c:	ldr	r1, [sp, #4]
    b870:	add	r0, r0, r1
    b874:	str	r0, [fp, #-48]	; 0xffffffd0
    b878:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b87c:	str	r0, [fp, #-44]	; 0xffffffd4
    b880:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b884:	str	r0, [fp, #-40]	; 0xffffffd8
    b888:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b88c:	str	r0, [fp, #-36]	; 0xffffffdc
    b890:	ldr	r0, [sp, #4]
    b894:	ldr	r1, [sp]
    b898:	add	r0, r0, r1
    b89c:	str	r0, [fp, #-32]	; 0xffffffe0
    b8a0:	ldr	r0, [sp, #8]
    b8a4:	add	r0, r0, #1
    b8a8:	str	r0, [sp, #8]
    b8ac:	b	b774 <rb_sha256_process_block+0x1e8>
    b8b0:	ldr	r0, [sp, #40]	; 0x28
    b8b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b8b8:	add	r0, r1, r0
    b8bc:	str	r0, [fp, #-32]	; 0xffffffe0
    b8c0:	ldr	r0, [sp, #36]	; 0x24
    b8c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b8c8:	add	r0, r1, r0
    b8cc:	str	r0, [fp, #-36]	; 0xffffffdc
    b8d0:	ldr	r0, [sp, #32]
    b8d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b8d8:	add	r0, r1, r0
    b8dc:	str	r0, [fp, #-40]	; 0xffffffd8
    b8e0:	ldr	r0, [sp, #28]
    b8e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b8e8:	add	r0, r1, r0
    b8ec:	str	r0, [fp, #-44]	; 0xffffffd4
    b8f0:	ldr	r0, [sp, #24]
    b8f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    b8f8:	add	r0, r1, r0
    b8fc:	str	r0, [fp, #-48]	; 0xffffffd0
    b900:	ldr	r0, [sp, #20]
    b904:	ldr	r1, [fp, #-52]	; 0xffffffcc
    b908:	add	r0, r1, r0
    b90c:	str	r0, [fp, #-52]	; 0xffffffcc
    b910:	ldr	r0, [sp, #16]
    b914:	ldr	r1, [fp, #-56]	; 0xffffffc8
    b918:	add	r0, r1, r0
    b91c:	str	r0, [fp, #-56]	; 0xffffffc8
    b920:	ldr	r0, [sp, #12]
    b924:	ldr	r1, [fp, #-60]	; 0xffffffc4
    b928:	add	r0, r1, r0
    b92c:	str	r0, [fp, #-60]	; 0xffffffc4
    b930:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b934:	sub	r0, r0, #16
    b938:	str	r0, [fp, #-28]	; 0xffffffe4
    b93c:	b	b654 <rb_sha256_process_block+0xc8>
    b940:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b944:	ldr	r1, [fp, #-20]	; 0xffffffec
    b948:	str	r0, [r1]
    b94c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b950:	ldr	r1, [fp, #-20]	; 0xffffffec
    b954:	str	r0, [r1, #4]
    b958:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b95c:	ldr	r1, [fp, #-20]	; 0xffffffec
    b960:	str	r0, [r1, #8]
    b964:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b968:	ldr	r1, [fp, #-20]	; 0xffffffec
    b96c:	str	r0, [r1, #12]
    b970:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b974:	ldr	r1, [fp, #-20]	; 0xffffffec
    b978:	str	r0, [r1, #16]
    b97c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    b980:	ldr	r1, [fp, #-20]	; 0xffffffec
    b984:	str	r0, [r1, #20]
    b988:	ldr	r0, [fp, #-56]	; 0xffffffc8
    b98c:	ldr	r1, [fp, #-20]	; 0xffffffec
    b990:	str	r0, [r1, #24]
    b994:	ldr	r0, [fp, #-60]	; 0xffffffc4
    b998:	ldr	r1, [fp, #-20]	; 0xffffffec
    b99c:	str	r0, [r1, #28]
    b9a0:	sub	sp, fp, #8
    b9a4:	pop	{r4, r5, fp, pc}
    b9a8:	.word	0x00016e70

0000b9ac <rb_sha512_crypt_r>:
    b9ac:	push	{r4, sl, fp, lr}
    b9b0:	add	fp, sp, #8
    b9b4:	sub	sp, sp, #312	; 0x138
    b9b8:	sub	sp, sp, #1024	; 0x400
    b9bc:	ldr	ip, [pc, #3988]	; c958 <rb_sha512_crypt_r+0xfac>
    b9c0:	add	ip, pc, ip
    b9c4:	str	r0, [fp, #-12]
    b9c8:	str	r1, [fp, #-16]
    b9cc:	str	r2, [fp, #-20]	; 0xffffffec
    b9d0:	str	r3, [fp, #-24]	; 0xffffffe8
    b9d4:	movw	r0, #0
    b9d8:	str	r0, [fp, #-860]	; 0xfffffca4
    b9dc:	str	r0, [fp, #-864]	; 0xfffffca0
    b9e0:	movw	r1, #5000	; 0x1388
    b9e4:	str	r1, [fp, #-876]	; 0xfffffc94
    b9e8:	str	r0, [fp, #-880]	; 0xfffffc90
    b9ec:	ldr	r1, [fp, #-16]
    b9f0:	mov	r0, ip
    b9f4:	movw	r2, #3
    b9f8:	bl	55e4 <strncmp@plt>
    b9fc:	cmp	r0, #0
    ba00:	bne	ba10 <rb_sha512_crypt_r+0x64>
    ba04:	ldr	r0, [fp, #-16]
    ba08:	add	r0, r0, #3
    ba0c:	str	r0, [fp, #-16]
    ba10:	ldr	r0, [pc, #4092]	; ca14 <rb_sha512_crypt_r+0x1068>
    ba14:	add	r1, pc, r0
    ba18:	ldr	r0, [fp, #-16]
    ba1c:	movw	r2, #7
    ba20:	bl	55e4 <strncmp@plt>
    ba24:	cmp	r0, #0
    ba28:	bne	baf8 <rb_sha512_crypt_r+0x14c>
    ba2c:	ldr	r0, [fp, #-16]
    ba30:	add	r0, r0, #8
    ba34:	mvn	r1, #0
    ba38:	add	r0, r0, r1
    ba3c:	str	r0, [fp, #-884]	; 0xfffffc8c
    ba40:	ldr	r0, [fp, #-884]	; 0xfffffc8c
    ba44:	sub	r1, fp, #888	; 0x378
    ba48:	movw	r2, #10
    ba4c:	bl	51d0 <strtoul@plt>
    ba50:	str	r0, [fp, #-892]	; 0xfffffc84
    ba54:	ldr	r0, [fp, #-888]	; 0xfffffc88
    ba58:	ldrb	r0, [r0]
    ba5c:	cmp	r0, #36	; 0x24
    ba60:	bne	baf4 <rb_sha512_crypt_r+0x148>
    ba64:	ldr	r0, [pc, #4012]	; ca18 <rb_sha512_crypt_r+0x106c>
    ba68:	ldr	r1, [fp, #-888]	; 0xfffffc88
    ba6c:	add	r1, r1, #1
    ba70:	str	r1, [fp, #-16]
    ba74:	ldr	r1, [fp, #-892]	; 0xfffffc84
    ba78:	cmp	r1, r0
    ba7c:	bcs	ba8c <rb_sha512_crypt_r+0xe0>
    ba80:	ldr	r0, [fp, #-892]	; 0xfffffc84
    ba84:	str	r0, [fp, #-1084]	; 0xfffffbc4
    ba88:	b	ba98 <rb_sha512_crypt_r+0xec>
    ba8c:	ldr	r0, [pc, #3972]	; ca18 <rb_sha512_crypt_r+0x106c>
    ba90:	str	r0, [fp, #-1084]	; 0xfffffbc4
    ba94:	b	ba98 <rb_sha512_crypt_r+0xec>
    ba98:	ldr	r0, [fp, #-1084]	; 0xfffffbc4
    ba9c:	movw	r1, #1000	; 0x3e8
    baa0:	cmp	r1, r0
    baa4:	bls	bab4 <rb_sha512_crypt_r+0x108>
    baa8:	movw	r0, #1000	; 0x3e8
    baac:	str	r0, [fp, #-1088]	; 0xfffffbc0
    bab0:	b	bae4 <rb_sha512_crypt_r+0x138>
    bab4:	ldr	r0, [pc, #3932]	; ca18 <rb_sha512_crypt_r+0x106c>
    bab8:	ldr	r1, [fp, #-892]	; 0xfffffc84
    babc:	cmp	r1, r0
    bac0:	bcs	bad0 <rb_sha512_crypt_r+0x124>
    bac4:	ldr	r0, [fp, #-892]	; 0xfffffc84
    bac8:	str	r0, [fp, #-1092]	; 0xfffffbbc
    bacc:	b	badc <rb_sha512_crypt_r+0x130>
    bad0:	ldr	r0, [pc, #3904]	; ca18 <rb_sha512_crypt_r+0x106c>
    bad4:	str	r0, [fp, #-1092]	; 0xfffffbbc
    bad8:	b	badc <rb_sha512_crypt_r+0x130>
    badc:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    bae0:	str	r0, [fp, #-1088]	; 0xfffffbc0
    bae4:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    bae8:	str	r0, [fp, #-876]	; 0xfffffc94
    baec:	movw	r0, #1
    baf0:	str	r0, [fp, #-880]	; 0xfffffc90
    baf4:	b	baf8 <rb_sha512_crypt_r+0x14c>
    baf8:	ldr	r0, [pc, #4052]	; cad4 <rb_sha512_crypt_r+0x1128>
    bafc:	add	r1, pc, r0
    bb00:	ldr	r0, [fp, #-16]
    bb04:	bl	55b4 <strcspn@plt>
    bb08:	cmp	r0, #16
    bb0c:	bcs	bb28 <rb_sha512_crypt_r+0x17c>
    bb10:	ldr	r0, [pc, #4032]	; cad8 <rb_sha512_crypt_r+0x112c>
    bb14:	add	r1, pc, r0
    bb18:	ldr	r0, [fp, #-16]
    bb1c:	bl	55b4 <strcspn@plt>
    bb20:	str	r0, [fp, #-1096]	; 0xfffffbb8
    bb24:	b	bb34 <rb_sha512_crypt_r+0x188>
    bb28:	movw	r0, #16
    bb2c:	str	r0, [fp, #-1096]	; 0xfffffbb8
    bb30:	b	bb34 <rb_sha512_crypt_r+0x188>
    bb34:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    bb38:	str	r0, [fp, #-844]	; 0xfffffcb4
    bb3c:	ldr	r0, [fp, #-12]
    bb40:	bl	51b8 <strlen@plt>
    bb44:	str	r0, [fp, #-848]	; 0xfffffcb0
    bb48:	ldr	r0, [fp, #-12]
    bb4c:	sub	r0, r0, #0
    bb50:	and	r0, r0, #7
    bb54:	cmp	r0, #0
    bb58:	beq	bbb4 <rb_sha512_crypt_r+0x208>
    bb5c:	ldr	r0, [fp, #-848]	; 0xfffffcb0
    bb60:	add	r0, r0, #15
    bb64:	bic	r0, r0, #7
    bb68:	mov	r1, sp
    bb6c:	sub	r0, r1, r0
    bb70:	mov	sp, r0
    bb74:	str	r0, [fp, #-896]	; 0xfffffc80
    bb78:	ldr	r0, [fp, #-896]	; 0xfffffc80
    bb7c:	add	r0, r0, #8
    bb80:	ldr	r1, [fp, #-896]	; 0xfffffc80
    bb84:	sub	r1, r1, #0
    bb88:	and	r1, r1, #7
    bb8c:	movw	r2, #0
    bb90:	sub	r1, r2, r1
    bb94:	add	r0, r0, r1
    bb98:	ldr	r1, [fp, #-12]
    bb9c:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    bba0:	str	r0, [fp, #-1100]	; 0xfffffbb4
    bba4:	bl	51dc <memcpy@plt>
    bba8:	ldr	r0, [fp, #-1100]	; 0xfffffbb4
    bbac:	str	r0, [fp, #-860]	; 0xfffffca4
    bbb0:	str	r0, [fp, #-12]
    bbb4:	ldr	r0, [fp, #-16]
    bbb8:	sub	r0, r0, #0
    bbbc:	and	r0, r0, #7
    bbc0:	cmp	r0, #0
    bbc4:	beq	bc20 <rb_sha512_crypt_r+0x274>
    bbc8:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    bbcc:	add	r0, r0, #15
    bbd0:	bic	r0, r0, #7
    bbd4:	mov	r1, sp
    bbd8:	sub	r0, r1, r0
    bbdc:	mov	sp, r0
    bbe0:	str	r0, [fp, #-900]	; 0xfffffc7c
    bbe4:	ldr	r0, [fp, #-900]	; 0xfffffc7c
    bbe8:	add	r0, r0, #8
    bbec:	ldr	r1, [fp, #-900]	; 0xfffffc7c
    bbf0:	sub	r1, r1, #0
    bbf4:	and	r1, r1, #7
    bbf8:	movw	r2, #0
    bbfc:	sub	r1, r2, r1
    bc00:	add	r0, r0, r1
    bc04:	ldr	r1, [fp, #-16]
    bc08:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    bc0c:	str	r0, [fp, #-1104]	; 0xfffffbb0
    bc10:	bl	51dc <memcpy@plt>
    bc14:	ldr	r0, [fp, #-1104]	; 0xfffffbb0
    bc18:	str	r0, [fp, #-864]	; 0xfffffca0
    bc1c:	str	r0, [fp, #-16]
    bc20:	sub	r0, fp, #496	; 0x1f0
    bc24:	bl	d4e0 <rb_sha512_init_ctx>
    bc28:	ldr	r0, [fp, #-12]
    bc2c:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc30:	sub	r2, fp, #496	; 0x1f0
    bc34:	bl	d5f8 <rb_sha512_process_bytes>
    bc38:	ldr	r0, [fp, #-16]
    bc3c:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bc40:	sub	r2, fp, #496	; 0x1f0
    bc44:	bl	d5f8 <rb_sha512_process_bytes>
    bc48:	sub	r0, fp, #840	; 0x348
    bc4c:	bl	d4e0 <rb_sha512_init_ctx>
    bc50:	ldr	r0, [fp, #-12]
    bc54:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc58:	sub	r2, fp, #840	; 0x348
    bc5c:	bl	d5f8 <rb_sha512_process_bytes>
    bc60:	ldr	r0, [fp, #-16]
    bc64:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bc68:	sub	r2, fp, #840	; 0x348
    bc6c:	bl	d5f8 <rb_sha512_process_bytes>
    bc70:	ldr	r0, [fp, #-12]
    bc74:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc78:	sub	r2, fp, #840	; 0x348
    bc7c:	bl	d5f8 <rb_sha512_process_bytes>
    bc80:	sub	r1, fp, #88	; 0x58
    bc84:	sub	r0, fp, #840	; 0x348
    bc88:	bl	d8c8 <rb_sha512_finish_ctx>
    bc8c:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bc90:	str	r1, [fp, #-852]	; 0xfffffcac
    bc94:	str	r0, [fp, #-1108]	; 0xfffffbac
    bc98:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bc9c:	cmp	r0, #64	; 0x40
    bca0:	bls	bcc4 <rb_sha512_crypt_r+0x318>
    bca4:	sub	r0, fp, #88	; 0x58
    bca8:	movw	r1, #64	; 0x40
    bcac:	sub	r2, fp, #496	; 0x1f0
    bcb0:	bl	d5f8 <rb_sha512_process_bytes>
    bcb4:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bcb8:	sub	r0, r0, #64	; 0x40
    bcbc:	str	r0, [fp, #-852]	; 0xfffffcac
    bcc0:	b	bc98 <rb_sha512_crypt_r+0x2ec>
    bcc4:	sub	r0, fp, #88	; 0x58
    bcc8:	ldr	r1, [fp, #-852]	; 0xfffffcac
    bccc:	sub	r2, fp, #496	; 0x1f0
    bcd0:	bl	d5f8 <rb_sha512_process_bytes>
    bcd4:	ldr	r0, [fp, #-848]	; 0xfffffcb0
    bcd8:	str	r0, [fp, #-852]	; 0xfffffcac
    bcdc:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bce0:	cmp	r0, #0
    bce4:	bls	bd30 <rb_sha512_crypt_r+0x384>
    bce8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bcec:	and	r0, r0, #1
    bcf0:	cmp	r0, #0
    bcf4:	beq	bd0c <rb_sha512_crypt_r+0x360>
    bcf8:	sub	r0, fp, #88	; 0x58
    bcfc:	movw	r1, #64	; 0x40
    bd00:	sub	r2, fp, #496	; 0x1f0
    bd04:	bl	d5f8 <rb_sha512_process_bytes>
    bd08:	b	bd1c <rb_sha512_crypt_r+0x370>
    bd0c:	ldr	r0, [fp, #-12]
    bd10:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd14:	sub	r2, fp, #496	; 0x1f0
    bd18:	bl	d5f8 <rb_sha512_process_bytes>
    bd1c:	b	bd20 <rb_sha512_crypt_r+0x374>
    bd20:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd24:	lsr	r0, r0, #1
    bd28:	str	r0, [fp, #-852]	; 0xfffffcac
    bd2c:	b	bcdc <rb_sha512_crypt_r+0x330>
    bd30:	sub	r1, fp, #88	; 0x58
    bd34:	sub	r0, fp, #496	; 0x1f0
    bd38:	bl	d8c8 <rb_sha512_finish_ctx>
    bd3c:	sub	r1, fp, #840	; 0x348
    bd40:	str	r0, [fp, #-1112]	; 0xfffffba8
    bd44:	mov	r0, r1
    bd48:	bl	d4e0 <rb_sha512_init_ctx>
    bd4c:	movw	r0, #0
    bd50:	str	r0, [fp, #-852]	; 0xfffffcac
    bd54:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd58:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd5c:	cmp	r0, r1
    bd60:	bcs	bd84 <rb_sha512_crypt_r+0x3d8>
    bd64:	ldr	r0, [fp, #-12]
    bd68:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd6c:	sub	r2, fp, #840	; 0x348
    bd70:	bl	d5f8 <rb_sha512_process_bytes>
    bd74:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bd78:	add	r0, r0, #1
    bd7c:	str	r0, [fp, #-852]	; 0xfffffcac
    bd80:	b	bd54 <rb_sha512_crypt_r+0x3a8>
    bd84:	sub	r0, fp, #840	; 0x348
    bd88:	sub	r1, fp, #152	; 0x98
    bd8c:	bl	d8c8 <rb_sha512_finish_ctx>
    bd90:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bd94:	add	r1, r1, #7
    bd98:	bic	r1, r1, #7
    bd9c:	mov	lr, sp
    bda0:	sub	r1, lr, r1
    bda4:	mov	sp, r1
    bda8:	str	r1, [fp, #-868]	; 0xfffffc9c
    bdac:	str	r1, [fp, #-856]	; 0xfffffca8
    bdb0:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bdb4:	str	r1, [fp, #-852]	; 0xfffffcac
    bdb8:	str	r0, [fp, #-1116]	; 0xfffffba4
    bdbc:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bdc0:	cmp	r0, #64	; 0x40
    bdc4:	bcc	bdf4 <rb_sha512_crypt_r+0x448>
    bdc8:	sub	r1, fp, #152	; 0x98
    bdcc:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bdd0:	movw	r2, #64	; 0x40
    bdd4:	bl	51dc <memcpy@plt>
    bdd8:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bddc:	add	r0, r0, #64	; 0x40
    bde0:	str	r0, [fp, #-856]	; 0xfffffca8
    bde4:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bde8:	sub	r0, r0, #64	; 0x40
    bdec:	str	r0, [fp, #-852]	; 0xfffffcac
    bdf0:	b	bdbc <rb_sha512_crypt_r+0x410>
    bdf4:	sub	r1, fp, #152	; 0x98
    bdf8:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bdfc:	ldr	r2, [fp, #-852]	; 0xfffffcac
    be00:	bl	51dc <memcpy@plt>
    be04:	sub	r0, fp, #840	; 0x348
    be08:	bl	d4e0 <rb_sha512_init_ctx>
    be0c:	movw	r0, #0
    be10:	str	r0, [fp, #-852]	; 0xfffffcac
    be14:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be18:	ldrb	r1, [fp, #-88]	; 0xffffffa8
    be1c:	add	r1, r1, #16
    be20:	cmp	r0, r1
    be24:	bcs	be48 <rb_sha512_crypt_r+0x49c>
    be28:	ldr	r0, [fp, #-16]
    be2c:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    be30:	sub	r2, fp, #840	; 0x348
    be34:	bl	d5f8 <rb_sha512_process_bytes>
    be38:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be3c:	add	r0, r0, #1
    be40:	str	r0, [fp, #-852]	; 0xfffffcac
    be44:	b	be14 <rb_sha512_crypt_r+0x468>
    be48:	sub	r0, fp, #840	; 0x348
    be4c:	sub	r1, fp, #152	; 0x98
    be50:	bl	d8c8 <rb_sha512_finish_ctx>
    be54:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    be58:	add	r1, r1, #7
    be5c:	bic	r1, r1, #7
    be60:	mov	lr, sp
    be64:	sub	r1, lr, r1
    be68:	mov	sp, r1
    be6c:	str	r1, [fp, #-872]	; 0xfffffc98
    be70:	str	r1, [fp, #-856]	; 0xfffffca8
    be74:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    be78:	str	r1, [fp, #-852]	; 0xfffffcac
    be7c:	str	r0, [fp, #-1120]	; 0xfffffba0
    be80:	ldr	r0, [fp, #-852]	; 0xfffffcac
    be84:	cmp	r0, #64	; 0x40
    be88:	bcc	beb8 <rb_sha512_crypt_r+0x50c>
    be8c:	sub	r1, fp, #152	; 0x98
    be90:	ldr	r0, [fp, #-856]	; 0xfffffca8
    be94:	movw	r2, #64	; 0x40
    be98:	bl	51dc <memcpy@plt>
    be9c:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bea0:	add	r0, r0, #64	; 0x40
    bea4:	str	r0, [fp, #-856]	; 0xfffffca8
    bea8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    beac:	sub	r0, r0, #64	; 0x40
    beb0:	str	r0, [fp, #-852]	; 0xfffffcac
    beb4:	b	be80 <rb_sha512_crypt_r+0x4d4>
    beb8:	sub	r1, fp, #152	; 0x98
    bebc:	ldr	r0, [fp, #-856]	; 0xfffffca8
    bec0:	ldr	r2, [fp, #-852]	; 0xfffffcac
    bec4:	bl	51dc <memcpy@plt>
    bec8:	movw	r0, #0
    becc:	str	r0, [fp, #-852]	; 0xfffffcac
    bed0:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bed4:	ldr	r1, [fp, #-876]	; 0xfffffc94
    bed8:	cmp	r0, r1
    bedc:	bcs	bfec <rb_sha512_crypt_r+0x640>
    bee0:	sub	r0, fp, #496	; 0x1f0
    bee4:	bl	d4e0 <rb_sha512_init_ctx>
    bee8:	ldr	r0, [fp, #-852]	; 0xfffffcac
    beec:	and	r0, r0, #1
    bef0:	cmp	r0, #0
    bef4:	beq	bf0c <rb_sha512_crypt_r+0x560>
    bef8:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    befc:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bf00:	sub	r2, fp, #496	; 0x1f0
    bf04:	bl	d5f8 <rb_sha512_process_bytes>
    bf08:	b	bf1c <rb_sha512_crypt_r+0x570>
    bf0c:	sub	r0, fp, #88	; 0x58
    bf10:	movw	r1, #64	; 0x40
    bf14:	sub	r2, fp, #496	; 0x1f0
    bf18:	bl	d5f8 <rb_sha512_process_bytes>
    bf1c:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bf20:	movw	r1, #43691	; 0xaaab
    bf24:	movt	r1, #43690	; 0xaaaa
    bf28:	umull	r1, r2, r0, r1
    bf2c:	lsr	r2, r2, #1
    bf30:	add	r2, r2, r2, lsl #1
    bf34:	sub	r0, r0, r2
    bf38:	cmp	r0, #0
    bf3c:	str	r1, [fp, #-1124]	; 0xfffffb9c
    bf40:	beq	bf54 <rb_sha512_crypt_r+0x5a8>
    bf44:	ldr	r0, [fp, #-872]	; 0xfffffc98
    bf48:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    bf4c:	sub	r2, fp, #496	; 0x1f0
    bf50:	bl	d5f8 <rb_sha512_process_bytes>
    bf54:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bf58:	movw	r1, #18725	; 0x4925
    bf5c:	movt	r1, #9362	; 0x2492
    bf60:	umull	r1, r2, r0, r1
    bf64:	sub	r3, r0, r2
    bf68:	add	r2, r2, r3, lsr #1
    bf6c:	lsr	r3, r2, #2
    bf70:	lsl	r3, r3, #3
    bf74:	sub	r2, r3, r2, lsr #2
    bf78:	sub	r0, r0, r2
    bf7c:	cmp	r0, #0
    bf80:	str	r1, [fp, #-1128]	; 0xfffffb98
    bf84:	beq	bf98 <rb_sha512_crypt_r+0x5ec>
    bf88:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    bf8c:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bf90:	sub	r2, fp, #496	; 0x1f0
    bf94:	bl	d5f8 <rb_sha512_process_bytes>
    bf98:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bf9c:	and	r0, r0, #1
    bfa0:	cmp	r0, #0
    bfa4:	beq	bfbc <rb_sha512_crypt_r+0x610>
    bfa8:	sub	r0, fp, #88	; 0x58
    bfac:	movw	r1, #64	; 0x40
    bfb0:	sub	r2, fp, #496	; 0x1f0
    bfb4:	bl	d5f8 <rb_sha512_process_bytes>
    bfb8:	b	bfcc <rb_sha512_crypt_r+0x620>
    bfbc:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    bfc0:	ldr	r1, [fp, #-848]	; 0xfffffcb0
    bfc4:	sub	r2, fp, #496	; 0x1f0
    bfc8:	bl	d5f8 <rb_sha512_process_bytes>
    bfcc:	sub	r1, fp, #88	; 0x58
    bfd0:	sub	r0, fp, #496	; 0x1f0
    bfd4:	bl	d8c8 <rb_sha512_finish_ctx>
    bfd8:	str	r0, [fp, #-1132]	; 0xfffffb94
    bfdc:	ldr	r0, [fp, #-852]	; 0xfffffcac
    bfe0:	add	r0, r0, #1
    bfe4:	str	r0, [fp, #-852]	; 0xfffffcac
    bfe8:	b	bed0 <rb_sha512_crypt_r+0x524>
    bfec:	ldr	r0, [fp, #-20]	; 0xffffffec
    bff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bff4:	movw	r2, #0
    bff8:	cmp	r2, r1
    bffc:	str	r0, [fp, #-1136]	; 0xfffffb90
    c000:	ble	c010 <rb_sha512_crypt_r+0x664>
    c004:	movw	r0, #0
    c008:	str	r0, [fp, #-1140]	; 0xfffffb8c
    c00c:	b	c018 <rb_sha512_crypt_r+0x66c>
    c010:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c014:	str	r0, [fp, #-1140]	; 0xfffffb8c
    c018:	ldr	r0, [fp, #-1140]	; 0xfffffb8c
    c01c:	ldr	r1, [fp, #-1136]	; 0xfffffb90
    c020:	str	r0, [fp, #-1144]	; 0xfffffb88
    c024:	mov	r0, r1
    c028:	movw	r2, #0
    c02c:	and	r1, r2, #255	; 0xff
    c030:	ldr	r2, [fp, #-1144]	; 0xfffffb88
    c034:	bl	4ff0 <memset@plt>
    c038:	ldr	r0, [fp, #-20]	; 0xffffffec
    c03c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c040:	movw	r2, #0
    c044:	cmp	r2, r1
    c048:	str	r0, [fp, #-1148]	; 0xfffffb84
    c04c:	ble	c05c <rb_sha512_crypt_r+0x6b0>
    c050:	movw	r0, #0
    c054:	str	r0, [fp, #-1152]	; 0xfffffb80
    c058:	b	c064 <rb_sha512_crypt_r+0x6b8>
    c05c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c060:	str	r0, [fp, #-1152]	; 0xfffffb80
    c064:	ldr	r0, [fp, #-1152]	; 0xfffffb80
    c068:	ldr	r1, [pc, #3956]	; cfe4 <rb_sha512_crypt_r+0x1638>
    c06c:	add	r1, pc, r1
    c070:	ldr	r2, [fp, #-1148]	; 0xfffffb84
    c074:	str	r0, [fp, #-1156]	; 0xfffffb7c
    c078:	mov	r0, r2
    c07c:	ldr	r2, [fp, #-1156]	; 0xfffffb7c
    c080:	bl	4f3c <strncpy@plt>
    c084:	ldr	r1, [fp, #-20]	; 0xffffffec
    c088:	str	r0, [fp, #-1160]	; 0xfffffb78
    c08c:	mov	r0, r1
    c090:	movw	r1, #0
    c094:	bl	4f78 <strchr@plt>
    c098:	str	r0, [fp, #-856]	; 0xfffffca8
    c09c:	movw	r1, #0
    c0a0:	cmp	r0, r1
    c0a4:	bne	c0e4 <rb_sha512_crypt_r+0x738>
    c0a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    c0ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c0b0:	movw	r2, #0
    c0b4:	cmp	r2, r1
    c0b8:	str	r0, [fp, #-1164]	; 0xfffffb74
    c0bc:	ble	c0cc <rb_sha512_crypt_r+0x720>
    c0c0:	movw	r0, #0
    c0c4:	str	r0, [fp, #-1168]	; 0xfffffb70
    c0c8:	b	c0d4 <rb_sha512_crypt_r+0x728>
    c0cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c0d0:	str	r0, [fp, #-1168]	; 0xfffffb70
    c0d4:	ldr	r0, [fp, #-1168]	; 0xfffffb70
    c0d8:	ldr	r1, [fp, #-1164]	; 0xfffffb74
    c0dc:	add	r0, r1, r0
    c0e0:	str	r0, [fp, #-856]	; 0xfffffca8
    c0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c0e8:	sub	r0, r0, #3
    c0ec:	str	r0, [fp, #-24]	; 0xffffffe8
    c0f0:	ldr	r0, [fp, #-880]	; 0xfffffc90
    c0f4:	cmp	r0, #0
    c0f8:	beq	c190 <rb_sha512_crypt_r+0x7e4>
    c0fc:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c100:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c104:	movw	r2, #0
    c108:	cmp	r2, r1
    c10c:	str	r0, [fp, #-1172]	; 0xfffffb6c
    c110:	ble	c120 <rb_sha512_crypt_r+0x774>
    c114:	movw	r0, #0
    c118:	str	r0, [fp, #-1176]	; 0xfffffb68
    c11c:	b	c128 <rb_sha512_crypt_r+0x77c>
    c120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c124:	str	r0, [fp, #-1176]	; 0xfffffb68
    c128:	ldr	r0, [fp, #-1176]	; 0xfffffb68
    c12c:	ldr	r1, [pc, #3948]	; d0a0 <rb_sha512_crypt_r+0x16f4>
    c130:	add	r2, pc, r1
    c134:	ldr	r1, [pc, #3944]	; d0a4 <rb_sha512_crypt_r+0x16f8>
    c138:	add	r3, pc, r1
    c13c:	ldr	r1, [fp, #-876]	; 0xfffffc94
    c140:	sub	sp, sp, #8
    c144:	ldr	ip, [fp, #-1172]	; 0xfffffb6c
    c148:	str	r0, [fp, #-1180]	; 0xfffffb64
    c14c:	mov	r0, ip
    c150:	ldr	lr, [fp, #-1180]	; 0xfffffb64
    c154:	str	r1, [fp, #-1184]	; 0xfffffb60
    c158:	mov	r1, lr
    c15c:	ldr	r4, [fp, #-1184]	; 0xfffffb60
    c160:	str	r4, [sp]
    c164:	bl	5584 <snprintf@plt>
    c168:	add	sp, sp, #8
    c16c:	str	r0, [fp, #-904]	; 0xfffffc78
    c170:	ldr	r0, [fp, #-904]	; 0xfffffc78
    c174:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c178:	add	r0, r1, r0
    c17c:	str	r0, [fp, #-856]	; 0xfffffca8
    c180:	ldr	r0, [fp, #-904]	; 0xfffffc78
    c184:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c188:	sub	r0, r1, r0
    c18c:	str	r0, [fp, #-24]	; 0xffffffe8
    c190:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c194:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c198:	movw	r2, #0
    c19c:	cmp	r2, r1
    c1a0:	str	r0, [fp, #-1188]	; 0xfffffb5c
    c1a4:	ble	c1b4 <rb_sha512_crypt_r+0x808>
    c1a8:	movw	r0, #0
    c1ac:	str	r0, [fp, #-1192]	; 0xfffffb58
    c1b0:	b	c1bc <rb_sha512_crypt_r+0x810>
    c1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1b8:	str	r0, [fp, #-1192]	; 0xfffffb58
    c1bc:	ldr	r0, [fp, #-1192]	; 0xfffffb58
    c1c0:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c1c4:	cmp	r0, r1
    c1c8:	bcs	c1fc <rb_sha512_crypt_r+0x850>
    c1cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1d0:	movw	r1, #0
    c1d4:	cmp	r1, r0
    c1d8:	ble	c1e8 <rb_sha512_crypt_r+0x83c>
    c1dc:	movw	r0, #0
    c1e0:	str	r0, [fp, #-1196]	; 0xfffffb54
    c1e4:	b	c1f0 <rb_sha512_crypt_r+0x844>
    c1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1ec:	str	r0, [fp, #-1196]	; 0xfffffb54
    c1f0:	ldr	r0, [fp, #-1196]	; 0xfffffb54
    c1f4:	str	r0, [fp, #-1200]	; 0xfffffb50
    c1f8:	b	c204 <rb_sha512_crypt_r+0x858>
    c1fc:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c200:	str	r0, [fp, #-1200]	; 0xfffffb50
    c204:	ldr	r0, [fp, #-1200]	; 0xfffffb50
    c208:	ldr	r1, [fp, #-1188]	; 0xfffffb5c
    c20c:	str	r0, [fp, #-1204]	; 0xfffffb4c
    c210:	mov	r0, r1
    c214:	movw	r2, #0
    c218:	and	r1, r2, #255	; 0xff
    c21c:	ldr	r2, [fp, #-1204]	; 0xfffffb4c
    c220:	bl	4ff0 <memset@plt>
    c224:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c228:	ldr	r1, [fp, #-16]
    c22c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c230:	movw	lr, #0
    c234:	cmp	lr, r2
    c238:	str	r0, [fp, #-1208]	; 0xfffffb48
    c23c:	str	r1, [fp, #-1212]	; 0xfffffb44
    c240:	ble	c250 <rb_sha512_crypt_r+0x8a4>
    c244:	movw	r0, #0
    c248:	str	r0, [fp, #-1216]	; 0xfffffb40
    c24c:	b	c258 <rb_sha512_crypt_r+0x8ac>
    c250:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c254:	str	r0, [fp, #-1216]	; 0xfffffb40
    c258:	ldr	r0, [fp, #-1216]	; 0xfffffb40
    c25c:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c260:	cmp	r0, r1
    c264:	bcs	c298 <rb_sha512_crypt_r+0x8ec>
    c268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c26c:	movw	r1, #0
    c270:	cmp	r1, r0
    c274:	ble	c284 <rb_sha512_crypt_r+0x8d8>
    c278:	movw	r0, #0
    c27c:	str	r0, [fp, #-1220]	; 0xfffffb3c
    c280:	b	c28c <rb_sha512_crypt_r+0x8e0>
    c284:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c288:	str	r0, [fp, #-1220]	; 0xfffffb3c
    c28c:	ldr	r0, [fp, #-1220]	; 0xfffffb3c
    c290:	str	r0, [fp, #-1224]	; 0xfffffb38
    c294:	b	c2a0 <rb_sha512_crypt_r+0x8f4>
    c298:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c29c:	str	r0, [fp, #-1224]	; 0xfffffb38
    c2a0:	ldr	r0, [fp, #-1224]	; 0xfffffb38
    c2a4:	ldr	r1, [fp, #-1208]	; 0xfffffb48
    c2a8:	str	r0, [fp, #-1228]	; 0xfffffb34
    c2ac:	mov	r0, r1
    c2b0:	ldr	r1, [fp, #-1212]	; 0xfffffb44
    c2b4:	ldr	r2, [fp, #-1228]	; 0xfffffb34
    c2b8:	bl	4f3c <strncpy@plt>
    c2bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    c2c0:	str	r0, [fp, #-1232]	; 0xfffffb30
    c2c4:	mov	r0, r1
    c2c8:	movw	r1, #0
    c2cc:	bl	4f78 <strchr@plt>
    c2d0:	str	r0, [fp, #-856]	; 0xfffffca8
    c2d4:	movw	r1, #0
    c2d8:	cmp	r0, r1
    c2dc:	bne	c2f0 <rb_sha512_crypt_r+0x944>
    c2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    c2e4:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c2e8:	add	r0, r0, r1
    c2ec:	str	r0, [fp, #-856]	; 0xfffffca8
    c2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c2f4:	movw	r1, #0
    c2f8:	cmp	r1, r0
    c2fc:	ble	c30c <rb_sha512_crypt_r+0x960>
    c300:	movw	r0, #0
    c304:	str	r0, [fp, #-1236]	; 0xfffffb2c
    c308:	b	c314 <rb_sha512_crypt_r+0x968>
    c30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c310:	str	r0, [fp, #-1236]	; 0xfffffb2c
    c314:	ldr	r0, [fp, #-1236]	; 0xfffffb2c
    c318:	ldr	r1, [fp, #-844]	; 0xfffffcb4
    c31c:	cmp	r0, r1
    c320:	bcs	c354 <rb_sha512_crypt_r+0x9a8>
    c324:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c328:	movw	r1, #0
    c32c:	cmp	r1, r0
    c330:	ble	c340 <rb_sha512_crypt_r+0x994>
    c334:	movw	r0, #0
    c338:	str	r0, [fp, #-1240]	; 0xfffffb28
    c33c:	b	c348 <rb_sha512_crypt_r+0x99c>
    c340:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c344:	str	r0, [fp, #-1240]	; 0xfffffb28
    c348:	ldr	r0, [fp, #-1240]	; 0xfffffb28
    c34c:	str	r0, [fp, #-1244]	; 0xfffffb24
    c350:	b	c35c <rb_sha512_crypt_r+0x9b0>
    c354:	ldr	r0, [fp, #-844]	; 0xfffffcb4
    c358:	str	r0, [fp, #-1244]	; 0xfffffb24
    c35c:	ldr	r0, [fp, #-1244]	; 0xfffffb24
    c360:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c364:	sub	r0, r1, r0
    c368:	str	r0, [fp, #-24]	; 0xffffffe8
    c36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c370:	cmp	r0, #0
    c374:	ble	c39c <rb_sha512_crypt_r+0x9f0>
    c378:	ldr	r0, [fp, #-856]	; 0xfffffca8
    c37c:	add	r1, r0, #1
    c380:	str	r1, [fp, #-856]	; 0xfffffca8
    c384:	movw	r1, #36	; 0x24
    c388:	strb	r1, [r0]
    c38c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c390:	mvn	r1, #0
    c394:	add	r0, r0, r1
    c398:	str	r0, [fp, #-24]	; 0xffffffe8
    c39c:	b	c3a0 <rb_sha512_crypt_r+0x9f4>
    c3a0:	ldrb	r0, [fp, #-88]	; 0xffffffa8
    c3a4:	lsl	r0, r0, #16
    c3a8:	ldrb	r1, [fp, #-67]	; 0xffffffbd
    c3ac:	lsl	r1, r1, #8
    c3b0:	orr	r0, r0, r1
    c3b4:	ldrb	r1, [fp, #-46]	; 0xffffffd2
    c3b8:	orr	r0, r0, r1
    c3bc:	str	r0, [fp, #-908]	; 0xfffffc74
    c3c0:	movw	r0, #4
    c3c4:	str	r0, [fp, #-912]	; 0xfffffc70
    c3c8:	ldr	r0, [fp, #-912]	; 0xfffffc70
    c3cc:	mvn	r1, #0
    c3d0:	add	r1, r0, r1
    c3d4:	str	r1, [fp, #-912]	; 0xfffffc70
    c3d8:	cmp	r0, #0
    c3dc:	movw	r0, #0
    c3e0:	str	r0, [fp, #-1248]	; 0xfffffb20
    c3e4:	ble	c3fc <rb_sha512_crypt_r+0xa50>
    c3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c3ec:	cmp	r0, #0
    c3f0:	movw	r0, #0
    c3f4:	movgt	r0, #1
    c3f8:	str	r0, [fp, #-1248]	; 0xfffffb20
    c3fc:	ldr	r0, [fp, #-1248]	; 0xfffffb20
    c400:	tst	r0, #1
    c404:	beq	c450 <rb_sha512_crypt_r+0xaa4>
    c408:	ldr	r0, [pc, #3980]	; d39c <rb_sha512_crypt_r+0x19f0>
    c40c:	add	r0, pc, r0
    c410:	ldr	r1, [fp, #-908]	; 0xfffffc74
    c414:	and	r1, r1, #63	; 0x3f
    c418:	add	r0, r0, r1
    c41c:	ldrb	r0, [r0]
    c420:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c424:	add	r2, r1, #1
    c428:	str	r2, [fp, #-856]	; 0xfffffca8
    c42c:	strb	r0, [r1]
    c430:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c434:	mvn	r1, #0
    c438:	add	r0, r0, r1
    c43c:	str	r0, [fp, #-24]	; 0xffffffe8
    c440:	ldr	r0, [fp, #-908]	; 0xfffffc74
    c444:	lsr	r0, r0, #6
    c448:	str	r0, [fp, #-908]	; 0xfffffc74
    c44c:	b	c3c8 <rb_sha512_crypt_r+0xa1c>
    c450:	b	c454 <rb_sha512_crypt_r+0xaa8>
    c454:	b	c458 <rb_sha512_crypt_r+0xaac>
    c458:	ldrb	r0, [fp, #-66]	; 0xffffffbe
    c45c:	lsl	r0, r0, #16
    c460:	ldrb	r1, [fp, #-45]	; 0xffffffd3
    c464:	lsl	r1, r1, #8
    c468:	orr	r0, r0, r1
    c46c:	ldrb	r1, [fp, #-87]	; 0xffffffa9
    c470:	orr	r0, r0, r1
    c474:	str	r0, [fp, #-916]	; 0xfffffc6c
    c478:	movw	r0, #4
    c47c:	str	r0, [fp, #-920]	; 0xfffffc68
    c480:	ldr	r0, [fp, #-920]	; 0xfffffc68
    c484:	mvn	r1, #0
    c488:	add	r1, r0, r1
    c48c:	str	r1, [fp, #-920]	; 0xfffffc68
    c490:	cmp	r0, #0
    c494:	movw	r0, #0
    c498:	str	r0, [fp, #-1252]	; 0xfffffb1c
    c49c:	ble	c4b4 <rb_sha512_crypt_r+0xb08>
    c4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c4a4:	cmp	r0, #0
    c4a8:	movw	r0, #0
    c4ac:	movgt	r0, #1
    c4b0:	str	r0, [fp, #-1252]	; 0xfffffb1c
    c4b4:	ldr	r0, [fp, #-1252]	; 0xfffffb1c
    c4b8:	tst	r0, #1
    c4bc:	beq	c508 <rb_sha512_crypt_r+0xb5c>
    c4c0:	ldr	r0, [pc, #4036]	; d48c <rb_sha512_crypt_r+0x1ae0>
    c4c4:	add	r0, pc, r0
    c4c8:	ldr	r1, [fp, #-916]	; 0xfffffc6c
    c4cc:	and	r1, r1, #63	; 0x3f
    c4d0:	add	r0, r0, r1
    c4d4:	ldrb	r0, [r0]
    c4d8:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c4dc:	add	r2, r1, #1
    c4e0:	str	r2, [fp, #-856]	; 0xfffffca8
    c4e4:	strb	r0, [r1]
    c4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c4ec:	mvn	r1, #0
    c4f0:	add	r0, r0, r1
    c4f4:	str	r0, [fp, #-24]	; 0xffffffe8
    c4f8:	ldr	r0, [fp, #-916]	; 0xfffffc6c
    c4fc:	lsr	r0, r0, #6
    c500:	str	r0, [fp, #-916]	; 0xfffffc6c
    c504:	b	c480 <rb_sha512_crypt_r+0xad4>
    c508:	b	c50c <rb_sha512_crypt_r+0xb60>
    c50c:	b	c510 <rb_sha512_crypt_r+0xb64>
    c510:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    c514:	lsl	r0, r0, #16
    c518:	ldrb	r1, [fp, #-86]	; 0xffffffaa
    c51c:	lsl	r1, r1, #8
    c520:	orr	r0, r0, r1
    c524:	ldrb	r1, [fp, #-65]	; 0xffffffbf
    c528:	orr	r0, r0, r1
    c52c:	str	r0, [fp, #-924]	; 0xfffffc64
    c530:	movw	r0, #4
    c534:	str	r0, [fp, #-928]	; 0xfffffc60
    c538:	ldr	r0, [fp, #-928]	; 0xfffffc60
    c53c:	mvn	r1, #0
    c540:	add	r1, r0, r1
    c544:	str	r1, [fp, #-928]	; 0xfffffc60
    c548:	cmp	r0, #0
    c54c:	movw	r0, #0
    c550:	str	r0, [fp, #-1256]	; 0xfffffb18
    c554:	ble	c56c <rb_sha512_crypt_r+0xbc0>
    c558:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c55c:	cmp	r0, #0
    c560:	movw	r0, #0
    c564:	movgt	r0, #1
    c568:	str	r0, [fp, #-1256]	; 0xfffffb18
    c56c:	ldr	r0, [fp, #-1256]	; 0xfffffb18
    c570:	tst	r0, #1
    c574:	beq	c5c0 <rb_sha512_crypt_r+0xc14>
    c578:	ldr	r0, [pc, #3932]	; d4dc <rb_sha512_crypt_r+0x1b30>
    c57c:	add	r0, pc, r0
    c580:	ldr	r1, [fp, #-924]	; 0xfffffc64
    c584:	and	r1, r1, #63	; 0x3f
    c588:	add	r0, r0, r1
    c58c:	ldrb	r0, [r0]
    c590:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c594:	add	r2, r1, #1
    c598:	str	r2, [fp, #-856]	; 0xfffffca8
    c59c:	strb	r0, [r1]
    c5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c5a4:	mvn	r1, #0
    c5a8:	add	r0, r0, r1
    c5ac:	str	r0, [fp, #-24]	; 0xffffffe8
    c5b0:	ldr	r0, [fp, #-924]	; 0xfffffc64
    c5b4:	lsr	r0, r0, #6
    c5b8:	str	r0, [fp, #-924]	; 0xfffffc64
    c5bc:	b	c538 <rb_sha512_crypt_r+0xb8c>
    c5c0:	b	c5c4 <rb_sha512_crypt_r+0xc18>
    c5c4:	b	c5c8 <rb_sha512_crypt_r+0xc1c>
    c5c8:	ldrb	r0, [fp, #-85]	; 0xffffffab
    c5cc:	lsl	r0, r0, #16
    c5d0:	ldrb	r1, [fp, #-64]	; 0xffffffc0
    c5d4:	lsl	r1, r1, #8
    c5d8:	orr	r0, r0, r1
    c5dc:	ldrb	r1, [fp, #-43]	; 0xffffffd5
    c5e0:	orr	r0, r0, r1
    c5e4:	str	r0, [fp, #-932]	; 0xfffffc5c
    c5e8:	movw	r0, #4
    c5ec:	str	r0, [fp, #-936]	; 0xfffffc58
    c5f0:	ldr	r0, [fp, #-936]	; 0xfffffc58
    c5f4:	mvn	r1, #0
    c5f8:	add	r1, r0, r1
    c5fc:	str	r1, [fp, #-936]	; 0xfffffc58
    c600:	cmp	r0, #0
    c604:	movw	r0, #0
    c608:	str	r0, [fp, #-1260]	; 0xfffffb14
    c60c:	ble	c624 <rb_sha512_crypt_r+0xc78>
    c610:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c614:	cmp	r0, #0
    c618:	movw	r0, #0
    c61c:	movgt	r0, #1
    c620:	str	r0, [fp, #-1260]	; 0xfffffb14
    c624:	ldr	r0, [fp, #-1260]	; 0xfffffb14
    c628:	tst	r0, #1
    c62c:	beq	c678 <rb_sha512_crypt_r+0xccc>
    c630:	ldr	r0, [pc, #3744]	; d4d8 <rb_sha512_crypt_r+0x1b2c>
    c634:	add	r0, pc, r0
    c638:	ldr	r1, [fp, #-932]	; 0xfffffc5c
    c63c:	and	r1, r1, #63	; 0x3f
    c640:	add	r0, r0, r1
    c644:	ldrb	r0, [r0]
    c648:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c64c:	add	r2, r1, #1
    c650:	str	r2, [fp, #-856]	; 0xfffffca8
    c654:	strb	r0, [r1]
    c658:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c65c:	mvn	r1, #0
    c660:	add	r0, r0, r1
    c664:	str	r0, [fp, #-24]	; 0xffffffe8
    c668:	ldr	r0, [fp, #-932]	; 0xfffffc5c
    c66c:	lsr	r0, r0, #6
    c670:	str	r0, [fp, #-932]	; 0xfffffc5c
    c674:	b	c5f0 <rb_sha512_crypt_r+0xc44>
    c678:	b	c67c <rb_sha512_crypt_r+0xcd0>
    c67c:	b	c680 <rb_sha512_crypt_r+0xcd4>
    c680:	ldrb	r0, [fp, #-63]	; 0xffffffc1
    c684:	lsl	r0, r0, #16
    c688:	ldrb	r1, [fp, #-42]	; 0xffffffd6
    c68c:	lsl	r1, r1, #8
    c690:	orr	r0, r0, r1
    c694:	ldrb	r1, [fp, #-84]	; 0xffffffac
    c698:	orr	r0, r0, r1
    c69c:	str	r0, [fp, #-940]	; 0xfffffc54
    c6a0:	movw	r0, #4
    c6a4:	str	r0, [fp, #-944]	; 0xfffffc50
    c6a8:	ldr	r0, [fp, #-944]	; 0xfffffc50
    c6ac:	mvn	r1, #0
    c6b0:	add	r1, r0, r1
    c6b4:	str	r1, [fp, #-944]	; 0xfffffc50
    c6b8:	cmp	r0, #0
    c6bc:	movw	r0, #0
    c6c0:	str	r0, [fp, #-1264]	; 0xfffffb10
    c6c4:	ble	c6dc <rb_sha512_crypt_r+0xd30>
    c6c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c6cc:	cmp	r0, #0
    c6d0:	movw	r0, #0
    c6d4:	movgt	r0, #1
    c6d8:	str	r0, [fp, #-1264]	; 0xfffffb10
    c6dc:	ldr	r0, [fp, #-1264]	; 0xfffffb10
    c6e0:	tst	r0, #1
    c6e4:	beq	c730 <rb_sha512_crypt_r+0xd84>
    c6e8:	ldr	r0, [pc, #3556]	; d4d4 <rb_sha512_crypt_r+0x1b28>
    c6ec:	add	r0, pc, r0
    c6f0:	ldr	r1, [fp, #-940]	; 0xfffffc54
    c6f4:	and	r1, r1, #63	; 0x3f
    c6f8:	add	r0, r0, r1
    c6fc:	ldrb	r0, [r0]
    c700:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c704:	add	r2, r1, #1
    c708:	str	r2, [fp, #-856]	; 0xfffffca8
    c70c:	strb	r0, [r1]
    c710:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c714:	mvn	r1, #0
    c718:	add	r0, r0, r1
    c71c:	str	r0, [fp, #-24]	; 0xffffffe8
    c720:	ldr	r0, [fp, #-940]	; 0xfffffc54
    c724:	lsr	r0, r0, #6
    c728:	str	r0, [fp, #-940]	; 0xfffffc54
    c72c:	b	c6a8 <rb_sha512_crypt_r+0xcfc>
    c730:	b	c734 <rb_sha512_crypt_r+0xd88>
    c734:	b	c738 <rb_sha512_crypt_r+0xd8c>
    c738:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    c73c:	lsl	r0, r0, #16
    c740:	ldrb	r1, [fp, #-83]	; 0xffffffad
    c744:	lsl	r1, r1, #8
    c748:	orr	r0, r0, r1
    c74c:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    c750:	orr	r0, r0, r1
    c754:	str	r0, [fp, #-948]	; 0xfffffc4c
    c758:	movw	r0, #4
    c75c:	str	r0, [fp, #-952]	; 0xfffffc48
    c760:	ldr	r0, [fp, #-952]	; 0xfffffc48
    c764:	mvn	r1, #0
    c768:	add	r1, r0, r1
    c76c:	str	r1, [fp, #-952]	; 0xfffffc48
    c770:	cmp	r0, #0
    c774:	movw	r0, #0
    c778:	str	r0, [fp, #-1268]	; 0xfffffb0c
    c77c:	ble	c794 <rb_sha512_crypt_r+0xde8>
    c780:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c784:	cmp	r0, #0
    c788:	movw	r0, #0
    c78c:	movgt	r0, #1
    c790:	str	r0, [fp, #-1268]	; 0xfffffb0c
    c794:	ldr	r0, [fp, #-1268]	; 0xfffffb0c
    c798:	tst	r0, #1
    c79c:	beq	c7e8 <rb_sha512_crypt_r+0xe3c>
    c7a0:	ldr	r0, [pc, #3368]	; d4d0 <rb_sha512_crypt_r+0x1b24>
    c7a4:	add	r0, pc, r0
    c7a8:	ldr	r1, [fp, #-948]	; 0xfffffc4c
    c7ac:	and	r1, r1, #63	; 0x3f
    c7b0:	add	r0, r0, r1
    c7b4:	ldrb	r0, [r0]
    c7b8:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c7bc:	add	r2, r1, #1
    c7c0:	str	r2, [fp, #-856]	; 0xfffffca8
    c7c4:	strb	r0, [r1]
    c7c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c7cc:	mvn	r1, #0
    c7d0:	add	r0, r0, r1
    c7d4:	str	r0, [fp, #-24]	; 0xffffffe8
    c7d8:	ldr	r0, [fp, #-948]	; 0xfffffc4c
    c7dc:	lsr	r0, r0, #6
    c7e0:	str	r0, [fp, #-948]	; 0xfffffc4c
    c7e4:	b	c760 <rb_sha512_crypt_r+0xdb4>
    c7e8:	b	c7ec <rb_sha512_crypt_r+0xe40>
    c7ec:	b	c7f0 <rb_sha512_crypt_r+0xe44>
    c7f0:	ldrb	r0, [fp, #-82]	; 0xffffffae
    c7f4:	lsl	r0, r0, #16
    c7f8:	ldrb	r1, [fp, #-61]	; 0xffffffc3
    c7fc:	lsl	r1, r1, #8
    c800:	orr	r0, r0, r1
    c804:	ldrb	r1, [fp, #-40]	; 0xffffffd8
    c808:	orr	r0, r0, r1
    c80c:	str	r0, [fp, #-956]	; 0xfffffc44
    c810:	movw	r0, #4
    c814:	str	r0, [fp, #-960]	; 0xfffffc40
    c818:	ldr	r0, [fp, #-960]	; 0xfffffc40
    c81c:	mvn	r1, #0
    c820:	add	r1, r0, r1
    c824:	str	r1, [fp, #-960]	; 0xfffffc40
    c828:	cmp	r0, #0
    c82c:	movw	r0, #0
    c830:	str	r0, [fp, #-1272]	; 0xfffffb08
    c834:	ble	c84c <rb_sha512_crypt_r+0xea0>
    c838:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c83c:	cmp	r0, #0
    c840:	movw	r0, #0
    c844:	movgt	r0, #1
    c848:	str	r0, [fp, #-1272]	; 0xfffffb08
    c84c:	ldr	r0, [fp, #-1272]	; 0xfffffb08
    c850:	tst	r0, #1
    c854:	beq	c8a0 <rb_sha512_crypt_r+0xef4>
    c858:	ldr	r0, [pc, #3180]	; d4cc <rb_sha512_crypt_r+0x1b20>
    c85c:	add	r0, pc, r0
    c860:	ldr	r1, [fp, #-956]	; 0xfffffc44
    c864:	and	r1, r1, #63	; 0x3f
    c868:	add	r0, r0, r1
    c86c:	ldrb	r0, [r0]
    c870:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c874:	add	r2, r1, #1
    c878:	str	r2, [fp, #-856]	; 0xfffffca8
    c87c:	strb	r0, [r1]
    c880:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c884:	mvn	r1, #0
    c888:	add	r0, r0, r1
    c88c:	str	r0, [fp, #-24]	; 0xffffffe8
    c890:	ldr	r0, [fp, #-956]	; 0xfffffc44
    c894:	lsr	r0, r0, #6
    c898:	str	r0, [fp, #-956]	; 0xfffffc44
    c89c:	b	c818 <rb_sha512_crypt_r+0xe6c>
    c8a0:	b	c8a4 <rb_sha512_crypt_r+0xef8>
    c8a4:	b	c8a8 <rb_sha512_crypt_r+0xefc>
    c8a8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
    c8ac:	lsl	r0, r0, #16
    c8b0:	ldrb	r1, [fp, #-39]	; 0xffffffd9
    c8b4:	lsl	r1, r1, #8
    c8b8:	orr	r0, r0, r1
    c8bc:	ldrb	r1, [fp, #-81]	; 0xffffffaf
    c8c0:	orr	r0, r0, r1
    c8c4:	str	r0, [fp, #-964]	; 0xfffffc3c
    c8c8:	movw	r0, #4
    c8cc:	str	r0, [fp, #-968]	; 0xfffffc38
    c8d0:	ldr	r0, [fp, #-968]	; 0xfffffc38
    c8d4:	mvn	r1, #0
    c8d8:	add	r1, r0, r1
    c8dc:	str	r1, [fp, #-968]	; 0xfffffc38
    c8e0:	cmp	r0, #0
    c8e4:	movw	r0, #0
    c8e8:	str	r0, [fp, #-1276]	; 0xfffffb04
    c8ec:	ble	c904 <rb_sha512_crypt_r+0xf58>
    c8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c8f4:	cmp	r0, #0
    c8f8:	movw	r0, #0
    c8fc:	movgt	r0, #1
    c900:	str	r0, [fp, #-1276]	; 0xfffffb04
    c904:	ldr	r0, [fp, #-1276]	; 0xfffffb04
    c908:	tst	r0, #1
    c90c:	beq	c95c <rb_sha512_crypt_r+0xfb0>
    c910:	ldr	r0, [pc, #2992]	; d4c8 <rb_sha512_crypt_r+0x1b1c>
    c914:	add	r0, pc, r0
    c918:	ldr	r1, [fp, #-964]	; 0xfffffc3c
    c91c:	and	r1, r1, #63	; 0x3f
    c920:	add	r0, r0, r1
    c924:	ldrb	r0, [r0]
    c928:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c92c:	add	r2, r1, #1
    c930:	str	r2, [fp, #-856]	; 0xfffffca8
    c934:	strb	r0, [r1]
    c938:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c93c:	mvn	r1, #0
    c940:	add	r0, r0, r1
    c944:	str	r0, [fp, #-24]	; 0xffffffe8
    c948:	ldr	r0, [fp, #-964]	; 0xfffffc3c
    c94c:	lsr	r0, r0, #6
    c950:	str	r0, [fp, #-964]	; 0xfffffc3c
    c954:	b	c8d0 <rb_sha512_crypt_r+0xf24>
    c958:	.word	0x00016da8
    c95c:	b	c960 <rb_sha512_crypt_r+0xfb4>
    c960:	b	c964 <rb_sha512_crypt_r+0xfb8>
    c964:	ldrb	r0, [fp, #-38]	; 0xffffffda
    c968:	lsl	r0, r0, #16
    c96c:	ldrb	r1, [fp, #-80]	; 0xffffffb0
    c970:	lsl	r1, r1, #8
    c974:	orr	r0, r0, r1
    c978:	ldrb	r1, [fp, #-59]	; 0xffffffc5
    c97c:	orr	r0, r0, r1
    c980:	str	r0, [fp, #-972]	; 0xfffffc34
    c984:	movw	r0, #4
    c988:	str	r0, [fp, #-976]	; 0xfffffc30
    c98c:	ldr	r0, [fp, #-976]	; 0xfffffc30
    c990:	mvn	r1, #0
    c994:	add	r1, r0, r1
    c998:	str	r1, [fp, #-976]	; 0xfffffc30
    c99c:	cmp	r0, #0
    c9a0:	movw	r0, #0
    c9a4:	str	r0, [fp, #-1280]	; 0xfffffb00
    c9a8:	ble	c9c0 <rb_sha512_crypt_r+0x1014>
    c9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c9b0:	cmp	r0, #0
    c9b4:	movw	r0, #0
    c9b8:	movgt	r0, #1
    c9bc:	str	r0, [fp, #-1280]	; 0xfffffb00
    c9c0:	ldr	r0, [fp, #-1280]	; 0xfffffb00
    c9c4:	tst	r0, #1
    c9c8:	beq	ca1c <rb_sha512_crypt_r+0x1070>
    c9cc:	ldr	r0, [pc, #2800]	; d4c4 <rb_sha512_crypt_r+0x1b18>
    c9d0:	add	r0, pc, r0
    c9d4:	ldr	r1, [fp, #-972]	; 0xfffffc34
    c9d8:	and	r1, r1, #63	; 0x3f
    c9dc:	add	r0, r0, r1
    c9e0:	ldrb	r0, [r0]
    c9e4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    c9e8:	add	r2, r1, #1
    c9ec:	str	r2, [fp, #-856]	; 0xfffffca8
    c9f0:	strb	r0, [r1]
    c9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c9f8:	mvn	r1, #0
    c9fc:	add	r0, r0, r1
    ca00:	str	r0, [fp, #-24]	; 0xffffffe8
    ca04:	ldr	r0, [fp, #-972]	; 0xfffffc34
    ca08:	lsr	r0, r0, #6
    ca0c:	str	r0, [fp, #-972]	; 0xfffffc34
    ca10:	b	c98c <rb_sha512_crypt_r+0xfe0>
    ca14:	.word	0x00016d58
    ca18:	.word	0x3b9ac9ff
    ca1c:	b	ca20 <rb_sha512_crypt_r+0x1074>
    ca20:	b	ca24 <rb_sha512_crypt_r+0x1078>
    ca24:	ldrb	r0, [fp, #-79]	; 0xffffffb1
    ca28:	lsl	r0, r0, #16
    ca2c:	ldrb	r1, [fp, #-58]	; 0xffffffc6
    ca30:	lsl	r1, r1, #8
    ca34:	orr	r0, r0, r1
    ca38:	ldrb	r1, [fp, #-37]	; 0xffffffdb
    ca3c:	orr	r0, r0, r1
    ca40:	str	r0, [fp, #-980]	; 0xfffffc2c
    ca44:	movw	r0, #4
    ca48:	str	r0, [fp, #-984]	; 0xfffffc28
    ca4c:	ldr	r0, [fp, #-984]	; 0xfffffc28
    ca50:	mvn	r1, #0
    ca54:	add	r1, r0, r1
    ca58:	str	r1, [fp, #-984]	; 0xfffffc28
    ca5c:	cmp	r0, #0
    ca60:	movw	r0, #0
    ca64:	str	r0, [fp, #-1284]	; 0xfffffafc
    ca68:	ble	ca80 <rb_sha512_crypt_r+0x10d4>
    ca6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ca70:	cmp	r0, #0
    ca74:	movw	r0, #0
    ca78:	movgt	r0, #1
    ca7c:	str	r0, [fp, #-1284]	; 0xfffffafc
    ca80:	ldr	r0, [fp, #-1284]	; 0xfffffafc
    ca84:	tst	r0, #1
    ca88:	beq	cadc <rb_sha512_crypt_r+0x1130>
    ca8c:	ldr	r0, [pc, #2604]	; d4c0 <rb_sha512_crypt_r+0x1b14>
    ca90:	add	r0, pc, r0
    ca94:	ldr	r1, [fp, #-980]	; 0xfffffc2c
    ca98:	and	r1, r1, #63	; 0x3f
    ca9c:	add	r0, r0, r1
    caa0:	ldrb	r0, [r0]
    caa4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    caa8:	add	r2, r1, #1
    caac:	str	r2, [fp, #-856]	; 0xfffffca8
    cab0:	strb	r0, [r1]
    cab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cab8:	mvn	r1, #0
    cabc:	add	r0, r0, r1
    cac0:	str	r0, [fp, #-24]	; 0xffffffe8
    cac4:	ldr	r0, [fp, #-980]	; 0xfffffc2c
    cac8:	lsr	r0, r0, #6
    cacc:	str	r0, [fp, #-980]	; 0xfffffc2c
    cad0:	b	ca4c <rb_sha512_crypt_r+0x10a0>
    cad4:	.word	0x00016f7e
    cad8:	.word	0x00016f66
    cadc:	b	cae0 <rb_sha512_crypt_r+0x1134>
    cae0:	b	cae4 <rb_sha512_crypt_r+0x1138>
    cae4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
    cae8:	lsl	r0, r0, #16
    caec:	ldrb	r1, [fp, #-36]	; 0xffffffdc
    caf0:	lsl	r1, r1, #8
    caf4:	orr	r0, r0, r1
    caf8:	ldrb	r1, [fp, #-78]	; 0xffffffb2
    cafc:	orr	r0, r0, r1
    cb00:	str	r0, [fp, #-988]	; 0xfffffc24
    cb04:	movw	r0, #4
    cb08:	str	r0, [fp, #-992]	; 0xfffffc20
    cb0c:	ldr	r0, [fp, #-992]	; 0xfffffc20
    cb10:	mvn	r1, #0
    cb14:	add	r1, r0, r1
    cb18:	str	r1, [fp, #-992]	; 0xfffffc20
    cb1c:	cmp	r0, #0
    cb20:	movw	r0, #0
    cb24:	str	r0, [fp, #-1288]	; 0xfffffaf8
    cb28:	ble	cb40 <rb_sha512_crypt_r+0x1194>
    cb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb30:	cmp	r0, #0
    cb34:	movw	r0, #0
    cb38:	movgt	r0, #1
    cb3c:	str	r0, [fp, #-1288]	; 0xfffffaf8
    cb40:	ldr	r0, [fp, #-1288]	; 0xfffffaf8
    cb44:	tst	r0, #1
    cb48:	beq	cb94 <rb_sha512_crypt_r+0x11e8>
    cb4c:	ldr	r0, [pc, #2408]	; d4bc <rb_sha512_crypt_r+0x1b10>
    cb50:	add	r0, pc, r0
    cb54:	ldr	r1, [fp, #-988]	; 0xfffffc24
    cb58:	and	r1, r1, #63	; 0x3f
    cb5c:	add	r0, r0, r1
    cb60:	ldrb	r0, [r0]
    cb64:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cb68:	add	r2, r1, #1
    cb6c:	str	r2, [fp, #-856]	; 0xfffffca8
    cb70:	strb	r0, [r1]
    cb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb78:	mvn	r1, #0
    cb7c:	add	r0, r0, r1
    cb80:	str	r0, [fp, #-24]	; 0xffffffe8
    cb84:	ldr	r0, [fp, #-988]	; 0xfffffc24
    cb88:	lsr	r0, r0, #6
    cb8c:	str	r0, [fp, #-988]	; 0xfffffc24
    cb90:	b	cb0c <rb_sha512_crypt_r+0x1160>
    cb94:	b	cb98 <rb_sha512_crypt_r+0x11ec>
    cb98:	b	cb9c <rb_sha512_crypt_r+0x11f0>
    cb9c:	ldrb	r0, [fp, #-35]	; 0xffffffdd
    cba0:	lsl	r0, r0, #16
    cba4:	ldrb	r1, [fp, #-77]	; 0xffffffb3
    cba8:	lsl	r1, r1, #8
    cbac:	orr	r0, r0, r1
    cbb0:	ldrb	r1, [fp, #-56]	; 0xffffffc8
    cbb4:	orr	r0, r0, r1
    cbb8:	str	r0, [fp, #-996]	; 0xfffffc1c
    cbbc:	movw	r0, #4
    cbc0:	str	r0, [fp, #-1000]	; 0xfffffc18
    cbc4:	ldr	r0, [fp, #-1000]	; 0xfffffc18
    cbc8:	mvn	r1, #0
    cbcc:	add	r1, r0, r1
    cbd0:	str	r1, [fp, #-1000]	; 0xfffffc18
    cbd4:	cmp	r0, #0
    cbd8:	movw	r0, #0
    cbdc:	str	r0, [fp, #-1292]	; 0xfffffaf4
    cbe0:	ble	cbf8 <rb_sha512_crypt_r+0x124c>
    cbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cbe8:	cmp	r0, #0
    cbec:	movw	r0, #0
    cbf0:	movgt	r0, #1
    cbf4:	str	r0, [fp, #-1292]	; 0xfffffaf4
    cbf8:	ldr	r0, [fp, #-1292]	; 0xfffffaf4
    cbfc:	tst	r0, #1
    cc00:	beq	cc4c <rb_sha512_crypt_r+0x12a0>
    cc04:	ldr	r0, [pc, #2220]	; d4b8 <rb_sha512_crypt_r+0x1b0c>
    cc08:	add	r0, pc, r0
    cc0c:	ldr	r1, [fp, #-996]	; 0xfffffc1c
    cc10:	and	r1, r1, #63	; 0x3f
    cc14:	add	r0, r0, r1
    cc18:	ldrb	r0, [r0]
    cc1c:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cc20:	add	r2, r1, #1
    cc24:	str	r2, [fp, #-856]	; 0xfffffca8
    cc28:	strb	r0, [r1]
    cc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc30:	mvn	r1, #0
    cc34:	add	r0, r0, r1
    cc38:	str	r0, [fp, #-24]	; 0xffffffe8
    cc3c:	ldr	r0, [fp, #-996]	; 0xfffffc1c
    cc40:	lsr	r0, r0, #6
    cc44:	str	r0, [fp, #-996]	; 0xfffffc1c
    cc48:	b	cbc4 <rb_sha512_crypt_r+0x1218>
    cc4c:	b	cc50 <rb_sha512_crypt_r+0x12a4>
    cc50:	b	cc54 <rb_sha512_crypt_r+0x12a8>
    cc54:	ldrb	r0, [fp, #-76]	; 0xffffffb4
    cc58:	lsl	r0, r0, #16
    cc5c:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    cc60:	lsl	r1, r1, #8
    cc64:	orr	r0, r0, r1
    cc68:	ldrb	r1, [fp, #-34]	; 0xffffffde
    cc6c:	orr	r0, r0, r1
    cc70:	str	r0, [fp, #-1004]	; 0xfffffc14
    cc74:	movw	r0, #4
    cc78:	str	r0, [fp, #-1008]	; 0xfffffc10
    cc7c:	ldr	r0, [fp, #-1008]	; 0xfffffc10
    cc80:	mvn	r1, #0
    cc84:	add	r1, r0, r1
    cc88:	str	r1, [fp, #-1008]	; 0xfffffc10
    cc8c:	cmp	r0, #0
    cc90:	movw	r0, #0
    cc94:	str	r0, [fp, #-1296]	; 0xfffffaf0
    cc98:	ble	ccb0 <rb_sha512_crypt_r+0x1304>
    cc9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cca0:	cmp	r0, #0
    cca4:	movw	r0, #0
    cca8:	movgt	r0, #1
    ccac:	str	r0, [fp, #-1296]	; 0xfffffaf0
    ccb0:	ldr	r0, [fp, #-1296]	; 0xfffffaf0
    ccb4:	tst	r0, #1
    ccb8:	beq	cd04 <rb_sha512_crypt_r+0x1358>
    ccbc:	ldr	r0, [pc, #2032]	; d4b4 <rb_sha512_crypt_r+0x1b08>
    ccc0:	add	r0, pc, r0
    ccc4:	ldr	r1, [fp, #-1004]	; 0xfffffc14
    ccc8:	and	r1, r1, #63	; 0x3f
    cccc:	add	r0, r0, r1
    ccd0:	ldrb	r0, [r0]
    ccd4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    ccd8:	add	r2, r1, #1
    ccdc:	str	r2, [fp, #-856]	; 0xfffffca8
    cce0:	strb	r0, [r1]
    cce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cce8:	mvn	r1, #0
    ccec:	add	r0, r0, r1
    ccf0:	str	r0, [fp, #-24]	; 0xffffffe8
    ccf4:	ldr	r0, [fp, #-1004]	; 0xfffffc14
    ccf8:	lsr	r0, r0, #6
    ccfc:	str	r0, [fp, #-1004]	; 0xfffffc14
    cd00:	b	cc7c <rb_sha512_crypt_r+0x12d0>
    cd04:	b	cd08 <rb_sha512_crypt_r+0x135c>
    cd08:	b	cd0c <rb_sha512_crypt_r+0x1360>
    cd0c:	ldrb	r0, [fp, #-54]	; 0xffffffca
    cd10:	lsl	r0, r0, #16
    cd14:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    cd18:	lsl	r1, r1, #8
    cd1c:	orr	r0, r0, r1
    cd20:	ldrb	r1, [fp, #-75]	; 0xffffffb5
    cd24:	orr	r0, r0, r1
    cd28:	str	r0, [fp, #-1012]	; 0xfffffc0c
    cd2c:	movw	r0, #4
    cd30:	str	r0, [fp, #-1016]	; 0xfffffc08
    cd34:	ldr	r0, [fp, #-1016]	; 0xfffffc08
    cd38:	mvn	r1, #0
    cd3c:	add	r1, r0, r1
    cd40:	str	r1, [fp, #-1016]	; 0xfffffc08
    cd44:	cmp	r0, #0
    cd48:	movw	r0, #0
    cd4c:	str	r0, [fp, #-1300]	; 0xfffffaec
    cd50:	ble	cd68 <rb_sha512_crypt_r+0x13bc>
    cd54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd58:	cmp	r0, #0
    cd5c:	movw	r0, #0
    cd60:	movgt	r0, #1
    cd64:	str	r0, [fp, #-1300]	; 0xfffffaec
    cd68:	ldr	r0, [fp, #-1300]	; 0xfffffaec
    cd6c:	tst	r0, #1
    cd70:	beq	cdbc <rb_sha512_crypt_r+0x1410>
    cd74:	ldr	r0, [pc, #1844]	; d4b0 <rb_sha512_crypt_r+0x1b04>
    cd78:	add	r0, pc, r0
    cd7c:	ldr	r1, [fp, #-1012]	; 0xfffffc0c
    cd80:	and	r1, r1, #63	; 0x3f
    cd84:	add	r0, r0, r1
    cd88:	ldrb	r0, [r0]
    cd8c:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cd90:	add	r2, r1, #1
    cd94:	str	r2, [fp, #-856]	; 0xfffffca8
    cd98:	strb	r0, [r1]
    cd9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cda0:	mvn	r1, #0
    cda4:	add	r0, r0, r1
    cda8:	str	r0, [fp, #-24]	; 0xffffffe8
    cdac:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
    cdb0:	lsr	r0, r0, #6
    cdb4:	str	r0, [fp, #-1012]	; 0xfffffc0c
    cdb8:	b	cd34 <rb_sha512_crypt_r+0x1388>
    cdbc:	b	cdc0 <rb_sha512_crypt_r+0x1414>
    cdc0:	b	cdc4 <rb_sha512_crypt_r+0x1418>
    cdc4:	ldrb	r0, [fp, #-32]	; 0xffffffe0
    cdc8:	lsl	r0, r0, #16
    cdcc:	ldrb	r1, [fp, #-74]	; 0xffffffb6
    cdd0:	lsl	r1, r1, #8
    cdd4:	orr	r0, r0, r1
    cdd8:	ldrb	r1, [fp, #-53]	; 0xffffffcb
    cddc:	orr	r0, r0, r1
    cde0:	str	r0, [fp, #-1020]	; 0xfffffc04
    cde4:	movw	r0, #4
    cde8:	str	r0, [fp, #-1024]	; 0xfffffc00
    cdec:	ldr	r0, [fp, #-1024]	; 0xfffffc00
    cdf0:	mvn	r1, #0
    cdf4:	add	r1, r0, r1
    cdf8:	str	r1, [fp, #-1024]	; 0xfffffc00
    cdfc:	cmp	r0, #0
    ce00:	movw	r0, #0
    ce04:	str	r0, [fp, #-1304]	; 0xfffffae8
    ce08:	ble	ce20 <rb_sha512_crypt_r+0x1474>
    ce0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce10:	cmp	r0, #0
    ce14:	movw	r0, #0
    ce18:	movgt	r0, #1
    ce1c:	str	r0, [fp, #-1304]	; 0xfffffae8
    ce20:	ldr	r0, [fp, #-1304]	; 0xfffffae8
    ce24:	tst	r0, #1
    ce28:	beq	ce74 <rb_sha512_crypt_r+0x14c8>
    ce2c:	ldr	r0, [pc, #1656]	; d4ac <rb_sha512_crypt_r+0x1b00>
    ce30:	add	r0, pc, r0
    ce34:	ldr	r1, [fp, #-1020]	; 0xfffffc04
    ce38:	and	r1, r1, #63	; 0x3f
    ce3c:	add	r0, r0, r1
    ce40:	ldrb	r0, [r0]
    ce44:	ldr	r1, [fp, #-856]	; 0xfffffca8
    ce48:	add	r2, r1, #1
    ce4c:	str	r2, [fp, #-856]	; 0xfffffca8
    ce50:	strb	r0, [r1]
    ce54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ce58:	mvn	r1, #0
    ce5c:	add	r0, r0, r1
    ce60:	str	r0, [fp, #-24]	; 0xffffffe8
    ce64:	ldr	r0, [fp, #-1020]	; 0xfffffc04
    ce68:	lsr	r0, r0, #6
    ce6c:	str	r0, [fp, #-1020]	; 0xfffffc04
    ce70:	b	cdec <rb_sha512_crypt_r+0x1440>
    ce74:	b	ce78 <rb_sha512_crypt_r+0x14cc>
    ce78:	b	ce7c <rb_sha512_crypt_r+0x14d0>
    ce7c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
    ce80:	lsl	r0, r0, #16
    ce84:	ldrb	r1, [fp, #-52]	; 0xffffffcc
    ce88:	lsl	r1, r1, #8
    ce8c:	orr	r0, r0, r1
    ce90:	ldrb	r1, [fp, #-31]	; 0xffffffe1
    ce94:	orr	r0, r0, r1
    ce98:	str	r0, [fp, #-1028]	; 0xfffffbfc
    ce9c:	movw	r0, #4
    cea0:	str	r0, [fp, #-1032]	; 0xfffffbf8
    cea4:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
    cea8:	mvn	r1, #0
    ceac:	add	r1, r0, r1
    ceb0:	str	r1, [fp, #-1032]	; 0xfffffbf8
    ceb4:	cmp	r0, #0
    ceb8:	movw	r0, #0
    cebc:	str	r0, [fp, #-1308]	; 0xfffffae4
    cec0:	ble	ced8 <rb_sha512_crypt_r+0x152c>
    cec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cec8:	cmp	r0, #0
    cecc:	movw	r0, #0
    ced0:	movgt	r0, #1
    ced4:	str	r0, [fp, #-1308]	; 0xfffffae4
    ced8:	ldr	r0, [fp, #-1308]	; 0xfffffae4
    cedc:	tst	r0, #1
    cee0:	beq	cf2c <rb_sha512_crypt_r+0x1580>
    cee4:	ldr	r0, [pc, #1468]	; d4a8 <rb_sha512_crypt_r+0x1afc>
    cee8:	add	r0, pc, r0
    ceec:	ldr	r1, [fp, #-1028]	; 0xfffffbfc
    cef0:	and	r1, r1, #63	; 0x3f
    cef4:	add	r0, r0, r1
    cef8:	ldrb	r0, [r0]
    cefc:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cf00:	add	r2, r1, #1
    cf04:	str	r2, [fp, #-856]	; 0xfffffca8
    cf08:	strb	r0, [r1]
    cf0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf10:	mvn	r1, #0
    cf14:	add	r0, r0, r1
    cf18:	str	r0, [fp, #-24]	; 0xffffffe8
    cf1c:	ldr	r0, [fp, #-1028]	; 0xfffffbfc
    cf20:	lsr	r0, r0, #6
    cf24:	str	r0, [fp, #-1028]	; 0xfffffbfc
    cf28:	b	cea4 <rb_sha512_crypt_r+0x14f8>
    cf2c:	b	cf30 <rb_sha512_crypt_r+0x1584>
    cf30:	b	cf34 <rb_sha512_crypt_r+0x1588>
    cf34:	ldrb	r0, [fp, #-51]	; 0xffffffcd
    cf38:	lsl	r0, r0, #16
    cf3c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
    cf40:	lsl	r1, r1, #8
    cf44:	orr	r0, r0, r1
    cf48:	ldrb	r1, [fp, #-72]	; 0xffffffb8
    cf4c:	orr	r0, r0, r1
    cf50:	str	r0, [fp, #-1036]	; 0xfffffbf4
    cf54:	movw	r0, #4
    cf58:	str	r0, [fp, #-1040]	; 0xfffffbf0
    cf5c:	ldr	r0, [fp, #-1040]	; 0xfffffbf0
    cf60:	mvn	r1, #0
    cf64:	add	r1, r0, r1
    cf68:	str	r1, [fp, #-1040]	; 0xfffffbf0
    cf6c:	cmp	r0, #0
    cf70:	movw	r0, #0
    cf74:	str	r0, [fp, #-1312]	; 0xfffffae0
    cf78:	ble	cf90 <rb_sha512_crypt_r+0x15e4>
    cf7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf80:	cmp	r0, #0
    cf84:	movw	r0, #0
    cf88:	movgt	r0, #1
    cf8c:	str	r0, [fp, #-1312]	; 0xfffffae0
    cf90:	ldr	r0, [fp, #-1312]	; 0xfffffae0
    cf94:	tst	r0, #1
    cf98:	beq	cfe8 <rb_sha512_crypt_r+0x163c>
    cf9c:	ldr	r0, [pc, #1280]	; d4a4 <rb_sha512_crypt_r+0x1af8>
    cfa0:	add	r0, pc, r0
    cfa4:	ldr	r1, [fp, #-1036]	; 0xfffffbf4
    cfa8:	and	r1, r1, #63	; 0x3f
    cfac:	add	r0, r0, r1
    cfb0:	ldrb	r0, [r0]
    cfb4:	ldr	r1, [fp, #-856]	; 0xfffffca8
    cfb8:	add	r2, r1, #1
    cfbc:	str	r2, [fp, #-856]	; 0xfffffca8
    cfc0:	strb	r0, [r1]
    cfc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cfc8:	mvn	r1, #0
    cfcc:	add	r0, r0, r1
    cfd0:	str	r0, [fp, #-24]	; 0xffffffe8
    cfd4:	ldr	r0, [fp, #-1036]	; 0xfffffbf4
    cfd8:	lsr	r0, r0, #6
    cfdc:	str	r0, [fp, #-1036]	; 0xfffffbf4
    cfe0:	b	cf5c <rb_sha512_crypt_r+0x15b0>
    cfe4:	.word	0x000166fc
    cfe8:	b	cfec <rb_sha512_crypt_r+0x1640>
    cfec:	b	cff0 <rb_sha512_crypt_r+0x1644>
    cff0:	ldrb	r0, [fp, #-29]	; 0xffffffe3
    cff4:	lsl	r0, r0, #16
    cff8:	ldrb	r1, [fp, #-71]	; 0xffffffb9
    cffc:	lsl	r1, r1, #8
    d000:	orr	r0, r0, r1
    d004:	ldrb	r1, [fp, #-50]	; 0xffffffce
    d008:	orr	r0, r0, r1
    d00c:	str	r0, [fp, #-1044]	; 0xfffffbec
    d010:	movw	r0, #4
    d014:	str	r0, [fp, #-1048]	; 0xfffffbe8
    d018:	ldr	r0, [fp, #-1048]	; 0xfffffbe8
    d01c:	mvn	r1, #0
    d020:	add	r1, r0, r1
    d024:	str	r1, [fp, #-1048]	; 0xfffffbe8
    d028:	cmp	r0, #0
    d02c:	movw	r0, #0
    d030:	str	r0, [fp, #-1316]	; 0xfffffadc
    d034:	ble	d04c <rb_sha512_crypt_r+0x16a0>
    d038:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d03c:	cmp	r0, #0
    d040:	movw	r0, #0
    d044:	movgt	r0, #1
    d048:	str	r0, [fp, #-1316]	; 0xfffffadc
    d04c:	ldr	r0, [fp, #-1316]	; 0xfffffadc
    d050:	tst	r0, #1
    d054:	beq	d0a8 <rb_sha512_crypt_r+0x16fc>
    d058:	ldr	r0, [pc, #1088]	; d4a0 <rb_sha512_crypt_r+0x1af4>
    d05c:	add	r0, pc, r0
    d060:	ldr	r1, [fp, #-1044]	; 0xfffffbec
    d064:	and	r1, r1, #63	; 0x3f
    d068:	add	r0, r0, r1
    d06c:	ldrb	r0, [r0]
    d070:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d074:	add	r2, r1, #1
    d078:	str	r2, [fp, #-856]	; 0xfffffca8
    d07c:	strb	r0, [r1]
    d080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d084:	mvn	r1, #0
    d088:	add	r0, r0, r1
    d08c:	str	r0, [fp, #-24]	; 0xffffffe8
    d090:	ldr	r0, [fp, #-1044]	; 0xfffffbec
    d094:	lsr	r0, r0, #6
    d098:	str	r0, [fp, #-1044]	; 0xfffffbec
    d09c:	b	d018 <rb_sha512_crypt_r+0x166c>
    d0a0:	.word	0x0001694c
    d0a4:	.word	0x00016634
    d0a8:	b	d0ac <rb_sha512_crypt_r+0x1700>
    d0ac:	b	d0b0 <rb_sha512_crypt_r+0x1704>
    d0b0:	ldrb	r0, [fp, #-70]	; 0xffffffba
    d0b4:	lsl	r0, r0, #16
    d0b8:	ldrb	r1, [fp, #-49]	; 0xffffffcf
    d0bc:	lsl	r1, r1, #8
    d0c0:	orr	r0, r0, r1
    d0c4:	ldrb	r1, [fp, #-28]	; 0xffffffe4
    d0c8:	orr	r0, r0, r1
    d0cc:	str	r0, [fp, #-1052]	; 0xfffffbe4
    d0d0:	movw	r0, #4
    d0d4:	str	r0, [fp, #-1056]	; 0xfffffbe0
    d0d8:	ldr	r0, [fp, #-1056]	; 0xfffffbe0
    d0dc:	mvn	r1, #0
    d0e0:	add	r1, r0, r1
    d0e4:	str	r1, [fp, #-1056]	; 0xfffffbe0
    d0e8:	cmp	r0, #0
    d0ec:	movw	r0, #0
    d0f0:	str	r0, [fp, #-1320]	; 0xfffffad8
    d0f4:	ble	d10c <rb_sha512_crypt_r+0x1760>
    d0f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d0fc:	cmp	r0, #0
    d100:	movw	r0, #0
    d104:	movgt	r0, #1
    d108:	str	r0, [fp, #-1320]	; 0xfffffad8
    d10c:	ldr	r0, [fp, #-1320]	; 0xfffffad8
    d110:	tst	r0, #1
    d114:	beq	d160 <rb_sha512_crypt_r+0x17b4>
    d118:	ldr	r0, [pc, #892]	; d49c <rb_sha512_crypt_r+0x1af0>
    d11c:	add	r0, pc, r0
    d120:	ldr	r1, [fp, #-1052]	; 0xfffffbe4
    d124:	and	r1, r1, #63	; 0x3f
    d128:	add	r0, r0, r1
    d12c:	ldrb	r0, [r0]
    d130:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d134:	add	r2, r1, #1
    d138:	str	r2, [fp, #-856]	; 0xfffffca8
    d13c:	strb	r0, [r1]
    d140:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d144:	mvn	r1, #0
    d148:	add	r0, r0, r1
    d14c:	str	r0, [fp, #-24]	; 0xffffffe8
    d150:	ldr	r0, [fp, #-1052]	; 0xfffffbe4
    d154:	lsr	r0, r0, #6
    d158:	str	r0, [fp, #-1052]	; 0xfffffbe4
    d15c:	b	d0d8 <rb_sha512_crypt_r+0x172c>
    d160:	b	d164 <rb_sha512_crypt_r+0x17b8>
    d164:	b	d168 <rb_sha512_crypt_r+0x17bc>
    d168:	ldrb	r0, [fp, #-48]	; 0xffffffd0
    d16c:	lsl	r0, r0, #16
    d170:	ldrb	r1, [fp, #-27]	; 0xffffffe5
    d174:	lsl	r1, r1, #8
    d178:	orr	r0, r0, r1
    d17c:	ldrb	r1, [fp, #-69]	; 0xffffffbb
    d180:	orr	r0, r0, r1
    d184:	str	r0, [fp, #-1060]	; 0xfffffbdc
    d188:	movw	r0, #4
    d18c:	str	r0, [fp, #-1064]	; 0xfffffbd8
    d190:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
    d194:	mvn	r1, #0
    d198:	add	r1, r0, r1
    d19c:	str	r1, [fp, #-1064]	; 0xfffffbd8
    d1a0:	cmp	r0, #0
    d1a4:	movw	r0, #0
    d1a8:	str	r0, [fp, #-1324]	; 0xfffffad4
    d1ac:	ble	d1c4 <rb_sha512_crypt_r+0x1818>
    d1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1b4:	cmp	r0, #0
    d1b8:	movw	r0, #0
    d1bc:	movgt	r0, #1
    d1c0:	str	r0, [fp, #-1324]	; 0xfffffad4
    d1c4:	ldr	r0, [fp, #-1324]	; 0xfffffad4
    d1c8:	tst	r0, #1
    d1cc:	beq	d218 <rb_sha512_crypt_r+0x186c>
    d1d0:	ldr	r0, [pc, #704]	; d498 <rb_sha512_crypt_r+0x1aec>
    d1d4:	add	r0, pc, r0
    d1d8:	ldr	r1, [fp, #-1060]	; 0xfffffbdc
    d1dc:	and	r1, r1, #63	; 0x3f
    d1e0:	add	r0, r0, r1
    d1e4:	ldrb	r0, [r0]
    d1e8:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d1ec:	add	r2, r1, #1
    d1f0:	str	r2, [fp, #-856]	; 0xfffffca8
    d1f4:	strb	r0, [r1]
    d1f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1fc:	mvn	r1, #0
    d200:	add	r0, r0, r1
    d204:	str	r0, [fp, #-24]	; 0xffffffe8
    d208:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
    d20c:	lsr	r0, r0, #6
    d210:	str	r0, [fp, #-1060]	; 0xfffffbdc
    d214:	b	d190 <rb_sha512_crypt_r+0x17e4>
    d218:	b	d21c <rb_sha512_crypt_r+0x1870>
    d21c:	b	d220 <rb_sha512_crypt_r+0x1874>
    d220:	ldrb	r0, [fp, #-26]	; 0xffffffe6
    d224:	lsl	r0, r0, #16
    d228:	ldrb	r1, [fp, #-68]	; 0xffffffbc
    d22c:	lsl	r1, r1, #8
    d230:	orr	r0, r0, r1
    d234:	ldrb	r1, [fp, #-47]	; 0xffffffd1
    d238:	orr	r0, r0, r1
    d23c:	str	r0, [fp, #-1068]	; 0xfffffbd4
    d240:	movw	r0, #4
    d244:	str	r0, [fp, #-1072]	; 0xfffffbd0
    d248:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
    d24c:	mvn	r1, #0
    d250:	add	r1, r0, r1
    d254:	str	r1, [fp, #-1072]	; 0xfffffbd0
    d258:	cmp	r0, #0
    d25c:	movw	r0, #0
    d260:	str	r0, [fp, #-1328]	; 0xfffffad0
    d264:	ble	d27c <rb_sha512_crypt_r+0x18d0>
    d268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d26c:	cmp	r0, #0
    d270:	movw	r0, #0
    d274:	movgt	r0, #1
    d278:	str	r0, [fp, #-1328]	; 0xfffffad0
    d27c:	ldr	r0, [fp, #-1328]	; 0xfffffad0
    d280:	tst	r0, #1
    d284:	beq	d2d0 <rb_sha512_crypt_r+0x1924>
    d288:	ldr	r0, [pc, #516]	; d494 <rb_sha512_crypt_r+0x1ae8>
    d28c:	add	r0, pc, r0
    d290:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
    d294:	and	r1, r1, #63	; 0x3f
    d298:	add	r0, r0, r1
    d29c:	ldrb	r0, [r0]
    d2a0:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d2a4:	add	r2, r1, #1
    d2a8:	str	r2, [fp, #-856]	; 0xfffffca8
    d2ac:	strb	r0, [r1]
    d2b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d2b4:	mvn	r1, #0
    d2b8:	add	r0, r0, r1
    d2bc:	str	r0, [fp, #-24]	; 0xffffffe8
    d2c0:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
    d2c4:	lsr	r0, r0, #6
    d2c8:	str	r0, [fp, #-1068]	; 0xfffffbd4
    d2cc:	b	d248 <rb_sha512_crypt_r+0x189c>
    d2d0:	b	d2d4 <rb_sha512_crypt_r+0x1928>
    d2d4:	b	d2d8 <rb_sha512_crypt_r+0x192c>
    d2d8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
    d2dc:	orr	r0, r0, #0
    d2e0:	str	r0, [fp, #-1076]	; 0xfffffbcc
    d2e4:	movw	r0, #2
    d2e8:	str	r0, [fp, #-1080]	; 0xfffffbc8
    d2ec:	ldr	r0, [fp, #-1080]	; 0xfffffbc8
    d2f0:	mvn	r1, #0
    d2f4:	add	r1, r0, r1
    d2f8:	str	r1, [fp, #-1080]	; 0xfffffbc8
    d2fc:	cmp	r0, #0
    d300:	movw	r0, #0
    d304:	str	r0, [fp, #-1332]	; 0xfffffacc
    d308:	ble	d320 <rb_sha512_crypt_r+0x1974>
    d30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d310:	cmp	r0, #0
    d314:	movw	r0, #0
    d318:	movgt	r0, #1
    d31c:	str	r0, [fp, #-1332]	; 0xfffffacc
    d320:	ldr	r0, [fp, #-1332]	; 0xfffffacc
    d324:	tst	r0, #1
    d328:	beq	d374 <rb_sha512_crypt_r+0x19c8>
    d32c:	ldr	r0, [pc, #348]	; d490 <rb_sha512_crypt_r+0x1ae4>
    d330:	add	r0, pc, r0
    d334:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
    d338:	and	r1, r1, #63	; 0x3f
    d33c:	add	r0, r0, r1
    d340:	ldrb	r0, [r0]
    d344:	ldr	r1, [fp, #-856]	; 0xfffffca8
    d348:	add	r2, r1, #1
    d34c:	str	r2, [fp, #-856]	; 0xfffffca8
    d350:	strb	r0, [r1]
    d354:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d358:	mvn	r1, #0
    d35c:	add	r0, r0, r1
    d360:	str	r0, [fp, #-24]	; 0xffffffe8
    d364:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
    d368:	lsr	r0, r0, #6
    d36c:	str	r0, [fp, #-1076]	; 0xfffffbcc
    d370:	b	d2ec <rb_sha512_crypt_r+0x1940>
    d374:	b	d378 <rb_sha512_crypt_r+0x19cc>
    d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d37c:	cmp	r0, #0
    d380:	bgt	d3a0 <rb_sha512_crypt_r+0x19f4>
    d384:	bl	56c8 <__errno_location@plt>
    d388:	movw	lr, #34	; 0x22
    d38c:	str	lr, [r0]
    d390:	movw	r0, #0
    d394:	str	r0, [fp, #-20]	; 0xffffffec
    d398:	b	d3ac <rb_sha512_crypt_r+0x1a00>
    d39c:	.word	0x00015e6c
    d3a0:	ldr	r0, [fp, #-856]	; 0xfffffca8
    d3a4:	movw	r1, #0
    d3a8:	strb	r1, [r0]
    d3ac:	sub	r0, fp, #496	; 0x1f0
    d3b0:	bl	d4e0 <rb_sha512_init_ctx>
    d3b4:	sub	r1, fp, #88	; 0x58
    d3b8:	sub	r0, fp, #496	; 0x1f0
    d3bc:	bl	d8c8 <rb_sha512_finish_ctx>
    d3c0:	sub	r1, fp, #152	; 0x98
    d3c4:	str	r0, [fp, #-1336]	; 0xfffffac8
    d3c8:	mov	r0, r1
    d3cc:	movw	r1, #0
    d3d0:	and	lr, r1, #255	; 0xff
    d3d4:	str	r1, [fp, #-1340]	; 0xfffffac4
    d3d8:	mov	r1, lr
    d3dc:	movw	r2, #64	; 0x40
    d3e0:	bl	4ff0 <memset@plt>
    d3e4:	ldr	r0, [fp, #-868]	; 0xfffffc9c
    d3e8:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    d3ec:	ldr	r1, [fp, #-1340]	; 0xfffffac4
    d3f0:	and	r1, r1, #255	; 0xff
    d3f4:	bl	4ff0 <memset@plt>
    d3f8:	ldr	r0, [fp, #-872]	; 0xfffffc98
    d3fc:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    d400:	ldr	r1, [fp, #-1340]	; 0xfffffac4
    d404:	and	r1, r1, #255	; 0xff
    d408:	bl	4ff0 <memset@plt>
    d40c:	sub	r0, fp, #496	; 0x1f0
    d410:	ldr	r1, [fp, #-1340]	; 0xfffffac4
    d414:	and	r1, r1, #255	; 0xff
    d418:	movw	r2, #344	; 0x158
    d41c:	str	r2, [fp, #-1344]	; 0xfffffac0
    d420:	bl	4ff0 <memset@plt>
    d424:	sub	r0, fp, #840	; 0x348
    d428:	ldr	r1, [fp, #-1340]	; 0xfffffac4
    d42c:	and	r1, r1, #255	; 0xff
    d430:	ldr	r2, [fp, #-1344]	; 0xfffffac0
    d434:	bl	4ff0 <memset@plt>
    d438:	ldr	r0, [fp, #-860]	; 0xfffffca4
    d43c:	movw	r1, #0
    d440:	cmp	r0, r1
    d444:	beq	d45c <rb_sha512_crypt_r+0x1ab0>
    d448:	ldr	r0, [fp, #-860]	; 0xfffffca4
    d44c:	ldr	r2, [fp, #-848]	; 0xfffffcb0
    d450:	movw	r1, #0
    d454:	and	r1, r1, #255	; 0xff
    d458:	bl	4ff0 <memset@plt>
    d45c:	ldr	r0, [fp, #-864]	; 0xfffffca0
    d460:	movw	r1, #0
    d464:	cmp	r0, r1
    d468:	beq	d480 <rb_sha512_crypt_r+0x1ad4>
    d46c:	ldr	r0, [fp, #-864]	; 0xfffffca0
    d470:	ldr	r2, [fp, #-844]	; 0xfffffcb4
    d474:	movw	r1, #0
    d478:	and	r1, r1, #255	; 0xff
    d47c:	bl	4ff0 <memset@plt>
    d480:	ldr	r0, [fp, #-20]	; 0xffffffec
    d484:	sub	sp, fp, #8
    d488:	pop	{r4, sl, fp, pc}
    d48c:	.word	0x00015db4
    d490:	.word	0x00014f48
    d494:	.word	0x00014fec
    d498:	.word	0x000150a4
    d49c:	.word	0x0001515c
    d4a0:	.word	0x0001521c
    d4a4:	.word	0x000152d8
    d4a8:	.word	0x00015390
    d4ac:	.word	0x00015448
    d4b0:	.word	0x00015500
    d4b4:	.word	0x000155b8
    d4b8:	.word	0x00015670
    d4bc:	.word	0x00015728
    d4c0:	.word	0x000157e8
    d4c4:	.word	0x000158a8
    d4c8:	.word	0x00015964
    d4cc:	.word	0x00015a1c
    d4d0:	.word	0x00015ad4
    d4d4:	.word	0x00015b8c
    d4d8:	.word	0x00015c44
    d4dc:	.word	0x00015cfc

0000d4e0 <rb_sha512_init_ctx>:
    d4e0:	sub	sp, sp, #4
    d4e4:	str	r0, [sp]
    d4e8:	ldr	r0, [sp]
    d4ec:	movw	r1, #58983	; 0xe667
    d4f0:	movt	r1, #27145	; 0x6a09
    d4f4:	str	r1, [r0, #4]
    d4f8:	movw	r1, #51464	; 0xc908
    d4fc:	movt	r1, #62396	; 0xf3bc
    d500:	str	r1, [r0]
    d504:	ldr	r0, [sp]
    d508:	movw	r1, #44677	; 0xae85
    d50c:	movt	r1, #47975	; 0xbb67
    d510:	str	r1, [r0, #12]
    d514:	movw	r1, #42811	; 0xa73b
    d518:	movt	r1, #33994	; 0x84ca
    d51c:	str	r1, [r0, #8]
    d520:	ldr	r0, [sp]
    d524:	movw	r1, #62322	; 0xf372
    d528:	movt	r1, #15470	; 0x3c6e
    d52c:	str	r1, [r0, #20]
    d530:	movw	r1, #63531	; 0xf82b
    d534:	movt	r1, #65172	; 0xfe94
    d538:	str	r1, [r0, #16]
    d53c:	ldr	r0, [sp]
    d540:	movw	r1, #62778	; 0xf53a
    d544:	movt	r1, #42319	; 0xa54f
    d548:	str	r1, [r0, #28]
    d54c:	movw	r1, #14065	; 0x36f1
    d550:	movt	r1, #24349	; 0x5f1d
    d554:	str	r1, [r0, #24]
    d558:	ldr	r0, [sp]
    d55c:	movw	r1, #21119	; 0x527f
    d560:	movt	r1, #20750	; 0x510e
    d564:	str	r1, [r0, #36]	; 0x24
    d568:	movw	r1, #33489	; 0x82d1
    d56c:	movt	r1, #44518	; 0xade6
    d570:	str	r1, [r0, #32]
    d574:	ldr	r0, [sp]
    d578:	movw	r1, #26764	; 0x688c
    d57c:	movt	r1, #39685	; 0x9b05
    d580:	str	r1, [r0, #44]	; 0x2c
    d584:	movw	r1, #27679	; 0x6c1f
    d588:	movt	r1, #11070	; 0x2b3e
    d58c:	str	r1, [r0, #40]	; 0x28
    d590:	ldr	r0, [sp]
    d594:	movw	r1, #55723	; 0xd9ab
    d598:	movt	r1, #8067	; 0x1f83
    d59c:	str	r1, [r0, #52]	; 0x34
    d5a0:	movw	r1, #48491	; 0xbd6b
    d5a4:	movt	r1, #64321	; 0xfb41
    d5a8:	str	r1, [r0, #48]	; 0x30
    d5ac:	ldr	r0, [sp]
    d5b0:	movw	r1, #52505	; 0xcd19
    d5b4:	movt	r1, #23520	; 0x5be0
    d5b8:	str	r1, [r0, #60]	; 0x3c
    d5bc:	movw	r1, #8569	; 0x2179
    d5c0:	movt	r1, #4990	; 0x137e
    d5c4:	str	r1, [r0, #56]	; 0x38
    d5c8:	ldr	r0, [sp]
    d5cc:	mov	r1, #0
    d5d0:	str	r1, [r0, #76]	; 0x4c
    d5d4:	str	r1, [r0, #72]	; 0x48
    d5d8:	ldr	r0, [sp]
    d5dc:	str	r1, [r0, #68]	; 0x44
    d5e0:	str	r1, [r0, #64]	; 0x40
    d5e4:	ldr	r0, [sp]
    d5e8:	str	r1, [r0, #84]	; 0x54
    d5ec:	str	r1, [r0, #80]	; 0x50
    d5f0:	add	sp, sp, #4
    d5f4:	bx	lr

0000d5f8 <rb_sha512_process_bytes>:
    d5f8:	push	{fp, lr}
    d5fc:	mov	fp, sp
    d600:	sub	sp, sp, #56	; 0x38
    d604:	str	r0, [fp, #-4]
    d608:	str	r1, [fp, #-8]
    d60c:	str	r2, [fp, #-12]
    d610:	ldr	r0, [fp, #-12]
    d614:	ldr	r1, [r0, #80]	; 0x50
    d618:	ldr	r0, [r0, #84]	; 0x54
    d61c:	orr	r0, r1, r0
    d620:	cmp	r0, #0
    d624:	beq	d768 <rb_sha512_process_bytes+0x170>
    d628:	b	d62c <rb_sha512_process_bytes+0x34>
    d62c:	ldr	r0, [fp, #-12]
    d630:	ldr	r0, [r0, #80]	; 0x50
    d634:	str	r0, [fp, #-16]
    d638:	ldr	r0, [fp, #-16]
    d63c:	movw	r1, #256	; 0x100
    d640:	sub	r0, r1, r0
    d644:	ldr	r1, [fp, #-8]
    d648:	cmp	r0, r1
    d64c:	bls	d65c <rb_sha512_process_bytes+0x64>
    d650:	ldr	r0, [fp, #-8]
    d654:	str	r0, [sp, #28]
    d658:	b	d66c <rb_sha512_process_bytes+0x74>
    d65c:	ldr	r0, [fp, #-16]
    d660:	movw	r1, #256	; 0x100
    d664:	sub	r0, r1, r0
    d668:	str	r0, [sp, #28]
    d66c:	ldr	r0, [sp, #28]
    d670:	str	r0, [fp, #-20]	; 0xffffffec
    d674:	ldr	r0, [fp, #-12]
    d678:	ldr	r1, [fp, #-16]
    d67c:	add	r0, r0, r1
    d680:	add	r0, r0, #88	; 0x58
    d684:	ldr	r1, [fp, #-4]
    d688:	ldr	r2, [fp, #-20]	; 0xffffffec
    d68c:	bl	51dc <memcpy@plt>
    d690:	ldr	r1, [fp, #-20]	; 0xffffffec
    d694:	ldr	r2, [fp, #-12]
    d698:	ldr	lr, [r2, #80]	; 0x50
    d69c:	ldr	r3, [r2, #84]	; 0x54
    d6a0:	adds	r1, lr, r1
    d6a4:	adc	r3, r3, #0
    d6a8:	str	r1, [r2, #80]	; 0x50
    d6ac:	str	r3, [r2, #84]	; 0x54
    d6b0:	ldr	r1, [fp, #-12]
    d6b4:	ldr	r2, [r1, #80]	; 0x50
    d6b8:	ldr	r1, [r1, #84]	; 0x54
    d6bc:	subs	r2, r2, #129	; 0x81
    d6c0:	sbcs	r1, r1, #0
    d6c4:	str	r0, [sp, #24]
    d6c8:	str	r2, [sp, #20]
    d6cc:	str	r1, [sp, #16]
    d6d0:	bcc	d748 <rb_sha512_process_bytes+0x150>
    d6d4:	b	d6d8 <rb_sha512_process_bytes+0xe0>
    d6d8:	ldr	r0, [fp, #-12]
    d6dc:	add	r1, r0, #88	; 0x58
    d6e0:	ldr	r2, [r0, #80]	; 0x50
    d6e4:	bic	r2, r2, #127	; 0x7f
    d6e8:	str	r0, [sp, #12]
    d6ec:	mov	r0, r1
    d6f0:	mov	r1, r2
    d6f4:	ldr	r2, [sp, #12]
    d6f8:	bl	db94 <rb_sha512_process_block>
    d6fc:	ldr	r0, [fp, #-12]
    d700:	ldr	r1, [r0, #80]	; 0x50
    d704:	and	r1, r1, #127	; 0x7f
    d708:	mov	r2, #0
    d70c:	str	r2, [r0, #84]	; 0x54
    d710:	str	r1, [r0, #80]	; 0x50
    d714:	ldr	r0, [fp, #-12]
    d718:	add	r1, r0, #88	; 0x58
    d71c:	ldr	r2, [fp, #-16]
    d720:	ldr	lr, [fp, #-20]	; 0xffffffec
    d724:	add	r2, r2, lr
    d728:	bic	r2, r2, #127	; 0x7f
    d72c:	add	r2, r1, r2
    d730:	ldr	r0, [r0, #80]	; 0x50
    d734:	str	r0, [sp, #8]
    d738:	mov	r0, r1
    d73c:	mov	r1, r2
    d740:	ldr	r2, [sp, #8]
    d744:	bl	51dc <memcpy@plt>
    d748:	ldr	r0, [fp, #-4]
    d74c:	ldr	r1, [fp, #-20]	; 0xffffffec
    d750:	add	r0, r0, r1
    d754:	str	r0, [fp, #-4]
    d758:	ldr	r0, [fp, #-20]	; 0xffffffec
    d75c:	ldr	r1, [fp, #-8]
    d760:	sub	r0, r1, r0
    d764:	str	r0, [fp, #-8]
    d768:	ldr	r0, [fp, #-8]
    d76c:	cmp	r0, #128	; 0x80
    d770:	bcc	d820 <rb_sha512_process_bytes+0x228>
    d774:	ldr	r0, [fp, #-4]
    d778:	and	r0, r0, #7
    d77c:	cmp	r0, #0
    d780:	beq	d7e0 <rb_sha512_process_bytes+0x1e8>
    d784:	b	d788 <rb_sha512_process_bytes+0x190>
    d788:	ldr	r0, [fp, #-8]
    d78c:	cmp	r0, #128	; 0x80
    d790:	bls	d7dc <rb_sha512_process_bytes+0x1e4>
    d794:	ldr	r0, [fp, #-12]
    d798:	add	r0, r0, #88	; 0x58
    d79c:	ldr	r1, [fp, #-4]
    d7a0:	str	r0, [sp, #4]
    d7a4:	movw	r2, #128	; 0x80
    d7a8:	str	r2, [sp]
    d7ac:	bl	51dc <memcpy@plt>
    d7b0:	ldr	r2, [fp, #-12]
    d7b4:	ldr	r0, [sp, #4]
    d7b8:	ldr	r1, [sp]
    d7bc:	bl	db94 <rb_sha512_process_block>
    d7c0:	ldr	r0, [fp, #-4]
    d7c4:	add	r0, r0, #128	; 0x80
    d7c8:	str	r0, [fp, #-4]
    d7cc:	ldr	r0, [fp, #-8]
    d7d0:	sub	r0, r0, #128	; 0x80
    d7d4:	str	r0, [fp, #-8]
    d7d8:	b	d788 <rb_sha512_process_bytes+0x190>
    d7dc:	b	d81c <rb_sha512_process_bytes+0x224>
    d7e0:	ldr	r0, [fp, #-4]
    d7e4:	ldr	r1, [fp, #-8]
    d7e8:	mvn	r2, #127	; 0x7f
    d7ec:	and	r1, r1, r2
    d7f0:	ldr	r2, [fp, #-12]
    d7f4:	bl	db94 <rb_sha512_process_block>
    d7f8:	ldr	r0, [fp, #-4]
    d7fc:	ldr	r1, [fp, #-8]
    d800:	mvn	r2, #127	; 0x7f
    d804:	and	r1, r1, r2
    d808:	add	r0, r0, r1
    d80c:	str	r0, [fp, #-4]
    d810:	ldr	r0, [fp, #-8]
    d814:	and	r0, r0, #127	; 0x7f
    d818:	str	r0, [fp, #-8]
    d81c:	b	d820 <rb_sha512_process_bytes+0x228>
    d820:	ldr	r0, [fp, #-8]
    d824:	cmp	r0, #0
    d828:	bls	d8c0 <rb_sha512_process_bytes+0x2c8>
    d82c:	ldr	r0, [fp, #-12]
    d830:	ldr	r0, [r0, #80]	; 0x50
    d834:	str	r0, [fp, #-24]	; 0xffffffe8
    d838:	ldr	r0, [fp, #-12]
    d83c:	add	r0, r0, #88	; 0x58
    d840:	ldr	r1, [fp, #-24]	; 0xffffffe8
    d844:	add	r0, r0, r1
    d848:	ldr	r1, [fp, #-4]
    d84c:	ldr	r2, [fp, #-8]
    d850:	bl	51dc <memcpy@plt>
    d854:	ldr	r0, [fp, #-8]
    d858:	ldr	r1, [fp, #-24]	; 0xffffffe8
    d85c:	add	r0, r1, r0
    d860:	str	r0, [fp, #-24]	; 0xffffffe8
    d864:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d868:	cmp	r0, #128	; 0x80
    d86c:	bcc	d8ac <rb_sha512_process_bytes+0x2b4>
    d870:	ldr	r0, [fp, #-12]
    d874:	add	r0, r0, #88	; 0x58
    d878:	ldr	r2, [fp, #-12]
    d87c:	movw	r1, #128	; 0x80
    d880:	bl	db94 <rb_sha512_process_block>
    d884:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d888:	sub	r0, r0, #128	; 0x80
    d88c:	str	r0, [fp, #-24]	; 0xffffffe8
    d890:	ldr	r0, [fp, #-12]
    d894:	add	r0, r0, #88	; 0x58
    d898:	ldr	r1, [fp, #-12]
    d89c:	add	r1, r1, #88	; 0x58
    d8a0:	add	r1, r1, #128	; 0x80
    d8a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d8a8:	bl	51dc <memcpy@plt>
    d8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d8b0:	ldr	r1, [fp, #-12]
    d8b4:	mov	r2, #0
    d8b8:	str	r2, [r1, #84]	; 0x54
    d8bc:	str	r0, [r1, #80]	; 0x50
    d8c0:	mov	sp, fp
    d8c4:	pop	{fp, pc}

0000d8c8 <rb_sha512_finish_ctx>:
    d8c8:	push	{r4, sl, fp, lr}
    d8cc:	add	fp, sp, #8
    d8d0:	sub	sp, sp, #64	; 0x40
    d8d4:	str	r0, [fp, #-12]
    d8d8:	str	r1, [fp, #-16]
    d8dc:	ldr	r0, [fp, #-12]
    d8e0:	ldr	r1, [r0, #80]	; 0x50
    d8e4:	ldr	r0, [r0, #84]	; 0x54
    d8e8:	str	r0, [fp, #-20]	; 0xffffffec
    d8ec:	str	r1, [fp, #-24]	; 0xffffffe8
    d8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d8f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    d8f8:	ldr	r2, [fp, #-12]
    d8fc:	ldr	r3, [r2, #64]	; 0x40
    d900:	ldr	ip, [r2, #68]	; 0x44
    d904:	adds	r0, r3, r0
    d908:	adc	r1, ip, r1
    d90c:	str	r0, [r2, #64]	; 0x40
    d910:	str	r1, [r2, #68]	; 0x44
    d914:	ldr	r0, [fp, #-12]
    d918:	ldr	r1, [r0, #64]	; 0x40
    d91c:	ldr	r0, [r0, #68]	; 0x44
    d920:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d924:	ldr	r3, [fp, #-20]	; 0xffffffec
    d928:	subs	r1, r1, r2
    d92c:	sbcs	r0, r0, r3
    d930:	str	r1, [sp, #32]
    d934:	str	r0, [sp, #28]
    d938:	bcs	d95c <rb_sha512_finish_ctx+0x94>
    d93c:	b	d940 <rb_sha512_finish_ctx+0x78>
    d940:	ldr	r0, [fp, #-12]
    d944:	ldr	r1, [r0, #72]	; 0x48
    d948:	ldr	r2, [r0, #76]	; 0x4c
    d94c:	adds	r1, r1, #1
    d950:	adc	r2, r2, #0
    d954:	str	r1, [r0, #72]	; 0x48
    d958:	str	r2, [r0, #76]	; 0x4c
    d95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d960:	ldr	r1, [fp, #-20]	; 0xffffffec
    d964:	subs	r0, r0, #112	; 0x70
    d968:	sbcs	r1, r1, #0
    d96c:	str	r0, [sp, #24]
    d970:	str	r1, [sp, #20]
    d974:	bcc	d998 <rb_sha512_finish_ctx+0xd0>
    d978:	b	d97c <rb_sha512_finish_ctx+0xb4>
    d97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d980:	ldr	r1, [fp, #-20]	; 0xffffffec
    d984:	rsbs	r0, r0, #240	; 0xf0
    d988:	rsc	r1, r1, #0
    d98c:	str	r0, [sp, #16]
    d990:	str	r1, [sp, #12]
    d994:	b	d9b4 <rb_sha512_finish_ctx+0xec>
    d998:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d99c:	ldr	r1, [fp, #-20]	; 0xffffffec
    d9a0:	rsbs	r0, r0, #112	; 0x70
    d9a4:	rsc	r1, r1, #0
    d9a8:	str	r0, [sp, #16]
    d9ac:	str	r1, [sp, #12]
    d9b0:	b	d9b4 <rb_sha512_finish_ctx+0xec>
    d9b4:	ldr	r0, [sp, #12]
    d9b8:	ldr	r1, [sp, #16]
    d9bc:	str	r1, [fp, #-32]	; 0xffffffe0
    d9c0:	ldr	r1, [fp, #-12]
    d9c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d9c8:	add	r1, r1, r2
    d9cc:	add	r1, r1, #88	; 0x58
    d9d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d9d4:	ldr	r3, [pc, #436]	; db90 <rb_sha512_finish_ctx+0x2c8>
    d9d8:	add	r3, pc, r3
    d9dc:	str	r0, [sp, #8]
    d9e0:	mov	r0, r1
    d9e4:	mov	r1, r3
    d9e8:	bl	51dc <memcpy@plt>
    d9ec:	ldr	r1, [fp, #-12]
    d9f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d9f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d9f8:	add	r2, r2, r3
    d9fc:	add	r1, r1, r2
    da00:	add	r1, r1, #96	; 0x60
    da04:	str	r1, [fp, #-28]	; 0xffffffe4
    da08:	ldr	r1, [fp, #-12]
    da0c:	ldr	r2, [r1, #64]	; 0x40
    da10:	ldr	r1, [r1, #68]	; 0x44
    da14:	lsl	r3, r1, #3
    da18:	lsl	lr, r2, #11
    da1c:	uxtb16	lr, lr
    da20:	orr	lr, lr, r2, lsl #27
    da24:	mov	ip, #65280	; 0xff00
    da28:	and	r4, ip, r2, lsr #5
    da2c:	orr	lr, lr, r4
    da30:	ubfx	r4, r2, #21, #8
    da34:	orr	lr, lr, r4
    da38:	lsr	r2, r2, #5
    da3c:	orr	r2, r2, r1, lsl #27
    da40:	and	r2, r2, #-16777216	; 0xff000000
    da44:	movw	r4, #8160	; 0x1fe0
    da48:	and	r4, r1, r4
    da4c:	orr	r2, r2, r4, lsl #11
    da50:	and	r1, ip, r1, lsr #5
    da54:	orr	r1, r2, r1
    da58:	orr	r1, r1, r3, lsr #24
    da5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    da60:	str	lr, [r2, #4]
    da64:	str	r1, [r2]
    da68:	ldr	r1, [fp, #-12]
    da6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    da70:	ldr	r3, [fp, #-32]	; 0xffffffe0
    da74:	add	r2, r2, r3
    da78:	add	r1, r1, r2
    da7c:	add	r1, r1, #88	; 0x58
    da80:	str	r1, [fp, #-28]	; 0xffffffe4
    da84:	ldr	r1, [fp, #-12]
    da88:	ldr	r2, [r1, #68]	; 0x44
    da8c:	ldr	r3, [r1, #72]	; 0x48
    da90:	ldr	r1, [r1, #76]	; 0x4c
    da94:	lsl	r1, r1, #3
    da98:	orr	r1, r1, r3, lsr #29
    da9c:	lsl	r3, r3, #3
    daa0:	orr	r2, r3, r2, lsr #29
    daa4:	lsl	r3, r2, #24
    daa8:	and	lr, r2, #65280	; 0xff00
    daac:	orr	r3, r3, lr, lsl #8
    dab0:	and	lr, r2, #16711680	; 0xff0000
    dab4:	orr	r3, r3, lr, lsr #8
    dab8:	orr	r2, r3, r2, lsr #24
    dabc:	lsl	r3, r1, #8
    dac0:	uxtb16	r3, r3
    dac4:	orr	r3, r3, r1, lsl #24
    dac8:	and	ip, ip, r1, lsr #8
    dacc:	orr	r3, r3, ip
    dad0:	orr	r1, r3, r1, lsr #24
    dad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dad8:	str	r2, [r3, #4]
    dadc:	str	r1, [r3]
    dae0:	ldr	r1, [fp, #-12]
    dae4:	add	r1, r1, #88	; 0x58
    dae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    daec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    daf0:	add	r2, r2, r3
    daf4:	add	r2, r2, #16
    daf8:	ldr	r3, [fp, #-12]
    dafc:	str	r0, [sp, #4]
    db00:	mov	r0, r1
    db04:	mov	r1, r2
    db08:	mov	r2, r3
    db0c:	bl	db94 <rb_sha512_process_block>
    db10:	movw	r0, #0
    db14:	str	r0, [sp, #36]	; 0x24
    db18:	ldr	r0, [sp, #36]	; 0x24
    db1c:	cmp	r0, #8
    db20:	bcs	db84 <rb_sha512_finish_ctx+0x2bc>
    db24:	ldr	r0, [fp, #-12]
    db28:	ldr	r1, [sp, #36]	; 0x24
    db2c:	ldr	r2, [r0, r1, lsl #3]!
    db30:	ldr	r0, [r0, #4]
    db34:	lsl	r3, r2, #24
    db38:	and	ip, r2, #65280	; 0xff00
    db3c:	orr	r3, r3, ip, lsl #8
    db40:	and	ip, r2, #16711680	; 0xff0000
    db44:	orr	r3, r3, ip, lsr #8
    db48:	orr	r2, r3, r2, lsr #24
    db4c:	lsl	r3, r0, #8
    db50:	uxtb16	r3, r3
    db54:	orr	r3, r3, r0, lsl #24
    db58:	mov	ip, #65280	; 0xff00
    db5c:	and	ip, ip, r0, lsr #8
    db60:	orr	r3, r3, ip
    db64:	orr	r0, r3, r0, lsr #24
    db68:	ldr	r3, [fp, #-16]
    db6c:	str	r0, [r3, r1, lsl #3]!
    db70:	str	r2, [r3, #4]
    db74:	ldr	r0, [sp, #36]	; 0x24
    db78:	add	r0, r0, #1
    db7c:	str	r0, [sp, #36]	; 0x24
    db80:	b	db18 <rb_sha512_finish_ctx+0x250>
    db84:	ldr	r0, [fp, #-16]
    db88:	sub	sp, fp, #8
    db8c:	pop	{r4, sl, fp, pc}
    db90:	.word	0x00015020

0000db94 <rb_sha512_process_block>:
    db94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db98:	add	fp, sp, #28
    db9c:	sub	sp, sp, #828	; 0x33c
    dba0:	str	r0, [fp, #-36]	; 0xffffffdc
    dba4:	str	r1, [fp, #-40]	; 0xffffffd8
    dba8:	str	r2, [fp, #-44]	; 0xffffffd4
    dbac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    dbb0:	str	r0, [fp, #-48]	; 0xffffffd0
    dbb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dbb8:	lsr	r0, r0, #3
    dbbc:	str	r0, [fp, #-52]	; 0xffffffcc
    dbc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dbc4:	ldr	r1, [r0]
    dbc8:	ldr	r0, [r0, #4]
    dbcc:	str	r0, [fp, #-60]	; 0xffffffc4
    dbd0:	str	r1, [fp, #-64]	; 0xffffffc0
    dbd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dbd8:	ldr	r1, [r0, #8]
    dbdc:	ldr	r0, [r0, #12]
    dbe0:	str	r0, [fp, #-68]	; 0xffffffbc
    dbe4:	str	r1, [fp, #-72]	; 0xffffffb8
    dbe8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dbec:	ldr	r1, [r0, #16]
    dbf0:	ldr	r0, [r0, #20]
    dbf4:	str	r0, [fp, #-76]	; 0xffffffb4
    dbf8:	str	r1, [fp, #-80]	; 0xffffffb0
    dbfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc00:	ldr	r1, [r0, #24]
    dc04:	ldr	r0, [r0, #28]
    dc08:	str	r0, [fp, #-84]	; 0xffffffac
    dc0c:	str	r1, [fp, #-88]	; 0xffffffa8
    dc10:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc14:	ldr	r1, [r0, #32]
    dc18:	ldr	r0, [r0, #36]	; 0x24
    dc1c:	str	r0, [fp, #-92]	; 0xffffffa4
    dc20:	str	r1, [fp, #-96]	; 0xffffffa0
    dc24:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc28:	ldr	r1, [r0, #40]	; 0x28
    dc2c:	ldr	r0, [r0, #44]	; 0x2c
    dc30:	str	r0, [fp, #-100]	; 0xffffff9c
    dc34:	str	r1, [fp, #-104]	; 0xffffff98
    dc38:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc3c:	ldr	r1, [r0, #48]	; 0x30
    dc40:	ldr	r0, [r0, #52]	; 0x34
    dc44:	str	r0, [fp, #-108]	; 0xffffff94
    dc48:	str	r1, [fp, #-112]	; 0xffffff90
    dc4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc50:	ldr	r1, [r0, #56]	; 0x38
    dc54:	ldr	r0, [r0, #60]	; 0x3c
    dc58:	str	r0, [fp, #-116]	; 0xffffff8c
    dc5c:	str	r1, [fp, #-120]	; 0xffffff88
    dc60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    dc64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    dc68:	ldr	r2, [r1, #64]	; 0x40
    dc6c:	ldr	r3, [r1, #68]	; 0x44
    dc70:	adds	r0, r2, r0
    dc74:	adc	r2, r3, #0
    dc78:	str	r0, [r1, #64]	; 0x40
    dc7c:	str	r2, [r1, #68]	; 0x44
    dc80:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dc84:	ldr	r1, [r0, #64]	; 0x40
    dc88:	ldr	r0, [r0, #68]	; 0x44
    dc8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dc90:	subs	r1, r1, r2
    dc94:	sbcs	r0, r0, #0
    dc98:	str	r1, [sp, #4]
    dc9c:	str	r0, [sp]
    dca0:	bcs	dcc4 <rb_sha512_process_block+0x130>
    dca4:	b	dca8 <rb_sha512_process_block+0x114>
    dca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    dcac:	ldr	r1, [r0, #72]	; 0x48
    dcb0:	ldr	r2, [r0, #76]	; 0x4c
    dcb4:	adds	r1, r1, #1
    dcb8:	adc	r2, r2, #0
    dcbc:	str	r1, [r0, #72]	; 0x48
    dcc0:	str	r2, [r0, #76]	; 0x4c
    dcc4:	b	dcc8 <rb_sha512_process_block+0x134>
    dcc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    dccc:	cmp	r0, #0
    dcd0:	bls	e1dc <rb_sha512_process_block+0x648>
    dcd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dcd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    dcdc:	str	r1, [sp, #92]	; 0x5c
    dce0:	str	r0, [sp, #88]	; 0x58
    dce4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    dce8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    dcec:	str	r1, [sp, #84]	; 0x54
    dcf0:	str	r0, [sp, #80]	; 0x50
    dcf4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    dcf8:	ldr	r1, [fp, #-76]	; 0xffffffb4
    dcfc:	str	r1, [sp, #76]	; 0x4c
    dd00:	str	r0, [sp, #72]	; 0x48
    dd04:	ldr	r0, [fp, #-88]	; 0xffffffa8
    dd08:	ldr	r1, [fp, #-84]	; 0xffffffac
    dd0c:	str	r1, [sp, #68]	; 0x44
    dd10:	str	r0, [sp, #64]	; 0x40
    dd14:	ldr	r0, [fp, #-96]	; 0xffffffa0
    dd18:	ldr	r1, [fp, #-92]	; 0xffffffa4
    dd1c:	str	r1, [sp, #60]	; 0x3c
    dd20:	str	r0, [sp, #56]	; 0x38
    dd24:	ldr	r0, [fp, #-104]	; 0xffffff98
    dd28:	ldr	r1, [fp, #-100]	; 0xffffff9c
    dd2c:	str	r1, [sp, #52]	; 0x34
    dd30:	str	r0, [sp, #48]	; 0x30
    dd34:	ldr	r0, [fp, #-112]	; 0xffffff90
    dd38:	ldr	r1, [fp, #-108]	; 0xffffff94
    dd3c:	str	r1, [sp, #44]	; 0x2c
    dd40:	str	r0, [sp, #40]	; 0x28
    dd44:	ldr	r0, [fp, #-120]	; 0xffffff88
    dd48:	ldr	r1, [fp, #-116]	; 0xffffff8c
    dd4c:	str	r1, [sp, #36]	; 0x24
    dd50:	str	r0, [sp, #32]
    dd54:	movw	r0, #0
    dd58:	str	r0, [sp, #28]
    dd5c:	ldr	r0, [sp, #28]
    dd60:	cmp	r0, #16
    dd64:	bcs	ddd8 <rb_sha512_process_block+0x244>
    dd68:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dd6c:	ldr	r1, [r0]
    dd70:	ldr	r0, [r0, #4]
    dd74:	lsl	r2, r1, #24
    dd78:	and	r3, r1, #65280	; 0xff00
    dd7c:	orr	r2, r2, r3, lsl #8
    dd80:	and	r3, r1, #16711680	; 0xff0000
    dd84:	orr	r2, r2, r3, lsr #8
    dd88:	orr	r1, r2, r1, lsr #24
    dd8c:	lsl	r2, r0, #8
    dd90:	uxtb16	r2, r2
    dd94:	orr	r2, r2, r0, lsl #24
    dd98:	mov	r3, #65280	; 0xff00
    dd9c:	and	r3, r3, r0, lsr #8
    dda0:	orr	r2, r2, r3
    dda4:	orr	r0, r2, r0, lsr #24
    dda8:	ldr	r2, [sp, #28]
    ddac:	add	r3, sp, #96	; 0x60
    ddb0:	add	ip, r3, r2, lsl #3
    ddb4:	str	r0, [r3, r2, lsl #3]
    ddb8:	str	r1, [ip, #4]
    ddbc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ddc0:	add	r0, r0, #8
    ddc4:	str	r0, [fp, #-48]	; 0xffffffd0
    ddc8:	ldr	r0, [sp, #28]
    ddcc:	add	r0, r0, #1
    ddd0:	str	r0, [sp, #28]
    ddd4:	b	dd5c <rb_sha512_process_block+0x1c8>
    ddd8:	movw	r0, #16
    dddc:	str	r0, [sp, #28]
    dde0:	ldr	r0, [sp, #28]
    dde4:	cmp	r0, #80	; 0x50
    dde8:	bcs	deb4 <rb_sha512_process_block+0x320>
    ddec:	ldr	r0, [sp, #28]
    ddf0:	add	r1, sp, #96	; 0x60
    ddf4:	add	r2, r1, r0, lsl #3
    ddf8:	ldr	r3, [r2, #-12]
    ddfc:	ldr	ip, [r2, #-16]
    de00:	lsr	lr, ip, #19
    de04:	orr	lr, lr, r3, lsl #13
    de08:	lsr	r4, r3, #19
    de0c:	orr	r4, r4, ip, lsl #13
    de10:	lsr	r5, r3, #29
    de14:	lsl	r6, r3, #3
    de18:	orr	r6, r6, ip, lsr #29
    de1c:	orr	r5, r5, ip, lsl #3
    de20:	eor	lr, lr, r5
    de24:	eor	r4, r4, r6
    de28:	lsr	ip, ip, #6
    de2c:	orr	ip, ip, r3, lsl #26
    de30:	eor	r3, r4, r3, lsr #6
    de34:	eor	ip, lr, ip
    de38:	ldr	lr, [r2, #-52]	; 0xffffffcc
    de3c:	ldr	r4, [r2, #-56]	; 0xffffffc8
    de40:	adds	ip, ip, r4
    de44:	adc	r3, r3, lr
    de48:	ldr	lr, [r2, #-128]	; 0xffffff80
    de4c:	ldr	r4, [r2, #-124]	; 0xffffff84
    de50:	ldr	r5, [r2, #-120]	; 0xffffff88
    de54:	ldr	r6, [r2, #-116]	; 0xffffff8c
    de58:	lsrs	r7, r6, #1
    de5c:	rrx	r8, r5
    de60:	orr	r7, r7, r5, lsl #31
    de64:	lsr	r9, r5, #8
    de68:	orr	r9, r9, r6, lsl #24
    de6c:	lsr	sl, r6, #8
    de70:	orr	sl, sl, r5, lsl #24
    de74:	eor	r7, r7, sl
    de78:	eor	r8, r8, r9
    de7c:	lsr	r5, r5, #7
    de80:	orr	r5, r5, r6, lsl #25
    de84:	eor	r6, r7, r6, lsr #7
    de88:	eor	r5, r8, r5
    de8c:	adds	ip, ip, r5
    de90:	adc	r3, r3, r6
    de94:	adds	ip, ip, lr
    de98:	adc	r3, r3, r4
    de9c:	str	ip, [r1, r0, lsl #3]
    dea0:	str	r3, [r2, #4]
    dea4:	ldr	r0, [sp, #28]
    dea8:	add	r0, r0, #1
    deac:	str	r0, [sp, #28]
    deb0:	b	dde0 <rb_sha512_process_block+0x24c>
    deb4:	movw	r0, #0
    deb8:	str	r0, [sp, #28]
    debc:	ldr	r0, [sp, #28]
    dec0:	cmp	r0, #80	; 0x50
    dec4:	bcs	e0cc <rb_sha512_process_block+0x538>
    dec8:	ldr	r0, [fp, #-120]	; 0xffffff88
    decc:	ldr	r1, [fp, #-116]	; 0xffffff8c
    ded0:	ldr	r2, [fp, #-96]	; 0xffffffa0
    ded4:	ldr	r3, [fp, #-92]	; 0xffffffa4
    ded8:	lsr	ip, r2, #14
    dedc:	orr	ip, ip, r3, lsl #18
    dee0:	lsr	lr, r3, #14
    dee4:	orr	lr, lr, r2, lsl #18
    dee8:	lsr	r4, r2, #18
    deec:	orr	r4, r4, r3, lsl #14
    def0:	lsr	r5, r3, #18
    def4:	orr	r5, r5, r2, lsl #14
    def8:	eor	ip, ip, r4
    defc:	eor	lr, lr, r5
    df00:	lsr	r4, r3, #9
    df04:	lsl	r5, r3, #23
    df08:	orr	r5, r5, r2, lsr #9
    df0c:	orr	r4, r4, r2, lsl #23
    df10:	eor	lr, lr, r5
    df14:	eor	ip, ip, r4
    df18:	adds	r0, r0, ip
    df1c:	adc	r1, r1, lr
    df20:	ldr	ip, [fp, #-104]	; 0xffffff98
    df24:	ldr	lr, [fp, #-100]	; 0xffffff9c
    df28:	and	ip, r2, ip
    df2c:	and	lr, r3, lr
    df30:	ldr	r4, [fp, #-112]	; 0xffffff90
    df34:	ldr	r5, [fp, #-108]	; 0xffffff94
    df38:	bic	r2, r4, r2
    df3c:	bic	r3, r5, r3
    df40:	eor	r3, lr, r3
    df44:	eor	r2, ip, r2
    df48:	adds	r0, r0, r2
    df4c:	adc	r1, r1, r3
    df50:	ldr	r2, [sp, #28]
    df54:	ldr	r3, [pc, #808]	; e284 <rb_sha512_process_block+0x6f0>
    df58:	add	r3, pc, r3
    df5c:	ldr	ip, [r3, r2, lsl #3]!
    df60:	ldr	r3, [r3, #4]
    df64:	adds	r0, r0, ip
    df68:	adc	r1, r1, r3
    df6c:	add	r3, sp, #96	; 0x60
    df70:	add	ip, r3, r2, lsl #3
    df74:	ldr	ip, [ip, #4]
    df78:	ldr	r2, [r3, r2, lsl #3]
    df7c:	adds	r0, r0, r2
    df80:	adc	r1, r1, ip
    df84:	str	r0, [sp, #16]
    df88:	str	r1, [sp, #20]
    df8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    df90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    df94:	lsr	r2, r0, #28
    df98:	orr	r2, r2, r1, lsl #4
    df9c:	lsr	r3, r1, #28
    dfa0:	orr	r3, r3, r0, lsl #4
    dfa4:	lsr	ip, r1, #2
    dfa8:	lsl	lr, r1, #30
    dfac:	orr	lr, lr, r0, lsr #2
    dfb0:	orr	ip, ip, r0, lsl #30
    dfb4:	eor	r2, r2, ip
    dfb8:	eor	r3, r3, lr
    dfbc:	lsr	ip, r1, #7
    dfc0:	lsl	lr, r1, #25
    dfc4:	orr	lr, lr, r0, lsr #7
    dfc8:	orr	ip, ip, r0, lsl #25
    dfcc:	eor	r3, r3, lr
    dfd0:	eor	r2, r2, ip
    dfd4:	ldr	ip, [fp, #-72]	; 0xffffffb8
    dfd8:	ldr	lr, [fp, #-68]	; 0xffffffbc
    dfdc:	and	r4, r1, lr
    dfe0:	and	r5, r0, ip
    dfe4:	ldr	r6, [fp, #-80]	; 0xffffffb0
    dfe8:	ldr	r7, [fp, #-76]	; 0xffffffb4
    dfec:	and	r1, r1, r7
    dff0:	and	r0, r0, r6
    dff4:	eor	r0, r5, r0
    dff8:	eor	r1, r4, r1
    dffc:	and	ip, ip, r6
    e000:	and	lr, lr, r7
    e004:	eor	r1, r1, lr
    e008:	eor	r0, r0, ip
    e00c:	adds	r0, r2, r0
    e010:	adc	r1, r3, r1
    e014:	str	r0, [sp, #8]
    e018:	str	r1, [sp, #12]
    e01c:	ldr	r0, [fp, #-112]	; 0xffffff90
    e020:	ldr	r1, [fp, #-108]	; 0xffffff94
    e024:	str	r1, [fp, #-116]	; 0xffffff8c
    e028:	str	r0, [fp, #-120]	; 0xffffff88
    e02c:	ldr	r0, [fp, #-104]	; 0xffffff98
    e030:	ldr	r1, [fp, #-100]	; 0xffffff9c
    e034:	str	r1, [fp, #-108]	; 0xffffff94
    e038:	str	r0, [fp, #-112]	; 0xffffff90
    e03c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    e040:	ldr	r1, [fp, #-92]	; 0xffffffa4
    e044:	str	r1, [fp, #-100]	; 0xffffff9c
    e048:	str	r0, [fp, #-104]	; 0xffffff98
    e04c:	ldr	r0, [fp, #-88]	; 0xffffffa8
    e050:	ldr	r1, [fp, #-84]	; 0xffffffac
    e054:	ldr	r2, [sp, #16]
    e058:	ldr	r3, [sp, #20]
    e05c:	adds	r0, r0, r2
    e060:	adc	r1, r1, r3
    e064:	str	r0, [fp, #-96]	; 0xffffffa0
    e068:	str	r1, [fp, #-92]	; 0xffffffa4
    e06c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    e070:	ldr	r1, [fp, #-76]	; 0xffffffb4
    e074:	str	r1, [fp, #-84]	; 0xffffffac
    e078:	str	r0, [fp, #-88]	; 0xffffffa8
    e07c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    e080:	ldr	r1, [fp, #-68]	; 0xffffffbc
    e084:	str	r1, [fp, #-76]	; 0xffffffb4
    e088:	str	r0, [fp, #-80]	; 0xffffffb0
    e08c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e090:	ldr	r1, [fp, #-60]	; 0xffffffc4
    e094:	str	r1, [fp, #-68]	; 0xffffffbc
    e098:	str	r0, [fp, #-72]	; 0xffffffb8
    e09c:	ldr	r0, [sp, #16]
    e0a0:	ldr	r1, [sp, #20]
    e0a4:	ldr	r2, [sp, #8]
    e0a8:	ldr	r3, [sp, #12]
    e0ac:	adds	r0, r0, r2
    e0b0:	adc	r1, r1, r3
    e0b4:	str	r0, [fp, #-64]	; 0xffffffc0
    e0b8:	str	r1, [fp, #-60]	; 0xffffffc4
    e0bc:	ldr	r0, [sp, #28]
    e0c0:	add	r0, r0, #1
    e0c4:	str	r0, [sp, #28]
    e0c8:	b	debc <rb_sha512_process_block+0x328>
    e0cc:	ldr	r0, [sp, #88]	; 0x58
    e0d0:	ldr	r1, [sp, #92]	; 0x5c
    e0d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    e0d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    e0dc:	adds	r0, r2, r0
    e0e0:	adc	r1, r3, r1
    e0e4:	str	r0, [fp, #-64]	; 0xffffffc0
    e0e8:	str	r1, [fp, #-60]	; 0xffffffc4
    e0ec:	ldr	r0, [sp, #80]	; 0x50
    e0f0:	ldr	r1, [sp, #84]	; 0x54
    e0f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    e0f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e0fc:	adds	r0, r2, r0
    e100:	adc	r1, r3, r1
    e104:	str	r0, [fp, #-72]	; 0xffffffb8
    e108:	str	r1, [fp, #-68]	; 0xffffffbc
    e10c:	ldr	r0, [sp, #72]	; 0x48
    e110:	ldr	r1, [sp, #76]	; 0x4c
    e114:	ldr	r2, [fp, #-80]	; 0xffffffb0
    e118:	ldr	r3, [fp, #-76]	; 0xffffffb4
    e11c:	adds	r0, r2, r0
    e120:	adc	r1, r3, r1
    e124:	str	r0, [fp, #-80]	; 0xffffffb0
    e128:	str	r1, [fp, #-76]	; 0xffffffb4
    e12c:	ldr	r0, [sp, #64]	; 0x40
    e130:	ldr	r1, [sp, #68]	; 0x44
    e134:	ldr	r2, [fp, #-88]	; 0xffffffa8
    e138:	ldr	r3, [fp, #-84]	; 0xffffffac
    e13c:	adds	r0, r2, r0
    e140:	adc	r1, r3, r1
    e144:	str	r0, [fp, #-88]	; 0xffffffa8
    e148:	str	r1, [fp, #-84]	; 0xffffffac
    e14c:	ldr	r0, [sp, #56]	; 0x38
    e150:	ldr	r1, [sp, #60]	; 0x3c
    e154:	ldr	r2, [fp, #-96]	; 0xffffffa0
    e158:	ldr	r3, [fp, #-92]	; 0xffffffa4
    e15c:	adds	r0, r2, r0
    e160:	adc	r1, r3, r1
    e164:	str	r0, [fp, #-96]	; 0xffffffa0
    e168:	str	r1, [fp, #-92]	; 0xffffffa4
    e16c:	ldr	r0, [sp, #48]	; 0x30
    e170:	ldr	r1, [sp, #52]	; 0x34
    e174:	ldr	r2, [fp, #-104]	; 0xffffff98
    e178:	ldr	r3, [fp, #-100]	; 0xffffff9c
    e17c:	adds	r0, r2, r0
    e180:	adc	r1, r3, r1
    e184:	str	r0, [fp, #-104]	; 0xffffff98
    e188:	str	r1, [fp, #-100]	; 0xffffff9c
    e18c:	ldr	r0, [sp, #40]	; 0x28
    e190:	ldr	r1, [sp, #44]	; 0x2c
    e194:	ldr	r2, [fp, #-112]	; 0xffffff90
    e198:	ldr	r3, [fp, #-108]	; 0xffffff94
    e19c:	adds	r0, r2, r0
    e1a0:	adc	r1, r3, r1
    e1a4:	str	r0, [fp, #-112]	; 0xffffff90
    e1a8:	str	r1, [fp, #-108]	; 0xffffff94
    e1ac:	ldr	r0, [sp, #32]
    e1b0:	ldr	r1, [sp, #36]	; 0x24
    e1b4:	ldr	r2, [fp, #-120]	; 0xffffff88
    e1b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    e1bc:	adds	r0, r2, r0
    e1c0:	adc	r1, r3, r1
    e1c4:	str	r0, [fp, #-120]	; 0xffffff88
    e1c8:	str	r1, [fp, #-116]	; 0xffffff8c
    e1cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    e1d0:	sub	r0, r0, #16
    e1d4:	str	r0, [fp, #-52]	; 0xffffffcc
    e1d8:	b	dcc8 <rb_sha512_process_block+0x134>
    e1dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    e1e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    e1e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e1e8:	str	r1, [r2, #4]
    e1ec:	str	r0, [r2]
    e1f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    e1f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    e1f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e1fc:	str	r1, [r2, #12]
    e200:	str	r0, [r2, #8]
    e204:	ldr	r0, [fp, #-80]	; 0xffffffb0
    e208:	ldr	r1, [fp, #-76]	; 0xffffffb4
    e20c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e210:	str	r1, [r2, #20]
    e214:	str	r0, [r2, #16]
    e218:	ldr	r0, [fp, #-88]	; 0xffffffa8
    e21c:	ldr	r1, [fp, #-84]	; 0xffffffac
    e220:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e224:	str	r1, [r2, #28]
    e228:	str	r0, [r2, #24]
    e22c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    e230:	ldr	r1, [fp, #-92]	; 0xffffffa4
    e234:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e238:	str	r1, [r2, #36]	; 0x24
    e23c:	str	r0, [r2, #32]
    e240:	ldr	r0, [fp, #-104]	; 0xffffff98
    e244:	ldr	r1, [fp, #-100]	; 0xffffff9c
    e248:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e24c:	str	r1, [r2, #44]	; 0x2c
    e250:	str	r0, [r2, #40]	; 0x28
    e254:	ldr	r0, [fp, #-112]	; 0xffffff90
    e258:	ldr	r1, [fp, #-108]	; 0xffffff94
    e25c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e260:	str	r1, [r2, #52]	; 0x34
    e264:	str	r0, [r2, #48]	; 0x30
    e268:	ldr	r0, [fp, #-120]	; 0xffffff88
    e26c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    e270:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e274:	str	r1, [r2, #60]	; 0x3c
    e278:	str	r0, [r2, #56]	; 0x38
    e27c:	sub	sp, fp, #28
    e280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e284:	.word	0x00014820

0000e288 <rb_init_bh>:
    e288:	push	{fp, lr}
    e28c:	mov	fp, sp
    e290:	movw	r0, #12
    e294:	bl	e2c0 <rb_malloc>
    e298:	ldr	lr, [pc, #24]	; e2b8 <rb_init_bh+0x30>
    e29c:	add	lr, pc, lr
    e2a0:	ldr	r1, [pc, #20]	; e2bc <rb_init_bh+0x34>
    e2a4:	add	r1, pc, r1
    e2a8:	str	r0, [r1]
    e2ac:	movw	r0, #4
    e2b0:	str	r0, [lr]
    e2b4:	pop	{fp, pc}
    e2b8:	.word	0x00039bdc
    e2bc:	.word	0x00039bd0

0000e2c0 <rb_malloc>:
    e2c0:	push	{fp, lr}
    e2c4:	mov	fp, sp
    e2c8:	sub	sp, sp, #8
    e2cc:	str	r0, [sp, #4]
    e2d0:	ldr	r1, [sp, #4]
    e2d4:	movw	r0, #1
    e2d8:	bl	4fb4 <calloc@plt>
    e2dc:	str	r0, [sp]
    e2e0:	ldr	r0, [sp]
    e2e4:	movw	r1, #0
    e2e8:	cmp	r0, r1
    e2ec:	movw	r0, #0
    e2f0:	moveq	r0, #1
    e2f4:	mvn	r1, #0
    e2f8:	eor	r0, r0, r1
    e2fc:	eor	r0, r0, r1
    e300:	tst	r0, #1
    e304:	beq	e30c <rb_malloc+0x4c>
    e308:	bl	5350 <rb_outofmemory@plt>
    e30c:	ldr	r0, [sp]
    e310:	mov	sp, fp
    e314:	pop	{fp, pc}

0000e318 <rb_bh_create>:
    e318:	push	{fp, lr}
    e31c:	mov	fp, sp
    e320:	sub	sp, sp, #24
    e324:	str	r0, [fp, #-4]
    e328:	str	r1, [fp, #-8]
    e32c:	str	r2, [sp, #12]
    e330:	ldr	r0, [fp, #-4]
    e334:	cmp	r0, #0
    e338:	beq	e348 <rb_bh_create+0x30>
    e33c:	ldr	r0, [fp, #-8]
    e340:	cmp	r0, #0
    e344:	bgt	e360 <rb_bh_create+0x48>
    e348:	ldr	r0, [pc, #232]	; e438 <rb_bh_create+0x120>
    e34c:	add	r0, pc, r0
    e350:	ldr	r1, [pc, #228]	; e43c <rb_bh_create+0x124>
    e354:	add	r1, pc, r1
    e358:	movw	r2, #147	; 0x93
    e35c:	bl	e440 <_rb_bh_fail>
    e360:	ldr	r0, [fp, #-4]
    e364:	cmp	r0, #12
    e368:	bcs	e384 <rb_bh_create+0x6c>
    e36c:	ldr	r0, [pc, #188]	; e430 <rb_bh_create+0x118>
    e370:	add	r0, pc, r0
    e374:	ldr	r1, [pc, #184]	; e434 <rb_bh_create+0x11c>
    e378:	add	r1, pc, r1
    e37c:	movw	r2, #151	; 0x97
    e380:	bl	e440 <_rb_bh_fail>
    e384:	movw	r0, #48	; 0x30
    e388:	bl	e2c0 <rb_malloc>
    e38c:	str	r0, [sp, #8]
    e390:	ldr	r0, [fp, #-4]
    e394:	ldr	lr, [sp, #8]
    e398:	str	r0, [lr, #12]
    e39c:	ldr	r0, [fp, #-8]
    e3a0:	ldr	lr, [sp, #8]
    e3a4:	str	r0, [lr, #16]
    e3a8:	ldr	r0, [sp, #12]
    e3ac:	movw	lr, #0
    e3b0:	cmp	r0, lr
    e3b4:	beq	e3c8 <rb_bh_create+0xb0>
    e3b8:	ldr	r0, [sp, #12]
    e3bc:	bl	e484 <rb_strdup>
    e3c0:	ldr	lr, [sp, #8]
    e3c4:	str	r0, [lr, #44]	; 0x2c
    e3c8:	ldr	r0, [sp, #8]
    e3cc:	movw	r1, #0
    e3d0:	cmp	r0, r1
    e3d4:	bne	e3f0 <rb_bh_create+0xd8>
    e3d8:	ldr	r0, [pc, #72]	; e428 <rb_bh_create+0x110>
    e3dc:	add	r0, pc, r0
    e3e0:	ldr	r1, [pc, #68]	; e42c <rb_bh_create+0x114>
    e3e4:	add	r1, pc, r1
    e3e8:	movw	r2, #162	; 0xa2
    e3ec:	bl	e440 <_rb_bh_fail>
    e3f0:	ldr	r0, [pc, #44]	; e424 <rb_bh_create+0x10c>
    e3f4:	add	r0, pc, r0
    e3f8:	ldr	r1, [sp, #8]
    e3fc:	ldr	r2, [sp, #8]
    e400:	ldr	r0, [r0]
    e404:	str	r0, [sp, #4]
    e408:	mov	r0, r1
    e40c:	mov	r1, r2
    e410:	ldr	r2, [sp, #4]
    e414:	bl	e4f4 <rb_dlinkAdd>
    e418:	ldr	r0, [sp, #8]
    e41c:	mov	sp, fp
    e420:	pop	{fp, pc}
    e424:	.word	0x00039a80
    e428:	.word	0x00014714
    e42c:	.word	0x000146c8
    e430:	.word	0x00014745
    e434:	.word	0x00014734
    e438:	.word	0x00014737
    e43c:	.word	0x00014758

0000e440 <_rb_bh_fail>:
    e440:	push	{fp, lr}
    e444:	mov	fp, sp
    e448:	sub	sp, sp, #16
    e44c:	ldr	r3, [pc, #44]	; e480 <_rb_bh_fail+0x40>
    e450:	add	r3, pc, r3
    e454:	str	r0, [fp, #-4]
    e458:	str	r1, [sp, #8]
    e45c:	str	r2, [sp, #4]
    e460:	ldr	r1, [fp, #-4]
    e464:	ldr	r2, [sp, #8]
    e468:	ldr	r0, [sp, #4]
    e46c:	str	r0, [sp]
    e470:	mov	r0, r3
    e474:	ldr	r3, [sp]
    e478:	bl	52e4 <rb_lib_log@plt>
    e47c:	bl	4d80 <abort@plt>
    e480:	.word	0x00014739

0000e484 <rb_strdup>:
    e484:	push	{fp, lr}
    e488:	mov	fp, sp
    e48c:	sub	sp, sp, #16
    e490:	str	r0, [fp, #-4]
    e494:	ldr	r0, [fp, #-4]
    e498:	bl	51b8 <strlen@plt>
    e49c:	add	r0, r0, #1
    e4a0:	bl	5374 <malloc@plt>
    e4a4:	str	r0, [sp, #8]
    e4a8:	ldr	r0, [sp, #8]
    e4ac:	movw	lr, #0
    e4b0:	cmp	r0, lr
    e4b4:	movw	r0, #0
    e4b8:	moveq	r0, #1
    e4bc:	mvn	lr, #0
    e4c0:	eor	r0, r0, lr
    e4c4:	eor	r0, r0, lr
    e4c8:	tst	r0, #1
    e4cc:	beq	e4d4 <rb_strdup+0x50>
    e4d0:	bl	5350 <rb_outofmemory@plt>
    e4d4:	ldr	r0, [sp, #8]
    e4d8:	ldr	r1, [fp, #-4]
    e4dc:	bl	5254 <strcpy@plt>
    e4e0:	ldr	r1, [sp, #8]
    e4e4:	str	r0, [sp, #4]
    e4e8:	mov	r0, r1
    e4ec:	mov	sp, fp
    e4f0:	pop	{fp, pc}

0000e4f4 <rb_dlinkAdd>:
    e4f4:	sub	sp, sp, #12
    e4f8:	str	r0, [sp, #8]
    e4fc:	str	r1, [sp, #4]
    e500:	str	r2, [sp]
    e504:	ldr	r0, [sp, #8]
    e508:	ldr	r1, [sp, #4]
    e50c:	str	r0, [r1]
    e510:	ldr	r0, [sp, #4]
    e514:	movw	r1, #0
    e518:	str	r1, [r0, #4]
    e51c:	ldr	r0, [sp]
    e520:	ldr	r0, [r0]
    e524:	ldr	r2, [sp, #4]
    e528:	str	r0, [r2, #8]
    e52c:	ldr	r0, [sp]
    e530:	ldr	r0, [r0]
    e534:	cmp	r0, r1
    e538:	beq	e550 <rb_dlinkAdd+0x5c>
    e53c:	ldr	r0, [sp, #4]
    e540:	ldr	r1, [sp]
    e544:	ldr	r1, [r1]
    e548:	str	r0, [r1, #4]
    e54c:	b	e574 <rb_dlinkAdd+0x80>
    e550:	ldr	r0, [sp]
    e554:	ldr	r0, [r0, #4]
    e558:	movw	r1, #0
    e55c:	cmp	r0, r1
    e560:	bne	e570 <rb_dlinkAdd+0x7c>
    e564:	ldr	r0, [sp, #4]
    e568:	ldr	r1, [sp]
    e56c:	str	r0, [r1, #4]
    e570:	b	e574 <rb_dlinkAdd+0x80>
    e574:	ldr	r0, [sp, #4]
    e578:	ldr	r1, [sp]
    e57c:	str	r0, [r1]
    e580:	ldr	r0, [sp]
    e584:	ldr	r1, [r0, #8]
    e588:	add	r1, r1, #1
    e58c:	str	r1, [r0, #8]
    e590:	add	sp, sp, #12
    e594:	bx	lr

0000e598 <rb_bh_alloc>:
    e598:	push	{fp, lr}
    e59c:	mov	fp, sp
    e5a0:	sub	sp, sp, #8
    e5a4:	str	r0, [sp, #4]
    e5a8:	ldr	r0, [sp, #4]
    e5ac:	movw	r1, #0
    e5b0:	cmp	r0, r1
    e5b4:	movw	r0, #0
    e5b8:	moveq	r0, #1
    e5bc:	mvn	r1, #0
    e5c0:	eor	r0, r0, r1
    e5c4:	eor	r0, r0, r1
    e5c8:	tst	r0, #1
    e5cc:	beq	e5e8 <rb_bh_alloc+0x50>
    e5d0:	ldr	r0, [pc, #36]	; e5fc <rb_bh_alloc+0x64>
    e5d4:	add	r0, pc, r0
    e5d8:	ldr	r1, [pc, #32]	; e600 <rb_bh_alloc+0x68>
    e5dc:	add	r1, pc, r1
    e5e0:	movw	r2, #186	; 0xba
    e5e4:	bl	e440 <_rb_bh_fail>
    e5e8:	ldr	r0, [sp, #4]
    e5ec:	ldr	r0, [r0, #12]
    e5f0:	bl	e2c0 <rb_malloc>
    e5f4:	mov	sp, fp
    e5f8:	pop	{fp, pc}
    e5fc:	.word	0x0001453c
    e600:	.word	0x000144d0

0000e604 <rb_bh_free>:
    e604:	push	{fp, lr}
    e608:	mov	fp, sp
    e60c:	sub	sp, sp, #16
    e610:	str	r0, [sp, #8]
    e614:	str	r1, [sp, #4]
    e618:	ldr	r0, [sp, #8]
    e61c:	movw	r1, #0
    e620:	cmp	r0, r1
    e624:	movw	r0, #0
    e628:	moveq	r0, #1
    e62c:	mvn	r1, #0
    e630:	eor	r0, r0, r1
    e634:	eor	r0, r0, r1
    e638:	tst	r0, #1
    e63c:	beq	e658 <rb_bh_free+0x54>
    e640:	ldr	r0, [pc, #112]	; e6b8 <rb_bh_free+0xb4>
    e644:	add	r0, pc, r0
    e648:	bl	52e4 <rb_lib_log@plt>
    e64c:	movw	r0, #1
    e650:	str	r0, [fp, #-4]
    e654:	b	e6a8 <rb_bh_free+0xa4>
    e658:	ldr	r0, [sp, #4]
    e65c:	movw	r1, #0
    e660:	cmp	r0, r1
    e664:	movw	r0, #0
    e668:	moveq	r0, #1
    e66c:	mvn	r1, #0
    e670:	eor	r0, r0, r1
    e674:	eor	r0, r0, r1
    e678:	tst	r0, #1
    e67c:	beq	e698 <rb_bh_free+0x94>
    e680:	ldr	r0, [pc, #44]	; e6b4 <rb_bh_free+0xb0>
    e684:	add	r0, pc, r0
    e688:	bl	52e4 <rb_lib_log@plt>
    e68c:	movw	r0, #1
    e690:	str	r0, [fp, #-4]
    e694:	b	e6a8 <rb_bh_free+0xa4>
    e698:	ldr	r0, [sp, #4]
    e69c:	bl	e6bc <rb_free>
    e6a0:	movw	r0, #0
    e6a4:	str	r0, [fp, #-4]
    e6a8:	ldr	r0, [fp, #-4]
    e6ac:	mov	sp, fp
    e6b0:	pop	{fp, pc}
    e6b4:	.word	0x000144ca
    e6b8:	.word	0x000144ea

0000e6bc <rb_free>:
    e6bc:	push	{fp, lr}
    e6c0:	mov	fp, sp
    e6c4:	sub	sp, sp, #8
    e6c8:	str	r0, [sp, #4]
    e6cc:	ldr	r0, [sp, #4]
    e6d0:	movw	r1, #0
    e6d4:	cmp	r0, r1
    e6d8:	movw	r0, #0
    e6dc:	movne	r0, #1
    e6e0:	mvn	r1, #0
    e6e4:	eor	r0, r0, r1
    e6e8:	eor	r0, r0, r1
    e6ec:	tst	r0, #1
    e6f0:	beq	e6fc <rb_free+0x40>
    e6f4:	ldr	r0, [sp, #4]
    e6f8:	bl	50c8 <free@plt>
    e6fc:	mov	sp, fp
    e700:	pop	{fp, pc}

0000e704 <rb_bh_destroy>:
    e704:	push	{fp, lr}
    e708:	mov	fp, sp
    e70c:	sub	sp, sp, #16
    e710:	str	r0, [sp, #8]
    e714:	ldr	r0, [sp, #8]
    e718:	movw	r1, #0
    e71c:	cmp	r0, r1
    e720:	bne	e730 <rb_bh_destroy+0x2c>
    e724:	movw	r0, #1
    e728:	str	r0, [fp, #-4]
    e72c:	b	e76c <rb_bh_destroy+0x68>
    e730:	ldr	r0, [pc, #64]	; e778 <rb_bh_destroy+0x74>
    e734:	add	r0, pc, r0
    e738:	ldr	r1, [sp, #8]
    e73c:	ldr	r0, [r0]
    e740:	str	r0, [sp, #4]
    e744:	mov	r0, r1
    e748:	ldr	r1, [sp, #4]
    e74c:	bl	e77c <rb_dlinkDelete>
    e750:	ldr	r0, [sp, #8]
    e754:	ldr	r0, [r0, #44]	; 0x2c
    e758:	bl	e6bc <rb_free>
    e75c:	ldr	r0, [sp, #8]
    e760:	bl	e6bc <rb_free>
    e764:	movw	r0, #0
    e768:	str	r0, [fp, #-4]
    e76c:	ldr	r0, [fp, #-4]
    e770:	mov	sp, fp
    e774:	pop	{fp, pc}
    e778:	.word	0x00039740

0000e77c <rb_dlinkDelete>:
    e77c:	sub	sp, sp, #8
    e780:	str	r0, [sp, #4]
    e784:	str	r1, [sp]
    e788:	ldr	r0, [sp, #4]
    e78c:	ldr	r0, [r0, #8]
    e790:	movw	r1, #0
    e794:	cmp	r0, r1
    e798:	beq	e7b4 <rb_dlinkDelete+0x38>
    e79c:	ldr	r0, [sp, #4]
    e7a0:	ldr	r0, [r0, #4]
    e7a4:	ldr	r1, [sp, #4]
    e7a8:	ldr	r1, [r1, #8]
    e7ac:	str	r0, [r1, #4]
    e7b0:	b	e7c4 <rb_dlinkDelete+0x48>
    e7b4:	ldr	r0, [sp, #4]
    e7b8:	ldr	r0, [r0, #4]
    e7bc:	ldr	r1, [sp]
    e7c0:	str	r0, [r1, #4]
    e7c4:	ldr	r0, [sp, #4]
    e7c8:	ldr	r0, [r0, #4]
    e7cc:	movw	r1, #0
    e7d0:	cmp	r0, r1
    e7d4:	beq	e7f0 <rb_dlinkDelete+0x74>
    e7d8:	ldr	r0, [sp, #4]
    e7dc:	ldr	r0, [r0, #8]
    e7e0:	ldr	r1, [sp, #4]
    e7e4:	ldr	r1, [r1, #4]
    e7e8:	str	r0, [r1, #8]
    e7ec:	b	e800 <rb_dlinkDelete+0x84>
    e7f0:	ldr	r0, [sp, #4]
    e7f4:	ldr	r0, [r0, #8]
    e7f8:	ldr	r1, [sp]
    e7fc:	str	r0, [r1]
    e800:	ldr	r0, [sp, #4]
    e804:	movw	r1, #0
    e808:	str	r1, [r0, #4]
    e80c:	ldr	r0, [sp, #4]
    e810:	str	r1, [r0, #8]
    e814:	ldr	r0, [sp]
    e818:	ldr	r1, [r0, #8]
    e81c:	mvn	r2, #0
    e820:	add	r1, r1, r2
    e824:	str	r1, [r0, #8]
    e828:	add	sp, sp, #8
    e82c:	bx	lr

0000e830 <rb_bh_usage>:
    e830:	sub	sp, sp, #20
    e834:	ldr	ip, [sp, #20]
    e838:	str	r0, [sp, #16]
    e83c:	str	r1, [sp, #12]
    e840:	str	r2, [sp, #8]
    e844:	str	r3, [sp, #4]
    e848:	ldr	r0, [sp, #12]
    e84c:	movw	r1, #0
    e850:	cmp	r0, r1
    e854:	str	ip, [sp]
    e858:	beq	e868 <rb_bh_usage+0x38>
    e85c:	ldr	r0, [sp, #12]
    e860:	movw	r1, #0
    e864:	str	r1, [r0]
    e868:	ldr	r0, [sp, #8]
    e86c:	movw	r1, #0
    e870:	cmp	r0, r1
    e874:	beq	e884 <rb_bh_usage+0x54>
    e878:	ldr	r0, [sp, #8]
    e87c:	movw	r1, #0
    e880:	str	r1, [r0]
    e884:	ldr	r0, [sp, #4]
    e888:	movw	r1, #0
    e88c:	cmp	r0, r1
    e890:	beq	e8a0 <rb_bh_usage+0x70>
    e894:	ldr	r0, [sp, #4]
    e898:	movw	r1, #0
    e89c:	str	r1, [r0]
    e8a0:	ldr	r0, [sp, #20]
    e8a4:	movw	r1, #0
    e8a8:	cmp	r0, r1
    e8ac:	beq	e8c0 <rb_bh_usage+0x90>
    e8b0:	ldr	r0, [pc, #16]	; e8c8 <rb_bh_usage+0x98>
    e8b4:	add	r0, pc, r0
    e8b8:	ldr	r1, [sp, #20]
    e8bc:	str	r0, [r1]
    e8c0:	add	sp, sp, #20
    e8c4:	bx	lr
    e8c8:	.word	0x000142b9

0000e8cc <rb_bh_usage_all>:
    e8cc:	push	{r4, sl, fp, lr}
    e8d0:	add	fp, sp, #8
    e8d4:	sub	sp, sp, #48	; 0x30
    e8d8:	ldr	r2, [pc, #300]	; ea0c <rb_bh_usage_all+0x140>
    e8dc:	add	r2, pc, r2
    e8e0:	str	r0, [fp, #-12]
    e8e4:	str	r1, [fp, #-16]
    e8e8:	ldr	r0, [r2]
    e8ec:	str	r0, [sp, #12]
    e8f0:	ldr	r0, [fp, #-12]
    e8f4:	movw	r1, #0
    e8f8:	cmp	r0, r1
    e8fc:	bne	e904 <rb_bh_usage_all+0x38>
    e900:	b	ea04 <rb_bh_usage_all+0x138>
    e904:	ldr	r0, [pc, #260]	; ea10 <rb_bh_usage_all+0x144>
    e908:	add	r0, pc, r0
    e90c:	ldr	r0, [r0]
    e910:	ldr	r0, [r0]
    e914:	str	r0, [fp, #-20]	; 0xffffffec
    e918:	ldr	r0, [fp, #-20]	; 0xffffffec
    e91c:	movw	r1, #0
    e920:	cmp	r0, r1
    e924:	beq	ea00 <rb_bh_usage_all+0x134>
    e928:	ldr	r0, [fp, #-20]	; 0xffffffec
    e92c:	ldr	r0, [r0]
    e930:	str	r0, [fp, #-24]	; 0xffffffe8
    e934:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e938:	ldr	r0, [r0, #40]	; 0x28
    e93c:	str	r0, [sp, #24]
    e940:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e944:	ldr	r0, [r0, #28]
    e948:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e94c:	ldr	r1, [r1, #16]
    e950:	mul	r0, r0, r1
    e954:	ldr	r1, [sp, #24]
    e958:	sub	r0, r0, r1
    e95c:	str	r0, [sp, #28]
    e960:	ldr	r0, [sp, #28]
    e964:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e968:	ldr	r1, [r1, #12]
    e96c:	mul	r0, r0, r1
    e970:	str	r0, [sp, #20]
    e974:	ldr	r0, [sp, #24]
    e978:	ldr	r1, [sp, #28]
    e97c:	add	r0, r0, r1
    e980:	ldr	r1, [fp, #-24]	; 0xffffffe8
    e984:	ldr	r1, [r1, #12]
    e988:	mul	r0, r0, r1
    e98c:	str	r0, [sp, #16]
    e990:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e994:	ldr	r0, [r0, #44]	; 0x2c
    e998:	movw	r1, #0
    e99c:	cmp	r0, r1
    e9a0:	beq	e9b0 <rb_bh_usage_all+0xe4>
    e9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e9a8:	ldr	r0, [r0, #44]	; 0x2c
    e9ac:	str	r0, [sp, #12]
    e9b0:	ldr	r0, [fp, #-12]
    e9b4:	ldr	r1, [sp, #28]
    e9b8:	ldr	r2, [sp, #24]
    e9bc:	ldr	r3, [sp, #20]
    e9c0:	ldr	ip, [sp, #16]
    e9c4:	ldr	lr, [sp, #12]
    e9c8:	ldr	r4, [fp, #-16]
    e9cc:	str	r0, [sp, #8]
    e9d0:	mov	r0, r1
    e9d4:	mov	r1, r2
    e9d8:	mov	r2, r3
    e9dc:	mov	r3, ip
    e9e0:	str	lr, [sp]
    e9e4:	str	r4, [sp, #4]
    e9e8:	ldr	ip, [sp, #8]
    e9ec:	blx	ip
    e9f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e9f4:	ldr	r0, [r0, #8]
    e9f8:	str	r0, [fp, #-20]	; 0xffffffec
    e9fc:	b	e918 <rb_bh_usage_all+0x4c>
    ea00:	b	ea04 <rb_bh_usage_all+0x138>
    ea04:	sub	sp, fp, #8
    ea08:	pop	{r4, sl, fp, pc}
    ea0c:	.word	0x00026b90
    ea10:	.word	0x0003956c

0000ea14 <rb_bh_total_usage>:
    ea14:	sub	sp, sp, #32
    ea18:	ldr	r2, [pc, #248]	; eb18 <rb_bh_total_usage+0x104>
    ea1c:	add	r2, pc, r2
    ea20:	str	r0, [sp, #28]
    ea24:	str	r1, [sp, #24]
    ea28:	movw	r0, #0
    ea2c:	str	r0, [sp, #16]
    ea30:	str	r0, [sp, #12]
    ea34:	ldr	r0, [r2]
    ea38:	ldr	r0, [r0]
    ea3c:	str	r0, [sp, #20]
    ea40:	ldr	r0, [sp, #20]
    ea44:	movw	r1, #0
    ea48:	cmp	r0, r1
    ea4c:	beq	ead8 <rb_bh_total_usage+0xc4>
    ea50:	ldr	r0, [sp, #20]
    ea54:	ldr	r0, [r0]
    ea58:	str	r0, [sp]
    ea5c:	ldr	r0, [sp]
    ea60:	ldr	r0, [r0, #40]	; 0x28
    ea64:	str	r0, [sp, #4]
    ea68:	ldr	r0, [sp]
    ea6c:	ldr	r0, [r0, #28]
    ea70:	ldr	r1, [sp]
    ea74:	ldr	r1, [r1, #16]
    ea78:	mul	r0, r0, r1
    ea7c:	ldr	r1, [sp, #4]
    ea80:	sub	r0, r0, r1
    ea84:	str	r0, [sp, #8]
    ea88:	ldr	r0, [sp, #8]
    ea8c:	ldr	r1, [sp]
    ea90:	ldr	r1, [r1, #12]
    ea94:	mul	r0, r0, r1
    ea98:	ldr	r1, [sp, #12]
    ea9c:	add	r0, r1, r0
    eaa0:	str	r0, [sp, #12]
    eaa4:	ldr	r0, [sp, #4]
    eaa8:	ldr	r1, [sp, #8]
    eaac:	add	r0, r0, r1
    eab0:	ldr	r1, [sp]
    eab4:	ldr	r1, [r1, #12]
    eab8:	mul	r0, r0, r1
    eabc:	ldr	r1, [sp, #16]
    eac0:	add	r0, r1, r0
    eac4:	str	r0, [sp, #16]
    eac8:	ldr	r0, [sp, #20]
    eacc:	ldr	r0, [r0, #8]
    ead0:	str	r0, [sp, #20]
    ead4:	b	ea40 <rb_bh_total_usage+0x2c>
    ead8:	ldr	r0, [sp, #28]
    eadc:	movw	r1, #0
    eae0:	cmp	r0, r1
    eae4:	beq	eaf4 <rb_bh_total_usage+0xe0>
    eae8:	ldr	r0, [sp, #16]
    eaec:	ldr	r1, [sp, #28]
    eaf0:	str	r0, [r1]
    eaf4:	ldr	r0, [sp, #24]
    eaf8:	movw	r1, #0
    eafc:	cmp	r0, r1
    eb00:	beq	eb10 <rb_bh_total_usage+0xfc>
    eb04:	ldr	r0, [sp, #12]
    eb08:	ldr	r1, [sp, #24]
    eb0c:	str	r0, [r1]
    eb10:	add	sp, sp, #32
    eb14:	bx	lr
    eb18:	.word	0x00039458

0000eb1c <rb_get_sockerr>:
    eb1c:	push	{fp, lr}
    eb20:	mov	fp, sp
    eb24:	sub	sp, sp, #32
    eb28:	str	r0, [fp, #-8]
    eb2c:	movw	r0, #0
    eb30:	str	r0, [sp, #16]
    eb34:	movw	r0, #4
    eb38:	str	r0, [sp, #12]
    eb3c:	ldr	r0, [fp, #-8]
    eb40:	ldrb	r0, [r0, #17]
    eb44:	and	r0, r0, #4
    eb48:	cmp	r0, #0
    eb4c:	bne	eb60 <rb_get_sockerr+0x44>
    eb50:	bl	56c8 <__errno_location@plt>
    eb54:	ldr	r0, [r0]
    eb58:	str	r0, [fp, #-4]
    eb5c:	b	ebdc <rb_get_sockerr+0xc0>
    eb60:	bl	56c8 <__errno_location@plt>
    eb64:	ldr	r0, [r0]
    eb68:	str	r0, [fp, #-12]
    eb6c:	ldr	r0, [fp, #-8]
    eb70:	movw	lr, #0
    eb74:	cmp	r0, lr
    eb78:	beq	ebc0 <rb_get_sockerr+0xa4>
    eb7c:	ldr	r0, [fp, #-8]
    eb80:	bl	4ea0 <rb_get_fd@plt>
    eb84:	add	lr, sp, #16
    eb88:	movw	r1, #1
    eb8c:	movw	r2, #4
    eb90:	mov	r3, lr
    eb94:	add	lr, sp, #12
    eb98:	str	lr, [sp]
    eb9c:	bl	5650 <getsockopt@plt>
    eba0:	cmp	r0, #0
    eba4:	bne	ebc0 <rb_get_sockerr+0xa4>
    eba8:	ldr	r0, [sp, #16]
    ebac:	cmp	r0, #0
    ebb0:	beq	ebbc <rb_get_sockerr+0xa0>
    ebb4:	ldr	r0, [sp, #16]
    ebb8:	str	r0, [fp, #-12]
    ebbc:	b	ebc0 <rb_get_sockerr+0xa4>
    ebc0:	ldr	r0, [fp, #-12]
    ebc4:	str	r0, [sp, #8]
    ebc8:	bl	56c8 <__errno_location@plt>
    ebcc:	ldr	lr, [sp, #8]
    ebd0:	str	lr, [r0]
    ebd4:	ldr	r0, [fp, #-12]
    ebd8:	str	r0, [fp, #-4]
    ebdc:	ldr	r0, [fp, #-4]
    ebe0:	mov	sp, fp
    ebe4:	pop	{fp, pc}

0000ebe8 <rb_get_fd>:
    ebe8:	sub	sp, sp, #8
    ebec:	str	r0, [sp]
    ebf0:	ldr	r0, [sp]
    ebf4:	movw	r1, #0
    ebf8:	cmp	r0, r1
    ebfc:	bne	ec0c <rb_get_fd+0x24>
    ec00:	mvn	r0, #0
    ec04:	str	r0, [sp, #4]
    ec08:	b	ec18 <rb_get_fd+0x30>
    ec0c:	ldr	r0, [sp]
    ec10:	ldr	r0, [r0, #12]
    ec14:	str	r0, [sp, #4]
    ec18:	ldr	r0, [sp, #4]
    ec1c:	add	sp, sp, #8
    ec20:	bx	lr

0000ec24 <rb_getmaxconnect>:
    ec24:	ldr	r0, [pc, #8]	; ec34 <rb_getmaxconnect+0x10>
    ec28:	ldr	r0, [pc, r0]
    ec2c:	ldr	r0, [r0]
    ec30:	bx	lr
    ec34:	.word	0x00026778

0000ec38 <rb_set_buffers>:
    ec38:	push	{fp, lr}
    ec3c:	mov	fp, sp
    ec40:	sub	sp, sp, #24
    ec44:	str	r0, [fp, #-8]
    ec48:	str	r1, [sp, #12]
    ec4c:	ldr	r0, [fp, #-8]
    ec50:	movw	r1, #0
    ec54:	cmp	r0, r1
    ec58:	bne	ec68 <rb_set_buffers+0x30>
    ec5c:	movw	r0, #0
    ec60:	str	r0, [fp, #-4]
    ec64:	b	ece4 <rb_set_buffers+0xac>
    ec68:	ldr	r0, [fp, #-8]
    ec6c:	ldr	r0, [r0, #12]
    ec70:	add	r1, sp, #12
    ec74:	movw	r2, #1
    ec78:	str	r1, [sp, #8]
    ec7c:	mov	r1, r2
    ec80:	movw	r2, #8
    ec84:	ldr	r3, [sp, #8]
    ec88:	movw	ip, #4
    ec8c:	str	ip, [sp]
    ec90:	bl	5674 <setsockopt@plt>
    ec94:	cmp	r0, #0
    ec98:	bne	ecd0 <rb_set_buffers+0x98>
    ec9c:	ldr	r0, [fp, #-8]
    eca0:	ldr	r0, [r0, #12]
    eca4:	add	r1, sp, #12
    eca8:	movw	r2, #1
    ecac:	str	r1, [sp, #4]
    ecb0:	mov	r1, r2
    ecb4:	movw	r2, #7
    ecb8:	ldr	r3, [sp, #4]
    ecbc:	movw	ip, #4
    ecc0:	str	ip, [sp]
    ecc4:	bl	5674 <setsockopt@plt>
    ecc8:	cmp	r0, #0
    eccc:	beq	ecdc <rb_set_buffers+0xa4>
    ecd0:	movw	r0, #0
    ecd4:	str	r0, [fp, #-4]
    ecd8:	b	ece4 <rb_set_buffers+0xac>
    ecdc:	movw	r0, #1
    ece0:	str	r0, [fp, #-4]
    ece4:	ldr	r0, [fp, #-4]
    ece8:	mov	sp, fp
    ecec:	pop	{fp, pc}

0000ecf0 <rb_set_nb>:
    ecf0:	push	{fp, lr}
    ecf4:	mov	fp, sp
    ecf8:	sub	sp, sp, #24
    ecfc:	str	r0, [fp, #-8]
    ed00:	movw	r0, #0
    ed04:	str	r0, [sp, #12]
    ed08:	ldr	r1, [fp, #-8]
    ed0c:	cmp	r1, r0
    ed10:	bne	ed20 <rb_set_nb+0x30>
    ed14:	movw	r0, #0
    ed18:	str	r0, [fp, #-4]
    ed1c:	b	edb0 <rb_set_nb+0xc0>
    ed20:	ldr	r0, [fp, #-8]
    ed24:	ldr	r0, [r0, #12]
    ed28:	str	r0, [sp, #4]
    ed2c:	ldr	r0, [fp, #-8]
    ed30:	bl	5500 <rb_setup_fd@plt>
    ed34:	str	r0, [sp, #8]
    ed38:	cmp	r0, #0
    ed3c:	beq	ed4c <rb_set_nb+0x5c>
    ed40:	ldr	r0, [sp, #8]
    ed44:	str	r0, [fp, #-4]
    ed48:	b	edb0 <rb_set_nb+0xc0>
    ed4c:	ldr	r0, [sp, #12]
    ed50:	orr	r0, r0, #2048	; 0x800
    ed54:	str	r0, [sp, #12]
    ed58:	ldr	r0, [sp, #4]
    ed5c:	movw	r1, #3
    ed60:	movw	r2, #0
    ed64:	bl	55d8 <fcntl@plt>
    ed68:	str	r0, [sp, #8]
    ed6c:	ldr	r0, [sp, #8]
    ed70:	mvn	r1, #0
    ed74:	cmp	r1, r0
    ed78:	beq	ed9c <rb_set_nb+0xac>
    ed7c:	ldr	r0, [sp, #4]
    ed80:	ldr	r1, [sp, #8]
    ed84:	ldr	r2, [sp, #12]
    ed88:	orr	r2, r1, r2
    ed8c:	movw	r1, #4
    ed90:	bl	55d8 <fcntl@plt>
    ed94:	cmn	r0, #1
    ed98:	bne	eda8 <rb_set_nb+0xb8>
    ed9c:	movw	r0, #0
    eda0:	str	r0, [fp, #-4]
    eda4:	b	edb0 <rb_set_nb+0xc0>
    eda8:	movw	r0, #1
    edac:	str	r0, [fp, #-4]
    edb0:	ldr	r0, [fp, #-4]
    edb4:	mov	sp, fp
    edb8:	pop	{fp, pc}

0000edbc <rb_setup_fd>:
    edbc:	push	{fp, lr}
    edc0:	mov	fp, sp
    edc4:	sub	sp, sp, #8
    edc8:	ldr	r1, [pc, #36]	; edf4 <rb_setup_fd+0x38>
    edcc:	add	r1, pc, r1
    edd0:	str	r0, [sp, #4]
    edd4:	ldr	r0, [r1]
    edd8:	ldr	r1, [sp, #4]
    eddc:	str	r0, [sp]
    ede0:	mov	r0, r1
    ede4:	ldr	r1, [sp]
    ede8:	blx	r1
    edec:	mov	sp, fp
    edf0:	pop	{fp, pc}
    edf4:	.word	0x00039104

0000edf8 <rb_settimeout>:
    edf8:	push	{fp, lr}
    edfc:	mov	fp, sp
    ee00:	sub	sp, sp, #24
    ee04:	str	r0, [fp, #-4]
    ee08:	str	r1, [fp, #-8]
    ee0c:	str	r2, [sp, #12]
    ee10:	str	r3, [sp, #8]
    ee14:	ldr	r0, [fp, #-4]
    ee18:	movw	r1, #0
    ee1c:	cmp	r0, r1
    ee20:	bne	ee28 <rb_settimeout+0x30>
    ee24:	b	ef70 <rb_settimeout+0x178>
    ee28:	ldr	r0, [fp, #-4]
    ee2c:	ldr	r0, [r0, #44]	; 0x2c
    ee30:	str	r0, [sp, #4]
    ee34:	ldr	r0, [sp, #12]
    ee38:	movw	r1, #0
    ee3c:	cmp	r0, r1
    ee40:	bne	eeb8 <rb_settimeout+0xc0>
    ee44:	ldr	r0, [sp, #4]
    ee48:	movw	r1, #0
    ee4c:	cmp	r0, r1
    ee50:	bne	ee58 <rb_settimeout+0x60>
    ee54:	b	ef70 <rb_settimeout+0x178>
    ee58:	ldr	r0, [pc, #304]	; ef90 <rb_settimeout+0x198>
    ee5c:	add	r1, pc, r0
    ee60:	ldr	r0, [sp, #4]
    ee64:	add	r0, r0, #4
    ee68:	bl	ef9c <rb_dlinkDelete>
    ee6c:	ldr	r0, [sp, #4]
    ee70:	bl	f050 <rb_free>
    ee74:	ldr	r0, [pc, #272]	; ef8c <rb_settimeout+0x194>
    ee78:	add	r0, pc, r0
    ee7c:	ldr	r1, [fp, #-4]
    ee80:	movw	lr, #0
    ee84:	str	lr, [r1, #44]	; 0x2c
    ee88:	ldr	r0, [r0, #8]
    ee8c:	cmp	r0, #0
    ee90:	bne	eeb4 <rb_settimeout+0xbc>
    ee94:	ldr	r0, [pc, #252]	; ef98 <rb_settimeout+0x1a0>
    ee98:	add	r0, pc, r0
    ee9c:	ldr	r0, [r0]
    eea0:	bl	4e58 <rb_event_delete@plt>
    eea4:	ldr	r0, [pc, #232]	; ef94 <rb_settimeout+0x19c>
    eea8:	add	r0, pc, r0
    eeac:	movw	lr, #0
    eeb0:	str	lr, [r0]
    eeb4:	b	ef70 <rb_settimeout+0x178>
    eeb8:	ldr	r0, [fp, #-4]
    eebc:	ldr	r0, [r0, #44]	; 0x2c
    eec0:	movw	r1, #0
    eec4:	cmp	r0, r1
    eec8:	bne	eee0 <rb_settimeout+0xe8>
    eecc:	movw	r0, #28
    eed0:	bl	f098 <rb_malloc>
    eed4:	ldr	lr, [fp, #-4]
    eed8:	str	r0, [lr, #44]	; 0x2c
    eedc:	str	r0, [sp, #4]
    eee0:	ldr	r0, [fp, #-4]
    eee4:	ldr	r1, [sp, #4]
    eee8:	str	r0, [r1]
    eeec:	bl	51c4 <rb_current_time@plt>
    eef0:	ldr	r1, [pc, #132]	; ef7c <rb_settimeout+0x184>
    eef4:	add	r2, pc, r1
    eef8:	ldr	r1, [fp, #-8]
    eefc:	add	r0, r0, r1
    ef00:	ldr	r1, [sp, #4]
    ef04:	str	r0, [r1, #16]
    ef08:	ldr	r0, [sp, #12]
    ef0c:	ldr	r1, [sp, #4]
    ef10:	str	r0, [r1, #20]
    ef14:	ldr	r0, [sp, #8]
    ef18:	ldr	r1, [sp, #4]
    ef1c:	str	r0, [r1, #24]
    ef20:	ldr	r0, [sp, #4]
    ef24:	ldr	r1, [sp, #4]
    ef28:	add	r1, r1, #4
    ef2c:	bl	f0f0 <rb_dlinkAdd>
    ef30:	ldr	r0, [pc, #64]	; ef78 <rb_settimeout+0x180>
    ef34:	add	r0, pc, r0
    ef38:	ldr	r0, [r0]
    ef3c:	movw	r1, #0
    ef40:	cmp	r0, r1
    ef44:	bne	ef70 <rb_settimeout+0x178>
    ef48:	ldr	r0, [pc, #52]	; ef84 <rb_settimeout+0x18c>
    ef4c:	add	r0, pc, r0
    ef50:	ldr	r1, [pc, #48]	; ef88 <rb_settimeout+0x190>
    ef54:	ldr	r1, [pc, r1]
    ef58:	movw	r2, #0
    ef5c:	movw	r3, #5
    ef60:	bl	54d0 <rb_event_add@plt>
    ef64:	ldr	r1, [pc, #20]	; ef80 <rb_settimeout+0x188>
    ef68:	add	r1, pc, r1
    ef6c:	str	r0, [r1]
    ef70:	mov	sp, fp
    ef74:	pop	{fp, pc}
    ef78:	.word	0x00038f58
    ef7c:	.word	0x00038f8c
    ef80:	.word	0x00038f24
    ef84:	.word	0x00013c63
    ef88:	.word	0x000263fc
    ef8c:	.word	0x00039008
    ef90:	.word	0x00039024
    ef94:	.word	0x00038fe4
    ef98:	.word	0x00038ff4

0000ef9c <rb_dlinkDelete>:
    ef9c:	sub	sp, sp, #8
    efa0:	str	r0, [sp, #4]
    efa4:	str	r1, [sp]
    efa8:	ldr	r0, [sp, #4]
    efac:	ldr	r0, [r0, #8]
    efb0:	movw	r1, #0
    efb4:	cmp	r0, r1
    efb8:	beq	efd4 <rb_dlinkDelete+0x38>
    efbc:	ldr	r0, [sp, #4]
    efc0:	ldr	r0, [r0, #4]
    efc4:	ldr	r1, [sp, #4]
    efc8:	ldr	r1, [r1, #8]
    efcc:	str	r0, [r1, #4]
    efd0:	b	efe4 <rb_dlinkDelete+0x48>
    efd4:	ldr	r0, [sp, #4]
    efd8:	ldr	r0, [r0, #4]
    efdc:	ldr	r1, [sp]
    efe0:	str	r0, [r1, #4]
    efe4:	ldr	r0, [sp, #4]
    efe8:	ldr	r0, [r0, #4]
    efec:	movw	r1, #0
    eff0:	cmp	r0, r1
    eff4:	beq	f010 <rb_dlinkDelete+0x74>
    eff8:	ldr	r0, [sp, #4]
    effc:	ldr	r0, [r0, #8]
    f000:	ldr	r1, [sp, #4]
    f004:	ldr	r1, [r1, #4]
    f008:	str	r0, [r1, #8]
    f00c:	b	f020 <rb_dlinkDelete+0x84>
    f010:	ldr	r0, [sp, #4]
    f014:	ldr	r0, [r0, #8]
    f018:	ldr	r1, [sp]
    f01c:	str	r0, [r1]
    f020:	ldr	r0, [sp, #4]
    f024:	movw	r1, #0
    f028:	str	r1, [r0, #4]
    f02c:	ldr	r0, [sp, #4]
    f030:	str	r1, [r0, #8]
    f034:	ldr	r0, [sp]
    f038:	ldr	r1, [r0, #8]
    f03c:	mvn	r2, #0
    f040:	add	r1, r1, r2
    f044:	str	r1, [r0, #8]
    f048:	add	sp, sp, #8
    f04c:	bx	lr

0000f050 <rb_free>:
    f050:	push	{fp, lr}
    f054:	mov	fp, sp
    f058:	sub	sp, sp, #8
    f05c:	str	r0, [sp, #4]
    f060:	ldr	r0, [sp, #4]
    f064:	movw	r1, #0
    f068:	cmp	r0, r1
    f06c:	movw	r0, #0
    f070:	movne	r0, #1
    f074:	mvn	r1, #0
    f078:	eor	r0, r0, r1
    f07c:	eor	r0, r0, r1
    f080:	tst	r0, #1
    f084:	beq	f090 <rb_free+0x40>
    f088:	ldr	r0, [sp, #4]
    f08c:	bl	50c8 <free@plt>
    f090:	mov	sp, fp
    f094:	pop	{fp, pc}

0000f098 <rb_malloc>:
    f098:	push	{fp, lr}
    f09c:	mov	fp, sp
    f0a0:	sub	sp, sp, #8
    f0a4:	str	r0, [sp, #4]
    f0a8:	ldr	r1, [sp, #4]
    f0ac:	movw	r0, #1
    f0b0:	bl	4fb4 <calloc@plt>
    f0b4:	str	r0, [sp]
    f0b8:	ldr	r0, [sp]
    f0bc:	movw	r1, #0
    f0c0:	cmp	r0, r1
    f0c4:	movw	r0, #0
    f0c8:	moveq	r0, #1
    f0cc:	mvn	r1, #0
    f0d0:	eor	r0, r0, r1
    f0d4:	eor	r0, r0, r1
    f0d8:	tst	r0, #1
    f0dc:	beq	f0e4 <rb_malloc+0x4c>
    f0e0:	bl	5350 <rb_outofmemory@plt>
    f0e4:	ldr	r0, [sp]
    f0e8:	mov	sp, fp
    f0ec:	pop	{fp, pc}

0000f0f0 <rb_dlinkAdd>:
    f0f0:	sub	sp, sp, #12
    f0f4:	str	r0, [sp, #8]
    f0f8:	str	r1, [sp, #4]
    f0fc:	str	r2, [sp]
    f100:	ldr	r0, [sp, #8]
    f104:	ldr	r1, [sp, #4]
    f108:	str	r0, [r1]
    f10c:	ldr	r0, [sp, #4]
    f110:	movw	r1, #0
    f114:	str	r1, [r0, #4]
    f118:	ldr	r0, [sp]
    f11c:	ldr	r0, [r0]
    f120:	ldr	r2, [sp, #4]
    f124:	str	r0, [r2, #8]
    f128:	ldr	r0, [sp]
    f12c:	ldr	r0, [r0]
    f130:	cmp	r0, r1
    f134:	beq	f14c <rb_dlinkAdd+0x5c>
    f138:	ldr	r0, [sp, #4]
    f13c:	ldr	r1, [sp]
    f140:	ldr	r1, [r1]
    f144:	str	r0, [r1, #4]
    f148:	b	f170 <rb_dlinkAdd+0x80>
    f14c:	ldr	r0, [sp]
    f150:	ldr	r0, [r0, #4]
    f154:	movw	r1, #0
    f158:	cmp	r0, r1
    f15c:	bne	f16c <rb_dlinkAdd+0x7c>
    f160:	ldr	r0, [sp, #4]
    f164:	ldr	r1, [sp]
    f168:	str	r0, [r1, #4]
    f16c:	b	f170 <rb_dlinkAdd+0x80>
    f170:	ldr	r0, [sp, #4]
    f174:	ldr	r1, [sp]
    f178:	str	r0, [r1]
    f17c:	ldr	r0, [sp]
    f180:	ldr	r1, [r0, #8]
    f184:	add	r1, r1, #1
    f188:	str	r1, [r0, #8]
    f18c:	add	sp, sp, #12
    f190:	bx	lr

0000f194 <rb_checktimeouts>:
    f194:	push	{fp, lr}
    f198:	mov	fp, sp
    f19c:	sub	sp, sp, #48	; 0x30
    f1a0:	ldr	r1, [pc, #344]	; f300 <rb_checktimeouts+0x16c>
    f1a4:	add	r1, pc, r1
    f1a8:	str	r0, [fp, #-4]
    f1ac:	ldr	r0, [r1]
    f1b0:	str	r0, [fp, #-8]
    f1b4:	ldr	r0, [fp, #-8]
    f1b8:	movw	r1, #0
    f1bc:	cmp	r0, r1
    f1c0:	beq	f1d4 <rb_checktimeouts+0x40>
    f1c4:	ldr	r0, [fp, #-8]
    f1c8:	ldr	r0, [r0, #8]
    f1cc:	str	r0, [sp, #16]
    f1d0:	b	f1e0 <rb_checktimeouts+0x4c>
    f1d4:	movw	r0, #0
    f1d8:	str	r0, [sp, #16]
    f1dc:	b	f1e0 <rb_checktimeouts+0x4c>
    f1e0:	ldr	r0, [sp, #16]
    f1e4:	str	r0, [fp, #-12]
    f1e8:	ldr	r0, [fp, #-8]
    f1ec:	movw	r1, #0
    f1f0:	cmp	r0, r1
    f1f4:	beq	f2f8 <rb_checktimeouts+0x164>
    f1f8:	ldr	r0, [fp, #-8]
    f1fc:	ldr	r0, [r0]
    f200:	str	r0, [fp, #-16]
    f204:	ldr	r0, [fp, #-16]
    f208:	ldr	r0, [r0]
    f20c:	str	r0, [fp, #-20]	; 0xffffffec
    f210:	ldr	r0, [fp, #-20]	; 0xffffffec
    f214:	movw	r1, #0
    f218:	cmp	r0, r1
    f21c:	beq	f234 <rb_checktimeouts+0xa0>
    f220:	ldr	r0, [fp, #-20]	; 0xffffffec
    f224:	ldrb	r0, [r0, #16]
    f228:	and	r0, r0, #1
    f22c:	cmp	r0, #0
    f230:	bne	f238 <rb_checktimeouts+0xa4>
    f234:	b	f2b8 <rb_checktimeouts+0x124>
    f238:	ldr	r0, [fp, #-16]
    f23c:	ldr	r0, [r0, #16]
    f240:	str	r0, [sp, #12]
    f244:	bl	51c4 <rb_current_time@plt>
    f248:	ldr	lr, [sp, #12]
    f24c:	cmp	lr, r0
    f250:	bge	f2b4 <rb_checktimeouts+0x120>
    f254:	ldr	r0, [pc, #168]	; f304 <rb_checktimeouts+0x170>
    f258:	add	r1, pc, r0
    f25c:	ldr	r0, [fp, #-16]
    f260:	ldr	r0, [r0, #20]
    f264:	str	r0, [sp, #24]
    f268:	ldr	r0, [fp, #-16]
    f26c:	ldr	r0, [r0, #24]
    f270:	str	r0, [sp, #20]
    f274:	ldr	r0, [fp, #-16]
    f278:	add	r0, r0, #4
    f27c:	bl	ef9c <rb_dlinkDelete>
    f280:	ldr	r0, [fp, #-20]	; 0xffffffec
    f284:	movw	r1, #0
    f288:	str	r1, [r0, #44]	; 0x2c
    f28c:	ldr	r0, [fp, #-16]
    f290:	bl	f050 <rb_free>
    f294:	ldr	r0, [sp, #24]
    f298:	ldr	r1, [fp, #-20]	; 0xffffffec
    f29c:	ldr	lr, [sp, #20]
    f2a0:	str	r0, [sp, #8]
    f2a4:	mov	r0, r1
    f2a8:	mov	r1, lr
    f2ac:	ldr	lr, [sp, #8]
    f2b0:	blx	lr
    f2b4:	b	f2b8 <rb_checktimeouts+0x124>
    f2b8:	ldr	r0, [fp, #-12]
    f2bc:	str	r0, [fp, #-8]
    f2c0:	ldr	r0, [fp, #-8]
    f2c4:	movw	r1, #0
    f2c8:	cmp	r0, r1
    f2cc:	beq	f2e0 <rb_checktimeouts+0x14c>
    f2d0:	ldr	r0, [fp, #-8]
    f2d4:	ldr	r0, [r0, #8]
    f2d8:	str	r0, [sp, #4]
    f2dc:	b	f2ec <rb_checktimeouts+0x158>
    f2e0:	movw	r0, #0
    f2e4:	str	r0, [sp, #4]
    f2e8:	b	f2ec <rb_checktimeouts+0x158>
    f2ec:	ldr	r0, [sp, #4]
    f2f0:	str	r0, [fp, #-12]
    f2f4:	b	f1e8 <rb_checktimeouts+0x54>
    f2f8:	mov	sp, fp
    f2fc:	pop	{fp, pc}
    f300:	.word	0x00038cdc
    f304:	.word	0x00038c28

0000f308 <rb_bind>:
    f308:	push	{fp, lr}
    f30c:	mov	fp, sp
    f310:	sub	sp, sp, #24
    f314:	str	r0, [fp, #-8]
    f318:	str	r1, [sp, #12]
    f31c:	ldr	r0, [fp, #-8]
    f320:	bl	f3b4 <rb_setsockopt_reuseaddr>
    f324:	str	r0, [sp, #8]
    f328:	ldr	r0, [sp, #8]
    f32c:	cmp	r0, #0
    f330:	beq	f340 <rb_bind+0x38>
    f334:	ldr	r0, [sp, #8]
    f338:	str	r0, [fp, #-4]
    f33c:	b	f3a8 <rb_bind+0xa0>
    f340:	ldr	r0, [fp, #-8]
    f344:	ldr	r0, [r0, #12]
    f348:	ldr	r1, [sp, #12]
    f34c:	str	r1, [sp, #4]
    f350:	ldr	r1, [sp, #12]
    f354:	ldrh	r1, [r1]
    f358:	cmp	r1, #2
    f35c:	movw	r1, #0
    f360:	moveq	r1, #1
    f364:	tst	r1, #1
    f368:	movw	r1, #16
    f36c:	moveq	r1, #28
    f370:	ldr	r2, [sp, #4]
    f374:	str	r1, [sp]
    f378:	mov	r1, r2
    f37c:	ldr	r2, [sp]
    f380:	bl	52d8 <bind@plt>
    f384:	str	r0, [sp, #8]
    f388:	ldr	r0, [sp, #8]
    f38c:	cmp	r0, #0
    f390:	beq	f3a0 <rb_bind+0x98>
    f394:	ldr	r0, [sp, #8]
    f398:	str	r0, [fp, #-4]
    f39c:	b	f3a8 <rb_bind+0xa0>
    f3a0:	movw	r0, #0
    f3a4:	str	r0, [fp, #-4]
    f3a8:	ldr	r0, [fp, #-4]
    f3ac:	mov	sp, fp
    f3b0:	pop	{fp, pc}

0000f3b4 <rb_setsockopt_reuseaddr>:
    f3b4:	push	{fp, lr}
    f3b8:	mov	fp, sp
    f3bc:	sub	sp, sp, #40	; 0x28
    f3c0:	str	r0, [fp, #-8]
    f3c4:	movw	r0, #1
    f3c8:	str	r0, [fp, #-12]
    f3cc:	ldr	r1, [fp, #-8]
    f3d0:	ldr	r1, [r1, #12]
    f3d4:	sub	r2, fp, #12
    f3d8:	str	r0, [sp, #20]
    f3dc:	mov	r0, r1
    f3e0:	ldr	r1, [sp, #20]
    f3e4:	movw	r3, #2
    f3e8:	str	r2, [sp, #16]
    f3ec:	mov	r2, r3
    f3f0:	ldr	r3, [sp, #16]
    f3f4:	movw	ip, #4
    f3f8:	str	ip, [sp]
    f3fc:	bl	5674 <setsockopt@plt>
    f400:	str	r0, [fp, #-16]
    f404:	ldr	r0, [fp, #-16]
    f408:	cmp	r0, #0
    f40c:	beq	f450 <rb_setsockopt_reuseaddr+0x9c>
    f410:	ldr	r0, [fp, #-8]
    f414:	ldr	r1, [r0, #12]
    f418:	ldr	r0, [fp, #-8]
    f41c:	str	r1, [sp, #12]
    f420:	bl	5458 <rb_get_sockerr@plt>
    f424:	bl	4d5c <strerror@plt>
    f428:	ldr	r1, [pc, #52]	; f464 <rb_setsockopt_reuseaddr+0xb0>
    f42c:	add	r1, pc, r1
    f430:	str	r0, [sp, #8]
    f434:	mov	r0, r1
    f438:	ldr	r1, [sp, #12]
    f43c:	ldr	r2, [sp, #8]
    f440:	bl	52e4 <rb_lib_log@plt>
    f444:	ldr	r0, [fp, #-16]
    f448:	str	r0, [fp, #-4]
    f44c:	b	f458 <rb_setsockopt_reuseaddr+0xa4>
    f450:	movw	r0, #0
    f454:	str	r0, [fp, #-4]
    f458:	ldr	r0, [fp, #-4]
    f45c:	mov	sp, fp
    f460:	pop	{fp, pc}
    f464:	.word	0x0001394a

0000f468 <rb_sctp_bindx>:
    f468:	sub	sp, sp, #12
    f46c:	str	r0, [sp, #8]
    f470:	str	r1, [sp, #4]
    f474:	str	r2, [sp]
    f478:	mvn	r0, #0
    f47c:	add	sp, sp, #12
    f480:	bx	lr

0000f484 <rb_inet_get_proto>:
    f484:	sub	sp, sp, #4
    f488:	str	r0, [sp]
    f48c:	movw	r0, #6
    f490:	add	sp, sp, #4
    f494:	bx	lr

0000f498 <rb_accept_tcp>:
    f498:	push	{fp, lr}
    f49c:	mov	fp, sp
    f4a0:	sub	sp, sp, #16
    f4a4:	str	r0, [fp, #-4]
    f4a8:	str	r1, [sp, #8]
    f4ac:	str	r2, [sp, #4]
    f4b0:	str	r3, [sp]
    f4b4:	ldr	r0, [fp, #-4]
    f4b8:	movw	r1, #0
    f4bc:	cmp	r0, r1
    f4c0:	bne	f4c8 <rb_accept_tcp+0x30>
    f4c4:	b	f514 <rb_accept_tcp+0x7c>
    f4c8:	movw	r0, #144	; 0x90
    f4cc:	bl	f098 <rb_malloc>
    f4d0:	ldr	lr, [fp, #-4]
    f4d4:	str	r0, [lr, #52]	; 0x34
    f4d8:	ldr	r0, [sp, #4]
    f4dc:	ldr	lr, [fp, #-4]
    f4e0:	ldr	lr, [lr, #52]	; 0x34
    f4e4:	str	r0, [lr, #132]	; 0x84
    f4e8:	ldr	r0, [sp]
    f4ec:	ldr	lr, [fp, #-4]
    f4f0:	ldr	lr, [lr, #52]	; 0x34
    f4f4:	str	r0, [lr, #140]	; 0x8c
    f4f8:	ldr	r0, [sp, #8]
    f4fc:	ldr	lr, [fp, #-4]
    f500:	ldr	lr, [lr, #52]	; 0x34
    f504:	str	r0, [lr, #136]	; 0x88
    f508:	ldr	r0, [fp, #-4]
    f50c:	movw	r1, #0
    f510:	bl	f51c <rb_accept_tryaccept>
    f514:	mov	sp, fp
    f518:	pop	{fp, pc}

0000f51c <rb_accept_tryaccept>:
    f51c:	push	{fp, lr}
    f520:	mov	fp, sp
    f524:	sub	sp, sp, #176	; 0xb0
    f528:	str	r0, [fp, #-4]
    f52c:	str	r1, [fp, #-8]
    f530:	add	r0, sp, #40	; 0x28
    f534:	mov	r1, r0
    f538:	str	r0, [sp, #20]
    f53c:	mov	r0, r1
    f540:	movw	r1, #0
    f544:	and	r1, r1, #255	; 0xff
    f548:	movw	r2, #128	; 0x80
    f54c:	str	r2, [sp, #16]
    f550:	bl	4ff0 <memset@plt>
    f554:	ldr	r0, [sp, #16]
    f558:	str	r0, [sp, #32]
    f55c:	ldr	r1, [fp, #-4]
    f560:	ldr	r0, [r1, #12]
    f564:	ldr	r1, [sp, #20]
    f568:	str	r1, [sp, #24]
    f56c:	ldr	r1, [sp, #24]
    f570:	add	r2, sp, #32
    f574:	bl	5140 <accept@plt>
    f578:	str	r0, [sp, #28]
    f57c:	ldr	r0, [sp, #28]
    f580:	cmp	r0, #0
    f584:	bge	f5a8 <rb_accept_tryaccept+0x8c>
    f588:	ldr	r0, [pc, #416]	; f730 <rb_accept_tryaccept+0x214>
    f58c:	add	r2, pc, r0
    f590:	ldr	r0, [fp, #-4]
    f594:	movw	r1, #1
    f598:	movw	r3, #0
    f59c:	bl	4e64 <rb_setselect@plt>
    f5a0:	mov	sp, fp
    f5a4:	pop	{fp, pc}
    f5a8:	ldr	r0, [pc, #372]	; f724 <rb_accept_tryaccept+0x208>
    f5ac:	add	r2, pc, r0
    f5b0:	ldr	r0, [sp, #28]
    f5b4:	ldr	r1, [fp, #-4]
    f5b8:	ldrb	r1, [r1, #17]
    f5bc:	and	r1, r1, #128	; 0x80
    f5c0:	orr	r1, r1, #4
    f5c4:	and	r1, r1, #255	; 0xff
    f5c8:	bl	544c <rb_open@plt>
    f5cc:	str	r0, [sp, #36]	; 0x24
    f5d0:	ldr	r0, [sp, #36]	; 0x24
    f5d4:	movw	r1, #0
    f5d8:	cmp	r0, r1
    f5dc:	bne	f600 <rb_accept_tryaccept+0xe4>
    f5e0:	ldr	r0, [pc, #324]	; f72c <rb_accept_tryaccept+0x210>
    f5e4:	add	r0, pc, r0
    f5e8:	ldr	r1, [sp, #28]
    f5ec:	bl	52e4 <rb_lib_log@plt>
    f5f0:	ldr	r0, [sp, #28]
    f5f4:	bl	5308 <close@plt>
    f5f8:	str	r0, [sp, #12]
    f5fc:	b	f530 <rb_accept_tryaccept+0x14>
    f600:	ldr	r0, [sp, #36]	; 0x24
    f604:	bl	4fe4 <rb_set_nb@plt>
    f608:	cmp	r0, #0
    f60c:	movw	r0, #0
    f610:	movne	r0, #1
    f614:	mvn	lr, #0
    f618:	eor	r0, r0, lr
    f61c:	eor	r0, r0, lr
    f620:	eor	r0, r0, lr
    f624:	tst	r0, #1
    f628:	beq	f648 <rb_accept_tryaccept+0x12c>
    f62c:	ldr	r0, [pc, #244]	; f728 <rb_accept_tryaccept+0x20c>
    f630:	add	r0, pc, r0
    f634:	ldr	r1, [sp, #36]	; 0x24
    f638:	ldr	r1, [r1, #12]
    f63c:	bl	52e4 <rb_lib_log@plt>
    f640:	ldr	r0, [sp, #36]	; 0x24
    f644:	bl	5230 <rb_close@plt>
    f648:	add	r0, sp, #40	; 0x28
    f64c:	bl	13330 <mangle_mapped_sockaddr>
    f650:	ldr	r0, [fp, #-4]
    f654:	ldr	r0, [r0, #52]	; 0x34
    f658:	ldr	r0, [r0, #136]	; 0x88
    f65c:	movw	lr, #0
    f660:	cmp	r0, lr
    f664:	beq	f6b8 <rb_accept_tryaccept+0x19c>
    f668:	ldr	r0, [fp, #-4]
    f66c:	ldr	r0, [r0, #52]	; 0x34
    f670:	ldr	r0, [r0, #136]	; 0x88
    f674:	ldr	r1, [sp, #36]	; 0x24
    f678:	add	r2, sp, #40	; 0x28
    f67c:	ldr	r3, [sp, #32]
    f680:	ldr	ip, [fp, #-4]
    f684:	ldr	ip, [ip, #52]	; 0x34
    f688:	ldr	ip, [ip, #140]	; 0x8c
    f68c:	str	r0, [sp, #8]
    f690:	mov	r0, r1
    f694:	mov	r1, r2
    f698:	mov	r2, r3
    f69c:	mov	r3, ip
    f6a0:	ldr	ip, [sp, #8]
    f6a4:	blx	ip
    f6a8:	cmp	r0, #0
    f6ac:	bne	f6b4 <rb_accept_tryaccept+0x198>
    f6b0:	b	f530 <rb_accept_tryaccept+0x14>
    f6b4:	b	f6b8 <rb_accept_tryaccept+0x19c>
    f6b8:	ldr	r0, [fp, #-4]
    f6bc:	ldrb	r0, [r0, #17]
    f6c0:	and	r0, r0, #32
    f6c4:	cmp	r0, #0
    f6c8:	beq	f6e4 <rb_accept_tryaccept+0x1c8>
    f6cc:	ldr	r0, [fp, #-4]
    f6d0:	ldr	r1, [sp, #36]	; 0x24
    f6d4:	add	r2, sp, #40	; 0x28
    f6d8:	ldr	r3, [sp, #32]
    f6dc:	bl	14b7c <rb_ssl_accept_setup>
    f6e0:	b	f720 <rb_accept_tryaccept+0x204>
    f6e4:	ldr	r0, [fp, #-4]
    f6e8:	ldr	r0, [r0, #52]	; 0x34
    f6ec:	ldr	r0, [r0, #132]	; 0x84
    f6f0:	ldr	r1, [sp, #36]	; 0x24
    f6f4:	add	r2, sp, #40	; 0x28
    f6f8:	ldr	r3, [sp, #32]
    f6fc:	ldr	ip, [fp, #-4]
    f700:	ldr	ip, [ip, #52]	; 0x34
    f704:	ldr	ip, [ip, #140]	; 0x8c
    f708:	str	r0, [sp, #4]
    f70c:	mov	r0, r1
    f710:	movw	r1, #0
    f714:	str	ip, [sp]
    f718:	ldr	ip, [sp, #4]
    f71c:	blx	ip
    f720:	b	f530 <rb_accept_tryaccept+0x14>
    f724:	.word	0x00013809
    f728:	.word	0x000137df
    f72c:	.word	0x000137e5
    f730:	.word	0xffffff88

0000f734 <rb_connect_tcp>:
    f734:	push	{fp, lr}
    f738:	mov	fp, sp
    f73c:	sub	sp, sp, #48	; 0x30
    f740:	ldr	ip, [fp, #12]
    f744:	ldr	lr, [fp, #8]
    f748:	str	r0, [fp, #-4]
    f74c:	str	r1, [fp, #-8]
    f750:	str	r2, [fp, #-12]
    f754:	str	r3, [fp, #-16]
    f758:	ldr	r0, [fp, #-4]
    f75c:	movw	r1, #0
    f760:	cmp	r0, r1
    f764:	str	lr, [sp, #16]
    f768:	str	ip, [sp, #12]
    f76c:	bne	f774 <rb_connect_tcp+0x40>
    f770:	b	f914 <rb_connect_tcp+0x1e0>
    f774:	movw	r0, #268	; 0x10c
    f778:	bl	f098 <rb_malloc>
    f77c:	ldr	lr, [fp, #-4]
    f780:	str	r0, [lr, #48]	; 0x30
    f784:	ldr	r0, [fp, #-16]
    f788:	ldr	lr, [fp, #-4]
    f78c:	ldr	lr, [lr, #48]	; 0x30
    f790:	str	r0, [lr, #260]	; 0x104
    f794:	ldr	r0, [fp, #8]
    f798:	ldr	lr, [fp, #-4]
    f79c:	ldr	lr, [lr, #48]	; 0x30
    f7a0:	str	r0, [lr, #264]	; 0x108
    f7a4:	ldr	r0, [fp, #-4]
    f7a8:	ldr	r0, [r0, #48]	; 0x30
    f7ac:	add	r0, r0, #128	; 0x80
    f7b0:	ldr	lr, [fp, #-8]
    f7b4:	mov	r1, lr
    f7b8:	movw	r2, #128	; 0x80
    f7bc:	bl	51dc <memcpy@plt>
    f7c0:	ldr	r0, [fp, #-12]
    f7c4:	movw	r1, #0
    f7c8:	cmp	r0, r1
    f7cc:	beq	f82c <rb_connect_tcp+0xf8>
    f7d0:	ldr	r0, [fp, #-4]
    f7d4:	ldr	r0, [r0, #12]
    f7d8:	ldr	r1, [fp, #-12]
    f7dc:	str	r1, [sp, #24]
    f7e0:	ldr	r1, [fp, #-12]
    f7e4:	ldrh	r1, [r1]
    f7e8:	cmp	r1, #2
    f7ec:	movw	r1, #0
    f7f0:	moveq	r1, #1
    f7f4:	tst	r1, #1
    f7f8:	movw	r1, #16
    f7fc:	moveq	r1, #28
    f800:	ldr	r2, [sp, #24]
    f804:	str	r1, [sp, #8]
    f808:	mov	r1, r2
    f80c:	ldr	r2, [sp, #8]
    f810:	bl	52d8 <bind@plt>
    f814:	cmp	r0, #0
    f818:	bge	f82c <rb_connect_tcp+0xf8>
    f81c:	ldr	r0, [fp, #-4]
    f820:	movw	r1, #1
    f824:	bl	f924 <rb_connect_callback>
    f828:	b	f914 <rb_connect_tcp+0x1e0>
    f82c:	ldr	r0, [pc, #232]	; f91c <rb_connect_tcp+0x1e8>
    f830:	add	r2, pc, r0
    f834:	ldr	r0, [fp, #-4]
    f838:	ldr	r1, [fp, #12]
    f83c:	movw	r3, #0
    f840:	bl	4da4 <rb_settimeout@plt>
    f844:	ldr	r0, [fp, #-4]
    f848:	ldr	r0, [r0, #12]
    f84c:	ldr	r1, [fp, #-4]
    f850:	ldr	r1, [r1, #48]	; 0x30
    f854:	add	r1, r1, #128	; 0x80
    f858:	str	r1, [sp, #20]
    f85c:	ldr	r1, [fp, #-4]
    f860:	ldr	r1, [r1, #48]	; 0x30
    f864:	ldrh	r1, [r1, #128]	; 0x80
    f868:	cmp	r1, #2
    f86c:	movw	r1, #0
    f870:	moveq	r1, #1
    f874:	tst	r1, #1
    f878:	movw	r1, #16
    f87c:	moveq	r1, #28
    f880:	ldr	r2, [sp, #20]
    f884:	str	r1, [sp, #4]
    f888:	mov	r1, r2
    f88c:	ldr	r2, [sp, #4]
    f890:	bl	4d8c <connect@plt>
    f894:	str	r0, [fp, #-20]	; 0xffffffec
    f898:	ldr	r0, [fp, #-20]	; 0xffffffec
    f89c:	cmp	r0, #0
    f8a0:	bge	f908 <rb_connect_tcp+0x1d4>
    f8a4:	bl	56c8 <__errno_location@plt>
    f8a8:	ldr	r0, [r0]
    f8ac:	cmp	r0, #106	; 0x6a
    f8b0:	bne	f8c4 <rb_connect_tcp+0x190>
    f8b4:	ldr	r0, [fp, #-4]
    f8b8:	movw	r1, #0
    f8bc:	bl	f924 <rb_connect_callback>
    f8c0:	b	f904 <rb_connect_tcp+0x1d0>
    f8c4:	bl	56c8 <__errno_location@plt>
    f8c8:	ldr	r0, [r0]
    f8cc:	bl	4d98 <rb_ignore_errno@plt>
    f8d0:	cmp	r0, #0
    f8d4:	beq	f8f4 <rb_connect_tcp+0x1c0>
    f8d8:	ldr	r0, [pc, #64]	; f920 <rb_connect_tcp+0x1ec>
    f8dc:	add	r2, pc, r0
    f8e0:	ldr	r0, [fp, #-4]
    f8e4:	movw	r1, #2
    f8e8:	movw	r3, #0
    f8ec:	bl	4e64 <rb_setselect@plt>
    f8f0:	b	f900 <rb_connect_tcp+0x1cc>
    f8f4:	ldr	r0, [fp, #-4]
    f8f8:	movw	r1, #4
    f8fc:	bl	f924 <rb_connect_callback>
    f900:	b	f904 <rb_connect_tcp+0x1d0>
    f904:	b	f914 <rb_connect_tcp+0x1e0>
    f908:	ldr	r0, [fp, #-4]
    f90c:	movw	r1, #0
    f910:	bl	f924 <rb_connect_callback>
    f914:	mov	sp, fp
    f918:	pop	{fp, pc}
    f91c:	.word	0x000001d0
    f920:	.word	0x0000022c

0000f924 <rb_connect_callback>:
    f924:	push	{fp, lr}
    f928:	mov	fp, sp
    f92c:	sub	sp, sp, #32
    f930:	str	r0, [fp, #-4]
    f934:	str	r1, [fp, #-8]
    f938:	bl	56c8 <__errno_location@plt>
    f93c:	ldr	r0, [r0]
    f940:	str	r0, [sp, #12]
    f944:	ldr	r0, [fp, #-4]
    f948:	movw	r1, #0
    f94c:	cmp	r0, r1
    f950:	beq	f980 <rb_connect_callback+0x5c>
    f954:	ldr	r0, [fp, #-4]
    f958:	ldr	r0, [r0, #48]	; 0x30
    f95c:	movw	r1, #0
    f960:	cmp	r0, r1
    f964:	beq	f980 <rb_connect_callback+0x5c>
    f968:	ldr	r0, [fp, #-4]
    f96c:	ldr	r0, [r0, #48]	; 0x30
    f970:	ldr	r0, [r0, #260]	; 0x104
    f974:	movw	r1, #0
    f978:	cmp	r0, r1
    f97c:	bne	f984 <rb_connect_callback+0x60>
    f980:	b	fa00 <rb_connect_callback+0xdc>
    f984:	ldr	r0, [fp, #-4]
    f988:	ldr	r0, [r0, #48]	; 0x30
    f98c:	ldr	r0, [r0, #260]	; 0x104
    f990:	str	r0, [fp, #-12]
    f994:	ldr	r0, [fp, #-4]
    f998:	ldr	r0, [r0, #48]	; 0x30
    f99c:	ldr	r0, [r0, #264]	; 0x108
    f9a0:	str	r0, [sp, #16]
    f9a4:	ldr	r0, [fp, #-4]
    f9a8:	ldr	r0, [r0, #48]	; 0x30
    f9ac:	movw	r1, #0
    f9b0:	str	r1, [r0, #260]	; 0x104
    f9b4:	ldr	r0, [fp, #-4]
    f9b8:	str	r1, [sp, #8]
    f9bc:	ldr	r2, [sp, #8]
    f9c0:	ldr	r3, [sp, #8]
    f9c4:	bl	4da4 <rb_settimeout@plt>
    f9c8:	ldr	r0, [sp, #12]
    f9cc:	str	r0, [sp, #4]
    f9d0:	bl	56c8 <__errno_location@plt>
    f9d4:	ldr	r1, [sp, #4]
    f9d8:	str	r1, [r0]
    f9dc:	ldr	r0, [fp, #-12]
    f9e0:	ldr	r2, [fp, #-4]
    f9e4:	ldr	r1, [fp, #-8]
    f9e8:	ldr	r3, [sp, #16]
    f9ec:	str	r0, [sp]
    f9f0:	mov	r0, r2
    f9f4:	mov	r2, r3
    f9f8:	ldr	r3, [sp]
    f9fc:	blx	r3
    fa00:	mov	sp, fp
    fa04:	pop	{fp, pc}

0000fa08 <rb_connect_timeout>:
    fa08:	push	{fp, lr}
    fa0c:	mov	fp, sp
    fa10:	sub	sp, sp, #8
    fa14:	str	r0, [sp, #4]
    fa18:	str	r1, [sp]
    fa1c:	ldr	r0, [sp, #4]
    fa20:	movw	r1, #3
    fa24:	bl	f924 <rb_connect_callback>
    fa28:	mov	sp, fp
    fa2c:	pop	{fp, pc}

0000fa30 <rb_ignore_errno>:
    fa30:	sub	sp, sp, #12
    fa34:	str	r0, [sp, #4]
    fa38:	ldr	r0, [sp, #4]
    fa3c:	cmp	r0, #4
    fa40:	str	r0, [sp]
    fa44:	beq	fa8c <rb_ignore_errno+0x5c>
    fa48:	b	fa4c <rb_ignore_errno+0x1c>
    fa4c:	ldr	r0, [sp]
    fa50:	cmp	r0, #11
    fa54:	beq	fa8c <rb_ignore_errno+0x5c>
    fa58:	b	fa5c <rb_ignore_errno+0x2c>
    fa5c:	ldr	r0, [sp]
    fa60:	cmp	r0, #85	; 0x55
    fa64:	beq	fa8c <rb_ignore_errno+0x5c>
    fa68:	b	fa6c <rb_ignore_errno+0x3c>
    fa6c:	ldr	r0, [sp]
    fa70:	cmp	r0, #105	; 0x69
    fa74:	beq	fa8c <rb_ignore_errno+0x5c>
    fa78:	b	fa7c <rb_ignore_errno+0x4c>
    fa7c:	ldr	r0, [sp]
    fa80:	cmp	r0, #115	; 0x73
    fa84:	bne	fa98 <rb_ignore_errno+0x68>
    fa88:	b	fa8c <rb_ignore_errno+0x5c>
    fa8c:	movw	r0, #1
    fa90:	str	r0, [sp, #8]
    fa94:	b	faa4 <rb_ignore_errno+0x74>
    fa98:	b	fa9c <rb_ignore_errno+0x6c>
    fa9c:	movw	r0, #0
    faa0:	str	r0, [sp, #8]
    faa4:	ldr	r0, [sp, #8]
    faa8:	add	sp, sp, #12
    faac:	bx	lr

0000fab0 <rb_setselect>:
    fab0:	push	{fp, lr}
    fab4:	mov	fp, sp
    fab8:	sub	sp, sp, #24
    fabc:	ldr	ip, [pc, #72]	; fb0c <rb_setselect+0x5c>
    fac0:	add	ip, pc, ip
    fac4:	str	r0, [fp, #-4]
    fac8:	str	r1, [fp, #-8]
    facc:	str	r2, [sp, #12]
    fad0:	str	r3, [sp, #8]
    fad4:	ldr	r0, [ip]
    fad8:	ldr	r1, [fp, #-4]
    fadc:	ldr	r2, [fp, #-8]
    fae0:	ldr	r3, [sp, #12]
    fae4:	ldr	ip, [sp, #8]
    fae8:	str	r0, [sp, #4]
    faec:	mov	r0, r1
    faf0:	mov	r1, r2
    faf4:	mov	r2, r3
    faf8:	mov	r3, ip
    fafc:	ldr	ip, [sp, #4]
    fb00:	blx	ip
    fb04:	mov	sp, fp
    fb08:	pop	{fp, pc}
    fb0c:	.word	0x00038408

0000fb10 <rb_connect_outcome>:
    fb10:	push	{fp, lr}
    fb14:	mov	fp, sp
    fb18:	sub	sp, sp, #32
    fb1c:	str	r0, [fp, #-4]
    fb20:	str	r1, [fp, #-8]
    fb24:	movw	r0, #0
    fb28:	str	r0, [sp, #16]
    fb2c:	movw	r1, #4
    fb30:	str	r1, [sp, #12]
    fb34:	ldr	r1, [fp, #-4]
    fb38:	cmp	r1, r0
    fb3c:	beq	fb6c <rb_connect_outcome+0x5c>
    fb40:	ldr	r0, [fp, #-4]
    fb44:	ldr	r0, [r0, #48]	; 0x30
    fb48:	movw	r1, #0
    fb4c:	cmp	r0, r1
    fb50:	beq	fb6c <rb_connect_outcome+0x5c>
    fb54:	ldr	r0, [fp, #-4]
    fb58:	ldr	r0, [r0, #48]	; 0x30
    fb5c:	ldr	r0, [r0, #260]	; 0x104
    fb60:	movw	r1, #0
    fb64:	cmp	r0, r1
    fb68:	bne	fb70 <rb_connect_outcome+0x60>
    fb6c:	b	fc04 <rb_connect_outcome+0xf4>
    fb70:	ldr	r0, [fp, #-4]
    fb74:	ldr	r0, [r0, #12]
    fb78:	add	r1, sp, #16
    fb7c:	movw	r2, #1
    fb80:	str	r1, [sp, #8]
    fb84:	mov	r1, r2
    fb88:	movw	r2, #4
    fb8c:	ldr	r3, [sp, #8]
    fb90:	add	ip, sp, #12
    fb94:	str	ip, [sp]
    fb98:	bl	5650 <getsockopt@plt>
    fb9c:	str	r0, [fp, #-12]
    fba0:	ldr	r0, [fp, #-12]
    fba4:	cmp	r0, #0
    fba8:	bge	fbb0 <rb_connect_outcome+0xa0>
    fbac:	b	fbdc <rb_connect_outcome+0xcc>
    fbb0:	ldr	r0, [sp, #16]
    fbb4:	cmp	r0, #0
    fbb8:	beq	fbd8 <rb_connect_outcome+0xc8>
    fbbc:	ldr	r0, [sp, #16]
    fbc0:	str	r0, [sp, #4]
    fbc4:	bl	56c8 <__errno_location@plt>
    fbc8:	ldr	lr, [sp, #4]
    fbcc:	str	lr, [r0]
    fbd0:	mvn	r0, #0
    fbd4:	str	r0, [fp, #-12]
    fbd8:	b	fbdc <rb_connect_outcome+0xcc>
    fbdc:	ldr	r0, [fp, #-12]
    fbe0:	cmp	r0, #0
    fbe4:	bge	fbf8 <rb_connect_outcome+0xe8>
    fbe8:	ldr	r0, [fp, #-4]
    fbec:	movw	r1, #4
    fbf0:	bl	f924 <rb_connect_callback>
    fbf4:	b	fc04 <rb_connect_outcome+0xf4>
    fbf8:	ldr	r0, [fp, #-4]
    fbfc:	movw	r1, #0
    fc00:	bl	f924 <rb_connect_callback>
    fc04:	mov	sp, fp
    fc08:	pop	{fp, pc}

0000fc0c <rb_connect_sctp>:
    fc0c:	push	{r4, r5, fp, lr}
    fc10:	add	fp, sp, #8
    fc14:	sub	sp, sp, #32
    fc18:	ldr	ip, [fp, #20]
    fc1c:	ldr	lr, [fp, #16]
    fc20:	ldr	r4, [fp, #12]
    fc24:	ldr	r5, [fp, #8]
    fc28:	str	r0, [fp, #-12]
    fc2c:	str	r1, [fp, #-16]
    fc30:	str	r2, [sp, #20]
    fc34:	str	r3, [sp, #16]
    fc38:	ldr	r0, [fp, #-12]
    fc3c:	movw	r1, #4
    fc40:	str	r5, [sp, #12]
    fc44:	str	ip, [sp, #8]
    fc48:	str	lr, [sp, #4]
    fc4c:	str	r4, [sp]
    fc50:	bl	f924 <rb_connect_callback>
    fc54:	sub	sp, fp, #8
    fc58:	pop	{r4, r5, fp, pc}

0000fc5c <rb_connect_sockaddr>:
    fc5c:	push	{fp, lr}
    fc60:	mov	fp, sp
    fc64:	sub	sp, sp, #16
    fc68:	str	r0, [sp, #8]
    fc6c:	str	r1, [sp, #4]
    fc70:	str	r2, [sp]
    fc74:	ldr	r0, [sp, #8]
    fc78:	movw	r1, #0
    fc7c:	cmp	r0, r1
    fc80:	bne	fc90 <rb_connect_sockaddr+0x34>
    fc84:	movw	r0, #0
    fc88:	str	r0, [fp, #-4]
    fc8c:	b	fcb0 <rb_connect_sockaddr+0x54>
    fc90:	ldr	r0, [sp, #4]
    fc94:	ldr	r1, [sp, #8]
    fc98:	ldr	r1, [r1, #48]	; 0x30
    fc9c:	add	r1, r1, #128	; 0x80
    fca0:	ldr	r2, [sp]
    fca4:	bl	51dc <memcpy@plt>
    fca8:	movw	r0, #1
    fcac:	str	r0, [fp, #-4]
    fcb0:	ldr	r0, [fp, #-4]
    fcb4:	mov	sp, fp
    fcb8:	pop	{fp, pc}

0000fcbc <rb_errstr>:
    fcbc:	sub	sp, sp, #12
    fcc0:	str	r0, [sp, #4]
    fcc4:	ldr	r0, [sp, #4]
    fcc8:	cmp	r0, #0
    fccc:	blt	fcdc <rb_errstr+0x20>
    fcd0:	ldr	r0, [sp, #4]
    fcd4:	cmp	r0, #7
    fcd8:	blt	fcec <rb_errstr+0x30>
    fcdc:	ldr	r0, [pc, #60]	; fd20 <rb_errstr+0x64>
    fce0:	add	r0, pc, r0
    fce4:	str	r0, [sp, #8]
    fce8:	b	fd10 <rb_errstr+0x54>
    fcec:	ldr	r0, [pc, #40]	; fd1c <rb_errstr+0x60>
    fcf0:	add	r0, pc, r0
    fcf4:	ldr	r1, [sp, #4]
    fcf8:	ldr	r2, [pc, #36]	; fd24 <rb_errstr+0x68>
    fcfc:	add	r2, pc, r2
    fd00:	add	r1, r2, r1, lsl #2
    fd04:	ldr	r1, [r1]
    fd08:	str	r1, [sp, #8]
    fd0c:	str	r0, [sp]
    fd10:	ldr	r0, [sp, #8]
    fd14:	add	sp, sp, #12
    fd18:	bx	lr
    fd1c:	.word	0x00025780
    fd20:	.word	0x00012ee0
    fd24:	.word	0x00025774

0000fd28 <rb_socketpair>:
    fd28:	push	{r4, r5, fp, lr}
    fd2c:	add	fp, sp, #8
    fd30:	sub	sp, sp, #56	; 0x38
    fd34:	ldr	ip, [fp, #12]
    fd38:	ldr	lr, [fp, #8]
    fd3c:	ldr	r4, [pc, #560]	; ff74 <rb_socketpair+0x24c>
    fd40:	ldr	r4, [pc, r4]
    fd44:	ldr	r5, [pc, #556]	; ff78 <rb_socketpair+0x250>
    fd48:	add	r5, pc, r5
    fd4c:	str	r0, [fp, #-16]
    fd50:	str	r1, [fp, #-20]	; 0xffffffec
    fd54:	str	r2, [fp, #-24]	; 0xffffffe8
    fd58:	str	r3, [fp, #-28]	; 0xffffffe4
    fd5c:	ldr	r0, [r5]
    fd60:	ldr	r1, [r4]
    fd64:	cmp	r0, r1
    fd68:	str	lr, [sp, #24]
    fd6c:	str	ip, [sp, #20]
    fd70:	blt	fd8c <rb_socketpair+0x64>
    fd74:	bl	56c8 <__errno_location@plt>
    fd78:	movw	lr, #23
    fd7c:	str	lr, [r0]
    fd80:	mvn	r0, #0
    fd84:	str	r0, [fp, #-12]
    fd88:	b	ff68 <rb_socketpair+0x240>
    fd8c:	add	r3, sp, #28
    fd90:	ldr	r0, [fp, #-16]
    fd94:	ldr	r1, [fp, #-20]	; 0xffffffec
    fd98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fd9c:	bl	4f30 <socketpair@plt>
    fda0:	cmp	r0, #0
    fda4:	beq	fdb4 <rb_socketpair+0x8c>
    fda8:	mvn	r0, #0
    fdac:	str	r0, [fp, #-12]
    fdb0:	b	ff68 <rb_socketpair+0x240>
    fdb4:	ldr	r0, [sp, #28]
    fdb8:	ldr	r2, [fp, #12]
    fdbc:	movw	r1, #4
    fdc0:	and	r1, r1, #255	; 0xff
    fdc4:	bl	544c <rb_open@plt>
    fdc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fdcc:	str	r0, [r1]
    fdd0:	ldr	r0, [sp, #32]
    fdd4:	ldr	r2, [fp, #12]
    fdd8:	movw	r1, #4
    fddc:	and	r1, r1, #255	; 0xff
    fde0:	bl	544c <rb_open@plt>
    fde4:	ldr	r1, [fp, #8]
    fde8:	str	r0, [r1]
    fdec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fdf0:	ldr	r0, [r0]
    fdf4:	movw	r1, #0
    fdf8:	cmp	r0, r1
    fdfc:	bne	fe2c <rb_socketpair+0x104>
    fe00:	ldr	r0, [fp, #8]
    fe04:	ldr	r0, [r0]
    fe08:	movw	r1, #0
    fe0c:	cmp	r0, r1
    fe10:	beq	fe20 <rb_socketpair+0xf8>
    fe14:	ldr	r0, [fp, #8]
    fe18:	ldr	r0, [r0]
    fe1c:	bl	5230 <rb_close@plt>
    fe20:	mvn	r0, #0
    fe24:	str	r0, [fp, #-12]
    fe28:	b	ff68 <rb_socketpair+0x240>
    fe2c:	ldr	r0, [fp, #8]
    fe30:	ldr	r0, [r0]
    fe34:	movw	r1, #0
    fe38:	cmp	r0, r1
    fe3c:	bne	fe58 <rb_socketpair+0x130>
    fe40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fe44:	ldr	r0, [r0]
    fe48:	bl	5230 <rb_close@plt>
    fe4c:	mvn	r0, #0
    fe50:	str	r0, [fp, #-12]
    fe54:	b	ff68 <rb_socketpair+0x240>
    fe58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fe5c:	ldr	r0, [r0]
    fe60:	bl	4fe4 <rb_set_nb@plt>
    fe64:	cmp	r0, #0
    fe68:	movw	r0, #0
    fe6c:	movne	r0, #1
    fe70:	mvn	lr, #0
    fe74:	eor	r0, r0, lr
    fe78:	eor	r0, r0, lr
    fe7c:	eor	r0, r0, lr
    fe80:	tst	r0, #1
    fe84:	beq	fedc <rb_socketpair+0x1b4>
    fe88:	ldr	r1, [sp, #28]
    fe8c:	str	r1, [sp, #16]
    fe90:	bl	56c8 <__errno_location@plt>
    fe94:	ldr	r0, [r0]
    fe98:	bl	4d5c <strerror@plt>
    fe9c:	ldr	r1, [pc, #220]	; ff80 <rb_socketpair+0x258>
    fea0:	add	r1, pc, r1
    fea4:	str	r0, [sp, #12]
    fea8:	mov	r0, r1
    feac:	ldr	r1, [sp, #16]
    feb0:	ldr	r2, [sp, #12]
    feb4:	bl	52e4 <rb_lib_log@plt>
    feb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    febc:	ldr	r0, [r0]
    fec0:	bl	5230 <rb_close@plt>
    fec4:	ldr	r0, [fp, #8]
    fec8:	ldr	r0, [r0]
    fecc:	bl	5230 <rb_close@plt>
    fed0:	mvn	r0, #0
    fed4:	str	r0, [fp, #-12]
    fed8:	b	ff68 <rb_socketpair+0x240>
    fedc:	ldr	r0, [fp, #8]
    fee0:	ldr	r0, [r0]
    fee4:	bl	4fe4 <rb_set_nb@plt>
    fee8:	cmp	r0, #0
    feec:	movw	r0, #0
    fef0:	movne	r0, #1
    fef4:	mvn	lr, #0
    fef8:	eor	r0, r0, lr
    fefc:	eor	r0, r0, lr
    ff00:	eor	r0, r0, lr
    ff04:	tst	r0, #1
    ff08:	beq	ff60 <rb_socketpair+0x238>
    ff0c:	ldr	r1, [sp, #32]
    ff10:	str	r1, [sp, #8]
    ff14:	bl	56c8 <__errno_location@plt>
    ff18:	ldr	r0, [r0]
    ff1c:	bl	4d5c <strerror@plt>
    ff20:	ldr	r1, [pc, #84]	; ff7c <rb_socketpair+0x254>
    ff24:	add	r1, pc, r1
    ff28:	str	r0, [sp, #4]
    ff2c:	mov	r0, r1
    ff30:	ldr	r1, [sp, #8]
    ff34:	ldr	r2, [sp, #4]
    ff38:	bl	52e4 <rb_lib_log@plt>
    ff3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ff40:	ldr	r0, [r0]
    ff44:	bl	5230 <rb_close@plt>
    ff48:	ldr	r0, [fp, #8]
    ff4c:	ldr	r0, [r0]
    ff50:	bl	5230 <rb_close@plt>
    ff54:	mvn	r0, #0
    ff58:	str	r0, [fp, #-12]
    ff5c:	b	ff68 <rb_socketpair+0x240>
    ff60:	movw	r0, #0
    ff64:	str	r0, [fp, #-12]
    ff68:	ldr	r0, [fp, #-12]
    ff6c:	sub	sp, fp, #8
    ff70:	pop	{r4, r5, fp, pc}
    ff74:	.word	0x00025660
    ff78:	.word	0x00038148
    ff7c:	.word	0x00012cb2
    ff80:	.word	0x00012d36

0000ff84 <rb_open>:
    ff84:	push	{fp, lr}
    ff88:	mov	fp, sp
    ff8c:	sub	sp, sp, #24
    ff90:	str	r0, [fp, #-8]
    ff94:	strb	r1, [fp, #-9]
    ff98:	str	r2, [sp, #8]
    ff9c:	ldr	r0, [fp, #-8]
    ffa0:	bl	107ac <add_fd>
    ffa4:	str	r0, [sp, #4]
    ffa8:	ldr	r0, [sp, #4]
    ffac:	ldrb	r0, [r0, #16]
    ffb0:	and	r0, r0, #1
    ffb4:	cmp	r0, #0
    ffb8:	movw	r0, #0
    ffbc:	movne	r0, #1
    ffc0:	mvn	r1, #0
    ffc4:	eor	r0, r0, r1
    ffc8:	eor	r0, r0, r1
    ffcc:	tst	r0, #1
    ffd0:	beq	10034 <rb_open+0xb0>
    ffd4:	ldr	r0, [sp, #4]
    ffd8:	movw	r1, #0
    ffdc:	cmp	r0, r1
    ffe0:	beq	10008 <rb_open+0x84>
    ffe4:	ldr	r0, [sp, #4]
    ffe8:	ldr	r0, [r0, #24]
    ffec:	movw	r1, #0
    fff0:	cmp	r0, r1
    fff4:	beq	10008 <rb_open+0x84>
    fff8:	ldr	r0, [sp, #4]
    fffc:	ldr	r0, [r0, #24]
   10000:	str	r0, [sp]
   10004:	b	10014 <rb_open+0x90>
   10008:	ldr	r0, [pc, #156]	; 100ac <rb_open+0x128>
   1000c:	add	r0, pc, r0
   10010:	str	r0, [sp]
   10014:	ldr	r0, [pc, #148]	; 100b0 <rb_open+0x12c>
   10018:	add	r0, pc, r0
   1001c:	ldr	r1, [fp, #-8]
   10020:	ldr	r2, [sp]
   10024:	bl	52e4 <rb_lib_log@plt>
   10028:	movw	r0, #0
   1002c:	str	r0, [fp, #-4]
   10030:	b	1009c <rb_open+0x118>
   10034:	ldr	r0, [fp, #-8]
   10038:	ldr	r1, [sp, #4]
   1003c:	str	r0, [r1, #12]
   10040:	ldrb	r0, [fp, #-9]
   10044:	ldr	r1, [sp, #4]
   10048:	strb	r0, [r1, #17]
   1004c:	ldr	r0, [sp, #4]
   10050:	ldrb	r1, [r0, #16]
   10054:	orr	r1, r1, #1
   10058:	strb	r1, [r0, #16]
   1005c:	ldr	r0, [sp, #8]
   10060:	movw	r1, #0
   10064:	cmp	r0, r1
   10068:	beq	10080 <rb_open+0xfc>
   1006c:	ldr	r0, [sp, #8]
   10070:	movw	r1, #128	; 0x80
   10074:	bl	10868 <rb_strndup>
   10078:	ldr	r1, [sp, #4]
   1007c:	str	r0, [r1, #24]
   10080:	ldr	r0, [pc, #32]	; 100a8 <rb_open+0x124>
   10084:	add	r0, pc, r0
   10088:	ldr	r1, [r0]
   1008c:	add	r1, r1, #1
   10090:	str	r1, [r0]
   10094:	ldr	r0, [sp, #4]
   10098:	str	r0, [fp, #-4]
   1009c:	ldr	r0, [fp, #-4]
   100a0:	mov	sp, fp
   100a4:	pop	{fp, pc}
   100a8:	.word	0x00037e0c
   100ac:	.word	0x00012b3d
   100b0:	.word	0x00012c71

000100b4 <rb_close>:
   100b4:	push	{fp, lr}
   100b8:	mov	fp, sp
   100bc:	sub	sp, sp, #32
   100c0:	str	r0, [fp, #-4]
   100c4:	ldr	r0, [fp, #-4]
   100c8:	movw	r1, #0
   100cc:	cmp	r0, r1
   100d0:	bne	100d8 <rb_close+0x24>
   100d4:	b	101fc <rb_close+0x148>
   100d8:	ldr	r0, [fp, #-4]
   100dc:	ldr	r0, [r0, #12]
   100e0:	str	r0, [fp, #-12]
   100e4:	ldr	r0, [fp, #-4]
   100e8:	ldrb	r0, [r0, #17]
   100ec:	str	r0, [fp, #-8]
   100f0:	ldr	r0, [fp, #-8]
   100f4:	and	r0, r0, #2
   100f8:	cmp	r0, #0
   100fc:	movw	r0, #0
   10100:	movne	r0, #1
   10104:	mvn	r1, #0
   10108:	eor	r0, r0, r1
   1010c:	eor	r0, r0, r1
   10110:	tst	r0, #1
   10114:	beq	1011c <rb_close+0x68>
   10118:	b	1011c <rb_close+0x68>
   1011c:	ldr	r0, [fp, #-8]
   10120:	and	r0, r0, #16
   10124:	cmp	r0, #0
   10128:	beq	10140 <rb_close+0x8c>
   1012c:	ldr	r0, [fp, #-4]
   10130:	ldr	r0, [r0, #12]
   10134:	movw	r1, #0
   10138:	bl	4fa8 <listen@plt>
   1013c:	str	r0, [sp, #16]
   10140:	ldr	r0, [fp, #-4]
   10144:	movw	r1, #3
   10148:	movw	r2, #0
   1014c:	str	r2, [sp, #12]
   10150:	ldr	r3, [sp, #12]
   10154:	bl	4e64 <rb_setselect@plt>
   10158:	ldr	r0, [fp, #-4]
   1015c:	movw	r1, #0
   10160:	str	r1, [sp, #8]
   10164:	ldr	r2, [sp, #8]
   10168:	ldr	r3, [sp, #8]
   1016c:	bl	4da4 <rb_settimeout@plt>
   10170:	ldr	r0, [fp, #-4]
   10174:	ldr	r0, [r0, #52]	; 0x34
   10178:	bl	f050 <rb_free>
   1017c:	ldr	r0, [fp, #-4]
   10180:	ldr	r0, [r0, #48]	; 0x30
   10184:	bl	f050 <rb_free>
   10188:	ldr	r0, [fp, #-4]
   1018c:	ldr	r0, [r0, #24]
   10190:	bl	f050 <rb_free>
   10194:	ldr	r0, [fp, #-8]
   10198:	and	r0, r0, #32
   1019c:	cmp	r0, #0
   101a0:	beq	101ac <rb_close+0xf8>
   101a4:	ldr	r0, [fp, #-4]
   101a8:	bl	137c8 <rb_ssl_shutdown>
   101ac:	ldr	r0, [fp, #-4]
   101b0:	ldrb	r0, [r0, #16]
   101b4:	and	r0, r0, #1
   101b8:	cmp	r0, #0
   101bc:	beq	101dc <rb_close+0x128>
   101c0:	ldr	r0, [fp, #-4]
   101c4:	bl	108d8 <remove_fd>
   101c8:	ldr	r0, [fp, #-4]
   101cc:	ldrb	lr, [r0, #16]
   101d0:	mvn	r1, #1
   101d4:	and	r1, lr, r1
   101d8:	strb	r1, [r0, #16]
   101dc:	ldr	r0, [fp, #-8]
   101e0:	and	r0, r0, #16
   101e4:	cmp	r0, #0
   101e8:	beq	101fc <rb_close+0x148>
   101ec:	ldr	r0, [fp, #-12]
   101f0:	movw	r1, #2
   101f4:	bl	52cc <shutdown@plt>
   101f8:	str	r0, [sp, #4]
   101fc:	mov	sp, fp
   10200:	pop	{fp, pc}

00010204 <rb_pipe>:
   10204:	push	{fp, lr}
   10208:	mov	fp, sp
   1020c:	sub	sp, sp, #40	; 0x28
   10210:	ldr	r3, [pc, #428]	; 103c4 <rb_pipe+0x1c0>
   10214:	ldr	r3, [pc, r3]
   10218:	ldr	ip, [pc, #424]	; 103c8 <rb_pipe+0x1c4>
   1021c:	add	ip, pc, ip
   10220:	str	r0, [fp, #-8]
   10224:	str	r1, [fp, #-12]
   10228:	str	r2, [fp, #-16]
   1022c:	ldr	r0, [ip]
   10230:	ldr	r1, [r3]
   10234:	cmp	r0, r1
   10238:	blt	10254 <rb_pipe+0x50>
   1023c:	bl	56c8 <__errno_location@plt>
   10240:	movw	lr, #23
   10244:	str	lr, [r0]
   10248:	mvn	r0, #0
   1024c:	str	r0, [fp, #-4]
   10250:	b	103b8 <rb_pipe+0x1b4>
   10254:	add	r0, sp, #16
   10258:	bl	565c <pipe@plt>
   1025c:	cmn	r0, #1
   10260:	bne	10270 <rb_pipe+0x6c>
   10264:	mvn	r0, #0
   10268:	str	r0, [fp, #-4]
   1026c:	b	103b8 <rb_pipe+0x1b4>
   10270:	ldr	r0, [sp, #16]
   10274:	ldr	r2, [fp, #-16]
   10278:	movw	r1, #8
   1027c:	and	r1, r1, #255	; 0xff
   10280:	bl	544c <rb_open@plt>
   10284:	ldr	r1, [fp, #-8]
   10288:	str	r0, [r1]
   1028c:	ldr	r0, [sp, #20]
   10290:	ldr	r2, [fp, #-16]
   10294:	movw	r1, #8
   10298:	and	r1, r1, #255	; 0xff
   1029c:	bl	544c <rb_open@plt>
   102a0:	ldr	r1, [fp, #-12]
   102a4:	str	r0, [r1]
   102a8:	ldr	r0, [fp, #-8]
   102ac:	ldr	r0, [r0]
   102b0:	bl	4fe4 <rb_set_nb@plt>
   102b4:	cmp	r0, #0
   102b8:	movw	r0, #0
   102bc:	movne	r0, #1
   102c0:	mvn	r1, #0
   102c4:	eor	r0, r0, r1
   102c8:	eor	r0, r0, r1
   102cc:	eor	r0, r0, r1
   102d0:	tst	r0, #1
   102d4:	beq	1032c <rb_pipe+0x128>
   102d8:	ldr	r1, [sp, #16]
   102dc:	str	r1, [sp, #12]
   102e0:	bl	56c8 <__errno_location@plt>
   102e4:	ldr	r0, [r0]
   102e8:	bl	4d5c <strerror@plt>
   102ec:	ldr	r1, [pc, #220]	; 103d0 <rb_pipe+0x1cc>
   102f0:	add	r1, pc, r1
   102f4:	str	r0, [sp, #8]
   102f8:	mov	r0, r1
   102fc:	ldr	r1, [sp, #12]
   10300:	ldr	r2, [sp, #8]
   10304:	bl	52e4 <rb_lib_log@plt>
   10308:	ldr	r0, [fp, #-8]
   1030c:	ldr	r0, [r0]
   10310:	bl	5230 <rb_close@plt>
   10314:	ldr	r0, [fp, #-12]
   10318:	ldr	r0, [r0]
   1031c:	bl	5230 <rb_close@plt>
   10320:	mvn	r0, #0
   10324:	str	r0, [fp, #-4]
   10328:	b	103b8 <rb_pipe+0x1b4>
   1032c:	ldr	r0, [fp, #-12]
   10330:	ldr	r0, [r0]
   10334:	bl	4fe4 <rb_set_nb@plt>
   10338:	cmp	r0, #0
   1033c:	movw	r0, #0
   10340:	movne	r0, #1
   10344:	mvn	lr, #0
   10348:	eor	r0, r0, lr
   1034c:	eor	r0, r0, lr
   10350:	eor	r0, r0, lr
   10354:	tst	r0, #1
   10358:	beq	103b0 <rb_pipe+0x1ac>
   1035c:	ldr	r1, [sp, #20]
   10360:	str	r1, [sp, #4]
   10364:	bl	56c8 <__errno_location@plt>
   10368:	ldr	r0, [r0]
   1036c:	bl	4d5c <strerror@plt>
   10370:	ldr	r1, [pc, #84]	; 103cc <rb_pipe+0x1c8>
   10374:	add	r1, pc, r1
   10378:	str	r0, [sp]
   1037c:	mov	r0, r1
   10380:	ldr	r1, [sp, #4]
   10384:	ldr	r2, [sp]
   10388:	bl	52e4 <rb_lib_log@plt>
   1038c:	ldr	r0, [fp, #-8]
   10390:	ldr	r0, [r0]
   10394:	bl	5230 <rb_close@plt>
   10398:	ldr	r0, [fp, #-12]
   1039c:	ldr	r0, [r0]
   103a0:	bl	5230 <rb_close@plt>
   103a4:	mvn	r0, #0
   103a8:	str	r0, [fp, #-4]
   103ac:	b	103b8 <rb_pipe+0x1b4>
   103b0:	movw	r0, #0
   103b4:	str	r0, [fp, #-4]
   103b8:	ldr	r0, [fp, #-4]
   103bc:	mov	sp, fp
   103c0:	pop	{fp, pc}
   103c4:	.word	0x0002518c
   103c8:	.word	0x00037c74
   103cc:	.word	0x00012862
   103d0:	.word	0x000128e6

000103d4 <rb_socket>:
   103d4:	push	{fp, lr}
   103d8:	mov	fp, sp
   103dc:	sub	sp, sp, #80	; 0x50
   103e0:	ldr	ip, [pc, #556]	; 10614 <rb_socket+0x240>
   103e4:	ldr	ip, [pc, ip]
   103e8:	ldr	lr, [pc, #552]	; 10618 <rb_socket+0x244>
   103ec:	add	lr, pc, lr
   103f0:	str	r0, [fp, #-8]
   103f4:	str	r1, [fp, #-12]
   103f8:	str	r2, [fp, #-16]
   103fc:	str	r3, [fp, #-20]	; 0xffffffec
   10400:	ldr	r0, [lr]
   10404:	ldr	r1, [ip]
   10408:	cmp	r0, r1
   1040c:	movw	r0, #0
   10410:	movge	r0, #1
   10414:	mvn	r1, #0
   10418:	eor	r0, r0, r1
   1041c:	eor	r0, r0, r1
   10420:	tst	r0, #1
   10424:	beq	10440 <rb_socket+0x6c>
   10428:	bl	56c8 <__errno_location@plt>
   1042c:	movw	lr, #23
   10430:	str	lr, [r0]
   10434:	movw	r0, #0
   10438:	str	r0, [fp, #-4]
   1043c:	b	10608 <rb_socket+0x234>
   10440:	ldr	r0, [fp, #-8]
   10444:	ldr	r1, [fp, #-12]
   10448:	ldr	r2, [fp, #-16]
   1044c:	bl	5164 <socket@plt>
   10450:	str	r0, [fp, #-28]	; 0xffffffe4
   10454:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10458:	cmp	r0, #0
   1045c:	movw	r0, #0
   10460:	movlt	r0, #1
   10464:	mvn	r1, #0
   10468:	eor	r0, r0, r1
   1046c:	eor	r0, r0, r1
   10470:	tst	r0, #1
   10474:	beq	10484 <rb_socket+0xb0>
   10478:	movw	r0, #0
   1047c:	str	r0, [fp, #-4]
   10480:	b	10608 <rb_socket+0x234>
   10484:	ldr	r0, [fp, #-8]
   10488:	cmp	r0, #10
   1048c:	bne	10520 <rb_socket+0x14c>
   10490:	movw	r0, #1
   10494:	str	r0, [fp, #-32]	; 0xffffffe0
   10498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1049c:	sub	r1, fp, #32
   104a0:	movw	r2, #41	; 0x29
   104a4:	str	r1, [fp, #-36]	; 0xffffffdc
   104a8:	mov	r1, r2
   104ac:	movw	r2, #26
   104b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   104b4:	movw	ip, #4
   104b8:	str	ip, [sp]
   104bc:	bl	5674 <setsockopt@plt>
   104c0:	cmn	r0, #1
   104c4:	bne	1051c <rb_socket+0x148>
   104c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   104cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   104d0:	str	r1, [sp, #40]	; 0x28
   104d4:	str	r2, [sp, #36]	; 0x24
   104d8:	bl	56c8 <__errno_location@plt>
   104dc:	ldr	r0, [r0]
   104e0:	bl	4d5c <strerror@plt>
   104e4:	ldr	r1, [pc, #312]	; 10624 <rb_socket+0x250>
   104e8:	add	r1, pc, r1
   104ec:	str	r0, [sp, #32]
   104f0:	mov	r0, r1
   104f4:	ldr	r1, [sp, #40]	; 0x28
   104f8:	ldr	r2, [sp, #36]	; 0x24
   104fc:	ldr	r3, [sp, #32]
   10500:	bl	52e4 <rb_lib_log@plt>
   10504:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10508:	bl	5308 <close@plt>
   1050c:	movw	r1, #0
   10510:	str	r1, [fp, #-4]
   10514:	str	r0, [sp, #28]
   10518:	b	10608 <rb_socket+0x234>
   1051c:	b	10520 <rb_socket+0x14c>
   10520:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10524:	ldr	r2, [fp, #-20]	; 0xffffffec
   10528:	movw	r1, #4
   1052c:	and	r1, r1, #255	; 0xff
   10530:	bl	544c <rb_open@plt>
   10534:	str	r0, [fp, #-24]	; 0xffffffe8
   10538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1053c:	movw	r1, #0
   10540:	cmp	r0, r1
   10544:	bne	10590 <rb_socket+0x1bc>
   10548:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1054c:	str	r1, [sp, #24]
   10550:	bl	56c8 <__errno_location@plt>
   10554:	ldr	r0, [r0]
   10558:	bl	4d5c <strerror@plt>
   1055c:	ldr	r1, [pc, #188]	; 10620 <rb_socket+0x24c>
   10560:	add	r1, pc, r1
   10564:	str	r0, [sp, #20]
   10568:	mov	r0, r1
   1056c:	ldr	r1, [sp, #24]
   10570:	ldr	r2, [sp, #20]
   10574:	bl	52e4 <rb_lib_log@plt>
   10578:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1057c:	bl	5308 <close@plt>
   10580:	movw	r1, #0
   10584:	str	r1, [fp, #-4]
   10588:	str	r0, [sp, #16]
   1058c:	b	10608 <rb_socket+0x234>
   10590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10594:	bl	4fe4 <rb_set_nb@plt>
   10598:	cmp	r0, #0
   1059c:	movw	r0, #0
   105a0:	movne	r0, #1
   105a4:	mvn	lr, #0
   105a8:	eor	r0, r0, lr
   105ac:	eor	r0, r0, lr
   105b0:	eor	r0, r0, lr
   105b4:	tst	r0, #1
   105b8:	beq	10600 <rb_socket+0x22c>
   105bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   105c0:	str	r1, [sp, #12]
   105c4:	bl	56c8 <__errno_location@plt>
   105c8:	ldr	r0, [r0]
   105cc:	bl	4d5c <strerror@plt>
   105d0:	ldr	r1, [pc, #68]	; 1061c <rb_socket+0x248>
   105d4:	add	r1, pc, r1
   105d8:	str	r0, [sp, #8]
   105dc:	mov	r0, r1
   105e0:	ldr	r1, [sp, #12]
   105e4:	ldr	r2, [sp, #8]
   105e8:	bl	52e4 <rb_lib_log@plt>
   105ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   105f0:	bl	5230 <rb_close@plt>
   105f4:	movw	r0, #0
   105f8:	str	r0, [fp, #-4]
   105fc:	b	10608 <rb_socket+0x234>
   10600:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10604:	str	r0, [fp, #-4]
   10608:	ldr	r0, [fp, #-4]
   1060c:	mov	sp, fp
   10610:	pop	{fp, pc}
   10614:	.word	0x00024fbc
   10618:	.word	0x00037aa4
   1061c:	.word	0x00012602
   10620:	.word	0x000126e2
   10624:	.word	0x0001271b

00010628 <rb_listen>:
   10628:	push	{fp, lr}
   1062c:	mov	fp, sp
   10630:	sub	sp, sp, #32
   10634:	str	r0, [fp, #-4]
   10638:	str	r1, [fp, #-8]
   1063c:	str	r2, [fp, #-12]
   10640:	ldr	r0, [fp, #-4]
   10644:	ldrb	r0, [r0, #17]
   10648:	and	r0, r0, #128	; 0x80
   1064c:	orr	r0, r0, #20
   10650:	ldr	r1, [fp, #-4]
   10654:	strb	r0, [r1, #17]
   10658:	ldr	r0, [fp, #-4]
   1065c:	ldr	r0, [r0, #12]
   10660:	ldr	r1, [fp, #-8]
   10664:	bl	4fa8 <listen@plt>
   10668:	str	r0, [sp, #16]
   1066c:	ldr	r0, [fp, #-12]
   10670:	cmp	r0, #0
   10674:	beq	106b4 <rb_listen+0x8c>
   10678:	ldr	r0, [sp, #16]
   1067c:	cmp	r0, #0
   10680:	bne	106b4 <rb_listen+0x8c>
   10684:	ldr	r0, [fp, #-4]
   10688:	ldr	r0, [r0, #12]
   1068c:	sub	r1, fp, #8
   10690:	movw	r2, #6
   10694:	str	r1, [sp, #12]
   10698:	mov	r1, r2
   1069c:	movw	r2, #9
   106a0:	ldr	r3, [sp, #12]
   106a4:	movw	ip, #4
   106a8:	str	ip, [sp]
   106ac:	bl	5674 <setsockopt@plt>
   106b0:	str	r0, [sp, #8]
   106b4:	ldr	r0, [sp, #16]
   106b8:	mov	sp, fp
   106bc:	pop	{fp, pc}

000106c0 <rb_fdlist_init>:
   106c0:	push	{fp, lr}
   106c4:	mov	fp, sp
   106c8:	sub	sp, sp, #16
   106cc:	ldr	r3, [pc, #112]	; 10744 <rb_fdlist_init+0x84>
   106d0:	add	r3, pc, r3
   106d4:	str	r0, [fp, #-4]
   106d8:	str	r1, [sp, #8]
   106dc:	str	r2, [sp, #4]
   106e0:	ldr	r0, [r3]
   106e4:	cmp	r0, #0
   106e8:	bne	1071c <rb_fdlist_init+0x5c>
   106ec:	ldr	r0, [pc, #84]	; 10748 <rb_fdlist_init+0x88>
   106f0:	ldr	r0, [pc, r0]
   106f4:	ldr	r1, [sp, #8]
   106f8:	str	r1, [r0]
   106fc:	ldr	r0, [fp, #-4]
   10700:	cmp	r0, #0
   10704:	beq	1070c <rb_fdlist_init+0x4c>
   10708:	bl	10758 <rb_close_all>
   1070c:	ldr	r0, [pc, #56]	; 1074c <rb_fdlist_init+0x8c>
   10710:	add	r0, pc, r0
   10714:	movw	r1, #1
   10718:	str	r1, [r0]
   1071c:	ldr	r0, [pc, #48]	; 10754 <rb_fdlist_init+0x94>
   10720:	add	r2, pc, r0
   10724:	ldr	r1, [sp, #4]
   10728:	movw	r0, #68	; 0x44
   1072c:	bl	547c <rb_bh_create@plt>
   10730:	ldr	r1, [pc, #24]	; 10750 <rb_fdlist_init+0x90>
   10734:	add	r1, pc, r1
   10738:	str	r0, [r1]
   1073c:	mov	sp, fp
   10740:	pop	{fp, pc}
   10744:	.word	0x000377c4
   10748:	.word	0x00024cb0
   1074c:	.word	0x00037784
   10750:	.word	0x00037764
   10754:	.word	0x0001255b

00010758 <rb_close_all>:
   10758:	push	{fp, lr}
   1075c:	mov	fp, sp
   10760:	sub	sp, sp, #8
   10764:	movw	r0, #3
   10768:	str	r0, [sp, #4]
   1076c:	ldr	r0, [pc, #52]	; 107a8 <rb_close_all+0x50>
   10770:	ldr	r0, [pc, r0]
   10774:	ldr	r1, [sp, #4]
   10778:	ldr	r0, [r0]
   1077c:	cmp	r1, r0
   10780:	bge	107a0 <rb_close_all+0x48>
   10784:	ldr	r0, [sp, #4]
   10788:	bl	5308 <close@plt>
   1078c:	str	r0, [sp]
   10790:	ldr	r0, [sp, #4]
   10794:	add	r0, r0, #1
   10798:	str	r0, [sp, #4]
   1079c:	b	1076c <rb_close_all+0x14>
   107a0:	mov	sp, fp
   107a4:	pop	{fp, pc}
   107a8:	.word	0x00024c30

000107ac <add_fd>:
   107ac:	push	{fp, lr}
   107b0:	mov	fp, sp
   107b4:	sub	sp, sp, #16
   107b8:	str	r0, [sp, #8]
   107bc:	ldr	r0, [sp, #8]
   107c0:	bl	10bcc <rb_find_fd>
   107c4:	str	r0, [sp, #4]
   107c8:	ldr	r0, [sp, #4]
   107cc:	movw	lr, #0
   107d0:	cmp	r0, lr
   107d4:	beq	107e4 <add_fd+0x38>
   107d8:	ldr	r0, [sp, #4]
   107dc:	str	r0, [fp, #-4]
   107e0:	b	10854 <add_fd+0xa8>
   107e4:	ldr	r0, [pc, #120]	; 10864 <add_fd+0xb8>
   107e8:	add	r0, pc, r0
   107ec:	ldr	r0, [r0]
   107f0:	bl	5320 <rb_bh_alloc@plt>
   107f4:	ldr	lr, [pc, #100]	; 10860 <add_fd+0xb4>
   107f8:	ldr	lr, [pc, lr]
   107fc:	str	r0, [sp, #4]
   10800:	ldr	r0, [sp, #8]
   10804:	ldr	r1, [sp, #4]
   10808:	str	r0, [r1, #12]
   1080c:	ldr	r0, [sp, #4]
   10810:	ldr	r1, [sp, #4]
   10814:	ldr	lr, [lr]
   10818:	ldr	r2, [sp, #8]
   1081c:	ldr	r3, [sp, #8]
   10820:	asr	r3, r3, #12
   10824:	eor	r2, r2, r3
   10828:	ldr	r3, [sp, #8]
   1082c:	asr	r3, r3, #24
   10830:	eor	r2, r2, r3
   10834:	movw	r3, #4095	; 0xfff
   10838:	and	r2, r2, r3
   1083c:	movw	r3, #12
   10840:	mul	r2, r2, r3
   10844:	add	r2, lr, r2
   10848:	bl	f0f0 <rb_dlinkAdd>
   1084c:	ldr	r0, [sp, #4]
   10850:	str	r0, [fp, #-4]
   10854:	ldr	r0, [fp, #-4]
   10858:	mov	sp, fp
   1085c:	pop	{fp, pc}
   10860:	.word	0x00024bc8
   10864:	.word	0x000376b0

00010868 <rb_strndup>:
   10868:	push	{fp, lr}
   1086c:	mov	fp, sp
   10870:	sub	sp, sp, #16
   10874:	str	r0, [fp, #-4]
   10878:	str	r1, [sp, #8]
   1087c:	ldr	r0, [sp, #8]
   10880:	bl	5374 <malloc@plt>
   10884:	str	r0, [sp, #4]
   10888:	ldr	r0, [sp, #4]
   1088c:	movw	r1, #0
   10890:	cmp	r0, r1
   10894:	movw	r0, #0
   10898:	moveq	r0, #1
   1089c:	mvn	r1, #0
   108a0:	eor	r0, r0, r1
   108a4:	eor	r0, r0, r1
   108a8:	tst	r0, #1
   108ac:	beq	108b4 <rb_strndup+0x4c>
   108b0:	bl	5350 <rb_outofmemory@plt>
   108b4:	ldr	r0, [sp, #4]
   108b8:	ldr	r1, [fp, #-4]
   108bc:	ldr	r2, [sp, #8]
   108c0:	bl	5068 <rb_strlcpy@plt>
   108c4:	ldr	r1, [sp, #4]
   108c8:	str	r0, [sp]
   108cc:	mov	r0, r1
   108d0:	mov	sp, fp
   108d4:	pop	{fp, pc}

000108d8 <remove_fd>:
   108d8:	push	{fp, lr}
   108dc:	mov	fp, sp
   108e0:	sub	sp, sp, #8
   108e4:	str	r0, [sp, #4]
   108e8:	ldr	r0, [sp, #4]
   108ec:	movw	r1, #0
   108f0:	cmp	r0, r1
   108f4:	beq	1090c <remove_fd+0x34>
   108f8:	ldr	r0, [sp, #4]
   108fc:	ldrb	r0, [r0, #16]
   10900:	and	r0, r0, #1
   10904:	cmp	r0, #0
   10908:	bne	10910 <remove_fd+0x38>
   1090c:	b	10974 <remove_fd+0x9c>
   10910:	ldr	r0, [pc, #100]	; 1097c <remove_fd+0xa4>
   10914:	add	r2, pc, r0
   10918:	ldr	r0, [pc, #96]	; 10980 <remove_fd+0xa8>
   1091c:	ldr	r0, [pc, r0]
   10920:	ldr	r1, [sp, #4]
   10924:	ldr	r0, [r0]
   10928:	ldr	r3, [sp, #4]
   1092c:	ldr	r3, [r3, #12]
   10930:	ldr	ip, [sp, #4]
   10934:	ldr	ip, [ip, #12]
   10938:	asr	ip, ip, #12
   1093c:	eor	r3, r3, ip
   10940:	ldr	ip, [sp, #4]
   10944:	ldr	ip, [ip, #12]
   10948:	asr	ip, ip, #24
   1094c:	eor	r3, r3, ip
   10950:	movw	ip, #4095	; 0xfff
   10954:	and	r3, r3, ip
   10958:	movw	ip, #12
   1095c:	mul	r3, r3, ip
   10960:	add	r0, r0, r3
   10964:	str	r0, [sp]
   10968:	mov	r0, r1
   1096c:	ldr	r1, [sp]
   10970:	bl	13458 <rb_dlinkMoveNode>
   10974:	mov	sp, fp
   10978:	pop	{fp, pc}
   1097c:	.word	0x000375c0
   10980:	.word	0x00024aa4

00010984 <rb_dump_fd>:
   10984:	push	{fp, lr}
   10988:	mov	fp, sp
   1098c:	sub	sp, sp, #40	; 0x28
   10990:	str	r0, [fp, #-4]
   10994:	str	r1, [fp, #-8]
   10998:	movw	r0, #0
   1099c:	str	r0, [sp, #16]
   109a0:	ldr	r0, [sp, #16]
   109a4:	cmp	r0, #4096	; 0x1000
   109a8:	bcs	10abc <rb_dump_fd+0x138>
   109ac:	ldr	r0, [pc, #272]	; 10ac4 <rb_dump_fd+0x140>
   109b0:	ldr	r0, [pc, r0]
   109b4:	ldr	r0, [r0]
   109b8:	ldr	r1, [sp, #16]
   109bc:	movw	r2, #12
   109c0:	mul	r1, r1, r2
   109c4:	add	r0, r0, r1
   109c8:	str	r0, [fp, #-16]
   109cc:	ldr	r0, [fp, #-16]
   109d0:	ldr	r0, [r0, #8]
   109d4:	cmp	r0, #0
   109d8:	bhi	109e0 <rb_dump_fd+0x5c>
   109dc:	b	10aac <rb_dump_fd+0x128>
   109e0:	ldr	r0, [fp, #-16]
   109e4:	ldr	r0, [r0]
   109e8:	str	r0, [fp, #-12]
   109ec:	ldr	r0, [fp, #-12]
   109f0:	movw	r1, #0
   109f4:	cmp	r0, r1
   109f8:	beq	10aa8 <rb_dump_fd+0x124>
   109fc:	ldr	r0, [fp, #-12]
   10a00:	ldr	r0, [r0]
   10a04:	str	r0, [sp, #20]
   10a08:	ldr	r0, [sp, #20]
   10a0c:	movw	r1, #0
   10a10:	cmp	r0, r1
   10a14:	beq	10a2c <rb_dump_fd+0xa8>
   10a18:	ldr	r0, [sp, #20]
   10a1c:	ldrb	r0, [r0, #16]
   10a20:	and	r0, r0, #1
   10a24:	cmp	r0, #0
   10a28:	bne	10a30 <rb_dump_fd+0xac>
   10a2c:	b	10a98 <rb_dump_fd+0x114>
   10a30:	ldr	r0, [fp, #-4]
   10a34:	ldr	r1, [sp, #20]
   10a38:	ldr	r1, [r1, #12]
   10a3c:	ldr	r2, [sp, #20]
   10a40:	ldr	r2, [r2, #24]
   10a44:	movw	r3, #0
   10a48:	cmp	r2, r3
   10a4c:	str	r0, [sp, #12]
   10a50:	str	r1, [sp, #8]
   10a54:	beq	10a68 <rb_dump_fd+0xe4>
   10a58:	ldr	r0, [sp, #20]
   10a5c:	ldr	r0, [r0, #24]
   10a60:	str	r0, [sp, #4]
   10a64:	b	10a78 <rb_dump_fd+0xf4>
   10a68:	ldr	r0, [pc, #88]	; 10ac8 <rb_dump_fd+0x144>
   10a6c:	add	r0, pc, r0
   10a70:	ldr	r0, [r0]
   10a74:	str	r0, [sp, #4]
   10a78:	ldr	r0, [sp, #4]
   10a7c:	ldr	r2, [fp, #-8]
   10a80:	ldr	r1, [sp, #8]
   10a84:	str	r0, [sp]
   10a88:	mov	r0, r1
   10a8c:	ldr	r1, [sp]
   10a90:	ldr	r3, [sp, #12]
   10a94:	blx	r3
   10a98:	ldr	r0, [fp, #-12]
   10a9c:	ldr	r0, [r0, #8]
   10aa0:	str	r0, [fp, #-12]
   10aa4:	b	109ec <rb_dump_fd+0x68>
   10aa8:	b	10aac <rb_dump_fd+0x128>
   10aac:	ldr	r0, [sp, #16]
   10ab0:	add	r0, r0, #1
   10ab4:	str	r0, [sp, #16]
   10ab8:	b	109a0 <rb_dump_fd+0x1c>
   10abc:	mov	sp, fp
   10ac0:	pop	{fp, pc}
   10ac4:	.word	0x00024a10
   10ac8:	.word	0x00024a20

00010acc <rb_note>:
   10acc:	push	{fp, lr}
   10ad0:	mov	fp, sp
   10ad4:	sub	sp, sp, #8
   10ad8:	str	r0, [sp, #4]
   10adc:	str	r1, [sp]
   10ae0:	ldr	r0, [sp, #4]
   10ae4:	movw	r1, #0
   10ae8:	cmp	r0, r1
   10aec:	bne	10af4 <rb_note+0x28>
   10af0:	b	10b14 <rb_note+0x48>
   10af4:	ldr	r0, [sp, #4]
   10af8:	ldr	r0, [r0, #24]
   10afc:	bl	f050 <rb_free>
   10b00:	ldr	r0, [sp]
   10b04:	movw	r1, #128	; 0x80
   10b08:	bl	10868 <rb_strndup>
   10b0c:	ldr	r1, [sp, #4]
   10b10:	str	r0, [r1, #24]
   10b14:	mov	sp, fp
   10b18:	pop	{fp, pc}

00010b1c <rb_set_type>:
   10b1c:	sub	sp, sp, #8
   10b20:	str	r0, [sp, #4]
   10b24:	strb	r1, [sp, #3]
   10b28:	ldrb	r0, [sp, #3]
   10b2c:	ldr	r1, [sp, #4]
   10b30:	strb	r0, [r1, #17]
   10b34:	add	sp, sp, #8
   10b38:	bx	lr

00010b3c <rb_get_type>:
   10b3c:	sub	sp, sp, #4
   10b40:	str	r0, [sp]
   10b44:	ldr	r0, [sp]
   10b48:	ldrb	r0, [r0, #17]
   10b4c:	add	sp, sp, #4
   10b50:	bx	lr

00010b54 <rb_fd_ssl>:
   10b54:	sub	sp, sp, #8
   10b58:	str	r0, [sp]
   10b5c:	ldr	r0, [sp]
   10b60:	movw	r1, #0
   10b64:	cmp	r0, r1
   10b68:	bne	10b78 <rb_fd_ssl+0x24>
   10b6c:	movw	r0, #0
   10b70:	str	r0, [sp, #4]
   10b74:	b	10ba0 <rb_fd_ssl+0x4c>
   10b78:	ldr	r0, [sp]
   10b7c:	ldrb	r0, [r0, #17]
   10b80:	and	r0, r0, #32
   10b84:	cmp	r0, #0
   10b88:	beq	10b98 <rb_fd_ssl+0x44>
   10b8c:	movw	r0, #1
   10b90:	str	r0, [sp, #4]
   10b94:	b	10ba0 <rb_fd_ssl+0x4c>
   10b98:	movw	r0, #0
   10b9c:	str	r0, [sp, #4]
   10ba0:	ldr	r0, [sp, #4]
   10ba4:	add	sp, sp, #8
   10ba8:	bx	lr

00010bac <rb_get_fde>:
   10bac:	push	{fp, lr}
   10bb0:	mov	fp, sp
   10bb4:	sub	sp, sp, #8
   10bb8:	str	r0, [sp, #4]
   10bbc:	ldr	r0, [sp, #4]
   10bc0:	bl	10bcc <rb_find_fd>
   10bc4:	mov	sp, fp
   10bc8:	pop	{fp, pc}

00010bcc <rb_find_fd>:
   10bcc:	sub	sp, sp, #20
   10bd0:	str	r0, [sp, #12]
   10bd4:	ldr	r0, [sp, #12]
   10bd8:	cmp	r0, #0
   10bdc:	movw	r0, #0
   10be0:	movlt	r0, #1
   10be4:	mvn	r1, #0
   10be8:	eor	r0, r0, r1
   10bec:	eor	r0, r0, r1
   10bf0:	tst	r0, #1
   10bf4:	beq	10c04 <rb_find_fd+0x38>
   10bf8:	movw	r0, #0
   10bfc:	str	r0, [sp, #16]
   10c00:	b	10cc8 <rb_find_fd+0xfc>
   10c04:	ldr	r0, [pc, #200]	; 10cd4 <rb_find_fd+0x108>
   10c08:	ldr	r0, [pc, r0]
   10c0c:	ldr	r0, [r0]
   10c10:	ldr	r1, [sp, #12]
   10c14:	ldr	r2, [sp, #12]
   10c18:	asr	r2, r2, #12
   10c1c:	eor	r1, r1, r2
   10c20:	ldr	r2, [sp, #12]
   10c24:	asr	r2, r2, #24
   10c28:	eor	r1, r1, r2
   10c2c:	movw	r2, #4095	; 0xfff
   10c30:	and	r1, r1, r2
   10c34:	movw	r2, #12
   10c38:	mul	r1, r1, r2
   10c3c:	add	r0, r0, r1
   10c40:	str	r0, [sp, #8]
   10c44:	ldr	r0, [sp, #8]
   10c48:	ldr	r0, [r0]
   10c4c:	movw	r1, #0
   10c50:	cmp	r0, r1
   10c54:	bne	10c64 <rb_find_fd+0x98>
   10c58:	movw	r0, #0
   10c5c:	str	r0, [sp, #16]
   10c60:	b	10cc8 <rb_find_fd+0xfc>
   10c64:	ldr	r0, [sp, #8]
   10c68:	ldr	r0, [r0]
   10c6c:	str	r0, [sp, #4]
   10c70:	ldr	r0, [sp, #4]
   10c74:	movw	r1, #0
   10c78:	cmp	r0, r1
   10c7c:	beq	10cc0 <rb_find_fd+0xf4>
   10c80:	ldr	r0, [sp, #4]
   10c84:	ldr	r0, [r0]
   10c88:	str	r0, [sp]
   10c8c:	ldr	r0, [sp]
   10c90:	ldr	r0, [r0, #12]
   10c94:	ldr	r1, [sp, #12]
   10c98:	cmp	r0, r1
   10c9c:	bne	10cac <rb_find_fd+0xe0>
   10ca0:	ldr	r0, [sp]
   10ca4:	str	r0, [sp, #16]
   10ca8:	b	10cc8 <rb_find_fd+0xfc>
   10cac:	b	10cb0 <rb_find_fd+0xe4>
   10cb0:	ldr	r0, [sp, #4]
   10cb4:	ldr	r0, [r0, #8]
   10cb8:	str	r0, [sp, #4]
   10cbc:	b	10c70 <rb_find_fd+0xa4>
   10cc0:	movw	r0, #0
   10cc4:	str	r0, [sp, #16]
   10cc8:	ldr	r0, [sp, #16]
   10ccc:	add	sp, sp, #20
   10cd0:	bx	lr
   10cd4:	.word	0x000247b8

00010cd8 <rb_read>:
   10cd8:	push	{fp, lr}
   10cdc:	mov	fp, sp
   10ce0:	sub	sp, sp, #24
   10ce4:	str	r0, [fp, #-8]
   10ce8:	str	r1, [sp, #12]
   10cec:	str	r2, [sp, #8]
   10cf0:	ldr	r0, [fp, #-8]
   10cf4:	movw	r1, #0
   10cf8:	cmp	r0, r1
   10cfc:	bne	10d0c <rb_read+0x34>
   10d00:	movw	r0, #0
   10d04:	str	r0, [fp, #-4]
   10d08:	b	10d9c <rb_read+0xc4>
   10d0c:	ldr	r0, [fp, #-8]
   10d10:	ldrb	r0, [r0, #17]
   10d14:	and	r0, r0, #32
   10d18:	cmp	r0, #0
   10d1c:	beq	10d38 <rb_read+0x60>
   10d20:	ldr	r0, [fp, #-8]
   10d24:	ldr	r1, [sp, #12]
   10d28:	ldr	r2, [sp, #8]
   10d2c:	bl	144d8 <rb_ssl_read>
   10d30:	str	r0, [fp, #-4]
   10d34:	b	10d9c <rb_read+0xc4>
   10d38:	ldr	r0, [fp, #-8]
   10d3c:	ldrb	r0, [r0, #17]
   10d40:	and	r0, r0, #4
   10d44:	cmp	r0, #0
   10d48:	beq	10d84 <rb_read+0xac>
   10d4c:	ldr	r0, [fp, #-8]
   10d50:	ldr	r0, [r0, #12]
   10d54:	ldr	r1, [sp, #12]
   10d58:	ldr	r2, [sp, #8]
   10d5c:	movw	r3, #0
   10d60:	bl	4f54 <recv@plt>
   10d64:	str	r0, [sp, #4]
   10d68:	ldr	r0, [sp, #4]
   10d6c:	cmp	r0, #0
   10d70:	bge	10d78 <rb_read+0xa0>
   10d74:	b	10d78 <rb_read+0xa0>
   10d78:	ldr	r0, [sp, #4]
   10d7c:	str	r0, [fp, #-4]
   10d80:	b	10d9c <rb_read+0xc4>
   10d84:	ldr	r0, [fp, #-8]
   10d88:	ldr	r0, [r0, #12]
   10d8c:	ldr	r1, [sp, #12]
   10d90:	ldr	r2, [sp, #8]
   10d94:	bl	50e0 <read@plt>
   10d98:	str	r0, [fp, #-4]
   10d9c:	ldr	r0, [fp, #-4]
   10da0:	mov	sp, fp
   10da4:	pop	{fp, pc}

00010da8 <rb_write>:
   10da8:	push	{fp, lr}
   10dac:	mov	fp, sp
   10db0:	sub	sp, sp, #24
   10db4:	str	r0, [fp, #-8]
   10db8:	str	r1, [sp, #12]
   10dbc:	str	r2, [sp, #8]
   10dc0:	ldr	r0, [fp, #-8]
   10dc4:	movw	r1, #0
   10dc8:	cmp	r0, r1
   10dcc:	bne	10ddc <rb_write+0x34>
   10dd0:	movw	r0, #0
   10dd4:	str	r0, [fp, #-4]
   10dd8:	b	10e6c <rb_write+0xc4>
   10ddc:	ldr	r0, [fp, #-8]
   10de0:	ldrb	r0, [r0, #17]
   10de4:	and	r0, r0, #32
   10de8:	cmp	r0, #0
   10dec:	beq	10e08 <rb_write+0x60>
   10df0:	ldr	r0, [fp, #-8]
   10df4:	ldr	r1, [sp, #12]
   10df8:	ldr	r2, [sp, #8]
   10dfc:	bl	1469c <rb_ssl_write>
   10e00:	str	r0, [fp, #-4]
   10e04:	b	10e6c <rb_write+0xc4>
   10e08:	ldr	r0, [fp, #-8]
   10e0c:	ldrb	r0, [r0, #17]
   10e10:	and	r0, r0, #4
   10e14:	cmp	r0, #0
   10e18:	beq	10e54 <rb_write+0xac>
   10e1c:	ldr	r0, [fp, #-8]
   10e20:	ldr	r0, [r0, #12]
   10e24:	ldr	r1, [sp, #12]
   10e28:	ldr	r2, [sp, #8]
   10e2c:	movw	r3, #16384	; 0x4000
   10e30:	bl	5464 <send@plt>
   10e34:	str	r0, [sp, #4]
   10e38:	ldr	r0, [sp, #4]
   10e3c:	cmp	r0, #0
   10e40:	bge	10e48 <rb_write+0xa0>
   10e44:	b	10e48 <rb_write+0xa0>
   10e48:	ldr	r0, [sp, #4]
   10e4c:	str	r0, [fp, #-4]
   10e50:	b	10e6c <rb_write+0xc4>
   10e54:	ldr	r0, [fp, #-8]
   10e58:	ldr	r0, [r0, #12]
   10e5c:	ldr	r1, [sp, #12]
   10e60:	ldr	r2, [sp, #8]
   10e64:	bl	50f8 <write@plt>
   10e68:	str	r0, [fp, #-4]
   10e6c:	ldr	r0, [fp, #-4]
   10e70:	mov	sp, fp
   10e74:	pop	{fp, pc}

00010e78 <rb_writev>:
   10e78:	push	{fp, lr}
   10e7c:	mov	fp, sp
   10e80:	sub	sp, sp, #48	; 0x30
   10e84:	str	r0, [fp, #-8]
   10e88:	str	r1, [fp, #-12]
   10e8c:	str	r2, [fp, #-16]
   10e90:	ldr	r0, [fp, #-8]
   10e94:	movw	r1, #0
   10e98:	cmp	r0, r1
   10e9c:	bne	10eb8 <rb_writev+0x40>
   10ea0:	bl	56c8 <__errno_location@plt>
   10ea4:	movw	lr, #9
   10ea8:	str	lr, [r0]
   10eac:	mvn	r0, #0
   10eb0:	str	r0, [fp, #-4]
   10eb4:	b	10f5c <rb_writev+0xe4>
   10eb8:	ldr	r0, [fp, #-8]
   10ebc:	ldrb	r0, [r0, #17]
   10ec0:	and	r0, r0, #32
   10ec4:	cmp	r0, #0
   10ec8:	beq	10ee4 <rb_writev+0x6c>
   10ecc:	ldr	r0, [fp, #-8]
   10ed0:	ldr	r1, [fp, #-12]
   10ed4:	ldr	r2, [fp, #-16]
   10ed8:	bl	10f68 <rb_fake_writev>
   10edc:	str	r0, [fp, #-4]
   10ee0:	b	10f5c <rb_writev+0xe4>
   10ee4:	ldr	r0, [fp, #-8]
   10ee8:	ldrb	r0, [r0, #17]
   10eec:	and	r0, r0, #4
   10ef0:	cmp	r0, #0
   10ef4:	beq	10f44 <rb_writev+0xcc>
   10ef8:	add	r0, sp, #4
   10efc:	mov	r1, r0
   10f00:	str	r0, [sp]
   10f04:	mov	r0, r1
   10f08:	movw	r1, #0
   10f0c:	and	r1, r1, #255	; 0xff
   10f10:	movw	r2, #28
   10f14:	bl	4ff0 <memset@plt>
   10f18:	ldr	r0, [fp, #-12]
   10f1c:	str	r0, [sp, #12]
   10f20:	ldr	r0, [fp, #-16]
   10f24:	str	r0, [sp, #16]
   10f28:	ldr	r0, [fp, #-8]
   10f2c:	ldr	r0, [r0, #12]
   10f30:	ldr	r1, [sp]
   10f34:	movw	r2, #16384	; 0x4000
   10f38:	bl	50d4 <sendmsg@plt>
   10f3c:	str	r0, [fp, #-4]
   10f40:	b	10f5c <rb_writev+0xe4>
   10f44:	ldr	r0, [fp, #-8]
   10f48:	ldr	r0, [r0, #12]
   10f4c:	ldr	r1, [fp, #-12]
   10f50:	ldr	r2, [fp, #-16]
   10f54:	bl	5050 <writev@plt>
   10f58:	str	r0, [fp, #-4]
   10f5c:	ldr	r0, [fp, #-4]
   10f60:	mov	sp, fp
   10f64:	pop	{fp, pc}

00010f68 <rb_fake_writev>:
   10f68:	push	{fp, lr}
   10f6c:	mov	fp, sp
   10f70:	sub	sp, sp, #24
   10f74:	str	r0, [fp, #-8]
   10f78:	str	r1, [sp, #12]
   10f7c:	str	r2, [sp, #8]
   10f80:	movw	r0, #0
   10f84:	str	r0, [sp, #4]
   10f88:	ldr	r0, [sp, #8]
   10f8c:	mvn	r1, #0
   10f90:	add	r1, r0, r1
   10f94:	str	r1, [sp, #8]
   10f98:	cmp	r0, #0
   10f9c:	bls	1100c <rb_fake_writev+0xa4>
   10fa0:	ldr	r0, [fp, #-8]
   10fa4:	ldr	r1, [sp, #12]
   10fa8:	ldr	r1, [r1]
   10fac:	ldr	r2, [sp, #12]
   10fb0:	ldr	r2, [r2, #4]
   10fb4:	bl	5020 <rb_write@plt>
   10fb8:	str	r0, [sp]
   10fbc:	ldr	r0, [sp]
   10fc0:	cmp	r0, #0
   10fc4:	bgt	10fec <rb_fake_writev+0x84>
   10fc8:	ldr	r0, [sp, #4]
   10fcc:	cmp	r0, #0
   10fd0:	ble	10fe0 <rb_fake_writev+0x78>
   10fd4:	ldr	r0, [sp, #4]
   10fd8:	str	r0, [fp, #-4]
   10fdc:	b	11014 <rb_fake_writev+0xac>
   10fe0:	ldr	r0, [sp]
   10fe4:	str	r0, [fp, #-4]
   10fe8:	b	11014 <rb_fake_writev+0xac>
   10fec:	ldr	r0, [sp]
   10ff0:	ldr	r1, [sp, #4]
   10ff4:	add	r0, r1, r0
   10ff8:	str	r0, [sp, #4]
   10ffc:	ldr	r0, [sp, #12]
   11000:	add	r0, r0, #8
   11004:	str	r0, [sp, #12]
   11008:	b	10f88 <rb_fake_writev+0x20>
   1100c:	ldr	r0, [sp, #4]
   11010:	str	r0, [fp, #-4]
   11014:	ldr	r0, [fp, #-4]
   11018:	mov	sp, fp
   1101c:	pop	{fp, pc}

00011020 <rb_inet_pton_sock>:
   11020:	push	{fp, lr}
   11024:	mov	fp, sp
   11028:	sub	sp, sp, #24
   1102c:	str	r0, [fp, #-8]
   11030:	str	r1, [sp, #12]
   11034:	ldr	r0, [sp, #12]
   11038:	movw	r1, #0
   1103c:	and	r1, r1, #255	; 0xff
   11040:	movw	r2, #128	; 0x80
   11044:	bl	4ff0 <memset@plt>
   11048:	ldr	r1, [fp, #-8]
   1104c:	ldr	r0, [sp, #12]
   11050:	add	r0, r0, #4
   11054:	movw	r2, #2
   11058:	str	r0, [sp, #8]
   1105c:	mov	r0, r2
   11060:	ldr	r2, [sp, #8]
   11064:	bl	4ffc <rb_inet_pton@plt>
   11068:	cmp	r0, #0
   1106c:	beq	110c8 <rb_inet_pton_sock+0xa8>
   11070:	ldr	r0, [sp, #12]
   11074:	movw	r1, #2
   11078:	strh	r1, [r0]
   1107c:	ldr	r0, [sp, #12]
   11080:	ldrh	r0, [r0]
   11084:	cmp	r0, #2
   11088:	bne	1109c <rb_inet_pton_sock+0x7c>
   1108c:	ldr	r0, [sp, #12]
   11090:	movw	r1, #0
   11094:	strh	r1, [r0, #2]
   11098:	b	110a8 <rb_inet_pton_sock+0x88>
   1109c:	ldr	r0, [sp, #12]
   110a0:	movw	r1, #0
   110a4:	strh	r1, [r0, #2]
   110a8:	b	110ac <rb_inet_pton_sock+0x8c>
   110ac:	ldr	r0, [sp, #12]
   110b0:	ldrh	r0, [r0]
   110b4:	ldr	r1, [sp, #12]
   110b8:	strh	r0, [r1]
   110bc:	movw	r0, #1
   110c0:	str	r0, [fp, #-4]
   110c4:	b	11154 <rb_inet_pton_sock+0x134>
   110c8:	ldr	r1, [fp, #-8]
   110cc:	ldr	r0, [sp, #12]
   110d0:	add	r0, r0, #8
   110d4:	movw	r2, #10
   110d8:	str	r0, [sp, #4]
   110dc:	mov	r0, r2
   110e0:	ldr	r2, [sp, #4]
   110e4:	bl	4ffc <rb_inet_pton@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	11148 <rb_inet_pton_sock+0x128>
   110f0:	ldr	r0, [sp, #12]
   110f4:	movw	r1, #10
   110f8:	strh	r1, [r0]
   110fc:	ldr	r0, [sp, #12]
   11100:	ldrh	r0, [r0]
   11104:	cmp	r0, #2
   11108:	bne	1111c <rb_inet_pton_sock+0xfc>
   1110c:	ldr	r0, [sp, #12]
   11110:	movw	r1, #0
   11114:	strh	r1, [r0, #2]
   11118:	b	11128 <rb_inet_pton_sock+0x108>
   1111c:	ldr	r0, [sp, #12]
   11120:	movw	r1, #0
   11124:	strh	r1, [r0, #2]
   11128:	b	1112c <rb_inet_pton_sock+0x10c>
   1112c:	ldr	r0, [sp, #12]
   11130:	ldrh	r0, [r0]
   11134:	ldr	r1, [sp, #12]
   11138:	strh	r0, [r1]
   1113c:	movw	r0, #1
   11140:	str	r0, [fp, #-4]
   11144:	b	11154 <rb_inet_pton_sock+0x134>
   11148:	b	1114c <rb_inet_pton_sock+0x12c>
   1114c:	movw	r0, #0
   11150:	str	r0, [fp, #-4]
   11154:	ldr	r0, [fp, #-4]
   11158:	mov	sp, fp
   1115c:	pop	{fp, pc}

00011160 <rb_inet_pton>:
   11160:	push	{fp, lr}
   11164:	mov	fp, sp
   11168:	sub	sp, sp, #80	; 0x50
   1116c:	str	r0, [fp, #-8]
   11170:	str	r1, [fp, #-12]
   11174:	str	r2, [fp, #-16]
   11178:	ldr	r0, [fp, #-8]
   1117c:	cmp	r0, #2
   11180:	str	r0, [sp, #4]
   11184:	beq	1119c <rb_inet_pton+0x3c>
   11188:	b	1118c <rb_inet_pton+0x2c>
   1118c:	ldr	r0, [sp, #4]
   11190:	cmp	r0, #10
   11194:	beq	111b0 <rb_inet_pton+0x50>
   11198:	b	1120c <rb_inet_pton+0xac>
   1119c:	ldr	r0, [fp, #-12]
   111a0:	ldr	r1, [fp, #-16]
   111a4:	bl	118bc <inet_pton4>
   111a8:	str	r0, [fp, #-4]
   111ac:	b	11214 <rb_inet_pton+0xb4>
   111b0:	ldr	r0, [fp, #-12]
   111b4:	ldr	r1, [fp, #-16]
   111b8:	bl	118bc <inet_pton4>
   111bc:	cmp	r0, #0
   111c0:	beq	111f8 <rb_inet_pton+0x98>
   111c4:	ldr	r0, [pc, #84]	; 11220 <rb_inet_pton+0xc0>
   111c8:	add	r1, pc, r0
   111cc:	add	r0, sp, #11
   111d0:	ldr	r2, [fp, #-12]
   111d4:	bl	56e0 <sprintf@plt>
   111d8:	add	r1, sp, #11
   111dc:	ldr	r2, [fp, #-16]
   111e0:	str	r0, [sp]
   111e4:	mov	r0, r1
   111e8:	mov	r1, r2
   111ec:	bl	11a48 <inet_pton6>
   111f0:	str	r0, [fp, #-4]
   111f4:	b	11214 <rb_inet_pton+0xb4>
   111f8:	ldr	r0, [fp, #-12]
   111fc:	ldr	r1, [fp, #-16]
   11200:	bl	11a48 <inet_pton6>
   11204:	str	r0, [fp, #-4]
   11208:	b	11214 <rb_inet_pton+0xb4>
   1120c:	mvn	r0, #0
   11210:	str	r0, [fp, #-4]
   11214:	ldr	r0, [fp, #-4]
   11218:	mov	sp, fp
   1121c:	pop	{fp, pc}
   11220:	.word	0x00011af3

00011224 <rb_inet_ntop_sock>:
   11224:	push	{fp, lr}
   11228:	mov	fp, sp
   1122c:	sub	sp, sp, #32
   11230:	str	r0, [fp, #-8]
   11234:	str	r1, [fp, #-12]
   11238:	str	r2, [sp, #16]
   1123c:	ldr	r0, [fp, #-8]
   11240:	ldrh	r0, [r0]
   11244:	cmp	r0, #2
   11248:	str	r0, [sp, #12]
   1124c:	beq	11264 <rb_inet_ntop_sock+0x40>
   11250:	b	11254 <rb_inet_ntop_sock+0x30>
   11254:	ldr	r0, [sp, #12]
   11258:	cmp	r0, #10
   1125c:	beq	11290 <rb_inet_ntop_sock+0x6c>
   11260:	b	112bc <rb_inet_ntop_sock+0x98>
   11264:	ldr	r0, [fp, #-8]
   11268:	add	r0, r0, #4
   1126c:	ldr	r2, [fp, #-12]
   11270:	ldr	r3, [sp, #16]
   11274:	movw	r1, #2
   11278:	str	r0, [sp, #8]
   1127c:	mov	r0, r1
   11280:	ldr	r1, [sp, #8]
   11284:	bl	5314 <rb_inet_ntop@plt>
   11288:	str	r0, [fp, #-4]
   1128c:	b	112c4 <rb_inet_ntop_sock+0xa0>
   11290:	ldr	r0, [fp, #-8]
   11294:	add	r0, r0, #8
   11298:	ldr	r2, [fp, #-12]
   1129c:	ldr	r3, [sp, #16]
   112a0:	movw	r1, #10
   112a4:	str	r0, [sp, #4]
   112a8:	mov	r0, r1
   112ac:	ldr	r1, [sp, #4]
   112b0:	bl	5314 <rb_inet_ntop@plt>
   112b4:	str	r0, [fp, #-4]
   112b8:	b	112c4 <rb_inet_ntop_sock+0xa0>
   112bc:	movw	r0, #0
   112c0:	str	r0, [fp, #-4]
   112c4:	ldr	r0, [fp, #-4]
   112c8:	mov	sp, fp
   112cc:	pop	{fp, pc}

000112d0 <rb_inet_ntop>:
   112d0:	push	{fp, lr}
   112d4:	mov	fp, sp
   112d8:	sub	sp, sp, #56	; 0x38
   112dc:	str	r0, [fp, #-8]
   112e0:	str	r1, [fp, #-12]
   112e4:	str	r2, [fp, #-16]
   112e8:	str	r3, [fp, #-20]	; 0xffffffec
   112ec:	ldr	r0, [fp, #-8]
   112f0:	cmp	r0, #2
   112f4:	str	r0, [sp, #16]
   112f8:	beq	11310 <rb_inet_ntop+0x40>
   112fc:	b	11300 <rb_inet_ntop+0x30>
   11300:	ldr	r0, [sp, #16]
   11304:	cmp	r0, #10
   11308:	beq	11328 <rb_inet_ntop+0x58>
   1130c:	b	1145c <rb_inet_ntop+0x18c>
   11310:	ldr	r0, [fp, #-12]
   11314:	ldr	r1, [fp, #-16]
   11318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1131c:	bl	11470 <inet_ntop4>
   11320:	str	r0, [fp, #-4]
   11324:	b	11464 <rb_inet_ntop+0x194>
   11328:	ldr	r0, [fp, #-12]
   1132c:	str	r0, [fp, #-24]	; 0xffffffe8
   11330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11334:	ldr	r0, [r0]
   11338:	cmp	r0, #0
   1133c:	movw	r0, #0
   11340:	str	r0, [sp, #12]
   11344:	bne	1138c <rb_inet_ntop+0xbc>
   11348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1134c:	ldr	r0, [r0, #4]
   11350:	cmp	r0, #0
   11354:	movw	r0, #0
   11358:	str	r0, [sp, #12]
   1135c:	bne	1138c <rb_inet_ntop+0xbc>
   11360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11364:	ldr	r0, [r0, #8]
   11368:	movw	r1, #65535	; 0xffff
   1136c:	str	r0, [sp, #8]
   11370:	mov	r0, r1
   11374:	bl	54e8 <htonl@plt>
   11378:	ldr	r1, [sp, #8]
   1137c:	cmp	r1, r0
   11380:	movw	r0, #0
   11384:	moveq	r0, #1
   11388:	str	r0, [sp, #12]
   1138c:	ldr	r0, [sp, #12]
   11390:	and	r0, r0, #1
   11394:	str	r0, [sp, #28]
   11398:	ldr	r0, [sp, #28]
   1139c:	cmp	r0, #0
   113a0:	bne	11428 <rb_inet_ntop+0x158>
   113a4:	ldr	r0, [fp, #-12]
   113a8:	str	r0, [sp, #24]
   113ac:	ldr	r0, [sp, #24]
   113b0:	ldr	r0, [r0]
   113b4:	cmp	r0, #0
   113b8:	movw	r0, #0
   113bc:	str	r0, [sp, #4]
   113c0:	bne	11410 <rb_inet_ntop+0x140>
   113c4:	ldr	r0, [sp, #24]
   113c8:	ldr	r0, [r0, #4]
   113cc:	cmp	r0, #0
   113d0:	movw	r0, #0
   113d4:	str	r0, [sp, #4]
   113d8:	bne	11410 <rb_inet_ntop+0x140>
   113dc:	ldr	r0, [sp, #24]
   113e0:	ldr	r0, [r0, #8]
   113e4:	cmp	r0, #0
   113e8:	movw	r0, #0
   113ec:	str	r0, [sp, #4]
   113f0:	bne	11410 <rb_inet_ntop+0x140>
   113f4:	ldr	r0, [sp, #24]
   113f8:	ldr	r0, [r0, #12]
   113fc:	bl	5074 <ntohl@plt>
   11400:	cmp	r0, #1
   11404:	movw	r0, #0
   11408:	movhi	r0, #1
   1140c:	str	r0, [sp, #4]
   11410:	ldr	r0, [sp, #4]
   11414:	and	r0, r0, #1
   11418:	str	r0, [sp, #20]
   1141c:	ldr	r0, [sp, #20]
   11420:	cmp	r0, #0
   11424:	beq	11444 <rb_inet_ntop+0x174>
   11428:	ldr	r0, [fp, #-12]
   1142c:	add	r0, r0, #12
   11430:	ldr	r1, [fp, #-16]
   11434:	ldr	r2, [fp, #-20]	; 0xffffffec
   11438:	bl	11470 <inet_ntop4>
   1143c:	str	r0, [fp, #-4]
   11440:	b	11464 <rb_inet_ntop+0x194>
   11444:	ldr	r0, [fp, #-12]
   11448:	ldr	r1, [fp, #-16]
   1144c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11450:	bl	114d8 <inet_ntop6>
   11454:	str	r0, [fp, #-4]
   11458:	b	11464 <rb_inet_ntop+0x194>
   1145c:	movw	r0, #0
   11460:	str	r0, [fp, #-4]
   11464:	ldr	r0, [fp, #-4]
   11468:	mov	sp, fp
   1146c:	pop	{fp, pc}

00011470 <inet_ntop4>:
   11470:	push	{fp, lr}
   11474:	mov	fp, sp
   11478:	sub	sp, sp, #24
   1147c:	str	r0, [fp, #-8]
   11480:	str	r1, [sp, #12]
   11484:	str	r2, [sp, #8]
   11488:	ldr	r0, [sp, #8]
   1148c:	cmp	r0, #16
   11490:	bcs	114a0 <inet_ntop4+0x30>
   11494:	movw	r0, #0
   11498:	str	r0, [fp, #-4]
   1149c:	b	114cc <inet_ntop4+0x5c>
   114a0:	ldr	r0, [sp, #12]
   114a4:	ldr	r1, [fp, #-8]
   114a8:	str	r0, [sp, #4]
   114ac:	mov	r0, r1
   114b0:	bl	1357c <inetntoa>
   114b4:	ldr	r1, [sp, #4]
   114b8:	str	r0, [sp]
   114bc:	mov	r0, r1
   114c0:	ldr	r1, [sp]
   114c4:	bl	5254 <strcpy@plt>
   114c8:	str	r0, [fp, #-4]
   114cc:	ldr	r0, [fp, #-4]
   114d0:	mov	sp, fp
   114d4:	pop	{fp, pc}

000114d8 <inet_ntop6>:
   114d8:	push	{fp, lr}
   114dc:	mov	fp, sp
   114e0:	sub	sp, sp, #136	; 0x88
   114e4:	add	r3, sp, #20
   114e8:	str	r0, [fp, #-8]
   114ec:	str	r1, [fp, #-12]
   114f0:	str	r2, [fp, #-16]
   114f4:	mov	r0, r3
   114f8:	movw	r1, #0
   114fc:	and	r1, r1, #255	; 0xff
   11500:	movw	r2, #32
   11504:	bl	4ff0 <memset@plt>
   11508:	movw	r0, #0
   1150c:	str	r0, [sp, #16]
   11510:	ldr	r0, [sp, #16]
   11514:	cmp	r0, #16
   11518:	bge	11554 <inet_ntop6+0x7c>
   1151c:	ldr	r0, [fp, #-8]
   11520:	ldr	r1, [sp, #16]
   11524:	ldrb	r2, [r0, r1]!
   11528:	ldrb	r0, [r0, #1]
   1152c:	orr	r0, r0, r2, lsl #8
   11530:	add	r1, r1, r1, lsr #31
   11534:	asr	r1, r1, #1
   11538:	add	r2, sp, #20
   1153c:	add	r1, r2, r1, lsl #2
   11540:	str	r0, [r1]
   11544:	ldr	r0, [sp, #16]
   11548:	add	r0, r0, #2
   1154c:	str	r0, [sp, #16]
   11550:	b	11510 <inet_ntop6+0x38>
   11554:	mvn	r0, #0
   11558:	str	r0, [sp, #60]	; 0x3c
   1155c:	movw	r1, #0
   11560:	str	r1, [sp, #64]	; 0x40
   11564:	str	r0, [sp, #52]	; 0x34
   11568:	str	r1, [sp, #56]	; 0x38
   1156c:	str	r1, [sp, #16]
   11570:	ldr	r0, [sp, #16]
   11574:	cmp	r0, #8
   11578:	bge	1161c <inet_ntop6+0x144>
   1157c:	ldr	r0, [sp, #16]
   11580:	add	r1, sp, #20
   11584:	add	r0, r1, r0, lsl #2
   11588:	ldr	r0, [r0]
   1158c:	cmp	r0, #0
   11590:	bne	115c4 <inet_ntop6+0xec>
   11594:	ldr	r0, [sp, #52]	; 0x34
   11598:	cmn	r0, #1
   1159c:	bne	115b4 <inet_ntop6+0xdc>
   115a0:	ldr	r0, [sp, #16]
   115a4:	str	r0, [sp, #52]	; 0x34
   115a8:	movw	r0, #1
   115ac:	str	r0, [sp, #56]	; 0x38
   115b0:	b	115c0 <inet_ntop6+0xe8>
   115b4:	ldr	r0, [sp, #56]	; 0x38
   115b8:	add	r0, r0, #1
   115bc:	str	r0, [sp, #56]	; 0x38
   115c0:	b	11608 <inet_ntop6+0x130>
   115c4:	ldr	r0, [sp, #52]	; 0x34
   115c8:	cmn	r0, #1
   115cc:	beq	11604 <inet_ntop6+0x12c>
   115d0:	ldr	r0, [sp, #60]	; 0x3c
   115d4:	cmn	r0, #1
   115d8:	beq	115ec <inet_ntop6+0x114>
   115dc:	ldr	r0, [sp, #56]	; 0x38
   115e0:	ldr	r1, [sp, #64]	; 0x40
   115e4:	cmp	r0, r1
   115e8:	ble	115fc <inet_ntop6+0x124>
   115ec:	ldr	r0, [sp, #52]	; 0x34
   115f0:	str	r0, [sp, #60]	; 0x3c
   115f4:	ldr	r0, [sp, #56]	; 0x38
   115f8:	str	r0, [sp, #64]	; 0x40
   115fc:	mvn	r0, #0
   11600:	str	r0, [sp, #52]	; 0x34
   11604:	b	11608 <inet_ntop6+0x130>
   11608:	b	1160c <inet_ntop6+0x134>
   1160c:	ldr	r0, [sp, #16]
   11610:	add	r0, r0, #1
   11614:	str	r0, [sp, #16]
   11618:	b	11570 <inet_ntop6+0x98>
   1161c:	ldr	r0, [sp, #52]	; 0x34
   11620:	cmn	r0, #1
   11624:	beq	11658 <inet_ntop6+0x180>
   11628:	ldr	r0, [sp, #60]	; 0x3c
   1162c:	cmn	r0, #1
   11630:	beq	11644 <inet_ntop6+0x16c>
   11634:	ldr	r0, [sp, #56]	; 0x38
   11638:	ldr	r1, [sp, #64]	; 0x40
   1163c:	cmp	r0, r1
   11640:	ble	11654 <inet_ntop6+0x17c>
   11644:	ldr	r0, [sp, #52]	; 0x34
   11648:	str	r0, [sp, #60]	; 0x3c
   1164c:	ldr	r0, [sp, #56]	; 0x38
   11650:	str	r0, [sp, #64]	; 0x40
   11654:	b	11658 <inet_ntop6+0x180>
   11658:	ldr	r0, [sp, #60]	; 0x3c
   1165c:	cmn	r0, #1
   11660:	beq	11678 <inet_ntop6+0x1a0>
   11664:	ldr	r0, [sp, #64]	; 0x40
   11668:	cmp	r0, #2
   1166c:	bge	11678 <inet_ntop6+0x1a0>
   11670:	mvn	r0, #0
   11674:	str	r0, [sp, #60]	; 0x3c
   11678:	sub	r0, fp, #62	; 0x3e
   1167c:	str	r0, [sp, #68]	; 0x44
   11680:	movw	r0, #0
   11684:	str	r0, [sp, #16]
   11688:	ldr	r0, [sp, #16]
   1168c:	cmp	r0, #8
   11690:	bge	11810 <inet_ntop6+0x338>
   11694:	ldr	r0, [sp, #60]	; 0x3c
   11698:	cmn	r0, #1
   1169c:	beq	11710 <inet_ntop6+0x238>
   116a0:	ldr	r0, [sp, #16]
   116a4:	ldr	r1, [sp, #60]	; 0x3c
   116a8:	cmp	r0, r1
   116ac:	blt	11710 <inet_ntop6+0x238>
   116b0:	ldr	r0, [sp, #16]
   116b4:	ldr	r1, [sp, #60]	; 0x3c
   116b8:	ldr	r2, [sp, #64]	; 0x40
   116bc:	add	r1, r1, r2
   116c0:	cmp	r0, r1
   116c4:	bge	11710 <inet_ntop6+0x238>
   116c8:	ldr	r0, [sp, #16]
   116cc:	ldr	r1, [sp, #60]	; 0x3c
   116d0:	cmp	r0, r1
   116d4:	bne	1170c <inet_ntop6+0x234>
   116d8:	ldr	r0, [sp, #16]
   116dc:	cmp	r0, #0
   116e0:	bne	116f8 <inet_ntop6+0x220>
   116e4:	ldr	r0, [sp, #68]	; 0x44
   116e8:	add	r1, r0, #1
   116ec:	str	r1, [sp, #68]	; 0x44
   116f0:	movw	r1, #48	; 0x30
   116f4:	strb	r1, [r0]
   116f8:	ldr	r0, [sp, #68]	; 0x44
   116fc:	add	r1, r0, #1
   11700:	str	r1, [sp, #68]	; 0x44
   11704:	movw	r1, #58	; 0x3a
   11708:	strb	r1, [r0]
   1170c:	b	11800 <inet_ntop6+0x328>
   11710:	ldr	r0, [sp, #16]
   11714:	cmp	r0, #0
   11718:	beq	11730 <inet_ntop6+0x258>
   1171c:	ldr	r0, [sp, #68]	; 0x44
   11720:	add	r1, r0, #1
   11724:	str	r1, [sp, #68]	; 0x44
   11728:	movw	r1, #58	; 0x3a
   1172c:	strb	r1, [r0]
   11730:	ldr	r0, [sp, #16]
   11734:	cmp	r0, #6
   11738:	bne	117d4 <inet_ntop6+0x2fc>
   1173c:	ldr	r0, [sp, #60]	; 0x3c
   11740:	cmp	r0, #0
   11744:	bne	117d4 <inet_ntop6+0x2fc>
   11748:	ldr	r0, [sp, #64]	; 0x40
   1174c:	cmp	r0, #6
   11750:	beq	11770 <inet_ntop6+0x298>
   11754:	ldr	r0, [sp, #64]	; 0x40
   11758:	cmp	r0, #5
   1175c:	bne	117d4 <inet_ntop6+0x2fc>
   11760:	ldr	r0, [sp, #40]	; 0x28
   11764:	movw	r1, #65535	; 0xffff
   11768:	cmp	r0, r1
   1176c:	bne	117d4 <inet_ntop6+0x2fc>
   11770:	sub	r0, fp, #62	; 0x3e
   11774:	ldr	r1, [fp, #-8]
   11778:	add	r1, r1, #12
   1177c:	ldr	r2, [sp, #68]	; 0x44
   11780:	ldr	r3, [sp, #68]	; 0x44
   11784:	sub	r0, r3, r0
   11788:	movw	r3, #46	; 0x2e
   1178c:	sub	r0, r3, r0
   11790:	str	r0, [sp, #12]
   11794:	mov	r0, r1
   11798:	mov	r1, r2
   1179c:	ldr	r2, [sp, #12]
   117a0:	bl	11470 <inet_ntop4>
   117a4:	movw	r1, #0
   117a8:	cmp	r0, r1
   117ac:	bne	117bc <inet_ntop6+0x2e4>
   117b0:	movw	r0, #0
   117b4:	str	r0, [fp, #-4]
   117b8:	b	118ac <inet_ntop6+0x3d4>
   117bc:	ldr	r0, [sp, #68]	; 0x44
   117c0:	bl	51b8 <strlen@plt>
   117c4:	ldr	lr, [sp, #68]	; 0x44
   117c8:	add	r0, lr, r0
   117cc:	str	r0, [sp, #68]	; 0x44
   117d0:	b	11810 <inet_ntop6+0x338>
   117d4:	ldr	r0, [pc, #220]	; 118b8 <inet_ntop6+0x3e0>
   117d8:	add	r1, pc, r0
   117dc:	ldr	r0, [sp, #68]	; 0x44
   117e0:	ldr	r2, [sp, #16]
   117e4:	add	r3, sp, #20
   117e8:	add	r2, r3, r2, lsl #2
   117ec:	ldr	r2, [r2]
   117f0:	bl	56e0 <sprintf@plt>
   117f4:	ldr	r1, [sp, #68]	; 0x44
   117f8:	add	r0, r1, r0
   117fc:	str	r0, [sp, #68]	; 0x44
   11800:	ldr	r0, [sp, #16]
   11804:	add	r0, r0, #1
   11808:	str	r0, [sp, #16]
   1180c:	b	11688 <inet_ntop6+0x1b0>
   11810:	ldr	r0, [sp, #60]	; 0x3c
   11814:	cmn	r0, #1
   11818:	beq	11844 <inet_ntop6+0x36c>
   1181c:	ldr	r0, [sp, #60]	; 0x3c
   11820:	ldr	r1, [sp, #64]	; 0x40
   11824:	add	r0, r0, r1
   11828:	cmp	r0, #8
   1182c:	bne	11844 <inet_ntop6+0x36c>
   11830:	ldr	r0, [sp, #68]	; 0x44
   11834:	add	r1, r0, #1
   11838:	str	r1, [sp, #68]	; 0x44
   1183c:	movw	r1, #58	; 0x3a
   11840:	strb	r1, [r0]
   11844:	sub	r0, fp, #62	; 0x3e
   11848:	ldr	r1, [sp, #68]	; 0x44
   1184c:	add	r2, r1, #1
   11850:	str	r2, [sp, #68]	; 0x44
   11854:	movw	r2, #0
   11858:	strb	r2, [r1]
   1185c:	ldr	r1, [sp, #68]	; 0x44
   11860:	sub	r0, r1, r0
   11864:	ldr	r1, [fp, #-16]
   11868:	cmp	r0, r1
   1186c:	bls	1187c <inet_ntop6+0x3a4>
   11870:	movw	r0, #0
   11874:	str	r0, [fp, #-4]
   11878:	b	118ac <inet_ntop6+0x3d4>
   1187c:	sub	r0, fp, #62	; 0x3e
   11880:	ldr	r1, [fp, #-12]
   11884:	ldr	r2, [sp, #68]	; 0x44
   11888:	sub	r2, r2, r0
   1188c:	str	r0, [sp, #8]
   11890:	mov	r0, r1
   11894:	ldr	r3, [sp, #8]
   11898:	str	r1, [sp, #4]
   1189c:	mov	r1, r3
   118a0:	bl	51dc <memcpy@plt>
   118a4:	ldr	r0, [sp, #4]
   118a8:	str	r0, [fp, #-4]
   118ac:	ldr	r0, [fp, #-4]
   118b0:	mov	sp, fp
   118b4:	pop	{fp, pc}
   118b8:	.word	0x00011948

000118bc <inet_pton4>:
   118bc:	sub	sp, sp, #36	; 0x24
   118c0:	add	r2, sp, #8
   118c4:	str	r0, [sp, #28]
   118c8:	str	r1, [sp, #24]
   118cc:	movw	r0, #0
   118d0:	str	r0, [sp, #20]
   118d4:	str	r0, [sp, #16]
   118d8:	str	r2, [sp, #4]
   118dc:	movw	r0, #0
   118e0:	strb	r0, [sp, #8]
   118e4:	ldr	r0, [sp, #28]
   118e8:	add	r1, r0, #1
   118ec:	str	r1, [sp, #28]
   118f0:	ldrb	r0, [r0]
   118f4:	str	r0, [sp, #12]
   118f8:	cmp	r0, #0
   118fc:	beq	119f8 <inet_pton4+0x13c>
   11900:	ldr	r0, [sp, #12]
   11904:	cmp	r0, #48	; 0x30
   11908:	blt	11994 <inet_pton4+0xd8>
   1190c:	ldr	r0, [sp, #12]
   11910:	cmp	r0, #57	; 0x39
   11914:	bgt	11994 <inet_pton4+0xd8>
   11918:	ldr	r0, [sp, #4]
   1191c:	ldrb	r0, [r0]
   11920:	movw	r1, #10
   11924:	mul	r0, r0, r1
   11928:	ldr	r1, [sp, #12]
   1192c:	sub	r1, r1, #48	; 0x30
   11930:	add	r0, r0, r1
   11934:	str	r0, [sp]
   11938:	ldr	r0, [sp]
   1193c:	cmp	r0, #255	; 0xff
   11940:	bls	11950 <inet_pton4+0x94>
   11944:	movw	r0, #0
   11948:	str	r0, [sp, #32]
   1194c:	b	11a3c <inet_pton4+0x180>
   11950:	ldr	r0, [sp]
   11954:	ldr	r1, [sp, #4]
   11958:	strb	r0, [r1]
   1195c:	ldr	r0, [sp, #20]
   11960:	cmp	r0, #0
   11964:	bne	11990 <inet_pton4+0xd4>
   11968:	ldr	r0, [sp, #16]
   1196c:	add	r0, r0, #1
   11970:	str	r0, [sp, #16]
   11974:	cmp	r0, #4
   11978:	ble	11988 <inet_pton4+0xcc>
   1197c:	movw	r0, #0
   11980:	str	r0, [sp, #32]
   11984:	b	11a3c <inet_pton4+0x180>
   11988:	movw	r0, #1
   1198c:	str	r0, [sp, #20]
   11990:	b	119f4 <inet_pton4+0x138>
   11994:	ldr	r0, [sp, #12]
   11998:	cmp	r0, #46	; 0x2e
   1199c:	bne	119e4 <inet_pton4+0x128>
   119a0:	ldr	r0, [sp, #20]
   119a4:	cmp	r0, #0
   119a8:	beq	119e4 <inet_pton4+0x128>
   119ac:	ldr	r0, [sp, #16]
   119b0:	cmp	r0, #4
   119b4:	bne	119c4 <inet_pton4+0x108>
   119b8:	movw	r0, #0
   119bc:	str	r0, [sp, #32]
   119c0:	b	11a3c <inet_pton4+0x180>
   119c4:	ldr	r0, [sp, #4]
   119c8:	add	r1, r0, #1
   119cc:	str	r1, [sp, #4]
   119d0:	movw	r1, #0
   119d4:	strb	r1, [r0, #1]
   119d8:	movw	r0, #0
   119dc:	str	r0, [sp, #20]
   119e0:	b	119f0 <inet_pton4+0x134>
   119e4:	movw	r0, #0
   119e8:	str	r0, [sp, #32]
   119ec:	b	11a3c <inet_pton4+0x180>
   119f0:	b	119f4 <inet_pton4+0x138>
   119f4:	b	118e4 <inet_pton4+0x28>
   119f8:	ldr	r0, [sp, #16]
   119fc:	cmp	r0, #4
   11a00:	bge	11a10 <inet_pton4+0x154>
   11a04:	movw	r0, #0
   11a08:	str	r0, [sp, #32]
   11a0c:	b	11a3c <inet_pton4+0x180>
   11a10:	ldr	r0, [sp, #24]
   11a14:	ldrb	r1, [sp, #8]
   11a18:	strb	r1, [r0]
   11a1c:	ldrb	r1, [sp, #9]
   11a20:	strb	r1, [r0, #1]
   11a24:	ldrb	r1, [sp, #10]
   11a28:	strb	r1, [r0, #2]
   11a2c:	ldrb	r1, [sp, #11]
   11a30:	strb	r1, [r0, #3]
   11a34:	movw	r0, #1
   11a38:	str	r0, [sp, #32]
   11a3c:	ldr	r0, [sp, #32]
   11a40:	add	sp, sp, #36	; 0x24
   11a44:	bx	lr

00011a48 <inet_pton6>:
   11a48:	push	{fp, lr}
   11a4c:	mov	fp, sp
   11a50:	sub	sp, sp, #72	; 0x48
   11a54:	sub	r2, fp, #28
   11a58:	str	r0, [fp, #-8]
   11a5c:	str	r1, [fp, #-12]
   11a60:	mov	r0, r2
   11a64:	movw	r1, #0
   11a68:	and	r1, r1, #255	; 0xff
   11a6c:	movw	r3, #16
   11a70:	str	r2, [sp]
   11a74:	mov	r2, r3
   11a78:	bl	4ff0 <memset@plt>
   11a7c:	ldr	r0, [sp]
   11a80:	str	r0, [fp, #-32]	; 0xffffffe0
   11a84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11a88:	add	r1, r1, #16
   11a8c:	str	r1, [sp, #36]	; 0x24
   11a90:	movw	r1, #0
   11a94:	str	r1, [sp, #32]
   11a98:	ldr	r1, [fp, #-8]
   11a9c:	ldrb	r1, [r1]
   11aa0:	cmp	r1, #58	; 0x3a
   11aa4:	bne	11ad0 <inet_pton6+0x88>
   11aa8:	ldr	r0, [fp, #-8]
   11aac:	add	r1, r0, #1
   11ab0:	str	r1, [fp, #-8]
   11ab4:	ldrb	r0, [r0, #1]
   11ab8:	cmp	r0, #58	; 0x3a
   11abc:	beq	11acc <inet_pton6+0x84>
   11ac0:	movw	r0, #0
   11ac4:	str	r0, [fp, #-4]
   11ac8:	b	11e84 <inet_pton6+0x43c>
   11acc:	b	11ad0 <inet_pton6+0x88>
   11ad0:	ldr	r0, [fp, #-8]
   11ad4:	str	r0, [sp, #28]
   11ad8:	movw	r0, #0
   11adc:	str	r0, [sp, #20]
   11ae0:	str	r0, [sp, #16]
   11ae4:	ldr	r0, [fp, #-8]
   11ae8:	add	r1, r0, #1
   11aec:	str	r1, [fp, #-8]
   11af0:	ldrb	r0, [r0]
   11af4:	bl	56a4 <tolower@plt>
   11af8:	str	r0, [sp, #24]
   11afc:	cmp	r0, #0
   11b00:	beq	11cbc <inet_pton6+0x274>
   11b04:	ldr	r0, [pc, #900]	; 11e90 <inet_pton6+0x448>
   11b08:	add	r0, pc, r0
   11b0c:	ldr	r1, [sp, #24]
   11b10:	bl	4f78 <strchr@plt>
   11b14:	str	r0, [sp, #12]
   11b18:	ldr	r0, [sp, #12]
   11b1c:	movw	r1, #0
   11b20:	cmp	r0, r1
   11b24:	beq	11b78 <inet_pton6+0x130>
   11b28:	ldr	r0, [pc, #868]	; 11e94 <inet_pton6+0x44c>
   11b2c:	add	r0, pc, r0
   11b30:	ldr	r1, [sp, #16]
   11b34:	lsl	r1, r1, #4
   11b38:	str	r1, [sp, #16]
   11b3c:	ldr	r1, [sp, #12]
   11b40:	sub	r0, r1, r0
   11b44:	ldr	r1, [sp, #16]
   11b48:	orr	r0, r1, r0
   11b4c:	str	r0, [sp, #16]
   11b50:	ldr	r0, [sp, #16]
   11b54:	movw	r1, #65535	; 0xffff
   11b58:	cmp	r0, r1
   11b5c:	bls	11b6c <inet_pton6+0x124>
   11b60:	movw	r0, #0
   11b64:	str	r0, [fp, #-4]
   11b68:	b	11e84 <inet_pton6+0x43c>
   11b6c:	movw	r0, #1
   11b70:	str	r0, [sp, #20]
   11b74:	b	11ae4 <inet_pton6+0x9c>
   11b78:	ldr	r0, [sp, #24]
   11b7c:	cmp	r0, #58	; 0x3a
   11b80:	bne	11c4c <inet_pton6+0x204>
   11b84:	ldr	r0, [fp, #-8]
   11b88:	str	r0, [sp, #28]
   11b8c:	ldr	r0, [sp, #20]
   11b90:	cmp	r0, #0
   11b94:	bne	11bc0 <inet_pton6+0x178>
   11b98:	ldr	r0, [sp, #32]
   11b9c:	movw	r1, #0
   11ba0:	cmp	r0, r1
   11ba4:	beq	11bb4 <inet_pton6+0x16c>
   11ba8:	movw	r0, #0
   11bac:	str	r0, [fp, #-4]
   11bb0:	b	11e84 <inet_pton6+0x43c>
   11bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bb8:	str	r0, [sp, #32]
   11bbc:	b	11ae4 <inet_pton6+0x9c>
   11bc0:	ldr	r0, [fp, #-8]
   11bc4:	ldrb	r0, [r0]
   11bc8:	cmp	r0, #0
   11bcc:	bne	11bdc <inet_pton6+0x194>
   11bd0:	movw	r0, #0
   11bd4:	str	r0, [fp, #-4]
   11bd8:	b	11e84 <inet_pton6+0x43c>
   11bdc:	b	11be0 <inet_pton6+0x198>
   11be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11be4:	add	r0, r0, #2
   11be8:	ldr	r1, [sp, #36]	; 0x24
   11bec:	cmp	r0, r1
   11bf0:	bls	11c00 <inet_pton6+0x1b8>
   11bf4:	movw	r0, #0
   11bf8:	str	r0, [fp, #-4]
   11bfc:	b	11e84 <inet_pton6+0x43c>
   11c00:	ldr	r0, [sp, #16]
   11c04:	lsr	r0, r0, #8
   11c08:	and	r0, r0, #255	; 0xff
   11c0c:	and	r0, r0, #255	; 0xff
   11c10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c14:	add	r2, r1, #1
   11c18:	str	r2, [fp, #-32]	; 0xffffffe0
   11c1c:	strb	r0, [r1]
   11c20:	ldr	r0, [sp, #16]
   11c24:	and	r0, r0, #255	; 0xff
   11c28:	and	r0, r0, #255	; 0xff
   11c2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c30:	add	r2, r1, #1
   11c34:	str	r2, [fp, #-32]	; 0xffffffe0
   11c38:	strb	r0, [r1]
   11c3c:	movw	r0, #0
   11c40:	str	r0, [sp, #20]
   11c44:	str	r0, [sp, #16]
   11c48:	b	11ae4 <inet_pton6+0x9c>
   11c4c:	ldr	r0, [fp, #-8]
   11c50:	ldrb	r0, [r0]
   11c54:	cmp	r0, #0
   11c58:	beq	11cac <inet_pton6+0x264>
   11c5c:	ldr	r0, [sp, #24]
   11c60:	cmp	r0, #46	; 0x2e
   11c64:	bne	11cac <inet_pton6+0x264>
   11c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c6c:	add	r0, r0, #4
   11c70:	ldr	r1, [sp, #36]	; 0x24
   11c74:	cmp	r0, r1
   11c78:	bhi	11ca8 <inet_pton6+0x260>
   11c7c:	ldr	r0, [sp, #28]
   11c80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11c84:	bl	118bc <inet_pton4>
   11c88:	cmp	r0, #0
   11c8c:	ble	11ca8 <inet_pton6+0x260>
   11c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c94:	add	r0, r0, #4
   11c98:	str	r0, [fp, #-32]	; 0xffffffe0
   11c9c:	movw	r0, #0
   11ca0:	str	r0, [sp, #20]
   11ca4:	b	11cbc <inet_pton6+0x274>
   11ca8:	b	11cb0 <inet_pton6+0x268>
   11cac:	b	11ae4 <inet_pton6+0x9c>
   11cb0:	movw	r0, #0
   11cb4:	str	r0, [fp, #-4]
   11cb8:	b	11e84 <inet_pton6+0x43c>
   11cbc:	ldr	r0, [sp, #20]
   11cc0:	cmp	r0, #0
   11cc4:	beq	11d24 <inet_pton6+0x2dc>
   11cc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ccc:	add	r0, r0, #2
   11cd0:	ldr	r1, [sp, #36]	; 0x24
   11cd4:	cmp	r0, r1
   11cd8:	bls	11ce8 <inet_pton6+0x2a0>
   11cdc:	movw	r0, #0
   11ce0:	str	r0, [fp, #-4]
   11ce4:	b	11e84 <inet_pton6+0x43c>
   11ce8:	ldr	r0, [sp, #16]
   11cec:	lsr	r0, r0, #8
   11cf0:	and	r0, r0, #255	; 0xff
   11cf4:	and	r0, r0, #255	; 0xff
   11cf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11cfc:	add	r2, r1, #1
   11d00:	str	r2, [fp, #-32]	; 0xffffffe0
   11d04:	strb	r0, [r1]
   11d08:	ldr	r0, [sp, #16]
   11d0c:	and	r0, r0, #255	; 0xff
   11d10:	and	r0, r0, #255	; 0xff
   11d14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d18:	add	r2, r1, #1
   11d1c:	str	r2, [fp, #-32]	; 0xffffffe0
   11d20:	strb	r0, [r1]
   11d24:	ldr	r0, [sp, #32]
   11d28:	movw	r1, #0
   11d2c:	cmp	r0, r1
   11d30:	beq	11ddc <inet_pton6+0x394>
   11d34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d38:	ldr	r1, [sp, #32]
   11d3c:	sub	r0, r0, r1
   11d40:	str	r0, [sp, #8]
   11d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d48:	ldr	r1, [sp, #36]	; 0x24
   11d4c:	cmp	r0, r1
   11d50:	bne	11d60 <inet_pton6+0x318>
   11d54:	movw	r0, #0
   11d58:	str	r0, [fp, #-4]
   11d5c:	b	11e84 <inet_pton6+0x43c>
   11d60:	movw	r0, #1
   11d64:	str	r0, [sp, #4]
   11d68:	ldr	r0, [sp, #4]
   11d6c:	ldr	r1, [sp, #8]
   11d70:	cmp	r0, r1
   11d74:	bgt	11dd4 <inet_pton6+0x38c>
   11d78:	ldr	r0, [sp, #32]
   11d7c:	ldr	r1, [sp, #8]
   11d80:	ldr	r2, [sp, #4]
   11d84:	sub	r1, r1, r2
   11d88:	add	r0, r0, r1
   11d8c:	ldrb	r0, [r0]
   11d90:	ldr	r1, [sp, #36]	; 0x24
   11d94:	ldr	r2, [sp, #4]
   11d98:	movw	r3, #0
   11d9c:	sub	r2, r3, r2
   11da0:	add	r1, r1, r2
   11da4:	strb	r0, [r1]
   11da8:	ldr	r0, [sp, #32]
   11dac:	ldr	r1, [sp, #8]
   11db0:	ldr	r2, [sp, #4]
   11db4:	sub	r1, r1, r2
   11db8:	add	r0, r0, r1
   11dbc:	movw	r1, #0
   11dc0:	strb	r1, [r0]
   11dc4:	ldr	r0, [sp, #4]
   11dc8:	add	r0, r0, #1
   11dcc:	str	r0, [sp, #4]
   11dd0:	b	11d68 <inet_pton6+0x320>
   11dd4:	ldr	r0, [sp, #36]	; 0x24
   11dd8:	str	r0, [fp, #-32]	; 0xffffffe0
   11ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11de0:	ldr	r1, [sp, #36]	; 0x24
   11de4:	cmp	r0, r1
   11de8:	beq	11df8 <inet_pton6+0x3b0>
   11dec:	movw	r0, #0
   11df0:	str	r0, [fp, #-4]
   11df4:	b	11e84 <inet_pton6+0x43c>
   11df8:	ldr	r0, [fp, #-12]
   11dfc:	ldrb	r1, [fp, #-28]	; 0xffffffe4
   11e00:	strb	r1, [r0]
   11e04:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   11e08:	strb	r1, [r0, #1]
   11e0c:	ldrb	r1, [fp, #-26]	; 0xffffffe6
   11e10:	strb	r1, [r0, #2]
   11e14:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   11e18:	strb	r1, [r0, #3]
   11e1c:	ldrb	r1, [fp, #-24]	; 0xffffffe8
   11e20:	strb	r1, [r0, #4]
   11e24:	ldrb	r1, [fp, #-23]	; 0xffffffe9
   11e28:	strb	r1, [r0, #5]
   11e2c:	ldrb	r1, [fp, #-22]	; 0xffffffea
   11e30:	strb	r1, [r0, #6]
   11e34:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   11e38:	strb	r1, [r0, #7]
   11e3c:	ldrb	r1, [fp, #-20]	; 0xffffffec
   11e40:	strb	r1, [r0, #8]
   11e44:	ldrb	r1, [fp, #-19]	; 0xffffffed
   11e48:	strb	r1, [r0, #9]
   11e4c:	ldrb	r1, [fp, #-18]	; 0xffffffee
   11e50:	strb	r1, [r0, #10]
   11e54:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11e58:	strb	r1, [r0, #11]
   11e5c:	ldrb	r1, [fp, #-16]
   11e60:	strb	r1, [r0, #12]
   11e64:	ldrb	r1, [fp, #-15]
   11e68:	strb	r1, [r0, #13]
   11e6c:	ldrb	r1, [fp, #-14]
   11e70:	strb	r1, [r0, #14]
   11e74:	ldrb	r1, [fp, #-13]
   11e78:	strb	r1, [r0, #15]
   11e7c:	movw	r0, #1
   11e80:	str	r0, [fp, #-4]
   11e84:	ldr	r0, [fp, #-4]
   11e88:	mov	sp, fp
   11e8c:	pop	{fp, pc}
   11e90:	.word	0x00011620
   11e94:	.word	0x000115fc

00011e98 <rb_get_iotype>:
   11e98:	ldr	r0, [pc, #4]	; 11ea4 <rb_get_iotype+0xc>
   11e9c:	add	r0, pc, r0
   11ea0:	bx	lr
   11ea4:	.word	0x00036000

00011ea8 <rb_io_sched_event>:
   11ea8:	push	{fp, lr}
   11eac:	mov	fp, sp
   11eb0:	sub	sp, sp, #16
   11eb4:	str	r0, [sp, #8]
   11eb8:	str	r1, [sp, #4]
   11ebc:	ldr	r0, [sp, #8]
   11ec0:	movw	r1, #0
   11ec4:	cmp	r0, r1
   11ec8:	beq	11f14 <rb_io_sched_event+0x6c>
   11ecc:	ldr	r0, [pc, #132]	; 11f58 <rb_io_sched_event+0xb0>
   11ed0:	add	r0, pc, r0
   11ed4:	ldr	r0, [r0]
   11ed8:	movw	r1, #0
   11edc:	cmp	r0, r1
   11ee0:	beq	11f14 <rb_io_sched_event+0x6c>
   11ee4:	ldr	r0, [pc, #112]	; 11f5c <rb_io_sched_event+0xb4>
   11ee8:	add	r0, pc, r0
   11eec:	ldr	r0, [r0]
   11ef0:	movw	r1, #0
   11ef4:	cmp	r0, r1
   11ef8:	beq	11f14 <rb_io_sched_event+0x6c>
   11efc:	ldr	r0, [pc, #92]	; 11f60 <rb_io_sched_event+0xb8>
   11f00:	add	r0, pc, r0
   11f04:	ldr	r0, [r0]
   11f08:	blx	r0
   11f0c:	cmp	r0, #0
   11f10:	bne	11f20 <rb_io_sched_event+0x78>
   11f14:	movw	r0, #0
   11f18:	str	r0, [fp, #-4]
   11f1c:	b	11f4c <rb_io_sched_event+0xa4>
   11f20:	ldr	r0, [pc, #60]	; 11f64 <rb_io_sched_event+0xbc>
   11f24:	add	r0, pc, r0
   11f28:	ldr	r0, [r0]
   11f2c:	ldr	r1, [sp, #8]
   11f30:	ldr	r2, [sp, #4]
   11f34:	str	r0, [sp]
   11f38:	mov	r0, r1
   11f3c:	mov	r1, r2
   11f40:	ldr	r2, [sp]
   11f44:	blx	r2
   11f48:	str	r0, [fp, #-4]
   11f4c:	ldr	r0, [fp, #-4]
   11f50:	mov	sp, fp
   11f54:	pop	{fp, pc}
   11f58:	.word	0x00035fe8
   11f5c:	.word	0x00035fd4
   11f60:	.word	0x00035fb8
   11f64:	.word	0x00035f98

00011f68 <rb_io_unsched_event>:
   11f68:	push	{fp, lr}
   11f6c:	mov	fp, sp
   11f70:	sub	sp, sp, #8
   11f74:	str	r0, [sp, #4]
   11f78:	ldr	r0, [sp, #4]
   11f7c:	movw	r1, #0
   11f80:	cmp	r0, r1
   11f84:	beq	11fd0 <rb_io_unsched_event+0x68>
   11f88:	ldr	r0, [pc, #108]	; 11ffc <rb_io_unsched_event+0x94>
   11f8c:	add	r0, pc, r0
   11f90:	ldr	r0, [r0]
   11f94:	movw	r1, #0
   11f98:	cmp	r0, r1
   11f9c:	beq	11fd0 <rb_io_unsched_event+0x68>
   11fa0:	ldr	r0, [pc, #88]	; 12000 <rb_io_unsched_event+0x98>
   11fa4:	add	r0, pc, r0
   11fa8:	ldr	r0, [r0]
   11fac:	movw	r1, #0
   11fb0:	cmp	r0, r1
   11fb4:	beq	11fd0 <rb_io_unsched_event+0x68>
   11fb8:	ldr	r0, [pc, #68]	; 12004 <rb_io_unsched_event+0x9c>
   11fbc:	add	r0, pc, r0
   11fc0:	ldr	r0, [r0]
   11fc4:	blx	r0
   11fc8:	cmp	r0, #0
   11fcc:	bne	11fd4 <rb_io_unsched_event+0x6c>
   11fd0:	b	11ff4 <rb_io_unsched_event+0x8c>
   11fd4:	ldr	r0, [pc, #44]	; 12008 <rb_io_unsched_event+0xa0>
   11fd8:	add	r0, pc, r0
   11fdc:	ldr	r0, [r0]
   11fe0:	ldr	r1, [sp, #4]
   11fe4:	str	r0, [sp]
   11fe8:	mov	r0, r1
   11fec:	ldr	r1, [sp]
   11ff0:	blx	r1
   11ff4:	mov	sp, fp
   11ff8:	pop	{fp, pc}
   11ffc:	.word	0x00035f2c
   12000:	.word	0x00035f1c
   12004:	.word	0x00035efc
   12008:	.word	0x00035ee8

0001200c <rb_io_supports_event>:
   1200c:	push	{fp, lr}
   12010:	mov	fp, sp
   12014:	sub	sp, sp, #8
   12018:	ldr	r0, [pc, #60]	; 1205c <rb_io_supports_event+0x50>
   1201c:	add	r0, pc, r0
   12020:	ldr	r0, [r0]
   12024:	movw	r1, #0
   12028:	cmp	r0, r1
   1202c:	bne	1203c <rb_io_supports_event+0x30>
   12030:	movw	r0, #0
   12034:	str	r0, [sp, #4]
   12038:	b	12050 <rb_io_supports_event+0x44>
   1203c:	ldr	r0, [pc, #28]	; 12060 <rb_io_supports_event+0x54>
   12040:	add	r0, pc, r0
   12044:	ldr	r0, [r0]
   12048:	blx	r0
   1204c:	str	r0, [sp, #4]
   12050:	ldr	r0, [sp, #4]
   12054:	mov	sp, fp
   12058:	pop	{fp, pc}
   1205c:	.word	0x00035e9c
   12060:	.word	0x00035e78

00012064 <rb_io_init_event>:
   12064:	push	{fp, lr}
   12068:	mov	fp, sp
   1206c:	ldr	r0, [pc, #16]	; 12084 <rb_io_init_event+0x20>
   12070:	add	r0, pc, r0
   12074:	ldr	r0, [r0]
   12078:	blx	r0
   1207c:	bl	159cc <rb_event_io_register_all>
   12080:	pop	{fp, pc}
   12084:	.word	0x00035e54

00012088 <rb_init_netio>:
   12088:	push	{fp, lr}
   1208c:	mov	fp, sp
   12090:	sub	sp, sp, #8
   12094:	ldr	r0, [pc, #588]	; 122e8 <rb_init_netio+0x260>
   12098:	add	r0, pc, r0
   1209c:	bl	4f60 <getenv@plt>
   120a0:	str	r0, [sp, #4]
   120a4:	movw	r0, #49152	; 0xc000
   120a8:	bl	f098 <rb_malloc>
   120ac:	ldr	lr, [pc, #560]	; 122e4 <rb_init_netio+0x25c>
   120b0:	ldr	lr, [pc, lr]
   120b4:	str	r0, [lr]
   120b8:	bl	138d8 <rb_init_ssl>
   120bc:	ldr	lr, [sp, #4]
   120c0:	movw	r1, #0
   120c4:	cmp	lr, r1
   120c8:	str	r0, [sp]
   120cc:	beq	1224c <rb_init_netio+0x1c4>
   120d0:	ldr	r1, [sp, #4]
   120d4:	ldr	r0, [pc, #532]	; 122f0 <rb_init_netio+0x268>
   120d8:	add	r0, pc, r0
   120dc:	bl	56bc <strcmp@plt>
   120e0:	cmp	r0, #0
   120e4:	bne	120fc <rb_init_netio+0x74>
   120e8:	bl	12310 <try_epoll>
   120ec:	cmp	r0, #0
   120f0:	bne	120f8 <rb_init_netio+0x70>
   120f4:	b	122dc <rb_init_netio+0x254>
   120f8:	b	1221c <rb_init_netio+0x194>
   120fc:	ldr	r1, [sp, #4]
   12100:	ldr	r0, [pc, #492]	; 122f4 <rb_init_netio+0x26c>
   12104:	add	r0, pc, r0
   12108:	bl	56bc <strcmp@plt>
   1210c:	cmp	r0, #0
   12110:	bne	12128 <rb_init_netio+0xa0>
   12114:	bl	12458 <try_kqueue>
   12118:	cmp	r0, #0
   1211c:	bne	12124 <rb_init_netio+0x9c>
   12120:	b	122dc <rb_init_netio+0x254>
   12124:	b	12218 <rb_init_netio+0x190>
   12128:	ldr	r1, [sp, #4]
   1212c:	ldr	r0, [pc, #452]	; 122f8 <rb_init_netio+0x270>
   12130:	add	r0, pc, r0
   12134:	bl	56bc <strcmp@plt>
   12138:	cmp	r0, #0
   1213c:	bne	12154 <rb_init_netio+0xcc>
   12140:	bl	125a0 <try_ports>
   12144:	cmp	r0, #0
   12148:	bne	12150 <rb_init_netio+0xc8>
   1214c:	b	122dc <rb_init_netio+0x254>
   12150:	b	12214 <rb_init_netio+0x18c>
   12154:	ldr	r1, [sp, #4]
   12158:	ldr	r0, [pc, #412]	; 122fc <rb_init_netio+0x274>
   1215c:	add	r0, pc, r0
   12160:	bl	56bc <strcmp@plt>
   12164:	cmp	r0, #0
   12168:	bne	12180 <rb_init_netio+0xf8>
   1216c:	bl	126e8 <try_poll>
   12170:	cmp	r0, #0
   12174:	bne	1217c <rb_init_netio+0xf4>
   12178:	b	122dc <rb_init_netio+0x254>
   1217c:	b	12210 <rb_init_netio+0x188>
   12180:	ldr	r1, [sp, #4]
   12184:	ldr	r0, [pc, #372]	; 12300 <rb_init_netio+0x278>
   12188:	add	r0, pc, r0
   1218c:	bl	56bc <strcmp@plt>
   12190:	cmp	r0, #0
   12194:	bne	121ac <rb_init_netio+0x124>
   12198:	bl	127e8 <try_devpoll>
   1219c:	cmp	r0, #0
   121a0:	bne	121a8 <rb_init_netio+0x120>
   121a4:	b	122dc <rb_init_netio+0x254>
   121a8:	b	1220c <rb_init_netio+0x184>
   121ac:	ldr	r1, [sp, #4]
   121b0:	ldr	r0, [pc, #332]	; 12304 <rb_init_netio+0x27c>
   121b4:	add	r0, pc, r0
   121b8:	bl	56bc <strcmp@plt>
   121bc:	cmp	r0, #0
   121c0:	bne	121d8 <rb_init_netio+0x150>
   121c4:	bl	128e8 <try_sigio>
   121c8:	cmp	r0, #0
   121cc:	bne	121d4 <rb_init_netio+0x14c>
   121d0:	b	122dc <rb_init_netio+0x254>
   121d4:	b	12208 <rb_init_netio+0x180>
   121d8:	ldr	r1, [sp, #4]
   121dc:	ldr	r0, [pc, #292]	; 12308 <rb_init_netio+0x280>
   121e0:	add	r0, pc, r0
   121e4:	bl	56bc <strcmp@plt>
   121e8:	cmp	r0, #0
   121ec:	bne	12204 <rb_init_netio+0x17c>
   121f0:	bl	12a30 <try_select>
   121f4:	cmp	r0, #0
   121f8:	bne	12200 <rb_init_netio+0x178>
   121fc:	b	122dc <rb_init_netio+0x254>
   12200:	b	12204 <rb_init_netio+0x17c>
   12204:	b	12208 <rb_init_netio+0x180>
   12208:	b	1220c <rb_init_netio+0x184>
   1220c:	b	12210 <rb_init_netio+0x188>
   12210:	b	12214 <rb_init_netio+0x18c>
   12214:	b	12218 <rb_init_netio+0x190>
   12218:	b	1221c <rb_init_netio+0x194>
   1221c:	ldr	r1, [sp, #4]
   12220:	ldr	r0, [pc, #228]	; 1230c <rb_init_netio+0x284>
   12224:	add	r0, pc, r0
   12228:	bl	56bc <strcmp@plt>
   1222c:	cmp	r0, #0
   12230:	bne	12248 <rb_init_netio+0x1c0>
   12234:	bl	12b30 <try_win32>
   12238:	cmp	r0, #0
   1223c:	bne	12244 <rb_init_netio+0x1bc>
   12240:	b	122dc <rb_init_netio+0x254>
   12244:	b	12248 <rb_init_netio+0x1c0>
   12248:	b	1224c <rb_init_netio+0x1c4>
   1224c:	bl	12458 <try_kqueue>
   12250:	cmp	r0, #0
   12254:	bne	1225c <rb_init_netio+0x1d4>
   12258:	b	122dc <rb_init_netio+0x254>
   1225c:	bl	12310 <try_epoll>
   12260:	cmp	r0, #0
   12264:	bne	1226c <rb_init_netio+0x1e4>
   12268:	b	122dc <rb_init_netio+0x254>
   1226c:	bl	125a0 <try_ports>
   12270:	cmp	r0, #0
   12274:	bne	1227c <rb_init_netio+0x1f4>
   12278:	b	122dc <rb_init_netio+0x254>
   1227c:	bl	127e8 <try_devpoll>
   12280:	cmp	r0, #0
   12284:	bne	1228c <rb_init_netio+0x204>
   12288:	b	122dc <rb_init_netio+0x254>
   1228c:	bl	128e8 <try_sigio>
   12290:	cmp	r0, #0
   12294:	bne	1229c <rb_init_netio+0x214>
   12298:	b	122dc <rb_init_netio+0x254>
   1229c:	bl	126e8 <try_poll>
   122a0:	cmp	r0, #0
   122a4:	bne	122ac <rb_init_netio+0x224>
   122a8:	b	122dc <rb_init_netio+0x254>
   122ac:	bl	12b30 <try_win32>
   122b0:	cmp	r0, #0
   122b4:	bne	122bc <rb_init_netio+0x234>
   122b8:	b	122dc <rb_init_netio+0x254>
   122bc:	bl	12a30 <try_select>
   122c0:	cmp	r0, #0
   122c4:	bne	122cc <rb_init_netio+0x244>
   122c8:	b	122dc <rb_init_netio+0x254>
   122cc:	ldr	r0, [pc, #24]	; 122ec <rb_init_netio+0x264>
   122d0:	add	r0, pc, r0
   122d4:	bl	52e4 <rb_lib_log@plt>
   122d8:	bl	4d80 <abort@plt>
   122dc:	mov	sp, fp
   122e0:	pop	{fp, pc}
   122e4:	.word	0x00023310
   122e8:	.word	0x00010c2d
   122ec:	.word	0x00010a34
   122f0:	.word	0x00010bfe
   122f4:	.word	0x00010bd8
   122f8:	.word	0x00010bb3
   122fc:	.word	0x00010b7b
   12300:	.word	0x00010b61
   12304:	.word	0x00010b3d
   12308:	.word	0x00010b17
   1230c:	.word	0x00010ada

00012310 <try_epoll>:
   12310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12314:	add	fp, sp, #28
   12318:	sub	sp, sp, #28
   1231c:	bl	196d8 <rb_init_netio_epoll>
   12320:	cmp	r0, #0
   12324:	bne	12404 <try_epoll+0xf4>
   12328:	ldr	r0, [pc, #232]	; 12418 <try_epoll+0x108>
   1232c:	add	r0, pc, r0
   12330:	ldr	r1, [pc, #228]	; 1241c <try_epoll+0x10c>
   12334:	add	r1, pc, r1
   12338:	ldr	r2, [pc, #224]	; 12420 <try_epoll+0x110>
   1233c:	ldr	r2, [pc, r2]
   12340:	ldr	r3, [pc, #220]	; 12424 <try_epoll+0x114>
   12344:	add	r3, pc, r3
   12348:	ldr	ip, [pc, #216]	; 12428 <try_epoll+0x118>
   1234c:	ldr	ip, [pc, ip]
   12350:	ldr	lr, [pc, #212]	; 1242c <try_epoll+0x11c>
   12354:	add	lr, pc, lr
   12358:	ldr	r4, [pc, #208]	; 12430 <try_epoll+0x120>
   1235c:	ldr	r4, [pc, r4]
   12360:	ldr	r5, [pc, #204]	; 12434 <try_epoll+0x124>
   12364:	add	r5, pc, r5
   12368:	ldr	r6, [pc, #200]	; 12438 <try_epoll+0x128>
   1236c:	ldr	r6, [pc, r6]
   12370:	ldr	r7, [pc, #196]	; 1243c <try_epoll+0x12c>
   12374:	add	r7, pc, r7
   12378:	ldr	r8, [pc, #192]	; 12440 <try_epoll+0x130>
   1237c:	ldr	r8, [pc, r8]
   12380:	ldr	r9, [pc, #188]	; 12444 <try_epoll+0x134>
   12384:	add	r9, pc, r9
   12388:	ldr	sl, [pc, #184]	; 12448 <try_epoll+0x138>
   1238c:	ldr	sl, [pc, sl]
   12390:	str	r0, [sp, #20]
   12394:	ldr	r0, [pc, #176]	; 1244c <try_epoll+0x13c>
   12398:	add	r0, pc, r0
   1239c:	str	r0, [sp, #16]
   123a0:	ldr	r0, [pc, #168]	; 12450 <try_epoll+0x140>
   123a4:	ldr	r0, [pc, r0]
   123a8:	str	r0, [sp, #12]
   123ac:	ldr	r0, [pc, #160]	; 12454 <try_epoll+0x144>
   123b0:	add	r0, pc, r0
   123b4:	str	r0, [sp, #8]
   123b8:	ldr	r0, [sp, #12]
   123bc:	str	r1, [sp, #4]
   123c0:	ldr	r1, [sp, #8]
   123c4:	str	r0, [r1]
   123c8:	ldr	r0, [sp, #16]
   123cc:	str	sl, [r0]
   123d0:	str	r8, [r9]
   123d4:	str	r6, [r7]
   123d8:	str	r4, [r5]
   123dc:	str	ip, [lr]
   123e0:	str	r2, [r3]
   123e4:	ldr	r0, [sp, #20]
   123e8:	ldr	r1, [sp, #4]
   123ec:	movw	r2, #25
   123f0:	bl	5068 <rb_strlcpy@plt>
   123f4:	movw	r1, #0
   123f8:	str	r1, [sp, #24]
   123fc:	str	r0, [sp]
   12400:	b	1240c <try_epoll+0xfc>
   12404:	mvn	r0, #0
   12408:	str	r0, [sp, #24]
   1240c:	ldr	r0, [sp, #24]
   12410:	sub	sp, fp, #28
   12414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12418:	.word	0x00035b70
   1241c:	.word	0x000109a2
   12420:	.word	0x000230dc
   12424:	.word	0x00035b80
   12428:	.word	0x0002300c
   1242c:	.word	0x00035b64
   12430:	.word	0x00023068
   12434:	.word	0x00035b5c
   12438:	.word	0x00023018
   1243c:	.word	0x00035b48
   12440:	.word	0x00023088
   12444:	.word	0x00035b4c
   12448:	.word	0x0002303c
   1244c:	.word	0x00035b34
   12450:	.word	0x00022fc4
   12454:	.word	0x00035b18

00012458 <try_kqueue>:
   12458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1245c:	add	fp, sp, #28
   12460:	sub	sp, sp, #28
   12464:	bl	1ca90 <rb_init_netio_kqueue>
   12468:	cmp	r0, #0
   1246c:	bne	1254c <try_kqueue+0xf4>
   12470:	ldr	r0, [pc, #232]	; 12560 <try_kqueue+0x108>
   12474:	add	r0, pc, r0
   12478:	ldr	r1, [pc, #228]	; 12564 <try_kqueue+0x10c>
   1247c:	add	r1, pc, r1
   12480:	ldr	r2, [pc, #224]	; 12568 <try_kqueue+0x110>
   12484:	ldr	r2, [pc, r2]
   12488:	ldr	r3, [pc, #220]	; 1256c <try_kqueue+0x114>
   1248c:	add	r3, pc, r3
   12490:	ldr	ip, [pc, #216]	; 12570 <try_kqueue+0x118>
   12494:	ldr	ip, [pc, ip]
   12498:	ldr	lr, [pc, #212]	; 12574 <try_kqueue+0x11c>
   1249c:	add	lr, pc, lr
   124a0:	ldr	r4, [pc, #208]	; 12578 <try_kqueue+0x120>
   124a4:	ldr	r4, [pc, r4]
   124a8:	ldr	r5, [pc, #204]	; 1257c <try_kqueue+0x124>
   124ac:	add	r5, pc, r5
   124b0:	ldr	r6, [pc, #200]	; 12580 <try_kqueue+0x128>
   124b4:	ldr	r6, [pc, r6]
   124b8:	ldr	r7, [pc, #196]	; 12584 <try_kqueue+0x12c>
   124bc:	add	r7, pc, r7
   124c0:	ldr	r8, [pc, #192]	; 12588 <try_kqueue+0x130>
   124c4:	ldr	r8, [pc, r8]
   124c8:	ldr	r9, [pc, #188]	; 1258c <try_kqueue+0x134>
   124cc:	add	r9, pc, r9
   124d0:	ldr	sl, [pc, #184]	; 12590 <try_kqueue+0x138>
   124d4:	ldr	sl, [pc, sl]
   124d8:	str	r0, [sp, #20]
   124dc:	ldr	r0, [pc, #176]	; 12594 <try_kqueue+0x13c>
   124e0:	add	r0, pc, r0
   124e4:	str	r0, [sp, #16]
   124e8:	ldr	r0, [pc, #168]	; 12598 <try_kqueue+0x140>
   124ec:	ldr	r0, [pc, r0]
   124f0:	str	r0, [sp, #12]
   124f4:	ldr	r0, [pc, #160]	; 1259c <try_kqueue+0x144>
   124f8:	add	r0, pc, r0
   124fc:	str	r0, [sp, #8]
   12500:	ldr	r0, [sp, #12]
   12504:	str	r1, [sp, #4]
   12508:	ldr	r1, [sp, #8]
   1250c:	str	r0, [r1]
   12510:	ldr	r0, [sp, #16]
   12514:	str	sl, [r0]
   12518:	str	r8, [r9]
   1251c:	str	r6, [r7]
   12520:	str	r4, [r5]
   12524:	str	ip, [lr]
   12528:	str	r2, [r3]
   1252c:	ldr	r0, [sp, #20]
   12530:	ldr	r1, [sp, #4]
   12534:	movw	r2, #25
   12538:	bl	5068 <rb_strlcpy@plt>
   1253c:	movw	r1, #0
   12540:	str	r1, [sp, #24]
   12544:	str	r0, [sp]
   12548:	b	12554 <try_kqueue+0xfc>
   1254c:	mvn	r0, #0
   12550:	str	r0, [sp, #24]
   12554:	ldr	r0, [sp, #24]
   12558:	sub	sp, fp, #28
   1255c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12560:	.word	0x00035a28
   12564:	.word	0x00010860
   12568:	.word	0x00022f60
   1256c:	.word	0x00035a2c
   12570:	.word	0x00022f00
   12574:	.word	0x00035a28
   12578:	.word	0x00022f30
   1257c:	.word	0x00035a14
   12580:	.word	0x00022edc
   12584:	.word	0x00035a00
   12588:	.word	0x00022ed4
   1258c:	.word	0x00035a04
   12590:	.word	0x00022ea4
   12594:	.word	0x000359ec
   12598:	.word	0x00022ed0
   1259c:	.word	0x000359d0

000125a0 <try_ports>:
   125a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125a4:	add	fp, sp, #28
   125a8:	sub	sp, sp, #28
   125ac:	bl	1b03c <rb_init_netio_ports>
   125b0:	cmp	r0, #0
   125b4:	bne	12694 <try_ports+0xf4>
   125b8:	ldr	r0, [pc, #232]	; 126a8 <try_ports+0x108>
   125bc:	add	r0, pc, r0
   125c0:	ldr	r1, [pc, #228]	; 126ac <try_ports+0x10c>
   125c4:	add	r1, pc, r1
   125c8:	ldr	r2, [pc, #224]	; 126b0 <try_ports+0x110>
   125cc:	ldr	r2, [pc, r2]
   125d0:	ldr	r3, [pc, #220]	; 126b4 <try_ports+0x114>
   125d4:	add	r3, pc, r3
   125d8:	ldr	ip, [pc, #216]	; 126b8 <try_ports+0x118>
   125dc:	ldr	ip, [pc, ip]
   125e0:	ldr	lr, [pc, #212]	; 126bc <try_ports+0x11c>
   125e4:	add	lr, pc, lr
   125e8:	ldr	r4, [pc, #208]	; 126c0 <try_ports+0x120>
   125ec:	ldr	r4, [pc, r4]
   125f0:	ldr	r5, [pc, #204]	; 126c4 <try_ports+0x124>
   125f4:	add	r5, pc, r5
   125f8:	ldr	r6, [pc, #200]	; 126c8 <try_ports+0x128>
   125fc:	ldr	r6, [pc, r6]
   12600:	ldr	r7, [pc, #196]	; 126cc <try_ports+0x12c>
   12604:	add	r7, pc, r7
   12608:	ldr	r8, [pc, #192]	; 126d0 <try_ports+0x130>
   1260c:	ldr	r8, [pc, r8]
   12610:	ldr	r9, [pc, #188]	; 126d4 <try_ports+0x134>
   12614:	add	r9, pc, r9
   12618:	ldr	sl, [pc, #184]	; 126d8 <try_ports+0x138>
   1261c:	ldr	sl, [pc, sl]
   12620:	str	r0, [sp, #20]
   12624:	ldr	r0, [pc, #176]	; 126dc <try_ports+0x13c>
   12628:	add	r0, pc, r0
   1262c:	str	r0, [sp, #16]
   12630:	ldr	r0, [pc, #168]	; 126e0 <try_ports+0x140>
   12634:	ldr	r0, [pc, r0]
   12638:	str	r0, [sp, #12]
   1263c:	ldr	r0, [pc, #160]	; 126e4 <try_ports+0x144>
   12640:	add	r0, pc, r0
   12644:	str	r0, [sp, #8]
   12648:	ldr	r0, [sp, #12]
   1264c:	str	r1, [sp, #4]
   12650:	ldr	r1, [sp, #8]
   12654:	str	r0, [r1]
   12658:	ldr	r0, [sp, #16]
   1265c:	str	sl, [r0]
   12660:	str	r8, [r9]
   12664:	str	r6, [r7]
   12668:	str	r4, [r5]
   1266c:	str	ip, [lr]
   12670:	str	r2, [r3]
   12674:	ldr	r0, [sp, #20]
   12678:	ldr	r1, [sp, #4]
   1267c:	movw	r2, #25
   12680:	bl	5068 <rb_strlcpy@plt>
   12684:	movw	r1, #0
   12688:	str	r1, [sp, #24]
   1268c:	str	r0, [sp]
   12690:	b	1269c <try_ports+0xfc>
   12694:	mvn	r0, #0
   12698:	str	r0, [sp, #24]
   1269c:	ldr	r0, [sp, #24]
   126a0:	sub	sp, fp, #28
   126a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126a8:	.word	0x000358e0
   126ac:	.word	0x0001071f
   126b0:	.word	0x00022e14
   126b4:	.word	0x000358e4
   126b8:	.word	0x00022d88
   126bc:	.word	0x000358e0
   126c0:	.word	0x00022e20
   126c4:	.word	0x000358cc
   126c8:	.word	0x00022d58
   126cc:	.word	0x000358b8
   126d0:	.word	0x00022e04
   126d4:	.word	0x000358bc
   126d8:	.word	0x00022d6c
   126dc:	.word	0x000358a4
   126e0:	.word	0x00022db4
   126e4:	.word	0x00035888

000126e8 <try_poll>:
   126e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126ec:	add	fp, sp, #28
   126f0:	sub	sp, sp, #12
   126f4:	bl	1a74c <rb_init_netio_poll>
   126f8:	cmp	r0, #0
   126fc:	bne	127a0 <try_poll+0xb8>
   12700:	ldr	r0, [pc, #172]	; 127b4 <try_poll+0xcc>
   12704:	add	r0, pc, r0
   12708:	ldr	r1, [pc, #168]	; 127b8 <try_poll+0xd0>
   1270c:	add	r1, pc, r1
   12710:	ldr	r2, [pc, #164]	; 127bc <try_poll+0xd4>
   12714:	add	r2, pc, r2
   12718:	ldr	r3, [pc, #160]	; 127c0 <try_poll+0xd8>
   1271c:	add	r3, pc, r3
   12720:	ldr	ip, [pc, #156]	; 127c4 <try_poll+0xdc>
   12724:	add	ip, pc, ip
   12728:	ldr	lr, [pc, #152]	; 127c8 <try_poll+0xe0>
   1272c:	add	lr, pc, lr
   12730:	ldr	r4, [pc, #148]	; 127cc <try_poll+0xe4>
   12734:	add	r4, pc, r4
   12738:	ldr	r5, [pc, #144]	; 127d0 <try_poll+0xe8>
   1273c:	ldr	r5, [pc, r5]
   12740:	ldr	r6, [pc, #140]	; 127d4 <try_poll+0xec>
   12744:	add	r6, pc, r6
   12748:	ldr	r7, [pc, #136]	; 127d8 <try_poll+0xf0>
   1274c:	ldr	r7, [pc, r7]
   12750:	ldr	r8, [pc, #132]	; 127dc <try_poll+0xf4>
   12754:	add	r8, pc, r8
   12758:	ldr	r9, [pc, #128]	; 127e0 <try_poll+0xf8>
   1275c:	ldr	r9, [pc, r9]
   12760:	ldr	sl, [pc, #124]	; 127e4 <try_poll+0xfc>
   12764:	add	sl, pc, sl
   12768:	str	r9, [sl]
   1276c:	str	r7, [r8]
   12770:	str	r5, [r6]
   12774:	movw	r5, #0
   12778:	str	r5, [r4]
   1277c:	str	r5, [lr]
   12780:	str	r5, [ip]
   12784:	str	r2, [r3]
   12788:	movw	r2, #25
   1278c:	bl	5068 <rb_strlcpy@plt>
   12790:	movw	r1, #0
   12794:	str	r1, [sp, #8]
   12798:	str	r0, [sp, #4]
   1279c:	b	127a8 <try_poll+0xc0>
   127a0:	mvn	r0, #0
   127a4:	str	r0, [sp, #8]
   127a8:	ldr	r0, [sp, #8]
   127ac:	sub	sp, fp, #28
   127b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127b4:	.word	0x00035798
   127b8:	.word	0x000105cb
   127bc:	.word	0x000010a4
   127c0:	.word	0x0003579c
   127c4:	.word	0x000357a0
   127c8:	.word	0x00035794
   127cc:	.word	0x00035788
   127d0:	.word	0x00022c44
   127d4:	.word	0x0003578c
   127d8:	.word	0x00022cb0
   127dc:	.word	0x00035778
   127e0:	.word	0x00022c90
   127e4:	.word	0x00035764

000127e8 <try_devpoll>:
   127e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127ec:	add	fp, sp, #28
   127f0:	sub	sp, sp, #12
   127f4:	bl	19650 <rb_init_netio_devpoll>
   127f8:	cmp	r0, #0
   127fc:	bne	128a0 <try_devpoll+0xb8>
   12800:	ldr	r0, [pc, #172]	; 128b4 <try_devpoll+0xcc>
   12804:	add	r0, pc, r0
   12808:	ldr	r1, [pc, #168]	; 128b8 <try_devpoll+0xd0>
   1280c:	add	r1, pc, r1
   12810:	ldr	r2, [pc, #164]	; 128bc <try_devpoll+0xd4>
   12814:	add	r2, pc, r2
   12818:	ldr	r3, [pc, #160]	; 128c0 <try_devpoll+0xd8>
   1281c:	add	r3, pc, r3
   12820:	ldr	ip, [pc, #156]	; 128c4 <try_devpoll+0xdc>
   12824:	add	ip, pc, ip
   12828:	ldr	lr, [pc, #152]	; 128c8 <try_devpoll+0xe0>
   1282c:	add	lr, pc, lr
   12830:	ldr	r4, [pc, #148]	; 128cc <try_devpoll+0xe4>
   12834:	add	r4, pc, r4
   12838:	ldr	r5, [pc, #144]	; 128d0 <try_devpoll+0xe8>
   1283c:	ldr	r5, [pc, r5]
   12840:	ldr	r6, [pc, #140]	; 128d4 <try_devpoll+0xec>
   12844:	add	r6, pc, r6
   12848:	ldr	r7, [pc, #136]	; 128d8 <try_devpoll+0xf0>
   1284c:	ldr	r7, [pc, r7]
   12850:	ldr	r8, [pc, #132]	; 128dc <try_devpoll+0xf4>
   12854:	add	r8, pc, r8
   12858:	ldr	r9, [pc, #128]	; 128e0 <try_devpoll+0xf8>
   1285c:	ldr	r9, [pc, r9]
   12860:	ldr	sl, [pc, #124]	; 128e4 <try_devpoll+0xfc>
   12864:	add	sl, pc, sl
   12868:	str	r9, [sl]
   1286c:	str	r7, [r8]
   12870:	str	r5, [r6]
   12874:	movw	r5, #0
   12878:	str	r5, [r4]
   1287c:	str	r5, [lr]
   12880:	str	r5, [ip]
   12884:	str	r2, [r3]
   12888:	movw	r2, #25
   1288c:	bl	5068 <rb_strlcpy@plt>
   12890:	movw	r1, #0
   12894:	str	r1, [sp, #8]
   12898:	str	r0, [sp, #4]
   1289c:	b	128a8 <try_devpoll+0xc0>
   128a0:	mvn	r0, #0
   128a4:	str	r0, [sp, #8]
   128a8:	ldr	r0, [sp, #8]
   128ac:	sub	sp, fp, #28
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128b4:	.word	0x00035698
   128b8:	.word	0x000104dd
   128bc:	.word	0x00000fa4
   128c0:	.word	0x0003569c
   128c4:	.word	0x000356a0
   128c8:	.word	0x00035694
   128cc:	.word	0x00035688
   128d0:	.word	0x00022b78
   128d4:	.word	0x0003568c
   128d8:	.word	0x00022ba4
   128dc:	.word	0x00035678
   128e0:	.word	0x00022b54
   128e4:	.word	0x00035664

000128e8 <try_sigio>:
   128e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128ec:	add	fp, sp, #28
   128f0:	sub	sp, sp, #28
   128f4:	bl	1b0c4 <rb_init_netio_sigio>
   128f8:	cmp	r0, #0
   128fc:	bne	129dc <try_sigio+0xf4>
   12900:	ldr	r0, [pc, #232]	; 129f0 <try_sigio+0x108>
   12904:	add	r0, pc, r0
   12908:	ldr	r1, [pc, #228]	; 129f4 <try_sigio+0x10c>
   1290c:	add	r1, pc, r1
   12910:	ldr	r2, [pc, #224]	; 129f8 <try_sigio+0x110>
   12914:	ldr	r2, [pc, r2]
   12918:	ldr	r3, [pc, #220]	; 129fc <try_sigio+0x114>
   1291c:	add	r3, pc, r3
   12920:	ldr	ip, [pc, #216]	; 12a00 <try_sigio+0x118>
   12924:	ldr	ip, [pc, ip]
   12928:	ldr	lr, [pc, #212]	; 12a04 <try_sigio+0x11c>
   1292c:	add	lr, pc, lr
   12930:	ldr	r4, [pc, #208]	; 12a08 <try_sigio+0x120>
   12934:	ldr	r4, [pc, r4]
   12938:	ldr	r5, [pc, #204]	; 12a0c <try_sigio+0x124>
   1293c:	add	r5, pc, r5
   12940:	ldr	r6, [pc, #200]	; 12a10 <try_sigio+0x128>
   12944:	ldr	r6, [pc, r6]
   12948:	ldr	r7, [pc, #196]	; 12a14 <try_sigio+0x12c>
   1294c:	add	r7, pc, r7
   12950:	ldr	r8, [pc, #192]	; 12a18 <try_sigio+0x130>
   12954:	ldr	r8, [pc, r8]
   12958:	ldr	r9, [pc, #188]	; 12a1c <try_sigio+0x134>
   1295c:	add	r9, pc, r9
   12960:	ldr	sl, [pc, #184]	; 12a20 <try_sigio+0x138>
   12964:	ldr	sl, [pc, sl]
   12968:	str	r0, [sp, #20]
   1296c:	ldr	r0, [pc, #176]	; 12a24 <try_sigio+0x13c>
   12970:	add	r0, pc, r0
   12974:	str	r0, [sp, #16]
   12978:	ldr	r0, [pc, #168]	; 12a28 <try_sigio+0x140>
   1297c:	ldr	r0, [pc, r0]
   12980:	str	r0, [sp, #12]
   12984:	ldr	r0, [pc, #160]	; 12a2c <try_sigio+0x144>
   12988:	add	r0, pc, r0
   1298c:	str	r0, [sp, #8]
   12990:	ldr	r0, [sp, #12]
   12994:	str	r1, [sp, #4]
   12998:	ldr	r1, [sp, #8]
   1299c:	str	r0, [r1]
   129a0:	ldr	r0, [sp, #16]
   129a4:	str	sl, [r0]
   129a8:	str	r8, [r9]
   129ac:	str	r6, [r7]
   129b0:	str	r4, [r5]
   129b4:	str	ip, [lr]
   129b8:	str	r2, [r3]
   129bc:	ldr	r0, [sp, #20]
   129c0:	ldr	r1, [sp, #4]
   129c4:	movw	r2, #25
   129c8:	bl	5068 <rb_strlcpy@plt>
   129cc:	movw	r1, #0
   129d0:	str	r1, [sp, #24]
   129d4:	str	r0, [sp]
   129d8:	b	129e4 <try_sigio+0xfc>
   129dc:	mvn	r0, #0
   129e0:	str	r0, [sp, #24]
   129e4:	ldr	r0, [sp, #24]
   129e8:	sub	sp, fp, #28
   129ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129f0:	.word	0x00035598
   129f4:	.word	0x000103e5
   129f8:	.word	0x00022ae4
   129fc:	.word	0x000355a8
   12a00:	.word	0x00022ab4
   12a04:	.word	0x0003558c
   12a08:	.word	0x00022a28
   12a0c:	.word	0x00035584
   12a10:	.word	0x00022a30
   12a14:	.word	0x00035570
   12a18:	.word	0x00022a88
   12a1c:	.word	0x00035574
   12a20:	.word	0x00022a08
   12a24:	.word	0x0003555c
   12a28:	.word	0x00022a50
   12a2c:	.word	0x00035540

00012a30 <try_select>:
   12a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a34:	add	fp, sp, #28
   12a38:	sub	sp, sp, #12
   12a3c:	bl	1c1b4 <rb_init_netio_select>
   12a40:	cmp	r0, #0
   12a44:	bne	12ae8 <try_select+0xb8>
   12a48:	ldr	r0, [pc, #172]	; 12afc <try_select+0xcc>
   12a4c:	add	r0, pc, r0
   12a50:	ldr	r1, [pc, #168]	; 12b00 <try_select+0xd0>
   12a54:	add	r1, pc, r1
   12a58:	ldr	r2, [pc, #164]	; 12b04 <try_select+0xd4>
   12a5c:	add	r2, pc, r2
   12a60:	ldr	r3, [pc, #160]	; 12b08 <try_select+0xd8>
   12a64:	add	r3, pc, r3
   12a68:	ldr	ip, [pc, #156]	; 12b0c <try_select+0xdc>
   12a6c:	add	ip, pc, ip
   12a70:	ldr	lr, [pc, #152]	; 12b10 <try_select+0xe0>
   12a74:	add	lr, pc, lr
   12a78:	ldr	r4, [pc, #148]	; 12b14 <try_select+0xe4>
   12a7c:	add	r4, pc, r4
   12a80:	ldr	r5, [pc, #144]	; 12b18 <try_select+0xe8>
   12a84:	ldr	r5, [pc, r5]
   12a88:	ldr	r6, [pc, #140]	; 12b1c <try_select+0xec>
   12a8c:	add	r6, pc, r6
   12a90:	ldr	r7, [pc, #136]	; 12b20 <try_select+0xf0>
   12a94:	ldr	r7, [pc, r7]
   12a98:	ldr	r8, [pc, #132]	; 12b24 <try_select+0xf4>
   12a9c:	add	r8, pc, r8
   12aa0:	ldr	r9, [pc, #128]	; 12b28 <try_select+0xf8>
   12aa4:	ldr	r9, [pc, r9]
   12aa8:	ldr	sl, [pc, #124]	; 12b2c <try_select+0xfc>
   12aac:	add	sl, pc, sl
   12ab0:	str	r9, [sl]
   12ab4:	str	r7, [r8]
   12ab8:	str	r5, [r6]
   12abc:	movw	r5, #0
   12ac0:	str	r5, [r4]
   12ac4:	str	r5, [lr]
   12ac8:	str	r5, [ip]
   12acc:	str	r2, [r3]
   12ad0:	movw	r2, #25
   12ad4:	bl	5068 <rb_strlcpy@plt>
   12ad8:	movw	r1, #0
   12adc:	str	r1, [sp, #8]
   12ae0:	str	r0, [sp, #4]
   12ae4:	b	12af0 <try_select+0xc0>
   12ae8:	mvn	r0, #0
   12aec:	str	r0, [sp, #8]
   12af0:	ldr	r0, [sp, #8]
   12af4:	sub	sp, fp, #28
   12af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12afc:	.word	0x00035450
   12b00:	.word	0x000102a3
   12b04:	.word	0x00000d5c
   12b08:	.word	0x00035454
   12b0c:	.word	0x00035458
   12b10:	.word	0x0003544c
   12b14:	.word	0x00035440
   12b18:	.word	0x0002297c
   12b1c:	.word	0x00035444
   12b20:	.word	0x00022924
   12b24:	.word	0x00035430
   12b28:	.word	0x0002297c
   12b2c:	.word	0x0003541c

00012b30 <try_win32>:
   12b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b34:	add	fp, sp, #28
   12b38:	sub	sp, sp, #12
   12b3c:	bl	5a74 <rb_init_netio_win32>
   12b40:	cmp	r0, #0
   12b44:	bne	12be8 <try_win32+0xb8>
   12b48:	ldr	r0, [pc, #172]	; 12bfc <try_win32+0xcc>
   12b4c:	add	r0, pc, r0
   12b50:	ldr	r1, [pc, #168]	; 12c00 <try_win32+0xd0>
   12b54:	add	r1, pc, r1
   12b58:	ldr	r2, [pc, #164]	; 12c04 <try_win32+0xd4>
   12b5c:	add	r2, pc, r2
   12b60:	ldr	r3, [pc, #160]	; 12c08 <try_win32+0xd8>
   12b64:	add	r3, pc, r3
   12b68:	ldr	ip, [pc, #156]	; 12c0c <try_win32+0xdc>
   12b6c:	add	ip, pc, ip
   12b70:	ldr	lr, [pc, #152]	; 12c10 <try_win32+0xe0>
   12b74:	add	lr, pc, lr
   12b78:	ldr	r4, [pc, #148]	; 12c14 <try_win32+0xe4>
   12b7c:	add	r4, pc, r4
   12b80:	ldr	r5, [pc, #144]	; 12c18 <try_win32+0xe8>
   12b84:	ldr	r5, [pc, r5]
   12b88:	ldr	r6, [pc, #140]	; 12c1c <try_win32+0xec>
   12b8c:	add	r6, pc, r6
   12b90:	ldr	r7, [pc, #136]	; 12c20 <try_win32+0xf0>
   12b94:	ldr	r7, [pc, r7]
   12b98:	ldr	r8, [pc, #132]	; 12c24 <try_win32+0xf4>
   12b9c:	add	r8, pc, r8
   12ba0:	ldr	r9, [pc, #128]	; 12c28 <try_win32+0xf8>
   12ba4:	ldr	r9, [pc, r9]
   12ba8:	ldr	sl, [pc, #124]	; 12c2c <try_win32+0xfc>
   12bac:	add	sl, pc, sl
   12bb0:	str	r9, [sl]
   12bb4:	str	r7, [r8]
   12bb8:	str	r5, [r6]
   12bbc:	movw	r5, #0
   12bc0:	str	r5, [r4]
   12bc4:	str	r5, [lr]
   12bc8:	str	r5, [ip]
   12bcc:	str	r2, [r3]
   12bd0:	movw	r2, #25
   12bd4:	bl	5068 <rb_strlcpy@plt>
   12bd8:	movw	r1, #0
   12bdc:	str	r1, [sp, #8]
   12be0:	str	r0, [sp, #4]
   12be4:	b	12bf0 <try_win32+0xc0>
   12be8:	mvn	r0, #0
   12bec:	str	r0, [sp, #8]
   12bf0:	ldr	r0, [sp, #8]
   12bf4:	sub	sp, fp, #28
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bfc:	.word	0x00035350
   12c00:	.word	0x000101aa
   12c04:	.word	0x00000c5c
   12c08:	.word	0x00035354
   12c0c:	.word	0x00035358
   12c10:	.word	0x0003534c
   12c14:	.word	0x00035340
   12c18:	.word	0x000227ec
   12c1c:	.word	0x00035344
   12c20:	.word	0x00022814
   12c24:	.word	0x00035330
   12c28:	.word	0x000227f8
   12c2c:	.word	0x0003531c

00012c30 <rb_select>:
   12c30:	push	{fp, lr}
   12c34:	mov	fp, sp
   12c38:	sub	sp, sp, #16
   12c3c:	ldr	r1, [pc, #48]	; 12c74 <rb_select+0x44>
   12c40:	add	r1, pc, r1
   12c44:	str	r0, [fp, #-4]
   12c48:	ldr	r0, [r1]
   12c4c:	ldr	r1, [fp, #-4]
   12c50:	str	r0, [sp, #4]
   12c54:	mov	r0, r1
   12c58:	ldr	r1, [sp, #4]
   12c5c:	blx	r1
   12c60:	str	r0, [sp, #8]
   12c64:	bl	12c78 <free_fds>
   12c68:	ldr	r0, [sp, #8]
   12c6c:	mov	sp, fp
   12c70:	pop	{fp, pc}
   12c74:	.word	0x0003528c

00012c78 <free_fds>:
   12c78:	push	{fp, lr}
   12c7c:	mov	fp, sp
   12c80:	sub	sp, sp, #32
   12c84:	ldr	r0, [pc, #244]	; 12d80 <free_fds+0x108>
   12c88:	add	r0, pc, r0
   12c8c:	ldr	r0, [r0]
   12c90:	str	r0, [fp, #-8]
   12c94:	ldr	r0, [fp, #-8]
   12c98:	movw	r1, #0
   12c9c:	cmp	r0, r1
   12ca0:	beq	12cb4 <free_fds+0x3c>
   12ca4:	ldr	r0, [fp, #-8]
   12ca8:	ldr	r0, [r0, #8]
   12cac:	str	r0, [sp, #16]
   12cb0:	b	12cc0 <free_fds+0x48>
   12cb4:	movw	r0, #0
   12cb8:	str	r0, [sp, #16]
   12cbc:	b	12cc0 <free_fds+0x48>
   12cc0:	ldr	r0, [sp, #16]
   12cc4:	str	r0, [fp, #-12]
   12cc8:	ldr	r0, [fp, #-8]
   12ccc:	movw	r1, #0
   12cd0:	cmp	r0, r1
   12cd4:	beq	12d78 <free_fds+0x100>
   12cd8:	ldr	r0, [pc, #172]	; 12d8c <free_fds+0x114>
   12cdc:	add	r0, pc, r0
   12ce0:	ldr	r1, [fp, #-8]
   12ce4:	ldr	r1, [r1]
   12ce8:	str	r1, [fp, #-4]
   12cec:	ldr	r1, [r0]
   12cf0:	mvn	r2, #0
   12cf4:	add	r1, r1, r2
   12cf8:	str	r1, [r0]
   12cfc:	ldr	r0, [fp, #-4]
   12d00:	ldr	r0, [r0, #12]
   12d04:	bl	5308 <close@plt>
   12d08:	ldr	r1, [pc, #120]	; 12d88 <free_fds+0x110>
   12d0c:	add	r1, pc, r1
   12d10:	ldr	r2, [fp, #-8]
   12d14:	str	r0, [sp, #12]
   12d18:	mov	r0, r2
   12d1c:	bl	ef9c <rb_dlinkDelete>
   12d20:	ldr	r0, [pc, #92]	; 12d84 <free_fds+0x10c>
   12d24:	add	r0, pc, r0
   12d28:	ldr	r0, [r0]
   12d2c:	ldr	r1, [fp, #-4]
   12d30:	bl	529c <rb_bh_free@plt>
   12d34:	str	r0, [sp, #8]
   12d38:	ldr	r0, [fp, #-12]
   12d3c:	str	r0, [fp, #-8]
   12d40:	ldr	r0, [fp, #-8]
   12d44:	movw	r1, #0
   12d48:	cmp	r0, r1
   12d4c:	beq	12d60 <free_fds+0xe8>
   12d50:	ldr	r0, [fp, #-8]
   12d54:	ldr	r0, [r0, #8]
   12d58:	str	r0, [sp, #4]
   12d5c:	b	12d6c <free_fds+0xf4>
   12d60:	movw	r0, #0
   12d64:	str	r0, [sp, #4]
   12d68:	b	12d6c <free_fds+0xf4>
   12d6c:	ldr	r0, [sp, #4]
   12d70:	str	r0, [fp, #-12]
   12d74:	b	12cc8 <free_fds+0x50>
   12d78:	mov	sp, fp
   12d7c:	pop	{fp, pc}
   12d80:	.word	0x0003524c
   12d84:	.word	0x00035174
   12d88:	.word	0x000351c8
   12d8c:	.word	0x000351b4

00012d90 <rb_recv_fd_buf>:
   12d90:	push	{r4, r5, fp, lr}
   12d94:	add	fp, sp, #8
   12d98:	sub	sp, sp, #192	; 0xc0
   12d9c:	ldr	ip, [fp, #8]
   12da0:	str	r0, [fp, #-16]
   12da4:	str	r1, [fp, #-20]	; 0xffffffec
   12da8:	str	r2, [fp, #-24]	; 0xffffffe8
   12dac:	str	r3, [fp, #-28]	; 0xffffffe4
   12db0:	mov	r0, #64	; 0x40
   12db4:	strb	r0, [fp, #-161]	; 0xffffff5f
   12db8:	ldr	r0, [fp, #8]
   12dbc:	mov	r1, #12
   12dc0:	add	r0, r1, r0, lsl #2
   12dc4:	str	r0, [fp, #-188]	; 0xffffff44
   12dc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12dcc:	str	r0, [fp, #-68]	; 0xffffffbc
   12dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dd4:	str	r0, [fp, #-64]	; 0xffffffc0
   12dd8:	mov	r0, #0
   12ddc:	str	r0, [fp, #-56]	; 0xffffffc8
   12de0:	str	r0, [fp, #-52]	; 0xffffffcc
   12de4:	sub	r1, fp, #68	; 0x44
   12de8:	str	r1, [fp, #-48]	; 0xffffffd0
   12dec:	mov	r1, #1
   12df0:	str	r1, [fp, #-44]	; 0xffffffd4
   12df4:	str	r0, [fp, #-32]	; 0xffffffe0
   12df8:	ldr	r0, [fp, #-188]	; 0xffffff44
   12dfc:	add	r0, r0, #7
   12e00:	bic	r0, r0, #7
   12e04:	mov	r1, sp
   12e08:	sub	r0, r1, r0
   12e0c:	mov	sp, r0
   12e10:	str	r0, [fp, #-60]	; 0xffffffc4
   12e14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12e18:	str	r0, [fp, #-40]	; 0xffffffd8
   12e1c:	ldr	r0, [fp, #-188]	; 0xffffff44
   12e20:	str	r0, [fp, #-36]	; 0xffffffdc
   12e24:	ldr	r0, [fp, #-16]
   12e28:	str	ip, [fp, #-192]	; 0xffffff40
   12e2c:	bl	4ea0 <rb_get_fd@plt>
   12e30:	sub	r1, fp, #56	; 0x38
   12e34:	movw	r2, #0
   12e38:	bl	550c <recvmsg@plt>
   12e3c:	str	r0, [fp, #-176]	; 0xffffff50
   12e40:	cmp	r0, #0
   12e44:	bgt	12e54 <rb_recv_fd_buf+0xc4>
   12e48:	ldr	r0, [fp, #-176]	; 0xffffff50
   12e4c:	str	r0, [fp, #-12]
   12e50:	b	13010 <rb_recv_fd_buf+0x280>
   12e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e58:	cmp	r0, #0
   12e5c:	bls	12ffc <rb_recv_fd_buf+0x26c>
   12e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e64:	movw	r1, #0
   12e68:	cmp	r0, r1
   12e6c:	beq	12ffc <rb_recv_fd_buf+0x26c>
   12e70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e74:	cmp	r0, #12
   12e78:	bcc	12e88 <rb_recv_fd_buf+0xf8>
   12e7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e80:	str	r0, [fp, #-196]	; 0xffffff3c
   12e84:	b	12e94 <rb_recv_fd_buf+0x104>
   12e88:	movw	r0, #0
   12e8c:	str	r0, [fp, #-196]	; 0xffffff3c
   12e90:	b	12e94 <rb_recv_fd_buf+0x104>
   12e94:	ldr	r0, [fp, #-196]	; 0xffffff3c
   12e98:	str	r0, [fp, #-60]	; 0xffffffc4
   12e9c:	movw	r1, #0
   12ea0:	cmp	r0, r1
   12ea4:	beq	12ffc <rb_recv_fd_buf+0x26c>
   12ea8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12eac:	mov	r1, r0
   12eb0:	ldr	r2, [r1], #12
   12eb4:	add	r0, r0, r2
   12eb8:	sub	r0, r0, r1
   12ebc:	lsr	r0, r0, #2
   12ec0:	str	r0, [fp, #-184]	; 0xffffff48
   12ec4:	movw	r0, #0
   12ec8:	str	r0, [fp, #-180]	; 0xffffff4c
   12ecc:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12ed0:	ldr	r1, [fp, #8]
   12ed4:	cmp	r0, r1
   12ed8:	movw	r0, #0
   12edc:	str	r0, [fp, #-200]	; 0xffffff38
   12ee0:	bge	12efc <rb_recv_fd_buf+0x16c>
   12ee4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12ee8:	ldr	r1, [fp, #-184]	; 0xffffff48
   12eec:	cmp	r0, r1
   12ef0:	movw	r0, #0
   12ef4:	movlt	r0, #1
   12ef8:	str	r0, [fp, #-200]	; 0xffffff38
   12efc:	ldr	r0, [fp, #-200]	; 0xffffff38
   12f00:	tst	r0, #1
   12f04:	beq	12ff8 <rb_recv_fd_buf+0x268>
   12f08:	ldr	r0, [pc, #268]	; 1301c <rb_recv_fd_buf+0x28c>
   12f0c:	add	r0, pc, r0
   12f10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12f14:	add	r1, r1, #12
   12f18:	ldr	r2, [fp, #-180]	; 0xffffff4c
   12f1c:	add	r1, r1, r2, lsl #2
   12f20:	ldr	r1, [r1]
   12f24:	str	r1, [fp, #-172]	; 0xffffff54
   12f28:	movw	r1, #64	; 0x40
   12f2c:	strb	r1, [fp, #-161]	; 0xffffff5f
   12f30:	str	r0, [fp, #-168]	; 0xffffff58
   12f34:	ldr	r0, [fp, #-172]	; 0xffffff54
   12f38:	sub	r1, fp, #160	; 0xa0
   12f3c:	bl	22254 <__fstat>
   12f40:	cmp	r0, #0
   12f44:	bne	12fc8 <rb_recv_fd_buf+0x238>
   12f48:	ldr	r0, [fp, #-144]	; 0xffffff70
   12f4c:	and	r0, r0, #61440	; 0xf000
   12f50:	cmp	r0, #49152	; 0xc000
   12f54:	bne	12f70 <rb_recv_fd_buf+0x1e0>
   12f58:	ldr	r0, [pc, #200]	; 13028 <rb_recv_fd_buf+0x298>
   12f5c:	add	r0, pc, r0
   12f60:	movw	r1, #4
   12f64:	strb	r1, [fp, #-161]	; 0xffffff5f
   12f68:	str	r0, [fp, #-168]	; 0xffffff58
   12f6c:	b	12fc4 <rb_recv_fd_buf+0x234>
   12f70:	ldr	r0, [fp, #-144]	; 0xffffff70
   12f74:	and	r0, r0, #61440	; 0xf000
   12f78:	cmp	r0, #4096	; 0x1000
   12f7c:	bne	12f98 <rb_recv_fd_buf+0x208>
   12f80:	ldr	r0, [pc, #156]	; 13024 <rb_recv_fd_buf+0x294>
   12f84:	add	r0, pc, r0
   12f88:	movw	r1, #8
   12f8c:	strb	r1, [fp, #-161]	; 0xffffff5f
   12f90:	str	r0, [fp, #-168]	; 0xffffff58
   12f94:	b	12fc0 <rb_recv_fd_buf+0x230>
   12f98:	ldr	r0, [fp, #-144]	; 0xffffff70
   12f9c:	and	r0, r0, #61440	; 0xf000
   12fa0:	cmp	r0, #32768	; 0x8000
   12fa4:	bne	12fbc <rb_recv_fd_buf+0x22c>
   12fa8:	ldr	r0, [pc, #112]	; 13020 <rb_recv_fd_buf+0x290>
   12fac:	add	r0, pc, r0
   12fb0:	movw	r1, #2
   12fb4:	strb	r1, [fp, #-161]	; 0xffffff5f
   12fb8:	str	r0, [fp, #-168]	; 0xffffff58
   12fbc:	b	12fc0 <rb_recv_fd_buf+0x230>
   12fc0:	b	12fc4 <rb_recv_fd_buf+0x234>
   12fc4:	b	12fc8 <rb_recv_fd_buf+0x238>
   12fc8:	ldr	r0, [fp, #-172]	; 0xffffff54
   12fcc:	ldrb	r1, [fp, #-161]	; 0xffffff5f
   12fd0:	ldr	r2, [fp, #-168]	; 0xffffff58
   12fd4:	bl	544c <rb_open@plt>
   12fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12fdc:	ldr	r2, [fp, #-180]	; 0xffffff4c
   12fe0:	add	r1, r1, r2, lsl #2
   12fe4:	str	r0, [r1]
   12fe8:	ldr	r0, [fp, #-180]	; 0xffffff4c
   12fec:	add	r0, r0, #1
   12ff0:	str	r0, [fp, #-180]	; 0xffffff4c
   12ff4:	b	12ecc <rb_recv_fd_buf+0x13c>
   12ff8:	b	13008 <rb_recv_fd_buf+0x278>
   12ffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13000:	movw	r1, #0
   13004:	str	r1, [r0]
   13008:	ldr	r0, [fp, #-176]	; 0xffffff50
   1300c:	str	r0, [fp, #-12]
   13010:	ldr	r0, [fp, #-12]
   13014:	sub	sp, fp, #8
   13018:	pop	{r4, r5, fp, pc}
   1301c:	.word	0x0000fe32
   13020:	.word	0x0000fdbb
   13024:	.word	0x0000fdd7
   13028:	.word	0x0000fdf1

0001302c <rb_send_fd_buf>:
   1302c:	push	{r4, r5, fp, lr}
   13030:	add	fp, sp, #8
   13034:	sub	sp, sp, #96	; 0x60
   13038:	ldr	ip, [fp, #12]
   1303c:	ldr	lr, [fp, #8]
   13040:	str	r0, [fp, #-16]
   13044:	str	r1, [fp, #-20]	; 0xffffffec
   13048:	str	r2, [fp, #-24]	; 0xffffffe8
   1304c:	str	r3, [fp, #-28]	; 0xffffffe4
   13050:	movw	r0, #48	; 0x30
   13054:	strb	r0, [fp, #-69]	; 0xffffffbb
   13058:	sub	r0, fp, #56	; 0x38
   1305c:	movw	r1, #0
   13060:	and	r1, r1, #255	; 0xff
   13064:	movw	r2, #28
   13068:	str	lr, [fp, #-96]	; 0xffffffa0
   1306c:	str	ip, [fp, #-100]	; 0xffffff9c
   13070:	bl	4ff0 <memset@plt>
   13074:	ldr	r0, [fp, #8]
   13078:	cmp	r0, #0
   1307c:	bne	13094 <rb_send_fd_buf+0x68>
   13080:	sub	r0, fp, #69	; 0x45
   13084:	str	r0, [fp, #-68]	; 0xffffffbc
   13088:	movw	r0, #1
   1308c:	str	r0, [fp, #-64]	; 0xffffffc0
   13090:	b	130a4 <rb_send_fd_buf+0x78>
   13094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13098:	str	r0, [fp, #-68]	; 0xffffffbc
   1309c:	ldr	r0, [fp, #8]
   130a0:	str	r0, [fp, #-64]	; 0xffffffc0
   130a4:	sub	r0, fp, #68	; 0x44
   130a8:	str	r0, [fp, #-48]	; 0xffffffd0
   130ac:	movw	r0, #1
   130b0:	str	r0, [fp, #-44]	; 0xffffffd4
   130b4:	movw	r0, #0
   130b8:	str	r0, [fp, #-56]	; 0xffffffc8
   130bc:	str	r0, [fp, #-52]	; 0xffffffcc
   130c0:	str	r0, [fp, #-32]	; 0xffffffe0
   130c4:	str	r0, [fp, #-40]	; 0xffffffd8
   130c8:	str	r0, [fp, #-36]	; 0xffffffdc
   130cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130d0:	cmp	r0, #0
   130d4:	ble	131f0 <rb_send_fd_buf+0x1c4>
   130d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130dc:	str	r0, [fp, #-76]	; 0xffffffb4
   130e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130e4:	mov	r1, #12
   130e8:	add	r0, r1, r0, lsl #2
   130ec:	str	r0, [fp, #-80]	; 0xffffffb0
   130f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   130f4:	mov	r1, sp
   130f8:	str	r1, [fp, #-84]	; 0xffffffac
   130fc:	add	r1, r0, #7
   13100:	bic	r1, r1, #7
   13104:	mov	r2, sp
   13108:	sub	r1, r2, r1
   1310c:	mov	sp, r1
   13110:	str	r0, [fp, #-88]	; 0xffffffa8
   13114:	str	r1, [fp, #-40]	; 0xffffffd8
   13118:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1311c:	str	r0, [fp, #-36]	; 0xffffffdc
   13120:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13124:	cmp	r0, #12
   13128:	bcc	13138 <rb_send_fd_buf+0x10c>
   1312c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13130:	str	r0, [fp, #-104]	; 0xffffff98
   13134:	b	13144 <rb_send_fd_buf+0x118>
   13138:	movw	r0, #0
   1313c:	str	r0, [fp, #-104]	; 0xffffff98
   13140:	b	13144 <rb_send_fd_buf+0x118>
   13144:	ldr	r0, [fp, #-104]	; 0xffffff98
   13148:	str	r0, [fp, #-60]	; 0xffffffc4
   1314c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13150:	mov	r1, #1
   13154:	str	r1, [r0, #4]
   13158:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1315c:	str	r1, [r0, #8]
   13160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13164:	lsl	r0, r0, #2
   13168:	add	r0, r0, #12
   1316c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13170:	str	r0, [r1]
   13174:	movw	r0, #0
   13178:	str	r0, [fp, #-92]	; 0xffffffa4
   1317c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13180:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13184:	cmp	r0, r1
   13188:	bcs	131c0 <rb_send_fd_buf+0x194>
   1318c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13190:	ldr	r1, [fp, #-92]	; 0xffffffa4
   13194:	ldr	r0, [r0, r1, lsl #2]
   13198:	bl	4ea0 <rb_get_fd@plt>
   1319c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   131a0:	add	r1, r1, #12
   131a4:	ldr	lr, [fp, #-92]	; 0xffffffa4
   131a8:	add	r1, r1, lr, lsl #2
   131ac:	str	r0, [r1]
   131b0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   131b4:	add	r0, r0, #1
   131b8:	str	r0, [fp, #-92]	; 0xffffffa4
   131bc:	b	1317c <rb_send_fd_buf+0x150>
   131c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   131c4:	ldr	r0, [r0]
   131c8:	str	r0, [fp, #-36]	; 0xffffffdc
   131cc:	ldr	r0, [fp, #-16]
   131d0:	bl	4ea0 <rb_get_fd@plt>
   131d4:	sub	r1, fp, #56	; 0x38
   131d8:	movw	r2, #16384	; 0x4000
   131dc:	bl	50d4 <sendmsg@plt>
   131e0:	str	r0, [fp, #-12]
   131e4:	ldr	r0, [fp, #-84]	; 0xffffffac
   131e8:	mov	sp, r0
   131ec:	b	13208 <rb_send_fd_buf+0x1dc>
   131f0:	ldr	r0, [fp, #-16]
   131f4:	bl	4ea0 <rb_get_fd@plt>
   131f8:	sub	r1, fp, #56	; 0x38
   131fc:	movw	r2, #16384	; 0x4000
   13200:	bl	50d4 <sendmsg@plt>
   13204:	str	r0, [fp, #-12]
   13208:	ldr	r0, [fp, #-12]
   1320c:	sub	sp, fp, #8
   13210:	pop	{r4, r5, fp, pc}

00013214 <rb_ipv4_from_ipv6>:
   13214:	sub	sp, sp, #16
   13218:	str	r0, [sp, #8]
   1321c:	str	r1, [sp, #4]
   13220:	ldr	r0, [sp, #8]
   13224:	add	r0, r0, #8
   13228:	ldrh	r0, [r0]
   1322c:	sub	r1, r0, #544	; 0x220
   13230:	cmp	r0, #544	; 0x220
   13234:	movwne	r1, #1
   13238:	cmp	r1, #0
   1323c:	bne	1326c <rb_ipv4_from_ipv6+0x58>
   13240:	ldr	r0, [sp, #4]
   13244:	ldr	r1, [sp, #8]
   13248:	ldrb	r2, [r1, #10]
   1324c:	strb	r2, [r0, #4]
   13250:	ldrb	r2, [r1, #11]
   13254:	strb	r2, [r0, #5]
   13258:	ldrb	r2, [r1, #12]
   1325c:	strb	r2, [r0, #6]
   13260:	ldrb	r1, [r1, #13]
   13264:	strb	r1, [r0, #7]
   13268:	b	132f4 <rb_ipv4_from_ipv6+0xe0>
   1326c:	ldr	r0, [sp, #8]
   13270:	add	r0, r0, #8
   13274:	ldr	r0, [r0]
   13278:	sub	r1, r0, #288	; 0x120
   1327c:	cmp	r0, #288	; 0x120
   13280:	movwne	r1, #1
   13284:	cmp	r1, #0
   13288:	bne	132e4 <rb_ipv4_from_ipv6+0xd0>
   1328c:	movw	r0, #0
   13290:	str	r0, [sp]
   13294:	ldr	r0, [sp]
   13298:	cmp	r0, #4
   1329c:	bge	132e0 <rb_ipv4_from_ipv6+0xcc>
   132a0:	ldr	r0, [sp, #8]
   132a4:	add	r0, r0, #8
   132a8:	ldr	r1, [sp]
   132ac:	add	r1, r1, #12
   132b0:	add	r0, r0, r1
   132b4:	ldrb	r0, [r0]
   132b8:	eor	r0, r0, #255	; 0xff
   132bc:	ldr	r1, [sp, #4]
   132c0:	add	r1, r1, #4
   132c4:	ldr	r2, [sp]
   132c8:	add	r1, r1, r2
   132cc:	strb	r0, [r1]
   132d0:	ldr	r0, [sp]
   132d4:	add	r0, r0, #1
   132d8:	str	r0, [sp]
   132dc:	b	13294 <rb_ipv4_from_ipv6+0x80>
   132e0:	b	132f0 <rb_ipv4_from_ipv6+0xdc>
   132e4:	movw	r0, #0
   132e8:	str	r0, [sp, #12]
   132ec:	b	13324 <rb_ipv4_from_ipv6+0x110>
   132f0:	b	132f4 <rb_ipv4_from_ipv6+0xe0>
   132f4:	ldr	r0, [sp, #4]
   132f8:	ldrh	r0, [r0]
   132fc:	ldr	r1, [sp, #4]
   13300:	strh	r0, [r1]
   13304:	ldr	r0, [sp, #4]
   13308:	movw	r1, #2
   1330c:	strh	r1, [r0]
   13310:	ldr	r0, [sp, #4]
   13314:	movw	r1, #0
   13318:	strh	r1, [r0, #2]
   1331c:	movw	r0, #1
   13320:	str	r0, [sp, #12]
   13324:	ldr	r0, [sp, #12]
   13328:	add	sp, sp, #16
   1332c:	bx	lr

00013330 <mangle_mapped_sockaddr>:
   13330:	push	{fp, lr}
   13334:	mov	fp, sp
   13338:	sub	sp, sp, #40	; 0x28
   1333c:	str	r0, [fp, #-4]
   13340:	ldr	r0, [fp, #-4]
   13344:	str	r0, [fp, #-8]
   13348:	ldr	r0, [fp, #-4]
   1334c:	ldrh	r0, [r0]
   13350:	cmp	r0, #10
   13354:	bne	13450 <mangle_mapped_sockaddr+0x120>
   13358:	ldr	r0, [fp, #-8]
   1335c:	add	r0, r0, #8
   13360:	str	r0, [fp, #-12]
   13364:	ldr	r0, [fp, #-12]
   13368:	ldr	r0, [r0]
   1336c:	cmp	r0, #0
   13370:	movw	r0, #0
   13374:	str	r0, [sp, #4]
   13378:	bne	133c0 <mangle_mapped_sockaddr+0x90>
   1337c:	ldr	r0, [fp, #-12]
   13380:	ldr	r0, [r0, #4]
   13384:	cmp	r0, #0
   13388:	movw	r0, #0
   1338c:	str	r0, [sp, #4]
   13390:	bne	133c0 <mangle_mapped_sockaddr+0x90>
   13394:	ldr	r0, [fp, #-12]
   13398:	ldr	r0, [r0, #8]
   1339c:	movw	r1, #65535	; 0xffff
   133a0:	str	r0, [sp]
   133a4:	mov	r0, r1
   133a8:	bl	54e8 <htonl@plt>
   133ac:	ldr	r1, [sp]
   133b0:	cmp	r1, r0
   133b4:	movw	r0, #0
   133b8:	moveq	r0, #1
   133bc:	str	r0, [sp, #4]
   133c0:	ldr	r0, [sp, #4]
   133c4:	and	r0, r0, #1
   133c8:	str	r0, [fp, #-16]
   133cc:	ldr	r0, [fp, #-16]
   133d0:	cmp	r0, #0
   133d4:	beq	13450 <mangle_mapped_sockaddr+0x120>
   133d8:	add	r0, sp, #8
   133dc:	movw	r1, #0
   133e0:	and	r1, r1, #255	; 0xff
   133e4:	movw	r2, #16
   133e8:	bl	4ff0 <memset@plt>
   133ec:	movw	r0, #2
   133f0:	strh	r0, [sp, #8]
   133f4:	ldr	r0, [fp, #-8]
   133f8:	ldrh	r0, [r0, #2]
   133fc:	strh	r0, [sp, #10]
   13400:	ldr	r0, [fp, #-8]
   13404:	ldr	r0, [r0, #20]
   13408:	str	r0, [sp, #12]
   1340c:	ldr	r0, [fp, #-4]
   13410:	ldrh	r1, [sp, #8]
   13414:	strh	r1, [r0]
   13418:	ldrh	r1, [sp, #10]
   1341c:	strh	r1, [r0, #2]
   13420:	ldrh	r1, [sp, #12]
   13424:	strh	r1, [r0, #4]
   13428:	ldrh	r1, [sp, #14]
   1342c:	strh	r1, [r0, #6]
   13430:	ldrh	r1, [sp, #16]
   13434:	strh	r1, [r0, #8]
   13438:	ldrh	r1, [sp, #18]
   1343c:	strh	r1, [r0, #10]
   13440:	ldrh	r1, [sp, #20]
   13444:	strh	r1, [r0, #12]
   13448:	ldrh	r1, [sp, #22]
   1344c:	strh	r1, [r0, #14]
   13450:	mov	sp, fp
   13454:	pop	{fp, pc}

00013458 <rb_dlinkMoveNode>:
   13458:	sub	sp, sp, #12
   1345c:	str	r0, [sp, #8]
   13460:	str	r1, [sp, #4]
   13464:	str	r2, [sp]
   13468:	ldr	r0, [sp, #8]
   1346c:	ldr	r0, [r0, #8]
   13470:	movw	r1, #0
   13474:	cmp	r0, r1
   13478:	beq	13494 <rb_dlinkMoveNode+0x3c>
   1347c:	ldr	r0, [sp, #8]
   13480:	ldr	r0, [r0, #4]
   13484:	ldr	r1, [sp, #8]
   13488:	ldr	r1, [r1, #8]
   1348c:	str	r0, [r1, #4]
   13490:	b	134a4 <rb_dlinkMoveNode+0x4c>
   13494:	ldr	r0, [sp, #8]
   13498:	ldr	r0, [r0, #4]
   1349c:	ldr	r1, [sp, #4]
   134a0:	str	r0, [r1, #4]
   134a4:	ldr	r0, [sp, #8]
   134a8:	ldr	r0, [r0, #4]
   134ac:	movw	r1, #0
   134b0:	cmp	r0, r1
   134b4:	beq	134d0 <rb_dlinkMoveNode+0x78>
   134b8:	ldr	r0, [sp, #8]
   134bc:	ldr	r0, [r0, #8]
   134c0:	ldr	r1, [sp, #8]
   134c4:	ldr	r1, [r1, #4]
   134c8:	str	r0, [r1, #8]
   134cc:	b	134e0 <rb_dlinkMoveNode+0x88>
   134d0:	ldr	r0, [sp, #8]
   134d4:	ldr	r0, [r0, #8]
   134d8:	ldr	r1, [sp, #4]
   134dc:	str	r0, [r1]
   134e0:	ldr	r0, [sp, #8]
   134e4:	movw	r1, #0
   134e8:	str	r1, [r0, #4]
   134ec:	ldr	r0, [sp]
   134f0:	ldr	r0, [r0]
   134f4:	ldr	r2, [sp, #8]
   134f8:	str	r0, [r2, #8]
   134fc:	ldr	r0, [sp]
   13500:	ldr	r0, [r0]
   13504:	cmp	r0, r1
   13508:	beq	13520 <rb_dlinkMoveNode+0xc8>
   1350c:	ldr	r0, [sp, #8]
   13510:	ldr	r1, [sp]
   13514:	ldr	r1, [r1]
   13518:	str	r0, [r1, #4]
   1351c:	b	13544 <rb_dlinkMoveNode+0xec>
   13520:	ldr	r0, [sp]
   13524:	ldr	r0, [r0, #4]
   13528:	movw	r1, #0
   1352c:	cmp	r0, r1
   13530:	bne	13540 <rb_dlinkMoveNode+0xe8>
   13534:	ldr	r0, [sp, #8]
   13538:	ldr	r1, [sp]
   1353c:	str	r0, [r1, #4]
   13540:	b	13544 <rb_dlinkMoveNode+0xec>
   13544:	ldr	r0, [sp, #8]
   13548:	ldr	r1, [sp]
   1354c:	str	r0, [r1]
   13550:	ldr	r0, [sp, #4]
   13554:	ldr	r1, [r0, #8]
   13558:	mvn	r2, #0
   1355c:	add	r1, r1, r2
   13560:	str	r1, [r0, #8]
   13564:	ldr	r0, [sp]
   13568:	ldr	r1, [r0, #8]
   1356c:	add	r1, r1, #1
   13570:	str	r1, [r0, #8]
   13574:	add	sp, sp, #12
   13578:	bx	lr

0001357c <inetntoa>:
   1357c:	sub	sp, sp, #48	; 0x30
   13580:	ldr	r1, [pc, #528]	; 13798 <inetntoa+0x21c>
   13584:	add	r1, pc, r1
   13588:	str	r0, [sp, #44]	; 0x2c
   1358c:	ldr	r0, [pc, #536]	; 137ac <inetntoa+0x230>
   13590:	add	r0, pc, r0
   13594:	str	r0, [sp, #40]	; 0x28
   13598:	ldr	r0, [sp, #44]	; 0x2c
   1359c:	str	r0, [sp, #36]	; 0x24
   135a0:	ldr	r0, [sp, #36]	; 0x24
   135a4:	add	r2, r0, #1
   135a8:	str	r2, [sp, #36]	; 0x24
   135ac:	ldrb	r0, [r0]
   135b0:	mov	r2, r0
   135b4:	ldr	r3, [pc, #500]	; 137b0 <inetntoa+0x234>
   135b8:	add	r3, pc, r3
   135bc:	add	r0, r3, r0, lsl #2
   135c0:	ldr	r0, [r0]
   135c4:	str	r0, [sp, #32]
   135c8:	str	r1, [sp, #28]
   135cc:	str	r2, [sp, #24]
   135d0:	ldr	r0, [sp, #32]
   135d4:	ldrsb	r0, [r0]
   135d8:	cmp	r0, #0
   135dc:	beq	13604 <inetntoa+0x88>
   135e0:	ldr	r0, [sp, #32]
   135e4:	add	r1, r0, #1
   135e8:	str	r1, [sp, #32]
   135ec:	ldrb	r0, [r0]
   135f0:	ldr	r1, [sp, #40]	; 0x28
   135f4:	add	r2, r1, #1
   135f8:	str	r2, [sp, #40]	; 0x28
   135fc:	strb	r0, [r1]
   13600:	b	135d0 <inetntoa+0x54>
   13604:	ldr	r0, [pc, #400]	; 1379c <inetntoa+0x220>
   13608:	add	r0, pc, r0
   1360c:	ldr	r1, [sp, #40]	; 0x28
   13610:	add	r2, r1, #1
   13614:	str	r2, [sp, #40]	; 0x28
   13618:	mov	r2, #46	; 0x2e
   1361c:	strb	r2, [r1]
   13620:	ldr	r1, [sp, #36]	; 0x24
   13624:	add	r2, r1, #1
   13628:	str	r2, [sp, #36]	; 0x24
   1362c:	ldrb	r1, [r1]
   13630:	mov	r2, r1
   13634:	ldr	r3, [pc, #376]	; 137b4 <inetntoa+0x238>
   13638:	add	r3, pc, r3
   1363c:	add	r1, r3, r1, lsl #2
   13640:	ldr	r1, [r1]
   13644:	str	r1, [sp, #32]
   13648:	str	r0, [sp, #20]
   1364c:	str	r2, [sp, #16]
   13650:	ldr	r0, [sp, #32]
   13654:	ldrsb	r0, [r0]
   13658:	cmp	r0, #0
   1365c:	beq	13684 <inetntoa+0x108>
   13660:	ldr	r0, [sp, #32]
   13664:	add	r1, r0, #1
   13668:	str	r1, [sp, #32]
   1366c:	ldrb	r0, [r0]
   13670:	ldr	r1, [sp, #40]	; 0x28
   13674:	add	r2, r1, #1
   13678:	str	r2, [sp, #40]	; 0x28
   1367c:	strb	r0, [r1]
   13680:	b	13650 <inetntoa+0xd4>
   13684:	ldr	r0, [pc, #276]	; 137a0 <inetntoa+0x224>
   13688:	add	r0, pc, r0
   1368c:	ldr	r1, [sp, #40]	; 0x28
   13690:	add	r2, r1, #1
   13694:	str	r2, [sp, #40]	; 0x28
   13698:	mov	r2, #46	; 0x2e
   1369c:	strb	r2, [r1]
   136a0:	ldr	r1, [sp, #36]	; 0x24
   136a4:	add	r2, r1, #1
   136a8:	str	r2, [sp, #36]	; 0x24
   136ac:	ldrb	r1, [r1]
   136b0:	mov	r2, r1
   136b4:	ldr	r3, [pc, #252]	; 137b8 <inetntoa+0x23c>
   136b8:	add	r3, pc, r3
   136bc:	add	r1, r3, r1, lsl #2
   136c0:	ldr	r1, [r1]
   136c4:	str	r1, [sp, #32]
   136c8:	str	r0, [sp, #12]
   136cc:	str	r2, [sp, #8]
   136d0:	ldr	r0, [sp, #32]
   136d4:	ldrsb	r0, [r0]
   136d8:	cmp	r0, #0
   136dc:	beq	13704 <inetntoa+0x188>
   136e0:	ldr	r0, [sp, #32]
   136e4:	add	r1, r0, #1
   136e8:	str	r1, [sp, #32]
   136ec:	ldrb	r0, [r0]
   136f0:	ldr	r1, [sp, #40]	; 0x28
   136f4:	add	r2, r1, #1
   136f8:	str	r2, [sp, #40]	; 0x28
   136fc:	strb	r0, [r1]
   13700:	b	136d0 <inetntoa+0x154>
   13704:	ldr	r0, [pc, #152]	; 137a4 <inetntoa+0x228>
   13708:	add	r0, pc, r0
   1370c:	ldr	r1, [sp, #40]	; 0x28
   13710:	add	r2, r1, #1
   13714:	str	r2, [sp, #40]	; 0x28
   13718:	mov	r2, #46	; 0x2e
   1371c:	strb	r2, [r1]
   13720:	ldr	r1, [sp, #36]	; 0x24
   13724:	ldrb	r1, [r1]
   13728:	mov	r2, r1
   1372c:	ldr	r3, [pc, #136]	; 137bc <inetntoa+0x240>
   13730:	add	r3, pc, r3
   13734:	add	r1, r3, r1, lsl #2
   13738:	ldr	r1, [r1]
   1373c:	str	r1, [sp, #32]
   13740:	str	r0, [sp, #4]
   13744:	str	r2, [sp]
   13748:	ldr	r0, [sp, #32]
   1374c:	ldrsb	r0, [r0]
   13750:	cmp	r0, #0
   13754:	beq	1377c <inetntoa+0x200>
   13758:	ldr	r0, [sp, #32]
   1375c:	add	r1, r0, #1
   13760:	str	r1, [sp, #32]
   13764:	ldrb	r0, [r0]
   13768:	ldr	r1, [sp, #40]	; 0x28
   1376c:	add	r2, r1, #1
   13770:	str	r2, [sp, #40]	; 0x28
   13774:	strb	r0, [r1]
   13778:	b	13748 <inetntoa+0x1cc>
   1377c:	ldr	r0, [pc, #36]	; 137a8 <inetntoa+0x22c>
   13780:	add	r0, pc, r0
   13784:	ldr	r1, [sp, #40]	; 0x28
   13788:	movw	r2, #0
   1378c:	strb	r2, [r1]
   13790:	add	sp, sp, #48	; 0x30
   13794:	bx	lr
   13798:	.word	0x00021f0c
   1379c:	.word	0x00021e88
   137a0:	.word	0x00021e08
   137a4:	.word	0x00021d88
   137a8:	.word	0x00034760
   137ac:	.word	0x00034950
   137b0:	.word	0x00021ed8
   137b4:	.word	0x00021e58
   137b8:	.word	0x00021dd8
   137bc:	.word	0x00021d60

000137c0 <rb_unsupported_event>:
   137c0:	movw	r0, #0
   137c4:	bx	lr

000137c8 <rb_ssl_shutdown>:
   137c8:	push	{fp, lr}
   137cc:	mov	fp, sp
   137d0:	sub	sp, sp, #24
   137d4:	str	r0, [fp, #-4]
   137d8:	ldr	r0, [fp, #-4]
   137dc:	movw	r1, #0
   137e0:	cmp	r0, r1
   137e4:	beq	137fc <rb_ssl_shutdown+0x34>
   137e8:	ldr	r0, [fp, #-4]
   137ec:	ldr	r0, [r0, #56]	; 0x38
   137f0:	movw	r1, #0
   137f4:	cmp	r0, r1
   137f8:	bne	13800 <rb_ssl_shutdown+0x38>
   137fc:	b	13894 <rb_ssl_shutdown+0xcc>
   13800:	bl	1389c <rb_ssl_last_err>
   13804:	movw	lr, #0
   13808:	str	lr, [fp, #-8]
   1380c:	str	r0, [sp, #4]
   13810:	ldr	r0, [fp, #-8]
   13814:	cmp	r0, #4
   13818:	bge	1387c <rb_ssl_shutdown+0xb4>
   1381c:	ldr	r0, [fp, #-4]
   13820:	ldr	r0, [r0, #56]	; 0x38
   13824:	bl	5470 <SSL_shutdown@plt>
   13828:	str	r0, [sp, #12]
   1382c:	ldr	r0, [fp, #-4]
   13830:	ldr	r0, [r0, #56]	; 0x38
   13834:	ldr	r1, [sp, #12]
   13838:	bl	5680 <SSL_get_error@plt>
   1383c:	str	r0, [sp, #8]
   13840:	ldr	r0, [sp, #12]
   13844:	cmp	r0, #0
   13848:	bge	13864 <rb_ssl_shutdown+0x9c>
   1384c:	ldr	r0, [sp, #8]
   13850:	cmp	r0, #2
   13854:	beq	13868 <rb_ssl_shutdown+0xa0>
   13858:	ldr	r0, [sp, #8]
   1385c:	cmp	r0, #3
   13860:	beq	13868 <rb_ssl_shutdown+0xa0>
   13864:	b	1387c <rb_ssl_shutdown+0xb4>
   13868:	b	1386c <rb_ssl_shutdown+0xa4>
   1386c:	ldr	r0, [fp, #-8]
   13870:	add	r0, r0, #1
   13874:	str	r0, [fp, #-8]
   13878:	b	13810 <rb_ssl_shutdown+0x48>
   1387c:	ldr	r0, [fp, #-4]
   13880:	ldr	r0, [r0, #56]	; 0x38
   13884:	bl	532c <SSL_free@plt>
   13888:	ldr	r0, [fp, #-4]
   1388c:	movw	lr, #0
   13890:	str	lr, [r0, #56]	; 0x38
   13894:	mov	sp, fp
   13898:	pop	{fp, pc}

0001389c <rb_ssl_last_err>:
   1389c:	push	{fp, lr}
   138a0:	mov	fp, sp
   138a4:	sub	sp, sp, #8
   138a8:	movw	r0, #0
   138ac:	str	r0, [sp]
   138b0:	bl	4dbc <ERR_get_error@plt>
   138b4:	str	r0, [sp, #4]
   138b8:	cmp	r0, #0
   138bc:	beq	138cc <rb_ssl_last_err+0x30>
   138c0:	ldr	r0, [sp, #4]
   138c4:	str	r0, [sp]
   138c8:	b	138b0 <rb_ssl_last_err+0x14>
   138cc:	ldr	r0, [sp]
   138d0:	mov	sp, fp
   138d4:	pop	{fp, pc}

000138d8 <rb_init_ssl>:
   138d8:	push	{fp, lr}
   138dc:	mov	fp, sp
   138e0:	ldr	r0, [pc, #20]	; 138fc <rb_init_ssl+0x24>
   138e4:	add	r0, pc, r0
   138e8:	ldr	r1, [pc, #16]	; 13900 <rb_init_ssl+0x28>
   138ec:	add	r1, pc, r1
   138f0:	bl	52e4 <rb_lib_log@plt>
   138f4:	movw	r0, #1
   138f8:	pop	{fp, pc}
   138fc:	.word	0x0000f855
   13900:	.word	0x0000f86d

00013904 <rb_setup_ssl_server>:
   13904:	push	{fp, lr}
   13908:	mov	fp, sp
   1390c:	sub	sp, sp, #128	; 0x80
   13910:	str	r0, [fp, #-8]
   13914:	str	r1, [fp, #-12]
   13918:	str	r2, [fp, #-16]
   1391c:	str	r3, [fp, #-20]	; 0xffffffec
   13920:	ldr	r0, [fp, #-8]
   13924:	movw	r1, #0
   13928:	cmp	r0, r1
   1392c:	bne	13950 <rb_setup_ssl_server+0x4c>
   13930:	ldr	r0, [pc, #1120]	; 13d98 <rb_setup_ssl_server+0x494>
   13934:	add	r0, pc, r0
   13938:	ldr	r1, [pc, #1116]	; 13d9c <rb_setup_ssl_server+0x498>
   1393c:	add	r1, pc, r1
   13940:	bl	52e4 <rb_lib_log@plt>
   13944:	movw	r0, #0
   13948:	str	r0, [fp, #-4]
   1394c:	b	13d28 <rb_setup_ssl_server+0x424>
   13950:	ldr	r0, [fp, #-12]
   13954:	movw	r1, #0
   13958:	cmp	r0, r1
   1395c:	bne	13968 <rb_setup_ssl_server+0x64>
   13960:	ldr	r0, [fp, #-8]
   13964:	str	r0, [fp, #-12]
   13968:	ldr	r0, [fp, #-20]	; 0xffffffec
   1396c:	movw	r1, #0
   13970:	cmp	r0, r1
   13974:	bne	13984 <rb_setup_ssl_server+0x80>
   13978:	ldr	r0, [pc, #948]	; 13d34 <rb_setup_ssl_server+0x430>
   1397c:	add	r0, pc, r0
   13980:	str	r0, [fp, #-20]	; 0xffffffec
   13984:	bl	1389c <rb_ssl_last_err>
   13988:	str	r0, [fp, #-36]	; 0xffffffdc
   1398c:	bl	4d2c <TLS_method@plt>
   13990:	bl	54f4 <SSL_CTX_new@plt>
   13994:	str	r0, [fp, #-24]	; 0xffffffe8
   13998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1399c:	movw	lr, #0
   139a0:	cmp	r0, lr
   139a4:	bne	139dc <rb_setup_ssl_server+0xd8>
   139a8:	bl	1389c <rb_ssl_last_err>
   139ac:	bl	13da0 <rb_ssl_strerror>
   139b0:	ldr	lr, [pc, #984]	; 13d90 <rb_setup_ssl_server+0x48c>
   139b4:	add	lr, pc, lr
   139b8:	ldr	r1, [pc, #980]	; 13d94 <rb_setup_ssl_server+0x490>
   139bc:	add	r1, pc, r1
   139c0:	str	r0, [fp, #-40]	; 0xffffffd8
   139c4:	mov	r0, lr
   139c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   139cc:	bl	52e4 <rb_lib_log@plt>
   139d0:	movw	r0, #0
   139d4:	str	r0, [fp, #-4]
   139d8:	b	13d28 <rb_setup_ssl_server+0x424>
   139dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139e0:	ldr	r1, [fp, #-8]
   139e4:	bl	5200 <SSL_CTX_use_certificate_chain_file@plt>
   139e8:	cmp	r0, #1
   139ec:	beq	13a38 <rb_setup_ssl_server+0x134>
   139f0:	ldr	r2, [fp, #-8]
   139f4:	str	r2, [fp, #-44]	; 0xffffffd4
   139f8:	bl	1389c <rb_ssl_last_err>
   139fc:	bl	13da0 <rb_ssl_strerror>
   13a00:	ldr	r2, [pc, #896]	; 13d88 <rb_setup_ssl_server+0x484>
   13a04:	add	r2, pc, r2
   13a08:	ldr	lr, [pc, #892]	; 13d8c <rb_setup_ssl_server+0x488>
   13a0c:	add	r1, pc, lr
   13a10:	str	r0, [fp, #-48]	; 0xffffffd0
   13a14:	mov	r0, r2
   13a18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a20:	bl	52e4 <rb_lib_log@plt>
   13a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a28:	bl	4e1c <SSL_CTX_free@plt>
   13a2c:	movw	r0, #0
   13a30:	str	r0, [fp, #-4]
   13a34:	b	13d28 <rb_setup_ssl_server+0x424>
   13a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a3c:	ldr	r1, [fp, #-12]
   13a40:	movw	r2, #1
   13a44:	bl	52f0 <SSL_CTX_use_PrivateKey_file@plt>
   13a48:	cmp	r0, #1
   13a4c:	beq	13a98 <rb_setup_ssl_server+0x194>
   13a50:	ldr	r2, [fp, #-12]
   13a54:	str	r2, [fp, #-52]	; 0xffffffcc
   13a58:	bl	1389c <rb_ssl_last_err>
   13a5c:	bl	13da0 <rb_ssl_strerror>
   13a60:	ldr	r2, [pc, #792]	; 13d80 <rb_setup_ssl_server+0x47c>
   13a64:	add	r2, pc, r2
   13a68:	ldr	lr, [pc, #788]	; 13d84 <rb_setup_ssl_server+0x480>
   13a6c:	add	r1, pc, lr
   13a70:	str	r0, [fp, #-56]	; 0xffffffc8
   13a74:	mov	r0, r2
   13a78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13a7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a80:	bl	52e4 <rb_lib_log@plt>
   13a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a88:	bl	4e1c <SSL_CTX_free@plt>
   13a8c:	movw	r0, #0
   13a90:	str	r0, [fp, #-4]
   13a94:	b	13d28 <rb_setup_ssl_server+0x424>
   13a98:	ldr	r0, [fp, #-16]
   13a9c:	movw	r1, #0
   13aa0:	cmp	r0, r1
   13aa4:	bne	13ac0 <rb_setup_ssl_server+0x1bc>
   13aa8:	ldr	r0, [pc, #668]	; 13d4c <rb_setup_ssl_server+0x448>
   13aac:	add	r0, pc, r0
   13ab0:	ldr	r1, [pc, #664]	; 13d50 <rb_setup_ssl_server+0x44c>
   13ab4:	add	r1, pc, r1
   13ab8:	bl	52e4 <rb_lib_log@plt>
   13abc:	b	13bd0 <rb_setup_ssl_server+0x2cc>
   13ac0:	ldr	r0, [pc, #624]	; 13d38 <rb_setup_ssl_server+0x434>
   13ac4:	add	r1, pc, r0
   13ac8:	ldr	r0, [fp, #-16]
   13acc:	bl	4fd8 <fopen@plt>
   13ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   13ad4:	movw	r0, #0
   13ad8:	str	r0, [fp, #-32]	; 0xffffffe0
   13adc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ae0:	cmp	r1, r0
   13ae4:	bne	13b24 <rb_setup_ssl_server+0x220>
   13ae8:	ldr	r2, [fp, #-16]
   13aec:	str	r2, [fp, #-60]	; 0xffffffc4
   13af0:	bl	56c8 <__errno_location@plt>
   13af4:	ldr	r0, [r0]
   13af8:	bl	4d5c <strerror@plt>
   13afc:	ldr	r2, [pc, #576]	; 13d44 <rb_setup_ssl_server+0x440>
   13b00:	add	r2, pc, r2
   13b04:	ldr	lr, [pc, #572]	; 13d48 <rb_setup_ssl_server+0x444>
   13b08:	add	r1, pc, lr
   13b0c:	str	r0, [sp, #64]	; 0x40
   13b10:	mov	r0, r2
   13b14:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13b18:	ldr	r3, [sp, #64]	; 0x40
   13b1c:	bl	52e4 <rb_lib_log@plt>
   13b20:	b	13bcc <rb_setup_ssl_server+0x2c8>
   13b24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b28:	sub	r1, fp, #32
   13b2c:	movw	r2, #0
   13b30:	str	r2, [sp, #60]	; 0x3c
   13b34:	ldr	r3, [sp, #60]	; 0x3c
   13b38:	bl	53b0 <PEM_read_DHparams@plt>
   13b3c:	movw	r1, #0
   13b40:	cmp	r0, r1
   13b44:	bne	13b8c <rb_setup_ssl_server+0x288>
   13b48:	ldr	r2, [fp, #-16]
   13b4c:	str	r2, [sp, #56]	; 0x38
   13b50:	bl	1389c <rb_ssl_last_err>
   13b54:	bl	13da0 <rb_ssl_strerror>
   13b58:	ldr	r2, [pc, #476]	; 13d3c <rb_setup_ssl_server+0x438>
   13b5c:	add	r2, pc, r2
   13b60:	ldr	lr, [pc, #472]	; 13d40 <rb_setup_ssl_server+0x43c>
   13b64:	add	r1, pc, lr
   13b68:	str	r0, [sp, #52]	; 0x34
   13b6c:	mov	r0, r2
   13b70:	ldr	r2, [sp, #56]	; 0x38
   13b74:	ldr	r3, [sp, #52]	; 0x34
   13b78:	bl	52e4 <rb_lib_log@plt>
   13b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b80:	bl	4f48 <fclose@plt>
   13b84:	str	r0, [sp, #48]	; 0x30
   13b88:	b	13bc8 <rb_setup_ssl_server+0x2c4>
   13b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13b94:	movw	r2, #3
   13b98:	str	r1, [sp, #44]	; 0x2c
   13b9c:	mov	r1, r2
   13ba0:	movw	r2, #0
   13ba4:	ldr	r3, [sp, #44]	; 0x2c
   13ba8:	bl	5038 <SSL_CTX_ctrl@plt>
   13bac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13bb0:	str	r0, [sp, #40]	; 0x28
   13bb4:	mov	r0, r1
   13bb8:	bl	5434 <DH_free@plt>
   13bbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13bc0:	bl	4f48 <fclose@plt>
   13bc4:	str	r0, [sp, #36]	; 0x24
   13bc8:	b	13bcc <rb_setup_ssl_server+0x2c8>
   13bcc:	b	13bd0 <rb_setup_ssl_server+0x2cc>
   13bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bd8:	bl	4db0 <SSL_CTX_set_cipher_list@plt>
   13bdc:	cmp	r0, #1
   13be0:	beq	13c0c <rb_setup_ssl_server+0x308>
   13be4:	ldr	r0, [pc, #396]	; 13d78 <rb_setup_ssl_server+0x474>
   13be8:	add	r0, pc, r0
   13bec:	ldr	r1, [pc, #392]	; 13d7c <rb_setup_ssl_server+0x478>
   13bf0:	add	r1, pc, r1
   13bf4:	bl	52e4 <rb_lib_log@plt>
   13bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bfc:	bl	4e1c <SSL_CTX_free@plt>
   13c00:	movw	r0, #0
   13c04:	str	r0, [fp, #-4]
   13c08:	b	13d28 <rb_setup_ssl_server+0x424>
   13c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c10:	movw	r1, #44	; 0x2c
   13c14:	movw	r2, #0
   13c18:	str	r2, [sp, #32]
   13c1c:	ldr	r3, [sp, #32]
   13c20:	bl	5038 <SSL_CTX_ctrl@plt>
   13c24:	ldr	r1, [pc, #312]	; 13d64 <rb_setup_ssl_server+0x460>
   13c28:	add	r2, pc, r1
   13c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c30:	str	r0, [sp, #28]
   13c34:	mov	r0, r1
   13c38:	movw	r1, #5
   13c3c:	bl	56f8 <SSL_CTX_set_verify@plt>
   13c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c44:	movw	r1, #2048	; 0x800
   13c48:	bl	4edc <SSL_CTX_clear_options@plt>
   13c4c:	ldr	r1, [pc, #268]	; 13d60 <rb_setup_ssl_server+0x45c>
   13c50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c54:	str	r0, [sp, #24]
   13c58:	mov	r0, r2
   13c5c:	bl	5218 <SSL_CTX_set_options@plt>
   13c60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c64:	str	r0, [sp, #20]
   13c68:	mov	r0, r1
   13c6c:	movw	r1, #16384	; 0x4000
   13c70:	bl	5218 <SSL_CTX_set_options@plt>
   13c74:	ldr	r1, [pc, #224]	; 13d5c <rb_setup_ssl_server+0x458>
   13c78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c7c:	str	r0, [sp, #16]
   13c80:	mov	r0, r2
   13c84:	bl	5218 <SSL_CTX_set_options@plt>
   13c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c8c:	str	r0, [sp, #12]
   13c90:	mov	r0, r1
   13c94:	movw	r1, #0
   13c98:	bl	5218 <SSL_CTX_set_options@plt>
   13c9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ca0:	str	r0, [sp, #8]
   13ca4:	mov	r0, r1
   13ca8:	movw	r1, #0
   13cac:	bl	5218 <SSL_CTX_set_options@plt>
   13cb0:	ldr	r1, [pc, #160]	; 13d58 <rb_setup_ssl_server+0x454>
   13cb4:	add	r3, pc, r1
   13cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cbc:	str	r0, [sp, #4]
   13cc0:	mov	r0, r1
   13cc4:	movw	r1, #92	; 0x5c
   13cc8:	movw	r2, #0
   13ccc:	bl	5038 <SSL_CTX_ctrl@plt>
   13cd0:	ldr	r1, [pc, #124]	; 13d54 <rb_setup_ssl_server+0x450>
   13cd4:	add	r1, pc, r1
   13cd8:	ldr	r1, [r1]
   13cdc:	movw	r2, #0
   13ce0:	cmp	r1, r2
   13ce4:	str	r0, [sp]
   13ce8:	beq	13cfc <rb_setup_ssl_server+0x3f8>
   13cec:	ldr	r0, [pc, #116]	; 13d68 <rb_setup_ssl_server+0x464>
   13cf0:	add	r0, pc, r0
   13cf4:	ldr	r0, [r0]
   13cf8:	bl	4e1c <SSL_CTX_free@plt>
   13cfc:	ldr	r0, [pc, #104]	; 13d6c <rb_setup_ssl_server+0x468>
   13d00:	add	r0, pc, r0
   13d04:	ldr	r1, [pc, #100]	; 13d70 <rb_setup_ssl_server+0x46c>
   13d08:	add	r1, pc, r1
   13d0c:	ldr	r2, [pc, #96]	; 13d74 <rb_setup_ssl_server+0x470>
   13d10:	add	r2, pc, r2
   13d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d18:	str	r3, [r2]
   13d1c:	bl	52e4 <rb_lib_log@plt>
   13d20:	movw	r0, #1
   13d24:	str	r0, [fp, #-4]
   13d28:	ldr	r0, [fp, #-4]
   13d2c:	mov	sp, fp
   13d30:	pop	{fp, pc}
   13d34:	.word	0x0000fa74
   13d38:	.word	0x0000fc4a
   13d3c:	.word	0x0000f6e9
   13d40:	.word	0x0000f623
   13d44:	.word	0x0000f730
   13d48:	.word	0x0000f67f
   13d4c:	.word	0x0000f760
   13d50:	.word	0x0000f6d3
   13d54:	.word	0x0003421c
   13d58:	.word	0x00021bdc
   13d5c:	.word	0x00400000
   13d60:	.word	0x04000000
   13d64:	.word	0x000001ac
   13d68:	.word	0x00034200
   13d6c:	.word	0x0000f5a3
   13d70:	.word	0x0000f47f
   13d74:	.word	0x000341e0
   13d78:	.word	0x0000f67e
   13d7c:	.word	0x0000f597
   13d80:	.word	0x0000f77d
   13d84:	.word	0x0000f71b
   13d88:	.word	0x0000f7ab
   13d8c:	.word	0x0000f77b
   13d90:	.word	0x0000f7e7
   13d94:	.word	0x0000f7cb
   13d98:	.word	0x0000f831
   13d9c:	.word	0x0000f84b

00013da0 <rb_ssl_strerror>:
   13da0:	push	{fp, lr}
   13da4:	mov	fp, sp
   13da8:	sub	sp, sp, #8
   13dac:	ldr	r1, [pc, #36]	; 13dd8 <rb_ssl_strerror+0x38>
   13db0:	add	r1, pc, r1
   13db4:	str	r0, [sp, #4]
   13db8:	ldr	r0, [sp, #4]
   13dbc:	movw	r2, #512	; 0x200
   13dc0:	bl	4f6c <ERR_error_string_n@plt>
   13dc4:	ldr	r0, [pc, #8]	; 13dd4 <rb_ssl_strerror+0x34>
   13dc8:	add	r0, pc, r0
   13dcc:	mov	sp, fp
   13dd0:	pop	{fp, pc}
   13dd4:	.word	0x0003432c
   13dd8:	.word	0x00034344

00013ddc <verify_accept_all_cb>:
   13ddc:	sub	sp, sp, #8
   13de0:	str	r0, [sp, #4]
   13de4:	str	r1, [sp]
   13de8:	movw	r0, #1
   13dec:	add	sp, sp, #8
   13df0:	bx	lr

00013df4 <rb_init_prng>:
   13df4:	push	{fp, lr}
   13df8:	mov	fp, sp
   13dfc:	sub	sp, sp, #24
   13e00:	str	r0, [fp, #-8]
   13e04:	str	r1, [sp, #12]
   13e08:	bl	1389c <rb_ssl_last_err>
   13e0c:	ldr	r1, [sp, #12]
   13e10:	cmp	r1, #0
   13e14:	str	r0, [sp, #8]
   13e18:	bne	13e58 <rb_init_prng+0x64>
   13e1c:	ldr	r0, [fp, #-8]
   13e20:	mvn	r1, #0
   13e24:	bl	4dec <RAND_load_file@plt>
   13e28:	cmp	r0, #0
   13e2c:	bge	13e58 <rb_init_prng+0x64>
   13e30:	bl	1389c <rb_ssl_last_err>
   13e34:	bl	13da0 <rb_ssl_strerror>
   13e38:	ldr	lr, [pc, #128]	; 13ec0 <rb_init_prng+0xcc>
   13e3c:	add	lr, pc, lr
   13e40:	ldr	r1, [pc, #124]	; 13ec4 <rb_init_prng+0xd0>
   13e44:	add	r1, pc, r1
   13e48:	str	r0, [sp, #4]
   13e4c:	mov	r0, lr
   13e50:	ldr	r2, [sp, #4]
   13e54:	bl	52e4 <rb_lib_log@plt>
   13e58:	bl	5590 <RAND_status@plt>
   13e5c:	cmp	r0, #1
   13e60:	beq	13e98 <rb_init_prng+0xa4>
   13e64:	bl	1389c <rb_ssl_last_err>
   13e68:	bl	13da0 <rb_ssl_strerror>
   13e6c:	ldr	lr, [pc, #92]	; 13ed0 <rb_init_prng+0xdc>
   13e70:	add	lr, pc, lr
   13e74:	ldr	r1, [pc, #88]	; 13ed4 <rb_init_prng+0xe0>
   13e78:	add	r1, pc, r1
   13e7c:	str	r0, [sp]
   13e80:	mov	r0, lr
   13e84:	ldr	r2, [sp]
   13e88:	bl	52e4 <rb_lib_log@plt>
   13e8c:	movw	r0, #0
   13e90:	str	r0, [fp, #-4]
   13e94:	b	13eb4 <rb_init_prng+0xc0>
   13e98:	ldr	r0, [pc, #40]	; 13ec8 <rb_init_prng+0xd4>
   13e9c:	add	r0, pc, r0
   13ea0:	ldr	r1, [pc, #36]	; 13ecc <rb_init_prng+0xd8>
   13ea4:	add	r1, pc, r1
   13ea8:	bl	52e4 <rb_lib_log@plt>
   13eac:	movw	r0, #1
   13eb0:	str	r0, [fp, #-4]
   13eb4:	ldr	r0, [fp, #-4]
   13eb8:	mov	sp, fp
   13ebc:	pop	{fp, pc}
   13ec0:	.word	0x0000f488
   13ec4:	.word	0x0000f497
   13ec8:	.word	0x0000f460
   13ecc:	.word	0x0000f437
   13ed0:	.word	0x0000f478
   13ed4:	.word	0x0000f463

00013ed8 <rb_get_random>:
   13ed8:	push	{fp, lr}
   13edc:	mov	fp, sp
   13ee0:	sub	sp, sp, #24
   13ee4:	str	r0, [fp, #-8]
   13ee8:	str	r1, [sp, #12]
   13eec:	bl	1389c <rb_ssl_last_err>
   13ef0:	ldr	r1, [fp, #-8]
   13ef4:	ldr	lr, [sp, #12]
   13ef8:	str	r0, [sp, #8]
   13efc:	mov	r0, r1
   13f00:	mov	r1, lr
   13f04:	bl	54ac <RAND_bytes@plt>
   13f08:	cmp	r0, #1
   13f0c:	beq	13f44 <rb_get_random+0x6c>
   13f10:	bl	1389c <rb_ssl_last_err>
   13f14:	bl	13da0 <rb_ssl_strerror>
   13f18:	ldr	lr, [pc, #56]	; 13f58 <rb_get_random+0x80>
   13f1c:	add	lr, pc, lr
   13f20:	ldr	r1, [pc, #52]	; 13f5c <rb_get_random+0x84>
   13f24:	add	r1, pc, r1
   13f28:	str	r0, [sp, #4]
   13f2c:	mov	r0, lr
   13f30:	ldr	r2, [sp, #4]
   13f34:	bl	52e4 <rb_lib_log@plt>
   13f38:	movw	r0, #0
   13f3c:	str	r0, [fp, #-4]
   13f40:	b	13f4c <rb_get_random+0x74>
   13f44:	movw	r0, #1
   13f48:	str	r0, [fp, #-4]
   13f4c:	ldr	r0, [fp, #-4]
   13f50:	mov	sp, fp
   13f54:	pop	{fp, pc}
   13f58:	.word	0x0000f3f5
   13f5c:	.word	0x0000f400

00013f60 <rb_get_ssl_strerror>:
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #8
   13f6c:	str	r0, [sp, #4]
   13f70:	ldr	r0, [sp, #4]
   13f74:	ldr	r0, [r0, #64]	; 0x40
   13f78:	bl	13da0 <rb_ssl_strerror>
   13f7c:	mov	sp, fp
   13f80:	pop	{fp, pc}

00013f84 <rb_get_ssl_certfp>:
   13f84:	push	{fp, lr}
   13f88:	mov	fp, sp
   13f8c:	sub	sp, sp, #32
   13f90:	str	r0, [fp, #-8]
   13f94:	str	r1, [fp, #-12]
   13f98:	str	r2, [sp, #16]
   13f9c:	ldr	r0, [fp, #-8]
   13fa0:	movw	r1, #0
   13fa4:	cmp	r0, r1
   13fa8:	beq	13fc0 <rb_get_ssl_certfp+0x3c>
   13fac:	ldr	r0, [fp, #-8]
   13fb0:	ldr	r0, [r0, #56]	; 0x38
   13fb4:	movw	r1, #0
   13fb8:	cmp	r0, r1
   13fbc:	bne	13fcc <rb_get_ssl_certfp+0x48>
   13fc0:	movw	r0, #0
   13fc4:	str	r0, [fp, #-4]
   13fc8:	b	14068 <rb_get_ssl_certfp+0xe4>
   13fcc:	ldr	r0, [fp, #-8]
   13fd0:	ldr	r0, [r0, #56]	; 0x38
   13fd4:	bl	53ec <SSL_get_peer_certificate@plt>
   13fd8:	str	r0, [sp, #12]
   13fdc:	ldr	r0, [sp, #12]
   13fe0:	movw	lr, #0
   13fe4:	cmp	r0, lr
   13fe8:	bne	13ff8 <rb_get_ssl_certfp+0x74>
   13fec:	movw	r0, #0
   13ff0:	str	r0, [fp, #-4]
   13ff4:	b	14068 <rb_get_ssl_certfp+0xe4>
   13ff8:	mov	r0, #0
   13ffc:	str	r0, [sp, #8]
   14000:	ldr	r0, [fp, #-8]
   14004:	ldr	r0, [r0, #56]	; 0x38
   14008:	bl	5410 <SSL_get_verify_result@plt>
   1400c:	mov	lr, r0
   14010:	cmp	r0, #0
   14014:	str	lr, [sp, #4]
   14018:	beq	14044 <rb_get_ssl_certfp+0xc0>
   1401c:	b	14020 <rb_get_ssl_certfp+0x9c>
   14020:	ldr	r0, [sp, #4]
   14024:	sub	r1, r0, #18
   14028:	cmp	r1, #4
   1402c:	bcc	14044 <rb_get_ssl_certfp+0xc0>
   14030:	b	14034 <rb_get_ssl_certfp+0xb0>
   14034:	ldr	r0, [sp, #4]
   14038:	cmp	r0, #27
   1403c:	bne	14058 <rb_get_ssl_certfp+0xd4>
   14040:	b	14044 <rb_get_ssl_certfp+0xc0>
   14044:	ldr	r0, [sp, #12]
   14048:	ldr	r1, [fp, #-12]
   1404c:	ldr	r2, [sp, #16]
   14050:	bl	14074 <make_certfp>
   14054:	str	r0, [sp, #8]
   14058:	ldr	r0, [sp, #12]
   1405c:	bl	5638 <X509_free@plt>
   14060:	ldr	r0, [sp, #8]
   14064:	str	r0, [fp, #-4]
   14068:	ldr	r0, [fp, #-4]
   1406c:	mov	sp, fp
   14070:	pop	{fp, pc}

00014074 <make_certfp>:
   14074:	push	{fp, lr}
   14078:	mov	fp, sp
   1407c:	sub	sp, sp, #48	; 0x30
   14080:	str	r0, [fp, #-8]
   14084:	str	r1, [fp, #-12]
   14088:	str	r2, [fp, #-16]
   1408c:	mov	r0, #0
   14090:	str	r0, [fp, #-20]	; 0xffffffec
   14094:	str	r0, [sp, #24]
   14098:	str	r0, [sp, #20]
   1409c:	str	r0, [sp, #16]
   140a0:	ldr	r0, [fp, #-16]
   140a4:	cmp	r0, #0
   140a8:	str	r0, [sp, #12]
   140ac:	beq	140fc <make_certfp+0x88>
   140b0:	b	140b4 <make_certfp+0x40>
   140b4:	ldr	r0, [sp, #12]
   140b8:	cmp	r0, #1
   140bc:	beq	14124 <make_certfp+0xb0>
   140c0:	b	140c4 <make_certfp+0x50>
   140c4:	ldr	r0, [sp, #12]
   140c8:	cmp	r0, #2
   140cc:	beq	1414c <make_certfp+0xd8>
   140d0:	b	140d4 <make_certfp+0x60>
   140d4:	movw	r0, #4097	; 0x1001
   140d8:	ldr	r1, [sp, #12]
   140dc:	cmp	r1, r0
   140e0:	beq	14174 <make_certfp+0x100>
   140e4:	b	140e8 <make_certfp+0x74>
   140e8:	movw	r0, #4098	; 0x1002
   140ec:	ldr	r1, [sp, #12]
   140f0:	cmp	r1, r0
   140f4:	beq	141a0 <make_certfp+0x12c>
   140f8:	b	141cc <make_certfp+0x158>
   140fc:	movw	r0, #20
   14100:	str	r0, [fp, #-20]	; 0xffffffec
   14104:	bl	52b4 <EVP_sha1@plt>
   14108:	ldr	lr, [pc, #324]	; 14254 <make_certfp+0x1e0>
   1410c:	ldr	lr, [pc, lr]
   14110:	str	r0, [sp, #24]
   14114:	str	lr, [sp, #20]
   14118:	ldr	r0, [fp, #-8]
   1411c:	str	r0, [sp, #16]
   14120:	b	141d8 <make_certfp+0x164>
   14124:	movw	r0, #32
   14128:	str	r0, [fp, #-20]	; 0xffffffec
   1412c:	bl	55a8 <EVP_sha256@plt>
   14130:	ldr	lr, [pc, #280]	; 14250 <make_certfp+0x1dc>
   14134:	ldr	lr, [pc, lr]
   14138:	str	r0, [sp, #24]
   1413c:	str	lr, [sp, #20]
   14140:	ldr	r0, [fp, #-8]
   14144:	str	r0, [sp, #16]
   14148:	b	141d8 <make_certfp+0x164>
   1414c:	movw	r0, #64	; 0x40
   14150:	str	r0, [fp, #-20]	; 0xffffffec
   14154:	bl	5578 <EVP_sha512@plt>
   14158:	ldr	lr, [pc, #236]	; 1424c <make_certfp+0x1d8>
   1415c:	ldr	lr, [pc, lr]
   14160:	str	r0, [sp, #24]
   14164:	str	lr, [sp, #20]
   14168:	ldr	r0, [fp, #-8]
   1416c:	str	r0, [sp, #16]
   14170:	b	141d8 <make_certfp+0x164>
   14174:	movw	r0, #32
   14178:	str	r0, [fp, #-20]	; 0xffffffec
   1417c:	bl	55a8 <EVP_sha256@plt>
   14180:	ldr	lr, [pc, #192]	; 14248 <make_certfp+0x1d4>
   14184:	ldr	lr, [pc, lr]
   14188:	str	r0, [sp, #24]
   1418c:	str	lr, [sp, #20]
   14190:	ldr	r0, [fp, #-8]
   14194:	bl	4f00 <X509_get_X509_PUBKEY@plt>
   14198:	str	r0, [sp, #16]
   1419c:	b	141d8 <make_certfp+0x164>
   141a0:	movw	r0, #64	; 0x40
   141a4:	str	r0, [fp, #-20]	; 0xffffffec
   141a8:	bl	5578 <EVP_sha512@plt>
   141ac:	ldr	lr, [pc, #144]	; 14244 <make_certfp+0x1d0>
   141b0:	ldr	lr, [pc, lr]
   141b4:	str	r0, [sp, #24]
   141b8:	str	lr, [sp, #20]
   141bc:	ldr	r0, [fp, #-8]
   141c0:	bl	4f00 <X509_get_X509_PUBKEY@plt>
   141c4:	str	r0, [sp, #16]
   141c8:	b	141d8 <make_certfp+0x164>
   141cc:	movw	r0, #0
   141d0:	str	r0, [fp, #-4]
   141d4:	b	14238 <make_certfp+0x1c4>
   141d8:	ldr	r0, [sp, #20]
   141dc:	ldr	r1, [sp, #24]
   141e0:	ldr	r2, [sp, #16]
   141e4:	ldr	r3, [fp, #-12]
   141e8:	sub	ip, fp, #20
   141ec:	str	ip, [sp]
   141f0:	bl	53d4 <ASN1_item_digest@plt>
   141f4:	cmp	r0, #1
   141f8:	beq	14230 <make_certfp+0x1bc>
   141fc:	bl	1389c <rb_ssl_last_err>
   14200:	bl	13da0 <rb_ssl_strerror>
   14204:	ldr	lr, [pc, #76]	; 14258 <make_certfp+0x1e4>
   14208:	add	lr, pc, lr
   1420c:	ldr	r1, [pc, #72]	; 1425c <make_certfp+0x1e8>
   14210:	add	r1, pc, r1
   14214:	str	r0, [sp, #8]
   14218:	mov	r0, lr
   1421c:	ldr	r2, [sp, #8]
   14220:	bl	52e4 <rb_lib_log@plt>
   14224:	movw	r0, #0
   14228:	str	r0, [fp, #-4]
   1422c:	b	14238 <make_certfp+0x1c4>
   14230:	ldr	r0, [fp, #-20]	; 0xffffffec
   14234:	str	r0, [fp, #-4]
   14238:	ldr	r0, [fp, #-4]
   1423c:	mov	sp, fp
   14240:	pop	{fp, pc}
   14244:	.word	0x00021264
   14248:	.word	0x00021290
   1424c:	.word	0x000212ac
   14250:	.word	0x000212d4
   14254:	.word	0x000212fc
   14258:	.word	0x0000f1a4
   1425c:	.word	0x0000f1b5

00014260 <rb_get_ssl_certfp_file>:
   14260:	push	{fp, lr}
   14264:	mov	fp, sp
   14268:	sub	sp, sp, #40	; 0x28
   1426c:	ldr	r3, [pc, #184]	; 1432c <rb_get_ssl_certfp_file+0xcc>
   14270:	add	r3, pc, r3
   14274:	str	r0, [fp, #-8]
   14278:	str	r1, [fp, #-12]
   1427c:	str	r2, [fp, #-16]
   14280:	ldr	r0, [fp, #-8]
   14284:	mov	r1, r3
   14288:	bl	4fd8 <fopen@plt>
   1428c:	str	r0, [sp, #20]
   14290:	ldr	r0, [sp, #20]
   14294:	movw	r1, #0
   14298:	cmp	r0, r1
   1429c:	bne	142ac <rb_get_ssl_certfp_file+0x4c>
   142a0:	mvn	r0, #0
   142a4:	str	r0, [fp, #-4]
   142a8:	b	14320 <rb_get_ssl_certfp_file+0xc0>
   142ac:	ldr	r0, [sp, #20]
   142b0:	movw	r1, #0
   142b4:	str	r1, [sp, #8]
   142b8:	ldr	r2, [sp, #8]
   142bc:	ldr	r3, [sp, #8]
   142c0:	bl	51e8 <PEM_read_X509@plt>
   142c4:	str	r0, [sp, #16]
   142c8:	ldr	r0, [sp, #16]
   142cc:	movw	r1, #0
   142d0:	cmp	r0, r1
   142d4:	bne	142f0 <rb_get_ssl_certfp_file+0x90>
   142d8:	ldr	r0, [sp, #20]
   142dc:	bl	4f48 <fclose@plt>
   142e0:	movw	lr, #0
   142e4:	str	lr, [fp, #-4]
   142e8:	str	r0, [sp, #4]
   142ec:	b	14320 <rb_get_ssl_certfp_file+0xc0>
   142f0:	ldr	r0, [sp, #16]
   142f4:	ldr	r1, [fp, #-12]
   142f8:	ldr	r2, [fp, #-16]
   142fc:	bl	14074 <make_certfp>
   14300:	str	r0, [sp, #12]
   14304:	ldr	r0, [sp, #16]
   14308:	bl	5638 <X509_free@plt>
   1430c:	ldr	r0, [sp, #20]
   14310:	bl	4f48 <fclose@plt>
   14314:	ldr	r1, [sp, #12]
   14318:	str	r1, [fp, #-4]
   1431c:	str	r0, [sp]
   14320:	ldr	r0, [fp, #-4]
   14324:	mov	sp, fp
   14328:	pop	{fp, pc}
   1432c:	.word	0x0000f49e

00014330 <rb_get_ssl_info>:
   14330:	push	{r4, r5, r6, sl, fp, lr}
   14334:	add	fp, sp, #16
   14338:	sub	sp, sp, #56	; 0x38
   1433c:	str	r0, [fp, #-20]	; 0xffffffec
   14340:	str	r1, [fp, #-24]	; 0xffffffe8
   14344:	bl	50a4 <OpenSSL_version_num@plt>
   14348:	ldr	r1, [pc, #184]	; 14408 <rb_get_ssl_info+0xd8>
   1434c:	cmp	r0, r1
   14350:	bne	14390 <rb_get_ssl_info+0x60>
   14354:	ldr	r0, [pc, #184]	; 14414 <rb_get_ssl_info+0xe4>
   14358:	add	r2, pc, r0
   1435c:	ldr	r3, [pc, #164]	; 14408 <rb_get_ssl_info+0xd8>
   14360:	ldr	r0, [pc, #176]	; 14418 <rb_get_ssl_info+0xe8>
   14364:	add	r0, pc, r0
   14368:	ldr	r1, [fp, #-20]	; 0xffffffec
   1436c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14370:	str	r0, [fp, #-28]	; 0xffffffe4
   14374:	mov	r0, r1
   14378:	mov	r1, ip
   1437c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14380:	str	ip, [sp]
   14384:	bl	5584 <snprintf@plt>
   14388:	str	r0, [fp, #-32]	; 0xffffffe0
   1438c:	b	14400 <rb_get_ssl_info+0xd0>
   14390:	ldr	r0, [fp, #-20]	; 0xffffffec
   14394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14398:	str	r0, [sp, #36]	; 0x24
   1439c:	str	r1, [sp, #32]
   143a0:	bl	50a4 <OpenSSL_version_num@plt>
   143a4:	movw	r1, #0
   143a8:	str	r0, [sp, #28]
   143ac:	mov	r0, r1
   143b0:	bl	5668 <OpenSSL_version@plt>
   143b4:	ldr	r1, [pc, #80]	; 1440c <rb_get_ssl_info+0xdc>
   143b8:	add	r2, pc, r1
   143bc:	ldr	r3, [pc, #68]	; 14408 <rb_get_ssl_info+0xd8>
   143c0:	ldr	r1, [pc, #72]	; 14410 <rb_get_ssl_info+0xe0>
   143c4:	add	r1, pc, r1
   143c8:	ldr	lr, [sp, #36]	; 0x24
   143cc:	str	r0, [sp, #24]
   143d0:	mov	r0, lr
   143d4:	ldr	ip, [sp, #32]
   143d8:	str	r1, [sp, #20]
   143dc:	mov	r1, ip
   143e0:	ldr	r4, [sp, #20]
   143e4:	str	r4, [sp]
   143e8:	ldr	r5, [sp, #28]
   143ec:	str	r5, [sp, #4]
   143f0:	ldr	r6, [sp, #24]
   143f4:	str	r6, [sp, #8]
   143f8:	bl	5584 <snprintf@plt>
   143fc:	str	r0, [sp, #16]
   14400:	sub	sp, fp, #16
   14404:	pop	{r4, r5, r6, sl, fp, pc}
   14408:	.word	0x1010104f
   1440c:	.word	0x0000efba
   14410:	.word	0x0000ef92
   14414:	.word	0x0000efda
   14418:	.word	0x0000eff2

0001441c <rb_ssl_get_cipher>:
   1441c:	push	{fp, lr}
   14420:	mov	fp, sp
   14424:	sub	sp, sp, #32
   14428:	str	r0, [fp, #-8]
   1442c:	ldr	r0, [fp, #-8]
   14430:	movw	r1, #0
   14434:	cmp	r0, r1
   14438:	beq	14450 <rb_ssl_get_cipher+0x34>
   1443c:	ldr	r0, [fp, #-8]
   14440:	ldr	r0, [r0, #56]	; 0x38
   14444:	movw	r1, #0
   14448:	cmp	r0, r1
   1444c:	bne	1445c <rb_ssl_get_cipher+0x40>
   14450:	movw	r0, #0
   14454:	str	r0, [fp, #-4]
   14458:	b	144c0 <rb_ssl_get_cipher+0xa4>
   1445c:	ldr	r0, [fp, #-8]
   14460:	ldr	r0, [r0, #56]	; 0x38
   14464:	bl	568c <SSL_get_version@plt>
   14468:	str	r0, [fp, #-12]
   1446c:	ldr	r0, [fp, #-8]
   14470:	ldr	r0, [r0, #56]	; 0x38
   14474:	bl	4ee8 <SSL_get_current_cipher@plt>
   14478:	bl	508c <SSL_CIPHER_get_name@plt>
   1447c:	ldr	lr, [pc, #76]	; 144d0 <rb_ssl_get_cipher+0xb4>
   14480:	add	lr, pc, lr
   14484:	ldr	r1, [pc, #72]	; 144d4 <rb_ssl_get_cipher+0xb8>
   14488:	add	r2, pc, r1
   1448c:	str	r0, [sp, #16]
   14490:	ldr	r3, [fp, #-12]
   14494:	ldr	r0, [sp, #16]
   14498:	str	r0, [sp, #12]
   1449c:	mov	r0, lr
   144a0:	movw	r1, #512	; 0x200
   144a4:	ldr	lr, [sp, #12]
   144a8:	str	lr, [sp]
   144ac:	bl	5584 <snprintf@plt>
   144b0:	ldr	r1, [pc, #20]	; 144cc <rb_ssl_get_cipher+0xb0>
   144b4:	add	r1, pc, r1
   144b8:	str	r1, [fp, #-4]
   144bc:	str	r0, [sp, #8]
   144c0:	ldr	r0, [fp, #-4]
   144c4:	mov	sp, fp
   144c8:	pop	{fp, pc}
   144cc:	.word	0x00033a40
   144d0:	.word	0x00033a74
   144d4:	.word	0x0000ef1d

000144d8 <rb_ssl_read>:
   144d8:	push	{fp, lr}
   144dc:	mov	fp, sp
   144e0:	sub	sp, sp, #24
   144e4:	str	r0, [fp, #-4]
   144e8:	str	r1, [fp, #-8]
   144ec:	str	r2, [sp, #12]
   144f0:	ldr	r1, [fp, #-4]
   144f4:	ldr	r2, [fp, #-8]
   144f8:	ldr	r0, [sp, #12]
   144fc:	movw	r3, #0
   14500:	str	r0, [sp, #8]
   14504:	mov	r0, r3
   14508:	ldr	ip, [sp, #8]
   1450c:	str	ip, [sp]
   14510:	bl	1451c <rb_ssl_read_or_write>
   14514:	mov	sp, fp
   14518:	pop	{fp, pc}

0001451c <rb_ssl_read_or_write>:
   1451c:	push	{fp, lr}
   14520:	mov	fp, sp
   14524:	sub	sp, sp, #40	; 0x28
   14528:	ldr	ip, [fp, #8]
   1452c:	str	r0, [fp, #-8]
   14530:	str	r1, [fp, #-12]
   14534:	str	r2, [fp, #-16]
   14538:	str	r3, [sp, #20]
   1453c:	str	ip, [sp, #8]
   14540:	bl	1389c <rb_ssl_last_err>
   14544:	ldr	r1, [fp, #-8]
   14548:	cmp	r1, #0
   1454c:	str	r0, [sp, #4]
   14550:	bne	14570 <rb_ssl_read_or_write+0x54>
   14554:	ldr	r0, [fp, #-12]
   14558:	ldr	r0, [r0, #56]	; 0x38
   1455c:	ldr	r1, [fp, #-16]
   14560:	ldr	r2, [fp, #8]
   14564:	bl	514c <SSL_read@plt>
   14568:	str	r0, [sp, #16]
   1456c:	b	14588 <rb_ssl_read_or_write+0x6c>
   14570:	ldr	r0, [fp, #-12]
   14574:	ldr	r0, [r0, #56]	; 0x38
   14578:	ldr	r1, [sp, #20]
   1457c:	ldr	r2, [fp, #8]
   14580:	bl	4fc0 <SSL_write@plt>
   14584:	str	r0, [sp, #16]
   14588:	ldr	r0, [sp, #16]
   1458c:	cmp	r0, #0
   14590:	bge	14688 <rb_ssl_read_or_write+0x16c>
   14594:	ldr	r0, [fp, #-12]
   14598:	ldr	r0, [r0, #56]	; 0x38
   1459c:	ldr	r1, [sp, #16]
   145a0:	bl	5680 <SSL_get_error@plt>
   145a4:	sub	r0, r0, #2
   145a8:	cmp	r0, #4
   145ac:	str	r0, [sp]
   145b0:	bhi	14644 <rb_ssl_read_or_write+0x128>
   145b4:	add	r0, pc, #8
   145b8:	ldr	r1, [sp]
   145bc:	ldr	r2, [r0, r1, lsl #2]
   145c0:	add	pc, r0, r2
   145c4:	.word	0x00000014
   145c8:	.word	0x0000002c
   145cc:	.word	0x00000080
   145d0:	.word	0x00000050
   145d4:	.word	0x00000044
   145d8:	bl	56c8 <__errno_location@plt>
   145dc:	movw	lr, #11
   145e0:	str	lr, [r0]
   145e4:	mvn	r0, #2
   145e8:	str	r0, [fp, #-4]
   145ec:	b	14690 <rb_ssl_read_or_write+0x174>
   145f0:	bl	56c8 <__errno_location@plt>
   145f4:	movw	lr, #11
   145f8:	str	lr, [r0]
   145fc:	mvn	r0, #3
   14600:	str	r0, [fp, #-4]
   14604:	b	14690 <rb_ssl_read_or_write+0x174>
   14608:	movw	r0, #0
   1460c:	str	r0, [fp, #-4]
   14610:	b	14690 <rb_ssl_read_or_write+0x174>
   14614:	bl	1389c <rb_ssl_last_err>
   14618:	str	r0, [sp, #12]
   1461c:	ldr	r0, [sp, #12]
   14620:	cmp	r0, #0
   14624:	bne	14640 <rb_ssl_read_or_write+0x124>
   14628:	ldr	r0, [fp, #-12]
   1462c:	movw	r1, #0
   14630:	str	r1, [r0, #64]	; 0x40
   14634:	mvn	r0, #0
   14638:	str	r0, [fp, #-4]
   1463c:	b	14690 <rb_ssl_read_or_write+0x174>
   14640:	b	1464c <rb_ssl_read_or_write+0x130>
   14644:	bl	1389c <rb_ssl_last_err>
   14648:	str	r0, [sp, #12]
   1464c:	ldr	r0, [sp, #12]
   14650:	ldr	r1, [fp, #-12]
   14654:	str	r0, [r1, #64]	; 0x40
   14658:	ldr	r0, [sp, #12]
   1465c:	cmp	r0, #0
   14660:	bls	1467c <rb_ssl_read_or_write+0x160>
   14664:	bl	56c8 <__errno_location@plt>
   14668:	movw	lr, #5
   1466c:	str	lr, [r0]
   14670:	mvn	r0, #1
   14674:	str	r0, [fp, #-4]
   14678:	b	14690 <rb_ssl_read_or_write+0x174>
   1467c:	mvn	r0, #0
   14680:	str	r0, [fp, #-4]
   14684:	b	14690 <rb_ssl_read_or_write+0x174>
   14688:	ldr	r0, [sp, #16]
   1468c:	str	r0, [fp, #-4]
   14690:	ldr	r0, [fp, #-4]
   14694:	mov	sp, fp
   14698:	pop	{fp, pc}

0001469c <rb_ssl_write>:
   1469c:	push	{fp, lr}
   146a0:	mov	fp, sp
   146a4:	sub	sp, sp, #24
   146a8:	str	r0, [fp, #-4]
   146ac:	str	r1, [fp, #-8]
   146b0:	str	r2, [sp, #12]
   146b4:	ldr	r1, [fp, #-4]
   146b8:	ldr	r3, [fp, #-8]
   146bc:	ldr	r0, [sp, #12]
   146c0:	movw	r2, #1
   146c4:	str	r0, [sp, #8]
   146c8:	mov	r0, r2
   146cc:	movw	r2, #0
   146d0:	ldr	ip, [sp, #8]
   146d4:	str	ip, [sp]
   146d8:	bl	1451c <rb_ssl_read_or_write>
   146dc:	mov	sp, fp
   146e0:	pop	{fp, pc}

000146e4 <rb_supports_ssl>:
   146e4:	movw	r0, #1
   146e8:	bx	lr

000146ec <rb_ssl_handshake_count>:
   146ec:	sub	sp, sp, #4
   146f0:	str	r0, [sp]
   146f4:	ldr	r0, [sp]
   146f8:	ldr	r0, [r0, #60]	; 0x3c
   146fc:	add	sp, sp, #4
   14700:	bx	lr

00014704 <rb_ssl_clear_handshake_count>:
   14704:	sub	sp, sp, #4
   14708:	str	r0, [sp]
   1470c:	ldr	r0, [sp]
   14710:	movw	r1, #0
   14714:	str	r1, [r0, #60]	; 0x3c
   14718:	add	sp, sp, #4
   1471c:	bx	lr

00014720 <rb_ssl_start_accepted>:
   14720:	push	{fp, lr}
   14724:	mov	fp, sp
   14728:	sub	sp, sp, #24
   1472c:	str	r0, [fp, #-4]
   14730:	str	r1, [fp, #-8]
   14734:	str	r2, [sp, #12]
   14738:	str	r3, [sp, #8]
   1473c:	ldr	r0, [fp, #-4]
   14740:	ldrb	r1, [r0, #17]
   14744:	orr	r1, r1, #32
   14748:	strb	r1, [r0, #17]
   1474c:	movw	r0, #144	; 0x90
   14750:	bl	147f4 <rb_malloc>
   14754:	ldr	r1, [pc, #148]	; 147f0 <rb_ssl_start_accepted+0xd0>
   14758:	add	r2, pc, r1
   1475c:	ldr	r1, [fp, #-4]
   14760:	str	r0, [r1, #52]	; 0x34
   14764:	ldr	r0, [fp, #-8]
   14768:	ldr	r1, [fp, #-4]
   1476c:	ldr	r1, [r1, #52]	; 0x34
   14770:	str	r0, [r1, #132]	; 0x84
   14774:	ldr	r0, [sp, #12]
   14778:	ldr	r1, [fp, #-4]
   1477c:	ldr	r1, [r1, #52]	; 0x34
   14780:	str	r0, [r1, #140]	; 0x8c
   14784:	ldr	r0, [fp, #-4]
   14788:	ldr	r0, [r0, #52]	; 0x34
   1478c:	movw	r1, #0
   14790:	str	r1, [r0, #128]	; 0x80
   14794:	ldr	r0, [fp, #-4]
   14798:	ldr	r0, [r0, #52]	; 0x34
   1479c:	movw	r3, #0
   147a0:	and	r3, r3, #255	; 0xff
   147a4:	str	r1, [sp, #4]
   147a8:	mov	r1, r3
   147ac:	movw	r3, #128	; 0x80
   147b0:	str	r2, [sp]
   147b4:	mov	r2, r3
   147b8:	bl	4ff0 <memset@plt>
   147bc:	ldr	r0, [fp, #-4]
   147c0:	ldr	r1, [sp, #8]
   147c4:	ldr	r2, [sp]
   147c8:	ldr	r3, [sp, #4]
   147cc:	bl	4da4 <rb_settimeout@plt>
   147d0:	ldr	r0, [fp, #-4]
   147d4:	movw	r1, #0
   147d8:	bl	148ac <rb_ssl_init_fd>
   147dc:	ldr	r0, [fp, #-4]
   147e0:	movw	r1, #0
   147e4:	bl	149b0 <rb_ssl_accept_common>
   147e8:	mov	sp, fp
   147ec:	pop	{fp, pc}
   147f0:	.word	0x000000ec

000147f4 <rb_malloc>:
   147f4:	push	{fp, lr}
   147f8:	mov	fp, sp
   147fc:	sub	sp, sp, #8
   14800:	str	r0, [sp, #4]
   14804:	ldr	r1, [sp, #4]
   14808:	movw	r0, #1
   1480c:	bl	4fb4 <calloc@plt>
   14810:	str	r0, [sp]
   14814:	ldr	r0, [sp]
   14818:	movw	r1, #0
   1481c:	cmp	r0, r1
   14820:	movw	r0, #0
   14824:	moveq	r0, #1
   14828:	mvn	r1, #0
   1482c:	eor	r0, r0, r1
   14830:	eor	r0, r0, r1
   14834:	tst	r0, #1
   14838:	beq	14840 <rb_malloc+0x4c>
   1483c:	bl	5350 <rb_outofmemory@plt>
   14840:	ldr	r0, [sp]
   14844:	mov	sp, fp
   14848:	pop	{fp, pc}

0001484c <rb_ssl_timeout_cb>:
   1484c:	push	{fp, lr}
   14850:	mov	fp, sp
   14854:	sub	sp, sp, #24
   14858:	str	r0, [fp, #-4]
   1485c:	str	r1, [fp, #-8]
   14860:	ldr	r0, [fp, #-4]
   14864:	ldr	r0, [r0, #52]	; 0x34
   14868:	ldr	r0, [r0, #132]	; 0x84
   1486c:	ldr	r1, [fp, #-4]
   14870:	ldr	r2, [fp, #-4]
   14874:	ldr	r2, [r2, #52]	; 0x34
   14878:	ldr	r2, [r2, #140]	; 0x8c
   1487c:	str	r0, [sp, #12]
   14880:	mov	r0, r1
   14884:	movw	r1, #3
   14888:	movw	r3, #0
   1488c:	str	r2, [sp, #8]
   14890:	mov	r2, r3
   14894:	ldr	ip, [sp, #8]
   14898:	str	ip, [sp]
   1489c:	ldr	lr, [sp, #12]
   148a0:	blx	lr
   148a4:	mov	sp, fp
   148a8:	pop	{fp, pc}

000148ac <rb_ssl_init_fd>:
   148ac:	push	{fp, lr}
   148b0:	mov	fp, sp
   148b4:	sub	sp, sp, #32
   148b8:	str	r0, [fp, #-4]
   148bc:	str	r1, [fp, #-8]
   148c0:	bl	1389c <rb_ssl_last_err>
   148c4:	ldr	r1, [pc, #216]	; 149a4 <rb_ssl_init_fd+0xf8>
   148c8:	add	r1, pc, r1
   148cc:	ldr	r1, [r1]
   148d0:	str	r0, [fp, #-12]
   148d4:	mov	r0, r1
   148d8:	bl	5104 <SSL_new@plt>
   148dc:	ldr	r1, [fp, #-4]
   148e0:	str	r0, [r1, #56]	; 0x38
   148e4:	ldr	r0, [fp, #-4]
   148e8:	ldr	r0, [r0, #56]	; 0x38
   148ec:	movw	r1, #0
   148f0:	cmp	r0, r1
   148f4:	bne	1492c <rb_ssl_init_fd+0x80>
   148f8:	bl	1389c <rb_ssl_last_err>
   148fc:	bl	13da0 <rb_ssl_strerror>
   14900:	ldr	lr, [pc, #160]	; 149a8 <rb_ssl_init_fd+0xfc>
   14904:	add	lr, pc, lr
   14908:	ldr	r1, [pc, #156]	; 149ac <rb_ssl_init_fd+0x100>
   1490c:	add	r1, pc, r1
   14910:	str	r0, [sp, #16]
   14914:	mov	r0, lr
   14918:	ldr	r2, [sp, #16]
   1491c:	bl	52e4 <rb_lib_log@plt>
   14920:	ldr	r0, [fp, #-4]
   14924:	bl	5230 <rb_close@plt>
   14928:	b	1499c <rb_ssl_init_fd+0xf0>
   1492c:	ldr	r0, [fp, #-8]
   14930:	cmp	r0, #0
   14934:	str	r0, [sp, #12]
   14938:	beq	14950 <rb_ssl_init_fd+0xa4>
   1493c:	b	14940 <rb_ssl_init_fd+0x94>
   14940:	ldr	r0, [sp, #12]
   14944:	cmp	r0, #1
   14948:	beq	14960 <rb_ssl_init_fd+0xb4>
   1494c:	b	1496c <rb_ssl_init_fd+0xc0>
   14950:	ldr	r0, [fp, #-4]
   14954:	ldr	r0, [r0, #56]	; 0x38
   14958:	bl	5398 <SSL_set_accept_state@plt>
   1495c:	b	1496c <rb_ssl_init_fd+0xc0>
   14960:	ldr	r0, [fp, #-4]
   14964:	ldr	r0, [r0, #56]	; 0x38
   14968:	bl	553c <SSL_set_connect_state@plt>
   1496c:	ldr	r0, [fp, #-4]
   14970:	ldr	r0, [r0, #56]	; 0x38
   14974:	ldr	r1, [fp, #-4]
   14978:	str	r0, [sp, #8]
   1497c:	mov	r0, r1
   14980:	bl	4ea0 <rb_get_fd@plt>
   14984:	ldr	r1, [sp, #8]
   14988:	str	r0, [sp, #4]
   1498c:	mov	r0, r1
   14990:	ldr	r1, [sp, #4]
   14994:	bl	502c <SSL_set_fd@plt>
   14998:	str	r0, [sp]
   1499c:	mov	sp, fp
   149a0:	pop	{fp, pc}
   149a4:	.word	0x00033628
   149a8:	.word	0x0000eacd
   149ac:	.word	0x0000ead5

000149b0 <rb_ssl_accept_common>:
   149b0:	push	{fp, lr}
   149b4:	mov	fp, sp
   149b8:	sub	sp, sp, #48	; 0x30
   149bc:	str	r0, [fp, #-4]
   149c0:	str	r1, [fp, #-8]
   149c4:	bl	1389c <rb_ssl_last_err>
   149c8:	ldr	r1, [fp, #-4]
   149cc:	ldr	r1, [r1, #56]	; 0x38
   149d0:	str	r0, [sp, #24]
   149d4:	mov	r0, r1
   149d8:	bl	5194 <SSL_do_handshake@plt>
   149dc:	str	r0, [fp, #-12]
   149e0:	ldr	r0, [fp, #-4]
   149e4:	ldr	r0, [r0, #56]	; 0x38
   149e8:	ldr	r1, [fp, #-12]
   149ec:	bl	5680 <SSL_get_error@plt>
   149f0:	str	r0, [fp, #-16]
   149f4:	ldr	r0, [fp, #-12]
   149f8:	cmp	r0, #1
   149fc:	bne	14aa0 <rb_ssl_accept_common+0xf0>
   14a00:	ldr	r0, [fp, #-4]
   14a04:	ldr	r1, [r0, #60]	; 0x3c
   14a08:	add	r1, r1, #1
   14a0c:	str	r1, [r0, #60]	; 0x3c
   14a10:	ldr	r0, [fp, #-4]
   14a14:	movw	r1, #0
   14a18:	str	r1, [sp, #20]
   14a1c:	ldr	r2, [sp, #20]
   14a20:	ldr	r3, [sp, #20]
   14a24:	bl	4da4 <rb_settimeout@plt>
   14a28:	ldr	r0, [fp, #-4]
   14a2c:	movw	r1, #3
   14a30:	movw	r2, #0
   14a34:	str	r2, [sp, #16]
   14a38:	ldr	r3, [sp, #16]
   14a3c:	bl	4e64 <rb_setselect@plt>
   14a40:	ldr	r0, [fp, #-4]
   14a44:	ldr	r0, [r0, #52]	; 0x34
   14a48:	str	r0, [fp, #-20]	; 0xffffffec
   14a4c:	ldr	r0, [fp, #-4]
   14a50:	movw	r1, #0
   14a54:	str	r1, [r0, #52]	; 0x34
   14a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a5c:	ldr	r0, [r0, #132]	; 0x84
   14a60:	ldr	r2, [fp, #-4]
   14a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a68:	ldr	lr, [fp, #-20]	; 0xffffffec
   14a6c:	ldr	lr, [lr, #128]	; 0x80
   14a70:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a74:	ldr	ip, [ip, #140]	; 0x8c
   14a78:	str	r0, [sp, #12]
   14a7c:	mov	r0, r2
   14a80:	mov	r2, r3
   14a84:	mov	r3, lr
   14a88:	str	ip, [sp]
   14a8c:	ldr	ip, [sp, #12]
   14a90:	blx	ip
   14a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a98:	bl	15054 <rb_free>
   14a9c:	b	14b6c <rb_ssl_accept_common+0x1bc>
   14aa0:	ldr	r0, [fp, #-12]
   14aa4:	cmn	r0, #1
   14aa8:	bne	14ad4 <rb_ssl_accept_common+0x124>
   14aac:	ldr	r0, [fp, #-16]
   14ab0:	cmp	r0, #2
   14ab4:	bne	14ad4 <rb_ssl_accept_common+0x124>
   14ab8:	ldr	r0, [pc, #184]	; 14b78 <rb_ssl_accept_common+0x1c8>
   14abc:	add	r2, pc, r0
   14ac0:	ldr	r0, [fp, #-4]
   14ac4:	movw	r1, #1
   14ac8:	movw	r3, #0
   14acc:	bl	4e64 <rb_setselect@plt>
   14ad0:	b	14b6c <rb_ssl_accept_common+0x1bc>
   14ad4:	ldr	r0, [fp, #-12]
   14ad8:	cmn	r0, #1
   14adc:	bne	14b08 <rb_ssl_accept_common+0x158>
   14ae0:	ldr	r0, [fp, #-16]
   14ae4:	cmp	r0, #3
   14ae8:	bne	14b08 <rb_ssl_accept_common+0x158>
   14aec:	ldr	r0, [pc, #128]	; 14b74 <rb_ssl_accept_common+0x1c4>
   14af0:	add	r2, pc, r0
   14af4:	ldr	r0, [fp, #-4]
   14af8:	movw	r1, #2
   14afc:	movw	r3, #0
   14b00:	bl	4e64 <rb_setselect@plt>
   14b04:	b	14b6c <rb_ssl_accept_common+0x1bc>
   14b08:	bl	56c8 <__errno_location@plt>
   14b0c:	movw	lr, #5
   14b10:	str	lr, [r0]
   14b14:	ldr	r0, [fp, #-16]
   14b18:	ldr	lr, [fp, #-4]
   14b1c:	str	r0, [lr, #64]	; 0x40
   14b20:	ldr	r0, [fp, #-4]
   14b24:	ldr	r0, [r0, #52]	; 0x34
   14b28:	ldr	r0, [r0, #132]	; 0x84
   14b2c:	ldr	lr, [fp, #-4]
   14b30:	ldr	r1, [fp, #-4]
   14b34:	ldr	r1, [r1, #52]	; 0x34
   14b38:	ldr	r1, [r1, #140]	; 0x8c
   14b3c:	str	r0, [sp, #8]
   14b40:	mov	r0, lr
   14b44:	movw	lr, #6
   14b48:	str	r1, [sp, #4]
   14b4c:	mov	r1, lr
   14b50:	movw	lr, #0
   14b54:	mov	r2, lr
   14b58:	mov	r3, lr
   14b5c:	ldr	lr, [sp, #4]
   14b60:	str	lr, [sp]
   14b64:	ldr	ip, [sp, #8]
   14b68:	blx	ip
   14b6c:	mov	sp, fp
   14b70:	pop	{fp, pc}
   14b74:	.word	0xfffffeb8
   14b78:	.word	0xfffffeec

00014b7c <rb_ssl_accept_setup>:
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	sub	sp, sp, #24
   14b88:	str	r0, [fp, #-4]
   14b8c:	str	r1, [fp, #-8]
   14b90:	str	r2, [sp, #12]
   14b94:	str	r3, [sp, #8]
   14b98:	ldr	r0, [fp, #-8]
   14b9c:	ldrb	r1, [r0, #17]
   14ba0:	orr	r1, r1, #32
   14ba4:	strb	r1, [r0, #17]
   14ba8:	movw	r0, #144	; 0x90
   14bac:	bl	147f4 <rb_malloc>
   14bb0:	ldr	r1, [pc, #176]	; 14c68 <rb_ssl_accept_setup+0xec>
   14bb4:	add	r2, pc, r1
   14bb8:	ldr	r1, [fp, #-8]
   14bbc:	str	r0, [r1, #52]	; 0x34
   14bc0:	ldr	r0, [fp, #-4]
   14bc4:	ldr	r0, [r0, #52]	; 0x34
   14bc8:	ldr	r0, [r0, #132]	; 0x84
   14bcc:	ldr	r1, [fp, #-8]
   14bd0:	ldr	r1, [r1, #52]	; 0x34
   14bd4:	str	r0, [r1, #132]	; 0x84
   14bd8:	ldr	r0, [fp, #-4]
   14bdc:	ldr	r0, [r0, #52]	; 0x34
   14be0:	ldr	r0, [r0, #140]	; 0x8c
   14be4:	ldr	r1, [fp, #-8]
   14be8:	ldr	r1, [r1, #52]	; 0x34
   14bec:	str	r0, [r1, #140]	; 0x8c
   14bf0:	ldr	r0, [sp, #8]
   14bf4:	ldr	r1, [fp, #-8]
   14bf8:	ldr	r1, [r1, #52]	; 0x34
   14bfc:	str	r0, [r1, #128]	; 0x80
   14c00:	ldr	r0, [fp, #-8]
   14c04:	ldr	r0, [r0, #52]	; 0x34
   14c08:	movw	r1, #0
   14c0c:	and	r1, r1, #255	; 0xff
   14c10:	movw	r3, #128	; 0x80
   14c14:	str	r2, [sp, #4]
   14c18:	mov	r2, r3
   14c1c:	bl	4ff0 <memset@plt>
   14c20:	ldr	r0, [fp, #-8]
   14c24:	ldr	r0, [r0, #52]	; 0x34
   14c28:	ldr	r1, [sp, #12]
   14c2c:	ldr	r2, [sp, #8]
   14c30:	bl	51dc <memcpy@plt>
   14c34:	ldr	r0, [fp, #-8]
   14c38:	movw	r1, #10
   14c3c:	ldr	r2, [sp, #4]
   14c40:	movw	r3, #0
   14c44:	bl	4da4 <rb_settimeout@plt>
   14c48:	ldr	r0, [fp, #-8]
   14c4c:	movw	r1, #0
   14c50:	bl	148ac <rb_ssl_init_fd>
   14c54:	ldr	r0, [fp, #-8]
   14c58:	movw	r1, #0
   14c5c:	bl	149b0 <rb_ssl_accept_common>
   14c60:	mov	sp, fp
   14c64:	pop	{fp, pc}
   14c68:	.word	0xfffffc90

00014c6c <rb_ssl_listen>:
   14c6c:	push	{fp, lr}
   14c70:	mov	fp, sp
   14c74:	sub	sp, sp, #16
   14c78:	str	r0, [fp, #-4]
   14c7c:	str	r1, [sp, #8]
   14c80:	str	r2, [sp, #4]
   14c84:	ldr	r0, [fp, #-4]
   14c88:	ldr	r1, [sp, #8]
   14c8c:	ldr	r2, [sp, #4]
   14c90:	bl	55cc <rb_listen@plt>
   14c94:	str	r0, [sp]
   14c98:	ldr	r0, [fp, #-4]
   14c9c:	movw	r1, #52	; 0x34
   14ca0:	strb	r1, [r0, #17]
   14ca4:	ldr	r0, [sp]
   14ca8:	mov	sp, fp
   14cac:	pop	{fp, pc}

00014cb0 <rb_connect_tcp_ssl>:
   14cb0:	push	{fp, lr}
   14cb4:	mov	fp, sp
   14cb8:	sub	sp, sp, #40	; 0x28
   14cbc:	ldr	ip, [fp, #12]
   14cc0:	ldr	lr, [fp, #8]
   14cc4:	str	r0, [fp, #-4]
   14cc8:	str	r1, [fp, #-8]
   14ccc:	str	r2, [fp, #-12]
   14cd0:	str	r3, [fp, #-16]
   14cd4:	ldr	r0, [fp, #-4]
   14cd8:	movw	r1, #0
   14cdc:	cmp	r0, r1
   14ce0:	str	lr, [sp, #16]
   14ce4:	str	ip, [sp, #12]
   14ce8:	bne	14cf0 <rb_connect_tcp_ssl+0x40>
   14cec:	b	14d48 <rb_connect_tcp_ssl+0x98>
   14cf0:	movw	r0, #12
   14cf4:	bl	147f4 <rb_malloc>
   14cf8:	ldr	lr, [pc, #80]	; 14d50 <rb_connect_tcp_ssl+0xa0>
   14cfc:	add	r3, pc, lr
   14d00:	str	r0, [sp, #20]
   14d04:	ldr	r0, [fp, #8]
   14d08:	ldr	lr, [sp, #20]
   14d0c:	str	r0, [lr, #4]
   14d10:	ldr	r0, [fp, #-16]
   14d14:	ldr	lr, [sp, #20]
   14d18:	str	r0, [lr]
   14d1c:	ldr	r0, [fp, #12]
   14d20:	ldr	lr, [sp, #20]
   14d24:	str	r0, [lr, #8]
   14d28:	ldr	r0, [fp, #-4]
   14d2c:	ldr	r1, [fp, #-8]
   14d30:	ldr	r2, [fp, #-12]
   14d34:	ldr	lr, [sp, #20]
   14d38:	ldr	ip, [fp, #12]
   14d3c:	str	lr, [sp]
   14d40:	str	ip, [sp, #4]
   14d44:	bl	4de0 <rb_connect_tcp@plt>
   14d48:	mov	sp, fp
   14d4c:	pop	{fp, pc}
   14d50:	.word	0x00000050

00014d54 <rb_ssl_tryconn>:
   14d54:	push	{fp, lr}
   14d58:	mov	fp, sp
   14d5c:	sub	sp, sp, #16
   14d60:	str	r0, [fp, #-4]
   14d64:	str	r1, [sp, #8]
   14d68:	str	r2, [sp, #4]
   14d6c:	ldr	r0, [sp, #4]
   14d70:	str	r0, [sp]
   14d74:	ldr	r0, [sp, #8]
   14d78:	cmp	r0, #0
   14d7c:	beq	14d94 <rb_ssl_tryconn+0x40>
   14d80:	ldr	r0, [fp, #-4]
   14d84:	ldr	r1, [sp, #8]
   14d88:	ldr	r2, [sp]
   14d8c:	bl	1509c <rb_ssl_connect_realcb>
   14d90:	b	14dd8 <rb_ssl_tryconn+0x84>
   14d94:	ldr	r0, [pc, #68]	; 14de0 <rb_ssl_tryconn+0x8c>
   14d98:	add	r2, pc, r0
   14d9c:	ldr	r0, [fp, #-4]
   14da0:	ldrb	r1, [r0, #17]
   14da4:	orr	r1, r1, #32
   14da8:	strb	r1, [r0, #17]
   14dac:	ldr	r0, [fp, #-4]
   14db0:	ldr	r1, [sp]
   14db4:	ldr	r1, [r1, #8]
   14db8:	ldr	r3, [sp]
   14dbc:	bl	4da4 <rb_settimeout@plt>
   14dc0:	ldr	r0, [fp, #-4]
   14dc4:	movw	r1, #1
   14dc8:	bl	148ac <rb_ssl_init_fd>
   14dcc:	ldr	r0, [fp, #-4]
   14dd0:	ldr	r1, [sp]
   14dd4:	bl	14f00 <rb_ssl_connect_common>
   14dd8:	mov	sp, fp
   14ddc:	pop	{fp, pc}
   14de0:	.word	0x00000128

00014de4 <rb_ssl_start_connected>:
   14de4:	push	{fp, lr}
   14de8:	mov	fp, sp
   14dec:	sub	sp, sp, #24
   14df0:	str	r0, [fp, #-4]
   14df4:	str	r1, [fp, #-8]
   14df8:	str	r2, [sp, #12]
   14dfc:	str	r3, [sp, #8]
   14e00:	ldr	r0, [fp, #-4]
   14e04:	movw	r1, #0
   14e08:	cmp	r0, r1
   14e0c:	bne	14e14 <rb_ssl_start_connected+0x30>
   14e10:	b	14ebc <rb_ssl_start_connected+0xd8>
   14e14:	movw	r0, #12
   14e18:	bl	147f4 <rb_malloc>
   14e1c:	str	r0, [sp, #4]
   14e20:	ldr	r0, [sp, #12]
   14e24:	ldr	lr, [sp, #4]
   14e28:	str	r0, [lr, #4]
   14e2c:	ldr	r0, [fp, #-8]
   14e30:	ldr	lr, [sp, #4]
   14e34:	str	r0, [lr]
   14e38:	ldr	r0, [sp, #8]
   14e3c:	ldr	lr, [sp, #4]
   14e40:	str	r0, [lr, #8]
   14e44:	movw	r0, #268	; 0x10c
   14e48:	bl	147f4 <rb_malloc>
   14e4c:	ldr	lr, [pc, #112]	; 14ec4 <rb_ssl_start_connected+0xe0>
   14e50:	add	r2, pc, lr
   14e54:	ldr	lr, [fp, #-4]
   14e58:	str	r0, [lr, #48]	; 0x30
   14e5c:	ldr	r0, [fp, #-8]
   14e60:	ldr	lr, [fp, #-4]
   14e64:	ldr	lr, [lr, #48]	; 0x30
   14e68:	str	r0, [lr, #260]	; 0x104
   14e6c:	ldr	r0, [sp, #12]
   14e70:	ldr	lr, [fp, #-4]
   14e74:	ldr	lr, [lr, #48]	; 0x30
   14e78:	str	r0, [lr, #264]	; 0x108
   14e7c:	ldr	r0, [fp, #-4]
   14e80:	ldrb	lr, [r0, #17]
   14e84:	orr	lr, lr, #32
   14e88:	strb	lr, [r0, #17]
   14e8c:	ldr	r0, [fp, #-4]
   14e90:	ldr	lr, [sp, #4]
   14e94:	ldr	r1, [lr, #8]
   14e98:	ldr	lr, [sp, #4]
   14e9c:	mov	r3, lr
   14ea0:	bl	4da4 <rb_settimeout@plt>
   14ea4:	ldr	r0, [fp, #-4]
   14ea8:	movw	r1, #1
   14eac:	bl	148ac <rb_ssl_init_fd>
   14eb0:	ldr	r0, [fp, #-4]
   14eb4:	ldr	r1, [sp, #4]
   14eb8:	bl	14f00 <rb_ssl_connect_common>
   14ebc:	mov	sp, fp
   14ec0:	pop	{fp, pc}
   14ec4:	.word	0x00000070

00014ec8 <rb_ssl_tryconn_timeout_cb>:
   14ec8:	push	{fp, lr}
   14ecc:	mov	fp, sp
   14ed0:	sub	sp, sp, #16
   14ed4:	str	r0, [fp, #-4]
   14ed8:	str	r1, [sp, #8]
   14edc:	ldr	r0, [fp, #-4]
   14ee0:	ldr	r1, [sp, #8]
   14ee4:	movw	r2, #3
   14ee8:	str	r1, [sp, #4]
   14eec:	mov	r1, r2
   14ef0:	ldr	r2, [sp, #4]
   14ef4:	bl	1509c <rb_ssl_connect_realcb>
   14ef8:	mov	sp, fp
   14efc:	pop	{fp, pc}

00014f00 <rb_ssl_connect_common>:
   14f00:	push	{fp, lr}
   14f04:	mov	fp, sp
   14f08:	sub	sp, sp, #32
   14f0c:	str	r0, [fp, #-4]
   14f10:	str	r1, [fp, #-8]
   14f14:	bl	1389c <rb_ssl_last_err>
   14f18:	ldr	r1, [fp, #-4]
   14f1c:	ldr	r1, [r1, #56]	; 0x38
   14f20:	str	r0, [sp, #12]
   14f24:	mov	r0, r1
   14f28:	bl	5194 <SSL_do_handshake@plt>
   14f2c:	str	r0, [fp, #-12]
   14f30:	ldr	r0, [fp, #-4]
   14f34:	ldr	r0, [r0, #56]	; 0x38
   14f38:	ldr	r1, [fp, #-12]
   14f3c:	bl	5680 <SSL_get_error@plt>
   14f40:	str	r0, [sp, #16]
   14f44:	ldr	r0, [fp, #-12]
   14f48:	cmp	r0, #1
   14f4c:	bne	14fb0 <rb_ssl_connect_common+0xb0>
   14f50:	ldr	r0, [fp, #-4]
   14f54:	ldr	r1, [r0, #60]	; 0x3c
   14f58:	add	r1, r1, #1
   14f5c:	str	r1, [r0, #60]	; 0x3c
   14f60:	ldr	r0, [fp, #-4]
   14f64:	movw	r1, #0
   14f68:	str	r1, [sp, #8]
   14f6c:	ldr	r2, [sp, #8]
   14f70:	ldr	r3, [sp, #8]
   14f74:	bl	4da4 <rb_settimeout@plt>
   14f78:	ldr	r0, [fp, #-4]
   14f7c:	movw	r1, #3
   14f80:	movw	r2, #0
   14f84:	str	r2, [sp, #4]
   14f88:	ldr	r3, [sp, #4]
   14f8c:	bl	4e64 <rb_setselect@plt>
   14f90:	ldr	r0, [fp, #-4]
   14f94:	ldr	r1, [fp, #-8]
   14f98:	movw	r2, #0
   14f9c:	str	r1, [sp]
   14fa0:	mov	r1, r2
   14fa4:	ldr	r2, [sp]
   14fa8:	bl	1509c <rb_ssl_connect_realcb>
   14fac:	b	15044 <rb_ssl_connect_common+0x144>
   14fb0:	ldr	r0, [fp, #-12]
   14fb4:	cmn	r0, #1
   14fb8:	bne	14fe4 <rb_ssl_connect_common+0xe4>
   14fbc:	ldr	r0, [sp, #16]
   14fc0:	cmp	r0, #2
   14fc4:	bne	14fe4 <rb_ssl_connect_common+0xe4>
   14fc8:	ldr	r0, [pc, #128]	; 15050 <rb_ssl_connect_common+0x150>
   14fcc:	add	r2, pc, r0
   14fd0:	ldr	r0, [fp, #-4]
   14fd4:	ldr	r3, [fp, #-8]
   14fd8:	movw	r1, #1
   14fdc:	bl	4e64 <rb_setselect@plt>
   14fe0:	b	15044 <rb_ssl_connect_common+0x144>
   14fe4:	ldr	r0, [fp, #-12]
   14fe8:	cmn	r0, #1
   14fec:	bne	15018 <rb_ssl_connect_common+0x118>
   14ff0:	ldr	r0, [sp, #16]
   14ff4:	cmp	r0, #3
   14ff8:	bne	15018 <rb_ssl_connect_common+0x118>
   14ffc:	ldr	r0, [pc, #72]	; 1504c <rb_ssl_connect_common+0x14c>
   15000:	add	r2, pc, r0
   15004:	ldr	r0, [fp, #-4]
   15008:	ldr	r3, [fp, #-8]
   1500c:	movw	r1, #2
   15010:	bl	4e64 <rb_setselect@plt>
   15014:	b	15044 <rb_ssl_connect_common+0x144>
   15018:	bl	56c8 <__errno_location@plt>
   1501c:	movw	lr, #5
   15020:	str	lr, [r0]
   15024:	ldr	r0, [sp, #16]
   15028:	ldr	lr, [fp, #-4]
   1502c:	str	r0, [lr, #64]	; 0x40
   15030:	ldr	r0, [fp, #-4]
   15034:	ldr	lr, [fp, #-8]
   15038:	movw	r1, #6
   1503c:	mov	r2, lr
   15040:	bl	1509c <rb_ssl_connect_realcb>
   15044:	mov	sp, fp
   15048:	pop	{fp, pc}
   1504c:	.word	0xfffffef8
   15050:	.word	0xffffff2c

00015054 <rb_free>:
   15054:	push	{fp, lr}
   15058:	mov	fp, sp
   1505c:	sub	sp, sp, #8
   15060:	str	r0, [sp, #4]
   15064:	ldr	r0, [sp, #4]
   15068:	movw	r1, #0
   1506c:	cmp	r0, r1
   15070:	movw	r0, #0
   15074:	movne	r0, #1
   15078:	mvn	r1, #0
   1507c:	eor	r0, r0, r1
   15080:	eor	r0, r0, r1
   15084:	tst	r0, #1
   15088:	beq	15094 <rb_free+0x40>
   1508c:	ldr	r0, [sp, #4]
   15090:	bl	50c8 <free@plt>
   15094:	mov	sp, fp
   15098:	pop	{fp, pc}

0001509c <rb_ssl_connect_realcb>:
   1509c:	push	{fp, lr}
   150a0:	mov	fp, sp
   150a4:	sub	sp, sp, #16
   150a8:	str	r0, [fp, #-4]
   150ac:	str	r1, [sp, #8]
   150b0:	str	r2, [sp, #4]
   150b4:	ldr	r0, [sp, #4]
   150b8:	ldr	r0, [r0]
   150bc:	ldr	r1, [fp, #-4]
   150c0:	ldr	r1, [r1, #48]	; 0x30
   150c4:	str	r0, [r1, #260]	; 0x104
   150c8:	ldr	r0, [sp, #4]
   150cc:	ldr	r0, [r0, #4]
   150d0:	ldr	r1, [fp, #-4]
   150d4:	ldr	r1, [r1, #48]	; 0x30
   150d8:	str	r0, [r1, #264]	; 0x108
   150dc:	ldr	r0, [fp, #-4]
   150e0:	ldr	r1, [sp, #8]
   150e4:	bl	f924 <rb_connect_callback>
   150e8:	ldr	r0, [sp, #4]
   150ec:	bl	15054 <rb_free>
   150f0:	mov	sp, fp
   150f4:	pop	{fp, pc}

000150f8 <rb_event_add>:
   150f8:	push	{fp, lr}
   150fc:	mov	fp, sp
   15100:	sub	sp, sp, #24
   15104:	str	r0, [fp, #-4]
   15108:	str	r1, [fp, #-8]
   1510c:	str	r2, [sp, #12]
   15110:	str	r3, [sp, #8]
   15114:	ldr	r0, [sp, #8]
   15118:	cmp	r0, #0
   1511c:	movw	r0, #0
   15120:	movle	r0, #1
   15124:	mvn	r1, #0
   15128:	eor	r0, r0, r1
   1512c:	eor	r0, r0, r1
   15130:	tst	r0, #1
   15134:	beq	15154 <rb_event_add+0x5c>
   15138:	ldr	r0, [pc, #56]	; 15178 <rb_event_add+0x80>
   1513c:	add	r0, pc, r0
   15140:	ldr	r1, [fp, #-4]
   15144:	ldr	r2, [sp, #8]
   15148:	bl	52e4 <rb_lib_log@plt>
   1514c:	movw	r0, #1
   15150:	str	r0, [sp, #8]
   15154:	ldr	r0, [fp, #-4]
   15158:	ldr	r1, [fp, #-8]
   1515c:	ldr	r2, [sp, #12]
   15160:	ldr	r3, [sp, #8]
   15164:	ldr	ip, [sp, #8]
   15168:	str	ip, [sp]
   1516c:	bl	1517c <rb_event_add_common>
   15170:	mov	sp, fp
   15174:	pop	{fp, pc}
   15178:	.word	0x0000e444

0001517c <rb_event_add_common>:
   1517c:	push	{fp, lr}
   15180:	mov	fp, sp
   15184:	sub	sp, sp, #32
   15188:	ldr	ip, [fp, #8]
   1518c:	str	r0, [fp, #-4]
   15190:	str	r1, [fp, #-8]
   15194:	str	r2, [fp, #-12]
   15198:	str	r3, [sp, #16]
   1519c:	movw	r0, #48	; 0x30
   151a0:	str	ip, [sp, #8]
   151a4:	bl	15d08 <rb_malloc>
   151a8:	str	r0, [sp, #12]
   151ac:	ldr	r0, [fp, #-8]
   151b0:	ldr	r1, [sp, #12]
   151b4:	str	r0, [r1, #12]
   151b8:	ldr	r0, [fp, #-4]
   151bc:	movw	r1, #33	; 0x21
   151c0:	bl	15d60 <rb_strndup>
   151c4:	ldr	r1, [sp, #12]
   151c8:	str	r0, [r1, #20]
   151cc:	ldr	r0, [fp, #-12]
   151d0:	ldr	r1, [sp, #12]
   151d4:	str	r0, [r1, #16]
   151d8:	bl	51c4 <rb_current_time@plt>
   151dc:	ldr	r1, [pc, #164]	; 15288 <rb_event_add_common+0x10c>
   151e0:	add	r1, pc, r1
   151e4:	ldr	r2, [sp, #16]
   151e8:	add	r0, r0, r2
   151ec:	ldr	r2, [sp, #12]
   151f0:	str	r0, [r2, #28]
   151f4:	ldr	r0, [sp, #16]
   151f8:	ldr	r2, [sp, #12]
   151fc:	str	r0, [r2, #32]
   15200:	ldr	r0, [fp, #8]
   15204:	ldr	r2, [sp, #12]
   15208:	str	r0, [r2, #24]
   1520c:	ldr	r0, [sp, #12]
   15210:	movw	r2, #0
   15214:	str	r2, [r0, #44]	; 0x2c
   15218:	ldr	r0, [sp, #12]
   1521c:	ldr	r0, [r0, #28]
   15220:	ldr	r1, [r1]
   15224:	cmp	r0, r1
   15228:	blt	15240 <rb_event_add_common+0xc4>
   1522c:	ldr	r0, [pc, #88]	; 1528c <rb_event_add_common+0x110>
   15230:	add	r0, pc, r0
   15234:	ldr	r0, [r0]
   15238:	cmn	r0, #1
   1523c:	bne	15254 <rb_event_add_common+0xd8>
   15240:	ldr	r0, [pc, #72]	; 15290 <rb_event_add_common+0x114>
   15244:	add	r0, pc, r0
   15248:	ldr	r1, [sp, #12]
   1524c:	ldr	r1, [r1, #28]
   15250:	str	r1, [r0]
   15254:	ldr	r0, [pc, #56]	; 15294 <rb_event_add_common+0x118>
   15258:	add	r2, pc, r0
   1525c:	ldr	r0, [sp, #12]
   15260:	ldr	r1, [sp, #12]
   15264:	bl	15dd0 <rb_dlinkAdd>
   15268:	ldr	r0, [sp, #12]
   1526c:	ldr	r1, [sp, #16]
   15270:	bl	11ea8 <rb_io_sched_event>
   15274:	ldr	r1, [sp, #12]
   15278:	str	r0, [sp, #4]
   1527c:	mov	r0, r1
   15280:	mov	sp, fp
   15284:	pop	{fp, pc}
   15288:	.word	0x000206cc
   1528c:	.word	0x0002067c
   15290:	.word	0x00020668
   15294:	.word	0x000330c0

00015298 <rb_event_addonce>:
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	sub	sp, sp, #24
   152a4:	str	r0, [fp, #-4]
   152a8:	str	r1, [fp, #-8]
   152ac:	str	r2, [sp, #12]
   152b0:	str	r3, [sp, #8]
   152b4:	ldr	r0, [sp, #8]
   152b8:	cmp	r0, #0
   152bc:	movw	r0, #0
   152c0:	movle	r0, #1
   152c4:	mvn	r1, #0
   152c8:	eor	r0, r0, r1
   152cc:	eor	r0, r0, r1
   152d0:	tst	r0, #1
   152d4:	beq	152f4 <rb_event_addonce+0x5c>
   152d8:	ldr	r0, [pc, #56]	; 15318 <rb_event_addonce+0x80>
   152dc:	add	r0, pc, r0
   152e0:	ldr	r1, [fp, #-4]
   152e4:	ldr	r2, [sp, #8]
   152e8:	bl	52e4 <rb_lib_log@plt>
   152ec:	movw	r0, #1
   152f0:	str	r0, [sp, #8]
   152f4:	ldr	r0, [fp, #-4]
   152f8:	ldr	r1, [fp, #-8]
   152fc:	ldr	r2, [sp, #12]
   15300:	ldr	r3, [sp, #8]
   15304:	movw	ip, #0
   15308:	str	ip, [sp]
   1530c:	bl	1517c <rb_event_add_common>
   15310:	mov	sp, fp
   15314:	pop	{fp, pc}
   15318:	.word	0x0000e2e8

0001531c <rb_event_delete>:
   1531c:	push	{fp, lr}
   15320:	mov	fp, sp
   15324:	sub	sp, sp, #8
   15328:	str	r0, [sp, #4]
   1532c:	ldr	r0, [sp, #4]
   15330:	movw	r1, #0
   15334:	cmp	r0, r1
   15338:	bne	15340 <rb_event_delete+0x24>
   1533c:	b	15354 <rb_event_delete+0x38>
   15340:	ldr	r0, [sp, #4]
   15344:	movw	r1, #1
   15348:	str	r1, [r0, #44]	; 0x2c
   1534c:	ldr	r0, [sp, #4]
   15350:	bl	11f68 <rb_io_unsched_event>
   15354:	mov	sp, fp
   15358:	pop	{fp, pc}

0001535c <rb_event_find_delete>:
   1535c:	push	{fp, lr}
   15360:	mov	fp, sp
   15364:	sub	sp, sp, #8
   15368:	str	r0, [sp, #4]
   1536c:	str	r1, [sp]
   15370:	ldr	r0, [sp, #4]
   15374:	ldr	r1, [sp]
   15378:	bl	15388 <rb_event_find>
   1537c:	bl	4e58 <rb_event_delete@plt>
   15380:	mov	sp, fp
   15384:	pop	{fp, pc}

00015388 <rb_event_find>:
   15388:	sub	sp, sp, #20
   1538c:	ldr	r2, [pc, #136]	; 1541c <rb_event_find+0x94>
   15390:	add	r2, pc, r2
   15394:	str	r0, [sp, #12]
   15398:	str	r1, [sp, #8]
   1539c:	ldr	r0, [r2]
   153a0:	str	r0, [sp, #4]
   153a4:	ldr	r0, [sp, #4]
   153a8:	movw	r1, #0
   153ac:	cmp	r0, r1
   153b0:	beq	15408 <rb_event_find+0x80>
   153b4:	ldr	r0, [sp, #4]
   153b8:	ldr	r0, [r0]
   153bc:	str	r0, [sp]
   153c0:	ldr	r0, [sp]
   153c4:	ldr	r0, [r0, #12]
   153c8:	ldr	r1, [sp, #12]
   153cc:	cmp	r0, r1
   153d0:	bne	153f4 <rb_event_find+0x6c>
   153d4:	ldr	r0, [sp]
   153d8:	ldr	r0, [r0, #16]
   153dc:	ldr	r1, [sp, #8]
   153e0:	cmp	r0, r1
   153e4:	bne	153f4 <rb_event_find+0x6c>
   153e8:	ldr	r0, [sp]
   153ec:	str	r0, [sp, #16]
   153f0:	b	15410 <rb_event_find+0x88>
   153f4:	b	153f8 <rb_event_find+0x70>
   153f8:	ldr	r0, [sp, #4]
   153fc:	ldr	r0, [r0, #8]
   15400:	str	r0, [sp, #4]
   15404:	b	153a4 <rb_event_find+0x1c>
   15408:	movw	r0, #0
   1540c:	str	r0, [sp, #16]
   15410:	ldr	r0, [sp, #16]
   15414:	add	sp, sp, #20
   15418:	bx	lr
   1541c:	.word	0x00032f88

00015420 <rb_event_addish>:
   15420:	push	{fp, lr}
   15424:	mov	fp, sp
   15428:	sub	sp, sp, #40	; 0x28
   1542c:	str	r0, [fp, #-4]
   15430:	str	r1, [fp, #-8]
   15434:	str	r2, [fp, #-12]
   15438:	str	r3, [fp, #-16]
   1543c:	ldr	r0, [fp, #-16]
   15440:	bl	4eac <labs@plt>
   15444:	str	r0, [fp, #-16]
   15448:	ldr	r0, [fp, #-16]
   1544c:	vmov	s0, r0
   15450:	vcvt.f64.s32	d16, s0
   15454:	vmov.f64	d17, #8	; 0x40400000  3.0
   15458:	vcmpe.f64	d16, d17
   1545c:	vmrs	APSR_nzcv, fpscr
   15460:	blt	15474 <rb_event_addish+0x54>
   15464:	ldr	r0, [fp, #-16]
   15468:	movw	r1, #0
   1546c:	sub	r0, r1, r0
   15470:	str	r0, [fp, #-16]
   15474:	ldr	r0, [fp, #-4]
   15478:	ldr	r1, [fp, #-8]
   1547c:	ldr	r2, [fp, #-12]
   15480:	ldr	r3, [fp, #-16]
   15484:	str	r0, [sp, #20]
   15488:	mov	r0, r3
   1548c:	str	r2, [sp, #16]
   15490:	str	r1, [sp, #12]
   15494:	bl	154d0 <rb_event_frequency>
   15498:	ldr	r1, [fp, #-16]
   1549c:	ldr	r2, [sp, #20]
   154a0:	str	r0, [sp, #8]
   154a4:	mov	r0, r2
   154a8:	ldr	r3, [sp, #12]
   154ac:	str	r1, [sp, #4]
   154b0:	mov	r1, r3
   154b4:	ldr	r2, [sp, #16]
   154b8:	ldr	r3, [sp, #8]
   154bc:	ldr	lr, [sp, #4]
   154c0:	str	lr, [sp]
   154c4:	bl	1517c <rb_event_add_common>
   154c8:	mov	sp, fp
   154cc:	pop	{fp, pc}

000154d0 <rb_event_frequency>:
   154d0:	push	{fp, lr}
   154d4:	mov	fp, sp
   154d8:	sub	sp, sp, #16
   154dc:	str	r0, [fp, #-4]
   154e0:	ldr	r0, [fp, #-4]
   154e4:	cmp	r0, #0
   154e8:	bge	15558 <rb_event_frequency+0x88>
   154ec:	ldr	r0, [fp, #-4]
   154f0:	bl	4eac <labs@plt>
   154f4:	lsl	r0, r0, #1
   154f8:	movw	lr, #21846	; 0x5556
   154fc:	movt	lr, #21845	; 0x5555
   15500:	smmul	r0, r0, lr
   15504:	add	r0, r0, r0, lsr #31
   15508:	str	r0, [sp, #8]
   1550c:	ldr	r0, [sp, #8]
   15510:	str	r0, [sp, #4]
   15514:	bl	5518 <rand@plt>
   15518:	mov	lr, r0
   1551c:	movw	r1, #19923	; 0x4dd3
   15520:	movt	r1, #4194	; 0x1062
   15524:	smmul	r1, r0, r1
   15528:	asr	r2, r1, #6
   1552c:	add	r1, r2, r1, lsr #31
   15530:	mov	r2, #1000	; 0x3e8
   15534:	mls	r0, r1, r2, r0
   15538:	ldr	r1, [sp, #8]
   1553c:	mul	r0, r0, r1
   15540:	movw	r1, #1000	; 0x3e8
   15544:	sdiv	r0, r0, r1
   15548:	ldr	r1, [sp, #4]
   1554c:	add	r0, r1, r0
   15550:	str	r0, [fp, #-4]
   15554:	str	lr, [sp]
   15558:	ldr	r0, [fp, #-4]
   1555c:	mov	sp, fp
   15560:	pop	{fp, pc}

00015564 <rb_run_one_event>:
   15564:	push	{fp, lr}
   15568:	mov	fp, sp
   1556c:	sub	sp, sp, #16
   15570:	ldr	r1, [pc, #204]	; 15644 <rb_run_one_event+0xe0>
   15574:	add	r1, pc, r1
   15578:	str	r0, [fp, #-4]
   1557c:	ldr	r0, [fp, #-4]
   15580:	ldr	r0, [r0, #20]
   15584:	str	r0, [sp, #8]
   15588:	mov	r0, r1
   1558c:	ldr	r1, [sp, #8]
   15590:	movw	r2, #33	; 0x21
   15594:	bl	5068 <rb_strlcpy@plt>
   15598:	ldr	r1, [fp, #-4]
   1559c:	ldr	r1, [r1, #12]
   155a0:	ldr	r2, [fp, #-4]
   155a4:	ldr	r2, [r2, #16]
   155a8:	str	r0, [sp, #4]
   155ac:	mov	r0, r2
   155b0:	blx	r1
   155b4:	ldr	r0, [fp, #-4]
   155b8:	ldr	r0, [r0, #24]
   155bc:	cmp	r0, #0
   155c0:	bne	155d0 <rb_run_one_event+0x6c>
   155c4:	ldr	r0, [fp, #-4]
   155c8:	bl	4e58 <rb_event_delete@plt>
   155cc:	b	1563c <rb_run_one_event+0xd8>
   155d0:	bl	51c4 <rb_current_time@plt>
   155d4:	ldr	lr, [fp, #-4]
   155d8:	ldr	lr, [lr, #24]
   155dc:	str	r0, [sp]
   155e0:	mov	r0, lr
   155e4:	bl	154d0 <rb_event_frequency>
   155e8:	ldr	lr, [pc, #88]	; 15648 <rb_run_one_event+0xe4>
   155ec:	add	lr, pc, lr
   155f0:	ldr	r1, [sp]
   155f4:	add	r0, r1, r0
   155f8:	ldr	r1, [fp, #-4]
   155fc:	str	r0, [r1, #28]
   15600:	ldr	r0, [fp, #-4]
   15604:	ldr	r0, [r0, #28]
   15608:	ldr	r1, [lr]
   1560c:	cmp	r0, r1
   15610:	blt	15628 <rb_run_one_event+0xc4>
   15614:	ldr	r0, [pc, #48]	; 1564c <rb_run_one_event+0xe8>
   15618:	add	r0, pc, r0
   1561c:	ldr	r0, [r0]
   15620:	cmn	r0, #1
   15624:	bne	1563c <rb_run_one_event+0xd8>
   15628:	ldr	r0, [pc, #32]	; 15650 <rb_run_one_event+0xec>
   1562c:	add	r0, pc, r0
   15630:	ldr	r1, [fp, #-4]
   15634:	ldr	r1, [r1, #28]
   15638:	str	r1, [r0]
   1563c:	mov	sp, fp
   15640:	pop	{fp, pc}
   15644:	.word	0x00032d80
   15648:	.word	0x000202c0
   1564c:	.word	0x00020294
   15650:	.word	0x00020280

00015654 <rb_event_run>:
   15654:	push	{fp, lr}
   15658:	mov	fp, sp
   1565c:	sub	sp, sp, #32
   15660:	bl	1200c <rb_io_supports_event>
   15664:	cmp	r0, #0
   15668:	beq	15670 <rb_event_run+0x1c>
   1566c:	b	1589c <rb_event_run+0x248>
   15670:	ldr	r0, [pc, #556]	; 158a4 <rb_event_run+0x250>
   15674:	add	r0, pc, r0
   15678:	ldr	r1, [pc, #552]	; 158a8 <rb_event_run+0x254>
   1567c:	add	r1, pc, r1
   15680:	mvn	r2, #0
   15684:	str	r2, [r1]
   15688:	ldr	r0, [r0]
   1568c:	str	r0, [fp, #-4]
   15690:	ldr	r0, [fp, #-4]
   15694:	movw	r1, #0
   15698:	cmp	r0, r1
   1569c:	beq	156b0 <rb_event_run+0x5c>
   156a0:	ldr	r0, [fp, #-4]
   156a4:	ldr	r0, [r0, #8]
   156a8:	str	r0, [sp, #16]
   156ac:	b	156bc <rb_event_run+0x68>
   156b0:	movw	r0, #0
   156b4:	str	r0, [sp, #16]
   156b8:	b	156bc <rb_event_run+0x68>
   156bc:	ldr	r0, [sp, #16]
   156c0:	str	r0, [fp, #-8]
   156c4:	ldr	r0, [fp, #-4]
   156c8:	movw	r1, #0
   156cc:	cmp	r0, r1
   156d0:	beq	1589c <rb_event_run+0x248>
   156d4:	ldr	r0, [fp, #-4]
   156d8:	ldr	r0, [r0]
   156dc:	str	r0, [fp, #-12]
   156e0:	ldr	r0, [fp, #-12]
   156e4:	ldr	r0, [r0, #44]	; 0x2c
   156e8:	cmp	r0, #0
   156ec:	beq	15718 <rb_event_run+0xc4>
   156f0:	ldr	r0, [pc, #468]	; 158cc <rb_event_run+0x278>
   156f4:	add	r1, pc, r0
   156f8:	ldr	r0, [fp, #-12]
   156fc:	bl	158d0 <rb_dlinkDelete>
   15700:	ldr	r0, [fp, #-12]
   15704:	ldr	r0, [r0, #20]
   15708:	bl	15984 <rb_free>
   1570c:	ldr	r0, [fp, #-12]
   15710:	bl	15984 <rb_free>
   15714:	b	1585c <rb_event_run+0x208>
   15718:	ldr	r0, [fp, #-12]
   1571c:	ldr	r0, [r0, #28]
   15720:	str	r0, [sp, #12]
   15724:	bl	51c4 <rb_current_time@plt>
   15728:	ldr	lr, [sp, #12]
   1572c:	cmp	lr, r0
   15730:	bgt	15810 <rb_event_run+0x1bc>
   15734:	ldr	r0, [pc, #380]	; 158b8 <rb_event_run+0x264>
   15738:	add	r0, pc, r0
   1573c:	ldr	r1, [fp, #-12]
   15740:	ldr	r1, [r1, #20]
   15744:	movw	r2, #33	; 0x21
   15748:	bl	5068 <rb_strlcpy@plt>
   1574c:	ldr	r1, [fp, #-12]
   15750:	ldr	r1, [r1, #12]
   15754:	ldr	r2, [fp, #-12]
   15758:	ldr	r2, [r2, #16]
   1575c:	str	r0, [sp, #8]
   15760:	mov	r0, r2
   15764:	blx	r1
   15768:	ldr	r0, [fp, #-12]
   1576c:	ldr	r0, [r0, #24]
   15770:	cmp	r0, #0
   15774:	beq	157e8 <rb_event_run+0x194>
   15778:	bl	51c4 <rb_current_time@plt>
   1577c:	ldr	lr, [fp, #-12]
   15780:	ldr	lr, [lr, #24]
   15784:	str	r0, [sp, #4]
   15788:	mov	r0, lr
   1578c:	bl	154d0 <rb_event_frequency>
   15790:	ldr	lr, [pc, #296]	; 158c0 <rb_event_run+0x26c>
   15794:	add	lr, pc, lr
   15798:	ldr	r1, [sp, #4]
   1579c:	add	r0, r1, r0
   157a0:	ldr	r1, [fp, #-12]
   157a4:	str	r0, [r1, #28]
   157a8:	ldr	r0, [fp, #-12]
   157ac:	ldr	r0, [r0, #28]
   157b0:	ldr	r1, [lr]
   157b4:	cmp	r0, r1
   157b8:	blt	157d0 <rb_event_run+0x17c>
   157bc:	ldr	r0, [pc, #256]	; 158c4 <rb_event_run+0x270>
   157c0:	add	r0, pc, r0
   157c4:	ldr	r0, [r0]
   157c8:	cmn	r0, #1
   157cc:	bne	157e4 <rb_event_run+0x190>
   157d0:	ldr	r0, [pc, #240]	; 158c8 <rb_event_run+0x274>
   157d4:	add	r0, pc, r0
   157d8:	ldr	r1, [fp, #-12]
   157dc:	ldr	r1, [r1, #28]
   157e0:	str	r1, [r0]
   157e4:	b	1580c <rb_event_run+0x1b8>
   157e8:	ldr	r0, [pc, #204]	; 158bc <rb_event_run+0x268>
   157ec:	add	r1, pc, r0
   157f0:	ldr	r0, [fp, #-12]
   157f4:	bl	158d0 <rb_dlinkDelete>
   157f8:	ldr	r0, [fp, #-12]
   157fc:	ldr	r0, [r0, #20]
   15800:	bl	15984 <rb_free>
   15804:	ldr	r0, [fp, #-12]
   15808:	bl	15984 <rb_free>
   1580c:	b	15858 <rb_event_run+0x204>
   15810:	ldr	r0, [pc, #148]	; 158ac <rb_event_run+0x258>
   15814:	add	r0, pc, r0
   15818:	ldr	r1, [fp, #-12]
   1581c:	ldr	r1, [r1, #28]
   15820:	ldr	r0, [r0]
   15824:	cmp	r1, r0
   15828:	blt	15840 <rb_event_run+0x1ec>
   1582c:	ldr	r0, [pc, #124]	; 158b0 <rb_event_run+0x25c>
   15830:	add	r0, pc, r0
   15834:	ldr	r0, [r0]
   15838:	cmn	r0, #1
   1583c:	bne	15854 <rb_event_run+0x200>
   15840:	ldr	r0, [pc, #108]	; 158b4 <rb_event_run+0x260>
   15844:	add	r0, pc, r0
   15848:	ldr	r1, [fp, #-12]
   1584c:	ldr	r1, [r1, #28]
   15850:	str	r1, [r0]
   15854:	b	15858 <rb_event_run+0x204>
   15858:	b	1585c <rb_event_run+0x208>
   1585c:	ldr	r0, [fp, #-8]
   15860:	str	r0, [fp, #-4]
   15864:	ldr	r0, [fp, #-4]
   15868:	movw	r1, #0
   1586c:	cmp	r0, r1
   15870:	beq	15884 <rb_event_run+0x230>
   15874:	ldr	r0, [fp, #-4]
   15878:	ldr	r0, [r0, #8]
   1587c:	str	r0, [sp]
   15880:	b	15890 <rb_event_run+0x23c>
   15884:	movw	r0, #0
   15888:	str	r0, [sp]
   1588c:	b	15890 <rb_event_run+0x23c>
   15890:	ldr	r0, [sp]
   15894:	str	r0, [fp, #-8]
   15898:	b	156c4 <rb_event_run+0x70>
   1589c:	mov	sp, fp
   158a0:	pop	{fp, pc}
   158a4:	.word	0x00032ca4
   158a8:	.word	0x00020230
   158ac:	.word	0x00020098
   158b0:	.word	0x0002007c
   158b4:	.word	0x00020068
   158b8:	.word	0x00032bbc
   158bc:	.word	0x00032b2c
   158c0:	.word	0x00020118
   158c4:	.word	0x000200ec
   158c8:	.word	0x000200d8
   158cc:	.word	0x00032c24

000158d0 <rb_dlinkDelete>:
   158d0:	sub	sp, sp, #8
   158d4:	str	r0, [sp, #4]
   158d8:	str	r1, [sp]
   158dc:	ldr	r0, [sp, #4]
   158e0:	ldr	r0, [r0, #8]
   158e4:	movw	r1, #0
   158e8:	cmp	r0, r1
   158ec:	beq	15908 <rb_dlinkDelete+0x38>
   158f0:	ldr	r0, [sp, #4]
   158f4:	ldr	r0, [r0, #4]
   158f8:	ldr	r1, [sp, #4]
   158fc:	ldr	r1, [r1, #8]
   15900:	str	r0, [r1, #4]
   15904:	b	15918 <rb_dlinkDelete+0x48>
   15908:	ldr	r0, [sp, #4]
   1590c:	ldr	r0, [r0, #4]
   15910:	ldr	r1, [sp]
   15914:	str	r0, [r1, #4]
   15918:	ldr	r0, [sp, #4]
   1591c:	ldr	r0, [r0, #4]
   15920:	movw	r1, #0
   15924:	cmp	r0, r1
   15928:	beq	15944 <rb_dlinkDelete+0x74>
   1592c:	ldr	r0, [sp, #4]
   15930:	ldr	r0, [r0, #8]
   15934:	ldr	r1, [sp, #4]
   15938:	ldr	r1, [r1, #4]
   1593c:	str	r0, [r1, #8]
   15940:	b	15954 <rb_dlinkDelete+0x84>
   15944:	ldr	r0, [sp, #4]
   15948:	ldr	r0, [r0, #8]
   1594c:	ldr	r1, [sp]
   15950:	str	r0, [r1]
   15954:	ldr	r0, [sp, #4]
   15958:	movw	r1, #0
   1595c:	str	r1, [r0, #4]
   15960:	ldr	r0, [sp, #4]
   15964:	str	r1, [r0, #8]
   15968:	ldr	r0, [sp]
   1596c:	ldr	r1, [r0, #8]
   15970:	mvn	r2, #0
   15974:	add	r1, r1, r2
   15978:	str	r1, [r0, #8]
   1597c:	add	sp, sp, #8
   15980:	bx	lr

00015984 <rb_free>:
   15984:	push	{fp, lr}
   15988:	mov	fp, sp
   1598c:	sub	sp, sp, #8
   15990:	str	r0, [sp, #4]
   15994:	ldr	r0, [sp, #4]
   15998:	movw	r1, #0
   1599c:	cmp	r0, r1
   159a0:	movw	r0, #0
   159a4:	movne	r0, #1
   159a8:	mvn	r1, #0
   159ac:	eor	r0, r0, r1
   159b0:	eor	r0, r0, r1
   159b4:	tst	r0, #1
   159b8:	beq	159c4 <rb_free+0x40>
   159bc:	ldr	r0, [sp, #4]
   159c0:	bl	50c8 <free@plt>
   159c4:	mov	sp, fp
   159c8:	pop	{fp, pc}

000159cc <rb_event_io_register_all>:
   159cc:	push	{fp, lr}
   159d0:	mov	fp, sp
   159d4:	sub	sp, sp, #16
   159d8:	bl	1200c <rb_io_supports_event>
   159dc:	cmp	r0, #0
   159e0:	bne	159e8 <rb_event_io_register_all+0x1c>
   159e4:	b	15a38 <rb_event_io_register_all+0x6c>
   159e8:	ldr	r0, [pc, #80]	; 15a40 <rb_event_io_register_all+0x74>
   159ec:	add	r0, pc, r0
   159f0:	ldr	r0, [r0]
   159f4:	str	r0, [fp, #-4]
   159f8:	ldr	r0, [fp, #-4]
   159fc:	movw	r1, #0
   15a00:	cmp	r0, r1
   15a04:	beq	15a38 <rb_event_io_register_all+0x6c>
   15a08:	ldr	r0, [fp, #-4]
   15a0c:	ldr	r0, [r0]
   15a10:	str	r0, [sp, #8]
   15a14:	ldr	r0, [sp, #8]
   15a18:	ldr	r1, [sp, #8]
   15a1c:	ldr	r1, [r1, #32]
   15a20:	bl	11ea8 <rb_io_sched_event>
   15a24:	str	r0, [sp, #4]
   15a28:	ldr	r0, [fp, #-4]
   15a2c:	ldr	r0, [r0, #8]
   15a30:	str	r0, [fp, #-4]
   15a34:	b	159f8 <rb_event_io_register_all+0x2c>
   15a38:	mov	sp, fp
   15a3c:	pop	{fp, pc}
   15a40:	.word	0x0003292c

00015a44 <rb_event_init>:
   15a44:	push	{fp, lr}
   15a48:	mov	fp, sp
   15a4c:	sub	sp, sp, #8
   15a50:	ldr	r0, [pc, #28]	; 15a74 <rb_event_init+0x30>
   15a54:	add	r0, pc, r0
   15a58:	ldr	r1, [pc, #24]	; 15a78 <rb_event_init+0x34>
   15a5c:	add	r1, pc, r1
   15a60:	movw	r2, #33	; 0x21
   15a64:	bl	5068 <rb_strlcpy@plt>
   15a68:	str	r0, [sp, #4]
   15a6c:	mov	sp, fp
   15a70:	pop	{fp, pc}
   15a74:	.word	0x000328a0
   15a78:	.word	0x0000dbaa

00015a7c <rb_dump_events>:
   15a7c:	push	{r4, sl, fp, lr}
   15a80:	add	fp, sp, #8
   15a84:	sub	sp, sp, #576	; 0x240
   15a88:	ldr	r2, [pc, #336]	; 15be0 <rb_dump_events+0x164>
   15a8c:	add	r2, pc, r2
   15a90:	ldr	r3, [pc, #332]	; 15be4 <rb_dump_events+0x168>
   15a94:	add	r3, pc, r3
   15a98:	add	ip, sp, #52	; 0x34
   15a9c:	str	r0, [fp, #-12]
   15aa0:	str	r1, [fp, #-16]
   15aa4:	movw	r0, #512	; 0x200
   15aa8:	str	r0, [fp, #-20]	; 0xffffffec
   15aac:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ab0:	mov	r0, ip
   15ab4:	bl	5584 <snprintf@plt>
   15ab8:	add	r1, sp, #52	; 0x34
   15abc:	ldr	r2, [fp, #-12]
   15ac0:	ldr	r3, [fp, #-16]
   15ac4:	str	r0, [sp, #40]	; 0x28
   15ac8:	mov	r0, r1
   15acc:	mov	r1, r3
   15ad0:	blx	r2
   15ad4:	ldr	r0, [pc, #256]	; 15bdc <rb_dump_events+0x160>
   15ad8:	add	r1, pc, r0
   15adc:	add	r0, sp, #52	; 0x34
   15ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ae4:	bl	5068 <rb_strlcpy@plt>
   15ae8:	add	r1, sp, #52	; 0x34
   15aec:	ldr	r2, [fp, #-12]
   15af0:	ldr	r3, [fp, #-16]
   15af4:	str	r0, [sp, #36]	; 0x24
   15af8:	mov	r0, r1
   15afc:	mov	r1, r3
   15b00:	blx	r2
   15b04:	ldr	r0, [pc, #204]	; 15bd8 <rb_dump_events+0x15c>
   15b08:	add	r0, pc, r0
   15b0c:	ldr	r0, [r0]
   15b10:	str	r0, [sp, #48]	; 0x30
   15b14:	ldr	r0, [sp, #48]	; 0x30
   15b18:	movw	r1, #0
   15b1c:	cmp	r0, r1
   15b20:	beq	15bd0 <rb_dump_events+0x154>
   15b24:	add	r0, sp, #52	; 0x34
   15b28:	ldr	r1, [sp, #48]	; 0x30
   15b2c:	ldr	r1, [r1]
   15b30:	str	r1, [sp, #44]	; 0x2c
   15b34:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b38:	ldr	r2, [sp, #44]	; 0x2c
   15b3c:	ldr	r3, [r2, #20]
   15b40:	ldr	r2, [sp, #44]	; 0x2c
   15b44:	ldr	r2, [r2, #28]
   15b48:	str	r0, [sp, #32]
   15b4c:	str	r1, [sp, #28]
   15b50:	str	r3, [sp, #24]
   15b54:	str	r2, [sp, #20]
   15b58:	bl	51c4 <rb_current_time@plt>
   15b5c:	ldr	r1, [pc, #132]	; 15be8 <rb_dump_events+0x16c>
   15b60:	add	r2, pc, r1
   15b64:	ldr	r1, [sp, #20]
   15b68:	sub	r0, r1, r0
   15b6c:	ldr	r1, [sp, #44]	; 0x2c
   15b70:	ldr	r1, [r1, #24]
   15b74:	ldr	r3, [sp, #32]
   15b78:	str	r0, [sp, #16]
   15b7c:	mov	r0, r3
   15b80:	ldr	lr, [sp, #28]
   15b84:	str	r1, [sp, #12]
   15b88:	mov	r1, lr
   15b8c:	ldr	r3, [sp, #24]
   15b90:	ldr	ip, [sp, #16]
   15b94:	str	ip, [sp]
   15b98:	ldr	r4, [sp, #12]
   15b9c:	str	r4, [sp, #4]
   15ba0:	bl	5584 <snprintf@plt>
   15ba4:	add	r1, sp, #52	; 0x34
   15ba8:	ldr	r2, [fp, #-12]
   15bac:	ldr	r3, [fp, #-16]
   15bb0:	str	r0, [sp, #8]
   15bb4:	mov	r0, r1
   15bb8:	mov	r1, r3
   15bbc:	blx	r2
   15bc0:	ldr	r0, [sp, #48]	; 0x30
   15bc4:	ldr	r0, [r0, #8]
   15bc8:	str	r0, [sp, #48]	; 0x30
   15bcc:	b	15b14 <rb_dump_events+0x98>
   15bd0:	sub	sp, fp, #8
   15bd4:	pop	{r4, sl, fp, pc}
   15bd8:	.word	0x00032810
   15bdc:	.word	0x0000db49
   15be0:	.word	0x0000db7f
   15be4:	.word	0x00032860
   15be8:	.word	0x0000daed

00015bec <rb_set_back_events>:
   15bec:	sub	sp, sp, #12
   15bf0:	ldr	r1, [pc, #124]	; 15c74 <rb_set_back_events+0x88>
   15bf4:	add	r1, pc, r1
   15bf8:	str	r0, [sp, #8]
   15bfc:	ldr	r0, [r1]
   15c00:	str	r0, [sp, #4]
   15c04:	ldr	r0, [sp, #4]
   15c08:	movw	r1, #0
   15c0c:	cmp	r0, r1
   15c10:	beq	15c6c <rb_set_back_events+0x80>
   15c14:	ldr	r0, [sp, #4]
   15c18:	ldr	r0, [r0]
   15c1c:	str	r0, [sp]
   15c20:	ldr	r0, [sp]
   15c24:	ldr	r0, [r0, #28]
   15c28:	ldr	r1, [sp, #8]
   15c2c:	cmp	r0, r1
   15c30:	ble	15c4c <rb_set_back_events+0x60>
   15c34:	ldr	r0, [sp, #8]
   15c38:	ldr	r1, [sp]
   15c3c:	ldr	r2, [r1, #28]
   15c40:	sub	r0, r2, r0
   15c44:	str	r0, [r1, #28]
   15c48:	b	15c58 <rb_set_back_events+0x6c>
   15c4c:	ldr	r0, [sp]
   15c50:	movw	r1, #0
   15c54:	str	r1, [r0, #28]
   15c58:	b	15c5c <rb_set_back_events+0x70>
   15c5c:	ldr	r0, [sp, #4]
   15c60:	ldr	r0, [r0, #8]
   15c64:	str	r0, [sp, #4]
   15c68:	b	15c04 <rb_set_back_events+0x18>
   15c6c:	add	sp, sp, #12
   15c70:	bx	lr
   15c74:	.word	0x00032724

00015c78 <rb_event_update>:
   15c78:	push	{fp, lr}
   15c7c:	mov	fp, sp
   15c80:	sub	sp, sp, #16
   15c84:	str	r0, [fp, #-4]
   15c88:	str	r1, [sp, #8]
   15c8c:	ldr	r0, [fp, #-4]
   15c90:	movw	r1, #0
   15c94:	cmp	r0, r1
   15c98:	bne	15ca0 <rb_event_update+0x28>
   15c9c:	b	15cec <rb_event_update+0x74>
   15ca0:	ldr	r0, [sp, #8]
   15ca4:	ldr	r1, [fp, #-4]
   15ca8:	str	r0, [r1, #24]
   15cac:	ldr	r0, [sp, #8]
   15cb0:	bl	154d0 <rb_event_frequency>
   15cb4:	str	r0, [sp, #4]
   15cb8:	bl	51c4 <rb_current_time@plt>
   15cbc:	ldr	r1, [sp, #4]
   15cc0:	add	r0, r0, r1
   15cc4:	ldr	r1, [fp, #-4]
   15cc8:	ldr	r1, [r1, #28]
   15ccc:	cmp	r0, r1
   15cd0:	bge	15ce8 <rb_event_update+0x70>
   15cd4:	bl	51c4 <rb_current_time@plt>
   15cd8:	ldr	lr, [sp, #4]
   15cdc:	add	r0, r0, lr
   15ce0:	ldr	lr, [fp, #-4]
   15ce4:	str	r0, [lr, #28]
   15ce8:	b	15cec <rb_event_update+0x74>
   15cec:	mov	sp, fp
   15cf0:	pop	{fp, pc}

00015cf4 <rb_event_next>:
   15cf4:	ldr	r0, [pc, #8]	; 15d04 <rb_event_next+0x10>
   15cf8:	add	r0, pc, r0
   15cfc:	ldr	r0, [r0]
   15d00:	bx	lr
   15d04:	.word	0x0001fbb4

00015d08 <rb_malloc>:
   15d08:	push	{fp, lr}
   15d0c:	mov	fp, sp
   15d10:	sub	sp, sp, #8
   15d14:	str	r0, [sp, #4]
   15d18:	ldr	r1, [sp, #4]
   15d1c:	movw	r0, #1
   15d20:	bl	4fb4 <calloc@plt>
   15d24:	str	r0, [sp]
   15d28:	ldr	r0, [sp]
   15d2c:	movw	r1, #0
   15d30:	cmp	r0, r1
   15d34:	movw	r0, #0
   15d38:	moveq	r0, #1
   15d3c:	mvn	r1, #0
   15d40:	eor	r0, r0, r1
   15d44:	eor	r0, r0, r1
   15d48:	tst	r0, #1
   15d4c:	beq	15d54 <rb_malloc+0x4c>
   15d50:	bl	5350 <rb_outofmemory@plt>
   15d54:	ldr	r0, [sp]
   15d58:	mov	sp, fp
   15d5c:	pop	{fp, pc}

00015d60 <rb_strndup>:
   15d60:	push	{fp, lr}
   15d64:	mov	fp, sp
   15d68:	sub	sp, sp, #16
   15d6c:	str	r0, [fp, #-4]
   15d70:	str	r1, [sp, #8]
   15d74:	ldr	r0, [sp, #8]
   15d78:	bl	5374 <malloc@plt>
   15d7c:	str	r0, [sp, #4]
   15d80:	ldr	r0, [sp, #4]
   15d84:	movw	r1, #0
   15d88:	cmp	r0, r1
   15d8c:	movw	r0, #0
   15d90:	moveq	r0, #1
   15d94:	mvn	r1, #0
   15d98:	eor	r0, r0, r1
   15d9c:	eor	r0, r0, r1
   15da0:	tst	r0, #1
   15da4:	beq	15dac <rb_strndup+0x4c>
   15da8:	bl	5350 <rb_outofmemory@plt>
   15dac:	ldr	r0, [sp, #4]
   15db0:	ldr	r1, [fp, #-4]
   15db4:	ldr	r2, [sp, #8]
   15db8:	bl	5068 <rb_strlcpy@plt>
   15dbc:	ldr	r1, [sp, #4]
   15dc0:	str	r0, [sp]
   15dc4:	mov	r0, r1
   15dc8:	mov	sp, fp
   15dcc:	pop	{fp, pc}

00015dd0 <rb_dlinkAdd>:
   15dd0:	sub	sp, sp, #12
   15dd4:	str	r0, [sp, #8]
   15dd8:	str	r1, [sp, #4]
   15ddc:	str	r2, [sp]
   15de0:	ldr	r0, [sp, #8]
   15de4:	ldr	r1, [sp, #4]
   15de8:	str	r0, [r1]
   15dec:	ldr	r0, [sp, #4]
   15df0:	movw	r1, #0
   15df4:	str	r1, [r0, #4]
   15df8:	ldr	r0, [sp]
   15dfc:	ldr	r0, [r0]
   15e00:	ldr	r2, [sp, #4]
   15e04:	str	r0, [r2, #8]
   15e08:	ldr	r0, [sp]
   15e0c:	ldr	r0, [r0]
   15e10:	cmp	r0, r1
   15e14:	beq	15e2c <rb_dlinkAdd+0x5c>
   15e18:	ldr	r0, [sp, #4]
   15e1c:	ldr	r1, [sp]
   15e20:	ldr	r1, [r1]
   15e24:	str	r0, [r1, #4]
   15e28:	b	15e50 <rb_dlinkAdd+0x80>
   15e2c:	ldr	r0, [sp]
   15e30:	ldr	r0, [r0, #4]
   15e34:	movw	r1, #0
   15e38:	cmp	r0, r1
   15e3c:	bne	15e4c <rb_dlinkAdd+0x7c>
   15e40:	ldr	r0, [sp, #4]
   15e44:	ldr	r1, [sp]
   15e48:	str	r0, [r1, #4]
   15e4c:	b	15e50 <rb_dlinkAdd+0x80>
   15e50:	ldr	r0, [sp, #4]
   15e54:	ldr	r1, [sp]
   15e58:	str	r0, [r1]
   15e5c:	ldr	r0, [sp]
   15e60:	ldr	r1, [r0, #8]
   15e64:	add	r1, r1, #1
   15e68:	str	r1, [r0, #8]
   15e6c:	add	sp, sp, #12
   15e70:	bx	lr

00015e74 <rb_ctime>:
   15e74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e78:	add	fp, sp, #24
   15e7c:	sub	sp, sp, #112	; 0x70
   15e80:	str	r0, [fp, #-32]	; 0xffffffe0
   15e84:	str	r1, [fp, #-36]	; 0xffffffdc
   15e88:	str	r2, [fp, #-40]	; 0xffffffd8
   15e8c:	sub	r0, fp, #32
   15e90:	add	r1, sp, #40	; 0x28
   15e94:	bl	53bc <gmtime_r@plt>
   15e98:	str	r0, [fp, #-48]	; 0xffffffd0
   15e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ea0:	movw	r1, #0
   15ea4:	cmp	r0, r1
   15ea8:	bne	15ec4 <rb_ctime+0x50>
   15eac:	ldr	r0, [pc, #288]	; 15fd4 <rb_ctime+0x160>
   15eb0:	add	r0, pc, r0
   15eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   15eb8:	movw	r0, #128	; 0x80
   15ebc:	str	r0, [fp, #-52]	; 0xffffffcc
   15ec0:	b	15ed4 <rb_ctime+0x60>
   15ec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   15ecc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ed0:	str	r0, [fp, #-52]	; 0xffffffcc
   15ed4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ed8:	movw	r1, #0
   15edc:	cmp	r0, r1
   15ee0:	movw	r0, #0
   15ee4:	moveq	r0, #1
   15ee8:	mvn	r1, #0
   15eec:	eor	r0, r0, r1
   15ef0:	eor	r0, r0, r1
   15ef4:	tst	r0, #1
   15ef8:	beq	15f20 <rb_ctime+0xac>
   15efc:	ldr	r0, [pc, #220]	; 15fe0 <rb_ctime+0x16c>
   15f00:	add	r1, pc, r0
   15f04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15f0c:	bl	5068 <rb_strlcpy@plt>
   15f10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f14:	str	r1, [fp, #-28]	; 0xffffffe4
   15f18:	str	r0, [sp, #36]	; 0x24
   15f1c:	b	15fc8 <rb_ctime+0x154>
   15f20:	ldr	r0, [pc, #176]	; 15fd8 <rb_ctime+0x164>
   15f24:	add	r2, pc, r0
   15f28:	ldr	r0, [pc, #172]	; 15fdc <rb_ctime+0x168>
   15f2c:	add	r0, pc, r0
   15f30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15f38:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15f3c:	ldr	lr, [ip, #16]
   15f40:	ldr	ip, [ip, #24]
   15f44:	ldr	r4, [pc, #152]	; 15fe4 <rb_ctime+0x170>
   15f48:	add	r4, pc, r4
   15f4c:	ldr	ip, [r4, ip, lsl #2]
   15f50:	ldr	r4, [pc, #144]	; 15fe8 <rb_ctime+0x174>
   15f54:	add	r4, pc, r4
   15f58:	add	lr, r4, lr, lsl #2
   15f5c:	ldr	lr, [lr]
   15f60:	ldr	r4, [fp, #-48]	; 0xffffffd0
   15f64:	ldr	r4, [r4, #12]
   15f68:	ldr	r5, [fp, #-48]	; 0xffffffd0
   15f6c:	ldr	r5, [r5, #8]
   15f70:	ldr	r6, [fp, #-48]	; 0xffffffd0
   15f74:	ldr	r6, [r6, #4]
   15f78:	ldr	r7, [fp, #-48]	; 0xffffffd0
   15f7c:	ldr	r7, [r7]
   15f80:	ldr	r8, [fp, #-48]	; 0xffffffd0
   15f84:	ldr	r8, [r8, #20]
   15f88:	movw	r9, #1900	; 0x76c
   15f8c:	add	r8, r8, r9
   15f90:	str	r0, [sp, #32]
   15f94:	mov	r0, r1
   15f98:	mov	r1, r3
   15f9c:	mov	r3, ip
   15fa0:	str	lr, [sp]
   15fa4:	str	r4, [sp, #4]
   15fa8:	str	r5, [sp, #8]
   15fac:	str	r6, [sp, #12]
   15fb0:	str	r7, [sp, #16]
   15fb4:	str	r8, [sp, #20]
   15fb8:	bl	5584 <snprintf@plt>
   15fbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fc0:	str	r1, [fp, #-28]	; 0xffffffe4
   15fc4:	str	r0, [sp, #28]
   15fc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15fcc:	sub	sp, fp, #24
   15fd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15fd4:	.word	0x00032474
   15fd8:	.word	0x0000d74c
   15fdc:	.word	0x0001f9a0
   15fe0:	.word	0x0000ce75
   15fe4:	.word	0x0001f968
   15fe8:	.word	0x0001f978

00015fec <rb_date>:
   15fec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ff0:	add	fp, sp, #24
   15ff4:	sub	sp, sp, #104	; 0x68
   15ff8:	str	r0, [fp, #-32]	; 0xffffffe0
   15ffc:	str	r1, [fp, #-36]	; 0xffffffdc
   16000:	str	r2, [fp, #-40]	; 0xffffffd8
   16004:	sub	r0, fp, #32
   16008:	add	r1, sp, #40	; 0x28
   1600c:	bl	53bc <gmtime_r@plt>
   16010:	str	r0, [fp, #-44]	; 0xffffffd4
   16014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16018:	movw	r1, #0
   1601c:	cmp	r0, r1
   16020:	movw	r0, #0
   16024:	moveq	r0, #1
   16028:	mvn	r1, #0
   1602c:	eor	r0, r0, r1
   16030:	eor	r0, r0, r1
   16034:	tst	r0, #1
   16038:	beq	16060 <rb_date+0x74>
   1603c:	ldr	r0, [pc, #216]	; 1611c <rb_date+0x130>
   16040:	add	r1, pc, r0
   16044:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16048:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1604c:	bl	5068 <rb_strlcpy@plt>
   16050:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16054:	str	r1, [fp, #-28]	; 0xffffffe4
   16058:	str	r0, [sp, #36]	; 0x24
   1605c:	b	16108 <rb_date+0x11c>
   16060:	ldr	r0, [pc, #172]	; 16114 <rb_date+0x128>
   16064:	add	r2, pc, r0
   16068:	ldr	r0, [pc, #168]	; 16118 <rb_date+0x12c>
   1606c:	add	r0, pc, r0
   16070:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16078:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1607c:	ldr	lr, [ip, #16]
   16080:	ldr	ip, [ip, #24]
   16084:	ldr	r4, [pc, #148]	; 16120 <rb_date+0x134>
   16088:	add	r4, pc, r4
   1608c:	ldr	ip, [r4, ip, lsl #2]
   16090:	ldr	r4, [pc, #140]	; 16124 <rb_date+0x138>
   16094:	add	r4, pc, r4
   16098:	add	lr, r4, lr, lsl #2
   1609c:	ldr	lr, [lr]
   160a0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   160a4:	ldr	r4, [r4, #12]
   160a8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   160ac:	ldr	r5, [r5, #20]
   160b0:	movw	r6, #1900	; 0x76c
   160b4:	add	r5, r5, r6
   160b8:	ldr	r6, [fp, #-44]	; 0xffffffd4
   160bc:	ldr	r6, [r6, #8]
   160c0:	ldr	r7, [fp, #-44]	; 0xffffffd4
   160c4:	ldr	r7, [r7, #4]
   160c8:	ldr	r8, [fp, #-44]	; 0xffffffd4
   160cc:	ldr	r8, [r8]
   160d0:	str	r0, [sp, #32]
   160d4:	mov	r0, r1
   160d8:	mov	r1, r3
   160dc:	mov	r3, ip
   160e0:	str	lr, [sp]
   160e4:	str	r4, [sp, #4]
   160e8:	str	r5, [sp, #8]
   160ec:	str	r6, [sp, #12]
   160f0:	str	r7, [sp, #16]
   160f4:	str	r8, [sp, #20]
   160f8:	bl	5584 <snprintf@plt>
   160fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16100:	str	r1, [fp, #-28]	; 0xffffffe4
   16104:	str	r0, [sp, #28]
   16108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1610c:	sub	sp, fp, #24
   16110:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16114:	.word	0x0000d627
   16118:	.word	0x0001f8ac
   1611c:	.word	0x0000cd35
   16120:	.word	0x0001f874
   16124:	.word	0x0001f884

00016128 <rb_current_time>:
   16128:	ldr	r0, [pc, #8]	; 16138 <rb_current_time+0x10>
   1612c:	add	r0, pc, r0
   16130:	ldr	r0, [r0]
   16134:	bx	lr
   16138:	.word	0x00032278

0001613c <rb_current_time_tv>:
   1613c:	ldr	r0, [pc, #4]	; 16148 <rb_current_time_tv+0xc>
   16140:	add	r0, pc, r0
   16144:	bx	lr
   16148:	.word	0x00032264

0001614c <rb_lib_log>:
   1614c:	sub	sp, sp, #12
   16150:	push	{fp, lr}
   16154:	mov	fp, sp
   16158:	sub	sp, sp, #20
   1615c:	str	r3, [fp, #16]
   16160:	str	r2, [fp, #12]
   16164:	str	r1, [fp, #8]
   16168:	ldr	r1, [pc, #132]	; 161f4 <rb_lib_log+0xa8>
   1616c:	add	r1, pc, r1
   16170:	str	r0, [fp, #-4]
   16174:	ldr	r0, [r1]
   16178:	movw	r1, #0
   1617c:	cmp	r0, r1
   16180:	bne	16188 <rb_lib_log+0x3c>
   16184:	b	161e4 <rb_lib_log+0x98>
   16188:	ldr	r0, [pc, #112]	; 16200 <rb_lib_log+0xb4>
   1618c:	add	r0, pc, r0
   16190:	add	r1, fp, #8
   16194:	str	r1, [fp, #-8]
   16198:	ldr	r2, [fp, #-4]
   1619c:	ldr	r3, [fp, #-8]
   161a0:	ldr	r1, [pc, #92]	; 16204 <rb_lib_log+0xb8>
   161a4:	add	r1, pc, r1
   161a8:	mov	ip, #512	; 0x200
   161ac:	str	r0, [sp, #8]
   161b0:	mov	r0, r1
   161b4:	mov	r1, ip
   161b8:	bl	4f24 <vsnprintf@plt>
   161bc:	ldr	r1, [pc, #52]	; 161f8 <rb_lib_log+0xac>
   161c0:	add	r1, pc, r1
   161c4:	ldr	r2, [pc, #48]	; 161fc <rb_lib_log+0xb0>
   161c8:	add	r2, pc, r2
   161cc:	sub	r3, fp, #8
   161d0:	ldr	r2, [r2]
   161d4:	str	r0, [sp, #4]
   161d8:	mov	r0, r1
   161dc:	str	r3, [sp]
   161e0:	blx	r2
   161e4:	mov	sp, fp
   161e8:	pop	{fp, lr}
   161ec:	add	sp, sp, #12
   161f0:	bx	lr
   161f4:	.word	0x00032240
   161f8:	.word	0x000321f0
   161fc:	.word	0x000321e4
   16200:	.word	0x00032224
   16204:	.word	0x0003220c

00016208 <rb_lib_die>:
   16208:	sub	sp, sp, #12
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	sub	sp, sp, #20
   16218:	str	r3, [fp, #16]
   1621c:	str	r2, [fp, #12]
   16220:	str	r1, [fp, #8]
   16224:	ldr	r1, [pc, #132]	; 162b0 <rb_lib_die+0xa8>
   16228:	add	r1, pc, r1
   1622c:	str	r0, [fp, #-4]
   16230:	ldr	r0, [r1]
   16234:	movw	r1, #0
   16238:	cmp	r0, r1
   1623c:	bne	16244 <rb_lib_die+0x3c>
   16240:	bl	4d80 <abort@plt>
   16244:	ldr	r0, [pc, #112]	; 162bc <rb_lib_die+0xb4>
   16248:	add	r0, pc, r0
   1624c:	add	r1, fp, #8
   16250:	str	r1, [fp, #-8]
   16254:	ldr	r2, [fp, #-4]
   16258:	ldr	r3, [fp, #-8]
   1625c:	ldr	r1, [pc, #92]	; 162c0 <rb_lib_die+0xb8>
   16260:	add	r1, pc, r1
   16264:	mov	ip, #512	; 0x200
   16268:	str	r0, [sp, #8]
   1626c:	mov	r0, r1
   16270:	mov	r1, ip
   16274:	bl	4f24 <vsnprintf@plt>
   16278:	ldr	r1, [pc, #52]	; 162b4 <rb_lib_die+0xac>
   1627c:	add	r1, pc, r1
   16280:	ldr	r2, [pc, #48]	; 162b8 <rb_lib_die+0xb0>
   16284:	add	r2, pc, r2
   16288:	sub	r3, fp, #8
   1628c:	ldr	r2, [r2]
   16290:	str	r0, [sp, #4]
   16294:	mov	r0, r1
   16298:	str	r3, [sp]
   1629c:	blx	r2
   162a0:	mov	sp, fp
   162a4:	pop	{fp, lr}
   162a8:	add	sp, sp, #12
   162ac:	bx	lr
   162b0:	.word	0x00032388
   162b4:	.word	0x00032134
   162b8:	.word	0x0003232c
   162bc:	.word	0x00032168
   162c0:	.word	0x00032150

000162c4 <rb_lib_restart>:
   162c4:	sub	sp, sp, #12
   162c8:	push	{fp, lr}
   162cc:	mov	fp, sp
   162d0:	sub	sp, sp, #20
   162d4:	str	r3, [fp, #16]
   162d8:	str	r2, [fp, #12]
   162dc:	str	r1, [fp, #8]
   162e0:	ldr	r1, [pc, #120]	; 16360 <rb_lib_restart+0x9c>
   162e4:	add	r1, pc, r1
   162e8:	str	r0, [fp, #-4]
   162ec:	ldr	r0, [r1]
   162f0:	movw	r1, #0
   162f4:	cmp	r0, r1
   162f8:	bne	16300 <rb_lib_restart+0x3c>
   162fc:	bl	4d80 <abort@plt>
   16300:	ldr	r0, [pc, #100]	; 1636c <rb_lib_restart+0xa8>
   16304:	add	r0, pc, r0
   16308:	add	r1, fp, #8
   1630c:	str	r1, [fp, #-8]
   16310:	ldr	r2, [fp, #-4]
   16314:	ldr	r3, [fp, #-8]
   16318:	ldr	r1, [pc, #80]	; 16370 <rb_lib_restart+0xac>
   1631c:	add	r1, pc, r1
   16320:	mov	ip, #512	; 0x200
   16324:	str	r0, [sp, #8]
   16328:	mov	r0, r1
   1632c:	mov	r1, ip
   16330:	bl	4f24 <vsnprintf@plt>
   16334:	ldr	r1, [pc, #40]	; 16364 <rb_lib_restart+0xa0>
   16338:	add	r1, pc, r1
   1633c:	ldr	r2, [pc, #36]	; 16368 <rb_lib_restart+0xa4>
   16340:	add	r2, pc, r2
   16344:	sub	r3, fp, #8
   16348:	ldr	r2, [r2]
   1634c:	str	r0, [sp, #4]
   16350:	mov	r0, r1
   16354:	str	r3, [sp]
   16358:	blx	r2
   1635c:	bl	4d80 <abort@plt>
   16360:	.word	0x000322d0
   16364:	.word	0x00032078
   16368:	.word	0x00032274
   1636c:	.word	0x000320ac
   16370:	.word	0x00032094

00016374 <rb_set_time>:
   16374:	push	{fp, lr}
   16378:	mov	fp, sp
   1637c:	sub	sp, sp, #16
   16380:	add	r0, sp, #8
   16384:	movw	r1, #0
   16388:	bl	4f84 <rb_gettimeofday@plt>
   1638c:	cmn	r0, #1
   16390:	movw	r0, #0
   16394:	moveq	r0, #1
   16398:	mvn	r1, #0
   1639c:	eor	r0, r0, r1
   163a0:	eor	r0, r0, r1
   163a4:	tst	r0, #1
   163a8:	beq	163dc <rb_set_time+0x68>
   163ac:	bl	56c8 <__errno_location@plt>
   163b0:	ldr	r0, [r0]
   163b4:	bl	4d5c <strerror@plt>
   163b8:	ldr	lr, [pc, #124]	; 1643c <rb_set_time+0xc8>
   163bc:	add	lr, pc, lr
   163c0:	str	r0, [sp, #4]
   163c4:	mov	r0, lr
   163c8:	ldr	r1, [sp, #4]
   163cc:	bl	52e4 <rb_lib_log@plt>
   163d0:	ldr	r0, [pc, #96]	; 16438 <rb_set_time+0xc4>
   163d4:	add	r0, pc, r0
   163d8:	bl	5428 <rb_lib_restart@plt>
   163dc:	ldr	r0, [pc, #72]	; 1642c <rb_set_time+0xb8>
   163e0:	add	r0, pc, r0
   163e4:	ldr	r1, [sp, #8]
   163e8:	ldr	r0, [r0]
   163ec:	cmp	r1, r0
   163f0:	bge	1640c <rb_set_time+0x98>
   163f4:	ldr	r0, [pc, #52]	; 16430 <rb_set_time+0xbc>
   163f8:	add	r0, pc, r0
   163fc:	ldr	r0, [r0]
   16400:	ldr	r1, [sp, #8]
   16404:	sub	r0, r0, r1
   16408:	bl	15bec <rb_set_back_events>
   1640c:	ldr	r0, [pc, #32]	; 16434 <rb_set_time+0xc0>
   16410:	add	r0, pc, r0
   16414:	ldr	r1, [sp, #8]
   16418:	str	r1, [r0]
   1641c:	ldr	r1, [sp, #12]
   16420:	str	r1, [r0, #4]
   16424:	mov	sp, fp
   16428:	pop	{fp, pc}
   1642c:	.word	0x00031fc4
   16430:	.word	0x00031fac
   16434:	.word	0x00031f94
   16438:	.word	0x0000d2ef
   1643c:	.word	0x0000d2f4

00016440 <rb_lib_version>:
   16440:	push	{r4, r5, fp, lr}
   16444:	add	fp, sp, #8
   16448:	sub	sp, sp, #528	; 0x210
   1644c:	add	r0, sp, #16
   16450:	movw	r1, #512	; 0x200
   16454:	bl	14330 <rb_get_ssl_info>
   16458:	ldr	r0, [pc, #76]	; 164ac <rb_lib_version+0x6c>
   1645c:	add	r0, pc, r0
   16460:	ldr	r1, [pc, #72]	; 164b0 <rb_lib_version+0x70>
   16464:	add	r2, pc, r1
   16468:	add	r1, sp, #16
   1646c:	ldr	lr, [pc, #64]	; 164b4 <rb_lib_version+0x74>
   16470:	ldr	lr, [pc, lr]
   16474:	ldr	r3, [lr]
   16478:	movw	lr, #640	; 0x280
   1647c:	str	r1, [sp, #12]
   16480:	mov	r1, lr
   16484:	ldr	lr, [sp, #12]
   16488:	str	lr, [sp]
   1648c:	bl	5584 <snprintf@plt>
   16490:	ldr	r1, [pc, #16]	; 164a8 <rb_lib_version+0x68>
   16494:	add	r1, pc, r1
   16498:	str	r0, [sp, #8]
   1649c:	mov	r0, r1
   164a0:	sub	sp, fp, #8
   164a4:	pop	{r4, r5, fp, pc}
   164a8:	.word	0x00032124
   164ac:	.word	0x0003215c
   164b0:	.word	0x0000d26d
   164b4:	.word	0x0001ef3c

000164b8 <rb_lib_init>:
   164b8:	push	{r4, sl, fp, lr}
   164bc:	add	fp, sp, #8
   164c0:	sub	sp, sp, #32
   164c4:	ldr	ip, [fp, #16]
   164c8:	ldr	lr, [fp, #12]
   164cc:	ldr	r4, [fp, #8]
   164d0:	str	r0, [fp, #-12]
   164d4:	str	r1, [fp, #-16]
   164d8:	str	r2, [sp, #20]
   164dc:	str	r3, [sp, #16]
   164e0:	str	r4, [sp, #12]
   164e4:	str	lr, [sp, #8]
   164e8:	str	ip, [sp, #4]
   164ec:	bl	535c <rb_set_time@plt>
   164f0:	ldr	r0, [pc, #100]	; 1655c <rb_lib_init+0xa4>
   164f4:	add	r0, pc, r0
   164f8:	ldr	r1, [pc, #96]	; 16560 <rb_lib_init+0xa8>
   164fc:	add	r1, pc, r1
   16500:	ldr	r2, [pc, #92]	; 16564 <rb_lib_init+0xac>
   16504:	add	r2, pc, r2
   16508:	ldr	r3, [fp, #-12]
   1650c:	str	r3, [r2]
   16510:	ldr	r2, [fp, #-16]
   16514:	str	r2, [r1]
   16518:	ldr	r1, [sp, #20]
   1651c:	str	r1, [r0]
   16520:	bl	4fcc <rb_event_init@plt>
   16524:	bl	53a4 <rb_init_bh@plt>
   16528:	ldr	r0, [sp, #16]
   1652c:	ldr	r1, [fp, #8]
   16530:	ldr	r2, [fp, #16]
   16534:	bl	54c4 <rb_fdlist_init@plt>
   16538:	bl	4d44 <rb_init_netio@plt>
   1653c:	ldr	r0, [fp, #12]
   16540:	bl	52a8 <rb_init_rb_dlink_nodes@plt>
   16544:	bl	1200c <rb_io_supports_event>
   16548:	cmp	r0, #0
   1654c:	beq	16554 <rb_lib_init+0x9c>
   16550:	bl	12064 <rb_io_init_event>
   16554:	sub	sp, fp, #8
   16558:	pop	{r4, sl, fp, pc}
   1655c:	.word	0x000320bc
   16560:	.word	0x000320b8
   16564:	.word	0x00031ea8

00016568 <rb_lib_loop>:
   16568:	push	{fp, lr}
   1656c:	mov	fp, sp
   16570:	sub	sp, sp, #24
   16574:	str	r0, [fp, #-4]
   16578:	bl	535c <rb_set_time@plt>
   1657c:	bl	1200c <rb_io_supports_event>
   16580:	cmp	r0, #0
   16584:	beq	1659c <rb_lib_loop+0x34>
   16588:	b	1658c <rb_lib_loop+0x24>
   1658c:	mvn	r0, #0
   16590:	bl	4f0c <rb_select@plt>
   16594:	str	r0, [sp, #12]
   16598:	b	1658c <rb_lib_loop+0x24>
   1659c:	b	165a0 <rb_lib_loop+0x38>
   165a0:	ldr	r0, [fp, #-4]
   165a4:	cmp	r0, #0
   165a8:	bne	16610 <rb_lib_loop+0xa8>
   165ac:	bl	5608 <rb_event_next@plt>
   165b0:	str	r0, [fp, #-8]
   165b4:	cmp	r0, #0
   165b8:	ble	165f8 <rb_lib_loop+0x90>
   165bc:	bl	51c4 <rb_current_time@plt>
   165c0:	ldr	lr, [fp, #-8]
   165c4:	sub	r0, lr, r0
   165c8:	str	r0, [fp, #-8]
   165cc:	ldr	r0, [fp, #-8]
   165d0:	cmp	r0, #0
   165d4:	bgt	165e4 <rb_lib_loop+0x7c>
   165d8:	movw	r0, #1000	; 0x3e8
   165dc:	str	r0, [fp, #-8]
   165e0:	b	165f4 <rb_lib_loop+0x8c>
   165e4:	ldr	r0, [fp, #-8]
   165e8:	movw	r1, #1000	; 0x3e8
   165ec:	mul	r0, r0, r1
   165f0:	str	r0, [fp, #-8]
   165f4:	b	16600 <rb_lib_loop+0x98>
   165f8:	mvn	r0, #0
   165fc:	str	r0, [fp, #-8]
   16600:	ldr	r0, [fp, #-8]
   16604:	bl	4f0c <rb_select@plt>
   16608:	str	r0, [sp, #8]
   1660c:	b	1661c <rb_lib_loop+0xb4>
   16610:	ldr	r0, [fp, #-4]
   16614:	bl	4f0c <rb_select@plt>
   16618:	str	r0, [sp, #4]
   1661c:	bl	538c <rb_event_run@plt>
   16620:	b	165a0 <rb_lib_loop+0x38>

00016624 <rb_strtok_r>:
   16624:	push	{fp, lr}
   16628:	mov	fp, sp
   1662c:	sub	sp, sp, #16
   16630:	str	r0, [fp, #-4]
   16634:	str	r1, [sp, #8]
   16638:	str	r2, [sp, #4]
   1663c:	ldr	r0, [fp, #-4]
   16640:	ldr	r1, [sp, #8]
   16644:	ldr	r2, [sp, #4]
   16648:	bl	541c <strtok_r@plt>
   1664c:	mov	sp, fp
   16650:	pop	{fp, pc}

00016654 <rb_base64_encode>:
   16654:	push	{fp, lr}
   16658:	mov	fp, sp
   1665c:	sub	sp, sp, #24
   16660:	str	r0, [fp, #-8]
   16664:	str	r1, [sp, #12]
   16668:	ldr	r0, [fp, #-8]
   1666c:	str	r0, [sp, #8]
   16670:	ldr	r0, [sp, #12]
   16674:	add	r0, r0, #2
   16678:	cmp	r0, #0
   1667c:	blt	16698 <rb_base64_encode+0x44>
   16680:	ldr	r0, [sp, #12]
   16684:	add	r0, r0, #2
   16688:	movw	r1, #3
   1668c:	sdiv	r0, r0, r1
   16690:	cmp	r0, #1073741824	; 0x40000000
   16694:	blt	166a4 <rb_base64_encode+0x50>
   16698:	movw	r0, #0
   1669c:	str	r0, [fp, #-4]
   166a0:	b	168e4 <rb_base64_encode+0x290>
   166a4:	ldr	r0, [sp, #12]
   166a8:	add	r0, r0, #2
   166ac:	movw	r1, #3
   166b0:	sdiv	r0, r0, r1
   166b4:	movw	r1, #5
   166b8:	mul	r0, r0, r1
   166bc:	bl	16900 <rb_malloc>
   166c0:	str	r0, [sp]
   166c4:	ldr	r0, [sp]
   166c8:	str	r0, [sp, #4]
   166cc:	ldr	r0, [sp, #12]
   166d0:	cmp	r0, #2
   166d4:	ble	167b4 <rb_base64_encode+0x160>
   166d8:	ldr	r0, [pc, #540]	; 168fc <rb_base64_encode+0x2a8>
   166dc:	add	r0, pc, r0
   166e0:	ldr	r1, [sp, #8]
   166e4:	ldrb	r1, [r1]
   166e8:	asr	r1, r1, #2
   166ec:	add	r1, r0, r1
   166f0:	ldrb	r1, [r1]
   166f4:	ldr	r2, [sp, #4]
   166f8:	add	r3, r2, #1
   166fc:	str	r3, [sp, #4]
   16700:	strb	r1, [r2]
   16704:	ldr	r1, [sp, #8]
   16708:	ldrb	r1, [r1]
   1670c:	and	r1, r1, #3
   16710:	lsl	r1, r1, #4
   16714:	ldr	r2, [sp, #8]
   16718:	ldrb	r2, [r2, #1]
   1671c:	asr	r2, r2, #4
   16720:	add	r1, r1, r2
   16724:	add	r1, r0, r1
   16728:	ldrb	r1, [r1]
   1672c:	ldr	r2, [sp, #4]
   16730:	add	r3, r2, #1
   16734:	str	r3, [sp, #4]
   16738:	strb	r1, [r2]
   1673c:	ldr	r1, [sp, #8]
   16740:	ldrb	r1, [r1, #1]
   16744:	and	r1, r1, #15
   16748:	lsl	r1, r1, #2
   1674c:	ldr	r2, [sp, #8]
   16750:	ldrb	r2, [r2, #2]
   16754:	asr	r2, r2, #6
   16758:	add	r1, r1, r2
   1675c:	add	r1, r0, r1
   16760:	ldrb	r1, [r1]
   16764:	ldr	r2, [sp, #4]
   16768:	add	r3, r2, #1
   1676c:	str	r3, [sp, #4]
   16770:	strb	r1, [r2]
   16774:	ldr	r1, [sp, #8]
   16778:	ldrb	r1, [r1, #2]
   1677c:	and	r1, r1, #63	; 0x3f
   16780:	add	r0, r0, r1
   16784:	ldrb	r0, [r0]
   16788:	ldr	r1, [sp, #4]
   1678c:	add	r2, r1, #1
   16790:	str	r2, [sp, #4]
   16794:	strb	r0, [r1]
   16798:	ldr	r0, [sp, #8]
   1679c:	add	r0, r0, #3
   167a0:	str	r0, [sp, #8]
   167a4:	ldr	r0, [sp, #12]
   167a8:	sub	r0, r0, #3
   167ac:	str	r0, [sp, #12]
   167b0:	b	166cc <rb_base64_encode+0x78>
   167b4:	ldr	r0, [sp, #12]
   167b8:	cmp	r0, #0
   167bc:	beq	168d0 <rb_base64_encode+0x27c>
   167c0:	ldr	r0, [pc, #296]	; 168f0 <rb_base64_encode+0x29c>
   167c4:	add	r0, pc, r0
   167c8:	ldr	r1, [sp, #8]
   167cc:	ldrb	r1, [r1]
   167d0:	asr	r1, r1, #2
   167d4:	add	r0, r0, r1
   167d8:	ldrb	r0, [r0]
   167dc:	ldr	r1, [sp, #4]
   167e0:	add	r2, r1, #1
   167e4:	str	r2, [sp, #4]
   167e8:	strb	r0, [r1]
   167ec:	ldr	r0, [sp, #12]
   167f0:	cmp	r0, #1
   167f4:	ble	16878 <rb_base64_encode+0x224>
   167f8:	ldr	r0, [pc, #248]	; 168f8 <rb_base64_encode+0x2a4>
   167fc:	add	r0, pc, r0
   16800:	ldr	r1, [sp, #8]
   16804:	ldrb	r1, [r1]
   16808:	and	r1, r1, #3
   1680c:	lsl	r1, r1, #4
   16810:	ldr	r2, [sp, #8]
   16814:	ldrb	r2, [r2, #1]
   16818:	asr	r2, r2, #4
   1681c:	add	r1, r1, r2
   16820:	add	r1, r0, r1
   16824:	ldrb	r1, [r1]
   16828:	ldr	r2, [sp, #4]
   1682c:	add	r3, r2, #1
   16830:	str	r3, [sp, #4]
   16834:	strb	r1, [r2]
   16838:	ldr	r1, [sp, #8]
   1683c:	ldrb	r1, [r1, #1]
   16840:	and	r1, r1, #15
   16844:	lsl	r1, r1, #2
   16848:	add	r0, r0, r1
   1684c:	ldrb	r0, [r0]
   16850:	ldr	r1, [sp, #4]
   16854:	add	r2, r1, #1
   16858:	str	r2, [sp, #4]
   1685c:	strb	r0, [r1]
   16860:	ldr	r0, [sp, #4]
   16864:	add	r1, r0, #1
   16868:	str	r1, [sp, #4]
   1686c:	movw	r1, #61	; 0x3d
   16870:	strb	r1, [r0]
   16874:	b	168cc <rb_base64_encode+0x278>
   16878:	ldr	r0, [pc, #116]	; 168f4 <rb_base64_encode+0x2a0>
   1687c:	add	r0, pc, r0
   16880:	ldr	r1, [sp, #8]
   16884:	ldrb	r1, [r1]
   16888:	and	r1, r1, #3
   1688c:	lsl	r1, r1, #4
   16890:	add	r0, r0, r1
   16894:	ldrb	r0, [r0]
   16898:	ldr	r1, [sp, #4]
   1689c:	add	r2, r1, #1
   168a0:	str	r2, [sp, #4]
   168a4:	strb	r0, [r1]
   168a8:	ldr	r0, [sp, #4]
   168ac:	add	r1, r0, #1
   168b0:	str	r1, [sp, #4]
   168b4:	movw	r1, #61	; 0x3d
   168b8:	strb	r1, [r0]
   168bc:	ldr	r0, [sp, #4]
   168c0:	add	r2, r0, #1
   168c4:	str	r2, [sp, #4]
   168c8:	strb	r1, [r0]
   168cc:	b	168d0 <rb_base64_encode+0x27c>
   168d0:	ldr	r0, [sp, #4]
   168d4:	movw	r1, #0
   168d8:	strb	r1, [r0]
   168dc:	ldr	r0, [sp]
   168e0:	str	r0, [fp, #-4]
   168e4:	ldr	r0, [fp, #-4]
   168e8:	mov	sp, fp
   168ec:	pop	{fp, pc}
   168f0:	.word	0x0000cffc
   168f4:	.word	0x0000cf44
   168f8:	.word	0x0000cfc4
   168fc:	.word	0x0000d0e4

00016900 <rb_malloc>:
   16900:	push	{fp, lr}
   16904:	mov	fp, sp
   16908:	sub	sp, sp, #8
   1690c:	str	r0, [sp, #4]
   16910:	ldr	r1, [sp, #4]
   16914:	movw	r0, #1
   16918:	bl	4fb4 <calloc@plt>
   1691c:	str	r0, [sp]
   16920:	ldr	r0, [sp]
   16924:	movw	r1, #0
   16928:	cmp	r0, r1
   1692c:	movw	r0, #0
   16930:	moveq	r0, #1
   16934:	mvn	r1, #0
   16938:	eor	r0, r0, r1
   1693c:	eor	r0, r0, r1
   16940:	tst	r0, #1
   16944:	beq	1694c <rb_malloc+0x4c>
   16948:	bl	5350 <rb_outofmemory@plt>
   1694c:	ldr	r0, [sp]
   16950:	mov	sp, fp
   16954:	pop	{fp, pc}

00016958 <rb_base64_decode>:
   16958:	push	{fp, lr}
   1695c:	mov	fp, sp
   16960:	sub	sp, sp, #56	; 0x38
   16964:	str	r0, [fp, #-8]
   16968:	str	r1, [fp, #-12]
   1696c:	str	r2, [fp, #-16]
   16970:	ldr	r0, [fp, #-8]
   16974:	str	r0, [fp, #-20]	; 0xffffffec
   16978:	movw	r0, #0
   1697c:	str	r0, [sp, #28]
   16980:	str	r0, [sp, #24]
   16984:	ldr	r0, [fp, #-12]
   16988:	add	r0, r0, #1
   1698c:	bl	16900 <rb_malloc>
   16990:	str	r0, [sp, #16]
   16994:	ldr	r0, [fp, #-20]	; 0xffffffec
   16998:	add	r1, r0, #1
   1699c:	str	r1, [fp, #-20]	; 0xffffffec
   169a0:	ldrb	r0, [r0]
   169a4:	str	r0, [fp, #-24]	; 0xffffffe8
   169a8:	cmp	r0, #0
   169ac:	movw	r0, #0
   169b0:	str	r0, [sp, #12]
   169b4:	beq	169d8 <rb_base64_decode+0x80>
   169b8:	ldr	r0, [fp, #-12]
   169bc:	mvn	r1, #0
   169c0:	add	r1, r0, r1
   169c4:	str	r1, [fp, #-12]
   169c8:	cmp	r0, #0
   169cc:	movw	r0, #0
   169d0:	movgt	r0, #1
   169d4:	str	r0, [sp, #12]
   169d8:	ldr	r0, [sp, #12]
   169dc:	tst	r0, #1
   169e0:	beq	16b48 <rb_base64_decode+0x1f0>
   169e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169e8:	cmp	r0, #61	; 0x3d
   169ec:	bne	169f4 <rb_base64_decode+0x9c>
   169f0:	b	16b48 <rb_base64_decode+0x1f0>
   169f4:	ldr	r0, [pc, #536]	; 16c14 <rb_base64_decode+0x2bc>
   169f8:	add	r0, pc, r0
   169fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a00:	ldr	r2, [pc, #528]	; 16c18 <rb_base64_decode+0x2c0>
   16a04:	add	r2, pc, r2
   16a08:	add	r1, r2, r1, lsl #1
   16a0c:	ldrsh	r1, [r1]
   16a10:	str	r1, [fp, #-24]	; 0xffffffe8
   16a14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a18:	cmp	r1, #0
   16a1c:	str	r0, [sp, #8]
   16a20:	bge	16a28 <rb_base64_decode+0xd0>
   16a24:	b	16994 <rb_base64_decode+0x3c>
   16a28:	ldr	r0, [sp, #28]
   16a2c:	asr	r1, r0, #31
   16a30:	add	r1, r0, r1, lsr #30
   16a34:	bic	r1, r1, #3
   16a38:	sub	r0, r0, r1
   16a3c:	cmp	r0, #3
   16a40:	str	r0, [sp, #4]
   16a44:	bhi	16b38 <rb_base64_decode+0x1e0>
   16a48:	add	r0, pc, #8
   16a4c:	ldr	r1, [sp, #4]
   16a50:	ldr	r2, [r0, r1, lsl #2]
   16a54:	add	pc, r0, r2
   16a58:	.word	0x00000010
   16a5c:	.word	0x0000002c
   16a60:	.word	0x00000074
   16a64:	.word	0x000000bc
   16a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a6c:	lsl	r0, r0, #2
   16a70:	ldr	r1, [sp, #16]
   16a74:	ldr	r2, [sp, #24]
   16a78:	add	r1, r1, r2
   16a7c:	strb	r0, [r1]
   16a80:	b	16b38 <rb_base64_decode+0x1e0>
   16a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a88:	asr	r0, r0, #4
   16a8c:	ldr	r1, [sp, #16]
   16a90:	ldr	r2, [sp, #24]
   16a94:	add	r3, r2, #1
   16a98:	str	r3, [sp, #24]
   16a9c:	add	r1, r1, r2
   16aa0:	ldrb	r2, [r1]
   16aa4:	orr	r0, r2, r0
   16aa8:	strb	r0, [r1]
   16aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab0:	and	r0, r0, #15
   16ab4:	lsl	r0, r0, #4
   16ab8:	ldr	r1, [sp, #16]
   16abc:	ldr	r2, [sp, #24]
   16ac0:	add	r1, r1, r2
   16ac4:	strb	r0, [r1]
   16ac8:	b	16b38 <rb_base64_decode+0x1e0>
   16acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad0:	asr	r0, r0, #2
   16ad4:	ldr	r1, [sp, #16]
   16ad8:	ldr	r2, [sp, #24]
   16adc:	add	r3, r2, #1
   16ae0:	str	r3, [sp, #24]
   16ae4:	add	r1, r1, r2
   16ae8:	ldrb	r2, [r1]
   16aec:	orr	r0, r2, r0
   16af0:	strb	r0, [r1]
   16af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af8:	and	r0, r0, #3
   16afc:	lsl	r0, r0, #6
   16b00:	ldr	r1, [sp, #16]
   16b04:	ldr	r2, [sp, #24]
   16b08:	add	r1, r1, r2
   16b0c:	strb	r0, [r1]
   16b10:	b	16b38 <rb_base64_decode+0x1e0>
   16b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b18:	ldr	r1, [sp, #16]
   16b1c:	ldr	r2, [sp, #24]
   16b20:	add	r3, r2, #1
   16b24:	str	r3, [sp, #24]
   16b28:	add	r1, r1, r2
   16b2c:	ldrb	r2, [r1]
   16b30:	orr	r0, r2, r0
   16b34:	strb	r0, [r1]
   16b38:	ldr	r0, [sp, #28]
   16b3c:	add	r0, r0, #1
   16b40:	str	r0, [sp, #28]
   16b44:	b	16994 <rb_base64_decode+0x3c>
   16b48:	ldr	r0, [sp, #24]
   16b4c:	str	r0, [sp, #20]
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	cmp	r0, #61	; 0x3d
   16b58:	bne	16be0 <rb_base64_decode+0x288>
   16b5c:	ldr	r0, [sp, #28]
   16b60:	asr	r1, r0, #31
   16b64:	add	r1, r0, r1, lsr #30
   16b68:	bic	r1, r1, #3
   16b6c:	sub	r0, r0, r1
   16b70:	cmp	r0, #1
   16b74:	str	r0, [sp]
   16b78:	beq	16ba0 <rb_base64_decode+0x248>
   16b7c:	b	16b80 <rb_base64_decode+0x228>
   16b80:	ldr	r0, [sp]
   16b84:	cmp	r0, #2
   16b88:	beq	16bb4 <rb_base64_decode+0x25c>
   16b8c:	b	16b90 <rb_base64_decode+0x238>
   16b90:	ldr	r0, [sp]
   16b94:	cmp	r0, #3
   16b98:	beq	16bc0 <rb_base64_decode+0x268>
   16b9c:	b	16bdc <rb_base64_decode+0x284>
   16ba0:	ldr	r0, [sp, #16]
   16ba4:	bl	50c8 <free@plt>
   16ba8:	movw	r0, #0
   16bac:	str	r0, [fp, #-4]
   16bb0:	b	16c08 <rb_base64_decode+0x2b0>
   16bb4:	ldr	r0, [sp, #20]
   16bb8:	add	r0, r0, #1
   16bbc:	str	r0, [sp, #20]
   16bc0:	ldr	r0, [sp, #16]
   16bc4:	ldr	r1, [sp, #20]
   16bc8:	add	r2, r1, #1
   16bcc:	str	r2, [sp, #20]
   16bd0:	add	r0, r0, r1
   16bd4:	movw	r1, #0
   16bd8:	strb	r1, [r0]
   16bdc:	b	16be0 <rb_base64_decode+0x288>
   16be0:	ldr	r0, [sp, #16]
   16be4:	ldr	r1, [sp, #24]
   16be8:	add	r0, r0, r1
   16bec:	movw	r1, #0
   16bf0:	strb	r1, [r0]
   16bf4:	ldr	r0, [sp, #24]
   16bf8:	ldr	r1, [fp, #-16]
   16bfc:	str	r0, [r1]
   16c00:	ldr	r0, [sp, #16]
   16c04:	str	r0, [fp, #-4]
   16c08:	ldr	r0, [fp, #-4]
   16c0c:	mov	sp, fp
   16c10:	pop	{fp, pc}
   16c14:	.word	0x0000ce0a
   16c18:	.word	0x0000cdfe

00016c1c <rb_outofmemory>:
   16c1c:	push	{fp, lr}
   16c20:	mov	fp, sp
   16c24:	ldr	r0, [pc, #56]	; 16c64 <rb_outofmemory+0x48>
   16c28:	add	r0, pc, r0
   16c2c:	ldr	r0, [r0]
   16c30:	cmp	r0, #0
   16c34:	beq	16c3c <rb_outofmemory+0x20>
   16c38:	bl	4d80 <abort@plt>
   16c3c:	ldr	r0, [pc, #40]	; 16c6c <rb_outofmemory+0x50>
   16c40:	add	r0, pc, r0
   16c44:	ldr	r1, [pc, #36]	; 16c70 <rb_outofmemory+0x54>
   16c48:	add	r1, pc, r1
   16c4c:	movw	r2, #1
   16c50:	str	r2, [r1]
   16c54:	bl	52e4 <rb_lib_log@plt>
   16c58:	ldr	r0, [pc, #8]	; 16c68 <rb_outofmemory+0x4c>
   16c5c:	add	r0, pc, r0
   16c60:	bl	5428 <rb_lib_restart@plt>
   16c64:	.word	0x00031c10
   16c68:	.word	0x0000cdca
   16c6c:	.word	0x0000cdc2
   16c70:	.word	0x00031bf0

00016c74 <rb_linebuf_init>:
   16c74:	push	{fp, lr}
   16c78:	mov	fp, sp
   16c7c:	sub	sp, sp, #8
   16c80:	ldr	r1, [pc, #40]	; 16cb0 <rb_linebuf_init+0x3c>
   16c84:	add	r2, pc, r1
   16c88:	str	r0, [sp, #4]
   16c8c:	ldr	r1, [sp, #4]
   16c90:	movw	r0, #1036	; 0x40c
   16c94:	bl	547c <rb_bh_create@plt>
   16c98:	ldr	r1, [pc, #12]	; 16cac <rb_linebuf_init+0x38>
   16c9c:	add	r1, pc, r1
   16ca0:	str	r0, [r1]
   16ca4:	mov	sp, fp
   16ca8:	pop	{fp, pc}
   16cac:	.word	0x00031ba0
   16cb0:	.word	0x0000cdb0

00016cb4 <rb_linebuf_newbuf>:
   16cb4:	push	{fp, lr}
   16cb8:	mov	fp, sp
   16cbc:	sub	sp, sp, #8
   16cc0:	str	r0, [sp, #4]
   16cc4:	ldr	r0, [sp, #4]
   16cc8:	movw	r1, #0
   16ccc:	and	r1, r1, #255	; 0xff
   16cd0:	movw	r2, #28
   16cd4:	bl	4ff0 <memset@plt>
   16cd8:	mov	sp, fp
   16cdc:	pop	{fp, pc}

00016ce0 <rb_linebuf_donebuf>:
   16ce0:	push	{fp, lr}
   16ce4:	mov	fp, sp
   16ce8:	sub	sp, sp, #8
   16cec:	str	r0, [sp, #4]
   16cf0:	ldr	r0, [sp, #4]
   16cf4:	ldr	r0, [r0]
   16cf8:	movw	r1, #0
   16cfc:	cmp	r0, r1
   16d00:	beq	16d24 <rb_linebuf_donebuf+0x44>
   16d04:	ldr	r0, [sp, #4]
   16d08:	ldr	r1, [sp, #4]
   16d0c:	ldr	r1, [r1]
   16d10:	ldr	r1, [r1]
   16d14:	ldr	r2, [sp, #4]
   16d18:	ldr	r2, [r2]
   16d1c:	bl	16d2c <rb_linebuf_done_line>
   16d20:	b	16cf0 <rb_linebuf_donebuf+0x10>
   16d24:	mov	sp, fp
   16d28:	pop	{fp, pc}

00016d2c <rb_linebuf_done_line>:
   16d2c:	push	{fp, lr}
   16d30:	mov	fp, sp
   16d34:	sub	sp, sp, #16
   16d38:	str	r0, [fp, #-4]
   16d3c:	str	r1, [sp, #8]
   16d40:	str	r2, [sp, #4]
   16d44:	ldr	r0, [sp, #4]
   16d48:	ldr	r1, [fp, #-4]
   16d4c:	bl	17e60 <rb_dlinkDelete>
   16d50:	ldr	r0, [sp, #4]
   16d54:	bl	520c <rb_free_rb_dlink_node@plt>
   16d58:	ldr	r0, [fp, #-4]
   16d5c:	ldr	r1, [r0, #16]
   16d60:	mvn	r2, #0
   16d64:	add	r1, r1, r2
   16d68:	str	r1, [r0, #16]
   16d6c:	ldr	r0, [sp, #8]
   16d70:	ldr	r0, [r0, #1028]	; 0x404
   16d74:	ldr	r1, [fp, #-4]
   16d78:	ldr	r3, [r1, #12]
   16d7c:	sub	r0, r3, r0
   16d80:	str	r0, [r1, #12]
   16d84:	ldr	r0, [fp, #-4]
   16d88:	ldr	r1, [r0, #24]
   16d8c:	add	r1, r1, r2
   16d90:	str	r1, [r0, #24]
   16d94:	ldr	r0, [sp, #8]
   16d98:	ldr	r1, [r0, #1032]	; 0x408
   16d9c:	add	r1, r1, r2
   16da0:	str	r1, [r0, #1032]	; 0x408
   16da4:	ldr	r0, [sp, #8]
   16da8:	ldr	r0, [r0, #1032]	; 0x408
   16dac:	cmp	r0, #0
   16db0:	bne	16dd4 <rb_linebuf_done_line+0xa8>
   16db4:	ldr	r0, [pc, #32]	; 16ddc <rb_linebuf_done_line+0xb0>
   16db8:	add	r0, pc, r0
   16dbc:	ldr	r1, [r0]
   16dc0:	mvn	r2, #0
   16dc4:	add	r1, r1, r2
   16dc8:	str	r1, [r0]
   16dcc:	ldr	r0, [sp, #8]
   16dd0:	bl	17f14 <rb_linebuf_free>
   16dd4:	mov	sp, fp
   16dd8:	pop	{fp, pc}
   16ddc:	.word	0x00033a88

00016de0 <rb_linebuf_parse>:
   16de0:	push	{fp, lr}
   16de4:	mov	fp, sp
   16de8:	sub	sp, sp, #32
   16dec:	str	r0, [fp, #-8]
   16df0:	str	r1, [fp, #-12]
   16df4:	str	r2, [sp, #16]
   16df8:	str	r3, [sp, #12]
   16dfc:	movw	r0, #0
   16e00:	str	r0, [sp]
   16e04:	ldr	r1, [fp, #-8]
   16e08:	ldr	r1, [r1, #4]
   16e0c:	cmp	r1, r0
   16e10:	beq	16ec4 <rb_linebuf_parse+0xe4>
   16e14:	ldr	r0, [fp, #-8]
   16e18:	ldr	r0, [r0, #4]
   16e1c:	ldr	r0, [r0]
   16e20:	str	r0, [sp, #8]
   16e24:	ldr	r0, [sp, #12]
   16e28:	cmp	r0, #0
   16e2c:	bne	16e4c <rb_linebuf_parse+0x6c>
   16e30:	ldr	r0, [fp, #-8]
   16e34:	ldr	r1, [sp, #8]
   16e38:	ldr	r2, [fp, #-12]
   16e3c:	ldr	r3, [sp, #16]
   16e40:	bl	16f7c <rb_linebuf_copy_line>
   16e44:	str	r0, [sp, #4]
   16e48:	b	16e64 <rb_linebuf_parse+0x84>
   16e4c:	ldr	r0, [fp, #-8]
   16e50:	ldr	r1, [sp, #8]
   16e54:	ldr	r2, [fp, #-12]
   16e58:	ldr	r3, [sp, #16]
   16e5c:	bl	172a8 <rb_linebuf_copy_raw>
   16e60:	str	r0, [sp, #4]
   16e64:	ldr	r0, [sp, #4]
   16e68:	cmn	r0, #1
   16e6c:	bne	16e7c <rb_linebuf_parse+0x9c>
   16e70:	mvn	r0, #0
   16e74:	str	r0, [fp, #-4]
   16e78:	b	16f70 <rb_linebuf_parse+0x190>
   16e7c:	ldr	r0, [sp]
   16e80:	add	r0, r0, #1
   16e84:	str	r0, [sp]
   16e88:	ldr	r0, [sp, #4]
   16e8c:	ldr	r1, [sp, #16]
   16e90:	cmp	r0, r1
   16e94:	bne	16ea4 <rb_linebuf_parse+0xc4>
   16e98:	ldr	r0, [sp]
   16e9c:	str	r0, [fp, #-4]
   16ea0:	b	16f70 <rb_linebuf_parse+0x190>
   16ea4:	ldr	r0, [sp, #4]
   16ea8:	ldr	r1, [sp, #16]
   16eac:	sub	r0, r1, r0
   16eb0:	str	r0, [sp, #16]
   16eb4:	ldr	r0, [sp, #4]
   16eb8:	ldr	r1, [fp, #-12]
   16ebc:	add	r0, r1, r0
   16ec0:	str	r0, [fp, #-12]
   16ec4:	b	16ec8 <rb_linebuf_parse+0xe8>
   16ec8:	ldr	r0, [sp, #16]
   16ecc:	cmp	r0, #0
   16ed0:	ble	16f68 <rb_linebuf_parse+0x188>
   16ed4:	ldr	r0, [fp, #-8]
   16ed8:	bl	174b0 <rb_linebuf_new_line>
   16edc:	str	r0, [sp, #8]
   16ee0:	ldr	r0, [sp, #12]
   16ee4:	cmp	r0, #0
   16ee8:	bne	16f08 <rb_linebuf_parse+0x128>
   16eec:	ldr	r0, [fp, #-8]
   16ef0:	ldr	r1, [sp, #8]
   16ef4:	ldr	r2, [fp, #-12]
   16ef8:	ldr	r3, [sp, #16]
   16efc:	bl	16f7c <rb_linebuf_copy_line>
   16f00:	str	r0, [sp, #4]
   16f04:	b	16f20 <rb_linebuf_parse+0x140>
   16f08:	ldr	r0, [fp, #-8]
   16f0c:	ldr	r1, [sp, #8]
   16f10:	ldr	r2, [fp, #-12]
   16f14:	ldr	r3, [sp, #16]
   16f18:	bl	172a8 <rb_linebuf_copy_raw>
   16f1c:	str	r0, [sp, #4]
   16f20:	ldr	r0, [sp, #4]
   16f24:	cmn	r0, #1
   16f28:	bne	16f38 <rb_linebuf_parse+0x158>
   16f2c:	mvn	r0, #0
   16f30:	str	r0, [fp, #-4]
   16f34:	b	16f70 <rb_linebuf_parse+0x190>
   16f38:	ldr	r0, [sp, #4]
   16f3c:	ldr	r1, [sp, #16]
   16f40:	sub	r0, r1, r0
   16f44:	str	r0, [sp, #16]
   16f48:	ldr	r0, [sp, #4]
   16f4c:	ldr	r1, [fp, #-12]
   16f50:	add	r0, r1, r0
   16f54:	str	r0, [fp, #-12]
   16f58:	ldr	r0, [sp]
   16f5c:	add	r0, r0, #1
   16f60:	str	r0, [sp]
   16f64:	b	16ec8 <rb_linebuf_parse+0xe8>
   16f68:	ldr	r0, [sp]
   16f6c:	str	r0, [fp, #-4]
   16f70:	ldr	r0, [fp, #-4]
   16f74:	mov	sp, fp
   16f78:	pop	{fp, pc}

00016f7c <rb_linebuf_copy_line>:
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	sub	sp, sp, #56	; 0x38
   16f88:	str	r0, [fp, #-8]
   16f8c:	str	r1, [fp, #-12]
   16f90:	str	r2, [fp, #-16]
   16f94:	str	r3, [fp, #-20]	; 0xffffffec
   16f98:	movw	r0, #0
   16f9c:	str	r0, [fp, #-24]	; 0xffffffe8
   16fa0:	ldr	r1, [fp, #-16]
   16fa4:	str	r1, [sp, #28]
   16fa8:	ldr	r1, [fp, #-12]
   16fac:	ldr	r2, [fp, #-12]
   16fb0:	ldr	r2, [r2, #1028]	; 0x404
   16fb4:	add	r1, r1, r2
   16fb8:	str	r1, [sp, #24]
   16fbc:	str	r0, [sp, #20]
   16fc0:	ldr	r0, [fp, #-12]
   16fc4:	movw	r1, #0
   16fc8:	strb	r1, [r0, #1026]	; 0x402
   16fcc:	ldr	r0, [fp, #-12]
   16fd0:	ldrb	r0, [r0, #1025]	; 0x401
   16fd4:	cmp	r0, #1
   16fd8:	bne	16fe8 <rb_linebuf_copy_line+0x6c>
   16fdc:	movw	r0, #0
   16fe0:	str	r0, [fp, #-4]
   16fe4:	b	1729c <rb_linebuf_copy_line+0x320>
   16fe8:	ldr	r0, [sp, #28]
   16fec:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ff0:	bl	17f48 <rb_linebuf_skip_crlf>
   16ff4:	str	r0, [fp, #-24]	; 0xffffffe8
   16ff8:	str	r0, [sp, #20]
   16ffc:	ldr	r0, [sp, #20]
   17000:	cmn	r0, #1
   17004:	bne	17014 <rb_linebuf_copy_line+0x98>
   17008:	mvn	r0, #0
   1700c:	str	r0, [fp, #-4]
   17010:	b	1729c <rb_linebuf_copy_line+0x320>
   17014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17018:	ldr	r1, [fp, #-12]
   1701c:	ldr	r1, [r1, #1028]	; 0x404
   17020:	movw	r2, #1022	; 0x3fe
   17024:	sub	r1, r2, r1
   17028:	cmp	r0, r1
   1702c:	ble	1713c <rb_linebuf_copy_line+0x1c0>
   17030:	ldr	r0, [fp, #-12]
   17034:	ldr	r0, [r0, #1028]	; 0x404
   17038:	movw	r1, #1022	; 0x3fe
   1703c:	sub	r0, r1, r0
   17040:	str	r0, [fp, #-24]	; 0xffffffe8
   17044:	ldr	r0, [sp, #24]
   17048:	ldr	r2, [sp, #28]
   1704c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17050:	str	r1, [sp, #16]
   17054:	mov	r1, r2
   17058:	mov	r2, r3
   1705c:	bl	51dc <memcpy@plt>
   17060:	ldr	r0, [fp, #-12]
   17064:	movw	r1, #0
   17068:	strb	r1, [r0, #1022]	; 0x3fe
   1706c:	ldr	r0, [fp, #-12]
   17070:	ldr	r1, [sp, #16]
   17074:	add	r0, r0, r1
   17078:	mvn	r2, #0
   1707c:	add	r0, r0, r2
   17080:	str	r0, [sp, #24]
   17084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17088:	cmp	r0, #0
   1708c:	movw	r0, #0
   17090:	str	r0, [sp, #12]
   17094:	beq	170d0 <rb_linebuf_copy_line+0x154>
   17098:	ldr	r0, [sp, #24]
   1709c:	ldrb	r0, [r0]
   170a0:	cmp	r0, #13
   170a4:	movw	r0, #1
   170a8:	str	r0, [sp, #8]
   170ac:	beq	170c8 <rb_linebuf_copy_line+0x14c>
   170b0:	ldr	r0, [sp, #24]
   170b4:	ldrb	r0, [r0]
   170b8:	cmp	r0, #10
   170bc:	movw	r0, #0
   170c0:	moveq	r0, #1
   170c4:	str	r0, [sp, #8]
   170c8:	ldr	r0, [sp, #8]
   170cc:	str	r0, [sp, #12]
   170d0:	ldr	r0, [sp, #12]
   170d4:	tst	r0, #1
   170d8:	beq	17108 <rb_linebuf_copy_line+0x18c>
   170dc:	ldr	r0, [sp, #24]
   170e0:	movw	r1, #0
   170e4:	strb	r1, [r0]
   170e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170ec:	mvn	r1, #0
   170f0:	add	r0, r0, r1
   170f4:	str	r0, [fp, #-24]	; 0xffffffe8
   170f8:	ldr	r0, [sp, #24]
   170fc:	add	r0, r0, r1
   17100:	str	r0, [sp, #24]
   17104:	b	17084 <rb_linebuf_copy_line+0x108>
   17108:	ldr	r0, [fp, #-12]
   1710c:	movw	r1, #1
   17110:	strb	r1, [r0, #1025]	; 0x401
   17114:	ldr	r0, [fp, #-12]
   17118:	movw	r1, #1022	; 0x3fe
   1711c:	str	r1, [r0, #1028]	; 0x404
   17120:	ldr	r0, [fp, #-8]
   17124:	ldr	r2, [r0, #12]
   17128:	add	r1, r2, r1
   1712c:	str	r1, [r0, #12]
   17130:	ldr	r0, [sp, #20]
   17134:	str	r0, [fp, #-4]
   17138:	b	1729c <rb_linebuf_copy_line+0x320>
   1713c:	ldr	r0, [sp, #24]
   17140:	ldr	r1, [sp, #28]
   17144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17148:	bl	51dc <memcpy@plt>
   1714c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17150:	ldr	r1, [sp, #24]
   17154:	add	r0, r1, r0
   17158:	str	r0, [sp, #24]
   1715c:	ldr	r0, [sp, #24]
   17160:	movw	r1, #0
   17164:	strb	r1, [r0]
   17168:	ldr	r0, [sp, #24]
   1716c:	mvn	r1, #0
   17170:	add	r0, r0, r1
   17174:	str	r0, [sp, #24]
   17178:	ldr	r0, [sp, #24]
   1717c:	ldrb	r0, [r0]
   17180:	cmp	r0, #13
   17184:	beq	171d8 <rb_linebuf_copy_line+0x25c>
   17188:	ldr	r0, [sp, #24]
   1718c:	ldrb	r0, [r0]
   17190:	cmp	r0, #10
   17194:	beq	171d8 <rb_linebuf_copy_line+0x25c>
   17198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1719c:	ldr	r1, [fp, #-8]
   171a0:	ldr	r2, [r1, #12]
   171a4:	add	r0, r2, r0
   171a8:	str	r0, [r1, #12]
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	ldr	r1, [fp, #-12]
   171b4:	ldr	r2, [r1, #1028]	; 0x404
   171b8:	add	r0, r2, r0
   171bc:	str	r0, [r1, #1028]	; 0x404
   171c0:	ldr	r0, [fp, #-12]
   171c4:	movw	r1, #0
   171c8:	strb	r1, [r0, #1025]	; 0x401
   171cc:	ldr	r0, [sp, #20]
   171d0:	str	r0, [fp, #-4]
   171d4:	b	1729c <rb_linebuf_copy_line+0x320>
   171d8:	b	171dc <rb_linebuf_copy_line+0x260>
   171dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e0:	cmp	r0, #0
   171e4:	movw	r0, #0
   171e8:	str	r0, [sp, #4]
   171ec:	beq	17228 <rb_linebuf_copy_line+0x2ac>
   171f0:	ldr	r0, [sp, #24]
   171f4:	ldrb	r0, [r0]
   171f8:	cmp	r0, #13
   171fc:	movw	r0, #1
   17200:	str	r0, [sp]
   17204:	beq	17220 <rb_linebuf_copy_line+0x2a4>
   17208:	ldr	r0, [sp, #24]
   1720c:	ldrb	r0, [r0]
   17210:	cmp	r0, #10
   17214:	movw	r0, #0
   17218:	moveq	r0, #1
   1721c:	str	r0, [sp]
   17220:	ldr	r0, [sp]
   17224:	str	r0, [sp, #4]
   17228:	ldr	r0, [sp, #4]
   1722c:	tst	r0, #1
   17230:	beq	17260 <rb_linebuf_copy_line+0x2e4>
   17234:	ldr	r0, [sp, #24]
   17238:	movw	r1, #0
   1723c:	strb	r1, [r0]
   17240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17244:	mvn	r1, #0
   17248:	add	r0, r0, r1
   1724c:	str	r0, [fp, #-24]	; 0xffffffe8
   17250:	ldr	r0, [sp, #24]
   17254:	add	r0, r0, r1
   17258:	str	r0, [sp, #24]
   1725c:	b	171dc <rb_linebuf_copy_line+0x260>
   17260:	ldr	r0, [fp, #-12]
   17264:	movw	r1, #1
   17268:	strb	r1, [r0, #1025]	; 0x401
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	ldr	r1, [fp, #-8]
   17274:	ldr	r2, [r1, #12]
   17278:	add	r0, r2, r0
   1727c:	str	r0, [r1, #12]
   17280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17284:	ldr	r1, [fp, #-12]
   17288:	ldr	r2, [r1, #1028]	; 0x404
   1728c:	add	r0, r2, r0
   17290:	str	r0, [r1, #1028]	; 0x404
   17294:	ldr	r0, [sp, #20]
   17298:	str	r0, [fp, #-4]
   1729c:	ldr	r0, [fp, #-4]
   172a0:	mov	sp, fp
   172a4:	pop	{fp, pc}

000172a8 <rb_linebuf_copy_raw>:
   172a8:	push	{fp, lr}
   172ac:	mov	fp, sp
   172b0:	sub	sp, sp, #40	; 0x28
   172b4:	str	r0, [fp, #-8]
   172b8:	str	r1, [fp, #-12]
   172bc:	str	r2, [fp, #-16]
   172c0:	str	r3, [sp, #20]
   172c4:	movw	r0, #0
   172c8:	str	r0, [sp, #16]
   172cc:	ldr	r1, [fp, #-16]
   172d0:	str	r1, [sp, #12]
   172d4:	ldr	r1, [fp, #-12]
   172d8:	ldr	r2, [fp, #-12]
   172dc:	ldr	r2, [r2, #1028]	; 0x404
   172e0:	add	r1, r1, r2
   172e4:	str	r1, [sp, #8]
   172e8:	str	r0, [sp, #4]
   172ec:	ldr	r0, [fp, #-12]
   172f0:	movw	r1, #1
   172f4:	strb	r1, [r0, #1026]	; 0x402
   172f8:	ldr	r0, [fp, #-12]
   172fc:	ldrb	r0, [r0, #1025]	; 0x401
   17300:	cmp	r0, #1
   17304:	bne	17314 <rb_linebuf_copy_raw+0x6c>
   17308:	movw	r0, #0
   1730c:	str	r0, [fp, #-4]
   17310:	b	174a4 <rb_linebuf_copy_raw+0x1fc>
   17314:	ldr	r0, [sp, #12]
   17318:	ldr	r1, [sp, #20]
   1731c:	bl	17f48 <rb_linebuf_skip_crlf>
   17320:	str	r0, [sp, #16]
   17324:	str	r0, [sp, #4]
   17328:	ldr	r0, [sp, #4]
   1732c:	cmn	r0, #1
   17330:	bne	17340 <rb_linebuf_copy_raw+0x98>
   17334:	mvn	r0, #0
   17338:	str	r0, [fp, #-4]
   1733c:	b	174a4 <rb_linebuf_copy_raw+0x1fc>
   17340:	ldr	r0, [sp, #16]
   17344:	ldr	r1, [fp, #-12]
   17348:	ldr	r1, [r1, #1028]	; 0x404
   1734c:	movw	r2, #1022	; 0x3fe
   17350:	sub	r1, r2, r1
   17354:	cmp	r0, r1
   17358:	ble	173cc <rb_linebuf_copy_raw+0x124>
   1735c:	ldr	r0, [fp, #-12]
   17360:	ldr	r0, [r0, #1028]	; 0x404
   17364:	movw	r1, #1022	; 0x3fe
   17368:	sub	r0, r1, r0
   1736c:	str	r0, [sp, #4]
   17370:	ldr	r0, [sp, #8]
   17374:	ldr	r2, [sp, #12]
   17378:	ldr	r3, [sp, #4]
   1737c:	str	r1, [sp]
   17380:	mov	r1, r2
   17384:	mov	r2, r3
   17388:	bl	51dc <memcpy@plt>
   1738c:	ldr	r0, [fp, #-12]
   17390:	movw	r1, #0
   17394:	strb	r1, [r0, #1022]	; 0x3fe
   17398:	ldr	r0, [fp, #-12]
   1739c:	movw	r1, #1
   173a0:	strb	r1, [r0, #1025]	; 0x401
   173a4:	ldr	r0, [fp, #-12]
   173a8:	ldr	r1, [sp]
   173ac:	str	r1, [r0, #1028]	; 0x404
   173b0:	ldr	r0, [fp, #-8]
   173b4:	ldr	r2, [r0, #12]
   173b8:	add	r2, r2, r1
   173bc:	str	r2, [r0, #12]
   173c0:	ldr	r0, [sp, #4]
   173c4:	str	r0, [fp, #-4]
   173c8:	b	174a4 <rb_linebuf_copy_raw+0x1fc>
   173cc:	ldr	r0, [sp, #8]
   173d0:	ldr	r1, [sp, #12]
   173d4:	ldr	r2, [sp, #16]
   173d8:	bl	51dc <memcpy@plt>
   173dc:	ldr	r0, [sp, #16]
   173e0:	ldr	r1, [sp, #8]
   173e4:	add	r0, r1, r0
   173e8:	str	r0, [sp, #8]
   173ec:	ldr	r0, [sp, #8]
   173f0:	movw	r1, #0
   173f4:	strb	r1, [r0]
   173f8:	ldr	r0, [sp, #8]
   173fc:	mvn	r1, #0
   17400:	add	r0, r0, r1
   17404:	str	r0, [sp, #8]
   17408:	ldr	r0, [sp, #8]
   1740c:	ldrb	r0, [r0]
   17410:	cmp	r0, #13
   17414:	beq	17468 <rb_linebuf_copy_raw+0x1c0>
   17418:	ldr	r0, [sp, #8]
   1741c:	ldrb	r0, [r0]
   17420:	cmp	r0, #10
   17424:	beq	17468 <rb_linebuf_copy_raw+0x1c0>
   17428:	ldr	r0, [sp, #16]
   1742c:	ldr	r1, [fp, #-8]
   17430:	ldr	r2, [r1, #12]
   17434:	add	r0, r2, r0
   17438:	str	r0, [r1, #12]
   1743c:	ldr	r0, [sp, #16]
   17440:	ldr	r1, [fp, #-12]
   17444:	ldr	r2, [r1, #1028]	; 0x404
   17448:	add	r0, r2, r0
   1744c:	str	r0, [r1, #1028]	; 0x404
   17450:	ldr	r0, [fp, #-12]
   17454:	movw	r1, #0
   17458:	strb	r1, [r0, #1025]	; 0x401
   1745c:	ldr	r0, [sp, #4]
   17460:	str	r0, [fp, #-4]
   17464:	b	174a4 <rb_linebuf_copy_raw+0x1fc>
   17468:	ldr	r0, [fp, #-12]
   1746c:	movw	r1, #1
   17470:	strb	r1, [r0, #1025]	; 0x401
   17474:	ldr	r0, [sp, #16]
   17478:	ldr	r1, [fp, #-8]
   1747c:	ldr	r2, [r1, #12]
   17480:	add	r0, r2, r0
   17484:	str	r0, [r1, #12]
   17488:	ldr	r0, [sp, #16]
   1748c:	ldr	r1, [fp, #-12]
   17490:	ldr	r2, [r1, #1028]	; 0x404
   17494:	add	r0, r2, r0
   17498:	str	r0, [r1, #1028]	; 0x404
   1749c:	ldr	r0, [sp, #4]
   174a0:	str	r0, [fp, #-4]
   174a4:	ldr	r0, [fp, #-4]
   174a8:	mov	sp, fp
   174ac:	pop	{fp, pc}

000174b0 <rb_linebuf_new_line>:
   174b0:	push	{fp, lr}
   174b4:	mov	fp, sp
   174b8:	sub	sp, sp, #24
   174bc:	str	r0, [fp, #-8]
   174c0:	bl	18024 <rb_linebuf_allocate>
   174c4:	str	r0, [sp, #12]
   174c8:	ldr	r0, [sp, #12]
   174cc:	movw	lr, #0
   174d0:	cmp	r0, lr
   174d4:	bne	174e4 <rb_linebuf_new_line+0x34>
   174d8:	movw	r0, #0
   174dc:	str	r0, [fp, #-4]
   174e0:	b	17554 <rb_linebuf_new_line+0xa4>
   174e4:	ldr	r0, [pc, #116]	; 17560 <rb_linebuf_new_line+0xb0>
   174e8:	add	r0, pc, r0
   174ec:	ldr	r1, [r0]
   174f0:	add	r1, r1, #1
   174f4:	str	r1, [r0]
   174f8:	ldr	r0, [sp, #12]
   174fc:	str	r0, [sp, #8]
   17500:	bl	5554 <rb_make_rb_dlink_node@plt>
   17504:	ldr	r2, [fp, #-8]
   17508:	ldr	r1, [sp, #8]
   1750c:	str	r0, [sp, #4]
   17510:	mov	r0, r1
   17514:	ldr	r1, [sp, #4]
   17518:	bl	17858 <rb_dlinkAddTail>
   1751c:	ldr	r0, [sp, #12]
   17520:	ldr	r1, [r0, #1032]	; 0x408
   17524:	add	r1, r1, #1
   17528:	str	r1, [r0, #1032]	; 0x408
   1752c:	ldr	r0, [fp, #-8]
   17530:	ldr	r1, [r0, #16]
   17534:	add	r1, r1, #1
   17538:	str	r1, [r0, #16]
   1753c:	ldr	r0, [fp, #-8]
   17540:	ldr	r1, [r0, #24]
   17544:	add	r1, r1, #1
   17548:	str	r1, [r0, #24]
   1754c:	ldr	r0, [sp, #12]
   17550:	str	r0, [fp, #-4]
   17554:	ldr	r0, [fp, #-4]
   17558:	mov	sp, fp
   1755c:	pop	{fp, pc}
   17560:	.word	0x00033358

00017564 <rb_linebuf_get>:
   17564:	push	{fp, lr}
   17568:	mov	fp, sp
   1756c:	sub	sp, sp, #56	; 0x38
   17570:	ldr	ip, [fp, #8]
   17574:	str	r0, [fp, #-8]
   17578:	str	r1, [fp, #-12]
   1757c:	str	r2, [fp, #-16]
   17580:	str	r3, [fp, #-20]	; 0xffffffec
   17584:	ldr	r0, [fp, #-8]
   17588:	ldr	r0, [r0]
   1758c:	movw	r1, #0
   17590:	cmp	r0, r1
   17594:	str	ip, [sp, #16]
   17598:	bne	175a8 <rb_linebuf_get+0x44>
   1759c:	movw	r0, #0
   175a0:	str	r0, [fp, #-4]
   175a4:	b	1778c <rb_linebuf_get+0x228>
   175a8:	ldr	r0, [fp, #-8]
   175ac:	ldr	r0, [r0]
   175b0:	ldr	r0, [r0]
   175b4:	str	r0, [fp, #-24]	; 0xffffffe8
   175b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   175bc:	cmp	r0, #0
   175c0:	bne	175e0 <rb_linebuf_get+0x7c>
   175c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c8:	ldrb	r0, [r0, #1025]	; 0x401
   175cc:	cmp	r0, #0
   175d0:	bne	175e0 <rb_linebuf_get+0x7c>
   175d4:	movw	r0, #0
   175d8:	str	r0, [fp, #-4]
   175dc:	b	1778c <rb_linebuf_get+0x228>
   175e0:	ldr	r0, [fp, #-16]
   175e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175e8:	ldr	r1, [r1, #1028]	; 0x404
   175ec:	cmp	r0, r1
   175f0:	bge	17604 <rb_linebuf_get+0xa0>
   175f4:	ldr	r0, [fp, #-16]
   175f8:	sub	r0, r0, #1
   175fc:	str	r0, [sp, #28]
   17600:	b	17610 <rb_linebuf_get+0xac>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	ldr	r0, [r0, #1028]	; 0x404
   1760c:	str	r0, [sp, #28]
   17610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17614:	str	r0, [sp, #24]
   17618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1761c:	ldrb	r0, [r0, #1026]	; 0x402
   17620:	cmp	r0, #0
   17624:	beq	17740 <rb_linebuf_get+0x1dc>
   17628:	ldr	r0, [fp, #8]
   1762c:	cmp	r0, #0
   17630:	bne	17740 <rb_linebuf_get+0x1dc>
   17634:	b	17638 <rb_linebuf_get+0xd4>
   17638:	ldr	r0, [sp, #28]
   1763c:	cmp	r0, #0
   17640:	movw	r0, #0
   17644:	str	r0, [sp, #12]
   17648:	beq	17684 <rb_linebuf_get+0x120>
   1764c:	ldr	r0, [sp, #24]
   17650:	ldrb	r0, [r0]
   17654:	cmp	r0, #13
   17658:	movw	r0, #1
   1765c:	str	r0, [sp, #8]
   17660:	beq	1767c <rb_linebuf_get+0x118>
   17664:	ldr	r0, [sp, #24]
   17668:	ldrb	r0, [r0]
   1766c:	cmp	r0, #10
   17670:	movw	r0, #0
   17674:	moveq	r0, #1
   17678:	str	r0, [sp, #8]
   1767c:	ldr	r0, [sp, #8]
   17680:	str	r0, [sp, #12]
   17684:	ldr	r0, [sp, #12]
   17688:	tst	r0, #1
   1768c:	beq	176b0 <rb_linebuf_get+0x14c>
   17690:	ldr	r0, [sp, #24]
   17694:	add	r0, r0, #1
   17698:	str	r0, [sp, #24]
   1769c:	ldr	r0, [sp, #28]
   176a0:	mvn	r1, #0
   176a4:	add	r0, r0, r1
   176a8:	str	r0, [sp, #28]
   176ac:	b	17638 <rb_linebuf_get+0xd4>
   176b0:	ldr	r0, [sp, #24]
   176b4:	ldr	r1, [sp, #28]
   176b8:	sub	r1, r1, #1
   176bc:	add	r0, r0, r1
   176c0:	str	r0, [sp, #20]
   176c4:	ldr	r0, [sp, #28]
   176c8:	cmp	r0, #0
   176cc:	movw	r0, #0
   176d0:	str	r0, [sp, #4]
   176d4:	beq	17710 <rb_linebuf_get+0x1ac>
   176d8:	ldr	r0, [sp, #20]
   176dc:	ldrb	r0, [r0]
   176e0:	cmp	r0, #13
   176e4:	movw	r0, #1
   176e8:	str	r0, [sp]
   176ec:	beq	17708 <rb_linebuf_get+0x1a4>
   176f0:	ldr	r0, [sp, #20]
   176f4:	ldrb	r0, [r0]
   176f8:	cmp	r0, #10
   176fc:	movw	r0, #0
   17700:	moveq	r0, #1
   17704:	str	r0, [sp]
   17708:	ldr	r0, [sp]
   1770c:	str	r0, [sp, #4]
   17710:	ldr	r0, [sp, #4]
   17714:	tst	r0, #1
   17718:	beq	1773c <rb_linebuf_get+0x1d8>
   1771c:	ldr	r0, [sp, #20]
   17720:	mvn	r1, #0
   17724:	add	r0, r0, r1
   17728:	str	r0, [sp, #20]
   1772c:	ldr	r0, [sp, #28]
   17730:	add	r0, r0, r1
   17734:	str	r0, [sp, #28]
   17738:	b	176c4 <rb_linebuf_get+0x160>
   1773c:	b	17740 <rb_linebuf_get+0x1dc>
   17740:	ldr	r0, [fp, #-12]
   17744:	ldr	r1, [sp, #24]
   17748:	ldr	r2, [sp, #28]
   1774c:	bl	51dc <memcpy@plt>
   17750:	ldr	r0, [fp, #8]
   17754:	cmp	r0, #0
   17758:	bne	17770 <rb_linebuf_get+0x20c>
   1775c:	ldr	r0, [fp, #-12]
   17760:	ldr	r1, [sp, #28]
   17764:	add	r0, r0, r1
   17768:	movw	r1, #0
   1776c:	strb	r1, [r0]
   17770:	ldr	r0, [fp, #-8]
   17774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17778:	ldr	r2, [fp, #-8]
   1777c:	ldr	r2, [r2]
   17780:	bl	16d2c <rb_linebuf_done_line>
   17784:	ldr	r0, [sp, #28]
   17788:	str	r0, [fp, #-4]
   1778c:	ldr	r0, [fp, #-4]
   17790:	mov	sp, fp
   17794:	pop	{fp, pc}

00017798 <rb_linebuf_attach>:
   17798:	push	{fp, lr}
   1779c:	mov	fp, sp
   177a0:	sub	sp, sp, #24
   177a4:	str	r0, [fp, #-4]
   177a8:	str	r1, [fp, #-8]
   177ac:	ldr	r0, [fp, #-8]
   177b0:	ldr	r0, [r0]
   177b4:	str	r0, [sp, #12]
   177b8:	ldr	r0, [sp, #12]
   177bc:	movw	r1, #0
   177c0:	cmp	r0, r1
   177c4:	beq	17850 <rb_linebuf_attach+0xb8>
   177c8:	ldr	r0, [sp, #12]
   177cc:	ldr	r0, [r0]
   177d0:	str	r0, [sp, #8]
   177d4:	ldr	r0, [sp, #8]
   177d8:	str	r0, [sp, #4]
   177dc:	bl	5554 <rb_make_rb_dlink_node@plt>
   177e0:	ldr	r2, [fp, #-4]
   177e4:	ldr	lr, [sp, #4]
   177e8:	str	r0, [sp]
   177ec:	mov	r0, lr
   177f0:	ldr	r1, [sp]
   177f4:	bl	17858 <rb_dlinkAddTail>
   177f8:	ldr	r0, [fp, #-4]
   177fc:	ldr	r1, [r0, #16]
   17800:	add	r1, r1, #1
   17804:	str	r1, [r0, #16]
   17808:	ldr	r0, [sp, #8]
   1780c:	ldr	r0, [r0, #1028]	; 0x404
   17810:	ldr	r1, [fp, #-4]
   17814:	ldr	r2, [r1, #12]
   17818:	add	r0, r2, r0
   1781c:	str	r0, [r1, #12]
   17820:	ldr	r0, [fp, #-4]
   17824:	ldr	r1, [r0, #24]
   17828:	add	r1, r1, #1
   1782c:	str	r1, [r0, #24]
   17830:	ldr	r0, [sp, #8]
   17834:	ldr	r1, [r0, #1032]	; 0x408
   17838:	add	r1, r1, #1
   1783c:	str	r1, [r0, #1032]	; 0x408
   17840:	ldr	r0, [sp, #12]
   17844:	ldr	r0, [r0, #8]
   17848:	str	r0, [sp, #12]
   1784c:	b	177b8 <rb_linebuf_attach+0x20>
   17850:	mov	sp, fp
   17854:	pop	{fp, pc}

00017858 <rb_dlinkAddTail>:
   17858:	sub	sp, sp, #12
   1785c:	str	r0, [sp, #8]
   17860:	str	r1, [sp, #4]
   17864:	str	r2, [sp]
   17868:	ldr	r0, [sp, #8]
   1786c:	ldr	r1, [sp, #4]
   17870:	str	r0, [r1]
   17874:	ldr	r0, [sp, #4]
   17878:	movw	r1, #0
   1787c:	str	r1, [r0, #8]
   17880:	ldr	r0, [sp]
   17884:	ldr	r0, [r0, #4]
   17888:	ldr	r2, [sp, #4]
   1788c:	str	r0, [r2, #4]
   17890:	ldr	r0, [sp]
   17894:	ldr	r0, [r0, #4]
   17898:	cmp	r0, r1
   1789c:	beq	178b4 <rb_dlinkAddTail+0x5c>
   178a0:	ldr	r0, [sp, #4]
   178a4:	ldr	r1, [sp]
   178a8:	ldr	r1, [r1, #4]
   178ac:	str	r0, [r1, #8]
   178b0:	b	178d8 <rb_dlinkAddTail+0x80>
   178b4:	ldr	r0, [sp]
   178b8:	ldr	r0, [r0]
   178bc:	movw	r1, #0
   178c0:	cmp	r0, r1
   178c4:	bne	178d4 <rb_dlinkAddTail+0x7c>
   178c8:	ldr	r0, [sp, #4]
   178cc:	ldr	r1, [sp]
   178d0:	str	r0, [r1]
   178d4:	b	178d8 <rb_dlinkAddTail+0x80>
   178d8:	ldr	r0, [sp, #4]
   178dc:	ldr	r1, [sp]
   178e0:	str	r0, [r1, #4]
   178e4:	ldr	r0, [sp]
   178e8:	ldr	r1, [r0, #8]
   178ec:	add	r1, r1, #1
   178f0:	str	r1, [r0, #8]
   178f4:	add	sp, sp, #12
   178f8:	bx	lr

000178fc <rb_linebuf_put>:
   178fc:	push	{fp, lr}
   17900:	mov	fp, sp
   17904:	sub	sp, sp, #24
   17908:	str	r0, [fp, #-4]
   1790c:	str	r1, [fp, #-8]
   17910:	movw	r0, #0
   17914:	str	r0, [sp, #8]
   17918:	ldr	r1, [fp, #-4]
   1791c:	ldr	r1, [r1, #4]
   17920:	cmp	r1, r0
   17924:	beq	17938 <rb_linebuf_put+0x3c>
   17928:	ldr	r0, [fp, #-4]
   1792c:	ldr	r0, [r0, #4]
   17930:	ldr	r0, [r0]
   17934:	str	r0, [sp, #12]
   17938:	ldr	r0, [fp, #-4]
   1793c:	bl	174b0 <rb_linebuf_new_line>
   17940:	str	r0, [sp, #12]
   17944:	ldr	r0, [sp, #12]
   17948:	ldr	r2, [fp, #-8]
   1794c:	movw	r1, #1023	; 0x3ff
   17950:	bl	505c <rb_fsnprint@plt>
   17954:	str	r0, [sp, #4]
   17958:	ldr	r0, [sp, #4]
   1795c:	cmp	r0, #0
   17960:	ble	17974 <rb_linebuf_put+0x78>
   17964:	ldr	r0, [sp, #4]
   17968:	ldr	r1, [sp, #8]
   1796c:	add	r0, r1, r0
   17970:	str	r0, [sp, #8]
   17974:	ldr	r0, [sp, #8]
   17978:	movw	r1, #1022	; 0x3fe
   1797c:	cmp	r0, r1
   17980:	bls	1798c <rb_linebuf_put+0x90>
   17984:	movw	r0, #1022	; 0x3fe
   17988:	str	r0, [sp, #8]
   1798c:	ldr	r0, [sp, #12]
   17990:	ldr	r1, [sp, #8]
   17994:	add	r2, r1, #1
   17998:	str	r2, [sp, #8]
   1799c:	add	r0, r0, r1
   179a0:	movw	r1, #13
   179a4:	strb	r1, [r0]
   179a8:	ldr	r0, [sp, #12]
   179ac:	ldr	r1, [sp, #8]
   179b0:	add	r2, r1, #1
   179b4:	str	r2, [sp, #8]
   179b8:	add	r0, r0, r1
   179bc:	movw	r1, #10
   179c0:	strb	r1, [r0]
   179c4:	ldr	r0, [sp, #12]
   179c8:	ldr	r1, [sp, #8]
   179cc:	add	r0, r0, r1
   179d0:	movw	r1, #0
   179d4:	strb	r1, [r0]
   179d8:	ldr	r0, [sp, #12]
   179dc:	movw	r1, #1
   179e0:	strb	r1, [r0, #1025]	; 0x401
   179e4:	ldr	r0, [sp, #8]
   179e8:	ldr	r1, [sp, #12]
   179ec:	str	r0, [r1, #1028]	; 0x404
   179f0:	ldr	r0, [sp, #8]
   179f4:	ldr	r1, [fp, #-4]
   179f8:	ldr	r2, [r1, #12]
   179fc:	add	r0, r2, r0
   17a00:	str	r0, [r1, #12]
   17a04:	mov	sp, fp
   17a08:	pop	{fp, pc}

00017a0c <rb_linebuf_flush>:
   17a0c:	push	{fp, lr}
   17a10:	mov	fp, sp
   17a14:	sub	sp, sp, #48	; 0x30
   17a18:	str	r0, [fp, #-8]
   17a1c:	str	r1, [fp, #-12]
   17a20:	ldr	r0, [fp, #-8]
   17a24:	bl	4e70 <rb_fd_ssl@plt>
   17a28:	cmp	r0, #0
   17a2c:	bne	17cec <rb_linebuf_flush+0x2e0>
   17a30:	ldr	r0, [pc, #968]	; 17e00 <rb_linebuf_flush+0x3f4>
   17a34:	add	r0, pc, r0
   17a38:	movw	r1, #0
   17a3c:	str	r1, [sp, #20]
   17a40:	movw	r2, #0
   17a44:	and	r2, r2, #255	; 0xff
   17a48:	str	r1, [sp, #8]
   17a4c:	mov	r1, r2
   17a50:	movw	r2, #8192	; 0x2000
   17a54:	bl	4ff0 <memset@plt>
   17a58:	ldr	r0, [fp, #-12]
   17a5c:	ldr	r0, [r0]
   17a60:	ldr	r1, [sp, #8]
   17a64:	cmp	r0, r1
   17a68:	bne	17a84 <rb_linebuf_flush+0x78>
   17a6c:	bl	56c8 <__errno_location@plt>
   17a70:	movw	lr, #11
   17a74:	str	lr, [r0]
   17a78:	mvn	r0, #0
   17a7c:	str	r0, [fp, #-4]
   17a80:	b	17df4 <rb_linebuf_flush+0x3e8>
   17a84:	ldr	r0, [fp, #-12]
   17a88:	ldr	r0, [r0]
   17a8c:	str	r0, [sp, #24]
   17a90:	ldr	r0, [sp, #24]
   17a94:	ldr	r0, [r0]
   17a98:	str	r0, [fp, #-16]
   17a9c:	ldr	r0, [fp, #-16]
   17aa0:	movw	r1, #1025	; 0x401
   17aa4:	add	r0, r0, r1
   17aa8:	ldrsb	r0, [r0]
   17aac:	cmp	r0, #0
   17ab0:	bne	17acc <rb_linebuf_flush+0xc0>
   17ab4:	bl	56c8 <__errno_location@plt>
   17ab8:	movw	lr, #11
   17abc:	str	lr, [r0]
   17ac0:	mvn	r0, #0
   17ac4:	str	r0, [fp, #-4]
   17ac8:	b	17df4 <rb_linebuf_flush+0x3e8>
   17acc:	ldr	r0, [pc, #816]	; 17e04 <rb_linebuf_flush+0x3f8>
   17ad0:	add	r0, pc, r0
   17ad4:	ldr	r1, [fp, #-16]
   17ad8:	ldr	r2, [fp, #-12]
   17adc:	ldr	r2, [r2, #20]
   17ae0:	add	r1, r1, r2
   17ae4:	ldr	r2, [sp, #20]
   17ae8:	ldr	r3, [pc, #800]	; 17e10 <rb_linebuf_flush+0x404>
   17aec:	add	r3, pc, r3
   17af0:	str	r1, [r3, r2, lsl #3]
   17af4:	ldr	r1, [fp, #-16]
   17af8:	ldr	r1, [r1, #1028]	; 0x404
   17afc:	ldr	r2, [fp, #-12]
   17b00:	ldr	r2, [r2, #20]
   17b04:	sub	r1, r1, r2
   17b08:	ldr	r2, [sp, #20]
   17b0c:	add	ip, r2, #1
   17b10:	str	ip, [sp, #20]
   17b14:	add	r2, r3, r2, lsl #3
   17b18:	str	r1, [r2, #4]
   17b1c:	ldr	r1, [sp, #24]
   17b20:	ldr	r1, [r1, #8]
   17b24:	str	r1, [sp, #24]
   17b28:	str	r0, [sp, #4]
   17b2c:	ldr	r0, [sp, #24]
   17b30:	movw	r1, #0
   17b34:	cmp	r0, r1
   17b38:	bne	17b40 <rb_linebuf_flush+0x134>
   17b3c:	b	17bbc <rb_linebuf_flush+0x1b0>
   17b40:	ldr	r0, [sp, #24]
   17b44:	ldr	r0, [r0]
   17b48:	str	r0, [fp, #-16]
   17b4c:	ldr	r0, [fp, #-16]
   17b50:	movw	r1, #1025	; 0x401
   17b54:	add	r0, r0, r1
   17b58:	ldrsb	r0, [r0]
   17b5c:	cmp	r0, #0
   17b60:	bne	17b68 <rb_linebuf_flush+0x15c>
   17b64:	b	17bbc <rb_linebuf_flush+0x1b0>
   17b68:	ldr	r0, [pc, #664]	; 17e08 <rb_linebuf_flush+0x3fc>
   17b6c:	add	r0, pc, r0
   17b70:	ldr	r1, [fp, #-16]
   17b74:	ldr	r2, [sp, #20]
   17b78:	ldr	r3, [pc, #660]	; 17e14 <rb_linebuf_flush+0x408>
   17b7c:	add	r3, pc, r3
   17b80:	str	r1, [r3, r2, lsl #3]
   17b84:	ldr	r1, [fp, #-16]
   17b88:	ldr	r1, [r1, #1028]	; 0x404
   17b8c:	ldr	r2, [sp, #20]
   17b90:	add	r2, r3, r2, lsl #3
   17b94:	str	r1, [r2, #4]
   17b98:	ldr	r1, [sp, #24]
   17b9c:	ldr	r1, [r1, #8]
   17ba0:	str	r1, [sp, #24]
   17ba4:	str	r0, [sp]
   17ba8:	ldr	r0, [sp, #20]
   17bac:	add	r0, r0, #1
   17bb0:	str	r0, [sp, #20]
   17bb4:	cmp	r0, #1024	; 0x400
   17bb8:	blt	17b2c <rb_linebuf_flush+0x120>
   17bbc:	ldr	r0, [sp, #20]
   17bc0:	cmp	r0, #0
   17bc4:	bne	17be0 <rb_linebuf_flush+0x1d4>
   17bc8:	bl	56c8 <__errno_location@plt>
   17bcc:	movw	lr, #11
   17bd0:	str	lr, [r0]
   17bd4:	mvn	r0, #0
   17bd8:	str	r0, [fp, #-4]
   17bdc:	b	17df4 <rb_linebuf_flush+0x3e8>
   17be0:	ldr	r0, [pc, #548]	; 17e0c <rb_linebuf_flush+0x400>
   17be4:	add	r1, pc, r0
   17be8:	ldr	r0, [fp, #-8]
   17bec:	ldr	r2, [sp, #20]
   17bf0:	bl	54a0 <rb_writev@plt>
   17bf4:	str	r0, [fp, #-20]	; 0xffffffec
   17bf8:	str	r0, [sp, #12]
   17bfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c00:	cmp	r0, #0
   17c04:	bgt	17c14 <rb_linebuf_flush+0x208>
   17c08:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c0c:	str	r0, [fp, #-4]
   17c10:	b	17df4 <rb_linebuf_flush+0x3e8>
   17c14:	ldr	r0, [fp, #-12]
   17c18:	ldr	r0, [r0]
   17c1c:	str	r0, [sp, #24]
   17c20:	movw	r0, #0
   17c24:	str	r0, [sp, #16]
   17c28:	ldr	r0, [sp, #16]
   17c2c:	ldr	r1, [sp, #20]
   17c30:	cmp	r0, r1
   17c34:	bge	17ce0 <rb_linebuf_flush+0x2d4>
   17c38:	ldr	r0, [sp, #24]
   17c3c:	ldr	r0, [r0]
   17c40:	str	r0, [fp, #-16]
   17c44:	ldr	r0, [sp, #12]
   17c48:	ldr	r1, [fp, #-16]
   17c4c:	ldr	r1, [r1, #1028]	; 0x404
   17c50:	ldr	r2, [fp, #-12]
   17c54:	ldr	r2, [r2, #20]
   17c58:	sub	r1, r1, r2
   17c5c:	cmp	r0, r1
   17c60:	blt	17cb4 <rb_linebuf_flush+0x2a8>
   17c64:	ldr	r0, [fp, #-16]
   17c68:	ldr	r0, [r0, #1028]	; 0x404
   17c6c:	ldr	r1, [fp, #-12]
   17c70:	ldr	r1, [r1, #20]
   17c74:	sub	r0, r0, r1
   17c78:	ldr	r1, [sp, #12]
   17c7c:	sub	r0, r1, r0
   17c80:	str	r0, [sp, #12]
   17c84:	ldr	r0, [sp, #24]
   17c88:	ldr	r0, [r0, #8]
   17c8c:	str	r0, [sp, #24]
   17c90:	ldr	r0, [fp, #-12]
   17c94:	ldr	r1, [fp, #-16]
   17c98:	ldr	r2, [fp, #-12]
   17c9c:	ldr	r2, [r2]
   17ca0:	bl	16d2c <rb_linebuf_done_line>
   17ca4:	ldr	r0, [fp, #-12]
   17ca8:	movw	r1, #0
   17cac:	str	r1, [r0, #20]
   17cb0:	b	17ccc <rb_linebuf_flush+0x2c0>
   17cb4:	ldr	r0, [sp, #12]
   17cb8:	ldr	r1, [fp, #-12]
   17cbc:	ldr	r2, [r1, #20]
   17cc0:	add	r0, r2, r0
   17cc4:	str	r0, [r1, #20]
   17cc8:	b	17ce0 <rb_linebuf_flush+0x2d4>
   17ccc:	b	17cd0 <rb_linebuf_flush+0x2c4>
   17cd0:	ldr	r0, [sp, #16]
   17cd4:	add	r0, r0, #1
   17cd8:	str	r0, [sp, #16]
   17cdc:	b	17c28 <rb_linebuf_flush+0x21c>
   17ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ce4:	str	r0, [fp, #-4]
   17ce8:	b	17df4 <rb_linebuf_flush+0x3e8>
   17cec:	ldr	r0, [fp, #-12]
   17cf0:	ldr	r0, [r0]
   17cf4:	movw	r1, #0
   17cf8:	cmp	r0, r1
   17cfc:	bne	17d18 <rb_linebuf_flush+0x30c>
   17d00:	bl	56c8 <__errno_location@plt>
   17d04:	movw	lr, #11
   17d08:	str	lr, [r0]
   17d0c:	mvn	r0, #0
   17d10:	str	r0, [fp, #-4]
   17d14:	b	17df4 <rb_linebuf_flush+0x3e8>
   17d18:	ldr	r0, [fp, #-12]
   17d1c:	ldr	r0, [r0]
   17d20:	ldr	r0, [r0]
   17d24:	str	r0, [fp, #-16]
   17d28:	ldr	r0, [fp, #-16]
   17d2c:	movw	r1, #1025	; 0x401
   17d30:	add	r0, r0, r1
   17d34:	ldrsb	r0, [r0]
   17d38:	cmp	r0, #0
   17d3c:	bne	17d58 <rb_linebuf_flush+0x34c>
   17d40:	bl	56c8 <__errno_location@plt>
   17d44:	movw	lr, #11
   17d48:	str	lr, [r0]
   17d4c:	mvn	r0, #0
   17d50:	str	r0, [fp, #-4]
   17d54:	b	17df4 <rb_linebuf_flush+0x3e8>
   17d58:	ldr	r0, [fp, #-8]
   17d5c:	ldr	r1, [fp, #-16]
   17d60:	ldr	r2, [fp, #-12]
   17d64:	ldr	r2, [r2, #20]
   17d68:	add	r1, r1, r2
   17d6c:	ldr	r2, [fp, #-16]
   17d70:	ldr	r2, [r2, #1028]	; 0x404
   17d74:	ldr	r3, [fp, #-12]
   17d78:	ldr	r3, [r3, #20]
   17d7c:	sub	r2, r2, r3
   17d80:	bl	5020 <rb_write@plt>
   17d84:	str	r0, [fp, #-20]	; 0xffffffec
   17d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d8c:	cmp	r0, #0
   17d90:	bgt	17da0 <rb_linebuf_flush+0x394>
   17d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d98:	str	r0, [fp, #-4]
   17d9c:	b	17df4 <rb_linebuf_flush+0x3e8>
   17da0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17da4:	ldr	r1, [fp, #-12]
   17da8:	ldr	r2, [r1, #20]
   17dac:	add	r0, r2, r0
   17db0:	str	r0, [r1, #20]
   17db4:	ldr	r0, [fp, #-12]
   17db8:	ldr	r0, [r0, #20]
   17dbc:	ldr	r1, [fp, #-16]
   17dc0:	ldr	r1, [r1, #1028]	; 0x404
   17dc4:	cmp	r0, r1
   17dc8:	bne	17dec <rb_linebuf_flush+0x3e0>
   17dcc:	ldr	r0, [fp, #-12]
   17dd0:	movw	r1, #0
   17dd4:	str	r1, [r0, #20]
   17dd8:	ldr	r0, [fp, #-12]
   17ddc:	ldr	r1, [fp, #-16]
   17de0:	ldr	r2, [fp, #-12]
   17de4:	ldr	r2, [r2]
   17de8:	bl	16d2c <rb_linebuf_done_line>
   17dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   17df0:	str	r0, [fp, #-4]
   17df4:	ldr	r0, [fp, #-4]
   17df8:	mov	sp, fp
   17dfc:	pop	{fp, pc}
   17e00:	.word	0x00030e0c
   17e04:	.word	0x00030d70
   17e08:	.word	0x00030cd4
   17e0c:	.word	0x00030c5c
   17e10:	.word	0x00030d54
   17e14:	.word	0x00030cc4

00017e18 <rb_count_rb_linebuf_memory>:
   17e18:	push	{fp, lr}
   17e1c:	mov	fp, sp
   17e20:	sub	sp, sp, #16
   17e24:	ldr	r2, [pc, #48]	; 17e5c <rb_count_rb_linebuf_memory+0x44>
   17e28:	add	r2, pc, r2
   17e2c:	str	r0, [fp, #-4]
   17e30:	str	r1, [sp, #8]
   17e34:	ldr	r0, [r2]
   17e38:	ldr	r1, [fp, #-4]
   17e3c:	ldr	r3, [sp, #8]
   17e40:	movw	r2, #0
   17e44:	str	r2, [sp, #4]
   17e48:	ldr	ip, [sp, #4]
   17e4c:	str	ip, [sp]
   17e50:	bl	56ec <rb_bh_usage@plt>
   17e54:	mov	sp, fp
   17e58:	pop	{fp, pc}
   17e5c:	.word	0x00030a14

00017e60 <rb_dlinkDelete>:
   17e60:	sub	sp, sp, #8
   17e64:	str	r0, [sp, #4]
   17e68:	str	r1, [sp]
   17e6c:	ldr	r0, [sp, #4]
   17e70:	ldr	r0, [r0, #8]
   17e74:	movw	r1, #0
   17e78:	cmp	r0, r1
   17e7c:	beq	17e98 <rb_dlinkDelete+0x38>
   17e80:	ldr	r0, [sp, #4]
   17e84:	ldr	r0, [r0, #4]
   17e88:	ldr	r1, [sp, #4]
   17e8c:	ldr	r1, [r1, #8]
   17e90:	str	r0, [r1, #4]
   17e94:	b	17ea8 <rb_dlinkDelete+0x48>
   17e98:	ldr	r0, [sp, #4]
   17e9c:	ldr	r0, [r0, #4]
   17ea0:	ldr	r1, [sp]
   17ea4:	str	r0, [r1, #4]
   17ea8:	ldr	r0, [sp, #4]
   17eac:	ldr	r0, [r0, #4]
   17eb0:	movw	r1, #0
   17eb4:	cmp	r0, r1
   17eb8:	beq	17ed4 <rb_dlinkDelete+0x74>
   17ebc:	ldr	r0, [sp, #4]
   17ec0:	ldr	r0, [r0, #8]
   17ec4:	ldr	r1, [sp, #4]
   17ec8:	ldr	r1, [r1, #4]
   17ecc:	str	r0, [r1, #8]
   17ed0:	b	17ee4 <rb_dlinkDelete+0x84>
   17ed4:	ldr	r0, [sp, #4]
   17ed8:	ldr	r0, [r0, #8]
   17edc:	ldr	r1, [sp]
   17ee0:	str	r0, [r1]
   17ee4:	ldr	r0, [sp, #4]
   17ee8:	movw	r1, #0
   17eec:	str	r1, [r0, #4]
   17ef0:	ldr	r0, [sp, #4]
   17ef4:	str	r1, [r0, #8]
   17ef8:	ldr	r0, [sp]
   17efc:	ldr	r1, [r0, #8]
   17f00:	mvn	r2, #0
   17f04:	add	r1, r1, r2
   17f08:	str	r1, [r0, #8]
   17f0c:	add	sp, sp, #8
   17f10:	bx	lr

00017f14 <rb_linebuf_free>:
   17f14:	push	{fp, lr}
   17f18:	mov	fp, sp
   17f1c:	sub	sp, sp, #8
   17f20:	ldr	r1, [pc, #28]	; 17f44 <rb_linebuf_free+0x30>
   17f24:	add	r1, pc, r1
   17f28:	str	r0, [sp, #4]
   17f2c:	ldr	r0, [r1]
   17f30:	ldr	r1, [sp, #4]
   17f34:	bl	529c <rb_bh_free@plt>
   17f38:	str	r0, [sp]
   17f3c:	mov	sp, fp
   17f40:	pop	{fp, pc}
   17f44:	.word	0x00030918

00017f48 <rb_linebuf_skip_crlf>:
   17f48:	sub	sp, sp, #12
   17f4c:	str	r0, [sp, #8]
   17f50:	str	r1, [sp, #4]
   17f54:	ldr	r0, [sp, #4]
   17f58:	str	r0, [sp]
   17f5c:	ldr	r0, [sp, #4]
   17f60:	cmp	r0, #0
   17f64:	beq	17fb8 <rb_linebuf_skip_crlf+0x70>
   17f68:	ldr	r0, [sp, #8]
   17f6c:	ldrb	r0, [r0]
   17f70:	cmp	r0, #13
   17f74:	bne	17f7c <rb_linebuf_skip_crlf+0x34>
   17f78:	b	17fb8 <rb_linebuf_skip_crlf+0x70>
   17f7c:	ldr	r0, [sp, #8]
   17f80:	ldrb	r0, [r0]
   17f84:	cmp	r0, #10
   17f88:	bne	17f90 <rb_linebuf_skip_crlf+0x48>
   17f8c:	b	17fb8 <rb_linebuf_skip_crlf+0x70>
   17f90:	b	17f94 <rb_linebuf_skip_crlf+0x4c>
   17f94:	b	17f98 <rb_linebuf_skip_crlf+0x50>
   17f98:	ldr	r0, [sp, #4]
   17f9c:	mvn	r1, #0
   17fa0:	add	r0, r0, r1
   17fa4:	str	r0, [sp, #4]
   17fa8:	ldr	r0, [sp, #8]
   17fac:	add	r0, r0, #1
   17fb0:	str	r0, [sp, #8]
   17fb4:	b	17f5c <rb_linebuf_skip_crlf+0x14>
   17fb8:	b	17fbc <rb_linebuf_skip_crlf+0x74>
   17fbc:	ldr	r0, [sp, #4]
   17fc0:	cmp	r0, #0
   17fc4:	beq	18010 <rb_linebuf_skip_crlf+0xc8>
   17fc8:	ldr	r0, [sp, #8]
   17fcc:	ldrb	r0, [r0]
   17fd0:	cmp	r0, #13
   17fd4:	beq	17fec <rb_linebuf_skip_crlf+0xa4>
   17fd8:	ldr	r0, [sp, #8]
   17fdc:	ldrb	r0, [r0]
   17fe0:	cmp	r0, #10
   17fe4:	beq	17fec <rb_linebuf_skip_crlf+0xa4>
   17fe8:	b	18010 <rb_linebuf_skip_crlf+0xc8>
   17fec:	b	17ff0 <rb_linebuf_skip_crlf+0xa8>
   17ff0:	ldr	r0, [sp, #4]
   17ff4:	mvn	r1, #0
   17ff8:	add	r0, r0, r1
   17ffc:	str	r0, [sp, #4]
   18000:	ldr	r0, [sp, #8]
   18004:	add	r0, r0, #1
   18008:	str	r0, [sp, #8]
   1800c:	b	17fbc <rb_linebuf_skip_crlf+0x74>
   18010:	ldr	r0, [sp]
   18014:	ldr	r1, [sp, #4]
   18018:	sub	r0, r0, r1
   1801c:	add	sp, sp, #12
   18020:	bx	lr

00018024 <rb_linebuf_allocate>:
   18024:	push	{fp, lr}
   18028:	mov	fp, sp
   1802c:	sub	sp, sp, #8
   18030:	ldr	r0, [pc, #24]	; 18050 <rb_linebuf_allocate+0x2c>
   18034:	add	r0, pc, r0
   18038:	ldr	r0, [r0]
   1803c:	bl	5320 <rb_bh_alloc@plt>
   18040:	str	r0, [sp, #4]
   18044:	ldr	r0, [sp, #4]
   18048:	mov	sp, fp
   1804c:	pop	{fp, pc}
   18050:	.word	0x00030808

00018054 <rb_init_rb_dlink_nodes>:
   18054:	push	{fp, lr}
   18058:	mov	fp, sp
   1805c:	sub	sp, sp, #8
   18060:	ldr	r1, [pc, #60]	; 180a4 <rb_init_rb_dlink_nodes+0x50>
   18064:	add	r2, pc, r1
   18068:	str	r0, [sp, #4]
   1806c:	ldr	r1, [sp, #4]
   18070:	movw	r0, #12
   18074:	bl	547c <rb_bh_create@plt>
   18078:	ldr	r1, [pc, #32]	; 180a0 <rb_init_rb_dlink_nodes+0x4c>
   1807c:	add	r1, pc, r1
   18080:	str	r0, [r1]
   18084:	ldr	r0, [r1]
   18088:	movw	r1, #0
   1808c:	cmp	r0, r1
   18090:	bne	18098 <rb_init_rb_dlink_nodes+0x44>
   18094:	bl	5350 <rb_outofmemory@plt>
   18098:	mov	sp, fp
   1809c:	pop	{fp, pc}
   180a0:	.word	0x000327c8
   180a4:	.word	0x0000b9e3

000180a8 <rb_make_rb_dlink_node>:
   180a8:	push	{fp, lr}
   180ac:	mov	fp, sp
   180b0:	ldr	r0, [pc, #12]	; 180c4 <rb_make_rb_dlink_node+0x1c>
   180b4:	add	r0, pc, r0
   180b8:	ldr	r0, [r0]
   180bc:	bl	5320 <rb_bh_alloc@plt>
   180c0:	pop	{fp, pc}
   180c4:	.word	0x00032790

000180c8 <rb_free_rb_dlink_node>:
   180c8:	push	{fp, lr}
   180cc:	mov	fp, sp
   180d0:	sub	sp, sp, #8
   180d4:	ldr	r1, [pc, #28]	; 180f8 <rb_free_rb_dlink_node+0x30>
   180d8:	add	r1, pc, r1
   180dc:	str	r0, [sp, #4]
   180e0:	ldr	r0, [r1]
   180e4:	ldr	r1, [sp, #4]
   180e8:	bl	529c <rb_bh_free@plt>
   180ec:	str	r0, [sp]
   180f0:	mov	sp, fp
   180f4:	pop	{fp, pc}
   180f8:	.word	0x0003276c

000180fc <rb_string_to_array>:
   180fc:	push	{fp, lr}
   18100:	mov	fp, sp
   18104:	sub	sp, sp, #32
   18108:	str	r0, [fp, #-8]
   1810c:	str	r1, [fp, #-12]
   18110:	str	r2, [sp, #16]
   18114:	ldr	r0, [fp, #-8]
   18118:	str	r0, [sp, #8]
   1811c:	movw	r0, #0
   18120:	str	r0, [sp, #4]
   18124:	ldr	r1, [fp, #-8]
   18128:	cmp	r1, r0
   1812c:	beq	18140 <rb_string_to_array+0x44>
   18130:	ldr	r0, [fp, #-8]
   18134:	ldrb	r0, [r0]
   18138:	cmp	r0, #0
   1813c:	bne	1814c <rb_string_to_array+0x50>
   18140:	ldr	r0, [sp, #4]
   18144:	str	r0, [fp, #-4]
   18148:	b	182d4 <rb_string_to_array+0x1d8>
   1814c:	b	18150 <rb_string_to_array+0x54>
   18150:	ldr	r0, [sp, #8]
   18154:	ldrb	r0, [r0]
   18158:	cmp	r0, #32
   1815c:	bne	18170 <rb_string_to_array+0x74>
   18160:	ldr	r0, [sp, #8]
   18164:	add	r0, r0, #1
   18168:	str	r0, [sp, #8]
   1816c:	b	18150 <rb_string_to_array+0x54>
   18170:	ldr	r0, [sp, #8]
   18174:	ldrb	r0, [r0]
   18178:	cmp	r0, #0
   1817c:	bne	1818c <rb_string_to_array+0x90>
   18180:	ldr	r0, [sp, #4]
   18184:	str	r0, [fp, #-4]
   18188:	b	182d4 <rb_string_to_array+0x1d8>
   1818c:	b	18190 <rb_string_to_array+0x94>
   18190:	ldr	r0, [sp, #8]
   18194:	ldrb	r0, [r0]
   18198:	cmp	r0, #58	; 0x3a
   1819c:	bne	181d4 <rb_string_to_array+0xd8>
   181a0:	ldr	r0, [sp, #8]
   181a4:	add	r0, r0, #1
   181a8:	str	r0, [sp, #8]
   181ac:	ldr	r0, [sp, #8]
   181b0:	ldr	r1, [fp, #-12]
   181b4:	ldr	r2, [sp, #4]
   181b8:	add	r3, r2, #1
   181bc:	str	r3, [sp, #4]
   181c0:	add	r1, r1, r2, lsl #2
   181c4:	str	r0, [r1]
   181c8:	ldr	r0, [sp, #4]
   181cc:	str	r0, [fp, #-4]
   181d0:	b	182d4 <rb_string_to_array+0x1d8>
   181d4:	ldr	r0, [sp, #8]
   181d8:	ldr	r1, [fp, #-12]
   181dc:	ldr	r2, [sp, #4]
   181e0:	add	r3, r2, #1
   181e4:	str	r3, [sp, #4]
   181e8:	add	r1, r1, r2, lsl #2
   181ec:	str	r0, [r1]
   181f0:	ldr	r0, [sp, #8]
   181f4:	movw	r1, #32
   181f8:	bl	4f78 <strchr@plt>
   181fc:	str	r0, [sp, #12]
   18200:	movw	r1, #0
   18204:	cmp	r0, r1
   18208:	beq	1822c <rb_string_to_array+0x130>
   1820c:	ldr	r0, [sp, #12]
   18210:	add	r1, r0, #1
   18214:	str	r1, [sp, #12]
   18218:	movw	r1, #0
   1821c:	strb	r1, [r0]
   18220:	ldr	r0, [sp, #12]
   18224:	str	r0, [sp, #8]
   18228:	b	18238 <rb_string_to_array+0x13c>
   1822c:	ldr	r0, [sp, #4]
   18230:	str	r0, [fp, #-4]
   18234:	b	182d4 <rb_string_to_array+0x1d8>
   18238:	b	1823c <rb_string_to_array+0x140>
   1823c:	b	18240 <rb_string_to_array+0x144>
   18240:	ldr	r0, [sp, #8]
   18244:	ldrb	r0, [r0]
   18248:	cmp	r0, #32
   1824c:	bne	18260 <rb_string_to_array+0x164>
   18250:	ldr	r0, [sp, #8]
   18254:	add	r0, r0, #1
   18258:	str	r0, [sp, #8]
   1825c:	b	18240 <rb_string_to_array+0x144>
   18260:	ldr	r0, [sp, #8]
   18264:	ldrb	r0, [r0]
   18268:	cmp	r0, #0
   1826c:	bne	1827c <rb_string_to_array+0x180>
   18270:	ldr	r0, [sp, #4]
   18274:	str	r0, [fp, #-4]
   18278:	b	182d4 <rb_string_to_array+0x1d8>
   1827c:	b	18280 <rb_string_to_array+0x184>
   18280:	ldr	r0, [sp, #4]
   18284:	ldr	r1, [sp, #16]
   18288:	sub	r1, r1, #1
   1828c:	cmp	r0, r1
   18290:	blt	18190 <rb_string_to_array+0x94>
   18294:	ldr	r0, [sp, #12]
   18298:	ldrb	r0, [r0]
   1829c:	cmp	r0, #58	; 0x3a
   182a0:	bne	182b0 <rb_string_to_array+0x1b4>
   182a4:	ldr	r0, [sp, #12]
   182a8:	add	r0, r0, #1
   182ac:	str	r0, [sp, #12]
   182b0:	ldr	r0, [sp, #12]
   182b4:	ldr	r1, [fp, #-12]
   182b8:	ldr	r2, [sp, #4]
   182bc:	add	r3, r2, #1
   182c0:	str	r3, [sp, #4]
   182c4:	add	r1, r1, r2, lsl #2
   182c8:	str	r0, [r1]
   182cc:	ldr	r0, [sp, #4]
   182d0:	str	r0, [fp, #-4]
   182d4:	ldr	r0, [fp, #-4]
   182d8:	mov	sp, fp
   182dc:	pop	{fp, pc}

000182e0 <rb_strcasecmp>:
   182e0:	push	{fp, lr}
   182e4:	mov	fp, sp
   182e8:	sub	sp, sp, #8
   182ec:	str	r0, [sp, #4]
   182f0:	str	r1, [sp]
   182f4:	ldr	r0, [sp, #4]
   182f8:	ldr	r1, [sp]
   182fc:	bl	4f90 <strcasecmp@plt>
   18300:	mov	sp, fp
   18304:	pop	{fp, pc}

00018308 <rb_strncasecmp>:
   18308:	push	{fp, lr}
   1830c:	mov	fp, sp
   18310:	sub	sp, sp, #16
   18314:	str	r0, [fp, #-4]
   18318:	str	r1, [sp, #8]
   1831c:	str	r2, [sp, #4]
   18320:	ldr	r0, [fp, #-4]
   18324:	ldr	r1, [sp, #8]
   18328:	ldr	r2, [sp, #4]
   1832c:	bl	5344 <strncasecmp@plt>
   18330:	mov	sp, fp
   18334:	pop	{fp, pc}

00018338 <rb_strcasestr>:
   18338:	push	{fp, lr}
   1833c:	mov	fp, sp
   18340:	sub	sp, sp, #8
   18344:	str	r0, [sp, #4]
   18348:	str	r1, [sp]
   1834c:	ldr	r0, [sp, #4]
   18350:	ldr	r1, [sp]
   18354:	bl	4dd4 <strcasestr@plt>
   18358:	mov	sp, fp
   1835c:	pop	{fp, pc}

00018360 <rb_strlcat>:
   18360:	push	{fp, lr}
   18364:	mov	fp, sp
   18368:	sub	sp, sp, #24
   1836c:	str	r0, [fp, #-4]
   18370:	str	r1, [fp, #-8]
   18374:	str	r2, [sp, #12]
   18378:	ldr	r0, [fp, #-4]
   1837c:	bl	51b8 <strlen@plt>
   18380:	str	r0, [sp, #8]
   18384:	ldr	r0, [fp, #-8]
   18388:	bl	51b8 <strlen@plt>
   1838c:	str	r0, [sp, #4]
   18390:	ldr	r0, [sp, #8]
   18394:	ldr	r1, [sp, #4]
   18398:	add	r0, r0, r1
   1839c:	str	r0, [sp]
   183a0:	ldr	r0, [sp, #8]
   183a4:	ldr	r1, [fp, #-4]
   183a8:	add	r0, r1, r0
   183ac:	str	r0, [fp, #-4]
   183b0:	ldr	r0, [sp, #8]
   183b4:	ldr	r1, [sp, #12]
   183b8:	sub	r0, r1, r0
   183bc:	str	r0, [sp, #12]
   183c0:	ldr	r0, [sp, #4]
   183c4:	ldr	r1, [sp, #12]
   183c8:	cmp	r0, r1
   183cc:	bcc	183dc <rb_strlcat+0x7c>
   183d0:	ldr	r0, [sp, #12]
   183d4:	sub	r0, r0, #1
   183d8:	str	r0, [sp, #4]
   183dc:	ldr	r0, [fp, #-4]
   183e0:	ldr	r1, [fp, #-8]
   183e4:	ldr	r2, [sp, #4]
   183e8:	bl	51dc <memcpy@plt>
   183ec:	ldr	r0, [fp, #-4]
   183f0:	ldr	r1, [sp, #4]
   183f4:	add	r0, r0, r1
   183f8:	movw	r1, #0
   183fc:	strb	r1, [r0]
   18400:	ldr	r0, [sp]
   18404:	mov	sp, fp
   18408:	pop	{fp, pc}

0001840c <rb_strlcpy>:
   1840c:	push	{fp, lr}
   18410:	mov	fp, sp
   18414:	sub	sp, sp, #24
   18418:	str	r0, [fp, #-4]
   1841c:	str	r1, [fp, #-8]
   18420:	str	r2, [sp, #12]
   18424:	ldr	r0, [fp, #-8]
   18428:	bl	51b8 <strlen@plt>
   1842c:	str	r0, [sp, #8]
   18430:	ldr	r0, [sp, #12]
   18434:	cmp	r0, #0
   18438:	beq	18490 <rb_strlcpy+0x84>
   1843c:	ldr	r0, [sp, #8]
   18440:	ldr	r1, [sp, #12]
   18444:	cmp	r0, r1
   18448:	bcc	1845c <rb_strlcpy+0x50>
   1844c:	ldr	r0, [sp, #12]
   18450:	sub	r0, r0, #1
   18454:	str	r0, [sp]
   18458:	b	18464 <rb_strlcpy+0x58>
   1845c:	ldr	r0, [sp, #8]
   18460:	str	r0, [sp]
   18464:	ldr	r0, [sp]
   18468:	str	r0, [sp, #4]
   1846c:	ldr	r0, [fp, #-4]
   18470:	ldr	r1, [fp, #-8]
   18474:	ldr	r2, [sp, #4]
   18478:	bl	51dc <memcpy@plt>
   1847c:	ldr	r0, [fp, #-4]
   18480:	ldr	r1, [sp, #4]
   18484:	add	r0, r0, r1
   18488:	movw	r1, #0
   1848c:	strb	r1, [r0]
   18490:	ldr	r0, [sp, #8]
   18494:	mov	sp, fp
   18498:	pop	{fp, pc}

0001849c <rb_strnlen>:
   1849c:	push	{fp, lr}
   184a0:	mov	fp, sp
   184a4:	sub	sp, sp, #8
   184a8:	str	r0, [sp, #4]
   184ac:	str	r1, [sp]
   184b0:	ldr	r0, [sp, #4]
   184b4:	ldr	r1, [sp]
   184b8:	bl	53e0 <strnlen@plt>
   184bc:	mov	sp, fp
   184c0:	pop	{fp, pc}

000184c4 <rb_snprintf_append>:
   184c4:	sub	sp, sp, #4
   184c8:	push	{fp, lr}
   184cc:	mov	fp, sp
   184d0:	sub	sp, sp, #36	; 0x24
   184d4:	str	r3, [fp, #8]
   184d8:	str	r0, [fp, #-8]
   184dc:	str	r1, [fp, #-12]
   184e0:	str	r2, [fp, #-16]
   184e4:	ldr	r0, [fp, #-12]
   184e8:	cmp	r0, #0
   184ec:	bne	184fc <rb_snprintf_append+0x38>
   184f0:	mvn	r0, #0
   184f4:	str	r0, [fp, #-4]
   184f8:	b	1859c <rb_snprintf_append+0xd8>
   184fc:	ldr	r0, [fp, #-8]
   18500:	bl	51b8 <strlen@plt>
   18504:	str	r0, [sp, #16]
   18508:	ldr	r0, [fp, #-12]
   1850c:	ldr	lr, [sp, #16]
   18510:	cmp	r0, lr
   18514:	bge	18540 <rb_snprintf_append+0x7c>
   18518:	ldr	r0, [fp, #-8]
   1851c:	ldr	r1, [fp, #-12]
   18520:	sub	r1, r1, #1
   18524:	add	r0, r0, r1
   18528:	movw	r1, #0
   1852c:	strb	r1, [r0]
   18530:	ldr	r0, [fp, #-12]
   18534:	sub	r0, r0, #1
   18538:	str	r0, [fp, #-4]
   1853c:	b	1859c <rb_snprintf_append+0xd8>
   18540:	add	r0, fp, #8
   18544:	str	r0, [sp, #12]
   18548:	ldr	r0, [fp, #-8]
   1854c:	ldr	r1, [sp, #16]
   18550:	add	r0, r0, r1
   18554:	ldr	r2, [fp, #-12]
   18558:	sub	r1, r2, r1
   1855c:	ldr	r2, [fp, #-16]
   18560:	ldr	r3, [sp, #12]
   18564:	bl	4f24 <vsnprintf@plt>
   18568:	str	r0, [sp, #8]
   1856c:	add	r0, sp, #12
   18570:	ldr	r1, [sp, #8]
   18574:	cmp	r1, #0
   18578:	str	r0, [sp, #4]
   1857c:	bge	1858c <rb_snprintf_append+0xc8>
   18580:	ldr	r0, [sp, #8]
   18584:	str	r0, [fp, #-4]
   18588:	b	1859c <rb_snprintf_append+0xd8>
   1858c:	ldr	r0, [sp, #16]
   18590:	ldr	r1, [sp, #8]
   18594:	add	r0, r0, r1
   18598:	str	r0, [fp, #-4]
   1859c:	ldr	r0, [fp, #-4]
   185a0:	mov	sp, fp
   185a4:	pop	{fp, lr}
   185a8:	add	sp, sp, #4
   185ac:	bx	lr

000185b0 <rb_snprintf_try_append>:
   185b0:	sub	sp, sp, #4
   185b4:	push	{fp, lr}
   185b8:	mov	fp, sp
   185bc:	sub	sp, sp, #36	; 0x24
   185c0:	str	r3, [fp, #8]
   185c4:	str	r0, [fp, #-8]
   185c8:	str	r1, [fp, #-12]
   185cc:	str	r2, [fp, #-16]
   185d0:	ldr	r0, [fp, #-12]
   185d4:	cmp	r0, #0
   185d8:	bne	185e8 <rb_snprintf_try_append+0x38>
   185dc:	mvn	r0, #0
   185e0:	str	r0, [fp, #-4]
   185e4:	b	186c0 <rb_snprintf_try_append+0x110>
   185e8:	ldr	r0, [fp, #-8]
   185ec:	bl	51b8 <strlen@plt>
   185f0:	str	r0, [sp, #16]
   185f4:	ldr	r0, [fp, #-12]
   185f8:	ldr	lr, [sp, #16]
   185fc:	cmp	r0, lr
   18600:	bge	18628 <rb_snprintf_try_append+0x78>
   18604:	ldr	r0, [fp, #-8]
   18608:	ldr	r1, [fp, #-12]
   1860c:	sub	r1, r1, #1
   18610:	add	r0, r0, r1
   18614:	movw	r1, #0
   18618:	strb	r1, [r0]
   1861c:	mvn	r0, #0
   18620:	str	r0, [fp, #-4]
   18624:	b	186c0 <rb_snprintf_try_append+0x110>
   18628:	add	r0, fp, #8
   1862c:	str	r0, [sp, #12]
   18630:	ldr	r0, [fp, #-8]
   18634:	ldr	r1, [sp, #16]
   18638:	add	r0, r0, r1
   1863c:	ldr	r2, [fp, #-12]
   18640:	sub	r1, r2, r1
   18644:	ldr	r2, [fp, #-16]
   18648:	ldr	r3, [sp, #12]
   1864c:	bl	4f24 <vsnprintf@plt>
   18650:	str	r0, [sp, #8]
   18654:	add	r0, sp, #12
   18658:	ldr	r1, [sp, #8]
   1865c:	cmp	r1, #0
   18660:	str	r0, [sp, #4]
   18664:	bge	18674 <rb_snprintf_try_append+0xc4>
   18668:	ldr	r0, [sp, #8]
   1866c:	str	r0, [fp, #-4]
   18670:	b	186c0 <rb_snprintf_try_append+0x110>
   18674:	ldr	r0, [sp, #16]
   18678:	ldr	r1, [sp, #8]
   1867c:	add	r0, r0, r1
   18680:	ldr	r1, [fp, #-12]
   18684:	sub	r1, r1, #1
   18688:	cmp	r0, r1
   1868c:	ble	186b0 <rb_snprintf_try_append+0x100>
   18690:	ldr	r0, [fp, #-8]
   18694:	ldr	r1, [sp, #16]
   18698:	add	r0, r0, r1
   1869c:	movw	r1, #0
   186a0:	strb	r1, [r0]
   186a4:	mvn	r0, #0
   186a8:	str	r0, [fp, #-4]
   186ac:	b	186c0 <rb_snprintf_try_append+0x110>
   186b0:	ldr	r0, [sp, #16]
   186b4:	ldr	r1, [sp, #8]
   186b8:	add	r0, r0, r1
   186bc:	str	r0, [fp, #-4]
   186c0:	ldr	r0, [fp, #-4]
   186c4:	mov	sp, fp
   186c8:	pop	{fp, lr}
   186cc:	add	sp, sp, #4
   186d0:	bx	lr

000186d4 <rb_basename>:
   186d4:	push	{fp, lr}
   186d8:	mov	fp, sp
   186dc:	sub	sp, sp, #8
   186e0:	str	r0, [sp, #4]
   186e4:	ldr	r0, [sp, #4]
   186e8:	movw	r1, #47	; 0x2f
   186ec:	bl	5014 <strrchr@plt>
   186f0:	str	r0, [sp]
   186f4:	movw	r1, #0
   186f8:	cmp	r0, r1
   186fc:	bne	1870c <rb_basename+0x38>
   18700:	ldr	r0, [sp, #4]
   18704:	str	r0, [sp]
   18708:	b	18718 <rb_basename+0x44>
   1870c:	ldr	r0, [sp]
   18710:	add	r0, r0, #1
   18714:	str	r0, [sp]
   18718:	ldr	r0, [sp]
   1871c:	bl	18728 <rb_strdup>
   18720:	mov	sp, fp
   18724:	pop	{fp, pc}

00018728 <rb_strdup>:
   18728:	push	{fp, lr}
   1872c:	mov	fp, sp
   18730:	sub	sp, sp, #16
   18734:	str	r0, [fp, #-4]
   18738:	ldr	r0, [fp, #-4]
   1873c:	bl	51b8 <strlen@plt>
   18740:	add	r0, r0, #1
   18744:	bl	5374 <malloc@plt>
   18748:	str	r0, [sp, #8]
   1874c:	ldr	r0, [sp, #8]
   18750:	movw	lr, #0
   18754:	cmp	r0, lr
   18758:	movw	r0, #0
   1875c:	moveq	r0, #1
   18760:	mvn	lr, #0
   18764:	eor	r0, r0, lr
   18768:	eor	r0, r0, lr
   1876c:	tst	r0, #1
   18770:	beq	18778 <rb_strdup+0x50>
   18774:	bl	5350 <rb_outofmemory@plt>
   18778:	ldr	r0, [sp, #8]
   1877c:	ldr	r1, [fp, #-4]
   18780:	bl	5254 <strcpy@plt>
   18784:	ldr	r1, [sp, #8]
   18788:	str	r0, [sp, #4]
   1878c:	mov	r0, r1
   18790:	mov	sp, fp
   18794:	pop	{fp, pc}

00018798 <rb_dirname>:
   18798:	push	{fp, lr}
   1879c:	mov	fp, sp
   187a0:	sub	sp, sp, #16
   187a4:	str	r0, [sp, #8]
   187a8:	ldr	r0, [sp, #8]
   187ac:	movw	r1, #47	; 0x2f
   187b0:	bl	5014 <strrchr@plt>
   187b4:	str	r0, [sp, #4]
   187b8:	ldr	r0, [sp, #4]
   187bc:	movw	r1, #0
   187c0:	cmp	r0, r1
   187c4:	bne	187dc <rb_dirname+0x44>
   187c8:	ldr	r0, [pc, #136]	; 18858 <rb_dirname+0xc0>
   187cc:	add	r0, pc, r0
   187d0:	bl	18728 <rb_strdup>
   187d4:	str	r0, [fp, #-4]
   187d8:	b	1884c <rb_dirname+0xb4>
   187dc:	b	187e0 <rb_dirname+0x48>
   187e0:	ldr	r0, [sp, #4]
   187e4:	ldr	r1, [sp, #8]
   187e8:	cmp	r0, r1
   187ec:	movw	r0, #0
   187f0:	str	r0, [sp]
   187f4:	bls	18810 <rb_dirname+0x78>
   187f8:	ldr	r0, [sp, #4]
   187fc:	ldrb	r0, [r0]
   18800:	cmp	r0, #47	; 0x2f
   18804:	movw	r0, #0
   18808:	moveq	r0, #1
   1880c:	str	r0, [sp]
   18810:	ldr	r0, [sp]
   18814:	tst	r0, #1
   18818:	beq	18830 <rb_dirname+0x98>
   1881c:	ldr	r0, [sp, #4]
   18820:	mvn	r1, #0
   18824:	add	r0, r0, r1
   18828:	str	r0, [sp, #4]
   1882c:	b	187e0 <rb_dirname+0x48>
   18830:	ldr	r0, [sp, #8]
   18834:	ldr	r1, [sp, #4]
   18838:	ldr	r2, [sp, #8]
   1883c:	sub	r1, r1, r2
   18840:	add	r1, r1, #2
   18844:	bl	1885c <rb_strndup>
   18848:	str	r0, [fp, #-4]
   1884c:	ldr	r0, [fp, #-4]
   18850:	mov	sp, fp
   18854:	pop	{fp, pc}
   18858:	.word	0x0000b258

0001885c <rb_strndup>:
   1885c:	push	{fp, lr}
   18860:	mov	fp, sp
   18864:	sub	sp, sp, #16
   18868:	str	r0, [fp, #-4]
   1886c:	str	r1, [sp, #8]
   18870:	ldr	r0, [sp, #8]
   18874:	bl	5374 <malloc@plt>
   18878:	str	r0, [sp, #4]
   1887c:	ldr	r0, [sp, #4]
   18880:	movw	r1, #0
   18884:	cmp	r0, r1
   18888:	movw	r0, #0
   1888c:	moveq	r0, #1
   18890:	mvn	r1, #0
   18894:	eor	r0, r0, r1
   18898:	eor	r0, r0, r1
   1889c:	tst	r0, #1
   188a0:	beq	188a8 <rb_strndup+0x4c>
   188a4:	bl	5350 <rb_outofmemory@plt>
   188a8:	ldr	r0, [sp, #4]
   188ac:	ldr	r1, [fp, #-4]
   188b0:	ldr	r2, [sp, #8]
   188b4:	bl	5068 <rb_strlcpy@plt>
   188b8:	ldr	r1, [sp, #4]
   188bc:	str	r0, [sp]
   188c0:	mov	r0, r1
   188c4:	mov	sp, fp
   188c8:	pop	{fp, pc}

000188cc <rb_fsnprint>:
   188cc:	push	{fp, lr}
   188d0:	mov	fp, sp
   188d4:	sub	sp, sp, #40	; 0x28
   188d8:	str	r0, [fp, #-8]
   188dc:	str	r1, [fp, #-12]
   188e0:	str	r2, [fp, #-16]
   188e4:	movw	r0, #0
   188e8:	str	r0, [sp, #20]
   188ec:	ldr	r0, [fp, #-12]
   188f0:	str	r0, [sp, #16]
   188f4:	ldr	r0, [fp, #-16]
   188f8:	movw	r1, #0
   188fc:	cmp	r0, r1
   18900:	beq	18ad8 <rb_fsnprint+0x20c>
   18904:	movw	r0, #0
   18908:	str	r0, [sp, #12]
   1890c:	ldr	r0, [fp, #-16]
   18910:	ldr	r0, [r0]
   18914:	cmp	r0, #0
   18918:	beq	18954 <rb_fsnprint+0x88>
   1891c:	ldr	r0, [fp, #-16]
   18920:	ldr	r0, [r0]
   18924:	str	r0, [sp, #16]
   18928:	ldr	r0, [sp, #16]
   1892c:	ldr	r1, [fp, #-12]
   18930:	ldr	r2, [sp, #20]
   18934:	sub	r1, r1, r2
   18938:	cmp	r0, r1
   1893c:	bls	18950 <rb_fsnprint+0x84>
   18940:	ldr	r0, [fp, #-12]
   18944:	ldr	r1, [sp, #20]
   18948:	sub	r0, r0, r1
   1894c:	str	r0, [sp, #16]
   18950:	b	18954 <rb_fsnprint+0x88>
   18954:	ldr	r0, [sp, #16]
   18958:	cmp	r0, #0
   1895c:	bne	18964 <rb_fsnprint+0x98>
   18960:	b	18ad8 <rb_fsnprint+0x20c>
   18964:	ldr	r0, [fp, #-16]
   18968:	ldr	r0, [r0, #4]
   1896c:	movw	r1, #0
   18970:	cmp	r0, r1
   18974:	beq	189e8 <rb_fsnprint+0x11c>
   18978:	ldr	r0, [fp, #-16]
   1897c:	ldr	r0, [r0, #12]
   18980:	movw	r1, #0
   18984:	cmp	r0, r1
   18988:	beq	189c4 <rb_fsnprint+0xf8>
   1898c:	ldr	r0, [fp, #-8]
   18990:	ldr	r1, [sp, #20]
   18994:	add	r0, r0, r1
   18998:	ldr	r1, [sp, #16]
   1899c:	ldr	r2, [fp, #-16]
   189a0:	ldr	r3, [r2, #4]
   189a4:	ldr	r2, [r2, #12]
   189a8:	ldr	r2, [r2]
   189ac:	str	r2, [sp, #8]
   189b0:	mov	r2, r3
   189b4:	ldr	r3, [sp, #8]
   189b8:	bl	4f24 <vsnprintf@plt>
   189bc:	str	r0, [sp, #12]
   189c0:	b	189e4 <rb_fsnprint+0x118>
   189c4:	ldr	r0, [fp, #-8]
   189c8:	ldr	r1, [sp, #20]
   189cc:	add	r0, r0, r1
   189d0:	ldr	r1, [fp, #-16]
   189d4:	ldr	r1, [r1, #4]
   189d8:	ldr	r2, [sp, #16]
   189dc:	bl	5068 <rb_strlcpy@plt>
   189e0:	str	r0, [sp, #12]
   189e4:	b	18a3c <rb_fsnprint+0x170>
   189e8:	ldr	r0, [fp, #-16]
   189ec:	ldr	r0, [r0, #8]
   189f0:	movw	r1, #0
   189f4:	cmp	r0, r1
   189f8:	beq	18a38 <rb_fsnprint+0x16c>
   189fc:	ldr	r0, [fp, #-16]
   18a00:	ldr	r0, [r0, #8]
   18a04:	ldr	r1, [fp, #-8]
   18a08:	ldr	r2, [sp, #20]
   18a0c:	add	r1, r1, r2
   18a10:	ldr	r2, [sp, #16]
   18a14:	ldr	r3, [fp, #-16]
   18a18:	ldr	r3, [r3, #12]
   18a1c:	str	r0, [sp, #4]
   18a20:	mov	r0, r1
   18a24:	mov	r1, r2
   18a28:	mov	r2, r3
   18a2c:	ldr	r3, [sp, #4]
   18a30:	blx	r3
   18a34:	str	r0, [sp, #12]
   18a38:	b	18a3c <rb_fsnprint+0x170>
   18a3c:	ldr	r0, [sp, #12]
   18a40:	cmp	r0, #0
   18a44:	bge	18a54 <rb_fsnprint+0x188>
   18a48:	ldr	r0, [sp, #12]
   18a4c:	str	r0, [fp, #-4]
   18a50:	b	18ae0 <rb_fsnprint+0x214>
   18a54:	ldr	r0, [sp, #12]
   18a58:	ldr	r1, [sp, #16]
   18a5c:	sub	r1, r1, #1
   18a60:	cmp	r0, r1
   18a64:	bls	18a80 <rb_fsnprint+0x1b4>
   18a68:	ldr	r0, [sp, #16]
   18a6c:	sub	r0, r0, #1
   18a70:	ldr	r1, [sp, #20]
   18a74:	add	r0, r1, r0
   18a78:	str	r0, [sp, #20]
   18a7c:	b	18a90 <rb_fsnprint+0x1c4>
   18a80:	ldr	r0, [sp, #12]
   18a84:	ldr	r1, [sp, #20]
   18a88:	add	r0, r1, r0
   18a8c:	str	r0, [sp, #20]
   18a90:	b	18a94 <rb_fsnprint+0x1c8>
   18a94:	ldr	r0, [sp, #20]
   18a98:	ldr	r1, [fp, #-12]
   18a9c:	sub	r1, r1, #1
   18aa0:	cmp	r0, r1
   18aa4:	bcc	18ab8 <rb_fsnprint+0x1ec>
   18aa8:	ldr	r0, [fp, #-12]
   18aac:	sub	r0, r0, #1
   18ab0:	str	r0, [sp, #20]
   18ab4:	b	18ad8 <rb_fsnprint+0x20c>
   18ab8:	ldr	r0, [sp, #12]
   18abc:	ldr	r1, [sp, #16]
   18ac0:	sub	r0, r1, r0
   18ac4:	str	r0, [sp, #16]
   18ac8:	ldr	r0, [fp, #-16]
   18acc:	ldr	r0, [r0, #16]
   18ad0:	str	r0, [fp, #-16]
   18ad4:	b	188f4 <rb_fsnprint+0x28>
   18ad8:	ldr	r0, [sp, #20]
   18adc:	str	r0, [fp, #-4]
   18ae0:	ldr	r0, [fp, #-4]
   18ae4:	mov	sp, fp
   18ae8:	pop	{fp, pc}

00018aec <rb_fsnprintf>:
   18aec:	push	{fp, lr}
   18af0:	mov	fp, sp
   18af4:	sub	sp, sp, #48	; 0x30
   18af8:	str	r0, [fp, #-4]
   18afc:	str	r1, [fp, #-8]
   18b00:	str	r2, [fp, #-12]
   18b04:	str	r3, [fp, #-16]
   18b08:	movw	r0, #0
   18b0c:	str	r0, [sp, #8]
   18b10:	ldr	r1, [fp, #-16]
   18b14:	str	r1, [sp, #12]
   18b18:	str	r0, [sp, #16]
   18b1c:	sub	r0, fp, #20
   18b20:	str	r0, [sp, #20]
   18b24:	ldr	r1, [fp, #-12]
   18b28:	str	r1, [sp, #24]
   18b2c:	add	r1, fp, #8
   18b30:	str	r1, [r0]
   18b34:	ldr	r0, [fp, #-4]
   18b38:	ldr	r1, [fp, #-8]
   18b3c:	add	r2, sp, #8
   18b40:	bl	505c <rb_fsnprint@plt>
   18b44:	str	r0, [sp, #4]
   18b48:	sub	r0, fp, #20
   18b4c:	ldr	r1, [sp, #4]
   18b50:	str	r0, [sp]
   18b54:	mov	r0, r1
   18b58:	mov	sp, fp
   18b5c:	pop	{fp, pc}

00018b60 <rb_helper_child>:
   18b60:	push	{r4, r5, r6, sl, fp, lr}
   18b64:	add	fp, sp, #16
   18b68:	sub	sp, sp, #112	; 0x70
   18b6c:	ldr	ip, [fp, #20]
   18b70:	ldr	lr, [fp, #16]
   18b74:	ldr	r4, [fp, #12]
   18b78:	ldr	r5, [fp, #8]
   18b7c:	ldr	r6, [pc, #716]	; 18e50 <rb_helper_child+0x2f0>
   18b80:	add	r6, pc, r6
   18b84:	str	r0, [fp, #-24]	; 0xffffffe8
   18b88:	str	r1, [fp, #-28]	; 0xffffffe4
   18b8c:	str	r2, [fp, #-32]	; 0xffffffe0
   18b90:	str	r3, [fp, #-36]	; 0xffffffdc
   18b94:	movw	r0, #0
   18b98:	str	r0, [fp, #-48]	; 0xffffffd0
   18b9c:	mov	r0, r6
   18ba0:	str	r5, [sp, #56]	; 0x38
   18ba4:	str	lr, [sp, #52]	; 0x34
   18ba8:	str	r4, [sp, #48]	; 0x30
   18bac:	str	ip, [sp, #44]	; 0x2c
   18bb0:	bl	4f60 <getenv@plt>
   18bb4:	ldr	r1, [pc, #656]	; 18e4c <rb_helper_child+0x2ec>
   18bb8:	add	r1, pc, r1
   18bbc:	str	r0, [fp, #-60]	; 0xffffffc4
   18bc0:	mov	r0, r1
   18bc4:	bl	4f60 <getenv@plt>
   18bc8:	ldr	r1, [pc, #632]	; 18e48 <rb_helper_child+0x2e8>
   18bcc:	add	r1, pc, r1
   18bd0:	str	r0, [sp, #64]	; 0x40
   18bd4:	mov	r0, r1
   18bd8:	bl	4f60 <getenv@plt>
   18bdc:	str	r0, [sp, #60]	; 0x3c
   18be0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18be4:	movw	r1, #0
   18be8:	cmp	r0, r1
   18bec:	beq	18c10 <rb_helper_child+0xb0>
   18bf0:	ldr	r0, [sp, #64]	; 0x40
   18bf4:	movw	r1, #0
   18bf8:	cmp	r0, r1
   18bfc:	beq	18c10 <rb_helper_child+0xb0>
   18c00:	ldr	r0, [sp, #60]	; 0x3c
   18c04:	movw	r1, #0
   18c08:	cmp	r0, r1
   18c0c:	bne	18c1c <rb_helper_child+0xbc>
   18c10:	movw	r0, #0
   18c14:	str	r0, [fp, #-20]	; 0xffffffec
   18c18:	b	18e3c <rb_helper_child+0x2dc>
   18c1c:	movw	r0, #84	; 0x54
   18c20:	bl	18e60 <rb_malloc>
   18c24:	str	r0, [fp, #-40]	; 0xffffffd8
   18c28:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18c2c:	movw	r1, #0
   18c30:	movw	r2, #10
   18c34:	bl	523c <strtol@plt>
   18c38:	str	r0, [fp, #-52]	; 0xffffffcc
   18c3c:	ldr	r0, [sp, #64]	; 0x40
   18c40:	movw	r1, #0
   18c44:	movw	r2, #10
   18c48:	bl	523c <strtol@plt>
   18c4c:	str	r0, [fp, #-56]	; 0xffffffc8
   18c50:	ldr	r0, [sp, #60]	; 0x3c
   18c54:	movw	r1, #0
   18c58:	movw	r2, #10
   18c5c:	bl	523c <strtol@plt>
   18c60:	str	r0, [fp, #-44]	; 0xffffffd4
   18c64:	movw	r0, #0
   18c68:	str	r0, [fp, #-48]	; 0xffffffd0
   18c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18c70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18c74:	cmp	r0, r1
   18c78:	bge	18cbc <rb_helper_child+0x15c>
   18c7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18c80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18c84:	cmp	r0, r1
   18c88:	beq	18ca8 <rb_helper_child+0x148>
   18c8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18c90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18c94:	cmp	r0, r1
   18c98:	beq	18ca8 <rb_helper_child+0x148>
   18c9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18ca0:	bl	5308 <close@plt>
   18ca4:	str	r0, [sp, #40]	; 0x28
   18ca8:	b	18cac <rb_helper_child+0x14c>
   18cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18cb0:	add	r0, r0, #1
   18cb4:	str	r0, [fp, #-48]	; 0xffffffd0
   18cb8:	b	18c6c <rb_helper_child+0x10c>
   18cbc:	ldr	r0, [pc, #400]	; 18e54 <rb_helper_child+0x2f4>
   18cc0:	add	r0, pc, r0
   18cc4:	movw	r1, #2
   18cc8:	bl	4d38 <open@plt>
   18ccc:	str	r0, [fp, #-48]	; 0xffffffd0
   18cd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18cd4:	cmp	r0, #0
   18cd8:	beq	18cf8 <rb_helper_child+0x198>
   18cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ce0:	cmp	r0, #0
   18ce4:	beq	18cf8 <rb_helper_child+0x198>
   18ce8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18cec:	movw	r1, #0
   18cf0:	bl	5488 <dup2@plt>
   18cf4:	str	r0, [sp, #36]	; 0x24
   18cf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18cfc:	cmp	r0, #1
   18d00:	beq	18d20 <rb_helper_child+0x1c0>
   18d04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d08:	cmp	r0, #1
   18d0c:	beq	18d20 <rb_helper_child+0x1c0>
   18d10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d14:	movw	r1, #1
   18d18:	bl	5488 <dup2@plt>
   18d1c:	str	r0, [sp, #32]
   18d20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18d24:	cmp	r0, #2
   18d28:	beq	18d48 <rb_helper_child+0x1e8>
   18d2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d30:	cmp	r0, #2
   18d34:	beq	18d48 <rb_helper_child+0x1e8>
   18d38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d3c:	movw	r1, #2
   18d40:	bl	5488 <dup2@plt>
   18d44:	str	r0, [sp, #28]
   18d48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d4c:	cmp	r0, #2
   18d50:	ble	18d60 <rb_helper_child+0x200>
   18d54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d58:	bl	5308 <close@plt>
   18d5c:	str	r0, [sp, #24]
   18d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d64:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d68:	ldr	r2, [fp, #8]
   18d6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18d70:	ldr	ip, [fp, #16]
   18d74:	ldr	lr, [fp, #20]
   18d78:	movw	r4, #0
   18d7c:	str	r3, [sp, #20]
   18d80:	mov	r3, r4
   18d84:	ldr	r4, [sp, #20]
   18d88:	str	r4, [sp]
   18d8c:	str	ip, [sp, #4]
   18d90:	str	lr, [sp, #8]
   18d94:	bl	5404 <rb_lib_init@plt>
   18d98:	ldr	r0, [fp, #12]
   18d9c:	bl	5524 <rb_linebuf_init@plt>
   18da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18da4:	add	r0, r0, #4
   18da8:	bl	54b8 <rb_linebuf_newbuf@plt>
   18dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18db0:	add	r0, r0, #32
   18db4:	bl	54b8 <rb_linebuf_newbuf@plt>
   18db8:	ldr	r0, [pc, #156]	; 18e5c <rb_helper_child+0x2fc>
   18dbc:	add	r2, pc, r0
   18dc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18dc4:	movw	r1, #8
   18dc8:	and	r1, r1, #255	; 0xff
   18dcc:	bl	544c <rb_open@plt>
   18dd0:	ldr	r1, [pc, #128]	; 18e58 <rb_helper_child+0x2f8>
   18dd4:	add	r2, pc, r1
   18dd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ddc:	str	r0, [r1, #60]	; 0x3c
   18de0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18de4:	movw	r1, #8
   18de8:	and	r1, r1, #255	; 0xff
   18dec:	bl	544c <rb_open@plt>
   18df0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18df4:	str	r0, [r1, #64]	; 0x40
   18df8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18dfc:	ldr	r0, [r0, #60]	; 0x3c
   18e00:	bl	4fe4 <rb_set_nb@plt>
   18e04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e08:	ldr	r1, [r1, #64]	; 0x40
   18e0c:	str	r0, [sp, #16]
   18e10:	mov	r0, r1
   18e14:	bl	4fe4 <rb_set_nb@plt>
   18e18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e20:	str	r1, [r2, #76]	; 0x4c
   18e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e2c:	str	r1, [r2, #80]	; 0x50
   18e30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e34:	str	r1, [fp, #-20]	; 0xffffffec
   18e38:	str	r0, [sp, #12]
   18e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e40:	sub	sp, fp, #16
   18e44:	pop	{r4, r5, r6, sl, fp, pc}
   18e48:	.word	0x0000ae94
   18e4c:	.word	0x0000aea4
   18e50:	.word	0x0000aed8
   18e54:	.word	0x0000ada6
   18e58:	.word	0x0000acb0
   18e5c:	.word	0x0000acb4

00018e60 <rb_malloc>:
   18e60:	push	{fp, lr}
   18e64:	mov	fp, sp
   18e68:	sub	sp, sp, #8
   18e6c:	str	r0, [sp, #4]
   18e70:	ldr	r1, [sp, #4]
   18e74:	movw	r0, #1
   18e78:	bl	4fb4 <calloc@plt>
   18e7c:	str	r0, [sp]
   18e80:	ldr	r0, [sp]
   18e84:	movw	r1, #0
   18e88:	cmp	r0, r1
   18e8c:	movw	r0, #0
   18e90:	moveq	r0, #1
   18e94:	mvn	r1, #0
   18e98:	eor	r0, r0, r1
   18e9c:	eor	r0, r0, r1
   18ea0:	tst	r0, #1
   18ea4:	beq	18eac <rb_malloc+0x4c>
   18ea8:	bl	5350 <rb_outofmemory@plt>
   18eac:	ldr	r0, [sp]
   18eb0:	mov	sp, fp
   18eb4:	pop	{fp, pc}

00018eb8 <rb_helper_start>:
   18eb8:	push	{r4, r5, fp, lr}
   18ebc:	add	fp, sp, #8
   18ec0:	sub	sp, sp, #280	; 0x118
   18ec4:	str	r0, [fp, #-16]
   18ec8:	str	r1, [fp, #-20]	; 0xffffffec
   18ecc:	str	r2, [fp, #-24]	; 0xffffffe8
   18ed0:	str	r3, [fp, #-28]	; 0xffffffe4
   18ed4:	ldr	r0, [fp, #-20]	; 0xffffffec
   18ed8:	movw	r1, #1
   18edc:	bl	5110 <access@plt>
   18ee0:	cmn	r0, #1
   18ee4:	bne	18ef4 <rb_helper_start+0x3c>
   18ee8:	movw	r0, #0
   18eec:	str	r0, [fp, #-12]
   18ef0:	b	191b4 <rb_helper_start+0x2fc>
   18ef4:	movw	r0, #84	; 0x54
   18ef8:	bl	18e60 <rb_malloc>
   18efc:	ldr	lr, [pc, #700]	; 191c0 <rb_helper_start+0x308>
   18f00:	add	r2, pc, lr
   18f04:	add	lr, sp, #120	; 0x78
   18f08:	str	r0, [fp, #-32]	; 0xffffffe0
   18f0c:	ldr	r3, [fp, #-16]
   18f10:	mov	r0, lr
   18f14:	movw	r1, #128	; 0x80
   18f18:	bl	5584 <snprintf@plt>
   18f1c:	add	r2, sp, #120	; 0x78
   18f20:	add	r1, sp, #80	; 0x50
   18f24:	add	r3, r1, #4
   18f28:	str	r0, [sp, #64]	; 0x40
   18f2c:	mov	r0, r1
   18f30:	mov	r1, r3
   18f34:	bl	5338 <rb_pipe@plt>
   18f38:	cmp	r0, #0
   18f3c:	bge	18f54 <rb_helper_start+0x9c>
   18f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f44:	bl	191e4 <rb_free>
   18f48:	movw	r0, #0
   18f4c:	str	r0, [fp, #-12]
   18f50:	b	191b4 <rb_helper_start+0x2fc>
   18f54:	ldr	r0, [pc, #616]	; 191c4 <rb_helper_start+0x30c>
   18f58:	add	r2, pc, r0
   18f5c:	add	r0, sp, #120	; 0x78
   18f60:	ldr	r3, [fp, #-16]
   18f64:	movw	r1, #128	; 0x80
   18f68:	bl	5584 <snprintf@plt>
   18f6c:	add	r2, sp, #120	; 0x78
   18f70:	add	r1, sp, #72	; 0x48
   18f74:	add	r3, r1, #4
   18f78:	str	r0, [sp, #60]	; 0x3c
   18f7c:	mov	r0, r1
   18f80:	mov	r1, r3
   18f84:	bl	5338 <rb_pipe@plt>
   18f88:	cmp	r0, #0
   18f8c:	bge	18fa4 <rb_helper_start+0xec>
   18f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f94:	bl	191e4 <rb_free>
   18f98:	movw	r0, #0
   18f9c:	str	r0, [fp, #-12]
   18fa0:	b	191b4 <rb_helper_start+0x2fc>
   18fa4:	add	r0, sp, #104	; 0x68
   18fa8:	ldr	r1, [sp, #84]	; 0x54
   18fac:	str	r0, [sp, #56]	; 0x38
   18fb0:	mov	r0, r1
   18fb4:	bl	4ea0 <rb_get_fd@plt>
   18fb8:	ldr	r1, [pc, #544]	; 191e0 <rb_helper_start+0x328>
   18fbc:	add	r2, pc, r1
   18fc0:	ldr	r1, [sp, #56]	; 0x38
   18fc4:	str	r0, [sp, #52]	; 0x34
   18fc8:	mov	r0, r1
   18fcc:	movw	r1, #16
   18fd0:	ldr	r3, [sp, #52]	; 0x34
   18fd4:	bl	5584 <snprintf@plt>
   18fd8:	add	r1, sp, #88	; 0x58
   18fdc:	ldr	r2, [sp, #72]	; 0x48
   18fe0:	str	r0, [sp, #48]	; 0x30
   18fe4:	mov	r0, r2
   18fe8:	str	r1, [sp, #44]	; 0x2c
   18fec:	bl	4ea0 <rb_get_fd@plt>
   18ff0:	ldr	r1, [pc, #484]	; 191dc <rb_helper_start+0x324>
   18ff4:	add	r2, pc, r1
   18ff8:	ldr	r1, [sp, #44]	; 0x2c
   18ffc:	str	r0, [sp, #40]	; 0x28
   19000:	mov	r0, r1
   19004:	movw	r1, #16
   19008:	ldr	r3, [sp, #40]	; 0x28
   1900c:	bl	5584 <snprintf@plt>
   19010:	ldr	r1, [sp, #80]	; 0x50
   19014:	str	r0, [sp, #36]	; 0x24
   19018:	mov	r0, r1
   1901c:	bl	4fe4 <rb_set_nb@plt>
   19020:	ldr	r1, [sp, #84]	; 0x54
   19024:	str	r0, [sp, #32]
   19028:	mov	r0, r1
   1902c:	bl	4fe4 <rb_set_nb@plt>
   19030:	ldr	r1, [sp, #72]	; 0x48
   19034:	str	r0, [sp, #28]
   19038:	mov	r0, r1
   1903c:	bl	4fe4 <rb_set_nb@plt>
   19040:	ldr	r1, [sp, #76]	; 0x4c
   19044:	str	r0, [sp, #24]
   19048:	mov	r0, r1
   1904c:	bl	4fe4 <rb_set_nb@plt>
   19050:	ldr	r1, [pc, #384]	; 191d8 <rb_helper_start+0x320>
   19054:	add	r1, pc, r1
   19058:	add	r2, sp, #88	; 0x58
   1905c:	str	r0, [sp, #20]
   19060:	mov	r0, r1
   19064:	mov	r1, r2
   19068:	movw	r2, #1
   1906c:	bl	4e88 <rb_setenv@plt>
   19070:	ldr	r1, [pc, #348]	; 191d4 <rb_helper_start+0x31c>
   19074:	add	r1, pc, r1
   19078:	add	r2, sp, #104	; 0x68
   1907c:	str	r0, [sp, #16]
   19080:	mov	r0, r1
   19084:	mov	r1, r2
   19088:	movw	r2, #1
   1908c:	bl	4e88 <rb_setenv@plt>
   19090:	ldr	r1, [pc, #308]	; 191cc <rb_helper_start+0x314>
   19094:	add	r1, pc, r1
   19098:	ldr	r2, [pc, #304]	; 191d0 <rb_helper_start+0x318>
   1909c:	add	r2, pc, r2
   190a0:	str	r0, [sp, #12]
   190a4:	mov	r0, r1
   190a8:	mov	r1, r2
   190ac:	movw	r2, #1
   190b0:	bl	4e88 <rb_setenv@plt>
   190b4:	ldr	r1, [pc, #268]	; 191c8 <rb_helper_start+0x310>
   190b8:	add	r2, pc, r1
   190bc:	add	r1, sp, #120	; 0x78
   190c0:	ldr	r3, [fp, #-16]
   190c4:	str	r0, [sp, #8]
   190c8:	mov	r0, r1
   190cc:	movw	r1, #128	; 0x80
   190d0:	bl	5584 <snprintf@plt>
   190d4:	sub	r1, fp, #40	; 0x28
   190d8:	add	r2, sp, #120	; 0x78
   190dc:	str	r2, [fp, #-40]	; 0xffffffd8
   190e0:	movw	r2, #0
   190e4:	str	r2, [fp, #-36]	; 0xffffffdc
   190e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   190ec:	str	r0, [sp, #4]
   190f0:	mov	r0, r2
   190f4:	bl	556c <rb_spawn_process@plt>
   190f8:	str	r0, [sp, #68]	; 0x44
   190fc:	ldr	r0, [sp, #68]	; 0x44
   19100:	cmn	r0, #1
   19104:	bne	1913c <rb_helper_start+0x284>
   19108:	ldr	r0, [sp, #80]	; 0x50
   1910c:	bl	5230 <rb_close@plt>
   19110:	ldr	r0, [sp, #84]	; 0x54
   19114:	bl	5230 <rb_close@plt>
   19118:	ldr	r0, [sp, #72]	; 0x48
   1911c:	bl	5230 <rb_close@plt>
   19120:	ldr	r0, [sp, #76]	; 0x4c
   19124:	bl	5230 <rb_close@plt>
   19128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1912c:	bl	191e4 <rb_free>
   19130:	movw	r0, #0
   19134:	str	r0, [fp, #-12]
   19138:	b	191b4 <rb_helper_start+0x2fc>
   1913c:	ldr	r0, [sp, #84]	; 0x54
   19140:	bl	5230 <rb_close@plt>
   19144:	ldr	r0, [sp, #72]	; 0x48
   19148:	bl	5230 <rb_close@plt>
   1914c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19150:	add	r0, r0, #4
   19154:	bl	54b8 <rb_linebuf_newbuf@plt>
   19158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1915c:	add	r0, r0, #32
   19160:	bl	54b8 <rb_linebuf_newbuf@plt>
   19164:	ldr	r0, [sp, #80]	; 0x50
   19168:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1916c:	str	r0, [lr, #60]	; 0x3c
   19170:	ldr	r0, [sp, #76]	; 0x4c
   19174:	ldr	lr, [fp, #-32]	; 0xffffffe0
   19178:	str	r0, [lr, #64]	; 0x40
   1917c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19180:	ldr	lr, [fp, #-32]	; 0xffffffe0
   19184:	str	r0, [lr, #76]	; 0x4c
   19188:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1918c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   19190:	str	r0, [lr, #80]	; 0x50
   19194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19198:	movw	lr, #0
   1919c:	str	lr, [r0, #72]	; 0x48
   191a0:	ldr	r0, [sp, #68]	; 0x44
   191a4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   191a8:	str	r0, [lr, #68]	; 0x44
   191ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191b0:	str	r0, [fp, #-12]
   191b4:	ldr	r0, [fp, #-12]
   191b8:	sub	sp, fp, #8
   191bc:	pop	{r4, r5, fp, pc}
   191c0:	.word	0x0000ab98
   191c4:	.word	0x0000ab51
   191c8:	.word	0x0000aa07
   191cc:	.word	0x0000a9cc
   191d0:	.word	0x0000aa1f
   191d4:	.word	0x0000a9e8
   191d8:	.word	0x0000aa04
   191dc:	.word	0x00009e18
   191e0:	.word	0x00009e50

000191e4 <rb_free>:
   191e4:	push	{fp, lr}
   191e8:	mov	fp, sp
   191ec:	sub	sp, sp, #8
   191f0:	str	r0, [sp, #4]
   191f4:	ldr	r0, [sp, #4]
   191f8:	movw	r1, #0
   191fc:	cmp	r0, r1
   19200:	movw	r0, #0
   19204:	movne	r0, #1
   19208:	mvn	r1, #0
   1920c:	eor	r0, r0, r1
   19210:	eor	r0, r0, r1
   19214:	tst	r0, #1
   19218:	beq	19224 <rb_free+0x40>
   1921c:	ldr	r0, [sp, #4]
   19220:	bl	50c8 <free@plt>
   19224:	mov	sp, fp
   19228:	pop	{fp, pc}

0001922c <rb_helper_restart>:
   1922c:	push	{fp, lr}
   19230:	mov	fp, sp
   19234:	sub	sp, sp, #8
   19238:	str	r0, [sp, #4]
   1923c:	ldr	r0, [sp, #4]
   19240:	ldr	r0, [r0, #80]	; 0x50
   19244:	ldr	r1, [sp, #4]
   19248:	str	r0, [sp]
   1924c:	mov	r0, r1
   19250:	ldr	r1, [sp]
   19254:	blx	r1
   19258:	mov	sp, fp
   1925c:	pop	{fp, pc}

00019260 <rb_helper_write_queue>:
   19260:	sub	sp, sp, #8
   19264:	push	{fp, lr}
   19268:	mov	fp, sp
   1926c:	sub	sp, sp, #40	; 0x28
   19270:	str	r3, [fp, #12]
   19274:	str	r2, [fp, #8]
   19278:	str	r0, [fp, #-4]
   1927c:	str	r1, [fp, #-8]
   19280:	movw	r0, #0
   19284:	str	r0, [sp, #8]
   19288:	ldr	r1, [fp, #-8]
   1928c:	str	r1, [sp, #12]
   19290:	str	r0, [sp, #16]
   19294:	sub	r1, fp, #12
   19298:	str	r1, [sp, #20]
   1929c:	str	r0, [sp, #24]
   192a0:	add	r0, fp, #8
   192a4:	str	r0, [r1]
   192a8:	ldr	r0, [fp, #-4]
   192ac:	add	r0, r0, #4
   192b0:	add	r1, sp, #8
   192b4:	bl	55c0 <rb_linebuf_put@plt>
   192b8:	sub	r0, fp, #12
   192bc:	str	r0, [sp, #4]
   192c0:	mov	sp, fp
   192c4:	pop	{fp, lr}
   192c8:	add	sp, sp, #8
   192cc:	bx	lr

000192d0 <rb_helper_write_flush>:
   192d0:	push	{fp, lr}
   192d4:	mov	fp, sp
   192d8:	sub	sp, sp, #8
   192dc:	str	r0, [sp, #4]
   192e0:	ldr	r0, [sp, #4]
   192e4:	ldr	r0, [r0, #64]	; 0x40
   192e8:	ldr	r1, [sp, #4]
   192ec:	bl	192f8 <rb_helper_write_sendq>
   192f0:	mov	sp, fp
   192f4:	pop	{fp, pc}

000192f8 <rb_helper_write_sendq>:
   192f8:	push	{fp, lr}
   192fc:	mov	fp, sp
   19300:	sub	sp, sp, #24
   19304:	str	r0, [fp, #-4]
   19308:	str	r1, [fp, #-8]
   1930c:	ldr	r0, [fp, #-8]
   19310:	str	r0, [sp, #12]
   19314:	ldr	r0, [sp, #12]
   19318:	ldr	r0, [r0, #16]
   1931c:	cmp	r0, #0
   19320:	ble	19384 <rb_helper_write_sendq+0x8c>
   19324:	b	19328 <rb_helper_write_sendq+0x30>
   19328:	ldr	r0, [fp, #-4]
   1932c:	ldr	r1, [sp, #12]
   19330:	add	r1, r1, #4
   19334:	bl	51a0 <rb_linebuf_flush@plt>
   19338:	str	r0, [sp, #8]
   1933c:	cmp	r0, #0
   19340:	ble	19348 <rb_helper_write_sendq+0x50>
   19344:	b	19328 <rb_helper_write_sendq+0x30>
   19348:	ldr	r0, [sp, #8]
   1934c:	cmp	r0, #0
   19350:	beq	19374 <rb_helper_write_sendq+0x7c>
   19354:	ldr	r0, [sp, #8]
   19358:	cmp	r0, #0
   1935c:	bge	19380 <rb_helper_write_sendq+0x88>
   19360:	bl	56c8 <__errno_location@plt>
   19364:	ldr	r0, [r0]
   19368:	bl	4d98 <rb_ignore_errno@plt>
   1936c:	cmp	r0, #0
   19370:	bne	19380 <rb_helper_write_sendq+0x88>
   19374:	ldr	r0, [sp, #12]
   19378:	bl	4f9c <rb_helper_restart@plt>
   1937c:	b	193bc <rb_helper_write_sendq+0xc4>
   19380:	b	19384 <rb_helper_write_sendq+0x8c>
   19384:	ldr	r0, [sp, #12]
   19388:	ldr	r0, [r0, #16]
   1938c:	cmp	r0, #0
   19390:	ble	193bc <rb_helper_write_sendq+0xc4>
   19394:	ldr	r0, [pc, #40]	; 193c4 <rb_helper_write_sendq+0xcc>
   19398:	add	r2, pc, r0
   1939c:	ldr	r0, [sp, #12]
   193a0:	ldr	r0, [r0, #64]	; 0x40
   193a4:	ldr	r1, [sp, #12]
   193a8:	movw	r3, #2
   193ac:	str	r1, [sp, #4]
   193b0:	mov	r1, r3
   193b4:	ldr	r3, [sp, #4]
   193b8:	bl	4e64 <rb_setselect@plt>
   193bc:	mov	sp, fp
   193c0:	pop	{fp, pc}
   193c4:	.word	0xffffff58

000193c8 <rb_helper_write>:
   193c8:	sub	sp, sp, #8
   193cc:	push	{fp, lr}
   193d0:	mov	fp, sp
   193d4:	sub	sp, sp, #40	; 0x28
   193d8:	str	r3, [fp, #12]
   193dc:	str	r2, [fp, #8]
   193e0:	str	r0, [fp, #-4]
   193e4:	str	r1, [fp, #-8]
   193e8:	movw	r0, #0
   193ec:	str	r0, [sp, #8]
   193f0:	ldr	r1, [fp, #-8]
   193f4:	str	r1, [sp, #12]
   193f8:	str	r0, [sp, #16]
   193fc:	sub	r1, fp, #12
   19400:	str	r1, [sp, #20]
   19404:	str	r0, [sp, #24]
   19408:	add	r0, fp, #8
   1940c:	str	r0, [r1]
   19410:	ldr	r0, [fp, #-4]
   19414:	add	r0, r0, #4
   19418:	add	r1, sp, #8
   1941c:	bl	55c0 <rb_linebuf_put@plt>
   19420:	sub	r0, fp, #12
   19424:	ldr	r1, [fp, #-4]
   19428:	str	r0, [sp, #4]
   1942c:	mov	r0, r1
   19430:	bl	192d0 <rb_helper_write_flush>
   19434:	mov	sp, fp
   19438:	pop	{fp, lr}
   1943c:	add	sp, sp, #8
   19440:	bx	lr

00019444 <rb_helper_run>:
   19444:	push	{fp, lr}
   19448:	mov	fp, sp
   1944c:	sub	sp, sp, #8
   19450:	str	r0, [sp, #4]
   19454:	ldr	r0, [sp, #4]
   19458:	movw	r1, #0
   1945c:	cmp	r0, r1
   19460:	bne	19468 <rb_helper_run+0x24>
   19464:	b	19478 <rb_helper_run+0x34>
   19468:	ldr	r0, [sp, #4]
   1946c:	ldr	r0, [r0, #60]	; 0x3c
   19470:	ldr	r1, [sp, #4]
   19474:	bl	19480 <rb_helper_read_cb>
   19478:	mov	sp, fp
   1947c:	pop	{fp, pc}

00019480 <rb_helper_read_cb>:
   19480:	push	{fp, lr}
   19484:	mov	fp, sp
   19488:	sub	sp, sp, #24
   1948c:	str	r0, [fp, #-4]
   19490:	str	r1, [fp, #-8]
   19494:	ldr	r0, [fp, #-8]
   19498:	str	r0, [sp, #12]
   1949c:	ldr	r0, [sp, #12]
   194a0:	movw	r1, #0
   194a4:	cmp	r0, r1
   194a8:	bne	194b0 <rb_helper_read_cb+0x30>
   194ac:	b	19570 <rb_helper_read_cb+0xf0>
   194b0:	b	194b4 <rb_helper_read_cb+0x34>
   194b4:	ldr	r0, [pc, #188]	; 19578 <rb_helper_read_cb+0xf8>
   194b8:	add	r1, pc, r0
   194bc:	ldr	r0, [sp, #12]
   194c0:	ldr	r0, [r0, #60]	; 0x3c
   194c4:	movw	r2, #32768	; 0x8000
   194c8:	bl	5158 <rb_read@plt>
   194cc:	str	r0, [sp, #8]
   194d0:	cmp	r0, #0
   194d4:	ble	19510 <rb_helper_read_cb+0x90>
   194d8:	ldr	r0, [pc, #160]	; 19580 <rb_helper_read_cb+0x100>
   194dc:	add	r1, pc, r0
   194e0:	ldr	r0, [sp, #12]
   194e4:	add	r0, r0, #32
   194e8:	ldr	r2, [sp, #8]
   194ec:	movw	r3, #0
   194f0:	bl	5044 <rb_linebuf_parse@plt>
   194f4:	ldr	r1, [sp, #12]
   194f8:	ldr	r1, [r1, #76]	; 0x4c
   194fc:	ldr	r2, [sp, #12]
   19500:	str	r0, [sp, #4]
   19504:	mov	r0, r2
   19508:	blx	r1
   1950c:	b	194b4 <rb_helper_read_cb+0x34>
   19510:	ldr	r0, [sp, #8]
   19514:	cmp	r0, #0
   19518:	beq	1953c <rb_helper_read_cb+0xbc>
   1951c:	ldr	r0, [sp, #8]
   19520:	cmp	r0, #0
   19524:	bge	19548 <rb_helper_read_cb+0xc8>
   19528:	bl	56c8 <__errno_location@plt>
   1952c:	ldr	r0, [r0]
   19530:	bl	4d98 <rb_ignore_errno@plt>
   19534:	cmp	r0, #0
   19538:	bne	19548 <rb_helper_read_cb+0xc8>
   1953c:	ldr	r0, [sp, #12]
   19540:	bl	4f9c <rb_helper_restart@plt>
   19544:	b	19570 <rb_helper_read_cb+0xf0>
   19548:	ldr	r0, [pc, #44]	; 1957c <rb_helper_read_cb+0xfc>
   1954c:	add	r2, pc, r0
   19550:	ldr	r0, [sp, #12]
   19554:	ldr	r0, [r0, #60]	; 0x3c
   19558:	ldr	r1, [sp, #12]
   1955c:	movw	r3, #1
   19560:	str	r1, [sp]
   19564:	mov	r1, r3
   19568:	ldr	r3, [sp]
   1956c:	bl	4e64 <rb_setselect@plt>
   19570:	mov	sp, fp
   19574:	pop	{fp, pc}
   19578:	.word	0x00031390
   1957c:	.word	0xffffff2c
   19580:	.word	0x0003136c

00019584 <rb_helper_close>:
   19584:	push	{fp, lr}
   19588:	mov	fp, sp
   1958c:	sub	sp, sp, #8
   19590:	str	r0, [sp, #4]
   19594:	ldr	r0, [sp, #4]
   19598:	movw	r1, #0
   1959c:	cmp	r0, r1
   195a0:	bne	195a8 <rb_helper_close+0x24>
   195a4:	b	195e0 <rb_helper_close+0x5c>
   195a8:	ldr	r0, [sp, #4]
   195ac:	ldr	r0, [r0, #68]	; 0x44
   195b0:	movw	r1, #9
   195b4:	bl	50bc <rb_kill@plt>
   195b8:	ldr	r1, [sp, #4]
   195bc:	ldr	r1, [r1, #60]	; 0x3c
   195c0:	str	r0, [sp]
   195c4:	mov	r0, r1
   195c8:	bl	5230 <rb_close@plt>
   195cc:	ldr	r0, [sp, #4]
   195d0:	ldr	r0, [r0, #64]	; 0x40
   195d4:	bl	5230 <rb_close@plt>
   195d8:	ldr	r0, [sp, #4]
   195dc:	bl	191e4 <rb_free>
   195e0:	mov	sp, fp
   195e4:	pop	{fp, pc}

000195e8 <rb_helper_read>:
   195e8:	push	{fp, lr}
   195ec:	mov	fp, sp
   195f0:	sub	sp, sp, #24
   195f4:	str	r0, [fp, #-4]
   195f8:	str	r1, [fp, #-8]
   195fc:	str	r2, [sp, #12]
   19600:	ldr	r0, [fp, #-4]
   19604:	add	r0, r0, #32
   19608:	ldr	r1, [fp, #-8]
   1960c:	ldr	r2, [sp, #12]
   19610:	movw	r3, #0
   19614:	str	r3, [sp, #8]
   19618:	ldr	ip, [sp, #8]
   1961c:	str	ip, [sp]
   19620:	bl	5170 <rb_linebuf_get@plt>
   19624:	mov	sp, fp
   19628:	pop	{fp, pc}

0001962c <rb_helper_loop>:
   1962c:	push	{fp, lr}
   19630:	mov	fp, sp
   19634:	sub	sp, sp, #8
   19638:	str	r0, [sp, #4]
   1963c:	str	r1, [sp]
   19640:	ldr	r0, [sp, #4]
   19644:	bl	4d20 <rb_helper_run@plt>
   19648:	ldr	r0, [sp]
   1964c:	bl	511c <rb_lib_loop@plt>

00019650 <rb_init_netio_devpoll>:
   19650:	movw	r0, #38	; 0x26
   19654:	bx	lr

00019658 <rb_setselect_devpoll>:
   19658:	push	{fp, lr}
   1965c:	mov	fp, sp
   19660:	sub	sp, sp, #16
   19664:	str	r0, [fp, #-4]
   19668:	str	r1, [sp, #8]
   1966c:	str	r2, [sp, #4]
   19670:	str	r3, [sp]
   19674:	bl	56c8 <__errno_location@plt>
   19678:	movw	r1, #38	; 0x26
   1967c:	str	r1, [r0]
   19680:	mov	sp, fp
   19684:	pop	{fp, pc}

00019688 <rb_select_devpoll>:
   19688:	push	{fp, lr}
   1968c:	mov	fp, sp
   19690:	sub	sp, sp, #8
   19694:	str	r0, [sp, #4]
   19698:	bl	56c8 <__errno_location@plt>
   1969c:	movw	lr, #38	; 0x26
   196a0:	str	lr, [r0]
   196a4:	mvn	r0, #0
   196a8:	mov	sp, fp
   196ac:	pop	{fp, pc}

000196b0 <rb_setup_fd_devpoll>:
   196b0:	push	{fp, lr}
   196b4:	mov	fp, sp
   196b8:	sub	sp, sp, #8
   196bc:	str	r0, [sp, #4]
   196c0:	bl	56c8 <__errno_location@plt>
   196c4:	movw	lr, #38	; 0x26
   196c8:	str	lr, [r0]
   196cc:	mvn	r0, #0
   196d0:	mov	sp, fp
   196d4:	pop	{fp, pc}

000196d8 <rb_init_netio_epoll>:
   196d8:	push	{fp, lr}
   196dc:	mov	fp, sp
   196e0:	sub	sp, sp, #8
   196e4:	ldr	r0, [pc, #220]	; 197c8 <rb_init_netio_epoll+0xf0>
   196e8:	add	r0, pc, r0
   196ec:	ldr	r1, [pc, #216]	; 197cc <rb_init_netio_epoll+0xf4>
   196f0:	add	r1, pc, r1
   196f4:	movw	r2, #0
   196f8:	str	r2, [r1]
   196fc:	str	r2, [r0]
   19700:	movw	r0, #12
   19704:	bl	197e0 <rb_malloc>
   19708:	ldr	r1, [pc, #180]	; 197c4 <rb_init_netio_epoll+0xec>
   1970c:	add	r1, pc, r1
   19710:	str	r0, [r1]
   19714:	bl	4d74 <getdtablesize@plt>
   19718:	ldr	r1, [pc, #160]	; 197c0 <rb_init_netio_epoll+0xe8>
   1971c:	add	r1, pc, r1
   19720:	ldr	r2, [r1]
   19724:	str	r0, [r2, #8]
   19728:	ldr	r0, [r1]
   1972c:	ldr	r0, [r0, #8]
   19730:	bl	4eb8 <epoll_create@plt>
   19734:	ldr	r1, [pc, #128]	; 197bc <rb_init_netio_epoll+0xe4>
   19738:	add	r1, pc, r1
   1973c:	ldr	r2, [r1]
   19740:	str	r0, [r2]
   19744:	ldr	r0, [r1]
   19748:	ldr	r0, [r0]
   1974c:	cmp	r0, #0
   19750:	bge	19760 <rb_init_netio_epoll+0x88>
   19754:	mvn	r0, #0
   19758:	str	r0, [sp, #4]
   1975c:	b	197b0 <rb_init_netio_epoll+0xd8>
   19760:	ldr	r0, [pc, #108]	; 197d4 <rb_init_netio_epoll+0xfc>
   19764:	ldr	r0, [pc, r0]
   19768:	ldr	r0, [r0]
   1976c:	ldr	r2, [pc, #100]	; 197d8 <rb_init_netio_epoll+0x100>
   19770:	add	r2, pc, r2
   19774:	mov	r1, #64	; 0x40
   19778:	bl	544c <rb_open@plt>
   1977c:	ldr	r1, [pc, #88]	; 197dc <rb_init_netio_epoll+0x104>
   19780:	ldr	r1, [pc, r1]
   19784:	ldr	r1, [r1, #8]
   19788:	lsl	r1, r1, #4
   1978c:	str	r0, [sp]
   19790:	mov	r0, r1
   19794:	bl	197e0 <rb_malloc>
   19798:	ldr	r1, [pc, #48]	; 197d0 <rb_init_netio_epoll+0xf8>
   1979c:	add	r1, pc, r1
   197a0:	ldr	r1, [r1]
   197a4:	str	r0, [r1, #4]
   197a8:	movw	r0, #0
   197ac:	str	r0, [sp, #4]
   197b0:	ldr	r0, [sp, #4]
   197b4:	mov	sp, fp
   197b8:	pop	{fp, pc}
   197bc:	.word	0x00039118
   197c0:	.word	0x00039134
   197c4:	.word	0x00039144
   197c8:	.word	0x00039164
   197cc:	.word	0x00039158
   197d0:	.word	0x000390b4
   197d4:	.word	0x000390ec
   197d8:	.word	0x0000a35f
   197dc:	.word	0x000390d0

000197e0 <rb_malloc>:
   197e0:	push	{fp, lr}
   197e4:	mov	fp, sp
   197e8:	sub	sp, sp, #8
   197ec:	str	r0, [sp, #4]
   197f0:	ldr	r1, [sp, #4]
   197f4:	movw	r0, #1
   197f8:	bl	4fb4 <calloc@plt>
   197fc:	str	r0, [sp]
   19800:	ldr	r0, [sp]
   19804:	movw	r1, #0
   19808:	cmp	r0, r1
   1980c:	movw	r0, #0
   19810:	moveq	r0, #1
   19814:	mvn	r1, #0
   19818:	eor	r0, r0, r1
   1981c:	eor	r0, r0, r1
   19820:	tst	r0, #1
   19824:	beq	1982c <rb_malloc+0x4c>
   19828:	bl	5350 <rb_outofmemory@plt>
   1982c:	ldr	r0, [sp]
   19830:	mov	sp, fp
   19834:	pop	{fp, pc}

00019838 <rb_setup_fd_epoll>:
   19838:	sub	sp, sp, #4
   1983c:	str	r0, [sp]
   19840:	movw	r0, #0
   19844:	add	sp, sp, #4
   19848:	bx	lr

0001984c <rb_setselect_epoll>:
   1984c:	push	{fp, lr}
   19850:	mov	fp, sp
   19854:	sub	sp, sp, #48	; 0x30
   19858:	str	r0, [fp, #-4]
   1985c:	str	r1, [fp, #-8]
   19860:	str	r2, [fp, #-12]
   19864:	str	r3, [fp, #-16]
   19868:	ldr	r0, [fp, #-4]
   1986c:	ldr	r0, [r0, #20]
   19870:	str	r0, [sp, #12]
   19874:	mvn	r0, #0
   19878:	str	r0, [sp, #8]
   1987c:	ldr	r0, [fp, #-8]
   19880:	and	r0, r0, #1
   19884:	cmp	r0, #0
   19888:	beq	198dc <rb_setselect_epoll+0x90>
   1988c:	ldr	r0, [fp, #-12]
   19890:	movw	r1, #0
   19894:	cmp	r0, r1
   19898:	beq	198b0 <rb_setselect_epoll+0x64>
   1989c:	ldr	r0, [fp, #-4]
   198a0:	ldr	r1, [r0, #20]
   198a4:	orr	r1, r1, #1
   198a8:	str	r1, [r0, #20]
   198ac:	b	198c4 <rb_setselect_epoll+0x78>
   198b0:	ldr	r0, [fp, #-4]
   198b4:	ldr	r1, [r0, #20]
   198b8:	mvn	r2, #1
   198bc:	and	r1, r1, r2
   198c0:	str	r1, [r0, #20]
   198c4:	ldr	r0, [fp, #-12]
   198c8:	ldr	r1, [fp, #-4]
   198cc:	str	r0, [r1, #28]
   198d0:	ldr	r0, [fp, #-16]
   198d4:	ldr	r1, [fp, #-4]
   198d8:	str	r0, [r1, #32]
   198dc:	ldr	r0, [fp, #-8]
   198e0:	and	r0, r0, #2
   198e4:	cmp	r0, #0
   198e8:	beq	1993c <rb_setselect_epoll+0xf0>
   198ec:	ldr	r0, [fp, #-12]
   198f0:	movw	r1, #0
   198f4:	cmp	r0, r1
   198f8:	beq	19910 <rb_setselect_epoll+0xc4>
   198fc:	ldr	r0, [fp, #-4]
   19900:	ldr	r1, [r0, #20]
   19904:	orr	r1, r1, #4
   19908:	str	r1, [r0, #20]
   1990c:	b	19924 <rb_setselect_epoll+0xd8>
   19910:	ldr	r0, [fp, #-4]
   19914:	ldr	r1, [r0, #20]
   19918:	mvn	r2, #4
   1991c:	and	r1, r1, r2
   19920:	str	r1, [r0, #20]
   19924:	ldr	r0, [fp, #-12]
   19928:	ldr	r1, [fp, #-4]
   1992c:	str	r0, [r1, #36]	; 0x24
   19930:	ldr	r0, [fp, #-16]
   19934:	ldr	r1, [fp, #-4]
   19938:	str	r0, [r1, #40]	; 0x28
   1993c:	ldr	r0, [sp, #12]
   19940:	cmp	r0, #0
   19944:	bne	1995c <rb_setselect_epoll+0x110>
   19948:	ldr	r0, [fp, #-4]
   1994c:	ldr	r0, [r0, #20]
   19950:	cmp	r0, #0
   19954:	bne	1995c <rb_setselect_epoll+0x110>
   19958:	b	19a64 <rb_setselect_epoll+0x218>
   1995c:	ldr	r0, [fp, #-4]
   19960:	ldr	r0, [r0, #20]
   19964:	cmp	r0, #0
   19968:	bgt	19978 <rb_setselect_epoll+0x12c>
   1996c:	movw	r0, #2
   19970:	str	r0, [sp, #8]
   19974:	b	199c4 <rb_setselect_epoll+0x178>
   19978:	ldr	r0, [sp, #12]
   1997c:	cmp	r0, #0
   19980:	bne	199a0 <rb_setselect_epoll+0x154>
   19984:	ldr	r0, [fp, #-4]
   19988:	ldr	r0, [r0, #20]
   1998c:	cmp	r0, #0
   19990:	ble	199a0 <rb_setselect_epoll+0x154>
   19994:	movw	r0, #1
   19998:	str	r0, [sp, #8]
   1999c:	b	199c0 <rb_setselect_epoll+0x174>
   199a0:	ldr	r0, [fp, #-4]
   199a4:	ldr	r0, [r0, #20]
   199a8:	ldr	r1, [sp, #12]
   199ac:	cmp	r0, r1
   199b0:	beq	199bc <rb_setselect_epoll+0x170>
   199b4:	movw	r0, #3
   199b8:	str	r0, [sp, #8]
   199bc:	b	199c0 <rb_setselect_epoll+0x174>
   199c0:	b	199c4 <rb_setselect_epoll+0x178>
   199c4:	b	199c8 <rb_setselect_epoll+0x17c>
   199c8:	ldr	r0, [sp, #8]
   199cc:	cmn	r0, #1
   199d0:	bne	199d8 <rb_setselect_epoll+0x18c>
   199d4:	b	19a64 <rb_setselect_epoll+0x218>
   199d8:	ldr	r0, [fp, #-4]
   199dc:	ldr	r0, [r0, #20]
   199e0:	str	r0, [sp, #16]
   199e4:	ldr	r0, [fp, #-4]
   199e8:	str	r0, [sp, #24]
   199ec:	ldr	r0, [sp, #8]
   199f0:	cmp	r0, #1
   199f4:	beq	19a04 <rb_setselect_epoll+0x1b8>
   199f8:	ldr	r0, [sp, #8]
   199fc:	cmp	r0, #3
   19a00:	bne	19a10 <rb_setselect_epoll+0x1c4>
   19a04:	ldr	r0, [sp, #16]
   19a08:	orr	r0, r0, #-2147483648	; 0x80000000
   19a0c:	str	r0, [sp, #16]
   19a10:	ldr	r0, [pc, #84]	; 19a6c <rb_setselect_epoll+0x220>
   19a14:	add	r0, pc, r0
   19a18:	ldr	r0, [r0]
   19a1c:	ldr	r0, [r0]
   19a20:	ldr	r1, [sp, #8]
   19a24:	ldr	r2, [fp, #-4]
   19a28:	ldr	r2, [r2, #12]
   19a2c:	add	r3, sp, #16
   19a30:	bl	562c <epoll_ctl@plt>
   19a34:	cmp	r0, #0
   19a38:	beq	19a64 <rb_setselect_epoll+0x218>
   19a3c:	bl	56c8 <__errno_location@plt>
   19a40:	ldr	r0, [r0]
   19a44:	bl	4d5c <strerror@plt>
   19a48:	ldr	lr, [pc, #32]	; 19a70 <rb_setselect_epoll+0x224>
   19a4c:	add	lr, pc, lr
   19a50:	str	r0, [sp, #4]
   19a54:	mov	r0, lr
   19a58:	ldr	r1, [sp, #4]
   19a5c:	bl	52e4 <rb_lib_log@plt>
   19a60:	bl	4d80 <abort@plt>
   19a64:	mov	sp, fp
   19a68:	pop	{fp, pc}
   19a6c:	.word	0x00038e3c
   19a70:	.word	0x0000a099

00019a74 <rb_select_epoll>:
   19a74:	push	{fp, lr}
   19a78:	mov	fp, sp
   19a7c:	sub	sp, sp, #88	; 0x58
   19a80:	ldr	r1, [pc, #820]	; 19dbc <rb_select_epoll+0x348>
   19a84:	add	r1, pc, r1
   19a88:	str	r0, [fp, #-8]
   19a8c:	ldr	r0, [r1]
   19a90:	ldr	r0, [r0]
   19a94:	ldr	r2, [r1]
   19a98:	ldr	r2, [r2, #4]
   19a9c:	ldr	r1, [r1]
   19aa0:	ldr	r1, [r1, #8]
   19aa4:	ldr	r3, [fp, #-8]
   19aa8:	str	r1, [sp, #20]
   19aac:	mov	r1, r2
   19ab0:	ldr	r2, [sp, #20]
   19ab4:	bl	5188 <epoll_wait@plt>
   19ab8:	str	r0, [fp, #-12]
   19abc:	bl	56c8 <__errno_location@plt>
   19ac0:	ldr	r0, [r0]
   19ac4:	str	r0, [sp, #36]	; 0x24
   19ac8:	bl	535c <rb_set_time@plt>
   19acc:	ldr	r0, [sp, #36]	; 0x24
   19ad0:	str	r0, [sp, #16]
   19ad4:	bl	56c8 <__errno_location@plt>
   19ad8:	ldr	r1, [sp, #16]
   19adc:	str	r1, [r0]
   19ae0:	ldr	r0, [fp, #-12]
   19ae4:	cmp	r0, #0
   19ae8:	bge	19b08 <rb_select_epoll+0x94>
   19aec:	ldr	r0, [sp, #36]	; 0x24
   19af0:	bl	4d98 <rb_ignore_errno@plt>
   19af4:	cmp	r0, #0
   19af8:	bne	19b08 <rb_select_epoll+0x94>
   19afc:	movw	r0, #5
   19b00:	str	r0, [fp, #-4]
   19b04:	b	19db0 <rb_select_epoll+0x33c>
   19b08:	ldr	r0, [fp, #-12]
   19b0c:	cmp	r0, #0
   19b10:	bgt	19b20 <rb_select_epoll+0xac>
   19b14:	movw	r0, #0
   19b18:	str	r0, [fp, #-4]
   19b1c:	b	19db0 <rb_select_epoll+0x33c>
   19b20:	movw	r0, #0
   19b24:	str	r0, [fp, #-16]
   19b28:	ldr	r0, [fp, #-16]
   19b2c:	ldr	r1, [fp, #-12]
   19b30:	cmp	r0, r1
   19b34:	bge	19da8 <rb_select_epoll+0x334>
   19b38:	ldr	r0, [pc, #648]	; 19dc8 <rb_select_epoll+0x354>
   19b3c:	ldr	r0, [pc, r0]
   19b40:	ldr	r0, [r0, #4]
   19b44:	ldr	r1, [fp, #-16]
   19b48:	add	r0, r0, r1, lsl #4
   19b4c:	ldr	r0, [r0, #8]
   19b50:	str	r0, [sp, #24]
   19b54:	ldr	r0, [sp, #24]
   19b58:	ldr	r0, [r0, #20]
   19b5c:	str	r0, [fp, #-24]	; 0xffffffe8
   19b60:	ldr	r0, [pc, #612]	; 19dcc <rb_select_epoll+0x358>
   19b64:	ldr	r0, [pc, r0]
   19b68:	ldr	r0, [r0, #4]
   19b6c:	ldr	r1, [fp, #-16]
   19b70:	add	r0, r0, r1, lsl #4
   19b74:	ldr	r0, [r0]
   19b78:	and	r0, r0, #25
   19b7c:	cmp	r0, #0
   19b80:	beq	19be0 <rb_select_epoll+0x16c>
   19b84:	ldr	r0, [sp, #24]
   19b88:	ldr	r0, [r0, #28]
   19b8c:	str	r0, [sp, #28]
   19b90:	ldr	r0, [sp, #24]
   19b94:	ldr	r0, [r0, #32]
   19b98:	str	r0, [sp, #32]
   19b9c:	ldr	r0, [sp, #24]
   19ba0:	movw	r1, #0
   19ba4:	str	r1, [r0, #28]
   19ba8:	ldr	r0, [sp, #24]
   19bac:	str	r1, [r0, #32]
   19bb0:	ldr	r0, [sp, #28]
   19bb4:	cmp	r0, r1
   19bb8:	beq	19bdc <rb_select_epoll+0x168>
   19bbc:	ldr	r0, [sp, #28]
   19bc0:	ldr	r1, [sp, #24]
   19bc4:	ldr	r2, [sp, #32]
   19bc8:	str	r0, [sp, #12]
   19bcc:	mov	r0, r1
   19bd0:	mov	r1, r2
   19bd4:	ldr	r2, [sp, #12]
   19bd8:	blx	r2
   19bdc:	b	19be0 <rb_select_epoll+0x16c>
   19be0:	ldr	r0, [sp, #24]
   19be4:	ldrb	r0, [r0, #16]
   19be8:	and	r0, r0, #1
   19bec:	cmp	r0, #0
   19bf0:	bne	19bf8 <rb_select_epoll+0x184>
   19bf4:	b	19d98 <rb_select_epoll+0x324>
   19bf8:	ldr	r0, [pc, #464]	; 19dd0 <rb_select_epoll+0x35c>
   19bfc:	ldr	r0, [pc, r0]
   19c00:	ldr	r0, [r0, #4]
   19c04:	ldr	r1, [fp, #-16]
   19c08:	add	r0, r0, r1, lsl #4
   19c0c:	ldr	r0, [r0]
   19c10:	and	r0, r0, #28
   19c14:	cmp	r0, #0
   19c18:	beq	19c78 <rb_select_epoll+0x204>
   19c1c:	ldr	r0, [sp, #24]
   19c20:	ldr	r0, [r0, #36]	; 0x24
   19c24:	str	r0, [sp, #28]
   19c28:	ldr	r0, [sp, #24]
   19c2c:	ldr	r0, [r0, #40]	; 0x28
   19c30:	str	r0, [sp, #32]
   19c34:	ldr	r0, [sp, #24]
   19c38:	movw	r1, #0
   19c3c:	str	r1, [r0, #36]	; 0x24
   19c40:	ldr	r0, [sp, #24]
   19c44:	str	r1, [r0, #40]	; 0x28
   19c48:	ldr	r0, [sp, #28]
   19c4c:	cmp	r0, r1
   19c50:	beq	19c74 <rb_select_epoll+0x200>
   19c54:	ldr	r0, [sp, #28]
   19c58:	ldr	r1, [sp, #24]
   19c5c:	ldr	r2, [sp, #32]
   19c60:	str	r0, [sp, #8]
   19c64:	mov	r0, r1
   19c68:	mov	r1, r2
   19c6c:	ldr	r2, [sp, #8]
   19c70:	blx	r2
   19c74:	b	19c78 <rb_select_epoll+0x204>
   19c78:	ldr	r0, [sp, #24]
   19c7c:	ldrb	r0, [r0, #16]
   19c80:	and	r0, r0, #1
   19c84:	cmp	r0, #0
   19c88:	bne	19c90 <rb_select_epoll+0x21c>
   19c8c:	b	19d98 <rb_select_epoll+0x324>
   19c90:	movw	r0, #0
   19c94:	str	r0, [fp, #-20]	; 0xffffffec
   19c98:	ldr	r1, [sp, #24]
   19c9c:	ldr	r1, [r1, #28]
   19ca0:	cmp	r1, r0
   19ca4:	beq	19cb4 <rb_select_epoll+0x240>
   19ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19cac:	orr	r0, r0, #1
   19cb0:	str	r0, [fp, #-20]	; 0xffffffec
   19cb4:	ldr	r0, [sp, #24]
   19cb8:	ldr	r0, [r0, #36]	; 0x24
   19cbc:	movw	r1, #0
   19cc0:	cmp	r0, r1
   19cc4:	beq	19cd4 <rb_select_epoll+0x260>
   19cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ccc:	orr	r0, r0, #4
   19cd0:	str	r0, [fp, #-20]	; 0xffffffec
   19cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cdc:	cmp	r0, r1
   19ce0:	beq	19d94 <rb_select_epoll+0x320>
   19ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ce8:	cmp	r0, #0
   19cec:	bne	19cfc <rb_select_epoll+0x288>
   19cf0:	movw	r0, #2
   19cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   19cf8:	b	19d04 <rb_select_epoll+0x290>
   19cfc:	movw	r0, #3
   19d00:	str	r0, [fp, #-28]	; 0xffffffe4
   19d04:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d08:	str	r0, [sp, #40]	; 0x28
   19d0c:	ldr	r1, [sp, #24]
   19d10:	str	r0, [r1, #20]
   19d14:	ldr	r0, [sp, #24]
   19d18:	str	r0, [sp, #48]	; 0x30
   19d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d20:	cmp	r0, #3
   19d24:	beq	19d34 <rb_select_epoll+0x2c0>
   19d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d2c:	cmp	r0, #1
   19d30:	bne	19d40 <rb_select_epoll+0x2cc>
   19d34:	ldr	r0, [sp, #40]	; 0x28
   19d38:	orr	r0, r0, #-2147483648	; 0x80000000
   19d3c:	str	r0, [sp, #40]	; 0x28
   19d40:	ldr	r0, [pc, #120]	; 19dc0 <rb_select_epoll+0x34c>
   19d44:	add	r0, pc, r0
   19d48:	ldr	r0, [r0]
   19d4c:	ldr	r0, [r0]
   19d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d54:	ldr	r2, [sp, #24]
   19d58:	ldr	r2, [r2, #12]
   19d5c:	add	r3, sp, #40	; 0x28
   19d60:	bl	562c <epoll_ctl@plt>
   19d64:	cmp	r0, #0
   19d68:	beq	19d90 <rb_select_epoll+0x31c>
   19d6c:	bl	56c8 <__errno_location@plt>
   19d70:	ldr	r0, [r0]
   19d74:	bl	4d5c <strerror@plt>
   19d78:	ldr	lr, [pc, #68]	; 19dc4 <rb_select_epoll+0x350>
   19d7c:	add	lr, pc, lr
   19d80:	str	r0, [sp, #4]
   19d84:	mov	r0, lr
   19d88:	ldr	r1, [sp, #4]
   19d8c:	bl	52e4 <rb_lib_log@plt>
   19d90:	b	19d94 <rb_select_epoll+0x320>
   19d94:	b	19d98 <rb_select_epoll+0x324>
   19d98:	ldr	r0, [fp, #-16]
   19d9c:	add	r0, r0, #1
   19da0:	str	r0, [fp, #-16]
   19da4:	b	19b28 <rb_select_epoll+0xb4>
   19da8:	movw	r0, #0
   19dac:	str	r0, [fp, #-4]
   19db0:	ldr	r0, [fp, #-4]
   19db4:	mov	sp, fp
   19db8:	pop	{fp, pc}
   19dbc:	.word	0x00038dcc
   19dc0:	.word	0x00038b0c
   19dc4:	.word	0x00009d94
   19dc8:	.word	0x00038d14
   19dcc:	.word	0x00038cec
   19dd0:	.word	0x00038c54

00019dd4 <rb_epoll_supports_event>:
   19dd4:	push	{r4, r5, fp, lr}
   19dd8:	add	fp, sp, #8
   19ddc:	sub	sp, sp, #312	; 0x138
   19de0:	ldr	r0, [pc, #384]	; 19f68 <rb_epoll_supports_event+0x194>
   19de4:	add	r0, pc, r0
   19de8:	ldr	r0, [r0]
   19dec:	cmp	r0, #1
   19df0:	bne	19e00 <rb_epoll_supports_event+0x2c>
   19df4:	movw	r0, #1
   19df8:	str	r0, [fp, #-12]
   19dfc:	b	19f5c <rb_epoll_supports_event+0x188>
   19e00:	ldr	r0, [pc, #356]	; 19f6c <rb_epoll_supports_event+0x198>
   19e04:	add	r0, pc, r0
   19e08:	ldr	r0, [r0]
   19e0c:	cmn	r0, #1
   19e10:	bne	19e20 <rb_epoll_supports_event+0x4c>
   19e14:	movw	r0, #0
   19e18:	str	r0, [fp, #-12]
   19e1c:	b	19f5c <rb_epoll_supports_event+0x188>
   19e20:	ldr	r0, [pc, #328]	; 19f70 <rb_epoll_supports_event+0x19c>
   19e24:	add	r0, pc, r0
   19e28:	add	r1, sp, #152	; 0x98
   19e2c:	bl	22244 <__stat>
   19e30:	cmp	r0, #0
   19e34:	bne	19e54 <rb_epoll_supports_event+0x80>
   19e38:	ldr	r0, [pc, #328]	; 19f88 <rb_epoll_supports_event+0x1b4>
   19e3c:	add	r0, pc, r0
   19e40:	mvn	r1, #0
   19e44:	str	r1, [r0]
   19e48:	movw	r0, #0
   19e4c:	str	r0, [fp, #-12]
   19e50:	b	19f5c <rb_epoll_supports_event+0x188>
   19e54:	movw	r0, #0
   19e58:	str	r0, [sp, #16]
   19e5c:	ldr	r1, [sp, #16]
   19e60:	bl	559c <timerfd_create@plt>
   19e64:	str	r0, [sp, #148]	; 0x94
   19e68:	cmp	r0, #0
   19e6c:	blt	19ea0 <rb_epoll_supports_event+0xcc>
   19e70:	ldr	r0, [sp, #148]	; 0x94
   19e74:	bl	5308 <close@plt>
   19e78:	ldr	lr, [pc, #256]	; 19f80 <rb_epoll_supports_event+0x1ac>
   19e7c:	add	lr, pc, lr
   19e80:	ldr	r1, [pc, #252]	; 19f84 <rb_epoll_supports_event+0x1b0>
   19e84:	add	r1, pc, r1
   19e88:	movw	r2, #1
   19e8c:	str	r2, [r1]
   19e90:	str	r2, [lr]
   19e94:	str	r2, [fp, #-12]
   19e98:	str	r0, [sp, #12]
   19e9c:	b	19f5c <rb_epoll_supports_event+0x188>
   19ea0:	movw	r0, #26
   19ea4:	str	r0, [fp, #-76]	; 0xffffffb4
   19ea8:	movw	r0, #0
   19eac:	str	r0, [fp, #-72]	; 0xffffffb8
   19eb0:	sub	r1, fp, #80	; 0x50
   19eb4:	sub	r2, fp, #16
   19eb8:	bl	4ef4 <timer_create@plt>
   19ebc:	cmp	r0, #0
   19ec0:	beq	19ee0 <rb_epoll_supports_event+0x10c>
   19ec4:	ldr	r0, [pc, #176]	; 19f7c <rb_epoll_supports_event+0x1a8>
   19ec8:	add	r0, pc, r0
   19ecc:	mvn	r1, #0
   19ed0:	str	r1, [r0]
   19ed4:	movw	r0, #0
   19ed8:	str	r0, [fp, #-12]
   19edc:	b	19f5c <rb_epoll_supports_event+0x188>
   19ee0:	ldr	r0, [fp, #-16]
   19ee4:	bl	5440 <timer_delete@plt>
   19ee8:	add	lr, sp, #20
   19eec:	str	r0, [sp, #8]
   19ef0:	mov	r0, lr
   19ef4:	bl	4d50 <sigemptyset@plt>
   19ef8:	mvn	lr, #0
   19efc:	str	r0, [sp, #4]
   19f00:	mov	r0, lr
   19f04:	add	r1, sp, #20
   19f08:	movw	r2, #0
   19f0c:	bl	4df8 <signalfd@plt>
   19f10:	str	r0, [sp, #148]	; 0x94
   19f14:	ldr	r0, [sp, #148]	; 0x94
   19f18:	cmp	r0, #0
   19f1c:	bge	19f3c <rb_epoll_supports_event+0x168>
   19f20:	ldr	r0, [pc, #80]	; 19f78 <rb_epoll_supports_event+0x1a4>
   19f24:	add	r0, pc, r0
   19f28:	mvn	r1, #0
   19f2c:	str	r1, [r0]
   19f30:	movw	r0, #0
   19f34:	str	r0, [fp, #-12]
   19f38:	b	19f5c <rb_epoll_supports_event+0x188>
   19f3c:	ldr	r0, [sp, #148]	; 0x94
   19f40:	bl	5308 <close@plt>
   19f44:	ldr	lr, [pc, #40]	; 19f74 <rb_epoll_supports_event+0x1a0>
   19f48:	add	lr, pc, lr
   19f4c:	movw	r1, #1
   19f50:	str	r1, [lr]
   19f54:	str	r1, [fp, #-12]
   19f58:	str	r0, [sp]
   19f5c:	ldr	r0, [fp, #-12]
   19f60:	sub	sp, fp, #8
   19f64:	pop	{r4, r5, fp, pc}
   19f68:	.word	0x00038a64
   19f6c:	.word	0x00038a44
   19f70:	.word	0x00009d14
   19f74:	.word	0x00038900
   19f78:	.word	0x00038924
   19f7c:	.word	0x00038980
   19f80:	.word	0x000389d0
   19f84:	.word	0x000389c4
   19f88:	.word	0x00038a0c

00019f8c <rb_epoll_init_event>:
   19f8c:	push	{fp, lr}
   19f90:	mov	fp, sp
   19f94:	sub	sp, sp, #176	; 0xb0
   19f98:	bl	19dd4 <rb_epoll_supports_event>
   19f9c:	ldr	lr, [pc, #252]	; 1a0a0 <rb_epoll_init_event+0x114>
   19fa0:	add	lr, pc, lr
   19fa4:	ldr	lr, [lr]
   19fa8:	cmp	lr, #0
   19fac:	str	r0, [sp, #36]	; 0x24
   19fb0:	bne	1a098 <rb_epoll_init_event+0x10c>
   19fb4:	add	r0, sp, #48	; 0x30
   19fb8:	bl	4d50 <sigemptyset@plt>
   19fbc:	str	r0, [sp, #32]
   19fc0:	bl	4e40 <__libc_current_sigrtmin@plt>
   19fc4:	add	lr, sp, #48	; 0x30
   19fc8:	str	r0, [sp, #28]
   19fcc:	mov	r0, lr
   19fd0:	ldr	r1, [sp, #28]
   19fd4:	bl	5248 <sigaddset@plt>
   19fd8:	movw	r1, #0
   19fdc:	str	r0, [sp, #24]
   19fe0:	mov	r0, r1
   19fe4:	add	lr, sp, #48	; 0x30
   19fe8:	str	r1, [sp, #20]
   19fec:	mov	r1, lr
   19ff0:	ldr	r2, [sp, #20]
   19ff4:	bl	5380 <sigprocmask@plt>
   19ff8:	add	r1, sp, #48	; 0x30
   19ffc:	str	r0, [sp, #16]
   1a000:	mov	r0, r1
   1a004:	bl	4d50 <sigemptyset@plt>
   1a008:	str	r0, [sp, #12]
   1a00c:	bl	4e40 <__libc_current_sigrtmin@plt>
   1a010:	add	r1, sp, #48	; 0x30
   1a014:	str	r0, [sp, #8]
   1a018:	mov	r0, r1
   1a01c:	ldr	r1, [sp, #8]
   1a020:	bl	5248 <sigaddset@plt>
   1a024:	mvn	r1, #0
   1a028:	str	r0, [sp, #4]
   1a02c:	mov	r0, r1
   1a030:	add	r1, sp, #48	; 0x30
   1a034:	movw	r2, #0
   1a038:	bl	4df8 <signalfd@plt>
   1a03c:	str	r0, [sp, #40]	; 0x28
   1a040:	ldr	r0, [sp, #40]	; 0x28
   1a044:	cmn	r0, #1
   1a048:	bne	1a060 <rb_epoll_init_event+0xd4>
   1a04c:	ldr	r0, [pc, #84]	; 1a0a8 <rb_epoll_init_event+0x11c>
   1a050:	add	r0, pc, r0
   1a054:	mvn	r1, #0
   1a058:	str	r1, [r0]
   1a05c:	b	1a098 <rb_epoll_init_event+0x10c>
   1a060:	ldr	r0, [pc, #60]	; 1a0a4 <rb_epoll_init_event+0x118>
   1a064:	add	r2, pc, r0
   1a068:	ldr	r0, [sp, #40]	; 0x28
   1a06c:	movw	r1, #64	; 0x40
   1a070:	and	r1, r1, #255	; 0xff
   1a074:	bl	544c <rb_open@plt>
   1a078:	str	r0, [sp, #44]	; 0x2c
   1a07c:	ldr	r0, [sp, #44]	; 0x2c
   1a080:	bl	4fe4 <rb_set_nb@plt>
   1a084:	ldr	r1, [sp, #44]	; 0x2c
   1a088:	str	r0, [sp]
   1a08c:	mov	r0, r1
   1a090:	movw	r1, #0
   1a094:	bl	1a0ac <signalfd_handler>
   1a098:	mov	sp, fp
   1a09c:	pop	{fp, pc}
   1a0a0:	.word	0x000388ac
   1a0a4:	.word	0x00009aec
   1a0a8:	.word	0x000387f8

0001a0ac <signalfd_handler>:
   1a0ac:	push	{fp, lr}
   1a0b0:	mov	fp, sp
   1a0b4:	sub	sp, sp, #24
   1a0b8:	str	r0, [fp, #-4]
   1a0bc:	str	r1, [fp, #-8]
   1a0c0:	movw	r0, #0
   1a0c4:	str	r0, [sp, #4]
   1a0c8:	ldr	r0, [sp, #4]
   1a0cc:	cmp	r0, #16
   1a0d0:	bge	1a11c <signalfd_handler+0x70>
   1a0d4:	ldr	r0, [pc, #316]	; 1a218 <signalfd_handler+0x16c>
   1a0d8:	add	r0, pc, r0
   1a0dc:	ldr	r1, [sp, #4]
   1a0e0:	ldr	r2, [pc, #308]	; 1a21c <signalfd_handler+0x170>
   1a0e4:	add	r2, pc, r2
   1a0e8:	add	r2, r2, r1, lsl #7
   1a0ec:	ldr	r3, [pc, #300]	; 1a220 <signalfd_handler+0x174>
   1a0f0:	add	r3, pc, r3
   1a0f4:	str	r2, [r3, r1, lsl #3]
   1a0f8:	ldr	r1, [sp, #4]
   1a0fc:	add	r1, r3, r1, lsl #3
   1a100:	movw	r2, #128	; 0x80
   1a104:	str	r2, [r1, #4]
   1a108:	str	r0, [sp]
   1a10c:	ldr	r0, [sp, #4]
   1a110:	add	r0, r0, #1
   1a114:	str	r0, [sp, #4]
   1a118:	b	1a0c8 <signalfd_handler+0x1c>
   1a11c:	b	1a120 <signalfd_handler+0x74>
   1a120:	ldr	r0, [fp, #-4]
   1a124:	bl	4ea0 <rb_get_fd@plt>
   1a128:	ldr	lr, [pc, #224]	; 1a210 <signalfd_handler+0x164>
   1a12c:	add	r1, pc, lr
   1a130:	movw	r2, #16
   1a134:	bl	5644 <readv@plt>
   1a138:	str	r0, [sp, #8]
   1a13c:	ldr	r0, [sp, #8]
   1a140:	cmp	r0, #0
   1a144:	beq	1a168 <signalfd_handler+0xbc>
   1a148:	ldr	r0, [sp, #8]
   1a14c:	cmp	r0, #0
   1a150:	bge	1a178 <signalfd_handler+0xcc>
   1a154:	bl	56c8 <__errno_location@plt>
   1a158:	ldr	r0, [r0]
   1a15c:	bl	4d98 <rb_ignore_errno@plt>
   1a160:	cmp	r0, #0
   1a164:	bne	1a178 <signalfd_handler+0xcc>
   1a168:	ldr	r0, [fp, #-4]
   1a16c:	bl	5230 <rb_close@plt>
   1a170:	bl	19f8c <rb_epoll_init_event>
   1a174:	b	1a208 <signalfd_handler+0x15c>
   1a178:	ldr	r0, [sp, #8]
   1a17c:	cmp	r0, #0
   1a180:	bge	1a1a0 <signalfd_handler+0xf4>
   1a184:	ldr	r0, [pc, #136]	; 1a214 <signalfd_handler+0x168>
   1a188:	add	r2, pc, r0
   1a18c:	ldr	r0, [fp, #-4]
   1a190:	movw	r1, #1
   1a194:	movw	r3, #0
   1a198:	bl	4e64 <rb_setselect@plt>
   1a19c:	b	1a208 <signalfd_handler+0x15c>
   1a1a0:	movw	r0, #0
   1a1a4:	str	r0, [sp, #4]
   1a1a8:	ldr	r0, [sp, #4]
   1a1ac:	ldr	r1, [sp, #8]
   1a1b0:	movw	r2, #128	; 0x80
   1a1b4:	sdiv	r1, r1, r2
   1a1b8:	cmp	r0, r1
   1a1bc:	bge	1a204 <signalfd_handler+0x158>
   1a1c0:	ldr	r0, [sp, #4]
   1a1c4:	ldr	r1, [pc, #88]	; 1a224 <signalfd_handler+0x178>
   1a1c8:	add	r1, pc, r1
   1a1cc:	add	r0, r1, r0, lsl #7
   1a1d0:	ldr	r0, [r0, #48]	; 0x30
   1a1d4:	str	r0, [sp, #12]
   1a1d8:	ldr	r0, [sp, #12]
   1a1dc:	movw	r1, #0
   1a1e0:	cmp	r0, r1
   1a1e4:	bne	1a1ec <signalfd_handler+0x140>
   1a1e8:	b	1a1f4 <signalfd_handler+0x148>
   1a1ec:	ldr	r0, [sp, #12]
   1a1f0:	bl	526c <rb_run_one_event@plt>
   1a1f4:	ldr	r0, [sp, #4]
   1a1f8:	add	r0, r0, #1
   1a1fc:	str	r0, [sp, #4]
   1a200:	b	1a1a8 <signalfd_handler+0xfc>
   1a204:	b	1a120 <signalfd_handler+0x74>
   1a208:	mov	sp, fp
   1a20c:	pop	{fp, pc}
   1a210:	.word	0x00038f2c
   1a214:	.word	0xffffff1c
   1a218:	.word	0x00038f80
   1a21c:	.word	0x00038774
   1a220:	.word	0x00038f68
   1a224:	.word	0x00038690

0001a228 <rb_epoll_sched_event>:
   1a228:	push	{fp, lr}
   1a22c:	mov	fp, sp
   1a230:	sub	sp, sp, #16
   1a234:	ldr	r2, [pc, #68]	; 1a280 <rb_epoll_sched_event+0x58>
   1a238:	add	r2, pc, r2
   1a23c:	str	r0, [sp, #8]
   1a240:	str	r1, [sp, #4]
   1a244:	ldr	r0, [r2]
   1a248:	cmp	r0, #0
   1a24c:	beq	1a264 <rb_epoll_sched_event+0x3c>
   1a250:	ldr	r0, [sp, #8]
   1a254:	ldr	r1, [sp, #4]
   1a258:	bl	1a284 <rb_epoll_sched_event_timerfd>
   1a25c:	str	r0, [fp, #-4]
   1a260:	b	1a274 <rb_epoll_sched_event+0x4c>
   1a264:	ldr	r0, [sp, #8]
   1a268:	ldr	r1, [sp, #4]
   1a26c:	bl	1a428 <rb_epoll_sched_event_signalfd>
   1a270:	str	r0, [fp, #-4]
   1a274:	ldr	r0, [fp, #-4]
   1a278:	mov	sp, fp
   1a27c:	pop	{fp, pc}
   1a280:	.word	0x00038614

0001a284 <rb_epoll_sched_event_timerfd>:
   1a284:	push	{fp, lr}
   1a288:	mov	fp, sp
   1a28c:	sub	sp, sp, #64	; 0x40
   1a290:	str	r0, [fp, #-8]
   1a294:	str	r1, [fp, #-12]
   1a298:	movw	r0, #0
   1a29c:	str	r0, [sp, #24]
   1a2a0:	ldr	r1, [sp, #24]
   1a2a4:	bl	559c <timerfd_create@plt>
   1a2a8:	str	r0, [sp, #32]
   1a2ac:	cmp	r0, #0
   1a2b0:	bge	1a2e4 <rb_epoll_sched_event_timerfd+0x60>
   1a2b4:	bl	56c8 <__errno_location@plt>
   1a2b8:	ldr	r0, [r0]
   1a2bc:	bl	4d5c <strerror@plt>
   1a2c0:	ldr	lr, [pc, #348]	; 1a424 <rb_epoll_sched_event_timerfd+0x1a0>
   1a2c4:	add	lr, pc, lr
   1a2c8:	str	r0, [sp, #20]
   1a2cc:	mov	r0, lr
   1a2d0:	ldr	r1, [sp, #20]
   1a2d4:	bl	52e4 <rb_lib_log@plt>
   1a2d8:	movw	r0, #0
   1a2dc:	str	r0, [fp, #-4]
   1a2e0:	b	1a404 <rb_epoll_sched_event_timerfd+0x180>
   1a2e4:	sub	r0, fp, #28
   1a2e8:	movw	r1, #0
   1a2ec:	and	r1, r1, #255	; 0xff
   1a2f0:	movw	r2, #16
   1a2f4:	bl	4ff0 <memset@plt>
   1a2f8:	ldr	r0, [fp, #-12]
   1a2fc:	str	r0, [fp, #-20]	; 0xffffffec
   1a300:	movw	r0, #0
   1a304:	str	r0, [fp, #-16]
   1a308:	ldr	r0, [fp, #-8]
   1a30c:	ldr	r0, [r0, #24]
   1a310:	cmp	r0, #0
   1a314:	beq	1a328 <rb_epoll_sched_event_timerfd+0xa4>
   1a318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a31c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a320:	ldr	r0, [fp, #-16]
   1a324:	str	r0, [fp, #-24]	; 0xffffffe8
   1a328:	ldr	r0, [sp, #32]
   1a32c:	movw	r1, #0
   1a330:	str	r1, [sp, #16]
   1a334:	sub	r2, fp, #28
   1a338:	ldr	r3, [sp, #16]
   1a33c:	bl	5620 <timerfd_settime@plt>
   1a340:	cmp	r0, #0
   1a344:	bge	1a384 <rb_epoll_sched_event_timerfd+0x100>
   1a348:	bl	56c8 <__errno_location@plt>
   1a34c:	ldr	r0, [r0]
   1a350:	bl	4d5c <strerror@plt>
   1a354:	ldr	lr, [pc, #196]	; 1a420 <rb_epoll_sched_event_timerfd+0x19c>
   1a358:	add	lr, pc, lr
   1a35c:	str	r0, [sp, #12]
   1a360:	mov	r0, lr
   1a364:	ldr	r1, [sp, #12]
   1a368:	bl	52e4 <rb_lib_log@plt>
   1a36c:	ldr	r0, [sp, #32]
   1a370:	bl	5308 <close@plt>
   1a374:	movw	r1, #0
   1a378:	str	r1, [fp, #-4]
   1a37c:	str	r0, [sp, #8]
   1a380:	b	1a404 <rb_epoll_sched_event_timerfd+0x180>
   1a384:	ldr	r0, [pc, #140]	; 1a418 <rb_epoll_sched_event_timerfd+0x194>
   1a388:	add	r0, pc, r0
   1a38c:	ldr	r1, [pc, #136]	; 1a41c <rb_epoll_sched_event_timerfd+0x198>
   1a390:	add	r2, pc, r1
   1a394:	ldr	r1, [fp, #-8]
   1a398:	ldr	r3, [r1, #20]
   1a39c:	movw	r1, #136	; 0x88
   1a3a0:	bl	5584 <snprintf@plt>
   1a3a4:	ldr	r1, [pc, #104]	; 1a414 <rb_epoll_sched_event_timerfd+0x190>
   1a3a8:	add	r2, pc, r1
   1a3ac:	ldr	r1, [sp, #32]
   1a3b0:	str	r0, [sp, #4]
   1a3b4:	mov	r0, r1
   1a3b8:	movw	r1, #64	; 0x40
   1a3bc:	and	r1, r1, #255	; 0xff
   1a3c0:	bl	544c <rb_open@plt>
   1a3c4:	str	r0, [sp, #28]
   1a3c8:	ldr	r0, [sp, #28]
   1a3cc:	bl	4fe4 <rb_set_nb@plt>
   1a3d0:	ldr	r1, [pc, #56]	; 1a410 <rb_epoll_sched_event_timerfd+0x18c>
   1a3d4:	add	r2, pc, r1
   1a3d8:	ldr	r1, [sp, #28]
   1a3dc:	ldr	r3, [fp, #-8]
   1a3e0:	str	r1, [r3, #40]	; 0x28
   1a3e4:	ldr	r1, [sp, #28]
   1a3e8:	ldr	r3, [fp, #-8]
   1a3ec:	str	r0, [sp]
   1a3f0:	mov	r0, r1
   1a3f4:	movw	r1, #1
   1a3f8:	bl	4e64 <rb_setselect@plt>
   1a3fc:	movw	r0, #1
   1a400:	str	r0, [fp, #-4]
   1a404:	ldr	r0, [fp, #-4]
   1a408:	mov	sp, fp
   1a40c:	pop	{fp, pc}
   1a410:	.word	0x00000268
   1a414:	.word	0x00038d30
   1a418:	.word	0x00038d50
   1a41c:	.word	0x000097f2
   1a420:	.word	0x00009815
   1a424:	.word	0x00009895

0001a428 <rb_epoll_sched_event_signalfd>:
   1a428:	push	{fp, lr}
   1a42c:	mov	fp, sp
   1a430:	sub	sp, sp, #112	; 0x70
   1a434:	str	r0, [fp, #-8]
   1a438:	str	r1, [fp, #-12]
   1a43c:	add	r0, sp, #32
   1a440:	movw	r1, #0
   1a444:	and	r1, r1, #255	; 0xff
   1a448:	movw	r2, #64	; 0x40
   1a44c:	bl	4ff0 <memset@plt>
   1a450:	movw	r0, #4
   1a454:	bl	197e0 <rb_malloc>
   1a458:	ldr	r1, [fp, #-8]
   1a45c:	str	r0, [r1, #40]	; 0x28
   1a460:	ldr	r0, [fp, #-8]
   1a464:	ldr	r0, [r0, #40]	; 0x28
   1a468:	str	r0, [fp, #-16]
   1a46c:	movw	r0, #0
   1a470:	str	r0, [sp, #40]	; 0x28
   1a474:	bl	4e40 <__libc_current_sigrtmin@plt>
   1a478:	str	r0, [sp, #36]	; 0x24
   1a47c:	ldr	r0, [fp, #-8]
   1a480:	str	r0, [sp, #32]
   1a484:	ldr	r2, [fp, #-16]
   1a488:	movw	r0, #0
   1a48c:	add	r1, sp, #32
   1a490:	bl	4ef4 <timer_create@plt>
   1a494:	cmp	r0, #0
   1a498:	bge	1a4cc <rb_epoll_sched_event_signalfd+0xa4>
   1a49c:	bl	56c8 <__errno_location@plt>
   1a4a0:	ldr	r0, [r0]
   1a4a4:	bl	4d5c <strerror@plt>
   1a4a8:	ldr	lr, [pc, #204]	; 1a57c <rb_epoll_sched_event_signalfd+0x154>
   1a4ac:	add	lr, pc, lr
   1a4b0:	str	r0, [sp, #12]
   1a4b4:	mov	r0, lr
   1a4b8:	ldr	r1, [sp, #12]
   1a4bc:	bl	52e4 <rb_lib_log@plt>
   1a4c0:	movw	r0, #0
   1a4c4:	str	r0, [fp, #-4]
   1a4c8:	b	1a56c <rb_epoll_sched_event_signalfd+0x144>
   1a4cc:	add	r0, sp, #16
   1a4d0:	movw	r1, #0
   1a4d4:	and	r1, r1, #255	; 0xff
   1a4d8:	movw	r2, #16
   1a4dc:	bl	4ff0 <memset@plt>
   1a4e0:	ldr	r0, [fp, #-12]
   1a4e4:	str	r0, [sp, #24]
   1a4e8:	movw	r0, #0
   1a4ec:	str	r0, [sp, #28]
   1a4f0:	ldr	r0, [fp, #-8]
   1a4f4:	ldr	r0, [r0, #24]
   1a4f8:	cmp	r0, #0
   1a4fc:	beq	1a510 <rb_epoll_sched_event_signalfd+0xe8>
   1a500:	ldr	r0, [sp, #24]
   1a504:	str	r0, [sp, #16]
   1a508:	ldr	r0, [sp, #28]
   1a50c:	str	r0, [sp, #20]
   1a510:	ldr	r0, [fp, #-16]
   1a514:	ldr	r0, [r0]
   1a518:	movw	r1, #0
   1a51c:	str	r1, [sp, #8]
   1a520:	add	r2, sp, #16
   1a524:	ldr	r3, [sp, #8]
   1a528:	bl	5128 <timer_settime@plt>
   1a52c:	cmp	r0, #0
   1a530:	bge	1a564 <rb_epoll_sched_event_signalfd+0x13c>
   1a534:	bl	56c8 <__errno_location@plt>
   1a538:	ldr	r0, [r0]
   1a53c:	bl	4d5c <strerror@plt>
   1a540:	ldr	lr, [pc, #48]	; 1a578 <rb_epoll_sched_event_signalfd+0x150>
   1a544:	add	lr, pc, lr
   1a548:	str	r0, [sp, #4]
   1a54c:	mov	r0, lr
   1a550:	ldr	r1, [sp, #4]
   1a554:	bl	52e4 <rb_lib_log@plt>
   1a558:	movw	r0, #0
   1a55c:	str	r0, [fp, #-4]
   1a560:	b	1a56c <rb_epoll_sched_event_signalfd+0x144>
   1a564:	movw	r0, #1
   1a568:	str	r0, [fp, #-4]
   1a56c:	ldr	r0, [fp, #-4]
   1a570:	mov	sp, fp
   1a574:	pop	{fp, pc}
   1a578:	.word	0x0000968d
   1a57c:	.word	0x00009713

0001a580 <rb_epoll_unsched_event>:
   1a580:	push	{fp, lr}
   1a584:	mov	fp, sp
   1a588:	sub	sp, sp, #8
   1a58c:	ldr	r1, [pc, #100]	; 1a5f8 <rb_epoll_unsched_event+0x78>
   1a590:	add	r1, pc, r1
   1a594:	str	r0, [sp, #4]
   1a598:	ldr	r0, [r1]
   1a59c:	cmp	r0, #0
   1a5a0:	beq	1a5c0 <rb_epoll_unsched_event+0x40>
   1a5a4:	ldr	r0, [sp, #4]
   1a5a8:	ldr	r0, [r0, #40]	; 0x28
   1a5ac:	bl	5230 <rb_close@plt>
   1a5b0:	ldr	r0, [sp, #4]
   1a5b4:	movw	lr, #0
   1a5b8:	str	lr, [r0, #40]	; 0x28
   1a5bc:	b	1a5f0 <rb_epoll_unsched_event+0x70>
   1a5c0:	ldr	r0, [sp, #4]
   1a5c4:	ldr	r0, [r0, #40]	; 0x28
   1a5c8:	ldr	r0, [r0]
   1a5cc:	bl	5440 <timer_delete@plt>
   1a5d0:	ldr	lr, [sp, #4]
   1a5d4:	ldr	lr, [lr, #40]	; 0x28
   1a5d8:	str	r0, [sp]
   1a5dc:	mov	r0, lr
   1a5e0:	bl	1a5fc <rb_free>
   1a5e4:	ldr	r0, [sp, #4]
   1a5e8:	movw	lr, #0
   1a5ec:	str	lr, [r0, #40]	; 0x28
   1a5f0:	mov	sp, fp
   1a5f4:	pop	{fp, pc}
   1a5f8:	.word	0x000382bc

0001a5fc <rb_free>:
   1a5fc:	push	{fp, lr}
   1a600:	mov	fp, sp
   1a604:	sub	sp, sp, #8
   1a608:	str	r0, [sp, #4]
   1a60c:	ldr	r0, [sp, #4]
   1a610:	movw	r1, #0
   1a614:	cmp	r0, r1
   1a618:	movw	r0, #0
   1a61c:	movne	r0, #1
   1a620:	mvn	r1, #0
   1a624:	eor	r0, r0, r1
   1a628:	eor	r0, r0, r1
   1a62c:	tst	r0, #1
   1a630:	beq	1a63c <rb_free+0x40>
   1a634:	ldr	r0, [sp, #4]
   1a638:	bl	50c8 <free@plt>
   1a63c:	mov	sp, fp
   1a640:	pop	{fp, pc}

0001a644 <rb_read_timerfd>:
   1a644:	push	{fp, lr}
   1a648:	mov	fp, sp
   1a64c:	sub	sp, sp, #40	; 0x28
   1a650:	str	r0, [fp, #-4]
   1a654:	str	r1, [fp, #-8]
   1a658:	ldr	r0, [fp, #-8]
   1a65c:	str	r0, [fp, #-12]
   1a660:	ldr	r0, [fp, #-12]
   1a664:	movw	r1, #0
   1a668:	cmp	r0, r1
   1a66c:	bne	1a67c <rb_read_timerfd+0x38>
   1a670:	ldr	r0, [fp, #-4]
   1a674:	bl	5230 <rb_close@plt>
   1a678:	b	1a728 <rb_read_timerfd+0xe4>
   1a67c:	ldr	r0, [fp, #-4]
   1a680:	add	r1, sp, #16
   1a684:	movw	r2, #8
   1a688:	bl	5158 <rb_read@plt>
   1a68c:	str	r0, [fp, #-16]
   1a690:	ldr	r0, [fp, #-16]
   1a694:	cmp	r0, #0
   1a698:	beq	1a6bc <rb_read_timerfd+0x78>
   1a69c:	ldr	r0, [fp, #-16]
   1a6a0:	cmp	r0, #0
   1a6a4:	bge	1a6fc <rb_read_timerfd+0xb8>
   1a6a8:	bl	56c8 <__errno_location@plt>
   1a6ac:	ldr	r0, [r0]
   1a6b0:	bl	4d98 <rb_ignore_errno@plt>
   1a6b4:	cmp	r0, #0
   1a6b8:	bne	1a6fc <rb_read_timerfd+0xb8>
   1a6bc:	ldr	r0, [fp, #-4]
   1a6c0:	bl	5230 <rb_close@plt>
   1a6c4:	ldr	r0, [fp, #-12]
   1a6c8:	ldr	r1, [r0, #20]
   1a6cc:	str	r1, [sp, #12]
   1a6d0:	bl	56c8 <__errno_location@plt>
   1a6d4:	ldr	r0, [r0]
   1a6d8:	bl	4d5c <strerror@plt>
   1a6dc:	ldr	r1, [pc, #80]	; 1a734 <rb_read_timerfd+0xf0>
   1a6e0:	add	r1, pc, r1
   1a6e4:	str	r0, [sp, #8]
   1a6e8:	mov	r0, r1
   1a6ec:	ldr	r1, [sp, #12]
   1a6f0:	ldr	r2, [sp, #8]
   1a6f4:	bl	52e4 <rb_lib_log@plt>
   1a6f8:	b	1a728 <rb_read_timerfd+0xe4>
   1a6fc:	ldr	r0, [pc, #44]	; 1a730 <rb_read_timerfd+0xec>
   1a700:	add	r2, pc, r0
   1a704:	ldr	r0, [fp, #-4]
   1a708:	ldr	r1, [fp, #-12]
   1a70c:	movw	r3, #1
   1a710:	str	r1, [sp, #4]
   1a714:	mov	r1, r3
   1a718:	ldr	r3, [sp, #4]
   1a71c:	bl	4e64 <rb_setselect@plt>
   1a720:	ldr	r0, [fp, #-12]
   1a724:	bl	526c <rb_run_one_event@plt>
   1a728:	mov	sp, fp
   1a72c:	pop	{fp, pc}
   1a730:	.word	0xffffff3c
   1a734:	.word	0x000094ae

0001a738 <rb_setup_fd_poll>:
   1a738:	sub	sp, sp, #4
   1a73c:	str	r0, [sp]
   1a740:	movw	r0, #0
   1a744:	add	sp, sp, #4
   1a748:	bx	lr

0001a74c <rb_init_netio_poll>:
   1a74c:	push	{fp, lr}
   1a750:	mov	fp, sp
   1a754:	sub	sp, sp, #16
   1a758:	bl	4e28 <rb_getmaxconnect@plt>
   1a75c:	mov	lr, r0
   1a760:	lsl	r0, r0, #3
   1a764:	str	lr, [sp, #8]
   1a768:	bl	1a7fc <rb_malloc>
   1a76c:	ldr	lr, [pc, #124]	; 1a7f0 <rb_init_netio_poll+0xa4>
   1a770:	add	lr, pc, lr
   1a774:	str	r0, [lr]
   1a778:	bl	4e28 <rb_getmaxconnect@plt>
   1a77c:	ldr	lr, [pc, #104]	; 1a7ec <rb_init_netio_poll+0xa0>
   1a780:	add	lr, pc, lr
   1a784:	str	r0, [lr, #8]
   1a788:	movw	r0, #0
   1a78c:	str	r0, [fp, #-4]
   1a790:	ldr	r0, [fp, #-4]
   1a794:	str	r0, [sp, #4]
   1a798:	bl	4e28 <rb_getmaxconnect@plt>
   1a79c:	ldr	lr, [sp, #4]
   1a7a0:	cmp	lr, r0
   1a7a4:	bge	1a7d0 <rb_init_netio_poll+0x84>
   1a7a8:	ldr	r0, [pc, #72]	; 1a7f8 <rb_init_netio_poll+0xac>
   1a7ac:	ldr	r0, [pc, r0]
   1a7b0:	ldr	r1, [fp, #-4]
   1a7b4:	add	r0, r0, r1, lsl #3
   1a7b8:	mvn	r1, #0
   1a7bc:	str	r1, [r0]
   1a7c0:	ldr	r0, [fp, #-4]
   1a7c4:	add	r0, r0, #1
   1a7c8:	str	r0, [fp, #-4]
   1a7cc:	b	1a790 <rb_init_netio_poll+0x44>
   1a7d0:	ldr	r0, [pc, #28]	; 1a7f4 <rb_init_netio_poll+0xa8>
   1a7d4:	add	r0, pc, r0
   1a7d8:	movw	r1, #0
   1a7dc:	str	r1, [r0, #4]
   1a7e0:	mov	r0, r1
   1a7e4:	mov	sp, fp
   1a7e8:	pop	{fp, pc}
   1a7ec:	.word	0x000389e0
   1a7f0:	.word	0x000389f0
   1a7f4:	.word	0x0003898c
   1a7f8:	.word	0x000389b4

0001a7fc <rb_malloc>:
   1a7fc:	push	{fp, lr}
   1a800:	mov	fp, sp
   1a804:	sub	sp, sp, #8
   1a808:	str	r0, [sp, #4]
   1a80c:	ldr	r1, [sp, #4]
   1a810:	movw	r0, #1
   1a814:	bl	4fb4 <calloc@plt>
   1a818:	str	r0, [sp]
   1a81c:	ldr	r0, [sp]
   1a820:	movw	r1, #0
   1a824:	cmp	r0, r1
   1a828:	movw	r0, #0
   1a82c:	moveq	r0, #1
   1a830:	mvn	r1, #0
   1a834:	eor	r0, r0, r1
   1a838:	eor	r0, r0, r1
   1a83c:	tst	r0, #1
   1a840:	beq	1a848 <rb_malloc+0x4c>
   1a844:	bl	5350 <rb_outofmemory@plt>
   1a848:	ldr	r0, [sp]
   1a84c:	mov	sp, fp
   1a850:	pop	{fp, pc}

0001a854 <rb_setselect_poll>:
   1a854:	push	{fp, lr}
   1a858:	mov	fp, sp
   1a85c:	sub	sp, sp, #24
   1a860:	str	r0, [fp, #-4]
   1a864:	str	r1, [fp, #-8]
   1a868:	str	r2, [sp, #12]
   1a86c:	str	r3, [sp, #8]
   1a870:	ldr	r0, [fp, #-4]
   1a874:	movw	r1, #0
   1a878:	cmp	r0, r1
   1a87c:	bne	1a884 <rb_setselect_poll+0x30>
   1a880:	b	1aaa4 <rb_setselect_poll+0x250>
   1a884:	ldr	r0, [fp, #-8]
   1a888:	and	r0, r0, #1
   1a88c:	cmp	r0, #0
   1a890:	beq	1a8e8 <rb_setselect_poll+0x94>
   1a894:	ldr	r0, [sp, #12]
   1a898:	ldr	r1, [fp, #-4]
   1a89c:	str	r0, [r1, #28]
   1a8a0:	ldr	r0, [sp, #8]
   1a8a4:	ldr	r1, [fp, #-4]
   1a8a8:	str	r0, [r1, #32]
   1a8ac:	ldr	r0, [sp, #12]
   1a8b0:	movw	r1, #0
   1a8b4:	cmp	r0, r1
   1a8b8:	beq	1a8d0 <rb_setselect_poll+0x7c>
   1a8bc:	ldr	r0, [fp, #-4]
   1a8c0:	ldr	r1, [r0, #20]
   1a8c4:	orr	r1, r1, #64	; 0x40
   1a8c8:	str	r1, [r0, #20]
   1a8cc:	b	1a8e4 <rb_setselect_poll+0x90>
   1a8d0:	ldr	r0, [fp, #-4]
   1a8d4:	ldr	r1, [r0, #20]
   1a8d8:	mvn	r2, #64	; 0x40
   1a8dc:	and	r1, r1, r2
   1a8e0:	str	r1, [r0, #20]
   1a8e4:	b	1a8e8 <rb_setselect_poll+0x94>
   1a8e8:	ldr	r0, [fp, #-8]
   1a8ec:	and	r0, r0, #2
   1a8f0:	cmp	r0, #0
   1a8f4:	beq	1a94c <rb_setselect_poll+0xf8>
   1a8f8:	ldr	r0, [sp, #12]
   1a8fc:	ldr	r1, [fp, #-4]
   1a900:	str	r0, [r1, #36]	; 0x24
   1a904:	ldr	r0, [sp, #8]
   1a908:	ldr	r1, [fp, #-4]
   1a90c:	str	r0, [r1, #40]	; 0x28
   1a910:	ldr	r0, [sp, #12]
   1a914:	movw	r1, #0
   1a918:	cmp	r0, r1
   1a91c:	beq	1a934 <rb_setselect_poll+0xe0>
   1a920:	ldr	r0, [fp, #-4]
   1a924:	ldr	r1, [r0, #20]
   1a928:	orr	r1, r1, #256	; 0x100
   1a92c:	str	r1, [r0, #20]
   1a930:	b	1a948 <rb_setselect_poll+0xf4>
   1a934:	ldr	r0, [fp, #-4]
   1a938:	ldr	r1, [r0, #20]
   1a93c:	mvn	r2, #256	; 0x100
   1a940:	and	r1, r1, r2
   1a944:	str	r1, [r0, #20]
   1a948:	b	1a94c <rb_setselect_poll+0xf8>
   1a94c:	ldr	r0, [fp, #-4]
   1a950:	ldr	r0, [r0, #12]
   1a954:	bl	1aad8 <resize_pollarray>
   1a958:	ldr	r0, [fp, #-4]
   1a95c:	ldr	r0, [r0, #20]
   1a960:	cmp	r0, #0
   1a964:	bgt	1aa38 <rb_setselect_poll+0x1e4>
   1a968:	ldr	r0, [pc, #324]	; 1aab4 <rb_setselect_poll+0x260>
   1a96c:	add	r0, pc, r0
   1a970:	ldr	r1, [pc, #328]	; 1aac0 <rb_setselect_poll+0x26c>
   1a974:	ldr	r1, [pc, r1]
   1a978:	ldr	r2, [fp, #-4]
   1a97c:	ldr	r2, [r2, #12]
   1a980:	add	r1, r1, r2, lsl #3
   1a984:	mov	r2, #0
   1a988:	strh	r2, [r1, #4]
   1a98c:	ldr	r1, [pc, #304]	; 1aac4 <rb_setselect_poll+0x270>
   1a990:	ldr	r1, [pc, r1]
   1a994:	ldr	r2, [fp, #-4]
   1a998:	ldr	r2, [r2, #12]
   1a99c:	add	r1, r1, r2, lsl #3
   1a9a0:	mvn	r2, #0
   1a9a4:	str	r2, [r1]
   1a9a8:	ldr	r1, [fp, #-4]
   1a9ac:	ldr	r1, [r1, #12]
   1a9b0:	ldr	r0, [r0, #4]
   1a9b4:	cmp	r1, r0
   1a9b8:	bne	1aa34 <rb_setselect_poll+0x1e0>
   1a9bc:	b	1a9c0 <rb_setselect_poll+0x16c>
   1a9c0:	ldr	r0, [pc, #240]	; 1aab8 <rb_setselect_poll+0x264>
   1a9c4:	add	r0, pc, r0
   1a9c8:	ldr	r0, [r0, #4]
   1a9cc:	cmp	r0, #0
   1a9d0:	movw	r0, #0
   1a9d4:	str	r0, [sp, #4]
   1a9d8:	blt	1aa08 <rb_setselect_poll+0x1b4>
   1a9dc:	ldr	r0, [pc, #228]	; 1aac8 <rb_setselect_poll+0x274>
   1a9e0:	ldr	r0, [pc, r0]
   1a9e4:	ldr	r1, [pc, #224]	; 1aacc <rb_setselect_poll+0x278>
   1a9e8:	add	r1, pc, r1
   1a9ec:	ldr	r1, [r1, #4]
   1a9f0:	add	r0, r0, r1, lsl #3
   1a9f4:	ldr	r0, [r0]
   1a9f8:	cmn	r0, #1
   1a9fc:	movw	r0, #0
   1aa00:	moveq	r0, #1
   1aa04:	str	r0, [sp, #4]
   1aa08:	ldr	r0, [sp, #4]
   1aa0c:	tst	r0, #1
   1aa10:	beq	1aa30 <rb_setselect_poll+0x1dc>
   1aa14:	ldr	r0, [pc, #160]	; 1aabc <rb_setselect_poll+0x268>
   1aa18:	add	r0, pc, r0
   1aa1c:	ldr	r1, [r0, #4]
   1aa20:	mvn	r2, #0
   1aa24:	add	r1, r1, r2
   1aa28:	str	r1, [r0, #4]
   1aa2c:	b	1a9c0 <rb_setselect_poll+0x16c>
   1aa30:	b	1aa34 <rb_setselect_poll+0x1e0>
   1aa34:	b	1aaa4 <rb_setselect_poll+0x250>
   1aa38:	ldr	r0, [pc, #108]	; 1aaac <rb_setselect_poll+0x258>
   1aa3c:	add	r0, pc, r0
   1aa40:	ldr	r1, [fp, #-4]
   1aa44:	ldr	r2, [r1, #12]
   1aa48:	ldr	r1, [r1, #20]
   1aa4c:	ldr	r3, [pc, #124]	; 1aad0 <rb_setselect_poll+0x27c>
   1aa50:	ldr	r3, [pc, r3]
   1aa54:	add	r2, r3, r2, lsl #3
   1aa58:	strh	r1, [r2, #4]
   1aa5c:	ldr	r1, [fp, #-4]
   1aa60:	ldr	r1, [r1, #12]
   1aa64:	mov	r2, r1
   1aa68:	ldr	r3, [pc, #100]	; 1aad4 <rb_setselect_poll+0x280>
   1aa6c:	ldr	r3, [pc, r3]
   1aa70:	add	r1, r3, r1, lsl #3
   1aa74:	str	r2, [r1]
   1aa78:	ldr	r1, [fp, #-4]
   1aa7c:	ldr	r1, [r1, #12]
   1aa80:	ldr	r0, [r0, #4]
   1aa84:	cmp	r1, r0
   1aa88:	ble	1aaa0 <rb_setselect_poll+0x24c>
   1aa8c:	ldr	r0, [pc, #28]	; 1aab0 <rb_setselect_poll+0x25c>
   1aa90:	add	r0, pc, r0
   1aa94:	ldr	r1, [fp, #-4]
   1aa98:	ldr	r1, [r1, #12]
   1aa9c:	str	r1, [r0, #4]
   1aaa0:	b	1aaa4 <rb_setselect_poll+0x250>
   1aaa4:	mov	sp, fp
   1aaa8:	pop	{fp, pc}
   1aaac:	.word	0x00038724
   1aab0:	.word	0x000386d0
   1aab4:	.word	0x000387f4
   1aab8:	.word	0x0003879c
   1aabc:	.word	0x00038748
   1aac0:	.word	0x000387ec
   1aac4:	.word	0x000387d0
   1aac8:	.word	0x00038780
   1aacc:	.word	0x00038778
   1aad0:	.word	0x00038710
   1aad4:	.word	0x000386f4

0001aad8 <resize_pollarray>:
   1aad8:	push	{fp, lr}
   1aadc:	mov	fp, sp
   1aae0:	sub	sp, sp, #16
   1aae4:	ldr	r1, [pc, #236]	; 1abd8 <resize_pollarray+0x100>
   1aae8:	add	r1, pc, r1
   1aaec:	str	r0, [fp, #-4]
   1aaf0:	ldr	r0, [fp, #-4]
   1aaf4:	ldr	r1, [r1, #8]
   1aaf8:	cmp	r0, r1
   1aafc:	movw	r0, #0
   1ab00:	movge	r0, #1
   1ab04:	mvn	r1, #0
   1ab08:	eor	r0, r0, r1
   1ab0c:	eor	r0, r0, r1
   1ab10:	tst	r0, #1
   1ab14:	beq	1abd0 <resize_pollarray+0xf8>
   1ab18:	ldr	r0, [pc, #192]	; 1abe0 <resize_pollarray+0x108>
   1ab1c:	add	r0, pc, r0
   1ab20:	ldr	r1, [r0, #8]
   1ab24:	str	r1, [sp, #4]
   1ab28:	ldr	r1, [r0, #8]
   1ab2c:	add	r1, r1, #1024	; 0x400
   1ab30:	str	r1, [r0, #8]
   1ab34:	ldr	r1, [pc, #168]	; 1abe4 <resize_pollarray+0x10c>
   1ab38:	ldr	r1, [pc, r1]
   1ab3c:	ldr	r2, [r0, #8]
   1ab40:	lsl	r2, r2, #3
   1ab44:	str	r0, [sp]
   1ab48:	mov	r0, r1
   1ab4c:	mov	r1, r2
   1ab50:	bl	1af84 <rb_realloc>
   1ab54:	ldr	r1, [sp]
   1ab58:	str	r0, [r1]
   1ab5c:	ldr	r0, [pc, #132]	; 1abe8 <resize_pollarray+0x110>
   1ab60:	ldr	r0, [pc, r0]
   1ab64:	ldr	r2, [sp, #4]
   1ab68:	add	r2, r2, #1
   1ab6c:	add	r0, r0, r2, lsl #3
   1ab70:	movw	r2, #0
   1ab74:	and	r1, r2, #255	; 0xff
   1ab78:	movw	r2, #8192	; 0x2000
   1ab7c:	bl	4ff0 <memset@plt>
   1ab80:	ldr	r0, [sp, #4]
   1ab84:	add	r0, r0, #1
   1ab88:	str	r0, [sp, #8]
   1ab8c:	ldr	r0, [pc, #72]	; 1abdc <resize_pollarray+0x104>
   1ab90:	add	r0, pc, r0
   1ab94:	ldr	r1, [sp, #8]
   1ab98:	ldr	r0, [r0, #8]
   1ab9c:	cmp	r1, r0
   1aba0:	bge	1abcc <resize_pollarray+0xf4>
   1aba4:	ldr	r0, [pc, #64]	; 1abec <resize_pollarray+0x114>
   1aba8:	ldr	r0, [pc, r0]
   1abac:	ldr	r1, [sp, #8]
   1abb0:	add	r0, r0, r1, lsl #3
   1abb4:	mvn	r1, #0
   1abb8:	str	r1, [r0]
   1abbc:	ldr	r0, [sp, #8]
   1abc0:	add	r0, r0, #1
   1abc4:	str	r0, [sp, #8]
   1abc8:	b	1ab8c <resize_pollarray+0xb4>
   1abcc:	b	1abd0 <resize_pollarray+0xf8>
   1abd0:	mov	sp, fp
   1abd4:	pop	{fp, pc}
   1abd8:	.word	0x00038678
   1abdc:	.word	0x000385d0
   1abe0:	.word	0x00038644
   1abe4:	.word	0x00038628
   1abe8:	.word	0x00038600
   1abec:	.word	0x000385b8

0001abf0 <rb_select_poll>:
   1abf0:	push	{fp, lr}
   1abf4:	mov	fp, sp
   1abf8:	sub	sp, sp, #56	; 0x38
   1abfc:	ldr	r1, [pc, #616]	; 1ae6c <rb_select_poll+0x27c>
   1ac00:	add	r1, pc, r1
   1ac04:	str	r0, [fp, #-8]
   1ac08:	ldr	r0, [r1]
   1ac0c:	ldr	r1, [r1, #4]
   1ac10:	add	r1, r1, #1
   1ac14:	ldr	r2, [fp, #-8]
   1ac18:	bl	53c8 <poll@plt>
   1ac1c:	str	r0, [fp, #-12]
   1ac20:	bl	535c <rb_set_time@plt>
   1ac24:	ldr	r0, [fp, #-12]
   1ac28:	cmp	r0, #0
   1ac2c:	bge	1ac5c <rb_select_poll+0x6c>
   1ac30:	bl	56c8 <__errno_location@plt>
   1ac34:	ldr	r0, [r0]
   1ac38:	bl	4d98 <rb_ignore_errno@plt>
   1ac3c:	cmp	r0, #0
   1ac40:	bne	1ac50 <rb_select_poll+0x60>
   1ac44:	movw	r0, #0
   1ac48:	str	r0, [fp, #-4]
   1ac4c:	b	1ae60 <rb_select_poll+0x270>
   1ac50:	movw	r0, #5
   1ac54:	str	r0, [fp, #-4]
   1ac58:	b	1ae60 <rb_select_poll+0x270>
   1ac5c:	ldr	r0, [fp, #-12]
   1ac60:	cmp	r0, #0
   1ac64:	bne	1ac74 <rb_select_poll+0x84>
   1ac68:	movw	r0, #0
   1ac6c:	str	r0, [fp, #-4]
   1ac70:	b	1ae60 <rb_select_poll+0x270>
   1ac74:	movw	r0, #0
   1ac78:	str	r0, [fp, #-20]	; 0xffffffec
   1ac7c:	ldr	r0, [pc, #492]	; 1ae70 <rb_select_poll+0x280>
   1ac80:	add	r0, pc, r0
   1ac84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ac88:	ldr	r0, [r0, #4]
   1ac8c:	add	r0, r0, #1
   1ac90:	cmp	r1, r0
   1ac94:	bge	1ae58 <rb_select_poll+0x268>
   1ac98:	ldr	r0, [pc, #468]	; 1ae74 <rb_select_poll+0x284>
   1ac9c:	ldr	r0, [pc, r0]
   1aca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aca4:	add	r0, r0, r1, lsl #3
   1aca8:	str	r0, [sp, #24]
   1acac:	ldr	r0, [sp, #24]
   1acb0:	ldrsh	r0, [r0, #6]
   1acb4:	str	r0, [sp, #20]
   1acb8:	ldr	r0, [sp, #24]
   1acbc:	ldr	r0, [r0]
   1acc0:	str	r0, [fp, #-16]
   1acc4:	ldr	r0, [sp, #20]
   1acc8:	cmp	r0, #0
   1accc:	beq	1acdc <rb_select_poll+0xec>
   1acd0:	ldr	r0, [fp, #-16]
   1acd4:	cmn	r0, #1
   1acd8:	bne	1ace0 <rb_select_poll+0xf0>
   1acdc:	b	1ae48 <rb_select_poll+0x258>
   1ace0:	ldr	r0, [fp, #-16]
   1ace4:	bl	1ae78 <rb_find_fd>
   1ace8:	str	r0, [sp, #16]
   1acec:	ldr	r0, [sp, #16]
   1acf0:	movw	lr, #0
   1acf4:	cmp	r0, lr
   1acf8:	bne	1ad00 <rb_select_poll+0x110>
   1acfc:	b	1ae48 <rb_select_poll+0x258>
   1ad00:	ldr	r0, [sp, #20]
   1ad04:	and	r0, r0, #89	; 0x59
   1ad08:	cmp	r0, #0
   1ad0c:	beq	1ad6c <rb_select_poll+0x17c>
   1ad10:	ldr	r0, [sp, #16]
   1ad14:	ldr	r0, [r0, #28]
   1ad18:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad1c:	ldr	r0, [sp, #16]
   1ad20:	ldr	r0, [r0, #32]
   1ad24:	str	r0, [sp, #28]
   1ad28:	ldr	r0, [sp, #16]
   1ad2c:	movw	r1, #0
   1ad30:	str	r1, [r0, #28]
   1ad34:	ldr	r0, [sp, #16]
   1ad38:	str	r1, [r0, #32]
   1ad3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad40:	cmp	r0, r1
   1ad44:	beq	1ad68 <rb_select_poll+0x178>
   1ad48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad4c:	ldr	r1, [sp, #16]
   1ad50:	ldr	r2, [sp, #28]
   1ad54:	str	r0, [sp, #12]
   1ad58:	mov	r0, r1
   1ad5c:	mov	r1, r2
   1ad60:	ldr	r2, [sp, #12]
   1ad64:	blx	r2
   1ad68:	b	1ad6c <rb_select_poll+0x17c>
   1ad6c:	ldr	r0, [sp, #16]
   1ad70:	ldrb	r0, [r0, #16]
   1ad74:	and	r0, r0, #1
   1ad78:	cmp	r0, #0
   1ad7c:	beq	1adec <rb_select_poll+0x1fc>
   1ad80:	ldr	r0, [sp, #20]
   1ad84:	and	r0, r0, #284	; 0x11c
   1ad88:	cmp	r0, #0
   1ad8c:	beq	1adec <rb_select_poll+0x1fc>
   1ad90:	ldr	r0, [sp, #16]
   1ad94:	ldr	r0, [r0, #36]	; 0x24
   1ad98:	str	r0, [fp, #-24]	; 0xffffffe8
   1ad9c:	ldr	r0, [sp, #16]
   1ada0:	ldr	r0, [r0, #40]	; 0x28
   1ada4:	str	r0, [sp, #28]
   1ada8:	ldr	r0, [sp, #16]
   1adac:	movw	r1, #0
   1adb0:	str	r1, [r0, #36]	; 0x24
   1adb4:	ldr	r0, [sp, #16]
   1adb8:	str	r1, [r0, #40]	; 0x28
   1adbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc0:	cmp	r0, r1
   1adc4:	beq	1ade8 <rb_select_poll+0x1f8>
   1adc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adcc:	ldr	r1, [sp, #16]
   1add0:	ldr	r2, [sp, #28]
   1add4:	str	r0, [sp, #8]
   1add8:	mov	r0, r1
   1addc:	mov	r1, r2
   1ade0:	ldr	r2, [sp, #8]
   1ade4:	blx	r2
   1ade8:	b	1adec <rb_select_poll+0x1fc>
   1adec:	ldr	r0, [sp, #16]
   1adf0:	ldr	r0, [r0, #28]
   1adf4:	movw	r1, #0
   1adf8:	cmp	r0, r1
   1adfc:	bne	1ae18 <rb_select_poll+0x228>
   1ae00:	ldr	r0, [sp, #16]
   1ae04:	movw	r1, #1
   1ae08:	movw	r2, #0
   1ae0c:	str	r2, [sp, #4]
   1ae10:	ldr	r3, [sp, #4]
   1ae14:	bl	1a854 <rb_setselect_poll>
   1ae18:	ldr	r0, [sp, #16]
   1ae1c:	ldr	r0, [r0, #36]	; 0x24
   1ae20:	movw	r1, #0
   1ae24:	cmp	r0, r1
   1ae28:	bne	1ae44 <rb_select_poll+0x254>
   1ae2c:	ldr	r0, [sp, #16]
   1ae30:	movw	r1, #2
   1ae34:	movw	r2, #0
   1ae38:	str	r2, [sp]
   1ae3c:	ldr	r3, [sp]
   1ae40:	bl	1a854 <rb_setselect_poll>
   1ae44:	b	1ae48 <rb_select_poll+0x258>
   1ae48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae4c:	add	r0, r0, #1
   1ae50:	str	r0, [fp, #-20]	; 0xffffffec
   1ae54:	b	1ac7c <rb_select_poll+0x8c>
   1ae58:	movw	r0, #0
   1ae5c:	str	r0, [fp, #-4]
   1ae60:	ldr	r0, [fp, #-4]
   1ae64:	mov	sp, fp
   1ae68:	pop	{fp, pc}
   1ae6c:	.word	0x00038560
   1ae70:	.word	0x000384e0
   1ae74:	.word	0x000384c4

0001ae78 <rb_find_fd>:
   1ae78:	sub	sp, sp, #20
   1ae7c:	str	r0, [sp, #12]
   1ae80:	ldr	r0, [sp, #12]
   1ae84:	cmp	r0, #0
   1ae88:	movw	r0, #0
   1ae8c:	movlt	r0, #1
   1ae90:	mvn	r1, #0
   1ae94:	eor	r0, r0, r1
   1ae98:	eor	r0, r0, r1
   1ae9c:	tst	r0, #1
   1aea0:	beq	1aeb0 <rb_find_fd+0x38>
   1aea4:	movw	r0, #0
   1aea8:	str	r0, [sp, #16]
   1aeac:	b	1af74 <rb_find_fd+0xfc>
   1aeb0:	ldr	r0, [pc, #200]	; 1af80 <rb_find_fd+0x108>
   1aeb4:	ldr	r0, [pc, r0]
   1aeb8:	ldr	r0, [r0]
   1aebc:	ldr	r1, [sp, #12]
   1aec0:	ldr	r2, [sp, #12]
   1aec4:	asr	r2, r2, #12
   1aec8:	eor	r1, r1, r2
   1aecc:	ldr	r2, [sp, #12]
   1aed0:	asr	r2, r2, #24
   1aed4:	eor	r1, r1, r2
   1aed8:	movw	r2, #4095	; 0xfff
   1aedc:	and	r1, r1, r2
   1aee0:	movw	r2, #12
   1aee4:	mul	r1, r1, r2
   1aee8:	add	r0, r0, r1
   1aeec:	str	r0, [sp, #8]
   1aef0:	ldr	r0, [sp, #8]
   1aef4:	ldr	r0, [r0]
   1aef8:	movw	r1, #0
   1aefc:	cmp	r0, r1
   1af00:	bne	1af10 <rb_find_fd+0x98>
   1af04:	movw	r0, #0
   1af08:	str	r0, [sp, #16]
   1af0c:	b	1af74 <rb_find_fd+0xfc>
   1af10:	ldr	r0, [sp, #8]
   1af14:	ldr	r0, [r0]
   1af18:	str	r0, [sp, #4]
   1af1c:	ldr	r0, [sp, #4]
   1af20:	movw	r1, #0
   1af24:	cmp	r0, r1
   1af28:	beq	1af6c <rb_find_fd+0xf4>
   1af2c:	ldr	r0, [sp, #4]
   1af30:	ldr	r0, [r0]
   1af34:	str	r0, [sp]
   1af38:	ldr	r0, [sp]
   1af3c:	ldr	r0, [r0, #12]
   1af40:	ldr	r1, [sp, #12]
   1af44:	cmp	r0, r1
   1af48:	bne	1af58 <rb_find_fd+0xe0>
   1af4c:	ldr	r0, [sp]
   1af50:	str	r0, [sp, #16]
   1af54:	b	1af74 <rb_find_fd+0xfc>
   1af58:	b	1af5c <rb_find_fd+0xe4>
   1af5c:	ldr	r0, [sp, #4]
   1af60:	ldr	r0, [r0, #8]
   1af64:	str	r0, [sp, #4]
   1af68:	b	1af1c <rb_find_fd+0xa4>
   1af6c:	movw	r0, #0
   1af70:	str	r0, [sp, #16]
   1af74:	ldr	r0, [sp, #16]
   1af78:	add	sp, sp, #20
   1af7c:	bx	lr
   1af80:	.word	0x0001a50c

0001af84 <rb_realloc>:
   1af84:	push	{fp, lr}
   1af88:	mov	fp, sp
   1af8c:	sub	sp, sp, #16
   1af90:	str	r0, [fp, #-4]
   1af94:	str	r1, [sp, #8]
   1af98:	ldr	r0, [fp, #-4]
   1af9c:	ldr	r1, [sp, #8]
   1afa0:	bl	5614 <realloc@plt>
   1afa4:	str	r0, [sp, #4]
   1afa8:	ldr	r0, [sp, #4]
   1afac:	movw	r1, #0
   1afb0:	cmp	r0, r1
   1afb4:	movw	r0, #0
   1afb8:	moveq	r0, #1
   1afbc:	mvn	r1, #0
   1afc0:	eor	r0, r0, r1
   1afc4:	eor	r0, r0, r1
   1afc8:	tst	r0, #1
   1afcc:	beq	1afd4 <rb_realloc+0x50>
   1afd0:	bl	5350 <rb_outofmemory@plt>
   1afd4:	ldr	r0, [sp, #4]
   1afd8:	mov	sp, fp
   1afdc:	pop	{fp, pc}

0001afe0 <rb_ports_supports_event>:
   1afe0:	push	{fp, lr}
   1afe4:	mov	fp, sp
   1afe8:	bl	56c8 <__errno_location@plt>
   1afec:	movw	lr, #38	; 0x26
   1aff0:	str	lr, [r0]
   1aff4:	movw	r0, #0
   1aff8:	pop	{fp, pc}

0001affc <rb_ports_init_event>:
   1affc:	bx	lr

0001b000 <rb_ports_sched_event>:
   1b000:	push	{fp, lr}
   1b004:	mov	fp, sp
   1b008:	sub	sp, sp, #8
   1b00c:	str	r0, [sp, #4]
   1b010:	str	r1, [sp]
   1b014:	bl	56c8 <__errno_location@plt>
   1b018:	movw	r1, #38	; 0x26
   1b01c:	str	r1, [r0]
   1b020:	mvn	r0, #0
   1b024:	mov	sp, fp
   1b028:	pop	{fp, pc}

0001b02c <rb_ports_unsched_event>:
   1b02c:	sub	sp, sp, #4
   1b030:	str	r0, [sp]
   1b034:	add	sp, sp, #4
   1b038:	bx	lr

0001b03c <rb_init_netio_ports>:
   1b03c:	movw	r0, #38	; 0x26
   1b040:	bx	lr

0001b044 <rb_setselect_ports>:
   1b044:	push	{fp, lr}
   1b048:	mov	fp, sp
   1b04c:	sub	sp, sp, #16
   1b050:	str	r0, [fp, #-4]
   1b054:	str	r1, [sp, #8]
   1b058:	str	r2, [sp, #4]
   1b05c:	str	r3, [sp]
   1b060:	bl	56c8 <__errno_location@plt>
   1b064:	movw	r1, #38	; 0x26
   1b068:	str	r1, [r0]
   1b06c:	mov	sp, fp
   1b070:	pop	{fp, pc}

0001b074 <rb_select_ports>:
   1b074:	push	{fp, lr}
   1b078:	mov	fp, sp
   1b07c:	sub	sp, sp, #8
   1b080:	str	r0, [sp, #4]
   1b084:	bl	56c8 <__errno_location@plt>
   1b088:	movw	lr, #38	; 0x26
   1b08c:	str	lr, [r0]
   1b090:	mvn	r0, #0
   1b094:	mov	sp, fp
   1b098:	pop	{fp, pc}

0001b09c <rb_setup_fd_ports>:
   1b09c:	push	{fp, lr}
   1b0a0:	mov	fp, sp
   1b0a4:	sub	sp, sp, #8
   1b0a8:	str	r0, [sp, #4]
   1b0ac:	bl	56c8 <__errno_location@plt>
   1b0b0:	movw	lr, #38	; 0x26
   1b0b4:	str	lr, [r0]
   1b0b8:	mvn	r0, #0
   1b0bc:	mov	sp, fp
   1b0c0:	pop	{fp, pc}

0001b0c4 <rb_init_netio_sigio>:
   1b0c4:	push	{fp, lr}
   1b0c8:	mov	fp, sp
   1b0cc:	sub	sp, sp, #40	; 0x28
   1b0d0:	bl	4e28 <rb_getmaxconnect@plt>
   1b0d4:	mov	lr, r0
   1b0d8:	lsl	r0, r0, #3
   1b0dc:	str	lr, [fp, #-8]
   1b0e0:	bl	1b228 <rb_malloc>
   1b0e4:	ldr	lr, [pc, #280]	; 1b204 <rb_init_netio_sigio+0x140>
   1b0e8:	ldr	lr, [pc, lr]
   1b0ec:	str	r0, [lr]
   1b0f0:	bl	4e28 <rb_getmaxconnect@plt>
   1b0f4:	ldr	lr, [pc, #260]	; 1b200 <rb_init_netio_sigio+0x13c>
   1b0f8:	ldr	lr, [pc, lr]
   1b0fc:	str	r0, [lr, #8]
   1b100:	movw	r0, #0
   1b104:	str	r0, [fp, #-4]
   1b108:	ldr	r0, [fp, #-4]
   1b10c:	str	r0, [fp, #-12]
   1b110:	bl	4e28 <rb_getmaxconnect@plt>
   1b114:	ldr	lr, [fp, #-12]
   1b118:	cmp	lr, r0
   1b11c:	bge	1b14c <rb_init_netio_sigio+0x88>
   1b120:	ldr	r0, [pc, #252]	; 1b224 <rb_init_netio_sigio+0x160>
   1b124:	ldr	r0, [pc, r0]
   1b128:	ldr	r0, [r0]
   1b12c:	ldr	r1, [fp, #-4]
   1b130:	add	r0, r0, r1, lsl #3
   1b134:	mvn	r1, #0
   1b138:	str	r1, [r0]
   1b13c:	ldr	r0, [fp, #-4]
   1b140:	add	r0, r0, #1
   1b144:	str	r0, [fp, #-4]
   1b148:	b	1b108 <rb_init_netio_sigio+0x44>
   1b14c:	ldr	r0, [pc, #196]	; 1b218 <rb_init_netio_sigio+0x154>
   1b150:	add	r0, pc, r0
   1b154:	ldr	r1, [pc, #192]	; 1b21c <rb_init_netio_sigio+0x158>
   1b158:	add	r1, pc, r1
   1b15c:	ldr	r2, [pc, #188]	; 1b220 <rb_init_netio_sigio+0x15c>
   1b160:	ldr	r2, [pc, r2]
   1b164:	movw	r3, #0
   1b168:	str	r3, [r2, #4]
   1b16c:	movw	r2, #1
   1b170:	str	r2, [r1]
   1b174:	bl	4d50 <sigemptyset@plt>
   1b178:	str	r0, [fp, #-16]
   1b17c:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b180:	ldr	r1, [pc, #140]	; 1b214 <rb_init_netio_sigio+0x150>
   1b184:	add	r1, pc, r1
   1b188:	str	r0, [sp, #20]
   1b18c:	mov	r0, r1
   1b190:	ldr	r1, [sp, #20]
   1b194:	bl	5248 <sigaddset@plt>
   1b198:	ldr	r1, [pc, #112]	; 1b210 <rb_init_netio_sigio+0x14c>
   1b19c:	add	r1, pc, r1
   1b1a0:	str	r0, [sp, #16]
   1b1a4:	mov	r0, r1
   1b1a8:	movw	r1, #29
   1b1ac:	bl	5248 <sigaddset@plt>
   1b1b0:	str	r0, [sp, #12]
   1b1b4:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b1b8:	ldr	r1, [pc, #76]	; 1b20c <rb_init_netio_sigio+0x148>
   1b1bc:	add	r1, pc, r1
   1b1c0:	add	r0, r0, #1
   1b1c4:	str	r0, [sp, #8]
   1b1c8:	mov	r0, r1
   1b1cc:	ldr	r1, [sp, #8]
   1b1d0:	bl	5248 <sigaddset@plt>
   1b1d4:	ldr	r1, [pc, #44]	; 1b208 <rb_init_netio_sigio+0x144>
   1b1d8:	add	r1, pc, r1
   1b1dc:	movw	r2, #0
   1b1e0:	str	r0, [sp, #4]
   1b1e4:	mov	r0, r2
   1b1e8:	bl	5380 <sigprocmask@plt>
   1b1ec:	movw	r1, #0
   1b1f0:	str	r0, [sp]
   1b1f4:	mov	r0, r1
   1b1f8:	mov	sp, fp
   1b1fc:	pop	{fp, pc}
   1b200:	.word	0x0001a2d8
   1b204:	.word	0x0001a2e8
   1b208:	.word	0x00037f98
   1b20c:	.word	0x00037fb4
   1b210:	.word	0x00037fd4
   1b214:	.word	0x00037fec
   1b218:	.word	0x00038020
   1b21c:	.word	0x00038014
   1b220:	.word	0x0001a270
   1b224:	.word	0x0001a2ac

0001b228 <rb_malloc>:
   1b228:	push	{fp, lr}
   1b22c:	mov	fp, sp
   1b230:	sub	sp, sp, #8
   1b234:	str	r0, [sp, #4]
   1b238:	ldr	r1, [sp, #4]
   1b23c:	movw	r0, #1
   1b240:	bl	4fb4 <calloc@plt>
   1b244:	str	r0, [sp]
   1b248:	ldr	r0, [sp]
   1b24c:	movw	r1, #0
   1b250:	cmp	r0, r1
   1b254:	movw	r0, #0
   1b258:	moveq	r0, #1
   1b25c:	mvn	r1, #0
   1b260:	eor	r0, r0, r1
   1b264:	eor	r0, r0, r1
   1b268:	tst	r0, #1
   1b26c:	beq	1b274 <rb_malloc+0x4c>
   1b270:	bl	5350 <rb_outofmemory@plt>
   1b274:	ldr	r0, [sp]
   1b278:	mov	sp, fp
   1b27c:	pop	{fp, pc}

0001b280 <rb_setup_fd_sigio>:
   1b280:	push	{fp, lr}
   1b284:	mov	fp, sp
   1b288:	sub	sp, sp, #40	; 0x28
   1b28c:	str	r0, [fp, #-8]
   1b290:	movw	r0, #0
   1b294:	str	r0, [fp, #-12]
   1b298:	ldr	r1, [fp, #-8]
   1b29c:	ldr	r1, [r1, #12]
   1b2a0:	str	r1, [fp, #-16]
   1b2a4:	ldr	r1, [fp, #-16]
   1b2a8:	str	r0, [sp, #20]
   1b2ac:	mov	r0, r1
   1b2b0:	movw	r1, #3
   1b2b4:	ldr	r2, [sp, #20]
   1b2b8:	bl	55d8 <fcntl@plt>
   1b2bc:	str	r0, [fp, #-12]
   1b2c0:	ldr	r0, [fp, #-12]
   1b2c4:	cmn	r0, #1
   1b2c8:	bne	1b2d8 <rb_setup_fd_sigio+0x58>
   1b2cc:	movw	r0, #0
   1b2d0:	str	r0, [fp, #-4]
   1b2d4:	b	1b3b4 <rb_setup_fd_sigio+0x134>
   1b2d8:	ldr	r0, [fp, #-12]
   1b2dc:	and	r0, r0, #8192	; 0x2000
   1b2e0:	cmp	r0, #0
   1b2e4:	beq	1b30c <rb_setup_fd_sigio+0x8c>
   1b2e8:	ldr	r0, [fp, #-12]
   1b2ec:	mvn	r1, #8192	; 0x2000
   1b2f0:	and	r0, r0, r1
   1b2f4:	str	r0, [fp, #-12]
   1b2f8:	ldr	r0, [fp, #-16]
   1b2fc:	ldr	r2, [fp, #-12]
   1b300:	movw	r1, #4
   1b304:	bl	55d8 <fcntl@plt>
   1b308:	str	r0, [sp, #16]
   1b30c:	ldr	r0, [fp, #-12]
   1b310:	orr	r0, r0, #10240	; 0x2800
   1b314:	str	r0, [fp, #-12]
   1b318:	ldr	r0, [fp, #-16]
   1b31c:	ldr	r2, [fp, #-12]
   1b320:	movw	r1, #4
   1b324:	bl	55d8 <fcntl@plt>
   1b328:	cmn	r0, #1
   1b32c:	bne	1b33c <rb_setup_fd_sigio+0xbc>
   1b330:	movw	r0, #0
   1b334:	str	r0, [fp, #-4]
   1b338:	b	1b3b4 <rb_setup_fd_sigio+0x134>
   1b33c:	ldr	r0, [fp, #-16]
   1b340:	str	r0, [sp, #12]
   1b344:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b348:	ldr	lr, [sp, #12]
   1b34c:	str	r0, [sp, #8]
   1b350:	mov	r0, lr
   1b354:	movw	r1, #10
   1b358:	ldr	r2, [sp, #8]
   1b35c:	bl	55d8 <fcntl@plt>
   1b360:	cmn	r0, #1
   1b364:	bne	1b374 <rb_setup_fd_sigio+0xf4>
   1b368:	movw	r0, #0
   1b36c:	str	r0, [fp, #-4]
   1b370:	b	1b3b4 <rb_setup_fd_sigio+0x134>
   1b374:	ldr	r0, [fp, #-16]
   1b378:	str	r0, [sp, #4]
   1b37c:	bl	5494 <getpid@plt>
   1b380:	ldr	lr, [sp, #4]
   1b384:	str	r0, [sp]
   1b388:	mov	r0, lr
   1b38c:	movw	r1, #8
   1b390:	ldr	r2, [sp]
   1b394:	bl	55d8 <fcntl@plt>
   1b398:	cmn	r0, #1
   1b39c:	bne	1b3ac <rb_setup_fd_sigio+0x12c>
   1b3a0:	movw	r0, #0
   1b3a4:	str	r0, [fp, #-4]
   1b3a8:	b	1b3b4 <rb_setup_fd_sigio+0x134>
   1b3ac:	movw	r0, #1
   1b3b0:	str	r0, [fp, #-4]
   1b3b4:	ldr	r0, [fp, #-4]
   1b3b8:	mov	sp, fp
   1b3bc:	pop	{fp, pc}

0001b3c0 <rb_setselect_sigio>:
   1b3c0:	push	{fp, lr}
   1b3c4:	mov	fp, sp
   1b3c8:	sub	sp, sp, #24
   1b3cc:	str	r0, [fp, #-4]
   1b3d0:	str	r1, [fp, #-8]
   1b3d4:	str	r2, [sp, #12]
   1b3d8:	str	r3, [sp, #8]
   1b3dc:	ldr	r0, [fp, #-4]
   1b3e0:	movw	r1, #0
   1b3e4:	cmp	r0, r1
   1b3e8:	bne	1b3f0 <rb_setselect_sigio+0x30>
   1b3ec:	b	1b60c <rb_setselect_sigio+0x24c>
   1b3f0:	ldr	r0, [fp, #-8]
   1b3f4:	and	r0, r0, #1
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b454 <rb_setselect_sigio+0x94>
   1b400:	ldr	r0, [sp, #12]
   1b404:	ldr	r1, [fp, #-4]
   1b408:	str	r0, [r1, #28]
   1b40c:	ldr	r0, [sp, #8]
   1b410:	ldr	r1, [fp, #-4]
   1b414:	str	r0, [r1, #32]
   1b418:	ldr	r0, [sp, #12]
   1b41c:	movw	r1, #0
   1b420:	cmp	r0, r1
   1b424:	beq	1b43c <rb_setselect_sigio+0x7c>
   1b428:	ldr	r0, [fp, #-4]
   1b42c:	ldr	r1, [r0, #20]
   1b430:	orr	r1, r1, #64	; 0x40
   1b434:	str	r1, [r0, #20]
   1b438:	b	1b450 <rb_setselect_sigio+0x90>
   1b43c:	ldr	r0, [fp, #-4]
   1b440:	ldr	r1, [r0, #20]
   1b444:	mvn	r2, #64	; 0x40
   1b448:	and	r1, r1, r2
   1b44c:	str	r1, [r0, #20]
   1b450:	b	1b454 <rb_setselect_sigio+0x94>
   1b454:	ldr	r0, [fp, #-8]
   1b458:	and	r0, r0, #2
   1b45c:	cmp	r0, #0
   1b460:	beq	1b4b8 <rb_setselect_sigio+0xf8>
   1b464:	ldr	r0, [sp, #12]
   1b468:	ldr	r1, [fp, #-4]
   1b46c:	str	r0, [r1, #36]	; 0x24
   1b470:	ldr	r0, [sp, #8]
   1b474:	ldr	r1, [fp, #-4]
   1b478:	str	r0, [r1, #40]	; 0x28
   1b47c:	ldr	r0, [sp, #12]
   1b480:	movw	r1, #0
   1b484:	cmp	r0, r1
   1b488:	beq	1b4a0 <rb_setselect_sigio+0xe0>
   1b48c:	ldr	r0, [fp, #-4]
   1b490:	ldr	r1, [r0, #20]
   1b494:	orr	r1, r1, #256	; 0x100
   1b498:	str	r1, [r0, #20]
   1b49c:	b	1b4b4 <rb_setselect_sigio+0xf4>
   1b4a0:	ldr	r0, [fp, #-4]
   1b4a4:	ldr	r1, [r0, #20]
   1b4a8:	mvn	r2, #256	; 0x100
   1b4ac:	and	r1, r1, r2
   1b4b0:	str	r1, [r0, #20]
   1b4b4:	b	1b4b8 <rb_setselect_sigio+0xf8>
   1b4b8:	ldr	r0, [fp, #-4]
   1b4bc:	ldr	r0, [r0, #12]
   1b4c0:	bl	1b634 <resize_pollarray>
   1b4c4:	ldr	r0, [fp, #-4]
   1b4c8:	ldr	r0, [r0, #20]
   1b4cc:	cmp	r0, #0
   1b4d0:	bgt	1b5a0 <rb_setselect_sigio+0x1e0>
   1b4d4:	ldr	r0, [pc, #320]	; 1b61c <rb_setselect_sigio+0x25c>
   1b4d8:	ldr	r0, [pc, r0]
   1b4dc:	ldr	r1, [pc, #324]	; 1b628 <rb_setselect_sigio+0x268>
   1b4e0:	ldr	r1, [pc, r1]
   1b4e4:	ldr	r2, [r1]
   1b4e8:	ldr	r3, [fp, #-4]
   1b4ec:	ldr	r3, [r3, #12]
   1b4f0:	add	r2, r2, r3, lsl #3
   1b4f4:	mov	r3, #0
   1b4f8:	strh	r3, [r2, #4]
   1b4fc:	ldr	r1, [r1]
   1b500:	ldr	r2, [fp, #-4]
   1b504:	ldr	r2, [r2, #12]
   1b508:	add	r1, r1, r2, lsl #3
   1b50c:	mvn	r2, #0
   1b510:	str	r2, [r1]
   1b514:	ldr	r1, [fp, #-4]
   1b518:	ldr	r1, [r1, #12]
   1b51c:	ldr	r0, [r0, #4]
   1b520:	cmp	r1, r0
   1b524:	bne	1b59c <rb_setselect_sigio+0x1dc>
   1b528:	b	1b52c <rb_setselect_sigio+0x16c>
   1b52c:	ldr	r0, [pc, #236]	; 1b620 <rb_setselect_sigio+0x260>
   1b530:	ldr	r0, [pc, r0]
   1b534:	ldr	r0, [r0, #4]
   1b538:	cmp	r0, #0
   1b53c:	movw	r0, #0
   1b540:	str	r0, [sp, #4]
   1b544:	blt	1b570 <rb_setselect_sigio+0x1b0>
   1b548:	ldr	r0, [pc, #220]	; 1b62c <rb_setselect_sigio+0x26c>
   1b54c:	ldr	r0, [pc, r0]
   1b550:	ldr	r1, [r0]
   1b554:	ldr	r0, [r0, #4]
   1b558:	add	r0, r1, r0, lsl #3
   1b55c:	ldr	r0, [r0]
   1b560:	cmn	r0, #1
   1b564:	movw	r0, #0
   1b568:	moveq	r0, #1
   1b56c:	str	r0, [sp, #4]
   1b570:	ldr	r0, [sp, #4]
   1b574:	tst	r0, #1
   1b578:	beq	1b598 <rb_setselect_sigio+0x1d8>
   1b57c:	ldr	r0, [pc, #160]	; 1b624 <rb_setselect_sigio+0x264>
   1b580:	ldr	r0, [pc, r0]
   1b584:	ldr	r1, [r0, #4]
   1b588:	mvn	r2, #0
   1b58c:	add	r1, r1, r2
   1b590:	str	r1, [r0, #4]
   1b594:	b	1b52c <rb_setselect_sigio+0x16c>
   1b598:	b	1b59c <rb_setselect_sigio+0x1dc>
   1b59c:	b	1b60c <rb_setselect_sigio+0x24c>
   1b5a0:	ldr	r0, [pc, #108]	; 1b614 <rb_setselect_sigio+0x254>
   1b5a4:	ldr	r0, [pc, r0]
   1b5a8:	ldr	r1, [fp, #-4]
   1b5ac:	ldr	r2, [r1, #12]
   1b5b0:	ldr	r1, [r1, #20]
   1b5b4:	ldr	r3, [pc, #116]	; 1b630 <rb_setselect_sigio+0x270>
   1b5b8:	ldr	r3, [pc, r3]
   1b5bc:	ldr	ip, [r3]
   1b5c0:	add	r2, ip, r2, lsl #3
   1b5c4:	strh	r1, [r2, #4]
   1b5c8:	ldr	r1, [fp, #-4]
   1b5cc:	ldr	r1, [r1, #12]
   1b5d0:	mov	r2, r1
   1b5d4:	ldr	r3, [r3]
   1b5d8:	add	r1, r3, r1, lsl #3
   1b5dc:	str	r2, [r1]
   1b5e0:	ldr	r1, [fp, #-4]
   1b5e4:	ldr	r1, [r1, #12]
   1b5e8:	ldr	r0, [r0, #4]
   1b5ec:	cmp	r1, r0
   1b5f0:	ble	1b608 <rb_setselect_sigio+0x248>
   1b5f4:	ldr	r0, [pc, #28]	; 1b618 <rb_setselect_sigio+0x258>
   1b5f8:	ldr	r0, [pc, r0]
   1b5fc:	ldr	r1, [fp, #-4]
   1b600:	ldr	r1, [r1, #12]
   1b604:	str	r1, [r0, #4]
   1b608:	b	1b60c <rb_setselect_sigio+0x24c>
   1b60c:	mov	sp, fp
   1b610:	pop	{fp, pc}
   1b614:	.word	0x00019e2c
   1b618:	.word	0x00019dd8
   1b61c:	.word	0x00019ef8
   1b620:	.word	0x00019ea0
   1b624:	.word	0x00019e50
   1b628:	.word	0x00019ef0
   1b62c:	.word	0x00019e84
   1b630:	.word	0x00019e18

0001b634 <resize_pollarray>:
   1b634:	push	{fp, lr}
   1b638:	mov	fp, sp
   1b63c:	sub	sp, sp, #16
   1b640:	ldr	r1, [pc, #232]	; 1b730 <resize_pollarray+0xfc>
   1b644:	ldr	r1, [pc, r1]
   1b648:	str	r0, [fp, #-4]
   1b64c:	ldr	r0, [fp, #-4]
   1b650:	ldr	r1, [r1, #8]
   1b654:	cmp	r0, r1
   1b658:	movw	r0, #0
   1b65c:	movge	r0, #1
   1b660:	mvn	r1, #0
   1b664:	eor	r0, r0, r1
   1b668:	eor	r0, r0, r1
   1b66c:	tst	r0, #1
   1b670:	beq	1b728 <resize_pollarray+0xf4>
   1b674:	ldr	r0, [pc, #188]	; 1b738 <resize_pollarray+0x104>
   1b678:	ldr	r0, [pc, r0]
   1b67c:	ldr	r1, [r0, #8]
   1b680:	str	r1, [sp, #4]
   1b684:	ldr	r1, [r0, #8]
   1b688:	add	r1, r1, #1024	; 0x400
   1b68c:	str	r1, [r0, #8]
   1b690:	ldr	r1, [r0]
   1b694:	ldr	r2, [r0, #8]
   1b698:	lsl	r2, r2, #3
   1b69c:	str	r0, [sp]
   1b6a0:	mov	r0, r1
   1b6a4:	mov	r1, r2
   1b6a8:	bl	1c144 <rb_realloc>
   1b6ac:	ldr	r1, [sp]
   1b6b0:	str	r0, [r1]
   1b6b4:	ldr	r0, [r1]
   1b6b8:	ldr	r2, [sp, #4]
   1b6bc:	add	r2, r2, #1
   1b6c0:	add	r0, r0, r2, lsl #3
   1b6c4:	movw	r2, #0
   1b6c8:	and	r1, r2, #255	; 0xff
   1b6cc:	movw	r2, #8192	; 0x2000
   1b6d0:	bl	4ff0 <memset@plt>
   1b6d4:	ldr	r0, [sp, #4]
   1b6d8:	add	r0, r0, #1
   1b6dc:	str	r0, [sp, #8]
   1b6e0:	ldr	r0, [pc, #76]	; 1b734 <resize_pollarray+0x100>
   1b6e4:	ldr	r0, [pc, r0]
   1b6e8:	ldr	r1, [sp, #8]
   1b6ec:	ldr	r0, [r0, #8]
   1b6f0:	cmp	r1, r0
   1b6f4:	bge	1b724 <resize_pollarray+0xf0>
   1b6f8:	ldr	r0, [pc, #60]	; 1b73c <resize_pollarray+0x108>
   1b6fc:	ldr	r0, [pc, r0]
   1b700:	ldr	r0, [r0]
   1b704:	ldr	r1, [sp, #8]
   1b708:	add	r0, r0, r1, lsl #3
   1b70c:	mvn	r1, #0
   1b710:	str	r1, [r0]
   1b714:	ldr	r0, [sp, #8]
   1b718:	add	r0, r0, #1
   1b71c:	str	r0, [sp, #8]
   1b720:	b	1b6e0 <resize_pollarray+0xac>
   1b724:	b	1b728 <resize_pollarray+0xf4>
   1b728:	mov	sp, fp
   1b72c:	pop	{fp, pc}
   1b730:	.word	0x00019d8c
   1b734:	.word	0x00019cec
   1b738:	.word	0x00019d58
   1b73c:	.word	0x00019cd4

0001b740 <rb_select_sigio>:
   1b740:	push	{fp, lr}
   1b744:	mov	fp, sp
   1b748:	sub	sp, sp, #216	; 0xd8
   1b74c:	str	r0, [fp, #-8]
   1b750:	movw	r0, #0
   1b754:	str	r0, [fp, #-12]
   1b758:	str	r0, [fp, #-16]
   1b75c:	bl	1bd28 <rb_sigio_supports_event>
   1b760:	cmp	r0, #0
   1b764:	bne	1b774 <rb_select_sigio+0x34>
   1b768:	ldr	r0, [fp, #-8]
   1b76c:	cmp	r0, #0
   1b770:	blt	1b7b4 <rb_select_sigio+0x74>
   1b774:	ldr	r0, [pc, #1388]	; 1bce8 <rb_select_sigio+0x5a8>
   1b778:	ldr	r1, [fp, #-8]
   1b77c:	movw	r2, #19923	; 0x4dd3
   1b780:	movt	r2, #4194	; 0x1062
   1b784:	smmul	r1, r1, r2
   1b788:	asr	r3, r1, #6
   1b78c:	add	r1, r3, r1, lsr #31
   1b790:	str	r1, [sp, #40]	; 0x28
   1b794:	ldr	r1, [fp, #-8]
   1b798:	smmul	r2, r1, r2
   1b79c:	asr	r3, r2, #6
   1b7a0:	add	r2, r3, r2, lsr #31
   1b7a4:	mov	r3, #1000	; 0x3e8
   1b7a8:	mls	r1, r2, r3, r1
   1b7ac:	mul	r0, r1, r0
   1b7b0:	str	r0, [sp, #44]	; 0x2c
   1b7b4:	b	1b7b8 <rb_select_sigio+0x78>
   1b7b8:	ldr	r0, [pc, #1324]	; 1bcec <rb_select_sigio+0x5ac>
   1b7bc:	add	r0, pc, r0
   1b7c0:	ldr	r0, [r0]
   1b7c4:	cmp	r0, #0
   1b7c8:	bne	1b9fc <rb_select_sigio+0x2bc>
   1b7cc:	ldr	r0, [pc, #1308]	; 1bcf0 <rb_select_sigio+0x5b0>
   1b7d0:	add	r0, pc, r0
   1b7d4:	ldr	r0, [r0]
   1b7d8:	cmp	r0, #0
   1b7dc:	bne	1b7ec <rb_select_sigio+0xac>
   1b7e0:	ldr	r0, [fp, #-8]
   1b7e4:	cmp	r0, #0
   1b7e8:	bge	1b804 <rb_select_sigio+0xc4>
   1b7ec:	ldr	r0, [pc, #1284]	; 1bcf8 <rb_select_sigio+0x5b8>
   1b7f0:	add	r0, pc, r0
   1b7f4:	add	r1, sp, #48	; 0x30
   1b7f8:	bl	4e34 <sigwaitinfo@plt>
   1b7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1b800:	b	1b81c <rb_select_sigio+0xdc>
   1b804:	ldr	r0, [pc, #1256]	; 1bcf4 <rb_select_sigio+0x5b4>
   1b808:	add	r0, pc, r0
   1b80c:	add	r1, sp, #48	; 0x30
   1b810:	add	r2, sp, #40	; 0x28
   1b814:	bl	4e7c <sigtimedwait@plt>
   1b818:	str	r0, [fp, #-20]	; 0xffffffec
   1b81c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b820:	cmp	r0, #0
   1b824:	ble	1b9f4 <rb_select_sigio+0x2b4>
   1b828:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b82c:	cmp	r0, #29
   1b830:	bne	1b854 <rb_select_sigio+0x114>
   1b834:	ldr	r0, [pc, #1224]	; 1bd04 <rb_select_sigio+0x5c4>
   1b838:	add	r0, pc, r0
   1b83c:	bl	52e4 <rb_lib_log@plt>
   1b840:	ldr	r0, [pc, #1208]	; 1bd00 <rb_select_sigio+0x5c0>
   1b844:	add	r0, pc, r0
   1b848:	movw	lr, #1
   1b84c:	str	lr, [r0]
   1b850:	b	1ba04 <rb_select_sigio+0x2c4>
   1b854:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b858:	str	r0, [sp, #32]
   1b85c:	bl	4e40 <__libc_current_sigrtmin@plt>
   1b860:	add	r0, r0, #1
   1b864:	ldr	lr, [sp, #32]
   1b868:	cmp	lr, r0
   1b86c:	bne	1b8ac <rb_select_sigio+0x16c>
   1b870:	ldr	r0, [pc, #1156]	; 1bcfc <rb_select_sigio+0x5bc>
   1b874:	add	r0, pc, r0
   1b878:	ldr	r0, [r0]
   1b87c:	cmp	r0, #0
   1b880:	beq	1b8ac <rb_select_sigio+0x16c>
   1b884:	ldr	r0, [sp, #68]	; 0x44
   1b888:	str	r0, [sp, #36]	; 0x24
   1b88c:	ldr	r0, [sp, #36]	; 0x24
   1b890:	movw	r1, #0
   1b894:	cmp	r0, r1
   1b898:	bne	1b8a0 <rb_select_sigio+0x160>
   1b89c:	b	1b7b8 <rb_select_sigio+0x78>
   1b8a0:	ldr	r0, [sp, #36]	; 0x24
   1b8a4:	bl	526c <rb_run_one_event@plt>
   1b8a8:	b	1b7b8 <rb_select_sigio+0x78>
   1b8ac:	ldr	r0, [sp, #64]	; 0x40
   1b8b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b8b4:	ldr	r0, [sp, #60]	; 0x3c
   1b8b8:	ldr	r1, [pc, #1112]	; 1bd18 <rb_select_sigio+0x5d8>
   1b8bc:	ldr	r1, [pc, r1]
   1b8c0:	ldr	r2, [r1]
   1b8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8c8:	add	r2, r2, r3, lsl #3
   1b8cc:	ldrh	r3, [r2, #6]
   1b8d0:	orr	r0, r3, r0
   1b8d4:	strh	r0, [r2, #6]
   1b8d8:	ldr	r0, [r1]
   1b8dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b8e0:	add	r0, r0, r1, lsl #3
   1b8e4:	ldrsh	r0, [r0, #6]
   1b8e8:	str	r0, [fp, #-16]
   1b8ec:	ldr	r0, [fp, #-12]
   1b8f0:	add	r0, r0, #1
   1b8f4:	str	r0, [fp, #-12]
   1b8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8fc:	bl	1bdf0 <rb_find_fd>
   1b900:	str	r0, [fp, #-36]	; 0xffffffdc
   1b904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b908:	movw	r1, #0
   1b90c:	cmp	r0, r1
   1b910:	bne	1b918 <rb_select_sigio+0x1d8>
   1b914:	b	1b7b8 <rb_select_sigio+0x78>
   1b918:	ldr	r0, [fp, #-16]
   1b91c:	and	r0, r0, #89	; 0x59
   1b920:	cmp	r0, #0
   1b924:	beq	1b984 <rb_select_sigio+0x244>
   1b928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b92c:	ldr	r0, [r0, #28]
   1b930:	str	r0, [fp, #-32]	; 0xffffffe0
   1b934:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b938:	ldr	r0, [r0, #32]
   1b93c:	str	r0, [fp, #-40]	; 0xffffffd8
   1b940:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b944:	movw	r1, #0
   1b948:	str	r1, [r0, #28]
   1b94c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b950:	str	r1, [r0, #32]
   1b954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b958:	cmp	r0, r1
   1b95c:	beq	1b980 <rb_select_sigio+0x240>
   1b960:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b964:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b968:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b96c:	str	r0, [sp, #28]
   1b970:	mov	r0, r1
   1b974:	mov	r1, r2
   1b978:	ldr	r2, [sp, #28]
   1b97c:	blx	r2
   1b980:	b	1b984 <rb_select_sigio+0x244>
   1b984:	ldr	r0, [fp, #-16]
   1b988:	and	r0, r0, #284	; 0x11c
   1b98c:	cmp	r0, #0
   1b990:	beq	1b9f0 <rb_select_sigio+0x2b0>
   1b994:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b998:	ldr	r0, [r0, #36]	; 0x24
   1b99c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b9a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9a4:	ldr	r0, [r0, #40]	; 0x28
   1b9a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b9ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9b0:	movw	r1, #0
   1b9b4:	str	r1, [r0, #36]	; 0x24
   1b9b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b9bc:	str	r1, [r0, #40]	; 0x28
   1b9c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9c4:	cmp	r0, r1
   1b9c8:	beq	1b9ec <rb_select_sigio+0x2ac>
   1b9cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b9d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b9d8:	str	r0, [sp, #24]
   1b9dc:	mov	r0, r1
   1b9e0:	mov	r1, r2
   1b9e4:	ldr	r2, [sp, #24]
   1b9e8:	blx	r2
   1b9ec:	b	1b9f0 <rb_select_sigio+0x2b0>
   1b9f0:	b	1b9f8 <rb_select_sigio+0x2b8>
   1b9f4:	b	1ba04 <rb_select_sigio+0x2c4>
   1b9f8:	b	1ba00 <rb_select_sigio+0x2c0>
   1b9fc:	b	1ba04 <rb_select_sigio+0x2c4>
   1ba00:	b	1b7b8 <rb_select_sigio+0x78>
   1ba04:	ldr	r0, [pc, #764]	; 1bd08 <rb_select_sigio+0x5c8>
   1ba08:	add	r0, pc, r0
   1ba0c:	ldr	r0, [r0]
   1ba10:	cmp	r0, #0
   1ba14:	bne	1ba28 <rb_select_sigio+0x2e8>
   1ba18:	bl	535c <rb_set_time@plt>
   1ba1c:	movw	lr, #0
   1ba20:	str	lr, [fp, #-4]
   1ba24:	b	1bcdc <rb_select_sigio+0x59c>
   1ba28:	bl	4e40 <__libc_current_sigrtmin@plt>
   1ba2c:	movw	r1, #1
   1ba30:	bl	4e94 <signal@plt>
   1ba34:	str	r0, [sp, #20]
   1ba38:	bl	4e40 <__libc_current_sigrtmin@plt>
   1ba3c:	movw	r1, #0
   1ba40:	bl	4e94 <signal@plt>
   1ba44:	ldr	r1, [pc, #704]	; 1bd0c <rb_select_sigio+0x5cc>
   1ba48:	ldr	r1, [pc, r1]
   1ba4c:	ldr	lr, [pc, #700]	; 1bd10 <rb_select_sigio+0x5d0>
   1ba50:	add	lr, pc, lr
   1ba54:	movw	r2, #0
   1ba58:	str	r2, [lr]
   1ba5c:	ldr	r2, [r1]
   1ba60:	ldr	r1, [r1, #4]
   1ba64:	add	r1, r1, #1
   1ba68:	ldr	lr, [fp, #-8]
   1ba6c:	str	r0, [sp, #16]
   1ba70:	mov	r0, r2
   1ba74:	mov	r2, lr
   1ba78:	bl	53c8 <poll@plt>
   1ba7c:	str	r0, [fp, #-12]
   1ba80:	bl	535c <rb_set_time@plt>
   1ba84:	ldr	r0, [fp, #-12]
   1ba88:	cmp	r0, #0
   1ba8c:	bge	1babc <rb_select_sigio+0x37c>
   1ba90:	bl	56c8 <__errno_location@plt>
   1ba94:	ldr	r0, [r0]
   1ba98:	bl	4d98 <rb_ignore_errno@plt>
   1ba9c:	cmp	r0, #0
   1baa0:	bne	1bab0 <rb_select_sigio+0x370>
   1baa4:	movw	r0, #0
   1baa8:	str	r0, [fp, #-4]
   1baac:	b	1bcdc <rb_select_sigio+0x59c>
   1bab0:	movw	r0, #5
   1bab4:	str	r0, [fp, #-4]
   1bab8:	b	1bcdc <rb_select_sigio+0x59c>
   1babc:	ldr	r0, [fp, #-12]
   1bac0:	cmp	r0, #0
   1bac4:	bne	1bad4 <rb_select_sigio+0x394>
   1bac8:	movw	r0, #0
   1bacc:	str	r0, [fp, #-4]
   1bad0:	b	1bcdc <rb_select_sigio+0x59c>
   1bad4:	movw	r0, #0
   1bad8:	str	r0, [fp, #-28]	; 0xffffffe4
   1badc:	ldr	r0, [pc, #560]	; 1bd14 <rb_select_sigio+0x5d4>
   1bae0:	ldr	r0, [pc, r0]
   1bae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bae8:	ldr	r0, [r0, #4]
   1baec:	add	r0, r0, #1
   1baf0:	cmp	r1, r0
   1baf4:	bge	1bcd4 <rb_select_sigio+0x594>
   1baf8:	ldr	r0, [pc, #540]	; 1bd1c <rb_select_sigio+0x5dc>
   1bafc:	ldr	r0, [pc, r0]
   1bb00:	ldr	r0, [r0]
   1bb04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb08:	add	r0, r0, r1, lsl #3
   1bb0c:	ldrsh	r0, [r0, #6]
   1bb10:	str	r0, [fp, #-16]
   1bb14:	cmp	r0, #0
   1bb18:	beq	1bb3c <rb_select_sigio+0x3fc>
   1bb1c:	ldr	r0, [pc, #508]	; 1bd20 <rb_select_sigio+0x5e0>
   1bb20:	ldr	r0, [pc, r0]
   1bb24:	ldr	r0, [r0]
   1bb28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb2c:	add	r0, r0, r1, lsl #3
   1bb30:	ldr	r0, [r0]
   1bb34:	cmn	r0, #1
   1bb38:	bne	1bb40 <rb_select_sigio+0x400>
   1bb3c:	b	1bcc4 <rb_select_sigio+0x584>
   1bb40:	ldr	r0, [pc, #476]	; 1bd24 <rb_select_sigio+0x5e4>
   1bb44:	ldr	r0, [pc, r0]
   1bb48:	ldr	r0, [r0]
   1bb4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bb50:	add	r0, r0, r1, lsl #3
   1bb54:	ldr	r0, [r0]
   1bb58:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb60:	bl	1bdf0 <rb_find_fd>
   1bb64:	str	r0, [fp, #-36]	; 0xffffffdc
   1bb68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bb6c:	movw	r1, #0
   1bb70:	cmp	r0, r1
   1bb74:	bne	1bb7c <rb_select_sigio+0x43c>
   1bb78:	b	1bcc4 <rb_select_sigio+0x584>
   1bb7c:	ldr	r0, [fp, #-16]
   1bb80:	and	r0, r0, #89	; 0x59
   1bb84:	cmp	r0, #0
   1bb88:	beq	1bbe8 <rb_select_sigio+0x4a8>
   1bb8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bb90:	ldr	r0, [r0, #28]
   1bb94:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bb9c:	ldr	r0, [r0, #32]
   1bba0:	str	r0, [fp, #-40]	; 0xffffffd8
   1bba4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bba8:	movw	r1, #0
   1bbac:	str	r1, [r0, #28]
   1bbb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bbb4:	str	r1, [r0, #32]
   1bbb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbbc:	cmp	r0, r1
   1bbc0:	beq	1bbe4 <rb_select_sigio+0x4a4>
   1bbc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bbcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bbd0:	str	r0, [sp, #12]
   1bbd4:	mov	r0, r1
   1bbd8:	mov	r1, r2
   1bbdc:	ldr	r2, [sp, #12]
   1bbe0:	blx	r2
   1bbe4:	b	1bbe8 <rb_select_sigio+0x4a8>
   1bbe8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bbec:	ldrb	r0, [r0, #16]
   1bbf0:	and	r0, r0, #1
   1bbf4:	cmp	r0, #0
   1bbf8:	beq	1bc68 <rb_select_sigio+0x528>
   1bbfc:	ldr	r0, [fp, #-16]
   1bc00:	and	r0, r0, #284	; 0x11c
   1bc04:	cmp	r0, #0
   1bc08:	beq	1bc68 <rb_select_sigio+0x528>
   1bc0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc10:	ldr	r0, [r0, #36]	; 0x24
   1bc14:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc1c:	ldr	r0, [r0, #40]	; 0x28
   1bc20:	str	r0, [fp, #-40]	; 0xffffffd8
   1bc24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc28:	movw	r1, #0
   1bc2c:	str	r1, [r0, #36]	; 0x24
   1bc30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc34:	str	r1, [r0, #40]	; 0x28
   1bc38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc3c:	cmp	r0, r1
   1bc40:	beq	1bc64 <rb_select_sigio+0x524>
   1bc44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bc4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc50:	str	r0, [sp, #8]
   1bc54:	mov	r0, r1
   1bc58:	mov	r1, r2
   1bc5c:	ldr	r2, [sp, #8]
   1bc60:	blx	r2
   1bc64:	b	1bc68 <rb_select_sigio+0x528>
   1bc68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc6c:	ldr	r0, [r0, #28]
   1bc70:	movw	r1, #0
   1bc74:	cmp	r0, r1
   1bc78:	bne	1bc94 <rb_select_sigio+0x554>
   1bc7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc80:	movw	r1, #1
   1bc84:	movw	r2, #0
   1bc88:	str	r2, [sp, #4]
   1bc8c:	ldr	r3, [sp, #4]
   1bc90:	bl	1b3c0 <rb_setselect_sigio>
   1bc94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc98:	ldr	r0, [r0, #36]	; 0x24
   1bc9c:	movw	r1, #0
   1bca0:	cmp	r0, r1
   1bca4:	bne	1bcc0 <rb_select_sigio+0x580>
   1bca8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bcac:	movw	r1, #2
   1bcb0:	movw	r2, #0
   1bcb4:	str	r2, [sp]
   1bcb8:	ldr	r3, [sp]
   1bcbc:	bl	1b3c0 <rb_setselect_sigio>
   1bcc0:	b	1bcc4 <rb_select_sigio+0x584>
   1bcc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bcc8:	add	r0, r0, #1
   1bccc:	str	r0, [fp, #-28]	; 0xffffffe4
   1bcd0:	b	1badc <rb_select_sigio+0x39c>
   1bcd4:	movw	r0, #0
   1bcd8:	str	r0, [fp, #-4]
   1bcdc:	ldr	r0, [fp, #-4]
   1bce0:	mov	sp, fp
   1bce4:	pop	{fp, pc}
   1bce8:	.word	0x000f4240
   1bcec:	.word	0x000379b0
   1bcf0:	.word	0x00037a20
   1bcf4:	.word	0x00037968
   1bcf8:	.word	0x00037980
   1bcfc:	.word	0x0003797c
   1bd00:	.word	0x00037928
   1bd04:	.word	0x000083ac
   1bd08:	.word	0x00037764
   1bd0c:	.word	0x00019988
   1bd10:	.word	0x0003771c
   1bd14:	.word	0x000198f0
   1bd18:	.word	0x00019b14
   1bd1c:	.word	0x000198d4
   1bd20:	.word	0x000198b0
   1bd24:	.word	0x0001988c

0001bd28 <rb_sigio_supports_event>:
   1bd28:	push	{fp, lr}
   1bd2c:	mov	fp, sp
   1bd30:	sub	sp, sp, #80	; 0x50
   1bd34:	ldr	r0, [pc, #164]	; 1bde0 <rb_sigio_supports_event+0xb8>
   1bd38:	add	r0, pc, r0
   1bd3c:	ldr	r0, [r0]
   1bd40:	cmp	r0, #1
   1bd44:	bne	1bd54 <rb_sigio_supports_event+0x2c>
   1bd48:	movw	r0, #1
   1bd4c:	str	r0, [fp, #-4]
   1bd50:	b	1bdd4 <rb_sigio_supports_event+0xac>
   1bd54:	ldr	r0, [pc, #136]	; 1bde4 <rb_sigio_supports_event+0xbc>
   1bd58:	add	r0, pc, r0
   1bd5c:	ldr	r0, [r0]
   1bd60:	cmn	r0, #1
   1bd64:	bne	1bd74 <rb_sigio_supports_event+0x4c>
   1bd68:	movw	r0, #0
   1bd6c:	str	r0, [fp, #-4]
   1bd70:	b	1bdd4 <rb_sigio_supports_event+0xac>
   1bd74:	movw	r0, #26
   1bd78:	str	r0, [sp, #12]
   1bd7c:	movw	r0, #0
   1bd80:	str	r0, [sp, #16]
   1bd84:	add	r1, sp, #8
   1bd88:	sub	r2, fp, #8
   1bd8c:	bl	4ef4 <timer_create@plt>
   1bd90:	cmp	r0, #0
   1bd94:	beq	1bdb4 <rb_sigio_supports_event+0x8c>
   1bd98:	ldr	r0, [pc, #76]	; 1bdec <rb_sigio_supports_event+0xc4>
   1bd9c:	add	r0, pc, r0
   1bda0:	mvn	r1, #0
   1bda4:	str	r1, [r0]
   1bda8:	movw	r0, #0
   1bdac:	str	r0, [fp, #-4]
   1bdb0:	b	1bdd4 <rb_sigio_supports_event+0xac>
   1bdb4:	ldr	r0, [fp, #-8]
   1bdb8:	bl	5440 <timer_delete@plt>
   1bdbc:	ldr	lr, [pc, #36]	; 1bde8 <rb_sigio_supports_event+0xc0>
   1bdc0:	add	lr, pc, lr
   1bdc4:	movw	r1, #1
   1bdc8:	str	r1, [lr]
   1bdcc:	str	r1, [fp, #-4]
   1bdd0:	str	r0, [sp, #4]
   1bdd4:	ldr	r0, [fp, #-4]
   1bdd8:	mov	sp, fp
   1bddc:	pop	{fp, pc}
   1bde0:	.word	0x000374b8
   1bde4:	.word	0x00037498
   1bde8:	.word	0x00037430
   1bdec:	.word	0x00037454

0001bdf0 <rb_find_fd>:
   1bdf0:	sub	sp, sp, #20
   1bdf4:	str	r0, [sp, #12]
   1bdf8:	ldr	r0, [sp, #12]
   1bdfc:	cmp	r0, #0
   1be00:	movw	r0, #0
   1be04:	movlt	r0, #1
   1be08:	mvn	r1, #0
   1be0c:	eor	r0, r0, r1
   1be10:	eor	r0, r0, r1
   1be14:	tst	r0, #1
   1be18:	beq	1be28 <rb_find_fd+0x38>
   1be1c:	movw	r0, #0
   1be20:	str	r0, [sp, #16]
   1be24:	b	1beec <rb_find_fd+0xfc>
   1be28:	ldr	r0, [pc, #200]	; 1bef8 <rb_find_fd+0x108>
   1be2c:	ldr	r0, [pc, r0]
   1be30:	ldr	r0, [r0]
   1be34:	ldr	r1, [sp, #12]
   1be38:	ldr	r2, [sp, #12]
   1be3c:	asr	r2, r2, #12
   1be40:	eor	r1, r1, r2
   1be44:	ldr	r2, [sp, #12]
   1be48:	asr	r2, r2, #24
   1be4c:	eor	r1, r1, r2
   1be50:	movw	r2, #4095	; 0xfff
   1be54:	and	r1, r1, r2
   1be58:	movw	r2, #12
   1be5c:	mul	r1, r1, r2
   1be60:	add	r0, r0, r1
   1be64:	str	r0, [sp, #8]
   1be68:	ldr	r0, [sp, #8]
   1be6c:	ldr	r0, [r0]
   1be70:	movw	r1, #0
   1be74:	cmp	r0, r1
   1be78:	bne	1be88 <rb_find_fd+0x98>
   1be7c:	movw	r0, #0
   1be80:	str	r0, [sp, #16]
   1be84:	b	1beec <rb_find_fd+0xfc>
   1be88:	ldr	r0, [sp, #8]
   1be8c:	ldr	r0, [r0]
   1be90:	str	r0, [sp, #4]
   1be94:	ldr	r0, [sp, #4]
   1be98:	movw	r1, #0
   1be9c:	cmp	r0, r1
   1bea0:	beq	1bee4 <rb_find_fd+0xf4>
   1bea4:	ldr	r0, [sp, #4]
   1bea8:	ldr	r0, [r0]
   1beac:	str	r0, [sp]
   1beb0:	ldr	r0, [sp]
   1beb4:	ldr	r0, [r0, #12]
   1beb8:	ldr	r1, [sp, #12]
   1bebc:	cmp	r0, r1
   1bec0:	bne	1bed0 <rb_find_fd+0xe0>
   1bec4:	ldr	r0, [sp]
   1bec8:	str	r0, [sp, #16]
   1becc:	b	1beec <rb_find_fd+0xfc>
   1bed0:	b	1bed4 <rb_find_fd+0xe4>
   1bed4:	ldr	r0, [sp, #4]
   1bed8:	ldr	r0, [r0, #8]
   1bedc:	str	r0, [sp, #4]
   1bee0:	b	1be94 <rb_find_fd+0xa4>
   1bee4:	movw	r0, #0
   1bee8:	str	r0, [sp, #16]
   1beec:	ldr	r0, [sp, #16]
   1bef0:	add	sp, sp, #20
   1bef4:	bx	lr
   1bef8:	.word	0x00019594

0001befc <rb_sigio_init_event>:
   1befc:	push	{fp, lr}
   1bf00:	mov	fp, sp
   1bf04:	sub	sp, sp, #8
   1bf08:	bl	1bd28 <rb_sigio_supports_event>
   1bf0c:	str	r0, [sp, #4]
   1bf10:	mov	sp, fp
   1bf14:	pop	{fp, pc}

0001bf18 <rb_sigio_sched_event>:
   1bf18:	push	{fp, lr}
   1bf1c:	mov	fp, sp
   1bf20:	sub	sp, sp, #112	; 0x70
   1bf24:	ldr	r2, [pc, #352]	; 1c08c <rb_sigio_sched_event+0x174>
   1bf28:	add	r2, pc, r2
   1bf2c:	str	r0, [fp, #-8]
   1bf30:	str	r1, [fp, #-12]
   1bf34:	ldr	r0, [r2]
   1bf38:	cmp	r0, #0
   1bf3c:	bgt	1bf4c <rb_sigio_sched_event+0x34>
   1bf40:	movw	r0, #0
   1bf44:	str	r0, [fp, #-4]
   1bf48:	b	1c080 <rb_sigio_sched_event+0x168>
   1bf4c:	add	r0, sp, #32
   1bf50:	movw	r1, #0
   1bf54:	and	r1, r1, #255	; 0xff
   1bf58:	movw	r2, #64	; 0x40
   1bf5c:	bl	4ff0 <memset@plt>
   1bf60:	movw	r0, #4
   1bf64:	bl	1b228 <rb_malloc>
   1bf68:	ldr	r1, [fp, #-8]
   1bf6c:	str	r0, [r1, #40]	; 0x28
   1bf70:	ldr	r0, [fp, #-8]
   1bf74:	ldr	r0, [r0, #40]	; 0x28
   1bf78:	str	r0, [fp, #-16]
   1bf7c:	movw	r0, #0
   1bf80:	str	r0, [sp, #40]	; 0x28
   1bf84:	bl	4e40 <__libc_current_sigrtmin@plt>
   1bf88:	add	r0, r0, #1
   1bf8c:	str	r0, [sp, #36]	; 0x24
   1bf90:	ldr	r0, [fp, #-8]
   1bf94:	str	r0, [sp, #32]
   1bf98:	ldr	r2, [fp, #-16]
   1bf9c:	movw	r0, #0
   1bfa0:	add	r1, sp, #32
   1bfa4:	bl	4ef4 <timer_create@plt>
   1bfa8:	cmp	r0, #0
   1bfac:	bge	1bfe0 <rb_sigio_sched_event+0xc8>
   1bfb0:	bl	56c8 <__errno_location@plt>
   1bfb4:	ldr	r0, [r0]
   1bfb8:	bl	4d5c <strerror@plt>
   1bfbc:	ldr	lr, [pc, #208]	; 1c094 <rb_sigio_sched_event+0x17c>
   1bfc0:	add	lr, pc, lr
   1bfc4:	str	r0, [sp, #12]
   1bfc8:	mov	r0, lr
   1bfcc:	ldr	r1, [sp, #12]
   1bfd0:	bl	52e4 <rb_lib_log@plt>
   1bfd4:	movw	r0, #0
   1bfd8:	str	r0, [fp, #-4]
   1bfdc:	b	1c080 <rb_sigio_sched_event+0x168>
   1bfe0:	add	r0, sp, #16
   1bfe4:	movw	r1, #0
   1bfe8:	and	r1, r1, #255	; 0xff
   1bfec:	movw	r2, #16
   1bff0:	bl	4ff0 <memset@plt>
   1bff4:	ldr	r0, [fp, #-12]
   1bff8:	str	r0, [sp, #24]
   1bffc:	movw	r0, #0
   1c000:	str	r0, [sp, #28]
   1c004:	ldr	r0, [fp, #-8]
   1c008:	ldr	r0, [r0, #24]
   1c00c:	cmp	r0, #0
   1c010:	beq	1c024 <rb_sigio_sched_event+0x10c>
   1c014:	ldr	r0, [sp, #24]
   1c018:	str	r0, [sp, #16]
   1c01c:	ldr	r0, [sp, #28]
   1c020:	str	r0, [sp, #20]
   1c024:	ldr	r0, [fp, #-16]
   1c028:	ldr	r0, [r0]
   1c02c:	movw	r1, #0
   1c030:	str	r1, [sp, #8]
   1c034:	add	r2, sp, #16
   1c038:	ldr	r3, [sp, #8]
   1c03c:	bl	5128 <timer_settime@plt>
   1c040:	cmp	r0, #0
   1c044:	bge	1c078 <rb_sigio_sched_event+0x160>
   1c048:	bl	56c8 <__errno_location@plt>
   1c04c:	ldr	r0, [r0]
   1c050:	bl	4d5c <strerror@plt>
   1c054:	ldr	lr, [pc, #52]	; 1c090 <rb_sigio_sched_event+0x178>
   1c058:	add	lr, pc, lr
   1c05c:	str	r0, [sp, #4]
   1c060:	mov	r0, lr
   1c064:	ldr	r1, [sp, #4]
   1c068:	bl	52e4 <rb_lib_log@plt>
   1c06c:	movw	r0, #0
   1c070:	str	r0, [fp, #-4]
   1c074:	b	1c080 <rb_sigio_sched_event+0x168>
   1c078:	movw	r0, #1
   1c07c:	str	r0, [fp, #-4]
   1c080:	ldr	r0, [fp, #-4]
   1c084:	mov	sp, fp
   1c088:	pop	{fp, pc}
   1c08c:	.word	0x000372c8
   1c090:	.word	0x00007b79
   1c094:	.word	0x00007bff

0001c098 <rb_sigio_unsched_event>:
   1c098:	push	{fp, lr}
   1c09c:	mov	fp, sp
   1c0a0:	sub	sp, sp, #8
   1c0a4:	ldr	r1, [pc, #76]	; 1c0f8 <rb_sigio_unsched_event+0x60>
   1c0a8:	add	r1, pc, r1
   1c0ac:	str	r0, [sp, #4]
   1c0b0:	ldr	r0, [r1]
   1c0b4:	cmp	r0, #0
   1c0b8:	bgt	1c0c0 <rb_sigio_unsched_event+0x28>
   1c0bc:	b	1c0f0 <rb_sigio_unsched_event+0x58>
   1c0c0:	ldr	r0, [sp, #4]
   1c0c4:	ldr	r0, [r0, #40]	; 0x28
   1c0c8:	ldr	r0, [r0]
   1c0cc:	bl	5440 <timer_delete@plt>
   1c0d0:	ldr	lr, [sp, #4]
   1c0d4:	ldr	lr, [lr, #40]	; 0x28
   1c0d8:	str	r0, [sp]
   1c0dc:	mov	r0, lr
   1c0e0:	bl	1c0fc <rb_free>
   1c0e4:	ldr	r0, [sp, #4]
   1c0e8:	movw	lr, #0
   1c0ec:	str	lr, [r0, #40]	; 0x28
   1c0f0:	mov	sp, fp
   1c0f4:	pop	{fp, pc}
   1c0f8:	.word	0x00037148

0001c0fc <rb_free>:
   1c0fc:	push	{fp, lr}
   1c100:	mov	fp, sp
   1c104:	sub	sp, sp, #8
   1c108:	str	r0, [sp, #4]
   1c10c:	ldr	r0, [sp, #4]
   1c110:	movw	r1, #0
   1c114:	cmp	r0, r1
   1c118:	movw	r0, #0
   1c11c:	movne	r0, #1
   1c120:	mvn	r1, #0
   1c124:	eor	r0, r0, r1
   1c128:	eor	r0, r0, r1
   1c12c:	tst	r0, #1
   1c130:	beq	1c13c <rb_free+0x40>
   1c134:	ldr	r0, [sp, #4]
   1c138:	bl	50c8 <free@plt>
   1c13c:	mov	sp, fp
   1c140:	pop	{fp, pc}

0001c144 <rb_realloc>:
   1c144:	push	{fp, lr}
   1c148:	mov	fp, sp
   1c14c:	sub	sp, sp, #16
   1c150:	str	r0, [fp, #-4]
   1c154:	str	r1, [sp, #8]
   1c158:	ldr	r0, [fp, #-4]
   1c15c:	ldr	r1, [sp, #8]
   1c160:	bl	5614 <realloc@plt>
   1c164:	str	r0, [sp, #4]
   1c168:	ldr	r0, [sp, #4]
   1c16c:	movw	r1, #0
   1c170:	cmp	r0, r1
   1c174:	movw	r0, #0
   1c178:	moveq	r0, #1
   1c17c:	mvn	r1, #0
   1c180:	eor	r0, r0, r1
   1c184:	eor	r0, r0, r1
   1c188:	tst	r0, #1
   1c18c:	beq	1c194 <rb_realloc+0x50>
   1c190:	bl	5350 <rb_outofmemory@plt>
   1c194:	ldr	r0, [sp, #4]
   1c198:	mov	sp, fp
   1c19c:	pop	{fp, pc}

0001c1a0 <rb_setup_fd_select>:
   1c1a0:	sub	sp, sp, #4
   1c1a4:	str	r0, [sp]
   1c1a8:	movw	r0, #0
   1c1ac:	add	sp, sp, #4
   1c1b0:	bx	lr

0001c1b4 <rb_init_netio_select>:
   1c1b4:	sub	sp, sp, #16
   1c1b8:	ldr	r0, [pc, #192]	; 1c280 <rb_init_netio_select+0xcc>
   1c1bc:	ldr	r0, [pc, r0]
   1c1c0:	ldr	r0, [r0]
   1c1c4:	cmp	r0, #1024	; 0x400
   1c1c8:	ble	1c1dc <rb_init_netio_select+0x28>
   1c1cc:	ldr	r0, [pc, #176]	; 1c284 <rb_init_netio_select+0xd0>
   1c1d0:	ldr	r0, [pc, r0]
   1c1d4:	movw	r1, #1024	; 0x400
   1c1d8:	str	r1, [r0]
   1c1dc:	b	1c1e0 <rb_init_netio_select+0x2c>
   1c1e0:	ldr	r0, [pc, #160]	; 1c288 <rb_init_netio_select+0xd4>
   1c1e4:	add	r0, pc, r0
   1c1e8:	str	r0, [sp, #8]
   1c1ec:	movw	r0, #0
   1c1f0:	str	r0, [sp, #12]
   1c1f4:	ldr	r0, [sp, #12]
   1c1f8:	cmp	r0, #32
   1c1fc:	bcs	1c224 <rb_init_netio_select+0x70>
   1c200:	ldr	r0, [sp, #8]
   1c204:	ldr	r1, [sp, #12]
   1c208:	add	r0, r0, r1, lsl #2
   1c20c:	movw	r1, #0
   1c210:	str	r1, [r0]
   1c214:	ldr	r0, [sp, #12]
   1c218:	add	r0, r0, #1
   1c21c:	str	r0, [sp, #12]
   1c220:	b	1c1f4 <rb_init_netio_select+0x40>
   1c224:	b	1c228 <rb_init_netio_select+0x74>
   1c228:	b	1c22c <rb_init_netio_select+0x78>
   1c22c:	ldr	r0, [pc, #88]	; 1c28c <rb_init_netio_select+0xd8>
   1c230:	add	r0, pc, r0
   1c234:	str	r0, [sp]
   1c238:	movw	r0, #0
   1c23c:	str	r0, [sp, #4]
   1c240:	ldr	r0, [sp, #4]
   1c244:	cmp	r0, #32
   1c248:	bcs	1c270 <rb_init_netio_select+0xbc>
   1c24c:	ldr	r0, [sp]
   1c250:	ldr	r1, [sp, #4]
   1c254:	add	r0, r0, r1, lsl #2
   1c258:	movw	r1, #0
   1c25c:	str	r1, [r0]
   1c260:	ldr	r0, [sp, #4]
   1c264:	add	r0, r0, #1
   1c268:	str	r0, [sp, #4]
   1c26c:	b	1c240 <rb_init_netio_select+0x8c>
   1c270:	b	1c274 <rb_init_netio_select+0xc0>
   1c274:	movw	r0, #0
   1c278:	add	sp, sp, #16
   1c27c:	bx	lr
   1c280:	.word	0x000191e4
   1c284:	.word	0x000191d0
   1c288:	.word	0x00037010
   1c28c:	.word	0x00037044

0001c290 <rb_setselect_select>:
   1c290:	push	{fp, lr}
   1c294:	mov	fp, sp
   1c298:	sub	sp, sp, #16
   1c29c:	str	r0, [fp, #-4]
   1c2a0:	str	r1, [sp, #8]
   1c2a4:	str	r2, [sp, #4]
   1c2a8:	str	r3, [sp]
   1c2ac:	ldr	r0, [sp, #8]
   1c2b0:	and	r0, r0, #1
   1c2b4:	cmp	r0, #0
   1c2b8:	beq	1c2e8 <rb_setselect_select+0x58>
   1c2bc:	ldr	r0, [sp, #4]
   1c2c0:	ldr	r1, [fp, #-4]
   1c2c4:	str	r0, [r1, #28]
   1c2c8:	ldr	r0, [sp]
   1c2cc:	ldr	r1, [fp, #-4]
   1c2d0:	str	r0, [r1, #32]
   1c2d4:	ldr	r0, [fp, #-4]
   1c2d8:	ldr	r2, [sp, #4]
   1c2dc:	movw	r1, #1
   1c2e0:	sxth	r1, r1
   1c2e4:	bl	1c32c <select_update_selectfds>
   1c2e8:	ldr	r0, [sp, #8]
   1c2ec:	and	r0, r0, #2
   1c2f0:	cmp	r0, #0
   1c2f4:	beq	1c324 <rb_setselect_select+0x94>
   1c2f8:	ldr	r0, [sp, #4]
   1c2fc:	ldr	r1, [fp, #-4]
   1c300:	str	r0, [r1, #36]	; 0x24
   1c304:	ldr	r0, [sp]
   1c308:	ldr	r1, [fp, #-4]
   1c30c:	str	r0, [r1, #40]	; 0x28
   1c310:	ldr	r0, [fp, #-4]
   1c314:	ldr	r2, [sp, #4]
   1c318:	movw	r1, #2
   1c31c:	sxth	r1, r1
   1c320:	bl	1c32c <select_update_selectfds>
   1c324:	mov	sp, fp
   1c328:	pop	{fp, pc}

0001c32c <select_update_selectfds>:
   1c32c:	sub	sp, sp, #32
   1c330:	str	r0, [sp, #28]
   1c334:	strh	r1, [sp, #26]
   1c338:	str	r2, [sp, #20]
   1c33c:	ldrsh	r0, [sp, #26]
   1c340:	and	r0, r0, #1
   1c344:	cmp	r0, #0
   1c348:	beq	1c418 <select_update_selectfds+0xec>
   1c34c:	ldr	r0, [sp, #20]
   1c350:	movw	r1, #0
   1c354:	cmp	r0, r1
   1c358:	beq	1c3b8 <select_update_selectfds+0x8c>
   1c35c:	ldr	r0, [pc, #736]	; 1c644 <select_update_selectfds+0x318>
   1c360:	add	r0, pc, r0
   1c364:	ldr	r1, [sp, #28]
   1c368:	ldr	r1, [r1, #12]
   1c36c:	asr	r2, r1, #31
   1c370:	add	r2, r1, r2, lsr #27
   1c374:	bic	r3, r2, #31
   1c378:	sub	r1, r1, r3
   1c37c:	mov	r3, #1
   1c380:	lsl	r1, r3, r1
   1c384:	asr	r2, r2, #5
   1c388:	ldr	r3, [pc, #724]	; 1c664 <select_update_selectfds+0x338>
   1c38c:	add	r3, pc, r3
   1c390:	add	r2, r3, r2, lsl #2
   1c394:	ldr	r3, [r2]
   1c398:	orr	r1, r3, r1
   1c39c:	str	r1, [r2]
   1c3a0:	ldr	r1, [sp, #28]
   1c3a4:	ldr	r2, [r1, #20]
   1c3a8:	orr	r2, r2, #1
   1c3ac:	str	r2, [r1, #20]
   1c3b0:	str	r0, [sp, #16]
   1c3b4:	b	1c414 <select_update_selectfds+0xe8>
   1c3b8:	ldr	r0, [pc, #640]	; 1c640 <select_update_selectfds+0x314>
   1c3bc:	add	r0, pc, r0
   1c3c0:	ldr	r1, [sp, #28]
   1c3c4:	ldr	r1, [r1, #12]
   1c3c8:	asr	r2, r1, #31
   1c3cc:	add	r2, r1, r2, lsr #27
   1c3d0:	bic	r3, r2, #31
   1c3d4:	sub	r1, r1, r3
   1c3d8:	mov	r3, #1
   1c3dc:	mvn	r1, r3, lsl r1
   1c3e0:	asr	r2, r2, #5
   1c3e4:	ldr	r3, [pc, #636]	; 1c668 <select_update_selectfds+0x33c>
   1c3e8:	add	r3, pc, r3
   1c3ec:	add	r2, r3, r2, lsl #2
   1c3f0:	ldr	r3, [r2]
   1c3f4:	and	r1, r3, r1
   1c3f8:	str	r1, [r2]
   1c3fc:	ldr	r1, [sp, #28]
   1c400:	ldr	r2, [r1, #20]
   1c404:	mvn	r3, #1
   1c408:	and	r2, r2, r3
   1c40c:	str	r2, [r1, #20]
   1c410:	str	r0, [sp, #12]
   1c414:	b	1c418 <select_update_selectfds+0xec>
   1c418:	ldrsh	r0, [sp, #26]
   1c41c:	and	r0, r0, #2
   1c420:	cmp	r0, #0
   1c424:	beq	1c4f4 <select_update_selectfds+0x1c8>
   1c428:	ldr	r0, [sp, #20]
   1c42c:	movw	r1, #0
   1c430:	cmp	r0, r1
   1c434:	beq	1c494 <select_update_selectfds+0x168>
   1c438:	ldr	r0, [pc, #524]	; 1c64c <select_update_selectfds+0x320>
   1c43c:	add	r0, pc, r0
   1c440:	ldr	r1, [sp, #28]
   1c444:	ldr	r1, [r1, #12]
   1c448:	asr	r2, r1, #31
   1c44c:	add	r2, r1, r2, lsr #27
   1c450:	bic	r3, r2, #31
   1c454:	sub	r1, r1, r3
   1c458:	mov	r3, #1
   1c45c:	lsl	r1, r3, r1
   1c460:	asr	r2, r2, #5
   1c464:	ldr	r3, [pc, #512]	; 1c66c <select_update_selectfds+0x340>
   1c468:	add	r3, pc, r3
   1c46c:	add	r2, r3, r2, lsl #2
   1c470:	ldr	r3, [r2]
   1c474:	orr	r1, r3, r1
   1c478:	str	r1, [r2]
   1c47c:	ldr	r1, [sp, #28]
   1c480:	ldr	r2, [r1, #20]
   1c484:	orr	r2, r2, #2
   1c488:	str	r2, [r1, #20]
   1c48c:	str	r0, [sp, #8]
   1c490:	b	1c4f0 <select_update_selectfds+0x1c4>
   1c494:	ldr	r0, [pc, #428]	; 1c648 <select_update_selectfds+0x31c>
   1c498:	add	r0, pc, r0
   1c49c:	ldr	r1, [sp, #28]
   1c4a0:	ldr	r1, [r1, #12]
   1c4a4:	asr	r2, r1, #31
   1c4a8:	add	r2, r1, r2, lsr #27
   1c4ac:	bic	r3, r2, #31
   1c4b0:	sub	r1, r1, r3
   1c4b4:	mov	r3, #1
   1c4b8:	mvn	r1, r3, lsl r1
   1c4bc:	asr	r2, r2, #5
   1c4c0:	ldr	r3, [pc, #424]	; 1c670 <select_update_selectfds+0x344>
   1c4c4:	add	r3, pc, r3
   1c4c8:	add	r2, r3, r2, lsl #2
   1c4cc:	ldr	r3, [r2]
   1c4d0:	and	r1, r3, r1
   1c4d4:	str	r1, [r2]
   1c4d8:	ldr	r1, [sp, #28]
   1c4dc:	ldr	r2, [r1, #20]
   1c4e0:	mvn	r3, #2
   1c4e4:	and	r2, r2, r3
   1c4e8:	str	r2, [r1, #20]
   1c4ec:	str	r0, [sp, #4]
   1c4f0:	b	1c4f4 <select_update_selectfds+0x1c8>
   1c4f4:	ldr	r0, [sp, #28]
   1c4f8:	ldr	r0, [r0, #20]
   1c4fc:	and	r0, r0, #3
   1c500:	cmp	r0, #0
   1c504:	beq	1c53c <select_update_selectfds+0x210>
   1c508:	ldr	r0, [pc, #332]	; 1c65c <select_update_selectfds+0x330>
   1c50c:	add	r0, pc, r0
   1c510:	ldr	r1, [sp, #28]
   1c514:	ldr	r1, [r1, #12]
   1c518:	ldr	r0, [r0]
   1c51c:	cmp	r1, r0
   1c520:	ble	1c538 <select_update_selectfds+0x20c>
   1c524:	ldr	r0, [pc, #308]	; 1c660 <select_update_selectfds+0x334>
   1c528:	add	r0, pc, r0
   1c52c:	ldr	r1, [sp, #28]
   1c530:	ldr	r1, [r1, #12]
   1c534:	str	r1, [r0]
   1c538:	b	1c638 <select_update_selectfds+0x30c>
   1c53c:	ldr	r0, [pc, #268]	; 1c650 <select_update_selectfds+0x324>
   1c540:	add	r0, pc, r0
   1c544:	ldr	r1, [sp, #28]
   1c548:	ldr	r1, [r1, #12]
   1c54c:	ldr	r0, [r0]
   1c550:	cmp	r1, r0
   1c554:	bgt	1c634 <select_update_selectfds+0x308>
   1c558:	b	1c55c <select_update_selectfds+0x230>
   1c55c:	ldr	r0, [pc, #240]	; 1c654 <select_update_selectfds+0x328>
   1c560:	add	r0, pc, r0
   1c564:	ldr	r0, [r0]
   1c568:	cmp	r0, #0
   1c56c:	movw	r0, #0
   1c570:	str	r0, [sp]
   1c574:	blt	1c608 <select_update_selectfds+0x2dc>
   1c578:	ldr	r0, [pc, #244]	; 1c674 <select_update_selectfds+0x348>
   1c57c:	ldr	r0, [pc, r0]
   1c580:	ldr	r1, [pc, #240]	; 1c678 <select_update_selectfds+0x34c>
   1c584:	add	r1, pc, r1
   1c588:	asr	r2, r0, #31
   1c58c:	add	r2, r0, r2, lsr #27
   1c590:	asr	r3, r2, #5
   1c594:	ldr	r1, [r1, r3, lsl #2]
   1c598:	bic	r2, r2, #31
   1c59c:	sub	r0, r0, r2
   1c5a0:	movw	r2, #1
   1c5a4:	lsl	r0, r2, r0
   1c5a8:	and	r0, r1, r0
   1c5ac:	cmp	r0, #0
   1c5b0:	movw	r0, #0
   1c5b4:	str	r0, [sp]
   1c5b8:	bne	1c608 <select_update_selectfds+0x2dc>
   1c5bc:	ldr	r0, [pc, #184]	; 1c67c <select_update_selectfds+0x350>
   1c5c0:	ldr	r0, [pc, r0]
   1c5c4:	ldr	r1, [pc, #180]	; 1c680 <select_update_selectfds+0x354>
   1c5c8:	add	r1, pc, r1
   1c5cc:	asr	r2, r0, #31
   1c5d0:	add	r2, r0, r2, lsr #27
   1c5d4:	asr	r3, r2, #5
   1c5d8:	ldr	r1, [r1, r3, lsl #2]
   1c5dc:	bic	r2, r2, #31
   1c5e0:	sub	r0, r0, r2
   1c5e4:	movw	r2, #1
   1c5e8:	lsl	r0, r2, r0
   1c5ec:	and	r0, r1, r0
   1c5f0:	cmp	r0, #0
   1c5f4:	movw	r0, #0
   1c5f8:	movne	r0, #1
   1c5fc:	mvn	r1, #0
   1c600:	eor	r0, r0, r1
   1c604:	str	r0, [sp]
   1c608:	ldr	r0, [sp]
   1c60c:	tst	r0, #1
   1c610:	beq	1c630 <select_update_selectfds+0x304>
   1c614:	ldr	r0, [pc, #60]	; 1c658 <select_update_selectfds+0x32c>
   1c618:	add	r0, pc, r0
   1c61c:	ldr	r1, [r0]
   1c620:	mvn	r2, #0
   1c624:	add	r1, r1, r2
   1c628:	str	r1, [r0]
   1c62c:	b	1c55c <select_update_selectfds+0x230>
   1c630:	b	1c634 <select_update_selectfds+0x308>
   1c634:	b	1c638 <select_update_selectfds+0x30c>
   1c638:	add	sp, sp, #32
   1c63c:	bx	lr
   1c640:	.word	0x00036e38
   1c644:	.word	0x00036e94
   1c648:	.word	0x00036ddc
   1c64c:	.word	0x00036e38
   1c650:	.word	0x00019408
   1c654:	.word	0x000193e8
   1c658:	.word	0x00019330
   1c65c:	.word	0x0001943c
   1c660:	.word	0x00019420
   1c664:	.word	0x00036e68
   1c668:	.word	0x00036e0c
   1c66c:	.word	0x00036e0c
   1c670:	.word	0x00036db0
   1c674:	.word	0x000193cc
   1c678:	.word	0x00036c70
   1c67c:	.word	0x00019388
   1c680:	.word	0x00036cac

0001c684 <rb_select_select>:
   1c684:	push	{fp, lr}
   1c688:	mov	fp, sp
   1c68c:	sub	sp, sp, #56	; 0x38
   1c690:	ldr	r1, [pc, #708]	; 1c95c <rb_select_select+0x2d8>
   1c694:	add	r1, pc, r1
   1c698:	ldr	r2, [pc, #704]	; 1c960 <rb_select_select+0x2dc>
   1c69c:	add	r2, pc, r2
   1c6a0:	ldr	r3, [pc, #700]	; 1c964 <rb_select_select+0x2e0>
   1c6a4:	add	r3, pc, r3
   1c6a8:	ldr	ip, [pc, #696]	; 1c968 <rb_select_select+0x2e4>
   1c6ac:	add	ip, pc, ip
   1c6b0:	str	r0, [fp, #-8]
   1c6b4:	mov	r0, r3
   1c6b8:	str	r1, [sp, #20]
   1c6bc:	mov	r1, ip
   1c6c0:	movw	r3, #128	; 0x80
   1c6c4:	str	r2, [sp, #16]
   1c6c8:	mov	r2, r3
   1c6cc:	str	r3, [sp, #12]
   1c6d0:	bl	51dc <memcpy@plt>
   1c6d4:	ldr	r0, [sp, #20]
   1c6d8:	ldr	r1, [sp, #16]
   1c6dc:	ldr	r2, [sp, #12]
   1c6e0:	bl	51dc <memcpy@plt>
   1c6e4:	ldr	r0, [pc, #640]	; 1c96c <rb_select_select+0x2e8>
   1c6e8:	add	r1, pc, r0
   1c6ec:	ldr	r0, [pc, #636]	; 1c970 <rb_select_select+0x2ec>
   1c6f0:	add	r2, pc, r0
   1c6f4:	ldr	r0, [pc, #632]	; 1c974 <rb_select_select+0x2f0>
   1c6f8:	add	r0, pc, r0
   1c6fc:	movw	r3, #0
   1c700:	str	r3, [sp, #24]
   1c704:	ldr	ip, [fp, #-8]
   1c708:	movw	lr, #1000	; 0x3e8
   1c70c:	mul	ip, ip, lr
   1c710:	str	ip, [sp, #28]
   1c714:	ldr	r0, [r0]
   1c718:	add	r0, r0, #1
   1c71c:	add	ip, sp, #24
   1c720:	str	ip, [sp]
   1c724:	bl	52fc <select@plt>
   1c728:	str	r0, [fp, #-12]
   1c72c:	ldr	r0, [fp, #-12]
   1c730:	cmp	r0, #0
   1c734:	blt	1c73c <rb_select_select+0xb8>
   1c738:	b	1c764 <rb_select_select+0xe0>
   1c73c:	bl	56c8 <__errno_location@plt>
   1c740:	ldr	r0, [r0]
   1c744:	bl	4d98 <rb_ignore_errno@plt>
   1c748:	cmp	r0, #0
   1c74c:	beq	1c754 <rb_select_select+0xd0>
   1c750:	b	1c6e4 <rb_select_select+0x60>
   1c754:	bl	535c <rb_set_time@plt>
   1c758:	mvn	lr, #0
   1c75c:	str	lr, [fp, #-4]
   1c760:	b	1c950 <rb_select_select+0x2cc>
   1c764:	bl	535c <rb_set_time@plt>
   1c768:	ldr	lr, [fp, #-12]
   1c76c:	cmp	lr, #0
   1c770:	bne	1c780 <rb_select_select+0xfc>
   1c774:	movw	r0, #0
   1c778:	str	r0, [fp, #-4]
   1c77c:	b	1c950 <rb_select_select+0x2cc>
   1c780:	movw	r0, #0
   1c784:	str	r0, [fp, #-16]
   1c788:	ldr	r0, [pc, #488]	; 1c978 <rb_select_select+0x2f4>
   1c78c:	add	r0, pc, r0
   1c790:	ldr	r1, [fp, #-16]
   1c794:	ldr	r0, [r0]
   1c798:	add	r0, r0, #1
   1c79c:	cmp	r1, r0
   1c7a0:	bge	1c948 <rb_select_select+0x2c4>
   1c7a4:	ldr	r0, [fp, #-16]
   1c7a8:	bl	1c984 <rb_find_fd>
   1c7ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7b4:	movw	lr, #0
   1c7b8:	cmp	r0, lr
   1c7bc:	bne	1c7c4 <rb_select_select+0x140>
   1c7c0:	b	1c938 <rb_select_select+0x2b4>
   1c7c4:	ldr	r0, [fp, #-16]
   1c7c8:	ldr	r1, [pc, #428]	; 1c97c <rb_select_select+0x2f8>
   1c7cc:	add	r1, pc, r1
   1c7d0:	asr	r2, r0, #31
   1c7d4:	add	r2, r0, r2, lsr #27
   1c7d8:	asr	r3, r2, #5
   1c7dc:	ldr	r1, [r1, r3, lsl #2]
   1c7e0:	bic	r2, r2, #31
   1c7e4:	sub	r0, r0, r2
   1c7e8:	movw	r2, #1
   1c7ec:	lsl	r0, r2, r0
   1c7f0:	and	r0, r1, r0
   1c7f4:	cmp	r0, #0
   1c7f8:	beq	1c848 <rb_select_select+0x1c4>
   1c7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c800:	ldr	r0, [r0, #28]
   1c804:	str	r0, [fp, #-20]	; 0xffffffec
   1c808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c80c:	movw	r1, #0
   1c810:	str	r1, [r0, #28]
   1c814:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c818:	cmp	r0, r1
   1c81c:	beq	1c844 <rb_select_select+0x1c0>
   1c820:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c82c:	ldr	r2, [r2, #32]
   1c830:	str	r0, [sp, #8]
   1c834:	mov	r0, r1
   1c838:	mov	r1, r2
   1c83c:	ldr	r2, [sp, #8]
   1c840:	blx	r2
   1c844:	b	1c848 <rb_select_select+0x1c4>
   1c848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c84c:	ldrb	r0, [r0, #16]
   1c850:	and	r0, r0, #1
   1c854:	cmp	r0, #0
   1c858:	bne	1c860 <rb_select_select+0x1dc>
   1c85c:	b	1c938 <rb_select_select+0x2b4>
   1c860:	ldr	r0, [fp, #-16]
   1c864:	ldr	r1, [pc, #276]	; 1c980 <rb_select_select+0x2fc>
   1c868:	add	r1, pc, r1
   1c86c:	asr	r2, r0, #31
   1c870:	add	r2, r0, r2, lsr #27
   1c874:	asr	r3, r2, #5
   1c878:	ldr	r1, [r1, r3, lsl #2]
   1c87c:	bic	r2, r2, #31
   1c880:	sub	r0, r0, r2
   1c884:	movw	r2, #1
   1c888:	lsl	r0, r2, r0
   1c88c:	and	r0, r1, r0
   1c890:	cmp	r0, #0
   1c894:	beq	1c8e4 <rb_select_select+0x260>
   1c898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c89c:	ldr	r0, [r0, #36]	; 0x24
   1c8a0:	str	r0, [fp, #-20]	; 0xffffffec
   1c8a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8a8:	movw	r1, #0
   1c8ac:	str	r1, [r0, #36]	; 0x24
   1c8b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c8b4:	cmp	r0, r1
   1c8b8:	beq	1c8e0 <rb_select_select+0x25c>
   1c8bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c8c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c8c8:	ldr	r2, [r2, #40]	; 0x28
   1c8cc:	str	r0, [sp, #4]
   1c8d0:	mov	r0, r1
   1c8d4:	mov	r1, r2
   1c8d8:	ldr	r2, [sp, #4]
   1c8dc:	blx	r2
   1c8e0:	b	1c8e4 <rb_select_select+0x260>
   1c8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8e8:	ldr	r0, [r0, #28]
   1c8ec:	movw	r1, #0
   1c8f0:	cmp	r0, r1
   1c8f4:	bne	1c90c <rb_select_select+0x288>
   1c8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8fc:	movw	r1, #1
   1c900:	sxth	r1, r1
   1c904:	movw	r2, #0
   1c908:	bl	1c32c <select_update_selectfds>
   1c90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c910:	ldr	r0, [r0, #36]	; 0x24
   1c914:	movw	r1, #0
   1c918:	cmp	r0, r1
   1c91c:	bne	1c934 <rb_select_select+0x2b0>
   1c920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c924:	movw	r1, #2
   1c928:	sxth	r1, r1
   1c92c:	movw	r2, #0
   1c930:	bl	1c32c <select_update_selectfds>
   1c934:	b	1c938 <rb_select_select+0x2b4>
   1c938:	ldr	r0, [fp, #-16]
   1c93c:	add	r0, r0, #1
   1c940:	str	r0, [fp, #-16]
   1c944:	b	1c788 <rb_select_select+0x104>
   1c948:	movw	r0, #0
   1c94c:	str	r0, [fp, #-4]
   1c950:	ldr	r0, [fp, #-4]
   1c954:	mov	sp, fp
   1c958:	pop	{fp, pc}
   1c95c:	.word	0x00036ce0
   1c960:	.word	0x00036bd8
   1c964:	.word	0x00036c50
   1c968:	.word	0x00036b48
   1c96c:	.word	0x00036c0c
   1c970:	.word	0x00036c84
   1c974:	.word	0x00019250
   1c978:	.word	0x000191bc
   1c97c:	.word	0x00036b28
   1c980:	.word	0x00036b0c

0001c984 <rb_find_fd>:
   1c984:	sub	sp, sp, #20
   1c988:	str	r0, [sp, #12]
   1c98c:	ldr	r0, [sp, #12]
   1c990:	cmp	r0, #0
   1c994:	movw	r0, #0
   1c998:	movlt	r0, #1
   1c99c:	mvn	r1, #0
   1c9a0:	eor	r0, r0, r1
   1c9a4:	eor	r0, r0, r1
   1c9a8:	tst	r0, #1
   1c9ac:	beq	1c9bc <rb_find_fd+0x38>
   1c9b0:	movw	r0, #0
   1c9b4:	str	r0, [sp, #16]
   1c9b8:	b	1ca80 <rb_find_fd+0xfc>
   1c9bc:	ldr	r0, [pc, #200]	; 1ca8c <rb_find_fd+0x108>
   1c9c0:	ldr	r0, [pc, r0]
   1c9c4:	ldr	r0, [r0]
   1c9c8:	ldr	r1, [sp, #12]
   1c9cc:	ldr	r2, [sp, #12]
   1c9d0:	asr	r2, r2, #12
   1c9d4:	eor	r1, r1, r2
   1c9d8:	ldr	r2, [sp, #12]
   1c9dc:	asr	r2, r2, #24
   1c9e0:	eor	r1, r1, r2
   1c9e4:	movw	r2, #4095	; 0xfff
   1c9e8:	and	r1, r1, r2
   1c9ec:	movw	r2, #12
   1c9f0:	mul	r1, r1, r2
   1c9f4:	add	r0, r0, r1
   1c9f8:	str	r0, [sp, #8]
   1c9fc:	ldr	r0, [sp, #8]
   1ca00:	ldr	r0, [r0]
   1ca04:	movw	r1, #0
   1ca08:	cmp	r0, r1
   1ca0c:	bne	1ca1c <rb_find_fd+0x98>
   1ca10:	movw	r0, #0
   1ca14:	str	r0, [sp, #16]
   1ca18:	b	1ca80 <rb_find_fd+0xfc>
   1ca1c:	ldr	r0, [sp, #8]
   1ca20:	ldr	r0, [r0]
   1ca24:	str	r0, [sp, #4]
   1ca28:	ldr	r0, [sp, #4]
   1ca2c:	movw	r1, #0
   1ca30:	cmp	r0, r1
   1ca34:	beq	1ca78 <rb_find_fd+0xf4>
   1ca38:	ldr	r0, [sp, #4]
   1ca3c:	ldr	r0, [r0]
   1ca40:	str	r0, [sp]
   1ca44:	ldr	r0, [sp]
   1ca48:	ldr	r0, [r0, #12]
   1ca4c:	ldr	r1, [sp, #12]
   1ca50:	cmp	r0, r1
   1ca54:	bne	1ca64 <rb_find_fd+0xe0>
   1ca58:	ldr	r0, [sp]
   1ca5c:	str	r0, [sp, #16]
   1ca60:	b	1ca80 <rb_find_fd+0xfc>
   1ca64:	b	1ca68 <rb_find_fd+0xe4>
   1ca68:	ldr	r0, [sp, #4]
   1ca6c:	ldr	r0, [r0, #8]
   1ca70:	str	r0, [sp, #4]
   1ca74:	b	1ca28 <rb_find_fd+0xa4>
   1ca78:	movw	r0, #0
   1ca7c:	str	r0, [sp, #16]
   1ca80:	ldr	r0, [sp, #16]
   1ca84:	add	sp, sp, #20
   1ca88:	bx	lr
   1ca8c:	.word	0x00018a00

0001ca90 <rb_init_netio_kqueue>:
   1ca90:	push	{fp, lr}
   1ca94:	mov	fp, sp
   1ca98:	bl	56c8 <__errno_location@plt>
   1ca9c:	movw	lr, #38	; 0x26
   1caa0:	str	lr, [r0]
   1caa4:	mvn	r0, #0
   1caa8:	pop	{fp, pc}

0001caac <rb_setselect_kqueue>:
   1caac:	push	{fp, lr}
   1cab0:	mov	fp, sp
   1cab4:	sub	sp, sp, #16
   1cab8:	str	r0, [fp, #-4]
   1cabc:	str	r1, [sp, #8]
   1cac0:	str	r2, [sp, #4]
   1cac4:	str	r3, [sp]
   1cac8:	bl	56c8 <__errno_location@plt>
   1cacc:	movw	r1, #38	; 0x26
   1cad0:	str	r1, [r0]
   1cad4:	mov	sp, fp
   1cad8:	pop	{fp, pc}

0001cadc <rb_select_kqueue>:
   1cadc:	push	{fp, lr}
   1cae0:	mov	fp, sp
   1cae4:	sub	sp, sp, #8
   1cae8:	str	r0, [sp, #4]
   1caec:	bl	56c8 <__errno_location@plt>
   1caf0:	movw	lr, #38	; 0x26
   1caf4:	str	lr, [r0]
   1caf8:	mvn	r0, #0
   1cafc:	mov	sp, fp
   1cb00:	pop	{fp, pc}

0001cb04 <rb_setup_fd_kqueue>:
   1cb04:	push	{fp, lr}
   1cb08:	mov	fp, sp
   1cb0c:	sub	sp, sp, #8
   1cb10:	str	r0, [sp, #4]
   1cb14:	bl	56c8 <__errno_location@plt>
   1cb18:	movw	lr, #38	; 0x26
   1cb1c:	str	lr, [r0]
   1cb20:	mvn	r0, #0
   1cb24:	mov	sp, fp
   1cb28:	pop	{fp, pc}

0001cb2c <rb_kqueue_init_event>:
   1cb2c:	bx	lr

0001cb30 <rb_kqueue_sched_event>:
   1cb30:	push	{fp, lr}
   1cb34:	mov	fp, sp
   1cb38:	sub	sp, sp, #8
   1cb3c:	str	r0, [sp, #4]
   1cb40:	str	r1, [sp]
   1cb44:	bl	56c8 <__errno_location@plt>
   1cb48:	movw	r1, #38	; 0x26
   1cb4c:	str	r1, [r0]
   1cb50:	mvn	r0, #0
   1cb54:	mov	sp, fp
   1cb58:	pop	{fp, pc}

0001cb5c <rb_kqueue_unsched_event>:
   1cb5c:	sub	sp, sp, #4
   1cb60:	str	r0, [sp]
   1cb64:	add	sp, sp, #4
   1cb68:	bx	lr

0001cb6c <rb_kqueue_supports_event>:
   1cb6c:	push	{fp, lr}
   1cb70:	mov	fp, sp
   1cb74:	bl	56c8 <__errno_location@plt>
   1cb78:	movw	lr, #38	; 0x26
   1cb7c:	str	lr, [r0]
   1cb80:	movw	r0, #0
   1cb84:	pop	{fp, pc}

0001cb88 <rb_rawbuf_flush>:
   1cb88:	push	{fp, lr}
   1cb8c:	mov	fp, sp
   1cb90:	sub	sp, sp, #24
   1cb94:	str	r0, [fp, #-8]
   1cb98:	str	r1, [sp, #12]
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	ldr	r0, [r0]
   1cba4:	movw	r1, #0
   1cba8:	cmp	r0, r1
   1cbac:	bne	1cbc8 <rb_rawbuf_flush+0x40>
   1cbb0:	bl	56c8 <__errno_location@plt>
   1cbb4:	movw	lr, #11
   1cbb8:	str	lr, [r0]
   1cbbc:	mvn	r0, #0
   1cbc0:	str	r0, [fp, #-4]
   1cbc4:	b	1ccec <rb_rawbuf_flush+0x164>
   1cbc8:	ldr	r0, [sp, #12]
   1cbcc:	bl	4e70 <rb_fd_ssl@plt>
   1cbd0:	cmp	r0, #0
   1cbd4:	bne	1cbec <rb_rawbuf_flush+0x64>
   1cbd8:	ldr	r0, [fp, #-8]
   1cbdc:	ldr	r1, [sp, #12]
   1cbe0:	bl	1ccfc <rb_rawbuf_flush_writev>
   1cbe4:	str	r0, [fp, #-4]
   1cbe8:	b	1ccec <rb_rawbuf_flush+0x164>
   1cbec:	ldr	r0, [fp, #-8]
   1cbf0:	ldr	r0, [r0]
   1cbf4:	ldr	r0, [r0]
   1cbf8:	str	r0, [sp, #8]
   1cbfc:	ldr	r0, [sp, #8]
   1cc00:	add	r0, r0, #1040	; 0x410
   1cc04:	ldrsb	r0, [r0]
   1cc08:	cmp	r0, #0
   1cc0c:	bne	1cc28 <rb_rawbuf_flush+0xa0>
   1cc10:	ldr	r0, [sp, #8]
   1cc14:	movw	r1, #1
   1cc18:	strb	r1, [r0, #1040]	; 0x410
   1cc1c:	ldr	r0, [fp, #-8]
   1cc20:	movw	r1, #0
   1cc24:	str	r1, [r0, #16]
   1cc28:	ldr	r0, [sp, #12]
   1cc2c:	ldr	r1, [sp, #8]
   1cc30:	add	r1, r1, #12
   1cc34:	ldr	r2, [fp, #-8]
   1cc38:	ldr	r2, [r2, #16]
   1cc3c:	add	r1, r1, r2
   1cc40:	ldr	r2, [sp, #8]
   1cc44:	ldr	r2, [r2, #1036]	; 0x40c
   1cc48:	ldr	r3, [fp, #-8]
   1cc4c:	ldr	r3, [r3, #16]
   1cc50:	sub	r2, r2, r3
   1cc54:	bl	5020 <rb_write@plt>
   1cc58:	str	r0, [sp, #4]
   1cc5c:	ldr	r0, [sp, #4]
   1cc60:	cmp	r0, #0
   1cc64:	bgt	1cc74 <rb_rawbuf_flush+0xec>
   1cc68:	ldr	r0, [sp, #4]
   1cc6c:	str	r0, [fp, #-4]
   1cc70:	b	1ccec <rb_rawbuf_flush+0x164>
   1cc74:	ldr	r0, [sp, #4]
   1cc78:	ldr	r1, [fp, #-8]
   1cc7c:	ldr	r2, [r1, #16]
   1cc80:	add	r0, r2, r0
   1cc84:	str	r0, [r1, #16]
   1cc88:	ldr	r0, [fp, #-8]
   1cc8c:	ldr	r0, [r0, #16]
   1cc90:	ldr	r1, [sp, #8]
   1cc94:	ldr	r1, [r1, #1036]	; 0x40c
   1cc98:	cmp	r0, r1
   1cc9c:	bne	1ccd0 <rb_rawbuf_flush+0x148>
   1cca0:	ldr	r0, [fp, #-8]
   1cca4:	movw	r1, #0
   1cca8:	str	r1, [r0, #16]
   1ccac:	ldr	r0, [sp, #8]
   1ccb0:	ldr	r1, [fp, #-8]
   1ccb4:	bl	1d070 <rb_dlinkDelete>
   1ccb8:	ldr	r0, [pc, #56]	; 1ccf8 <rb_rawbuf_flush+0x170>
   1ccbc:	add	r0, pc, r0
   1ccc0:	ldr	r0, [r0]
   1ccc4:	ldr	r1, [sp, #8]
   1ccc8:	bl	529c <rb_bh_free@plt>
   1cccc:	str	r0, [sp]
   1ccd0:	ldr	r0, [sp, #4]
   1ccd4:	ldr	r1, [fp, #-8]
   1ccd8:	ldr	r2, [r1, #12]
   1ccdc:	sub	r0, r2, r0
   1cce0:	str	r0, [r1, #12]
   1cce4:	ldr	r0, [sp, #4]
   1cce8:	str	r0, [fp, #-4]
   1ccec:	ldr	r0, [fp, #-4]
   1ccf0:	mov	sp, fp
   1ccf4:	pop	{fp, pc}
   1ccf8:	.word	0x00036738

0001ccfc <rb_rawbuf_flush_writev>:
   1ccfc:	push	{r4, r5, fp, lr}
   1cd00:	add	fp, sp, #8
   1cd04:	sub	sp, sp, #56	; 0x38
   1cd08:	sub	sp, sp, #8192	; 0x2000
   1cd0c:	add	r2, sp, #16
   1cd10:	str	r0, [fp, #-16]
   1cd14:	str	r1, [fp, #-20]	; 0xffffffec
   1cd18:	movw	r0, #0
   1cd1c:	str	r0, [fp, #-36]	; 0xffffffdc
   1cd20:	str	r0, [fp, #-40]	; 0xffffffd8
   1cd24:	str	r0, [sp, #12]
   1cd28:	mov	r0, r2
   1cd2c:	movw	r1, #0
   1cd30:	and	r1, r1, #255	; 0xff
   1cd34:	movw	r2, #8192	; 0x2000
   1cd38:	bl	4ff0 <memset@plt>
   1cd3c:	ldr	r0, [fp, #-16]
   1cd40:	ldr	r0, [r0]
   1cd44:	ldr	r1, [sp, #12]
   1cd48:	cmp	r0, r1
   1cd4c:	bne	1cd68 <rb_rawbuf_flush_writev+0x6c>
   1cd50:	bl	56c8 <__errno_location@plt>
   1cd54:	movw	lr, #11
   1cd58:	str	lr, [r0]
   1cd5c:	mvn	r0, #0
   1cd60:	str	r0, [fp, #-12]
   1cd64:	b	1d064 <rb_rawbuf_flush_writev+0x368>
   1cd68:	ldr	r0, [fp, #-16]
   1cd6c:	ldr	r0, [r0]
   1cd70:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd78:	movw	r1, #0
   1cd7c:	cmp	r0, r1
   1cd80:	beq	1ce40 <rb_rawbuf_flush_writev+0x144>
   1cd84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cd88:	cmp	r0, #1024	; 0x400
   1cd8c:	blt	1cd94 <rb_rawbuf_flush_writev+0x98>
   1cd90:	b	1ce40 <rb_rawbuf_flush_writev+0x144>
   1cd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd98:	ldr	r0, [r0]
   1cd9c:	str	r0, [fp, #-32]	; 0xffffffe0
   1cda0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cda4:	add	r0, r0, #1040	; 0x410
   1cda8:	ldrsb	r0, [r0]
   1cdac:	cmp	r0, #0
   1cdb0:	beq	1ce00 <rb_rawbuf_flush_writev+0x104>
   1cdb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdb8:	ldr	r1, [fp, #-16]
   1cdbc:	ldr	r1, [r1, #16]
   1cdc0:	add	r0, r0, r1
   1cdc4:	add	r0, r0, #12
   1cdc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdcc:	add	r2, sp, #16
   1cdd0:	str	r0, [r2, r1, lsl #3]
   1cdd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdd8:	ldr	r0, [r0, #1036]	; 0x40c
   1cddc:	ldr	r1, [fp, #-16]
   1cde0:	ldr	r1, [r1, #16]
   1cde4:	sub	r0, r0, r1
   1cde8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cdec:	add	r3, r1, #1
   1cdf0:	str	r3, [fp, #-36]	; 0xffffffdc
   1cdf4:	add	r1, r2, r1, lsl #3
   1cdf8:	str	r0, [r1, #4]
   1cdfc:	b	1ce30 <rb_rawbuf_flush_writev+0x134>
   1ce00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce04:	add	r0, r0, #12
   1ce08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce0c:	add	r2, sp, #16
   1ce10:	str	r0, [r2, r1, lsl #3]
   1ce14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce18:	ldr	r0, [r0, #1036]	; 0x40c
   1ce1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce20:	add	r3, r1, #1
   1ce24:	str	r3, [fp, #-36]	; 0xffffffdc
   1ce28:	add	r1, r2, r1, lsl #3
   1ce2c:	str	r0, [r1, #4]
   1ce30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce34:	ldr	r0, [r0, #8]
   1ce38:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce3c:	b	1cd74 <rb_rawbuf_flush_writev+0x78>
   1ce40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ce44:	cmp	r0, #0
   1ce48:	bne	1ce64 <rb_rawbuf_flush_writev+0x168>
   1ce4c:	bl	56c8 <__errno_location@plt>
   1ce50:	movw	lr, #11
   1ce54:	str	lr, [r0]
   1ce58:	mvn	r0, #0
   1ce5c:	str	r0, [fp, #-12]
   1ce60:	b	1d064 <rb_rawbuf_flush_writev+0x368>
   1ce64:	add	r1, sp, #16
   1ce68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ce6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ce70:	bl	54a0 <rb_writev@plt>
   1ce74:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce78:	str	r0, [fp, #-44]	; 0xffffffd4
   1ce7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ce80:	cmp	r0, #0
   1ce84:	bgt	1ce94 <rb_rawbuf_flush_writev+0x198>
   1ce88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ce8c:	str	r0, [fp, #-12]
   1ce90:	b	1d064 <rb_rawbuf_flush_writev+0x368>
   1ce94:	ldr	r0, [fp, #-16]
   1ce98:	ldr	r0, [r0]
   1ce9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea4:	movw	r1, #0
   1cea8:	cmp	r0, r1
   1ceac:	beq	1cec0 <rb_rawbuf_flush_writev+0x1c4>
   1ceb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceb4:	ldr	r0, [r0, #8]
   1ceb8:	str	r0, [sp, #8]
   1cebc:	b	1cecc <rb_rawbuf_flush_writev+0x1d0>
   1cec0:	movw	r0, #0
   1cec4:	str	r0, [sp, #8]
   1cec8:	b	1cecc <rb_rawbuf_flush_writev+0x1d0>
   1cecc:	ldr	r0, [sp, #8]
   1ced0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ced4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ced8:	movw	r1, #0
   1cedc:	cmp	r0, r1
   1cee0:	beq	1d05c <rb_rawbuf_flush_writev+0x360>
   1cee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cee8:	ldr	r0, [r0]
   1ceec:	str	r0, [fp, #-32]	; 0xffffffe0
   1cef0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cef4:	add	r1, r0, #1
   1cef8:	str	r1, [fp, #-40]	; 0xffffffd8
   1cefc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cf00:	cmp	r0, r1
   1cf04:	blt	1cf0c <rb_rawbuf_flush_writev+0x210>
   1cf08:	b	1d05c <rb_rawbuf_flush_writev+0x360>
   1cf0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf10:	add	r0, r0, #1040	; 0x410
   1cf14:	ldrsb	r0, [r0]
   1cf18:	cmp	r0, #0
   1cf1c:	beq	1cf98 <rb_rawbuf_flush_writev+0x29c>
   1cf20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cf24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf28:	ldr	r1, [r1, #1036]	; 0x40c
   1cf2c:	ldr	r2, [fp, #-16]
   1cf30:	ldr	r2, [r2, #16]
   1cf34:	sub	r1, r1, r2
   1cf38:	cmp	r0, r1
   1cf3c:	blt	1cf94 <rb_rawbuf_flush_writev+0x298>
   1cf40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf44:	ldr	r0, [r0, #1036]	; 0x40c
   1cf48:	ldr	r1, [fp, #-16]
   1cf4c:	ldr	r1, [r1, #16]
   1cf50:	sub	r0, r0, r1
   1cf54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cf58:	sub	r0, r1, r0
   1cf5c:	str	r0, [fp, #-44]	; 0xffffffd4
   1cf60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf64:	ldr	r0, [r0, #1036]	; 0x40c
   1cf68:	ldr	r1, [fp, #-16]
   1cf6c:	ldr	r1, [r1, #16]
   1cf70:	sub	r0, r0, r1
   1cf74:	ldr	r1, [fp, #-16]
   1cf78:	ldr	r2, [r1, #12]
   1cf7c:	sub	r0, r2, r0
   1cf80:	str	r0, [r1, #12]
   1cf84:	ldr	r0, [fp, #-16]
   1cf88:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf8c:	bl	1d494 <rb_rawbuf_done>
   1cf90:	b	1d01c <rb_rawbuf_flush_writev+0x320>
   1cf94:	b	1cf98 <rb_rawbuf_flush_writev+0x29c>
   1cf98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cf9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cfa0:	ldr	r1, [r1, #1036]	; 0x40c
   1cfa4:	cmp	r0, r1
   1cfa8:	blt	1cfe8 <rb_rawbuf_flush_writev+0x2ec>
   1cfac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfb0:	ldr	r0, [r0, #1036]	; 0x40c
   1cfb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cfb8:	sub	r0, r1, r0
   1cfbc:	str	r0, [fp, #-44]	; 0xffffffd4
   1cfc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfc4:	ldr	r0, [r0, #1036]	; 0x40c
   1cfc8:	ldr	r1, [fp, #-16]
   1cfcc:	ldr	r2, [r1, #12]
   1cfd0:	sub	r0, r2, r0
   1cfd4:	str	r0, [r1, #12]
   1cfd8:	ldr	r0, [fp, #-16]
   1cfdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cfe0:	bl	1d494 <rb_rawbuf_done>
   1cfe4:	b	1d018 <rb_rawbuf_flush_writev+0x31c>
   1cfe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfec:	movw	r1, #1
   1cff0:	strb	r1, [r0, #1040]	; 0x410
   1cff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cff8:	ldr	r1, [fp, #-16]
   1cffc:	str	r0, [r1, #16]
   1d000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d004:	ldr	r1, [fp, #-16]
   1d008:	ldr	r2, [r1, #12]
   1d00c:	sub	r0, r2, r0
   1d010:	str	r0, [r1, #12]
   1d014:	b	1d05c <rb_rawbuf_flush_writev+0x360>
   1d018:	b	1d01c <rb_rawbuf_flush_writev+0x320>
   1d01c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d020:	str	r0, [fp, #-24]	; 0xffffffe8
   1d024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d028:	movw	r1, #0
   1d02c:	cmp	r0, r1
   1d030:	beq	1d044 <rb_rawbuf_flush_writev+0x348>
   1d034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d038:	ldr	r0, [r0, #8]
   1d03c:	str	r0, [sp, #4]
   1d040:	b	1d050 <rb_rawbuf_flush_writev+0x354>
   1d044:	movw	r0, #0
   1d048:	str	r0, [sp, #4]
   1d04c:	b	1d050 <rb_rawbuf_flush_writev+0x354>
   1d050:	ldr	r0, [sp, #4]
   1d054:	str	r0, [fp, #-28]	; 0xffffffe4
   1d058:	b	1ced4 <rb_rawbuf_flush_writev+0x1d8>
   1d05c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d060:	str	r0, [fp, #-12]
   1d064:	ldr	r0, [fp, #-12]
   1d068:	sub	sp, fp, #8
   1d06c:	pop	{r4, r5, fp, pc}

0001d070 <rb_dlinkDelete>:
   1d070:	sub	sp, sp, #8
   1d074:	str	r0, [sp, #4]
   1d078:	str	r1, [sp]
   1d07c:	ldr	r0, [sp, #4]
   1d080:	ldr	r0, [r0, #8]
   1d084:	movw	r1, #0
   1d088:	cmp	r0, r1
   1d08c:	beq	1d0a8 <rb_dlinkDelete+0x38>
   1d090:	ldr	r0, [sp, #4]
   1d094:	ldr	r0, [r0, #4]
   1d098:	ldr	r1, [sp, #4]
   1d09c:	ldr	r1, [r1, #8]
   1d0a0:	str	r0, [r1, #4]
   1d0a4:	b	1d0b8 <rb_dlinkDelete+0x48>
   1d0a8:	ldr	r0, [sp, #4]
   1d0ac:	ldr	r0, [r0, #4]
   1d0b0:	ldr	r1, [sp]
   1d0b4:	str	r0, [r1, #4]
   1d0b8:	ldr	r0, [sp, #4]
   1d0bc:	ldr	r0, [r0, #4]
   1d0c0:	movw	r1, #0
   1d0c4:	cmp	r0, r1
   1d0c8:	beq	1d0e4 <rb_dlinkDelete+0x74>
   1d0cc:	ldr	r0, [sp, #4]
   1d0d0:	ldr	r0, [r0, #8]
   1d0d4:	ldr	r1, [sp, #4]
   1d0d8:	ldr	r1, [r1, #4]
   1d0dc:	str	r0, [r1, #8]
   1d0e0:	b	1d0f4 <rb_dlinkDelete+0x84>
   1d0e4:	ldr	r0, [sp, #4]
   1d0e8:	ldr	r0, [r0, #8]
   1d0ec:	ldr	r1, [sp]
   1d0f0:	str	r0, [r1]
   1d0f4:	ldr	r0, [sp, #4]
   1d0f8:	movw	r1, #0
   1d0fc:	str	r1, [r0, #4]
   1d100:	ldr	r0, [sp, #4]
   1d104:	str	r1, [r0, #8]
   1d108:	ldr	r0, [sp]
   1d10c:	ldr	r1, [r0, #8]
   1d110:	mvn	r2, #0
   1d114:	add	r1, r1, r2
   1d118:	str	r1, [r0, #8]
   1d11c:	add	sp, sp, #8
   1d120:	bx	lr

0001d124 <rb_rawbuf_append>:
   1d124:	push	{fp, lr}
   1d128:	mov	fp, sp
   1d12c:	sub	sp, sp, #24
   1d130:	str	r0, [fp, #-4]
   1d134:	str	r1, [fp, #-8]
   1d138:	str	r2, [sp, #12]
   1d13c:	movw	r0, #0
   1d140:	str	r0, [sp, #8]
   1d144:	ldr	r1, [fp, #-4]
   1d148:	ldr	r1, [r1, #4]
   1d14c:	cmp	r1, r0
   1d150:	beq	1d164 <rb_rawbuf_append+0x40>
   1d154:	ldr	r0, [fp, #-4]
   1d158:	ldr	r0, [r0, #4]
   1d15c:	ldr	r0, [r0]
   1d160:	str	r0, [sp, #8]
   1d164:	ldr	r0, [sp, #8]
   1d168:	movw	r1, #0
   1d16c:	cmp	r0, r1
   1d170:	beq	1d254 <rb_rawbuf_append+0x130>
   1d174:	ldr	r0, [sp, #8]
   1d178:	ldr	r0, [r0, #1036]	; 0x40c
   1d17c:	cmp	r0, #1024	; 0x400
   1d180:	bge	1d254 <rb_rawbuf_append+0x130>
   1d184:	ldr	r0, [sp, #8]
   1d188:	add	r0, r0, #1040	; 0x410
   1d18c:	ldrsb	r0, [r0]
   1d190:	cmp	r0, #0
   1d194:	bne	1d254 <rb_rawbuf_append+0x130>
   1d198:	ldr	r0, [fp, #-4]
   1d19c:	ldr	r0, [r0, #4]
   1d1a0:	ldr	r0, [r0]
   1d1a4:	str	r0, [sp, #8]
   1d1a8:	ldr	r0, [sp, #8]
   1d1ac:	ldr	r0, [r0, #1036]	; 0x40c
   1d1b0:	movw	r1, #1024	; 0x400
   1d1b4:	sub	r0, r1, r0
   1d1b8:	str	r0, [sp, #4]
   1d1bc:	ldr	r0, [sp, #8]
   1d1c0:	add	r0, r0, #12
   1d1c4:	ldr	r1, [sp, #8]
   1d1c8:	ldr	r1, [r1, #1036]	; 0x40c
   1d1cc:	add	r0, r0, r1
   1d1d0:	str	r0, [sp]
   1d1d4:	ldr	r0, [sp, #12]
   1d1d8:	ldr	r1, [sp, #4]
   1d1dc:	cmp	r0, r1
   1d1e0:	bge	1d1ec <rb_rawbuf_append+0xc8>
   1d1e4:	ldr	r0, [sp, #12]
   1d1e8:	str	r0, [sp, #4]
   1d1ec:	ldr	r0, [sp]
   1d1f0:	ldr	r1, [fp, #-8]
   1d1f4:	ldr	r2, [sp, #4]
   1d1f8:	bl	51dc <memcpy@plt>
   1d1fc:	ldr	r0, [sp, #4]
   1d200:	ldr	r1, [sp, #8]
   1d204:	ldr	r2, [r1, #1036]	; 0x40c
   1d208:	add	r0, r2, r0
   1d20c:	str	r0, [r1, #1036]	; 0x40c
   1d210:	ldr	r0, [sp, #4]
   1d214:	ldr	r1, [fp, #-4]
   1d218:	ldr	r2, [r1, #12]
   1d21c:	add	r0, r2, r0
   1d220:	str	r0, [r1, #12]
   1d224:	ldr	r0, [sp, #4]
   1d228:	ldr	r1, [sp, #12]
   1d22c:	sub	r0, r1, r0
   1d230:	str	r0, [sp, #12]
   1d234:	ldr	r0, [sp, #12]
   1d238:	cmp	r0, #0
   1d23c:	bne	1d244 <rb_rawbuf_append+0x120>
   1d240:	b	1d2f0 <rb_rawbuf_append+0x1cc>
   1d244:	ldr	r0, [fp, #-8]
   1d248:	ldr	r1, [sp, #4]
   1d24c:	add	r0, r0, r1
   1d250:	str	r0, [fp, #-8]
   1d254:	b	1d258 <rb_rawbuf_append+0x134>
   1d258:	ldr	r0, [sp, #12]
   1d25c:	cmp	r0, #0
   1d260:	ble	1d2f0 <rb_rawbuf_append+0x1cc>
   1d264:	ldr	r0, [fp, #-4]
   1d268:	bl	1d2f8 <rb_rawbuf_newbuf>
   1d26c:	str	r0, [sp, #8]
   1d270:	ldr	r0, [sp, #12]
   1d274:	cmp	r0, #1024	; 0x400
   1d278:	blt	1d288 <rb_rawbuf_append+0x164>
   1d27c:	movw	r0, #1024	; 0x400
   1d280:	str	r0, [sp, #4]
   1d284:	b	1d290 <rb_rawbuf_append+0x16c>
   1d288:	ldr	r0, [sp, #12]
   1d28c:	str	r0, [sp, #4]
   1d290:	ldr	r0, [sp, #8]
   1d294:	add	r0, r0, #12
   1d298:	ldr	r1, [fp, #-8]
   1d29c:	ldr	r2, [sp, #4]
   1d2a0:	bl	51dc <memcpy@plt>
   1d2a4:	ldr	r0, [sp, #4]
   1d2a8:	ldr	r1, [sp, #8]
   1d2ac:	ldr	r2, [r1, #1036]	; 0x40c
   1d2b0:	add	r0, r2, r0
   1d2b4:	str	r0, [r1, #1036]	; 0x40c
   1d2b8:	ldr	r0, [sp, #4]
   1d2bc:	ldr	r1, [sp, #12]
   1d2c0:	sub	r0, r1, r0
   1d2c4:	str	r0, [sp, #12]
   1d2c8:	ldr	r0, [fp, #-8]
   1d2cc:	ldr	r1, [sp, #4]
   1d2d0:	add	r0, r0, r1
   1d2d4:	str	r0, [fp, #-8]
   1d2d8:	ldr	r0, [sp, #4]
   1d2dc:	ldr	r1, [fp, #-4]
   1d2e0:	ldr	r2, [r1, #12]
   1d2e4:	add	r0, r2, r0
   1d2e8:	str	r0, [r1, #12]
   1d2ec:	b	1d258 <rb_rawbuf_append+0x134>
   1d2f0:	mov	sp, fp
   1d2f4:	pop	{fp, pc}

0001d2f8 <rb_rawbuf_newbuf>:
   1d2f8:	push	{fp, lr}
   1d2fc:	mov	fp, sp
   1d300:	sub	sp, sp, #8
   1d304:	str	r0, [sp, #4]
   1d308:	bl	1d6e8 <rb_rawbuf_alloc>
   1d30c:	str	r0, [sp]
   1d310:	ldr	r0, [sp]
   1d314:	ldr	r1, [sp]
   1d318:	ldr	r2, [sp, #4]
   1d31c:	bl	1d718 <rb_dlinkAddTail>
   1d320:	ldr	r0, [sp]
   1d324:	mov	sp, fp
   1d328:	pop	{fp, pc}

0001d32c <rb_rawbuf_get>:
   1d32c:	push	{fp, lr}
   1d330:	mov	fp, sp
   1d334:	sub	sp, sp, #32
   1d338:	str	r0, [fp, #-8]
   1d33c:	str	r1, [fp, #-12]
   1d340:	str	r2, [sp, #16]
   1d344:	ldr	r0, [fp, #-8]
   1d348:	ldr	r0, [r0]
   1d34c:	movw	r1, #0
   1d350:	cmp	r0, r1
   1d354:	bne	1d364 <rb_rawbuf_get+0x38>
   1d358:	movw	r0, #0
   1d35c:	str	r0, [fp, #-4]
   1d360:	b	1d488 <rb_rawbuf_get+0x15c>
   1d364:	ldr	r0, [fp, #-8]
   1d368:	ldr	r0, [r0]
   1d36c:	ldr	r0, [r0]
   1d370:	str	r0, [sp, #12]
   1d374:	ldr	r0, [sp, #12]
   1d378:	add	r0, r0, #1040	; 0x410
   1d37c:	ldrsb	r0, [r0]
   1d380:	cmp	r0, #0
   1d384:	beq	1d3a4 <rb_rawbuf_get+0x78>
   1d388:	ldr	r0, [sp, #12]
   1d38c:	add	r0, r0, #12
   1d390:	ldr	r1, [fp, #-8]
   1d394:	ldr	r1, [r1, #16]
   1d398:	add	r0, r0, r1
   1d39c:	str	r0, [sp, #4]
   1d3a0:	b	1d3b0 <rb_rawbuf_get+0x84>
   1d3a4:	ldr	r0, [sp, #12]
   1d3a8:	add	r0, r0, #12
   1d3ac:	str	r0, [sp, #4]
   1d3b0:	ldr	r0, [sp, #16]
   1d3b4:	ldr	r1, [sp, #12]
   1d3b8:	ldr	r1, [r1, #1036]	; 0x40c
   1d3bc:	cmp	r0, r1
   1d3c0:	ble	1d3d4 <rb_rawbuf_get+0xa8>
   1d3c4:	ldr	r0, [sp, #12]
   1d3c8:	ldr	r0, [r0, #1036]	; 0x40c
   1d3cc:	str	r0, [sp, #8]
   1d3d0:	b	1d3dc <rb_rawbuf_get+0xb0>
   1d3d4:	ldr	r0, [sp, #16]
   1d3d8:	str	r0, [sp, #8]
   1d3dc:	ldr	r0, [fp, #-12]
   1d3e0:	ldr	r1, [sp, #4]
   1d3e4:	ldr	r2, [sp, #8]
   1d3e8:	bl	51dc <memcpy@plt>
   1d3ec:	ldr	r0, [sp, #8]
   1d3f0:	ldr	r1, [sp, #12]
   1d3f4:	ldr	r1, [r1, #1036]	; 0x40c
   1d3f8:	cmp	r0, r1
   1d3fc:	bne	1d438 <rb_rawbuf_get+0x10c>
   1d400:	ldr	r0, [fp, #-8]
   1d404:	movw	r1, #0
   1d408:	str	r1, [r0, #16]
   1d40c:	ldr	r0, [fp, #-8]
   1d410:	ldr	r1, [sp, #12]
   1d414:	bl	1d494 <rb_rawbuf_done>
   1d418:	ldr	r0, [sp, #16]
   1d41c:	ldr	r1, [fp, #-8]
   1d420:	ldr	lr, [r1, #12]
   1d424:	sub	r0, lr, r0
   1d428:	str	r0, [r1, #12]
   1d42c:	ldr	r0, [sp, #8]
   1d430:	str	r0, [fp, #-4]
   1d434:	b	1d488 <rb_rawbuf_get+0x15c>
   1d438:	ldr	r0, [sp, #12]
   1d43c:	movw	r1, #1
   1d440:	strb	r1, [r0, #1040]	; 0x410
   1d444:	ldr	r0, [sp, #8]
   1d448:	ldr	r1, [sp, #12]
   1d44c:	ldr	r2, [r1, #1036]	; 0x40c
   1d450:	sub	r0, r2, r0
   1d454:	str	r0, [r1, #1036]	; 0x40c
   1d458:	ldr	r0, [sp, #8]
   1d45c:	ldr	r1, [fp, #-8]
   1d460:	ldr	r2, [r1, #12]
   1d464:	sub	r0, r2, r0
   1d468:	str	r0, [r1, #12]
   1d46c:	ldr	r0, [sp, #8]
   1d470:	ldr	r1, [fp, #-8]
   1d474:	ldr	r2, [r1, #16]
   1d478:	add	r0, r2, r0
   1d47c:	str	r0, [r1, #16]
   1d480:	ldr	r0, [sp, #8]
   1d484:	str	r0, [fp, #-4]
   1d488:	ldr	r0, [fp, #-4]
   1d48c:	mov	sp, fp
   1d490:	pop	{fp, pc}

0001d494 <rb_rawbuf_done>:
   1d494:	push	{fp, lr}
   1d498:	mov	fp, sp
   1d49c:	sub	sp, sp, #16
   1d4a0:	str	r0, [fp, #-4]
   1d4a4:	str	r1, [sp, #8]
   1d4a8:	ldr	r0, [sp, #8]
   1d4ac:	str	r0, [sp, #4]
   1d4b0:	ldr	r0, [sp, #8]
   1d4b4:	ldr	r1, [fp, #-4]
   1d4b8:	bl	1d070 <rb_dlinkDelete>
   1d4bc:	ldr	r0, [pc, #24]	; 1d4dc <rb_rawbuf_done+0x48>
   1d4c0:	add	r0, pc, r0
   1d4c4:	ldr	r0, [r0]
   1d4c8:	ldr	r1, [sp, #4]
   1d4cc:	bl	529c <rb_bh_free@plt>
   1d4d0:	str	r0, [sp]
   1d4d4:	mov	sp, fp
   1d4d8:	pop	{fp, pc}
   1d4dc:	.word	0x00035f34

0001d4e0 <rb_rawbuf_length>:
   1d4e0:	sub	sp, sp, #4
   1d4e4:	str	r0, [sp]
   1d4e8:	ldr	r0, [sp]
   1d4ec:	ldr	r0, [r0, #8]
   1d4f0:	cmp	r0, #0
   1d4f4:	bne	1d508 <rb_rawbuf_length+0x28>
   1d4f8:	b	1d508 <rb_rawbuf_length+0x28>
   1d4fc:	ldr	r0, [sp]
   1d500:	movw	r1, #0
   1d504:	str	r1, [r0, #12]
   1d508:	ldr	r0, [sp]
   1d50c:	ldr	r0, [r0, #12]
   1d510:	add	sp, sp, #4
   1d514:	bx	lr

0001d518 <rb_new_rawbuffer>:
   1d518:	push	{fp, lr}
   1d51c:	mov	fp, sp
   1d520:	movw	r0, #20
   1d524:	bl	1d52c <rb_malloc>
   1d528:	pop	{fp, pc}

0001d52c <rb_malloc>:
   1d52c:	push	{fp, lr}
   1d530:	mov	fp, sp
   1d534:	sub	sp, sp, #8
   1d538:	str	r0, [sp, #4]
   1d53c:	ldr	r1, [sp, #4]
   1d540:	movw	r0, #1
   1d544:	bl	4fb4 <calloc@plt>
   1d548:	str	r0, [sp]
   1d54c:	ldr	r0, [sp]
   1d550:	movw	r1, #0
   1d554:	cmp	r0, r1
   1d558:	movw	r0, #0
   1d55c:	moveq	r0, #1
   1d560:	mvn	r1, #0
   1d564:	eor	r0, r0, r1
   1d568:	eor	r0, r0, r1
   1d56c:	tst	r0, #1
   1d570:	beq	1d578 <rb_malloc+0x4c>
   1d574:	bl	5350 <rb_outofmemory@plt>
   1d578:	ldr	r0, [sp]
   1d57c:	mov	sp, fp
   1d580:	pop	{fp, pc}

0001d584 <rb_free_rawbuffer>:
   1d584:	push	{fp, lr}
   1d588:	mov	fp, sp
   1d58c:	sub	sp, sp, #24
   1d590:	str	r0, [fp, #-4]
   1d594:	ldr	r0, [fp, #-4]
   1d598:	ldr	r0, [r0]
   1d59c:	str	r0, [fp, #-8]
   1d5a0:	ldr	r0, [fp, #-8]
   1d5a4:	movw	r1, #0
   1d5a8:	cmp	r0, r1
   1d5ac:	beq	1d5c0 <rb_free_rawbuffer+0x3c>
   1d5b0:	ldr	r0, [fp, #-8]
   1d5b4:	ldr	r0, [r0, #8]
   1d5b8:	str	r0, [sp, #8]
   1d5bc:	b	1d5cc <rb_free_rawbuffer+0x48>
   1d5c0:	movw	r0, #0
   1d5c4:	str	r0, [sp, #8]
   1d5c8:	b	1d5cc <rb_free_rawbuffer+0x48>
   1d5cc:	ldr	r0, [sp, #8]
   1d5d0:	str	r0, [sp, #12]
   1d5d4:	ldr	r0, [fp, #-8]
   1d5d8:	movw	r1, #0
   1d5dc:	cmp	r0, r1
   1d5e0:	beq	1d634 <rb_free_rawbuffer+0xb0>
   1d5e4:	ldr	r0, [fp, #-4]
   1d5e8:	ldr	r1, [fp, #-8]
   1d5ec:	ldr	r1, [r1]
   1d5f0:	bl	1d494 <rb_rawbuf_done>
   1d5f4:	ldr	r0, [sp, #12]
   1d5f8:	str	r0, [fp, #-8]
   1d5fc:	ldr	r0, [fp, #-8]
   1d600:	movw	r1, #0
   1d604:	cmp	r0, r1
   1d608:	beq	1d61c <rb_free_rawbuffer+0x98>
   1d60c:	ldr	r0, [fp, #-8]
   1d610:	ldr	r0, [r0, #8]
   1d614:	str	r0, [sp, #4]
   1d618:	b	1d628 <rb_free_rawbuffer+0xa4>
   1d61c:	movw	r0, #0
   1d620:	str	r0, [sp, #4]
   1d624:	b	1d628 <rb_free_rawbuffer+0xa4>
   1d628:	ldr	r0, [sp, #4]
   1d62c:	str	r0, [sp, #12]
   1d630:	b	1d5d4 <rb_free_rawbuffer+0x50>
   1d634:	ldr	r0, [fp, #-4]
   1d638:	bl	1d644 <rb_free>
   1d63c:	mov	sp, fp
   1d640:	pop	{fp, pc}

0001d644 <rb_free>:
   1d644:	push	{fp, lr}
   1d648:	mov	fp, sp
   1d64c:	sub	sp, sp, #8
   1d650:	str	r0, [sp, #4]
   1d654:	ldr	r0, [sp, #4]
   1d658:	movw	r1, #0
   1d65c:	cmp	r0, r1
   1d660:	movw	r0, #0
   1d664:	movne	r0, #1
   1d668:	mvn	r1, #0
   1d66c:	eor	r0, r0, r1
   1d670:	eor	r0, r0, r1
   1d674:	tst	r0, #1
   1d678:	beq	1d684 <rb_free+0x40>
   1d67c:	ldr	r0, [sp, #4]
   1d680:	bl	50c8 <free@plt>
   1d684:	mov	sp, fp
   1d688:	pop	{fp, pc}

0001d68c <rb_init_rawbuffers>:
   1d68c:	push	{fp, lr}
   1d690:	mov	fp, sp
   1d694:	sub	sp, sp, #8
   1d698:	ldr	r1, [pc, #60]	; 1d6dc <rb_init_rawbuffers+0x50>
   1d69c:	add	r1, pc, r1
   1d6a0:	str	r0, [sp, #4]
   1d6a4:	ldr	r0, [r1]
   1d6a8:	movw	r1, #0
   1d6ac:	cmp	r0, r1
   1d6b0:	bne	1d6d4 <rb_init_rawbuffers+0x48>
   1d6b4:	ldr	r0, [pc, #40]	; 1d6e4 <rb_init_rawbuffers+0x58>
   1d6b8:	add	r2, pc, r0
   1d6bc:	ldr	r1, [sp, #4]
   1d6c0:	movw	r0, #1044	; 0x414
   1d6c4:	bl	547c <rb_bh_create@plt>
   1d6c8:	ldr	r1, [pc, #16]	; 1d6e0 <rb_init_rawbuffers+0x54>
   1d6cc:	add	r1, pc, r1
   1d6d0:	str	r0, [r1]
   1d6d4:	mov	sp, fp
   1d6d8:	pop	{fp, pc}
   1d6dc:	.word	0x00035d58
   1d6e0:	.word	0x00035d28
   1d6e4:	.word	0x0000659d

0001d6e8 <rb_rawbuf_alloc>:
   1d6e8:	push	{fp, lr}
   1d6ec:	mov	fp, sp
   1d6f0:	sub	sp, sp, #8
   1d6f4:	ldr	r0, [pc, #24]	; 1d714 <rb_rawbuf_alloc+0x2c>
   1d6f8:	add	r0, pc, r0
   1d6fc:	ldr	r0, [r0]
   1d700:	bl	5320 <rb_bh_alloc@plt>
   1d704:	str	r0, [sp, #4]
   1d708:	ldr	r0, [sp, #4]
   1d70c:	mov	sp, fp
   1d710:	pop	{fp, pc}
   1d714:	.word	0x00035cfc

0001d718 <rb_dlinkAddTail>:
   1d718:	sub	sp, sp, #12
   1d71c:	str	r0, [sp, #8]
   1d720:	str	r1, [sp, #4]
   1d724:	str	r2, [sp]
   1d728:	ldr	r0, [sp, #8]
   1d72c:	ldr	r1, [sp, #4]
   1d730:	str	r0, [r1]
   1d734:	ldr	r0, [sp, #4]
   1d738:	movw	r1, #0
   1d73c:	str	r1, [r0, #8]
   1d740:	ldr	r0, [sp]
   1d744:	ldr	r0, [r0, #4]
   1d748:	ldr	r2, [sp, #4]
   1d74c:	str	r0, [r2, #4]
   1d750:	ldr	r0, [sp]
   1d754:	ldr	r0, [r0, #4]
   1d758:	cmp	r0, r1
   1d75c:	beq	1d774 <rb_dlinkAddTail+0x5c>
   1d760:	ldr	r0, [sp, #4]
   1d764:	ldr	r1, [sp]
   1d768:	ldr	r1, [r1, #4]
   1d76c:	str	r0, [r1, #8]
   1d770:	b	1d798 <rb_dlinkAddTail+0x80>
   1d774:	ldr	r0, [sp]
   1d778:	ldr	r0, [r0]
   1d77c:	movw	r1, #0
   1d780:	cmp	r0, r1
   1d784:	bne	1d794 <rb_dlinkAddTail+0x7c>
   1d788:	ldr	r0, [sp, #4]
   1d78c:	ldr	r1, [sp]
   1d790:	str	r0, [r1]
   1d794:	b	1d798 <rb_dlinkAddTail+0x80>
   1d798:	ldr	r0, [sp, #4]
   1d79c:	ldr	r1, [sp]
   1d7a0:	str	r0, [r1, #4]
   1d7a4:	ldr	r0, [sp]
   1d7a8:	ldr	r1, [r0, #8]
   1d7ac:	add	r1, r1, #1
   1d7b0:	str	r1, [r0, #8]
   1d7b4:	add	sp, sp, #12
   1d7b8:	bx	lr

0001d7bc <rb_init_patricia>:
   1d7bc:	bx	lr

0001d7c0 <rb_new_patricia>:
   1d7c0:	push	{fp, lr}
   1d7c4:	mov	fp, sp
   1d7c8:	sub	sp, sp, #8
   1d7cc:	str	r0, [sp, #4]
   1d7d0:	movw	r0, #12
   1d7d4:	bl	1d820 <rb_malloc>
   1d7d8:	ldr	lr, [pc, #60]	; 1d81c <rb_new_patricia+0x5c>
   1d7dc:	add	lr, pc, lr
   1d7e0:	str	r0, [sp]
   1d7e4:	ldr	r0, [sp, #4]
   1d7e8:	ldr	r1, [sp]
   1d7ec:	str	r0, [r1, #4]
   1d7f0:	ldr	r0, [sp]
   1d7f4:	movw	r1, #0
   1d7f8:	str	r1, [r0]
   1d7fc:	ldr	r0, [sp]
   1d800:	str	r1, [r0, #8]
   1d804:	ldr	r0, [lr]
   1d808:	add	r0, r0, #1
   1d80c:	str	r0, [lr]
   1d810:	ldr	r0, [sp]
   1d814:	mov	sp, fp
   1d818:	pop	{fp, pc}
   1d81c:	.word	0x00035c1c

0001d820 <rb_malloc>:
   1d820:	push	{fp, lr}
   1d824:	mov	fp, sp
   1d828:	sub	sp, sp, #8
   1d82c:	str	r0, [sp, #4]
   1d830:	ldr	r1, [sp, #4]
   1d834:	movw	r0, #1
   1d838:	bl	4fb4 <calloc@plt>
   1d83c:	str	r0, [sp]
   1d840:	ldr	r0, [sp]
   1d844:	movw	r1, #0
   1d848:	cmp	r0, r1
   1d84c:	movw	r0, #0
   1d850:	moveq	r0, #1
   1d854:	mvn	r1, #0
   1d858:	eor	r0, r0, r1
   1d85c:	eor	r0, r0, r1
   1d860:	tst	r0, #1
   1d864:	beq	1d86c <rb_malloc+0x4c>
   1d868:	bl	5350 <rb_outofmemory@plt>
   1d86c:	ldr	r0, [sp]
   1d870:	mov	sp, fp
   1d874:	pop	{fp, pc}

0001d878 <rb_clear_patricia>:
   1d878:	push	{r4, r5, fp, lr}
   1d87c:	add	fp, sp, #8
   1d880:	sub	sp, sp, #544	; 0x220
   1d884:	str	r0, [fp, #-12]
   1d888:	str	r1, [fp, #-16]
   1d88c:	ldr	r0, [fp, #-12]
   1d890:	ldr	r0, [r0]
   1d894:	movw	r1, #0
   1d898:	cmp	r0, r1
   1d89c:	beq	1da04 <rb_clear_patricia+0x18c>
   1d8a0:	add	r0, sp, #20
   1d8a4:	str	r0, [sp, #16]
   1d8a8:	ldr	r0, [fp, #-12]
   1d8ac:	ldr	r0, [r0]
   1d8b0:	str	r0, [sp, #12]
   1d8b4:	ldr	r0, [sp, #12]
   1d8b8:	movw	r1, #0
   1d8bc:	cmp	r0, r1
   1d8c0:	beq	1da00 <rb_clear_patricia+0x188>
   1d8c4:	ldr	r0, [sp, #12]
   1d8c8:	ldr	r0, [r0, #8]
   1d8cc:	str	r0, [sp, #8]
   1d8d0:	ldr	r0, [sp, #12]
   1d8d4:	ldr	r0, [r0, #12]
   1d8d8:	str	r0, [sp, #4]
   1d8dc:	ldr	r0, [sp, #12]
   1d8e0:	ldr	r0, [r0, #4]
   1d8e4:	movw	r1, #0
   1d8e8:	cmp	r0, r1
   1d8ec:	beq	1d940 <rb_clear_patricia+0xc8>
   1d8f0:	ldr	r0, [sp, #12]
   1d8f4:	ldr	r0, [r0, #4]
   1d8f8:	bl	1da14 <Deref_Prefix>
   1d8fc:	ldr	r0, [sp, #12]
   1d900:	ldr	r0, [r0, #20]
   1d904:	movw	lr, #0
   1d908:	cmp	r0, lr
   1d90c:	beq	1d93c <rb_clear_patricia+0xc4>
   1d910:	ldr	r0, [fp, #-16]
   1d914:	movw	r1, #0
   1d918:	cmp	r0, r1
   1d91c:	beq	1d93c <rb_clear_patricia+0xc4>
   1d920:	ldr	r0, [fp, #-16]
   1d924:	ldr	r1, [sp, #12]
   1d928:	ldr	r1, [r1, #20]
   1d92c:	str	r0, [sp]
   1d930:	mov	r0, r1
   1d934:	ldr	r1, [sp]
   1d938:	blx	r1
   1d93c:	b	1d944 <rb_clear_patricia+0xcc>
   1d940:	b	1d944 <rb_clear_patricia+0xcc>
   1d944:	ldr	r0, [sp, #12]
   1d948:	bl	1da6c <rb_free>
   1d94c:	ldr	r0, [fp, #-12]
   1d950:	ldr	lr, [r0, #8]
   1d954:	mvn	r1, #0
   1d958:	add	r1, lr, r1
   1d95c:	str	r1, [r0, #8]
   1d960:	ldr	r0, [sp, #8]
   1d964:	movw	r1, #0
   1d968:	cmp	r0, r1
   1d96c:	beq	1d9a0 <rb_clear_patricia+0x128>
   1d970:	ldr	r0, [sp, #4]
   1d974:	movw	r1, #0
   1d978:	cmp	r0, r1
   1d97c:	beq	1d994 <rb_clear_patricia+0x11c>
   1d980:	ldr	r0, [sp, #4]
   1d984:	ldr	r1, [sp, #16]
   1d988:	add	r2, r1, #4
   1d98c:	str	r2, [sp, #16]
   1d990:	str	r0, [r1]
   1d994:	ldr	r0, [sp, #8]
   1d998:	str	r0, [sp, #12]
   1d99c:	b	1d9fc <rb_clear_patricia+0x184>
   1d9a0:	ldr	r0, [sp, #4]
   1d9a4:	movw	r1, #0
   1d9a8:	cmp	r0, r1
   1d9ac:	beq	1d9bc <rb_clear_patricia+0x144>
   1d9b0:	ldr	r0, [sp, #4]
   1d9b4:	str	r0, [sp, #12]
   1d9b8:	b	1d9f8 <rb_clear_patricia+0x180>
   1d9bc:	add	r0, sp, #20
   1d9c0:	ldr	r1, [sp, #16]
   1d9c4:	cmp	r1, r0
   1d9c8:	beq	1d9ec <rb_clear_patricia+0x174>
   1d9cc:	ldr	r0, [sp, #16]
   1d9d0:	mvn	r1, #3
   1d9d4:	add	r2, r0, r1
   1d9d8:	str	r2, [sp, #16]
   1d9dc:	add	r0, r0, r1
   1d9e0:	ldr	r0, [r0]
   1d9e4:	str	r0, [sp, #12]
   1d9e8:	b	1d9f4 <rb_clear_patricia+0x17c>
   1d9ec:	movw	r0, #0
   1d9f0:	str	r0, [sp, #12]
   1d9f4:	b	1d9f8 <rb_clear_patricia+0x180>
   1d9f8:	b	1d9fc <rb_clear_patricia+0x184>
   1d9fc:	b	1d8b4 <rb_clear_patricia+0x3c>
   1da00:	b	1da04 <rb_clear_patricia+0x18c>
   1da04:	ldr	r0, [fp, #-12]
   1da08:	bl	1da6c <rb_free>
   1da0c:	sub	sp, fp, #8
   1da10:	pop	{r4, r5, fp, pc}

0001da14 <Deref_Prefix>:
   1da14:	push	{fp, lr}
   1da18:	mov	fp, sp
   1da1c:	sub	sp, sp, #8
   1da20:	str	r0, [sp, #4]
   1da24:	ldr	r0, [sp, #4]
   1da28:	movw	r1, #0
   1da2c:	cmp	r0, r1
   1da30:	bne	1da38 <Deref_Prefix+0x24>
   1da34:	b	1da64 <Deref_Prefix+0x50>
   1da38:	ldr	r0, [sp, #4]
   1da3c:	ldr	r1, [r0, #4]
   1da40:	mvn	r2, #0
   1da44:	add	r1, r1, r2
   1da48:	str	r1, [r0, #4]
   1da4c:	ldr	r0, [sp, #4]
   1da50:	ldr	r0, [r0, #4]
   1da54:	cmp	r0, #0
   1da58:	bgt	1da64 <Deref_Prefix+0x50>
   1da5c:	ldr	r0, [sp, #4]
   1da60:	bl	1da6c <rb_free>
   1da64:	mov	sp, fp
   1da68:	pop	{fp, pc}

0001da6c <rb_free>:
   1da6c:	push	{fp, lr}
   1da70:	mov	fp, sp
   1da74:	sub	sp, sp, #8
   1da78:	str	r0, [sp, #4]
   1da7c:	ldr	r0, [sp, #4]
   1da80:	movw	r1, #0
   1da84:	cmp	r0, r1
   1da88:	movw	r0, #0
   1da8c:	movne	r0, #1
   1da90:	mvn	r1, #0
   1da94:	eor	r0, r0, r1
   1da98:	eor	r0, r0, r1
   1da9c:	tst	r0, #1
   1daa0:	beq	1daac <rb_free+0x40>
   1daa4:	ldr	r0, [sp, #4]
   1daa8:	bl	50c8 <free@plt>
   1daac:	mov	sp, fp
   1dab0:	pop	{fp, pc}

0001dab4 <rb_destroy_patricia>:
   1dab4:	push	{fp, lr}
   1dab8:	mov	fp, sp
   1dabc:	sub	sp, sp, #8
   1dac0:	str	r0, [sp, #4]
   1dac4:	str	r1, [sp]
   1dac8:	ldr	r0, [sp, #4]
   1dacc:	ldr	r1, [sp]
   1dad0:	bl	4ec4 <rb_clear_patricia@plt>
   1dad4:	ldr	r0, [pc, #24]	; 1daf4 <rb_destroy_patricia+0x40>
   1dad8:	add	r0, pc, r0
   1dadc:	ldr	r1, [r0]
   1dae0:	mvn	lr, #0
   1dae4:	add	r1, r1, lr
   1dae8:	str	r1, [r0]
   1daec:	mov	sp, fp
   1daf0:	pop	{fp, pc}
   1daf4:	.word	0x00035920

0001daf8 <rb_patricia_process>:
   1daf8:	push	{r4, r5, fp, lr}
   1dafc:	add	fp, sp, #8
   1db00:	sub	sp, sp, #544	; 0x220
   1db04:	str	r0, [fp, #-12]
   1db08:	str	r1, [fp, #-16]
   1db0c:	add	r0, sp, #16
   1db10:	str	r0, [sp, #12]
   1db14:	ldr	r0, [fp, #-12]
   1db18:	ldr	r0, [r0]
   1db1c:	str	r0, [sp, #8]
   1db20:	ldr	r0, [sp, #8]
   1db24:	str	r0, [fp, #-20]	; 0xffffffec
   1db28:	movw	r1, #0
   1db2c:	cmp	r0, r1
   1db30:	beq	1dc28 <rb_patricia_process+0x130>
   1db34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db38:	ldr	r0, [r0, #4]
   1db3c:	movw	r1, #0
   1db40:	cmp	r0, r1
   1db44:	beq	1db70 <rb_patricia_process+0x78>
   1db48:	ldr	r0, [fp, #-16]
   1db4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1db50:	ldr	r1, [r1, #4]
   1db54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1db58:	ldr	r2, [r2, #20]
   1db5c:	str	r0, [sp, #4]
   1db60:	mov	r0, r1
   1db64:	mov	r1, r2
   1db68:	ldr	r2, [sp, #4]
   1db6c:	blx	r2
   1db70:	ldr	r0, [sp, #8]
   1db74:	ldr	r0, [r0, #8]
   1db78:	movw	r1, #0
   1db7c:	cmp	r0, r1
   1db80:	beq	1dbc0 <rb_patricia_process+0xc8>
   1db84:	ldr	r0, [sp, #8]
   1db88:	ldr	r0, [r0, #12]
   1db8c:	movw	r1, #0
   1db90:	cmp	r0, r1
   1db94:	beq	1dbb0 <rb_patricia_process+0xb8>
   1db98:	ldr	r0, [sp, #8]
   1db9c:	ldr	r0, [r0, #12]
   1dba0:	ldr	r1, [sp, #12]
   1dba4:	add	r2, r1, #4
   1dba8:	str	r2, [sp, #12]
   1dbac:	str	r0, [r1]
   1dbb0:	ldr	r0, [sp, #8]
   1dbb4:	ldr	r0, [r0, #8]
   1dbb8:	str	r0, [sp, #8]
   1dbbc:	b	1dc24 <rb_patricia_process+0x12c>
   1dbc0:	ldr	r0, [sp, #8]
   1dbc4:	ldr	r0, [r0, #12]
   1dbc8:	movw	r1, #0
   1dbcc:	cmp	r0, r1
   1dbd0:	beq	1dbe4 <rb_patricia_process+0xec>
   1dbd4:	ldr	r0, [sp, #8]
   1dbd8:	ldr	r0, [r0, #12]
   1dbdc:	str	r0, [sp, #8]
   1dbe0:	b	1dc20 <rb_patricia_process+0x128>
   1dbe4:	add	r0, sp, #16
   1dbe8:	ldr	r1, [sp, #12]
   1dbec:	cmp	r1, r0
   1dbf0:	beq	1dc14 <rb_patricia_process+0x11c>
   1dbf4:	ldr	r0, [sp, #12]
   1dbf8:	mvn	r1, #3
   1dbfc:	add	r2, r0, r1
   1dc00:	str	r2, [sp, #12]
   1dc04:	add	r0, r0, r1
   1dc08:	ldr	r0, [r0]
   1dc0c:	str	r0, [sp, #8]
   1dc10:	b	1dc1c <rb_patricia_process+0x124>
   1dc14:	movw	r0, #0
   1dc18:	str	r0, [sp, #8]
   1dc1c:	b	1dc20 <rb_patricia_process+0x128>
   1dc20:	b	1dc24 <rb_patricia_process+0x12c>
   1dc24:	b	1db20 <rb_patricia_process+0x28>
   1dc28:	b	1dc2c <rb_patricia_process+0x134>
   1dc2c:	sub	sp, fp, #8
   1dc30:	pop	{r4, r5, fp, pc}

0001dc34 <rb_patricia_search_exact>:
   1dc34:	push	{fp, lr}
   1dc38:	mov	fp, sp
   1dc3c:	sub	sp, sp, #32
   1dc40:	str	r0, [fp, #-8]
   1dc44:	str	r1, [fp, #-12]
   1dc48:	ldr	r0, [fp, #-8]
   1dc4c:	ldr	r0, [r0]
   1dc50:	movw	r1, #0
   1dc54:	cmp	r0, r1
   1dc58:	bne	1dc68 <rb_patricia_search_exact+0x34>
   1dc5c:	movw	r0, #0
   1dc60:	str	r0, [fp, #-4]
   1dc64:	b	1dd98 <rb_patricia_search_exact+0x164>
   1dc68:	ldr	r0, [fp, #-8]
   1dc6c:	ldr	r0, [r0]
   1dc70:	str	r0, [sp, #16]
   1dc74:	ldr	r0, [fp, #-12]
   1dc78:	add	r0, r0, #8
   1dc7c:	str	r0, [sp, #12]
   1dc80:	ldr	r0, [fp, #-12]
   1dc84:	ldrh	r0, [r0, #2]
   1dc88:	str	r0, [sp, #8]
   1dc8c:	ldr	r0, [sp, #16]
   1dc90:	ldr	r0, [r0]
   1dc94:	ldr	r1, [sp, #8]
   1dc98:	cmp	r0, r1
   1dc9c:	bcs	1dd14 <rb_patricia_search_exact+0xe0>
   1dca0:	ldr	r0, [sp, #12]
   1dca4:	ldr	r1, [sp, #16]
   1dca8:	ldr	r1, [r1]
   1dcac:	lsr	r1, r1, #3
   1dcb0:	add	r0, r0, r1
   1dcb4:	ldrb	r0, [r0]
   1dcb8:	ldr	r1, [sp, #16]
   1dcbc:	ldr	r1, [r1]
   1dcc0:	and	r1, r1, #7
   1dcc4:	movw	r2, #128	; 0x80
   1dcc8:	asr	r1, r2, r1
   1dccc:	and	r0, r0, r1
   1dcd0:	cmp	r0, #0
   1dcd4:	beq	1dce8 <rb_patricia_search_exact+0xb4>
   1dcd8:	ldr	r0, [sp, #16]
   1dcdc:	ldr	r0, [r0, #12]
   1dce0:	str	r0, [sp, #16]
   1dce4:	b	1dcf4 <rb_patricia_search_exact+0xc0>
   1dce8:	ldr	r0, [sp, #16]
   1dcec:	ldr	r0, [r0, #8]
   1dcf0:	str	r0, [sp, #16]
   1dcf4:	ldr	r0, [sp, #16]
   1dcf8:	movw	r1, #0
   1dcfc:	cmp	r0, r1
   1dd00:	bne	1dd10 <rb_patricia_search_exact+0xdc>
   1dd04:	movw	r0, #0
   1dd08:	str	r0, [fp, #-4]
   1dd0c:	b	1dd98 <rb_patricia_search_exact+0x164>
   1dd10:	b	1dc8c <rb_patricia_search_exact+0x58>
   1dd14:	ldr	r0, [sp, #16]
   1dd18:	ldr	r0, [r0]
   1dd1c:	ldr	r1, [sp, #8]
   1dd20:	cmp	r0, r1
   1dd24:	bhi	1dd3c <rb_patricia_search_exact+0x108>
   1dd28:	ldr	r0, [sp, #16]
   1dd2c:	ldr	r0, [r0, #4]
   1dd30:	movw	r1, #0
   1dd34:	cmp	r0, r1
   1dd38:	bne	1dd48 <rb_patricia_search_exact+0x114>
   1dd3c:	movw	r0, #0
   1dd40:	str	r0, [fp, #-4]
   1dd44:	b	1dd98 <rb_patricia_search_exact+0x164>
   1dd48:	ldr	r0, [sp, #16]
   1dd4c:	ldr	r0, [r0, #4]
   1dd50:	bl	1de6c <prefix_tochar>
   1dd54:	ldr	lr, [fp, #-12]
   1dd58:	str	r0, [sp, #4]
   1dd5c:	mov	r0, lr
   1dd60:	bl	1de6c <prefix_tochar>
   1dd64:	ldr	r2, [sp, #8]
   1dd68:	ldr	lr, [sp, #4]
   1dd6c:	str	r0, [sp]
   1dd70:	mov	r0, lr
   1dd74:	ldr	r1, [sp]
   1dd78:	bl	1dda4 <comp_with_mask>
   1dd7c:	cmp	r0, #0
   1dd80:	beq	1dd90 <rb_patricia_search_exact+0x15c>
   1dd84:	ldr	r0, [sp, #16]
   1dd88:	str	r0, [fp, #-4]
   1dd8c:	b	1dd98 <rb_patricia_search_exact+0x164>
   1dd90:	movw	r0, #0
   1dd94:	str	r0, [fp, #-4]
   1dd98:	ldr	r0, [fp, #-4]
   1dd9c:	mov	sp, fp
   1dda0:	pop	{fp, pc}

0001dda4 <comp_with_mask>:
   1dda4:	push	{fp, lr}
   1dda8:	mov	fp, sp
   1ddac:	sub	sp, sp, #24
   1ddb0:	str	r0, [fp, #-8]
   1ddb4:	str	r1, [sp, #12]
   1ddb8:	str	r2, [sp, #8]
   1ddbc:	ldr	r0, [fp, #-8]
   1ddc0:	ldr	r1, [sp, #12]
   1ddc4:	ldr	r2, [sp, #8]
   1ddc8:	lsr	r2, r2, #3
   1ddcc:	bl	4e10 <memcmp@plt>
   1ddd0:	cmp	r0, #0
   1ddd4:	bne	1de58 <comp_with_mask+0xb4>
   1ddd8:	ldr	r0, [sp, #8]
   1dddc:	lsr	r0, r0, #3
   1dde0:	str	r0, [sp, #4]
   1dde4:	ldr	r0, [sp, #8]
   1dde8:	and	r0, r0, #7
   1ddec:	movw	r1, #8
   1ddf0:	sub	r0, r1, r0
   1ddf4:	movw	r1, #255	; 0xff
   1ddf8:	lsl	r0, r1, r0
   1ddfc:	strb	r0, [sp, #3]
   1de00:	ldr	r0, [sp, #8]
   1de04:	and	r0, r0, #7
   1de08:	cmp	r0, #0
   1de0c:	beq	1de48 <comp_with_mask+0xa4>
   1de10:	ldr	r0, [fp, #-8]
   1de14:	ldr	r1, [sp, #4]
   1de18:	add	r0, r0, r1
   1de1c:	ldrb	r0, [r0]
   1de20:	ldrb	r1, [sp, #3]
   1de24:	and	r0, r0, r1
   1de28:	ldr	r1, [sp, #12]
   1de2c:	ldr	r2, [sp, #4]
   1de30:	add	r1, r1, r2
   1de34:	ldrb	r1, [r1]
   1de38:	ldrb	r2, [sp, #3]
   1de3c:	and	r1, r1, r2
   1de40:	cmp	r0, r1
   1de44:	bne	1de54 <comp_with_mask+0xb0>
   1de48:	movw	r0, #1
   1de4c:	str	r0, [fp, #-4]
   1de50:	b	1de60 <comp_with_mask+0xbc>
   1de54:	b	1de58 <comp_with_mask+0xb4>
   1de58:	movw	r0, #0
   1de5c:	str	r0, [fp, #-4]
   1de60:	ldr	r0, [fp, #-4]
   1de64:	mov	sp, fp
   1de68:	pop	{fp, pc}

0001de6c <prefix_tochar>:
   1de6c:	sub	sp, sp, #8
   1de70:	str	r0, [sp]
   1de74:	ldr	r0, [sp]
   1de78:	movw	r1, #0
   1de7c:	cmp	r0, r1
   1de80:	bne	1de90 <prefix_tochar+0x24>
   1de84:	movw	r0, #0
   1de88:	str	r0, [sp, #4]
   1de8c:	b	1de9c <prefix_tochar+0x30>
   1de90:	ldr	r0, [sp]
   1de94:	add	r0, r0, #8
   1de98:	str	r0, [sp, #4]
   1de9c:	ldr	r0, [sp, #4]
   1dea0:	add	sp, sp, #8
   1dea4:	bx	lr

0001dea8 <rb_patricia_search_best2>:
   1dea8:	push	{r4, r5, fp, lr}
   1deac:	add	fp, sp, #8
   1deb0:	sub	sp, sp, #560	; 0x230
   1deb4:	str	r0, [fp, #-16]
   1deb8:	str	r1, [fp, #-20]	; 0xffffffec
   1debc:	str	r2, [fp, #-24]	; 0xffffffe8
   1dec0:	movw	r0, #0
   1dec4:	str	r0, [sp, #12]
   1dec8:	ldr	r1, [fp, #-16]
   1decc:	ldr	r1, [r1]
   1ded0:	cmp	r1, r0
   1ded4:	bne	1dee4 <rb_patricia_search_best2+0x3c>
   1ded8:	movw	r0, #0
   1dedc:	str	r0, [fp, #-12]
   1dee0:	b	1e0a8 <rb_patricia_search_best2+0x200>
   1dee4:	ldr	r0, [fp, #-16]
   1dee8:	ldr	r0, [r0]
   1deec:	str	r0, [fp, #-28]	; 0xffffffe4
   1def0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1def4:	add	r0, r0, #8
   1def8:	str	r0, [sp, #20]
   1defc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df00:	ldrh	r0, [r0, #2]
   1df04:	str	r0, [sp, #16]
   1df08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1df0c:	ldr	r0, [r0]
   1df10:	ldr	r1, [sp, #16]
   1df14:	cmp	r0, r1
   1df18:	bcs	1dfb8 <rb_patricia_search_best2+0x110>
   1df1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1df20:	ldr	r0, [r0, #4]
   1df24:	movw	r1, #0
   1df28:	cmp	r0, r1
   1df2c:	beq	1df4c <rb_patricia_search_best2+0xa4>
   1df30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1df34:	ldr	r1, [sp, #12]
   1df38:	add	r2, r1, #1
   1df3c:	str	r2, [sp, #12]
   1df40:	add	r2, sp, #24
   1df44:	add	r1, r2, r1, lsl #2
   1df48:	str	r0, [r1]
   1df4c:	ldr	r0, [sp, #20]
   1df50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1df54:	ldr	r1, [r1]
   1df58:	lsr	r1, r1, #3
   1df5c:	add	r0, r0, r1
   1df60:	ldrb	r0, [r0]
   1df64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1df68:	ldr	r1, [r1]
   1df6c:	and	r1, r1, #7
   1df70:	movw	r2, #128	; 0x80
   1df74:	asr	r1, r2, r1
   1df78:	and	r0, r0, r1
   1df7c:	cmp	r0, #0
   1df80:	beq	1df94 <rb_patricia_search_best2+0xec>
   1df84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1df88:	ldr	r0, [r0, #12]
   1df8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1df90:	b	1dfa0 <rb_patricia_search_best2+0xf8>
   1df94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1df98:	ldr	r0, [r0, #8]
   1df9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1dfa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfa4:	movw	r1, #0
   1dfa8:	cmp	r0, r1
   1dfac:	bne	1dfb4 <rb_patricia_search_best2+0x10c>
   1dfb0:	b	1dfb8 <rb_patricia_search_best2+0x110>
   1dfb4:	b	1df08 <rb_patricia_search_best2+0x60>
   1dfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfbc:	cmp	r0, #0
   1dfc0:	beq	1e004 <rb_patricia_search_best2+0x15c>
   1dfc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfc8:	movw	r1, #0
   1dfcc:	cmp	r0, r1
   1dfd0:	beq	1e004 <rb_patricia_search_best2+0x15c>
   1dfd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfd8:	ldr	r0, [r0, #4]
   1dfdc:	movw	r1, #0
   1dfe0:	cmp	r0, r1
   1dfe4:	beq	1e004 <rb_patricia_search_best2+0x15c>
   1dfe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dfec:	ldr	r1, [sp, #12]
   1dff0:	add	r2, r1, #1
   1dff4:	str	r2, [sp, #12]
   1dff8:	add	r2, sp, #24
   1dffc:	add	r1, r2, r1, lsl #2
   1e000:	str	r0, [r1]
   1e004:	ldr	r0, [sp, #12]
   1e008:	cmp	r0, #0
   1e00c:	bgt	1e01c <rb_patricia_search_best2+0x174>
   1e010:	movw	r0, #0
   1e014:	str	r0, [fp, #-12]
   1e018:	b	1e0a8 <rb_patricia_search_best2+0x200>
   1e01c:	b	1e020 <rb_patricia_search_best2+0x178>
   1e020:	ldr	r0, [sp, #12]
   1e024:	mvn	r1, #0
   1e028:	add	r0, r0, r1
   1e02c:	str	r0, [sp, #12]
   1e030:	cmp	r0, #0
   1e034:	blt	1e0a0 <rb_patricia_search_best2+0x1f8>
   1e038:	ldr	r0, [sp, #12]
   1e03c:	add	r1, sp, #24
   1e040:	add	r0, r1, r0, lsl #2
   1e044:	ldr	r0, [r0]
   1e048:	str	r0, [fp, #-28]	; 0xffffffe4
   1e04c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e050:	ldr	r0, [r0, #4]
   1e054:	bl	1de6c <prefix_tochar>
   1e058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e05c:	str	r0, [sp, #8]
   1e060:	mov	r0, r1
   1e064:	bl	1de6c <prefix_tochar>
   1e068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e06c:	ldr	r1, [r1, #4]
   1e070:	ldrh	r2, [r1, #2]
   1e074:	ldr	r1, [sp, #8]
   1e078:	str	r0, [sp, #4]
   1e07c:	mov	r0, r1
   1e080:	ldr	r1, [sp, #4]
   1e084:	bl	1dda4 <comp_with_mask>
   1e088:	cmp	r0, #0
   1e08c:	beq	1e09c <rb_patricia_search_best2+0x1f4>
   1e090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e094:	str	r0, [fp, #-12]
   1e098:	b	1e0a8 <rb_patricia_search_best2+0x200>
   1e09c:	b	1e020 <rb_patricia_search_best2+0x178>
   1e0a0:	movw	r0, #0
   1e0a4:	str	r0, [fp, #-12]
   1e0a8:	ldr	r0, [fp, #-12]
   1e0ac:	sub	sp, fp, #8
   1e0b0:	pop	{r4, r5, fp, pc}

0001e0b4 <rb_patricia_search_best>:
   1e0b4:	push	{fp, lr}
   1e0b8:	mov	fp, sp
   1e0bc:	sub	sp, sp, #8
   1e0c0:	str	r0, [sp, #4]
   1e0c4:	str	r1, [sp]
   1e0c8:	ldr	r0, [sp, #4]
   1e0cc:	ldr	r1, [sp]
   1e0d0:	movw	r2, #1
   1e0d4:	bl	5080 <rb_patricia_search_best2@plt>
   1e0d8:	mov	sp, fp
   1e0dc:	pop	{fp, pc}

0001e0e0 <rb_patricia_lookup>:
   1e0e0:	push	{fp, lr}
   1e0e4:	mov	fp, sp
   1e0e8:	sub	sp, sp, #72	; 0x48
   1e0ec:	str	r0, [fp, #-8]
   1e0f0:	str	r1, [fp, #-12]
   1e0f4:	ldr	r0, [fp, #-8]
   1e0f8:	ldr	r0, [r0]
   1e0fc:	movw	r1, #0
   1e100:	cmp	r0, r1
   1e104:	bne	1e180 <rb_patricia_lookup+0xa0>
   1e108:	movw	r0, #24
   1e10c:	bl	1d820 <rb_malloc>
   1e110:	str	r0, [fp, #-16]
   1e114:	ldr	r0, [fp, #-12]
   1e118:	ldrh	r0, [r0, #2]
   1e11c:	ldr	lr, [fp, #-16]
   1e120:	str	r0, [lr]
   1e124:	ldr	r0, [fp, #-12]
   1e128:	bl	1e7bc <Ref_Prefix>
   1e12c:	ldr	lr, [fp, #-16]
   1e130:	str	r0, [lr, #4]
   1e134:	ldr	r0, [fp, #-16]
   1e138:	movw	lr, #0
   1e13c:	str	lr, [r0, #16]
   1e140:	ldr	r0, [fp, #-16]
   1e144:	str	lr, [r0, #12]
   1e148:	ldr	r0, [fp, #-16]
   1e14c:	str	lr, [r0, #8]
   1e150:	ldr	r0, [fp, #-16]
   1e154:	str	lr, [r0, #20]
   1e158:	ldr	r0, [fp, #-16]
   1e15c:	ldr	lr, [fp, #-8]
   1e160:	str	r0, [lr]
   1e164:	ldr	r0, [fp, #-8]
   1e168:	ldr	lr, [r0, #8]
   1e16c:	add	lr, lr, #1
   1e170:	str	lr, [r0, #8]
   1e174:	ldr	r0, [fp, #-16]
   1e178:	str	r0, [fp, #-4]
   1e17c:	b	1e7b0 <rb_patricia_lookup+0x6d0>
   1e180:	ldr	r0, [fp, #-12]
   1e184:	add	r0, r0, #8
   1e188:	str	r0, [fp, #-32]	; 0xffffffe0
   1e18c:	ldr	r0, [fp, #-12]
   1e190:	ldrh	r0, [r0, #2]
   1e194:	str	r0, [sp, #32]
   1e198:	ldr	r0, [fp, #-8]
   1e19c:	ldr	r0, [r0]
   1e1a0:	str	r0, [fp, #-16]
   1e1a4:	ldr	r0, [fp, #-16]
   1e1a8:	ldr	r0, [r0]
   1e1ac:	ldr	r1, [sp, #32]
   1e1b0:	cmp	r0, r1
   1e1b4:	movw	r0, #1
   1e1b8:	str	r0, [sp, #8]
   1e1bc:	bcc	1e1dc <rb_patricia_lookup+0xfc>
   1e1c0:	ldr	r0, [fp, #-16]
   1e1c4:	ldr	r0, [r0, #4]
   1e1c8:	movw	r1, #0
   1e1cc:	cmp	r0, r1
   1e1d0:	movw	r0, #0
   1e1d4:	moveq	r0, #1
   1e1d8:	str	r0, [sp, #8]
   1e1dc:	ldr	r0, [sp, #8]
   1e1e0:	tst	r0, #1
   1e1e4:	beq	1e288 <rb_patricia_lookup+0x1a8>
   1e1e8:	ldr	r0, [fp, #-16]
   1e1ec:	ldr	r0, [r0]
   1e1f0:	ldr	r1, [fp, #-8]
   1e1f4:	ldr	r1, [r1, #4]
   1e1f8:	cmp	r0, r1
   1e1fc:	bcs	1e260 <rb_patricia_lookup+0x180>
   1e200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e204:	ldr	r1, [fp, #-16]
   1e208:	ldr	r1, [r1]
   1e20c:	lsr	r1, r1, #3
   1e210:	add	r0, r0, r1
   1e214:	ldrb	r0, [r0]
   1e218:	ldr	r1, [fp, #-16]
   1e21c:	ldr	r1, [r1]
   1e220:	and	r1, r1, #7
   1e224:	movw	r2, #128	; 0x80
   1e228:	asr	r1, r2, r1
   1e22c:	and	r0, r0, r1
   1e230:	cmp	r0, #0
   1e234:	beq	1e260 <rb_patricia_lookup+0x180>
   1e238:	ldr	r0, [fp, #-16]
   1e23c:	ldr	r0, [r0, #12]
   1e240:	movw	r1, #0
   1e244:	cmp	r0, r1
   1e248:	bne	1e250 <rb_patricia_lookup+0x170>
   1e24c:	b	1e288 <rb_patricia_lookup+0x1a8>
   1e250:	ldr	r0, [fp, #-16]
   1e254:	ldr	r0, [r0, #12]
   1e258:	str	r0, [fp, #-16]
   1e25c:	b	1e284 <rb_patricia_lookup+0x1a4>
   1e260:	ldr	r0, [fp, #-16]
   1e264:	ldr	r0, [r0, #8]
   1e268:	movw	r1, #0
   1e26c:	cmp	r0, r1
   1e270:	bne	1e278 <rb_patricia_lookup+0x198>
   1e274:	b	1e288 <rb_patricia_lookup+0x1a8>
   1e278:	ldr	r0, [fp, #-16]
   1e27c:	ldr	r0, [r0, #8]
   1e280:	str	r0, [fp, #-16]
   1e284:	b	1e1a4 <rb_patricia_lookup+0xc4>
   1e288:	ldr	r0, [fp, #-16]
   1e28c:	ldr	r0, [r0, #4]
   1e290:	add	r0, r0, #8
   1e294:	str	r0, [sp, #36]	; 0x24
   1e298:	ldr	r0, [fp, #-16]
   1e29c:	ldr	r0, [r0]
   1e2a0:	ldr	r1, [sp, #32]
   1e2a4:	cmp	r0, r1
   1e2a8:	bcs	1e2bc <rb_patricia_lookup+0x1dc>
   1e2ac:	ldr	r0, [fp, #-16]
   1e2b0:	ldr	r0, [r0]
   1e2b4:	str	r0, [sp, #4]
   1e2b8:	b	1e2c4 <rb_patricia_lookup+0x1e4>
   1e2bc:	ldr	r0, [sp, #32]
   1e2c0:	str	r0, [sp, #4]
   1e2c4:	ldr	r0, [sp, #4]
   1e2c8:	str	r0, [sp, #28]
   1e2cc:	movw	r0, #0
   1e2d0:	str	r0, [sp, #24]
   1e2d4:	str	r0, [sp, #20]
   1e2d8:	ldr	r0, [sp, #20]
   1e2dc:	lsl	r0, r0, #3
   1e2e0:	ldr	r1, [sp, #28]
   1e2e4:	cmp	r0, r1
   1e2e8:	bcs	1e3a0 <rb_patricia_lookup+0x2c0>
   1e2ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2f0:	ldr	r1, [sp, #20]
   1e2f4:	add	r0, r0, r1
   1e2f8:	ldrb	r0, [r0]
   1e2fc:	ldr	r1, [sp, #36]	; 0x24
   1e300:	ldr	r2, [sp, #20]
   1e304:	add	r1, r1, r2
   1e308:	ldrb	r1, [r1]
   1e30c:	eor	r0, r0, r1
   1e310:	str	r0, [sp, #12]
   1e314:	cmp	r0, #0
   1e318:	bne	1e330 <rb_patricia_lookup+0x250>
   1e31c:	ldr	r0, [sp, #20]
   1e320:	add	r0, r0, #1
   1e324:	lsl	r0, r0, #3
   1e328:	str	r0, [sp, #24]
   1e32c:	b	1e390 <rb_patricia_lookup+0x2b0>
   1e330:	movw	r0, #0
   1e334:	str	r0, [sp, #16]
   1e338:	ldr	r0, [sp, #16]
   1e33c:	cmp	r0, #8
   1e340:	bcs	1e378 <rb_patricia_lookup+0x298>
   1e344:	ldr	r0, [sp, #12]
   1e348:	ldr	r1, [sp, #16]
   1e34c:	movw	r2, #128	; 0x80
   1e350:	asr	r1, r2, r1
   1e354:	and	r0, r0, r1
   1e358:	cmp	r0, #0
   1e35c:	beq	1e364 <rb_patricia_lookup+0x284>
   1e360:	b	1e378 <rb_patricia_lookup+0x298>
   1e364:	b	1e368 <rb_patricia_lookup+0x288>
   1e368:	ldr	r0, [sp, #16]
   1e36c:	add	r0, r0, #1
   1e370:	str	r0, [sp, #16]
   1e374:	b	1e338 <rb_patricia_lookup+0x258>
   1e378:	ldr	r0, [sp, #20]
   1e37c:	lsl	r0, r0, #3
   1e380:	ldr	r1, [sp, #16]
   1e384:	add	r0, r0, r1
   1e388:	str	r0, [sp, #24]
   1e38c:	b	1e3a0 <rb_patricia_lookup+0x2c0>
   1e390:	ldr	r0, [sp, #20]
   1e394:	add	r0, r0, #1
   1e398:	str	r0, [sp, #20]
   1e39c:	b	1e2d8 <rb_patricia_lookup+0x1f8>
   1e3a0:	ldr	r0, [sp, #24]
   1e3a4:	ldr	r1, [sp, #28]
   1e3a8:	cmp	r0, r1
   1e3ac:	bls	1e3b8 <rb_patricia_lookup+0x2d8>
   1e3b0:	ldr	r0, [sp, #28]
   1e3b4:	str	r0, [sp, #24]
   1e3b8:	ldr	r0, [fp, #-16]
   1e3bc:	ldr	r0, [r0, #16]
   1e3c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3c8:	movw	r1, #0
   1e3cc:	cmp	r0, r1
   1e3d0:	movw	r0, #0
   1e3d4:	str	r0, [sp]
   1e3d8:	beq	1e3f8 <rb_patricia_lookup+0x318>
   1e3dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3e0:	ldr	r0, [r0]
   1e3e4:	ldr	r1, [sp, #24]
   1e3e8:	cmp	r0, r1
   1e3ec:	movw	r0, #0
   1e3f0:	movcs	r0, #1
   1e3f4:	str	r0, [sp]
   1e3f8:	ldr	r0, [sp]
   1e3fc:	tst	r0, #1
   1e400:	beq	1e41c <rb_patricia_lookup+0x33c>
   1e404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e408:	str	r0, [fp, #-16]
   1e40c:	ldr	r0, [fp, #-16]
   1e410:	ldr	r0, [r0, #16]
   1e414:	str	r0, [fp, #-24]	; 0xffffffe8
   1e418:	b	1e3c4 <rb_patricia_lookup+0x2e4>
   1e41c:	ldr	r0, [sp, #24]
   1e420:	ldr	r1, [sp, #32]
   1e424:	cmp	r0, r1
   1e428:	bne	1e47c <rb_patricia_lookup+0x39c>
   1e42c:	ldr	r0, [fp, #-16]
   1e430:	ldr	r0, [r0]
   1e434:	ldr	r1, [sp, #32]
   1e438:	cmp	r0, r1
   1e43c:	bne	1e47c <rb_patricia_lookup+0x39c>
   1e440:	ldr	r0, [fp, #-16]
   1e444:	ldr	r0, [r0, #4]
   1e448:	movw	r1, #0
   1e44c:	cmp	r0, r1
   1e450:	beq	1e460 <rb_patricia_lookup+0x380>
   1e454:	ldr	r0, [fp, #-16]
   1e458:	str	r0, [fp, #-4]
   1e45c:	b	1e7b0 <rb_patricia_lookup+0x6d0>
   1e460:	ldr	r0, [fp, #-12]
   1e464:	bl	1e7bc <Ref_Prefix>
   1e468:	ldr	lr, [fp, #-16]
   1e46c:	str	r0, [lr, #4]
   1e470:	ldr	r0, [fp, #-16]
   1e474:	str	r0, [fp, #-4]
   1e478:	b	1e7b0 <rb_patricia_lookup+0x6d0>
   1e47c:	movw	r0, #24
   1e480:	bl	1d820 <rb_malloc>
   1e484:	str	r0, [fp, #-20]	; 0xffffffec
   1e488:	ldr	r0, [fp, #-12]
   1e48c:	ldrh	r0, [r0, #2]
   1e490:	ldr	lr, [fp, #-20]	; 0xffffffec
   1e494:	str	r0, [lr]
   1e498:	ldr	r0, [fp, #-12]
   1e49c:	bl	1e7bc <Ref_Prefix>
   1e4a0:	ldr	lr, [fp, #-20]	; 0xffffffec
   1e4a4:	str	r0, [lr, #4]
   1e4a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4ac:	movw	lr, #0
   1e4b0:	str	lr, [r0, #16]
   1e4b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4b8:	str	lr, [r0, #12]
   1e4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4c0:	str	lr, [r0, #8]
   1e4c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4c8:	str	lr, [r0, #20]
   1e4cc:	ldr	r0, [fp, #-8]
   1e4d0:	ldr	lr, [r0, #8]
   1e4d4:	add	lr, lr, #1
   1e4d8:	str	lr, [r0, #8]
   1e4dc:	ldr	r0, [fp, #-16]
   1e4e0:	ldr	r0, [r0]
   1e4e4:	ldr	lr, [sp, #24]
   1e4e8:	cmp	r0, lr
   1e4ec:	bne	1e574 <rb_patricia_lookup+0x494>
   1e4f0:	ldr	r0, [fp, #-16]
   1e4f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e4f8:	str	r0, [r1, #16]
   1e4fc:	ldr	r0, [fp, #-16]
   1e500:	ldr	r0, [r0]
   1e504:	ldr	r1, [fp, #-8]
   1e508:	ldr	r1, [r1, #4]
   1e50c:	cmp	r0, r1
   1e510:	bcs	1e55c <rb_patricia_lookup+0x47c>
   1e514:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e518:	ldr	r1, [fp, #-16]
   1e51c:	ldr	r1, [r1]
   1e520:	lsr	r1, r1, #3
   1e524:	add	r0, r0, r1
   1e528:	ldrb	r0, [r0]
   1e52c:	ldr	r1, [fp, #-16]
   1e530:	ldr	r1, [r1]
   1e534:	and	r1, r1, #7
   1e538:	movw	r2, #128	; 0x80
   1e53c:	asr	r1, r2, r1
   1e540:	and	r0, r0, r1
   1e544:	cmp	r0, #0
   1e548:	beq	1e55c <rb_patricia_lookup+0x47c>
   1e54c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e550:	ldr	r1, [fp, #-16]
   1e554:	str	r0, [r1, #12]
   1e558:	b	1e568 <rb_patricia_lookup+0x488>
   1e55c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e560:	ldr	r1, [fp, #-16]
   1e564:	str	r0, [r1, #8]
   1e568:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e56c:	str	r0, [fp, #-4]
   1e570:	b	1e7b0 <rb_patricia_lookup+0x6d0>
   1e574:	ldr	r0, [sp, #32]
   1e578:	ldr	r1, [sp, #24]
   1e57c:	cmp	r0, r1
   1e580:	bne	1e668 <rb_patricia_lookup+0x588>
   1e584:	ldr	r0, [sp, #32]
   1e588:	ldr	r1, [fp, #-8]
   1e58c:	ldr	r1, [r1, #4]
   1e590:	cmp	r0, r1
   1e594:	bcs	1e5d8 <rb_patricia_lookup+0x4f8>
   1e598:	ldr	r0, [sp, #36]	; 0x24
   1e59c:	ldr	r1, [sp, #32]
   1e5a0:	lsr	r1, r1, #3
   1e5a4:	add	r0, r0, r1
   1e5a8:	ldrb	r0, [r0]
   1e5ac:	ldr	r1, [sp, #32]
   1e5b0:	and	r1, r1, #7
   1e5b4:	movw	r2, #128	; 0x80
   1e5b8:	asr	r1, r2, r1
   1e5bc:	and	r0, r0, r1
   1e5c0:	cmp	r0, #0
   1e5c4:	beq	1e5d8 <rb_patricia_lookup+0x4f8>
   1e5c8:	ldr	r0, [fp, #-16]
   1e5cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5d0:	str	r0, [r1, #12]
   1e5d4:	b	1e5e4 <rb_patricia_lookup+0x504>
   1e5d8:	ldr	r0, [fp, #-16]
   1e5dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5e0:	str	r0, [r1, #8]
   1e5e4:	ldr	r0, [fp, #-16]
   1e5e8:	ldr	r0, [r0, #16]
   1e5ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e5f0:	str	r0, [r1, #16]
   1e5f4:	ldr	r0, [fp, #-16]
   1e5f8:	ldr	r0, [r0, #16]
   1e5fc:	movw	r1, #0
   1e600:	cmp	r0, r1
   1e604:	bne	1e618 <rb_patricia_lookup+0x538>
   1e608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e60c:	ldr	r1, [fp, #-8]
   1e610:	str	r0, [r1]
   1e614:	b	1e658 <rb_patricia_lookup+0x578>
   1e618:	ldr	r0, [fp, #-16]
   1e61c:	ldr	r0, [r0, #16]
   1e620:	ldr	r0, [r0, #12]
   1e624:	ldr	r1, [fp, #-16]
   1e628:	cmp	r0, r1
   1e62c:	bne	1e644 <rb_patricia_lookup+0x564>
   1e630:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e634:	ldr	r1, [fp, #-16]
   1e638:	ldr	r1, [r1, #16]
   1e63c:	str	r0, [r1, #12]
   1e640:	b	1e654 <rb_patricia_lookup+0x574>
   1e644:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e648:	ldr	r1, [fp, #-16]
   1e64c:	ldr	r1, [r1, #16]
   1e650:	str	r0, [r1, #8]
   1e654:	b	1e658 <rb_patricia_lookup+0x578>
   1e658:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e65c:	ldr	r1, [fp, #-16]
   1e660:	str	r0, [r1, #16]
   1e664:	b	1e7a8 <rb_patricia_lookup+0x6c8>
   1e668:	movw	r0, #24
   1e66c:	bl	1d820 <rb_malloc>
   1e670:	str	r0, [fp, #-28]	; 0xffffffe4
   1e674:	ldr	r0, [sp, #24]
   1e678:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1e67c:	str	r0, [lr]
   1e680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e684:	movw	lr, #0
   1e688:	str	lr, [r0, #4]
   1e68c:	ldr	r0, [fp, #-16]
   1e690:	ldr	r0, [r0, #16]
   1e694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e698:	str	r0, [r1, #16]
   1e69c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e6a0:	str	lr, [r0, #20]
   1e6a4:	ldr	r0, [fp, #-8]
   1e6a8:	ldr	r1, [r0, #8]
   1e6ac:	add	r1, r1, #1
   1e6b0:	str	r1, [r0, #8]
   1e6b4:	ldr	r0, [sp, #24]
   1e6b8:	ldr	r1, [fp, #-8]
   1e6bc:	ldr	r1, [r1, #4]
   1e6c0:	cmp	r0, r1
   1e6c4:	bcs	1e714 <rb_patricia_lookup+0x634>
   1e6c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e6cc:	ldr	r1, [sp, #24]
   1e6d0:	lsr	r1, r1, #3
   1e6d4:	add	r0, r0, r1
   1e6d8:	ldrb	r0, [r0]
   1e6dc:	ldr	r1, [sp, #24]
   1e6e0:	and	r1, r1, #7
   1e6e4:	movw	r2, #128	; 0x80
   1e6e8:	asr	r1, r2, r1
   1e6ec:	and	r0, r0, r1
   1e6f0:	cmp	r0, #0
   1e6f4:	beq	1e714 <rb_patricia_lookup+0x634>
   1e6f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e6fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e700:	str	r0, [r1, #12]
   1e704:	ldr	r0, [fp, #-16]
   1e708:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e70c:	str	r0, [r1, #8]
   1e710:	b	1e72c <rb_patricia_lookup+0x64c>
   1e714:	ldr	r0, [fp, #-16]
   1e718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e71c:	str	r0, [r1, #12]
   1e720:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e728:	str	r0, [r1, #8]
   1e72c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e730:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e734:	str	r0, [r1, #16]
   1e738:	ldr	r0, [fp, #-16]
   1e73c:	ldr	r0, [r0, #16]
   1e740:	movw	r1, #0
   1e744:	cmp	r0, r1
   1e748:	bne	1e75c <rb_patricia_lookup+0x67c>
   1e74c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e750:	ldr	r1, [fp, #-8]
   1e754:	str	r0, [r1]
   1e758:	b	1e79c <rb_patricia_lookup+0x6bc>
   1e75c:	ldr	r0, [fp, #-16]
   1e760:	ldr	r0, [r0, #16]
   1e764:	ldr	r0, [r0, #12]
   1e768:	ldr	r1, [fp, #-16]
   1e76c:	cmp	r0, r1
   1e770:	bne	1e788 <rb_patricia_lookup+0x6a8>
   1e774:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e778:	ldr	r1, [fp, #-16]
   1e77c:	ldr	r1, [r1, #16]
   1e780:	str	r0, [r1, #12]
   1e784:	b	1e798 <rb_patricia_lookup+0x6b8>
   1e788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e78c:	ldr	r1, [fp, #-16]
   1e790:	ldr	r1, [r1, #16]
   1e794:	str	r0, [r1, #8]
   1e798:	b	1e79c <rb_patricia_lookup+0x6bc>
   1e79c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e7a0:	ldr	r1, [fp, #-16]
   1e7a4:	str	r0, [r1, #16]
   1e7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7ac:	str	r0, [fp, #-4]
   1e7b0:	ldr	r0, [fp, #-4]
   1e7b4:	mov	sp, fp
   1e7b8:	pop	{fp, pc}

0001e7bc <Ref_Prefix>:
   1e7bc:	push	{fp, lr}
   1e7c0:	mov	fp, sp
   1e7c4:	sub	sp, sp, #8
   1e7c8:	str	r0, [sp]
   1e7cc:	ldr	r0, [sp]
   1e7d0:	movw	r1, #0
   1e7d4:	cmp	r0, r1
   1e7d8:	bne	1e7e8 <Ref_Prefix+0x2c>
   1e7dc:	movw	r0, #0
   1e7e0:	str	r0, [sp, #4]
   1e7e4:	b	1e838 <Ref_Prefix+0x7c>
   1e7e8:	ldr	r0, [sp]
   1e7ec:	ldr	r0, [r0, #4]
   1e7f0:	cmp	r0, #0
   1e7f4:	bne	1e820 <Ref_Prefix+0x64>
   1e7f8:	ldr	r0, [sp]
   1e7fc:	ldrh	r0, [r0]
   1e800:	ldr	r1, [sp]
   1e804:	add	r1, r1, #8
   1e808:	ldr	r2, [sp]
   1e80c:	ldrh	r2, [r2, #2]
   1e810:	movw	r3, #0
   1e814:	bl	1f164 <New_Prefix2>
   1e818:	str	r0, [sp, #4]
   1e81c:	b	1e838 <Ref_Prefix+0x7c>
   1e820:	ldr	r0, [sp]
   1e824:	ldr	r1, [r0, #4]
   1e828:	add	r1, r1, #1
   1e82c:	str	r1, [r0, #4]
   1e830:	ldr	r0, [sp]
   1e834:	str	r0, [sp, #4]
   1e838:	ldr	r0, [sp, #4]
   1e83c:	mov	sp, fp
   1e840:	pop	{fp, pc}

0001e844 <rb_patricia_remove>:
   1e844:	push	{fp, lr}
   1e848:	mov	fp, sp
   1e84c:	sub	sp, sp, #16
   1e850:	str	r0, [fp, #-4]
   1e854:	str	r1, [sp, #8]
   1e858:	ldr	r0, [sp, #8]
   1e85c:	ldr	r0, [r0, #12]
   1e860:	movw	r1, #0
   1e864:	cmp	r0, r1
   1e868:	beq	1e8b8 <rb_patricia_remove+0x74>
   1e86c:	ldr	r0, [sp, #8]
   1e870:	ldr	r0, [r0, #8]
   1e874:	movw	r1, #0
   1e878:	cmp	r0, r1
   1e87c:	beq	1e8b8 <rb_patricia_remove+0x74>
   1e880:	ldr	r0, [sp, #8]
   1e884:	ldr	r0, [r0, #4]
   1e888:	movw	r1, #0
   1e88c:	cmp	r0, r1
   1e890:	beq	1e8a0 <rb_patricia_remove+0x5c>
   1e894:	ldr	r0, [sp, #8]
   1e898:	ldr	r0, [r0, #4]
   1e89c:	bl	1da14 <Deref_Prefix>
   1e8a0:	ldr	r0, [sp, #8]
   1e8a4:	movw	r1, #0
   1e8a8:	str	r1, [r0, #4]
   1e8ac:	ldr	r0, [sp, #8]
   1e8b0:	str	r1, [r0, #20]
   1e8b4:	b	1eae8 <rb_patricia_remove+0x2a4>
   1e8b8:	ldr	r0, [sp, #8]
   1e8bc:	ldr	r0, [r0, #12]
   1e8c0:	movw	r1, #0
   1e8c4:	cmp	r0, r1
   1e8c8:	bne	1ea28 <rb_patricia_remove+0x1e4>
   1e8cc:	ldr	r0, [sp, #8]
   1e8d0:	ldr	r0, [r0, #8]
   1e8d4:	movw	r1, #0
   1e8d8:	cmp	r0, r1
   1e8dc:	bne	1ea28 <rb_patricia_remove+0x1e4>
   1e8e0:	ldr	r0, [sp, #8]
   1e8e4:	ldr	r0, [r0, #16]
   1e8e8:	str	r0, [sp, #4]
   1e8ec:	ldr	r0, [sp, #8]
   1e8f0:	ldr	r0, [r0, #4]
   1e8f4:	bl	1da14 <Deref_Prefix>
   1e8f8:	ldr	r0, [sp, #8]
   1e8fc:	bl	1da6c <rb_free>
   1e900:	ldr	r0, [fp, #-4]
   1e904:	ldr	lr, [r0, #8]
   1e908:	mvn	r1, #0
   1e90c:	add	r1, lr, r1
   1e910:	str	r1, [r0, #8]
   1e914:	ldr	r0, [sp, #4]
   1e918:	movw	r1, #0
   1e91c:	cmp	r0, r1
   1e920:	bne	1e934 <rb_patricia_remove+0xf0>
   1e924:	ldr	r0, [fp, #-4]
   1e928:	movw	r1, #0
   1e92c:	str	r1, [r0]
   1e930:	b	1eae8 <rb_patricia_remove+0x2a4>
   1e934:	ldr	r0, [sp, #4]
   1e938:	ldr	r0, [r0, #12]
   1e93c:	ldr	r1, [sp, #8]
   1e940:	cmp	r0, r1
   1e944:	bne	1e964 <rb_patricia_remove+0x120>
   1e948:	ldr	r0, [sp, #4]
   1e94c:	movw	r1, #0
   1e950:	str	r1, [r0, #12]
   1e954:	ldr	r0, [sp, #4]
   1e958:	ldr	r0, [r0, #8]
   1e95c:	str	r0, [sp]
   1e960:	b	1e97c <rb_patricia_remove+0x138>
   1e964:	ldr	r0, [sp, #4]
   1e968:	movw	r1, #0
   1e96c:	str	r1, [r0, #8]
   1e970:	ldr	r0, [sp, #4]
   1e974:	ldr	r0, [r0, #12]
   1e978:	str	r0, [sp]
   1e97c:	ldr	r0, [sp, #4]
   1e980:	ldr	r0, [r0, #4]
   1e984:	movw	r1, #0
   1e988:	cmp	r0, r1
   1e98c:	beq	1e994 <rb_patricia_remove+0x150>
   1e990:	b	1eae8 <rb_patricia_remove+0x2a4>
   1e994:	ldr	r0, [sp, #4]
   1e998:	ldr	r0, [r0, #16]
   1e99c:	movw	r1, #0
   1e9a0:	cmp	r0, r1
   1e9a4:	bne	1e9b8 <rb_patricia_remove+0x174>
   1e9a8:	ldr	r0, [sp]
   1e9ac:	ldr	r1, [fp, #-4]
   1e9b0:	str	r0, [r1]
   1e9b4:	b	1e9f8 <rb_patricia_remove+0x1b4>
   1e9b8:	ldr	r0, [sp, #4]
   1e9bc:	ldr	r0, [r0, #16]
   1e9c0:	ldr	r0, [r0, #12]
   1e9c4:	ldr	r1, [sp, #4]
   1e9c8:	cmp	r0, r1
   1e9cc:	bne	1e9e4 <rb_patricia_remove+0x1a0>
   1e9d0:	ldr	r0, [sp]
   1e9d4:	ldr	r1, [sp, #4]
   1e9d8:	ldr	r1, [r1, #16]
   1e9dc:	str	r0, [r1, #12]
   1e9e0:	b	1e9f4 <rb_patricia_remove+0x1b0>
   1e9e4:	ldr	r0, [sp]
   1e9e8:	ldr	r1, [sp, #4]
   1e9ec:	ldr	r1, [r1, #16]
   1e9f0:	str	r0, [r1, #8]
   1e9f4:	b	1e9f8 <rb_patricia_remove+0x1b4>
   1e9f8:	ldr	r0, [sp, #4]
   1e9fc:	ldr	r0, [r0, #16]
   1ea00:	ldr	r1, [sp]
   1ea04:	str	r0, [r1, #16]
   1ea08:	ldr	r0, [sp, #4]
   1ea0c:	bl	1da6c <rb_free>
   1ea10:	ldr	r0, [fp, #-4]
   1ea14:	ldr	r1, [r0, #8]
   1ea18:	mvn	lr, #0
   1ea1c:	add	r1, r1, lr
   1ea20:	str	r1, [r0, #8]
   1ea24:	b	1eae8 <rb_patricia_remove+0x2a4>
   1ea28:	ldr	r0, [sp, #8]
   1ea2c:	ldr	r0, [r0, #12]
   1ea30:	movw	r1, #0
   1ea34:	cmp	r0, r1
   1ea38:	beq	1ea4c <rb_patricia_remove+0x208>
   1ea3c:	ldr	r0, [sp, #8]
   1ea40:	ldr	r0, [r0, #12]
   1ea44:	str	r0, [sp]
   1ea48:	b	1ea58 <rb_patricia_remove+0x214>
   1ea4c:	ldr	r0, [sp, #8]
   1ea50:	ldr	r0, [r0, #8]
   1ea54:	str	r0, [sp]
   1ea58:	ldr	r0, [sp, #8]
   1ea5c:	ldr	r0, [r0, #16]
   1ea60:	str	r0, [sp, #4]
   1ea64:	ldr	r0, [sp, #4]
   1ea68:	ldr	r1, [sp]
   1ea6c:	str	r0, [r1, #16]
   1ea70:	ldr	r0, [sp, #8]
   1ea74:	ldr	r0, [r0, #4]
   1ea78:	bl	1da14 <Deref_Prefix>
   1ea7c:	ldr	r0, [sp, #8]
   1ea80:	bl	1da6c <rb_free>
   1ea84:	ldr	r0, [fp, #-4]
   1ea88:	ldr	r1, [r0, #8]
   1ea8c:	mvn	lr, #0
   1ea90:	add	r1, r1, lr
   1ea94:	str	r1, [r0, #8]
   1ea98:	ldr	r0, [sp, #4]
   1ea9c:	movw	r1, #0
   1eaa0:	cmp	r0, r1
   1eaa4:	bne	1eab8 <rb_patricia_remove+0x274>
   1eaa8:	ldr	r0, [sp]
   1eaac:	ldr	r1, [fp, #-4]
   1eab0:	str	r0, [r1]
   1eab4:	b	1eae8 <rb_patricia_remove+0x2a4>
   1eab8:	ldr	r0, [sp, #4]
   1eabc:	ldr	r0, [r0, #12]
   1eac0:	ldr	r1, [sp, #8]
   1eac4:	cmp	r0, r1
   1eac8:	bne	1eadc <rb_patricia_remove+0x298>
   1eacc:	ldr	r0, [sp]
   1ead0:	ldr	r1, [sp, #4]
   1ead4:	str	r0, [r1, #12]
   1ead8:	b	1eae8 <rb_patricia_remove+0x2a4>
   1eadc:	ldr	r0, [sp]
   1eae0:	ldr	r1, [sp, #4]
   1eae4:	str	r0, [r1, #8]
   1eae8:	mov	sp, fp
   1eaec:	pop	{fp, pc}

0001eaf0 <make_and_lookup_ip>:
   1eaf0:	push	{fp, lr}
   1eaf4:	mov	fp, sp
   1eaf8:	sub	sp, sp, #32
   1eafc:	str	r0, [fp, #-8]
   1eb00:	str	r1, [fp, #-12]
   1eb04:	str	r2, [sp, #16]
   1eb08:	movw	r0, #0
   1eb0c:	str	r0, [sp, #4]
   1eb10:	ldr	r0, [fp, #-12]
   1eb14:	ldrh	r0, [r0]
   1eb18:	cmp	r0, #10
   1eb1c:	bne	1eb30 <make_and_lookup_ip+0x40>
   1eb20:	ldr	r0, [fp, #-12]
   1eb24:	add	r0, r0, #8
   1eb28:	str	r0, [sp, #4]
   1eb2c:	b	1eb3c <make_and_lookup_ip+0x4c>
   1eb30:	ldr	r0, [fp, #-12]
   1eb34:	add	r0, r0, #4
   1eb38:	str	r0, [sp, #4]
   1eb3c:	ldr	r0, [fp, #-12]
   1eb40:	ldrh	r0, [r0]
   1eb44:	ldr	r1, [sp, #4]
   1eb48:	ldr	r2, [sp, #16]
   1eb4c:	bl	1eb9c <New_Prefix>
   1eb50:	str	r0, [sp, #12]
   1eb54:	ldr	r0, [sp, #12]
   1eb58:	movw	r1, #0
   1eb5c:	cmp	r0, r1
   1eb60:	bne	1eb70 <make_and_lookup_ip+0x80>
   1eb64:	movw	r0, #0
   1eb68:	str	r0, [fp, #-4]
   1eb6c:	b	1eb90 <make_and_lookup_ip+0xa0>
   1eb70:	ldr	r0, [fp, #-8]
   1eb74:	ldr	r1, [sp, #12]
   1eb78:	bl	52c0 <rb_patricia_lookup@plt>
   1eb7c:	str	r0, [sp, #8]
   1eb80:	ldr	r0, [sp, #12]
   1eb84:	bl	1da14 <Deref_Prefix>
   1eb88:	ldr	r0, [sp, #8]
   1eb8c:	str	r0, [fp, #-4]
   1eb90:	ldr	r0, [fp, #-4]
   1eb94:	mov	sp, fp
   1eb98:	pop	{fp, pc}

0001eb9c <New_Prefix>:
   1eb9c:	push	{fp, lr}
   1eba0:	mov	fp, sp
   1eba4:	sub	sp, sp, #16
   1eba8:	str	r0, [fp, #-4]
   1ebac:	str	r1, [sp, #8]
   1ebb0:	str	r2, [sp, #4]
   1ebb4:	ldr	r0, [fp, #-4]
   1ebb8:	ldr	r1, [sp, #8]
   1ebbc:	ldr	r2, [sp, #4]
   1ebc0:	movw	r3, #0
   1ebc4:	bl	1f164 <New_Prefix2>
   1ebc8:	mov	sp, fp
   1ebcc:	pop	{fp, pc}

0001ebd0 <make_and_lookup>:
   1ebd0:	push	{fp, lr}
   1ebd4:	mov	fp, sp
   1ebd8:	sub	sp, sp, #24
   1ebdc:	str	r0, [fp, #-8]
   1ebe0:	str	r1, [sp, #12]
   1ebe4:	ldr	r1, [sp, #12]
   1ebe8:	movw	r0, #2
   1ebec:	bl	1ec70 <ascii2prefix>
   1ebf0:	str	r0, [sp, #8]
   1ebf4:	movw	r1, #0
   1ebf8:	cmp	r0, r1
   1ebfc:	beq	1ec14 <make_and_lookup+0x44>
   1ec00:	ldr	r0, [fp, #-8]
   1ec04:	ldr	r1, [sp, #8]
   1ec08:	bl	52c0 <rb_patricia_lookup@plt>
   1ec0c:	str	r0, [sp, #4]
   1ec10:	b	1ec54 <make_and_lookup+0x84>
   1ec14:	ldr	r1, [sp, #12]
   1ec18:	movw	r0, #10
   1ec1c:	bl	1ec70 <ascii2prefix>
   1ec20:	str	r0, [sp, #8]
   1ec24:	movw	r1, #0
   1ec28:	cmp	r0, r1
   1ec2c:	beq	1ec44 <make_and_lookup+0x74>
   1ec30:	ldr	r0, [fp, #-8]
   1ec34:	ldr	r1, [sp, #8]
   1ec38:	bl	52c0 <rb_patricia_lookup@plt>
   1ec3c:	str	r0, [sp, #4]
   1ec40:	b	1ec50 <make_and_lookup+0x80>
   1ec44:	movw	r0, #0
   1ec48:	str	r0, [fp, #-4]
   1ec4c:	b	1ec64 <make_and_lookup+0x94>
   1ec50:	b	1ec54 <make_and_lookup+0x84>
   1ec54:	ldr	r0, [sp, #8]
   1ec58:	bl	1da14 <Deref_Prefix>
   1ec5c:	ldr	r0, [sp, #4]
   1ec60:	str	r0, [fp, #-4]
   1ec64:	ldr	r0, [fp, #-4]
   1ec68:	mov	sp, fp
   1ec6c:	pop	{fp, pc}

0001ec70 <ascii2prefix>:
   1ec70:	push	{r4, r5, fp, lr}
   1ec74:	add	fp, sp, #8
   1ec78:	sub	sp, sp, #72	; 0x48
   1ec7c:	sub	sp, sp, #1024	; 0x400
   1ec80:	str	r0, [fp, #-16]
   1ec84:	str	r1, [fp, #-20]	; 0xffffffec
   1ec88:	movw	r0, #0
   1ec8c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ec94:	cmp	r1, r0
   1ec98:	bne	1eca8 <ascii2prefix+0x38>
   1ec9c:	movw	r0, #0
   1eca0:	str	r0, [fp, #-12]
   1eca4:	b	1ee7c <ascii2prefix+0x20c>
   1eca8:	ldr	r0, [fp, #-16]
   1ecac:	cmp	r0, #0
   1ecb0:	bne	1ece0 <ascii2prefix+0x70>
   1ecb4:	movw	r0, #2
   1ecb8:	str	r0, [fp, #-16]
   1ecbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ecc0:	movw	r1, #58	; 0x3a
   1ecc4:	bl	4f78 <strchr@plt>
   1ecc8:	movw	r1, #0
   1eccc:	cmp	r0, r1
   1ecd0:	beq	1ecdc <ascii2prefix+0x6c>
   1ecd4:	movw	r0, #10
   1ecd8:	str	r0, [fp, #-16]
   1ecdc:	b	1ece0 <ascii2prefix+0x70>
   1ece0:	ldr	r0, [fp, #-16]
   1ece4:	cmp	r0, #2
   1ece8:	bne	1ecf8 <ascii2prefix+0x88>
   1ecec:	movw	r0, #32
   1ecf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecf4:	b	1ed10 <ascii2prefix+0xa0>
   1ecf8:	ldr	r0, [fp, #-16]
   1ecfc:	cmp	r0, #10
   1ed00:	bne	1ed0c <ascii2prefix+0x9c>
   1ed04:	movw	r0, #128	; 0x80
   1ed08:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed0c:	b	1ed10 <ascii2prefix+0xa0>
   1ed10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ed14:	movw	r1, #47	; 0x2f
   1ed18:	bl	4f78 <strchr@plt>
   1ed1c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed20:	movw	r1, #0
   1ed24:	cmp	r0, r1
   1ed28:	beq	1eda4 <ascii2prefix+0x134>
   1ed2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed30:	add	r0, r0, #1
   1ed34:	bl	5290 <atol@plt>
   1ed38:	add	lr, sp, #24
   1ed3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ed44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed48:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed4c:	sub	r2, r0, r2
   1ed50:	mov	r0, lr
   1ed54:	str	lr, [sp, #20]
   1ed58:	bl	51dc <memcpy@plt>
   1ed5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ed60:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ed64:	sub	r0, r0, r1
   1ed68:	ldr	r1, [sp, #20]
   1ed6c:	add	r0, r1, r0
   1ed70:	movw	r2, #0
   1ed74:	strb	r2, [r0]
   1ed78:	str	r1, [fp, #-20]	; 0xffffffec
   1ed7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed80:	cmp	r0, #0
   1ed84:	ble	1ed98 <ascii2prefix+0x128>
   1ed88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ed90:	cmp	r0, r1
   1ed94:	ble	1eda0 <ascii2prefix+0x130>
   1ed98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ed9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1eda0:	b	1edac <ascii2prefix+0x13c>
   1eda4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eda8:	str	r0, [fp, #-24]	; 0xffffffe8
   1edac:	ldr	r0, [fp, #-16]
   1edb0:	cmp	r0, #2
   1edb4:	bne	1ee10 <ascii2prefix+0x1a0>
   1edb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1edbc:	sub	r0, fp, #36	; 0x24
   1edc0:	movw	r2, #2
   1edc4:	str	r0, [sp, #16]
   1edc8:	mov	r0, r2
   1edcc:	ldr	r2, [sp, #16]
   1edd0:	bl	4ffc <rb_inet_pton@plt>
   1edd4:	str	r0, [fp, #-56]	; 0xffffffc8
   1edd8:	cmp	r0, #0
   1eddc:	bgt	1edec <ascii2prefix+0x17c>
   1ede0:	movw	r0, #0
   1ede4:	str	r0, [fp, #-12]
   1ede8:	b	1ee7c <ascii2prefix+0x20c>
   1edec:	sub	r0, fp, #36	; 0x24
   1edf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edf4:	movw	r1, #2
   1edf8:	str	r0, [sp, #12]
   1edfc:	mov	r0, r1
   1ee00:	ldr	r1, [sp, #12]
   1ee04:	bl	1eb9c <New_Prefix>
   1ee08:	str	r0, [fp, #-12]
   1ee0c:	b	1ee7c <ascii2prefix+0x20c>
   1ee10:	ldr	r0, [fp, #-16]
   1ee14:	cmp	r0, #10
   1ee18:	bne	1ee74 <ascii2prefix+0x204>
   1ee1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee20:	sub	r0, fp, #52	; 0x34
   1ee24:	movw	r2, #10
   1ee28:	str	r0, [sp, #8]
   1ee2c:	mov	r0, r2
   1ee30:	ldr	r2, [sp, #8]
   1ee34:	bl	4ffc <rb_inet_pton@plt>
   1ee38:	str	r0, [fp, #-56]	; 0xffffffc8
   1ee3c:	cmp	r0, #0
   1ee40:	bgt	1ee50 <ascii2prefix+0x1e0>
   1ee44:	movw	r0, #0
   1ee48:	str	r0, [fp, #-12]
   1ee4c:	b	1ee7c <ascii2prefix+0x20c>
   1ee50:	sub	r0, fp, #52	; 0x34
   1ee54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee58:	movw	r1, #10
   1ee5c:	str	r0, [sp, #4]
   1ee60:	mov	r0, r1
   1ee64:	ldr	r1, [sp, #4]
   1ee68:	bl	1eb9c <New_Prefix>
   1ee6c:	str	r0, [fp, #-12]
   1ee70:	b	1ee7c <ascii2prefix+0x20c>
   1ee74:	movw	r0, #0
   1ee78:	str	r0, [fp, #-12]
   1ee7c:	ldr	r0, [fp, #-12]
   1ee80:	sub	sp, fp, #8
   1ee84:	pop	{r4, r5, fp, pc}

0001ee88 <rb_match_ip>:
   1ee88:	push	{fp, lr}
   1ee8c:	mov	fp, sp
   1ee90:	sub	sp, sp, #32
   1ee94:	str	r0, [fp, #-8]
   1ee98:	str	r1, [fp, #-12]
   1ee9c:	ldr	r0, [fp, #-12]
   1eea0:	ldrh	r0, [r0]
   1eea4:	cmp	r0, #10
   1eea8:	bne	1eecc <rb_match_ip+0x44>
   1eeac:	movw	r0, #128	; 0x80
   1eeb0:	str	r0, [sp, #4]
   1eeb4:	movw	r0, #10
   1eeb8:	str	r0, [sp]
   1eebc:	ldr	r0, [fp, #-12]
   1eec0:	add	r0, r0, #8
   1eec4:	str	r0, [sp, #8]
   1eec8:	b	1eee8 <rb_match_ip+0x60>
   1eecc:	movw	r0, #32
   1eed0:	str	r0, [sp, #4]
   1eed4:	movw	r0, #2
   1eed8:	str	r0, [sp]
   1eedc:	ldr	r0, [fp, #-12]
   1eee0:	add	r0, r0, #4
   1eee4:	str	r0, [sp, #8]
   1eee8:	ldr	r0, [sp]
   1eeec:	ldr	r1, [sp, #8]
   1eef0:	ldr	r2, [sp, #4]
   1eef4:	bl	1eb9c <New_Prefix>
   1eef8:	str	r0, [sp, #16]
   1eefc:	movw	r1, #0
   1ef00:	cmp	r0, r1
   1ef04:	beq	1ef2c <rb_match_ip+0xa4>
   1ef08:	ldr	r0, [fp, #-8]
   1ef0c:	ldr	r1, [sp, #16]
   1ef10:	bl	4f18 <rb_patricia_search_best@plt>
   1ef14:	str	r0, [sp, #12]
   1ef18:	ldr	r0, [sp, #16]
   1ef1c:	bl	1da14 <Deref_Prefix>
   1ef20:	ldr	r0, [sp, #12]
   1ef24:	str	r0, [fp, #-4]
   1ef28:	b	1ef34 <rb_match_ip+0xac>
   1ef2c:	movw	r0, #0
   1ef30:	str	r0, [fp, #-4]
   1ef34:	ldr	r0, [fp, #-4]
   1ef38:	mov	sp, fp
   1ef3c:	pop	{fp, pc}

0001ef40 <rb_match_ip_exact>:
   1ef40:	push	{fp, lr}
   1ef44:	mov	fp, sp
   1ef48:	sub	sp, sp, #32
   1ef4c:	str	r0, [fp, #-8]
   1ef50:	str	r1, [fp, #-12]
   1ef54:	str	r2, [sp, #16]
   1ef58:	ldr	r0, [fp, #-12]
   1ef5c:	ldrh	r0, [r0]
   1ef60:	cmp	r0, #10
   1ef64:	bne	1ef94 <rb_match_ip_exact+0x54>
   1ef68:	ldr	r0, [sp, #16]
   1ef6c:	cmp	r0, #128	; 0x80
   1ef70:	bls	1ef7c <rb_match_ip_exact+0x3c>
   1ef74:	movw	r0, #128	; 0x80
   1ef78:	str	r0, [sp, #16]
   1ef7c:	movw	r0, #10
   1ef80:	str	r0, [sp]
   1ef84:	ldr	r0, [fp, #-12]
   1ef88:	add	r0, r0, #8
   1ef8c:	str	r0, [sp, #4]
   1ef90:	b	1efbc <rb_match_ip_exact+0x7c>
   1ef94:	ldr	r0, [sp, #16]
   1ef98:	cmp	r0, #32
   1ef9c:	bls	1efa8 <rb_match_ip_exact+0x68>
   1efa0:	movw	r0, #32
   1efa4:	str	r0, [sp, #16]
   1efa8:	movw	r0, #2
   1efac:	str	r0, [sp]
   1efb0:	ldr	r0, [fp, #-12]
   1efb4:	add	r0, r0, #4
   1efb8:	str	r0, [sp, #4]
   1efbc:	ldr	r0, [sp]
   1efc0:	ldr	r1, [sp, #4]
   1efc4:	ldr	r2, [sp, #16]
   1efc8:	bl	1eb9c <New_Prefix>
   1efcc:	str	r0, [sp, #12]
   1efd0:	movw	r1, #0
   1efd4:	cmp	r0, r1
   1efd8:	beq	1f000 <rb_match_ip_exact+0xc0>
   1efdc:	ldr	r0, [fp, #-8]
   1efe0:	ldr	r1, [sp, #12]
   1efe4:	bl	5278 <rb_patricia_search_exact@plt>
   1efe8:	str	r0, [sp, #8]
   1efec:	ldr	r0, [sp, #12]
   1eff0:	bl	1da14 <Deref_Prefix>
   1eff4:	ldr	r0, [sp, #8]
   1eff8:	str	r0, [fp, #-4]
   1effc:	b	1f008 <rb_match_ip_exact+0xc8>
   1f000:	movw	r0, #0
   1f004:	str	r0, [fp, #-4]
   1f008:	ldr	r0, [fp, #-4]
   1f00c:	mov	sp, fp
   1f010:	pop	{fp, pc}

0001f014 <rb_match_string>:
   1f014:	push	{fp, lr}
   1f018:	mov	fp, sp
   1f01c:	sub	sp, sp, #24
   1f020:	str	r0, [fp, #-8]
   1f024:	str	r1, [sp, #12]
   1f028:	ldr	r1, [sp, #12]
   1f02c:	movw	r0, #2
   1f030:	bl	1ec70 <ascii2prefix>
   1f034:	str	r0, [sp, #4]
   1f038:	movw	r1, #0
   1f03c:	cmp	r0, r1
   1f040:	beq	1f060 <rb_match_string+0x4c>
   1f044:	ldr	r0, [fp, #-8]
   1f048:	ldr	r1, [sp, #4]
   1f04c:	bl	4f18 <rb_patricia_search_best@plt>
   1f050:	str	r0, [sp, #8]
   1f054:	ldr	r0, [sp, #4]
   1f058:	bl	1da14 <Deref_Prefix>
   1f05c:	b	1f0a8 <rb_match_string+0x94>
   1f060:	ldr	r1, [sp, #12]
   1f064:	movw	r0, #10
   1f068:	bl	1ec70 <ascii2prefix>
   1f06c:	str	r0, [sp, #4]
   1f070:	movw	r1, #0
   1f074:	cmp	r0, r1
   1f078:	beq	1f098 <rb_match_string+0x84>
   1f07c:	ldr	r0, [fp, #-8]
   1f080:	ldr	r1, [sp, #4]
   1f084:	bl	4f18 <rb_patricia_search_best@plt>
   1f088:	str	r0, [sp, #8]
   1f08c:	ldr	r0, [sp, #4]
   1f090:	bl	1da14 <Deref_Prefix>
   1f094:	b	1f0a4 <rb_match_string+0x90>
   1f098:	movw	r0, #0
   1f09c:	str	r0, [fp, #-4]
   1f0a0:	b	1f0b0 <rb_match_string+0x9c>
   1f0a4:	b	1f0a8 <rb_match_string+0x94>
   1f0a8:	ldr	r0, [sp, #8]
   1f0ac:	str	r0, [fp, #-4]
   1f0b0:	ldr	r0, [fp, #-4]
   1f0b4:	mov	sp, fp
   1f0b8:	pop	{fp, pc}

0001f0bc <rb_match_exact_string>:
   1f0bc:	push	{fp, lr}
   1f0c0:	mov	fp, sp
   1f0c4:	sub	sp, sp, #24
   1f0c8:	str	r0, [fp, #-8]
   1f0cc:	str	r1, [sp, #12]
   1f0d0:	ldr	r1, [sp, #12]
   1f0d4:	movw	r0, #2
   1f0d8:	bl	1ec70 <ascii2prefix>
   1f0dc:	str	r0, [sp, #8]
   1f0e0:	movw	r1, #0
   1f0e4:	cmp	r0, r1
   1f0e8:	beq	1f108 <rb_match_exact_string+0x4c>
   1f0ec:	ldr	r0, [fp, #-8]
   1f0f0:	ldr	r1, [sp, #8]
   1f0f4:	bl	5278 <rb_patricia_search_exact@plt>
   1f0f8:	str	r0, [sp, #4]
   1f0fc:	ldr	r0, [sp, #8]
   1f100:	bl	1da14 <Deref_Prefix>
   1f104:	b	1f150 <rb_match_exact_string+0x94>
   1f108:	ldr	r1, [sp, #12]
   1f10c:	movw	r0, #10
   1f110:	bl	1ec70 <ascii2prefix>
   1f114:	str	r0, [sp, #8]
   1f118:	movw	r1, #0
   1f11c:	cmp	r0, r1
   1f120:	beq	1f140 <rb_match_exact_string+0x84>
   1f124:	ldr	r0, [fp, #-8]
   1f128:	ldr	r1, [sp, #8]
   1f12c:	bl	5278 <rb_patricia_search_exact@plt>
   1f130:	str	r0, [sp, #4]
   1f134:	ldr	r0, [sp, #8]
   1f138:	bl	1da14 <Deref_Prefix>
   1f13c:	b	1f14c <rb_match_exact_string+0x90>
   1f140:	movw	r0, #0
   1f144:	str	r0, [fp, #-4]
   1f148:	b	1f158 <rb_match_exact_string+0x9c>
   1f14c:	b	1f150 <rb_match_exact_string+0x94>
   1f150:	ldr	r0, [sp, #4]
   1f154:	str	r0, [fp, #-4]
   1f158:	ldr	r0, [fp, #-4]
   1f15c:	mov	sp, fp
   1f160:	pop	{fp, pc}

0001f164 <New_Prefix2>:
   1f164:	push	{fp, lr}
   1f168:	mov	fp, sp
   1f16c:	sub	sp, sp, #32
   1f170:	str	r0, [fp, #-8]
   1f174:	str	r1, [fp, #-12]
   1f178:	str	r2, [sp, #16]
   1f17c:	str	r3, [sp, #12]
   1f180:	movw	r0, #0
   1f184:	str	r0, [sp, #8]
   1f188:	movw	r0, #128	; 0x80
   1f18c:	str	r0, [sp, #4]
   1f190:	ldr	r0, [fp, #-8]
   1f194:	cmp	r0, #10
   1f198:	bne	1f258 <New_Prefix2+0xf4>
   1f19c:	movw	r0, #128	; 0x80
   1f1a0:	str	r0, [sp, #4]
   1f1a4:	ldr	r0, [sp, #12]
   1f1a8:	movw	r1, #0
   1f1ac:	cmp	r0, r1
   1f1b0:	bne	1f1cc <New_Prefix2+0x68>
   1f1b4:	movw	r0, #24
   1f1b8:	bl	1d820 <rb_malloc>
   1f1bc:	str	r0, [sp, #12]
   1f1c0:	ldr	r0, [sp, #8]
   1f1c4:	add	r0, r0, #1
   1f1c8:	str	r0, [sp, #8]
   1f1cc:	ldr	r0, [sp, #12]
   1f1d0:	ldr	r1, [fp, #-12]
   1f1d4:	ldrb	r2, [r1]
   1f1d8:	strb	r2, [r0, #8]
   1f1dc:	ldrb	r2, [r1, #1]
   1f1e0:	strb	r2, [r0, #9]
   1f1e4:	ldrb	r2, [r1, #2]
   1f1e8:	strb	r2, [r0, #10]
   1f1ec:	ldrb	r2, [r1, #3]
   1f1f0:	strb	r2, [r0, #11]
   1f1f4:	ldrb	r2, [r1, #4]
   1f1f8:	strb	r2, [r0, #12]
   1f1fc:	ldrb	r2, [r1, #5]
   1f200:	strb	r2, [r0, #13]
   1f204:	ldrb	r2, [r1, #6]
   1f208:	strb	r2, [r0, #14]
   1f20c:	ldrb	r2, [r1, #7]
   1f210:	strb	r2, [r0, #15]
   1f214:	ldrb	r2, [r1, #8]
   1f218:	strb	r2, [r0, #16]
   1f21c:	ldrb	r2, [r1, #9]
   1f220:	strb	r2, [r0, #17]
   1f224:	ldrb	r2, [r1, #10]
   1f228:	strb	r2, [r0, #18]
   1f22c:	ldrb	r2, [r1, #11]
   1f230:	strb	r2, [r0, #19]
   1f234:	ldrb	r2, [r1, #12]
   1f238:	strb	r2, [r0, #20]
   1f23c:	ldrb	r2, [r1, #13]
   1f240:	strb	r2, [r0, #21]
   1f244:	ldrb	r2, [r1, #14]
   1f248:	strb	r2, [r0, #22]
   1f24c:	ldrb	r1, [r1, #15]
   1f250:	strb	r1, [r0, #23]
   1f254:	b	1f2c8 <New_Prefix2+0x164>
   1f258:	ldr	r0, [fp, #-8]
   1f25c:	cmp	r0, #2
   1f260:	bne	1f2b8 <New_Prefix2+0x154>
   1f264:	ldr	r0, [sp, #12]
   1f268:	movw	r1, #0
   1f26c:	cmp	r0, r1
   1f270:	bne	1f28c <New_Prefix2+0x128>
   1f274:	movw	r0, #24
   1f278:	bl	1d820 <rb_malloc>
   1f27c:	str	r0, [sp, #12]
   1f280:	ldr	r0, [sp, #8]
   1f284:	add	r0, r0, #1
   1f288:	str	r0, [sp, #8]
   1f28c:	ldr	r0, [sp, #12]
   1f290:	ldr	r1, [fp, #-12]
   1f294:	ldrb	r2, [r1]
   1f298:	strb	r2, [r0, #8]
   1f29c:	ldrb	r2, [r1, #1]
   1f2a0:	strb	r2, [r0, #9]
   1f2a4:	ldrb	r2, [r1, #2]
   1f2a8:	strb	r2, [r0, #10]
   1f2ac:	ldrb	r1, [r1, #3]
   1f2b0:	strb	r1, [r0, #11]
   1f2b4:	b	1f2c4 <New_Prefix2+0x160>
   1f2b8:	movw	r0, #0
   1f2bc:	str	r0, [fp, #-4]
   1f2c0:	b	1f330 <New_Prefix2+0x1cc>
   1f2c4:	b	1f2c8 <New_Prefix2+0x164>
   1f2c8:	ldr	r0, [sp, #16]
   1f2cc:	cmp	r0, #0
   1f2d0:	blt	1f2e0 <New_Prefix2+0x17c>
   1f2d4:	ldr	r0, [sp, #16]
   1f2d8:	str	r0, [sp]
   1f2dc:	b	1f2e8 <New_Prefix2+0x184>
   1f2e0:	ldr	r0, [sp, #4]
   1f2e4:	str	r0, [sp]
   1f2e8:	ldr	r0, [sp]
   1f2ec:	ldr	r1, [sp, #12]
   1f2f0:	strh	r0, [r1, #2]
   1f2f4:	ldr	r0, [fp, #-8]
   1f2f8:	ldr	r1, [sp, #12]
   1f2fc:	strh	r0, [r1]
   1f300:	ldr	r0, [sp, #12]
   1f304:	movw	r1, #0
   1f308:	str	r1, [r0, #4]
   1f30c:	ldr	r0, [sp, #8]
   1f310:	cmp	r0, #0
   1f314:	beq	1f328 <New_Prefix2+0x1c4>
   1f318:	ldr	r0, [sp, #12]
   1f31c:	ldr	r1, [r0, #4]
   1f320:	add	r1, r1, #1
   1f324:	str	r1, [r0, #4]
   1f328:	ldr	r0, [sp, #12]
   1f32c:	str	r0, [fp, #-4]
   1f330:	ldr	r0, [fp, #-4]
   1f334:	mov	sp, fp
   1f338:	pop	{fp, pc}

0001f33c <rb_dictionary_create>:
   1f33c:	push	{fp, lr}
   1f340:	mov	fp, sp
   1f344:	sub	sp, sp, #16
   1f348:	str	r0, [fp, #-4]
   1f34c:	str	r1, [sp, #8]
   1f350:	movw	r0, #40	; 0x28
   1f354:	bl	1f3a0 <rb_malloc>
   1f358:	str	r0, [sp, #4]
   1f35c:	ldr	r0, [sp, #8]
   1f360:	ldr	r1, [sp, #4]
   1f364:	str	r0, [r1]
   1f368:	ldr	r0, [fp, #-4]
   1f36c:	bl	1f3f8 <rb_strdup>
   1f370:	ldr	r1, [pc, #36]	; 1f39c <rb_dictionary_create+0x60>
   1f374:	add	r2, pc, r1
   1f378:	ldr	r1, [sp, #4]
   1f37c:	str	r0, [r1, #20]
   1f380:	ldr	r0, [sp, #4]
   1f384:	ldr	r1, [sp, #4]
   1f388:	add	r1, r1, #28
   1f38c:	bl	1f468 <rb_dlinkAdd>
   1f390:	ldr	r0, [sp, #4]
   1f394:	mov	sp, fp
   1f398:	pop	{fp, pc}
   1f39c:	.word	0x00034088

0001f3a0 <rb_malloc>:
   1f3a0:	push	{fp, lr}
   1f3a4:	mov	fp, sp
   1f3a8:	sub	sp, sp, #8
   1f3ac:	str	r0, [sp, #4]
   1f3b0:	ldr	r1, [sp, #4]
   1f3b4:	movw	r0, #1
   1f3b8:	bl	4fb4 <calloc@plt>
   1f3bc:	str	r0, [sp]
   1f3c0:	ldr	r0, [sp]
   1f3c4:	movw	r1, #0
   1f3c8:	cmp	r0, r1
   1f3cc:	movw	r0, #0
   1f3d0:	moveq	r0, #1
   1f3d4:	mvn	r1, #0
   1f3d8:	eor	r0, r0, r1
   1f3dc:	eor	r0, r0, r1
   1f3e0:	tst	r0, #1
   1f3e4:	beq	1f3ec <rb_malloc+0x4c>
   1f3e8:	bl	5350 <rb_outofmemory@plt>
   1f3ec:	ldr	r0, [sp]
   1f3f0:	mov	sp, fp
   1f3f4:	pop	{fp, pc}

0001f3f8 <rb_strdup>:
   1f3f8:	push	{fp, lr}
   1f3fc:	mov	fp, sp
   1f400:	sub	sp, sp, #16
   1f404:	str	r0, [fp, #-4]
   1f408:	ldr	r0, [fp, #-4]
   1f40c:	bl	51b8 <strlen@plt>
   1f410:	add	r0, r0, #1
   1f414:	bl	5374 <malloc@plt>
   1f418:	str	r0, [sp, #8]
   1f41c:	ldr	r0, [sp, #8]
   1f420:	movw	lr, #0
   1f424:	cmp	r0, lr
   1f428:	movw	r0, #0
   1f42c:	moveq	r0, #1
   1f430:	mvn	lr, #0
   1f434:	eor	r0, r0, lr
   1f438:	eor	r0, r0, lr
   1f43c:	tst	r0, #1
   1f440:	beq	1f448 <rb_strdup+0x50>
   1f444:	bl	5350 <rb_outofmemory@plt>
   1f448:	ldr	r0, [sp, #8]
   1f44c:	ldr	r1, [fp, #-4]
   1f450:	bl	5254 <strcpy@plt>
   1f454:	ldr	r1, [sp, #8]
   1f458:	str	r0, [sp, #4]
   1f45c:	mov	r0, r1
   1f460:	mov	sp, fp
   1f464:	pop	{fp, pc}

0001f468 <rb_dlinkAdd>:
   1f468:	sub	sp, sp, #12
   1f46c:	str	r0, [sp, #8]
   1f470:	str	r1, [sp, #4]
   1f474:	str	r2, [sp]
   1f478:	ldr	r0, [sp, #8]
   1f47c:	ldr	r1, [sp, #4]
   1f480:	str	r0, [r1]
   1f484:	ldr	r0, [sp, #4]
   1f488:	movw	r1, #0
   1f48c:	str	r1, [r0, #4]
   1f490:	ldr	r0, [sp]
   1f494:	ldr	r0, [r0]
   1f498:	ldr	r2, [sp, #4]
   1f49c:	str	r0, [r2, #8]
   1f4a0:	ldr	r0, [sp]
   1f4a4:	ldr	r0, [r0]
   1f4a8:	cmp	r0, r1
   1f4ac:	beq	1f4c4 <rb_dlinkAdd+0x5c>
   1f4b0:	ldr	r0, [sp, #4]
   1f4b4:	ldr	r1, [sp]
   1f4b8:	ldr	r1, [r1]
   1f4bc:	str	r0, [r1, #4]
   1f4c0:	b	1f4e8 <rb_dlinkAdd+0x80>
   1f4c4:	ldr	r0, [sp]
   1f4c8:	ldr	r0, [r0, #4]
   1f4cc:	movw	r1, #0
   1f4d0:	cmp	r0, r1
   1f4d4:	bne	1f4e4 <rb_dlinkAdd+0x7c>
   1f4d8:	ldr	r0, [sp, #4]
   1f4dc:	ldr	r1, [sp]
   1f4e0:	str	r0, [r1, #4]
   1f4e4:	b	1f4e8 <rb_dlinkAdd+0x80>
   1f4e8:	ldr	r0, [sp, #4]
   1f4ec:	ldr	r1, [sp]
   1f4f0:	str	r0, [r1]
   1f4f4:	ldr	r0, [sp]
   1f4f8:	ldr	r1, [r0, #8]
   1f4fc:	add	r1, r1, #1
   1f500:	str	r1, [r0, #8]
   1f504:	add	sp, sp, #12
   1f508:	bx	lr

0001f50c <rb_dictionary_set_comparator_func>:
   1f50c:	sub	sp, sp, #8
   1f510:	str	r0, [sp, #4]
   1f514:	str	r1, [sp]
   1f518:	ldr	r0, [sp]
   1f51c:	ldr	r1, [sp, #4]
   1f520:	str	r0, [r1]
   1f524:	add	sp, sp, #8
   1f528:	bx	lr

0001f52c <rb_dictionary_get_comparator_func>:
   1f52c:	sub	sp, sp, #4
   1f530:	str	r0, [sp]
   1f534:	ldr	r0, [sp]
   1f538:	ldr	r0, [r0]
   1f53c:	add	sp, sp, #4
   1f540:	bx	lr

0001f544 <rb_dictionary_get_linear_index>:
   1f544:	push	{fp, lr}
   1f548:	mov	fp, sp
   1f54c:	sub	sp, sp, #24
   1f550:	str	r0, [fp, #-8]
   1f554:	str	r1, [sp, #12]
   1f558:	ldr	r0, [fp, #-8]
   1f55c:	ldr	r1, [sp, #12]
   1f560:	bl	53f8 <rb_dictionary_find@plt>
   1f564:	str	r0, [sp, #8]
   1f568:	ldr	r0, [sp, #8]
   1f56c:	movw	r1, #0
   1f570:	cmp	r0, r1
   1f574:	bne	1f584 <rb_dictionary_get_linear_index+0x40>
   1f578:	mvn	r0, #0
   1f57c:	str	r0, [fp, #-4]
   1f580:	b	1f614 <rb_dictionary_get_linear_index+0xd0>
   1f584:	ldr	r0, [fp, #-8]
   1f588:	ldrb	r0, [r0, #24]
   1f58c:	and	r0, r0, #1
   1f590:	and	r0, r0, #255	; 0xff
   1f594:	cmp	r0, #0
   1f598:	bne	1f5ac <rb_dictionary_get_linear_index+0x68>
   1f59c:	ldr	r0, [sp, #8]
   1f5a0:	ldr	r0, [r0, #24]
   1f5a4:	str	r0, [fp, #-4]
   1f5a8:	b	1f614 <rb_dictionary_get_linear_index+0xd0>
   1f5ac:	ldr	r0, [fp, #-8]
   1f5b0:	ldr	r0, [r0, #8]
   1f5b4:	str	r0, [sp, #4]
   1f5b8:	movw	r0, #0
   1f5bc:	str	r0, [sp]
   1f5c0:	ldr	r0, [sp, #4]
   1f5c4:	movw	r1, #0
   1f5c8:	cmp	r0, r1
   1f5cc:	beq	1f5f8 <rb_dictionary_get_linear_index+0xb4>
   1f5d0:	ldr	r0, [sp]
   1f5d4:	ldr	r1, [sp, #4]
   1f5d8:	str	r0, [r1, #24]
   1f5dc:	ldr	r0, [sp, #4]
   1f5e0:	ldr	r0, [r0, #12]
   1f5e4:	str	r0, [sp, #4]
   1f5e8:	ldr	r0, [sp]
   1f5ec:	add	r0, r0, #1
   1f5f0:	str	r0, [sp]
   1f5f4:	b	1f5c0 <rb_dictionary_get_linear_index+0x7c>
   1f5f8:	ldr	r0, [fp, #-8]
   1f5fc:	ldrb	r1, [r0, #24]
   1f600:	bic	r1, r1, #1
   1f604:	strb	r1, [r0, #24]
   1f608:	ldr	r0, [sp, #8]
   1f60c:	ldr	r0, [r0, #24]
   1f610:	str	r0, [fp, #-4]
   1f614:	ldr	r0, [fp, #-4]
   1f618:	mov	sp, fp
   1f61c:	pop	{fp, pc}

0001f620 <rb_dictionary_find>:
   1f620:	push	{fp, lr}
   1f624:	mov	fp, sp
   1f628:	sub	sp, sp, #16
   1f62c:	str	r0, [sp, #8]
   1f630:	str	r1, [sp, #4]
   1f634:	ldr	r0, [sp, #8]
   1f638:	ldr	r1, [sp, #4]
   1f63c:	bl	1fbf8 <rb_dictionary_retune>
   1f640:	ldr	r0, [sp, #8]
   1f644:	ldr	r0, [r0, #4]
   1f648:	movw	r1, #0
   1f64c:	cmp	r0, r1
   1f650:	beq	1f698 <rb_dictionary_find+0x78>
   1f654:	ldr	r0, [sp, #8]
   1f658:	ldr	r0, [r0]
   1f65c:	ldr	r1, [sp, #4]
   1f660:	ldr	r2, [sp, #8]
   1f664:	ldr	r2, [r2, #4]
   1f668:	ldr	r2, [r2, #20]
   1f66c:	str	r0, [sp]
   1f670:	mov	r0, r1
   1f674:	mov	r1, r2
   1f678:	ldr	r2, [sp]
   1f67c:	blx	r2
   1f680:	cmp	r0, #0
   1f684:	bne	1f698 <rb_dictionary_find+0x78>
   1f688:	ldr	r0, [sp, #8]
   1f68c:	ldr	r0, [r0, #4]
   1f690:	str	r0, [fp, #-4]
   1f694:	b	1f6a0 <rb_dictionary_find+0x80>
   1f698:	movw	r0, #0
   1f69c:	str	r0, [fp, #-4]
   1f6a0:	ldr	r0, [fp, #-4]
   1f6a4:	mov	sp, fp
   1f6a8:	pop	{fp, pc}

0001f6ac <rb_dictionary_destroy>:
   1f6ac:	push	{fp, lr}
   1f6b0:	mov	fp, sp
   1f6b4:	sub	sp, sp, #32
   1f6b8:	str	r0, [fp, #-4]
   1f6bc:	str	r1, [fp, #-8]
   1f6c0:	str	r2, [fp, #-12]
   1f6c4:	ldr	r0, [fp, #-4]
   1f6c8:	ldr	r0, [r0, #8]
   1f6cc:	str	r0, [sp, #16]
   1f6d0:	ldr	r0, [sp, #16]
   1f6d4:	movw	r1, #0
   1f6d8:	cmp	r0, r1
   1f6dc:	beq	1f6f0 <rb_dictionary_destroy+0x44>
   1f6e0:	ldr	r0, [sp, #16]
   1f6e4:	ldr	r0, [r0, #12]
   1f6e8:	str	r0, [sp, #8]
   1f6ec:	b	1f6fc <rb_dictionary_destroy+0x50>
   1f6f0:	movw	r0, #0
   1f6f4:	str	r0, [sp, #8]
   1f6f8:	b	1f6fc <rb_dictionary_destroy+0x50>
   1f6fc:	ldr	r0, [sp, #8]
   1f700:	str	r0, [sp, #12]
   1f704:	ldr	r0, [sp, #16]
   1f708:	movw	r1, #0
   1f70c:	cmp	r0, r1
   1f710:	beq	1f78c <rb_dictionary_destroy+0xe0>
   1f714:	ldr	r0, [fp, #-8]
   1f718:	movw	r1, #0
   1f71c:	cmp	r0, r1
   1f720:	beq	1f744 <rb_dictionary_destroy+0x98>
   1f724:	ldr	r0, [fp, #-8]
   1f728:	ldr	r1, [sp, #16]
   1f72c:	ldr	r2, [fp, #-12]
   1f730:	str	r0, [sp, #4]
   1f734:	mov	r0, r1
   1f738:	mov	r1, r2
   1f73c:	ldr	r2, [sp, #4]
   1f740:	blx	r2
   1f744:	ldr	r0, [sp, #16]
   1f748:	bl	1f7c0 <rb_free>
   1f74c:	ldr	r0, [sp, #12]
   1f750:	str	r0, [sp, #16]
   1f754:	ldr	r0, [sp, #16]
   1f758:	movw	r1, #0
   1f75c:	cmp	r0, r1
   1f760:	beq	1f774 <rb_dictionary_destroy+0xc8>
   1f764:	ldr	r0, [sp, #16]
   1f768:	ldr	r0, [r0, #12]
   1f76c:	str	r0, [sp]
   1f770:	b	1f780 <rb_dictionary_destroy+0xd4>
   1f774:	movw	r0, #0
   1f778:	str	r0, [sp]
   1f77c:	b	1f780 <rb_dictionary_destroy+0xd4>
   1f780:	ldr	r0, [sp]
   1f784:	str	r0, [sp, #12]
   1f788:	b	1f704 <rb_dictionary_destroy+0x58>
   1f78c:	ldr	r0, [pc, #40]	; 1f7bc <rb_dictionary_destroy+0x110>
   1f790:	add	r1, pc, r0
   1f794:	ldr	r0, [fp, #-4]
   1f798:	add	r0, r0, #28
   1f79c:	bl	1f808 <rb_dlinkDelete>
   1f7a0:	ldr	r0, [fp, #-4]
   1f7a4:	ldr	r0, [r0, #20]
   1f7a8:	bl	1f7c0 <rb_free>
   1f7ac:	ldr	r0, [fp, #-4]
   1f7b0:	bl	1f7c0 <rb_free>
   1f7b4:	mov	sp, fp
   1f7b8:	pop	{fp, pc}
   1f7bc:	.word	0x00033c6c

0001f7c0 <rb_free>:
   1f7c0:	push	{fp, lr}
   1f7c4:	mov	fp, sp
   1f7c8:	sub	sp, sp, #8
   1f7cc:	str	r0, [sp, #4]
   1f7d0:	ldr	r0, [sp, #4]
   1f7d4:	movw	r1, #0
   1f7d8:	cmp	r0, r1
   1f7dc:	movw	r0, #0
   1f7e0:	movne	r0, #1
   1f7e4:	mvn	r1, #0
   1f7e8:	eor	r0, r0, r1
   1f7ec:	eor	r0, r0, r1
   1f7f0:	tst	r0, #1
   1f7f4:	beq	1f800 <rb_free+0x40>
   1f7f8:	ldr	r0, [sp, #4]
   1f7fc:	bl	50c8 <free@plt>
   1f800:	mov	sp, fp
   1f804:	pop	{fp, pc}

0001f808 <rb_dlinkDelete>:
   1f808:	sub	sp, sp, #8
   1f80c:	str	r0, [sp, #4]
   1f810:	str	r1, [sp]
   1f814:	ldr	r0, [sp, #4]
   1f818:	ldr	r0, [r0, #8]
   1f81c:	movw	r1, #0
   1f820:	cmp	r0, r1
   1f824:	beq	1f840 <rb_dlinkDelete+0x38>
   1f828:	ldr	r0, [sp, #4]
   1f82c:	ldr	r0, [r0, #4]
   1f830:	ldr	r1, [sp, #4]
   1f834:	ldr	r1, [r1, #8]
   1f838:	str	r0, [r1, #4]
   1f83c:	b	1f850 <rb_dlinkDelete+0x48>
   1f840:	ldr	r0, [sp, #4]
   1f844:	ldr	r0, [r0, #4]
   1f848:	ldr	r1, [sp]
   1f84c:	str	r0, [r1, #4]
   1f850:	ldr	r0, [sp, #4]
   1f854:	ldr	r0, [r0, #4]
   1f858:	movw	r1, #0
   1f85c:	cmp	r0, r1
   1f860:	beq	1f87c <rb_dlinkDelete+0x74>
   1f864:	ldr	r0, [sp, #4]
   1f868:	ldr	r0, [r0, #8]
   1f86c:	ldr	r1, [sp, #4]
   1f870:	ldr	r1, [r1, #4]
   1f874:	str	r0, [r1, #8]
   1f878:	b	1f88c <rb_dlinkDelete+0x84>
   1f87c:	ldr	r0, [sp, #4]
   1f880:	ldr	r0, [r0, #8]
   1f884:	ldr	r1, [sp]
   1f888:	str	r0, [r1]
   1f88c:	ldr	r0, [sp, #4]
   1f890:	movw	r1, #0
   1f894:	str	r1, [r0, #4]
   1f898:	ldr	r0, [sp, #4]
   1f89c:	str	r1, [r0, #8]
   1f8a0:	ldr	r0, [sp]
   1f8a4:	ldr	r1, [r0, #8]
   1f8a8:	mvn	r2, #0
   1f8ac:	add	r1, r1, r2
   1f8b0:	str	r1, [r0, #8]
   1f8b4:	add	sp, sp, #8
   1f8b8:	bx	lr

0001f8bc <rb_dictionary_foreach>:
   1f8bc:	push	{fp, lr}
   1f8c0:	mov	fp, sp
   1f8c4:	sub	sp, sp, #40	; 0x28
   1f8c8:	str	r0, [fp, #-4]
   1f8cc:	str	r1, [fp, #-8]
   1f8d0:	str	r2, [fp, #-12]
   1f8d4:	ldr	r0, [fp, #-4]
   1f8d8:	ldr	r0, [r0, #8]
   1f8dc:	str	r0, [fp, #-16]
   1f8e0:	ldr	r0, [fp, #-16]
   1f8e4:	movw	r1, #0
   1f8e8:	cmp	r0, r1
   1f8ec:	beq	1f900 <rb_dictionary_foreach+0x44>
   1f8f0:	ldr	r0, [fp, #-16]
   1f8f4:	ldr	r0, [r0, #12]
   1f8f8:	str	r0, [sp, #12]
   1f8fc:	b	1f90c <rb_dictionary_foreach+0x50>
   1f900:	movw	r0, #0
   1f904:	str	r0, [sp, #12]
   1f908:	b	1f90c <rb_dictionary_foreach+0x50>
   1f90c:	ldr	r0, [sp, #12]
   1f910:	str	r0, [sp, #20]
   1f914:	ldr	r0, [fp, #-16]
   1f918:	movw	r1, #0
   1f91c:	cmp	r0, r1
   1f920:	beq	1f9a4 <rb_dictionary_foreach+0xe8>
   1f924:	ldr	r0, [fp, #-16]
   1f928:	str	r0, [sp, #16]
   1f92c:	ldr	r0, [fp, #-8]
   1f930:	movw	r1, #0
   1f934:	cmp	r0, r1
   1f938:	beq	1f960 <rb_dictionary_foreach+0xa4>
   1f93c:	ldr	r0, [fp, #-8]
   1f940:	ldr	r1, [sp, #16]
   1f944:	ldr	r2, [fp, #-12]
   1f948:	str	r0, [sp, #8]
   1f94c:	mov	r0, r1
   1f950:	mov	r1, r2
   1f954:	ldr	r2, [sp, #8]
   1f958:	blx	r2
   1f95c:	str	r0, [sp, #4]
   1f960:	b	1f964 <rb_dictionary_foreach+0xa8>
   1f964:	ldr	r0, [sp, #20]
   1f968:	str	r0, [fp, #-16]
   1f96c:	ldr	r0, [fp, #-16]
   1f970:	movw	r1, #0
   1f974:	cmp	r0, r1
   1f978:	beq	1f98c <rb_dictionary_foreach+0xd0>
   1f97c:	ldr	r0, [fp, #-16]
   1f980:	ldr	r0, [r0, #12]
   1f984:	str	r0, [sp]
   1f988:	b	1f998 <rb_dictionary_foreach+0xdc>
   1f98c:	movw	r0, #0
   1f990:	str	r0, [sp]
   1f994:	b	1f998 <rb_dictionary_foreach+0xdc>
   1f998:	ldr	r0, [sp]
   1f99c:	str	r0, [sp, #20]
   1f9a0:	b	1f914 <rb_dictionary_foreach+0x58>
   1f9a4:	mov	sp, fp
   1f9a8:	pop	{fp, pc}

0001f9ac <rb_dictionary_search>:
   1f9ac:	push	{fp, lr}
   1f9b0:	mov	fp, sp
   1f9b4:	sub	sp, sp, #40	; 0x28
   1f9b8:	str	r0, [fp, #-4]
   1f9bc:	str	r1, [fp, #-8]
   1f9c0:	str	r2, [fp, #-12]
   1f9c4:	movw	r0, #0
   1f9c8:	str	r0, [sp, #16]
   1f9cc:	ldr	r1, [fp, #-4]
   1f9d0:	ldr	r1, [r1, #8]
   1f9d4:	str	r1, [fp, #-16]
   1f9d8:	ldr	r1, [fp, #-16]
   1f9dc:	cmp	r1, r0
   1f9e0:	beq	1f9f4 <rb_dictionary_search+0x48>
   1f9e4:	ldr	r0, [fp, #-16]
   1f9e8:	ldr	r0, [r0, #12]
   1f9ec:	str	r0, [sp, #8]
   1f9f0:	b	1fa00 <rb_dictionary_search+0x54>
   1f9f4:	movw	r0, #0
   1f9f8:	str	r0, [sp, #8]
   1f9fc:	b	1fa00 <rb_dictionary_search+0x54>
   1fa00:	ldr	r0, [sp, #8]
   1fa04:	str	r0, [sp, #20]
   1fa08:	ldr	r0, [fp, #-16]
   1fa0c:	movw	r1, #0
   1fa10:	cmp	r0, r1
   1fa14:	beq	1faac <rb_dictionary_search+0x100>
   1fa18:	ldr	r0, [fp, #-16]
   1fa1c:	str	r0, [sp, #12]
   1fa20:	ldr	r0, [fp, #-8]
   1fa24:	movw	r1, #0
   1fa28:	cmp	r0, r1
   1fa2c:	beq	1fa54 <rb_dictionary_search+0xa8>
   1fa30:	ldr	r0, [fp, #-8]
   1fa34:	ldr	r1, [sp, #12]
   1fa38:	ldr	r2, [fp, #-12]
   1fa3c:	str	r0, [sp, #4]
   1fa40:	mov	r0, r1
   1fa44:	mov	r1, r2
   1fa48:	ldr	r2, [sp, #4]
   1fa4c:	blx	r2
   1fa50:	str	r0, [sp, #16]
   1fa54:	ldr	r0, [sp, #16]
   1fa58:	movw	r1, #0
   1fa5c:	cmp	r0, r1
   1fa60:	beq	1fa68 <rb_dictionary_search+0xbc>
   1fa64:	b	1faac <rb_dictionary_search+0x100>
   1fa68:	b	1fa6c <rb_dictionary_search+0xc0>
   1fa6c:	ldr	r0, [sp, #20]
   1fa70:	str	r0, [fp, #-16]
   1fa74:	ldr	r0, [fp, #-16]
   1fa78:	movw	r1, #0
   1fa7c:	cmp	r0, r1
   1fa80:	beq	1fa94 <rb_dictionary_search+0xe8>
   1fa84:	ldr	r0, [fp, #-16]
   1fa88:	ldr	r0, [r0, #12]
   1fa8c:	str	r0, [sp]
   1fa90:	b	1faa0 <rb_dictionary_search+0xf4>
   1fa94:	movw	r0, #0
   1fa98:	str	r0, [sp]
   1fa9c:	b	1faa0 <rb_dictionary_search+0xf4>
   1faa0:	ldr	r0, [sp]
   1faa4:	str	r0, [sp, #20]
   1faa8:	b	1fa08 <rb_dictionary_search+0x5c>
   1faac:	ldr	r0, [sp, #16]
   1fab0:	mov	sp, fp
   1fab4:	pop	{fp, pc}

0001fab8 <rb_dictionary_foreach_start>:
   1fab8:	push	{fp, lr}
   1fabc:	mov	fp, sp
   1fac0:	sub	sp, sp, #8
   1fac4:	str	r0, [sp, #4]
   1fac8:	str	r1, [sp]
   1facc:	ldr	r0, [sp]
   1fad0:	movw	r1, #0
   1fad4:	str	r1, [r0]
   1fad8:	ldr	r0, [sp]
   1fadc:	str	r1, [r0, #4]
   1fae0:	ldr	r0, [sp, #4]
   1fae4:	ldr	r0, [r0, #8]
   1fae8:	ldr	r2, [sp]
   1faec:	str	r0, [r2]
   1faf0:	ldr	r0, [sp]
   1faf4:	ldr	r0, [r0]
   1faf8:	cmp	r0, r1
   1fafc:	bne	1fb04 <rb_dictionary_foreach_start+0x4c>
   1fb00:	b	1fb20 <rb_dictionary_foreach_start+0x68>
   1fb04:	ldr	r0, [sp]
   1fb08:	ldr	r0, [r0]
   1fb0c:	ldr	r1, [sp]
   1fb10:	str	r0, [r1, #4]
   1fb14:	ldr	r0, [sp, #4]
   1fb18:	ldr	r1, [sp]
   1fb1c:	bl	50b0 <rb_dictionary_foreach_next@plt>
   1fb20:	mov	sp, fp
   1fb24:	pop	{fp, pc}

0001fb28 <rb_dictionary_foreach_next>:
   1fb28:	push	{fp, lr}
   1fb2c:	mov	fp, sp
   1fb30:	sub	sp, sp, #8
   1fb34:	str	r0, [sp, #4]
   1fb38:	str	r1, [sp]
   1fb3c:	ldr	r0, [sp]
   1fb40:	ldr	r0, [r0]
   1fb44:	movw	r1, #0
   1fb48:	cmp	r0, r1
   1fb4c:	bne	1fb64 <rb_dictionary_foreach_next+0x3c>
   1fb50:	ldr	r0, [pc, #80]	; 1fba8 <rb_dictionary_foreach_next+0x80>
   1fb54:	add	r0, pc, r0
   1fb58:	ldr	r1, [sp, #4]
   1fb5c:	bl	52e4 <rb_lib_log@plt>
   1fb60:	b	1fba0 <rb_dictionary_foreach_next+0x78>
   1fb64:	ldr	r0, [sp]
   1fb68:	ldr	r0, [r0, #4]
   1fb6c:	ldr	r1, [sp]
   1fb70:	str	r0, [r1]
   1fb74:	ldr	r0, [sp]
   1fb78:	ldr	r0, [r0, #4]
   1fb7c:	movw	r1, #0
   1fb80:	cmp	r0, r1
   1fb84:	bne	1fb8c <rb_dictionary_foreach_next+0x64>
   1fb88:	b	1fba0 <rb_dictionary_foreach_next+0x78>
   1fb8c:	ldr	r0, [sp]
   1fb90:	ldr	r0, [r0, #4]
   1fb94:	ldr	r0, [r0, #12]
   1fb98:	ldr	r1, [sp]
   1fb9c:	str	r0, [r1, #4]
   1fba0:	mov	sp, fp
   1fba4:	pop	{fp, pc}
   1fba8:	.word	0x00004113

0001fbac <rb_dictionary_foreach_cur>:
   1fbac:	sub	sp, sp, #12
   1fbb0:	str	r0, [sp, #8]
   1fbb4:	str	r1, [sp, #4]
   1fbb8:	ldr	r0, [sp, #4]
   1fbbc:	ldr	r0, [r0]
   1fbc0:	movw	r1, #0
   1fbc4:	cmp	r0, r1
   1fbc8:	beq	1fbe0 <rb_dictionary_foreach_cur+0x34>
   1fbcc:	ldr	r0, [sp, #4]
   1fbd0:	ldr	r0, [r0]
   1fbd4:	ldr	r0, [r0, #16]
   1fbd8:	str	r0, [sp]
   1fbdc:	b	1fbec <rb_dictionary_foreach_cur+0x40>
   1fbe0:	movw	r0, #0
   1fbe4:	str	r0, [sp]
   1fbe8:	b	1fbec <rb_dictionary_foreach_cur+0x40>
   1fbec:	ldr	r0, [sp]
   1fbf0:	add	sp, sp, #12
   1fbf4:	bx	lr

0001fbf8 <rb_dictionary_retune>:
   1fbf8:	push	{fp, lr}
   1fbfc:	mov	fp, sp
   1fc00:	sub	sp, sp, #72	; 0x48
   1fc04:	str	r0, [fp, #-4]
   1fc08:	str	r1, [fp, #-8]
   1fc0c:	ldr	r0, [fp, #-4]
   1fc10:	ldr	r0, [r0, #4]
   1fc14:	movw	r1, #0
   1fc18:	cmp	r0, r1
   1fc1c:	bne	1fc24 <rb_dictionary_retune+0x2c>
   1fc20:	b	1fe50 <rb_dictionary_retune+0x258>
   1fc24:	movw	r0, #0
   1fc28:	str	r0, [sp, #40]	; 0x28
   1fc2c:	str	r0, [sp, #36]	; 0x24
   1fc30:	add	r0, sp, #36	; 0x24
   1fc34:	str	r0, [sp, #24]
   1fc38:	str	r0, [sp, #28]
   1fc3c:	ldr	r0, [fp, #-4]
   1fc40:	ldr	r0, [r0, #4]
   1fc44:	str	r0, [sp, #20]
   1fc48:	ldr	r0, [fp, #-4]
   1fc4c:	ldr	r0, [r0]
   1fc50:	ldr	r1, [fp, #-8]
   1fc54:	ldr	r2, [sp, #20]
   1fc58:	ldr	r2, [r2, #20]
   1fc5c:	str	r0, [sp, #12]
   1fc60:	mov	r0, r1
   1fc64:	mov	r1, r2
   1fc68:	ldr	r2, [sp, #12]
   1fc6c:	blx	r2
   1fc70:	str	r0, [sp, #16]
   1fc74:	cmp	r0, #0
   1fc78:	bne	1fc80 <rb_dictionary_retune+0x88>
   1fc7c:	b	1fe0c <rb_dictionary_retune+0x214>
   1fc80:	ldr	r0, [sp, #16]
   1fc84:	cmp	r0, #0
   1fc88:	bge	1fd4c <rb_dictionary_retune+0x154>
   1fc8c:	ldr	r0, [sp, #20]
   1fc90:	ldr	r0, [r0]
   1fc94:	movw	r1, #0
   1fc98:	cmp	r0, r1
   1fc9c:	bne	1fca4 <rb_dictionary_retune+0xac>
   1fca0:	b	1fe0c <rb_dictionary_retune+0x214>
   1fca4:	ldr	r0, [fp, #-4]
   1fca8:	ldr	r0, [r0]
   1fcac:	ldr	r1, [fp, #-8]
   1fcb0:	ldr	r2, [sp, #20]
   1fcb4:	ldr	r2, [r2]
   1fcb8:	ldr	r2, [r2, #20]
   1fcbc:	str	r0, [sp, #8]
   1fcc0:	mov	r0, r1
   1fcc4:	mov	r1, r2
   1fcc8:	ldr	r2, [sp, #8]
   1fccc:	blx	r2
   1fcd0:	str	r0, [sp, #16]
   1fcd4:	cmp	r0, #0
   1fcd8:	bge	1fd28 <rb_dictionary_retune+0x130>
   1fcdc:	ldr	r0, [sp, #20]
   1fce0:	ldr	r0, [r0]
   1fce4:	str	r0, [sp, #32]
   1fce8:	ldr	r0, [sp, #32]
   1fcec:	ldr	r0, [r0, #4]
   1fcf0:	ldr	r1, [sp, #20]
   1fcf4:	str	r0, [r1]
   1fcf8:	ldr	r0, [sp, #20]
   1fcfc:	ldr	r1, [sp, #32]
   1fd00:	str	r0, [r1, #4]
   1fd04:	ldr	r0, [sp, #32]
   1fd08:	str	r0, [sp, #20]
   1fd0c:	ldr	r0, [sp, #20]
   1fd10:	ldr	r0, [r0]
   1fd14:	movw	r1, #0
   1fd18:	cmp	r0, r1
   1fd1c:	bne	1fd24 <rb_dictionary_retune+0x12c>
   1fd20:	b	1fe0c <rb_dictionary_retune+0x214>
   1fd24:	b	1fd28 <rb_dictionary_retune+0x130>
   1fd28:	ldr	r0, [sp, #20]
   1fd2c:	ldr	r1, [sp, #24]
   1fd30:	str	r0, [r1]
   1fd34:	ldr	r0, [sp, #20]
   1fd38:	str	r0, [sp, #24]
   1fd3c:	ldr	r0, [sp, #20]
   1fd40:	ldr	r0, [r0]
   1fd44:	str	r0, [sp, #20]
   1fd48:	b	1fe08 <rb_dictionary_retune+0x210>
   1fd4c:	ldr	r0, [sp, #20]
   1fd50:	ldr	r0, [r0, #4]
   1fd54:	movw	r1, #0
   1fd58:	cmp	r0, r1
   1fd5c:	bne	1fd64 <rb_dictionary_retune+0x16c>
   1fd60:	b	1fe0c <rb_dictionary_retune+0x214>
   1fd64:	ldr	r0, [fp, #-4]
   1fd68:	ldr	r0, [r0]
   1fd6c:	ldr	r1, [fp, #-8]
   1fd70:	ldr	r2, [sp, #20]
   1fd74:	ldr	r2, [r2, #4]
   1fd78:	ldr	r2, [r2, #20]
   1fd7c:	str	r0, [sp, #4]
   1fd80:	mov	r0, r1
   1fd84:	mov	r1, r2
   1fd88:	ldr	r2, [sp, #4]
   1fd8c:	blx	r2
   1fd90:	str	r0, [sp, #16]
   1fd94:	cmp	r0, #0
   1fd98:	ble	1fde8 <rb_dictionary_retune+0x1f0>
   1fd9c:	ldr	r0, [sp, #20]
   1fda0:	ldr	r0, [r0, #4]
   1fda4:	str	r0, [sp, #32]
   1fda8:	ldr	r0, [sp, #32]
   1fdac:	ldr	r0, [r0]
   1fdb0:	ldr	r1, [sp, #20]
   1fdb4:	str	r0, [r1, #4]
   1fdb8:	ldr	r0, [sp, #20]
   1fdbc:	ldr	r1, [sp, #32]
   1fdc0:	str	r0, [r1]
   1fdc4:	ldr	r0, [sp, #32]
   1fdc8:	str	r0, [sp, #20]
   1fdcc:	ldr	r0, [sp, #20]
   1fdd0:	ldr	r0, [r0, #4]
   1fdd4:	movw	r1, #0
   1fdd8:	cmp	r0, r1
   1fddc:	bne	1fde4 <rb_dictionary_retune+0x1ec>
   1fde0:	b	1fe0c <rb_dictionary_retune+0x214>
   1fde4:	b	1fde8 <rb_dictionary_retune+0x1f0>
   1fde8:	ldr	r0, [sp, #20]
   1fdec:	ldr	r1, [sp, #28]
   1fdf0:	str	r0, [r1, #4]
   1fdf4:	ldr	r0, [sp, #20]
   1fdf8:	str	r0, [sp, #28]
   1fdfc:	ldr	r0, [sp, #20]
   1fe00:	ldr	r0, [r0, #4]
   1fe04:	str	r0, [sp, #20]
   1fe08:	b	1fc48 <rb_dictionary_retune+0x50>
   1fe0c:	ldr	r0, [sp, #20]
   1fe10:	ldr	r0, [r0]
   1fe14:	ldr	r1, [sp, #28]
   1fe18:	str	r0, [r1, #4]
   1fe1c:	ldr	r0, [sp, #20]
   1fe20:	ldr	r0, [r0, #4]
   1fe24:	ldr	r1, [sp, #24]
   1fe28:	str	r0, [r1]
   1fe2c:	ldr	r0, [sp, #40]	; 0x28
   1fe30:	ldr	r1, [sp, #20]
   1fe34:	str	r0, [r1]
   1fe38:	ldr	r0, [sp, #36]	; 0x24
   1fe3c:	ldr	r1, [sp, #20]
   1fe40:	str	r0, [r1, #4]
   1fe44:	ldr	r0, [sp, #20]
   1fe48:	ldr	r1, [fp, #-4]
   1fe4c:	str	r0, [r1, #4]
   1fe50:	mov	sp, fp
   1fe54:	pop	{fp, pc}

0001fe58 <rb_dictionary_add>:
   1fe58:	push	{fp, lr}
   1fe5c:	mov	fp, sp
   1fe60:	sub	sp, sp, #16
   1fe64:	str	r0, [fp, #-4]
   1fe68:	str	r1, [sp, #8]
   1fe6c:	str	r2, [sp, #4]
   1fe70:	movw	r0, #28
   1fe74:	bl	1f3a0 <rb_malloc>
   1fe78:	str	r0, [sp]
   1fe7c:	ldr	r0, [sp, #8]
   1fe80:	ldr	r1, [sp]
   1fe84:	str	r0, [r1, #20]
   1fe88:	ldr	r0, [sp, #4]
   1fe8c:	ldr	r1, [sp]
   1fe90:	str	r0, [r1, #16]
   1fe94:	ldr	r0, [fp, #-4]
   1fe98:	ldr	r1, [sp]
   1fe9c:	bl	1fea8 <rb_dictionary_link>
   1fea0:	mov	sp, fp
   1fea4:	pop	{fp, pc}

0001fea8 <rb_dictionary_link>:
   1fea8:	push	{fp, lr}
   1feac:	mov	fp, sp
   1feb0:	sub	sp, sp, #16
   1feb4:	str	r0, [fp, #-4]
   1feb8:	str	r1, [sp, #8]
   1febc:	ldr	r0, [fp, #-4]
   1fec0:	ldrb	r1, [r0, #24]
   1fec4:	bic	r1, r1, #1
   1fec8:	movw	r2, #1
   1fecc:	orr	r1, r1, r2
   1fed0:	strb	r1, [r0, #24]
   1fed4:	ldr	r0, [fp, #-4]
   1fed8:	ldr	r1, [r0, #16]
   1fedc:	add	r1, r1, #1
   1fee0:	str	r1, [r0, #16]
   1fee4:	ldr	r0, [fp, #-4]
   1fee8:	ldr	r0, [r0, #4]
   1feec:	movw	r1, #0
   1fef0:	cmp	r0, r1
   1fef4:	bne	1ff3c <rb_dictionary_link+0x94>
   1fef8:	ldr	r0, [sp, #8]
   1fefc:	movw	r1, #0
   1ff00:	str	r1, [r0, #4]
   1ff04:	ldr	r0, [sp, #8]
   1ff08:	str	r1, [r0]
   1ff0c:	ldr	r0, [sp, #8]
   1ff10:	str	r1, [r0, #8]
   1ff14:	ldr	r0, [sp, #8]
   1ff18:	str	r1, [r0, #12]
   1ff1c:	ldr	r0, [sp, #8]
   1ff20:	ldr	r1, [fp, #-4]
   1ff24:	str	r0, [r1, #4]
   1ff28:	ldr	r1, [fp, #-4]
   1ff2c:	str	r0, [r1, #12]
   1ff30:	ldr	r1, [fp, #-4]
   1ff34:	str	r0, [r1, #8]
   1ff38:	b	2014c <rb_dictionary_link+0x2a4>
   1ff3c:	ldr	r0, [fp, #-4]
   1ff40:	ldr	r1, [sp, #8]
   1ff44:	ldr	r1, [r1, #20]
   1ff48:	bl	1fbf8 <rb_dictionary_retune>
   1ff4c:	ldr	r0, [fp, #-4]
   1ff50:	ldr	r0, [r0]
   1ff54:	ldr	r1, [sp, #8]
   1ff58:	ldr	r1, [r1, #20]
   1ff5c:	ldr	lr, [fp, #-4]
   1ff60:	ldr	lr, [lr, #4]
   1ff64:	ldr	lr, [lr, #20]
   1ff68:	str	r0, [sp]
   1ff6c:	mov	r0, r1
   1ff70:	mov	r1, lr
   1ff74:	ldr	lr, [sp]
   1ff78:	blx	lr
   1ff7c:	str	r0, [sp, #4]
   1ff80:	cmp	r0, #0
   1ff84:	bge	20038 <rb_dictionary_link+0x190>
   1ff88:	ldr	r0, [fp, #-4]
   1ff8c:	ldr	r0, [r0, #4]
   1ff90:	ldr	r0, [r0]
   1ff94:	ldr	r1, [sp, #8]
   1ff98:	str	r0, [r1]
   1ff9c:	ldr	r0, [fp, #-4]
   1ffa0:	ldr	r0, [r0, #4]
   1ffa4:	ldr	r1, [sp, #8]
   1ffa8:	str	r0, [r1, #4]
   1ffac:	ldr	r0, [fp, #-4]
   1ffb0:	ldr	r0, [r0, #4]
   1ffb4:	movw	r1, #0
   1ffb8:	str	r1, [r0]
   1ffbc:	ldr	r0, [fp, #-4]
   1ffc0:	ldr	r0, [r0, #4]
   1ffc4:	ldr	r0, [r0, #8]
   1ffc8:	cmp	r0, r1
   1ffcc:	beq	1ffe8 <rb_dictionary_link+0x140>
   1ffd0:	ldr	r0, [sp, #8]
   1ffd4:	ldr	r1, [fp, #-4]
   1ffd8:	ldr	r1, [r1, #4]
   1ffdc:	ldr	r1, [r1, #8]
   1ffe0:	str	r0, [r1, #12]
   1ffe4:	b	1fff4 <rb_dictionary_link+0x14c>
   1ffe8:	ldr	r0, [sp, #8]
   1ffec:	ldr	r1, [fp, #-4]
   1fff0:	str	r0, [r1, #8]
   1fff4:	ldr	r0, [fp, #-4]
   1fff8:	ldr	r0, [r0, #4]
   1fffc:	ldr	r0, [r0, #8]
   20000:	ldr	r1, [sp, #8]
   20004:	str	r0, [r1, #8]
   20008:	ldr	r0, [fp, #-4]
   2000c:	ldr	r0, [r0, #4]
   20010:	ldr	r1, [sp, #8]
   20014:	str	r0, [r1, #12]
   20018:	ldr	r0, [sp, #8]
   2001c:	ldr	r1, [fp, #-4]
   20020:	ldr	r1, [r1, #4]
   20024:	str	r0, [r1, #8]
   20028:	ldr	r0, [sp, #8]
   2002c:	ldr	r1, [fp, #-4]
   20030:	str	r0, [r1, #4]
   20034:	b	20148 <rb_dictionary_link+0x2a0>
   20038:	ldr	r0, [sp, #4]
   2003c:	cmp	r0, #0
   20040:	ble	200f4 <rb_dictionary_link+0x24c>
   20044:	ldr	r0, [fp, #-4]
   20048:	ldr	r0, [r0, #4]
   2004c:	ldr	r0, [r0, #4]
   20050:	ldr	r1, [sp, #8]
   20054:	str	r0, [r1, #4]
   20058:	ldr	r0, [fp, #-4]
   2005c:	ldr	r0, [r0, #4]
   20060:	ldr	r1, [sp, #8]
   20064:	str	r0, [r1]
   20068:	ldr	r0, [fp, #-4]
   2006c:	ldr	r0, [r0, #4]
   20070:	movw	r1, #0
   20074:	str	r1, [r0, #4]
   20078:	ldr	r0, [fp, #-4]
   2007c:	ldr	r0, [r0, #4]
   20080:	ldr	r0, [r0, #12]
   20084:	cmp	r0, r1
   20088:	beq	200a4 <rb_dictionary_link+0x1fc>
   2008c:	ldr	r0, [sp, #8]
   20090:	ldr	r1, [fp, #-4]
   20094:	ldr	r1, [r1, #4]
   20098:	ldr	r1, [r1, #12]
   2009c:	str	r0, [r1, #8]
   200a0:	b	200b0 <rb_dictionary_link+0x208>
   200a4:	ldr	r0, [sp, #8]
   200a8:	ldr	r1, [fp, #-4]
   200ac:	str	r0, [r1, #12]
   200b0:	ldr	r0, [fp, #-4]
   200b4:	ldr	r0, [r0, #4]
   200b8:	ldr	r0, [r0, #12]
   200bc:	ldr	r1, [sp, #8]
   200c0:	str	r0, [r1, #12]
   200c4:	ldr	r0, [fp, #-4]
   200c8:	ldr	r0, [r0, #4]
   200cc:	ldr	r1, [sp, #8]
   200d0:	str	r0, [r1, #8]
   200d4:	ldr	r0, [sp, #8]
   200d8:	ldr	r1, [fp, #-4]
   200dc:	ldr	r1, [r1, #4]
   200e0:	str	r0, [r1, #12]
   200e4:	ldr	r0, [sp, #8]
   200e8:	ldr	r1, [fp, #-4]
   200ec:	str	r0, [r1, #4]
   200f0:	b	20144 <rb_dictionary_link+0x29c>
   200f4:	ldr	r0, [sp, #8]
   200f8:	ldr	r0, [r0, #20]
   200fc:	ldr	r1, [fp, #-4]
   20100:	ldr	r1, [r1, #4]
   20104:	str	r0, [r1, #20]
   20108:	ldr	r0, [sp, #8]
   2010c:	ldr	r0, [r0, #16]
   20110:	ldr	r1, [fp, #-4]
   20114:	ldr	r1, [r1, #4]
   20118:	str	r0, [r1, #16]
   2011c:	ldr	r0, [fp, #-4]
   20120:	ldr	r1, [r0, #16]
   20124:	mvn	r2, #0
   20128:	add	r1, r1, r2
   2012c:	str	r1, [r0, #16]
   20130:	ldr	r0, [sp, #8]
   20134:	bl	1f7c0 <rb_free>
   20138:	ldr	r0, [fp, #-4]
   2013c:	ldr	r0, [r0, #4]
   20140:	str	r0, [sp, #8]
   20144:	b	20148 <rb_dictionary_link+0x2a0>
   20148:	b	2014c <rb_dictionary_link+0x2a4>
   2014c:	ldr	r0, [sp, #8]
   20150:	mov	sp, fp
   20154:	pop	{fp, pc}

00020158 <rb_dictionary_delete>:
   20158:	push	{fp, lr}
   2015c:	mov	fp, sp
   20160:	sub	sp, sp, #24
   20164:	str	r0, [fp, #-8]
   20168:	str	r1, [sp, #12]
   2016c:	ldr	r0, [fp, #-8]
   20170:	ldr	r1, [sp, #12]
   20174:	bl	53f8 <rb_dictionary_find@plt>
   20178:	str	r0, [sp, #8]
   2017c:	ldr	r0, [sp, #8]
   20180:	movw	r1, #0
   20184:	cmp	r0, r1
   20188:	bne	20198 <rb_dictionary_delete+0x40>
   2018c:	movw	r0, #0
   20190:	str	r0, [fp, #-4]
   20194:	b	201bc <rb_dictionary_delete+0x64>
   20198:	ldr	r0, [sp, #8]
   2019c:	ldr	r0, [r0, #16]
   201a0:	str	r0, [sp, #4]
   201a4:	ldr	r0, [fp, #-8]
   201a8:	bl	201c8 <rb_dictionary_unlink_root>
   201ac:	ldr	r0, [sp, #8]
   201b0:	bl	1f7c0 <rb_free>
   201b4:	ldr	r0, [sp, #4]
   201b8:	str	r0, [fp, #-4]
   201bc:	ldr	r0, [fp, #-4]
   201c0:	mov	sp, fp
   201c4:	pop	{fp, pc}

000201c8 <rb_dictionary_unlink_root>:
   201c8:	sub	sp, sp, #20
   201cc:	str	r0, [sp, #16]
   201d0:	ldr	r0, [sp, #16]
   201d4:	ldrb	r1, [r0, #24]
   201d8:	bic	r1, r1, #1
   201dc:	movw	r2, #1
   201e0:	orr	r1, r1, r2
   201e4:	strb	r1, [r0, #24]
   201e8:	ldr	r0, [sp, #16]
   201ec:	ldr	r0, [r0, #4]
   201f0:	str	r0, [sp, #12]
   201f4:	ldr	r0, [sp, #12]
   201f8:	movw	r1, #0
   201fc:	cmp	r0, r1
   20200:	bne	20208 <rb_dictionary_unlink_root+0x40>
   20204:	b	20404 <rb_dictionary_unlink_root+0x23c>
   20208:	ldr	r0, [sp, #16]
   2020c:	ldr	r0, [r0, #4]
   20210:	ldr	r0, [r0]
   20214:	movw	r1, #0
   20218:	cmp	r0, r1
   2021c:	bne	20238 <rb_dictionary_unlink_root+0x70>
   20220:	ldr	r0, [sp, #16]
   20224:	ldr	r0, [r0, #4]
   20228:	ldr	r0, [r0, #4]
   2022c:	ldr	r1, [sp, #16]
   20230:	str	r0, [r1, #4]
   20234:	b	20358 <rb_dictionary_unlink_root+0x190>
   20238:	ldr	r0, [sp, #16]
   2023c:	ldr	r0, [r0, #4]
   20240:	ldr	r0, [r0, #4]
   20244:	movw	r1, #0
   20248:	cmp	r0, r1
   2024c:	bne	20268 <rb_dictionary_unlink_root+0xa0>
   20250:	ldr	r0, [sp, #16]
   20254:	ldr	r0, [r0, #4]
   20258:	ldr	r0, [r0]
   2025c:	ldr	r1, [sp, #16]
   20260:	str	r0, [r1, #4]
   20264:	b	20354 <rb_dictionary_unlink_root+0x18c>
   20268:	ldr	r0, [sp, #12]
   2026c:	ldr	r0, [r0, #12]
   20270:	str	r0, [sp, #8]
   20274:	ldr	r0, [sp, #8]
   20278:	ldr	r1, [sp, #12]
   2027c:	ldr	r1, [r1, #4]
   20280:	cmp	r0, r1
   20284:	bne	202ac <rb_dictionary_unlink_root+0xe4>
   20288:	ldr	r0, [sp, #8]
   2028c:	ldr	r1, [sp, #16]
   20290:	str	r0, [r1, #4]
   20294:	ldr	r0, [sp, #12]
   20298:	ldr	r0, [r0]
   2029c:	ldr	r1, [sp, #16]
   202a0:	ldr	r1, [r1, #4]
   202a4:	str	r0, [r1]
   202a8:	b	20350 <rb_dictionary_unlink_root+0x188>
   202ac:	ldr	r0, [sp, #12]
   202b0:	ldr	r0, [r0, #4]
   202b4:	str	r0, [sp, #4]
   202b8:	ldr	r0, [sp, #4]
   202bc:	ldr	r0, [r0]
   202c0:	movw	r1, #0
   202c4:	cmp	r0, r1
   202c8:	movw	r0, #0
   202cc:	str	r0, [sp]
   202d0:	beq	202f0 <rb_dictionary_unlink_root+0x128>
   202d4:	ldr	r0, [sp, #4]
   202d8:	ldr	r0, [r0]
   202dc:	ldr	r1, [sp, #8]
   202e0:	cmp	r0, r1
   202e4:	movw	r0, #0
   202e8:	movne	r0, #1
   202ec:	str	r0, [sp]
   202f0:	ldr	r0, [sp]
   202f4:	tst	r0, #1
   202f8:	beq	2030c <rb_dictionary_unlink_root+0x144>
   202fc:	ldr	r0, [sp, #4]
   20300:	ldr	r0, [r0]
   20304:	str	r0, [sp, #4]
   20308:	b	202b8 <rb_dictionary_unlink_root+0xf0>
   2030c:	ldr	r0, [sp, #8]
   20310:	ldr	r0, [r0, #4]
   20314:	ldr	r1, [sp, #4]
   20318:	str	r0, [r1]
   2031c:	ldr	r0, [sp, #8]
   20320:	ldr	r1, [sp, #16]
   20324:	str	r0, [r1, #4]
   20328:	ldr	r0, [sp, #12]
   2032c:	ldr	r0, [r0]
   20330:	ldr	r1, [sp, #16]
   20334:	ldr	r1, [r1, #4]
   20338:	str	r0, [r1]
   2033c:	ldr	r0, [sp, #12]
   20340:	ldr	r0, [r0, #4]
   20344:	ldr	r1, [sp, #16]
   20348:	ldr	r1, [r1, #4]
   2034c:	str	r0, [r1, #4]
   20350:	b	20354 <rb_dictionary_unlink_root+0x18c>
   20354:	b	20358 <rb_dictionary_unlink_root+0x190>
   20358:	ldr	r0, [sp, #12]
   2035c:	ldr	r0, [r0, #8]
   20360:	movw	r1, #0
   20364:	cmp	r0, r1
   20368:	beq	20380 <rb_dictionary_unlink_root+0x1b8>
   2036c:	ldr	r0, [sp, #12]
   20370:	ldr	r0, [r0, #12]
   20374:	ldr	r1, [sp, #12]
   20378:	ldr	r1, [r1, #8]
   2037c:	str	r0, [r1, #12]
   20380:	ldr	r0, [sp, #16]
   20384:	ldr	r0, [r0, #8]
   20388:	ldr	r1, [sp, #12]
   2038c:	cmp	r0, r1
   20390:	bne	203a4 <rb_dictionary_unlink_root+0x1dc>
   20394:	ldr	r0, [sp, #12]
   20398:	ldr	r0, [r0, #12]
   2039c:	ldr	r1, [sp, #16]
   203a0:	str	r0, [r1, #8]
   203a4:	ldr	r0, [sp, #12]
   203a8:	ldr	r0, [r0, #12]
   203ac:	movw	r1, #0
   203b0:	cmp	r0, r1
   203b4:	beq	203cc <rb_dictionary_unlink_root+0x204>
   203b8:	ldr	r0, [sp, #12]
   203bc:	ldr	r0, [r0, #8]
   203c0:	ldr	r1, [sp, #12]
   203c4:	ldr	r1, [r1, #12]
   203c8:	str	r0, [r1, #8]
   203cc:	ldr	r0, [sp, #16]
   203d0:	ldr	r0, [r0, #12]
   203d4:	ldr	r1, [sp, #12]
   203d8:	cmp	r0, r1
   203dc:	bne	203f0 <rb_dictionary_unlink_root+0x228>
   203e0:	ldr	r0, [sp, #12]
   203e4:	ldr	r0, [r0, #8]
   203e8:	ldr	r1, [sp, #16]
   203ec:	str	r0, [r1, #12]
   203f0:	ldr	r0, [sp, #16]
   203f4:	ldr	r1, [r0, #16]
   203f8:	mvn	r2, #0
   203fc:	add	r1, r1, r2
   20400:	str	r1, [r0, #16]
   20404:	add	sp, sp, #20
   20408:	bx	lr

0002040c <rb_dictionary_retrieve>:
   2040c:	push	{fp, lr}
   20410:	mov	fp, sp
   20414:	sub	sp, sp, #16
   20418:	str	r0, [sp, #8]
   2041c:	str	r1, [sp, #4]
   20420:	ldr	r0, [sp, #8]
   20424:	ldr	r1, [sp, #4]
   20428:	bl	53f8 <rb_dictionary_find@plt>
   2042c:	str	r0, [sp]
   20430:	ldr	r0, [sp]
   20434:	movw	r1, #0
   20438:	cmp	r0, r1
   2043c:	beq	20450 <rb_dictionary_retrieve+0x44>
   20440:	ldr	r0, [sp]
   20444:	ldr	r0, [r0, #16]
   20448:	str	r0, [fp, #-4]
   2044c:	b	20458 <rb_dictionary_retrieve+0x4c>
   20450:	movw	r0, #0
   20454:	str	r0, [fp, #-4]
   20458:	ldr	r0, [fp, #-4]
   2045c:	mov	sp, fp
   20460:	pop	{fp, pc}

00020464 <rb_dictionary_size>:
   20464:	sub	sp, sp, #4
   20468:	str	r0, [sp]
   2046c:	ldr	r0, [sp]
   20470:	ldr	r0, [r0, #16]
   20474:	add	sp, sp, #4
   20478:	bx	lr

0002047c <rb_dictionary_stats>:
   2047c:	push	{r4, r5, r6, sl, fp, lr}
   20480:	add	fp, sp, #16
   20484:	sub	sp, sp, #328	; 0x148
   20488:	str	r0, [fp, #-20]	; 0xffffffec
   2048c:	str	r1, [fp, #-24]	; 0xffffffe8
   20490:	str	r2, [fp, #-28]	; 0xffffffe4
   20494:	ldr	r0, [fp, #-20]	; 0xffffffec
   20498:	ldr	r0, [r0, #16]
   2049c:	cmp	r0, #0
   204a0:	beq	20544 <rb_dictionary_stats+0xc8>
   204a4:	movw	r0, #0
   204a8:	str	r0, [sp, #52]	; 0x34
   204ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   204b0:	ldr	r1, [r1, #4]
   204b4:	str	r0, [sp, #48]	; 0x30
   204b8:	mov	r0, r1
   204bc:	ldr	r1, [sp, #48]	; 0x30
   204c0:	add	r2, sp, #52	; 0x34
   204c4:	bl	205dc <stats_recurse>
   204c8:	ldr	r1, [pc, #260]	; 205d4 <rb_dictionary_stats+0x158>
   204cc:	add	r2, pc, r1
   204d0:	ldr	r1, [pc, #256]	; 205d8 <rb_dictionary_stats+0x15c>
   204d4:	add	r1, pc, r1
   204d8:	add	lr, sp, #60	; 0x3c
   204dc:	str	r0, [sp, #56]	; 0x38
   204e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   204e4:	ldr	r3, [r0, #20]
   204e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   204ec:	ldr	r0, [r0, #16]
   204f0:	ldr	ip, [sp, #56]	; 0x38
   204f4:	ldr	r4, [sp, #56]	; 0x38
   204f8:	ldr	r5, [fp, #-20]	; 0xffffffec
   204fc:	ldr	r5, [r5, #16]
   20500:	udiv	r4, r4, r5
   20504:	ldr	r5, [sp, #52]	; 0x34
   20508:	str	r0, [sp, #44]	; 0x2c
   2050c:	mov	r0, lr
   20510:	movw	lr, #256	; 0x100
   20514:	str	r1, [sp, #40]	; 0x28
   20518:	mov	r1, lr
   2051c:	ldr	lr, [sp, #40]	; 0x28
   20520:	str	lr, [sp]
   20524:	ldr	r6, [sp, #44]	; 0x2c
   20528:	str	r6, [sp, #4]
   2052c:	str	ip, [sp, #8]
   20530:	str	r4, [sp, #12]
   20534:	str	r5, [sp, #16]
   20538:	bl	5584 <snprintf@plt>
   2053c:	str	r0, [sp, #36]	; 0x24
   20540:	b	205a4 <rb_dictionary_stats+0x128>
   20544:	ldr	r0, [pc, #124]	; 205c8 <rb_dictionary_stats+0x14c>
   20548:	add	r2, pc, r0
   2054c:	ldr	r0, [pc, #120]	; 205cc <rb_dictionary_stats+0x150>
   20550:	add	r0, pc, r0
   20554:	ldr	r1, [pc, #116]	; 205d0 <rb_dictionary_stats+0x154>
   20558:	add	r1, pc, r1
   2055c:	add	r3, sp, #60	; 0x3c
   20560:	ldr	ip, [fp, #-20]	; 0xffffffec
   20564:	ldr	ip, [ip, #20]
   20568:	str	r0, [sp, #32]
   2056c:	mov	r0, r3
   20570:	movw	r3, #256	; 0x100
   20574:	str	r1, [sp, #28]
   20578:	mov	r1, r3
   2057c:	mov	r3, ip
   20580:	ldr	ip, [sp, #32]
   20584:	str	ip, [sp]
   20588:	ldr	lr, [sp, #28]
   2058c:	str	lr, [sp, #4]
   20590:	str	lr, [sp, #8]
   20594:	str	lr, [sp, #12]
   20598:	str	lr, [sp, #16]
   2059c:	bl	5584 <snprintf@plt>
   205a0:	str	r0, [sp, #24]
   205a4:	add	r0, sp, #60	; 0x3c
   205a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   205b0:	str	r1, [sp, #20]
   205b4:	mov	r1, r2
   205b8:	ldr	r2, [sp, #20]
   205bc:	blx	r2
   205c0:	sub	sp, fp, #16
   205c4:	pop	{r4, r5, r6, sl, fp, pc}
   205c8:	.word	0x00003799
   205cc:	.word	0x0000378c
   205d0:	.word	0x0000295a
   205d4:	.word	0x000037ec
   205d8:	.word	0x00003808

000205dc <stats_recurse>:
   205dc:	push	{fp, lr}
   205e0:	mov	fp, sp
   205e4:	sub	sp, sp, #16
   205e8:	str	r0, [fp, #-4]
   205ec:	str	r1, [sp, #8]
   205f0:	str	r2, [sp, #4]
   205f4:	ldr	r0, [sp, #8]
   205f8:	ldr	r1, [sp, #4]
   205fc:	ldr	r1, [r1]
   20600:	cmp	r0, r1
   20604:	ble	20614 <stats_recurse+0x38>
   20608:	ldr	r0, [sp, #8]
   2060c:	ldr	r1, [sp, #4]
   20610:	str	r0, [r1]
   20614:	ldr	r0, [sp, #8]
   20618:	str	r0, [sp]
   2061c:	ldr	r0, [fp, #-4]
   20620:	movw	r1, #0
   20624:	cmp	r0, r1
   20628:	beq	20664 <stats_recurse+0x88>
   2062c:	ldr	r0, [fp, #-4]
   20630:	ldr	r0, [r0]
   20634:	movw	r1, #0
   20638:	cmp	r0, r1
   2063c:	beq	20664 <stats_recurse+0x88>
   20640:	ldr	r0, [fp, #-4]
   20644:	ldr	r0, [r0]
   20648:	ldr	r1, [sp, #8]
   2064c:	add	r1, r1, #1
   20650:	ldr	r2, [sp, #4]
   20654:	bl	205dc <stats_recurse>
   20658:	ldr	r1, [sp]
   2065c:	add	r0, r1, r0
   20660:	str	r0, [sp]
   20664:	ldr	r0, [fp, #-4]
   20668:	movw	r1, #0
   2066c:	cmp	r0, r1
   20670:	beq	206ac <stats_recurse+0xd0>
   20674:	ldr	r0, [fp, #-4]
   20678:	ldr	r0, [r0, #4]
   2067c:	movw	r1, #0
   20680:	cmp	r0, r1
   20684:	beq	206ac <stats_recurse+0xd0>
   20688:	ldr	r0, [fp, #-4]
   2068c:	ldr	r0, [r0, #4]
   20690:	ldr	r1, [sp, #8]
   20694:	add	r1, r1, #1
   20698:	ldr	r2, [sp, #4]
   2069c:	bl	205dc <stats_recurse>
   206a0:	ldr	r1, [sp]
   206a4:	add	r0, r1, r0
   206a8:	str	r0, [sp]
   206ac:	ldr	r0, [sp]
   206b0:	mov	sp, fp
   206b4:	pop	{fp, pc}

000206b8 <rb_dictionary_stats_walk>:
   206b8:	push	{fp, lr}
   206bc:	mov	fp, sp
   206c0:	sub	sp, sp, #16
   206c4:	ldr	r2, [pc, #76]	; 20718 <rb_dictionary_stats_walk+0x60>
   206c8:	add	r2, pc, r2
   206cc:	str	r0, [fp, #-4]
   206d0:	str	r1, [sp, #8]
   206d4:	ldr	r0, [r2]
   206d8:	str	r0, [sp, #4]
   206dc:	ldr	r0, [sp, #4]
   206e0:	movw	r1, #0
   206e4:	cmp	r0, r1
   206e8:	beq	20710 <rb_dictionary_stats_walk+0x58>
   206ec:	ldr	r0, [sp, #4]
   206f0:	ldr	r0, [r0]
   206f4:	ldr	r1, [fp, #-4]
   206f8:	ldr	r2, [sp, #8]
   206fc:	bl	5368 <rb_dictionary_stats@plt>
   20700:	ldr	r0, [sp, #4]
   20704:	ldr	r0, [r0, #8]
   20708:	str	r0, [sp, #4]
   2070c:	b	206dc <rb_dictionary_stats_walk+0x24>
   20710:	mov	sp, fp
   20714:	pop	{fp, pc}
   20718:	.word	0x00032d34

0002071c <rb_radixtree_create>:
   2071c:	push	{fp, lr}
   20720:	mov	fp, sp
   20724:	sub	sp, sp, #16
   20728:	str	r0, [fp, #-4]
   2072c:	str	r1, [sp, #8]
   20730:	movw	r0, #28
   20734:	bl	2078c <rb_malloc>
   20738:	str	r0, [sp, #4]
   2073c:	ldr	r0, [sp, #8]
   20740:	ldr	r1, [sp, #4]
   20744:	str	r0, [r1]
   20748:	ldr	r0, [fp, #-4]
   2074c:	bl	207e4 <rb_strdup>
   20750:	ldr	r1, [pc, #48]	; 20788 <rb_radixtree_create+0x6c>
   20754:	ldr	r2, [pc, r1]
   20758:	ldr	r1, [sp, #4]
   2075c:	str	r0, [r1, #12]
   20760:	ldr	r0, [sp, #4]
   20764:	movw	r1, #0
   20768:	str	r1, [r0, #4]
   2076c:	ldr	r0, [sp, #4]
   20770:	ldr	r1, [sp, #4]
   20774:	add	r1, r1, #16
   20778:	bl	20854 <rb_dlinkAdd>
   2077c:	ldr	r0, [sp, #4]
   20780:	mov	sp, fp
   20784:	pop	{fp, pc}
   20788:	.word	0x00014ca0

0002078c <rb_malloc>:
   2078c:	push	{fp, lr}
   20790:	mov	fp, sp
   20794:	sub	sp, sp, #8
   20798:	str	r0, [sp, #4]
   2079c:	ldr	r1, [sp, #4]
   207a0:	movw	r0, #1
   207a4:	bl	4fb4 <calloc@plt>
   207a8:	str	r0, [sp]
   207ac:	ldr	r0, [sp]
   207b0:	movw	r1, #0
   207b4:	cmp	r0, r1
   207b8:	movw	r0, #0
   207bc:	moveq	r0, #1
   207c0:	mvn	r1, #0
   207c4:	eor	r0, r0, r1
   207c8:	eor	r0, r0, r1
   207cc:	tst	r0, #1
   207d0:	beq	207d8 <rb_malloc+0x4c>
   207d4:	bl	5350 <rb_outofmemory@plt>
   207d8:	ldr	r0, [sp]
   207dc:	mov	sp, fp
   207e0:	pop	{fp, pc}

000207e4 <rb_strdup>:
   207e4:	push	{fp, lr}
   207e8:	mov	fp, sp
   207ec:	sub	sp, sp, #16
   207f0:	str	r0, [fp, #-4]
   207f4:	ldr	r0, [fp, #-4]
   207f8:	bl	51b8 <strlen@plt>
   207fc:	add	r0, r0, #1
   20800:	bl	5374 <malloc@plt>
   20804:	str	r0, [sp, #8]
   20808:	ldr	r0, [sp, #8]
   2080c:	movw	lr, #0
   20810:	cmp	r0, lr
   20814:	movw	r0, #0
   20818:	moveq	r0, #1
   2081c:	mvn	lr, #0
   20820:	eor	r0, r0, lr
   20824:	eor	r0, r0, lr
   20828:	tst	r0, #1
   2082c:	beq	20834 <rb_strdup+0x50>
   20830:	bl	5350 <rb_outofmemory@plt>
   20834:	ldr	r0, [sp, #8]
   20838:	ldr	r1, [fp, #-4]
   2083c:	bl	5254 <strcpy@plt>
   20840:	ldr	r1, [sp, #8]
   20844:	str	r0, [sp, #4]
   20848:	mov	r0, r1
   2084c:	mov	sp, fp
   20850:	pop	{fp, pc}

00020854 <rb_dlinkAdd>:
   20854:	sub	sp, sp, #12
   20858:	str	r0, [sp, #8]
   2085c:	str	r1, [sp, #4]
   20860:	str	r2, [sp]
   20864:	ldr	r0, [sp, #8]
   20868:	ldr	r1, [sp, #4]
   2086c:	str	r0, [r1]
   20870:	ldr	r0, [sp, #4]
   20874:	movw	r1, #0
   20878:	str	r1, [r0, #4]
   2087c:	ldr	r0, [sp]
   20880:	ldr	r0, [r0]
   20884:	ldr	r2, [sp, #4]
   20888:	str	r0, [r2, #8]
   2088c:	ldr	r0, [sp]
   20890:	ldr	r0, [r0]
   20894:	cmp	r0, r1
   20898:	beq	208b0 <rb_dlinkAdd+0x5c>
   2089c:	ldr	r0, [sp, #4]
   208a0:	ldr	r1, [sp]
   208a4:	ldr	r1, [r1]
   208a8:	str	r0, [r1, #4]
   208ac:	b	208d4 <rb_dlinkAdd+0x80>
   208b0:	ldr	r0, [sp]
   208b4:	ldr	r0, [r0, #4]
   208b8:	movw	r1, #0
   208bc:	cmp	r0, r1
   208c0:	bne	208d0 <rb_dlinkAdd+0x7c>
   208c4:	ldr	r0, [sp, #4]
   208c8:	ldr	r1, [sp]
   208cc:	str	r0, [r1, #4]
   208d0:	b	208d4 <rb_dlinkAdd+0x80>
   208d4:	ldr	r0, [sp, #4]
   208d8:	ldr	r1, [sp]
   208dc:	str	r0, [r1]
   208e0:	ldr	r0, [sp]
   208e4:	ldr	r1, [r0, #8]
   208e8:	add	r1, r1, #1
   208ec:	str	r1, [r0, #8]
   208f0:	add	sp, sp, #12
   208f4:	bx	lr

000208f8 <rb_radixtree_destroy>:
   208f8:	push	{fp, lr}
   208fc:	mov	fp, sp
   20900:	sub	sp, sp, #72	; 0x48
   20904:	str	r0, [fp, #-4]
   20908:	str	r1, [fp, #-8]
   2090c:	str	r2, [fp, #-12]
   20910:	ldr	r0, [fp, #-4]
   20914:	add	r1, sp, #20
   20918:	bl	4dc8 <rb_radixtree_foreach_start@plt>
   2091c:	ldr	r0, [fp, #-4]
   20920:	add	r1, sp, #20
   20924:	bl	517c <rb_radixtree_foreach_cur@plt>
   20928:	str	r0, [sp, #12]
   2092c:	movw	r1, #0
   20930:	cmp	r0, r1
   20934:	beq	209a4 <rb_radixtree_destroy+0xac>
   20938:	ldr	r0, [sp, #28]
   2093c:	str	r0, [sp, #16]
   20940:	ldr	r0, [fp, #-8]
   20944:	movw	r1, #0
   20948:	cmp	r0, r1
   2094c:	beq	20980 <rb_radixtree_destroy+0x88>
   20950:	ldr	r0, [fp, #-8]
   20954:	ldr	r1, [sp, #16]
   20958:	ldr	r1, [r1, #8]
   2095c:	ldr	r2, [sp, #16]
   20960:	ldr	r2, [r2, #4]
   20964:	ldr	r3, [fp, #-12]
   20968:	str	r0, [sp, #8]
   2096c:	mov	r0, r1
   20970:	mov	r1, r2
   20974:	mov	r2, r3
   20978:	ldr	r3, [sp, #8]
   2097c:	blx	r3
   20980:	ldr	r0, [fp, #-4]
   20984:	ldr	r1, [sp, #16]
   20988:	ldr	r1, [r1, #8]
   2098c:	bl	5698 <rb_radixtree_delete@plt>
   20990:	str	r0, [sp, #4]
   20994:	ldr	r0, [fp, #-4]
   20998:	add	r1, sp, #20
   2099c:	bl	4e04 <rb_radixtree_foreach_next@plt>
   209a0:	b	2091c <rb_radixtree_destroy+0x24>
   209a4:	ldr	r0, [pc, #40]	; 209d4 <rb_radixtree_destroy+0xdc>
   209a8:	ldr	r1, [pc, r0]
   209ac:	ldr	r0, [fp, #-4]
   209b0:	add	r0, r0, #16
   209b4:	bl	20d34 <rb_dlinkDelete>
   209b8:	ldr	r0, [fp, #-4]
   209bc:	ldr	r0, [r0, #12]
   209c0:	bl	20de8 <rb_free>
   209c4:	ldr	r0, [fp, #-4]
   209c8:	bl	20de8 <rb_free>
   209cc:	mov	sp, fp
   209d0:	pop	{fp, pc}
   209d4:	.word	0x00014a4c

000209d8 <rb_radixtree_foreach_start>:
   209d8:	push	{fp, lr}
   209dc:	mov	fp, sp
   209e0:	sub	sp, sp, #8
   209e4:	str	r0, [sp, #4]
   209e8:	str	r1, [sp]
   209ec:	ldr	r0, [sp, #4]
   209f0:	movw	r1, #0
   209f4:	cmp	r0, r1
   209f8:	bne	20a00 <rb_radixtree_foreach_start+0x28>
   209fc:	b	20a6c <rb_radixtree_foreach_start+0x94>
   20a00:	ldr	r0, [sp, #4]
   20a04:	ldr	r0, [r0, #4]
   20a08:	movw	r1, #0
   20a0c:	cmp	r0, r1
   20a10:	beq	20a2c <rb_radixtree_foreach_start+0x54>
   20a14:	ldr	r0, [sp, #4]
   20a18:	ldr	r0, [r0, #4]
   20a1c:	bl	21208 <first_leaf>
   20a20:	ldr	lr, [sp]
   20a24:	str	r0, [lr, #12]
   20a28:	b	20a38 <rb_radixtree_foreach_start+0x60>
   20a2c:	ldr	r0, [sp]
   20a30:	movw	r1, #0
   20a34:	str	r1, [r0, #12]
   20a38:	ldr	r0, [sp]
   20a3c:	ldr	r0, [r0, #12]
   20a40:	ldr	r1, [sp]
   20a44:	str	r0, [r1, #8]
   20a48:	ldr	r0, [sp]
   20a4c:	ldr	r0, [r0, #12]
   20a50:	movw	r1, #0
   20a54:	cmp	r0, r1
   20a58:	bne	20a60 <rb_radixtree_foreach_start+0x88>
   20a5c:	b	20a6c <rb_radixtree_foreach_start+0x94>
   20a60:	ldr	r0, [sp, #4]
   20a64:	ldr	r1, [sp]
   20a68:	bl	4e04 <rb_radixtree_foreach_next@plt>
   20a6c:	mov	sp, fp
   20a70:	pop	{fp, pc}

00020a74 <rb_radixtree_foreach_cur>:
   20a74:	sub	sp, sp, #16
   20a78:	str	r0, [sp, #8]
   20a7c:	str	r1, [sp, #4]
   20a80:	ldr	r0, [sp, #8]
   20a84:	movw	r1, #0
   20a88:	cmp	r0, r1
   20a8c:	bne	20a9c <rb_radixtree_foreach_cur+0x28>
   20a90:	movw	r0, #0
   20a94:	str	r0, [sp, #12]
   20a98:	b	20ad8 <rb_radixtree_foreach_cur+0x64>
   20a9c:	ldr	r0, [sp, #4]
   20aa0:	ldr	r0, [r0, #8]
   20aa4:	movw	r1, #0
   20aa8:	cmp	r0, r1
   20aac:	beq	20ac4 <rb_radixtree_foreach_cur+0x50>
   20ab0:	ldr	r0, [sp, #4]
   20ab4:	ldr	r0, [r0, #8]
   20ab8:	ldr	r0, [r0, #4]
   20abc:	str	r0, [sp]
   20ac0:	b	20ad0 <rb_radixtree_foreach_cur+0x5c>
   20ac4:	movw	r0, #0
   20ac8:	str	r0, [sp]
   20acc:	b	20ad0 <rb_radixtree_foreach_cur+0x5c>
   20ad0:	ldr	r0, [sp]
   20ad4:	str	r0, [sp, #12]
   20ad8:	ldr	r0, [sp, #12]
   20adc:	add	sp, sp, #16
   20ae0:	bx	lr

00020ae4 <rb_radixtree_delete>:
   20ae4:	push	{fp, lr}
   20ae8:	mov	fp, sp
   20aec:	sub	sp, sp, #24
   20af0:	str	r0, [fp, #-8]
   20af4:	str	r1, [sp, #12]
   20af8:	ldr	r0, [fp, #-8]
   20afc:	ldr	r1, [sp, #12]
   20b00:	movw	r2, #0
   20b04:	bl	5548 <rb_radixtree_elem_find@plt>
   20b08:	str	r0, [sp, #4]
   20b0c:	ldr	r0, [sp, #4]
   20b10:	movw	r1, #0
   20b14:	cmp	r0, r1
   20b18:	bne	20b28 <rb_radixtree_delete+0x44>
   20b1c:	movw	r0, #0
   20b20:	str	r0, [fp, #-4]
   20b24:	b	20b48 <rb_radixtree_delete+0x64>
   20b28:	ldr	r0, [sp, #4]
   20b2c:	ldr	r0, [r0, #4]
   20b30:	str	r0, [sp, #8]
   20b34:	ldr	r0, [fp, #-8]
   20b38:	ldr	r1, [sp, #4]
   20b3c:	bl	4d68 <rb_radixtree_elem_delete@plt>
   20b40:	ldr	r0, [sp, #8]
   20b44:	str	r0, [fp, #-4]
   20b48:	ldr	r0, [fp, #-4]
   20b4c:	mov	sp, fp
   20b50:	pop	{fp, pc}

00020b54 <rb_radixtree_foreach_next>:
   20b54:	push	{fp, lr}
   20b58:	mov	fp, sp
   20b5c:	sub	sp, sp, #32
   20b60:	str	r0, [fp, #-4]
   20b64:	str	r1, [fp, #-8]
   20b68:	ldr	r0, [fp, #-4]
   20b6c:	movw	r1, #0
   20b70:	cmp	r0, r1
   20b74:	bne	20b7c <rb_radixtree_foreach_next+0x28>
   20b78:	b	20d2c <rb_radixtree_foreach_next+0x1d8>
   20b7c:	ldr	r0, [fp, #-8]
   20b80:	ldr	r0, [r0, #8]
   20b84:	movw	r1, #0
   20b88:	cmp	r0, r1
   20b8c:	bne	20b94 <rb_radixtree_foreach_next+0x40>
   20b90:	b	20d2c <rb_radixtree_foreach_next+0x1d8>
   20b94:	ldr	r0, [fp, #-8]
   20b98:	ldr	r0, [r0, #12]
   20b9c:	ldr	r1, [fp, #-8]
   20ba0:	str	r0, [r1, #8]
   20ba4:	ldr	r0, [fp, #-8]
   20ba8:	ldr	r0, [r0, #12]
   20bac:	movw	r1, #0
   20bb0:	cmp	r0, r1
   20bb4:	bne	20bbc <rb_radixtree_foreach_next+0x68>
   20bb8:	b	20d2c <rb_radixtree_foreach_next+0x1d8>
   20bbc:	ldr	r0, [fp, #-8]
   20bc0:	ldr	r0, [r0, #12]
   20bc4:	str	r0, [fp, #-12]
   20bc8:	ldr	r0, [fp, #-12]
   20bcc:	ldr	r0, [r0, #12]
   20bd0:	str	r0, [sp, #16]
   20bd4:	ldr	r0, [fp, #-12]
   20bd8:	ldrb	r0, [r0, #16]
   20bdc:	str	r0, [sp, #8]
   20be0:	ldr	r0, [sp, #16]
   20be4:	movw	r1, #0
   20be8:	cmp	r0, r1
   20bec:	beq	20d20 <rb_radixtree_foreach_next+0x1cc>
   20bf0:	b	20bf4 <rb_radixtree_foreach_next+0xa0>
   20bf4:	ldr	r0, [sp, #16]
   20bf8:	add	r0, r0, #4
   20bfc:	ldr	r1, [sp, #8]
   20c00:	add	r2, r1, #1
   20c04:	str	r2, [sp, #8]
   20c08:	add	r0, r0, r1, lsl #2
   20c0c:	ldr	r0, [r0]
   20c10:	str	r0, [sp, #12]
   20c14:	ldr	r0, [sp, #12]
   20c18:	movw	r1, #0
   20c1c:	cmp	r0, r1
   20c20:	movw	r0, #0
   20c24:	str	r0, [sp, #4]
   20c28:	bne	20c40 <rb_radixtree_foreach_next+0xec>
   20c2c:	ldr	r0, [sp, #8]
   20c30:	cmp	r0, #16
   20c34:	movw	r0, #0
   20c38:	movlt	r0, #1
   20c3c:	str	r0, [sp, #4]
   20c40:	ldr	r0, [sp, #4]
   20c44:	tst	r0, #1
   20c48:	bne	20bf4 <rb_radixtree_foreach_next+0xa0>
   20c4c:	ldr	r0, [sp, #12]
   20c50:	movw	r1, #0
   20c54:	cmp	r0, r1
   20c58:	beq	20cd0 <rb_radixtree_foreach_next+0x17c>
   20c5c:	ldr	r0, [sp, #12]
   20c60:	ldr	r0, [r0]
   20c64:	cmn	r0, #1
   20c68:	bne	20cbc <rb_radixtree_foreach_next+0x168>
   20c6c:	ldr	r0, [sp, #12]
   20c70:	ldr	r1, [fp, #-12]
   20c74:	cmp	r0, r1
   20c78:	beq	20cb8 <rb_radixtree_foreach_next+0x164>
   20c7c:	ldr	r0, [sp, #12]
   20c80:	ldr	r0, [r0, #8]
   20c84:	ldr	r1, [fp, #-12]
   20c88:	ldr	r1, [r1, #8]
   20c8c:	bl	56bc <strcmp@plt>
   20c90:	cmp	r0, #0
   20c94:	bge	20ca8 <rb_radixtree_foreach_next+0x154>
   20c98:	ldr	r0, [fp, #-8]
   20c9c:	movw	r1, #0
   20ca0:	str	r1, [r0, #12]
   20ca4:	b	20d2c <rb_radixtree_foreach_next+0x1d8>
   20ca8:	ldr	r0, [sp, #12]
   20cac:	ldr	r1, [fp, #-8]
   20cb0:	str	r0, [r1, #12]
   20cb4:	b	20d2c <rb_radixtree_foreach_next+0x1d8>
   20cb8:	b	20ccc <rb_radixtree_foreach_next+0x178>
   20cbc:	ldr	r0, [sp, #12]
   20cc0:	str	r0, [sp, #16]
   20cc4:	movw	r0, #0
   20cc8:	str	r0, [sp, #8]
   20ccc:	b	20cd0 <rb_radixtree_foreach_next+0x17c>
   20cd0:	b	20cd4 <rb_radixtree_foreach_next+0x180>
   20cd4:	ldr	r0, [sp, #8]
   20cd8:	cmp	r0, #16
   20cdc:	blt	20d1c <rb_radixtree_foreach_next+0x1c8>
   20ce0:	ldr	r0, [sp, #16]
   20ce4:	ldrb	r0, [r0, #72]	; 0x48
   20ce8:	str	r0, [sp, #8]
   20cec:	ldr	r0, [sp, #16]
   20cf0:	ldr	r0, [r0, #68]	; 0x44
   20cf4:	str	r0, [sp, #16]
   20cf8:	ldr	r0, [sp, #16]
   20cfc:	movw	r1, #0
   20d00:	cmp	r0, r1
   20d04:	bne	20d0c <rb_radixtree_foreach_next+0x1b8>
   20d08:	b	20d1c <rb_radixtree_foreach_next+0x1c8>
   20d0c:	ldr	r0, [sp, #8]
   20d10:	add	r0, r0, #1
   20d14:	str	r0, [sp, #8]
   20d18:	b	20cd4 <rb_radixtree_foreach_next+0x180>
   20d1c:	b	20be0 <rb_radixtree_foreach_next+0x8c>
   20d20:	ldr	r0, [fp, #-8]
   20d24:	movw	r1, #0
   20d28:	str	r1, [r0, #12]
   20d2c:	mov	sp, fp
   20d30:	pop	{fp, pc}

00020d34 <rb_dlinkDelete>:
   20d34:	sub	sp, sp, #8
   20d38:	str	r0, [sp, #4]
   20d3c:	str	r1, [sp]
   20d40:	ldr	r0, [sp, #4]
   20d44:	ldr	r0, [r0, #8]
   20d48:	movw	r1, #0
   20d4c:	cmp	r0, r1
   20d50:	beq	20d6c <rb_dlinkDelete+0x38>
   20d54:	ldr	r0, [sp, #4]
   20d58:	ldr	r0, [r0, #4]
   20d5c:	ldr	r1, [sp, #4]
   20d60:	ldr	r1, [r1, #8]
   20d64:	str	r0, [r1, #4]
   20d68:	b	20d7c <rb_dlinkDelete+0x48>
   20d6c:	ldr	r0, [sp, #4]
   20d70:	ldr	r0, [r0, #4]
   20d74:	ldr	r1, [sp]
   20d78:	str	r0, [r1, #4]
   20d7c:	ldr	r0, [sp, #4]
   20d80:	ldr	r0, [r0, #4]
   20d84:	movw	r1, #0
   20d88:	cmp	r0, r1
   20d8c:	beq	20da8 <rb_dlinkDelete+0x74>
   20d90:	ldr	r0, [sp, #4]
   20d94:	ldr	r0, [r0, #8]
   20d98:	ldr	r1, [sp, #4]
   20d9c:	ldr	r1, [r1, #4]
   20da0:	str	r0, [r1, #8]
   20da4:	b	20db8 <rb_dlinkDelete+0x84>
   20da8:	ldr	r0, [sp, #4]
   20dac:	ldr	r0, [r0, #8]
   20db0:	ldr	r1, [sp]
   20db4:	str	r0, [r1]
   20db8:	ldr	r0, [sp, #4]
   20dbc:	movw	r1, #0
   20dc0:	str	r1, [r0, #4]
   20dc4:	ldr	r0, [sp, #4]
   20dc8:	str	r1, [r0, #8]
   20dcc:	ldr	r0, [sp]
   20dd0:	ldr	r1, [r0, #8]
   20dd4:	mvn	r2, #0
   20dd8:	add	r1, r1, r2
   20ddc:	str	r1, [r0, #8]
   20de0:	add	sp, sp, #8
   20de4:	bx	lr

00020de8 <rb_free>:
   20de8:	push	{fp, lr}
   20dec:	mov	fp, sp
   20df0:	sub	sp, sp, #8
   20df4:	str	r0, [sp, #4]
   20df8:	ldr	r0, [sp, #4]
   20dfc:	movw	r1, #0
   20e00:	cmp	r0, r1
   20e04:	movw	r0, #0
   20e08:	movne	r0, #1
   20e0c:	mvn	r1, #0
   20e10:	eor	r0, r0, r1
   20e14:	eor	r0, r0, r1
   20e18:	tst	r0, #1
   20e1c:	beq	20e28 <rb_free+0x40>
   20e20:	ldr	r0, [sp, #4]
   20e24:	bl	50c8 <free@plt>
   20e28:	mov	sp, fp
   20e2c:	pop	{fp, pc}

00020e30 <rb_radixtree_foreach>:
   20e30:	push	{fp, lr}
   20e34:	mov	fp, sp
   20e38:	sub	sp, sp, #48	; 0x30
   20e3c:	str	r0, [fp, #-4]
   20e40:	str	r1, [fp, #-8]
   20e44:	str	r2, [fp, #-12]
   20e48:	ldr	r0, [fp, #-4]
   20e4c:	ldr	r0, [r0, #4]
   20e50:	str	r0, [fp, #-16]
   20e54:	ldr	r0, [fp, #-16]
   20e58:	movw	r1, #0
   20e5c:	cmp	r0, r1
   20e60:	bne	20e68 <rb_radixtree_foreach+0x38>
   20e64:	b	21000 <rb_radixtree_foreach+0x1d0>
   20e68:	ldr	r0, [fp, #-16]
   20e6c:	ldr	r0, [r0]
   20e70:	cmn	r0, #1
   20e74:	bne	20ec0 <rb_radixtree_foreach+0x90>
   20e78:	ldr	r0, [fp, #-8]
   20e7c:	movw	r1, #0
   20e80:	cmp	r0, r1
   20e84:	beq	20ebc <rb_radixtree_foreach+0x8c>
   20e88:	ldr	r0, [fp, #-8]
   20e8c:	ldr	r1, [fp, #-16]
   20e90:	ldr	r1, [r1, #8]
   20e94:	ldr	r2, [fp, #-16]
   20e98:	ldr	r2, [r2, #4]
   20e9c:	ldr	r3, [fp, #-12]
   20ea0:	str	r0, [sp, #20]
   20ea4:	mov	r0, r1
   20ea8:	mov	r1, r2
   20eac:	mov	r2, r3
   20eb0:	ldr	r3, [sp, #20]
   20eb4:	blx	r3
   20eb8:	str	r0, [sp, #16]
   20ebc:	b	21000 <rb_radixtree_foreach+0x1d0>
   20ec0:	movw	r0, #0
   20ec4:	str	r0, [sp, #24]
   20ec8:	b	20ecc <rb_radixtree_foreach+0x9c>
   20ecc:	ldr	r0, [fp, #-16]
   20ed0:	add	r0, r0, #4
   20ed4:	ldr	r1, [sp, #24]
   20ed8:	add	r2, r1, #1
   20edc:	str	r2, [sp, #24]
   20ee0:	add	r0, r0, r1, lsl #2
   20ee4:	ldr	r0, [r0]
   20ee8:	str	r0, [fp, #-20]	; 0xffffffec
   20eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ef0:	movw	r1, #0
   20ef4:	cmp	r0, r1
   20ef8:	movw	r0, #0
   20efc:	str	r0, [sp, #12]
   20f00:	bne	20f18 <rb_radixtree_foreach+0xe8>
   20f04:	ldr	r0, [sp, #24]
   20f08:	cmp	r0, #16
   20f0c:	movw	r0, #0
   20f10:	movlt	r0, #1
   20f14:	str	r0, [sp, #12]
   20f18:	ldr	r0, [sp, #12]
   20f1c:	tst	r0, #1
   20f20:	bne	20ecc <rb_radixtree_foreach+0x9c>
   20f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f28:	movw	r1, #0
   20f2c:	cmp	r0, r1
   20f30:	beq	20fa0 <rb_radixtree_foreach+0x170>
   20f34:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f38:	ldr	r0, [r0]
   20f3c:	cmn	r0, #1
   20f40:	bne	20f8c <rb_radixtree_foreach+0x15c>
   20f44:	ldr	r0, [fp, #-8]
   20f48:	movw	r1, #0
   20f4c:	cmp	r0, r1
   20f50:	beq	20f88 <rb_radixtree_foreach+0x158>
   20f54:	ldr	r0, [fp, #-8]
   20f58:	ldr	r1, [fp, #-20]	; 0xffffffec
   20f5c:	ldr	r1, [r1, #8]
   20f60:	ldr	r2, [fp, #-20]	; 0xffffffec
   20f64:	ldr	r2, [r2, #4]
   20f68:	ldr	r3, [fp, #-12]
   20f6c:	str	r0, [sp, #8]
   20f70:	mov	r0, r1
   20f74:	mov	r1, r2
   20f78:	mov	r2, r3
   20f7c:	ldr	r3, [sp, #8]
   20f80:	blx	r3
   20f84:	str	r0, [sp, #4]
   20f88:	b	20f9c <rb_radixtree_foreach+0x16c>
   20f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f90:	str	r0, [fp, #-16]
   20f94:	movw	r0, #0
   20f98:	str	r0, [sp, #24]
   20f9c:	b	20fa0 <rb_radixtree_foreach+0x170>
   20fa0:	b	20fa4 <rb_radixtree_foreach+0x174>
   20fa4:	ldr	r0, [sp, #24]
   20fa8:	cmp	r0, #16
   20fac:	blt	20fec <rb_radixtree_foreach+0x1bc>
   20fb0:	ldr	r0, [fp, #-16]
   20fb4:	ldrb	r0, [r0, #72]	; 0x48
   20fb8:	str	r0, [sp, #24]
   20fbc:	ldr	r0, [fp, #-16]
   20fc0:	ldr	r0, [r0, #68]	; 0x44
   20fc4:	str	r0, [fp, #-16]
   20fc8:	ldr	r0, [fp, #-16]
   20fcc:	movw	r1, #0
   20fd0:	cmp	r0, r1
   20fd4:	bne	20fdc <rb_radixtree_foreach+0x1ac>
   20fd8:	b	20fec <rb_radixtree_foreach+0x1bc>
   20fdc:	ldr	r0, [sp, #24]
   20fe0:	add	r0, r0, #1
   20fe4:	str	r0, [sp, #24]
   20fe8:	b	20fa4 <rb_radixtree_foreach+0x174>
   20fec:	b	20ff0 <rb_radixtree_foreach+0x1c0>
   20ff0:	ldr	r0, [fp, #-16]
   20ff4:	movw	r1, #0
   20ff8:	cmp	r0, r1
   20ffc:	bne	20ec8 <rb_radixtree_foreach+0x98>
   21000:	mov	sp, fp
   21004:	pop	{fp, pc}

00021008 <rb_radixtree_search>:
   21008:	push	{fp, lr}
   2100c:	mov	fp, sp
   21010:	sub	sp, sp, #48	; 0x30
   21014:	str	r0, [fp, #-8]
   21018:	str	r1, [fp, #-12]
   2101c:	str	r2, [fp, #-16]
   21020:	movw	r0, #0
   21024:	str	r0, [sp, #16]
   21028:	ldr	r1, [fp, #-8]
   2102c:	ldr	r1, [r1, #4]
   21030:	str	r1, [fp, #-20]	; 0xffffffec
   21034:	ldr	r1, [fp, #-20]	; 0xffffffec
   21038:	cmp	r1, r0
   2103c:	bne	2104c <rb_radixtree_search+0x44>
   21040:	movw	r0, #0
   21044:	str	r0, [fp, #-4]
   21048:	b	211fc <rb_radixtree_search+0x1f4>
   2104c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21050:	ldr	r0, [r0]
   21054:	cmn	r0, #1
   21058:	bne	210b0 <rb_radixtree_search+0xa8>
   2105c:	ldr	r0, [fp, #-12]
   21060:	movw	r1, #0
   21064:	cmp	r0, r1
   21068:	beq	210a4 <rb_radixtree_search+0x9c>
   2106c:	ldr	r0, [fp, #-12]
   21070:	ldr	r1, [fp, #-20]	; 0xffffffec
   21074:	ldr	r1, [r1, #8]
   21078:	ldr	r2, [fp, #-20]	; 0xffffffec
   2107c:	ldr	r2, [r2, #4]
   21080:	ldr	r3, [fp, #-16]
   21084:	str	r0, [sp, #12]
   21088:	mov	r0, r1
   2108c:	mov	r1, r2
   21090:	mov	r2, r3
   21094:	ldr	r3, [sp, #12]
   21098:	blx	r3
   2109c:	str	r0, [fp, #-4]
   210a0:	b	211fc <rb_radixtree_search+0x1f4>
   210a4:	movw	r0, #0
   210a8:	str	r0, [fp, #-4]
   210ac:	b	211fc <rb_radixtree_search+0x1f4>
   210b0:	movw	r0, #0
   210b4:	str	r0, [sp, #20]
   210b8:	b	210bc <rb_radixtree_search+0xb4>
   210bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   210c0:	add	r0, r0, #4
   210c4:	ldr	r1, [sp, #20]
   210c8:	add	r2, r1, #1
   210cc:	str	r2, [sp, #20]
   210d0:	add	r0, r0, r1, lsl #2
   210d4:	ldr	r0, [r0]
   210d8:	str	r0, [sp, #24]
   210dc:	ldr	r0, [sp, #24]
   210e0:	movw	r1, #0
   210e4:	cmp	r0, r1
   210e8:	movw	r0, #0
   210ec:	str	r0, [sp, #8]
   210f0:	bne	21108 <rb_radixtree_search+0x100>
   210f4:	ldr	r0, [sp, #20]
   210f8:	cmp	r0, #16
   210fc:	movw	r0, #0
   21100:	movlt	r0, #1
   21104:	str	r0, [sp, #8]
   21108:	ldr	r0, [sp, #8]
   2110c:	tst	r0, #1
   21110:	bne	210bc <rb_radixtree_search+0xb4>
   21114:	ldr	r0, [sp, #24]
   21118:	movw	r1, #0
   2111c:	cmp	r0, r1
   21120:	beq	211a4 <rb_radixtree_search+0x19c>
   21124:	ldr	r0, [sp, #24]
   21128:	ldr	r0, [r0]
   2112c:	cmn	r0, #1
   21130:	bne	21190 <rb_radixtree_search+0x188>
   21134:	ldr	r0, [fp, #-12]
   21138:	movw	r1, #0
   2113c:	cmp	r0, r1
   21140:	beq	21178 <rb_radixtree_search+0x170>
   21144:	ldr	r0, [fp, #-12]
   21148:	ldr	r1, [sp, #24]
   2114c:	ldr	r1, [r1, #8]
   21150:	ldr	r2, [sp, #24]
   21154:	ldr	r2, [r2, #4]
   21158:	ldr	r3, [fp, #-16]
   2115c:	str	r0, [sp, #4]
   21160:	mov	r0, r1
   21164:	mov	r1, r2
   21168:	mov	r2, r3
   2116c:	ldr	r3, [sp, #4]
   21170:	blx	r3
   21174:	str	r0, [sp, #16]
   21178:	ldr	r0, [sp, #16]
   2117c:	movw	r1, #0
   21180:	cmp	r0, r1
   21184:	beq	2118c <rb_radixtree_search+0x184>
   21188:	b	211f4 <rb_radixtree_search+0x1ec>
   2118c:	b	211a0 <rb_radixtree_search+0x198>
   21190:	ldr	r0, [sp, #24]
   21194:	str	r0, [fp, #-20]	; 0xffffffec
   21198:	movw	r0, #0
   2119c:	str	r0, [sp, #20]
   211a0:	b	211a4 <rb_radixtree_search+0x19c>
   211a4:	b	211a8 <rb_radixtree_search+0x1a0>
   211a8:	ldr	r0, [sp, #20]
   211ac:	cmp	r0, #16
   211b0:	blt	211f0 <rb_radixtree_search+0x1e8>
   211b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   211b8:	ldrb	r0, [r0, #72]	; 0x48
   211bc:	str	r0, [sp, #20]
   211c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   211c4:	ldr	r0, [r0, #68]	; 0x44
   211c8:	str	r0, [fp, #-20]	; 0xffffffec
   211cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   211d0:	movw	r1, #0
   211d4:	cmp	r0, r1
   211d8:	bne	211e0 <rb_radixtree_search+0x1d8>
   211dc:	b	211f0 <rb_radixtree_search+0x1e8>
   211e0:	ldr	r0, [sp, #20]
   211e4:	add	r0, r0, #1
   211e8:	str	r0, [sp, #20]
   211ec:	b	211a8 <rb_radixtree_search+0x1a0>
   211f0:	b	210b8 <rb_radixtree_search+0xb0>
   211f4:	ldr	r0, [sp, #16]
   211f8:	str	r0, [fp, #-4]
   211fc:	ldr	r0, [fp, #-4]
   21200:	mov	sp, fp
   21204:	pop	{fp, pc}

00021208 <first_leaf>:
   21208:	sub	sp, sp, #8
   2120c:	str	r0, [sp, #4]
   21210:	ldr	r0, [sp, #4]
   21214:	ldr	r0, [r0]
   21218:	cmn	r0, #1
   2121c:	movw	r0, #0
   21220:	moveq	r0, #1
   21224:	mvn	r1, #0
   21228:	eor	r0, r0, r1
   2122c:	tst	r0, #1
   21230:	beq	2129c <first_leaf+0x94>
   21234:	movw	r0, #0
   21238:	str	r0, [sp]
   2123c:	ldr	r0, [sp]
   21240:	cmp	r0, #16
   21244:	bge	21298 <first_leaf+0x90>
   21248:	ldr	r0, [sp, #4]
   2124c:	add	r0, r0, #4
   21250:	ldr	r1, [sp]
   21254:	add	r0, r0, r1, lsl #2
   21258:	ldr	r0, [r0]
   2125c:	movw	r1, #0
   21260:	cmp	r0, r1
   21264:	beq	21284 <first_leaf+0x7c>
   21268:	ldr	r0, [sp, #4]
   2126c:	add	r0, r0, #4
   21270:	ldr	r1, [sp]
   21274:	add	r0, r0, r1, lsl #2
   21278:	ldr	r0, [r0]
   2127c:	str	r0, [sp, #4]
   21280:	b	21298 <first_leaf+0x90>
   21284:	b	21288 <first_leaf+0x80>
   21288:	ldr	r0, [sp]
   2128c:	add	r0, r0, #1
   21290:	str	r0, [sp]
   21294:	b	2123c <first_leaf+0x34>
   21298:	b	21210 <first_leaf+0x8>
   2129c:	ldr	r0, [sp, #4]
   212a0:	add	sp, sp, #8
   212a4:	bx	lr

000212a8 <rb_radixtree_elem_find>:
   212a8:	push	{r4, r5, fp, lr}
   212ac:	add	fp, sp, #8
   212b0:	sub	sp, sp, #304	; 0x130
   212b4:	str	r0, [fp, #-12]
   212b8:	str	r1, [fp, #-16]
   212bc:	str	r2, [fp, #-20]	; 0xffffffec
   212c0:	movw	r0, #0
   212c4:	str	r0, [sp, #32]
   212c8:	ldr	r1, [fp, #-16]
   212cc:	str	r0, [sp, #12]
   212d0:	mov	r0, r1
   212d4:	bl	51b8 <strlen@plt>
   212d8:	str	r0, [sp, #16]
   212dc:	ldr	r0, [fp, #-12]
   212e0:	ldr	r0, [r0]
   212e4:	ldr	r1, [sp, #12]
   212e8:	cmp	r0, r1
   212ec:	bne	212fc <rb_radixtree_elem_find+0x54>
   212f0:	ldr	r0, [fp, #-16]
   212f4:	str	r0, [sp, #28]
   212f8:	b	21370 <rb_radixtree_elem_find+0xc8>
   212fc:	ldr	r0, [sp, #16]
   21300:	cmp	r0, #256	; 0x100
   21304:	blt	2133c <rb_radixtree_elem_find+0x94>
   21308:	ldr	r0, [fp, #-16]
   2130c:	bl	207e4 <rb_strdup>
   21310:	str	r0, [sp, #32]
   21314:	ldr	r0, [fp, #-12]
   21318:	ldr	r0, [r0]
   2131c:	ldr	lr, [sp, #32]
   21320:	str	r0, [sp, #8]
   21324:	mov	r0, lr
   21328:	ldr	lr, [sp, #8]
   2132c:	blx	lr
   21330:	ldr	r0, [sp, #32]
   21334:	str	r0, [sp, #28]
   21338:	b	2136c <rb_radixtree_elem_find+0xc4>
   2133c:	add	r0, sp, #36	; 0x24
   21340:	ldr	r1, [fp, #-16]
   21344:	movw	r2, #256	; 0x100
   21348:	bl	5068 <rb_strlcpy@plt>
   2134c:	add	r1, sp, #36	; 0x24
   21350:	ldr	r2, [fp, #-12]
   21354:	ldr	r2, [r2]
   21358:	str	r0, [sp, #4]
   2135c:	mov	r0, r1
   21360:	blx	r2
   21364:	add	r0, sp, #36	; 0x24
   21368:	str	r0, [sp, #28]
   2136c:	b	21370 <rb_radixtree_elem_find+0xc8>
   21370:	ldr	r0, [fp, #-12]
   21374:	ldr	r0, [r0, #4]
   21378:	str	r0, [sp, #24]
   2137c:	ldr	r0, [sp, #24]
   21380:	movw	r1, #0
   21384:	cmp	r0, r1
   21388:	movw	r0, #0
   2138c:	str	r0, [sp]
   21390:	beq	213b4 <rb_radixtree_elem_find+0x10c>
   21394:	ldr	r0, [sp, #24]
   21398:	ldr	r0, [r0]
   2139c:	cmn	r0, #1
   213a0:	movw	r0, #0
   213a4:	moveq	r0, #1
   213a8:	mvn	r1, #0
   213ac:	eor	r0, r0, r1
   213b0:	str	r0, [sp]
   213b4:	ldr	r0, [sp]
   213b8:	tst	r0, #1
   213bc:	beq	21450 <rb_radixtree_elem_find+0x1a8>
   213c0:	ldr	r0, [sp, #24]
   213c4:	ldr	r0, [r0]
   213c8:	movw	r1, #2
   213cc:	sdiv	r0, r0, r1
   213d0:	ldr	r1, [sp, #16]
   213d4:	cmp	r0, r1
   213d8:	bge	2142c <rb_radixtree_elem_find+0x184>
   213dc:	ldr	r0, [sp, #28]
   213e0:	ldr	r1, [sp, #24]
   213e4:	ldr	r1, [r1]
   213e8:	movw	r2, #2
   213ec:	sdiv	r1, r1, r2
   213f0:	add	r0, r0, r1
   213f4:	ldrb	r0, [r0]
   213f8:	ldr	r1, [sp, #24]
   213fc:	ldr	r1, [r1]
   21400:	and	r1, r1, #1
   21404:	cmp	r1, #0
   21408:	movw	r1, #0
   2140c:	movne	r1, #1
   21410:	tst	r1, #1
   21414:	movw	r1, #0
   21418:	moveq	r1, #4
   2141c:	asr	r0, r0, r1
   21420:	and	r0, r0, #15
   21424:	str	r0, [sp, #20]
   21428:	b	21434 <rb_radixtree_elem_find+0x18c>
   2142c:	movw	r0, #0
   21430:	str	r0, [sp, #20]
   21434:	ldr	r0, [sp, #24]
   21438:	add	r0, r0, #4
   2143c:	ldr	r1, [sp, #20]
   21440:	add	r0, r0, r1, lsl #2
   21444:	ldr	r0, [r0]
   21448:	str	r0, [sp, #24]
   2144c:	b	2137c <rb_radixtree_elem_find+0xd4>
   21450:	ldr	r0, [sp, #24]
   21454:	movw	r1, #0
   21458:	cmp	r0, r1
   2145c:	beq	2148c <rb_radixtree_elem_find+0x1e4>
   21460:	ldr	r0, [fp, #-20]	; 0xffffffec
   21464:	cmp	r0, #0
   21468:	bne	2148c <rb_radixtree_elem_find+0x1e4>
   2146c:	ldr	r0, [sp, #24]
   21470:	ldr	r0, [r0, #8]
   21474:	ldr	r1, [sp, #28]
   21478:	bl	56bc <strcmp@plt>
   2147c:	cmp	r0, #0
   21480:	beq	2148c <rb_radixtree_elem_find+0x1e4>
   21484:	movw	r0, #0
   21488:	str	r0, [sp, #24]
   2148c:	ldr	r0, [sp, #32]
   21490:	movw	r1, #0
   21494:	cmp	r0, r1
   21498:	beq	214a4 <rb_radixtree_elem_find+0x1fc>
   2149c:	ldr	r0, [sp, #32]
   214a0:	bl	20de8 <rb_free>
   214a4:	ldr	r0, [sp, #24]
   214a8:	sub	sp, fp, #8
   214ac:	pop	{r4, r5, fp, pc}

000214b0 <rb_radixtree_foreach_start_from>:
   214b0:	push	{fp, lr}
   214b4:	mov	fp, sp
   214b8:	sub	sp, sp, #16
   214bc:	str	r0, [fp, #-4]
   214c0:	str	r1, [sp, #8]
   214c4:	str	r2, [sp, #4]
   214c8:	ldr	r0, [sp, #4]
   214cc:	movw	r1, #0
   214d0:	cmp	r0, r1
   214d4:	beq	2150c <rb_radixtree_foreach_start_from+0x5c>
   214d8:	ldr	r0, [sp, #8]
   214dc:	movw	r1, #0
   214e0:	str	r1, [r0, #8]
   214e4:	ldr	r0, [fp, #-4]
   214e8:	ldr	r1, [sp, #4]
   214ec:	movw	r2, #1
   214f0:	bl	5548 <rb_radixtree_elem_find@plt>
   214f4:	ldr	r1, [sp, #8]
   214f8:	str	r0, [r1, #12]
   214fc:	ldr	r0, [fp, #-4]
   21500:	ldr	r1, [sp, #8]
   21504:	bl	4e04 <rb_radixtree_foreach_next@plt>
   21508:	b	21518 <rb_radixtree_foreach_start_from+0x68>
   2150c:	ldr	r0, [fp, #-4]
   21510:	ldr	r1, [sp, #8]
   21514:	bl	4dc8 <rb_radixtree_foreach_start@plt>
   21518:	mov	sp, fp
   2151c:	pop	{fp, pc}

00021520 <rb_radixtree_elem_add>:
   21520:	push	{fp, lr}
   21524:	mov	fp, sp
   21528:	sub	sp, sp, #64	; 0x40
   2152c:	str	r0, [fp, #-8]
   21530:	str	r1, [fp, #-12]
   21534:	str	r2, [fp, #-16]
   21538:	ldr	r0, [fp, #-12]
   2153c:	bl	51b8 <strlen@plt>
   21540:	str	r0, [sp, #20]
   21544:	ldr	r0, [fp, #-12]
   21548:	bl	207e4 <rb_strdup>
   2154c:	str	r0, [fp, #-20]	; 0xffffffec
   21550:	ldr	r0, [fp, #-20]	; 0xffffffec
   21554:	movw	r1, #0
   21558:	cmp	r0, r1
   2155c:	bne	2156c <rb_radixtree_elem_add+0x4c>
   21560:	movw	r0, #0
   21564:	str	r0, [fp, #-4]
   21568:	b	21c58 <rb_radixtree_elem_add+0x738>
   2156c:	ldr	r0, [fp, #-8]
   21570:	ldr	r0, [r0]
   21574:	movw	r1, #0
   21578:	cmp	r0, r1
   2157c:	beq	2159c <rb_radixtree_elem_add+0x7c>
   21580:	ldr	r0, [fp, #-8]
   21584:	ldr	r0, [r0]
   21588:	ldr	r1, [fp, #-20]	; 0xffffffec
   2158c:	str	r0, [sp, #8]
   21590:	mov	r0, r1
   21594:	ldr	r1, [sp, #8]
   21598:	blx	r1
   2159c:	movw	r0, #0
   215a0:	str	r0, [fp, #-28]	; 0xffffffe4
   215a4:	movw	r0, #18
   215a8:	str	r0, [sp, #24]
   215ac:	ldr	r0, [fp, #-8]
   215b0:	ldr	r0, [r0, #4]
   215b4:	str	r0, [fp, #-24]	; 0xffffffe8
   215b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   215bc:	movw	r1, #0
   215c0:	cmp	r0, r1
   215c4:	movw	r0, #0
   215c8:	str	r0, [sp, #4]
   215cc:	beq	215f0 <rb_radixtree_elem_add+0xd0>
   215d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   215d4:	ldr	r0, [r0]
   215d8:	cmn	r0, #1
   215dc:	movw	r0, #0
   215e0:	moveq	r0, #1
   215e4:	mvn	r1, #0
   215e8:	eor	r0, r0, r1
   215ec:	str	r0, [sp, #4]
   215f0:	ldr	r0, [sp, #4]
   215f4:	tst	r0, #1
   215f8:	beq	21694 <rb_radixtree_elem_add+0x174>
   215fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21600:	str	r0, [fp, #-28]	; 0xffffffe4
   21604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21608:	ldr	r0, [r0]
   2160c:	movw	r1, #2
   21610:	sdiv	r0, r0, r1
   21614:	ldr	r1, [sp, #20]
   21618:	cmp	r0, r1
   2161c:	bge	21670 <rb_radixtree_elem_add+0x150>
   21620:	ldr	r0, [fp, #-20]	; 0xffffffec
   21624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21628:	ldr	r1, [r1]
   2162c:	movw	r2, #2
   21630:	sdiv	r1, r1, r2
   21634:	add	r0, r0, r1
   21638:	ldrb	r0, [r0]
   2163c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21640:	ldr	r1, [r1]
   21644:	and	r1, r1, #1
   21648:	cmp	r1, #0
   2164c:	movw	r1, #0
   21650:	movne	r1, #1
   21654:	tst	r1, #1
   21658:	movw	r1, #0
   2165c:	moveq	r1, #4
   21660:	asr	r0, r0, r1
   21664:	and	r0, r0, #15
   21668:	str	r0, [sp, #24]
   2166c:	b	21678 <rb_radixtree_elem_add+0x158>
   21670:	movw	r0, #0
   21674:	str	r0, [sp, #24]
   21678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2167c:	add	r0, r0, #4
   21680:	ldr	r1, [sp, #24]
   21684:	add	r0, r0, r1, lsl #2
   21688:	ldr	r0, [r0]
   2168c:	str	r0, [fp, #-24]	; 0xffffffe8
   21690:	b	215b8 <rb_radixtree_elem_add+0x98>
   21694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21698:	movw	r1, #0
   2169c:	cmp	r0, r1
   216a0:	beq	216d0 <rb_radixtree_elem_add+0x1b0>
   216a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216a8:	ldr	r0, [r0, #8]
   216ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   216b0:	bl	56bc <strcmp@plt>
   216b4:	cmp	r0, #0
   216b8:	bne	216d0 <rb_radixtree_elem_add+0x1b0>
   216bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   216c0:	bl	20de8 <rb_free>
   216c4:	movw	r0, #0
   216c8:	str	r0, [fp, #-4]
   216cc:	b	21c58 <rb_radixtree_elem_add+0x738>
   216d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216d4:	movw	r1, #0
   216d8:	cmp	r0, r1
   216dc:	bne	216fc <rb_radixtree_elem_add+0x1dc>
   216e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216e4:	movw	r1, #0
   216e8:	cmp	r0, r1
   216ec:	beq	216fc <rb_radixtree_elem_add+0x1dc>
   216f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216f4:	bl	21208 <first_leaf>
   216f8:	str	r0, [fp, #-24]	; 0xffffffe8
   216fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21700:	movw	r1, #0
   21704:	cmp	r0, r1
   21708:	bne	21798 <rb_radixtree_elem_add+0x278>
   2170c:	ldr	r0, [fp, #-8]
   21710:	add	r0, r0, #4
   21714:	str	r0, [sp, #28]
   21718:	movw	r0, #20
   2171c:	bl	2078c <rb_malloc>
   21720:	ldr	lr, [sp, #28]
   21724:	str	r0, [lr]
   21728:	ldr	r0, [sp, #28]
   2172c:	ldr	r0, [r0]
   21730:	mvn	lr, #0
   21734:	str	lr, [r0]
   21738:	ldr	r0, [fp, #-16]
   2173c:	ldr	lr, [sp, #28]
   21740:	ldr	lr, [lr]
   21744:	str	r0, [lr, #4]
   21748:	ldr	r0, [fp, #-20]	; 0xffffffec
   2174c:	ldr	lr, [sp, #28]
   21750:	ldr	lr, [lr]
   21754:	str	r0, [lr, #8]
   21758:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2175c:	ldr	lr, [sp, #28]
   21760:	ldr	lr, [lr]
   21764:	str	r0, [lr, #12]
   21768:	ldr	r0, [sp, #24]
   2176c:	ldr	lr, [sp, #28]
   21770:	ldr	lr, [lr]
   21774:	strb	r0, [lr, #16]
   21778:	ldr	r0, [fp, #-8]
   2177c:	ldr	lr, [r0, #8]
   21780:	add	lr, lr, #1
   21784:	str	lr, [r0, #8]
   21788:	ldr	r0, [sp, #28]
   2178c:	ldr	r0, [r0]
   21790:	str	r0, [fp, #-4]
   21794:	b	21c58 <rb_radixtree_elem_add+0x738>
   21798:	movw	r0, #0
   2179c:	str	r0, [sp, #16]
   217a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   217a4:	ldr	r1, [sp, #16]
   217a8:	movw	r2, #2
   217ac:	sdiv	r1, r1, r2
   217b0:	add	r0, r0, r1
   217b4:	ldrb	r0, [r0]
   217b8:	ldr	r1, [sp, #16]
   217bc:	and	r1, r1, #1
   217c0:	cmp	r1, #0
   217c4:	movw	r1, #0
   217c8:	movne	r1, #1
   217cc:	tst	r1, #1
   217d0:	movw	r1, #0
   217d4:	mov	r3, r1
   217d8:	moveq	r3, #4
   217dc:	asr	r0, r0, r3
   217e0:	and	r0, r0, #15
   217e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   217e8:	ldr	r3, [r3, #8]
   217ec:	ldr	ip, [sp, #16]
   217f0:	sdiv	r2, ip, r2
   217f4:	add	r2, r3, r2
   217f8:	ldrb	r2, [r2]
   217fc:	ldr	r3, [sp, #16]
   21800:	and	r3, r3, #1
   21804:	cmp	r3, #0
   21808:	movw	r3, #0
   2180c:	movne	r3, #1
   21810:	tst	r3, #1
   21814:	moveq	r1, #4
   21818:	asr	r1, r2, r1
   2181c:	and	r1, r1, #15
   21820:	cmp	r0, r1
   21824:	bne	2183c <rb_radixtree_elem_add+0x31c>
   21828:	b	2182c <rb_radixtree_elem_add+0x30c>
   2182c:	ldr	r0, [sp, #16]
   21830:	add	r0, r0, #1
   21834:	str	r0, [sp, #16]
   21838:	b	217a0 <rb_radixtree_elem_add+0x280>
   2183c:	b	21840 <rb_radixtree_elem_add+0x320>
   21840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21844:	movw	r1, #0
   21848:	cmp	r0, r1
   2184c:	movw	r0, #0
   21850:	str	r0, [sp]
   21854:	beq	21874 <rb_radixtree_elem_add+0x354>
   21858:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2185c:	ldr	r0, [r0]
   21860:	ldr	r1, [sp, #16]
   21864:	cmp	r0, r1
   21868:	movw	r0, #0
   2186c:	movgt	r0, #1
   21870:	str	r0, [sp]
   21874:	ldr	r0, [sp]
   21878:	tst	r0, #1
   2187c:	beq	2189c <rb_radixtree_elem_add+0x37c>
   21880:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21884:	ldrb	r0, [r0, #72]	; 0x48
   21888:	str	r0, [sp, #24]
   2188c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21890:	ldr	r0, [r0, #68]	; 0x44
   21894:	str	r0, [fp, #-28]	; 0xffffffe4
   21898:	b	21840 <rb_radixtree_elem_add+0x320>
   2189c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   218a0:	movw	r1, #0
   218a4:	cmp	r0, r1
   218a8:	beq	218c0 <rb_radixtree_elem_add+0x3a0>
   218ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   218b0:	ldr	r0, [r0]
   218b4:	ldr	r1, [sp, #16]
   218b8:	cmp	r0, r1
   218bc:	bge	21b98 <rb_radixtree_elem_add+0x678>
   218c0:	movw	r0, #76	; 0x4c
   218c4:	bl	2078c <rb_malloc>
   218c8:	str	r0, [sp, #32]
   218cc:	ldr	r0, [sp, #16]
   218d0:	ldr	lr, [sp, #32]
   218d4:	str	r0, [lr]
   218d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   218dc:	ldr	lr, [sp, #32]
   218e0:	str	r0, [lr, #68]	; 0x44
   218e4:	ldr	r0, [sp, #24]
   218e8:	ldr	lr, [sp, #32]
   218ec:	strb	r0, [lr, #72]	; 0x48
   218f0:	movw	r0, #0
   218f4:	str	r0, [sp, #12]
   218f8:	ldr	r0, [sp, #12]
   218fc:	cmp	r0, #16
   21900:	bge	2192c <rb_radixtree_elem_add+0x40c>
   21904:	ldr	r0, [sp, #32]
   21908:	add	r0, r0, #4
   2190c:	ldr	r1, [sp, #12]
   21910:	add	r0, r0, r1, lsl #2
   21914:	movw	r1, #0
   21918:	str	r1, [r0]
   2191c:	ldr	r0, [sp, #12]
   21920:	add	r0, r0, #1
   21924:	str	r0, [sp, #12]
   21928:	b	218f8 <rb_radixtree_elem_add+0x3d8>
   2192c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21930:	movw	r1, #0
   21934:	cmp	r0, r1
   21938:	bne	21a64 <rb_radixtree_elem_add+0x544>
   2193c:	ldr	r0, [fp, #-8]
   21940:	ldr	r0, [r0, #4]
   21944:	ldr	r1, [sp, #32]
   21948:	add	r1, r1, #4
   2194c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21950:	ldr	r2, [r2, #8]
   21954:	ldr	r3, [sp, #16]
   21958:	add	ip, r3, r3, lsr #31
   2195c:	ldrb	r2, [r2, ip, asr #1]
   21960:	mov	ip, #4
   21964:	tst	r3, #1
   21968:	movwne	ip, #0
   2196c:	mov	r3, #15
   21970:	and	r2, r3, r2, lsr ip
   21974:	add	r1, r1, r2, lsl #2
   21978:	str	r0, [r1]
   2197c:	ldr	r0, [fp, #-8]
   21980:	ldr	r0, [r0, #4]
   21984:	ldr	r0, [r0]
   21988:	cmn	r0, #1
   2198c:	bne	219f4 <rb_radixtree_elem_add+0x4d4>
   21990:	ldr	r0, [sp, #32]
   21994:	ldr	r1, [fp, #-8]
   21998:	ldr	r1, [r1, #4]
   2199c:	str	r0, [r1, #12]
   219a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   219a4:	ldr	r0, [r0, #8]
   219a8:	ldr	r1, [sp, #16]
   219ac:	movw	r2, #2
   219b0:	sdiv	r1, r1, r2
   219b4:	add	r0, r0, r1
   219b8:	ldrb	r0, [r0]
   219bc:	ldr	r1, [sp, #16]
   219c0:	and	r1, r1, #1
   219c4:	cmp	r1, #0
   219c8:	movw	r1, #0
   219cc:	movne	r1, #1
   219d0:	tst	r1, #1
   219d4:	movw	r1, #0
   219d8:	moveq	r1, #4
   219dc:	asr	r0, r0, r1
   219e0:	and	r0, r0, #15
   219e4:	ldr	r1, [fp, #-8]
   219e8:	ldr	r1, [r1, #4]
   219ec:	strb	r0, [r1, #16]
   219f0:	b	21a54 <rb_radixtree_elem_add+0x534>
   219f4:	ldr	r0, [sp, #32]
   219f8:	ldr	r1, [fp, #-8]
   219fc:	ldr	r1, [r1, #4]
   21a00:	str	r0, [r1, #68]	; 0x44
   21a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a08:	ldr	r0, [r0, #8]
   21a0c:	ldr	r1, [sp, #16]
   21a10:	movw	r2, #2
   21a14:	sdiv	r1, r1, r2
   21a18:	add	r0, r0, r1
   21a1c:	ldrb	r0, [r0]
   21a20:	ldr	r1, [sp, #16]
   21a24:	and	r1, r1, #1
   21a28:	cmp	r1, #0
   21a2c:	movw	r1, #0
   21a30:	movne	r1, #1
   21a34:	tst	r1, #1
   21a38:	movw	r1, #0
   21a3c:	moveq	r1, #4
   21a40:	asr	r0, r0, r1
   21a44:	and	r0, r0, #15
   21a48:	ldr	r1, [fp, #-8]
   21a4c:	ldr	r1, [r1, #4]
   21a50:	strb	r0, [r1, #72]	; 0x48
   21a54:	ldr	r0, [sp, #32]
   21a58:	ldr	r1, [fp, #-8]
   21a5c:	str	r0, [r1, #4]
   21a60:	b	21b94 <rb_radixtree_elem_add+0x674>
   21a64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21a68:	ldr	r1, [sp, #24]
   21a6c:	add	r0, r0, r1, lsl #2
   21a70:	ldr	r0, [r0, #4]
   21a74:	ldr	r1, [sp, #32]
   21a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21a7c:	ldr	r2, [r2, #8]
   21a80:	ldr	r3, [sp, #16]
   21a84:	add	ip, r3, r3, lsr #31
   21a88:	ldrb	r2, [r2, ip, asr #1]
   21a8c:	mov	ip, #4
   21a90:	tst	r3, #1
   21a94:	movwne	ip, #0
   21a98:	mov	r3, #15
   21a9c:	and	r2, r3, r2, lsr ip
   21aa0:	add	r1, r1, r2, lsl #2
   21aa4:	str	r0, [r1, #4]
   21aa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21aac:	add	r0, r0, #4
   21ab0:	ldr	r1, [sp, #24]
   21ab4:	add	r0, r0, r1, lsl #2
   21ab8:	ldr	r0, [r0]
   21abc:	ldr	r0, [r0]
   21ac0:	cmn	r0, #1
   21ac4:	bne	21b24 <rb_radixtree_elem_add+0x604>
   21ac8:	ldr	r0, [sp, #32]
   21acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21ad0:	ldr	r2, [sp, #24]
   21ad4:	add	r1, r1, r2, lsl #2
   21ad8:	ldr	r1, [r1, #4]
   21adc:	str	r0, [r1, #12]
   21ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ae4:	ldr	r0, [r0, #8]
   21ae8:	ldr	r1, [sp, #16]
   21aec:	add	r2, r1, r1, lsr #31
   21af0:	ldrb	r0, [r0, r2, asr #1]
   21af4:	mov	r2, #4
   21af8:	tst	r1, #1
   21afc:	movwne	r2, #0
   21b00:	mov	r1, #15
   21b04:	and	r0, r1, r0, lsr r2
   21b08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b0c:	add	r1, r1, #4
   21b10:	ldr	r2, [sp, #24]
   21b14:	add	r1, r1, r2, lsl #2
   21b18:	ldr	r1, [r1]
   21b1c:	strb	r0, [r1, #16]
   21b20:	b	21b7c <rb_radixtree_elem_add+0x65c>
   21b24:	ldr	r0, [sp, #32]
   21b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b2c:	ldr	r2, [sp, #24]
   21b30:	add	r1, r1, r2, lsl #2
   21b34:	ldr	r1, [r1, #4]
   21b38:	str	r0, [r1, #68]	; 0x44
   21b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21b40:	ldr	r0, [r0, #8]
   21b44:	ldr	r1, [sp, #16]
   21b48:	add	r2, r1, r1, lsr #31
   21b4c:	ldrb	r0, [r0, r2, asr #1]
   21b50:	mov	r2, #4
   21b54:	tst	r1, #1
   21b58:	movwne	r2, #0
   21b5c:	mov	r1, #15
   21b60:	and	r0, r1, r0, lsr r2
   21b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b68:	add	r1, r1, #4
   21b6c:	ldr	r2, [sp, #24]
   21b70:	add	r1, r1, r2, lsl #2
   21b74:	ldr	r1, [r1]
   21b78:	strb	r0, [r1, #72]	; 0x48
   21b7c:	ldr	r0, [sp, #32]
   21b80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21b84:	add	r1, r1, #4
   21b88:	ldr	r2, [sp, #24]
   21b8c:	add	r1, r1, r2, lsl #2
   21b90:	str	r0, [r1]
   21b94:	b	21ba0 <rb_radixtree_elem_add+0x680>
   21b98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21b9c:	str	r0, [sp, #32]
   21ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ba4:	ldr	r1, [sp, #16]
   21ba8:	add	r2, r1, r1, lsr #31
   21bac:	ldrb	r0, [r0, r2, asr #1]
   21bb0:	mov	r2, #4
   21bb4:	tst	r1, #1
   21bb8:	movwne	r2, #0
   21bbc:	mov	r1, #15
   21bc0:	and	r0, r1, r0, lsr r2
   21bc4:	str	r0, [sp, #24]
   21bc8:	ldr	r0, [sp, #32]
   21bcc:	add	r0, r0, #4
   21bd0:	ldr	r1, [sp, #24]
   21bd4:	add	r0, r0, r1, lsl #2
   21bd8:	str	r0, [sp, #28]
   21bdc:	movw	r0, #20
   21be0:	bl	2078c <rb_malloc>
   21be4:	ldr	r1, [sp, #28]
   21be8:	str	r0, [r1]
   21bec:	ldr	r0, [sp, #28]
   21bf0:	ldr	r0, [r0]
   21bf4:	mvn	r1, #0
   21bf8:	str	r1, [r0]
   21bfc:	ldr	r0, [fp, #-16]
   21c00:	ldr	r1, [sp, #28]
   21c04:	ldr	r1, [r1]
   21c08:	str	r0, [r1, #4]
   21c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c10:	ldr	r1, [sp, #28]
   21c14:	ldr	r1, [r1]
   21c18:	str	r0, [r1, #8]
   21c1c:	ldr	r0, [sp, #32]
   21c20:	ldr	r1, [sp, #28]
   21c24:	ldr	r1, [r1]
   21c28:	str	r0, [r1, #12]
   21c2c:	ldr	r0, [sp, #24]
   21c30:	ldr	r1, [sp, #28]
   21c34:	ldr	r1, [r1]
   21c38:	strb	r0, [r1, #16]
   21c3c:	ldr	r0, [fp, #-8]
   21c40:	ldr	r1, [r0, #8]
   21c44:	add	r1, r1, #1
   21c48:	str	r1, [r0, #8]
   21c4c:	ldr	r0, [sp, #28]
   21c50:	ldr	r0, [r0]
   21c54:	str	r0, [fp, #-4]
   21c58:	ldr	r0, [fp, #-4]
   21c5c:	mov	sp, fp
   21c60:	pop	{fp, pc}

00021c64 <rb_radixtree_add>:
   21c64:	push	{fp, lr}
   21c68:	mov	fp, sp
   21c6c:	sub	sp, sp, #16
   21c70:	str	r0, [fp, #-4]
   21c74:	str	r1, [sp, #8]
   21c78:	str	r2, [sp, #4]
   21c7c:	ldr	r0, [fp, #-4]
   21c80:	ldr	r1, [sp, #8]
   21c84:	ldr	r2, [sp, #4]
   21c88:	bl	50ec <rb_radixtree_elem_add@plt>
   21c8c:	movw	r1, #0
   21c90:	cmp	r0, r1
   21c94:	movw	r0, #0
   21c98:	movne	r0, #1
   21c9c:	and	r0, r0, #1
   21ca0:	mov	sp, fp
   21ca4:	pop	{fp, pc}

00021ca8 <rb_radixtree_elem_delete>:
   21ca8:	push	{fp, lr}
   21cac:	mov	fp, sp
   21cb0:	sub	sp, sp, #40	; 0x28
   21cb4:	str	r0, [fp, #-4]
   21cb8:	str	r1, [fp, #-8]
   21cbc:	ldr	r0, [fp, #-8]
   21cc0:	str	r0, [fp, #-12]
   21cc4:	ldr	r0, [fp, #-12]
   21cc8:	ldrb	r0, [r0, #16]
   21ccc:	str	r0, [sp, #16]
   21cd0:	ldr	r0, [fp, #-12]
   21cd4:	ldr	r0, [r0, #12]
   21cd8:	str	r0, [fp, #-16]
   21cdc:	ldr	r0, [fp, #-12]
   21ce0:	ldr	r0, [r0, #8]
   21ce4:	bl	20de8 <rb_free>
   21ce8:	ldr	r0, [fp, #-12]
   21cec:	bl	20de8 <rb_free>
   21cf0:	ldr	r0, [fp, #-16]
   21cf4:	movw	r1, #0
   21cf8:	cmp	r0, r1
   21cfc:	beq	21e5c <rb_radixtree_elem_delete+0x1b4>
   21d00:	ldr	r0, [fp, #-16]
   21d04:	add	r0, r0, #4
   21d08:	ldr	r1, [sp, #16]
   21d0c:	add	r0, r0, r1, lsl #2
   21d10:	movw	r1, #0
   21d14:	str	r1, [r0]
   21d18:	ldr	r0, [fp, #-16]
   21d1c:	str	r0, [fp, #-12]
   21d20:	mvn	r0, #0
   21d24:	str	r0, [sp, #8]
   21d28:	str	r1, [sp, #12]
   21d2c:	ldr	r0, [sp, #12]
   21d30:	cmp	r0, #16
   21d34:	bge	21d98 <rb_radixtree_elem_delete+0xf0>
   21d38:	ldr	r0, [fp, #-12]
   21d3c:	add	r0, r0, #4
   21d40:	ldr	r1, [sp, #12]
   21d44:	add	r0, r0, r1, lsl #2
   21d48:	ldr	r0, [r0]
   21d4c:	movw	r1, #0
   21d50:	cmp	r0, r1
   21d54:	beq	21d84 <rb_radixtree_elem_delete+0xdc>
   21d58:	ldr	r0, [sp, #8]
   21d5c:	cmn	r0, #1
   21d60:	bne	21d70 <rb_radixtree_elem_delete+0xc8>
   21d64:	ldr	r0, [sp, #12]
   21d68:	str	r0, [sp, #4]
   21d6c:	b	21d7c <rb_radixtree_elem_delete+0xd4>
   21d70:	mvn	r0, #1
   21d74:	str	r0, [sp, #4]
   21d78:	b	21d7c <rb_radixtree_elem_delete+0xd4>
   21d7c:	ldr	r0, [sp, #4]
   21d80:	str	r0, [sp, #8]
   21d84:	b	21d88 <rb_radixtree_elem_delete+0xe0>
   21d88:	ldr	r0, [sp, #12]
   21d8c:	add	r0, r0, #1
   21d90:	str	r0, [sp, #12]
   21d94:	b	21d2c <rb_radixtree_elem_delete+0x84>
   21d98:	ldr	r0, [sp, #8]
   21d9c:	cmp	r0, #0
   21da0:	blt	21e58 <rb_radixtree_elem_delete+0x1b0>
   21da4:	ldr	r0, [fp, #-12]
   21da8:	add	r0, r0, #4
   21dac:	ldr	r1, [sp, #8]
   21db0:	add	r0, r0, r1, lsl #2
   21db4:	ldr	r0, [r0]
   21db8:	str	r0, [sp, #20]
   21dbc:	ldr	r0, [fp, #-12]
   21dc0:	ldrb	r0, [r0, #72]	; 0x48
   21dc4:	str	r0, [sp, #16]
   21dc8:	ldr	r0, [fp, #-12]
   21dcc:	ldr	r0, [r0, #68]	; 0x44
   21dd0:	str	r0, [fp, #-16]
   21dd4:	ldr	r0, [fp, #-16]
   21dd8:	movw	r1, #0
   21ddc:	cmp	r0, r1
   21de0:	beq	21e00 <rb_radixtree_elem_delete+0x158>
   21de4:	ldr	r0, [sp, #20]
   21de8:	ldr	r1, [fp, #-16]
   21dec:	add	r1, r1, #4
   21df0:	ldr	r2, [sp, #16]
   21df4:	add	r1, r1, r2, lsl #2
   21df8:	str	r0, [r1]
   21dfc:	b	21e0c <rb_radixtree_elem_delete+0x164>
   21e00:	ldr	r0, [sp, #20]
   21e04:	ldr	r1, [fp, #-4]
   21e08:	str	r0, [r1, #4]
   21e0c:	ldr	r0, [sp, #20]
   21e10:	ldr	r0, [r0]
   21e14:	cmn	r0, #1
   21e18:	bne	21e38 <rb_radixtree_elem_delete+0x190>
   21e1c:	ldr	r0, [fp, #-16]
   21e20:	ldr	r1, [sp, #20]
   21e24:	str	r0, [r1, #12]
   21e28:	ldr	r0, [sp, #16]
   21e2c:	ldr	r1, [sp, #20]
   21e30:	strb	r0, [r1, #16]
   21e34:	b	21e50 <rb_radixtree_elem_delete+0x1a8>
   21e38:	ldr	r0, [fp, #-16]
   21e3c:	ldr	r1, [sp, #20]
   21e40:	str	r0, [r1, #68]	; 0x44
   21e44:	ldr	r0, [sp, #16]
   21e48:	ldr	r1, [sp, #20]
   21e4c:	strb	r0, [r1, #72]	; 0x48
   21e50:	ldr	r0, [fp, #-12]
   21e54:	bl	20de8 <rb_free>
   21e58:	b	21e68 <rb_radixtree_elem_delete+0x1c0>
   21e5c:	ldr	r0, [fp, #-4]
   21e60:	movw	r1, #0
   21e64:	str	r1, [r0, #4]
   21e68:	ldr	r0, [fp, #-4]
   21e6c:	ldr	r1, [r0, #8]
   21e70:	mvn	r2, #0
   21e74:	add	r1, r1, r2
   21e78:	str	r1, [r0, #8]
   21e7c:	ldr	r0, [fp, #-4]
   21e80:	ldr	r0, [r0, #8]
   21e84:	cmp	r0, #0
   21e88:	bne	21e98 <rb_radixtree_elem_delete+0x1f0>
   21e8c:	ldr	r0, [fp, #-4]
   21e90:	movw	r1, #0
   21e94:	str	r1, [r0, #4]
   21e98:	mov	sp, fp
   21e9c:	pop	{fp, pc}

00021ea0 <rb_radixtree_retrieve>:
   21ea0:	push	{fp, lr}
   21ea4:	mov	fp, sp
   21ea8:	sub	sp, sp, #16
   21eac:	str	r0, [sp, #8]
   21eb0:	str	r1, [sp, #4]
   21eb4:	ldr	r0, [sp, #8]
   21eb8:	ldr	r1, [sp, #4]
   21ebc:	movw	r2, #0
   21ec0:	bl	5548 <rb_radixtree_elem_find@plt>
   21ec4:	str	r0, [sp]
   21ec8:	ldr	r0, [sp]
   21ecc:	movw	r1, #0
   21ed0:	cmp	r0, r1
   21ed4:	beq	21ee8 <rb_radixtree_retrieve+0x48>
   21ed8:	ldr	r0, [sp]
   21edc:	ldr	r0, [r0, #4]
   21ee0:	str	r0, [fp, #-4]
   21ee4:	b	21ef0 <rb_radixtree_retrieve+0x50>
   21ee8:	movw	r0, #0
   21eec:	str	r0, [fp, #-4]
   21ef0:	ldr	r0, [fp, #-4]
   21ef4:	mov	sp, fp
   21ef8:	pop	{fp, pc}

00021efc <rb_radixtree_elem_get_key>:
   21efc:	sub	sp, sp, #4
   21f00:	str	r0, [sp]
   21f04:	ldr	r0, [sp]
   21f08:	ldr	r0, [r0, #8]
   21f0c:	add	sp, sp, #4
   21f10:	bx	lr

00021f14 <rb_radixtree_elem_set_data>:
   21f14:	sub	sp, sp, #8
   21f18:	str	r0, [sp, #4]
   21f1c:	str	r1, [sp]
   21f20:	ldr	r0, [sp]
   21f24:	ldr	r1, [sp, #4]
   21f28:	str	r0, [r1, #4]
   21f2c:	add	sp, sp, #8
   21f30:	bx	lr

00021f34 <rb_radixtree_elem_get_data>:
   21f34:	sub	sp, sp, #4
   21f38:	str	r0, [sp]
   21f3c:	ldr	r0, [sp]
   21f40:	ldr	r0, [r0, #4]
   21f44:	add	sp, sp, #4
   21f48:	bx	lr

00021f4c <rb_radixtree_size>:
   21f4c:	sub	sp, sp, #4
   21f50:	str	r0, [sp]
   21f54:	ldr	r0, [sp]
   21f58:	ldr	r0, [r0, #8]
   21f5c:	add	sp, sp, #4
   21f60:	bx	lr

00021f64 <rb_radixtree_stats>:
   21f64:	push	{r4, r5, r6, sl, fp, lr}
   21f68:	add	fp, sp, #16
   21f6c:	sub	sp, sp, #328	; 0x148
   21f70:	str	r0, [fp, #-20]	; 0xffffffec
   21f74:	str	r1, [fp, #-24]	; 0xffffffe8
   21f78:	str	r2, [fp, #-28]	; 0xffffffe4
   21f7c:	movw	r0, #0
   21f80:	str	r0, [sp, #52]	; 0x34
   21f84:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f88:	ldr	r0, [r0, #8]
   21f8c:	cmp	r0, #0
   21f90:	bls	22024 <rb_radixtree_stats+0xc0>
   21f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   21f98:	ldr	r0, [r0, #4]
   21f9c:	movw	r1, #0
   21fa0:	add	r2, sp, #52	; 0x34
   21fa4:	bl	220bc <stats_recurse>
   21fa8:	ldr	r1, [pc, #260]	; 220b4 <rb_radixtree_stats+0x150>
   21fac:	add	r2, pc, r1
   21fb0:	ldr	r1, [pc, #256]	; 220b8 <rb_radixtree_stats+0x154>
   21fb4:	add	r1, pc, r1
   21fb8:	add	lr, sp, #60	; 0x3c
   21fbc:	str	r0, [sp, #56]	; 0x38
   21fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   21fc4:	ldr	r3, [r0, #12]
   21fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   21fcc:	ldr	r0, [r0, #8]
   21fd0:	ldr	ip, [sp, #56]	; 0x38
   21fd4:	ldr	r4, [sp, #56]	; 0x38
   21fd8:	ldr	r5, [fp, #-20]	; 0xffffffec
   21fdc:	ldr	r5, [r5, #8]
   21fe0:	udiv	r4, r4, r5
   21fe4:	ldr	r5, [sp, #52]	; 0x34
   21fe8:	str	r0, [sp, #48]	; 0x30
   21fec:	mov	r0, lr
   21ff0:	movw	lr, #256	; 0x100
   21ff4:	str	r1, [sp, #44]	; 0x2c
   21ff8:	mov	r1, lr
   21ffc:	ldr	lr, [sp, #44]	; 0x2c
   22000:	str	lr, [sp]
   22004:	ldr	r6, [sp, #48]	; 0x30
   22008:	str	r6, [sp, #4]
   2200c:	str	ip, [sp, #8]
   22010:	str	r4, [sp, #12]
   22014:	str	r5, [sp, #16]
   22018:	bl	5584 <snprintf@plt>
   2201c:	str	r0, [sp, #40]	; 0x28
   22020:	b	22084 <rb_radixtree_stats+0x120>
   22024:	ldr	r0, [pc, #124]	; 220a8 <rb_radixtree_stats+0x144>
   22028:	add	r2, pc, r0
   2202c:	ldr	r0, [pc, #120]	; 220ac <rb_radixtree_stats+0x148>
   22030:	add	r0, pc, r0
   22034:	ldr	r1, [pc, #116]	; 220b0 <rb_radixtree_stats+0x14c>
   22038:	add	r1, pc, r1
   2203c:	add	r3, sp, #60	; 0x3c
   22040:	ldr	ip, [fp, #-20]	; 0xffffffec
   22044:	ldr	ip, [ip, #12]
   22048:	str	r0, [sp, #36]	; 0x24
   2204c:	mov	r0, r3
   22050:	movw	r3, #256	; 0x100
   22054:	str	r1, [sp, #32]
   22058:	mov	r1, r3
   2205c:	mov	r3, ip
   22060:	ldr	ip, [sp, #36]	; 0x24
   22064:	str	ip, [sp]
   22068:	ldr	lr, [sp, #32]
   2206c:	str	lr, [sp, #4]
   22070:	str	lr, [sp, #8]
   22074:	str	lr, [sp, #12]
   22078:	str	lr, [sp, #16]
   2207c:	bl	5584 <snprintf@plt>
   22080:	str	r0, [sp, #28]
   22084:	add	r0, sp, #60	; 0x3c
   22088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2208c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22090:	str	r1, [sp, #24]
   22094:	mov	r1, r2
   22098:	ldr	r2, [sp, #24]
   2209c:	blx	r2
   220a0:	sub	sp, fp, #16
   220a4:	pop	{r4, r5, r6, sl, fp, pc}
   220a8:	.word	0x00001cb9
   220ac:	.word	0x00001cd5
   220b0:	.word	0x00000e7a
   220b4:	.word	0x00001d0c
   220b8:	.word	0x00001d51

000220bc <stats_recurse>:
   220bc:	push	{fp, lr}
   220c0:	mov	fp, sp
   220c4:	sub	sp, sp, #32
   220c8:	str	r0, [fp, #-8]
   220cc:	str	r1, [fp, #-12]
   220d0:	str	r2, [sp, #16]
   220d4:	movw	r0, #0
   220d8:	str	r0, [sp, #12]
   220dc:	ldr	r0, [fp, #-12]
   220e0:	ldr	r1, [sp, #16]
   220e4:	ldr	r1, [r1]
   220e8:	cmp	r0, r1
   220ec:	ble	220fc <stats_recurse+0x40>
   220f0:	ldr	r0, [fp, #-12]
   220f4:	ldr	r1, [sp, #16]
   220f8:	str	r0, [r1]
   220fc:	ldr	r0, [fp, #-12]
   22100:	cmp	r0, #0
   22104:	bne	22124 <stats_recurse+0x68>
   22108:	ldr	r0, [fp, #-8]
   2210c:	ldr	r0, [r0]
   22110:	cmn	r0, #1
   22114:	bne	2211c <stats_recurse+0x60>
   22118:	b	22120 <stats_recurse+0x64>
   2211c:	b	22120 <stats_recurse+0x64>
   22120:	b	22124 <stats_recurse+0x68>
   22124:	ldr	r0, [fp, #-8]
   22128:	ldr	r0, [r0]
   2212c:	cmn	r0, #1
   22130:	bne	22140 <stats_recurse+0x84>
   22134:	ldr	r0, [fp, #-12]
   22138:	str	r0, [fp, #-4]
   2213c:	b	221d4 <stats_recurse+0x118>
   22140:	movw	r0, #0
   22144:	str	r0, [sp, #8]
   22148:	ldr	r0, [sp, #8]
   2214c:	cmp	r0, #16
   22150:	bge	221cc <stats_recurse+0x110>
   22154:	ldr	r0, [fp, #-8]
   22158:	add	r0, r0, #4
   2215c:	ldr	r1, [sp, #8]
   22160:	add	r0, r0, r1, lsl #2
   22164:	ldr	r0, [r0]
   22168:	str	r0, [sp, #4]
   2216c:	ldr	r0, [sp, #4]
   22170:	movw	r1, #0
   22174:	cmp	r0, r1
   22178:	bne	22180 <stats_recurse+0xc4>
   2217c:	b	221bc <stats_recurse+0x100>
   22180:	ldr	r0, [sp, #4]
   22184:	ldr	r1, [fp, #-12]
   22188:	add	r1, r1, #1
   2218c:	ldr	r2, [sp, #16]
   22190:	bl	220bc <stats_recurse>
   22194:	ldr	r1, [sp, #12]
   22198:	add	r0, r1, r0
   2219c:	str	r0, [sp, #12]
   221a0:	ldr	r0, [sp, #4]
   221a4:	ldr	r0, [r0]
   221a8:	cmn	r0, #1
   221ac:	bne	221b4 <stats_recurse+0xf8>
   221b0:	b	221b8 <stats_recurse+0xfc>
   221b4:	b	221b8 <stats_recurse+0xfc>
   221b8:	b	221bc <stats_recurse+0x100>
   221bc:	ldr	r0, [sp, #8]
   221c0:	add	r0, r0, #1
   221c4:	str	r0, [sp, #8]
   221c8:	b	22148 <stats_recurse+0x8c>
   221cc:	ldr	r0, [sp, #12]
   221d0:	str	r0, [fp, #-4]
   221d4:	ldr	r0, [fp, #-4]
   221d8:	mov	sp, fp
   221dc:	pop	{fp, pc}

000221e0 <rb_radixtree_stats_walk>:
   221e0:	push	{fp, lr}
   221e4:	mov	fp, sp
   221e8:	sub	sp, sp, #16
   221ec:	ldr	r2, [pc, #76]	; 22240 <rb_radixtree_stats_walk+0x60>
   221f0:	ldr	r2, [pc, r2]
   221f4:	str	r0, [fp, #-4]
   221f8:	str	r1, [sp, #8]
   221fc:	ldr	r0, [r2]
   22200:	str	r0, [sp, #4]
   22204:	ldr	r0, [sp, #4]
   22208:	movw	r1, #0
   2220c:	cmp	r0, r1
   22210:	beq	22238 <rb_radixtree_stats_walk+0x58>
   22214:	ldr	r0, [sp, #4]
   22218:	ldr	r0, [r0]
   2221c:	ldr	r1, [fp, #-4]
   22220:	ldr	r2, [sp, #8]
   22224:	bl	5008 <rb_radixtree_stats@plt>
   22228:	ldr	r0, [sp, #4]
   2222c:	ldr	r0, [r0, #8]
   22230:	str	r0, [sp, #4]
   22234:	b	22204 <rb_radixtree_stats_walk+0x24>
   22238:	mov	sp, fp
   2223c:	pop	{fp, pc}
   22240:	.word	0x00013204

00022244 <__stat>:
   22244:	mov	r2, r1
   22248:	mov	r1, r0
   2224c:	mov	r0, #3
   22250:	b	4e4c <__xstat@plt>

00022254 <__fstat>:
   22254:	mov	r2, r1
   22258:	mov	r1, r0
   2225c:	mov	r0, #3
   22260:	b	5530 <__fxstat@plt>

Disassembly of section .fini:

00022264 <_fini>:
   22264:	push	{r3, lr}
   22268:	pop	{r3, pc}
