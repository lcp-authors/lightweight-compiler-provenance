
../repos/charybdis/extensions/.libs/hurt.so:     file format elf32-littlearm


Disassembly of section .init:

00000a5c <_init>:
 a5c:	push	{r3, lr}
 a60:	bl	bfc <call_weak_fn>
 a64:	pop	{r3, pc}

Disassembly of section .plt:

00000a68 <.plt>:
 a68:	push	{lr}		; (str lr, [sp, #-4]!)
 a6c:	ldr	lr, [pc, #4]	; a78 <.plt+0x10>
 a70:	add	lr, pc, lr
 a74:	ldr	pc, [lr, #8]!
 a78:	.word	0x00012588

00000a7c <calloc@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #73728	; 0x12000
 a84:	ldr	pc, [ip, #1416]!	; 0x588

00000a88 <get_client_name@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #73728	; 0x12000
 a90:	ldr	pc, [ip, #1408]!	; 0x580

00000a94 <rb_current_time@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #73728	; 0x12000
 a9c:	ldr	pc, [ip, #1400]!	; 0x578

00000aa0 <rb_event_add@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #73728	; 0x12000
 aa8:	ldr	pc, [ip, #1392]!	; 0x570

00000aac <__cxa_finalize@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #73728	; 0x12000
 ab4:	ldr	pc, [ip, #1384]!	; 0x568

00000ab8 <strtol@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #73728	; 0x12000
 ac0:	ldr	pc, [ip, #1376]!	; 0x560

00000ac4 <sendto_one@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #73728	; 0x12000
 acc:	ldr	pc, [ip, #1368]!	; 0x558

00000ad0 <rb_event_delete@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #73728	; 0x12000
 ad8:	ldr	pc, [ip, #1360]!	; 0x550

00000adc <free@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #73728	; 0x12000
 ae4:	ldr	pc, [ip, #1352]!	; 0x548

00000ae8 <rb_strcasecmp@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #73728	; 0x12000
 af0:	ldr	pc, [ip, #1344]!	; 0x540

00000af4 <rb_outofmemory@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #73728	; 0x12000
 afc:	ldr	pc, [ip, #1336]!	; 0x538

00000b00 <sendto_realops_snomask@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #73728	; 0x12000
 b08:	ldr	pc, [ip, #1328]!	; 0x530

00000b0c <get_oper_name@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #73728	; 0x12000
 b14:	ldr	pc, [ip, #1320]!	; 0x528

00000b18 <rb_free_rb_dlink_node@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #73728	; 0x12000
 b20:	ldr	pc, [ip, #1312]!	; 0x520

00000b24 <strcpy@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #73728	; 0x12000
 b2c:	ldr	pc, [ip, #1304]!	; 0x518

00000b30 <sendto_server@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #73728	; 0x12000
 b38:	ldr	pc, [ip, #1296]!	; 0x510

00000b3c <malloc@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #73728	; 0x12000
 b44:	ldr	pc, [ip, #1288]!	; 0x508

00000b48 <__gmon_start__@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #73728	; 0x12000
 b50:	ldr	pc, [ip, #1280]!	; 0x500

00000b54 <rb_make_rb_dlink_node@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #73728	; 0x12000
 b5c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b60 <sendto_one_numeric@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #73728	; 0x12000
 b68:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b6c <strlen@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #73728	; 0x12000
 b74:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b78 <strchr@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #73728	; 0x12000
 b80:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b84 <clean_nick@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #73728	; 0x12000
 b8c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b90 <match@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #73728	; 0x12000
 b98:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b9c <find_person@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #73728	; 0x12000
 ba4:	ldr	pc, [ip, #1224]!	; 0x4c8

00000ba8 <valid_temp_time@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #73728	; 0x12000
 bb0:	ldr	pc, [ip, #1216]!	; 0x4c0

00000bb4 <sendto_one_notice@plt>:
 bb4:	add	ip, pc, #0, 12
 bb8:	add	ip, ip, #73728	; 0x12000
 bbc:	ldr	pc, [ip, #1208]!	; 0x4b8

00000bc0 <find_named_person@plt>:
 bc0:	add	ip, pc, #0, 12
 bc4:	add	ip, ip, #73728	; 0x12000
 bc8:	ldr	pc, [ip, #1200]!	; 0x4b0

00000bcc <exit_client@plt>:
 bcc:	add	ip, pc, #0, 12
 bd0:	add	ip, ip, #73728	; 0x12000
 bd4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000bd8 <privilegeset_in_set@plt>:
 bd8:	add	ip, pc, #0, 12
 bdc:	add	ip, ip, #73728	; 0x12000
 be0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000be4 <strncmp@plt>:
 be4:	add	ip, pc, #0, 12
 be8:	add	ip, ip, #73728	; 0x12000
 bec:	ldr	pc, [ip, #1176]!	; 0x498

00000bf0 <__assert_fail@plt>:
 bf0:	add	ip, pc, #0, 12
 bf4:	add	ip, ip, #73728	; 0x12000
 bf8:	ldr	pc, [ip, #1168]!	; 0x490

Disassembly of section .text:

00000bfc <call_weak_fn>:
     bfc:	ldr	r3, [pc, #20]	; c18 <call_weak_fn+0x1c>
     c00:	ldr	r2, [pc, #20]	; c1c <call_weak_fn+0x20>
     c04:	add	r3, pc, r3
     c08:	ldr	r2, [r3, r2]
     c0c:	cmp	r2, #0
     c10:	bxeq	lr
     c14:	b	b48 <__gmon_start__@plt>
     c18:	.word	0x000123f4
     c1c:	.word	0x000000a4

00000c20 <deregister_tm_clones>:
     c20:	ldr	r0, [pc, #44]	; c54 <deregister_tm_clones+0x34>
     c24:	ldr	r3, [pc, #44]	; c58 <deregister_tm_clones+0x38>
     c28:	add	r0, pc, r0
     c2c:	add	r3, pc, r3
     c30:	cmp	r3, r0
     c34:	ldr	r3, [pc, #32]	; c5c <deregister_tm_clones+0x3c>
     c38:	add	r3, pc, r3
     c3c:	bxeq	lr
     c40:	ldr	r2, [pc, #24]	; c60 <deregister_tm_clones+0x40>
     c44:	ldr	r3, [r3, r2]
     c48:	cmp	r3, #0
     c4c:	bxeq	lr
     c50:	bx	r3
     c54:	.word	0x00012594
     c58:	.word	0x00012590
     c5c:	.word	0x000123c0
     c60:	.word	0x00000094

00000c64 <register_tm_clones>:
     c64:	ldr	r0, [pc, #56]	; ca4 <register_tm_clones+0x40>
     c68:	ldr	r3, [pc, #56]	; ca8 <register_tm_clones+0x44>
     c6c:	add	r0, pc, r0
     c70:	add	r3, pc, r3
     c74:	sub	r1, r3, r0
     c78:	ldr	r3, [pc, #44]	; cac <register_tm_clones+0x48>
     c7c:	asr	r1, r1, #2
     c80:	add	r3, pc, r3
     c84:	add	r1, r1, r1, lsr #31
     c88:	asrs	r1, r1, #1
     c8c:	bxeq	lr
     c90:	ldr	r2, [pc, #24]	; cb0 <register_tm_clones+0x4c>
     c94:	ldr	r3, [r3, r2]
     c98:	cmp	r3, #0
     c9c:	bxeq	lr
     ca0:	bx	r3
     ca4:	.word	0x00012550
     ca8:	.word	0x0001254c
     cac:	.word	0x00012378
     cb0:	.word	0x000000a8

00000cb4 <__do_global_dtors_aux>:
     cb4:	ldr	r3, [pc, #76]	; d08 <__do_global_dtors_aux+0x54>
     cb8:	ldr	r2, [pc, #76]	; d0c <__do_global_dtors_aux+0x58>
     cbc:	add	r3, pc, r3
     cc0:	add	r2, pc, r2
     cc4:	ldrb	r3, [r3]
     cc8:	cmp	r3, #0
     ccc:	bxne	lr
     cd0:	ldr	r3, [pc, #56]	; d10 <__do_global_dtors_aux+0x5c>
     cd4:	push	{r4, lr}
     cd8:	ldr	r3, [r2, r3]
     cdc:	cmp	r3, #0
     ce0:	beq	cf0 <__do_global_dtors_aux+0x3c>
     ce4:	ldr	r3, [pc, #40]	; d14 <__do_global_dtors_aux+0x60>
     ce8:	ldr	r0, [pc, r3]
     cec:	bl	aac <__cxa_finalize@plt>
     cf0:	bl	c20 <deregister_tm_clones>
     cf4:	ldr	r3, [pc, #28]	; d18 <__do_global_dtors_aux+0x64>
     cf8:	mov	r2, #1
     cfc:	add	r3, pc, r3
     d00:	strb	r2, [r3]
     d04:	pop	{r4, pc}
     d08:	.word	0x00012500
     d0c:	.word	0x00012338
     d10:	.word	0x0000008c
     d14:	.word	0x000123c4
     d18:	.word	0x000124c0

00000d1c <frame_dummy>:
     d1c:	b	c64 <register_tm_clones>

00000d20 <me_hurt>:
     d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     d24:	add	fp, sp, #28
     d28:	sub	sp, sp, #12
     d2c:	cmp	r3, #4
     d30:	blt	edc <me_hurt+0x1bc>
     d34:	ldrh	r0, [r2, #80]	; 0x50
     d38:	mov	r5, r2
     d3c:	cmp	r0, #64	; 0x40
     d40:	bne	edc <me_hurt+0x1bc>
     d44:	ldr	r0, [r5, #24]
     d48:	cmp	r0, #0
     d4c:	beq	edc <me_hurt+0x1bc>
     d50:	ldr	sl, [fp, #8]
     d54:	mov	r1, #0
     d58:	mov	r2, #10
     d5c:	ldr	r0, [sl, #4]
     d60:	bl	ab8 <strtol@plt>
     d64:	cmp	r0, #1
     d68:	blt	edc <me_hurt+0x1bc>
     d6c:	ldr	r8, [pc, #404]	; f08 <me_hurt+0x1e8>
     d70:	mov	r9, r0
     d74:	ldr	r8, [pc, r8]
     d78:	ldr	r4, [r8]
     d7c:	cmp	r4, #0
     d80:	beq	db8 <me_hurt+0x98>
     d84:	ldr	r6, [sl, #8]
     d88:	ldr	r7, [r4]
     d8c:	mov	r1, r6
     d90:	ldr	r0, [r7]
     d94:	bl	b90 <match@plt>
     d98:	cmp	r0, #0
     d9c:	bne	db0 <me_hurt+0x90>
     da0:	ldr	r4, [r4, #8]
     da4:	cmp	r4, #0
     da8:	bne	d88 <me_hurt+0x68>
     dac:	b	db8 <me_hurt+0x98>
     db0:	cmp	r7, #0
     db4:	bne	edc <me_hurt+0x1bc>
     db8:	ldr	r0, [sl, #12]
     dbc:	cmp	r0, #0
     dc0:	beq	edc <me_hurt+0x1bc>
     dc4:	ldrb	r0, [r0]
     dc8:	cmp	r0, #0
     dcc:	beq	edc <me_hurt+0x1bc>
     dd0:	mov	r0, r5
     dd4:	bl	b0c <get_oper_name@plt>
     dd8:	movw	r2, #34953	; 0x8889
     ddc:	mov	r3, r0
     de0:	ldr	r0, [sl, #8]
     de4:	ldr	r1, [sl, #12]
     de8:	movt	r2, #34952	; 0x8888
     dec:	smmla	r2, r9, r2, r9
     df0:	asr	r7, r2, #5
     df4:	add	r2, r7, r2, lsr #31
     df8:	stm	sp, {r0, r2}
     dfc:	str	r1, [sp, #8]
     e00:	mov	r0, #256	; 0x100
     e04:	mov	r1, #0
     e08:	ldr	r2, [pc, #252]	; f0c <me_hurt+0x1ec>
     e0c:	add	r2, pc, r2
     e10:	bl	b00 <sendto_realops_snomask@plt>
     e14:	ldr	r6, [sl, #8]
     e18:	ldr	r7, [sl, #12]
     e1c:	mov	r0, #1
     e20:	mov	r1, #20
     e24:	bl	a7c <calloc@plt>
     e28:	cmp	r0, #0
     e2c:	beq	ee4 <me_hurt+0x1c4>
     e30:	mov	r5, r0
     e34:	mov	r0, r6
     e38:	bl	b6c <strlen@plt>
     e3c:	add	r0, r0, #1
     e40:	bl	b3c <malloc@plt>
     e44:	cmp	r0, #0
     e48:	beq	ee4 <me_hurt+0x1c4>
     e4c:	mov	r1, r6
     e50:	bl	b24 <strcpy@plt>
     e54:	str	r0, [r5]
     e58:	mov	r0, r7
     e5c:	bl	b6c <strlen@plt>
     e60:	add	r0, r0, #1
     e64:	bl	b3c <malloc@plt>
     e68:	cmp	r0, #0
     e6c:	beq	ee4 <me_hurt+0x1c4>
     e70:	mov	r1, r7
     e74:	bl	b24 <strcpy@plt>
     e78:	str	r0, [r5, #12]
     e7c:	bl	a94 <rb_current_time@plt>
     e80:	add	r0, r0, r9
     e84:	str	r0, [r5, #16]
     e88:	bl	b54 <rb_make_rb_dlink_node@plt>
     e8c:	cmp	r0, #0
     e90:	beq	ee8 <me_hurt+0x1c8>
     e94:	mov	r1, #0
     e98:	str	r1, [r0, #4]
     e9c:	str	r5, [r0]
     ea0:	ldr	r1, [r8]
     ea4:	cmp	r1, #0
     ea8:	str	r1, [r0, #8]
     eac:	beq	ebc <me_hurt+0x19c>
     eb0:	add	r1, r1, #4
     eb4:	str	r0, [r1]
     eb8:	b	ecc <me_hurt+0x1ac>
     ebc:	mov	r1, r8
     ec0:	ldr	r2, [r1, #4]!
     ec4:	cmp	r2, #0
     ec8:	streq	r0, [r1]
     ecc:	str	r0, [r8]
     ed0:	ldr	r0, [r8, #8]
     ed4:	add	r0, r0, #1
     ed8:	str	r0, [r8, #8]
     edc:	sub	sp, fp, #28
     ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ee4:	bl	af4 <rb_outofmemory@plt>
     ee8:	ldr	r0, [pc, #32]	; f10 <me_hurt+0x1f0>
     eec:	ldr	r1, [pc, #32]	; f14 <me_hurt+0x1f4>
     ef0:	ldr	r3, [pc, #32]	; f18 <me_hurt+0x1f8>
     ef4:	mov	r2, #144	; 0x90
     ef8:	add	r0, pc, r0
     efc:	add	r1, pc, r1
     f00:	add	r3, pc, r3
     f04:	bl	bf0 <__assert_fail@plt>
     f08:	.word	0x00012314
     f0c:	.word	0x00001511
     f10:	.word	0x00001356
     f14:	.word	0x000012cd
     f18:	.word	0x00001454

00000f1c <mo_hurt>:
     f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f20:	add	fp, sp, #28
     f24:	sub	sp, sp, #20
     f28:	ldr	r0, [r2, #24]
     f2c:	mov	r4, r2
     f30:	cmp	r0, #0
     f34:	beq	f70 <mo_hurt+0x54>
     f38:	ldr	r0, [r0, #36]	; 0x24
     f3c:	cmp	r0, #0
     f40:	beq	f70 <mo_hurt+0x54>
     f44:	ldr	r6, [fp, #8]
     f48:	ldr	r1, [pc, #836]	; 1294 <mo_hurt+0x378>
     f4c:	mov	r5, r3
     f50:	add	r1, pc, r1
     f54:	bl	bd8 <privilegeset_in_set@plt>
     f58:	cmp	r0, #0
     f5c:	beq	f70 <mo_hurt+0x54>
     f60:	cmp	r5, #3
     f64:	bne	fa4 <mo_hurt+0x88>
     f68:	ldmib	r6, {r7, r9}
     f6c:	b	fd8 <mo_hurt+0xbc>
     f70:	ldr	r0, [pc, #832]	; 12b8 <mo_hurt+0x39c>
     f74:	add	r3, r4, #88	; 0x58
     f78:	add	r0, pc, r0
     f7c:	str	r0, [sp]
     f80:	ldr	r0, [pc, #820]	; 12bc <mo_hurt+0x3a0>
     f84:	ldr	r0, [pc, r0]
     f88:	ldr	r1, [pc, #816]	; 12c0 <mo_hurt+0x3a4>
     f8c:	add	r2, r0, #88	; 0x58
     f90:	add	r1, pc, r1
     f94:	mov	r0, r4
     f98:	bl	ac4 <sendto_one@plt>
     f9c:	sub	sp, fp, #28
     fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     fa4:	ldmib	r6, {r0, r7, r9}
     fa8:	cmp	r0, #0
     fac:	beq	fd8 <mo_hurt+0xbc>
     fb0:	bl	ba8 <valid_temp_time@plt>
     fb4:	mov	sl, r0
     fb8:	cmp	r0, #0
     fbc:	bgt	fdc <mo_hurt+0xc0>
     fc0:	ldr	r1, [pc, #724]	; 129c <mo_hurt+0x380>
     fc4:	add	r1, pc, r1
     fc8:	mov	r0, r4
     fcc:	sub	sp, fp, #28
     fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fd4:	b	bb4 <sendto_one_notice@plt>
     fd8:	movw	sl, #10080	; 0x2760
     fdc:	cmp	r9, #0
     fe0:	beq	1078 <mo_hurt+0x15c>
     fe4:	ldrb	r0, [r9]
     fe8:	cmp	r0, #0
     fec:	beq	1078 <mo_hurt+0x15c>
     ff0:	mov	r0, r7
     ff4:	mov	r1, #46	; 0x2e
     ff8:	bl	b78 <strchr@plt>
     ffc:	cmp	r0, #0
    1000:	bne	1018 <mo_hurt+0xfc>
    1004:	mov	r0, r7
    1008:	mov	r1, #58	; 0x3a
    100c:	bl	b78 <strchr@plt>
    1010:	cmp	r0, #0
    1014:	beq	1090 <mo_hurt+0x174>
    1018:	ldr	r1, [pc, #640]	; 12a0 <mo_hurt+0x384>
    101c:	mov	r0, r7
    1020:	mov	r2, #2
    1024:	add	r1, pc, r1
    1028:	bl	be4 <strncmp@plt>
    102c:	cmp	r0, #0
    1030:	mov	r1, #33	; 0x21
    1034:	addeq	r7, r7, #2
    1038:	mov	r0, r7
    103c:	bl	b78 <strchr@plt>
    1040:	cmp	r0, #0
    1044:	bne	105c <mo_hurt+0x140>
    1048:	mov	r0, r7
    104c:	mov	r1, #64	; 0x40
    1050:	bl	b78 <strchr@plt>
    1054:	cmp	r0, #0
    1058:	beq	10a4 <mo_hurt+0x188>
    105c:	ldr	r1, [pc, #612]	; 12c8 <mo_hurt+0x3ac>
    1060:	mov	r0, r4
    1064:	mov	r2, r7
    1068:	add	r1, pc, r1
    106c:	sub	sp, fp, #28
    1070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1074:	b	bb4 <sendto_one_notice@plt>
    1078:	ldr	r1, [pc, #536]	; 1298 <mo_hurt+0x37c>
    107c:	add	r1, pc, r1
    1080:	mov	r0, r4
    1084:	sub	sp, fp, #28
    1088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    108c:	b	bb4 <sendto_one_notice@plt>
    1090:	mov	r0, r7
    1094:	bl	bc0 <find_named_person@plt>
    1098:	cmp	r0, #0
    109c:	beq	1250 <mo_hurt+0x334>
    10a0:	add	r7, r0, #227	; 0xe3
    10a4:	ldr	r0, [pc, #504]	; 12a4 <mo_hurt+0x388>
    10a8:	ldr	r0, [pc, r0]
    10ac:	ldr	r6, [r0]
    10b0:	cmp	r6, #0
    10b4:	beq	10dc <mo_hurt+0x1c0>
    10b8:	ldr	r5, [r6]
    10bc:	mov	r1, r7
    10c0:	ldr	r0, [r5]
    10c4:	bl	b90 <match@plt>
    10c8:	cmp	r0, #0
    10cc:	bne	11c0 <mo_hurt+0x2a4>
    10d0:	ldr	r6, [r6, #8]
    10d4:	cmp	r6, #0
    10d8:	bne	10b8 <mo_hurt+0x19c>
    10dc:	mov	r0, r4
    10e0:	bl	b0c <get_oper_name@plt>
    10e4:	mov	r3, r0
    10e8:	movw	r0, #34953	; 0x8889
    10ec:	str	r7, [sp]
    10f0:	movt	r0, #34952	; 0x8888
    10f4:	smmla	r0, sl, r0, sl
    10f8:	asr	r1, r0, #5
    10fc:	add	r0, r1, r0, lsr #31
    1100:	mov	r1, #0
    1104:	stmib	sp, {r0, r9}
    1108:	mov	r0, #256	; 0x100
    110c:	ldr	r2, [pc, #404]	; 12a8 <mo_hurt+0x38c>
    1110:	add	r2, pc, r2
    1114:	bl	b00 <sendto_realops_snomask@plt>
    1118:	mov	r0, #1
    111c:	mov	r1, #20
    1120:	bl	a7c <calloc@plt>
    1124:	cmp	r0, #0
    1128:	beq	1270 <mo_hurt+0x354>
    112c:	mov	r8, r0
    1130:	mov	r0, r7
    1134:	bl	b6c <strlen@plt>
    1138:	add	r0, r0, #1
    113c:	bl	b3c <malloc@plt>
    1140:	cmp	r0, #0
    1144:	beq	1270 <mo_hurt+0x354>
    1148:	mov	r1, r7
    114c:	bl	b24 <strcpy@plt>
    1150:	str	r0, [r8]
    1154:	mov	r0, r9
    1158:	bl	b6c <strlen@plt>
    115c:	add	r0, r0, #1
    1160:	bl	b3c <malloc@plt>
    1164:	cmp	r0, #0
    1168:	beq	1270 <mo_hurt+0x354>
    116c:	mov	r1, r9
    1170:	bl	b24 <strcpy@plt>
    1174:	str	r0, [r8, #12]
    1178:	bl	a94 <rb_current_time@plt>
    117c:	add	r5, r0, sl
    1180:	str	r5, [r8, #16]
    1184:	bl	b54 <rb_make_rb_dlink_node@plt>
    1188:	cmp	r0, #0
    118c:	beq	1274 <mo_hurt+0x358>
    1190:	mov	r1, #0
    1194:	str	r1, [r0, #4]
    1198:	str	r8, [r0]
    119c:	ldr	r3, [pc, #264]	; 12ac <mo_hurt+0x390>
    11a0:	ldr	r3, [pc, r3]
    11a4:	ldr	r1, [r3]
    11a8:	cmp	r1, #0
    11ac:	str	r1, [r0, #8]
    11b0:	beq	11e4 <mo_hurt+0x2c8>
    11b4:	add	r1, r1, #4
    11b8:	str	r0, [r1]
    11bc:	b	11f4 <mo_hurt+0x2d8>
    11c0:	cmp	r5, #0
    11c4:	beq	10dc <mo_hurt+0x1c0>
    11c8:	ldr	r1, [pc, #252]	; 12cc <mo_hurt+0x3b0>
    11cc:	mov	r0, r4
    11d0:	mov	r2, r7
    11d4:	add	r1, pc, r1
    11d8:	sub	sp, fp, #28
    11dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    11e0:	b	ac4 <sendto_one@plt>
    11e4:	mov	r1, r3
    11e8:	ldr	r2, [r1, #4]!
    11ec:	cmp	r2, #0
    11f0:	streq	r0, [r1]
    11f4:	str	r0, [r3]
    11f8:	ldr	r0, [r3, #8]
    11fc:	add	r0, r0, #1
    1200:	str	r0, [r3, #8]
    1204:	bl	a94 <rb_current_time@plt>
    1208:	ldr	r1, [r8]
    120c:	ldr	r2, [r8, #12]
    1210:	ldr	r7, [pc, #152]	; 12b0 <mo_hurt+0x394>
    1214:	add	r3, r4, #88	; 0x58
    1218:	sub	r0, r5, r0
    121c:	str	r3, [sp, #4]
    1220:	add	r3, sp, #8
    1224:	add	r7, pc, r7
    1228:	str	r7, [sp]
    122c:	stm	r3, {r0, r1, r2}
    1230:	mov	r1, #0
    1234:	mov	r2, #0
    1238:	mov	r3, #0
    123c:	ldr	r0, [pc, #112]	; 12b4 <mo_hurt+0x398>
    1240:	ldr	r0, [pc, r0]
    1244:	bl	b30 <sendto_server@plt>
    1248:	sub	sp, fp, #28
    124c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1250:	ldr	r2, [pc, #108]	; 12c4 <mo_hurt+0x3a8>
    1254:	mov	r0, r4
    1258:	movw	r1, #401	; 0x191
    125c:	mov	r3, r7
    1260:	add	r2, pc, r2
    1264:	sub	sp, fp, #28
    1268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    126c:	b	b60 <sendto_one_numeric@plt>
    1270:	bl	af4 <rb_outofmemory@plt>
    1274:	ldr	r0, [pc, #84]	; 12d0 <mo_hurt+0x3b4>
    1278:	ldr	r1, [pc, #84]	; 12d4 <mo_hurt+0x3b8>
    127c:	ldr	r3, [pc, #84]	; 12d8 <mo_hurt+0x3bc>
    1280:	mov	r2, #144	; 0x90
    1284:	add	r0, pc, r0
    1288:	add	r1, pc, r1
    128c:	add	r3, pc, r3
    1290:	bl	bf0 <__assert_fail@plt>
    1294:	.word	0x00001308
    1298:	.word	0x00001231
    129c:	.word	0x000012c6
    12a0:	.word	0x000012cb
    12a4:	.word	0x00011fe0
    12a8:	.word	0x0000120d
    12ac:	.word	0x00011ee8
    12b0:	.word	0x0000116b
    12b4:	.word	0x00011e64
    12b8:	.word	0x000012e5
    12bc:	.word	0x00012120
    12c0:	.word	0x000012d3
    12c4:	.word	0x00001076
    12c8:	.word	0x0000128a
    12cc:	.word	0x00001136
    12d0:	.word	0x00000fca
    12d4:	.word	0x00000f41
    12d8:	.word	0x000010c8

000012dc <me_heal>:
    12dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    12e0:	add	fp, sp, #24
    12e4:	sub	sp, sp, #8
    12e8:	cmp	r3, #2
    12ec:	bge	12f8 <me_heal+0x1c>
    12f0:	sub	sp, fp, #24
    12f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    12f8:	ldr	r6, [fp, #8]
    12fc:	mov	r1, #0
    1300:	mov	r8, r2
    1304:	ldr	r0, [r6, #4]
    1308:	bl	b84 <clean_nick@plt>
    130c:	ldr	r5, [r6, #4]
    1310:	cmp	r0, #0
    1314:	beq	1348 <me_heal+0x6c>
    1318:	mov	r0, r5
    131c:	bl	b9c <find_person@plt>
    1320:	cmp	r0, #0
    1324:	beq	12f0 <me_heal+0x14>
    1328:	mov	r1, r0
    132c:	ldrb	r0, [r0, #65]	; 0x41
    1330:	tst	r0, #32
    1334:	beq	12f0 <me_heal+0x14>
    1338:	mov	r0, r8
    133c:	sub	sp, fp, #24
    1340:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    1344:	b	1f54 <heal_nick>
    1348:	mov	r0, r5
    134c:	mov	r1, #46	; 0x2e
    1350:	bl	b78 <strchr@plt>
    1354:	cmp	r0, #0
    1358:	beq	12f0 <me_heal+0x14>
    135c:	ldr	r0, [pc, #116]	; 13d8 <me_heal+0xfc>
    1360:	ldr	r0, [pc, r0]
    1364:	ldr	r7, [r0]
    1368:	cmp	r7, #0
    136c:	beq	12f0 <me_heal+0x14>
    1370:	ldr	r4, [r7]
    1374:	mov	r0, r5
    1378:	ldr	r1, [r4]
    137c:	bl	ae8 <rb_strcasecmp@plt>
    1380:	cmp	r0, #0
    1384:	beq	1398 <me_heal+0xbc>
    1388:	ldr	r7, [r7, #8]
    138c:	cmp	r7, #0
    1390:	bne	1370 <me_heal+0x94>
    1394:	b	12f0 <me_heal+0x14>
    1398:	cmp	r4, #0
    139c:	beq	12f0 <me_heal+0x14>
    13a0:	ldr	r0, [r6, #4]
    13a4:	bl	20a8 <hurt_remove>
    13a8:	mov	r0, r8
    13ac:	bl	b0c <get_oper_name@plt>
    13b0:	mov	r3, r0
    13b4:	ldr	r0, [r6, #4]
    13b8:	mov	r1, #0
    13bc:	str	r0, [sp]
    13c0:	mov	r0, #256	; 0x100
    13c4:	ldr	r2, [pc, #16]	; 13dc <me_heal+0x100>
    13c8:	add	r2, pc, r2
    13cc:	bl	b00 <sendto_realops_snomask@plt>
    13d0:	sub	sp, fp, #24
    13d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    13d8:	.word	0x00011d28
    13dc:	.word	0x0000101c

000013e0 <mo_heal>:
    13e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    13e4:	add	fp, sp, #24
    13e8:	sub	sp, sp, #16
    13ec:	ldr	r0, [r2, #24]
    13f0:	mov	r4, r2
    13f4:	cmp	r0, #0
    13f8:	beq	1494 <mo_heal+0xb4>
    13fc:	ldr	r0, [r0, #36]	; 0x24
    1400:	cmp	r0, #0
    1404:	beq	1494 <mo_heal+0xb4>
    1408:	ldr	r8, [fp, #8]
    140c:	ldr	r1, [pc, #536]	; 162c <mo_heal+0x24c>
    1410:	add	r1, pc, r1
    1414:	bl	bd8 <privilegeset_in_set@plt>
    1418:	cmp	r0, #0
    141c:	beq	1494 <mo_heal+0xb4>
    1420:	ldr	r0, [r8, #4]
    1424:	mov	r1, #0
    1428:	bl	b84 <clean_nick@plt>
    142c:	ldr	r5, [r8, #4]
    1430:	cmp	r0, #0
    1434:	beq	14c8 <mo_heal+0xe8>
    1438:	mov	r0, r5
    143c:	bl	bc0 <find_named_person@plt>
    1440:	cmp	r0, #0
    1444:	beq	151c <mo_heal+0x13c>
    1448:	mov	r2, r0
    144c:	ldrb	r0, [r0, #65]	; 0x41
    1450:	tst	r0, #32
    1454:	bne	153c <mo_heal+0x15c>
    1458:	ldr	r0, [r2, #36]	; 0x24
    145c:	ldrh	r1, [r0, #80]	; 0x50
    1460:	cmp	r1, #32
    1464:	bne	156c <mo_heal+0x18c>
    1468:	ldrb	r0, [r0, #396]	; 0x18c
    146c:	cmp	r0, #0
    1470:	beq	156c <mo_heal+0x18c>
    1474:	mov	r0, r2
    1478:	ldrb	r1, [r0, #396]!	; 0x18c
    147c:	cmp	r1, #0
    1480:	ldrb	r1, [r4, #396]!	; 0x18c
    1484:	subeq	r0, r0, #308	; 0x134
    1488:	cmp	r1, #0
    148c:	subeq	r4, r4, #308	; 0x134
    1490:	b	1574 <mo_heal+0x194>
    1494:	ldr	r0, [pc, #404]	; 1630 <mo_heal+0x250>
    1498:	add	r3, r4, #88	; 0x58
    149c:	add	r0, pc, r0
    14a0:	str	r0, [sp]
    14a4:	ldr	r0, [pc, #392]	; 1634 <mo_heal+0x254>
    14a8:	ldr	r0, [pc, r0]
    14ac:	ldr	r1, [pc, #388]	; 1638 <mo_heal+0x258>
    14b0:	add	r2, r0, #88	; 0x58
    14b4:	add	r1, pc, r1
    14b8:	mov	r0, r4
    14bc:	bl	ac4 <sendto_one@plt>
    14c0:	sub	sp, fp, #24
    14c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    14c8:	mov	r0, r5
    14cc:	mov	r1, #46	; 0x2e
    14d0:	bl	b78 <strchr@plt>
    14d4:	cmp	r0, #0
    14d8:	beq	1550 <mo_heal+0x170>
    14dc:	ldr	r0, [pc, #348]	; 1640 <mo_heal+0x260>
    14e0:	ldr	r0, [pc, r0]
    14e4:	ldr	r7, [r0]
    14e8:	cmp	r7, #0
    14ec:	beq	1610 <mo_heal+0x230>
    14f0:	ldr	r6, [r7]
    14f4:	mov	r0, r5
    14f8:	ldr	r1, [r6]
    14fc:	bl	ae8 <rb_strcasecmp@plt>
    1500:	cmp	r0, #0
    1504:	beq	159c <mo_heal+0x1bc>
    1508:	ldr	r7, [r7, #8]
    150c:	cmp	r7, #0
    1510:	bne	14f0 <mo_heal+0x110>
    1514:	ldr	r5, [r8, #4]
    1518:	b	1610 <mo_heal+0x230>
    151c:	ldr	r3, [r8, #4]
    1520:	ldr	r2, [pc, #296]	; 1650 <mo_heal+0x270>
    1524:	mov	r0, r4
    1528:	movw	r1, #401	; 0x191
    152c:	add	r2, pc, r2
    1530:	sub	sp, fp, #24
    1534:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    1538:	b	b60 <sendto_one_numeric@plt>
    153c:	mov	r0, r4
    1540:	mov	r1, r2
    1544:	sub	sp, fp, #24
    1548:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    154c:	b	1f54 <heal_nick>
    1550:	ldr	r1, [pc, #244]	; 164c <mo_heal+0x26c>
    1554:	mov	r0, r4
    1558:	mov	r2, r5
    155c:	add	r1, pc, r1
    1560:	sub	sp, fp, #24
    1564:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    1568:	b	ac4 <sendto_one@plt>
    156c:	add	r0, r2, #88	; 0x58
    1570:	add	r4, r4, #88	; 0x58
    1574:	ldr	r1, [r2, #32]
    1578:	str	r0, [sp]
    157c:	mov	r0, r2
    1580:	mov	r2, r4
    1584:	add	r3, r1, #88	; 0x58
    1588:	ldr	r1, [pc, #172]	; 163c <mo_heal+0x25c>
    158c:	add	r1, pc, r1
    1590:	bl	ac4 <sendto_one@plt>
    1594:	sub	sp, fp, #24
    1598:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    159c:	ldr	r5, [r8, #4]
    15a0:	cmp	r6, #0
    15a4:	beq	1610 <mo_heal+0x230>
    15a8:	mov	r0, r5
    15ac:	bl	20a8 <hurt_remove>
    15b0:	mov	r0, r4
    15b4:	bl	b0c <get_oper_name@plt>
    15b8:	mov	r3, r0
    15bc:	ldr	r0, [r8, #4]
    15c0:	mov	r1, #0
    15c4:	str	r0, [sp]
    15c8:	mov	r0, #256	; 0x100
    15cc:	ldr	r2, [pc, #112]	; 1644 <mo_heal+0x264>
    15d0:	add	r2, pc, r2
    15d4:	bl	b00 <sendto_realops_snomask@plt>
    15d8:	ldr	r0, [r8, #4]
    15dc:	ldr	r2, [pc, #100]	; 1648 <mo_heal+0x268>
    15e0:	add	r1, r4, #88	; 0x58
    15e4:	mov	r3, #0
    15e8:	str	r1, [sp, #4]
    15ec:	mov	r1, #0
    15f0:	add	r2, pc, r2
    15f4:	str	r0, [sp, #8]
    15f8:	mov	r0, #0
    15fc:	str	r2, [sp]
    1600:	mov	r2, #0
    1604:	bl	b30 <sendto_server@plt>
    1608:	sub	sp, fp, #24
    160c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1610:	ldr	r1, [pc, #60]	; 1654 <mo_heal+0x274>
    1614:	mov	r0, r4
    1618:	mov	r2, r5
    161c:	add	r1, pc, r1
    1620:	sub	sp, fp, #24
    1624:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    1628:	b	bb4 <sendto_one_notice@plt>
    162c:	.word	0x00000f9b
    1630:	.word	0x00000f14
    1634:	.word	0x00011bfc
    1638:	.word	0x00000daf
    163c:	.word	0x00000e2c
    1640:	.word	0x00011ba8
    1644:	.word	0x00000e14
    1648:	.word	0x00000e0a
    164c:	.word	0x00000eb2
    1650:	.word	0x00000daa
    1654:	.word	0x00000db1

00001658 <client_exit_hook>:
    1658:	push	{fp, lr}
    165c:	mov	fp, sp
    1660:	ldr	r3, [r0, #4]
    1664:	cmp	r3, #0
    1668:	beq	16e4 <client_exit_hook+0x8c>
    166c:	ldr	ip, [pc, #144]	; 1704 <client_exit_hook+0xac>
    1670:	ldr	ip, [pc, ip]
    1674:	ldr	r2, [ip, #8]
    1678:	cmp	r2, #0
    167c:	beq	16ac <client_exit_hook+0x54>
    1680:	ldr	r1, [r2]
    1684:	mov	r0, r2
    1688:	ldr	r2, [r2, #8]
    168c:	cmp	r1, r3
    1690:	bne	1678 <client_exit_hook+0x20>
    1694:	ldr	r3, [r0, #4]
    1698:	cmp	r2, #0
    169c:	beq	16b0 <client_exit_hook+0x58>
    16a0:	str	r3, [r2, #4]
    16a4:	ldr	r3, [r0, #4]
    16a8:	b	16b4 <client_exit_hook+0x5c>
    16ac:	pop	{fp, pc}
    16b0:	str	r3, [ip, #12]
    16b4:	cmp	r3, #0
    16b8:	add	r1, r3, #8
    16bc:	addeq	r1, ip, #8
    16c0:	str	r2, [r1]
    16c4:	mov	r1, #0
    16c8:	str	r1, [r0, #4]
    16cc:	str	r1, [r0, #8]
    16d0:	ldr	r1, [ip, #16]
    16d4:	sub	r1, r1, #1
    16d8:	str	r1, [ip, #16]
    16dc:	pop	{fp, lr}
    16e0:	b	b18 <rb_free_rb_dlink_node@plt>
    16e4:	ldr	r0, [pc, #28]	; 1708 <client_exit_hook+0xb0>
    16e8:	ldr	r1, [pc, #28]	; 170c <client_exit_hook+0xb4>
    16ec:	ldr	r3, [pc, #28]	; 1710 <client_exit_hook+0xb8>
    16f0:	mov	r2, #288	; 0x120
    16f4:	add	r0, pc, r0
    16f8:	add	r1, pc, r1
    16fc:	add	r3, pc, r3
    1700:	bl	bf0 <__assert_fail@plt>
    1704:	.word	0x00011a24
    1708:	.word	0x00000b22
    170c:	.word	0x00000ad1
    1710:	.word	0x00000ae9

00001714 <new_local_user_hook>:
    1714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1718:	add	fp, sp, #24
    171c:	mov	r6, r0
    1720:	mov	r9, r0
    1724:	movw	r1, #16418	; 0x4022
    1728:	ldr	r0, [r6, #64]!	; 0x40
    172c:	tst	r0, r1
    1730:	tsteq	r0, #4194304	; 0x400000
    1734:	beq	173c <new_local_user_hook+0x28>
    1738:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    173c:	ldr	r0, [r9, #24]
    1740:	ldrb	r0, [r0, #40]	; 0x28
    1744:	cmp	r0, #0
    1748:	bne	1738 <new_local_user_hook+0x24>
    174c:	ldr	r8, [pc, #344]	; 18ac <new_local_user_hook+0x198>
    1750:	ldr	r8, [pc, r8]
    1754:	ldr	r7, [r8]
    1758:	cmp	r7, #0
    175c:	beq	1738 <new_local_user_hook+0x24>
    1760:	movw	r0, #291	; 0x123
    1764:	add	r5, r9, r0
    1768:	ldr	r4, [r7]
    176c:	mov	r1, r5
    1770:	ldr	r0, [r4]
    1774:	bl	b90 <match@plt>
    1778:	cmp	r0, #0
    177c:	bne	1790 <new_local_user_hook+0x7c>
    1780:	ldr	r7, [r7, #8]
    1784:	cmp	r7, #0
    1788:	bne	1768 <new_local_user_hook+0x54>
    178c:	b	1798 <new_local_user_hook+0x84>
    1790:	cmp	r4, #0
    1794:	bne	17d8 <new_local_user_hook+0xc4>
    1798:	ldr	r7, [r8]
    179c:	cmp	r7, #0
    17a0:	beq	1738 <new_local_user_hook+0x24>
    17a4:	add	r5, r9, #227	; 0xe3
    17a8:	ldr	r4, [r7]
    17ac:	mov	r1, r5
    17b0:	ldr	r0, [r4]
    17b4:	bl	b90 <match@plt>
    17b8:	cmp	r0, #0
    17bc:	bne	17d0 <new_local_user_hook+0xbc>
    17c0:	ldr	r7, [r7, #8]
    17c4:	cmp	r7, #0
    17c8:	bne	17a8 <new_local_user_hook+0x94>
    17cc:	b	1738 <new_local_user_hook+0x24>
    17d0:	cmp	r4, #0
    17d4:	beq	1738 <new_local_user_hook+0x24>
    17d8:	bl	a94 <rb_current_time@plt>
    17dc:	ldr	r1, [r9, #432]	; 0x1b0
    17e0:	add	r0, r0, #600	; 0x258
    17e4:	str	r0, [r1, #416]	; 0x1a0
    17e8:	ldr	r0, [r6]
    17ec:	orr	r0, r0, #65536	; 0x10000
    17f0:	str	r0, [r6]
    17f4:	bl	b54 <rb_make_rb_dlink_node@plt>
    17f8:	cmp	r9, #0
    17fc:	beq	186c <new_local_user_hook+0x158>
    1800:	cmp	r0, #0
    1804:	beq	188c <new_local_user_hook+0x178>
    1808:	mov	r1, #0
    180c:	str	r1, [r0, #4]
    1810:	str	r9, [r0]
    1814:	ldr	r1, [pc, #148]	; 18b0 <new_local_user_hook+0x19c>
    1818:	ldr	r1, [pc, r1]
    181c:	ldr	r2, [r1, #8]
    1820:	cmp	r2, #0
    1824:	str	r2, [r0, #8]
    1828:	beq	1838 <new_local_user_hook+0x124>
    182c:	add	r2, r2, #4
    1830:	str	r0, [r2]
    1834:	b	1848 <new_local_user_hook+0x134>
    1838:	mov	r2, r1
    183c:	ldr	r3, [r2, #12]!
    1840:	cmp	r3, #0
    1844:	streq	r0, [r2]
    1848:	str	r0, [r1, #8]
    184c:	ldr	r0, [r1, #16]
    1850:	add	r0, r0, #1
    1854:	str	r0, [r1, #16]
    1858:	mov	r0, r9
    185c:	ldr	r1, [pc, #80]	; 18b4 <new_local_user_hook+0x1a0>
    1860:	add	r1, pc, r1
    1864:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1868:	b	bb4 <sendto_one_notice@plt>
    186c:	ldr	r0, [pc, #68]	; 18b8 <new_local_user_hook+0x1a4>
    1870:	ldr	r1, [pc, #68]	; 18bc <new_local_user_hook+0x1a8>
    1874:	ldr	r3, [pc, #68]	; 18c0 <new_local_user_hook+0x1ac>
    1878:	mov	r2, #143	; 0x8f
    187c:	add	r0, pc, r0
    1880:	add	r1, pc, r1
    1884:	add	r3, pc, r3
    1888:	bl	bf0 <__assert_fail@plt>
    188c:	ldr	r0, [pc, #48]	; 18c4 <new_local_user_hook+0x1b0>
    1890:	ldr	r1, [pc, #48]	; 18c8 <new_local_user_hook+0x1b4>
    1894:	ldr	r3, [pc, #48]	; 18cc <new_local_user_hook+0x1b8>
    1898:	mov	r2, #144	; 0x90
    189c:	add	r0, pc, r0
    18a0:	add	r1, pc, r1
    18a4:	add	r3, pc, r3
    18a8:	bl	bf0 <__assert_fail@plt>
    18ac:	.word	0x00011938
    18b0:	.word	0x0001187c
    18b4:	.word	0x00000c55
    18b8:	.word	0x0000099a
    18bc:	.word	0x00000949
    18c0:	.word	0x00000ad0
    18c4:	.word	0x000009b2
    18c8:	.word	0x00000929
    18cc:	.word	0x00000ab0

000018d0 <doing_stats_hook>:
    18d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    18d4:	add	fp, sp, #24
    18d8:	sub	sp, sp, #24
    18dc:	ldr	r1, [r0, #8]
    18e0:	cmp	r1, #115	; 0x73
    18e4:	bne	1a5c <doing_stats_hook+0x18c>
    18e8:	ldr	r8, [r0]
    18ec:	ldr	r5, [pc, #520]	; 1afc <doing_stats_hook+0x22c>
    18f0:	ldr	r5, [pc, r5]
    18f4:	ldr	r0, [r5, #164]	; 0xa4
    18f8:	cmp	r0, #2
    18fc:	bne	1954 <doing_stats_hook+0x84>
    1900:	ldr	r0, [r8, #24]
    1904:	cmp	r0, #0
    1908:	beq	192c <doing_stats_hook+0x5c>
    190c:	ldr	r0, [r0, #36]	; 0x24
    1910:	cmp	r0, #0
    1914:	beq	192c <doing_stats_hook+0x5c>
    1918:	ldr	r1, [pc, #480]	; 1b00 <doing_stats_hook+0x230>
    191c:	add	r1, pc, r1
    1920:	bl	bd8 <privilegeset_in_set@plt>
    1924:	cmp	r0, #0
    1928:	bne	1950 <doing_stats_hook+0x80>
    192c:	ldrb	r0, [r8, #57]	; 0x39
    1930:	tst	r0, #16
    1934:	beq	1a5c <doing_stats_hook+0x18c>
    1938:	ldr	r0, [r8, #24]
    193c:	cmp	r0, #0
    1940:	beq	1a5c <doing_stats_hook+0x18c>
    1944:	ldr	r0, [r0, #36]	; 0x24
    1948:	cmp	r0, #0
    194c:	bne	1a5c <doing_stats_hook+0x18c>
    1950:	ldr	r0, [r5, #164]	; 0xa4
    1954:	cmp	r0, #1
    1958:	bne	19f0 <doing_stats_hook+0x120>
    195c:	ldr	r0, [r8, #24]
    1960:	cmp	r0, #0
    1964:	beq	1988 <doing_stats_hook+0xb8>
    1968:	ldr	r0, [r0, #36]	; 0x24
    196c:	cmp	r0, #0
    1970:	beq	1988 <doing_stats_hook+0xb8>
    1974:	ldr	r1, [pc, #392]	; 1b04 <doing_stats_hook+0x234>
    1978:	add	r1, pc, r1
    197c:	bl	bd8 <privilegeset_in_set@plt>
    1980:	cmp	r0, #0
    1984:	bne	19f0 <doing_stats_hook+0x120>
    1988:	ldrb	r0, [r8, #57]	; 0x39
    198c:	tst	r0, #16
    1990:	beq	19ac <doing_stats_hook+0xdc>
    1994:	ldr	r0, [r8, #24]
    1998:	cmp	r0, #0
    199c:	beq	19ac <doing_stats_hook+0xdc>
    19a0:	ldr	r0, [r0, #36]	; 0x24
    19a4:	cmp	r0, #0
    19a8:	beq	19f0 <doing_stats_hook+0x120>
    19ac:	ldr	r6, [pc, #340]	; 1b08 <doing_stats_hook+0x238>
    19b0:	ldr	r6, [pc, r6]
    19b4:	ldr	r4, [r6]
    19b8:	cmp	r4, #0
    19bc:	beq	1a5c <doing_stats_hook+0x18c>
    19c0:	movw	r0, #291	; 0x123
    19c4:	add	r5, r8, r0
    19c8:	ldr	r7, [r4]
    19cc:	mov	r1, r5
    19d0:	ldr	r0, [r7]
    19d4:	bl	b90 <match@plt>
    19d8:	cmp	r0, #0
    19dc:	bne	1a64 <doing_stats_hook+0x194>
    19e0:	ldr	r4, [r4, #8]
    19e4:	cmp	r4, #0
    19e8:	bne	19c8 <doing_stats_hook+0xf8>
    19ec:	b	1a78 <doing_stats_hook+0x1a8>
    19f0:	ldr	r0, [pc, #288]	; 1b18 <doing_stats_hook+0x248>
    19f4:	ldr	r0, [pc, r0]
    19f8:	ldr	r6, [r0]
    19fc:	cmp	r6, #0
    1a00:	beq	1a5c <doing_stats_hook+0x18c>
    1a04:	ldr	r7, [pc, #272]	; 1b1c <doing_stats_hook+0x24c>
    1a08:	ldr	r4, [pc, #272]	; 1b20 <doing_stats_hook+0x250>
    1a0c:	ldr	r5, [pc, #272]	; 1b24 <doing_stats_hook+0x254>
    1a10:	add	r7, pc, r7
    1a14:	add	r4, pc, r4
    1a18:	add	r5, pc, r5
    1a1c:	ldr	r0, [r6]
    1a20:	mov	r2, r5
    1a24:	mov	r3, #115	; 0x73
    1a28:	ldr	r1, [r0]
    1a2c:	ldr	r0, [r0, #12]
    1a30:	str	r4, [sp]
    1a34:	str	r7, [sp, #12]
    1a38:	str	r7, [sp, #16]
    1a3c:	str	r1, [sp, #4]
    1a40:	str	r0, [sp, #8]
    1a44:	mov	r0, r8
    1a48:	mov	r1, #216	; 0xd8
    1a4c:	bl	b60 <sendto_one_numeric@plt>
    1a50:	ldr	r6, [r6, #8]
    1a54:	cmp	r6, #0
    1a58:	bne	1a1c <doing_stats_hook+0x14c>
    1a5c:	sub	sp, fp, #24
    1a60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a64:	cmp	r7, #0
    1a68:	beq	1a78 <doing_stats_hook+0x1a8>
    1a6c:	ldr	r0, [r7]
    1a70:	ldr	r1, [r7, #12]
    1a74:	b	1ac0 <doing_stats_hook+0x1f0>
    1a78:	ldr	r4, [r6]
    1a7c:	cmp	r4, #0
    1a80:	beq	1a5c <doing_stats_hook+0x18c>
    1a84:	add	r5, r8, #227	; 0xe3
    1a88:	ldr	r6, [r4]
    1a8c:	mov	r1, r5
    1a90:	ldr	r0, [r6]
    1a94:	bl	b90 <match@plt>
    1a98:	cmp	r0, #0
    1a9c:	bne	1ab0 <doing_stats_hook+0x1e0>
    1aa0:	ldr	r4, [r4, #8]
    1aa4:	cmp	r4, #0
    1aa8:	bne	1a88 <doing_stats_hook+0x1b8>
    1aac:	b	1a5c <doing_stats_hook+0x18c>
    1ab0:	cmp	r6, #0
    1ab4:	beq	1a5c <doing_stats_hook+0x18c>
    1ab8:	ldr	r0, [r6]
    1abc:	ldr	r1, [r6, #12]
    1ac0:	ldr	r2, [pc, #68]	; 1b0c <doing_stats_hook+0x23c>
    1ac4:	ldr	r3, [pc, #68]	; 1b10 <doing_stats_hook+0x240>
    1ac8:	add	r3, pc, r3
    1acc:	add	r2, pc, r2
    1ad0:	str	r3, [sp]
    1ad4:	stmib	sp, {r0, r1, r2}
    1ad8:	str	r2, [sp, #16]
    1adc:	mov	r0, r8
    1ae0:	mov	r1, #216	; 0xd8
    1ae4:	mov	r3, #115	; 0x73
    1ae8:	ldr	r2, [pc, #36]	; 1b14 <doing_stats_hook+0x244>
    1aec:	add	r2, pc, r2
    1af0:	bl	b60 <sendto_one_numeric@plt>
    1af4:	sub	sp, fp, #24
    1af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1afc:	.word	0x000117b8
    1b00:	.word	0x00000bf1
    1b04:	.word	0x00000b95
    1b08:	.word	0x000116d8
    1b0c:	.word	0x00000749
    1b10:	.word	0x00000a65
    1b14:	.word	0x00000a2e
    1b18:	.word	0x00011694
    1b1c:	.word	0x00000805
    1b20:	.word	0x00000b19
    1b24:	.word	0x00000b02

00001b28 <modinit>:
    1b28:	push	{fp, lr}
    1b2c:	mov	fp, sp
    1b30:	bl	a94 <rb_current_time@plt>
    1b34:	ldr	r1, [pc, #92]	; 1b98 <modinit+0x70>
    1b38:	mov	r2, #0
    1b3c:	mov	r3, #60	; 0x3c
    1b40:	ldr	r1, [pc, r1]
    1b44:	str	r0, [r1]
    1b48:	ldr	r0, [pc, #76]	; 1b9c <modinit+0x74>
    1b4c:	ldr	r1, [pc, #76]	; 1ba0 <modinit+0x78>
    1b50:	add	r0, pc, r0
    1b54:	add	r1, pc, r1
    1b58:	bl	aa0 <rb_event_add@plt>
    1b5c:	ldr	r1, [pc, #64]	; 1ba4 <modinit+0x7c>
    1b60:	mov	r2, #0
    1b64:	mov	r3, #5
    1b68:	ldr	r1, [pc, r1]
    1b6c:	str	r0, [r1]
    1b70:	ldr	r0, [pc, #48]	; 1ba8 <modinit+0x80>
    1b74:	ldr	r1, [pc, #48]	; 1bac <modinit+0x84>
    1b78:	add	r0, pc, r0
    1b7c:	add	r1, pc, r1
    1b80:	bl	aa0 <rb_event_add@plt>
    1b84:	ldr	r1, [pc, #36]	; 1bb0 <modinit+0x88>
    1b88:	ldr	r1, [pc, r1]
    1b8c:	str	r0, [r1]
    1b90:	mov	r0, #0
    1b94:	pop	{fp, pc}
    1b98:	.word	0x00011554
    1b9c:	.word	0x00000655
    1ba0:	.word	0x00000104
    1ba4:	.word	0x00011528
    1ba8:	.word	0x00000639
    1bac:	.word	0x000001ec
    1bb0:	.word	0x00011510

00001bb4 <modfini>:
    1bb4:	push	{r4, r5, r6, sl, fp, lr}
    1bb8:	add	fp, sp, #16
    1bbc:	ldr	r0, [pc, #144]	; 1c54 <modfini+0xa0>
    1bc0:	ldr	r0, [pc, r0]
    1bc4:	ldr	r0, [r0]
    1bc8:	bl	ad0 <rb_event_delete@plt>
    1bcc:	ldr	r0, [pc, #132]	; 1c58 <modfini+0xa4>
    1bd0:	ldr	r0, [pc, r0]
    1bd4:	ldr	r0, [r0]
    1bd8:	bl	ad0 <rb_event_delete@plt>
    1bdc:	ldr	r4, [pc, #120]	; 1c5c <modfini+0xa8>
    1be0:	ldr	r4, [pc, r4]
    1be4:	ldr	r0, [r4, #8]
    1be8:	cmp	r0, #0
    1bec:	beq	1c50 <modfini+0x9c>
    1bf0:	mov	r5, #0
    1bf4:	ldmib	r0, {r1, r6}
    1bf8:	cmp	r6, #0
    1bfc:	bne	1c44 <modfini+0x90>
    1c00:	str	r1, [r4, #12]
    1c04:	cmp	r1, #0
    1c08:	add	r2, r1, #8
    1c0c:	addeq	r2, r4, #8
    1c10:	str	r6, [r2]
    1c14:	str	r5, [r0, #4]
    1c18:	str	r5, [r0, #8]
    1c1c:	ldr	r1, [r4, #16]
    1c20:	sub	r1, r1, #1
    1c24:	str	r1, [r4, #16]
    1c28:	bl	b18 <rb_free_rb_dlink_node@plt>
    1c2c:	cmp	r6, #0
    1c30:	mov	r0, r6
    1c34:	beq	1c50 <modfini+0x9c>
    1c38:	ldmib	r0, {r1, r6}
    1c3c:	cmp	r6, #0
    1c40:	beq	1c00 <modfini+0x4c>
    1c44:	str	r1, [r6, #4]
    1c48:	ldr	r1, [r0, #4]
    1c4c:	b	1c04 <modfini+0x50>
    1c50:	pop	{r4, r5, r6, sl, fp, pc}
    1c54:	.word	0x000114d0
    1c58:	.word	0x000114c8
    1c5c:	.word	0x000114b4

00001c60 <hurt_expire_event>:
    1c60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1c64:	add	fp, sp, #24
    1c68:	ldr	r5, [pc, #240]	; 1d60 <hurt_expire_event+0x100>
    1c6c:	ldr	r5, [pc, r5]
    1c70:	ldr	r6, [r5]
    1c74:	cmp	r6, #0
    1c78:	beq	1d3c <hurt_expire_event+0xdc>
    1c7c:	mov	r8, #0
    1c80:	b	1c94 <hurt_expire_event+0x34>
    1c84:	mov	r0, r4
    1c88:	bl	adc <free@plt>
    1c8c:	cmp	r6, #0
    1c90:	beq	1d3c <hurt_expire_event+0xdc>
    1c94:	ldr	r4, [r6]
    1c98:	ldr	r6, [r6, #8]
    1c9c:	ldr	r7, [r4, #16]
    1ca0:	bl	a94 <rb_current_time@plt>
    1ca4:	cmp	r7, r0
    1ca8:	bgt	1c8c <hurt_expire_event+0x2c>
    1cac:	cmp	r4, #0
    1cb0:	beq	1d40 <hurt_expire_event+0xe0>
    1cb4:	ldr	r1, [r5]
    1cb8:	cmp	r1, #0
    1cbc:	beq	1d18 <hurt_expire_event+0xb8>
    1cc0:	ldr	r2, [r1]
    1cc4:	mov	r0, r1
    1cc8:	ldr	r1, [r1, #8]
    1ccc:	cmp	r2, r4
    1cd0:	bne	1cb8 <hurt_expire_event+0x58>
    1cd4:	ldr	r2, [r0, #4]
    1cd8:	cmp	r1, #0
    1cdc:	beq	1cec <hurt_expire_event+0x8c>
    1ce0:	str	r2, [r1, #4]
    1ce4:	ldr	r2, [r0, #4]
    1ce8:	b	1cf0 <hurt_expire_event+0x90>
    1cec:	str	r2, [r5, #4]
    1cf0:	cmp	r2, #0
    1cf4:	mov	r3, r5
    1cf8:	addne	r3, r2, #8
    1cfc:	str	r1, [r3]
    1d00:	str	r8, [r0, #4]
    1d04:	str	r8, [r0, #8]
    1d08:	ldr	r1, [r5, #8]
    1d0c:	sub	r1, r1, #1
    1d10:	str	r1, [r5, #8]
    1d14:	bl	b18 <rb_free_rb_dlink_node@plt>
    1d18:	ldr	r0, [r4]
    1d1c:	cmp	r0, #0
    1d20:	beq	1d28 <hurt_expire_event+0xc8>
    1d24:	bl	adc <free@plt>
    1d28:	ldr	r0, [r4, #12]
    1d2c:	cmp	r0, #0
    1d30:	beq	1c84 <hurt_expire_event+0x24>
    1d34:	bl	adc <free@plt>
    1d38:	b	1c84 <hurt_expire_event+0x24>
    1d3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1d40:	ldr	r0, [pc, #28]	; 1d64 <hurt_expire_event+0x104>
    1d44:	ldr	r1, [pc, #28]	; 1d68 <hurt_expire_event+0x108>
    1d48:	ldr	r3, [pc, #28]	; 1d6c <hurt_expire_event+0x10c>
    1d4c:	mov	r2, #288	; 0x120
    1d50:	add	r0, pc, r0
    1d54:	add	r1, pc, r1
    1d58:	add	r3, pc, r3
    1d5c:	bl	bf0 <__assert_fail@plt>
    1d60:	.word	0x0001141c
    1d64:	.word	0x000004c6
    1d68:	.word	0x00000475
    1d6c:	.word	0x0000048d

00001d70 <hurt_check_event>:
    1d70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1d74:	add	fp, sp, #24
    1d78:	ldr	r7, [pc, #220]	; 1e5c <hurt_check_event+0xec>
    1d7c:	ldr	r7, [pc, r7]
    1d80:	ldr	r4, [r7, #8]
    1d84:	cmp	r4, #0
    1d88:	beq	1e58 <hurt_check_event+0xe8>
    1d8c:	ldr	r8, [pc, #204]	; 1e60 <hurt_check_event+0xf0>
    1d90:	mov	r5, #0
    1d94:	ldr	r8, [pc, r8]
    1d98:	ldr	r9, [pc, #196]	; 1e64 <hurt_check_event+0xf4>
    1d9c:	add	r9, pc, r9
    1da0:	b	1df0 <hurt_check_event+0x80>
    1da4:	str	r2, [r7, #12]
    1da8:	cmp	r2, #0
    1dac:	add	r3, r2, #8
    1db0:	addeq	r3, r7, #8
    1db4:	str	r1, [r3]
    1db8:	str	r5, [r0, #4]
    1dbc:	str	r5, [r0, #8]
    1dc0:	ldr	r1, [r7, #16]
    1dc4:	sub	r1, r1, #1
    1dc8:	str	r1, [r7, #16]
    1dcc:	bl	b18 <rb_free_rb_dlink_node@plt>
    1dd0:	mov	r0, r6
    1dd4:	mov	r1, r9
    1dd8:	bl	bb4 <sendto_one_notice@plt>
    1ddc:	bl	a94 <rb_current_time@plt>
    1de0:	ldr	r1, [r6, #432]	; 0x1b0
    1de4:	str	r0, [r1, #416]	; 0x1a0
    1de8:	cmp	r4, #0
    1dec:	beq	1e58 <hurt_check_event+0xe8>
    1df0:	ldr	r6, [r4]
    1df4:	mov	r0, r4
    1df8:	ldr	r4, [r4, #8]
    1dfc:	ldr	r1, [r6, #24]
    1e00:	ldrb	r1, [r1, #40]	; 0x28
    1e04:	cmp	r1, #0
    1e08:	beq	1e28 <hurt_check_event+0xb8>
    1e0c:	ldr	r1, [r0, #8]
    1e10:	ldr	r2, [r0, #4]
    1e14:	cmp	r1, #0
    1e18:	beq	1da4 <hurt_check_event+0x34>
    1e1c:	str	r2, [r1, #4]
    1e20:	ldr	r2, [r0, #4]
    1e24:	b	1da8 <hurt_check_event+0x38>
    1e28:	ldr	r1, [r6, #432]	; 0x1b0
    1e2c:	ldrh	r0, [r7, #20]
    1e30:	ldr	r1, [r1, #116]	; 0x74
    1e34:	cmp	r1, r0
    1e38:	bls	1de8 <hurt_check_event+0x78>
    1e3c:	ldr	r3, [r7, #28]
    1e40:	mov	r0, #0
    1e44:	mov	r1, r6
    1e48:	mov	r2, r8
    1e4c:	bl	bcc <exit_client@plt>
    1e50:	cmp	r4, #0
    1e54:	bne	1df0 <hurt_check_event+0x80>
    1e58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1e5c:	.word	0x00011318
    1e60:	.word	0x00011310
    1e64:	.word	0x00000487

00001e68 <rb_dlinkFindDestroy>:
    1e68:	push	{fp, lr}
    1e6c:	mov	fp, sp
    1e70:	cmp	r1, #0
    1e74:	beq	1efc <rb_dlinkFindDestroy+0x94>
    1e78:	mov	ip, r0
    1e7c:	cmp	r0, #0
    1e80:	beq	1f1c <rb_dlinkFindDestroy+0xb4>
    1e84:	ldr	r3, [r1]
    1e88:	cmp	r3, #0
    1e8c:	beq	1ebc <rb_dlinkFindDestroy+0x54>
    1e90:	ldr	r2, [r3]
    1e94:	mov	r0, r3
    1e98:	ldr	r3, [r3, #8]
    1e9c:	cmp	r2, ip
    1ea0:	bne	1e88 <rb_dlinkFindDestroy+0x20>
    1ea4:	ldr	ip, [r0, #4]
    1ea8:	cmp	r3, #0
    1eac:	beq	1ec4 <rb_dlinkFindDestroy+0x5c>
    1eb0:	str	ip, [r3, #4]
    1eb4:	ldr	ip, [r0, #4]
    1eb8:	b	1ec8 <rb_dlinkFindDestroy+0x60>
    1ebc:	mov	r0, #0
    1ec0:	pop	{fp, pc}
    1ec4:	str	ip, [r1, #4]
    1ec8:	cmp	ip, #0
    1ecc:	mov	r2, r1
    1ed0:	addne	r2, ip, #8
    1ed4:	str	r3, [r2]
    1ed8:	mov	r2, #0
    1edc:	str	r2, [r0, #4]
    1ee0:	str	r2, [r0, #8]
    1ee4:	ldr	r2, [r1, #8]
    1ee8:	sub	r2, r2, #1
    1eec:	str	r2, [r1, #8]
    1ef0:	bl	b18 <rb_free_rb_dlink_node@plt>
    1ef4:	mov	r0, #1
    1ef8:	pop	{fp, pc}
    1efc:	ldr	r0, [pc, #56]	; 1f3c <rb_dlinkFindDestroy+0xd4>
    1f00:	ldr	r1, [pc, #56]	; 1f40 <rb_dlinkFindDestroy+0xd8>
    1f04:	ldr	r3, [pc, #56]	; 1f44 <rb_dlinkFindDestroy+0xdc>
    1f08:	movw	r2, #287	; 0x11f
    1f0c:	add	r0, pc, r0
    1f10:	add	r1, pc, r1
    1f14:	add	r3, pc, r3
    1f18:	bl	bf0 <__assert_fail@plt>
    1f1c:	ldr	r0, [pc, #36]	; 1f48 <rb_dlinkFindDestroy+0xe0>
    1f20:	ldr	r1, [pc, #36]	; 1f4c <rb_dlinkFindDestroy+0xe4>
    1f24:	ldr	r3, [pc, #36]	; 1f50 <rb_dlinkFindDestroy+0xe8>
    1f28:	mov	r2, #288	; 0x120
    1f2c:	add	r0, pc, r0
    1f30:	add	r1, pc, r1
    1f34:	add	r3, pc, r3
    1f38:	bl	bf0 <__assert_fail@plt>
    1f3c:	.word	0x000002b0
    1f40:	.word	0x000002b9
    1f44:	.word	0x000002d1
    1f48:	.word	0x000002ea
    1f4c:	.word	0x00000299
    1f50:	.word	0x000002b1

00001f54 <heal_nick>:
    1f54:	push	{r4, r5, r6, sl, fp, lr}
    1f58:	add	fp, sp, #16
    1f5c:	sub	sp, sp, #8
    1f60:	cmp	r1, #0
    1f64:	beq	2068 <heal_nick+0x114>
    1f68:	mov	r4, r1
    1f6c:	ldr	r1, [pc, #276]	; 2088 <heal_nick+0x134>
    1f70:	mov	r5, r0
    1f74:	ldr	r1, [pc, r1]
    1f78:	ldr	r2, [r1, #8]
    1f7c:	cmp	r2, #0
    1f80:	beq	1fb0 <heal_nick+0x5c>
    1f84:	ldr	r3, [r2]
    1f88:	mov	r0, r2
    1f8c:	ldr	r2, [r2, #8]
    1f90:	cmp	r3, r4
    1f94:	bne	1f7c <heal_nick+0x28>
    1f98:	ldr	r3, [r0, #4]
    1f9c:	cmp	r2, #0
    1fa0:	beq	1fcc <heal_nick+0x78>
    1fa4:	str	r3, [r2, #4]
    1fa8:	ldr	r3, [r0, #4]
    1fac:	b	1fd0 <heal_nick+0x7c>
    1fb0:	ldr	r1, [pc, #224]	; 2098 <heal_nick+0x144>
    1fb4:	add	r2, r4, #88	; 0x58
    1fb8:	mov	r0, r5
    1fbc:	add	r1, pc, r1
    1fc0:	sub	sp, fp, #16
    1fc4:	pop	{r4, r5, r6, sl, fp, lr}
    1fc8:	b	bb4 <sendto_one_notice@plt>
    1fcc:	str	r3, [r1, #12]
    1fd0:	cmp	r3, #0
    1fd4:	add	r6, r3, #8
    1fd8:	addeq	r6, r1, #8
    1fdc:	str	r2, [r6]
    1fe0:	mov	r2, #0
    1fe4:	str	r2, [r0, #4]
    1fe8:	str	r2, [r0, #8]
    1fec:	ldr	r2, [r1, #16]
    1ff0:	sub	r2, r2, #1
    1ff4:	str	r2, [r1, #16]
    1ff8:	bl	b18 <rb_free_rb_dlink_node@plt>
    1ffc:	mov	r0, r5
    2000:	bl	b0c <get_oper_name@plt>
    2004:	mov	r6, r0
    2008:	mov	r0, r4
    200c:	mov	r1, #0
    2010:	bl	a88 <get_client_name@plt>
    2014:	str	r0, [sp]
    2018:	mov	r0, #256	; 0x100
    201c:	mov	r1, #0
    2020:	mov	r3, r6
    2024:	ldr	r2, [pc, #96]	; 208c <heal_nick+0x138>
    2028:	add	r2, pc, r2
    202c:	bl	b00 <sendto_realops_snomask@plt>
    2030:	ldr	r1, [pc, #88]	; 2090 <heal_nick+0x13c>
    2034:	mov	r0, r4
    2038:	add	r1, pc, r1
    203c:	bl	bb4 <sendto_one_notice@plt>
    2040:	ldr	r1, [pc, #76]	; 2094 <heal_nick+0x140>
    2044:	add	r2, r4, #88	; 0x58
    2048:	mov	r0, r5
    204c:	add	r1, pc, r1
    2050:	bl	bb4 <sendto_one_notice@plt>
    2054:	bl	a94 <rb_current_time@plt>
    2058:	ldr	r1, [r4, #432]	; 0x1b0
    205c:	str	r0, [r1, #416]	; 0x1a0
    2060:	sub	sp, fp, #16
    2064:	pop	{r4, r5, r6, sl, fp, pc}
    2068:	ldr	r0, [pc, #44]	; 209c <heal_nick+0x148>
    206c:	ldr	r1, [pc, #44]	; 20a0 <heal_nick+0x14c>
    2070:	ldr	r3, [pc, #44]	; 20a4 <heal_nick+0x150>
    2074:	mov	r2, #288	; 0x120
    2078:	add	r0, pc, r0
    207c:	add	r1, pc, r1
    2080:	add	r3, pc, r3
    2084:	bl	bf0 <__assert_fail@plt>
    2088:	.word	0x00011120
    208c:	.word	0x0000040b
    2090:	.word	0x0000040e
    2094:	.word	0x0000042c
    2098:	.word	0x000004e8
    209c:	.word	0x0000019e
    20a0:	.word	0x0000014d
    20a4:	.word	0x00000165

000020a8 <hurt_remove>:
    20a8:	push	{r4, r5, r6, sl, fp, lr}
    20ac:	add	fp, sp, #16
    20b0:	mov	r5, r0
    20b4:	ldr	r0, [pc, #140]	; 2148 <hurt_remove+0xa0>
    20b8:	ldr	r0, [pc, r0]
    20bc:	ldr	r6, [r0]
    20c0:	cmp	r6, #0
    20c4:	beq	20ec <hurt_remove+0x44>
    20c8:	ldr	r4, [r6]
    20cc:	mov	r0, r5
    20d0:	ldr	r1, [r4]
    20d4:	bl	ae8 <rb_strcasecmp@plt>
    20d8:	cmp	r0, #0
    20dc:	beq	2100 <hurt_remove+0x58>
    20e0:	ldr	r6, [r6, #8]
    20e4:	cmp	r6, #0
    20e8:	bne	20c8 <hurt_remove+0x20>
    20ec:	ldr	r1, [pc, #88]	; 214c <hurt_remove+0xa4>
    20f0:	mov	r0, #0
    20f4:	ldr	r1, [pc, r1]
    20f8:	pop	{r4, r5, r6, sl, fp, lr}
    20fc:	b	1e68 <rb_dlinkFindDestroy>
    2100:	ldr	r1, [pc, #72]	; 2150 <hurt_remove+0xa8>
    2104:	mov	r0, r4
    2108:	ldr	r1, [pc, r1]
    210c:	bl	1e68 <rb_dlinkFindDestroy>
    2110:	cmp	r4, #0
    2114:	beq	2144 <hurt_remove+0x9c>
    2118:	ldr	r0, [r4]
    211c:	cmp	r0, #0
    2120:	beq	2128 <hurt_remove+0x80>
    2124:	bl	adc <free@plt>
    2128:	ldr	r0, [r4, #12]
    212c:	cmp	r0, #0
    2130:	beq	2138 <hurt_remove+0x90>
    2134:	bl	adc <free@plt>
    2138:	mov	r0, r4
    213c:	pop	{r4, r5, r6, sl, fp, lr}
    2140:	b	adc <free@plt>
    2144:	pop	{r4, r5, r6, sl, fp, pc}
    2148:	.word	0x00010fd0
    214c:	.word	0x00010f94
    2150:	.word	0x00010f80

Disassembly of section .fini:

00002154 <_fini>:
    2154:	push	{r3, lr}
    2158:	pop	{r3, pc}
