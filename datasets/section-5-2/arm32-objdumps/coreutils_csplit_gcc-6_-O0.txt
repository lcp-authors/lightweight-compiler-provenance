
../repos/coreutils/src/csplit:     file format elf32-littlearm


Disassembly of section .init:

00011158 <.init>:
   11158:	push	{r3, lr}
   1115c:	bl	1158c <__assert_fail@plt+0x48>
   11160:	pop	{r3, pc}

Disassembly of section .plt:

00011164 <pthread_mutex_unlock@plt-0x14>:
   11164:	push	{lr}		; (str lr, [sp, #-4]!)
   11168:	ldr	lr, [pc, #4]	; 11174 <pthread_mutex_unlock@plt-0x4>
   1116c:	add	lr, pc, lr
   11170:	ldr	pc, [lr, #8]!
   11174:	andeq	r5, r3, ip, lsl #29

00011178 <pthread_mutex_unlock@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #217088	; 0x35000
   11180:	ldr	pc, [ip, #3724]!	; 0xe8c

00011184 <fdopen@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #217088	; 0x35000
   1118c:	ldr	pc, [ip, #3716]!	; 0xe84

00011190 <calloc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #217088	; 0x35000
   11198:	ldr	pc, [ip, #3708]!	; 0xe7c

0001119c <fputs_unlocked@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #217088	; 0x35000
   111a4:	ldr	pc, [ip, #3700]!	; 0xe74

000111a8 <wctype@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #217088	; 0x35000
   111b0:	ldr	pc, [ip, #3692]!	; 0xe6c

000111b4 <raise@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #217088	; 0x35000
   111bc:	ldr	pc, [ip, #3684]!	; 0xe64

000111c0 <wcrtomb@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #217088	; 0x35000
   111c8:	ldr	pc, [ip, #3676]!	; 0xe5c

000111cc <iswctype@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #217088	; 0x35000
   111d4:	ldr	pc, [ip, #3668]!	; 0xe54

000111d8 <strcmp@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #217088	; 0x35000
   111e0:	ldr	pc, [ip, #3660]!	; 0xe4c

000111e4 <printf@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #217088	; 0x35000
   111ec:	ldr	pc, [ip, #3652]!	; 0xe44

000111f0 <read@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #217088	; 0x35000
   111f8:	ldr	pc, [ip, #3644]!	; 0xe3c

000111fc <pthread_mutex_destroy@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #217088	; 0x35000
   11204:	ldr	pc, [ip, #3636]!	; 0xe34

00011208 <fflush@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #217088	; 0x35000
   11210:	ldr	pc, [ip, #3628]!	; 0xe2c

00011214 <sigprocmask@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #217088	; 0x35000
   1121c:	ldr	pc, [ip, #3620]!	; 0xe24

00011220 <memmove@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #217088	; 0x35000
   11228:	ldr	pc, [ip, #3612]!	; 0xe1c

0001122c <free@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #217088	; 0x35000
   11234:	ldr	pc, [ip, #3604]!	; 0xe14

00011238 <pthread_mutex_lock@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #217088	; 0x35000
   11240:	ldr	pc, [ip, #3596]!	; 0xe0c

00011244 <_exit@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #217088	; 0x35000
   1124c:	ldr	pc, [ip, #3588]!	; 0xe04

00011250 <memcpy@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #217088	; 0x35000
   11258:	ldr	pc, [ip, #3580]!	; 0xdfc

0001125c <tolower@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #217088	; 0x35000
   11264:	ldr	pc, [ip, #3572]!	; 0xdf4

00011268 <pthread_mutex_init@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #217088	; 0x35000
   11270:	ldr	pc, [ip, #3564]!	; 0xdec

00011274 <towlower@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #217088	; 0x35000
   1127c:	ldr	pc, [ip, #3556]!	; 0xde4

00011280 <mbsinit@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #217088	; 0x35000
   11288:	ldr	pc, [ip, #3548]!	; 0xddc

0001128c <signal@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #217088	; 0x35000
   11294:	ldr	pc, [ip, #3540]!	; 0xdd4

00011298 <fwrite_unlocked@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #217088	; 0x35000
   112a0:	ldr	pc, [ip, #3532]!	; 0xdcc

000112a4 <memcmp@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #217088	; 0x35000
   112ac:	ldr	pc, [ip, #3524]!	; 0xdc4

000112b0 <fputc_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #217088	; 0x35000
   112b8:	ldr	pc, [ip, #3516]!	; 0xdbc

000112bc <unlink@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #217088	; 0x35000
   112c4:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c8 <dup2@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #217088	; 0x35000
   112d0:	ldr	pc, [ip, #3500]!	; 0xdac

000112d4 <realloc@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #217088	; 0x35000
   112dc:	ldr	pc, [ip, #3492]!	; 0xda4

000112e0 <sigismember@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #217088	; 0x35000
   112e8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112ec <textdomain@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #217088	; 0x35000
   112f4:	ldr	pc, [ip, #3476]!	; 0xd94

000112f8 <rawmemchr@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #217088	; 0x35000
   11300:	ldr	pc, [ip, #3468]!	; 0xd8c

00011304 <iswprint@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #217088	; 0x35000
   1130c:	ldr	pc, [ip, #3460]!	; 0xd84

00011310 <sigaction@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #217088	; 0x35000
   11318:	ldr	pc, [ip, #3452]!	; 0xd7c

0001131c <fwrite@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #217088	; 0x35000
   11324:	ldr	pc, [ip, #3444]!	; 0xd74

00011328 <lseek64@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #217088	; 0x35000
   11330:	ldr	pc, [ip, #3436]!	; 0xd6c

00011334 <__ctype_get_mb_cur_max@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #217088	; 0x35000
   1133c:	ldr	pc, [ip, #3428]!	; 0xd64

00011340 <strcpy@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #217088	; 0x35000
   11348:	ldr	pc, [ip, #3420]!	; 0xd5c

0001134c <__fpending@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #217088	; 0x35000
   11354:	ldr	pc, [ip, #3412]!	; 0xd54

00011358 <ferror_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #217088	; 0x35000
   11360:	ldr	pc, [ip, #3404]!	; 0xd4c

00011364 <mbrtowc@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #217088	; 0x35000
   1136c:	ldr	pc, [ip, #3396]!	; 0xd44

00011370 <error@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #217088	; 0x35000
   11378:	ldr	pc, [ip, #3388]!	; 0xd3c

0001137c <open64@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #217088	; 0x35000
   11384:	ldr	pc, [ip, #3380]!	; 0xd34

00011388 <malloc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #217088	; 0x35000
   11390:	ldr	pc, [ip, #3372]!	; 0xd2c

00011394 <sigaddset@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #217088	; 0x35000
   1139c:	ldr	pc, [ip, #3364]!	; 0xd24

000113a0 <__libc_start_main@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #217088	; 0x35000
   113a8:	ldr	pc, [ip, #3356]!	; 0xd1c

000113ac <__freading@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #217088	; 0x35000
   113b4:	ldr	pc, [ip, #3348]!	; 0xd14

000113b8 <__gmon_start__@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #217088	; 0x35000
   113c0:	ldr	pc, [ip, #3340]!	; 0xd0c

000113c4 <getopt_long@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #217088	; 0x35000
   113cc:	ldr	pc, [ip, #3332]!	; 0xd04

000113d0 <__ctype_b_loc@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #217088	; 0x35000
   113d8:	ldr	pc, [ip, #3324]!	; 0xcfc

000113dc <exit@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #217088	; 0x35000
   113e4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e8 <gettext@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #217088	; 0x35000
   113f0:	ldr	pc, [ip, #3308]!	; 0xcec

000113f4 <strlen@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #217088	; 0x35000
   113fc:	ldr	pc, [ip, #3300]!	; 0xce4

00011400 <strchr@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #217088	; 0x35000
   11408:	ldr	pc, [ip, #3292]!	; 0xcdc

0001140c <fprintf@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #217088	; 0x35000
   11414:	ldr	pc, [ip, #3284]!	; 0xcd4

00011418 <__errno_location@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #217088	; 0x35000
   11420:	ldr	pc, [ip, #3276]!	; 0xccc

00011424 <iswalnum@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #217088	; 0x35000
   1142c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011430 <snprintf@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #217088	; 0x35000
   11438:	ldr	pc, [ip, #3260]!	; 0xcbc

0001143c <__cxa_atexit@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #217088	; 0x35000
   11444:	ldr	pc, [ip, #3252]!	; 0xcb4

00011448 <memset@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #217088	; 0x35000
   11450:	ldr	pc, [ip, #3244]!	; 0xcac

00011454 <btowc@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #217088	; 0x35000
   1145c:	ldr	pc, [ip, #3236]!	; 0xca4

00011460 <fileno@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #217088	; 0x35000
   11468:	ldr	pc, [ip, #3228]!	; 0xc9c

0001146c <strtoumax@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #217088	; 0x35000
   11474:	ldr	pc, [ip, #3220]!	; 0xc94

00011478 <strtoimax@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #217088	; 0x35000
   11480:	ldr	pc, [ip, #3212]!	; 0xc8c

00011484 <fclose@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #217088	; 0x35000
   1148c:	ldr	pc, [ip, #3204]!	; 0xc84

00011490 <fseeko64@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #217088	; 0x35000
   11498:	ldr	pc, [ip, #3196]!	; 0xc7c

0001149c <fcntl64@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #217088	; 0x35000
   114a4:	ldr	pc, [ip, #3188]!	; 0xc74

000114a8 <setlocale@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #217088	; 0x35000
   114b0:	ldr	pc, [ip, #3180]!	; 0xc6c

000114b4 <sigemptyset@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #217088	; 0x35000
   114bc:	ldr	pc, [ip, #3172]!	; 0xc64

000114c0 <toupper@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #217088	; 0x35000
   114c8:	ldr	pc, [ip, #3164]!	; 0xc5c

000114cc <strrchr@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #217088	; 0x35000
   114d4:	ldr	pc, [ip, #3156]!	; 0xc54

000114d8 <nl_langinfo@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #217088	; 0x35000
   114e0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114e4 <fputc@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #217088	; 0x35000
   114ec:	ldr	pc, [ip, #3140]!	; 0xc44

000114f0 <sprintf@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #217088	; 0x35000
   114f8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114fc <fopen64@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #217088	; 0x35000
   11504:	ldr	pc, [ip, #3124]!	; 0xc34

00011508 <bindtextdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #217088	; 0x35000
   11510:	ldr	pc, [ip, #3116]!	; 0xc2c

00011514 <towupper@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #217088	; 0x35000
   1151c:	ldr	pc, [ip, #3108]!	; 0xc24

00011520 <strncmp@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #217088	; 0x35000
   11528:	ldr	pc, [ip, #3100]!	; 0xc1c

0001152c <abort@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #217088	; 0x35000
   11534:	ldr	pc, [ip, #3092]!	; 0xc14

00011538 <close@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #217088	; 0x35000
   11540:	ldr	pc, [ip, #3084]!	; 0xc0c

00011544 <__assert_fail@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #217088	; 0x35000
   1154c:	ldr	pc, [ip, #3076]!	; 0xc04

Disassembly of section .text:

00011550 <.text>:
   11550:	mov	fp, #0
   11554:	mov	lr, #0
   11558:	pop	{r1}		; (ldr r1, [sp], #4)
   1155c:	mov	r2, sp
   11560:	push	{r2}		; (str r2, [sp, #-4]!)
   11564:	push	{r0}		; (str r0, [sp, #-4]!)
   11568:	ldr	ip, [pc, #16]	; 11580 <__assert_fail@plt+0x3c>
   1156c:	push	{ip}		; (str ip, [sp, #-4]!)
   11570:	ldr	r0, [pc, #12]	; 11584 <__assert_fail@plt+0x40>
   11574:	ldr	r3, [pc, #12]	; 11588 <__assert_fail@plt+0x44>
   11578:	bl	113a0 <__libc_start_main@plt>
   1157c:	bl	1152c <abort@plt>
   11580:	andeq	r4, r3, r8, lsl #29
   11584:	andeq	r4, r1, r8, lsl #2
   11588:	andeq	r4, r3, r8, lsr #28
   1158c:	ldr	r3, [pc, #20]	; 115a8 <__assert_fail@plt+0x64>
   11590:	ldr	r2, [pc, #20]	; 115ac <__assert_fail@plt+0x68>
   11594:	add	r3, pc, r3
   11598:	ldr	r2, [r3, r2]
   1159c:	cmp	r2, #0
   115a0:	bxeq	lr
   115a4:	b	113b8 <__gmon_start__@plt>
   115a8:	andeq	r5, r3, r4, ror #20
   115ac:	andeq	r0, r0, r4, asr r1
   115b0:	ldr	r3, [pc, #28]	; 115d4 <__assert_fail@plt+0x90>
   115b4:	ldr	r0, [pc, #28]	; 115d8 <__assert_fail@plt+0x94>
   115b8:	sub	r3, r3, r0
   115bc:	cmp	r3, #6
   115c0:	bxls	lr
   115c4:	ldr	r3, [pc, #16]	; 115dc <__assert_fail@plt+0x98>
   115c8:	cmp	r3, #0
   115cc:	bxeq	lr
   115d0:	bx	r3
   115d4:	andeq	r7, r4, pc, lsr #3
   115d8:	andeq	r7, r4, ip, lsr #3
   115dc:	andeq	r0, r0, r0
   115e0:	ldr	r1, [pc, #36]	; 1160c <__assert_fail@plt+0xc8>
   115e4:	ldr	r0, [pc, #36]	; 11610 <__assert_fail@plt+0xcc>
   115e8:	sub	r1, r1, r0
   115ec:	asr	r1, r1, #2
   115f0:	add	r1, r1, r1, lsr #31
   115f4:	asrs	r1, r1, #1
   115f8:	bxeq	lr
   115fc:	ldr	r3, [pc, #16]	; 11614 <__assert_fail@plt+0xd0>
   11600:	cmp	r3, #0
   11604:	bxeq	lr
   11608:	bx	r3
   1160c:	andeq	r7, r4, ip, lsr #3
   11610:	andeq	r7, r4, ip, lsr #3
   11614:	andeq	r0, r0, r0
   11618:	push	{r4, lr}
   1161c:	ldr	r4, [pc, #24]	; 1163c <__assert_fail@plt+0xf8>
   11620:	ldrb	r3, [r4]
   11624:	cmp	r3, #0
   11628:	popne	{r4, pc}
   1162c:	bl	115b0 <__assert_fail@plt+0x6c>
   11630:	mov	r3, #1
   11634:	strb	r3, [r4]
   11638:	pop	{r4, pc}
   1163c:	andeq	r7, r4, ip, asr #3
   11640:	ldr	r0, [pc, #40]	; 11670 <__assert_fail@plt+0x12c>
   11644:	ldr	r3, [r0]
   11648:	cmp	r3, #0
   1164c:	bne	11654 <__assert_fail@plt+0x110>
   11650:	b	115e0 <__assert_fail@plt+0x9c>
   11654:	ldr	r3, [pc, #24]	; 11674 <__assert_fail@plt+0x130>
   11658:	cmp	r3, #0
   1165c:	beq	11650 <__assert_fail@plt+0x10c>
   11660:	push	{r4, lr}
   11664:	blx	r3
   11668:	pop	{r4, lr}
   1166c:	b	115e0 <__assert_fail@plt+0x9c>
   11670:	andeq	r6, r4, r4, lsl pc
   11674:	andeq	r0, r0, r0
   11678:	push	{fp, lr}
   1167c:	add	fp, sp, #4
   11680:	ldr	r0, [pc, #32]	; 116a8 <__assert_fail@plt+0x164>
   11684:	bl	113e8 <gettext@plt>
   11688:	mov	r2, r0
   1168c:	ldr	r3, [pc, #24]	; 116ac <__assert_fail@plt+0x168>
   11690:	ldr	r3, [r3]
   11694:	mov	r1, r3
   11698:	mov	r0, r2
   1169c:	bl	1119c <fputs_unlocked@plt>
   116a0:	nop			; (mov r0, r0)
   116a4:	pop	{fp, pc}
   116a8:			; <UNDEFINED> instruction: 0x00034eb0
   116ac:	andeq	r7, r4, r4, asr #3
   116b0:	push	{fp, lr}
   116b4:	add	fp, sp, #4
   116b8:	sub	sp, sp, #80	; 0x50
   116bc:	str	r0, [fp, #-80]	; 0xffffffb0
   116c0:	ldr	r3, [pc, #348]	; 11824 <__assert_fail@plt+0x2e0>
   116c4:	sub	ip, fp, #72	; 0x48
   116c8:	mov	lr, r3
   116cc:	ldm	lr!, {r0, r1, r2, r3}
   116d0:	stmia	ip!, {r0, r1, r2, r3}
   116d4:	ldm	lr!, {r0, r1, r2, r3}
   116d8:	stmia	ip!, {r0, r1, r2, r3}
   116dc:	ldm	lr!, {r0, r1, r2, r3}
   116e0:	stmia	ip!, {r0, r1, r2, r3}
   116e4:	ldm	lr, {r0, r1}
   116e8:	stm	ip, {r0, r1}
   116ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   116f0:	str	r3, [fp, #-8]
   116f4:	sub	r3, fp, #72	; 0x48
   116f8:	str	r3, [fp, #-12]
   116fc:	b	1170c <__assert_fail@plt+0x1c8>
   11700:	ldr	r3, [fp, #-12]
   11704:	add	r3, r3, #8
   11708:	str	r3, [fp, #-12]
   1170c:	ldr	r3, [fp, #-12]
   11710:	ldr	r3, [r3]
   11714:	cmp	r3, #0
   11718:	beq	1173c <__assert_fail@plt+0x1f8>
   1171c:	ldr	r3, [fp, #-12]
   11720:	ldr	r3, [r3]
   11724:	mov	r1, r3
   11728:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1172c:	bl	111d8 <strcmp@plt>
   11730:	mov	r3, r0
   11734:	cmp	r3, #0
   11738:	bne	11700 <__assert_fail@plt+0x1bc>
   1173c:	ldr	r3, [fp, #-12]
   11740:	ldr	r3, [r3, #4]
   11744:	cmp	r3, #0
   11748:	beq	11758 <__assert_fail@plt+0x214>
   1174c:	ldr	r3, [fp, #-12]
   11750:	ldr	r3, [r3, #4]
   11754:	str	r3, [fp, #-8]
   11758:	ldr	r0, [pc, #200]	; 11828 <__assert_fail@plt+0x2e4>
   1175c:	bl	113e8 <gettext@plt>
   11760:	mov	r3, r0
   11764:	ldr	r2, [pc, #192]	; 1182c <__assert_fail@plt+0x2e8>
   11768:	ldr	r1, [pc, #192]	; 11830 <__assert_fail@plt+0x2ec>
   1176c:	mov	r0, r3
   11770:	bl	111e4 <printf@plt>
   11774:	mov	r1, #0
   11778:	mov	r0, #5
   1177c:	bl	114a8 <setlocale@plt>
   11780:	str	r0, [fp, #-16]
   11784:	ldr	r3, [fp, #-16]
   11788:	cmp	r3, #0
   1178c:	beq	117cc <__assert_fail@plt+0x288>
   11790:	mov	r2, #3
   11794:	ldr	r1, [pc, #152]	; 11834 <__assert_fail@plt+0x2f0>
   11798:	ldr	r0, [fp, #-16]
   1179c:	bl	11520 <strncmp@plt>
   117a0:	mov	r3, r0
   117a4:	cmp	r3, #0
   117a8:	beq	117cc <__assert_fail@plt+0x288>
   117ac:	ldr	r0, [pc, #132]	; 11838 <__assert_fail@plt+0x2f4>
   117b0:	bl	113e8 <gettext@plt>
   117b4:	mov	r2, r0
   117b8:	ldr	r3, [pc, #124]	; 1183c <__assert_fail@plt+0x2f8>
   117bc:	ldr	r3, [r3]
   117c0:	mov	r1, r3
   117c4:	mov	r0, r2
   117c8:	bl	1119c <fputs_unlocked@plt>
   117cc:	ldr	r0, [pc, #108]	; 11840 <__assert_fail@plt+0x2fc>
   117d0:	bl	113e8 <gettext@plt>
   117d4:	mov	r3, r0
   117d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   117dc:	ldr	r1, [pc, #72]	; 1182c <__assert_fail@plt+0x2e8>
   117e0:	mov	r0, r3
   117e4:	bl	111e4 <printf@plt>
   117e8:	ldr	r0, [pc, #84]	; 11844 <__assert_fail@plt+0x300>
   117ec:	bl	113e8 <gettext@plt>
   117f0:	ldr	r2, [fp, #-8]
   117f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   117f8:	cmp	r2, r3
   117fc:	bne	11808 <__assert_fail@plt+0x2c4>
   11800:	ldr	r3, [pc, #64]	; 11848 <__assert_fail@plt+0x304>
   11804:	b	1180c <__assert_fail@plt+0x2c8>
   11808:	ldr	r3, [pc, #60]	; 1184c <__assert_fail@plt+0x308>
   1180c:	mov	r2, r3
   11810:	ldr	r1, [fp, #-8]
   11814:	bl	111e4 <printf@plt>
   11818:	nop			; (mov r0, r0)
   1181c:	sub	sp, fp, #4
   11820:	pop	{fp, pc}
   11824:	andeq	r5, r3, r0, ror r0
   11828:	strdeq	r4, [r3], -ip
   1182c:	andeq	r4, r3, r4, lsl pc
   11830:	andeq	r4, r3, ip, lsr pc
   11834:	andeq	r4, r3, ip, asr #30
   11838:	andeq	r4, r3, r0, asr pc
   1183c:	andeq	r7, r4, r4, asr #3
   11840:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   11844:			; <UNDEFINED> instruction: 0x00034fb4
   11848:	andeq	r4, r3, r8, ror #31
   1184c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   11850:	push	{fp, lr}
   11854:	add	fp, sp, #4
   11858:	sub	sp, sp, #128	; 0x80
   1185c:	bl	13248 <__assert_fail@plt+0x1d04>
   11860:	sub	r3, fp, #132	; 0x84
   11864:	mov	r2, r3
   11868:	ldr	r1, [pc, #44]	; 1189c <__assert_fail@plt+0x358>
   1186c:	mov	r0, #0
   11870:	bl	11214 <sigprocmask@plt>
   11874:	mov	r0, #0
   11878:	bl	13150 <__assert_fail@plt+0x1c0c>
   1187c:	sub	r3, fp, #132	; 0x84
   11880:	mov	r2, #0
   11884:	mov	r1, r3
   11888:	mov	r0, #2
   1188c:	bl	11214 <sigprocmask@plt>
   11890:	nop			; (mov r0, r0)
   11894:	sub	sp, fp, #4
   11898:	pop	{fp, pc}
   1189c:	andeq	r7, r4, r8, lsr #4
   118a0:	push	{fp, lr}
   118a4:	add	fp, sp, #4
   118a8:	bl	11850 <__assert_fail@plt+0x30c>
   118ac:	mov	r0, #1
   118b0:	bl	113dc <exit@plt>
   118b4:	push	{fp, lr}
   118b8:	add	fp, sp, #4
   118bc:	ldr	r0, [pc, #24]	; 118dc <__assert_fail@plt+0x398>
   118c0:	bl	113e8 <gettext@plt>
   118c4:	mov	r3, r0
   118c8:	ldr	r2, [pc, #16]	; 118e0 <__assert_fail@plt+0x39c>
   118cc:	mov	r1, #0
   118d0:	mov	r0, #0
   118d4:	bl	11370 <error@plt>
   118d8:	bl	118a0 <__assert_fail@plt+0x35c>
   118dc:	andeq	r5, r3, ip, asr #3
   118e0:	andeq	r5, r3, r0, ror #3
   118e4:	push	{fp, lr}
   118e8:	add	fp, sp, #4
   118ec:	sub	sp, sp, #8
   118f0:	str	r0, [fp, #-8]
   118f4:	mov	r0, #1
   118f8:	bl	13150 <__assert_fail@plt+0x1c0c>
   118fc:	mov	r1, #0
   11900:	ldr	r0, [fp, #-8]
   11904:	bl	1128c <signal@plt>
   11908:	ldr	r0, [fp, #-8]
   1190c:	bl	111b4 <raise@plt>
   11910:	nop			; (mov r0, r0)
   11914:	sub	sp, fp, #4
   11918:	pop	{fp, pc}
   1191c:	push	{fp, lr}
   11920:	add	fp, sp, #4
   11924:	sub	sp, sp, #8
   11928:	str	r0, [fp, #-8]
   1192c:	str	r1, [fp, #-12]
   11930:	ldr	r3, [pc, #44]	; 11964 <__assert_fail@plt+0x420>
   11934:	ldr	r3, [r3]
   11938:	mov	r0, r3
   1193c:	bl	14dec <__assert_fail@plt+0x38a8>
   11940:	ldr	r2, [pc, #28]	; 11964 <__assert_fail@plt+0x420>
   11944:	ldr	r3, [fp, #-8]
   11948:	str	r3, [r2]
   1194c:	ldr	r2, [pc, #20]	; 11968 <__assert_fail@plt+0x424>
   11950:	ldr	r3, [fp, #-12]
   11954:	str	r3, [r2]
   11958:	nop			; (mov r0, r0)
   1195c:	sub	sp, fp, #4
   11960:	pop	{fp, pc}
   11964:	ldrdeq	r7, [r4], -r4
   11968:	ldrdeq	r7, [r4], -r8
   1196c:	push	{r4, fp, lr}
   11970:	add	fp, sp, #8
   11974:	sub	sp, sp, #20
   11978:	str	r0, [fp, #-24]	; 0xffffffe8
   1197c:	str	r1, [fp, #-28]	; 0xffffffe4
   11980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11984:	cmp	r3, #0
   11988:	bne	11994 <__assert_fail@plt+0x450>
   1198c:	mov	r3, #0
   11990:	b	11a04 <__assert_fail@plt+0x4c0>
   11994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11998:	mov	r2, r3
   1199c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   119a0:	mov	r0, #0
   119a4:	bl	30a94 <__assert_fail@plt+0x1f550>
   119a8:	mov	r3, r0
   119ac:	str	r3, [fp, #-16]
   119b0:	ldr	r3, [fp, #-16]
   119b4:	cmp	r3, #0
   119b8:	bne	119c8 <__assert_fail@plt+0x484>
   119bc:	ldr	r3, [pc, #76]	; 11a10 <__assert_fail@plt+0x4cc>
   119c0:	mov	r2, #1
   119c4:	strb	r2, [r3]
   119c8:	ldr	r3, [fp, #-16]
   119cc:	cmn	r3, #1
   119d0:	bne	11a00 <__assert_fail@plt+0x4bc>
   119d4:	bl	11418 <__errno_location@plt>
   119d8:	mov	r3, r0
   119dc:	ldr	r4, [r3]
   119e0:	ldr	r0, [pc, #44]	; 11a14 <__assert_fail@plt+0x4d0>
   119e4:	bl	113e8 <gettext@plt>
   119e8:	mov	r3, r0
   119ec:	mov	r2, r3
   119f0:	mov	r1, r4
   119f4:	mov	r0, #0
   119f8:	bl	11370 <error@plt>
   119fc:	bl	118a0 <__assert_fail@plt+0x35c>
   11a00:	ldr	r3, [fp, #-16]
   11a04:	mov	r0, r3
   11a08:	sub	sp, fp, #8
   11a0c:	pop	{r4, fp, pc}
   11a10:	strdeq	r7, [r4], -r0
   11a14:	andeq	r5, r3, r4, ror #3
   11a18:	push	{fp}		; (str fp, [sp, #-4]!)
   11a1c:	add	fp, sp, #0
   11a20:	sub	sp, sp, #12
   11a24:	str	r0, [fp, #-8]
   11a28:	ldr	r3, [fp, #-8]
   11a2c:	mov	r2, #0
   11a30:	str	r2, [r3]
   11a34:	ldr	r3, [fp, #-8]
   11a38:	mov	r2, #0
   11a3c:	str	r2, [r3, #4]
   11a40:	ldr	r3, [fp, #-8]
   11a44:	mov	r2, #0
   11a48:	str	r2, [r3, #8]
   11a4c:	nop			; (mov r0, r0)
   11a50:	add	sp, fp, #0
   11a54:	pop	{fp}		; (ldr fp, [sp], #4)
   11a58:	bx	lr
   11a5c:	push	{fp, lr}
   11a60:	add	fp, sp, #4
   11a64:	sub	sp, sp, #8
   11a68:	mov	r0, #656	; 0x290
   11a6c:	bl	31354 <__assert_fail@plt+0x1fe10>
   11a70:	mov	r3, r0
   11a74:	str	r3, [fp, #-8]
   11a78:	ldr	r3, [fp, #-8]
   11a7c:	mov	r2, #0
   11a80:	str	r2, [r3, #652]	; 0x28c
   11a84:	ldr	r0, [fp, #-8]
   11a88:	bl	11a18 <__assert_fail@plt+0x4d4>
   11a8c:	ldr	r3, [fp, #-8]
   11a90:	mov	r0, r3
   11a94:	sub	sp, fp, #4
   11a98:	pop	{fp, pc}
   11a9c:	push	{r4, fp, lr}
   11aa0:	add	fp, sp, #8
   11aa4:	sub	sp, sp, #28
   11aa8:	str	r0, [fp, #-24]	; 0xffffffe8
   11aac:	str	r1, [fp, #-28]	; 0xffffffe4
   11ab0:	str	r2, [fp, #-32]	; 0xffffffe0
   11ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ab8:	ldr	r3, [r3, #32]
   11abc:	cmp	r3, #0
   11ac0:	bne	11ae4 <__assert_fail@plt+0x5a0>
   11ac4:	bl	11a5c <__assert_fail@plt+0x518>
   11ac8:	mov	r2, r0
   11acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ad0:	str	r2, [r3, #36]	; 0x24
   11ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ad8:	ldr	r2, [r3, #36]	; 0x24
   11adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ae0:	str	r2, [r3, #32]
   11ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ae8:	ldr	r3, [r3, #36]	; 0x24
   11aec:	ldr	r3, [r3]
   11af0:	cmp	r3, #80	; 0x50
   11af4:	bne	11b20 <__assert_fail@plt+0x5dc>
   11af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11afc:	ldr	r4, [r3, #36]	; 0x24
   11b00:	bl	11a5c <__assert_fail@plt+0x518>
   11b04:	mov	r3, r0
   11b08:	str	r3, [r4, #652]	; 0x28c
   11b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b10:	ldr	r3, [r3, #36]	; 0x24
   11b14:	ldr	r2, [r3, #652]	; 0x28c
   11b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b1c:	str	r2, [r3, #36]	; 0x24
   11b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b24:	ldr	r3, [r3, #36]	; 0x24
   11b28:	str	r3, [fp, #-16]
   11b2c:	ldr	r3, [fp, #-16]
   11b30:	ldr	r3, [r3, #4]
   11b34:	ldr	r2, [fp, #-16]
   11b38:	add	r3, r3, #1
   11b3c:	lsl	r3, r3, #3
   11b40:	add	r3, r2, r3
   11b44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b48:	str	r2, [r3, #8]
   11b4c:	ldr	r3, [fp, #-16]
   11b50:	ldr	r3, [r3, #4]
   11b54:	ldr	r2, [fp, #-16]
   11b58:	add	r3, r3, #1
   11b5c:	lsl	r3, r3, #3
   11b60:	add	r3, r2, r3
   11b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11b68:	str	r2, [r3, #4]
   11b6c:	ldr	r3, [fp, #-16]
   11b70:	ldr	r3, [r3]
   11b74:	add	r2, r3, #1
   11b78:	ldr	r3, [fp, #-16]
   11b7c:	str	r2, [r3]
   11b80:	ldr	r3, [fp, #-16]
   11b84:	ldr	r3, [r3, #4]
   11b88:	add	r2, r3, #1
   11b8c:	ldr	r3, [fp, #-16]
   11b90:	str	r2, [r3, #4]
   11b94:	nop			; (mov r0, r0)
   11b98:	sub	sp, fp, #8
   11b9c:	pop	{r4, fp, pc}
   11ba0:	push	{fp, lr}
   11ba4:	add	fp, sp, #4
   11ba8:	sub	sp, sp, #32
   11bac:	str	r0, [fp, #-32]	; 0xffffffe0
   11bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bb4:	ldr	r3, [r3, #4]
   11bb8:	cmp	r3, #0
   11bbc:	bne	11bc8 <__assert_fail@plt+0x684>
   11bc0:	mov	r3, #0
   11bc4:	b	11d28 <__assert_fail@plt+0x7e4>
   11bc8:	mov	r3, #0
   11bcc:	str	r3, [fp, #-12]
   11bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bd4:	ldr	r3, [r3, #28]
   11bd8:	str	r3, [fp, #-8]
   11bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11be0:	ldr	r3, [r3, #4]
   11be4:	mov	r2, r3
   11be8:	ldr	r3, [fp, #-8]
   11bec:	add	r3, r3, r2
   11bf0:	str	r3, [fp, #-16]
   11bf4:	ldr	r3, [fp, #-16]
   11bf8:	mov	r2, #10
   11bfc:	strb	r2, [r3]
   11c00:	mov	r1, #10
   11c04:	ldr	r0, [fp, #-8]
   11c08:	bl	112f8 <rawmemchr@plt>
   11c0c:	str	r0, [fp, #-20]	; 0xffffffec
   11c10:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c14:	ldr	r3, [fp, #-16]
   11c18:	cmp	r2, r3
   11c1c:	beq	11c60 <__assert_fail@plt+0x71c>
   11c20:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c24:	ldr	r3, [fp, #-8]
   11c28:	sub	r3, r2, r3
   11c2c:	add	r3, r3, #1
   11c30:	str	r3, [fp, #-24]	; 0xffffffe8
   11c34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11c38:	ldr	r1, [fp, #-8]
   11c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c40:	bl	11a9c <__assert_fail@plt+0x558>
   11c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c48:	add	r3, r3, #1
   11c4c:	str	r3, [fp, #-8]
   11c50:	ldr	r3, [fp, #-12]
   11c54:	add	r3, r3, #1
   11c58:	str	r3, [fp, #-12]
   11c5c:	b	11c00 <__assert_fail@plt+0x6bc>
   11c60:	nop			; (mov r0, r0)
   11c64:	ldr	r2, [fp, #-16]
   11c68:	ldr	r3, [fp, #-8]
   11c6c:	sub	r3, r2, r3
   11c70:	str	r3, [fp, #-28]	; 0xffffffe4
   11c74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c78:	cmp	r3, #0
   11c7c:	beq	11ccc <__assert_fail@plt+0x788>
   11c80:	ldr	r3, [pc, #172]	; 11d34 <__assert_fail@plt+0x7f0>
   11c84:	ldrb	r3, [r3]
   11c88:	cmp	r3, #0
   11c8c:	beq	11cb0 <__assert_fail@plt+0x76c>
   11c90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11c94:	ldr	r1, [fp, #-8]
   11c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c9c:	bl	11a9c <__assert_fail@plt+0x558>
   11ca0:	ldr	r3, [fp, #-12]
   11ca4:	add	r3, r3, #1
   11ca8:	str	r3, [fp, #-12]
   11cac:	b	11ccc <__assert_fail@plt+0x788>
   11cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11cb4:	ldr	r0, [fp, #-8]
   11cb8:	bl	31d8c <__assert_fail@plt+0x20848>
   11cbc:	mov	r3, r0
   11cc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11cc4:	mov	r0, r3
   11cc8:	bl	1191c <__assert_fail@plt+0x3d8>
   11ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cd0:	ldr	r2, [fp, #-12]
   11cd4:	str	r2, [r3, #24]
   11cd8:	ldr	r3, [pc, #88]	; 11d38 <__assert_fail@plt+0x7f4>
   11cdc:	ldrd	r2, [r3]
   11ce0:	adds	r2, r2, #1
   11ce4:	adc	r3, r3, #0
   11ce8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11cec:	strd	r2, [r1, #8]
   11cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cf4:	ldrd	r2, [r3, #8]
   11cf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11cfc:	strd	r2, [r1, #16]
   11d00:	ldr	r3, [fp, #-12]
   11d04:	mov	r0, r3
   11d08:	asr	r1, r0, #31
   11d0c:	ldr	r3, [pc, #36]	; 11d38 <__assert_fail@plt+0x7f4>
   11d10:	ldrd	r2, [r3]
   11d14:	adds	r2, r2, r0
   11d18:	adc	r3, r3, r1
   11d1c:	ldr	r1, [pc, #20]	; 11d38 <__assert_fail@plt+0x7f4>
   11d20:	strd	r2, [r1]
   11d24:	ldr	r3, [fp, #-12]
   11d28:	mov	r0, r3
   11d2c:	sub	sp, fp, #4
   11d30:	pop	{fp, pc}
   11d34:	strdeq	r7, [r4], -r0
   11d38:	andeq	r7, r4, r0, ror #3
   11d3c:	push	{fp, lr}
   11d40:	add	fp, sp, #4
   11d44:	sub	sp, sp, #16
   11d48:	str	r0, [fp, #-16]
   11d4c:	ldr	r3, [fp, #-16]
   11d50:	ldr	r3, [r3, #32]
   11d54:	str	r3, [fp, #-8]
   11d58:	b	11d78 <__assert_fail@plt+0x834>
   11d5c:	ldr	r3, [fp, #-8]
   11d60:	ldr	r3, [r3, #652]	; 0x28c
   11d64:	str	r3, [fp, #-12]
   11d68:	ldr	r0, [fp, #-8]
   11d6c:	bl	14dec <__assert_fail@plt+0x38a8>
   11d70:	ldr	r3, [fp, #-12]
   11d74:	str	r3, [fp, #-8]
   11d78:	ldr	r3, [fp, #-8]
   11d7c:	cmp	r3, #0
   11d80:	bne	11d5c <__assert_fail@plt+0x818>
   11d84:	ldr	r3, [fp, #-16]
   11d88:	ldr	r3, [r3, #28]
   11d8c:	mov	r0, r3
   11d90:	bl	14dec <__assert_fail@plt+0x38a8>
   11d94:	ldr	r0, [fp, #-16]
   11d98:	bl	14dec <__assert_fail@plt+0x38a8>
   11d9c:	nop			; (mov r0, r0)
   11da0:	sub	sp, fp, #4
   11da4:	pop	{fp, pc}
   11da8:	push	{fp, lr}
   11dac:	add	fp, sp, #4
   11db0:	sub	sp, sp, #24
   11db4:	str	r0, [fp, #-16]
   11db8:	mov	r0, #48	; 0x30
   11dbc:	bl	31354 <__assert_fail@plt+0x1fe10>
   11dc0:	mov	r3, r0
   11dc4:	str	r3, [fp, #-8]
   11dc8:	ldr	r3, [fp, #-8]
   11dcc:	mov	r2, #0
   11dd0:	str	r2, [r3]
   11dd4:	ldr	r1, [fp, #-8]
   11dd8:	mov	r3, #1
   11ddc:	str	r3, [sp]
   11de0:	mvn	r3, #0
   11de4:	ldr	r2, [fp, #-16]
   11de8:	mov	r0, #0
   11dec:	bl	316dc <__assert_fail@plt+0x20198>
   11df0:	mov	r2, r0
   11df4:	ldr	r3, [fp, #-8]
   11df8:	str	r2, [r3, #28]
   11dfc:	ldr	r3, [fp, #-8]
   11e00:	mov	r2, #0
   11e04:	str	r2, [r3, #4]
   11e08:	ldr	r3, [pc, #100]	; 11e74 <__assert_fail@plt+0x930>
   11e0c:	ldrd	r2, [r3]
   11e10:	adds	r2, r2, #1
   11e14:	adc	r3, r3, #0
   11e18:	ldr	r1, [fp, #-8]
   11e1c:	strd	r2, [r1, #16]
   11e20:	ldr	r3, [fp, #-8]
   11e24:	ldrd	r2, [r3, #16]
   11e28:	ldr	r1, [fp, #-8]
   11e2c:	strd	r2, [r1, #8]
   11e30:	ldr	r3, [fp, #-8]
   11e34:	mov	r2, #0
   11e38:	str	r2, [r3, #24]
   11e3c:	ldr	r3, [fp, #-8]
   11e40:	mov	r2, #0
   11e44:	str	r2, [r3, #36]	; 0x24
   11e48:	ldr	r3, [fp, #-8]
   11e4c:	ldr	r2, [r3, #36]	; 0x24
   11e50:	ldr	r3, [fp, #-8]
   11e54:	str	r2, [r3, #32]
   11e58:	ldr	r3, [fp, #-8]
   11e5c:	mov	r2, #0
   11e60:	str	r2, [r3, #40]	; 0x28
   11e64:	ldr	r3, [fp, #-8]
   11e68:	mov	r0, r3
   11e6c:	sub	sp, fp, #4
   11e70:	pop	{fp, pc}
   11e74:	andeq	r7, r4, r0, ror #3
   11e78:	push	{fp}		; (str fp, [sp, #-4]!)
   11e7c:	add	fp, sp, #0
   11e80:	sub	sp, sp, #20
   11e84:	str	r0, [fp, #-16]
   11e88:	ldr	r3, [fp, #-16]
   11e8c:	mov	r2, #0
   11e90:	str	r2, [r3, #40]	; 0x28
   11e94:	ldr	r3, [fp, #-16]
   11e98:	ldr	r2, [r3, #32]
   11e9c:	ldr	r3, [fp, #-16]
   11ea0:	str	r2, [r3, #36]	; 0x24
   11ea4:	ldr	r3, [pc, #96]	; 11f0c <__assert_fail@plt+0x9c8>
   11ea8:	ldr	r3, [r3]
   11eac:	cmp	r3, #0
   11eb0:	bne	11ec4 <__assert_fail@plt+0x980>
   11eb4:	ldr	r2, [pc, #80]	; 11f0c <__assert_fail@plt+0x9c8>
   11eb8:	ldr	r3, [fp, #-16]
   11ebc:	str	r3, [r2]
   11ec0:	b	11efc <__assert_fail@plt+0x9b8>
   11ec4:	ldr	r3, [pc, #64]	; 11f0c <__assert_fail@plt+0x9c8>
   11ec8:	ldr	r3, [r3]
   11ecc:	str	r3, [fp, #-8]
   11ed0:	b	11ee0 <__assert_fail@plt+0x99c>
   11ed4:	ldr	r3, [fp, #-8]
   11ed8:	ldr	r3, [r3, #40]	; 0x28
   11edc:	str	r3, [fp, #-8]
   11ee0:	ldr	r3, [fp, #-8]
   11ee4:	ldr	r3, [r3, #40]	; 0x28
   11ee8:	cmp	r3, #0
   11eec:	bne	11ed4 <__assert_fail@plt+0x990>
   11ef0:	ldr	r3, [fp, #-8]
   11ef4:	ldr	r2, [fp, #-16]
   11ef8:	str	r2, [r3, #40]	; 0x28
   11efc:	nop			; (mov r0, r0)
   11f00:	add	sp, fp, #0
   11f04:	pop	{fp}		; (ldr fp, [sp], #4)
   11f08:	bx	lr
   11f0c:	ldrdeq	r7, [r4], -r0
   11f10:	push	{fp, lr}
   11f14:	add	fp, sp, #4
   11f18:	sub	sp, sp, #24
   11f1c:	ldr	r3, [pc, #564]	; 12158 <__assert_fail@plt+0xc14>
   11f20:	str	r3, [fp, #-24]	; 0xffffffe8
   11f24:	ldr	r3, [pc, #560]	; 1215c <__assert_fail@plt+0xc18>
   11f28:	ldrb	r3, [r3]
   11f2c:	cmp	r3, #0
   11f30:	beq	11f3c <__assert_fail@plt+0x9f8>
   11f34:	mov	r3, #0
   11f38:	b	1214c <__assert_fail@plt+0xc08>
   11f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f40:	ldr	r3, [pc, #536]	; 12160 <__assert_fail@plt+0xc1c>
   11f44:	ldr	r3, [r3]
   11f48:	cmp	r2, r3
   11f4c:	bgt	11f60 <__assert_fail@plt+0xa1c>
   11f50:	ldr	r3, [pc, #520]	; 12160 <__assert_fail@plt+0xc1c>
   11f54:	ldr	r3, [r3]
   11f58:	add	r3, r3, #1
   11f5c:	str	r3, [fp, #-24]	; 0xffffffe8
   11f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f64:	mov	r0, r3
   11f68:	bl	11da8 <__assert_fail@plt+0x864>
   11f6c:	str	r0, [fp, #-16]
   11f70:	ldr	r3, [fp, #-16]
   11f74:	ldr	r3, [r3]
   11f78:	str	r3, [fp, #-8]
   11f7c:	ldr	r3, [fp, #-16]
   11f80:	ldr	r3, [r3, #28]
   11f84:	str	r3, [fp, #-12]
   11f88:	ldr	r3, [pc, #464]	; 12160 <__assert_fail@plt+0xc1c>
   11f8c:	ldr	r3, [r3]
   11f90:	cmp	r3, #0
   11f94:	beq	12008 <__assert_fail@plt+0xac4>
   11f98:	ldr	r3, [pc, #452]	; 12164 <__assert_fail@plt+0xc20>
   11f9c:	ldr	r1, [r3]
   11fa0:	ldr	r3, [pc, #440]	; 12160 <__assert_fail@plt+0xc1c>
   11fa4:	ldr	r3, [r3]
   11fa8:	mov	r2, r3
   11fac:	ldr	r0, [fp, #-12]
   11fb0:	bl	11250 <memcpy@plt>
   11fb4:	ldr	r3, [pc, #420]	; 12160 <__assert_fail@plt+0xc1c>
   11fb8:	ldr	r3, [r3]
   11fbc:	mov	r2, r3
   11fc0:	ldr	r3, [fp, #-12]
   11fc4:	add	r3, r3, r2
   11fc8:	str	r3, [fp, #-12]
   11fcc:	ldr	r3, [fp, #-16]
   11fd0:	ldr	r2, [r3, #4]
   11fd4:	ldr	r3, [pc, #388]	; 12160 <__assert_fail@plt+0xc1c>
   11fd8:	ldr	r3, [r3]
   11fdc:	add	r2, r2, r3
   11fe0:	ldr	r3, [fp, #-16]
   11fe4:	str	r2, [r3, #4]
   11fe8:	ldr	r3, [pc, #368]	; 12160 <__assert_fail@plt+0xc1c>
   11fec:	ldr	r3, [r3]
   11ff0:	ldr	r2, [fp, #-8]
   11ff4:	sub	r3, r2, r3
   11ff8:	str	r3, [fp, #-8]
   11ffc:	ldr	r3, [pc, #348]	; 12160 <__assert_fail@plt+0xc1c>
   12000:	mov	r2, #0
   12004:	str	r2, [r3]
   12008:	ldr	r3, [fp, #-8]
   1200c:	sub	r3, r3, #1
   12010:	mov	r1, r3
   12014:	ldr	r0, [fp, #-12]
   12018:	bl	1196c <__assert_fail@plt+0x428>
   1201c:	mov	r2, r0
   12020:	ldr	r3, [fp, #-16]
   12024:	ldr	r3, [r3, #4]
   12028:	add	r2, r3, r2
   1202c:	ldr	r3, [fp, #-16]
   12030:	str	r2, [r3, #4]
   12034:	ldr	r0, [fp, #-16]
   12038:	bl	11ba0 <__assert_fail@plt+0x65c>
   1203c:	str	r0, [fp, #-20]	; 0xffffffec
   12040:	ldr	r3, [fp, #-20]	; 0xffffffec
   12044:	cmp	r3, #0
   12048:	bne	12118 <__assert_fail@plt+0xbd4>
   1204c:	ldr	r3, [pc, #264]	; 1215c <__assert_fail@plt+0xc18>
   12050:	ldrb	r3, [r3]
   12054:	cmp	r3, #0
   12058:	bne	12118 <__assert_fail@plt+0xbd4>
   1205c:	ldr	r3, [fp, #-16]
   12060:	ldr	r3, [r3]
   12064:	cmp	r3, #0
   12068:	bge	120b4 <__assert_fail@plt+0xb70>
   1206c:	ldr	r3, [fp, #-16]
   12070:	ldr	r3, [r3]
   12074:	cmn	r3, #1
   12078:	beq	120a4 <__assert_fail@plt+0xb60>
   1207c:	ldr	r3, [fp, #-16]
   12080:	ldr	r3, [r3]
   12084:	mov	r1, r3
   12088:	mov	r0, #-2147483648	; 0x80000000
   1208c:	bl	349a0 <__assert_fail@plt+0x2345c>
   12090:	mov	r3, r0
   12094:	cmp	r3, #1
   12098:	bgt	120a4 <__assert_fail@plt+0xb60>
   1209c:	mov	r3, #1
   120a0:	b	120a8 <__assert_fail@plt+0xb64>
   120a4:	mov	r3, #0
   120a8:	and	r3, r3, #1
   120ac:	uxtb	r3, r3
   120b0:	b	120cc <__assert_fail@plt+0xb88>
   120b4:	ldr	r3, [fp, #-16]
   120b8:	ldr	r3, [r3]
   120bc:	cmn	r3, #-1073741823	; 0xc0000001
   120c0:	movgt	r3, #1
   120c4:	movle	r3, #0
   120c8:	uxtb	r3, r3
   120cc:	cmp	r3, #0
   120d0:	beq	120ec <__assert_fail@plt+0xba8>
   120d4:	ldr	r3, [fp, #-16]
   120d8:	ldr	r3, [r3]
   120dc:	lsl	r3, r3, #1
   120e0:	str	r3, [fp, #-24]	; 0xffffffe8
   120e4:	mov	r3, #1
   120e8:	b	12100 <__assert_fail@plt+0xbbc>
   120ec:	ldr	r3, [fp, #-16]
   120f0:	ldr	r3, [r3]
   120f4:	lsl	r3, r3, #1
   120f8:	str	r3, [fp, #-24]	; 0xffffffe8
   120fc:	mov	r3, #0
   12100:	cmp	r3, #0
   12104:	beq	1210c <__assert_fail@plt+0xbc8>
   12108:	bl	118b4 <__assert_fail@plt+0x370>
   1210c:	ldr	r0, [fp, #-16]
   12110:	bl	11d3c <__assert_fail@plt+0x7f8>
   12114:	b	11f60 <__assert_fail@plt+0xa1c>
   12118:	ldr	r3, [fp, #-20]	; 0xffffffec
   1211c:	cmp	r3, #0
   12120:	beq	12130 <__assert_fail@plt+0xbec>
   12124:	ldr	r0, [fp, #-16]
   12128:	bl	11e78 <__assert_fail@plt+0x934>
   1212c:	b	12138 <__assert_fail@plt+0xbf4>
   12130:	ldr	r0, [fp, #-16]
   12134:	bl	11d3c <__assert_fail@plt+0x7f8>
   12138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1213c:	cmp	r3, #0
   12140:	movne	r3, #1
   12144:	moveq	r3, #0
   12148:	uxtb	r3, r3
   1214c:	mov	r0, r3
   12150:	sub	sp, fp, #4
   12154:	pop	{fp, pc}
   12158:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   1215c:	strdeq	r7, [r4], -r0
   12160:	ldrdeq	r7, [r4], -r8
   12164:	ldrdeq	r7, [r4], -r4
   12168:	push	{r4, r5, fp, lr}
   1216c:	add	fp, sp, #12
   12170:	ldr	r3, [pc, #96]	; 121d8 <__assert_fail@plt+0xc94>
   12174:	ldr	r3, [r3]
   12178:	cmp	r3, #0
   1217c:	bne	121c0 <__assert_fail@plt+0xc7c>
   12180:	bl	11f10 <__assert_fail@plt+0x9cc>
   12184:	mov	r3, r0
   12188:	eor	r3, r3, #1
   1218c:	uxtb	r3, r3
   12190:	cmp	r3, #0
   12194:	beq	121c0 <__assert_fail@plt+0xc7c>
   12198:	bl	11418 <__errno_location@plt>
   1219c:	mov	r3, r0
   121a0:	ldr	r4, [r3]
   121a4:	ldr	r0, [pc, #48]	; 121dc <__assert_fail@plt+0xc98>
   121a8:	bl	113e8 <gettext@plt>
   121ac:	mov	r3, r0
   121b0:	mov	r2, r3
   121b4:	mov	r1, r4
   121b8:	mov	r0, #1
   121bc:	bl	11370 <error@plt>
   121c0:	ldr	r3, [pc, #16]	; 121d8 <__assert_fail@plt+0xc94>
   121c4:	ldr	r3, [r3]
   121c8:	ldrd	r2, [r3, #16]
   121cc:	mov	r0, r2
   121d0:	mov	r1, r3
   121d4:	pop	{r4, r5, fp, pc}
   121d8:	ldrdeq	r7, [r4], -r0
   121dc:	strdeq	r5, [r3], -r0
   121e0:	push	{fp, lr}
   121e4:	add	fp, sp, #4
   121e8:	sub	sp, sp, #8
   121ec:	ldr	r3, [pc, #368]	; 12364 <__assert_fail@plt+0xe20>
   121f0:	ldr	r3, [r3]
   121f4:	cmp	r3, #0
   121f8:	beq	12218 <__assert_fail@plt+0xcd4>
   121fc:	ldr	r3, [pc, #352]	; 12364 <__assert_fail@plt+0xe20>
   12200:	ldr	r3, [r3]
   12204:	mov	r0, r3
   12208:	bl	11d3c <__assert_fail@plt+0x7f8>
   1220c:	ldr	r3, [pc, #336]	; 12364 <__assert_fail@plt+0xe20>
   12210:	mov	r2, #0
   12214:	str	r2, [r3]
   12218:	ldr	r3, [pc, #328]	; 12368 <__assert_fail@plt+0xe24>
   1221c:	ldr	r3, [r3]
   12220:	cmp	r3, #0
   12224:	bne	12248 <__assert_fail@plt+0xd04>
   12228:	bl	11f10 <__assert_fail@plt+0x9cc>
   1222c:	mov	r3, r0
   12230:	eor	r3, r3, #1
   12234:	uxtb	r3, r3
   12238:	cmp	r3, #0
   1223c:	beq	12248 <__assert_fail@plt+0xd04>
   12240:	mov	r3, #0
   12244:	b	12358 <__assert_fail@plt+0xe14>
   12248:	ldr	r3, [pc, #280]	; 12368 <__assert_fail@plt+0xe24>
   1224c:	ldr	r3, [r3]
   12250:	ldrd	r2, [r3, #16]
   12254:	ldr	r1, [pc, #272]	; 1236c <__assert_fail@plt+0xe28>
   12258:	ldrd	r0, [r1]
   1225c:	cmp	r0, r2
   12260:	sbcs	r3, r1, r3
   12264:	bge	1227c <__assert_fail@plt+0xd38>
   12268:	ldr	r3, [pc, #248]	; 12368 <__assert_fail@plt+0xe24>
   1226c:	ldr	r3, [r3]
   12270:	ldrd	r2, [r3, #16]
   12274:	ldr	r1, [pc, #240]	; 1236c <__assert_fail@plt+0xe28>
   12278:	strd	r2, [r1]
   1227c:	ldr	r3, [pc, #228]	; 12368 <__assert_fail@plt+0xe24>
   12280:	ldr	r1, [r3]
   12284:	ldrd	r2, [r1, #16]
   12288:	adds	r2, r2, #1
   1228c:	adc	r3, r3, #0
   12290:	strd	r2, [r1, #16]
   12294:	ldr	r3, [pc, #204]	; 12368 <__assert_fail@plt+0xe24>
   12298:	ldr	r3, [r3]
   1229c:	ldr	r3, [r3, #36]	; 0x24
   122a0:	str	r3, [fp, #-8]
   122a4:	ldr	r3, [fp, #-8]
   122a8:	ldr	r3, [r3, #8]
   122ac:	add	r3, r3, #1
   122b0:	lsl	r3, r3, #3
   122b4:	ldr	r2, [fp, #-8]
   122b8:	add	r3, r2, r3
   122bc:	add	r3, r3, #4
   122c0:	str	r3, [fp, #-12]
   122c4:	ldr	r3, [fp, #-8]
   122c8:	ldr	r3, [r3, #8]
   122cc:	add	r2, r3, #1
   122d0:	ldr	r3, [fp, #-8]
   122d4:	str	r2, [r3, #8]
   122d8:	ldr	r3, [fp, #-8]
   122dc:	ldr	r2, [r3, #8]
   122e0:	ldr	r3, [fp, #-8]
   122e4:	ldr	r3, [r3]
   122e8:	cmp	r2, r3
   122ec:	bne	12354 <__assert_fail@plt+0xe10>
   122f0:	ldr	r3, [pc, #112]	; 12368 <__assert_fail@plt+0xe24>
   122f4:	ldr	r3, [r3]
   122f8:	ldr	r2, [fp, #-8]
   122fc:	ldr	r2, [r2, #652]	; 0x28c
   12300:	str	r2, [r3, #36]	; 0x24
   12304:	ldr	r3, [pc, #92]	; 12368 <__assert_fail@plt+0xe24>
   12308:	ldr	r3, [r3]
   1230c:	ldr	r3, [r3, #36]	; 0x24
   12310:	cmp	r3, #0
   12314:	beq	12330 <__assert_fail@plt+0xdec>
   12318:	ldr	r3, [pc, #72]	; 12368 <__assert_fail@plt+0xe24>
   1231c:	ldr	r3, [r3]
   12320:	ldr	r3, [r3, #36]	; 0x24
   12324:	ldr	r3, [r3]
   12328:	cmp	r3, #0
   1232c:	bne	12354 <__assert_fail@plt+0xe10>
   12330:	ldr	r3, [pc, #48]	; 12368 <__assert_fail@plt+0xe24>
   12334:	ldr	r3, [r3]
   12338:	ldr	r2, [pc, #36]	; 12364 <__assert_fail@plt+0xe20>
   1233c:	str	r3, [r2]
   12340:	ldr	r3, [pc, #32]	; 12368 <__assert_fail@plt+0xe24>
   12344:	ldr	r3, [r3]
   12348:	ldr	r3, [r3, #40]	; 0x28
   1234c:	ldr	r2, [pc, #20]	; 12368 <__assert_fail@plt+0xe24>
   12350:	str	r3, [r2]
   12354:	ldr	r3, [fp, #-12]
   12358:	mov	r0, r3
   1235c:	sub	sp, fp, #4
   12360:	pop	{fp, pc}
   12364:	andeq	r7, r4, r8, lsr #5
   12368:	ldrdeq	r7, [r4], -r0
   1236c:	andeq	r7, r4, r8, ror #3
   12370:	push	{fp, lr}
   12374:	add	fp, sp, #4
   12378:	sub	sp, sp, #24
   1237c:	strd	r0, [fp, #-28]	; 0xffffffe4
   12380:	ldr	r3, [pc, #348]	; 124e4 <__assert_fail@plt+0xfa0>
   12384:	ldr	r3, [r3]
   12388:	cmp	r3, #0
   1238c:	bne	123b0 <__assert_fail@plt+0xe6c>
   12390:	bl	11f10 <__assert_fail@plt+0x9cc>
   12394:	mov	r3, r0
   12398:	eor	r3, r3, #1
   1239c:	uxtb	r3, r3
   123a0:	cmp	r3, #0
   123a4:	beq	123b0 <__assert_fail@plt+0xe6c>
   123a8:	mov	r3, #0
   123ac:	b	124d8 <__assert_fail@plt+0xf94>
   123b0:	ldr	r3, [pc, #300]	; 124e4 <__assert_fail@plt+0xfa0>
   123b4:	ldr	r3, [r3]
   123b8:	ldrd	r2, [r3, #8]
   123bc:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   123c0:	cmp	r0, r2
   123c4:	sbcs	r3, r1, r3
   123c8:	bge	123d4 <__assert_fail@plt+0xe90>
   123cc:	mov	r3, #0
   123d0:	b	124d8 <__assert_fail@plt+0xf94>
   123d4:	ldr	r3, [pc, #264]	; 124e4 <__assert_fail@plt+0xfa0>
   123d8:	ldr	r3, [r3]
   123dc:	str	r3, [fp, #-8]
   123e0:	ldr	r3, [fp, #-8]
   123e4:	cmp	r3, #0
   123e8:	bne	12400 <__assert_fail@plt+0xebc>
   123ec:	ldr	r3, [pc, #244]	; 124e8 <__assert_fail@plt+0xfa4>
   123f0:	ldr	r2, [pc, #244]	; 124ec <__assert_fail@plt+0xfa8>
   123f4:	ldr	r1, [pc, #244]	; 124f0 <__assert_fail@plt+0xfac>
   123f8:	ldr	r0, [pc, #244]	; 124f4 <__assert_fail@plt+0xfb0>
   123fc:	bl	11544 <__assert_fail@plt>
   12400:	ldr	r3, [fp, #-8]
   12404:	ldrd	r0, [r3, #8]
   12408:	ldr	r3, [fp, #-8]
   1240c:	ldr	r3, [r3, #24]
   12410:	mov	r2, r3
   12414:	asr	r3, r2, #31
   12418:	adds	r2, r2, r0
   1241c:	adc	r3, r3, r1
   12420:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12424:	cmp	r0, r2
   12428:	sbcs	r3, r1, r3
   1242c:	bge	12498 <__assert_fail@plt+0xf54>
   12430:	ldr	r3, [fp, #-8]
   12434:	ldr	r3, [r3, #32]
   12438:	str	r3, [fp, #-12]
   1243c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12440:	ldr	r3, [fp, #-8]
   12444:	ldrd	r2, [r3, #8]
   12448:	mov	r3, r2
   1244c:	sub	r3, r1, r3
   12450:	str	r3, [fp, #-16]
   12454:	b	12470 <__assert_fail@plt+0xf2c>
   12458:	ldr	r3, [fp, #-12]
   1245c:	ldr	r3, [r3, #652]	; 0x28c
   12460:	str	r3, [fp, #-12]
   12464:	ldr	r3, [fp, #-16]
   12468:	sub	r3, r3, #80	; 0x50
   1246c:	str	r3, [fp, #-16]
   12470:	ldr	r3, [fp, #-16]
   12474:	cmp	r3, #79	; 0x4f
   12478:	bgt	12458 <__assert_fail@plt+0xf14>
   1247c:	ldr	r3, [fp, #-16]
   12480:	add	r3, r3, #1
   12484:	lsl	r3, r3, #3
   12488:	ldr	r2, [fp, #-12]
   1248c:	add	r3, r2, r3
   12490:	add	r3, r3, #4
   12494:	b	124d8 <__assert_fail@plt+0xf94>
   12498:	ldr	r3, [fp, #-8]
   1249c:	ldr	r3, [r3, #40]	; 0x28
   124a0:	cmp	r3, #0
   124a4:	bne	124c8 <__assert_fail@plt+0xf84>
   124a8:	bl	11f10 <__assert_fail@plt+0x9cc>
   124ac:	mov	r3, r0
   124b0:	eor	r3, r3, #1
   124b4:	uxtb	r3, r3
   124b8:	cmp	r3, #0
   124bc:	beq	124c8 <__assert_fail@plt+0xf84>
   124c0:	mov	r3, #0
   124c4:	b	124d8 <__assert_fail@plt+0xf94>
   124c8:	ldr	r3, [fp, #-8]
   124cc:	ldr	r3, [r3, #40]	; 0x28
   124d0:	str	r3, [fp, #-8]
   124d4:	b	123e0 <__assert_fail@plt+0xe9c>
   124d8:	mov	r0, r3
   124dc:	sub	sp, fp, #4
   124e0:	pop	{fp, pc}
   124e4:	ldrdeq	r7, [r4], -r0
   124e8:	strdeq	r5, [r3], -r0
   124ec:	andeq	r0, r0, r7, asr #4
   124f0:	andeq	r5, r3, r4, lsl #4
   124f4:	andeq	r5, r3, r4, lsl r2
   124f8:	push	{fp, lr}
   124fc:	add	fp, sp, #4
   12500:	ldr	r3, [pc, #48]	; 12538 <__assert_fail@plt+0xff4>
   12504:	ldrd	r2, [r3]
   12508:	adds	r2, r2, #1
   1250c:	adc	r3, r3, #0
   12510:	mov	r0, r2
   12514:	mov	r1, r3
   12518:	bl	12370 <__assert_fail@plt+0xe2c>
   1251c:	mov	r3, r0
   12520:	cmp	r3, #0
   12524:	moveq	r3, #1
   12528:	movne	r3, #0
   1252c:	uxtb	r3, r3
   12530:	mov	r0, r3
   12534:	pop	{fp, pc}
   12538:	andeq	r7, r4, r8, ror #3
   1253c:	push	{r4, r5, fp, lr}
   12540:	add	fp, sp, #12
   12544:	sub	sp, sp, #8
   12548:	str	r0, [fp, #-16]
   1254c:	ldr	r1, [pc, #116]	; 125c8 <__assert_fail@plt+0x1084>
   12550:	ldr	r0, [fp, #-16]
   12554:	bl	111d8 <strcmp@plt>
   12558:	mov	r3, r0
   1255c:	cmp	r3, #0
   12560:	beq	125bc <__assert_fail@plt+0x1078>
   12564:	mov	r3, #0
   12568:	mov	r2, #0
   1256c:	ldr	r1, [fp, #-16]
   12570:	mov	r0, #0
   12574:	bl	14b9c <__assert_fail@plt+0x3658>
   12578:	mov	r3, r0
   1257c:	cmp	r3, #0
   12580:	bge	125bc <__assert_fail@plt+0x1078>
   12584:	bl	11418 <__errno_location@plt>
   12588:	mov	r3, r0
   1258c:	ldr	r4, [r3]
   12590:	ldr	r0, [pc, #52]	; 125cc <__assert_fail@plt+0x1088>
   12594:	bl	113e8 <gettext@plt>
   12598:	mov	r5, r0
   1259c:	ldr	r1, [fp, #-16]
   125a0:	mov	r0, #4
   125a4:	bl	173ac <__assert_fail@plt+0x5e68>
   125a8:	mov	r3, r0
   125ac:	mov	r2, r5
   125b0:	mov	r1, r4
   125b4:	mov	r0, #1
   125b8:	bl	11370 <error@plt>
   125bc:	nop			; (mov r0, r0)
   125c0:	sub	sp, fp, #12
   125c4:	pop	{r4, r5, fp, pc}
   125c8:	andeq	r5, r3, r8, lsl r2
   125cc:	andeq	r5, r3, ip, lsl r2
   125d0:	push	{r4, fp, lr}
   125d4:	add	fp, sp, #8
   125d8:	sub	sp, sp, #52	; 0x34
   125dc:	strd	r0, [fp, #-52]	; 0xffffffcc
   125e0:	str	r3, [fp, #-60]	; 0xffffffc4
   125e4:	mov	r3, r2
   125e8:	strb	r3, [fp, #-53]	; 0xffffffcb
   125ec:	bl	12168 <__assert_fail@plt+0xc24>
   125f0:	strd	r0, [fp, #-28]	; 0xffffffe4
   125f4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   125f8:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   125fc:	cmp	r0, r2
   12600:	sbcs	r3, r1, r3
   12604:	bge	1264c <__assert_fail@plt+0x1108>
   12608:	ldr	r0, [pc, #260]	; 12714 <__assert_fail@plt+0x11d0>
   1260c:	bl	113e8 <gettext@plt>
   12610:	mov	r4, r0
   12614:	ldr	r3, [pc, #252]	; 12718 <__assert_fail@plt+0x11d4>
   12618:	ldr	r2, [r3]
   1261c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12620:	lsl	r3, r3, #2
   12624:	add	r3, r2, r3
   12628:	ldr	r3, [r3]
   1262c:	mov	r0, r3
   12630:	bl	177a4 <__assert_fail@plt+0x6260>
   12634:	mov	r3, r0
   12638:	mov	r2, r4
   1263c:	mov	r1, #0
   12640:	mov	r0, #0
   12644:	bl	11370 <error@plt>
   12648:	bl	118a0 <__assert_fail@plt+0x35c>
   1264c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   12650:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12654:	subs	r2, r0, r2
   12658:	sbc	r3, r1, r3
   1265c:	strd	r2, [fp, #-36]	; 0xffffffdc
   12660:	mov	r2, #0
   12664:	mov	r3, #0
   12668:	strd	r2, [fp, #-20]	; 0xffffffec
   1266c:	b	126f4 <__assert_fail@plt+0x11b0>
   12670:	bl	121e0 <__assert_fail@plt+0xc9c>
   12674:	str	r0, [fp, #-40]	; 0xffffffd8
   12678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1267c:	cmp	r3, #0
   12680:	bne	126c8 <__assert_fail@plt+0x1184>
   12684:	ldr	r0, [pc, #136]	; 12714 <__assert_fail@plt+0x11d0>
   12688:	bl	113e8 <gettext@plt>
   1268c:	mov	r4, r0
   12690:	ldr	r3, [pc, #128]	; 12718 <__assert_fail@plt+0x11d4>
   12694:	ldr	r2, [r3]
   12698:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1269c:	lsl	r3, r3, #2
   126a0:	add	r3, r2, r3
   126a4:	ldr	r3, [r3]
   126a8:	mov	r0, r3
   126ac:	bl	177a4 <__assert_fail@plt+0x6260>
   126b0:	mov	r3, r0
   126b4:	mov	r2, r4
   126b8:	mov	r1, #0
   126bc:	mov	r0, #0
   126c0:	bl	11370 <error@plt>
   126c4:	bl	118a0 <__assert_fail@plt+0x35c>
   126c8:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   126cc:	eor	r3, r3, #1
   126d0:	uxtb	r3, r3
   126d4:	cmp	r3, #0
   126d8:	beq	126e4 <__assert_fail@plt+0x11a0>
   126dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   126e0:	bl	1349c <__assert_fail@plt+0x1f58>
   126e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   126e8:	adds	r2, r2, #1
   126ec:	adc	r3, r3, #0
   126f0:	strd	r2, [fp, #-20]	; 0xffffffec
   126f4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   126f8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   126fc:	cmp	r0, r2
   12700:	sbcs	r3, r1, r3
   12704:	blt	12670 <__assert_fail@plt+0x112c>
   12708:	nop			; (mov r0, r0)
   1270c:	sub	sp, fp, #8
   12710:	pop	{r4, fp, pc}
   12714:	andeq	r5, r3, r8, lsr r2
   12718:	andeq	r7, r4, r8, lsl r2
   1271c:	push	{fp, lr}
   12720:	add	fp, sp, #4
   12724:	sub	sp, sp, #8
   12728:	b	12734 <__assert_fail@plt+0x11f0>
   1272c:	ldr	r0, [fp, #-8]
   12730:	bl	1349c <__assert_fail@plt+0x1f58>
   12734:	bl	121e0 <__assert_fail@plt+0xc9c>
   12738:	str	r0, [fp, #-8]
   1273c:	ldr	r3, [fp, #-8]
   12740:	cmp	r3, #0
   12744:	bne	1272c <__assert_fail@plt+0x11e8>
   12748:	nop			; (mov r0, r0)
   1274c:	sub	sp, fp, #4
   12750:	pop	{fp, pc}
   12754:	push	{r4, r5, r6, fp, lr}
   12758:	add	fp, sp, #16
   1275c:	sub	sp, sp, #44	; 0x2c
   12760:	str	r0, [fp, #-48]	; 0xffffffd0
   12764:	strd	r2, [fp, #-60]	; 0xffffffc4
   12768:	ldr	r3, [pc, #168]	; 12818 <__assert_fail@plt+0x12d4>
   1276c:	ldr	r4, [r3]
   12770:	ldr	r0, [pc, #164]	; 1281c <__assert_fail@plt+0x12d8>
   12774:	bl	113e8 <gettext@plt>
   12778:	mov	r6, r0
   1277c:	ldr	r3, [pc, #156]	; 12820 <__assert_fail@plt+0x12dc>
   12780:	ldr	r5, [r3]
   12784:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12788:	ldrd	r0, [r3, #8]
   1278c:	sub	r3, fp, #44	; 0x2c
   12790:	mov	r2, r3
   12794:	bl	14f5c <__assert_fail@plt+0x3a18>
   12798:	mov	r3, r0
   1279c:	mov	r0, r3
   127a0:	bl	177a4 <__assert_fail@plt+0x6260>
   127a4:	mov	r3, r0
   127a8:	mov	r2, r5
   127ac:	mov	r1, r6
   127b0:	mov	r0, r4
   127b4:	bl	1140c <fprintf@plt>
   127b8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   127bc:	orrs	r3, r2, r3
   127c0:	beq	12800 <__assert_fail@plt+0x12bc>
   127c4:	ldr	r3, [pc, #76]	; 12818 <__assert_fail@plt+0x12d4>
   127c8:	ldr	r4, [r3]
   127cc:	ldr	r0, [pc, #80]	; 12824 <__assert_fail@plt+0x12e0>
   127d0:	bl	113e8 <gettext@plt>
   127d4:	mov	r5, r0
   127d8:	sub	r3, fp, #44	; 0x2c
   127dc:	mov	r2, r3
   127e0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   127e4:	bl	14f5c <__assert_fail@plt+0x3a18>
   127e8:	mov	r3, r0
   127ec:	mov	r2, r3
   127f0:	mov	r1, r5
   127f4:	mov	r0, r4
   127f8:	bl	1140c <fprintf@plt>
   127fc:	b	12814 <__assert_fail@plt+0x12d0>
   12800:	ldr	r3, [pc, #16]	; 12818 <__assert_fail@plt+0x12d4>
   12804:	ldr	r3, [r3]
   12808:	mov	r1, r3
   1280c:	mov	r0, #10
   12810:	bl	114e4 <fputc@plt>
   12814:	bl	118a0 <__assert_fail@plt+0x35c>
   12818:	andeq	r7, r4, r0, asr #3
   1281c:	andeq	r5, r3, r8, asr r2
   12820:	andeq	r7, r4, r0, asr #5
   12824:	andeq	r5, r3, ip, ror r2
   12828:	push	{fp, lr}
   1282c:	add	fp, sp, #4
   12830:	sub	sp, sp, #40	; 0x28
   12834:	str	r0, [fp, #-32]	; 0xffffffe0
   12838:	strd	r2, [fp, #-44]	; 0xffffffd4
   1283c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12840:	ldrd	r0, [r3, #8]
   12844:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12848:	adds	r2, r2, #1
   1284c:	adc	r3, r3, #0
   12850:	mul	lr, r2, r1
   12854:	mul	ip, r0, r3
   12858:	add	ip, lr, ip
   1285c:	umull	r2, r3, r0, r2
   12860:	add	r1, ip, r3
   12864:	mov	r3, r1
   12868:	strd	r2, [fp, #-20]	; 0xffffffec
   1286c:	strd	r2, [fp, #-20]	; 0xffffffec
   12870:	bl	13004 <__assert_fail@plt+0x1ac0>
   12874:	bl	124f8 <__assert_fail@plt+0xfb4>
   12878:	mov	r3, r0
   1287c:	cmp	r3, #0
   12880:	beq	128a0 <__assert_fail@plt+0x135c>
   12884:	ldr	r3, [pc, #192]	; 1294c <__assert_fail@plt+0x1408>
   12888:	ldrb	r3, [r3]
   1288c:	cmp	r3, #0
   12890:	beq	128a0 <__assert_fail@plt+0x135c>
   12894:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1289c:	bl	12754 <__assert_fail@plt+0x1210>
   128a0:	bl	12168 <__assert_fail@plt+0xc24>
   128a4:	strd	r0, [fp, #-12]
   128a8:	b	128d4 <__assert_fail@plt+0x1390>
   128ac:	bl	121e0 <__assert_fail@plt+0xc9c>
   128b0:	str	r0, [fp, #-24]	; 0xffffffe8
   128b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128b8:	cmp	r3, #0
   128bc:	bne	128cc <__assert_fail@plt+0x1388>
   128c0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   128c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128c8:	bl	12754 <__assert_fail@plt+0x1210>
   128cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128d0:	bl	1349c <__assert_fail@plt+0x1f58>
   128d4:	ldrd	r2, [fp, #-12]
   128d8:	adds	r0, r2, #1
   128dc:	adc	r1, r3, #0
   128e0:	strd	r0, [fp, #-12]
   128e4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   128e8:	cmp	r2, r0
   128ec:	sbcs	r3, r3, r1
   128f0:	blt	128ac <__assert_fail@plt+0x1368>
   128f4:	bl	13248 <__assert_fail@plt+0x1d04>
   128f8:	ldr	r3, [pc, #76]	; 1294c <__assert_fail@plt+0x1408>
   128fc:	ldrb	r3, [r3]
   12900:	cmp	r3, #0
   12904:	beq	1290c <__assert_fail@plt+0x13c8>
   12908:	bl	121e0 <__assert_fail@plt+0xc9c>
   1290c:	bl	124f8 <__assert_fail@plt+0xfb4>
   12910:	mov	r3, r0
   12914:	cmp	r3, #0
   12918:	beq	12940 <__assert_fail@plt+0x13fc>
   1291c:	ldr	r3, [pc, #40]	; 1294c <__assert_fail@plt+0x1408>
   12920:	ldrb	r3, [r3]
   12924:	eor	r3, r3, #1
   12928:	uxtb	r3, r3
   1292c:	cmp	r3, #0
   12930:	beq	12940 <__assert_fail@plt+0x13fc>
   12934:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1293c:	bl	12754 <__assert_fail@plt+0x1210>
   12940:	nop			; (mov r0, r0)
   12944:	sub	sp, fp, #4
   12948:	pop	{fp, pc}
   1294c:	andeq	r7, r4, pc, lsl r2
   12950:	push	{r4, r5, r6, fp, lr}
   12954:	add	fp, sp, #16
   12958:	sub	sp, sp, #44	; 0x2c
   1295c:	str	r0, [fp, #-48]	; 0xffffffd0
   12960:	strd	r2, [fp, #-60]	; 0xffffffc4
   12964:	ldr	r3, [pc, #200]	; 12a34 <__assert_fail@plt+0x14f0>
   12968:	ldr	r4, [r3]
   1296c:	ldr	r0, [pc, #196]	; 12a38 <__assert_fail@plt+0x14f4>
   12970:	bl	113e8 <gettext@plt>
   12974:	mov	r6, r0
   12978:	ldr	r3, [pc, #188]	; 12a3c <__assert_fail@plt+0x14f8>
   1297c:	ldr	r5, [r3]
   12980:	ldr	r3, [pc, #184]	; 12a40 <__assert_fail@plt+0x14fc>
   12984:	ldr	r2, [r3]
   12988:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1298c:	ldr	r3, [r3, #24]
   12990:	lsl	r3, r3, #2
   12994:	add	r3, r2, r3
   12998:	ldr	r3, [r3]
   1299c:	mov	r0, r3
   129a0:	bl	177a4 <__assert_fail@plt+0x6260>
   129a4:	mov	r3, r0
   129a8:	mov	r2, r5
   129ac:	mov	r1, r6
   129b0:	mov	r0, r4
   129b4:	bl	1140c <fprintf@plt>
   129b8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   129bc:	orrs	r3, r2, r3
   129c0:	beq	12a00 <__assert_fail@plt+0x14bc>
   129c4:	ldr	r3, [pc, #104]	; 12a34 <__assert_fail@plt+0x14f0>
   129c8:	ldr	r4, [r3]
   129cc:	ldr	r0, [pc, #112]	; 12a44 <__assert_fail@plt+0x1500>
   129d0:	bl	113e8 <gettext@plt>
   129d4:	mov	r5, r0
   129d8:	sub	r3, fp, #44	; 0x2c
   129dc:	mov	r2, r3
   129e0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   129e4:	bl	14f5c <__assert_fail@plt+0x3a18>
   129e8:	mov	r3, r0
   129ec:	mov	r2, r3
   129f0:	mov	r1, r5
   129f4:	mov	r0, r4
   129f8:	bl	1140c <fprintf@plt>
   129fc:	b	12a14 <__assert_fail@plt+0x14d0>
   12a00:	ldr	r3, [pc, #44]	; 12a34 <__assert_fail@plt+0x14f0>
   12a04:	ldr	r3, [r3]
   12a08:	mov	r1, r3
   12a0c:	mov	r0, #10
   12a10:	bl	114e4 <fputc@plt>
   12a14:	ldrb	r3, [fp, #4]
   12a18:	eor	r3, r3, #1
   12a1c:	uxtb	r3, r3
   12a20:	cmp	r3, #0
   12a24:	beq	12a30 <__assert_fail@plt+0x14ec>
   12a28:	bl	1271c <__assert_fail@plt+0x11d8>
   12a2c:	bl	13248 <__assert_fail@plt+0x1d04>
   12a30:	bl	118a0 <__assert_fail@plt+0x35c>
   12a34:	andeq	r7, r4, r0, asr #3
   12a38:	muleq	r3, r0, r2
   12a3c:	andeq	r7, r4, r0, asr #5
   12a40:	andeq	r7, r4, r8, lsl r2
   12a44:	andeq	r5, r3, ip, ror r2
   12a48:	push	{fp, lr}
   12a4c:	add	fp, sp, #4
   12a50:	sub	sp, sp, #48	; 0x30
   12a54:	str	r0, [fp, #-32]	; 0xffffffe0
   12a58:	strd	r2, [fp, #-44]	; 0xffffffd4
   12a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a60:	ldrb	r3, [r3, #29]
   12a64:	strb	r3, [fp, #-9]
   12a68:	ldrb	r3, [fp, #-9]
   12a6c:	eor	r3, r3, #1
   12a70:	uxtb	r3, r3
   12a74:	cmp	r3, #0
   12a78:	beq	12a80 <__assert_fail@plt+0x153c>
   12a7c:	bl	13004 <__assert_fail@plt+0x1ac0>
   12a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a84:	ldrd	r2, [r3]
   12a88:	cmp	r2, #0
   12a8c:	sbcs	r3, r3, #0
   12a90:	blt	12be0 <__assert_fail@plt+0x169c>
   12a94:	ldr	r3, [pc, #768]	; 12d9c <__assert_fail@plt+0x1858>
   12a98:	ldrd	r2, [r3]
   12a9c:	adds	r2, r2, #1
   12aa0:	adc	r3, r3, #0
   12aa4:	ldr	r1, [pc, #752]	; 12d9c <__assert_fail@plt+0x1858>
   12aa8:	strd	r2, [r1]
   12aac:	ldr	r3, [pc, #744]	; 12d9c <__assert_fail@plt+0x1858>
   12ab0:	ldrd	r2, [r3]
   12ab4:	mov	r0, r2
   12ab8:	mov	r1, r3
   12abc:	bl	12370 <__assert_fail@plt+0xe2c>
   12ac0:	str	r0, [fp, #-16]
   12ac4:	ldr	r3, [fp, #-16]
   12ac8:	cmp	r3, #0
   12acc:	bne	12b18 <__assert_fail@plt+0x15d4>
   12ad0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ad4:	ldrb	r3, [r3, #28]
   12ad8:	cmp	r3, #0
   12adc:	beq	12b04 <__assert_fail@plt+0x15c0>
   12ae0:	ldrb	r3, [fp, #-9]
   12ae4:	eor	r3, r3, #1
   12ae8:	uxtb	r3, r3
   12aec:	cmp	r3, #0
   12af0:	beq	12afc <__assert_fail@plt+0x15b8>
   12af4:	bl	1271c <__assert_fail@plt+0x11d8>
   12af8:	bl	13248 <__assert_fail@plt+0x1d04>
   12afc:	mov	r0, #0
   12b00:	bl	113dc <exit@plt>
   12b04:	ldrb	r3, [fp, #-9]
   12b08:	str	r3, [sp]
   12b0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b14:	bl	12950 <__assert_fail@plt+0x140c>
   12b18:	ldr	r3, [fp, #-16]
   12b1c:	ldr	r3, [r3]
   12b20:	str	r3, [fp, #-8]
   12b24:	ldr	r3, [fp, #-16]
   12b28:	ldr	r2, [r3, #4]
   12b2c:	ldr	r3, [fp, #-8]
   12b30:	sub	r3, r3, #1
   12b34:	add	r3, r2, r3
   12b38:	ldrb	r3, [r3]
   12b3c:	cmp	r3, #10
   12b40:	bne	12b50 <__assert_fail@plt+0x160c>
   12b44:	ldr	r3, [fp, #-8]
   12b48:	sub	r3, r3, #1
   12b4c:	str	r3, [fp, #-8]
   12b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b54:	add	r0, r3, #32
   12b58:	ldr	r3, [fp, #-16]
   12b5c:	ldr	r1, [r3, #4]
   12b60:	mov	r3, #0
   12b64:	str	r3, [sp, #4]
   12b68:	ldr	r3, [fp, #-8]
   12b6c:	str	r3, [sp]
   12b70:	mov	r3, #0
   12b74:	ldr	r2, [fp, #-8]
   12b78:	bl	25fa4 <__assert_fail@plt+0x14a60>
   12b7c:	str	r0, [fp, #-20]	; 0xffffffec
   12b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b84:	cmn	r3, #2
   12b88:	bne	12bac <__assert_fail@plt+0x1668>
   12b8c:	ldr	r0, [pc, #524]	; 12da0 <__assert_fail@plt+0x185c>
   12b90:	bl	113e8 <gettext@plt>
   12b94:	mov	r3, r0
   12b98:	mov	r2, r3
   12b9c:	mov	r1, #0
   12ba0:	mov	r0, #0
   12ba4:	bl	11370 <error@plt>
   12ba8:	bl	118a0 <__assert_fail@plt+0x35c>
   12bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   12bb0:	cmn	r3, #1
   12bb4:	bne	12d08 <__assert_fail@plt+0x17c4>
   12bb8:	bl	121e0 <__assert_fail@plt+0xc9c>
   12bbc:	str	r0, [fp, #-16]
   12bc0:	ldrb	r3, [fp, #-9]
   12bc4:	eor	r3, r3, #1
   12bc8:	uxtb	r3, r3
   12bcc:	cmp	r3, #0
   12bd0:	beq	12a94 <__assert_fail@plt+0x1550>
   12bd4:	ldr	r0, [fp, #-16]
   12bd8:	bl	1349c <__assert_fail@plt+0x1f58>
   12bdc:	b	12a94 <__assert_fail@plt+0x1550>
   12be0:	ldr	r3, [pc, #436]	; 12d9c <__assert_fail@plt+0x1858>
   12be4:	ldrd	r2, [r3]
   12be8:	adds	r2, r2, #1
   12bec:	adc	r3, r3, #0
   12bf0:	ldr	r1, [pc, #420]	; 12d9c <__assert_fail@plt+0x1858>
   12bf4:	strd	r2, [r1]
   12bf8:	ldr	r3, [pc, #412]	; 12d9c <__assert_fail@plt+0x1858>
   12bfc:	ldrd	r2, [r3]
   12c00:	mov	r0, r2
   12c04:	mov	r1, r3
   12c08:	bl	12370 <__assert_fail@plt+0xe2c>
   12c0c:	str	r0, [fp, #-16]
   12c10:	ldr	r3, [fp, #-16]
   12c14:	cmp	r3, #0
   12c18:	bne	12c64 <__assert_fail@plt+0x1720>
   12c1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c20:	ldrb	r3, [r3, #28]
   12c24:	cmp	r3, #0
   12c28:	beq	12c50 <__assert_fail@plt+0x170c>
   12c2c:	ldrb	r3, [fp, #-9]
   12c30:	eor	r3, r3, #1
   12c34:	uxtb	r3, r3
   12c38:	cmp	r3, #0
   12c3c:	beq	12c48 <__assert_fail@plt+0x1704>
   12c40:	bl	1271c <__assert_fail@plt+0x11d8>
   12c44:	bl	13248 <__assert_fail@plt+0x1d04>
   12c48:	mov	r0, #0
   12c4c:	bl	113dc <exit@plt>
   12c50:	ldrb	r3, [fp, #-9]
   12c54:	str	r3, [sp]
   12c58:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12c60:	bl	12950 <__assert_fail@plt+0x140c>
   12c64:	ldr	r3, [fp, #-16]
   12c68:	ldr	r3, [r3]
   12c6c:	str	r3, [fp, #-8]
   12c70:	ldr	r3, [fp, #-16]
   12c74:	ldr	r2, [r3, #4]
   12c78:	ldr	r3, [fp, #-8]
   12c7c:	sub	r3, r3, #1
   12c80:	add	r3, r2, r3
   12c84:	ldrb	r3, [r3]
   12c88:	cmp	r3, #10
   12c8c:	bne	12c9c <__assert_fail@plt+0x1758>
   12c90:	ldr	r3, [fp, #-8]
   12c94:	sub	r3, r3, #1
   12c98:	str	r3, [fp, #-8]
   12c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ca0:	add	r0, r3, #32
   12ca4:	ldr	r3, [fp, #-16]
   12ca8:	ldr	r1, [r3, #4]
   12cac:	mov	r3, #0
   12cb0:	str	r3, [sp, #4]
   12cb4:	ldr	r3, [fp, #-8]
   12cb8:	str	r3, [sp]
   12cbc:	mov	r3, #0
   12cc0:	ldr	r2, [fp, #-8]
   12cc4:	bl	25fa4 <__assert_fail@plt+0x14a60>
   12cc8:	str	r0, [fp, #-20]	; 0xffffffec
   12ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12cd0:	cmn	r3, #2
   12cd4:	bne	12cf8 <__assert_fail@plt+0x17b4>
   12cd8:	ldr	r0, [pc, #192]	; 12da0 <__assert_fail@plt+0x185c>
   12cdc:	bl	113e8 <gettext@plt>
   12ce0:	mov	r3, r0
   12ce4:	mov	r2, r3
   12ce8:	mov	r1, #0
   12cec:	mov	r0, #0
   12cf0:	bl	11370 <error@plt>
   12cf4:	bl	118a0 <__assert_fail@plt+0x35c>
   12cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12cfc:	cmn	r3, #1
   12d00:	bne	12d10 <__assert_fail@plt+0x17cc>
   12d04:	b	12be0 <__assert_fail@plt+0x169c>
   12d08:	nop			; (mov r0, r0)
   12d0c:	b	12d14 <__assert_fail@plt+0x17d0>
   12d10:	nop			; (mov r0, r0)
   12d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d18:	ldrd	r0, [r3]
   12d1c:	ldr	r3, [pc, #120]	; 12d9c <__assert_fail@plt+0x1858>
   12d20:	ldrd	r2, [r3]
   12d24:	adds	r2, r2, r0
   12d28:	adc	r3, r3, r1
   12d2c:	strd	r2, [fp, #-28]	; 0xffffffe4
   12d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d34:	ldr	r3, [r3, #24]
   12d38:	ldrb	r2, [fp, #-9]
   12d3c:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12d40:	bl	125d0 <__assert_fail@plt+0x108c>
   12d44:	ldrb	r3, [fp, #-9]
   12d48:	eor	r3, r3, #1
   12d4c:	uxtb	r3, r3
   12d50:	cmp	r3, #0
   12d54:	beq	12d5c <__assert_fail@plt+0x1818>
   12d58:	bl	13248 <__assert_fail@plt+0x1d04>
   12d5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d60:	ldrd	r2, [r3]
   12d64:	cmp	r2, #1
   12d68:	sbcs	r3, r3, #0
   12d6c:	blt	12d7c <__assert_fail@plt+0x1838>
   12d70:	ldr	r1, [pc, #36]	; 12d9c <__assert_fail@plt+0x1858>
   12d74:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12d78:	strd	r2, [r1]
   12d7c:	ldr	r3, [pc, #32]	; 12da4 <__assert_fail@plt+0x1860>
   12d80:	ldrb	r3, [r3]
   12d84:	cmp	r3, #0
   12d88:	beq	12d90 <__assert_fail@plt+0x184c>
   12d8c:	bl	121e0 <__assert_fail@plt+0xc9c>
   12d90:	nop			; (mov r0, r0)
   12d94:	sub	sp, fp, #4
   12d98:	pop	{fp, pc}
   12d9c:	andeq	r7, r4, r8, ror #3
   12da0:	andeq	r5, r3, r8, lsr #5
   12da4:	andeq	r7, r4, pc, lsl r2
   12da8:	push	{fp, lr}
   12dac:	add	fp, sp, #4
   12db0:	sub	sp, sp, #16
   12db4:	mov	r3, #0
   12db8:	str	r3, [fp, #-8]
   12dbc:	b	12f00 <__assert_fail@plt+0x19bc>
   12dc0:	ldr	r3, [pc, #356]	; 12f2c <__assert_fail@plt+0x19e8>
   12dc4:	ldr	r2, [r3]
   12dc8:	ldr	r3, [fp, #-8]
   12dcc:	lsl	r3, r3, #6
   12dd0:	add	r3, r2, r3
   12dd4:	ldrb	r3, [r3, #30]
   12dd8:	cmp	r3, #0
   12ddc:	beq	12e6c <__assert_fail@plt+0x1928>
   12de0:	mov	r2, #0
   12de4:	mov	r3, #0
   12de8:	strd	r2, [fp, #-20]	; 0xffffffec
   12dec:	b	12e20 <__assert_fail@plt+0x18dc>
   12df0:	ldr	r3, [pc, #308]	; 12f2c <__assert_fail@plt+0x19e8>
   12df4:	ldr	r2, [r3]
   12df8:	ldr	r3, [fp, #-8]
   12dfc:	lsl	r3, r3, #6
   12e00:	add	r1, r2, r3
   12e04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e08:	mov	r0, r1
   12e0c:	bl	12a48 <__assert_fail@plt+0x1504>
   12e10:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e14:	adds	r2, r2, #1
   12e18:	adc	r3, r3, #0
   12e1c:	strd	r2, [fp, #-20]	; 0xffffffec
   12e20:	ldr	r3, [pc, #260]	; 12f2c <__assert_fail@plt+0x19e8>
   12e24:	ldr	r2, [r3]
   12e28:	ldr	r3, [fp, #-8]
   12e2c:	lsl	r3, r3, #6
   12e30:	add	r3, r2, r3
   12e34:	ldrb	r3, [r3, #28]
   12e38:	cmp	r3, #0
   12e3c:	bne	12df0 <__assert_fail@plt+0x18ac>
   12e40:	ldr	r3, [pc, #228]	; 12f2c <__assert_fail@plt+0x19e8>
   12e44:	ldr	r2, [r3]
   12e48:	ldr	r3, [fp, #-8]
   12e4c:	lsl	r3, r3, #6
   12e50:	add	r3, r2, r3
   12e54:	ldrd	r0, [r3, #16]
   12e58:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e5c:	cmp	r0, r2
   12e60:	sbcs	r3, r1, r3
   12e64:	bge	12df0 <__assert_fail@plt+0x18ac>
   12e68:	b	12ef4 <__assert_fail@plt+0x19b0>
   12e6c:	mov	r2, #0
   12e70:	mov	r3, #0
   12e74:	strd	r2, [fp, #-20]	; 0xffffffec
   12e78:	b	12eac <__assert_fail@plt+0x1968>
   12e7c:	ldr	r3, [pc, #168]	; 12f2c <__assert_fail@plt+0x19e8>
   12e80:	ldr	r2, [r3]
   12e84:	ldr	r3, [fp, #-8]
   12e88:	lsl	r3, r3, #6
   12e8c:	add	r1, r2, r3
   12e90:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e94:	mov	r0, r1
   12e98:	bl	12828 <__assert_fail@plt+0x12e4>
   12e9c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12ea0:	adds	r2, r2, #1
   12ea4:	adc	r3, r3, #0
   12ea8:	strd	r2, [fp, #-20]	; 0xffffffec
   12eac:	ldr	r3, [pc, #120]	; 12f2c <__assert_fail@plt+0x19e8>
   12eb0:	ldr	r2, [r3]
   12eb4:	ldr	r3, [fp, #-8]
   12eb8:	lsl	r3, r3, #6
   12ebc:	add	r3, r2, r3
   12ec0:	ldrb	r3, [r3, #28]
   12ec4:	cmp	r3, #0
   12ec8:	bne	12e7c <__assert_fail@plt+0x1938>
   12ecc:	ldr	r3, [pc, #88]	; 12f2c <__assert_fail@plt+0x19e8>
   12ed0:	ldr	r2, [r3]
   12ed4:	ldr	r3, [fp, #-8]
   12ed8:	lsl	r3, r3, #6
   12edc:	add	r3, r2, r3
   12ee0:	ldrd	r0, [r3, #16]
   12ee4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12ee8:	cmp	r0, r2
   12eec:	sbcs	r3, r1, r3
   12ef0:	bge	12e7c <__assert_fail@plt+0x1938>
   12ef4:	ldr	r3, [fp, #-8]
   12ef8:	add	r3, r3, #1
   12efc:	str	r3, [fp, #-8]
   12f00:	ldr	r3, [pc, #40]	; 12f30 <__assert_fail@plt+0x19ec>
   12f04:	ldr	r3, [r3]
   12f08:	ldr	r2, [fp, #-8]
   12f0c:	cmp	r2, r3
   12f10:	blt	12dc0 <__assert_fail@plt+0x187c>
   12f14:	bl	13004 <__assert_fail@plt+0x1ac0>
   12f18:	bl	1271c <__assert_fail@plt+0x11d8>
   12f1c:	bl	13248 <__assert_fail@plt+0x1d04>
   12f20:	nop			; (mov r0, r0)
   12f24:	sub	sp, fp, #4
   12f28:	pop	{fp, pc}
   12f2c:	andeq	r7, r4, r0, lsr #4
   12f30:	andeq	r7, r4, r4, lsr #4
   12f34:	push	{r4, fp, lr}
   12f38:	add	fp, sp, #8
   12f3c:	sub	sp, sp, #12
   12f40:	str	r0, [fp, #-16]
   12f44:	ldr	r3, [pc, #164]	; 12ff0 <__assert_fail@plt+0x1aac>
   12f48:	ldr	r2, [r3]
   12f4c:	ldr	r3, [pc, #160]	; 12ff4 <__assert_fail@plt+0x1ab0>
   12f50:	ldr	r3, [r3]
   12f54:	mov	r1, r3
   12f58:	mov	r0, r2
   12f5c:	bl	11340 <strcpy@plt>
   12f60:	ldr	r3, [pc, #144]	; 12ff8 <__assert_fail@plt+0x1ab4>
   12f64:	ldr	r3, [r3]
   12f68:	cmp	r3, #0
   12f6c:	beq	12fa8 <__assert_fail@plt+0x1a64>
   12f70:	ldr	r3, [pc, #120]	; 12ff0 <__assert_fail@plt+0x1aac>
   12f74:	ldr	r4, [r3]
   12f78:	ldr	r3, [pc, #116]	; 12ff4 <__assert_fail@plt+0x1ab0>
   12f7c:	ldr	r3, [r3]
   12f80:	mov	r0, r3
   12f84:	bl	113f4 <strlen@plt>
   12f88:	mov	r3, r0
   12f8c:	add	r0, r4, r3
   12f90:	ldr	r3, [pc, #96]	; 12ff8 <__assert_fail@plt+0x1ab4>
   12f94:	ldr	r3, [r3]
   12f98:	ldr	r2, [fp, #-16]
   12f9c:	mov	r1, r3
   12fa0:	bl	114f0 <sprintf@plt>
   12fa4:	b	12fdc <__assert_fail@plt+0x1a98>
   12fa8:	ldr	r3, [pc, #64]	; 12ff0 <__assert_fail@plt+0x1aac>
   12fac:	ldr	r4, [r3]
   12fb0:	ldr	r3, [pc, #60]	; 12ff4 <__assert_fail@plt+0x1ab0>
   12fb4:	ldr	r3, [r3]
   12fb8:	mov	r0, r3
   12fbc:	bl	113f4 <strlen@plt>
   12fc0:	mov	r3, r0
   12fc4:	add	r0, r4, r3
   12fc8:	ldr	r3, [pc, #44]	; 12ffc <__assert_fail@plt+0x1ab8>
   12fcc:	ldr	r2, [r3]
   12fd0:	ldr	r3, [fp, #-16]
   12fd4:	ldr	r1, [pc, #36]	; 13000 <__assert_fail@plt+0x1abc>
   12fd8:	bl	114f0 <sprintf@plt>
   12fdc:	ldr	r3, [pc, #12]	; 12ff0 <__assert_fail@plt+0x1aac>
   12fe0:	ldr	r3, [r3]
   12fe4:	mov	r0, r3
   12fe8:	sub	sp, fp, #8
   12fec:	pop	{r4, fp, pc}
   12ff0:	strdeq	r7, [r4], -r4
   12ff4:	strdeq	r7, [r4], -r8
   12ff8:	strdeq	r7, [r4], -ip
   12ffc:	andeq	r7, r4, r0, ror #2
   13000:	andeq	r5, r3, ip, asr #5
   13004:	push	{fp, lr}
   13008:	add	fp, sp, #4
   1300c:	sub	sp, sp, #144	; 0x90
   13010:	ldr	r3, [pc, #284]	; 13134 <__assert_fail@plt+0x1bf0>
   13014:	ldr	r3, [r3]
   13018:	str	r3, [fp, #-16]
   1301c:	ldr	r0, [fp, #-16]
   13020:	bl	12f34 <__assert_fail@plt+0x19f0>
   13024:	mov	r2, r0
   13028:	ldr	r3, [pc, #264]	; 13138 <__assert_fail@plt+0x1bf4>
   1302c:	str	r2, [r3]
   13030:	ldr	r3, [fp, #-16]
   13034:	cmn	r3, #-2147483647	; 0x80000001
   13038:	bne	13050 <__assert_fail@plt+0x1b0c>
   1303c:	mov	r3, #0
   13040:	strb	r3, [fp, #-5]
   13044:	mov	r3, #75	; 0x4b
   13048:	str	r3, [fp, #-12]
   1304c:	b	130d4 <__assert_fail@plt+0x1b90>
   13050:	sub	r3, fp, #144	; 0x90
   13054:	mov	r2, r3
   13058:	ldr	r1, [pc, #220]	; 1313c <__assert_fail@plt+0x1bf8>
   1305c:	mov	r0, #0
   13060:	bl	11214 <sigprocmask@plt>
   13064:	ldr	r3, [pc, #204]	; 13138 <__assert_fail@plt+0x1bf4>
   13068:	ldr	r3, [r3]
   1306c:	ldr	r1, [pc, #204]	; 13140 <__assert_fail@plt+0x1bfc>
   13070:	mov	r0, r3
   13074:	bl	14ce0 <__assert_fail@plt+0x379c>
   13078:	mov	r2, r0
   1307c:	ldr	r3, [pc, #192]	; 13144 <__assert_fail@plt+0x1c00>
   13080:	str	r2, [r3]
   13084:	ldr	r3, [pc, #184]	; 13144 <__assert_fail@plt+0x1c00>
   13088:	ldr	r3, [r3]
   1308c:	cmp	r3, #0
   13090:	movne	r3, #1
   13094:	moveq	r3, #0
   13098:	strb	r3, [fp, #-5]
   1309c:	bl	11418 <__errno_location@plt>
   130a0:	mov	r3, r0
   130a4:	ldr	r3, [r3]
   130a8:	str	r3, [fp, #-12]
   130ac:	ldrb	r2, [fp, #-5]
   130b0:	ldr	r3, [fp, #-16]
   130b4:	add	r3, r2, r3
   130b8:	ldr	r2, [pc, #116]	; 13134 <__assert_fail@plt+0x1bf0>
   130bc:	str	r3, [r2]
   130c0:	sub	r3, fp, #144	; 0x90
   130c4:	mov	r2, #0
   130c8:	mov	r1, r3
   130cc:	mov	r0, #2
   130d0:	bl	11214 <sigprocmask@plt>
   130d4:	ldrb	r3, [fp, #-5]
   130d8:	eor	r3, r3, #1
   130dc:	uxtb	r3, r3
   130e0:	cmp	r3, #0
   130e4:	beq	13118 <__assert_fail@plt+0x1bd4>
   130e8:	ldr	r3, [pc, #72]	; 13138 <__assert_fail@plt+0x1bf4>
   130ec:	ldr	r3, [r3]
   130f0:	mov	r2, r3
   130f4:	mov	r1, #3
   130f8:	mov	r0, #0
   130fc:	bl	17534 <__assert_fail@plt+0x5ff0>
   13100:	mov	r3, r0
   13104:	ldr	r2, [pc, #60]	; 13148 <__assert_fail@plt+0x1c04>
   13108:	ldr	r1, [fp, #-12]
   1310c:	mov	r0, #0
   13110:	bl	11370 <error@plt>
   13114:	bl	118a0 <__assert_fail@plt+0x35c>
   13118:	ldr	r1, [pc, #44]	; 1314c <__assert_fail@plt+0x1c08>
   1311c:	mov	r2, #0
   13120:	mov	r3, #0
   13124:	strd	r2, [r1]
   13128:	nop			; (mov r0, r0)
   1312c:	sub	sp, fp, #4
   13130:	pop	{fp, pc}
   13134:	andeq	r7, r4, r0, lsl #4
   13138:	andeq	r7, r4, r4, lsl r2
   1313c:	andeq	r7, r4, r8, lsr #4
   13140:	ldrdeq	r5, [r3], -r4
   13144:	andeq	r7, r4, r0, lsl r2
   13148:	andeq	r5, r3, r0, ror #3
   1314c:	andeq	r7, r4, r8, lsl #4
   13150:	push	{r4, fp, lr}
   13154:	add	fp, sp, #8
   13158:	sub	sp, sp, #20
   1315c:	mov	r3, r0
   13160:	strb	r3, [fp, #-21]	; 0xffffffeb
   13164:	ldr	r3, [pc, #208]	; 1323c <__assert_fail@plt+0x1cf8>
   13168:	ldrb	r3, [r3]
   1316c:	uxtb	r3, r3
   13170:	eor	r3, r3, #1
   13174:	uxtb	r3, r3
   13178:	cmp	r3, #0
   1317c:	bne	13230 <__assert_fail@plt+0x1cec>
   13180:	ldr	r3, [pc, #184]	; 13240 <__assert_fail@plt+0x1cfc>
   13184:	ldr	r3, [r3]
   13188:	str	r3, [fp, #-16]
   1318c:	b	13208 <__assert_fail@plt+0x1cc4>
   13190:	ldr	r0, [fp, #-16]
   13194:	bl	12f34 <__assert_fail@plt+0x19f0>
   13198:	str	r0, [fp, #-20]	; 0xffffffec
   1319c:	ldr	r0, [fp, #-20]	; 0xffffffec
   131a0:	bl	112bc <unlink@plt>
   131a4:	mov	r3, r0
   131a8:	cmp	r3, #0
   131ac:	beq	13208 <__assert_fail@plt+0x1cc4>
   131b0:	bl	11418 <__errno_location@plt>
   131b4:	mov	r3, r0
   131b8:	ldr	r3, [r3]
   131bc:	cmp	r3, #2
   131c0:	beq	13208 <__assert_fail@plt+0x1cc4>
   131c4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   131c8:	eor	r3, r3, #1
   131cc:	uxtb	r3, r3
   131d0:	cmp	r3, #0
   131d4:	beq	13208 <__assert_fail@plt+0x1cc4>
   131d8:	bl	11418 <__errno_location@plt>
   131dc:	mov	r3, r0
   131e0:	ldr	r4, [r3]
   131e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   131e8:	mov	r1, #3
   131ec:	mov	r0, #0
   131f0:	bl	17534 <__assert_fail@plt+0x5ff0>
   131f4:	mov	r3, r0
   131f8:	ldr	r2, [pc, #68]	; 13244 <__assert_fail@plt+0x1d00>
   131fc:	mov	r1, r4
   13200:	mov	r0, #0
   13204:	bl	11370 <error@plt>
   13208:	ldr	r3, [fp, #-16]
   1320c:	sub	r3, r3, #1
   13210:	str	r3, [fp, #-16]
   13214:	ldr	r3, [fp, #-16]
   13218:	cmp	r3, #0
   1321c:	bge	13190 <__assert_fail@plt+0x1c4c>
   13220:	ldr	r3, [pc, #24]	; 13240 <__assert_fail@plt+0x1cfc>
   13224:	mov	r2, #0
   13228:	str	r2, [r3]
   1322c:	b	13234 <__assert_fail@plt+0x1cf0>
   13230:	nop			; (mov r0, r0)
   13234:	sub	sp, fp, #8
   13238:	pop	{r4, fp, pc}
   1323c:	andeq	r7, r4, sp, lsl r2
   13240:	andeq	r7, r4, r0, lsl #4
   13244:	andeq	r5, r3, r0, ror #3
   13248:	push	{r4, fp, lr}
   1324c:	add	fp, sp, #8
   13250:	sub	sp, sp, #164	; 0xa4
   13254:	ldr	r3, [pc, #532]	; 13470 <__assert_fail@plt+0x1f2c>
   13258:	ldr	r3, [r3]
   1325c:	cmp	r3, #0
   13260:	beq	13464 <__assert_fail@plt+0x1f20>
   13264:	ldr	r3, [pc, #516]	; 13470 <__assert_fail@plt+0x1f2c>
   13268:	ldr	r3, [r3]
   1326c:	mov	r0, r3
   13270:	bl	11358 <ferror_unlocked@plt>
   13274:	mov	r3, r0
   13278:	cmp	r3, #0
   1327c:	beq	132c4 <__assert_fail@plt+0x1d80>
   13280:	ldr	r0, [pc, #492]	; 13474 <__assert_fail@plt+0x1f30>
   13284:	bl	113e8 <gettext@plt>
   13288:	mov	r4, r0
   1328c:	ldr	r3, [pc, #484]	; 13478 <__assert_fail@plt+0x1f34>
   13290:	ldr	r3, [r3]
   13294:	mov	r1, r3
   13298:	mov	r0, #4
   1329c:	bl	173ac <__assert_fail@plt+0x5e68>
   132a0:	mov	r3, r0
   132a4:	mov	r2, r4
   132a8:	mov	r1, #0
   132ac:	mov	r0, #0
   132b0:	bl	11370 <error@plt>
   132b4:	ldr	r3, [pc, #436]	; 13470 <__assert_fail@plt+0x1f2c>
   132b8:	mov	r2, #0
   132bc:	str	r2, [r3]
   132c0:	bl	118a0 <__assert_fail@plt+0x35c>
   132c4:	ldr	r3, [pc, #420]	; 13470 <__assert_fail@plt+0x1f2c>
   132c8:	ldr	r3, [r3]
   132cc:	mov	r0, r3
   132d0:	bl	14aa4 <__assert_fail@plt+0x3560>
   132d4:	mov	r3, r0
   132d8:	cmp	r3, #0
   132dc:	beq	13328 <__assert_fail@plt+0x1de4>
   132e0:	bl	11418 <__errno_location@plt>
   132e4:	mov	r3, r0
   132e8:	ldr	r4, [r3]
   132ec:	ldr	r3, [pc, #388]	; 13478 <__assert_fail@plt+0x1f34>
   132f0:	ldr	r3, [r3]
   132f4:	mov	r2, r3
   132f8:	mov	r1, #3
   132fc:	mov	r0, #0
   13300:	bl	17534 <__assert_fail@plt+0x5ff0>
   13304:	mov	r3, r0
   13308:	ldr	r2, [pc, #364]	; 1347c <__assert_fail@plt+0x1f38>
   1330c:	mov	r1, r4
   13310:	mov	r0, #0
   13314:	bl	11370 <error@plt>
   13318:	ldr	r3, [pc, #336]	; 13470 <__assert_fail@plt+0x1f2c>
   1331c:	mov	r2, #0
   13320:	str	r2, [r3]
   13324:	bl	118a0 <__assert_fail@plt+0x35c>
   13328:	ldr	r3, [pc, #336]	; 13480 <__assert_fail@plt+0x1f3c>
   1332c:	ldrd	r2, [r3]
   13330:	orrs	r3, r2, r3
   13334:	bne	13408 <__assert_fail@plt+0x1ec4>
   13338:	ldr	r3, [pc, #324]	; 13484 <__assert_fail@plt+0x1f40>
   1333c:	ldrb	r3, [r3]
   13340:	cmp	r3, #0
   13344:	beq	13408 <__assert_fail@plt+0x1ec4>
   13348:	sub	r3, fp, #172	; 0xac
   1334c:	mov	r2, r3
   13350:	ldr	r1, [pc, #304]	; 13488 <__assert_fail@plt+0x1f44>
   13354:	mov	r0, #0
   13358:	bl	11214 <sigprocmask@plt>
   1335c:	ldr	r3, [pc, #276]	; 13478 <__assert_fail@plt+0x1f34>
   13360:	ldr	r3, [r3]
   13364:	mov	r0, r3
   13368:	bl	112bc <unlink@plt>
   1336c:	mov	r3, r0
   13370:	cmp	r3, #0
   13374:	moveq	r3, #1
   13378:	movne	r3, #0
   1337c:	strb	r3, [fp, #-13]
   13380:	bl	11418 <__errno_location@plt>
   13384:	mov	r3, r0
   13388:	ldr	r3, [r3]
   1338c:	str	r3, [fp, #-20]	; 0xffffffec
   13390:	ldr	r3, [pc, #244]	; 1348c <__assert_fail@plt+0x1f48>
   13394:	ldr	r3, [r3]
   13398:	sub	r3, r3, #1
   1339c:	ldr	r2, [pc, #232]	; 1348c <__assert_fail@plt+0x1f48>
   133a0:	str	r3, [r2]
   133a4:	sub	r3, fp, #172	; 0xac
   133a8:	mov	r2, #0
   133ac:	mov	r1, r3
   133b0:	mov	r0, #2
   133b4:	bl	11214 <sigprocmask@plt>
   133b8:	ldrb	r3, [fp, #-13]
   133bc:	eor	r3, r3, #1
   133c0:	uxtb	r3, r3
   133c4:	cmp	r3, #0
   133c8:	beq	13454 <__assert_fail@plt+0x1f10>
   133cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   133d0:	cmp	r3, #2
   133d4:	beq	13454 <__assert_fail@plt+0x1f10>
   133d8:	ldr	r3, [pc, #152]	; 13478 <__assert_fail@plt+0x1f34>
   133dc:	ldr	r3, [r3]
   133e0:	mov	r2, r3
   133e4:	mov	r1, #3
   133e8:	mov	r0, #0
   133ec:	bl	17534 <__assert_fail@plt+0x5ff0>
   133f0:	mov	r3, r0
   133f4:	ldr	r2, [pc, #128]	; 1347c <__assert_fail@plt+0x1f38>
   133f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   133fc:	mov	r0, #0
   13400:	bl	11370 <error@plt>
   13404:	b	13454 <__assert_fail@plt+0x1f10>
   13408:	ldr	r3, [pc, #128]	; 13490 <__assert_fail@plt+0x1f4c>
   1340c:	ldrb	r3, [r3]
   13410:	eor	r3, r3, #1
   13414:	uxtb	r3, r3
   13418:	cmp	r3, #0
   1341c:	beq	13458 <__assert_fail@plt+0x1f14>
   13420:	ldr	r3, [pc, #108]	; 13494 <__assert_fail@plt+0x1f50>
   13424:	ldr	r4, [r3]
   13428:	ldr	r3, [pc, #80]	; 13480 <__assert_fail@plt+0x1f3c>
   1342c:	ldrd	r0, [r3]
   13430:	sub	r3, fp, #44	; 0x2c
   13434:	mov	r2, r3
   13438:	bl	14f5c <__assert_fail@plt+0x3a18>
   1343c:	mov	r3, r0
   13440:	mov	r2, r3
   13444:	ldr	r1, [pc, #76]	; 13498 <__assert_fail@plt+0x1f54>
   13448:	mov	r0, r4
   1344c:	bl	1140c <fprintf@plt>
   13450:	b	13458 <__assert_fail@plt+0x1f14>
   13454:	nop			; (mov r0, r0)
   13458:	ldr	r3, [pc, #16]	; 13470 <__assert_fail@plt+0x1f2c>
   1345c:	mov	r2, #0
   13460:	str	r2, [r3]
   13464:	nop			; (mov r0, r0)
   13468:	sub	sp, fp, #8
   1346c:	pop	{r4, fp, pc}
   13470:	andeq	r7, r4, r0, lsl r2
   13474:	ldrdeq	r5, [r3], -r8
   13478:	andeq	r7, r4, r4, lsl r2
   1347c:	andeq	r5, r3, r0, ror #3
   13480:	andeq	r7, r4, r8, lsl #4
   13484:	andeq	r7, r4, lr, lsl r2
   13488:	andeq	r7, r4, r8, lsr #4
   1348c:	andeq	r7, r4, r0, lsl #4
   13490:	andeq	r7, r4, ip, lsl r2
   13494:	andeq	r7, r4, r4, asr #3
   13498:	andeq	r5, r3, ip, ror #5
   1349c:	push	{r4, r5, fp, lr}
   134a0:	add	fp, sp, #12
   134a4:	sub	sp, sp, #16
   134a8:	str	r0, [fp, #-24]	; 0xffffffe8
   134ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134b0:	ldr	r0, [r3, #4]
   134b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134b8:	ldr	r3, [r3]
   134bc:	mov	r2, r3
   134c0:	ldr	r3, [pc, #168]	; 13570 <__assert_fail@plt+0x202c>
   134c4:	ldr	r3, [r3]
   134c8:	mov	r1, #1
   134cc:	bl	11298 <fwrite_unlocked@plt>
   134d0:	mov	r3, r0
   134d4:	str	r3, [fp, #-16]
   134d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134dc:	ldr	r2, [r3]
   134e0:	ldr	r3, [fp, #-16]
   134e4:	cmp	r2, r3
   134e8:	beq	1353c <__assert_fail@plt+0x1ff8>
   134ec:	bl	11418 <__errno_location@plt>
   134f0:	mov	r3, r0
   134f4:	ldr	r4, [r3]
   134f8:	ldr	r0, [pc, #116]	; 13574 <__assert_fail@plt+0x2030>
   134fc:	bl	113e8 <gettext@plt>
   13500:	mov	r5, r0
   13504:	ldr	r3, [pc, #108]	; 13578 <__assert_fail@plt+0x2034>
   13508:	ldr	r3, [r3]
   1350c:	mov	r1, r3
   13510:	mov	r0, #4
   13514:	bl	173ac <__assert_fail@plt+0x5e68>
   13518:	mov	r3, r0
   1351c:	mov	r2, r5
   13520:	mov	r1, r4
   13524:	mov	r0, #0
   13528:	bl	11370 <error@plt>
   1352c:	ldr	r3, [pc, #60]	; 13570 <__assert_fail@plt+0x202c>
   13530:	mov	r2, #0
   13534:	str	r2, [r3]
   13538:	bl	118a0 <__assert_fail@plt+0x35c>
   1353c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13540:	ldr	r3, [r3]
   13544:	mov	r0, r3
   13548:	asr	r1, r0, #31
   1354c:	ldr	r3, [pc, #40]	; 1357c <__assert_fail@plt+0x2038>
   13550:	ldrd	r2, [r3]
   13554:	adds	r2, r2, r0
   13558:	adc	r3, r3, r1
   1355c:	ldr	r1, [pc, #24]	; 1357c <__assert_fail@plt+0x2038>
   13560:	strd	r2, [r1]
   13564:	nop			; (mov r0, r0)
   13568:	sub	sp, fp, #12
   1356c:	pop	{r4, r5, fp, pc}
   13570:	andeq	r7, r4, r0, lsl r2
   13574:	ldrdeq	r5, [r3], -r8
   13578:	andeq	r7, r4, r4, lsl r2
   1357c:	andeq	r7, r4, r8, lsl #4
   13580:	push	{fp, lr}
   13584:	add	fp, sp, #4
   13588:	sub	sp, sp, #16
   1358c:	ldr	r3, [pc, #188]	; 13650 <__assert_fail@plt+0x210c>
   13590:	ldr	r2, [r3]
   13594:	ldr	r3, [pc, #184]	; 13654 <__assert_fail@plt+0x2110>
   13598:	ldr	r3, [r3]
   1359c:	cmp	r2, r3
   135a0:	bne	135d0 <__assert_fail@plt+0x208c>
   135a4:	ldr	r3, [pc, #172]	; 13658 <__assert_fail@plt+0x2114>
   135a8:	ldr	r0, [r3]
   135ac:	mov	r3, #64	; 0x40
   135b0:	str	r3, [sp]
   135b4:	mvn	r3, #0
   135b8:	mov	r2, #1
   135bc:	ldr	r1, [pc, #144]	; 13654 <__assert_fail@plt+0x2110>
   135c0:	bl	316dc <__assert_fail@plt+0x20198>
   135c4:	mov	r2, r0
   135c8:	ldr	r3, [pc, #136]	; 13658 <__assert_fail@plt+0x2114>
   135cc:	str	r2, [r3]
   135d0:	ldr	r3, [pc, #128]	; 13658 <__assert_fail@plt+0x2114>
   135d4:	ldr	r2, [r3]
   135d8:	ldr	r3, [pc, #112]	; 13650 <__assert_fail@plt+0x210c>
   135dc:	ldr	r3, [r3]
   135e0:	add	r1, r3, #1
   135e4:	ldr	r0, [pc, #100]	; 13650 <__assert_fail@plt+0x210c>
   135e8:	str	r1, [r0]
   135ec:	lsl	r3, r3, #6
   135f0:	add	r3, r2, r3
   135f4:	str	r3, [fp, #-8]
   135f8:	ldr	r3, [fp, #-8]
   135fc:	mov	r2, #0
   13600:	strb	r2, [r3, #30]
   13604:	ldr	r1, [fp, #-8]
   13608:	mov	r2, #0
   1360c:	mov	r3, #0
   13610:	strd	r2, [r1, #16]
   13614:	ldr	r3, [fp, #-8]
   13618:	mov	r2, #0
   1361c:	strb	r2, [r3, #28]
   13620:	ldr	r1, [fp, #-8]
   13624:	mov	r2, #0
   13628:	mov	r3, #0
   1362c:	strd	r2, [r1, #8]
   13630:	ldr	r1, [fp, #-8]
   13634:	mov	r2, #0
   13638:	mov	r3, #0
   1363c:	strd	r2, [r1]
   13640:	ldr	r3, [fp, #-8]
   13644:	mov	r0, r3
   13648:	sub	sp, fp, #4
   1364c:	pop	{fp, pc}
   13650:	andeq	r7, r4, r4, lsr #4
   13654:	andeq	r7, r4, ip, lsr #5
   13658:	andeq	r7, r4, r0, lsr #4
   1365c:	push	{r4, fp, lr}
   13660:	add	fp, sp, #8
   13664:	sub	sp, sp, #28
   13668:	str	r0, [fp, #-16]
   1366c:	str	r1, [fp, #-20]	; 0xffffffec
   13670:	str	r2, [fp, #-24]	; 0xffffffe8
   13674:	ldr	r2, [fp, #-16]
   13678:	ldr	r3, [pc, #84]	; 136d4 <__assert_fail@plt+0x2190>
   1367c:	str	r3, [sp]
   13680:	mov	r3, r2
   13684:	mov	r2, #10
   13688:	mov	r1, #0
   1368c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13690:	bl	323a4 <__assert_fail@plt+0x20e60>
   13694:	mov	r3, r0
   13698:	cmp	r3, #0
   1369c:	beq	136c8 <__assert_fail@plt+0x2184>
   136a0:	ldr	r0, [pc, #48]	; 136d8 <__assert_fail@plt+0x2194>
   136a4:	bl	113e8 <gettext@plt>
   136a8:	mov	r4, r0
   136ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b0:	bl	177a4 <__assert_fail@plt+0x6260>
   136b4:	mov	r3, r0
   136b8:	mov	r2, r4
   136bc:	mov	r1, #0
   136c0:	mov	r0, #1
   136c4:	bl	11370 <error@plt>
   136c8:	nop			; (mov r0, r0)
   136cc:	sub	sp, fp, #8
   136d0:	pop	{r4, fp, pc}
   136d4:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   136d8:	strdeq	r5, [r3], -r0
   136dc:	push	{r4, fp, lr}
   136e0:	add	fp, sp, #8
   136e4:	sub	sp, sp, #44	; 0x2c
   136e8:	str	r0, [fp, #-32]	; 0xffffffe0
   136ec:	str	r1, [fp, #-36]	; 0xffffffdc
   136f0:	str	r2, [fp, #-40]	; 0xffffffd8
   136f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   136f8:	bl	113f4 <strlen@plt>
   136fc:	mov	r3, r0
   13700:	sub	r3, r3, #1
   13704:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13708:	add	r3, r2, r3
   1370c:	str	r3, [fp, #-16]
   13710:	ldr	r3, [fp, #-16]
   13714:	ldrb	r3, [r3]
   13718:	cmp	r3, #125	; 0x7d
   1371c:	beq	13748 <__assert_fail@plt+0x2204>
   13720:	ldr	r0, [pc, #268]	; 13834 <__assert_fail@plt+0x22f0>
   13724:	bl	113e8 <gettext@plt>
   13728:	mov	r4, r0
   1372c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13730:	bl	177a4 <__assert_fail@plt+0x6260>
   13734:	mov	r3, r0
   13738:	mov	r2, r4
   1373c:	mov	r1, #0
   13740:	mov	r0, #1
   13744:	bl	11370 <error@plt>
   13748:	ldr	r3, [fp, #-16]
   1374c:	mov	r2, #0
   13750:	strb	r2, [r3]
   13754:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13758:	add	r2, r3, #1
   1375c:	ldr	r3, [fp, #-16]
   13760:	sub	r3, r3, #1
   13764:	cmp	r2, r3
   13768:	bne	13790 <__assert_fail@plt+0x224c>
   1376c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13770:	add	r3, r3, #1
   13774:	ldrb	r3, [r3]
   13778:	cmp	r3, #42	; 0x2a
   1377c:	bne	13790 <__assert_fail@plt+0x224c>
   13780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13784:	mov	r2, #1
   13788:	strb	r2, [r3, #28]
   1378c:	b	1381c <__assert_fail@plt+0x22d8>
   13790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13794:	add	r0, r3, #1
   13798:	sub	r2, fp, #28
   1379c:	ldr	r3, [pc, #148]	; 13838 <__assert_fail@plt+0x22f4>
   137a0:	str	r3, [sp]
   137a4:	mov	r3, r2
   137a8:	mov	r2, #10
   137ac:	mov	r1, #0
   137b0:	bl	32b40 <__assert_fail@plt+0x215fc>
   137b4:	mov	r3, r0
   137b8:	cmp	r3, #0
   137bc:	bne	137d0 <__assert_fail@plt+0x228c>
   137c0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   137c4:	cmp	r2, #0
   137c8:	sbcs	r3, r3, #0
   137cc:	bge	13810 <__assert_fail@plt+0x22cc>
   137d0:	ldr	r0, [pc, #100]	; 1383c <__assert_fail@plt+0x22f8>
   137d4:	bl	113e8 <gettext@plt>
   137d8:	mov	r4, r0
   137dc:	ldr	r3, [pc, #92]	; 13840 <__assert_fail@plt+0x22fc>
   137e0:	ldr	r2, [r3]
   137e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   137e8:	lsl	r3, r3, #2
   137ec:	add	r3, r2, r3
   137f0:	ldr	r3, [r3]
   137f4:	mov	r0, r3
   137f8:	bl	177a4 <__assert_fail@plt+0x6260>
   137fc:	mov	r3, r0
   13800:	mov	r2, r4
   13804:	mov	r1, #0
   13808:	mov	r0, #1
   1380c:	bl	11370 <error@plt>
   13810:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13814:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13818:	strd	r2, [r1, #16]
   1381c:	ldr	r3, [fp, #-16]
   13820:	mov	r2, #125	; 0x7d
   13824:	strb	r2, [r3]
   13828:	nop			; (mov r0, r0)
   1382c:	sub	sp, fp, #8
   13830:	pop	{r4, fp, pc}
   13834:	andeq	r5, r3, r8, lsl r3
   13838:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1383c:	andeq	r5, r3, ip, lsr r3
   13840:	andeq	r7, r4, r8, lsl r2
   13844:	push	{r4, fp, lr}
   13848:	add	fp, sp, #8
   1384c:	sub	sp, sp, #52	; 0x34
   13850:	str	r0, [fp, #-40]	; 0xffffffd8
   13854:	mov	r3, r1
   13858:	str	r2, [fp, #-48]	; 0xffffffd0
   1385c:	strb	r3, [fp, #-41]	; 0xffffffd7
   13860:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13864:	ldrb	r3, [r3]
   13868:	strb	r3, [fp, #-13]
   1386c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13870:	add	r3, r3, #1
   13874:	ldrb	r2, [fp, #-13]
   13878:	mov	r1, r2
   1387c:	mov	r0, r3
   13880:	bl	114cc <strrchr@plt>
   13884:	str	r0, [fp, #-20]	; 0xffffffec
   13888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1388c:	cmp	r3, #0
   13890:	bne	138b8 <__assert_fail@plt+0x2374>
   13894:	ldr	r0, [pc, #324]	; 139e0 <__assert_fail@plt+0x249c>
   13898:	bl	113e8 <gettext@plt>
   1389c:	mov	r2, r0
   138a0:	ldrb	r3, [fp, #-13]
   138a4:	str	r3, [sp]
   138a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   138ac:	mov	r1, #0
   138b0:	mov	r0, #1
   138b4:	bl	11370 <error@plt>
   138b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   138bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   138c0:	sub	r3, r2, r3
   138c4:	sub	r3, r3, #1
   138c8:	str	r3, [fp, #-24]	; 0xffffffe8
   138cc:	bl	13580 <__assert_fail@plt+0x203c>
   138d0:	str	r0, [fp, #-28]	; 0xffffffe4
   138d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   138dc:	str	r2, [r3, #24]
   138e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138e4:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   138e8:	strb	r2, [r3, #29]
   138ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138f0:	mov	r2, #1
   138f4:	strb	r2, [r3, #30]
   138f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138fc:	mov	r2, #0
   13900:	str	r2, [r3, #32]
   13904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13908:	mov	r2, #0
   1390c:	str	r2, [r3, #36]	; 0x24
   13910:	mov	r0, #256	; 0x100
   13914:	bl	31354 <__assert_fail@plt+0x1fe10>
   13918:	mov	r3, r0
   1391c:	mov	r2, r3
   13920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13924:	str	r2, [r3, #48]	; 0x30
   13928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1392c:	mov	r2, #0
   13930:	str	r2, [r3, #52]	; 0x34
   13934:	ldr	r3, [pc, #168]	; 139e4 <__assert_fail@plt+0x24a0>
   13938:	ldr	r2, [pc, #168]	; 139e8 <__assert_fail@plt+0x24a4>
   1393c:	str	r2, [r3]
   13940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13944:	add	r0, r3, #1
   13948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1394c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13950:	add	r3, r3, #32
   13954:	mov	r2, r3
   13958:	bl	1cc90 <__assert_fail@plt+0xb74c>
   1395c:	str	r0, [fp, #-32]	; 0xffffffe0
   13960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13964:	cmp	r3, #0
   13968:	beq	139a4 <__assert_fail@plt+0x2460>
   1396c:	ldr	r0, [pc, #120]	; 139ec <__assert_fail@plt+0x24a8>
   13970:	bl	113e8 <gettext@plt>
   13974:	mov	r4, r0
   13978:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1397c:	bl	177a4 <__assert_fail@plt+0x6260>
   13980:	mov	r2, r0
   13984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13988:	str	r3, [sp]
   1398c:	mov	r3, r2
   13990:	mov	r2, r4
   13994:	mov	r1, #0
   13998:	mov	r0, #0
   1399c:	bl	11370 <error@plt>
   139a0:	bl	118a0 <__assert_fail@plt+0x35c>
   139a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   139a8:	add	r3, r3, #1
   139ac:	ldrb	r3, [r3]
   139b0:	cmp	r3, #0
   139b4:	beq	139d0 <__assert_fail@plt+0x248c>
   139b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139bc:	add	r3, r3, #1
   139c0:	mov	r2, r3
   139c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   139c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   139cc:	bl	1365c <__assert_fail@plt+0x2118>
   139d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   139d4:	mov	r0, r3
   139d8:	sub	sp, fp, #8
   139dc:	pop	{r4, fp, pc}
   139e0:	andeq	r5, r3, r8, ror #6
   139e4:	strdeq	r7, [r4], -r4
   139e8:	andeq	r0, r0, r6, asr #5
   139ec:	andeq	r5, r3, ip, lsl #7
   139f0:	push	{r4, r5, fp, lr}
   139f4:	add	fp, sp, #12
   139f8:	sub	sp, sp, #64	; 0x40
   139fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13a00:	str	r1, [fp, #-60]	; 0xffffffc4
   13a04:	str	r2, [fp, #-64]	; 0xffffffc0
   13a08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13a0c:	str	r3, [fp, #-20]	; 0xffffffec
   13a10:	b	13cd0 <__assert_fail@plt+0x278c>
   13a14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a18:	lsl	r3, r3, #2
   13a1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a20:	add	r3, r2, r3
   13a24:	ldr	r3, [r3]
   13a28:	ldrb	r3, [r3]
   13a2c:	cmp	r3, #47	; 0x2f
   13a30:	beq	13a54 <__assert_fail@plt+0x2510>
   13a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a38:	lsl	r3, r3, #2
   13a3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a40:	add	r3, r2, r3
   13a44:	ldr	r3, [r3]
   13a48:	ldrb	r3, [r3]
   13a4c:	cmp	r3, #37	; 0x25
   13a50:	bne	13aa4 <__assert_fail@plt+0x2560>
   13a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a58:	lsl	r3, r3, #2
   13a5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a60:	add	r3, r2, r3
   13a64:	ldr	r3, [r3]
   13a68:	ldrb	r3, [r3]
   13a6c:	cmp	r3, #37	; 0x25
   13a70:	moveq	r3, #1
   13a74:	movne	r3, #0
   13a78:	uxtb	r1, r3
   13a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a80:	lsl	r3, r3, #2
   13a84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13a88:	add	r3, r2, r3
   13a8c:	ldr	r3, [r3]
   13a90:	mov	r2, r3
   13a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a98:	bl	13844 <__assert_fail@plt+0x2300>
   13a9c:	str	r0, [fp, #-16]
   13aa0:	b	13c5c <__assert_fail@plt+0x2718>
   13aa4:	bl	13580 <__assert_fail@plt+0x203c>
   13aa8:	str	r0, [fp, #-16]
   13aac:	ldr	r3, [fp, #-16]
   13ab0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ab4:	str	r2, [r3, #24]
   13ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13abc:	lsl	r3, r3, #2
   13ac0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13ac4:	add	r3, r2, r3
   13ac8:	ldr	r0, [r3]
   13acc:	sub	r2, fp, #28
   13ad0:	ldr	r3, [pc, #532]	; 13cec <__assert_fail@plt+0x27a8>
   13ad4:	str	r3, [sp]
   13ad8:	mov	r3, r2
   13adc:	mov	r2, #10
   13ae0:	mov	r1, #0
   13ae4:	bl	32b40 <__assert_fail@plt+0x215fc>
   13ae8:	mov	r3, r0
   13aec:	cmp	r3, #0
   13af0:	bne	13b04 <__assert_fail@plt+0x25c0>
   13af4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13af8:	cmp	r2, #0
   13afc:	sbcs	r3, r3, #0
   13b00:	bge	13b40 <__assert_fail@plt+0x25fc>
   13b04:	ldr	r0, [pc, #484]	; 13cf0 <__assert_fail@plt+0x27ac>
   13b08:	bl	113e8 <gettext@plt>
   13b0c:	mov	r4, r0
   13b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b14:	lsl	r3, r3, #2
   13b18:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13b1c:	add	r3, r2, r3
   13b20:	ldr	r3, [r3]
   13b24:	mov	r0, r3
   13b28:	bl	177a4 <__assert_fail@plt+0x6260>
   13b2c:	mov	r3, r0
   13b30:	mov	r2, r4
   13b34:	mov	r1, #0
   13b38:	mov	r0, #1
   13b3c:	bl	11370 <error@plt>
   13b40:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13b44:	orrs	r3, r2, r3
   13b48:	bne	13b7c <__assert_fail@plt+0x2638>
   13b4c:	ldr	r0, [pc, #416]	; 13cf4 <__assert_fail@plt+0x27b0>
   13b50:	bl	113e8 <gettext@plt>
   13b54:	mov	r1, r0
   13b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b5c:	lsl	r3, r3, #2
   13b60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13b64:	add	r3, r2, r3
   13b68:	ldr	r3, [r3]
   13b6c:	mov	r2, r1
   13b70:	mov	r1, #0
   13b74:	mov	r0, #1
   13b78:	bl	11370 <error@plt>
   13b7c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13b80:	ldr	r1, [pc, #368]	; 13cf8 <__assert_fail@plt+0x27b4>
   13b84:	ldrd	r0, [r1]
   13b88:	cmp	r3, r1
   13b8c:	cmpeq	r2, r0
   13b90:	bcs	13bf0 <__assert_fail@plt+0x26ac>
   13b94:	ldr	r0, [pc, #352]	; 13cfc <__assert_fail@plt+0x27b8>
   13b98:	bl	113e8 <gettext@plt>
   13b9c:	mov	r4, r0
   13ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ba4:	lsl	r3, r3, #2
   13ba8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13bac:	add	r3, r2, r3
   13bb0:	ldr	r3, [r3]
   13bb4:	mov	r0, r3
   13bb8:	bl	177a4 <__assert_fail@plt+0x6260>
   13bbc:	mov	r5, r0
   13bc0:	ldr	r3, [pc, #304]	; 13cf8 <__assert_fail@plt+0x27b4>
   13bc4:	ldrd	r0, [r3]
   13bc8:	sub	r3, fp, #52	; 0x34
   13bcc:	mov	r2, r3
   13bd0:	bl	14f5c <__assert_fail@plt+0x3a18>
   13bd4:	mov	r3, r0
   13bd8:	str	r3, [sp]
   13bdc:	mov	r3, r5
   13be0:	mov	r2, r4
   13be4:	mov	r1, #0
   13be8:	mov	r0, #1
   13bec:	bl	11370 <error@plt>
   13bf0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13bf4:	ldr	r1, [pc, #252]	; 13cf8 <__assert_fail@plt+0x27b4>
   13bf8:	ldrd	r0, [r1]
   13bfc:	cmp	r3, r1
   13c00:	cmpeq	r2, r0
   13c04:	bne	13c44 <__assert_fail@plt+0x2700>
   13c08:	ldr	r0, [pc, #240]	; 13d00 <__assert_fail@plt+0x27bc>
   13c0c:	bl	113e8 <gettext@plt>
   13c10:	mov	r4, r0
   13c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c18:	lsl	r3, r3, #2
   13c1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13c20:	add	r3, r2, r3
   13c24:	ldr	r3, [r3]
   13c28:	mov	r0, r3
   13c2c:	bl	177a4 <__assert_fail@plt+0x6260>
   13c30:	mov	r3, r0
   13c34:	mov	r2, r4
   13c38:	mov	r1, #0
   13c3c:	mov	r0, #0
   13c40:	bl	11370 <error@plt>
   13c44:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13c48:	ldr	r1, [pc, #168]	; 13cf8 <__assert_fail@plt+0x27b4>
   13c4c:	strd	r2, [r1]
   13c50:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13c54:	ldr	r1, [fp, #-16]
   13c58:	strd	r2, [r1, #8]
   13c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c60:	add	r2, r3, #1
   13c64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13c68:	cmp	r2, r3
   13c6c:	bge	13cc4 <__assert_fail@plt+0x2780>
   13c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c74:	add	r3, r3, #1
   13c78:	lsl	r3, r3, #2
   13c7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13c80:	add	r3, r2, r3
   13c84:	ldr	r3, [r3]
   13c88:	ldrb	r3, [r3]
   13c8c:	cmp	r3, #123	; 0x7b
   13c90:	bne	13cc4 <__assert_fail@plt+0x2780>
   13c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c98:	add	r3, r3, #1
   13c9c:	str	r3, [fp, #-20]	; 0xffffffec
   13ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ca4:	lsl	r3, r3, #2
   13ca8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13cac:	add	r3, r2, r3
   13cb0:	ldr	r3, [r3]
   13cb4:	mov	r2, r3
   13cb8:	ldr	r1, [fp, #-16]
   13cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cc0:	bl	136dc <__assert_fail@plt+0x2198>
   13cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cc8:	add	r3, r3, #1
   13ccc:	str	r3, [fp, #-20]	; 0xffffffec
   13cd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13cd8:	cmp	r2, r3
   13cdc:	blt	13a14 <__assert_fail@plt+0x24d0>
   13ce0:	nop			; (mov r0, r0)
   13ce4:	sub	sp, fp, #12
   13ce8:	pop	{r4, r5, fp, pc}
   13cec:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   13cf0:			; <UNDEFINED> instruction: 0x000353b0
   13cf4:	andeq	r5, r3, r4, asr #7
   13cf8:			; <UNDEFINED> instruction: 0x000472b0
   13cfc:	strdeq	r5, [r3], -r0
   13d00:	andeq	r5, r3, ip, lsr #8
   13d04:	push	{fp}		; (str fp, [sp, #-4]!)
   13d08:	add	fp, sp, #0
   13d0c:	sub	sp, sp, #20
   13d10:	str	r0, [fp, #-16]
   13d14:	str	r1, [fp, #-20]	; 0xffffffec
   13d18:	mov	r3, #0
   13d1c:	str	r3, [fp, #-8]
   13d20:	mov	r3, #0
   13d24:	str	r3, [fp, #-12]
   13d28:	ldr	r3, [fp, #-12]
   13d2c:	ldr	r2, [fp, #-16]
   13d30:	add	r3, r2, r3
   13d34:	ldrb	r3, [r3]
   13d38:	sub	r3, r3, #35	; 0x23
   13d3c:	cmp	r3, #13
   13d40:	ldrls	pc, [pc, r3, lsl #2]
   13d44:	b	13da0 <__assert_fail@plt+0x285c>
   13d48:	muleq	r1, r0, sp
   13d4c:	andeq	r3, r1, r0, lsr #27
   13d50:	andeq	r3, r1, r0, lsr #27
   13d54:	andeq	r3, r1, r0, lsr #27
   13d58:	andeq	r3, r1, r0, lsl #27
   13d5c:	andeq	r3, r1, r0, lsr #27
   13d60:	andeq	r3, r1, r0, lsr #27
   13d64:	andeq	r3, r1, r0, lsr #27
   13d68:	andeq	r3, r1, r0, lsr #27
   13d6c:	andeq	r3, r1, r0, lsr #27
   13d70:			; <UNDEFINED> instruction: 0x00013db4
   13d74:	andeq	r3, r1, r0, lsr #27
   13d78:	andeq	r3, r1, r0, lsr #27
   13d7c:			; <UNDEFINED> instruction: 0x00013db4
   13d80:	ldr	r3, [fp, #-8]
   13d84:	orr	r3, r3, #1
   13d88:	str	r3, [fp, #-8]
   13d8c:	b	13db8 <__assert_fail@plt+0x2874>
   13d90:	ldr	r3, [fp, #-8]
   13d94:	orr	r3, r3, #2
   13d98:	str	r3, [fp, #-8]
   13d9c:	b	13db8 <__assert_fail@plt+0x2874>
   13da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13da4:	ldr	r2, [fp, #-8]
   13da8:	str	r2, [r3]
   13dac:	ldr	r3, [fp, #-12]
   13db0:	b	13dc8 <__assert_fail@plt+0x2884>
   13db4:	nop			; (mov r0, r0)
   13db8:	ldr	r3, [fp, #-12]
   13dbc:	add	r3, r3, #1
   13dc0:	str	r3, [fp, #-12]
   13dc4:	b	13d28 <__assert_fail@plt+0x27e4>
   13dc8:	mov	r0, r3
   13dcc:	add	sp, fp, #0
   13dd0:	pop	{fp}		; (ldr fp, [sp], #4)
   13dd4:	bx	lr
   13dd8:	push	{fp, lr}
   13ddc:	add	fp, sp, #4
   13de0:	sub	sp, sp, #24
   13de4:	str	r0, [fp, #-16]
   13de8:	str	r1, [fp, #-20]	; 0xffffffec
   13dec:	ldr	r3, [fp, #-16]
   13df0:	ldrb	r3, [r3]
   13df4:	strb	r3, [fp, #-9]
   13df8:	mov	r3, #1
   13dfc:	str	r3, [fp, #-8]
   13e00:	ldrb	r3, [fp, #-9]
   13e04:	cmp	r3, #105	; 0x69
   13e08:	beq	13ee4 <__assert_fail@plt+0x29a0>
   13e0c:	cmp	r3, #105	; 0x69
   13e10:	bgt	13e30 <__assert_fail@plt+0x28ec>
   13e14:	cmp	r3, #88	; 0x58
   13e18:	beq	13e5c <__assert_fail@plt+0x2918>
   13e1c:	cmp	r3, #100	; 0x64
   13e20:	beq	13ee4 <__assert_fail@plt+0x29a0>
   13e24:	cmp	r3, #0
   13e28:	beq	13e68 <__assert_fail@plt+0x2924>
   13e2c:	b	13e84 <__assert_fail@plt+0x2940>
   13e30:	cmp	r3, #117	; 0x75
   13e34:	beq	13e4c <__assert_fail@plt+0x2908>
   13e38:	cmp	r3, #120	; 0x78
   13e3c:	beq	13e5c <__assert_fail@plt+0x2918>
   13e40:	cmp	r3, #111	; 0x6f
   13e44:	beq	13e5c <__assert_fail@plt+0x2918>
   13e48:	b	13e84 <__assert_fail@plt+0x2940>
   13e4c:	ldr	r3, [fp, #-16]
   13e50:	mov	r2, #100	; 0x64
   13e54:	strb	r2, [r3]
   13e58:	b	13ee8 <__assert_fail@plt+0x29a4>
   13e5c:	mov	r3, #2
   13e60:	str	r3, [fp, #-8]
   13e64:	b	13ee8 <__assert_fail@plt+0x29a4>
   13e68:	ldr	r0, [pc, #236]	; 13f5c <__assert_fail@plt+0x2a18>
   13e6c:	bl	113e8 <gettext@plt>
   13e70:	mov	r3, r0
   13e74:	mov	r2, r3
   13e78:	mov	r1, #0
   13e7c:	mov	r0, #1
   13e80:	bl	11370 <error@plt>
   13e84:	bl	113d0 <__ctype_b_loc@plt>
   13e88:	mov	r3, r0
   13e8c:	ldr	r2, [r3]
   13e90:	ldrb	r3, [fp, #-9]
   13e94:	lsl	r3, r3, #1
   13e98:	add	r3, r2, r3
   13e9c:	ldrh	r3, [r3]
   13ea0:	and	r3, r3, #16384	; 0x4000
   13ea4:	cmp	r3, #0
   13ea8:	beq	13ec8 <__assert_fail@plt+0x2984>
   13eac:	ldr	r0, [pc, #172]	; 13f60 <__assert_fail@plt+0x2a1c>
   13eb0:	bl	113e8 <gettext@plt>
   13eb4:	mov	r2, r0
   13eb8:	ldrb	r3, [fp, #-9]
   13ebc:	mov	r1, #0
   13ec0:	mov	r0, #1
   13ec4:	bl	11370 <error@plt>
   13ec8:	ldr	r0, [pc, #148]	; 13f64 <__assert_fail@plt+0x2a20>
   13ecc:	bl	113e8 <gettext@plt>
   13ed0:	mov	r2, r0
   13ed4:	ldrb	r3, [fp, #-9]
   13ed8:	mov	r1, #0
   13edc:	mov	r0, #1
   13ee0:	bl	11370 <error@plt>
   13ee4:	nop			; (mov r0, r0)
   13ee8:	ldr	r3, [fp, #-8]
   13eec:	mvn	r2, r3
   13ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ef4:	and	r3, r3, r2
   13ef8:	cmp	r3, #0
   13efc:	beq	13f50 <__assert_fail@plt+0x2a0c>
   13f00:	ldr	r0, [pc, #96]	; 13f68 <__assert_fail@plt+0x2a24>
   13f04:	bl	113e8 <gettext@plt>
   13f08:	mov	r1, r0
   13f0c:	ldr	r3, [fp, #-8]
   13f10:	mvn	r2, r3
   13f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f18:	and	r3, r3, r2
   13f1c:	and	r3, r3, #2
   13f20:	cmp	r3, #0
   13f24:	beq	13f30 <__assert_fail@plt+0x29ec>
   13f28:	mov	r2, #35	; 0x23
   13f2c:	b	13f34 <__assert_fail@plt+0x29f0>
   13f30:	mov	r2, #39	; 0x27
   13f34:	ldrb	r3, [fp, #-9]
   13f38:	str	r3, [sp]
   13f3c:	mov	r3, r2
   13f40:	mov	r2, r1
   13f44:	mov	r1, #0
   13f48:	mov	r0, #1
   13f4c:	bl	11370 <error@plt>
   13f50:	nop			; (mov r0, r0)
   13f54:	sub	sp, fp, #4
   13f58:	pop	{fp, pc}
   13f5c:	andeq	r5, r3, ip, ror #8
   13f60:	muleq	r3, r4, r4
   13f64:	andeq	r5, r3, r0, asr #9
   13f68:	strdeq	r5, [r3], -r0
   13f6c:	push	{fp, lr}
   13f70:	add	fp, sp, #4
   13f74:	sub	sp, sp, #24
   13f78:	str	r0, [fp, #-24]	; 0xffffffe8
   13f7c:	mov	r3, #0
   13f80:	strb	r3, [fp, #-5]
   13f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f88:	str	r3, [fp, #-12]
   13f8c:	b	14088 <__assert_fail@plt+0x2b44>
   13f90:	ldr	r3, [fp, #-12]
   13f94:	ldrb	r3, [r3]
   13f98:	cmp	r3, #37	; 0x25
   13f9c:	bne	1407c <__assert_fail@plt+0x2b38>
   13fa0:	ldr	r3, [fp, #-12]
   13fa4:	add	r3, r3, #1
   13fa8:	str	r3, [fp, #-12]
   13fac:	ldr	r3, [fp, #-12]
   13fb0:	ldrb	r3, [r3]
   13fb4:	cmp	r3, #37	; 0x25
   13fb8:	beq	1407c <__assert_fail@plt+0x2b38>
   13fbc:	ldrb	r3, [fp, #-5]
   13fc0:	cmp	r3, #0
   13fc4:	beq	13fe4 <__assert_fail@plt+0x2aa0>
   13fc8:	ldr	r0, [pc, #304]	; 14100 <__assert_fail@plt+0x2bbc>
   13fcc:	bl	113e8 <gettext@plt>
   13fd0:	mov	r3, r0
   13fd4:	mov	r2, r3
   13fd8:	mov	r1, #0
   13fdc:	mov	r0, #1
   13fe0:	bl	11370 <error@plt>
   13fe4:	mov	r3, #1
   13fe8:	strb	r3, [fp, #-5]
   13fec:	sub	r3, fp, #20
   13ff0:	mov	r1, r3
   13ff4:	ldr	r0, [fp, #-12]
   13ff8:	bl	13d04 <__assert_fail@plt+0x27c0>
   13ffc:	mov	r3, r0
   14000:	mov	r2, r3
   14004:	ldr	r3, [fp, #-12]
   14008:	add	r3, r3, r2
   1400c:	str	r3, [fp, #-12]
   14010:	b	14020 <__assert_fail@plt+0x2adc>
   14014:	ldr	r3, [fp, #-12]
   14018:	add	r3, r3, #1
   1401c:	str	r3, [fp, #-12]
   14020:	ldr	r3, [fp, #-12]
   14024:	ldrb	r3, [r3]
   14028:	sub	r3, r3, #48	; 0x30
   1402c:	cmp	r3, #9
   14030:	bls	14014 <__assert_fail@plt+0x2ad0>
   14034:	ldr	r3, [fp, #-12]
   14038:	ldrb	r3, [r3]
   1403c:	cmp	r3, #46	; 0x2e
   14040:	bne	1406c <__assert_fail@plt+0x2b28>
   14044:	b	1404c <__assert_fail@plt+0x2b08>
   14048:	nop			; (mov r0, r0)
   1404c:	ldr	r3, [fp, #-12]
   14050:	add	r3, r3, #1
   14054:	str	r3, [fp, #-12]
   14058:	ldr	r3, [fp, #-12]
   1405c:	ldrb	r3, [r3]
   14060:	sub	r3, r3, #48	; 0x30
   14064:	cmp	r3, #9
   14068:	bls	14048 <__assert_fail@plt+0x2b04>
   1406c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14070:	mov	r1, r3
   14074:	ldr	r0, [fp, #-12]
   14078:	bl	13dd8 <__assert_fail@plt+0x2894>
   1407c:	ldr	r3, [fp, #-12]
   14080:	add	r3, r3, #1
   14084:	str	r3, [fp, #-12]
   14088:	ldr	r3, [fp, #-12]
   1408c:	ldrb	r3, [r3]
   14090:	cmp	r3, #0
   14094:	bne	13f90 <__assert_fail@plt+0x2a4c>
   14098:	ldrb	r3, [fp, #-5]
   1409c:	eor	r3, r3, #1
   140a0:	uxtb	r3, r3
   140a4:	cmp	r3, #0
   140a8:	beq	140c8 <__assert_fail@plt+0x2b84>
   140ac:	ldr	r0, [pc, #80]	; 14104 <__assert_fail@plt+0x2bc0>
   140b0:	bl	113e8 <gettext@plt>
   140b4:	mov	r3, r0
   140b8:	mov	r2, r3
   140bc:	mov	r1, #0
   140c0:	mov	r0, #1
   140c4:	bl	11370 <error@plt>
   140c8:	mvn	r3, #-2147483648	; 0x80000000
   140cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   140d0:	mov	r1, #0
   140d4:	mov	r0, #0
   140d8:	bl	11430 <snprintf@plt>
   140dc:	str	r0, [fp, #-16]
   140e0:	ldr	r3, [fp, #-16]
   140e4:	cmp	r3, #0
   140e8:	bge	140f0 <__assert_fail@plt+0x2bac>
   140ec:	bl	118b4 <__assert_fail@plt+0x370>
   140f0:	ldr	r3, [fp, #-16]
   140f4:	mov	r0, r3
   140f8:	sub	sp, fp, #4
   140fc:	pop	{fp, pc}
   14100:	andeq	r5, r3, r4, lsr #10
   14104:	andeq	r5, r3, r4, asr r5
   14108:	push	{r4, fp, lr}
   1410c:	add	fp, sp, #8
   14110:	sub	sp, sp, #196	; 0xc4
   14114:	str	r0, [fp, #-176]	; 0xffffff50
   14118:	str	r1, [fp, #-180]	; 0xffffff4c
   1411c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   14120:	ldr	r3, [r3]
   14124:	mov	r0, r3
   14128:	bl	15074 <__assert_fail@plt+0x3b30>
   1412c:	ldr	r1, [pc, #1440]	; 146d4 <__assert_fail@plt+0x3190>
   14130:	mov	r0, #6
   14134:	bl	114a8 <setlocale@plt>
   14138:	ldr	r1, [pc, #1432]	; 146d8 <__assert_fail@plt+0x3194>
   1413c:	ldr	r0, [pc, #1432]	; 146dc <__assert_fail@plt+0x3198>
   14140:	bl	11508 <bindtextdomain@plt>
   14144:	ldr	r0, [pc, #1424]	; 146dc <__assert_fail@plt+0x3198>
   14148:	bl	112ec <textdomain@plt>
   1414c:	ldr	r0, [pc, #1420]	; 146e0 <__assert_fail@plt+0x319c>
   14150:	bl	34e8c <__assert_fail@plt+0x23948>
   14154:	ldr	r2, [pc, #1416]	; 146e4 <__assert_fail@plt+0x31a0>
   14158:	ldr	r3, [fp, #-180]	; 0xffffff4c
   1415c:	str	r3, [r2]
   14160:	ldr	r3, [pc, #1408]	; 146e8 <__assert_fail@plt+0x31a4>
   14164:	mov	r2, #0
   14168:	str	r2, [r3]
   1416c:	ldr	r3, [pc, #1400]	; 146ec <__assert_fail@plt+0x31a8>
   14170:	mov	r2, #0
   14174:	str	r2, [r3]
   14178:	ldr	r3, [pc, #1392]	; 146f0 <__assert_fail@plt+0x31ac>
   1417c:	mov	r2, #0
   14180:	strb	r2, [r3]
   14184:	ldr	r3, [pc, #1384]	; 146f4 <__assert_fail@plt+0x31b0>
   14188:	mov	r2, #1
   1418c:	strb	r2, [r3]
   14190:	ldr	r3, [pc, #1376]	; 146f8 <__assert_fail@plt+0x31b4>
   14194:	mov	r2, #0
   14198:	strb	r2, [r3]
   1419c:	ldr	r3, [pc, #1368]	; 146fc <__assert_fail@plt+0x31b8>
   141a0:	ldr	r2, [pc, #1368]	; 14700 <__assert_fail@plt+0x31bc>
   141a4:	str	r2, [r3]
   141a8:	b	14338 <__assert_fail@plt+0x2df4>
   141ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   141b0:	cmp	r3, #107	; 0x6b
   141b4:	beq	14250 <__assert_fail@plt+0x2d0c>
   141b8:	cmp	r3, #107	; 0x6b
   141bc:	bgt	141f0 <__assert_fail@plt+0x2cac>
   141c0:	cmn	r3, #2
   141c4:	beq	142e8 <__assert_fail@plt+0x2da4>
   141c8:	cmn	r3, #2
   141cc:	bgt	141dc <__assert_fail@plt+0x2c98>
   141d0:	cmn	r3, #3
   141d4:	beq	142f0 <__assert_fail@plt+0x2dac>
   141d8:	b	14330 <__assert_fail@plt+0x2dec>
   141dc:	cmp	r3, #98	; 0x62
   141e0:	beq	1423c <__assert_fail@plt+0x2cf8>
   141e4:	cmp	r3, #102	; 0x66
   141e8:	beq	14228 <__assert_fail@plt+0x2ce4>
   141ec:	b	14330 <__assert_fail@plt+0x2dec>
   141f0:	cmp	r3, #115	; 0x73
   141f4:	beq	142b8 <__assert_fail@plt+0x2d74>
   141f8:	cmp	r3, #115	; 0x73
   141fc:	bgt	14214 <__assert_fail@plt+0x2cd0>
   14200:	cmp	r3, #110	; 0x6e
   14204:	beq	14260 <__assert_fail@plt+0x2d1c>
   14208:	cmp	r3, #113	; 0x71
   1420c:	beq	142b8 <__assert_fail@plt+0x2d74>
   14210:	b	14330 <__assert_fail@plt+0x2dec>
   14214:	cmp	r3, #122	; 0x7a
   14218:	beq	142c8 <__assert_fail@plt+0x2d84>
   1421c:	cmp	r3, #256	; 0x100
   14220:	beq	142d8 <__assert_fail@plt+0x2d94>
   14224:	b	14330 <__assert_fail@plt+0x2dec>
   14228:	ldr	r3, [pc, #1236]	; 14704 <__assert_fail@plt+0x31c0>
   1422c:	ldr	r3, [r3]
   14230:	ldr	r2, [pc, #1220]	; 146fc <__assert_fail@plt+0x31b8>
   14234:	str	r3, [r2]
   14238:	b	14338 <__assert_fail@plt+0x2df4>
   1423c:	ldr	r3, [pc, #1216]	; 14704 <__assert_fail@plt+0x31c0>
   14240:	ldr	r3, [r3]
   14244:	ldr	r2, [pc, #1212]	; 14708 <__assert_fail@plt+0x31c4>
   14248:	str	r3, [r2]
   1424c:	b	14338 <__assert_fail@plt+0x2df4>
   14250:	ldr	r3, [pc, #1180]	; 146f4 <__assert_fail@plt+0x31b0>
   14254:	mov	r2, #0
   14258:	strb	r2, [r3]
   1425c:	b	14338 <__assert_fail@plt+0x2df4>
   14260:	ldr	r3, [pc, #1180]	; 14704 <__assert_fail@plt+0x31c0>
   14264:	ldr	r4, [r3]
   14268:	ldr	r0, [pc, #1180]	; 1470c <__assert_fail@plt+0x31c8>
   1426c:	bl	113e8 <gettext@plt>
   14270:	mov	r2, r0
   14274:	mov	r3, #0
   14278:	str	r3, [sp, #16]
   1427c:	str	r2, [sp, #12]
   14280:	ldr	r3, [pc, #1100]	; 146d4 <__assert_fail@plt+0x3190>
   14284:	str	r3, [sp, #8]
   14288:	mvn	r2, #-2147483648	; 0x80000000
   1428c:	mov	r3, #0
   14290:	strd	r2, [sp]
   14294:	mov	r2, #0
   14298:	mov	r3, #0
   1429c:	mov	r0, r4
   142a0:	bl	32018 <__assert_fail@plt+0x20ad4>
   142a4:	mov	r2, r0
   142a8:	mov	r3, r1
   142ac:	ldr	r3, [pc, #1116]	; 14710 <__assert_fail@plt+0x31cc>
   142b0:	str	r2, [r3]
   142b4:	b	14338 <__assert_fail@plt+0x2df4>
   142b8:	ldr	r3, [pc, #1072]	; 146f0 <__assert_fail@plt+0x31ac>
   142bc:	mov	r2, #1
   142c0:	strb	r2, [r3]
   142c4:	b	14338 <__assert_fail@plt+0x2df4>
   142c8:	ldr	r3, [pc, #1092]	; 14714 <__assert_fail@plt+0x31d0>
   142cc:	mov	r2, #1
   142d0:	strb	r2, [r3]
   142d4:	b	14338 <__assert_fail@plt+0x2df4>
   142d8:	ldr	r3, [pc, #1048]	; 146f8 <__assert_fail@plt+0x31b4>
   142dc:	mov	r2, #1
   142e0:	strb	r2, [r3]
   142e4:	b	14338 <__assert_fail@plt+0x2df4>
   142e8:	mov	r0, #0
   142ec:	bl	14758 <__assert_fail@plt+0x3214>
   142f0:	ldr	r3, [pc, #1056]	; 14718 <__assert_fail@plt+0x31d4>
   142f4:	ldr	r0, [r3]
   142f8:	ldr	r3, [pc, #1052]	; 1471c <__assert_fail@plt+0x31d8>
   142fc:	ldr	r2, [r3]
   14300:	mov	r3, #0
   14304:	str	r3, [sp, #8]
   14308:	ldr	r3, [pc, #1040]	; 14720 <__assert_fail@plt+0x31dc>
   1430c:	str	r3, [sp, #4]
   14310:	ldr	r3, [pc, #1036]	; 14724 <__assert_fail@plt+0x31e0>
   14314:	str	r3, [sp]
   14318:	mov	r3, r2
   1431c:	ldr	r2, [pc, #1028]	; 14728 <__assert_fail@plt+0x31e4>
   14320:	ldr	r1, [pc, #1028]	; 1472c <__assert_fail@plt+0x31e8>
   14324:	bl	31208 <__assert_fail@plt+0x1fcc4>
   14328:	mov	r0, #0
   1432c:	bl	113dc <exit@plt>
   14330:	mov	r0, #1
   14334:	bl	14758 <__assert_fail@plt+0x3214>
   14338:	mov	r3, #0
   1433c:	str	r3, [sp]
   14340:	ldr	r3, [pc, #1000]	; 14730 <__assert_fail@plt+0x31ec>
   14344:	ldr	r2, [pc, #1000]	; 14734 <__assert_fail@plt+0x31f0>
   14348:	ldr	r1, [fp, #-180]	; 0xffffff4c
   1434c:	ldr	r0, [fp, #-176]	; 0xffffff50
   14350:	bl	113c4 <getopt_long@plt>
   14354:	str	r0, [fp, #-20]	; 0xffffffec
   14358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1435c:	cmn	r3, #1
   14360:	bne	141ac <__assert_fail@plt+0x2c68>
   14364:	ldr	r3, [pc, #972]	; 14738 <__assert_fail@plt+0x31f4>
   14368:	ldr	r3, [r3]
   1436c:	ldr	r2, [fp, #-176]	; 0xffffff50
   14370:	sub	r3, r2, r3
   14374:	cmp	r3, #1
   14378:	bgt	143f8 <__assert_fail@plt+0x2eb4>
   1437c:	ldr	r3, [pc, #948]	; 14738 <__assert_fail@plt+0x31f4>
   14380:	ldr	r3, [r3]
   14384:	ldr	r2, [fp, #-176]	; 0xffffff50
   14388:	cmp	r2, r3
   1438c:	bgt	143b0 <__assert_fail@plt+0x2e6c>
   14390:	ldr	r0, [pc, #932]	; 1473c <__assert_fail@plt+0x31f8>
   14394:	bl	113e8 <gettext@plt>
   14398:	mov	r3, r0
   1439c:	mov	r2, r3
   143a0:	mov	r1, #0
   143a4:	mov	r0, #0
   143a8:	bl	11370 <error@plt>
   143ac:	b	143f0 <__assert_fail@plt+0x2eac>
   143b0:	ldr	r0, [pc, #904]	; 14740 <__assert_fail@plt+0x31fc>
   143b4:	bl	113e8 <gettext@plt>
   143b8:	mov	r4, r0
   143bc:	ldr	r3, [fp, #-176]	; 0xffffff50
   143c0:	sub	r3, r3, #-1073741823	; 0xc0000001
   143c4:	lsl	r3, r3, #2
   143c8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   143cc:	add	r3, r2, r3
   143d0:	ldr	r3, [r3]
   143d4:	mov	r0, r3
   143d8:	bl	177a4 <__assert_fail@plt+0x6260>
   143dc:	mov	r3, r0
   143e0:	mov	r2, r4
   143e4:	mov	r1, #0
   143e8:	mov	r0, #0
   143ec:	bl	11370 <error@plt>
   143f0:	mov	r0, #1
   143f4:	bl	14758 <__assert_fail@plt+0x3214>
   143f8:	ldr	r3, [pc, #764]	; 146fc <__assert_fail@plt+0x31b8>
   143fc:	ldr	r3, [r3]
   14400:	mov	r0, r3
   14404:	bl	113f4 <strlen@plt>
   14408:	mov	r3, r0
   1440c:	str	r3, [fp, #-24]	; 0xffffffe8
   14410:	ldr	r3, [pc, #752]	; 14708 <__assert_fail@plt+0x31c4>
   14414:	ldr	r3, [r3]
   14418:	cmp	r3, #0
   1441c:	beq	14438 <__assert_fail@plt+0x2ef4>
   14420:	ldr	r3, [pc, #736]	; 14708 <__assert_fail@plt+0x31c4>
   14424:	ldr	r3, [r3]
   14428:	mov	r0, r3
   1442c:	bl	13f6c <__assert_fail@plt+0x2a28>
   14430:	mov	r3, r0
   14434:	b	14458 <__assert_fail@plt+0x2f14>
   14438:	ldr	r3, [pc, #720]	; 14710 <__assert_fail@plt+0x31cc>
   1443c:	ldr	r3, [r3]
   14440:	cmp	r3, #10
   14444:	bls	14454 <__assert_fail@plt+0x2f10>
   14448:	ldr	r3, [pc, #704]	; 14710 <__assert_fail@plt+0x31cc>
   1444c:	ldr	r3, [r3]
   14450:	b	14458 <__assert_fail@plt+0x2f14>
   14454:	mov	r3, #11
   14458:	str	r3, [fp, #-28]	; 0xffffffe4
   1445c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14460:	add	r3, r3, #1
   14464:	cmp	r3, #0
   14468:	bge	14490 <__assert_fail@plt+0x2f4c>
   1446c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14470:	add	r3, r3, #1
   14474:	rsb	r2, r3, #-2147483648	; 0x80000000
   14478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1447c:	cmp	r2, r3
   14480:	movgt	r3, #1
   14484:	movle	r3, #0
   14488:	uxtb	r3, r3
   1448c:	b	144e0 <__assert_fail@plt+0x2f9c>
   14490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14494:	cmp	r3, #0
   14498:	bge	144c0 <__assert_fail@plt+0x2f7c>
   1449c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144a0:	add	r2, r3, #1
   144a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144a8:	rsb	r3, r3, #-2147483648	; 0x80000000
   144ac:	cmp	r2, r3
   144b0:	movlt	r3, #1
   144b4:	movge	r3, #0
   144b8:	uxtb	r3, r3
   144bc:	b	144e0 <__assert_fail@plt+0x2f9c>
   144c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144c4:	mvn	r3, #-2147483647	; 0x80000001
   144c8:	sub	r3, r3, r2
   144cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144d0:	cmp	r3, r2
   144d4:	movlt	r3, #1
   144d8:	movge	r3, #0
   144dc:	uxtb	r3, r3
   144e0:	cmp	r3, #0
   144e4:	beq	14504 <__assert_fail@plt+0x2fc0>
   144e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   144ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144f0:	add	r3, r2, r3
   144f4:	add	r3, r3, #1
   144f8:	str	r3, [fp, #-32]	; 0xffffffe0
   144fc:	mov	r3, #1
   14500:	b	1451c <__assert_fail@plt+0x2fd8>
   14504:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1450c:	add	r3, r2, r3
   14510:	add	r3, r3, #1
   14514:	str	r3, [fp, #-32]	; 0xffffffe0
   14518:	mov	r3, #0
   1451c:	cmp	r3, #0
   14520:	beq	14528 <__assert_fail@plt+0x2fe4>
   14524:	bl	118b4 <__assert_fail@plt+0x370>
   14528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1452c:	mov	r0, r3
   14530:	bl	31388 <__assert_fail@plt+0x1fe44>
   14534:	mov	r3, r0
   14538:	mov	r2, r3
   1453c:	ldr	r3, [pc, #512]	; 14744 <__assert_fail@plt+0x3200>
   14540:	str	r2, [r3]
   14544:	ldr	r3, [pc, #492]	; 14738 <__assert_fail@plt+0x31f4>
   14548:	ldr	r3, [r3]
   1454c:	add	r2, r3, #1
   14550:	ldr	r1, [pc, #480]	; 14738 <__assert_fail@plt+0x31f4>
   14554:	str	r2, [r1]
   14558:	lsl	r3, r3, #2
   1455c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   14560:	add	r3, r2, r3
   14564:	ldr	r3, [r3]
   14568:	mov	r0, r3
   1456c:	bl	1253c <__assert_fail@plt+0xff8>
   14570:	ldr	r3, [pc, #448]	; 14738 <__assert_fail@plt+0x31f4>
   14574:	ldr	r3, [r3]
   14578:	ldr	r2, [fp, #-180]	; 0xffffff4c
   1457c:	mov	r1, r3
   14580:	ldr	r0, [fp, #-176]	; 0xffffff50
   14584:	bl	139f0 <__assert_fail@plt+0x24ac>
   14588:	ldr	r0, [pc, #440]	; 14748 <__assert_fail@plt+0x3204>
   1458c:	bl	114b4 <sigemptyset@plt>
   14590:	mov	r3, #0
   14594:	str	r3, [fp, #-16]
   14598:	b	145e8 <__assert_fail@plt+0x30a4>
   1459c:	ldr	r2, [pc, #424]	; 1474c <__assert_fail@plt+0x3208>
   145a0:	ldr	r3, [fp, #-16]
   145a4:	ldr	r3, [r2, r3, lsl #2]
   145a8:	sub	r2, fp, #172	; 0xac
   145ac:	mov	r1, #0
   145b0:	mov	r0, r3
   145b4:	bl	11310 <sigaction@plt>
   145b8:	ldr	r3, [fp, #-172]	; 0xffffff54
   145bc:	cmp	r3, #1
   145c0:	beq	145dc <__assert_fail@plt+0x3098>
   145c4:	ldr	r2, [pc, #384]	; 1474c <__assert_fail@plt+0x3208>
   145c8:	ldr	r3, [fp, #-16]
   145cc:	ldr	r3, [r2, r3, lsl #2]
   145d0:	mov	r1, r3
   145d4:	ldr	r0, [pc, #364]	; 14748 <__assert_fail@plt+0x3204>
   145d8:	bl	11394 <sigaddset@plt>
   145dc:	ldr	r3, [fp, #-16]
   145e0:	add	r3, r3, #1
   145e4:	str	r3, [fp, #-16]
   145e8:	ldr	r3, [fp, #-16]
   145ec:	cmp	r3, #10
   145f0:	ble	1459c <__assert_fail@plt+0x3058>
   145f4:	ldr	r3, [pc, #340]	; 14750 <__assert_fail@plt+0x320c>
   145f8:	str	r3, [fp, #-172]	; 0xffffff54
   145fc:	ldr	r2, [pc, #324]	; 14748 <__assert_fail@plt+0x3204>
   14600:	sub	r3, fp, #168	; 0xa8
   14604:	mov	r1, r2
   14608:	mov	r2, #128	; 0x80
   1460c:	mov	r0, r3
   14610:	bl	11250 <memcpy@plt>
   14614:	mov	r3, #0
   14618:	str	r3, [fp, #-40]	; 0xffffffd8
   1461c:	mov	r3, #0
   14620:	str	r3, [fp, #-16]
   14624:	b	14674 <__assert_fail@plt+0x3130>
   14628:	ldr	r2, [pc, #284]	; 1474c <__assert_fail@plt+0x3208>
   1462c:	ldr	r3, [fp, #-16]
   14630:	ldr	r3, [r2, r3, lsl #2]
   14634:	mov	r1, r3
   14638:	ldr	r0, [pc, #264]	; 14748 <__assert_fail@plt+0x3204>
   1463c:	bl	112e0 <sigismember@plt>
   14640:	mov	r3, r0
   14644:	cmp	r3, #0
   14648:	beq	14668 <__assert_fail@plt+0x3124>
   1464c:	ldr	r2, [pc, #248]	; 1474c <__assert_fail@plt+0x3208>
   14650:	ldr	r3, [fp, #-16]
   14654:	ldr	r3, [r2, r3, lsl #2]
   14658:	sub	r1, fp, #172	; 0xac
   1465c:	mov	r2, #0
   14660:	mov	r0, r3
   14664:	bl	11310 <sigaction@plt>
   14668:	ldr	r3, [fp, #-16]
   1466c:	add	r3, r3, #1
   14670:	str	r3, [fp, #-16]
   14674:	ldr	r3, [fp, #-16]
   14678:	cmp	r3, #10
   1467c:	ble	14628 <__assert_fail@plt+0x30e4>
   14680:	bl	12da8 <__assert_fail@plt+0x1864>
   14684:	mov	r0, #0
   14688:	bl	11538 <close@plt>
   1468c:	mov	r3, r0
   14690:	cmp	r3, #0
   14694:	beq	146c4 <__assert_fail@plt+0x3180>
   14698:	bl	11418 <__errno_location@plt>
   1469c:	mov	r3, r0
   146a0:	ldr	r4, [r3]
   146a4:	ldr	r0, [pc, #168]	; 14754 <__assert_fail@plt+0x3210>
   146a8:	bl	113e8 <gettext@plt>
   146ac:	mov	r3, r0
   146b0:	mov	r2, r3
   146b4:	mov	r1, r4
   146b8:	mov	r0, #0
   146bc:	bl	11370 <error@plt>
   146c0:	bl	118a0 <__assert_fail@plt+0x35c>
   146c4:	mov	r3, #0
   146c8:	mov	r0, r3
   146cc:	sub	sp, fp, #8
   146d0:	pop	{r4, fp, pc}
   146d4:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   146d8:	andeq	r5, r3, r4, lsl #11
   146dc:	andeq	r5, r3, ip
   146e0:	andeq	r4, r1, r0, ror r9
   146e4:	andeq	r7, r4, r8, lsl r2
   146e8:	andeq	r7, r4, r0, lsr #4
   146ec:	andeq	r7, r4, r4, lsr #4
   146f0:	andeq	r7, r4, ip, lsl r2
   146f4:	andeq	r7, r4, sp, lsl r2
   146f8:	andeq	r7, r4, pc, lsl r2
   146fc:	strdeq	r7, [r4], -r8
   14700:	muleq	r3, ip, r5
   14704:	andeq	r7, r4, r8, asr #3
   14708:	strdeq	r7, [r4], -ip
   1470c:	andeq	r5, r3, r0, lsr #11
   14710:	andeq	r7, r4, r0, ror #2
   14714:	andeq	r7, r4, lr, lsl r2
   14718:	andeq	r7, r4, r4, asr #3
   1471c:	andeq	r7, r4, r4, ror #2
   14720:			; <UNDEFINED> instruction: 0x000355b8
   14724:	andeq	r5, r3, r8, asr #11
   14728:	andeq	r4, r3, ip, lsr pc
   1472c:			; <UNDEFINED> instruction: 0x000355b0
   14730:	andeq	r5, r3, ip, lsl r1
   14734:	ldrdeq	r5, [r3], -r4
   14738:			; <UNDEFINED> instruction: 0x000471b8
   1473c:	andeq	r5, r3, r0, ror #11
   14740:	strdeq	r5, [r3], -r0
   14744:	strdeq	r7, [r4], -r4
   14748:	andeq	r7, r4, r8, lsr #4
   1474c:	strdeq	r5, [r3], -ip
   14750:	andeq	r1, r1, r4, ror #17
   14754:	andeq	r5, r3, r4, ror #3
   14758:	push	{r4, fp, lr}
   1475c:	add	fp, sp, #8
   14760:	sub	sp, sp, #12
   14764:	str	r0, [fp, #-16]
   14768:	ldr	r3, [fp, #-16]
   1476c:	cmp	r3, #0
   14770:	beq	147a0 <__assert_fail@plt+0x325c>
   14774:	ldr	r3, [pc, #344]	; 148d4 <__assert_fail@plt+0x3390>
   14778:	ldr	r4, [r3]
   1477c:	ldr	r0, [pc, #340]	; 148d8 <__assert_fail@plt+0x3394>
   14780:	bl	113e8 <gettext@plt>
   14784:	mov	r1, r0
   14788:	ldr	r3, [pc, #332]	; 148dc <__assert_fail@plt+0x3398>
   1478c:	ldr	r3, [r3]
   14790:	mov	r2, r3
   14794:	mov	r0, r4
   14798:	bl	1140c <fprintf@plt>
   1479c:	b	148cc <__assert_fail@plt+0x3388>
   147a0:	ldr	r0, [pc, #312]	; 148e0 <__assert_fail@plt+0x339c>
   147a4:	bl	113e8 <gettext@plt>
   147a8:	mov	r2, r0
   147ac:	ldr	r3, [pc, #296]	; 148dc <__assert_fail@plt+0x3398>
   147b0:	ldr	r3, [r3]
   147b4:	mov	r1, r3
   147b8:	mov	r0, r2
   147bc:	bl	111e4 <printf@plt>
   147c0:	ldr	r0, [pc, #284]	; 148e4 <__assert_fail@plt+0x33a0>
   147c4:	bl	113e8 <gettext@plt>
   147c8:	mov	r2, r0
   147cc:	ldr	r3, [pc, #276]	; 148e8 <__assert_fail@plt+0x33a4>
   147d0:	ldr	r3, [r3]
   147d4:	mov	r1, r3
   147d8:	mov	r0, r2
   147dc:	bl	1119c <fputs_unlocked@plt>
   147e0:	ldr	r0, [pc, #260]	; 148ec <__assert_fail@plt+0x33a8>
   147e4:	bl	113e8 <gettext@plt>
   147e8:	mov	r2, r0
   147ec:	ldr	r3, [pc, #244]	; 148e8 <__assert_fail@plt+0x33a4>
   147f0:	ldr	r3, [r3]
   147f4:	mov	r1, r3
   147f8:	mov	r0, r2
   147fc:	bl	1119c <fputs_unlocked@plt>
   14800:	bl	11678 <__assert_fail@plt+0x134>
   14804:	ldr	r0, [pc, #228]	; 148f0 <__assert_fail@plt+0x33ac>
   14808:	bl	113e8 <gettext@plt>
   1480c:	mov	r2, r0
   14810:	ldr	r3, [pc, #208]	; 148e8 <__assert_fail@plt+0x33a4>
   14814:	ldr	r3, [r3]
   14818:	mov	r1, r3
   1481c:	mov	r0, r2
   14820:	bl	1119c <fputs_unlocked@plt>
   14824:	ldr	r0, [pc, #200]	; 148f4 <__assert_fail@plt+0x33b0>
   14828:	bl	113e8 <gettext@plt>
   1482c:	mov	r2, r0
   14830:	ldr	r3, [pc, #176]	; 148e8 <__assert_fail@plt+0x33a4>
   14834:	ldr	r3, [r3]
   14838:	mov	r1, r3
   1483c:	mov	r0, r2
   14840:	bl	1119c <fputs_unlocked@plt>
   14844:	ldr	r0, [pc, #172]	; 148f8 <__assert_fail@plt+0x33b4>
   14848:	bl	113e8 <gettext@plt>
   1484c:	mov	r2, r0
   14850:	ldr	r3, [pc, #144]	; 148e8 <__assert_fail@plt+0x33a4>
   14854:	ldr	r3, [r3]
   14858:	mov	r1, r3
   1485c:	mov	r0, r2
   14860:	bl	1119c <fputs_unlocked@plt>
   14864:	ldr	r0, [pc, #144]	; 148fc <__assert_fail@plt+0x33b8>
   14868:	bl	113e8 <gettext@plt>
   1486c:	mov	r2, r0
   14870:	ldr	r3, [pc, #112]	; 148e8 <__assert_fail@plt+0x33a4>
   14874:	ldr	r3, [r3]
   14878:	mov	r1, r3
   1487c:	mov	r0, r2
   14880:	bl	1119c <fputs_unlocked@plt>
   14884:	ldr	r0, [pc, #116]	; 14900 <__assert_fail@plt+0x33bc>
   14888:	bl	113e8 <gettext@plt>
   1488c:	mov	r2, r0
   14890:	ldr	r3, [pc, #80]	; 148e8 <__assert_fail@plt+0x33a4>
   14894:	ldr	r3, [r3]
   14898:	mov	r1, r3
   1489c:	mov	r0, r2
   148a0:	bl	1119c <fputs_unlocked@plt>
   148a4:	ldr	r0, [pc, #88]	; 14904 <__assert_fail@plt+0x33c0>
   148a8:	bl	113e8 <gettext@plt>
   148ac:	mov	r2, r0
   148b0:	ldr	r3, [pc, #48]	; 148e8 <__assert_fail@plt+0x33a4>
   148b4:	ldr	r3, [r3]
   148b8:	mov	r1, r3
   148bc:	mov	r0, r2
   148c0:	bl	1119c <fputs_unlocked@plt>
   148c4:	ldr	r0, [pc, #60]	; 14908 <__assert_fail@plt+0x33c4>
   148c8:	bl	116b0 <__assert_fail@plt+0x16c>
   148cc:	ldr	r0, [fp, #-16]
   148d0:	bl	113dc <exit@plt>
   148d4:	andeq	r7, r4, r0, asr #3
   148d8:	andeq	r5, r3, ip, lsl #12
   148dc:	andeq	r7, r4, r0, asr #5
   148e0:	andeq	r5, r3, r4, lsr r6
   148e4:	andeq	r5, r3, ip, asr r6
   148e8:	andeq	r7, r4, r4, asr #3
   148ec:	andeq	r5, r3, r4, ror #13
   148f0:	andeq	r5, r3, r8, lsl #14
   148f4:	andeq	r5, r3, r4, asr #15
   148f8:	andeq	r5, r3, r8, lsl #16
   148fc:	ldrdeq	r5, [r3], -r0
   14900:	andeq	r5, r3, r0, lsl #18
   14904:	andeq	r5, r3, r8, lsr r9
   14908:			; <UNDEFINED> instruction: 0x000355b0
   1490c:	push	{fp}		; (str fp, [sp, #-4]!)
   14910:	add	fp, sp, #0
   14914:	sub	sp, sp, #12
   14918:	str	r0, [fp, #-8]
   1491c:	ldr	r2, [pc, #20]	; 14938 <__assert_fail@plt+0x33f4>
   14920:	ldr	r3, [fp, #-8]
   14924:	str	r3, [r2]
   14928:	nop			; (mov r0, r0)
   1492c:	add	sp, fp, #0
   14930:	pop	{fp}		; (ldr fp, [sp], #4)
   14934:	bx	lr
   14938:			; <UNDEFINED> instruction: 0x000472b8
   1493c:	push	{fp}		; (str fp, [sp, #-4]!)
   14940:	add	fp, sp, #0
   14944:	sub	sp, sp, #12
   14948:	mov	r3, r0
   1494c:	strb	r3, [fp, #-5]
   14950:	ldr	r2, [pc, #20]	; 1496c <__assert_fail@plt+0x3428>
   14954:	ldrb	r3, [fp, #-5]
   14958:	strb	r3, [r2]
   1495c:	nop			; (mov r0, r0)
   14960:	add	sp, fp, #0
   14964:	pop	{fp}		; (ldr fp, [sp], #4)
   14968:	bx	lr
   1496c:			; <UNDEFINED> instruction: 0x000472bc
   14970:	push	{r4, fp, lr}
   14974:	add	fp, sp, #8
   14978:	sub	sp, sp, #20
   1497c:	ldr	r3, [pc, #256]	; 14a84 <__assert_fail@plt+0x3540>
   14980:	ldr	r3, [r3]
   14984:	mov	r0, r3
   14988:	bl	33454 <__assert_fail@plt+0x21f10>
   1498c:	mov	r3, r0
   14990:	cmp	r3, #0
   14994:	beq	14a4c <__assert_fail@plt+0x3508>
   14998:	ldr	r3, [pc, #232]	; 14a88 <__assert_fail@plt+0x3544>
   1499c:	ldrb	r3, [r3]
   149a0:	eor	r3, r3, #1
   149a4:	uxtb	r3, r3
   149a8:	cmp	r3, #0
   149ac:	bne	149c4 <__assert_fail@plt+0x3480>
   149b0:	bl	11418 <__errno_location@plt>
   149b4:	mov	r3, r0
   149b8:	ldr	r3, [r3]
   149bc:	cmp	r3, #32
   149c0:	beq	14a4c <__assert_fail@plt+0x3508>
   149c4:	ldr	r0, [pc, #192]	; 14a8c <__assert_fail@plt+0x3548>
   149c8:	bl	113e8 <gettext@plt>
   149cc:	str	r0, [fp, #-16]
   149d0:	ldr	r3, [pc, #184]	; 14a90 <__assert_fail@plt+0x354c>
   149d4:	ldr	r3, [r3]
   149d8:	cmp	r3, #0
   149dc:	beq	14a20 <__assert_fail@plt+0x34dc>
   149e0:	bl	11418 <__errno_location@plt>
   149e4:	mov	r3, r0
   149e8:	ldr	r4, [r3]
   149ec:	ldr	r3, [pc, #156]	; 14a90 <__assert_fail@plt+0x354c>
   149f0:	ldr	r3, [r3]
   149f4:	mov	r0, r3
   149f8:	bl	174d4 <__assert_fail@plt+0x5f90>
   149fc:	mov	r2, r0
   14a00:	ldr	r3, [fp, #-16]
   14a04:	str	r3, [sp]
   14a08:	mov	r3, r2
   14a0c:	ldr	r2, [pc, #128]	; 14a94 <__assert_fail@plt+0x3550>
   14a10:	mov	r1, r4
   14a14:	mov	r0, #0
   14a18:	bl	11370 <error@plt>
   14a1c:	b	14a3c <__assert_fail@plt+0x34f8>
   14a20:	bl	11418 <__errno_location@plt>
   14a24:	mov	r3, r0
   14a28:	ldr	r1, [r3]
   14a2c:	ldr	r3, [fp, #-16]
   14a30:	ldr	r2, [pc, #96]	; 14a98 <__assert_fail@plt+0x3554>
   14a34:	mov	r0, #0
   14a38:	bl	11370 <error@plt>
   14a3c:	ldr	r3, [pc, #88]	; 14a9c <__assert_fail@plt+0x3558>
   14a40:	ldr	r3, [r3]
   14a44:	mov	r0, r3
   14a48:	bl	11244 <_exit@plt>
   14a4c:	ldr	r3, [pc, #76]	; 14aa0 <__assert_fail@plt+0x355c>
   14a50:	ldr	r3, [r3]
   14a54:	mov	r0, r3
   14a58:	bl	33454 <__assert_fail@plt+0x21f10>
   14a5c:	mov	r3, r0
   14a60:	cmp	r3, #0
   14a64:	beq	14a78 <__assert_fail@plt+0x3534>
   14a68:	ldr	r3, [pc, #44]	; 14a9c <__assert_fail@plt+0x3558>
   14a6c:	ldr	r3, [r3]
   14a70:	mov	r0, r3
   14a74:	bl	11244 <_exit@plt>
   14a78:	nop			; (mov r0, r0)
   14a7c:	sub	sp, fp, #8
   14a80:	pop	{r4, fp, pc}
   14a84:	andeq	r7, r4, r4, asr #3
   14a88:			; <UNDEFINED> instruction: 0x000472bc
   14a8c:	andeq	r5, r3, r8, lsr fp
   14a90:			; <UNDEFINED> instruction: 0x000472b8
   14a94:	andeq	r5, r3, r4, asr #22
   14a98:	andeq	r5, r3, ip, asr #22
   14a9c:	andeq	r7, r4, r8, ror #2
   14aa0:	andeq	r7, r4, r0, asr #3
   14aa4:	push	{fp, lr}
   14aa8:	add	fp, sp, #4
   14aac:	sub	sp, sp, #32
   14ab0:	str	r0, [fp, #-24]	; 0xffffffe8
   14ab4:	mov	r3, #0
   14ab8:	str	r3, [fp, #-8]
   14abc:	mov	r3, #0
   14ac0:	str	r3, [fp, #-12]
   14ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ac8:	bl	11460 <fileno@plt>
   14acc:	str	r0, [fp, #-16]
   14ad0:	ldr	r3, [fp, #-16]
   14ad4:	cmp	r3, #0
   14ad8:	bge	14aec <__assert_fail@plt+0x35a8>
   14adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ae0:	bl	11484 <fclose@plt>
   14ae4:	mov	r3, r0
   14ae8:	b	14b90 <__assert_fail@plt+0x364c>
   14aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14af0:	bl	113ac <__freading@plt>
   14af4:	mov	r3, r0
   14af8:	cmp	r3, #0
   14afc:	beq	14b38 <__assert_fail@plt+0x35f4>
   14b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b04:	bl	11460 <fileno@plt>
   14b08:	mov	r1, r0
   14b0c:	mov	r3, #1
   14b10:	str	r3, [sp]
   14b14:	mov	r2, #0
   14b18:	mov	r3, #0
   14b1c:	mov	r0, r1
   14b20:	bl	11328 <lseek64@plt>
   14b24:	mvn	r2, #0
   14b28:	mvn	r3, #0
   14b2c:	cmp	r1, r3
   14b30:	cmpeq	r0, r2
   14b34:	beq	14b5c <__assert_fail@plt+0x3618>
   14b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b3c:	bl	14c80 <__assert_fail@plt+0x373c>
   14b40:	mov	r3, r0
   14b44:	cmp	r3, #0
   14b48:	beq	14b5c <__assert_fail@plt+0x3618>
   14b4c:	bl	11418 <__errno_location@plt>
   14b50:	mov	r3, r0
   14b54:	ldr	r3, [r3]
   14b58:	str	r3, [fp, #-8]
   14b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b60:	bl	11484 <fclose@plt>
   14b64:	str	r0, [fp, #-12]
   14b68:	ldr	r3, [fp, #-8]
   14b6c:	cmp	r3, #0
   14b70:	beq	14b8c <__assert_fail@plt+0x3648>
   14b74:	bl	11418 <__errno_location@plt>
   14b78:	mov	r2, r0
   14b7c:	ldr	r3, [fp, #-8]
   14b80:	str	r3, [r2]
   14b84:	mvn	r3, #0
   14b88:	str	r3, [fp, #-12]
   14b8c:	ldr	r3, [fp, #-12]
   14b90:	mov	r0, r3
   14b94:	sub	sp, fp, #4
   14b98:	pop	{fp, pc}
   14b9c:	push	{fp, lr}
   14ba0:	add	fp, sp, #4
   14ba4:	sub	sp, sp, #32
   14ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   14bac:	str	r1, [fp, #-28]	; 0xffffffe4
   14bb0:	str	r2, [fp, #-32]	; 0xffffffe0
   14bb4:	str	r3, [fp, #-36]	; 0xffffffdc
   14bb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14bbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14bc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14bc4:	bl	1137c <open64@plt>
   14bc8:	str	r0, [fp, #-8]
   14bcc:	ldr	r2, [fp, #-8]
   14bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bd4:	cmp	r2, r3
   14bd8:	beq	14be8 <__assert_fail@plt+0x36a4>
   14bdc:	ldr	r3, [fp, #-8]
   14be0:	cmp	r3, #0
   14be4:	bge	14bf0 <__assert_fail@plt+0x36ac>
   14be8:	ldr	r3, [fp, #-8]
   14bec:	b	14c2c <__assert_fail@plt+0x36e8>
   14bf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bf4:	ldr	r0, [fp, #-8]
   14bf8:	bl	112c8 <dup2@plt>
   14bfc:	str	r0, [fp, #-12]
   14c00:	bl	11418 <__errno_location@plt>
   14c04:	mov	r3, r0
   14c08:	ldr	r3, [r3]
   14c0c:	str	r3, [fp, #-16]
   14c10:	ldr	r0, [fp, #-8]
   14c14:	bl	11538 <close@plt>
   14c18:	bl	11418 <__errno_location@plt>
   14c1c:	mov	r2, r0
   14c20:	ldr	r3, [fp, #-16]
   14c24:	str	r3, [r2]
   14c28:	ldr	r3, [fp, #-12]
   14c2c:	mov	r0, r3
   14c30:	sub	sp, fp, #4
   14c34:	pop	{fp, pc}
   14c38:	push	{fp, lr}
   14c3c:	add	fp, sp, #4
   14c40:	sub	sp, sp, #16
   14c44:	str	r0, [fp, #-8]
   14c48:	ldr	r3, [fp, #-8]
   14c4c:	ldr	r3, [r3]
   14c50:	and	r3, r3, #256	; 0x100
   14c54:	cmp	r3, #0
   14c58:	beq	14c74 <__assert_fail@plt+0x3730>
   14c5c:	mov	r3, #1
   14c60:	str	r3, [sp]
   14c64:	mov	r2, #0
   14c68:	mov	r3, #0
   14c6c:	ldr	r0, [fp, #-8]
   14c70:	bl	14e78 <__assert_fail@plt+0x3934>
   14c74:	nop			; (mov r0, r0)
   14c78:	sub	sp, fp, #4
   14c7c:	pop	{fp, pc}
   14c80:	push	{fp, lr}
   14c84:	add	fp, sp, #4
   14c88:	sub	sp, sp, #8
   14c8c:	str	r0, [fp, #-8]
   14c90:	ldr	r3, [fp, #-8]
   14c94:	cmp	r3, #0
   14c98:	beq	14cb0 <__assert_fail@plt+0x376c>
   14c9c:	ldr	r0, [fp, #-8]
   14ca0:	bl	113ac <__freading@plt>
   14ca4:	mov	r3, r0
   14ca8:	cmp	r3, #0
   14cac:	bne	14cc0 <__assert_fail@plt+0x377c>
   14cb0:	ldr	r0, [fp, #-8]
   14cb4:	bl	11208 <fflush@plt>
   14cb8:	mov	r3, r0
   14cbc:	b	14cd4 <__assert_fail@plt+0x3790>
   14cc0:	ldr	r0, [fp, #-8]
   14cc4:	bl	14c38 <__assert_fail@plt+0x36f4>
   14cc8:	ldr	r0, [fp, #-8]
   14ccc:	bl	11208 <fflush@plt>
   14cd0:	mov	r3, r0
   14cd4:	mov	r0, r3
   14cd8:	sub	sp, fp, #4
   14cdc:	pop	{fp, pc}
   14ce0:	push	{fp, lr}
   14ce4:	add	fp, sp, #4
   14ce8:	sub	sp, sp, #32
   14cec:	str	r0, [fp, #-32]	; 0xffffffe0
   14cf0:	str	r1, [fp, #-36]	; 0xffffffdc
   14cf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14cfc:	bl	114fc <fopen64@plt>
   14d00:	str	r0, [fp, #-8]
   14d04:	ldr	r3, [fp, #-8]
   14d08:	cmp	r3, #0
   14d0c:	beq	14ddc <__assert_fail@plt+0x3898>
   14d10:	ldr	r0, [fp, #-8]
   14d14:	bl	11460 <fileno@plt>
   14d18:	str	r0, [fp, #-12]
   14d1c:	ldr	r3, [fp, #-12]
   14d20:	cmp	r3, #0
   14d24:	blt	14ddc <__assert_fail@plt+0x3898>
   14d28:	ldr	r3, [fp, #-12]
   14d2c:	cmp	r3, #2
   14d30:	bgt	14ddc <__assert_fail@plt+0x3898>
   14d34:	ldr	r0, [fp, #-12]
   14d38:	bl	30b38 <__assert_fail@plt+0x1f5f4>
   14d3c:	str	r0, [fp, #-16]
   14d40:	ldr	r3, [fp, #-16]
   14d44:	cmp	r3, #0
   14d48:	bge	14d7c <__assert_fail@plt+0x3838>
   14d4c:	bl	11418 <__errno_location@plt>
   14d50:	mov	r3, r0
   14d54:	ldr	r3, [r3]
   14d58:	str	r3, [fp, #-20]	; 0xffffffec
   14d5c:	ldr	r0, [fp, #-8]
   14d60:	bl	14aa4 <__assert_fail@plt+0x3560>
   14d64:	bl	11418 <__errno_location@plt>
   14d68:	mov	r2, r0
   14d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d70:	str	r3, [r2]
   14d74:	mov	r3, #0
   14d78:	b	14de0 <__assert_fail@plt+0x389c>
   14d7c:	ldr	r0, [fp, #-8]
   14d80:	bl	14aa4 <__assert_fail@plt+0x3560>
   14d84:	mov	r3, r0
   14d88:	cmp	r3, #0
   14d8c:	bne	14dac <__assert_fail@plt+0x3868>
   14d90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d94:	ldr	r0, [fp, #-16]
   14d98:	bl	11184 <fdopen@plt>
   14d9c:	str	r0, [fp, #-8]
   14da0:	ldr	r3, [fp, #-8]
   14da4:	cmp	r3, #0
   14da8:	bne	14ddc <__assert_fail@plt+0x3898>
   14dac:	bl	11418 <__errno_location@plt>
   14db0:	mov	r3, r0
   14db4:	ldr	r3, [r3]
   14db8:	str	r3, [fp, #-24]	; 0xffffffe8
   14dbc:	ldr	r0, [fp, #-16]
   14dc0:	bl	11538 <close@plt>
   14dc4:	bl	11418 <__errno_location@plt>
   14dc8:	mov	r2, r0
   14dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14dd0:	str	r3, [r2]
   14dd4:	mov	r3, #0
   14dd8:	b	14de0 <__assert_fail@plt+0x389c>
   14ddc:	ldr	r3, [fp, #-8]
   14de0:	mov	r0, r3
   14de4:	sub	sp, fp, #4
   14de8:	pop	{fp, pc}
   14dec:	push	{r4, fp, lr}
   14df0:	add	fp, sp, #8
   14df4:	sub	sp, sp, #20
   14df8:	str	r0, [fp, #-24]	; 0xffffffe8
   14dfc:	bl	11418 <__errno_location@plt>
   14e00:	mov	r3, r0
   14e04:	ldr	r3, [r3]
   14e08:	str	r3, [fp, #-20]	; 0xffffffec
   14e0c:	bl	11418 <__errno_location@plt>
   14e10:	mov	r3, r0
   14e14:	ldr	r3, [r3]
   14e18:	str	r3, [fp, #-16]
   14e1c:	bl	11418 <__errno_location@plt>
   14e20:	mov	r2, r0
   14e24:	mov	r3, #0
   14e28:	str	r3, [r2]
   14e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e30:	bl	1122c <free@plt>
   14e34:	bl	11418 <__errno_location@plt>
   14e38:	mov	r4, r0
   14e3c:	bl	11418 <__errno_location@plt>
   14e40:	mov	r3, r0
   14e44:	ldr	r3, [r3]
   14e48:	cmp	r3, #0
   14e4c:	moveq	r3, #1
   14e50:	movne	r3, #0
   14e54:	uxtb	r3, r3
   14e58:	lsl	r3, r3, #2
   14e5c:	sub	r2, fp, #12
   14e60:	add	r3, r2, r3
   14e64:	ldr	r3, [r3, #-8]
   14e68:	str	r3, [r4]
   14e6c:	nop			; (mov r0, r0)
   14e70:	sub	sp, fp, #8
   14e74:	pop	{r4, fp, pc}
   14e78:	push	{fp, lr}
   14e7c:	add	fp, sp, #4
   14e80:	sub	sp, sp, #32
   14e84:	str	r0, [fp, #-16]
   14e88:	strd	r2, [fp, #-28]	; 0xffffffe4
   14e8c:	ldr	r3, [fp, #-16]
   14e90:	ldr	r2, [r3, #8]
   14e94:	ldr	r3, [fp, #-16]
   14e98:	ldr	r3, [r3, #4]
   14e9c:	cmp	r2, r3
   14ea0:	bne	14f38 <__assert_fail@plt+0x39f4>
   14ea4:	ldr	r3, [fp, #-16]
   14ea8:	ldr	r2, [r3, #20]
   14eac:	ldr	r3, [fp, #-16]
   14eb0:	ldr	r3, [r3, #16]
   14eb4:	cmp	r2, r3
   14eb8:	bne	14f38 <__assert_fail@plt+0x39f4>
   14ebc:	ldr	r3, [fp, #-16]
   14ec0:	ldr	r3, [r3, #36]	; 0x24
   14ec4:	cmp	r3, #0
   14ec8:	bne	14f38 <__assert_fail@plt+0x39f4>
   14ecc:	ldr	r0, [fp, #-16]
   14ed0:	bl	11460 <fileno@plt>
   14ed4:	mov	r1, r0
   14ed8:	ldr	r3, [fp, #4]
   14edc:	str	r3, [sp]
   14ee0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14ee4:	mov	r0, r1
   14ee8:	bl	11328 <lseek64@plt>
   14eec:	strd	r0, [fp, #-12]
   14ef0:	ldrd	r2, [fp, #-12]
   14ef4:	mvn	r0, #0
   14ef8:	mvn	r1, #0
   14efc:	cmp	r3, r1
   14f00:	cmpeq	r2, r0
   14f04:	bne	14f10 <__assert_fail@plt+0x39cc>
   14f08:	mvn	r3, #0
   14f0c:	b	14f50 <__assert_fail@plt+0x3a0c>
   14f10:	ldr	r3, [fp, #-16]
   14f14:	ldr	r3, [r3]
   14f18:	bic	r2, r3, #16
   14f1c:	ldr	r3, [fp, #-16]
   14f20:	str	r2, [r3]
   14f24:	ldr	r1, [fp, #-16]
   14f28:	ldrd	r2, [fp, #-12]
   14f2c:	strd	r2, [r1, #80]	; 0x50
   14f30:	mov	r3, #0
   14f34:	b	14f50 <__assert_fail@plt+0x3a0c>
   14f38:	ldr	r3, [fp, #4]
   14f3c:	str	r3, [sp]
   14f40:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   14f44:	ldr	r0, [fp, #-16]
   14f48:	bl	11490 <fseeko64@plt>
   14f4c:	mov	r3, r0
   14f50:	mov	r0, r3
   14f54:	sub	sp, fp, #4
   14f58:	pop	{fp, pc}
   14f5c:	push	{fp, lr}
   14f60:	add	fp, sp, #4
   14f64:	sub	sp, sp, #24
   14f68:	strd	r0, [fp, #-20]	; 0xffffffec
   14f6c:	str	r2, [fp, #-24]	; 0xffffffe8
   14f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f74:	add	r3, r3, #20
   14f78:	str	r3, [fp, #-8]
   14f7c:	ldr	r3, [fp, #-8]
   14f80:	mov	r2, #0
   14f84:	strb	r2, [r3]
   14f88:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14f8c:	cmp	r2, #0
   14f90:	sbcs	r3, r3, #0
   14f94:	bge	1500c <__assert_fail@plt+0x3ac8>
   14f98:	ldr	r3, [fp, #-8]
   14f9c:	sub	r3, r3, #1
   14fa0:	str	r3, [fp, #-8]
   14fa4:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14fa8:	mov	r2, #10
   14fac:	mov	r3, #0
   14fb0:	bl	34be0 <__assert_fail@plt+0x2369c>
   14fb4:	uxtb	r3, r2
   14fb8:	rsb	r3, r3, #48	; 0x30
   14fbc:	uxtb	r2, r3
   14fc0:	ldr	r3, [fp, #-8]
   14fc4:	strb	r2, [r3]
   14fc8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14fcc:	mov	r2, #10
   14fd0:	mov	r3, #0
   14fd4:	bl	34be0 <__assert_fail@plt+0x2369c>
   14fd8:	mov	r2, r0
   14fdc:	mov	r3, r1
   14fe0:	strd	r2, [fp, #-20]	; 0xffffffec
   14fe4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14fe8:	orrs	r3, r2, r3
   14fec:	bne	14f98 <__assert_fail@plt+0x3a54>
   14ff0:	ldr	r3, [fp, #-8]
   14ff4:	sub	r3, r3, #1
   14ff8:	str	r3, [fp, #-8]
   14ffc:	ldr	r3, [fp, #-8]
   15000:	mov	r2, #45	; 0x2d
   15004:	strb	r2, [r3]
   15008:	b	15064 <__assert_fail@plt+0x3b20>
   1500c:	ldr	r3, [fp, #-8]
   15010:	sub	r3, r3, #1
   15014:	str	r3, [fp, #-8]
   15018:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1501c:	mov	r2, #10
   15020:	mov	r3, #0
   15024:	bl	34be0 <__assert_fail@plt+0x2369c>
   15028:	uxtb	r3, r2
   1502c:	add	r3, r3, #48	; 0x30
   15030:	uxtb	r2, r3
   15034:	ldr	r3, [fp, #-8]
   15038:	strb	r2, [r3]
   1503c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   15040:	mov	r2, #10
   15044:	mov	r3, #0
   15048:	bl	34be0 <__assert_fail@plt+0x2369c>
   1504c:	mov	r2, r0
   15050:	mov	r3, r1
   15054:	strd	r2, [fp, #-20]	; 0xffffffec
   15058:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1505c:	orrs	r3, r2, r3
   15060:	bne	1500c <__assert_fail@plt+0x3ac8>
   15064:	ldr	r3, [fp, #-8]
   15068:	mov	r0, r3
   1506c:	sub	sp, fp, #4
   15070:	pop	{fp, pc}
   15074:	push	{fp, lr}
   15078:	add	fp, sp, #4
   1507c:	sub	sp, sp, #16
   15080:	str	r0, [fp, #-16]
   15084:	ldr	r3, [fp, #-16]
   15088:	cmp	r3, #0
   1508c:	bne	150ac <__assert_fail@plt+0x3b68>
   15090:	ldr	r3, [pc, #220]	; 15174 <__assert_fail@plt+0x3c30>
   15094:	ldr	r3, [r3]
   15098:	mov	r2, #55	; 0x37
   1509c:	mov	r1, #1
   150a0:	ldr	r0, [pc, #208]	; 15178 <__assert_fail@plt+0x3c34>
   150a4:	bl	1131c <fwrite@plt>
   150a8:	bl	1152c <abort@plt>
   150ac:	mov	r1, #47	; 0x2f
   150b0:	ldr	r0, [fp, #-16]
   150b4:	bl	114cc <strrchr@plt>
   150b8:	str	r0, [fp, #-8]
   150bc:	ldr	r3, [fp, #-8]
   150c0:	cmp	r3, #0
   150c4:	beq	150d4 <__assert_fail@plt+0x3b90>
   150c8:	ldr	r3, [fp, #-8]
   150cc:	add	r3, r3, #1
   150d0:	b	150d8 <__assert_fail@plt+0x3b94>
   150d4:	ldr	r3, [fp, #-16]
   150d8:	str	r3, [fp, #-12]
   150dc:	ldr	r2, [fp, #-12]
   150e0:	ldr	r3, [fp, #-16]
   150e4:	sub	r3, r2, r3
   150e8:	cmp	r3, #6
   150ec:	ble	15150 <__assert_fail@plt+0x3c0c>
   150f0:	ldr	r3, [fp, #-12]
   150f4:	sub	r3, r3, #7
   150f8:	mov	r2, #7
   150fc:	ldr	r1, [pc, #120]	; 1517c <__assert_fail@plt+0x3c38>
   15100:	mov	r0, r3
   15104:	bl	11520 <strncmp@plt>
   15108:	mov	r3, r0
   1510c:	cmp	r3, #0
   15110:	bne	15150 <__assert_fail@plt+0x3c0c>
   15114:	ldr	r3, [fp, #-12]
   15118:	str	r3, [fp, #-16]
   1511c:	mov	r2, #3
   15120:	ldr	r1, [pc, #88]	; 15180 <__assert_fail@plt+0x3c3c>
   15124:	ldr	r0, [fp, #-12]
   15128:	bl	11520 <strncmp@plt>
   1512c:	mov	r3, r0
   15130:	cmp	r3, #0
   15134:	bne	15150 <__assert_fail@plt+0x3c0c>
   15138:	ldr	r3, [fp, #-12]
   1513c:	add	r3, r3, #3
   15140:	str	r3, [fp, #-16]
   15144:	ldr	r2, [pc, #56]	; 15184 <__assert_fail@plt+0x3c40>
   15148:	ldr	r3, [fp, #-16]
   1514c:	str	r3, [r2]
   15150:	ldr	r2, [pc, #48]	; 15188 <__assert_fail@plt+0x3c44>
   15154:	ldr	r3, [fp, #-16]
   15158:	str	r3, [r2]
   1515c:	ldr	r2, [pc, #40]	; 1518c <__assert_fail@plt+0x3c48>
   15160:	ldr	r3, [fp, #-16]
   15164:	str	r3, [r2]
   15168:	nop			; (mov r0, r0)
   1516c:	sub	sp, fp, #4
   15170:	pop	{fp, pc}
   15174:	andeq	r7, r4, r0, asr #3
   15178:	andeq	r5, r3, r0, asr fp
   1517c:	andeq	r5, r3, r8, lsl #23
   15180:	muleq	r3, r0, fp
   15184:			; <UNDEFINED> instruction: 0x000471b0
   15188:	andeq	r7, r4, r0, asr #5
   1518c:			; <UNDEFINED> instruction: 0x000471b4
   15190:	push	{fp, lr}
   15194:	add	fp, sp, #4
   15198:	sub	sp, sp, #16
   1519c:	str	r0, [fp, #-16]
   151a0:	bl	11418 <__errno_location@plt>
   151a4:	mov	r3, r0
   151a8:	ldr	r3, [r3]
   151ac:	str	r3, [fp, #-8]
   151b0:	ldr	r3, [fp, #-16]
   151b4:	cmp	r3, #0
   151b8:	beq	151c4 <__assert_fail@plt+0x3c80>
   151bc:	ldr	r3, [fp, #-16]
   151c0:	b	151c8 <__assert_fail@plt+0x3c84>
   151c4:	ldr	r3, [pc, #48]	; 151fc <__assert_fail@plt+0x3cb8>
   151c8:	mov	r1, #48	; 0x30
   151cc:	mov	r0, r3
   151d0:	bl	31d4c <__assert_fail@plt+0x20808>
   151d4:	mov	r3, r0
   151d8:	str	r3, [fp, #-12]
   151dc:	bl	11418 <__errno_location@plt>
   151e0:	mov	r2, r0
   151e4:	ldr	r3, [fp, #-8]
   151e8:	str	r3, [r2]
   151ec:	ldr	r3, [fp, #-12]
   151f0:	mov	r0, r3
   151f4:	sub	sp, fp, #4
   151f8:	pop	{fp, pc}
   151fc:	andeq	r7, r4, r4, asr #5
   15200:	push	{fp}		; (str fp, [sp, #-4]!)
   15204:	add	fp, sp, #0
   15208:	sub	sp, sp, #12
   1520c:	str	r0, [fp, #-8]
   15210:	ldr	r3, [fp, #-8]
   15214:	cmp	r3, #0
   15218:	beq	15224 <__assert_fail@plt+0x3ce0>
   1521c:	ldr	r3, [fp, #-8]
   15220:	b	15228 <__assert_fail@plt+0x3ce4>
   15224:	ldr	r3, [pc, #16]	; 1523c <__assert_fail@plt+0x3cf8>
   15228:	ldr	r3, [r3]
   1522c:	mov	r0, r3
   15230:	add	sp, fp, #0
   15234:	pop	{fp}		; (ldr fp, [sp], #4)
   15238:	bx	lr
   1523c:	andeq	r7, r4, r4, asr #5
   15240:	push	{fp}		; (str fp, [sp, #-4]!)
   15244:	add	fp, sp, #0
   15248:	sub	sp, sp, #12
   1524c:	str	r0, [fp, #-8]
   15250:	str	r1, [fp, #-12]
   15254:	ldr	r3, [fp, #-8]
   15258:	cmp	r3, #0
   1525c:	beq	15268 <__assert_fail@plt+0x3d24>
   15260:	ldr	r3, [fp, #-8]
   15264:	b	1526c <__assert_fail@plt+0x3d28>
   15268:	ldr	r3, [pc, #20]	; 15284 <__assert_fail@plt+0x3d40>
   1526c:	ldr	r2, [fp, #-12]
   15270:	str	r2, [r3]
   15274:	nop			; (mov r0, r0)
   15278:	add	sp, fp, #0
   1527c:	pop	{fp}		; (ldr fp, [sp], #4)
   15280:	bx	lr
   15284:	andeq	r7, r4, r4, asr #5
   15288:	push	{fp}		; (str fp, [sp, #-4]!)
   1528c:	add	fp, sp, #0
   15290:	sub	sp, sp, #36	; 0x24
   15294:	str	r0, [fp, #-24]	; 0xffffffe8
   15298:	mov	r3, r1
   1529c:	str	r2, [fp, #-32]	; 0xffffffe0
   152a0:	strb	r3, [fp, #-25]	; 0xffffffe7
   152a4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   152a8:	strb	r3, [fp, #-5]
   152ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152b0:	cmp	r3, #0
   152b4:	beq	152c0 <__assert_fail@plt+0x3d7c>
   152b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152bc:	b	152c4 <__assert_fail@plt+0x3d80>
   152c0:	ldr	r3, [pc, #124]	; 15344 <__assert_fail@plt+0x3e00>
   152c4:	add	r2, r3, #8
   152c8:	ldrb	r3, [fp, #-5]
   152cc:	lsr	r3, r3, #5
   152d0:	uxtb	r3, r3
   152d4:	lsl	r3, r3, #2
   152d8:	add	r3, r2, r3
   152dc:	str	r3, [fp, #-12]
   152e0:	ldrb	r3, [fp, #-5]
   152e4:	and	r3, r3, #31
   152e8:	str	r3, [fp, #-16]
   152ec:	ldr	r3, [fp, #-12]
   152f0:	ldr	r2, [r3]
   152f4:	ldr	r3, [fp, #-16]
   152f8:	lsr	r3, r2, r3
   152fc:	and	r3, r3, #1
   15300:	str	r3, [fp, #-20]	; 0xffffffec
   15304:	ldr	r3, [fp, #-12]
   15308:	ldr	r3, [r3]
   1530c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15310:	and	r1, r2, #1
   15314:	ldr	r2, [fp, #-20]	; 0xffffffec
   15318:	eor	r1, r1, r2
   1531c:	ldr	r2, [fp, #-16]
   15320:	lsl	r2, r1, r2
   15324:	eor	r2, r2, r3
   15328:	ldr	r3, [fp, #-12]
   1532c:	str	r2, [r3]
   15330:	ldr	r3, [fp, #-20]	; 0xffffffec
   15334:	mov	r0, r3
   15338:	add	sp, fp, #0
   1533c:	pop	{fp}		; (ldr fp, [sp], #4)
   15340:	bx	lr
   15344:	andeq	r7, r4, r4, asr #5
   15348:	push	{fp}		; (str fp, [sp, #-4]!)
   1534c:	add	fp, sp, #0
   15350:	sub	sp, sp, #20
   15354:	str	r0, [fp, #-16]
   15358:	str	r1, [fp, #-20]	; 0xffffffec
   1535c:	ldr	r3, [fp, #-16]
   15360:	cmp	r3, #0
   15364:	bne	15370 <__assert_fail@plt+0x3e2c>
   15368:	ldr	r3, [pc, #44]	; 1539c <__assert_fail@plt+0x3e58>
   1536c:	str	r3, [fp, #-16]
   15370:	ldr	r3, [fp, #-16]
   15374:	ldr	r3, [r3, #4]
   15378:	str	r3, [fp, #-8]
   1537c:	ldr	r3, [fp, #-16]
   15380:	ldr	r2, [fp, #-20]	; 0xffffffec
   15384:	str	r2, [r3, #4]
   15388:	ldr	r3, [fp, #-8]
   1538c:	mov	r0, r3
   15390:	add	sp, fp, #0
   15394:	pop	{fp}		; (ldr fp, [sp], #4)
   15398:	bx	lr
   1539c:	andeq	r7, r4, r4, asr #5
   153a0:	push	{fp, lr}
   153a4:	add	fp, sp, #4
   153a8:	sub	sp, sp, #16
   153ac:	str	r0, [fp, #-8]
   153b0:	str	r1, [fp, #-12]
   153b4:	str	r2, [fp, #-16]
   153b8:	ldr	r3, [fp, #-8]
   153bc:	cmp	r3, #0
   153c0:	bne	153cc <__assert_fail@plt+0x3e88>
   153c4:	ldr	r3, [pc, #76]	; 15418 <__assert_fail@plt+0x3ed4>
   153c8:	str	r3, [fp, #-8]
   153cc:	ldr	r3, [fp, #-8]
   153d0:	mov	r2, #10
   153d4:	str	r2, [r3]
   153d8:	ldr	r3, [fp, #-12]
   153dc:	cmp	r3, #0
   153e0:	beq	153f0 <__assert_fail@plt+0x3eac>
   153e4:	ldr	r3, [fp, #-16]
   153e8:	cmp	r3, #0
   153ec:	bne	153f4 <__assert_fail@plt+0x3eb0>
   153f0:	bl	1152c <abort@plt>
   153f4:	ldr	r3, [fp, #-8]
   153f8:	ldr	r2, [fp, #-12]
   153fc:	str	r2, [r3, #40]	; 0x28
   15400:	ldr	r3, [fp, #-8]
   15404:	ldr	r2, [fp, #-16]
   15408:	str	r2, [r3, #44]	; 0x2c
   1540c:	nop			; (mov r0, r0)
   15410:	sub	sp, fp, #4
   15414:	pop	{fp, pc}
   15418:	andeq	r7, r4, r4, asr #5
   1541c:	push	{fp, lr}
   15420:	add	fp, sp, #4
   15424:	sub	sp, sp, #56	; 0x38
   15428:	str	r0, [fp, #-56]	; 0xffffffc8
   1542c:	str	r1, [fp, #-60]	; 0xffffffc4
   15430:	sub	r3, fp, #52	; 0x34
   15434:	mov	r2, #48	; 0x30
   15438:	mov	r1, #0
   1543c:	mov	r0, r3
   15440:	bl	11448 <memset@plt>
   15444:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15448:	cmp	r3, #10
   1544c:	bne	15454 <__assert_fail@plt+0x3f10>
   15450:	bl	1152c <abort@plt>
   15454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15458:	str	r3, [fp, #-52]	; 0xffffffcc
   1545c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15460:	mov	lr, r3
   15464:	sub	ip, fp, #52	; 0x34
   15468:	ldm	ip!, {r0, r1, r2, r3}
   1546c:	stmia	lr!, {r0, r1, r2, r3}
   15470:	ldm	ip!, {r0, r1, r2, r3}
   15474:	stmia	lr!, {r0, r1, r2, r3}
   15478:	ldm	ip, {r0, r1, r2, r3}
   1547c:	stm	lr, {r0, r1, r2, r3}
   15480:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15484:	sub	sp, fp, #4
   15488:	pop	{fp, pc}
   1548c:	push	{fp, lr}
   15490:	add	fp, sp, #4
   15494:	sub	sp, sp, #16
   15498:	str	r0, [fp, #-16]
   1549c:	str	r1, [fp, #-20]	; 0xffffffec
   154a0:	ldr	r0, [fp, #-16]
   154a4:	bl	113e8 <gettext@plt>
   154a8:	str	r0, [fp, #-8]
   154ac:	ldr	r2, [fp, #-8]
   154b0:	ldr	r3, [fp, #-16]
   154b4:	cmp	r2, r3
   154b8:	beq	154c4 <__assert_fail@plt+0x3f80>
   154bc:	ldr	r3, [fp, #-8]
   154c0:	b	15554 <__assert_fail@plt+0x4010>
   154c4:	bl	33ee4 <__assert_fail@plt+0x229a0>
   154c8:	str	r0, [fp, #-12]
   154cc:	ldr	r1, [pc, #140]	; 15560 <__assert_fail@plt+0x401c>
   154d0:	ldr	r0, [fp, #-12]
   154d4:	bl	333bc <__assert_fail@plt+0x21e78>
   154d8:	mov	r3, r0
   154dc:	cmp	r3, #0
   154e0:	bne	15504 <__assert_fail@plt+0x3fc0>
   154e4:	ldr	r3, [fp, #-16]
   154e8:	ldrb	r3, [r3]
   154ec:	cmp	r3, #96	; 0x60
   154f0:	bne	154fc <__assert_fail@plt+0x3fb8>
   154f4:	ldr	r3, [pc, #104]	; 15564 <__assert_fail@plt+0x4020>
   154f8:	b	15554 <__assert_fail@plt+0x4010>
   154fc:	ldr	r3, [pc, #100]	; 15568 <__assert_fail@plt+0x4024>
   15500:	b	15554 <__assert_fail@plt+0x4010>
   15504:	ldr	r1, [pc, #96]	; 1556c <__assert_fail@plt+0x4028>
   15508:	ldr	r0, [fp, #-12]
   1550c:	bl	333bc <__assert_fail@plt+0x21e78>
   15510:	mov	r3, r0
   15514:	cmp	r3, #0
   15518:	bne	1553c <__assert_fail@plt+0x3ff8>
   1551c:	ldr	r3, [fp, #-16]
   15520:	ldrb	r3, [r3]
   15524:	cmp	r3, #96	; 0x60
   15528:	bne	15534 <__assert_fail@plt+0x3ff0>
   1552c:	ldr	r3, [pc, #60]	; 15570 <__assert_fail@plt+0x402c>
   15530:	b	15554 <__assert_fail@plt+0x4010>
   15534:	ldr	r3, [pc, #56]	; 15574 <__assert_fail@plt+0x4030>
   15538:	b	15554 <__assert_fail@plt+0x4010>
   1553c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15540:	cmp	r3, #9
   15544:	bne	15550 <__assert_fail@plt+0x400c>
   15548:	ldr	r3, [pc, #40]	; 15578 <__assert_fail@plt+0x4034>
   1554c:	b	15554 <__assert_fail@plt+0x4010>
   15550:	ldr	r3, [pc, #36]	; 1557c <__assert_fail@plt+0x4038>
   15554:	mov	r0, r3
   15558:	sub	sp, fp, #4
   1555c:	pop	{fp, pc}
   15560:	andeq	r5, r3, r0, asr ip
   15564:	andeq	r5, r3, r8, asr ip
   15568:	andeq	r5, r3, ip, asr ip
   1556c:	andeq	r5, r3, r0, ror #24
   15570:	andeq	r5, r3, r8, ror #24
   15574:	andeq	r5, r3, ip, ror #24
   15578:	andeq	r5, r3, r0, ror ip
   1557c:	andeq	r5, r3, r4, ror ip
   15580:	push	{r4, fp, lr}
   15584:	add	fp, sp, #8
   15588:	sub	sp, sp, #116	; 0x74
   1558c:	str	r0, [fp, #-88]	; 0xffffffa8
   15590:	str	r1, [fp, #-92]	; 0xffffffa4
   15594:	str	r2, [fp, #-96]	; 0xffffffa0
   15598:	str	r3, [fp, #-100]	; 0xffffff9c
   1559c:	mov	r3, #0
   155a0:	str	r3, [fp, #-20]	; 0xffffffec
   155a4:	mov	r3, #0
   155a8:	str	r3, [fp, #-24]	; 0xffffffe8
   155ac:	mov	r3, #0
   155b0:	str	r3, [fp, #-28]	; 0xffffffe4
   155b4:	mov	r3, #0
   155b8:	str	r3, [fp, #-32]	; 0xffffffe0
   155bc:	mov	r3, #0
   155c0:	strb	r3, [fp, #-33]	; 0xffffffdf
   155c4:	bl	11334 <__ctype_get_mb_cur_max@plt>
   155c8:	mov	r3, r0
   155cc:	cmp	r3, #1
   155d0:	moveq	r3, #1
   155d4:	movne	r3, #0
   155d8:	strb	r3, [fp, #-57]	; 0xffffffc7
   155dc:	ldr	r3, [fp, #8]
   155e0:	and	r3, r3, #2
   155e4:	cmp	r3, #0
   155e8:	movne	r3, #1
   155ec:	moveq	r3, #0
   155f0:	strb	r3, [fp, #-34]	; 0xffffffde
   155f4:	mov	r3, #0
   155f8:	strb	r3, [fp, #-35]	; 0xffffffdd
   155fc:	mov	r3, #0
   15600:	strb	r3, [fp, #-36]	; 0xffffffdc
   15604:	mov	r3, #1
   15608:	strb	r3, [fp, #-37]	; 0xffffffdb
   1560c:	ldr	r3, [fp, #4]
   15610:	cmp	r3, #10
   15614:	ldrls	pc, [pc, r3, lsl #2]
   15618:	b	15820 <__assert_fail@plt+0x42dc>
   1561c:	andeq	r5, r1, r4, lsl r8
   15620:	muleq	r1, r0, r7
   15624:			; <UNDEFINED> instruction: 0x000157b4
   15628:	andeq	r5, r1, r8, lsl #15
   1562c:	muleq	r1, r8, r7
   15630:	andeq	r5, r1, r8, asr r6
   15634:	andeq	r5, r1, r8, asr #12
   15638:			; <UNDEFINED> instruction: 0x000156b8
   1563c:	andeq	r5, r1, ip, asr #13
   15640:	andeq	r5, r1, ip, asr #13
   15644:	andeq	r5, r1, ip, asr #13
   15648:	mov	r3, #5
   1564c:	str	r3, [fp, #4]
   15650:	mov	r3, #1
   15654:	strb	r3, [fp, #-34]	; 0xffffffde
   15658:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1565c:	eor	r3, r3, #1
   15660:	uxtb	r3, r3
   15664:	cmp	r3, #0
   15668:	beq	1569c <__assert_fail@plt+0x4158>
   1566c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15670:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15674:	cmp	r2, r3
   15678:	bcs	15690 <__assert_fail@plt+0x414c>
   1567c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15680:	ldr	r3, [fp, #-20]	; 0xffffffec
   15684:	add	r3, r2, r3
   15688:	mov	r2, #34	; 0x22
   1568c:	strb	r2, [r3]
   15690:	ldr	r3, [fp, #-20]	; 0xffffffec
   15694:	add	r3, r3, #1
   15698:	str	r3, [fp, #-20]	; 0xffffffec
   1569c:	mov	r3, #1
   156a0:	strb	r3, [fp, #-33]	; 0xffffffdf
   156a4:	ldr	r3, [pc, #3872]	; 165cc <__assert_fail@plt+0x5088>
   156a8:	str	r3, [fp, #-28]	; 0xffffffe4
   156ac:	mov	r3, #1
   156b0:	str	r3, [fp, #-32]	; 0xffffffe0
   156b4:	b	15824 <__assert_fail@plt+0x42e0>
   156b8:	mov	r3, #1
   156bc:	strb	r3, [fp, #-33]	; 0xffffffdf
   156c0:	mov	r3, #0
   156c4:	strb	r3, [fp, #-34]	; 0xffffffde
   156c8:	b	15824 <__assert_fail@plt+0x42e0>
   156cc:	ldr	r3, [fp, #4]
   156d0:	cmp	r3, #10
   156d4:	beq	156f8 <__assert_fail@plt+0x41b4>
   156d8:	ldr	r1, [fp, #4]
   156dc:	ldr	r0, [pc, #3820]	; 165d0 <__assert_fail@plt+0x508c>
   156e0:	bl	1548c <__assert_fail@plt+0x3f48>
   156e4:	str	r0, [fp, #16]
   156e8:	ldr	r1, [fp, #4]
   156ec:	ldr	r0, [pc, #3808]	; 165d4 <__assert_fail@plt+0x5090>
   156f0:	bl	1548c <__assert_fail@plt+0x3f48>
   156f4:	str	r0, [fp, #20]
   156f8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   156fc:	eor	r3, r3, #1
   15700:	uxtb	r3, r3
   15704:	cmp	r3, #0
   15708:	beq	15768 <__assert_fail@plt+0x4224>
   1570c:	ldr	r3, [fp, #16]
   15710:	str	r3, [fp, #-28]	; 0xffffffe4
   15714:	b	15758 <__assert_fail@plt+0x4214>
   15718:	ldr	r2, [fp, #-20]	; 0xffffffec
   1571c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15720:	cmp	r2, r3
   15724:	bcs	15740 <__assert_fail@plt+0x41fc>
   15728:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1572c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15730:	add	r3, r2, r3
   15734:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15738:	ldrb	r2, [r2]
   1573c:	strb	r2, [r3]
   15740:	ldr	r3, [fp, #-20]	; 0xffffffec
   15744:	add	r3, r3, #1
   15748:	str	r3, [fp, #-20]	; 0xffffffec
   1574c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15750:	add	r3, r3, #1
   15754:	str	r3, [fp, #-28]	; 0xffffffe4
   15758:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1575c:	ldrb	r3, [r3]
   15760:	cmp	r3, #0
   15764:	bne	15718 <__assert_fail@plt+0x41d4>
   15768:	mov	r3, #1
   1576c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15770:	ldr	r3, [fp, #20]
   15774:	str	r3, [fp, #-28]	; 0xffffffe4
   15778:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1577c:	bl	113f4 <strlen@plt>
   15780:	str	r0, [fp, #-32]	; 0xffffffe0
   15784:	b	15824 <__assert_fail@plt+0x42e0>
   15788:	mov	r3, #1
   1578c:	strb	r3, [fp, #-33]	; 0xffffffdf
   15790:	mov	r3, #1
   15794:	strb	r3, [fp, #-34]	; 0xffffffde
   15798:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1579c:	eor	r3, r3, #1
   157a0:	uxtb	r3, r3
   157a4:	cmp	r3, #0
   157a8:	beq	157b4 <__assert_fail@plt+0x4270>
   157ac:	mov	r3, #1
   157b0:	strb	r3, [fp, #-33]	; 0xffffffdf
   157b4:	mov	r3, #2
   157b8:	str	r3, [fp, #4]
   157bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   157c0:	eor	r3, r3, #1
   157c4:	uxtb	r3, r3
   157c8:	cmp	r3, #0
   157cc:	beq	15800 <__assert_fail@plt+0x42bc>
   157d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   157d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   157d8:	cmp	r2, r3
   157dc:	bcs	157f4 <__assert_fail@plt+0x42b0>
   157e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   157e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   157e8:	add	r3, r2, r3
   157ec:	mov	r2, #39	; 0x27
   157f0:	strb	r2, [r3]
   157f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   157f8:	add	r3, r3, #1
   157fc:	str	r3, [fp, #-20]	; 0xffffffec
   15800:	ldr	r3, [pc, #3532]	; 165d4 <__assert_fail@plt+0x5090>
   15804:	str	r3, [fp, #-28]	; 0xffffffe4
   15808:	mov	r3, #1
   1580c:	str	r3, [fp, #-32]	; 0xffffffe0
   15810:	b	15824 <__assert_fail@plt+0x42e0>
   15814:	mov	r3, #0
   15818:	strb	r3, [fp, #-34]	; 0xffffffde
   1581c:	b	15824 <__assert_fail@plt+0x42e0>
   15820:	bl	1152c <abort@plt>
   15824:	mov	r3, #0
   15828:	str	r3, [fp, #-16]
   1582c:	b	169bc <__assert_fail@plt+0x5478>
   15830:	mov	r3, #0
   15834:	strb	r3, [fp, #-40]	; 0xffffffd8
   15838:	mov	r3, #0
   1583c:	strb	r3, [fp, #-41]	; 0xffffffd7
   15840:	mov	r3, #0
   15844:	strb	r3, [fp, #-42]	; 0xffffffd6
   15848:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1584c:	cmp	r3, #0
   15850:	beq	158ec <__assert_fail@plt+0x43a8>
   15854:	ldr	r3, [fp, #4]
   15858:	cmp	r3, #2
   1585c:	beq	158ec <__assert_fail@plt+0x43a8>
   15860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15864:	cmp	r3, #0
   15868:	beq	158ec <__assert_fail@plt+0x43a8>
   1586c:	ldr	r2, [fp, #-16]
   15870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15874:	add	r4, r2, r3
   15878:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1587c:	cmn	r3, #1
   15880:	bne	158a4 <__assert_fail@plt+0x4360>
   15884:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15888:	cmp	r3, #1
   1588c:	bls	158a4 <__assert_fail@plt+0x4360>
   15890:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15894:	bl	113f4 <strlen@plt>
   15898:	str	r0, [fp, #-100]	; 0xffffff9c
   1589c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158a0:	b	158a8 <__assert_fail@plt+0x4364>
   158a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   158a8:	cmp	r4, r3
   158ac:	bhi	158ec <__assert_fail@plt+0x43a8>
   158b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   158b4:	ldr	r3, [fp, #-16]
   158b8:	add	r3, r2, r3
   158bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   158c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158c4:	mov	r0, r3
   158c8:	bl	112a4 <memcmp@plt>
   158cc:	mov	r3, r0
   158d0:	cmp	r3, #0
   158d4:	bne	158ec <__assert_fail@plt+0x43a8>
   158d8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   158dc:	cmp	r3, #0
   158e0:	bne	16b78 <__assert_fail@plt+0x5634>
   158e4:	mov	r3, #1
   158e8:	strb	r3, [fp, #-40]	; 0xffffffd8
   158ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   158f0:	ldr	r3, [fp, #-16]
   158f4:	add	r3, r2, r3
   158f8:	ldrb	r3, [r3]
   158fc:	strb	r3, [fp, #-38]	; 0xffffffda
   15900:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15904:	cmp	r3, #126	; 0x7e
   15908:	ldrls	pc, [pc, r3, lsl #2]
   1590c:	b	16138 <__assert_fail@plt+0x4bf4>
   15910:	andeq	r5, r1, ip, lsl #22
   15914:	andeq	r6, r1, r8, lsr r1
   15918:	andeq	r6, r1, r8, lsr r1
   1591c:	andeq	r6, r1, r8, lsr r1
   15920:	andeq	r6, r1, r8, lsr r1
   15924:	andeq	r6, r1, r8, lsr r1
   15928:	andeq	r6, r1, r8, lsr r1
   1592c:	strdeq	r5, [r1], -ip
   15930:	andeq	r5, r1, r8, lsl #30
   15934:	andeq	r5, r1, r8, lsr pc
   15938:	andeq	r5, r1, r0, lsr #30
   1593c:	andeq	r5, r1, r4, asr #30
   15940:	andeq	r5, r1, r4, lsl pc
   15944:	andeq	r5, r1, ip, lsr #30
   15948:	andeq	r6, r1, r8, lsr r1
   1594c:	andeq	r6, r1, r8, lsr r1
   15950:	andeq	r6, r1, r8, lsr r1
   15954:	andeq	r6, r1, r8, lsr r1
   15958:	andeq	r6, r1, r8, lsr r1
   1595c:	andeq	r6, r1, r8, lsr r1
   15960:	andeq	r6, r1, r8, lsr r1
   15964:	andeq	r6, r1, r8, lsr r1
   15968:	andeq	r6, r1, r8, lsr r1
   1596c:	andeq	r6, r1, r8, lsr r1
   15970:	andeq	r6, r1, r8, lsr r1
   15974:	andeq	r6, r1, r8, lsr r1
   15978:	andeq	r6, r1, r8, lsr r1
   1597c:	andeq	r6, r1, r8, lsr r1
   15980:	andeq	r6, r1, r8, lsr r1
   15984:	andeq	r6, r1, r8, lsr r1
   15988:	andeq	r6, r1, r8, lsr r1
   1598c:	andeq	r6, r1, r8, lsr r1
   15990:	andeq	r6, r1, ip, lsl r0
   15994:	andeq	r6, r1, r4, lsr #32
   15998:	andeq	r6, r1, r4, lsr #32
   1599c:	andeq	r6, r1, r0, lsl r0
   159a0:	andeq	r6, r1, r4, lsr #32
   159a4:	andeq	r6, r1, ip, lsr #2
   159a8:	andeq	r6, r1, r4, lsr #32
   159ac:	andeq	r6, r1, r0, asr #32
   159b0:	andeq	r6, r1, r4, lsr #32
   159b4:	andeq	r6, r1, r4, lsr #32
   159b8:	andeq	r6, r1, r4, lsr #32
   159bc:	andeq	r6, r1, ip, lsr #2
   159c0:	andeq	r6, r1, ip, lsr #2
   159c4:	andeq	r6, r1, ip, lsr #2
   159c8:	andeq	r6, r1, ip, lsr #2
   159cc:	andeq	r6, r1, ip, lsr #2
   159d0:	andeq	r6, r1, ip, lsr #2
   159d4:	andeq	r6, r1, ip, lsr #2
   159d8:	andeq	r6, r1, ip, lsr #2
   159dc:	andeq	r6, r1, ip, lsr #2
   159e0:	andeq	r6, r1, ip, lsr #2
   159e4:	andeq	r6, r1, ip, lsr #2
   159e8:	andeq	r6, r1, ip, lsr #2
   159ec:	andeq	r6, r1, ip, lsr #2
   159f0:	andeq	r6, r1, ip, lsr #2
   159f4:	andeq	r6, r1, ip, lsr #2
   159f8:	andeq	r6, r1, ip, lsr #2
   159fc:	andeq	r6, r1, r4, lsr #32
   15a00:	andeq	r6, r1, r4, lsr #32
   15a04:	andeq	r6, r1, r4, lsr #32
   15a08:	andeq	r6, r1, r4, lsr #32
   15a0c:	andeq	r5, r1, ip, ror #25
   15a10:	andeq	r6, r1, r8, lsr r1
   15a14:	andeq	r6, r1, ip, lsr #2
   15a18:	andeq	r6, r1, ip, lsr #2
   15a1c:	andeq	r6, r1, ip, lsr #2
   15a20:	andeq	r6, r1, ip, lsr #2
   15a24:	andeq	r6, r1, ip, lsr #2
   15a28:	andeq	r6, r1, ip, lsr #2
   15a2c:	andeq	r6, r1, ip, lsr #2
   15a30:	andeq	r6, r1, ip, lsr #2
   15a34:	andeq	r6, r1, ip, lsr #2
   15a38:	andeq	r6, r1, ip, lsr #2
   15a3c:	andeq	r6, r1, ip, lsr #2
   15a40:	andeq	r6, r1, ip, lsr #2
   15a44:	andeq	r6, r1, ip, lsr #2
   15a48:	andeq	r6, r1, ip, lsr #2
   15a4c:	andeq	r6, r1, ip, lsr #2
   15a50:	andeq	r6, r1, ip, lsr #2
   15a54:	andeq	r6, r1, ip, lsr #2
   15a58:	andeq	r6, r1, ip, lsr #2
   15a5c:	andeq	r6, r1, ip, lsr #2
   15a60:	andeq	r6, r1, ip, lsr #2
   15a64:	andeq	r6, r1, ip, lsr #2
   15a68:	andeq	r6, r1, ip, lsr #2
   15a6c:	andeq	r6, r1, ip, lsr #2
   15a70:	andeq	r6, r1, ip, lsr #2
   15a74:	andeq	r6, r1, ip, lsr #2
   15a78:	andeq	r6, r1, ip, lsr #2
   15a7c:	andeq	r6, r1, r4, lsr #32
   15a80:	andeq	r5, r1, r0, asr pc
   15a84:	andeq	r6, r1, ip, lsr #2
   15a88:	andeq	r6, r1, r4, lsr #32
   15a8c:	andeq	r6, r1, ip, lsr #2
   15a90:	andeq	r6, r1, r4, lsr #32
   15a94:	andeq	r6, r1, ip, lsr #2
   15a98:	andeq	r6, r1, ip, lsr #2
   15a9c:	andeq	r6, r1, ip, lsr #2
   15aa0:	andeq	r6, r1, ip, lsr #2
   15aa4:	andeq	r6, r1, ip, lsr #2
   15aa8:	andeq	r6, r1, ip, lsr #2
   15aac:	andeq	r6, r1, ip, lsr #2
   15ab0:	andeq	r6, r1, ip, lsr #2
   15ab4:	andeq	r6, r1, ip, lsr #2
   15ab8:	andeq	r6, r1, ip, lsr #2
   15abc:	andeq	r6, r1, ip, lsr #2
   15ac0:	andeq	r6, r1, ip, lsr #2
   15ac4:	andeq	r6, r1, ip, lsr #2
   15ac8:	andeq	r6, r1, ip, lsr #2
   15acc:	andeq	r6, r1, ip, lsr #2
   15ad0:	andeq	r6, r1, ip, lsr #2
   15ad4:	andeq	r6, r1, ip, lsr #2
   15ad8:	andeq	r6, r1, ip, lsr #2
   15adc:	andeq	r6, r1, ip, lsr #2
   15ae0:	andeq	r6, r1, ip, lsr #2
   15ae4:	andeq	r6, r1, ip, lsr #2
   15ae8:	andeq	r6, r1, ip, lsr #2
   15aec:	andeq	r6, r1, ip, lsr #2
   15af0:	andeq	r6, r1, ip, lsr #2
   15af4:	andeq	r6, r1, ip, lsr #2
   15af8:	andeq	r6, r1, ip, lsr #2
   15afc:	andeq	r5, r1, r8, asr #31
   15b00:	andeq	r6, r1, r4, lsr #32
   15b04:	andeq	r5, r1, r8, asr #31
   15b08:	andeq	r6, r1, r0, lsl r0
   15b0c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15b10:	cmp	r3, #0
   15b14:	beq	15cd8 <__assert_fail@plt+0x4794>
   15b18:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15b1c:	cmp	r3, #0
   15b20:	bne	16b80 <__assert_fail@plt+0x563c>
   15b24:	mov	r3, #1
   15b28:	strb	r3, [fp, #-41]	; 0xffffffd7
   15b2c:	ldr	r3, [fp, #4]
   15b30:	cmp	r3, #2
   15b34:	bne	15be4 <__assert_fail@plt+0x46a0>
   15b38:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15b3c:	eor	r3, r3, #1
   15b40:	uxtb	r3, r3
   15b44:	cmp	r3, #0
   15b48:	beq	15be4 <__assert_fail@plt+0x46a0>
   15b4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b54:	cmp	r2, r3
   15b58:	bcs	15b70 <__assert_fail@plt+0x462c>
   15b5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b64:	add	r3, r2, r3
   15b68:	mov	r2, #39	; 0x27
   15b6c:	strb	r2, [r3]
   15b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b74:	add	r3, r3, #1
   15b78:	str	r3, [fp, #-20]	; 0xffffffec
   15b7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b84:	cmp	r2, r3
   15b88:	bcs	15ba0 <__assert_fail@plt+0x465c>
   15b8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b94:	add	r3, r2, r3
   15b98:	mov	r2, #36	; 0x24
   15b9c:	strb	r2, [r3]
   15ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ba4:	add	r3, r3, #1
   15ba8:	str	r3, [fp, #-20]	; 0xffffffec
   15bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   15bb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bb4:	cmp	r2, r3
   15bb8:	bcs	15bd0 <__assert_fail@plt+0x468c>
   15bbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc4:	add	r3, r2, r3
   15bc8:	mov	r2, #39	; 0x27
   15bcc:	strb	r2, [r3]
   15bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bd4:	add	r3, r3, #1
   15bd8:	str	r3, [fp, #-20]	; 0xffffffec
   15bdc:	mov	r3, #1
   15be0:	strb	r3, [fp, #-35]	; 0xffffffdd
   15be4:	ldr	r2, [fp, #-20]	; 0xffffffec
   15be8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bec:	cmp	r2, r3
   15bf0:	bcs	15c08 <__assert_fail@plt+0x46c4>
   15bf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bfc:	add	r3, r2, r3
   15c00:	mov	r2, #92	; 0x5c
   15c04:	strb	r2, [r3]
   15c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c0c:	add	r3, r3, #1
   15c10:	str	r3, [fp, #-20]	; 0xffffffec
   15c14:	ldr	r3, [fp, #4]
   15c18:	cmp	r3, #2
   15c1c:	beq	15ccc <__assert_fail@plt+0x4788>
   15c20:	ldr	r3, [fp, #-16]
   15c24:	add	r2, r3, #1
   15c28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c2c:	cmp	r2, r3
   15c30:	bcs	15ccc <__assert_fail@plt+0x4788>
   15c34:	ldr	r3, [fp, #-16]
   15c38:	add	r3, r3, #1
   15c3c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15c40:	add	r3, r2, r3
   15c44:	ldrb	r3, [r3]
   15c48:	cmp	r3, #47	; 0x2f
   15c4c:	bls	15ccc <__assert_fail@plt+0x4788>
   15c50:	ldr	r3, [fp, #-16]
   15c54:	add	r3, r3, #1
   15c58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15c5c:	add	r3, r2, r3
   15c60:	ldrb	r3, [r3]
   15c64:	cmp	r3, #57	; 0x39
   15c68:	bhi	15ccc <__assert_fail@plt+0x4788>
   15c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15c74:	cmp	r2, r3
   15c78:	bcs	15c90 <__assert_fail@plt+0x474c>
   15c7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c84:	add	r3, r2, r3
   15c88:	mov	r2, #48	; 0x30
   15c8c:	strb	r2, [r3]
   15c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c94:	add	r3, r3, #1
   15c98:	str	r3, [fp, #-20]	; 0xffffffec
   15c9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ca0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ca4:	cmp	r2, r3
   15ca8:	bcs	15cc0 <__assert_fail@plt+0x477c>
   15cac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb4:	add	r3, r2, r3
   15cb8:	mov	r2, #48	; 0x30
   15cbc:	strb	r2, [r3]
   15cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cc4:	add	r3, r3, #1
   15cc8:	str	r3, [fp, #-20]	; 0xffffffec
   15ccc:	mov	r3, #48	; 0x30
   15cd0:	strb	r3, [fp, #-38]	; 0xffffffda
   15cd4:	b	16714 <__assert_fail@plt+0x51d0>
   15cd8:	ldr	r3, [fp, #8]
   15cdc:	and	r3, r3, #1
   15ce0:	cmp	r3, #0
   15ce4:	beq	16714 <__assert_fail@plt+0x51d0>
   15ce8:	b	169b0 <__assert_fail@plt+0x546c>
   15cec:	ldr	r3, [fp, #4]
   15cf0:	cmp	r3, #2
   15cf4:	beq	15d04 <__assert_fail@plt+0x47c0>
   15cf8:	cmp	r3, #5
   15cfc:	beq	15d14 <__assert_fail@plt+0x47d0>
   15d00:	b	15ef8 <__assert_fail@plt+0x49b4>
   15d04:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15d08:	cmp	r3, #0
   15d0c:	beq	15eec <__assert_fail@plt+0x49a8>
   15d10:	b	16bbc <__assert_fail@plt+0x5678>
   15d14:	ldr	r3, [fp, #8]
   15d18:	and	r3, r3, #4
   15d1c:	cmp	r3, #0
   15d20:	beq	15ef4 <__assert_fail@plt+0x49b0>
   15d24:	ldr	r3, [fp, #-16]
   15d28:	add	r2, r3, #2
   15d2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d30:	cmp	r2, r3
   15d34:	bcs	15ef4 <__assert_fail@plt+0x49b0>
   15d38:	ldr	r3, [fp, #-16]
   15d3c:	add	r3, r3, #1
   15d40:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d44:	add	r3, r2, r3
   15d48:	ldrb	r3, [r3]
   15d4c:	cmp	r3, #63	; 0x3f
   15d50:	bne	15ef4 <__assert_fail@plt+0x49b0>
   15d54:	ldr	r3, [fp, #-16]
   15d58:	add	r3, r3, #2
   15d5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15d60:	add	r3, r2, r3
   15d64:	ldrb	r3, [r3]
   15d68:	sub	r3, r3, #33	; 0x21
   15d6c:	cmp	r3, #29
   15d70:	ldrls	pc, [pc, r3, lsl #2]
   15d74:	b	15ee4 <__assert_fail@plt+0x49a0>
   15d78:	strdeq	r5, [r1], -r0
   15d7c:	andeq	r5, r1, r4, ror #29
   15d80:	andeq	r5, r1, r4, ror #29
   15d84:	andeq	r5, r1, r4, ror #29
   15d88:	andeq	r5, r1, r4, ror #29
   15d8c:	andeq	r5, r1, r4, ror #29
   15d90:	strdeq	r5, [r1], -r0
   15d94:	strdeq	r5, [r1], -r0
   15d98:	strdeq	r5, [r1], -r0
   15d9c:	andeq	r5, r1, r4, ror #29
   15da0:	andeq	r5, r1, r4, ror #29
   15da4:	andeq	r5, r1, r4, ror #29
   15da8:	strdeq	r5, [r1], -r0
   15dac:	andeq	r5, r1, r4, ror #29
   15db0:	strdeq	r5, [r1], -r0
   15db4:	andeq	r5, r1, r4, ror #29
   15db8:	andeq	r5, r1, r4, ror #29
   15dbc:	andeq	r5, r1, r4, ror #29
   15dc0:	andeq	r5, r1, r4, ror #29
   15dc4:	andeq	r5, r1, r4, ror #29
   15dc8:	andeq	r5, r1, r4, ror #29
   15dcc:	andeq	r5, r1, r4, ror #29
   15dd0:	andeq	r5, r1, r4, ror #29
   15dd4:	andeq	r5, r1, r4, ror #29
   15dd8:	andeq	r5, r1, r4, ror #29
   15ddc:	andeq	r5, r1, r4, ror #29
   15de0:	andeq	r5, r1, r4, ror #29
   15de4:	strdeq	r5, [r1], -r0
   15de8:	strdeq	r5, [r1], -r0
   15dec:	strdeq	r5, [r1], -r0
   15df0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15df4:	cmp	r3, #0
   15df8:	bne	16b88 <__assert_fail@plt+0x5644>
   15dfc:	ldr	r3, [fp, #-16]
   15e00:	add	r3, r3, #2
   15e04:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15e08:	add	r3, r2, r3
   15e0c:	ldrb	r3, [r3]
   15e10:	strb	r3, [fp, #-38]	; 0xffffffda
   15e14:	ldr	r3, [fp, #-16]
   15e18:	add	r3, r3, #2
   15e1c:	str	r3, [fp, #-16]
   15e20:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e24:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e28:	cmp	r2, r3
   15e2c:	bcs	15e44 <__assert_fail@plt+0x4900>
   15e30:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e38:	add	r3, r2, r3
   15e3c:	mov	r2, #63	; 0x3f
   15e40:	strb	r2, [r3]
   15e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e48:	add	r3, r3, #1
   15e4c:	str	r3, [fp, #-20]	; 0xffffffec
   15e50:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e58:	cmp	r2, r3
   15e5c:	bcs	15e74 <__assert_fail@plt+0x4930>
   15e60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e68:	add	r3, r2, r3
   15e6c:	mov	r2, #34	; 0x22
   15e70:	strb	r2, [r3]
   15e74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e78:	add	r3, r3, #1
   15e7c:	str	r3, [fp, #-20]	; 0xffffffec
   15e80:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e88:	cmp	r2, r3
   15e8c:	bcs	15ea4 <__assert_fail@plt+0x4960>
   15e90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e98:	add	r3, r2, r3
   15e9c:	mov	r2, #34	; 0x22
   15ea0:	strb	r2, [r3]
   15ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ea8:	add	r3, r3, #1
   15eac:	str	r3, [fp, #-20]	; 0xffffffec
   15eb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15eb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15eb8:	cmp	r2, r3
   15ebc:	bcs	15ed4 <__assert_fail@plt+0x4990>
   15ec0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ec8:	add	r3, r2, r3
   15ecc:	mov	r2, #63	; 0x3f
   15ed0:	strb	r2, [r3]
   15ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ed8:	add	r3, r3, #1
   15edc:	str	r3, [fp, #-20]	; 0xffffffec
   15ee0:	b	15ee8 <__assert_fail@plt+0x49a4>
   15ee4:	nop			; (mov r0, r0)
   15ee8:	b	15ef4 <__assert_fail@plt+0x49b0>
   15eec:	nop			; (mov r0, r0)
   15ef0:	b	16740 <__assert_fail@plt+0x51fc>
   15ef4:	nop			; (mov r0, r0)
   15ef8:	b	16740 <__assert_fail@plt+0x51fc>
   15efc:	mov	r3, #97	; 0x61
   15f00:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f04:	b	15fb0 <__assert_fail@plt+0x4a6c>
   15f08:	mov	r3, #98	; 0x62
   15f0c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f10:	b	15fb0 <__assert_fail@plt+0x4a6c>
   15f14:	mov	r3, #102	; 0x66
   15f18:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f1c:	b	15fb0 <__assert_fail@plt+0x4a6c>
   15f20:	mov	r3, #110	; 0x6e
   15f24:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f28:	b	15f98 <__assert_fail@plt+0x4a54>
   15f2c:	mov	r3, #114	; 0x72
   15f30:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f34:	b	15f98 <__assert_fail@plt+0x4a54>
   15f38:	mov	r3, #116	; 0x74
   15f3c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f40:	b	15f98 <__assert_fail@plt+0x4a54>
   15f44:	mov	r3, #118	; 0x76
   15f48:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f4c:	b	15fb0 <__assert_fail@plt+0x4a6c>
   15f50:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15f54:	strb	r3, [fp, #-39]	; 0xffffffd9
   15f58:	ldr	r3, [fp, #4]
   15f5c:	cmp	r3, #2
   15f60:	bne	15f74 <__assert_fail@plt+0x4a30>
   15f64:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15f68:	cmp	r3, #0
   15f6c:	beq	168c8 <__assert_fail@plt+0x5384>
   15f70:	b	16bbc <__assert_fail@plt+0x5678>
   15f74:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15f78:	cmp	r3, #0
   15f7c:	beq	15f98 <__assert_fail@plt+0x4a54>
   15f80:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15f84:	cmp	r3, #0
   15f88:	beq	15f98 <__assert_fail@plt+0x4a54>
   15f8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f90:	cmp	r3, #0
   15f94:	bne	168d0 <__assert_fail@plt+0x538c>
   15f98:	ldr	r3, [fp, #4]
   15f9c:	cmp	r3, #2
   15fa0:	bne	15fb0 <__assert_fail@plt+0x4a6c>
   15fa4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15fa8:	cmp	r3, #0
   15fac:	bne	16b90 <__assert_fail@plt+0x564c>
   15fb0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15fb4:	cmp	r3, #0
   15fb8:	beq	1671c <__assert_fail@plt+0x51d8>
   15fbc:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   15fc0:	strb	r3, [fp, #-38]	; 0xffffffda
   15fc4:	b	167c8 <__assert_fail@plt+0x5284>
   15fc8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fcc:	cmn	r3, #1
   15fd0:	bne	15ff4 <__assert_fail@plt+0x4ab0>
   15fd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15fd8:	add	r3, r3, #1
   15fdc:	ldrb	r3, [r3]
   15fe0:	cmp	r3, #0
   15fe4:	movne	r3, #1
   15fe8:	moveq	r3, #0
   15fec:	uxtb	r3, r3
   15ff0:	b	16008 <__assert_fail@plt+0x4ac4>
   15ff4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ff8:	cmp	r3, #1
   15ffc:	movne	r3, #1
   16000:	moveq	r3, #0
   16004:	uxtb	r3, r3
   16008:	cmp	r3, #0
   1600c:	bne	16724 <__assert_fail@plt+0x51e0>
   16010:	ldr	r3, [fp, #-16]
   16014:	cmp	r3, #0
   16018:	bne	1672c <__assert_fail@plt+0x51e8>
   1601c:	mov	r3, #1
   16020:	strb	r3, [fp, #-42]	; 0xffffffd6
   16024:	ldr	r3, [fp, #4]
   16028:	cmp	r3, #2
   1602c:	bne	16734 <__assert_fail@plt+0x51f0>
   16030:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16034:	cmp	r3, #0
   16038:	beq	16734 <__assert_fail@plt+0x51f0>
   1603c:	b	16bbc <__assert_fail@plt+0x5678>
   16040:	mov	r3, #1
   16044:	strb	r3, [fp, #-36]	; 0xffffffdc
   16048:	mov	r3, #1
   1604c:	strb	r3, [fp, #-42]	; 0xffffffd6
   16050:	ldr	r3, [fp, #4]
   16054:	cmp	r3, #2
   16058:	bne	1673c <__assert_fail@plt+0x51f8>
   1605c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16060:	cmp	r3, #0
   16064:	bne	16b98 <__assert_fail@plt+0x5654>
   16068:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1606c:	cmp	r3, #0
   16070:	beq	16090 <__assert_fail@plt+0x4b4c>
   16074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16078:	cmp	r3, #0
   1607c:	bne	16090 <__assert_fail@plt+0x4b4c>
   16080:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16084:	str	r3, [fp, #-24]	; 0xffffffe8
   16088:	mov	r3, #0
   1608c:	str	r3, [fp, #-92]	; 0xffffffa4
   16090:	ldr	r2, [fp, #-20]	; 0xffffffec
   16094:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16098:	cmp	r2, r3
   1609c:	bcs	160b4 <__assert_fail@plt+0x4b70>
   160a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   160a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160a8:	add	r3, r2, r3
   160ac:	mov	r2, #39	; 0x27
   160b0:	strb	r2, [r3]
   160b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160b8:	add	r3, r3, #1
   160bc:	str	r3, [fp, #-20]	; 0xffffffec
   160c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   160c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   160c8:	cmp	r2, r3
   160cc:	bcs	160e4 <__assert_fail@plt+0x4ba0>
   160d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   160d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160d8:	add	r3, r2, r3
   160dc:	mov	r2, #92	; 0x5c
   160e0:	strb	r2, [r3]
   160e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   160e8:	add	r3, r3, #1
   160ec:	str	r3, [fp, #-20]	; 0xffffffec
   160f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   160f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   160f8:	cmp	r2, r3
   160fc:	bcs	16114 <__assert_fail@plt+0x4bd0>
   16100:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16104:	ldr	r3, [fp, #-20]	; 0xffffffec
   16108:	add	r3, r2, r3
   1610c:	mov	r2, #39	; 0x27
   16110:	strb	r2, [r3]
   16114:	ldr	r3, [fp, #-20]	; 0xffffffec
   16118:	add	r3, r3, #1
   1611c:	str	r3, [fp, #-20]	; 0xffffffec
   16120:	mov	r3, #0
   16124:	strb	r3, [fp, #-35]	; 0xffffffdd
   16128:	b	1673c <__assert_fail@plt+0x51f8>
   1612c:	mov	r3, #1
   16130:	strb	r3, [fp, #-42]	; 0xffffffd6
   16134:	b	16740 <__assert_fail@plt+0x51fc>
   16138:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1613c:	cmp	r3, #0
   16140:	beq	16180 <__assert_fail@plt+0x4c3c>
   16144:	mov	r3, #1
   16148:	str	r3, [fp, #-48]	; 0xffffffd0
   1614c:	bl	113d0 <__ctype_b_loc@plt>
   16150:	mov	r3, r0
   16154:	ldr	r2, [r3]
   16158:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1615c:	lsl	r3, r3, #1
   16160:	add	r3, r2, r3
   16164:	ldrh	r3, [r3]
   16168:	and	r3, r3, #16384	; 0x4000
   1616c:	cmp	r3, #0
   16170:	movne	r3, #1
   16174:	moveq	r3, #0
   16178:	strb	r3, [fp, #-49]	; 0xffffffcf
   1617c:	b	163cc <__assert_fail@plt+0x4e88>
   16180:	sub	r3, fp, #76	; 0x4c
   16184:	mov	r2, #8
   16188:	mov	r1, #0
   1618c:	mov	r0, r3
   16190:	bl	11448 <memset@plt>
   16194:	mov	r3, #0
   16198:	str	r3, [fp, #-48]	; 0xffffffd0
   1619c:	mov	r3, #1
   161a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   161a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   161a8:	cmn	r3, #1
   161ac:	bne	161bc <__assert_fail@plt+0x4c78>
   161b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   161b4:	bl	113f4 <strlen@plt>
   161b8:	str	r0, [fp, #-100]	; 0xffffff9c
   161bc:	ldr	r2, [fp, #-16]
   161c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161c4:	add	r3, r2, r3
   161c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   161cc:	add	r1, r2, r3
   161d0:	ldr	r2, [fp, #-16]
   161d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161d8:	add	r3, r2, r3
   161dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   161e0:	sub	r2, r2, r3
   161e4:	sub	r3, fp, #76	; 0x4c
   161e8:	sub	r0, fp, #80	; 0x50
   161ec:	bl	33f40 <__assert_fail@plt+0x229fc>
   161f0:	str	r0, [fp, #-64]	; 0xffffffc0
   161f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   161f8:	cmp	r3, #0
   161fc:	beq	163c0 <__assert_fail@plt+0x4e7c>
   16200:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16204:	cmn	r3, #1
   16208:	bne	16218 <__assert_fail@plt+0x4cd4>
   1620c:	mov	r3, #0
   16210:	strb	r3, [fp, #-49]	; 0xffffffcf
   16214:	b	163cc <__assert_fail@plt+0x4e88>
   16218:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1621c:	cmn	r3, #2
   16220:	bne	16278 <__assert_fail@plt+0x4d34>
   16224:	mov	r3, #0
   16228:	strb	r3, [fp, #-49]	; 0xffffffcf
   1622c:	b	1623c <__assert_fail@plt+0x4cf8>
   16230:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16234:	add	r3, r3, #1
   16238:	str	r3, [fp, #-48]	; 0xffffffd0
   1623c:	ldr	r2, [fp, #-16]
   16240:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16244:	add	r2, r2, r3
   16248:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1624c:	cmp	r2, r3
   16250:	bcs	163c8 <__assert_fail@plt+0x4e84>
   16254:	ldr	r2, [fp, #-16]
   16258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1625c:	add	r3, r2, r3
   16260:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16264:	add	r3, r2, r3
   16268:	ldrb	r3, [r3]
   1626c:	cmp	r3, #0
   16270:	bne	16230 <__assert_fail@plt+0x4cec>
   16274:	b	163c8 <__assert_fail@plt+0x4e84>
   16278:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1627c:	cmp	r3, #0
   16280:	beq	16374 <__assert_fail@plt+0x4e30>
   16284:	ldr	r3, [fp, #4]
   16288:	cmp	r3, #2
   1628c:	bne	16374 <__assert_fail@plt+0x4e30>
   16290:	mov	r3, #1
   16294:	str	r3, [fp, #-56]	; 0xffffffc8
   16298:	b	16364 <__assert_fail@plt+0x4e20>
   1629c:	ldr	r2, [fp, #-16]
   162a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162a4:	add	r2, r2, r3
   162a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   162ac:	add	r3, r2, r3
   162b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   162b4:	add	r3, r2, r3
   162b8:	ldrb	r3, [r3]
   162bc:	sub	r3, r3, #91	; 0x5b
   162c0:	cmp	r3, #33	; 0x21
   162c4:	ldrls	pc, [pc, r3, lsl #2]
   162c8:	b	16354 <__assert_fail@plt+0x4e10>
   162cc:	andeq	r6, r1, r0, lsr #23
   162d0:	andeq	r6, r1, r0, lsr #23
   162d4:	andeq	r6, r1, r4, asr r3
   162d8:	andeq	r6, r1, r0, lsr #23
   162dc:	andeq	r6, r1, r4, asr r3
   162e0:	andeq	r6, r1, r0, lsr #23
   162e4:	andeq	r6, r1, r4, asr r3
   162e8:	andeq	r6, r1, r4, asr r3
   162ec:	andeq	r6, r1, r4, asr r3
   162f0:	andeq	r6, r1, r4, asr r3
   162f4:	andeq	r6, r1, r4, asr r3
   162f8:	andeq	r6, r1, r4, asr r3
   162fc:	andeq	r6, r1, r4, asr r3
   16300:	andeq	r6, r1, r4, asr r3
   16304:	andeq	r6, r1, r4, asr r3
   16308:	andeq	r6, r1, r4, asr r3
   1630c:	andeq	r6, r1, r4, asr r3
   16310:	andeq	r6, r1, r4, asr r3
   16314:	andeq	r6, r1, r4, asr r3
   16318:	andeq	r6, r1, r4, asr r3
   1631c:	andeq	r6, r1, r4, asr r3
   16320:	andeq	r6, r1, r4, asr r3
   16324:	andeq	r6, r1, r4, asr r3
   16328:	andeq	r6, r1, r4, asr r3
   1632c:	andeq	r6, r1, r4, asr r3
   16330:	andeq	r6, r1, r4, asr r3
   16334:	andeq	r6, r1, r4, asr r3
   16338:	andeq	r6, r1, r4, asr r3
   1633c:	andeq	r6, r1, r4, asr r3
   16340:	andeq	r6, r1, r4, asr r3
   16344:	andeq	r6, r1, r4, asr r3
   16348:	andeq	r6, r1, r4, asr r3
   1634c:	andeq	r6, r1, r4, asr r3
   16350:	andeq	r6, r1, r0, lsr #23
   16354:	nop			; (mov r0, r0)
   16358:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1635c:	add	r3, r3, #1
   16360:	str	r3, [fp, #-56]	; 0xffffffc8
   16364:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16368:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1636c:	cmp	r2, r3
   16370:	bcc	1629c <__assert_fail@plt+0x4d58>
   16374:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16378:	mov	r0, r3
   1637c:	bl	11304 <iswprint@plt>
   16380:	mov	r3, r0
   16384:	cmp	r3, #0
   16388:	bne	16394 <__assert_fail@plt+0x4e50>
   1638c:	mov	r3, #0
   16390:	strb	r3, [fp, #-49]	; 0xffffffcf
   16394:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1639c:	add	r3, r2, r3
   163a0:	str	r3, [fp, #-48]	; 0xffffffd0
   163a4:	sub	r3, fp, #76	; 0x4c
   163a8:	mov	r0, r3
   163ac:	bl	11280 <mbsinit@plt>
   163b0:	mov	r3, r0
   163b4:	cmp	r3, #0
   163b8:	beq	161bc <__assert_fail@plt+0x4c78>
   163bc:	b	163cc <__assert_fail@plt+0x4e88>
   163c0:	nop			; (mov r0, r0)
   163c4:	b	163cc <__assert_fail@plt+0x4e88>
   163c8:	nop			; (mov r0, r0)
   163cc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   163d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   163d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   163d8:	cmp	r3, #1
   163dc:	bhi	16400 <__assert_fail@plt+0x4ebc>
   163e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   163e4:	cmp	r3, #0
   163e8:	beq	16740 <__assert_fail@plt+0x51fc>
   163ec:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   163f0:	eor	r3, r3, #1
   163f4:	uxtb	r3, r3
   163f8:	cmp	r3, #0
   163fc:	beq	16740 <__assert_fail@plt+0x51fc>
   16400:	ldr	r2, [fp, #-16]
   16404:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16408:	add	r3, r2, r3
   1640c:	str	r3, [fp, #-68]	; 0xffffffbc
   16410:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16414:	cmp	r3, #0
   16418:	beq	165d8 <__assert_fail@plt+0x5094>
   1641c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   16420:	eor	r3, r3, #1
   16424:	uxtb	r3, r3
   16428:	cmp	r3, #0
   1642c:	beq	165d8 <__assert_fail@plt+0x5094>
   16430:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16434:	cmp	r3, #0
   16438:	bne	16ba8 <__assert_fail@plt+0x5664>
   1643c:	mov	r3, #1
   16440:	strb	r3, [fp, #-41]	; 0xffffffd7
   16444:	ldr	r3, [fp, #4]
   16448:	cmp	r3, #2
   1644c:	bne	164fc <__assert_fail@plt+0x4fb8>
   16450:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16454:	eor	r3, r3, #1
   16458:	uxtb	r3, r3
   1645c:	cmp	r3, #0
   16460:	beq	164fc <__assert_fail@plt+0x4fb8>
   16464:	ldr	r2, [fp, #-20]	; 0xffffffec
   16468:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1646c:	cmp	r2, r3
   16470:	bcs	16488 <__assert_fail@plt+0x4f44>
   16474:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16478:	ldr	r3, [fp, #-20]	; 0xffffffec
   1647c:	add	r3, r2, r3
   16480:	mov	r2, #39	; 0x27
   16484:	strb	r2, [r3]
   16488:	ldr	r3, [fp, #-20]	; 0xffffffec
   1648c:	add	r3, r3, #1
   16490:	str	r3, [fp, #-20]	; 0xffffffec
   16494:	ldr	r2, [fp, #-20]	; 0xffffffec
   16498:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1649c:	cmp	r2, r3
   164a0:	bcs	164b8 <__assert_fail@plt+0x4f74>
   164a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164ac:	add	r3, r2, r3
   164b0:	mov	r2, #36	; 0x24
   164b4:	strb	r2, [r3]
   164b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164bc:	add	r3, r3, #1
   164c0:	str	r3, [fp, #-20]	; 0xffffffec
   164c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   164c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   164cc:	cmp	r2, r3
   164d0:	bcs	164e8 <__assert_fail@plt+0x4fa4>
   164d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   164d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164dc:	add	r3, r2, r3
   164e0:	mov	r2, #39	; 0x27
   164e4:	strb	r2, [r3]
   164e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   164ec:	add	r3, r3, #1
   164f0:	str	r3, [fp, #-20]	; 0xffffffec
   164f4:	mov	r3, #1
   164f8:	strb	r3, [fp, #-35]	; 0xffffffdd
   164fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16500:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16504:	cmp	r2, r3
   16508:	bcs	16520 <__assert_fail@plt+0x4fdc>
   1650c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16510:	ldr	r3, [fp, #-20]	; 0xffffffec
   16514:	add	r3, r2, r3
   16518:	mov	r2, #92	; 0x5c
   1651c:	strb	r2, [r3]
   16520:	ldr	r3, [fp, #-20]	; 0xffffffec
   16524:	add	r3, r3, #1
   16528:	str	r3, [fp, #-20]	; 0xffffffec
   1652c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16530:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16534:	cmp	r2, r3
   16538:	bcs	16560 <__assert_fail@plt+0x501c>
   1653c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16540:	ldr	r3, [fp, #-20]	; 0xffffffec
   16544:	add	r3, r2, r3
   16548:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1654c:	lsr	r2, r2, #6
   16550:	uxtb	r2, r2
   16554:	add	r2, r2, #48	; 0x30
   16558:	uxtb	r2, r2
   1655c:	strb	r2, [r3]
   16560:	ldr	r3, [fp, #-20]	; 0xffffffec
   16564:	add	r3, r3, #1
   16568:	str	r3, [fp, #-20]	; 0xffffffec
   1656c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16570:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16574:	cmp	r2, r3
   16578:	bcs	165a8 <__assert_fail@plt+0x5064>
   1657c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16580:	ldr	r3, [fp, #-20]	; 0xffffffec
   16584:	add	r3, r2, r3
   16588:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1658c:	lsr	r2, r2, #3
   16590:	uxtb	r2, r2
   16594:	and	r2, r2, #7
   16598:	uxtb	r2, r2
   1659c:	add	r2, r2, #48	; 0x30
   165a0:	uxtb	r2, r2
   165a4:	strb	r2, [r3]
   165a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   165ac:	add	r3, r3, #1
   165b0:	str	r3, [fp, #-20]	; 0xffffffec
   165b4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   165b8:	and	r3, r3, #7
   165bc:	uxtb	r3, r3
   165c0:	add	r3, r3, #48	; 0x30
   165c4:	strb	r3, [fp, #-38]	; 0xffffffda
   165c8:	b	1661c <__assert_fail@plt+0x50d8>
   165cc:	andeq	r5, r3, r0, ror ip
   165d0:	andeq	r5, r3, r8, ror ip
   165d4:	andeq	r5, r3, r4, ror ip
   165d8:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   165dc:	cmp	r3, #0
   165e0:	beq	1661c <__assert_fail@plt+0x50d8>
   165e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   165e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165ec:	cmp	r2, r3
   165f0:	bcs	16608 <__assert_fail@plt+0x50c4>
   165f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   165f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   165fc:	add	r3, r2, r3
   16600:	mov	r2, #92	; 0x5c
   16604:	strb	r2, [r3]
   16608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1660c:	add	r3, r3, #1
   16610:	str	r3, [fp, #-20]	; 0xffffffec
   16614:	mov	r3, #0
   16618:	strb	r3, [fp, #-40]	; 0xffffffd8
   1661c:	ldr	r3, [fp, #-16]
   16620:	add	r2, r3, #1
   16624:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16628:	cmp	r2, r3
   1662c:	bcs	1670c <__assert_fail@plt+0x51c8>
   16630:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   16634:	cmp	r3, #0
   16638:	beq	166b8 <__assert_fail@plt+0x5174>
   1663c:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   16640:	eor	r3, r3, #1
   16644:	uxtb	r3, r3
   16648:	cmp	r3, #0
   1664c:	beq	166b8 <__assert_fail@plt+0x5174>
   16650:	ldr	r2, [fp, #-20]	; 0xffffffec
   16654:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16658:	cmp	r2, r3
   1665c:	bcs	16674 <__assert_fail@plt+0x5130>
   16660:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16664:	ldr	r3, [fp, #-20]	; 0xffffffec
   16668:	add	r3, r2, r3
   1666c:	mov	r2, #39	; 0x27
   16670:	strb	r2, [r3]
   16674:	ldr	r3, [fp, #-20]	; 0xffffffec
   16678:	add	r3, r3, #1
   1667c:	str	r3, [fp, #-20]	; 0xffffffec
   16680:	ldr	r2, [fp, #-20]	; 0xffffffec
   16684:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16688:	cmp	r2, r3
   1668c:	bcs	166a4 <__assert_fail@plt+0x5160>
   16690:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16694:	ldr	r3, [fp, #-20]	; 0xffffffec
   16698:	add	r3, r2, r3
   1669c:	mov	r2, #39	; 0x27
   166a0:	strb	r2, [r3]
   166a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   166a8:	add	r3, r3, #1
   166ac:	str	r3, [fp, #-20]	; 0xffffffec
   166b0:	mov	r3, #0
   166b4:	strb	r3, [fp, #-35]	; 0xffffffdd
   166b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   166bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   166c0:	cmp	r2, r3
   166c4:	bcs	166dc <__assert_fail@plt+0x5198>
   166c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   166cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   166d0:	add	r3, r2, r3
   166d4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   166d8:	strb	r2, [r3]
   166dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   166e0:	add	r3, r3, #1
   166e4:	str	r3, [fp, #-20]	; 0xffffffec
   166e8:	ldr	r3, [fp, #-16]
   166ec:	add	r3, r3, #1
   166f0:	str	r3, [fp, #-16]
   166f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   166f8:	ldr	r3, [fp, #-16]
   166fc:	add	r3, r2, r3
   16700:	ldrb	r3, [r3]
   16704:	strb	r3, [fp, #-38]	; 0xffffffda
   16708:	b	16410 <__assert_fail@plt+0x4ecc>
   1670c:	nop			; (mov r0, r0)
   16710:	b	168dc <__assert_fail@plt+0x5398>
   16714:	nop			; (mov r0, r0)
   16718:	b	16740 <__assert_fail@plt+0x51fc>
   1671c:	nop			; (mov r0, r0)
   16720:	b	16740 <__assert_fail@plt+0x51fc>
   16724:	nop			; (mov r0, r0)
   16728:	b	16740 <__assert_fail@plt+0x51fc>
   1672c:	nop			; (mov r0, r0)
   16730:	b	16740 <__assert_fail@plt+0x51fc>
   16734:	nop			; (mov r0, r0)
   16738:	b	16740 <__assert_fail@plt+0x51fc>
   1673c:	nop			; (mov r0, r0)
   16740:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16744:	eor	r3, r3, #1
   16748:	uxtb	r3, r3
   1674c:	cmp	r3, #0
   16750:	bne	16760 <__assert_fail@plt+0x521c>
   16754:	ldr	r3, [fp, #4]
   16758:	cmp	r3, #2
   1675c:	bne	16774 <__assert_fail@plt+0x5230>
   16760:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16764:	eor	r3, r3, #1
   16768:	uxtb	r3, r3
   1676c:	cmp	r3, #0
   16770:	bne	167b4 <__assert_fail@plt+0x5270>
   16774:	ldr	r3, [fp, #12]
   16778:	cmp	r3, #0
   1677c:	beq	167b4 <__assert_fail@plt+0x5270>
   16780:	ldrb	r3, [fp, #-38]	; 0xffffffda
   16784:	lsr	r3, r3, #5
   16788:	uxtb	r3, r3
   1678c:	lsl	r3, r3, #2
   16790:	ldr	r2, [fp, #12]
   16794:	add	r3, r2, r3
   16798:	ldr	r2, [r3]
   1679c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   167a0:	and	r3, r3, #31
   167a4:	lsr	r3, r2, r3
   167a8:	and	r3, r3, #1
   167ac:	cmp	r3, #0
   167b0:	bne	167c8 <__assert_fail@plt+0x5284>
   167b4:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   167b8:	eor	r3, r3, #1
   167bc:	uxtb	r3, r3
   167c0:	cmp	r3, #0
   167c4:	bne	168d8 <__assert_fail@plt+0x5394>
   167c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   167cc:	cmp	r3, #0
   167d0:	bne	16bb0 <__assert_fail@plt+0x566c>
   167d4:	mov	r3, #1
   167d8:	strb	r3, [fp, #-41]	; 0xffffffd7
   167dc:	ldr	r3, [fp, #4]
   167e0:	cmp	r3, #2
   167e4:	bne	16894 <__assert_fail@plt+0x5350>
   167e8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   167ec:	eor	r3, r3, #1
   167f0:	uxtb	r3, r3
   167f4:	cmp	r3, #0
   167f8:	beq	16894 <__assert_fail@plt+0x5350>
   167fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16800:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16804:	cmp	r2, r3
   16808:	bcs	16820 <__assert_fail@plt+0x52dc>
   1680c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16810:	ldr	r3, [fp, #-20]	; 0xffffffec
   16814:	add	r3, r2, r3
   16818:	mov	r2, #39	; 0x27
   1681c:	strb	r2, [r3]
   16820:	ldr	r3, [fp, #-20]	; 0xffffffec
   16824:	add	r3, r3, #1
   16828:	str	r3, [fp, #-20]	; 0xffffffec
   1682c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16830:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16834:	cmp	r2, r3
   16838:	bcs	16850 <__assert_fail@plt+0x530c>
   1683c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16840:	ldr	r3, [fp, #-20]	; 0xffffffec
   16844:	add	r3, r2, r3
   16848:	mov	r2, #36	; 0x24
   1684c:	strb	r2, [r3]
   16850:	ldr	r3, [fp, #-20]	; 0xffffffec
   16854:	add	r3, r3, #1
   16858:	str	r3, [fp, #-20]	; 0xffffffec
   1685c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16860:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16864:	cmp	r2, r3
   16868:	bcs	16880 <__assert_fail@plt+0x533c>
   1686c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16870:	ldr	r3, [fp, #-20]	; 0xffffffec
   16874:	add	r3, r2, r3
   16878:	mov	r2, #39	; 0x27
   1687c:	strb	r2, [r3]
   16880:	ldr	r3, [fp, #-20]	; 0xffffffec
   16884:	add	r3, r3, #1
   16888:	str	r3, [fp, #-20]	; 0xffffffec
   1688c:	mov	r3, #1
   16890:	strb	r3, [fp, #-35]	; 0xffffffdd
   16894:	ldr	r2, [fp, #-20]	; 0xffffffec
   16898:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1689c:	cmp	r2, r3
   168a0:	bcs	168b8 <__assert_fail@plt+0x5374>
   168a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   168a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   168ac:	add	r3, r2, r3
   168b0:	mov	r2, #92	; 0x5c
   168b4:	strb	r2, [r3]
   168b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   168bc:	add	r3, r3, #1
   168c0:	str	r3, [fp, #-20]	; 0xffffffec
   168c4:	b	168dc <__assert_fail@plt+0x5398>
   168c8:	nop			; (mov r0, r0)
   168cc:	b	168dc <__assert_fail@plt+0x5398>
   168d0:	nop			; (mov r0, r0)
   168d4:	b	168dc <__assert_fail@plt+0x5398>
   168d8:	nop			; (mov r0, r0)
   168dc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   168e0:	cmp	r3, #0
   168e4:	beq	16964 <__assert_fail@plt+0x5420>
   168e8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   168ec:	eor	r3, r3, #1
   168f0:	uxtb	r3, r3
   168f4:	cmp	r3, #0
   168f8:	beq	16964 <__assert_fail@plt+0x5420>
   168fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16900:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16904:	cmp	r2, r3
   16908:	bcs	16920 <__assert_fail@plt+0x53dc>
   1690c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16910:	ldr	r3, [fp, #-20]	; 0xffffffec
   16914:	add	r3, r2, r3
   16918:	mov	r2, #39	; 0x27
   1691c:	strb	r2, [r3]
   16920:	ldr	r3, [fp, #-20]	; 0xffffffec
   16924:	add	r3, r3, #1
   16928:	str	r3, [fp, #-20]	; 0xffffffec
   1692c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16930:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16934:	cmp	r2, r3
   16938:	bcs	16950 <__assert_fail@plt+0x540c>
   1693c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16940:	ldr	r3, [fp, #-20]	; 0xffffffec
   16944:	add	r3, r2, r3
   16948:	mov	r2, #39	; 0x27
   1694c:	strb	r2, [r3]
   16950:	ldr	r3, [fp, #-20]	; 0xffffffec
   16954:	add	r3, r3, #1
   16958:	str	r3, [fp, #-20]	; 0xffffffec
   1695c:	mov	r3, #0
   16960:	strb	r3, [fp, #-35]	; 0xffffffdd
   16964:	ldr	r2, [fp, #-20]	; 0xffffffec
   16968:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1696c:	cmp	r2, r3
   16970:	bcs	16988 <__assert_fail@plt+0x5444>
   16974:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1697c:	add	r3, r2, r3
   16980:	ldrb	r2, [fp, #-38]	; 0xffffffda
   16984:	strb	r2, [r3]
   16988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1698c:	add	r3, r3, #1
   16990:	str	r3, [fp, #-20]	; 0xffffffec
   16994:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   16998:	eor	r3, r3, #1
   1699c:	uxtb	r3, r3
   169a0:	cmp	r3, #0
   169a4:	beq	169b0 <__assert_fail@plt+0x546c>
   169a8:	mov	r3, #0
   169ac:	strb	r3, [fp, #-37]	; 0xffffffdb
   169b0:	ldr	r3, [fp, #-16]
   169b4:	add	r3, r3, #1
   169b8:	str	r3, [fp, #-16]
   169bc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169c0:	cmn	r3, #1
   169c4:	bne	169ec <__assert_fail@plt+0x54a8>
   169c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   169cc:	ldr	r3, [fp, #-16]
   169d0:	add	r3, r2, r3
   169d4:	ldrb	r3, [r3]
   169d8:	cmp	r3, #0
   169dc:	movne	r3, #1
   169e0:	moveq	r3, #0
   169e4:	uxtb	r3, r3
   169e8:	b	16a04 <__assert_fail@plt+0x54c0>
   169ec:	ldr	r2, [fp, #-16]
   169f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   169f4:	cmp	r2, r3
   169f8:	movne	r3, #1
   169fc:	moveq	r3, #0
   16a00:	uxtb	r3, r3
   16a04:	cmp	r3, #0
   16a08:	bne	15830 <__assert_fail@plt+0x42ec>
   16a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a10:	cmp	r3, #0
   16a14:	bne	16a30 <__assert_fail@plt+0x54ec>
   16a18:	ldr	r3, [fp, #4]
   16a1c:	cmp	r3, #2
   16a20:	bne	16a30 <__assert_fail@plt+0x54ec>
   16a24:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16a28:	cmp	r3, #0
   16a2c:	bne	16bb8 <__assert_fail@plt+0x5674>
   16a30:	ldr	r3, [fp, #4]
   16a34:	cmp	r3, #2
   16a38:	bne	16ad8 <__assert_fail@plt+0x5594>
   16a3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16a40:	eor	r3, r3, #1
   16a44:	uxtb	r3, r3
   16a48:	cmp	r3, #0
   16a4c:	beq	16ad8 <__assert_fail@plt+0x5594>
   16a50:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   16a54:	cmp	r3, #0
   16a58:	beq	16ad8 <__assert_fail@plt+0x5594>
   16a5c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   16a60:	cmp	r3, #0
   16a64:	beq	16aac <__assert_fail@plt+0x5568>
   16a68:	ldr	r3, [fp, #20]
   16a6c:	str	r3, [sp, #16]
   16a70:	ldr	r3, [fp, #16]
   16a74:	str	r3, [sp, #12]
   16a78:	ldr	r3, [fp, #12]
   16a7c:	str	r3, [sp, #8]
   16a80:	ldr	r3, [fp, #8]
   16a84:	str	r3, [sp, #4]
   16a88:	mov	r3, #5
   16a8c:	str	r3, [sp]
   16a90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16aa0:	bl	15580 <__assert_fail@plt+0x403c>
   16aa4:	mov	r3, r0
   16aa8:	b	16c20 <__assert_fail@plt+0x56dc>
   16aac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16ab0:	cmp	r3, #0
   16ab4:	bne	16ad8 <__assert_fail@plt+0x5594>
   16ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16abc:	cmp	r3, #0
   16ac0:	beq	16ad8 <__assert_fail@plt+0x5594>
   16ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ac8:	str	r3, [fp, #-92]	; 0xffffffa4
   16acc:	mov	r3, #0
   16ad0:	str	r3, [fp, #-20]	; 0xffffffec
   16ad4:	b	1560c <__assert_fail@plt+0x40c8>
   16ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16adc:	cmp	r3, #0
   16ae0:	beq	16b4c <__assert_fail@plt+0x5608>
   16ae4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   16ae8:	eor	r3, r3, #1
   16aec:	uxtb	r3, r3
   16af0:	cmp	r3, #0
   16af4:	beq	16b4c <__assert_fail@plt+0x5608>
   16af8:	b	16b3c <__assert_fail@plt+0x55f8>
   16afc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b04:	cmp	r2, r3
   16b08:	bcs	16b24 <__assert_fail@plt+0x55e0>
   16b0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b14:	add	r3, r2, r3
   16b18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16b1c:	ldrb	r2, [r2]
   16b20:	strb	r2, [r3]
   16b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b28:	add	r3, r3, #1
   16b2c:	str	r3, [fp, #-20]	; 0xffffffec
   16b30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b34:	add	r3, r3, #1
   16b38:	str	r3, [fp, #-28]	; 0xffffffe4
   16b3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b40:	ldrb	r3, [r3]
   16b44:	cmp	r3, #0
   16b48:	bne	16afc <__assert_fail@plt+0x55b8>
   16b4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b54:	cmp	r2, r3
   16b58:	bcs	16b70 <__assert_fail@plt+0x562c>
   16b5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b64:	add	r3, r2, r3
   16b68:	mov	r2, #0
   16b6c:	strb	r2, [r3]
   16b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b74:	b	16c20 <__assert_fail@plt+0x56dc>
   16b78:	nop			; (mov r0, r0)
   16b7c:	b	16bbc <__assert_fail@plt+0x5678>
   16b80:	nop			; (mov r0, r0)
   16b84:	b	16bbc <__assert_fail@plt+0x5678>
   16b88:	nop			; (mov r0, r0)
   16b8c:	b	16bbc <__assert_fail@plt+0x5678>
   16b90:	nop			; (mov r0, r0)
   16b94:	b	16bbc <__assert_fail@plt+0x5678>
   16b98:	nop			; (mov r0, r0)
   16b9c:	b	16bbc <__assert_fail@plt+0x5678>
   16ba0:	nop			; (mov r0, r0)
   16ba4:	b	16bbc <__assert_fail@plt+0x5678>
   16ba8:	nop			; (mov r0, r0)
   16bac:	b	16bbc <__assert_fail@plt+0x5678>
   16bb0:	nop			; (mov r0, r0)
   16bb4:	b	16bbc <__assert_fail@plt+0x5678>
   16bb8:	nop			; (mov r0, r0)
   16bbc:	ldr	r3, [fp, #4]
   16bc0:	cmp	r3, #2
   16bc4:	bne	16bdc <__assert_fail@plt+0x5698>
   16bc8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   16bcc:	cmp	r3, #0
   16bd0:	beq	16bdc <__assert_fail@plt+0x5698>
   16bd4:	mov	r3, #4
   16bd8:	str	r3, [fp, #4]
   16bdc:	ldr	r3, [fp, #8]
   16be0:	bic	r3, r3, #2
   16be4:	ldr	r2, [fp, #20]
   16be8:	str	r2, [sp, #16]
   16bec:	ldr	r2, [fp, #16]
   16bf0:	str	r2, [sp, #12]
   16bf4:	mov	r2, #0
   16bf8:	str	r2, [sp, #8]
   16bfc:	str	r3, [sp, #4]
   16c00:	ldr	r3, [fp, #4]
   16c04:	str	r3, [sp]
   16c08:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16c0c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16c10:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16c14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16c18:	bl	15580 <__assert_fail@plt+0x403c>
   16c1c:	mov	r3, r0
   16c20:	mov	r0, r3
   16c24:	sub	sp, fp, #8
   16c28:	pop	{r4, fp, pc}
   16c2c:	push	{fp, lr}
   16c30:	add	fp, sp, #4
   16c34:	sub	sp, sp, #56	; 0x38
   16c38:	str	r0, [fp, #-24]	; 0xffffffe8
   16c3c:	str	r1, [fp, #-28]	; 0xffffffe4
   16c40:	str	r2, [fp, #-32]	; 0xffffffe0
   16c44:	str	r3, [fp, #-36]	; 0xffffffdc
   16c48:	ldr	r3, [fp, #4]
   16c4c:	cmp	r3, #0
   16c50:	beq	16c5c <__assert_fail@plt+0x5718>
   16c54:	ldr	r3, [fp, #4]
   16c58:	b	16c60 <__assert_fail@plt+0x571c>
   16c5c:	ldr	r3, [pc, #132]	; 16ce8 <__assert_fail@plt+0x57a4>
   16c60:	str	r3, [fp, #-8]
   16c64:	bl	11418 <__errno_location@plt>
   16c68:	mov	r3, r0
   16c6c:	ldr	r3, [r3]
   16c70:	str	r3, [fp, #-12]
   16c74:	ldr	r3, [fp, #-8]
   16c78:	ldr	r3, [r3]
   16c7c:	ldr	r2, [fp, #-8]
   16c80:	ldr	r2, [r2, #4]
   16c84:	ldr	r1, [fp, #-8]
   16c88:	add	r1, r1, #8
   16c8c:	ldr	r0, [fp, #-8]
   16c90:	ldr	r0, [r0, #40]	; 0x28
   16c94:	ldr	ip, [fp, #-8]
   16c98:	ldr	ip, [ip, #44]	; 0x2c
   16c9c:	str	ip, [sp, #16]
   16ca0:	str	r0, [sp, #12]
   16ca4:	str	r1, [sp, #8]
   16ca8:	str	r2, [sp, #4]
   16cac:	str	r3, [sp]
   16cb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16cb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16cb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cc0:	bl	15580 <__assert_fail@plt+0x403c>
   16cc4:	str	r0, [fp, #-16]
   16cc8:	bl	11418 <__errno_location@plt>
   16ccc:	mov	r2, r0
   16cd0:	ldr	r3, [fp, #-12]
   16cd4:	str	r3, [r2]
   16cd8:	ldr	r3, [fp, #-16]
   16cdc:	mov	r0, r3
   16ce0:	sub	sp, fp, #4
   16ce4:	pop	{fp, pc}
   16ce8:	andeq	r7, r4, r4, asr #5
   16cec:	push	{fp, lr}
   16cf0:	add	fp, sp, #4
   16cf4:	sub	sp, sp, #16
   16cf8:	str	r0, [fp, #-8]
   16cfc:	str	r1, [fp, #-12]
   16d00:	str	r2, [fp, #-16]
   16d04:	ldr	r3, [fp, #-16]
   16d08:	mov	r2, #0
   16d0c:	ldr	r1, [fp, #-12]
   16d10:	ldr	r0, [fp, #-8]
   16d14:	bl	16d28 <__assert_fail@plt+0x57e4>
   16d18:	mov	r3, r0
   16d1c:	mov	r0, r3
   16d20:	sub	sp, fp, #4
   16d24:	pop	{fp, pc}
   16d28:	push	{fp, lr}
   16d2c:	add	fp, sp, #4
   16d30:	sub	sp, sp, #64	; 0x40
   16d34:	str	r0, [fp, #-32]	; 0xffffffe0
   16d38:	str	r1, [fp, #-36]	; 0xffffffdc
   16d3c:	str	r2, [fp, #-40]	; 0xffffffd8
   16d40:	str	r3, [fp, #-44]	; 0xffffffd4
   16d44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d48:	cmp	r3, #0
   16d4c:	beq	16d58 <__assert_fail@plt+0x5814>
   16d50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d54:	b	16d5c <__assert_fail@plt+0x5818>
   16d58:	ldr	r3, [pc, #292]	; 16e84 <__assert_fail@plt+0x5940>
   16d5c:	str	r3, [fp, #-8]
   16d60:	bl	11418 <__errno_location@plt>
   16d64:	mov	r3, r0
   16d68:	ldr	r3, [r3]
   16d6c:	str	r3, [fp, #-12]
   16d70:	ldr	r3, [fp, #-8]
   16d74:	ldr	r3, [r3, #4]
   16d78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d7c:	cmp	r2, #0
   16d80:	moveq	r2, #1
   16d84:	movne	r2, #0
   16d88:	uxtb	r2, r2
   16d8c:	orr	r3, r3, r2
   16d90:	str	r3, [fp, #-16]
   16d94:	ldr	r3, [fp, #-8]
   16d98:	ldr	r3, [r3]
   16d9c:	ldr	r2, [fp, #-8]
   16da0:	add	r2, r2, #8
   16da4:	ldr	r1, [fp, #-8]
   16da8:	ldr	r1, [r1, #40]	; 0x28
   16dac:	ldr	r0, [fp, #-8]
   16db0:	ldr	r0, [r0, #44]	; 0x2c
   16db4:	str	r0, [sp, #16]
   16db8:	str	r1, [sp, #12]
   16dbc:	str	r2, [sp, #8]
   16dc0:	ldr	r2, [fp, #-16]
   16dc4:	str	r2, [sp, #4]
   16dc8:	str	r3, [sp]
   16dcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16dd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16dd4:	mov	r1, #0
   16dd8:	mov	r0, #0
   16ddc:	bl	15580 <__assert_fail@plt+0x403c>
   16de0:	mov	r3, r0
   16de4:	add	r3, r3, #1
   16de8:	str	r3, [fp, #-20]	; 0xffffffec
   16dec:	ldr	r0, [fp, #-20]	; 0xffffffec
   16df0:	bl	313bc <__assert_fail@plt+0x1fe78>
   16df4:	mov	r3, r0
   16df8:	str	r3, [fp, #-24]	; 0xffffffe8
   16dfc:	ldr	r3, [fp, #-8]
   16e00:	ldr	r3, [r3]
   16e04:	ldr	r2, [fp, #-8]
   16e08:	add	r2, r2, #8
   16e0c:	ldr	r1, [fp, #-8]
   16e10:	ldr	r1, [r1, #40]	; 0x28
   16e14:	ldr	r0, [fp, #-8]
   16e18:	ldr	r0, [r0, #44]	; 0x2c
   16e1c:	str	r0, [sp, #16]
   16e20:	str	r1, [sp, #12]
   16e24:	str	r2, [sp, #8]
   16e28:	ldr	r2, [fp, #-16]
   16e2c:	str	r2, [sp, #4]
   16e30:	str	r3, [sp]
   16e34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e44:	bl	15580 <__assert_fail@plt+0x403c>
   16e48:	bl	11418 <__errno_location@plt>
   16e4c:	mov	r2, r0
   16e50:	ldr	r3, [fp, #-12]
   16e54:	str	r3, [r2]
   16e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16e5c:	cmp	r3, #0
   16e60:	beq	16e74 <__assert_fail@plt+0x5930>
   16e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e68:	sub	r2, r3, #1
   16e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16e70:	str	r2, [r3]
   16e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e78:	mov	r0, r3
   16e7c:	sub	sp, fp, #4
   16e80:	pop	{fp, pc}
   16e84:	andeq	r7, r4, r4, asr #5
   16e88:	push	{fp, lr}
   16e8c:	add	fp, sp, #4
   16e90:	sub	sp, sp, #8
   16e94:	ldr	r3, [pc, #196]	; 16f60 <__assert_fail@plt+0x5a1c>
   16e98:	ldr	r3, [r3]
   16e9c:	str	r3, [fp, #-12]
   16ea0:	mov	r3, #1
   16ea4:	str	r3, [fp, #-8]
   16ea8:	b	16ed4 <__assert_fail@plt+0x5990>
   16eac:	ldr	r3, [fp, #-8]
   16eb0:	lsl	r3, r3, #3
   16eb4:	ldr	r2, [fp, #-12]
   16eb8:	add	r3, r2, r3
   16ebc:	ldr	r3, [r3, #4]
   16ec0:	mov	r0, r3
   16ec4:	bl	14dec <__assert_fail@plt+0x38a8>
   16ec8:	ldr	r3, [fp, #-8]
   16ecc:	add	r3, r3, #1
   16ed0:	str	r3, [fp, #-8]
   16ed4:	ldr	r3, [pc, #136]	; 16f64 <__assert_fail@plt+0x5a20>
   16ed8:	ldr	r3, [r3]
   16edc:	ldr	r2, [fp, #-8]
   16ee0:	cmp	r2, r3
   16ee4:	blt	16eac <__assert_fail@plt+0x5968>
   16ee8:	ldr	r3, [fp, #-12]
   16eec:	ldr	r3, [r3, #4]
   16ef0:	ldr	r2, [pc, #112]	; 16f68 <__assert_fail@plt+0x5a24>
   16ef4:	cmp	r3, r2
   16ef8:	beq	16f24 <__assert_fail@plt+0x59e0>
   16efc:	ldr	r3, [fp, #-12]
   16f00:	ldr	r3, [r3, #4]
   16f04:	mov	r0, r3
   16f08:	bl	14dec <__assert_fail@plt+0x38a8>
   16f0c:	ldr	r3, [pc, #88]	; 16f6c <__assert_fail@plt+0x5a28>
   16f10:	mov	r2, #256	; 0x100
   16f14:	str	r2, [r3]
   16f18:	ldr	r3, [pc, #76]	; 16f6c <__assert_fail@plt+0x5a28>
   16f1c:	ldr	r2, [pc, #68]	; 16f68 <__assert_fail@plt+0x5a24>
   16f20:	str	r2, [r3, #4]
   16f24:	ldr	r3, [fp, #-12]
   16f28:	ldr	r2, [pc, #60]	; 16f6c <__assert_fail@plt+0x5a28>
   16f2c:	cmp	r3, r2
   16f30:	beq	16f48 <__assert_fail@plt+0x5a04>
   16f34:	ldr	r0, [fp, #-12]
   16f38:	bl	14dec <__assert_fail@plt+0x38a8>
   16f3c:	ldr	r3, [pc, #28]	; 16f60 <__assert_fail@plt+0x5a1c>
   16f40:	ldr	r2, [pc, #36]	; 16f6c <__assert_fail@plt+0x5a28>
   16f44:	str	r2, [r3]
   16f48:	ldr	r3, [pc, #20]	; 16f64 <__assert_fail@plt+0x5a20>
   16f4c:	mov	r2, #1
   16f50:	str	r2, [r3]
   16f54:	nop			; (mov r0, r0)
   16f58:	sub	sp, fp, #4
   16f5c:	pop	{fp, pc}
   16f60:	andeq	r7, r4, r8, ror r1
   16f64:	andeq	r7, r4, ip, ror #2
   16f68:	strdeq	r7, [r4], -r4
   16f6c:	andeq	r7, r4, r0, ror r1
   16f70:	push	{r4, fp, lr}
   16f74:	add	fp, sp, #8
   16f78:	sub	sp, sp, #84	; 0x54
   16f7c:	str	r0, [fp, #-56]	; 0xffffffc8
   16f80:	str	r1, [fp, #-60]	; 0xffffffc4
   16f84:	str	r2, [fp, #-64]	; 0xffffffc0
   16f88:	str	r3, [fp, #-68]	; 0xffffffbc
   16f8c:	bl	11418 <__errno_location@plt>
   16f90:	mov	r3, r0
   16f94:	ldr	r3, [r3]
   16f98:	str	r3, [fp, #-24]	; 0xffffffe8
   16f9c:	ldr	r3, [pc, #640]	; 17224 <__assert_fail@plt+0x5ce0>
   16fa0:	ldr	r3, [r3]
   16fa4:	str	r3, [fp, #-16]
   16fa8:	mvn	r3, #-2147483648	; 0x80000000
   16fac:	str	r3, [fp, #-28]	; 0xffffffe4
   16fb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fb4:	cmp	r3, #0
   16fb8:	blt	16fcc <__assert_fail@plt+0x5a88>
   16fbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16fc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16fc4:	cmp	r2, r3
   16fc8:	blt	16fd0 <__assert_fail@plt+0x5a8c>
   16fcc:	bl	1152c <abort@plt>
   16fd0:	ldr	r3, [pc, #592]	; 17228 <__assert_fail@plt+0x5ce4>
   16fd4:	ldr	r2, [r3]
   16fd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fdc:	cmp	r2, r3
   16fe0:	bgt	170b4 <__assert_fail@plt+0x5b70>
   16fe4:	ldr	r3, [fp, #-16]
   16fe8:	ldr	r2, [pc, #572]	; 1722c <__assert_fail@plt+0x5ce8>
   16fec:	cmp	r3, r2
   16ff0:	moveq	r3, #1
   16ff4:	movne	r3, #0
   16ff8:	strb	r3, [fp, #-29]	; 0xffffffe3
   16ffc:	ldr	r3, [pc, #548]	; 17228 <__assert_fail@plt+0x5ce4>
   17000:	ldr	r3, [r3]
   17004:	str	r3, [fp, #-48]	; 0xffffffd0
   17008:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1700c:	cmp	r3, #0
   17010:	beq	1701c <__assert_fail@plt+0x5ad8>
   17014:	mov	r0, #0
   17018:	b	17020 <__assert_fail@plt+0x5adc>
   1701c:	ldr	r0, [fp, #-16]
   17020:	ldr	r3, [pc, #512]	; 17228 <__assert_fail@plt+0x5ce4>
   17024:	ldr	r3, [r3]
   17028:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1702c:	sub	r3, r2, r3
   17030:	add	r2, r3, #1
   17034:	sub	r1, fp, #48	; 0x30
   17038:	mov	r3, #8
   1703c:	str	r3, [sp]
   17040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17044:	bl	316dc <__assert_fail@plt+0x20198>
   17048:	str	r0, [fp, #-16]
   1704c:	ldr	r2, [pc, #464]	; 17224 <__assert_fail@plt+0x5ce0>
   17050:	ldr	r3, [fp, #-16]
   17054:	str	r3, [r2]
   17058:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1705c:	cmp	r3, #0
   17060:	beq	17074 <__assert_fail@plt+0x5b30>
   17064:	ldr	r3, [fp, #-16]
   17068:	ldr	r2, [pc, #444]	; 1722c <__assert_fail@plt+0x5ce8>
   1706c:	ldm	r2, {r0, r1}
   17070:	stm	r3, {r0, r1}
   17074:	ldr	r3, [pc, #428]	; 17228 <__assert_fail@plt+0x5ce4>
   17078:	ldr	r3, [r3]
   1707c:	lsl	r3, r3, #3
   17080:	ldr	r2, [fp, #-16]
   17084:	add	r0, r2, r3
   17088:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1708c:	ldr	r3, [pc, #404]	; 17228 <__assert_fail@plt+0x5ce4>
   17090:	ldr	r3, [r3]
   17094:	sub	r3, r2, r3
   17098:	lsl	r3, r3, #3
   1709c:	mov	r2, r3
   170a0:	mov	r1, #0
   170a4:	bl	11448 <memset@plt>
   170a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   170ac:	ldr	r2, [pc, #372]	; 17228 <__assert_fail@plt+0x5ce4>
   170b0:	str	r3, [r2]
   170b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   170b8:	lsl	r3, r3, #3
   170bc:	ldr	r2, [fp, #-16]
   170c0:	add	r3, r2, r3
   170c4:	ldr	r3, [r3]
   170c8:	str	r3, [fp, #-36]	; 0xffffffdc
   170cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   170d0:	lsl	r3, r3, #3
   170d4:	ldr	r2, [fp, #-16]
   170d8:	add	r3, r2, r3
   170dc:	ldr	r3, [r3, #4]
   170e0:	str	r3, [fp, #-20]	; 0xffffffec
   170e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   170e8:	ldr	r3, [r3, #4]
   170ec:	orr	r3, r3, #1
   170f0:	str	r3, [fp, #-40]	; 0xffffffd8
   170f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   170f8:	ldr	r3, [r3]
   170fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17100:	add	r2, r2, #8
   17104:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17108:	ldr	r1, [r1, #40]	; 0x28
   1710c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17110:	ldr	r0, [r0, #44]	; 0x2c
   17114:	str	r0, [sp, #16]
   17118:	str	r1, [sp, #12]
   1711c:	str	r2, [sp, #8]
   17120:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17124:	str	r2, [sp, #4]
   17128:	str	r3, [sp]
   1712c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17130:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17134:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17138:	ldr	r0, [fp, #-20]	; 0xffffffec
   1713c:	bl	15580 <__assert_fail@plt+0x403c>
   17140:	str	r0, [fp, #-44]	; 0xffffffd4
   17144:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1714c:	cmp	r2, r3
   17150:	bhi	17204 <__assert_fail@plt+0x5cc0>
   17154:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17158:	lsl	r3, r3, #3
   1715c:	ldr	r2, [fp, #-16]
   17160:	add	r3, r2, r3
   17164:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17168:	add	r2, r2, #1
   1716c:	str	r2, [fp, #-36]	; 0xffffffdc
   17170:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17174:	str	r2, [r3]
   17178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1717c:	ldr	r2, [pc, #172]	; 17230 <__assert_fail@plt+0x5cec>
   17180:	cmp	r3, r2
   17184:	beq	17190 <__assert_fail@plt+0x5c4c>
   17188:	ldr	r0, [fp, #-20]	; 0xffffffec
   1718c:	bl	14dec <__assert_fail@plt+0x38a8>
   17190:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17194:	lsl	r3, r3, #3
   17198:	ldr	r2, [fp, #-16]
   1719c:	add	r4, r2, r3
   171a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171a4:	bl	313bc <__assert_fail@plt+0x1fe78>
   171a8:	mov	r3, r0
   171ac:	str	r3, [fp, #-20]	; 0xffffffec
   171b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171b4:	str	r3, [r4, #4]
   171b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171bc:	ldr	r3, [r3]
   171c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   171c4:	add	r2, r2, #8
   171c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   171cc:	ldr	r1, [r1, #40]	; 0x28
   171d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   171d4:	ldr	r0, [r0, #44]	; 0x2c
   171d8:	str	r0, [sp, #16]
   171dc:	str	r1, [sp, #12]
   171e0:	str	r2, [sp, #8]
   171e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   171e8:	str	r2, [sp, #4]
   171ec:	str	r3, [sp]
   171f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   171f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   171f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   171fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17200:	bl	15580 <__assert_fail@plt+0x403c>
   17204:	bl	11418 <__errno_location@plt>
   17208:	mov	r2, r0
   1720c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17210:	str	r3, [r2]
   17214:	ldr	r3, [fp, #-20]	; 0xffffffec
   17218:	mov	r0, r3
   1721c:	sub	sp, fp, #8
   17220:	pop	{r4, fp, pc}
   17224:	andeq	r7, r4, r8, ror r1
   17228:	andeq	r7, r4, ip, ror #2
   1722c:	andeq	r7, r4, r0, ror r1
   17230:	strdeq	r7, [r4], -r4
   17234:	push	{fp, lr}
   17238:	add	fp, sp, #4
   1723c:	sub	sp, sp, #8
   17240:	str	r0, [fp, #-8]
   17244:	str	r1, [fp, #-12]
   17248:	ldr	r3, [pc, #28]	; 1726c <__assert_fail@plt+0x5d28>
   1724c:	mvn	r2, #0
   17250:	ldr	r1, [fp, #-12]
   17254:	ldr	r0, [fp, #-8]
   17258:	bl	16f70 <__assert_fail@plt+0x5a2c>
   1725c:	mov	r3, r0
   17260:	mov	r0, r3
   17264:	sub	sp, fp, #4
   17268:	pop	{fp, pc}
   1726c:	andeq	r7, r4, r4, asr #5
   17270:	push	{fp, lr}
   17274:	add	fp, sp, #4
   17278:	sub	sp, sp, #16
   1727c:	str	r0, [fp, #-8]
   17280:	str	r1, [fp, #-12]
   17284:	str	r2, [fp, #-16]
   17288:	ldr	r3, [pc, #28]	; 172ac <__assert_fail@plt+0x5d68>
   1728c:	ldr	r2, [fp, #-16]
   17290:	ldr	r1, [fp, #-12]
   17294:	ldr	r0, [fp, #-8]
   17298:	bl	16f70 <__assert_fail@plt+0x5a2c>
   1729c:	mov	r3, r0
   172a0:	mov	r0, r3
   172a4:	sub	sp, fp, #4
   172a8:	pop	{fp, pc}
   172ac:	andeq	r7, r4, r4, asr #5
   172b0:	push	{fp, lr}
   172b4:	add	fp, sp, #4
   172b8:	sub	sp, sp, #8
   172bc:	str	r0, [fp, #-8]
   172c0:	ldr	r1, [fp, #-8]
   172c4:	mov	r0, #0
   172c8:	bl	17234 <__assert_fail@plt+0x5cf0>
   172cc:	mov	r3, r0
   172d0:	mov	r0, r3
   172d4:	sub	sp, fp, #4
   172d8:	pop	{fp, pc}
   172dc:	push	{fp, lr}
   172e0:	add	fp, sp, #4
   172e4:	sub	sp, sp, #8
   172e8:	str	r0, [fp, #-8]
   172ec:	str	r1, [fp, #-12]
   172f0:	ldr	r2, [fp, #-12]
   172f4:	ldr	r1, [fp, #-8]
   172f8:	mov	r0, #0
   172fc:	bl	17270 <__assert_fail@plt+0x5d2c>
   17300:	mov	r3, r0
   17304:	mov	r0, r3
   17308:	sub	sp, fp, #4
   1730c:	pop	{fp, pc}
   17310:	push	{fp, lr}
   17314:	add	fp, sp, #4
   17318:	sub	sp, sp, #64	; 0x40
   1731c:	str	r0, [fp, #-56]	; 0xffffffc8
   17320:	str	r1, [fp, #-60]	; 0xffffffc4
   17324:	str	r2, [fp, #-64]	; 0xffffffc0
   17328:	sub	r3, fp, #52	; 0x34
   1732c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17330:	mov	r0, r3
   17334:	bl	1541c <__assert_fail@plt+0x3ed8>
   17338:	sub	r3, fp, #52	; 0x34
   1733c:	mvn	r2, #0
   17340:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17344:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17348:	bl	16f70 <__assert_fail@plt+0x5a2c>
   1734c:	mov	r3, r0
   17350:	mov	r0, r3
   17354:	sub	sp, fp, #4
   17358:	pop	{fp, pc}
   1735c:	push	{fp, lr}
   17360:	add	fp, sp, #4
   17364:	sub	sp, sp, #64	; 0x40
   17368:	str	r0, [fp, #-56]	; 0xffffffc8
   1736c:	str	r1, [fp, #-60]	; 0xffffffc4
   17370:	str	r2, [fp, #-64]	; 0xffffffc0
   17374:	str	r3, [fp, #-68]	; 0xffffffbc
   17378:	sub	r3, fp, #52	; 0x34
   1737c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17380:	mov	r0, r3
   17384:	bl	1541c <__assert_fail@plt+0x3ed8>
   17388:	sub	r3, fp, #52	; 0x34
   1738c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17390:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17394:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17398:	bl	16f70 <__assert_fail@plt+0x5a2c>
   1739c:	mov	r3, r0
   173a0:	mov	r0, r3
   173a4:	sub	sp, fp, #4
   173a8:	pop	{fp, pc}
   173ac:	push	{fp, lr}
   173b0:	add	fp, sp, #4
   173b4:	sub	sp, sp, #8
   173b8:	str	r0, [fp, #-8]
   173bc:	str	r1, [fp, #-12]
   173c0:	ldr	r2, [fp, #-12]
   173c4:	ldr	r1, [fp, #-8]
   173c8:	mov	r0, #0
   173cc:	bl	17310 <__assert_fail@plt+0x5dcc>
   173d0:	mov	r3, r0
   173d4:	mov	r0, r3
   173d8:	sub	sp, fp, #4
   173dc:	pop	{fp, pc}
   173e0:	push	{fp, lr}
   173e4:	add	fp, sp, #4
   173e8:	sub	sp, sp, #16
   173ec:	str	r0, [fp, #-8]
   173f0:	str	r1, [fp, #-12]
   173f4:	str	r2, [fp, #-16]
   173f8:	ldr	r3, [fp, #-16]
   173fc:	ldr	r2, [fp, #-12]
   17400:	ldr	r1, [fp, #-8]
   17404:	mov	r0, #0
   17408:	bl	1735c <__assert_fail@plt+0x5e18>
   1740c:	mov	r3, r0
   17410:	mov	r0, r3
   17414:	sub	sp, fp, #4
   17418:	pop	{fp, pc}
   1741c:	push	{fp, lr}
   17420:	add	fp, sp, #4
   17424:	sub	sp, sp, #64	; 0x40
   17428:	str	r0, [fp, #-56]	; 0xffffffc8
   1742c:	str	r1, [fp, #-60]	; 0xffffffc4
   17430:	mov	r3, r2
   17434:	strb	r3, [fp, #-61]	; 0xffffffc3
   17438:	ldr	r3, [pc, #84]	; 17494 <__assert_fail@plt+0x5f50>
   1743c:	sub	ip, fp, #52	; 0x34
   17440:	mov	lr, r3
   17444:	ldm	lr!, {r0, r1, r2, r3}
   17448:	stmia	ip!, {r0, r1, r2, r3}
   1744c:	ldm	lr!, {r0, r1, r2, r3}
   17450:	stmia	ip!, {r0, r1, r2, r3}
   17454:	ldm	lr, {r0, r1, r2, r3}
   17458:	stm	ip, {r0, r1, r2, r3}
   1745c:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   17460:	sub	r3, fp, #52	; 0x34
   17464:	mov	r2, #1
   17468:	mov	r0, r3
   1746c:	bl	15288 <__assert_fail@plt+0x3d44>
   17470:	sub	r3, fp, #52	; 0x34
   17474:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17478:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1747c:	mov	r0, #0
   17480:	bl	16f70 <__assert_fail@plt+0x5a2c>
   17484:	mov	r3, r0
   17488:	mov	r0, r3
   1748c:	sub	sp, fp, #4
   17490:	pop	{fp, pc}
   17494:	andeq	r7, r4, r4, asr #5
   17498:	push	{fp, lr}
   1749c:	add	fp, sp, #4
   174a0:	sub	sp, sp, #8
   174a4:	str	r0, [fp, #-8]
   174a8:	mov	r3, r1
   174ac:	strb	r3, [fp, #-9]
   174b0:	ldrb	r3, [fp, #-9]
   174b4:	mov	r2, r3
   174b8:	mvn	r1, #0
   174bc:	ldr	r0, [fp, #-8]
   174c0:	bl	1741c <__assert_fail@plt+0x5ed8>
   174c4:	mov	r3, r0
   174c8:	mov	r0, r3
   174cc:	sub	sp, fp, #4
   174d0:	pop	{fp, pc}
   174d4:	push	{fp, lr}
   174d8:	add	fp, sp, #4
   174dc:	sub	sp, sp, #8
   174e0:	str	r0, [fp, #-8]
   174e4:	mov	r1, #58	; 0x3a
   174e8:	ldr	r0, [fp, #-8]
   174ec:	bl	17498 <__assert_fail@plt+0x5f54>
   174f0:	mov	r3, r0
   174f4:	mov	r0, r3
   174f8:	sub	sp, fp, #4
   174fc:	pop	{fp, pc}
   17500:	push	{fp, lr}
   17504:	add	fp, sp, #4
   17508:	sub	sp, sp, #8
   1750c:	str	r0, [fp, #-8]
   17510:	str	r1, [fp, #-12]
   17514:	mov	r2, #58	; 0x3a
   17518:	ldr	r1, [fp, #-12]
   1751c:	ldr	r0, [fp, #-8]
   17520:	bl	1741c <__assert_fail@plt+0x5ed8>
   17524:	mov	r3, r0
   17528:	mov	r0, r3
   1752c:	sub	sp, fp, #4
   17530:	pop	{fp, pc}
   17534:	push	{fp, lr}
   17538:	add	fp, sp, #4
   1753c:	sub	sp, sp, #112	; 0x70
   17540:	str	r0, [fp, #-56]	; 0xffffffc8
   17544:	str	r1, [fp, #-60]	; 0xffffffc4
   17548:	str	r2, [fp, #-64]	; 0xffffffc0
   1754c:	sub	r3, fp, #116	; 0x74
   17550:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17554:	mov	r0, r3
   17558:	bl	1541c <__assert_fail@plt+0x3ed8>
   1755c:	sub	ip, fp, #52	; 0x34
   17560:	sub	lr, fp, #116	; 0x74
   17564:	ldm	lr!, {r0, r1, r2, r3}
   17568:	stmia	ip!, {r0, r1, r2, r3}
   1756c:	ldm	lr!, {r0, r1, r2, r3}
   17570:	stmia	ip!, {r0, r1, r2, r3}
   17574:	ldm	lr, {r0, r1, r2, r3}
   17578:	stm	ip, {r0, r1, r2, r3}
   1757c:	sub	r3, fp, #52	; 0x34
   17580:	mov	r2, #1
   17584:	mov	r1, #58	; 0x3a
   17588:	mov	r0, r3
   1758c:	bl	15288 <__assert_fail@plt+0x3d44>
   17590:	sub	r3, fp, #52	; 0x34
   17594:	mvn	r2, #0
   17598:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1759c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   175a0:	bl	16f70 <__assert_fail@plt+0x5a2c>
   175a4:	mov	r3, r0
   175a8:	mov	r0, r3
   175ac:	sub	sp, fp, #4
   175b0:	pop	{fp, pc}
   175b4:	push	{fp, lr}
   175b8:	add	fp, sp, #4
   175bc:	sub	sp, sp, #24
   175c0:	str	r0, [fp, #-8]
   175c4:	str	r1, [fp, #-12]
   175c8:	str	r2, [fp, #-16]
   175cc:	str	r3, [fp, #-20]	; 0xffffffec
   175d0:	mvn	r3, #0
   175d4:	str	r3, [sp]
   175d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   175dc:	ldr	r2, [fp, #-16]
   175e0:	ldr	r1, [fp, #-12]
   175e4:	ldr	r0, [fp, #-8]
   175e8:	bl	175fc <__assert_fail@plt+0x60b8>
   175ec:	mov	r3, r0
   175f0:	mov	r0, r3
   175f4:	sub	sp, fp, #4
   175f8:	pop	{fp, pc}
   175fc:	push	{fp, lr}
   17600:	add	fp, sp, #4
   17604:	sub	sp, sp, #64	; 0x40
   17608:	str	r0, [fp, #-56]	; 0xffffffc8
   1760c:	str	r1, [fp, #-60]	; 0xffffffc4
   17610:	str	r2, [fp, #-64]	; 0xffffffc0
   17614:	str	r3, [fp, #-68]	; 0xffffffbc
   17618:	ldr	r3, [pc, #84]	; 17674 <__assert_fail@plt+0x6130>
   1761c:	sub	ip, fp, #52	; 0x34
   17620:	mov	lr, r3
   17624:	ldm	lr!, {r0, r1, r2, r3}
   17628:	stmia	ip!, {r0, r1, r2, r3}
   1762c:	ldm	lr!, {r0, r1, r2, r3}
   17630:	stmia	ip!, {r0, r1, r2, r3}
   17634:	ldm	lr, {r0, r1, r2, r3}
   17638:	stm	ip, {r0, r1, r2, r3}
   1763c:	sub	r3, fp, #52	; 0x34
   17640:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17644:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17648:	mov	r0, r3
   1764c:	bl	153a0 <__assert_fail@plt+0x3e5c>
   17650:	sub	r3, fp, #52	; 0x34
   17654:	ldr	r2, [fp, #4]
   17658:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1765c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17660:	bl	16f70 <__assert_fail@plt+0x5a2c>
   17664:	mov	r3, r0
   17668:	mov	r0, r3
   1766c:	sub	sp, fp, #4
   17670:	pop	{fp, pc}
   17674:	andeq	r7, r4, r4, asr #5
   17678:	push	{fp, lr}
   1767c:	add	fp, sp, #4
   17680:	sub	sp, sp, #16
   17684:	str	r0, [fp, #-8]
   17688:	str	r1, [fp, #-12]
   1768c:	str	r2, [fp, #-16]
   17690:	ldr	r3, [fp, #-16]
   17694:	ldr	r2, [fp, #-12]
   17698:	ldr	r1, [fp, #-8]
   1769c:	mov	r0, #0
   176a0:	bl	175b4 <__assert_fail@plt+0x6070>
   176a4:	mov	r3, r0
   176a8:	mov	r0, r3
   176ac:	sub	sp, fp, #4
   176b0:	pop	{fp, pc}
   176b4:	push	{fp, lr}
   176b8:	add	fp, sp, #4
   176bc:	sub	sp, sp, #24
   176c0:	str	r0, [fp, #-8]
   176c4:	str	r1, [fp, #-12]
   176c8:	str	r2, [fp, #-16]
   176cc:	str	r3, [fp, #-20]	; 0xffffffec
   176d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   176d4:	str	r3, [sp]
   176d8:	ldr	r3, [fp, #-16]
   176dc:	ldr	r2, [fp, #-12]
   176e0:	ldr	r1, [fp, #-8]
   176e4:	mov	r0, #0
   176e8:	bl	175fc <__assert_fail@plt+0x60b8>
   176ec:	mov	r3, r0
   176f0:	mov	r0, r3
   176f4:	sub	sp, fp, #4
   176f8:	pop	{fp, pc}
   176fc:	push	{fp, lr}
   17700:	add	fp, sp, #4
   17704:	sub	sp, sp, #16
   17708:	str	r0, [fp, #-8]
   1770c:	str	r1, [fp, #-12]
   17710:	str	r2, [fp, #-16]
   17714:	ldr	r3, [pc, #28]	; 17738 <__assert_fail@plt+0x61f4>
   17718:	ldr	r2, [fp, #-16]
   1771c:	ldr	r1, [fp, #-12]
   17720:	ldr	r0, [fp, #-8]
   17724:	bl	16f70 <__assert_fail@plt+0x5a2c>
   17728:	mov	r3, r0
   1772c:	mov	r0, r3
   17730:	sub	sp, fp, #4
   17734:	pop	{fp, pc}
   17738:	andeq	r7, r4, ip, ror r1
   1773c:	push	{fp, lr}
   17740:	add	fp, sp, #4
   17744:	sub	sp, sp, #8
   17748:	str	r0, [fp, #-8]
   1774c:	str	r1, [fp, #-12]
   17750:	ldr	r2, [fp, #-12]
   17754:	ldr	r1, [fp, #-8]
   17758:	mov	r0, #0
   1775c:	bl	176fc <__assert_fail@plt+0x61b8>
   17760:	mov	r3, r0
   17764:	mov	r0, r3
   17768:	sub	sp, fp, #4
   1776c:	pop	{fp, pc}
   17770:	push	{fp, lr}
   17774:	add	fp, sp, #4
   17778:	sub	sp, sp, #8
   1777c:	str	r0, [fp, #-8]
   17780:	str	r1, [fp, #-12]
   17784:	mvn	r2, #0
   17788:	ldr	r1, [fp, #-12]
   1778c:	ldr	r0, [fp, #-8]
   17790:	bl	176fc <__assert_fail@plt+0x61b8>
   17794:	mov	r3, r0
   17798:	mov	r0, r3
   1779c:	sub	sp, fp, #4
   177a0:	pop	{fp, pc}
   177a4:	push	{fp, lr}
   177a8:	add	fp, sp, #4
   177ac:	sub	sp, sp, #8
   177b0:	str	r0, [fp, #-8]
   177b4:	ldr	r1, [fp, #-8]
   177b8:	mov	r0, #0
   177bc:	bl	17770 <__assert_fail@plt+0x622c>
   177c0:	mov	r3, r0
   177c4:	mov	r0, r3
   177c8:	sub	sp, fp, #4
   177cc:	pop	{fp, pc}
   177d0:	push	{fp}		; (str fp, [sp, #-4]!)
   177d4:	add	fp, sp, #0
   177d8:	mvn	r3, #0
   177dc:	mov	r0, r3
   177e0:	add	sp, fp, #0
   177e4:	pop	{fp}		; (ldr fp, [sp], #4)
   177e8:	bx	lr
   177ec:	push	{fp}		; (str fp, [sp, #-4]!)
   177f0:	add	fp, sp, #0
   177f4:	sub	sp, sp, #12
   177f8:	str	r0, [fp, #-8]
   177fc:	str	r1, [fp, #-12]
   17800:	ldr	r3, [fp, #-12]
   17804:	add	r2, r3, #31
   17808:	cmp	r3, #0
   1780c:	movlt	r3, r2
   17810:	movge	r3, r3
   17814:	asr	r3, r3, #5
   17818:	mov	r0, r3
   1781c:	mov	r3, r0
   17820:	lsl	r3, r3, #2
   17824:	ldr	r2, [fp, #-8]
   17828:	add	r1, r2, r3
   1782c:	mov	r3, r0
   17830:	lsl	r3, r3, #2
   17834:	ldr	r2, [fp, #-8]
   17838:	add	r3, r2, r3
   1783c:	ldr	r0, [r3]
   17840:	ldr	r2, [fp, #-12]
   17844:	asr	r3, r2, #31
   17848:	lsr	r3, r3, #27
   1784c:	add	r2, r2, r3
   17850:	and	r2, r2, #31
   17854:	sub	r3, r2, r3
   17858:	mov	r2, r3
   1785c:	mov	r3, #1
   17860:	lsl	r3, r3, r2
   17864:	orr	r3, r0, r3
   17868:	str	r3, [r1]
   1786c:	nop			; (mov r0, r0)
   17870:	add	sp, fp, #0
   17874:	pop	{fp}		; (ldr fp, [sp], #4)
   17878:	bx	lr
   1787c:	push	{fp}		; (str fp, [sp, #-4]!)
   17880:	add	fp, sp, #0
   17884:	sub	sp, sp, #12
   17888:	str	r0, [fp, #-8]
   1788c:	str	r1, [fp, #-12]
   17890:	ldr	r3, [fp, #-12]
   17894:	add	r2, r3, #31
   17898:	cmp	r3, #0
   1789c:	movlt	r3, r2
   178a0:	movge	r3, r3
   178a4:	asr	r3, r3, #5
   178a8:	mov	r0, r3
   178ac:	mov	r3, r0
   178b0:	lsl	r3, r3, #2
   178b4:	ldr	r2, [fp, #-8]
   178b8:	add	r1, r2, r3
   178bc:	mov	r3, r0
   178c0:	lsl	r3, r3, #2
   178c4:	ldr	r2, [fp, #-8]
   178c8:	add	r3, r2, r3
   178cc:	ldr	r0, [r3]
   178d0:	ldr	r2, [fp, #-12]
   178d4:	asr	r3, r2, #31
   178d8:	lsr	r3, r3, #27
   178dc:	add	r2, r2, r3
   178e0:	and	r2, r2, #31
   178e4:	sub	r3, r2, r3
   178e8:	mov	r2, r3
   178ec:	mov	r3, #1
   178f0:	lsl	r3, r3, r2
   178f4:	mvn	r3, r3
   178f8:	and	r3, r3, r0
   178fc:	str	r3, [r1]
   17900:	nop			; (mov r0, r0)
   17904:	add	sp, fp, #0
   17908:	pop	{fp}		; (ldr fp, [sp], #4)
   1790c:	bx	lr
   17910:	push	{fp}		; (str fp, [sp, #-4]!)
   17914:	add	fp, sp, #0
   17918:	sub	sp, sp, #12
   1791c:	str	r0, [fp, #-8]
   17920:	str	r1, [fp, #-12]
   17924:	ldr	r3, [fp, #-12]
   17928:	add	r2, r3, #31
   1792c:	cmp	r3, #0
   17930:	movlt	r3, r2
   17934:	movge	r3, r3
   17938:	asr	r3, r3, #5
   1793c:	lsl	r3, r3, #2
   17940:	ldr	r2, [fp, #-8]
   17944:	add	r3, r2, r3
   17948:	ldr	r1, [r3]
   1794c:	ldr	r2, [fp, #-12]
   17950:	asr	r3, r2, #31
   17954:	lsr	r3, r3, #27
   17958:	add	r2, r2, r3
   1795c:	and	r2, r2, #31
   17960:	sub	r3, r2, r3
   17964:	lsr	r3, r1, r3
   17968:	and	r3, r3, #1
   1796c:	cmp	r3, #0
   17970:	movne	r3, #1
   17974:	moveq	r3, #0
   17978:	uxtb	r3, r3
   1797c:	mov	r0, r3
   17980:	add	sp, fp, #0
   17984:	pop	{fp}		; (ldr fp, [sp], #4)
   17988:	bx	lr
   1798c:	push	{fp, lr}
   17990:	add	fp, sp, #4
   17994:	sub	sp, sp, #8
   17998:	str	r0, [fp, #-8]
   1799c:	mov	r2, #32
   179a0:	mov	r1, #0
   179a4:	ldr	r0, [fp, #-8]
   179a8:	bl	11448 <memset@plt>
   179ac:	nop			; (mov r0, r0)
   179b0:	sub	sp, fp, #4
   179b4:	pop	{fp, pc}
   179b8:	push	{fp, lr}
   179bc:	add	fp, sp, #4
   179c0:	sub	sp, sp, #8
   179c4:	str	r0, [fp, #-8]
   179c8:	mov	r2, #32
   179cc:	mvn	r1, #0
   179d0:	ldr	r0, [fp, #-8]
   179d4:	bl	11448 <memset@plt>
   179d8:	nop			; (mov r0, r0)
   179dc:	sub	sp, fp, #4
   179e0:	pop	{fp, pc}
   179e4:	push	{fp, lr}
   179e8:	add	fp, sp, #4
   179ec:	sub	sp, sp, #8
   179f0:	str	r0, [fp, #-8]
   179f4:	str	r1, [fp, #-12]
   179f8:	mov	r2, #32
   179fc:	ldr	r1, [fp, #-12]
   17a00:	ldr	r0, [fp, #-8]
   17a04:	bl	11250 <memcpy@plt>
   17a08:	nop			; (mov r0, r0)
   17a0c:	sub	sp, fp, #4
   17a10:	pop	{fp, pc}
   17a14:	push	{fp}		; (str fp, [sp, #-4]!)
   17a18:	add	fp, sp, #0
   17a1c:	sub	sp, sp, #20
   17a20:	str	r0, [fp, #-16]
   17a24:	mov	r3, #0
   17a28:	str	r3, [fp, #-8]
   17a2c:	b	17a68 <__assert_fail@plt+0x6524>
   17a30:	ldr	r3, [fp, #-8]
   17a34:	lsl	r3, r3, #2
   17a38:	ldr	r2, [fp, #-16]
   17a3c:	add	r3, r2, r3
   17a40:	ldr	r2, [fp, #-8]
   17a44:	lsl	r2, r2, #2
   17a48:	ldr	r1, [fp, #-16]
   17a4c:	add	r2, r1, r2
   17a50:	ldr	r2, [r2]
   17a54:	mvn	r2, r2
   17a58:	str	r2, [r3]
   17a5c:	ldr	r3, [fp, #-8]
   17a60:	add	r3, r3, #1
   17a64:	str	r3, [fp, #-8]
   17a68:	ldr	r3, [fp, #-8]
   17a6c:	cmp	r3, #7
   17a70:	ble	17a30 <__assert_fail@plt+0x64ec>
   17a74:	nop			; (mov r0, r0)
   17a78:	add	sp, fp, #0
   17a7c:	pop	{fp}		; (ldr fp, [sp], #4)
   17a80:	bx	lr
   17a84:	push	{fp}		; (str fp, [sp, #-4]!)
   17a88:	add	fp, sp, #0
   17a8c:	sub	sp, sp, #20
   17a90:	str	r0, [fp, #-16]
   17a94:	str	r1, [fp, #-20]	; 0xffffffec
   17a98:	mov	r3, #0
   17a9c:	str	r3, [fp, #-8]
   17aa0:	b	17af0 <__assert_fail@plt+0x65ac>
   17aa4:	ldr	r3, [fp, #-8]
   17aa8:	lsl	r3, r3, #2
   17aac:	ldr	r2, [fp, #-16]
   17ab0:	add	r3, r2, r3
   17ab4:	ldr	r2, [fp, #-8]
   17ab8:	lsl	r2, r2, #2
   17abc:	ldr	r1, [fp, #-16]
   17ac0:	add	r2, r1, r2
   17ac4:	ldr	r1, [r2]
   17ac8:	ldr	r2, [fp, #-8]
   17acc:	lsl	r2, r2, #2
   17ad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ad4:	add	r2, r0, r2
   17ad8:	ldr	r2, [r2]
   17adc:	orr	r2, r1, r2
   17ae0:	str	r2, [r3]
   17ae4:	ldr	r3, [fp, #-8]
   17ae8:	add	r3, r3, #1
   17aec:	str	r3, [fp, #-8]
   17af0:	ldr	r3, [fp, #-8]
   17af4:	cmp	r3, #7
   17af8:	ble	17aa4 <__assert_fail@plt+0x6560>
   17afc:	nop			; (mov r0, r0)
   17b00:	add	sp, fp, #0
   17b04:	pop	{fp}		; (ldr fp, [sp], #4)
   17b08:	bx	lr
   17b0c:	push	{fp}		; (str fp, [sp, #-4]!)
   17b10:	add	fp, sp, #0
   17b14:	sub	sp, sp, #20
   17b18:	str	r0, [fp, #-16]
   17b1c:	str	r1, [fp, #-20]	; 0xffffffec
   17b20:	mov	r3, #0
   17b24:	str	r3, [fp, #-8]
   17b28:	b	17b78 <__assert_fail@plt+0x6634>
   17b2c:	ldr	r3, [fp, #-8]
   17b30:	lsl	r3, r3, #2
   17b34:	ldr	r2, [fp, #-16]
   17b38:	add	r3, r2, r3
   17b3c:	ldr	r2, [fp, #-8]
   17b40:	lsl	r2, r2, #2
   17b44:	ldr	r1, [fp, #-16]
   17b48:	add	r2, r1, r2
   17b4c:	ldr	r1, [r2]
   17b50:	ldr	r2, [fp, #-8]
   17b54:	lsl	r2, r2, #2
   17b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b5c:	add	r2, r0, r2
   17b60:	ldr	r2, [r2]
   17b64:	and	r2, r2, r1
   17b68:	str	r2, [r3]
   17b6c:	ldr	r3, [fp, #-8]
   17b70:	add	r3, r3, #1
   17b74:	str	r3, [fp, #-8]
   17b78:	ldr	r3, [fp, #-8]
   17b7c:	cmp	r3, #7
   17b80:	ble	17b2c <__assert_fail@plt+0x65e8>
   17b84:	nop			; (mov r0, r0)
   17b88:	add	sp, fp, #0
   17b8c:	pop	{fp}		; (ldr fp, [sp], #4)
   17b90:	bx	lr
   17b94:	push	{fp}		; (str fp, [sp, #-4]!)
   17b98:	add	fp, sp, #0
   17b9c:	sub	sp, sp, #20
   17ba0:	str	r0, [fp, #-16]
   17ba4:	str	r1, [fp, #-20]	; 0xffffffec
   17ba8:	ldr	r3, [fp, #-16]
   17bac:	ldr	r3, [r3, #80]	; 0x50
   17bb0:	cmp	r3, #1
   17bb4:	bne	17bc0 <__assert_fail@plt+0x667c>
   17bb8:	mov	r3, #1
   17bbc:	b	17c28 <__assert_fail@plt+0x66e4>
   17bc0:	mov	r3, #1
   17bc4:	str	r3, [fp, #-8]
   17bc8:	b	17c00 <__assert_fail@plt+0x66bc>
   17bcc:	ldr	r3, [fp, #-16]
   17bd0:	ldr	r2, [r3, #8]
   17bd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17bd8:	ldr	r3, [fp, #-8]
   17bdc:	add	r3, r1, r3
   17be0:	lsl	r3, r3, #2
   17be4:	add	r3, r2, r3
   17be8:	ldr	r3, [r3]
   17bec:	cmn	r3, #1
   17bf0:	bne	17c20 <__assert_fail@plt+0x66dc>
   17bf4:	ldr	r3, [fp, #-8]
   17bf8:	add	r3, r3, #1
   17bfc:	str	r3, [fp, #-8]
   17c00:	ldr	r2, [fp, #-20]	; 0xffffffec
   17c04:	ldr	r3, [fp, #-8]
   17c08:	add	r2, r2, r3
   17c0c:	ldr	r3, [fp, #-16]
   17c10:	ldr	r3, [r3, #28]
   17c14:	cmp	r2, r3
   17c18:	blt	17bcc <__assert_fail@plt+0x6688>
   17c1c:	b	17c24 <__assert_fail@plt+0x66e0>
   17c20:	nop			; (mov r0, r0)
   17c24:	ldr	r3, [fp, #-8]
   17c28:	mov	r0, r3
   17c2c:	add	sp, fp, #0
   17c30:	pop	{fp}		; (ldr fp, [sp], #4)
   17c34:	bx	lr
   17c38:	push	{fp}		; (str fp, [sp, #-4]!)
   17c3c:	add	fp, sp, #0
   17c40:	sub	sp, sp, #12
   17c44:	str	r0, [fp, #-8]
   17c48:	str	r1, [fp, #-12]
   17c4c:	ldr	r3, [fp, #-8]
   17c50:	ldr	r3, [r3, #80]	; 0x50
   17c54:	cmp	r3, #1
   17c58:	bne	17c74 <__assert_fail@plt+0x6730>
   17c5c:	ldr	r3, [fp, #-8]
   17c60:	ldr	r2, [r3, #4]
   17c64:	ldr	r3, [fp, #-12]
   17c68:	add	r3, r2, r3
   17c6c:	ldrb	r3, [r3]
   17c70:	b	17c8c <__assert_fail@plt+0x6748>
   17c74:	ldr	r3, [fp, #-8]
   17c78:	ldr	r2, [r3, #8]
   17c7c:	ldr	r3, [fp, #-12]
   17c80:	lsl	r3, r3, #2
   17c84:	add	r3, r2, r3
   17c88:	ldr	r3, [r3]
   17c8c:	mov	r0, r3
   17c90:	add	sp, fp, #0
   17c94:	pop	{fp}		; (ldr fp, [sp], #4)
   17c98:	bx	lr
   17c9c:	push	{fp}		; (str fp, [sp, #-4]!)
   17ca0:	add	fp, sp, #0
   17ca4:	sub	sp, sp, #12
   17ca8:	str	r0, [fp, #-8]
   17cac:	str	r1, [fp, #-12]
   17cb0:	mov	r3, #1
   17cb4:	mov	r0, r3
   17cb8:	add	sp, fp, #0
   17cbc:	pop	{fp}		; (ldr fp, [sp], #4)
   17cc0:	bx	lr
   17cc4:	push	{fp, lr}
   17cc8:	add	fp, sp, #4
   17ccc:	sub	sp, sp, #32
   17cd0:	str	r0, [fp, #-16]
   17cd4:	str	r1, [fp, #-20]	; 0xffffffec
   17cd8:	str	r2, [fp, #-24]	; 0xffffffe8
   17cdc:	str	r3, [fp, #-28]	; 0xffffffe4
   17ce0:	ldr	r3, [fp, #12]
   17ce4:	ldr	r2, [r3, #92]	; 0x5c
   17ce8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17cec:	cmp	r2, r3
   17cf0:	ble	17d00 <__assert_fail@plt+0x67bc>
   17cf4:	ldr	r3, [fp, #12]
   17cf8:	ldr	r3, [r3, #92]	; 0x5c
   17cfc:	str	r3, [fp, #-28]	; 0xffffffe4
   17d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d04:	add	r2, r3, #1
   17d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d0c:	cmp	r2, r3
   17d10:	movlt	r3, r2
   17d14:	movge	r3, r3
   17d18:	str	r3, [fp, #-8]
   17d1c:	ldr	r3, [fp, #12]
   17d20:	str	r3, [sp, #4]
   17d24:	ldrb	r3, [fp, #8]
   17d28:	str	r3, [sp]
   17d2c:	ldr	r3, [fp, #4]
   17d30:	ldr	r2, [fp, #-16]
   17d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d3c:	bl	181d0 <__assert_fail@plt+0x6c8c>
   17d40:	ldr	r1, [fp, #-8]
   17d44:	ldr	r0, [fp, #-16]
   17d48:	bl	18024 <__assert_fail@plt+0x6ae0>
   17d4c:	str	r0, [fp, #-12]
   17d50:	ldr	r3, [fp, #-12]
   17d54:	cmp	r3, #0
   17d58:	movne	r3, #1
   17d5c:	moveq	r3, #0
   17d60:	uxtb	r3, r3
   17d64:	cmp	r3, #0
   17d68:	beq	17d74 <__assert_fail@plt+0x6830>
   17d6c:	ldr	r3, [fp, #-12]
   17d70:	b	17e14 <__assert_fail@plt+0x68d0>
   17d74:	ldr	r3, [fp, #12]
   17d78:	add	r2, r3, #96	; 0x60
   17d7c:	ldr	r3, [fp, #-16]
   17d80:	str	r2, [r3, #68]	; 0x44
   17d84:	ldr	r3, [fp, #12]
   17d88:	ldrb	r3, [r3, #88]	; 0x58
   17d8c:	lsr	r3, r3, #4
   17d90:	and	r3, r3, #1
   17d94:	uxtb	r3, r3
   17d98:	mov	r2, r3
   17d9c:	ldr	r3, [fp, #-16]
   17da0:	strb	r2, [r3, #78]	; 0x4e
   17da4:	ldr	r3, [fp, #-16]
   17da8:	ldrb	r3, [r3, #75]	; 0x4b
   17dac:	cmp	r3, #0
   17db0:	beq	17dc0 <__assert_fail@plt+0x687c>
   17db4:	ldr	r3, [fp, #-16]
   17db8:	ldr	r3, [r3, #4]
   17dbc:	b	17dc4 <__assert_fail@plt+0x6880>
   17dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17dc4:	ldr	r2, [fp, #-16]
   17dc8:	str	r3, [r2, #4]
   17dcc:	ldr	r3, [fp, #-16]
   17dd0:	ldrb	r3, [r3, #75]	; 0x4b
   17dd4:	cmp	r3, #0
   17dd8:	bne	17df4 <__assert_fail@plt+0x68b0>
   17ddc:	ldr	r3, [fp, #12]
   17de0:	ldr	r3, [r3, #92]	; 0x5c
   17de4:	cmp	r3, #1
   17de8:	bgt	17df4 <__assert_fail@plt+0x68b0>
   17dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17df0:	b	17df8 <__assert_fail@plt+0x68b4>
   17df4:	mov	r3, #0
   17df8:	ldr	r2, [fp, #-16]
   17dfc:	str	r3, [r2, #28]
   17e00:	ldr	r3, [fp, #-16]
   17e04:	ldr	r2, [r3, #28]
   17e08:	ldr	r3, [fp, #-16]
   17e0c:	str	r2, [r3, #32]
   17e10:	mov	r3, #0
   17e14:	mov	r0, r3
   17e18:	sub	sp, fp, #4
   17e1c:	pop	{fp, pc}
   17e20:	push	{fp, lr}
   17e24:	add	fp, sp, #4
   17e28:	sub	sp, sp, #32
   17e2c:	str	r0, [fp, #-16]
   17e30:	str	r1, [fp, #-20]	; 0xffffffec
   17e34:	str	r2, [fp, #-24]	; 0xffffffe8
   17e38:	str	r3, [fp, #-28]	; 0xffffffe4
   17e3c:	mov	r2, #84	; 0x54
   17e40:	mov	r1, #0
   17e44:	ldr	r0, [fp, #-16]
   17e48:	bl	11448 <memset@plt>
   17e4c:	ldr	r3, [fp, #8]
   17e50:	str	r3, [sp, #4]
   17e54:	ldrb	r3, [fp, #4]
   17e58:	str	r3, [sp]
   17e5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17e60:	ldr	r2, [fp, #-16]
   17e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e6c:	bl	181d0 <__assert_fail@plt+0x6c8c>
   17e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e74:	cmp	r3, #0
   17e78:	ble	17eb8 <__assert_fail@plt+0x6974>
   17e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e80:	add	r3, r3, #1
   17e84:	mov	r1, r3
   17e88:	ldr	r0, [fp, #-16]
   17e8c:	bl	18024 <__assert_fail@plt+0x6ae0>
   17e90:	str	r0, [fp, #-8]
   17e94:	ldr	r3, [fp, #-8]
   17e98:	cmp	r3, #0
   17e9c:	movne	r3, #1
   17ea0:	moveq	r3, #0
   17ea4:	uxtb	r3, r3
   17ea8:	cmp	r3, #0
   17eac:	beq	17eb8 <__assert_fail@plt+0x6974>
   17eb0:	ldr	r3, [fp, #-8]
   17eb4:	b	18018 <__assert_fail@plt+0x6ad4>
   17eb8:	ldr	r3, [fp, #-16]
   17ebc:	ldrb	r3, [r3, #75]	; 0x4b
   17ec0:	cmp	r3, #0
   17ec4:	beq	17ed4 <__assert_fail@plt+0x6990>
   17ec8:	ldr	r3, [fp, #-16]
   17ecc:	ldr	r3, [r3, #4]
   17ed0:	b	17ed8 <__assert_fail@plt+0x6994>
   17ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ed8:	ldr	r2, [fp, #-16]
   17edc:	str	r3, [r2, #4]
   17ee0:	ldrb	r3, [fp, #4]
   17ee4:	cmp	r3, #0
   17ee8:	beq	17fb0 <__assert_fail@plt+0x6a6c>
   17eec:	ldr	r3, [fp, #8]
   17ef0:	ldr	r3, [r3, #92]	; 0x5c
   17ef4:	cmp	r3, #1
   17ef8:	ble	17fa4 <__assert_fail@plt+0x6a60>
   17efc:	ldr	r0, [fp, #-16]
   17f00:	bl	18650 <__assert_fail@plt+0x710c>
   17f04:	str	r0, [fp, #-8]
   17f08:	ldr	r3, [fp, #-8]
   17f0c:	cmp	r3, #0
   17f10:	movne	r3, #1
   17f14:	moveq	r3, #0
   17f18:	uxtb	r3, r3
   17f1c:	cmp	r3, #0
   17f20:	beq	17f2c <__assert_fail@plt+0x69e8>
   17f24:	ldr	r3, [fp, #-8]
   17f28:	b	18018 <__assert_fail@plt+0x6ad4>
   17f2c:	ldr	r3, [fp, #-16]
   17f30:	ldr	r2, [r3, #32]
   17f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17f38:	cmp	r2, r3
   17f3c:	bge	18008 <__assert_fail@plt+0x6ac4>
   17f40:	ldr	r3, [fp, #-16]
   17f44:	ldr	r2, [r3, #36]	; 0x24
   17f48:	ldr	r3, [fp, #-16]
   17f4c:	ldr	r1, [r3, #28]
   17f50:	ldr	r3, [fp, #8]
   17f54:	ldr	r3, [r3, #92]	; 0x5c
   17f58:	add	r3, r1, r3
   17f5c:	cmp	r2, r3
   17f60:	bgt	18010 <__assert_fail@plt+0x6acc>
   17f64:	ldr	r3, [fp, #-16]
   17f68:	ldr	r3, [r3, #36]	; 0x24
   17f6c:	lsl	r3, r3, #1
   17f70:	mov	r1, r3
   17f74:	ldr	r0, [fp, #-16]
   17f78:	bl	18024 <__assert_fail@plt+0x6ae0>
   17f7c:	str	r0, [fp, #-8]
   17f80:	ldr	r3, [fp, #-8]
   17f84:	cmp	r3, #0
   17f88:	movne	r3, #1
   17f8c:	moveq	r3, #0
   17f90:	uxtb	r3, r3
   17f94:	cmp	r3, #0
   17f98:	beq	17efc <__assert_fail@plt+0x69b8>
   17f9c:	ldr	r3, [fp, #-8]
   17fa0:	b	18018 <__assert_fail@plt+0x6ad4>
   17fa4:	ldr	r0, [fp, #-16]
   17fa8:	bl	1931c <__assert_fail@plt+0x7dd8>
   17fac:	b	18014 <__assert_fail@plt+0x6ad0>
   17fb0:	ldr	r3, [fp, #8]
   17fb4:	ldr	r3, [r3, #92]	; 0x5c
   17fb8:	cmp	r3, #1
   17fbc:	ble	17fcc <__assert_fail@plt+0x6a88>
   17fc0:	ldr	r0, [fp, #-16]
   17fc4:	bl	182d8 <__assert_fail@plt+0x6d94>
   17fc8:	b	18014 <__assert_fail@plt+0x6ad0>
   17fcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fd0:	cmp	r3, #0
   17fd4:	beq	17fe4 <__assert_fail@plt+0x6aa0>
   17fd8:	ldr	r0, [fp, #-16]
   17fdc:	bl	1941c <__assert_fail@plt+0x7ed8>
   17fe0:	b	18014 <__assert_fail@plt+0x6ad0>
   17fe4:	ldr	r3, [fp, #-16]
   17fe8:	ldr	r2, [r3, #36]	; 0x24
   17fec:	ldr	r3, [fp, #-16]
   17ff0:	str	r2, [r3, #28]
   17ff4:	ldr	r3, [fp, #-16]
   17ff8:	ldr	r2, [r3, #36]	; 0x24
   17ffc:	ldr	r3, [fp, #-16]
   18000:	str	r2, [r3, #32]
   18004:	b	18014 <__assert_fail@plt+0x6ad0>
   18008:	nop			; (mov r0, r0)
   1800c:	b	18014 <__assert_fail@plt+0x6ad0>
   18010:	nop			; (mov r0, r0)
   18014:	mov	r3, #0
   18018:	mov	r0, r3
   1801c:	sub	sp, fp, #4
   18020:	pop	{fp, pc}
   18024:	push	{fp, lr}
   18028:	add	fp, sp, #4
   1802c:	sub	sp, sp, #24
   18030:	str	r0, [fp, #-24]	; 0xffffffe8
   18034:	str	r1, [fp, #-28]	; 0xffffffe4
   18038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1803c:	ldr	r3, [r3, #80]	; 0x50
   18040:	cmp	r3, #1
   18044:	ble	18158 <__assert_fail@plt+0x6c14>
   18048:	mov	r3, #4
   1804c:	str	r3, [fp, #-8]
   18050:	ldr	r1, [fp, #-8]
   18054:	mvn	r0, #0
   18058:	bl	34794 <__assert_fail@plt+0x23250>
   1805c:	mov	r3, r0
   18060:	cmp	r3, #0
   18064:	blt	18080 <__assert_fail@plt+0x6b3c>
   18068:	ldr	r1, [fp, #-8]
   1806c:	mvn	r0, #0
   18070:	bl	34794 <__assert_fail@plt+0x23250>
   18074:	mov	r3, r0
   18078:	mov	r2, r3
   1807c:	b	18084 <__assert_fail@plt+0x6b40>
   18080:	mvn	r2, #-2147483648	; 0x80000000
   18084:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18088:	cmp	r2, r3
   1808c:	movcc	r3, #1
   18090:	movcs	r3, #0
   18094:	uxtb	r3, r3
   18098:	cmp	r3, #0
   1809c:	beq	180a8 <__assert_fail@plt+0x6b64>
   180a0:	mov	r3, #12
   180a4:	b	181c4 <__assert_fail@plt+0x6c80>
   180a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180ac:	ldr	r2, [r3, #8]
   180b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   180b4:	lsl	r3, r3, #2
   180b8:	mov	r1, r3
   180bc:	mov	r0, r2
   180c0:	bl	332ec <__assert_fail@plt+0x21da8>
   180c4:	str	r0, [fp, #-12]
   180c8:	ldr	r3, [fp, #-12]
   180cc:	cmp	r3, #0
   180d0:	moveq	r3, #1
   180d4:	movne	r3, #0
   180d8:	uxtb	r3, r3
   180dc:	cmp	r3, #0
   180e0:	beq	180ec <__assert_fail@plt+0x6ba8>
   180e4:	mov	r3, #12
   180e8:	b	181c4 <__assert_fail@plt+0x6c80>
   180ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180f0:	ldr	r2, [fp, #-12]
   180f4:	str	r2, [r3, #8]
   180f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180fc:	ldr	r3, [r3, #12]
   18100:	cmp	r3, #0
   18104:	beq	18158 <__assert_fail@plt+0x6c14>
   18108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1810c:	ldr	r2, [r3, #12]
   18110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18114:	lsl	r3, r3, #2
   18118:	mov	r1, r3
   1811c:	mov	r0, r2
   18120:	bl	332ec <__assert_fail@plt+0x21da8>
   18124:	str	r0, [fp, #-16]
   18128:	ldr	r3, [fp, #-16]
   1812c:	cmp	r3, #0
   18130:	moveq	r3, #1
   18134:	movne	r3, #0
   18138:	uxtb	r3, r3
   1813c:	cmp	r3, #0
   18140:	beq	1814c <__assert_fail@plt+0x6c08>
   18144:	mov	r3, #12
   18148:	b	181c4 <__assert_fail@plt+0x6c80>
   1814c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18150:	ldr	r2, [fp, #-16]
   18154:	str	r2, [r3, #12]
   18158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1815c:	ldrb	r3, [r3, #75]	; 0x4b
   18160:	cmp	r3, #0
   18164:	beq	181b4 <__assert_fail@plt+0x6c70>
   18168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1816c:	ldr	r3, [r3, #4]
   18170:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18174:	mov	r1, r2
   18178:	mov	r0, r3
   1817c:	bl	332ec <__assert_fail@plt+0x21da8>
   18180:	str	r0, [fp, #-20]	; 0xffffffec
   18184:	ldr	r3, [fp, #-20]	; 0xffffffec
   18188:	cmp	r3, #0
   1818c:	moveq	r3, #1
   18190:	movne	r3, #0
   18194:	uxtb	r3, r3
   18198:	cmp	r3, #0
   1819c:	beq	181a8 <__assert_fail@plt+0x6c64>
   181a0:	mov	r3, #12
   181a4:	b	181c4 <__assert_fail@plt+0x6c80>
   181a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   181b0:	str	r2, [r3, #4]
   181b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   181b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   181bc:	str	r2, [r3, #36]	; 0x24
   181c0:	mov	r3, #0
   181c4:	mov	r0, r3
   181c8:	sub	sp, fp, #4
   181cc:	pop	{fp, pc}
   181d0:	push	{fp}		; (str fp, [sp, #-4]!)
   181d4:	add	fp, sp, #0
   181d8:	sub	sp, sp, #20
   181dc:	str	r0, [fp, #-8]
   181e0:	str	r1, [fp, #-12]
   181e4:	str	r2, [fp, #-16]
   181e8:	str	r3, [fp, #-20]	; 0xffffffec
   181ec:	ldr	r3, [fp, #-16]
   181f0:	ldr	r2, [fp, #-8]
   181f4:	str	r2, [r3]
   181f8:	ldr	r3, [fp, #-16]
   181fc:	ldr	r2, [fp, #-12]
   18200:	str	r2, [r3, #48]	; 0x30
   18204:	ldr	r3, [fp, #-16]
   18208:	ldr	r2, [fp, #-12]
   1820c:	str	r2, [r3, #44]	; 0x2c
   18210:	ldr	r3, [fp, #-16]
   18214:	ldr	r2, [fp, #-20]	; 0xffffffec
   18218:	str	r2, [r3, #64]	; 0x40
   1821c:	ldrb	r2, [fp, #4]
   18220:	ldr	r3, [fp, #-16]
   18224:	strb	r2, [r3, #72]	; 0x48
   18228:	ldr	r3, [fp, #-20]	; 0xffffffec
   1822c:	cmp	r3, #0
   18230:	bne	18240 <__assert_fail@plt+0x6cfc>
   18234:	ldrb	r3, [fp, #4]
   18238:	cmp	r3, #0
   1823c:	beq	18248 <__assert_fail@plt+0x6d04>
   18240:	mov	r3, #1
   18244:	b	1824c <__assert_fail@plt+0x6d08>
   18248:	mov	r3, #0
   1824c:	uxtb	r2, r3
   18250:	ldr	r3, [fp, #-16]
   18254:	strb	r2, [r3, #75]	; 0x4b
   18258:	ldr	r3, [fp, #8]
   1825c:	ldr	r2, [r3, #92]	; 0x5c
   18260:	ldr	r3, [fp, #-16]
   18264:	str	r2, [r3, #80]	; 0x50
   18268:	ldr	r3, [fp, #8]
   1826c:	ldrb	r3, [r3, #88]	; 0x58
   18270:	lsr	r3, r3, #2
   18274:	and	r3, r3, #1
   18278:	uxtb	r3, r3
   1827c:	mov	r2, r3
   18280:	ldr	r3, [fp, #-16]
   18284:	strb	r2, [r3, #73]	; 0x49
   18288:	ldr	r3, [fp, #8]
   1828c:	ldrb	r3, [r3, #88]	; 0x58
   18290:	lsr	r3, r3, #3
   18294:	and	r3, r3, #1
   18298:	uxtb	r3, r3
   1829c:	mov	r2, r3
   182a0:	ldr	r3, [fp, #-16]
   182a4:	strb	r2, [r3, #74]	; 0x4a
   182a8:	ldr	r3, [fp, #-16]
   182ac:	ldr	r2, [r3, #48]	; 0x30
   182b0:	ldr	r3, [fp, #-16]
   182b4:	str	r2, [r3, #56]	; 0x38
   182b8:	ldr	r3, [fp, #-16]
   182bc:	ldr	r2, [r3, #56]	; 0x38
   182c0:	ldr	r3, [fp, #-16]
   182c4:	str	r2, [r3, #52]	; 0x34
   182c8:	nop			; (mov r0, r0)
   182cc:	add	sp, fp, #0
   182d0:	pop	{fp}		; (ldr fp, [sp], #4)
   182d4:	bx	lr
   182d8:	push	{fp, lr}
   182dc:	add	fp, sp, #4
   182e0:	sub	sp, sp, #112	; 0x70
   182e4:	str	r0, [fp, #-112]	; 0xffffff90
   182e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   182ec:	ldr	r2, [r3, #36]	; 0x24
   182f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   182f4:	ldr	r3, [r3, #48]	; 0x30
   182f8:	cmp	r2, r3
   182fc:	movlt	r3, r2
   18300:	movge	r3, r3
   18304:	str	r3, [fp, #-24]	; 0xffffffe8
   18308:	ldr	r3, [fp, #-112]	; 0xffffff90
   1830c:	ldr	r3, [r3, #28]
   18310:	str	r3, [fp, #-8]
   18314:	b	1861c <__assert_fail@plt+0x70d8>
   18318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1831c:	ldr	r3, [fp, #-8]
   18320:	sub	r3, r2, r3
   18324:	str	r3, [fp, #-28]	; 0xffffffe4
   18328:	ldr	r2, [fp, #-112]	; 0xffffff90
   1832c:	sub	r3, fp, #104	; 0x68
   18330:	add	r2, r2, #16
   18334:	ldm	r2, {r0, r1}
   18338:	stm	r3, {r0, r1}
   1833c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18340:	ldr	r3, [r3, #64]	; 0x40
   18344:	cmp	r3, #0
   18348:	movne	r3, #1
   1834c:	moveq	r3, #0
   18350:	uxtb	r3, r3
   18354:	cmp	r3, #0
   18358:	beq	18418 <__assert_fail@plt+0x6ed4>
   1835c:	mov	r3, #0
   18360:	str	r3, [fp, #-20]	; 0xffffffec
   18364:	b	183e8 <__assert_fail@plt+0x6ea4>
   18368:	ldr	r3, [fp, #-112]	; 0xffffff90
   1836c:	ldr	r3, [r3]
   18370:	ldr	r2, [fp, #-112]	; 0xffffff90
   18374:	ldr	r1, [r2, #24]
   18378:	ldr	r2, [fp, #-8]
   1837c:	add	r1, r1, r2
   18380:	ldr	r2, [fp, #-20]	; 0xffffffec
   18384:	add	r2, r1, r2
   18388:	add	r3, r3, r2
   1838c:	ldrb	r3, [r3]
   18390:	str	r3, [fp, #-32]	; 0xffffffe0
   18394:	ldr	r3, [fp, #-112]	; 0xffffff90
   18398:	ldr	r3, [r3, #4]
   1839c:	ldr	r1, [fp, #-8]
   183a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   183a4:	add	r2, r1, r2
   183a8:	add	r3, r3, r2
   183ac:	ldr	r2, [fp, #-112]	; 0xffffff90
   183b0:	ldr	r1, [r2, #64]	; 0x40
   183b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   183b8:	add	r2, r1, r2
   183bc:	ldrb	r2, [r2]
   183c0:	strb	r2, [r3]
   183c4:	ldrb	r1, [r3]
   183c8:	sub	r2, fp, #96	; 0x60
   183cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   183d0:	add	r3, r2, r3
   183d4:	mov	r2, r1
   183d8:	strb	r2, [r3]
   183dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   183e0:	add	r3, r3, #1
   183e4:	str	r3, [fp, #-20]	; 0xffffffec
   183e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   183ec:	ldr	r2, [r3, #80]	; 0x50
   183f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183f4:	cmp	r2, r3
   183f8:	ble	1840c <__assert_fail@plt+0x6ec8>
   183fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   18400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18404:	cmp	r2, r3
   18408:	blt	18368 <__assert_fail@plt+0x6e24>
   1840c:	sub	r3, fp, #96	; 0x60
   18410:	str	r3, [fp, #-16]
   18414:	b	1843c <__assert_fail@plt+0x6ef8>
   18418:	ldr	r3, [fp, #-112]	; 0xffffff90
   1841c:	ldr	r2, [r3]
   18420:	ldr	r3, [fp, #-112]	; 0xffffff90
   18424:	ldr	r3, [r3, #24]
   18428:	mov	r1, r3
   1842c:	ldr	r3, [fp, #-8]
   18430:	add	r3, r1, r3
   18434:	add	r3, r2, r3
   18438:	str	r3, [fp, #-16]
   1843c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18440:	ldr	r3, [fp, #-112]	; 0xffffff90
   18444:	add	r3, r3, #16
   18448:	sub	r0, fp, #108	; 0x6c
   1844c:	ldr	r1, [fp, #-16]
   18450:	bl	33f40 <__assert_fail@plt+0x229fc>
   18454:	str	r0, [fp, #-12]
   18458:	ldr	r3, [fp, #-12]
   1845c:	cmn	r3, #1
   18460:	moveq	r3, #1
   18464:	movne	r3, #0
   18468:	uxtb	r3, r3
   1846c:	cmp	r3, #0
   18470:	bne	18490 <__assert_fail@plt+0x6f4c>
   18474:	ldr	r3, [fp, #-12]
   18478:	cmp	r3, #0
   1847c:	moveq	r3, #1
   18480:	movne	r3, #0
   18484:	uxtb	r3, r3
   18488:	cmp	r3, #0
   1848c:	beq	18498 <__assert_fail@plt+0x6f54>
   18490:	mov	r3, #1
   18494:	b	1849c <__assert_fail@plt+0x6f58>
   18498:	mov	r3, #0
   1849c:	cmp	r3, #0
   184a0:	bne	184fc <__assert_fail@plt+0x6fb8>
   184a4:	ldr	r3, [fp, #-12]
   184a8:	cmn	r3, #2
   184ac:	moveq	r3, #1
   184b0:	movne	r3, #0
   184b4:	uxtb	r3, r3
   184b8:	cmp	r3, #0
   184bc:	beq	184f0 <__assert_fail@plt+0x6fac>
   184c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   184c4:	ldr	r2, [r3, #36]	; 0x24
   184c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   184cc:	ldr	r3, [r3, #48]	; 0x30
   184d0:	cmp	r2, r3
   184d4:	movge	r3, #1
   184d8:	movlt	r3, #0
   184dc:	uxtb	r3, r3
   184e0:	cmp	r3, #0
   184e4:	beq	184f0 <__assert_fail@plt+0x6fac>
   184e8:	mov	r3, #1
   184ec:	b	184f4 <__assert_fail@plt+0x6fb0>
   184f0:	mov	r3, #0
   184f4:	cmp	r3, #0
   184f8:	beq	18578 <__assert_fail@plt+0x7034>
   184fc:	mov	r3, #1
   18500:	str	r3, [fp, #-12]
   18504:	ldr	r3, [fp, #-112]	; 0xffffff90
   18508:	ldr	r3, [r3]
   1850c:	ldr	r2, [fp, #-112]	; 0xffffff90
   18510:	ldr	r1, [r2, #24]
   18514:	ldr	r2, [fp, #-8]
   18518:	add	r2, r1, r2
   1851c:	add	r3, r3, r2
   18520:	ldrb	r3, [r3]
   18524:	str	r3, [fp, #-108]	; 0xffffff94
   18528:	ldr	r3, [fp, #-112]	; 0xffffff90
   1852c:	ldr	r3, [r3, #64]	; 0x40
   18530:	cmp	r3, #0
   18534:	movne	r3, #1
   18538:	moveq	r3, #0
   1853c:	uxtb	r3, r3
   18540:	cmp	r3, #0
   18544:	beq	18560 <__assert_fail@plt+0x701c>
   18548:	ldr	r3, [fp, #-112]	; 0xffffff90
   1854c:	ldr	r2, [r3, #64]	; 0x40
   18550:	ldr	r3, [fp, #-108]	; 0xffffff94
   18554:	add	r3, r2, r3
   18558:	ldrb	r3, [r3]
   1855c:	str	r3, [fp, #-108]	; 0xffffff94
   18560:	ldr	r3, [fp, #-112]	; 0xffffff90
   18564:	add	r3, r3, #16
   18568:	sub	r2, fp, #104	; 0x68
   1856c:	ldm	r2, {r0, r1}
   18570:	stm	r3, {r0, r1}
   18574:	b	185ac <__assert_fail@plt+0x7068>
   18578:	ldr	r3, [fp, #-12]
   1857c:	cmn	r3, #2
   18580:	moveq	r3, #1
   18584:	movne	r3, #0
   18588:	uxtb	r3, r3
   1858c:	cmp	r3, #0
   18590:	beq	185ac <__assert_fail@plt+0x7068>
   18594:	ldr	r3, [fp, #-112]	; 0xffffff90
   18598:	add	r3, r3, #16
   1859c:	sub	r2, fp, #104	; 0x68
   185a0:	ldm	r2, {r0, r1}
   185a4:	stm	r3, {r0, r1}
   185a8:	b	1862c <__assert_fail@plt+0x70e8>
   185ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   185b0:	ldr	r2, [r3, #8]
   185b4:	ldr	r3, [fp, #-8]
   185b8:	add	r1, r3, #1
   185bc:	str	r1, [fp, #-8]
   185c0:	lsl	r3, r3, #2
   185c4:	add	r3, r2, r3
   185c8:	ldr	r2, [fp, #-108]	; 0xffffff94
   185cc:	str	r2, [r3]
   185d0:	ldr	r2, [fp, #-8]
   185d4:	ldr	r3, [fp, #-12]
   185d8:	add	r3, r2, r3
   185dc:	sub	r3, r3, #1
   185e0:	str	r3, [fp, #-28]	; 0xffffffe4
   185e4:	b	1860c <__assert_fail@plt+0x70c8>
   185e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   185ec:	ldr	r2, [r3, #8]
   185f0:	ldr	r3, [fp, #-8]
   185f4:	add	r1, r3, #1
   185f8:	str	r1, [fp, #-8]
   185fc:	lsl	r3, r3, #2
   18600:	add	r3, r2, r3
   18604:	mvn	r2, #0
   18608:	str	r2, [r3]
   1860c:	ldr	r2, [fp, #-8]
   18610:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18614:	cmp	r2, r3
   18618:	blt	185e8 <__assert_fail@plt+0x70a4>
   1861c:	ldr	r2, [fp, #-8]
   18620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18624:	cmp	r2, r3
   18628:	blt	18318 <__assert_fail@plt+0x6dd4>
   1862c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18630:	ldr	r2, [fp, #-8]
   18634:	str	r2, [r3, #28]
   18638:	ldr	r3, [fp, #-112]	; 0xffffff90
   1863c:	ldr	r2, [fp, #-8]
   18640:	str	r2, [r3, #32]
   18644:	nop			; (mov r0, r0)
   18648:	sub	sp, fp, #4
   1864c:	pop	{fp, pc}
   18650:	push	{fp, lr}
   18654:	add	fp, sp, #4
   18658:	sub	sp, sp, #160	; 0xa0
   1865c:	str	r0, [fp, #-160]	; 0xffffff60
   18660:	ldr	r3, [fp, #-160]	; 0xffffff60
   18664:	ldr	r3, [r3, #28]
   18668:	str	r3, [fp, #-12]
   1866c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18670:	ldr	r2, [r3, #36]	; 0x24
   18674:	ldr	r3, [fp, #-160]	; 0xffffff60
   18678:	ldr	r3, [r3, #48]	; 0x30
   1867c:	cmp	r2, r3
   18680:	movlt	r3, r2
   18684:	movge	r3, r3
   18688:	str	r3, [fp, #-16]
   1868c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18690:	ldrb	r3, [r3, #74]	; 0x4a
   18694:	cmp	r3, #0
   18698:	bne	18a3c <__assert_fail@plt+0x74f8>
   1869c:	ldr	r3, [fp, #-160]	; 0xffffff60
   186a0:	ldr	r3, [r3, #64]	; 0x40
   186a4:	cmp	r3, #0
   186a8:	bne	18a3c <__assert_fail@plt+0x74f8>
   186ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   186b0:	ldrb	r3, [r3, #76]	; 0x4c
   186b4:	cmp	r3, #0
   186b8:	bne	18a3c <__assert_fail@plt+0x74f8>
   186bc:	b	18a0c <__assert_fail@plt+0x74c8>
   186c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   186c4:	ldr	r3, [r3]
   186c8:	ldr	r2, [fp, #-160]	; 0xffffff60
   186cc:	ldr	r1, [r2, #24]
   186d0:	ldr	r2, [fp, #-12]
   186d4:	add	r2, r1, r2
   186d8:	add	r3, r3, r2
   186dc:	ldrb	r3, [r3]
   186e0:	strb	r3, [fp, #-37]	; 0xffffffdb
   186e4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   186e8:	bic	r3, r3, #127	; 0x7f
   186ec:	cmp	r3, #0
   186f0:	bne	18778 <__assert_fail@plt+0x7234>
   186f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   186f8:	add	r3, r3, #16
   186fc:	mov	r0, r3
   18700:	bl	11280 <mbsinit@plt>
   18704:	mov	r3, r0
   18708:	cmp	r3, #0
   1870c:	beq	18778 <__assert_fail@plt+0x7234>
   18710:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   18714:	mov	r0, r3
   18718:	bl	11514 <towupper@plt>
   1871c:	str	r0, [fp, #-44]	; 0xffffffd4
   18720:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18724:	bic	r3, r3, #127	; 0x7f
   18728:	cmp	r3, #0
   1872c:	bne	18778 <__assert_fail@plt+0x7234>
   18730:	ldr	r3, [fp, #-160]	; 0xffffff60
   18734:	ldr	r2, [r3, #4]
   18738:	ldr	r3, [fp, #-12]
   1873c:	add	r3, r2, r3
   18740:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18744:	uxtb	r2, r2
   18748:	strb	r2, [r3]
   1874c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18750:	ldr	r2, [r3, #8]
   18754:	ldr	r3, [fp, #-12]
   18758:	lsl	r3, r3, #2
   1875c:	add	r3, r2, r3
   18760:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18764:	str	r2, [r3]
   18768:	ldr	r3, [fp, #-12]
   1876c:	add	r3, r3, #1
   18770:	str	r3, [fp, #-12]
   18774:	b	18a0c <__assert_fail@plt+0x74c8>
   18778:	ldr	r2, [fp, #-16]
   1877c:	ldr	r3, [fp, #-12]
   18780:	sub	r3, r2, r3
   18784:	str	r3, [fp, #-48]	; 0xffffffd0
   18788:	ldr	r2, [fp, #-160]	; 0xffffff60
   1878c:	sub	r3, fp, #80	; 0x50
   18790:	add	r2, r2, #16
   18794:	ldm	r2, {r0, r1}
   18798:	stm	r3, {r0, r1}
   1879c:	ldr	r3, [fp, #-160]	; 0xffffff60
   187a0:	ldr	r2, [r3]
   187a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   187a8:	ldr	r3, [r3, #24]
   187ac:	mov	r1, r3
   187b0:	ldr	r3, [fp, #-12]
   187b4:	add	r3, r1, r3
   187b8:	add	r1, r2, r3
   187bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   187c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   187c4:	add	r3, r3, #16
   187c8:	sub	r0, fp, #148	; 0x94
   187cc:	bl	33f40 <__assert_fail@plt+0x229fc>
   187d0:	str	r0, [fp, #-52]	; 0xffffffcc
   187d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   187d8:	cmp	r3, #0
   187dc:	movne	r3, #1
   187e0:	moveq	r3, #0
   187e4:	uxtb	r3, r3
   187e8:	cmp	r3, #0
   187ec:	beq	18948 <__assert_fail@plt+0x7404>
   187f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   187f4:	cmn	r3, #3
   187f8:	movls	r3, #1
   187fc:	movhi	r3, #0
   18800:	uxtb	r3, r3
   18804:	cmp	r3, #0
   18808:	beq	18948 <__assert_fail@plt+0x7404>
   1880c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18810:	mov	r0, r3
   18814:	bl	11514 <towupper@plt>
   18818:	str	r0, [fp, #-56]	; 0xffffffc8
   1881c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   18820:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18824:	cmp	r2, r3
   18828:	beq	18898 <__assert_fail@plt+0x7354>
   1882c:	sub	r2, fp, #80	; 0x50
   18830:	sub	r3, fp, #144	; 0x90
   18834:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18838:	mov	r0, r3
   1883c:	bl	111c0 <wcrtomb@plt>
   18840:	str	r0, [fp, #-60]	; 0xffffffc4
   18844:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18848:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1884c:	cmp	r2, r3
   18850:	moveq	r3, #1
   18854:	movne	r3, #0
   18858:	uxtb	r3, r3
   1885c:	cmp	r3, #0
   18860:	beq	18888 <__assert_fail@plt+0x7344>
   18864:	ldr	r3, [fp, #-160]	; 0xffffff60
   18868:	ldr	r2, [r3, #4]
   1886c:	ldr	r3, [fp, #-12]
   18870:	add	r3, r2, r3
   18874:	sub	r1, fp, #144	; 0x90
   18878:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1887c:	mov	r0, r3
   18880:	bl	11250 <memcpy@plt>
   18884:	b	188d4 <__assert_fail@plt+0x7390>
   18888:	ldr	r3, [fp, #-12]
   1888c:	str	r3, [fp, #-8]
   18890:	nop			; (mov r0, r0)
   18894:	b	18a4c <__assert_fail@plt+0x7508>
   18898:	ldr	r3, [fp, #-160]	; 0xffffff60
   1889c:	ldr	r2, [r3, #4]
   188a0:	ldr	r3, [fp, #-12]
   188a4:	add	r0, r2, r3
   188a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   188ac:	ldr	r2, [r3]
   188b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   188b4:	ldr	r3, [r3, #24]
   188b8:	mov	r1, r3
   188bc:	ldr	r3, [fp, #-12]
   188c0:	add	r3, r1, r3
   188c4:	add	r3, r2, r3
   188c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   188cc:	mov	r1, r3
   188d0:	bl	11250 <memcpy@plt>
   188d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   188d8:	ldr	r2, [r3, #8]
   188dc:	ldr	r3, [fp, #-12]
   188e0:	add	r1, r3, #1
   188e4:	str	r1, [fp, #-12]
   188e8:	lsl	r3, r3, #2
   188ec:	add	r3, r2, r3
   188f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   188f4:	str	r2, [r3]
   188f8:	ldr	r2, [fp, #-12]
   188fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18900:	add	r3, r2, r3
   18904:	sub	r3, r3, #1
   18908:	str	r3, [fp, #-48]	; 0xffffffd0
   1890c:	b	18934 <__assert_fail@plt+0x73f0>
   18910:	ldr	r3, [fp, #-160]	; 0xffffff60
   18914:	ldr	r2, [r3, #8]
   18918:	ldr	r3, [fp, #-12]
   1891c:	add	r1, r3, #1
   18920:	str	r1, [fp, #-12]
   18924:	lsl	r3, r3, #2
   18928:	add	r3, r2, r3
   1892c:	mvn	r2, #0
   18930:	str	r2, [r3]
   18934:	ldr	r2, [fp, #-12]
   18938:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1893c:	cmp	r2, r3
   18940:	blt	18910 <__assert_fail@plt+0x73cc>
   18944:	b	18a0c <__assert_fail@plt+0x74c8>
   18948:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1894c:	cmn	r3, #1
   18950:	beq	18984 <__assert_fail@plt+0x7440>
   18954:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18958:	cmp	r3, #0
   1895c:	beq	18984 <__assert_fail@plt+0x7440>
   18960:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18964:	cmn	r3, #2
   18968:	bne	189f4 <__assert_fail@plt+0x74b0>
   1896c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18970:	ldr	r2, [r3, #36]	; 0x24
   18974:	ldr	r3, [fp, #-160]	; 0xffffff60
   18978:	ldr	r3, [r3, #48]	; 0x30
   1897c:	cmp	r2, r3
   18980:	blt	189f4 <__assert_fail@plt+0x74b0>
   18984:	ldr	r3, [fp, #-160]	; 0xffffff60
   18988:	ldr	r2, [r3, #4]
   1898c:	ldr	r3, [fp, #-12]
   18990:	add	r3, r2, r3
   18994:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   18998:	strb	r2, [r3]
   1899c:	ldr	r3, [fp, #-160]	; 0xffffff60
   189a0:	ldr	r2, [r3, #8]
   189a4:	ldr	r3, [fp, #-12]
   189a8:	add	r1, r3, #1
   189ac:	str	r1, [fp, #-12]
   189b0:	lsl	r3, r3, #2
   189b4:	add	r3, r2, r3
   189b8:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   189bc:	str	r2, [r3]
   189c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   189c4:	cmn	r3, #1
   189c8:	moveq	r3, #1
   189cc:	movne	r3, #0
   189d0:	uxtb	r3, r3
   189d4:	cmp	r3, #0
   189d8:	beq	18a0c <__assert_fail@plt+0x74c8>
   189dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   189e0:	add	r3, r3, #16
   189e4:	sub	r2, fp, #80	; 0x50
   189e8:	ldm	r2, {r0, r1}
   189ec:	stm	r3, {r0, r1}
   189f0:	b	18a0c <__assert_fail@plt+0x74c8>
   189f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   189f8:	add	r3, r3, #16
   189fc:	sub	r2, fp, #80	; 0x50
   18a00:	ldm	r2, {r0, r1}
   18a04:	stm	r3, {r0, r1}
   18a08:	b	18a1c <__assert_fail@plt+0x74d8>
   18a0c:	ldr	r2, [fp, #-12]
   18a10:	ldr	r3, [fp, #-16]
   18a14:	cmp	r2, r3
   18a18:	blt	186c0 <__assert_fail@plt+0x717c>
   18a1c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18a20:	ldr	r2, [fp, #-12]
   18a24:	str	r2, [r3, #28]
   18a28:	ldr	r3, [fp, #-160]	; 0xffffff60
   18a2c:	ldr	r2, [fp, #-12]
   18a30:	str	r2, [r3, #32]
   18a34:	mov	r3, #0
   18a38:	b	1917c <__assert_fail@plt+0x7c38>
   18a3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18a40:	ldr	r3, [r3, #32]
   18a44:	str	r3, [fp, #-8]
   18a48:	b	19150 <__assert_fail@plt+0x7c0c>
   18a4c:	ldr	r2, [fp, #-16]
   18a50:	ldr	r3, [fp, #-12]
   18a54:	sub	r3, r2, r3
   18a58:	str	r3, [fp, #-48]	; 0xffffffd0
   18a5c:	ldr	r2, [fp, #-160]	; 0xffffff60
   18a60:	sub	r3, fp, #80	; 0x50
   18a64:	add	r2, r2, #16
   18a68:	ldm	r2, {r0, r1}
   18a6c:	stm	r3, {r0, r1}
   18a70:	ldr	r3, [fp, #-160]	; 0xffffff60
   18a74:	ldr	r3, [r3, #64]	; 0x40
   18a78:	cmp	r3, #0
   18a7c:	movne	r3, #1
   18a80:	moveq	r3, #0
   18a84:	uxtb	r3, r3
   18a88:	cmp	r3, #0
   18a8c:	beq	18b2c <__assert_fail@plt+0x75e8>
   18a90:	mov	r3, #0
   18a94:	str	r3, [fp, #-24]	; 0xffffffe8
   18a98:	b	18afc <__assert_fail@plt+0x75b8>
   18a9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18aa0:	ldr	r3, [r3]
   18aa4:	ldr	r2, [fp, #-160]	; 0xffffff60
   18aa8:	ldr	r1, [r2, #24]
   18aac:	ldr	r2, [fp, #-8]
   18ab0:	add	r1, r1, r2
   18ab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ab8:	add	r2, r1, r2
   18abc:	add	r3, r3, r2
   18ac0:	ldrb	r3, [r3]
   18ac4:	str	r3, [fp, #-64]	; 0xffffffc0
   18ac8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18acc:	ldr	r2, [r3, #64]	; 0x40
   18ad0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18ad4:	add	r3, r2, r3
   18ad8:	ldrb	r1, [r3]
   18adc:	sub	r2, fp, #144	; 0x90
   18ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ae4:	add	r3, r2, r3
   18ae8:	mov	r2, r1
   18aec:	strb	r2, [r3]
   18af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18af4:	add	r3, r3, #1
   18af8:	str	r3, [fp, #-24]	; 0xffffffe8
   18afc:	ldr	r3, [fp, #-160]	; 0xffffff60
   18b00:	ldr	r2, [r3, #80]	; 0x50
   18b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b08:	cmp	r2, r3
   18b0c:	ble	18b20 <__assert_fail@plt+0x75dc>
   18b10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b18:	cmp	r2, r3
   18b1c:	blt	18a9c <__assert_fail@plt+0x7558>
   18b20:	sub	r3, fp, #144	; 0x90
   18b24:	str	r3, [fp, #-20]	; 0xffffffec
   18b28:	b	18b50 <__assert_fail@plt+0x760c>
   18b2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18b30:	ldr	r2, [r3]
   18b34:	ldr	r3, [fp, #-160]	; 0xffffff60
   18b38:	ldr	r3, [r3, #24]
   18b3c:	mov	r1, r3
   18b40:	ldr	r3, [fp, #-8]
   18b44:	add	r3, r1, r3
   18b48:	add	r3, r2, r3
   18b4c:	str	r3, [fp, #-20]	; 0xffffffec
   18b50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18b54:	ldr	r3, [fp, #-160]	; 0xffffff60
   18b58:	add	r3, r3, #16
   18b5c:	sub	r0, fp, #152	; 0x98
   18b60:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b64:	bl	33f40 <__assert_fail@plt+0x229fc>
   18b68:	str	r0, [fp, #-52]	; 0xffffffcc
   18b6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b70:	cmp	r3, #0
   18b74:	movne	r3, #1
   18b78:	moveq	r3, #0
   18b7c:	uxtb	r3, r3
   18b80:	cmp	r3, #0
   18b84:	beq	18fdc <__assert_fail@plt+0x7a98>
   18b88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18b8c:	cmn	r3, #3
   18b90:	movls	r3, #1
   18b94:	movhi	r3, #0
   18b98:	uxtb	r3, r3
   18b9c:	cmp	r3, #0
   18ba0:	beq	18fdc <__assert_fail@plt+0x7a98>
   18ba4:	ldr	r3, [fp, #-152]	; 0xffffff68
   18ba8:	mov	r0, r3
   18bac:	bl	11514 <towupper@plt>
   18bb0:	str	r0, [fp, #-68]	; 0xffffffbc
   18bb4:	ldr	r3, [fp, #-152]	; 0xffffff68
   18bb8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18bbc:	cmp	r2, r3
   18bc0:	beq	18ec4 <__assert_fail@plt+0x7980>
   18bc4:	sub	r2, fp, #80	; 0x50
   18bc8:	sub	r3, fp, #144	; 0x90
   18bcc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18bd0:	mov	r0, r3
   18bd4:	bl	111c0 <wcrtomb@plt>
   18bd8:	str	r0, [fp, #-72]	; 0xffffffb8
   18bdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18be0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18be4:	cmp	r2, r3
   18be8:	moveq	r3, #1
   18bec:	movne	r3, #0
   18bf0:	uxtb	r3, r3
   18bf4:	cmp	r3, #0
   18bf8:	beq	18c20 <__assert_fail@plt+0x76dc>
   18bfc:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c00:	ldr	r2, [r3, #4]
   18c04:	ldr	r3, [fp, #-12]
   18c08:	add	r3, r2, r3
   18c0c:	sub	r1, fp, #144	; 0x90
   18c10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18c14:	mov	r0, r3
   18c18:	bl	11250 <memcpy@plt>
   18c1c:	b	18ee4 <__assert_fail@plt+0x79a0>
   18c20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18c24:	cmn	r3, #1
   18c28:	beq	18ea0 <__assert_fail@plt+0x795c>
   18c2c:	ldr	r2, [fp, #-12]
   18c30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18c34:	add	r3, r2, r3
   18c38:	ldr	r2, [fp, #-160]	; 0xffffff60
   18c3c:	ldr	r2, [r2, #36]	; 0x24
   18c40:	cmp	r3, r2
   18c44:	bls	18c60 <__assert_fail@plt+0x771c>
   18c48:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c4c:	add	r3, r3, #16
   18c50:	sub	r2, fp, #80	; 0x50
   18c54:	ldm	r2, {r0, r1}
   18c58:	stm	r3, {r0, r1}
   18c5c:	b	19160 <__assert_fail@plt+0x7c1c>
   18c60:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c64:	ldr	r3, [r3, #12]
   18c68:	cmp	r3, #0
   18c6c:	bne	18cac <__assert_fail@plt+0x7768>
   18c70:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c74:	ldr	r3, [r3, #36]	; 0x24
   18c78:	lsl	r3, r3, #2
   18c7c:	mov	r0, r3
   18c80:	bl	33244 <__assert_fail@plt+0x21d00>
   18c84:	mov	r3, r0
   18c88:	mov	r2, r3
   18c8c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c90:	str	r2, [r3, #12]
   18c94:	ldr	r3, [fp, #-160]	; 0xffffff60
   18c98:	ldr	r3, [r3, #12]
   18c9c:	cmp	r3, #0
   18ca0:	bne	18cac <__assert_fail@plt+0x7768>
   18ca4:	mov	r3, #12
   18ca8:	b	1917c <__assert_fail@plt+0x7c38>
   18cac:	ldr	r3, [fp, #-160]	; 0xffffff60
   18cb0:	ldrb	r3, [r3, #76]	; 0x4c
   18cb4:	cmp	r3, #0
   18cb8:	bne	18d0c <__assert_fail@plt+0x77c8>
   18cbc:	mov	r3, #0
   18cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   18cc4:	b	18cf0 <__assert_fail@plt+0x77ac>
   18cc8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ccc:	ldr	r2, [r3, #12]
   18cd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18cd4:	lsl	r3, r3, #2
   18cd8:	add	r3, r2, r3
   18cdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18ce0:	str	r2, [r3]
   18ce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ce8:	add	r3, r3, #1
   18cec:	str	r3, [fp, #-28]	; 0xffffffe4
   18cf0:	ldr	r3, [fp, #-12]
   18cf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18cf8:	cmp	r2, r3
   18cfc:	bcc	18cc8 <__assert_fail@plt+0x7784>
   18d00:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d04:	mov	r2, #1
   18d08:	strb	r2, [r3, #76]	; 0x4c
   18d0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d10:	ldr	r2, [r3, #4]
   18d14:	ldr	r3, [fp, #-12]
   18d18:	add	r3, r2, r3
   18d1c:	sub	r1, fp, #144	; 0x90
   18d20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18d24:	mov	r0, r3
   18d28:	bl	11250 <memcpy@plt>
   18d2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d30:	ldr	r2, [r3, #8]
   18d34:	ldr	r3, [fp, #-12]
   18d38:	lsl	r3, r3, #2
   18d3c:	add	r3, r2, r3
   18d40:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18d44:	str	r2, [r3]
   18d48:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d4c:	ldr	r2, [r3, #12]
   18d50:	ldr	r3, [fp, #-12]
   18d54:	lsl	r3, r3, #2
   18d58:	add	r3, r2, r3
   18d5c:	ldr	r2, [fp, #-8]
   18d60:	str	r2, [r3]
   18d64:	mov	r3, #1
   18d68:	str	r3, [fp, #-28]	; 0xffffffe4
   18d6c:	b	18de8 <__assert_fail@plt+0x78a4>
   18d70:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d74:	ldr	r2, [r3, #12]
   18d78:	ldr	r1, [fp, #-12]
   18d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d80:	add	r3, r1, r3
   18d84:	lsl	r3, r3, #2
   18d88:	add	r2, r2, r3
   18d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18d94:	cmp	r1, r3
   18d98:	bcc	18da8 <__assert_fail@plt+0x7864>
   18d9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18da0:	sub	r3, r3, #1
   18da4:	b	18dac <__assert_fail@plt+0x7868>
   18da8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18dac:	ldr	r1, [fp, #-8]
   18db0:	add	r3, r3, r1
   18db4:	str	r3, [r2]
   18db8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18dbc:	ldr	r2, [r3, #8]
   18dc0:	ldr	r1, [fp, #-12]
   18dc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18dc8:	add	r3, r1, r3
   18dcc:	lsl	r3, r3, #2
   18dd0:	add	r3, r2, r3
   18dd4:	mvn	r2, #0
   18dd8:	str	r2, [r3]
   18ddc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18de0:	add	r3, r3, #1
   18de4:	str	r3, [fp, #-28]	; 0xffffffe4
   18de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18dec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18df0:	cmp	r2, r3
   18df4:	bcc	18d70 <__assert_fail@plt+0x782c>
   18df8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18dfc:	ldr	r3, [r3, #48]	; 0x30
   18e00:	mov	r1, r3
   18e04:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18e08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e0c:	sub	r3, r2, r3
   18e10:	add	r3, r1, r3
   18e14:	mov	r2, r3
   18e18:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e1c:	str	r2, [r3, #48]	; 0x30
   18e20:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e24:	ldr	r2, [r3, #52]	; 0x34
   18e28:	ldr	r3, [fp, #-8]
   18e2c:	cmp	r2, r3
   18e30:	ble	18e5c <__assert_fail@plt+0x7918>
   18e34:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e38:	ldr	r3, [r3, #56]	; 0x38
   18e3c:	mov	r1, r3
   18e40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18e44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e48:	sub	r3, r2, r3
   18e4c:	add	r3, r1, r3
   18e50:	mov	r2, r3
   18e54:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e58:	str	r2, [r3, #56]	; 0x38
   18e5c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e60:	ldr	r2, [r3, #36]	; 0x24
   18e64:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e68:	ldr	r3, [r3, #48]	; 0x30
   18e6c:	cmp	r2, r3
   18e70:	movlt	r3, r2
   18e74:	movge	r3, r3
   18e78:	str	r3, [fp, #-16]
   18e7c:	ldr	r2, [fp, #-12]
   18e80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18e84:	add	r3, r2, r3
   18e88:	str	r3, [fp, #-12]
   18e8c:	ldr	r2, [fp, #-8]
   18e90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e94:	add	r3, r2, r3
   18e98:	str	r3, [fp, #-8]
   18e9c:	b	19150 <__assert_fail@plt+0x7c0c>
   18ea0:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ea4:	ldr	r2, [r3, #4]
   18ea8:	ldr	r3, [fp, #-12]
   18eac:	add	r3, r2, r3
   18eb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18eb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18eb8:	mov	r0, r3
   18ebc:	bl	11250 <memcpy@plt>
   18ec0:	b	18ee4 <__assert_fail@plt+0x79a0>
   18ec4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ec8:	ldr	r2, [r3, #4]
   18ecc:	ldr	r3, [fp, #-12]
   18ed0:	add	r3, r2, r3
   18ed4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
   18edc:	mov	r0, r3
   18ee0:	bl	11250 <memcpy@plt>
   18ee4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ee8:	ldrb	r3, [r3, #76]	; 0x4c
   18eec:	cmp	r3, #0
   18ef0:	movne	r3, #1
   18ef4:	moveq	r3, #0
   18ef8:	uxtb	r3, r3
   18efc:	cmp	r3, #0
   18f00:	beq	18f58 <__assert_fail@plt+0x7a14>
   18f04:	mov	r3, #0
   18f08:	str	r3, [fp, #-32]	; 0xffffffe0
   18f0c:	b	18f48 <__assert_fail@plt+0x7a04>
   18f10:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f14:	ldr	r2, [r3, #12]
   18f18:	ldr	r1, [fp, #-12]
   18f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f20:	add	r3, r1, r3
   18f24:	lsl	r3, r3, #2
   18f28:	add	r3, r2, r3
   18f2c:	ldr	r1, [fp, #-8]
   18f30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18f34:	add	r2, r1, r2
   18f38:	str	r2, [r3]
   18f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f40:	add	r3, r3, #1
   18f44:	str	r3, [fp, #-32]	; 0xffffffe0
   18f48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18f4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18f50:	cmp	r2, r3
   18f54:	bcc	18f10 <__assert_fail@plt+0x79cc>
   18f58:	ldr	r2, [fp, #-8]
   18f5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18f60:	add	r3, r2, r3
   18f64:	str	r3, [fp, #-8]
   18f68:	ldr	r3, [fp, #-160]	; 0xffffff60
   18f6c:	ldr	r2, [r3, #8]
   18f70:	ldr	r3, [fp, #-12]
   18f74:	add	r1, r3, #1
   18f78:	str	r1, [fp, #-12]
   18f7c:	lsl	r3, r3, #2
   18f80:	add	r3, r2, r3
   18f84:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18f88:	str	r2, [r3]
   18f8c:	ldr	r2, [fp, #-12]
   18f90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18f94:	add	r3, r2, r3
   18f98:	sub	r3, r3, #1
   18f9c:	str	r3, [fp, #-48]	; 0xffffffd0
   18fa0:	b	18fc8 <__assert_fail@plt+0x7a84>
   18fa4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18fa8:	ldr	r2, [r3, #8]
   18fac:	ldr	r3, [fp, #-12]
   18fb0:	add	r1, r3, #1
   18fb4:	str	r1, [fp, #-12]
   18fb8:	lsl	r3, r3, #2
   18fbc:	add	r3, r2, r3
   18fc0:	mvn	r2, #0
   18fc4:	str	r2, [r3]
   18fc8:	ldr	r2, [fp, #-12]
   18fcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18fd0:	cmp	r2, r3
   18fd4:	blt	18fa4 <__assert_fail@plt+0x7a60>
   18fd8:	b	19150 <__assert_fail@plt+0x7c0c>
   18fdc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18fe0:	cmn	r3, #1
   18fe4:	beq	19018 <__assert_fail@plt+0x7ad4>
   18fe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18fec:	cmp	r3, #0
   18ff0:	beq	19018 <__assert_fail@plt+0x7ad4>
   18ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18ff8:	cmn	r3, #2
   18ffc:	bne	19130 <__assert_fail@plt+0x7bec>
   19000:	ldr	r3, [fp, #-160]	; 0xffffff60
   19004:	ldr	r2, [r3, #36]	; 0x24
   19008:	ldr	r3, [fp, #-160]	; 0xffffff60
   1900c:	ldr	r3, [r3, #48]	; 0x30
   19010:	cmp	r2, r3
   19014:	blt	19130 <__assert_fail@plt+0x7bec>
   19018:	ldr	r3, [fp, #-160]	; 0xffffff60
   1901c:	ldr	r3, [r3]
   19020:	ldr	r2, [fp, #-160]	; 0xffffff60
   19024:	ldr	r1, [r2, #24]
   19028:	ldr	r2, [fp, #-8]
   1902c:	add	r2, r1, r2
   19030:	add	r3, r3, r2
   19034:	ldrb	r3, [r3]
   19038:	str	r3, [fp, #-36]	; 0xffffffdc
   1903c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19040:	ldr	r3, [r3, #64]	; 0x40
   19044:	cmp	r3, #0
   19048:	movne	r3, #1
   1904c:	moveq	r3, #0
   19050:	uxtb	r3, r3
   19054:	cmp	r3, #0
   19058:	beq	19074 <__assert_fail@plt+0x7b30>
   1905c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19060:	ldr	r2, [r3, #64]	; 0x40
   19064:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19068:	add	r3, r2, r3
   1906c:	ldrb	r3, [r3]
   19070:	str	r3, [fp, #-36]	; 0xffffffdc
   19074:	ldr	r3, [fp, #-160]	; 0xffffff60
   19078:	ldr	r2, [r3, #4]
   1907c:	ldr	r3, [fp, #-12]
   19080:	add	r3, r2, r3
   19084:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19088:	uxtb	r2, r2
   1908c:	strb	r2, [r3]
   19090:	ldr	r3, [fp, #-160]	; 0xffffff60
   19094:	ldrb	r3, [r3, #76]	; 0x4c
   19098:	cmp	r3, #0
   1909c:	movne	r3, #1
   190a0:	moveq	r3, #0
   190a4:	uxtb	r3, r3
   190a8:	cmp	r3, #0
   190ac:	beq	190cc <__assert_fail@plt+0x7b88>
   190b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   190b4:	ldr	r2, [r3, #12]
   190b8:	ldr	r3, [fp, #-12]
   190bc:	lsl	r3, r3, #2
   190c0:	add	r3, r2, r3
   190c4:	ldr	r2, [fp, #-8]
   190c8:	str	r2, [r3]
   190cc:	ldr	r3, [fp, #-8]
   190d0:	add	r3, r3, #1
   190d4:	str	r3, [fp, #-8]
   190d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   190dc:	ldr	r2, [r3, #8]
   190e0:	ldr	r3, [fp, #-12]
   190e4:	add	r1, r3, #1
   190e8:	str	r1, [fp, #-12]
   190ec:	lsl	r3, r3, #2
   190f0:	add	r3, r2, r3
   190f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   190f8:	str	r2, [r3]
   190fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19100:	cmn	r3, #1
   19104:	moveq	r3, #1
   19108:	movne	r3, #0
   1910c:	uxtb	r3, r3
   19110:	cmp	r3, #0
   19114:	beq	1914c <__assert_fail@plt+0x7c08>
   19118:	ldr	r3, [fp, #-160]	; 0xffffff60
   1911c:	add	r3, r3, #16
   19120:	sub	r2, fp, #80	; 0x50
   19124:	ldm	r2, {r0, r1}
   19128:	stm	r3, {r0, r1}
   1912c:	b	1914c <__assert_fail@plt+0x7c08>
   19130:	ldr	r3, [fp, #-160]	; 0xffffff60
   19134:	add	r3, r3, #16
   19138:	sub	r2, fp, #80	; 0x50
   1913c:	ldm	r2, {r0, r1}
   19140:	stm	r3, {r0, r1}
   19144:	nop			; (mov r0, r0)
   19148:	b	19160 <__assert_fail@plt+0x7c1c>
   1914c:	nop			; (mov r0, r0)
   19150:	ldr	r2, [fp, #-12]
   19154:	ldr	r3, [fp, #-16]
   19158:	cmp	r2, r3
   1915c:	blt	18a4c <__assert_fail@plt+0x7508>
   19160:	ldr	r3, [fp, #-160]	; 0xffffff60
   19164:	ldr	r2, [fp, #-12]
   19168:	str	r2, [r3, #28]
   1916c:	ldr	r3, [fp, #-160]	; 0xffffff60
   19170:	ldr	r2, [fp, #-8]
   19174:	str	r2, [r3, #32]
   19178:	mov	r3, #0
   1917c:	mov	r0, r3
   19180:	sub	sp, fp, #4
   19184:	pop	{fp, pc}
   19188:	push	{fp, lr}
   1918c:	add	fp, sp, #4
   19190:	sub	sp, sp, #48	; 0x30
   19194:	str	r0, [fp, #-40]	; 0xffffffd8
   19198:	str	r1, [fp, #-44]	; 0xffffffd4
   1919c:	str	r2, [fp, #-48]	; 0xffffffd0
   191a0:	mvn	r3, #0
   191a4:	str	r3, [fp, #-16]
   191a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191ac:	ldr	r2, [r3, #24]
   191b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191b4:	ldr	r3, [r3, #32]
   191b8:	add	r3, r2, r3
   191bc:	str	r3, [fp, #-8]
   191c0:	b	192f0 <__assert_fail@plt+0x7dac>
   191c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191c8:	ldr	r2, [r3, #44]	; 0x2c
   191cc:	ldr	r3, [fp, #-8]
   191d0:	sub	r3, r2, r3
   191d4:	str	r3, [fp, #-20]	; 0xffffffec
   191d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191dc:	sub	r3, fp, #28
   191e0:	add	r2, r2, #16
   191e4:	ldm	r2, {r0, r1}
   191e8:	stm	r3, {r0, r1}
   191ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191f0:	ldr	r2, [r3]
   191f4:	ldr	r3, [fp, #-8]
   191f8:	add	r1, r2, r3
   191fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19204:	add	r3, r3, #16
   19208:	sub	r0, fp, #32
   1920c:	bl	33f40 <__assert_fail@plt+0x229fc>
   19210:	str	r0, [fp, #-12]
   19214:	ldr	r3, [fp, #-12]
   19218:	cmn	r3, #2
   1921c:	moveq	r3, #1
   19220:	movne	r3, #0
   19224:	uxtb	r3, r3
   19228:	cmp	r3, #0
   1922c:	bne	1924c <__assert_fail@plt+0x7d08>
   19230:	ldr	r3, [fp, #-12]
   19234:	cmn	r3, #1
   19238:	moveq	r3, #1
   1923c:	movne	r3, #0
   19240:	uxtb	r3, r3
   19244:	cmp	r3, #0
   19248:	beq	19254 <__assert_fail@plt+0x7d10>
   1924c:	mov	r3, #1
   19250:	b	19258 <__assert_fail@plt+0x7d14>
   19254:	mov	r3, #0
   19258:	cmp	r3, #0
   1925c:	bne	1927c <__assert_fail@plt+0x7d38>
   19260:	ldr	r3, [fp, #-12]
   19264:	cmp	r3, #0
   19268:	moveq	r3, #1
   1926c:	movne	r3, #0
   19270:	uxtb	r3, r3
   19274:	cmp	r3, #0
   19278:	beq	192d8 <__assert_fail@plt+0x7d94>
   1927c:	ldr	r3, [fp, #-12]
   19280:	cmp	r3, #0
   19284:	beq	19294 <__assert_fail@plt+0x7d50>
   19288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1928c:	cmp	r3, #0
   19290:	bne	192a0 <__assert_fail@plt+0x7d5c>
   19294:	mov	r3, #0
   19298:	str	r3, [fp, #-16]
   1929c:	b	192b8 <__assert_fail@plt+0x7d74>
   192a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192a4:	ldr	r2, [r3]
   192a8:	ldr	r3, [fp, #-8]
   192ac:	add	r3, r2, r3
   192b0:	ldrb	r3, [r3]
   192b4:	str	r3, [fp, #-16]
   192b8:	mov	r3, #1
   192bc:	str	r3, [fp, #-12]
   192c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192c4:	add	r3, r3, #16
   192c8:	sub	r2, fp, #28
   192cc:	ldm	r2, {r0, r1}
   192d0:	stm	r3, {r0, r1}
   192d4:	b	192e0 <__assert_fail@plt+0x7d9c>
   192d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192dc:	str	r3, [fp, #-16]
   192e0:	ldr	r2, [fp, #-8]
   192e4:	ldr	r3, [fp, #-12]
   192e8:	add	r3, r2, r3
   192ec:	str	r3, [fp, #-8]
   192f0:	ldr	r2, [fp, #-8]
   192f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   192f8:	cmp	r2, r3
   192fc:	blt	191c4 <__assert_fail@plt+0x7c80>
   19300:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19304:	ldr	r2, [fp, #-16]
   19308:	str	r2, [r3]
   1930c:	ldr	r3, [fp, #-8]
   19310:	mov	r0, r3
   19314:	sub	sp, fp, #4
   19318:	pop	{fp, pc}
   1931c:	push	{r4, fp, lr}
   19320:	add	fp, sp, #8
   19324:	sub	sp, sp, #28
   19328:	str	r0, [fp, #-32]	; 0xffffffe0
   1932c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19330:	ldr	r2, [r3, #36]	; 0x24
   19334:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19338:	ldr	r3, [r3, #48]	; 0x30
   1933c:	cmp	r2, r3
   19340:	movlt	r3, r2
   19344:	movge	r3, r3
   19348:	str	r3, [fp, #-24]	; 0xffffffe8
   1934c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19350:	ldr	r3, [r3, #28]
   19354:	str	r3, [fp, #-16]
   19358:	b	193e8 <__assert_fail@plt+0x7ea4>
   1935c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19360:	ldr	r3, [r3]
   19364:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19368:	ldr	r1, [r2, #24]
   1936c:	ldr	r2, [fp, #-16]
   19370:	add	r2, r1, r2
   19374:	add	r3, r3, r2
   19378:	ldrb	r3, [r3]
   1937c:	str	r3, [fp, #-20]	; 0xffffffec
   19380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19384:	ldr	r3, [r3, #64]	; 0x40
   19388:	cmp	r3, #0
   1938c:	movne	r3, #1
   19390:	moveq	r3, #0
   19394:	uxtb	r3, r3
   19398:	cmp	r3, #0
   1939c:	beq	193b8 <__assert_fail@plt+0x7e74>
   193a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193a4:	ldr	r2, [r3, #64]	; 0x40
   193a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   193ac:	add	r3, r2, r3
   193b0:	ldrb	r3, [r3]
   193b4:	str	r3, [fp, #-20]	; 0xffffffec
   193b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193bc:	ldr	r2, [r3, #4]
   193c0:	ldr	r3, [fp, #-16]
   193c4:	add	r4, r2, r3
   193c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   193cc:	bl	114c0 <toupper@plt>
   193d0:	mov	r3, r0
   193d4:	uxtb	r3, r3
   193d8:	strb	r3, [r4]
   193dc:	ldr	r3, [fp, #-16]
   193e0:	add	r3, r3, #1
   193e4:	str	r3, [fp, #-16]
   193e8:	ldr	r2, [fp, #-16]
   193ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193f0:	cmp	r2, r3
   193f4:	blt	1935c <__assert_fail@plt+0x7e18>
   193f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193fc:	ldr	r2, [fp, #-16]
   19400:	str	r2, [r3, #28]
   19404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19408:	ldr	r2, [fp, #-16]
   1940c:	str	r2, [r3, #32]
   19410:	nop			; (mov r0, r0)
   19414:	sub	sp, fp, #8
   19418:	pop	{r4, fp, pc}
   1941c:	push	{fp}		; (str fp, [sp, #-4]!)
   19420:	add	fp, sp, #0
   19424:	sub	sp, sp, #28
   19428:	str	r0, [fp, #-24]	; 0xffffffe8
   1942c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19430:	ldr	r2, [r3, #36]	; 0x24
   19434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19438:	ldr	r3, [r3, #48]	; 0x30
   1943c:	cmp	r2, r3
   19440:	movlt	r3, r2
   19444:	movge	r3, r3
   19448:	str	r3, [fp, #-12]
   1944c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19450:	ldr	r3, [r3, #28]
   19454:	str	r3, [fp, #-8]
   19458:	b	194b4 <__assert_fail@plt+0x7f70>
   1945c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19460:	ldr	r3, [r3]
   19464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19468:	ldr	r1, [r2, #24]
   1946c:	ldr	r2, [fp, #-8]
   19470:	add	r2, r1, r2
   19474:	add	r3, r3, r2
   19478:	ldrb	r3, [r3]
   1947c:	str	r3, [fp, #-16]
   19480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19484:	ldr	r2, [r3, #4]
   19488:	ldr	r3, [fp, #-8]
   1948c:	add	r3, r2, r3
   19490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19494:	ldr	r1, [r2, #64]	; 0x40
   19498:	ldr	r2, [fp, #-16]
   1949c:	add	r2, r1, r2
   194a0:	ldrb	r2, [r2]
   194a4:	strb	r2, [r3]
   194a8:	ldr	r3, [fp, #-8]
   194ac:	add	r3, r3, #1
   194b0:	str	r3, [fp, #-8]
   194b4:	ldr	r2, [fp, #-8]
   194b8:	ldr	r3, [fp, #-12]
   194bc:	cmp	r2, r3
   194c0:	blt	1945c <__assert_fail@plt+0x7f18>
   194c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194c8:	ldr	r2, [fp, #-8]
   194cc:	str	r2, [r3, #28]
   194d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194d4:	ldr	r2, [fp, #-8]
   194d8:	str	r2, [r3, #32]
   194dc:	nop			; (mov r0, r0)
   194e0:	add	sp, fp, #0
   194e4:	pop	{fp}		; (ldr fp, [sp], #4)
   194e8:	bx	lr
   194ec:	push	{fp, lr}
   194f0:	add	fp, sp, #4
   194f4:	sub	sp, sp, #104	; 0x68
   194f8:	str	r0, [fp, #-96]	; 0xffffffa0
   194fc:	str	r1, [fp, #-100]	; 0xffffff9c
   19500:	str	r2, [fp, #-104]	; 0xffffff98
   19504:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19508:	ldr	r2, [r3, #24]
   1950c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19510:	cmp	r2, r3
   19514:	movle	r3, #1
   19518:	movgt	r3, #0
   1951c:	uxtb	r3, r3
   19520:	cmp	r3, #0
   19524:	beq	19540 <__assert_fail@plt+0x7ffc>
   19528:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1952c:	ldr	r3, [r3, #24]
   19530:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19534:	sub	r3, r2, r3
   19538:	str	r3, [fp, #-8]
   1953c:	b	19604 <__assert_fail@plt+0x80c0>
   19540:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19544:	ldr	r3, [r3, #80]	; 0x50
   19548:	cmp	r3, #1
   1954c:	ble	19568 <__assert_fail@plt+0x8024>
   19550:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19554:	add	r3, r3, #16
   19558:	mov	r2, #8
   1955c:	mov	r1, #0
   19560:	mov	r0, r3
   19564:	bl	11448 <memset@plt>
   19568:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1956c:	ldr	r2, [r3, #44]	; 0x2c
   19570:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19574:	str	r2, [r3, #48]	; 0x30
   19578:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1957c:	ldr	r2, [r3, #52]	; 0x34
   19580:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19584:	str	r2, [r3, #56]	; 0x38
   19588:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1958c:	mov	r2, #0
   19590:	str	r2, [r3, #28]
   19594:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19598:	mov	r2, #0
   1959c:	str	r2, [r3, #24]
   195a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195a4:	mov	r2, #0
   195a8:	str	r2, [r3, #32]
   195ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195b0:	mov	r2, #0
   195b4:	strb	r2, [r3, #76]	; 0x4c
   195b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   195bc:	and	r3, r3, #1
   195c0:	cmp	r3, #0
   195c4:	beq	195d0 <__assert_fail@plt+0x808c>
   195c8:	mov	r2, #4
   195cc:	b	195d4 <__assert_fail@plt+0x8090>
   195d0:	mov	r2, #6
   195d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195d8:	str	r2, [r3, #60]	; 0x3c
   195dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195e0:	ldrb	r3, [r3, #75]	; 0x4b
   195e4:	cmp	r3, #0
   195e8:	bne	195fc <__assert_fail@plt+0x80b8>
   195ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195f0:	ldr	r2, [r3]
   195f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   195f8:	str	r2, [r3, #4]
   195fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19600:	str	r3, [fp, #-8]
   19604:	ldr	r3, [fp, #-8]
   19608:	cmp	r3, #0
   1960c:	movne	r3, #1
   19610:	moveq	r3, #0
   19614:	uxtb	r3, r3
   19618:	cmp	r3, #0
   1961c:	beq	1a048 <__assert_fail@plt+0x8b04>
   19620:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19624:	ldr	r2, [r3, #32]
   19628:	ldr	r3, [fp, #-8]
   1962c:	cmp	r2, r3
   19630:	movgt	r3, #1
   19634:	movle	r3, #0
   19638:	uxtb	r3, r3
   1963c:	cmp	r3, #0
   19640:	beq	19b3c <__assert_fail@plt+0x85f8>
   19644:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19648:	ldrb	r3, [r3, #76]	; 0x4c
   1964c:	cmp	r3, #0
   19650:	beq	19a50 <__assert_fail@plt+0x850c>
   19654:	mov	r3, #0
   19658:	str	r3, [fp, #-12]
   1965c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19660:	ldr	r3, [r3, #28]
   19664:	str	r3, [fp, #-16]
   19668:	ldr	r2, [fp, #-16]
   1966c:	ldr	r3, [fp, #-12]
   19670:	add	r3, r2, r3
   19674:	lsr	r2, r3, #31
   19678:	add	r3, r2, r3
   1967c:	asr	r3, r3, #1
   19680:	str	r3, [fp, #-20]	; 0xffffffec
   19684:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19688:	ldr	r2, [r3, #12]
   1968c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19690:	lsl	r3, r3, #2
   19694:	add	r3, r2, r3
   19698:	ldr	r2, [r3]
   1969c:	ldr	r3, [fp, #-8]
   196a0:	cmp	r2, r3
   196a4:	ble	196b4 <__assert_fail@plt+0x8170>
   196a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   196ac:	str	r3, [fp, #-16]
   196b0:	b	196e4 <__assert_fail@plt+0x81a0>
   196b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   196b8:	ldr	r2, [r3, #12]
   196bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   196c0:	lsl	r3, r3, #2
   196c4:	add	r3, r2, r3
   196c8:	ldr	r2, [r3]
   196cc:	ldr	r3, [fp, #-8]
   196d0:	cmp	r2, r3
   196d4:	bge	196f8 <__assert_fail@plt+0x81b4>
   196d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   196dc:	add	r3, r3, #1
   196e0:	str	r3, [fp, #-12]
   196e4:	ldr	r2, [fp, #-12]
   196e8:	ldr	r3, [fp, #-16]
   196ec:	cmp	r2, r3
   196f0:	blt	19668 <__assert_fail@plt+0x8124>
   196f4:	b	196fc <__assert_fail@plt+0x81b8>
   196f8:	nop			; (mov r0, r0)
   196fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19700:	ldr	r2, [r3, #12]
   19704:	ldr	r3, [fp, #-20]	; 0xffffffec
   19708:	lsl	r3, r3, #2
   1970c:	add	r3, r2, r3
   19710:	ldr	r2, [r3]
   19714:	ldr	r3, [fp, #-8]
   19718:	cmp	r2, r3
   1971c:	bge	1972c <__assert_fail@plt+0x81e8>
   19720:	ldr	r3, [fp, #-20]	; 0xffffffec
   19724:	add	r3, r3, #1
   19728:	str	r3, [fp, #-20]	; 0xffffffec
   1972c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19730:	sub	r3, r3, #1
   19734:	ldr	r2, [fp, #-104]	; 0xffffff98
   19738:	mov	r1, r3
   1973c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19740:	bl	1a538 <__assert_fail@plt+0x8ff4>
   19744:	mov	r2, r0
   19748:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1974c:	str	r2, [r3, #60]	; 0x3c
   19750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19754:	ldr	r2, [r3, #28]
   19758:	ldr	r3, [fp, #-8]
   1975c:	cmp	r2, r3
   19760:	ble	198a0 <__assert_fail@plt+0x835c>
   19764:	ldr	r2, [fp, #-20]	; 0xffffffec
   19768:	ldr	r3, [fp, #-8]
   1976c:	cmp	r2, r3
   19770:	bne	198a0 <__assert_fail@plt+0x835c>
   19774:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19778:	ldr	r2, [r3, #12]
   1977c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19780:	lsl	r3, r3, #2
   19784:	add	r3, r2, r3
   19788:	ldr	r2, [r3]
   1978c:	ldr	r3, [fp, #-8]
   19790:	cmp	r2, r3
   19794:	bne	198a0 <__assert_fail@plt+0x835c>
   19798:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1979c:	ldr	r0, [r3, #8]
   197a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   197a4:	ldr	r2, [r3, #8]
   197a8:	ldr	r3, [fp, #-8]
   197ac:	lsl	r3, r3, #2
   197b0:	add	r1, r2, r3
   197b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   197b8:	ldr	r2, [r3, #28]
   197bc:	ldr	r3, [fp, #-8]
   197c0:	sub	r3, r2, r3
   197c4:	lsl	r3, r3, #2
   197c8:	mov	r2, r3
   197cc:	bl	11220 <memmove@plt>
   197d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   197d4:	ldr	r0, [r3, #4]
   197d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   197dc:	ldr	r2, [r3, #4]
   197e0:	ldr	r3, [fp, #-8]
   197e4:	add	r1, r2, r3
   197e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   197ec:	ldr	r2, [r3, #28]
   197f0:	ldr	r3, [fp, #-8]
   197f4:	sub	r3, r2, r3
   197f8:	mov	r2, r3
   197fc:	bl	11220 <memmove@plt>
   19800:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19804:	ldr	r2, [r3, #28]
   19808:	ldr	r3, [fp, #-8]
   1980c:	sub	r2, r2, r3
   19810:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19814:	str	r2, [r3, #28]
   19818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1981c:	ldr	r2, [r3, #32]
   19820:	ldr	r3, [fp, #-8]
   19824:	sub	r2, r2, r3
   19828:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1982c:	str	r2, [r3, #32]
   19830:	mov	r3, #0
   19834:	str	r3, [fp, #-12]
   19838:	b	19888 <__assert_fail@plt+0x8344>
   1983c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19840:	ldr	r2, [r3, #12]
   19844:	ldr	r3, [fp, #-12]
   19848:	lsl	r3, r3, #2
   1984c:	add	r3, r2, r3
   19850:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19854:	ldr	r1, [r2, #12]
   19858:	ldr	r0, [fp, #-12]
   1985c:	ldr	r2, [fp, #-8]
   19860:	add	r2, r0, r2
   19864:	lsl	r2, r2, #2
   19868:	add	r2, r1, r2
   1986c:	ldr	r1, [r2]
   19870:	ldr	r2, [fp, #-8]
   19874:	sub	r2, r1, r2
   19878:	str	r2, [r3]
   1987c:	ldr	r3, [fp, #-12]
   19880:	add	r3, r3, #1
   19884:	str	r3, [fp, #-12]
   19888:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1988c:	ldr	r2, [r3, #28]
   19890:	ldr	r3, [fp, #-12]
   19894:	cmp	r2, r3
   19898:	bgt	1983c <__assert_fail@plt+0x82f8>
   1989c:	b	1a020 <__assert_fail@plt+0x8adc>
   198a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198a4:	ldr	r2, [r3, #44]	; 0x2c
   198a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   198ac:	sub	r2, r2, r3
   198b0:	ldr	r3, [fp, #-8]
   198b4:	add	r2, r2, r3
   198b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198bc:	str	r2, [r3, #48]	; 0x30
   198c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198c4:	ldr	r2, [r3, #52]	; 0x34
   198c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   198cc:	sub	r2, r2, r3
   198d0:	ldr	r3, [fp, #-8]
   198d4:	add	r2, r2, r3
   198d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198dc:	str	r2, [r3, #56]	; 0x38
   198e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198e4:	mov	r2, #0
   198e8:	strb	r2, [r3, #76]	; 0x4c
   198ec:	b	198fc <__assert_fail@plt+0x83b8>
   198f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   198f4:	sub	r3, r3, #1
   198f8:	str	r3, [fp, #-20]	; 0xffffffec
   198fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19900:	cmp	r3, #0
   19904:	ble	19960 <__assert_fail@plt+0x841c>
   19908:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1990c:	ldr	r2, [r3, #12]
   19910:	ldr	r3, [fp, #-20]	; 0xffffffec
   19914:	sub	r3, r3, #-1073741823	; 0xc0000001
   19918:	lsl	r3, r3, #2
   1991c:	add	r3, r2, r3
   19920:	ldr	r2, [r3]
   19924:	ldr	r3, [fp, #-8]
   19928:	cmp	r2, r3
   1992c:	beq	198f0 <__assert_fail@plt+0x83ac>
   19930:	b	19960 <__assert_fail@plt+0x841c>
   19934:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19938:	ldr	r2, [r3, #8]
   1993c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19940:	lsl	r3, r3, #2
   19944:	add	r3, r2, r3
   19948:	ldr	r3, [r3]
   1994c:	cmn	r3, #1
   19950:	bne	19978 <__assert_fail@plt+0x8434>
   19954:	ldr	r3, [fp, #-20]	; 0xffffffec
   19958:	add	r3, r3, #1
   1995c:	str	r3, [fp, #-20]	; 0xffffffec
   19960:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19964:	ldr	r2, [r3, #28]
   19968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1996c:	cmp	r2, r3
   19970:	bgt	19934 <__assert_fail@plt+0x83f0>
   19974:	b	1997c <__assert_fail@plt+0x8438>
   19978:	nop			; (mov r0, r0)
   1997c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19980:	ldr	r2, [r3, #28]
   19984:	ldr	r3, [fp, #-20]	; 0xffffffec
   19988:	cmp	r2, r3
   1998c:	bne	199a0 <__assert_fail@plt+0x845c>
   19990:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19994:	mov	r2, #0
   19998:	str	r2, [r3, #28]
   1999c:	b	19a3c <__assert_fail@plt+0x84f8>
   199a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199a4:	ldr	r2, [r3, #12]
   199a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   199ac:	lsl	r3, r3, #2
   199b0:	add	r3, r2, r3
   199b4:	ldr	r2, [r3]
   199b8:	ldr	r3, [fp, #-8]
   199bc:	sub	r2, r2, r3
   199c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199c4:	str	r2, [r3, #28]
   199c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199cc:	ldr	r3, [r3, #28]
   199d0:	cmp	r3, #0
   199d4:	beq	19a3c <__assert_fail@plt+0x84f8>
   199d8:	mov	r3, #0
   199dc:	str	r3, [fp, #-12]
   199e0:	b	19a0c <__assert_fail@plt+0x84c8>
   199e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199e8:	ldr	r2, [r3, #8]
   199ec:	ldr	r3, [fp, #-12]
   199f0:	lsl	r3, r3, #2
   199f4:	add	r3, r2, r3
   199f8:	mvn	r2, #0
   199fc:	str	r2, [r3]
   19a00:	ldr	r3, [fp, #-12]
   19a04:	add	r3, r3, #1
   19a08:	str	r3, [fp, #-12]
   19a0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a10:	ldr	r2, [r3, #28]
   19a14:	ldr	r3, [fp, #-12]
   19a18:	cmp	r2, r3
   19a1c:	bgt	199e4 <__assert_fail@plt+0x84a0>
   19a20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a24:	ldr	r0, [r3, #4]
   19a28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a2c:	ldr	r3, [r3, #28]
   19a30:	mov	r2, r3
   19a34:	mov	r1, #255	; 0xff
   19a38:	bl	11448 <memset@plt>
   19a3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a40:	ldr	r2, [r3, #28]
   19a44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a48:	str	r2, [r3, #32]
   19a4c:	b	1a020 <__assert_fail@plt+0x8adc>
   19a50:	ldr	r3, [fp, #-8]
   19a54:	sub	r3, r3, #1
   19a58:	ldr	r2, [fp, #-104]	; 0xffffff98
   19a5c:	mov	r1, r3
   19a60:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19a64:	bl	1a538 <__assert_fail@plt+0x8ff4>
   19a68:	mov	r2, r0
   19a6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a70:	str	r2, [r3, #60]	; 0x3c
   19a74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a78:	ldr	r3, [r3, #80]	; 0x50
   19a7c:	cmp	r3, #1
   19a80:	ble	19abc <__assert_fail@plt+0x8578>
   19a84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a88:	ldr	r0, [r3, #8]
   19a8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a90:	ldr	r2, [r3, #8]
   19a94:	ldr	r3, [fp, #-8]
   19a98:	lsl	r3, r3, #2
   19a9c:	add	r1, r2, r3
   19aa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19aa4:	ldr	r2, [r3, #28]
   19aa8:	ldr	r3, [fp, #-8]
   19aac:	sub	r3, r2, r3
   19ab0:	lsl	r3, r3, #2
   19ab4:	mov	r2, r3
   19ab8:	bl	11220 <memmove@plt>
   19abc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ac0:	ldrb	r3, [r3, #75]	; 0x4b
   19ac4:	cmp	r3, #0
   19ac8:	beq	19afc <__assert_fail@plt+0x85b8>
   19acc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ad0:	ldr	r0, [r3, #4]
   19ad4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ad8:	ldr	r2, [r3, #4]
   19adc:	ldr	r3, [fp, #-8]
   19ae0:	add	r1, r2, r3
   19ae4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ae8:	ldr	r2, [r3, #28]
   19aec:	ldr	r3, [fp, #-8]
   19af0:	sub	r3, r2, r3
   19af4:	mov	r2, r3
   19af8:	bl	11220 <memmove@plt>
   19afc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b00:	ldr	r2, [r3, #28]
   19b04:	ldr	r3, [fp, #-8]
   19b08:	sub	r2, r2, r3
   19b0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b10:	str	r2, [r3, #28]
   19b14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b18:	ldr	r2, [r3, #32]
   19b1c:	ldr	r3, [fp, #-8]
   19b20:	sub	r2, r2, r3
   19b24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b28:	str	r2, [r3, #32]
   19b2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b30:	ldr	r3, [r3, #28]
   19b34:	cmp	r3, #0
   19b38:	b	1a020 <__assert_fail@plt+0x8adc>
   19b3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b40:	ldr	r3, [r3, #28]
   19b44:	str	r3, [fp, #-48]	; 0xffffffd0
   19b48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b4c:	ldrb	r3, [r3, #76]	; 0x4c
   19b50:	cmp	r3, #0
   19b54:	beq	19ba4 <__assert_fail@plt+0x8660>
   19b58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b5c:	ldr	r2, [r3, #44]	; 0x2c
   19b60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b64:	sub	r2, r2, r3
   19b68:	ldr	r3, [fp, #-8]
   19b6c:	add	r2, r2, r3
   19b70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b74:	str	r2, [r3, #48]	; 0x30
   19b78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b7c:	ldr	r2, [r3, #52]	; 0x34
   19b80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b84:	sub	r2, r2, r3
   19b88:	ldr	r3, [fp, #-8]
   19b8c:	add	r2, r2, r3
   19b90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b94:	str	r2, [r3, #56]	; 0x38
   19b98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b9c:	mov	r2, #0
   19ba0:	strb	r2, [r3, #76]	; 0x4c
   19ba4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ba8:	mov	r2, #0
   19bac:	str	r2, [r3, #28]
   19bb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bb4:	ldr	r3, [r3, #80]	; 0x50
   19bb8:	cmp	r3, #1
   19bbc:	ble	19f6c <__assert_fail@plt+0x8a28>
   19bc0:	mvn	r3, #0
   19bc4:	str	r3, [fp, #-68]	; 0xffffffbc
   19bc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bcc:	ldrb	r3, [r3, #73]	; 0x49
   19bd0:	cmp	r3, #0
   19bd4:	beq	19df0 <__assert_fail@plt+0x88ac>
   19bd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bdc:	ldr	r3, [r3]
   19be0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19be4:	ldr	r2, [r2, #24]
   19be8:	add	r3, r3, r2
   19bec:	str	r3, [fp, #-52]	; 0xffffffcc
   19bf0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19bf4:	ldr	r3, [r3, #80]	; 0x50
   19bf8:	ldr	r2, [fp, #-8]
   19bfc:	sub	r3, r2, r3
   19c00:	mov	r2, r3
   19c04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19c08:	add	r3, r3, r2
   19c0c:	str	r3, [fp, #-32]	; 0xffffffe0
   19c10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c14:	ldr	r2, [r3]
   19c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c1c:	cmp	r2, r3
   19c20:	bls	19c30 <__assert_fail@plt+0x86ec>
   19c24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c28:	ldr	r3, [r3]
   19c2c:	str	r3, [fp, #-32]	; 0xffffffe0
   19c30:	ldr	r3, [fp, #-8]
   19c34:	sub	r3, r3, #1
   19c38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19c3c:	add	r3, r2, r3
   19c40:	str	r3, [fp, #-28]	; 0xffffffe4
   19c44:	b	19dd8 <__assert_fail@plt+0x8894>
   19c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c4c:	ldrb	r3, [r3]
   19c50:	and	r3, r3, #192	; 0xc0
   19c54:	cmp	r3, #128	; 0x80
   19c58:	beq	19dcc <__assert_fail@plt+0x8888>
   19c5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c60:	ldr	r3, [r3, #48]	; 0x30
   19c64:	mov	r2, r3
   19c68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19c6c:	add	r3, r3, r2
   19c70:	mov	r2, r3
   19c74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c78:	sub	r3, r2, r3
   19c7c:	str	r3, [fp, #-56]	; 0xffffffc8
   19c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c84:	str	r3, [fp, #-36]	; 0xffffffdc
   19c88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19c8c:	ldr	r3, [r3, #64]	; 0x40
   19c90:	cmp	r3, #0
   19c94:	movne	r3, #1
   19c98:	moveq	r3, #0
   19c9c:	uxtb	r3, r3
   19ca0:	cmp	r3, #0
   19ca4:	beq	19d14 <__assert_fail@plt+0x87d0>
   19ca8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19cac:	cmp	r3, #6
   19cb0:	movlt	r3, r3
   19cb4:	movge	r3, #6
   19cb8:	str	r3, [fp, #-40]	; 0xffffffd8
   19cbc:	b	19cf4 <__assert_fail@plt+0x87b0>
   19cc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19cc4:	ldr	r3, [r3, #64]	; 0x40
   19cc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19cd0:	add	r2, r1, r2
   19cd4:	ldrb	r2, [r2]
   19cd8:	add	r3, r3, r2
   19cdc:	ldrb	r1, [r3]
   19ce0:	sub	r2, fp, #88	; 0x58
   19ce4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ce8:	add	r3, r2, r3
   19cec:	mov	r2, r1
   19cf0:	strb	r2, [r3]
   19cf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cf8:	sub	r3, r3, #1
   19cfc:	str	r3, [fp, #-40]	; 0xffffffd8
   19d00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19d04:	cmp	r3, #0
   19d08:	bge	19cc0 <__assert_fail@plt+0x877c>
   19d0c:	sub	r3, fp, #88	; 0x58
   19d10:	str	r3, [fp, #-36]	; 0xffffffdc
   19d14:	sub	r3, fp, #76	; 0x4c
   19d18:	mov	r2, #8
   19d1c:	mov	r1, #0
   19d20:	mov	r0, r3
   19d24:	bl	11448 <memset@plt>
   19d28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d2c:	sub	r3, fp, #76	; 0x4c
   19d30:	sub	r0, fp, #80	; 0x50
   19d34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19d38:	bl	33f40 <__assert_fail@plt+0x229fc>
   19d3c:	str	r0, [fp, #-60]	; 0xffffffc4
   19d40:	ldr	r3, [fp, #-8]
   19d44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d48:	add	r3, r2, r3
   19d4c:	mov	r2, r3
   19d50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d54:	sub	r3, r2, r3
   19d58:	mov	r2, r3
   19d5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d60:	cmp	r2, r3
   19d64:	bhi	19dec <__assert_fail@plt+0x88a8>
   19d68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d6c:	cmn	r3, #3
   19d70:	bhi	19dec <__assert_fail@plt+0x88a8>
   19d74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d78:	add	r3, r3, #16
   19d7c:	mov	r2, #8
   19d80:	mov	r1, #0
   19d84:	mov	r0, r3
   19d88:	bl	11448 <memset@plt>
   19d8c:	ldr	r3, [fp, #-8]
   19d90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d94:	add	r3, r2, r3
   19d98:	mov	r2, r3
   19d9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19da0:	sub	r3, r2, r3
   19da4:	mov	r2, r3
   19da8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19dac:	sub	r3, r3, r2
   19db0:	mov	r2, r3
   19db4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19db8:	str	r2, [r3, #28]
   19dbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19dc0:	str	r3, [fp, #-68]	; 0xffffffbc
   19dc4:	nop			; (mov r0, r0)
   19dc8:	b	19dec <__assert_fail@plt+0x88a8>
   19dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19dd0:	sub	r3, r3, #1
   19dd4:	str	r3, [fp, #-28]	; 0xffffffe4
   19dd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19de0:	cmp	r2, r3
   19de4:	bcs	19c48 <__assert_fail@plt+0x8704>
   19de8:	b	19df0 <__assert_fail@plt+0x88ac>
   19dec:	nop			; (mov r0, r0)
   19df0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19df4:	cmn	r3, #1
   19df8:	bne	19e24 <__assert_fail@plt+0x88e0>
   19dfc:	sub	r3, fp, #68	; 0x44
   19e00:	mov	r2, r3
   19e04:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19e08:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19e0c:	bl	19188 <__assert_fail@plt+0x7c44>
   19e10:	mov	r2, r0
   19e14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e18:	sub	r2, r2, r3
   19e1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e20:	str	r2, [r3, #28]
   19e24:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19e28:	cmn	r3, #1
   19e2c:	bne	19e58 <__assert_fail@plt+0x8914>
   19e30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19e34:	sub	r3, r3, #1
   19e38:	ldr	r2, [fp, #-104]	; 0xffffff98
   19e3c:	mov	r1, r3
   19e40:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19e44:	bl	1a538 <__assert_fail@plt+0x8ff4>
   19e48:	mov	r2, r0
   19e4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e50:	str	r2, [r3, #60]	; 0x3c
   19e54:	b	19ed4 <__assert_fail@plt+0x8990>
   19e58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e5c:	ldrb	r3, [r3, #78]	; 0x4e
   19e60:	cmp	r3, #0
   19e64:	movne	r3, #1
   19e68:	moveq	r3, #0
   19e6c:	uxtb	r3, r3
   19e70:	cmp	r3, #0
   19e74:	beq	19e9c <__assert_fail@plt+0x8958>
   19e78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19e7c:	mov	r0, r3
   19e80:	bl	11424 <iswalnum@plt>
   19e84:	mov	r3, r0
   19e88:	cmp	r3, #0
   19e8c:	bne	19ec8 <__assert_fail@plt+0x8984>
   19e90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19e94:	cmp	r3, #95	; 0x5f
   19e98:	beq	19ec8 <__assert_fail@plt+0x8984>
   19e9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19ea0:	cmp	r3, #10
   19ea4:	bne	19ec0 <__assert_fail@plt+0x897c>
   19ea8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19eac:	ldrb	r3, [r3, #77]	; 0x4d
   19eb0:	cmp	r3, #0
   19eb4:	beq	19ec0 <__assert_fail@plt+0x897c>
   19eb8:	mov	r3, #2
   19ebc:	b	19ecc <__assert_fail@plt+0x8988>
   19ec0:	mov	r3, #0
   19ec4:	b	19ecc <__assert_fail@plt+0x8988>
   19ec8:	mov	r3, #1
   19ecc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ed0:	str	r3, [r2, #60]	; 0x3c
   19ed4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ed8:	ldr	r3, [r3, #28]
   19edc:	cmp	r3, #0
   19ee0:	beq	19f58 <__assert_fail@plt+0x8a14>
   19ee4:	mov	r3, #0
   19ee8:	str	r3, [fp, #-24]	; 0xffffffe8
   19eec:	b	19f18 <__assert_fail@plt+0x89d4>
   19ef0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ef4:	ldr	r2, [r3, #8]
   19ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19efc:	lsl	r3, r3, #2
   19f00:	add	r3, r2, r3
   19f04:	mvn	r2, #0
   19f08:	str	r2, [r3]
   19f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19f10:	add	r3, r3, #1
   19f14:	str	r3, [fp, #-24]	; 0xffffffe8
   19f18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f1c:	ldr	r2, [r3, #28]
   19f20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19f24:	cmp	r2, r3
   19f28:	bgt	19ef0 <__assert_fail@plt+0x89ac>
   19f2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f30:	ldrb	r3, [r3, #75]	; 0x4b
   19f34:	cmp	r3, #0
   19f38:	beq	19f58 <__assert_fail@plt+0x8a14>
   19f3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f40:	ldr	r0, [r3, #4]
   19f44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f48:	ldr	r3, [r3, #28]
   19f4c:	mov	r2, r3
   19f50:	mov	r1, #255	; 0xff
   19f54:	bl	11448 <memset@plt>
   19f58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f5c:	ldr	r2, [r3, #28]
   19f60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f64:	str	r2, [r3, #32]
   19f68:	b	1a020 <__assert_fail@plt+0x8adc>
   19f6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f70:	ldr	r2, [r3]
   19f74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f78:	ldr	r1, [r3, #24]
   19f7c:	ldr	r3, [fp, #-8]
   19f80:	add	r3, r1, r3
   19f84:	sub	r3, r3, #1
   19f88:	add	r3, r2, r3
   19f8c:	ldrb	r3, [r3]
   19f90:	str	r3, [fp, #-44]	; 0xffffffd4
   19f94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19f98:	mov	r2, #0
   19f9c:	str	r2, [r3, #32]
   19fa0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fa4:	ldr	r3, [r3, #64]	; 0x40
   19fa8:	cmp	r3, #0
   19fac:	beq	19fc8 <__assert_fail@plt+0x8a84>
   19fb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fb4:	ldr	r2, [r3, #64]	; 0x40
   19fb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19fbc:	add	r3, r2, r3
   19fc0:	ldrb	r3, [r3]
   19fc4:	str	r3, [fp, #-44]	; 0xffffffd4
   19fc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19fcc:	ldr	r3, [r3, #68]	; 0x44
   19fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fd4:	mov	r0, r3
   19fd8:	bl	17910 <__assert_fail@plt+0x63cc>
   19fdc:	mov	r3, r0
   19fe0:	cmp	r3, #0
   19fe4:	bne	1a014 <__assert_fail@plt+0x8ad0>
   19fe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19fec:	cmp	r3, #10
   19ff0:	bne	1a00c <__assert_fail@plt+0x8ac8>
   19ff4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ff8:	ldrb	r3, [r3, #77]	; 0x4d
   19ffc:	cmp	r3, #0
   1a000:	beq	1a00c <__assert_fail@plt+0x8ac8>
   1a004:	mov	r3, #2
   1a008:	b	1a018 <__assert_fail@plt+0x8ad4>
   1a00c:	mov	r3, #0
   1a010:	b	1a018 <__assert_fail@plt+0x8ad4>
   1a014:	mov	r3, #1
   1a018:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a01c:	str	r3, [r2, #60]	; 0x3c
   1a020:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a024:	ldrb	r3, [r3, #75]	; 0x4b
   1a028:	cmp	r3, #0
   1a02c:	bne	1a048 <__assert_fail@plt+0x8b04>
   1a030:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a034:	ldr	r2, [r3, #4]
   1a038:	ldr	r3, [fp, #-8]
   1a03c:	add	r2, r2, r3
   1a040:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a044:	str	r2, [r3, #4]
   1a048:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a04c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a050:	str	r2, [r3, #24]
   1a054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a058:	ldr	r2, [r3, #48]	; 0x30
   1a05c:	ldr	r3, [fp, #-8]
   1a060:	sub	r2, r2, r3
   1a064:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a068:	str	r2, [r3, #48]	; 0x30
   1a06c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a070:	ldr	r2, [r3, #56]	; 0x38
   1a074:	ldr	r3, [fp, #-8]
   1a078:	sub	r2, r2, r3
   1a07c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a080:	str	r2, [r3, #56]	; 0x38
   1a084:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a088:	ldr	r3, [r3, #80]	; 0x50
   1a08c:	cmp	r3, #1
   1a090:	ble	1a0e0 <__assert_fail@plt+0x8b9c>
   1a094:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a098:	ldrb	r3, [r3, #72]	; 0x48
   1a09c:	cmp	r3, #0
   1a0a0:	beq	1a0d4 <__assert_fail@plt+0x8b90>
   1a0a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a0a8:	bl	18650 <__assert_fail@plt+0x710c>
   1a0ac:	str	r0, [fp, #-64]	; 0xffffffc0
   1a0b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a0b4:	cmp	r3, #0
   1a0b8:	movne	r3, #1
   1a0bc:	moveq	r3, #0
   1a0c0:	uxtb	r3, r3
   1a0c4:	cmp	r3, #0
   1a0c8:	beq	1a138 <__assert_fail@plt+0x8bf4>
   1a0cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a0d0:	b	1a148 <__assert_fail@plt+0x8c04>
   1a0d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a0d8:	bl	182d8 <__assert_fail@plt+0x6d94>
   1a0dc:	b	1a138 <__assert_fail@plt+0x8bf4>
   1a0e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0e4:	ldrb	r3, [r3, #75]	; 0x4b
   1a0e8:	cmp	r3, #0
   1a0ec:	beq	1a128 <__assert_fail@plt+0x8be4>
   1a0f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0f4:	ldrb	r3, [r3, #72]	; 0x48
   1a0f8:	cmp	r3, #0
   1a0fc:	beq	1a10c <__assert_fail@plt+0x8bc8>
   1a100:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a104:	bl	1931c <__assert_fail@plt+0x7dd8>
   1a108:	b	1a138 <__assert_fail@plt+0x8bf4>
   1a10c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a110:	ldr	r3, [r3, #64]	; 0x40
   1a114:	cmp	r3, #0
   1a118:	beq	1a138 <__assert_fail@plt+0x8bf4>
   1a11c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a120:	bl	1941c <__assert_fail@plt+0x7ed8>
   1a124:	b	1a138 <__assert_fail@plt+0x8bf4>
   1a128:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a12c:	ldr	r2, [r3, #48]	; 0x30
   1a130:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a134:	str	r2, [r3, #28]
   1a138:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a13c:	mov	r2, #0
   1a140:	str	r2, [r3, #40]	; 0x28
   1a144:	mov	r3, #0
   1a148:	mov	r0, r3
   1a14c:	sub	sp, fp, #4
   1a150:	pop	{fp, pc}
   1a154:	push	{fp}		; (str fp, [sp, #-4]!)
   1a158:	add	fp, sp, #0
   1a15c:	sub	sp, sp, #20
   1a160:	str	r0, [fp, #-16]
   1a164:	str	r1, [fp, #-20]	; 0xffffffec
   1a168:	ldr	r3, [fp, #-16]
   1a16c:	ldrb	r3, [r3, #75]	; 0x4b
   1a170:	cmp	r3, #0
   1a174:	moveq	r3, #1
   1a178:	movne	r3, #0
   1a17c:	uxtb	r3, r3
   1a180:	cmp	r3, #0
   1a184:	beq	1a1ac <__assert_fail@plt+0x8c68>
   1a188:	ldr	r3, [fp, #-16]
   1a18c:	ldr	r3, [r3, #4]
   1a190:	ldr	r2, [fp, #-16]
   1a194:	ldr	r1, [r2, #40]	; 0x28
   1a198:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a19c:	add	r2, r1, r2
   1a1a0:	add	r3, r3, r2
   1a1a4:	ldrb	r3, [r3]
   1a1a8:	b	1a310 <__assert_fail@plt+0x8dcc>
   1a1ac:	ldr	r3, [fp, #-16]
   1a1b0:	ldr	r3, [r3, #80]	; 0x50
   1a1b4:	cmp	r3, #1
   1a1b8:	ble	1a260 <__assert_fail@plt+0x8d1c>
   1a1bc:	ldr	r3, [fp, #-16]
   1a1c0:	ldr	r2, [r3, #8]
   1a1c4:	ldr	r3, [fp, #-16]
   1a1c8:	ldr	r1, [r3, #40]	; 0x28
   1a1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1d0:	add	r3, r1, r3
   1a1d4:	lsl	r3, r3, #2
   1a1d8:	add	r3, r2, r3
   1a1dc:	ldr	r3, [r3]
   1a1e0:	cmn	r3, #1
   1a1e4:	beq	1a23c <__assert_fail@plt+0x8cf8>
   1a1e8:	ldr	r3, [fp, #-16]
   1a1ec:	ldr	r2, [r3, #28]
   1a1f0:	ldr	r3, [fp, #-16]
   1a1f4:	ldr	r1, [r3, #40]	; 0x28
   1a1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1fc:	add	r3, r1, r3
   1a200:	add	r3, r3, #1
   1a204:	cmp	r2, r3
   1a208:	beq	1a260 <__assert_fail@plt+0x8d1c>
   1a20c:	ldr	r3, [fp, #-16]
   1a210:	ldr	r2, [r3, #8]
   1a214:	ldr	r3, [fp, #-16]
   1a218:	ldr	r1, [r3, #40]	; 0x28
   1a21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a220:	add	r3, r1, r3
   1a224:	add	r3, r3, #1
   1a228:	lsl	r3, r3, #2
   1a22c:	add	r3, r2, r3
   1a230:	ldr	r3, [r3]
   1a234:	cmn	r3, #1
   1a238:	bne	1a260 <__assert_fail@plt+0x8d1c>
   1a23c:	ldr	r3, [fp, #-16]
   1a240:	ldr	r3, [r3, #4]
   1a244:	ldr	r2, [fp, #-16]
   1a248:	ldr	r1, [r2, #40]	; 0x28
   1a24c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a250:	add	r2, r1, r2
   1a254:	add	r3, r3, r2
   1a258:	ldrb	r3, [r3]
   1a25c:	b	1a310 <__assert_fail@plt+0x8dcc>
   1a260:	ldr	r3, [fp, #-16]
   1a264:	ldr	r2, [r3, #40]	; 0x28
   1a268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a26c:	add	r3, r2, r3
   1a270:	str	r3, [fp, #-8]
   1a274:	ldr	r3, [fp, #-16]
   1a278:	ldrb	r3, [r3, #76]	; 0x4c
   1a27c:	cmp	r3, #0
   1a280:	beq	1a2a0 <__assert_fail@plt+0x8d5c>
   1a284:	ldr	r3, [fp, #-16]
   1a288:	ldr	r2, [r3, #12]
   1a28c:	ldr	r3, [fp, #-8]
   1a290:	lsl	r3, r3, #2
   1a294:	add	r3, r2, r3
   1a298:	ldr	r3, [r3]
   1a29c:	str	r3, [fp, #-8]
   1a2a0:	ldr	r3, [fp, #-16]
   1a2a4:	ldr	r3, [r3]
   1a2a8:	ldr	r2, [fp, #-16]
   1a2ac:	ldr	r1, [r2, #24]
   1a2b0:	ldr	r2, [fp, #-8]
   1a2b4:	add	r2, r1, r2
   1a2b8:	add	r3, r3, r2
   1a2bc:	ldrb	r3, [r3]
   1a2c0:	str	r3, [fp, #-12]
   1a2c4:	ldr	r3, [fp, #-16]
   1a2c8:	ldrb	r3, [r3, #76]	; 0x4c
   1a2cc:	cmp	r3, #0
   1a2d0:	beq	1a308 <__assert_fail@plt+0x8dc4>
   1a2d4:	ldr	r3, [fp, #-12]
   1a2d8:	bic	r3, r3, #127	; 0x7f
   1a2dc:	cmp	r3, #0
   1a2e0:	beq	1a308 <__assert_fail@plt+0x8dc4>
   1a2e4:	ldr	r3, [fp, #-16]
   1a2e8:	ldr	r3, [r3, #4]
   1a2ec:	ldr	r2, [fp, #-16]
   1a2f0:	ldr	r1, [r2, #40]	; 0x28
   1a2f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a2f8:	add	r2, r1, r2
   1a2fc:	add	r3, r3, r2
   1a300:	ldrb	r3, [r3]
   1a304:	b	1a310 <__assert_fail@plt+0x8dcc>
   1a308:	ldr	r3, [fp, #-12]
   1a30c:	uxtb	r3, r3
   1a310:	mov	r0, r3
   1a314:	add	sp, fp, #0
   1a318:	pop	{fp}		; (ldr fp, [sp], #4)
   1a31c:	bx	lr
   1a320:	push	{r4, fp, lr}
   1a324:	add	fp, sp, #8
   1a328:	sub	sp, sp, #20
   1a32c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a334:	ldrb	r3, [r3, #75]	; 0x4b
   1a338:	cmp	r3, #0
   1a33c:	moveq	r3, #1
   1a340:	movne	r3, #0
   1a344:	uxtb	r3, r3
   1a348:	cmp	r3, #0
   1a34c:	beq	1a378 <__assert_fail@plt+0x8e34>
   1a350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a354:	ldr	r2, [r3, #4]
   1a358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a35c:	ldr	r3, [r3, #40]	; 0x28
   1a360:	add	r0, r3, #1
   1a364:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a368:	str	r0, [r1, #40]	; 0x28
   1a36c:	add	r3, r2, r3
   1a370:	ldrb	r3, [r3]
   1a374:	b	1a4d0 <__assert_fail@plt+0x8f8c>
   1a378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a37c:	ldrb	r3, [r3, #76]	; 0x4c
   1a380:	cmp	r3, #0
   1a384:	beq	1a4a0 <__assert_fail@plt+0x8f5c>
   1a388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a38c:	ldr	r2, [r3, #40]	; 0x28
   1a390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a394:	ldr	r3, [r3, #28]
   1a398:	cmp	r2, r3
   1a39c:	beq	1a3ec <__assert_fail@plt+0x8ea8>
   1a3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3a4:	ldr	r2, [r3, #8]
   1a3a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3ac:	ldr	r3, [r3, #40]	; 0x28
   1a3b0:	lsl	r3, r3, #2
   1a3b4:	add	r3, r2, r3
   1a3b8:	ldr	r3, [r3]
   1a3bc:	cmn	r3, #1
   1a3c0:	bne	1a3ec <__assert_fail@plt+0x8ea8>
   1a3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3c8:	ldr	r2, [r3, #4]
   1a3cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3d0:	ldr	r3, [r3, #40]	; 0x28
   1a3d4:	add	r0, r3, #1
   1a3d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3dc:	str	r0, [r1, #40]	; 0x28
   1a3e0:	add	r3, r2, r3
   1a3e4:	ldrb	r3, [r3]
   1a3e8:	b	1a4d0 <__assert_fail@plt+0x8f8c>
   1a3ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3f0:	ldr	r2, [r3, #12]
   1a3f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3f8:	ldr	r3, [r3, #40]	; 0x28
   1a3fc:	lsl	r3, r3, #2
   1a400:	add	r3, r2, r3
   1a404:	ldr	r3, [r3]
   1a408:	str	r3, [fp, #-16]
   1a40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a410:	ldr	r3, [r3]
   1a414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a418:	ldr	r1, [r2, #24]
   1a41c:	ldr	r2, [fp, #-16]
   1a420:	add	r2, r1, r2
   1a424:	add	r3, r3, r2
   1a428:	ldrb	r3, [r3]
   1a42c:	str	r3, [fp, #-20]	; 0xffffffec
   1a430:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a434:	bic	r3, r3, #127	; 0x7f
   1a438:	cmp	r3, #0
   1a43c:	beq	1a468 <__assert_fail@plt+0x8f24>
   1a440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a444:	ldr	r2, [r3, #4]
   1a448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a44c:	ldr	r3, [r3, #40]	; 0x28
   1a450:	add	r0, r3, #1
   1a454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a458:	str	r0, [r1, #40]	; 0x28
   1a45c:	add	r3, r2, r3
   1a460:	ldrb	r3, [r3]
   1a464:	b	1a4d0 <__assert_fail@plt+0x8f8c>
   1a468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a46c:	ldr	r4, [r3, #40]	; 0x28
   1a470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a474:	ldr	r3, [r3, #40]	; 0x28
   1a478:	mov	r1, r3
   1a47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a480:	bl	17b94 <__assert_fail@plt+0x6650>
   1a484:	mov	r3, r0
   1a488:	add	r2, r4, r3
   1a48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a490:	str	r2, [r3, #40]	; 0x28
   1a494:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a498:	uxtb	r3, r3
   1a49c:	b	1a4d0 <__assert_fail@plt+0x8f8c>
   1a4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4a4:	ldr	r2, [r3]
   1a4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4ac:	ldr	r1, [r3, #24]
   1a4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4b4:	ldr	r3, [r3, #40]	; 0x28
   1a4b8:	add	ip, r3, #1
   1a4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c0:	str	ip, [r0, #40]	; 0x28
   1a4c4:	add	r3, r1, r3
   1a4c8:	add	r3, r2, r3
   1a4cc:	ldrb	r3, [r3]
   1a4d0:	mov	r0, r3
   1a4d4:	sub	sp, fp, #8
   1a4d8:	pop	{r4, fp, pc}
   1a4dc:	push	{fp, lr}
   1a4e0:	add	fp, sp, #4
   1a4e4:	sub	sp, sp, #8
   1a4e8:	str	r0, [fp, #-8]
   1a4ec:	ldr	r3, [fp, #-8]
   1a4f0:	ldr	r3, [r3, #8]
   1a4f4:	mov	r0, r3
   1a4f8:	bl	14dec <__assert_fail@plt+0x38a8>
   1a4fc:	ldr	r3, [fp, #-8]
   1a500:	ldr	r3, [r3, #12]
   1a504:	mov	r0, r3
   1a508:	bl	14dec <__assert_fail@plt+0x38a8>
   1a50c:	ldr	r3, [fp, #-8]
   1a510:	ldrb	r3, [r3, #75]	; 0x4b
   1a514:	cmp	r3, #0
   1a518:	beq	1a52c <__assert_fail@plt+0x8fe8>
   1a51c:	ldr	r3, [fp, #-8]
   1a520:	ldr	r3, [r3, #4]
   1a524:	mov	r0, r3
   1a528:	bl	14dec <__assert_fail@plt+0x38a8>
   1a52c:	nop			; (mov r0, r0)
   1a530:	sub	sp, fp, #4
   1a534:	pop	{fp, pc}
   1a538:	push	{fp, lr}
   1a53c:	add	fp, sp, #4
   1a540:	sub	sp, sp, #32
   1a544:	str	r0, [fp, #-24]	; 0xffffffe8
   1a548:	str	r1, [fp, #-28]	; 0xffffffe4
   1a54c:	str	r2, [fp, #-32]	; 0xffffffe0
   1a550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a554:	lsr	r3, r3, #31
   1a558:	uxtb	r3, r3
   1a55c:	cmp	r3, #0
   1a560:	beq	1a570 <__assert_fail@plt+0x902c>
   1a564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a568:	ldr	r3, [r3, #60]	; 0x3c
   1a56c:	b	1a714 <__assert_fail@plt+0x91d0>
   1a570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a574:	ldr	r2, [r3, #48]	; 0x30
   1a578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a57c:	cmp	r2, r3
   1a580:	moveq	r3, #1
   1a584:	movne	r3, #0
   1a588:	uxtb	r3, r3
   1a58c:	cmp	r3, #0
   1a590:	beq	1a5b4 <__assert_fail@plt+0x9070>
   1a594:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a598:	and	r3, r3, #2
   1a59c:	cmp	r3, #0
   1a5a0:	beq	1a5ac <__assert_fail@plt+0x9068>
   1a5a4:	mov	r3, #8
   1a5a8:	b	1a714 <__assert_fail@plt+0x91d0>
   1a5ac:	mov	r3, #10
   1a5b0:	b	1a714 <__assert_fail@plt+0x91d0>
   1a5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5b8:	ldr	r3, [r3, #80]	; 0x50
   1a5bc:	cmp	r3, #1
   1a5c0:	ble	1a6ac <__assert_fail@plt+0x9168>
   1a5c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a5c8:	str	r3, [fp, #-8]
   1a5cc:	b	1a5fc <__assert_fail@plt+0x90b8>
   1a5d0:	ldr	r3, [fp, #-8]
   1a5d4:	cmp	r3, #0
   1a5d8:	ldr	r3, [fp, #-8]
   1a5dc:	sub	r3, r3, #1
   1a5e0:	str	r3, [fp, #-8]
   1a5e4:	ldr	r3, [fp, #-8]
   1a5e8:	cmp	r3, #0
   1a5ec:	bge	1a5fc <__assert_fail@plt+0x90b8>
   1a5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5f4:	ldr	r3, [r3, #60]	; 0x3c
   1a5f8:	b	1a714 <__assert_fail@plt+0x91d0>
   1a5fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a600:	ldr	r2, [r3, #8]
   1a604:	ldr	r3, [fp, #-8]
   1a608:	lsl	r3, r3, #2
   1a60c:	add	r3, r2, r3
   1a610:	ldr	r3, [r3]
   1a614:	cmn	r3, #1
   1a618:	beq	1a5d0 <__assert_fail@plt+0x908c>
   1a61c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a620:	ldr	r2, [r3, #8]
   1a624:	ldr	r3, [fp, #-8]
   1a628:	lsl	r3, r3, #2
   1a62c:	add	r3, r2, r3
   1a630:	ldr	r3, [r3]
   1a634:	str	r3, [fp, #-12]
   1a638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a63c:	ldrb	r3, [r3, #78]	; 0x4e
   1a640:	cmp	r3, #0
   1a644:	movne	r3, #1
   1a648:	moveq	r3, #0
   1a64c:	uxtb	r3, r3
   1a650:	cmp	r3, #0
   1a654:	beq	1a680 <__assert_fail@plt+0x913c>
   1a658:	ldr	r0, [fp, #-12]
   1a65c:	bl	11424 <iswalnum@plt>
   1a660:	mov	r3, r0
   1a664:	cmp	r3, #0
   1a668:	bne	1a678 <__assert_fail@plt+0x9134>
   1a66c:	ldr	r3, [fp, #-12]
   1a670:	cmp	r3, #95	; 0x5f
   1a674:	bne	1a680 <__assert_fail@plt+0x913c>
   1a678:	mov	r3, #1
   1a67c:	b	1a714 <__assert_fail@plt+0x91d0>
   1a680:	ldr	r3, [fp, #-12]
   1a684:	cmp	r3, #10
   1a688:	bne	1a6a4 <__assert_fail@plt+0x9160>
   1a68c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a690:	ldrb	r3, [r3, #77]	; 0x4d
   1a694:	cmp	r3, #0
   1a698:	beq	1a6a4 <__assert_fail@plt+0x9160>
   1a69c:	mov	r3, #2
   1a6a0:	b	1a714 <__assert_fail@plt+0x91d0>
   1a6a4:	mov	r3, #0
   1a6a8:	b	1a714 <__assert_fail@plt+0x91d0>
   1a6ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6b0:	ldr	r2, [r3, #4]
   1a6b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a6b8:	add	r3, r2, r3
   1a6bc:	ldrb	r3, [r3]
   1a6c0:	str	r3, [fp, #-16]
   1a6c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6c8:	ldr	r3, [r3, #68]	; 0x44
   1a6cc:	ldr	r1, [fp, #-16]
   1a6d0:	mov	r0, r3
   1a6d4:	bl	17910 <__assert_fail@plt+0x63cc>
   1a6d8:	mov	r3, r0
   1a6dc:	cmp	r3, #0
   1a6e0:	beq	1a6ec <__assert_fail@plt+0x91a8>
   1a6e4:	mov	r3, #1
   1a6e8:	b	1a714 <__assert_fail@plt+0x91d0>
   1a6ec:	ldr	r3, [fp, #-16]
   1a6f0:	cmp	r3, #10
   1a6f4:	bne	1a710 <__assert_fail@plt+0x91cc>
   1a6f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6fc:	ldrb	r3, [r3, #77]	; 0x4d
   1a700:	cmp	r3, #0
   1a704:	beq	1a710 <__assert_fail@plt+0x91cc>
   1a708:	mov	r3, #2
   1a70c:	b	1a714 <__assert_fail@plt+0x91d0>
   1a710:	mov	r3, #0
   1a714:	mov	r0, r3
   1a718:	sub	sp, fp, #4
   1a71c:	pop	{fp, pc}
   1a720:	push	{fp, lr}
   1a724:	add	fp, sp, #4
   1a728:	sub	sp, sp, #8
   1a72c:	str	r0, [fp, #-8]
   1a730:	str	r1, [fp, #-12]
   1a734:	ldr	r3, [fp, #-8]
   1a738:	ldr	r2, [fp, #-12]
   1a73c:	str	r2, [r3]
   1a740:	ldr	r3, [fp, #-8]
   1a744:	mov	r2, #0
   1a748:	str	r2, [r3, #4]
   1a74c:	ldr	r3, [fp, #-12]
   1a750:	lsl	r3, r3, #2
   1a754:	mov	r0, r3
   1a758:	bl	33244 <__assert_fail@plt+0x21d00>
   1a75c:	mov	r3, r0
   1a760:	mov	r2, r3
   1a764:	ldr	r3, [fp, #-8]
   1a768:	str	r2, [r3, #8]
   1a76c:	ldr	r3, [fp, #-8]
   1a770:	ldr	r3, [r3, #8]
   1a774:	cmp	r3, #0
   1a778:	moveq	r3, #1
   1a77c:	movne	r3, #0
   1a780:	uxtb	r3, r3
   1a784:	cmp	r3, #0
   1a788:	beq	1a794 <__assert_fail@plt+0x9250>
   1a78c:	mov	r3, #12
   1a790:	b	1a798 <__assert_fail@plt+0x9254>
   1a794:	mov	r3, #0
   1a798:	mov	r0, r3
   1a79c:	sub	sp, fp, #4
   1a7a0:	pop	{fp, pc}
   1a7a4:	push	{fp, lr}
   1a7a8:	add	fp, sp, #4
   1a7ac:	sub	sp, sp, #8
   1a7b0:	str	r0, [fp, #-8]
   1a7b4:	str	r1, [fp, #-12]
   1a7b8:	ldr	r3, [fp, #-8]
   1a7bc:	mov	r2, #1
   1a7c0:	str	r2, [r3]
   1a7c4:	ldr	r3, [fp, #-8]
   1a7c8:	mov	r2, #1
   1a7cc:	str	r2, [r3, #4]
   1a7d0:	mov	r0, #4
   1a7d4:	bl	33244 <__assert_fail@plt+0x21d00>
   1a7d8:	mov	r3, r0
   1a7dc:	mov	r2, r3
   1a7e0:	ldr	r3, [fp, #-8]
   1a7e4:	str	r2, [r3, #8]
   1a7e8:	ldr	r3, [fp, #-8]
   1a7ec:	ldr	r3, [r3, #8]
   1a7f0:	cmp	r3, #0
   1a7f4:	moveq	r3, #1
   1a7f8:	movne	r3, #0
   1a7fc:	uxtb	r3, r3
   1a800:	cmp	r3, #0
   1a804:	beq	1a82c <__assert_fail@plt+0x92e8>
   1a808:	ldr	r3, [fp, #-8]
   1a80c:	mov	r2, #0
   1a810:	str	r2, [r3, #4]
   1a814:	ldr	r3, [fp, #-8]
   1a818:	ldr	r2, [r3, #4]
   1a81c:	ldr	r3, [fp, #-8]
   1a820:	str	r2, [r3]
   1a824:	mov	r3, #12
   1a828:	b	1a840 <__assert_fail@plt+0x92fc>
   1a82c:	ldr	r3, [fp, #-8]
   1a830:	ldr	r3, [r3, #8]
   1a834:	ldr	r2, [fp, #-12]
   1a838:	str	r2, [r3]
   1a83c:	mov	r3, #0
   1a840:	mov	r0, r3
   1a844:	sub	sp, fp, #4
   1a848:	pop	{fp, pc}
   1a84c:	push	{fp, lr}
   1a850:	add	fp, sp, #4
   1a854:	sub	sp, sp, #16
   1a858:	str	r0, [fp, #-8]
   1a85c:	str	r1, [fp, #-12]
   1a860:	str	r2, [fp, #-16]
   1a864:	ldr	r3, [fp, #-8]
   1a868:	mov	r2, #2
   1a86c:	str	r2, [r3]
   1a870:	mov	r0, #8
   1a874:	bl	33244 <__assert_fail@plt+0x21d00>
   1a878:	mov	r3, r0
   1a87c:	mov	r2, r3
   1a880:	ldr	r3, [fp, #-8]
   1a884:	str	r2, [r3, #8]
   1a888:	ldr	r3, [fp, #-8]
   1a88c:	ldr	r3, [r3, #8]
   1a890:	cmp	r3, #0
   1a894:	moveq	r3, #1
   1a898:	movne	r3, #0
   1a89c:	uxtb	r3, r3
   1a8a0:	cmp	r3, #0
   1a8a4:	beq	1a8b0 <__assert_fail@plt+0x936c>
   1a8a8:	mov	r3, #12
   1a8ac:	b	1a94c <__assert_fail@plt+0x9408>
   1a8b0:	ldr	r2, [fp, #-12]
   1a8b4:	ldr	r3, [fp, #-16]
   1a8b8:	cmp	r2, r3
   1a8bc:	bne	1a8e0 <__assert_fail@plt+0x939c>
   1a8c0:	ldr	r3, [fp, #-8]
   1a8c4:	mov	r2, #1
   1a8c8:	str	r2, [r3, #4]
   1a8cc:	ldr	r3, [fp, #-8]
   1a8d0:	ldr	r3, [r3, #8]
   1a8d4:	ldr	r2, [fp, #-12]
   1a8d8:	str	r2, [r3]
   1a8dc:	b	1a948 <__assert_fail@plt+0x9404>
   1a8e0:	ldr	r3, [fp, #-8]
   1a8e4:	mov	r2, #2
   1a8e8:	str	r2, [r3, #4]
   1a8ec:	ldr	r2, [fp, #-12]
   1a8f0:	ldr	r3, [fp, #-16]
   1a8f4:	cmp	r2, r3
   1a8f8:	bge	1a924 <__assert_fail@plt+0x93e0>
   1a8fc:	ldr	r3, [fp, #-8]
   1a900:	ldr	r3, [r3, #8]
   1a904:	ldr	r2, [fp, #-12]
   1a908:	str	r2, [r3]
   1a90c:	ldr	r3, [fp, #-8]
   1a910:	ldr	r3, [r3, #8]
   1a914:	add	r3, r3, #4
   1a918:	ldr	r2, [fp, #-16]
   1a91c:	str	r2, [r3]
   1a920:	b	1a948 <__assert_fail@plt+0x9404>
   1a924:	ldr	r3, [fp, #-8]
   1a928:	ldr	r3, [r3, #8]
   1a92c:	ldr	r2, [fp, #-16]
   1a930:	str	r2, [r3]
   1a934:	ldr	r3, [fp, #-8]
   1a938:	ldr	r3, [r3, #8]
   1a93c:	add	r3, r3, #4
   1a940:	ldr	r2, [fp, #-12]
   1a944:	str	r2, [r3]
   1a948:	mov	r3, #0
   1a94c:	mov	r0, r3
   1a950:	sub	sp, fp, #4
   1a954:	pop	{fp, pc}
   1a958:	push	{fp, lr}
   1a95c:	add	fp, sp, #4
   1a960:	sub	sp, sp, #8
   1a964:	str	r0, [fp, #-8]
   1a968:	str	r1, [fp, #-12]
   1a96c:	ldr	r3, [fp, #-12]
   1a970:	ldr	r2, [r3, #4]
   1a974:	ldr	r3, [fp, #-8]
   1a978:	str	r2, [r3, #4]
   1a97c:	ldr	r3, [fp, #-12]
   1a980:	ldr	r3, [r3, #4]
   1a984:	cmp	r3, #0
   1a988:	ble	1aa2c <__assert_fail@plt+0x94e8>
   1a98c:	ldr	r3, [fp, #-8]
   1a990:	ldr	r2, [r3, #4]
   1a994:	ldr	r3, [fp, #-8]
   1a998:	str	r2, [r3]
   1a99c:	ldr	r3, [fp, #-8]
   1a9a0:	ldr	r3, [r3]
   1a9a4:	lsl	r3, r3, #2
   1a9a8:	mov	r0, r3
   1a9ac:	bl	33244 <__assert_fail@plt+0x21d00>
   1a9b0:	mov	r3, r0
   1a9b4:	mov	r2, r3
   1a9b8:	ldr	r3, [fp, #-8]
   1a9bc:	str	r2, [r3, #8]
   1a9c0:	ldr	r3, [fp, #-8]
   1a9c4:	ldr	r3, [r3, #8]
   1a9c8:	cmp	r3, #0
   1a9cc:	moveq	r3, #1
   1a9d0:	movne	r3, #0
   1a9d4:	uxtb	r3, r3
   1a9d8:	cmp	r3, #0
   1a9dc:	beq	1aa04 <__assert_fail@plt+0x94c0>
   1a9e0:	ldr	r3, [fp, #-8]
   1a9e4:	mov	r2, #0
   1a9e8:	str	r2, [r3, #4]
   1a9ec:	ldr	r3, [fp, #-8]
   1a9f0:	ldr	r2, [r3, #4]
   1a9f4:	ldr	r3, [fp, #-8]
   1a9f8:	str	r2, [r3]
   1a9fc:	mov	r3, #12
   1aa00:	b	1aa40 <__assert_fail@plt+0x94fc>
   1aa04:	ldr	r3, [fp, #-8]
   1aa08:	ldr	r0, [r3, #8]
   1aa0c:	ldr	r3, [fp, #-12]
   1aa10:	ldr	r1, [r3, #8]
   1aa14:	ldr	r3, [fp, #-12]
   1aa18:	ldr	r3, [r3, #4]
   1aa1c:	lsl	r3, r3, #2
   1aa20:	mov	r2, r3
   1aa24:	bl	11250 <memcpy@plt>
   1aa28:	b	1aa3c <__assert_fail@plt+0x94f8>
   1aa2c:	mov	r2, #12
   1aa30:	mov	r1, #0
   1aa34:	ldr	r0, [fp, #-8]
   1aa38:	bl	11448 <memset@plt>
   1aa3c:	mov	r3, #0
   1aa40:	mov	r0, r3
   1aa44:	sub	sp, fp, #4
   1aa48:	pop	{fp, pc}
   1aa4c:	push	{fp, lr}
   1aa50:	add	fp, sp, #4
   1aa54:	sub	sp, sp, #48	; 0x30
   1aa58:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa5c:	str	r1, [fp, #-44]	; 0xffffffd4
   1aa60:	str	r2, [fp, #-48]	; 0xffffffd0
   1aa64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aa68:	ldr	r3, [r3, #4]
   1aa6c:	cmp	r3, #0
   1aa70:	beq	1aa84 <__assert_fail@plt+0x9540>
   1aa74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aa78:	ldr	r3, [r3, #4]
   1aa7c:	cmp	r3, #0
   1aa80:	bne	1aa8c <__assert_fail@plt+0x9548>
   1aa84:	mov	r3, #0
   1aa88:	b	1aed8 <__assert_fail@plt+0x9994>
   1aa8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aa90:	ldr	r2, [r3, #4]
   1aa94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aa98:	ldr	r3, [r3, #4]
   1aa9c:	add	r2, r2, r3
   1aaa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aaa4:	ldr	r3, [r3, #4]
   1aaa8:	add	r2, r2, r3
   1aaac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aab0:	ldr	r3, [r3]
   1aab4:	cmp	r2, r3
   1aab8:	ble	1ab3c <__assert_fail@plt+0x95f8>
   1aabc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aac0:	ldr	r2, [r3, #4]
   1aac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aac8:	ldr	r3, [r3, #4]
   1aacc:	add	r2, r2, r3
   1aad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aad4:	ldr	r3, [r3]
   1aad8:	add	r3, r2, r3
   1aadc:	str	r3, [fp, #-32]	; 0xffffffe0
   1aae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aae4:	ldr	r2, [r3, #8]
   1aae8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aaec:	lsl	r3, r3, #2
   1aaf0:	mov	r1, r3
   1aaf4:	mov	r0, r2
   1aaf8:	bl	332ec <__assert_fail@plt+0x21da8>
   1aafc:	str	r0, [fp, #-36]	; 0xffffffdc
   1ab00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab04:	cmp	r3, #0
   1ab08:	moveq	r3, #1
   1ab0c:	movne	r3, #0
   1ab10:	uxtb	r3, r3
   1ab14:	cmp	r3, #0
   1ab18:	beq	1ab24 <__assert_fail@plt+0x95e0>
   1ab1c:	mov	r3, #12
   1ab20:	b	1aed8 <__assert_fail@plt+0x9994>
   1ab24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab2c:	str	r2, [r3, #8]
   1ab30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ab38:	str	r2, [r3]
   1ab3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab40:	ldr	r2, [r3, #4]
   1ab44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab48:	ldr	r3, [r3, #4]
   1ab4c:	add	r2, r2, r3
   1ab50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab54:	ldr	r3, [r3, #4]
   1ab58:	add	r3, r2, r3
   1ab5c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ab60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab64:	ldr	r3, [r3, #4]
   1ab68:	sub	r3, r3, #1
   1ab6c:	str	r3, [fp, #-8]
   1ab70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ab74:	ldr	r3, [r3, #4]
   1ab78:	sub	r3, r3, #1
   1ab7c:	str	r3, [fp, #-12]
   1ab80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab84:	ldr	r3, [r3, #4]
   1ab88:	sub	r3, r3, #1
   1ab8c:	str	r3, [fp, #-20]	; 0xffffffec
   1ab90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab94:	ldr	r2, [r3, #8]
   1ab98:	ldr	r3, [fp, #-8]
   1ab9c:	lsl	r3, r3, #2
   1aba0:	add	r3, r2, r3
   1aba4:	ldr	r2, [r3]
   1aba8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1abac:	ldr	r1, [r3, #8]
   1abb0:	ldr	r3, [fp, #-12]
   1abb4:	lsl	r3, r3, #2
   1abb8:	add	r3, r1, r3
   1abbc:	ldr	r3, [r3]
   1abc0:	cmp	r2, r3
   1abc4:	bne	1acd0 <__assert_fail@plt+0x978c>
   1abc8:	b	1abd8 <__assert_fail@plt+0x9694>
   1abcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abd0:	sub	r3, r3, #1
   1abd4:	str	r3, [fp, #-20]	; 0xffffffec
   1abd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abdc:	cmp	r3, #0
   1abe0:	blt	1ac1c <__assert_fail@plt+0x96d8>
   1abe4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1abe8:	ldr	r2, [r3, #8]
   1abec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1abf0:	lsl	r3, r3, #2
   1abf4:	add	r3, r2, r3
   1abf8:	ldr	r2, [r3]
   1abfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ac00:	ldr	r1, [r3, #8]
   1ac04:	ldr	r3, [fp, #-8]
   1ac08:	lsl	r3, r3, #2
   1ac0c:	add	r3, r1, r3
   1ac10:	ldr	r3, [r3]
   1ac14:	cmp	r2, r3
   1ac18:	bgt	1abcc <__assert_fail@plt+0x9688>
   1ac1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac20:	cmp	r3, #0
   1ac24:	blt	1ac60 <__assert_fail@plt+0x971c>
   1ac28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ac2c:	ldr	r2, [r3, #8]
   1ac30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac34:	lsl	r3, r3, #2
   1ac38:	add	r3, r2, r3
   1ac3c:	ldr	r2, [r3]
   1ac40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ac44:	ldr	r1, [r3, #8]
   1ac48:	ldr	r3, [fp, #-8]
   1ac4c:	lsl	r3, r3, #2
   1ac50:	add	r3, r1, r3
   1ac54:	ldr	r3, [r3]
   1ac58:	cmp	r2, r3
   1ac5c:	beq	1ac9c <__assert_fail@plt+0x9758>
   1ac60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ac64:	ldr	r2, [r3, #8]
   1ac68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac6c:	sub	r3, r3, #1
   1ac70:	str	r3, [fp, #-28]	; 0xffffffe4
   1ac74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ac78:	lsl	r3, r3, #2
   1ac7c:	add	r3, r2, r3
   1ac80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ac84:	ldr	r1, [r2, #8]
   1ac88:	ldr	r2, [fp, #-8]
   1ac8c:	lsl	r2, r2, #2
   1ac90:	add	r2, r1, r2
   1ac94:	ldr	r2, [r2]
   1ac98:	str	r2, [r3]
   1ac9c:	ldr	r3, [fp, #-8]
   1aca0:	sub	r3, r3, #1
   1aca4:	str	r3, [fp, #-8]
   1aca8:	ldr	r3, [fp, #-8]
   1acac:	cmp	r3, #0
   1acb0:	blt	1ad44 <__assert_fail@plt+0x9800>
   1acb4:	ldr	r3, [fp, #-12]
   1acb8:	sub	r3, r3, #1
   1acbc:	str	r3, [fp, #-12]
   1acc0:	ldr	r3, [fp, #-12]
   1acc4:	cmp	r3, #0
   1acc8:	blt	1ad44 <__assert_fail@plt+0x9800>
   1accc:	b	1ab90 <__assert_fail@plt+0x964c>
   1acd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1acd4:	ldr	r2, [r3, #8]
   1acd8:	ldr	r3, [fp, #-8]
   1acdc:	lsl	r3, r3, #2
   1ace0:	add	r3, r2, r3
   1ace4:	ldr	r2, [r3]
   1ace8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1acec:	ldr	r1, [r3, #8]
   1acf0:	ldr	r3, [fp, #-12]
   1acf4:	lsl	r3, r3, #2
   1acf8:	add	r3, r1, r3
   1acfc:	ldr	r3, [r3]
   1ad00:	cmp	r2, r3
   1ad04:	bge	1ad24 <__assert_fail@plt+0x97e0>
   1ad08:	ldr	r3, [fp, #-12]
   1ad0c:	sub	r3, r3, #1
   1ad10:	str	r3, [fp, #-12]
   1ad14:	ldr	r3, [fp, #-12]
   1ad18:	cmp	r3, #0
   1ad1c:	bge	1ab90 <__assert_fail@plt+0x964c>
   1ad20:	b	1ad44 <__assert_fail@plt+0x9800>
   1ad24:	ldr	r3, [fp, #-8]
   1ad28:	sub	r3, r3, #1
   1ad2c:	str	r3, [fp, #-8]
   1ad30:	ldr	r3, [fp, #-8]
   1ad34:	cmp	r3, #0
   1ad38:	blt	1ad40 <__assert_fail@plt+0x97fc>
   1ad3c:	b	1ab90 <__assert_fail@plt+0x964c>
   1ad40:	nop			; (mov r0, r0)
   1ad44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad48:	ldr	r3, [r3, #4]
   1ad4c:	sub	r3, r3, #1
   1ad50:	str	r3, [fp, #-20]	; 0xffffffec
   1ad54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad58:	ldr	r2, [r3, #4]
   1ad5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad60:	ldr	r3, [r3, #4]
   1ad64:	add	r2, r2, r3
   1ad68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad6c:	ldr	r3, [r3, #4]
   1ad70:	add	r3, r2, r3
   1ad74:	sub	r3, r3, #1
   1ad78:	str	r3, [fp, #-16]
   1ad7c:	ldr	r2, [fp, #-16]
   1ad80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ad84:	sub	r3, r2, r3
   1ad88:	add	r3, r3, #1
   1ad8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ad90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad94:	ldr	r2, [r3, #4]
   1ad98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad9c:	add	r2, r2, r3
   1ada0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ada4:	str	r2, [r3, #4]
   1ada8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1adac:	cmp	r3, #0
   1adb0:	ble	1aea8 <__assert_fail@plt+0x9964>
   1adb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adb8:	cmp	r3, #0
   1adbc:	blt	1aea8 <__assert_fail@plt+0x9964>
   1adc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1adc4:	ldr	r2, [r3, #8]
   1adc8:	ldr	r3, [fp, #-16]
   1adcc:	lsl	r3, r3, #2
   1add0:	add	r3, r2, r3
   1add4:	ldr	r2, [r3]
   1add8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1addc:	ldr	r1, [r3, #8]
   1ade0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ade4:	lsl	r3, r3, #2
   1ade8:	add	r3, r1, r3
   1adec:	ldr	r3, [r3]
   1adf0:	cmp	r2, r3
   1adf4:	ble	1ae50 <__assert_fail@plt+0x990c>
   1adf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1adfc:	ldr	r2, [r3, #8]
   1ae00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae04:	sub	r1, r3, #1
   1ae08:	str	r1, [fp, #-24]	; 0xffffffe8
   1ae0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae10:	add	r3, r3, r1
   1ae14:	lsl	r3, r3, #2
   1ae18:	add	r2, r2, r3
   1ae1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae20:	ldr	r1, [r3, #8]
   1ae24:	ldr	r3, [fp, #-16]
   1ae28:	sub	r0, r3, #1
   1ae2c:	str	r0, [fp, #-16]
   1ae30:	lsl	r3, r3, #2
   1ae34:	add	r3, r1, r3
   1ae38:	ldr	r3, [r3]
   1ae3c:	str	r3, [r2]
   1ae40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae44:	cmp	r3, #0
   1ae48:	bne	1adc0 <__assert_fail@plt+0x987c>
   1ae4c:	b	1aea8 <__assert_fail@plt+0x9964>
   1ae50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae54:	ldr	r2, [r3, #8]
   1ae58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae60:	add	r3, r1, r3
   1ae64:	lsl	r3, r3, #2
   1ae68:	add	r3, r2, r3
   1ae6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ae70:	ldr	r1, [r2, #8]
   1ae74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae78:	lsl	r2, r2, #2
   1ae7c:	add	r2, r1, r2
   1ae80:	ldr	r2, [r2]
   1ae84:	str	r2, [r3]
   1ae88:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae8c:	sub	r3, r3, #1
   1ae90:	str	r3, [fp, #-20]	; 0xffffffec
   1ae94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae98:	cmp	r3, #0
   1ae9c:	blt	1aea4 <__assert_fail@plt+0x9960>
   1aea0:	b	1adc0 <__assert_fail@plt+0x987c>
   1aea4:	nop			; (mov r0, r0)
   1aea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aeac:	ldr	r0, [r3, #8]
   1aeb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aeb4:	ldr	r2, [r3, #8]
   1aeb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aebc:	lsl	r3, r3, #2
   1aec0:	add	r1, r2, r3
   1aec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aec8:	lsl	r3, r3, #2
   1aecc:	mov	r2, r3
   1aed0:	bl	11250 <memcpy@plt>
   1aed4:	mov	r3, #0
   1aed8:	mov	r0, r3
   1aedc:	sub	sp, fp, #4
   1aee0:	pop	{fp, pc}
   1aee4:	push	{fp, lr}
   1aee8:	add	fp, sp, #4
   1aeec:	sub	sp, sp, #32
   1aef0:	str	r0, [fp, #-24]	; 0xffffffe8
   1aef4:	str	r1, [fp, #-28]	; 0xffffffe4
   1aef8:	str	r2, [fp, #-32]	; 0xffffffe0
   1aefc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af00:	cmp	r3, #0
   1af04:	beq	1af9c <__assert_fail@plt+0x9a58>
   1af08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af0c:	ldr	r3, [r3, #4]
   1af10:	cmp	r3, #0
   1af14:	ble	1af9c <__assert_fail@plt+0x9a58>
   1af18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af1c:	cmp	r3, #0
   1af20:	beq	1af9c <__assert_fail@plt+0x9a58>
   1af24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af28:	ldr	r3, [r3, #4]
   1af2c:	cmp	r3, #0
   1af30:	ble	1af9c <__assert_fail@plt+0x9a58>
   1af34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af38:	ldr	r2, [r3, #4]
   1af3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af40:	ldr	r3, [r3, #4]
   1af44:	add	r2, r2, r3
   1af48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af4c:	str	r2, [r3]
   1af50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af54:	ldr	r3, [r3]
   1af58:	lsl	r3, r3, #2
   1af5c:	mov	r0, r3
   1af60:	bl	33244 <__assert_fail@plt+0x21d00>
   1af64:	mov	r3, r0
   1af68:	mov	r2, r3
   1af6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af70:	str	r2, [r3, #8]
   1af74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1af78:	ldr	r3, [r3, #8]
   1af7c:	cmp	r3, #0
   1af80:	moveq	r3, #1
   1af84:	movne	r3, #0
   1af88:	uxtb	r3, r3
   1af8c:	cmp	r3, #0
   1af90:	beq	1b014 <__assert_fail@plt+0x9ad0>
   1af94:	mov	r3, #12
   1af98:	b	1b254 <__assert_fail@plt+0x9d10>
   1af9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1afa0:	cmp	r3, #0
   1afa4:	beq	1afcc <__assert_fail@plt+0x9a88>
   1afa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1afac:	ldr	r3, [r3, #4]
   1afb0:	cmp	r3, #0
   1afb4:	ble	1afcc <__assert_fail@plt+0x9a88>
   1afb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afc0:	bl	1a958 <__assert_fail@plt+0x9414>
   1afc4:	mov	r3, r0
   1afc8:	b	1b254 <__assert_fail@plt+0x9d10>
   1afcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afd0:	cmp	r3, #0
   1afd4:	beq	1affc <__assert_fail@plt+0x9ab8>
   1afd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afdc:	ldr	r3, [r3, #4]
   1afe0:	cmp	r3, #0
   1afe4:	ble	1affc <__assert_fail@plt+0x9ab8>
   1afe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1afec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aff0:	bl	1a958 <__assert_fail@plt+0x9414>
   1aff4:	mov	r3, r0
   1aff8:	b	1b254 <__assert_fail@plt+0x9d10>
   1affc:	mov	r2, #12
   1b000:	mov	r1, #0
   1b004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b008:	bl	11448 <memset@plt>
   1b00c:	mov	r3, #0
   1b010:	b	1b254 <__assert_fail@plt+0x9d10>
   1b014:	mov	r3, #0
   1b018:	str	r3, [fp, #-16]
   1b01c:	ldr	r3, [fp, #-16]
   1b020:	str	r3, [fp, #-12]
   1b024:	ldr	r3, [fp, #-12]
   1b028:	str	r3, [fp, #-8]
   1b02c:	b	1b130 <__assert_fail@plt+0x9bec>
   1b030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b034:	ldr	r2, [r3, #8]
   1b038:	ldr	r3, [fp, #-8]
   1b03c:	lsl	r3, r3, #2
   1b040:	add	r3, r2, r3
   1b044:	ldr	r2, [r3]
   1b048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b04c:	ldr	r1, [r3, #8]
   1b050:	ldr	r3, [fp, #-12]
   1b054:	lsl	r3, r3, #2
   1b058:	add	r3, r1, r3
   1b05c:	ldr	r3, [r3]
   1b060:	cmp	r2, r3
   1b064:	ble	1b0ac <__assert_fail@plt+0x9b68>
   1b068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b06c:	ldr	r2, [r3, #8]
   1b070:	ldr	r3, [fp, #-16]
   1b074:	add	r1, r3, #1
   1b078:	str	r1, [fp, #-16]
   1b07c:	lsl	r3, r3, #2
   1b080:	add	r2, r2, r3
   1b084:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b088:	ldr	r1, [r3, #8]
   1b08c:	ldr	r3, [fp, #-12]
   1b090:	add	r0, r3, #1
   1b094:	str	r0, [fp, #-12]
   1b098:	lsl	r3, r3, #2
   1b09c:	add	r3, r1, r3
   1b0a0:	ldr	r3, [r3]
   1b0a4:	str	r3, [r2]
   1b0a8:	b	1b130 <__assert_fail@plt+0x9bec>
   1b0ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b0b0:	ldr	r2, [r3, #8]
   1b0b4:	ldr	r3, [fp, #-8]
   1b0b8:	lsl	r3, r3, #2
   1b0bc:	add	r3, r2, r3
   1b0c0:	ldr	r2, [r3]
   1b0c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0c8:	ldr	r1, [r3, #8]
   1b0cc:	ldr	r3, [fp, #-12]
   1b0d0:	lsl	r3, r3, #2
   1b0d4:	add	r3, r1, r3
   1b0d8:	ldr	r3, [r3]
   1b0dc:	cmp	r2, r3
   1b0e0:	bne	1b0f0 <__assert_fail@plt+0x9bac>
   1b0e4:	ldr	r3, [fp, #-12]
   1b0e8:	add	r3, r3, #1
   1b0ec:	str	r3, [fp, #-12]
   1b0f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0f4:	ldr	r2, [r3, #8]
   1b0f8:	ldr	r3, [fp, #-16]
   1b0fc:	add	r1, r3, #1
   1b100:	str	r1, [fp, #-16]
   1b104:	lsl	r3, r3, #2
   1b108:	add	r2, r2, r3
   1b10c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b110:	ldr	r1, [r3, #8]
   1b114:	ldr	r3, [fp, #-8]
   1b118:	add	r0, r3, #1
   1b11c:	str	r0, [fp, #-8]
   1b120:	lsl	r3, r3, #2
   1b124:	add	r3, r1, r3
   1b128:	ldr	r3, [r3]
   1b12c:	str	r3, [r2]
   1b130:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b134:	ldr	r2, [r3, #4]
   1b138:	ldr	r3, [fp, #-8]
   1b13c:	cmp	r2, r3
   1b140:	ble	1b158 <__assert_fail@plt+0x9c14>
   1b144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b148:	ldr	r2, [r3, #4]
   1b14c:	ldr	r3, [fp, #-12]
   1b150:	cmp	r2, r3
   1b154:	bgt	1b030 <__assert_fail@plt+0x9aec>
   1b158:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b15c:	ldr	r2, [r3, #4]
   1b160:	ldr	r3, [fp, #-8]
   1b164:	cmp	r2, r3
   1b168:	ble	1b1d0 <__assert_fail@plt+0x9c8c>
   1b16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b170:	ldr	r2, [r3, #8]
   1b174:	ldr	r3, [fp, #-16]
   1b178:	lsl	r3, r3, #2
   1b17c:	add	r0, r2, r3
   1b180:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b184:	ldr	r2, [r3, #8]
   1b188:	ldr	r3, [fp, #-8]
   1b18c:	lsl	r3, r3, #2
   1b190:	add	r1, r2, r3
   1b194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b198:	ldr	r2, [r3, #4]
   1b19c:	ldr	r3, [fp, #-8]
   1b1a0:	sub	r3, r2, r3
   1b1a4:	lsl	r3, r3, #2
   1b1a8:	mov	r2, r3
   1b1ac:	bl	11250 <memcpy@plt>
   1b1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b1b4:	ldr	r2, [r3, #4]
   1b1b8:	ldr	r3, [fp, #-8]
   1b1bc:	sub	r3, r2, r3
   1b1c0:	ldr	r2, [fp, #-16]
   1b1c4:	add	r3, r2, r3
   1b1c8:	str	r3, [fp, #-16]
   1b1cc:	b	1b244 <__assert_fail@plt+0x9d00>
   1b1d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b1d4:	ldr	r2, [r3, #4]
   1b1d8:	ldr	r3, [fp, #-12]
   1b1dc:	cmp	r2, r3
   1b1e0:	ble	1b244 <__assert_fail@plt+0x9d00>
   1b1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1e8:	ldr	r2, [r3, #8]
   1b1ec:	ldr	r3, [fp, #-16]
   1b1f0:	lsl	r3, r3, #2
   1b1f4:	add	r0, r2, r3
   1b1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b1fc:	ldr	r2, [r3, #8]
   1b200:	ldr	r3, [fp, #-12]
   1b204:	lsl	r3, r3, #2
   1b208:	add	r1, r2, r3
   1b20c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b210:	ldr	r2, [r3, #4]
   1b214:	ldr	r3, [fp, #-12]
   1b218:	sub	r3, r2, r3
   1b21c:	lsl	r3, r3, #2
   1b220:	mov	r2, r3
   1b224:	bl	11250 <memcpy@plt>
   1b228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b22c:	ldr	r2, [r3, #4]
   1b230:	ldr	r3, [fp, #-12]
   1b234:	sub	r3, r2, r3
   1b238:	ldr	r2, [fp, #-16]
   1b23c:	add	r3, r2, r3
   1b240:	str	r3, [fp, #-16]
   1b244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b248:	ldr	r2, [fp, #-16]
   1b24c:	str	r2, [r3, #4]
   1b250:	mov	r3, #0
   1b254:	mov	r0, r3
   1b258:	sub	sp, fp, #4
   1b25c:	pop	{fp, pc}
   1b260:	push	{fp, lr}
   1b264:	add	fp, sp, #4
   1b268:	sub	sp, sp, #32
   1b26c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b270:	str	r1, [fp, #-36]	; 0xffffffdc
   1b274:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b278:	cmp	r3, #0
   1b27c:	beq	1b290 <__assert_fail@plt+0x9d4c>
   1b280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b284:	ldr	r3, [r3, #4]
   1b288:	cmp	r3, #0
   1b28c:	bne	1b298 <__assert_fail@plt+0x9d54>
   1b290:	mov	r3, #0
   1b294:	b	1b6a8 <__assert_fail@plt+0xa164>
   1b298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b29c:	ldr	r2, [r3]
   1b2a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b2a4:	ldr	r3, [r3, #4]
   1b2a8:	lsl	r1, r3, #1
   1b2ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b2b0:	ldr	r3, [r3, #4]
   1b2b4:	add	r3, r1, r3
   1b2b8:	cmp	r2, r3
   1b2bc:	bge	1b338 <__assert_fail@plt+0x9df4>
   1b2c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b2c4:	ldr	r2, [r3, #4]
   1b2c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b2cc:	ldr	r3, [r3]
   1b2d0:	add	r3, r2, r3
   1b2d4:	lsl	r3, r3, #1
   1b2d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1b2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b2e0:	ldr	r2, [r3, #8]
   1b2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2e8:	lsl	r3, r3, #2
   1b2ec:	mov	r1, r3
   1b2f0:	mov	r0, r2
   1b2f4:	bl	332ec <__assert_fail@plt+0x21da8>
   1b2f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b300:	cmp	r3, #0
   1b304:	moveq	r3, #1
   1b308:	movne	r3, #0
   1b30c:	uxtb	r3, r3
   1b310:	cmp	r3, #0
   1b314:	beq	1b320 <__assert_fail@plt+0x9ddc>
   1b318:	mov	r3, #12
   1b31c:	b	1b6a8 <__assert_fail@plt+0xa164>
   1b320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b324:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b328:	str	r2, [r3, #8]
   1b32c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b334:	str	r2, [r3]
   1b338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b33c:	ldr	r3, [r3, #4]
   1b340:	cmp	r3, #0
   1b344:	moveq	r3, #1
   1b348:	movne	r3, #0
   1b34c:	uxtb	r3, r3
   1b350:	cmp	r3, #0
   1b354:	beq	1b3a0 <__assert_fail@plt+0x9e5c>
   1b358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b35c:	ldr	r3, [r3, #8]
   1b360:	cmp	r3, #0
   1b364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b368:	ldr	r2, [r3, #4]
   1b36c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b370:	str	r2, [r3, #4]
   1b374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b378:	ldr	r0, [r3, #8]
   1b37c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b380:	ldr	r1, [r3, #8]
   1b384:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b388:	ldr	r3, [r3, #4]
   1b38c:	lsl	r3, r3, #2
   1b390:	mov	r2, r3
   1b394:	bl	11250 <memcpy@plt>
   1b398:	mov	r3, #0
   1b39c:	b	1b6a8 <__assert_fail@plt+0xa164>
   1b3a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3a4:	ldr	r2, [r3, #4]
   1b3a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3ac:	ldr	r3, [r3, #4]
   1b3b0:	lsl	r3, r3, #1
   1b3b4:	add	r3, r2, r3
   1b3b8:	str	r3, [fp, #-16]
   1b3bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3c0:	ldr	r3, [r3, #4]
   1b3c4:	sub	r3, r3, #1
   1b3c8:	str	r3, [fp, #-8]
   1b3cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3d0:	ldr	r3, [r3, #4]
   1b3d4:	sub	r3, r3, #1
   1b3d8:	str	r3, [fp, #-12]
   1b3dc:	b	1b4c0 <__assert_fail@plt+0x9f7c>
   1b3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b3e4:	ldr	r2, [r3, #8]
   1b3e8:	ldr	r3, [fp, #-12]
   1b3ec:	lsl	r3, r3, #2
   1b3f0:	add	r3, r2, r3
   1b3f4:	ldr	r2, [r3]
   1b3f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b3fc:	ldr	r1, [r3, #8]
   1b400:	ldr	r3, [fp, #-8]
   1b404:	lsl	r3, r3, #2
   1b408:	add	r3, r1, r3
   1b40c:	ldr	r3, [r3]
   1b410:	cmp	r2, r3
   1b414:	bne	1b434 <__assert_fail@plt+0x9ef0>
   1b418:	ldr	r3, [fp, #-8]
   1b41c:	sub	r3, r3, #1
   1b420:	str	r3, [fp, #-8]
   1b424:	ldr	r3, [fp, #-12]
   1b428:	sub	r3, r3, #1
   1b42c:	str	r3, [fp, #-12]
   1b430:	b	1b4c0 <__assert_fail@plt+0x9f7c>
   1b434:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b438:	ldr	r2, [r3, #8]
   1b43c:	ldr	r3, [fp, #-12]
   1b440:	lsl	r3, r3, #2
   1b444:	add	r3, r2, r3
   1b448:	ldr	r2, [r3]
   1b44c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b450:	ldr	r1, [r3, #8]
   1b454:	ldr	r3, [fp, #-8]
   1b458:	lsl	r3, r3, #2
   1b45c:	add	r3, r1, r3
   1b460:	ldr	r3, [r3]
   1b464:	cmp	r2, r3
   1b468:	bge	1b4b4 <__assert_fail@plt+0x9f70>
   1b46c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b470:	ldr	r2, [r3, #8]
   1b474:	ldr	r3, [fp, #-16]
   1b478:	sub	r3, r3, #1
   1b47c:	str	r3, [fp, #-16]
   1b480:	ldr	r3, [fp, #-16]
   1b484:	lsl	r3, r3, #2
   1b488:	add	r2, r2, r3
   1b48c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b490:	ldr	r1, [r3, #8]
   1b494:	ldr	r3, [fp, #-8]
   1b498:	sub	r0, r3, #1
   1b49c:	str	r0, [fp, #-8]
   1b4a0:	lsl	r3, r3, #2
   1b4a4:	add	r3, r1, r3
   1b4a8:	ldr	r3, [r3]
   1b4ac:	str	r3, [r2]
   1b4b0:	b	1b4c0 <__assert_fail@plt+0x9f7c>
   1b4b4:	ldr	r3, [fp, #-12]
   1b4b8:	sub	r3, r3, #1
   1b4bc:	str	r3, [fp, #-12]
   1b4c0:	ldr	r3, [fp, #-8]
   1b4c4:	cmp	r3, #0
   1b4c8:	blt	1b4d8 <__assert_fail@plt+0x9f94>
   1b4cc:	ldr	r3, [fp, #-12]
   1b4d0:	cmp	r3, #0
   1b4d4:	bge	1b3e0 <__assert_fail@plt+0x9e9c>
   1b4d8:	ldr	r3, [fp, #-8]
   1b4dc:	cmp	r3, #0
   1b4e0:	blt	1b528 <__assert_fail@plt+0x9fe4>
   1b4e4:	ldr	r3, [fp, #-8]
   1b4e8:	add	r3, r3, #1
   1b4ec:	ldr	r2, [fp, #-16]
   1b4f0:	sub	r3, r2, r3
   1b4f4:	str	r3, [fp, #-16]
   1b4f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b4fc:	ldr	r2, [r3, #8]
   1b500:	ldr	r3, [fp, #-16]
   1b504:	lsl	r3, r3, #2
   1b508:	add	r0, r2, r3
   1b50c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b510:	ldr	r1, [r3, #8]
   1b514:	ldr	r3, [fp, #-8]
   1b518:	add	r3, r3, #1
   1b51c:	lsl	r3, r3, #2
   1b520:	mov	r2, r3
   1b524:	bl	11250 <memcpy@plt>
   1b528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b52c:	ldr	r3, [r3, #4]
   1b530:	sub	r3, r3, #1
   1b534:	str	r3, [fp, #-12]
   1b538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b53c:	ldr	r2, [r3, #4]
   1b540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b544:	ldr	r3, [r3, #4]
   1b548:	lsl	r3, r3, #1
   1b54c:	add	r3, r2, r3
   1b550:	sub	r3, r3, #1
   1b554:	str	r3, [fp, #-8]
   1b558:	ldr	r2, [fp, #-8]
   1b55c:	ldr	r3, [fp, #-16]
   1b560:	sub	r3, r2, r3
   1b564:	add	r3, r3, #1
   1b568:	str	r3, [fp, #-20]	; 0xffffffec
   1b56c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b570:	cmp	r3, #0
   1b574:	bne	1b580 <__assert_fail@plt+0xa03c>
   1b578:	mov	r3, #0
   1b57c:	b	1b6a8 <__assert_fail@plt+0xa164>
   1b580:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b584:	ldr	r2, [r3, #4]
   1b588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b58c:	add	r2, r2, r3
   1b590:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b594:	str	r2, [r3, #4]
   1b598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b59c:	ldr	r2, [r3, #8]
   1b5a0:	ldr	r3, [fp, #-8]
   1b5a4:	lsl	r3, r3, #2
   1b5a8:	add	r3, r2, r3
   1b5ac:	ldr	r2, [r3]
   1b5b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5b4:	ldr	r1, [r3, #8]
   1b5b8:	ldr	r3, [fp, #-12]
   1b5bc:	lsl	r3, r3, #2
   1b5c0:	add	r3, r1, r3
   1b5c4:	ldr	r3, [r3]
   1b5c8:	cmp	r2, r3
   1b5cc:	ble	1b628 <__assert_fail@plt+0xa0e4>
   1b5d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5d4:	ldr	r2, [r3, #8]
   1b5d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5dc:	sub	r1, r3, #1
   1b5e0:	str	r1, [fp, #-20]	; 0xffffffec
   1b5e4:	ldr	r1, [fp, #-12]
   1b5e8:	add	r3, r3, r1
   1b5ec:	lsl	r3, r3, #2
   1b5f0:	add	r2, r2, r3
   1b5f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5f8:	ldr	r1, [r3, #8]
   1b5fc:	ldr	r3, [fp, #-8]
   1b600:	sub	r0, r3, #1
   1b604:	str	r0, [fp, #-8]
   1b608:	lsl	r3, r3, #2
   1b60c:	add	r3, r1, r3
   1b610:	ldr	r3, [r3]
   1b614:	str	r3, [r2]
   1b618:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b61c:	cmp	r3, #0
   1b620:	bne	1b598 <__assert_fail@plt+0xa054>
   1b624:	b	1b6a4 <__assert_fail@plt+0xa160>
   1b628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b62c:	ldr	r2, [r3, #8]
   1b630:	ldr	r1, [fp, #-12]
   1b634:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b638:	add	r3, r1, r3
   1b63c:	lsl	r3, r3, #2
   1b640:	add	r3, r2, r3
   1b644:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b648:	ldr	r1, [r2, #8]
   1b64c:	ldr	r2, [fp, #-12]
   1b650:	lsl	r2, r2, #2
   1b654:	add	r2, r1, r2
   1b658:	ldr	r2, [r2]
   1b65c:	str	r2, [r3]
   1b660:	ldr	r3, [fp, #-12]
   1b664:	sub	r3, r3, #1
   1b668:	str	r3, [fp, #-12]
   1b66c:	ldr	r3, [fp, #-12]
   1b670:	cmp	r3, #0
   1b674:	bge	1b598 <__assert_fail@plt+0xa054>
   1b678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b67c:	ldr	r0, [r3, #8]
   1b680:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b684:	ldr	r2, [r3, #8]
   1b688:	ldr	r3, [fp, #-16]
   1b68c:	lsl	r3, r3, #2
   1b690:	add	r1, r2, r3
   1b694:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b698:	lsl	r3, r3, #2
   1b69c:	mov	r2, r3
   1b6a0:	bl	11250 <memcpy@plt>
   1b6a4:	mov	r3, #0
   1b6a8:	mov	r0, r3
   1b6ac:	sub	sp, fp, #4
   1b6b0:	pop	{fp, pc}
   1b6b4:	push	{fp, lr}
   1b6b8:	add	fp, sp, #4
   1b6bc:	sub	sp, sp, #16
   1b6c0:	str	r0, [fp, #-16]
   1b6c4:	str	r1, [fp, #-20]	; 0xffffffec
   1b6c8:	ldr	r3, [fp, #-16]
   1b6cc:	ldr	r3, [r3]
   1b6d0:	cmp	r3, #0
   1b6d4:	bne	1b70c <__assert_fail@plt+0xa1c8>
   1b6d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b6dc:	ldr	r0, [fp, #-16]
   1b6e0:	bl	1a7a4 <__assert_fail@plt+0x9260>
   1b6e4:	mov	r3, r0
   1b6e8:	cmp	r3, #0
   1b6ec:	moveq	r3, #1
   1b6f0:	movne	r3, #0
   1b6f4:	uxtb	r3, r3
   1b6f8:	cmp	r3, #0
   1b6fc:	movne	r3, #1
   1b700:	moveq	r3, #0
   1b704:	uxtb	r3, r3
   1b708:	b	1b91c <__assert_fail@plt+0xa3d8>
   1b70c:	ldr	r3, [fp, #-16]
   1b710:	ldr	r3, [r3, #4]
   1b714:	cmp	r3, #0
   1b718:	bne	1b754 <__assert_fail@plt+0xa210>
   1b71c:	ldr	r3, [fp, #-16]
   1b720:	ldr	r3, [r3, #8]
   1b724:	cmp	r3, #0
   1b728:	ldr	r3, [fp, #-16]
   1b72c:	ldr	r3, [r3, #8]
   1b730:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b734:	str	r2, [r3]
   1b738:	ldr	r3, [fp, #-16]
   1b73c:	ldr	r3, [r3, #4]
   1b740:	add	r2, r3, #1
   1b744:	ldr	r3, [fp, #-16]
   1b748:	str	r2, [r3, #4]
   1b74c:	mov	r3, #1
   1b750:	b	1b91c <__assert_fail@plt+0xa3d8>
   1b754:	ldr	r3, [fp, #-16]
   1b758:	ldr	r2, [r3]
   1b75c:	ldr	r3, [fp, #-16]
   1b760:	ldr	r3, [r3, #4]
   1b764:	cmp	r2, r3
   1b768:	bne	1b7d4 <__assert_fail@plt+0xa290>
   1b76c:	ldr	r3, [fp, #-16]
   1b770:	ldr	r3, [r3]
   1b774:	lsl	r2, r3, #1
   1b778:	ldr	r3, [fp, #-16]
   1b77c:	str	r2, [r3]
   1b780:	ldr	r3, [fp, #-16]
   1b784:	ldr	r2, [r3, #8]
   1b788:	ldr	r3, [fp, #-16]
   1b78c:	ldr	r3, [r3]
   1b790:	lsl	r3, r3, #2
   1b794:	mov	r1, r3
   1b798:	mov	r0, r2
   1b79c:	bl	332ec <__assert_fail@plt+0x21da8>
   1b7a0:	str	r0, [fp, #-12]
   1b7a4:	ldr	r3, [fp, #-12]
   1b7a8:	cmp	r3, #0
   1b7ac:	moveq	r3, #1
   1b7b0:	movne	r3, #0
   1b7b4:	uxtb	r3, r3
   1b7b8:	cmp	r3, #0
   1b7bc:	beq	1b7c8 <__assert_fail@plt+0xa284>
   1b7c0:	mov	r3, #0
   1b7c4:	b	1b91c <__assert_fail@plt+0xa3d8>
   1b7c8:	ldr	r3, [fp, #-16]
   1b7cc:	ldr	r2, [fp, #-12]
   1b7d0:	str	r2, [r3, #8]
   1b7d4:	ldr	r3, [fp, #-16]
   1b7d8:	ldr	r3, [r3, #8]
   1b7dc:	ldr	r2, [r3]
   1b7e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b7e4:	cmp	r2, r3
   1b7e8:	ble	1b84c <__assert_fail@plt+0xa308>
   1b7ec:	ldr	r3, [fp, #-16]
   1b7f0:	ldr	r3, [r3, #4]
   1b7f4:	str	r3, [fp, #-8]
   1b7f8:	b	1b83c <__assert_fail@plt+0xa2f8>
   1b7fc:	ldr	r3, [fp, #-16]
   1b800:	ldr	r2, [r3, #8]
   1b804:	ldr	r3, [fp, #-8]
   1b808:	lsl	r3, r3, #2
   1b80c:	add	r3, r2, r3
   1b810:	ldr	r2, [fp, #-16]
   1b814:	ldr	r1, [r2, #8]
   1b818:	ldr	r2, [fp, #-8]
   1b81c:	sub	r2, r2, #-1073741823	; 0xc0000001
   1b820:	lsl	r2, r2, #2
   1b824:	add	r2, r1, r2
   1b828:	ldr	r2, [r2]
   1b82c:	str	r2, [r3]
   1b830:	ldr	r3, [fp, #-8]
   1b834:	sub	r3, r3, #1
   1b838:	str	r3, [fp, #-8]
   1b83c:	ldr	r3, [fp, #-8]
   1b840:	cmp	r3, #0
   1b844:	bgt	1b7fc <__assert_fail@plt+0xa2b8>
   1b848:	b	1b8e8 <__assert_fail@plt+0xa3a4>
   1b84c:	ldr	r3, [fp, #-16]
   1b850:	ldr	r3, [r3, #4]
   1b854:	str	r3, [fp, #-8]
   1b858:	b	1b89c <__assert_fail@plt+0xa358>
   1b85c:	ldr	r3, [fp, #-16]
   1b860:	ldr	r2, [r3, #8]
   1b864:	ldr	r3, [fp, #-8]
   1b868:	lsl	r3, r3, #2
   1b86c:	add	r3, r2, r3
   1b870:	ldr	r2, [fp, #-16]
   1b874:	ldr	r1, [r2, #8]
   1b878:	ldr	r2, [fp, #-8]
   1b87c:	sub	r2, r2, #-1073741823	; 0xc0000001
   1b880:	lsl	r2, r2, #2
   1b884:	add	r2, r1, r2
   1b888:	ldr	r2, [r2]
   1b88c:	str	r2, [r3]
   1b890:	ldr	r3, [fp, #-8]
   1b894:	sub	r3, r3, #1
   1b898:	str	r3, [fp, #-8]
   1b89c:	ldr	r3, [fp, #-16]
   1b8a0:	ldr	r2, [r3, #8]
   1b8a4:	ldr	r3, [fp, #-8]
   1b8a8:	sub	r3, r3, #-1073741823	; 0xc0000001
   1b8ac:	lsl	r3, r3, #2
   1b8b0:	add	r3, r2, r3
   1b8b4:	ldr	r2, [r3]
   1b8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b8bc:	cmp	r2, r3
   1b8c0:	bgt	1b85c <__assert_fail@plt+0xa318>
   1b8c4:	ldr	r3, [fp, #-16]
   1b8c8:	ldr	r2, [r3, #8]
   1b8cc:	ldr	r3, [fp, #-8]
   1b8d0:	sub	r3, r3, #-1073741823	; 0xc0000001
   1b8d4:	lsl	r3, r3, #2
   1b8d8:	add	r3, r2, r3
   1b8dc:	ldr	r2, [r3]
   1b8e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b8e4:	cmp	r2, r3
   1b8e8:	ldr	r3, [fp, #-16]
   1b8ec:	ldr	r2, [r3, #8]
   1b8f0:	ldr	r3, [fp, #-8]
   1b8f4:	lsl	r3, r3, #2
   1b8f8:	add	r3, r2, r3
   1b8fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b900:	str	r2, [r3]
   1b904:	ldr	r3, [fp, #-16]
   1b908:	ldr	r3, [r3, #4]
   1b90c:	add	r2, r3, #1
   1b910:	ldr	r3, [fp, #-16]
   1b914:	str	r2, [r3, #4]
   1b918:	mov	r3, #1
   1b91c:	mov	r0, r3
   1b920:	sub	sp, fp, #4
   1b924:	pop	{fp, pc}
   1b928:	push	{fp, lr}
   1b92c:	add	fp, sp, #4
   1b930:	sub	sp, sp, #16
   1b934:	str	r0, [fp, #-16]
   1b938:	str	r1, [fp, #-20]	; 0xffffffec
   1b93c:	ldr	r3, [fp, #-16]
   1b940:	ldr	r2, [r3]
   1b944:	ldr	r3, [fp, #-16]
   1b948:	ldr	r3, [r3, #4]
   1b94c:	cmp	r2, r3
   1b950:	bne	1b9c0 <__assert_fail@plt+0xa47c>
   1b954:	ldr	r3, [fp, #-16]
   1b958:	ldr	r3, [r3]
   1b95c:	add	r3, r3, #1
   1b960:	lsl	r2, r3, #1
   1b964:	ldr	r3, [fp, #-16]
   1b968:	str	r2, [r3]
   1b96c:	ldr	r3, [fp, #-16]
   1b970:	ldr	r2, [r3, #8]
   1b974:	ldr	r3, [fp, #-16]
   1b978:	ldr	r3, [r3]
   1b97c:	lsl	r3, r3, #2
   1b980:	mov	r1, r3
   1b984:	mov	r0, r2
   1b988:	bl	332ec <__assert_fail@plt+0x21da8>
   1b98c:	str	r0, [fp, #-8]
   1b990:	ldr	r3, [fp, #-8]
   1b994:	cmp	r3, #0
   1b998:	moveq	r3, #1
   1b99c:	movne	r3, #0
   1b9a0:	uxtb	r3, r3
   1b9a4:	cmp	r3, #0
   1b9a8:	beq	1b9b4 <__assert_fail@plt+0xa470>
   1b9ac:	mov	r3, #0
   1b9b0:	b	1b9f0 <__assert_fail@plt+0xa4ac>
   1b9b4:	ldr	r3, [fp, #-16]
   1b9b8:	ldr	r2, [fp, #-8]
   1b9bc:	str	r2, [r3, #8]
   1b9c0:	ldr	r3, [fp, #-16]
   1b9c4:	ldr	r2, [r3, #8]
   1b9c8:	ldr	r3, [fp, #-16]
   1b9cc:	ldr	r3, [r3, #4]
   1b9d0:	add	r0, r3, #1
   1b9d4:	ldr	r1, [fp, #-16]
   1b9d8:	str	r0, [r1, #4]
   1b9dc:	lsl	r3, r3, #2
   1b9e0:	add	r3, r2, r3
   1b9e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b9e8:	str	r2, [r3]
   1b9ec:	mov	r3, #1
   1b9f0:	mov	r0, r3
   1b9f4:	sub	sp, fp, #4
   1b9f8:	pop	{fp, pc}
   1b9fc:	push	{fp}		; (str fp, [sp, #-4]!)
   1ba00:	add	fp, sp, #0
   1ba04:	sub	sp, sp, #20
   1ba08:	str	r0, [fp, #-16]
   1ba0c:	str	r1, [fp, #-20]	; 0xffffffec
   1ba10:	ldr	r3, [fp, #-16]
   1ba14:	cmp	r3, #0
   1ba18:	beq	1ba40 <__assert_fail@plt+0xa4fc>
   1ba1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba20:	cmp	r3, #0
   1ba24:	beq	1ba40 <__assert_fail@plt+0xa4fc>
   1ba28:	ldr	r3, [fp, #-16]
   1ba2c:	ldr	r2, [r3, #4]
   1ba30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba34:	ldr	r3, [r3, #4]
   1ba38:	cmp	r2, r3
   1ba3c:	beq	1ba48 <__assert_fail@plt+0xa504>
   1ba40:	mov	r3, #0
   1ba44:	b	1bab4 <__assert_fail@plt+0xa570>
   1ba48:	ldr	r3, [fp, #-16]
   1ba4c:	ldr	r3, [r3, #4]
   1ba50:	str	r3, [fp, #-8]
   1ba54:	b	1ba98 <__assert_fail@plt+0xa554>
   1ba58:	ldr	r3, [fp, #-16]
   1ba5c:	ldr	r2, [r3, #8]
   1ba60:	ldr	r3, [fp, #-8]
   1ba64:	lsl	r3, r3, #2
   1ba68:	add	r3, r2, r3
   1ba6c:	ldr	r2, [r3]
   1ba70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba74:	ldr	r1, [r3, #8]
   1ba78:	ldr	r3, [fp, #-8]
   1ba7c:	lsl	r3, r3, #2
   1ba80:	add	r3, r1, r3
   1ba84:	ldr	r3, [r3]
   1ba88:	cmp	r2, r3
   1ba8c:	beq	1ba98 <__assert_fail@plt+0xa554>
   1ba90:	mov	r3, #0
   1ba94:	b	1bab4 <__assert_fail@plt+0xa570>
   1ba98:	ldr	r3, [fp, #-8]
   1ba9c:	sub	r3, r3, #1
   1baa0:	str	r3, [fp, #-8]
   1baa4:	ldr	r3, [fp, #-8]
   1baa8:	cmp	r3, #0
   1baac:	bge	1ba58 <__assert_fail@plt+0xa514>
   1bab0:	mov	r3, #1
   1bab4:	mov	r0, r3
   1bab8:	add	sp, fp, #0
   1babc:	pop	{fp}		; (ldr fp, [sp], #4)
   1bac0:	bx	lr
   1bac4:	push	{fp}		; (str fp, [sp, #-4]!)
   1bac8:	add	fp, sp, #0
   1bacc:	sub	sp, sp, #28
   1bad0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bad4:	str	r1, [fp, #-28]	; 0xffffffe4
   1bad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1badc:	ldr	r3, [r3, #4]
   1bae0:	cmp	r3, #0
   1bae4:	bgt	1baf0 <__assert_fail@plt+0xa5ac>
   1bae8:	mov	r3, #0
   1baec:	b	1bba0 <__assert_fail@plt+0xa65c>
   1baf0:	mov	r3, #0
   1baf4:	str	r3, [fp, #-8]
   1baf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bafc:	ldr	r3, [r3, #4]
   1bb00:	sub	r3, r3, #1
   1bb04:	str	r3, [fp, #-12]
   1bb08:	b	1bb5c <__assert_fail@plt+0xa618>
   1bb0c:	ldr	r2, [fp, #-8]
   1bb10:	ldr	r3, [fp, #-12]
   1bb14:	add	r3, r2, r3
   1bb18:	lsr	r3, r3, #1
   1bb1c:	str	r3, [fp, #-16]
   1bb20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb24:	ldr	r2, [r3, #8]
   1bb28:	ldr	r3, [fp, #-16]
   1bb2c:	lsl	r3, r3, #2
   1bb30:	add	r3, r2, r3
   1bb34:	ldr	r2, [r3]
   1bb38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb3c:	cmp	r2, r3
   1bb40:	bge	1bb54 <__assert_fail@plt+0xa610>
   1bb44:	ldr	r3, [fp, #-16]
   1bb48:	add	r3, r3, #1
   1bb4c:	str	r3, [fp, #-8]
   1bb50:	b	1bb5c <__assert_fail@plt+0xa618>
   1bb54:	ldr	r3, [fp, #-16]
   1bb58:	str	r3, [fp, #-12]
   1bb5c:	ldr	r2, [fp, #-8]
   1bb60:	ldr	r3, [fp, #-12]
   1bb64:	cmp	r2, r3
   1bb68:	bcc	1bb0c <__assert_fail@plt+0xa5c8>
   1bb6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb70:	ldr	r2, [r3, #8]
   1bb74:	ldr	r3, [fp, #-8]
   1bb78:	lsl	r3, r3, #2
   1bb7c:	add	r3, r2, r3
   1bb80:	ldr	r2, [r3]
   1bb84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb88:	cmp	r2, r3
   1bb8c:	bne	1bb9c <__assert_fail@plt+0xa658>
   1bb90:	ldr	r3, [fp, #-8]
   1bb94:	add	r3, r3, #1
   1bb98:	b	1bba0 <__assert_fail@plt+0xa65c>
   1bb9c:	mov	r3, #0
   1bba0:	mov	r0, r3
   1bba4:	add	sp, fp, #0
   1bba8:	pop	{fp}		; (ldr fp, [sp], #4)
   1bbac:	bx	lr
   1bbb0:	push	{fp}		; (str fp, [sp, #-4]!)
   1bbb4:	add	fp, sp, #0
   1bbb8:	sub	sp, sp, #12
   1bbbc:	str	r0, [fp, #-8]
   1bbc0:	str	r1, [fp, #-12]
   1bbc4:	ldr	r3, [fp, #-12]
   1bbc8:	cmp	r3, #0
   1bbcc:	blt	1bc54 <__assert_fail@plt+0xa710>
   1bbd0:	ldr	r3, [fp, #-8]
   1bbd4:	ldr	r2, [r3, #4]
   1bbd8:	ldr	r3, [fp, #-12]
   1bbdc:	cmp	r2, r3
   1bbe0:	ble	1bc54 <__assert_fail@plt+0xa710>
   1bbe4:	ldr	r3, [fp, #-8]
   1bbe8:	ldr	r3, [r3, #4]
   1bbec:	sub	r2, r3, #1
   1bbf0:	ldr	r3, [fp, #-8]
   1bbf4:	str	r2, [r3, #4]
   1bbf8:	b	1bc3c <__assert_fail@plt+0xa6f8>
   1bbfc:	ldr	r3, [fp, #-8]
   1bc00:	ldr	r2, [r3, #8]
   1bc04:	ldr	r3, [fp, #-12]
   1bc08:	lsl	r3, r3, #2
   1bc0c:	add	r3, r2, r3
   1bc10:	ldr	r2, [fp, #-8]
   1bc14:	ldr	r1, [r2, #8]
   1bc18:	ldr	r2, [fp, #-12]
   1bc1c:	add	r2, r2, #1
   1bc20:	lsl	r2, r2, #2
   1bc24:	add	r2, r1, r2
   1bc28:	ldr	r2, [r2]
   1bc2c:	str	r2, [r3]
   1bc30:	ldr	r3, [fp, #-12]
   1bc34:	add	r3, r3, #1
   1bc38:	str	r3, [fp, #-12]
   1bc3c:	ldr	r3, [fp, #-8]
   1bc40:	ldr	r2, [r3, #4]
   1bc44:	ldr	r3, [fp, #-12]
   1bc48:	cmp	r2, r3
   1bc4c:	bgt	1bbfc <__assert_fail@plt+0xa6b8>
   1bc50:	b	1bc58 <__assert_fail@plt+0xa714>
   1bc54:	nop			; (mov r0, r0)
   1bc58:	add	sp, fp, #0
   1bc5c:	pop	{fp}		; (ldr fp, [sp], #4)
   1bc60:	bx	lr
   1bc64:	push	{fp, lr}
   1bc68:	add	fp, sp, #4
   1bc6c:	sub	sp, sp, #48	; 0x30
   1bc70:	str	r0, [fp, #-40]	; 0xffffffd8
   1bc74:	sub	r3, fp, #48	; 0x30
   1bc78:	stm	r3, {r1, r2}
   1bc7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc80:	ldr	r2, [r3, #8]
   1bc84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc88:	ldr	r3, [r3, #4]
   1bc8c:	cmp	r2, r3
   1bc90:	movcs	r3, #1
   1bc94:	movcc	r3, #0
   1bc98:	uxtb	r3, r3
   1bc9c:	cmp	r3, #0
   1bca0:	beq	1bef0 <__assert_fail@plt+0xa9ac>
   1bca4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bca8:	ldr	r3, [r3, #4]
   1bcac:	lsl	r3, r3, #1
   1bcb0:	str	r3, [fp, #-8]
   1bcb4:	mov	r3, #12
   1bcb8:	str	r3, [fp, #-12]
   1bcbc:	ldr	r1, [fp, #-12]
   1bcc0:	mvn	r0, #0
   1bcc4:	bl	34794 <__assert_fail@plt+0x23250>
   1bcc8:	mov	r3, r0
   1bccc:	cmp	r3, #0
   1bcd0:	blt	1bcec <__assert_fail@plt+0xa7a8>
   1bcd4:	ldr	r1, [fp, #-12]
   1bcd8:	mvn	r0, #0
   1bcdc:	bl	34794 <__assert_fail@plt+0x23250>
   1bce0:	mov	r3, r0
   1bce4:	mov	r2, r3
   1bce8:	b	1bcf0 <__assert_fail@plt+0xa7ac>
   1bcec:	mvn	r2, #-2147483648	; 0x80000000
   1bcf0:	ldr	r3, [fp, #-8]
   1bcf4:	cmp	r2, r3
   1bcf8:	movcc	r3, #1
   1bcfc:	movcs	r3, #0
   1bd00:	uxtb	r3, r3
   1bd04:	cmp	r3, #0
   1bd08:	beq	1bd14 <__assert_fail@plt+0xa7d0>
   1bd0c:	mvn	r3, #0
   1bd10:	b	1c050 <__assert_fail@plt+0xab0c>
   1bd14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bd18:	ldr	r2, [r3]
   1bd1c:	ldr	r3, [fp, #-8]
   1bd20:	lsl	r3, r3, #3
   1bd24:	mov	r1, r3
   1bd28:	mov	r0, r2
   1bd2c:	bl	332ec <__assert_fail@plt+0x21da8>
   1bd30:	str	r0, [fp, #-16]
   1bd34:	ldr	r3, [fp, #-16]
   1bd38:	cmp	r3, #0
   1bd3c:	moveq	r3, #1
   1bd40:	movne	r3, #0
   1bd44:	uxtb	r3, r3
   1bd48:	cmp	r3, #0
   1bd4c:	beq	1bd58 <__assert_fail@plt+0xa814>
   1bd50:	mvn	r3, #0
   1bd54:	b	1c050 <__assert_fail@plt+0xab0c>
   1bd58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bd5c:	ldr	r2, [fp, #-16]
   1bd60:	str	r2, [r3]
   1bd64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bd68:	ldr	r2, [r3, #12]
   1bd6c:	ldr	r3, [fp, #-8]
   1bd70:	lsl	r3, r3, #2
   1bd74:	mov	r1, r3
   1bd78:	mov	r0, r2
   1bd7c:	bl	332ec <__assert_fail@plt+0x21da8>
   1bd80:	str	r0, [fp, #-20]	; 0xffffffec
   1bd84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bd88:	ldr	r2, [r3, #16]
   1bd8c:	ldr	r3, [fp, #-8]
   1bd90:	lsl	r3, r3, #2
   1bd94:	mov	r1, r3
   1bd98:	mov	r0, r2
   1bd9c:	bl	332ec <__assert_fail@plt+0x21da8>
   1bda0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bda4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bda8:	ldr	r0, [r3, #20]
   1bdac:	ldr	r2, [fp, #-8]
   1bdb0:	mov	r3, r2
   1bdb4:	lsl	r3, r3, #1
   1bdb8:	add	r3, r3, r2
   1bdbc:	lsl	r3, r3, #2
   1bdc0:	mov	r1, r3
   1bdc4:	bl	332ec <__assert_fail@plt+0x21da8>
   1bdc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1bdcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bdd0:	ldr	r0, [r3, #24]
   1bdd4:	ldr	r2, [fp, #-8]
   1bdd8:	mov	r3, r2
   1bddc:	lsl	r3, r3, #1
   1bde0:	add	r3, r3, r2
   1bde4:	lsl	r3, r3, #2
   1bde8:	mov	r1, r3
   1bdec:	bl	332ec <__assert_fail@plt+0x21da8>
   1bdf0:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdf8:	cmp	r3, #0
   1bdfc:	moveq	r3, #1
   1be00:	movne	r3, #0
   1be04:	uxtb	r3, r3
   1be08:	cmp	r3, #0
   1be0c:	bne	1be2c <__assert_fail@plt+0xa8e8>
   1be10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be14:	cmp	r3, #0
   1be18:	moveq	r3, #1
   1be1c:	movne	r3, #0
   1be20:	uxtb	r3, r3
   1be24:	cmp	r3, #0
   1be28:	beq	1be34 <__assert_fail@plt+0xa8f0>
   1be2c:	mov	r3, #1
   1be30:	b	1be38 <__assert_fail@plt+0xa8f4>
   1be34:	mov	r3, #0
   1be38:	cmp	r3, #0
   1be3c:	bne	1be5c <__assert_fail@plt+0xa918>
   1be40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1be44:	cmp	r3, #0
   1be48:	moveq	r3, #1
   1be4c:	movne	r3, #0
   1be50:	uxtb	r3, r3
   1be54:	cmp	r3, #0
   1be58:	beq	1be64 <__assert_fail@plt+0xa920>
   1be5c:	mov	r3, #1
   1be60:	b	1be68 <__assert_fail@plt+0xa924>
   1be64:	mov	r3, #0
   1be68:	cmp	r3, #0
   1be6c:	bne	1be8c <__assert_fail@plt+0xa948>
   1be70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be74:	cmp	r3, #0
   1be78:	moveq	r3, #1
   1be7c:	movne	r3, #0
   1be80:	uxtb	r3, r3
   1be84:	cmp	r3, #0
   1be88:	beq	1beb4 <__assert_fail@plt+0xa970>
   1be8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be90:	bl	14dec <__assert_fail@plt+0x38a8>
   1be94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be98:	bl	14dec <__assert_fail@plt+0x38a8>
   1be9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bea0:	bl	14dec <__assert_fail@plt+0x38a8>
   1bea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bea8:	bl	14dec <__assert_fail@plt+0x38a8>
   1beac:	mvn	r3, #0
   1beb0:	b	1c050 <__assert_fail@plt+0xab0c>
   1beb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1beb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bebc:	str	r2, [r3, #12]
   1bec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bec8:	str	r2, [r3, #16]
   1becc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bed0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bed4:	str	r2, [r3, #20]
   1bed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bedc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bee0:	str	r2, [r3, #24]
   1bee4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bee8:	ldr	r2, [fp, #-8]
   1beec:	str	r2, [r3, #4]
   1bef0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bef4:	ldr	r2, [r3]
   1bef8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1befc:	ldr	r3, [r3, #8]
   1bf00:	lsl	r3, r3, #3
   1bf04:	add	r3, r2, r3
   1bf08:	mov	r2, r3
   1bf0c:	sub	r3, fp, #48	; 0x30
   1bf10:	ldm	r3, {r0, r1}
   1bf14:	stm	r2, {r0, r1}
   1bf18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf1c:	ldr	r2, [r3]
   1bf20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf24:	ldr	r3, [r3, #8]
   1bf28:	lsl	r3, r3, #3
   1bf2c:	add	r2, r2, r3
   1bf30:	ldr	r3, [r2, #4]
   1bf34:	bic	r3, r3, #261120	; 0x3fc00
   1bf38:	bic	r3, r3, #768	; 0x300
   1bf3c:	str	r3, [r2, #4]
   1bf40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf44:	ldr	r2, [r3]
   1bf48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf4c:	ldr	r3, [r3, #8]
   1bf50:	lsl	r3, r3, #3
   1bf54:	add	r1, r2, r3
   1bf58:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1bf5c:	cmp	r3, #5
   1bf60:	bne	1bf74 <__assert_fail@plt+0xaa30>
   1bf64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf68:	ldr	r3, [r3, #92]	; 0x5c
   1bf6c:	cmp	r3, #1
   1bf70:	bgt	1bf80 <__assert_fail@plt+0xaa3c>
   1bf74:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   1bf78:	cmp	r3, #6
   1bf7c:	bne	1bf88 <__assert_fail@plt+0xaa44>
   1bf80:	mov	r3, #1
   1bf84:	b	1bf8c <__assert_fail@plt+0xaa48>
   1bf88:	mov	r3, #0
   1bf8c:	uxtb	r3, r3
   1bf90:	and	r3, r3, #1
   1bf94:	uxtb	r3, r3
   1bf98:	ldrb	r2, [r1, #6]
   1bf9c:	and	r3, r3, #1
   1bfa0:	bic	r2, r2, #16
   1bfa4:	lsl	r3, r3, #4
   1bfa8:	orr	r3, r3, r2
   1bfac:	mov	r2, r3
   1bfb0:	strb	r2, [r1, #6]
   1bfb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bfb8:	ldr	r2, [r3, #12]
   1bfbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bfc0:	ldr	r3, [r3, #8]
   1bfc4:	lsl	r3, r3, #2
   1bfc8:	add	r3, r2, r3
   1bfcc:	mvn	r2, #0
   1bfd0:	str	r2, [r3]
   1bfd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bfd8:	ldr	r1, [r3, #20]
   1bfdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bfe0:	ldr	r2, [r3, #8]
   1bfe4:	mov	r3, r2
   1bfe8:	lsl	r3, r3, #1
   1bfec:	add	r3, r3, r2
   1bff0:	lsl	r3, r3, #2
   1bff4:	add	r3, r1, r3
   1bff8:	mov	r2, #12
   1bffc:	mov	r1, #0
   1c000:	mov	r0, r3
   1c004:	bl	11448 <memset@plt>
   1c008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c00c:	ldr	r1, [r3, #24]
   1c010:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c014:	ldr	r2, [r3, #8]
   1c018:	mov	r3, r2
   1c01c:	lsl	r3, r3, #1
   1c020:	add	r3, r3, r2
   1c024:	lsl	r3, r3, #2
   1c028:	add	r3, r1, r3
   1c02c:	mov	r2, #12
   1c030:	mov	r1, #0
   1c034:	mov	r0, r3
   1c038:	bl	11448 <memset@plt>
   1c03c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c040:	ldr	r3, [r3, #8]
   1c044:	add	r1, r3, #1
   1c048:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c04c:	str	r1, [r2, #8]
   1c050:	mov	r0, r3
   1c054:	sub	sp, fp, #4
   1c058:	pop	{fp, pc}
   1c05c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c060:	add	fp, sp, #0
   1c064:	sub	sp, sp, #20
   1c068:	str	r0, [fp, #-16]
   1c06c:	str	r1, [fp, #-20]	; 0xffffffec
   1c070:	ldr	r3, [fp, #-16]
   1c074:	ldr	r3, [r3, #4]
   1c078:	mov	r2, r3
   1c07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c080:	add	r3, r2, r3
   1c084:	str	r3, [fp, #-8]
   1c088:	mov	r3, #0
   1c08c:	str	r3, [fp, #-12]
   1c090:	b	1c0c8 <__assert_fail@plt+0xab84>
   1c094:	ldr	r3, [fp, #-16]
   1c098:	ldr	r2, [r3, #8]
   1c09c:	ldr	r3, [fp, #-12]
   1c0a0:	lsl	r3, r3, #2
   1c0a4:	add	r3, r2, r3
   1c0a8:	ldr	r3, [r3]
   1c0ac:	mov	r2, r3
   1c0b0:	ldr	r3, [fp, #-8]
   1c0b4:	add	r3, r3, r2
   1c0b8:	str	r3, [fp, #-8]
   1c0bc:	ldr	r3, [fp, #-12]
   1c0c0:	add	r3, r3, #1
   1c0c4:	str	r3, [fp, #-12]
   1c0c8:	ldr	r3, [fp, #-16]
   1c0cc:	ldr	r2, [r3, #4]
   1c0d0:	ldr	r3, [fp, #-12]
   1c0d4:	cmp	r2, r3
   1c0d8:	bgt	1c094 <__assert_fail@plt+0xab50>
   1c0dc:	ldr	r3, [fp, #-8]
   1c0e0:	mov	r0, r3
   1c0e4:	add	sp, fp, #0
   1c0e8:	pop	{fp}		; (ldr fp, [sp], #4)
   1c0ec:	bx	lr
   1c0f0:	push	{fp, lr}
   1c0f4:	add	fp, sp, #4
   1c0f8:	sub	sp, sp, #40	; 0x28
   1c0fc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c100:	str	r1, [fp, #-36]	; 0xffffffdc
   1c104:	str	r2, [fp, #-40]	; 0xffffffd8
   1c108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c10c:	mov	r2, #0
   1c110:	str	r2, [r3]
   1c114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c118:	ldr	r3, [r3, #4]
   1c11c:	cmp	r3, #0
   1c120:	moveq	r3, #1
   1c124:	movne	r3, #0
   1c128:	uxtb	r3, r3
   1c12c:	cmp	r3, #0
   1c130:	beq	1c148 <__assert_fail@plt+0xac04>
   1c134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c138:	mov	r2, #0
   1c13c:	str	r2, [r3]
   1c140:	mov	r3, #0
   1c144:	b	1c250 <__assert_fail@plt+0xad0c>
   1c148:	mov	r1, #0
   1c14c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c150:	bl	1c05c <__assert_fail@plt+0xab18>
   1c154:	str	r0, [fp, #-12]
   1c158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c15c:	ldr	r1, [r3, #32]
   1c160:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c164:	ldr	r2, [r3, #68]	; 0x44
   1c168:	ldr	r3, [fp, #-12]
   1c16c:	and	r2, r2, r3
   1c170:	mov	r3, r2
   1c174:	lsl	r3, r3, #1
   1c178:	add	r3, r3, r2
   1c17c:	lsl	r3, r3, #2
   1c180:	add	r3, r1, r3
   1c184:	str	r3, [fp, #-16]
   1c188:	mov	r3, #0
   1c18c:	str	r3, [fp, #-8]
   1c190:	b	1c1fc <__assert_fail@plt+0xacb8>
   1c194:	ldr	r3, [fp, #-16]
   1c198:	ldr	r2, [r3, #8]
   1c19c:	ldr	r3, [fp, #-8]
   1c1a0:	lsl	r3, r3, #2
   1c1a4:	add	r3, r2, r3
   1c1a8:	ldr	r3, [r3]
   1c1ac:	str	r3, [fp, #-20]	; 0xffffffec
   1c1b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1b4:	ldr	r2, [r3]
   1c1b8:	ldr	r3, [fp, #-12]
   1c1bc:	cmp	r2, r3
   1c1c0:	bne	1c1ec <__assert_fail@plt+0xaca8>
   1c1c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1c8:	add	r3, r3, #4
   1c1cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c1d0:	mov	r0, r3
   1c1d4:	bl	1b9fc <__assert_fail@plt+0xa4b8>
   1c1d8:	mov	r3, r0
   1c1dc:	cmp	r3, #0
   1c1e0:	beq	1c1f0 <__assert_fail@plt+0xacac>
   1c1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1e8:	b	1c250 <__assert_fail@plt+0xad0c>
   1c1ec:	nop			; (mov r0, r0)
   1c1f0:	ldr	r3, [fp, #-8]
   1c1f4:	add	r3, r3, #1
   1c1f8:	str	r3, [fp, #-8]
   1c1fc:	ldr	r3, [fp, #-16]
   1c200:	ldr	r2, [r3]
   1c204:	ldr	r3, [fp, #-8]
   1c208:	cmp	r2, r3
   1c20c:	bgt	1c194 <__assert_fail@plt+0xac50>
   1c210:	ldr	r2, [fp, #-12]
   1c214:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c218:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c21c:	bl	1c694 <__assert_fail@plt+0xb150>
   1c220:	str	r0, [fp, #-24]	; 0xffffffe8
   1c224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c228:	cmp	r3, #0
   1c22c:	moveq	r3, #1
   1c230:	movne	r3, #0
   1c234:	uxtb	r3, r3
   1c238:	cmp	r3, #0
   1c23c:	beq	1c24c <__assert_fail@plt+0xad08>
   1c240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c244:	mov	r2, #12
   1c248:	str	r2, [r3]
   1c24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c250:	mov	r0, r3
   1c254:	sub	sp, fp, #4
   1c258:	pop	{fp, pc}
   1c25c:	push	{fp, lr}
   1c260:	add	fp, sp, #4
   1c264:	sub	sp, sp, #40	; 0x28
   1c268:	str	r0, [fp, #-32]	; 0xffffffe0
   1c26c:	str	r1, [fp, #-36]	; 0xffffffdc
   1c270:	str	r2, [fp, #-40]	; 0xffffffd8
   1c274:	str	r3, [fp, #-44]	; 0xffffffd4
   1c278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c27c:	mov	r2, #0
   1c280:	str	r2, [r3]
   1c284:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c288:	ldr	r3, [r3, #4]
   1c28c:	cmp	r3, #0
   1c290:	bne	1c2a8 <__assert_fail@plt+0xad64>
   1c294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c298:	mov	r2, #0
   1c29c:	str	r2, [r3]
   1c2a0:	mov	r3, #0
   1c2a4:	b	1c3d0 <__assert_fail@plt+0xae8c>
   1c2a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c2ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c2b0:	bl	1c05c <__assert_fail@plt+0xab18>
   1c2b4:	str	r0, [fp, #-12]
   1c2b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c2bc:	ldr	r1, [r3, #32]
   1c2c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c2c4:	ldr	r2, [r3, #68]	; 0x44
   1c2c8:	ldr	r3, [fp, #-12]
   1c2cc:	and	r2, r2, r3
   1c2d0:	mov	r3, r2
   1c2d4:	lsl	r3, r3, #1
   1c2d8:	add	r3, r3, r2
   1c2dc:	lsl	r3, r3, #2
   1c2e0:	add	r3, r1, r3
   1c2e4:	str	r3, [fp, #-16]
   1c2e8:	mov	r3, #0
   1c2ec:	str	r3, [fp, #-8]
   1c2f0:	b	1c378 <__assert_fail@plt+0xae34>
   1c2f4:	ldr	r3, [fp, #-16]
   1c2f8:	ldr	r2, [r3, #8]
   1c2fc:	ldr	r3, [fp, #-8]
   1c300:	lsl	r3, r3, #2
   1c304:	add	r3, r2, r3
   1c308:	ldr	r3, [r3]
   1c30c:	str	r3, [fp, #-20]	; 0xffffffec
   1c310:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c314:	ldr	r2, [r3]
   1c318:	ldr	r3, [fp, #-12]
   1c31c:	cmp	r2, r3
   1c320:	bne	1c36c <__assert_fail@plt+0xae28>
   1c324:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c328:	ldrb	r3, [r3, #52]	; 0x34
   1c32c:	and	r3, r3, #15
   1c330:	uxtb	r3, r3
   1c334:	mov	r2, r3
   1c338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c33c:	cmp	r2, r3
   1c340:	bne	1c36c <__assert_fail@plt+0xae28>
   1c344:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c348:	ldr	r3, [r3, #40]	; 0x28
   1c34c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c350:	mov	r0, r3
   1c354:	bl	1b9fc <__assert_fail@plt+0xa4b8>
   1c358:	mov	r3, r0
   1c35c:	cmp	r3, #0
   1c360:	beq	1c36c <__assert_fail@plt+0xae28>
   1c364:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c368:	b	1c3d0 <__assert_fail@plt+0xae8c>
   1c36c:	ldr	r3, [fp, #-8]
   1c370:	add	r3, r3, #1
   1c374:	str	r3, [fp, #-8]
   1c378:	ldr	r3, [fp, #-16]
   1c37c:	ldr	r2, [r3]
   1c380:	ldr	r3, [fp, #-8]
   1c384:	cmp	r2, r3
   1c388:	bgt	1c2f4 <__assert_fail@plt+0xadb0>
   1c38c:	ldr	r3, [fp, #-12]
   1c390:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c394:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c398:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c39c:	bl	1c8e0 <__assert_fail@plt+0xb39c>
   1c3a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3a8:	cmp	r3, #0
   1c3ac:	moveq	r3, #1
   1c3b0:	movne	r3, #0
   1c3b4:	uxtb	r3, r3
   1c3b8:	cmp	r3, #0
   1c3bc:	beq	1c3cc <__assert_fail@plt+0xae88>
   1c3c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3c4:	mov	r2, #12
   1c3c8:	str	r2, [r3]
   1c3cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3d0:	mov	r0, r3
   1c3d4:	sub	sp, fp, #4
   1c3d8:	pop	{fp, pc}
   1c3dc:	push	{fp, lr}
   1c3e0:	add	fp, sp, #4
   1c3e4:	sub	sp, sp, #40	; 0x28
   1c3e8:	str	r0, [fp, #-32]	; 0xffffffe0
   1c3ec:	str	r1, [fp, #-36]	; 0xffffffdc
   1c3f0:	str	r2, [fp, #-40]	; 0xffffffd8
   1c3f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c3f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c3fc:	str	r2, [r3]
   1c400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c404:	add	r2, r3, #16
   1c408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c40c:	ldr	r3, [r3, #8]
   1c410:	mov	r1, r3
   1c414:	mov	r0, r2
   1c418:	bl	1a720 <__assert_fail@plt+0x91dc>
   1c41c:	str	r0, [fp, #-12]
   1c420:	ldr	r3, [fp, #-12]
   1c424:	cmp	r3, #0
   1c428:	movne	r3, #1
   1c42c:	moveq	r3, #0
   1c430:	uxtb	r3, r3
   1c434:	cmp	r3, #0
   1c438:	beq	1c444 <__assert_fail@plt+0xaf00>
   1c43c:	mov	r3, #12
   1c440:	b	1c5d8 <__assert_fail@plt+0xb094>
   1c444:	mov	r3, #0
   1c448:	str	r3, [fp, #-8]
   1c44c:	b	1c4cc <__assert_fail@plt+0xaf88>
   1c450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c454:	ldr	r2, [r3, #12]
   1c458:	ldr	r3, [fp, #-8]
   1c45c:	lsl	r3, r3, #2
   1c460:	add	r3, r2, r3
   1c464:	ldr	r3, [r3]
   1c468:	str	r3, [fp, #-16]
   1c46c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c470:	ldr	r2, [r3]
   1c474:	ldr	r3, [fp, #-16]
   1c478:	lsl	r3, r3, #3
   1c47c:	add	r3, r2, r3
   1c480:	ldrb	r3, [r3, #4]
   1c484:	and	r3, r3, #8
   1c488:	cmp	r3, #0
   1c48c:	bne	1c4c0 <__assert_fail@plt+0xaf7c>
   1c490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c494:	add	r3, r3, #16
   1c498:	ldr	r1, [fp, #-16]
   1c49c:	mov	r0, r3
   1c4a0:	bl	1b928 <__assert_fail@plt+0xa3e4>
   1c4a4:	mov	r3, r0
   1c4a8:	eor	r3, r3, #1
   1c4ac:	uxtb	r3, r3
   1c4b0:	cmp	r3, #0
   1c4b4:	beq	1c4c0 <__assert_fail@plt+0xaf7c>
   1c4b8:	mov	r3, #12
   1c4bc:	b	1c5d8 <__assert_fail@plt+0xb094>
   1c4c0:	ldr	r3, [fp, #-8]
   1c4c4:	add	r3, r3, #1
   1c4c8:	str	r3, [fp, #-8]
   1c4cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c4d0:	ldr	r2, [r3, #8]
   1c4d4:	ldr	r3, [fp, #-8]
   1c4d8:	cmp	r2, r3
   1c4dc:	bgt	1c450 <__assert_fail@plt+0xaf0c>
   1c4e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c4e4:	ldr	r1, [r3, #32]
   1c4e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c4ec:	ldr	r2, [r3, #68]	; 0x44
   1c4f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c4f4:	and	r2, r2, r3
   1c4f8:	mov	r3, r2
   1c4fc:	lsl	r3, r3, #1
   1c500:	add	r3, r3, r2
   1c504:	lsl	r3, r3, #2
   1c508:	add	r3, r1, r3
   1c50c:	str	r3, [fp, #-20]	; 0xffffffec
   1c510:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c514:	ldr	r2, [r3, #4]
   1c518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c51c:	ldr	r3, [r3]
   1c520:	cmp	r2, r3
   1c524:	movle	r3, #1
   1c528:	movgt	r3, #0
   1c52c:	uxtb	r3, r3
   1c530:	cmp	r3, #0
   1c534:	beq	1c5a8 <__assert_fail@plt+0xb064>
   1c538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c53c:	ldr	r3, [r3]
   1c540:	add	r3, r3, #1
   1c544:	lsl	r3, r3, #1
   1c548:	str	r3, [fp, #-24]	; 0xffffffe8
   1c54c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c550:	ldr	r2, [r3, #8]
   1c554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c558:	lsl	r3, r3, #2
   1c55c:	mov	r1, r3
   1c560:	mov	r0, r2
   1c564:	bl	332ec <__assert_fail@plt+0x21da8>
   1c568:	str	r0, [fp, #-28]	; 0xffffffe4
   1c56c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c570:	cmp	r3, #0
   1c574:	moveq	r3, #1
   1c578:	movne	r3, #0
   1c57c:	uxtb	r3, r3
   1c580:	cmp	r3, #0
   1c584:	beq	1c590 <__assert_fail@plt+0xb04c>
   1c588:	mov	r3, #12
   1c58c:	b	1c5d8 <__assert_fail@plt+0xb094>
   1c590:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c594:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c598:	str	r2, [r3, #8]
   1c59c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c5a4:	str	r2, [r3, #4]
   1c5a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5ac:	ldr	r2, [r3, #8]
   1c5b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5b4:	ldr	r3, [r3]
   1c5b8:	add	r0, r3, #1
   1c5bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5c0:	str	r0, [r1]
   1c5c4:	lsl	r3, r3, #2
   1c5c8:	add	r3, r2, r3
   1c5cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c5d0:	str	r2, [r3]
   1c5d4:	mov	r3, #0
   1c5d8:	mov	r0, r3
   1c5dc:	sub	sp, fp, #4
   1c5e0:	pop	{fp, pc}
   1c5e4:	push	{fp, lr}
   1c5e8:	add	fp, sp, #4
   1c5ec:	sub	sp, sp, #8
   1c5f0:	str	r0, [fp, #-8]
   1c5f4:	ldr	r3, [fp, #-8]
   1c5f8:	ldr	r3, [r3, #24]
   1c5fc:	mov	r0, r3
   1c600:	bl	14dec <__assert_fail@plt+0x38a8>
   1c604:	ldr	r3, [fp, #-8]
   1c608:	ldr	r3, [r3, #36]	; 0x24
   1c60c:	mov	r0, r3
   1c610:	bl	14dec <__assert_fail@plt+0x38a8>
   1c614:	ldr	r3, [fp, #-8]
   1c618:	ldr	r2, [r3, #40]	; 0x28
   1c61c:	ldr	r3, [fp, #-8]
   1c620:	add	r3, r3, #4
   1c624:	cmp	r2, r3
   1c628:	beq	1c650 <__assert_fail@plt+0xb10c>
   1c62c:	ldr	r3, [fp, #-8]
   1c630:	ldr	r3, [r3, #40]	; 0x28
   1c634:	ldr	r3, [r3, #8]
   1c638:	mov	r0, r3
   1c63c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c640:	ldr	r3, [fp, #-8]
   1c644:	ldr	r3, [r3, #40]	; 0x28
   1c648:	mov	r0, r3
   1c64c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c650:	ldr	r3, [fp, #-8]
   1c654:	ldr	r3, [r3, #12]
   1c658:	mov	r0, r3
   1c65c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c660:	ldr	r3, [fp, #-8]
   1c664:	ldr	r3, [r3, #48]	; 0x30
   1c668:	mov	r0, r3
   1c66c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c670:	ldr	r3, [fp, #-8]
   1c674:	ldr	r3, [r3, #44]	; 0x2c
   1c678:	mov	r0, r3
   1c67c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c680:	ldr	r0, [fp, #-8]
   1c684:	bl	14dec <__assert_fail@plt+0x38a8>
   1c688:	nop			; (mov r0, r0)
   1c68c:	sub	sp, fp, #4
   1c690:	pop	{fp, pc}
   1c694:	push	{fp, lr}
   1c698:	add	fp, sp, #4
   1c69c:	sub	sp, sp, #40	; 0x28
   1c6a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c6a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1c6a8:	str	r2, [fp, #-40]	; 0xffffffd8
   1c6ac:	mov	r1, #1
   1c6b0:	mov	r0, #56	; 0x38
   1c6b4:	bl	33180 <__assert_fail@plt+0x21c3c>
   1c6b8:	mov	r3, r0
   1c6bc:	str	r3, [fp, #-12]
   1c6c0:	ldr	r3, [fp, #-12]
   1c6c4:	cmp	r3, #0
   1c6c8:	moveq	r3, #1
   1c6cc:	movne	r3, #0
   1c6d0:	uxtb	r3, r3
   1c6d4:	cmp	r3, #0
   1c6d8:	beq	1c6e4 <__assert_fail@plt+0xb1a0>
   1c6dc:	mov	r3, #0
   1c6e0:	b	1c8d0 <__assert_fail@plt+0xb38c>
   1c6e4:	ldr	r3, [fp, #-12]
   1c6e8:	add	r3, r3, #4
   1c6ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c6f0:	mov	r0, r3
   1c6f4:	bl	1a958 <__assert_fail@plt+0x9414>
   1c6f8:	str	r0, [fp, #-16]
   1c6fc:	ldr	r3, [fp, #-16]
   1c700:	cmp	r3, #0
   1c704:	movne	r3, #1
   1c708:	moveq	r3, #0
   1c70c:	uxtb	r3, r3
   1c710:	cmp	r3, #0
   1c714:	beq	1c728 <__assert_fail@plt+0xb1e4>
   1c718:	ldr	r0, [fp, #-12]
   1c71c:	bl	14dec <__assert_fail@plt+0x38a8>
   1c720:	mov	r3, #0
   1c724:	b	1c8d0 <__assert_fail@plt+0xb38c>
   1c728:	ldr	r3, [fp, #-12]
   1c72c:	add	r2, r3, #4
   1c730:	ldr	r3, [fp, #-12]
   1c734:	str	r2, [r3, #40]	; 0x28
   1c738:	mov	r3, #0
   1c73c:	str	r3, [fp, #-8]
   1c740:	b	1c878 <__assert_fail@plt+0xb334>
   1c744:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c748:	ldr	r2, [r3]
   1c74c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c750:	ldr	r1, [r3, #8]
   1c754:	ldr	r3, [fp, #-8]
   1c758:	lsl	r3, r3, #2
   1c75c:	add	r3, r1, r3
   1c760:	ldr	r3, [r3]
   1c764:	lsl	r3, r3, #3
   1c768:	add	r3, r2, r3
   1c76c:	str	r3, [fp, #-20]	; 0xffffffec
   1c770:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c774:	ldrb	r3, [r3, #4]
   1c778:	str	r3, [fp, #-24]	; 0xffffffe8
   1c77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c780:	cmp	r3, #1
   1c784:	bne	1c7a0 <__assert_fail@plt+0xb25c>
   1c788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c78c:	ldr	r2, [r3, #4]
   1c790:	ldr	r3, [pc, #324]	; 1c8dc <__assert_fail@plt+0xb398>
   1c794:	and	r3, r3, r2
   1c798:	cmp	r3, #0
   1c79c:	beq	1c868 <__assert_fail@plt+0xb324>
   1c7a0:	ldr	r3, [fp, #-12]
   1c7a4:	ldrb	r3, [r3, #52]	; 0x34
   1c7a8:	lsr	r3, r3, #5
   1c7ac:	and	r3, r3, #1
   1c7b0:	uxtb	r2, r3
   1c7b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7b8:	ldrb	r3, [r3, #6]
   1c7bc:	lsr	r3, r3, #4
   1c7c0:	and	r3, r3, #1
   1c7c4:	uxtb	r3, r3
   1c7c8:	orr	r3, r2, r3
   1c7cc:	uxtb	r3, r3
   1c7d0:	ldr	r1, [fp, #-12]
   1c7d4:	ldrb	r2, [r1, #52]	; 0x34
   1c7d8:	and	r3, r3, #1
   1c7dc:	bic	r2, r2, #32
   1c7e0:	lsl	r3, r3, #5
   1c7e4:	orr	r3, r3, r2
   1c7e8:	mov	r2, r3
   1c7ec:	strb	r2, [r1, #52]	; 0x34
   1c7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7f4:	cmp	r3, #2
   1c7f8:	bne	1c810 <__assert_fail@plt+0xb2cc>
   1c7fc:	ldr	r2, [fp, #-12]
   1c800:	ldrb	r3, [r2, #52]	; 0x34
   1c804:	orr	r3, r3, #16
   1c808:	strb	r3, [r2, #52]	; 0x34
   1c80c:	b	1c86c <__assert_fail@plt+0xb328>
   1c810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c814:	cmp	r3, #4
   1c818:	bne	1c830 <__assert_fail@plt+0xb2ec>
   1c81c:	ldr	r2, [fp, #-12]
   1c820:	ldrb	r3, [r2, #52]	; 0x34
   1c824:	orr	r3, r3, #64	; 0x40
   1c828:	strb	r3, [r2, #52]	; 0x34
   1c82c:	b	1c86c <__assert_fail@plt+0xb328>
   1c830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c834:	cmp	r3, #12
   1c838:	beq	1c854 <__assert_fail@plt+0xb310>
   1c83c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c840:	ldr	r2, [r3, #4]
   1c844:	ldr	r3, [pc, #144]	; 1c8dc <__assert_fail@plt+0xb398>
   1c848:	and	r3, r3, r2
   1c84c:	cmp	r3, #0
   1c850:	beq	1c86c <__assert_fail@plt+0xb328>
   1c854:	ldr	r2, [fp, #-12]
   1c858:	ldrb	r3, [r2, #52]	; 0x34
   1c85c:	orr	r3, r3, #128	; 0x80
   1c860:	strb	r3, [r2, #52]	; 0x34
   1c864:	b	1c86c <__assert_fail@plt+0xb328>
   1c868:	nop			; (mov r0, r0)
   1c86c:	ldr	r3, [fp, #-8]
   1c870:	add	r3, r3, #1
   1c874:	str	r3, [fp, #-8]
   1c878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c87c:	ldr	r2, [r3, #4]
   1c880:	ldr	r3, [fp, #-8]
   1c884:	cmp	r2, r3
   1c888:	bgt	1c744 <__assert_fail@plt+0xb200>
   1c88c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c890:	ldr	r1, [fp, #-12]
   1c894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c898:	bl	1c3dc <__assert_fail@plt+0xae98>
   1c89c:	str	r0, [fp, #-16]
   1c8a0:	ldr	r3, [fp, #-16]
   1c8a4:	cmp	r3, #0
   1c8a8:	movne	r3, #1
   1c8ac:	moveq	r3, #0
   1c8b0:	uxtb	r3, r3
   1c8b4:	cmp	r3, #0
   1c8b8:	beq	1c8cc <__assert_fail@plt+0xb388>
   1c8bc:	ldr	r0, [fp, #-12]
   1c8c0:	bl	1c5e4 <__assert_fail@plt+0xb0a0>
   1c8c4:	mov	r3, #0
   1c8c8:	str	r3, [fp, #-12]
   1c8cc:	ldr	r3, [fp, #-12]
   1c8d0:	mov	r0, r3
   1c8d4:	sub	sp, fp, #4
   1c8d8:	pop	{fp, pc}
   1c8dc:	andeq	pc, r3, r0, lsl #30
   1c8e0:	push	{fp, lr}
   1c8e4:	add	fp, sp, #4
   1c8e8:	sub	sp, sp, #48	; 0x30
   1c8ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1c8f0:	str	r1, [fp, #-44]	; 0xffffffd4
   1c8f4:	str	r2, [fp, #-48]	; 0xffffffd0
   1c8f8:	str	r3, [fp, #-52]	; 0xffffffcc
   1c8fc:	mov	r3, #0
   1c900:	str	r3, [fp, #-12]
   1c904:	mov	r1, #1
   1c908:	mov	r0, #56	; 0x38
   1c90c:	bl	33180 <__assert_fail@plt+0x21c3c>
   1c910:	mov	r3, r0
   1c914:	str	r3, [fp, #-16]
   1c918:	ldr	r3, [fp, #-16]
   1c91c:	cmp	r3, #0
   1c920:	moveq	r3, #1
   1c924:	movne	r3, #0
   1c928:	uxtb	r3, r3
   1c92c:	cmp	r3, #0
   1c930:	beq	1c93c <__assert_fail@plt+0xb3f8>
   1c934:	mov	r3, #0
   1c938:	b	1cc84 <__assert_fail@plt+0xb740>
   1c93c:	ldr	r3, [fp, #-16]
   1c940:	add	r3, r3, #4
   1c944:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c948:	mov	r0, r3
   1c94c:	bl	1a958 <__assert_fail@plt+0x9414>
   1c950:	str	r0, [fp, #-20]	; 0xffffffec
   1c954:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c958:	cmp	r3, #0
   1c95c:	movne	r3, #1
   1c960:	moveq	r3, #0
   1c964:	uxtb	r3, r3
   1c968:	cmp	r3, #0
   1c96c:	beq	1c980 <__assert_fail@plt+0xb43c>
   1c970:	ldr	r0, [fp, #-16]
   1c974:	bl	14dec <__assert_fail@plt+0x38a8>
   1c978:	mov	r3, #0
   1c97c:	b	1cc84 <__assert_fail@plt+0xb740>
   1c980:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c984:	uxtb	r3, r3
   1c988:	and	r3, r3, #15
   1c98c:	uxtb	r1, r3
   1c990:	ldr	r2, [fp, #-16]
   1c994:	ldrb	r3, [r2, #52]	; 0x34
   1c998:	and	r1, r1, #15
   1c99c:	bic	r3, r3, #15
   1c9a0:	orr	r3, r1, r3
   1c9a4:	strb	r3, [r2, #52]	; 0x34
   1c9a8:	ldr	r3, [fp, #-16]
   1c9ac:	add	r2, r3, #4
   1c9b0:	ldr	r3, [fp, #-16]
   1c9b4:	str	r2, [r3, #40]	; 0x28
   1c9b8:	mov	r3, #0
   1c9bc:	str	r3, [fp, #-8]
   1c9c0:	b	1cc2c <__assert_fail@plt+0xb6e8>
   1c9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c9c8:	ldr	r2, [r3]
   1c9cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c9d0:	ldr	r1, [r3, #8]
   1c9d4:	ldr	r3, [fp, #-8]
   1c9d8:	lsl	r3, r3, #2
   1c9dc:	add	r3, r1, r3
   1c9e0:	ldr	r3, [r3]
   1c9e4:	lsl	r3, r3, #3
   1c9e8:	add	r3, r2, r3
   1c9ec:	str	r3, [fp, #-24]	; 0xffffffe8
   1c9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c9f4:	ldrb	r3, [r3, #4]
   1c9f8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca00:	ldr	r3, [r3, #4]
   1ca04:	lsr	r3, r3, #8
   1ca08:	lsl	r3, r3, #22
   1ca0c:	lsr	r3, r3, #22
   1ca10:	uxth	r3, r3
   1ca14:	str	r3, [fp, #-32]	; 0xffffffe0
   1ca18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca1c:	cmp	r3, #1
   1ca20:	bne	1ca30 <__assert_fail@plt+0xb4ec>
   1ca24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca28:	cmp	r3, #0
   1ca2c:	beq	1cc1c <__assert_fail@plt+0xb6d8>
   1ca30:	ldr	r3, [fp, #-16]
   1ca34:	ldrb	r3, [r3, #52]	; 0x34
   1ca38:	lsr	r3, r3, #5
   1ca3c:	and	r3, r3, #1
   1ca40:	uxtb	r2, r3
   1ca44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca48:	ldrb	r3, [r3, #6]
   1ca4c:	lsr	r3, r3, #4
   1ca50:	and	r3, r3, #1
   1ca54:	uxtb	r3, r3
   1ca58:	orr	r3, r2, r3
   1ca5c:	uxtb	r3, r3
   1ca60:	ldr	r1, [fp, #-16]
   1ca64:	ldrb	r2, [r1, #52]	; 0x34
   1ca68:	and	r3, r3, #1
   1ca6c:	bic	r2, r2, #32
   1ca70:	lsl	r3, r3, #5
   1ca74:	orr	r3, r3, r2
   1ca78:	mov	r2, r3
   1ca7c:	strb	r2, [r1, #52]	; 0x34
   1ca80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca84:	cmp	r3, #2
   1ca88:	bne	1caa0 <__assert_fail@plt+0xb55c>
   1ca8c:	ldr	r2, [fp, #-16]
   1ca90:	ldrb	r3, [r2, #52]	; 0x34
   1ca94:	orr	r3, r3, #16
   1ca98:	strb	r3, [r2, #52]	; 0x34
   1ca9c:	b	1cabc <__assert_fail@plt+0xb578>
   1caa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1caa4:	cmp	r3, #4
   1caa8:	bne	1cabc <__assert_fail@plt+0xb578>
   1caac:	ldr	r2, [fp, #-16]
   1cab0:	ldrb	r3, [r2, #52]	; 0x34
   1cab4:	orr	r3, r3, #64	; 0x40
   1cab8:	strb	r3, [r2, #52]	; 0x34
   1cabc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cac0:	cmp	r3, #0
   1cac4:	beq	1cc20 <__assert_fail@plt+0xb6dc>
   1cac8:	ldr	r3, [fp, #-16]
   1cacc:	ldr	r2, [r3, #40]	; 0x28
   1cad0:	ldr	r3, [fp, #-16]
   1cad4:	add	r3, r3, #4
   1cad8:	cmp	r2, r3
   1cadc:	bne	1cb70 <__assert_fail@plt+0xb62c>
   1cae0:	mov	r0, #12
   1cae4:	bl	33244 <__assert_fail@plt+0x21d00>
   1cae8:	mov	r3, r0
   1caec:	str	r3, [fp, #-36]	; 0xffffffdc
   1caf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1caf4:	cmp	r3, #0
   1caf8:	moveq	r3, #1
   1cafc:	movne	r3, #0
   1cb00:	uxtb	r3, r3
   1cb04:	cmp	r3, #0
   1cb08:	beq	1cb1c <__assert_fail@plt+0xb5d8>
   1cb0c:	ldr	r0, [fp, #-16]
   1cb10:	bl	1c5e4 <__assert_fail@plt+0xb0a0>
   1cb14:	mov	r3, #0
   1cb18:	b	1cc84 <__assert_fail@plt+0xb740>
   1cb1c:	ldr	r3, [fp, #-16]
   1cb20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cb24:	str	r2, [r3, #40]	; 0x28
   1cb28:	ldr	r3, [fp, #-16]
   1cb2c:	ldr	r3, [r3, #40]	; 0x28
   1cb30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cb34:	mov	r0, r3
   1cb38:	bl	1a958 <__assert_fail@plt+0x9414>
   1cb3c:	mov	r3, r0
   1cb40:	cmp	r3, #0
   1cb44:	beq	1cb58 <__assert_fail@plt+0xb614>
   1cb48:	ldr	r0, [fp, #-16]
   1cb4c:	bl	1c5e4 <__assert_fail@plt+0xb0a0>
   1cb50:	mov	r3, #0
   1cb54:	b	1cc84 <__assert_fail@plt+0xb740>
   1cb58:	mov	r3, #0
   1cb5c:	str	r3, [fp, #-12]
   1cb60:	ldr	r2, [fp, #-16]
   1cb64:	ldrb	r3, [r2, #52]	; 0x34
   1cb68:	orr	r3, r3, #128	; 0x80
   1cb6c:	strb	r3, [r2, #52]	; 0x34
   1cb70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb74:	and	r3, r3, #1
   1cb78:	cmp	r3, #0
   1cb7c:	beq	1cb90 <__assert_fail@plt+0xb64c>
   1cb80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cb84:	and	r3, r3, #1
   1cb88:	cmp	r3, #0
   1cb8c:	beq	1cbf0 <__assert_fail@plt+0xb6ac>
   1cb90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb94:	and	r3, r3, #2
   1cb98:	cmp	r3, #0
   1cb9c:	beq	1cbb0 <__assert_fail@plt+0xb66c>
   1cba0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cba4:	and	r3, r3, #1
   1cba8:	cmp	r3, #0
   1cbac:	bne	1cbf0 <__assert_fail@plt+0xb6ac>
   1cbb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbb4:	and	r3, r3, #16
   1cbb8:	cmp	r3, #0
   1cbbc:	beq	1cbd0 <__assert_fail@plt+0xb68c>
   1cbc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cbc4:	and	r3, r3, #2
   1cbc8:	cmp	r3, #0
   1cbcc:	beq	1cbf0 <__assert_fail@plt+0xb6ac>
   1cbd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbd4:	and	r3, r3, #64	; 0x40
   1cbd8:	cmp	r3, #0
   1cbdc:	beq	1cc20 <__assert_fail@plt+0xb6dc>
   1cbe0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cbe4:	and	r3, r3, #4
   1cbe8:	cmp	r3, #0
   1cbec:	bne	1cc20 <__assert_fail@plt+0xb6dc>
   1cbf0:	ldr	r3, [fp, #-16]
   1cbf4:	add	r0, r3, #4
   1cbf8:	ldr	r2, [fp, #-8]
   1cbfc:	ldr	r3, [fp, #-12]
   1cc00:	sub	r3, r2, r3
   1cc04:	mov	r1, r3
   1cc08:	bl	1bbb0 <__assert_fail@plt+0xa66c>
   1cc0c:	ldr	r3, [fp, #-12]
   1cc10:	add	r3, r3, #1
   1cc14:	str	r3, [fp, #-12]
   1cc18:	b	1cc20 <__assert_fail@plt+0xb6dc>
   1cc1c:	nop			; (mov r0, r0)
   1cc20:	ldr	r3, [fp, #-8]
   1cc24:	add	r3, r3, #1
   1cc28:	str	r3, [fp, #-8]
   1cc2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc30:	ldr	r2, [r3, #4]
   1cc34:	ldr	r3, [fp, #-8]
   1cc38:	cmp	r2, r3
   1cc3c:	bgt	1c9c4 <__assert_fail@plt+0xb480>
   1cc40:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cc44:	ldr	r1, [fp, #-16]
   1cc48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc4c:	bl	1c3dc <__assert_fail@plt+0xae98>
   1cc50:	str	r0, [fp, #-20]	; 0xffffffec
   1cc54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc58:	cmp	r3, #0
   1cc5c:	movne	r3, #1
   1cc60:	moveq	r3, #0
   1cc64:	uxtb	r3, r3
   1cc68:	cmp	r3, #0
   1cc6c:	beq	1cc80 <__assert_fail@plt+0xb73c>
   1cc70:	ldr	r0, [fp, #-16]
   1cc74:	bl	1c5e4 <__assert_fail@plt+0xb0a0>
   1cc78:	mov	r3, #0
   1cc7c:	str	r3, [fp, #-16]
   1cc80:	ldr	r3, [fp, #-16]
   1cc84:	mov	r0, r3
   1cc88:	sub	sp, fp, #4
   1cc8c:	pop	{fp, pc}
   1cc90:	push	{fp, lr}
   1cc94:	add	fp, sp, #4
   1cc98:	sub	sp, sp, #24
   1cc9c:	str	r0, [fp, #-16]
   1cca0:	str	r1, [fp, #-20]	; 0xffffffec
   1cca4:	str	r2, [fp, #-24]	; 0xffffffe8
   1cca8:	ldr	r3, [pc, #160]	; 1cd50 <__assert_fail@plt+0xb80c>
   1ccac:	ldr	r3, [r3]
   1ccb0:	and	r3, r3, #33554432	; 0x2000000
   1ccb4:	cmp	r3, #0
   1ccb8:	movne	r3, #1
   1ccbc:	moveq	r3, #0
   1ccc0:	uxtb	r3, r3
   1ccc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccc8:	ldrb	r2, [r1, #28]
   1cccc:	and	r3, r3, #1
   1ccd0:	bic	r2, r2, #16
   1ccd4:	lsl	r3, r3, #4
   1ccd8:	orr	r3, r3, r2
   1ccdc:	mov	r2, r3
   1cce0:	strb	r2, [r1, #28]
   1cce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cce8:	ldrb	r3, [r2, #28]
   1ccec:	orr	r3, r3, #128	; 0x80
   1ccf0:	strb	r3, [r2, #28]
   1ccf4:	ldr	r3, [pc, #84]	; 1cd50 <__assert_fail@plt+0xb80c>
   1ccf8:	ldr	r3, [r3]
   1ccfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd00:	ldr	r1, [fp, #-16]
   1cd04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd08:	bl	1dc50 <__assert_fail@plt+0xc70c>
   1cd0c:	str	r0, [fp, #-8]
   1cd10:	ldr	r3, [fp, #-8]
   1cd14:	cmp	r3, #0
   1cd18:	bne	1cd24 <__assert_fail@plt+0xb7e0>
   1cd1c:	mov	r3, #0
   1cd20:	b	1cd44 <__assert_fail@plt+0xb800>
   1cd24:	ldr	r2, [pc, #40]	; 1cd54 <__assert_fail@plt+0xb810>
   1cd28:	ldr	r3, [fp, #-8]
   1cd2c:	ldr	r3, [r2, r3, lsl #2]
   1cd30:	ldr	r2, [pc, #32]	; 1cd58 <__assert_fail@plt+0xb814>
   1cd34:	add	r3, r3, r2
   1cd38:	mov	r0, r3
   1cd3c:	bl	113e8 <gettext@plt>
   1cd40:	mov	r3, r0
   1cd44:	mov	r0, r3
   1cd48:	sub	sp, fp, #4
   1cd4c:	pop	{fp, pc}
   1cd50:	strdeq	r7, [r4], -r4
   1cd54:	strdeq	r5, [r3], -ip
   1cd58:	andeq	r5, r3, ip, ror ip
   1cd5c:	push	{fp}		; (str fp, [sp, #-4]!)
   1cd60:	add	fp, sp, #0
   1cd64:	sub	sp, sp, #20
   1cd68:	str	r0, [fp, #-16]
   1cd6c:	ldr	r3, [pc, #36]	; 1cd98 <__assert_fail@plt+0xb854>
   1cd70:	ldr	r3, [r3]
   1cd74:	str	r3, [fp, #-8]
   1cd78:	ldr	r2, [pc, #24]	; 1cd98 <__assert_fail@plt+0xb854>
   1cd7c:	ldr	r3, [fp, #-16]
   1cd80:	str	r3, [r2]
   1cd84:	ldr	r3, [fp, #-8]
   1cd88:	mov	r0, r3
   1cd8c:	add	sp, fp, #0
   1cd90:	pop	{fp}		; (ldr fp, [sp], #4)
   1cd94:	bx	lr
   1cd98:	strdeq	r7, [r4], -r4
   1cd9c:	push	{fp, lr}
   1cda0:	add	fp, sp, #4
   1cda4:	sub	sp, sp, #16
   1cda8:	str	r0, [fp, #-16]
   1cdac:	ldr	r3, [fp, #-16]
   1cdb0:	ldr	r3, [r3]
   1cdb4:	str	r3, [fp, #-8]
   1cdb8:	ldr	r3, [fp, #-16]
   1cdbc:	ldr	r3, [r3, #16]
   1cdc0:	str	r3, [fp, #-12]
   1cdc4:	mov	r2, #256	; 0x100
   1cdc8:	mov	r1, #0
   1cdcc:	ldr	r0, [fp, #-12]
   1cdd0:	bl	11448 <memset@plt>
   1cdd4:	ldr	r3, [fp, #-8]
   1cdd8:	ldr	r3, [r3, #36]	; 0x24
   1cddc:	ldr	r2, [fp, #-12]
   1cde0:	mov	r1, r3
   1cde4:	ldr	r0, [fp, #-16]
   1cde8:	bl	1ce9c <__assert_fail@plt+0xb958>
   1cdec:	ldr	r3, [fp, #-8]
   1cdf0:	ldr	r2, [r3, #36]	; 0x24
   1cdf4:	ldr	r3, [fp, #-8]
   1cdf8:	ldr	r3, [r3, #40]	; 0x28
   1cdfc:	cmp	r2, r3
   1ce00:	beq	1ce1c <__assert_fail@plt+0xb8d8>
   1ce04:	ldr	r3, [fp, #-8]
   1ce08:	ldr	r3, [r3, #40]	; 0x28
   1ce0c:	ldr	r2, [fp, #-12]
   1ce10:	mov	r1, r3
   1ce14:	ldr	r0, [fp, #-16]
   1ce18:	bl	1ce9c <__assert_fail@plt+0xb958>
   1ce1c:	ldr	r3, [fp, #-8]
   1ce20:	ldr	r2, [r3, #36]	; 0x24
   1ce24:	ldr	r3, [fp, #-8]
   1ce28:	ldr	r3, [r3, #44]	; 0x2c
   1ce2c:	cmp	r2, r3
   1ce30:	beq	1ce4c <__assert_fail@plt+0xb908>
   1ce34:	ldr	r3, [fp, #-8]
   1ce38:	ldr	r3, [r3, #44]	; 0x2c
   1ce3c:	ldr	r2, [fp, #-12]
   1ce40:	mov	r1, r3
   1ce44:	ldr	r0, [fp, #-16]
   1ce48:	bl	1ce9c <__assert_fail@plt+0xb958>
   1ce4c:	ldr	r3, [fp, #-8]
   1ce50:	ldr	r2, [r3, #36]	; 0x24
   1ce54:	ldr	r3, [fp, #-8]
   1ce58:	ldr	r3, [r3, #48]	; 0x30
   1ce5c:	cmp	r2, r3
   1ce60:	beq	1ce7c <__assert_fail@plt+0xb938>
   1ce64:	ldr	r3, [fp, #-8]
   1ce68:	ldr	r3, [r3, #48]	; 0x30
   1ce6c:	ldr	r2, [fp, #-12]
   1ce70:	mov	r1, r3
   1ce74:	ldr	r0, [fp, #-16]
   1ce78:	bl	1ce9c <__assert_fail@plt+0xb958>
   1ce7c:	ldr	r2, [fp, #-16]
   1ce80:	ldrb	r3, [r2, #28]
   1ce84:	orr	r3, r3, #8
   1ce88:	strb	r3, [r2, #28]
   1ce8c:	mov	r3, #0
   1ce90:	mov	r0, r3
   1ce94:	sub	sp, fp, #4
   1ce98:	pop	{fp, pc}
   1ce9c:	push	{fp, lr}
   1cea0:	add	fp, sp, #4
   1cea4:	sub	sp, sp, #440	; 0x1b8
   1cea8:	str	r0, [fp, #-432]	; 0xfffffe50
   1ceac:	str	r1, [fp, #-436]	; 0xfffffe4c
   1ceb0:	str	r2, [fp, #-440]	; 0xfffffe48
   1ceb4:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1ceb8:	ldr	r3, [r3]
   1cebc:	str	r3, [fp, #-36]	; 0xffffffdc
   1cec0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cec4:	ldr	r3, [r3, #92]	; 0x5c
   1cec8:	cmp	r3, #1
   1cecc:	bne	1ceec <__assert_fail@plt+0xb9a8>
   1ced0:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1ced4:	ldr	r3, [r3, #12]
   1ced8:	and	r3, r3, #4194304	; 0x400000
   1cedc:	cmp	r3, #0
   1cee0:	beq	1ceec <__assert_fail@plt+0xb9a8>
   1cee4:	mov	r3, #1
   1cee8:	b	1cef0 <__assert_fail@plt+0xb9ac>
   1ceec:	mov	r3, #0
   1cef0:	strb	r3, [fp, #-37]	; 0xffffffdb
   1cef4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1cef8:	and	r3, r3, #1
   1cefc:	strb	r3, [fp, #-37]	; 0xffffffdb
   1cf00:	mov	r3, #0
   1cf04:	str	r3, [fp, #-8]
   1cf08:	b	1d5ac <__assert_fail@plt+0xc068>
   1cf0c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1cf10:	ldr	r2, [r3, #12]
   1cf14:	ldr	r3, [fp, #-8]
   1cf18:	lsl	r3, r3, #2
   1cf1c:	add	r3, r2, r3
   1cf20:	ldr	r3, [r3]
   1cf24:	str	r3, [fp, #-12]
   1cf28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf2c:	ldr	r2, [r3]
   1cf30:	ldr	r3, [fp, #-12]
   1cf34:	lsl	r3, r3, #3
   1cf38:	add	r3, r2, r3
   1cf3c:	ldrb	r3, [r3, #4]
   1cf40:	str	r3, [fp, #-44]	; 0xffffffd4
   1cf44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cf48:	cmp	r3, #1
   1cf4c:	bne	1d180 <__assert_fail@plt+0xbc3c>
   1cf50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cf54:	ldr	r2, [r3]
   1cf58:	ldr	r3, [fp, #-12]
   1cf5c:	lsl	r3, r3, #3
   1cf60:	add	r3, r2, r3
   1cf64:	ldrb	r3, [r3]
   1cf68:	mov	r2, r3
   1cf6c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1cf70:	str	r3, [fp, #-56]	; 0xffffffc8
   1cf74:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1cf78:	strb	r3, [fp, #-57]	; 0xffffffc7
   1cf7c:	str	r2, [fp, #-64]	; 0xffffffc0
   1cf80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1cf84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cf88:	add	r3, r2, r3
   1cf8c:	mov	r2, #1
   1cf90:	strb	r2, [r3]
   1cf94:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1cf98:	cmp	r3, #0
   1cf9c:	beq	1cfc0 <__assert_fail@plt+0xba7c>
   1cfa0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1cfa4:	bl	1125c <tolower@plt>
   1cfa8:	mov	r3, r0
   1cfac:	mov	r2, r3
   1cfb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cfb4:	add	r3, r3, r2
   1cfb8:	mov	r2, #1
   1cfbc:	strb	r2, [r3]
   1cfc0:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1cfc4:	ldr	r3, [r3, #12]
   1cfc8:	and	r3, r3, #4194304	; 0x400000
   1cfcc:	cmp	r3, #0
   1cfd0:	beq	1d5a0 <__assert_fail@plt+0xc05c>
   1cfd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cfd8:	ldr	r3, [r3, #92]	; 0x5c
   1cfdc:	cmp	r3, #1
   1cfe0:	ble	1d5a0 <__assert_fail@plt+0xc05c>
   1cfe4:	sub	r3, fp, #140	; 0x8c
   1cfe8:	str	r3, [fp, #-16]
   1cfec:	ldr	r3, [fp, #-16]
   1cff0:	add	r2, r3, #1
   1cff4:	str	r2, [fp, #-16]
   1cff8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cffc:	ldr	r1, [r2]
   1d000:	ldr	r2, [fp, #-12]
   1d004:	lsl	r2, r2, #3
   1d008:	add	r2, r1, r2
   1d00c:	ldrb	r2, [r2]
   1d010:	strb	r2, [r3]
   1d014:	b	1d040 <__assert_fail@plt+0xbafc>
   1d018:	ldr	r3, [fp, #-16]
   1d01c:	add	r2, r3, #1
   1d020:	str	r2, [fp, #-16]
   1d024:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d028:	ldr	r1, [r2]
   1d02c:	ldr	r2, [fp, #-12]
   1d030:	lsl	r2, r2, #3
   1d034:	add	r2, r1, r2
   1d038:	ldrb	r2, [r2]
   1d03c:	strb	r2, [r3]
   1d040:	ldr	r3, [fp, #-12]
   1d044:	add	r3, r3, #1
   1d048:	str	r3, [fp, #-12]
   1d04c:	ldr	r2, [fp, #-12]
   1d050:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d054:	ldr	r3, [r3, #8]
   1d058:	cmp	r2, r3
   1d05c:	bcs	1d0a8 <__assert_fail@plt+0xbb64>
   1d060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d064:	ldr	r2, [r3]
   1d068:	ldr	r3, [fp, #-12]
   1d06c:	lsl	r3, r3, #3
   1d070:	add	r3, r2, r3
   1d074:	ldrb	r3, [r3, #4]
   1d078:	cmp	r3, #1
   1d07c:	bne	1d0a8 <__assert_fail@plt+0xbb64>
   1d080:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d084:	ldr	r2, [r3]
   1d088:	ldr	r3, [fp, #-12]
   1d08c:	lsl	r3, r3, #3
   1d090:	add	r3, r2, r3
   1d094:	ldrb	r3, [r3, #6]
   1d098:	and	r3, r3, #32
   1d09c:	uxtb	r3, r3
   1d0a0:	cmp	r3, #0
   1d0a4:	bne	1d018 <__assert_fail@plt+0xbad4>
   1d0a8:	sub	r3, fp, #152	; 0x98
   1d0ac:	mov	r2, #8
   1d0b0:	mov	r1, #0
   1d0b4:	mov	r0, r3
   1d0b8:	bl	11448 <memset@plt>
   1d0bc:	ldr	r2, [fp, #-16]
   1d0c0:	sub	r3, fp, #140	; 0x8c
   1d0c4:	sub	r3, r2, r3
   1d0c8:	mov	r2, r3
   1d0cc:	sub	r3, fp, #152	; 0x98
   1d0d0:	sub	r1, fp, #140	; 0x8c
   1d0d4:	sub	r0, fp, #144	; 0x90
   1d0d8:	bl	33f40 <__assert_fail@plt+0x229fc>
   1d0dc:	mov	r1, r0
   1d0e0:	ldr	r2, [fp, #-16]
   1d0e4:	sub	r3, fp, #140	; 0x8c
   1d0e8:	sub	r3, r2, r3
   1d0ec:	cmp	r1, r3
   1d0f0:	bne	1d5a0 <__assert_fail@plt+0xc05c>
   1d0f4:	ldr	r3, [fp, #-144]	; 0xffffff70
   1d0f8:	mov	r0, r3
   1d0fc:	bl	11274 <towlower@plt>
   1d100:	mov	r1, r0
   1d104:	sub	r2, fp, #152	; 0x98
   1d108:	sub	r3, fp, #140	; 0x8c
   1d10c:	mov	r0, r3
   1d110:	bl	111c0 <wcrtomb@plt>
   1d114:	mov	r3, r0
   1d118:	cmn	r3, #1
   1d11c:	beq	1d5a0 <__assert_fail@plt+0xc05c>
   1d120:	ldrb	r3, [fp, #-140]	; 0xffffff74
   1d124:	mov	r2, r3
   1d128:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d12c:	str	r3, [fp, #-68]	; 0xffffffbc
   1d130:	mov	r3, #0
   1d134:	strb	r3, [fp, #-69]	; 0xffffffbb
   1d138:	str	r2, [fp, #-76]	; 0xffffffb4
   1d13c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1d140:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d144:	add	r3, r2, r3
   1d148:	mov	r2, #1
   1d14c:	strb	r2, [r3]
   1d150:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1d154:	cmp	r3, #0
   1d158:	beq	1d5a0 <__assert_fail@plt+0xc05c>
   1d15c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1d160:	bl	1125c <tolower@plt>
   1d164:	mov	r3, r0
   1d168:	mov	r2, r3
   1d16c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1d170:	add	r3, r3, r2
   1d174:	mov	r2, #1
   1d178:	strb	r2, [r3]
   1d17c:	b	1d5a0 <__assert_fail@plt+0xc05c>
   1d180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d184:	cmp	r3, #3
   1d188:	bne	1d288 <__assert_fail@plt+0xbd44>
   1d18c:	mov	r3, #0
   1d190:	str	r3, [fp, #-20]	; 0xffffffec
   1d194:	mov	r3, #0
   1d198:	str	r3, [fp, #-24]	; 0xffffffe8
   1d19c:	b	1d278 <__assert_fail@plt+0xbd34>
   1d1a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d1a4:	ldr	r2, [r3]
   1d1a8:	ldr	r3, [fp, #-12]
   1d1ac:	lsl	r3, r3, #3
   1d1b0:	add	r3, r2, r3
   1d1b4:	ldr	r2, [r3]
   1d1b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1bc:	lsl	r3, r3, #2
   1d1c0:	add	r3, r2, r3
   1d1c4:	ldr	r3, [r3]
   1d1c8:	str	r3, [fp, #-48]	; 0xffffffd0
   1d1cc:	mov	r3, #0
   1d1d0:	str	r3, [fp, #-28]	; 0xffffffe4
   1d1d4:	b	1d260 <__assert_fail@plt+0xbd1c>
   1d1d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1e0:	lsr	r3, r2, r3
   1d1e4:	and	r3, r3, #1
   1d1e8:	cmp	r3, #0
   1d1ec:	beq	1d248 <__assert_fail@plt+0xbd04>
   1d1f0:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d1f4:	str	r3, [fp, #-80]	; 0xffffffb0
   1d1f8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1d1fc:	strb	r3, [fp, #-81]	; 0xffffffaf
   1d200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d204:	str	r3, [fp, #-88]	; 0xffffffa8
   1d208:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d20c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1d210:	add	r3, r2, r3
   1d214:	mov	r2, #1
   1d218:	strb	r2, [r3]
   1d21c:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   1d220:	cmp	r3, #0
   1d224:	beq	1d248 <__assert_fail@plt+0xbd04>
   1d228:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1d22c:	bl	1125c <tolower@plt>
   1d230:	mov	r3, r0
   1d234:	mov	r2, r3
   1d238:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d23c:	add	r3, r3, r2
   1d240:	mov	r2, #1
   1d244:	strb	r2, [r3]
   1d248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d24c:	add	r3, r3, #1
   1d250:	str	r3, [fp, #-28]	; 0xffffffe4
   1d254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d258:	add	r3, r3, #1
   1d25c:	str	r3, [fp, #-24]	; 0xffffffe8
   1d260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d264:	cmp	r3, #31
   1d268:	ble	1d1d8 <__assert_fail@plt+0xbc94>
   1d26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d270:	add	r3, r3, #1
   1d274:	str	r3, [fp, #-20]	; 0xffffffec
   1d278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d27c:	cmp	r3, #7
   1d280:	ble	1d1a0 <__assert_fail@plt+0xbc5c>
   1d284:	b	1d5a0 <__assert_fail@plt+0xc05c>
   1d288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d28c:	cmp	r3, #6
   1d290:	bne	1d54c <__assert_fail@plt+0xc008>
   1d294:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d298:	ldr	r2, [r3]
   1d29c:	ldr	r3, [fp, #-12]
   1d2a0:	lsl	r3, r3, #3
   1d2a4:	add	r3, r2, r3
   1d2a8:	ldr	r3, [r3]
   1d2ac:	str	r3, [fp, #-52]	; 0xffffffcc
   1d2b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d2b4:	ldr	r3, [r3, #92]	; 0x5c
   1d2b8:	cmp	r3, #1
   1d2bc:	ble	1d3b0 <__assert_fail@plt+0xbe6c>
   1d2c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d2c4:	ldr	r3, [r3, #36]	; 0x24
   1d2c8:	cmp	r3, #0
   1d2cc:	bne	1d2f8 <__assert_fail@plt+0xbdb4>
   1d2d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d2d4:	ldrb	r3, [r3, #16]
   1d2d8:	and	r3, r3, #1
   1d2dc:	uxtb	r3, r3
   1d2e0:	cmp	r3, #0
   1d2e4:	bne	1d2f8 <__assert_fail@plt+0xbdb4>
   1d2e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d2ec:	ldr	r3, [r3, #32]
   1d2f0:	cmp	r3, #0
   1d2f4:	beq	1d3b0 <__assert_fail@plt+0xbe6c>
   1d2f8:	mov	r3, #0
   1d2fc:	strb	r3, [fp, #-153]	; 0xffffff67
   1d300:	sub	r3, fp, #164	; 0xa4
   1d304:	mov	r2, #8
   1d308:	mov	r1, #0
   1d30c:	mov	r0, r3
   1d310:	bl	11448 <memset@plt>
   1d314:	sub	r3, fp, #164	; 0xa4
   1d318:	sub	r1, fp, #153	; 0x99
   1d31c:	mov	r2, #1
   1d320:	mov	r0, #0
   1d324:	bl	33f40 <__assert_fail@plt+0x229fc>
   1d328:	mov	r3, r0
   1d32c:	cmn	r3, #2
   1d330:	bne	1d390 <__assert_fail@plt+0xbe4c>
   1d334:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1d338:	mov	r2, r3
   1d33c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d340:	str	r3, [fp, #-92]	; 0xffffffa4
   1d344:	mov	r3, #0
   1d348:	strb	r3, [fp, #-93]	; 0xffffffa3
   1d34c:	str	r2, [fp, #-100]	; 0xffffff9c
   1d350:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1d354:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d358:	add	r3, r2, r3
   1d35c:	mov	r2, #1
   1d360:	strb	r2, [r3]
   1d364:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   1d368:	cmp	r3, #0
   1d36c:	beq	1d390 <__assert_fail@plt+0xbe4c>
   1d370:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1d374:	bl	1125c <tolower@plt>
   1d378:	mov	r3, r0
   1d37c:	mov	r2, r3
   1d380:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d384:	add	r3, r3, r2
   1d388:	mov	r2, #1
   1d38c:	strb	r2, [r3]
   1d390:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1d394:	add	r3, r3, #1
   1d398:	uxtb	r3, r3
   1d39c:	strb	r3, [fp, #-153]	; 0xffffff67
   1d3a0:	ldrb	r3, [fp, #-153]	; 0xffffff67
   1d3a4:	cmp	r3, #0
   1d3a8:	bne	1d300 <__assert_fail@plt+0xbdbc>
   1d3ac:	b	1d5a0 <__assert_fail@plt+0xc05c>
   1d3b0:	mov	r3, #0
   1d3b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d3b8:	b	1d534 <__assert_fail@plt+0xbff0>
   1d3bc:	sub	r3, fp, #172	; 0xac
   1d3c0:	mov	r2, #8
   1d3c4:	mov	r1, #0
   1d3c8:	mov	r0, r3
   1d3cc:	bl	11448 <memset@plt>
   1d3d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d3d4:	ldr	r2, [r3]
   1d3d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3dc:	lsl	r3, r3, #2
   1d3e0:	add	r3, r2, r3
   1d3e4:	ldr	r1, [r3]
   1d3e8:	sub	r2, fp, #172	; 0xac
   1d3ec:	sub	r3, fp, #428	; 0x1ac
   1d3f0:	mov	r0, r3
   1d3f4:	bl	111c0 <wcrtomb@plt>
   1d3f8:	mov	r3, r0
   1d3fc:	cmn	r3, #1
   1d400:	beq	1d464 <__assert_fail@plt+0xbf20>
   1d404:	sub	r3, fp, #428	; 0x1ac
   1d408:	ldrb	r3, [r3]
   1d40c:	mov	r2, r3
   1d410:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d414:	str	r3, [fp, #-104]	; 0xffffff98
   1d418:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1d41c:	strb	r3, [fp, #-105]	; 0xffffff97
   1d420:	str	r2, [fp, #-112]	; 0xffffff90
   1d424:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d428:	ldr	r2, [fp, #-104]	; 0xffffff98
   1d42c:	add	r3, r2, r3
   1d430:	mov	r2, #1
   1d434:	strb	r2, [r3]
   1d438:	ldrb	r3, [fp, #-105]	; 0xffffff97
   1d43c:	cmp	r3, #0
   1d440:	beq	1d464 <__assert_fail@plt+0xbf20>
   1d444:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d448:	bl	1125c <tolower@plt>
   1d44c:	mov	r3, r0
   1d450:	mov	r2, r3
   1d454:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d458:	add	r3, r3, r2
   1d45c:	mov	r2, #1
   1d460:	strb	r2, [r3]
   1d464:	ldr	r3, [fp, #-432]	; 0xfffffe50
   1d468:	ldr	r3, [r3, #12]
   1d46c:	and	r3, r3, #4194304	; 0x400000
   1d470:	cmp	r3, #0
   1d474:	beq	1d528 <__assert_fail@plt+0xbfe4>
   1d478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d47c:	ldr	r3, [r3, #92]	; 0x5c
   1d480:	cmp	r3, #1
   1d484:	ble	1d528 <__assert_fail@plt+0xbfe4>
   1d488:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d48c:	ldr	r2, [r3]
   1d490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d494:	lsl	r3, r3, #2
   1d498:	add	r3, r2, r3
   1d49c:	ldr	r3, [r3]
   1d4a0:	mov	r0, r3
   1d4a4:	bl	11274 <towlower@plt>
   1d4a8:	mov	r1, r0
   1d4ac:	sub	r2, fp, #172	; 0xac
   1d4b0:	sub	r3, fp, #428	; 0x1ac
   1d4b4:	mov	r0, r3
   1d4b8:	bl	111c0 <wcrtomb@plt>
   1d4bc:	mov	r3, r0
   1d4c0:	cmn	r3, #1
   1d4c4:	beq	1d528 <__assert_fail@plt+0xbfe4>
   1d4c8:	sub	r3, fp, #428	; 0x1ac
   1d4cc:	ldrb	r3, [r3]
   1d4d0:	mov	r2, r3
   1d4d4:	ldr	r3, [fp, #-440]	; 0xfffffe48
   1d4d8:	str	r3, [fp, #-116]	; 0xffffff8c
   1d4dc:	mov	r3, #0
   1d4e0:	strb	r3, [fp, #-117]	; 0xffffff8b
   1d4e4:	str	r2, [fp, #-124]	; 0xffffff84
   1d4e8:	ldr	r3, [fp, #-124]	; 0xffffff84
   1d4ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1d4f0:	add	r3, r2, r3
   1d4f4:	mov	r2, #1
   1d4f8:	strb	r2, [r3]
   1d4fc:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   1d500:	cmp	r3, #0
   1d504:	beq	1d528 <__assert_fail@plt+0xbfe4>
   1d508:	ldr	r0, [fp, #-124]	; 0xffffff84
   1d50c:	bl	1125c <tolower@plt>
   1d510:	mov	r3, r0
   1d514:	mov	r2, r3
   1d518:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1d51c:	add	r3, r3, r2
   1d520:	mov	r2, #1
   1d524:	strb	r2, [r3]
   1d528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d52c:	add	r3, r3, #1
   1d530:	str	r3, [fp, #-32]	; 0xffffffe0
   1d534:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d538:	ldr	r2, [r3, #20]
   1d53c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d540:	cmp	r2, r3
   1d544:	bgt	1d3bc <__assert_fail@plt+0xbe78>
   1d548:	b	1d5a0 <__assert_fail@plt+0xc05c>
   1d54c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d550:	cmp	r3, #5
   1d554:	beq	1d570 <__assert_fail@plt+0xc02c>
   1d558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d55c:	cmp	r3, #7
   1d560:	beq	1d570 <__assert_fail@plt+0xc02c>
   1d564:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d568:	cmp	r3, #2
   1d56c:	bne	1d5a0 <__assert_fail@plt+0xc05c>
   1d570:	mov	r2, #256	; 0x100
   1d574:	mov	r1, #1
   1d578:	ldr	r0, [fp, #-440]	; 0xfffffe48
   1d57c:	bl	11448 <memset@plt>
   1d580:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d584:	cmp	r3, #2
   1d588:	bne	1d5c4 <__assert_fail@plt+0xc080>
   1d58c:	ldr	r2, [fp, #-432]	; 0xfffffe50
   1d590:	ldrb	r3, [r2, #28]
   1d594:	orr	r3, r3, #1
   1d598:	strb	r3, [r2, #28]
   1d59c:	b	1d5c4 <__assert_fail@plt+0xc080>
   1d5a0:	ldr	r3, [fp, #-8]
   1d5a4:	add	r3, r3, #1
   1d5a8:	str	r3, [fp, #-8]
   1d5ac:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   1d5b0:	ldr	r2, [r3, #8]
   1d5b4:	ldr	r3, [fp, #-8]
   1d5b8:	cmp	r2, r3
   1d5bc:	bgt	1cf0c <__assert_fail@plt+0xb9c8>
   1d5c0:	b	1d5c8 <__assert_fail@plt+0xc084>
   1d5c4:	nop			; (mov r0, r0)
   1d5c8:	sub	sp, fp, #4
   1d5cc:	pop	{fp, pc}
   1d5d0:	push	{fp, lr}
   1d5d4:	add	fp, sp, #4
   1d5d8:	sub	sp, sp, #24
   1d5dc:	str	r0, [fp, #-16]
   1d5e0:	str	r1, [fp, #-20]	; 0xffffffec
   1d5e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d5e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d5ec:	and	r3, r3, #1
   1d5f0:	cmp	r3, #0
   1d5f4:	beq	1d600 <__assert_fail@plt+0xc0bc>
   1d5f8:	ldr	r3, [pc, #428]	; 1d7ac <__assert_fail@plt+0xc268>
   1d5fc:	b	1d604 <__assert_fail@plt+0xc0c0>
   1d600:	ldr	r3, [pc, #424]	; 1d7b0 <__assert_fail@plt+0xc26c>
   1d604:	str	r3, [fp, #-12]
   1d608:	ldr	r3, [fp, #-16]
   1d60c:	mov	r2, #0
   1d610:	str	r2, [r3]
   1d614:	ldr	r3, [fp, #-16]
   1d618:	mov	r2, #0
   1d61c:	str	r2, [r3, #4]
   1d620:	ldr	r3, [fp, #-16]
   1d624:	mov	r2, #0
   1d628:	str	r2, [r3, #8]
   1d62c:	mov	r0, #256	; 0x100
   1d630:	bl	33244 <__assert_fail@plt+0x21d00>
   1d634:	mov	r3, r0
   1d638:	mov	r2, r3
   1d63c:	ldr	r3, [fp, #-16]
   1d640:	str	r2, [r3, #16]
   1d644:	ldr	r3, [fp, #-16]
   1d648:	ldr	r3, [r3, #16]
   1d64c:	cmp	r3, #0
   1d650:	moveq	r3, #1
   1d654:	movne	r3, #0
   1d658:	uxtb	r3, r3
   1d65c:	cmp	r3, #0
   1d660:	beq	1d66c <__assert_fail@plt+0xc128>
   1d664:	mov	r3, #12
   1d668:	b	1d7a0 <__assert_fail@plt+0xc25c>
   1d66c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d670:	and	r3, r3, #2
   1d674:	cmp	r3, #0
   1d678:	beq	1d684 <__assert_fail@plt+0xc140>
   1d67c:	mov	r3, #4194304	; 0x400000
   1d680:	b	1d688 <__assert_fail@plt+0xc144>
   1d684:	mov	r3, #0
   1d688:	ldr	r2, [fp, #-12]
   1d68c:	orr	r3, r2, r3
   1d690:	str	r3, [fp, #-12]
   1d694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d698:	and	r3, r3, #4
   1d69c:	cmp	r3, #0
   1d6a0:	beq	1d6d0 <__assert_fail@plt+0xc18c>
   1d6a4:	ldr	r3, [fp, #-12]
   1d6a8:	bic	r3, r3, #64	; 0x40
   1d6ac:	str	r3, [fp, #-12]
   1d6b0:	ldr	r3, [fp, #-12]
   1d6b4:	orr	r3, r3, #256	; 0x100
   1d6b8:	str	r3, [fp, #-12]
   1d6bc:	ldr	r2, [fp, #-16]
   1d6c0:	ldrb	r3, [r2, #28]
   1d6c4:	orr	r3, r3, #128	; 0x80
   1d6c8:	strb	r3, [r2, #28]
   1d6cc:	b	1d6e0 <__assert_fail@plt+0xc19c>
   1d6d0:	ldr	r2, [fp, #-16]
   1d6d4:	ldrb	r3, [r2, #28]
   1d6d8:	bic	r3, r3, #128	; 0x80
   1d6dc:	strb	r3, [r2, #28]
   1d6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6e4:	and	r3, r3, #8
   1d6e8:	cmp	r3, #0
   1d6ec:	movne	r3, #1
   1d6f0:	moveq	r3, #0
   1d6f4:	uxtb	r3, r3
   1d6f8:	ldr	r1, [fp, #-16]
   1d6fc:	ldrb	r2, [r1, #28]
   1d700:	and	r3, r3, #1
   1d704:	bic	r2, r2, #16
   1d708:	lsl	r3, r3, #4
   1d70c:	orr	r3, r3, r2
   1d710:	mov	r2, r3
   1d714:	strb	r2, [r1, #28]
   1d718:	ldr	r3, [fp, #-16]
   1d71c:	mov	r2, #0
   1d720:	str	r2, [r3, #20]
   1d724:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d728:	bl	113f4 <strlen@plt>
   1d72c:	mov	r2, r0
   1d730:	ldr	r3, [fp, #-12]
   1d734:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d738:	ldr	r0, [fp, #-16]
   1d73c:	bl	1dc50 <__assert_fail@plt+0xc70c>
   1d740:	str	r0, [fp, #-8]
   1d744:	ldr	r3, [fp, #-8]
   1d748:	cmp	r3, #16
   1d74c:	bne	1d758 <__assert_fail@plt+0xc214>
   1d750:	mov	r3, #8
   1d754:	str	r3, [fp, #-8]
   1d758:	ldr	r3, [fp, #-8]
   1d75c:	cmp	r3, #0
   1d760:	moveq	r3, #1
   1d764:	movne	r3, #0
   1d768:	uxtb	r3, r3
   1d76c:	cmp	r3, #0
   1d770:	beq	1d780 <__assert_fail@plt+0xc23c>
   1d774:	ldr	r0, [fp, #-16]
   1d778:	bl	1cd9c <__assert_fail@plt+0xb858>
   1d77c:	b	1d79c <__assert_fail@plt+0xc258>
   1d780:	ldr	r3, [fp, #-16]
   1d784:	ldr	r3, [r3, #16]
   1d788:	mov	r0, r3
   1d78c:	bl	14dec <__assert_fail@plt+0x38a8>
   1d790:	ldr	r3, [fp, #-16]
   1d794:	mov	r2, #0
   1d798:	str	r2, [r3, #16]
   1d79c:	ldr	r3, [fp, #-8]
   1d7a0:	mov	r0, r3
   1d7a4:	sub	sp, fp, #4
   1d7a8:	pop	{fp, pc}
   1d7ac:	strdeq	fp, [r3], -ip
   1d7b0:	smlabteq	r1, r6, r2, r0
   1d7b4:	push	{fp, lr}
   1d7b8:	add	fp, sp, #4
   1d7bc:	sub	sp, sp, #32
   1d7c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1d7c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1d7cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1d7d0:	mov	r3, #17
   1d7d4:	str	r3, [fp, #-12]
   1d7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7dc:	lsr	r3, r3, #31
   1d7e0:	uxtb	r3, r3
   1d7e4:	cmp	r3, #0
   1d7e8:	bne	1d80c <__assert_fail@plt+0xc2c8>
   1d7ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d7f0:	ldr	r3, [fp, #-12]
   1d7f4:	cmp	r2, r3
   1d7f8:	movge	r3, #1
   1d7fc:	movlt	r3, #0
   1d800:	uxtb	r3, r3
   1d804:	cmp	r3, #0
   1d808:	beq	1d810 <__assert_fail@plt+0xc2cc>
   1d80c:	bl	1152c <abort@plt>
   1d810:	ldr	r2, [pc, #176]	; 1d8c8 <__assert_fail@plt+0xc384>
   1d814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d818:	ldr	r3, [r2, r3, lsl #2]
   1d81c:	ldr	r2, [pc, #168]	; 1d8cc <__assert_fail@plt+0xc388>
   1d820:	add	r3, r3, r2
   1d824:	mov	r0, r3
   1d828:	bl	113e8 <gettext@plt>
   1d82c:	str	r0, [fp, #-16]
   1d830:	ldr	r0, [fp, #-16]
   1d834:	bl	113f4 <strlen@plt>
   1d838:	mov	r3, r0
   1d83c:	add	r3, r3, #1
   1d840:	str	r3, [fp, #-20]	; 0xffffffec
   1d844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d848:	cmp	r3, #0
   1d84c:	movne	r3, #1
   1d850:	moveq	r3, #0
   1d854:	uxtb	r3, r3
   1d858:	cmp	r3, #0
   1d85c:	beq	1d8b8 <__assert_fail@plt+0xc374>
   1d860:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d864:	str	r3, [fp, #-8]
   1d868:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d86c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d870:	cmp	r2, r3
   1d874:	movhi	r3, #1
   1d878:	movls	r3, #0
   1d87c:	uxtb	r3, r3
   1d880:	cmp	r3, #0
   1d884:	beq	1d8a8 <__assert_fail@plt+0xc364>
   1d888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d88c:	sub	r3, r3, #1
   1d890:	str	r3, [fp, #-8]
   1d894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d898:	ldr	r3, [fp, #-8]
   1d89c:	add	r3, r2, r3
   1d8a0:	mov	r2, #0
   1d8a4:	strb	r2, [r3]
   1d8a8:	ldr	r2, [fp, #-8]
   1d8ac:	ldr	r1, [fp, #-16]
   1d8b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8b4:	bl	11250 <memcpy@plt>
   1d8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8bc:	mov	r0, r3
   1d8c0:	sub	sp, fp, #4
   1d8c4:	pop	{fp, pc}
   1d8c8:	strdeq	r5, [r3], -ip
   1d8cc:	andeq	r5, r3, ip, ror ip
   1d8d0:	push	{fp, lr}
   1d8d4:	add	fp, sp, #4
   1d8d8:	sub	sp, sp, #24
   1d8dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d8e4:	ldr	r3, [r3]
   1d8e8:	cmp	r3, #0
   1d8ec:	beq	1d938 <__assert_fail@plt+0xc3f4>
   1d8f0:	mov	r3, #0
   1d8f4:	str	r3, [fp, #-8]
   1d8f8:	b	1d924 <__assert_fail@plt+0xc3e0>
   1d8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d900:	ldr	r2, [r3]
   1d904:	ldr	r3, [fp, #-8]
   1d908:	lsl	r3, r3, #3
   1d90c:	add	r3, r2, r3
   1d910:	mov	r0, r3
   1d914:	bl	25b94 <__assert_fail@plt+0x14650>
   1d918:	ldr	r3, [fp, #-8]
   1d91c:	add	r3, r3, #1
   1d920:	str	r3, [fp, #-8]
   1d924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d928:	ldr	r2, [r3, #8]
   1d92c:	ldr	r3, [fp, #-8]
   1d930:	cmp	r2, r3
   1d934:	bhi	1d8fc <__assert_fail@plt+0xc3b8>
   1d938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d93c:	ldr	r3, [r3, #12]
   1d940:	mov	r0, r3
   1d944:	bl	14dec <__assert_fail@plt+0x38a8>
   1d948:	mov	r3, #0
   1d94c:	str	r3, [fp, #-8]
   1d950:	b	1da14 <__assert_fail@plt+0xc4d0>
   1d954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d958:	ldr	r3, [r3, #24]
   1d95c:	cmp	r3, #0
   1d960:	beq	1d990 <__assert_fail@plt+0xc44c>
   1d964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d968:	ldr	r1, [r3, #24]
   1d96c:	ldr	r2, [fp, #-8]
   1d970:	mov	r3, r2
   1d974:	lsl	r3, r3, #1
   1d978:	add	r3, r3, r2
   1d97c:	lsl	r3, r3, #2
   1d980:	add	r3, r1, r3
   1d984:	ldr	r3, [r3, #8]
   1d988:	mov	r0, r3
   1d98c:	bl	14dec <__assert_fail@plt+0x38a8>
   1d990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d994:	ldr	r3, [r3, #28]
   1d998:	cmp	r3, #0
   1d99c:	beq	1d9cc <__assert_fail@plt+0xc488>
   1d9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9a4:	ldr	r1, [r3, #28]
   1d9a8:	ldr	r2, [fp, #-8]
   1d9ac:	mov	r3, r2
   1d9b0:	lsl	r3, r3, #1
   1d9b4:	add	r3, r3, r2
   1d9b8:	lsl	r3, r3, #2
   1d9bc:	add	r3, r1, r3
   1d9c0:	ldr	r3, [r3, #8]
   1d9c4:	mov	r0, r3
   1d9c8:	bl	14dec <__assert_fail@plt+0x38a8>
   1d9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9d0:	ldr	r3, [r3, #20]
   1d9d4:	cmp	r3, #0
   1d9d8:	beq	1da08 <__assert_fail@plt+0xc4c4>
   1d9dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d9e0:	ldr	r1, [r3, #20]
   1d9e4:	ldr	r2, [fp, #-8]
   1d9e8:	mov	r3, r2
   1d9ec:	lsl	r3, r3, #1
   1d9f0:	add	r3, r3, r2
   1d9f4:	lsl	r3, r3, #2
   1d9f8:	add	r3, r1, r3
   1d9fc:	ldr	r3, [r3, #8]
   1da00:	mov	r0, r3
   1da04:	bl	14dec <__assert_fail@plt+0x38a8>
   1da08:	ldr	r3, [fp, #-8]
   1da0c:	add	r3, r3, #1
   1da10:	str	r3, [fp, #-8]
   1da14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da18:	ldr	r2, [r3, #8]
   1da1c:	ldr	r3, [fp, #-8]
   1da20:	cmp	r2, r3
   1da24:	bhi	1d954 <__assert_fail@plt+0xc410>
   1da28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da2c:	ldr	r3, [r3, #20]
   1da30:	mov	r0, r3
   1da34:	bl	14dec <__assert_fail@plt+0x38a8>
   1da38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da3c:	ldr	r3, [r3, #24]
   1da40:	mov	r0, r3
   1da44:	bl	14dec <__assert_fail@plt+0x38a8>
   1da48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da4c:	ldr	r3, [r3, #28]
   1da50:	mov	r0, r3
   1da54:	bl	14dec <__assert_fail@plt+0x38a8>
   1da58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da5c:	ldr	r3, [r3]
   1da60:	mov	r0, r3
   1da64:	bl	14dec <__assert_fail@plt+0x38a8>
   1da68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da6c:	ldr	r3, [r3, #32]
   1da70:	cmp	r3, #0
   1da74:	beq	1db28 <__assert_fail@plt+0xc5e4>
   1da78:	mov	r3, #0
   1da7c:	str	r3, [fp, #-8]
   1da80:	b	1db14 <__assert_fail@plt+0xc5d0>
   1da84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da88:	ldr	r1, [r3, #32]
   1da8c:	ldr	r2, [fp, #-8]
   1da90:	mov	r3, r2
   1da94:	lsl	r3, r3, #1
   1da98:	add	r3, r3, r2
   1da9c:	lsl	r3, r3, #2
   1daa0:	add	r3, r1, r3
   1daa4:	str	r3, [fp, #-16]
   1daa8:	mov	r3, #0
   1daac:	str	r3, [fp, #-12]
   1dab0:	b	1dae4 <__assert_fail@plt+0xc5a0>
   1dab4:	ldr	r3, [fp, #-16]
   1dab8:	ldr	r2, [r3, #8]
   1dabc:	ldr	r3, [fp, #-12]
   1dac0:	lsl	r3, r3, #2
   1dac4:	add	r3, r2, r3
   1dac8:	ldr	r3, [r3]
   1dacc:	str	r3, [fp, #-20]	; 0xffffffec
   1dad0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dad4:	bl	1c5e4 <__assert_fail@plt+0xb0a0>
   1dad8:	ldr	r3, [fp, #-12]
   1dadc:	add	r3, r3, #1
   1dae0:	str	r3, [fp, #-12]
   1dae4:	ldr	r3, [fp, #-16]
   1dae8:	ldr	r2, [r3]
   1daec:	ldr	r3, [fp, #-12]
   1daf0:	cmp	r2, r3
   1daf4:	bgt	1dab4 <__assert_fail@plt+0xc570>
   1daf8:	ldr	r3, [fp, #-16]
   1dafc:	ldr	r3, [r3, #8]
   1db00:	mov	r0, r3
   1db04:	bl	14dec <__assert_fail@plt+0x38a8>
   1db08:	ldr	r3, [fp, #-8]
   1db0c:	add	r3, r3, #1
   1db10:	str	r3, [fp, #-8]
   1db14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db18:	ldr	r2, [r3, #68]	; 0x44
   1db1c:	ldr	r3, [fp, #-8]
   1db20:	cmp	r2, r3
   1db24:	bcs	1da84 <__assert_fail@plt+0xc540>
   1db28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db2c:	ldr	r3, [r3, #32]
   1db30:	mov	r0, r3
   1db34:	bl	14dec <__assert_fail@plt+0x38a8>
   1db38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db3c:	ldr	r3, [r3, #60]	; 0x3c
   1db40:	ldr	r2, [pc, #56]	; 1db80 <__assert_fail@plt+0xc63c>
   1db44:	cmp	r3, r2
   1db48:	beq	1db5c <__assert_fail@plt+0xc618>
   1db4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db50:	ldr	r3, [r3, #60]	; 0x3c
   1db54:	mov	r0, r3
   1db58:	bl	14dec <__assert_fail@plt+0x38a8>
   1db5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db60:	ldr	r3, [r3, #132]	; 0x84
   1db64:	mov	r0, r3
   1db68:	bl	14dec <__assert_fail@plt+0x38a8>
   1db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db70:	bl	14dec <__assert_fail@plt+0x38a8>
   1db74:	nop			; (mov r0, r0)
   1db78:	sub	sp, fp, #4
   1db7c:	pop	{fp, pc}
   1db80:	andeq	r5, r3, r0, asr #28
   1db84:	push	{fp, lr}
   1db88:	add	fp, sp, #4
   1db8c:	sub	sp, sp, #16
   1db90:	str	r0, [fp, #-16]
   1db94:	ldr	r3, [fp, #-16]
   1db98:	ldr	r3, [r3]
   1db9c:	str	r3, [fp, #-8]
   1dba0:	ldr	r3, [fp, #-8]
   1dba4:	cmp	r3, #0
   1dba8:	movne	r3, #1
   1dbac:	moveq	r3, #0
   1dbb0:	uxtb	r3, r3
   1dbb4:	cmp	r3, #0
   1dbb8:	beq	1dbec <__assert_fail@plt+0xc6a8>
   1dbbc:	ldr	r3, [pc, #132]	; 1dc48 <__assert_fail@plt+0xc704>
   1dbc0:	cmp	r3, #0
   1dbc4:	bne	1dbd4 <__assert_fail@plt+0xc690>
   1dbc8:	ldr	r3, [pc, #124]	; 1dc4c <__assert_fail@plt+0xc708>
   1dbcc:	cmp	r3, #0
   1dbd0:	beq	1dbe4 <__assert_fail@plt+0xc6a0>
   1dbd4:	ldr	r3, [fp, #-8]
   1dbd8:	add	r3, r3, #136	; 0x88
   1dbdc:	mov	r0, r3
   1dbe0:	bl	111fc <pthread_mutex_destroy@plt>
   1dbe4:	ldr	r0, [fp, #-8]
   1dbe8:	bl	1d8d0 <__assert_fail@plt+0xc38c>
   1dbec:	ldr	r3, [fp, #-16]
   1dbf0:	mov	r2, #0
   1dbf4:	str	r2, [r3]
   1dbf8:	ldr	r3, [fp, #-16]
   1dbfc:	mov	r2, #0
   1dc00:	str	r2, [r3, #4]
   1dc04:	ldr	r3, [fp, #-16]
   1dc08:	ldr	r3, [r3, #16]
   1dc0c:	mov	r0, r3
   1dc10:	bl	14dec <__assert_fail@plt+0x38a8>
   1dc14:	ldr	r3, [fp, #-16]
   1dc18:	mov	r2, #0
   1dc1c:	str	r2, [r3, #16]
   1dc20:	ldr	r3, [fp, #-16]
   1dc24:	ldr	r3, [r3, #20]
   1dc28:	mov	r0, r3
   1dc2c:	bl	14dec <__assert_fail@plt+0x38a8>
   1dc30:	ldr	r3, [fp, #-16]
   1dc34:	mov	r2, #0
   1dc38:	str	r2, [r3, #20]
   1dc3c:	nop			; (mov r0, r0)
   1dc40:	sub	sp, fp, #4
   1dc44:	pop	{fp, pc}
	...
   1dc50:	push	{fp, lr}
   1dc54:	add	fp, sp, #4
   1dc58:	sub	sp, sp, #120	; 0x78
   1dc5c:	str	r0, [fp, #-104]	; 0xffffff98
   1dc60:	str	r1, [fp, #-108]	; 0xffffff94
   1dc64:	str	r2, [fp, #-112]	; 0xffffff90
   1dc68:	str	r3, [fp, #-116]	; 0xffffff8c
   1dc6c:	mov	r3, #0
   1dc70:	str	r3, [fp, #-12]
   1dc74:	ldr	r2, [fp, #-104]	; 0xffffff98
   1dc78:	ldrb	r3, [r2, #28]
   1dc7c:	bic	r3, r3, #8
   1dc80:	strb	r3, [r2, #28]
   1dc84:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dc88:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1dc8c:	str	r2, [r3, #12]
   1dc90:	ldr	r2, [fp, #-104]	; 0xffffff98
   1dc94:	ldrb	r3, [r2, #28]
   1dc98:	bic	r3, r3, #64	; 0x40
   1dc9c:	strb	r3, [r2, #28]
   1dca0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dca4:	ldrb	r3, [r3, #28]
   1dca8:	lsr	r3, r3, #6
   1dcac:	and	r3, r3, #1
   1dcb0:	uxtb	r3, r3
   1dcb4:	ldr	r1, [fp, #-104]	; 0xffffff98
   1dcb8:	ldrb	r2, [r1, #28]
   1dcbc:	and	r3, r3, #1
   1dcc0:	bic	r2, r2, #32
   1dcc4:	lsl	r3, r3, #5
   1dcc8:	orr	r3, r3, r2
   1dccc:	mov	r2, r3
   1dcd0:	strb	r2, [r1, #28]
   1dcd4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dcd8:	mov	r2, #0
   1dcdc:	str	r2, [r3, #8]
   1dce0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dce4:	mov	r2, #0
   1dce8:	str	r2, [r3, #24]
   1dcec:	ldr	r2, [fp, #-104]	; 0xffffff98
   1dcf0:	ldrb	r3, [r2, #28]
   1dcf4:	bic	r3, r3, #1
   1dcf8:	strb	r3, [r2, #28]
   1dcfc:	ldr	r2, [fp, #-104]	; 0xffffff98
   1dd00:	ldrb	r3, [r2, #28]
   1dd04:	bic	r3, r3, #6
   1dd08:	strb	r3, [r2, #28]
   1dd0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd10:	ldr	r3, [r3]
   1dd14:	str	r3, [fp, #-8]
   1dd18:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd1c:	ldr	r3, [r3, #4]
   1dd20:	cmp	r3, #159	; 0x9f
   1dd24:	movls	r3, #1
   1dd28:	movhi	r3, #0
   1dd2c:	uxtb	r3, r3
   1dd30:	cmp	r3, #0
   1dd34:	beq	1dd7c <__assert_fail@plt+0xc838>
   1dd38:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd3c:	ldr	r3, [r3]
   1dd40:	mov	r1, #160	; 0xa0
   1dd44:	mov	r0, r3
   1dd48:	bl	332ec <__assert_fail@plt+0x21da8>
   1dd4c:	str	r0, [fp, #-8]
   1dd50:	ldr	r3, [fp, #-8]
   1dd54:	cmp	r3, #0
   1dd58:	bne	1dd64 <__assert_fail@plt+0xc820>
   1dd5c:	mov	r3, #12
   1dd60:	b	1e094 <__assert_fail@plt+0xcb50>
   1dd64:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd68:	mov	r2, #160	; 0xa0
   1dd6c:	str	r2, [r3, #4]
   1dd70:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd74:	ldr	r2, [fp, #-8]
   1dd78:	str	r2, [r3]
   1dd7c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dd80:	mov	r2, #160	; 0xa0
   1dd84:	str	r2, [r3, #8]
   1dd88:	ldr	r1, [fp, #-112]	; 0xffffff90
   1dd8c:	ldr	r0, [fp, #-8]
   1dd90:	bl	1e0a8 <__assert_fail@plt+0xcb64>
   1dd94:	mov	r3, r0
   1dd98:	str	r3, [fp, #-12]
   1dd9c:	ldr	r3, [fp, #-12]
   1dda0:	cmp	r3, #0
   1dda4:	moveq	r3, #1
   1dda8:	movne	r3, #0
   1ddac:	uxtb	r3, r3
   1ddb0:	cmp	r3, #0
   1ddb4:	beq	1de30 <__assert_fail@plt+0xc8ec>
   1ddb8:	ldr	r3, [pc, #736]	; 1e0a0 <__assert_fail@plt+0xcb5c>
   1ddbc:	cmp	r3, #0
   1ddc0:	bne	1ddd0 <__assert_fail@plt+0xc88c>
   1ddc4:	ldr	r3, [pc, #728]	; 1e0a4 <__assert_fail@plt+0xcb60>
   1ddc8:	cmp	r3, #0
   1ddcc:	beq	1ddd8 <__assert_fail@plt+0xc894>
   1ddd0:	mov	r3, #1
   1ddd4:	b	1dddc <__assert_fail@plt+0xc898>
   1ddd8:	mov	r3, #0
   1dddc:	cmp	r3, #0
   1dde0:	beq	1de1c <__assert_fail@plt+0xc8d8>
   1dde4:	ldr	r3, [fp, #-8]
   1dde8:	add	r3, r3, #136	; 0x88
   1ddec:	mov	r1, #0
   1ddf0:	mov	r0, r3
   1ddf4:	bl	11268 <pthread_mutex_init@plt>
   1ddf8:	mov	r3, r0
   1ddfc:	cmp	r3, #0
   1de00:	movne	r3, #1
   1de04:	moveq	r3, #0
   1de08:	uxtb	r3, r3
   1de0c:	cmp	r3, #0
   1de10:	beq	1de1c <__assert_fail@plt+0xc8d8>
   1de14:	mov	r3, #1
   1de18:	b	1de20 <__assert_fail@plt+0xc8dc>
   1de1c:	mov	r3, #0
   1de20:	cmp	r3, #0
   1de24:	beq	1de30 <__assert_fail@plt+0xc8ec>
   1de28:	mov	r3, #12
   1de2c:	str	r3, [fp, #-12]
   1de30:	ldr	r3, [fp, #-12]
   1de34:	cmp	r3, #0
   1de38:	movne	r3, #1
   1de3c:	moveq	r3, #0
   1de40:	uxtb	r3, r3
   1de44:	cmp	r3, #0
   1de48:	beq	1de74 <__assert_fail@plt+0xc930>
   1de4c:	ldr	r0, [fp, #-8]
   1de50:	bl	1d8d0 <__assert_fail@plt+0xc38c>
   1de54:	ldr	r3, [fp, #-104]	; 0xffffff98
   1de58:	mov	r2, #0
   1de5c:	str	r2, [r3]
   1de60:	ldr	r3, [fp, #-104]	; 0xffffff98
   1de64:	mov	r2, #0
   1de68:	str	r2, [r3, #4]
   1de6c:	ldr	r3, [fp, #-12]
   1de70:	b	1e094 <__assert_fail@plt+0xcb50>
   1de74:	ldr	r1, [fp, #-112]	; 0xffffff90
   1de78:	ldr	r3, [fp, #-104]	; 0xffffff98
   1de7c:	ldr	ip, [r3, #20]
   1de80:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1de84:	and	r3, r3, #4194304	; 0x400000
   1de88:	cmp	r3, #0
   1de8c:	movne	r3, #1
   1de90:	moveq	r3, #0
   1de94:	uxtb	r3, r3
   1de98:	sub	r0, fp, #96	; 0x60
   1de9c:	ldr	r2, [fp, #-8]
   1dea0:	str	r2, [sp, #4]
   1dea4:	str	r3, [sp]
   1dea8:	mov	r3, ip
   1deac:	mov	r2, r1
   1deb0:	ldr	r1, [fp, #-108]	; 0xffffff94
   1deb4:	bl	17e20 <__assert_fail@plt+0x68dc>
   1deb8:	mov	r3, r0
   1debc:	str	r3, [fp, #-12]
   1dec0:	ldr	r3, [fp, #-12]
   1dec4:	cmp	r3, #0
   1dec8:	movne	r3, #1
   1decc:	moveq	r3, #0
   1ded0:	uxtb	r3, r3
   1ded4:	cmp	r3, #0
   1ded8:	beq	1df50 <__assert_fail@plt+0xca0c>
   1dedc:	b	1deec <__assert_fail@plt+0xc9a8>
   1dee0:	nop			; (mov r0, r0)
   1dee4:	b	1deec <__assert_fail@plt+0xc9a8>
   1dee8:	nop			; (mov r0, r0)
   1deec:	ldr	r0, [fp, #-104]	; 0xffffff98
   1def0:	bl	1e6c4 <__assert_fail@plt+0xd180>
   1def4:	sub	r3, fp, #96	; 0x60
   1def8:	mov	r0, r3
   1defc:	bl	1a4dc <__assert_fail@plt+0x8f98>
   1df00:	ldr	r3, [pc, #408]	; 1e0a0 <__assert_fail@plt+0xcb5c>
   1df04:	cmp	r3, #0
   1df08:	bne	1df18 <__assert_fail@plt+0xc9d4>
   1df0c:	ldr	r3, [pc, #400]	; 1e0a4 <__assert_fail@plt+0xcb60>
   1df10:	cmp	r3, #0
   1df14:	beq	1df28 <__assert_fail@plt+0xc9e4>
   1df18:	ldr	r3, [fp, #-8]
   1df1c:	add	r3, r3, #136	; 0x88
   1df20:	mov	r0, r3
   1df24:	bl	111fc <pthread_mutex_destroy@plt>
   1df28:	ldr	r0, [fp, #-8]
   1df2c:	bl	1d8d0 <__assert_fail@plt+0xc38c>
   1df30:	ldr	r3, [fp, #-104]	; 0xffffff98
   1df34:	mov	r2, #0
   1df38:	str	r2, [r3]
   1df3c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1df40:	mov	r2, #0
   1df44:	str	r2, [r3, #4]
   1df48:	ldr	r3, [fp, #-12]
   1df4c:	b	1e094 <__assert_fail@plt+0xcb50>
   1df50:	ldr	r3, [fp, #-104]	; 0xffffff98
   1df54:	mov	r2, #0
   1df58:	str	r2, [r3, #24]
   1df5c:	sub	r3, fp, #12
   1df60:	sub	r0, fp, #96	; 0x60
   1df64:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1df68:	ldr	r1, [fp, #-104]	; 0xffffff98
   1df6c:	bl	21dac <__assert_fail@plt+0x10868>
   1df70:	mov	r2, r0
   1df74:	ldr	r3, [fp, #-8]
   1df78:	str	r2, [r3, #52]	; 0x34
   1df7c:	ldr	r3, [fp, #-8]
   1df80:	ldr	r3, [r3, #52]	; 0x34
   1df84:	cmp	r3, #0
   1df88:	moveq	r3, #1
   1df8c:	movne	r3, #0
   1df90:	uxtb	r3, r3
   1df94:	cmp	r3, #0
   1df98:	bne	1dee0 <__assert_fail@plt+0xc99c>
   1df9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1dfa0:	bl	1ee68 <__assert_fail@plt+0xd924>
   1dfa4:	mov	r3, r0
   1dfa8:	str	r3, [fp, #-12]
   1dfac:	ldr	r3, [fp, #-12]
   1dfb0:	cmp	r3, #0
   1dfb4:	movne	r3, #1
   1dfb8:	moveq	r3, #0
   1dfbc:	uxtb	r3, r3
   1dfc0:	cmp	r3, #0
   1dfc4:	bne	1dee8 <__assert_fail@plt+0xc9a4>
   1dfc8:	ldr	r3, [fp, #-8]
   1dfcc:	ldrb	r3, [r3, #88]	; 0x58
   1dfd0:	and	r3, r3, #4
   1dfd4:	uxtb	r3, r3
   1dfd8:	cmp	r3, #0
   1dfdc:	beq	1e008 <__assert_fail@plt+0xcac4>
   1dfe0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1dfe4:	and	r3, r3, #4194304	; 0x400000
   1dfe8:	cmp	r3, #0
   1dfec:	bne	1e008 <__assert_fail@plt+0xcac4>
   1dff0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1dff4:	ldr	r3, [r3, #20]
   1dff8:	cmp	r3, #0
   1dffc:	bne	1e008 <__assert_fail@plt+0xcac4>
   1e000:	ldr	r0, [fp, #-8]
   1e004:	bl	1eb48 <__assert_fail@plt+0xd604>
   1e008:	ldr	r0, [fp, #-8]
   1e00c:	bl	1e764 <__assert_fail@plt+0xd220>
   1e010:	mov	r3, r0
   1e014:	str	r3, [fp, #-12]
   1e018:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e01c:	bl	1e6c4 <__assert_fail@plt+0xd180>
   1e020:	sub	r3, fp, #96	; 0x60
   1e024:	mov	r0, r3
   1e028:	bl	1a4dc <__assert_fail@plt+0x8f98>
   1e02c:	ldr	r3, [fp, #-12]
   1e030:	cmp	r3, #0
   1e034:	movne	r3, #1
   1e038:	moveq	r3, #0
   1e03c:	uxtb	r3, r3
   1e040:	cmp	r3, #0
   1e044:	beq	1e090 <__assert_fail@plt+0xcb4c>
   1e048:	ldr	r3, [pc, #80]	; 1e0a0 <__assert_fail@plt+0xcb5c>
   1e04c:	cmp	r3, #0
   1e050:	bne	1e060 <__assert_fail@plt+0xcb1c>
   1e054:	ldr	r3, [pc, #72]	; 1e0a4 <__assert_fail@plt+0xcb60>
   1e058:	cmp	r3, #0
   1e05c:	beq	1e070 <__assert_fail@plt+0xcb2c>
   1e060:	ldr	r3, [fp, #-8]
   1e064:	add	r3, r3, #136	; 0x88
   1e068:	mov	r0, r3
   1e06c:	bl	111fc <pthread_mutex_destroy@plt>
   1e070:	ldr	r0, [fp, #-8]
   1e074:	bl	1d8d0 <__assert_fail@plt+0xc38c>
   1e078:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e07c:	mov	r2, #0
   1e080:	str	r2, [r3]
   1e084:	ldr	r3, [fp, #-104]	; 0xffffff98
   1e088:	mov	r2, #0
   1e08c:	str	r2, [r3, #4]
   1e090:	ldr	r3, [fp, #-12]
   1e094:	mov	r0, r3
   1e098:	sub	sp, fp, #4
   1e09c:	pop	{fp, pc}
	...
   1e0a8:	push	{fp, lr}
   1e0ac:	add	fp, sp, #4
   1e0b0:	sub	sp, sp, #40	; 0x28
   1e0b4:	str	r0, [fp, #-40]	; 0xffffffd8
   1e0b8:	str	r1, [fp, #-44]	; 0xffffffd4
   1e0bc:	mov	r3, #4
   1e0c0:	str	r3, [fp, #-24]	; 0xffffffe8
   1e0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c8:	cmp	r3, #12
   1e0cc:	bls	1e0dc <__assert_fail@plt+0xcb98>
   1e0d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0d4:	cmp	r3, #8
   1e0d8:	bls	1e140 <__assert_fail@plt+0xcbfc>
   1e0dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0e0:	cmp	r3, #12
   1e0e4:	bls	1e140 <__assert_fail@plt+0xcbfc>
   1e0e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0ec:	cmp	r3, #12
   1e0f0:	bls	1e140 <__assert_fail@plt+0xcbfc>
   1e0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0f8:	cmp	r3, #12
   1e0fc:	bls	1e10c <__assert_fail@plt+0xcbc8>
   1e100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e104:	cmp	r3, #8
   1e108:	bls	1e134 <__assert_fail@plt+0xcbf0>
   1e10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e110:	cmp	r3, #12
   1e114:	bls	1e12c <__assert_fail@plt+0xcbe8>
   1e118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e11c:	cmp	r3, #8
   1e120:	movcs	r3, r3
   1e124:	movcc	r3, #8
   1e128:	b	1e13c <__assert_fail@plt+0xcbf8>
   1e12c:	mov	r3, #12
   1e130:	b	1e13c <__assert_fail@plt+0xcbf8>
   1e134:	mov	r3, #8
   1e138:	b	1e144 <__assert_fail@plt+0xcc00>
   1e13c:	b	1e144 <__assert_fail@plt+0xcc00>
   1e140:	mov	r3, #12
   1e144:	str	r3, [fp, #-28]	; 0xffffffe4
   1e148:	mov	r2, #160	; 0xa0
   1e14c:	mov	r1, #0
   1e150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e154:	bl	11448 <memset@plt>
   1e158:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e15c:	mov	r2, #31
   1e160:	str	r2, [r3, #64]	; 0x40
   1e164:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e168:	mvn	r0, #0
   1e16c:	bl	34794 <__assert_fail@plt+0x23250>
   1e170:	mov	r3, r0
   1e174:	cmp	r3, #0
   1e178:	blt	1e194 <__assert_fail@plt+0xcc50>
   1e17c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e180:	mvn	r0, #0
   1e184:	bl	34794 <__assert_fail@plt+0x23250>
   1e188:	mov	r3, r0
   1e18c:	lsr	r3, r3, #1
   1e190:	b	1e198 <__assert_fail@plt+0xcc54>
   1e194:	mvn	r3, #-1073741824	; 0xc0000000
   1e198:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e19c:	cmp	r3, r2
   1e1a0:	movls	r3, #1
   1e1a4:	movhi	r3, #0
   1e1a8:	uxtb	r3, r3
   1e1ac:	cmp	r3, #0
   1e1b0:	beq	1e1bc <__assert_fail@plt+0xcc78>
   1e1b4:	mov	r3, #12
   1e1b8:	b	1e4e4 <__assert_fail@plt+0xcfa0>
   1e1bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e1c0:	add	r2, r3, #1
   1e1c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1c8:	str	r2, [r3, #4]
   1e1cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1d0:	ldr	r3, [r3, #4]
   1e1d4:	lsl	r3, r3, #3
   1e1d8:	mov	r0, r3
   1e1dc:	bl	33244 <__assert_fail@plt+0x21d00>
   1e1e0:	mov	r3, r0
   1e1e4:	mov	r2, r3
   1e1e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e1ec:	str	r2, [r3]
   1e1f0:	mov	r3, #1
   1e1f4:	str	r3, [fp, #-8]
   1e1f8:	ldr	r2, [fp, #-8]
   1e1fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e200:	cmp	r2, r3
   1e204:	bhi	1e218 <__assert_fail@plt+0xccd4>
   1e208:	ldr	r3, [fp, #-8]
   1e20c:	lsl	r3, r3, #1
   1e210:	str	r3, [fp, #-8]
   1e214:	b	1e1f8 <__assert_fail@plt+0xccb4>
   1e218:	nop			; (mov r0, r0)
   1e21c:	ldr	r1, [fp, #-8]
   1e220:	mov	r0, #12
   1e224:	bl	33180 <__assert_fail@plt+0x21c3c>
   1e228:	mov	r3, r0
   1e22c:	mov	r2, r3
   1e230:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e234:	str	r2, [r3, #32]
   1e238:	ldr	r3, [fp, #-8]
   1e23c:	sub	r2, r3, #1
   1e240:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e244:	str	r2, [r3, #68]	; 0x44
   1e248:	bl	11334 <__ctype_get_mb_cur_max@plt>
   1e24c:	mov	r3, r0
   1e250:	mov	r2, r3
   1e254:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e258:	str	r2, [r3, #92]	; 0x5c
   1e25c:	mov	r0, #14
   1e260:	bl	114d8 <nl_langinfo@plt>
   1e264:	str	r0, [fp, #-32]	; 0xffffffe0
   1e268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e26c:	ldrb	r3, [r3]
   1e270:	cmp	r3, #85	; 0x55
   1e274:	beq	1e288 <__assert_fail@plt+0xcd44>
   1e278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e27c:	ldrb	r3, [r3]
   1e280:	cmp	r3, #117	; 0x75
   1e284:	bne	1e328 <__assert_fail@plt+0xcde4>
   1e288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e28c:	add	r3, r3, #1
   1e290:	ldrb	r3, [r3]
   1e294:	cmp	r3, #84	; 0x54
   1e298:	beq	1e2b0 <__assert_fail@plt+0xcd6c>
   1e29c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2a0:	add	r3, r3, #1
   1e2a4:	ldrb	r3, [r3]
   1e2a8:	cmp	r3, #116	; 0x74
   1e2ac:	bne	1e328 <__assert_fail@plt+0xcde4>
   1e2b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2b4:	add	r3, r3, #2
   1e2b8:	ldrb	r3, [r3]
   1e2bc:	cmp	r3, #70	; 0x46
   1e2c0:	beq	1e2d8 <__assert_fail@plt+0xcd94>
   1e2c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2c8:	add	r3, r3, #2
   1e2cc:	ldrb	r3, [r3]
   1e2d0:	cmp	r3, #102	; 0x66
   1e2d4:	bne	1e328 <__assert_fail@plt+0xcde4>
   1e2d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2dc:	add	r3, r3, #3
   1e2e0:	ldrb	r3, [r3]
   1e2e4:	cmp	r3, #45	; 0x2d
   1e2e8:	bne	1e2f4 <__assert_fail@plt+0xcdb0>
   1e2ec:	mov	r3, #4
   1e2f0:	b	1e2f8 <__assert_fail@plt+0xcdb4>
   1e2f4:	mov	r3, #3
   1e2f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e2fc:	add	r3, r2, r3
   1e300:	ldr	r1, [pc, #488]	; 1e4f0 <__assert_fail@plt+0xcfac>
   1e304:	mov	r0, r3
   1e308:	bl	111d8 <strcmp@plt>
   1e30c:	mov	r3, r0
   1e310:	cmp	r3, #0
   1e314:	bne	1e328 <__assert_fail@plt+0xcde4>
   1e318:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e31c:	ldrb	r3, [r2, #88]	; 0x58
   1e320:	orr	r3, r3, #4
   1e324:	strb	r3, [r2, #88]	; 0x58
   1e328:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e32c:	ldrb	r3, [r2, #88]	; 0x58
   1e330:	bic	r3, r3, #8
   1e334:	strb	r3, [r2, #88]	; 0x58
   1e338:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e33c:	ldr	r3, [r3, #92]	; 0x5c
   1e340:	cmp	r3, #1
   1e344:	ble	1e498 <__assert_fail@plt+0xcf54>
   1e348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e34c:	ldrb	r3, [r3, #88]	; 0x58
   1e350:	and	r3, r3, #4
   1e354:	uxtb	r3, r3
   1e358:	cmp	r3, #0
   1e35c:	beq	1e370 <__assert_fail@plt+0xce2c>
   1e360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e364:	ldr	r2, [pc, #392]	; 1e4f4 <__assert_fail@plt+0xcfb0>
   1e368:	str	r2, [r3, #60]	; 0x3c
   1e36c:	b	1e498 <__assert_fail@plt+0xcf54>
   1e370:	mov	r1, #1
   1e374:	mov	r0, #32
   1e378:	bl	33180 <__assert_fail@plt+0x21c3c>
   1e37c:	mov	r3, r0
   1e380:	mov	r2, r3
   1e384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e388:	str	r2, [r3, #60]	; 0x3c
   1e38c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e390:	ldr	r3, [r3, #60]	; 0x3c
   1e394:	cmp	r3, #0
   1e398:	moveq	r3, #1
   1e39c:	movne	r3, #0
   1e3a0:	uxtb	r3, r3
   1e3a4:	cmp	r3, #0
   1e3a8:	beq	1e3b4 <__assert_fail@plt+0xce70>
   1e3ac:	mov	r3, #12
   1e3b0:	b	1e4e4 <__assert_fail@plt+0xcfa0>
   1e3b4:	mov	r3, #0
   1e3b8:	str	r3, [fp, #-12]
   1e3bc:	mov	r3, #0
   1e3c0:	str	r3, [fp, #-20]	; 0xffffffec
   1e3c4:	b	1e48c <__assert_fail@plt+0xcf48>
   1e3c8:	mov	r3, #0
   1e3cc:	str	r3, [fp, #-16]
   1e3d0:	b	1e474 <__assert_fail@plt+0xcf30>
   1e3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e3d8:	bl	11454 <btowc@plt>
   1e3dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e3e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e3e4:	cmn	r3, #1
   1e3e8:	beq	1e42c <__assert_fail@plt+0xcee8>
   1e3ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e3f0:	ldr	r2, [r3, #60]	; 0x3c
   1e3f4:	ldr	r3, [fp, #-12]
   1e3f8:	lsl	r3, r3, #2
   1e3fc:	add	r3, r2, r3
   1e400:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e404:	ldr	r1, [r2, #60]	; 0x3c
   1e408:	ldr	r2, [fp, #-12]
   1e40c:	lsl	r2, r2, #2
   1e410:	add	r2, r1, r2
   1e414:	ldr	r1, [r2]
   1e418:	mov	r0, #1
   1e41c:	ldr	r2, [fp, #-16]
   1e420:	lsl	r2, r0, r2
   1e424:	orr	r2, r1, r2
   1e428:	str	r2, [r3]
   1e42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e430:	bic	r3, r3, #127	; 0x7f
   1e434:	cmp	r3, #0
   1e438:	bne	1e45c <__assert_fail@plt+0xcf18>
   1e43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e440:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e444:	cmp	r2, r3
   1e448:	beq	1e45c <__assert_fail@plt+0xcf18>
   1e44c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e450:	ldrb	r3, [r2, #88]	; 0x58
   1e454:	orr	r3, r3, #8
   1e458:	strb	r3, [r2, #88]	; 0x58
   1e45c:	ldr	r3, [fp, #-16]
   1e460:	add	r3, r3, #1
   1e464:	str	r3, [fp, #-16]
   1e468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e46c:	add	r3, r3, #1
   1e470:	str	r3, [fp, #-20]	; 0xffffffec
   1e474:	ldr	r3, [fp, #-16]
   1e478:	cmp	r3, #31
   1e47c:	ble	1e3d4 <__assert_fail@plt+0xce90>
   1e480:	ldr	r3, [fp, #-12]
   1e484:	add	r3, r3, #1
   1e488:	str	r3, [fp, #-12]
   1e48c:	ldr	r3, [fp, #-12]
   1e490:	cmp	r3, #7
   1e494:	ble	1e3c8 <__assert_fail@plt+0xce84>
   1e498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e49c:	ldr	r3, [r3]
   1e4a0:	cmp	r3, #0
   1e4a4:	moveq	r3, #1
   1e4a8:	movne	r3, #0
   1e4ac:	uxtb	r3, r3
   1e4b0:	cmp	r3, #0
   1e4b4:	bne	1e4d8 <__assert_fail@plt+0xcf94>
   1e4b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e4bc:	ldr	r3, [r3, #32]
   1e4c0:	cmp	r3, #0
   1e4c4:	moveq	r3, #1
   1e4c8:	movne	r3, #0
   1e4cc:	uxtb	r3, r3
   1e4d0:	cmp	r3, #0
   1e4d4:	beq	1e4e0 <__assert_fail@plt+0xcf9c>
   1e4d8:	mov	r3, #12
   1e4dc:	b	1e4e4 <__assert_fail@plt+0xcfa0>
   1e4e0:	mov	r3, #0
   1e4e4:	mov	r0, r3
   1e4e8:	sub	sp, fp, #4
   1e4ec:	pop	{fp, pc}
   1e4f0:	andeq	r5, r3, r0, ror #28
   1e4f4:	andeq	r5, r3, r0, asr #28
   1e4f8:	push	{fp, lr}
   1e4fc:	add	fp, sp, #4
   1e500:	sub	sp, sp, #40	; 0x28
   1e504:	str	r0, [fp, #-40]	; 0xffffffd8
   1e508:	mov	r3, #0
   1e50c:	str	r3, [fp, #-8]
   1e510:	mov	r3, #0
   1e514:	str	r3, [fp, #-16]
   1e518:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e51c:	ldrb	r3, [r2, #88]	; 0x58
   1e520:	orr	r3, r3, #16
   1e524:	strb	r3, [r2, #88]	; 0x58
   1e528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e52c:	ldrb	r3, [r3, #88]	; 0x58
   1e530:	and	r3, r3, #8
   1e534:	uxtb	r3, r3
   1e538:	cmp	r3, #0
   1e53c:	moveq	r3, #1
   1e540:	movne	r3, #0
   1e544:	uxtb	r3, r3
   1e548:	cmp	r3, #0
   1e54c:	beq	1e6ac <__assert_fail@plt+0xd168>
   1e550:	mov	r3, #0
   1e554:	str	r3, [fp, #-20]	; 0xffffffec
   1e558:	ldr	r3, [pc, #352]	; 1e6c0 <__assert_fail@plt+0xd17c>
   1e55c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e560:	mvn	r3, #2013265921	; 0x78000001
   1e564:	str	r3, [fp, #-28]	; 0xffffffe4
   1e568:	mvn	r3, #-134217727	; 0xf8000001
   1e56c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e574:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e578:	str	r2, [r3, #96]	; 0x60
   1e57c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e584:	str	r2, [r3, #100]	; 0x64
   1e588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e58c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e590:	str	r2, [r3, #104]	; 0x68
   1e594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e598:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e59c:	str	r2, [r3, #108]	; 0x6c
   1e5a0:	mov	r3, #4
   1e5a4:	str	r3, [fp, #-8]
   1e5a8:	mov	r3, #128	; 0x80
   1e5ac:	str	r3, [fp, #-16]
   1e5b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e5b4:	ldrb	r3, [r3, #88]	; 0x58
   1e5b8:	lsr	r3, r3, #2
   1e5bc:	and	r3, r3, #1
   1e5c0:	uxtb	r3, r3
   1e5c4:	cmp	r3, #0
   1e5c8:	beq	1e6ac <__assert_fail@plt+0xd168>
   1e5cc:	ldr	r3, [fp, #-8]
   1e5d0:	add	r3, r3, #24
   1e5d4:	lsl	r3, r3, #2
   1e5d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e5dc:	add	r0, r2, r3
   1e5e0:	ldr	r3, [fp, #-16]
   1e5e4:	rsb	r3, r3, #256	; 0x100
   1e5e8:	add	r2, r3, #7
   1e5ec:	cmp	r3, #0
   1e5f0:	movlt	r3, r2
   1e5f4:	movge	r3, r3
   1e5f8:	asr	r3, r3, #3
   1e5fc:	mov	r2, r3
   1e600:	mov	r1, #0
   1e604:	bl	11448 <memset@plt>
   1e608:	b	1e6b8 <__assert_fail@plt+0xd174>
   1e60c:	mov	r3, #0
   1e610:	str	r3, [fp, #-12]
   1e614:	b	1e694 <__assert_fail@plt+0xd150>
   1e618:	bl	113d0 <__ctype_b_loc@plt>
   1e61c:	mov	r3, r0
   1e620:	ldr	r2, [r3]
   1e624:	ldr	r3, [fp, #-16]
   1e628:	lsl	r3, r3, #1
   1e62c:	add	r3, r2, r3
   1e630:	ldrh	r3, [r3]
   1e634:	and	r3, r3, #8
   1e638:	cmp	r3, #0
   1e63c:	bne	1e64c <__assert_fail@plt+0xd108>
   1e640:	ldr	r3, [fp, #-16]
   1e644:	cmp	r3, #95	; 0x5f
   1e648:	bne	1e67c <__assert_fail@plt+0xd138>
   1e64c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e650:	ldr	r2, [fp, #-8]
   1e654:	add	r2, r2, #24
   1e658:	ldr	r2, [r3, r2, lsl #2]
   1e65c:	mov	r1, #1
   1e660:	ldr	r3, [fp, #-12]
   1e664:	lsl	r3, r1, r3
   1e668:	orr	r1, r2, r3
   1e66c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e670:	ldr	r2, [fp, #-8]
   1e674:	add	r2, r2, #24
   1e678:	str	r1, [r3, r2, lsl #2]
   1e67c:	ldr	r3, [fp, #-12]
   1e680:	add	r3, r3, #1
   1e684:	str	r3, [fp, #-12]
   1e688:	ldr	r3, [fp, #-16]
   1e68c:	add	r3, r3, #1
   1e690:	str	r3, [fp, #-16]
   1e694:	ldr	r3, [fp, #-12]
   1e698:	cmp	r3, #31
   1e69c:	ble	1e618 <__assert_fail@plt+0xd0d4>
   1e6a0:	ldr	r3, [fp, #-8]
   1e6a4:	add	r3, r3, #1
   1e6a8:	str	r3, [fp, #-8]
   1e6ac:	ldr	r3, [fp, #-8]
   1e6b0:	cmp	r3, #7
   1e6b4:	ble	1e60c <__assert_fail@plt+0xd0c8>
   1e6b8:	sub	sp, fp, #4
   1e6bc:	pop	{fp, pc}
   1e6c0:	mvnseq	r0, #0
   1e6c4:	push	{fp, lr}
   1e6c8:	add	fp, sp, #4
   1e6cc:	sub	sp, sp, #24
   1e6d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e6d8:	ldr	r3, [r3]
   1e6dc:	str	r3, [fp, #-12]
   1e6e0:	ldr	r3, [fp, #-12]
   1e6e4:	ldr	r3, [r3, #56]	; 0x38
   1e6e8:	str	r3, [fp, #-8]
   1e6ec:	b	1e70c <__assert_fail@plt+0xd1c8>
   1e6f0:	ldr	r3, [fp, #-8]
   1e6f4:	ldr	r3, [r3]
   1e6f8:	str	r3, [fp, #-16]
   1e6fc:	ldr	r0, [fp, #-8]
   1e700:	bl	14dec <__assert_fail@plt+0x38a8>
   1e704:	ldr	r3, [fp, #-16]
   1e708:	str	r3, [fp, #-8]
   1e70c:	ldr	r3, [fp, #-8]
   1e710:	cmp	r3, #0
   1e714:	bne	1e6f0 <__assert_fail@plt+0xd1ac>
   1e718:	ldr	r3, [fp, #-12]
   1e71c:	mov	r2, #0
   1e720:	str	r2, [r3, #56]	; 0x38
   1e724:	ldr	r3, [fp, #-12]
   1e728:	mov	r2, #31
   1e72c:	str	r2, [r3, #64]	; 0x40
   1e730:	ldr	r3, [fp, #-12]
   1e734:	mov	r2, #0
   1e738:	str	r2, [r3, #52]	; 0x34
   1e73c:	ldr	r3, [fp, #-12]
   1e740:	ldr	r3, [r3, #16]
   1e744:	mov	r0, r3
   1e748:	bl	14dec <__assert_fail@plt+0x38a8>
   1e74c:	ldr	r3, [fp, #-12]
   1e750:	mov	r2, #0
   1e754:	str	r2, [r3, #16]
   1e758:	nop			; (mov r0, r0)
   1e75c:	sub	sp, fp, #4
   1e760:	pop	{fp, pc}
   1e764:	push	{fp, lr}
   1e768:	add	fp, sp, #4
   1e76c:	sub	sp, sp, #56	; 0x38
   1e770:	str	r0, [fp, #-56]	; 0xffffffc8
   1e774:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e778:	ldr	r3, [r3, #52]	; 0x34
   1e77c:	ldr	r3, [r3, #12]
   1e780:	ldr	r3, [r3, #28]
   1e784:	str	r3, [fp, #-16]
   1e788:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e78c:	ldr	r2, [fp, #-16]
   1e790:	str	r2, [r3, #72]	; 0x48
   1e794:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e798:	ldr	r1, [r3, #24]
   1e79c:	ldr	r2, [fp, #-16]
   1e7a0:	mov	r3, r2
   1e7a4:	lsl	r3, r3, #1
   1e7a8:	add	r3, r3, r2
   1e7ac:	lsl	r3, r3, #2
   1e7b0:	add	r2, r1, r3
   1e7b4:	sub	r3, fp, #52	; 0x34
   1e7b8:	mov	r1, r2
   1e7bc:	mov	r0, r3
   1e7c0:	bl	1a958 <__assert_fail@plt+0x9414>
   1e7c4:	mov	r3, r0
   1e7c8:	str	r3, [fp, #-40]	; 0xffffffd8
   1e7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7d0:	cmp	r3, #0
   1e7d4:	movne	r3, #1
   1e7d8:	moveq	r3, #0
   1e7dc:	uxtb	r3, r3
   1e7e0:	cmp	r3, #0
   1e7e4:	beq	1e7f0 <__assert_fail@plt+0xd2ac>
   1e7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e7ec:	b	1eb3c <__assert_fail@plt+0xd5f8>
   1e7f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e7f4:	ldr	r3, [r3, #76]	; 0x4c
   1e7f8:	cmp	r3, #0
   1e7fc:	ble	1e9bc <__assert_fail@plt+0xd478>
   1e800:	mov	r3, #0
   1e804:	str	r3, [fp, #-8]
   1e808:	b	1e9ac <__assert_fail@plt+0xd468>
   1e80c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1e810:	ldr	r3, [fp, #-8]
   1e814:	lsl	r3, r3, #2
   1e818:	add	r3, r2, r3
   1e81c:	ldr	r3, [r3]
   1e820:	str	r3, [fp, #-20]	; 0xffffffec
   1e824:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e828:	ldr	r2, [r3]
   1e82c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e830:	lsl	r3, r3, #3
   1e834:	add	r3, r2, r3
   1e838:	ldrb	r3, [r3, #4]
   1e83c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e844:	cmp	r3, #4
   1e848:	bne	1e994 <__assert_fail@plt+0xd450>
   1e84c:	mov	r3, #0
   1e850:	str	r3, [fp, #-12]
   1e854:	b	1e8c4 <__assert_fail@plt+0xd380>
   1e858:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e85c:	ldr	r2, [r3]
   1e860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e864:	ldr	r3, [fp, #-12]
   1e868:	lsl	r3, r3, #2
   1e86c:	add	r3, r1, r3
   1e870:	ldr	r3, [r3]
   1e874:	lsl	r3, r3, #3
   1e878:	add	r3, r2, r3
   1e87c:	str	r3, [fp, #-28]	; 0xffffffe4
   1e880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e884:	ldrb	r3, [r3, #4]
   1e888:	cmp	r3, #9
   1e88c:	bne	1e8b8 <__assert_fail@plt+0xd374>
   1e890:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e894:	ldr	r2, [r3]
   1e898:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e89c:	ldr	r1, [r3]
   1e8a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8a4:	lsl	r3, r3, #3
   1e8a8:	add	r3, r1, r3
   1e8ac:	ldr	r3, [r3]
   1e8b0:	cmp	r2, r3
   1e8b4:	beq	1e8d8 <__assert_fail@plt+0xd394>
   1e8b8:	ldr	r3, [fp, #-12]
   1e8bc:	add	r3, r3, #1
   1e8c0:	str	r3, [fp, #-12]
   1e8c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e8c8:	ldr	r3, [fp, #-12]
   1e8cc:	cmp	r2, r3
   1e8d0:	bgt	1e858 <__assert_fail@plt+0xd314>
   1e8d4:	b	1e8dc <__assert_fail@plt+0xd398>
   1e8d8:	nop			; (mov r0, r0)
   1e8dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e8e0:	ldr	r3, [fp, #-12]
   1e8e4:	cmp	r2, r3
   1e8e8:	beq	1e99c <__assert_fail@plt+0xd458>
   1e8ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8f0:	cmp	r3, #4
   1e8f4:	bne	1e9a0 <__assert_fail@plt+0xd45c>
   1e8f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e8fc:	ldr	r1, [r3, #20]
   1e900:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e904:	mov	r3, r2
   1e908:	lsl	r3, r3, #1
   1e90c:	add	r3, r3, r2
   1e910:	lsl	r3, r3, #2
   1e914:	add	r3, r1, r3
   1e918:	ldr	r3, [r3, #8]
   1e91c:	ldr	r3, [r3]
   1e920:	str	r3, [fp, #-32]	; 0xffffffe0
   1e924:	sub	r3, fp, #52	; 0x34
   1e928:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1e92c:	mov	r0, r3
   1e930:	bl	1bac4 <__assert_fail@plt+0xa580>
   1e934:	mov	r3, r0
   1e938:	cmp	r3, #0
   1e93c:	bne	1e9a0 <__assert_fail@plt+0xd45c>
   1e940:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e944:	ldr	r1, [r3, #24]
   1e948:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e94c:	mov	r3, r2
   1e950:	lsl	r3, r3, #1
   1e954:	add	r3, r3, r2
   1e958:	lsl	r3, r3, #2
   1e95c:	add	r2, r1, r3
   1e960:	sub	r3, fp, #52	; 0x34
   1e964:	mov	r1, r2
   1e968:	mov	r0, r3
   1e96c:	bl	1b260 <__assert_fail@plt+0x9d1c>
   1e970:	str	r0, [fp, #-36]	; 0xffffffdc
   1e974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e978:	cmp	r3, #0
   1e97c:	beq	1e988 <__assert_fail@plt+0xd444>
   1e980:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e984:	b	1eb3c <__assert_fail@plt+0xd5f8>
   1e988:	mov	r3, #0
   1e98c:	str	r3, [fp, #-8]
   1e990:	b	1e9a0 <__assert_fail@plt+0xd45c>
   1e994:	nop			; (mov r0, r0)
   1e998:	b	1e9a0 <__assert_fail@plt+0xd45c>
   1e99c:	nop			; (mov r0, r0)
   1e9a0:	ldr	r3, [fp, #-8]
   1e9a4:	add	r3, r3, #1
   1e9a8:	str	r3, [fp, #-8]
   1e9ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e9b0:	ldr	r3, [fp, #-8]
   1e9b4:	cmp	r2, r3
   1e9b8:	bgt	1e80c <__assert_fail@plt+0xd2c8>
   1e9bc:	sub	r2, fp, #52	; 0x34
   1e9c0:	sub	r0, fp, #40	; 0x28
   1e9c4:	mov	r3, #0
   1e9c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e9cc:	bl	1c25c <__assert_fail@plt+0xad18>
   1e9d0:	mov	r2, r0
   1e9d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e9d8:	str	r2, [r3, #36]	; 0x24
   1e9dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e9e0:	ldr	r3, [r3, #36]	; 0x24
   1e9e4:	cmp	r3, #0
   1e9e8:	moveq	r3, #1
   1e9ec:	movne	r3, #0
   1e9f0:	uxtb	r3, r3
   1e9f4:	cmp	r3, #0
   1e9f8:	beq	1ea04 <__assert_fail@plt+0xd4c0>
   1e9fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea00:	b	1eb3c <__assert_fail@plt+0xd5f8>
   1ea04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea08:	ldr	r3, [r3, #36]	; 0x24
   1ea0c:	ldrb	r3, [r3, #52]	; 0x34
   1ea10:	bic	r3, r3, #127	; 0x7f
   1ea14:	uxtb	r3, r3
   1ea18:	cmp	r3, #0
   1ea1c:	beq	1eafc <__assert_fail@plt+0xd5b8>
   1ea20:	sub	r2, fp, #52	; 0x34
   1ea24:	sub	r0, fp, #40	; 0x28
   1ea28:	mov	r3, #1
   1ea2c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ea30:	bl	1c25c <__assert_fail@plt+0xad18>
   1ea34:	mov	r2, r0
   1ea38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea3c:	str	r2, [r3, #40]	; 0x28
   1ea40:	sub	r2, fp, #52	; 0x34
   1ea44:	sub	r0, fp, #40	; 0x28
   1ea48:	mov	r3, #2
   1ea4c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ea50:	bl	1c25c <__assert_fail@plt+0xad18>
   1ea54:	mov	r2, r0
   1ea58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea5c:	str	r2, [r3, #44]	; 0x2c
   1ea60:	sub	r2, fp, #52	; 0x34
   1ea64:	sub	r0, fp, #40	; 0x28
   1ea68:	mov	r3, #6
   1ea6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ea70:	bl	1c25c <__assert_fail@plt+0xad18>
   1ea74:	mov	r2, r0
   1ea78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea7c:	str	r2, [r3, #48]	; 0x30
   1ea80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ea84:	ldr	r3, [r3, #40]	; 0x28
   1ea88:	cmp	r3, #0
   1ea8c:	moveq	r3, #1
   1ea90:	movne	r3, #0
   1ea94:	uxtb	r3, r3
   1ea98:	cmp	r3, #0
   1ea9c:	bne	1eac0 <__assert_fail@plt+0xd57c>
   1eaa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eaa4:	ldr	r3, [r3, #44]	; 0x2c
   1eaa8:	cmp	r3, #0
   1eaac:	moveq	r3, #1
   1eab0:	movne	r3, #0
   1eab4:	uxtb	r3, r3
   1eab8:	cmp	r3, #0
   1eabc:	beq	1eac8 <__assert_fail@plt+0xd584>
   1eac0:	mov	r3, #1
   1eac4:	b	1eacc <__assert_fail@plt+0xd588>
   1eac8:	mov	r3, #0
   1eacc:	cmp	r3, #0
   1ead0:	bne	1eaf4 <__assert_fail@plt+0xd5b0>
   1ead4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ead8:	ldr	r3, [r3, #48]	; 0x30
   1eadc:	cmp	r3, #0
   1eae0:	moveq	r3, #1
   1eae4:	movne	r3, #0
   1eae8:	uxtb	r3, r3
   1eaec:	cmp	r3, #0
   1eaf0:	beq	1eb2c <__assert_fail@plt+0xd5e8>
   1eaf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eaf8:	b	1eb3c <__assert_fail@plt+0xd5f8>
   1eafc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb00:	ldr	r2, [r3, #36]	; 0x24
   1eb04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb08:	str	r2, [r3, #48]	; 0x30
   1eb0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb10:	ldr	r2, [r3, #48]	; 0x30
   1eb14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb18:	str	r2, [r3, #44]	; 0x2c
   1eb1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb20:	ldr	r2, [r3, #44]	; 0x2c
   1eb24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eb28:	str	r2, [r3, #40]	; 0x28
   1eb2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1eb30:	mov	r0, r3
   1eb34:	bl	14dec <__assert_fail@plt+0x38a8>
   1eb38:	mov	r3, #0
   1eb3c:	mov	r0, r3
   1eb40:	sub	sp, fp, #4
   1eb44:	pop	{fp, pc}
   1eb48:	push	{fp, lr}
   1eb4c:	add	fp, sp, #4
   1eb50:	sub	sp, sp, #24
   1eb54:	str	r0, [fp, #-24]	; 0xffffffe8
   1eb58:	mov	r3, #0
   1eb5c:	strb	r3, [fp, #-13]
   1eb60:	mov	r3, #0
   1eb64:	strb	r3, [fp, #-14]
   1eb68:	mov	r3, #0
   1eb6c:	str	r3, [fp, #-8]
   1eb70:	b	1ece4 <__assert_fail@plt+0xd7a0>
   1eb74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eb78:	ldr	r2, [r3]
   1eb7c:	ldr	r3, [fp, #-8]
   1eb80:	lsl	r3, r3, #3
   1eb84:	add	r3, r2, r3
   1eb88:	ldrb	r3, [r3, #4]
   1eb8c:	sub	r3, r3, #1
   1eb90:	cmp	r3, #11
   1eb94:	ldrls	pc, [pc, r3, lsl #2]
   1eb98:	b	1ecc8 <__assert_fail@plt+0xd784>
   1eb9c:	andeq	lr, r1, ip, asr #23
   1eba0:	andeq	lr, r1, ip, asr #25
   1eba4:	andeq	lr, r1, r8, asr ip
   1eba8:	andeq	lr, r1, ip, asr #25
   1ebac:	andeq	lr, r1, ip, asr #24
   1ebb0:	andeq	lr, r1, r4, asr lr
   1ebb4:	andeq	lr, r1, r8, asr #25
   1ebb8:	andeq	lr, r1, ip, asr #25
   1ebbc:	andeq	lr, r1, ip, asr #25
   1ebc0:	andeq	lr, r1, ip, asr #25
   1ebc4:	andeq	lr, r1, ip, asr #25
   1ebc8:	strdeq	lr, [r1], -ip
   1ebcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ebd0:	ldr	r2, [r3]
   1ebd4:	ldr	r3, [fp, #-8]
   1ebd8:	lsl	r3, r3, #3
   1ebdc:	add	r3, r2, r3
   1ebe0:	ldrb	r3, [r3]
   1ebe4:	sxtb	r3, r3
   1ebe8:	cmp	r3, #0
   1ebec:	bge	1ecd4 <__assert_fail@plt+0xd790>
   1ebf0:	mov	r3, #1
   1ebf4:	strb	r3, [fp, #-13]
   1ebf8:	b	1ecd4 <__assert_fail@plt+0xd790>
   1ebfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec00:	ldr	r2, [r3]
   1ec04:	ldr	r3, [fp, #-8]
   1ec08:	lsl	r3, r3, #3
   1ec0c:	add	r3, r2, r3
   1ec10:	ldr	r3, [r3]
   1ec14:	cmp	r3, #32
   1ec18:	beq	1ec44 <__assert_fail@plt+0xd700>
   1ec1c:	cmp	r3, #32
   1ec20:	bhi	1ec30 <__assert_fail@plt+0xd6ec>
   1ec24:	cmp	r3, #16
   1ec28:	beq	1ec44 <__assert_fail@plt+0xd700>
   1ec2c:	b	1ee60 <__assert_fail@plt+0xd91c>
   1ec30:	cmp	r3, #64	; 0x40
   1ec34:	beq	1ec44 <__assert_fail@plt+0xd700>
   1ec38:	cmp	r3, #128	; 0x80
   1ec3c:	beq	1ec44 <__assert_fail@plt+0xd700>
   1ec40:	b	1ee60 <__assert_fail@plt+0xd91c>
   1ec44:	nop			; (mov r0, r0)
   1ec48:	b	1ecd8 <__assert_fail@plt+0xd794>
   1ec4c:	mov	r3, #1
   1ec50:	strb	r3, [fp, #-14]
   1ec54:	b	1ecd8 <__assert_fail@plt+0xd794>
   1ec58:	mov	r3, #0
   1ec5c:	str	r3, [fp, #-20]	; 0xffffffec
   1ec60:	mov	r3, #4
   1ec64:	str	r3, [fp, #-12]
   1ec68:	b	1ecb8 <__assert_fail@plt+0xd774>
   1ec6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec70:	ldr	r2, [r3]
   1ec74:	ldr	r3, [fp, #-8]
   1ec78:	lsl	r3, r3, #3
   1ec7c:	add	r3, r2, r3
   1ec80:	ldr	r2, [r3]
   1ec84:	ldr	r3, [fp, #-12]
   1ec88:	lsl	r3, r3, #2
   1ec8c:	add	r3, r2, r3
   1ec90:	ldr	r2, [r3]
   1ec94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec98:	lsr	r3, r2, r3
   1ec9c:	cmp	r3, #0
   1eca0:	bne	1ee5c <__assert_fail@plt+0xd918>
   1eca4:	mov	r3, #0
   1eca8:	str	r3, [fp, #-20]	; 0xffffffec
   1ecac:	ldr	r3, [fp, #-12]
   1ecb0:	add	r3, r3, #1
   1ecb4:	str	r3, [fp, #-12]
   1ecb8:	ldr	r3, [fp, #-12]
   1ecbc:	cmp	r3, #7
   1ecc0:	ble	1ec6c <__assert_fail@plt+0xd728>
   1ecc4:	b	1ecd8 <__assert_fail@plt+0xd794>
   1ecc8:	bl	1152c <abort@plt>
   1eccc:	nop			; (mov r0, r0)
   1ecd0:	b	1ecd8 <__assert_fail@plt+0xd794>
   1ecd4:	nop			; (mov r0, r0)
   1ecd8:	ldr	r3, [fp, #-8]
   1ecdc:	add	r3, r3, #1
   1ece0:	str	r3, [fp, #-8]
   1ece4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ece8:	ldr	r2, [r3, #8]
   1ecec:	ldr	r3, [fp, #-8]
   1ecf0:	cmp	r2, r3
   1ecf4:	bhi	1eb74 <__assert_fail@plt+0xd630>
   1ecf8:	ldrb	r3, [fp, #-13]
   1ecfc:	cmp	r3, #0
   1ed00:	bne	1ed10 <__assert_fail@plt+0xd7cc>
   1ed04:	ldrb	r3, [fp, #-14]
   1ed08:	cmp	r3, #0
   1ed0c:	beq	1ede0 <__assert_fail@plt+0xd89c>
   1ed10:	mov	r3, #0
   1ed14:	str	r3, [fp, #-8]
   1ed18:	b	1edcc <__assert_fail@plt+0xd888>
   1ed1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed20:	ldr	r2, [r3]
   1ed24:	ldr	r3, [fp, #-8]
   1ed28:	lsl	r3, r3, #3
   1ed2c:	add	r3, r2, r3
   1ed30:	ldrb	r3, [r3, #4]
   1ed34:	cmp	r3, #1
   1ed38:	bne	1ed84 <__assert_fail@plt+0xd840>
   1ed3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed40:	ldr	r2, [r3]
   1ed44:	ldr	r3, [fp, #-8]
   1ed48:	lsl	r3, r3, #3
   1ed4c:	add	r3, r2, r3
   1ed50:	ldrb	r3, [r3]
   1ed54:	sxtb	r3, r3
   1ed58:	cmp	r3, #0
   1ed5c:	bge	1ed84 <__assert_fail@plt+0xd840>
   1ed60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed64:	ldr	r2, [r3]
   1ed68:	ldr	r3, [fp, #-8]
   1ed6c:	lsl	r3, r3, #3
   1ed70:	add	r2, r2, r3
   1ed74:	ldrb	r3, [r2, #6]
   1ed78:	bic	r3, r3, #32
   1ed7c:	strb	r3, [r2, #6]
   1ed80:	b	1edc0 <__assert_fail@plt+0xd87c>
   1ed84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed88:	ldr	r2, [r3]
   1ed8c:	ldr	r3, [fp, #-8]
   1ed90:	lsl	r3, r3, #3
   1ed94:	add	r3, r2, r3
   1ed98:	ldrb	r3, [r3, #4]
   1ed9c:	cmp	r3, #5
   1eda0:	bne	1edc0 <__assert_fail@plt+0xd87c>
   1eda4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eda8:	ldr	r2, [r3]
   1edac:	ldr	r3, [fp, #-8]
   1edb0:	lsl	r3, r3, #3
   1edb4:	add	r3, r2, r3
   1edb8:	mov	r2, #7
   1edbc:	strb	r2, [r3, #4]
   1edc0:	ldr	r3, [fp, #-8]
   1edc4:	add	r3, r3, #1
   1edc8:	str	r3, [fp, #-8]
   1edcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edd0:	ldr	r2, [r3, #8]
   1edd4:	ldr	r3, [fp, #-8]
   1edd8:	cmp	r2, r3
   1eddc:	bhi	1ed1c <__assert_fail@plt+0xd7d8>
   1ede0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ede4:	mov	r2, #1
   1ede8:	str	r2, [r3, #92]	; 0x5c
   1edec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edf0:	ldrb	r3, [r2, #88]	; 0x58
   1edf4:	bic	r3, r3, #4
   1edf8:	strb	r3, [r2, #88]	; 0x58
   1edfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee00:	ldr	r3, [r3, #76]	; 0x4c
   1ee04:	cmp	r3, #0
   1ee08:	bgt	1ee18 <__assert_fail@plt+0xd8d4>
   1ee0c:	ldrb	r3, [fp, #-14]
   1ee10:	cmp	r3, #0
   1ee14:	beq	1ee20 <__assert_fail@plt+0xd8dc>
   1ee18:	mov	r3, #1
   1ee1c:	b	1ee24 <__assert_fail@plt+0xd8e0>
   1ee20:	mov	r3, #0
   1ee24:	uxtb	r3, r3
   1ee28:	and	r3, r3, #1
   1ee2c:	uxtb	r3, r3
   1ee30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee34:	ldrb	r2, [r1, #88]	; 0x58
   1ee38:	and	r3, r3, #1
   1ee3c:	bic	r2, r2, #2
   1ee40:	lsl	r3, r3, #1
   1ee44:	orr	r3, r3, r2
   1ee48:	mov	r2, r3
   1ee4c:	strb	r2, [r1, #88]	; 0x58
   1ee50:	b	1ee60 <__assert_fail@plt+0xd91c>
   1ee54:	nop			; (mov r0, r0)
   1ee58:	b	1ee60 <__assert_fail@plt+0xd91c>
   1ee5c:	nop			; (mov r0, r0)
   1ee60:	sub	sp, fp, #4
   1ee64:	pop	{fp, pc}
   1ee68:	push	{fp, lr}
   1ee6c:	add	fp, sp, #4
   1ee70:	sub	sp, sp, #24
   1ee74:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee7c:	ldr	r3, [r3]
   1ee80:	str	r3, [fp, #-16]
   1ee84:	ldr	r3, [fp, #-16]
   1ee88:	ldr	r3, [r3, #4]
   1ee8c:	lsl	r3, r3, #2
   1ee90:	mov	r0, r3
   1ee94:	bl	33244 <__assert_fail@plt+0x21d00>
   1ee98:	mov	r3, r0
   1ee9c:	mov	r2, r3
   1eea0:	ldr	r3, [fp, #-16]
   1eea4:	str	r2, [r3, #12]
   1eea8:	ldr	r3, [fp, #-16]
   1eeac:	ldr	r3, [r3, #4]
   1eeb0:	lsl	r3, r3, #2
   1eeb4:	mov	r0, r3
   1eeb8:	bl	33244 <__assert_fail@plt+0x21d00>
   1eebc:	mov	r3, r0
   1eec0:	mov	r2, r3
   1eec4:	ldr	r3, [fp, #-16]
   1eec8:	str	r2, [r3, #16]
   1eecc:	ldr	r3, [fp, #-16]
   1eed0:	ldr	r2, [r3, #4]
   1eed4:	mov	r3, r2
   1eed8:	lsl	r3, r3, #1
   1eedc:	add	r3, r3, r2
   1eee0:	lsl	r3, r3, #2
   1eee4:	mov	r0, r3
   1eee8:	bl	33244 <__assert_fail@plt+0x21d00>
   1eeec:	mov	r3, r0
   1eef0:	mov	r2, r3
   1eef4:	ldr	r3, [fp, #-16]
   1eef8:	str	r2, [r3, #20]
   1eefc:	ldr	r3, [fp, #-16]
   1ef00:	ldr	r2, [r3, #4]
   1ef04:	mov	r3, r2
   1ef08:	lsl	r3, r3, #1
   1ef0c:	add	r3, r3, r2
   1ef10:	lsl	r3, r3, #2
   1ef14:	mov	r0, r3
   1ef18:	bl	33244 <__assert_fail@plt+0x21d00>
   1ef1c:	mov	r3, r0
   1ef20:	mov	r2, r3
   1ef24:	ldr	r3, [fp, #-16]
   1ef28:	str	r2, [r3, #24]
   1ef2c:	ldr	r3, [fp, #-16]
   1ef30:	ldr	r3, [r3, #12]
   1ef34:	cmp	r3, #0
   1ef38:	moveq	r3, #1
   1ef3c:	movne	r3, #0
   1ef40:	uxtb	r3, r3
   1ef44:	cmp	r3, #0
   1ef48:	bne	1ef6c <__assert_fail@plt+0xda28>
   1ef4c:	ldr	r3, [fp, #-16]
   1ef50:	ldr	r3, [r3, #16]
   1ef54:	cmp	r3, #0
   1ef58:	moveq	r3, #1
   1ef5c:	movne	r3, #0
   1ef60:	uxtb	r3, r3
   1ef64:	cmp	r3, #0
   1ef68:	beq	1ef74 <__assert_fail@plt+0xda30>
   1ef6c:	mov	r3, #1
   1ef70:	b	1ef78 <__assert_fail@plt+0xda34>
   1ef74:	mov	r3, #0
   1ef78:	cmp	r3, #0
   1ef7c:	bne	1efa0 <__assert_fail@plt+0xda5c>
   1ef80:	ldr	r3, [fp, #-16]
   1ef84:	ldr	r3, [r3, #20]
   1ef88:	cmp	r3, #0
   1ef8c:	moveq	r3, #1
   1ef90:	movne	r3, #0
   1ef94:	uxtb	r3, r3
   1ef98:	cmp	r3, #0
   1ef9c:	beq	1efa8 <__assert_fail@plt+0xda64>
   1efa0:	mov	r3, #1
   1efa4:	b	1efac <__assert_fail@plt+0xda68>
   1efa8:	mov	r3, #0
   1efac:	cmp	r3, #0
   1efb0:	bne	1efd4 <__assert_fail@plt+0xda90>
   1efb4:	ldr	r3, [fp, #-16]
   1efb8:	ldr	r3, [r3, #24]
   1efbc:	cmp	r3, #0
   1efc0:	moveq	r3, #1
   1efc4:	movne	r3, #0
   1efc8:	uxtb	r3, r3
   1efcc:	cmp	r3, #0
   1efd0:	beq	1efdc <__assert_fail@plt+0xda98>
   1efd4:	mov	r3, #12
   1efd8:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1efdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1efe0:	ldr	r3, [r3, #24]
   1efe4:	lsl	r3, r3, #2
   1efe8:	mov	r0, r3
   1efec:	bl	33244 <__assert_fail@plt+0x21d00>
   1eff0:	mov	r3, r0
   1eff4:	mov	r2, r3
   1eff8:	ldr	r3, [fp, #-16]
   1effc:	str	r2, [r3, #132]	; 0x84
   1f000:	ldr	r3, [fp, #-16]
   1f004:	ldr	r3, [r3, #132]	; 0x84
   1f008:	cmp	r3, #0
   1f00c:	beq	1f0f8 <__assert_fail@plt+0xdbb4>
   1f010:	mov	r3, #0
   1f014:	str	r3, [fp, #-12]
   1f018:	b	1f044 <__assert_fail@plt+0xdb00>
   1f01c:	ldr	r3, [fp, #-16]
   1f020:	ldr	r2, [r3, #132]	; 0x84
   1f024:	ldr	r3, [fp, #-12]
   1f028:	lsl	r3, r3, #2
   1f02c:	add	r3, r2, r3
   1f030:	ldr	r2, [fp, #-12]
   1f034:	str	r2, [r3]
   1f038:	ldr	r3, [fp, #-12]
   1f03c:	add	r3, r3, #1
   1f040:	str	r3, [fp, #-12]
   1f044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f048:	ldr	r2, [r3, #24]
   1f04c:	ldr	r3, [fp, #-12]
   1f050:	cmp	r2, r3
   1f054:	bhi	1f01c <__assert_fail@plt+0xdad8>
   1f058:	ldr	r3, [fp, #-16]
   1f05c:	ldr	r3, [r3, #52]	; 0x34
   1f060:	ldr	r2, [fp, #-16]
   1f064:	ldr	r1, [pc, #600]	; 1f2c4 <__assert_fail@plt+0xdd80>
   1f068:	mov	r0, r3
   1f06c:	bl	1f3ec <__assert_fail@plt+0xdea8>
   1f070:	mov	r3, #0
   1f074:	str	r3, [fp, #-12]
   1f078:	b	1f0ac <__assert_fail@plt+0xdb68>
   1f07c:	ldr	r3, [fp, #-16]
   1f080:	ldr	r2, [r3, #132]	; 0x84
   1f084:	ldr	r3, [fp, #-12]
   1f088:	lsl	r3, r3, #2
   1f08c:	add	r3, r2, r3
   1f090:	ldr	r2, [r3]
   1f094:	ldr	r3, [fp, #-12]
   1f098:	cmp	r2, r3
   1f09c:	bne	1f0c4 <__assert_fail@plt+0xdb80>
   1f0a0:	ldr	r3, [fp, #-12]
   1f0a4:	add	r3, r3, #1
   1f0a8:	str	r3, [fp, #-12]
   1f0ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0b0:	ldr	r2, [r3, #24]
   1f0b4:	ldr	r3, [fp, #-12]
   1f0b8:	cmp	r2, r3
   1f0bc:	bhi	1f07c <__assert_fail@plt+0xdb38>
   1f0c0:	b	1f0c8 <__assert_fail@plt+0xdb84>
   1f0c4:	nop			; (mov r0, r0)
   1f0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f0cc:	ldr	r2, [r3, #24]
   1f0d0:	ldr	r3, [fp, #-12]
   1f0d4:	cmp	r2, r3
   1f0d8:	bne	1f0f8 <__assert_fail@plt+0xdbb4>
   1f0dc:	ldr	r3, [fp, #-16]
   1f0e0:	ldr	r3, [r3, #132]	; 0x84
   1f0e4:	mov	r0, r3
   1f0e8:	bl	14dec <__assert_fail@plt+0x38a8>
   1f0ec:	ldr	r3, [fp, #-16]
   1f0f0:	mov	r2, #0
   1f0f4:	str	r2, [r3, #132]	; 0x84
   1f0f8:	ldr	r3, [fp, #-16]
   1f0fc:	ldr	r3, [r3, #52]	; 0x34
   1f100:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f104:	ldr	r1, [pc, #444]	; 1f2c8 <__assert_fail@plt+0xdd84>
   1f108:	mov	r0, r3
   1f10c:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   1f110:	str	r0, [fp, #-8]
   1f114:	ldr	r3, [fp, #-8]
   1f118:	cmp	r3, #0
   1f11c:	movne	r3, #1
   1f120:	moveq	r3, #0
   1f124:	uxtb	r3, r3
   1f128:	cmp	r3, #0
   1f12c:	beq	1f138 <__assert_fail@plt+0xdbf4>
   1f130:	ldr	r3, [fp, #-8]
   1f134:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1f138:	ldr	r3, [fp, #-16]
   1f13c:	ldr	r3, [r3, #52]	; 0x34
   1f140:	ldr	r2, [fp, #-16]
   1f144:	ldr	r1, [pc, #384]	; 1f2cc <__assert_fail@plt+0xdd88>
   1f148:	mov	r0, r3
   1f14c:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   1f150:	str	r0, [fp, #-8]
   1f154:	ldr	r3, [fp, #-8]
   1f158:	cmp	r3, #0
   1f15c:	movne	r3, #1
   1f160:	moveq	r3, #0
   1f164:	uxtb	r3, r3
   1f168:	cmp	r3, #0
   1f16c:	beq	1f178 <__assert_fail@plt+0xdc34>
   1f170:	ldr	r3, [fp, #-8]
   1f174:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1f178:	ldr	r3, [fp, #-16]
   1f17c:	ldr	r3, [r3, #52]	; 0x34
   1f180:	ldr	r2, [fp, #-16]
   1f184:	ldr	r1, [pc, #324]	; 1f2d0 <__assert_fail@plt+0xdd8c>
   1f188:	mov	r0, r3
   1f18c:	bl	1f3ec <__assert_fail@plt+0xdea8>
   1f190:	ldr	r3, [fp, #-16]
   1f194:	ldr	r3, [r3, #52]	; 0x34
   1f198:	ldr	r2, [fp, #-16]
   1f19c:	ldr	r1, [pc, #304]	; 1f2d4 <__assert_fail@plt+0xdd90>
   1f1a0:	mov	r0, r3
   1f1a4:	bl	1f3ec <__assert_fail@plt+0xdea8>
   1f1a8:	str	r0, [fp, #-8]
   1f1ac:	ldr	r3, [fp, #-8]
   1f1b0:	cmp	r3, #0
   1f1b4:	movne	r3, #1
   1f1b8:	moveq	r3, #0
   1f1bc:	uxtb	r3, r3
   1f1c0:	cmp	r3, #0
   1f1c4:	beq	1f1d0 <__assert_fail@plt+0xdc8c>
   1f1c8:	ldr	r3, [fp, #-8]
   1f1cc:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1f1d0:	ldr	r0, [fp, #-16]
   1f1d4:	bl	207b4 <__assert_fail@plt+0xf270>
   1f1d8:	str	r0, [fp, #-8]
   1f1dc:	ldr	r3, [fp, #-8]
   1f1e0:	cmp	r3, #0
   1f1e4:	movne	r3, #1
   1f1e8:	moveq	r3, #0
   1f1ec:	uxtb	r3, r3
   1f1f0:	cmp	r3, #0
   1f1f4:	beq	1f200 <__assert_fail@plt+0xdcbc>
   1f1f8:	ldr	r3, [fp, #-8]
   1f1fc:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1f200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f204:	ldrb	r3, [r3, #28]
   1f208:	and	r3, r3, #16
   1f20c:	uxtb	r3, r3
   1f210:	cmp	r3, #0
   1f214:	bne	1f240 <__assert_fail@plt+0xdcfc>
   1f218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f21c:	ldr	r3, [r3, #24]
   1f220:	cmp	r3, #0
   1f224:	beq	1f240 <__assert_fail@plt+0xdcfc>
   1f228:	ldr	r3, [fp, #-16]
   1f22c:	ldrb	r3, [r3, #88]	; 0x58
   1f230:	and	r3, r3, #1
   1f234:	uxtb	r3, r3
   1f238:	cmp	r3, #0
   1f23c:	bne	1f250 <__assert_fail@plt+0xdd0c>
   1f240:	ldr	r3, [fp, #-16]
   1f244:	ldr	r3, [r3, #76]	; 0x4c
   1f248:	cmp	r3, #0
   1f24c:	beq	1f2b4 <__assert_fail@plt+0xdd70>
   1f250:	ldr	r3, [fp, #-16]
   1f254:	ldr	r2, [r3, #8]
   1f258:	mov	r3, r2
   1f25c:	lsl	r3, r3, #1
   1f260:	add	r3, r3, r2
   1f264:	lsl	r3, r3, #2
   1f268:	mov	r0, r3
   1f26c:	bl	33244 <__assert_fail@plt+0x21d00>
   1f270:	mov	r3, r0
   1f274:	mov	r2, r3
   1f278:	ldr	r3, [fp, #-16]
   1f27c:	str	r2, [r3, #28]
   1f280:	ldr	r3, [fp, #-16]
   1f284:	ldr	r3, [r3, #28]
   1f288:	cmp	r3, #0
   1f28c:	moveq	r3, #1
   1f290:	movne	r3, #0
   1f294:	uxtb	r3, r3
   1f298:	cmp	r3, #0
   1f29c:	beq	1f2a8 <__assert_fail@plt+0xdd64>
   1f2a0:	mov	r3, #12
   1f2a4:	b	1f2b8 <__assert_fail@plt+0xdd74>
   1f2a8:	ldr	r0, [fp, #-16]
   1f2ac:	bl	20638 <__assert_fail@plt+0xf0f4>
   1f2b0:	str	r0, [fp, #-8]
   1f2b4:	ldr	r3, [fp, #-8]
   1f2b8:	mov	r0, r3
   1f2bc:	sub	sp, fp, #4
   1f2c0:	pop	{fp, pc}
   1f2c4:	ldrdeq	pc, [r1], -r8
   1f2c8:	andeq	pc, r1, r8, asr r6	; <UNPREDICTABLE>
   1f2cc:	andeq	pc, r1, ip, lsr #19
   1f2d0:	andeq	pc, r1, ip, asr #21
   1f2d4:	andeq	pc, r1, r0, lsr #23
   1f2d8:	push	{fp, lr}
   1f2dc:	add	fp, sp, #4
   1f2e0:	sub	sp, sp, #32
   1f2e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1f2e8:	str	r1, [fp, #-28]	; 0xffffffe4
   1f2ec:	str	r2, [fp, #-32]	; 0xffffffe0
   1f2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f2f4:	str	r3, [fp, #-8]
   1f2f8:	b	1f328 <__assert_fail@plt+0xdde4>
   1f2fc:	ldr	r3, [fp, #-8]
   1f300:	ldr	r3, [r3, #4]
   1f304:	cmp	r3, #0
   1f308:	beq	1f31c <__assert_fail@plt+0xddd8>
   1f30c:	ldr	r3, [fp, #-8]
   1f310:	ldr	r3, [r3, #4]
   1f314:	str	r3, [fp, #-8]
   1f318:	b	1f328 <__assert_fail@plt+0xdde4>
   1f31c:	ldr	r3, [fp, #-8]
   1f320:	ldr	r3, [r3, #8]
   1f324:	str	r3, [fp, #-8]
   1f328:	ldr	r3, [fp, #-8]
   1f32c:	ldr	r3, [r3, #4]
   1f330:	cmp	r3, #0
   1f334:	bne	1f2fc <__assert_fail@plt+0xddb8>
   1f338:	ldr	r3, [fp, #-8]
   1f33c:	ldr	r3, [r3, #8]
   1f340:	cmp	r3, #0
   1f344:	bne	1f2fc <__assert_fail@plt+0xddb8>
   1f348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f34c:	ldr	r1, [fp, #-8]
   1f350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f354:	blx	r3
   1f358:	str	r0, [fp, #-12]
   1f35c:	ldr	r3, [fp, #-12]
   1f360:	cmp	r3, #0
   1f364:	movne	r3, #1
   1f368:	moveq	r3, #0
   1f36c:	uxtb	r3, r3
   1f370:	cmp	r3, #0
   1f374:	beq	1f380 <__assert_fail@plt+0xde3c>
   1f378:	ldr	r3, [fp, #-12]
   1f37c:	b	1f3e0 <__assert_fail@plt+0xde9c>
   1f380:	ldr	r3, [fp, #-8]
   1f384:	ldr	r3, [r3]
   1f388:	cmp	r3, #0
   1f38c:	bne	1f398 <__assert_fail@plt+0xde54>
   1f390:	mov	r3, #0
   1f394:	b	1f3e0 <__assert_fail@plt+0xde9c>
   1f398:	ldr	r3, [fp, #-8]
   1f39c:	str	r3, [fp, #-16]
   1f3a0:	ldr	r3, [fp, #-8]
   1f3a4:	ldr	r3, [r3]
   1f3a8:	str	r3, [fp, #-8]
   1f3ac:	ldr	r3, [fp, #-8]
   1f3b0:	ldr	r2, [r3, #8]
   1f3b4:	ldr	r3, [fp, #-16]
   1f3b8:	cmp	r2, r3
   1f3bc:	beq	1f348 <__assert_fail@plt+0xde04>
   1f3c0:	ldr	r3, [fp, #-8]
   1f3c4:	ldr	r3, [r3, #8]
   1f3c8:	cmp	r3, #0
   1f3cc:	beq	1f348 <__assert_fail@plt+0xde04>
   1f3d0:	ldr	r3, [fp, #-8]
   1f3d4:	ldr	r3, [r3, #8]
   1f3d8:	str	r3, [fp, #-8]
   1f3dc:	b	1f328 <__assert_fail@plt+0xdde4>
   1f3e0:	mov	r0, r3
   1f3e4:	sub	sp, fp, #4
   1f3e8:	pop	{fp, pc}
   1f3ec:	push	{fp, lr}
   1f3f0:	add	fp, sp, #4
   1f3f4:	sub	sp, sp, #32
   1f3f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1f3fc:	str	r1, [fp, #-28]	; 0xffffffe4
   1f400:	str	r2, [fp, #-32]	; 0xffffffe0
   1f404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f408:	str	r3, [fp, #-8]
   1f40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f410:	ldr	r1, [fp, #-8]
   1f414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f418:	blx	r3
   1f41c:	str	r0, [fp, #-16]
   1f420:	ldr	r3, [fp, #-16]
   1f424:	cmp	r3, #0
   1f428:	movne	r3, #1
   1f42c:	moveq	r3, #0
   1f430:	uxtb	r3, r3
   1f434:	cmp	r3, #0
   1f438:	beq	1f444 <__assert_fail@plt+0xdf00>
   1f43c:	ldr	r3, [fp, #-16]
   1f440:	b	1f4cc <__assert_fail@plt+0xdf88>
   1f444:	ldr	r3, [fp, #-8]
   1f448:	ldr	r3, [r3, #4]
   1f44c:	cmp	r3, #0
   1f450:	beq	1f464 <__assert_fail@plt+0xdf20>
   1f454:	ldr	r3, [fp, #-8]
   1f458:	ldr	r3, [r3, #4]
   1f45c:	str	r3, [fp, #-8]
   1f460:	b	1f40c <__assert_fail@plt+0xdec8>
   1f464:	mov	r3, #0
   1f468:	str	r3, [fp, #-12]
   1f46c:	b	1f498 <__assert_fail@plt+0xdf54>
   1f470:	ldr	r3, [fp, #-8]
   1f474:	str	r3, [fp, #-12]
   1f478:	ldr	r3, [fp, #-8]
   1f47c:	ldr	r3, [r3]
   1f480:	str	r3, [fp, #-8]
   1f484:	ldr	r3, [fp, #-8]
   1f488:	cmp	r3, #0
   1f48c:	bne	1f498 <__assert_fail@plt+0xdf54>
   1f490:	mov	r3, #0
   1f494:	b	1f4cc <__assert_fail@plt+0xdf88>
   1f498:	ldr	r3, [fp, #-8]
   1f49c:	ldr	r2, [r3, #8]
   1f4a0:	ldr	r3, [fp, #-12]
   1f4a4:	cmp	r2, r3
   1f4a8:	beq	1f470 <__assert_fail@plt+0xdf2c>
   1f4ac:	ldr	r3, [fp, #-8]
   1f4b0:	ldr	r3, [r3, #8]
   1f4b4:	cmp	r3, #0
   1f4b8:	beq	1f470 <__assert_fail@plt+0xdf2c>
   1f4bc:	ldr	r3, [fp, #-8]
   1f4c0:	ldr	r3, [r3, #8]
   1f4c4:	str	r3, [fp, #-8]
   1f4c8:	b	1f40c <__assert_fail@plt+0xdec8>
   1f4cc:	mov	r0, r3
   1f4d0:	sub	sp, fp, #4
   1f4d4:	pop	{fp, pc}
   1f4d8:	push	{fp}		; (str fp, [sp, #-4]!)
   1f4dc:	add	fp, sp, #0
   1f4e0:	sub	sp, sp, #28
   1f4e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1f4e8:	str	r1, [fp, #-28]	; 0xffffffe4
   1f4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4f0:	str	r3, [fp, #-8]
   1f4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f4f8:	ldrb	r3, [r3, #24]
   1f4fc:	cmp	r3, #4
   1f500:	bne	1f568 <__assert_fail@plt+0xe024>
   1f504:	ldr	r3, [fp, #-8]
   1f508:	ldr	r3, [r3, #132]	; 0x84
   1f50c:	cmp	r3, #0
   1f510:	beq	1f568 <__assert_fail@plt+0xe024>
   1f514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f518:	ldr	r3, [r3, #20]
   1f51c:	str	r3, [fp, #-12]
   1f520:	ldr	r3, [fp, #-8]
   1f524:	ldr	r2, [r3, #132]	; 0x84
   1f528:	ldr	r3, [fp, #-12]
   1f52c:	lsl	r3, r3, #2
   1f530:	add	r3, r2, r3
   1f534:	ldr	r2, [r3]
   1f538:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f53c:	str	r2, [r3, #20]
   1f540:	ldr	r3, [fp, #-8]
   1f544:	ldr	r3, [r3, #80]	; 0x50
   1f548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f54c:	ldr	r2, [r2, #20]
   1f550:	mov	r1, #1
   1f554:	lsl	r2, r1, r2
   1f558:	orr	r2, r3, r2
   1f55c:	ldr	r3, [fp, #-8]
   1f560:	str	r2, [r3, #80]	; 0x50
   1f564:	b	1f644 <__assert_fail@plt+0xe100>
   1f568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f56c:	ldrb	r3, [r3, #24]
   1f570:	cmp	r3, #17
   1f574:	bne	1f644 <__assert_fail@plt+0xe100>
   1f578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f57c:	ldr	r3, [r3, #4]
   1f580:	cmp	r3, #0
   1f584:	beq	1f644 <__assert_fail@plt+0xe100>
   1f588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f58c:	ldr	r3, [r3, #4]
   1f590:	ldrb	r3, [r3, #24]
   1f594:	cmp	r3, #17
   1f598:	bne	1f644 <__assert_fail@plt+0xe100>
   1f59c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5a0:	ldr	r3, [r3, #4]
   1f5a4:	ldr	r3, [r3, #20]
   1f5a8:	str	r3, [fp, #-16]
   1f5ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5b0:	ldr	r3, [r3, #4]
   1f5b4:	ldr	r2, [r3, #4]
   1f5b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5bc:	str	r2, [r3, #4]
   1f5c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5c4:	ldr	r3, [r3, #4]
   1f5c8:	cmp	r3, #0
   1f5cc:	beq	1f5e0 <__assert_fail@plt+0xe09c>
   1f5d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5d4:	ldr	r3, [r3, #4]
   1f5d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f5dc:	str	r2, [r3]
   1f5e0:	ldr	r3, [fp, #-8]
   1f5e4:	ldr	r2, [r3, #132]	; 0x84
   1f5e8:	ldr	r3, [fp, #-16]
   1f5ec:	lsl	r3, r3, #2
   1f5f0:	add	r3, r2, r3
   1f5f4:	ldr	r2, [fp, #-8]
   1f5f8:	ldr	r1, [r2, #132]	; 0x84
   1f5fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1f600:	ldr	r2, [r2, #20]
   1f604:	lsl	r2, r2, #2
   1f608:	add	r2, r1, r2
   1f60c:	ldr	r2, [r2]
   1f610:	str	r2, [r3]
   1f614:	ldr	r3, [fp, #-16]
   1f618:	cmp	r3, #31
   1f61c:	bgt	1f644 <__assert_fail@plt+0xe100>
   1f620:	ldr	r3, [fp, #-8]
   1f624:	ldr	r2, [r3, #80]	; 0x50
   1f628:	mov	r1, #1
   1f62c:	ldr	r3, [fp, #-16]
   1f630:	lsl	r3, r1, r3
   1f634:	mvn	r3, r3
   1f638:	and	r2, r2, r3
   1f63c:	ldr	r3, [fp, #-8]
   1f640:	str	r2, [r3, #80]	; 0x50
   1f644:	mov	r3, #0
   1f648:	mov	r0, r3
   1f64c:	add	sp, fp, #0
   1f650:	pop	{fp}		; (ldr fp, [sp], #4)
   1f654:	bx	lr
   1f658:	push	{fp, lr}
   1f65c:	add	fp, sp, #4
   1f660:	sub	sp, sp, #16
   1f664:	str	r0, [fp, #-16]
   1f668:	str	r1, [fp, #-20]	; 0xffffffec
   1f66c:	ldr	r3, [fp, #-16]
   1f670:	str	r3, [fp, #-8]
   1f674:	mov	r3, #0
   1f678:	str	r3, [fp, #-12]
   1f67c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f680:	ldr	r3, [r3, #4]
   1f684:	cmp	r3, #0
   1f688:	beq	1f6e4 <__assert_fail@plt+0xe1a0>
   1f68c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f690:	ldr	r3, [r3, #4]
   1f694:	ldrb	r3, [r3, #24]
   1f698:	cmp	r3, #17
   1f69c:	bne	1f6e4 <__assert_fail@plt+0xe1a0>
   1f6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6a4:	ldr	r2, [r3, #4]
   1f6a8:	sub	r3, fp, #12
   1f6ac:	ldr	r1, [fp, #-8]
   1f6b0:	mov	r0, r3
   1f6b4:	bl	1f75c <__assert_fail@plt+0xe218>
   1f6b8:	mov	r2, r0
   1f6bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6c0:	str	r2, [r3, #4]
   1f6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6c8:	ldr	r3, [r3, #4]
   1f6cc:	cmp	r3, #0
   1f6d0:	beq	1f6e4 <__assert_fail@plt+0xe1a0>
   1f6d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6d8:	ldr	r3, [r3, #4]
   1f6dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f6e0:	str	r2, [r3]
   1f6e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6e8:	ldr	r3, [r3, #8]
   1f6ec:	cmp	r3, #0
   1f6f0:	beq	1f74c <__assert_fail@plt+0xe208>
   1f6f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6f8:	ldr	r3, [r3, #8]
   1f6fc:	ldrb	r3, [r3, #24]
   1f700:	cmp	r3, #17
   1f704:	bne	1f74c <__assert_fail@plt+0xe208>
   1f708:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f70c:	ldr	r2, [r3, #8]
   1f710:	sub	r3, fp, #12
   1f714:	ldr	r1, [fp, #-8]
   1f718:	mov	r0, r3
   1f71c:	bl	1f75c <__assert_fail@plt+0xe218>
   1f720:	mov	r2, r0
   1f724:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f728:	str	r2, [r3, #8]
   1f72c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f730:	ldr	r3, [r3, #8]
   1f734:	cmp	r3, #0
   1f738:	beq	1f74c <__assert_fail@plt+0xe208>
   1f73c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f740:	ldr	r3, [r3, #8]
   1f744:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f748:	str	r2, [r3]
   1f74c:	ldr	r3, [fp, #-12]
   1f750:	mov	r0, r3
   1f754:	sub	sp, fp, #4
   1f758:	pop	{fp, pc}
   1f75c:	push	{fp, lr}
   1f760:	add	fp, sp, #4
   1f764:	sub	sp, sp, #40	; 0x28
   1f768:	str	r0, [fp, #-32]	; 0xffffffe0
   1f76c:	str	r1, [fp, #-36]	; 0xffffffdc
   1f770:	str	r2, [fp, #-40]	; 0xffffffd8
   1f774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f778:	ldr	r3, [r3]
   1f77c:	str	r3, [fp, #-8]
   1f780:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f784:	ldr	r3, [r3, #4]
   1f788:	str	r3, [fp, #-12]
   1f78c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f790:	ldrb	r3, [r3, #28]
   1f794:	and	r3, r3, #16
   1f798:	uxtb	r3, r3
   1f79c:	cmp	r3, #0
   1f7a0:	beq	1f7f0 <__assert_fail@plt+0xe2ac>
   1f7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7a8:	ldr	r3, [r3, #4]
   1f7ac:	cmp	r3, #0
   1f7b0:	beq	1f7f0 <__assert_fail@plt+0xe2ac>
   1f7b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7b8:	ldr	r3, [r3, #20]
   1f7bc:	cmp	r3, #31
   1f7c0:	bgt	1f7e4 <__assert_fail@plt+0xe2a0>
   1f7c4:	ldr	r3, [fp, #-8]
   1f7c8:	ldr	r2, [r3, #80]	; 0x50
   1f7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7d0:	ldr	r3, [r3, #20]
   1f7d4:	lsr	r3, r2, r3
   1f7d8:	and	r3, r3, #1
   1f7dc:	cmp	r3, #0
   1f7e0:	bne	1f7f0 <__assert_fail@plt+0xe2ac>
   1f7e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f7e8:	ldr	r3, [r3, #4]
   1f7ec:	b	1f9a0 <__assert_fail@plt+0xe45c>
   1f7f0:	mov	r3, #8
   1f7f4:	mov	r2, #0
   1f7f8:	mov	r1, #0
   1f7fc:	ldr	r0, [fp, #-8]
   1f800:	bl	25964 <__assert_fail@plt+0x14420>
   1f804:	str	r0, [fp, #-16]
   1f808:	mov	r3, #9
   1f80c:	mov	r2, #0
   1f810:	mov	r1, #0
   1f814:	ldr	r0, [fp, #-8]
   1f818:	bl	25964 <__assert_fail@plt+0x14420>
   1f81c:	str	r0, [fp, #-20]	; 0xffffffec
   1f820:	ldr	r3, [fp, #-12]
   1f824:	cmp	r3, #0
   1f828:	beq	1f848 <__assert_fail@plt+0xe304>
   1f82c:	mov	r3, #16
   1f830:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f834:	ldr	r1, [fp, #-12]
   1f838:	ldr	r0, [fp, #-8]
   1f83c:	bl	25964 <__assert_fail@plt+0x14420>
   1f840:	mov	r3, r0
   1f844:	b	1f84c <__assert_fail@plt+0xe308>
   1f848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f84c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f850:	mov	r3, #16
   1f854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f858:	ldr	r1, [fp, #-16]
   1f85c:	ldr	r0, [fp, #-8]
   1f860:	bl	25964 <__assert_fail@plt+0x14420>
   1f864:	str	r0, [fp, #-28]	; 0xffffffe4
   1f868:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f86c:	cmp	r3, #0
   1f870:	moveq	r3, #1
   1f874:	movne	r3, #0
   1f878:	uxtb	r3, r3
   1f87c:	cmp	r3, #0
   1f880:	bne	1f8a0 <__assert_fail@plt+0xe35c>
   1f884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f888:	cmp	r3, #0
   1f88c:	moveq	r3, #1
   1f890:	movne	r3, #0
   1f894:	uxtb	r3, r3
   1f898:	cmp	r3, #0
   1f89c:	beq	1f8a8 <__assert_fail@plt+0xe364>
   1f8a0:	mov	r3, #1
   1f8a4:	b	1f8ac <__assert_fail@plt+0xe368>
   1f8a8:	mov	r3, #0
   1f8ac:	cmp	r3, #0
   1f8b0:	bne	1f8d0 <__assert_fail@plt+0xe38c>
   1f8b4:	ldr	r3, [fp, #-16]
   1f8b8:	cmp	r3, #0
   1f8bc:	moveq	r3, #1
   1f8c0:	movne	r3, #0
   1f8c4:	uxtb	r3, r3
   1f8c8:	cmp	r3, #0
   1f8cc:	beq	1f8d8 <__assert_fail@plt+0xe394>
   1f8d0:	mov	r3, #1
   1f8d4:	b	1f8dc <__assert_fail@plt+0xe398>
   1f8d8:	mov	r3, #0
   1f8dc:	cmp	r3, #0
   1f8e0:	bne	1f900 <__assert_fail@plt+0xe3bc>
   1f8e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f8e8:	cmp	r3, #0
   1f8ec:	moveq	r3, #1
   1f8f0:	movne	r3, #0
   1f8f4:	uxtb	r3, r3
   1f8f8:	cmp	r3, #0
   1f8fc:	beq	1f914 <__assert_fail@plt+0xe3d0>
   1f900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f904:	mov	r2, #12
   1f908:	str	r2, [r3]
   1f90c:	mov	r3, #0
   1f910:	b	1f9a0 <__assert_fail@plt+0xe45c>
   1f914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f918:	ldr	r2, [r3, #20]
   1f91c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f920:	str	r2, [r3, #20]
   1f924:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f928:	ldr	r2, [r3, #20]
   1f92c:	ldr	r3, [fp, #-16]
   1f930:	str	r2, [r3, #20]
   1f934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f938:	ldrb	r3, [r3, #26]
   1f93c:	lsr	r3, r3, #3
   1f940:	and	r3, r3, #1
   1f944:	uxtb	r3, r3
   1f948:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f94c:	ldrb	r2, [r1, #26]
   1f950:	and	r3, r3, #1
   1f954:	bic	r2, r2, #8
   1f958:	lsl	r3, r3, #3
   1f95c:	orr	r3, r3, r2
   1f960:	mov	r2, r3
   1f964:	strb	r2, [r1, #26]
   1f968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f96c:	ldrb	r3, [r3, #26]
   1f970:	lsr	r3, r3, #3
   1f974:	and	r3, r3, #1
   1f978:	uxtb	r3, r3
   1f97c:	ldr	r1, [fp, #-16]
   1f980:	ldrb	r2, [r1, #26]
   1f984:	and	r3, r3, #1
   1f988:	bic	r2, r2, #8
   1f98c:	lsl	r3, r3, #3
   1f990:	orr	r3, r3, r2
   1f994:	mov	r2, r3
   1f998:	strb	r2, [r1, #26]
   1f99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f9a0:	mov	r0, r3
   1f9a4:	sub	sp, fp, #4
   1f9a8:	pop	{fp, pc}
   1f9ac:	push	{fp, lr}
   1f9b0:	add	fp, sp, #4
   1f9b4:	sub	sp, sp, #16
   1f9b8:	str	r0, [fp, #-16]
   1f9bc:	str	r1, [fp, #-20]	; 0xffffffec
   1f9c0:	ldr	r3, [fp, #-16]
   1f9c4:	str	r3, [fp, #-8]
   1f9c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9cc:	ldrb	r3, [r3, #24]
   1f9d0:	cmp	r3, #16
   1f9d4:	bne	1fa04 <__assert_fail@plt+0xe4c0>
   1f9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9dc:	ldr	r3, [r3, #4]
   1f9e0:	ldr	r2, [r3, #12]
   1f9e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9e8:	str	r2, [r3, #12]
   1f9ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9f0:	ldr	r3, [r3, #4]
   1f9f4:	ldr	r2, [r3, #28]
   1f9f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f9fc:	str	r2, [r3, #28]
   1fa00:	b	1fab8 <__assert_fail@plt+0xe574>
   1fa04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fa0c:	str	r2, [r3, #12]
   1fa10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa14:	add	r3, r3, #20
   1fa18:	ldm	r3, {r1, r2}
   1fa1c:	ldr	r0, [fp, #-8]
   1fa20:	bl	1bc64 <__assert_fail@plt+0xa720>
   1fa24:	mov	r2, r0
   1fa28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa2c:	str	r2, [r3, #28]
   1fa30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa34:	ldr	r3, [r3, #28]
   1fa38:	cmn	r3, #1
   1fa3c:	moveq	r3, #1
   1fa40:	movne	r3, #0
   1fa44:	uxtb	r3, r3
   1fa48:	cmp	r3, #0
   1fa4c:	beq	1fa58 <__assert_fail@plt+0xe514>
   1fa50:	mov	r3, #12
   1fa54:	b	1fabc <__assert_fail@plt+0xe578>
   1fa58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa5c:	ldrb	r3, [r3, #24]
   1fa60:	cmp	r3, #12
   1fa64:	bne	1fab8 <__assert_fail@plt+0xe574>
   1fa68:	ldr	r3, [fp, #-8]
   1fa6c:	ldr	r2, [r3]
   1fa70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa74:	ldr	r3, [r3, #28]
   1fa78:	lsl	r3, r3, #3
   1fa7c:	add	r0, r2, r3
   1fa80:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa84:	ldr	r3, [r3, #20]
   1fa88:	uxth	r3, r3
   1fa8c:	lsl	r3, r3, #22
   1fa90:	lsr	r3, r3, #22
   1fa94:	uxth	r1, r3
   1fa98:	ldr	r2, [r0, #4]
   1fa9c:	ldr	r3, [pc, #36]	; 1fac8 <__assert_fail@plt+0xe584>
   1faa0:	and	r1, r1, r3
   1faa4:	lsl	r3, r3, #8
   1faa8:	bic	r3, r2, r3
   1faac:	lsl	r1, r1, #8
   1fab0:	orr	r2, r1, r3
   1fab4:	str	r2, [r0, #4]
   1fab8:	mov	r3, #0
   1fabc:	mov	r0, r3
   1fac0:	sub	sp, fp, #4
   1fac4:	pop	{fp, pc}
   1fac8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1facc:	push	{fp}		; (str fp, [sp, #-4]!)
   1fad0:	add	fp, sp, #0
   1fad4:	sub	sp, sp, #12
   1fad8:	str	r0, [fp, #-8]
   1fadc:	str	r1, [fp, #-12]
   1fae0:	ldr	r3, [fp, #-12]
   1fae4:	ldrb	r3, [r3, #24]
   1fae8:	cmp	r3, #11
   1faec:	beq	1fafc <__assert_fail@plt+0xe5b8>
   1faf0:	cmp	r3, #16
   1faf4:	beq	1fb10 <__assert_fail@plt+0xe5cc>
   1faf8:	b	1fb40 <__assert_fail@plt+0xe5fc>
   1fafc:	ldr	r3, [fp, #-12]
   1fb00:	ldr	r3, [r3, #4]
   1fb04:	ldr	r2, [fp, #-12]
   1fb08:	str	r2, [r3, #16]
   1fb0c:	b	1fb8c <__assert_fail@plt+0xe648>
   1fb10:	ldr	r3, [fp, #-12]
   1fb14:	ldr	r3, [r3, #4]
   1fb18:	ldr	r2, [fp, #-12]
   1fb1c:	ldr	r2, [r2, #8]
   1fb20:	ldr	r2, [r2, #12]
   1fb24:	str	r2, [r3, #16]
   1fb28:	ldr	r3, [fp, #-12]
   1fb2c:	ldr	r3, [r3, #8]
   1fb30:	ldr	r2, [fp, #-12]
   1fb34:	ldr	r2, [r2, #16]
   1fb38:	str	r2, [r3, #16]
   1fb3c:	b	1fb8c <__assert_fail@plt+0xe648>
   1fb40:	ldr	r3, [fp, #-12]
   1fb44:	ldr	r3, [r3, #4]
   1fb48:	cmp	r3, #0
   1fb4c:	beq	1fb64 <__assert_fail@plt+0xe620>
   1fb50:	ldr	r3, [fp, #-12]
   1fb54:	ldr	r3, [r3, #4]
   1fb58:	ldr	r2, [fp, #-12]
   1fb5c:	ldr	r2, [r2, #16]
   1fb60:	str	r2, [r3, #16]
   1fb64:	ldr	r3, [fp, #-12]
   1fb68:	ldr	r3, [r3, #8]
   1fb6c:	cmp	r3, #0
   1fb70:	beq	1fb88 <__assert_fail@plt+0xe644>
   1fb74:	ldr	r3, [fp, #-12]
   1fb78:	ldr	r3, [r3, #8]
   1fb7c:	ldr	r2, [fp, #-12]
   1fb80:	ldr	r2, [r2, #16]
   1fb84:	str	r2, [r3, #16]
   1fb88:	nop			; (mov r0, r0)
   1fb8c:	mov	r3, #0
   1fb90:	mov	r0, r3
   1fb94:	add	sp, fp, #0
   1fb98:	pop	{fp}		; (ldr fp, [sp], #4)
   1fb9c:	bx	lr
   1fba0:	push	{fp, lr}
   1fba4:	add	fp, sp, #4
   1fba8:	sub	sp, sp, #32
   1fbac:	str	r0, [fp, #-32]	; 0xffffffe0
   1fbb0:	str	r1, [fp, #-36]	; 0xffffffdc
   1fbb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbb8:	str	r3, [fp, #-20]	; 0xffffffec
   1fbbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fbc0:	ldr	r3, [r3, #28]
   1fbc4:	str	r3, [fp, #-24]	; 0xffffffe8
   1fbc8:	mov	r3, #0
   1fbcc:	str	r3, [fp, #-8]
   1fbd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fbd4:	ldrb	r3, [r3, #24]
   1fbd8:	sub	r3, r3, #2
   1fbdc:	cmp	r3, #14
   1fbe0:	ldrls	pc, [pc, r3, lsl #2]
   1fbe4:	b	1fdb8 <__assert_fail@plt+0xe874>
   1fbe8:	andeq	pc, r1, r4, lsr #24
   1fbec:			; <UNDEFINED> instruction: 0x0001fdb8
   1fbf0:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   1fbf4:			; <UNDEFINED> instruction: 0x0001fdb8
   1fbf8:			; <UNDEFINED> instruction: 0x0001fdb8
   1fbfc:			; <UNDEFINED> instruction: 0x0001fdb8
   1fc00:	strdeq	pc, [r1], -ip
   1fc04:	strdeq	pc, [r1], -ip
   1fc08:	andeq	pc, r1, r4, lsr ip	; <UNPREDICTABLE>
   1fc0c:	andeq	pc, r1, r4, lsr ip	; <UNPREDICTABLE>
   1fc10:	strdeq	pc, [r1], -ip
   1fc14:			; <UNDEFINED> instruction: 0x0001fdb8
   1fc18:			; <UNDEFINED> instruction: 0x0001fdb8
   1fc1c:			; <UNDEFINED> instruction: 0x0001fdb8
   1fc20:	strdeq	pc, [r1], -r0
   1fc24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc28:	ldr	r3, [r3, #16]
   1fc2c:	cmp	r3, #0
   1fc30:	b	1fdfc <__assert_fail@plt+0xe8b8>
   1fc34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc38:	ldrb	r3, [r2, #88]	; 0x58
   1fc3c:	orr	r3, r3, #1
   1fc40:	strb	r3, [r2, #88]	; 0x58
   1fc44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc48:	ldr	r3, [r3, #4]
   1fc4c:	cmp	r3, #0
   1fc50:	beq	1fc6c <__assert_fail@plt+0xe728>
   1fc54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc58:	ldr	r3, [r3, #4]
   1fc5c:	ldr	r3, [r3, #12]
   1fc60:	ldr	r3, [r3, #28]
   1fc64:	str	r3, [fp, #-12]
   1fc68:	b	1fc7c <__assert_fail@plt+0xe738>
   1fc6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc70:	ldr	r3, [r3, #16]
   1fc74:	ldr	r3, [r3, #28]
   1fc78:	str	r3, [fp, #-12]
   1fc7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc80:	ldr	r3, [r3, #8]
   1fc84:	cmp	r3, #0
   1fc88:	beq	1fca4 <__assert_fail@plt+0xe760>
   1fc8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fc90:	ldr	r3, [r3, #8]
   1fc94:	ldr	r3, [r3, #12]
   1fc98:	ldr	r3, [r3, #28]
   1fc9c:	str	r3, [fp, #-16]
   1fca0:	b	1fcb4 <__assert_fail@plt+0xe770>
   1fca4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fca8:	ldr	r3, [r3, #16]
   1fcac:	ldr	r3, [r3, #28]
   1fcb0:	str	r3, [fp, #-16]
   1fcb4:	ldr	r3, [fp, #-12]
   1fcb8:	cmp	r3, #0
   1fcbc:	ldr	r3, [fp, #-16]
   1fcc0:	cmp	r3, #0
   1fcc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fcc8:	ldr	r1, [r3, #20]
   1fccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fcd0:	mov	r3, r2
   1fcd4:	lsl	r3, r3, #1
   1fcd8:	add	r3, r3, r2
   1fcdc:	lsl	r3, r3, #2
   1fce0:	add	r3, r1, r3
   1fce4:	ldr	r2, [fp, #-16]
   1fce8:	ldr	r1, [fp, #-12]
   1fcec:	mov	r0, r3
   1fcf0:	bl	1a84c <__assert_fail@plt+0x9308>
   1fcf4:	str	r0, [fp, #-8]
   1fcf8:	b	1fdfc <__assert_fail@plt+0xe8b8>
   1fcfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd00:	ldr	r1, [r3, #20]
   1fd04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd08:	mov	r3, r2
   1fd0c:	lsl	r3, r3, #1
   1fd10:	add	r3, r3, r2
   1fd14:	lsl	r3, r3, #2
   1fd18:	add	r2, r1, r3
   1fd1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd20:	ldr	r3, [r3, #16]
   1fd24:	ldr	r3, [r3, #28]
   1fd28:	mov	r1, r3
   1fd2c:	mov	r0, r2
   1fd30:	bl	1a7a4 <__assert_fail@plt+0x9260>
   1fd34:	str	r0, [fp, #-8]
   1fd38:	b	1fdfc <__assert_fail@plt+0xe8b8>
   1fd3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd40:	ldr	r2, [r3, #12]
   1fd44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fd48:	lsl	r3, r3, #2
   1fd4c:	add	r3, r2, r3
   1fd50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fd54:	ldr	r2, [r2, #16]
   1fd58:	ldr	r2, [r2, #28]
   1fd5c:	str	r2, [r3]
   1fd60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fd64:	ldrb	r3, [r3, #24]
   1fd68:	cmp	r3, #4
   1fd6c:	bne	1fdf8 <__assert_fail@plt+0xe8b4>
   1fd70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd74:	ldr	r1, [r3, #20]
   1fd78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd7c:	mov	r3, r2
   1fd80:	lsl	r3, r3, #1
   1fd84:	add	r3, r3, r2
   1fd88:	lsl	r3, r3, #2
   1fd8c:	add	r0, r1, r3
   1fd90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd94:	ldr	r2, [r3, #12]
   1fd98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fd9c:	lsl	r3, r3, #2
   1fda0:	add	r3, r2, r3
   1fda4:	ldr	r3, [r3]
   1fda8:	mov	r1, r3
   1fdac:	bl	1a7a4 <__assert_fail@plt+0x9260>
   1fdb0:	str	r0, [fp, #-8]
   1fdb4:	b	1fdf8 <__assert_fail@plt+0xe8b4>
   1fdb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1fdbc:	ldrb	r3, [r3, #24]
   1fdc0:	and	r3, r3, #8
   1fdc4:	cmp	r3, #0
   1fdc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdcc:	ldr	r2, [r3, #12]
   1fdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fdd4:	lsl	r3, r3, #2
   1fdd8:	add	r3, r2, r3
   1fddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fde0:	ldr	r2, [r2, #16]
   1fde4:	ldr	r2, [r2, #28]
   1fde8:	str	r2, [r3]
   1fdec:	b	1fdfc <__assert_fail@plt+0xe8b8>
   1fdf0:	nop			; (mov r0, r0)
   1fdf4:	b	1fdfc <__assert_fail@plt+0xe8b8>
   1fdf8:	nop			; (mov r0, r0)
   1fdfc:	ldr	r3, [fp, #-8]
   1fe00:	mov	r0, r3
   1fe04:	sub	sp, fp, #4
   1fe08:	pop	{fp, pc}
   1fe0c:	push	{fp, lr}
   1fe10:	add	fp, sp, #4
   1fe14:	sub	sp, sp, #56	; 0x38
   1fe18:	str	r0, [fp, #-40]	; 0xffffffd8
   1fe1c:	str	r1, [fp, #-44]	; 0xffffffd4
   1fe20:	str	r2, [fp, #-48]	; 0xffffffd0
   1fe24:	str	r3, [fp, #-52]	; 0xffffffcc
   1fe28:	ldr	r3, [fp, #4]
   1fe2c:	str	r3, [fp, #-16]
   1fe30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fe34:	str	r3, [fp, #-8]
   1fe38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fe3c:	str	r3, [fp, #-12]
   1fe40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fe44:	ldr	r2, [r3]
   1fe48:	ldr	r3, [fp, #-8]
   1fe4c:	lsl	r3, r3, #3
   1fe50:	add	r3, r2, r3
   1fe54:	ldrb	r3, [r3, #4]
   1fe58:	cmp	r3, #4
   1fe5c:	bne	1ff5c <__assert_fail@plt+0xea18>
   1fe60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fe64:	ldr	r2, [r3, #12]
   1fe68:	ldr	r3, [fp, #-8]
   1fe6c:	lsl	r3, r3, #2
   1fe70:	add	r3, r2, r3
   1fe74:	ldr	r3, [r3]
   1fe78:	str	r3, [fp, #-20]	; 0xffffffec
   1fe7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fe80:	ldr	r1, [r3, #20]
   1fe84:	ldr	r2, [fp, #-12]
   1fe88:	mov	r3, r2
   1fe8c:	lsl	r3, r3, #1
   1fe90:	add	r3, r3, r2
   1fe94:	lsl	r3, r3, #2
   1fe98:	add	r3, r1, r3
   1fe9c:	mov	r2, #0
   1fea0:	str	r2, [r3, #4]
   1fea4:	ldr	r2, [fp, #-16]
   1fea8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1feac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1feb0:	bl	204bc <__assert_fail@plt+0xef78>
   1feb4:	str	r0, [fp, #-24]	; 0xffffffe8
   1feb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1febc:	cmn	r3, #1
   1fec0:	moveq	r3, #1
   1fec4:	movne	r3, #0
   1fec8:	uxtb	r3, r3
   1fecc:	cmp	r3, #0
   1fed0:	beq	1fedc <__assert_fail@plt+0xe998>
   1fed4:	mov	r3, #12
   1fed8:	b	203cc <__assert_fail@plt+0xee88>
   1fedc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fee0:	ldr	r2, [r3, #12]
   1fee4:	ldr	r3, [fp, #-12]
   1fee8:	lsl	r3, r3, #2
   1feec:	add	r3, r2, r3
   1fef0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1fef4:	ldr	r1, [r2, #12]
   1fef8:	ldr	r2, [fp, #-8]
   1fefc:	lsl	r2, r2, #2
   1ff00:	add	r2, r1, r2
   1ff04:	ldr	r2, [r2]
   1ff08:	str	r2, [r3]
   1ff0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ff10:	ldr	r1, [r3, #20]
   1ff14:	ldr	r2, [fp, #-12]
   1ff18:	mov	r3, r2
   1ff1c:	lsl	r3, r3, #1
   1ff20:	add	r3, r3, r2
   1ff24:	lsl	r3, r3, #2
   1ff28:	add	r3, r1, r3
   1ff2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff30:	mov	r0, r3
   1ff34:	bl	1b6b4 <__assert_fail@plt+0xa170>
   1ff38:	mov	r3, r0
   1ff3c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1ff40:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1ff44:	eor	r3, r3, #1
   1ff48:	uxtb	r3, r3
   1ff4c:	cmp	r3, #0
   1ff50:	beq	203b0 <__assert_fail@plt+0xee6c>
   1ff54:	mov	r3, #12
   1ff58:	b	203cc <__assert_fail@plt+0xee88>
   1ff5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ff60:	ldr	r1, [r3, #20]
   1ff64:	ldr	r2, [fp, #-8]
   1ff68:	mov	r3, r2
   1ff6c:	lsl	r3, r3, #1
   1ff70:	add	r3, r3, r2
   1ff74:	lsl	r3, r3, #2
   1ff78:	add	r3, r1, r3
   1ff7c:	ldr	r3, [r3, #4]
   1ff80:	cmp	r3, #0
   1ff84:	bne	1ffbc <__assert_fail@plt+0xea78>
   1ff88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ff8c:	ldr	r2, [r3, #12]
   1ff90:	ldr	r3, [fp, #-12]
   1ff94:	lsl	r3, r3, #2
   1ff98:	add	r3, r2, r3
   1ff9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ffa0:	ldr	r1, [r2, #12]
   1ffa4:	ldr	r2, [fp, #-8]
   1ffa8:	lsl	r2, r2, #2
   1ffac:	add	r2, r1, r2
   1ffb0:	ldr	r2, [r2]
   1ffb4:	str	r2, [r3]
   1ffb8:	b	203c8 <__assert_fail@plt+0xee84>
   1ffbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffc0:	ldr	r1, [r3, #20]
   1ffc4:	ldr	r2, [fp, #-8]
   1ffc8:	mov	r3, r2
   1ffcc:	lsl	r3, r3, #1
   1ffd0:	add	r3, r3, r2
   1ffd4:	lsl	r3, r3, #2
   1ffd8:	add	r3, r1, r3
   1ffdc:	ldr	r3, [r3, #4]
   1ffe0:	cmp	r3, #1
   1ffe4:	bne	2016c <__assert_fail@plt+0xec28>
   1ffe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffec:	ldr	r1, [r3, #20]
   1fff0:	ldr	r2, [fp, #-8]
   1fff4:	mov	r3, r2
   1fff8:	lsl	r3, r3, #1
   1fffc:	add	r3, r3, r2
   20000:	lsl	r3, r3, #2
   20004:	add	r3, r1, r3
   20008:	ldr	r3, [r3, #8]
   2000c:	ldr	r3, [r3]
   20010:	str	r3, [fp, #-20]	; 0xffffffec
   20014:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20018:	ldr	r1, [r3, #20]
   2001c:	ldr	r2, [fp, #-12]
   20020:	mov	r3, r2
   20024:	lsl	r3, r3, #1
   20028:	add	r3, r3, r2
   2002c:	lsl	r3, r3, #2
   20030:	add	r3, r1, r3
   20034:	mov	r2, #0
   20038:	str	r2, [r3, #4]
   2003c:	ldr	r2, [fp, #-8]
   20040:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20044:	cmp	r2, r3
   20048:	bne	200ac <__assert_fail@plt+0xeb68>
   2004c:	ldr	r2, [fp, #-12]
   20050:	ldr	r3, [fp, #-8]
   20054:	cmp	r2, r3
   20058:	beq	200ac <__assert_fail@plt+0xeb68>
   2005c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20060:	ldr	r1, [r3, #20]
   20064:	ldr	r2, [fp, #-12]
   20068:	mov	r3, r2
   2006c:	lsl	r3, r3, #1
   20070:	add	r3, r3, r2
   20074:	lsl	r3, r3, #2
   20078:	add	r3, r1, r3
   2007c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20080:	mov	r0, r3
   20084:	bl	1b6b4 <__assert_fail@plt+0xa170>
   20088:	mov	r3, r0
   2008c:	strb	r3, [fp, #-25]	; 0xffffffe7
   20090:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20094:	eor	r3, r3, #1
   20098:	uxtb	r3, r3
   2009c:	cmp	r3, #0
   200a0:	beq	203c4 <__assert_fail@plt+0xee80>
   200a4:	mov	r3, #12
   200a8:	b	203cc <__assert_fail@plt+0xee88>
   200ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   200b0:	ldr	r2, [r3]
   200b4:	ldr	r3, [fp, #-8]
   200b8:	lsl	r3, r3, #3
   200bc:	add	r3, r2, r3
   200c0:	ldr	r3, [r3, #4]
   200c4:	lsr	r3, r3, #8
   200c8:	lsl	r3, r3, #22
   200cc:	lsr	r3, r3, #22
   200d0:	uxth	r3, r3
   200d4:	mov	r2, r3
   200d8:	ldr	r3, [fp, #-16]
   200dc:	orr	r3, r3, r2
   200e0:	str	r3, [fp, #-16]
   200e4:	ldr	r2, [fp, #-16]
   200e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   200ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   200f0:	bl	204bc <__assert_fail@plt+0xef78>
   200f4:	str	r0, [fp, #-24]	; 0xffffffe8
   200f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200fc:	cmn	r3, #1
   20100:	moveq	r3, #1
   20104:	movne	r3, #0
   20108:	uxtb	r3, r3
   2010c:	cmp	r3, #0
   20110:	beq	2011c <__assert_fail@plt+0xebd8>
   20114:	mov	r3, #12
   20118:	b	203cc <__assert_fail@plt+0xee88>
   2011c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20120:	ldr	r1, [r3, #20]
   20124:	ldr	r2, [fp, #-12]
   20128:	mov	r3, r2
   2012c:	lsl	r3, r3, #1
   20130:	add	r3, r3, r2
   20134:	lsl	r3, r3, #2
   20138:	add	r3, r1, r3
   2013c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20140:	mov	r0, r3
   20144:	bl	1b6b4 <__assert_fail@plt+0xa170>
   20148:	mov	r3, r0
   2014c:	strb	r3, [fp, #-25]	; 0xffffffe7
   20150:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20154:	eor	r3, r3, #1
   20158:	uxtb	r3, r3
   2015c:	cmp	r3, #0
   20160:	beq	203b0 <__assert_fail@plt+0xee6c>
   20164:	mov	r3, #12
   20168:	b	203cc <__assert_fail@plt+0xee88>
   2016c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20170:	ldr	r1, [r3, #20]
   20174:	ldr	r2, [fp, #-8]
   20178:	mov	r3, r2
   2017c:	lsl	r3, r3, #1
   20180:	add	r3, r3, r2
   20184:	lsl	r3, r3, #2
   20188:	add	r3, r1, r3
   2018c:	ldr	r3, [r3, #8]
   20190:	ldr	r3, [r3]
   20194:	str	r3, [fp, #-20]	; 0xffffffec
   20198:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2019c:	ldr	r1, [r3, #20]
   201a0:	ldr	r2, [fp, #-12]
   201a4:	mov	r3, r2
   201a8:	lsl	r3, r3, #1
   201ac:	add	r3, r3, r2
   201b0:	lsl	r3, r3, #2
   201b4:	add	r3, r1, r3
   201b8:	mov	r2, #0
   201bc:	str	r2, [r3, #4]
   201c0:	ldr	r2, [fp, #-16]
   201c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   201c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   201cc:	bl	203d8 <__assert_fail@plt+0xee94>
   201d0:	str	r0, [fp, #-24]	; 0xffffffe8
   201d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   201d8:	cmn	r3, #1
   201dc:	bne	202ac <__assert_fail@plt+0xed68>
   201e0:	ldr	r2, [fp, #-16]
   201e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   201e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   201ec:	bl	204bc <__assert_fail@plt+0xef78>
   201f0:	str	r0, [fp, #-24]	; 0xffffffe8
   201f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   201f8:	cmn	r3, #1
   201fc:	moveq	r3, #1
   20200:	movne	r3, #0
   20204:	uxtb	r3, r3
   20208:	cmp	r3, #0
   2020c:	beq	20218 <__assert_fail@plt+0xecd4>
   20210:	mov	r3, #12
   20214:	b	203cc <__assert_fail@plt+0xee88>
   20218:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2021c:	ldr	r1, [r3, #20]
   20220:	ldr	r2, [fp, #-12]
   20224:	mov	r3, r2
   20228:	lsl	r3, r3, #1
   2022c:	add	r3, r3, r2
   20230:	lsl	r3, r3, #2
   20234:	add	r3, r1, r3
   20238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2023c:	mov	r0, r3
   20240:	bl	1b6b4 <__assert_fail@plt+0xa170>
   20244:	mov	r3, r0
   20248:	strb	r3, [fp, #-25]	; 0xffffffe7
   2024c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20250:	eor	r3, r3, #1
   20254:	uxtb	r3, r3
   20258:	cmp	r3, #0
   2025c:	beq	20268 <__assert_fail@plt+0xed24>
   20260:	mov	r3, #12
   20264:	b	203cc <__assert_fail@plt+0xee88>
   20268:	ldr	r3, [fp, #-16]
   2026c:	str	r3, [sp]
   20270:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20278:	ldr	r1, [fp, #-20]	; 0xffffffec
   2027c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20280:	bl	1fe0c <__assert_fail@plt+0xe8c8>
   20284:	str	r0, [fp, #-32]	; 0xffffffe0
   20288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2028c:	cmp	r3, #0
   20290:	movne	r3, #1
   20294:	moveq	r3, #0
   20298:	uxtb	r3, r3
   2029c:	cmp	r3, #0
   202a0:	beq	202fc <__assert_fail@plt+0xedb8>
   202a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   202a8:	b	203cc <__assert_fail@plt+0xee88>
   202ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   202b0:	ldr	r1, [r3, #20]
   202b4:	ldr	r2, [fp, #-12]
   202b8:	mov	r3, r2
   202bc:	lsl	r3, r3, #1
   202c0:	add	r3, r3, r2
   202c4:	lsl	r3, r3, #2
   202c8:	add	r3, r1, r3
   202cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   202d0:	mov	r0, r3
   202d4:	bl	1b6b4 <__assert_fail@plt+0xa170>
   202d8:	mov	r3, r0
   202dc:	strb	r3, [fp, #-25]	; 0xffffffe7
   202e0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   202e4:	eor	r3, r3, #1
   202e8:	uxtb	r3, r3
   202ec:	cmp	r3, #0
   202f0:	beq	202fc <__assert_fail@plt+0xedb8>
   202f4:	mov	r3, #12
   202f8:	b	203cc <__assert_fail@plt+0xee88>
   202fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20300:	ldr	r1, [r3, #20]
   20304:	ldr	r2, [fp, #-8]
   20308:	mov	r3, r2
   2030c:	lsl	r3, r3, #1
   20310:	add	r3, r3, r2
   20314:	lsl	r3, r3, #2
   20318:	add	r3, r1, r3
   2031c:	ldr	r3, [r3, #8]
   20320:	ldr	r3, [r3, #4]
   20324:	str	r3, [fp, #-20]	; 0xffffffec
   20328:	ldr	r2, [fp, #-16]
   2032c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20330:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20334:	bl	204bc <__assert_fail@plt+0xef78>
   20338:	str	r0, [fp, #-24]	; 0xffffffe8
   2033c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20340:	cmn	r3, #1
   20344:	moveq	r3, #1
   20348:	movne	r3, #0
   2034c:	uxtb	r3, r3
   20350:	cmp	r3, #0
   20354:	beq	20360 <__assert_fail@plt+0xee1c>
   20358:	mov	r3, #12
   2035c:	b	203cc <__assert_fail@plt+0xee88>
   20360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20364:	ldr	r1, [r3, #20]
   20368:	ldr	r2, [fp, #-12]
   2036c:	mov	r3, r2
   20370:	lsl	r3, r3, #1
   20374:	add	r3, r3, r2
   20378:	lsl	r3, r3, #2
   2037c:	add	r3, r1, r3
   20380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20384:	mov	r0, r3
   20388:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2038c:	mov	r3, r0
   20390:	strb	r3, [fp, #-25]	; 0xffffffe7
   20394:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20398:	eor	r3, r3, #1
   2039c:	uxtb	r3, r3
   203a0:	cmp	r3, #0
   203a4:	beq	203b0 <__assert_fail@plt+0xee6c>
   203a8:	mov	r3, #12
   203ac:	b	203cc <__assert_fail@plt+0xee88>
   203b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   203b4:	str	r3, [fp, #-8]
   203b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203bc:	str	r3, [fp, #-12]
   203c0:	b	1fe40 <__assert_fail@plt+0xe8fc>
   203c4:	nop			; (mov r0, r0)
   203c8:	mov	r3, #0
   203cc:	mov	r0, r3
   203d0:	sub	sp, fp, #4
   203d4:	pop	{fp, pc}
   203d8:	push	{fp}		; (str fp, [sp, #-4]!)
   203dc:	add	fp, sp, #0
   203e0:	sub	sp, sp, #28
   203e4:	str	r0, [fp, #-16]
   203e8:	str	r1, [fp, #-20]	; 0xffffffec
   203ec:	str	r2, [fp, #-24]	; 0xffffffe8
   203f0:	ldr	r3, [fp, #-16]
   203f4:	ldr	r3, [r3, #8]
   203f8:	sub	r3, r3, #1
   203fc:	str	r3, [fp, #-8]
   20400:	b	20474 <__assert_fail@plt+0xef30>
   20404:	ldr	r3, [fp, #-16]
   20408:	ldr	r2, [r3, #16]
   2040c:	ldr	r3, [fp, #-8]
   20410:	lsl	r3, r3, #2
   20414:	add	r3, r2, r3
   20418:	ldr	r2, [r3]
   2041c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20420:	cmp	r2, r3
   20424:	bne	20468 <__assert_fail@plt+0xef24>
   20428:	ldr	r3, [fp, #-16]
   2042c:	ldr	r2, [r3]
   20430:	ldr	r3, [fp, #-8]
   20434:	lsl	r3, r3, #3
   20438:	add	r3, r2, r3
   2043c:	ldr	r3, [r3, #4]
   20440:	lsr	r3, r3, #8
   20444:	lsl	r3, r3, #22
   20448:	lsr	r3, r3, #22
   2044c:	uxth	r3, r3
   20450:	mov	r2, r3
   20454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20458:	cmp	r2, r3
   2045c:	bne	20468 <__assert_fail@plt+0xef24>
   20460:	ldr	r3, [fp, #-8]
   20464:	b	204ac <__assert_fail@plt+0xef68>
   20468:	ldr	r3, [fp, #-8]
   2046c:	sub	r3, r3, #1
   20470:	str	r3, [fp, #-8]
   20474:	ldr	r3, [fp, #-16]
   20478:	ldr	r2, [r3]
   2047c:	ldr	r3, [fp, #-8]
   20480:	lsl	r3, r3, #3
   20484:	add	r3, r2, r3
   20488:	ldrb	r3, [r3, #6]
   2048c:	and	r3, r3, #4
   20490:	uxtb	r3, r3
   20494:	cmp	r3, #0
   20498:	beq	204a8 <__assert_fail@plt+0xef64>
   2049c:	ldr	r3, [fp, #-8]
   204a0:	cmp	r3, #0
   204a4:	bgt	20404 <__assert_fail@plt+0xeec0>
   204a8:	mvn	r3, #0
   204ac:	mov	r0, r3
   204b0:	add	sp, fp, #0
   204b4:	pop	{fp}		; (ldr fp, [sp], #4)
   204b8:	bx	lr
   204bc:	push	{fp, lr}
   204c0:	add	fp, sp, #4
   204c4:	sub	sp, sp, #24
   204c8:	str	r0, [fp, #-16]
   204cc:	str	r1, [fp, #-20]	; 0xffffffec
   204d0:	str	r2, [fp, #-24]	; 0xffffffe8
   204d4:	ldr	r3, [fp, #-16]
   204d8:	ldr	r2, [r3]
   204dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   204e0:	lsl	r3, r3, #3
   204e4:	add	r3, r2, r3
   204e8:	ldm	r3, {r1, r2}
   204ec:	ldr	r0, [fp, #-16]
   204f0:	bl	1bc64 <__assert_fail@plt+0xa720>
   204f4:	str	r0, [fp, #-8]
   204f8:	ldr	r3, [fp, #-8]
   204fc:	cmn	r3, #1
   20500:	movne	r3, #1
   20504:	moveq	r3, #0
   20508:	uxtb	r3, r3
   2050c:	cmp	r3, #0
   20510:	beq	20624 <__assert_fail@plt+0xf0e0>
   20514:	ldr	r3, [fp, #-16]
   20518:	ldr	r2, [r3]
   2051c:	ldr	r3, [fp, #-8]
   20520:	lsl	r3, r3, #3
   20524:	add	r0, r2, r3
   20528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2052c:	uxth	r3, r3
   20530:	lsl	r3, r3, #22
   20534:	lsr	r3, r3, #22
   20538:	uxth	r1, r3
   2053c:	ldr	r2, [r0, #4]
   20540:	ldr	r3, [pc, #236]	; 20634 <__assert_fail@plt+0xf0f0>
   20544:	and	r1, r1, r3
   20548:	lsl	r3, r3, #8
   2054c:	bic	r3, r2, r3
   20550:	lsl	r1, r1, #8
   20554:	orr	r2, r1, r3
   20558:	str	r2, [r0, #4]
   2055c:	ldr	r3, [fp, #-16]
   20560:	ldr	r2, [r3]
   20564:	ldr	r3, [fp, #-8]
   20568:	lsl	r3, r3, #3
   2056c:	add	r0, r2, r3
   20570:	ldr	r3, [fp, #-16]
   20574:	ldr	r2, [r3]
   20578:	ldr	r3, [fp, #-8]
   2057c:	lsl	r3, r3, #3
   20580:	add	r3, r2, r3
   20584:	ldr	r3, [r3, #4]
   20588:	lsr	r3, r3, #8
   2058c:	lsl	r3, r3, #22
   20590:	lsr	r3, r3, #22
   20594:	uxth	r2, r3
   20598:	ldr	r3, [fp, #-16]
   2059c:	ldr	r1, [r3]
   205a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   205a4:	lsl	r3, r3, #3
   205a8:	add	r3, r1, r3
   205ac:	ldr	r3, [r3, #4]
   205b0:	lsr	r3, r3, #8
   205b4:	lsl	r3, r3, #22
   205b8:	lsr	r3, r3, #22
   205bc:	uxth	r3, r3
   205c0:	orr	r3, r2, r3
   205c4:	uxth	r1, r3
   205c8:	ldr	r2, [r0, #4]
   205cc:	ldr	r3, [pc, #96]	; 20634 <__assert_fail@plt+0xf0f0>
   205d0:	and	r1, r1, r3
   205d4:	lsl	r3, r3, #8
   205d8:	bic	r3, r2, r3
   205dc:	lsl	r1, r1, #8
   205e0:	orr	r2, r1, r3
   205e4:	str	r2, [r0, #4]
   205e8:	ldr	r3, [fp, #-16]
   205ec:	ldr	r2, [r3]
   205f0:	ldr	r3, [fp, #-8]
   205f4:	lsl	r3, r3, #3
   205f8:	add	r2, r2, r3
   205fc:	ldrb	r3, [r2, #6]
   20600:	orr	r3, r3, #4
   20604:	strb	r3, [r2, #6]
   20608:	ldr	r3, [fp, #-16]
   2060c:	ldr	r2, [r3, #16]
   20610:	ldr	r3, [fp, #-8]
   20614:	lsl	r3, r3, #2
   20618:	add	r3, r2, r3
   2061c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20620:	str	r2, [r3]
   20624:	ldr	r3, [fp, #-8]
   20628:	mov	r0, r3
   2062c:	sub	sp, fp, #4
   20630:	pop	{fp, pc}
   20634:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   20638:	push	{fp, lr}
   2063c:	add	fp, sp, #4
   20640:	sub	sp, sp, #24
   20644:	str	r0, [fp, #-24]	; 0xffffffe8
   20648:	mov	r3, #0
   2064c:	str	r3, [fp, #-12]
   20650:	b	20690 <__assert_fail@plt+0xf14c>
   20654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20658:	ldr	r1, [r3, #28]
   2065c:	ldr	r2, [fp, #-12]
   20660:	mov	r3, r2
   20664:	lsl	r3, r3, #1
   20668:	add	r3, r3, r2
   2066c:	lsl	r3, r3, #2
   20670:	add	r3, r1, r3
   20674:	mov	r2, #12
   20678:	mov	r1, #0
   2067c:	mov	r0, r3
   20680:	bl	11448 <memset@plt>
   20684:	ldr	r3, [fp, #-12]
   20688:	add	r3, r3, #1
   2068c:	str	r3, [fp, #-12]
   20690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20694:	ldr	r2, [r3, #8]
   20698:	ldr	r3, [fp, #-12]
   2069c:	cmp	r2, r3
   206a0:	bhi	20654 <__assert_fail@plt+0xf110>
   206a4:	mov	r3, #0
   206a8:	str	r3, [fp, #-8]
   206ac:	b	20790 <__assert_fail@plt+0xf24c>
   206b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206b4:	ldr	r1, [r3, #24]
   206b8:	ldr	r2, [fp, #-8]
   206bc:	mov	r3, r2
   206c0:	lsl	r3, r3, #1
   206c4:	add	r3, r3, r2
   206c8:	lsl	r3, r3, #2
   206cc:	add	r3, r1, r3
   206d0:	ldr	r3, [r3, #8]
   206d4:	str	r3, [fp, #-16]
   206d8:	mov	r3, #0
   206dc:	str	r3, [fp, #-12]
   206e0:	b	20754 <__assert_fail@plt+0xf210>
   206e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206e8:	ldr	r2, [r3, #28]
   206ec:	ldr	r3, [fp, #-12]
   206f0:	lsl	r3, r3, #2
   206f4:	ldr	r1, [fp, #-16]
   206f8:	add	r3, r1, r3
   206fc:	ldr	r3, [r3]
   20700:	mov	r1, r3
   20704:	mov	r3, r1
   20708:	lsl	r3, r3, #1
   2070c:	add	r3, r3, r1
   20710:	lsl	r3, r3, #2
   20714:	add	r3, r2, r3
   20718:	ldr	r1, [fp, #-8]
   2071c:	mov	r0, r3
   20720:	bl	1b928 <__assert_fail@plt+0xa3e4>
   20724:	mov	r3, r0
   20728:	strb	r3, [fp, #-17]	; 0xffffffef
   2072c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   20730:	eor	r3, r3, #1
   20734:	uxtb	r3, r3
   20738:	cmp	r3, #0
   2073c:	beq	20748 <__assert_fail@plt+0xf204>
   20740:	mov	r3, #12
   20744:	b	207a8 <__assert_fail@plt+0xf264>
   20748:	ldr	r3, [fp, #-12]
   2074c:	add	r3, r3, #1
   20750:	str	r3, [fp, #-12]
   20754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20758:	ldr	r1, [r3, #24]
   2075c:	ldr	r2, [fp, #-8]
   20760:	mov	r3, r2
   20764:	lsl	r3, r3, #1
   20768:	add	r3, r3, r2
   2076c:	lsl	r3, r3, #2
   20770:	add	r3, r1, r3
   20774:	ldr	r2, [r3, #4]
   20778:	ldr	r3, [fp, #-12]
   2077c:	cmp	r2, r3
   20780:	bgt	206e4 <__assert_fail@plt+0xf1a0>
   20784:	ldr	r3, [fp, #-8]
   20788:	add	r3, r3, #1
   2078c:	str	r3, [fp, #-8]
   20790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20794:	ldr	r2, [r3, #8]
   20798:	ldr	r3, [fp, #-8]
   2079c:	cmp	r2, r3
   207a0:	bhi	206b0 <__assert_fail@plt+0xf16c>
   207a4:	mov	r3, #0
   207a8:	mov	r0, r3
   207ac:	sub	sp, fp, #4
   207b0:	pop	{fp, pc}
   207b4:	push	{fp, lr}
   207b8:	add	fp, sp, #4
   207bc:	sub	sp, sp, #32
   207c0:	str	r0, [fp, #-32]	; 0xffffffe0
   207c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207c8:	ldr	r3, [r3, #8]
   207cc:	cmp	r3, #0
   207d0:	mov	r3, #0
   207d4:	strb	r3, [fp, #-9]
   207d8:	mov	r3, #0
   207dc:	str	r3, [fp, #-8]
   207e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   207e4:	ldr	r2, [r3, #8]
   207e8:	ldr	r3, [fp, #-8]
   207ec:	cmp	r2, r3
   207f0:	bne	20820 <__assert_fail@plt+0xf2dc>
   207f4:	ldrb	r3, [fp, #-9]
   207f8:	eor	r3, r3, #1
   207fc:	uxtb	r3, r3
   20800:	cmp	r3, #0
   20804:	beq	20810 <__assert_fail@plt+0xf2cc>
   20808:	mov	r3, #0
   2080c:	b	20908 <__assert_fail@plt+0xf3c4>
   20810:	mov	r3, #0
   20814:	strb	r3, [fp, #-9]
   20818:	mov	r3, #0
   2081c:	str	r3, [fp, #-8]
   20820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20824:	ldr	r1, [r3, #24]
   20828:	ldr	r2, [fp, #-8]
   2082c:	mov	r3, r2
   20830:	lsl	r3, r3, #1
   20834:	add	r3, r3, r2
   20838:	lsl	r3, r3, #2
   2083c:	add	r3, r1, r3
   20840:	ldr	r3, [r3, #4]
   20844:	cmn	r3, #1
   20848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2084c:	ldr	r1, [r3, #24]
   20850:	ldr	r2, [fp, #-8]
   20854:	mov	r3, r2
   20858:	lsl	r3, r3, #1
   2085c:	add	r3, r3, r2
   20860:	lsl	r3, r3, #2
   20864:	add	r3, r1, r3
   20868:	ldr	r3, [r3, #4]
   2086c:	cmp	r3, #0
   20870:	bne	208f4 <__assert_fail@plt+0xf3b0>
   20874:	sub	r0, fp, #28
   20878:	mov	r3, #1
   2087c:	ldr	r2, [fp, #-8]
   20880:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20884:	bl	20914 <__assert_fail@plt+0xf3d0>
   20888:	str	r0, [fp, #-16]
   2088c:	ldr	r3, [fp, #-16]
   20890:	cmp	r3, #0
   20894:	movne	r3, #1
   20898:	moveq	r3, #0
   2089c:	uxtb	r3, r3
   208a0:	cmp	r3, #0
   208a4:	beq	208b0 <__assert_fail@plt+0xf36c>
   208a8:	ldr	r3, [fp, #-16]
   208ac:	b	20908 <__assert_fail@plt+0xf3c4>
   208b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   208b4:	ldr	r1, [r3, #24]
   208b8:	ldr	r2, [fp, #-8]
   208bc:	mov	r3, r2
   208c0:	lsl	r3, r3, #1
   208c4:	add	r3, r3, r2
   208c8:	lsl	r3, r3, #2
   208cc:	add	r3, r1, r3
   208d0:	ldr	r3, [r3, #4]
   208d4:	cmp	r3, #0
   208d8:	bne	208f8 <__assert_fail@plt+0xf3b4>
   208dc:	mov	r3, #1
   208e0:	strb	r3, [fp, #-9]
   208e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   208e8:	mov	r0, r3
   208ec:	bl	14dec <__assert_fail@plt+0x38a8>
   208f0:	b	208f8 <__assert_fail@plt+0xf3b4>
   208f4:	nop			; (mov r0, r0)
   208f8:	ldr	r3, [fp, #-8]
   208fc:	add	r3, r3, #1
   20900:	str	r3, [fp, #-8]
   20904:	b	207e0 <__assert_fail@plt+0xf29c>
   20908:	mov	r0, r3
   2090c:	sub	sp, fp, #4
   20910:	pop	{fp, pc}
   20914:	push	{fp, lr}
   20918:	add	fp, sp, #4
   2091c:	sub	sp, sp, #64	; 0x40
   20920:	str	r0, [fp, #-48]	; 0xffffffd0
   20924:	str	r1, [fp, #-52]	; 0xffffffcc
   20928:	str	r2, [fp, #-56]	; 0xffffffc8
   2092c:	strb	r3, [fp, #-57]	; 0xffffffc7
   20930:	mov	r3, #0
   20934:	strb	r3, [fp, #-9]
   20938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2093c:	ldr	r1, [r3, #20]
   20940:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20944:	mov	r3, r2
   20948:	lsl	r3, r3, #1
   2094c:	add	r3, r3, r2
   20950:	lsl	r3, r3, #2
   20954:	add	r3, r1, r3
   20958:	ldr	r3, [r3, #4]
   2095c:	add	r2, r3, #1
   20960:	sub	r3, fp, #32
   20964:	mov	r1, r2
   20968:	mov	r0, r3
   2096c:	bl	1a720 <__assert_fail@plt+0x91dc>
   20970:	str	r0, [fp, #-16]
   20974:	ldr	r3, [fp, #-16]
   20978:	cmp	r3, #0
   2097c:	movne	r3, #1
   20980:	moveq	r3, #0
   20984:	uxtb	r3, r3
   20988:	cmp	r3, #0
   2098c:	beq	20998 <__assert_fail@plt+0xf454>
   20990:	ldr	r3, [fp, #-16]
   20994:	b	20d68 <__assert_fail@plt+0xf824>
   20998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2099c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   209a0:	add	r1, r3, #1
   209a4:	str	r1, [fp, #-28]	; 0xffffffe4
   209a8:	lsl	r3, r3, #2
   209ac:	add	r3, r2, r3
   209b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   209b4:	str	r2, [r3]
   209b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   209bc:	ldr	r1, [r3, #24]
   209c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   209c4:	mov	r3, r2
   209c8:	lsl	r3, r3, #1
   209cc:	add	r3, r3, r2
   209d0:	lsl	r3, r3, #2
   209d4:	add	r3, r1, r3
   209d8:	mvn	r2, #0
   209dc:	str	r2, [r3, #4]
   209e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   209e4:	ldr	r2, [r3]
   209e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   209ec:	lsl	r3, r3, #3
   209f0:	add	r3, r2, r3
   209f4:	ldr	r2, [r3, #4]
   209f8:	ldr	r3, [pc, #884]	; 20d74 <__assert_fail@plt+0xf830>
   209fc:	and	r3, r3, r2
   20a00:	cmp	r3, #0
   20a04:	beq	20ae8 <__assert_fail@plt+0xf5a4>
   20a08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20a0c:	ldr	r1, [r3, #20]
   20a10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20a14:	mov	r3, r2
   20a18:	lsl	r3, r3, #1
   20a1c:	add	r3, r3, r2
   20a20:	lsl	r3, r3, #2
   20a24:	add	r3, r1, r3
   20a28:	ldr	r3, [r3, #4]
   20a2c:	cmp	r3, #0
   20a30:	beq	20ae8 <__assert_fail@plt+0xf5a4>
   20a34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20a38:	ldr	r1, [r3]
   20a3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20a40:	ldr	r0, [r3, #20]
   20a44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20a48:	mov	r3, r2
   20a4c:	lsl	r3, r3, #1
   20a50:	add	r3, r3, r2
   20a54:	lsl	r3, r3, #2
   20a58:	add	r3, r0, r3
   20a5c:	ldr	r3, [r3, #8]
   20a60:	ldr	r3, [r3]
   20a64:	lsl	r3, r3, #3
   20a68:	add	r3, r1, r3
   20a6c:	ldrb	r3, [r3, #6]
   20a70:	and	r3, r3, #4
   20a74:	uxtb	r3, r3
   20a78:	cmp	r3, #0
   20a7c:	bne	20ae8 <__assert_fail@plt+0xf5a4>
   20a80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20a84:	ldr	r2, [r3]
   20a88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20a8c:	lsl	r3, r3, #3
   20a90:	add	r3, r2, r3
   20a94:	ldr	r3, [r3, #4]
   20a98:	lsr	r3, r3, #8
   20a9c:	lsl	r3, r3, #22
   20aa0:	lsr	r3, r3, #22
   20aa4:	uxth	r3, r3
   20aa8:	str	r3, [sp]
   20aac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20ab0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20ab4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20ab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20abc:	bl	1fe0c <__assert_fail@plt+0xe8c8>
   20ac0:	str	r0, [fp, #-16]
   20ac4:	ldr	r3, [fp, #-16]
   20ac8:	cmp	r3, #0
   20acc:	movne	r3, #1
   20ad0:	moveq	r3, #0
   20ad4:	uxtb	r3, r3
   20ad8:	cmp	r3, #0
   20adc:	beq	20ae8 <__assert_fail@plt+0xf5a4>
   20ae0:	ldr	r3, [fp, #-16]
   20ae4:	b	20d68 <__assert_fail@plt+0xf824>
   20ae8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20aec:	ldr	r2, [r3]
   20af0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20af4:	lsl	r3, r3, #3
   20af8:	add	r3, r2, r3
   20afc:	ldrb	r3, [r3, #4]
   20b00:	and	r3, r3, #8
   20b04:	cmp	r3, #0
   20b08:	beq	20cd4 <__assert_fail@plt+0xf790>
   20b0c:	mov	r3, #0
   20b10:	str	r3, [fp, #-8]
   20b14:	b	20ca4 <__assert_fail@plt+0xf760>
   20b18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20b1c:	ldr	r1, [r3, #20]
   20b20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20b24:	mov	r3, r2
   20b28:	lsl	r3, r3, #1
   20b2c:	add	r3, r3, r2
   20b30:	lsl	r3, r3, #2
   20b34:	add	r3, r1, r3
   20b38:	ldr	r2, [r3, #8]
   20b3c:	ldr	r3, [fp, #-8]
   20b40:	lsl	r3, r3, #2
   20b44:	add	r3, r2, r3
   20b48:	ldr	r3, [r3]
   20b4c:	str	r3, [fp, #-20]	; 0xffffffec
   20b50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20b54:	ldr	r1, [r3, #24]
   20b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   20b5c:	mov	r3, r2
   20b60:	lsl	r3, r3, #1
   20b64:	add	r3, r3, r2
   20b68:	lsl	r3, r3, #2
   20b6c:	add	r3, r1, r3
   20b70:	ldr	r3, [r3, #4]
   20b74:	cmn	r3, #1
   20b78:	bne	20b88 <__assert_fail@plt+0xf644>
   20b7c:	mov	r3, #1
   20b80:	strb	r3, [fp, #-9]
   20b84:	b	20c98 <__assert_fail@plt+0xf754>
   20b88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20b8c:	ldr	r1, [r3, #24]
   20b90:	ldr	r2, [fp, #-20]	; 0xffffffec
   20b94:	mov	r3, r2
   20b98:	lsl	r3, r3, #1
   20b9c:	add	r3, r3, r2
   20ba0:	lsl	r3, r3, #2
   20ba4:	add	r3, r1, r3
   20ba8:	ldr	r3, [r3, #4]
   20bac:	cmp	r3, #0
   20bb0:	bne	20bf0 <__assert_fail@plt+0xf6ac>
   20bb4:	sub	r0, fp, #44	; 0x2c
   20bb8:	mov	r3, #0
   20bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   20bc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20bc4:	bl	20914 <__assert_fail@plt+0xf3d0>
   20bc8:	str	r0, [fp, #-16]
   20bcc:	ldr	r3, [fp, #-16]
   20bd0:	cmp	r3, #0
   20bd4:	movne	r3, #1
   20bd8:	moveq	r3, #0
   20bdc:	uxtb	r3, r3
   20be0:	cmp	r3, #0
   20be4:	beq	20c1c <__assert_fail@plt+0xf6d8>
   20be8:	ldr	r3, [fp, #-16]
   20bec:	b	20d68 <__assert_fail@plt+0xf824>
   20bf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20bf4:	ldr	r1, [r3, #24]
   20bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   20bfc:	mov	r3, r2
   20c00:	lsl	r3, r3, #1
   20c04:	add	r3, r3, r2
   20c08:	lsl	r3, r3, #2
   20c0c:	add	r2, r1, r3
   20c10:	sub	r3, fp, #44	; 0x2c
   20c14:	ldm	r2, {r0, r1, r2}
   20c18:	stm	r3, {r0, r1, r2}
   20c1c:	sub	r2, fp, #44	; 0x2c
   20c20:	sub	r3, fp, #32
   20c24:	mov	r1, r2
   20c28:	mov	r0, r3
   20c2c:	bl	1b260 <__assert_fail@plt+0x9d1c>
   20c30:	str	r0, [fp, #-16]
   20c34:	ldr	r3, [fp, #-16]
   20c38:	cmp	r3, #0
   20c3c:	movne	r3, #1
   20c40:	moveq	r3, #0
   20c44:	uxtb	r3, r3
   20c48:	cmp	r3, #0
   20c4c:	beq	20c58 <__assert_fail@plt+0xf714>
   20c50:	ldr	r3, [fp, #-16]
   20c54:	b	20d68 <__assert_fail@plt+0xf824>
   20c58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20c5c:	ldr	r1, [r3, #24]
   20c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   20c64:	mov	r3, r2
   20c68:	lsl	r3, r3, #1
   20c6c:	add	r3, r3, r2
   20c70:	lsl	r3, r3, #2
   20c74:	add	r3, r1, r3
   20c78:	ldr	r3, [r3, #4]
   20c7c:	cmp	r3, #0
   20c80:	bne	20c98 <__assert_fail@plt+0xf754>
   20c84:	mov	r3, #1
   20c88:	strb	r3, [fp, #-9]
   20c8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20c90:	mov	r0, r3
   20c94:	bl	14dec <__assert_fail@plt+0x38a8>
   20c98:	ldr	r3, [fp, #-8]
   20c9c:	add	r3, r3, #1
   20ca0:	str	r3, [fp, #-8]
   20ca4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20ca8:	ldr	r1, [r3, #20]
   20cac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20cb0:	mov	r3, r2
   20cb4:	lsl	r3, r3, #1
   20cb8:	add	r3, r3, r2
   20cbc:	lsl	r3, r3, #2
   20cc0:	add	r3, r1, r3
   20cc4:	ldr	r2, [r3, #4]
   20cc8:	ldr	r3, [fp, #-8]
   20ccc:	cmp	r2, r3
   20cd0:	bgt	20b18 <__assert_fail@plt+0xf5d4>
   20cd4:	ldrb	r3, [fp, #-9]
   20cd8:	cmp	r3, #0
   20cdc:	beq	20d20 <__assert_fail@plt+0xf7dc>
   20ce0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   20ce4:	eor	r3, r3, #1
   20ce8:	uxtb	r3, r3
   20cec:	cmp	r3, #0
   20cf0:	beq	20d20 <__assert_fail@plt+0xf7dc>
   20cf4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20cf8:	ldr	r1, [r3, #24]
   20cfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20d00:	mov	r3, r2
   20d04:	lsl	r3, r3, #1
   20d08:	add	r3, r3, r2
   20d0c:	lsl	r3, r3, #2
   20d10:	add	r3, r1, r3
   20d14:	mov	r2, #0
   20d18:	str	r2, [r3, #4]
   20d1c:	b	20d50 <__assert_fail@plt+0xf80c>
   20d20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20d24:	ldr	r1, [r3, #24]
   20d28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20d2c:	mov	r3, r2
   20d30:	lsl	r3, r3, #1
   20d34:	add	r3, r3, r2
   20d38:	lsl	r3, r3, #2
   20d3c:	add	r3, r1, r3
   20d40:	mov	ip, r3
   20d44:	sub	r3, fp, #32
   20d48:	ldm	r3, {r0, r1, r2}
   20d4c:	stm	ip, {r0, r1, r2}
   20d50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20d54:	mov	ip, r3
   20d58:	sub	r3, fp, #32
   20d5c:	ldm	r3, {r0, r1, r2}
   20d60:	stm	ip, {r0, r1, r2}
   20d64:	mov	r3, #0
   20d68:	mov	r0, r3
   20d6c:	sub	sp, fp, #4
   20d70:	pop	{fp, pc}
   20d74:	andeq	pc, r3, r0, lsl #30
   20d78:	push	{fp, lr}
   20d7c:	add	fp, sp, #4
   20d80:	sub	sp, sp, #16
   20d84:	str	r0, [fp, #-8]
   20d88:	str	r1, [fp, #-12]
   20d8c:	str	r2, [fp, #-16]
   20d90:	ldr	r2, [fp, #-16]
   20d94:	ldr	r1, [fp, #-12]
   20d98:	ldr	r0, [fp, #-8]
   20d9c:	bl	20dc4 <__assert_fail@plt+0xf880>
   20da0:	mov	r2, r0
   20da4:	ldr	r3, [fp, #-12]
   20da8:	ldr	r3, [r3, #40]	; 0x28
   20dac:	add	r2, r3, r2
   20db0:	ldr	r3, [fp, #-12]
   20db4:	str	r2, [r3, #40]	; 0x28
   20db8:	nop			; (mov r0, r0)
   20dbc:	sub	sp, fp, #4
   20dc0:	pop	{fp, pc}
   20dc4:	push	{fp, lr}
   20dc8:	add	fp, sp, #4
   20dcc:	sub	sp, sp, #40	; 0x28
   20dd0:	str	r0, [fp, #-32]	; 0xffffffe0
   20dd4:	str	r1, [fp, #-36]	; 0xffffffdc
   20dd8:	str	r2, [fp, #-40]	; 0xffffffd8
   20ddc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20de0:	ldr	r2, [r3, #56]	; 0x38
   20de4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20de8:	ldr	r3, [r3, #40]	; 0x28
   20dec:	cmp	r2, r3
   20df0:	bgt	20e08 <__assert_fail@plt+0xf8c4>
   20df4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20df8:	mov	r2, #2
   20dfc:	strb	r2, [r3, #4]
   20e00:	mov	r3, #0
   20e04:	b	21aec <__assert_fail@plt+0x105a8>
   20e08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e0c:	ldr	r3, [r3, #4]
   20e10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20e14:	ldr	r2, [r2, #40]	; 0x28
   20e18:	add	r3, r3, r2
   20e1c:	ldrb	r3, [r3]
   20e20:	strb	r3, [fp, #-5]
   20e24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20e28:	ldrb	r2, [fp, #-5]
   20e2c:	strb	r2, [r3]
   20e30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20e34:	ldrb	r3, [r2, #6]
   20e38:	bic	r3, r3, #64	; 0x40
   20e3c:	strb	r3, [r2, #6]
   20e40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20e44:	ldrb	r3, [r2, #6]
   20e48:	bic	r3, r3, #32
   20e4c:	strb	r3, [r2, #6]
   20e50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e54:	ldr	r3, [r3, #80]	; 0x50
   20e58:	cmp	r3, #1
   20e5c:	ble	20ec0 <__assert_fail@plt+0xf97c>
   20e60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e64:	ldr	r2, [r3, #40]	; 0x28
   20e68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e6c:	ldr	r3, [r3, #28]
   20e70:	cmp	r2, r3
   20e74:	beq	20ec0 <__assert_fail@plt+0xf97c>
   20e78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e7c:	ldr	r2, [r3, #8]
   20e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20e84:	ldr	r3, [r3, #40]	; 0x28
   20e88:	lsl	r3, r3, #2
   20e8c:	add	r3, r2, r3
   20e90:	ldr	r3, [r3]
   20e94:	cmn	r3, #1
   20e98:	bne	20ec0 <__assert_fail@plt+0xf97c>
   20e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20ea0:	mov	r2, #1
   20ea4:	strb	r2, [r3, #4]
   20ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20eac:	ldrb	r3, [r2, #6]
   20eb0:	orr	r3, r3, #32
   20eb4:	strb	r3, [r2, #6]
   20eb8:	mov	r3, #1
   20ebc:	b	21aec <__assert_fail@plt+0x105a8>
   20ec0:	ldrb	r3, [fp, #-5]
   20ec4:	cmp	r3, #92	; 0x5c
   20ec8:	bne	21518 <__assert_fail@plt+0xffd4>
   20ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20ed0:	ldr	r3, [r3, #40]	; 0x28
   20ed4:	add	r2, r3, #1
   20ed8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20edc:	ldr	r3, [r3, #48]	; 0x30
   20ee0:	cmp	r2, r3
   20ee4:	blt	20efc <__assert_fail@plt+0xf9b8>
   20ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20eec:	mov	r2, #36	; 0x24
   20ef0:	strb	r2, [r3, #4]
   20ef4:	mov	r3, #1
   20ef8:	b	21aec <__assert_fail@plt+0x105a8>
   20efc:	mov	r1, #1
   20f00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20f04:	bl	1a154 <__assert_fail@plt+0x8c10>
   20f08:	mov	r3, r0
   20f0c:	strb	r3, [fp, #-6]
   20f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f14:	ldrb	r2, [fp, #-6]
   20f18:	strb	r2, [r3]
   20f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f20:	mov	r2, #1
   20f24:	strb	r2, [r3, #4]
   20f28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20f2c:	ldr	r3, [r3, #80]	; 0x50
   20f30:	cmp	r3, #1
   20f34:	ble	20fb4 <__assert_fail@plt+0xfa70>
   20f38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20f3c:	ldr	r3, [r3, #40]	; 0x28
   20f40:	add	r3, r3, #1
   20f44:	mov	r1, r3
   20f48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20f4c:	bl	17c38 <__assert_fail@plt+0x66f4>
   20f50:	str	r0, [fp, #-12]
   20f54:	ldr	r0, [fp, #-12]
   20f58:	bl	11424 <iswalnum@plt>
   20f5c:	mov	r3, r0
   20f60:	cmp	r3, #0
   20f64:	bne	20f74 <__assert_fail@plt+0xfa30>
   20f68:	ldr	r3, [fp, #-12]
   20f6c:	cmp	r3, #95	; 0x5f
   20f70:	bne	20f7c <__assert_fail@plt+0xfa38>
   20f74:	mov	r3, #1
   20f78:	b	20f80 <__assert_fail@plt+0xfa3c>
   20f7c:	mov	r3, #0
   20f80:	cmp	r3, #0
   20f84:	movne	r3, #1
   20f88:	moveq	r3, #0
   20f8c:	uxtb	r3, r3
   20f90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20f94:	ldrb	r2, [r1, #6]
   20f98:	and	r3, r3, #1
   20f9c:	bic	r2, r2, #64	; 0x40
   20fa0:	lsl	r3, r3, #6
   20fa4:	orr	r3, r3, r2
   20fa8:	mov	r2, r3
   20fac:	strb	r2, [r1, #6]
   20fb0:	b	21024 <__assert_fail@plt+0xfae0>
   20fb4:	bl	113d0 <__ctype_b_loc@plt>
   20fb8:	mov	r3, r0
   20fbc:	ldr	r2, [r3]
   20fc0:	ldrb	r3, [fp, #-6]
   20fc4:	lsl	r3, r3, #1
   20fc8:	add	r3, r2, r3
   20fcc:	ldrh	r3, [r3]
   20fd0:	and	r3, r3, #8
   20fd4:	cmp	r3, #0
   20fd8:	bne	20fe8 <__assert_fail@plt+0xfaa4>
   20fdc:	ldrb	r3, [fp, #-6]
   20fe0:	cmp	r3, #95	; 0x5f
   20fe4:	bne	20ff0 <__assert_fail@plt+0xfaac>
   20fe8:	mov	r3, #1
   20fec:	b	20ff4 <__assert_fail@plt+0xfab0>
   20ff0:	mov	r3, #0
   20ff4:	cmp	r3, #0
   20ff8:	movne	r3, #1
   20ffc:	moveq	r3, #0
   21000:	uxtb	r3, r3
   21004:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21008:	ldrb	r2, [r1, #6]
   2100c:	and	r3, r3, #1
   21010:	bic	r2, r2, #64	; 0x40
   21014:	lsl	r3, r3, #6
   21018:	orr	r3, r3, r2
   2101c:	mov	r2, r3
   21020:	strb	r2, [r1, #6]
   21024:	ldrb	r3, [fp, #-6]
   21028:	sub	r3, r3, #39	; 0x27
   2102c:	cmp	r3, #86	; 0x56
   21030:	ldrls	pc, [pc, r3, lsl #2]
   21034:	b	2147c <__assert_fail@plt+0xff38>
   21038:	andeq	r1, r2, r0, asr r3
   2103c:	andeq	r1, r2, ip, ror r3
   21040:	muleq	r2, ip, r3
   21044:	andeq	r1, r2, ip, ror r4
   21048:			; <UNDEFINED> instruction: 0x000213bc
   2104c:	andeq	r1, r2, ip, ror r4
   21050:	andeq	r1, r2, ip, ror r4
   21054:	andeq	r1, r2, ip, ror r4
   21058:	andeq	r1, r2, ip, ror r4
   2105c:	andeq	r1, r2, ip, ror r4
   21060:	andeq	r1, r2, r4, asr #3
   21064:	andeq	r1, r2, r4, asr #3
   21068:	andeq	r1, r2, r4, asr #3
   2106c:	andeq	r1, r2, r4, asr #3
   21070:	andeq	r1, r2, r4, asr #3
   21074:	andeq	r1, r2, r4, asr #3
   21078:	andeq	r1, r2, r4, asr #3
   2107c:	andeq	r1, r2, r4, asr #3
   21080:	andeq	r1, r2, r4, asr #3
   21084:	andeq	r1, r2, ip, ror r4
   21088:	andeq	r1, r2, ip, ror r4
   2108c:	strdeq	r1, [r2], -r4
   21090:	andeq	r1, r2, ip, ror r4
   21094:	andeq	r1, r2, r0, lsr #4
   21098:	andeq	r1, r2, ip, ror #7
   2109c:	andeq	r1, r2, ip, ror r4
   210a0:	andeq	r1, r2, ip, ror r4
   210a4:	andeq	r1, r2, r8, ror r2
   210a8:	andeq	r1, r2, ip, ror r4
   210ac:	andeq	r1, r2, ip, ror r4
   210b0:	andeq	r1, r2, ip, ror r4
   210b4:	andeq	r1, r2, ip, ror r4
   210b8:	andeq	r1, r2, ip, ror r4
   210bc:	andeq	r1, r2, ip, ror r4
   210c0:	andeq	r1, r2, ip, ror r4
   210c4:	andeq	r1, r2, ip, ror r4
   210c8:	andeq	r1, r2, ip, ror r4
   210cc:	andeq	r1, r2, ip, ror r4
   210d0:	andeq	r1, r2, ip, ror r4
   210d4:	andeq	r1, r2, ip, ror r4
   210d8:	andeq	r1, r2, ip, ror r4
   210dc:	andeq	r1, r2, ip, ror r4
   210e0:	andeq	r1, r2, ip, ror r4
   210e4:	andeq	r1, r2, ip, ror r4
   210e8:	andeq	r1, r2, r4, lsl #6
   210ec:	andeq	r1, r2, ip, ror r4
   210f0:	andeq	r1, r2, ip, ror r4
   210f4:	andeq	r1, r2, ip, ror r4
   210f8:	andeq	r1, r2, r4, asr #5
   210fc:	andeq	r1, r2, ip, ror r4
   21100:	andeq	r1, r2, ip, ror r4
   21104:	andeq	r1, r2, ip, ror r4
   21108:	andeq	r1, r2, ip, ror r4
   2110c:	andeq	r1, r2, ip, ror r4
   21110:	andeq	r1, r2, ip, ror r4
   21114:	andeq	r1, r2, ip, ror r4
   21118:	andeq	r1, r2, ip, ror r4
   2111c:	andeq	r1, r2, r4, lsr #6
   21120:	andeq	r1, r2, ip, ror r4
   21124:	andeq	r1, r2, ip, asr #4
   21128:	andeq	r1, r2, ip, ror r4
   2112c:	andeq	r1, r2, ip, ror r4
   21130:	andeq	r1, r2, ip, ror r4
   21134:	andeq	r1, r2, ip, ror r4
   21138:	andeq	r1, r2, ip, ror r4
   2113c:	andeq	r1, r2, ip, ror r4
   21140:	andeq	r1, r2, ip, ror r4
   21144:	andeq	r1, r2, ip, ror r4
   21148:	andeq	r1, r2, ip, ror r4
   2114c:	andeq	r1, r2, ip, ror r4
   21150:	andeq	r1, r2, ip, ror r4
   21154:	andeq	r1, r2, ip, ror r4
   21158:	andeq	r1, r2, ip, ror r4
   2115c:	andeq	r1, r2, ip, ror r4
   21160:	andeq	r1, r2, ip, ror r4
   21164:	andeq	r1, r2, ip, ror r4
   21168:	andeq	r1, r2, r4, ror #5
   2116c:	andeq	r1, r2, ip, ror r4
   21170:	andeq	r1, r2, ip, ror r4
   21174:	andeq	r1, r2, ip, ror r4
   21178:	andeq	r1, r2, r4, lsr #5
   2117c:	andeq	r1, r2, ip, ror r4
   21180:	andeq	r1, r2, ip, ror r4
   21184:	andeq	r1, r2, ip, ror r4
   21188:	andeq	r1, r2, ip, lsl r4
   2118c:	muleq	r2, r4, r1
   21190:	andeq	r1, r2, ip, asr #8
   21194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21198:	and	r3, r3, #1024	; 0x400
   2119c:	cmp	r3, #0
   211a0:	bne	21484 <__assert_fail@plt+0xff40>
   211a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   211a8:	and	r3, r3, #32768	; 0x8000
   211ac:	cmp	r3, #0
   211b0:	bne	21484 <__assert_fail@plt+0xff40>
   211b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   211b8:	mov	r2, #10
   211bc:	strb	r2, [r3, #4]
   211c0:	b	21484 <__assert_fail@plt+0xff40>
   211c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   211c8:	and	r3, r3, #16384	; 0x4000
   211cc:	cmp	r3, #0
   211d0:	bne	2148c <__assert_fail@plt+0xff48>
   211d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   211d8:	mov	r2, #4
   211dc:	strb	r2, [r3, #4]
   211e0:	ldrb	r3, [fp, #-6]
   211e4:	sub	r2, r3, #49	; 0x31
   211e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   211ec:	str	r2, [r3]
   211f0:	b	2148c <__assert_fail@plt+0xff48>
   211f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   211f8:	and	r3, r3, #524288	; 0x80000
   211fc:	cmp	r3, #0
   21200:	bne	21494 <__assert_fail@plt+0xff50>
   21204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21208:	mov	r2, #12
   2120c:	strb	r2, [r3, #4]
   21210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21214:	mov	r2, #6
   21218:	str	r2, [r3]
   2121c:	b	21494 <__assert_fail@plt+0xff50>
   21220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21224:	and	r3, r3, #524288	; 0x80000
   21228:	cmp	r3, #0
   2122c:	bne	2149c <__assert_fail@plt+0xff58>
   21230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21234:	mov	r2, #12
   21238:	strb	r2, [r3, #4]
   2123c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21240:	mov	r2, #9
   21244:	str	r2, [r3]
   21248:	b	2149c <__assert_fail@plt+0xff58>
   2124c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21250:	and	r3, r3, #524288	; 0x80000
   21254:	cmp	r3, #0
   21258:	bne	214a4 <__assert_fail@plt+0xff60>
   2125c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21260:	mov	r2, #12
   21264:	strb	r2, [r3, #4]
   21268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2126c:	mov	r2, #256	; 0x100
   21270:	str	r2, [r3]
   21274:	b	214a4 <__assert_fail@plt+0xff60>
   21278:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2127c:	and	r3, r3, #524288	; 0x80000
   21280:	cmp	r3, #0
   21284:	bne	214ac <__assert_fail@plt+0xff68>
   21288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2128c:	mov	r2, #12
   21290:	strb	r2, [r3, #4]
   21294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21298:	mov	r2, #512	; 0x200
   2129c:	str	r2, [r3]
   212a0:	b	214ac <__assert_fail@plt+0xff68>
   212a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   212a8:	and	r3, r3, #524288	; 0x80000
   212ac:	cmp	r3, #0
   212b0:	bne	214b4 <__assert_fail@plt+0xff70>
   212b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   212b8:	mov	r2, #32
   212bc:	strb	r2, [r3, #4]
   212c0:	b	214b4 <__assert_fail@plt+0xff70>
   212c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   212c8:	and	r3, r3, #524288	; 0x80000
   212cc:	cmp	r3, #0
   212d0:	bne	214bc <__assert_fail@plt+0xff78>
   212d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   212d8:	mov	r2, #33	; 0x21
   212dc:	strb	r2, [r3, #4]
   212e0:	b	214bc <__assert_fail@plt+0xff78>
   212e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   212e8:	and	r3, r3, #524288	; 0x80000
   212ec:	cmp	r3, #0
   212f0:	bne	214c4 <__assert_fail@plt+0xff80>
   212f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   212f8:	mov	r2, #34	; 0x22
   212fc:	strb	r2, [r3, #4]
   21300:	b	214c4 <__assert_fail@plt+0xff80>
   21304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21308:	and	r3, r3, #524288	; 0x80000
   2130c:	cmp	r3, #0
   21310:	bne	214cc <__assert_fail@plt+0xff88>
   21314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21318:	mov	r2, #35	; 0x23
   2131c:	strb	r2, [r3, #4]
   21320:	b	214cc <__assert_fail@plt+0xff88>
   21324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21328:	and	r3, r3, #524288	; 0x80000
   2132c:	cmp	r3, #0
   21330:	bne	214d4 <__assert_fail@plt+0xff90>
   21334:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21338:	mov	r2, #12
   2133c:	strb	r2, [r3, #4]
   21340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21344:	mov	r2, #64	; 0x40
   21348:	str	r2, [r3]
   2134c:	b	214d4 <__assert_fail@plt+0xff90>
   21350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21354:	and	r3, r3, #524288	; 0x80000
   21358:	cmp	r3, #0
   2135c:	bne	214dc <__assert_fail@plt+0xff98>
   21360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21364:	mov	r2, #12
   21368:	strb	r2, [r3, #4]
   2136c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21370:	mov	r2, #128	; 0x80
   21374:	str	r2, [r3]
   21378:	b	214dc <__assert_fail@plt+0xff98>
   2137c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21380:	and	r3, r3, #8192	; 0x2000
   21384:	cmp	r3, #0
   21388:	bne	214e4 <__assert_fail@plt+0xffa0>
   2138c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21390:	mov	r2, #8
   21394:	strb	r2, [r3, #4]
   21398:	b	214e4 <__assert_fail@plt+0xffa0>
   2139c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213a0:	and	r3, r3, #8192	; 0x2000
   213a4:	cmp	r3, #0
   213a8:	bne	214ec <__assert_fail@plt+0xffa8>
   213ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213b0:	mov	r2, #9
   213b4:	strb	r2, [r3, #4]
   213b8:	b	214ec <__assert_fail@plt+0xffa8>
   213bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213c0:	and	r3, r3, #1024	; 0x400
   213c4:	cmp	r3, #0
   213c8:	bne	214f4 <__assert_fail@plt+0xffb0>
   213cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213d0:	and	r3, r3, #2
   213d4:	cmp	r3, #0
   213d8:	beq	214f4 <__assert_fail@plt+0xffb0>
   213dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213e0:	mov	r2, #18
   213e4:	strb	r2, [r3, #4]
   213e8:	b	214f4 <__assert_fail@plt+0xffb0>
   213ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   213f0:	and	r3, r3, #1024	; 0x400
   213f4:	cmp	r3, #0
   213f8:	bne	214fc <__assert_fail@plt+0xffb8>
   213fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21400:	and	r3, r3, #2
   21404:	cmp	r3, #0
   21408:	beq	214fc <__assert_fail@plt+0xffb8>
   2140c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21410:	mov	r2, #19
   21414:	strb	r2, [r3, #4]
   21418:	b	214fc <__assert_fail@plt+0xffb8>
   2141c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21420:	and	r3, r3, #512	; 0x200
   21424:	cmp	r3, #0
   21428:	beq	21504 <__assert_fail@plt+0xffc0>
   2142c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21430:	and	r3, r3, #4096	; 0x1000
   21434:	cmp	r3, #0
   21438:	bne	21504 <__assert_fail@plt+0xffc0>
   2143c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21440:	mov	r2, #23
   21444:	strb	r2, [r3, #4]
   21448:	b	21504 <__assert_fail@plt+0xffc0>
   2144c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21450:	and	r3, r3, #512	; 0x200
   21454:	cmp	r3, #0
   21458:	beq	2150c <__assert_fail@plt+0xffc8>
   2145c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21460:	and	r3, r3, #4096	; 0x1000
   21464:	cmp	r3, #0
   21468:	bne	2150c <__assert_fail@plt+0xffc8>
   2146c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21470:	mov	r2, #24
   21474:	strb	r2, [r3, #4]
   21478:	b	2150c <__assert_fail@plt+0xffc8>
   2147c:	nop			; (mov r0, r0)
   21480:	b	21510 <__assert_fail@plt+0xffcc>
   21484:	nop			; (mov r0, r0)
   21488:	b	21510 <__assert_fail@plt+0xffcc>
   2148c:	nop			; (mov r0, r0)
   21490:	b	21510 <__assert_fail@plt+0xffcc>
   21494:	nop			; (mov r0, r0)
   21498:	b	21510 <__assert_fail@plt+0xffcc>
   2149c:	nop			; (mov r0, r0)
   214a0:	b	21510 <__assert_fail@plt+0xffcc>
   214a4:	nop			; (mov r0, r0)
   214a8:	b	21510 <__assert_fail@plt+0xffcc>
   214ac:	nop			; (mov r0, r0)
   214b0:	b	21510 <__assert_fail@plt+0xffcc>
   214b4:	nop			; (mov r0, r0)
   214b8:	b	21510 <__assert_fail@plt+0xffcc>
   214bc:	nop			; (mov r0, r0)
   214c0:	b	21510 <__assert_fail@plt+0xffcc>
   214c4:	nop			; (mov r0, r0)
   214c8:	b	21510 <__assert_fail@plt+0xffcc>
   214cc:	nop			; (mov r0, r0)
   214d0:	b	21510 <__assert_fail@plt+0xffcc>
   214d4:	nop			; (mov r0, r0)
   214d8:	b	21510 <__assert_fail@plt+0xffcc>
   214dc:	nop			; (mov r0, r0)
   214e0:	b	21510 <__assert_fail@plt+0xffcc>
   214e4:	nop			; (mov r0, r0)
   214e8:	b	21510 <__assert_fail@plt+0xffcc>
   214ec:	nop			; (mov r0, r0)
   214f0:	b	21510 <__assert_fail@plt+0xffcc>
   214f4:	nop			; (mov r0, r0)
   214f8:	b	21510 <__assert_fail@plt+0xffcc>
   214fc:	nop			; (mov r0, r0)
   21500:	b	21510 <__assert_fail@plt+0xffcc>
   21504:	nop			; (mov r0, r0)
   21508:	b	21510 <__assert_fail@plt+0xffcc>
   2150c:	nop			; (mov r0, r0)
   21510:	mov	r3, #2
   21514:	b	21aec <__assert_fail@plt+0x105a8>
   21518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2151c:	mov	r2, #1
   21520:	strb	r2, [r3, #4]
   21524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21528:	ldr	r3, [r3, #80]	; 0x50
   2152c:	cmp	r3, #1
   21530:	ble	215ac <__assert_fail@plt+0x10068>
   21534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21538:	ldr	r3, [r3, #40]	; 0x28
   2153c:	mov	r1, r3
   21540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21544:	bl	17c38 <__assert_fail@plt+0x66f4>
   21548:	str	r0, [fp, #-16]
   2154c:	ldr	r0, [fp, #-16]
   21550:	bl	11424 <iswalnum@plt>
   21554:	mov	r3, r0
   21558:	cmp	r3, #0
   2155c:	bne	2156c <__assert_fail@plt+0x10028>
   21560:	ldr	r3, [fp, #-16]
   21564:	cmp	r3, #95	; 0x5f
   21568:	bne	21574 <__assert_fail@plt+0x10030>
   2156c:	mov	r3, #1
   21570:	b	21578 <__assert_fail@plt+0x10034>
   21574:	mov	r3, #0
   21578:	cmp	r3, #0
   2157c:	movne	r3, #1
   21580:	moveq	r3, #0
   21584:	uxtb	r3, r3
   21588:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2158c:	ldrb	r2, [r1, #6]
   21590:	and	r3, r3, #1
   21594:	bic	r2, r2, #64	; 0x40
   21598:	lsl	r3, r3, #6
   2159c:	orr	r3, r3, r2
   215a0:	mov	r2, r3
   215a4:	strb	r2, [r1, #6]
   215a8:	b	21620 <__assert_fail@plt+0x100dc>
   215ac:	bl	113d0 <__ctype_b_loc@plt>
   215b0:	mov	r3, r0
   215b4:	ldr	r2, [r3]
   215b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   215bc:	ldrb	r3, [r3]
   215c0:	lsl	r3, r3, #1
   215c4:	add	r3, r2, r3
   215c8:	ldrh	r3, [r3]
   215cc:	and	r3, r3, #8
   215d0:	cmp	r3, #0
   215d4:	bne	215e8 <__assert_fail@plt+0x100a4>
   215d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   215dc:	ldrb	r3, [r3]
   215e0:	cmp	r3, #95	; 0x5f
   215e4:	bne	215f0 <__assert_fail@plt+0x100ac>
   215e8:	mov	r3, #1
   215ec:	b	215f4 <__assert_fail@plt+0x100b0>
   215f0:	mov	r3, #0
   215f4:	uxtb	r3, r3
   215f8:	and	r3, r3, #1
   215fc:	uxtb	r3, r3
   21600:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21604:	ldrb	r2, [r1, #6]
   21608:	and	r3, r3, #1
   2160c:	bic	r2, r2, #64	; 0x40
   21610:	lsl	r3, r3, #6
   21614:	orr	r3, r3, r2
   21618:	mov	r2, r3
   2161c:	strb	r2, [r1, #6]
   21620:	ldrb	r3, [fp, #-5]
   21624:	sub	r3, r3, #10
   21628:	cmp	r3, #115	; 0x73
   2162c:	ldrls	pc, [pc, r3, lsl #2]
   21630:	b	21a9c <__assert_fail@plt+0x10558>
   21634:	andeq	r1, r2, r4, lsl #16
   21638:	muleq	r2, ip, sl
   2163c:	muleq	r2, ip, sl
   21640:	muleq	r2, ip, sl
   21644:	muleq	r2, ip, sl
   21648:	muleq	r2, ip, sl
   2164c:	muleq	r2, ip, sl
   21650:	muleq	r2, ip, sl
   21654:	muleq	r2, ip, sl
   21658:	muleq	r2, ip, sl
   2165c:	muleq	r2, ip, sl
   21660:	muleq	r2, ip, sl
   21664:	muleq	r2, ip, sl
   21668:	muleq	r2, ip, sl
   2166c:	muleq	r2, ip, sl
   21670:	muleq	r2, ip, sl
   21674:	muleq	r2, ip, sl
   21678:	muleq	r2, ip, sl
   2167c:	muleq	r2, ip, sl
   21680:	muleq	r2, ip, sl
   21684:	muleq	r2, ip, sl
   21688:	muleq	r2, ip, sl
   2168c:	muleq	r2, ip, sl
   21690:	muleq	r2, ip, sl
   21694:	muleq	r2, ip, sl
   21698:	muleq	r2, ip, sl
   2169c:	andeq	r1, r2, r0, lsl #20
   216a0:	muleq	r2, ip, sl
   216a4:	muleq	r2, ip, sl
   216a8:	muleq	r2, ip, sl
   216ac:	andeq	r1, r2, r4, lsr #18
   216b0:	andeq	r1, r2, r4, asr #18
   216b4:	andeq	r1, r2, r4, asr r8
   216b8:	andeq	r1, r2, r4, ror #16
   216bc:	muleq	r2, ip, sl
   216c0:	muleq	r2, ip, sl
   216c4:	andeq	r1, r2, r4, ror r9
   216c8:	muleq	r2, ip, sl
   216cc:	muleq	r2, ip, sl
   216d0:	muleq	r2, ip, sl
   216d4:	muleq	r2, ip, sl
   216d8:	muleq	r2, ip, sl
   216dc:	muleq	r2, ip, sl
   216e0:	muleq	r2, ip, sl
   216e4:	muleq	r2, ip, sl
   216e8:	muleq	r2, ip, sl
   216ec:	muleq	r2, ip, sl
   216f0:	muleq	r2, ip, sl
   216f4:	muleq	r2, ip, sl
   216f8:	muleq	r2, ip, sl
   216fc:	muleq	r2, ip, sl
   21700:	muleq	r2, ip, sl
   21704:	muleq	r2, ip, sl
   21708:	muleq	r2, r4, r8
   2170c:	muleq	r2, ip, sl
   21710:	muleq	r2, ip, sl
   21714:	muleq	r2, ip, sl
   21718:	muleq	r2, ip, sl
   2171c:	muleq	r2, ip, sl
   21720:	muleq	r2, ip, sl
   21724:	muleq	r2, ip, sl
   21728:	muleq	r2, ip, sl
   2172c:	muleq	r2, ip, sl
   21730:	muleq	r2, ip, sl
   21734:	muleq	r2, ip, sl
   21738:	muleq	r2, ip, sl
   2173c:	muleq	r2, ip, sl
   21740:	muleq	r2, ip, sl
   21744:	muleq	r2, ip, sl
   21748:	muleq	r2, ip, sl
   2174c:	muleq	r2, ip, sl
   21750:	muleq	r2, ip, sl
   21754:	muleq	r2, ip, sl
   21758:	muleq	r2, ip, sl
   2175c:	muleq	r2, ip, sl
   21760:	muleq	r2, ip, sl
   21764:	muleq	r2, ip, sl
   21768:	muleq	r2, ip, sl
   2176c:	muleq	r2, ip, sl
   21770:	muleq	r2, ip, sl
   21774:	muleq	r2, ip, sl
   21778:	andeq	r1, r2, r4, ror #18
   2177c:	muleq	r2, ip, sl
   21780:	muleq	r2, ip, sl
   21784:	andeq	r1, r2, r4, lsl #19
   21788:	muleq	r2, ip, sl
   2178c:	muleq	r2, ip, sl
   21790:	muleq	r2, ip, sl
   21794:	muleq	r2, ip, sl
   21798:	muleq	r2, ip, sl
   2179c:	muleq	r2, ip, sl
   217a0:	muleq	r2, ip, sl
   217a4:	muleq	r2, ip, sl
   217a8:	muleq	r2, ip, sl
   217ac:	muleq	r2, ip, sl
   217b0:	muleq	r2, ip, sl
   217b4:	muleq	r2, ip, sl
   217b8:	muleq	r2, ip, sl
   217bc:	muleq	r2, ip, sl
   217c0:	muleq	r2, ip, sl
   217c4:	muleq	r2, ip, sl
   217c8:	muleq	r2, ip, sl
   217cc:	muleq	r2, ip, sl
   217d0:	muleq	r2, ip, sl
   217d4:	muleq	r2, ip, sl
   217d8:	muleq	r2, ip, sl
   217dc:	muleq	r2, ip, sl
   217e0:	muleq	r2, ip, sl
   217e4:	muleq	r2, ip, sl
   217e8:	muleq	r2, ip, sl
   217ec:	muleq	r2, ip, sl
   217f0:	muleq	r2, ip, sl
   217f4:	muleq	r2, ip, sl
   217f8:	andeq	r1, r2, r4, asr #17
   217fc:	andeq	r1, r2, r4, lsr #16
   21800:	strdeq	r1, [r2], -r4
   21804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21808:	and	r3, r3, #2048	; 0x800
   2180c:	cmp	r3, #0
   21810:	beq	21aa4 <__assert_fail@plt+0x10560>
   21814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21818:	mov	r2, #10
   2181c:	strb	r2, [r3, #4]
   21820:	b	21aa4 <__assert_fail@plt+0x10560>
   21824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21828:	and	r3, r3, #1024	; 0x400
   2182c:	cmp	r3, #0
   21830:	bne	21aac <__assert_fail@plt+0x10568>
   21834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21838:	and	r3, r3, #32768	; 0x8000
   2183c:	cmp	r3, #0
   21840:	beq	21aac <__assert_fail@plt+0x10568>
   21844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21848:	mov	r2, #10
   2184c:	strb	r2, [r3, #4]
   21850:	b	21aac <__assert_fail@plt+0x10568>
   21854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21858:	mov	r2, #11
   2185c:	strb	r2, [r3, #4]
   21860:	b	21ae8 <__assert_fail@plt+0x105a4>
   21864:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21868:	and	r3, r3, #1024	; 0x400
   2186c:	cmp	r3, #0
   21870:	bne	21ab4 <__assert_fail@plt+0x10570>
   21874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21878:	and	r3, r3, #2
   2187c:	cmp	r3, #0
   21880:	bne	21ab4 <__assert_fail@plt+0x10570>
   21884:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21888:	mov	r2, #18
   2188c:	strb	r2, [r3, #4]
   21890:	b	21ab4 <__assert_fail@plt+0x10570>
   21894:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21898:	and	r3, r3, #1024	; 0x400
   2189c:	cmp	r3, #0
   218a0:	bne	21abc <__assert_fail@plt+0x10578>
   218a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   218a8:	and	r3, r3, #2
   218ac:	cmp	r3, #0
   218b0:	bne	21abc <__assert_fail@plt+0x10578>
   218b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   218b8:	mov	r2, #19
   218bc:	strb	r2, [r3, #4]
   218c0:	b	21abc <__assert_fail@plt+0x10578>
   218c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   218c8:	and	r3, r3, #512	; 0x200
   218cc:	cmp	r3, #0
   218d0:	beq	21ac4 <__assert_fail@plt+0x10580>
   218d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   218d8:	and	r3, r3, #4096	; 0x1000
   218dc:	cmp	r3, #0
   218e0:	beq	21ac4 <__assert_fail@plt+0x10580>
   218e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   218e8:	mov	r2, #23
   218ec:	strb	r2, [r3, #4]
   218f0:	b	21ac4 <__assert_fail@plt+0x10580>
   218f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   218f8:	and	r3, r3, #512	; 0x200
   218fc:	cmp	r3, #0
   21900:	beq	21acc <__assert_fail@plt+0x10588>
   21904:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21908:	and	r3, r3, #4096	; 0x1000
   2190c:	cmp	r3, #0
   21910:	beq	21acc <__assert_fail@plt+0x10588>
   21914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21918:	mov	r2, #24
   2191c:	strb	r2, [r3, #4]
   21920:	b	21acc <__assert_fail@plt+0x10588>
   21924:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21928:	and	r3, r3, #8192	; 0x2000
   2192c:	cmp	r3, #0
   21930:	beq	21ad4 <__assert_fail@plt+0x10590>
   21934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21938:	mov	r2, #8
   2193c:	strb	r2, [r3, #4]
   21940:	b	21ad4 <__assert_fail@plt+0x10590>
   21944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21948:	and	r3, r3, #8192	; 0x2000
   2194c:	cmp	r3, #0
   21950:	beq	21adc <__assert_fail@plt+0x10598>
   21954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21958:	mov	r2, #9
   2195c:	strb	r2, [r3, #4]
   21960:	b	21adc <__assert_fail@plt+0x10598>
   21964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21968:	mov	r2, #20
   2196c:	strb	r2, [r3, #4]
   21970:	b	21ae8 <__assert_fail@plt+0x105a4>
   21974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21978:	mov	r2, #5
   2197c:	strb	r2, [r3, #4]
   21980:	b	21ae8 <__assert_fail@plt+0x105a4>
   21984:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21988:	ldr	r3, [pc, #360]	; 21af8 <__assert_fail@plt+0x105b4>
   2198c:	and	r3, r3, r2
   21990:	cmp	r3, #0
   21994:	bne	219e4 <__assert_fail@plt+0x104a0>
   21998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2199c:	ldr	r3, [r3, #40]	; 0x28
   219a0:	cmp	r3, #0
   219a4:	beq	219e4 <__assert_fail@plt+0x104a0>
   219a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219ac:	ldr	r2, [r3, #4]
   219b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   219b4:	ldr	r3, [r3, #40]	; 0x28
   219b8:	sub	r3, r3, #1
   219bc:	add	r3, r2, r3
   219c0:	ldrb	r3, [r3]
   219c4:	strb	r3, [fp, #-17]	; 0xffffffef
   219c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   219cc:	and	r3, r3, #2048	; 0x800
   219d0:	cmp	r3, #0
   219d4:	beq	21ae8 <__assert_fail@plt+0x105a4>
   219d8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   219dc:	cmp	r3, #10
   219e0:	bne	21ae8 <__assert_fail@plt+0x105a4>
   219e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219e8:	mov	r2, #12
   219ec:	strb	r2, [r3, #4]
   219f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219f4:	mov	r2, #16
   219f8:	str	r2, [r3]
   219fc:	b	21ae8 <__assert_fail@plt+0x105a4>
   21a00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21a04:	and	r3, r3, #8
   21a08:	cmp	r3, #0
   21a0c:	bne	21a80 <__assert_fail@plt+0x1053c>
   21a10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a14:	ldr	r3, [r3, #40]	; 0x28
   21a18:	add	r2, r3, #1
   21a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a20:	ldr	r3, [r3, #48]	; 0x30
   21a24:	cmp	r2, r3
   21a28:	beq	21a80 <__assert_fail@plt+0x1053c>
   21a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a30:	ldr	r3, [r3, #40]	; 0x28
   21a34:	add	r2, r3, #1
   21a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a3c:	str	r2, [r3, #40]	; 0x28
   21a40:	sub	r3, fp, #28
   21a44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21a48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21a4c:	mov	r0, r3
   21a50:	bl	20dc4 <__assert_fail@plt+0xf880>
   21a54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a58:	ldr	r3, [r3, #40]	; 0x28
   21a5c:	sub	r2, r3, #1
   21a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21a64:	str	r2, [r3, #40]	; 0x28
   21a68:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   21a6c:	cmp	r3, #10
   21a70:	beq	21a80 <__assert_fail@plt+0x1053c>
   21a74:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   21a78:	cmp	r3, #9
   21a7c:	bne	21ae4 <__assert_fail@plt+0x105a0>
   21a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a84:	mov	r2, #12
   21a88:	strb	r2, [r3, #4]
   21a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a90:	mov	r2, #32
   21a94:	str	r2, [r3]
   21a98:	b	21ae8 <__assert_fail@plt+0x105a4>
   21a9c:	nop			; (mov r0, r0)
   21aa0:	b	21ae8 <__assert_fail@plt+0x105a4>
   21aa4:	nop			; (mov r0, r0)
   21aa8:	b	21ae8 <__assert_fail@plt+0x105a4>
   21aac:	nop			; (mov r0, r0)
   21ab0:	b	21ae8 <__assert_fail@plt+0x105a4>
   21ab4:	nop			; (mov r0, r0)
   21ab8:	b	21ae8 <__assert_fail@plt+0x105a4>
   21abc:	nop			; (mov r0, r0)
   21ac0:	b	21ae8 <__assert_fail@plt+0x105a4>
   21ac4:	nop			; (mov r0, r0)
   21ac8:	b	21ae8 <__assert_fail@plt+0x105a4>
   21acc:	nop			; (mov r0, r0)
   21ad0:	b	21ae8 <__assert_fail@plt+0x105a4>
   21ad4:	nop			; (mov r0, r0)
   21ad8:	b	21ae8 <__assert_fail@plt+0x105a4>
   21adc:	nop			; (mov r0, r0)
   21ae0:	b	21ae8 <__assert_fail@plt+0x105a4>
   21ae4:	nop			; (mov r0, r0)
   21ae8:	mov	r3, #1
   21aec:	mov	r0, r3
   21af0:	sub	sp, fp, #4
   21af4:	pop	{fp, pc}
   21af8:	addeq	r0, r0, r8
   21afc:	push	{fp}		; (str fp, [sp, #-4]!)
   21b00:	add	fp, sp, #0
   21b04:	sub	sp, sp, #36	; 0x24
   21b08:	str	r0, [fp, #-24]	; 0xffffffe8
   21b0c:	str	r1, [fp, #-28]	; 0xffffffe4
   21b10:	str	r2, [fp, #-32]	; 0xffffffe0
   21b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b18:	ldr	r2, [r3, #56]	; 0x38
   21b1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b20:	ldr	r3, [r3, #40]	; 0x28
   21b24:	cmp	r2, r3
   21b28:	bgt	21b40 <__assert_fail@plt+0x105fc>
   21b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21b30:	mov	r2, #2
   21b34:	strb	r2, [r3, #4]
   21b38:	mov	r3, #0
   21b3c:	b	21d9c <__assert_fail@plt+0x10858>
   21b40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b44:	ldr	r3, [r3, #4]
   21b48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21b4c:	ldr	r2, [r2, #40]	; 0x28
   21b50:	add	r3, r3, r2
   21b54:	ldrb	r3, [r3]
   21b58:	strb	r3, [fp, #-13]
   21b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21b60:	ldrb	r2, [fp, #-13]
   21b64:	strb	r2, [r3]
   21b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b6c:	ldr	r3, [r3, #80]	; 0x50
   21b70:	cmp	r3, #1
   21b74:	ble	21bc8 <__assert_fail@plt+0x10684>
   21b78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b7c:	ldr	r2, [r3, #40]	; 0x28
   21b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b84:	ldr	r3, [r3, #28]
   21b88:	cmp	r2, r3
   21b8c:	beq	21bc8 <__assert_fail@plt+0x10684>
   21b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b94:	ldr	r2, [r3, #8]
   21b98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21b9c:	ldr	r3, [r3, #40]	; 0x28
   21ba0:	lsl	r3, r3, #2
   21ba4:	add	r3, r2, r3
   21ba8:	ldr	r3, [r3]
   21bac:	cmn	r3, #1
   21bb0:	bne	21bc8 <__assert_fail@plt+0x10684>
   21bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21bb8:	mov	r2, #1
   21bbc:	strb	r2, [r3, #4]
   21bc0:	mov	r3, #1
   21bc4:	b	21d9c <__assert_fail@plt+0x10858>
   21bc8:	ldrb	r3, [fp, #-13]
   21bcc:	cmp	r3, #92	; 0x5c
   21bd0:	bne	21c50 <__assert_fail@plt+0x1070c>
   21bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21bd8:	and	r3, r3, #1
   21bdc:	cmp	r3, #0
   21be0:	beq	21c50 <__assert_fail@plt+0x1070c>
   21be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21be8:	ldr	r3, [r3, #40]	; 0x28
   21bec:	add	r2, r3, #1
   21bf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21bf4:	ldr	r3, [r3, #48]	; 0x30
   21bf8:	cmp	r2, r3
   21bfc:	bge	21c50 <__assert_fail@plt+0x1070c>
   21c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c04:	ldr	r3, [r3, #40]	; 0x28
   21c08:	add	r2, r3, #1
   21c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c10:	str	r2, [r3, #40]	; 0x28
   21c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c18:	ldr	r3, [r3, #4]
   21c1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21c20:	ldr	r2, [r2, #40]	; 0x28
   21c24:	add	r3, r3, r2
   21c28:	ldrb	r3, [r3]
   21c2c:	strb	r3, [fp, #-14]
   21c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c34:	ldrb	r2, [fp, #-14]
   21c38:	strb	r2, [r3]
   21c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c40:	mov	r2, #1
   21c44:	strb	r2, [r3, #4]
   21c48:	mov	r3, #1
   21c4c:	b	21d9c <__assert_fail@plt+0x10858>
   21c50:	ldrb	r3, [fp, #-13]
   21c54:	cmp	r3, #91	; 0x5b
   21c58:	bne	21d40 <__assert_fail@plt+0x107fc>
   21c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c60:	ldr	r3, [r3, #40]	; 0x28
   21c64:	add	r2, r3, #1
   21c68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c6c:	ldr	r3, [r3, #48]	; 0x30
   21c70:	cmp	r2, r3
   21c74:	bge	21c9c <__assert_fail@plt+0x10758>
   21c78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c7c:	ldr	r2, [r3, #4]
   21c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c84:	ldr	r3, [r3, #40]	; 0x28
   21c88:	add	r3, r3, #1
   21c8c:	add	r3, r2, r3
   21c90:	ldrb	r3, [r3]
   21c94:	strb	r3, [fp, #-5]
   21c98:	b	21ca4 <__assert_fail@plt+0x10760>
   21c9c:	mov	r3, #0
   21ca0:	strb	r3, [fp, #-5]
   21ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ca8:	ldrb	r2, [fp, #-5]
   21cac:	strb	r2, [r3]
   21cb0:	mov	r3, #2
   21cb4:	str	r3, [fp, #-12]
   21cb8:	ldrb	r3, [fp, #-5]
   21cbc:	cmp	r3, #58	; 0x3a
   21cc0:	beq	21cf4 <__assert_fail@plt+0x107b0>
   21cc4:	cmp	r3, #61	; 0x3d
   21cc8:	beq	21ce4 <__assert_fail@plt+0x107a0>
   21ccc:	cmp	r3, #46	; 0x2e
   21cd0:	bne	21d14 <__assert_fail@plt+0x107d0>
   21cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21cd8:	mov	r2, #26
   21cdc:	strb	r2, [r3, #4]
   21ce0:	b	21d38 <__assert_fail@plt+0x107f4>
   21ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21ce8:	mov	r2, #28
   21cec:	strb	r2, [r3, #4]
   21cf0:	b	21d38 <__assert_fail@plt+0x107f4>
   21cf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21cf8:	and	r3, r3, #4
   21cfc:	cmp	r3, #0
   21d00:	beq	21d14 <__assert_fail@plt+0x107d0>
   21d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d08:	mov	r2, #30
   21d0c:	strb	r2, [r3, #4]
   21d10:	b	21d38 <__assert_fail@plt+0x107f4>
   21d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d18:	mov	r2, #1
   21d1c:	strb	r2, [r3, #4]
   21d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d24:	ldrb	r2, [fp, #-13]
   21d28:	strb	r2, [r3]
   21d2c:	mov	r3, #1
   21d30:	str	r3, [fp, #-12]
   21d34:	nop			; (mov r0, r0)
   21d38:	ldr	r3, [fp, #-12]
   21d3c:	b	21d9c <__assert_fail@plt+0x10858>
   21d40:	ldrb	r3, [fp, #-13]
   21d44:	cmp	r3, #93	; 0x5d
   21d48:	beq	21d6c <__assert_fail@plt+0x10828>
   21d4c:	cmp	r3, #94	; 0x5e
   21d50:	beq	21d7c <__assert_fail@plt+0x10838>
   21d54:	cmp	r3, #45	; 0x2d
   21d58:	bne	21d8c <__assert_fail@plt+0x10848>
   21d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d60:	mov	r2, #22
   21d64:	strb	r2, [r3, #4]
   21d68:	b	21d98 <__assert_fail@plt+0x10854>
   21d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d70:	mov	r2, #21
   21d74:	strb	r2, [r3, #4]
   21d78:	b	21d98 <__assert_fail@plt+0x10854>
   21d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d80:	mov	r2, #25
   21d84:	strb	r2, [r3, #4]
   21d88:	b	21d98 <__assert_fail@plt+0x10854>
   21d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21d90:	mov	r2, #1
   21d94:	strb	r2, [r3, #4]
   21d98:	mov	r3, #1
   21d9c:	mov	r0, r3
   21da0:	add	sp, fp, #0
   21da4:	pop	{fp}		; (ldr fp, [sp], #4)
   21da8:	bx	lr
   21dac:	push	{fp, lr}
   21db0:	add	fp, sp, #4
   21db4:	sub	sp, sp, #48	; 0x30
   21db8:	str	r0, [fp, #-32]	; 0xffffffe0
   21dbc:	str	r1, [fp, #-36]	; 0xffffffdc
   21dc0:	str	r2, [fp, #-40]	; 0xffffffd8
   21dc4:	str	r3, [fp, #-44]	; 0xffffffd4
   21dc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21dcc:	ldr	r3, [r3]
   21dd0:	str	r3, [fp, #-12]
   21dd4:	ldr	r3, [fp, #-12]
   21dd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21ddc:	str	r2, [r3, #128]	; 0x80
   21de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21de4:	orr	r2, r3, #8388608	; 0x800000
   21de8:	sub	r3, fp, #28
   21dec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21df0:	mov	r0, r3
   21df4:	bl	20d78 <__assert_fail@plt+0xf834>
   21df8:	sub	r2, fp, #28
   21dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21e00:	str	r3, [sp, #4]
   21e04:	mov	r3, #0
   21e08:	str	r3, [sp]
   21e0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21e10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21e18:	bl	21f08 <__assert_fail@plt+0x109c4>
   21e1c:	str	r0, [fp, #-16]
   21e20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21e24:	ldr	r3, [r3]
   21e28:	cmp	r3, #0
   21e2c:	movne	r3, #1
   21e30:	moveq	r3, #0
   21e34:	uxtb	r3, r3
   21e38:	cmp	r3, #0
   21e3c:	beq	21e64 <__assert_fail@plt+0x10920>
   21e40:	ldr	r3, [fp, #-16]
   21e44:	cmp	r3, #0
   21e48:	moveq	r3, #1
   21e4c:	movne	r3, #0
   21e50:	uxtb	r3, r3
   21e54:	cmp	r3, #0
   21e58:	beq	21e64 <__assert_fail@plt+0x10920>
   21e5c:	mov	r3, #0
   21e60:	b	21efc <__assert_fail@plt+0x109b8>
   21e64:	mov	r3, #2
   21e68:	mov	r2, #0
   21e6c:	mov	r1, #0
   21e70:	ldr	r0, [fp, #-12]
   21e74:	bl	25964 <__assert_fail@plt+0x14420>
   21e78:	str	r0, [fp, #-20]	; 0xffffffec
   21e7c:	ldr	r3, [fp, #-16]
   21e80:	cmp	r3, #0
   21e84:	beq	21ea4 <__assert_fail@plt+0x10960>
   21e88:	mov	r3, #16
   21e8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e90:	ldr	r1, [fp, #-16]
   21e94:	ldr	r0, [fp, #-12]
   21e98:	bl	25964 <__assert_fail@plt+0x14420>
   21e9c:	str	r0, [fp, #-8]
   21ea0:	b	21eac <__assert_fail@plt+0x10968>
   21ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ea8:	str	r3, [fp, #-8]
   21eac:	ldr	r3, [fp, #-20]	; 0xffffffec
   21eb0:	cmp	r3, #0
   21eb4:	moveq	r3, #1
   21eb8:	movne	r3, #0
   21ebc:	uxtb	r3, r3
   21ec0:	cmp	r3, #0
   21ec4:	bne	21ee4 <__assert_fail@plt+0x109a0>
   21ec8:	ldr	r3, [fp, #-8]
   21ecc:	cmp	r3, #0
   21ed0:	moveq	r3, #1
   21ed4:	movne	r3, #0
   21ed8:	uxtb	r3, r3
   21edc:	cmp	r3, #0
   21ee0:	beq	21ef8 <__assert_fail@plt+0x109b4>
   21ee4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21ee8:	mov	r2, #12
   21eec:	str	r2, [r3]
   21ef0:	mov	r3, #0
   21ef4:	b	21efc <__assert_fail@plt+0x109b8>
   21ef8:	ldr	r3, [fp, #-8]
   21efc:	mov	r0, r3
   21f00:	sub	sp, fp, #4
   21f04:	pop	{fp, pc}
   21f08:	push	{fp, lr}
   21f0c:	add	fp, sp, #4
   21f10:	sub	sp, sp, #48	; 0x30
   21f14:	str	r0, [fp, #-32]	; 0xffffffe0
   21f18:	str	r1, [fp, #-36]	; 0xffffffdc
   21f1c:	str	r2, [fp, #-40]	; 0xffffffd8
   21f20:	str	r3, [fp, #-44]	; 0xffffffd4
   21f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21f28:	ldr	r3, [r3]
   21f2c:	str	r3, [fp, #-16]
   21f30:	mov	r3, #0
   21f34:	str	r3, [fp, #-12]
   21f38:	ldr	r3, [fp, #-16]
   21f3c:	ldr	r3, [r3, #84]	; 0x54
   21f40:	str	r3, [fp, #-20]	; 0xffffffec
   21f44:	ldr	r3, [fp, #8]
   21f48:	str	r3, [sp, #4]
   21f4c:	ldr	r3, [fp, #4]
   21f50:	str	r3, [sp]
   21f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21f58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21f5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21f64:	bl	22134 <__assert_fail@plt+0x10bf0>
   21f68:	str	r0, [fp, #-8]
   21f6c:	ldr	r3, [fp, #8]
   21f70:	ldr	r3, [r3]
   21f74:	cmp	r3, #0
   21f78:	movne	r3, #1
   21f7c:	moveq	r3, #0
   21f80:	uxtb	r3, r3
   21f84:	cmp	r3, #0
   21f88:	beq	22110 <__assert_fail@plt+0x10bcc>
   21f8c:	ldr	r3, [fp, #-8]
   21f90:	cmp	r3, #0
   21f94:	moveq	r3, #1
   21f98:	movne	r3, #0
   21f9c:	uxtb	r3, r3
   21fa0:	cmp	r3, #0
   21fa4:	beq	22110 <__assert_fail@plt+0x10bcc>
   21fa8:	mov	r3, #0
   21fac:	b	22124 <__assert_fail@plt+0x10be0>
   21fb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21fb4:	orr	r3, r3, #8388608	; 0x800000
   21fb8:	mov	r2, r3
   21fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   21fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21fc4:	bl	20d78 <__assert_fail@plt+0xf834>
   21fc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21fcc:	ldrb	r3, [r3, #4]
   21fd0:	cmp	r3, #10
   21fd4:	beq	220c0 <__assert_fail@plt+0x10b7c>
   21fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21fdc:	ldrb	r3, [r3, #4]
   21fe0:	cmp	r3, #2
   21fe4:	beq	220c0 <__assert_fail@plt+0x10b7c>
   21fe8:	ldr	r3, [fp, #4]
   21fec:	cmp	r3, #0
   21ff0:	beq	22004 <__assert_fail@plt+0x10ac0>
   21ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21ff8:	ldrb	r3, [r3, #4]
   21ffc:	cmp	r3, #9
   22000:	beq	220c0 <__assert_fail@plt+0x10b7c>
   22004:	ldr	r3, [fp, #-16]
   22008:	ldr	r3, [r3, #84]	; 0x54
   2200c:	str	r3, [fp, #-24]	; 0xffffffe8
   22010:	ldr	r3, [fp, #-16]
   22014:	ldr	r2, [fp, #-20]	; 0xffffffec
   22018:	str	r2, [r3, #84]	; 0x54
   2201c:	ldr	r3, [fp, #8]
   22020:	str	r3, [sp, #4]
   22024:	ldr	r3, [fp, #4]
   22028:	str	r3, [sp]
   2202c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22030:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22034:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2203c:	bl	22134 <__assert_fail@plt+0x10bf0>
   22040:	str	r0, [fp, #-12]
   22044:	ldr	r3, [fp, #8]
   22048:	ldr	r3, [r3]
   2204c:	cmp	r3, #0
   22050:	movne	r3, #1
   22054:	moveq	r3, #0
   22058:	uxtb	r3, r3
   2205c:	cmp	r3, #0
   22060:	beq	220a4 <__assert_fail@plt+0x10b60>
   22064:	ldr	r3, [fp, #-12]
   22068:	cmp	r3, #0
   2206c:	moveq	r3, #1
   22070:	movne	r3, #0
   22074:	uxtb	r3, r3
   22078:	cmp	r3, #0
   2207c:	beq	220a4 <__assert_fail@plt+0x10b60>
   22080:	ldr	r3, [fp, #-8]
   22084:	cmp	r3, #0
   22088:	beq	2209c <__assert_fail@plt+0x10b58>
   2208c:	mov	r2, #0
   22090:	ldr	r1, [pc, #152]	; 22130 <__assert_fail@plt+0x10bec>
   22094:	ldr	r0, [fp, #-8]
   22098:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   2209c:	mov	r3, #0
   220a0:	b	22124 <__assert_fail@plt+0x10be0>
   220a4:	ldr	r3, [fp, #-16]
   220a8:	ldr	r2, [r3, #84]	; 0x54
   220ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   220b0:	orr	r2, r2, r3
   220b4:	ldr	r3, [fp, #-16]
   220b8:	str	r2, [r3, #84]	; 0x54
   220bc:	b	220c8 <__assert_fail@plt+0x10b84>
   220c0:	mov	r3, #0
   220c4:	str	r3, [fp, #-12]
   220c8:	mov	r3, #10
   220cc:	ldr	r2, [fp, #-12]
   220d0:	ldr	r1, [fp, #-8]
   220d4:	ldr	r0, [fp, #-16]
   220d8:	bl	25964 <__assert_fail@plt+0x14420>
   220dc:	str	r0, [fp, #-8]
   220e0:	ldr	r3, [fp, #-8]
   220e4:	cmp	r3, #0
   220e8:	moveq	r3, #1
   220ec:	movne	r3, #0
   220f0:	uxtb	r3, r3
   220f4:	cmp	r3, #0
   220f8:	beq	22110 <__assert_fail@plt+0x10bcc>
   220fc:	ldr	r3, [fp, #8]
   22100:	mov	r2, #12
   22104:	str	r2, [r3]
   22108:	mov	r3, #0
   2210c:	b	22124 <__assert_fail@plt+0x10be0>
   22110:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22114:	ldrb	r3, [r3, #4]
   22118:	cmp	r3, #10
   2211c:	beq	21fb0 <__assert_fail@plt+0x10a6c>
   22120:	ldr	r3, [fp, #-8]
   22124:	mov	r0, r3
   22128:	sub	sp, fp, #4
   2212c:	pop	{fp, pc}
   22130:	andeq	r5, r2, r4, lsr #24
   22134:	push	{fp, lr}
   22138:	add	fp, sp, #4
   2213c:	sub	sp, sp, #40	; 0x28
   22140:	str	r0, [fp, #-24]	; 0xffffffe8
   22144:	str	r1, [fp, #-28]	; 0xffffffe4
   22148:	str	r2, [fp, #-32]	; 0xffffffe0
   2214c:	str	r3, [fp, #-36]	; 0xffffffdc
   22150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22154:	ldr	r3, [r3]
   22158:	str	r3, [fp, #-12]
   2215c:	ldr	r3, [fp, #8]
   22160:	str	r3, [sp, #4]
   22164:	ldr	r3, [fp, #4]
   22168:	str	r3, [sp]
   2216c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22170:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2217c:	bl	22330 <__assert_fail@plt+0x10dec>
   22180:	str	r0, [fp, #-8]
   22184:	ldr	r3, [fp, #8]
   22188:	ldr	r3, [r3]
   2218c:	cmp	r3, #0
   22190:	movne	r3, #1
   22194:	moveq	r3, #0
   22198:	uxtb	r3, r3
   2219c:	cmp	r3, #0
   221a0:	beq	222e0 <__assert_fail@plt+0x10d9c>
   221a4:	ldr	r3, [fp, #-8]
   221a8:	cmp	r3, #0
   221ac:	moveq	r3, #1
   221b0:	movne	r3, #0
   221b4:	uxtb	r3, r3
   221b8:	cmp	r3, #0
   221bc:	beq	222e0 <__assert_fail@plt+0x10d9c>
   221c0:	mov	r3, #0
   221c4:	b	22320 <__assert_fail@plt+0x10ddc>
   221c8:	ldr	r3, [fp, #8]
   221cc:	str	r3, [sp, #4]
   221d0:	ldr	r3, [fp, #4]
   221d4:	str	r3, [sp]
   221d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   221dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   221e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   221e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   221e8:	bl	22330 <__assert_fail@plt+0x10dec>
   221ec:	str	r0, [fp, #-16]
   221f0:	ldr	r3, [fp, #8]
   221f4:	ldr	r3, [r3]
   221f8:	cmp	r3, #0
   221fc:	movne	r3, #1
   22200:	moveq	r3, #0
   22204:	uxtb	r3, r3
   22208:	cmp	r3, #0
   2220c:	beq	22250 <__assert_fail@plt+0x10d0c>
   22210:	ldr	r3, [fp, #-16]
   22214:	cmp	r3, #0
   22218:	moveq	r3, #1
   2221c:	movne	r3, #0
   22220:	uxtb	r3, r3
   22224:	cmp	r3, #0
   22228:	beq	22250 <__assert_fail@plt+0x10d0c>
   2222c:	ldr	r3, [fp, #-8]
   22230:	cmp	r3, #0
   22234:	beq	22248 <__assert_fail@plt+0x10d04>
   22238:	mov	r2, #0
   2223c:	ldr	r1, [pc, #232]	; 2232c <__assert_fail@plt+0x10de8>
   22240:	ldr	r0, [fp, #-8]
   22244:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   22248:	mov	r3, #0
   2224c:	b	22320 <__assert_fail@plt+0x10ddc>
   22250:	ldr	r3, [fp, #-8]
   22254:	cmp	r3, #0
   22258:	beq	222cc <__assert_fail@plt+0x10d88>
   2225c:	ldr	r3, [fp, #-16]
   22260:	cmp	r3, #0
   22264:	beq	222cc <__assert_fail@plt+0x10d88>
   22268:	mov	r3, #16
   2226c:	ldr	r2, [fp, #-16]
   22270:	ldr	r1, [fp, #-8]
   22274:	ldr	r0, [fp, #-12]
   22278:	bl	25964 <__assert_fail@plt+0x14420>
   2227c:	str	r0, [fp, #-20]	; 0xffffffec
   22280:	ldr	r3, [fp, #-20]	; 0xffffffec
   22284:	cmp	r3, #0
   22288:	bne	222c0 <__assert_fail@plt+0x10d7c>
   2228c:	mov	r2, #0
   22290:	ldr	r1, [pc, #148]	; 2232c <__assert_fail@plt+0x10de8>
   22294:	ldr	r0, [fp, #-16]
   22298:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   2229c:	mov	r2, #0
   222a0:	ldr	r1, [pc, #132]	; 2232c <__assert_fail@plt+0x10de8>
   222a4:	ldr	r0, [fp, #-8]
   222a8:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   222ac:	ldr	r3, [fp, #8]
   222b0:	mov	r2, #12
   222b4:	str	r2, [r3]
   222b8:	mov	r3, #0
   222bc:	b	22320 <__assert_fail@plt+0x10ddc>
   222c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   222c4:	str	r3, [fp, #-8]
   222c8:	b	222e0 <__assert_fail@plt+0x10d9c>
   222cc:	ldr	r3, [fp, #-8]
   222d0:	cmp	r3, #0
   222d4:	bne	222e0 <__assert_fail@plt+0x10d9c>
   222d8:	ldr	r3, [fp, #-16]
   222dc:	str	r3, [fp, #-8]
   222e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   222e4:	ldrb	r3, [r3, #4]
   222e8:	cmp	r3, #10
   222ec:	beq	2231c <__assert_fail@plt+0x10dd8>
   222f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   222f4:	ldrb	r3, [r3, #4]
   222f8:	cmp	r3, #2
   222fc:	beq	2231c <__assert_fail@plt+0x10dd8>
   22300:	ldr	r3, [fp, #4]
   22304:	cmp	r3, #0
   22308:	beq	221c8 <__assert_fail@plt+0x10c84>
   2230c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22310:	ldrb	r3, [r3, #4]
   22314:	cmp	r3, #9
   22318:	bne	221c8 <__assert_fail@plt+0x10c84>
   2231c:	ldr	r3, [fp, #-8]
   22320:	mov	r0, r3
   22324:	sub	sp, fp, #4
   22328:	pop	{fp, pc}
   2232c:	andeq	r5, r2, r4, lsr #24
   22330:	push	{fp, lr}
   22334:	add	fp, sp, #4
   22338:	sub	sp, sp, #48	; 0x30
   2233c:	str	r0, [fp, #-32]	; 0xffffffe0
   22340:	str	r1, [fp, #-36]	; 0xffffffdc
   22344:	str	r2, [fp, #-40]	; 0xffffffd8
   22348:	str	r3, [fp, #-44]	; 0xffffffd4
   2234c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22350:	ldr	r3, [r3]
   22354:	str	r3, [fp, #-16]
   22358:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2235c:	ldrb	r3, [r3, #4]
   22360:	sub	r3, r3, #1
   22364:	cmp	r3, #35	; 0x23
   22368:	ldrls	pc, [pc, r3, lsl #2]
   2236c:	b	22b68 <__assert_fail@plt+0x11624>
   22370:	andeq	r2, r2, r0, lsl #8
   22374:	andeq	r2, r2, ip, asr #22
   22378:	andeq	r2, r2, r8, ror #22
   2237c:	andeq	r2, r2, r4, lsl r6
   22380:	ldrdeq	r2, [r2], -r8
   22384:	andeq	r2, r2, r8, ror #22
   22388:	andeq	r2, r2, r8, ror #22
   2238c:	andeq	r2, r2, r0, asr #10
   22390:	andeq	r2, r2, r4, ror r7
   22394:	andeq	r2, r2, ip, asr #22
   22398:	andeq	r2, r2, r4, lsl #14
   2239c:	strdeq	r2, [r2], -ip
   223a0:	andeq	r2, r2, r8, ror #22
   223a4:	andeq	r2, r2, r8, ror #22
   223a8:	andeq	r2, r2, r8, ror #22
   223ac:	andeq	r2, r2, r8, ror #22
   223b0:	andeq	r2, r2, r8, ror #22
   223b4:	andeq	r2, r2, r4, lsl #14
   223b8:	andeq	r2, r2, r4, lsl #14
   223bc:			; <UNDEFINED> instruction: 0x000225b0
   223c0:	andeq	r2, r2, r8, ror #22
   223c4:	andeq	r2, r2, r8, ror #22
   223c8:	andeq	r2, r2, r0, ror #13
   223cc:	andeq	r2, r2, r8, lsr #15
   223d0:	andeq	r2, r2, r8, ror #22
   223d4:	andeq	r2, r2, r8, ror #22
   223d8:	andeq	r2, r2, r8, ror #22
   223dc:	andeq	r2, r2, r8, ror #22
   223e0:	andeq	r2, r2, r8, ror #22
   223e4:	andeq	r2, r2, r8, ror #22
   223e8:	andeq	r2, r2, r8, ror #22
   223ec:	andeq	r2, r2, r4, asr #20
   223f0:	andeq	r2, r2, r4, asr #20
   223f4:	andeq	r2, r2, r8, asr #21
   223f8:	andeq	r2, r2, r8, asr #21
   223fc:	andeq	r2, r2, r4, asr fp
   22400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22404:	mov	r2, #0
   22408:	mov	r1, #0
   2240c:	ldr	r0, [fp, #-16]
   22410:	bl	259c0 <__assert_fail@plt+0x1447c>
   22414:	str	r0, [fp, #-8]
   22418:	ldr	r3, [fp, #-8]
   2241c:	cmp	r3, #0
   22420:	moveq	r3, #1
   22424:	movne	r3, #0
   22428:	uxtb	r3, r3
   2242c:	cmp	r3, #0
   22430:	beq	22448 <__assert_fail@plt+0x10f04>
   22434:	ldr	r3, [fp, #8]
   22438:	mov	r2, #12
   2243c:	str	r2, [r3]
   22440:	mov	r3, #0
   22444:	b	22ce4 <__assert_fail@plt+0x117a0>
   22448:	ldr	r3, [fp, #-16]
   2244c:	ldr	r3, [r3, #92]	; 0x5c
   22450:	cmp	r3, #1
   22454:	ble	22b68 <__assert_fail@plt+0x11624>
   22458:	b	224e8 <__assert_fail@plt+0x10fa4>
   2245c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22460:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22464:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22468:	bl	20d78 <__assert_fail@plt+0xf834>
   2246c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22470:	mov	r2, #0
   22474:	mov	r1, #0
   22478:	ldr	r0, [fp, #-16]
   2247c:	bl	259c0 <__assert_fail@plt+0x1447c>
   22480:	str	r0, [fp, #-20]	; 0xffffffec
   22484:	mov	r3, #16
   22488:	ldr	r2, [fp, #-20]	; 0xffffffec
   2248c:	ldr	r1, [fp, #-8]
   22490:	ldr	r0, [fp, #-16]
   22494:	bl	25964 <__assert_fail@plt+0x14420>
   22498:	str	r0, [fp, #-8]
   2249c:	ldr	r3, [fp, #-20]	; 0xffffffec
   224a0:	cmp	r3, #0
   224a4:	moveq	r3, #1
   224a8:	movne	r3, #0
   224ac:	uxtb	r3, r3
   224b0:	cmp	r3, #0
   224b4:	bne	224d4 <__assert_fail@plt+0x10f90>
   224b8:	ldr	r3, [fp, #-8]
   224bc:	cmp	r3, #0
   224c0:	moveq	r3, #1
   224c4:	movne	r3, #0
   224c8:	uxtb	r3, r3
   224cc:	cmp	r3, #0
   224d0:	beq	224e8 <__assert_fail@plt+0x10fa4>
   224d4:	ldr	r3, [fp, #8]
   224d8:	mov	r2, #12
   224dc:	str	r2, [r3]
   224e0:	mov	r3, #0
   224e4:	b	22ce4 <__assert_fail@plt+0x117a0>
   224e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   224ec:	ldr	r2, [r3, #56]	; 0x38
   224f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   224f4:	ldr	r3, [r3, #40]	; 0x28
   224f8:	cmp	r2, r3
   224fc:	ble	22b68 <__assert_fail@plt+0x11624>
   22500:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22504:	ldr	r2, [r3, #40]	; 0x28
   22508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2250c:	ldr	r3, [r3, #28]
   22510:	cmp	r2, r3
   22514:	beq	22b68 <__assert_fail@plt+0x11624>
   22518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2251c:	ldr	r2, [r3, #8]
   22520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22524:	ldr	r3, [r3, #40]	; 0x28
   22528:	lsl	r3, r3, #2
   2252c:	add	r3, r2, r3
   22530:	ldr	r3, [r3]
   22534:	cmn	r3, #1
   22538:	beq	2245c <__assert_fail@plt+0x10f18>
   2253c:	b	22b68 <__assert_fail@plt+0x11624>
   22540:	ldr	r3, [fp, #4]
   22544:	add	r3, r3, #1
   22548:	ldr	r2, [fp, #8]
   2254c:	str	r2, [sp, #4]
   22550:	str	r3, [sp]
   22554:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22558:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2255c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22564:	bl	22d08 <__assert_fail@plt+0x117c4>
   22568:	str	r0, [fp, #-8]
   2256c:	ldr	r3, [fp, #8]
   22570:	ldr	r3, [r3]
   22574:	cmp	r3, #0
   22578:	movne	r3, #1
   2257c:	moveq	r3, #0
   22580:	uxtb	r3, r3
   22584:	cmp	r3, #0
   22588:	beq	22b70 <__assert_fail@plt+0x1162c>
   2258c:	ldr	r3, [fp, #-8]
   22590:	cmp	r3, #0
   22594:	moveq	r3, #1
   22598:	movne	r3, #0
   2259c:	uxtb	r3, r3
   225a0:	cmp	r3, #0
   225a4:	beq	22b70 <__assert_fail@plt+0x1162c>
   225a8:	mov	r3, #0
   225ac:	b	22ce4 <__assert_fail@plt+0x117a0>
   225b0:	ldr	r3, [fp, #8]
   225b4:	str	r3, [sp]
   225b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   225bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   225c0:	ldr	r1, [fp, #-16]
   225c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   225c8:	bl	23a80 <__assert_fail@plt+0x1253c>
   225cc:	str	r0, [fp, #-8]
   225d0:	ldr	r3, [fp, #8]
   225d4:	ldr	r3, [r3]
   225d8:	cmp	r3, #0
   225dc:	movne	r3, #1
   225e0:	moveq	r3, #0
   225e4:	uxtb	r3, r3
   225e8:	cmp	r3, #0
   225ec:	beq	22b78 <__assert_fail@plt+0x11634>
   225f0:	ldr	r3, [fp, #-8]
   225f4:	cmp	r3, #0
   225f8:	moveq	r3, #1
   225fc:	movne	r3, #0
   22600:	uxtb	r3, r3
   22604:	cmp	r3, #0
   22608:	beq	22b78 <__assert_fail@plt+0x11634>
   2260c:	mov	r3, #0
   22610:	b	22ce4 <__assert_fail@plt+0x117a0>
   22614:	ldr	r3, [fp, #-16]
   22618:	ldr	r3, [r3, #84]	; 0x54
   2261c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22620:	ldr	r2, [r2]
   22624:	mov	r1, #1
   22628:	lsl	r2, r1, r2
   2262c:	and	r3, r3, r2
   22630:	cmp	r3, #0
   22634:	bne	2264c <__assert_fail@plt+0x11108>
   22638:	ldr	r3, [fp, #8]
   2263c:	mov	r2, #6
   22640:	str	r2, [r3]
   22644:	mov	r3, #0
   22648:	b	22ce4 <__assert_fail@plt+0x117a0>
   2264c:	ldr	r3, [fp, #-16]
   22650:	ldr	r3, [r3, #80]	; 0x50
   22654:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22658:	ldr	r2, [r2]
   2265c:	mov	r1, #1
   22660:	lsl	r2, r1, r2
   22664:	orr	r2, r3, r2
   22668:	ldr	r3, [fp, #-16]
   2266c:	str	r2, [r3, #80]	; 0x50
   22670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22674:	mov	r2, #0
   22678:	mov	r1, #0
   2267c:	ldr	r0, [fp, #-16]
   22680:	bl	259c0 <__assert_fail@plt+0x1447c>
   22684:	str	r0, [fp, #-8]
   22688:	ldr	r3, [fp, #-8]
   2268c:	cmp	r3, #0
   22690:	moveq	r3, #1
   22694:	movne	r3, #0
   22698:	uxtb	r3, r3
   2269c:	cmp	r3, #0
   226a0:	beq	226b8 <__assert_fail@plt+0x11174>
   226a4:	ldr	r3, [fp, #8]
   226a8:	mov	r2, #12
   226ac:	str	r2, [r3]
   226b0:	mov	r3, #0
   226b4:	b	22ce4 <__assert_fail@plt+0x117a0>
   226b8:	ldr	r3, [fp, #-16]
   226bc:	ldr	r3, [r3, #76]	; 0x4c
   226c0:	add	r2, r3, #1
   226c4:	ldr	r3, [fp, #-16]
   226c8:	str	r2, [r3, #76]	; 0x4c
   226cc:	ldr	r2, [fp, #-16]
   226d0:	ldrb	r3, [r2, #88]	; 0x58
   226d4:	orr	r3, r3, #2
   226d8:	strb	r3, [r2, #88]	; 0x58
   226dc:	b	22b9c <__assert_fail@plt+0x11658>
   226e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   226e4:	and	r3, r3, #16777216	; 0x1000000
   226e8:	cmp	r3, #0
   226ec:	beq	22704 <__assert_fail@plt+0x111c0>
   226f0:	ldr	r3, [fp, #8]
   226f4:	mov	r2, #13
   226f8:	str	r2, [r3]
   226fc:	mov	r3, #0
   22700:	b	22ce4 <__assert_fail@plt+0x117a0>
   22704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22708:	and	r3, r3, #32
   2270c:	cmp	r3, #0
   22710:	beq	22728 <__assert_fail@plt+0x111e4>
   22714:	ldr	r3, [fp, #8]
   22718:	mov	r2, #13
   2271c:	str	r2, [r3]
   22720:	mov	r3, #0
   22724:	b	22ce4 <__assert_fail@plt+0x117a0>
   22728:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2272c:	and	r3, r3, #16
   22730:	cmp	r3, #0
   22734:	beq	22774 <__assert_fail@plt+0x11230>
   22738:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2273c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22740:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22744:	bl	20d78 <__assert_fail@plt+0xf834>
   22748:	ldr	r3, [fp, #8]
   2274c:	str	r3, [sp, #4]
   22750:	ldr	r3, [fp, #4]
   22754:	str	r3, [sp]
   22758:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2275c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22760:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22768:	bl	22330 <__assert_fail@plt+0x10dec>
   2276c:	mov	r3, r0
   22770:	b	22ce4 <__assert_fail@plt+0x117a0>
   22774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22778:	ldrb	r3, [r3, #4]
   2277c:	cmp	r3, #9
   22780:	bne	227a8 <__assert_fail@plt+0x11264>
   22784:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22788:	and	r3, r3, #131072	; 0x20000
   2278c:	cmp	r3, #0
   22790:	bne	227a8 <__assert_fail@plt+0x11264>
   22794:	ldr	r3, [fp, #8]
   22798:	mov	r2, #16
   2279c:	str	r2, [r3]
   227a0:	mov	r3, #0
   227a4:	b	22ce4 <__assert_fail@plt+0x117a0>
   227a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227ac:	mov	r2, #1
   227b0:	strb	r2, [r3, #4]
   227b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   227b8:	mov	r2, #0
   227bc:	mov	r1, #0
   227c0:	ldr	r0, [fp, #-16]
   227c4:	bl	259c0 <__assert_fail@plt+0x1447c>
   227c8:	str	r0, [fp, #-8]
   227cc:	ldr	r3, [fp, #-8]
   227d0:	cmp	r3, #0
   227d4:	moveq	r3, #1
   227d8:	movne	r3, #0
   227dc:	uxtb	r3, r3
   227e0:	cmp	r3, #0
   227e4:	beq	22b80 <__assert_fail@plt+0x1163c>
   227e8:	ldr	r3, [fp, #8]
   227ec:	mov	r2, #12
   227f0:	str	r2, [r3]
   227f4:	mov	r3, #0
   227f8:	b	22ce4 <__assert_fail@plt+0x117a0>
   227fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22800:	ldr	r2, [r3]
   22804:	ldr	r3, [pc, #1252]	; 22cf0 <__assert_fail@plt+0x117ac>
   22808:	and	r3, r3, r2
   2280c:	cmp	r3, #0
   22810:	beq	22834 <__assert_fail@plt+0x112f0>
   22814:	ldr	r3, [fp, #-16]
   22818:	ldrb	r3, [r3, #88]	; 0x58
   2281c:	and	r3, r3, #16
   22820:	uxtb	r3, r3
   22824:	cmp	r3, #0
   22828:	bne	22834 <__assert_fail@plt+0x112f0>
   2282c:	ldr	r0, [fp, #-16]
   22830:	bl	1e4f8 <__assert_fail@plt+0xcfb4>
   22834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22838:	ldr	r3, [r3]
   2283c:	cmp	r3, #256	; 0x100
   22840:	beq	22854 <__assert_fail@plt+0x11310>
   22844:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22848:	ldr	r3, [r3]
   2284c:	cmp	r3, #512	; 0x200
   22850:	bne	22974 <__assert_fail@plt+0x11430>
   22854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22858:	ldr	r3, [r3]
   2285c:	cmp	r3, #256	; 0x100
   22860:	bne	22898 <__assert_fail@plt+0x11354>
   22864:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22868:	mov	r2, #6
   2286c:	str	r2, [r3]
   22870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22874:	mov	r2, #0
   22878:	mov	r1, #0
   2287c:	ldr	r0, [fp, #-16]
   22880:	bl	259c0 <__assert_fail@plt+0x1447c>
   22884:	str	r0, [fp, #-12]
   22888:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2288c:	mov	r2, #9
   22890:	str	r2, [r3]
   22894:	b	228c8 <__assert_fail@plt+0x11384>
   22898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2289c:	mov	r2, #5
   228a0:	str	r2, [r3]
   228a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   228a8:	mov	r2, #0
   228ac:	mov	r1, #0
   228b0:	ldr	r0, [fp, #-16]
   228b4:	bl	259c0 <__assert_fail@plt+0x1447c>
   228b8:	str	r0, [fp, #-12]
   228bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   228c0:	mov	r2, #10
   228c4:	str	r2, [r3]
   228c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   228cc:	mov	r2, #0
   228d0:	mov	r1, #0
   228d4:	ldr	r0, [fp, #-16]
   228d8:	bl	259c0 <__assert_fail@plt+0x1447c>
   228dc:	str	r0, [fp, #-24]	; 0xffffffe8
   228e0:	mov	r3, #10
   228e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   228e8:	ldr	r1, [fp, #-12]
   228ec:	ldr	r0, [fp, #-16]
   228f0:	bl	25964 <__assert_fail@plt+0x14420>
   228f4:	str	r0, [fp, #-8]
   228f8:	ldr	r3, [fp, #-12]
   228fc:	cmp	r3, #0
   22900:	moveq	r3, #1
   22904:	movne	r3, #0
   22908:	uxtb	r3, r3
   2290c:	cmp	r3, #0
   22910:	bne	22930 <__assert_fail@plt+0x113ec>
   22914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22918:	cmp	r3, #0
   2291c:	moveq	r3, #1
   22920:	movne	r3, #0
   22924:	uxtb	r3, r3
   22928:	cmp	r3, #0
   2292c:	beq	22938 <__assert_fail@plt+0x113f4>
   22930:	mov	r3, #1
   22934:	b	2293c <__assert_fail@plt+0x113f8>
   22938:	mov	r3, #0
   2293c:	cmp	r3, #0
   22940:	bne	22960 <__assert_fail@plt+0x1141c>
   22944:	ldr	r3, [fp, #-8]
   22948:	cmp	r3, #0
   2294c:	moveq	r3, #1
   22950:	movne	r3, #0
   22954:	uxtb	r3, r3
   22958:	cmp	r3, #0
   2295c:	beq	229bc <__assert_fail@plt+0x11478>
   22960:	ldr	r3, [fp, #8]
   22964:	mov	r2, #12
   22968:	str	r2, [r3]
   2296c:	mov	r3, #0
   22970:	b	22ce4 <__assert_fail@plt+0x117a0>
   22974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22978:	mov	r2, #0
   2297c:	mov	r1, #0
   22980:	ldr	r0, [fp, #-16]
   22984:	bl	259c0 <__assert_fail@plt+0x1447c>
   22988:	str	r0, [fp, #-8]
   2298c:	ldr	r3, [fp, #-8]
   22990:	cmp	r3, #0
   22994:	moveq	r3, #1
   22998:	movne	r3, #0
   2299c:	uxtb	r3, r3
   229a0:	cmp	r3, #0
   229a4:	beq	229c0 <__assert_fail@plt+0x1147c>
   229a8:	ldr	r3, [fp, #8]
   229ac:	mov	r2, #12
   229b0:	str	r2, [r3]
   229b4:	mov	r3, #0
   229b8:	b	22ce4 <__assert_fail@plt+0x117a0>
   229bc:	nop			; (mov r0, r0)
   229c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   229c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   229c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   229cc:	bl	20d78 <__assert_fail@plt+0xf834>
   229d0:	ldr	r3, [fp, #-8]
   229d4:	b	22ce4 <__assert_fail@plt+0x117a0>
   229d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   229dc:	mov	r2, #0
   229e0:	mov	r1, #0
   229e4:	ldr	r0, [fp, #-16]
   229e8:	bl	259c0 <__assert_fail@plt+0x1447c>
   229ec:	str	r0, [fp, #-8]
   229f0:	ldr	r3, [fp, #-8]
   229f4:	cmp	r3, #0
   229f8:	moveq	r3, #1
   229fc:	movne	r3, #0
   22a00:	uxtb	r3, r3
   22a04:	cmp	r3, #0
   22a08:	beq	22a20 <__assert_fail@plt+0x114dc>
   22a0c:	ldr	r3, [fp, #8]
   22a10:	mov	r2, #12
   22a14:	str	r2, [r3]
   22a18:	mov	r3, #0
   22a1c:	b	22ce4 <__assert_fail@plt+0x117a0>
   22a20:	ldr	r3, [fp, #-16]
   22a24:	ldr	r3, [r3, #92]	; 0x5c
   22a28:	cmp	r3, #1
   22a2c:	ble	22b88 <__assert_fail@plt+0x11644>
   22a30:	ldr	r2, [fp, #-16]
   22a34:	ldrb	r3, [r2, #88]	; 0x58
   22a38:	orr	r3, r3, #2
   22a3c:	strb	r3, [r2, #88]	; 0x58
   22a40:	b	22b88 <__assert_fail@plt+0x11644>
   22a44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a48:	ldr	r1, [r3, #64]	; 0x40
   22a4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22a50:	ldrb	r3, [r3, #4]
   22a54:	cmp	r3, #33	; 0x21
   22a58:	moveq	r3, #1
   22a5c:	movne	r3, #0
   22a60:	uxtb	r3, r3
   22a64:	ldr	r2, [fp, #8]
   22a68:	str	r2, [sp, #4]
   22a6c:	str	r3, [sp]
   22a70:	ldr	r3, [pc, #636]	; 22cf4 <__assert_fail@plt+0x117b0>
   22a74:	ldr	r2, [pc, #636]	; 22cf8 <__assert_fail@plt+0x117b4>
   22a78:	ldr	r0, [fp, #-16]
   22a7c:	bl	25504 <__assert_fail@plt+0x13fc0>
   22a80:	str	r0, [fp, #-8]
   22a84:	ldr	r3, [fp, #8]
   22a88:	ldr	r3, [r3]
   22a8c:	cmp	r3, #0
   22a90:	movne	r3, #1
   22a94:	moveq	r3, #0
   22a98:	uxtb	r3, r3
   22a9c:	cmp	r3, #0
   22aa0:	beq	22b90 <__assert_fail@plt+0x1164c>
   22aa4:	ldr	r3, [fp, #-8]
   22aa8:	cmp	r3, #0
   22aac:	moveq	r3, #1
   22ab0:	movne	r3, #0
   22ab4:	uxtb	r3, r3
   22ab8:	cmp	r3, #0
   22abc:	beq	22b90 <__assert_fail@plt+0x1164c>
   22ac0:	mov	r3, #0
   22ac4:	b	22ce4 <__assert_fail@plt+0x117a0>
   22ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22acc:	ldr	r1, [r3, #64]	; 0x40
   22ad0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22ad4:	ldrb	r3, [r3, #4]
   22ad8:	cmp	r3, #35	; 0x23
   22adc:	moveq	r3, #1
   22ae0:	movne	r3, #0
   22ae4:	uxtb	r3, r3
   22ae8:	ldr	r2, [fp, #8]
   22aec:	str	r2, [sp, #4]
   22af0:	str	r3, [sp]
   22af4:	ldr	r3, [pc, #512]	; 22cfc <__assert_fail@plt+0x117b8>
   22af8:	ldr	r2, [pc, #512]	; 22d00 <__assert_fail@plt+0x117bc>
   22afc:	ldr	r0, [fp, #-16]
   22b00:	bl	25504 <__assert_fail@plt+0x13fc0>
   22b04:	str	r0, [fp, #-8]
   22b08:	ldr	r3, [fp, #8]
   22b0c:	ldr	r3, [r3]
   22b10:	cmp	r3, #0
   22b14:	movne	r3, #1
   22b18:	moveq	r3, #0
   22b1c:	uxtb	r3, r3
   22b20:	cmp	r3, #0
   22b24:	beq	22b98 <__assert_fail@plt+0x11654>
   22b28:	ldr	r3, [fp, #-8]
   22b2c:	cmp	r3, #0
   22b30:	moveq	r3, #1
   22b34:	movne	r3, #0
   22b38:	uxtb	r3, r3
   22b3c:	cmp	r3, #0
   22b40:	beq	22b98 <__assert_fail@plt+0x11654>
   22b44:	mov	r3, #0
   22b48:	b	22ce4 <__assert_fail@plt+0x117a0>
   22b4c:	mov	r3, #0
   22b50:	b	22ce4 <__assert_fail@plt+0x117a0>
   22b54:	ldr	r3, [fp, #8]
   22b58:	mov	r2, #5
   22b5c:	str	r2, [r3]
   22b60:	mov	r3, #0
   22b64:	b	22ce4 <__assert_fail@plt+0x117a0>
   22b68:	nop			; (mov r0, r0)
   22b6c:	b	22b9c <__assert_fail@plt+0x11658>
   22b70:	nop			; (mov r0, r0)
   22b74:	b	22b9c <__assert_fail@plt+0x11658>
   22b78:	nop			; (mov r0, r0)
   22b7c:	b	22b9c <__assert_fail@plt+0x11658>
   22b80:	nop			; (mov r0, r0)
   22b84:	b	22b9c <__assert_fail@plt+0x11658>
   22b88:	nop			; (mov r0, r0)
   22b8c:	b	22b9c <__assert_fail@plt+0x11658>
   22b90:	nop			; (mov r0, r0)
   22b94:	b	22b9c <__assert_fail@plt+0x11658>
   22b98:	nop			; (mov r0, r0)
   22b9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22ba0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22ba8:	bl	20d78 <__assert_fail@plt+0xf834>
   22bac:	b	22ca0 <__assert_fail@plt+0x1175c>
   22bb0:	ldr	r3, [fp, #8]
   22bb4:	str	r3, [sp, #4]
   22bb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22bbc:	str	r3, [sp]
   22bc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22bc4:	ldr	r2, [fp, #-16]
   22bc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22bcc:	ldr	r0, [fp, #-8]
   22bd0:	bl	22ec8 <__assert_fail@plt+0x11984>
   22bd4:	str	r0, [fp, #-28]	; 0xffffffe4
   22bd8:	ldr	r3, [fp, #8]
   22bdc:	ldr	r3, [r3]
   22be0:	cmp	r3, #0
   22be4:	movne	r3, #1
   22be8:	moveq	r3, #0
   22bec:	uxtb	r3, r3
   22bf0:	cmp	r3, #0
   22bf4:	beq	22c38 <__assert_fail@plt+0x116f4>
   22bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22bfc:	cmp	r3, #0
   22c00:	moveq	r3, #1
   22c04:	movne	r3, #0
   22c08:	uxtb	r3, r3
   22c0c:	cmp	r3, #0
   22c10:	beq	22c38 <__assert_fail@plt+0x116f4>
   22c14:	ldr	r3, [fp, #-8]
   22c18:	cmp	r3, #0
   22c1c:	beq	22c30 <__assert_fail@plt+0x116ec>
   22c20:	mov	r2, #0
   22c24:	ldr	r1, [pc, #216]	; 22d04 <__assert_fail@plt+0x117c0>
   22c28:	ldr	r0, [fp, #-8]
   22c2c:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   22c30:	mov	r3, #0
   22c34:	b	22ce4 <__assert_fail@plt+0x117a0>
   22c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22c3c:	str	r3, [fp, #-8]
   22c40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22c44:	and	r3, r3, #16777216	; 0x1000000
   22c48:	cmp	r3, #0
   22c4c:	beq	22ca0 <__assert_fail@plt+0x1175c>
   22c50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c54:	ldrb	r3, [r3, #4]
   22c58:	cmp	r3, #11
   22c5c:	beq	22c70 <__assert_fail@plt+0x1172c>
   22c60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22c64:	ldrb	r3, [r3, #4]
   22c68:	cmp	r3, #23
   22c6c:	bne	22ca0 <__assert_fail@plt+0x1175c>
   22c70:	ldr	r3, [fp, #-8]
   22c74:	cmp	r3, #0
   22c78:	beq	22c8c <__assert_fail@plt+0x11748>
   22c7c:	mov	r2, #0
   22c80:	ldr	r1, [pc, #124]	; 22d04 <__assert_fail@plt+0x117c0>
   22c84:	ldr	r0, [fp, #-8]
   22c88:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   22c8c:	ldr	r3, [fp, #8]
   22c90:	mov	r2, #13
   22c94:	str	r2, [r3]
   22c98:	mov	r3, #0
   22c9c:	b	22ce4 <__assert_fail@plt+0x117a0>
   22ca0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22ca4:	ldrb	r3, [r3, #4]
   22ca8:	cmp	r3, #11
   22cac:	beq	22bb0 <__assert_fail@plt+0x1166c>
   22cb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22cb4:	ldrb	r3, [r3, #4]
   22cb8:	cmp	r3, #18
   22cbc:	beq	22bb0 <__assert_fail@plt+0x1166c>
   22cc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22cc4:	ldrb	r3, [r3, #4]
   22cc8:	cmp	r3, #19
   22ccc:	beq	22bb0 <__assert_fail@plt+0x1166c>
   22cd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22cd4:	ldrb	r3, [r3, #4]
   22cd8:	cmp	r3, #23
   22cdc:	beq	22bb0 <__assert_fail@plt+0x1166c>
   22ce0:	ldr	r3, [fp, #-8]
   22ce4:	mov	r0, r3
   22ce8:	sub	sp, fp, #4
   22cec:	pop	{fp, pc}
   22cf0:	andeq	r0, r0, pc, lsl #6
   22cf4:	andeq	r5, r3, r4, ror #28
   22cf8:	andeq	r5, r3, r8, ror #28
   22cfc:	andeq	r5, r3, r0, ror lr
   22d00:	andeq	r5, r3, r4, ror lr
   22d04:	andeq	r5, r2, r4, lsr #24
   22d08:	push	{fp, lr}
   22d0c:	add	fp, sp, #4
   22d10:	sub	sp, sp, #40	; 0x28
   22d14:	str	r0, [fp, #-24]	; 0xffffffe8
   22d18:	str	r1, [fp, #-28]	; 0xffffffe4
   22d1c:	str	r2, [fp, #-32]	; 0xffffffe0
   22d20:	str	r3, [fp, #-36]	; 0xffffffdc
   22d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22d28:	ldr	r3, [r3]
   22d2c:	str	r3, [fp, #-12]
   22d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22d34:	ldr	r3, [r3, #24]
   22d38:	add	r1, r3, #1
   22d3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22d40:	str	r1, [r2, #24]
   22d44:	str	r3, [fp, #-16]
   22d48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22d4c:	orr	r3, r3, #8388608	; 0x800000
   22d50:	mov	r2, r3
   22d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d5c:	bl	20d78 <__assert_fail@plt+0xf834>
   22d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22d64:	ldrb	r3, [r3, #4]
   22d68:	cmp	r3, #9
   22d6c:	bne	22d7c <__assert_fail@plt+0x11838>
   22d70:	mov	r3, #0
   22d74:	str	r3, [fp, #-8]
   22d78:	b	22e34 <__assert_fail@plt+0x118f0>
   22d7c:	ldr	r3, [fp, #8]
   22d80:	str	r3, [sp, #4]
   22d84:	ldr	r3, [fp, #4]
   22d88:	str	r3, [sp]
   22d8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22d90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d9c:	bl	21f08 <__assert_fail@plt+0x109c4>
   22da0:	str	r0, [fp, #-8]
   22da4:	ldr	r3, [fp, #8]
   22da8:	ldr	r3, [r3]
   22dac:	cmp	r3, #0
   22db0:	moveq	r3, #1
   22db4:	movne	r3, #0
   22db8:	uxtb	r3, r3
   22dbc:	cmp	r3, #0
   22dc0:	beq	22e0c <__assert_fail@plt+0x118c8>
   22dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22dc8:	ldrb	r3, [r3, #4]
   22dcc:	cmp	r3, #9
   22dd0:	movne	r3, #1
   22dd4:	moveq	r3, #0
   22dd8:	uxtb	r3, r3
   22ddc:	cmp	r3, #0
   22de0:	beq	22e0c <__assert_fail@plt+0x118c8>
   22de4:	ldr	r3, [fp, #-8]
   22de8:	cmp	r3, #0
   22dec:	beq	22e00 <__assert_fail@plt+0x118bc>
   22df0:	mov	r2, #0
   22df4:	ldr	r1, [pc, #200]	; 22ec4 <__assert_fail@plt+0x11980>
   22df8:	ldr	r0, [fp, #-8]
   22dfc:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   22e00:	ldr	r3, [fp, #8]
   22e04:	mov	r2, #8
   22e08:	str	r2, [r3]
   22e0c:	ldr	r3, [fp, #8]
   22e10:	ldr	r3, [r3]
   22e14:	cmp	r3, #0
   22e18:	movne	r3, #1
   22e1c:	moveq	r3, #0
   22e20:	uxtb	r3, r3
   22e24:	cmp	r3, #0
   22e28:	beq	22e34 <__assert_fail@plt+0x118f0>
   22e2c:	mov	r3, #0
   22e30:	b	22eb8 <__assert_fail@plt+0x11974>
   22e34:	ldr	r3, [fp, #-16]
   22e38:	cmp	r3, #8
   22e3c:	bhi	22e60 <__assert_fail@plt+0x1191c>
   22e40:	ldr	r3, [fp, #-12]
   22e44:	ldr	r3, [r3, #84]	; 0x54
   22e48:	mov	r1, #1
   22e4c:	ldr	r2, [fp, #-16]
   22e50:	lsl	r2, r1, r2
   22e54:	orr	r2, r3, r2
   22e58:	ldr	r3, [fp, #-12]
   22e5c:	str	r2, [r3, #84]	; 0x54
   22e60:	mov	r3, #17
   22e64:	mov	r2, #0
   22e68:	ldr	r1, [fp, #-8]
   22e6c:	ldr	r0, [fp, #-12]
   22e70:	bl	25964 <__assert_fail@plt+0x14420>
   22e74:	str	r0, [fp, #-8]
   22e78:	ldr	r3, [fp, #-8]
   22e7c:	cmp	r3, #0
   22e80:	moveq	r3, #1
   22e84:	movne	r3, #0
   22e88:	uxtb	r3, r3
   22e8c:	cmp	r3, #0
   22e90:	beq	22ea8 <__assert_fail@plt+0x11964>
   22e94:	ldr	r3, [fp, #8]
   22e98:	mov	r2, #12
   22e9c:	str	r2, [r3]
   22ea0:	mov	r3, #0
   22ea4:	b	22eb8 <__assert_fail@plt+0x11974>
   22ea8:	ldr	r2, [fp, #-16]
   22eac:	ldr	r3, [fp, #-8]
   22eb0:	str	r2, [r3, #20]
   22eb4:	ldr	r3, [fp, #-8]
   22eb8:	mov	r0, r3
   22ebc:	sub	sp, fp, #4
   22ec0:	pop	{fp, pc}
   22ec4:	andeq	r5, r2, r4, lsr #24
   22ec8:	push	{fp, lr}
   22ecc:	add	fp, sp, #4
   22ed0:	sub	sp, sp, #56	; 0x38
   22ed4:	str	r0, [fp, #-48]	; 0xffffffd0
   22ed8:	str	r1, [fp, #-52]	; 0xffffffcc
   22edc:	str	r2, [fp, #-56]	; 0xffffffc8
   22ee0:	str	r3, [fp, #-60]	; 0xffffffc4
   22ee4:	mov	r3, #0
   22ee8:	str	r3, [fp, #-8]
   22eec:	mov	r3, #0
   22ef0:	str	r3, [fp, #-12]
   22ef4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   22ef8:	ldr	r3, [r3, #40]	; 0x28
   22efc:	str	r3, [fp, #-28]	; 0xffffffe4
   22f00:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22f04:	sub	r3, fp, #40	; 0x28
   22f08:	ldm	r2, {r0, r1}
   22f0c:	stm	r3, {r0, r1}
   22f10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22f14:	ldrb	r3, [r3, #4]
   22f18:	cmp	r3, #23
   22f1c:	bne	2319c <__assert_fail@plt+0x11c58>
   22f20:	mov	r3, #0
   22f24:	str	r3, [fp, #-24]	; 0xffffffe8
   22f28:	ldr	r2, [fp, #4]
   22f2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22f30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22f34:	bl	257e4 <__assert_fail@plt+0x142a0>
   22f38:	str	r0, [fp, #-20]	; 0xffffffec
   22f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22f40:	cmn	r3, #1
   22f44:	bne	22f88 <__assert_fail@plt+0x11a44>
   22f48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22f4c:	ldrb	r3, [r3, #4]
   22f50:	cmp	r3, #1
   22f54:	bne	22f74 <__assert_fail@plt+0x11a30>
   22f58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22f5c:	ldrb	r3, [r3]
   22f60:	cmp	r3, #44	; 0x2c
   22f64:	bne	22f74 <__assert_fail@plt+0x11a30>
   22f68:	mov	r3, #0
   22f6c:	str	r3, [fp, #-20]	; 0xffffffec
   22f70:	b	22f88 <__assert_fail@plt+0x11a44>
   22f74:	ldr	r3, [fp, #8]
   22f78:	mov	r2, #10
   22f7c:	str	r2, [r3]
   22f80:	mov	r3, #0
   22f84:	b	234e8 <__assert_fail@plt+0x11fa4>
   22f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   22f8c:	cmn	r3, #2
   22f90:	movne	r3, #1
   22f94:	moveq	r3, #0
   22f98:	uxtb	r3, r3
   22f9c:	cmp	r3, #0
   22fa0:	beq	22ffc <__assert_fail@plt+0x11ab8>
   22fa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22fa8:	ldrb	r3, [r3, #4]
   22fac:	cmp	r3, #24
   22fb0:	beq	22ff4 <__assert_fail@plt+0x11ab0>
   22fb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22fb8:	ldrb	r3, [r3, #4]
   22fbc:	cmp	r3, #1
   22fc0:	bne	22fec <__assert_fail@plt+0x11aa8>
   22fc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   22fc8:	ldrb	r3, [r3]
   22fcc:	cmp	r3, #44	; 0x2c
   22fd0:	bne	22fec <__assert_fail@plt+0x11aa8>
   22fd4:	ldr	r2, [fp, #4]
   22fd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22fdc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   22fe0:	bl	257e4 <__assert_fail@plt+0x142a0>
   22fe4:	mov	r3, r0
   22fe8:	b	22ff8 <__assert_fail@plt+0x11ab4>
   22fec:	mvn	r3, #1
   22ff0:	b	22ff8 <__assert_fail@plt+0x11ab4>
   22ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   22ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23000:	cmn	r3, #2
   23004:	moveq	r3, #1
   23008:	movne	r3, #0
   2300c:	uxtb	r3, r3
   23010:	cmp	r3, #0
   23014:	bne	23034 <__assert_fail@plt+0x11af0>
   23018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2301c:	cmn	r3, #2
   23020:	moveq	r3, #1
   23024:	movne	r3, #0
   23028:	uxtb	r3, r3
   2302c:	cmp	r3, #0
   23030:	beq	230bc <__assert_fail@plt+0x11b78>
   23034:	ldr	r3, [fp, #4]
   23038:	and	r3, r3, #2097152	; 0x200000
   2303c:	cmp	r3, #0
   23040:	moveq	r3, #1
   23044:	movne	r3, #0
   23048:	uxtb	r3, r3
   2304c:	cmp	r3, #0
   23050:	beq	23088 <__assert_fail@plt+0x11b44>
   23054:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23058:	ldrb	r3, [r3, #4]
   2305c:	cmp	r3, #2
   23060:	bne	23074 <__assert_fail@plt+0x11b30>
   23064:	ldr	r3, [fp, #8]
   23068:	mov	r2, #9
   2306c:	str	r2, [r3]
   23070:	b	23080 <__assert_fail@plt+0x11b3c>
   23074:	ldr	r3, [fp, #8]
   23078:	mov	r2, #10
   2307c:	str	r2, [r3]
   23080:	mov	r3, #0
   23084:	b	234e8 <__assert_fail@plt+0x11fa4>
   23088:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2308c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23090:	str	r2, [r3, #40]	; 0x28
   23094:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23098:	mov	r2, r3
   2309c:	sub	r3, fp, #40	; 0x28
   230a0:	ldm	r3, {r0, r1}
   230a4:	stm	r2, {r0, r1}
   230a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   230ac:	mov	r2, #1
   230b0:	strb	r2, [r3, #4]
   230b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   230b8:	b	234e8 <__assert_fail@plt+0x11fa4>
   230bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   230c0:	cmn	r3, #1
   230c4:	movne	r3, #1
   230c8:	moveq	r3, #0
   230cc:	uxtb	r3, r3
   230d0:	cmp	r3, #0
   230d4:	beq	23100 <__assert_fail@plt+0x11bbc>
   230d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   230dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   230e0:	cmp	r2, r3
   230e4:	movgt	r3, #1
   230e8:	movle	r3, #0
   230ec:	uxtb	r3, r3
   230f0:	cmp	r3, #0
   230f4:	beq	23100 <__assert_fail@plt+0x11bbc>
   230f8:	mov	r3, #1
   230fc:	b	23104 <__assert_fail@plt+0x11bc0>
   23100:	mov	r3, #0
   23104:	cmp	r3, #0
   23108:	bne	2312c <__assert_fail@plt+0x11be8>
   2310c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23110:	ldrb	r3, [r3, #4]
   23114:	cmp	r3, #24
   23118:	movne	r3, #1
   2311c:	moveq	r3, #0
   23120:	uxtb	r3, r3
   23124:	cmp	r3, #0
   23128:	beq	23140 <__assert_fail@plt+0x11bfc>
   2312c:	ldr	r3, [fp, #8]
   23130:	mov	r2, #10
   23134:	str	r2, [r3]
   23138:	mov	r3, #0
   2313c:	b	234e8 <__assert_fail@plt+0x11fa4>
   23140:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23144:	cmn	r3, #1
   23148:	bne	23168 <__assert_fail@plt+0x11c24>
   2314c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23150:	ldr	r2, [pc, #924]	; 234f4 <__assert_fail@plt+0x11fb0>
   23154:	cmp	r3, r2
   23158:	movgt	r3, #1
   2315c:	movle	r3, #0
   23160:	uxtb	r3, r3
   23164:	b	23180 <__assert_fail@plt+0x11c3c>
   23168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2316c:	ldr	r2, [pc, #896]	; 234f4 <__assert_fail@plt+0x11fb0>
   23170:	cmp	r3, r2
   23174:	movgt	r3, #1
   23178:	movle	r3, #0
   2317c:	uxtb	r3, r3
   23180:	cmp	r3, #0
   23184:	beq	231d8 <__assert_fail@plt+0x11c94>
   23188:	ldr	r3, [fp, #8]
   2318c:	mov	r2, #15
   23190:	str	r2, [r3]
   23194:	mov	r3, #0
   23198:	b	234e8 <__assert_fail@plt+0x11fa4>
   2319c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   231a0:	ldrb	r3, [r3, #4]
   231a4:	cmp	r3, #18
   231a8:	moveq	r3, #1
   231ac:	movne	r3, #0
   231b0:	uxtb	r3, r3
   231b4:	str	r3, [fp, #-20]	; 0xffffffec
   231b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   231bc:	ldrb	r3, [r3, #4]
   231c0:	cmp	r3, #19
   231c4:	bne	231d0 <__assert_fail@plt+0x11c8c>
   231c8:	mov	r3, #1
   231cc:	b	231d4 <__assert_fail@plt+0x11c90>
   231d0:	mvn	r3, #0
   231d4:	str	r3, [fp, #-24]	; 0xffffffe8
   231d8:	ldr	r2, [fp, #4]
   231dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   231e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   231e4:	bl	20d78 <__assert_fail@plt+0xf834>
   231e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   231ec:	cmp	r3, #0
   231f0:	moveq	r3, #1
   231f4:	movne	r3, #0
   231f8:	uxtb	r3, r3
   231fc:	cmp	r3, #0
   23200:	beq	2320c <__assert_fail@plt+0x11cc8>
   23204:	mov	r3, #0
   23208:	b	234e8 <__assert_fail@plt+0x11fa4>
   2320c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23210:	cmp	r3, #0
   23214:	moveq	r3, #1
   23218:	movne	r3, #0
   2321c:	uxtb	r3, r3
   23220:	cmp	r3, #0
   23224:	beq	2325c <__assert_fail@plt+0x11d18>
   23228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2322c:	cmp	r3, #0
   23230:	moveq	r3, #1
   23234:	movne	r3, #0
   23238:	uxtb	r3, r3
   2323c:	cmp	r3, #0
   23240:	beq	2325c <__assert_fail@plt+0x11d18>
   23244:	mov	r2, #0
   23248:	ldr	r1, [pc, #680]	; 234f8 <__assert_fail@plt+0x11fb4>
   2324c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23250:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   23254:	mov	r3, #0
   23258:	b	234e8 <__assert_fail@plt+0x11fa4>
   2325c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23260:	cmp	r3, #0
   23264:	movgt	r3, #1
   23268:	movle	r3, #0
   2326c:	uxtb	r3, r3
   23270:	cmp	r3, #0
   23274:	beq	23358 <__assert_fail@plt+0x11e14>
   23278:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2327c:	str	r3, [fp, #-8]
   23280:	mov	r3, #2
   23284:	str	r3, [fp, #-16]
   23288:	b	232f8 <__assert_fail@plt+0x11db4>
   2328c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23290:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23294:	bl	25c58 <__assert_fail@plt+0x14714>
   23298:	str	r0, [fp, #-48]	; 0xffffffd0
   2329c:	mov	r3, #16
   232a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   232a4:	ldr	r1, [fp, #-8]
   232a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   232ac:	bl	25964 <__assert_fail@plt+0x14420>
   232b0:	str	r0, [fp, #-8]
   232b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   232b8:	cmp	r3, #0
   232bc:	moveq	r3, #1
   232c0:	movne	r3, #0
   232c4:	uxtb	r3, r3
   232c8:	cmp	r3, #0
   232cc:	bne	234d8 <__assert_fail@plt+0x11f94>
   232d0:	ldr	r3, [fp, #-8]
   232d4:	cmp	r3, #0
   232d8:	moveq	r3, #1
   232dc:	movne	r3, #0
   232e0:	uxtb	r3, r3
   232e4:	cmp	r3, #0
   232e8:	bne	234d8 <__assert_fail@plt+0x11f94>
   232ec:	ldr	r3, [fp, #-16]
   232f0:	add	r3, r3, #1
   232f4:	str	r3, [fp, #-16]
   232f8:	ldr	r2, [fp, #-16]
   232fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23300:	cmp	r2, r3
   23304:	ble	2328c <__assert_fail@plt+0x11d48>
   23308:	ldr	r2, [fp, #-20]	; 0xffffffec
   2330c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23310:	cmp	r2, r3
   23314:	bne	23320 <__assert_fail@plt+0x11ddc>
   23318:	ldr	r3, [fp, #-8]
   2331c:	b	234e8 <__assert_fail@plt+0x11fa4>
   23320:	ldr	r1, [fp, #-56]	; 0xffffffc8
   23324:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23328:	bl	25c58 <__assert_fail@plt+0x14714>
   2332c:	str	r0, [fp, #-48]	; 0xffffffd0
   23330:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23334:	cmp	r3, #0
   23338:	moveq	r3, #1
   2333c:	movne	r3, #0
   23340:	uxtb	r3, r3
   23344:	cmp	r3, #0
   23348:	bne	234c4 <__assert_fail@plt+0x11f80>
   2334c:	ldr	r3, [fp, #-8]
   23350:	str	r3, [fp, #-12]
   23354:	b	23360 <__assert_fail@plt+0x11e1c>
   23358:	mov	r3, #0
   2335c:	str	r3, [fp, #-12]
   23360:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23364:	ldrb	r3, [r3, #24]
   23368:	cmp	r3, #17
   2336c:	bne	23390 <__assert_fail@plt+0x11e4c>
   23370:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23374:	ldr	r3, [r3, #20]
   23378:	str	r3, [fp, #-32]	; 0xffffffe0
   2337c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23380:	mov	r2, r3
   23384:	ldr	r1, [pc, #368]	; 234fc <__assert_fail@plt+0x11fb8>
   23388:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2338c:	bl	1f2d8 <__assert_fail@plt+0xdd94>
   23390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23394:	cmn	r3, #1
   23398:	bne	233a4 <__assert_fail@plt+0x11e60>
   2339c:	mov	r3, #11
   233a0:	b	233a8 <__assert_fail@plt+0x11e64>
   233a4:	mov	r3, #10
   233a8:	mov	r2, #0
   233ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   233b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   233b4:	bl	25964 <__assert_fail@plt+0x14420>
   233b8:	str	r0, [fp, #-8]
   233bc:	ldr	r3, [fp, #-8]
   233c0:	cmp	r3, #0
   233c4:	moveq	r3, #1
   233c8:	movne	r3, #0
   233cc:	uxtb	r3, r3
   233d0:	cmp	r3, #0
   233d4:	bne	234cc <__assert_fail@plt+0x11f88>
   233d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   233dc:	add	r3, r3, #2
   233e0:	str	r3, [fp, #-16]
   233e4:	b	23488 <__assert_fail@plt+0x11f44>
   233e8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   233ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   233f0:	bl	25c58 <__assert_fail@plt+0x14714>
   233f4:	str	r0, [fp, #-48]	; 0xffffffd0
   233f8:	mov	r3, #16
   233fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23400:	ldr	r1, [fp, #-8]
   23404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23408:	bl	25964 <__assert_fail@plt+0x14420>
   2340c:	str	r0, [fp, #-8]
   23410:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23414:	cmp	r3, #0
   23418:	moveq	r3, #1
   2341c:	movne	r3, #0
   23420:	uxtb	r3, r3
   23424:	cmp	r3, #0
   23428:	bne	234d8 <__assert_fail@plt+0x11f94>
   2342c:	ldr	r3, [fp, #-8]
   23430:	cmp	r3, #0
   23434:	moveq	r3, #1
   23438:	movne	r3, #0
   2343c:	uxtb	r3, r3
   23440:	cmp	r3, #0
   23444:	bne	234d8 <__assert_fail@plt+0x11f94>
   23448:	mov	r3, #10
   2344c:	mov	r2, #0
   23450:	ldr	r1, [fp, #-8]
   23454:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23458:	bl	25964 <__assert_fail@plt+0x14420>
   2345c:	str	r0, [fp, #-8]
   23460:	ldr	r3, [fp, #-8]
   23464:	cmp	r3, #0
   23468:	moveq	r3, #1
   2346c:	movne	r3, #0
   23470:	uxtb	r3, r3
   23474:	cmp	r3, #0
   23478:	bne	234d4 <__assert_fail@plt+0x11f90>
   2347c:	ldr	r3, [fp, #-16]
   23480:	add	r3, r3, #1
   23484:	str	r3, [fp, #-16]
   23488:	ldr	r2, [fp, #-16]
   2348c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23490:	cmp	r2, r3
   23494:	ble	233e8 <__assert_fail@plt+0x11ea4>
   23498:	ldr	r3, [fp, #-12]
   2349c:	cmp	r3, #0
   234a0:	beq	234bc <__assert_fail@plt+0x11f78>
   234a4:	mov	r3, #16
   234a8:	ldr	r2, [fp, #-8]
   234ac:	ldr	r1, [fp, #-12]
   234b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   234b4:	bl	25964 <__assert_fail@plt+0x14420>
   234b8:	str	r0, [fp, #-8]
   234bc:	ldr	r3, [fp, #-8]
   234c0:	b	234e8 <__assert_fail@plt+0x11fa4>
   234c4:	nop			; (mov r0, r0)
   234c8:	b	234d8 <__assert_fail@plt+0x11f94>
   234cc:	nop			; (mov r0, r0)
   234d0:	b	234d8 <__assert_fail@plt+0x11f94>
   234d4:	nop			; (mov r0, r0)
   234d8:	ldr	r3, [fp, #8]
   234dc:	mov	r2, #12
   234e0:	str	r2, [r3]
   234e4:	mov	r3, #0
   234e8:	mov	r0, r3
   234ec:	sub	sp, fp, #4
   234f0:	pop	{fp, pc}
   234f4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   234f8:	andeq	r5, r2, r4, lsr #24
   234fc:	andeq	r5, r2, r0, lsr fp
   23500:	push	{fp, lr}
   23504:	add	fp, sp, #4
   23508:	sub	sp, sp, #8
   2350c:	mov	r3, r0
   23510:	str	r1, [fp, #-12]
   23514:	strb	r3, [fp, #-5]
   23518:	ldr	r3, [fp, #-12]
   2351c:	ldr	r3, [r3, #92]	; 0x5c
   23520:	cmp	r3, #1
   23524:	ble	2353c <__assert_fail@plt+0x11ff8>
   23528:	ldrb	r3, [fp, #-5]
   2352c:	mov	r0, r3
   23530:	bl	11454 <btowc@plt>
   23534:	mov	r3, r0
   23538:	b	23540 <__assert_fail@plt+0x11ffc>
   2353c:	ldrb	r3, [fp, #-5]
   23540:	mov	r0, r3
   23544:	sub	sp, fp, #4
   23548:	pop	{fp, pc}
   2354c:	push	{fp, lr}
   23550:	add	fp, sp, #4
   23554:	sub	sp, sp, #48	; 0x30
   23558:	str	r0, [fp, #-40]	; 0xffffffd8
   2355c:	str	r1, [fp, #-44]	; 0xffffffd4
   23560:	str	r2, [fp, #-48]	; 0xffffffd0
   23564:	str	r3, [fp, #-52]	; 0xffffffcc
   23568:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2356c:	ldr	r3, [r3]
   23570:	cmp	r3, #2
   23574:	moveq	r3, #1
   23578:	movne	r3, #0
   2357c:	uxtb	r3, r3
   23580:	cmp	r3, #0
   23584:	bne	235a8 <__assert_fail@plt+0x12064>
   23588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2358c:	ldr	r3, [r3]
   23590:	cmp	r3, #4
   23594:	moveq	r3, #1
   23598:	movne	r3, #0
   2359c:	uxtb	r3, r3
   235a0:	cmp	r3, #0
   235a4:	beq	235b0 <__assert_fail@plt+0x1206c>
   235a8:	mov	r3, #1
   235ac:	b	235b4 <__assert_fail@plt+0x12070>
   235b0:	mov	r3, #0
   235b4:	cmp	r3, #0
   235b8:	bne	235dc <__assert_fail@plt+0x12098>
   235bc:	ldr	r3, [fp, #4]
   235c0:	ldr	r3, [r3]
   235c4:	cmp	r3, #2
   235c8:	moveq	r3, #1
   235cc:	movne	r3, #0
   235d0:	uxtb	r3, r3
   235d4:	cmp	r3, #0
   235d8:	beq	235e4 <__assert_fail@plt+0x120a0>
   235dc:	mov	r3, #1
   235e0:	b	235e8 <__assert_fail@plt+0x120a4>
   235e4:	mov	r3, #0
   235e8:	cmp	r3, #0
   235ec:	bne	23610 <__assert_fail@plt+0x120cc>
   235f0:	ldr	r3, [fp, #4]
   235f4:	ldr	r3, [r3]
   235f8:	cmp	r3, #4
   235fc:	moveq	r3, #1
   23600:	movne	r3, #0
   23604:	uxtb	r3, r3
   23608:	cmp	r3, #0
   2360c:	beq	23618 <__assert_fail@plt+0x120d4>
   23610:	mov	r3, #11
   23614:	b	23a04 <__assert_fail@plt+0x124c0>
   23618:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2361c:	ldr	r3, [r3]
   23620:	cmp	r3, #3
   23624:	moveq	r3, #1
   23628:	movne	r3, #0
   2362c:	uxtb	r3, r3
   23630:	cmp	r3, #0
   23634:	beq	2366c <__assert_fail@plt+0x12128>
   23638:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2363c:	ldr	r3, [r3, #4]
   23640:	mov	r0, r3
   23644:	bl	113f4 <strlen@plt>
   23648:	mov	r3, r0
   2364c:	cmp	r3, #1
   23650:	movhi	r3, #1
   23654:	movls	r3, #0
   23658:	uxtb	r3, r3
   2365c:	cmp	r3, #0
   23660:	beq	2366c <__assert_fail@plt+0x12128>
   23664:	mov	r3, #1
   23668:	b	23670 <__assert_fail@plt+0x1212c>
   2366c:	mov	r3, #0
   23670:	cmp	r3, #0
   23674:	bne	236d8 <__assert_fail@plt+0x12194>
   23678:	ldr	r3, [fp, #4]
   2367c:	ldr	r3, [r3]
   23680:	cmp	r3, #3
   23684:	moveq	r3, #1
   23688:	movne	r3, #0
   2368c:	uxtb	r3, r3
   23690:	cmp	r3, #0
   23694:	beq	236cc <__assert_fail@plt+0x12188>
   23698:	ldr	r3, [fp, #4]
   2369c:	ldr	r3, [r3, #4]
   236a0:	mov	r0, r3
   236a4:	bl	113f4 <strlen@plt>
   236a8:	mov	r3, r0
   236ac:	cmp	r3, #1
   236b0:	movhi	r3, #1
   236b4:	movls	r3, #0
   236b8:	uxtb	r3, r3
   236bc:	cmp	r3, #0
   236c0:	beq	236cc <__assert_fail@plt+0x12188>
   236c4:	mov	r3, #1
   236c8:	b	236d0 <__assert_fail@plt+0x1218c>
   236cc:	mov	r3, #0
   236d0:	cmp	r3, #0
   236d4:	beq	236e0 <__assert_fail@plt+0x1219c>
   236d8:	mov	r3, #3
   236dc:	b	23a04 <__assert_fail@plt+0x124c0>
   236e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   236e4:	ldr	r3, [r3]
   236e8:	cmp	r3, #0
   236ec:	bne	236fc <__assert_fail@plt+0x121b8>
   236f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   236f4:	ldrb	r3, [r3, #4]
   236f8:	b	23720 <__assert_fail@plt+0x121dc>
   236fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23700:	ldr	r3, [r3]
   23704:	cmp	r3, #3
   23708:	bne	2371c <__assert_fail@plt+0x121d8>
   2370c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23710:	ldr	r3, [r3, #4]
   23714:	ldrb	r3, [r3]
   23718:	b	23720 <__assert_fail@plt+0x121dc>
   2371c:	mov	r3, #0
   23720:	str	r3, [fp, #-12]
   23724:	ldr	r3, [fp, #4]
   23728:	ldr	r3, [r3]
   2372c:	cmp	r3, #0
   23730:	bne	23740 <__assert_fail@plt+0x121fc>
   23734:	ldr	r3, [fp, #4]
   23738:	ldrb	r3, [r3, #4]
   2373c:	b	23764 <__assert_fail@plt+0x12220>
   23740:	ldr	r3, [fp, #4]
   23744:	ldr	r3, [r3]
   23748:	cmp	r3, #3
   2374c:	bne	23760 <__assert_fail@plt+0x1221c>
   23750:	ldr	r3, [fp, #4]
   23754:	ldr	r3, [r3, #4]
   23758:	ldrb	r3, [r3]
   2375c:	b	23764 <__assert_fail@plt+0x12220>
   23760:	mov	r3, #0
   23764:	str	r3, [fp, #-16]
   23768:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2376c:	ldr	r3, [r3]
   23770:	cmp	r3, #0
   23774:	beq	23788 <__assert_fail@plt+0x12244>
   23778:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2377c:	ldr	r3, [r3]
   23780:	cmp	r3, #3
   23784:	bne	237a4 <__assert_fail@plt+0x12260>
   23788:	ldr	r3, [fp, #-12]
   2378c:	uxtb	r3, r3
   23790:	ldr	r1, [fp, #8]
   23794:	mov	r0, r3
   23798:	bl	23500 <__assert_fail@plt+0x11fbc>
   2379c:	mov	r3, r0
   237a0:	b	237ac <__assert_fail@plt+0x12268>
   237a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   237a8:	ldr	r3, [r3, #4]
   237ac:	str	r3, [fp, #-20]	; 0xffffffec
   237b0:	ldr	r3, [fp, #4]
   237b4:	ldr	r3, [r3]
   237b8:	cmp	r3, #0
   237bc:	beq	237d0 <__assert_fail@plt+0x1228c>
   237c0:	ldr	r3, [fp, #4]
   237c4:	ldr	r3, [r3]
   237c8:	cmp	r3, #3
   237cc:	bne	237ec <__assert_fail@plt+0x122a8>
   237d0:	ldr	r3, [fp, #-16]
   237d4:	uxtb	r3, r3
   237d8:	ldr	r1, [fp, #8]
   237dc:	mov	r0, r3
   237e0:	bl	23500 <__assert_fail@plt+0x11fbc>
   237e4:	mov	r3, r0
   237e8:	b	237f4 <__assert_fail@plt+0x122b0>
   237ec:	ldr	r3, [fp, #4]
   237f0:	ldr	r3, [r3, #4]
   237f4:	str	r3, [fp, #-24]	; 0xffffffe8
   237f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   237fc:	cmn	r3, #1
   23800:	beq	23810 <__assert_fail@plt+0x122cc>
   23804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23808:	cmn	r3, #1
   2380c:	bne	23818 <__assert_fail@plt+0x122d4>
   23810:	mov	r3, #3
   23814:	b	23a04 <__assert_fail@plt+0x124c0>
   23818:	ldr	r3, [fp, #12]
   2381c:	and	r3, r3, #65536	; 0x10000
   23820:	cmp	r3, #0
   23824:	movne	r3, #1
   23828:	moveq	r3, #0
   2382c:	uxtb	r3, r3
   23830:	cmp	r3, #0
   23834:	beq	23860 <__assert_fail@plt+0x1231c>
   23838:	ldr	r2, [fp, #-20]	; 0xffffffec
   2383c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23840:	cmp	r2, r3
   23844:	movhi	r3, #1
   23848:	movls	r3, #0
   2384c:	uxtb	r3, r3
   23850:	cmp	r3, #0
   23854:	beq	23860 <__assert_fail@plt+0x1231c>
   23858:	mov	r3, #11
   2385c:	b	23a04 <__assert_fail@plt+0x124c0>
   23860:	ldr	r3, [fp, #8]
   23864:	ldr	r3, [r3, #92]	; 0x5c
   23868:	cmp	r3, #1
   2386c:	ble	239ac <__assert_fail@plt+0x12468>
   23870:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23874:	ldr	r2, [r3]
   23878:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2387c:	ldr	r3, [r3, #32]
   23880:	cmp	r2, r3
   23884:	moveq	r3, #1
   23888:	movne	r3, #0
   2388c:	uxtb	r3, r3
   23890:	cmp	r3, #0
   23894:	beq	23960 <__assert_fail@plt+0x1241c>
   23898:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2389c:	ldr	r3, [r3, #32]
   238a0:	lsl	r3, r3, #1
   238a4:	add	r3, r3, #1
   238a8:	str	r3, [fp, #-28]	; 0xffffffe4
   238ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   238b0:	ldr	r2, [r3, #4]
   238b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   238b8:	lsl	r3, r3, #2
   238bc:	mov	r1, r3
   238c0:	mov	r0, r2
   238c4:	bl	332ec <__assert_fail@plt+0x21da8>
   238c8:	str	r0, [fp, #-32]	; 0xffffffe0
   238cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   238d0:	ldr	r2, [r3, #8]
   238d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   238d8:	lsl	r3, r3, #2
   238dc:	mov	r1, r3
   238e0:	mov	r0, r2
   238e4:	bl	332ec <__assert_fail@plt+0x21da8>
   238e8:	str	r0, [fp, #-36]	; 0xffffffdc
   238ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   238f0:	cmp	r3, #0
   238f4:	moveq	r3, #1
   238f8:	movne	r3, #0
   238fc:	uxtb	r3, r3
   23900:	cmp	r3, #0
   23904:	bne	23924 <__assert_fail@plt+0x123e0>
   23908:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2390c:	cmp	r3, #0
   23910:	moveq	r3, #1
   23914:	movne	r3, #0
   23918:	uxtb	r3, r3
   2391c:	cmp	r3, #0
   23920:	beq	2393c <__assert_fail@plt+0x123f8>
   23924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23928:	bl	14dec <__assert_fail@plt+0x38a8>
   2392c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23930:	bl	14dec <__assert_fail@plt+0x38a8>
   23934:	mov	r3, #12
   23938:	b	23a04 <__assert_fail@plt+0x124c0>
   2393c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23940:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23944:	str	r2, [r3, #4]
   23948:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2394c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23950:	str	r2, [r3, #8]
   23954:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23958:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2395c:	str	r2, [r3]
   23960:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23964:	ldr	r2, [r3, #4]
   23968:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2396c:	ldr	r3, [r3, #32]
   23970:	lsl	r3, r3, #2
   23974:	add	r3, r2, r3
   23978:	ldr	r2, [fp, #-20]	; 0xffffffec
   2397c:	str	r2, [r3]
   23980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23984:	ldr	r2, [r3, #8]
   23988:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2398c:	ldr	r3, [r3, #32]
   23990:	add	r0, r3, #1
   23994:	ldr	r1, [fp, #-44]	; 0xffffffd4
   23998:	str	r0, [r1, #32]
   2399c:	lsl	r3, r3, #2
   239a0:	add	r3, r2, r3
   239a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   239a8:	str	r2, [r3]
   239ac:	mov	r3, #0
   239b0:	str	r3, [fp, #-8]
   239b4:	b	239f4 <__assert_fail@plt+0x124b0>
   239b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   239bc:	ldr	r3, [fp, #-8]
   239c0:	cmp	r2, r3
   239c4:	bhi	239e8 <__assert_fail@plt+0x124a4>
   239c8:	ldr	r2, [fp, #-8]
   239cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   239d0:	cmp	r2, r3
   239d4:	bhi	239e8 <__assert_fail@plt+0x124a4>
   239d8:	ldr	r3, [fp, #-8]
   239dc:	mov	r1, r3
   239e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   239e4:	bl	177ec <__assert_fail@plt+0x62a8>
   239e8:	ldr	r3, [fp, #-8]
   239ec:	add	r3, r3, #1
   239f0:	str	r3, [fp, #-8]
   239f4:	ldr	r3, [fp, #-8]
   239f8:	cmp	r3, #255	; 0xff
   239fc:	bls	239b8 <__assert_fail@plt+0x12474>
   23a00:	mov	r3, #0
   23a04:	mov	r0, r3
   23a08:	sub	sp, fp, #4
   23a0c:	pop	{fp, pc}
   23a10:	push	{fp, lr}
   23a14:	add	fp, sp, #4
   23a18:	sub	sp, sp, #24
   23a1c:	str	r0, [fp, #-16]
   23a20:	str	r1, [fp, #-20]	; 0xffffffec
   23a24:	str	r2, [fp, #-24]	; 0xffffffe8
   23a28:	str	r3, [fp, #-28]	; 0xffffffe4
   23a2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23a30:	bl	113f4 <strlen@plt>
   23a34:	str	r0, [fp, #-8]
   23a38:	ldr	r3, [fp, #-8]
   23a3c:	cmp	r3, #1
   23a40:	movne	r3, #1
   23a44:	moveq	r3, #0
   23a48:	uxtb	r3, r3
   23a4c:	cmp	r3, #0
   23a50:	beq	23a5c <__assert_fail@plt+0x12518>
   23a54:	mov	r3, #3
   23a58:	b	23a74 <__assert_fail@plt+0x12530>
   23a5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23a60:	ldrb	r3, [r3]
   23a64:	mov	r1, r3
   23a68:	ldr	r0, [fp, #-16]
   23a6c:	bl	177ec <__assert_fail@plt+0x62a8>
   23a70:	mov	r3, #0
   23a74:	mov	r0, r3
   23a78:	sub	sp, fp, #4
   23a7c:	pop	{fp, pc}
   23a80:	push	{fp, lr}
   23a84:	add	fp, sp, #4
   23a88:	sub	sp, sp, #248	; 0xf8
   23a8c:	str	r0, [fp, #-200]	; 0xffffff38
   23a90:	str	r1, [fp, #-204]	; 0xffffff34
   23a94:	str	r2, [fp, #-208]	; 0xffffff30
   23a98:	str	r3, [fp, #-212]	; 0xffffff2c
   23a9c:	mov	r3, #0
   23aa0:	str	r3, [fp, #-40]	; 0xffffffd8
   23aa4:	mov	r3, #0
   23aa8:	str	r3, [fp, #-44]	; 0xffffffd4
   23aac:	mov	r3, #0
   23ab0:	str	r3, [fp, #-48]	; 0xffffffd0
   23ab4:	mov	r3, #0
   23ab8:	str	r3, [fp, #-52]	; 0xffffffcc
   23abc:	mov	r3, #0
   23ac0:	str	r3, [fp, #-56]	; 0xffffffc8
   23ac4:	mov	r3, #0
   23ac8:	str	r3, [fp, #-60]	; 0xffffffc4
   23acc:	mov	r3, #0
   23ad0:	str	r3, [fp, #-92]	; 0xffffffa4
   23ad4:	mov	r3, #0
   23ad8:	str	r3, [fp, #-96]	; 0xffffffa0
   23adc:	mov	r3, #0
   23ae0:	str	r3, [fp, #-8]
   23ae4:	mov	r3, #0
   23ae8:	str	r3, [fp, #-100]	; 0xffffff9c
   23aec:	mov	r3, #0
   23af0:	str	r3, [fp, #-104]	; 0xffffff98
   23af4:	mov	r3, #0
   23af8:	strb	r3, [fp, #-9]
   23afc:	mov	r3, #1
   23b00:	strb	r3, [fp, #-21]	; 0xffffffeb
   23b04:	mov	r1, #1
   23b08:	mov	r0, #32
   23b0c:	bl	33180 <__assert_fail@plt+0x21c3c>
   23b10:	mov	r3, r0
   23b14:	str	r3, [fp, #-64]	; 0xffffffc0
   23b18:	mov	r1, #1
   23b1c:	mov	r0, #40	; 0x28
   23b20:	bl	33180 <__assert_fail@plt+0x21c3c>
   23b24:	mov	r3, r0
   23b28:	str	r3, [fp, #-68]	; 0xffffffbc
   23b2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   23b30:	cmp	r3, #0
   23b34:	moveq	r3, #1
   23b38:	movne	r3, #0
   23b3c:	uxtb	r3, r3
   23b40:	cmp	r3, #0
   23b44:	bne	23b64 <__assert_fail@plt+0x12620>
   23b48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23b4c:	cmp	r3, #0
   23b50:	moveq	r3, #1
   23b54:	movne	r3, #0
   23b58:	uxtb	r3, r3
   23b5c:	cmp	r3, #0
   23b60:	beq	23b88 <__assert_fail@plt+0x12644>
   23b64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23b68:	bl	14dec <__assert_fail@plt+0x38a8>
   23b6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   23b70:	bl	14dec <__assert_fail@plt+0x38a8>
   23b74:	ldr	r3, [fp, #4]
   23b78:	mov	r2, #12
   23b7c:	str	r2, [r3]
   23b80:	mov	r3, #0
   23b84:	b	24410 <__assert_fail@plt+0x12ecc>
   23b88:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23b8c:	ldr	r1, [fp, #-200]	; 0xffffff38
   23b90:	ldr	r0, [fp, #-208]	; 0xffffff30
   23b94:	bl	21afc <__assert_fail@plt+0x105b8>
   23b98:	str	r0, [fp, #-20]	; 0xffffffec
   23b9c:	ldr	r3, [fp, #-208]	; 0xffffff30
   23ba0:	ldrb	r3, [r3, #4]
   23ba4:	cmp	r3, #2
   23ba8:	moveq	r3, #1
   23bac:	movne	r3, #0
   23bb0:	uxtb	r3, r3
   23bb4:	cmp	r3, #0
   23bb8:	beq	23bcc <__assert_fail@plt+0x12688>
   23bbc:	ldr	r3, [fp, #4]
   23bc0:	mov	r2, #2
   23bc4:	str	r2, [r3]
   23bc8:	b	243fc <__assert_fail@plt+0x12eb8>
   23bcc:	ldr	r3, [fp, #-208]	; 0xffffff30
   23bd0:	ldrb	r3, [r3, #4]
   23bd4:	cmp	r3, #25
   23bd8:	bne	23c6c <__assert_fail@plt+0x12728>
   23bdc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   23be0:	ldrb	r3, [r2, #16]
   23be4:	orr	r3, r3, #1
   23be8:	strb	r3, [r2, #16]
   23bec:	mov	r3, #1
   23bf0:	strb	r3, [fp, #-9]
   23bf4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   23bf8:	and	r3, r3, #256	; 0x100
   23bfc:	cmp	r3, #0
   23c00:	beq	23c10 <__assert_fail@plt+0x126cc>
   23c04:	mov	r1, #10
   23c08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23c0c:	bl	177ec <__assert_fail@plt+0x62a8>
   23c10:	ldr	r3, [fp, #-200]	; 0xffffff38
   23c14:	ldr	r2, [r3, #40]	; 0x28
   23c18:	ldr	r3, [fp, #-20]	; 0xffffffec
   23c1c:	add	r2, r2, r3
   23c20:	ldr	r3, [fp, #-200]	; 0xffffff38
   23c24:	str	r2, [r3, #40]	; 0x28
   23c28:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23c2c:	ldr	r1, [fp, #-200]	; 0xffffff38
   23c30:	ldr	r0, [fp, #-208]	; 0xffffff30
   23c34:	bl	21afc <__assert_fail@plt+0x105b8>
   23c38:	str	r0, [fp, #-20]	; 0xffffffec
   23c3c:	ldr	r3, [fp, #-208]	; 0xffffff30
   23c40:	ldrb	r3, [r3, #4]
   23c44:	cmp	r3, #2
   23c48:	moveq	r3, #1
   23c4c:	movne	r3, #0
   23c50:	uxtb	r3, r3
   23c54:	cmp	r3, #0
   23c58:	beq	23c6c <__assert_fail@plt+0x12728>
   23c5c:	ldr	r3, [fp, #4]
   23c60:	mov	r2, #2
   23c64:	str	r2, [r3]
   23c68:	b	243fc <__assert_fail@plt+0x12eb8>
   23c6c:	ldr	r3, [fp, #-208]	; 0xffffff30
   23c70:	ldrb	r3, [r3, #4]
   23c74:	cmp	r3, #21
   23c78:	bne	23c88 <__assert_fail@plt+0x12744>
   23c7c:	ldr	r3, [fp, #-208]	; 0xffffff30
   23c80:	mov	r2, #1
   23c84:	strb	r2, [r3, #4]
   23c88:	mov	r3, #0
   23c8c:	str	r3, [fp, #-28]	; 0xffffffe4
   23c90:	mov	r3, #0
   23c94:	strb	r3, [fp, #-29]	; 0xffffffe3
   23c98:	sub	r3, fp, #192	; 0xc0
   23c9c:	str	r3, [fp, #-108]	; 0xffffff94
   23ca0:	mov	r3, #3
   23ca4:	str	r3, [fp, #-112]	; 0xffffff90
   23ca8:	sub	r0, fp, #112	; 0x70
   23cac:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   23cb0:	str	r3, [sp, #8]
   23cb4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   23cb8:	str	r3, [sp, #4]
   23cbc:	ldr	r3, [fp, #-204]	; 0xffffff34
   23cc0:	str	r3, [sp]
   23cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cc8:	ldr	r2, [fp, #-208]	; 0xffffff30
   23ccc:	ldr	r1, [fp, #-200]	; 0xffffff38
   23cd0:	bl	2441c <__assert_fail@plt+0x12ed8>
   23cd4:	str	r0, [fp, #-72]	; 0xffffffb8
   23cd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   23cdc:	cmp	r3, #0
   23ce0:	movne	r3, #1
   23ce4:	moveq	r3, #0
   23ce8:	uxtb	r3, r3
   23cec:	cmp	r3, #0
   23cf0:	beq	23d04 <__assert_fail@plt+0x127c0>
   23cf4:	ldr	r3, [fp, #4]
   23cf8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   23cfc:	str	r2, [r3]
   23d00:	b	243fc <__assert_fail@plt+0x12eb8>
   23d04:	mov	r3, #0
   23d08:	strb	r3, [fp, #-21]	; 0xffffffeb
   23d0c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23d10:	ldr	r1, [fp, #-200]	; 0xffffff38
   23d14:	ldr	r0, [fp, #-208]	; 0xffffff30
   23d18:	bl	21afc <__assert_fail@plt+0x105b8>
   23d1c:	str	r0, [fp, #-20]	; 0xffffffec
   23d20:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d24:	cmp	r3, #4
   23d28:	beq	23e10 <__assert_fail@plt+0x128cc>
   23d2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d30:	cmp	r3, #2
   23d34:	beq	23e10 <__assert_fail@plt+0x128cc>
   23d38:	ldr	r3, [fp, #-208]	; 0xffffff30
   23d3c:	ldrb	r3, [r3, #4]
   23d40:	cmp	r3, #2
   23d44:	moveq	r3, #1
   23d48:	movne	r3, #0
   23d4c:	uxtb	r3, r3
   23d50:	cmp	r3, #0
   23d54:	beq	23d68 <__assert_fail@plt+0x12824>
   23d58:	ldr	r3, [fp, #4]
   23d5c:	mov	r2, #7
   23d60:	str	r2, [r3]
   23d64:	b	243fc <__assert_fail@plt+0x12eb8>
   23d68:	ldr	r3, [fp, #-208]	; 0xffffff30
   23d6c:	ldrb	r3, [r3, #4]
   23d70:	cmp	r3, #22
   23d74:	bne	23e10 <__assert_fail@plt+0x128cc>
   23d78:	ldr	r3, [fp, #-200]	; 0xffffff38
   23d7c:	ldr	r2, [r3, #40]	; 0x28
   23d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   23d84:	add	r2, r2, r3
   23d88:	ldr	r3, [fp, #-200]	; 0xffffff38
   23d8c:	str	r2, [r3, #40]	; 0x28
   23d90:	sub	r3, fp, #128	; 0x80
   23d94:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23d98:	ldr	r1, [fp, #-200]	; 0xffffff38
   23d9c:	mov	r0, r3
   23da0:	bl	21afc <__assert_fail@plt+0x105b8>
   23da4:	str	r0, [fp, #-28]	; 0xffffffe4
   23da8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   23dac:	cmp	r3, #2
   23db0:	moveq	r3, #1
   23db4:	movne	r3, #0
   23db8:	uxtb	r3, r3
   23dbc:	cmp	r3, #0
   23dc0:	beq	23dd4 <__assert_fail@plt+0x12890>
   23dc4:	ldr	r3, [fp, #4]
   23dc8:	mov	r2, #7
   23dcc:	str	r2, [r3]
   23dd0:	b	243fc <__assert_fail@plt+0x12eb8>
   23dd4:	ldrb	r3, [fp, #-124]	; 0xffffff84
   23dd8:	cmp	r3, #21
   23ddc:	bne	23e08 <__assert_fail@plt+0x128c4>
   23de0:	ldr	r3, [fp, #-200]	; 0xffffff38
   23de4:	ldr	r2, [r3, #40]	; 0x28
   23de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   23dec:	sub	r2, r2, r3
   23df0:	ldr	r3, [fp, #-200]	; 0xffffff38
   23df4:	str	r2, [r3, #40]	; 0x28
   23df8:	ldr	r3, [fp, #-208]	; 0xffffff30
   23dfc:	mov	r2, #1
   23e00:	strb	r2, [r3, #4]
   23e04:	b	23e10 <__assert_fail@plt+0x128cc>
   23e08:	mov	r3, #1
   23e0c:	strb	r3, [fp, #-29]	; 0xffffffe3
   23e10:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   23e14:	cmp	r3, #0
   23e18:	beq	23f2c <__assert_fail@plt+0x129e8>
   23e1c:	sub	r3, fp, #160	; 0xa0
   23e20:	str	r3, [fp, #-116]	; 0xffffff8c
   23e24:	mov	r3, #3
   23e28:	str	r3, [fp, #-120]	; 0xffffff88
   23e2c:	sub	r2, fp, #128	; 0x80
   23e30:	sub	r0, fp, #120	; 0x78
   23e34:	mov	r3, #1
   23e38:	str	r3, [sp, #8]
   23e3c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   23e40:	str	r3, [sp, #4]
   23e44:	ldr	r3, [fp, #-204]	; 0xffffff34
   23e48:	str	r3, [sp]
   23e4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23e50:	ldr	r1, [fp, #-200]	; 0xffffff38
   23e54:	bl	2441c <__assert_fail@plt+0x12ed8>
   23e58:	str	r0, [fp, #-72]	; 0xffffffb8
   23e5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   23e60:	cmp	r3, #0
   23e64:	movne	r3, #1
   23e68:	moveq	r3, #0
   23e6c:	uxtb	r3, r3
   23e70:	cmp	r3, #0
   23e74:	beq	23e88 <__assert_fail@plt+0x12944>
   23e78:	ldr	r3, [fp, #4]
   23e7c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   23e80:	str	r2, [r3]
   23e84:	b	243fc <__assert_fail@plt+0x12eb8>
   23e88:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23e8c:	ldr	r1, [fp, #-200]	; 0xffffff38
   23e90:	ldr	r0, [fp, #-208]	; 0xffffff30
   23e94:	bl	21afc <__assert_fail@plt+0x105b8>
   23e98:	str	r0, [fp, #-20]	; 0xffffffec
   23e9c:	sub	r1, fp, #112	; 0x70
   23ea0:	sub	r2, fp, #96	; 0x60
   23ea4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   23ea8:	str	r3, [sp, #32]
   23eac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   23eb0:	str	r3, [sp, #28]
   23eb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23eb8:	str	r3, [sp, #24]
   23ebc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23ec0:	str	r3, [sp, #20]
   23ec4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23ec8:	str	r3, [sp, #16]
   23ecc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23ed0:	str	r3, [sp, #12]
   23ed4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   23ed8:	str	r3, [sp, #8]
   23edc:	ldr	r3, [fp, #-204]	; 0xffffff34
   23ee0:	str	r3, [sp, #4]
   23ee4:	sub	r3, fp, #120	; 0x78
   23ee8:	str	r3, [sp]
   23eec:	mov	r3, r1
   23ef0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   23ef4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23ef8:	bl	2354c <__assert_fail@plt+0x12008>
   23efc:	mov	r2, r0
   23f00:	ldr	r3, [fp, #4]
   23f04:	str	r2, [r3]
   23f08:	ldr	r3, [fp, #4]
   23f0c:	ldr	r3, [r3]
   23f10:	cmp	r3, #0
   23f14:	movne	r3, #1
   23f18:	moveq	r3, #0
   23f1c:	uxtb	r3, r3
   23f20:	cmp	r3, #0
   23f24:	beq	24130 <__assert_fail@plt+0x12bec>
   23f28:	b	243fc <__assert_fail@plt+0x12eb8>
   23f2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23f30:	cmp	r3, #4
   23f34:	ldrls	pc, [pc, r3, lsl #2]
   23f38:	b	2411c <__assert_fail@plt+0x12bd8>
   23f3c:	andeq	r3, r2, r0, asr pc
   23f40:	andeq	r3, r2, r4, ror #30
   23f44:	andeq	r4, r2, r4, lsl r0
   23f48:	andeq	r4, r2, r8, asr r0
   23f4c:	andeq	r4, r2, r0, asr #1
   23f50:	ldrb	r3, [fp, #-108]	; 0xffffff94
   23f54:	mov	r1, r3
   23f58:	ldr	r0, [fp, #-64]	; 0xffffffc0
   23f5c:	bl	177ec <__assert_fail@plt+0x62a8>
   23f60:	b	24130 <__assert_fail@plt+0x12bec>
   23f64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23f68:	ldr	r2, [r3, #20]
   23f6c:	ldr	r3, [fp, #-8]
   23f70:	cmp	r2, r3
   23f74:	moveq	r3, #1
   23f78:	movne	r3, #0
   23f7c:	uxtb	r3, r3
   23f80:	cmp	r3, #0
   23f84:	beq	23fe4 <__assert_fail@plt+0x12aa0>
   23f88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23f8c:	ldr	r3, [r3, #20]
   23f90:	lsl	r3, r3, #1
   23f94:	add	r3, r3, #1
   23f98:	str	r3, [fp, #-8]
   23f9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23fa0:	ldr	r2, [r3]
   23fa4:	ldr	r3, [fp, #-8]
   23fa8:	lsl	r3, r3, #2
   23fac:	mov	r1, r3
   23fb0:	mov	r0, r2
   23fb4:	bl	332ec <__assert_fail@plt+0x21da8>
   23fb8:	str	r0, [fp, #-76]	; 0xffffffb4
   23fbc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   23fc0:	cmp	r3, #0
   23fc4:	moveq	r3, #1
   23fc8:	movne	r3, #0
   23fcc:	uxtb	r3, r3
   23fd0:	cmp	r3, #0
   23fd4:	bne	243d4 <__assert_fail@plt+0x12e90>
   23fd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23fdc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   23fe0:	str	r2, [r3]
   23fe4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23fe8:	ldr	r2, [r3]
   23fec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   23ff0:	ldr	r3, [r3, #20]
   23ff4:	add	r0, r3, #1
   23ff8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   23ffc:	str	r0, [r1, #20]
   24000:	lsl	r3, r3, #2
   24004:	add	r3, r2, r3
   24008:	ldr	r2, [fp, #-108]	; 0xffffff94
   2400c:	str	r2, [r3]
   24010:	b	24130 <__assert_fail@plt+0x12bec>
   24014:	ldr	r3, [fp, #-108]	; 0xffffff94
   24018:	sub	r2, fp, #100	; 0x64
   2401c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24020:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24024:	bl	24748 <__assert_fail@plt+0x13204>
   24028:	mov	r2, r0
   2402c:	ldr	r3, [fp, #4]
   24030:	str	r2, [r3]
   24034:	ldr	r3, [fp, #4]
   24038:	ldr	r3, [r3]
   2403c:	cmp	r3, #0
   24040:	movne	r3, #1
   24044:	moveq	r3, #0
   24048:	uxtb	r3, r3
   2404c:	cmp	r3, #0
   24050:	beq	2411c <__assert_fail@plt+0x12bd8>
   24054:	b	243fc <__assert_fail@plt+0x12eb8>
   24058:	ldr	r1, [fp, #-108]	; 0xffffff94
   2405c:	sub	r2, fp, #92	; 0x5c
   24060:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24064:	str	r3, [sp, #12]
   24068:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2406c:	str	r3, [sp, #8]
   24070:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24074:	str	r3, [sp, #4]
   24078:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2407c:	str	r3, [sp]
   24080:	mov	r3, r1
   24084:	ldr	r1, [fp, #-68]	; 0xffffffbc
   24088:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2408c:	bl	23a10 <__assert_fail@plt+0x124cc>
   24090:	mov	r2, r0
   24094:	ldr	r3, [fp, #4]
   24098:	str	r2, [r3]
   2409c:	ldr	r3, [fp, #4]
   240a0:	ldr	r3, [r3]
   240a4:	cmp	r3, #0
   240a8:	movne	r3, #1
   240ac:	moveq	r3, #0
   240b0:	uxtb	r3, r3
   240b4:	cmp	r3, #0
   240b8:	beq	24124 <__assert_fail@plt+0x12be0>
   240bc:	b	243fc <__assert_fail@plt+0x12eb8>
   240c0:	ldr	r3, [fp, #-200]	; 0xffffff38
   240c4:	ldr	r0, [r3, #64]	; 0x40
   240c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   240cc:	sub	r1, fp, #104	; 0x68
   240d0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   240d4:	str	r2, [sp, #4]
   240d8:	str	r3, [sp]
   240dc:	mov	r3, r1
   240e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   240e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   240e8:	bl	247b4 <__assert_fail@plt+0x13270>
   240ec:	mov	r2, r0
   240f0:	ldr	r3, [fp, #4]
   240f4:	str	r2, [r3]
   240f8:	ldr	r3, [fp, #4]
   240fc:	ldr	r3, [r3]
   24100:	cmp	r3, #0
   24104:	movne	r3, #1
   24108:	moveq	r3, #0
   2410c:	uxtb	r3, r3
   24110:	cmp	r3, #0
   24114:	beq	2412c <__assert_fail@plt+0x12be8>
   24118:	b	243fc <__assert_fail@plt+0x12eb8>
   2411c:	nop			; (mov r0, r0)
   24120:	b	24130 <__assert_fail@plt+0x12bec>
   24124:	nop			; (mov r0, r0)
   24128:	b	24130 <__assert_fail@plt+0x12bec>
   2412c:	nop			; (mov r0, r0)
   24130:	ldr	r3, [fp, #-208]	; 0xffffff30
   24134:	ldrb	r3, [r3, #4]
   24138:	cmp	r3, #2
   2413c:	moveq	r3, #1
   24140:	movne	r3, #0
   24144:	uxtb	r3, r3
   24148:	cmp	r3, #0
   2414c:	beq	24164 <__assert_fail@plt+0x12c20>
   24150:	ldr	r3, [fp, #4]
   24154:	mov	r2, #7
   24158:	str	r2, [r3]
   2415c:	nop			; (mov r0, r0)
   24160:	b	243fc <__assert_fail@plt+0x12eb8>
   24164:	ldr	r3, [fp, #-208]	; 0xffffff30
   24168:	ldrb	r3, [r3, #4]
   2416c:	cmp	r3, #21
   24170:	bne	23c88 <__assert_fail@plt+0x12744>
   24174:	ldr	r3, [fp, #-200]	; 0xffffff38
   24178:	ldr	r2, [r3, #40]	; 0x28
   2417c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24180:	add	r2, r2, r3
   24184:	ldr	r3, [fp, #-200]	; 0xffffff38
   24188:	str	r2, [r3, #40]	; 0x28
   2418c:	ldrb	r3, [fp, #-9]
   24190:	cmp	r3, #0
   24194:	bne	2419c <__assert_fail@plt+0x12c58>
   24198:	b	241a4 <__assert_fail@plt+0x12c60>
   2419c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   241a0:	bl	17a14 <__assert_fail@plt+0x64d0>
   241a4:	ldr	r3, [fp, #-204]	; 0xffffff34
   241a8:	ldr	r3, [r3, #92]	; 0x5c
   241ac:	cmp	r3, #1
   241b0:	ble	241c8 <__assert_fail@plt+0x12c84>
   241b4:	ldr	r3, [fp, #-204]	; 0xffffff34
   241b8:	ldr	r3, [r3, #60]	; 0x3c
   241bc:	mov	r1, r3
   241c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   241c4:	bl	17b0c <__assert_fail@plt+0x65c8>
   241c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   241cc:	ldr	r3, [r3, #20]
   241d0:	cmp	r3, #0
   241d4:	bne	24240 <__assert_fail@plt+0x12cfc>
   241d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   241dc:	ldr	r3, [r3, #24]
   241e0:	cmp	r3, #0
   241e4:	bne	24240 <__assert_fail@plt+0x12cfc>
   241e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   241ec:	ldr	r3, [r3, #28]
   241f0:	cmp	r3, #0
   241f4:	bne	24240 <__assert_fail@plt+0x12cfc>
   241f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   241fc:	ldr	r3, [r3, #32]
   24200:	cmp	r3, #0
   24204:	bne	24240 <__assert_fail@plt+0x12cfc>
   24208:	ldr	r3, [fp, #-204]	; 0xffffff34
   2420c:	ldr	r3, [r3, #92]	; 0x5c
   24210:	cmp	r3, #1
   24214:	ble	24378 <__assert_fail@plt+0x12e34>
   24218:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2421c:	ldr	r3, [r3, #36]	; 0x24
   24220:	cmp	r3, #0
   24224:	bne	24240 <__assert_fail@plt+0x12cfc>
   24228:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2422c:	ldrb	r3, [r3, #16]
   24230:	and	r3, r3, #1
   24234:	uxtb	r3, r3
   24238:	cmp	r3, #0
   2423c:	beq	24378 <__assert_fail@plt+0x12e34>
   24240:	ldr	r2, [fp, #-204]	; 0xffffff34
   24244:	ldrb	r3, [r2, #88]	; 0x58
   24248:	orr	r3, r3, #2
   2424c:	strb	r3, [r2, #88]	; 0x58
   24250:	mov	r3, #6
   24254:	strb	r3, [fp, #-84]	; 0xffffffac
   24258:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2425c:	str	r3, [fp, #-88]	; 0xffffffa8
   24260:	sub	r3, fp, #88	; 0x58
   24264:	mov	r2, #0
   24268:	mov	r1, #0
   2426c:	ldr	r0, [fp, #-204]	; 0xffffff34
   24270:	bl	259c0 <__assert_fail@plt+0x1447c>
   24274:	str	r0, [fp, #-80]	; 0xffffffb0
   24278:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2427c:	cmp	r3, #0
   24280:	moveq	r3, #1
   24284:	movne	r3, #0
   24288:	uxtb	r3, r3
   2428c:	cmp	r3, #0
   24290:	bne	243dc <__assert_fail@plt+0x12e98>
   24294:	mov	r3, #0
   24298:	str	r3, [fp, #-36]	; 0xffffffdc
   2429c:	b	242c8 <__assert_fail@plt+0x12d84>
   242a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   242a4:	lsl	r3, r3, #2
   242a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   242ac:	add	r3, r2, r3
   242b0:	ldr	r3, [r3]
   242b4:	cmp	r3, #0
   242b8:	bne	242d8 <__assert_fail@plt+0x12d94>
   242bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   242c0:	add	r3, r3, #1
   242c4:	str	r3, [fp, #-36]	; 0xffffffdc
   242c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   242cc:	cmp	r3, #7
   242d0:	ble	242a0 <__assert_fail@plt+0x12d5c>
   242d4:	b	242dc <__assert_fail@plt+0x12d98>
   242d8:	nop			; (mov r0, r0)
   242dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   242e0:	cmp	r3, #7
   242e4:	bgt	24364 <__assert_fail@plt+0x12e20>
   242e8:	mov	r3, #3
   242ec:	strb	r3, [fp, #-84]	; 0xffffffac
   242f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   242f4:	str	r3, [fp, #-88]	; 0xffffffa8
   242f8:	sub	r3, fp, #88	; 0x58
   242fc:	mov	r2, #0
   24300:	mov	r1, #0
   24304:	ldr	r0, [fp, #-204]	; 0xffffff34
   24308:	bl	259c0 <__assert_fail@plt+0x1447c>
   2430c:	str	r0, [fp, #-16]
   24310:	ldr	r3, [fp, #-16]
   24314:	cmp	r3, #0
   24318:	moveq	r3, #1
   2431c:	movne	r3, #0
   24320:	uxtb	r3, r3
   24324:	cmp	r3, #0
   24328:	bne	243e4 <__assert_fail@plt+0x12ea0>
   2432c:	mov	r3, #10
   24330:	ldr	r2, [fp, #-80]	; 0xffffffb0
   24334:	ldr	r1, [fp, #-16]
   24338:	ldr	r0, [fp, #-204]	; 0xffffff34
   2433c:	bl	25964 <__assert_fail@plt+0x14420>
   24340:	str	r0, [fp, #-16]
   24344:	ldr	r3, [fp, #-16]
   24348:	cmp	r3, #0
   2434c:	moveq	r3, #1
   24350:	movne	r3, #0
   24354:	uxtb	r3, r3
   24358:	cmp	r3, #0
   2435c:	beq	243c8 <__assert_fail@plt+0x12e84>
   24360:	b	243f0 <__assert_fail@plt+0x12eac>
   24364:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24368:	bl	14dec <__assert_fail@plt+0x38a8>
   2436c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   24370:	str	r3, [fp, #-16]
   24374:	b	243c8 <__assert_fail@plt+0x12e84>
   24378:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2437c:	bl	25900 <__assert_fail@plt+0x143bc>
   24380:	mov	r3, #3
   24384:	strb	r3, [fp, #-84]	; 0xffffffac
   24388:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2438c:	str	r3, [fp, #-88]	; 0xffffffa8
   24390:	sub	r3, fp, #88	; 0x58
   24394:	mov	r2, #0
   24398:	mov	r1, #0
   2439c:	ldr	r0, [fp, #-204]	; 0xffffff34
   243a0:	bl	259c0 <__assert_fail@plt+0x1447c>
   243a4:	str	r0, [fp, #-16]
   243a8:	ldr	r3, [fp, #-16]
   243ac:	cmp	r3, #0
   243b0:	moveq	r3, #1
   243b4:	movne	r3, #0
   243b8:	uxtb	r3, r3
   243bc:	cmp	r3, #0
   243c0:	bne	243ec <__assert_fail@plt+0x12ea8>
   243c4:	b	243cc <__assert_fail@plt+0x12e88>
   243c8:	nop			; (mov r0, r0)
   243cc:	ldr	r3, [fp, #-16]
   243d0:	b	24410 <__assert_fail@plt+0x12ecc>
   243d4:	nop			; (mov r0, r0)
   243d8:	b	243f0 <__assert_fail@plt+0x12eac>
   243dc:	nop			; (mov r0, r0)
   243e0:	b	243f0 <__assert_fail@plt+0x12eac>
   243e4:	nop			; (mov r0, r0)
   243e8:	b	243f0 <__assert_fail@plt+0x12eac>
   243ec:	nop			; (mov r0, r0)
   243f0:	ldr	r3, [fp, #4]
   243f4:	mov	r2, #12
   243f8:	str	r2, [r3]
   243fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   24400:	bl	14dec <__assert_fail@plt+0x38a8>
   24404:	ldr	r0, [fp, #-68]	; 0xffffffbc
   24408:	bl	25900 <__assert_fail@plt+0x143bc>
   2440c:	mov	r3, #0
   24410:	mov	r0, r3
   24414:	sub	sp, fp, #4
   24418:	pop	{fp, pc}
   2441c:	push	{fp, lr}
   24420:	add	fp, sp, #4
   24424:	sub	sp, sp, #32
   24428:	str	r0, [fp, #-24]	; 0xffffffe8
   2442c:	str	r1, [fp, #-28]	; 0xffffffe4
   24430:	str	r2, [fp, #-32]	; 0xffffffe0
   24434:	str	r3, [fp, #-36]	; 0xffffffdc
   24438:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2443c:	ldr	r3, [r3, #40]	; 0x28
   24440:	mov	r1, r3
   24444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24448:	bl	17b94 <__assert_fail@plt+0x6650>
   2444c:	str	r0, [fp, #-8]
   24450:	ldr	r3, [fp, #-8]
   24454:	cmp	r3, #1
   24458:	ble	244a8 <__assert_fail@plt+0x12f64>
   2445c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24460:	mov	r2, #1
   24464:	str	r2, [r3]
   24468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2446c:	ldr	r3, [r3, #40]	; 0x28
   24470:	mov	r1, r3
   24474:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24478:	bl	17c38 <__assert_fail@plt+0x66f4>
   2447c:	mov	r2, r0
   24480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24484:	str	r2, [r3, #4]
   24488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2448c:	ldr	r2, [r3, #40]	; 0x28
   24490:	ldr	r3, [fp, #-8]
   24494:	add	r2, r2, r3
   24498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2449c:	str	r2, [r3, #40]	; 0x28
   244a0:	mov	r3, #0
   244a4:	b	24584 <__assert_fail@plt+0x13040>
   244a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244ac:	ldr	r2, [r3, #40]	; 0x28
   244b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   244b4:	add	r2, r2, r3
   244b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244bc:	str	r2, [r3, #40]	; 0x28
   244c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   244c4:	ldrb	r3, [r3, #4]
   244c8:	cmp	r3, #26
   244cc:	beq	244f0 <__assert_fail@plt+0x12fac>
   244d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   244d4:	ldrb	r3, [r3, #4]
   244d8:	cmp	r3, #30
   244dc:	beq	244f0 <__assert_fail@plt+0x12fac>
   244e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   244e4:	ldrb	r3, [r3, #4]
   244e8:	cmp	r3, #28
   244ec:	bne	24508 <__assert_fail@plt+0x12fc4>
   244f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   244f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   244f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   244fc:	bl	24590 <__assert_fail@plt+0x1304c>
   24500:	mov	r3, r0
   24504:	b	24584 <__assert_fail@plt+0x13040>
   24508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2450c:	ldrb	r3, [r3, #4]
   24510:	cmp	r3, #22
   24514:	moveq	r3, #1
   24518:	movne	r3, #0
   2451c:	uxtb	r3, r3
   24520:	cmp	r3, #0
   24524:	beq	24564 <__assert_fail@plt+0x13020>
   24528:	ldrb	r3, [fp, #12]
   2452c:	eor	r3, r3, #1
   24530:	uxtb	r3, r3
   24534:	cmp	r3, #0
   24538:	beq	24564 <__assert_fail@plt+0x13020>
   2453c:	sub	r3, fp, #16
   24540:	ldr	r2, [fp, #8]
   24544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24548:	mov	r0, r3
   2454c:	bl	21afc <__assert_fail@plt+0x105b8>
   24550:	ldrb	r3, [fp, #-12]
   24554:	cmp	r3, #21
   24558:	beq	24564 <__assert_fail@plt+0x13020>
   2455c:	mov	r3, #11
   24560:	b	24584 <__assert_fail@plt+0x13040>
   24564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24568:	mov	r2, #0
   2456c:	str	r2, [r3]
   24570:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24574:	ldrb	r2, [r3]
   24578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2457c:	strb	r2, [r3, #4]
   24580:	mov	r3, #0
   24584:	mov	r0, r3
   24588:	sub	sp, fp, #4
   2458c:	pop	{fp, pc}
   24590:	push	{fp, lr}
   24594:	add	fp, sp, #4
   24598:	sub	sp, sp, #32
   2459c:	str	r0, [fp, #-24]	; 0xffffffe8
   245a0:	str	r1, [fp, #-28]	; 0xffffffe4
   245a4:	str	r2, [fp, #-32]	; 0xffffffe0
   245a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   245ac:	ldrb	r3, [r3]
   245b0:	strb	r3, [fp, #-13]
   245b4:	mov	r3, #0
   245b8:	str	r3, [fp, #-12]
   245bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245c0:	ldr	r2, [r3, #56]	; 0x38
   245c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245c8:	ldr	r3, [r3, #40]	; 0x28
   245cc:	cmp	r2, r3
   245d0:	bgt	245dc <__assert_fail@plt+0x13098>
   245d4:	mov	r3, #7
   245d8:	b	2473c <__assert_fail@plt+0x131f8>
   245dc:	ldr	r3, [fp, #-12]
   245e0:	cmp	r3, #31
   245e4:	ble	245f0 <__assert_fail@plt+0x130ac>
   245e8:	mov	r3, #7
   245ec:	b	2473c <__assert_fail@plt+0x131f8>
   245f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   245f4:	ldrb	r3, [r3, #4]
   245f8:	cmp	r3, #30
   245fc:	bne	24614 <__assert_fail@plt+0x130d0>
   24600:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24604:	bl	1a320 <__assert_fail@plt+0x8ddc>
   24608:	mov	r3, r0
   2460c:	strb	r3, [fp, #-5]
   24610:	b	2463c <__assert_fail@plt+0x130f8>
   24614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24618:	ldr	r2, [r3, #4]
   2461c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24620:	ldr	r3, [r3, #40]	; 0x28
   24624:	add	r0, r3, #1
   24628:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2462c:	str	r0, [r1, #40]	; 0x28
   24630:	add	r3, r2, r3
   24634:	ldrb	r3, [r3]
   24638:	strb	r3, [fp, #-5]
   2463c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24640:	ldr	r2, [r3, #56]	; 0x38
   24644:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24648:	ldr	r3, [r3, #40]	; 0x28
   2464c:	cmp	r2, r3
   24650:	bgt	2465c <__assert_fail@plt+0x13118>
   24654:	mov	r3, #7
   24658:	b	2473c <__assert_fail@plt+0x131f8>
   2465c:	ldrb	r2, [fp, #-5]
   24660:	ldrb	r3, [fp, #-13]
   24664:	cmp	r2, r3
   24668:	bne	2468c <__assert_fail@plt+0x13148>
   2466c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24670:	ldr	r3, [r3, #4]
   24674:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24678:	ldr	r2, [r2, #40]	; 0x28
   2467c:	add	r3, r3, r2
   24680:	ldrb	r3, [r3]
   24684:	cmp	r3, #93	; 0x5d
   24688:	beq	246b4 <__assert_fail@plt+0x13170>
   2468c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24690:	ldr	r2, [r3, #4]
   24694:	ldr	r3, [fp, #-12]
   24698:	add	r3, r2, r3
   2469c:	ldrb	r2, [fp, #-5]
   246a0:	strb	r2, [r3]
   246a4:	ldr	r3, [fp, #-12]
   246a8:	add	r3, r3, #1
   246ac:	str	r3, [fp, #-12]
   246b0:	b	245dc <__assert_fail@plt+0x13098>
   246b4:	nop			; (mov r0, r0)
   246b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   246bc:	ldr	r3, [r3, #40]	; 0x28
   246c0:	add	r2, r3, #1
   246c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   246c8:	str	r2, [r3, #40]	; 0x28
   246cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   246d0:	ldr	r2, [r3, #4]
   246d4:	ldr	r3, [fp, #-12]
   246d8:	add	r3, r2, r3
   246dc:	mov	r2, #0
   246e0:	strb	r2, [r3]
   246e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   246e8:	ldrb	r3, [r3, #4]
   246ec:	cmp	r3, #28
   246f0:	beq	24718 <__assert_fail@plt+0x131d4>
   246f4:	cmp	r3, #30
   246f8:	beq	24728 <__assert_fail@plt+0x131e4>
   246fc:	cmp	r3, #26
   24700:	beq	24708 <__assert_fail@plt+0x131c4>
   24704:	b	24738 <__assert_fail@plt+0x131f4>
   24708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2470c:	mov	r2, #3
   24710:	str	r2, [r3]
   24714:	b	24738 <__assert_fail@plt+0x131f4>
   24718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2471c:	mov	r2, #2
   24720:	str	r2, [r3]
   24724:	b	24738 <__assert_fail@plt+0x131f4>
   24728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2472c:	mov	r2, #4
   24730:	str	r2, [r3]
   24734:	nop			; (mov r0, r0)
   24738:	mov	r3, #0
   2473c:	mov	r0, r3
   24740:	sub	sp, fp, #4
   24744:	pop	{fp, pc}
   24748:	push	{fp, lr}
   2474c:	add	fp, sp, #4
   24750:	sub	sp, sp, #16
   24754:	str	r0, [fp, #-8]
   24758:	str	r1, [fp, #-12]
   2475c:	str	r2, [fp, #-16]
   24760:	str	r3, [fp, #-20]	; 0xffffffec
   24764:	ldr	r0, [fp, #-20]	; 0xffffffec
   24768:	bl	113f4 <strlen@plt>
   2476c:	mov	r3, r0
   24770:	cmp	r3, #1
   24774:	movne	r3, #1
   24778:	moveq	r3, #0
   2477c:	uxtb	r3, r3
   24780:	cmp	r3, #0
   24784:	beq	24790 <__assert_fail@plt+0x1324c>
   24788:	mov	r3, #3
   2478c:	b	247a8 <__assert_fail@plt+0x13264>
   24790:	ldr	r3, [fp, #-20]	; 0xffffffec
   24794:	ldrb	r3, [r3]
   24798:	mov	r1, r3
   2479c:	ldr	r0, [fp, #-8]
   247a0:	bl	177ec <__assert_fail@plt+0x62a8>
   247a4:	mov	r3, #0
   247a8:	mov	r0, r3
   247ac:	sub	sp, fp, #4
   247b0:	pop	{fp, pc}
   247b4:	push	{r4, fp, lr}
   247b8:	add	fp, sp, #8
   247bc:	sub	sp, sp, #36	; 0x24
   247c0:	str	r0, [fp, #-32]	; 0xffffffe0
   247c4:	str	r1, [fp, #-36]	; 0xffffffdc
   247c8:	str	r2, [fp, #-40]	; 0xffffffd8
   247cc:	str	r3, [fp, #-44]	; 0xffffffd4
   247d0:	ldr	r3, [fp, #4]
   247d4:	str	r3, [fp, #-20]	; 0xffffffec
   247d8:	ldr	r3, [fp, #8]
   247dc:	and	r3, r3, #4194304	; 0x400000
   247e0:	cmp	r3, #0
   247e4:	beq	24820 <__assert_fail@plt+0x132dc>
   247e8:	ldr	r1, [pc, #3300]	; 254d4 <__assert_fail@plt+0x13f90>
   247ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   247f0:	bl	111d8 <strcmp@plt>
   247f4:	mov	r3, r0
   247f8:	cmp	r3, #0
   247fc:	beq	24818 <__assert_fail@plt+0x132d4>
   24800:	ldr	r1, [pc, #3280]	; 254d8 <__assert_fail@plt+0x13f94>
   24804:	ldr	r0, [fp, #-20]	; 0xffffffec
   24808:	bl	111d8 <strcmp@plt>
   2480c:	mov	r3, r0
   24810:	cmp	r3, #0
   24814:	bne	24820 <__assert_fail@plt+0x132dc>
   24818:	ldr	r3, [pc, #3260]	; 254dc <__assert_fail@plt+0x13f98>
   2481c:	str	r3, [fp, #-20]	; 0xffffffec
   24820:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24824:	ldr	r2, [r3]
   24828:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2482c:	ldr	r3, [r3, #36]	; 0x24
   24830:	cmp	r2, r3
   24834:	moveq	r3, #1
   24838:	movne	r3, #0
   2483c:	uxtb	r3, r3
   24840:	cmp	r3, #0
   24844:	beq	248b8 <__assert_fail@plt+0x13374>
   24848:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2484c:	ldr	r3, [r3, #36]	; 0x24
   24850:	lsl	r3, r3, #1
   24854:	add	r3, r3, #1
   24858:	str	r3, [fp, #-24]	; 0xffffffe8
   2485c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24860:	ldr	r2, [r3, #12]
   24864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24868:	lsl	r3, r3, #2
   2486c:	mov	r1, r3
   24870:	mov	r0, r2
   24874:	bl	332ec <__assert_fail@plt+0x21da8>
   24878:	str	r0, [fp, #-28]	; 0xffffffe4
   2487c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24880:	cmp	r3, #0
   24884:	moveq	r3, #1
   24888:	movne	r3, #0
   2488c:	uxtb	r3, r3
   24890:	cmp	r3, #0
   24894:	beq	248a0 <__assert_fail@plt+0x1335c>
   24898:	mov	r3, #12
   2489c:	b	254c8 <__assert_fail@plt+0x13f84>
   248a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   248a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   248a8:	str	r2, [r3, #12]
   248ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   248b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   248b4:	str	r2, [r3]
   248b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   248bc:	ldr	r2, [r3, #12]
   248c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   248c4:	ldr	r3, [r3, #36]	; 0x24
   248c8:	add	r0, r3, #1
   248cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   248d0:	str	r0, [r1, #36]	; 0x24
   248d4:	lsl	r3, r3, #2
   248d8:	add	r4, r2, r3
   248dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   248e0:	bl	111a8 <wctype@plt>
   248e4:	mov	r3, r0
   248e8:	str	r3, [r4]
   248ec:	ldr	r1, [pc, #3052]	; 254e0 <__assert_fail@plt+0x13f9c>
   248f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   248f4:	bl	111d8 <strcmp@plt>
   248f8:	mov	r3, r0
   248fc:	cmp	r3, #0
   24900:	bne	249e8 <__assert_fail@plt+0x134a4>
   24904:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24908:	cmp	r3, #0
   2490c:	movne	r3, #1
   24910:	moveq	r3, #0
   24914:	uxtb	r3, r3
   24918:	cmp	r3, #0
   2491c:	beq	2498c <__assert_fail@plt+0x13448>
   24920:	mov	r3, #0
   24924:	str	r3, [fp, #-16]
   24928:	b	2497c <__assert_fail@plt+0x13438>
   2492c:	bl	113d0 <__ctype_b_loc@plt>
   24930:	mov	r3, r0
   24934:	ldr	r2, [r3]
   24938:	ldr	r3, [fp, #-16]
   2493c:	lsl	r3, r3, #1
   24940:	add	r3, r2, r3
   24944:	ldrh	r3, [r3]
   24948:	and	r3, r3, #8
   2494c:	cmp	r3, #0
   24950:	beq	24970 <__assert_fail@plt+0x1342c>
   24954:	ldr	r3, [fp, #-16]
   24958:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2495c:	add	r3, r2, r3
   24960:	ldrb	r3, [r3]
   24964:	mov	r1, r3
   24968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2496c:	bl	177ec <__assert_fail@plt+0x62a8>
   24970:	ldr	r3, [fp, #-16]
   24974:	add	r3, r3, #1
   24978:	str	r3, [fp, #-16]
   2497c:	ldr	r3, [fp, #-16]
   24980:	cmp	r3, #255	; 0xff
   24984:	ble	2492c <__assert_fail@plt+0x133e8>
   24988:	b	254c4 <__assert_fail@plt+0x13f80>
   2498c:	mov	r3, #0
   24990:	str	r3, [fp, #-16]
   24994:	b	249d8 <__assert_fail@plt+0x13494>
   24998:	bl	113d0 <__ctype_b_loc@plt>
   2499c:	mov	r3, r0
   249a0:	ldr	r2, [r3]
   249a4:	ldr	r3, [fp, #-16]
   249a8:	lsl	r3, r3, #1
   249ac:	add	r3, r2, r3
   249b0:	ldrh	r3, [r3]
   249b4:	and	r3, r3, #8
   249b8:	cmp	r3, #0
   249bc:	beq	249cc <__assert_fail@plt+0x13488>
   249c0:	ldr	r1, [fp, #-16]
   249c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   249c8:	bl	177ec <__assert_fail@plt+0x62a8>
   249cc:	ldr	r3, [fp, #-16]
   249d0:	add	r3, r3, #1
   249d4:	str	r3, [fp, #-16]
   249d8:	ldr	r3, [fp, #-16]
   249dc:	cmp	r3, #255	; 0xff
   249e0:	ble	24998 <__assert_fail@plt+0x13454>
   249e4:	b	254c4 <__assert_fail@plt+0x13f80>
   249e8:	ldr	r1, [pc, #2804]	; 254e4 <__assert_fail@plt+0x13fa0>
   249ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   249f0:	bl	111d8 <strcmp@plt>
   249f4:	mov	r3, r0
   249f8:	cmp	r3, #0
   249fc:	bne	24ae4 <__assert_fail@plt+0x135a0>
   24a00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24a04:	cmp	r3, #0
   24a08:	movne	r3, #1
   24a0c:	moveq	r3, #0
   24a10:	uxtb	r3, r3
   24a14:	cmp	r3, #0
   24a18:	beq	24a88 <__assert_fail@plt+0x13544>
   24a1c:	mov	r3, #0
   24a20:	str	r3, [fp, #-16]
   24a24:	b	24a78 <__assert_fail@plt+0x13534>
   24a28:	bl	113d0 <__ctype_b_loc@plt>
   24a2c:	mov	r3, r0
   24a30:	ldr	r2, [r3]
   24a34:	ldr	r3, [fp, #-16]
   24a38:	lsl	r3, r3, #1
   24a3c:	add	r3, r2, r3
   24a40:	ldrh	r3, [r3]
   24a44:	and	r3, r3, #2
   24a48:	cmp	r3, #0
   24a4c:	beq	24a6c <__assert_fail@plt+0x13528>
   24a50:	ldr	r3, [fp, #-16]
   24a54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24a58:	add	r3, r2, r3
   24a5c:	ldrb	r3, [r3]
   24a60:	mov	r1, r3
   24a64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24a68:	bl	177ec <__assert_fail@plt+0x62a8>
   24a6c:	ldr	r3, [fp, #-16]
   24a70:	add	r3, r3, #1
   24a74:	str	r3, [fp, #-16]
   24a78:	ldr	r3, [fp, #-16]
   24a7c:	cmp	r3, #255	; 0xff
   24a80:	ble	24a28 <__assert_fail@plt+0x134e4>
   24a84:	b	254c4 <__assert_fail@plt+0x13f80>
   24a88:	mov	r3, #0
   24a8c:	str	r3, [fp, #-16]
   24a90:	b	24ad4 <__assert_fail@plt+0x13590>
   24a94:	bl	113d0 <__ctype_b_loc@plt>
   24a98:	mov	r3, r0
   24a9c:	ldr	r2, [r3]
   24aa0:	ldr	r3, [fp, #-16]
   24aa4:	lsl	r3, r3, #1
   24aa8:	add	r3, r2, r3
   24aac:	ldrh	r3, [r3]
   24ab0:	and	r3, r3, #2
   24ab4:	cmp	r3, #0
   24ab8:	beq	24ac8 <__assert_fail@plt+0x13584>
   24abc:	ldr	r1, [fp, #-16]
   24ac0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24ac4:	bl	177ec <__assert_fail@plt+0x62a8>
   24ac8:	ldr	r3, [fp, #-16]
   24acc:	add	r3, r3, #1
   24ad0:	str	r3, [fp, #-16]
   24ad4:	ldr	r3, [fp, #-16]
   24ad8:	cmp	r3, #255	; 0xff
   24adc:	ble	24a94 <__assert_fail@plt+0x13550>
   24ae0:	b	254c4 <__assert_fail@plt+0x13f80>
   24ae4:	ldr	r1, [pc, #2540]	; 254d8 <__assert_fail@plt+0x13f94>
   24ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   24aec:	bl	111d8 <strcmp@plt>
   24af0:	mov	r3, r0
   24af4:	cmp	r3, #0
   24af8:	bne	24be0 <__assert_fail@plt+0x1369c>
   24afc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b00:	cmp	r3, #0
   24b04:	movne	r3, #1
   24b08:	moveq	r3, #0
   24b0c:	uxtb	r3, r3
   24b10:	cmp	r3, #0
   24b14:	beq	24b84 <__assert_fail@plt+0x13640>
   24b18:	mov	r3, #0
   24b1c:	str	r3, [fp, #-16]
   24b20:	b	24b74 <__assert_fail@plt+0x13630>
   24b24:	bl	113d0 <__ctype_b_loc@plt>
   24b28:	mov	r3, r0
   24b2c:	ldr	r2, [r3]
   24b30:	ldr	r3, [fp, #-16]
   24b34:	lsl	r3, r3, #1
   24b38:	add	r3, r2, r3
   24b3c:	ldrh	r3, [r3]
   24b40:	and	r3, r3, #512	; 0x200
   24b44:	cmp	r3, #0
   24b48:	beq	24b68 <__assert_fail@plt+0x13624>
   24b4c:	ldr	r3, [fp, #-16]
   24b50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24b54:	add	r3, r2, r3
   24b58:	ldrb	r3, [r3]
   24b5c:	mov	r1, r3
   24b60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24b64:	bl	177ec <__assert_fail@plt+0x62a8>
   24b68:	ldr	r3, [fp, #-16]
   24b6c:	add	r3, r3, #1
   24b70:	str	r3, [fp, #-16]
   24b74:	ldr	r3, [fp, #-16]
   24b78:	cmp	r3, #255	; 0xff
   24b7c:	ble	24b24 <__assert_fail@plt+0x135e0>
   24b80:	b	254c4 <__assert_fail@plt+0x13f80>
   24b84:	mov	r3, #0
   24b88:	str	r3, [fp, #-16]
   24b8c:	b	24bd0 <__assert_fail@plt+0x1368c>
   24b90:	bl	113d0 <__ctype_b_loc@plt>
   24b94:	mov	r3, r0
   24b98:	ldr	r2, [r3]
   24b9c:	ldr	r3, [fp, #-16]
   24ba0:	lsl	r3, r3, #1
   24ba4:	add	r3, r2, r3
   24ba8:	ldrh	r3, [r3]
   24bac:	and	r3, r3, #512	; 0x200
   24bb0:	cmp	r3, #0
   24bb4:	beq	24bc4 <__assert_fail@plt+0x13680>
   24bb8:	ldr	r1, [fp, #-16]
   24bbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24bc0:	bl	177ec <__assert_fail@plt+0x62a8>
   24bc4:	ldr	r3, [fp, #-16]
   24bc8:	add	r3, r3, #1
   24bcc:	str	r3, [fp, #-16]
   24bd0:	ldr	r3, [fp, #-16]
   24bd4:	cmp	r3, #255	; 0xff
   24bd8:	ble	24b90 <__assert_fail@plt+0x1364c>
   24bdc:	b	254c4 <__assert_fail@plt+0x13f80>
   24be0:	ldr	r1, [pc, #2304]	; 254e8 <__assert_fail@plt+0x13fa4>
   24be4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24be8:	bl	111d8 <strcmp@plt>
   24bec:	mov	r3, r0
   24bf0:	cmp	r3, #0
   24bf4:	bne	24cdc <__assert_fail@plt+0x13798>
   24bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bfc:	cmp	r3, #0
   24c00:	movne	r3, #1
   24c04:	moveq	r3, #0
   24c08:	uxtb	r3, r3
   24c0c:	cmp	r3, #0
   24c10:	beq	24c80 <__assert_fail@plt+0x1373c>
   24c14:	mov	r3, #0
   24c18:	str	r3, [fp, #-16]
   24c1c:	b	24c70 <__assert_fail@plt+0x1372c>
   24c20:	bl	113d0 <__ctype_b_loc@plt>
   24c24:	mov	r3, r0
   24c28:	ldr	r2, [r3]
   24c2c:	ldr	r3, [fp, #-16]
   24c30:	lsl	r3, r3, #1
   24c34:	add	r3, r2, r3
   24c38:	ldrh	r3, [r3]
   24c3c:	and	r3, r3, #8192	; 0x2000
   24c40:	cmp	r3, #0
   24c44:	beq	24c64 <__assert_fail@plt+0x13720>
   24c48:	ldr	r3, [fp, #-16]
   24c4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24c50:	add	r3, r2, r3
   24c54:	ldrb	r3, [r3]
   24c58:	mov	r1, r3
   24c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24c60:	bl	177ec <__assert_fail@plt+0x62a8>
   24c64:	ldr	r3, [fp, #-16]
   24c68:	add	r3, r3, #1
   24c6c:	str	r3, [fp, #-16]
   24c70:	ldr	r3, [fp, #-16]
   24c74:	cmp	r3, #255	; 0xff
   24c78:	ble	24c20 <__assert_fail@plt+0x136dc>
   24c7c:	b	254c4 <__assert_fail@plt+0x13f80>
   24c80:	mov	r3, #0
   24c84:	str	r3, [fp, #-16]
   24c88:	b	24ccc <__assert_fail@plt+0x13788>
   24c8c:	bl	113d0 <__ctype_b_loc@plt>
   24c90:	mov	r3, r0
   24c94:	ldr	r2, [r3]
   24c98:	ldr	r3, [fp, #-16]
   24c9c:	lsl	r3, r3, #1
   24ca0:	add	r3, r2, r3
   24ca4:	ldrh	r3, [r3]
   24ca8:	and	r3, r3, #8192	; 0x2000
   24cac:	cmp	r3, #0
   24cb0:	beq	24cc0 <__assert_fail@plt+0x1377c>
   24cb4:	ldr	r1, [fp, #-16]
   24cb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24cbc:	bl	177ec <__assert_fail@plt+0x62a8>
   24cc0:	ldr	r3, [fp, #-16]
   24cc4:	add	r3, r3, #1
   24cc8:	str	r3, [fp, #-16]
   24ccc:	ldr	r3, [fp, #-16]
   24cd0:	cmp	r3, #255	; 0xff
   24cd4:	ble	24c8c <__assert_fail@plt+0x13748>
   24cd8:	b	254c4 <__assert_fail@plt+0x13f80>
   24cdc:	ldr	r1, [pc, #2040]	; 254dc <__assert_fail@plt+0x13f98>
   24ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ce4:	bl	111d8 <strcmp@plt>
   24ce8:	mov	r3, r0
   24cec:	cmp	r3, #0
   24cf0:	bne	24dd8 <__assert_fail@plt+0x13894>
   24cf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24cf8:	cmp	r3, #0
   24cfc:	movne	r3, #1
   24d00:	moveq	r3, #0
   24d04:	uxtb	r3, r3
   24d08:	cmp	r3, #0
   24d0c:	beq	24d7c <__assert_fail@plt+0x13838>
   24d10:	mov	r3, #0
   24d14:	str	r3, [fp, #-16]
   24d18:	b	24d6c <__assert_fail@plt+0x13828>
   24d1c:	bl	113d0 <__ctype_b_loc@plt>
   24d20:	mov	r3, r0
   24d24:	ldr	r2, [r3]
   24d28:	ldr	r3, [fp, #-16]
   24d2c:	lsl	r3, r3, #1
   24d30:	add	r3, r2, r3
   24d34:	ldrh	r3, [r3]
   24d38:	and	r3, r3, #1024	; 0x400
   24d3c:	cmp	r3, #0
   24d40:	beq	24d60 <__assert_fail@plt+0x1381c>
   24d44:	ldr	r3, [fp, #-16]
   24d48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24d4c:	add	r3, r2, r3
   24d50:	ldrb	r3, [r3]
   24d54:	mov	r1, r3
   24d58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24d5c:	bl	177ec <__assert_fail@plt+0x62a8>
   24d60:	ldr	r3, [fp, #-16]
   24d64:	add	r3, r3, #1
   24d68:	str	r3, [fp, #-16]
   24d6c:	ldr	r3, [fp, #-16]
   24d70:	cmp	r3, #255	; 0xff
   24d74:	ble	24d1c <__assert_fail@plt+0x137d8>
   24d78:	b	254c4 <__assert_fail@plt+0x13f80>
   24d7c:	mov	r3, #0
   24d80:	str	r3, [fp, #-16]
   24d84:	b	24dc8 <__assert_fail@plt+0x13884>
   24d88:	bl	113d0 <__ctype_b_loc@plt>
   24d8c:	mov	r3, r0
   24d90:	ldr	r2, [r3]
   24d94:	ldr	r3, [fp, #-16]
   24d98:	lsl	r3, r3, #1
   24d9c:	add	r3, r2, r3
   24da0:	ldrh	r3, [r3]
   24da4:	and	r3, r3, #1024	; 0x400
   24da8:	cmp	r3, #0
   24dac:	beq	24dbc <__assert_fail@plt+0x13878>
   24db0:	ldr	r1, [fp, #-16]
   24db4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24db8:	bl	177ec <__assert_fail@plt+0x62a8>
   24dbc:	ldr	r3, [fp, #-16]
   24dc0:	add	r3, r3, #1
   24dc4:	str	r3, [fp, #-16]
   24dc8:	ldr	r3, [fp, #-16]
   24dcc:	cmp	r3, #255	; 0xff
   24dd0:	ble	24d88 <__assert_fail@plt+0x13844>
   24dd4:	b	254c4 <__assert_fail@plt+0x13f80>
   24dd8:	ldr	r1, [pc, #1804]	; 254ec <__assert_fail@plt+0x13fa8>
   24ddc:	ldr	r0, [fp, #-20]	; 0xffffffec
   24de0:	bl	111d8 <strcmp@plt>
   24de4:	mov	r3, r0
   24de8:	cmp	r3, #0
   24dec:	bne	24ed4 <__assert_fail@plt+0x13990>
   24df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24df4:	cmp	r3, #0
   24df8:	movne	r3, #1
   24dfc:	moveq	r3, #0
   24e00:	uxtb	r3, r3
   24e04:	cmp	r3, #0
   24e08:	beq	24e78 <__assert_fail@plt+0x13934>
   24e0c:	mov	r3, #0
   24e10:	str	r3, [fp, #-16]
   24e14:	b	24e68 <__assert_fail@plt+0x13924>
   24e18:	bl	113d0 <__ctype_b_loc@plt>
   24e1c:	mov	r3, r0
   24e20:	ldr	r2, [r3]
   24e24:	ldr	r3, [fp, #-16]
   24e28:	lsl	r3, r3, #1
   24e2c:	add	r3, r2, r3
   24e30:	ldrh	r3, [r3]
   24e34:	and	r3, r3, #2048	; 0x800
   24e38:	cmp	r3, #0
   24e3c:	beq	24e5c <__assert_fail@plt+0x13918>
   24e40:	ldr	r3, [fp, #-16]
   24e44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24e48:	add	r3, r2, r3
   24e4c:	ldrb	r3, [r3]
   24e50:	mov	r1, r3
   24e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24e58:	bl	177ec <__assert_fail@plt+0x62a8>
   24e5c:	ldr	r3, [fp, #-16]
   24e60:	add	r3, r3, #1
   24e64:	str	r3, [fp, #-16]
   24e68:	ldr	r3, [fp, #-16]
   24e6c:	cmp	r3, #255	; 0xff
   24e70:	ble	24e18 <__assert_fail@plt+0x138d4>
   24e74:	b	254c4 <__assert_fail@plt+0x13f80>
   24e78:	mov	r3, #0
   24e7c:	str	r3, [fp, #-16]
   24e80:	b	24ec4 <__assert_fail@plt+0x13980>
   24e84:	bl	113d0 <__ctype_b_loc@plt>
   24e88:	mov	r3, r0
   24e8c:	ldr	r2, [r3]
   24e90:	ldr	r3, [fp, #-16]
   24e94:	lsl	r3, r3, #1
   24e98:	add	r3, r2, r3
   24e9c:	ldrh	r3, [r3]
   24ea0:	and	r3, r3, #2048	; 0x800
   24ea4:	cmp	r3, #0
   24ea8:	beq	24eb8 <__assert_fail@plt+0x13974>
   24eac:	ldr	r1, [fp, #-16]
   24eb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24eb4:	bl	177ec <__assert_fail@plt+0x62a8>
   24eb8:	ldr	r3, [fp, #-16]
   24ebc:	add	r3, r3, #1
   24ec0:	str	r3, [fp, #-16]
   24ec4:	ldr	r3, [fp, #-16]
   24ec8:	cmp	r3, #255	; 0xff
   24ecc:	ble	24e84 <__assert_fail@plt+0x13940>
   24ed0:	b	254c4 <__assert_fail@plt+0x13f80>
   24ed4:	ldr	r1, [pc, #1556]	; 254f0 <__assert_fail@plt+0x13fac>
   24ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   24edc:	bl	111d8 <strcmp@plt>
   24ee0:	mov	r3, r0
   24ee4:	cmp	r3, #0
   24ee8:	bne	24fd0 <__assert_fail@plt+0x13a8c>
   24eec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24ef0:	cmp	r3, #0
   24ef4:	movne	r3, #1
   24ef8:	moveq	r3, #0
   24efc:	uxtb	r3, r3
   24f00:	cmp	r3, #0
   24f04:	beq	24f74 <__assert_fail@plt+0x13a30>
   24f08:	mov	r3, #0
   24f0c:	str	r3, [fp, #-16]
   24f10:	b	24f64 <__assert_fail@plt+0x13a20>
   24f14:	bl	113d0 <__ctype_b_loc@plt>
   24f18:	mov	r3, r0
   24f1c:	ldr	r2, [r3]
   24f20:	ldr	r3, [fp, #-16]
   24f24:	lsl	r3, r3, #1
   24f28:	add	r3, r2, r3
   24f2c:	ldrh	r3, [r3]
   24f30:	and	r3, r3, #16384	; 0x4000
   24f34:	cmp	r3, #0
   24f38:	beq	24f58 <__assert_fail@plt+0x13a14>
   24f3c:	ldr	r3, [fp, #-16]
   24f40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24f44:	add	r3, r2, r3
   24f48:	ldrb	r3, [r3]
   24f4c:	mov	r1, r3
   24f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24f54:	bl	177ec <__assert_fail@plt+0x62a8>
   24f58:	ldr	r3, [fp, #-16]
   24f5c:	add	r3, r3, #1
   24f60:	str	r3, [fp, #-16]
   24f64:	ldr	r3, [fp, #-16]
   24f68:	cmp	r3, #255	; 0xff
   24f6c:	ble	24f14 <__assert_fail@plt+0x139d0>
   24f70:	b	254c4 <__assert_fail@plt+0x13f80>
   24f74:	mov	r3, #0
   24f78:	str	r3, [fp, #-16]
   24f7c:	b	24fc0 <__assert_fail@plt+0x13a7c>
   24f80:	bl	113d0 <__ctype_b_loc@plt>
   24f84:	mov	r3, r0
   24f88:	ldr	r2, [r3]
   24f8c:	ldr	r3, [fp, #-16]
   24f90:	lsl	r3, r3, #1
   24f94:	add	r3, r2, r3
   24f98:	ldrh	r3, [r3]
   24f9c:	and	r3, r3, #16384	; 0x4000
   24fa0:	cmp	r3, #0
   24fa4:	beq	24fb4 <__assert_fail@plt+0x13a70>
   24fa8:	ldr	r1, [fp, #-16]
   24fac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24fb0:	bl	177ec <__assert_fail@plt+0x62a8>
   24fb4:	ldr	r3, [fp, #-16]
   24fb8:	add	r3, r3, #1
   24fbc:	str	r3, [fp, #-16]
   24fc0:	ldr	r3, [fp, #-16]
   24fc4:	cmp	r3, #255	; 0xff
   24fc8:	ble	24f80 <__assert_fail@plt+0x13a3c>
   24fcc:	b	254c4 <__assert_fail@plt+0x13f80>
   24fd0:	ldr	r1, [pc, #1276]	; 254d4 <__assert_fail@plt+0x13f90>
   24fd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   24fd8:	bl	111d8 <strcmp@plt>
   24fdc:	mov	r3, r0
   24fe0:	cmp	r3, #0
   24fe4:	bne	250cc <__assert_fail@plt+0x13b88>
   24fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24fec:	cmp	r3, #0
   24ff0:	movne	r3, #1
   24ff4:	moveq	r3, #0
   24ff8:	uxtb	r3, r3
   24ffc:	cmp	r3, #0
   25000:	beq	25070 <__assert_fail@plt+0x13b2c>
   25004:	mov	r3, #0
   25008:	str	r3, [fp, #-16]
   2500c:	b	25060 <__assert_fail@plt+0x13b1c>
   25010:	bl	113d0 <__ctype_b_loc@plt>
   25014:	mov	r3, r0
   25018:	ldr	r2, [r3]
   2501c:	ldr	r3, [fp, #-16]
   25020:	lsl	r3, r3, #1
   25024:	add	r3, r2, r3
   25028:	ldrh	r3, [r3]
   2502c:	and	r3, r3, #256	; 0x100
   25030:	cmp	r3, #0
   25034:	beq	25054 <__assert_fail@plt+0x13b10>
   25038:	ldr	r3, [fp, #-16]
   2503c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25040:	add	r3, r2, r3
   25044:	ldrb	r3, [r3]
   25048:	mov	r1, r3
   2504c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25050:	bl	177ec <__assert_fail@plt+0x62a8>
   25054:	ldr	r3, [fp, #-16]
   25058:	add	r3, r3, #1
   2505c:	str	r3, [fp, #-16]
   25060:	ldr	r3, [fp, #-16]
   25064:	cmp	r3, #255	; 0xff
   25068:	ble	25010 <__assert_fail@plt+0x13acc>
   2506c:	b	254c4 <__assert_fail@plt+0x13f80>
   25070:	mov	r3, #0
   25074:	str	r3, [fp, #-16]
   25078:	b	250bc <__assert_fail@plt+0x13b78>
   2507c:	bl	113d0 <__ctype_b_loc@plt>
   25080:	mov	r3, r0
   25084:	ldr	r2, [r3]
   25088:	ldr	r3, [fp, #-16]
   2508c:	lsl	r3, r3, #1
   25090:	add	r3, r2, r3
   25094:	ldrh	r3, [r3]
   25098:	and	r3, r3, #256	; 0x100
   2509c:	cmp	r3, #0
   250a0:	beq	250b0 <__assert_fail@plt+0x13b6c>
   250a4:	ldr	r1, [fp, #-16]
   250a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   250ac:	bl	177ec <__assert_fail@plt+0x62a8>
   250b0:	ldr	r3, [fp, #-16]
   250b4:	add	r3, r3, #1
   250b8:	str	r3, [fp, #-16]
   250bc:	ldr	r3, [fp, #-16]
   250c0:	cmp	r3, #255	; 0xff
   250c4:	ble	2507c <__assert_fail@plt+0x13b38>
   250c8:	b	254c4 <__assert_fail@plt+0x13f80>
   250cc:	ldr	r1, [pc, #1056]	; 254f4 <__assert_fail@plt+0x13fb0>
   250d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   250d4:	bl	111d8 <strcmp@plt>
   250d8:	mov	r3, r0
   250dc:	cmp	r3, #0
   250e0:	bne	251c8 <__assert_fail@plt+0x13c84>
   250e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   250e8:	cmp	r3, #0
   250ec:	movne	r3, #1
   250f0:	moveq	r3, #0
   250f4:	uxtb	r3, r3
   250f8:	cmp	r3, #0
   250fc:	beq	2516c <__assert_fail@plt+0x13c28>
   25100:	mov	r3, #0
   25104:	str	r3, [fp, #-16]
   25108:	b	2515c <__assert_fail@plt+0x13c18>
   2510c:	bl	113d0 <__ctype_b_loc@plt>
   25110:	mov	r3, r0
   25114:	ldr	r2, [r3]
   25118:	ldr	r3, [fp, #-16]
   2511c:	lsl	r3, r3, #1
   25120:	add	r3, r2, r3
   25124:	ldrh	r3, [r3]
   25128:	and	r3, r3, #1
   2512c:	cmp	r3, #0
   25130:	beq	25150 <__assert_fail@plt+0x13c0c>
   25134:	ldr	r3, [fp, #-16]
   25138:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2513c:	add	r3, r2, r3
   25140:	ldrb	r3, [r3]
   25144:	mov	r1, r3
   25148:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2514c:	bl	177ec <__assert_fail@plt+0x62a8>
   25150:	ldr	r3, [fp, #-16]
   25154:	add	r3, r3, #1
   25158:	str	r3, [fp, #-16]
   2515c:	ldr	r3, [fp, #-16]
   25160:	cmp	r3, #255	; 0xff
   25164:	ble	2510c <__assert_fail@plt+0x13bc8>
   25168:	b	254c4 <__assert_fail@plt+0x13f80>
   2516c:	mov	r3, #0
   25170:	str	r3, [fp, #-16]
   25174:	b	251b8 <__assert_fail@plt+0x13c74>
   25178:	bl	113d0 <__ctype_b_loc@plt>
   2517c:	mov	r3, r0
   25180:	ldr	r2, [r3]
   25184:	ldr	r3, [fp, #-16]
   25188:	lsl	r3, r3, #1
   2518c:	add	r3, r2, r3
   25190:	ldrh	r3, [r3]
   25194:	and	r3, r3, #1
   25198:	cmp	r3, #0
   2519c:	beq	251ac <__assert_fail@plt+0x13c68>
   251a0:	ldr	r1, [fp, #-16]
   251a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   251a8:	bl	177ec <__assert_fail@plt+0x62a8>
   251ac:	ldr	r3, [fp, #-16]
   251b0:	add	r3, r3, #1
   251b4:	str	r3, [fp, #-16]
   251b8:	ldr	r3, [fp, #-16]
   251bc:	cmp	r3, #255	; 0xff
   251c0:	ble	25178 <__assert_fail@plt+0x13c34>
   251c4:	b	254c4 <__assert_fail@plt+0x13f80>
   251c8:	ldr	r1, [pc, #808]	; 254f8 <__assert_fail@plt+0x13fb4>
   251cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   251d0:	bl	111d8 <strcmp@plt>
   251d4:	mov	r3, r0
   251d8:	cmp	r3, #0
   251dc:	bne	252c4 <__assert_fail@plt+0x13d80>
   251e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   251e4:	cmp	r3, #0
   251e8:	movne	r3, #1
   251ec:	moveq	r3, #0
   251f0:	uxtb	r3, r3
   251f4:	cmp	r3, #0
   251f8:	beq	25268 <__assert_fail@plt+0x13d24>
   251fc:	mov	r3, #0
   25200:	str	r3, [fp, #-16]
   25204:	b	25258 <__assert_fail@plt+0x13d14>
   25208:	bl	113d0 <__ctype_b_loc@plt>
   2520c:	mov	r3, r0
   25210:	ldr	r2, [r3]
   25214:	ldr	r3, [fp, #-16]
   25218:	lsl	r3, r3, #1
   2521c:	add	r3, r2, r3
   25220:	ldrh	r3, [r3]
   25224:	sxth	r3, r3
   25228:	cmp	r3, #0
   2522c:	bge	2524c <__assert_fail@plt+0x13d08>
   25230:	ldr	r3, [fp, #-16]
   25234:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25238:	add	r3, r2, r3
   2523c:	ldrb	r3, [r3]
   25240:	mov	r1, r3
   25244:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25248:	bl	177ec <__assert_fail@plt+0x62a8>
   2524c:	ldr	r3, [fp, #-16]
   25250:	add	r3, r3, #1
   25254:	str	r3, [fp, #-16]
   25258:	ldr	r3, [fp, #-16]
   2525c:	cmp	r3, #255	; 0xff
   25260:	ble	25208 <__assert_fail@plt+0x13cc4>
   25264:	b	254c4 <__assert_fail@plt+0x13f80>
   25268:	mov	r3, #0
   2526c:	str	r3, [fp, #-16]
   25270:	b	252b4 <__assert_fail@plt+0x13d70>
   25274:	bl	113d0 <__ctype_b_loc@plt>
   25278:	mov	r3, r0
   2527c:	ldr	r2, [r3]
   25280:	ldr	r3, [fp, #-16]
   25284:	lsl	r3, r3, #1
   25288:	add	r3, r2, r3
   2528c:	ldrh	r3, [r3]
   25290:	sxth	r3, r3
   25294:	cmp	r3, #0
   25298:	bge	252a8 <__assert_fail@plt+0x13d64>
   2529c:	ldr	r1, [fp, #-16]
   252a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   252a4:	bl	177ec <__assert_fail@plt+0x62a8>
   252a8:	ldr	r3, [fp, #-16]
   252ac:	add	r3, r3, #1
   252b0:	str	r3, [fp, #-16]
   252b4:	ldr	r3, [fp, #-16]
   252b8:	cmp	r3, #255	; 0xff
   252bc:	ble	25274 <__assert_fail@plt+0x13d30>
   252c0:	b	254c4 <__assert_fail@plt+0x13f80>
   252c4:	ldr	r1, [pc, #560]	; 254fc <__assert_fail@plt+0x13fb8>
   252c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   252cc:	bl	111d8 <strcmp@plt>
   252d0:	mov	r3, r0
   252d4:	cmp	r3, #0
   252d8:	bne	253c0 <__assert_fail@plt+0x13e7c>
   252dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   252e0:	cmp	r3, #0
   252e4:	movne	r3, #1
   252e8:	moveq	r3, #0
   252ec:	uxtb	r3, r3
   252f0:	cmp	r3, #0
   252f4:	beq	25364 <__assert_fail@plt+0x13e20>
   252f8:	mov	r3, #0
   252fc:	str	r3, [fp, #-16]
   25300:	b	25354 <__assert_fail@plt+0x13e10>
   25304:	bl	113d0 <__ctype_b_loc@plt>
   25308:	mov	r3, r0
   2530c:	ldr	r2, [r3]
   25310:	ldr	r3, [fp, #-16]
   25314:	lsl	r3, r3, #1
   25318:	add	r3, r2, r3
   2531c:	ldrh	r3, [r3]
   25320:	and	r3, r3, #4
   25324:	cmp	r3, #0
   25328:	beq	25348 <__assert_fail@plt+0x13e04>
   2532c:	ldr	r3, [fp, #-16]
   25330:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25334:	add	r3, r2, r3
   25338:	ldrb	r3, [r3]
   2533c:	mov	r1, r3
   25340:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25344:	bl	177ec <__assert_fail@plt+0x62a8>
   25348:	ldr	r3, [fp, #-16]
   2534c:	add	r3, r3, #1
   25350:	str	r3, [fp, #-16]
   25354:	ldr	r3, [fp, #-16]
   25358:	cmp	r3, #255	; 0xff
   2535c:	ble	25304 <__assert_fail@plt+0x13dc0>
   25360:	b	254c4 <__assert_fail@plt+0x13f80>
   25364:	mov	r3, #0
   25368:	str	r3, [fp, #-16]
   2536c:	b	253b0 <__assert_fail@plt+0x13e6c>
   25370:	bl	113d0 <__ctype_b_loc@plt>
   25374:	mov	r3, r0
   25378:	ldr	r2, [r3]
   2537c:	ldr	r3, [fp, #-16]
   25380:	lsl	r3, r3, #1
   25384:	add	r3, r2, r3
   25388:	ldrh	r3, [r3]
   2538c:	and	r3, r3, #4
   25390:	cmp	r3, #0
   25394:	beq	253a4 <__assert_fail@plt+0x13e60>
   25398:	ldr	r1, [fp, #-16]
   2539c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   253a0:	bl	177ec <__assert_fail@plt+0x62a8>
   253a4:	ldr	r3, [fp, #-16]
   253a8:	add	r3, r3, #1
   253ac:	str	r3, [fp, #-16]
   253b0:	ldr	r3, [fp, #-16]
   253b4:	cmp	r3, #255	; 0xff
   253b8:	ble	25370 <__assert_fail@plt+0x13e2c>
   253bc:	b	254c4 <__assert_fail@plt+0x13f80>
   253c0:	ldr	r1, [pc, #312]	; 25500 <__assert_fail@plt+0x13fbc>
   253c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   253c8:	bl	111d8 <strcmp@plt>
   253cc:	mov	r3, r0
   253d0:	cmp	r3, #0
   253d4:	bne	254bc <__assert_fail@plt+0x13f78>
   253d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253dc:	cmp	r3, #0
   253e0:	movne	r3, #1
   253e4:	moveq	r3, #0
   253e8:	uxtb	r3, r3
   253ec:	cmp	r3, #0
   253f0:	beq	25460 <__assert_fail@plt+0x13f1c>
   253f4:	mov	r3, #0
   253f8:	str	r3, [fp, #-16]
   253fc:	b	25450 <__assert_fail@plt+0x13f0c>
   25400:	bl	113d0 <__ctype_b_loc@plt>
   25404:	mov	r3, r0
   25408:	ldr	r2, [r3]
   2540c:	ldr	r3, [fp, #-16]
   25410:	lsl	r3, r3, #1
   25414:	add	r3, r2, r3
   25418:	ldrh	r3, [r3]
   2541c:	and	r3, r3, #4096	; 0x1000
   25420:	cmp	r3, #0
   25424:	beq	25444 <__assert_fail@plt+0x13f00>
   25428:	ldr	r3, [fp, #-16]
   2542c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25430:	add	r3, r2, r3
   25434:	ldrb	r3, [r3]
   25438:	mov	r1, r3
   2543c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25440:	bl	177ec <__assert_fail@plt+0x62a8>
   25444:	ldr	r3, [fp, #-16]
   25448:	add	r3, r3, #1
   2544c:	str	r3, [fp, #-16]
   25450:	ldr	r3, [fp, #-16]
   25454:	cmp	r3, #255	; 0xff
   25458:	ble	25400 <__assert_fail@plt+0x13ebc>
   2545c:	b	254c4 <__assert_fail@plt+0x13f80>
   25460:	mov	r3, #0
   25464:	str	r3, [fp, #-16]
   25468:	b	254ac <__assert_fail@plt+0x13f68>
   2546c:	bl	113d0 <__ctype_b_loc@plt>
   25470:	mov	r3, r0
   25474:	ldr	r2, [r3]
   25478:	ldr	r3, [fp, #-16]
   2547c:	lsl	r3, r3, #1
   25480:	add	r3, r2, r3
   25484:	ldrh	r3, [r3]
   25488:	and	r3, r3, #4096	; 0x1000
   2548c:	cmp	r3, #0
   25490:	beq	254a0 <__assert_fail@plt+0x13f5c>
   25494:	ldr	r1, [fp, #-16]
   25498:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2549c:	bl	177ec <__assert_fail@plt+0x62a8>
   254a0:	ldr	r3, [fp, #-16]
   254a4:	add	r3, r3, #1
   254a8:	str	r3, [fp, #-16]
   254ac:	ldr	r3, [fp, #-16]
   254b0:	cmp	r3, #255	; 0xff
   254b4:	ble	2546c <__assert_fail@plt+0x13f28>
   254b8:	b	254c4 <__assert_fail@plt+0x13f80>
   254bc:	mov	r3, #4
   254c0:	b	254c8 <__assert_fail@plt+0x13f84>
   254c4:	mov	r3, #0
   254c8:	mov	r0, r3
   254cc:	sub	sp, fp, #8
   254d0:	pop	{r4, fp, pc}
   254d4:	andeq	r5, r3, ip, ror lr
   254d8:	andeq	r5, r3, r4, lsl #29
   254dc:	andeq	r5, r3, ip, lsl #29
   254e0:	andeq	r5, r3, r8, ror #28
   254e4:	muleq	r3, r4, lr
   254e8:	andeq	r5, r3, r4, ror lr
   254ec:	muleq	r3, ip, lr
   254f0:	andeq	r5, r3, r4, lsr #29
   254f4:	andeq	r5, r3, ip, lsr #29
   254f8:			; <UNDEFINED> instruction: 0x00035eb4
   254fc:			; <UNDEFINED> instruction: 0x00035ebc
   25500:	andeq	r5, r3, r4, asr #29
   25504:	push	{fp, lr}
   25508:	add	fp, sp, #4
   2550c:	sub	sp, sp, #56	; 0x38
   25510:	str	r0, [fp, #-40]	; 0xffffffd8
   25514:	str	r1, [fp, #-44]	; 0xffffffd4
   25518:	str	r2, [fp, #-48]	; 0xffffffd0
   2551c:	str	r3, [fp, #-52]	; 0xffffffcc
   25520:	mov	r3, #0
   25524:	str	r3, [fp, #-28]	; 0xffffffe4
   25528:	mov	r1, #1
   2552c:	mov	r0, #32
   25530:	bl	33180 <__assert_fail@plt+0x21c3c>
   25534:	mov	r3, r0
   25538:	str	r3, [fp, #-8]
   2553c:	ldr	r3, [fp, #-8]
   25540:	cmp	r3, #0
   25544:	moveq	r3, #1
   25548:	movne	r3, #0
   2554c:	uxtb	r3, r3
   25550:	cmp	r3, #0
   25554:	beq	2556c <__assert_fail@plt+0x14028>
   25558:	ldr	r3, [fp, #8]
   2555c:	mov	r2, #12
   25560:	str	r2, [r3]
   25564:	mov	r3, #0
   25568:	b	257d8 <__assert_fail@plt+0x14294>
   2556c:	mov	r1, #1
   25570:	mov	r0, #40	; 0x28
   25574:	bl	33180 <__assert_fail@plt+0x21c3c>
   25578:	mov	r3, r0
   2557c:	str	r3, [fp, #-12]
   25580:	ldr	r3, [fp, #-12]
   25584:	cmp	r3, #0
   25588:	moveq	r3, #1
   2558c:	movne	r3, #0
   25590:	uxtb	r3, r3
   25594:	cmp	r3, #0
   25598:	beq	255b8 <__assert_fail@plt+0x14074>
   2559c:	ldr	r0, [fp, #-8]
   255a0:	bl	14dec <__assert_fail@plt+0x38a8>
   255a4:	ldr	r3, [fp, #8]
   255a8:	mov	r2, #12
   255ac:	str	r2, [r3]
   255b0:	mov	r3, #0
   255b4:	b	257d8 <__assert_fail@plt+0x14294>
   255b8:	ldr	r2, [fp, #-12]
   255bc:	ldrb	r3, [r2, #16]
   255c0:	ldrb	r1, [fp, #4]
   255c4:	and	r1, r1, #1
   255c8:	bic	r3, r3, #1
   255cc:	orr	r3, r1, r3
   255d0:	strb	r3, [r2, #16]
   255d4:	sub	r2, fp, #28
   255d8:	mov	r3, #0
   255dc:	str	r3, [sp, #4]
   255e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   255e4:	str	r3, [sp]
   255e8:	mov	r3, r2
   255ec:	ldr	r2, [fp, #-12]
   255f0:	ldr	r1, [fp, #-8]
   255f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   255f8:	bl	247b4 <__assert_fail@plt+0x13270>
   255fc:	str	r0, [fp, #-16]
   25600:	ldr	r3, [fp, #-16]
   25604:	cmp	r3, #0
   25608:	movne	r3, #1
   2560c:	moveq	r3, #0
   25610:	uxtb	r3, r3
   25614:	cmp	r3, #0
   25618:	beq	25660 <__assert_fail@plt+0x1411c>
   2561c:	ldr	r0, [fp, #-8]
   25620:	bl	14dec <__assert_fail@plt+0x38a8>
   25624:	ldr	r0, [fp, #-12]
   25628:	bl	25900 <__assert_fail@plt+0x143bc>
   2562c:	ldr	r3, [fp, #8]
   25630:	ldr	r2, [fp, #-16]
   25634:	str	r2, [r3]
   25638:	mov	r3, #0
   2563c:	b	257d8 <__assert_fail@plt+0x14294>
   25640:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25644:	ldrb	r3, [r3]
   25648:	mov	r1, r3
   2564c:	ldr	r0, [fp, #-8]
   25650:	bl	177ec <__assert_fail@plt+0x62a8>
   25654:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25658:	add	r3, r3, #1
   2565c:	str	r3, [fp, #-52]	; 0xffffffcc
   25660:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25664:	ldrb	r3, [r3]
   25668:	cmp	r3, #0
   2566c:	bne	25640 <__assert_fail@plt+0x140fc>
   25670:	ldrb	r3, [fp, #4]
   25674:	cmp	r3, #0
   25678:	beq	25684 <__assert_fail@plt+0x14140>
   2567c:	ldr	r0, [fp, #-8]
   25680:	bl	17a14 <__assert_fail@plt+0x64d0>
   25684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25688:	ldr	r3, [r3, #92]	; 0x5c
   2568c:	cmp	r3, #1
   25690:	ble	256a8 <__assert_fail@plt+0x14164>
   25694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25698:	ldr	r3, [r3, #60]	; 0x3c
   2569c:	mov	r1, r3
   256a0:	ldr	r0, [fp, #-8]
   256a4:	bl	17b0c <__assert_fail@plt+0x65c8>
   256a8:	sub	r3, fp, #36	; 0x24
   256ac:	mov	r2, #0
   256b0:	str	r2, [r3]
   256b4:	str	r2, [r3, #4]
   256b8:	ldr	r3, [fp, #-8]
   256bc:	str	r3, [fp, #-36]	; 0xffffffdc
   256c0:	mov	r3, #3
   256c4:	strb	r3, [fp, #-32]	; 0xffffffe0
   256c8:	sub	r3, fp, #36	; 0x24
   256cc:	mov	r2, #0
   256d0:	mov	r1, #0
   256d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   256d8:	bl	259c0 <__assert_fail@plt+0x1447c>
   256dc:	str	r0, [fp, #-20]	; 0xffffffec
   256e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   256e4:	cmp	r3, #0
   256e8:	moveq	r3, #1
   256ec:	movne	r3, #0
   256f0:	uxtb	r3, r3
   256f4:	cmp	r3, #0
   256f8:	bne	257ac <__assert_fail@plt+0x14268>
   256fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   25700:	ldr	r3, [r3, #92]	; 0x5c
   25704:	cmp	r3, #1
   25708:	ble	2579c <__assert_fail@plt+0x14258>
   2570c:	mov	r3, #6
   25710:	strb	r3, [fp, #-32]	; 0xffffffe0
   25714:	ldr	r3, [fp, #-12]
   25718:	str	r3, [fp, #-36]	; 0xffffffdc
   2571c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25720:	ldrb	r3, [r2, #88]	; 0x58
   25724:	orr	r3, r3, #2
   25728:	strb	r3, [r2, #88]	; 0x58
   2572c:	sub	r3, fp, #36	; 0x24
   25730:	mov	r2, #0
   25734:	mov	r1, #0
   25738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2573c:	bl	259c0 <__assert_fail@plt+0x1447c>
   25740:	str	r0, [fp, #-24]	; 0xffffffe8
   25744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25748:	cmp	r3, #0
   2574c:	moveq	r3, #1
   25750:	movne	r3, #0
   25754:	uxtb	r3, r3
   25758:	cmp	r3, #0
   2575c:	bne	257b4 <__assert_fail@plt+0x14270>
   25760:	mov	r3, #10
   25764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25768:	ldr	r1, [fp, #-20]	; 0xffffffec
   2576c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25770:	bl	25964 <__assert_fail@plt+0x14420>
   25774:	str	r0, [fp, #-20]	; 0xffffffec
   25778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2577c:	cmp	r3, #0
   25780:	movne	r3, #1
   25784:	moveq	r3, #0
   25788:	uxtb	r3, r3
   2578c:	cmp	r3, #0
   25790:	beq	257b8 <__assert_fail@plt+0x14274>
   25794:	ldr	r3, [fp, #-20]	; 0xffffffec
   25798:	b	257d8 <__assert_fail@plt+0x14294>
   2579c:	ldr	r0, [fp, #-12]
   257a0:	bl	25900 <__assert_fail@plt+0x143bc>
   257a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   257a8:	b	257d8 <__assert_fail@plt+0x14294>
   257ac:	nop			; (mov r0, r0)
   257b0:	b	257b8 <__assert_fail@plt+0x14274>
   257b4:	nop			; (mov r0, r0)
   257b8:	ldr	r0, [fp, #-8]
   257bc:	bl	14dec <__assert_fail@plt+0x38a8>
   257c0:	ldr	r0, [fp, #-12]
   257c4:	bl	25900 <__assert_fail@plt+0x143bc>
   257c8:	ldr	r3, [fp, #8]
   257cc:	mov	r2, #12
   257d0:	str	r2, [r3]
   257d4:	mov	r3, #0
   257d8:	mov	r0, r3
   257dc:	sub	sp, fp, #4
   257e0:	pop	{fp, pc}
   257e4:	push	{fp, lr}
   257e8:	add	fp, sp, #4
   257ec:	sub	sp, sp, #24
   257f0:	str	r0, [fp, #-16]
   257f4:	str	r1, [fp, #-20]	; 0xffffffec
   257f8:	str	r2, [fp, #-24]	; 0xffffffe8
   257fc:	mvn	r3, #0
   25800:	str	r3, [fp, #-8]
   25804:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25808:	ldr	r1, [fp, #-16]
   2580c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25810:	bl	20d78 <__assert_fail@plt+0xf834>
   25814:	ldr	r3, [fp, #-20]	; 0xffffffec
   25818:	ldrb	r3, [r3]
   2581c:	strb	r3, [fp, #-9]
   25820:	ldr	r3, [fp, #-20]	; 0xffffffec
   25824:	ldrb	r3, [r3, #4]
   25828:	cmp	r3, #2
   2582c:	moveq	r3, #1
   25830:	movne	r3, #0
   25834:	uxtb	r3, r3
   25838:	cmp	r3, #0
   2583c:	beq	25848 <__assert_fail@plt+0x14304>
   25840:	mvn	r3, #1
   25844:	b	258f4 <__assert_fail@plt+0x143b0>
   25848:	ldr	r3, [fp, #-20]	; 0xffffffec
   2584c:	ldrb	r3, [r3, #4]
   25850:	cmp	r3, #24
   25854:	beq	258f0 <__assert_fail@plt+0x143ac>
   25858:	ldrb	r3, [fp, #-9]
   2585c:	cmp	r3, #44	; 0x2c
   25860:	beq	258f0 <__assert_fail@plt+0x143ac>
   25864:	ldr	r3, [fp, #-20]	; 0xffffffec
   25868:	ldrb	r3, [r3, #4]
   2586c:	cmp	r3, #1
   25870:	bne	258e4 <__assert_fail@plt+0x143a0>
   25874:	ldrb	r3, [fp, #-9]
   25878:	cmp	r3, #47	; 0x2f
   2587c:	bls	258e4 <__assert_fail@plt+0x143a0>
   25880:	ldrb	r3, [fp, #-9]
   25884:	cmp	r3, #57	; 0x39
   25888:	bhi	258e4 <__assert_fail@plt+0x143a0>
   2588c:	ldr	r3, [fp, #-8]
   25890:	cmn	r3, #2
   25894:	beq	258e4 <__assert_fail@plt+0x143a0>
   25898:	ldr	r3, [fp, #-8]
   2589c:	cmn	r3, #1
   258a0:	bne	258b0 <__assert_fail@plt+0x1436c>
   258a4:	ldrb	r3, [fp, #-9]
   258a8:	sub	r3, r3, #48	; 0x30
   258ac:	b	258e8 <__assert_fail@plt+0x143a4>
   258b0:	ldr	r2, [fp, #-8]
   258b4:	mov	r3, r2
   258b8:	lsl	r3, r3, #2
   258bc:	add	r3, r3, r2
   258c0:	lsl	r3, r3, #1
   258c4:	mov	r2, r3
   258c8:	ldrb	r3, [fp, #-9]
   258cc:	add	r3, r2, r3
   258d0:	sub	r3, r3, #48	; 0x30
   258d4:	cmp	r3, #32768	; 0x8000
   258d8:	movlt	r3, r3
   258dc:	movge	r3, #32768	; 0x8000
   258e0:	b	258e8 <__assert_fail@plt+0x143a4>
   258e4:	mvn	r3, #1
   258e8:	str	r3, [fp, #-8]
   258ec:	b	25804 <__assert_fail@plt+0x142c0>
   258f0:	ldr	r3, [fp, #-8]
   258f4:	mov	r0, r3
   258f8:	sub	sp, fp, #4
   258fc:	pop	{fp, pc}
   25900:	push	{fp, lr}
   25904:	add	fp, sp, #4
   25908:	sub	sp, sp, #8
   2590c:	str	r0, [fp, #-8]
   25910:	ldr	r3, [fp, #-8]
   25914:	ldr	r3, [r3]
   25918:	mov	r0, r3
   2591c:	bl	14dec <__assert_fail@plt+0x38a8>
   25920:	ldr	r3, [fp, #-8]
   25924:	ldr	r3, [r3, #4]
   25928:	mov	r0, r3
   2592c:	bl	14dec <__assert_fail@plt+0x38a8>
   25930:	ldr	r3, [fp, #-8]
   25934:	ldr	r3, [r3, #8]
   25938:	mov	r0, r3
   2593c:	bl	14dec <__assert_fail@plt+0x38a8>
   25940:	ldr	r3, [fp, #-8]
   25944:	ldr	r3, [r3, #12]
   25948:	mov	r0, r3
   2594c:	bl	14dec <__assert_fail@plt+0x38a8>
   25950:	ldr	r0, [fp, #-8]
   25954:	bl	14dec <__assert_fail@plt+0x38a8>
   25958:	nop			; (mov r0, r0)
   2595c:	sub	sp, fp, #4
   25960:	pop	{fp, pc}
   25964:	push	{fp, lr}
   25968:	add	fp, sp, #4
   2596c:	sub	sp, sp, #24
   25970:	str	r0, [fp, #-16]
   25974:	str	r1, [fp, #-20]	; 0xffffffec
   25978:	str	r2, [fp, #-24]	; 0xffffffe8
   2597c:	str	r3, [fp, #-28]	; 0xffffffe4
   25980:	sub	r3, fp, #12
   25984:	mov	r2, #0
   25988:	str	r2, [r3]
   2598c:	str	r2, [r3, #4]
   25990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25994:	uxtb	r3, r3
   25998:	strb	r3, [fp, #-8]
   2599c:	sub	r3, fp, #12
   259a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   259a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   259a8:	ldr	r0, [fp, #-16]
   259ac:	bl	259c0 <__assert_fail@plt+0x1447c>
   259b0:	mov	r3, r0
   259b4:	mov	r0, r3
   259b8:	sub	sp, fp, #4
   259bc:	pop	{fp, pc}
   259c0:	push	{fp, lr}
   259c4:	add	fp, sp, #4
   259c8:	sub	sp, sp, #24
   259cc:	str	r0, [fp, #-16]
   259d0:	str	r1, [fp, #-20]	; 0xffffffec
   259d4:	str	r2, [fp, #-24]	; 0xffffffe8
   259d8:	str	r3, [fp, #-28]	; 0xffffffe4
   259dc:	ldr	r3, [fp, #-16]
   259e0:	ldr	r3, [r3, #64]	; 0x40
   259e4:	cmp	r3, #31
   259e8:	moveq	r3, #1
   259ec:	movne	r3, #0
   259f0:	uxtb	r3, r3
   259f4:	cmp	r3, #0
   259f8:	beq	25a48 <__assert_fail@plt+0x14504>
   259fc:	mov	r0, #996	; 0x3e4
   25a00:	bl	33244 <__assert_fail@plt+0x21d00>
   25a04:	mov	r3, r0
   25a08:	str	r3, [fp, #-8]
   25a0c:	ldr	r3, [fp, #-8]
   25a10:	cmp	r3, #0
   25a14:	bne	25a20 <__assert_fail@plt+0x144dc>
   25a18:	mov	r3, #0
   25a1c:	b	25b24 <__assert_fail@plt+0x145e0>
   25a20:	ldr	r3, [fp, #-16]
   25a24:	ldr	r2, [r3, #56]	; 0x38
   25a28:	ldr	r3, [fp, #-8]
   25a2c:	str	r2, [r3]
   25a30:	ldr	r3, [fp, #-16]
   25a34:	ldr	r2, [fp, #-8]
   25a38:	str	r2, [r3, #56]	; 0x38
   25a3c:	ldr	r3, [fp, #-16]
   25a40:	mov	r2, #0
   25a44:	str	r2, [r3, #64]	; 0x40
   25a48:	ldr	r3, [fp, #-16]
   25a4c:	ldr	r2, [r3, #56]	; 0x38
   25a50:	ldr	r3, [fp, #-16]
   25a54:	ldr	r3, [r3, #64]	; 0x40
   25a58:	add	r0, r3, #1
   25a5c:	ldr	r1, [fp, #-16]
   25a60:	str	r0, [r1, #64]	; 0x40
   25a64:	lsl	r3, r3, #5
   25a68:	add	r3, r2, r3
   25a6c:	add	r3, r3, #4
   25a70:	str	r3, [fp, #-12]
   25a74:	ldr	r3, [fp, #-12]
   25a78:	mov	r2, #0
   25a7c:	str	r2, [r3]
   25a80:	ldr	r3, [fp, #-12]
   25a84:	ldr	r2, [fp, #-20]	; 0xffffffec
   25a88:	str	r2, [r3, #4]
   25a8c:	ldr	r3, [fp, #-12]
   25a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25a94:	str	r2, [r3, #8]
   25a98:	ldr	r3, [fp, #-12]
   25a9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   25aa0:	add	r3, r3, #20
   25aa4:	ldm	r2, {r0, r1}
   25aa8:	stm	r3, {r0, r1}
   25aac:	ldr	r2, [fp, #-12]
   25ab0:	ldrb	r3, [r2, #26]
   25ab4:	bic	r3, r3, #4
   25ab8:	strb	r3, [r2, #26]
   25abc:	ldr	r2, [fp, #-12]
   25ac0:	ldrb	r3, [r2, #26]
   25ac4:	bic	r3, r3, #8
   25ac8:	strb	r3, [r2, #26]
   25acc:	ldr	r3, [fp, #-12]
   25ad0:	mov	r2, #0
   25ad4:	str	r2, [r3, #12]
   25ad8:	ldr	r3, [fp, #-12]
   25adc:	mov	r2, #0
   25ae0:	str	r2, [r3, #16]
   25ae4:	ldr	r3, [fp, #-12]
   25ae8:	mvn	r2, #0
   25aec:	str	r2, [r3, #28]
   25af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25af4:	cmp	r3, #0
   25af8:	beq	25b08 <__assert_fail@plt+0x145c4>
   25afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b00:	ldr	r2, [fp, #-12]
   25b04:	str	r2, [r3]
   25b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b0c:	cmp	r3, #0
   25b10:	beq	25b20 <__assert_fail@plt+0x145dc>
   25b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b18:	ldr	r2, [fp, #-12]
   25b1c:	str	r2, [r3]
   25b20:	ldr	r3, [fp, #-12]
   25b24:	mov	r0, r3
   25b28:	sub	sp, fp, #4
   25b2c:	pop	{fp, pc}
   25b30:	push	{fp}		; (str fp, [sp, #-4]!)
   25b34:	add	fp, sp, #0
   25b38:	sub	sp, sp, #20
   25b3c:	str	r0, [fp, #-16]
   25b40:	str	r1, [fp, #-20]	; 0xffffffec
   25b44:	ldr	r3, [fp, #-16]
   25b48:	str	r3, [fp, #-8]
   25b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b50:	ldrb	r3, [r3, #24]
   25b54:	cmp	r3, #17
   25b58:	bne	25b80 <__assert_fail@plt+0x1463c>
   25b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25b60:	ldr	r2, [r3, #20]
   25b64:	ldr	r3, [fp, #-8]
   25b68:	cmp	r2, r3
   25b6c:	bne	25b80 <__assert_fail@plt+0x1463c>
   25b70:	ldr	r2, [fp, #-20]	; 0xffffffec
   25b74:	ldrb	r3, [r2, #26]
   25b78:	orr	r3, r3, #8
   25b7c:	strb	r3, [r2, #26]
   25b80:	mov	r3, #0
   25b84:	mov	r0, r3
   25b88:	add	sp, fp, #0
   25b8c:	pop	{fp}		; (ldr fp, [sp], #4)
   25b90:	bx	lr
   25b94:	push	{fp, lr}
   25b98:	add	fp, sp, #4
   25b9c:	sub	sp, sp, #8
   25ba0:	str	r0, [fp, #-8]
   25ba4:	ldr	r3, [fp, #-8]
   25ba8:	ldrb	r3, [r3, #4]
   25bac:	cmp	r3, #6
   25bb0:	bne	25be0 <__assert_fail@plt+0x1469c>
   25bb4:	ldr	r3, [fp, #-8]
   25bb8:	ldrb	r3, [r3, #6]
   25bbc:	and	r3, r3, #4
   25bc0:	uxtb	r3, r3
   25bc4:	cmp	r3, #0
   25bc8:	bne	25be0 <__assert_fail@plt+0x1469c>
   25bcc:	ldr	r3, [fp, #-8]
   25bd0:	ldr	r3, [r3]
   25bd4:	mov	r0, r3
   25bd8:	bl	25900 <__assert_fail@plt+0x143bc>
   25bdc:	b	25c18 <__assert_fail@plt+0x146d4>
   25be0:	ldr	r3, [fp, #-8]
   25be4:	ldrb	r3, [r3, #4]
   25be8:	cmp	r3, #3
   25bec:	bne	25c18 <__assert_fail@plt+0x146d4>
   25bf0:	ldr	r3, [fp, #-8]
   25bf4:	ldrb	r3, [r3, #6]
   25bf8:	and	r3, r3, #4
   25bfc:	uxtb	r3, r3
   25c00:	cmp	r3, #0
   25c04:	bne	25c18 <__assert_fail@plt+0x146d4>
   25c08:	ldr	r3, [fp, #-8]
   25c0c:	ldr	r3, [r3]
   25c10:	mov	r0, r3
   25c14:	bl	14dec <__assert_fail@plt+0x38a8>
   25c18:	nop			; (mov r0, r0)
   25c1c:	sub	sp, fp, #4
   25c20:	pop	{fp, pc}
   25c24:	push	{fp, lr}
   25c28:	add	fp, sp, #4
   25c2c:	sub	sp, sp, #8
   25c30:	str	r0, [fp, #-8]
   25c34:	str	r1, [fp, #-12]
   25c38:	ldr	r3, [fp, #-12]
   25c3c:	add	r3, r3, #20
   25c40:	mov	r0, r3
   25c44:	bl	25b94 <__assert_fail@plt+0x14650>
   25c48:	mov	r3, #0
   25c4c:	mov	r0, r3
   25c50:	sub	sp, fp, #4
   25c54:	pop	{fp, pc}
   25c58:	push	{fp, lr}
   25c5c:	add	fp, sp, #4
   25c60:	sub	sp, sp, #32
   25c64:	str	r0, [fp, #-32]	; 0xffffffe0
   25c68:	str	r1, [fp, #-36]	; 0xffffffdc
   25c6c:	sub	r3, fp, #24
   25c70:	str	r3, [fp, #-12]
   25c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c78:	ldr	r3, [r3]
   25c7c:	str	r3, [fp, #-16]
   25c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25c84:	str	r3, [fp, #-8]
   25c88:	ldr	r3, [fp, #-8]
   25c8c:	add	r3, r3, #20
   25c90:	mov	r2, #0
   25c94:	mov	r1, #0
   25c98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25c9c:	bl	259c0 <__assert_fail@plt+0x1447c>
   25ca0:	mov	r2, r0
   25ca4:	ldr	r3, [fp, #-12]
   25ca8:	str	r2, [r3]
   25cac:	ldr	r3, [fp, #-12]
   25cb0:	ldr	r3, [r3]
   25cb4:	cmp	r3, #0
   25cb8:	bne	25cc4 <__assert_fail@plt+0x14780>
   25cbc:	mov	r3, #0
   25cc0:	b	25da0 <__assert_fail@plt+0x1485c>
   25cc4:	ldr	r3, [fp, #-12]
   25cc8:	ldr	r3, [r3]
   25ccc:	ldr	r2, [fp, #-16]
   25cd0:	str	r2, [r3]
   25cd4:	ldr	r3, [fp, #-12]
   25cd8:	ldr	r2, [r3]
   25cdc:	ldrb	r3, [r2, #26]
   25ce0:	orr	r3, r3, #4
   25ce4:	strb	r3, [r2, #26]
   25ce8:	ldr	r3, [fp, #-12]
   25cec:	ldr	r3, [r3]
   25cf0:	str	r3, [fp, #-16]
   25cf4:	ldr	r3, [fp, #-8]
   25cf8:	ldr	r3, [r3, #4]
   25cfc:	cmp	r3, #0
   25d00:	beq	25d20 <__assert_fail@plt+0x147dc>
   25d04:	ldr	r3, [fp, #-8]
   25d08:	ldr	r3, [r3, #4]
   25d0c:	str	r3, [fp, #-8]
   25d10:	ldr	r3, [fp, #-16]
   25d14:	add	r3, r3, #4
   25d18:	str	r3, [fp, #-12]
   25d1c:	b	25c88 <__assert_fail@plt+0x14744>
   25d20:	mov	r3, #0
   25d24:	str	r3, [fp, #-20]	; 0xffffffec
   25d28:	b	25d60 <__assert_fail@plt+0x1481c>
   25d2c:	ldr	r3, [fp, #-8]
   25d30:	str	r3, [fp, #-20]	; 0xffffffec
   25d34:	ldr	r3, [fp, #-8]
   25d38:	ldr	r3, [r3]
   25d3c:	str	r3, [fp, #-8]
   25d40:	ldr	r3, [fp, #-16]
   25d44:	ldr	r3, [r3]
   25d48:	str	r3, [fp, #-16]
   25d4c:	ldr	r3, [fp, #-8]
   25d50:	cmp	r3, #0
   25d54:	bne	25d60 <__assert_fail@plt+0x1481c>
   25d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d5c:	b	25da0 <__assert_fail@plt+0x1485c>
   25d60:	ldr	r3, [fp, #-8]
   25d64:	ldr	r2, [r3, #8]
   25d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   25d6c:	cmp	r2, r3
   25d70:	beq	25d2c <__assert_fail@plt+0x147e8>
   25d74:	ldr	r3, [fp, #-8]
   25d78:	ldr	r3, [r3, #8]
   25d7c:	cmp	r3, #0
   25d80:	beq	25d2c <__assert_fail@plt+0x147e8>
   25d84:	ldr	r3, [fp, #-8]
   25d88:	ldr	r3, [r3, #8]
   25d8c:	str	r3, [fp, #-8]
   25d90:	ldr	r3, [fp, #-16]
   25d94:	add	r3, r3, #8
   25d98:	str	r3, [fp, #-12]
   25d9c:	b	25c88 <__assert_fail@plt+0x14744>
   25da0:	mov	r0, r3
   25da4:	sub	sp, fp, #4
   25da8:	pop	{fp, pc}
   25dac:	push	{fp, lr}
   25db0:	add	fp, sp, #4
   25db4:	sub	sp, sp, #56	; 0x38
   25db8:	str	r0, [fp, #-24]	; 0xffffffe8
   25dbc:	str	r1, [fp, #-28]	; 0xffffffe4
   25dc0:	str	r2, [fp, #-32]	; 0xffffffe0
   25dc4:	str	r3, [fp, #-36]	; 0xffffffdc
   25dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25dcc:	ldr	r3, [r3]
   25dd0:	str	r3, [fp, #-20]	; 0xffffffec
   25dd4:	ldr	r3, [fp, #4]
   25dd8:	bic	r3, r3, #7
   25ddc:	cmp	r3, #0
   25de0:	beq	25dec <__assert_fail@plt+0x148a8>
   25de4:	mov	r3, #2
   25de8:	b	25f30 <__assert_fail@plt+0x149ec>
   25dec:	ldr	r3, [fp, #4]
   25df0:	and	r3, r3, #4
   25df4:	cmp	r3, #0
   25df8:	beq	25e18 <__assert_fail@plt+0x148d4>
   25dfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25e00:	ldr	r3, [r3]
   25e04:	str	r3, [fp, #-12]
   25e08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25e0c:	ldr	r3, [r3, #4]
   25e10:	str	r3, [fp, #-16]
   25e14:	b	25e30 <__assert_fail@plt+0x148ec>
   25e18:	mov	r3, #0
   25e1c:	str	r3, [fp, #-12]
   25e20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25e24:	bl	113f4 <strlen@plt>
   25e28:	mov	r3, r0
   25e2c:	str	r3, [fp, #-16]
   25e30:	ldr	r3, [pc, #260]	; 25f3c <__assert_fail@plt+0x149f8>
   25e34:	cmp	r3, #0
   25e38:	bne	25e48 <__assert_fail@plt+0x14904>
   25e3c:	ldr	r3, [pc, #252]	; 25f40 <__assert_fail@plt+0x149fc>
   25e40:	cmp	r3, #0
   25e44:	beq	25e58 <__assert_fail@plt+0x14914>
   25e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e4c:	add	r3, r3, #136	; 0x88
   25e50:	mov	r0, r3
   25e54:	bl	11238 <pthread_mutex_lock@plt>
   25e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e5c:	ldrb	r3, [r3, #28]
   25e60:	and	r3, r3, #16
   25e64:	uxtb	r3, r3
   25e68:	cmp	r3, #0
   25e6c:	beq	25eb4 <__assert_fail@plt+0x14970>
   25e70:	ldr	r3, [fp, #4]
   25e74:	str	r3, [sp, #16]
   25e78:	mov	r3, #0
   25e7c:	str	r3, [sp, #12]
   25e80:	mov	r3, #0
   25e84:	str	r3, [sp, #8]
   25e88:	ldr	r3, [fp, #-16]
   25e8c:	str	r3, [sp, #4]
   25e90:	ldr	r3, [fp, #-16]
   25e94:	str	r3, [sp]
   25e98:	ldr	r3, [fp, #-12]
   25e9c:	ldr	r2, [fp, #-16]
   25ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25ea8:	bl	26b84 <__assert_fail@plt+0x15640>
   25eac:	str	r0, [fp, #-8]
   25eb0:	b	25ef4 <__assert_fail@plt+0x149b0>
   25eb4:	ldr	r3, [fp, #4]
   25eb8:	str	r3, [sp, #16]
   25ebc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25ec0:	str	r3, [sp, #12]
   25ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25ec8:	str	r3, [sp, #8]
   25ecc:	ldr	r3, [fp, #-16]
   25ed0:	str	r3, [sp, #4]
   25ed4:	ldr	r3, [fp, #-16]
   25ed8:	str	r3, [sp]
   25edc:	ldr	r3, [fp, #-12]
   25ee0:	ldr	r2, [fp, #-16]
   25ee4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   25ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25eec:	bl	26b84 <__assert_fail@plt+0x15640>
   25ef0:	str	r0, [fp, #-8]
   25ef4:	ldr	r3, [pc, #64]	; 25f3c <__assert_fail@plt+0x149f8>
   25ef8:	cmp	r3, #0
   25efc:	bne	25f0c <__assert_fail@plt+0x149c8>
   25f00:	ldr	r3, [pc, #56]	; 25f40 <__assert_fail@plt+0x149fc>
   25f04:	cmp	r3, #0
   25f08:	beq	25f1c <__assert_fail@plt+0x149d8>
   25f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f10:	add	r3, r3, #136	; 0x88
   25f14:	mov	r0, r3
   25f18:	bl	11178 <pthread_mutex_unlock@plt>
   25f1c:	ldr	r3, [fp, #-8]
   25f20:	cmp	r3, #0
   25f24:	movne	r3, #1
   25f28:	moveq	r3, #0
   25f2c:	uxtb	r3, r3
   25f30:	mov	r0, r3
   25f34:	sub	sp, fp, #4
   25f38:	pop	{fp, pc}
	...
   25f44:	push	{fp, lr}
   25f48:	add	fp, sp, #4
   25f4c:	sub	sp, sp, #32
   25f50:	str	r0, [fp, #-8]
   25f54:	str	r1, [fp, #-12]
   25f58:	str	r2, [fp, #-16]
   25f5c:	str	r3, [fp, #-20]	; 0xffffffec
   25f60:	mov	r3, #1
   25f64:	str	r3, [sp, #12]
   25f68:	ldr	r3, [fp, #4]
   25f6c:	str	r3, [sp, #8]
   25f70:	ldr	r3, [fp, #-16]
   25f74:	str	r3, [sp, #4]
   25f78:	mov	r3, #0
   25f7c:	str	r3, [sp]
   25f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   25f84:	ldr	r2, [fp, #-16]
   25f88:	ldr	r1, [fp, #-12]
   25f8c:	ldr	r0, [fp, #-8]
   25f90:	bl	26318 <__assert_fail@plt+0x14dd4>
   25f94:	mov	r3, r0
   25f98:	mov	r0, r3
   25f9c:	sub	sp, fp, #4
   25fa0:	pop	{fp, pc}
   25fa4:	push	{fp, lr}
   25fa8:	add	fp, sp, #4
   25fac:	sub	sp, sp, #32
   25fb0:	str	r0, [fp, #-8]
   25fb4:	str	r1, [fp, #-12]
   25fb8:	str	r2, [fp, #-16]
   25fbc:	str	r3, [fp, #-20]	; 0xffffffec
   25fc0:	mov	r3, #0
   25fc4:	str	r3, [sp, #12]
   25fc8:	ldr	r3, [fp, #8]
   25fcc:	str	r3, [sp, #8]
   25fd0:	ldr	r3, [fp, #-16]
   25fd4:	str	r3, [sp, #4]
   25fd8:	ldr	r3, [fp, #4]
   25fdc:	str	r3, [sp]
   25fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   25fe4:	ldr	r2, [fp, #-16]
   25fe8:	ldr	r1, [fp, #-12]
   25fec:	ldr	r0, [fp, #-8]
   25ff0:	bl	26318 <__assert_fail@plt+0x14dd4>
   25ff4:	mov	r3, r0
   25ff8:	mov	r0, r3
   25ffc:	sub	sp, fp, #4
   26000:	pop	{fp, pc}
   26004:	push	{fp, lr}
   26008:	add	fp, sp, #4
   2600c:	sub	sp, sp, #40	; 0x28
   26010:	str	r0, [fp, #-8]
   26014:	str	r1, [fp, #-12]
   26018:	str	r2, [fp, #-16]
   2601c:	str	r3, [fp, #-20]	; 0xffffffec
   26020:	mov	r3, #1
   26024:	str	r3, [sp, #20]
   26028:	ldr	r3, [fp, #16]
   2602c:	str	r3, [sp, #16]
   26030:	ldr	r3, [fp, #12]
   26034:	str	r3, [sp, #12]
   26038:	mov	r3, #0
   2603c:	str	r3, [sp, #8]
   26040:	ldr	r3, [fp, #8]
   26044:	str	r3, [sp, #4]
   26048:	ldr	r3, [fp, #4]
   2604c:	str	r3, [sp]
   26050:	ldr	r3, [fp, #-20]	; 0xffffffec
   26054:	ldr	r2, [fp, #-16]
   26058:	ldr	r1, [fp, #-12]
   2605c:	ldr	r0, [fp, #-8]
   26060:	bl	260e4 <__assert_fail@plt+0x14ba0>
   26064:	mov	r3, r0
   26068:	mov	r0, r3
   2606c:	sub	sp, fp, #4
   26070:	pop	{fp, pc}
   26074:	push	{fp, lr}
   26078:	add	fp, sp, #4
   2607c:	sub	sp, sp, #40	; 0x28
   26080:	str	r0, [fp, #-8]
   26084:	str	r1, [fp, #-12]
   26088:	str	r2, [fp, #-16]
   2608c:	str	r3, [fp, #-20]	; 0xffffffec
   26090:	mov	r3, #0
   26094:	str	r3, [sp, #20]
   26098:	ldr	r3, [fp, #20]
   2609c:	str	r3, [sp, #16]
   260a0:	ldr	r3, [fp, #16]
   260a4:	str	r3, [sp, #12]
   260a8:	ldr	r3, [fp, #12]
   260ac:	str	r3, [sp, #8]
   260b0:	ldr	r3, [fp, #8]
   260b4:	str	r3, [sp, #4]
   260b8:	ldr	r3, [fp, #4]
   260bc:	str	r3, [sp]
   260c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   260c4:	ldr	r2, [fp, #-16]
   260c8:	ldr	r1, [fp, #-12]
   260cc:	ldr	r0, [fp, #-8]
   260d0:	bl	260e4 <__assert_fail@plt+0x14ba0>
   260d4:	mov	r3, r0
   260d8:	mov	r0, r3
   260dc:	sub	sp, fp, #4
   260e0:	pop	{fp, pc}
   260e4:	push	{fp, lr}
   260e8:	add	fp, sp, #4
   260ec:	sub	sp, sp, #48	; 0x30
   260f0:	str	r0, [fp, #-24]	; 0xffffffe8
   260f4:	str	r1, [fp, #-28]	; 0xffffffe4
   260f8:	str	r2, [fp, #-32]	; 0xffffffe0
   260fc:	str	r3, [fp, #-36]	; 0xffffffdc
   26100:	mov	r3, #0
   26104:	str	r3, [fp, #-12]
   26108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2610c:	lsr	r3, r3, #31
   26110:	uxtb	r3, r3
   26114:	cmp	r3, #0
   26118:	bne	26130 <__assert_fail@plt+0x14bec>
   2611c:	ldr	r3, [fp, #4]
   26120:	lsr	r3, r3, #31
   26124:	uxtb	r3, r3
   26128:	cmp	r3, #0
   2612c:	beq	26138 <__assert_fail@plt+0x14bf4>
   26130:	mov	r3, #1
   26134:	b	2613c <__assert_fail@plt+0x14bf8>
   26138:	mov	r3, #0
   2613c:	cmp	r3, #0
   26140:	bne	26158 <__assert_fail@plt+0x14c14>
   26144:	ldr	r3, [fp, #20]
   26148:	lsr	r3, r3, #31
   2614c:	uxtb	r3, r3
   26150:	cmp	r3, #0
   26154:	beq	26160 <__assert_fail@plt+0x14c1c>
   26158:	mov	r3, #1
   2615c:	b	26164 <__assert_fail@plt+0x14c20>
   26160:	mov	r3, #0
   26164:	cmp	r3, #0
   26168:	bne	26220 <__assert_fail@plt+0x14cdc>
   2616c:	ldr	r3, [fp, #4]
   26170:	cmp	r3, #0
   26174:	bge	26198 <__assert_fail@plt+0x14c54>
   26178:	ldr	r3, [fp, #4]
   2617c:	rsb	r2, r3, #-2147483648	; 0x80000000
   26180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26184:	cmp	r2, r3
   26188:	movgt	r3, #1
   2618c:	movle	r3, #0
   26190:	uxtb	r3, r3
   26194:	b	261e4 <__assert_fail@plt+0x14ca0>
   26198:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2619c:	cmp	r3, #0
   261a0:	bge	261c4 <__assert_fail@plt+0x14c80>
   261a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   261a8:	rsb	r2, r3, #-2147483648	; 0x80000000
   261ac:	ldr	r3, [fp, #4]
   261b0:	cmp	r2, r3
   261b4:	movgt	r3, #1
   261b8:	movle	r3, #0
   261bc:	uxtb	r3, r3
   261c0:	b	261e4 <__assert_fail@plt+0x14ca0>
   261c4:	ldr	r2, [fp, #4]
   261c8:	mvn	r3, #-2147483648	; 0x80000000
   261cc:	sub	r3, r3, r2
   261d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261d4:	cmp	r3, r2
   261d8:	movlt	r3, #1
   261dc:	movge	r3, #0
   261e0:	uxtb	r3, r3
   261e4:	cmp	r3, #0
   261e8:	beq	26204 <__assert_fail@plt+0x14cc0>
   261ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   261f0:	ldr	r3, [fp, #4]
   261f4:	add	r3, r2, r3
   261f8:	str	r3, [fp, #-20]	; 0xffffffec
   261fc:	mov	r3, #1
   26200:	b	26218 <__assert_fail@plt+0x14cd4>
   26204:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26208:	ldr	r3, [fp, #4]
   2620c:	add	r3, r2, r3
   26210:	str	r3, [fp, #-20]	; 0xffffffec
   26214:	mov	r3, #0
   26218:	cmp	r3, #0
   2621c:	beq	26228 <__assert_fail@plt+0x14ce4>
   26220:	mvn	r3, #1
   26224:	b	2630c <__assert_fail@plt+0x14dc8>
   26228:	ldr	r3, [fp, #4]
   2622c:	cmp	r3, #0
   26230:	ble	262c0 <__assert_fail@plt+0x14d7c>
   26234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26238:	cmp	r3, #0
   2623c:	ble	262b4 <__assert_fail@plt+0x14d70>
   26240:	ldr	r3, [fp, #-20]	; 0xffffffec
   26244:	mov	r0, r3
   26248:	bl	33244 <__assert_fail@plt+0x21d00>
   2624c:	mov	r3, r0
   26250:	str	r3, [fp, #-12]
   26254:	ldr	r3, [fp, #-12]
   26258:	cmp	r3, #0
   2625c:	moveq	r3, #1
   26260:	movne	r3, #0
   26264:	uxtb	r3, r3
   26268:	cmp	r3, #0
   2626c:	beq	26278 <__assert_fail@plt+0x14d34>
   26270:	mvn	r3, #1
   26274:	b	2630c <__assert_fail@plt+0x14dc8>
   26278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2627c:	mov	r2, r3
   26280:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26284:	ldr	r0, [fp, #-12]
   26288:	bl	11250 <memcpy@plt>
   2628c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26290:	ldr	r2, [fp, #-12]
   26294:	add	r3, r2, r3
   26298:	ldr	r2, [fp, #4]
   2629c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   262a0:	mov	r0, r3
   262a4:	bl	11250 <memcpy@plt>
   262a8:	ldr	r3, [fp, #-12]
   262ac:	str	r3, [fp, #-8]
   262b0:	b	262c8 <__assert_fail@plt+0x14d84>
   262b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   262b8:	str	r3, [fp, #-8]
   262bc:	b	262c8 <__assert_fail@plt+0x14d84>
   262c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   262c4:	str	r3, [fp, #-8]
   262c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   262cc:	ldrb	r3, [fp, #24]
   262d0:	str	r3, [sp, #12]
   262d4:	ldr	r3, [fp, #16]
   262d8:	str	r3, [sp, #8]
   262dc:	ldr	r3, [fp, #20]
   262e0:	str	r3, [sp, #4]
   262e4:	ldr	r3, [fp, #12]
   262e8:	str	r3, [sp]
   262ec:	ldr	r3, [fp, #8]
   262f0:	ldr	r1, [fp, #-8]
   262f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   262f8:	bl	26318 <__assert_fail@plt+0x14dd4>
   262fc:	str	r0, [fp, #-16]
   26300:	ldr	r0, [fp, #-12]
   26304:	bl	14dec <__assert_fail@plt+0x38a8>
   26308:	ldr	r3, [fp, #-16]
   2630c:	mov	r0, r3
   26310:	sub	sp, fp, #4
   26314:	pop	{fp, pc}
   26318:	push	{fp, lr}
   2631c:	add	fp, sp, #4
   26320:	sub	sp, sp, #72	; 0x48
   26324:	str	r0, [fp, #-40]	; 0xffffffd8
   26328:	str	r1, [fp, #-44]	; 0xffffffd4
   2632c:	str	r2, [fp, #-48]	; 0xffffffd0
   26330:	str	r3, [fp, #-52]	; 0xffffffcc
   26334:	mov	r3, #0
   26338:	str	r3, [fp, #-20]	; 0xffffffec
   2633c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26340:	ldr	r3, [r3]
   26344:	str	r3, [fp, #-24]	; 0xffffffe8
   26348:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2634c:	ldr	r3, [fp, #4]
   26350:	add	r3, r2, r3
   26354:	str	r3, [fp, #-16]
   26358:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2635c:	lsr	r3, r3, #31
   26360:	uxtb	r3, r3
   26364:	cmp	r3, #0
   26368:	bne	2638c <__assert_fail@plt+0x14e48>
   2636c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26370:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26374:	cmp	r2, r3
   26378:	movgt	r3, #1
   2637c:	movle	r3, #0
   26380:	uxtb	r3, r3
   26384:	cmp	r3, #0
   26388:	beq	26394 <__assert_fail@plt+0x14e50>
   2638c:	mvn	r3, #0
   26390:	b	267e4 <__assert_fail@plt+0x152a0>
   26394:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26398:	ldr	r3, [fp, #-16]
   2639c:	cmp	r2, r3
   263a0:	movlt	r3, #1
   263a4:	movge	r3, #0
   263a8:	uxtb	r3, r3
   263ac:	cmp	r3, #0
   263b0:	bne	26400 <__assert_fail@plt+0x14ebc>
   263b4:	ldr	r3, [fp, #4]
   263b8:	mvn	r3, r3
   263bc:	lsr	r3, r3, #31
   263c0:	uxtb	r3, r3
   263c4:	cmp	r3, #0
   263c8:	beq	263f4 <__assert_fail@plt+0x14eb0>
   263cc:	ldr	r2, [fp, #-16]
   263d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   263d4:	cmp	r2, r3
   263d8:	movlt	r3, #1
   263dc:	movge	r3, #0
   263e0:	uxtb	r3, r3
   263e4:	cmp	r3, #0
   263e8:	beq	263f4 <__assert_fail@plt+0x14eb0>
   263ec:	mov	r3, #1
   263f0:	b	263f8 <__assert_fail@plt+0x14eb4>
   263f4:	mov	r3, #0
   263f8:	cmp	r3, #0
   263fc:	beq	2640c <__assert_fail@plt+0x14ec8>
   26400:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26404:	str	r3, [fp, #-16]
   26408:	b	26470 <__assert_fail@plt+0x14f2c>
   2640c:	ldr	r3, [fp, #-16]
   26410:	lsr	r3, r3, #31
   26414:	uxtb	r3, r3
   26418:	cmp	r3, #0
   2641c:	bne	26468 <__assert_fail@plt+0x14f24>
   26420:	ldr	r3, [fp, #4]
   26424:	lsr	r3, r3, #31
   26428:	uxtb	r3, r3
   2642c:	cmp	r3, #0
   26430:	beq	2645c <__assert_fail@plt+0x14f18>
   26434:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26438:	ldr	r3, [fp, #-16]
   2643c:	cmp	r2, r3
   26440:	movle	r3, #1
   26444:	movgt	r3, #0
   26448:	uxtb	r3, r3
   2644c:	cmp	r3, #0
   26450:	beq	2645c <__assert_fail@plt+0x14f18>
   26454:	mov	r3, #1
   26458:	b	26460 <__assert_fail@plt+0x14f1c>
   2645c:	mov	r3, #0
   26460:	cmp	r3, #0
   26464:	beq	26470 <__assert_fail@plt+0x14f2c>
   26468:	mov	r3, #0
   2646c:	str	r3, [fp, #-16]
   26470:	ldr	r3, [pc, #888]	; 267f0 <__assert_fail@plt+0x152ac>
   26474:	cmp	r3, #0
   26478:	bne	26488 <__assert_fail@plt+0x14f44>
   2647c:	ldr	r3, [pc, #880]	; 267f4 <__assert_fail@plt+0x152b0>
   26480:	cmp	r3, #0
   26484:	beq	26498 <__assert_fail@plt+0x14f54>
   26488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2648c:	add	r3, r3, #136	; 0x88
   26490:	mov	r0, r3
   26494:	bl	11238 <pthread_mutex_lock@plt>
   26498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2649c:	ldrb	r3, [r3, #28]
   264a0:	and	r3, r3, #32
   264a4:	uxtb	r3, r3
   264a8:	cmp	r3, #0
   264ac:	movne	r3, #1
   264b0:	moveq	r3, #0
   264b4:	uxtb	r3, r3
   264b8:	mov	r2, r3
   264bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   264c0:	orr	r3, r3, r2
   264c4:	str	r3, [fp, #-20]	; 0xffffffec
   264c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   264cc:	ldrb	r3, [r3, #28]
   264d0:	and	r3, r3, #64	; 0x40
   264d4:	uxtb	r3, r3
   264d8:	cmp	r3, #0
   264dc:	beq	264e8 <__assert_fail@plt+0x14fa4>
   264e0:	mov	r3, #2
   264e4:	b	264ec <__assert_fail@plt+0x14fa8>
   264e8:	mov	r3, #0
   264ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   264f0:	orr	r3, r2, r3
   264f4:	str	r3, [fp, #-20]	; 0xffffffec
   264f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   264fc:	ldr	r3, [fp, #-16]
   26500:	cmp	r2, r3
   26504:	bge	26538 <__assert_fail@plt+0x14ff4>
   26508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2650c:	ldr	r3, [r3, #16]
   26510:	cmp	r3, #0
   26514:	beq	26538 <__assert_fail@plt+0x14ff4>
   26518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2651c:	ldrb	r3, [r3, #28]
   26520:	and	r3, r3, #8
   26524:	uxtb	r3, r3
   26528:	cmp	r3, #0
   2652c:	bne	26538 <__assert_fail@plt+0x14ff4>
   26530:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26534:	bl	1cd9c <__assert_fail@plt+0xb858>
   26538:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2653c:	ldrb	r3, [r3, #28]
   26540:	lsr	r3, r3, #4
   26544:	and	r3, r3, #1
   26548:	uxtb	r3, r3
   2654c:	cmp	r3, #0
   26550:	beq	2655c <__assert_fail@plt+0x15018>
   26554:	mov	r3, #0
   26558:	str	r3, [fp, #12]
   2655c:	ldr	r3, [fp, #12]
   26560:	cmp	r3, #0
   26564:	bne	26574 <__assert_fail@plt+0x15030>
   26568:	mov	r3, #1
   2656c:	str	r3, [fp, #-8]
   26570:	b	26610 <__assert_fail@plt+0x150cc>
   26574:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26578:	ldrb	r3, [r3, #28]
   2657c:	and	r3, r3, #6
   26580:	uxtb	r3, r3
   26584:	cmp	r3, #4
   26588:	moveq	r3, #1
   2658c:	movne	r3, #0
   26590:	uxtb	r3, r3
   26594:	cmp	r3, #0
   26598:	beq	26600 <__assert_fail@plt+0x150bc>
   2659c:	ldr	r3, [fp, #12]
   265a0:	ldr	r2, [r3]
   265a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   265a8:	ldr	r3, [r3, #24]
   265ac:	cmp	r2, r3
   265b0:	movls	r3, #1
   265b4:	movhi	r3, #0
   265b8:	uxtb	r3, r3
   265bc:	cmp	r3, #0
   265c0:	beq	26600 <__assert_fail@plt+0x150bc>
   265c4:	ldr	r3, [fp, #12]
   265c8:	ldr	r3, [r3]
   265cc:	str	r3, [fp, #-8]
   265d0:	ldr	r3, [fp, #-8]
   265d4:	cmp	r3, #0
   265d8:	movle	r3, #1
   265dc:	movgt	r3, #0
   265e0:	uxtb	r3, r3
   265e4:	cmp	r3, #0
   265e8:	beq	26610 <__assert_fail@plt+0x150cc>
   265ec:	mov	r3, #0
   265f0:	str	r3, [fp, #12]
   265f4:	mov	r3, #1
   265f8:	str	r3, [fp, #-8]
   265fc:	b	26610 <__assert_fail@plt+0x150cc>
   26600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26604:	ldr	r3, [r3, #24]
   26608:	add	r3, r3, #1
   2660c:	str	r3, [fp, #-8]
   26610:	ldr	r3, [fp, #-8]
   26614:	lsl	r3, r3, #3
   26618:	mov	r0, r3
   2661c:	bl	33244 <__assert_fail@plt+0x21d00>
   26620:	mov	r3, r0
   26624:	str	r3, [fp, #-28]	; 0xffffffe4
   26628:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2662c:	cmp	r3, #0
   26630:	moveq	r3, #1
   26634:	movne	r3, #0
   26638:	uxtb	r3, r3
   2663c:	cmp	r3, #0
   26640:	beq	26650 <__assert_fail@plt+0x1510c>
   26644:	mvn	r3, #1
   26648:	str	r3, [fp, #-12]
   2664c:	b	267b8 <__assert_fail@plt+0x15274>
   26650:	ldr	r3, [fp, #-8]
   26654:	ldr	r2, [fp, #-20]	; 0xffffffec
   26658:	str	r2, [sp, #16]
   2665c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26660:	str	r2, [sp, #12]
   26664:	str	r3, [sp, #8]
   26668:	ldr	r3, [fp, #8]
   2666c:	str	r3, [sp, #4]
   26670:	ldr	r3, [fp, #-16]
   26674:	str	r3, [sp]
   26678:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2667c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   26680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   26684:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26688:	bl	26b84 <__assert_fail@plt+0x15640>
   2668c:	str	r0, [fp, #-32]	; 0xffffffe0
   26690:	mov	r3, #0
   26694:	str	r3, [fp, #-12]
   26698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2669c:	cmp	r3, #0
   266a0:	beq	266c4 <__assert_fail@plt+0x15180>
   266a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266a8:	cmp	r3, #1
   266ac:	bne	266b8 <__assert_fail@plt+0x15174>
   266b0:	mvn	r3, #0
   266b4:	b	266bc <__assert_fail@plt+0x15178>
   266b8:	mvn	r3, #1
   266bc:	str	r3, [fp, #-12]
   266c0:	b	26754 <__assert_fail@plt+0x15210>
   266c4:	ldr	r3, [fp, #12]
   266c8:	cmp	r3, #0
   266cc:	beq	26754 <__assert_fail@plt+0x15210>
   266d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   266d4:	ldrb	r3, [r3, #28]
   266d8:	lsr	r3, r3, #1
   266dc:	and	r3, r3, #3
   266e0:	uxtb	r3, r3
   266e4:	ldr	r2, [fp, #-8]
   266e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   266ec:	ldr	r0, [fp, #12]
   266f0:	bl	267f8 <__assert_fail@plt+0x152b4>
   266f4:	mov	r3, r0
   266f8:	uxtb	r3, r3
   266fc:	and	r3, r3, #3
   26700:	uxtb	r3, r3
   26704:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26708:	ldrb	r2, [r1, #28]
   2670c:	and	r3, r3, #3
   26710:	bic	r2, r2, #6
   26714:	lsl	r3, r3, #1
   26718:	orr	r3, r3, r2
   2671c:	mov	r2, r3
   26720:	strb	r2, [r1, #28]
   26724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26728:	ldrb	r3, [r3, #28]
   2672c:	and	r3, r3, #6
   26730:	uxtb	r3, r3
   26734:	cmp	r3, #0
   26738:	moveq	r3, #1
   2673c:	movne	r3, #0
   26740:	uxtb	r3, r3
   26744:	cmp	r3, #0
   26748:	beq	26754 <__assert_fail@plt+0x15210>
   2674c:	mvn	r3, #1
   26750:	str	r3, [fp, #-12]
   26754:	ldr	r3, [fp, #-12]
   26758:	cmp	r3, #0
   2675c:	moveq	r3, #1
   26760:	movne	r3, #0
   26764:	uxtb	r3, r3
   26768:	cmp	r3, #0
   2676c:	beq	267b0 <__assert_fail@plt+0x1526c>
   26770:	ldrb	r3, [fp, #16]
   26774:	cmp	r3, #0
   26778:	beq	267a4 <__assert_fail@plt+0x15260>
   2677c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26780:	ldr	r2, [r3]
   26784:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26788:	cmp	r2, r3
   2678c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26790:	ldr	r2, [r3, #4]
   26794:	ldr	r3, [fp, #-52]	; 0xffffffcc
   26798:	sub	r3, r2, r3
   2679c:	str	r3, [fp, #-12]
   267a0:	b	267b0 <__assert_fail@plt+0x1526c>
   267a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   267a8:	ldr	r3, [r3]
   267ac:	str	r3, [fp, #-12]
   267b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   267b4:	bl	14dec <__assert_fail@plt+0x38a8>
   267b8:	ldr	r3, [pc, #48]	; 267f0 <__assert_fail@plt+0x152ac>
   267bc:	cmp	r3, #0
   267c0:	bne	267d0 <__assert_fail@plt+0x1528c>
   267c4:	ldr	r3, [pc, #40]	; 267f4 <__assert_fail@plt+0x152b0>
   267c8:	cmp	r3, #0
   267cc:	beq	267e0 <__assert_fail@plt+0x1529c>
   267d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   267d4:	add	r3, r3, #136	; 0x88
   267d8:	mov	r0, r3
   267dc:	bl	11178 <pthread_mutex_unlock@plt>
   267e0:	ldr	r3, [fp, #-12]
   267e4:	mov	r0, r3
   267e8:	sub	sp, fp, #4
   267ec:	pop	{fp, pc}
	...
   267f8:	push	{fp, lr}
   267fc:	add	fp, sp, #4
   26800:	sub	sp, sp, #40	; 0x28
   26804:	str	r0, [fp, #-32]	; 0xffffffe0
   26808:	str	r1, [fp, #-36]	; 0xffffffdc
   2680c:	str	r2, [fp, #-40]	; 0xffffffd8
   26810:	str	r3, [fp, #-44]	; 0xffffffd4
   26814:	mov	r3, #1
   26818:	str	r3, [fp, #-8]
   2681c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26820:	add	r3, r3, #1
   26824:	str	r3, [fp, #-16]
   26828:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2682c:	cmp	r3, #0
   26830:	bne	268e4 <__assert_fail@plt+0x153a0>
   26834:	ldr	r3, [fp, #-16]
   26838:	lsl	r3, r3, #2
   2683c:	mov	r0, r3
   26840:	bl	33244 <__assert_fail@plt+0x21d00>
   26844:	mov	r3, r0
   26848:	mov	r2, r3
   2684c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26850:	str	r2, [r3, #4]
   26854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26858:	ldr	r3, [r3, #4]
   2685c:	cmp	r3, #0
   26860:	moveq	r3, #1
   26864:	movne	r3, #0
   26868:	uxtb	r3, r3
   2686c:	cmp	r3, #0
   26870:	beq	2687c <__assert_fail@plt+0x15338>
   26874:	mov	r3, #0
   26878:	b	26acc <__assert_fail@plt+0x15588>
   2687c:	ldr	r3, [fp, #-16]
   26880:	lsl	r3, r3, #2
   26884:	mov	r0, r3
   26888:	bl	33244 <__assert_fail@plt+0x21d00>
   2688c:	mov	r3, r0
   26890:	mov	r2, r3
   26894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26898:	str	r2, [r3, #8]
   2689c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268a0:	ldr	r3, [r3, #8]
   268a4:	cmp	r3, #0
   268a8:	moveq	r3, #1
   268ac:	movne	r3, #0
   268b0:	uxtb	r3, r3
   268b4:	cmp	r3, #0
   268b8:	beq	268d4 <__assert_fail@plt+0x15390>
   268bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268c0:	ldr	r3, [r3, #4]
   268c4:	mov	r0, r3
   268c8:	bl	14dec <__assert_fail@plt+0x38a8>
   268cc:	mov	r3, #0
   268d0:	b	26acc <__assert_fail@plt+0x15588>
   268d4:	ldr	r2, [fp, #-16]
   268d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268dc:	str	r2, [r3]
   268e0:	b	269ec <__assert_fail@plt+0x154a8>
   268e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   268e8:	cmp	r3, #1
   268ec:	bne	269cc <__assert_fail@plt+0x15488>
   268f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268f4:	ldr	r2, [r3]
   268f8:	ldr	r3, [fp, #-16]
   268fc:	cmp	r2, r3
   26900:	movcc	r3, #1
   26904:	movcs	r3, #0
   26908:	uxtb	r3, r3
   2690c:	cmp	r3, #0
   26910:	beq	269ec <__assert_fail@plt+0x154a8>
   26914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26918:	ldr	r2, [r3, #4]
   2691c:	ldr	r3, [fp, #-16]
   26920:	lsl	r3, r3, #2
   26924:	mov	r1, r3
   26928:	mov	r0, r2
   2692c:	bl	332ec <__assert_fail@plt+0x21da8>
   26930:	str	r0, [fp, #-20]	; 0xffffffec
   26934:	ldr	r3, [fp, #-20]	; 0xffffffec
   26938:	cmp	r3, #0
   2693c:	moveq	r3, #1
   26940:	movne	r3, #0
   26944:	uxtb	r3, r3
   26948:	cmp	r3, #0
   2694c:	beq	26958 <__assert_fail@plt+0x15414>
   26950:	mov	r3, #0
   26954:	b	26acc <__assert_fail@plt+0x15588>
   26958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2695c:	ldr	r2, [r3, #8]
   26960:	ldr	r3, [fp, #-16]
   26964:	lsl	r3, r3, #2
   26968:	mov	r1, r3
   2696c:	mov	r0, r2
   26970:	bl	332ec <__assert_fail@plt+0x21da8>
   26974:	str	r0, [fp, #-24]	; 0xffffffe8
   26978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2697c:	cmp	r3, #0
   26980:	moveq	r3, #1
   26984:	movne	r3, #0
   26988:	uxtb	r3, r3
   2698c:	cmp	r3, #0
   26990:	beq	269a4 <__assert_fail@plt+0x15460>
   26994:	ldr	r0, [fp, #-20]	; 0xffffffec
   26998:	bl	14dec <__assert_fail@plt+0x38a8>
   2699c:	mov	r3, #0
   269a0:	b	26acc <__assert_fail@plt+0x15588>
   269a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   269ac:	str	r2, [r3, #4]
   269b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   269b8:	str	r2, [r3, #8]
   269bc:	ldr	r2, [fp, #-16]
   269c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269c4:	str	r2, [r3]
   269c8:	b	269ec <__assert_fail@plt+0x154a8>
   269cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   269d0:	cmp	r3, #2
   269d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269d8:	ldr	r2, [r3]
   269dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   269e0:	cmp	r2, r3
   269e4:	mov	r3, #2
   269e8:	str	r3, [fp, #-8]
   269ec:	mov	r3, #0
   269f0:	str	r3, [fp, #-12]
   269f4:	b	26a5c <__assert_fail@plt+0x15518>
   269f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269fc:	ldr	r2, [r3, #4]
   26a00:	ldr	r3, [fp, #-12]
   26a04:	lsl	r3, r3, #2
   26a08:	add	r3, r2, r3
   26a0c:	ldr	r2, [fp, #-12]
   26a10:	lsl	r2, r2, #3
   26a14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26a18:	add	r2, r1, r2
   26a1c:	ldr	r2, [r2]
   26a20:	str	r2, [r3]
   26a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a28:	ldr	r2, [r3, #8]
   26a2c:	ldr	r3, [fp, #-12]
   26a30:	lsl	r3, r3, #2
   26a34:	add	r3, r2, r3
   26a38:	ldr	r2, [fp, #-12]
   26a3c:	lsl	r2, r2, #3
   26a40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26a44:	add	r2, r1, r2
   26a48:	ldr	r2, [r2, #4]
   26a4c:	str	r2, [r3]
   26a50:	ldr	r3, [fp, #-12]
   26a54:	add	r3, r3, #1
   26a58:	str	r3, [fp, #-12]
   26a5c:	ldr	r2, [fp, #-12]
   26a60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26a64:	cmp	r2, r3
   26a68:	blt	269f8 <__assert_fail@plt+0x154b4>
   26a6c:	b	26ab4 <__assert_fail@plt+0x15570>
   26a70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a74:	ldr	r2, [r3, #4]
   26a78:	ldr	r3, [fp, #-12]
   26a7c:	lsl	r3, r3, #2
   26a80:	add	r2, r2, r3
   26a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a88:	ldr	r1, [r3, #8]
   26a8c:	ldr	r3, [fp, #-12]
   26a90:	lsl	r3, r3, #2
   26a94:	add	r3, r1, r3
   26a98:	mvn	r1, #0
   26a9c:	str	r1, [r3]
   26aa0:	ldr	r3, [r3]
   26aa4:	str	r3, [r2]
   26aa8:	ldr	r3, [fp, #-12]
   26aac:	add	r3, r3, #1
   26ab0:	str	r3, [fp, #-12]
   26ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ab8:	ldr	r2, [r3]
   26abc:	ldr	r3, [fp, #-12]
   26ac0:	cmp	r2, r3
   26ac4:	bhi	26a70 <__assert_fail@plt+0x1552c>
   26ac8:	ldr	r3, [fp, #-8]
   26acc:	mov	r0, r3
   26ad0:	sub	sp, fp, #4
   26ad4:	pop	{fp, pc}
   26ad8:	push	{fp}		; (str fp, [sp, #-4]!)
   26adc:	add	fp, sp, #0
   26ae0:	sub	sp, sp, #20
   26ae4:	str	r0, [fp, #-8]
   26ae8:	str	r1, [fp, #-12]
   26aec:	str	r2, [fp, #-16]
   26af0:	str	r3, [fp, #-20]	; 0xffffffec
   26af4:	ldr	r3, [fp, #-16]
   26af8:	cmp	r3, #0
   26afc:	beq	26b3c <__assert_fail@plt+0x155f8>
   26b00:	ldr	r2, [fp, #-8]
   26b04:	ldrb	r3, [r2, #28]
   26b08:	bic	r3, r3, #4
   26b0c:	orr	r3, r3, #2
   26b10:	strb	r3, [r2, #28]
   26b14:	ldr	r3, [fp, #-12]
   26b18:	ldr	r2, [fp, #-16]
   26b1c:	str	r2, [r3]
   26b20:	ldr	r3, [fp, #-12]
   26b24:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b28:	str	r2, [r3, #4]
   26b2c:	ldr	r3, [fp, #-12]
   26b30:	ldr	r2, [fp, #4]
   26b34:	str	r2, [r3, #8]
   26b38:	b	26b74 <__assert_fail@plt+0x15630>
   26b3c:	ldr	r2, [fp, #-8]
   26b40:	ldrb	r3, [r2, #28]
   26b44:	bic	r3, r3, #6
   26b48:	strb	r3, [r2, #28]
   26b4c:	ldr	r3, [fp, #-12]
   26b50:	mov	r2, #0
   26b54:	str	r2, [r3]
   26b58:	ldr	r3, [fp, #-12]
   26b5c:	mov	r2, #0
   26b60:	str	r2, [r3, #8]
   26b64:	ldr	r3, [fp, #-12]
   26b68:	ldr	r2, [r3, #8]
   26b6c:	ldr	r3, [fp, #-12]
   26b70:	str	r2, [r3, #4]
   26b74:	nop			; (mov r0, r0)
   26b78:	add	sp, fp, #0
   26b7c:	pop	{fp}		; (ldr fp, [sp], #4)
   26b80:	bx	lr
   26b84:	push	{fp, lr}
   26b88:	add	fp, sp, #4
   26b8c:	sub	sp, sp, #240	; 0xf0
   26b90:	str	r0, [fp, #-216]	; 0xffffff28
   26b94:	str	r1, [fp, #-220]	; 0xffffff24
   26b98:	str	r2, [fp, #-224]	; 0xffffff20
   26b9c:	str	r3, [fp, #-228]	; 0xffffff1c
   26ba0:	ldr	r3, [fp, #-216]	; 0xffffff28
   26ba4:	ldr	r3, [r3]
   26ba8:	str	r3, [fp, #-20]	; 0xffffffec
   26bac:	mvn	r3, #0
   26bb0:	str	r3, [fp, #-24]	; 0xffffffe8
   26bb4:	sub	r3, fp, #208	; 0xd0
   26bb8:	mov	r2, #136	; 0x88
   26bbc:	mov	r1, #0
   26bc0:	mov	r0, r3
   26bc4:	bl	11448 <memset@plt>
   26bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26bcc:	str	r3, [fp, #-124]	; 0xffffff84
   26bd0:	ldr	r3, [fp, #-216]	; 0xffffff28
   26bd4:	ldr	r3, [r3, #16]
   26bd8:	cmp	r3, #0
   26bdc:	beq	26c2c <__assert_fail@plt+0x156e8>
   26be0:	ldr	r3, [fp, #-216]	; 0xffffff28
   26be4:	ldrb	r3, [r3, #28]
   26be8:	and	r3, r3, #8
   26bec:	uxtb	r3, r3
   26bf0:	cmp	r3, #0
   26bf4:	beq	26c2c <__assert_fail@plt+0x156e8>
   26bf8:	ldr	r2, [fp, #-228]	; 0xffffff1c
   26bfc:	ldr	r3, [fp, #4]
   26c00:	cmp	r2, r3
   26c04:	beq	26c2c <__assert_fail@plt+0x156e8>
   26c08:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c0c:	ldrb	r3, [r3, #28]
   26c10:	and	r3, r3, #1
   26c14:	uxtb	r3, r3
   26c18:	cmp	r3, #0
   26c1c:	bne	26c2c <__assert_fail@plt+0x156e8>
   26c20:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c24:	ldr	r3, [r3, #16]
   26c28:	b	26c30 <__assert_fail@plt+0x156ec>
   26c2c:	mov	r3, #0
   26c30:	str	r3, [fp, #-28]	; 0xffffffe4
   26c34:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c38:	ldr	r3, [r3, #20]
   26c3c:	str	r3, [fp, #-32]	; 0xffffffe0
   26c40:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c44:	ldr	r2, [r3, #24]
   26c48:	ldr	r3, [fp, #12]
   26c4c:	cmp	r2, r3
   26c50:	bcs	26c6c <__assert_fail@plt+0x15728>
   26c54:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c58:	ldr	r3, [r3, #24]
   26c5c:	ldr	r2, [fp, #12]
   26c60:	sub	r3, r2, r3
   26c64:	sub	r3, r3, #1
   26c68:	b	26c70 <__assert_fail@plt+0x1572c>
   26c6c:	mov	r3, #0
   26c70:	str	r3, [fp, #-36]	; 0xffffffdc
   26c74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26c78:	ldr	r2, [fp, #12]
   26c7c:	sub	r3, r2, r3
   26c80:	str	r3, [fp, #12]
   26c84:	ldr	r3, [fp, #-216]	; 0xffffff28
   26c88:	ldr	r3, [r3, #8]
   26c8c:	cmp	r3, #0
   26c90:	moveq	r3, #1
   26c94:	movne	r3, #0
   26c98:	uxtb	r3, r3
   26c9c:	cmp	r3, #0
   26ca0:	bne	26cc4 <__assert_fail@plt+0x15780>
   26ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ca8:	ldr	r3, [r3, #36]	; 0x24
   26cac:	cmp	r3, #0
   26cb0:	moveq	r3, #1
   26cb4:	movne	r3, #0
   26cb8:	uxtb	r3, r3
   26cbc:	cmp	r3, #0
   26cc0:	beq	26ccc <__assert_fail@plt+0x15788>
   26cc4:	mov	r3, #1
   26cc8:	b	26cd0 <__assert_fail@plt+0x1578c>
   26ccc:	mov	r3, #0
   26cd0:	cmp	r3, #0
   26cd4:	bne	26cf8 <__assert_fail@plt+0x157b4>
   26cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26cdc:	ldr	r3, [r3, #40]	; 0x28
   26ce0:	cmp	r3, #0
   26ce4:	moveq	r3, #1
   26ce8:	movne	r3, #0
   26cec:	uxtb	r3, r3
   26cf0:	cmp	r3, #0
   26cf4:	beq	26d00 <__assert_fail@plt+0x157bc>
   26cf8:	mov	r3, #1
   26cfc:	b	26d04 <__assert_fail@plt+0x157c0>
   26d00:	mov	r3, #0
   26d04:	cmp	r3, #0
   26d08:	bne	26d2c <__assert_fail@plt+0x157e8>
   26d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d10:	ldr	r3, [r3, #44]	; 0x2c
   26d14:	cmp	r3, #0
   26d18:	moveq	r3, #1
   26d1c:	movne	r3, #0
   26d20:	uxtb	r3, r3
   26d24:	cmp	r3, #0
   26d28:	beq	26d34 <__assert_fail@plt+0x157f0>
   26d2c:	mov	r3, #1
   26d30:	b	26d38 <__assert_fail@plt+0x157f4>
   26d34:	mov	r3, #0
   26d38:	cmp	r3, #0
   26d3c:	bne	26d60 <__assert_fail@plt+0x1581c>
   26d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d44:	ldr	r3, [r3, #48]	; 0x30
   26d48:	cmp	r3, #0
   26d4c:	moveq	r3, #1
   26d50:	movne	r3, #0
   26d54:	uxtb	r3, r3
   26d58:	cmp	r3, #0
   26d5c:	beq	26d68 <__assert_fail@plt+0x15824>
   26d60:	mov	r3, #1
   26d64:	b	27a88 <__assert_fail@plt+0x16544>
   26d68:	ldr	r3, [fp, #4]
   26d6c:	cmp	r3, #0
   26d70:	blt	26d84 <__assert_fail@plt+0x15840>
   26d74:	ldr	r2, [fp, #4]
   26d78:	ldr	r3, [fp, #-224]	; 0xffffff20
   26d7c:	cmp	r2, r3
   26d80:	ble	26d84 <__assert_fail@plt+0x15840>
   26d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d88:	ldr	r3, [r3, #36]	; 0x24
   26d8c:	ldr	r3, [r3, #8]
   26d90:	cmp	r3, #0
   26d94:	bne	26e08 <__assert_fail@plt+0x158c4>
   26d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d9c:	ldr	r3, [r3, #40]	; 0x28
   26da0:	ldr	r3, [r3, #8]
   26da4:	cmp	r3, #0
   26da8:	bne	26e08 <__assert_fail@plt+0x158c4>
   26dac:	ldr	r3, [fp, #-20]	; 0xffffffec
   26db0:	ldr	r3, [r3, #44]	; 0x2c
   26db4:	ldr	r3, [r3, #8]
   26db8:	cmp	r3, #0
   26dbc:	beq	26dd8 <__assert_fail@plt+0x15894>
   26dc0:	ldr	r3, [fp, #-216]	; 0xffffff28
   26dc4:	ldrb	r3, [r3, #28]
   26dc8:	bic	r3, r3, #127	; 0x7f
   26dcc:	uxtb	r3, r3
   26dd0:	cmp	r3, #0
   26dd4:	bne	26e08 <__assert_fail@plt+0x158c4>
   26dd8:	ldr	r3, [fp, #-228]	; 0xffffff1c
   26ddc:	cmp	r3, #0
   26de0:	beq	26df8 <__assert_fail@plt+0x158b4>
   26de4:	ldr	r3, [fp, #4]
   26de8:	cmp	r3, #0
   26dec:	beq	26df8 <__assert_fail@plt+0x158b4>
   26df0:	mov	r3, #1
   26df4:	b	27a88 <__assert_fail@plt+0x16544>
   26df8:	mov	r3, #0
   26dfc:	str	r3, [fp, #4]
   26e00:	ldr	r3, [fp, #4]
   26e04:	str	r3, [fp, #-228]	; 0xffffff1c
   26e08:	ldr	r3, [fp, #12]
   26e0c:	cmp	r3, #0
   26e10:	bne	26e24 <__assert_fail@plt+0x158e0>
   26e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   26e18:	ldr	r3, [r3, #76]	; 0x4c
   26e1c:	cmp	r3, #0
   26e20:	beq	26e2c <__assert_fail@plt+0x158e8>
   26e24:	mov	r3, #1
   26e28:	b	26e30 <__assert_fail@plt+0x158ec>
   26e2c:	mov	r3, #0
   26e30:	strb	r3, [fp, #-37]	; 0xffffffdb
   26e34:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   26e38:	and	r3, r3, #1
   26e3c:	strb	r3, [fp, #-37]	; 0xffffffdb
   26e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   26e44:	ldr	r3, [r3, #8]
   26e48:	add	r3, r3, #1
   26e4c:	mov	ip, r3
   26e50:	ldr	r3, [fp, #-216]	; 0xffffff28
   26e54:	ldr	r3, [r3, #20]
   26e58:	ldr	r2, [fp, #-216]	; 0xffffff28
   26e5c:	ldr	r2, [r2, #12]
   26e60:	and	r2, r2, #4194304	; 0x400000
   26e64:	cmp	r2, #0
   26e68:	movne	r2, #1
   26e6c:	moveq	r2, #0
   26e70:	uxtb	r2, r2
   26e74:	sub	r0, fp, #208	; 0xd0
   26e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   26e7c:	str	r1, [sp, #8]
   26e80:	str	r2, [sp, #4]
   26e84:	str	r3, [sp]
   26e88:	mov	r3, ip
   26e8c:	ldr	r2, [fp, #-224]	; 0xffffff20
   26e90:	ldr	r1, [fp, #-220]	; 0xffffff24
   26e94:	bl	17cc4 <__assert_fail@plt+0x6780>
   26e98:	str	r0, [fp, #-8]
   26e9c:	ldr	r3, [fp, #-8]
   26ea0:	cmp	r3, #0
   26ea4:	movne	r3, #1
   26ea8:	moveq	r3, #0
   26eac:	uxtb	r3, r3
   26eb0:	cmp	r3, #0
   26eb4:	bne	27a24 <__assert_fail@plt+0x164e0>
   26eb8:	ldr	r3, [fp, #8]
   26ebc:	str	r3, [fp, #-152]	; 0xffffff68
   26ec0:	ldr	r3, [fp, #8]
   26ec4:	str	r3, [fp, #-156]	; 0xffffff64
   26ec8:	ldr	r3, [fp, #-216]	; 0xffffff28
   26ecc:	ldrb	r3, [r3, #28]
   26ed0:	lsr	r3, r3, #7
   26ed4:	uxtb	r3, r3
   26ed8:	strb	r3, [fp, #-131]	; 0xffffff7d
   26edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   26ee0:	ldr	r3, [r3, #76]	; 0x4c
   26ee4:	lsl	r2, r3, #1
   26ee8:	sub	r3, fp, #208	; 0xd0
   26eec:	ldr	r1, [fp, #20]
   26ef0:	mov	r0, r3
   26ef4:	bl	3007c <__assert_fail@plt+0x1eb38>
   26ef8:	str	r0, [fp, #-8]
   26efc:	ldr	r3, [fp, #-8]
   26f00:	cmp	r3, #0
   26f04:	movne	r3, #1
   26f08:	moveq	r3, #0
   26f0c:	uxtb	r3, r3
   26f10:	cmp	r3, #0
   26f14:	bne	27a2c <__assert_fail@plt+0x164e8>
   26f18:	ldr	r3, [fp, #12]
   26f1c:	cmp	r3, #1
   26f20:	bhi	26f3c <__assert_fail@plt+0x159f8>
   26f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   26f28:	ldrb	r3, [r3, #88]	; 0x58
   26f2c:	and	r3, r3, #2
   26f30:	uxtb	r3, r3
   26f34:	cmp	r3, #0
   26f38:	beq	26fa8 <__assert_fail@plt+0x15a64>
   26f3c:	ldr	r3, [fp, #-172]	; 0xffffff54
   26f40:	cmn	r3, #-1073741822	; 0xc0000002
   26f44:	movhi	r3, #1
   26f48:	movls	r3, #0
   26f4c:	uxtb	r3, r3
   26f50:	cmp	r3, #0
   26f54:	beq	26f64 <__assert_fail@plt+0x15a20>
   26f58:	mov	r3, #12
   26f5c:	str	r3, [fp, #-8]
   26f60:	b	27a50 <__assert_fail@plt+0x1650c>
   26f64:	ldr	r3, [fp, #-172]	; 0xffffff54
   26f68:	add	r3, r3, #1
   26f6c:	lsl	r3, r3, #2
   26f70:	mov	r0, r3
   26f74:	bl	33244 <__assert_fail@plt+0x21d00>
   26f78:	mov	r3, r0
   26f7c:	str	r3, [fp, #-108]	; 0xffffff94
   26f80:	ldr	r3, [fp, #-108]	; 0xffffff94
   26f84:	cmp	r3, #0
   26f88:	moveq	r3, #1
   26f8c:	movne	r3, #0
   26f90:	uxtb	r3, r3
   26f94:	cmp	r3, #0
   26f98:	beq	26fa8 <__assert_fail@plt+0x15a64>
   26f9c:	mov	r3, #12
   26fa0:	str	r3, [fp, #-8]
   26fa4:	b	27a50 <__assert_fail@plt+0x1650c>
   26fa8:	ldr	r3, [fp, #-228]	; 0xffffff1c
   26fac:	str	r3, [fp, #-72]	; 0xffffffb8
   26fb0:	ldr	r3, [fp, #20]
   26fb4:	and	r3, r3, #1
   26fb8:	cmp	r3, #0
   26fbc:	beq	26fc8 <__assert_fail@plt+0x15a84>
   26fc0:	mov	r3, #4
   26fc4:	b	26fcc <__assert_fail@plt+0x15a88>
   26fc8:	mov	r3, #6
   26fcc:	str	r3, [fp, #-148]	; 0xffffff6c
   26fd0:	ldr	r2, [fp, #4]
   26fd4:	ldr	r3, [fp, #-228]	; 0xffffff1c
   26fd8:	cmp	r2, r3
   26fdc:	bge	26fe8 <__assert_fail@plt+0x15aa4>
   26fe0:	mvn	r3, #0
   26fe4:	b	26fec <__assert_fail@plt+0x15aa8>
   26fe8:	mov	r3, #1
   26fec:	str	r3, [fp, #-44]	; 0xffffffd4
   26ff0:	ldr	r2, [fp, #-228]	; 0xffffff1c
   26ff4:	ldr	r3, [fp, #4]
   26ff8:	cmp	r2, r3
   26ffc:	movlt	r3, r2
   27000:	movge	r3, r3
   27004:	str	r3, [fp, #-48]	; 0xffffffd0
   27008:	ldr	r2, [fp, #4]
   2700c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   27010:	cmp	r2, r3
   27014:	movge	r3, r2
   27018:	movlt	r3, r3
   2701c:	str	r3, [fp, #-52]	; 0xffffffcc
   27020:	ldr	r3, [fp, #-20]	; 0xffffffec
   27024:	ldr	r3, [r3, #92]	; 0x5c
   27028:	cmp	r3, #1
   2702c:	moveq	r3, #1
   27030:	movne	r3, #0
   27034:	strb	r3, [fp, #-53]	; 0xffffffcb
   27038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2703c:	cmp	r3, #0
   27040:	beq	270b8 <__assert_fail@plt+0x15b74>
   27044:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   27048:	cmp	r3, #0
   2704c:	bne	27070 <__assert_fail@plt+0x15b2c>
   27050:	ldr	r3, [fp, #-216]	; 0xffffff28
   27054:	ldr	r3, [r3, #12]
   27058:	and	r3, r3, #4194304	; 0x400000
   2705c:	cmp	r3, #0
   27060:	bne	27078 <__assert_fail@plt+0x15b34>
   27064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27068:	cmp	r3, #0
   2706c:	bne	27078 <__assert_fail@plt+0x15b34>
   27070:	mov	r2, #4
   27074:	b	2707c <__assert_fail@plt+0x15b38>
   27078:	mov	r2, #0
   2707c:	ldr	r1, [fp, #-228]	; 0xffffff1c
   27080:	ldr	r3, [fp, #4]
   27084:	cmp	r1, r3
   27088:	bgt	27094 <__assert_fail@plt+0x15b50>
   2708c:	mov	r3, #2
   27090:	b	27098 <__assert_fail@plt+0x15b54>
   27094:	mov	r3, #0
   27098:	orr	r3, r2, r3
   2709c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   270a0:	cmp	r2, #0
   270a4:	movne	r2, #1
   270a8:	moveq	r2, #0
   270ac:	uxtb	r2, r2
   270b0:	orr	r3, r3, r2
   270b4:	b	270bc <__assert_fail@plt+0x15b78>
   270b8:	mov	r3, #8
   270bc:	str	r3, [fp, #-60]	; 0xffffffc4
   270c0:	mov	r3, #1
   270c4:	str	r3, [fp, #-8]
   270c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   270cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   270d0:	cmp	r2, r3
   270d4:	blt	27a50 <__assert_fail@plt+0x1650c>
   270d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   270dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   270e0:	cmp	r2, r3
   270e4:	blt	27a50 <__assert_fail@plt+0x1650c>
   270e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   270ec:	sub	r3, r3, #4
   270f0:	cmp	r3, #4
   270f4:	ldrls	pc, [pc, r3, lsl #2]
   270f8:	b	27308 <__assert_fail@plt+0x15dc4>
   270fc:	ldrdeq	r7, [r2], -ip
   27100:	ldrdeq	r7, [r2], -ip
   27104:	andeq	r7, r2, r8, lsl #3
   27108:	andeq	r7, r2, ip, lsl r1
   2710c:	andeq	r7, r2, ip, lsl #8
   27110:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27114:	add	r3, r3, #1
   27118:	str	r3, [fp, #-72]	; 0xffffffb8
   2711c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27120:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27124:	cmp	r2, r3
   27128:	movlt	r3, #1
   2712c:	movge	r3, #0
   27130:	uxtb	r3, r3
   27134:	cmp	r3, #0
   27138:	beq	271d8 <__assert_fail@plt+0x15c94>
   2713c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27140:	mov	r2, r3
   27144:	ldr	r3, [fp, #-220]	; 0xffffff24
   27148:	add	r3, r3, r2
   2714c:	ldrb	r3, [r3]
   27150:	mov	r2, r3
   27154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27158:	add	r3, r3, r2
   2715c:	ldrb	r3, [r3]
   27160:	mov	r2, r3
   27164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27168:	add	r3, r3, r2
   2716c:	ldrb	r3, [r3]
   27170:	cmp	r3, #0
   27174:	beq	27110 <__assert_fail@plt+0x15bcc>
   27178:	b	271d8 <__assert_fail@plt+0x15c94>
   2717c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27180:	add	r3, r3, #1
   27184:	str	r3, [fp, #-72]	; 0xffffffb8
   27188:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2718c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27190:	cmp	r2, r3
   27194:	movlt	r3, #1
   27198:	movge	r3, #0
   2719c:	uxtb	r3, r3
   271a0:	cmp	r3, #0
   271a4:	beq	271dc <__assert_fail@plt+0x15c98>
   271a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   271ac:	mov	r2, r3
   271b0:	ldr	r3, [fp, #-220]	; 0xffffff24
   271b4:	add	r3, r3, r2
   271b8:	ldrb	r3, [r3]
   271bc:	mov	r2, r3
   271c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   271c4:	add	r3, r3, r2
   271c8:	ldrb	r3, [r3]
   271cc:	cmp	r3, #0
   271d0:	beq	2717c <__assert_fail@plt+0x15c38>
   271d4:	b	271dc <__assert_fail@plt+0x15c98>
   271d8:	nop			; (mov r0, r0)
   271dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   271e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   271e4:	cmp	r2, r3
   271e8:	moveq	r3, #1
   271ec:	movne	r3, #0
   271f0:	uxtb	r3, r3
   271f4:	cmp	r3, #0
   271f8:	beq	27414 <__assert_fail@plt+0x15ed0>
   271fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27200:	ldr	r3, [fp, #-224]	; 0xffffff20
   27204:	cmp	r2, r3
   27208:	bge	27224 <__assert_fail@plt+0x15ce0>
   2720c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27210:	mov	r2, r3
   27214:	ldr	r3, [fp, #-220]	; 0xffffff24
   27218:	add	r3, r3, r2
   2721c:	ldrb	r3, [r3]
   27220:	b	27228 <__assert_fail@plt+0x15ce4>
   27224:	mov	r3, #0
   27228:	str	r3, [fp, #-64]	; 0xffffffc0
   2722c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27230:	cmp	r3, #0
   27234:	beq	2724c <__assert_fail@plt+0x15d08>
   27238:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2723c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27240:	add	r3, r2, r3
   27244:	ldrb	r3, [r3]
   27248:	b	27250 <__assert_fail@plt+0x15d0c>
   2724c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27250:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27254:	add	r3, r2, r3
   27258:	ldrb	r3, [r3]
   2725c:	cmp	r3, #0
   27260:	bne	27414 <__assert_fail@plt+0x15ed0>
   27264:	b	27a50 <__assert_fail@plt+0x1650c>
   27268:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2726c:	ldr	r3, [fp, #-224]	; 0xffffff20
   27270:	cmp	r2, r3
   27274:	bge	27290 <__assert_fail@plt+0x15d4c>
   27278:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2727c:	mov	r2, r3
   27280:	ldr	r3, [fp, #-220]	; 0xffffff24
   27284:	add	r3, r3, r2
   27288:	ldrb	r3, [r3]
   2728c:	b	27294 <__assert_fail@plt+0x15d50>
   27290:	mov	r3, #0
   27294:	str	r3, [fp, #-64]	; 0xffffffc0
   27298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2729c:	cmp	r3, #0
   272a0:	beq	272b8 <__assert_fail@plt+0x15d74>
   272a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   272a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   272ac:	add	r3, r2, r3
   272b0:	ldrb	r3, [r3]
   272b4:	b	272bc <__assert_fail@plt+0x15d78>
   272b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   272bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   272c0:	add	r3, r2, r3
   272c4:	ldrb	r3, [r3]
   272c8:	cmp	r3, #0
   272cc:	bne	272f0 <__assert_fail@plt+0x15dac>
   272d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   272d4:	sub	r3, r3, #1
   272d8:	str	r3, [fp, #-72]	; 0xffffffb8
   272dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   272e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   272e4:	cmp	r2, r3
   272e8:	bge	27268 <__assert_fail@plt+0x15d24>
   272ec:	b	272f4 <__assert_fail@plt+0x15db0>
   272f0:	nop			; (mov r0, r0)
   272f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   272f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   272fc:	cmp	r2, r3
   27300:	bge	2741c <__assert_fail@plt+0x15ed8>
   27304:	b	27a50 <__assert_fail@plt+0x1650c>
   27308:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2730c:	ldr	r3, [fp, #-184]	; 0xffffff48
   27310:	sub	r3, r2, r3
   27314:	str	r3, [fp, #-12]
   27318:	ldr	r3, [fp, #-176]	; 0xffffff50
   2731c:	mov	r2, r3
   27320:	ldr	r3, [fp, #-12]
   27324:	cmp	r2, r3
   27328:	movls	r3, #1
   2732c:	movhi	r3, #0
   27330:	uxtb	r3, r3
   27334:	cmp	r3, #0
   27338:	beq	27380 <__assert_fail@plt+0x15e3c>
   2733c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   27340:	sub	r3, fp, #208	; 0xd0
   27344:	ldr	r2, [fp, #20]
   27348:	mov	r0, r3
   2734c:	bl	194ec <__assert_fail@plt+0x7fa8>
   27350:	str	r0, [fp, #-8]
   27354:	ldr	r3, [fp, #-8]
   27358:	cmp	r3, #0
   2735c:	movne	r3, #1
   27360:	moveq	r3, #0
   27364:	uxtb	r3, r3
   27368:	cmp	r3, #0
   2736c:	bne	27a34 <__assert_fail@plt+0x164f0>
   27370:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27374:	ldr	r3, [fp, #-184]	; 0xffffff48
   27378:	sub	r3, r2, r3
   2737c:	str	r3, [fp, #-12]
   27380:	ldr	r3, [fp, #-180]	; 0xffffff4c
   27384:	mov	r2, r3
   27388:	ldr	r3, [fp, #-12]
   2738c:	cmp	r2, r3
   27390:	bls	273a8 <__assert_fail@plt+0x15e64>
   27394:	ldr	r2, [fp, #-204]	; 0xffffff34
   27398:	ldr	r3, [fp, #-12]
   2739c:	add	r3, r2, r3
   273a0:	ldrb	r3, [r3]
   273a4:	b	273ac <__assert_fail@plt+0x15e68>
   273a8:	mov	r3, #0
   273ac:	str	r3, [fp, #-64]	; 0xffffffc0
   273b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   273b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   273b8:	add	r3, r2, r3
   273bc:	ldrb	r3, [r3]
   273c0:	cmp	r3, #0
   273c4:	bne	27404 <__assert_fail@plt+0x15ec0>
   273c8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   273cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   273d0:	add	r3, r2, r3
   273d4:	str	r3, [fp, #-72]	; 0xffffffb8
   273d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   273dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   273e0:	cmp	r2, r3
   273e4:	blt	273f8 <__assert_fail@plt+0x15eb4>
   273e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   273ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   273f0:	cmp	r2, r3
   273f4:	ble	27308 <__assert_fail@plt+0x15dc4>
   273f8:	mov	r3, #1
   273fc:	str	r3, [fp, #-8]
   27400:	b	27a50 <__assert_fail@plt+0x1650c>
   27404:	nop			; (mov r0, r0)
   27408:	b	27420 <__assert_fail@plt+0x15edc>
   2740c:	nop			; (mov r0, r0)
   27410:	b	27420 <__assert_fail@plt+0x15edc>
   27414:	nop			; (mov r0, r0)
   27418:	b	27420 <__assert_fail@plt+0x15edc>
   2741c:	nop			; (mov r0, r0)
   27420:	ldr	r1, [fp, #-72]	; 0xffffffb8
   27424:	sub	r3, fp, #208	; 0xd0
   27428:	ldr	r2, [fp, #20]
   2742c:	mov	r0, r3
   27430:	bl	194ec <__assert_fail@plt+0x7fa8>
   27434:	str	r0, [fp, #-8]
   27438:	ldr	r3, [fp, #-8]
   2743c:	cmp	r3, #0
   27440:	movne	r3, #1
   27444:	moveq	r3, #0
   27448:	uxtb	r3, r3
   2744c:	cmp	r3, #0
   27450:	bne	27a3c <__assert_fail@plt+0x164f8>
   27454:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   27458:	eor	r3, r3, #1
   2745c:	uxtb	r3, r3
   27460:	cmp	r3, #0
   27464:	beq	27484 <__assert_fail@plt+0x15f40>
   27468:	ldr	r3, [fp, #-180]	; 0xffffff4c
   2746c:	cmp	r3, #0
   27470:	beq	27484 <__assert_fail@plt+0x15f40>
   27474:	ldr	r3, [fp, #-200]	; 0xffffff38
   27478:	ldr	r3, [r3]
   2747c:	cmn	r3, #1
   27480:	beq	2760c <__assert_fail@plt+0x160c8>
   27484:	mov	r3, #0
   27488:	str	r3, [fp, #-88]	; 0xffffffa8
   2748c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   27490:	str	r3, [fp, #-100]	; 0xffffff9c
   27494:	ldr	r3, [fp, #-100]	; 0xffffff9c
   27498:	str	r3, [fp, #-104]	; 0xffffff98
   2749c:	ldr	r2, [fp, #-228]	; 0xffffff1c
   274a0:	ldr	r3, [fp, #4]
   274a4:	cmp	r2, r3
   274a8:	bgt	274b4 <__assert_fail@plt+0x15f70>
   274ac:	sub	r3, fp, #72	; 0x48
   274b0:	b	274b8 <__assert_fail@plt+0x15f74>
   274b4:	mov	r3, #0
   274b8:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   274bc:	sub	r0, fp, #208	; 0xd0
   274c0:	mov	r2, r3
   274c4:	bl	27e00 <__assert_fail@plt+0x168bc>
   274c8:	str	r0, [fp, #-24]	; 0xffffffe8
   274cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274d0:	cmn	r3, #1
   274d4:	beq	275fc <__assert_fail@plt+0x160b8>
   274d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   274dc:	cmn	r3, #2
   274e0:	moveq	r3, #1
   274e4:	movne	r3, #0
   274e8:	uxtb	r3, r3
   274ec:	cmp	r3, #0
   274f0:	beq	27500 <__assert_fail@plt+0x15fbc>
   274f4:	mov	r3, #12
   274f8:	str	r3, [fp, #-8]
   274fc:	b	27a50 <__assert_fail@plt+0x1650c>
   27500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27504:	str	r3, [fp, #-116]	; 0xffffff8c
   27508:	ldr	r3, [fp, #-216]	; 0xffffff28
   2750c:	ldrb	r3, [r3, #28]
   27510:	and	r3, r3, #16
   27514:	uxtb	r3, r3
   27518:	cmp	r3, #0
   2751c:	bne	2752c <__assert_fail@plt+0x15fe8>
   27520:	ldr	r3, [fp, #12]
   27524:	cmp	r3, #1
   27528:	bhi	2753c <__assert_fail@plt+0x15ff8>
   2752c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27530:	ldr	r3, [r3, #76]	; 0x4c
   27534:	cmp	r3, #0
   27538:	beq	27570 <__assert_fail@plt+0x1602c>
   2753c:	ldr	r2, [fp, #-108]	; 0xffffff94
   27540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27544:	lsl	r3, r3, #2
   27548:	add	r3, r2, r3
   2754c:	ldr	r3, [r3]
   27550:	str	r3, [fp, #-68]	; 0xffffffbc
   27554:	sub	r3, fp, #208	; 0xd0
   27558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2755c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   27560:	mov	r0, r3
   27564:	bl	284e0 <__assert_fail@plt+0x16f9c>
   27568:	mov	r3, r0
   2756c:	str	r3, [fp, #-112]	; 0xffffff90
   27570:	ldr	r3, [fp, #-216]	; 0xffffff28
   27574:	ldrb	r3, [r3, #28]
   27578:	and	r3, r3, #16
   2757c:	uxtb	r3, r3
   27580:	cmp	r3, #0
   27584:	bne	275ac <__assert_fail@plt+0x16068>
   27588:	ldr	r3, [fp, #12]
   2758c:	cmp	r3, #1
   27590:	bls	275ac <__assert_fail@plt+0x16068>
   27594:	ldr	r3, [fp, #-20]	; 0xffffffec
   27598:	ldrb	r3, [r3, #88]	; 0x58
   2759c:	and	r3, r3, #1
   275a0:	uxtb	r3, r3
   275a4:	cmp	r3, #0
   275a8:	bne	275bc <__assert_fail@plt+0x16078>
   275ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   275b0:	ldr	r3, [r3, #76]	; 0x4c
   275b4:	cmp	r3, #0
   275b8:	beq	27628 <__assert_fail@plt+0x160e4>
   275bc:	sub	r3, fp, #208	; 0xd0
   275c0:	mov	r0, r3
   275c4:	bl	27a94 <__assert_fail@plt+0x16550>
   275c8:	str	r0, [fp, #-8]
   275cc:	ldr	r3, [fp, #-8]
   275d0:	cmp	r3, #0
   275d4:	beq	27624 <__assert_fail@plt+0x160e0>
   275d8:	ldr	r3, [fp, #-8]
   275dc:	cmp	r3, #1
   275e0:	movne	r3, #1
   275e4:	moveq	r3, #0
   275e8:	uxtb	r3, r3
   275ec:	cmp	r3, #0
   275f0:	bne	27a44 <__assert_fail@plt+0x16500>
   275f4:	mvn	r3, #0
   275f8:	str	r3, [fp, #-24]	; 0xffffffe8
   275fc:	sub	r3, fp, #208	; 0xd0
   27600:	mov	r0, r3
   27604:	bl	301e0 <__assert_fail@plt+0x1ec9c>
   27608:	b	27610 <__assert_fail@plt+0x160cc>
   2760c:	nop			; (mov r0, r0)
   27610:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27614:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27618:	add	r3, r2, r3
   2761c:	str	r3, [fp, #-72]	; 0xffffffb8
   27620:	b	270c0 <__assert_fail@plt+0x15b7c>
   27624:	nop			; (mov r0, r0)
   27628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2762c:	cmn	r3, #1
   27630:	ldr	r3, [fp, #-8]
   27634:	cmp	r3, #0
   27638:	ldr	r3, [fp, #12]
   2763c:	cmp	r3, #0
   27640:	beq	27a50 <__assert_fail@plt+0x1650c>
   27644:	mov	r3, #1
   27648:	str	r3, [fp, #-16]
   2764c:	b	2768c <__assert_fail@plt+0x16148>
   27650:	ldr	r3, [fp, #-16]
   27654:	lsl	r3, r3, #3
   27658:	ldr	r2, [fp, #16]
   2765c:	add	r2, r2, r3
   27660:	ldr	r3, [fp, #-16]
   27664:	lsl	r3, r3, #3
   27668:	ldr	r1, [fp, #16]
   2766c:	add	r3, r1, r3
   27670:	mvn	r1, #0
   27674:	str	r1, [r3, #4]
   27678:	ldr	r3, [r3, #4]
   2767c:	str	r3, [r2]
   27680:	ldr	r3, [fp, #-16]
   27684:	add	r3, r3, #1
   27688:	str	r3, [fp, #-16]
   2768c:	ldr	r2, [fp, #-16]
   27690:	ldr	r3, [fp, #12]
   27694:	cmp	r2, r3
   27698:	bcc	27650 <__assert_fail@plt+0x1610c>
   2769c:	ldr	r3, [fp, #16]
   276a0:	mov	r2, #0
   276a4:	str	r2, [r3]
   276a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   276ac:	ldr	r3, [fp, #16]
   276b0:	str	r2, [r3, #4]
   276b4:	ldr	r3, [fp, #-216]	; 0xffffff28
   276b8:	ldrb	r3, [r3, #28]
   276bc:	and	r3, r3, #16
   276c0:	uxtb	r3, r3
   276c4:	cmp	r3, #0
   276c8:	bne	2774c <__assert_fail@plt+0x16208>
   276cc:	ldr	r3, [fp, #12]
   276d0:	cmp	r3, #1
   276d4:	bls	2774c <__assert_fail@plt+0x16208>
   276d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   276dc:	ldrb	r3, [r3, #88]	; 0x58
   276e0:	and	r3, r3, #1
   276e4:	uxtb	r3, r3
   276e8:	cmp	r3, #0
   276ec:	beq	27708 <__assert_fail@plt+0x161c4>
   276f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   276f4:	ldr	r3, [r3, #76]	; 0x4c
   276f8:	cmp	r3, #0
   276fc:	ble	27708 <__assert_fail@plt+0x161c4>
   27700:	mov	r3, #1
   27704:	b	2770c <__assert_fail@plt+0x161c8>
   27708:	mov	r3, #0
   2770c:	and	r3, r3, #1
   27710:	uxtb	r3, r3
   27714:	sub	r1, fp, #208	; 0xd0
   27718:	str	r3, [sp]
   2771c:	ldr	r3, [fp, #16]
   27720:	ldr	r2, [fp, #12]
   27724:	ldr	r0, [fp, #-216]	; 0xffffff28
   27728:	bl	293d0 <__assert_fail@plt+0x17e8c>
   2772c:	str	r0, [fp, #-8]
   27730:	ldr	r3, [fp, #-8]
   27734:	cmp	r3, #0
   27738:	movne	r3, #1
   2773c:	moveq	r3, #0
   27740:	uxtb	r3, r3
   27744:	cmp	r3, #0
   27748:	bne	27a4c <__assert_fail@plt+0x16508>
   2774c:	mov	r3, #0
   27750:	str	r3, [fp, #-16]
   27754:	b	278bc <__assert_fail@plt+0x16378>
   27758:	ldr	r3, [fp, #-16]
   2775c:	lsl	r3, r3, #3
   27760:	ldr	r2, [fp, #16]
   27764:	add	r3, r2, r3
   27768:	ldr	r3, [r3]
   2776c:	cmn	r3, #1
   27770:	beq	278b0 <__assert_fail@plt+0x1636c>
   27774:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   27778:	cmp	r3, #0
   2777c:	movne	r3, #1
   27780:	moveq	r3, #0
   27784:	uxtb	r3, r3
   27788:	cmp	r3, #0
   2778c:	beq	27850 <__assert_fail@plt+0x1630c>
   27790:	ldr	r3, [fp, #-16]
   27794:	lsl	r3, r3, #3
   27798:	ldr	r2, [fp, #16]
   2779c:	add	r2, r2, r3
   277a0:	ldr	r3, [fp, #-16]
   277a4:	lsl	r3, r3, #3
   277a8:	ldr	r1, [fp, #16]
   277ac:	add	r3, r1, r3
   277b0:	ldr	r1, [r3]
   277b4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   277b8:	cmp	r1, r3
   277bc:	bne	277c8 <__assert_fail@plt+0x16284>
   277c0:	ldr	r3, [fp, #-176]	; 0xffffff50
   277c4:	b	277ec <__assert_fail@plt+0x162a8>
   277c8:	ldr	r1, [fp, #-196]	; 0xffffff3c
   277cc:	ldr	r3, [fp, #-16]
   277d0:	lsl	r3, r3, #3
   277d4:	ldr	r0, [fp, #16]
   277d8:	add	r3, r0, r3
   277dc:	ldr	r3, [r3]
   277e0:	lsl	r3, r3, #2
   277e4:	add	r3, r1, r3
   277e8:	ldr	r3, [r3]
   277ec:	str	r3, [r2]
   277f0:	ldr	r3, [fp, #-16]
   277f4:	lsl	r3, r3, #3
   277f8:	ldr	r2, [fp, #16]
   277fc:	add	r2, r2, r3
   27800:	ldr	r3, [fp, #-16]
   27804:	lsl	r3, r3, #3
   27808:	ldr	r1, [fp, #16]
   2780c:	add	r3, r1, r3
   27810:	ldr	r1, [r3, #4]
   27814:	ldr	r3, [fp, #-180]	; 0xffffff4c
   27818:	cmp	r1, r3
   2781c:	bne	27828 <__assert_fail@plt+0x162e4>
   27820:	ldr	r3, [fp, #-176]	; 0xffffff50
   27824:	b	2784c <__assert_fail@plt+0x16308>
   27828:	ldr	r1, [fp, #-196]	; 0xffffff3c
   2782c:	ldr	r3, [fp, #-16]
   27830:	lsl	r3, r3, #3
   27834:	ldr	r0, [fp, #16]
   27838:	add	r3, r0, r3
   2783c:	ldr	r3, [r3, #4]
   27840:	lsl	r3, r3, #2
   27844:	add	r3, r1, r3
   27848:	ldr	r3, [r3]
   2784c:	str	r3, [r2, #4]
   27850:	ldr	r3, [fp, #-16]
   27854:	lsl	r3, r3, #3
   27858:	ldr	r2, [fp, #16]
   2785c:	add	r3, r2, r3
   27860:	ldr	r2, [fp, #-16]
   27864:	lsl	r2, r2, #3
   27868:	ldr	r1, [fp, #16]
   2786c:	add	r2, r1, r2
   27870:	ldr	r1, [r2]
   27874:	ldr	r2, [fp, #-72]	; 0xffffffb8
   27878:	add	r2, r1, r2
   2787c:	str	r2, [r3]
   27880:	ldr	r3, [fp, #-16]
   27884:	lsl	r3, r3, #3
   27888:	ldr	r2, [fp, #16]
   2788c:	add	r3, r2, r3
   27890:	ldr	r2, [fp, #-16]
   27894:	lsl	r2, r2, #3
   27898:	ldr	r1, [fp, #16]
   2789c:	add	r2, r1, r2
   278a0:	ldr	r1, [r2, #4]
   278a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   278a8:	add	r2, r1, r2
   278ac:	str	r2, [r3, #4]
   278b0:	ldr	r3, [fp, #-16]
   278b4:	add	r3, r3, #1
   278b8:	str	r3, [fp, #-16]
   278bc:	ldr	r2, [fp, #-16]
   278c0:	ldr	r3, [fp, #12]
   278c4:	cmp	r2, r3
   278c8:	bcc	27758 <__assert_fail@plt+0x16214>
   278cc:	mov	r3, #0
   278d0:	str	r3, [fp, #-16]
   278d4:	b	27924 <__assert_fail@plt+0x163e0>
   278d8:	ldr	r2, [fp, #-16]
   278dc:	ldr	r3, [fp, #12]
   278e0:	add	r3, r2, r3
   278e4:	lsl	r3, r3, #3
   278e8:	ldr	r2, [fp, #16]
   278ec:	add	r3, r2, r3
   278f0:	mvn	r2, #0
   278f4:	str	r2, [r3]
   278f8:	ldr	r2, [fp, #-16]
   278fc:	ldr	r3, [fp, #12]
   27900:	add	r3, r2, r3
   27904:	lsl	r3, r3, #3
   27908:	ldr	r2, [fp, #16]
   2790c:	add	r3, r2, r3
   27910:	mvn	r2, #0
   27914:	str	r2, [r3, #4]
   27918:	ldr	r3, [fp, #-16]
   2791c:	add	r3, r3, #1
   27920:	str	r3, [fp, #-16]
   27924:	ldr	r2, [fp, #-16]
   27928:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2792c:	cmp	r2, r3
   27930:	blt	278d8 <__assert_fail@plt+0x16394>
   27934:	ldr	r3, [fp, #-20]	; 0xffffffec
   27938:	ldr	r3, [r3, #132]	; 0x84
   2793c:	cmp	r3, #0
   27940:	beq	27a50 <__assert_fail@plt+0x1650c>
   27944:	mov	r3, #0
   27948:	str	r3, [fp, #-16]
   2794c:	b	27a08 <__assert_fail@plt+0x164c4>
   27950:	ldr	r3, [fp, #-20]	; 0xffffffec
   27954:	ldr	r2, [r3, #132]	; 0x84
   27958:	ldr	r3, [fp, #-16]
   2795c:	lsl	r3, r3, #2
   27960:	add	r3, r2, r3
   27964:	ldr	r2, [r3]
   27968:	ldr	r3, [fp, #-16]
   2796c:	cmp	r2, r3
   27970:	beq	279fc <__assert_fail@plt+0x164b8>
   27974:	ldr	r3, [fp, #-16]
   27978:	add	r3, r3, #1
   2797c:	lsl	r3, r3, #3
   27980:	ldr	r2, [fp, #16]
   27984:	add	r3, r2, r3
   27988:	ldr	r2, [fp, #-20]	; 0xffffffec
   2798c:	ldr	r1, [r2, #132]	; 0x84
   27990:	ldr	r2, [fp, #-16]
   27994:	lsl	r2, r2, #2
   27998:	add	r2, r1, r2
   2799c:	ldr	r2, [r2]
   279a0:	add	r2, r2, #1
   279a4:	lsl	r2, r2, #3
   279a8:	ldr	r1, [fp, #16]
   279ac:	add	r2, r1, r2
   279b0:	ldr	r2, [r2]
   279b4:	str	r2, [r3]
   279b8:	ldr	r3, [fp, #-16]
   279bc:	add	r3, r3, #1
   279c0:	lsl	r3, r3, #3
   279c4:	ldr	r2, [fp, #16]
   279c8:	add	r3, r2, r3
   279cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   279d0:	ldr	r1, [r2, #132]	; 0x84
   279d4:	ldr	r2, [fp, #-16]
   279d8:	lsl	r2, r2, #2
   279dc:	add	r2, r1, r2
   279e0:	ldr	r2, [r2]
   279e4:	add	r2, r2, #1
   279e8:	lsl	r2, r2, #3
   279ec:	ldr	r1, [fp, #16]
   279f0:	add	r2, r1, r2
   279f4:	ldr	r2, [r2, #4]
   279f8:	str	r2, [r3, #4]
   279fc:	ldr	r3, [fp, #-16]
   27a00:	add	r3, r3, #1
   27a04:	str	r3, [fp, #-16]
   27a08:	ldr	r3, [fp, #-16]
   27a0c:	add	r3, r3, #1
   27a10:	mov	r2, r3
   27a14:	ldr	r3, [fp, #12]
   27a18:	cmp	r2, r3
   27a1c:	bcc	27950 <__assert_fail@plt+0x1640c>
   27a20:	b	27a50 <__assert_fail@plt+0x1650c>
   27a24:	nop			; (mov r0, r0)
   27a28:	b	27a50 <__assert_fail@plt+0x1650c>
   27a2c:	nop			; (mov r0, r0)
   27a30:	b	27a50 <__assert_fail@plt+0x1650c>
   27a34:	nop			; (mov r0, r0)
   27a38:	b	27a50 <__assert_fail@plt+0x1650c>
   27a3c:	nop			; (mov r0, r0)
   27a40:	b	27a50 <__assert_fail@plt+0x1650c>
   27a44:	nop			; (mov r0, r0)
   27a48:	b	27a50 <__assert_fail@plt+0x1650c>
   27a4c:	nop			; (mov r0, r0)
   27a50:	ldr	r3, [fp, #-108]	; 0xffffff94
   27a54:	mov	r0, r3
   27a58:	bl	14dec <__assert_fail@plt+0x38a8>
   27a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27a60:	ldr	r3, [r3, #76]	; 0x4c
   27a64:	cmp	r3, #0
   27a68:	beq	27a78 <__assert_fail@plt+0x16534>
   27a6c:	sub	r3, fp, #208	; 0xd0
   27a70:	mov	r0, r3
   27a74:	bl	30308 <__assert_fail@plt+0x1edc4>
   27a78:	sub	r3, fp, #208	; 0xd0
   27a7c:	mov	r0, r3
   27a80:	bl	1a4dc <__assert_fail@plt+0x8f98>
   27a84:	ldr	r3, [fp, #-8]
   27a88:	mov	r0, r3
   27a8c:	sub	sp, fp, #4
   27a90:	pop	{fp, pc}
   27a94:	push	{fp, lr}
   27a98:	add	fp, sp, #4
   27a9c:	sub	sp, sp, #72	; 0x48
   27aa0:	str	r0, [fp, #-64]	; 0xffffffc0
   27aa4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27aa8:	ldr	r3, [r3, #84]	; 0x54
   27aac:	str	r3, [fp, #-28]	; 0xffffffe4
   27ab0:	mov	r3, #0
   27ab4:	str	r3, [fp, #-24]	; 0xffffffe8
   27ab8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27abc:	ldr	r3, [r3, #100]	; 0x64
   27ac0:	cmp	r3, #0
   27ac4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27ac8:	ldr	r3, [r3, #92]	; 0x5c
   27acc:	str	r3, [fp, #-12]
   27ad0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27ad4:	ldr	r3, [r3, #96]	; 0x60
   27ad8:	str	r3, [fp, #-8]
   27adc:	ldr	r3, [fp, #-12]
   27ae0:	cmn	r3, #-1073741822	; 0xc0000002
   27ae4:	movhi	r3, #1
   27ae8:	movls	r3, #0
   27aec:	uxtb	r3, r3
   27af0:	cmp	r3, #0
   27af4:	beq	27b00 <__assert_fail@plt+0x165bc>
   27af8:	mov	r3, #12
   27afc:	b	27df4 <__assert_fail@plt+0x168b0>
   27b00:	ldr	r3, [fp, #-12]
   27b04:	add	r3, r3, #1
   27b08:	lsl	r3, r3, #2
   27b0c:	mov	r0, r3
   27b10:	bl	33244 <__assert_fail@plt+0x21d00>
   27b14:	mov	r3, r0
   27b18:	str	r3, [fp, #-20]	; 0xffffffec
   27b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b20:	cmp	r3, #0
   27b24:	moveq	r3, #1
   27b28:	movne	r3, #0
   27b2c:	uxtb	r3, r3
   27b30:	cmp	r3, #0
   27b34:	beq	27b44 <__assert_fail@plt+0x16600>
   27b38:	mov	r3, #12
   27b3c:	str	r3, [fp, #-16]
   27b40:	b	27de0 <__assert_fail@plt+0x1689c>
   27b44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27b48:	ldr	r3, [r3, #76]	; 0x4c
   27b4c:	cmp	r3, #0
   27b50:	beq	27d18 <__assert_fail@plt+0x167d4>
   27b54:	ldr	r3, [fp, #-12]
   27b58:	add	r3, r3, #1
   27b5c:	lsl	r3, r3, #2
   27b60:	mov	r0, r3
   27b64:	bl	33244 <__assert_fail@plt+0x21d00>
   27b68:	mov	r3, r0
   27b6c:	str	r3, [fp, #-24]	; 0xffffffe8
   27b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27b74:	cmp	r3, #0
   27b78:	moveq	r3, #1
   27b7c:	movne	r3, #0
   27b80:	uxtb	r3, r3
   27b84:	cmp	r3, #0
   27b88:	beq	27b98 <__assert_fail@plt+0x16654>
   27b8c:	mov	r3, #12
   27b90:	str	r3, [fp, #-16]
   27b94:	b	27de0 <__assert_fail@plt+0x1689c>
   27b98:	ldr	r3, [fp, #-12]
   27b9c:	add	r3, r3, #1
   27ba0:	lsl	r3, r3, #2
   27ba4:	mov	r2, r3
   27ba8:	mov	r1, #0
   27bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27bb0:	bl	11448 <memset@plt>
   27bb4:	sub	r0, fp, #56	; 0x38
   27bb8:	ldr	r3, [fp, #-12]
   27bbc:	str	r3, [sp]
   27bc0:	ldr	r3, [fp, #-8]
   27bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   27bcc:	bl	30a24 <__assert_fail@plt+0x1f4e0>
   27bd0:	sub	r3, fp, #56	; 0x38
   27bd4:	mov	r1, r3
   27bd8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   27bdc:	bl	29a24 <__assert_fail@plt+0x184e0>
   27be0:	str	r0, [fp, #-16]
   27be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27be8:	mov	r0, r3
   27bec:	bl	14dec <__assert_fail@plt+0x38a8>
   27bf0:	ldr	r3, [fp, #-16]
   27bf4:	cmp	r3, #0
   27bf8:	movne	r3, #1
   27bfc:	moveq	r3, #0
   27c00:	uxtb	r3, r3
   27c04:	cmp	r3, #0
   27c08:	bne	27dd4 <__assert_fail@plt+0x16890>
   27c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27c10:	ldr	r3, [r3]
   27c14:	cmp	r3, #0
   27c18:	bne	27ccc <__assert_fail@plt+0x16788>
   27c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27c20:	ldr	r3, [r3]
   27c24:	cmp	r3, #0
   27c28:	bne	27ccc <__assert_fail@plt+0x16788>
   27c2c:	ldr	r3, [fp, #-12]
   27c30:	sub	r3, r3, #1
   27c34:	str	r3, [fp, #-12]
   27c38:	ldr	r3, [fp, #-12]
   27c3c:	cmp	r3, #0
   27c40:	bge	27c50 <__assert_fail@plt+0x1670c>
   27c44:	mov	r3, #1
   27c48:	str	r3, [fp, #-16]
   27c4c:	b	27de0 <__assert_fail@plt+0x1689c>
   27c50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27c54:	ldr	r2, [r3, #100]	; 0x64
   27c58:	ldr	r3, [fp, #-12]
   27c5c:	lsl	r3, r3, #2
   27c60:	add	r3, r2, r3
   27c64:	ldr	r3, [r3]
   27c68:	cmp	r3, #0
   27c6c:	beq	27c2c <__assert_fail@plt+0x166e8>
   27c70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27c74:	ldr	r2, [r3, #100]	; 0x64
   27c78:	ldr	r3, [fp, #-12]
   27c7c:	lsl	r3, r3, #2
   27c80:	add	r3, r2, r3
   27c84:	ldr	r3, [r3]
   27c88:	ldrb	r3, [r3, #52]	; 0x34
   27c8c:	and	r3, r3, #16
   27c90:	uxtb	r3, r3
   27c94:	cmp	r3, #0
   27c98:	beq	27c2c <__assert_fail@plt+0x166e8>
   27c9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27ca0:	ldr	r2, [r3, #100]	; 0x64
   27ca4:	ldr	r3, [fp, #-12]
   27ca8:	lsl	r3, r3, #2
   27cac:	add	r3, r2, r3
   27cb0:	ldr	r3, [r3]
   27cb4:	ldr	r2, [fp, #-12]
   27cb8:	mov	r1, r3
   27cbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   27cc0:	bl	284e0 <__assert_fail@plt+0x16f9c>
   27cc4:	str	r0, [fp, #-8]
   27cc8:	b	27b98 <__assert_fail@plt+0x16654>
   27ccc:	ldr	r3, [fp, #-12]
   27cd0:	add	r3, r3, #1
   27cd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27cd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   27cdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27ce0:	bl	29fe8 <__assert_fail@plt+0x18aa4>
   27ce4:	str	r0, [fp, #-16]
   27ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27cec:	bl	14dec <__assert_fail@plt+0x38a8>
   27cf0:	mov	r3, #0
   27cf4:	str	r3, [fp, #-24]	; 0xffffffe8
   27cf8:	ldr	r3, [fp, #-16]
   27cfc:	cmp	r3, #0
   27d00:	movne	r3, #1
   27d04:	moveq	r3, #0
   27d08:	uxtb	r3, r3
   27d0c:	cmp	r3, #0
   27d10:	beq	27d8c <__assert_fail@plt+0x16848>
   27d14:	b	27de0 <__assert_fail@plt+0x1689c>
   27d18:	sub	r0, fp, #56	; 0x38
   27d1c:	ldr	r3, [fp, #-12]
   27d20:	str	r3, [sp]
   27d24:	ldr	r3, [fp, #-8]
   27d28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   27d30:	bl	30a24 <__assert_fail@plt+0x1f4e0>
   27d34:	sub	r3, fp, #56	; 0x38
   27d38:	mov	r1, r3
   27d3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   27d40:	bl	29a24 <__assert_fail@plt+0x184e0>
   27d44:	str	r0, [fp, #-16]
   27d48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27d4c:	mov	r0, r3
   27d50:	bl	14dec <__assert_fail@plt+0x38a8>
   27d54:	ldr	r3, [fp, #-16]
   27d58:	cmp	r3, #0
   27d5c:	movne	r3, #1
   27d60:	moveq	r3, #0
   27d64:	uxtb	r3, r3
   27d68:	cmp	r3, #0
   27d6c:	bne	27ddc <__assert_fail@plt+0x16898>
   27d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d74:	ldr	r3, [r3]
   27d78:	cmp	r3, #0
   27d7c:	bne	27d8c <__assert_fail@plt+0x16848>
   27d80:	mov	r3, #1
   27d84:	str	r3, [fp, #-16]
   27d88:	b	27de0 <__assert_fail@plt+0x1689c>
   27d8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27d90:	ldr	r3, [r3, #100]	; 0x64
   27d94:	mov	r0, r3
   27d98:	bl	14dec <__assert_fail@plt+0x38a8>
   27d9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   27da4:	str	r2, [r3, #100]	; 0x64
   27da8:	mov	r3, #0
   27dac:	str	r3, [fp, #-20]	; 0xffffffec
   27db0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27db4:	ldr	r2, [fp, #-8]
   27db8:	str	r2, [r3, #96]	; 0x60
   27dbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27dc0:	ldr	r2, [fp, #-12]
   27dc4:	str	r2, [r3, #92]	; 0x5c
   27dc8:	mov	r3, #0
   27dcc:	str	r3, [fp, #-16]
   27dd0:	b	27de0 <__assert_fail@plt+0x1689c>
   27dd4:	nop			; (mov r0, r0)
   27dd8:	b	27de0 <__assert_fail@plt+0x1689c>
   27ddc:	nop			; (mov r0, r0)
   27de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   27de4:	bl	14dec <__assert_fail@plt+0x38a8>
   27de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27dec:	bl	14dec <__assert_fail@plt+0x38a8>
   27df0:	ldr	r3, [fp, #-16]
   27df4:	mov	r0, r3
   27df8:	sub	sp, fp, #4
   27dfc:	pop	{fp, pc}
   27e00:	push	{fp, lr}
   27e04:	add	fp, sp, #4
   27e08:	sub	sp, sp, #80	; 0x50
   27e0c:	str	r0, [fp, #-72]	; 0xffffffb8
   27e10:	mov	r3, r1
   27e14:	str	r2, [fp, #-80]	; 0xffffffb0
   27e18:	strb	r3, [fp, #-73]	; 0xffffffb7
   27e1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27e20:	ldr	r3, [r3, #84]	; 0x54
   27e24:	str	r3, [fp, #-28]	; 0xffffffe4
   27e28:	mov	r3, #0
   27e2c:	str	r3, [fp, #-8]
   27e30:	mvn	r3, #0
   27e34:	str	r3, [fp, #-12]
   27e38:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27e3c:	ldr	r3, [r3, #40]	; 0x28
   27e40:	str	r3, [fp, #-32]	; 0xffffffe0
   27e44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   27e48:	cmp	r3, #0
   27e4c:	movne	r3, #1
   27e50:	moveq	r3, #0
   27e54:	strb	r3, [fp, #-17]	; 0xffffffef
   27e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27e5c:	str	r3, [fp, #-24]	; 0xffffffe8
   27e60:	mov	r3, #0
   27e64:	str	r3, [fp, #-64]	; 0xffffffc0
   27e68:	sub	r3, fp, #64	; 0x40
   27e6c:	str	r3, [fp, #-44]	; 0xffffffd4
   27e70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27e74:	str	r3, [fp, #-48]	; 0xffffffd0
   27e78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27e7c:	str	r3, [fp, #-52]	; 0xffffffcc
   27e80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27e84:	ldr	r3, [r3, #84]	; 0x54
   27e88:	str	r3, [fp, #-56]	; 0xffffffc8
   27e8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27e90:	ldr	r3, [r3, #36]	; 0x24
   27e94:	ldrb	r3, [r3, #52]	; 0x34
   27e98:	bic	r3, r3, #127	; 0x7f
   27e9c:	uxtb	r3, r3
   27ea0:	cmp	r3, #0
   27ea4:	beq	27f84 <__assert_fail@plt+0x16a40>
   27ea8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   27eac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   27eb0:	sub	r1, r3, #1
   27eb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   27eb8:	ldr	r3, [r3, #88]	; 0x58
   27ebc:	mov	r2, r3
   27ec0:	bl	1a538 <__assert_fail@plt+0x8ff4>
   27ec4:	str	r0, [fp, #-60]	; 0xffffffc4
   27ec8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27ecc:	and	r3, r3, #1
   27ed0:	cmp	r3, #0
   27ed4:	beq	27ee4 <__assert_fail@plt+0x169a0>
   27ed8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27edc:	ldr	r3, [r3, #40]	; 0x28
   27ee0:	b	27f8c <__assert_fail@plt+0x16a48>
   27ee4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27ee8:	cmp	r3, #0
   27eec:	bne	27efc <__assert_fail@plt+0x169b8>
   27ef0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27ef4:	ldr	r3, [r3, #36]	; 0x24
   27ef8:	b	27f8c <__assert_fail@plt+0x16a48>
   27efc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27f00:	and	r3, r3, #4
   27f04:	cmp	r3, #0
   27f08:	beq	27f28 <__assert_fail@plt+0x169e4>
   27f0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27f10:	and	r3, r3, #2
   27f14:	cmp	r3, #0
   27f18:	beq	27f28 <__assert_fail@plt+0x169e4>
   27f1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27f20:	ldr	r3, [r3, #48]	; 0x30
   27f24:	b	27f8c <__assert_fail@plt+0x16a48>
   27f28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27f2c:	and	r3, r3, #2
   27f30:	cmp	r3, #0
   27f34:	beq	27f44 <__assert_fail@plt+0x16a00>
   27f38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27f3c:	ldr	r3, [r3, #44]	; 0x2c
   27f40:	b	27f8c <__assert_fail@plt+0x16a48>
   27f44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27f48:	and	r3, r3, #4
   27f4c:	cmp	r3, #0
   27f50:	beq	27f78 <__assert_fail@plt+0x16a34>
   27f54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27f58:	ldr	r3, [r3, #36]	; 0x24
   27f5c:	ldr	r2, [r3, #40]	; 0x28
   27f60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27f64:	ldr	r1, [fp, #-56]	; 0xffffffc8
   27f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27f6c:	bl	1c25c <__assert_fail@plt+0xad18>
   27f70:	mov	r3, r0
   27f74:	b	27f8c <__assert_fail@plt+0x16a48>
   27f78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27f7c:	ldr	r3, [r3, #36]	; 0x24
   27f80:	b	27f8c <__assert_fail@plt+0x16a48>
   27f84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   27f88:	ldr	r3, [r3, #36]	; 0x24
   27f8c:	str	r3, [fp, #-16]
   27f90:	ldr	r3, [fp, #-16]
   27f94:	cmp	r3, #0
   27f98:	moveq	r3, #1
   27f9c:	movne	r3, #0
   27fa0:	uxtb	r3, r3
   27fa4:	cmp	r3, #0
   27fa8:	beq	27fbc <__assert_fail@plt+0x16a78>
   27fac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   27fb0:	cmp	r3, #12
   27fb4:	mvn	r3, #1
   27fb8:	b	283b0 <__assert_fail@plt+0x16e6c>
   27fbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27fc0:	ldr	r3, [r3, #100]	; 0x64
   27fc4:	cmp	r3, #0
   27fc8:	beq	2809c <__assert_fail@plt+0x16b58>
   27fcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   27fd0:	ldr	r2, [r3, #100]	; 0x64
   27fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27fd8:	lsl	r3, r3, #2
   27fdc:	add	r3, r2, r3
   27fe0:	ldr	r2, [fp, #-16]
   27fe4:	str	r2, [r3]
   27fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27fec:	ldr	r3, [r3, #76]	; 0x4c
   27ff0:	cmp	r3, #0
   27ff4:	beq	2809c <__assert_fail@plt+0x16b58>
   27ff8:	mov	r3, #0
   27ffc:	strb	r3, [fp, #-17]	; 0xffffffef
   28000:	ldr	r3, [fp, #-16]
   28004:	add	r3, r3, #4
   28008:	mov	r2, #0
   2800c:	mov	r1, r3
   28010:	ldr	r0, [fp, #-72]	; 0xffffffb8
   28014:	bl	2bc34 <__assert_fail@plt+0x1a6f0>
   28018:	mov	r3, r0
   2801c:	str	r3, [fp, #-64]	; 0xffffffc0
   28020:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28024:	cmp	r3, #0
   28028:	movne	r3, #1
   2802c:	moveq	r3, #0
   28030:	uxtb	r3, r3
   28034:	cmp	r3, #0
   28038:	beq	28044 <__assert_fail@plt+0x16b00>
   2803c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28040:	b	283b0 <__assert_fail@plt+0x16e6c>
   28044:	ldr	r3, [fp, #-16]
   28048:	ldrb	r3, [r3, #52]	; 0x34
   2804c:	and	r3, r3, #64	; 0x40
   28050:	uxtb	r3, r3
   28054:	cmp	r3, #0
   28058:	beq	2809c <__assert_fail@plt+0x16b58>
   2805c:	ldr	r3, [fp, #-16]
   28060:	add	r3, r3, #4
   28064:	mov	r1, r3
   28068:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2806c:	bl	2c190 <__assert_fail@plt+0x1ac4c>
   28070:	mov	r3, r0
   28074:	str	r3, [fp, #-64]	; 0xffffffc0
   28078:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2807c:	cmp	r3, #0
   28080:	movne	r3, #1
   28084:	moveq	r3, #0
   28088:	uxtb	r3, r3
   2808c:	cmp	r3, #0
   28090:	beq	2809c <__assert_fail@plt+0x16b58>
   28094:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28098:	b	283b0 <__assert_fail@plt+0x16e6c>
   2809c:	ldr	r3, [fp, #-16]
   280a0:	ldrb	r3, [r3, #52]	; 0x34
   280a4:	lsr	r3, r3, #4
   280a8:	and	r3, r3, #1
   280ac:	uxtb	r3, r3
   280b0:	cmp	r3, #0
   280b4:	beq	28368 <__assert_fail@plt+0x16e24>
   280b8:	ldr	r3, [fp, #-16]
   280bc:	ldrb	r3, [r3, #52]	; 0x34
   280c0:	bic	r3, r3, #127	; 0x7f
   280c4:	uxtb	r3, r3
   280c8:	cmp	r3, #0
   280cc:	beq	280ec <__assert_fail@plt+0x16ba8>
   280d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   280d4:	ldr	r1, [fp, #-16]
   280d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   280dc:	bl	284e0 <__assert_fail@plt+0x16f9c>
   280e0:	mov	r3, r0
   280e4:	cmp	r3, #0
   280e8:	beq	28368 <__assert_fail@plt+0x16e24>
   280ec:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   280f0:	eor	r3, r3, #1
   280f4:	uxtb	r3, r3
   280f8:	cmp	r3, #0
   280fc:	beq	28108 <__assert_fail@plt+0x16bc4>
   28100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28104:	b	283b0 <__assert_fail@plt+0x16e6c>
   28108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2810c:	str	r3, [fp, #-12]
   28110:	mov	r3, #1
   28114:	str	r3, [fp, #-8]
   28118:	b	28368 <__assert_fail@plt+0x16e24>
   2811c:	ldr	r3, [fp, #-16]
   28120:	str	r3, [fp, #-36]	; 0xffffffdc
   28124:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28128:	ldr	r3, [r3, #40]	; 0x28
   2812c:	add	r3, r3, #1
   28130:	str	r3, [fp, #-40]	; 0xffffffd8
   28134:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28138:	ldr	r2, [r3, #36]	; 0x24
   2813c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28140:	cmp	r2, r3
   28144:	movle	r3, #1
   28148:	movgt	r3, #0
   2814c:	uxtb	r3, r3
   28150:	cmp	r3, #0
   28154:	beq	28170 <__assert_fail@plt+0x16c2c>
   28158:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2815c:	ldr	r2, [r3, #36]	; 0x24
   28160:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28164:	ldr	r3, [r3, #48]	; 0x30
   28168:	cmp	r2, r3
   2816c:	blt	281ac <__assert_fail@plt+0x16c68>
   28170:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28174:	ldr	r2, [r3, #28]
   28178:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2817c:	cmp	r2, r3
   28180:	movle	r3, #1
   28184:	movgt	r3, #0
   28188:	uxtb	r3, r3
   2818c:	cmp	r3, #0
   28190:	beq	281f4 <__assert_fail@plt+0x16cb0>
   28194:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28198:	ldr	r2, [r3, #28]
   2819c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   281a0:	ldr	r3, [r3, #48]	; 0x30
   281a4:	cmp	r2, r3
   281a8:	bge	281f4 <__assert_fail@plt+0x16cb0>
   281ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   281b0:	add	r3, r3, #1
   281b4:	mov	r1, r3
   281b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   281bc:	bl	2fecc <__assert_fail@plt+0x1e988>
   281c0:	mov	r3, r0
   281c4:	str	r3, [fp, #-64]	; 0xffffffc0
   281c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   281cc:	cmp	r3, #0
   281d0:	movne	r3, #1
   281d4:	moveq	r3, #0
   281d8:	uxtb	r3, r3
   281dc:	cmp	r3, #0
   281e0:	beq	281f4 <__assert_fail@plt+0x16cb0>
   281e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   281e8:	cmp	r3, #12
   281ec:	mvn	r3, #1
   281f0:	b	283b0 <__assert_fail@plt+0x16e6c>
   281f4:	sub	r3, fp, #64	; 0x40
   281f8:	ldr	r2, [fp, #-16]
   281fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28200:	mov	r0, r3
   28204:	bl	2b708 <__assert_fail@plt+0x1a1c4>
   28208:	str	r0, [fp, #-16]
   2820c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28210:	ldr	r3, [r3, #100]	; 0x64
   28214:	cmp	r3, #0
   28218:	beq	28234 <__assert_fail@plt+0x16cf0>
   2821c:	sub	r3, fp, #64	; 0x40
   28220:	ldr	r2, [fp, #-16]
   28224:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28228:	mov	r0, r3
   2822c:	bl	2b8b8 <__assert_fail@plt+0x1a374>
   28230:	str	r0, [fp, #-16]
   28234:	ldr	r3, [fp, #-16]
   28238:	cmp	r3, #0
   2823c:	bne	282b4 <__assert_fail@plt+0x16d70>
   28240:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28244:	cmp	r3, #0
   28248:	movne	r3, #1
   2824c:	moveq	r3, #0
   28250:	uxtb	r3, r3
   28254:	cmp	r3, #0
   28258:	beq	28264 <__assert_fail@plt+0x16d20>
   2825c:	mvn	r3, #1
   28260:	b	283b0 <__assert_fail@plt+0x16e6c>
   28264:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28268:	ldr	r3, [r3, #100]	; 0x64
   2826c:	cmp	r3, #0
   28270:	beq	28388 <__assert_fail@plt+0x16e44>
   28274:	ldr	r3, [fp, #-8]
   28278:	cmp	r3, #0
   2827c:	beq	28294 <__assert_fail@plt+0x16d50>
   28280:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   28284:	eor	r3, r3, #1
   28288:	uxtb	r3, r3
   2828c:	cmp	r3, #0
   28290:	bne	28388 <__assert_fail@plt+0x16e44>
   28294:	sub	r3, fp, #64	; 0x40
   28298:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2829c:	mov	r0, r3
   282a0:	bl	2bb70 <__assert_fail@plt+0x1a62c>
   282a4:	str	r0, [fp, #-16]
   282a8:	ldr	r3, [fp, #-16]
   282ac:	cmp	r3, #0
   282b0:	beq	28388 <__assert_fail@plt+0x16e44>
   282b4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   282b8:	cmp	r3, #0
   282bc:	beq	282e4 <__assert_fail@plt+0x16da0>
   282c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   282c4:	ldr	r3, [fp, #-16]
   282c8:	cmp	r2, r3
   282cc:	bne	282dc <__assert_fail@plt+0x16d98>
   282d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   282d4:	str	r3, [fp, #-24]	; 0xffffffe8
   282d8:	b	282e4 <__assert_fail@plt+0x16da0>
   282dc:	mov	r3, #0
   282e0:	strb	r3, [fp, #-17]	; 0xffffffef
   282e4:	ldr	r3, [fp, #-16]
   282e8:	ldrb	r3, [r3, #52]	; 0x34
   282ec:	and	r3, r3, #16
   282f0:	uxtb	r3, r3
   282f4:	cmp	r3, #0
   282f8:	beq	28368 <__assert_fail@plt+0x16e24>
   282fc:	ldr	r3, [fp, #-16]
   28300:	ldrb	r3, [r3, #52]	; 0x34
   28304:	bic	r3, r3, #127	; 0x7f
   28308:	uxtb	r3, r3
   2830c:	cmp	r3, #0
   28310:	beq	28338 <__assert_fail@plt+0x16df4>
   28314:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28318:	ldr	r3, [r3, #40]	; 0x28
   2831c:	mov	r2, r3
   28320:	ldr	r1, [fp, #-16]
   28324:	ldr	r0, [fp, #-72]	; 0xffffffb8
   28328:	bl	284e0 <__assert_fail@plt+0x16f9c>
   2832c:	mov	r3, r0
   28330:	cmp	r3, #0
   28334:	beq	28368 <__assert_fail@plt+0x16e24>
   28338:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2833c:	ldr	r3, [r3, #40]	; 0x28
   28340:	str	r3, [fp, #-12]
   28344:	mov	r3, #1
   28348:	str	r3, [fp, #-8]
   2834c:	mov	r3, #0
   28350:	str	r3, [fp, #-80]	; 0xffffffb0
   28354:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   28358:	eor	r3, r3, #1
   2835c:	uxtb	r3, r3
   28360:	cmp	r3, #0
   28364:	bne	28384 <__assert_fail@plt+0x16e40>
   28368:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2836c:	ldr	r2, [r3, #56]	; 0x38
   28370:	ldr	r3, [fp, #-72]	; 0xffffffb8
   28374:	ldr	r3, [r3, #40]	; 0x28
   28378:	cmp	r2, r3
   2837c:	bgt	2811c <__assert_fail@plt+0x16bd8>
   28380:	b	28388 <__assert_fail@plt+0x16e44>
   28384:	nop			; (mov r0, r0)
   28388:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2838c:	cmp	r3, #0
   28390:	beq	283ac <__assert_fail@plt+0x16e68>
   28394:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28398:	ldr	r2, [r3]
   2839c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   283a0:	add	r2, r2, r3
   283a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   283a8:	str	r2, [r3]
   283ac:	ldr	r3, [fp, #-12]
   283b0:	mov	r0, r3
   283b4:	sub	sp, fp, #4
   283b8:	pop	{fp, pc}
   283bc:	push	{fp}		; (str fp, [sp, #-4]!)
   283c0:	add	fp, sp, #0
   283c4:	sub	sp, sp, #28
   283c8:	str	r0, [fp, #-16]
   283cc:	str	r1, [fp, #-20]	; 0xffffffec
   283d0:	str	r2, [fp, #-24]	; 0xffffffe8
   283d4:	ldr	r3, [fp, #-16]
   283d8:	ldr	r2, [r3]
   283dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   283e0:	lsl	r3, r3, #3
   283e4:	add	r3, r2, r3
   283e8:	ldrb	r3, [r3, #4]
   283ec:	str	r3, [fp, #-8]
   283f0:	ldr	r3, [fp, #-16]
   283f4:	ldr	r2, [r3]
   283f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   283fc:	lsl	r3, r3, #3
   28400:	add	r3, r2, r3
   28404:	ldr	r3, [r3, #4]
   28408:	lsr	r3, r3, #8
   2840c:	lsl	r3, r3, #22
   28410:	lsr	r3, r3, #22
   28414:	uxth	r3, r3
   28418:	str	r3, [fp, #-12]
   2841c:	ldr	r3, [fp, #-8]
   28420:	cmp	r3, #2
   28424:	beq	28430 <__assert_fail@plt+0x16eec>
   28428:	mov	r3, #0
   2842c:	b	284d0 <__assert_fail@plt+0x16f8c>
   28430:	ldr	r3, [fp, #-12]
   28434:	cmp	r3, #0
   28438:	bne	28444 <__assert_fail@plt+0x16f00>
   2843c:	mov	r3, #1
   28440:	b	284d0 <__assert_fail@plt+0x16f8c>
   28444:	ldr	r3, [fp, #-12]
   28448:	and	r3, r3, #4
   2844c:	cmp	r3, #0
   28450:	beq	28464 <__assert_fail@plt+0x16f20>
   28454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28458:	and	r3, r3, #1
   2845c:	cmp	r3, #0
   28460:	beq	284c4 <__assert_fail@plt+0x16f80>
   28464:	ldr	r3, [fp, #-12]
   28468:	and	r3, r3, #8
   2846c:	cmp	r3, #0
   28470:	beq	28484 <__assert_fail@plt+0x16f40>
   28474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28478:	and	r3, r3, #1
   2847c:	cmp	r3, #0
   28480:	bne	284c4 <__assert_fail@plt+0x16f80>
   28484:	ldr	r3, [fp, #-12]
   28488:	and	r3, r3, #32
   2848c:	cmp	r3, #0
   28490:	beq	284a4 <__assert_fail@plt+0x16f60>
   28494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28498:	and	r3, r3, #2
   2849c:	cmp	r3, #0
   284a0:	beq	284c4 <__assert_fail@plt+0x16f80>
   284a4:	ldr	r3, [fp, #-12]
   284a8:	and	r3, r3, #128	; 0x80
   284ac:	cmp	r3, #0
   284b0:	beq	284cc <__assert_fail@plt+0x16f88>
   284b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   284b8:	and	r3, r3, #8
   284bc:	cmp	r3, #0
   284c0:	bne	284cc <__assert_fail@plt+0x16f88>
   284c4:	mov	r3, #0
   284c8:	b	284d0 <__assert_fail@plt+0x16f8c>
   284cc:	mov	r3, #1
   284d0:	mov	r0, r3
   284d4:	add	sp, fp, #0
   284d8:	pop	{fp}		; (ldr fp, [sp], #4)
   284dc:	bx	lr
   284e0:	push	{fp, lr}
   284e4:	add	fp, sp, #4
   284e8:	sub	sp, sp, #24
   284ec:	str	r0, [fp, #-16]
   284f0:	str	r1, [fp, #-20]	; 0xffffffec
   284f4:	str	r2, [fp, #-24]	; 0xffffffe8
   284f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   284fc:	ldrb	r3, [r3, #52]	; 0x34
   28500:	and	r3, r3, #16
   28504:	uxtb	r3, r3
   28508:	cmp	r3, #0
   2850c:	ldr	r0, [fp, #-16]
   28510:	ldr	r3, [fp, #-16]
   28514:	ldr	r3, [r3, #88]	; 0x58
   28518:	mov	r2, r3
   2851c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   28520:	bl	1a538 <__assert_fail@plt+0x8ff4>
   28524:	str	r0, [fp, #-12]
   28528:	mov	r3, #0
   2852c:	str	r3, [fp, #-8]
   28530:	b	28594 <__assert_fail@plt+0x17050>
   28534:	ldr	r3, [fp, #-16]
   28538:	ldr	r0, [r3, #84]	; 0x54
   2853c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28540:	ldr	r2, [r3, #12]
   28544:	ldr	r3, [fp, #-8]
   28548:	lsl	r3, r3, #2
   2854c:	add	r3, r2, r3
   28550:	ldr	r3, [r3]
   28554:	ldr	r2, [fp, #-12]
   28558:	mov	r1, r3
   2855c:	bl	283bc <__assert_fail@plt+0x16e78>
   28560:	mov	r3, r0
   28564:	cmp	r3, #0
   28568:	beq	28588 <__assert_fail@plt+0x17044>
   2856c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28570:	ldr	r2, [r3, #12]
   28574:	ldr	r3, [fp, #-8]
   28578:	lsl	r3, r3, #2
   2857c:	add	r3, r2, r3
   28580:	ldr	r3, [r3]
   28584:	b	285ac <__assert_fail@plt+0x17068>
   28588:	ldr	r3, [fp, #-8]
   2858c:	add	r3, r3, #1
   28590:	str	r3, [fp, #-8]
   28594:	ldr	r3, [fp, #-20]	; 0xffffffec
   28598:	ldr	r2, [r3, #8]
   2859c:	ldr	r3, [fp, #-8]
   285a0:	cmp	r2, r3
   285a4:	bgt	28534 <__assert_fail@plt+0x16ff0>
   285a8:	mov	r3, #0
   285ac:	mov	r0, r3
   285b0:	sub	sp, fp, #4
   285b4:	pop	{fp, pc}
   285b8:	push	{fp, lr}
   285bc:	add	fp, sp, #4
   285c0:	sub	sp, sp, #88	; 0x58
   285c4:	str	r0, [fp, #-64]	; 0xffffffc0
   285c8:	str	r1, [fp, #-68]	; 0xffffffbc
   285cc:	str	r2, [fp, #-72]	; 0xffffffb8
   285d0:	str	r3, [fp, #-76]	; 0xffffffb4
   285d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   285d8:	ldr	r3, [r3, #84]	; 0x54
   285dc:	str	r3, [fp, #-20]	; 0xffffffec
   285e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   285e4:	ldr	r2, [r3]
   285e8:	ldr	r3, [fp, #8]
   285ec:	lsl	r3, r3, #3
   285f0:	add	r3, r2, r3
   285f4:	ldrb	r3, [r3, #4]
   285f8:	and	r3, r3, #8
   285fc:	cmp	r3, #0
   28600:	beq	28798 <__assert_fail@plt+0x17254>
   28604:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28608:	ldr	r2, [r3, #100]	; 0x64
   2860c:	ldr	r3, [fp, #4]
   28610:	ldr	r3, [r3]
   28614:	lsl	r3, r3, #2
   28618:	add	r3, r2, r3
   2861c:	ldr	r3, [r3]
   28620:	add	r3, r3, #4
   28624:	str	r3, [fp, #-24]	; 0xffffffe8
   28628:	ldr	r3, [fp, #-20]	; 0xffffffec
   2862c:	ldr	r1, [r3, #20]
   28630:	ldr	r2, [fp, #8]
   28634:	mov	r3, r2
   28638:	lsl	r3, r3, #1
   2863c:	add	r3, r3, r2
   28640:	lsl	r3, r3, #2
   28644:	add	r3, r1, r3
   28648:	str	r3, [fp, #-28]	; 0xffffffe4
   2864c:	ldr	r1, [fp, #8]
   28650:	ldr	r0, [fp, #12]
   28654:	bl	1bac4 <__assert_fail@plt+0xa580>
   28658:	mov	r3, r0
   2865c:	cmp	r3, #0
   28660:	bne	28694 <__assert_fail@plt+0x17150>
   28664:	ldr	r1, [fp, #8]
   28668:	ldr	r0, [fp, #12]
   2866c:	bl	1b6b4 <__assert_fail@plt+0xa170>
   28670:	mov	r3, r0
   28674:	strb	r3, [fp, #-29]	; 0xffffffe3
   28678:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2867c:	eor	r3, r3, #1
   28680:	uxtb	r3, r3
   28684:	cmp	r3, #0
   28688:	beq	28694 <__assert_fail@plt+0x17150>
   2868c:	mvn	r3, #1
   28690:	b	28b30 <__assert_fail@plt+0x175ec>
   28694:	mvn	r3, #0
   28698:	str	r3, [fp, #-8]
   2869c:	mov	r3, #0
   286a0:	str	r3, [fp, #-12]
   286a4:	b	28774 <__assert_fail@plt+0x17230>
   286a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   286ac:	ldr	r2, [r3, #8]
   286b0:	ldr	r3, [fp, #-12]
   286b4:	lsl	r3, r3, #2
   286b8:	add	r3, r2, r3
   286bc:	ldr	r3, [r3]
   286c0:	str	r3, [fp, #-36]	; 0xffffffdc
   286c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   286c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   286cc:	bl	1bac4 <__assert_fail@plt+0xa580>
   286d0:	mov	r3, r0
   286d4:	cmp	r3, #0
   286d8:	beq	28764 <__assert_fail@plt+0x17220>
   286dc:	ldr	r3, [fp, #-8]
   286e0:	cmn	r3, #1
   286e4:	bne	286f4 <__assert_fail@plt+0x171b0>
   286e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   286ec:	str	r3, [fp, #-8]
   286f0:	b	28768 <__assert_fail@plt+0x17224>
   286f4:	ldr	r1, [fp, #-8]
   286f8:	ldr	r0, [fp, #12]
   286fc:	bl	1bac4 <__assert_fail@plt+0xa580>
   28700:	mov	r3, r0
   28704:	cmp	r3, #0
   28708:	beq	28714 <__assert_fail@plt+0x171d0>
   2870c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28710:	b	28b30 <__assert_fail@plt+0x175ec>
   28714:	ldr	r3, [fp, #16]
   28718:	cmp	r3, #0
   2871c:	beq	2878c <__assert_fail@plt+0x17248>
   28720:	ldr	r3, [fp, #4]
   28724:	ldr	r1, [r3]
   28728:	ldr	r3, [fp, #12]
   2872c:	str	r3, [sp, #8]
   28730:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28734:	str	r3, [sp, #4]
   28738:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2873c:	str	r3, [sp]
   28740:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28744:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28748:	ldr	r0, [fp, #16]
   2874c:	bl	28b3c <__assert_fail@plt+0x175f8>
   28750:	mov	r3, r0
   28754:	cmp	r3, #0
   28758:	beq	2878c <__assert_fail@plt+0x17248>
   2875c:	mvn	r3, #1
   28760:	b	28b30 <__assert_fail@plt+0x175ec>
   28764:	nop			; (mov r0, r0)
   28768:	ldr	r3, [fp, #-12]
   2876c:	add	r3, r3, #1
   28770:	str	r3, [fp, #-12]
   28774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28778:	ldr	r2, [r3, #4]
   2877c:	ldr	r3, [fp, #-12]
   28780:	cmp	r2, r3
   28784:	bgt	286a8 <__assert_fail@plt+0x17164>
   28788:	b	28790 <__assert_fail@plt+0x1724c>
   2878c:	nop			; (mov r0, r0)
   28790:	ldr	r3, [fp, #-8]
   28794:	b	28b30 <__assert_fail@plt+0x175ec>
   28798:	mov	r3, #0
   2879c:	str	r3, [fp, #-16]
   287a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   287a4:	ldr	r2, [r3]
   287a8:	ldr	r3, [fp, #8]
   287ac:	lsl	r3, r3, #3
   287b0:	add	r3, r2, r3
   287b4:	ldrb	r3, [r3, #4]
   287b8:	str	r3, [fp, #-40]	; 0xffffffd8
   287bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   287c0:	ldr	r2, [r3]
   287c4:	ldr	r3, [fp, #8]
   287c8:	lsl	r3, r3, #3
   287cc:	add	r3, r2, r3
   287d0:	ldrb	r3, [r3, #6]
   287d4:	and	r3, r3, #16
   287d8:	uxtb	r3, r3
   287dc:	cmp	r3, #0
   287e0:	beq	28804 <__assert_fail@plt+0x172c0>
   287e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   287e8:	ldr	r3, [fp, #4]
   287ec:	ldr	r3, [r3]
   287f0:	ldr	r1, [fp, #8]
   287f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   287f8:	bl	2f718 <__assert_fail@plt+0x1e1d4>
   287fc:	str	r0, [fp, #-16]
   28800:	b	28a00 <__assert_fail@plt+0x174bc>
   28804:	ldr	r3, [fp, #-40]	; 0xffffffd8
   28808:	cmp	r3, #4
   2880c:	bne	28a00 <__assert_fail@plt+0x174bc>
   28810:	ldr	r3, [fp, #-20]	; 0xffffffec
   28814:	ldr	r2, [r3]
   28818:	ldr	r3, [fp, #8]
   2881c:	lsl	r3, r3, #3
   28820:	add	r3, r2, r3
   28824:	ldr	r3, [r3]
   28828:	add	r3, r3, #1
   2882c:	str	r3, [fp, #-44]	; 0xffffffd4
   28830:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28834:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28838:	cmp	r2, r3
   2883c:	bge	28870 <__assert_fail@plt+0x1732c>
   28840:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28844:	lsl	r3, r3, #3
   28848:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2884c:	add	r3, r2, r3
   28850:	ldr	r2, [r3, #4]
   28854:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28858:	lsl	r3, r3, #3
   2885c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   28860:	add	r3, r1, r3
   28864:	ldr	r3, [r3]
   28868:	sub	r3, r2, r3
   2886c:	str	r3, [fp, #-16]
   28870:	ldr	r3, [fp, #16]
   28874:	cmp	r3, #0
   28878:	beq	28958 <__assert_fail@plt+0x17414>
   2887c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   28880:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28884:	cmp	r2, r3
   28888:	bge	288c4 <__assert_fail@plt+0x17380>
   2888c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28890:	lsl	r3, r3, #3
   28894:	ldr	r2, [fp, #-72]	; 0xffffffb8
   28898:	add	r3, r2, r3
   2889c:	ldr	r3, [r3]
   288a0:	cmn	r3, #1
   288a4:	beq	288c4 <__assert_fail@plt+0x17380>
   288a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   288ac:	lsl	r3, r3, #3
   288b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   288b4:	add	r3, r2, r3
   288b8:	ldr	r3, [r3, #4]
   288bc:	cmn	r3, #1
   288c0:	bne	288cc <__assert_fail@plt+0x17388>
   288c4:	mvn	r3, #0
   288c8:	b	28b30 <__assert_fail@plt+0x175ec>
   288cc:	ldr	r3, [fp, #-16]
   288d0:	cmp	r3, #0
   288d4:	beq	28958 <__assert_fail@plt+0x17414>
   288d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   288dc:	ldr	r3, [r3, #4]
   288e0:	str	r3, [fp, #-48]	; 0xffffffd0
   288e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   288e8:	ldr	r2, [r3, #28]
   288ec:	ldr	r3, [fp, #4]
   288f0:	ldr	r3, [r3]
   288f4:	sub	r2, r2, r3
   288f8:	ldr	r3, [fp, #-16]
   288fc:	cmp	r2, r3
   28900:	blt	28950 <__assert_fail@plt+0x1740c>
   28904:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28908:	lsl	r3, r3, #3
   2890c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   28910:	add	r3, r2, r3
   28914:	ldr	r3, [r3]
   28918:	mov	r2, r3
   2891c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28920:	add	r0, r3, r2
   28924:	ldr	r3, [fp, #4]
   28928:	ldr	r3, [r3]
   2892c:	mov	r2, r3
   28930:	ldr	r3, [fp, #-48]	; 0xffffffd0
   28934:	add	r3, r3, r2
   28938:	ldr	r2, [fp, #-16]
   2893c:	mov	r1, r3
   28940:	bl	112a4 <memcmp@plt>
   28944:	mov	r3, r0
   28948:	cmp	r3, #0
   2894c:	beq	28958 <__assert_fail@plt+0x17414>
   28950:	mvn	r3, #0
   28954:	b	28b30 <__assert_fail@plt+0x175ec>
   28958:	ldr	r3, [fp, #-16]
   2895c:	cmp	r3, #0
   28960:	bne	28a00 <__assert_fail@plt+0x174bc>
   28964:	ldr	r1, [fp, #8]
   28968:	ldr	r0, [fp, #12]
   2896c:	bl	1b6b4 <__assert_fail@plt+0xa170>
   28970:	mov	r3, r0
   28974:	strb	r3, [fp, #-49]	; 0xffffffcf
   28978:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2897c:	eor	r3, r3, #1
   28980:	uxtb	r3, r3
   28984:	cmp	r3, #0
   28988:	beq	28994 <__assert_fail@plt+0x17450>
   2898c:	mvn	r3, #1
   28990:	b	28b30 <__assert_fail@plt+0x175ec>
   28994:	ldr	r3, [fp, #-20]	; 0xffffffec
   28998:	ldr	r1, [r3, #20]
   2899c:	ldr	r2, [fp, #8]
   289a0:	mov	r3, r2
   289a4:	lsl	r3, r3, #1
   289a8:	add	r3, r3, r2
   289ac:	lsl	r3, r3, #2
   289b0:	add	r3, r1, r3
   289b4:	ldr	r3, [r3, #8]
   289b8:	ldr	r3, [r3]
   289bc:	str	r3, [fp, #-56]	; 0xffffffc8
   289c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   289c4:	ldr	r2, [r3, #100]	; 0x64
   289c8:	ldr	r3, [fp, #4]
   289cc:	ldr	r3, [r3]
   289d0:	lsl	r3, r3, #2
   289d4:	add	r3, r2, r3
   289d8:	ldr	r3, [r3]
   289dc:	add	r3, r3, #4
   289e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   289e4:	mov	r0, r3
   289e8:	bl	1bac4 <__assert_fail@plt+0xa580>
   289ec:	mov	r3, r0
   289f0:	cmp	r3, #0
   289f4:	beq	28a00 <__assert_fail@plt+0x174bc>
   289f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   289fc:	b	28b30 <__assert_fail@plt+0x175ec>
   28a00:	ldr	r3, [fp, #-16]
   28a04:	cmp	r3, #0
   28a08:	bne	28a40 <__assert_fail@plt+0x174fc>
   28a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a10:	ldr	r2, [r3]
   28a14:	ldr	r3, [fp, #8]
   28a18:	lsl	r3, r3, #3
   28a1c:	add	r1, r2, r3
   28a20:	ldr	r3, [fp, #4]
   28a24:	ldr	r3, [r3]
   28a28:	mov	r2, r3
   28a2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   28a30:	bl	2fc78 <__assert_fail@plt+0x1e734>
   28a34:	mov	r3, r0
   28a38:	cmp	r3, #0
   28a3c:	beq	28b2c <__assert_fail@plt+0x175e8>
   28a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a44:	ldr	r2, [r3, #12]
   28a48:	ldr	r3, [fp, #8]
   28a4c:	lsl	r3, r3, #2
   28a50:	add	r3, r2, r3
   28a54:	ldr	r3, [r3]
   28a58:	str	r3, [fp, #-60]	; 0xffffffc4
   28a5c:	ldr	r3, [fp, #-16]
   28a60:	cmp	r3, #0
   28a64:	bne	28a78 <__assert_fail@plt+0x17534>
   28a68:	ldr	r3, [fp, #4]
   28a6c:	ldr	r3, [r3]
   28a70:	add	r3, r3, #1
   28a74:	b	28a88 <__assert_fail@plt+0x17544>
   28a78:	ldr	r3, [fp, #4]
   28a7c:	ldr	r2, [r3]
   28a80:	ldr	r3, [fp, #-16]
   28a84:	add	r3, r2, r3
   28a88:	ldr	r2, [fp, #4]
   28a8c:	str	r3, [r2]
   28a90:	ldr	r3, [fp, #16]
   28a94:	cmp	r3, #0
   28a98:	beq	28b18 <__assert_fail@plt+0x175d4>
   28a9c:	ldr	r3, [fp, #4]
   28aa0:	ldr	r2, [r3]
   28aa4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28aa8:	ldr	r3, [r3, #92]	; 0x5c
   28aac:	cmp	r2, r3
   28ab0:	bgt	28b10 <__assert_fail@plt+0x175cc>
   28ab4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28ab8:	ldr	r2, [r3, #100]	; 0x64
   28abc:	ldr	r3, [fp, #4]
   28ac0:	ldr	r3, [r3]
   28ac4:	lsl	r3, r3, #2
   28ac8:	add	r3, r2, r3
   28acc:	ldr	r3, [r3]
   28ad0:	cmp	r3, #0
   28ad4:	beq	28b10 <__assert_fail@plt+0x175cc>
   28ad8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   28adc:	ldr	r2, [r3, #100]	; 0x64
   28ae0:	ldr	r3, [fp, #4]
   28ae4:	ldr	r3, [r3]
   28ae8:	lsl	r3, r3, #2
   28aec:	add	r3, r2, r3
   28af0:	ldr	r3, [r3]
   28af4:	add	r3, r3, #4
   28af8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   28afc:	mov	r0, r3
   28b00:	bl	1bac4 <__assert_fail@plt+0xa580>
   28b04:	mov	r3, r0
   28b08:	cmp	r3, #0
   28b0c:	bne	28b18 <__assert_fail@plt+0x175d4>
   28b10:	mvn	r3, #0
   28b14:	b	28b30 <__assert_fail@plt+0x175ec>
   28b18:	ldr	r3, [fp, #12]
   28b1c:	mov	r2, #0
   28b20:	str	r2, [r3, #4]
   28b24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   28b28:	b	28b30 <__assert_fail@plt+0x175ec>
   28b2c:	mvn	r3, #0
   28b30:	mov	r0, r3
   28b34:	sub	sp, fp, #4
   28b38:	pop	{fp, pc}
   28b3c:	push	{r4, fp, lr}
   28b40:	add	fp, sp, #8
   28b44:	sub	sp, sp, #36	; 0x24
   28b48:	str	r0, [fp, #-32]	; 0xffffffe0
   28b4c:	str	r1, [fp, #-36]	; 0xffffffdc
   28b50:	str	r2, [fp, #-40]	; 0xffffffd8
   28b54:	str	r3, [fp, #-44]	; 0xffffffd4
   28b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b5c:	ldr	r3, [r3]
   28b60:	add	r1, r3, #1
   28b64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   28b68:	str	r1, [r2]
   28b6c:	str	r3, [fp, #-16]
   28b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b74:	ldr	r2, [r3]
   28b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b7c:	ldr	r3, [r3, #4]
   28b80:	cmp	r2, r3
   28b84:	bne	28be8 <__assert_fail@plt+0x176a4>
   28b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b8c:	ldr	r0, [r3, #8]
   28b90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b94:	ldr	r2, [r3, #4]
   28b98:	mov	r3, r2
   28b9c:	lsl	r3, r3, #1
   28ba0:	add	r3, r3, r2
   28ba4:	lsl	r3, r3, #4
   28ba8:	mov	r1, r3
   28bac:	bl	332ec <__assert_fail@plt+0x21da8>
   28bb0:	str	r0, [fp, #-20]	; 0xffffffec
   28bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   28bb8:	cmp	r3, #0
   28bbc:	bne	28bc8 <__assert_fail@plt+0x17684>
   28bc0:	mov	r3, #12
   28bc4:	b	28d58 <__assert_fail@plt+0x17814>
   28bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bcc:	ldr	r3, [r3, #4]
   28bd0:	lsl	r2, r3, #1
   28bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bd8:	str	r2, [r3, #4]
   28bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   28be4:	str	r2, [r3, #8]
   28be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bec:	ldr	r1, [r3, #8]
   28bf0:	ldr	r2, [fp, #-16]
   28bf4:	mov	r3, r2
   28bf8:	lsl	r3, r3, #1
   28bfc:	add	r3, r3, r2
   28c00:	lsl	r3, r3, #3
   28c04:	add	r3, r1, r3
   28c08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28c0c:	str	r2, [r3]
   28c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c14:	ldr	r1, [r3, #8]
   28c18:	ldr	r2, [fp, #-16]
   28c1c:	mov	r3, r2
   28c20:	lsl	r3, r3, #1
   28c24:	add	r3, r3, r2
   28c28:	lsl	r3, r3, #3
   28c2c:	add	r3, r1, r3
   28c30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28c34:	str	r2, [r3, #4]
   28c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c3c:	ldr	r1, [r3, #8]
   28c40:	ldr	r2, [fp, #-16]
   28c44:	mov	r3, r2
   28c48:	lsl	r3, r3, #1
   28c4c:	add	r3, r3, r2
   28c50:	lsl	r3, r3, #3
   28c54:	add	r4, r1, r3
   28c58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28c5c:	lsl	r3, r3, #4
   28c60:	mov	r0, r3
   28c64:	bl	33244 <__assert_fail@plt+0x21d00>
   28c68:	mov	r3, r0
   28c6c:	str	r3, [r4, #8]
   28c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c74:	ldr	r1, [r3, #8]
   28c78:	ldr	r2, [fp, #-16]
   28c7c:	mov	r3, r2
   28c80:	lsl	r3, r3, #1
   28c84:	add	r3, r3, r2
   28c88:	lsl	r3, r3, #3
   28c8c:	add	r3, r1, r3
   28c90:	ldr	r3, [r3, #8]
   28c94:	cmp	r3, #0
   28c98:	bne	28ca4 <__assert_fail@plt+0x17760>
   28c9c:	mov	r3, #12
   28ca0:	b	28d58 <__assert_fail@plt+0x17814>
   28ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28ca8:	ldr	r1, [r3, #8]
   28cac:	ldr	r2, [fp, #-16]
   28cb0:	mov	r3, r2
   28cb4:	lsl	r3, r3, #1
   28cb8:	add	r3, r3, r2
   28cbc:	lsl	r3, r3, #3
   28cc0:	add	r3, r1, r3
   28cc4:	ldr	r0, [r3, #8]
   28cc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28ccc:	lsl	r3, r3, #3
   28cd0:	mov	r2, r3
   28cd4:	ldr	r1, [fp, #4]
   28cd8:	bl	11250 <memcpy@plt>
   28cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28ce0:	ldr	r1, [r3, #8]
   28ce4:	ldr	r2, [fp, #-16]
   28ce8:	mov	r3, r2
   28cec:	lsl	r3, r3, #1
   28cf0:	add	r3, r3, r2
   28cf4:	lsl	r3, r3, #3
   28cf8:	add	r3, r1, r3
   28cfc:	ldr	r2, [r3, #8]
   28d00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d04:	lsl	r3, r3, #3
   28d08:	add	r0, r2, r3
   28d0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d10:	lsl	r3, r3, #3
   28d14:	mov	r2, r3
   28d18:	ldr	r1, [fp, #8]
   28d1c:	bl	11250 <memcpy@plt>
   28d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d24:	ldr	r1, [r3, #8]
   28d28:	ldr	r2, [fp, #-16]
   28d2c:	mov	r3, r2
   28d30:	lsl	r3, r3, #1
   28d34:	add	r3, r3, r2
   28d38:	lsl	r3, r3, #3
   28d3c:	add	r3, r1, r3
   28d40:	add	r3, r3, #12
   28d44:	ldr	r1, [fp, #12]
   28d48:	mov	r0, r3
   28d4c:	bl	1a958 <__assert_fail@plt+0x9414>
   28d50:	str	r0, [fp, #-24]	; 0xffffffe8
   28d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28d58:	mov	r0, r3
   28d5c:	sub	sp, fp, #8
   28d60:	pop	{r4, fp, pc}
   28d64:	push	{fp, lr}
   28d68:	add	fp, sp, #4
   28d6c:	sub	sp, sp, #24
   28d70:	str	r0, [fp, #-16]
   28d74:	str	r1, [fp, #-20]	; 0xffffffec
   28d78:	str	r2, [fp, #-24]	; 0xffffffe8
   28d7c:	str	r3, [fp, #-28]	; 0xffffffe4
   28d80:	ldr	r3, [fp, #-16]
   28d84:	cmp	r3, #0
   28d88:	beq	28d9c <__assert_fail@plt+0x17858>
   28d8c:	ldr	r3, [fp, #-16]
   28d90:	ldr	r3, [r3]
   28d94:	cmp	r3, #0
   28d98:	bne	28da4 <__assert_fail@plt+0x17860>
   28d9c:	mvn	r3, #0
   28da0:	b	28f28 <__assert_fail@plt+0x179e4>
   28da4:	ldr	r3, [fp, #-16]
   28da8:	ldr	r3, [r3]
   28dac:	sub	r2, r3, #1
   28db0:	ldr	r3, [fp, #-16]
   28db4:	str	r2, [r3]
   28db8:	ldr	r3, [fp, #-16]
   28dbc:	ldr	r3, [r3]
   28dc0:	str	r3, [fp, #-8]
   28dc4:	ldr	r3, [fp, #-16]
   28dc8:	ldr	r1, [r3, #8]
   28dcc:	ldr	r2, [fp, #-8]
   28dd0:	mov	r3, r2
   28dd4:	lsl	r3, r3, #1
   28dd8:	add	r3, r3, r2
   28ddc:	lsl	r3, r3, #3
   28de0:	add	r3, r1, r3
   28de4:	ldr	r2, [r3]
   28de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28dec:	str	r2, [r3]
   28df0:	ldr	r3, [fp, #-16]
   28df4:	ldr	r1, [r3, #8]
   28df8:	ldr	r2, [fp, #-8]
   28dfc:	mov	r3, r2
   28e00:	lsl	r3, r3, #1
   28e04:	add	r3, r3, r2
   28e08:	lsl	r3, r3, #3
   28e0c:	add	r3, r1, r3
   28e10:	ldr	r1, [r3, #8]
   28e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e18:	lsl	r3, r3, #3
   28e1c:	mov	r2, r3
   28e20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28e24:	bl	11250 <memcpy@plt>
   28e28:	ldr	r3, [fp, #-16]
   28e2c:	ldr	r1, [r3, #8]
   28e30:	ldr	r2, [fp, #-8]
   28e34:	mov	r3, r2
   28e38:	lsl	r3, r3, #1
   28e3c:	add	r3, r3, r2
   28e40:	lsl	r3, r3, #3
   28e44:	add	r3, r1, r3
   28e48:	ldr	r2, [r3, #8]
   28e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e50:	lsl	r3, r3, #3
   28e54:	add	r1, r2, r3
   28e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e5c:	lsl	r3, r3, #3
   28e60:	mov	r2, r3
   28e64:	ldr	r0, [fp, #4]
   28e68:	bl	11250 <memcpy@plt>
   28e6c:	ldr	r3, [fp, #8]
   28e70:	ldr	r3, [r3, #8]
   28e74:	mov	r0, r3
   28e78:	bl	14dec <__assert_fail@plt+0x38a8>
   28e7c:	ldr	r3, [fp, #-16]
   28e80:	ldr	r1, [r3, #8]
   28e84:	ldr	r2, [fp, #-8]
   28e88:	mov	r3, r2
   28e8c:	lsl	r3, r3, #1
   28e90:	add	r3, r3, r2
   28e94:	lsl	r3, r3, #3
   28e98:	add	r3, r1, r3
   28e9c:	ldr	r3, [r3, #8]
   28ea0:	mov	r0, r3
   28ea4:	bl	14dec <__assert_fail@plt+0x38a8>
   28ea8:	ldr	r3, [fp, #-16]
   28eac:	ldr	r1, [r3, #8]
   28eb0:	ldr	r2, [fp, #-8]
   28eb4:	mov	r3, r2
   28eb8:	lsl	r3, r3, #1
   28ebc:	add	r3, r3, r2
   28ec0:	lsl	r3, r3, #3
   28ec4:	add	r3, r1, r3
   28ec8:	ldr	r2, [fp, #8]
   28ecc:	mov	ip, r2
   28ed0:	add	r3, r3, #12
   28ed4:	ldm	r3, {r0, r1, r2}
   28ed8:	stm	ip, {r0, r1, r2}
   28edc:	ldr	r3, [fp, #-16]
   28ee0:	ldr	r1, [r3, #8]
   28ee4:	ldr	r2, [fp, #-8]
   28ee8:	mov	r3, r2
   28eec:	lsl	r3, r3, #1
   28ef0:	add	r3, r3, r2
   28ef4:	lsl	r3, r3, #3
   28ef8:	add	r3, r1, r3
   28efc:	ldr	r3, [r3, #4]
   28f00:	cmp	r3, #0
   28f04:	ldr	r3, [fp, #-16]
   28f08:	ldr	r1, [r3, #8]
   28f0c:	ldr	r2, [fp, #-8]
   28f10:	mov	r3, r2
   28f14:	lsl	r3, r3, #1
   28f18:	add	r3, r3, r2
   28f1c:	lsl	r3, r3, #3
   28f20:	add	r3, r1, r3
   28f24:	ldr	r3, [r3, #4]
   28f28:	mov	r0, r3
   28f2c:	sub	sp, fp, #4
   28f30:	pop	{fp, pc}
   28f34:	push	{fp}		; (str fp, [sp, #-4]!)
   28f38:	add	fp, sp, #0
   28f3c:	sub	sp, sp, #12
   28f40:	str	r0, [fp, #-8]
   28f44:	str	r1, [fp, #-12]
   28f48:	nop			; (mov r0, r0)
   28f4c:	add	sp, fp, #0
   28f50:	pop	{fp}		; (ldr fp, [sp], #4)
   28f54:	bx	lr
   28f58:	push	{fp, lr}
   28f5c:	add	fp, sp, #4
   28f60:	sub	sp, sp, #8
   28f64:	str	r0, [fp, #-8]
   28f68:	ldr	r3, [fp, #-8]
   28f6c:	ldr	r2, [r3, #8]
   28f70:	ldr	r3, [fp, #-8]
   28f74:	add	r3, r3, #12
   28f78:	cmp	r2, r3
   28f7c:	beq	28f90 <__assert_fail@plt+0x17a4c>
   28f80:	ldr	r3, [fp, #-8]
   28f84:	ldr	r3, [r3, #8]
   28f88:	mov	r0, r3
   28f8c:	bl	14dec <__assert_fail@plt+0x38a8>
   28f90:	nop			; (mov r0, r0)
   28f94:	sub	sp, fp, #4
   28f98:	pop	{fp, pc}
   28f9c:	push	{fp}		; (str fp, [sp, #-4]!)
   28fa0:	add	fp, sp, #0
   28fa4:	sub	sp, sp, #12
   28fa8:	str	r0, [fp, #-8]
   28fac:	ldr	r3, [fp, #-8]
   28fb0:	mov	r2, #0
   28fb4:	str	r2, [r3]
   28fb8:	ldr	r3, [fp, #-8]
   28fbc:	mov	r2, #16
   28fc0:	str	r2, [r3, #4]
   28fc4:	ldr	r3, [fp, #-8]
   28fc8:	add	r2, r3, #12
   28fcc:	ldr	r3, [fp, #-8]
   28fd0:	str	r2, [r3, #8]
   28fd4:	nop			; (mov r0, r0)
   28fd8:	add	sp, fp, #0
   28fdc:	pop	{fp}		; (ldr fp, [sp], #4)
   28fe0:	bx	lr
   28fe4:	push	{fp, lr}
   28fe8:	add	fp, sp, #4
   28fec:	sub	sp, sp, #8
   28ff0:	str	r0, [fp, #-8]
   28ff4:	ldr	r3, [fp, #-8]
   28ff8:	ldr	r2, [r3, #8]
   28ffc:	ldr	r3, [fp, #-8]
   29000:	ldr	r3, [r3]
   29004:	mov	r1, r3
   29008:	mov	r0, r2
   2900c:	bl	28f34 <__assert_fail@plt+0x179f0>
   29010:	ldr	r0, [fp, #-8]
   29014:	bl	28f58 <__assert_fail@plt+0x17a14>
   29018:	ldr	r0, [fp, #-8]
   2901c:	bl	28f9c <__assert_fail@plt+0x17a58>
   29020:	nop			; (mov r0, r0)
   29024:	sub	sp, fp, #4
   29028:	pop	{fp, pc}
   2902c:	push	{fp, lr}
   29030:	add	fp, sp, #4
   29034:	sub	sp, sp, #8
   29038:	str	r0, [fp, #-8]
   2903c:	ldr	r3, [fp, #-8]
   29040:	ldr	r2, [r3, #8]
   29044:	ldr	r3, [fp, #-8]
   29048:	ldr	r3, [r3]
   2904c:	mov	r1, r3
   29050:	mov	r0, r2
   29054:	bl	28f34 <__assert_fail@plt+0x179f0>
   29058:	ldr	r0, [fp, #-8]
   2905c:	bl	28f58 <__assert_fail@plt+0x17a14>
   29060:	ldr	r3, [fp, #-8]
   29064:	add	r2, r3, #12
   29068:	ldr	r3, [fp, #-8]
   2906c:	str	r2, [r3, #8]
   29070:	ldr	r3, [fp, #-8]
   29074:	mov	r2, #0
   29078:	str	r2, [r3]
   2907c:	bl	177d0 <__assert_fail@plt+0x628c>
   29080:	mov	r2, r0
   29084:	ldr	r3, [fp, #-8]
   29088:	str	r2, [r3, #4]
   2908c:	nop			; (mov r0, r0)
   29090:	sub	sp, fp, #4
   29094:	pop	{fp, pc}
   29098:	push	{fp}		; (str fp, [sp, #-4]!)
   2909c:	add	fp, sp, #0
   290a0:	sub	sp, sp, #12
   290a4:	str	r0, [fp, #-8]
   290a8:	ldr	r3, [fp, #-8]
   290ac:	ldr	r3, [r3, #8]
   290b0:	mov	r0, r3
   290b4:	add	sp, fp, #0
   290b8:	pop	{fp}		; (ldr fp, [sp], #4)
   290bc:	bx	lr
   290c0:	push	{fp, lr}
   290c4:	add	fp, sp, #4
   290c8:	sub	sp, sp, #16
   290cc:	str	r0, [fp, #-8]
   290d0:	sub	r3, fp, #16
   290d4:	stm	r3, {r1, r2}
   290d8:	ldr	r0, [fp, #-8]
   290dc:	ldr	r3, [fp, #-8]
   290e0:	add	r3, r3, #12
   290e4:	mov	r2, #8
   290e8:	mov	r1, r3
   290ec:	bl	3352c <__assert_fail@plt+0x21fe8>
   290f0:	mov	r3, r0
   290f4:	eor	r3, r3, #1
   290f8:	uxtb	r3, r3
   290fc:	cmp	r3, #0
   29100:	beq	29110 <__assert_fail@plt+0x17bcc>
   29104:	ldr	r0, [fp, #-8]
   29108:	bl	2902c <__assert_fail@plt+0x17ae8>
   2910c:	b	29144 <__assert_fail@plt+0x17c00>
   29110:	ldr	r3, [fp, #-8]
   29114:	ldr	r2, [r3, #8]
   29118:	ldr	r3, [fp, #-8]
   2911c:	ldr	r3, [r3]
   29120:	add	r0, r3, #1
   29124:	ldr	r1, [fp, #-8]
   29128:	str	r0, [r1]
   2912c:	lsl	r3, r3, #3
   29130:	add	r3, r2, r3
   29134:	mov	r2, r3
   29138:	sub	r3, fp, #16
   2913c:	ldm	r3, {r0, r1}
   29140:	stm	r2, {r0, r1}
   29144:	sub	sp, fp, #4
   29148:	pop	{fp, pc}
   2914c:	push	{fp}		; (str fp, [sp, #-4]!)
   29150:	add	fp, sp, #0
   29154:	sub	sp, sp, #20
   29158:	str	r0, [fp, #-16]
   2915c:	ldr	r3, [fp, #-16]
   29160:	ldr	r2, [r3, #8]
   29164:	ldr	r3, [fp, #-16]
   29168:	ldr	r3, [r3]
   2916c:	lsl	r3, r3, #3
   29170:	add	r3, r2, r3
   29174:	str	r3, [fp, #-8]
   29178:	ldr	r3, [fp, #-16]
   2917c:	ldr	r3, [r3]
   29180:	add	r2, r3, #1
   29184:	ldr	r3, [fp, #-16]
   29188:	str	r2, [r3]
   2918c:	ldr	r3, [fp, #-8]
   29190:	mov	r0, r3
   29194:	add	sp, fp, #0
   29198:	pop	{fp}		; (ldr fp, [sp], #4)
   2919c:	bx	lr
   291a0:	push	{fp, lr}
   291a4:	add	fp, sp, #4
   291a8:	sub	sp, sp, #8
   291ac:	str	r0, [fp, #-8]
   291b0:	ldr	r0, [fp, #-8]
   291b4:	ldr	r3, [fp, #-8]
   291b8:	add	r3, r3, #12
   291bc:	mov	r2, #8
   291c0:	mov	r1, r3
   291c4:	bl	3352c <__assert_fail@plt+0x21fe8>
   291c8:	mov	r3, r0
   291cc:	eor	r3, r3, #1
   291d0:	uxtb	r3, r3
   291d4:	cmp	r3, #0
   291d8:	beq	291ec <__assert_fail@plt+0x17ca8>
   291dc:	ldr	r0, [fp, #-8]
   291e0:	bl	2902c <__assert_fail@plt+0x17ae8>
   291e4:	mov	r3, #0
   291e8:	b	291f8 <__assert_fail@plt+0x17cb4>
   291ec:	ldr	r0, [fp, #-8]
   291f0:	bl	2914c <__assert_fail@plt+0x17c08>
   291f4:	mov	r3, r0
   291f8:	mov	r0, r3
   291fc:	sub	sp, fp, #4
   29200:	pop	{fp, pc}
   29204:	push	{fp, lr}
   29208:	add	fp, sp, #4
   2920c:	sub	sp, sp, #16
   29210:	str	r0, [fp, #-16]
   29214:	str	r1, [fp, #-20]	; 0xffffffec
   29218:	ldr	r3, [fp, #-16]
   2921c:	ldr	r2, [r3]
   29220:	ldr	r3, [fp, #-20]	; 0xffffffec
   29224:	cmp	r2, r3
   29228:	bcs	29270 <__assert_fail@plt+0x17d2c>
   2922c:	ldr	r0, [fp, #-16]
   29230:	ldr	r3, [fp, #-16]
   29234:	add	r2, r3, #12
   29238:	mov	r3, #8
   2923c:	ldr	r1, [fp, #-20]	; 0xffffffec
   29240:	bl	3389c <__assert_fail@plt+0x22358>
   29244:	mov	r3, r0
   29248:	strb	r3, [fp, #-5]
   2924c:	ldrb	r3, [fp, #-5]
   29250:	eor	r3, r3, #1
   29254:	uxtb	r3, r3
   29258:	cmp	r3, #0
   2925c:	beq	29268 <__assert_fail@plt+0x17d24>
   29260:	ldr	r0, [fp, #-16]
   29264:	bl	2902c <__assert_fail@plt+0x17ae8>
   29268:	ldrb	r3, [fp, #-5]
   2926c:	b	292ac <__assert_fail@plt+0x17d68>
   29270:	ldr	r3, [fp, #-16]
   29274:	ldr	r2, [r3, #8]
   29278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2927c:	lsl	r3, r3, #3
   29280:	add	r0, r2, r3
   29284:	ldr	r3, [fp, #-16]
   29288:	ldr	r2, [r3]
   2928c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29290:	sub	r3, r2, r3
   29294:	mov	r1, r3
   29298:	bl	28f34 <__assert_fail@plt+0x179f0>
   2929c:	ldr	r3, [fp, #-16]
   292a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   292a4:	str	r2, [r3]
   292a8:	mov	r3, #1
   292ac:	mov	r0, r3
   292b0:	sub	sp, fp, #4
   292b4:	pop	{fp, pc}
   292b8:	push	{fp}		; (str fp, [sp, #-4]!)
   292bc:	add	fp, sp, #0
   292c0:	sub	sp, sp, #20
   292c4:	str	r0, [fp, #-16]
   292c8:	ldr	r3, [fp, #-16]
   292cc:	ldr	r3, [r3]
   292d0:	cmp	r3, #0
   292d4:	beq	292f4 <__assert_fail@plt+0x17db0>
   292d8:	ldr	r3, [fp, #-16]
   292dc:	ldr	r3, [r3]
   292e0:	sub	r3, r3, #1
   292e4:	str	r3, [fp, #-8]
   292e8:	ldr	r3, [fp, #-16]
   292ec:	ldr	r2, [fp, #-8]
   292f0:	str	r2, [r3]
   292f4:	nop			; (mov r0, r0)
   292f8:	add	sp, fp, #0
   292fc:	pop	{fp}		; (ldr fp, [sp], #4)
   29300:	bx	lr
   29304:	push	{fp, lr}
   29308:	add	fp, sp, #4
   2930c:	sub	sp, sp, #8
   29310:	str	r0, [fp, #-8]
   29314:	ldr	r3, [fp, #-8]
   29318:	ldr	r2, [r3, #8]
   2931c:	ldr	r3, [fp, #-8]
   29320:	ldr	r3, [r3]
   29324:	mov	r1, r3
   29328:	mov	r0, r2
   2932c:	bl	28f34 <__assert_fail@plt+0x179f0>
   29330:	ldr	r3, [fp, #-8]
   29334:	mov	r2, #0
   29338:	str	r2, [r3]
   2933c:	nop			; (mov r0, r0)
   29340:	sub	sp, fp, #4
   29344:	pop	{fp, pc}
   29348:	push	{fp, lr}
   2934c:	add	fp, sp, #4
   29350:	sub	sp, sp, #16
   29354:	str	r0, [fp, #-16]
   29358:	str	r1, [fp, #-20]	; 0xffffffec
   2935c:	ldr	r0, [fp, #-16]
   29360:	ldr	r3, [fp, #-16]
   29364:	add	r1, r3, #12
   29368:	sub	r3, fp, #12
   2936c:	mov	r2, #8
   29370:	bl	33760 <__assert_fail@plt+0x2221c>
   29374:	mov	r3, r0
   29378:	cmp	r3, #0
   2937c:	beq	293a8 <__assert_fail@plt+0x17e64>
   29380:	ldr	r0, [fp, #-16]
   29384:	bl	28f9c <__assert_fail@plt+0x17a58>
   29388:	ldr	r3, [fp, #-20]	; 0xffffffec
   2938c:	cmp	r3, #0
   29390:	beq	293a0 <__assert_fail@plt+0x17e5c>
   29394:	ldr	r2, [fp, #-8]
   29398:	ldr	r3, [fp, #-20]	; 0xffffffec
   2939c:	str	r2, [r3]
   293a0:	ldr	r3, [fp, #-12]
   293a4:	b	293c4 <__assert_fail@plt+0x17e80>
   293a8:	ldr	r0, [fp, #-16]
   293ac:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   293b0:	bl	11418 <__errno_location@plt>
   293b4:	mov	r2, r0
   293b8:	mov	r3, #12
   293bc:	str	r3, [r2]
   293c0:	mov	r3, #0
   293c4:	mov	r0, r3
   293c8:	sub	sp, fp, #4
   293cc:	pop	{fp, pc}
   293d0:	push	{fp, lr}
   293d4:	add	fp, sp, #4
   293d8:	sub	sp, sp, #224	; 0xe0
   293dc:	str	r0, [fp, #-200]	; 0xffffff38
   293e0:	str	r1, [fp, #-204]	; 0xffffff34
   293e4:	str	r2, [fp, #-208]	; 0xffffff30
   293e8:	str	r3, [fp, #-212]	; 0xffffff2c
   293ec:	ldr	r3, [fp, #-200]	; 0xffffff38
   293f0:	ldr	r3, [r3]
   293f4:	str	r3, [fp, #-20]	; 0xffffffec
   293f8:	mov	r3, #0
   293fc:	str	r3, [fp, #-52]	; 0xffffffcc
   29400:	mov	r3, #2
   29404:	str	r3, [fp, #-48]	; 0xffffffd0
   29408:	mov	r3, #0
   2940c:	str	r3, [fp, #-44]	; 0xffffffd4
   29410:	sub	r3, fp, #192	; 0xc0
   29414:	mov	r0, r3
   29418:	bl	28f9c <__assert_fail@plt+0x17a58>
   2941c:	ldr	r3, [fp, #-208]	; 0xffffff30
   29420:	cmp	r3, #1
   29424:	ldr	r3, [fp, #-204]	; 0xffffff34
   29428:	ldr	r3, [r3, #100]	; 0x64
   2942c:	cmp	r3, #0
   29430:	ldrb	r3, [fp, #4]
   29434:	cmp	r3, #0
   29438:	beq	29490 <__assert_fail@plt+0x17f4c>
   2943c:	sub	r3, fp, #52	; 0x34
   29440:	str	r3, [fp, #-12]
   29444:	ldr	r3, [fp, #-12]
   29448:	ldr	r3, [r3, #4]
   2944c:	mov	r2, r3
   29450:	mov	r3, r2
   29454:	lsl	r3, r3, #1
   29458:	add	r3, r3, r2
   2945c:	lsl	r3, r3, #3
   29460:	mov	r0, r3
   29464:	bl	33244 <__assert_fail@plt+0x21d00>
   29468:	mov	r3, r0
   2946c:	mov	r2, r3
   29470:	ldr	r3, [fp, #-12]
   29474:	str	r2, [r3, #8]
   29478:	ldr	r3, [fp, #-12]
   2947c:	ldr	r3, [r3, #8]
   29480:	cmp	r3, #0
   29484:	bne	29498 <__assert_fail@plt+0x17f54>
   29488:	mov	r3, #12
   2948c:	b	2979c <__assert_fail@plt+0x18258>
   29490:	mov	r3, #0
   29494:	str	r3, [fp, #-12]
   29498:	ldr	r3, [fp, #-20]	; 0xffffffec
   2949c:	ldr	r3, [r3, #72]	; 0x48
   294a0:	str	r3, [fp, #-8]
   294a4:	sub	r3, fp, #40	; 0x28
   294a8:	mov	r2, #12
   294ac:	mov	r1, #0
   294b0:	mov	r0, r3
   294b4:	bl	11448 <memset@plt>
   294b8:	sub	r3, fp, #192	; 0xc0
   294bc:	ldr	r1, [fp, #-208]	; 0xffffff30
   294c0:	mov	r0, r3
   294c4:	bl	29204 <__assert_fail@plt+0x17cc0>
   294c8:	mov	r3, r0
   294cc:	eor	r3, r3, #1
   294d0:	uxtb	r3, r3
   294d4:	cmp	r3, #0
   294d8:	beq	294f8 <__assert_fail@plt+0x17fb4>
   294dc:	sub	r3, fp, #192	; 0xc0
   294e0:	mov	r0, r3
   294e4:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   294e8:	ldr	r0, [fp, #-12]
   294ec:	bl	297a8 <__assert_fail@plt+0x18264>
   294f0:	mov	r3, #12
   294f4:	b	2979c <__assert_fail@plt+0x18258>
   294f8:	sub	r3, fp, #192	; 0xc0
   294fc:	mov	r0, r3
   29500:	bl	29098 <__assert_fail@plt+0x17b54>
   29504:	str	r0, [fp, #-24]	; 0xffffffe8
   29508:	ldr	r3, [fp, #-208]	; 0xffffff30
   2950c:	lsl	r3, r3, #3
   29510:	mov	r2, r3
   29514:	ldr	r1, [fp, #-212]	; 0xffffff2c
   29518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2951c:	bl	11250 <memcpy@plt>
   29520:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29524:	ldr	r3, [r3]
   29528:	str	r3, [fp, #-28]	; 0xffffffe4
   2952c:	b	29764 <__assert_fail@plt+0x18220>
   29530:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29534:	ldr	r2, [fp, #-208]	; 0xffffff30
   29538:	str	r2, [sp, #4]
   2953c:	str	r3, [sp]
   29540:	ldr	r3, [fp, #-8]
   29544:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29548:	ldr	r1, [fp, #-212]	; 0xffffff2c
   2954c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29550:	bl	29868 <__assert_fail@plt+0x18324>
   29554:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29558:	ldr	r2, [r3, #4]
   2955c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29560:	cmp	r2, r3
   29564:	bne	2957c <__assert_fail@plt+0x18038>
   29568:	ldr	r3, [fp, #-204]	; 0xffffff34
   2956c:	ldr	r2, [r3, #96]	; 0x60
   29570:	ldr	r3, [fp, #-8]
   29574:	cmp	r2, r3
   29578:	beq	295a4 <__assert_fail@plt+0x18060>
   2957c:	ldr	r3, [fp, #-12]
   29580:	cmp	r3, #0
   29584:	beq	29678 <__assert_fail@plt+0x18134>
   29588:	sub	r3, fp, #40	; 0x28
   2958c:	ldr	r1, [fp, #-8]
   29590:	mov	r0, r3
   29594:	bl	1bac4 <__assert_fail@plt+0xa580>
   29598:	mov	r3, r0
   2959c:	cmp	r3, #0
   295a0:	beq	29678 <__assert_fail@plt+0x18134>
   295a4:	mvn	r3, #0
   295a8:	str	r3, [fp, #-8]
   295ac:	ldr	r3, [fp, #-12]
   295b0:	cmp	r3, #0
   295b4:	beq	29644 <__assert_fail@plt+0x18100>
   295b8:	mov	r3, #0
   295bc:	str	r3, [fp, #-16]
   295c0:	b	29634 <__assert_fail@plt+0x180f0>
   295c4:	ldr	r3, [fp, #-16]
   295c8:	lsl	r3, r3, #3
   295cc:	ldr	r2, [fp, #-212]	; 0xffffff2c
   295d0:	add	r3, r2, r3
   295d4:	ldr	r3, [r3]
   295d8:	cmp	r3, #0
   295dc:	blt	29628 <__assert_fail@plt+0x180e4>
   295e0:	ldr	r3, [fp, #-16]
   295e4:	lsl	r3, r3, #3
   295e8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   295ec:	add	r3, r2, r3
   295f0:	ldr	r3, [r3, #4]
   295f4:	cmn	r3, #1
   295f8:	bne	29628 <__assert_fail@plt+0x180e4>
   295fc:	ldr	r2, [fp, #-208]	; 0xffffff30
   29600:	sub	r1, fp, #28
   29604:	sub	r3, fp, #40	; 0x28
   29608:	str	r3, [sp, #4]
   2960c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29610:	str	r3, [sp]
   29614:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29618:	ldr	r0, [fp, #-12]
   2961c:	bl	28d64 <__assert_fail@plt+0x17820>
   29620:	str	r0, [fp, #-8]
   29624:	b	29644 <__assert_fail@plt+0x18100>
   29628:	ldr	r3, [fp, #-16]
   2962c:	add	r3, r3, #1
   29630:	str	r3, [fp, #-16]
   29634:	ldr	r2, [fp, #-16]
   29638:	ldr	r3, [fp, #-208]	; 0xffffff30
   2963c:	cmp	r2, r3
   29640:	bcc	295c4 <__assert_fail@plt+0x18080>
   29644:	ldr	r3, [fp, #-8]
   29648:	cmp	r3, #0
   2964c:	bge	29678 <__assert_fail@plt+0x18134>
   29650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29654:	mov	r0, r3
   29658:	bl	14dec <__assert_fail@plt+0x38a8>
   2965c:	sub	r3, fp, #192	; 0xc0
   29660:	mov	r0, r3
   29664:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   29668:	ldr	r0, [fp, #-12]
   2966c:	bl	297a8 <__assert_fail@plt+0x18264>
   29670:	mov	r3, r0
   29674:	b	2979c <__assert_fail@plt+0x18258>
   29678:	ldr	r1, [fp, #-208]	; 0xffffff30
   2967c:	ldr	r3, [fp, #-12]
   29680:	str	r3, [sp, #12]
   29684:	sub	r3, fp, #40	; 0x28
   29688:	str	r3, [sp, #8]
   2968c:	ldr	r3, [fp, #-8]
   29690:	str	r3, [sp, #4]
   29694:	sub	r3, fp, #28
   29698:	str	r3, [sp]
   2969c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   296a0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   296a4:	ldr	r0, [fp, #-204]	; 0xffffff34
   296a8:	bl	285b8 <__assert_fail@plt+0x17074>
   296ac:	str	r0, [fp, #-8]
   296b0:	ldr	r3, [fp, #-8]
   296b4:	lsr	r3, r3, #31
   296b8:	uxtb	r3, r3
   296bc:	cmp	r3, #0
   296c0:	beq	29764 <__assert_fail@plt+0x18220>
   296c4:	ldr	r3, [fp, #-8]
   296c8:	cmn	r3, #2
   296cc:	moveq	r3, #1
   296d0:	movne	r3, #0
   296d4:	uxtb	r3, r3
   296d8:	cmp	r3, #0
   296dc:	beq	29708 <__assert_fail@plt+0x181c4>
   296e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   296e4:	mov	r0, r3
   296e8:	bl	14dec <__assert_fail@plt+0x38a8>
   296ec:	sub	r3, fp, #192	; 0xc0
   296f0:	mov	r0, r3
   296f4:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   296f8:	ldr	r0, [fp, #-12]
   296fc:	bl	297a8 <__assert_fail@plt+0x18264>
   29700:	mov	r3, #12
   29704:	b	2979c <__assert_fail@plt+0x18258>
   29708:	ldr	r2, [fp, #-208]	; 0xffffff30
   2970c:	sub	r1, fp, #28
   29710:	sub	r3, fp, #40	; 0x28
   29714:	str	r3, [sp, #4]
   29718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2971c:	str	r3, [sp]
   29720:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29724:	ldr	r0, [fp, #-12]
   29728:	bl	28d64 <__assert_fail@plt+0x17820>
   2972c:	str	r0, [fp, #-8]
   29730:	ldr	r3, [fp, #-8]
   29734:	cmp	r3, #0
   29738:	bge	29764 <__assert_fail@plt+0x18220>
   2973c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29740:	mov	r0, r3
   29744:	bl	14dec <__assert_fail@plt+0x38a8>
   29748:	sub	r3, fp, #192	; 0xc0
   2974c:	mov	r0, r3
   29750:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   29754:	ldr	r0, [fp, #-12]
   29758:	bl	297a8 <__assert_fail@plt+0x18264>
   2975c:	mov	r3, #1
   29760:	b	2979c <__assert_fail@plt+0x18258>
   29764:	ldr	r3, [fp, #-212]	; 0xffffff2c
   29768:	ldr	r2, [r3, #4]
   2976c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29770:	cmp	r2, r3
   29774:	bge	29530 <__assert_fail@plt+0x17fec>
   29778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2977c:	mov	r0, r3
   29780:	bl	14dec <__assert_fail@plt+0x38a8>
   29784:	sub	r3, fp, #192	; 0xc0
   29788:	mov	r0, r3
   2978c:	bl	28fe4 <__assert_fail@plt+0x17aa0>
   29790:	ldr	r0, [fp, #-12]
   29794:	bl	297a8 <__assert_fail@plt+0x18264>
   29798:	mov	r3, r0
   2979c:	mov	r0, r3
   297a0:	sub	sp, fp, #4
   297a4:	pop	{fp, pc}
   297a8:	push	{fp, lr}
   297ac:	add	fp, sp, #4
   297b0:	sub	sp, sp, #16
   297b4:	str	r0, [fp, #-16]
   297b8:	ldr	r3, [fp, #-16]
   297bc:	cmp	r3, #0
   297c0:	beq	29858 <__assert_fail@plt+0x18314>
   297c4:	mov	r3, #0
   297c8:	str	r3, [fp, #-8]
   297cc:	b	29834 <__assert_fail@plt+0x182f0>
   297d0:	ldr	r3, [fp, #-16]
   297d4:	ldr	r1, [r3, #8]
   297d8:	ldr	r2, [fp, #-8]
   297dc:	mov	r3, r2
   297e0:	lsl	r3, r3, #1
   297e4:	add	r3, r3, r2
   297e8:	lsl	r3, r3, #3
   297ec:	add	r3, r1, r3
   297f0:	ldr	r3, [r3, #20]
   297f4:	mov	r0, r3
   297f8:	bl	14dec <__assert_fail@plt+0x38a8>
   297fc:	ldr	r3, [fp, #-16]
   29800:	ldr	r1, [r3, #8]
   29804:	ldr	r2, [fp, #-8]
   29808:	mov	r3, r2
   2980c:	lsl	r3, r3, #1
   29810:	add	r3, r3, r2
   29814:	lsl	r3, r3, #3
   29818:	add	r3, r1, r3
   2981c:	ldr	r3, [r3, #8]
   29820:	mov	r0, r3
   29824:	bl	14dec <__assert_fail@plt+0x38a8>
   29828:	ldr	r3, [fp, #-8]
   2982c:	add	r3, r3, #1
   29830:	str	r3, [fp, #-8]
   29834:	ldr	r3, [fp, #-16]
   29838:	ldr	r2, [r3]
   2983c:	ldr	r3, [fp, #-8]
   29840:	cmp	r2, r3
   29844:	bgt	297d0 <__assert_fail@plt+0x1828c>
   29848:	ldr	r3, [fp, #-16]
   2984c:	ldr	r3, [r3, #8]
   29850:	mov	r0, r3
   29854:	bl	14dec <__assert_fail@plt+0x38a8>
   29858:	mov	r3, #0
   2985c:	mov	r0, r3
   29860:	sub	sp, fp, #4
   29864:	pop	{fp, pc}
   29868:	push	{fp, lr}
   2986c:	add	fp, sp, #4
   29870:	sub	sp, sp, #32
   29874:	str	r0, [fp, #-24]	; 0xffffffe8
   29878:	str	r1, [fp, #-28]	; 0xffffffe4
   2987c:	str	r2, [fp, #-32]	; 0xffffffe0
   29880:	str	r3, [fp, #-36]	; 0xffffffdc
   29884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29888:	ldr	r2, [r3]
   2988c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29890:	lsl	r3, r3, #3
   29894:	add	r3, r2, r3
   29898:	ldrb	r3, [r3, #4]
   2989c:	str	r3, [fp, #-8]
   298a0:	ldr	r3, [fp, #-8]
   298a4:	cmp	r3, #8
   298a8:	bne	29910 <__assert_fail@plt+0x183cc>
   298ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298b0:	ldr	r2, [r3]
   298b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   298b8:	lsl	r3, r3, #3
   298bc:	add	r3, r2, r3
   298c0:	ldr	r3, [r3]
   298c4:	add	r3, r3, #1
   298c8:	str	r3, [fp, #-12]
   298cc:	ldr	r2, [fp, #-12]
   298d0:	ldr	r3, [fp, #8]
   298d4:	cmp	r2, r3
   298d8:	bge	29a18 <__assert_fail@plt+0x184d4>
   298dc:	ldr	r3, [fp, #-12]
   298e0:	lsl	r3, r3, #3
   298e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   298e8:	add	r3, r2, r3
   298ec:	ldr	r2, [fp, #4]
   298f0:	str	r2, [r3]
   298f4:	ldr	r3, [fp, #-12]
   298f8:	lsl	r3, r3, #3
   298fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29900:	add	r3, r2, r3
   29904:	mvn	r2, #0
   29908:	str	r2, [r3, #4]
   2990c:	b	29a18 <__assert_fail@plt+0x184d4>
   29910:	ldr	r3, [fp, #-8]
   29914:	cmp	r3, #9
   29918:	bne	29a18 <__assert_fail@plt+0x184d4>
   2991c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29920:	ldr	r2, [r3]
   29924:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29928:	lsl	r3, r3, #3
   2992c:	add	r3, r2, r3
   29930:	ldr	r3, [r3]
   29934:	add	r3, r3, #1
   29938:	str	r3, [fp, #-16]
   2993c:	ldr	r2, [fp, #-16]
   29940:	ldr	r3, [fp, #8]
   29944:	cmp	r2, r3
   29948:	bge	29a18 <__assert_fail@plt+0x184d4>
   2994c:	ldr	r3, [fp, #-16]
   29950:	lsl	r3, r3, #3
   29954:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29958:	add	r3, r2, r3
   2995c:	ldr	r2, [r3]
   29960:	ldr	r3, [fp, #4]
   29964:	cmp	r2, r3
   29968:	bge	299a0 <__assert_fail@plt+0x1845c>
   2996c:	ldr	r3, [fp, #-16]
   29970:	lsl	r3, r3, #3
   29974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29978:	add	r3, r2, r3
   2997c:	ldr	r2, [fp, #4]
   29980:	str	r2, [r3, #4]
   29984:	ldr	r3, [fp, #8]
   29988:	lsl	r3, r3, #3
   2998c:	mov	r2, r3
   29990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29998:	bl	11250 <memcpy@plt>
   2999c:	b	29a18 <__assert_fail@plt+0x184d4>
   299a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   299a4:	ldr	r2, [r3]
   299a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   299ac:	lsl	r3, r3, #3
   299b0:	add	r3, r2, r3
   299b4:	ldrb	r3, [r3, #6]
   299b8:	and	r3, r3, #8
   299bc:	uxtb	r3, r3
   299c0:	cmp	r3, #0
   299c4:	beq	29a00 <__assert_fail@plt+0x184bc>
   299c8:	ldr	r3, [fp, #-16]
   299cc:	lsl	r3, r3, #3
   299d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   299d4:	add	r3, r2, r3
   299d8:	ldr	r3, [r3]
   299dc:	cmn	r3, #1
   299e0:	beq	29a00 <__assert_fail@plt+0x184bc>
   299e4:	ldr	r3, [fp, #8]
   299e8:	lsl	r3, r3, #3
   299ec:	mov	r2, r3
   299f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   299f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   299f8:	bl	11250 <memcpy@plt>
   299fc:	b	29a18 <__assert_fail@plt+0x184d4>
   29a00:	ldr	r3, [fp, #-16]
   29a04:	lsl	r3, r3, #3
   29a08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29a0c:	add	r3, r2, r3
   29a10:	ldr	r2, [fp, #4]
   29a14:	str	r2, [r3, #4]
   29a18:	nop			; (mov r0, r0)
   29a1c:	sub	sp, fp, #4
   29a20:	pop	{fp, pc}
   29a24:	push	{fp, lr}
   29a28:	add	fp, sp, #4
   29a2c:	sub	sp, sp, #32
   29a30:	str	r0, [fp, #-32]	; 0xffffffe0
   29a34:	str	r1, [fp, #-36]	; 0xffffffdc
   29a38:	mov	r3, #0
   29a3c:	str	r3, [fp, #-12]
   29a40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29a44:	ldr	r3, [r3, #12]
   29a48:	str	r3, [fp, #-16]
   29a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a50:	ldr	r3, [r3, #100]	; 0x64
   29a54:	cmp	r3, #0
   29a58:	beq	29a7c <__assert_fail@plt+0x18538>
   29a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a60:	ldr	r2, [r3, #100]	; 0x64
   29a64:	ldr	r3, [fp, #-16]
   29a68:	lsl	r3, r3, #2
   29a6c:	add	r3, r2, r3
   29a70:	ldr	r3, [r3]
   29a74:	cmp	r3, #0
   29a78:	bne	29a7c <__assert_fail@plt+0x18538>
   29a7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29a80:	ldr	r2, [r3, #8]
   29a84:	sub	r3, fp, #28
   29a88:	mov	r1, r2
   29a8c:	mov	r0, r3
   29a90:	bl	1a7a4 <__assert_fail@plt+0x9260>
   29a94:	str	r0, [fp, #-8]
   29a98:	ldr	r3, [fp, #-8]
   29a9c:	cmp	r3, #0
   29aa0:	movne	r3, #1
   29aa4:	moveq	r3, #0
   29aa8:	uxtb	r3, r3
   29aac:	cmp	r3, #0
   29ab0:	beq	29abc <__assert_fail@plt+0x18578>
   29ab4:	ldr	r3, [fp, #-8]
   29ab8:	b	29c44 <__assert_fail@plt+0x18700>
   29abc:	sub	r3, fp, #28
   29ac0:	ldr	r2, [fp, #-16]
   29ac4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29ac8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29acc:	bl	2a164 <__assert_fail@plt+0x18c20>
   29ad0:	str	r0, [fp, #-8]
   29ad4:	ldr	r3, [fp, #-8]
   29ad8:	cmp	r3, #0
   29adc:	movne	r3, #1
   29ae0:	moveq	r3, #0
   29ae4:	uxtb	r3, r3
   29ae8:	cmp	r3, #0
   29aec:	bne	29c20 <__assert_fail@plt+0x186dc>
   29af0:	b	29c08 <__assert_fail@plt+0x186c4>
   29af4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29af8:	ldr	r2, [r3]
   29afc:	ldr	r3, [fp, #-16]
   29b00:	lsl	r3, r3, #2
   29b04:	add	r3, r2, r3
   29b08:	ldr	r3, [r3]
   29b0c:	cmp	r3, #0
   29b10:	bne	29b20 <__assert_fail@plt+0x185dc>
   29b14:	ldr	r3, [fp, #-12]
   29b18:	add	r3, r3, #1
   29b1c:	b	29b24 <__assert_fail@plt+0x185e0>
   29b20:	mov	r3, #0
   29b24:	str	r3, [fp, #-12]
   29b28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29b2c:	ldr	r2, [r3, #120]	; 0x78
   29b30:	ldr	r3, [fp, #-12]
   29b34:	cmp	r2, r3
   29b38:	bge	29b6c <__assert_fail@plt+0x18628>
   29b3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29b40:	ldr	r0, [r3]
   29b44:	ldr	r3, [fp, #-16]
   29b48:	lsl	r3, r3, #2
   29b4c:	mov	r2, r3
   29b50:	mov	r1, #0
   29b54:	bl	11448 <memset@plt>
   29b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   29b5c:	mov	r0, r3
   29b60:	bl	14dec <__assert_fail@plt+0x38a8>
   29b64:	mov	r3, #0
   29b68:	b	29c44 <__assert_fail@plt+0x18700>
   29b6c:	mov	r3, #0
   29b70:	str	r3, [fp, #-24]	; 0xffffffe8
   29b74:	ldr	r3, [fp, #-16]
   29b78:	sub	r3, r3, #1
   29b7c:	str	r3, [fp, #-16]
   29b80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29b84:	ldr	r2, [r3, #100]	; 0x64
   29b88:	ldr	r3, [fp, #-16]
   29b8c:	lsl	r3, r3, #2
   29b90:	add	r3, r2, r3
   29b94:	ldr	r3, [r3]
   29b98:	cmp	r3, #0
   29b9c:	beq	29bd4 <__assert_fail@plt+0x18690>
   29ba0:	sub	r3, fp, #28
   29ba4:	ldr	r2, [fp, #-16]
   29ba8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29bac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29bb0:	bl	29c50 <__assert_fail@plt+0x1870c>
   29bb4:	str	r0, [fp, #-8]
   29bb8:	ldr	r3, [fp, #-8]
   29bbc:	cmp	r3, #0
   29bc0:	movne	r3, #1
   29bc4:	moveq	r3, #0
   29bc8:	uxtb	r3, r3
   29bcc:	cmp	r3, #0
   29bd0:	bne	29c28 <__assert_fail@plt+0x186e4>
   29bd4:	sub	r3, fp, #28
   29bd8:	ldr	r2, [fp, #-16]
   29bdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29be4:	bl	2a164 <__assert_fail@plt+0x18c20>
   29be8:	str	r0, [fp, #-8]
   29bec:	ldr	r3, [fp, #-8]
   29bf0:	cmp	r3, #0
   29bf4:	movne	r3, #1
   29bf8:	moveq	r3, #0
   29bfc:	uxtb	r3, r3
   29c00:	cmp	r3, #0
   29c04:	bne	29c30 <__assert_fail@plt+0x186ec>
   29c08:	ldr	r3, [fp, #-16]
   29c0c:	cmp	r3, #0
   29c10:	bgt	29af4 <__assert_fail@plt+0x185b0>
   29c14:	mov	r3, #0
   29c18:	str	r3, [fp, #-8]
   29c1c:	b	29c34 <__assert_fail@plt+0x186f0>
   29c20:	nop			; (mov r0, r0)
   29c24:	b	29c34 <__assert_fail@plt+0x186f0>
   29c28:	nop			; (mov r0, r0)
   29c2c:	b	29c34 <__assert_fail@plt+0x186f0>
   29c30:	nop			; (mov r0, r0)
   29c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c38:	mov	r0, r3
   29c3c:	bl	14dec <__assert_fail@plt+0x38a8>
   29c40:	ldr	r3, [fp, #-8]
   29c44:	mov	r0, r3
   29c48:	sub	sp, fp, #4
   29c4c:	pop	{fp, pc}
   29c50:	push	{fp, lr}
   29c54:	add	fp, sp, #4
   29c58:	sub	sp, sp, #56	; 0x38
   29c5c:	str	r0, [fp, #-40]	; 0xffffffd8
   29c60:	str	r1, [fp, #-44]	; 0xffffffd4
   29c64:	str	r2, [fp, #-48]	; 0xffffffd0
   29c68:	str	r3, [fp, #-52]	; 0xffffffcc
   29c6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c70:	ldr	r3, [r3, #84]	; 0x54
   29c74:	str	r3, [fp, #-16]
   29c78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c7c:	ldr	r2, [r3, #100]	; 0x64
   29c80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29c84:	lsl	r3, r3, #2
   29c88:	add	r3, r2, r3
   29c8c:	ldr	r3, [r3]
   29c90:	add	r3, r3, #16
   29c94:	str	r3, [fp, #-20]	; 0xffffffec
   29c98:	mov	r3, #0
   29c9c:	str	r3, [fp, #-8]
   29ca0:	b	29ea4 <__assert_fail@plt+0x18960>
   29ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ca8:	ldr	r2, [r3, #8]
   29cac:	ldr	r3, [fp, #-8]
   29cb0:	lsl	r3, r3, #2
   29cb4:	add	r3, r2, r3
   29cb8:	ldr	r3, [r3]
   29cbc:	str	r3, [fp, #-24]	; 0xffffffe8
   29cc0:	mov	r3, #0
   29cc4:	str	r3, [fp, #-12]
   29cc8:	ldr	r3, [fp, #-16]
   29ccc:	ldr	r2, [r3]
   29cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29cd4:	lsl	r3, r3, #3
   29cd8:	add	r3, r2, r3
   29cdc:	ldrb	r3, [r3, #4]
   29ce0:	and	r3, r3, #8
   29ce4:	cmp	r3, #0
   29ce8:	ldr	r3, [fp, #-16]
   29cec:	ldr	r2, [r3]
   29cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29cf4:	lsl	r3, r3, #3
   29cf8:	add	r3, r2, r3
   29cfc:	ldrb	r3, [r3, #6]
   29d00:	and	r3, r3, #16
   29d04:	uxtb	r3, r3
   29d08:	cmp	r3, #0
   29d0c:	beq	29d34 <__assert_fail@plt+0x187f0>
   29d10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29d14:	ldr	r3, [r3, #12]
   29d18:	str	r3, [sp]
   29d1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29d24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   29d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29d2c:	bl	2b614 <__assert_fail@plt+0x1a0d0>
   29d30:	str	r0, [fp, #-12]
   29d34:	ldr	r3, [fp, #-12]
   29d38:	cmp	r3, #0
   29d3c:	bne	29de8 <__assert_fail@plt+0x188a4>
   29d40:	ldr	r3, [fp, #-16]
   29d44:	ldr	r2, [r3]
   29d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29d4c:	lsl	r3, r3, #3
   29d50:	add	r3, r2, r3
   29d54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29d58:	mov	r1, r3
   29d5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29d60:	bl	2fc78 <__assert_fail@plt+0x1e734>
   29d64:	mov	r3, r0
   29d68:	cmp	r3, #0
   29d6c:	beq	29de8 <__assert_fail@plt+0x188a4>
   29d70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29d74:	ldr	r2, [r3]
   29d78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29d7c:	add	r3, r3, #1
   29d80:	lsl	r3, r3, #2
   29d84:	add	r3, r2, r3
   29d88:	ldr	r3, [r3]
   29d8c:	cmp	r3, #0
   29d90:	beq	29de8 <__assert_fail@plt+0x188a4>
   29d94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29d98:	ldr	r2, [r3]
   29d9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29da0:	add	r3, r3, #1
   29da4:	lsl	r3, r3, #2
   29da8:	add	r3, r2, r3
   29dac:	ldr	r3, [r3]
   29db0:	add	r0, r3, #4
   29db4:	ldr	r3, [fp, #-16]
   29db8:	ldr	r2, [r3, #12]
   29dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29dc0:	lsl	r3, r3, #2
   29dc4:	add	r3, r2, r3
   29dc8:	ldr	r3, [r3]
   29dcc:	mov	r1, r3
   29dd0:	bl	1bac4 <__assert_fail@plt+0xa580>
   29dd4:	mov	r3, r0
   29dd8:	cmp	r3, #0
   29ddc:	beq	29de8 <__assert_fail@plt+0x188a4>
   29de0:	mov	r3, #1
   29de4:	str	r3, [fp, #-12]
   29de8:	ldr	r3, [fp, #-12]
   29dec:	cmp	r3, #0
   29df0:	beq	29e8c <__assert_fail@plt+0x18948>
   29df4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29df8:	ldr	r3, [r3, #20]
   29dfc:	cmp	r3, #0
   29e00:	beq	29e5c <__assert_fail@plt+0x18918>
   29e04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29e08:	ldr	r3, [fp, #-12]
   29e0c:	add	r3, r2, r3
   29e10:	str	r3, [fp, #-28]	; 0xffffffe4
   29e14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29e18:	add	r1, r3, #16
   29e1c:	ldr	r3, [fp, #-16]
   29e20:	ldr	r2, [r3, #12]
   29e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e28:	lsl	r3, r3, #2
   29e2c:	add	r3, r2, r3
   29e30:	ldr	r2, [r3]
   29e34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29e38:	str	r3, [sp, #4]
   29e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29e40:	str	r3, [sp]
   29e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29e48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   29e4c:	bl	2a7f0 <__assert_fail@plt+0x192ac>
   29e50:	mov	r3, r0
   29e54:	cmp	r3, #0
   29e58:	bne	29e94 <__assert_fail@plt+0x18950>
   29e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29e60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29e64:	bl	1b6b4 <__assert_fail@plt+0xa170>
   29e68:	mov	r3, r0
   29e6c:	strb	r3, [fp, #-29]	; 0xffffffe3
   29e70:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   29e74:	eor	r3, r3, #1
   29e78:	uxtb	r3, r3
   29e7c:	cmp	r3, #0
   29e80:	beq	29e98 <__assert_fail@plt+0x18954>
   29e84:	mov	r3, #12
   29e88:	b	29ebc <__assert_fail@plt+0x18978>
   29e8c:	nop			; (mov r0, r0)
   29e90:	b	29e98 <__assert_fail@plt+0x18954>
   29e94:	nop			; (mov r0, r0)
   29e98:	ldr	r3, [fp, #-8]
   29e9c:	add	r3, r3, #1
   29ea0:	str	r3, [fp, #-8]
   29ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ea8:	ldr	r2, [r3, #4]
   29eac:	ldr	r3, [fp, #-8]
   29eb0:	cmp	r2, r3
   29eb4:	bgt	29ca4 <__assert_fail@plt+0x18760>
   29eb8:	mov	r3, #0
   29ebc:	mov	r0, r3
   29ec0:	sub	sp, fp, #4
   29ec4:	pop	{fp, pc}
   29ec8:	push	{fp, lr}
   29ecc:	add	fp, sp, #4
   29ed0:	sub	sp, sp, #16
   29ed4:	str	r0, [fp, #-16]
   29ed8:	str	r1, [fp, #-20]	; 0xffffffec
   29edc:	ldr	r3, [fp, #-16]
   29ee0:	ldr	r3, [r3, #104]	; 0x68
   29ee4:	str	r3, [fp, #-8]
   29ee8:	ldr	r3, [fp, #-16]
   29eec:	ldr	r2, [r3, #36]	; 0x24
   29ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   29ef4:	cmp	r2, r3
   29ef8:	bgt	29f14 <__assert_fail@plt+0x189d0>
   29efc:	ldr	r3, [fp, #-16]
   29f00:	ldr	r2, [r3, #36]	; 0x24
   29f04:	ldr	r3, [fp, #-16]
   29f08:	ldr	r3, [r3, #48]	; 0x30
   29f0c:	cmp	r2, r3
   29f10:	blt	29f40 <__assert_fail@plt+0x189fc>
   29f14:	ldr	r3, [fp, #-16]
   29f18:	ldr	r2, [r3, #28]
   29f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f20:	cmp	r2, r3
   29f24:	bgt	29f7c <__assert_fail@plt+0x18a38>
   29f28:	ldr	r3, [fp, #-16]
   29f2c:	ldr	r2, [r3, #28]
   29f30:	ldr	r3, [fp, #-16]
   29f34:	ldr	r3, [r3, #48]	; 0x30
   29f38:	cmp	r2, r3
   29f3c:	bge	29f7c <__assert_fail@plt+0x18a38>
   29f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f44:	add	r3, r3, #1
   29f48:	mov	r1, r3
   29f4c:	ldr	r0, [fp, #-16]
   29f50:	bl	2fecc <__assert_fail@plt+0x1e988>
   29f54:	str	r0, [fp, #-12]
   29f58:	ldr	r3, [fp, #-12]
   29f5c:	cmp	r3, #0
   29f60:	movne	r3, #1
   29f64:	moveq	r3, #0
   29f68:	uxtb	r3, r3
   29f6c:	cmp	r3, #0
   29f70:	beq	29f7c <__assert_fail@plt+0x18a38>
   29f74:	ldr	r3, [fp, #-12]
   29f78:	b	29fdc <__assert_fail@plt+0x18a98>
   29f7c:	ldr	r2, [fp, #-8]
   29f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f84:	cmp	r2, r3
   29f88:	bge	29fd8 <__assert_fail@plt+0x18a94>
   29f8c:	ldr	r3, [fp, #-16]
   29f90:	ldr	r3, [r3, #100]	; 0x64
   29f94:	cmp	r3, #0
   29f98:	ldr	r3, [fp, #-16]
   29f9c:	ldr	r2, [r3, #100]	; 0x64
   29fa0:	ldr	r3, [fp, #-8]
   29fa4:	add	r3, r3, #1
   29fa8:	lsl	r3, r3, #2
   29fac:	add	r0, r2, r3
   29fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   29fb4:	ldr	r3, [fp, #-8]
   29fb8:	sub	r3, r2, r3
   29fbc:	lsl	r3, r3, #2
   29fc0:	mov	r2, r3
   29fc4:	mov	r1, #0
   29fc8:	bl	11448 <memset@plt>
   29fcc:	ldr	r3, [fp, #-16]
   29fd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   29fd4:	str	r2, [r3, #104]	; 0x68
   29fd8:	mov	r3, #0
   29fdc:	mov	r0, r3
   29fe0:	sub	sp, fp, #4
   29fe4:	pop	{fp, pc}
   29fe8:	push	{r4, fp, lr}
   29fec:	add	fp, sp, #8
   29ff0:	sub	sp, sp, #44	; 0x2c
   29ff4:	str	r0, [fp, #-40]	; 0xffffffd8
   29ff8:	str	r1, [fp, #-44]	; 0xffffffd4
   29ffc:	str	r2, [fp, #-48]	; 0xffffffd0
   2a000:	str	r3, [fp, #-52]	; 0xffffffcc
   2a004:	mov	r3, #0
   2a008:	str	r3, [fp, #-16]
   2a00c:	b	2a144 <__assert_fail@plt+0x18c00>
   2a010:	ldr	r3, [fp, #-16]
   2a014:	lsl	r3, r3, #2
   2a018:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a01c:	add	r3, r2, r3
   2a020:	ldr	r3, [r3]
   2a024:	cmp	r3, #0
   2a028:	bne	2a058 <__assert_fail@plt+0x18b14>
   2a02c:	ldr	r3, [fp, #-16]
   2a030:	lsl	r3, r3, #2
   2a034:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a038:	add	r3, r2, r3
   2a03c:	ldr	r2, [fp, #-16]
   2a040:	lsl	r2, r2, #2
   2a044:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a048:	add	r2, r1, r2
   2a04c:	ldr	r2, [r2]
   2a050:	str	r2, [r3]
   2a054:	b	2a138 <__assert_fail@plt+0x18bf4>
   2a058:	ldr	r3, [fp, #-16]
   2a05c:	lsl	r3, r3, #2
   2a060:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a064:	add	r3, r2, r3
   2a068:	ldr	r3, [r3]
   2a06c:	cmp	r3, #0
   2a070:	beq	2a138 <__assert_fail@plt+0x18bf4>
   2a074:	ldr	r3, [fp, #-16]
   2a078:	lsl	r3, r3, #2
   2a07c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a080:	add	r3, r2, r3
   2a084:	ldr	r3, [r3]
   2a088:	add	r1, r3, #4
   2a08c:	ldr	r3, [fp, #-16]
   2a090:	lsl	r3, r3, #2
   2a094:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a098:	add	r3, r2, r3
   2a09c:	ldr	r3, [r3]
   2a0a0:	add	r2, r3, #4
   2a0a4:	sub	r3, fp, #32
   2a0a8:	mov	r0, r3
   2a0ac:	bl	1aee4 <__assert_fail@plt+0x99a0>
   2a0b0:	mov	r3, r0
   2a0b4:	str	r3, [fp, #-20]	; 0xffffffec
   2a0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a0bc:	cmp	r3, #0
   2a0c0:	movne	r3, #1
   2a0c4:	moveq	r3, #0
   2a0c8:	uxtb	r3, r3
   2a0cc:	cmp	r3, #0
   2a0d0:	beq	2a0dc <__assert_fail@plt+0x18b98>
   2a0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a0d8:	b	2a158 <__assert_fail@plt+0x18c14>
   2a0dc:	ldr	r3, [fp, #-16]
   2a0e0:	lsl	r3, r3, #2
   2a0e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a0e8:	add	r4, r2, r3
   2a0ec:	sub	r2, fp, #32
   2a0f0:	sub	r3, fp, #20
   2a0f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a0f8:	mov	r0, r3
   2a0fc:	bl	1c0f0 <__assert_fail@plt+0xabac>
   2a100:	mov	r3, r0
   2a104:	str	r3, [r4]
   2a108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a10c:	mov	r0, r3
   2a110:	bl	14dec <__assert_fail@plt+0x38a8>
   2a114:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a118:	cmp	r3, #0
   2a11c:	movne	r3, #1
   2a120:	moveq	r3, #0
   2a124:	uxtb	r3, r3
   2a128:	cmp	r3, #0
   2a12c:	beq	2a138 <__assert_fail@plt+0x18bf4>
   2a130:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a134:	b	2a158 <__assert_fail@plt+0x18c14>
   2a138:	ldr	r3, [fp, #-16]
   2a13c:	add	r3, r3, #1
   2a140:	str	r3, [fp, #-16]
   2a144:	ldr	r2, [fp, #-16]
   2a148:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a14c:	cmp	r2, r3
   2a150:	blt	2a010 <__assert_fail@plt+0x18acc>
   2a154:	mov	r3, #0
   2a158:	mov	r0, r3
   2a15c:	sub	sp, fp, #8
   2a160:	pop	{r4, fp, pc}
   2a164:	push	{r4, fp, lr}
   2a168:	add	fp, sp, #8
   2a16c:	sub	sp, sp, #44	; 0x2c
   2a170:	str	r0, [fp, #-32]	; 0xffffffe0
   2a174:	str	r1, [fp, #-36]	; 0xffffffdc
   2a178:	str	r2, [fp, #-40]	; 0xffffffd8
   2a17c:	str	r3, [fp, #-44]	; 0xffffffd4
   2a180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a184:	ldr	r3, [r3, #84]	; 0x54
   2a188:	str	r3, [fp, #-16]
   2a18c:	mov	r3, #0
   2a190:	str	r3, [fp, #-24]	; 0xffffffe8
   2a194:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a198:	ldr	r2, [r3, #100]	; 0x64
   2a19c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a1a0:	lsl	r3, r3, #2
   2a1a4:	add	r3, r2, r3
   2a1a8:	ldr	r3, [r3]
   2a1ac:	cmp	r3, #0
   2a1b0:	beq	2a1d4 <__assert_fail@plt+0x18c90>
   2a1b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a1b8:	ldr	r2, [r3, #100]	; 0x64
   2a1bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a1c0:	lsl	r3, r3, #2
   2a1c4:	add	r3, r2, r3
   2a1c8:	ldr	r3, [r3]
   2a1cc:	add	r3, r3, #4
   2a1d0:	b	2a1d8 <__assert_fail@plt+0x18c94>
   2a1d4:	mov	r3, #0
   2a1d8:	str	r3, [fp, #-20]	; 0xffffffec
   2a1dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a1e0:	ldr	r3, [r3, #4]
   2a1e4:	cmp	r3, #0
   2a1e8:	bne	2a20c <__assert_fail@plt+0x18cc8>
   2a1ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a1f0:	ldr	r2, [r3]
   2a1f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a1f8:	lsl	r3, r3, #2
   2a1fc:	add	r3, r2, r3
   2a200:	mov	r2, #0
   2a204:	str	r2, [r3]
   2a208:	b	2a314 <__assert_fail@plt+0x18dd0>
   2a20c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a210:	cmp	r3, #0
   2a214:	beq	2a2c0 <__assert_fail@plt+0x18d7c>
   2a218:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a21c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a220:	ldr	r0, [fp, #-16]
   2a224:	bl	2a39c <__assert_fail@plt+0x18e58>
   2a228:	mov	r3, r0
   2a22c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a234:	cmp	r3, #0
   2a238:	movne	r3, #1
   2a23c:	moveq	r3, #0
   2a240:	uxtb	r3, r3
   2a244:	cmp	r3, #0
   2a248:	beq	2a254 <__assert_fail@plt+0x18d10>
   2a24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a250:	b	2a390 <__assert_fail@plt+0x18e4c>
   2a254:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a258:	ldr	r3, [r3, #20]
   2a25c:	cmp	r3, #0
   2a260:	beq	2a2c0 <__assert_fail@plt+0x18d7c>
   2a264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a268:	add	r1, r3, #16
   2a26c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a270:	ldr	r3, [r3, #116]	; 0x74
   2a274:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a278:	str	r2, [sp, #4]
   2a27c:	str	r3, [sp]
   2a280:	mov	r3, r1
   2a284:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a28c:	ldr	r0, [fp, #-16]
   2a290:	bl	2ad5c <__assert_fail@plt+0x19818>
   2a294:	mov	r3, r0
   2a298:	str	r3, [fp, #-24]	; 0xffffffe8
   2a29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a2a0:	cmp	r3, #0
   2a2a4:	movne	r3, #1
   2a2a8:	moveq	r3, #0
   2a2ac:	uxtb	r3, r3
   2a2b0:	cmp	r3, #0
   2a2b4:	beq	2a2c0 <__assert_fail@plt+0x18d7c>
   2a2b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a2bc:	b	2a390 <__assert_fail@plt+0x18e4c>
   2a2c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a2c4:	ldr	r2, [r3]
   2a2c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a2cc:	lsl	r3, r3, #2
   2a2d0:	add	r4, r2, r3
   2a2d4:	sub	r3, fp, #24
   2a2d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2a2dc:	ldr	r1, [fp, #-16]
   2a2e0:	mov	r0, r3
   2a2e4:	bl	1c0f0 <__assert_fail@plt+0xabac>
   2a2e8:	mov	r3, r0
   2a2ec:	str	r3, [r4]
   2a2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a2f4:	cmp	r3, #0
   2a2f8:	movne	r3, #1
   2a2fc:	moveq	r3, #0
   2a300:	uxtb	r3, r3
   2a304:	cmp	r3, #0
   2a308:	beq	2a314 <__assert_fail@plt+0x18dd0>
   2a30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a310:	b	2a390 <__assert_fail@plt+0x18e4c>
   2a314:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a318:	cmp	r3, #0
   2a31c:	beq	2a38c <__assert_fail@plt+0x18e48>
   2a320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a324:	ldr	r2, [r3, #100]	; 0x64
   2a328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a32c:	lsl	r3, r3, #2
   2a330:	add	r3, r2, r3
   2a334:	ldr	r3, [r3]
   2a338:	ldrb	r3, [r3, #52]	; 0x34
   2a33c:	and	r3, r3, #64	; 0x40
   2a340:	uxtb	r3, r3
   2a344:	cmp	r3, #0
   2a348:	beq	2a38c <__assert_fail@plt+0x18e48>
   2a34c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a350:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a354:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a358:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a35c:	bl	2b174 <__assert_fail@plt+0x19c30>
   2a360:	mov	r3, r0
   2a364:	str	r3, [fp, #-24]	; 0xffffffe8
   2a368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a36c:	cmp	r3, #0
   2a370:	movne	r3, #1
   2a374:	moveq	r3, #0
   2a378:	uxtb	r3, r3
   2a37c:	cmp	r3, #0
   2a380:	beq	2a38c <__assert_fail@plt+0x18e48>
   2a384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a388:	b	2a390 <__assert_fail@plt+0x18e4c>
   2a38c:	mov	r3, #0
   2a390:	mov	r0, r3
   2a394:	sub	sp, fp, #8
   2a398:	pop	{r4, fp, pc}
   2a39c:	push	{fp, lr}
   2a3a0:	add	fp, sp, #4
   2a3a4:	sub	sp, sp, #32
   2a3a8:	str	r0, [fp, #-24]	; 0xffffffe8
   2a3ac:	str	r1, [fp, #-28]	; 0xffffffe4
   2a3b0:	str	r2, [fp, #-32]	; 0xffffffe0
   2a3b4:	mov	r3, #0
   2a3b8:	str	r3, [fp, #-16]
   2a3bc:	sub	r3, fp, #16
   2a3c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a3c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a3c8:	mov	r0, r3
   2a3cc:	bl	1c0f0 <__assert_fail@plt+0xabac>
   2a3d0:	str	r0, [fp, #-12]
   2a3d4:	ldr	r3, [fp, #-16]
   2a3d8:	cmp	r3, #0
   2a3dc:	movne	r3, #1
   2a3e0:	moveq	r3, #0
   2a3e4:	uxtb	r3, r3
   2a3e8:	cmp	r3, #0
   2a3ec:	beq	2a3f8 <__assert_fail@plt+0x18eb4>
   2a3f0:	ldr	r3, [fp, #-16]
   2a3f4:	b	2a50c <__assert_fail@plt+0x18fc8>
   2a3f8:	ldr	r3, [fp, #-12]
   2a3fc:	ldr	r3, [r3, #28]
   2a400:	cmp	r3, #0
   2a404:	bne	2a4f0 <__assert_fail@plt+0x18fac>
   2a408:	ldr	r3, [fp, #-12]
   2a40c:	add	r2, r3, #28
   2a410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a414:	ldr	r3, [r3, #4]
   2a418:	mov	r1, r3
   2a41c:	mov	r0, r2
   2a420:	bl	1a720 <__assert_fail@plt+0x91dc>
   2a424:	mov	r3, r0
   2a428:	str	r3, [fp, #-16]
   2a42c:	ldr	r3, [fp, #-16]
   2a430:	cmp	r3, #0
   2a434:	movne	r3, #1
   2a438:	moveq	r3, #0
   2a43c:	uxtb	r3, r3
   2a440:	cmp	r3, #0
   2a444:	beq	2a450 <__assert_fail@plt+0x18f0c>
   2a448:	mov	r3, #12
   2a44c:	b	2a50c <__assert_fail@plt+0x18fc8>
   2a450:	mov	r3, #0
   2a454:	str	r3, [fp, #-8]
   2a458:	b	2a4dc <__assert_fail@plt+0x18f98>
   2a45c:	ldr	r3, [fp, #-12]
   2a460:	add	r0, r3, #28
   2a464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a468:	ldr	r2, [r3, #28]
   2a46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a470:	ldr	r1, [r3, #8]
   2a474:	ldr	r3, [fp, #-8]
   2a478:	lsl	r3, r3, #2
   2a47c:	add	r3, r1, r3
   2a480:	ldr	r3, [r3]
   2a484:	mov	r1, r3
   2a488:	mov	r3, r1
   2a48c:	lsl	r3, r3, #1
   2a490:	add	r3, r3, r1
   2a494:	lsl	r3, r3, #2
   2a498:	add	r3, r2, r3
   2a49c:	mov	r1, r3
   2a4a0:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2a4a4:	mov	r3, r0
   2a4a8:	str	r3, [fp, #-16]
   2a4ac:	ldr	r3, [fp, #-16]
   2a4b0:	cmp	r3, #0
   2a4b4:	movne	r3, #1
   2a4b8:	moveq	r3, #0
   2a4bc:	uxtb	r3, r3
   2a4c0:	cmp	r3, #0
   2a4c4:	beq	2a4d0 <__assert_fail@plt+0x18f8c>
   2a4c8:	mov	r3, #12
   2a4cc:	b	2a50c <__assert_fail@plt+0x18fc8>
   2a4d0:	ldr	r3, [fp, #-8]
   2a4d4:	add	r3, r3, #1
   2a4d8:	str	r3, [fp, #-8]
   2a4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a4e0:	ldr	r2, [r3, #4]
   2a4e4:	ldr	r3, [fp, #-8]
   2a4e8:	cmp	r2, r3
   2a4ec:	bgt	2a45c <__assert_fail@plt+0x18f18>
   2a4f0:	ldr	r3, [fp, #-12]
   2a4f4:	add	r3, r3, #28
   2a4f8:	mov	r2, r3
   2a4fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a500:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2a504:	bl	1aa4c <__assert_fail@plt+0x9508>
   2a508:	mov	r3, r0
   2a50c:	mov	r0, r3
   2a510:	sub	sp, fp, #4
   2a514:	pop	{fp, pc}
   2a518:	push	{fp, lr}
   2a51c:	add	fp, sp, #4
   2a520:	sub	sp, sp, #64	; 0x40
   2a524:	str	r0, [fp, #-56]	; 0xffffffc8
   2a528:	str	r1, [fp, #-60]	; 0xffffffc4
   2a52c:	str	r2, [fp, #-64]	; 0xffffffc0
   2a530:	str	r3, [fp, #-68]	; 0xffffffbc
   2a534:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a538:	ldr	r1, [r3, #28]
   2a53c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2a540:	mov	r3, r2
   2a544:	lsl	r3, r3, #1
   2a548:	add	r3, r3, r2
   2a54c:	lsl	r3, r3, #2
   2a550:	add	r3, r1, r3
   2a554:	str	r3, [fp, #-12]
   2a558:	sub	r3, fp, #48	; 0x30
   2a55c:	mov	r2, #12
   2a560:	mov	r1, #0
   2a564:	mov	r0, r3
   2a568:	bl	11448 <memset@plt>
   2a56c:	mov	r3, #0
   2a570:	str	r3, [fp, #-8]
   2a574:	b	2a738 <__assert_fail@plt+0x191f4>
   2a578:	ldr	r3, [fp, #-12]
   2a57c:	ldr	r2, [r3, #8]
   2a580:	ldr	r3, [fp, #-8]
   2a584:	lsl	r3, r3, #2
   2a588:	add	r3, r2, r3
   2a58c:	ldr	r3, [r3]
   2a590:	str	r3, [fp, #-16]
   2a594:	ldr	r2, [fp, #-16]
   2a598:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2a59c:	cmp	r2, r3
   2a5a0:	beq	2a728 <__assert_fail@plt+0x191e4>
   2a5a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a5a8:	ldr	r2, [r3]
   2a5ac:	ldr	r3, [fp, #-16]
   2a5b0:	lsl	r3, r3, #3
   2a5b4:	add	r3, r2, r3
   2a5b8:	ldrb	r3, [r3, #4]
   2a5bc:	and	r3, r3, #8
   2a5c0:	cmp	r3, #0
   2a5c4:	beq	2a72c <__assert_fail@plt+0x191e8>
   2a5c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a5cc:	ldr	r1, [r3, #20]
   2a5d0:	ldr	r2, [fp, #-16]
   2a5d4:	mov	r3, r2
   2a5d8:	lsl	r3, r3, #1
   2a5dc:	add	r3, r3, r2
   2a5e0:	lsl	r3, r3, #2
   2a5e4:	add	r3, r1, r3
   2a5e8:	ldr	r3, [r3, #8]
   2a5ec:	ldr	r3, [r3]
   2a5f0:	str	r3, [fp, #-20]	; 0xffffffec
   2a5f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a5f8:	ldr	r1, [r3, #20]
   2a5fc:	ldr	r2, [fp, #-16]
   2a600:	mov	r3, r2
   2a604:	lsl	r3, r3, #1
   2a608:	add	r3, r3, r2
   2a60c:	lsl	r3, r3, #2
   2a610:	add	r3, r1, r3
   2a614:	ldr	r3, [r3, #4]
   2a618:	cmp	r3, #1
   2a61c:	ble	2a650 <__assert_fail@plt+0x1910c>
   2a620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a624:	ldr	r1, [r3, #20]
   2a628:	ldr	r2, [fp, #-16]
   2a62c:	mov	r3, r2
   2a630:	lsl	r3, r3, #1
   2a634:	add	r3, r3, r2
   2a638:	lsl	r3, r3, #2
   2a63c:	add	r3, r1, r3
   2a640:	ldr	r3, [r3, #8]
   2a644:	add	r3, r3, #4
   2a648:	ldr	r3, [r3]
   2a64c:	b	2a654 <__assert_fail@plt+0x19110>
   2a650:	mvn	r3, #0
   2a654:	str	r3, [fp, #-24]	; 0xffffffe8
   2a658:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a65c:	ldr	r0, [fp, #-12]
   2a660:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a664:	mov	r3, r0
   2a668:	cmp	r3, #0
   2a66c:	bne	2a688 <__assert_fail@plt+0x19144>
   2a670:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a674:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a678:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a67c:	mov	r3, r0
   2a680:	cmp	r3, #0
   2a684:	bne	2a6c4 <__assert_fail@plt+0x19180>
   2a688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a68c:	cmp	r3, #0
   2a690:	ble	2a72c <__assert_fail@plt+0x191e8>
   2a694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a698:	ldr	r0, [fp, #-12]
   2a69c:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a6a0:	mov	r3, r0
   2a6a4:	cmp	r3, #0
   2a6a8:	bne	2a72c <__assert_fail@plt+0x191e8>
   2a6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a6b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a6b4:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a6b8:	mov	r3, r0
   2a6bc:	cmp	r3, #0
   2a6c0:	beq	2a72c <__assert_fail@plt+0x191e8>
   2a6c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a6c8:	ldr	r1, [r3, #28]
   2a6cc:	ldr	r2, [fp, #-16]
   2a6d0:	mov	r3, r2
   2a6d4:	lsl	r3, r3, #1
   2a6d8:	add	r3, r3, r2
   2a6dc:	lsl	r3, r3, #2
   2a6e0:	add	r2, r1, r3
   2a6e4:	sub	r3, fp, #48	; 0x30
   2a6e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a6ec:	mov	r0, r3
   2a6f0:	bl	1aa4c <__assert_fail@plt+0x9508>
   2a6f4:	str	r0, [fp, #-28]	; 0xffffffe4
   2a6f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a6fc:	cmp	r3, #0
   2a700:	movne	r3, #1
   2a704:	moveq	r3, #0
   2a708:	uxtb	r3, r3
   2a70c:	cmp	r3, #0
   2a710:	beq	2a72c <__assert_fail@plt+0x191e8>
   2a714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a718:	mov	r0, r3
   2a71c:	bl	14dec <__assert_fail@plt+0x38a8>
   2a720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a724:	b	2a7e4 <__assert_fail@plt+0x192a0>
   2a728:	nop			; (mov r0, r0)
   2a72c:	ldr	r3, [fp, #-8]
   2a730:	add	r3, r3, #1
   2a734:	str	r3, [fp, #-8]
   2a738:	ldr	r3, [fp, #-12]
   2a73c:	ldr	r2, [r3, #4]
   2a740:	ldr	r3, [fp, #-8]
   2a744:	cmp	r2, r3
   2a748:	bgt	2a578 <__assert_fail@plt+0x19034>
   2a74c:	mov	r3, #0
   2a750:	str	r3, [fp, #-8]
   2a754:	b	2a7c0 <__assert_fail@plt+0x1927c>
   2a758:	ldr	r3, [fp, #-12]
   2a75c:	ldr	r2, [r3, #8]
   2a760:	ldr	r3, [fp, #-8]
   2a764:	lsl	r3, r3, #2
   2a768:	add	r3, r2, r3
   2a76c:	ldr	r3, [r3]
   2a770:	str	r3, [fp, #-32]	; 0xffffffe0
   2a774:	sub	r3, fp, #48	; 0x30
   2a778:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a77c:	mov	r0, r3
   2a780:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a784:	mov	r3, r0
   2a788:	cmp	r3, #0
   2a78c:	bne	2a7b4 <__assert_fail@plt+0x19270>
   2a790:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a794:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a798:	bl	1bac4 <__assert_fail@plt+0xa580>
   2a79c:	mov	r3, r0
   2a7a0:	sub	r3, r3, #1
   2a7a4:	str	r3, [fp, #-36]	; 0xffffffdc
   2a7a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a7ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2a7b0:	bl	1bbb0 <__assert_fail@plt+0xa66c>
   2a7b4:	ldr	r3, [fp, #-8]
   2a7b8:	add	r3, r3, #1
   2a7bc:	str	r3, [fp, #-8]
   2a7c0:	ldr	r3, [fp, #-12]
   2a7c4:	ldr	r2, [r3, #4]
   2a7c8:	ldr	r3, [fp, #-8]
   2a7cc:	cmp	r2, r3
   2a7d0:	bgt	2a758 <__assert_fail@plt+0x19214>
   2a7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a7d8:	mov	r0, r3
   2a7dc:	bl	14dec <__assert_fail@plt+0x38a8>
   2a7e0:	mov	r3, #0
   2a7e4:	mov	r0, r3
   2a7e8:	sub	sp, fp, #4
   2a7ec:	pop	{fp, pc}
   2a7f0:	push	{fp, lr}
   2a7f4:	add	fp, sp, #4
   2a7f8:	sub	sp, sp, #56	; 0x38
   2a7fc:	str	r0, [fp, #-40]	; 0xffffffd8
   2a800:	str	r1, [fp, #-44]	; 0xffffffd4
   2a804:	str	r2, [fp, #-48]	; 0xffffffd0
   2a808:	str	r3, [fp, #-52]	; 0xffffffcc
   2a80c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a810:	ldr	r3, [r3, #84]	; 0x54
   2a814:	str	r3, [fp, #-12]
   2a818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2a81c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a820:	bl	30654 <__assert_fail@plt+0x1f110>
   2a824:	str	r0, [fp, #-16]
   2a828:	ldr	r1, [fp, #8]
   2a82c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a830:	bl	30654 <__assert_fail@plt+0x1f110>
   2a834:	str	r0, [fp, #-20]	; 0xffffffec
   2a838:	mov	r3, #0
   2a83c:	str	r3, [fp, #-8]
   2a840:	b	2a940 <__assert_fail@plt+0x193fc>
   2a844:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a848:	ldr	r2, [r3, #116]	; 0x74
   2a84c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a850:	ldr	r1, [r3, #8]
   2a854:	ldr	r3, [fp, #-8]
   2a858:	lsl	r3, r3, #2
   2a85c:	add	r3, r1, r3
   2a860:	ldr	r3, [r3]
   2a864:	mov	r1, r3
   2a868:	mov	r3, r1
   2a86c:	lsl	r3, r3, #1
   2a870:	add	r3, r3, r1
   2a874:	lsl	r3, r3, #3
   2a878:	add	r3, r2, r3
   2a87c:	str	r3, [fp, #-24]	; 0xffffffe8
   2a880:	ldr	r3, [fp, #-12]
   2a884:	ldr	r2, [r3]
   2a888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a88c:	ldr	r3, [r3]
   2a890:	lsl	r3, r3, #3
   2a894:	add	r3, r2, r3
   2a898:	ldr	r3, [r3]
   2a89c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a8a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a8a4:	ldr	r2, [r3, #8]
   2a8a8:	ldr	r3, [fp, #-8]
   2a8ac:	lsl	r3, r3, #2
   2a8b0:	add	r3, r2, r3
   2a8b4:	ldr	r1, [r3]
   2a8b8:	ldr	r3, [fp, #-16]
   2a8bc:	str	r3, [sp, #4]
   2a8c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a8c4:	str	r3, [sp]
   2a8c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2a8cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a8d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a8d4:	bl	2ac58 <__assert_fail@plt+0x19714>
   2a8d8:	str	r0, [fp, #-32]	; 0xffffffe0
   2a8dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a8e0:	ldr	r2, [r3, #8]
   2a8e4:	ldr	r3, [fp, #-8]
   2a8e8:	lsl	r3, r3, #2
   2a8ec:	add	r3, r2, r3
   2a8f0:	ldr	r1, [r3]
   2a8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a8f8:	str	r3, [sp, #4]
   2a8fc:	ldr	r3, [fp, #8]
   2a900:	str	r3, [sp]
   2a904:	ldr	r3, [fp, #4]
   2a908:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2a90c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a910:	bl	2ac58 <__assert_fail@plt+0x19714>
   2a914:	str	r0, [fp, #-36]	; 0xffffffdc
   2a918:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2a91c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2a920:	cmp	r2, r3
   2a924:	bne	2a938 <__assert_fail@plt+0x193f4>
   2a928:	ldr	r3, [fp, #-8]
   2a92c:	add	r3, r3, #1
   2a930:	str	r3, [fp, #-8]
   2a934:	b	2a940 <__assert_fail@plt+0x193fc>
   2a938:	mov	r3, #1
   2a93c:	b	2a958 <__assert_fail@plt+0x19414>
   2a940:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a944:	ldr	r2, [r3, #4]
   2a948:	ldr	r3, [fp, #-8]
   2a94c:	cmp	r2, r3
   2a950:	bgt	2a844 <__assert_fail@plt+0x19300>
   2a954:	mov	r3, #0
   2a958:	mov	r0, r3
   2a95c:	sub	sp, fp, #4
   2a960:	pop	{fp, pc}
   2a964:	push	{fp, lr}
   2a968:	add	fp, sp, #4
   2a96c:	sub	sp, sp, #56	; 0x38
   2a970:	str	r0, [fp, #-40]	; 0xffffffd8
   2a974:	str	r1, [fp, #-44]	; 0xffffffd4
   2a978:	str	r2, [fp, #-48]	; 0xffffffd0
   2a97c:	str	r3, [fp, #-52]	; 0xffffffcc
   2a980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a984:	ldr	r3, [r3, #84]	; 0x54
   2a988:	str	r3, [fp, #-16]
   2a98c:	ldr	r3, [fp, #-16]
   2a990:	ldr	r1, [r3, #24]
   2a994:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2a998:	mov	r3, r2
   2a99c:	lsl	r3, r3, #1
   2a9a0:	add	r3, r3, r2
   2a9a4:	lsl	r3, r3, #2
   2a9a8:	add	r3, r1, r3
   2a9ac:	str	r3, [fp, #-20]	; 0xffffffec
   2a9b0:	mov	r3, #0
   2a9b4:	str	r3, [fp, #-8]
   2a9b8:	b	2ac20 <__assert_fail@plt+0x196dc>
   2a9bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9c0:	ldr	r2, [r3, #8]
   2a9c4:	ldr	r3, [fp, #-8]
   2a9c8:	lsl	r3, r3, #2
   2a9cc:	add	r3, r2, r3
   2a9d0:	ldr	r3, [r3]
   2a9d4:	str	r3, [fp, #-24]	; 0xffffffe8
   2a9d8:	ldr	r3, [fp, #-16]
   2a9dc:	ldr	r2, [r3]
   2a9e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9e4:	lsl	r3, r3, #3
   2a9e8:	add	r3, r2, r3
   2a9ec:	ldrb	r3, [r3, #4]
   2a9f0:	cmp	r3, #8
   2a9f4:	beq	2ab88 <__assert_fail@plt+0x19644>
   2a9f8:	cmp	r3, #9
   2a9fc:	beq	2abc4 <__assert_fail@plt+0x19680>
   2aa00:	cmp	r3, #4
   2aa04:	beq	2aa0c <__assert_fail@plt+0x194c8>
   2aa08:	b	2ac14 <__assert_fail@plt+0x196d0>
   2aa0c:	ldr	r3, [fp, #4]
   2aa10:	cmn	r3, #1
   2aa14:	beq	2ac00 <__assert_fail@plt+0x196bc>
   2aa18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa1c:	ldr	r1, [r3, #116]	; 0x74
   2aa20:	ldr	r2, [fp, #4]
   2aa24:	mov	r3, r2
   2aa28:	lsl	r3, r3, #1
   2aa2c:	add	r3, r3, r2
   2aa30:	lsl	r3, r3, #3
   2aa34:	add	r3, r1, r3
   2aa38:	str	r3, [fp, #-12]
   2aa3c:	ldr	r3, [fp, #-12]
   2aa40:	ldr	r2, [r3]
   2aa44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aa48:	cmp	r2, r3
   2aa4c:	bne	2ab60 <__assert_fail@plt+0x1961c>
   2aa50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2aa54:	cmp	r3, #31
   2aa58:	bgt	2aa78 <__assert_fail@plt+0x19534>
   2aa5c:	ldr	r3, [fp, #-12]
   2aa60:	ldr	r2, [r3, #16]
   2aa64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2aa68:	lsr	r3, r2, r3
   2aa6c:	and	r3, r3, #1
   2aa70:	cmp	r3, #0
   2aa74:	beq	2ab68 <__assert_fail@plt+0x19624>
   2aa78:	ldr	r3, [fp, #-16]
   2aa7c:	ldr	r1, [r3, #20]
   2aa80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2aa84:	mov	r3, r2
   2aa88:	lsl	r3, r3, #1
   2aa8c:	add	r3, r3, r2
   2aa90:	lsl	r3, r3, #2
   2aa94:	add	r3, r1, r3
   2aa98:	ldr	r3, [r3, #8]
   2aa9c:	ldr	r3, [r3]
   2aaa0:	str	r3, [fp, #-28]	; 0xffffffe4
   2aaa4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2aaa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2aaac:	cmp	r2, r3
   2aab0:	bne	2aad4 <__assert_fail@plt+0x19590>
   2aab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aab8:	and	r3, r3, #1
   2aabc:	cmp	r3, #0
   2aac0:	beq	2aacc <__assert_fail@plt+0x19588>
   2aac4:	mvn	r3, #0
   2aac8:	b	2ac4c <__assert_fail@plt+0x19708>
   2aacc:	mov	r3, #0
   2aad0:	b	2ac4c <__assert_fail@plt+0x19708>
   2aad4:	ldr	r3, [fp, #4]
   2aad8:	str	r3, [sp]
   2aadc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aae0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2aae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2aae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2aaec:	bl	2a964 <__assert_fail@plt+0x19420>
   2aaf0:	str	r0, [fp, #-32]	; 0xffffffe0
   2aaf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2aaf8:	cmn	r3, #1
   2aafc:	bne	2ab08 <__assert_fail@plt+0x195c4>
   2ab00:	mvn	r3, #0
   2ab04:	b	2ac4c <__assert_fail@plt+0x19708>
   2ab08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ab0c:	cmp	r3, #0
   2ab10:	bne	2ab2c <__assert_fail@plt+0x195e8>
   2ab14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ab18:	and	r3, r3, #2
   2ab1c:	cmp	r3, #0
   2ab20:	beq	2ab2c <__assert_fail@plt+0x195e8>
   2ab24:	mov	r3, #0
   2ab28:	b	2ac4c <__assert_fail@plt+0x19708>
   2ab2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ab30:	cmp	r3, #31
   2ab34:	bgt	2ab6c <__assert_fail@plt+0x19628>
   2ab38:	ldr	r3, [fp, #-12]
   2ab3c:	ldr	r2, [r3, #16]
   2ab40:	mov	r1, #1
   2ab44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ab48:	lsl	r3, r1, r3
   2ab4c:	mvn	r3, r3
   2ab50:	and	r2, r2, r3
   2ab54:	ldr	r3, [fp, #-12]
   2ab58:	str	r2, [r3, #16]
   2ab5c:	b	2ab6c <__assert_fail@plt+0x19628>
   2ab60:	nop			; (mov r0, r0)
   2ab64:	b	2ab6c <__assert_fail@plt+0x19628>
   2ab68:	nop			; (mov r0, r0)
   2ab6c:	ldr	r3, [fp, #-12]
   2ab70:	add	r2, r3, #24
   2ab74:	str	r2, [fp, #-12]
   2ab78:	ldrb	r3, [r3, #20]
   2ab7c:	cmp	r3, #0
   2ab80:	bne	2aa3c <__assert_fail@plt+0x194f8>
   2ab84:	b	2ac00 <__assert_fail@plt+0x196bc>
   2ab88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ab8c:	and	r3, r3, #1
   2ab90:	cmp	r3, #0
   2ab94:	beq	2ac08 <__assert_fail@plt+0x196c4>
   2ab98:	ldr	r3, [fp, #-16]
   2ab9c:	ldr	r2, [r3]
   2aba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aba4:	lsl	r3, r3, #3
   2aba8:	add	r3, r2, r3
   2abac:	ldr	r2, [r3]
   2abb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2abb4:	cmp	r2, r3
   2abb8:	bne	2ac08 <__assert_fail@plt+0x196c4>
   2abbc:	mvn	r3, #0
   2abc0:	b	2ac4c <__assert_fail@plt+0x19708>
   2abc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2abc8:	and	r3, r3, #2
   2abcc:	cmp	r3, #0
   2abd0:	beq	2ac10 <__assert_fail@plt+0x196cc>
   2abd4:	ldr	r3, [fp, #-16]
   2abd8:	ldr	r2, [r3]
   2abdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2abe0:	lsl	r3, r3, #3
   2abe4:	add	r3, r2, r3
   2abe8:	ldr	r2, [r3]
   2abec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2abf0:	cmp	r2, r3
   2abf4:	bne	2ac10 <__assert_fail@plt+0x196cc>
   2abf8:	mov	r3, #0
   2abfc:	b	2ac4c <__assert_fail@plt+0x19708>
   2ac00:	nop			; (mov r0, r0)
   2ac04:	b	2ac14 <__assert_fail@plt+0x196d0>
   2ac08:	nop			; (mov r0, r0)
   2ac0c:	b	2ac14 <__assert_fail@plt+0x196d0>
   2ac10:	nop			; (mov r0, r0)
   2ac14:	ldr	r3, [fp, #-8]
   2ac18:	add	r3, r3, #1
   2ac1c:	str	r3, [fp, #-8]
   2ac20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ac24:	ldr	r2, [r3, #4]
   2ac28:	ldr	r3, [fp, #-8]
   2ac2c:	cmp	r2, r3
   2ac30:	bgt	2a9bc <__assert_fail@plt+0x19478>
   2ac34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ac38:	and	r3, r3, #2
   2ac3c:	cmp	r3, #0
   2ac40:	movne	r3, #1
   2ac44:	moveq	r3, #0
   2ac48:	uxtb	r3, r3
   2ac4c:	mov	r0, r3
   2ac50:	sub	sp, fp, #4
   2ac54:	pop	{fp, pc}
   2ac58:	push	{fp, lr}
   2ac5c:	add	fp, sp, #4
   2ac60:	sub	sp, sp, #32
   2ac64:	str	r0, [fp, #-16]
   2ac68:	str	r1, [fp, #-20]	; 0xffffffec
   2ac6c:	str	r2, [fp, #-24]	; 0xffffffe8
   2ac70:	str	r3, [fp, #-28]	; 0xffffffe4
   2ac74:	ldr	r3, [fp, #-16]
   2ac78:	ldr	r1, [r3, #116]	; 0x74
   2ac7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ac80:	mov	r3, r2
   2ac84:	lsl	r3, r3, #1
   2ac88:	add	r3, r3, r2
   2ac8c:	lsl	r3, r3, #3
   2ac90:	add	r3, r1, r3
   2ac94:	str	r3, [fp, #-8]
   2ac98:	ldr	r3, [fp, #-8]
   2ac9c:	ldr	r2, [r3, #8]
   2aca0:	ldr	r3, [fp, #4]
   2aca4:	cmp	r2, r3
   2aca8:	ble	2acb4 <__assert_fail@plt+0x19770>
   2acac:	mvn	r3, #0
   2acb0:	b	2ad50 <__assert_fail@plt+0x1980c>
   2acb4:	ldr	r3, [fp, #-8]
   2acb8:	ldr	r2, [r3, #12]
   2acbc:	ldr	r3, [fp, #4]
   2acc0:	cmp	r2, r3
   2acc4:	bge	2acd0 <__assert_fail@plt+0x1978c>
   2acc8:	mov	r3, #1
   2accc:	b	2ad50 <__assert_fail@plt+0x1980c>
   2acd0:	ldr	r3, [fp, #-8]
   2acd4:	ldr	r2, [r3, #8]
   2acd8:	ldr	r3, [fp, #4]
   2acdc:	cmp	r2, r3
   2ace0:	moveq	r3, #1
   2ace4:	movne	r3, #0
   2ace8:	uxtb	r3, r3
   2acec:	str	r3, [fp, #-12]
   2acf0:	ldr	r3, [fp, #-8]
   2acf4:	ldr	r2, [r3, #12]
   2acf8:	ldr	r3, [fp, #4]
   2acfc:	cmp	r2, r3
   2ad00:	bne	2ad0c <__assert_fail@plt+0x197c8>
   2ad04:	mov	r3, #2
   2ad08:	b	2ad10 <__assert_fail@plt+0x197cc>
   2ad0c:	mov	r3, #0
   2ad10:	ldr	r2, [fp, #-12]
   2ad14:	orr	r3, r2, r3
   2ad18:	str	r3, [fp, #-12]
   2ad1c:	ldr	r3, [fp, #-12]
   2ad20:	cmp	r3, #0
   2ad24:	bne	2ad30 <__assert_fail@plt+0x197ec>
   2ad28:	mov	r3, #0
   2ad2c:	b	2ad50 <__assert_fail@plt+0x1980c>
   2ad30:	ldr	r3, [fp, #8]
   2ad34:	str	r3, [sp]
   2ad38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ad40:	ldr	r1, [fp, #-12]
   2ad44:	ldr	r0, [fp, #-16]
   2ad48:	bl	2a964 <__assert_fail@plt+0x19420>
   2ad4c:	mov	r3, r0
   2ad50:	mov	r0, r3
   2ad54:	sub	sp, fp, #4
   2ad58:	pop	{fp, pc}
   2ad5c:	push	{fp, lr}
   2ad60:	add	fp, sp, #4
   2ad64:	sub	sp, sp, #64	; 0x40
   2ad68:	str	r0, [fp, #-56]	; 0xffffffc8
   2ad6c:	str	r1, [fp, #-60]	; 0xffffffc4
   2ad70:	str	r2, [fp, #-64]	; 0xffffffc0
   2ad74:	str	r3, [fp, #-68]	; 0xffffffbc
   2ad78:	mov	r3, #0
   2ad7c:	str	r3, [fp, #-12]
   2ad80:	b	2b150 <__assert_fail@plt+0x19c0c>
   2ad84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2ad88:	ldr	r2, [r3, #8]
   2ad8c:	ldr	r3, [fp, #-12]
   2ad90:	lsl	r3, r3, #2
   2ad94:	add	r3, r2, r3
   2ad98:	ldr	r3, [r3]
   2ad9c:	mov	r2, r3
   2ada0:	mov	r3, r2
   2ada4:	lsl	r3, r3, #1
   2ada8:	add	r3, r3, r2
   2adac:	lsl	r3, r3, #3
   2adb0:	mov	r2, r3
   2adb4:	ldr	r3, [fp, #4]
   2adb8:	add	r3, r3, r2
   2adbc:	str	r3, [fp, #-24]	; 0xffffffe8
   2adc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2adc4:	ldr	r2, [r3, #8]
   2adc8:	ldr	r3, [fp, #8]
   2adcc:	cmp	r2, r3
   2add0:	bge	2b140 <__assert_fail@plt+0x19bfc>
   2add4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2add8:	ldr	r2, [r3, #4]
   2addc:	ldr	r3, [fp, #8]
   2ade0:	cmp	r2, r3
   2ade4:	blt	2b140 <__assert_fail@plt+0x19bfc>
   2ade8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2adec:	ldr	r2, [r3]
   2adf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2adf4:	ldr	r3, [r3]
   2adf8:	lsl	r3, r3, #3
   2adfc:	add	r3, r2, r3
   2ae00:	ldr	r3, [r3]
   2ae04:	str	r3, [fp, #-28]	; 0xffffffe4
   2ae08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ae0c:	ldr	r2, [r3, #12]
   2ae10:	ldr	r3, [fp, #8]
   2ae14:	cmp	r2, r3
   2ae18:	bne	2b05c <__assert_fail@plt+0x19b18>
   2ae1c:	mvn	r3, #0
   2ae20:	str	r3, [fp, #-16]
   2ae24:	mvn	r3, #0
   2ae28:	str	r3, [fp, #-20]	; 0xffffffec
   2ae2c:	mov	r3, #0
   2ae30:	str	r3, [fp, #-8]
   2ae34:	b	2aef0 <__assert_fail@plt+0x199ac>
   2ae38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ae3c:	ldr	r2, [r3, #8]
   2ae40:	ldr	r3, [fp, #-8]
   2ae44:	lsl	r3, r3, #2
   2ae48:	add	r3, r2, r3
   2ae4c:	ldr	r3, [r3]
   2ae50:	str	r3, [fp, #-44]	; 0xffffffd4
   2ae54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ae58:	ldr	r2, [r3]
   2ae5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ae60:	lsl	r3, r3, #3
   2ae64:	add	r3, r2, r3
   2ae68:	ldrb	r3, [r3, #4]
   2ae6c:	str	r3, [fp, #-48]	; 0xffffffd0
   2ae70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ae74:	cmp	r3, #8
   2ae78:	bne	2aeac <__assert_fail@plt+0x19968>
   2ae7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ae80:	ldr	r2, [r3]
   2ae84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ae88:	lsl	r3, r3, #3
   2ae8c:	add	r3, r2, r3
   2ae90:	ldr	r2, [r3]
   2ae94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ae98:	cmp	r2, r3
   2ae9c:	bne	2aeac <__assert_fail@plt+0x19968>
   2aea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aea4:	str	r3, [fp, #-16]
   2aea8:	b	2aee4 <__assert_fail@plt+0x199a0>
   2aeac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2aeb0:	cmp	r3, #9
   2aeb4:	bne	2aee4 <__assert_fail@plt+0x199a0>
   2aeb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2aebc:	ldr	r2, [r3]
   2aec0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aec4:	lsl	r3, r3, #3
   2aec8:	add	r3, r2, r3
   2aecc:	ldr	r2, [r3]
   2aed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aed4:	cmp	r2, r3
   2aed8:	bne	2aee4 <__assert_fail@plt+0x199a0>
   2aedc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aee0:	str	r3, [fp, #-20]	; 0xffffffec
   2aee4:	ldr	r3, [fp, #-8]
   2aee8:	add	r3, r3, #1
   2aeec:	str	r3, [fp, #-8]
   2aef0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2aef4:	ldr	r2, [r3, #4]
   2aef8:	ldr	r3, [fp, #-8]
   2aefc:	cmp	r2, r3
   2af00:	bgt	2ae38 <__assert_fail@plt+0x198f4>
   2af04:	ldr	r3, [fp, #-16]
   2af08:	cmp	r3, #0
   2af0c:	blt	2af4c <__assert_fail@plt+0x19a08>
   2af10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2af14:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2af18:	ldr	r1, [fp, #-16]
   2af1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2af20:	bl	2a518 <__assert_fail@plt+0x18fd4>
   2af24:	str	r0, [fp, #-40]	; 0xffffffd8
   2af28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2af2c:	cmp	r3, #0
   2af30:	movne	r3, #1
   2af34:	moveq	r3, #0
   2af38:	uxtb	r3, r3
   2af3c:	cmp	r3, #0
   2af40:	beq	2af4c <__assert_fail@plt+0x19a08>
   2af44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2af48:	b	2b168 <__assert_fail@plt+0x19c24>
   2af4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af50:	cmp	r3, #0
   2af54:	blt	2b144 <__assert_fail@plt+0x19c00>
   2af58:	mov	r3, #0
   2af5c:	str	r3, [fp, #-8]
   2af60:	b	2b044 <__assert_fail@plt+0x19b00>
   2af64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2af68:	ldr	r2, [r3, #8]
   2af6c:	ldr	r3, [fp, #-8]
   2af70:	lsl	r3, r3, #2
   2af74:	add	r3, r2, r3
   2af78:	ldr	r3, [r3]
   2af7c:	str	r3, [fp, #-52]	; 0xffffffcc
   2af80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2af84:	ldr	r1, [r3, #28]
   2af88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2af8c:	mov	r3, r2
   2af90:	lsl	r3, r3, #1
   2af94:	add	r3, r3, r2
   2af98:	lsl	r3, r3, #2
   2af9c:	add	r3, r1, r3
   2afa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2afa4:	mov	r0, r3
   2afa8:	bl	1bac4 <__assert_fail@plt+0xa580>
   2afac:	mov	r3, r0
   2afb0:	cmp	r3, #0
   2afb4:	bne	2b038 <__assert_fail@plt+0x19af4>
   2afb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2afbc:	ldr	r1, [r3, #24]
   2afc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2afc4:	mov	r3, r2
   2afc8:	lsl	r3, r3, #1
   2afcc:	add	r3, r3, r2
   2afd0:	lsl	r3, r3, #2
   2afd4:	add	r3, r1, r3
   2afd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2afdc:	mov	r0, r3
   2afe0:	bl	1bac4 <__assert_fail@plt+0xa580>
   2afe4:	mov	r3, r0
   2afe8:	cmp	r3, #0
   2afec:	bne	2b038 <__assert_fail@plt+0x19af4>
   2aff0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2aff4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2aff8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2affc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2b000:	bl	2a518 <__assert_fail@plt+0x18fd4>
   2b004:	str	r0, [fp, #-40]	; 0xffffffd8
   2b008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b00c:	cmp	r3, #0
   2b010:	movne	r3, #1
   2b014:	moveq	r3, #0
   2b018:	uxtb	r3, r3
   2b01c:	cmp	r3, #0
   2b020:	beq	2b02c <__assert_fail@plt+0x19ae8>
   2b024:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b028:	b	2b168 <__assert_fail@plt+0x19c24>
   2b02c:	ldr	r3, [fp, #-8]
   2b030:	sub	r3, r3, #1
   2b034:	str	r3, [fp, #-8]
   2b038:	ldr	r3, [fp, #-8]
   2b03c:	add	r3, r3, #1
   2b040:	str	r3, [fp, #-8]
   2b044:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b048:	ldr	r2, [r3, #4]
   2b04c:	ldr	r3, [fp, #-8]
   2b050:	cmp	r2, r3
   2b054:	bgt	2af64 <__assert_fail@plt+0x19a20>
   2b058:	b	2b144 <__assert_fail@plt+0x19c00>
   2b05c:	mov	r3, #0
   2b060:	str	r3, [fp, #-8]
   2b064:	b	2b128 <__assert_fail@plt+0x19be4>
   2b068:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b06c:	ldr	r2, [r3, #8]
   2b070:	ldr	r3, [fp, #-8]
   2b074:	lsl	r3, r3, #2
   2b078:	add	r3, r2, r3
   2b07c:	ldr	r3, [r3]
   2b080:	str	r3, [fp, #-32]	; 0xffffffe0
   2b084:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b088:	ldr	r2, [r3]
   2b08c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b090:	lsl	r3, r3, #3
   2b094:	add	r3, r2, r3
   2b098:	ldrb	r3, [r3, #4]
   2b09c:	str	r3, [fp, #-36]	; 0xffffffdc
   2b0a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b0a4:	cmp	r3, #9
   2b0a8:	beq	2b0b8 <__assert_fail@plt+0x19b74>
   2b0ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b0b0:	cmp	r3, #8
   2b0b4:	bne	2b11c <__assert_fail@plt+0x19bd8>
   2b0b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b0bc:	ldr	r2, [r3]
   2b0c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b0c4:	lsl	r3, r3, #3
   2b0c8:	add	r3, r2, r3
   2b0cc:	ldr	r2, [r3]
   2b0d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b0d4:	cmp	r2, r3
   2b0d8:	bne	2b118 <__assert_fail@plt+0x19bd4>
   2b0dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b0e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2b0e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b0e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2b0ec:	bl	2a518 <__assert_fail@plt+0x18fd4>
   2b0f0:	str	r0, [fp, #-40]	; 0xffffffd8
   2b0f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b0f8:	cmp	r3, #0
   2b0fc:	movne	r3, #1
   2b100:	moveq	r3, #0
   2b104:	uxtb	r3, r3
   2b108:	cmp	r3, #0
   2b10c:	beq	2b11c <__assert_fail@plt+0x19bd8>
   2b110:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b114:	b	2b168 <__assert_fail@plt+0x19c24>
   2b118:	nop			; (mov r0, r0)
   2b11c:	ldr	r3, [fp, #-8]
   2b120:	add	r3, r3, #1
   2b124:	str	r3, [fp, #-8]
   2b128:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b12c:	ldr	r2, [r3, #4]
   2b130:	ldr	r3, [fp, #-8]
   2b134:	cmp	r2, r3
   2b138:	bgt	2b068 <__assert_fail@plt+0x19b24>
   2b13c:	b	2b144 <__assert_fail@plt+0x19c00>
   2b140:	nop			; (mov r0, r0)
   2b144:	ldr	r3, [fp, #-12]
   2b148:	add	r3, r3, #1
   2b14c:	str	r3, [fp, #-12]
   2b150:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2b154:	ldr	r2, [r3, #4]
   2b158:	ldr	r3, [fp, #-12]
   2b15c:	cmp	r2, r3
   2b160:	bgt	2ad84 <__assert_fail@plt+0x19840>
   2b164:	mov	r3, #0
   2b168:	mov	r0, r3
   2b16c:	sub	sp, fp, #4
   2b170:	pop	{fp, pc}
   2b174:	push	{fp, lr}
   2b178:	add	fp, sp, #4
   2b17c:	sub	sp, sp, #104	; 0x68
   2b180:	str	r0, [fp, #-88]	; 0xffffffa8
   2b184:	str	r1, [fp, #-92]	; 0xffffffa4
   2b188:	str	r2, [fp, #-96]	; 0xffffffa0
   2b18c:	str	r3, [fp, #-100]	; 0xffffff9c
   2b190:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b194:	ldr	r3, [r3, #84]	; 0x54
   2b198:	str	r3, [fp, #-24]	; 0xffffffe8
   2b19c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2b1a0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b1a4:	bl	30654 <__assert_fail@plt+0x1f110>
   2b1a8:	str	r0, [fp, #-28]	; 0xffffffe4
   2b1ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b1b0:	cmn	r3, #1
   2b1b4:	bne	2b1c0 <__assert_fail@plt+0x19c7c>
   2b1b8:	mov	r3, #0
   2b1bc:	b	2b608 <__assert_fail@plt+0x1a0c4>
   2b1c0:	mov	r3, #0
   2b1c4:	str	r3, [fp, #-84]	; 0xffffffac
   2b1c8:	mov	r3, #0
   2b1cc:	str	r3, [fp, #-12]
   2b1d0:	b	2b5b8 <__assert_fail@plt+0x1a074>
   2b1d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b1d8:	ldr	r2, [r3, #8]
   2b1dc:	ldr	r3, [fp, #-12]
   2b1e0:	lsl	r3, r3, #2
   2b1e4:	add	r3, r2, r3
   2b1e8:	ldr	r3, [r3]
   2b1ec:	str	r3, [fp, #-32]	; 0xffffffe0
   2b1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b1f4:	ldr	r2, [r3]
   2b1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b1fc:	lsl	r3, r3, #3
   2b200:	add	r3, r2, r3
   2b204:	ldrb	r3, [r3, #4]
   2b208:	str	r3, [fp, #-36]	; 0xffffffdc
   2b20c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b210:	ldr	r2, [r3, #8]
   2b214:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b218:	cmp	r2, r3
   2b21c:	bne	2b234 <__assert_fail@plt+0x19cf0>
   2b220:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b224:	ldr	r2, [r3, #12]
   2b228:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b22c:	cmp	r2, r3
   2b230:	beq	2b5a0 <__assert_fail@plt+0x1a05c>
   2b234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b238:	cmp	r3, #4
   2b23c:	bne	2b5a8 <__assert_fail@plt+0x1a064>
   2b240:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b244:	ldr	r1, [r3, #116]	; 0x74
   2b248:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b24c:	mov	r3, r2
   2b250:	lsl	r3, r3, #1
   2b254:	add	r3, r3, r2
   2b258:	lsl	r3, r3, #3
   2b25c:	add	r3, r1, r3
   2b260:	str	r3, [fp, #-20]	; 0xffffffec
   2b264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b268:	str	r3, [fp, #-16]
   2b26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b270:	ldr	r2, [r3]
   2b274:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b278:	cmp	r2, r3
   2b27c:	bne	2b56c <__assert_fail@plt+0x1a028>
   2b280:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b284:	ldr	r2, [r3, #12]
   2b288:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b28c:	ldr	r3, [r3, #8]
   2b290:	sub	r3, r2, r3
   2b294:	str	r3, [fp, #-40]	; 0xffffffd8
   2b298:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2b29c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b2a0:	add	r3, r2, r3
   2b2a4:	str	r3, [fp, #-44]	; 0xffffffd4
   2b2a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b2ac:	cmp	r3, #0
   2b2b0:	beq	2b2d0 <__assert_fail@plt+0x19d8c>
   2b2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2b8:	ldr	r2, [r3, #12]
   2b2bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b2c0:	lsl	r3, r3, #2
   2b2c4:	add	r3, r2, r3
   2b2c8:	ldr	r3, [r3]
   2b2cc:	b	2b2f8 <__assert_fail@plt+0x19db4>
   2b2d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b2d4:	ldr	r1, [r3, #20]
   2b2d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b2dc:	mov	r3, r2
   2b2e0:	lsl	r3, r3, #1
   2b2e4:	add	r3, r3, r2
   2b2e8:	lsl	r3, r3, #2
   2b2ec:	add	r3, r1, r3
   2b2f0:	ldr	r3, [r3, #8]
   2b2f4:	ldr	r3, [r3]
   2b2f8:	str	r3, [fp, #-48]	; 0xffffffd0
   2b2fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b300:	ldr	r2, [r3, #12]
   2b304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b308:	cmp	r2, r3
   2b30c:	blt	2b574 <__assert_fail@plt+0x1a030>
   2b310:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b314:	ldr	r2, [r3]
   2b318:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b31c:	lsl	r3, r3, #2
   2b320:	add	r3, r2, r3
   2b324:	ldr	r3, [r3]
   2b328:	cmp	r3, #0
   2b32c:	beq	2b574 <__assert_fail@plt+0x1a030>
   2b330:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b334:	ldr	r2, [r3]
   2b338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b33c:	lsl	r3, r3, #2
   2b340:	add	r3, r2, r3
   2b344:	ldr	r3, [r3]
   2b348:	cmp	r3, #0
   2b34c:	beq	2b574 <__assert_fail@plt+0x1a030>
   2b350:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b354:	ldr	r2, [r3]
   2b358:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b35c:	lsl	r3, r3, #2
   2b360:	add	r3, r2, r3
   2b364:	ldr	r3, [r3]
   2b368:	add	r3, r3, #4
   2b36c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2b370:	mov	r0, r3
   2b374:	bl	1bac4 <__assert_fail@plt+0xa580>
   2b378:	mov	r3, r0
   2b37c:	cmp	r3, #0
   2b380:	beq	2b574 <__assert_fail@plt+0x1a030>
   2b384:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b388:	add	r1, r3, #16
   2b38c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b390:	str	r3, [sp, #4]
   2b394:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b398:	str	r3, [sp]
   2b39c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b3a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b3a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b3a8:	bl	2a7f0 <__assert_fail@plt+0x192ac>
   2b3ac:	mov	r3, r0
   2b3b0:	cmp	r3, #0
   2b3b4:	bne	2b574 <__assert_fail@plt+0x1a030>
   2b3b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b3bc:	cmp	r3, #0
   2b3c0:	bne	2b41c <__assert_fail@plt+0x19ed8>
   2b3c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b3c8:	sub	ip, fp, #84	; 0x54
   2b3cc:	mov	lr, r3
   2b3d0:	ldm	lr!, {r0, r1, r2, r3}
   2b3d4:	stmia	ip!, {r0, r1, r2, r3}
   2b3d8:	ldm	lr, {r0, r1, r2}
   2b3dc:	stm	ip, {r0, r1, r2}
   2b3e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b3e4:	add	r2, r3, #16
   2b3e8:	sub	r3, fp, #84	; 0x54
   2b3ec:	add	r3, r3, #16
   2b3f0:	mov	r1, r2
   2b3f4:	mov	r0, r3
   2b3f8:	bl	1a958 <__assert_fail@plt+0x9414>
   2b3fc:	str	r0, [fp, #-8]
   2b400:	ldr	r3, [fp, #-8]
   2b404:	cmp	r3, #0
   2b408:	movne	r3, #1
   2b40c:	moveq	r3, #0
   2b410:	uxtb	r3, r3
   2b414:	cmp	r3, #0
   2b418:	bne	2b5d8 <__assert_fail@plt+0x1a094>
   2b41c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b420:	str	r3, [fp, #-76]	; 0xffffffb4
   2b424:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b428:	str	r3, [fp, #-72]	; 0xffffffb8
   2b42c:	sub	r3, fp, #84	; 0x54
   2b430:	add	r3, r3, #16
   2b434:	ldr	r1, [fp, #-16]
   2b438:	mov	r0, r3
   2b43c:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2b440:	mov	r3, r0
   2b444:	strb	r3, [fp, #-49]	; 0xffffffcf
   2b448:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   2b44c:	eor	r3, r3, #1
   2b450:	uxtb	r3, r3
   2b454:	cmp	r3, #0
   2b458:	beq	2b468 <__assert_fail@plt+0x19f24>
   2b45c:	mov	r3, #12
   2b460:	str	r3, [fp, #-8]
   2b464:	b	2b5ec <__assert_fail@plt+0x1a0a8>
   2b468:	ldr	r2, [fp, #-84]	; 0xffffffac
   2b46c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b470:	lsl	r3, r3, #2
   2b474:	add	r3, r2, r3
   2b478:	ldr	r3, [r3]
   2b47c:	str	r3, [fp, #-56]	; 0xffffffc8
   2b480:	sub	r3, fp, #84	; 0x54
   2b484:	mov	r1, r3
   2b488:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2b48c:	bl	29a24 <__assert_fail@plt+0x184e0>
   2b490:	str	r0, [fp, #-8]
   2b494:	ldr	r3, [fp, #-8]
   2b498:	cmp	r3, #0
   2b49c:	movne	r3, #1
   2b4a0:	moveq	r3, #0
   2b4a4:	uxtb	r3, r3
   2b4a8:	cmp	r3, #0
   2b4ac:	bne	2b5e0 <__assert_fail@plt+0x1a09c>
   2b4b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b4b4:	ldr	r3, [r3, #4]
   2b4b8:	cmp	r3, #0
   2b4bc:	beq	2b4fc <__assert_fail@plt+0x19fb8>
   2b4c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2b4c4:	ldr	r1, [r3, #4]
   2b4c8:	ldr	r2, [fp, #-84]	; 0xffffffac
   2b4cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b4d0:	add	r3, r3, #1
   2b4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2b4d8:	bl	29fe8 <__assert_fail@plt+0x18aa4>
   2b4dc:	str	r0, [fp, #-8]
   2b4e0:	ldr	r3, [fp, #-8]
   2b4e4:	cmp	r3, #0
   2b4e8:	movne	r3, #1
   2b4ec:	moveq	r3, #0
   2b4f0:	uxtb	r3, r3
   2b4f4:	cmp	r3, #0
   2b4f8:	bne	2b5e8 <__assert_fail@plt+0x1a0a4>
   2b4fc:	ldr	r2, [fp, #-84]	; 0xffffffac
   2b500:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2b504:	lsl	r3, r3, #2
   2b508:	add	r3, r2, r3
   2b50c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2b510:	str	r2, [r3]
   2b514:	sub	r3, fp, #84	; 0x54
   2b518:	add	r3, r3, #16
   2b51c:	ldr	r1, [fp, #-16]
   2b520:	mov	r0, r3
   2b524:	bl	1bac4 <__assert_fail@plt+0xa580>
   2b528:	mov	r3, r0
   2b52c:	sub	r2, r3, #1
   2b530:	sub	r3, fp, #84	; 0x54
   2b534:	add	r3, r3, #16
   2b538:	mov	r1, r2
   2b53c:	mov	r0, r3
   2b540:	bl	1bbb0 <__assert_fail@plt+0xa66c>
   2b544:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2b548:	ldr	r1, [r3, #116]	; 0x74
   2b54c:	ldr	r2, [fp, #-16]
   2b550:	mov	r3, r2
   2b554:	lsl	r3, r3, #1
   2b558:	add	r3, r3, r2
   2b55c:	lsl	r3, r3, #3
   2b560:	add	r3, r1, r3
   2b564:	str	r3, [fp, #-20]	; 0xffffffec
   2b568:	b	2b578 <__assert_fail@plt+0x1a034>
   2b56c:	nop			; (mov r0, r0)
   2b570:	b	2b578 <__assert_fail@plt+0x1a034>
   2b574:	nop			; (mov r0, r0)
   2b578:	ldr	r3, [fp, #-16]
   2b57c:	add	r3, r3, #1
   2b580:	str	r3, [fp, #-16]
   2b584:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b588:	add	r2, r3, #24
   2b58c:	str	r2, [fp, #-20]	; 0xffffffec
   2b590:	ldrb	r3, [r3, #20]
   2b594:	cmp	r3, #0
   2b598:	bne	2b26c <__assert_fail@plt+0x19d28>
   2b59c:	b	2b5ac <__assert_fail@plt+0x1a068>
   2b5a0:	nop			; (mov r0, r0)
   2b5a4:	b	2b5ac <__assert_fail@plt+0x1a068>
   2b5a8:	nop			; (mov r0, r0)
   2b5ac:	ldr	r3, [fp, #-12]
   2b5b0:	add	r3, r3, #1
   2b5b4:	str	r3, [fp, #-12]
   2b5b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2b5bc:	ldr	r2, [r3, #4]
   2b5c0:	ldr	r3, [fp, #-12]
   2b5c4:	cmp	r2, r3
   2b5c8:	bgt	2b1d4 <__assert_fail@plt+0x19c90>
   2b5cc:	mov	r3, #0
   2b5d0:	str	r3, [fp, #-8]
   2b5d4:	b	2b5ec <__assert_fail@plt+0x1a0a8>
   2b5d8:	nop			; (mov r0, r0)
   2b5dc:	b	2b5ec <__assert_fail@plt+0x1a0a8>
   2b5e0:	nop			; (mov r0, r0)
   2b5e4:	b	2b5ec <__assert_fail@plt+0x1a0a8>
   2b5e8:	nop			; (mov r0, r0)
   2b5ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   2b5f0:	cmp	r3, #0
   2b5f4:	beq	2b604 <__assert_fail@plt+0x1a0c0>
   2b5f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b5fc:	mov	r0, r3
   2b600:	bl	14dec <__assert_fail@plt+0x38a8>
   2b604:	ldr	r3, [fp, #-8]
   2b608:	mov	r0, r3
   2b60c:	sub	sp, fp, #4
   2b610:	pop	{fp, pc}
   2b614:	push	{fp, lr}
   2b618:	add	fp, sp, #4
   2b61c:	sub	sp, sp, #24
   2b620:	str	r0, [fp, #-16]
   2b624:	str	r1, [fp, #-20]	; 0xffffffec
   2b628:	str	r2, [fp, #-24]	; 0xffffffe8
   2b62c:	str	r3, [fp, #-28]	; 0xffffffe4
   2b630:	ldr	r3, [fp, #-16]
   2b634:	ldr	r3, [r3, #84]	; 0x54
   2b638:	str	r3, [fp, #-12]
   2b63c:	ldr	r2, [fp, #-16]
   2b640:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b648:	ldr	r0, [fp, #-12]
   2b64c:	bl	2f718 <__assert_fail@plt+0x1e1d4>
   2b650:	str	r0, [fp, #-8]
   2b654:	ldr	r3, [fp, #-8]
   2b658:	cmp	r3, #0
   2b65c:	ble	2b6f8 <__assert_fail@plt+0x1a1b4>
   2b660:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2b664:	ldr	r3, [fp, #-8]
   2b668:	add	r2, r2, r3
   2b66c:	ldr	r3, [fp, #4]
   2b670:	cmp	r2, r3
   2b674:	bgt	2b6f8 <__assert_fail@plt+0x1a1b4>
   2b678:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b67c:	ldr	r2, [r3]
   2b680:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b684:	ldr	r3, [fp, #-8]
   2b688:	add	r3, r1, r3
   2b68c:	lsl	r3, r3, #2
   2b690:	add	r3, r2, r3
   2b694:	ldr	r3, [r3]
   2b698:	cmp	r3, #0
   2b69c:	beq	2b6f0 <__assert_fail@plt+0x1a1ac>
   2b6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b6a4:	ldr	r2, [r3]
   2b6a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b6ac:	ldr	r3, [fp, #-8]
   2b6b0:	add	r3, r1, r3
   2b6b4:	lsl	r3, r3, #2
   2b6b8:	add	r3, r2, r3
   2b6bc:	ldr	r3, [r3]
   2b6c0:	add	r0, r3, #4
   2b6c4:	ldr	r3, [fp, #-12]
   2b6c8:	ldr	r2, [r3, #12]
   2b6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b6d0:	lsl	r3, r3, #2
   2b6d4:	add	r3, r2, r3
   2b6d8:	ldr	r3, [r3]
   2b6dc:	mov	r1, r3
   2b6e0:	bl	1bac4 <__assert_fail@plt+0xa580>
   2b6e4:	mov	r3, r0
   2b6e8:	cmp	r3, #0
   2b6ec:	bne	2b6f8 <__assert_fail@plt+0x1a1b4>
   2b6f0:	mov	r3, #0
   2b6f4:	str	r3, [fp, #-8]
   2b6f8:	ldr	r3, [fp, #-8]
   2b6fc:	mov	r0, r3
   2b700:	sub	sp, fp, #4
   2b704:	pop	{fp, pc}
   2b708:	push	{fp, lr}
   2b70c:	add	fp, sp, #4
   2b710:	sub	sp, sp, #32
   2b714:	str	r0, [fp, #-24]	; 0xffffffe8
   2b718:	str	r1, [fp, #-28]	; 0xffffffe4
   2b71c:	str	r2, [fp, #-32]	; 0xffffffe0
   2b720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b724:	ldrb	r3, [r3, #52]	; 0x34
   2b728:	lsr	r3, r3, #5
   2b72c:	and	r3, r3, #1
   2b730:	uxtb	r3, r3
   2b734:	cmp	r3, #0
   2b738:	beq	2b77c <__assert_fail@plt+0x1a238>
   2b73c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b740:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b744:	bl	2bd58 <__assert_fail@plt+0x1a814>
   2b748:	mov	r2, r0
   2b74c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b750:	str	r2, [r3]
   2b754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b758:	ldr	r3, [r3]
   2b75c:	cmp	r3, #0
   2b760:	movne	r3, #1
   2b764:	moveq	r3, #0
   2b768:	uxtb	r3, r3
   2b76c:	cmp	r3, #0
   2b770:	beq	2b77c <__assert_fail@plt+0x1a238>
   2b774:	mov	r3, #0
   2b778:	b	2b8ac <__assert_fail@plt+0x1a368>
   2b77c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b780:	ldr	r2, [r3, #4]
   2b784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b788:	ldr	r3, [r3, #40]	; 0x28
   2b78c:	add	r0, r3, #1
   2b790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2b794:	str	r0, [r1, #40]	; 0x28
   2b798:	add	r3, r2, r3
   2b79c:	ldrb	r3, [r3]
   2b7a0:	strb	r3, [fp, #-5]
   2b7a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b7a8:	ldr	r3, [r3, #44]	; 0x2c
   2b7ac:	str	r3, [fp, #-12]
   2b7b0:	ldr	r3, [fp, #-12]
   2b7b4:	cmp	r3, #0
   2b7b8:	movne	r3, #1
   2b7bc:	moveq	r3, #0
   2b7c0:	uxtb	r3, r3
   2b7c4:	cmp	r3, #0
   2b7c8:	beq	2b7e4 <__assert_fail@plt+0x1a2a0>
   2b7cc:	ldrb	r3, [fp, #-5]
   2b7d0:	lsl	r3, r3, #2
   2b7d4:	ldr	r2, [fp, #-12]
   2b7d8:	add	r3, r2, r3
   2b7dc:	ldr	r3, [r3]
   2b7e0:	b	2b8ac <__assert_fail@plt+0x1a368>
   2b7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b7e8:	ldr	r3, [r3, #48]	; 0x30
   2b7ec:	str	r3, [fp, #-12]
   2b7f0:	ldr	r3, [fp, #-12]
   2b7f4:	cmp	r3, #0
   2b7f8:	movne	r3, #1
   2b7fc:	moveq	r3, #0
   2b800:	uxtb	r3, r3
   2b804:	cmp	r3, #0
   2b808:	beq	2b874 <__assert_fail@plt+0x1a330>
   2b80c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2b810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b814:	ldr	r3, [r3, #40]	; 0x28
   2b818:	sub	r1, r3, #1
   2b81c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b820:	ldr	r3, [r3, #88]	; 0x58
   2b824:	mov	r2, r3
   2b828:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2b82c:	str	r0, [fp, #-16]
   2b830:	ldr	r3, [fp, #-16]
   2b834:	and	r3, r3, #1
   2b838:	cmp	r3, #0
   2b83c:	beq	2b85c <__assert_fail@plt+0x1a318>
   2b840:	ldrb	r3, [fp, #-5]
   2b844:	add	r3, r3, #256	; 0x100
   2b848:	lsl	r3, r3, #2
   2b84c:	ldr	r2, [fp, #-12]
   2b850:	add	r3, r2, r3
   2b854:	ldr	r3, [r3]
   2b858:	b	2b8ac <__assert_fail@plt+0x1a368>
   2b85c:	ldrb	r3, [fp, #-5]
   2b860:	lsl	r3, r3, #2
   2b864:	ldr	r2, [fp, #-12]
   2b868:	add	r3, r2, r3
   2b86c:	ldr	r3, [r3]
   2b870:	b	2b8ac <__assert_fail@plt+0x1a368>
   2b874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b878:	ldr	r3, [r3, #84]	; 0x54
   2b87c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2b880:	mov	r0, r3
   2b884:	bl	2e240 <__assert_fail@plt+0x1ccfc>
   2b888:	mov	r3, r0
   2b88c:	eor	r3, r3, #1
   2b890:	uxtb	r3, r3
   2b894:	cmp	r3, #0
   2b898:	beq	2b7a4 <__assert_fail@plt+0x1a260>
   2b89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8a0:	mov	r2, #12
   2b8a4:	str	r2, [r3]
   2b8a8:	mov	r3, #0
   2b8ac:	mov	r0, r3
   2b8b0:	sub	sp, fp, #4
   2b8b4:	pop	{fp, pc}
   2b8b8:	push	{r4, fp, lr}
   2b8bc:	add	fp, sp, #8
   2b8c0:	sub	sp, sp, #60	; 0x3c
   2b8c4:	str	r0, [fp, #-56]	; 0xffffffc8
   2b8c8:	str	r1, [fp, #-60]	; 0xffffffc4
   2b8cc:	str	r2, [fp, #-64]	; 0xffffffc0
   2b8d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b8d4:	ldr	r3, [r3, #84]	; 0x54
   2b8d8:	str	r3, [fp, #-20]	; 0xffffffec
   2b8dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b8e0:	ldr	r3, [r3, #40]	; 0x28
   2b8e4:	str	r3, [fp, #-24]	; 0xffffffe8
   2b8e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b8ec:	ldr	r2, [r3, #104]	; 0x68
   2b8f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8f4:	cmp	r2, r3
   2b8f8:	bge	2b928 <__assert_fail@plt+0x1a3e4>
   2b8fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b900:	ldr	r2, [r3, #100]	; 0x64
   2b904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b908:	lsl	r3, r3, #2
   2b90c:	add	r3, r2, r3
   2b910:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b914:	str	r2, [r3]
   2b918:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b91c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b920:	str	r2, [r3, #104]	; 0x68
   2b924:	b	2ba7c <__assert_fail@plt+0x1a538>
   2b928:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b92c:	ldr	r2, [r3, #100]	; 0x64
   2b930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b934:	lsl	r3, r3, #2
   2b938:	add	r3, r2, r3
   2b93c:	ldr	r3, [r3]
   2b940:	cmp	r3, #0
   2b944:	bne	2b968 <__assert_fail@plt+0x1a424>
   2b948:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b94c:	ldr	r2, [r3, #100]	; 0x64
   2b950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b954:	lsl	r3, r3, #2
   2b958:	add	r3, r2, r3
   2b95c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2b960:	str	r2, [r3]
   2b964:	b	2ba7c <__assert_fail@plt+0x1a538>
   2b968:	mov	r3, #0
   2b96c:	str	r3, [fp, #-16]
   2b970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b974:	ldr	r2, [r3, #100]	; 0x64
   2b978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b97c:	lsl	r3, r3, #2
   2b980:	add	r3, r2, r3
   2b984:	ldr	r3, [r3]
   2b988:	str	r3, [fp, #-28]	; 0xffffffe4
   2b98c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b990:	ldr	r3, [r3, #40]	; 0x28
   2b994:	str	r3, [fp, #-32]	; 0xffffffe0
   2b998:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b99c:	cmp	r3, #0
   2b9a0:	beq	2b9f8 <__assert_fail@plt+0x1a4b4>
   2b9a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2b9a8:	ldr	r3, [r3, #40]	; 0x28
   2b9ac:	str	r3, [fp, #-16]
   2b9b0:	sub	r3, fp, #48	; 0x30
   2b9b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b9b8:	ldr	r1, [fp, #-16]
   2b9bc:	mov	r0, r3
   2b9c0:	bl	1aee4 <__assert_fail@plt+0x99a0>
   2b9c4:	mov	r2, r0
   2b9c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b9cc:	str	r2, [r3]
   2b9d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b9d4:	ldr	r3, [r3]
   2b9d8:	cmp	r3, #0
   2b9dc:	movne	r3, #1
   2b9e0:	moveq	r3, #0
   2b9e4:	uxtb	r3, r3
   2b9e8:	cmp	r3, #0
   2b9ec:	beq	2ba08 <__assert_fail@plt+0x1a4c4>
   2b9f0:	mov	r3, #0
   2b9f4:	b	2bb64 <__assert_fail@plt+0x1a620>
   2b9f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b9fc:	sub	r3, fp, #48	; 0x30
   2ba00:	ldm	r2, {r0, r1, r2}
   2ba04:	stm	r3, {r0, r1, r2}
   2ba08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2ba0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ba10:	ldr	r3, [r3, #40]	; 0x28
   2ba14:	sub	r1, r3, #1
   2ba18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ba1c:	ldr	r3, [r3, #88]	; 0x58
   2ba20:	mov	r2, r3
   2ba24:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2ba28:	str	r0, [fp, #-36]	; 0xffffffdc
   2ba2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ba30:	ldr	r2, [r3, #100]	; 0x64
   2ba34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ba38:	lsl	r3, r3, #2
   2ba3c:	add	r4, r2, r3
   2ba40:	sub	r2, fp, #48	; 0x30
   2ba44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ba48:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ba4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ba50:	bl	1c25c <__assert_fail@plt+0xad18>
   2ba54:	mov	r3, r0
   2ba58:	str	r3, [r4]
   2ba5c:	ldr	r3, [r4]
   2ba60:	str	r3, [fp, #-64]	; 0xffffffc0
   2ba64:	ldr	r3, [fp, #-16]
   2ba68:	cmp	r3, #0
   2ba6c:	beq	2ba7c <__assert_fail@plt+0x1a538>
   2ba70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ba74:	mov	r0, r3
   2ba78:	bl	14dec <__assert_fail@plt+0x38a8>
   2ba7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ba80:	ldr	r3, [r3, #76]	; 0x4c
   2ba84:	cmp	r3, #0
   2ba88:	beq	2bb60 <__assert_fail@plt+0x1a61c>
   2ba8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ba90:	cmp	r3, #0
   2ba94:	beq	2bb60 <__assert_fail@plt+0x1a61c>
   2ba98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ba9c:	add	r3, r3, #4
   2baa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2baa4:	mov	r1, r3
   2baa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2baac:	bl	2bc34 <__assert_fail@plt+0x1a6f0>
   2bab0:	mov	r2, r0
   2bab4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bab8:	str	r2, [r3]
   2babc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bac0:	ldr	r3, [r3]
   2bac4:	cmp	r3, #0
   2bac8:	movne	r3, #1
   2bacc:	moveq	r3, #0
   2bad0:	uxtb	r3, r3
   2bad4:	cmp	r3, #0
   2bad8:	beq	2bae4 <__assert_fail@plt+0x1a5a0>
   2badc:	mov	r3, #0
   2bae0:	b	2bb64 <__assert_fail@plt+0x1a620>
   2bae4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bae8:	ldrb	r3, [r3, #52]	; 0x34
   2baec:	and	r3, r3, #64	; 0x40
   2baf0:	uxtb	r3, r3
   2baf4:	cmp	r3, #0
   2baf8:	beq	2bb60 <__assert_fail@plt+0x1a61c>
   2bafc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bb00:	add	r3, r3, #4
   2bb04:	mov	r1, r3
   2bb08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2bb0c:	bl	2c190 <__assert_fail@plt+0x1ac4c>
   2bb10:	mov	r2, r0
   2bb14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bb18:	str	r2, [r3]
   2bb1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2bb20:	ldr	r3, [r3]
   2bb24:	cmp	r3, #0
   2bb28:	movne	r3, #1
   2bb2c:	moveq	r3, #0
   2bb30:	uxtb	r3, r3
   2bb34:	cmp	r3, #0
   2bb38:	beq	2bb44 <__assert_fail@plt+0x1a600>
   2bb3c:	mov	r3, #0
   2bb40:	b	2bb64 <__assert_fail@plt+0x1a620>
   2bb44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2bb48:	ldr	r2, [r3, #100]	; 0x64
   2bb4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb50:	lsl	r3, r3, #2
   2bb54:	add	r3, r2, r3
   2bb58:	ldr	r3, [r3]
   2bb5c:	str	r3, [fp, #-64]	; 0xffffffc0
   2bb60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bb64:	mov	r0, r3
   2bb68:	sub	sp, fp, #8
   2bb6c:	pop	{r4, fp, pc}
   2bb70:	push	{fp, lr}
   2bb74:	add	fp, sp, #4
   2bb78:	sub	sp, sp, #24
   2bb7c:	str	r0, [fp, #-24]	; 0xffffffe8
   2bb80:	str	r1, [fp, #-28]	; 0xffffffe4
   2bb84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb88:	ldr	r3, [r3, #104]	; 0x68
   2bb8c:	str	r3, [fp, #-12]
   2bb90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bb94:	ldr	r3, [r3, #40]	; 0x28
   2bb98:	str	r3, [fp, #-8]
   2bb9c:	ldr	r3, [fp, #-8]
   2bba0:	add	r3, r3, #1
   2bba4:	str	r3, [fp, #-8]
   2bba8:	ldr	r2, [fp, #-8]
   2bbac:	ldr	r3, [fp, #-12]
   2bbb0:	cmp	r2, r3
   2bbb4:	ble	2bbc0 <__assert_fail@plt+0x1a67c>
   2bbb8:	mov	r3, #0
   2bbbc:	b	2bc28 <__assert_fail@plt+0x1a6e4>
   2bbc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbc4:	ldr	r3, [r3, #40]	; 0x28
   2bbc8:	add	r2, r3, #1
   2bbcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbd0:	str	r2, [r3, #40]	; 0x28
   2bbd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bbd8:	ldr	r2, [r3, #100]	; 0x64
   2bbdc:	ldr	r3, [fp, #-8]
   2bbe0:	lsl	r3, r3, #2
   2bbe4:	add	r3, r2, r3
   2bbe8:	ldr	r3, [r3]
   2bbec:	cmp	r3, #0
   2bbf0:	beq	2bb9c <__assert_fail@plt+0x1a658>
   2bbf4:	mov	r2, #0
   2bbf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2bbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bc00:	bl	2b8b8 <__assert_fail@plt+0x1a374>
   2bc04:	str	r0, [fp, #-16]
   2bc08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc0c:	ldr	r3, [r3]
   2bc10:	cmp	r3, #0
   2bc14:	bne	2bc24 <__assert_fail@plt+0x1a6e0>
   2bc18:	ldr	r3, [fp, #-16]
   2bc1c:	cmp	r3, #0
   2bc20:	beq	2bb84 <__assert_fail@plt+0x1a640>
   2bc24:	ldr	r3, [fp, #-16]
   2bc28:	mov	r0, r3
   2bc2c:	sub	sp, fp, #4
   2bc30:	pop	{fp, pc}
   2bc34:	push	{fp, lr}
   2bc38:	add	fp, sp, #4
   2bc3c:	sub	sp, sp, #32
   2bc40:	str	r0, [fp, #-24]	; 0xffffffe8
   2bc44:	str	r1, [fp, #-28]	; 0xffffffe4
   2bc48:	str	r2, [fp, #-32]	; 0xffffffe0
   2bc4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc50:	ldr	r3, [r3, #84]	; 0x54
   2bc54:	str	r3, [fp, #-12]
   2bc58:	mov	r3, #0
   2bc5c:	str	r3, [fp, #-8]
   2bc60:	b	2bd34 <__assert_fail@plt+0x1a7f0>
   2bc64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bc68:	ldr	r2, [r3, #8]
   2bc6c:	ldr	r3, [fp, #-8]
   2bc70:	lsl	r3, r3, #2
   2bc74:	add	r3, r2, r3
   2bc78:	ldr	r3, [r3]
   2bc7c:	str	r3, [fp, #-16]
   2bc80:	ldr	r3, [fp, #-12]
   2bc84:	ldr	r2, [r3]
   2bc88:	ldr	r3, [fp, #-16]
   2bc8c:	lsl	r3, r3, #3
   2bc90:	add	r3, r2, r3
   2bc94:	ldrb	r3, [r3, #4]
   2bc98:	cmp	r3, #8
   2bc9c:	bne	2bd28 <__assert_fail@plt+0x1a7e4>
   2bca0:	ldr	r3, [fp, #-12]
   2bca4:	ldr	r2, [r3]
   2bca8:	ldr	r3, [fp, #-16]
   2bcac:	lsl	r3, r3, #3
   2bcb0:	add	r3, r2, r3
   2bcb4:	ldr	r3, [r3]
   2bcb8:	cmp	r3, #31
   2bcbc:	bgt	2bd28 <__assert_fail@plt+0x1a7e4>
   2bcc0:	ldr	r3, [fp, #-12]
   2bcc4:	ldr	r2, [r3, #80]	; 0x50
   2bcc8:	ldr	r3, [fp, #-12]
   2bccc:	ldr	r1, [r3]
   2bcd0:	ldr	r3, [fp, #-16]
   2bcd4:	lsl	r3, r3, #3
   2bcd8:	add	r3, r1, r3
   2bcdc:	ldr	r3, [r3]
   2bce0:	lsr	r3, r2, r3
   2bce4:	and	r3, r3, #1
   2bce8:	cmp	r3, #0
   2bcec:	beq	2bd28 <__assert_fail@plt+0x1a7e4>
   2bcf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2bcf4:	ldr	r1, [fp, #-16]
   2bcf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bcfc:	bl	30758 <__assert_fail@plt+0x1f214>
   2bd00:	str	r0, [fp, #-20]	; 0xffffffec
   2bd04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd08:	cmp	r3, #0
   2bd0c:	movne	r3, #1
   2bd10:	moveq	r3, #0
   2bd14:	uxtb	r3, r3
   2bd18:	cmp	r3, #0
   2bd1c:	beq	2bd28 <__assert_fail@plt+0x1a7e4>
   2bd20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd24:	b	2bd4c <__assert_fail@plt+0x1a808>
   2bd28:	ldr	r3, [fp, #-8]
   2bd2c:	add	r3, r3, #1
   2bd30:	str	r3, [fp, #-8]
   2bd34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bd38:	ldr	r2, [r3, #4]
   2bd3c:	ldr	r3, [fp, #-8]
   2bd40:	cmp	r2, r3
   2bd44:	bgt	2bc64 <__assert_fail@plt+0x1a720>
   2bd48:	mov	r3, #0
   2bd4c:	mov	r0, r3
   2bd50:	sub	sp, fp, #4
   2bd54:	pop	{fp, pc}
   2bd58:	push	{r4, fp, lr}
   2bd5c:	add	fp, sp, #8
   2bd60:	sub	sp, sp, #60	; 0x3c
   2bd64:	str	r0, [fp, #-64]	; 0xffffffc0
   2bd68:	str	r1, [fp, #-68]	; 0xffffffbc
   2bd6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bd70:	ldr	r3, [r3, #84]	; 0x54
   2bd74:	str	r3, [fp, #-20]	; 0xffffffec
   2bd78:	mov	r3, #0
   2bd7c:	str	r3, [fp, #-16]
   2bd80:	b	2c168 <__assert_fail@plt+0x1ac24>
   2bd84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2bd88:	ldr	r2, [r3, #12]
   2bd8c:	ldr	r3, [fp, #-16]
   2bd90:	lsl	r3, r3, #2
   2bd94:	add	r3, r2, r3
   2bd98:	ldr	r3, [r3]
   2bd9c:	str	r3, [fp, #-24]	; 0xffffffe8
   2bda0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bda4:	ldr	r2, [r3]
   2bda8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bdac:	lsl	r3, r3, #3
   2bdb0:	add	r3, r2, r3
   2bdb4:	ldrb	r3, [r3, #6]
   2bdb8:	and	r3, r3, #16
   2bdbc:	uxtb	r3, r3
   2bdc0:	cmp	r3, #0
   2bdc4:	beq	2c148 <__assert_fail@plt+0x1ac04>
   2bdc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdcc:	ldr	r2, [r3]
   2bdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bdd4:	lsl	r3, r3, #3
   2bdd8:	add	r3, r2, r3
   2bddc:	ldr	r2, [r3, #4]
   2bde0:	ldr	r3, [pc, #932]	; 2c18c <__assert_fail@plt+0x1ac48>
   2bde4:	and	r3, r3, r2
   2bde8:	cmp	r3, #0
   2bdec:	beq	2bf20 <__assert_fail@plt+0x1a9dc>
   2bdf0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2bdf4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bdf8:	ldr	r1, [r3, #40]	; 0x28
   2bdfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2be00:	ldr	r3, [r3, #88]	; 0x58
   2be04:	mov	r2, r3
   2be08:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2be0c:	str	r0, [fp, #-28]	; 0xffffffe4
   2be10:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be14:	ldr	r2, [r3]
   2be18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be1c:	lsl	r3, r3, #3
   2be20:	add	r3, r2, r3
   2be24:	ldr	r3, [r3, #4]
   2be28:	lsr	r3, r3, #8
   2be2c:	lsl	r3, r3, #22
   2be30:	lsr	r3, r3, #22
   2be34:	uxth	r3, r3
   2be38:	and	r3, r3, #4
   2be3c:	cmp	r3, #0
   2be40:	beq	2be54 <__assert_fail@plt+0x1a910>
   2be44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2be48:	and	r3, r3, #1
   2be4c:	cmp	r3, #0
   2be50:	beq	2c150 <__assert_fail@plt+0x1ac0c>
   2be54:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be58:	ldr	r2, [r3]
   2be5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be60:	lsl	r3, r3, #3
   2be64:	add	r3, r2, r3
   2be68:	ldr	r3, [r3, #4]
   2be6c:	lsr	r3, r3, #8
   2be70:	lsl	r3, r3, #22
   2be74:	lsr	r3, r3, #22
   2be78:	uxth	r3, r3
   2be7c:	and	r3, r3, #8
   2be80:	cmp	r3, #0
   2be84:	beq	2be98 <__assert_fail@plt+0x1a954>
   2be88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2be8c:	and	r3, r3, #1
   2be90:	cmp	r3, #0
   2be94:	bne	2c150 <__assert_fail@plt+0x1ac0c>
   2be98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2be9c:	ldr	r2, [r3]
   2bea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bea4:	lsl	r3, r3, #3
   2bea8:	add	r3, r2, r3
   2beac:	ldr	r3, [r3, #4]
   2beb0:	lsr	r3, r3, #8
   2beb4:	lsl	r3, r3, #22
   2beb8:	lsr	r3, r3, #22
   2bebc:	uxth	r3, r3
   2bec0:	and	r3, r3, #32
   2bec4:	cmp	r3, #0
   2bec8:	beq	2bedc <__assert_fail@plt+0x1a998>
   2becc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bed0:	and	r3, r3, #2
   2bed4:	cmp	r3, #0
   2bed8:	beq	2c150 <__assert_fail@plt+0x1ac0c>
   2bedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bee0:	ldr	r2, [r3]
   2bee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bee8:	lsl	r3, r3, #3
   2beec:	add	r3, r2, r3
   2bef0:	ldr	r3, [r3, #4]
   2bef4:	lsr	r3, r3, #8
   2bef8:	lsl	r3, r3, #22
   2befc:	lsr	r3, r3, #22
   2bf00:	uxth	r3, r3
   2bf04:	and	r3, r3, #128	; 0x80
   2bf08:	cmp	r3, #0
   2bf0c:	beq	2bf20 <__assert_fail@plt+0x1a9dc>
   2bf10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bf14:	and	r3, r3, #8
   2bf18:	cmp	r3, #0
   2bf1c:	beq	2c150 <__assert_fail@plt+0x1ac0c>
   2bf20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2bf24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bf28:	ldr	r3, [r3, #40]	; 0x28
   2bf2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bf30:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bf34:	bl	2f718 <__assert_fail@plt+0x1e1d4>
   2bf38:	str	r0, [fp, #-32]	; 0xffffffe0
   2bf3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bf40:	cmp	r3, #0
   2bf44:	beq	2c158 <__assert_fail@plt+0x1ac14>
   2bf48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bf4c:	ldr	r2, [r3, #40]	; 0x28
   2bf50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bf54:	add	r3, r2, r3
   2bf58:	str	r3, [fp, #-36]	; 0xffffffdc
   2bf5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bf60:	ldr	r2, [r3, #120]	; 0x78
   2bf64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bf68:	cmp	r2, r3
   2bf6c:	movge	r2, r2
   2bf70:	movlt	r2, r3
   2bf74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2bf78:	str	r2, [r3, #120]	; 0x78
   2bf7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2bf80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2bf84:	bl	29ec8 <__assert_fail@plt+0x18984>
   2bf88:	mov	r3, r0
   2bf8c:	str	r3, [fp, #-48]	; 0xffffffd0
   2bf90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bf94:	cmp	r3, #0
   2bf98:	movne	r3, #1
   2bf9c:	moveq	r3, #0
   2bfa0:	uxtb	r3, r3
   2bfa4:	cmp	r3, #0
   2bfa8:	beq	2bfb4 <__assert_fail@plt+0x1aa70>
   2bfac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2bfb0:	b	2c180 <__assert_fail@plt+0x1ac3c>
   2bfb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfb8:	ldr	r2, [r3, #12]
   2bfbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bfc0:	lsl	r3, r3, #2
   2bfc4:	add	r3, r2, r3
   2bfc8:	ldr	r3, [r3]
   2bfcc:	cmn	r3, #1
   2bfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfd4:	ldr	r2, [r3, #24]
   2bfd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bfdc:	ldr	r1, [r3, #12]
   2bfe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bfe4:	lsl	r3, r3, #2
   2bfe8:	add	r3, r1, r3
   2bfec:	ldr	r3, [r3]
   2bff0:	mov	r1, r3
   2bff4:	mov	r3, r1
   2bff8:	lsl	r3, r3, #1
   2bffc:	add	r3, r3, r1
   2c000:	lsl	r3, r3, #2
   2c004:	add	r3, r2, r3
   2c008:	str	r3, [fp, #-40]	; 0xffffffd8
   2c00c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c010:	ldr	r2, [r3, #100]	; 0x64
   2c014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c018:	lsl	r3, r3, #2
   2c01c:	add	r3, r2, r3
   2c020:	ldr	r3, [r3]
   2c024:	str	r3, [fp, #-44]	; 0xffffffd4
   2c028:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c02c:	cmp	r3, #0
   2c030:	bne	2c048 <__assert_fail@plt+0x1ab04>
   2c034:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c038:	sub	r3, fp, #60	; 0x3c
   2c03c:	ldm	r2, {r0, r1, r2}
   2c040:	stm	r3, {r0, r1, r2}
   2c044:	b	2c08c <__assert_fail@plt+0x1ab48>
   2c048:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c04c:	ldr	r1, [r3, #40]	; 0x28
   2c050:	sub	r3, fp, #60	; 0x3c
   2c054:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2c058:	mov	r0, r3
   2c05c:	bl	1aee4 <__assert_fail@plt+0x99a0>
   2c060:	mov	r3, r0
   2c064:	str	r3, [fp, #-48]	; 0xffffffd0
   2c068:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c06c:	cmp	r3, #0
   2c070:	movne	r3, #1
   2c074:	moveq	r3, #0
   2c078:	uxtb	r3, r3
   2c07c:	cmp	r3, #0
   2c080:	beq	2c08c <__assert_fail@plt+0x1ab48>
   2c084:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c088:	b	2c180 <__assert_fail@plt+0x1ac3c>
   2c08c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2c090:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c094:	sub	r1, r3, #1
   2c098:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c09c:	ldr	r3, [r3, #88]	; 0x58
   2c0a0:	mov	r2, r3
   2c0a4:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2c0a8:	str	r0, [fp, #-28]	; 0xffffffe4
   2c0ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c0b0:	ldr	r2, [r3, #100]	; 0x64
   2c0b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c0b8:	lsl	r3, r3, #2
   2c0bc:	add	r4, r2, r3
   2c0c0:	sub	r2, fp, #60	; 0x3c
   2c0c4:	sub	r0, fp, #48	; 0x30
   2c0c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c0cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0d0:	bl	1c25c <__assert_fail@plt+0xad18>
   2c0d4:	mov	r3, r0
   2c0d8:	str	r3, [r4]
   2c0dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c0e0:	cmp	r3, #0
   2c0e4:	beq	2c0f4 <__assert_fail@plt+0x1abb0>
   2c0e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c0ec:	mov	r0, r3
   2c0f0:	bl	14dec <__assert_fail@plt+0x38a8>
   2c0f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c0f8:	ldr	r2, [r3, #100]	; 0x64
   2c0fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c100:	lsl	r3, r3, #2
   2c104:	add	r3, r2, r3
   2c108:	ldr	r3, [r3]
   2c10c:	cmp	r3, #0
   2c110:	moveq	r3, #1
   2c114:	movne	r3, #0
   2c118:	uxtb	r3, r3
   2c11c:	cmp	r3, #0
   2c120:	beq	2c15c <__assert_fail@plt+0x1ac18>
   2c124:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c128:	cmp	r3, #0
   2c12c:	movne	r3, #1
   2c130:	moveq	r3, #0
   2c134:	uxtb	r3, r3
   2c138:	cmp	r3, #0
   2c13c:	beq	2c15c <__assert_fail@plt+0x1ac18>
   2c140:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c144:	b	2c180 <__assert_fail@plt+0x1ac3c>
   2c148:	nop			; (mov r0, r0)
   2c14c:	b	2c15c <__assert_fail@plt+0x1ac18>
   2c150:	nop			; (mov r0, r0)
   2c154:	b	2c15c <__assert_fail@plt+0x1ac18>
   2c158:	nop			; (mov r0, r0)
   2c15c:	ldr	r3, [fp, #-16]
   2c160:	add	r3, r3, #1
   2c164:	str	r3, [fp, #-16]
   2c168:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c16c:	ldr	r2, [r3, #8]
   2c170:	ldr	r3, [fp, #-16]
   2c174:	cmp	r2, r3
   2c178:	bgt	2bd84 <__assert_fail@plt+0x1a840>
   2c17c:	mov	r3, #0
   2c180:	mov	r0, r3
   2c184:	sub	sp, fp, #8
   2c188:	pop	{r4, fp, pc}
   2c18c:	andeq	pc, r3, r0, lsl #30
   2c190:	push	{r4, fp, lr}
   2c194:	add	fp, sp, #8
   2c198:	sub	sp, sp, #84	; 0x54
   2c19c:	str	r0, [fp, #-88]	; 0xffffffa8
   2c1a0:	str	r1, [fp, #-92]	; 0xffffffa4
   2c1a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c1a8:	ldr	r3, [r3, #84]	; 0x54
   2c1ac:	str	r3, [fp, #-24]	; 0xffffffe8
   2c1b0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c1b4:	ldr	r3, [r3, #40]	; 0x28
   2c1b8:	str	r3, [fp, #-28]	; 0xffffffe4
   2c1bc:	mov	r3, #0
   2c1c0:	str	r3, [fp, #-16]
   2c1c4:	b	2c750 <__assert_fail@plt+0x1b20c>
   2c1c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2c1cc:	ldr	r2, [r3, #8]
   2c1d0:	ldr	r3, [fp, #-16]
   2c1d4:	lsl	r3, r3, #2
   2c1d8:	add	r3, r2, r3
   2c1dc:	ldr	r3, [r3]
   2c1e0:	str	r3, [fp, #-32]	; 0xffffffe0
   2c1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c1e8:	ldr	r2, [r3]
   2c1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c1f0:	lsl	r3, r3, #3
   2c1f4:	add	r3, r2, r3
   2c1f8:	str	r3, [fp, #-36]	; 0xffffffdc
   2c1fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c200:	ldrb	r3, [r3, #4]
   2c204:	cmp	r3, #4
   2c208:	bne	2c738 <__assert_fail@plt+0x1b1f4>
   2c20c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c210:	ldr	r2, [r3, #4]
   2c214:	ldr	r3, [pc, #1400]	; 2c794 <__assert_fail@plt+0x1b250>
   2c218:	and	r3, r3, r2
   2c21c:	cmp	r3, #0
   2c220:	beq	2c310 <__assert_fail@plt+0x1adcc>
   2c224:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2c228:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c22c:	ldr	r3, [r3, #88]	; 0x58
   2c230:	mov	r2, r3
   2c234:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c238:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2c23c:	str	r0, [fp, #-40]	; 0xffffffd8
   2c240:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c244:	ldr	r3, [r3, #4]
   2c248:	lsr	r3, r3, #8
   2c24c:	lsl	r3, r3, #22
   2c250:	lsr	r3, r3, #22
   2c254:	uxth	r3, r3
   2c258:	and	r3, r3, #4
   2c25c:	cmp	r3, #0
   2c260:	beq	2c274 <__assert_fail@plt+0x1ad30>
   2c264:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c268:	and	r3, r3, #1
   2c26c:	cmp	r3, #0
   2c270:	beq	2c740 <__assert_fail@plt+0x1b1fc>
   2c274:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c278:	ldr	r3, [r3, #4]
   2c27c:	lsr	r3, r3, #8
   2c280:	lsl	r3, r3, #22
   2c284:	lsr	r3, r3, #22
   2c288:	uxth	r3, r3
   2c28c:	and	r3, r3, #8
   2c290:	cmp	r3, #0
   2c294:	beq	2c2a8 <__assert_fail@plt+0x1ad64>
   2c298:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c29c:	and	r3, r3, #1
   2c2a0:	cmp	r3, #0
   2c2a4:	bne	2c740 <__assert_fail@plt+0x1b1fc>
   2c2a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c2ac:	ldr	r3, [r3, #4]
   2c2b0:	lsr	r3, r3, #8
   2c2b4:	lsl	r3, r3, #22
   2c2b8:	lsr	r3, r3, #22
   2c2bc:	uxth	r3, r3
   2c2c0:	and	r3, r3, #32
   2c2c4:	cmp	r3, #0
   2c2c8:	beq	2c2dc <__assert_fail@plt+0x1ad98>
   2c2cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c2d0:	and	r3, r3, #2
   2c2d4:	cmp	r3, #0
   2c2d8:	beq	2c740 <__assert_fail@plt+0x1b1fc>
   2c2dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c2e0:	ldr	r3, [r3, #4]
   2c2e4:	lsr	r3, r3, #8
   2c2e8:	lsl	r3, r3, #22
   2c2ec:	lsr	r3, r3, #22
   2c2f0:	uxth	r3, r3
   2c2f4:	and	r3, r3, #128	; 0x80
   2c2f8:	cmp	r3, #0
   2c2fc:	beq	2c310 <__assert_fail@plt+0x1adcc>
   2c300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c304:	and	r3, r3, #8
   2c308:	cmp	r3, #0
   2c30c:	beq	2c740 <__assert_fail@plt+0x1b1fc>
   2c310:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c314:	ldr	r3, [r3, #108]	; 0x6c
   2c318:	str	r3, [fp, #-20]	; 0xffffffec
   2c31c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c320:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c324:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2c328:	bl	2c798 <__assert_fail@plt+0x1b254>
   2c32c:	mov	r3, r0
   2c330:	str	r3, [fp, #-68]	; 0xffffffbc
   2c334:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c338:	cmp	r3, #0
   2c33c:	movne	r3, #1
   2c340:	moveq	r3, #0
   2c344:	uxtb	r3, r3
   2c348:	cmp	r3, #0
   2c34c:	bne	2c770 <__assert_fail@plt+0x1b22c>
   2c350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c354:	ldr	r2, [r3, #12]
   2c358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c35c:	lsl	r3, r3, #2
   2c360:	add	r3, r2, r3
   2c364:	ldr	r3, [r3]
   2c368:	cmn	r3, #1
   2c36c:	b	2c720 <__assert_fail@plt+0x1b1dc>
   2c370:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c374:	ldr	r1, [r3, #116]	; 0x74
   2c378:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c37c:	mov	r3, r2
   2c380:	lsl	r3, r3, #1
   2c384:	add	r3, r3, r2
   2c388:	lsl	r3, r3, #3
   2c38c:	add	r3, r1, r3
   2c390:	str	r3, [fp, #-44]	; 0xffffffd4
   2c394:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c398:	ldr	r2, [r3]
   2c39c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c3a0:	cmp	r2, r3
   2c3a4:	bne	2c710 <__assert_fail@plt+0x1b1cc>
   2c3a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c3ac:	ldr	r2, [r3, #4]
   2c3b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c3b4:	cmp	r2, r3
   2c3b8:	bne	2c710 <__assert_fail@plt+0x1b1cc>
   2c3bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c3c0:	ldr	r2, [r3, #12]
   2c3c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c3c8:	ldr	r3, [r3, #8]
   2c3cc:	sub	r3, r2, r3
   2c3d0:	str	r3, [fp, #-48]	; 0xffffffd0
   2c3d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c3d8:	cmp	r3, #0
   2c3dc:	bne	2c42c <__assert_fail@plt+0x1aee8>
   2c3e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3e4:	ldr	r1, [r3, #24]
   2c3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c3ec:	ldr	r0, [r3, #20]
   2c3f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c3f4:	mov	r3, r2
   2c3f8:	lsl	r3, r3, #1
   2c3fc:	add	r3, r3, r2
   2c400:	lsl	r3, r3, #2
   2c404:	add	r3, r0, r3
   2c408:	ldr	r3, [r3, #8]
   2c40c:	ldr	r3, [r3]
   2c410:	mov	r2, r3
   2c414:	mov	r3, r2
   2c418:	lsl	r3, r3, #1
   2c41c:	add	r3, r3, r2
   2c420:	lsl	r3, r3, #2
   2c424:	add	r3, r1, r3
   2c428:	b	2c464 <__assert_fail@plt+0x1af20>
   2c42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c430:	ldr	r2, [r3, #24]
   2c434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c438:	ldr	r1, [r3, #12]
   2c43c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c440:	lsl	r3, r3, #2
   2c444:	add	r3, r1, r3
   2c448:	ldr	r3, [r3]
   2c44c:	mov	r1, r3
   2c450:	mov	r3, r1
   2c454:	lsl	r3, r3, #1
   2c458:	add	r3, r3, r1
   2c45c:	lsl	r3, r3, #2
   2c460:	add	r3, r2, r3
   2c464:	str	r3, [fp, #-52]	; 0xffffffcc
   2c468:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c46c:	ldr	r2, [r3, #12]
   2c470:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c474:	add	r2, r2, r3
   2c478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c47c:	ldr	r3, [r3, #8]
   2c480:	sub	r3, r2, r3
   2c484:	str	r3, [fp, #-56]	; 0xffffffc8
   2c488:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2c48c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c490:	sub	r1, r3, #1
   2c494:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c498:	ldr	r3, [r3, #88]	; 0x58
   2c49c:	mov	r2, r3
   2c4a0:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2c4a4:	str	r0, [fp, #-40]	; 0xffffffd8
   2c4a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c4ac:	ldr	r2, [r3, #100]	; 0x64
   2c4b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c4b4:	lsl	r3, r3, #2
   2c4b8:	add	r3, r2, r3
   2c4bc:	ldr	r3, [r3]
   2c4c0:	str	r3, [fp, #-60]	; 0xffffffc4
   2c4c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c4c8:	ldr	r2, [r3, #100]	; 0x64
   2c4cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c4d0:	lsl	r3, r3, #2
   2c4d4:	add	r3, r2, r3
   2c4d8:	ldr	r3, [r3]
   2c4dc:	cmp	r3, #0
   2c4e0:	beq	2c504 <__assert_fail@plt+0x1afc0>
   2c4e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c4e8:	ldr	r2, [r3, #100]	; 0x64
   2c4ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c4f0:	lsl	r3, r3, #2
   2c4f4:	add	r3, r2, r3
   2c4f8:	ldr	r3, [r3]
   2c4fc:	ldr	r3, [r3, #8]
   2c500:	b	2c508 <__assert_fail@plt+0x1afc4>
   2c504:	mov	r3, #0
   2c508:	str	r3, [fp, #-64]	; 0xffffffc0
   2c50c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c510:	cmp	r3, #0
   2c514:	bne	2c598 <__assert_fail@plt+0x1b054>
   2c518:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c51c:	ldr	r2, [r3, #100]	; 0x64
   2c520:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c524:	lsl	r3, r3, #2
   2c528:	add	r4, r2, r3
   2c52c:	sub	r0, fp, #68	; 0x44
   2c530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c534:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2c538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c53c:	bl	1c25c <__assert_fail@plt+0xad18>
   2c540:	mov	r3, r0
   2c544:	str	r3, [r4]
   2c548:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c54c:	ldr	r2, [r3, #100]	; 0x64
   2c550:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c554:	lsl	r3, r3, #2
   2c558:	add	r3, r2, r3
   2c55c:	ldr	r3, [r3]
   2c560:	cmp	r3, #0
   2c564:	moveq	r3, #1
   2c568:	movne	r3, #0
   2c56c:	uxtb	r3, r3
   2c570:	cmp	r3, #0
   2c574:	beq	2c674 <__assert_fail@plt+0x1b130>
   2c578:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c57c:	cmp	r3, #0
   2c580:	movne	r3, #1
   2c584:	moveq	r3, #0
   2c588:	uxtb	r3, r3
   2c58c:	cmp	r3, #0
   2c590:	beq	2c674 <__assert_fail@plt+0x1b130>
   2c594:	b	2c784 <__assert_fail@plt+0x1b240>
   2c598:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c59c:	ldr	r1, [r3, #40]	; 0x28
   2c5a0:	sub	r3, fp, #80	; 0x50
   2c5a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2c5a8:	mov	r0, r3
   2c5ac:	bl	1aee4 <__assert_fail@plt+0x99a0>
   2c5b0:	mov	r3, r0
   2c5b4:	str	r3, [fp, #-68]	; 0xffffffbc
   2c5b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c5bc:	cmp	r3, #0
   2c5c0:	movne	r3, #1
   2c5c4:	moveq	r3, #0
   2c5c8:	uxtb	r3, r3
   2c5cc:	cmp	r3, #0
   2c5d0:	beq	2c5e4 <__assert_fail@plt+0x1b0a0>
   2c5d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c5d8:	mov	r0, r3
   2c5dc:	bl	14dec <__assert_fail@plt+0x38a8>
   2c5e0:	b	2c784 <__assert_fail@plt+0x1b240>
   2c5e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c5e8:	ldr	r2, [r3, #100]	; 0x64
   2c5ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c5f0:	lsl	r3, r3, #2
   2c5f4:	add	r4, r2, r3
   2c5f8:	sub	r2, fp, #80	; 0x50
   2c5fc:	sub	r0, fp, #68	; 0x44
   2c600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c604:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c608:	bl	1c25c <__assert_fail@plt+0xad18>
   2c60c:	mov	r3, r0
   2c610:	str	r3, [r4]
   2c614:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c618:	mov	r0, r3
   2c61c:	bl	14dec <__assert_fail@plt+0x38a8>
   2c620:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c624:	ldr	r2, [r3, #100]	; 0x64
   2c628:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c62c:	lsl	r3, r3, #2
   2c630:	add	r3, r2, r3
   2c634:	ldr	r3, [r3]
   2c638:	cmp	r3, #0
   2c63c:	moveq	r3, #1
   2c640:	movne	r3, #0
   2c644:	uxtb	r3, r3
   2c648:	cmp	r3, #0
   2c64c:	beq	2c674 <__assert_fail@plt+0x1b130>
   2c650:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c654:	cmp	r3, #0
   2c658:	movne	r3, #1
   2c65c:	moveq	r3, #0
   2c660:	uxtb	r3, r3
   2c664:	cmp	r3, #0
   2c668:	beq	2c674 <__assert_fail@plt+0x1b130>
   2c66c:	nop			; (mov r0, r0)
   2c670:	b	2c784 <__assert_fail@plt+0x1b240>
   2c674:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c678:	cmp	r3, #0
   2c67c:	bne	2c714 <__assert_fail@plt+0x1b1d0>
   2c680:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c684:	ldr	r2, [r3, #100]	; 0x64
   2c688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c68c:	lsl	r3, r3, #2
   2c690:	add	r3, r2, r3
   2c694:	ldr	r3, [r3]
   2c698:	ldr	r2, [r3, #8]
   2c69c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c6a0:	cmp	r2, r3
   2c6a4:	ble	2c714 <__assert_fail@plt+0x1b1d0>
   2c6a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c6ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c6b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2c6b4:	bl	2bc34 <__assert_fail@plt+0x1a6f0>
   2c6b8:	mov	r3, r0
   2c6bc:	str	r3, [fp, #-68]	; 0xffffffbc
   2c6c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c6c4:	cmp	r3, #0
   2c6c8:	movne	r3, #1
   2c6cc:	moveq	r3, #0
   2c6d0:	uxtb	r3, r3
   2c6d4:	cmp	r3, #0
   2c6d8:	bne	2c778 <__assert_fail@plt+0x1b234>
   2c6dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c6e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2c6e4:	bl	2c190 <__assert_fail@plt+0x1ac4c>
   2c6e8:	mov	r3, r0
   2c6ec:	str	r3, [fp, #-68]	; 0xffffffbc
   2c6f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c6f4:	cmp	r3, #0
   2c6f8:	movne	r3, #1
   2c6fc:	moveq	r3, #0
   2c700:	uxtb	r3, r3
   2c704:	cmp	r3, #0
   2c708:	bne	2c780 <__assert_fail@plt+0x1b23c>
   2c70c:	b	2c714 <__assert_fail@plt+0x1b1d0>
   2c710:	nop			; (mov r0, r0)
   2c714:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c718:	add	r3, r3, #1
   2c71c:	str	r3, [fp, #-20]	; 0xffffffec
   2c720:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2c724:	ldr	r2, [r3, #108]	; 0x6c
   2c728:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c72c:	cmp	r2, r3
   2c730:	bgt	2c370 <__assert_fail@plt+0x1ae2c>
   2c734:	b	2c744 <__assert_fail@plt+0x1b200>
   2c738:	nop			; (mov r0, r0)
   2c73c:	b	2c744 <__assert_fail@plt+0x1b200>
   2c740:	nop			; (mov r0, r0)
   2c744:	ldr	r3, [fp, #-16]
   2c748:	add	r3, r3, #1
   2c74c:	str	r3, [fp, #-16]
   2c750:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2c754:	ldr	r2, [r3, #4]
   2c758:	ldr	r3, [fp, #-16]
   2c75c:	cmp	r2, r3
   2c760:	bgt	2c1c8 <__assert_fail@plt+0x1ac84>
   2c764:	mov	r3, #0
   2c768:	str	r3, [fp, #-68]	; 0xffffffbc
   2c76c:	b	2c784 <__assert_fail@plt+0x1b240>
   2c770:	nop			; (mov r0, r0)
   2c774:	b	2c784 <__assert_fail@plt+0x1b240>
   2c778:	nop			; (mov r0, r0)
   2c77c:	b	2c784 <__assert_fail@plt+0x1b240>
   2c780:	nop			; (mov r0, r0)
   2c784:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c788:	mov	r0, r3
   2c78c:	sub	sp, fp, #8
   2c790:	pop	{r4, fp, pc}
   2c794:	andeq	pc, r3, r0, lsl #30
   2c798:	push	{fp, lr}
   2c79c:	add	fp, sp, #4
   2c7a0:	sub	sp, sp, #96	; 0x60
   2c7a4:	str	r0, [fp, #-72]	; 0xffffffb8
   2c7a8:	str	r1, [fp, #-76]	; 0xffffffb4
   2c7ac:	str	r2, [fp, #-80]	; 0xffffffb0
   2c7b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c7b4:	ldr	r3, [r3, #84]	; 0x54
   2c7b8:	str	r3, [fp, #-32]	; 0xffffffe0
   2c7bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c7c0:	ldr	r3, [r3, #4]
   2c7c4:	str	r3, [fp, #-12]
   2c7c8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2c7cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2c7d0:	bl	30654 <__assert_fail@plt+0x1f110>
   2c7d4:	str	r0, [fp, #-36]	; 0xffffffdc
   2c7d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c7dc:	cmn	r3, #1
   2c7e0:	beq	2c83c <__assert_fail@plt+0x1b2f8>
   2c7e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c7e8:	ldr	r1, [r3, #116]	; 0x74
   2c7ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c7f0:	mov	r3, r2
   2c7f4:	lsl	r3, r3, #1
   2c7f8:	add	r3, r3, r2
   2c7fc:	lsl	r3, r3, #3
   2c800:	add	r3, r1, r3
   2c804:	str	r3, [fp, #-16]
   2c808:	ldr	r3, [fp, #-16]
   2c80c:	ldr	r2, [r3]
   2c810:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2c814:	cmp	r2, r3
   2c818:	bne	2c824 <__assert_fail@plt+0x1b2e0>
   2c81c:	mov	r3, #0
   2c820:	b	2cdbc <__assert_fail@plt+0x1b878>
   2c824:	ldr	r3, [fp, #-16]
   2c828:	add	r2, r3, #24
   2c82c:	str	r2, [fp, #-16]
   2c830:	ldrb	r3, [r3, #20]
   2c834:	cmp	r3, #0
   2c838:	bne	2c808 <__assert_fail@plt+0x1b2c4>
   2c83c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c840:	ldr	r2, [r3]
   2c844:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2c848:	lsl	r3, r3, #3
   2c84c:	add	r3, r2, r3
   2c850:	ldr	r3, [r3]
   2c854:	str	r3, [fp, #-40]	; 0xffffffd8
   2c858:	mov	r3, #0
   2c85c:	str	r3, [fp, #-8]
   2c860:	b	2cda4 <__assert_fail@plt+0x1b860>
   2c864:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c868:	ldr	r2, [r3, #132]	; 0x84
   2c86c:	ldr	r3, [fp, #-8]
   2c870:	lsl	r3, r3, #2
   2c874:	add	r3, r2, r3
   2c878:	ldr	r3, [r3]
   2c87c:	str	r3, [fp, #-44]	; 0xffffffd4
   2c880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c884:	ldr	r2, [r3]
   2c888:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c88c:	ldr	r3, [r3, #4]
   2c890:	lsl	r3, r3, #3
   2c894:	add	r3, r2, r3
   2c898:	ldr	r2, [r3]
   2c89c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c8a0:	cmp	r2, r3
   2c8a4:	bne	2cd7c <__assert_fail@plt+0x1b838>
   2c8a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c8ac:	ldr	r3, [r3]
   2c8b0:	str	r3, [fp, #-24]	; 0xffffffe8
   2c8b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c8b8:	str	r3, [fp, #-28]	; 0xffffffe4
   2c8bc:	mov	r3, #0
   2c8c0:	str	r3, [fp, #-20]	; 0xffffffec
   2c8c4:	b	2ca54 <__assert_fail@plt+0x1b510>
   2c8c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2c8cc:	ldr	r2, [r3, #20]
   2c8d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c8d4:	lsl	r3, r3, #2
   2c8d8:	add	r3, r2, r3
   2c8dc:	ldr	r3, [r3]
   2c8e0:	str	r3, [fp, #-64]	; 0xffffffc0
   2c8e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2c8e8:	ldr	r2, [r3, #4]
   2c8ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8f0:	sub	r3, r2, r3
   2c8f4:	str	r3, [fp, #-68]	; 0xffffffbc
   2c8f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c8fc:	cmp	r3, #0
   2c900:	ble	2c9c8 <__assert_fail@plt+0x1b484>
   2c904:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c908:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c90c:	add	r2, r2, r3
   2c910:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c914:	ldr	r3, [r3, #28]
   2c918:	cmp	r2, r3
   2c91c:	movgt	r3, #1
   2c920:	movle	r3, #0
   2c924:	uxtb	r3, r3
   2c928:	cmp	r3, #0
   2c92c:	beq	2c998 <__assert_fail@plt+0x1b454>
   2c930:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c934:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c938:	add	r2, r2, r3
   2c93c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c940:	ldr	r3, [r3, #48]	; 0x30
   2c944:	cmp	r2, r3
   2c948:	bgt	2ca6c <__assert_fail@plt+0x1b528>
   2c94c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c950:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c954:	add	r3, r2, r3
   2c958:	mov	r1, r3
   2c95c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2c960:	bl	29ec8 <__assert_fail@plt+0x18984>
   2c964:	str	r0, [fp, #-60]	; 0xffffffc4
   2c968:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c96c:	cmp	r3, #0
   2c970:	movne	r3, #1
   2c974:	moveq	r3, #0
   2c978:	uxtb	r3, r3
   2c97c:	cmp	r3, #0
   2c980:	beq	2c98c <__assert_fail@plt+0x1b448>
   2c984:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2c988:	b	2cdbc <__assert_fail@plt+0x1b878>
   2c98c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2c990:	ldr	r3, [r3, #4]
   2c994:	str	r3, [fp, #-12]
   2c998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c99c:	ldr	r2, [fp, #-12]
   2c9a0:	add	r0, r2, r3
   2c9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c9a8:	ldr	r2, [fp, #-12]
   2c9ac:	add	r3, r2, r3
   2c9b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2c9b4:	mov	r1, r3
   2c9b8:	bl	112a4 <memcmp@plt>
   2c9bc:	mov	r3, r0
   2c9c0:	cmp	r3, #0
   2c9c4:	bne	2ca74 <__assert_fail@plt+0x1b530>
   2c9c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c9cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c9d0:	add	r3, r2, r3
   2c9d4:	str	r3, [fp, #-28]	; 0xffffffe4
   2c9d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c9dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2c9e0:	add	r3, r2, r3
   2c9e4:	str	r3, [fp, #-24]	; 0xffffffe8
   2c9e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2c9ec:	str	r3, [sp]
   2c9f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2c9f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2c9f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2c9fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ca00:	bl	2cdc8 <__assert_fail@plt+0x1b884>
   2ca04:	str	r0, [fp, #-60]	; 0xffffffc4
   2ca08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2ca0c:	ldr	r3, [r3, #4]
   2ca10:	str	r3, [fp, #-12]
   2ca14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ca18:	cmp	r3, #1
   2ca1c:	beq	2ca44 <__assert_fail@plt+0x1b500>
   2ca20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ca24:	cmp	r3, #0
   2ca28:	movne	r3, #1
   2ca2c:	moveq	r3, #0
   2ca30:	uxtb	r3, r3
   2ca34:	cmp	r3, #0
   2ca38:	beq	2ca48 <__assert_fail@plt+0x1b504>
   2ca3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ca40:	b	2cdbc <__assert_fail@plt+0x1b878>
   2ca44:	nop			; (mov r0, r0)
   2ca48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca4c:	add	r3, r3, #1
   2ca50:	str	r3, [fp, #-20]	; 0xffffffec
   2ca54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ca58:	ldr	r2, [r3, #16]
   2ca5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca60:	cmp	r2, r3
   2ca64:	bgt	2c8c8 <__assert_fail@plt+0x1b384>
   2ca68:	b	2ca78 <__assert_fail@plt+0x1b534>
   2ca6c:	nop			; (mov r0, r0)
   2ca70:	b	2ca78 <__assert_fail@plt+0x1b534>
   2ca74:	nop			; (mov r0, r0)
   2ca78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ca7c:	ldr	r2, [r3, #16]
   2ca80:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca84:	cmp	r2, r3
   2ca88:	bgt	2cd84 <__assert_fail@plt+0x1b840>
   2ca8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca90:	cmp	r3, #0
   2ca94:	ble	2cd68 <__assert_fail@plt+0x1b824>
   2ca98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca9c:	add	r3, r3, #1
   2caa0:	str	r3, [fp, #-24]	; 0xffffffe8
   2caa4:	b	2cd68 <__assert_fail@plt+0x1b824>
   2caa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2caac:	ldr	r3, [r3]
   2cab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cab4:	sub	r3, r2, r3
   2cab8:	str	r3, [fp, #-48]	; 0xffffffd0
   2cabc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2cac0:	cmp	r3, #0
   2cac4:	ble	2cb80 <__assert_fail@plt+0x1b63c>
   2cac8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cacc:	ldr	r2, [r3, #28]
   2cad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cad4:	cmp	r2, r3
   2cad8:	movle	r3, #1
   2cadc:	movgt	r3, #0
   2cae0:	uxtb	r3, r3
   2cae4:	cmp	r3, #0
   2cae8:	beq	2cb48 <__assert_fail@plt+0x1b604>
   2caec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2caf0:	ldr	r2, [r3, #48]	; 0x30
   2caf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2caf8:	cmp	r2, r3
   2cafc:	ble	2cd8c <__assert_fail@plt+0x1b848>
   2cb00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cb04:	add	r3, r3, #1
   2cb08:	mov	r1, r3
   2cb0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2cb10:	bl	2fecc <__assert_fail@plt+0x1e988>
   2cb14:	str	r0, [fp, #-60]	; 0xffffffc4
   2cb18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cb1c:	cmp	r3, #0
   2cb20:	movne	r3, #1
   2cb24:	moveq	r3, #0
   2cb28:	uxtb	r3, r3
   2cb2c:	cmp	r3, #0
   2cb30:	beq	2cb3c <__assert_fail@plt+0x1b5f8>
   2cb34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cb38:	b	2cdbc <__assert_fail@plt+0x1b878>
   2cb3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cb40:	ldr	r3, [r3, #4]
   2cb44:	str	r3, [fp, #-12]
   2cb48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cb4c:	add	r2, r3, #1
   2cb50:	str	r2, [fp, #-28]	; 0xffffffe4
   2cb54:	mov	r2, r3
   2cb58:	ldr	r3, [fp, #-12]
   2cb5c:	add	r3, r3, r2
   2cb60:	ldrb	r2, [r3]
   2cb64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb68:	sub	r3, r3, #1
   2cb6c:	ldr	r1, [fp, #-12]
   2cb70:	add	r3, r1, r3
   2cb74:	ldrb	r3, [r3]
   2cb78:	cmp	r2, r3
   2cb7c:	bne	2cd94 <__assert_fail@plt+0x1b850>
   2cb80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cb84:	ldr	r2, [r3, #100]	; 0x64
   2cb88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb8c:	lsl	r3, r3, #2
   2cb90:	add	r3, r2, r3
   2cb94:	ldr	r3, [r3]
   2cb98:	cmp	r3, #0
   2cb9c:	beq	2cd40 <__assert_fail@plt+0x1b7fc>
   2cba0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cba4:	ldr	r2, [r3, #100]	; 0x64
   2cba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cbac:	lsl	r3, r3, #2
   2cbb0:	add	r3, r2, r3
   2cbb4:	ldr	r3, [r3]
   2cbb8:	add	r3, r3, #4
   2cbbc:	str	r3, [fp, #-52]	; 0xffffffcc
   2cbc0:	mov	r3, #9
   2cbc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2cbc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2cbcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cbd0:	bl	2cec4 <__assert_fail@plt+0x1b980>
   2cbd4:	str	r0, [fp, #-56]	; 0xffffffc8
   2cbd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cbdc:	cmn	r3, #1
   2cbe0:	beq	2cd48 <__assert_fail@plt+0x1b804>
   2cbe4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cbe8:	ldr	r3, [r3, #8]
   2cbec:	cmp	r3, #0
   2cbf0:	bne	2cc3c <__assert_fail@plt+0x1b6f8>
   2cbf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cbf8:	ldr	r3, [r3]
   2cbfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cc00:	sub	r3, r2, r3
   2cc04:	add	r3, r3, #1
   2cc08:	mov	r1, r3
   2cc0c:	mov	r0, #12
   2cc10:	bl	33180 <__assert_fail@plt+0x21c3c>
   2cc14:	mov	r3, r0
   2cc18:	mov	r2, r3
   2cc1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cc20:	str	r2, [r3, #8]
   2cc24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cc28:	ldr	r3, [r3, #8]
   2cc2c:	cmp	r3, #0
   2cc30:	bne	2cc3c <__assert_fail@plt+0x1b6f8>
   2cc34:	mov	r3, #12
   2cc38:	b	2cdbc <__assert_fail@plt+0x1b878>
   2cc3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cc40:	ldr	r1, [r3, #8]
   2cc44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cc48:	ldr	r2, [r3, #4]
   2cc4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2cc50:	ldr	r0, [r3]
   2cc54:	mov	r3, #9
   2cc58:	str	r3, [sp, #8]
   2cc5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc60:	str	r3, [sp, #4]
   2cc64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2cc68:	str	r3, [sp]
   2cc6c:	mov	r3, r0
   2cc70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2cc74:	bl	2cf88 <__assert_fail@plt+0x1ba44>
   2cc78:	str	r0, [fp, #-60]	; 0xffffffc4
   2cc7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cc80:	cmp	r3, #1
   2cc84:	beq	2cd50 <__assert_fail@plt+0x1b80c>
   2cc88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cc8c:	cmp	r3, #0
   2cc90:	movne	r3, #1
   2cc94:	moveq	r3, #0
   2cc98:	uxtb	r3, r3
   2cc9c:	cmp	r3, #0
   2cca0:	beq	2ccac <__assert_fail@plt+0x1b768>
   2cca4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cca8:	b	2cdbc <__assert_fail@plt+0x1b878>
   2ccac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ccb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2ccb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ccb8:	bl	308e8 <__assert_fail@plt+0x1f3a4>
   2ccbc:	str	r0, [fp, #-64]	; 0xffffffc0
   2ccc0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2ccc4:	cmp	r3, #0
   2ccc8:	moveq	r3, #1
   2cccc:	movne	r3, #0
   2ccd0:	uxtb	r3, r3
   2ccd4:	cmp	r3, #0
   2ccd8:	beq	2cce4 <__assert_fail@plt+0x1b7a0>
   2ccdc:	mov	r3, #12
   2cce0:	b	2cdbc <__assert_fail@plt+0x1b878>
   2cce4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cce8:	str	r3, [sp]
   2ccec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ccf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ccf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ccf8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ccfc:	bl	2cdc8 <__assert_fail@plt+0x1b884>
   2cd00:	str	r0, [fp, #-60]	; 0xffffffc4
   2cd04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cd08:	ldr	r3, [r3, #4]
   2cd0c:	str	r3, [fp, #-12]
   2cd10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cd14:	cmp	r3, #1
   2cd18:	beq	2cd58 <__assert_fail@plt+0x1b814>
   2cd1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cd20:	cmp	r3, #0
   2cd24:	movne	r3, #1
   2cd28:	moveq	r3, #0
   2cd2c:	uxtb	r3, r3
   2cd30:	cmp	r3, #0
   2cd34:	beq	2cd5c <__assert_fail@plt+0x1b818>
   2cd38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2cd3c:	b	2cdbc <__assert_fail@plt+0x1b878>
   2cd40:	nop			; (mov r0, r0)
   2cd44:	b	2cd5c <__assert_fail@plt+0x1b818>
   2cd48:	nop			; (mov r0, r0)
   2cd4c:	b	2cd5c <__assert_fail@plt+0x1b818>
   2cd50:	nop			; (mov r0, r0)
   2cd54:	b	2cd5c <__assert_fail@plt+0x1b818>
   2cd58:	nop			; (mov r0, r0)
   2cd5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cd60:	add	r3, r3, #1
   2cd64:	str	r3, [fp, #-24]	; 0xffffffe8
   2cd68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2cd6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cd70:	cmp	r2, r3
   2cd74:	ble	2caa8 <__assert_fail@plt+0x1b564>
   2cd78:	b	2cd98 <__assert_fail@plt+0x1b854>
   2cd7c:	nop			; (mov r0, r0)
   2cd80:	b	2cd98 <__assert_fail@plt+0x1b854>
   2cd84:	nop			; (mov r0, r0)
   2cd88:	b	2cd98 <__assert_fail@plt+0x1b854>
   2cd8c:	nop			; (mov r0, r0)
   2cd90:	b	2cd98 <__assert_fail@plt+0x1b854>
   2cd94:	nop			; (mov r0, r0)
   2cd98:	ldr	r3, [fp, #-8]
   2cd9c:	add	r3, r3, #1
   2cda0:	str	r3, [fp, #-8]
   2cda4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2cda8:	ldr	r2, [r3, #124]	; 0x7c
   2cdac:	ldr	r3, [fp, #-8]
   2cdb0:	cmp	r2, r3
   2cdb4:	bgt	2c864 <__assert_fail@plt+0x1b320>
   2cdb8:	mov	r3, #0
   2cdbc:	mov	r0, r3
   2cdc0:	sub	sp, fp, #4
   2cdc4:	pop	{fp, pc}
   2cdc8:	push	{fp, lr}
   2cdcc:	add	fp, sp, #4
   2cdd0:	sub	sp, sp, #40	; 0x28
   2cdd4:	str	r0, [fp, #-16]
   2cdd8:	str	r1, [fp, #-20]	; 0xffffffec
   2cddc:	str	r2, [fp, #-24]	; 0xffffffe8
   2cde0:	str	r3, [fp, #-28]	; 0xffffffe4
   2cde4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cde8:	add	r1, r3, #8
   2cdec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cdf0:	ldr	r2, [r3]
   2cdf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cdf8:	ldr	r0, [r3, #4]
   2cdfc:	mov	r3, #8
   2ce00:	str	r3, [sp, #8]
   2ce04:	ldr	r3, [fp, #4]
   2ce08:	str	r3, [sp, #4]
   2ce0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ce10:	str	r3, [sp]
   2ce14:	mov	r3, r0
   2ce18:	ldr	r0, [fp, #-16]
   2ce1c:	bl	2cf88 <__assert_fail@plt+0x1ba44>
   2ce20:	str	r0, [fp, #-8]
   2ce24:	ldr	r3, [fp, #-8]
   2ce28:	cmp	r3, #0
   2ce2c:	beq	2ce38 <__assert_fail@plt+0x1b8f4>
   2ce30:	ldr	r3, [fp, #-8]
   2ce34:	b	2ceb8 <__assert_fail@plt+0x1b974>
   2ce38:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ce3c:	ldr	r2, [r3]
   2ce40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce44:	ldr	r3, [r3, #4]
   2ce48:	str	r3, [sp]
   2ce4c:	mov	r3, r2
   2ce50:	ldr	r2, [fp, #4]
   2ce54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ce58:	ldr	r0, [fp, #-16]
   2ce5c:	bl	3034c <__assert_fail@plt+0x1ee08>
   2ce60:	str	r0, [fp, #-8]
   2ce64:	ldr	r3, [fp, #-8]
   2ce68:	cmp	r3, #0
   2ce6c:	movne	r3, #1
   2ce70:	moveq	r3, #0
   2ce74:	uxtb	r3, r3
   2ce78:	cmp	r3, #0
   2ce7c:	beq	2ce88 <__assert_fail@plt+0x1b944>
   2ce80:	ldr	r3, [fp, #-8]
   2ce84:	b	2ceb8 <__assert_fail@plt+0x1b974>
   2ce88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ce8c:	ldr	r2, [r3, #4]
   2ce90:	ldr	r3, [fp, #4]
   2ce94:	add	r2, r2, r3
   2ce98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ce9c:	ldr	r3, [r3]
   2cea0:	sub	r3, r2, r3
   2cea4:	str	r3, [fp, #-12]
   2cea8:	ldr	r1, [fp, #-12]
   2ceac:	ldr	r0, [fp, #-16]
   2ceb0:	bl	29ec8 <__assert_fail@plt+0x18984>
   2ceb4:	mov	r3, r0
   2ceb8:	mov	r0, r3
   2cebc:	sub	sp, fp, #4
   2cec0:	pop	{fp, pc}
   2cec4:	push	{fp}		; (str fp, [sp, #-4]!)
   2cec8:	add	fp, sp, #0
   2cecc:	sub	sp, sp, #36	; 0x24
   2ced0:	str	r0, [fp, #-24]	; 0xffffffe8
   2ced4:	str	r1, [fp, #-28]	; 0xffffffe4
   2ced8:	str	r2, [fp, #-32]	; 0xffffffe0
   2cedc:	str	r3, [fp, #-36]	; 0xffffffdc
   2cee0:	mov	r3, #0
   2cee4:	str	r3, [fp, #-8]
   2cee8:	b	2cf60 <__assert_fail@plt+0x1ba1c>
   2ceec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cef0:	ldr	r2, [r3, #8]
   2cef4:	ldr	r3, [fp, #-8]
   2cef8:	lsl	r3, r3, #2
   2cefc:	add	r3, r2, r3
   2cf00:	ldr	r3, [r3]
   2cf04:	str	r3, [fp, #-12]
   2cf08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cf0c:	ldr	r2, [r3]
   2cf10:	ldr	r3, [fp, #-12]
   2cf14:	lsl	r3, r3, #3
   2cf18:	add	r3, r2, r3
   2cf1c:	str	r3, [fp, #-16]
   2cf20:	ldr	r3, [fp, #-16]
   2cf24:	ldrb	r3, [r3, #4]
   2cf28:	mov	r2, r3
   2cf2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cf30:	cmp	r2, r3
   2cf34:	bne	2cf54 <__assert_fail@plt+0x1ba10>
   2cf38:	ldr	r3, [fp, #-16]
   2cf3c:	ldr	r2, [r3]
   2cf40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cf44:	cmp	r2, r3
   2cf48:	bne	2cf54 <__assert_fail@plt+0x1ba10>
   2cf4c:	ldr	r3, [fp, #-12]
   2cf50:	b	2cf78 <__assert_fail@plt+0x1ba34>
   2cf54:	ldr	r3, [fp, #-8]
   2cf58:	add	r3, r3, #1
   2cf5c:	str	r3, [fp, #-8]
   2cf60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cf64:	ldr	r2, [r3, #4]
   2cf68:	ldr	r3, [fp, #-8]
   2cf6c:	cmp	r2, r3
   2cf70:	bgt	2ceec <__assert_fail@plt+0x1b9a8>
   2cf74:	mvn	r3, #0
   2cf78:	mov	r0, r3
   2cf7c:	add	sp, fp, #0
   2cf80:	pop	{fp}		; (ldr fp, [sp], #4)
   2cf84:	bx	lr
   2cf88:	push	{fp, lr}
   2cf8c:	add	fp, sp, #4
   2cf90:	sub	sp, sp, #96	; 0x60
   2cf94:	str	r0, [fp, #-80]	; 0xffffffb0
   2cf98:	str	r1, [fp, #-84]	; 0xffffffac
   2cf9c:	str	r2, [fp, #-88]	; 0xffffffa8
   2cfa0:	str	r3, [fp, #-92]	; 0xffffffa4
   2cfa4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cfa8:	ldr	r3, [r3, #84]	; 0x54
   2cfac:	str	r3, [fp, #-20]	; 0xffffffec
   2cfb0:	mov	r3, #0
   2cfb4:	str	r3, [fp, #-60]	; 0xffffffc4
   2cfb8:	mov	r3, #0
   2cfbc:	str	r3, [fp, #-16]
   2cfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cfc4:	ldr	r2, [r3]
   2cfc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2cfcc:	lsl	r3, r3, #3
   2cfd0:	add	r3, r2, r3
   2cfd4:	ldr	r3, [r3]
   2cfd8:	str	r3, [fp, #-24]	; 0xffffffe8
   2cfdc:	ldr	r3, [fp, #-84]	; 0xffffffac
   2cfe0:	ldr	r2, [r3, #4]
   2cfe4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2cfe8:	ldr	r1, [r3, #120]	; 0x78
   2cfec:	ldr	r3, [fp, #8]
   2cff0:	add	r3, r1, r3
   2cff4:	add	r3, r3, #1
   2cff8:	cmp	r2, r3
   2cffc:	movlt	r3, #1
   2d000:	movge	r3, #0
   2d004:	uxtb	r3, r3
   2d008:	cmp	r3, #0
   2d00c:	beq	2d124 <__assert_fail@plt+0x1bbe0>
   2d010:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d014:	ldr	r3, [r3, #4]
   2d018:	str	r3, [fp, #-28]	; 0xffffffe4
   2d01c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d020:	ldr	r2, [r3, #120]	; 0x78
   2d024:	ldr	r3, [fp, #8]
   2d028:	add	r3, r2, r3
   2d02c:	add	r3, r3, #1
   2d030:	str	r3, [fp, #-32]	; 0xffffffe0
   2d034:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d038:	mvn	r3, #-2147483648	; 0x80000000
   2d03c:	sub	r3, r3, r2
   2d040:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d044:	cmp	r3, r2
   2d048:	movlt	r3, #1
   2d04c:	movge	r3, #0
   2d050:	uxtb	r3, r3
   2d054:	cmp	r3, #0
   2d058:	beq	2d064 <__assert_fail@plt+0x1bb20>
   2d05c:	mov	r3, #12
   2d060:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d064:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d06c:	add	r3, r2, r3
   2d070:	str	r3, [fp, #-36]	; 0xffffffdc
   2d074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d078:	cmn	r3, #-1073741823	; 0xc0000001
   2d07c:	movhi	r3, #1
   2d080:	movls	r3, #0
   2d084:	uxtb	r3, r3
   2d088:	cmp	r3, #0
   2d08c:	beq	2d098 <__assert_fail@plt+0x1bb54>
   2d090:	mov	r3, #12
   2d094:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d098:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d09c:	ldr	r2, [r3, #8]
   2d0a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d0a4:	lsl	r3, r3, #2
   2d0a8:	mov	r1, r3
   2d0ac:	mov	r0, r2
   2d0b0:	bl	332ec <__assert_fail@plt+0x21da8>
   2d0b4:	str	r0, [fp, #-40]	; 0xffffffd8
   2d0b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0bc:	cmp	r3, #0
   2d0c0:	moveq	r3, #1
   2d0c4:	movne	r3, #0
   2d0c8:	uxtb	r3, r3
   2d0cc:	cmp	r3, #0
   2d0d0:	beq	2d0dc <__assert_fail@plt+0x1bb98>
   2d0d4:	mov	r3, #12
   2d0d8:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d0dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d0e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d0e4:	str	r2, [r3, #8]
   2d0e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d0ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d0f0:	str	r2, [r3, #4]
   2d0f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d0f8:	lsl	r3, r3, #2
   2d0fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d100:	add	r0, r2, r3
   2d104:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d108:	ldr	r2, [r3, #4]
   2d10c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d110:	sub	r3, r2, r3
   2d114:	lsl	r3, r3, #2
   2d118:	mov	r2, r3
   2d11c:	mov	r1, #0
   2d120:	bl	11448 <memset@plt>
   2d124:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d128:	ldr	r3, [r3]
   2d12c:	cmp	r3, #0
   2d130:	beq	2d140 <__assert_fail@plt+0x1bbfc>
   2d134:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d138:	ldr	r3, [r3]
   2d13c:	b	2d144 <__assert_fail@plt+0x1bc00>
   2d140:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d144:	str	r3, [fp, #-8]
   2d148:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d14c:	ldr	r3, [r3, #100]	; 0x64
   2d150:	str	r3, [fp, #-44]	; 0xffffffd4
   2d154:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d158:	ldr	r3, [r3, #40]	; 0x28
   2d15c:	str	r3, [fp, #-48]	; 0xffffffd0
   2d160:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d164:	ldr	r2, [r3, #8]
   2d168:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d16c:	str	r2, [r3, #100]	; 0x64
   2d170:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d174:	ldr	r2, [fp, #-8]
   2d178:	str	r2, [r3, #40]	; 0x28
   2d17c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d180:	ldr	r3, [fp, #-8]
   2d184:	sub	r1, r3, #1
   2d188:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d18c:	ldr	r3, [r3, #88]	; 0x58
   2d190:	mov	r2, r3
   2d194:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2d198:	str	r0, [fp, #-52]	; 0xffffffcc
   2d19c:	ldr	r2, [fp, #-8]
   2d1a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d1a4:	cmp	r2, r3
   2d1a8:	bne	2d234 <__assert_fail@plt+0x1bcf0>
   2d1ac:	sub	r3, fp, #72	; 0x48
   2d1b0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2d1b4:	mov	r0, r3
   2d1b8:	bl	1a7a4 <__assert_fail@plt+0x9260>
   2d1bc:	mov	r3, r0
   2d1c0:	str	r3, [fp, #-60]	; 0xffffffc4
   2d1c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d1c8:	cmp	r3, #0
   2d1cc:	movne	r3, #1
   2d1d0:	moveq	r3, #0
   2d1d4:	uxtb	r3, r3
   2d1d8:	cmp	r3, #0
   2d1dc:	beq	2d1e8 <__assert_fail@plt+0x1bca4>
   2d1e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d1e4:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d1e8:	sub	r1, fp, #72	; 0x48
   2d1ec:	ldr	r3, [fp, #12]
   2d1f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d1f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d1f8:	bl	2da54 <__assert_fail@plt+0x1c510>
   2d1fc:	mov	r3, r0
   2d200:	str	r3, [fp, #-60]	; 0xffffffc4
   2d204:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d208:	cmp	r3, #0
   2d20c:	movne	r3, #1
   2d210:	moveq	r3, #0
   2d214:	uxtb	r3, r3
   2d218:	cmp	r3, #0
   2d21c:	beq	2d2cc <__assert_fail@plt+0x1bd88>
   2d220:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d224:	mov	r0, r3
   2d228:	bl	14dec <__assert_fail@plt+0x38a8>
   2d22c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d230:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d234:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d238:	ldr	r2, [r3, #100]	; 0x64
   2d23c:	ldr	r3, [fp, #-8]
   2d240:	lsl	r3, r3, #2
   2d244:	add	r3, r2, r3
   2d248:	ldr	r3, [r3]
   2d24c:	str	r3, [fp, #-16]
   2d250:	ldr	r3, [fp, #-16]
   2d254:	cmp	r3, #0
   2d258:	beq	2d2b8 <__assert_fail@plt+0x1bd74>
   2d25c:	ldr	r3, [fp, #-16]
   2d260:	ldrb	r3, [r3, #52]	; 0x34
   2d264:	and	r3, r3, #64	; 0x40
   2d268:	uxtb	r3, r3
   2d26c:	cmp	r3, #0
   2d270:	beq	2d2b8 <__assert_fail@plt+0x1bd74>
   2d274:	ldr	r3, [fp, #-16]
   2d278:	add	r2, r3, #4
   2d27c:	sub	r3, fp, #72	; 0x48
   2d280:	mov	r1, r2
   2d284:	mov	r0, r3
   2d288:	bl	1a958 <__assert_fail@plt+0x9414>
   2d28c:	mov	r3, r0
   2d290:	str	r3, [fp, #-60]	; 0xffffffc4
   2d294:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d298:	cmp	r3, #0
   2d29c:	movne	r3, #1
   2d2a0:	moveq	r3, #0
   2d2a4:	uxtb	r3, r3
   2d2a8:	cmp	r3, #0
   2d2ac:	beq	2d2cc <__assert_fail@plt+0x1bd88>
   2d2b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d2b4:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d2b8:	sub	r3, fp, #72	; 0x48
   2d2bc:	mov	r2, #12
   2d2c0:	mov	r1, #0
   2d2c4:	mov	r0, r3
   2d2c8:	bl	11448 <memset@plt>
   2d2cc:	ldr	r2, [fp, #-8]
   2d2d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d2d4:	cmp	r2, r3
   2d2d8:	beq	2d300 <__assert_fail@plt+0x1bdbc>
   2d2dc:	ldr	r3, [fp, #-16]
   2d2e0:	cmp	r3, #0
   2d2e4:	beq	2d3e0 <__assert_fail@plt+0x1be9c>
   2d2e8:	ldr	r3, [fp, #-16]
   2d2ec:	ldrb	r3, [r3, #52]	; 0x34
   2d2f0:	and	r3, r3, #64	; 0x40
   2d2f4:	uxtb	r3, r3
   2d2f8:	cmp	r3, #0
   2d2fc:	beq	2d3e0 <__assert_fail@plt+0x1be9c>
   2d300:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d304:	cmp	r3, #0
   2d308:	beq	2d360 <__assert_fail@plt+0x1be1c>
   2d30c:	sub	r1, fp, #72	; 0x48
   2d310:	ldr	r3, [fp, #12]
   2d314:	str	r3, [sp]
   2d318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d31c:	ldr	r2, [fp, #-8]
   2d320:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d324:	bl	2de1c <__assert_fail@plt+0x1c8d8>
   2d328:	mov	r3, r0
   2d32c:	str	r3, [fp, #-60]	; 0xffffffc4
   2d330:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d334:	cmp	r3, #0
   2d338:	movne	r3, #1
   2d33c:	moveq	r3, #0
   2d340:	uxtb	r3, r3
   2d344:	cmp	r3, #0
   2d348:	beq	2d360 <__assert_fail@plt+0x1be1c>
   2d34c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d350:	mov	r0, r3
   2d354:	bl	14dec <__assert_fail@plt+0x38a8>
   2d358:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d35c:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d360:	sub	r2, fp, #72	; 0x48
   2d364:	sub	r0, fp, #60	; 0x3c
   2d368:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d36c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d370:	bl	1c25c <__assert_fail@plt+0xad18>
   2d374:	str	r0, [fp, #-16]
   2d378:	ldr	r3, [fp, #-16]
   2d37c:	cmp	r3, #0
   2d380:	moveq	r3, #1
   2d384:	movne	r3, #0
   2d388:	uxtb	r3, r3
   2d38c:	cmp	r3, #0
   2d390:	beq	2d3c4 <__assert_fail@plt+0x1be80>
   2d394:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d398:	cmp	r3, #0
   2d39c:	movne	r3, #1
   2d3a0:	moveq	r3, #0
   2d3a4:	uxtb	r3, r3
   2d3a8:	cmp	r3, #0
   2d3ac:	beq	2d3c4 <__assert_fail@plt+0x1be80>
   2d3b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d3b4:	mov	r0, r3
   2d3b8:	bl	14dec <__assert_fail@plt+0x38a8>
   2d3bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d3c0:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d3c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d3c8:	ldr	r2, [r3, #100]	; 0x64
   2d3cc:	ldr	r3, [fp, #-8]
   2d3d0:	lsl	r3, r3, #2
   2d3d4:	add	r3, r2, r3
   2d3d8:	ldr	r2, [fp, #-16]
   2d3dc:	str	r2, [r3]
   2d3e0:	mov	r3, #0
   2d3e4:	str	r3, [fp, #-12]
   2d3e8:	b	2d654 <__assert_fail@plt+0x1c110>
   2d3ec:	mov	r3, #0
   2d3f0:	str	r3, [fp, #-68]	; 0xffffffbc
   2d3f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d3f8:	ldr	r2, [r3, #100]	; 0x64
   2d3fc:	ldr	r3, [fp, #-8]
   2d400:	add	r3, r3, #1
   2d404:	lsl	r3, r3, #2
   2d408:	add	r3, r2, r3
   2d40c:	ldr	r3, [r3]
   2d410:	cmp	r3, #0
   2d414:	beq	2d480 <__assert_fail@plt+0x1bf3c>
   2d418:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d41c:	ldr	r2, [r3, #100]	; 0x64
   2d420:	ldr	r3, [fp, #-8]
   2d424:	add	r3, r3, #1
   2d428:	lsl	r3, r3, #2
   2d42c:	add	r3, r2, r3
   2d430:	ldr	r3, [r3]
   2d434:	add	r2, r3, #4
   2d438:	sub	r3, fp, #72	; 0x48
   2d43c:	mov	r1, r2
   2d440:	mov	r0, r3
   2d444:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2d448:	mov	r3, r0
   2d44c:	str	r3, [fp, #-60]	; 0xffffffc4
   2d450:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d454:	cmp	r3, #0
   2d458:	movne	r3, #1
   2d45c:	moveq	r3, #0
   2d460:	uxtb	r3, r3
   2d464:	cmp	r3, #0
   2d468:	beq	2d480 <__assert_fail@plt+0x1bf3c>
   2d46c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d470:	mov	r0, r3
   2d474:	bl	14dec <__assert_fail@plt+0x38a8>
   2d478:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d47c:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d480:	ldr	r3, [fp, #-16]
   2d484:	cmp	r3, #0
   2d488:	beq	2d4dc <__assert_fail@plt+0x1bf98>
   2d48c:	ldr	r3, [fp, #-16]
   2d490:	add	r2, r3, #16
   2d494:	sub	r3, fp, #72	; 0x48
   2d498:	ldr	r1, [fp, #-8]
   2d49c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d4a0:	bl	2d72c <__assert_fail@plt+0x1c1e8>
   2d4a4:	mov	r3, r0
   2d4a8:	str	r3, [fp, #-60]	; 0xffffffc4
   2d4ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d4b0:	cmp	r3, #0
   2d4b4:	movne	r3, #1
   2d4b8:	moveq	r3, #0
   2d4bc:	uxtb	r3, r3
   2d4c0:	cmp	r3, #0
   2d4c4:	beq	2d4dc <__assert_fail@plt+0x1bf98>
   2d4c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d4cc:	mov	r0, r3
   2d4d0:	bl	14dec <__assert_fail@plt+0x38a8>
   2d4d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d4d8:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d4dc:	ldr	r3, [fp, #-8]
   2d4e0:	add	r3, r3, #1
   2d4e4:	str	r3, [fp, #-8]
   2d4e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d4ec:	cmp	r3, #0
   2d4f0:	beq	2d594 <__assert_fail@plt+0x1c050>
   2d4f4:	sub	r1, fp, #72	; 0x48
   2d4f8:	ldr	r3, [fp, #12]
   2d4fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d500:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d504:	bl	2da54 <__assert_fail@plt+0x1c510>
   2d508:	mov	r3, r0
   2d50c:	str	r3, [fp, #-60]	; 0xffffffc4
   2d510:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d514:	cmp	r3, #0
   2d518:	movne	r3, #1
   2d51c:	moveq	r3, #0
   2d520:	uxtb	r3, r3
   2d524:	cmp	r3, #0
   2d528:	beq	2d540 <__assert_fail@plt+0x1bffc>
   2d52c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d530:	mov	r0, r3
   2d534:	bl	14dec <__assert_fail@plt+0x38a8>
   2d538:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d53c:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d540:	sub	r1, fp, #72	; 0x48
   2d544:	ldr	r3, [fp, #12]
   2d548:	str	r3, [sp]
   2d54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d550:	ldr	r2, [fp, #-8]
   2d554:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d558:	bl	2de1c <__assert_fail@plt+0x1c8d8>
   2d55c:	mov	r3, r0
   2d560:	str	r3, [fp, #-60]	; 0xffffffc4
   2d564:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d568:	cmp	r3, #0
   2d56c:	movne	r3, #1
   2d570:	moveq	r3, #0
   2d574:	uxtb	r3, r3
   2d578:	cmp	r3, #0
   2d57c:	beq	2d594 <__assert_fail@plt+0x1c050>
   2d580:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d584:	mov	r0, r3
   2d588:	bl	14dec <__assert_fail@plt+0x38a8>
   2d58c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d590:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d594:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2d598:	ldr	r3, [fp, #-8]
   2d59c:	sub	r1, r3, #1
   2d5a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d5a4:	ldr	r3, [r3, #88]	; 0x58
   2d5a8:	mov	r2, r3
   2d5ac:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2d5b0:	str	r0, [fp, #-52]	; 0xffffffcc
   2d5b4:	sub	r2, fp, #72	; 0x48
   2d5b8:	sub	r0, fp, #60	; 0x3c
   2d5bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d5c4:	bl	1c25c <__assert_fail@plt+0xad18>
   2d5c8:	str	r0, [fp, #-16]
   2d5cc:	ldr	r3, [fp, #-16]
   2d5d0:	cmp	r3, #0
   2d5d4:	moveq	r3, #1
   2d5d8:	movne	r3, #0
   2d5dc:	uxtb	r3, r3
   2d5e0:	cmp	r3, #0
   2d5e4:	beq	2d618 <__assert_fail@plt+0x1c0d4>
   2d5e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d5ec:	cmp	r3, #0
   2d5f0:	movne	r3, #1
   2d5f4:	moveq	r3, #0
   2d5f8:	uxtb	r3, r3
   2d5fc:	cmp	r3, #0
   2d600:	beq	2d618 <__assert_fail@plt+0x1c0d4>
   2d604:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d608:	mov	r0, r3
   2d60c:	bl	14dec <__assert_fail@plt+0x38a8>
   2d610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2d614:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d618:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d61c:	ldr	r2, [r3, #100]	; 0x64
   2d620:	ldr	r3, [fp, #-8]
   2d624:	lsl	r3, r3, #2
   2d628:	add	r3, r2, r3
   2d62c:	ldr	r2, [fp, #-16]
   2d630:	str	r2, [r3]
   2d634:	ldr	r3, [fp, #-16]
   2d638:	cmp	r3, #0
   2d63c:	bne	2d64c <__assert_fail@plt+0x1c108>
   2d640:	ldr	r3, [fp, #-12]
   2d644:	add	r3, r3, #1
   2d648:	b	2d650 <__assert_fail@plt+0x1c10c>
   2d64c:	mov	r3, #0
   2d650:	str	r3, [fp, #-12]
   2d654:	ldr	r2, [fp, #-8]
   2d658:	ldr	r3, [fp, #8]
   2d65c:	cmp	r2, r3
   2d660:	bge	2d678 <__assert_fail@plt+0x1c134>
   2d664:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d668:	ldr	r2, [r3, #120]	; 0x78
   2d66c:	ldr	r3, [fp, #-12]
   2d670:	cmp	r2, r3
   2d674:	bge	2d3ec <__assert_fail@plt+0x1bea8>
   2d678:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d67c:	mov	r0, r3
   2d680:	bl	14dec <__assert_fail@plt+0x38a8>
   2d684:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d688:	ldr	r2, [r3, #100]	; 0x64
   2d68c:	ldr	r3, [fp, #8]
   2d690:	lsl	r3, r3, #2
   2d694:	add	r3, r2, r3
   2d698:	ldr	r3, [r3]
   2d69c:	cmp	r3, #0
   2d6a0:	beq	2d6c4 <__assert_fail@plt+0x1c180>
   2d6a4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d6a8:	ldr	r2, [r3, #100]	; 0x64
   2d6ac:	ldr	r3, [fp, #8]
   2d6b0:	lsl	r3, r3, #2
   2d6b4:	add	r3, r2, r3
   2d6b8:	ldr	r3, [r3]
   2d6bc:	add	r3, r3, #4
   2d6c0:	b	2d6c8 <__assert_fail@plt+0x1c184>
   2d6c4:	mov	r3, #0
   2d6c8:	str	r3, [fp, #-56]	; 0xffffffc8
   2d6cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d6d0:	ldr	r2, [fp, #-8]
   2d6d4:	str	r2, [r3]
   2d6d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d6dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2d6e0:	str	r2, [r3, #100]	; 0x64
   2d6e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2d6e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2d6ec:	str	r2, [r3, #40]	; 0x28
   2d6f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d6f4:	cmp	r3, #0
   2d6f8:	beq	2d71c <__assert_fail@plt+0x1c1d8>
   2d6fc:	ldr	r1, [fp, #4]
   2d700:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2d704:	bl	1bac4 <__assert_fail@plt+0xa580>
   2d708:	mov	r3, r0
   2d70c:	cmp	r3, #0
   2d710:	beq	2d71c <__assert_fail@plt+0x1c1d8>
   2d714:	mov	r3, #0
   2d718:	b	2d720 <__assert_fail@plt+0x1c1dc>
   2d71c:	mov	r3, #1
   2d720:	mov	r0, r3
   2d724:	sub	sp, fp, #4
   2d728:	pop	{fp, pc}
   2d72c:	push	{r4, fp, lr}
   2d730:	add	fp, sp, #8
   2d734:	sub	sp, sp, #68	; 0x44
   2d738:	str	r0, [fp, #-64]	; 0xffffffc0
   2d73c:	str	r1, [fp, #-68]	; 0xffffffbc
   2d740:	str	r2, [fp, #-72]	; 0xffffffb8
   2d744:	str	r3, [fp, #-76]	; 0xffffffb4
   2d748:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d74c:	ldr	r3, [r3, #84]	; 0x54
   2d750:	str	r3, [fp, #-24]	; 0xffffffe8
   2d754:	mov	r3, #0
   2d758:	str	r3, [fp, #-48]	; 0xffffffd0
   2d75c:	sub	r3, fp, #60	; 0x3c
   2d760:	mov	r2, #12
   2d764:	mov	r1, #0
   2d768:	mov	r0, r3
   2d76c:	bl	11448 <memset@plt>
   2d770:	mov	r3, #0
   2d774:	str	r3, [fp, #-16]
   2d778:	b	2da24 <__assert_fail@plt+0x1c4e0>
   2d77c:	mov	r3, #0
   2d780:	str	r3, [fp, #-20]	; 0xffffffec
   2d784:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2d788:	ldr	r2, [r3, #8]
   2d78c:	ldr	r3, [fp, #-16]
   2d790:	lsl	r3, r3, #2
   2d794:	add	r3, r2, r3
   2d798:	ldr	r3, [r3]
   2d79c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7a4:	ldr	r2, [r3]
   2d7a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d7ac:	lsl	r3, r3, #3
   2d7b0:	add	r3, r2, r3
   2d7b4:	ldrb	r3, [r3, #4]
   2d7b8:	and	r3, r3, #8
   2d7bc:	cmp	r3, #0
   2d7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7c4:	ldr	r2, [r3]
   2d7c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d7cc:	lsl	r3, r3, #3
   2d7d0:	add	r3, r2, r3
   2d7d4:	ldrb	r3, [r3, #6]
   2d7d8:	and	r3, r3, #16
   2d7dc:	uxtb	r3, r3
   2d7e0:	cmp	r3, #0
   2d7e4:	beq	2d988 <__assert_fail@plt+0x1c444>
   2d7e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2d7ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2d7f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d7f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d7f8:	bl	2f718 <__assert_fail@plt+0x1e1d4>
   2d7fc:	str	r0, [fp, #-20]	; 0xffffffec
   2d800:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d804:	cmp	r3, #1
   2d808:	ble	2d988 <__assert_fail@plt+0x1c444>
   2d80c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d810:	ldr	r2, [r3, #12]
   2d814:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d818:	lsl	r3, r3, #2
   2d81c:	add	r3, r2, r3
   2d820:	ldr	r3, [r3]
   2d824:	str	r3, [fp, #-36]	; 0xffffffdc
   2d828:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d82c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d830:	add	r3, r2, r3
   2d834:	str	r3, [fp, #-40]	; 0xffffffd8
   2d838:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d83c:	ldr	r2, [r3, #100]	; 0x64
   2d840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d844:	lsl	r3, r3, #2
   2d848:	add	r3, r2, r3
   2d84c:	ldr	r3, [r3]
   2d850:	str	r3, [fp, #-44]	; 0xffffffd4
   2d854:	mov	r3, #0
   2d858:	str	r3, [fp, #-56]	; 0xffffffc8
   2d85c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d860:	cmp	r3, #0
   2d864:	beq	2d8b8 <__assert_fail@plt+0x1c374>
   2d868:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d86c:	add	r2, r3, #4
   2d870:	sub	r3, fp, #60	; 0x3c
   2d874:	mov	r1, r2
   2d878:	mov	r0, r3
   2d87c:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2d880:	mov	r3, r0
   2d884:	str	r3, [fp, #-48]	; 0xffffffd0
   2d888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d88c:	cmp	r3, #0
   2d890:	movne	r3, #1
   2d894:	moveq	r3, #0
   2d898:	uxtb	r3, r3
   2d89c:	cmp	r3, #0
   2d8a0:	beq	2d8b8 <__assert_fail@plt+0x1c374>
   2d8a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d8a8:	mov	r0, r3
   2d8ac:	bl	14dec <__assert_fail@plt+0x38a8>
   2d8b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d8b4:	b	2da48 <__assert_fail@plt+0x1c504>
   2d8b8:	sub	r3, fp, #60	; 0x3c
   2d8bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d8c0:	mov	r0, r3
   2d8c4:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2d8c8:	mov	r3, r0
   2d8cc:	strb	r3, [fp, #-29]	; 0xffffffe3
   2d8d0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2d8d4:	eor	r3, r3, #1
   2d8d8:	uxtb	r3, r3
   2d8dc:	cmp	r3, #0
   2d8e0:	beq	2d8f8 <__assert_fail@plt+0x1c3b4>
   2d8e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d8e8:	mov	r0, r3
   2d8ec:	bl	14dec <__assert_fail@plt+0x38a8>
   2d8f0:	mov	r3, #12
   2d8f4:	b	2da48 <__assert_fail@plt+0x1c504>
   2d8f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d8fc:	ldr	r2, [r3, #100]	; 0x64
   2d900:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d904:	lsl	r3, r3, #2
   2d908:	add	r4, r2, r3
   2d90c:	sub	r2, fp, #60	; 0x3c
   2d910:	sub	r3, fp, #48	; 0x30
   2d914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d918:	mov	r0, r3
   2d91c:	bl	1c0f0 <__assert_fail@plt+0xabac>
   2d920:	mov	r3, r0
   2d924:	str	r3, [r4]
   2d928:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2d92c:	ldr	r2, [r3, #100]	; 0x64
   2d930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d934:	lsl	r3, r3, #2
   2d938:	add	r3, r2, r3
   2d93c:	ldr	r3, [r3]
   2d940:	cmp	r3, #0
   2d944:	moveq	r3, #1
   2d948:	movne	r3, #0
   2d94c:	uxtb	r3, r3
   2d950:	cmp	r3, #0
   2d954:	beq	2d988 <__assert_fail@plt+0x1c444>
   2d958:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d95c:	cmp	r3, #0
   2d960:	movne	r3, #1
   2d964:	moveq	r3, #0
   2d968:	uxtb	r3, r3
   2d96c:	cmp	r3, #0
   2d970:	beq	2d988 <__assert_fail@plt+0x1c444>
   2d974:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d978:	mov	r0, r3
   2d97c:	bl	14dec <__assert_fail@plt+0x38a8>
   2d980:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2d984:	b	2da48 <__assert_fail@plt+0x1c504>
   2d988:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d98c:	cmp	r3, #0
   2d990:	bne	2d9c4 <__assert_fail@plt+0x1c480>
   2d994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d998:	ldr	r2, [r3]
   2d99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d9a0:	lsl	r3, r3, #3
   2d9a4:	add	r3, r2, r3
   2d9a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2d9ac:	mov	r1, r3
   2d9b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2d9b4:	bl	2fc78 <__assert_fail@plt+0x1e734>
   2d9b8:	mov	r3, r0
   2d9bc:	cmp	r3, #0
   2d9c0:	beq	2da18 <__assert_fail@plt+0x1c4d4>
   2d9c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d9c8:	ldr	r2, [r3, #12]
   2d9cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d9d0:	lsl	r3, r3, #2
   2d9d4:	add	r3, r2, r3
   2d9d8:	ldr	r3, [r3]
   2d9dc:	mov	r1, r3
   2d9e0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2d9e4:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2d9e8:	mov	r3, r0
   2d9ec:	strb	r3, [fp, #-29]	; 0xffffffe3
   2d9f0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2d9f4:	eor	r3, r3, #1
   2d9f8:	uxtb	r3, r3
   2d9fc:	cmp	r3, #0
   2da00:	beq	2da18 <__assert_fail@plt+0x1c4d4>
   2da04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2da08:	mov	r0, r3
   2da0c:	bl	14dec <__assert_fail@plt+0x38a8>
   2da10:	mov	r3, #12
   2da14:	b	2da48 <__assert_fail@plt+0x1c504>
   2da18:	ldr	r3, [fp, #-16]
   2da1c:	add	r3, r3, #1
   2da20:	str	r3, [fp, #-16]
   2da24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2da28:	ldr	r2, [r3, #4]
   2da2c:	ldr	r3, [fp, #-16]
   2da30:	cmp	r2, r3
   2da34:	bgt	2d77c <__assert_fail@plt+0x1c238>
   2da38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2da3c:	mov	r0, r3
   2da40:	bl	14dec <__assert_fail@plt+0x38a8>
   2da44:	mov	r3, #0
   2da48:	mov	r0, r3
   2da4c:	sub	sp, fp, #8
   2da50:	pop	{r4, fp, pc}
   2da54:	push	{fp, lr}
   2da58:	add	fp, sp, #4
   2da5c:	sub	sp, sp, #56	; 0x38
   2da60:	str	r0, [fp, #-40]	; 0xffffffd8
   2da64:	str	r1, [fp, #-44]	; 0xffffffd4
   2da68:	str	r2, [fp, #-48]	; 0xffffffd0
   2da6c:	str	r3, [fp, #-52]	; 0xffffffcc
   2da70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2da74:	ldr	r3, [r3, #4]
   2da78:	cmp	r3, #0
   2da7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2da80:	ldr	r2, [r3, #4]
   2da84:	sub	r3, fp, #36	; 0x24
   2da88:	mov	r1, r2
   2da8c:	mov	r0, r3
   2da90:	bl	1a720 <__assert_fail@plt+0x91dc>
   2da94:	str	r0, [fp, #-12]
   2da98:	ldr	r3, [fp, #-12]
   2da9c:	cmp	r3, #0
   2daa0:	movne	r3, #1
   2daa4:	moveq	r3, #0
   2daa8:	uxtb	r3, r3
   2daac:	cmp	r3, #0
   2dab0:	beq	2dabc <__assert_fail@plt+0x1c578>
   2dab4:	ldr	r3, [fp, #-12]
   2dab8:	b	2dc08 <__assert_fail@plt+0x1c6c4>
   2dabc:	mov	r3, #0
   2dac0:	str	r3, [fp, #-8]
   2dac4:	b	2dbcc <__assert_fail@plt+0x1c688>
   2dac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dacc:	ldr	r2, [r3, #8]
   2dad0:	ldr	r3, [fp, #-8]
   2dad4:	lsl	r3, r3, #2
   2dad8:	add	r3, r2, r3
   2dadc:	ldr	r3, [r3]
   2dae0:	str	r3, [fp, #-16]
   2dae4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dae8:	ldr	r1, [r3, #24]
   2daec:	ldr	r2, [fp, #-16]
   2daf0:	mov	r3, r2
   2daf4:	lsl	r3, r3, #1
   2daf8:	add	r3, r3, r2
   2dafc:	lsl	r3, r3, #2
   2db00:	add	r3, r1, r3
   2db04:	str	r3, [fp, #-20]	; 0xffffffec
   2db08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2db10:	ldr	r1, [fp, #-20]	; 0xffffffec
   2db14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2db18:	bl	2cec4 <__assert_fail@plt+0x1b980>
   2db1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2db20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2db24:	cmn	r3, #1
   2db28:	bne	2db70 <__assert_fail@plt+0x1c62c>
   2db2c:	sub	r3, fp, #36	; 0x24
   2db30:	ldr	r1, [fp, #-20]	; 0xffffffec
   2db34:	mov	r0, r3
   2db38:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2db3c:	str	r0, [fp, #-12]
   2db40:	ldr	r3, [fp, #-12]
   2db44:	cmp	r3, #0
   2db48:	movne	r3, #1
   2db4c:	moveq	r3, #0
   2db50:	uxtb	r3, r3
   2db54:	cmp	r3, #0
   2db58:	beq	2dbc0 <__assert_fail@plt+0x1c67c>
   2db5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2db60:	mov	r0, r3
   2db64:	bl	14dec <__assert_fail@plt+0x38a8>
   2db68:	ldr	r3, [fp, #-12]
   2db6c:	b	2dc08 <__assert_fail@plt+0x1c6c4>
   2db70:	sub	r1, fp, #36	; 0x24
   2db74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2db78:	str	r3, [sp]
   2db7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2db80:	ldr	r2, [fp, #-16]
   2db84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2db88:	bl	2dc14 <__assert_fail@plt+0x1c6d0>
   2db8c:	str	r0, [fp, #-12]
   2db90:	ldr	r3, [fp, #-12]
   2db94:	cmp	r3, #0
   2db98:	movne	r3, #1
   2db9c:	moveq	r3, #0
   2dba0:	uxtb	r3, r3
   2dba4:	cmp	r3, #0
   2dba8:	beq	2dbc0 <__assert_fail@plt+0x1c67c>
   2dbac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dbb0:	mov	r0, r3
   2dbb4:	bl	14dec <__assert_fail@plt+0x38a8>
   2dbb8:	ldr	r3, [fp, #-12]
   2dbbc:	b	2dc08 <__assert_fail@plt+0x1c6c4>
   2dbc0:	ldr	r3, [fp, #-8]
   2dbc4:	add	r3, r3, #1
   2dbc8:	str	r3, [fp, #-8]
   2dbcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dbd0:	ldr	r2, [r3, #4]
   2dbd4:	ldr	r3, [fp, #-8]
   2dbd8:	cmp	r2, r3
   2dbdc:	bgt	2dac8 <__assert_fail@plt+0x1c584>
   2dbe0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dbe4:	ldr	r3, [r3, #8]
   2dbe8:	mov	r0, r3
   2dbec:	bl	14dec <__assert_fail@plt+0x38a8>
   2dbf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dbf4:	mov	ip, r3
   2dbf8:	sub	r3, fp, #36	; 0x24
   2dbfc:	ldm	r3, {r0, r1, r2}
   2dc00:	stm	ip, {r0, r1, r2}
   2dc04:	mov	r3, #0
   2dc08:	mov	r0, r3
   2dc0c:	sub	sp, fp, #4
   2dc10:	pop	{fp, pc}
   2dc14:	push	{fp, lr}
   2dc18:	add	fp, sp, #4
   2dc1c:	sub	sp, sp, #40	; 0x28
   2dc20:	str	r0, [fp, #-24]	; 0xffffffe8
   2dc24:	str	r1, [fp, #-28]	; 0xffffffe4
   2dc28:	str	r2, [fp, #-32]	; 0xffffffe0
   2dc2c:	str	r3, [fp, #-36]	; 0xffffffdc
   2dc30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc34:	str	r3, [fp, #-8]
   2dc38:	b	2dde4 <__assert_fail@plt+0x1c8a0>
   2dc3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dc40:	ldr	r2, [r3]
   2dc44:	ldr	r3, [fp, #-8]
   2dc48:	lsl	r3, r3, #3
   2dc4c:	add	r3, r2, r3
   2dc50:	ldrb	r3, [r3, #4]
   2dc54:	mov	r2, r3
   2dc58:	ldr	r3, [fp, #4]
   2dc5c:	cmp	r2, r3
   2dc60:	bne	2dcc4 <__assert_fail@plt+0x1c780>
   2dc64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dc68:	ldr	r2, [r3]
   2dc6c:	ldr	r3, [fp, #-8]
   2dc70:	lsl	r3, r3, #3
   2dc74:	add	r3, r2, r3
   2dc78:	ldr	r2, [r3]
   2dc7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dc80:	cmp	r2, r3
   2dc84:	bne	2dcc4 <__assert_fail@plt+0x1c780>
   2dc88:	ldr	r3, [fp, #4]
   2dc8c:	cmp	r3, #9
   2dc90:	bne	2de00 <__assert_fail@plt+0x1c8bc>
   2dc94:	ldr	r1, [fp, #-8]
   2dc98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2dc9c:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2dca0:	mov	r3, r0
   2dca4:	strb	r3, [fp, #-9]
   2dca8:	ldrb	r3, [fp, #-9]
   2dcac:	eor	r3, r3, #1
   2dcb0:	uxtb	r3, r3
   2dcb4:	cmp	r3, #0
   2dcb8:	beq	2de00 <__assert_fail@plt+0x1c8bc>
   2dcbc:	mov	r3, #12
   2dcc0:	b	2de10 <__assert_fail@plt+0x1c8cc>
   2dcc4:	ldr	r1, [fp, #-8]
   2dcc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2dccc:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2dcd0:	mov	r3, r0
   2dcd4:	strb	r3, [fp, #-9]
   2dcd8:	ldrb	r3, [fp, #-9]
   2dcdc:	eor	r3, r3, #1
   2dce0:	uxtb	r3, r3
   2dce4:	cmp	r3, #0
   2dce8:	beq	2dcf4 <__assert_fail@plt+0x1c7b0>
   2dcec:	mov	r3, #12
   2dcf0:	b	2de10 <__assert_fail@plt+0x1c8cc>
   2dcf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dcf8:	ldr	r1, [r3, #20]
   2dcfc:	ldr	r2, [fp, #-8]
   2dd00:	mov	r3, r2
   2dd04:	lsl	r3, r3, #1
   2dd08:	add	r3, r3, r2
   2dd0c:	lsl	r3, r3, #2
   2dd10:	add	r3, r1, r3
   2dd14:	ldr	r3, [r3, #4]
   2dd18:	cmp	r3, #0
   2dd1c:	beq	2de08 <__assert_fail@plt+0x1c8c4>
   2dd20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dd24:	ldr	r1, [r3, #20]
   2dd28:	ldr	r2, [fp, #-8]
   2dd2c:	mov	r3, r2
   2dd30:	lsl	r3, r3, #1
   2dd34:	add	r3, r3, r2
   2dd38:	lsl	r3, r3, #2
   2dd3c:	add	r3, r1, r3
   2dd40:	ldr	r3, [r3, #4]
   2dd44:	cmp	r3, #2
   2dd48:	bne	2ddb8 <__assert_fail@plt+0x1c874>
   2dd4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dd50:	ldr	r1, [r3, #20]
   2dd54:	ldr	r2, [fp, #-8]
   2dd58:	mov	r3, r2
   2dd5c:	lsl	r3, r3, #1
   2dd60:	add	r3, r3, r2
   2dd64:	lsl	r3, r3, #2
   2dd68:	add	r3, r1, r3
   2dd6c:	ldr	r3, [r3, #8]
   2dd70:	add	r3, r3, #4
   2dd74:	ldr	r2, [r3]
   2dd78:	ldr	r3, [fp, #4]
   2dd7c:	str	r3, [sp]
   2dd80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dd84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2dd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd8c:	bl	2dc14 <__assert_fail@plt+0x1c6d0>
   2dd90:	str	r0, [fp, #-16]
   2dd94:	ldr	r3, [fp, #-16]
   2dd98:	cmp	r3, #0
   2dd9c:	movne	r3, #1
   2dda0:	moveq	r3, #0
   2dda4:	uxtb	r3, r3
   2dda8:	cmp	r3, #0
   2ddac:	beq	2ddb8 <__assert_fail@plt+0x1c874>
   2ddb0:	ldr	r3, [fp, #-16]
   2ddb4:	b	2de10 <__assert_fail@plt+0x1c8cc>
   2ddb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ddbc:	ldr	r1, [r3, #20]
   2ddc0:	ldr	r2, [fp, #-8]
   2ddc4:	mov	r3, r2
   2ddc8:	lsl	r3, r3, #1
   2ddcc:	add	r3, r3, r2
   2ddd0:	lsl	r3, r3, #2
   2ddd4:	add	r3, r1, r3
   2ddd8:	ldr	r3, [r3, #8]
   2dddc:	ldr	r3, [r3]
   2dde0:	str	r3, [fp, #-8]
   2dde4:	ldr	r1, [fp, #-8]
   2dde8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ddec:	bl	1bac4 <__assert_fail@plt+0xa580>
   2ddf0:	mov	r3, r0
   2ddf4:	cmp	r3, #0
   2ddf8:	beq	2dc3c <__assert_fail@plt+0x1c6f8>
   2ddfc:	b	2de0c <__assert_fail@plt+0x1c8c8>
   2de00:	nop			; (mov r0, r0)
   2de04:	b	2de0c <__assert_fail@plt+0x1c8c8>
   2de08:	nop			; (mov r0, r0)
   2de0c:	mov	r3, #0
   2de10:	mov	r0, r3
   2de14:	sub	sp, fp, #4
   2de18:	pop	{fp, pc}
   2de1c:	push	{r4, fp, lr}
   2de20:	add	fp, sp, #8
   2de24:	sub	sp, sp, #84	; 0x54
   2de28:	str	r0, [fp, #-80]	; 0xffffffb0
   2de2c:	str	r1, [fp, #-84]	; 0xffffffac
   2de30:	str	r2, [fp, #-88]	; 0xffffffa8
   2de34:	str	r3, [fp, #-92]	; 0xffffffa4
   2de38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2de3c:	ldr	r3, [r3, #84]	; 0x54
   2de40:	str	r3, [fp, #-20]	; 0xffffffec
   2de44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2de48:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2de4c:	bl	30654 <__assert_fail@plt+0x1f110>
   2de50:	str	r0, [fp, #-24]	; 0xffffffe8
   2de54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2de58:	cmn	r3, #1
   2de5c:	bne	2de68 <__assert_fail@plt+0x1c924>
   2de60:	mov	r3, #0
   2de64:	b	2e234 <__assert_fail@plt+0x1ccf0>
   2de68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2de6c:	ldr	r1, [r3, #116]	; 0x74
   2de70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2de74:	mov	r3, r2
   2de78:	lsl	r3, r3, #1
   2de7c:	add	r3, r3, r2
   2de80:	lsl	r3, r3, #3
   2de84:	add	r3, r1, r3
   2de88:	str	r3, [fp, #-16]
   2de8c:	ldr	r3, [fp, #-16]
   2de90:	ldr	r3, [r3]
   2de94:	mov	r1, r3
   2de98:	ldr	r0, [fp, #-84]	; 0xffffffac
   2de9c:	bl	1bac4 <__assert_fail@plt+0xa580>
   2dea0:	mov	r3, r0
   2dea4:	cmp	r3, #0
   2dea8:	beq	2e204 <__assert_fail@plt+0x1ccc0>
   2deac:	ldr	r3, [fp, #-16]
   2deb0:	ldr	r2, [r3, #12]
   2deb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2deb8:	add	r2, r2, r3
   2debc:	ldr	r3, [fp, #-16]
   2dec0:	ldr	r3, [r3, #8]
   2dec4:	sub	r3, r2, r3
   2dec8:	str	r3, [fp, #-28]	; 0xffffffe4
   2decc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ded0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2ded4:	cmp	r2, r3
   2ded8:	bne	2e018 <__assert_fail@plt+0x1cad4>
   2dedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dee0:	ldr	r2, [r3, #20]
   2dee4:	ldr	r3, [fp, #-16]
   2dee8:	ldr	r3, [r3]
   2deec:	mov	r1, r3
   2def0:	mov	r3, r1
   2def4:	lsl	r3, r3, #1
   2def8:	add	r3, r3, r1
   2defc:	lsl	r3, r3, #2
   2df00:	add	r3, r2, r3
   2df04:	ldr	r3, [r3, #8]
   2df08:	ldr	r3, [r3]
   2df0c:	str	r3, [fp, #-32]	; 0xffffffe0
   2df10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df14:	ldr	r0, [fp, #-84]	; 0xffffffac
   2df18:	bl	1bac4 <__assert_fail@plt+0xa580>
   2df1c:	mov	r3, r0
   2df20:	cmp	r3, #0
   2df24:	bne	2e20c <__assert_fail@plt+0x1ccc8>
   2df28:	sub	r3, fp, #60	; 0x3c
   2df2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df30:	mov	r0, r3
   2df34:	bl	1a7a4 <__assert_fail@plt+0x9260>
   2df38:	mov	r3, r0
   2df3c:	str	r3, [fp, #-48]	; 0xffffffd0
   2df40:	sub	r1, fp, #60	; 0x3c
   2df44:	ldr	r3, [fp, #4]
   2df48:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2df4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2df50:	bl	2da54 <__assert_fail@plt+0x1c510>
   2df54:	str	r0, [fp, #-40]	; 0xffffffd8
   2df58:	sub	r3, fp, #60	; 0x3c
   2df5c:	mov	r1, r3
   2df60:	ldr	r0, [fp, #-84]	; 0xffffffac
   2df64:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2df68:	str	r0, [fp, #-44]	; 0xffffffd4
   2df6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2df70:	mov	r0, r3
   2df74:	bl	14dec <__assert_fail@plt+0x38a8>
   2df78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2df7c:	cmp	r3, #0
   2df80:	movne	r3, #1
   2df84:	moveq	r3, #0
   2df88:	uxtb	r3, r3
   2df8c:	cmp	r3, #0
   2df90:	bne	2dfb0 <__assert_fail@plt+0x1ca6c>
   2df94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df98:	cmp	r3, #0
   2df9c:	movne	r3, #1
   2dfa0:	moveq	r3, #0
   2dfa4:	uxtb	r3, r3
   2dfa8:	cmp	r3, #0
   2dfac:	beq	2dfb8 <__assert_fail@plt+0x1ca74>
   2dfb0:	mov	r3, #1
   2dfb4:	b	2dfbc <__assert_fail@plt+0x1ca78>
   2dfb8:	mov	r3, #0
   2dfbc:	cmp	r3, #0
   2dfc0:	bne	2dfe0 <__assert_fail@plt+0x1ca9c>
   2dfc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dfc8:	cmp	r3, #0
   2dfcc:	movne	r3, #1
   2dfd0:	moveq	r3, #0
   2dfd4:	uxtb	r3, r3
   2dfd8:	cmp	r3, #0
   2dfdc:	beq	2de68 <__assert_fail@plt+0x1c924>
   2dfe0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2dfe4:	cmp	r3, #0
   2dfe8:	bne	2e008 <__assert_fail@plt+0x1cac4>
   2dfec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dff0:	cmp	r3, #0
   2dff4:	beq	2e000 <__assert_fail@plt+0x1cabc>
   2dff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dffc:	b	2e00c <__assert_fail@plt+0x1cac8>
   2e000:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e004:	b	2e00c <__assert_fail@plt+0x1cac8>
   2e008:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e00c:	str	r3, [fp, #-48]	; 0xffffffd0
   2e010:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e014:	b	2e234 <__assert_fail@plt+0x1ccf0>
   2e018:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e01c:	ldr	r2, [r3, #12]
   2e020:	ldr	r3, [fp, #-16]
   2e024:	ldr	r3, [r3]
   2e028:	lsl	r3, r3, #2
   2e02c:	add	r3, r2, r3
   2e030:	ldr	r3, [r3]
   2e034:	str	r3, [fp, #-32]	; 0xffffffe0
   2e038:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e03c:	ldr	r2, [r3, #100]	; 0x64
   2e040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e044:	lsl	r3, r3, #2
   2e048:	add	r3, r2, r3
   2e04c:	ldr	r3, [r3]
   2e050:	cmp	r3, #0
   2e054:	beq	2e138 <__assert_fail@plt+0x1cbf4>
   2e058:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e05c:	ldr	r2, [r3, #100]	; 0x64
   2e060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e064:	lsl	r3, r3, #2
   2e068:	add	r3, r2, r3
   2e06c:	ldr	r3, [r3]
   2e070:	add	r3, r3, #4
   2e074:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e078:	mov	r0, r3
   2e07c:	bl	1bac4 <__assert_fail@plt+0xa580>
   2e080:	mov	r3, r0
   2e084:	cmp	r3, #0
   2e088:	bne	2e214 <__assert_fail@plt+0x1ccd0>
   2e08c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e090:	ldr	r2, [r3, #100]	; 0x64
   2e094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e098:	lsl	r3, r3, #2
   2e09c:	add	r3, r2, r3
   2e0a0:	ldr	r3, [r3]
   2e0a4:	add	r2, r3, #4
   2e0a8:	sub	r3, fp, #72	; 0x48
   2e0ac:	mov	r1, r2
   2e0b0:	mov	r0, r3
   2e0b4:	bl	1a958 <__assert_fail@plt+0x9414>
   2e0b8:	mov	r3, r0
   2e0bc:	str	r3, [fp, #-48]	; 0xffffffd0
   2e0c0:	sub	r3, fp, #72	; 0x48
   2e0c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e0c8:	mov	r0, r3
   2e0cc:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2e0d0:	mov	r3, r0
   2e0d4:	strb	r3, [fp, #-33]	; 0xffffffdf
   2e0d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e0dc:	cmp	r3, #0
   2e0e0:	movne	r3, #1
   2e0e4:	moveq	r3, #0
   2e0e8:	uxtb	r3, r3
   2e0ec:	cmp	r3, #0
   2e0f0:	bne	2e108 <__assert_fail@plt+0x1cbc4>
   2e0f4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2e0f8:	eor	r3, r3, #1
   2e0fc:	uxtb	r3, r3
   2e100:	cmp	r3, #0
   2e104:	beq	2e174 <__assert_fail@plt+0x1cc30>
   2e108:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e10c:	mov	r0, r3
   2e110:	bl	14dec <__assert_fail@plt+0x38a8>
   2e114:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e118:	cmp	r3, #0
   2e11c:	beq	2e128 <__assert_fail@plt+0x1cbe4>
   2e120:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e124:	b	2e12c <__assert_fail@plt+0x1cbe8>
   2e128:	mov	r3, #12
   2e12c:	str	r3, [fp, #-48]	; 0xffffffd0
   2e130:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e134:	b	2e234 <__assert_fail@plt+0x1ccf0>
   2e138:	sub	r3, fp, #72	; 0x48
   2e13c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e140:	mov	r0, r3
   2e144:	bl	1a7a4 <__assert_fail@plt+0x9260>
   2e148:	mov	r3, r0
   2e14c:	str	r3, [fp, #-48]	; 0xffffffd0
   2e150:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e154:	cmp	r3, #0
   2e158:	movne	r3, #1
   2e15c:	moveq	r3, #0
   2e160:	uxtb	r3, r3
   2e164:	cmp	r3, #0
   2e168:	beq	2e174 <__assert_fail@plt+0x1cc30>
   2e16c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e170:	b	2e234 <__assert_fail@plt+0x1ccf0>
   2e174:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e178:	ldr	r2, [r3, #100]	; 0x64
   2e17c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e180:	lsl	r3, r3, #2
   2e184:	add	r4, r2, r3
   2e188:	sub	r2, fp, #72	; 0x48
   2e18c:	sub	r3, fp, #48	; 0x30
   2e190:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e194:	mov	r0, r3
   2e198:	bl	1c0f0 <__assert_fail@plt+0xabac>
   2e19c:	mov	r3, r0
   2e1a0:	str	r3, [r4]
   2e1a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2e1a8:	mov	r0, r3
   2e1ac:	bl	14dec <__assert_fail@plt+0x38a8>
   2e1b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e1b4:	ldr	r2, [r3, #100]	; 0x64
   2e1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e1bc:	lsl	r3, r3, #2
   2e1c0:	add	r3, r2, r3
   2e1c4:	ldr	r3, [r3]
   2e1c8:	cmp	r3, #0
   2e1cc:	moveq	r3, #1
   2e1d0:	movne	r3, #0
   2e1d4:	uxtb	r3, r3
   2e1d8:	cmp	r3, #0
   2e1dc:	beq	2e218 <__assert_fail@plt+0x1ccd4>
   2e1e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e1e4:	cmp	r3, #0
   2e1e8:	movne	r3, #1
   2e1ec:	moveq	r3, #0
   2e1f0:	uxtb	r3, r3
   2e1f4:	cmp	r3, #0
   2e1f8:	beq	2e218 <__assert_fail@plt+0x1ccd4>
   2e1fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e200:	b	2e234 <__assert_fail@plt+0x1ccf0>
   2e204:	nop			; (mov r0, r0)
   2e208:	b	2e218 <__assert_fail@plt+0x1ccd4>
   2e20c:	nop			; (mov r0, r0)
   2e210:	b	2e218 <__assert_fail@plt+0x1ccd4>
   2e214:	nop			; (mov r0, r0)
   2e218:	ldr	r3, [fp, #-16]
   2e21c:	add	r2, r3, #24
   2e220:	str	r2, [fp, #-16]
   2e224:	ldrb	r3, [r3, #20]
   2e228:	cmp	r3, #0
   2e22c:	bne	2de8c <__assert_fail@plt+0x1c948>
   2e230:	mov	r3, #0
   2e234:	mov	r0, r3
   2e238:	sub	sp, fp, #8
   2e23c:	pop	{r4, fp, pc}
   2e240:	push	{fp, lr}
   2e244:	add	fp, sp, #4
   2e248:	sub	sp, sp, #14400	; 0x3840
   2e24c:	sub	sp, sp, #32
   2e250:	sub	r3, fp, #12288	; 0x3000
   2e254:	sub	r3, r3, #4
   2e258:	str	r0, [r3, #-2140]	; 0xfffff7a4
   2e25c:	sub	r3, fp, #12288	; 0x3000
   2e260:	sub	r3, r3, #4
   2e264:	str	r1, [r3, #-2144]	; 0xfffff7a0
   2e268:	mov	r3, #0
   2e26c:	strb	r3, [fp, #-17]	; 0xffffffef
   2e270:	sub	r3, fp, #12288	; 0x3000
   2e274:	sub	r3, r3, #4
   2e278:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e27c:	mov	r2, #0
   2e280:	str	r2, [r3, #44]	; 0x2c
   2e284:	sub	r3, fp, #12288	; 0x3000
   2e288:	sub	r3, r3, #4
   2e28c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e290:	ldr	r2, [r3, #44]	; 0x2c
   2e294:	sub	r3, fp, #12288	; 0x3000
   2e298:	sub	r3, r3, #4
   2e29c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e2a0:	str	r2, [r3, #48]	; 0x30
   2e2a4:	sub	r3, fp, #14400	; 0x3840
   2e2a8:	sub	r3, r3, #4
   2e2ac:	sub	r3, r3, #20
   2e2b0:	sub	r2, fp, #6208	; 0x1840
   2e2b4:	sub	r2, r2, #4
   2e2b8:	sub	r2, r2, #20
   2e2bc:	sub	r1, fp, #12288	; 0x3000
   2e2c0:	sub	r1, r1, #4
   2e2c4:	sub	r0, fp, #12288	; 0x3000
   2e2c8:	sub	r0, r0, #4
   2e2cc:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   2e2d0:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   2e2d4:	bl	2ecdc <__assert_fail@plt+0x1d798>
   2e2d8:	str	r0, [fp, #-36]	; 0xffffffdc
   2e2dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e2e0:	cmp	r3, #0
   2e2e4:	movle	r3, #1
   2e2e8:	movgt	r3, #0
   2e2ec:	uxtb	r3, r3
   2e2f0:	cmp	r3, #0
   2e2f4:	beq	2e368 <__assert_fail@plt+0x1ce24>
   2e2f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e2fc:	cmp	r3, #0
   2e300:	bne	2e360 <__assert_fail@plt+0x1ce1c>
   2e304:	mov	r1, #256	; 0x100
   2e308:	mov	r0, #4
   2e30c:	bl	33180 <__assert_fail@plt+0x21c3c>
   2e310:	mov	r3, r0
   2e314:	mov	r2, r3
   2e318:	sub	r3, fp, #12288	; 0x3000
   2e31c:	sub	r3, r3, #4
   2e320:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e324:	str	r2, [r3, #44]	; 0x2c
   2e328:	sub	r3, fp, #12288	; 0x3000
   2e32c:	sub	r3, r3, #4
   2e330:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e334:	ldr	r3, [r3, #44]	; 0x2c
   2e338:	cmp	r3, #0
   2e33c:	moveq	r3, #1
   2e340:	movne	r3, #0
   2e344:	uxtb	r3, r3
   2e348:	cmp	r3, #0
   2e34c:	beq	2e358 <__assert_fail@plt+0x1ce14>
   2e350:	mov	r3, #0
   2e354:	b	2ecd0 <__assert_fail@plt+0x1d78c>
   2e358:	mov	r3, #1
   2e35c:	b	2ecd0 <__assert_fail@plt+0x1d78c>
   2e360:	mov	r3, #0
   2e364:	b	2ecd0 <__assert_fail@plt+0x1d78c>
   2e368:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e36c:	add	r2, r3, #1
   2e370:	sub	r3, fp, #3120	; 0xc30
   2e374:	sub	r3, r3, #4
   2e378:	sub	r3, r3, #4
   2e37c:	mov	r1, r2
   2e380:	mov	r0, r3
   2e384:	bl	1a720 <__assert_fail@plt+0x91dc>
   2e388:	mov	r3, r0
   2e38c:	str	r3, [fp, #-44]	; 0xffffffd4
   2e390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e394:	cmp	r3, #0
   2e398:	movne	r3, #1
   2e39c:	moveq	r3, #0
   2e3a0:	uxtb	r3, r3
   2e3a4:	cmp	r3, #0
   2e3a8:	beq	2e444 <__assert_fail@plt+0x1cf00>
   2e3ac:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e3b0:	nop			; (mov r0, r0)
   2e3b4:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e3b8:	nop			; (mov r0, r0)
   2e3bc:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e3c0:	nop			; (mov r0, r0)
   2e3c4:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e3c8:	nop			; (mov r0, r0)
   2e3cc:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e3d0:	nop			; (mov r0, r0)
   2e3d4:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2e3d8:	mov	r0, r3
   2e3dc:	bl	14dec <__assert_fail@plt+0x38a8>
   2e3e0:	mov	r3, #0
   2e3e4:	str	r3, [fp, #-8]
   2e3e8:	b	2e42c <__assert_fail@plt+0x1cee8>
   2e3ec:	ldr	r2, [fp, #-8]
   2e3f0:	mov	r3, r2
   2e3f4:	lsl	r3, r3, #1
   2e3f8:	add	r3, r3, r2
   2e3fc:	lsl	r3, r3, #2
   2e400:	mov	r2, r3
   2e404:	sub	r3, fp, #6208	; 0x1840
   2e408:	sub	r3, r3, #4
   2e40c:	sub	r3, r3, #20
   2e410:	add	r3, r3, r2
   2e414:	ldr	r3, [r3, #8]
   2e418:	mov	r0, r3
   2e41c:	bl	14dec <__assert_fail@plt+0x38a8>
   2e420:	ldr	r3, [fp, #-8]
   2e424:	add	r3, r3, #1
   2e428:	str	r3, [fp, #-8]
   2e42c:	ldr	r2, [fp, #-8]
   2e430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e434:	cmp	r2, r3
   2e438:	blt	2e3ec <__assert_fail@plt+0x1cea8>
   2e43c:	mov	r3, #0
   2e440:	b	2ecd0 <__assert_fail@plt+0x1d78c>
   2e444:	sub	r3, fp, #3152	; 0xc50
   2e448:	sub	r3, r3, #4
   2e44c:	sub	r3, r3, #4
   2e450:	mov	r0, r3
   2e454:	bl	1798c <__assert_fail@plt+0x6448>
   2e458:	mov	r3, #0
   2e45c:	str	r3, [fp, #-8]
   2e460:	b	2e82c <__assert_fail@plt+0x1d2e8>
   2e464:	mov	r3, #0
   2e468:	str	r3, [fp, #-3124]	; 0xfffff3cc
   2e46c:	mov	r3, #0
   2e470:	str	r3, [fp, #-12]
   2e474:	b	2e554 <__assert_fail@plt+0x1d010>
   2e478:	sub	r3, fp, #12288	; 0x3000
   2e47c:	sub	r3, r3, #4
   2e480:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2e484:	ldr	r1, [r3, #12]
   2e488:	sub	r3, fp, #4096	; 0x1000
   2e48c:	sub	r3, r3, #4
   2e490:	mov	r0, r3
   2e494:	ldr	r2, [fp, #-8]
   2e498:	mov	r3, r2
   2e49c:	lsl	r3, r3, #1
   2e4a0:	add	r3, r3, r2
   2e4a4:	lsl	r3, r3, #2
   2e4a8:	add	r3, r0, r3
   2e4ac:	sub	r3, r3, #2112	; 0x840
   2e4b0:	sub	r3, r3, #12
   2e4b4:	ldr	r2, [r3]
   2e4b8:	ldr	r3, [fp, #-12]
   2e4bc:	lsl	r3, r3, #2
   2e4c0:	add	r3, r2, r3
   2e4c4:	ldr	r3, [r3]
   2e4c8:	lsl	r3, r3, #2
   2e4cc:	add	r3, r1, r3
   2e4d0:	ldr	r3, [r3]
   2e4d4:	str	r3, [fp, #-40]	; 0xffffffd8
   2e4d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e4dc:	cmn	r3, #1
   2e4e0:	beq	2e548 <__assert_fail@plt+0x1d004>
   2e4e4:	sub	r3, fp, #12288	; 0x3000
   2e4e8:	sub	r3, r3, #4
   2e4ec:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2e4f0:	ldr	r1, [r3, #24]
   2e4f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e4f8:	mov	r3, r2
   2e4fc:	lsl	r3, r3, #1
   2e500:	add	r3, r3, r2
   2e504:	lsl	r3, r3, #2
   2e508:	add	r2, r1, r3
   2e50c:	sub	r3, fp, #3120	; 0xc30
   2e510:	sub	r3, r3, #4
   2e514:	sub	r3, r3, #4
   2e518:	mov	r1, r2
   2e51c:	mov	r0, r3
   2e520:	bl	1b260 <__assert_fail@plt+0x9d1c>
   2e524:	mov	r3, r0
   2e528:	str	r3, [fp, #-44]	; 0xffffffd4
   2e52c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e530:	cmp	r3, #0
   2e534:	movne	r3, #1
   2e538:	moveq	r3, #0
   2e53c:	uxtb	r3, r3
   2e540:	cmp	r3, #0
   2e544:	bne	2e3b0 <__assert_fail@plt+0x1ce6c>
   2e548:	ldr	r3, [fp, #-12]
   2e54c:	add	r3, r3, #1
   2e550:	str	r3, [fp, #-12]
   2e554:	sub	r3, fp, #4096	; 0x1000
   2e558:	sub	r3, r3, #4
   2e55c:	mov	r1, r3
   2e560:	ldr	r2, [fp, #-8]
   2e564:	mov	r3, r2
   2e568:	lsl	r3, r3, #1
   2e56c:	add	r3, r3, r2
   2e570:	lsl	r3, r3, #2
   2e574:	add	r3, r1, r3
   2e578:	sub	r3, r3, #2128	; 0x850
   2e57c:	ldr	r2, [r3]
   2e580:	ldr	r3, [fp, #-12]
   2e584:	cmp	r2, r3
   2e588:	bgt	2e478 <__assert_fail@plt+0x1cf34>
   2e58c:	sub	r2, fp, #3120	; 0xc30
   2e590:	sub	r2, r2, #4
   2e594:	sub	r2, r2, #4
   2e598:	sub	r3, fp, #12288	; 0x3000
   2e59c:	sub	r3, r3, #4
   2e5a0:	mov	r1, r3
   2e5a4:	sub	r0, fp, #44	; 0x2c
   2e5a8:	mov	r3, #0
   2e5ac:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2e5b0:	bl	1c25c <__assert_fail@plt+0xad18>
   2e5b4:	mov	r2, r0
   2e5b8:	ldr	r3, [fp, #-8]
   2e5bc:	lsl	r3, r3, #2
   2e5c0:	sub	r1, fp, #4
   2e5c4:	add	r3, r1, r3
   2e5c8:	str	r2, [r3, #-1064]	; 0xfffffbd8
   2e5cc:	ldr	r3, [fp, #-8]
   2e5d0:	lsl	r3, r3, #2
   2e5d4:	sub	r2, fp, #4
   2e5d8:	add	r3, r2, r3
   2e5dc:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2e5e0:	cmp	r3, #0
   2e5e4:	moveq	r3, #1
   2e5e8:	movne	r3, #0
   2e5ec:	uxtb	r3, r3
   2e5f0:	cmp	r3, #0
   2e5f4:	beq	2e614 <__assert_fail@plt+0x1d0d0>
   2e5f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e5fc:	cmp	r3, #0
   2e600:	movne	r3, #1
   2e604:	moveq	r3, #0
   2e608:	uxtb	r3, r3
   2e60c:	cmp	r3, #0
   2e610:	bne	2e3b8 <__assert_fail@plt+0x1ce74>
   2e614:	ldr	r3, [fp, #-8]
   2e618:	lsl	r3, r3, #2
   2e61c:	sub	r2, fp, #4
   2e620:	add	r3, r2, r3
   2e624:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2e628:	ldrb	r3, [r3, #52]	; 0x34
   2e62c:	bic	r3, r3, #127	; 0x7f
   2e630:	uxtb	r3, r3
   2e634:	cmp	r3, #0
   2e638:	beq	2e7a0 <__assert_fail@plt+0x1d25c>
   2e63c:	sub	r2, fp, #3120	; 0xc30
   2e640:	sub	r2, r2, #4
   2e644:	sub	r2, r2, #4
   2e648:	sub	r3, fp, #12288	; 0x3000
   2e64c:	sub	r3, r3, #4
   2e650:	mov	r1, r3
   2e654:	sub	r0, fp, #44	; 0x2c
   2e658:	mov	r3, #1
   2e65c:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2e660:	bl	1c25c <__assert_fail@plt+0xad18>
   2e664:	mov	r2, r0
   2e668:	ldr	r3, [fp, #-8]
   2e66c:	lsl	r3, r3, #2
   2e670:	sub	r1, fp, #4
   2e674:	add	r3, r1, r3
   2e678:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2e67c:	ldr	r3, [fp, #-8]
   2e680:	lsl	r3, r3, #2
   2e684:	sub	r2, fp, #4
   2e688:	add	r3, r2, r3
   2e68c:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2e690:	cmp	r3, #0
   2e694:	moveq	r3, #1
   2e698:	movne	r3, #0
   2e69c:	uxtb	r3, r3
   2e6a0:	cmp	r3, #0
   2e6a4:	beq	2e6c4 <__assert_fail@plt+0x1d180>
   2e6a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e6ac:	cmp	r3, #0
   2e6b0:	movne	r3, #1
   2e6b4:	moveq	r3, #0
   2e6b8:	uxtb	r3, r3
   2e6bc:	cmp	r3, #0
   2e6c0:	bne	2e3c0 <__assert_fail@plt+0x1ce7c>
   2e6c4:	ldr	r3, [fp, #-8]
   2e6c8:	lsl	r3, r3, #2
   2e6cc:	sub	r2, fp, #4
   2e6d0:	add	r3, r2, r3
   2e6d4:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2e6d8:	ldr	r3, [fp, #-8]
   2e6dc:	lsl	r3, r3, #2
   2e6e0:	sub	r1, fp, #4
   2e6e4:	add	r3, r1, r3
   2e6e8:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2e6ec:	cmp	r2, r3
   2e6f0:	beq	2e714 <__assert_fail@plt+0x1d1d0>
   2e6f4:	sub	r3, fp, #12288	; 0x3000
   2e6f8:	sub	r3, r3, #4
   2e6fc:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2e700:	ldr	r3, [r3, #92]	; 0x5c
   2e704:	cmp	r3, #1
   2e708:	ble	2e714 <__assert_fail@plt+0x1d1d0>
   2e70c:	mov	r3, #1
   2e710:	strb	r3, [fp, #-17]	; 0xffffffef
   2e714:	sub	r2, fp, #3120	; 0xc30
   2e718:	sub	r2, r2, #4
   2e71c:	sub	r2, r2, #4
   2e720:	sub	r3, fp, #12288	; 0x3000
   2e724:	sub	r3, r3, #4
   2e728:	mov	r1, r3
   2e72c:	sub	r0, fp, #44	; 0x2c
   2e730:	mov	r3, #2
   2e734:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   2e738:	bl	1c25c <__assert_fail@plt+0xad18>
   2e73c:	mov	r2, r0
   2e740:	ldr	r3, [fp, #-8]
   2e744:	lsl	r3, r3, #2
   2e748:	sub	r1, fp, #4
   2e74c:	add	r3, r1, r3
   2e750:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2e754:	ldr	r3, [fp, #-8]
   2e758:	lsl	r3, r3, #2
   2e75c:	sub	r2, fp, #4
   2e760:	add	r3, r2, r3
   2e764:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2e768:	cmp	r3, #0
   2e76c:	moveq	r3, #1
   2e770:	movne	r3, #0
   2e774:	uxtb	r3, r3
   2e778:	cmp	r3, #0
   2e77c:	beq	2e7f0 <__assert_fail@plt+0x1d2ac>
   2e780:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e784:	cmp	r3, #0
   2e788:	movne	r3, #1
   2e78c:	moveq	r3, #0
   2e790:	uxtb	r3, r3
   2e794:	cmp	r3, #0
   2e798:	beq	2e7f0 <__assert_fail@plt+0x1d2ac>
   2e79c:	b	2e3d4 <__assert_fail@plt+0x1ce90>
   2e7a0:	ldr	r3, [fp, #-8]
   2e7a4:	lsl	r3, r3, #2
   2e7a8:	sub	r2, fp, #4
   2e7ac:	add	r3, r2, r3
   2e7b0:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2e7b4:	ldr	r3, [fp, #-8]
   2e7b8:	lsl	r3, r3, #2
   2e7bc:	sub	r1, fp, #4
   2e7c0:	add	r3, r1, r3
   2e7c4:	str	r2, [r3, #-2088]	; 0xfffff7d8
   2e7c8:	ldr	r3, [fp, #-8]
   2e7cc:	lsl	r3, r3, #2
   2e7d0:	sub	r2, fp, #4
   2e7d4:	add	r3, r2, r3
   2e7d8:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   2e7dc:	ldr	r3, [fp, #-8]
   2e7e0:	lsl	r3, r3, #2
   2e7e4:	sub	r1, fp, #4
   2e7e8:	add	r3, r1, r3
   2e7ec:	str	r2, [r3, #-3112]	; 0xfffff3d8
   2e7f0:	sub	r3, fp, #14400	; 0x3840
   2e7f4:	sub	r3, r3, #4
   2e7f8:	sub	r3, r3, #20
   2e7fc:	ldr	r2, [fp, #-8]
   2e800:	lsl	r2, r2, #5
   2e804:	add	r2, r3, r2
   2e808:	sub	r3, fp, #3152	; 0xc50
   2e80c:	sub	r3, r3, #4
   2e810:	sub	r3, r3, #4
   2e814:	mov	r1, r2
   2e818:	mov	r0, r3
   2e81c:	bl	17a84 <__assert_fail@plt+0x6540>
   2e820:	ldr	r3, [fp, #-8]
   2e824:	add	r3, r3, #1
   2e828:	str	r3, [fp, #-8]
   2e82c:	ldr	r2, [fp, #-8]
   2e830:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e834:	cmp	r2, r3
   2e838:	blt	2e464 <__assert_fail@plt+0x1cf20>
   2e83c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2e840:	cmp	r3, #0
   2e844:	bne	2ea00 <__assert_fail@plt+0x1d4bc>
   2e848:	mov	r1, #256	; 0x100
   2e84c:	mov	r0, #4
   2e850:	bl	33180 <__assert_fail@plt+0x21c3c>
   2e854:	mov	r3, r0
   2e858:	mov	r2, r3
   2e85c:	sub	r3, fp, #12288	; 0x3000
   2e860:	sub	r3, r3, #4
   2e864:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e868:	str	r2, [r3, #44]	; 0x2c
   2e86c:	sub	r3, fp, #12288	; 0x3000
   2e870:	sub	r3, r3, #4
   2e874:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2e878:	ldr	r3, [r3, #44]	; 0x2c
   2e87c:	str	r3, [fp, #-32]	; 0xffffffe0
   2e880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e884:	cmp	r3, #0
   2e888:	moveq	r3, #1
   2e88c:	movne	r3, #0
   2e890:	uxtb	r3, r3
   2e894:	cmp	r3, #0
   2e898:	bne	2e3c8 <__assert_fail@plt+0x1ce84>
   2e89c:	mov	r3, #0
   2e8a0:	str	r3, [fp, #-8]
   2e8a4:	b	2e9f0 <__assert_fail@plt+0x1d4ac>
   2e8a8:	ldr	r3, [fp, #-8]
   2e8ac:	lsl	r3, r3, #5
   2e8b0:	str	r3, [fp, #-16]
   2e8b4:	ldr	r3, [fp, #-8]
   2e8b8:	lsl	r3, r3, #2
   2e8bc:	sub	r2, fp, #4
   2e8c0:	add	r3, r2, r3
   2e8c4:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2e8c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e8cc:	mov	r3, #1
   2e8d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2e8d4:	b	2e9d8 <__assert_fail@plt+0x1d494>
   2e8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e8dc:	and	r3, r3, #1
   2e8e0:	cmp	r3, #0
   2e8e4:	beq	2e9b4 <__assert_fail@plt+0x1d470>
   2e8e8:	mov	r3, #0
   2e8ec:	str	r3, [fp, #-12]
   2e8f0:	b	2e900 <__assert_fail@plt+0x1d3bc>
   2e8f4:	ldr	r3, [fp, #-12]
   2e8f8:	add	r3, r3, #1
   2e8fc:	str	r3, [fp, #-12]
   2e900:	sub	r3, fp, #12288	; 0x3000
   2e904:	sub	r3, r3, #4
   2e908:	mov	r1, r3
   2e90c:	ldr	r3, [fp, #-12]
   2e910:	lsl	r2, r3, #3
   2e914:	ldr	r3, [fp, #-8]
   2e918:	add	r3, r2, r3
   2e91c:	lsl	r3, r3, #2
   2e920:	add	r3, r1, r3
   2e924:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2e928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e92c:	and	r3, r3, r2
   2e930:	cmp	r3, #0
   2e934:	beq	2e8f4 <__assert_fail@plt+0x1d3b0>
   2e938:	sub	r3, fp, #12288	; 0x3000
   2e93c:	sub	r3, r3, #4
   2e940:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   2e944:	ldr	r2, [fp, #-8]
   2e948:	add	r2, r2, #24
   2e94c:	ldr	r2, [r3, r2, lsl #2]
   2e950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e954:	and	r3, r3, r2
   2e958:	cmp	r3, #0
   2e95c:	beq	2e98c <__assert_fail@plt+0x1d448>
   2e960:	ldr	r3, [fp, #-16]
   2e964:	lsl	r3, r3, #2
   2e968:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e96c:	add	r2, r2, r3
   2e970:	ldr	r3, [fp, #-12]
   2e974:	lsl	r3, r3, #2
   2e978:	sub	r1, fp, #4
   2e97c:	add	r3, r1, r3
   2e980:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2e984:	str	r3, [r2]
   2e988:	b	2e9b4 <__assert_fail@plt+0x1d470>
   2e98c:	ldr	r3, [fp, #-16]
   2e990:	lsl	r3, r3, #2
   2e994:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e998:	add	r2, r2, r3
   2e99c:	ldr	r3, [fp, #-12]
   2e9a0:	lsl	r3, r3, #2
   2e9a4:	sub	r1, fp, #4
   2e9a8:	add	r3, r1, r3
   2e9ac:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2e9b0:	str	r3, [r2]
   2e9b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e9b8:	lsl	r3, r3, #1
   2e9bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2e9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9c4:	lsr	r3, r3, #1
   2e9c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2e9cc:	ldr	r3, [fp, #-16]
   2e9d0:	add	r3, r3, #1
   2e9d4:	str	r3, [fp, #-16]
   2e9d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9dc:	cmp	r3, #0
   2e9e0:	bne	2e8d8 <__assert_fail@plt+0x1d394>
   2e9e4:	ldr	r3, [fp, #-8]
   2e9e8:	add	r3, r3, #1
   2e9ec:	str	r3, [fp, #-8]
   2e9f0:	ldr	r3, [fp, #-8]
   2e9f4:	cmp	r3, #7
   2e9f8:	ble	2e8a8 <__assert_fail@plt+0x1d364>
   2e9fc:	b	2eb8c <__assert_fail@plt+0x1d648>
   2ea00:	mov	r1, #512	; 0x200
   2ea04:	mov	r0, #4
   2ea08:	bl	33180 <__assert_fail@plt+0x21c3c>
   2ea0c:	mov	r3, r0
   2ea10:	mov	r2, r3
   2ea14:	sub	r3, fp, #12288	; 0x3000
   2ea18:	sub	r3, r3, #4
   2ea1c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ea20:	str	r2, [r3, #48]	; 0x30
   2ea24:	sub	r3, fp, #12288	; 0x3000
   2ea28:	sub	r3, r3, #4
   2ea2c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   2ea30:	ldr	r3, [r3, #48]	; 0x30
   2ea34:	str	r3, [fp, #-32]	; 0xffffffe0
   2ea38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ea3c:	cmp	r3, #0
   2ea40:	moveq	r3, #1
   2ea44:	movne	r3, #0
   2ea48:	uxtb	r3, r3
   2ea4c:	cmp	r3, #0
   2ea50:	bne	2e3d0 <__assert_fail@plt+0x1ce8c>
   2ea54:	mov	r3, #0
   2ea58:	str	r3, [fp, #-8]
   2ea5c:	b	2eb80 <__assert_fail@plt+0x1d63c>
   2ea60:	ldr	r3, [fp, #-8]
   2ea64:	lsl	r3, r3, #5
   2ea68:	str	r3, [fp, #-16]
   2ea6c:	ldr	r3, [fp, #-8]
   2ea70:	lsl	r3, r3, #2
   2ea74:	sub	r2, fp, #4
   2ea78:	add	r3, r2, r3
   2ea7c:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   2ea80:	str	r3, [fp, #-24]	; 0xffffffe8
   2ea84:	mov	r3, #1
   2ea88:	str	r3, [fp, #-28]	; 0xffffffe4
   2ea8c:	b	2eb68 <__assert_fail@plt+0x1d624>
   2ea90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ea94:	and	r3, r3, #1
   2ea98:	cmp	r3, #0
   2ea9c:	beq	2eb44 <__assert_fail@plt+0x1d600>
   2eaa0:	mov	r3, #0
   2eaa4:	str	r3, [fp, #-12]
   2eaa8:	b	2eab8 <__assert_fail@plt+0x1d574>
   2eaac:	ldr	r3, [fp, #-12]
   2eab0:	add	r3, r3, #1
   2eab4:	str	r3, [fp, #-12]
   2eab8:	sub	r3, fp, #12288	; 0x3000
   2eabc:	sub	r3, r3, #4
   2eac0:	mov	r1, r3
   2eac4:	ldr	r3, [fp, #-12]
   2eac8:	lsl	r2, r3, #3
   2eacc:	ldr	r3, [fp, #-8]
   2ead0:	add	r3, r2, r3
   2ead4:	lsl	r3, r3, #2
   2ead8:	add	r3, r1, r3
   2eadc:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   2eae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eae4:	and	r3, r3, r2
   2eae8:	cmp	r3, #0
   2eaec:	beq	2eaac <__assert_fail@plt+0x1d568>
   2eaf0:	ldr	r3, [fp, #-16]
   2eaf4:	lsl	r3, r3, #2
   2eaf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2eafc:	add	r2, r2, r3
   2eb00:	ldr	r3, [fp, #-12]
   2eb04:	lsl	r3, r3, #2
   2eb08:	sub	r1, fp, #4
   2eb0c:	add	r3, r1, r3
   2eb10:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   2eb14:	str	r3, [r2]
   2eb18:	ldr	r3, [fp, #-16]
   2eb1c:	add	r3, r3, #256	; 0x100
   2eb20:	lsl	r3, r3, #2
   2eb24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2eb28:	add	r2, r2, r3
   2eb2c:	ldr	r3, [fp, #-12]
   2eb30:	lsl	r3, r3, #2
   2eb34:	sub	r1, fp, #4
   2eb38:	add	r3, r1, r3
   2eb3c:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   2eb40:	str	r3, [r2]
   2eb44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb48:	lsl	r3, r3, #1
   2eb4c:	str	r3, [fp, #-28]	; 0xffffffe4
   2eb50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb54:	lsr	r3, r3, #1
   2eb58:	str	r3, [fp, #-24]	; 0xffffffe8
   2eb5c:	ldr	r3, [fp, #-16]
   2eb60:	add	r3, r3, #1
   2eb64:	str	r3, [fp, #-16]
   2eb68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb6c:	cmp	r3, #0
   2eb70:	bne	2ea90 <__assert_fail@plt+0x1d54c>
   2eb74:	ldr	r3, [fp, #-8]
   2eb78:	add	r3, r3, #1
   2eb7c:	str	r3, [fp, #-8]
   2eb80:	ldr	r3, [fp, #-8]
   2eb84:	cmp	r3, #7
   2eb88:	ble	2ea60 <__assert_fail@plt+0x1d51c>
   2eb8c:	sub	r3, fp, #3152	; 0xc50
   2eb90:	sub	r3, r3, #4
   2eb94:	sub	r3, r3, #4
   2eb98:	mov	r1, #10
   2eb9c:	mov	r0, r3
   2eba0:	bl	17910 <__assert_fail@plt+0x63cc>
   2eba4:	mov	r3, r0
   2eba8:	cmp	r3, #0
   2ebac:	beq	2ec64 <__assert_fail@plt+0x1d720>
   2ebb0:	mov	r3, #0
   2ebb4:	str	r3, [fp, #-12]
   2ebb8:	b	2ec4c <__assert_fail@plt+0x1d708>
   2ebbc:	sub	r3, fp, #14400	; 0x3840
   2ebc0:	sub	r3, r3, #4
   2ebc4:	sub	r3, r3, #20
   2ebc8:	ldr	r2, [fp, #-12]
   2ebcc:	lsl	r2, r2, #5
   2ebd0:	add	r3, r3, r2
   2ebd4:	mov	r1, #10
   2ebd8:	mov	r0, r3
   2ebdc:	bl	17910 <__assert_fail@plt+0x63cc>
   2ebe0:	mov	r3, r0
   2ebe4:	cmp	r3, #0
   2ebe8:	beq	2ec40 <__assert_fail@plt+0x1d6fc>
   2ebec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ebf0:	add	r2, r3, #40	; 0x28
   2ebf4:	ldr	r3, [fp, #-12]
   2ebf8:	lsl	r3, r3, #2
   2ebfc:	sub	r1, fp, #4
   2ec00:	add	r3, r1, r3
   2ec04:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   2ec08:	str	r3, [r2]
   2ec0c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2ec10:	cmp	r3, #0
   2ec14:	beq	2ec60 <__assert_fail@plt+0x1d71c>
   2ec18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ec1c:	add	r3, r3, #1056	; 0x420
   2ec20:	add	r3, r3, #8
   2ec24:	ldr	r2, [fp, #-12]
   2ec28:	lsl	r2, r2, #2
   2ec2c:	sub	r1, fp, #4
   2ec30:	add	r2, r1, r2
   2ec34:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   2ec38:	str	r2, [r3]
   2ec3c:	b	2ec60 <__assert_fail@plt+0x1d71c>
   2ec40:	ldr	r3, [fp, #-12]
   2ec44:	add	r3, r3, #1
   2ec48:	str	r3, [fp, #-12]
   2ec4c:	ldr	r2, [fp, #-12]
   2ec50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ec54:	cmp	r2, r3
   2ec58:	blt	2ebbc <__assert_fail@plt+0x1d678>
   2ec5c:	b	2ec64 <__assert_fail@plt+0x1d720>
   2ec60:	nop			; (mov r0, r0)
   2ec64:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   2ec68:	mov	r0, r3
   2ec6c:	bl	14dec <__assert_fail@plt+0x38a8>
   2ec70:	mov	r3, #0
   2ec74:	str	r3, [fp, #-8]
   2ec78:	b	2ecbc <__assert_fail@plt+0x1d778>
   2ec7c:	ldr	r2, [fp, #-8]
   2ec80:	mov	r3, r2
   2ec84:	lsl	r3, r3, #1
   2ec88:	add	r3, r3, r2
   2ec8c:	lsl	r3, r3, #2
   2ec90:	mov	r2, r3
   2ec94:	sub	r3, fp, #6208	; 0x1840
   2ec98:	sub	r3, r3, #4
   2ec9c:	sub	r3, r3, #20
   2eca0:	add	r3, r3, r2
   2eca4:	ldr	r3, [r3, #8]
   2eca8:	mov	r0, r3
   2ecac:	bl	14dec <__assert_fail@plt+0x38a8>
   2ecb0:	ldr	r3, [fp, #-8]
   2ecb4:	add	r3, r3, #1
   2ecb8:	str	r3, [fp, #-8]
   2ecbc:	ldr	r2, [fp, #-8]
   2ecc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ecc4:	cmp	r2, r3
   2ecc8:	blt	2ec7c <__assert_fail@plt+0x1d738>
   2eccc:	mov	r3, #1
   2ecd0:	mov	r0, r3
   2ecd4:	sub	sp, fp, #4
   2ecd8:	pop	{fp, pc}
   2ecdc:	push	{fp, lr}
   2ece0:	add	fp, sp, #4
   2ece4:	sub	sp, sp, #176	; 0xb0
   2ece8:	str	r0, [fp, #-168]	; 0xffffff58
   2ecec:	str	r1, [fp, #-172]	; 0xffffff54
   2ecf0:	str	r2, [fp, #-176]	; 0xffffff50
   2ecf4:	str	r3, [fp, #-180]	; 0xffffff4c
   2ecf8:	ldr	r3, [fp, #-172]	; 0xffffff54
   2ecfc:	add	r3, r3, #4
   2ed00:	str	r3, [fp, #-44]	; 0xffffffd4
   2ed04:	sub	r3, fp, #100	; 0x64
   2ed08:	mov	r0, r3
   2ed0c:	bl	1798c <__assert_fail@plt+0x6448>
   2ed10:	mov	r3, #0
   2ed14:	str	r3, [fp, #-20]	; 0xffffffec
   2ed18:	mov	r3, #0
   2ed1c:	str	r3, [fp, #-8]
   2ed20:	b	2f67c <__assert_fail@plt+0x1e138>
   2ed24:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ed28:	ldr	r2, [r3]
   2ed2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2ed30:	ldr	r1, [r3, #8]
   2ed34:	ldr	r3, [fp, #-8]
   2ed38:	lsl	r3, r3, #2
   2ed3c:	add	r3, r1, r3
   2ed40:	ldr	r3, [r3]
   2ed44:	lsl	r3, r3, #3
   2ed48:	add	r3, r2, r3
   2ed4c:	str	r3, [fp, #-48]	; 0xffffffd0
   2ed50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ed54:	ldrb	r3, [r3, #4]
   2ed58:	str	r3, [fp, #-52]	; 0xffffffcc
   2ed5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ed60:	ldr	r3, [r3, #4]
   2ed64:	lsr	r3, r3, #8
   2ed68:	lsl	r3, r3, #22
   2ed6c:	lsr	r3, r3, #22
   2ed70:	uxth	r3, r3
   2ed74:	str	r3, [fp, #-56]	; 0xffffffc8
   2ed78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ed7c:	cmp	r3, #1
   2ed80:	bne	2eda4 <__assert_fail@plt+0x1d860>
   2ed84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ed88:	ldrb	r3, [r3]
   2ed8c:	mov	r2, r3
   2ed90:	sub	r3, fp, #100	; 0x64
   2ed94:	mov	r1, r2
   2ed98:	mov	r0, r3
   2ed9c:	bl	177ec <__assert_fail@plt+0x62a8>
   2eda0:	b	2eec4 <__assert_fail@plt+0x1d980>
   2eda4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eda8:	cmp	r3, #3
   2edac:	bne	2edcc <__assert_fail@plt+0x1d888>
   2edb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2edb4:	ldr	r2, [r3]
   2edb8:	sub	r3, fp, #100	; 0x64
   2edbc:	mov	r1, r2
   2edc0:	mov	r0, r3
   2edc4:	bl	17a84 <__assert_fail@plt+0x6540>
   2edc8:	b	2eec4 <__assert_fail@plt+0x1d980>
   2edcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2edd0:	cmp	r3, #5
   2edd4:	bne	2ee5c <__assert_fail@plt+0x1d918>
   2edd8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2eddc:	ldr	r3, [r3, #92]	; 0x5c
   2ede0:	cmp	r3, #1
   2ede4:	ble	2ee04 <__assert_fail@plt+0x1d8c0>
   2ede8:	ldr	r3, [fp, #-168]	; 0xffffff58
   2edec:	ldr	r2, [r3, #60]	; 0x3c
   2edf0:	sub	r3, fp, #100	; 0x64
   2edf4:	mov	r1, r2
   2edf8:	mov	r0, r3
   2edfc:	bl	17a84 <__assert_fail@plt+0x6540>
   2ee00:	b	2ee10 <__assert_fail@plt+0x1d8cc>
   2ee04:	sub	r3, fp, #100	; 0x64
   2ee08:	mov	r0, r3
   2ee0c:	bl	179b8 <__assert_fail@plt+0x6474>
   2ee10:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ee14:	ldr	r3, [r3, #128]	; 0x80
   2ee18:	and	r3, r3, #64	; 0x40
   2ee1c:	cmp	r3, #0
   2ee20:	bne	2ee34 <__assert_fail@plt+0x1d8f0>
   2ee24:	sub	r3, fp, #100	; 0x64
   2ee28:	mov	r1, #10
   2ee2c:	mov	r0, r3
   2ee30:	bl	1787c <__assert_fail@plt+0x6338>
   2ee34:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ee38:	ldr	r3, [r3, #128]	; 0x80
   2ee3c:	and	r3, r3, #128	; 0x80
   2ee40:	cmp	r3, #0
   2ee44:	beq	2eec4 <__assert_fail@plt+0x1d980>
   2ee48:	sub	r3, fp, #100	; 0x64
   2ee4c:	mov	r1, #0
   2ee50:	mov	r0, r3
   2ee54:	bl	1787c <__assert_fail@plt+0x6338>
   2ee58:	b	2eec4 <__assert_fail@plt+0x1d980>
   2ee5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ee60:	cmp	r3, #7
   2ee64:	bne	2f654 <__assert_fail@plt+0x1e110>
   2ee68:	sub	r3, fp, #100	; 0x64
   2ee6c:	mov	r2, #16
   2ee70:	mvn	r1, #0
   2ee74:	mov	r0, r3
   2ee78:	bl	11448 <memset@plt>
   2ee7c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ee80:	ldr	r3, [r3, #128]	; 0x80
   2ee84:	and	r3, r3, #64	; 0x40
   2ee88:	cmp	r3, #0
   2ee8c:	bne	2eea0 <__assert_fail@plt+0x1d95c>
   2ee90:	sub	r3, fp, #100	; 0x64
   2ee94:	mov	r1, #10
   2ee98:	mov	r0, r3
   2ee9c:	bl	1787c <__assert_fail@plt+0x6338>
   2eea0:	ldr	r3, [fp, #-168]	; 0xffffff58
   2eea4:	ldr	r3, [r3, #128]	; 0x80
   2eea8:	and	r3, r3, #128	; 0x80
   2eeac:	cmp	r3, #0
   2eeb0:	beq	2eec4 <__assert_fail@plt+0x1d980>
   2eeb4:	sub	r3, fp, #100	; 0x64
   2eeb8:	mov	r1, #0
   2eebc:	mov	r0, r3
   2eec0:	bl	1787c <__assert_fail@plt+0x6338>
   2eec4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eec8:	cmp	r3, #0
   2eecc:	beq	2f25c <__assert_fail@plt+0x1dd18>
   2eed0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eed4:	and	r3, r3, #32
   2eed8:	cmp	r3, #0
   2eedc:	beq	2ef20 <__assert_fail@plt+0x1d9dc>
   2eee0:	sub	r3, fp, #100	; 0x64
   2eee4:	mov	r1, #10
   2eee8:	mov	r0, r3
   2eeec:	bl	17910 <__assert_fail@plt+0x63cc>
   2eef0:	mov	r3, r0
   2eef4:	strb	r3, [fp, #-57]	; 0xffffffc7
   2eef8:	sub	r3, fp, #100	; 0x64
   2eefc:	mov	r0, r3
   2ef00:	bl	1798c <__assert_fail@plt+0x6448>
   2ef04:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2ef08:	cmp	r3, #0
   2ef0c:	beq	2f65c <__assert_fail@plt+0x1e118>
   2ef10:	sub	r3, fp, #100	; 0x64
   2ef14:	mov	r1, #10
   2ef18:	mov	r0, r3
   2ef1c:	bl	177ec <__assert_fail@plt+0x62a8>
   2ef20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef24:	and	r3, r3, #128	; 0x80
   2ef28:	cmp	r3, #0
   2ef2c:	beq	2ef40 <__assert_fail@plt+0x1d9fc>
   2ef30:	sub	r3, fp, #100	; 0x64
   2ef34:	mov	r0, r3
   2ef38:	bl	1798c <__assert_fail@plt+0x6448>
   2ef3c:	b	2f670 <__assert_fail@plt+0x1e12c>
   2ef40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ef44:	and	r3, r3, #4
   2ef48:	cmp	r3, #0
   2ef4c:	beq	2f0cc <__assert_fail@plt+0x1db88>
   2ef50:	mov	r3, #0
   2ef54:	str	r3, [fp, #-24]	; 0xffffffe8
   2ef58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef5c:	cmp	r3, #1
   2ef60:	bne	2ef8c <__assert_fail@plt+0x1da48>
   2ef64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ef68:	ldrb	r3, [r3, #6]
   2ef6c:	and	r3, r3, #64	; 0x40
   2ef70:	uxtb	r3, r3
   2ef74:	cmp	r3, #0
   2ef78:	bne	2ef8c <__assert_fail@plt+0x1da48>
   2ef7c:	sub	r3, fp, #100	; 0x64
   2ef80:	mov	r0, r3
   2ef84:	bl	1798c <__assert_fail@plt+0x6448>
   2ef88:	b	2f670 <__assert_fail@plt+0x1e12c>
   2ef8c:	ldr	r3, [fp, #-168]	; 0xffffff58
   2ef90:	ldr	r3, [r3, #92]	; 0x5c
   2ef94:	cmp	r3, #1
   2ef98:	ble	2f040 <__assert_fail@plt+0x1dafc>
   2ef9c:	mov	r3, #0
   2efa0:	str	r3, [fp, #-12]
   2efa4:	b	2f030 <__assert_fail@plt+0x1daec>
   2efa8:	ldr	r3, [fp, #-12]
   2efac:	lsl	r3, r3, #2
   2efb0:	sub	r2, fp, #4
   2efb4:	add	r3, r2, r3
   2efb8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2efbc:	ldr	r3, [fp, #-168]	; 0xffffff58
   2efc0:	ldr	r1, [fp, #-12]
   2efc4:	add	r1, r1, #24
   2efc8:	ldr	r1, [r3, r1, lsl #2]
   2efcc:	ldr	r3, [fp, #-168]	; 0xffffff58
   2efd0:	ldr	r0, [r3, #60]	; 0x3c
   2efd4:	ldr	r3, [fp, #-12]
   2efd8:	lsl	r3, r3, #2
   2efdc:	add	r3, r0, r3
   2efe0:	ldr	r3, [r3]
   2efe4:	mvn	r3, r3
   2efe8:	orr	r3, r1, r3
   2efec:	and	r2, r2, r3
   2eff0:	ldr	r3, [fp, #-12]
   2eff4:	lsl	r3, r3, #2
   2eff8:	sub	r1, fp, #4
   2effc:	add	r3, r1, r3
   2f000:	str	r2, [r3, #-96]	; 0xffffffa0
   2f004:	ldr	r3, [fp, #-12]
   2f008:	lsl	r3, r3, #2
   2f00c:	sub	r2, fp, #4
   2f010:	add	r3, r2, r3
   2f014:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f018:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f01c:	orr	r3, r2, r3
   2f020:	str	r3, [fp, #-24]	; 0xffffffe8
   2f024:	ldr	r3, [fp, #-12]
   2f028:	add	r3, r3, #1
   2f02c:	str	r3, [fp, #-12]
   2f030:	ldr	r3, [fp, #-12]
   2f034:	cmp	r3, #7
   2f038:	ble	2efa8 <__assert_fail@plt+0x1da64>
   2f03c:	b	2f0c0 <__assert_fail@plt+0x1db7c>
   2f040:	mov	r3, #0
   2f044:	str	r3, [fp, #-12]
   2f048:	b	2f0b4 <__assert_fail@plt+0x1db70>
   2f04c:	ldr	r3, [fp, #-12]
   2f050:	lsl	r3, r3, #2
   2f054:	sub	r2, fp, #4
   2f058:	add	r3, r2, r3
   2f05c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2f060:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f064:	ldr	r1, [fp, #-12]
   2f068:	add	r1, r1, #24
   2f06c:	ldr	r3, [r3, r1, lsl #2]
   2f070:	and	r2, r2, r3
   2f074:	ldr	r3, [fp, #-12]
   2f078:	lsl	r3, r3, #2
   2f07c:	sub	r1, fp, #4
   2f080:	add	r3, r1, r3
   2f084:	str	r2, [r3, #-96]	; 0xffffffa0
   2f088:	ldr	r3, [fp, #-12]
   2f08c:	lsl	r3, r3, #2
   2f090:	sub	r2, fp, #4
   2f094:	add	r3, r2, r3
   2f098:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f09c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f0a0:	orr	r3, r2, r3
   2f0a4:	str	r3, [fp, #-24]	; 0xffffffe8
   2f0a8:	ldr	r3, [fp, #-12]
   2f0ac:	add	r3, r3, #1
   2f0b0:	str	r3, [fp, #-12]
   2f0b4:	ldr	r3, [fp, #-12]
   2f0b8:	cmp	r3, #7
   2f0bc:	ble	2f04c <__assert_fail@plt+0x1db08>
   2f0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f0c4:	cmp	r3, #0
   2f0c8:	beq	2f664 <__assert_fail@plt+0x1e120>
   2f0cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f0d0:	and	r3, r3, #8
   2f0d4:	cmp	r3, #0
   2f0d8:	beq	2f25c <__assert_fail@plt+0x1dd18>
   2f0dc:	mov	r3, #0
   2f0e0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f0e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f0e8:	cmp	r3, #1
   2f0ec:	bne	2f118 <__assert_fail@plt+0x1dbd4>
   2f0f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f0f4:	ldrb	r3, [r3, #6]
   2f0f8:	and	r3, r3, #64	; 0x40
   2f0fc:	uxtb	r3, r3
   2f100:	cmp	r3, #0
   2f104:	beq	2f118 <__assert_fail@plt+0x1dbd4>
   2f108:	sub	r3, fp, #100	; 0x64
   2f10c:	mov	r0, r3
   2f110:	bl	1798c <__assert_fail@plt+0x6448>
   2f114:	b	2f670 <__assert_fail@plt+0x1e12c>
   2f118:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f11c:	ldr	r3, [r3, #92]	; 0x5c
   2f120:	cmp	r3, #1
   2f124:	ble	2f1cc <__assert_fail@plt+0x1dc88>
   2f128:	mov	r3, #0
   2f12c:	str	r3, [fp, #-12]
   2f130:	b	2f1bc <__assert_fail@plt+0x1dc78>
   2f134:	ldr	r3, [fp, #-12]
   2f138:	lsl	r3, r3, #2
   2f13c:	sub	r2, fp, #4
   2f140:	add	r3, r2, r3
   2f144:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2f148:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f14c:	ldr	r1, [fp, #-12]
   2f150:	add	r1, r1, #24
   2f154:	ldr	r1, [r3, r1, lsl #2]
   2f158:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f15c:	ldr	r0, [r3, #60]	; 0x3c
   2f160:	ldr	r3, [fp, #-12]
   2f164:	lsl	r3, r3, #2
   2f168:	add	r3, r0, r3
   2f16c:	ldr	r3, [r3]
   2f170:	and	r3, r3, r1
   2f174:	mvn	r3, r3
   2f178:	and	r2, r2, r3
   2f17c:	ldr	r3, [fp, #-12]
   2f180:	lsl	r3, r3, #2
   2f184:	sub	r1, fp, #4
   2f188:	add	r3, r1, r3
   2f18c:	str	r2, [r3, #-96]	; 0xffffffa0
   2f190:	ldr	r3, [fp, #-12]
   2f194:	lsl	r3, r3, #2
   2f198:	sub	r2, fp, #4
   2f19c:	add	r3, r2, r3
   2f1a0:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f1a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f1a8:	orr	r3, r2, r3
   2f1ac:	str	r3, [fp, #-28]	; 0xffffffe4
   2f1b0:	ldr	r3, [fp, #-12]
   2f1b4:	add	r3, r3, #1
   2f1b8:	str	r3, [fp, #-12]
   2f1bc:	ldr	r3, [fp, #-12]
   2f1c0:	cmp	r3, #7
   2f1c4:	ble	2f134 <__assert_fail@plt+0x1dbf0>
   2f1c8:	b	2f250 <__assert_fail@plt+0x1dd0c>
   2f1cc:	mov	r3, #0
   2f1d0:	str	r3, [fp, #-12]
   2f1d4:	b	2f244 <__assert_fail@plt+0x1dd00>
   2f1d8:	ldr	r3, [fp, #-12]
   2f1dc:	lsl	r3, r3, #2
   2f1e0:	sub	r2, fp, #4
   2f1e4:	add	r3, r2, r3
   2f1e8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2f1ec:	ldr	r3, [fp, #-168]	; 0xffffff58
   2f1f0:	ldr	r1, [fp, #-12]
   2f1f4:	add	r1, r1, #24
   2f1f8:	ldr	r3, [r3, r1, lsl #2]
   2f1fc:	mvn	r3, r3
   2f200:	and	r2, r2, r3
   2f204:	ldr	r3, [fp, #-12]
   2f208:	lsl	r3, r3, #2
   2f20c:	sub	r1, fp, #4
   2f210:	add	r3, r1, r3
   2f214:	str	r2, [r3, #-96]	; 0xffffffa0
   2f218:	ldr	r3, [fp, #-12]
   2f21c:	lsl	r3, r3, #2
   2f220:	sub	r2, fp, #4
   2f224:	add	r3, r2, r3
   2f228:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f22c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f230:	orr	r3, r2, r3
   2f234:	str	r3, [fp, #-28]	; 0xffffffe4
   2f238:	ldr	r3, [fp, #-12]
   2f23c:	add	r3, r3, #1
   2f240:	str	r3, [fp, #-12]
   2f244:	ldr	r3, [fp, #-12]
   2f248:	cmp	r3, #7
   2f24c:	ble	2f1d8 <__assert_fail@plt+0x1dc94>
   2f250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f254:	cmp	r3, #0
   2f258:	beq	2f66c <__assert_fail@plt+0x1e128>
   2f25c:	mov	r3, #0
   2f260:	str	r3, [fp, #-12]
   2f264:	b	2f590 <__assert_fail@plt+0x1e04c>
   2f268:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f26c:	cmp	r3, #1
   2f270:	bne	2f2ac <__assert_fail@plt+0x1dd68>
   2f274:	ldr	r3, [fp, #-12]
   2f278:	lsl	r3, r3, #5
   2f27c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2f280:	add	r2, r2, r3
   2f284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f288:	ldrb	r3, [r3]
   2f28c:	mov	r1, r3
   2f290:	mov	r0, r2
   2f294:	bl	17910 <__assert_fail@plt+0x63cc>
   2f298:	mov	r3, r0
   2f29c:	eor	r3, r3, #1
   2f2a0:	uxtb	r3, r3
   2f2a4:	cmp	r3, #0
   2f2a8:	bne	2f578 <__assert_fail@plt+0x1e034>
   2f2ac:	mov	r3, #0
   2f2b0:	str	r3, [fp, #-32]	; 0xffffffe0
   2f2b4:	mov	r3, #0
   2f2b8:	str	r3, [fp, #-16]
   2f2bc:	b	2f330 <__assert_fail@plt+0x1ddec>
   2f2c0:	ldr	r3, [fp, #-16]
   2f2c4:	lsl	r3, r3, #2
   2f2c8:	sub	r2, fp, #4
   2f2cc:	add	r3, r2, r3
   2f2d0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2f2d4:	ldr	r3, [fp, #-12]
   2f2d8:	lsl	r3, r3, #5
   2f2dc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2f2e0:	add	r3, r1, r3
   2f2e4:	ldr	r1, [fp, #-16]
   2f2e8:	ldr	r3, [r3, r1, lsl #2]
   2f2ec:	and	r2, r2, r3
   2f2f0:	ldr	r3, [fp, #-16]
   2f2f4:	lsl	r3, r3, #2
   2f2f8:	sub	r1, fp, #4
   2f2fc:	add	r3, r1, r3
   2f300:	str	r2, [r3, #-160]	; 0xffffff60
   2f304:	ldr	r3, [fp, #-16]
   2f308:	lsl	r3, r3, #2
   2f30c:	sub	r2, fp, #4
   2f310:	add	r3, r2, r3
   2f314:	ldr	r3, [r3, #-160]	; 0xffffff60
   2f318:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f31c:	orr	r3, r2, r3
   2f320:	str	r3, [fp, #-32]	; 0xffffffe0
   2f324:	ldr	r3, [fp, #-16]
   2f328:	add	r3, r3, #1
   2f32c:	str	r3, [fp, #-16]
   2f330:	ldr	r3, [fp, #-16]
   2f334:	cmp	r3, #7
   2f338:	ble	2f2c0 <__assert_fail@plt+0x1dd7c>
   2f33c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f340:	cmp	r3, #0
   2f344:	beq	2f580 <__assert_fail@plt+0x1e03c>
   2f348:	mov	r3, #0
   2f34c:	str	r3, [fp, #-40]	; 0xffffffd8
   2f350:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f354:	str	r3, [fp, #-36]	; 0xffffffdc
   2f358:	mov	r3, #0
   2f35c:	str	r3, [fp, #-16]
   2f360:	b	2f440 <__assert_fail@plt+0x1defc>
   2f364:	ldr	r3, [fp, #-16]
   2f368:	lsl	r3, r3, #2
   2f36c:	sub	r2, fp, #4
   2f370:	add	r3, r2, r3
   2f374:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f378:	mvn	r2, r3
   2f37c:	ldr	r3, [fp, #-12]
   2f380:	lsl	r3, r3, #5
   2f384:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2f388:	add	r3, r1, r3
   2f38c:	ldr	r1, [fp, #-16]
   2f390:	ldr	r3, [r3, r1, lsl #2]
   2f394:	and	r2, r2, r3
   2f398:	ldr	r3, [fp, #-16]
   2f39c:	lsl	r3, r3, #2
   2f3a0:	sub	r1, fp, #4
   2f3a4:	add	r3, r1, r3
   2f3a8:	str	r2, [r3, #-128]	; 0xffffff80
   2f3ac:	ldr	r3, [fp, #-16]
   2f3b0:	lsl	r3, r3, #2
   2f3b4:	sub	r2, fp, #4
   2f3b8:	add	r3, r2, r3
   2f3bc:	ldr	r3, [r3, #-128]	; 0xffffff80
   2f3c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f3c4:	orr	r3, r2, r3
   2f3c8:	str	r3, [fp, #-36]	; 0xffffffdc
   2f3cc:	ldr	r3, [fp, #-16]
   2f3d0:	lsl	r3, r3, #2
   2f3d4:	sub	r2, fp, #4
   2f3d8:	add	r3, r2, r3
   2f3dc:	ldr	r2, [r3, #-96]	; 0xffffffa0
   2f3e0:	ldr	r3, [fp, #-12]
   2f3e4:	lsl	r3, r3, #5
   2f3e8:	ldr	r1, [fp, #-180]	; 0xffffff4c
   2f3ec:	add	r3, r1, r3
   2f3f0:	ldr	r1, [fp, #-16]
   2f3f4:	ldr	r3, [r3, r1, lsl #2]
   2f3f8:	mvn	r3, r3
   2f3fc:	and	r2, r2, r3
   2f400:	ldr	r3, [fp, #-16]
   2f404:	lsl	r3, r3, #2
   2f408:	sub	r1, fp, #4
   2f40c:	add	r3, r1, r3
   2f410:	str	r2, [r3, #-96]	; 0xffffffa0
   2f414:	ldr	r3, [fp, #-16]
   2f418:	lsl	r3, r3, #2
   2f41c:	sub	r2, fp, #4
   2f420:	add	r3, r2, r3
   2f424:	ldr	r3, [r3, #-96]	; 0xffffffa0
   2f428:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2f42c:	orr	r3, r2, r3
   2f430:	str	r3, [fp, #-40]	; 0xffffffd8
   2f434:	ldr	r3, [fp, #-16]
   2f438:	add	r3, r3, #1
   2f43c:	str	r3, [fp, #-16]
   2f440:	ldr	r3, [fp, #-16]
   2f444:	cmp	r3, #7
   2f448:	ble	2f364 <__assert_fail@plt+0x1de20>
   2f44c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f450:	cmp	r3, #0
   2f454:	beq	2f50c <__assert_fail@plt+0x1dfc8>
   2f458:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f45c:	lsl	r3, r3, #5
   2f460:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2f464:	add	r3, r2, r3
   2f468:	sub	r2, fp, #132	; 0x84
   2f46c:	mov	r1, r2
   2f470:	mov	r0, r3
   2f474:	bl	179e4 <__assert_fail@plt+0x64a0>
   2f478:	ldr	r3, [fp, #-12]
   2f47c:	lsl	r3, r3, #5
   2f480:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2f484:	add	r3, r2, r3
   2f488:	sub	r2, fp, #164	; 0xa4
   2f48c:	mov	r1, r2
   2f490:	mov	r0, r3
   2f494:	bl	179e4 <__assert_fail@plt+0x64a0>
   2f498:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f49c:	mov	r3, r2
   2f4a0:	lsl	r3, r3, #1
   2f4a4:	add	r3, r3, r2
   2f4a8:	lsl	r3, r3, #2
   2f4ac:	mov	r2, r3
   2f4b0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2f4b4:	add	r0, r3, r2
   2f4b8:	ldr	r2, [fp, #-12]
   2f4bc:	mov	r3, r2
   2f4c0:	lsl	r3, r3, #1
   2f4c4:	add	r3, r3, r2
   2f4c8:	lsl	r3, r3, #2
   2f4cc:	mov	r2, r3
   2f4d0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2f4d4:	add	r3, r3, r2
   2f4d8:	mov	r1, r3
   2f4dc:	bl	1a958 <__assert_fail@plt+0x9414>
   2f4e0:	str	r0, [fp, #-64]	; 0xffffffc0
   2f4e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f4e8:	cmp	r3, #0
   2f4ec:	movne	r3, #1
   2f4f0:	moveq	r3, #0
   2f4f4:	uxtb	r3, r3
   2f4f8:	cmp	r3, #0
   2f4fc:	bne	2f6a0 <__assert_fail@plt+0x1e15c>
   2f500:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f504:	add	r3, r3, #1
   2f508:	str	r3, [fp, #-20]	; 0xffffffec
   2f50c:	ldr	r2, [fp, #-12]
   2f510:	mov	r3, r2
   2f514:	lsl	r3, r3, #1
   2f518:	add	r3, r3, r2
   2f51c:	lsl	r3, r3, #2
   2f520:	mov	r2, r3
   2f524:	ldr	r3, [fp, #-176]	; 0xffffff50
   2f528:	add	r0, r3, r2
   2f52c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f530:	ldr	r2, [r3, #8]
   2f534:	ldr	r3, [fp, #-8]
   2f538:	lsl	r3, r3, #2
   2f53c:	add	r3, r2, r3
   2f540:	ldr	r3, [r3]
   2f544:	mov	r1, r3
   2f548:	bl	1b6b4 <__assert_fail@plt+0xa170>
   2f54c:	mov	r3, r0
   2f550:	strb	r3, [fp, #-65]	; 0xffffffbf
   2f554:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   2f558:	eor	r3, r3, #1
   2f55c:	uxtb	r3, r3
   2f560:	cmp	r3, #0
   2f564:	bne	2f6a8 <__assert_fail@plt+0x1e164>
   2f568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f56c:	cmp	r3, #0
   2f570:	beq	2f5a4 <__assert_fail@plt+0x1e060>
   2f574:	b	2f584 <__assert_fail@plt+0x1e040>
   2f578:	nop			; (mov r0, r0)
   2f57c:	b	2f584 <__assert_fail@plt+0x1e040>
   2f580:	nop			; (mov r0, r0)
   2f584:	ldr	r3, [fp, #-12]
   2f588:	add	r3, r3, #1
   2f58c:	str	r3, [fp, #-12]
   2f590:	ldr	r2, [fp, #-12]
   2f594:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f598:	cmp	r2, r3
   2f59c:	blt	2f268 <__assert_fail@plt+0x1dd24>
   2f5a0:	b	2f5a8 <__assert_fail@plt+0x1e064>
   2f5a4:	nop			; (mov r0, r0)
   2f5a8:	ldr	r2, [fp, #-12]
   2f5ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5b0:	cmp	r2, r3
   2f5b4:	bne	2f670 <__assert_fail@plt+0x1e12c>
   2f5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5bc:	lsl	r3, r3, #5
   2f5c0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   2f5c4:	add	r3, r2, r3
   2f5c8:	sub	r2, fp, #100	; 0x64
   2f5cc:	mov	r1, r2
   2f5d0:	mov	r0, r3
   2f5d4:	bl	179e4 <__assert_fail@plt+0x64a0>
   2f5d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f5dc:	mov	r3, r2
   2f5e0:	lsl	r3, r3, #1
   2f5e4:	add	r3, r3, r2
   2f5e8:	lsl	r3, r3, #2
   2f5ec:	mov	r2, r3
   2f5f0:	ldr	r3, [fp, #-176]	; 0xffffff50
   2f5f4:	add	r0, r3, r2
   2f5f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f5fc:	ldr	r2, [r3, #8]
   2f600:	ldr	r3, [fp, #-8]
   2f604:	lsl	r3, r3, #2
   2f608:	add	r3, r2, r3
   2f60c:	ldr	r3, [r3]
   2f610:	mov	r1, r3
   2f614:	bl	1a7a4 <__assert_fail@plt+0x9260>
   2f618:	str	r0, [fp, #-64]	; 0xffffffc0
   2f61c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f620:	cmp	r3, #0
   2f624:	movne	r3, #1
   2f628:	moveq	r3, #0
   2f62c:	uxtb	r3, r3
   2f630:	cmp	r3, #0
   2f634:	bne	2f6b0 <__assert_fail@plt+0x1e16c>
   2f638:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f63c:	add	r3, r3, #1
   2f640:	str	r3, [fp, #-20]	; 0xffffffec
   2f644:	sub	r3, fp, #100	; 0x64
   2f648:	mov	r0, r3
   2f64c:	bl	1798c <__assert_fail@plt+0x6448>
   2f650:	b	2f670 <__assert_fail@plt+0x1e12c>
   2f654:	nop			; (mov r0, r0)
   2f658:	b	2f670 <__assert_fail@plt+0x1e12c>
   2f65c:	nop			; (mov r0, r0)
   2f660:	b	2f670 <__assert_fail@plt+0x1e12c>
   2f664:	nop			; (mov r0, r0)
   2f668:	b	2f670 <__assert_fail@plt+0x1e12c>
   2f66c:	nop			; (mov r0, r0)
   2f670:	ldr	r3, [fp, #-8]
   2f674:	add	r3, r3, #1
   2f678:	str	r3, [fp, #-8]
   2f67c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f680:	ldr	r2, [r3, #4]
   2f684:	ldr	r3, [fp, #-8]
   2f688:	cmp	r2, r3
   2f68c:	bgt	2ed24 <__assert_fail@plt+0x1d7e0>
   2f690:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f694:	cmp	r3, #256	; 0x100
   2f698:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f69c:	b	2f70c <__assert_fail@plt+0x1e1c8>
   2f6a0:	nop			; (mov r0, r0)
   2f6a4:	b	2f6b4 <__assert_fail@plt+0x1e170>
   2f6a8:	nop			; (mov r0, r0)
   2f6ac:	b	2f6b4 <__assert_fail@plt+0x1e170>
   2f6b0:	nop			; (mov r0, r0)
   2f6b4:	mov	r3, #0
   2f6b8:	str	r3, [fp, #-12]
   2f6bc:	b	2f6f8 <__assert_fail@plt+0x1e1b4>
   2f6c0:	ldr	r2, [fp, #-12]
   2f6c4:	mov	r3, r2
   2f6c8:	lsl	r3, r3, #1
   2f6cc:	add	r3, r3, r2
   2f6d0:	lsl	r3, r3, #2
   2f6d4:	mov	r2, r3
   2f6d8:	ldr	r3, [fp, #-176]	; 0xffffff50
   2f6dc:	add	r3, r3, r2
   2f6e0:	ldr	r3, [r3, #8]
   2f6e4:	mov	r0, r3
   2f6e8:	bl	14dec <__assert_fail@plt+0x38a8>
   2f6ec:	ldr	r3, [fp, #-12]
   2f6f0:	add	r3, r3, #1
   2f6f4:	str	r3, [fp, #-12]
   2f6f8:	ldr	r2, [fp, #-12]
   2f6fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f700:	cmp	r2, r3
   2f704:	blt	2f6c0 <__assert_fail@plt+0x1e17c>
   2f708:	mvn	r3, #0
   2f70c:	mov	r0, r3
   2f710:	sub	sp, fp, #4
   2f714:	pop	{fp, pc}
   2f718:	push	{fp, lr}
   2f71c:	add	fp, sp, #4
   2f720:	sub	sp, sp, #56	; 0x38
   2f724:	str	r0, [fp, #-48]	; 0xffffffd0
   2f728:	str	r1, [fp, #-52]	; 0xffffffcc
   2f72c:	str	r2, [fp, #-56]	; 0xffffffc8
   2f730:	str	r3, [fp, #-60]	; 0xffffffc4
   2f734:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f738:	ldr	r2, [r3]
   2f73c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f740:	lsl	r3, r3, #3
   2f744:	add	r3, r2, r3
   2f748:	str	r3, [fp, #-20]	; 0xffffffec
   2f74c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f750:	ldrb	r3, [r3, #4]
   2f754:	cmp	r3, #7
   2f758:	moveq	r3, #1
   2f75c:	movne	r3, #0
   2f760:	uxtb	r3, r3
   2f764:	cmp	r3, #0
   2f768:	beq	2f984 <__assert_fail@plt+0x1e440>
   2f76c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f770:	ldr	r2, [r3, #4]
   2f774:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f778:	add	r3, r2, r3
   2f77c:	ldrb	r3, [r3]
   2f780:	strb	r3, [fp, #-21]	; 0xffffffeb
   2f784:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f788:	cmp	r3, #193	; 0xc1
   2f78c:	movls	r3, #1
   2f790:	movhi	r3, #0
   2f794:	uxtb	r3, r3
   2f798:	cmp	r3, #0
   2f79c:	beq	2f7a8 <__assert_fail@plt+0x1e264>
   2f7a0:	mov	r3, #0
   2f7a4:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f7a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f7ac:	add	r2, r3, #2
   2f7b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f7b4:	ldr	r3, [r3, #48]	; 0x30
   2f7b8:	cmp	r2, r3
   2f7bc:	ble	2f7c8 <__assert_fail@plt+0x1e284>
   2f7c0:	mov	r3, #0
   2f7c4:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f7c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f7cc:	ldr	r2, [r3, #4]
   2f7d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f7d4:	add	r3, r3, #1
   2f7d8:	add	r3, r2, r3
   2f7dc:	ldrb	r3, [r3]
   2f7e0:	strb	r3, [fp, #-22]	; 0xffffffea
   2f7e4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f7e8:	cmp	r3, #223	; 0xdf
   2f7ec:	bhi	2f818 <__assert_fail@plt+0x1e2d4>
   2f7f0:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2f7f4:	cmp	r3, #0
   2f7f8:	bge	2f808 <__assert_fail@plt+0x1e2c4>
   2f7fc:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f800:	cmp	r3, #191	; 0xbf
   2f804:	bls	2f810 <__assert_fail@plt+0x1e2cc>
   2f808:	mov	r3, #0
   2f80c:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f810:	mov	r3, #2
   2f814:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f818:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f81c:	cmp	r3, #239	; 0xef
   2f820:	bhi	2f84c <__assert_fail@plt+0x1e308>
   2f824:	mov	r3, #3
   2f828:	str	r3, [fp, #-8]
   2f82c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f830:	cmp	r3, #224	; 0xe0
   2f834:	bne	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f838:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f83c:	cmp	r3, #159	; 0x9f
   2f840:	bhi	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f844:	mov	r3, #0
   2f848:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f84c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f850:	cmp	r3, #247	; 0xf7
   2f854:	bhi	2f880 <__assert_fail@plt+0x1e33c>
   2f858:	mov	r3, #4
   2f85c:	str	r3, [fp, #-8]
   2f860:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f864:	cmp	r3, #240	; 0xf0
   2f868:	bne	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f86c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f870:	cmp	r3, #143	; 0x8f
   2f874:	bhi	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f878:	mov	r3, #0
   2f87c:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f880:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f884:	cmp	r3, #251	; 0xfb
   2f888:	bhi	2f8b4 <__assert_fail@plt+0x1e370>
   2f88c:	mov	r3, #5
   2f890:	str	r3, [fp, #-8]
   2f894:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f898:	cmp	r3, #248	; 0xf8
   2f89c:	bne	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f8a0:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f8a4:	cmp	r3, #135	; 0x87
   2f8a8:	bhi	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f8ac:	mov	r3, #0
   2f8b0:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f8b4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f8b8:	cmp	r3, #253	; 0xfd
   2f8bc:	bhi	2f8e8 <__assert_fail@plt+0x1e3a4>
   2f8c0:	mov	r3, #6
   2f8c4:	str	r3, [fp, #-8]
   2f8c8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f8cc:	cmp	r3, #252	; 0xfc
   2f8d0:	bne	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f8d4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f8d8:	cmp	r3, #131	; 0x83
   2f8dc:	bhi	2f8f0 <__assert_fail@plt+0x1e3ac>
   2f8e0:	mov	r3, #0
   2f8e4:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f8e8:	mov	r3, #0
   2f8ec:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f8f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2f8f4:	ldr	r3, [fp, #-8]
   2f8f8:	add	r2, r2, r3
   2f8fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f900:	ldr	r3, [r3, #48]	; 0x30
   2f904:	cmp	r2, r3
   2f908:	ble	2f914 <__assert_fail@plt+0x1e3d0>
   2f90c:	mov	r3, #0
   2f910:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f914:	mov	r3, #1
   2f918:	str	r3, [fp, #-12]
   2f91c:	b	2f96c <__assert_fail@plt+0x1e428>
   2f920:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f924:	ldr	r3, [r3, #4]
   2f928:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f92c:	ldr	r2, [fp, #-12]
   2f930:	add	r2, r1, r2
   2f934:	add	r3, r3, r2
   2f938:	ldrb	r3, [r3]
   2f93c:	strb	r3, [fp, #-22]	; 0xffffffea
   2f940:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   2f944:	cmp	r3, #0
   2f948:	bge	2f958 <__assert_fail@plt+0x1e414>
   2f94c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   2f950:	cmp	r3, #191	; 0xbf
   2f954:	bls	2f960 <__assert_fail@plt+0x1e41c>
   2f958:	mov	r3, #0
   2f95c:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f960:	ldr	r3, [fp, #-12]
   2f964:	add	r3, r3, #1
   2f968:	str	r3, [fp, #-12]
   2f96c:	ldr	r2, [fp, #-12]
   2f970:	ldr	r3, [fp, #-8]
   2f974:	cmp	r2, r3
   2f978:	blt	2f920 <__assert_fail@plt+0x1e3dc>
   2f97c:	ldr	r3, [fp, #-8]
   2f980:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f984:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f988:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f98c:	bl	17b94 <__assert_fail@plt+0x6650>
   2f990:	str	r0, [fp, #-8]
   2f994:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f998:	ldrb	r3, [r3, #4]
   2f99c:	cmp	r3, #5
   2f9a0:	bne	2fa28 <__assert_fail@plt+0x1e4e4>
   2f9a4:	ldr	r3, [fp, #-8]
   2f9a8:	cmp	r3, #1
   2f9ac:	bgt	2f9b8 <__assert_fail@plt+0x1e474>
   2f9b0:	mov	r3, #0
   2f9b4:	b	2fc6c <__assert_fail@plt+0x1e728>
   2f9b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f9bc:	ldr	r3, [r3, #128]	; 0x80
   2f9c0:	and	r3, r3, #64	; 0x40
   2f9c4:	cmp	r3, #0
   2f9c8:	bne	2f9e8 <__assert_fail@plt+0x1e4a4>
   2f9cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f9d0:	ldr	r2, [r3, #4]
   2f9d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f9d8:	add	r3, r2, r3
   2f9dc:	ldrb	r3, [r3]
   2f9e0:	cmp	r3, #10
   2f9e4:	beq	2fa18 <__assert_fail@plt+0x1e4d4>
   2f9e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f9ec:	ldr	r3, [r3, #128]	; 0x80
   2f9f0:	and	r3, r3, #128	; 0x80
   2f9f4:	cmp	r3, #0
   2f9f8:	beq	2fa20 <__assert_fail@plt+0x1e4dc>
   2f9fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2fa00:	ldr	r2, [r3, #4]
   2fa04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2fa08:	add	r3, r2, r3
   2fa0c:	ldrb	r3, [r3]
   2fa10:	cmp	r3, #0
   2fa14:	bne	2fa20 <__assert_fail@plt+0x1e4dc>
   2fa18:	mov	r3, #0
   2fa1c:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fa20:	ldr	r3, [fp, #-8]
   2fa24:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fa28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fa2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fa30:	bl	17c9c <__assert_fail@plt+0x6758>
   2fa34:	str	r0, [fp, #-28]	; 0xffffffe4
   2fa38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fa3c:	cmp	r3, #1
   2fa40:	bgt	2fa50 <__assert_fail@plt+0x1e50c>
   2fa44:	ldr	r3, [fp, #-8]
   2fa48:	cmp	r3, #1
   2fa4c:	ble	2fa5c <__assert_fail@plt+0x1e518>
   2fa50:	ldr	r3, [fp, #-8]
   2fa54:	cmp	r3, #0
   2fa58:	bne	2fa64 <__assert_fail@plt+0x1e520>
   2fa5c:	mov	r3, #0
   2fa60:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fa64:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fa68:	ldrb	r3, [r3, #4]
   2fa6c:	cmp	r3, #6
   2fa70:	bne	2fc68 <__assert_fail@plt+0x1e724>
   2fa74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fa78:	ldr	r3, [r3]
   2fa7c:	str	r3, [fp, #-32]	; 0xffffffe0
   2fa80:	mov	r3, #0
   2fa84:	str	r3, [fp, #-16]
   2fa88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fa8c:	ldr	r3, [r3, #32]
   2fa90:	cmp	r3, #0
   2fa94:	bne	2fab8 <__assert_fail@plt+0x1e574>
   2fa98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fa9c:	ldr	r3, [r3, #36]	; 0x24
   2faa0:	cmp	r3, #0
   2faa4:	bne	2fab8 <__assert_fail@plt+0x1e574>
   2faa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2faac:	ldr	r3, [r3, #20]
   2fab0:	cmp	r3, #0
   2fab4:	beq	2facc <__assert_fail@plt+0x1e588>
   2fab8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fabc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2fac0:	bl	17c38 <__assert_fail@plt+0x66f4>
   2fac4:	mov	r3, r0
   2fac8:	b	2fad0 <__assert_fail@plt+0x1e58c>
   2facc:	mov	r3, #0
   2fad0:	str	r3, [fp, #-36]	; 0xffffffdc
   2fad4:	mov	r3, #0
   2fad8:	str	r3, [fp, #-12]
   2fadc:	b	2fb1c <__assert_fail@plt+0x1e5d8>
   2fae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fae4:	ldr	r2, [r3]
   2fae8:	ldr	r3, [fp, #-12]
   2faec:	lsl	r3, r3, #2
   2faf0:	add	r3, r2, r3
   2faf4:	ldr	r2, [r3]
   2faf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fafc:	cmp	r2, r3
   2fb00:	bne	2fb10 <__assert_fail@plt+0x1e5cc>
   2fb04:	ldr	r3, [fp, #-8]
   2fb08:	str	r3, [fp, #-16]
   2fb0c:	b	2fc1c <__assert_fail@plt+0x1e6d8>
   2fb10:	ldr	r3, [fp, #-12]
   2fb14:	add	r3, r3, #1
   2fb18:	str	r3, [fp, #-12]
   2fb1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb20:	ldr	r2, [r3, #20]
   2fb24:	ldr	r3, [fp, #-12]
   2fb28:	cmp	r2, r3
   2fb2c:	bgt	2fae0 <__assert_fail@plt+0x1e59c>
   2fb30:	mov	r3, #0
   2fb34:	str	r3, [fp, #-12]
   2fb38:	b	2fb88 <__assert_fail@plt+0x1e644>
   2fb3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb40:	ldr	r2, [r3, #12]
   2fb44:	ldr	r3, [fp, #-12]
   2fb48:	lsl	r3, r3, #2
   2fb4c:	add	r3, r2, r3
   2fb50:	ldr	r3, [r3]
   2fb54:	str	r3, [fp, #-40]	; 0xffffffd8
   2fb58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2fb5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2fb60:	bl	111cc <iswctype@plt>
   2fb64:	mov	r3, r0
   2fb68:	cmp	r3, #0
   2fb6c:	beq	2fb7c <__assert_fail@plt+0x1e638>
   2fb70:	ldr	r3, [fp, #-8]
   2fb74:	str	r3, [fp, #-16]
   2fb78:	b	2fc1c <__assert_fail@plt+0x1e6d8>
   2fb7c:	ldr	r3, [fp, #-12]
   2fb80:	add	r3, r3, #1
   2fb84:	str	r3, [fp, #-12]
   2fb88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb8c:	ldr	r2, [r3, #36]	; 0x24
   2fb90:	ldr	r3, [fp, #-12]
   2fb94:	cmp	r2, r3
   2fb98:	bgt	2fb3c <__assert_fail@plt+0x1e5f8>
   2fb9c:	mov	r3, #0
   2fba0:	str	r3, [fp, #-12]
   2fba4:	b	2fc08 <__assert_fail@plt+0x1e6c4>
   2fba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fbac:	ldr	r2, [r3, #4]
   2fbb0:	ldr	r3, [fp, #-12]
   2fbb4:	lsl	r3, r3, #2
   2fbb8:	add	r3, r2, r3
   2fbbc:	ldr	r2, [r3]
   2fbc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fbc4:	cmp	r2, r3
   2fbc8:	bhi	2fbfc <__assert_fail@plt+0x1e6b8>
   2fbcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fbd0:	ldr	r2, [r3, #8]
   2fbd4:	ldr	r3, [fp, #-12]
   2fbd8:	lsl	r3, r3, #2
   2fbdc:	add	r3, r2, r3
   2fbe0:	ldr	r2, [r3]
   2fbe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fbe8:	cmp	r2, r3
   2fbec:	bcc	2fbfc <__assert_fail@plt+0x1e6b8>
   2fbf0:	ldr	r3, [fp, #-8]
   2fbf4:	str	r3, [fp, #-16]
   2fbf8:	b	2fc1c <__assert_fail@plt+0x1e6d8>
   2fbfc:	ldr	r3, [fp, #-12]
   2fc00:	add	r3, r3, #1
   2fc04:	str	r3, [fp, #-12]
   2fc08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fc0c:	ldr	r2, [r3, #32]
   2fc10:	ldr	r3, [fp, #-12]
   2fc14:	cmp	r2, r3
   2fc18:	bgt	2fba8 <__assert_fail@plt+0x1e664>
   2fc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fc20:	ldrb	r3, [r3, #16]
   2fc24:	and	r3, r3, #1
   2fc28:	uxtb	r3, r3
   2fc2c:	cmp	r3, #0
   2fc30:	bne	2fc3c <__assert_fail@plt+0x1e6f8>
   2fc34:	ldr	r3, [fp, #-16]
   2fc38:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fc3c:	ldr	r3, [fp, #-16]
   2fc40:	cmp	r3, #0
   2fc44:	ble	2fc50 <__assert_fail@plt+0x1e70c>
   2fc48:	mov	r3, #0
   2fc4c:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fc50:	ldr	r2, [fp, #-8]
   2fc54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc58:	cmp	r2, r3
   2fc5c:	movge	r3, r2
   2fc60:	movlt	r3, r3
   2fc64:	b	2fc6c <__assert_fail@plt+0x1e728>
   2fc68:	mov	r3, #0
   2fc6c:	mov	r0, r3
   2fc70:	sub	sp, fp, #4
   2fc74:	pop	{fp, pc}
   2fc78:	push	{fp, lr}
   2fc7c:	add	fp, sp, #4
   2fc80:	sub	sp, sp, #24
   2fc84:	str	r0, [fp, #-16]
   2fc88:	str	r1, [fp, #-20]	; 0xffffffec
   2fc8c:	str	r2, [fp, #-24]	; 0xffffffe8
   2fc90:	ldr	r3, [fp, #-16]
   2fc94:	ldr	r2, [r3, #4]
   2fc98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc9c:	add	r3, r2, r3
   2fca0:	ldrb	r3, [r3]
   2fca4:	strb	r3, [fp, #-5]
   2fca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fcac:	ldrb	r3, [r3, #4]
   2fcb0:	sub	r3, r3, #1
   2fcb4:	cmp	r3, #6
   2fcb8:	ldrls	pc, [pc, r3, lsl #2]
   2fcbc:	b	2fd90 <__assert_fail@plt+0x1e84c>
   2fcc0:	ldrdeq	pc, [r2], -ip
   2fcc4:	muleq	r2, r0, sp
   2fcc8:	strdeq	pc, [r2], -r8
   2fccc:	muleq	r2, r0, sp
   2fcd0:	andeq	pc, r2, r0, asr #26
   2fcd4:	muleq	r2, r0, sp
   2fcd8:	andeq	pc, r2, ip, lsr #26
   2fcdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fce0:	ldrb	r3, [r3]
   2fce4:	ldrb	r2, [fp, #-5]
   2fce8:	cmp	r2, r3
   2fcec:	beq	2fd98 <__assert_fail@plt+0x1e854>
   2fcf0:	mov	r3, #0
   2fcf4:	b	2febc <__assert_fail@plt+0x1e978>
   2fcf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fcfc:	ldr	r3, [r3]
   2fd00:	ldrb	r2, [fp, #-5]
   2fd04:	mov	r1, r2
   2fd08:	mov	r0, r3
   2fd0c:	bl	17910 <__assert_fail@plt+0x63cc>
   2fd10:	mov	r3, r0
   2fd14:	eor	r3, r3, #1
   2fd18:	uxtb	r3, r3
   2fd1c:	cmp	r3, #0
   2fd20:	beq	2fda0 <__assert_fail@plt+0x1e85c>
   2fd24:	mov	r3, #0
   2fd28:	b	2febc <__assert_fail@plt+0x1e978>
   2fd2c:	ldrsb	r3, [fp, #-5]
   2fd30:	cmp	r3, #0
   2fd34:	bge	2fd40 <__assert_fail@plt+0x1e7fc>
   2fd38:	mov	r3, #0
   2fd3c:	b	2febc <__assert_fail@plt+0x1e978>
   2fd40:	ldrb	r3, [fp, #-5]
   2fd44:	cmp	r3, #10
   2fd48:	bne	2fd64 <__assert_fail@plt+0x1e820>
   2fd4c:	ldr	r3, [fp, #-16]
   2fd50:	ldr	r3, [r3, #84]	; 0x54
   2fd54:	ldr	r3, [r3, #128]	; 0x80
   2fd58:	and	r3, r3, #64	; 0x40
   2fd5c:	cmp	r3, #0
   2fd60:	beq	2fd88 <__assert_fail@plt+0x1e844>
   2fd64:	ldrb	r3, [fp, #-5]
   2fd68:	cmp	r3, #0
   2fd6c:	bne	2fda8 <__assert_fail@plt+0x1e864>
   2fd70:	ldr	r3, [fp, #-16]
   2fd74:	ldr	r3, [r3, #84]	; 0x54
   2fd78:	ldr	r3, [r3, #128]	; 0x80
   2fd7c:	and	r3, r3, #128	; 0x80
   2fd80:	cmp	r3, #0
   2fd84:	beq	2fda8 <__assert_fail@plt+0x1e864>
   2fd88:	mov	r3, #0
   2fd8c:	b	2febc <__assert_fail@plt+0x1e978>
   2fd90:	mov	r3, #0
   2fd94:	b	2febc <__assert_fail@plt+0x1e978>
   2fd98:	nop			; (mov r0, r0)
   2fd9c:	b	2fdac <__assert_fail@plt+0x1e868>
   2fda0:	nop			; (mov r0, r0)
   2fda4:	b	2fdac <__assert_fail@plt+0x1e868>
   2fda8:	nop			; (mov r0, r0)
   2fdac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fdb0:	ldr	r2, [r3, #4]
   2fdb4:	ldr	r3, [pc, #268]	; 2fec8 <__assert_fail@plt+0x1e984>
   2fdb8:	and	r3, r3, r2
   2fdbc:	cmp	r3, #0
   2fdc0:	beq	2feb8 <__assert_fail@plt+0x1e974>
   2fdc4:	ldr	r0, [fp, #-16]
   2fdc8:	ldr	r3, [fp, #-16]
   2fdcc:	ldr	r3, [r3, #88]	; 0x58
   2fdd0:	mov	r2, r3
   2fdd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fdd8:	bl	1a538 <__assert_fail@plt+0x8ff4>
   2fddc:	str	r0, [fp, #-12]
   2fde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fde4:	ldr	r3, [r3, #4]
   2fde8:	lsr	r3, r3, #8
   2fdec:	lsl	r3, r3, #22
   2fdf0:	lsr	r3, r3, #22
   2fdf4:	uxth	r3, r3
   2fdf8:	and	r3, r3, #4
   2fdfc:	cmp	r3, #0
   2fe00:	beq	2fe14 <__assert_fail@plt+0x1e8d0>
   2fe04:	ldr	r3, [fp, #-12]
   2fe08:	and	r3, r3, #1
   2fe0c:	cmp	r3, #0
   2fe10:	beq	2feb0 <__assert_fail@plt+0x1e96c>
   2fe14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe18:	ldr	r3, [r3, #4]
   2fe1c:	lsr	r3, r3, #8
   2fe20:	lsl	r3, r3, #22
   2fe24:	lsr	r3, r3, #22
   2fe28:	uxth	r3, r3
   2fe2c:	and	r3, r3, #8
   2fe30:	cmp	r3, #0
   2fe34:	beq	2fe48 <__assert_fail@plt+0x1e904>
   2fe38:	ldr	r3, [fp, #-12]
   2fe3c:	and	r3, r3, #1
   2fe40:	cmp	r3, #0
   2fe44:	bne	2feb0 <__assert_fail@plt+0x1e96c>
   2fe48:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe4c:	ldr	r3, [r3, #4]
   2fe50:	lsr	r3, r3, #8
   2fe54:	lsl	r3, r3, #22
   2fe58:	lsr	r3, r3, #22
   2fe5c:	uxth	r3, r3
   2fe60:	and	r3, r3, #32
   2fe64:	cmp	r3, #0
   2fe68:	beq	2fe7c <__assert_fail@plt+0x1e938>
   2fe6c:	ldr	r3, [fp, #-12]
   2fe70:	and	r3, r3, #2
   2fe74:	cmp	r3, #0
   2fe78:	beq	2feb0 <__assert_fail@plt+0x1e96c>
   2fe7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe80:	ldr	r3, [r3, #4]
   2fe84:	lsr	r3, r3, #8
   2fe88:	lsl	r3, r3, #22
   2fe8c:	lsr	r3, r3, #22
   2fe90:	uxth	r3, r3
   2fe94:	and	r3, r3, #128	; 0x80
   2fe98:	cmp	r3, #0
   2fe9c:	beq	2feb8 <__assert_fail@plt+0x1e974>
   2fea0:	ldr	r3, [fp, #-12]
   2fea4:	and	r3, r3, #8
   2fea8:	cmp	r3, #0
   2feac:	bne	2feb8 <__assert_fail@plt+0x1e974>
   2feb0:	mov	r3, #0
   2feb4:	b	2febc <__assert_fail@plt+0x1e978>
   2feb8:	mov	r3, #1
   2febc:	mov	r0, r3
   2fec0:	sub	sp, fp, #4
   2fec4:	pop	{fp, pc}
   2fec8:	andeq	pc, r3, r0, lsl #30
   2fecc:	push	{fp, lr}
   2fed0:	add	fp, sp, #4
   2fed4:	sub	sp, sp, #24
   2fed8:	str	r0, [fp, #-24]	; 0xffffffe8
   2fedc:	str	r1, [fp, #-28]	; 0xffffffe4
   2fee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fee4:	str	r3, [fp, #-8]
   2fee8:	ldr	r3, [fp, #-8]
   2feec:	ldr	r3, [r3, #36]	; 0x24
   2fef0:	cmn	r3, #-536870910	; 0xe0000002
   2fef4:	movhi	r3, #1
   2fef8:	movls	r3, #0
   2fefc:	uxtb	r3, r3
   2ff00:	cmp	r3, #0
   2ff04:	beq	2ff10 <__assert_fail@plt+0x1e9cc>
   2ff08:	mov	r3, #12
   2ff0c:	b	30070 <__assert_fail@plt+0x1eb2c>
   2ff10:	ldr	r3, [fp, #-8]
   2ff14:	ldr	r3, [r3, #36]	; 0x24
   2ff18:	lsl	r2, r3, #1
   2ff1c:	ldr	r3, [fp, #-8]
   2ff20:	ldr	r3, [r3, #48]	; 0x30
   2ff24:	cmp	r2, r3
   2ff28:	movlt	r2, r2
   2ff2c:	movge	r2, r3
   2ff30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ff34:	cmp	r2, r3
   2ff38:	movge	r3, r2
   2ff3c:	movlt	r3, r3
   2ff40:	mov	r1, r3
   2ff44:	ldr	r0, [fp, #-8]
   2ff48:	bl	18024 <__assert_fail@plt+0x6ae0>
   2ff4c:	str	r0, [fp, #-12]
   2ff50:	ldr	r3, [fp, #-12]
   2ff54:	cmp	r3, #0
   2ff58:	movne	r3, #1
   2ff5c:	moveq	r3, #0
   2ff60:	uxtb	r3, r3
   2ff64:	cmp	r3, #0
   2ff68:	beq	2ff74 <__assert_fail@plt+0x1ea30>
   2ff6c:	ldr	r3, [fp, #-12]
   2ff70:	b	30070 <__assert_fail@plt+0x1eb2c>
   2ff74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff78:	ldr	r3, [r3, #100]	; 0x64
   2ff7c:	cmp	r3, #0
   2ff80:	beq	2ffdc <__assert_fail@plt+0x1ea98>
   2ff84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff88:	ldr	r2, [r3, #100]	; 0x64
   2ff8c:	ldr	r3, [fp, #-8]
   2ff90:	ldr	r3, [r3, #36]	; 0x24
   2ff94:	add	r3, r3, #1
   2ff98:	lsl	r3, r3, #2
   2ff9c:	mov	r1, r3
   2ffa0:	mov	r0, r2
   2ffa4:	bl	332ec <__assert_fail@plt+0x21da8>
   2ffa8:	str	r0, [fp, #-16]
   2ffac:	ldr	r3, [fp, #-16]
   2ffb0:	cmp	r3, #0
   2ffb4:	moveq	r3, #1
   2ffb8:	movne	r3, #0
   2ffbc:	uxtb	r3, r3
   2ffc0:	cmp	r3, #0
   2ffc4:	beq	2ffd0 <__assert_fail@plt+0x1ea8c>
   2ffc8:	mov	r3, #12
   2ffcc:	b	30070 <__assert_fail@plt+0x1eb2c>
   2ffd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ffd4:	ldr	r2, [fp, #-16]
   2ffd8:	str	r2, [r3, #100]	; 0x64
   2ffdc:	ldr	r3, [fp, #-8]
   2ffe0:	ldrb	r3, [r3, #72]	; 0x48
   2ffe4:	cmp	r3, #0
   2ffe8:	beq	30038 <__assert_fail@plt+0x1eaf4>
   2ffec:	ldr	r3, [fp, #-8]
   2fff0:	ldr	r3, [r3, #80]	; 0x50
   2fff4:	cmp	r3, #1
   2fff8:	ble	3002c <__assert_fail@plt+0x1eae8>
   2fffc:	ldr	r0, [fp, #-8]
   30000:	bl	18650 <__assert_fail@plt+0x710c>
   30004:	str	r0, [fp, #-12]
   30008:	ldr	r3, [fp, #-12]
   3000c:	cmp	r3, #0
   30010:	movne	r3, #1
   30014:	moveq	r3, #0
   30018:	uxtb	r3, r3
   3001c:	cmp	r3, #0
   30020:	beq	3006c <__assert_fail@plt+0x1eb28>
   30024:	ldr	r3, [fp, #-12]
   30028:	b	30070 <__assert_fail@plt+0x1eb2c>
   3002c:	ldr	r0, [fp, #-8]
   30030:	bl	1931c <__assert_fail@plt+0x7dd8>
   30034:	b	3006c <__assert_fail@plt+0x1eb28>
   30038:	ldr	r3, [fp, #-8]
   3003c:	ldr	r3, [r3, #80]	; 0x50
   30040:	cmp	r3, #1
   30044:	ble	30054 <__assert_fail@plt+0x1eb10>
   30048:	ldr	r0, [fp, #-8]
   3004c:	bl	182d8 <__assert_fail@plt+0x6d94>
   30050:	b	3006c <__assert_fail@plt+0x1eb28>
   30054:	ldr	r3, [fp, #-8]
   30058:	ldr	r3, [r3, #64]	; 0x40
   3005c:	cmp	r3, #0
   30060:	beq	3006c <__assert_fail@plt+0x1eb28>
   30064:	ldr	r0, [fp, #-8]
   30068:	bl	1941c <__assert_fail@plt+0x7ed8>
   3006c:	mov	r3, #0
   30070:	mov	r0, r3
   30074:	sub	sp, fp, #4
   30078:	pop	{fp, pc}
   3007c:	push	{fp, lr}
   30080:	add	fp, sp, #4
   30084:	sub	sp, sp, #24
   30088:	str	r0, [fp, #-16]
   3008c:	str	r1, [fp, #-20]	; 0xffffffec
   30090:	str	r2, [fp, #-24]	; 0xffffffe8
   30094:	ldr	r3, [fp, #-16]
   30098:	ldr	r2, [fp, #-20]	; 0xffffffec
   3009c:	str	r2, [r3, #88]	; 0x58
   300a0:	ldr	r3, [fp, #-16]
   300a4:	mvn	r2, #0
   300a8:	str	r2, [r3, #92]	; 0x5c
   300ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300b0:	cmp	r3, #0
   300b4:	ble	301ac <__assert_fail@plt+0x1ec68>
   300b8:	mov	r3, #24
   300bc:	str	r3, [fp, #-8]
   300c0:	ldr	r1, [fp, #-8]
   300c4:	mvn	r0, #0
   300c8:	bl	34794 <__assert_fail@plt+0x23250>
   300cc:	mov	r3, r0
   300d0:	cmp	r3, #0
   300d4:	blt	300f0 <__assert_fail@plt+0x1ebac>
   300d8:	ldr	r1, [fp, #-8]
   300dc:	mvn	r0, #0
   300e0:	bl	34794 <__assert_fail@plt+0x23250>
   300e4:	mov	r3, r0
   300e8:	mov	r2, r3
   300ec:	b	300f4 <__assert_fail@plt+0x1ebb0>
   300f0:	mvn	r2, #-2147483648	; 0x80000000
   300f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300f8:	cmp	r2, r3
   300fc:	movcc	r3, #1
   30100:	movcs	r3, #0
   30104:	uxtb	r3, r3
   30108:	cmp	r3, #0
   3010c:	beq	30118 <__assert_fail@plt+0x1ebd4>
   30110:	mov	r3, #12
   30114:	b	301d4 <__assert_fail@plt+0x1ec90>
   30118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3011c:	mov	r3, r2
   30120:	lsl	r3, r3, #1
   30124:	add	r3, r3, r2
   30128:	lsl	r3, r3, #3
   3012c:	mov	r0, r3
   30130:	bl	33244 <__assert_fail@plt+0x21d00>
   30134:	mov	r3, r0
   30138:	mov	r2, r3
   3013c:	ldr	r3, [fp, #-16]
   30140:	str	r2, [r3, #116]	; 0x74
   30144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30148:	lsl	r3, r3, #2
   3014c:	mov	r0, r3
   30150:	bl	33244 <__assert_fail@plt+0x21d00>
   30154:	mov	r3, r0
   30158:	mov	r2, r3
   3015c:	ldr	r3, [fp, #-16]
   30160:	str	r2, [r3, #132]	; 0x84
   30164:	ldr	r3, [fp, #-16]
   30168:	ldr	r3, [r3, #116]	; 0x74
   3016c:	cmp	r3, #0
   30170:	moveq	r3, #1
   30174:	movne	r3, #0
   30178:	uxtb	r3, r3
   3017c:	cmp	r3, #0
   30180:	bne	301a4 <__assert_fail@plt+0x1ec60>
   30184:	ldr	r3, [fp, #-16]
   30188:	ldr	r3, [r3, #132]	; 0x84
   3018c:	cmp	r3, #0
   30190:	moveq	r3, #1
   30194:	movne	r3, #0
   30198:	uxtb	r3, r3
   3019c:	cmp	r3, #0
   301a0:	beq	301ac <__assert_fail@plt+0x1ec68>
   301a4:	mov	r3, #12
   301a8:	b	301d4 <__assert_fail@plt+0x1ec90>
   301ac:	ldr	r3, [fp, #-16]
   301b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   301b4:	str	r2, [r3, #112]	; 0x70
   301b8:	ldr	r3, [fp, #-16]
   301bc:	mov	r2, #1
   301c0:	str	r2, [r3, #120]	; 0x78
   301c4:	ldr	r3, [fp, #-16]
   301c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   301cc:	str	r2, [r3, #128]	; 0x80
   301d0:	mov	r3, #0
   301d4:	mov	r0, r3
   301d8:	sub	sp, fp, #4
   301dc:	pop	{fp, pc}
   301e0:	push	{fp, lr}
   301e4:	add	fp, sp, #4
   301e8:	sub	sp, sp, #24
   301ec:	str	r0, [fp, #-24]	; 0xffffffe8
   301f0:	mov	r3, #0
   301f4:	str	r3, [fp, #-8]
   301f8:	b	302d0 <__assert_fail@plt+0x1ed8c>
   301fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30200:	ldr	r2, [r3, #132]	; 0x84
   30204:	ldr	r3, [fp, #-8]
   30208:	lsl	r3, r3, #2
   3020c:	add	r3, r2, r3
   30210:	ldr	r3, [r3]
   30214:	str	r3, [fp, #-16]
   30218:	mov	r3, #0
   3021c:	str	r3, [fp, #-12]
   30220:	b	30264 <__assert_fail@plt+0x1ed20>
   30224:	ldr	r3, [fp, #-16]
   30228:	ldr	r2, [r3, #20]
   3022c:	ldr	r3, [fp, #-12]
   30230:	lsl	r3, r3, #2
   30234:	add	r3, r2, r3
   30238:	ldr	r3, [r3]
   3023c:	str	r3, [fp, #-20]	; 0xffffffec
   30240:	ldr	r3, [fp, #-20]	; 0xffffffec
   30244:	ldr	r3, [r3, #16]
   30248:	mov	r0, r3
   3024c:	bl	14dec <__assert_fail@plt+0x38a8>
   30250:	ldr	r0, [fp, #-20]	; 0xffffffec
   30254:	bl	14dec <__assert_fail@plt+0x38a8>
   30258:	ldr	r3, [fp, #-12]
   3025c:	add	r3, r3, #1
   30260:	str	r3, [fp, #-12]
   30264:	ldr	r3, [fp, #-16]
   30268:	ldr	r2, [r3, #16]
   3026c:	ldr	r3, [fp, #-12]
   30270:	cmp	r2, r3
   30274:	bgt	30224 <__assert_fail@plt+0x1ece0>
   30278:	ldr	r3, [fp, #-16]
   3027c:	ldr	r3, [r3, #20]
   30280:	mov	r0, r3
   30284:	bl	14dec <__assert_fail@plt+0x38a8>
   30288:	ldr	r3, [fp, #-16]
   3028c:	ldr	r3, [r3, #8]
   30290:	cmp	r3, #0
   30294:	beq	302bc <__assert_fail@plt+0x1ed78>
   30298:	ldr	r3, [fp, #-16]
   3029c:	ldr	r3, [r3, #8]
   302a0:	ldr	r3, [r3, #8]
   302a4:	mov	r0, r3
   302a8:	bl	14dec <__assert_fail@plt+0x38a8>
   302ac:	ldr	r3, [fp, #-16]
   302b0:	ldr	r3, [r3, #8]
   302b4:	mov	r0, r3
   302b8:	bl	14dec <__assert_fail@plt+0x38a8>
   302bc:	ldr	r0, [fp, #-16]
   302c0:	bl	14dec <__assert_fail@plt+0x38a8>
   302c4:	ldr	r3, [fp, #-8]
   302c8:	add	r3, r3, #1
   302cc:	str	r3, [fp, #-8]
   302d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302d4:	ldr	r2, [r3, #124]	; 0x7c
   302d8:	ldr	r3, [fp, #-8]
   302dc:	cmp	r2, r3
   302e0:	bgt	301fc <__assert_fail@plt+0x1ecb8>
   302e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302e8:	mov	r2, #0
   302ec:	str	r2, [r3, #124]	; 0x7c
   302f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302f4:	mov	r2, #0
   302f8:	str	r2, [r3, #108]	; 0x6c
   302fc:	nop			; (mov r0, r0)
   30300:	sub	sp, fp, #4
   30304:	pop	{fp, pc}
   30308:	push	{fp, lr}
   3030c:	add	fp, sp, #4
   30310:	sub	sp, sp, #8
   30314:	str	r0, [fp, #-8]
   30318:	ldr	r0, [fp, #-8]
   3031c:	bl	301e0 <__assert_fail@plt+0x1ec9c>
   30320:	ldr	r3, [fp, #-8]
   30324:	ldr	r3, [r3, #132]	; 0x84
   30328:	mov	r0, r3
   3032c:	bl	14dec <__assert_fail@plt+0x38a8>
   30330:	ldr	r3, [fp, #-8]
   30334:	ldr	r3, [r3, #116]	; 0x74
   30338:	mov	r0, r3
   3033c:	bl	14dec <__assert_fail@plt+0x38a8>
   30340:	nop			; (mov r0, r0)
   30344:	sub	sp, fp, #4
   30348:	pop	{fp, pc}
   3034c:	push	{fp, lr}
   30350:	add	fp, sp, #4
   30354:	sub	sp, sp, #24
   30358:	str	r0, [fp, #-16]
   3035c:	str	r1, [fp, #-20]	; 0xffffffec
   30360:	str	r2, [fp, #-24]	; 0xffffffe8
   30364:	str	r3, [fp, #-28]	; 0xffffffe4
   30368:	ldr	r3, [fp, #-16]
   3036c:	ldr	r2, [r3, #108]	; 0x6c
   30370:	ldr	r3, [fp, #-16]
   30374:	ldr	r3, [r3, #112]	; 0x70
   30378:	cmp	r2, r3
   3037c:	blt	30450 <__assert_fail@plt+0x1ef0c>
   30380:	ldr	r3, [fp, #-16]
   30384:	ldr	r0, [r3, #116]	; 0x74
   30388:	ldr	r3, [fp, #-16]
   3038c:	ldr	r2, [r3, #112]	; 0x70
   30390:	mov	r3, r2
   30394:	lsl	r3, r3, #1
   30398:	add	r3, r3, r2
   3039c:	lsl	r3, r3, #4
   303a0:	mov	r1, r3
   303a4:	bl	332ec <__assert_fail@plt+0x21da8>
   303a8:	str	r0, [fp, #-8]
   303ac:	ldr	r3, [fp, #-8]
   303b0:	cmp	r3, #0
   303b4:	moveq	r3, #1
   303b8:	movne	r3, #0
   303bc:	uxtb	r3, r3
   303c0:	cmp	r3, #0
   303c4:	beq	303e0 <__assert_fail@plt+0x1ee9c>
   303c8:	ldr	r3, [fp, #-16]
   303cc:	ldr	r3, [r3, #116]	; 0x74
   303d0:	mov	r0, r3
   303d4:	bl	14dec <__assert_fail@plt+0x38a8>
   303d8:	mov	r3, #12
   303dc:	b	30648 <__assert_fail@plt+0x1f104>
   303e0:	ldr	r3, [fp, #-16]
   303e4:	ldr	r2, [fp, #-8]
   303e8:	str	r2, [r3, #116]	; 0x74
   303ec:	ldr	r3, [fp, #-16]
   303f0:	ldr	r2, [r3, #116]	; 0x74
   303f4:	ldr	r3, [fp, #-16]
   303f8:	ldr	r3, [r3, #108]	; 0x6c
   303fc:	mov	r1, r3
   30400:	mov	r3, r1
   30404:	lsl	r3, r3, #1
   30408:	add	r3, r3, r1
   3040c:	lsl	r3, r3, #3
   30410:	add	r0, r2, r3
   30414:	ldr	r3, [fp, #-16]
   30418:	ldr	r3, [r3, #112]	; 0x70
   3041c:	mov	r2, r3
   30420:	mov	r3, r2
   30424:	lsl	r3, r3, #1
   30428:	add	r3, r3, r2
   3042c:	lsl	r3, r3, #3
   30430:	mov	r2, r3
   30434:	mov	r1, #0
   30438:	bl	11448 <memset@plt>
   3043c:	ldr	r3, [fp, #-16]
   30440:	ldr	r3, [r3, #112]	; 0x70
   30444:	lsl	r2, r3, #1
   30448:	ldr	r3, [fp, #-16]
   3044c:	str	r2, [r3, #112]	; 0x70
   30450:	ldr	r3, [fp, #-16]
   30454:	ldr	r3, [r3, #108]	; 0x6c
   30458:	cmp	r3, #0
   3045c:	ble	304d0 <__assert_fail@plt+0x1ef8c>
   30460:	ldr	r3, [fp, #-16]
   30464:	ldr	r2, [r3, #116]	; 0x74
   30468:	ldr	r3, [fp, #-16]
   3046c:	ldr	r3, [r3, #108]	; 0x6c
   30470:	mov	r1, r3
   30474:	mov	r3, r1
   30478:	lsl	r3, r3, #1
   3047c:	add	r3, r3, r1
   30480:	lsl	r3, r3, #3
   30484:	sub	r3, r3, #24
   30488:	add	r3, r2, r3
   3048c:	ldr	r2, [r3, #4]
   30490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30494:	cmp	r2, r3
   30498:	bne	304d0 <__assert_fail@plt+0x1ef8c>
   3049c:	ldr	r3, [fp, #-16]
   304a0:	ldr	r2, [r3, #116]	; 0x74
   304a4:	ldr	r3, [fp, #-16]
   304a8:	ldr	r3, [r3, #108]	; 0x6c
   304ac:	mov	r1, r3
   304b0:	mov	r3, r1
   304b4:	lsl	r3, r3, #1
   304b8:	add	r3, r3, r1
   304bc:	lsl	r3, r3, #3
   304c0:	sub	r3, r3, #24
   304c4:	add	r3, r2, r3
   304c8:	mov	r2, #1
   304cc:	strb	r2, [r3, #20]
   304d0:	ldr	r3, [fp, #-16]
   304d4:	ldr	r2, [r3, #116]	; 0x74
   304d8:	ldr	r3, [fp, #-16]
   304dc:	ldr	r3, [r3, #108]	; 0x6c
   304e0:	mov	r1, r3
   304e4:	mov	r3, r1
   304e8:	lsl	r3, r3, #1
   304ec:	add	r3, r3, r1
   304f0:	lsl	r3, r3, #3
   304f4:	add	r3, r2, r3
   304f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   304fc:	str	r2, [r3]
   30500:	ldr	r3, [fp, #-16]
   30504:	ldr	r2, [r3, #116]	; 0x74
   30508:	ldr	r3, [fp, #-16]
   3050c:	ldr	r3, [r3, #108]	; 0x6c
   30510:	mov	r1, r3
   30514:	mov	r3, r1
   30518:	lsl	r3, r3, #1
   3051c:	add	r3, r3, r1
   30520:	lsl	r3, r3, #3
   30524:	add	r3, r2, r3
   30528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3052c:	str	r2, [r3, #4]
   30530:	ldr	r3, [fp, #-16]
   30534:	ldr	r2, [r3, #116]	; 0x74
   30538:	ldr	r3, [fp, #-16]
   3053c:	ldr	r3, [r3, #108]	; 0x6c
   30540:	mov	r1, r3
   30544:	mov	r3, r1
   30548:	lsl	r3, r3, #1
   3054c:	add	r3, r3, r1
   30550:	lsl	r3, r3, #3
   30554:	add	r3, r2, r3
   30558:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3055c:	str	r2, [r3, #8]
   30560:	ldr	r3, [fp, #-16]
   30564:	ldr	r2, [r3, #116]	; 0x74
   30568:	ldr	r3, [fp, #-16]
   3056c:	ldr	r3, [r3, #108]	; 0x6c
   30570:	mov	r1, r3
   30574:	mov	r3, r1
   30578:	lsl	r3, r3, #1
   3057c:	add	r3, r3, r1
   30580:	lsl	r3, r3, #3
   30584:	add	r3, r2, r3
   30588:	ldr	r2, [fp, #4]
   3058c:	str	r2, [r3, #12]
   30590:	ldr	r3, [fp, #-16]
   30594:	ldr	r2, [r3, #116]	; 0x74
   30598:	ldr	r3, [fp, #-16]
   3059c:	ldr	r3, [r3, #108]	; 0x6c
   305a0:	mov	r1, r3
   305a4:	mov	r3, r1
   305a8:	lsl	r3, r3, #1
   305ac:	add	r3, r3, r1
   305b0:	lsl	r3, r3, #3
   305b4:	add	r3, r2, r3
   305b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   305bc:	ldr	r2, [fp, #4]
   305c0:	cmp	r1, r2
   305c4:	bne	305d0 <__assert_fail@plt+0x1f08c>
   305c8:	mvn	r2, #0
   305cc:	b	305d4 <__assert_fail@plt+0x1f090>
   305d0:	mov	r2, #0
   305d4:	str	r2, [r3, #16]
   305d8:	ldr	r3, [fp, #-16]
   305dc:	ldr	r2, [r3, #116]	; 0x74
   305e0:	ldr	r3, [fp, #-16]
   305e4:	ldr	r3, [r3, #108]	; 0x6c
   305e8:	add	r0, r3, #1
   305ec:	ldr	r1, [fp, #-16]
   305f0:	str	r0, [r1, #108]	; 0x6c
   305f4:	mov	r1, r3
   305f8:	mov	r3, r1
   305fc:	lsl	r3, r3, #1
   30600:	add	r3, r3, r1
   30604:	lsl	r3, r3, #3
   30608:	add	r3, r2, r3
   3060c:	mov	r2, #0
   30610:	strb	r2, [r3, #20]
   30614:	ldr	r3, [fp, #-16]
   30618:	ldr	r2, [r3, #120]	; 0x78
   3061c:	ldr	r1, [fp, #4]
   30620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30624:	sub	r3, r1, r3
   30628:	cmp	r2, r3
   3062c:	bge	30644 <__assert_fail@plt+0x1f100>
   30630:	ldr	r2, [fp, #4]
   30634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30638:	sub	r2, r2, r3
   3063c:	ldr	r3, [fp, #-16]
   30640:	str	r2, [r3, #120]	; 0x78
   30644:	mov	r3, #0
   30648:	mov	r0, r3
   3064c:	sub	sp, fp, #4
   30650:	pop	{fp, pc}
   30654:	push	{fp}		; (str fp, [sp, #-4]!)
   30658:	add	fp, sp, #0
   3065c:	sub	sp, sp, #28
   30660:	str	r0, [fp, #-24]	; 0xffffffe8
   30664:	str	r1, [fp, #-28]	; 0xffffffe4
   30668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3066c:	ldr	r3, [r3, #108]	; 0x6c
   30670:	str	r3, [fp, #-12]
   30674:	ldr	r3, [fp, #-12]
   30678:	str	r3, [fp, #-16]
   3067c:	mov	r3, #0
   30680:	str	r3, [fp, #-8]
   30684:	b	306ec <__assert_fail@plt+0x1f1a8>
   30688:	ldr	r2, [fp, #-8]
   3068c:	ldr	r3, [fp, #-12]
   30690:	add	r3, r2, r3
   30694:	lsr	r2, r3, #31
   30698:	add	r3, r2, r3
   3069c:	asr	r3, r3, #1
   306a0:	str	r3, [fp, #-20]	; 0xffffffec
   306a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   306a8:	ldr	r1, [r3, #116]	; 0x74
   306ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   306b0:	mov	r3, r2
   306b4:	lsl	r3, r3, #1
   306b8:	add	r3, r3, r2
   306bc:	lsl	r3, r3, #3
   306c0:	add	r3, r1, r3
   306c4:	ldr	r2, [r3, #4]
   306c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   306cc:	cmp	r2, r3
   306d0:	bge	306e4 <__assert_fail@plt+0x1f1a0>
   306d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   306d8:	add	r3, r3, #1
   306dc:	str	r3, [fp, #-8]
   306e0:	b	306ec <__assert_fail@plt+0x1f1a8>
   306e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   306e8:	str	r3, [fp, #-12]
   306ec:	ldr	r2, [fp, #-8]
   306f0:	ldr	r3, [fp, #-12]
   306f4:	cmp	r2, r3
   306f8:	blt	30688 <__assert_fail@plt+0x1f144>
   306fc:	ldr	r2, [fp, #-8]
   30700:	ldr	r3, [fp, #-16]
   30704:	cmp	r2, r3
   30708:	bge	30744 <__assert_fail@plt+0x1f200>
   3070c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30710:	ldr	r1, [r3, #116]	; 0x74
   30714:	ldr	r2, [fp, #-8]
   30718:	mov	r3, r2
   3071c:	lsl	r3, r3, #1
   30720:	add	r3, r3, r2
   30724:	lsl	r3, r3, #3
   30728:	add	r3, r1, r3
   3072c:	ldr	r2, [r3, #4]
   30730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30734:	cmp	r2, r3
   30738:	bne	30744 <__assert_fail@plt+0x1f200>
   3073c:	ldr	r3, [fp, #-8]
   30740:	b	30748 <__assert_fail@plt+0x1f204>
   30744:	mvn	r3, #0
   30748:	mov	r0, r3
   3074c:	add	sp, fp, #0
   30750:	pop	{fp}		; (ldr fp, [sp], #4)
   30754:	bx	lr
   30758:	push	{r4, fp, lr}
   3075c:	add	fp, sp, #8
   30760:	sub	sp, sp, #28
   30764:	str	r0, [fp, #-24]	; 0xffffffe8
   30768:	str	r1, [fp, #-28]	; 0xffffffe4
   3076c:	str	r2, [fp, #-32]	; 0xffffffe0
   30770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30774:	ldr	r3, [r3, #132]	; 0x84
   30778:	cmp	r3, #0
   3077c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30780:	ldr	r3, [r3, #128]	; 0x80
   30784:	cmp	r3, #0
   30788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3078c:	ldr	r2, [r3, #124]	; 0x7c
   30790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30794:	ldr	r3, [r3, #128]	; 0x80
   30798:	cmp	r2, r3
   3079c:	moveq	r3, #1
   307a0:	movne	r3, #0
   307a4:	uxtb	r3, r3
   307a8:	cmp	r3, #0
   307ac:	beq	3081c <__assert_fail@plt+0x1f2d8>
   307b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307b4:	ldr	r3, [r3, #128]	; 0x80
   307b8:	lsl	r3, r3, #1
   307bc:	str	r3, [fp, #-16]
   307c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307c4:	ldr	r2, [r3, #132]	; 0x84
   307c8:	ldr	r3, [fp, #-16]
   307cc:	lsl	r3, r3, #2
   307d0:	mov	r1, r3
   307d4:	mov	r0, r2
   307d8:	bl	332ec <__assert_fail@plt+0x21da8>
   307dc:	str	r0, [fp, #-20]	; 0xffffffec
   307e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   307e4:	cmp	r3, #0
   307e8:	moveq	r3, #1
   307ec:	movne	r3, #0
   307f0:	uxtb	r3, r3
   307f4:	cmp	r3, #0
   307f8:	beq	30804 <__assert_fail@plt+0x1f2c0>
   307fc:	mov	r3, #12
   30800:	b	308dc <__assert_fail@plt+0x1f398>
   30804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30808:	ldr	r2, [fp, #-20]	; 0xffffffec
   3080c:	str	r2, [r3, #132]	; 0x84
   30810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30814:	ldr	r2, [fp, #-16]
   30818:	str	r2, [r3, #128]	; 0x80
   3081c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30820:	ldr	r2, [r3, #132]	; 0x84
   30824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30828:	ldr	r3, [r3, #124]	; 0x7c
   3082c:	lsl	r3, r3, #2
   30830:	add	r4, r2, r3
   30834:	mov	r1, #24
   30838:	mov	r0, #1
   3083c:	bl	33180 <__assert_fail@plt+0x21c3c>
   30840:	mov	r3, r0
   30844:	str	r3, [r4]
   30848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3084c:	ldr	r2, [r3, #132]	; 0x84
   30850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30854:	ldr	r3, [r3, #124]	; 0x7c
   30858:	lsl	r3, r3, #2
   3085c:	add	r3, r2, r3
   30860:	ldr	r3, [r3]
   30864:	cmp	r3, #0
   30868:	moveq	r3, #1
   3086c:	movne	r3, #0
   30870:	uxtb	r3, r3
   30874:	cmp	r3, #0
   30878:	beq	30884 <__assert_fail@plt+0x1f340>
   3087c:	mov	r3, #12
   30880:	b	308dc <__assert_fail@plt+0x1f398>
   30884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30888:	ldr	r2, [r3, #132]	; 0x84
   3088c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30890:	ldr	r3, [r3, #124]	; 0x7c
   30894:	lsl	r3, r3, #2
   30898:	add	r3, r2, r3
   3089c:	ldr	r3, [r3]
   308a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   308a4:	str	r2, [r3, #4]
   308a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   308ac:	ldr	r2, [r3, #132]	; 0x84
   308b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   308b4:	ldr	r3, [r3, #124]	; 0x7c
   308b8:	add	r0, r3, #1
   308bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   308c0:	str	r0, [r1, #124]	; 0x7c
   308c4:	lsl	r3, r3, #2
   308c8:	add	r3, r2, r3
   308cc:	ldr	r3, [r3]
   308d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   308d4:	str	r2, [r3]
   308d8:	mov	r3, #0
   308dc:	mov	r0, r3
   308e0:	sub	sp, fp, #8
   308e4:	pop	{r4, fp, pc}
   308e8:	push	{fp, lr}
   308ec:	add	fp, sp, #4
   308f0:	sub	sp, sp, #32
   308f4:	str	r0, [fp, #-24]	; 0xffffffe8
   308f8:	str	r1, [fp, #-28]	; 0xffffffe4
   308fc:	str	r2, [fp, #-32]	; 0xffffffe0
   30900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30904:	ldr	r2, [r3, #16]
   30908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3090c:	ldr	r3, [r3, #12]
   30910:	cmp	r2, r3
   30914:	moveq	r3, #1
   30918:	movne	r3, #0
   3091c:	uxtb	r3, r3
   30920:	cmp	r3, #0
   30924:	beq	30998 <__assert_fail@plt+0x1f454>
   30928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3092c:	ldr	r3, [r3, #12]
   30930:	lsl	r3, r3, #1
   30934:	add	r3, r3, #1
   30938:	str	r3, [fp, #-8]
   3093c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30940:	ldr	r2, [r3, #20]
   30944:	ldr	r3, [fp, #-8]
   30948:	lsl	r3, r3, #2
   3094c:	mov	r1, r3
   30950:	mov	r0, r2
   30954:	bl	332ec <__assert_fail@plt+0x21da8>
   30958:	str	r0, [fp, #-12]
   3095c:	ldr	r3, [fp, #-12]
   30960:	cmp	r3, #0
   30964:	moveq	r3, #1
   30968:	movne	r3, #0
   3096c:	uxtb	r3, r3
   30970:	cmp	r3, #0
   30974:	beq	30980 <__assert_fail@plt+0x1f43c>
   30978:	mov	r3, #0
   3097c:	b	30a18 <__assert_fail@plt+0x1f4d4>
   30980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30984:	ldr	r2, [fp, #-12]
   30988:	str	r2, [r3, #20]
   3098c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30990:	ldr	r2, [fp, #-8]
   30994:	str	r2, [r3, #12]
   30998:	mov	r1, #20
   3099c:	mov	r0, #1
   309a0:	bl	33180 <__assert_fail@plt+0x21c3c>
   309a4:	mov	r3, r0
   309a8:	str	r3, [fp, #-16]
   309ac:	ldr	r3, [fp, #-16]
   309b0:	cmp	r3, #0
   309b4:	movne	r3, #1
   309b8:	moveq	r3, #0
   309bc:	uxtb	r3, r3
   309c0:	cmp	r3, #0
   309c4:	beq	30a14 <__assert_fail@plt+0x1f4d0>
   309c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   309cc:	ldr	r2, [r3, #20]
   309d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   309d4:	ldr	r3, [r3, #16]
   309d8:	lsl	r3, r3, #2
   309dc:	add	r3, r2, r3
   309e0:	ldr	r2, [fp, #-16]
   309e4:	str	r2, [r3]
   309e8:	ldr	r3, [fp, #-16]
   309ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   309f0:	str	r2, [r3]
   309f4:	ldr	r3, [fp, #-16]
   309f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   309fc:	str	r2, [r3, #4]
   30a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a04:	ldr	r3, [r3, #16]
   30a08:	add	r2, r3, #1
   30a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a10:	str	r2, [r3, #16]
   30a14:	ldr	r3, [fp, #-16]
   30a18:	mov	r0, r3
   30a1c:	sub	sp, fp, #4
   30a20:	pop	{fp, pc}
   30a24:	push	{fp, lr}
   30a28:	add	fp, sp, #4
   30a2c:	sub	sp, sp, #16
   30a30:	str	r0, [fp, #-8]
   30a34:	str	r1, [fp, #-12]
   30a38:	str	r2, [fp, #-16]
   30a3c:	str	r3, [fp, #-20]	; 0xffffffec
   30a40:	ldr	r3, [fp, #-8]
   30a44:	ldr	r2, [fp, #-12]
   30a48:	str	r2, [r3]
   30a4c:	ldr	r3, [fp, #-8]
   30a50:	ldr	r2, [fp, #-16]
   30a54:	str	r2, [r3, #4]
   30a58:	ldr	r3, [fp, #-8]
   30a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a60:	str	r2, [r3, #8]
   30a64:	ldr	r3, [fp, #-8]
   30a68:	ldr	r2, [fp, #4]
   30a6c:	str	r2, [r3, #12]
   30a70:	ldr	r3, [fp, #-8]
   30a74:	add	r3, r3, #16
   30a78:	mov	r2, #12
   30a7c:	mov	r1, #0
   30a80:	mov	r0, r3
   30a84:	bl	11448 <memset@plt>
   30a88:	nop			; (mov r0, r0)
   30a8c:	sub	sp, fp, #4
   30a90:	pop	{fp, pc}
   30a94:	push	{fp, lr}
   30a98:	add	fp, sp, #4
   30a9c:	sub	sp, sp, #24
   30aa0:	str	r0, [fp, #-16]
   30aa4:	str	r1, [fp, #-20]	; 0xffffffec
   30aa8:	str	r2, [fp, #-24]	; 0xffffffe8
   30aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30ab0:	ldr	r1, [fp, #-20]	; 0xffffffec
   30ab4:	ldr	r0, [fp, #-16]
   30ab8:	bl	111f0 <read@plt>
   30abc:	str	r0, [fp, #-8]
   30ac0:	ldr	r3, [fp, #-8]
   30ac4:	cmp	r3, #0
   30ac8:	blt	30ad4 <__assert_fail@plt+0x1f590>
   30acc:	ldr	r3, [fp, #-8]
   30ad0:	b	30b28 <__assert_fail@plt+0x1f5e4>
   30ad4:	bl	11418 <__errno_location@plt>
   30ad8:	mov	r3, r0
   30adc:	ldr	r3, [r3]
   30ae0:	cmp	r3, #4
   30ae4:	beq	30b20 <__assert_fail@plt+0x1f5dc>
   30ae8:	bl	11418 <__errno_location@plt>
   30aec:	mov	r3, r0
   30af0:	ldr	r3, [r3]
   30af4:	cmp	r3, #22
   30af8:	bne	30b18 <__assert_fail@plt+0x1f5d4>
   30afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30b00:	ldr	r2, [pc, #44]	; 30b34 <__assert_fail@plt+0x1f5f0>
   30b04:	cmp	r3, r2
   30b08:	bls	30b18 <__assert_fail@plt+0x1f5d4>
   30b0c:	ldr	r3, [pc, #32]	; 30b34 <__assert_fail@plt+0x1f5f0>
   30b10:	str	r3, [fp, #-24]	; 0xffffffe8
   30b14:	b	30b24 <__assert_fail@plt+0x1f5e0>
   30b18:	ldr	r3, [fp, #-8]
   30b1c:	b	30b28 <__assert_fail@plt+0x1f5e4>
   30b20:	nop			; (mov r0, r0)
   30b24:	b	30aac <__assert_fail@plt+0x1f568>
   30b28:	mov	r0, r3
   30b2c:	sub	sp, fp, #4
   30b30:	pop	{fp, pc}
   30b34:	svcvc	0x00f00000	; IMB
   30b38:	push	{fp, lr}
   30b3c:	add	fp, sp, #4
   30b40:	sub	sp, sp, #8
   30b44:	str	r0, [fp, #-8]
   30b48:	mov	r2, #3
   30b4c:	mov	r1, #0
   30b50:	ldr	r0, [fp, #-8]
   30b54:	bl	33a28 <__assert_fail@plt+0x224e4>
   30b58:	mov	r3, r0
   30b5c:	mov	r0, r3
   30b60:	sub	sp, fp, #4
   30b64:	pop	{fp, pc}
   30b68:	push	{r4, r5, r6, r7, fp, lr}
   30b6c:	add	fp, sp, #20
   30b70:	sub	sp, sp, #48	; 0x30
   30b74:	str	r0, [fp, #-24]	; 0xffffffe8
   30b78:	str	r1, [fp, #-28]	; 0xffffffe4
   30b7c:	str	r2, [fp, #-32]	; 0xffffffe0
   30b80:	str	r3, [fp, #-36]	; 0xffffffdc
   30b84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30b88:	cmp	r3, #0
   30b8c:	beq	30bb0 <__assert_fail@plt+0x1f66c>
   30b90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30b94:	str	r3, [sp]
   30b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30b9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30ba0:	ldr	r1, [pc, #1260]	; 31094 <__assert_fail@plt+0x1fb50>
   30ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30ba8:	bl	1140c <fprintf@plt>
   30bac:	b	30bc4 <__assert_fail@plt+0x1f680>
   30bb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30bb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30bb8:	ldr	r1, [pc, #1240]	; 31098 <__assert_fail@plt+0x1fb54>
   30bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30bc0:	bl	1140c <fprintf@plt>
   30bc4:	ldr	r0, [pc, #1232]	; 3109c <__assert_fail@plt+0x1fb58>
   30bc8:	bl	113e8 <gettext@plt>
   30bcc:	mov	r2, r0
   30bd0:	ldr	r3, [pc, #1224]	; 310a0 <__assert_fail@plt+0x1fb5c>
   30bd4:	ldr	r1, [pc, #1224]	; 310a4 <__assert_fail@plt+0x1fb60>
   30bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30bdc:	bl	1140c <fprintf@plt>
   30be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30be4:	mov	r0, #10
   30be8:	bl	112b0 <fputc_unlocked@plt>
   30bec:	ldr	r0, [pc, #1204]	; 310a8 <__assert_fail@plt+0x1fb64>
   30bf0:	bl	113e8 <gettext@plt>
   30bf4:	mov	r3, r0
   30bf8:	ldr	r2, [pc, #1196]	; 310ac <__assert_fail@plt+0x1fb68>
   30bfc:	mov	r1, r3
   30c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c04:	bl	1140c <fprintf@plt>
   30c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30c0c:	mov	r0, #10
   30c10:	bl	112b0 <fputc_unlocked@plt>
   30c14:	ldr	r3, [fp, #8]
   30c18:	cmp	r3, #9
   30c1c:	ldrls	pc, [pc, r3, lsl #2]
   30c20:	b	30fdc <__assert_fail@plt+0x1fa98>
   30c24:	andeq	r1, r3, r4, lsl #1
   30c28:	andeq	r0, r3, ip, asr #24
   30c2c:	andeq	r0, r3, r0, ror ip
   30c30:	muleq	r3, ip, ip
   30c34:	ldrdeq	r0, [r3], -ip
   30c38:	andeq	r0, r3, r4, lsr sp
   30c3c:	muleq	r3, ip, sp
   30c40:	andeq	r0, r3, r4, lsl lr
   30c44:	muleq	r3, ip, lr
   30c48:	andeq	r0, r3, r4, lsr pc
   30c4c:	ldr	r0, [pc, #1116]	; 310b0 <__assert_fail@plt+0x1fb6c>
   30c50:	bl	113e8 <gettext@plt>
   30c54:	mov	r1, r0
   30c58:	ldr	r3, [fp, #4]
   30c5c:	ldr	r3, [r3]
   30c60:	mov	r2, r3
   30c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c68:	bl	1140c <fprintf@plt>
   30c6c:	b	31088 <__assert_fail@plt+0x1fb44>
   30c70:	ldr	r0, [pc, #1084]	; 310b4 <__assert_fail@plt+0x1fb70>
   30c74:	bl	113e8 <gettext@plt>
   30c78:	mov	r1, r0
   30c7c:	ldr	r3, [fp, #4]
   30c80:	ldr	r2, [r3]
   30c84:	ldr	r3, [fp, #4]
   30c88:	add	r3, r3, #4
   30c8c:	ldr	r3, [r3]
   30c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c94:	bl	1140c <fprintf@plt>
   30c98:	b	31088 <__assert_fail@plt+0x1fb44>
   30c9c:	ldr	r0, [pc, #1044]	; 310b8 <__assert_fail@plt+0x1fb74>
   30ca0:	bl	113e8 <gettext@plt>
   30ca4:	ldr	r3, [fp, #4]
   30ca8:	ldr	r2, [r3]
   30cac:	ldr	r3, [fp, #4]
   30cb0:	add	r3, r3, #4
   30cb4:	ldr	r1, [r3]
   30cb8:	ldr	r3, [fp, #4]
   30cbc:	add	r3, r3, #8
   30cc0:	ldr	r3, [r3]
   30cc4:	str	r3, [sp]
   30cc8:	mov	r3, r1
   30ccc:	mov	r1, r0
   30cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30cd4:	bl	1140c <fprintf@plt>
   30cd8:	b	31088 <__assert_fail@plt+0x1fb44>
   30cdc:	ldr	r0, [pc, #984]	; 310bc <__assert_fail@plt+0x1fb78>
   30ce0:	bl	113e8 <gettext@plt>
   30ce4:	mov	ip, r0
   30ce8:	ldr	r3, [fp, #4]
   30cec:	ldr	r1, [r3]
   30cf0:	ldr	r3, [fp, #4]
   30cf4:	add	r3, r3, #4
   30cf8:	ldr	r0, [r3]
   30cfc:	ldr	r3, [fp, #4]
   30d00:	add	r3, r3, #8
   30d04:	ldr	r3, [r3]
   30d08:	ldr	r2, [fp, #4]
   30d0c:	add	r2, r2, #12
   30d10:	ldr	r2, [r2]
   30d14:	str	r2, [sp, #4]
   30d18:	str	r3, [sp]
   30d1c:	mov	r3, r0
   30d20:	mov	r2, r1
   30d24:	mov	r1, ip
   30d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d2c:	bl	1140c <fprintf@plt>
   30d30:	b	31088 <__assert_fail@plt+0x1fb44>
   30d34:	ldr	r0, [pc, #900]	; 310c0 <__assert_fail@plt+0x1fb7c>
   30d38:	bl	113e8 <gettext@plt>
   30d3c:	mov	lr, r0
   30d40:	ldr	r3, [fp, #4]
   30d44:	ldr	r0, [r3]
   30d48:	ldr	r3, [fp, #4]
   30d4c:	add	r3, r3, #4
   30d50:	ldr	ip, [r3]
   30d54:	ldr	r3, [fp, #4]
   30d58:	add	r3, r3, #8
   30d5c:	ldr	r3, [r3]
   30d60:	ldr	r2, [fp, #4]
   30d64:	add	r2, r2, #12
   30d68:	ldr	r2, [r2]
   30d6c:	ldr	r1, [fp, #4]
   30d70:	add	r1, r1, #16
   30d74:	ldr	r1, [r1]
   30d78:	str	r1, [sp, #8]
   30d7c:	str	r2, [sp, #4]
   30d80:	str	r3, [sp]
   30d84:	mov	r3, ip
   30d88:	mov	r2, r0
   30d8c:	mov	r1, lr
   30d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30d94:	bl	1140c <fprintf@plt>
   30d98:	b	31088 <__assert_fail@plt+0x1fb44>
   30d9c:	ldr	r0, [pc, #800]	; 310c4 <__assert_fail@plt+0x1fb80>
   30da0:	bl	113e8 <gettext@plt>
   30da4:	mov	r4, r0
   30da8:	ldr	r3, [fp, #4]
   30dac:	ldr	ip, [r3]
   30db0:	ldr	r3, [fp, #4]
   30db4:	add	r3, r3, #4
   30db8:	ldr	lr, [r3]
   30dbc:	ldr	r3, [fp, #4]
   30dc0:	add	r3, r3, #8
   30dc4:	ldr	r3, [r3]
   30dc8:	ldr	r2, [fp, #4]
   30dcc:	add	r2, r2, #12
   30dd0:	ldr	r2, [r2]
   30dd4:	ldr	r1, [fp, #4]
   30dd8:	add	r1, r1, #16
   30ddc:	ldr	r1, [r1]
   30de0:	ldr	r0, [fp, #4]
   30de4:	add	r0, r0, #20
   30de8:	ldr	r0, [r0]
   30dec:	str	r0, [sp, #12]
   30df0:	str	r1, [sp, #8]
   30df4:	str	r2, [sp, #4]
   30df8:	str	r3, [sp]
   30dfc:	mov	r3, lr
   30e00:	mov	r2, ip
   30e04:	mov	r1, r4
   30e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30e0c:	bl	1140c <fprintf@plt>
   30e10:	b	31088 <__assert_fail@plt+0x1fb44>
   30e14:	ldr	r0, [pc, #684]	; 310c8 <__assert_fail@plt+0x1fb84>
   30e18:	bl	113e8 <gettext@plt>
   30e1c:	mov	r5, r0
   30e20:	ldr	r3, [fp, #4]
   30e24:	ldr	lr, [r3]
   30e28:	ldr	r3, [fp, #4]
   30e2c:	add	r3, r3, #4
   30e30:	ldr	r4, [r3]
   30e34:	ldr	r3, [fp, #4]
   30e38:	add	r3, r3, #8
   30e3c:	ldr	r3, [r3]
   30e40:	ldr	r2, [fp, #4]
   30e44:	add	r2, r2, #12
   30e48:	ldr	r2, [r2]
   30e4c:	ldr	r1, [fp, #4]
   30e50:	add	r1, r1, #16
   30e54:	ldr	r1, [r1]
   30e58:	ldr	r0, [fp, #4]
   30e5c:	add	r0, r0, #20
   30e60:	ldr	r0, [r0]
   30e64:	ldr	ip, [fp, #4]
   30e68:	add	ip, ip, #24
   30e6c:	ldr	ip, [ip]
   30e70:	str	ip, [sp, #16]
   30e74:	str	r0, [sp, #12]
   30e78:	str	r1, [sp, #8]
   30e7c:	str	r2, [sp, #4]
   30e80:	str	r3, [sp]
   30e84:	mov	r3, r4
   30e88:	mov	r2, lr
   30e8c:	mov	r1, r5
   30e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30e94:	bl	1140c <fprintf@plt>
   30e98:	b	31088 <__assert_fail@plt+0x1fb44>
   30e9c:	ldr	r0, [pc, #552]	; 310cc <__assert_fail@plt+0x1fb88>
   30ea0:	bl	113e8 <gettext@plt>
   30ea4:	mov	r6, r0
   30ea8:	ldr	r3, [fp, #4]
   30eac:	ldr	r4, [r3]
   30eb0:	ldr	r3, [fp, #4]
   30eb4:	add	r3, r3, #4
   30eb8:	ldr	r5, [r3]
   30ebc:	ldr	r3, [fp, #4]
   30ec0:	add	r3, r3, #8
   30ec4:	ldr	r3, [r3]
   30ec8:	ldr	r2, [fp, #4]
   30ecc:	add	r2, r2, #12
   30ed0:	ldr	r2, [r2]
   30ed4:	ldr	r1, [fp, #4]
   30ed8:	add	r1, r1, #16
   30edc:	ldr	r1, [r1]
   30ee0:	ldr	r0, [fp, #4]
   30ee4:	add	r0, r0, #20
   30ee8:	ldr	r0, [r0]
   30eec:	ldr	ip, [fp, #4]
   30ef0:	add	ip, ip, #24
   30ef4:	ldr	ip, [ip]
   30ef8:	ldr	lr, [fp, #4]
   30efc:	add	lr, lr, #28
   30f00:	ldr	lr, [lr]
   30f04:	str	lr, [sp, #20]
   30f08:	str	ip, [sp, #16]
   30f0c:	str	r0, [sp, #12]
   30f10:	str	r1, [sp, #8]
   30f14:	str	r2, [sp, #4]
   30f18:	str	r3, [sp]
   30f1c:	mov	r3, r5
   30f20:	mov	r2, r4
   30f24:	mov	r1, r6
   30f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30f2c:	bl	1140c <fprintf@plt>
   30f30:	b	31088 <__assert_fail@plt+0x1fb44>
   30f34:	ldr	r0, [pc, #404]	; 310d0 <__assert_fail@plt+0x1fb8c>
   30f38:	bl	113e8 <gettext@plt>
   30f3c:	mov	r7, r0
   30f40:	ldr	r3, [fp, #4]
   30f44:	ldr	r5, [r3]
   30f48:	ldr	r3, [fp, #4]
   30f4c:	add	r3, r3, #4
   30f50:	ldr	r6, [r3]
   30f54:	ldr	r3, [fp, #4]
   30f58:	add	r3, r3, #8
   30f5c:	ldr	r3, [r3]
   30f60:	ldr	r2, [fp, #4]
   30f64:	add	r2, r2, #12
   30f68:	ldr	r2, [r2]
   30f6c:	ldr	r1, [fp, #4]
   30f70:	add	r1, r1, #16
   30f74:	ldr	r1, [r1]
   30f78:	ldr	r0, [fp, #4]
   30f7c:	add	r0, r0, #20
   30f80:	ldr	r0, [r0]
   30f84:	ldr	ip, [fp, #4]
   30f88:	add	ip, ip, #24
   30f8c:	ldr	ip, [ip]
   30f90:	ldr	lr, [fp, #4]
   30f94:	add	lr, lr, #28
   30f98:	ldr	lr, [lr]
   30f9c:	ldr	r4, [fp, #4]
   30fa0:	add	r4, r4, #32
   30fa4:	ldr	r4, [r4]
   30fa8:	str	r4, [sp, #24]
   30fac:	str	lr, [sp, #20]
   30fb0:	str	ip, [sp, #16]
   30fb4:	str	r0, [sp, #12]
   30fb8:	str	r1, [sp, #8]
   30fbc:	str	r2, [sp, #4]
   30fc0:	str	r3, [sp]
   30fc4:	mov	r3, r6
   30fc8:	mov	r2, r5
   30fcc:	mov	r1, r7
   30fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30fd4:	bl	1140c <fprintf@plt>
   30fd8:	b	31088 <__assert_fail@plt+0x1fb44>
   30fdc:	ldr	r0, [pc, #240]	; 310d4 <__assert_fail@plt+0x1fb90>
   30fe0:	bl	113e8 <gettext@plt>
   30fe4:	mov	r7, r0
   30fe8:	ldr	r3, [fp, #4]
   30fec:	ldr	r5, [r3]
   30ff0:	ldr	r3, [fp, #4]
   30ff4:	add	r3, r3, #4
   30ff8:	ldr	r6, [r3]
   30ffc:	ldr	r3, [fp, #4]
   31000:	add	r3, r3, #8
   31004:	ldr	r3, [r3]
   31008:	ldr	r2, [fp, #4]
   3100c:	add	r2, r2, #12
   31010:	ldr	r2, [r2]
   31014:	ldr	r1, [fp, #4]
   31018:	add	r1, r1, #16
   3101c:	ldr	r1, [r1]
   31020:	ldr	r0, [fp, #4]
   31024:	add	r0, r0, #20
   31028:	ldr	r0, [r0]
   3102c:	ldr	ip, [fp, #4]
   31030:	add	ip, ip, #24
   31034:	ldr	ip, [ip]
   31038:	ldr	lr, [fp, #4]
   3103c:	add	lr, lr, #28
   31040:	ldr	lr, [lr]
   31044:	ldr	r4, [fp, #4]
   31048:	add	r4, r4, #32
   3104c:	ldr	r4, [r4]
   31050:	str	r4, [sp, #24]
   31054:	str	lr, [sp, #20]
   31058:	str	ip, [sp, #16]
   3105c:	str	r0, [sp, #12]
   31060:	str	r1, [sp, #8]
   31064:	str	r2, [sp, #4]
   31068:	str	r3, [sp]
   3106c:	mov	r3, r6
   31070:	mov	r2, r5
   31074:	mov	r1, r7
   31078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3107c:	bl	1140c <fprintf@plt>
   31080:	b	31088 <__assert_fail@plt+0x1fb44>
   31084:	nop			; (mov r0, r0)
   31088:	nop			; (mov r0, r0)
   3108c:	sub	sp, fp, #20
   31090:	pop	{r4, r5, r6, r7, fp, pc}
   31094:	andeq	r5, r3, ip, asr #29
   31098:	ldrdeq	r5, [r3], -r8
   3109c:	andeq	r5, r3, r0, ror #29
   310a0:	andeq	r0, r0, r6, ror #15
   310a4:	strdeq	r6, [r3], -r0
   310a8:	andeq	r5, r3, r4, ror #29
   310ac:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   310b0:			; <UNDEFINED> instruction: 0x00035fb4
   310b4:	andeq	r5, r3, r4, asr #31
   310b8:	ldrdeq	r5, [r3], -ip
   310bc:	strdeq	r5, [r3], -r8
   310c0:	andeq	r6, r3, r8, lsl r0
   310c4:	andeq	r6, r3, ip, lsr r0
   310c8:	andeq	r6, r3, r4, rrx
   310cc:	muleq	r3, r0, r0
   310d0:	andeq	r6, r3, r0, asr #1
   310d4:	strdeq	r6, [r3], -r4
   310d8:	push	{fp, lr}
   310dc:	add	fp, sp, #4
   310e0:	sub	sp, sp, #32
   310e4:	str	r0, [fp, #-16]
   310e8:	str	r1, [fp, #-20]	; 0xffffffec
   310ec:	str	r2, [fp, #-24]	; 0xffffffe8
   310f0:	str	r3, [fp, #-28]	; 0xffffffe4
   310f4:	mov	r3, #0
   310f8:	str	r3, [fp, #-8]
   310fc:	b	3110c <__assert_fail@plt+0x1fbc8>
   31100:	ldr	r3, [fp, #-8]
   31104:	add	r3, r3, #1
   31108:	str	r3, [fp, #-8]
   3110c:	ldr	r3, [fp, #-8]
   31110:	lsl	r3, r3, #2
   31114:	ldr	r2, [fp, #4]
   31118:	add	r3, r2, r3
   3111c:	ldr	r3, [r3]
   31120:	cmp	r3, #0
   31124:	bne	31100 <__assert_fail@plt+0x1fbbc>
   31128:	ldr	r3, [fp, #-8]
   3112c:	str	r3, [sp, #4]
   31130:	ldr	r3, [fp, #4]
   31134:	str	r3, [sp]
   31138:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3113c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31140:	ldr	r1, [fp, #-20]	; 0xffffffec
   31144:	ldr	r0, [fp, #-16]
   31148:	bl	30b68 <__assert_fail@plt+0x1f624>
   3114c:	nop			; (mov r0, r0)
   31150:	sub	sp, fp, #4
   31154:	pop	{fp, pc}
   31158:	push	{fp, lr}
   3115c:	add	fp, sp, #4
   31160:	sub	sp, sp, #72	; 0x48
   31164:	str	r0, [fp, #-56]	; 0xffffffc8
   31168:	str	r1, [fp, #-60]	; 0xffffffc4
   3116c:	str	r2, [fp, #-64]	; 0xffffffc0
   31170:	str	r3, [fp, #-68]	; 0xffffffbc
   31174:	mov	r3, #0
   31178:	str	r3, [fp, #-8]
   3117c:	b	3118c <__assert_fail@plt+0x1fc48>
   31180:	ldr	r3, [fp, #-8]
   31184:	add	r3, r3, #1
   31188:	str	r3, [fp, #-8]
   3118c:	ldr	r3, [fp, #-8]
   31190:	cmp	r3, #9
   31194:	bhi	311d8 <__assert_fail@plt+0x1fc94>
   31198:	ldr	r3, [fp, #4]
   3119c:	add	r2, r3, #4
   311a0:	str	r2, [fp, #4]
   311a4:	ldr	r2, [r3]
   311a8:	ldr	r3, [fp, #-8]
   311ac:	lsl	r3, r3, #2
   311b0:	sub	r1, fp, #4
   311b4:	add	r3, r1, r3
   311b8:	str	r2, [r3, #-44]	; 0xffffffd4
   311bc:	ldr	r3, [fp, #-8]
   311c0:	lsl	r3, r3, #2
   311c4:	sub	r2, fp, #4
   311c8:	add	r3, r2, r3
   311cc:	ldr	r3, [r3, #-44]	; 0xffffffd4
   311d0:	cmp	r3, #0
   311d4:	bne	31180 <__assert_fail@plt+0x1fc3c>
   311d8:	ldr	r3, [fp, #-8]
   311dc:	str	r3, [sp, #4]
   311e0:	sub	r3, fp, #48	; 0x30
   311e4:	str	r3, [sp]
   311e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   311ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   311f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   311f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   311f8:	bl	30b68 <__assert_fail@plt+0x1f624>
   311fc:	nop			; (mov r0, r0)
   31200:	sub	sp, fp, #4
   31204:	pop	{fp, pc}
   31208:	push	{r3}		; (str r3, [sp, #-4]!)
   3120c:	push	{fp, lr}
   31210:	add	fp, sp, #4
   31214:	sub	sp, sp, #36	; 0x24
   31218:	str	r0, [fp, #-20]	; 0xffffffec
   3121c:	str	r1, [fp, #-24]	; 0xffffffe8
   31220:	str	r2, [fp, #-28]	; 0xffffffe4
   31224:	add	r3, fp, #8
   31228:	str	r3, [fp, #-12]
   3122c:	ldr	r3, [fp, #-12]
   31230:	str	r3, [sp]
   31234:	ldr	r3, [fp, #4]
   31238:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3123c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31240:	ldr	r0, [fp, #-20]	; 0xffffffec
   31244:	bl	31158 <__assert_fail@plt+0x1fc14>
   31248:	nop			; (mov r0, r0)
   3124c:	sub	sp, fp, #4
   31250:	pop	{fp, lr}
   31254:	add	sp, sp, #4
   31258:	bx	lr
   3125c:	push	{fp, lr}
   31260:	add	fp, sp, #4
   31264:	ldr	r3, [pc, #96]	; 312cc <__assert_fail@plt+0x1fd88>
   31268:	ldr	r3, [r3]
   3126c:	mov	r1, r3
   31270:	mov	r0, #10
   31274:	bl	112b0 <fputc_unlocked@plt>
   31278:	ldr	r0, [pc, #80]	; 312d0 <__assert_fail@plt+0x1fd8c>
   3127c:	bl	113e8 <gettext@plt>
   31280:	mov	r3, r0
   31284:	ldr	r1, [pc, #72]	; 312d4 <__assert_fail@plt+0x1fd90>
   31288:	mov	r0, r3
   3128c:	bl	111e4 <printf@plt>
   31290:	ldr	r0, [pc, #64]	; 312d8 <__assert_fail@plt+0x1fd94>
   31294:	bl	113e8 <gettext@plt>
   31298:	mov	r3, r0
   3129c:	ldr	r2, [pc, #56]	; 312dc <__assert_fail@plt+0x1fd98>
   312a0:	ldr	r1, [pc, #56]	; 312e0 <__assert_fail@plt+0x1fd9c>
   312a4:	mov	r0, r3
   312a8:	bl	111e4 <printf@plt>
   312ac:	ldr	r0, [pc, #48]	; 312e4 <__assert_fail@plt+0x1fda0>
   312b0:	bl	113e8 <gettext@plt>
   312b4:	mov	r3, r0
   312b8:	ldr	r1, [pc, #40]	; 312e8 <__assert_fail@plt+0x1fda4>
   312bc:	mov	r0, r3
   312c0:	bl	111e4 <printf@plt>
   312c4:	nop			; (mov r0, r0)
   312c8:	pop	{fp, pc}
   312cc:	andeq	r7, r4, r4, asr #3
   312d0:	andeq	r6, r3, r0, lsr r1
   312d4:	andeq	r6, r3, r4, asr #2
   312d8:	andeq	r6, r3, ip, asr r1
   312dc:	andeq	r6, r3, r0, ror r1
   312e0:	muleq	r3, r8, r1
   312e4:	andeq	r6, r3, r8, lsr #3
   312e8:	ldrdeq	r6, [r3], -r0
   312ec:	push	{fp, lr}
   312f0:	add	fp, sp, #4
   312f4:	sub	sp, sp, #16
   312f8:	str	r0, [fp, #-8]
   312fc:	str	r1, [fp, #-12]
   31300:	str	r2, [fp, #-16]
   31304:	ldr	r2, [fp, #-16]
   31308:	ldr	r1, [fp, #-12]
   3130c:	ldr	r0, [fp, #-8]
   31310:	bl	3147c <__assert_fail@plt+0x1ff38>
   31314:	mov	r3, r0
   31318:	mov	r0, r3
   3131c:	sub	sp, fp, #4
   31320:	pop	{fp, pc}
   31324:	push	{fp, lr}
   31328:	add	fp, sp, #4
   3132c:	sub	sp, sp, #8
   31330:	str	r0, [fp, #-8]
   31334:	ldr	r3, [fp, #-8]
   31338:	cmp	r3, #0
   3133c:	bne	31344 <__assert_fail@plt+0x1fe00>
   31340:	bl	118b4 <__assert_fail@plt+0x370>
   31344:	ldr	r3, [fp, #-8]
   31348:	mov	r0, r3
   3134c:	sub	sp, fp, #4
   31350:	pop	{fp, pc}
   31354:	push	{fp, lr}
   31358:	add	fp, sp, #4
   3135c:	sub	sp, sp, #8
   31360:	str	r0, [fp, #-8]
   31364:	ldr	r0, [fp, #-8]
   31368:	bl	33244 <__assert_fail@plt+0x21d00>
   3136c:	mov	r3, r0
   31370:	mov	r0, r3
   31374:	bl	31324 <__assert_fail@plt+0x1fde0>
   31378:	mov	r3, r0
   3137c:	mov	r0, r3
   31380:	sub	sp, fp, #4
   31384:	pop	{fp, pc}
   31388:	push	{fp, lr}
   3138c:	add	fp, sp, #4
   31390:	sub	sp, sp, #8
   31394:	str	r0, [fp, #-8]
   31398:	ldr	r0, [fp, #-8]
   3139c:	bl	33dcc <__assert_fail@plt+0x22888>
   313a0:	mov	r3, r0
   313a4:	mov	r0, r3
   313a8:	bl	31324 <__assert_fail@plt+0x1fde0>
   313ac:	mov	r3, r0
   313b0:	mov	r0, r3
   313b4:	sub	sp, fp, #4
   313b8:	pop	{fp, pc}
   313bc:	push	{fp, lr}
   313c0:	add	fp, sp, #4
   313c4:	sub	sp, sp, #8
   313c8:	str	r0, [fp, #-8]
   313cc:	ldr	r0, [fp, #-8]
   313d0:	bl	31354 <__assert_fail@plt+0x1fe10>
   313d4:	mov	r3, r0
   313d8:	mov	r0, r3
   313dc:	sub	sp, fp, #4
   313e0:	pop	{fp, pc}
   313e4:	push	{fp, lr}
   313e8:	add	fp, sp, #4
   313ec:	sub	sp, sp, #16
   313f0:	str	r0, [fp, #-16]
   313f4:	str	r1, [fp, #-20]	; 0xffffffec
   313f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   313fc:	ldr	r0, [fp, #-16]
   31400:	bl	332ec <__assert_fail@plt+0x21da8>
   31404:	str	r0, [fp, #-8]
   31408:	ldr	r3, [fp, #-8]
   3140c:	cmp	r3, #0
   31410:	bne	31430 <__assert_fail@plt+0x1feec>
   31414:	ldr	r3, [fp, #-16]
   31418:	cmp	r3, #0
   3141c:	beq	3142c <__assert_fail@plt+0x1fee8>
   31420:	ldr	r3, [fp, #-20]	; 0xffffffec
   31424:	cmp	r3, #0
   31428:	beq	31430 <__assert_fail@plt+0x1feec>
   3142c:	bl	118b4 <__assert_fail@plt+0x370>
   31430:	ldr	r3, [fp, #-8]
   31434:	mov	r0, r3
   31438:	sub	sp, fp, #4
   3143c:	pop	{fp, pc}
   31440:	push	{fp, lr}
   31444:	add	fp, sp, #4
   31448:	sub	sp, sp, #8
   3144c:	str	r0, [fp, #-8]
   31450:	str	r1, [fp, #-12]
   31454:	ldr	r1, [fp, #-12]
   31458:	ldr	r0, [fp, #-8]
   3145c:	bl	33df8 <__assert_fail@plt+0x228b4>
   31460:	mov	r3, r0
   31464:	mov	r0, r3
   31468:	bl	31324 <__assert_fail@plt+0x1fde0>
   3146c:	mov	r3, r0
   31470:	mov	r0, r3
   31474:	sub	sp, fp, #4
   31478:	pop	{fp, pc}
   3147c:	push	{fp, lr}
   31480:	add	fp, sp, #4
   31484:	sub	sp, sp, #24
   31488:	str	r0, [fp, #-16]
   3148c:	str	r1, [fp, #-20]	; 0xffffffec
   31490:	str	r2, [fp, #-24]	; 0xffffffe8
   31494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31498:	ldr	r1, [fp, #-20]	; 0xffffffec
   3149c:	ldr	r0, [fp, #-16]
   314a0:	bl	33fec <__assert_fail@plt+0x22aa8>
   314a4:	str	r0, [fp, #-8]
   314a8:	ldr	r3, [fp, #-8]
   314ac:	cmp	r3, #0
   314b0:	bne	314dc <__assert_fail@plt+0x1ff98>
   314b4:	ldr	r3, [fp, #-16]
   314b8:	cmp	r3, #0
   314bc:	beq	314d8 <__assert_fail@plt+0x1ff94>
   314c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   314c4:	cmp	r3, #0
   314c8:	beq	314dc <__assert_fail@plt+0x1ff98>
   314cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   314d0:	cmp	r3, #0
   314d4:	beq	314dc <__assert_fail@plt+0x1ff98>
   314d8:	bl	118b4 <__assert_fail@plt+0x370>
   314dc:	ldr	r3, [fp, #-8]
   314e0:	mov	r0, r3
   314e4:	sub	sp, fp, #4
   314e8:	pop	{fp, pc}
   314ec:	push	{fp, lr}
   314f0:	add	fp, sp, #4
   314f4:	sub	sp, sp, #16
   314f8:	str	r0, [fp, #-8]
   314fc:	str	r1, [fp, #-12]
   31500:	str	r2, [fp, #-16]
   31504:	ldr	r2, [fp, #-16]
   31508:	ldr	r1, [fp, #-12]
   3150c:	ldr	r0, [fp, #-8]
   31510:	bl	33e80 <__assert_fail@plt+0x2293c>
   31514:	mov	r3, r0
   31518:	mov	r0, r3
   3151c:	bl	31324 <__assert_fail@plt+0x1fde0>
   31520:	mov	r3, r0
   31524:	mov	r0, r3
   31528:	sub	sp, fp, #4
   3152c:	pop	{fp, pc}
   31530:	push	{fp, lr}
   31534:	add	fp, sp, #4
   31538:	sub	sp, sp, #8
   3153c:	str	r0, [fp, #-8]
   31540:	str	r1, [fp, #-12]
   31544:	ldr	r2, [fp, #-12]
   31548:	ldr	r1, [fp, #-8]
   3154c:	mov	r0, #0
   31550:	bl	3147c <__assert_fail@plt+0x1ff38>
   31554:	mov	r3, r0
   31558:	mov	r0, r3
   3155c:	sub	sp, fp, #4
   31560:	pop	{fp, pc}
   31564:	push	{fp, lr}
   31568:	add	fp, sp, #4
   3156c:	sub	sp, sp, #8
   31570:	str	r0, [fp, #-8]
   31574:	str	r1, [fp, #-12]
   31578:	ldr	r2, [fp, #-12]
   3157c:	ldr	r1, [fp, #-8]
   31580:	mov	r0, #0
   31584:	bl	314ec <__assert_fail@plt+0x1ffa8>
   31588:	mov	r3, r0
   3158c:	mov	r0, r3
   31590:	sub	sp, fp, #4
   31594:	pop	{fp, pc}
   31598:	push	{fp, lr}
   3159c:	add	fp, sp, #4
   315a0:	sub	sp, sp, #8
   315a4:	str	r0, [fp, #-8]
   315a8:	str	r1, [fp, #-12]
   315ac:	mov	r2, #1
   315b0:	ldr	r1, [fp, #-12]
   315b4:	ldr	r0, [fp, #-8]
   315b8:	bl	315cc <__assert_fail@plt+0x20088>
   315bc:	mov	r3, r0
   315c0:	mov	r0, r3
   315c4:	sub	sp, fp, #4
   315c8:	pop	{fp, pc}
   315cc:	push	{fp, lr}
   315d0:	add	fp, sp, #4
   315d4:	sub	sp, sp, #24
   315d8:	str	r0, [fp, #-16]
   315dc:	str	r1, [fp, #-20]	; 0xffffffec
   315e0:	str	r2, [fp, #-24]	; 0xffffffe8
   315e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   315e8:	ldr	r3, [r3]
   315ec:	str	r3, [fp, #-8]
   315f0:	ldr	r3, [fp, #-16]
   315f4:	cmp	r3, #0
   315f8:	bne	31644 <__assert_fail@plt+0x20100>
   315fc:	ldr	r3, [fp, #-8]
   31600:	cmp	r3, #0
   31604:	bne	316a8 <__assert_fail@plt+0x20164>
   31608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3160c:	mov	r0, #64	; 0x40
   31610:	bl	34794 <__assert_fail@plt+0x23250>
   31614:	mov	r3, r0
   31618:	str	r3, [fp, #-8]
   3161c:	ldr	r3, [fp, #-8]
   31620:	cmp	r3, #0
   31624:	moveq	r3, #1
   31628:	movne	r3, #0
   3162c:	uxtb	r3, r3
   31630:	mov	r2, r3
   31634:	ldr	r3, [fp, #-8]
   31638:	add	r3, r2, r3
   3163c:	str	r3, [fp, #-8]
   31640:	b	316a8 <__assert_fail@plt+0x20164>
   31644:	ldr	r3, [fp, #-8]
   31648:	lsr	r3, r3, #1
   3164c:	add	r3, r3, #1
   31650:	mvn	r2, r3
   31654:	ldr	r3, [fp, #-8]
   31658:	cmp	r2, r3
   3165c:	bcs	31680 <__assert_fail@plt+0x2013c>
   31660:	ldr	r3, [fp, #-8]
   31664:	lsr	r2, r3, #1
   31668:	ldr	r3, [fp, #-8]
   3166c:	add	r3, r2, r3
   31670:	add	r3, r3, #1
   31674:	str	r3, [fp, #-8]
   31678:	mov	r3, #1
   3167c:	b	3169c <__assert_fail@plt+0x20158>
   31680:	ldr	r3, [fp, #-8]
   31684:	lsr	r2, r3, #1
   31688:	ldr	r3, [fp, #-8]
   3168c:	add	r3, r2, r3
   31690:	add	r3, r3, #1
   31694:	str	r3, [fp, #-8]
   31698:	mov	r3, #0
   3169c:	cmp	r3, #0
   316a0:	beq	316a8 <__assert_fail@plt+0x20164>
   316a4:	bl	118b4 <__assert_fail@plt+0x370>
   316a8:	ldr	r3, [fp, #-8]
   316ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   316b0:	mov	r1, r3
   316b4:	ldr	r0, [fp, #-16]
   316b8:	bl	3147c <__assert_fail@plt+0x1ff38>
   316bc:	str	r0, [fp, #-16]
   316c0:	ldr	r2, [fp, #-8]
   316c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   316c8:	str	r2, [r3]
   316cc:	ldr	r3, [fp, #-16]
   316d0:	mov	r0, r3
   316d4:	sub	sp, fp, #4
   316d8:	pop	{fp, pc}
   316dc:	push	{fp, lr}
   316e0:	add	fp, sp, #4
   316e4:	sub	sp, sp, #32
   316e8:	str	r0, [fp, #-24]	; 0xffffffe8
   316ec:	str	r1, [fp, #-28]	; 0xffffffe4
   316f0:	str	r2, [fp, #-32]	; 0xffffffe0
   316f4:	str	r3, [fp, #-36]	; 0xffffffdc
   316f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   316fc:	ldr	r3, [r3]
   31700:	str	r3, [fp, #-8]
   31704:	ldr	r3, [fp, #-8]
   31708:	asr	r3, r3, #1
   3170c:	cmp	r3, #0
   31710:	bge	31738 <__assert_fail@plt+0x201f4>
   31714:	ldr	r3, [fp, #-8]
   31718:	asr	r3, r3, #1
   3171c:	rsb	r2, r3, #-2147483648	; 0x80000000
   31720:	ldr	r3, [fp, #-8]
   31724:	cmp	r2, r3
   31728:	movgt	r3, #1
   3172c:	movle	r3, #0
   31730:	uxtb	r3, r3
   31734:	b	3178c <__assert_fail@plt+0x20248>
   31738:	ldr	r3, [fp, #-8]
   3173c:	cmp	r3, #0
   31740:	bge	31768 <__assert_fail@plt+0x20224>
   31744:	ldr	r3, [fp, #-8]
   31748:	asr	r2, r3, #1
   3174c:	ldr	r3, [fp, #-8]
   31750:	rsb	r3, r3, #-2147483648	; 0x80000000
   31754:	cmp	r2, r3
   31758:	movlt	r3, #1
   3175c:	movge	r3, #0
   31760:	uxtb	r3, r3
   31764:	b	3178c <__assert_fail@plt+0x20248>
   31768:	ldr	r3, [fp, #-8]
   3176c:	asr	r2, r3, #1
   31770:	mvn	r3, #-2147483648	; 0x80000000
   31774:	sub	r3, r3, r2
   31778:	ldr	r2, [fp, #-8]
   3177c:	cmp	r3, r2
   31780:	movlt	r3, #1
   31784:	movge	r3, #0
   31788:	uxtb	r3, r3
   3178c:	cmp	r3, #0
   31790:	beq	317b4 <__assert_fail@plt+0x20270>
   31794:	ldr	r3, [fp, #-8]
   31798:	asr	r3, r3, #1
   3179c:	mov	r2, r3
   317a0:	ldr	r3, [fp, #-8]
   317a4:	add	r3, r2, r3
   317a8:	str	r3, [fp, #-16]
   317ac:	mov	r3, #1
   317b0:	b	317d0 <__assert_fail@plt+0x2028c>
   317b4:	ldr	r3, [fp, #-8]
   317b8:	asr	r3, r3, #1
   317bc:	mov	r2, r3
   317c0:	ldr	r3, [fp, #-8]
   317c4:	add	r3, r2, r3
   317c8:	str	r3, [fp, #-16]
   317cc:	mov	r3, #0
   317d0:	cmp	r3, #0
   317d4:	beq	317e0 <__assert_fail@plt+0x2029c>
   317d8:	mvn	r3, #-2147483648	; 0x80000000
   317dc:	str	r3, [fp, #-16]
   317e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   317e4:	cmp	r3, #0
   317e8:	blt	31804 <__assert_fail@plt+0x202c0>
   317ec:	ldr	r3, [fp, #-16]
   317f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   317f4:	cmp	r2, r3
   317f8:	bge	31804 <__assert_fail@plt+0x202c0>
   317fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31800:	str	r3, [fp, #-16]
   31804:	ldr	r3, [fp, #4]
   31808:	cmp	r3, #0
   3180c:	bge	3189c <__assert_fail@plt+0x20358>
   31810:	ldr	r3, [fp, #-16]
   31814:	cmp	r3, #0
   31818:	bge	31848 <__assert_fail@plt+0x20304>
   3181c:	ldr	r1, [fp, #4]
   31820:	mvn	r0, #-2147483648	; 0x80000000
   31824:	bl	349a0 <__assert_fail@plt+0x2345c>
   31828:	mov	r3, r0
   3182c:	mov	r2, r3
   31830:	ldr	r3, [fp, #-16]
   31834:	cmp	r2, r3
   31838:	movgt	r3, #1
   3183c:	movle	r3, #0
   31840:	uxtb	r3, r3
   31844:	b	3193c <__assert_fail@plt+0x203f8>
   31848:	ldr	r3, [fp, #4]
   3184c:	cmn	r3, #1
   31850:	bne	31870 <__assert_fail@plt+0x2032c>
   31854:	ldr	r3, [fp, #-16]
   31858:	add	r3, r3, #-2147483648	; 0x80000000
   3185c:	cmp	r3, #0
   31860:	movgt	r3, #1
   31864:	movle	r3, #0
   31868:	uxtb	r3, r3
   3186c:	b	3193c <__assert_fail@plt+0x203f8>
   31870:	ldr	r1, [fp, #4]
   31874:	mov	r0, #-2147483648	; 0x80000000
   31878:	bl	349a0 <__assert_fail@plt+0x2345c>
   3187c:	mov	r3, r0
   31880:	mov	r2, r3
   31884:	ldr	r3, [fp, #-16]
   31888:	cmp	r2, r3
   3188c:	movlt	r3, #1
   31890:	movge	r3, #0
   31894:	uxtb	r3, r3
   31898:	b	3193c <__assert_fail@plt+0x203f8>
   3189c:	ldr	r3, [fp, #4]
   318a0:	cmp	r3, #0
   318a4:	beq	31938 <__assert_fail@plt+0x203f4>
   318a8:	ldr	r3, [fp, #-16]
   318ac:	cmp	r3, #0
   318b0:	bge	3190c <__assert_fail@plt+0x203c8>
   318b4:	ldr	r3, [fp, #-16]
   318b8:	cmn	r3, #1
   318bc:	bne	318dc <__assert_fail@plt+0x20398>
   318c0:	ldr	r3, [fp, #4]
   318c4:	add	r3, r3, #-2147483648	; 0x80000000
   318c8:	cmp	r3, #0
   318cc:	movgt	r3, #1
   318d0:	movle	r3, #0
   318d4:	uxtb	r3, r3
   318d8:	b	3193c <__assert_fail@plt+0x203f8>
   318dc:	ldr	r3, [fp, #-16]
   318e0:	mov	r1, r3
   318e4:	mov	r0, #-2147483648	; 0x80000000
   318e8:	bl	349a0 <__assert_fail@plt+0x2345c>
   318ec:	mov	r3, r0
   318f0:	mov	r2, r3
   318f4:	ldr	r3, [fp, #4]
   318f8:	cmp	r2, r3
   318fc:	movlt	r3, #1
   31900:	movge	r3, #0
   31904:	uxtb	r3, r3
   31908:	b	3193c <__assert_fail@plt+0x203f8>
   3190c:	ldr	r1, [fp, #4]
   31910:	mvn	r0, #-2147483648	; 0x80000000
   31914:	bl	349a0 <__assert_fail@plt+0x2345c>
   31918:	mov	r3, r0
   3191c:	mov	r2, r3
   31920:	ldr	r3, [fp, #-16]
   31924:	cmp	r2, r3
   31928:	movlt	r3, #1
   3192c:	movge	r3, #0
   31930:	uxtb	r3, r3
   31934:	b	3193c <__assert_fail@plt+0x203f8>
   31938:	mov	r3, #0
   3193c:	cmp	r3, #0
   31940:	beq	31960 <__assert_fail@plt+0x2041c>
   31944:	ldr	r3, [fp, #-16]
   31948:	mov	r2, r3
   3194c:	ldr	r3, [fp, #4]
   31950:	mul	r3, r3, r2
   31954:	str	r3, [fp, #-20]	; 0xffffffec
   31958:	mov	r3, #1
   3195c:	b	31978 <__assert_fail@plt+0x20434>
   31960:	ldr	r3, [fp, #-16]
   31964:	mov	r2, r3
   31968:	ldr	r3, [fp, #4]
   3196c:	mul	r3, r3, r2
   31970:	str	r3, [fp, #-20]	; 0xffffffec
   31974:	mov	r3, #0
   31978:	cmp	r3, #0
   3197c:	beq	31988 <__assert_fail@plt+0x20444>
   31980:	mvn	r3, #-2147483648	; 0x80000000
   31984:	b	319a0 <__assert_fail@plt+0x2045c>
   31988:	ldr	r3, [fp, #-20]	; 0xffffffec
   3198c:	cmp	r3, #63	; 0x3f
   31990:	bgt	3199c <__assert_fail@plt+0x20458>
   31994:	mov	r3, #64	; 0x40
   31998:	b	319a0 <__assert_fail@plt+0x2045c>
   3199c:	mov	r3, #0
   319a0:	str	r3, [fp, #-12]
   319a4:	ldr	r3, [fp, #-12]
   319a8:	cmp	r3, #0
   319ac:	beq	319e8 <__assert_fail@plt+0x204a4>
   319b0:	ldr	r1, [fp, #4]
   319b4:	ldr	r0, [fp, #-12]
   319b8:	bl	349a0 <__assert_fail@plt+0x2345c>
   319bc:	mov	r3, r0
   319c0:	str	r3, [fp, #-16]
   319c4:	ldr	r3, [fp, #-12]
   319c8:	ldr	r1, [fp, #4]
   319cc:	mov	r0, r3
   319d0:	bl	34bc0 <__assert_fail@plt+0x2367c>
   319d4:	mov	r3, r1
   319d8:	mov	r2, r3
   319dc:	ldr	r3, [fp, #-12]
   319e0:	sub	r3, r3, r2
   319e4:	str	r3, [fp, #-20]	; 0xffffffec
   319e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   319ec:	cmp	r3, #0
   319f0:	bne	31a00 <__assert_fail@plt+0x204bc>
   319f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   319f8:	mov	r2, #0
   319fc:	str	r2, [r3]
   31a00:	ldr	r2, [fp, #-16]
   31a04:	ldr	r3, [fp, #-8]
   31a08:	sub	r2, r2, r3
   31a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a10:	cmp	r2, r3
   31a14:	bge	31c4c <__assert_fail@plt+0x20708>
   31a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a1c:	cmp	r3, #0
   31a20:	bge	31a44 <__assert_fail@plt+0x20500>
   31a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a28:	rsb	r2, r3, #-2147483648	; 0x80000000
   31a2c:	ldr	r3, [fp, #-8]
   31a30:	cmp	r2, r3
   31a34:	movgt	r3, #1
   31a38:	movle	r3, #0
   31a3c:	uxtb	r3, r3
   31a40:	b	31a90 <__assert_fail@plt+0x2054c>
   31a44:	ldr	r3, [fp, #-8]
   31a48:	cmp	r3, #0
   31a4c:	bge	31a70 <__assert_fail@plt+0x2052c>
   31a50:	ldr	r3, [fp, #-8]
   31a54:	rsb	r2, r3, #-2147483648	; 0x80000000
   31a58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a5c:	cmp	r2, r3
   31a60:	movgt	r3, #1
   31a64:	movle	r3, #0
   31a68:	uxtb	r3, r3
   31a6c:	b	31a90 <__assert_fail@plt+0x2054c>
   31a70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31a74:	mvn	r3, #-2147483648	; 0x80000000
   31a78:	sub	r3, r3, r2
   31a7c:	ldr	r2, [fp, #-8]
   31a80:	cmp	r3, r2
   31a84:	movlt	r3, #1
   31a88:	movge	r3, #0
   31a8c:	uxtb	r3, r3
   31a90:	cmp	r3, #0
   31a94:	beq	31aac <__assert_fail@plt+0x20568>
   31a98:	ldr	r2, [fp, #-8]
   31a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31aa0:	add	r3, r2, r3
   31aa4:	str	r3, [fp, #-16]
   31aa8:	b	31c48 <__assert_fail@plt+0x20704>
   31aac:	ldr	r2, [fp, #-8]
   31ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ab4:	add	r3, r2, r3
   31ab8:	str	r3, [fp, #-16]
   31abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31ac0:	cmp	r3, #0
   31ac4:	blt	31ad8 <__assert_fail@plt+0x20594>
   31ac8:	ldr	r3, [fp, #-16]
   31acc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31ad0:	cmp	r2, r3
   31ad4:	blt	31c48 <__assert_fail@plt+0x20704>
   31ad8:	ldr	r3, [fp, #4]
   31adc:	cmp	r3, #0
   31ae0:	bge	31b70 <__assert_fail@plt+0x2062c>
   31ae4:	ldr	r3, [fp, #-16]
   31ae8:	cmp	r3, #0
   31aec:	bge	31b1c <__assert_fail@plt+0x205d8>
   31af0:	ldr	r1, [fp, #4]
   31af4:	mvn	r0, #-2147483648	; 0x80000000
   31af8:	bl	349a0 <__assert_fail@plt+0x2345c>
   31afc:	mov	r3, r0
   31b00:	mov	r2, r3
   31b04:	ldr	r3, [fp, #-16]
   31b08:	cmp	r2, r3
   31b0c:	movgt	r3, #1
   31b10:	movle	r3, #0
   31b14:	uxtb	r3, r3
   31b18:	b	31c10 <__assert_fail@plt+0x206cc>
   31b1c:	ldr	r3, [fp, #4]
   31b20:	cmn	r3, #1
   31b24:	bne	31b44 <__assert_fail@plt+0x20600>
   31b28:	ldr	r3, [fp, #-16]
   31b2c:	add	r3, r3, #-2147483648	; 0x80000000
   31b30:	cmp	r3, #0
   31b34:	movgt	r3, #1
   31b38:	movle	r3, #0
   31b3c:	uxtb	r3, r3
   31b40:	b	31c10 <__assert_fail@plt+0x206cc>
   31b44:	ldr	r1, [fp, #4]
   31b48:	mov	r0, #-2147483648	; 0x80000000
   31b4c:	bl	349a0 <__assert_fail@plt+0x2345c>
   31b50:	mov	r3, r0
   31b54:	mov	r2, r3
   31b58:	ldr	r3, [fp, #-16]
   31b5c:	cmp	r2, r3
   31b60:	movlt	r3, #1
   31b64:	movge	r3, #0
   31b68:	uxtb	r3, r3
   31b6c:	b	31c10 <__assert_fail@plt+0x206cc>
   31b70:	ldr	r3, [fp, #4]
   31b74:	cmp	r3, #0
   31b78:	beq	31c0c <__assert_fail@plt+0x206c8>
   31b7c:	ldr	r3, [fp, #-16]
   31b80:	cmp	r3, #0
   31b84:	bge	31be0 <__assert_fail@plt+0x2069c>
   31b88:	ldr	r3, [fp, #-16]
   31b8c:	cmn	r3, #1
   31b90:	bne	31bb0 <__assert_fail@plt+0x2066c>
   31b94:	ldr	r3, [fp, #4]
   31b98:	add	r3, r3, #-2147483648	; 0x80000000
   31b9c:	cmp	r3, #0
   31ba0:	movgt	r3, #1
   31ba4:	movle	r3, #0
   31ba8:	uxtb	r3, r3
   31bac:	b	31c10 <__assert_fail@plt+0x206cc>
   31bb0:	ldr	r3, [fp, #-16]
   31bb4:	mov	r1, r3
   31bb8:	mov	r0, #-2147483648	; 0x80000000
   31bbc:	bl	349a0 <__assert_fail@plt+0x2345c>
   31bc0:	mov	r3, r0
   31bc4:	mov	r2, r3
   31bc8:	ldr	r3, [fp, #4]
   31bcc:	cmp	r2, r3
   31bd0:	movlt	r3, #1
   31bd4:	movge	r3, #0
   31bd8:	uxtb	r3, r3
   31bdc:	b	31c10 <__assert_fail@plt+0x206cc>
   31be0:	ldr	r1, [fp, #4]
   31be4:	mvn	r0, #-2147483648	; 0x80000000
   31be8:	bl	349a0 <__assert_fail@plt+0x2345c>
   31bec:	mov	r3, r0
   31bf0:	mov	r2, r3
   31bf4:	ldr	r3, [fp, #-16]
   31bf8:	cmp	r2, r3
   31bfc:	movlt	r3, #1
   31c00:	movge	r3, #0
   31c04:	uxtb	r3, r3
   31c08:	b	31c10 <__assert_fail@plt+0x206cc>
   31c0c:	mov	r3, #0
   31c10:	cmp	r3, #0
   31c14:	beq	31c30 <__assert_fail@plt+0x206ec>
   31c18:	ldr	r3, [fp, #-16]
   31c1c:	mov	r2, r3
   31c20:	ldr	r3, [fp, #4]
   31c24:	mul	r3, r3, r2
   31c28:	str	r3, [fp, #-20]	; 0xffffffec
   31c2c:	b	31c48 <__assert_fail@plt+0x20704>
   31c30:	ldr	r3, [fp, #-16]
   31c34:	mov	r2, r3
   31c38:	ldr	r3, [fp, #4]
   31c3c:	mul	r3, r3, r2
   31c40:	str	r3, [fp, #-20]	; 0xffffffec
   31c44:	b	31c4c <__assert_fail@plt+0x20708>
   31c48:	bl	118b4 <__assert_fail@plt+0x370>
   31c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31c50:	mov	r1, r3
   31c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31c58:	bl	313e4 <__assert_fail@plt+0x1fea0>
   31c5c:	str	r0, [fp, #-24]	; 0xffffffe8
   31c60:	ldr	r2, [fp, #-16]
   31c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31c68:	str	r2, [r3]
   31c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31c70:	mov	r0, r3
   31c74:	sub	sp, fp, #4
   31c78:	pop	{fp, pc}
   31c7c:	push	{fp, lr}
   31c80:	add	fp, sp, #4
   31c84:	sub	sp, sp, #8
   31c88:	str	r0, [fp, #-8]
   31c8c:	mov	r1, #1
   31c90:	ldr	r0, [fp, #-8]
   31c94:	bl	31cd4 <__assert_fail@plt+0x20790>
   31c98:	mov	r3, r0
   31c9c:	mov	r0, r3
   31ca0:	sub	sp, fp, #4
   31ca4:	pop	{fp, pc}
   31ca8:	push	{fp, lr}
   31cac:	add	fp, sp, #4
   31cb0:	sub	sp, sp, #8
   31cb4:	str	r0, [fp, #-8]
   31cb8:	mov	r1, #1
   31cbc:	ldr	r0, [fp, #-8]
   31cc0:	bl	31d10 <__assert_fail@plt+0x207cc>
   31cc4:	mov	r3, r0
   31cc8:	mov	r0, r3
   31ccc:	sub	sp, fp, #4
   31cd0:	pop	{fp, pc}
   31cd4:	push	{fp, lr}
   31cd8:	add	fp, sp, #4
   31cdc:	sub	sp, sp, #8
   31ce0:	str	r0, [fp, #-8]
   31ce4:	str	r1, [fp, #-12]
   31ce8:	ldr	r1, [fp, #-12]
   31cec:	ldr	r0, [fp, #-8]
   31cf0:	bl	33180 <__assert_fail@plt+0x21c3c>
   31cf4:	mov	r3, r0
   31cf8:	mov	r0, r3
   31cfc:	bl	31324 <__assert_fail@plt+0x1fde0>
   31d00:	mov	r3, r0
   31d04:	mov	r0, r3
   31d08:	sub	sp, fp, #4
   31d0c:	pop	{fp, pc}
   31d10:	push	{fp, lr}
   31d14:	add	fp, sp, #4
   31d18:	sub	sp, sp, #8
   31d1c:	str	r0, [fp, #-8]
   31d20:	str	r1, [fp, #-12]
   31d24:	ldr	r1, [fp, #-12]
   31d28:	ldr	r0, [fp, #-8]
   31d2c:	bl	33e48 <__assert_fail@plt+0x22904>
   31d30:	mov	r3, r0
   31d34:	mov	r0, r3
   31d38:	bl	31324 <__assert_fail@plt+0x1fde0>
   31d3c:	mov	r3, r0
   31d40:	mov	r0, r3
   31d44:	sub	sp, fp, #4
   31d48:	pop	{fp, pc}
   31d4c:	push	{fp, lr}
   31d50:	add	fp, sp, #4
   31d54:	sub	sp, sp, #8
   31d58:	str	r0, [fp, #-8]
   31d5c:	str	r1, [fp, #-12]
   31d60:	ldr	r0, [fp, #-12]
   31d64:	bl	31354 <__assert_fail@plt+0x1fe10>
   31d68:	mov	r3, r0
   31d6c:	ldr	r2, [fp, #-12]
   31d70:	ldr	r1, [fp, #-8]
   31d74:	mov	r0, r3
   31d78:	bl	11250 <memcpy@plt>
   31d7c:	mov	r3, r0
   31d80:	mov	r0, r3
   31d84:	sub	sp, fp, #4
   31d88:	pop	{fp, pc}
   31d8c:	push	{fp, lr}
   31d90:	add	fp, sp, #4
   31d94:	sub	sp, sp, #8
   31d98:	str	r0, [fp, #-8]
   31d9c:	str	r1, [fp, #-12]
   31da0:	ldr	r0, [fp, #-12]
   31da4:	bl	31388 <__assert_fail@plt+0x1fe44>
   31da8:	mov	r3, r0
   31dac:	mov	r0, r3
   31db0:	ldr	r3, [fp, #-12]
   31db4:	mov	r2, r3
   31db8:	ldr	r1, [fp, #-8]
   31dbc:	bl	11250 <memcpy@plt>
   31dc0:	mov	r3, r0
   31dc4:	mov	r0, r3
   31dc8:	sub	sp, fp, #4
   31dcc:	pop	{fp, pc}
   31dd0:	push	{fp, lr}
   31dd4:	add	fp, sp, #4
   31dd8:	sub	sp, sp, #16
   31ddc:	str	r0, [fp, #-16]
   31de0:	str	r1, [fp, #-20]	; 0xffffffec
   31de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   31de8:	add	r3, r3, #1
   31dec:	mov	r0, r3
   31df0:	bl	31388 <__assert_fail@plt+0x1fe44>
   31df4:	mov	r3, r0
   31df8:	str	r3, [fp, #-8]
   31dfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e00:	ldr	r2, [fp, #-8]
   31e04:	add	r3, r2, r3
   31e08:	mov	r2, #0
   31e0c:	strb	r2, [r3]
   31e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   31e14:	mov	r2, r3
   31e18:	ldr	r1, [fp, #-16]
   31e1c:	ldr	r0, [fp, #-8]
   31e20:	bl	11250 <memcpy@plt>
   31e24:	mov	r3, r0
   31e28:	mov	r0, r3
   31e2c:	sub	sp, fp, #4
   31e30:	pop	{fp, pc}
   31e34:	push	{fp, lr}
   31e38:	add	fp, sp, #4
   31e3c:	sub	sp, sp, #8
   31e40:	str	r0, [fp, #-8]
   31e44:	ldr	r0, [fp, #-8]
   31e48:	bl	113f4 <strlen@plt>
   31e4c:	mov	r3, r0
   31e50:	add	r3, r3, #1
   31e54:	mov	r1, r3
   31e58:	ldr	r0, [fp, #-8]
   31e5c:	bl	31d4c <__assert_fail@plt+0x20808>
   31e60:	mov	r3, r0
   31e64:	mov	r0, r3
   31e68:	sub	sp, fp, #4
   31e6c:	pop	{fp, pc}
   31e70:	push	{r4, r5, fp, lr}
   31e74:	add	fp, sp, #12
   31e78:	sub	sp, sp, #40	; 0x28
   31e7c:	str	r0, [fp, #-32]	; 0xffffffe0
   31e80:	str	r1, [fp, #-36]	; 0xffffffdc
   31e84:	strd	r2, [fp, #-44]	; 0xffffffd4
   31e88:	sub	r2, fp, #28
   31e8c:	ldr	r3, [fp, #12]
   31e90:	str	r3, [sp]
   31e94:	mov	r3, r2
   31e98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31e9c:	mov	r1, #0
   31ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ea4:	bl	323a4 <__assert_fail@plt+0x20e60>
   31ea8:	str	r0, [fp, #-16]
   31eac:	ldr	r3, [fp, #-16]
   31eb0:	cmp	r3, #0
   31eb4:	bne	31f54 <__assert_fail@plt+0x20a10>
   31eb8:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   31ebc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   31ec0:	cmp	r0, r2
   31ec4:	sbcs	r3, r1, r3
   31ec8:	blt	31ee0 <__assert_fail@plt+0x2099c>
   31ecc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   31ed0:	ldrd	r0, [fp, #4]
   31ed4:	cmp	r0, r2
   31ed8:	sbcs	r3, r1, r3
   31edc:	bge	31f90 <__assert_fail@plt+0x20a4c>
   31ee0:	mov	r3, #1
   31ee4:	str	r3, [fp, #-16]
   31ee8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   31eec:	mvn	r0, #-1073741824	; 0xc0000000
   31ef0:	mov	r1, #0
   31ef4:	cmp	r0, r2
   31ef8:	sbcs	r3, r1, r3
   31efc:	bge	31f14 <__assert_fail@plt+0x209d0>
   31f00:	bl	11418 <__errno_location@plt>
   31f04:	mov	r2, r0
   31f08:	mov	r3, #75	; 0x4b
   31f0c:	str	r3, [r2]
   31f10:	b	31f90 <__assert_fail@plt+0x20a4c>
   31f14:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   31f18:	mov	r0, #-1073741824	; 0xc0000000
   31f1c:	mvn	r1, #0
   31f20:	cmp	r2, r0
   31f24:	sbcs	r3, r3, r1
   31f28:	bge	31f40 <__assert_fail@plt+0x209fc>
   31f2c:	bl	11418 <__errno_location@plt>
   31f30:	mov	r2, r0
   31f34:	mov	r3, #75	; 0x4b
   31f38:	str	r3, [r2]
   31f3c:	b	31f90 <__assert_fail@plt+0x20a4c>
   31f40:	bl	11418 <__errno_location@plt>
   31f44:	mov	r2, r0
   31f48:	mov	r3, #34	; 0x22
   31f4c:	str	r3, [r2]
   31f50:	b	31f90 <__assert_fail@plt+0x20a4c>
   31f54:	ldr	r3, [fp, #-16]
   31f58:	cmp	r3, #1
   31f5c:	bne	31f74 <__assert_fail@plt+0x20a30>
   31f60:	bl	11418 <__errno_location@plt>
   31f64:	mov	r2, r0
   31f68:	mov	r3, #75	; 0x4b
   31f6c:	str	r3, [r2]
   31f70:	b	31f90 <__assert_fail@plt+0x20a4c>
   31f74:	ldr	r3, [fp, #-16]
   31f78:	cmp	r3, #3
   31f7c:	bne	31f90 <__assert_fail@plt+0x20a4c>
   31f80:	bl	11418 <__errno_location@plt>
   31f84:	mov	r2, r0
   31f88:	mov	r3, #0
   31f8c:	str	r3, [r2]
   31f90:	ldr	r3, [fp, #-16]
   31f94:	cmp	r3, #0
   31f98:	beq	32000 <__assert_fail@plt+0x20abc>
   31f9c:	ldr	r3, [fp, #20]
   31fa0:	cmp	r3, #0
   31fa4:	beq	31fb0 <__assert_fail@plt+0x20a6c>
   31fa8:	ldr	r4, [fp, #20]
   31fac:	b	31fb4 <__assert_fail@plt+0x20a70>
   31fb0:	mov	r4, #1
   31fb4:	bl	11418 <__errno_location@plt>
   31fb8:	mov	r3, r0
   31fbc:	ldr	r3, [r3]
   31fc0:	cmp	r3, #22
   31fc4:	beq	31fd8 <__assert_fail@plt+0x20a94>
   31fc8:	bl	11418 <__errno_location@plt>
   31fcc:	mov	r3, r0
   31fd0:	ldr	r5, [r3]
   31fd4:	b	31fdc <__assert_fail@plt+0x20a98>
   31fd8:	mov	r5, #0
   31fdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31fe0:	bl	177a4 <__assert_fail@plt+0x6260>
   31fe4:	mov	r3, r0
   31fe8:	str	r3, [sp]
   31fec:	ldr	r3, [fp, #16]
   31ff0:	ldr	r2, [pc, #28]	; 32014 <__assert_fail@plt+0x20ad0>
   31ff4:	mov	r1, r5
   31ff8:	mov	r0, r4
   31ffc:	bl	11370 <error@plt>
   32000:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   32004:	mov	r0, r2
   32008:	mov	r1, r3
   3200c:	sub	sp, fp, #12
   32010:	pop	{r4, r5, fp, pc}
   32014:	andeq	r6, r3, r0, lsr #4
   32018:	push	{fp, lr}
   3201c:	add	fp, sp, #4
   32020:	sub	sp, sp, #40	; 0x28
   32024:	str	r0, [fp, #-8]
   32028:	strd	r2, [fp, #-20]	; 0xffffffec
   3202c:	ldr	r3, [fp, #20]
   32030:	str	r3, [sp, #16]
   32034:	ldr	r3, [fp, #16]
   32038:	str	r3, [sp, #12]
   3203c:	ldr	r3, [fp, #12]
   32040:	str	r3, [sp, #8]
   32044:	ldrd	r2, [fp, #4]
   32048:	strd	r2, [sp]
   3204c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   32050:	mov	r1, #10
   32054:	ldr	r0, [fp, #-8]
   32058:	bl	31e70 <__assert_fail@plt+0x2092c>
   3205c:	mov	r2, r0
   32060:	mov	r3, r1
   32064:	mov	r0, r2
   32068:	mov	r1, r3
   3206c:	sub	sp, fp, #4
   32070:	pop	{fp, pc}
   32074:	push	{r4, r5, fp, lr}
   32078:	add	fp, sp, #12
   3207c:	sub	sp, sp, #16
   32080:	str	r0, [fp, #-24]	; 0xffffffe8
   32084:	str	r1, [fp, #-28]	; 0xffffffe4
   32088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3208c:	cmp	r3, #0
   32090:	bge	32164 <__assert_fail@plt+0x20c20>
   32094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32098:	ldrd	r2, [r3]
   3209c:	cmp	r2, #0
   320a0:	sbcs	r3, r3, #0
   320a4:	bge	320e8 <__assert_fail@plt+0x20ba4>
   320a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   320ac:	ldrd	r4, [r3]
   320b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   320b4:	mov	r2, r3
   320b8:	asr	r3, r2, #31
   320bc:	mvn	r0, #0
   320c0:	mvn	r1, #-2147483648	; 0x80000000
   320c4:	bl	34be0 <__assert_fail@plt+0x2369c>
   320c8:	mov	r2, r0
   320cc:	mov	r3, r1
   320d0:	cmp	r4, r2
   320d4:	sbcs	r3, r5, r3
   320d8:	movlt	r3, #1
   320dc:	movge	r3, #0
   320e0:	uxtb	r3, r3
   320e4:	b	32260 <__assert_fail@plt+0x20d1c>
   320e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   320ec:	cmn	r3, #1
   320f0:	bne	3211c <__assert_fail@plt+0x20bd8>
   320f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   320f8:	ldrd	r2, [r3]
   320fc:	adds	r2, r2, #0
   32100:	adc	r3, r3, #-2147483648	; 0x80000000
   32104:	cmp	r2, #1
   32108:	sbcs	r3, r3, #0
   3210c:	movge	r3, #1
   32110:	movlt	r3, #0
   32114:	uxtb	r3, r3
   32118:	b	32260 <__assert_fail@plt+0x20d1c>
   3211c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32120:	mov	r2, r3
   32124:	asr	r3, r2, #31
   32128:	mov	r0, #0
   3212c:	mov	r1, #-2147483648	; 0x80000000
   32130:	bl	34be0 <__assert_fail@plt+0x2369c>
   32134:	mov	r2, r0
   32138:	mov	r3, r1
   3213c:	mov	r0, r2
   32140:	mov	r1, r3
   32144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32148:	ldrd	r2, [r3]
   3214c:	cmp	r0, r2
   32150:	sbcs	r3, r1, r3
   32154:	movlt	r3, #1
   32158:	movge	r3, #0
   3215c:	uxtb	r3, r3
   32160:	b	32260 <__assert_fail@plt+0x20d1c>
   32164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32168:	cmp	r3, #0
   3216c:	beq	3225c <__assert_fail@plt+0x20d18>
   32170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32174:	ldrd	r2, [r3]
   32178:	cmp	r2, #0
   3217c:	sbcs	r3, r3, #0
   32180:	bge	32214 <__assert_fail@plt+0x20cd0>
   32184:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32188:	ldrd	r2, [r3]
   3218c:	mvn	r0, #0
   32190:	mvn	r1, #0
   32194:	cmp	r3, r1
   32198:	cmpeq	r2, r0
   3219c:	bne	321cc <__assert_fail@plt+0x20c88>
   321a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   321a4:	mov	r2, r3
   321a8:	asr	r3, r2, #31
   321ac:	adds	r2, r2, #0
   321b0:	adc	r3, r3, #-2147483648	; 0x80000000
   321b4:	cmp	r2, #1
   321b8:	sbcs	r3, r3, #0
   321bc:	movge	r3, #1
   321c0:	movlt	r3, #0
   321c4:	uxtb	r3, r3
   321c8:	b	32260 <__assert_fail@plt+0x20d1c>
   321cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   321d0:	ldrd	r2, [r3]
   321d4:	mov	r0, #0
   321d8:	mov	r1, #-2147483648	; 0x80000000
   321dc:	bl	34be0 <__assert_fail@plt+0x2369c>
   321e0:	mov	r2, r0
   321e4:	mov	r3, r1
   321e8:	mov	r0, r2
   321ec:	mov	r1, r3
   321f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   321f4:	mov	r2, r3
   321f8:	asr	r3, r2, #31
   321fc:	cmp	r0, r2
   32200:	sbcs	r3, r1, r3
   32204:	movlt	r3, #1
   32208:	movge	r3, #0
   3220c:	uxtb	r3, r3
   32210:	b	32260 <__assert_fail@plt+0x20d1c>
   32214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32218:	mov	r2, r3
   3221c:	asr	r3, r2, #31
   32220:	mvn	r0, #0
   32224:	mvn	r1, #-2147483648	; 0x80000000
   32228:	bl	34be0 <__assert_fail@plt+0x2369c>
   3222c:	mov	r2, r0
   32230:	mov	r3, r1
   32234:	mov	r0, r2
   32238:	mov	r1, r3
   3223c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32240:	ldrd	r2, [r3]
   32244:	cmp	r0, r2
   32248:	sbcs	r3, r1, r3
   3224c:	movlt	r3, #1
   32250:	movge	r3, #0
   32254:	uxtb	r3, r3
   32258:	b	32260 <__assert_fail@plt+0x20d1c>
   3225c:	mov	r3, #0
   32260:	cmp	r3, #0
   32264:	beq	322a8 <__assert_fail@plt+0x20d64>
   32268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3226c:	ldrd	r2, [r3]
   32270:	mov	r0, r2
   32274:	mov	r1, r3
   32278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3227c:	mov	r2, r3
   32280:	asr	r3, r2, #31
   32284:	mul	lr, r2, r1
   32288:	mul	ip, r0, r3
   3228c:	add	ip, lr, ip
   32290:	umull	r2, r3, r0, r2
   32294:	add	r1, ip, r3
   32298:	mov	r3, r1
   3229c:	strd	r2, [fp, #-20]	; 0xffffffec
   322a0:	mov	r3, #1
   322a4:	b	322e4 <__assert_fail@plt+0x20da0>
   322a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   322ac:	ldrd	r2, [r3]
   322b0:	mov	r0, r2
   322b4:	mov	r1, r3
   322b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   322bc:	mov	r2, r3
   322c0:	asr	r3, r2, #31
   322c4:	mul	lr, r2, r1
   322c8:	mul	ip, r0, r3
   322cc:	add	ip, lr, ip
   322d0:	umull	r2, r3, r0, r2
   322d4:	add	r1, ip, r3
   322d8:	mov	r3, r1
   322dc:	strd	r2, [fp, #-20]	; 0xffffffec
   322e0:	mov	r3, #0
   322e4:	cmp	r3, #0
   322e8:	beq	32324 <__assert_fail@plt+0x20de0>
   322ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   322f0:	ldrd	r2, [r3]
   322f4:	cmp	r2, #0
   322f8:	sbcs	r3, r3, #0
   322fc:	bge	3230c <__assert_fail@plt+0x20dc8>
   32300:	mov	r2, #0
   32304:	mov	r3, #-2147483648	; 0x80000000
   32308:	b	32314 <__assert_fail@plt+0x20dd0>
   3230c:	mvn	r2, #0
   32310:	mvn	r3, #-2147483648	; 0x80000000
   32314:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32318:	strd	r2, [r1]
   3231c:	mov	r3, #1
   32320:	b	32334 <__assert_fail@plt+0x20df0>
   32324:	ldrd	r2, [fp, #-20]	; 0xffffffec
   32328:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3232c:	strd	r2, [r1]
   32330:	mov	r3, #0
   32334:	mov	r0, r3
   32338:	sub	sp, fp, #12
   3233c:	pop	{r4, r5, fp, pc}
   32340:	push	{fp, lr}
   32344:	add	fp, sp, #4
   32348:	sub	sp, sp, #24
   3234c:	str	r0, [fp, #-16]
   32350:	str	r1, [fp, #-20]	; 0xffffffec
   32354:	str	r2, [fp, #-24]	; 0xffffffe8
   32358:	mov	r3, #0
   3235c:	str	r3, [fp, #-8]
   32360:	b	32380 <__assert_fail@plt+0x20e3c>
   32364:	ldr	r1, [fp, #-20]	; 0xffffffec
   32368:	ldr	r0, [fp, #-16]
   3236c:	bl	32074 <__assert_fail@plt+0x20b30>
   32370:	mov	r2, r0
   32374:	ldr	r3, [fp, #-8]
   32378:	orr	r3, r3, r2
   3237c:	str	r3, [fp, #-8]
   32380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32384:	sub	r2, r3, #1
   32388:	str	r2, [fp, #-24]	; 0xffffffe8
   3238c:	cmp	r3, #0
   32390:	bne	32364 <__assert_fail@plt+0x20e20>
   32394:	ldr	r3, [fp, #-8]
   32398:	mov	r0, r3
   3239c:	sub	sp, fp, #4
   323a0:	pop	{fp, pc}
   323a4:	push	{fp, lr}
   323a8:	add	fp, sp, #4
   323ac:	sub	sp, sp, #48	; 0x30
   323b0:	str	r0, [fp, #-40]	; 0xffffffd8
   323b4:	str	r1, [fp, #-44]	; 0xffffffd4
   323b8:	str	r2, [fp, #-48]	; 0xffffffd0
   323bc:	str	r3, [fp, #-52]	; 0xffffffcc
   323c0:	mov	r3, #0
   323c4:	str	r3, [fp, #-8]
   323c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   323cc:	cmp	r3, #0
   323d0:	blt	323e0 <__assert_fail@plt+0x20e9c>
   323d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   323d8:	cmp	r3, #36	; 0x24
   323dc:	ble	323f4 <__assert_fail@plt+0x20eb0>
   323e0:	ldr	r3, [pc, #1412]	; 3296c <__assert_fail@plt+0x21428>
   323e4:	mov	r2, #85	; 0x55
   323e8:	ldr	r1, [pc, #1408]	; 32970 <__assert_fail@plt+0x2142c>
   323ec:	ldr	r0, [pc, #1408]	; 32974 <__assert_fail@plt+0x21430>
   323f0:	bl	11544 <__assert_fail@plt>
   323f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   323f8:	cmp	r3, #0
   323fc:	bne	32408 <__assert_fail@plt+0x20ec4>
   32400:	sub	r3, fp, #28
   32404:	b	3240c <__assert_fail@plt+0x20ec8>
   32408:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3240c:	str	r3, [fp, #-24]	; 0xffffffe8
   32410:	bl	11418 <__errno_location@plt>
   32414:	mov	r2, r0
   32418:	mov	r3, #0
   3241c:	str	r3, [r2]
   32420:	ldr	r2, [fp, #-48]	; 0xffffffd0
   32424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32428:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3242c:	bl	11478 <strtoimax@plt>
   32430:	mov	r2, r0
   32434:	mov	r3, r1
   32438:	strd	r2, [fp, #-36]	; 0xffffffdc
   3243c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32440:	ldr	r2, [r3]
   32444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   32448:	cmp	r2, r3
   3244c:	bne	324ac <__assert_fail@plt+0x20f68>
   32450:	ldr	r3, [fp, #4]
   32454:	cmp	r3, #0
   32458:	beq	324a4 <__assert_fail@plt+0x20f60>
   3245c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32460:	ldr	r3, [r3]
   32464:	ldrb	r3, [r3]
   32468:	cmp	r3, #0
   3246c:	beq	324a4 <__assert_fail@plt+0x20f60>
   32470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32474:	ldr	r3, [r3]
   32478:	ldrb	r3, [r3]
   3247c:	mov	r1, r3
   32480:	ldr	r0, [fp, #4]
   32484:	bl	11400 <strchr@plt>
   32488:	mov	r3, r0
   3248c:	cmp	r3, #0
   32490:	beq	324a4 <__assert_fail@plt+0x20f60>
   32494:	mov	r2, #1
   32498:	mov	r3, #0
   3249c:	strd	r2, [fp, #-36]	; 0xffffffdc
   324a0:	b	324e4 <__assert_fail@plt+0x20fa0>
   324a4:	mov	r3, #4
   324a8:	b	32960 <__assert_fail@plt+0x2141c>
   324ac:	bl	11418 <__errno_location@plt>
   324b0:	mov	r3, r0
   324b4:	ldr	r3, [r3]
   324b8:	cmp	r3, #0
   324bc:	beq	324e4 <__assert_fail@plt+0x20fa0>
   324c0:	bl	11418 <__errno_location@plt>
   324c4:	mov	r3, r0
   324c8:	ldr	r3, [r3]
   324cc:	cmp	r3, #34	; 0x22
   324d0:	beq	324dc <__assert_fail@plt+0x20f98>
   324d4:	mov	r3, #4
   324d8:	b	32960 <__assert_fail@plt+0x2141c>
   324dc:	mov	r3, #1
   324e0:	str	r3, [fp, #-8]
   324e4:	ldr	r3, [fp, #4]
   324e8:	cmp	r3, #0
   324ec:	bne	32504 <__assert_fail@plt+0x20fc0>
   324f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   324f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   324f8:	strd	r2, [r1]
   324fc:	ldr	r3, [fp, #-8]
   32500:	b	32960 <__assert_fail@plt+0x2141c>
   32504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32508:	ldr	r3, [r3]
   3250c:	ldrb	r3, [r3]
   32510:	cmp	r3, #0
   32514:	beq	32950 <__assert_fail@plt+0x2140c>
   32518:	mov	r3, #1024	; 0x400
   3251c:	str	r3, [fp, #-12]
   32520:	mov	r3, #1
   32524:	str	r3, [fp, #-16]
   32528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3252c:	ldr	r3, [r3]
   32530:	ldrb	r3, [r3]
   32534:	mov	r1, r3
   32538:	ldr	r0, [fp, #4]
   3253c:	bl	11400 <strchr@plt>
   32540:	mov	r3, r0
   32544:	cmp	r3, #0
   32548:	bne	32564 <__assert_fail@plt+0x21020>
   3254c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   32550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32554:	strd	r2, [r1]
   32558:	ldr	r3, [fp, #-8]
   3255c:	orr	r3, r3, #2
   32560:	b	32960 <__assert_fail@plt+0x2141c>
   32564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32568:	ldr	r3, [r3]
   3256c:	ldrb	r3, [r3]
   32570:	sub	r3, r3, #69	; 0x45
   32574:	cmp	r3, #47	; 0x2f
   32578:	ldrls	pc, [pc, r3, lsl #2]
   3257c:	b	326c8 <__assert_fail@plt+0x21184>
   32580:	andeq	r2, r3, r0, asr #12
   32584:	andeq	r2, r3, r8, asr #13
   32588:	andeq	r2, r3, r0, asr #12
   3258c:	andeq	r2, r3, r8, asr #13
   32590:	andeq	r2, r3, r8, asr #13
   32594:	andeq	r2, r3, r8, asr #13
   32598:	andeq	r2, r3, r0, asr #12
   3259c:	andeq	r2, r3, r8, asr #13
   325a0:	andeq	r2, r3, r0, asr #12
   325a4:	andeq	r2, r3, r8, asr #13
   325a8:	andeq	r2, r3, r8, asr #13
   325ac:	andeq	r2, r3, r0, asr #12
   325b0:	andeq	r2, r3, r8, asr #13
   325b4:	andeq	r2, r3, r8, asr #13
   325b8:	andeq	r2, r3, r8, asr #13
   325bc:	andeq	r2, r3, r0, asr #12
   325c0:	andeq	r2, r3, r8, asr #13
   325c4:	andeq	r2, r3, r8, asr #13
   325c8:	andeq	r2, r3, r8, asr #13
   325cc:	andeq	r2, r3, r8, asr #13
   325d0:	andeq	r2, r3, r0, asr #12
   325d4:	andeq	r2, r3, r0, asr #12
   325d8:	andeq	r2, r3, r8, asr #13
   325dc:	andeq	r2, r3, r8, asr #13
   325e0:	andeq	r2, r3, r8, asr #13
   325e4:	andeq	r2, r3, r8, asr #13
   325e8:	andeq	r2, r3, r8, asr #13
   325ec:	andeq	r2, r3, r8, asr #13
   325f0:	andeq	r2, r3, r8, asr #13
   325f4:	andeq	r2, r3, r8, asr #13
   325f8:	andeq	r2, r3, r8, asr #13
   325fc:	andeq	r2, r3, r8, asr #13
   32600:	andeq	r2, r3, r8, asr #13
   32604:	andeq	r2, r3, r8, asr #13
   32608:	andeq	r2, r3, r0, asr #12
   3260c:	andeq	r2, r3, r8, asr #13
   32610:	andeq	r2, r3, r8, asr #13
   32614:	andeq	r2, r3, r8, asr #13
   32618:	andeq	r2, r3, r0, asr #12
   3261c:	andeq	r2, r3, r8, asr #13
   32620:	andeq	r2, r3, r0, asr #12
   32624:	andeq	r2, r3, r8, asr #13
   32628:	andeq	r2, r3, r8, asr #13
   3262c:	andeq	r2, r3, r8, asr #13
   32630:	andeq	r2, r3, r8, asr #13
   32634:	andeq	r2, r3, r8, asr #13
   32638:	andeq	r2, r3, r8, asr #13
   3263c:	andeq	r2, r3, r0, asr #12
   32640:	mov	r1, #48	; 0x30
   32644:	ldr	r0, [fp, #4]
   32648:	bl	11400 <strchr@plt>
   3264c:	mov	r3, r0
   32650:	cmp	r3, #0
   32654:	beq	326c8 <__assert_fail@plt+0x21184>
   32658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3265c:	ldr	r3, [r3]
   32660:	add	r3, r3, #1
   32664:	ldrb	r3, [r3]
   32668:	cmp	r3, #68	; 0x44
   3266c:	beq	326ac <__assert_fail@plt+0x21168>
   32670:	cmp	r3, #105	; 0x69
   32674:	beq	32684 <__assert_fail@plt+0x21140>
   32678:	cmp	r3, #66	; 0x42
   3267c:	beq	326ac <__assert_fail@plt+0x21168>
   32680:	b	326c8 <__assert_fail@plt+0x21184>
   32684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32688:	ldr	r3, [r3]
   3268c:	add	r3, r3, #2
   32690:	ldrb	r3, [r3]
   32694:	cmp	r3, #66	; 0x42
   32698:	bne	326c4 <__assert_fail@plt+0x21180>
   3269c:	ldr	r3, [fp, #-16]
   326a0:	add	r3, r3, #2
   326a4:	str	r3, [fp, #-16]
   326a8:	b	326c4 <__assert_fail@plt+0x21180>
   326ac:	mov	r3, #1000	; 0x3e8
   326b0:	str	r3, [fp, #-12]
   326b4:	ldr	r3, [fp, #-16]
   326b8:	add	r3, r3, #1
   326bc:	str	r3, [fp, #-16]
   326c0:	b	326c8 <__assert_fail@plt+0x21184>
   326c4:	nop			; (mov r0, r0)
   326c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   326cc:	ldr	r3, [r3]
   326d0:	ldrb	r3, [r3]
   326d4:	sub	r3, r3, #66	; 0x42
   326d8:	cmp	r3, #53	; 0x35
   326dc:	ldrls	pc, [pc, r3, lsl #2]
   326e0:	b	328f0 <__assert_fail@plt+0x213ac>
   326e4:	ldrdeq	r2, [r3], -r4
   326e8:	strdeq	r2, [r3], -r0
   326ec:	strdeq	r2, [r3], -r0
   326f0:	strdeq	r2, [r3], -r8
   326f4:	strdeq	r2, [r3], -r0
   326f8:	andeq	r2, r3, r4, lsl r8
   326fc:	strdeq	r2, [r3], -r0
   32700:	strdeq	r2, [r3], -r0
   32704:	strdeq	r2, [r3], -r0
   32708:	andeq	r2, r3, r0, lsr r8
   3270c:	strdeq	r2, [r3], -r0
   32710:	andeq	r2, r3, ip, asr #16
   32714:	strdeq	r2, [r3], -r0
   32718:	strdeq	r2, [r3], -r0
   3271c:	andeq	r2, r3, r8, ror #16
   32720:	strdeq	r2, [r3], -r0
   32724:	strdeq	r2, [r3], -r0
   32728:	strdeq	r2, [r3], -r0
   3272c:	andeq	r2, r3, r4, lsl #17
   32730:	strdeq	r2, [r3], -r0
   32734:	strdeq	r2, [r3], -r0
   32738:	strdeq	r2, [r3], -r0
   3273c:	strdeq	r2, [r3], -r0
   32740:			; <UNDEFINED> instruction: 0x000328b8
   32744:	ldrdeq	r2, [r3], -r4
   32748:	strdeq	r2, [r3], -r0
   3274c:	strdeq	r2, [r3], -r0
   32750:	strdeq	r2, [r3], -r0
   32754:	strdeq	r2, [r3], -r0
   32758:	strdeq	r2, [r3], -r0
   3275c:	strdeq	r2, [r3], -r0
   32760:	strdeq	r2, [r3], -r0
   32764:			; <UNDEFINED> instruction: 0x000327bc
   32768:	andeq	r2, r3, ip, ror #15
   3276c:	strdeq	r2, [r3], -r0
   32770:	strdeq	r2, [r3], -r0
   32774:	strdeq	r2, [r3], -r0
   32778:	andeq	r2, r3, r4, lsl r8
   3277c:	strdeq	r2, [r3], -r0
   32780:	strdeq	r2, [r3], -r0
   32784:	strdeq	r2, [r3], -r0
   32788:	andeq	r2, r3, r0, lsr r8
   3278c:	strdeq	r2, [r3], -r0
   32790:	andeq	r2, r3, ip, asr #16
   32794:	strdeq	r2, [r3], -r0
   32798:	strdeq	r2, [r3], -r0
   3279c:	strdeq	r2, [r3], -r0
   327a0:	strdeq	r2, [r3], -r0
   327a4:	strdeq	r2, [r3], -r0
   327a8:	strdeq	r2, [r3], -r0
   327ac:	andeq	r2, r3, r4, lsl #17
   327b0:	strdeq	r2, [r3], -r0
   327b4:	strdeq	r2, [r3], -r0
   327b8:	andeq	r2, r3, r0, lsr #17
   327bc:	sub	r3, fp, #36	; 0x24
   327c0:	mov	r1, #512	; 0x200
   327c4:	mov	r0, r3
   327c8:	bl	32074 <__assert_fail@plt+0x20b30>
   327cc:	str	r0, [fp, #-20]	; 0xffffffec
   327d0:	b	32908 <__assert_fail@plt+0x213c4>
   327d4:	sub	r3, fp, #36	; 0x24
   327d8:	mov	r1, #1024	; 0x400
   327dc:	mov	r0, r3
   327e0:	bl	32074 <__assert_fail@plt+0x20b30>
   327e4:	str	r0, [fp, #-20]	; 0xffffffec
   327e8:	b	32908 <__assert_fail@plt+0x213c4>
   327ec:	mov	r3, #0
   327f0:	str	r3, [fp, #-20]	; 0xffffffec
   327f4:	b	32908 <__assert_fail@plt+0x213c4>
   327f8:	sub	r3, fp, #36	; 0x24
   327fc:	mov	r2, #6
   32800:	ldr	r1, [fp, #-12]
   32804:	mov	r0, r3
   32808:	bl	32340 <__assert_fail@plt+0x20dfc>
   3280c:	str	r0, [fp, #-20]	; 0xffffffec
   32810:	b	32908 <__assert_fail@plt+0x213c4>
   32814:	sub	r3, fp, #36	; 0x24
   32818:	mov	r2, #3
   3281c:	ldr	r1, [fp, #-12]
   32820:	mov	r0, r3
   32824:	bl	32340 <__assert_fail@plt+0x20dfc>
   32828:	str	r0, [fp, #-20]	; 0xffffffec
   3282c:	b	32908 <__assert_fail@plt+0x213c4>
   32830:	sub	r3, fp, #36	; 0x24
   32834:	mov	r2, #1
   32838:	ldr	r1, [fp, #-12]
   3283c:	mov	r0, r3
   32840:	bl	32340 <__assert_fail@plt+0x20dfc>
   32844:	str	r0, [fp, #-20]	; 0xffffffec
   32848:	b	32908 <__assert_fail@plt+0x213c4>
   3284c:	sub	r3, fp, #36	; 0x24
   32850:	mov	r2, #2
   32854:	ldr	r1, [fp, #-12]
   32858:	mov	r0, r3
   3285c:	bl	32340 <__assert_fail@plt+0x20dfc>
   32860:	str	r0, [fp, #-20]	; 0xffffffec
   32864:	b	32908 <__assert_fail@plt+0x213c4>
   32868:	sub	r3, fp, #36	; 0x24
   3286c:	mov	r2, #5
   32870:	ldr	r1, [fp, #-12]
   32874:	mov	r0, r3
   32878:	bl	32340 <__assert_fail@plt+0x20dfc>
   3287c:	str	r0, [fp, #-20]	; 0xffffffec
   32880:	b	32908 <__assert_fail@plt+0x213c4>
   32884:	sub	r3, fp, #36	; 0x24
   32888:	mov	r2, #4
   3288c:	ldr	r1, [fp, #-12]
   32890:	mov	r0, r3
   32894:	bl	32340 <__assert_fail@plt+0x20dfc>
   32898:	str	r0, [fp, #-20]	; 0xffffffec
   3289c:	b	32908 <__assert_fail@plt+0x213c4>
   328a0:	sub	r3, fp, #36	; 0x24
   328a4:	mov	r1, #2
   328a8:	mov	r0, r3
   328ac:	bl	32074 <__assert_fail@plt+0x20b30>
   328b0:	str	r0, [fp, #-20]	; 0xffffffec
   328b4:	b	32908 <__assert_fail@plt+0x213c4>
   328b8:	sub	r3, fp, #36	; 0x24
   328bc:	mov	r2, #8
   328c0:	ldr	r1, [fp, #-12]
   328c4:	mov	r0, r3
   328c8:	bl	32340 <__assert_fail@plt+0x20dfc>
   328cc:	str	r0, [fp, #-20]	; 0xffffffec
   328d0:	b	32908 <__assert_fail@plt+0x213c4>
   328d4:	sub	r3, fp, #36	; 0x24
   328d8:	mov	r2, #7
   328dc:	ldr	r1, [fp, #-12]
   328e0:	mov	r0, r3
   328e4:	bl	32340 <__assert_fail@plt+0x20dfc>
   328e8:	str	r0, [fp, #-20]	; 0xffffffec
   328ec:	b	32908 <__assert_fail@plt+0x213c4>
   328f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   328f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   328f8:	strd	r2, [r1]
   328fc:	ldr	r3, [fp, #-8]
   32900:	orr	r3, r3, #2
   32904:	b	32960 <__assert_fail@plt+0x2141c>
   32908:	ldr	r2, [fp, #-8]
   3290c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32910:	orr	r3, r2, r3
   32914:	str	r3, [fp, #-8]
   32918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3291c:	ldr	r2, [r3]
   32920:	ldr	r3, [fp, #-16]
   32924:	add	r2, r2, r3
   32928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3292c:	str	r2, [r3]
   32930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32934:	ldr	r3, [r3]
   32938:	ldrb	r3, [r3]
   3293c:	cmp	r3, #0
   32940:	beq	32950 <__assert_fail@plt+0x2140c>
   32944:	ldr	r3, [fp, #-8]
   32948:	orr	r3, r3, #2
   3294c:	str	r3, [fp, #-8]
   32950:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   32954:	ldr	r1, [fp, #-52]	; 0xffffffcc
   32958:	strd	r2, [r1]
   3295c:	ldr	r3, [fp, #-8]
   32960:	mov	r0, r3
   32964:	sub	sp, fp, #4
   32968:	pop	{fp, pc}
   3296c:	andeq	r6, r3, r0, ror #4
   32970:	andeq	r6, r3, r8, lsr #4
   32974:	andeq	r6, r3, r8, lsr r2
   32978:	push	{fp, lr}
   3297c:	add	fp, sp, #4
   32980:	sub	sp, sp, #16
   32984:	str	r0, [fp, #-16]
   32988:	str	r1, [fp, #-20]	; 0xffffffec
   3298c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32990:	cmp	r3, #0
   32994:	bge	329d0 <__assert_fail@plt+0x2148c>
   32998:	ldr	r1, [fp, #-20]	; 0xffffffec
   3299c:	mov	r0, #0
   329a0:	bl	349a0 <__assert_fail@plt+0x2345c>
   329a4:	mov	r3, r0
   329a8:	mov	r0, r3
   329ac:	asr	r1, r0, #31
   329b0:	ldr	r3, [fp, #-16]
   329b4:	ldrd	r2, [r3]
   329b8:	cmp	r1, r3
   329bc:	cmpeq	r0, r2
   329c0:	movcc	r3, #1
   329c4:	movcs	r3, #0
   329c8:	uxtb	r3, r3
   329cc:	b	32a2c <__assert_fail@plt+0x214e8>
   329d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   329d4:	cmp	r3, #0
   329d8:	beq	32a20 <__assert_fail@plt+0x214dc>
   329dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   329e0:	mov	r2, r3
   329e4:	asr	r3, r2, #31
   329e8:	mvn	r0, #0
   329ec:	mvn	r1, #0
   329f0:	bl	34cb4 <__assert_fail@plt+0x23770>
   329f4:	mov	r2, r0
   329f8:	mov	r3, r1
   329fc:	mov	r0, r2
   32a00:	mov	r1, r3
   32a04:	ldr	r3, [fp, #-16]
   32a08:	ldrd	r2, [r3]
   32a0c:	cmp	r1, r3
   32a10:	cmpeq	r0, r2
   32a14:	bcs	32a20 <__assert_fail@plt+0x214dc>
   32a18:	mov	r3, #1
   32a1c:	b	32a24 <__assert_fail@plt+0x214e0>
   32a20:	mov	r3, #0
   32a24:	and	r3, r3, #1
   32a28:	uxtb	r3, r3
   32a2c:	cmp	r3, #0
   32a30:	beq	32a6c <__assert_fail@plt+0x21528>
   32a34:	ldr	r3, [fp, #-16]
   32a38:	ldrd	r0, [r3]
   32a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32a40:	mov	r2, r3
   32a44:	asr	r3, r2, #31
   32a48:	mul	lr, r2, r1
   32a4c:	mul	ip, r0, r3
   32a50:	add	ip, lr, ip
   32a54:	umull	r2, r3, r0, r2
   32a58:	add	r1, ip, r3
   32a5c:	mov	r3, r1
   32a60:	strd	r2, [fp, #-12]
   32a64:	mov	r3, #1
   32a68:	b	32aa0 <__assert_fail@plt+0x2155c>
   32a6c:	ldr	r3, [fp, #-16]
   32a70:	ldrd	r0, [r3]
   32a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   32a78:	mov	r2, r3
   32a7c:	asr	r3, r2, #31
   32a80:	mul	lr, r2, r1
   32a84:	mul	ip, r0, r3
   32a88:	add	ip, lr, ip
   32a8c:	umull	r2, r3, r0, r2
   32a90:	add	r1, ip, r3
   32a94:	mov	r3, r1
   32a98:	strd	r2, [fp, #-12]
   32a9c:	mov	r3, #0
   32aa0:	cmp	r3, #0
   32aa4:	beq	32ac0 <__assert_fail@plt+0x2157c>
   32aa8:	ldr	r1, [fp, #-16]
   32aac:	mvn	r2, #0
   32ab0:	mvn	r3, #0
   32ab4:	strd	r2, [r1]
   32ab8:	mov	r3, #1
   32abc:	b	32ad0 <__assert_fail@plt+0x2158c>
   32ac0:	ldrd	r2, [fp, #-12]
   32ac4:	ldr	r1, [fp, #-16]
   32ac8:	strd	r2, [r1]
   32acc:	mov	r3, #0
   32ad0:	mov	r0, r3
   32ad4:	sub	sp, fp, #4
   32ad8:	pop	{fp, pc}
   32adc:	push	{fp, lr}
   32ae0:	add	fp, sp, #4
   32ae4:	sub	sp, sp, #24
   32ae8:	str	r0, [fp, #-16]
   32aec:	str	r1, [fp, #-20]	; 0xffffffec
   32af0:	str	r2, [fp, #-24]	; 0xffffffe8
   32af4:	mov	r3, #0
   32af8:	str	r3, [fp, #-8]
   32afc:	b	32b1c <__assert_fail@plt+0x215d8>
   32b00:	ldr	r1, [fp, #-20]	; 0xffffffec
   32b04:	ldr	r0, [fp, #-16]
   32b08:	bl	32978 <__assert_fail@plt+0x21434>
   32b0c:	mov	r2, r0
   32b10:	ldr	r3, [fp, #-8]
   32b14:	orr	r3, r3, r2
   32b18:	str	r3, [fp, #-8]
   32b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32b20:	sub	r2, r3, #1
   32b24:	str	r2, [fp, #-24]	; 0xffffffe8
   32b28:	cmp	r3, #0
   32b2c:	bne	32b00 <__assert_fail@plt+0x215bc>
   32b30:	ldr	r3, [fp, #-8]
   32b34:	mov	r0, r3
   32b38:	sub	sp, fp, #4
   32b3c:	pop	{fp, pc}
   32b40:	push	{fp, lr}
   32b44:	add	fp, sp, #4
   32b48:	sub	sp, sp, #56	; 0x38
   32b4c:	str	r0, [fp, #-48]	; 0xffffffd0
   32b50:	str	r1, [fp, #-52]	; 0xffffffcc
   32b54:	str	r2, [fp, #-56]	; 0xffffffc8
   32b58:	str	r3, [fp, #-60]	; 0xffffffc4
   32b5c:	mov	r3, #0
   32b60:	str	r3, [fp, #-8]
   32b64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32b68:	cmp	r3, #0
   32b6c:	blt	32b7c <__assert_fail@plt+0x21638>
   32b70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   32b74:	cmp	r3, #36	; 0x24
   32b78:	ble	32b90 <__assert_fail@plt+0x2164c>
   32b7c:	ldr	r3, [pc, #1520]	; 33174 <__assert_fail@plt+0x21c30>
   32b80:	mov	r2, #85	; 0x55
   32b84:	ldr	r1, [pc, #1516]	; 33178 <__assert_fail@plt+0x21c34>
   32b88:	ldr	r0, [pc, #1516]	; 3317c <__assert_fail@plt+0x21c38>
   32b8c:	bl	11544 <__assert_fail@plt>
   32b90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32b94:	cmp	r3, #0
   32b98:	bne	32ba4 <__assert_fail@plt+0x21660>
   32b9c:	sub	r3, fp, #36	; 0x24
   32ba0:	b	32ba8 <__assert_fail@plt+0x21664>
   32ba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32ba8:	str	r3, [fp, #-32]	; 0xffffffe0
   32bac:	bl	11418 <__errno_location@plt>
   32bb0:	mov	r2, r0
   32bb4:	mov	r3, #0
   32bb8:	str	r3, [r2]
   32bbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32bc0:	str	r3, [fp, #-12]
   32bc4:	ldr	r3, [fp, #-12]
   32bc8:	ldrb	r3, [r3]
   32bcc:	strb	r3, [fp, #-13]
   32bd0:	b	32bec <__assert_fail@plt+0x216a8>
   32bd4:	ldr	r3, [fp, #-12]
   32bd8:	add	r3, r3, #1
   32bdc:	str	r3, [fp, #-12]
   32be0:	ldr	r3, [fp, #-12]
   32be4:	ldrb	r3, [r3]
   32be8:	strb	r3, [fp, #-13]
   32bec:	bl	113d0 <__ctype_b_loc@plt>
   32bf0:	mov	r3, r0
   32bf4:	ldr	r2, [r3]
   32bf8:	ldrb	r3, [fp, #-13]
   32bfc:	lsl	r3, r3, #1
   32c00:	add	r3, r2, r3
   32c04:	ldrh	r3, [r3]
   32c08:	and	r3, r3, #8192	; 0x2000
   32c0c:	cmp	r3, #0
   32c10:	bne	32bd4 <__assert_fail@plt+0x21690>
   32c14:	ldrb	r3, [fp, #-13]
   32c18:	cmp	r3, #45	; 0x2d
   32c1c:	bne	32c28 <__assert_fail@plt+0x216e4>
   32c20:	mov	r3, #4
   32c24:	b	33168 <__assert_fail@plt+0x21c24>
   32c28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   32c2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   32c34:	bl	1146c <strtoumax@plt>
   32c38:	mov	r2, r0
   32c3c:	mov	r3, r1
   32c40:	strd	r2, [fp, #-44]	; 0xffffffd4
   32c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32c48:	ldr	r2, [r3]
   32c4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32c50:	cmp	r2, r3
   32c54:	bne	32cb4 <__assert_fail@plt+0x21770>
   32c58:	ldr	r3, [fp, #4]
   32c5c:	cmp	r3, #0
   32c60:	beq	32cac <__assert_fail@plt+0x21768>
   32c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32c68:	ldr	r3, [r3]
   32c6c:	ldrb	r3, [r3]
   32c70:	cmp	r3, #0
   32c74:	beq	32cac <__assert_fail@plt+0x21768>
   32c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32c7c:	ldr	r3, [r3]
   32c80:	ldrb	r3, [r3]
   32c84:	mov	r1, r3
   32c88:	ldr	r0, [fp, #4]
   32c8c:	bl	11400 <strchr@plt>
   32c90:	mov	r3, r0
   32c94:	cmp	r3, #0
   32c98:	beq	32cac <__assert_fail@plt+0x21768>
   32c9c:	mov	r2, #1
   32ca0:	mov	r3, #0
   32ca4:	strd	r2, [fp, #-44]	; 0xffffffd4
   32ca8:	b	32cec <__assert_fail@plt+0x217a8>
   32cac:	mov	r3, #4
   32cb0:	b	33168 <__assert_fail@plt+0x21c24>
   32cb4:	bl	11418 <__errno_location@plt>
   32cb8:	mov	r3, r0
   32cbc:	ldr	r3, [r3]
   32cc0:	cmp	r3, #0
   32cc4:	beq	32cec <__assert_fail@plt+0x217a8>
   32cc8:	bl	11418 <__errno_location@plt>
   32ccc:	mov	r3, r0
   32cd0:	ldr	r3, [r3]
   32cd4:	cmp	r3, #34	; 0x22
   32cd8:	beq	32ce4 <__assert_fail@plt+0x217a0>
   32cdc:	mov	r3, #4
   32ce0:	b	33168 <__assert_fail@plt+0x21c24>
   32ce4:	mov	r3, #1
   32ce8:	str	r3, [fp, #-8]
   32cec:	ldr	r3, [fp, #4]
   32cf0:	cmp	r3, #0
   32cf4:	bne	32d0c <__assert_fail@plt+0x217c8>
   32cf8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   32cfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   32d00:	strd	r2, [r1]
   32d04:	ldr	r3, [fp, #-8]
   32d08:	b	33168 <__assert_fail@plt+0x21c24>
   32d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32d10:	ldr	r3, [r3]
   32d14:	ldrb	r3, [r3]
   32d18:	cmp	r3, #0
   32d1c:	beq	33158 <__assert_fail@plt+0x21c14>
   32d20:	mov	r3, #1024	; 0x400
   32d24:	str	r3, [fp, #-20]	; 0xffffffec
   32d28:	mov	r3, #1
   32d2c:	str	r3, [fp, #-24]	; 0xffffffe8
   32d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32d34:	ldr	r3, [r3]
   32d38:	ldrb	r3, [r3]
   32d3c:	mov	r1, r3
   32d40:	ldr	r0, [fp, #4]
   32d44:	bl	11400 <strchr@plt>
   32d48:	mov	r3, r0
   32d4c:	cmp	r3, #0
   32d50:	bne	32d6c <__assert_fail@plt+0x21828>
   32d54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   32d58:	ldr	r1, [fp, #-60]	; 0xffffffc4
   32d5c:	strd	r2, [r1]
   32d60:	ldr	r3, [fp, #-8]
   32d64:	orr	r3, r3, #2
   32d68:	b	33168 <__assert_fail@plt+0x21c24>
   32d6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32d70:	ldr	r3, [r3]
   32d74:	ldrb	r3, [r3]
   32d78:	sub	r3, r3, #69	; 0x45
   32d7c:	cmp	r3, #47	; 0x2f
   32d80:	ldrls	pc, [pc, r3, lsl #2]
   32d84:	b	32ed0 <__assert_fail@plt+0x2198c>
   32d88:	andeq	r2, r3, r8, asr #28
   32d8c:	ldrdeq	r2, [r3], -r0
   32d90:	andeq	r2, r3, r8, asr #28
   32d94:	ldrdeq	r2, [r3], -r0
   32d98:	ldrdeq	r2, [r3], -r0
   32d9c:	ldrdeq	r2, [r3], -r0
   32da0:	andeq	r2, r3, r8, asr #28
   32da4:	ldrdeq	r2, [r3], -r0
   32da8:	andeq	r2, r3, r8, asr #28
   32dac:	ldrdeq	r2, [r3], -r0
   32db0:	ldrdeq	r2, [r3], -r0
   32db4:	andeq	r2, r3, r8, asr #28
   32db8:	ldrdeq	r2, [r3], -r0
   32dbc:	ldrdeq	r2, [r3], -r0
   32dc0:	ldrdeq	r2, [r3], -r0
   32dc4:	andeq	r2, r3, r8, asr #28
   32dc8:	ldrdeq	r2, [r3], -r0
   32dcc:	ldrdeq	r2, [r3], -r0
   32dd0:	ldrdeq	r2, [r3], -r0
   32dd4:	ldrdeq	r2, [r3], -r0
   32dd8:	andeq	r2, r3, r8, asr #28
   32ddc:	andeq	r2, r3, r8, asr #28
   32de0:	ldrdeq	r2, [r3], -r0
   32de4:	ldrdeq	r2, [r3], -r0
   32de8:	ldrdeq	r2, [r3], -r0
   32dec:	ldrdeq	r2, [r3], -r0
   32df0:	ldrdeq	r2, [r3], -r0
   32df4:	ldrdeq	r2, [r3], -r0
   32df8:	ldrdeq	r2, [r3], -r0
   32dfc:	ldrdeq	r2, [r3], -r0
   32e00:	ldrdeq	r2, [r3], -r0
   32e04:	ldrdeq	r2, [r3], -r0
   32e08:	ldrdeq	r2, [r3], -r0
   32e0c:	ldrdeq	r2, [r3], -r0
   32e10:	andeq	r2, r3, r8, asr #28
   32e14:	ldrdeq	r2, [r3], -r0
   32e18:	ldrdeq	r2, [r3], -r0
   32e1c:	ldrdeq	r2, [r3], -r0
   32e20:	andeq	r2, r3, r8, asr #28
   32e24:	ldrdeq	r2, [r3], -r0
   32e28:	andeq	r2, r3, r8, asr #28
   32e2c:	ldrdeq	r2, [r3], -r0
   32e30:	ldrdeq	r2, [r3], -r0
   32e34:	ldrdeq	r2, [r3], -r0
   32e38:	ldrdeq	r2, [r3], -r0
   32e3c:	ldrdeq	r2, [r3], -r0
   32e40:	ldrdeq	r2, [r3], -r0
   32e44:	andeq	r2, r3, r8, asr #28
   32e48:	mov	r1, #48	; 0x30
   32e4c:	ldr	r0, [fp, #4]
   32e50:	bl	11400 <strchr@plt>
   32e54:	mov	r3, r0
   32e58:	cmp	r3, #0
   32e5c:	beq	32ed0 <__assert_fail@plt+0x2198c>
   32e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32e64:	ldr	r3, [r3]
   32e68:	add	r3, r3, #1
   32e6c:	ldrb	r3, [r3]
   32e70:	cmp	r3, #68	; 0x44
   32e74:	beq	32eb4 <__assert_fail@plt+0x21970>
   32e78:	cmp	r3, #105	; 0x69
   32e7c:	beq	32e8c <__assert_fail@plt+0x21948>
   32e80:	cmp	r3, #66	; 0x42
   32e84:	beq	32eb4 <__assert_fail@plt+0x21970>
   32e88:	b	32ed0 <__assert_fail@plt+0x2198c>
   32e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32e90:	ldr	r3, [r3]
   32e94:	add	r3, r3, #2
   32e98:	ldrb	r3, [r3]
   32e9c:	cmp	r3, #66	; 0x42
   32ea0:	bne	32ecc <__assert_fail@plt+0x21988>
   32ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ea8:	add	r3, r3, #2
   32eac:	str	r3, [fp, #-24]	; 0xffffffe8
   32eb0:	b	32ecc <__assert_fail@plt+0x21988>
   32eb4:	mov	r3, #1000	; 0x3e8
   32eb8:	str	r3, [fp, #-20]	; 0xffffffec
   32ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ec0:	add	r3, r3, #1
   32ec4:	str	r3, [fp, #-24]	; 0xffffffe8
   32ec8:	b	32ed0 <__assert_fail@plt+0x2198c>
   32ecc:	nop			; (mov r0, r0)
   32ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32ed4:	ldr	r3, [r3]
   32ed8:	ldrb	r3, [r3]
   32edc:	sub	r3, r3, #66	; 0x42
   32ee0:	cmp	r3, #53	; 0x35
   32ee4:	ldrls	pc, [pc, r3, lsl #2]
   32ee8:	b	330f8 <__assert_fail@plt+0x21bb4>
   32eec:	ldrdeq	r2, [r3], -ip
   32ef0:	strdeq	r3, [r3], -r8
   32ef4:	strdeq	r3, [r3], -r8
   32ef8:	andeq	r3, r3, r0
   32efc:	strdeq	r3, [r3], -r8
   32f00:	andeq	r3, r3, ip, lsl r0
   32f04:	strdeq	r3, [r3], -r8
   32f08:	strdeq	r3, [r3], -r8
   32f0c:	strdeq	r3, [r3], -r8
   32f10:	andeq	r3, r3, r8, lsr r0
   32f14:	strdeq	r3, [r3], -r8
   32f18:	andeq	r3, r3, r4, asr r0
   32f1c:	strdeq	r3, [r3], -r8
   32f20:	strdeq	r3, [r3], -r8
   32f24:	andeq	r3, r3, r0, ror r0
   32f28:	strdeq	r3, [r3], -r8
   32f2c:	strdeq	r3, [r3], -r8
   32f30:	strdeq	r3, [r3], -r8
   32f34:	andeq	r3, r3, ip, lsl #1
   32f38:	strdeq	r3, [r3], -r8
   32f3c:	strdeq	r3, [r3], -r8
   32f40:	strdeq	r3, [r3], -r8
   32f44:	strdeq	r3, [r3], -r8
   32f48:	andeq	r3, r3, r0, asr #1
   32f4c:	ldrdeq	r3, [r3], -ip
   32f50:	strdeq	r3, [r3], -r8
   32f54:	strdeq	r3, [r3], -r8
   32f58:	strdeq	r3, [r3], -r8
   32f5c:	strdeq	r3, [r3], -r8
   32f60:	strdeq	r3, [r3], -r8
   32f64:	strdeq	r3, [r3], -r8
   32f68:	strdeq	r3, [r3], -r8
   32f6c:	andeq	r2, r3, r4, asr #31
   32f70:	strdeq	r2, [r3], -r4
   32f74:	strdeq	r3, [r3], -r8
   32f78:	strdeq	r3, [r3], -r8
   32f7c:	strdeq	r3, [r3], -r8
   32f80:	andeq	r3, r3, ip, lsl r0
   32f84:	strdeq	r3, [r3], -r8
   32f88:	strdeq	r3, [r3], -r8
   32f8c:	strdeq	r3, [r3], -r8
   32f90:	andeq	r3, r3, r8, lsr r0
   32f94:	strdeq	r3, [r3], -r8
   32f98:	andeq	r3, r3, r4, asr r0
   32f9c:	strdeq	r3, [r3], -r8
   32fa0:	strdeq	r3, [r3], -r8
   32fa4:	strdeq	r3, [r3], -r8
   32fa8:	strdeq	r3, [r3], -r8
   32fac:	strdeq	r3, [r3], -r8
   32fb0:	strdeq	r3, [r3], -r8
   32fb4:	andeq	r3, r3, ip, lsl #1
   32fb8:	strdeq	r3, [r3], -r8
   32fbc:	strdeq	r3, [r3], -r8
   32fc0:	andeq	r3, r3, r8, lsr #1
   32fc4:	sub	r3, fp, #44	; 0x2c
   32fc8:	mov	r1, #512	; 0x200
   32fcc:	mov	r0, r3
   32fd0:	bl	32978 <__assert_fail@plt+0x21434>
   32fd4:	str	r0, [fp, #-28]	; 0xffffffe4
   32fd8:	b	33110 <__assert_fail@plt+0x21bcc>
   32fdc:	sub	r3, fp, #44	; 0x2c
   32fe0:	mov	r1, #1024	; 0x400
   32fe4:	mov	r0, r3
   32fe8:	bl	32978 <__assert_fail@plt+0x21434>
   32fec:	str	r0, [fp, #-28]	; 0xffffffe4
   32ff0:	b	33110 <__assert_fail@plt+0x21bcc>
   32ff4:	mov	r3, #0
   32ff8:	str	r3, [fp, #-28]	; 0xffffffe4
   32ffc:	b	33110 <__assert_fail@plt+0x21bcc>
   33000:	sub	r3, fp, #44	; 0x2c
   33004:	mov	r2, #6
   33008:	ldr	r1, [fp, #-20]	; 0xffffffec
   3300c:	mov	r0, r3
   33010:	bl	32adc <__assert_fail@plt+0x21598>
   33014:	str	r0, [fp, #-28]	; 0xffffffe4
   33018:	b	33110 <__assert_fail@plt+0x21bcc>
   3301c:	sub	r3, fp, #44	; 0x2c
   33020:	mov	r2, #3
   33024:	ldr	r1, [fp, #-20]	; 0xffffffec
   33028:	mov	r0, r3
   3302c:	bl	32adc <__assert_fail@plt+0x21598>
   33030:	str	r0, [fp, #-28]	; 0xffffffe4
   33034:	b	33110 <__assert_fail@plt+0x21bcc>
   33038:	sub	r3, fp, #44	; 0x2c
   3303c:	mov	r2, #1
   33040:	ldr	r1, [fp, #-20]	; 0xffffffec
   33044:	mov	r0, r3
   33048:	bl	32adc <__assert_fail@plt+0x21598>
   3304c:	str	r0, [fp, #-28]	; 0xffffffe4
   33050:	b	33110 <__assert_fail@plt+0x21bcc>
   33054:	sub	r3, fp, #44	; 0x2c
   33058:	mov	r2, #2
   3305c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33060:	mov	r0, r3
   33064:	bl	32adc <__assert_fail@plt+0x21598>
   33068:	str	r0, [fp, #-28]	; 0xffffffe4
   3306c:	b	33110 <__assert_fail@plt+0x21bcc>
   33070:	sub	r3, fp, #44	; 0x2c
   33074:	mov	r2, #5
   33078:	ldr	r1, [fp, #-20]	; 0xffffffec
   3307c:	mov	r0, r3
   33080:	bl	32adc <__assert_fail@plt+0x21598>
   33084:	str	r0, [fp, #-28]	; 0xffffffe4
   33088:	b	33110 <__assert_fail@plt+0x21bcc>
   3308c:	sub	r3, fp, #44	; 0x2c
   33090:	mov	r2, #4
   33094:	ldr	r1, [fp, #-20]	; 0xffffffec
   33098:	mov	r0, r3
   3309c:	bl	32adc <__assert_fail@plt+0x21598>
   330a0:	str	r0, [fp, #-28]	; 0xffffffe4
   330a4:	b	33110 <__assert_fail@plt+0x21bcc>
   330a8:	sub	r3, fp, #44	; 0x2c
   330ac:	mov	r1, #2
   330b0:	mov	r0, r3
   330b4:	bl	32978 <__assert_fail@plt+0x21434>
   330b8:	str	r0, [fp, #-28]	; 0xffffffe4
   330bc:	b	33110 <__assert_fail@plt+0x21bcc>
   330c0:	sub	r3, fp, #44	; 0x2c
   330c4:	mov	r2, #8
   330c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   330cc:	mov	r0, r3
   330d0:	bl	32adc <__assert_fail@plt+0x21598>
   330d4:	str	r0, [fp, #-28]	; 0xffffffe4
   330d8:	b	33110 <__assert_fail@plt+0x21bcc>
   330dc:	sub	r3, fp, #44	; 0x2c
   330e0:	mov	r2, #7
   330e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   330e8:	mov	r0, r3
   330ec:	bl	32adc <__assert_fail@plt+0x21598>
   330f0:	str	r0, [fp, #-28]	; 0xffffffe4
   330f4:	b	33110 <__assert_fail@plt+0x21bcc>
   330f8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   330fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   33100:	strd	r2, [r1]
   33104:	ldr	r3, [fp, #-8]
   33108:	orr	r3, r3, #2
   3310c:	b	33168 <__assert_fail@plt+0x21c24>
   33110:	ldr	r2, [fp, #-8]
   33114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33118:	orr	r3, r2, r3
   3311c:	str	r3, [fp, #-8]
   33120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33124:	ldr	r2, [r3]
   33128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3312c:	add	r2, r2, r3
   33130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33134:	str	r2, [r3]
   33138:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3313c:	ldr	r3, [r3]
   33140:	ldrb	r3, [r3]
   33144:	cmp	r3, #0
   33148:	beq	33158 <__assert_fail@plt+0x21c14>
   3314c:	ldr	r3, [fp, #-8]
   33150:	orr	r3, r3, #2
   33154:	str	r3, [fp, #-8]
   33158:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3315c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   33160:	strd	r2, [r1]
   33164:	ldr	r3, [fp, #-8]
   33168:	mov	r0, r3
   3316c:	sub	sp, fp, #4
   33170:	pop	{fp, pc}
   33174:	andeq	r6, r3, r4, lsr #5
   33178:	andeq	r6, r3, ip, ror #4
   3317c:	andeq	r6, r3, ip, ror r2
   33180:	push	{r4, r5, fp, lr}
   33184:	add	fp, sp, #12
   33188:	sub	sp, sp, #16
   3318c:	str	r0, [fp, #-24]	; 0xffffffe8
   33190:	str	r1, [fp, #-28]	; 0xffffffe4
   33194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33198:	cmp	r3, #0
   3319c:	beq	331ac <__assert_fail@plt+0x21c68>
   331a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   331a4:	cmp	r3, #0
   331a8:	bne	331bc <__assert_fail@plt+0x21c78>
   331ac:	mov	r3, #1
   331b0:	str	r3, [fp, #-28]	; 0xffffffe4
   331b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   331b8:	str	r3, [fp, #-24]	; 0xffffffe8
   331bc:	mov	r1, #0
   331c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   331c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   331c8:	umull	r2, r3, r2, r3
   331cc:	mov	r4, r3
   331d0:	mov	r5, #0
   331d4:	cmp	r4, #0
   331d8:	beq	331e0 <__assert_fail@plt+0x21c9c>
   331dc:	mov	r1, #1
   331e0:	cmp	r2, #0
   331e4:	bge	331ec <__assert_fail@plt+0x21ca8>
   331e8:	mov	r1, #1
   331ec:	mov	r3, r2
   331f0:	str	r3, [fp, #-20]	; 0xffffffec
   331f4:	mov	r3, r1
   331f8:	and	r3, r3, #1
   331fc:	uxtb	r3, r3
   33200:	cmp	r3, #0
   33204:	beq	33220 <__assert_fail@plt+0x21cdc>
   33208:	bl	11418 <__errno_location@plt>
   3320c:	mov	r2, r0
   33210:	mov	r3, #12
   33214:	str	r3, [r2]
   33218:	mov	r3, #0
   3321c:	b	33238 <__assert_fail@plt+0x21cf4>
   33220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33228:	bl	11190 <calloc@plt>
   3322c:	mov	r3, r0
   33230:	str	r3, [fp, #-16]
   33234:	ldr	r3, [fp, #-16]
   33238:	mov	r0, r3
   3323c:	sub	sp, fp, #12
   33240:	pop	{r4, r5, fp, pc}
   33244:	push	{r4, r5, fp, lr}
   33248:	add	fp, sp, #12
   3324c:	sub	sp, sp, #16
   33250:	str	r0, [fp, #-24]	; 0xffffffe8
   33254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33258:	cmp	r3, #0
   3325c:	bne	33268 <__assert_fail@plt+0x21d24>
   33260:	mov	r3, #1
   33264:	str	r3, [fp, #-24]	; 0xffffffe8
   33268:	mov	r1, #0
   3326c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33270:	mov	r2, r3
   33274:	mov	r3, #0
   33278:	mov	r4, r3
   3327c:	mov	r5, #0
   33280:	cmp	r4, #0
   33284:	beq	3328c <__assert_fail@plt+0x21d48>
   33288:	mov	r1, #1
   3328c:	cmp	r2, #0
   33290:	bge	33298 <__assert_fail@plt+0x21d54>
   33294:	mov	r1, #1
   33298:	mov	r3, r2
   3329c:	str	r3, [fp, #-20]	; 0xffffffec
   332a0:	mov	r3, r1
   332a4:	and	r3, r3, #1
   332a8:	uxtb	r3, r3
   332ac:	cmp	r3, #0
   332b0:	beq	332cc <__assert_fail@plt+0x21d88>
   332b4:	bl	11418 <__errno_location@plt>
   332b8:	mov	r2, r0
   332bc:	mov	r3, #12
   332c0:	str	r3, [r2]
   332c4:	mov	r3, #0
   332c8:	b	332e0 <__assert_fail@plt+0x21d9c>
   332cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332d0:	bl	11388 <malloc@plt>
   332d4:	mov	r3, r0
   332d8:	str	r3, [fp, #-16]
   332dc:	ldr	r3, [fp, #-16]
   332e0:	mov	r0, r3
   332e4:	sub	sp, fp, #12
   332e8:	pop	{r4, r5, fp, pc}
   332ec:	push	{r4, r5, fp, lr}
   332f0:	add	fp, sp, #12
   332f4:	sub	sp, sp, #16
   332f8:	str	r0, [fp, #-24]	; 0xffffffe8
   332fc:	str	r1, [fp, #-28]	; 0xffffffe4
   33300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33304:	cmp	r3, #0
   33308:	bne	3331c <__assert_fail@plt+0x21dd8>
   3330c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   33310:	bl	33244 <__assert_fail@plt+0x21d00>
   33314:	mov	r3, r0
   33318:	b	333b0 <__assert_fail@plt+0x21e6c>
   3331c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33320:	cmp	r3, #0
   33324:	bne	33338 <__assert_fail@plt+0x21df4>
   33328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3332c:	bl	14dec <__assert_fail@plt+0x38a8>
   33330:	mov	r3, #0
   33334:	b	333b0 <__assert_fail@plt+0x21e6c>
   33338:	mov	r1, #0
   3333c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33340:	mov	r2, r3
   33344:	mov	r3, #0
   33348:	mov	r4, r3
   3334c:	mov	r5, #0
   33350:	cmp	r4, #0
   33354:	beq	3335c <__assert_fail@plt+0x21e18>
   33358:	mov	r1, #1
   3335c:	cmp	r2, #0
   33360:	bge	33368 <__assert_fail@plt+0x21e24>
   33364:	mov	r1, #1
   33368:	mov	r3, r2
   3336c:	str	r3, [fp, #-20]	; 0xffffffec
   33370:	mov	r3, r1
   33374:	and	r3, r3, #1
   33378:	uxtb	r3, r3
   3337c:	cmp	r3, #0
   33380:	beq	3339c <__assert_fail@plt+0x21e58>
   33384:	bl	11418 <__errno_location@plt>
   33388:	mov	r2, r0
   3338c:	mov	r3, #12
   33390:	str	r3, [r2]
   33394:	mov	r3, #0
   33398:	b	333b0 <__assert_fail@plt+0x21e6c>
   3339c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   333a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333a4:	bl	112d4 <realloc@plt>
   333a8:	str	r0, [fp, #-16]
   333ac:	ldr	r3, [fp, #-16]
   333b0:	mov	r0, r3
   333b4:	sub	sp, fp, #12
   333b8:	pop	{r4, r5, fp, pc}
   333bc:	push	{r4, r5, fp, lr}
   333c0:	add	fp, sp, #12
   333c4:	sub	sp, sp, #16
   333c8:	str	r0, [fp, #-24]	; 0xffffffe8
   333cc:	str	r1, [fp, #-28]	; 0xffffffe4
   333d0:	ldr	r5, [fp, #-24]	; 0xffffffe8
   333d4:	ldr	r4, [fp, #-28]	; 0xffffffe4
   333d8:	cmp	r5, r4
   333dc:	bne	333e8 <__assert_fail@plt+0x21ea4>
   333e0:	mov	r3, #0
   333e4:	b	33448 <__assert_fail@plt+0x21f04>
   333e8:	ldrb	r3, [r5]
   333ec:	mov	r0, r3
   333f0:	bl	34510 <__assert_fail@plt+0x22fcc>
   333f4:	mov	r3, r0
   333f8:	strb	r3, [fp, #-13]
   333fc:	ldrb	r3, [r4]
   33400:	mov	r0, r3
   33404:	bl	34510 <__assert_fail@plt+0x22fcc>
   33408:	mov	r3, r0
   3340c:	strb	r3, [fp, #-14]
   33410:	ldrb	r3, [fp, #-13]
   33414:	cmp	r3, #0
   33418:	beq	33438 <__assert_fail@plt+0x21ef4>
   3341c:	add	r5, r5, #1
   33420:	add	r4, r4, #1
   33424:	ldrb	r2, [fp, #-13]
   33428:	ldrb	r3, [fp, #-14]
   3342c:	cmp	r2, r3
   33430:	beq	333e8 <__assert_fail@plt+0x21ea4>
   33434:	b	3343c <__assert_fail@plt+0x21ef8>
   33438:	nop			; (mov r0, r0)
   3343c:	ldrb	r2, [fp, #-13]
   33440:	ldrb	r3, [fp, #-14]
   33444:	sub	r3, r2, r3
   33448:	mov	r0, r3
   3344c:	sub	sp, fp, #12
   33450:	pop	{r4, r5, fp, pc}
   33454:	push	{fp, lr}
   33458:	add	fp, sp, #4
   3345c:	sub	sp, sp, #16
   33460:	str	r0, [fp, #-16]
   33464:	ldr	r0, [fp, #-16]
   33468:	bl	1134c <__fpending@plt>
   3346c:	mov	r3, r0
   33470:	cmp	r3, #0
   33474:	movne	r3, #1
   33478:	moveq	r3, #0
   3347c:	strb	r3, [fp, #-5]
   33480:	ldr	r0, [fp, #-16]
   33484:	bl	11358 <ferror_unlocked@plt>
   33488:	mov	r3, r0
   3348c:	cmp	r3, #0
   33490:	movne	r3, #1
   33494:	moveq	r3, #0
   33498:	strb	r3, [fp, #-6]
   3349c:	ldr	r0, [fp, #-16]
   334a0:	bl	14aa4 <__assert_fail@plt+0x3560>
   334a4:	mov	r3, r0
   334a8:	cmp	r3, #0
   334ac:	movne	r3, #1
   334b0:	moveq	r3, #0
   334b4:	strb	r3, [fp, #-7]
   334b8:	ldrb	r3, [fp, #-6]
   334bc:	cmp	r3, #0
   334c0:	bne	334f0 <__assert_fail@plt+0x21fac>
   334c4:	ldrb	r3, [fp, #-7]
   334c8:	cmp	r3, #0
   334cc:	beq	3351c <__assert_fail@plt+0x21fd8>
   334d0:	ldrb	r3, [fp, #-5]
   334d4:	cmp	r3, #0
   334d8:	bne	334f0 <__assert_fail@plt+0x21fac>
   334dc:	bl	11418 <__errno_location@plt>
   334e0:	mov	r3, r0
   334e4:	ldr	r3, [r3]
   334e8:	cmp	r3, #9
   334ec:	beq	3351c <__assert_fail@plt+0x21fd8>
   334f0:	ldrb	r3, [fp, #-7]
   334f4:	eor	r3, r3, #1
   334f8:	uxtb	r3, r3
   334fc:	cmp	r3, #0
   33500:	beq	33514 <__assert_fail@plt+0x21fd0>
   33504:	bl	11418 <__errno_location@plt>
   33508:	mov	r2, r0
   3350c:	mov	r3, #0
   33510:	str	r3, [r2]
   33514:	mvn	r3, #0
   33518:	b	33520 <__assert_fail@plt+0x21fdc>
   3351c:	mov	r3, #0
   33520:	mov	r0, r3
   33524:	sub	sp, fp, #4
   33528:	pop	{fp, pc}
   3352c:	push	{fp, lr}
   33530:	add	fp, sp, #4
   33534:	sub	sp, sp, #32
   33538:	str	r0, [fp, #-24]	; 0xffffffe8
   3353c:	str	r1, [fp, #-28]	; 0xffffffe4
   33540:	str	r2, [fp, #-32]	; 0xffffffe0
   33544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33548:	ldr	r3, [r3, #4]
   3354c:	cmp	r3, #0
   33550:	bne	33590 <__assert_fail@plt+0x2204c>
   33554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33558:	cmp	r3, #3
   3355c:	bhi	3356c <__assert_fail@plt+0x22028>
   33560:	mov	r3, #16
   33564:	str	r3, [fp, #-8]
   33568:	b	335dc <__assert_fail@plt+0x22098>
   3356c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33570:	cmp	r3, #7
   33574:	bhi	33584 <__assert_fail@plt+0x22040>
   33578:	mov	r3, #8
   3357c:	str	r3, [fp, #-8]
   33580:	b	335dc <__assert_fail@plt+0x22098>
   33584:	mov	r3, #4
   33588:	str	r3, [fp, #-8]
   3358c:	b	335dc <__assert_fail@plt+0x22098>
   33590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33594:	ldr	r2, [r3, #4]
   33598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3359c:	ldr	r3, [r3, #4]
   335a0:	lsr	r3, r3, #1
   335a4:	add	r3, r2, r3
   335a8:	add	r3, r3, #1
   335ac:	str	r3, [fp, #-8]
   335b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   335b4:	ldr	r2, [r3, #4]
   335b8:	ldr	r3, [fp, #-8]
   335bc:	cmp	r2, r3
   335c0:	bcc	335dc <__assert_fail@plt+0x22098>
   335c4:	bl	11418 <__errno_location@plt>
   335c8:	mov	r2, r0
   335cc:	mov	r3, #12
   335d0:	str	r3, [r2]
   335d4:	mov	r3, #0
   335d8:	b	336fc <__assert_fail@plt+0x221b8>
   335dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   335e0:	cmp	r3, #0
   335e4:	beq	33620 <__assert_fail@plt+0x220dc>
   335e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   335ec:	mvn	r0, #0
   335f0:	bl	34794 <__assert_fail@plt+0x23250>
   335f4:	mov	r3, r0
   335f8:	mov	r2, r3
   335fc:	ldr	r3, [fp, #-8]
   33600:	cmp	r2, r3
   33604:	bcs	33620 <__assert_fail@plt+0x220dc>
   33608:	ldr	r3, [fp, #-8]
   3360c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33610:	mul	r3, r2, r3
   33614:	str	r3, [fp, #-16]
   33618:	mov	r3, #1
   3361c:	b	33634 <__assert_fail@plt+0x220f0>
   33620:	ldr	r3, [fp, #-8]
   33624:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33628:	mul	r3, r2, r3
   3362c:	str	r3, [fp, #-16]
   33630:	mov	r3, #0
   33634:	cmp	r3, #0
   33638:	beq	33644 <__assert_fail@plt+0x22100>
   3363c:	mov	r3, #0
   33640:	b	336fc <__assert_fail@plt+0x221b8>
   33644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33648:	ldr	r2, [r3, #8]
   3364c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33650:	cmp	r2, r3
   33654:	bne	336b0 <__assert_fail@plt+0x2216c>
   33658:	ldr	r3, [fp, #-16]
   3365c:	mov	r0, r3
   33660:	bl	33244 <__assert_fail@plt+0x21d00>
   33664:	mov	r3, r0
   33668:	str	r3, [fp, #-12]
   3366c:	ldr	r3, [fp, #-12]
   33670:	cmp	r3, #0
   33674:	beq	336cc <__assert_fail@plt+0x22188>
   33678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3367c:	ldr	r3, [r3, #8]
   33680:	cmp	r3, #0
   33684:	beq	336cc <__assert_fail@plt+0x22188>
   33688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3368c:	ldr	r1, [r3, #8]
   33690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33694:	ldr	r3, [r3]
   33698:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3369c:	mul	r3, r2, r3
   336a0:	mov	r2, r3
   336a4:	ldr	r0, [fp, #-12]
   336a8:	bl	11250 <memcpy@plt>
   336ac:	b	336cc <__assert_fail@plt+0x22188>
   336b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   336b4:	ldr	r3, [r3, #8]
   336b8:	ldr	r2, [fp, #-16]
   336bc:	mov	r1, r2
   336c0:	mov	r0, r3
   336c4:	bl	332ec <__assert_fail@plt+0x21da8>
   336c8:	str	r0, [fp, #-12]
   336cc:	ldr	r3, [fp, #-12]
   336d0:	cmp	r3, #0
   336d4:	bne	336e0 <__assert_fail@plt+0x2219c>
   336d8:	mov	r3, #0
   336dc:	b	336fc <__assert_fail@plt+0x221b8>
   336e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   336e4:	ldr	r2, [fp, #-12]
   336e8:	str	r2, [r3, #8]
   336ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   336f0:	ldr	r2, [fp, #-8]
   336f4:	str	r2, [r3, #4]
   336f8:	mov	r3, #1
   336fc:	mov	r0, r3
   33700:	sub	sp, fp, #4
   33704:	pop	{fp, pc}
   33708:	push	{fp}		; (str fp, [sp, #-4]!)
   3370c:	add	fp, sp, #0
   33710:	mvn	r3, #0
   33714:	mov	r0, r3
   33718:	add	sp, fp, #0
   3371c:	pop	{fp}		; (ldr fp, [sp], #4)
   33720:	bx	lr
   33724:	push	{r4, fp, lr}
   33728:	add	fp, sp, #8
   3372c:	sub	sp, sp, #12
   33730:	str	r0, [fp, #-16]
   33734:	ldr	r3, [fp, #-16]
   33738:	ldr	r4, [r3, #4]
   3373c:	bl	33708 <__assert_fail@plt+0x221c4>
   33740:	mov	r3, r0
   33744:	cmp	r4, r3
   33748:	moveq	r3, #1
   3374c:	movne	r3, #0
   33750:	uxtb	r3, r3
   33754:	mov	r0, r3
   33758:	sub	sp, fp, #8
   3375c:	pop	{r4, fp, pc}
   33760:	push	{fp, lr}
   33764:	add	fp, sp, #4
   33768:	sub	sp, sp, #32
   3376c:	str	r0, [fp, #-24]	; 0xffffffe8
   33770:	str	r1, [fp, #-28]	; 0xffffffe4
   33774:	str	r2, [fp, #-32]	; 0xffffffe0
   33778:	str	r3, [fp, #-36]	; 0xffffffdc
   3377c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33780:	bl	33724 <__assert_fail@plt+0x221e0>
   33784:	mov	r3, r0
   33788:	cmp	r3, #0
   3378c:	beq	33798 <__assert_fail@plt+0x22254>
   33790:	mov	r3, #0
   33794:	b	33890 <__assert_fail@plt+0x2234c>
   33798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3379c:	ldr	r3, [r3]
   337a0:	str	r3, [fp, #-8]
   337a4:	ldr	r3, [fp, #-8]
   337a8:	cmp	r3, #0
   337ac:	bne	337f4 <__assert_fail@plt+0x222b0>
   337b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   337b4:	ldr	r2, [r3, #8]
   337b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   337bc:	cmp	r2, r3
   337c0:	beq	337d4 <__assert_fail@plt+0x22290>
   337c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   337c8:	ldr	r3, [r3, #8]
   337cc:	mov	r0, r3
   337d0:	bl	14dec <__assert_fail@plt+0x38a8>
   337d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337d8:	mov	r2, #0
   337dc:	str	r2, [r3]
   337e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   337e4:	mov	r2, #0
   337e8:	str	r2, [r3, #4]
   337ec:	mov	r3, #1
   337f0:	b	33890 <__assert_fail@plt+0x2234c>
   337f4:	ldr	r3, [fp, #-8]
   337f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   337fc:	mul	r3, r2, r3
   33800:	str	r3, [fp, #-12]
   33804:	ldr	r0, [fp, #-12]
   33808:	bl	33244 <__assert_fail@plt+0x21d00>
   3380c:	mov	r3, r0
   33810:	str	r3, [fp, #-16]
   33814:	ldr	r3, [fp, #-16]
   33818:	cmp	r3, #0
   3381c:	beq	3388c <__assert_fail@plt+0x22348>
   33820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33824:	ldr	r3, [r3, #8]
   33828:	cmp	r3, #0
   3382c:	beq	33848 <__assert_fail@plt+0x22304>
   33830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33834:	ldr	r3, [r3, #8]
   33838:	ldr	r2, [fp, #-12]
   3383c:	mov	r1, r3
   33840:	ldr	r0, [fp, #-16]
   33844:	bl	11250 <memcpy@plt>
   33848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3384c:	ldr	r2, [r3, #8]
   33850:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33854:	cmp	r2, r3
   33858:	beq	3386c <__assert_fail@plt+0x22328>
   3385c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33860:	ldr	r3, [r3, #8]
   33864:	mov	r0, r3
   33868:	bl	14dec <__assert_fail@plt+0x38a8>
   3386c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33870:	ldr	r2, [fp, #-16]
   33874:	str	r2, [r3]
   33878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3387c:	ldr	r2, [fp, #-8]
   33880:	str	r2, [r3, #4]
   33884:	mov	r3, #1
   33888:	b	33890 <__assert_fail@plt+0x2234c>
   3388c:	mov	r3, #0
   33890:	mov	r0, r3
   33894:	sub	sp, fp, #4
   33898:	pop	{fp, pc}
   3389c:	push	{fp, lr}
   338a0:	add	fp, sp, #4
   338a4:	sub	sp, sp, #24
   338a8:	str	r0, [fp, #-16]
   338ac:	str	r1, [fp, #-20]	; 0xffffffec
   338b0:	str	r2, [fp, #-24]	; 0xffffffe8
   338b4:	str	r3, [fp, #-28]	; 0xffffffe4
   338b8:	ldr	r3, [fp, #-16]
   338bc:	ldr	r2, [r3, #4]
   338c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   338c4:	cmp	r2, r3
   338c8:	bcc	338e0 <__assert_fail@plt+0x2239c>
   338cc:	ldr	r3, [fp, #-16]
   338d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   338d4:	str	r2, [r3]
   338d8:	mov	r3, #1
   338dc:	b	33a1c <__assert_fail@plt+0x224d8>
   338e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   338e4:	cmp	r3, #0
   338e8:	beq	33924 <__assert_fail@plt+0x223e0>
   338ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   338f0:	mvn	r0, #0
   338f4:	bl	34794 <__assert_fail@plt+0x23250>
   338f8:	mov	r3, r0
   338fc:	mov	r2, r3
   33900:	ldr	r3, [fp, #-20]	; 0xffffffec
   33904:	cmp	r2, r3
   33908:	bcs	33924 <__assert_fail@plt+0x223e0>
   3390c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33910:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33914:	mul	r3, r2, r3
   33918:	str	r3, [fp, #-12]
   3391c:	mov	r3, #1
   33920:	b	33938 <__assert_fail@plt+0x223f4>
   33924:	ldr	r3, [fp, #-20]	; 0xffffffec
   33928:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3392c:	mul	r3, r2, r3
   33930:	str	r3, [fp, #-12]
   33934:	mov	r3, #0
   33938:	cmp	r3, #0
   3393c:	beq	33958 <__assert_fail@plt+0x22414>
   33940:	bl	11418 <__errno_location@plt>
   33944:	mov	r2, r0
   33948:	mov	r3, #12
   3394c:	str	r3, [r2]
   33950:	mov	r3, #0
   33954:	b	33a1c <__assert_fail@plt+0x224d8>
   33958:	ldr	r3, [fp, #-16]
   3395c:	ldr	r2, [r3, #8]
   33960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33964:	cmp	r2, r3
   33968:	bne	339c4 <__assert_fail@plt+0x22480>
   3396c:	ldr	r3, [fp, #-12]
   33970:	mov	r0, r3
   33974:	bl	33244 <__assert_fail@plt+0x21d00>
   33978:	mov	r3, r0
   3397c:	str	r3, [fp, #-8]
   33980:	ldr	r3, [fp, #-8]
   33984:	cmp	r3, #0
   33988:	beq	339e0 <__assert_fail@plt+0x2249c>
   3398c:	ldr	r3, [fp, #-16]
   33990:	ldr	r3, [r3, #8]
   33994:	cmp	r3, #0
   33998:	beq	339e0 <__assert_fail@plt+0x2249c>
   3399c:	ldr	r3, [fp, #-16]
   339a0:	ldr	r1, [r3, #8]
   339a4:	ldr	r3, [fp, #-16]
   339a8:	ldr	r3, [r3]
   339ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   339b0:	mul	r3, r2, r3
   339b4:	mov	r2, r3
   339b8:	ldr	r0, [fp, #-8]
   339bc:	bl	11250 <memcpy@plt>
   339c0:	b	339e0 <__assert_fail@plt+0x2249c>
   339c4:	ldr	r3, [fp, #-16]
   339c8:	ldr	r3, [r3, #8]
   339cc:	ldr	r2, [fp, #-12]
   339d0:	mov	r1, r2
   339d4:	mov	r0, r3
   339d8:	bl	332ec <__assert_fail@plt+0x21da8>
   339dc:	str	r0, [fp, #-8]
   339e0:	ldr	r3, [fp, #-8]
   339e4:	cmp	r3, #0
   339e8:	bne	339f4 <__assert_fail@plt+0x224b0>
   339ec:	mov	r3, #0
   339f0:	b	33a1c <__assert_fail@plt+0x224d8>
   339f4:	ldr	r3, [fp, #-16]
   339f8:	ldr	r2, [fp, #-8]
   339fc:	str	r2, [r3, #8]
   33a00:	ldr	r3, [fp, #-16]
   33a04:	ldr	r2, [fp, #-20]	; 0xffffffec
   33a08:	str	r2, [r3, #4]
   33a0c:	ldr	r3, [fp, #-16]
   33a10:	ldr	r2, [fp, #-20]	; 0xffffffec
   33a14:	str	r2, [r3]
   33a18:	mov	r3, #1
   33a1c:	mov	r0, r3
   33a20:	sub	sp, fp, #4
   33a24:	pop	{fp, pc}
   33a28:	push	{r1, r2, r3}
   33a2c:	push	{fp, lr}
   33a30:	add	fp, sp, #4
   33a34:	sub	sp, sp, #36	; 0x24
   33a38:	str	r0, [fp, #-36]	; 0xffffffdc
   33a3c:	mvn	r3, #0
   33a40:	str	r3, [fp, #-12]
   33a44:	add	r3, fp, #8
   33a48:	str	r3, [fp, #-32]	; 0xffffffe0
   33a4c:	ldr	r3, [fp, #4]
   33a50:	cmp	r3, #0
   33a54:	beq	33a68 <__assert_fail@plt+0x22524>
   33a58:	ldr	r2, [pc, #432]	; 33c10 <__assert_fail@plt+0x226cc>
   33a5c:	cmp	r3, r2
   33a60:	beq	33a90 <__assert_fail@plt+0x2254c>
   33a64:	b	33ab8 <__assert_fail@plt+0x22574>
   33a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33a6c:	add	r2, r3, #4
   33a70:	str	r2, [fp, #-32]	; 0xffffffe0
   33a74:	ldr	r3, [r3]
   33a78:	str	r3, [fp, #-16]
   33a7c:	ldr	r1, [fp, #-16]
   33a80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33a84:	bl	33c28 <__assert_fail@plt+0x226e4>
   33a88:	str	r0, [fp, #-12]
   33a8c:	b	33bf8 <__assert_fail@plt+0x226b4>
   33a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33a94:	add	r2, r3, #4
   33a98:	str	r2, [fp, #-32]	; 0xffffffe0
   33a9c:	ldr	r3, [r3]
   33aa0:	str	r3, [fp, #-20]	; 0xffffffec
   33aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   33aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33aac:	bl	33c60 <__assert_fail@plt+0x2271c>
   33ab0:	str	r0, [fp, #-12]
   33ab4:	b	33bf8 <__assert_fail@plt+0x226b4>
   33ab8:	ldr	r3, [fp, #4]
   33abc:	cmp	r3, #11
   33ac0:	beq	33b88 <__assert_fail@plt+0x22644>
   33ac4:	cmp	r3, #11
   33ac8:	bgt	33b28 <__assert_fail@plt+0x225e4>
   33acc:	cmp	r3, #3
   33ad0:	beq	33b88 <__assert_fail@plt+0x22644>
   33ad4:	cmp	r3, #3
   33ad8:	bgt	33af8 <__assert_fail@plt+0x225b4>
   33adc:	cmp	r3, #1
   33ae0:	beq	33b88 <__assert_fail@plt+0x22644>
   33ae4:	cmp	r3, #1
   33ae8:	bgt	33b9c <__assert_fail@plt+0x22658>
   33aec:	cmp	r3, #0
   33af0:	beq	33b9c <__assert_fail@plt+0x22658>
   33af4:	b	33bc8 <__assert_fail@plt+0x22684>
   33af8:	cmp	r3, #8
   33afc:	beq	33b9c <__assert_fail@plt+0x22658>
   33b00:	cmp	r3, #8
   33b04:	bgt	33b14 <__assert_fail@plt+0x225d0>
   33b08:	cmp	r3, #4
   33b0c:	beq	33b9c <__assert_fail@plt+0x22658>
   33b10:	b	33bc8 <__assert_fail@plt+0x22684>
   33b14:	cmp	r3, #9
   33b18:	beq	33b88 <__assert_fail@plt+0x22644>
   33b1c:	cmp	r3, #10
   33b20:	beq	33b9c <__assert_fail@plt+0x22658>
   33b24:	b	33bc8 <__assert_fail@plt+0x22684>
   33b28:	ldr	r2, [pc, #228]	; 33c14 <__assert_fail@plt+0x226d0>
   33b2c:	cmp	r3, r2
   33b30:	bgt	33b64 <__assert_fail@plt+0x22620>
   33b34:	ldr	r2, [pc, #212]	; 33c10 <__assert_fail@plt+0x226cc>
   33b38:	cmp	r3, r2
   33b3c:	bge	33b9c <__assert_fail@plt+0x22658>
   33b40:	ldr	r2, [pc, #208]	; 33c18 <__assert_fail@plt+0x226d4>
   33b44:	cmp	r3, r2
   33b48:	beq	33b88 <__assert_fail@plt+0x22644>
   33b4c:	ldr	r2, [pc, #200]	; 33c1c <__assert_fail@plt+0x226d8>
   33b50:	cmp	r3, r2
   33b54:	beq	33b9c <__assert_fail@plt+0x22658>
   33b58:	cmp	r3, #1024	; 0x400
   33b5c:	beq	33b9c <__assert_fail@plt+0x22658>
   33b60:	b	33bc8 <__assert_fail@plt+0x22684>
   33b64:	ldr	r2, [pc, #180]	; 33c20 <__assert_fail@plt+0x226dc>
   33b68:	cmp	r3, r2
   33b6c:	beq	33b9c <__assert_fail@plt+0x22658>
   33b70:	ldr	r2, [pc, #168]	; 33c20 <__assert_fail@plt+0x226dc>
   33b74:	cmp	r3, r2
   33b78:	blt	33b88 <__assert_fail@plt+0x22644>
   33b7c:	ldr	r2, [pc, #160]	; 33c24 <__assert_fail@plt+0x226e0>
   33b80:	cmp	r3, r2
   33b84:	bne	33bc8 <__assert_fail@plt+0x22684>
   33b88:	ldr	r1, [fp, #4]
   33b8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33b90:	bl	1149c <fcntl64@plt>
   33b94:	str	r0, [fp, #-12]
   33b98:	b	33bf4 <__assert_fail@plt+0x226b0>
   33b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ba0:	add	r2, r3, #4
   33ba4:	str	r2, [fp, #-32]	; 0xffffffe0
   33ba8:	ldr	r3, [r3]
   33bac:	str	r3, [fp, #-24]	; 0xffffffe8
   33bb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33bb4:	ldr	r1, [fp, #4]
   33bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33bbc:	bl	1149c <fcntl64@plt>
   33bc0:	str	r0, [fp, #-12]
   33bc4:	b	33bf4 <__assert_fail@plt+0x226b0>
   33bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33bcc:	add	r2, r3, #4
   33bd0:	str	r2, [fp, #-32]	; 0xffffffe0
   33bd4:	ldr	r3, [r3]
   33bd8:	str	r3, [fp, #-28]	; 0xffffffe4
   33bdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33be0:	ldr	r1, [fp, #4]
   33be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   33be8:	bl	1149c <fcntl64@plt>
   33bec:	str	r0, [fp, #-12]
   33bf0:	nop			; (mov r0, r0)
   33bf4:	nop			; (mov r0, r0)
   33bf8:	ldr	r3, [fp, #-12]
   33bfc:	mov	r0, r3
   33c00:	sub	sp, fp, #4
   33c04:	pop	{fp, lr}
   33c08:	add	sp, sp, #12
   33c0c:	bx	lr
   33c10:	andeq	r0, r0, r6, lsl #8
   33c14:	andeq	r0, r0, r7, lsl #8
   33c18:	andeq	r0, r0, r1, lsl #8
   33c1c:	andeq	r0, r0, r2, lsl #8
   33c20:	andeq	r0, r0, r9, lsl #8
   33c24:	andeq	r0, r0, sl, lsl #8
   33c28:	push	{fp, lr}
   33c2c:	add	fp, sp, #4
   33c30:	sub	sp, sp, #16
   33c34:	str	r0, [fp, #-16]
   33c38:	str	r1, [fp, #-20]	; 0xffffffec
   33c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33c40:	mov	r1, #0
   33c44:	ldr	r0, [fp, #-16]
   33c48:	bl	1149c <fcntl64@plt>
   33c4c:	str	r0, [fp, #-8]
   33c50:	ldr	r3, [fp, #-8]
   33c54:	mov	r0, r3
   33c58:	sub	sp, fp, #4
   33c5c:	pop	{fp, pc}
   33c60:	push	{fp, lr}
   33c64:	add	fp, sp, #4
   33c68:	sub	sp, sp, #24
   33c6c:	str	r0, [fp, #-24]	; 0xffffffe8
   33c70:	str	r1, [fp, #-28]	; 0xffffffe4
   33c74:	ldr	r3, [pc, #292]	; 33da0 <__assert_fail@plt+0x2285c>
   33c78:	ldr	r3, [r3]
   33c7c:	cmp	r3, #0
   33c80:	blt	33cf4 <__assert_fail@plt+0x227b0>
   33c84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33c88:	ldr	r1, [pc, #276]	; 33da4 <__assert_fail@plt+0x22860>
   33c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33c90:	bl	1149c <fcntl64@plt>
   33c94:	str	r0, [fp, #-8]
   33c98:	ldr	r3, [fp, #-8]
   33c9c:	cmp	r3, #0
   33ca0:	bge	33cb8 <__assert_fail@plt+0x22774>
   33ca4:	bl	11418 <__errno_location@plt>
   33ca8:	mov	r3, r0
   33cac:	ldr	r3, [r3]
   33cb0:	cmp	r3, #22
   33cb4:	beq	33cc8 <__assert_fail@plt+0x22784>
   33cb8:	ldr	r3, [pc, #224]	; 33da0 <__assert_fail@plt+0x2285c>
   33cbc:	mov	r2, #1
   33cc0:	str	r2, [r3]
   33cc4:	b	33d04 <__assert_fail@plt+0x227c0>
   33cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cd0:	bl	33c28 <__assert_fail@plt+0x226e4>
   33cd4:	str	r0, [fp, #-8]
   33cd8:	ldr	r3, [fp, #-8]
   33cdc:	cmp	r3, #0
   33ce0:	blt	33d04 <__assert_fail@plt+0x227c0>
   33ce4:	ldr	r3, [pc, #180]	; 33da0 <__assert_fail@plt+0x2285c>
   33ce8:	mvn	r2, #0
   33cec:	str	r2, [r3]
   33cf0:	b	33d04 <__assert_fail@plt+0x227c0>
   33cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33cfc:	bl	33c28 <__assert_fail@plt+0x226e4>
   33d00:	str	r0, [fp, #-8]
   33d04:	ldr	r3, [fp, #-8]
   33d08:	cmp	r3, #0
   33d0c:	blt	33d90 <__assert_fail@plt+0x2284c>
   33d10:	ldr	r3, [pc, #136]	; 33da0 <__assert_fail@plt+0x2285c>
   33d14:	ldr	r3, [r3]
   33d18:	cmn	r3, #1
   33d1c:	bne	33d90 <__assert_fail@plt+0x2284c>
   33d20:	mov	r1, #1
   33d24:	ldr	r0, [fp, #-8]
   33d28:	bl	1149c <fcntl64@plt>
   33d2c:	str	r0, [fp, #-12]
   33d30:	ldr	r3, [fp, #-12]
   33d34:	cmp	r3, #0
   33d38:	blt	33d60 <__assert_fail@plt+0x2281c>
   33d3c:	ldr	r3, [fp, #-12]
   33d40:	orr	r3, r3, #1
   33d44:	mov	r2, r3
   33d48:	mov	r1, #2
   33d4c:	ldr	r0, [fp, #-8]
   33d50:	bl	1149c <fcntl64@plt>
   33d54:	mov	r3, r0
   33d58:	cmn	r3, #1
   33d5c:	bne	33d90 <__assert_fail@plt+0x2284c>
   33d60:	bl	11418 <__errno_location@plt>
   33d64:	mov	r3, r0
   33d68:	ldr	r3, [r3]
   33d6c:	str	r3, [fp, #-16]
   33d70:	ldr	r0, [fp, #-8]
   33d74:	bl	11538 <close@plt>
   33d78:	bl	11418 <__errno_location@plt>
   33d7c:	mov	r2, r0
   33d80:	ldr	r3, [fp, #-16]
   33d84:	str	r3, [r2]
   33d88:	mvn	r3, #0
   33d8c:	str	r3, [fp, #-8]
   33d90:	ldr	r3, [fp, #-8]
   33d94:	mov	r0, r3
   33d98:	sub	sp, fp, #4
   33d9c:	pop	{fp, pc}
   33da0:	strdeq	r7, [r4], -r8
   33da4:	andeq	r0, r0, r6, lsl #8
   33da8:	push	{fp, lr}
   33dac:	add	fp, sp, #4
   33db0:	bl	11418 <__errno_location@plt>
   33db4:	mov	r2, r0
   33db8:	mov	r3, #12
   33dbc:	str	r3, [r2]
   33dc0:	mov	r3, #0
   33dc4:	mov	r0, r3
   33dc8:	pop	{fp, pc}
   33dcc:	push	{fp, lr}
   33dd0:	add	fp, sp, #4
   33dd4:	sub	sp, sp, #8
   33dd8:	str	r0, [fp, #-8]
   33ddc:	ldr	r3, [fp, #-8]
   33de0:	mov	r0, r3
   33de4:	bl	33244 <__assert_fail@plt+0x21d00>
   33de8:	mov	r3, r0
   33dec:	mov	r0, r3
   33df0:	sub	sp, fp, #4
   33df4:	pop	{fp, pc}
   33df8:	push	{fp, lr}
   33dfc:	add	fp, sp, #4
   33e00:	sub	sp, sp, #8
   33e04:	str	r0, [fp, #-8]
   33e08:	str	r1, [fp, #-12]
   33e0c:	ldr	r3, [fp, #-12]
   33e10:	cmp	r3, #0
   33e14:	moveq	r3, #1
   33e18:	movne	r3, #0
   33e1c:	uxtb	r3, r3
   33e20:	mov	r2, r3
   33e24:	ldr	r3, [fp, #-12]
   33e28:	orr	r3, r2, r3
   33e2c:	mov	r1, r3
   33e30:	ldr	r0, [fp, #-8]
   33e34:	bl	332ec <__assert_fail@plt+0x21da8>
   33e38:	mov	r3, r0
   33e3c:	mov	r0, r3
   33e40:	sub	sp, fp, #4
   33e44:	pop	{fp, pc}
   33e48:	push	{fp, lr}
   33e4c:	add	fp, sp, #4
   33e50:	sub	sp, sp, #8
   33e54:	str	r0, [fp, #-8]
   33e58:	str	r1, [fp, #-12]
   33e5c:	ldr	r3, [fp, #-8]
   33e60:	ldr	r2, [fp, #-12]
   33e64:	mov	r1, r2
   33e68:	mov	r0, r3
   33e6c:	bl	33180 <__assert_fail@plt+0x21c3c>
   33e70:	mov	r3, r0
   33e74:	mov	r0, r3
   33e78:	sub	sp, fp, #4
   33e7c:	pop	{fp, pc}
   33e80:	push	{fp, lr}
   33e84:	add	fp, sp, #4
   33e88:	sub	sp, sp, #16
   33e8c:	str	r0, [fp, #-8]
   33e90:	str	r1, [fp, #-12]
   33e94:	str	r2, [fp, #-16]
   33e98:	ldr	r3, [fp, #-12]
   33e9c:	cmp	r3, #0
   33ea0:	beq	33eb0 <__assert_fail@plt+0x2296c>
   33ea4:	ldr	r3, [fp, #-16]
   33ea8:	cmp	r3, #0
   33eac:	bne	33ec0 <__assert_fail@plt+0x2297c>
   33eb0:	mov	r3, #1
   33eb4:	str	r3, [fp, #-16]
   33eb8:	ldr	r3, [fp, #-16]
   33ebc:	str	r3, [fp, #-12]
   33ec0:	ldr	r3, [fp, #-12]
   33ec4:	ldr	r2, [fp, #-16]
   33ec8:	mov	r1, r3
   33ecc:	ldr	r0, [fp, #-8]
   33ed0:	bl	33fec <__assert_fail@plt+0x22aa8>
   33ed4:	mov	r3, r0
   33ed8:	mov	r0, r3
   33edc:	sub	sp, fp, #4
   33ee0:	pop	{fp, pc}
   33ee4:	push	{fp, lr}
   33ee8:	add	fp, sp, #4
   33eec:	sub	sp, sp, #8
   33ef0:	mov	r0, #14
   33ef4:	bl	114d8 <nl_langinfo@plt>
   33ef8:	str	r0, [fp, #-8]
   33efc:	ldr	r3, [fp, #-8]
   33f00:	cmp	r3, #0
   33f04:	bne	33f10 <__assert_fail@plt+0x229cc>
   33f08:	ldr	r3, [pc, #40]	; 33f38 <__assert_fail@plt+0x229f4>
   33f0c:	str	r3, [fp, #-8]
   33f10:	ldr	r3, [fp, #-8]
   33f14:	ldrb	r3, [r3]
   33f18:	cmp	r3, #0
   33f1c:	bne	33f28 <__assert_fail@plt+0x229e4>
   33f20:	ldr	r3, [pc, #20]	; 33f3c <__assert_fail@plt+0x229f8>
   33f24:	str	r3, [fp, #-8]
   33f28:	ldr	r3, [fp, #-8]
   33f2c:	mov	r0, r3
   33f30:	sub	sp, fp, #4
   33f34:	pop	{fp, pc}
   33f38:			; <UNDEFINED> instruction: 0x000362b0
   33f3c:			; <UNDEFINED> instruction: 0x000362b4
   33f40:	push	{fp, lr}
   33f44:	add	fp, sp, #4
   33f48:	sub	sp, sp, #32
   33f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   33f50:	str	r1, [fp, #-28]	; 0xffffffe4
   33f54:	str	r2, [fp, #-32]	; 0xffffffe0
   33f58:	str	r3, [fp, #-36]	; 0xffffffdc
   33f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f60:	cmp	r3, #0
   33f64:	bne	33f70 <__assert_fail@plt+0x22a2c>
   33f68:	sub	r3, fp, #16
   33f6c:	str	r3, [fp, #-24]	; 0xffffffe8
   33f70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33f74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33f78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33f80:	bl	11364 <mbrtowc@plt>
   33f84:	str	r0, [fp, #-8]
   33f88:	ldr	r3, [fp, #-8]
   33f8c:	cmn	r3, #3
   33f90:	bls	33fdc <__assert_fail@plt+0x22a98>
   33f94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33f98:	cmp	r3, #0
   33f9c:	beq	33fdc <__assert_fail@plt+0x22a98>
   33fa0:	mov	r0, #0
   33fa4:	bl	34590 <__assert_fail@plt+0x2304c>
   33fa8:	mov	r3, r0
   33fac:	eor	r3, r3, #1
   33fb0:	uxtb	r3, r3
   33fb4:	cmp	r3, #0
   33fb8:	beq	33fdc <__assert_fail@plt+0x22a98>
   33fbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33fc0:	ldrb	r3, [r3]
   33fc4:	strb	r3, [fp, #-9]
   33fc8:	ldrb	r2, [fp, #-9]
   33fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33fd0:	str	r2, [r3]
   33fd4:	mov	r3, #1
   33fd8:	b	33fe0 <__assert_fail@plt+0x22a9c>
   33fdc:	ldr	r3, [fp, #-8]
   33fe0:	mov	r0, r3
   33fe4:	sub	sp, fp, #4
   33fe8:	pop	{fp, pc}
   33fec:	push	{fp, lr}
   33ff0:	add	fp, sp, #4
   33ff4:	sub	sp, sp, #24
   33ff8:	str	r0, [fp, #-16]
   33ffc:	str	r1, [fp, #-20]	; 0xffffffec
   34000:	str	r2, [fp, #-24]	; 0xffffffe8
   34004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34008:	cmp	r3, #0
   3400c:	beq	34048 <__assert_fail@plt+0x22b04>
   34010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34014:	mvn	r0, #0
   34018:	bl	34794 <__assert_fail@plt+0x23250>
   3401c:	mov	r3, r0
   34020:	mov	r2, r3
   34024:	ldr	r3, [fp, #-20]	; 0xffffffec
   34028:	cmp	r2, r3
   3402c:	bcs	34048 <__assert_fail@plt+0x22b04>
   34030:	ldr	r3, [fp, #-20]	; 0xffffffec
   34034:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34038:	mul	r3, r2, r3
   3403c:	str	r3, [fp, #-8]
   34040:	mov	r3, #1
   34044:	b	3405c <__assert_fail@plt+0x22b18>
   34048:	ldr	r3, [fp, #-20]	; 0xffffffec
   3404c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34050:	mul	r3, r2, r3
   34054:	str	r3, [fp, #-8]
   34058:	mov	r3, #0
   3405c:	cmp	r3, #0
   34060:	beq	3407c <__assert_fail@plt+0x22b38>
   34064:	bl	11418 <__errno_location@plt>
   34068:	mov	r2, r0
   3406c:	mov	r3, #12
   34070:	str	r3, [r2]
   34074:	mov	r3, #0
   34078:	b	34090 <__assert_fail@plt+0x22b4c>
   3407c:	ldr	r3, [fp, #-8]
   34080:	mov	r1, r3
   34084:	ldr	r0, [fp, #-16]
   34088:	bl	332ec <__assert_fail@plt+0x21da8>
   3408c:	mov	r3, r0
   34090:	mov	r0, r3
   34094:	sub	sp, fp, #4
   34098:	pop	{fp, pc}
   3409c:	push	{fp}		; (str fp, [sp, #-4]!)
   340a0:	add	fp, sp, #0
   340a4:	sub	sp, sp, #12
   340a8:	str	r0, [fp, #-8]
   340ac:	ldr	r3, [fp, #-8]
   340b0:	cmp	r3, #90	; 0x5a
   340b4:	bgt	340d0 <__assert_fail@plt+0x22b8c>
   340b8:	cmp	r3, #65	; 0x41
   340bc:	bge	340dc <__assert_fail@plt+0x22b98>
   340c0:	sub	r3, r3, #48	; 0x30
   340c4:	cmp	r3, #9
   340c8:	bhi	340e4 <__assert_fail@plt+0x22ba0>
   340cc:	b	340dc <__assert_fail@plt+0x22b98>
   340d0:	sub	r3, r3, #97	; 0x61
   340d4:	cmp	r3, #25
   340d8:	bhi	340e4 <__assert_fail@plt+0x22ba0>
   340dc:	mov	r3, #1
   340e0:	b	340e8 <__assert_fail@plt+0x22ba4>
   340e4:	mov	r3, #0
   340e8:	mov	r0, r3
   340ec:	add	sp, fp, #0
   340f0:	pop	{fp}		; (ldr fp, [sp], #4)
   340f4:	bx	lr
   340f8:	push	{fp}		; (str fp, [sp, #-4]!)
   340fc:	add	fp, sp, #0
   34100:	sub	sp, sp, #12
   34104:	str	r0, [fp, #-8]
   34108:	ldr	r3, [fp, #-8]
   3410c:	cmp	r3, #65	; 0x41
   34110:	blt	34130 <__assert_fail@plt+0x22bec>
   34114:	cmp	r3, #90	; 0x5a
   34118:	ble	34128 <__assert_fail@plt+0x22be4>
   3411c:	sub	r3, r3, #97	; 0x61
   34120:	cmp	r3, #25
   34124:	bhi	34130 <__assert_fail@plt+0x22bec>
   34128:	mov	r3, #1
   3412c:	b	34134 <__assert_fail@plt+0x22bf0>
   34130:	mov	r3, #0
   34134:	mov	r0, r3
   34138:	add	sp, fp, #0
   3413c:	pop	{fp}		; (ldr fp, [sp], #4)
   34140:	bx	lr
   34144:	push	{fp}		; (str fp, [sp, #-4]!)
   34148:	add	fp, sp, #0
   3414c:	sub	sp, sp, #12
   34150:	str	r0, [fp, #-8]
   34154:	ldr	r3, [fp, #-8]
   34158:	add	r3, r3, #0
   3415c:	cmp	r3, #127	; 0x7f
   34160:	bhi	3416c <__assert_fail@plt+0x22c28>
   34164:	mov	r3, #1
   34168:	b	34170 <__assert_fail@plt+0x22c2c>
   3416c:	mov	r3, #0
   34170:	mov	r0, r3
   34174:	add	sp, fp, #0
   34178:	pop	{fp}		; (ldr fp, [sp], #4)
   3417c:	bx	lr
   34180:	push	{fp}		; (str fp, [sp, #-4]!)
   34184:	add	fp, sp, #0
   34188:	sub	sp, sp, #12
   3418c:	str	r0, [fp, #-8]
   34190:	ldr	r3, [fp, #-8]
   34194:	cmp	r3, #32
   34198:	beq	341a8 <__assert_fail@plt+0x22c64>
   3419c:	ldr	r3, [fp, #-8]
   341a0:	cmp	r3, #9
   341a4:	bne	341b0 <__assert_fail@plt+0x22c6c>
   341a8:	mov	r3, #1
   341ac:	b	341b4 <__assert_fail@plt+0x22c70>
   341b0:	mov	r3, #0
   341b4:	and	r3, r3, #1
   341b8:	uxtb	r3, r3
   341bc:	mov	r0, r3
   341c0:	add	sp, fp, #0
   341c4:	pop	{fp}		; (ldr fp, [sp], #4)
   341c8:	bx	lr
   341cc:	push	{fp}		; (str fp, [sp, #-4]!)
   341d0:	add	fp, sp, #0
   341d4:	sub	sp, sp, #12
   341d8:	str	r0, [fp, #-8]
   341dc:	ldr	r3, [fp, #-8]
   341e0:	cmp	r3, #0
   341e4:	blt	34200 <__assert_fail@plt+0x22cbc>
   341e8:	cmp	r3, #31
   341ec:	ble	341f8 <__assert_fail@plt+0x22cb4>
   341f0:	cmp	r3, #127	; 0x7f
   341f4:	bne	34200 <__assert_fail@plt+0x22cbc>
   341f8:	mov	r3, #1
   341fc:	b	34204 <__assert_fail@plt+0x22cc0>
   34200:	mov	r3, #0
   34204:	mov	r0, r3
   34208:	add	sp, fp, #0
   3420c:	pop	{fp}		; (ldr fp, [sp], #4)
   34210:	bx	lr
   34214:	push	{fp}		; (str fp, [sp, #-4]!)
   34218:	add	fp, sp, #0
   3421c:	sub	sp, sp, #12
   34220:	str	r0, [fp, #-8]
   34224:	ldr	r3, [fp, #-8]
   34228:	sub	r3, r3, #48	; 0x30
   3422c:	cmp	r3, #9
   34230:	bhi	3423c <__assert_fail@plt+0x22cf8>
   34234:	mov	r3, #1
   34238:	b	34240 <__assert_fail@plt+0x22cfc>
   3423c:	mov	r3, #0
   34240:	mov	r0, r3
   34244:	add	sp, fp, #0
   34248:	pop	{fp}		; (ldr fp, [sp], #4)
   3424c:	bx	lr
   34250:	push	{fp}		; (str fp, [sp, #-4]!)
   34254:	add	fp, sp, #0
   34258:	sub	sp, sp, #12
   3425c:	str	r0, [fp, #-8]
   34260:	ldr	r3, [fp, #-8]
   34264:	sub	r3, r3, #33	; 0x21
   34268:	cmp	r3, #93	; 0x5d
   3426c:	bhi	34278 <__assert_fail@plt+0x22d34>
   34270:	mov	r3, #1
   34274:	b	3427c <__assert_fail@plt+0x22d38>
   34278:	mov	r3, #0
   3427c:	mov	r0, r3
   34280:	add	sp, fp, #0
   34284:	pop	{fp}		; (ldr fp, [sp], #4)
   34288:	bx	lr
   3428c:	push	{fp}		; (str fp, [sp, #-4]!)
   34290:	add	fp, sp, #0
   34294:	sub	sp, sp, #12
   34298:	str	r0, [fp, #-8]
   3429c:	ldr	r3, [fp, #-8]
   342a0:	sub	r3, r3, #97	; 0x61
   342a4:	cmp	r3, #25
   342a8:	bhi	342b4 <__assert_fail@plt+0x22d70>
   342ac:	mov	r3, #1
   342b0:	b	342b8 <__assert_fail@plt+0x22d74>
   342b4:	mov	r3, #0
   342b8:	mov	r0, r3
   342bc:	add	sp, fp, #0
   342c0:	pop	{fp}		; (ldr fp, [sp], #4)
   342c4:	bx	lr
   342c8:	push	{fp}		; (str fp, [sp, #-4]!)
   342cc:	add	fp, sp, #0
   342d0:	sub	sp, sp, #12
   342d4:	str	r0, [fp, #-8]
   342d8:	ldr	r3, [fp, #-8]
   342dc:	sub	r3, r3, #32
   342e0:	cmp	r3, #94	; 0x5e
   342e4:	bhi	342f0 <__assert_fail@plt+0x22dac>
   342e8:	mov	r3, #1
   342ec:	b	342f4 <__assert_fail@plt+0x22db0>
   342f0:	mov	r3, #0
   342f4:	mov	r0, r3
   342f8:	add	sp, fp, #0
   342fc:	pop	{fp}		; (ldr fp, [sp], #4)
   34300:	bx	lr
   34304:	push	{fp}		; (str fp, [sp, #-4]!)
   34308:	add	fp, sp, #0
   3430c:	sub	sp, sp, #12
   34310:	str	r0, [fp, #-8]
   34314:	ldr	r3, [fp, #-8]
   34318:	cmp	r3, #64	; 0x40
   3431c:	bgt	34338 <__assert_fail@plt+0x22df4>
   34320:	cmp	r3, #58	; 0x3a
   34324:	bge	34354 <__assert_fail@plt+0x22e10>
   34328:	sub	r3, r3, #33	; 0x21
   3432c:	cmp	r3, #14
   34330:	bhi	3435c <__assert_fail@plt+0x22e18>
   34334:	b	34354 <__assert_fail@plt+0x22e10>
   34338:	cmp	r3, #91	; 0x5b
   3433c:	blt	3435c <__assert_fail@plt+0x22e18>
   34340:	cmp	r3, #96	; 0x60
   34344:	ble	34354 <__assert_fail@plt+0x22e10>
   34348:	sub	r3, r3, #123	; 0x7b
   3434c:	cmp	r3, #3
   34350:	bhi	3435c <__assert_fail@plt+0x22e18>
   34354:	mov	r3, #1
   34358:	b	34360 <__assert_fail@plt+0x22e1c>
   3435c:	mov	r3, #0
   34360:	mov	r0, r3
   34364:	add	sp, fp, #0
   34368:	pop	{fp}		; (ldr fp, [sp], #4)
   3436c:	bx	lr
   34370:	push	{fp}		; (str fp, [sp, #-4]!)
   34374:	add	fp, sp, #0
   34378:	sub	sp, sp, #12
   3437c:	str	r0, [fp, #-8]
   34380:	ldr	r3, [fp, #-8]
   34384:	cmp	r3, #9
   34388:	blt	343a4 <__assert_fail@plt+0x22e60>
   3438c:	cmp	r3, #13
   34390:	ble	3439c <__assert_fail@plt+0x22e58>
   34394:	cmp	r3, #32
   34398:	bne	343a4 <__assert_fail@plt+0x22e60>
   3439c:	mov	r3, #1
   343a0:	b	343a8 <__assert_fail@plt+0x22e64>
   343a4:	mov	r3, #0
   343a8:	mov	r0, r3
   343ac:	add	sp, fp, #0
   343b0:	pop	{fp}		; (ldr fp, [sp], #4)
   343b4:	bx	lr
   343b8:	push	{fp}		; (str fp, [sp, #-4]!)
   343bc:	add	fp, sp, #0
   343c0:	sub	sp, sp, #12
   343c4:	str	r0, [fp, #-8]
   343c8:	ldr	r3, [fp, #-8]
   343cc:	sub	r3, r3, #65	; 0x41
   343d0:	cmp	r3, #25
   343d4:	bhi	343e0 <__assert_fail@plt+0x22e9c>
   343d8:	mov	r3, #1
   343dc:	b	343e4 <__assert_fail@plt+0x22ea0>
   343e0:	mov	r3, #0
   343e4:	mov	r0, r3
   343e8:	add	sp, fp, #0
   343ec:	pop	{fp}		; (ldr fp, [sp], #4)
   343f0:	bx	lr
   343f4:	push	{fp}		; (str fp, [sp, #-4]!)
   343f8:	add	fp, sp, #0
   343fc:	sub	sp, sp, #12
   34400:	str	r0, [fp, #-8]
   34404:	ldr	r3, [fp, #-8]
   34408:	sub	r3, r3, #48	; 0x30
   3440c:	cmp	r3, #54	; 0x36
   34410:	addls	pc, pc, r3, lsl #2
   34414:	b	344fc <__assert_fail@plt+0x22fb8>
   34418:	b	344f4 <__assert_fail@plt+0x22fb0>
   3441c:	b	344f4 <__assert_fail@plt+0x22fb0>
   34420:	b	344f4 <__assert_fail@plt+0x22fb0>
   34424:	b	344f4 <__assert_fail@plt+0x22fb0>
   34428:	b	344f4 <__assert_fail@plt+0x22fb0>
   3442c:	b	344f4 <__assert_fail@plt+0x22fb0>
   34430:	b	344f4 <__assert_fail@plt+0x22fb0>
   34434:	b	344f4 <__assert_fail@plt+0x22fb0>
   34438:	b	344f4 <__assert_fail@plt+0x22fb0>
   3443c:	b	344f4 <__assert_fail@plt+0x22fb0>
   34440:	b	344fc <__assert_fail@plt+0x22fb8>
   34444:	b	344fc <__assert_fail@plt+0x22fb8>
   34448:	b	344fc <__assert_fail@plt+0x22fb8>
   3444c:	b	344fc <__assert_fail@plt+0x22fb8>
   34450:	b	344fc <__assert_fail@plt+0x22fb8>
   34454:	b	344fc <__assert_fail@plt+0x22fb8>
   34458:	b	344fc <__assert_fail@plt+0x22fb8>
   3445c:	b	344f4 <__assert_fail@plt+0x22fb0>
   34460:	b	344f4 <__assert_fail@plt+0x22fb0>
   34464:	b	344f4 <__assert_fail@plt+0x22fb0>
   34468:	b	344f4 <__assert_fail@plt+0x22fb0>
   3446c:	b	344f4 <__assert_fail@plt+0x22fb0>
   34470:	b	344f4 <__assert_fail@plt+0x22fb0>
   34474:	b	344fc <__assert_fail@plt+0x22fb8>
   34478:	b	344fc <__assert_fail@plt+0x22fb8>
   3447c:	b	344fc <__assert_fail@plt+0x22fb8>
   34480:	b	344fc <__assert_fail@plt+0x22fb8>
   34484:	b	344fc <__assert_fail@plt+0x22fb8>
   34488:	b	344fc <__assert_fail@plt+0x22fb8>
   3448c:	b	344fc <__assert_fail@plt+0x22fb8>
   34490:	b	344fc <__assert_fail@plt+0x22fb8>
   34494:	b	344fc <__assert_fail@plt+0x22fb8>
   34498:	b	344fc <__assert_fail@plt+0x22fb8>
   3449c:	b	344fc <__assert_fail@plt+0x22fb8>
   344a0:	b	344fc <__assert_fail@plt+0x22fb8>
   344a4:	b	344fc <__assert_fail@plt+0x22fb8>
   344a8:	b	344fc <__assert_fail@plt+0x22fb8>
   344ac:	b	344fc <__assert_fail@plt+0x22fb8>
   344b0:	b	344fc <__assert_fail@plt+0x22fb8>
   344b4:	b	344fc <__assert_fail@plt+0x22fb8>
   344b8:	b	344fc <__assert_fail@plt+0x22fb8>
   344bc:	b	344fc <__assert_fail@plt+0x22fb8>
   344c0:	b	344fc <__assert_fail@plt+0x22fb8>
   344c4:	b	344fc <__assert_fail@plt+0x22fb8>
   344c8:	b	344fc <__assert_fail@plt+0x22fb8>
   344cc:	b	344fc <__assert_fail@plt+0x22fb8>
   344d0:	b	344fc <__assert_fail@plt+0x22fb8>
   344d4:	b	344fc <__assert_fail@plt+0x22fb8>
   344d8:	b	344fc <__assert_fail@plt+0x22fb8>
   344dc:	b	344f4 <__assert_fail@plt+0x22fb0>
   344e0:	b	344f4 <__assert_fail@plt+0x22fb0>
   344e4:	b	344f4 <__assert_fail@plt+0x22fb0>
   344e8:	b	344f4 <__assert_fail@plt+0x22fb0>
   344ec:	b	344f4 <__assert_fail@plt+0x22fb0>
   344f0:	b	344f4 <__assert_fail@plt+0x22fb0>
   344f4:	mov	r3, #1
   344f8:	b	34500 <__assert_fail@plt+0x22fbc>
   344fc:	mov	r3, #0
   34500:	mov	r0, r3
   34504:	add	sp, fp, #0
   34508:	pop	{fp}		; (ldr fp, [sp], #4)
   3450c:	bx	lr
   34510:	push	{fp}		; (str fp, [sp, #-4]!)
   34514:	add	fp, sp, #0
   34518:	sub	sp, sp, #12
   3451c:	str	r0, [fp, #-8]
   34520:	ldr	r3, [fp, #-8]
   34524:	sub	r3, r3, #65	; 0x41
   34528:	cmp	r3, #25
   3452c:	bhi	3453c <__assert_fail@plt+0x22ff8>
   34530:	ldr	r3, [fp, #-8]
   34534:	add	r3, r3, #32
   34538:	b	34540 <__assert_fail@plt+0x22ffc>
   3453c:	ldr	r3, [fp, #-8]
   34540:	mov	r0, r3
   34544:	add	sp, fp, #0
   34548:	pop	{fp}		; (ldr fp, [sp], #4)
   3454c:	bx	lr
   34550:	push	{fp}		; (str fp, [sp, #-4]!)
   34554:	add	fp, sp, #0
   34558:	sub	sp, sp, #12
   3455c:	str	r0, [fp, #-8]
   34560:	ldr	r3, [fp, #-8]
   34564:	sub	r3, r3, #97	; 0x61
   34568:	cmp	r3, #25
   3456c:	bhi	3457c <__assert_fail@plt+0x23038>
   34570:	ldr	r3, [fp, #-8]
   34574:	sub	r3, r3, #32
   34578:	b	34580 <__assert_fail@plt+0x2303c>
   3457c:	ldr	r3, [fp, #-8]
   34580:	mov	r0, r3
   34584:	add	sp, fp, #0
   34588:	pop	{fp}		; (ldr fp, [sp], #4)
   3458c:	bx	lr
   34590:	push	{fp, lr}
   34594:	add	fp, sp, #4
   34598:	sub	sp, sp, #272	; 0x110
   3459c:	str	r0, [fp, #-272]	; 0xfffffef0
   345a0:	sub	r3, fp, #264	; 0x108
   345a4:	ldr	r2, [pc, #116]	; 34620 <__assert_fail@plt+0x230dc>
   345a8:	mov	r1, r3
   345ac:	ldr	r0, [fp, #-272]	; 0xfffffef0
   345b0:	bl	34734 <__assert_fail@plt+0x231f0>
   345b4:	mov	r3, r0
   345b8:	cmp	r3, #0
   345bc:	beq	345c8 <__assert_fail@plt+0x23084>
   345c0:	mov	r3, #0
   345c4:	b	34614 <__assert_fail@plt+0x230d0>
   345c8:	sub	r3, fp, #264	; 0x108
   345cc:	ldr	r1, [pc, #80]	; 34624 <__assert_fail@plt+0x230e0>
   345d0:	mov	r0, r3
   345d4:	bl	111d8 <strcmp@plt>
   345d8:	mov	r3, r0
   345dc:	cmp	r3, #0
   345e0:	beq	34608 <__assert_fail@plt+0x230c4>
   345e4:	sub	r3, fp, #264	; 0x108
   345e8:	ldr	r1, [pc, #56]	; 34628 <__assert_fail@plt+0x230e4>
   345ec:	mov	r0, r3
   345f0:	bl	111d8 <strcmp@plt>
   345f4:	mov	r3, r0
   345f8:	cmp	r3, #0
   345fc:	beq	34608 <__assert_fail@plt+0x230c4>
   34600:	mov	r3, #1
   34604:	b	3460c <__assert_fail@plt+0x230c8>
   34608:	mov	r3, #0
   3460c:	and	r3, r3, #1
   34610:	uxtb	r3, r3
   34614:	mov	r0, r3
   34618:	sub	sp, fp, #4
   3461c:	pop	{fp, pc}
   34620:	andeq	r0, r0, r1, lsl #2
   34624:			; <UNDEFINED> instruction: 0x000362bc
   34628:	andeq	r6, r3, r0, asr #5
   3462c:	push	{fp, lr}
   34630:	add	fp, sp, #4
   34634:	sub	sp, sp, #16
   34638:	str	r0, [fp, #-16]
   3463c:	mov	r1, #0
   34640:	ldr	r0, [fp, #-16]
   34644:	bl	114a8 <setlocale@plt>
   34648:	str	r0, [fp, #-8]
   3464c:	ldr	r3, [fp, #-8]
   34650:	mov	r0, r3
   34654:	sub	sp, fp, #4
   34658:	pop	{fp, pc}
   3465c:	push	{fp, lr}
   34660:	add	fp, sp, #4
   34664:	sub	sp, sp, #24
   34668:	str	r0, [fp, #-16]
   3466c:	str	r1, [fp, #-20]	; 0xffffffec
   34670:	str	r2, [fp, #-24]	; 0xffffffe8
   34674:	ldr	r0, [fp, #-16]
   34678:	bl	3462c <__assert_fail@plt+0x230e8>
   3467c:	str	r0, [fp, #-8]
   34680:	ldr	r3, [fp, #-8]
   34684:	cmp	r3, #0
   34688:	bne	346ac <__assert_fail@plt+0x23168>
   3468c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34690:	cmp	r3, #0
   34694:	beq	346a4 <__assert_fail@plt+0x23160>
   34698:	ldr	r3, [fp, #-20]	; 0xffffffec
   3469c:	mov	r2, #0
   346a0:	strb	r2, [r3]
   346a4:	mov	r3, #22
   346a8:	b	34728 <__assert_fail@plt+0x231e4>
   346ac:	ldr	r0, [fp, #-8]
   346b0:	bl	113f4 <strlen@plt>
   346b4:	str	r0, [fp, #-12]
   346b8:	ldr	r2, [fp, #-12]
   346bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   346c0:	cmp	r2, r3
   346c4:	bcs	346e8 <__assert_fail@plt+0x231a4>
   346c8:	ldr	r3, [fp, #-12]
   346cc:	add	r3, r3, #1
   346d0:	mov	r2, r3
   346d4:	ldr	r1, [fp, #-8]
   346d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   346dc:	bl	11250 <memcpy@plt>
   346e0:	mov	r3, #0
   346e4:	b	34728 <__assert_fail@plt+0x231e4>
   346e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   346ec:	cmp	r3, #0
   346f0:	beq	34724 <__assert_fail@plt+0x231e0>
   346f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   346f8:	sub	r3, r3, #1
   346fc:	mov	r2, r3
   34700:	ldr	r1, [fp, #-8]
   34704:	ldr	r0, [fp, #-20]	; 0xffffffec
   34708:	bl	11250 <memcpy@plt>
   3470c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34710:	sub	r3, r3, #1
   34714:	ldr	r2, [fp, #-20]	; 0xffffffec
   34718:	add	r3, r2, r3
   3471c:	mov	r2, #0
   34720:	strb	r2, [r3]
   34724:	mov	r3, #34	; 0x22
   34728:	mov	r0, r3
   3472c:	sub	sp, fp, #4
   34730:	pop	{fp, pc}
   34734:	push	{fp, lr}
   34738:	add	fp, sp, #4
   3473c:	sub	sp, sp, #16
   34740:	str	r0, [fp, #-8]
   34744:	str	r1, [fp, #-12]
   34748:	str	r2, [fp, #-16]
   3474c:	ldr	r2, [fp, #-16]
   34750:	ldr	r1, [fp, #-12]
   34754:	ldr	r0, [fp, #-8]
   34758:	bl	3465c <__assert_fail@plt+0x23118>
   3475c:	mov	r3, r0
   34760:	mov	r0, r3
   34764:	sub	sp, fp, #4
   34768:	pop	{fp, pc}
   3476c:	push	{fp, lr}
   34770:	add	fp, sp, #4
   34774:	sub	sp, sp, #8
   34778:	str	r0, [fp, #-8]
   3477c:	ldr	r0, [fp, #-8]
   34780:	bl	3462c <__assert_fail@plt+0x230e8>
   34784:	mov	r3, r0
   34788:	mov	r0, r3
   3478c:	sub	sp, fp, #4
   34790:	pop	{fp, pc}
   34794:	subs	r2, r1, #1
   34798:	bxeq	lr
   3479c:	bcc	34974 <__assert_fail@plt+0x23430>
   347a0:	cmp	r0, r1
   347a4:	bls	34958 <__assert_fail@plt+0x23414>
   347a8:	tst	r1, r2
   347ac:	beq	34964 <__assert_fail@plt+0x23420>
   347b0:	clz	r3, r0
   347b4:	clz	r2, r1
   347b8:	sub	r3, r2, r3
   347bc:	rsbs	r3, r3, #31
   347c0:	addne	r3, r3, r3, lsl #1
   347c4:	mov	r2, #0
   347c8:	addne	pc, pc, r3, lsl #2
   347cc:	nop			; (mov r0, r0)
   347d0:	cmp	r0, r1, lsl #31
   347d4:	adc	r2, r2, r2
   347d8:	subcs	r0, r0, r1, lsl #31
   347dc:	cmp	r0, r1, lsl #30
   347e0:	adc	r2, r2, r2
   347e4:	subcs	r0, r0, r1, lsl #30
   347e8:	cmp	r0, r1, lsl #29
   347ec:	adc	r2, r2, r2
   347f0:	subcs	r0, r0, r1, lsl #29
   347f4:	cmp	r0, r1, lsl #28
   347f8:	adc	r2, r2, r2
   347fc:	subcs	r0, r0, r1, lsl #28
   34800:	cmp	r0, r1, lsl #27
   34804:	adc	r2, r2, r2
   34808:	subcs	r0, r0, r1, lsl #27
   3480c:	cmp	r0, r1, lsl #26
   34810:	adc	r2, r2, r2
   34814:	subcs	r0, r0, r1, lsl #26
   34818:	cmp	r0, r1, lsl #25
   3481c:	adc	r2, r2, r2
   34820:	subcs	r0, r0, r1, lsl #25
   34824:	cmp	r0, r1, lsl #24
   34828:	adc	r2, r2, r2
   3482c:	subcs	r0, r0, r1, lsl #24
   34830:	cmp	r0, r1, lsl #23
   34834:	adc	r2, r2, r2
   34838:	subcs	r0, r0, r1, lsl #23
   3483c:	cmp	r0, r1, lsl #22
   34840:	adc	r2, r2, r2
   34844:	subcs	r0, r0, r1, lsl #22
   34848:	cmp	r0, r1, lsl #21
   3484c:	adc	r2, r2, r2
   34850:	subcs	r0, r0, r1, lsl #21
   34854:	cmp	r0, r1, lsl #20
   34858:	adc	r2, r2, r2
   3485c:	subcs	r0, r0, r1, lsl #20
   34860:	cmp	r0, r1, lsl #19
   34864:	adc	r2, r2, r2
   34868:	subcs	r0, r0, r1, lsl #19
   3486c:	cmp	r0, r1, lsl #18
   34870:	adc	r2, r2, r2
   34874:	subcs	r0, r0, r1, lsl #18
   34878:	cmp	r0, r1, lsl #17
   3487c:	adc	r2, r2, r2
   34880:	subcs	r0, r0, r1, lsl #17
   34884:	cmp	r0, r1, lsl #16
   34888:	adc	r2, r2, r2
   3488c:	subcs	r0, r0, r1, lsl #16
   34890:	cmp	r0, r1, lsl #15
   34894:	adc	r2, r2, r2
   34898:	subcs	r0, r0, r1, lsl #15
   3489c:	cmp	r0, r1, lsl #14
   348a0:	adc	r2, r2, r2
   348a4:	subcs	r0, r0, r1, lsl #14
   348a8:	cmp	r0, r1, lsl #13
   348ac:	adc	r2, r2, r2
   348b0:	subcs	r0, r0, r1, lsl #13
   348b4:	cmp	r0, r1, lsl #12
   348b8:	adc	r2, r2, r2
   348bc:	subcs	r0, r0, r1, lsl #12
   348c0:	cmp	r0, r1, lsl #11
   348c4:	adc	r2, r2, r2
   348c8:	subcs	r0, r0, r1, lsl #11
   348cc:	cmp	r0, r1, lsl #10
   348d0:	adc	r2, r2, r2
   348d4:	subcs	r0, r0, r1, lsl #10
   348d8:	cmp	r0, r1, lsl #9
   348dc:	adc	r2, r2, r2
   348e0:	subcs	r0, r0, r1, lsl #9
   348e4:	cmp	r0, r1, lsl #8
   348e8:	adc	r2, r2, r2
   348ec:	subcs	r0, r0, r1, lsl #8
   348f0:	cmp	r0, r1, lsl #7
   348f4:	adc	r2, r2, r2
   348f8:	subcs	r0, r0, r1, lsl #7
   348fc:	cmp	r0, r1, lsl #6
   34900:	adc	r2, r2, r2
   34904:	subcs	r0, r0, r1, lsl #6
   34908:	cmp	r0, r1, lsl #5
   3490c:	adc	r2, r2, r2
   34910:	subcs	r0, r0, r1, lsl #5
   34914:	cmp	r0, r1, lsl #4
   34918:	adc	r2, r2, r2
   3491c:	subcs	r0, r0, r1, lsl #4
   34920:	cmp	r0, r1, lsl #3
   34924:	adc	r2, r2, r2
   34928:	subcs	r0, r0, r1, lsl #3
   3492c:	cmp	r0, r1, lsl #2
   34930:	adc	r2, r2, r2
   34934:	subcs	r0, r0, r1, lsl #2
   34938:	cmp	r0, r1, lsl #1
   3493c:	adc	r2, r2, r2
   34940:	subcs	r0, r0, r1, lsl #1
   34944:	cmp	r0, r1
   34948:	adc	r2, r2, r2
   3494c:	subcs	r0, r0, r1
   34950:	mov	r0, r2
   34954:	bx	lr
   34958:	moveq	r0, #1
   3495c:	movne	r0, #0
   34960:	bx	lr
   34964:	clz	r2, r1
   34968:	rsb	r2, r2, #31
   3496c:	lsr	r0, r0, r2
   34970:	bx	lr
   34974:	cmp	r0, #0
   34978:	mvnne	r0, #0
   3497c:	b	34cf0 <__assert_fail@plt+0x237ac>
   34980:	cmp	r1, #0
   34984:	beq	34974 <__assert_fail@plt+0x23430>
   34988:	push	{r0, r1, lr}
   3498c:	bl	34794 <__assert_fail@plt+0x23250>
   34990:	pop	{r1, r2, lr}
   34994:	mul	r3, r2, r0
   34998:	sub	r1, r1, r3
   3499c:	bx	lr
   349a0:	cmp	r1, #0
   349a4:	beq	34bb0 <__assert_fail@plt+0x2366c>
   349a8:	eor	ip, r0, r1
   349ac:	rsbmi	r1, r1, #0
   349b0:	subs	r2, r1, #1
   349b4:	beq	34b7c <__assert_fail@plt+0x23638>
   349b8:	movs	r3, r0
   349bc:	rsbmi	r3, r0, #0
   349c0:	cmp	r3, r1
   349c4:	bls	34b88 <__assert_fail@plt+0x23644>
   349c8:	tst	r1, r2
   349cc:	beq	34b98 <__assert_fail@plt+0x23654>
   349d0:	clz	r2, r3
   349d4:	clz	r0, r1
   349d8:	sub	r2, r0, r2
   349dc:	rsbs	r2, r2, #31
   349e0:	addne	r2, r2, r2, lsl #1
   349e4:	mov	r0, #0
   349e8:	addne	pc, pc, r2, lsl #2
   349ec:	nop			; (mov r0, r0)
   349f0:	cmp	r3, r1, lsl #31
   349f4:	adc	r0, r0, r0
   349f8:	subcs	r3, r3, r1, lsl #31
   349fc:	cmp	r3, r1, lsl #30
   34a00:	adc	r0, r0, r0
   34a04:	subcs	r3, r3, r1, lsl #30
   34a08:	cmp	r3, r1, lsl #29
   34a0c:	adc	r0, r0, r0
   34a10:	subcs	r3, r3, r1, lsl #29
   34a14:	cmp	r3, r1, lsl #28
   34a18:	adc	r0, r0, r0
   34a1c:	subcs	r3, r3, r1, lsl #28
   34a20:	cmp	r3, r1, lsl #27
   34a24:	adc	r0, r0, r0
   34a28:	subcs	r3, r3, r1, lsl #27
   34a2c:	cmp	r3, r1, lsl #26
   34a30:	adc	r0, r0, r0
   34a34:	subcs	r3, r3, r1, lsl #26
   34a38:	cmp	r3, r1, lsl #25
   34a3c:	adc	r0, r0, r0
   34a40:	subcs	r3, r3, r1, lsl #25
   34a44:	cmp	r3, r1, lsl #24
   34a48:	adc	r0, r0, r0
   34a4c:	subcs	r3, r3, r1, lsl #24
   34a50:	cmp	r3, r1, lsl #23
   34a54:	adc	r0, r0, r0
   34a58:	subcs	r3, r3, r1, lsl #23
   34a5c:	cmp	r3, r1, lsl #22
   34a60:	adc	r0, r0, r0
   34a64:	subcs	r3, r3, r1, lsl #22
   34a68:	cmp	r3, r1, lsl #21
   34a6c:	adc	r0, r0, r0
   34a70:	subcs	r3, r3, r1, lsl #21
   34a74:	cmp	r3, r1, lsl #20
   34a78:	adc	r0, r0, r0
   34a7c:	subcs	r3, r3, r1, lsl #20
   34a80:	cmp	r3, r1, lsl #19
   34a84:	adc	r0, r0, r0
   34a88:	subcs	r3, r3, r1, lsl #19
   34a8c:	cmp	r3, r1, lsl #18
   34a90:	adc	r0, r0, r0
   34a94:	subcs	r3, r3, r1, lsl #18
   34a98:	cmp	r3, r1, lsl #17
   34a9c:	adc	r0, r0, r0
   34aa0:	subcs	r3, r3, r1, lsl #17
   34aa4:	cmp	r3, r1, lsl #16
   34aa8:	adc	r0, r0, r0
   34aac:	subcs	r3, r3, r1, lsl #16
   34ab0:	cmp	r3, r1, lsl #15
   34ab4:	adc	r0, r0, r0
   34ab8:	subcs	r3, r3, r1, lsl #15
   34abc:	cmp	r3, r1, lsl #14
   34ac0:	adc	r0, r0, r0
   34ac4:	subcs	r3, r3, r1, lsl #14
   34ac8:	cmp	r3, r1, lsl #13
   34acc:	adc	r0, r0, r0
   34ad0:	subcs	r3, r3, r1, lsl #13
   34ad4:	cmp	r3, r1, lsl #12
   34ad8:	adc	r0, r0, r0
   34adc:	subcs	r3, r3, r1, lsl #12
   34ae0:	cmp	r3, r1, lsl #11
   34ae4:	adc	r0, r0, r0
   34ae8:	subcs	r3, r3, r1, lsl #11
   34aec:	cmp	r3, r1, lsl #10
   34af0:	adc	r0, r0, r0
   34af4:	subcs	r3, r3, r1, lsl #10
   34af8:	cmp	r3, r1, lsl #9
   34afc:	adc	r0, r0, r0
   34b00:	subcs	r3, r3, r1, lsl #9
   34b04:	cmp	r3, r1, lsl #8
   34b08:	adc	r0, r0, r0
   34b0c:	subcs	r3, r3, r1, lsl #8
   34b10:	cmp	r3, r1, lsl #7
   34b14:	adc	r0, r0, r0
   34b18:	subcs	r3, r3, r1, lsl #7
   34b1c:	cmp	r3, r1, lsl #6
   34b20:	adc	r0, r0, r0
   34b24:	subcs	r3, r3, r1, lsl #6
   34b28:	cmp	r3, r1, lsl #5
   34b2c:	adc	r0, r0, r0
   34b30:	subcs	r3, r3, r1, lsl #5
   34b34:	cmp	r3, r1, lsl #4
   34b38:	adc	r0, r0, r0
   34b3c:	subcs	r3, r3, r1, lsl #4
   34b40:	cmp	r3, r1, lsl #3
   34b44:	adc	r0, r0, r0
   34b48:	subcs	r3, r3, r1, lsl #3
   34b4c:	cmp	r3, r1, lsl #2
   34b50:	adc	r0, r0, r0
   34b54:	subcs	r3, r3, r1, lsl #2
   34b58:	cmp	r3, r1, lsl #1
   34b5c:	adc	r0, r0, r0
   34b60:	subcs	r3, r3, r1, lsl #1
   34b64:	cmp	r3, r1
   34b68:	adc	r0, r0, r0
   34b6c:	subcs	r3, r3, r1
   34b70:	cmp	ip, #0
   34b74:	rsbmi	r0, r0, #0
   34b78:	bx	lr
   34b7c:	teq	ip, r0
   34b80:	rsbmi	r0, r0, #0
   34b84:	bx	lr
   34b88:	movcc	r0, #0
   34b8c:	asreq	r0, ip, #31
   34b90:	orreq	r0, r0, #1
   34b94:	bx	lr
   34b98:	clz	r2, r1
   34b9c:	rsb	r2, r2, #31
   34ba0:	cmp	ip, #0
   34ba4:	lsr	r0, r3, r2
   34ba8:	rsbmi	r0, r0, #0
   34bac:	bx	lr
   34bb0:	cmp	r0, #0
   34bb4:	mvngt	r0, #-2147483648	; 0x80000000
   34bb8:	movlt	r0, #-2147483648	; 0x80000000
   34bbc:	b	34cf0 <__assert_fail@plt+0x237ac>
   34bc0:	cmp	r1, #0
   34bc4:	beq	34bb0 <__assert_fail@plt+0x2366c>
   34bc8:	push	{r0, r1, lr}
   34bcc:	bl	349a8 <__assert_fail@plt+0x23464>
   34bd0:	pop	{r1, r2, lr}
   34bd4:	mul	r3, r2, r0
   34bd8:	sub	r1, r1, r3
   34bdc:	bx	lr
   34be0:	cmp	r3, #0
   34be4:	cmpeq	r2, #0
   34be8:	bne	34c0c <__assert_fail@plt+0x236c8>
   34bec:	cmp	r1, #0
   34bf0:	movlt	r1, #-2147483648	; 0x80000000
   34bf4:	movlt	r0, #0
   34bf8:	blt	34c08 <__assert_fail@plt+0x236c4>
   34bfc:	cmpeq	r0, #0
   34c00:	mvnne	r1, #-2147483648	; 0x80000000
   34c04:	mvnne	r0, #0
   34c08:	b	34cf0 <__assert_fail@plt+0x237ac>
   34c0c:	sub	sp, sp, #8
   34c10:	push	{sp, lr}
   34c14:	cmp	r1, #0
   34c18:	blt	34c38 <__assert_fail@plt+0x236f4>
   34c1c:	cmp	r3, #0
   34c20:	blt	34c6c <__assert_fail@plt+0x23728>
   34c24:	bl	34d00 <__assert_fail@plt+0x237bc>
   34c28:	ldr	lr, [sp, #4]
   34c2c:	add	sp, sp, #8
   34c30:	pop	{r2, r3}
   34c34:	bx	lr
   34c38:	rsbs	r0, r0, #0
   34c3c:	sbc	r1, r1, r1, lsl #1
   34c40:	cmp	r3, #0
   34c44:	blt	34c90 <__assert_fail@plt+0x2374c>
   34c48:	bl	34d00 <__assert_fail@plt+0x237bc>
   34c4c:	ldr	lr, [sp, #4]
   34c50:	add	sp, sp, #8
   34c54:	pop	{r2, r3}
   34c58:	rsbs	r0, r0, #0
   34c5c:	sbc	r1, r1, r1, lsl #1
   34c60:	rsbs	r2, r2, #0
   34c64:	sbc	r3, r3, r3, lsl #1
   34c68:	bx	lr
   34c6c:	rsbs	r2, r2, #0
   34c70:	sbc	r3, r3, r3, lsl #1
   34c74:	bl	34d00 <__assert_fail@plt+0x237bc>
   34c78:	ldr	lr, [sp, #4]
   34c7c:	add	sp, sp, #8
   34c80:	pop	{r2, r3}
   34c84:	rsbs	r0, r0, #0
   34c88:	sbc	r1, r1, r1, lsl #1
   34c8c:	bx	lr
   34c90:	rsbs	r2, r2, #0
   34c94:	sbc	r3, r3, r3, lsl #1
   34c98:	bl	34d00 <__assert_fail@plt+0x237bc>
   34c9c:	ldr	lr, [sp, #4]
   34ca0:	add	sp, sp, #8
   34ca4:	pop	{r2, r3}
   34ca8:	rsbs	r2, r2, #0
   34cac:	sbc	r3, r3, r3, lsl #1
   34cb0:	bx	lr
   34cb4:	cmp	r3, #0
   34cb8:	cmpeq	r2, #0
   34cbc:	bne	34cd4 <__assert_fail@plt+0x23790>
   34cc0:	cmp	r1, #0
   34cc4:	cmpeq	r0, #0
   34cc8:	mvnne	r1, #0
   34ccc:	mvnne	r0, #0
   34cd0:	b	34cf0 <__assert_fail@plt+0x237ac>
   34cd4:	sub	sp, sp, #8
   34cd8:	push	{sp, lr}
   34cdc:	bl	34d00 <__assert_fail@plt+0x237bc>
   34ce0:	ldr	lr, [sp, #4]
   34ce4:	add	sp, sp, #8
   34ce8:	pop	{r2, r3}
   34cec:	bx	lr
   34cf0:	push	{r1, lr}
   34cf4:	mov	r0, #8
   34cf8:	bl	111b4 <raise@plt>
   34cfc:	pop	{r1, pc}
   34d00:	cmp	r1, r3
   34d04:	push	{r4, r5, r6, r7, r8, r9, lr}
   34d08:	cmpeq	r0, r2
   34d0c:	mov	r4, r0
   34d10:	mov	r5, r1
   34d14:	ldr	r9, [sp, #28]
   34d18:	movcc	r0, #0
   34d1c:	movcc	r1, #0
   34d20:	bcc	34e18 <__assert_fail@plt+0x238d4>
   34d24:	cmp	r3, #0
   34d28:	clzeq	ip, r2
   34d2c:	clzne	ip, r3
   34d30:	addeq	ip, ip, #32
   34d34:	cmp	r5, #0
   34d38:	clzeq	r1, r4
   34d3c:	addeq	r1, r1, #32
   34d40:	clzne	r1, r5
   34d44:	sub	ip, ip, r1
   34d48:	sub	lr, ip, #32
   34d4c:	lsl	r7, r3, ip
   34d50:	rsb	r8, ip, #32
   34d54:	orr	r7, r7, r2, lsl lr
   34d58:	orr	r7, r7, r2, lsr r8
   34d5c:	lsl	r6, r2, ip
   34d60:	cmp	r5, r7
   34d64:	cmpeq	r4, r6
   34d68:	movcc	r0, #0
   34d6c:	movcc	r1, #0
   34d70:	bcc	34d8c <__assert_fail@plt+0x23848>
   34d74:	mov	r3, #1
   34d78:	subs	r4, r4, r6
   34d7c:	lsl	r1, r3, lr
   34d80:	lsl	r0, r3, ip
   34d84:	orr	r1, r1, r3, lsr r8
   34d88:	sbc	r5, r5, r7
   34d8c:	cmp	ip, #0
   34d90:	beq	34e18 <__assert_fail@plt+0x238d4>
   34d94:	lsrs	r3, r7, #1
   34d98:	rrx	r2, r6
   34d9c:	mov	r6, ip
   34da0:	b	34dc4 <__assert_fail@plt+0x23880>
   34da4:	subs	r4, r4, r2
   34da8:	sbc	r5, r5, r3
   34dac:	adds	r4, r4, r4
   34db0:	adc	r5, r5, r5
   34db4:	adds	r4, r4, #1
   34db8:	adc	r5, r5, #0
   34dbc:	subs	r6, r6, #1
   34dc0:	beq	34de0 <__assert_fail@plt+0x2389c>
   34dc4:	cmp	r5, r3
   34dc8:	cmpeq	r4, r2
   34dcc:	bcs	34da4 <__assert_fail@plt+0x23860>
   34dd0:	adds	r4, r4, r4
   34dd4:	adc	r5, r5, r5
   34dd8:	subs	r6, r6, #1
   34ddc:	bne	34dc4 <__assert_fail@plt+0x23880>
   34de0:	lsr	r6, r4, ip
   34de4:	lsr	r7, r5, ip
   34de8:	orr	r6, r6, r5, lsl r8
   34dec:	adds	r2, r0, r4
   34df0:	orr	r6, r6, r5, lsr lr
   34df4:	adc	r3, r1, r5
   34df8:	lsl	r1, r7, ip
   34dfc:	orr	r1, r1, r6, lsl lr
   34e00:	lsl	r0, r6, ip
   34e04:	orr	r1, r1, r6, lsr r8
   34e08:	subs	r0, r2, r0
   34e0c:	mov	r4, r6
   34e10:	mov	r5, r7
   34e14:	sbc	r1, r3, r1
   34e18:	cmp	r9, #0
   34e1c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   34e20:	strd	r4, [r9]
   34e24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   34e28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34e2c:	mov	r7, r0
   34e30:	ldr	r6, [pc, #72]	; 34e80 <__assert_fail@plt+0x2393c>
   34e34:	ldr	r5, [pc, #72]	; 34e84 <__assert_fail@plt+0x23940>
   34e38:	add	r6, pc, r6
   34e3c:	add	r5, pc, r5
   34e40:	sub	r6, r6, r5
   34e44:	mov	r8, r1
   34e48:	mov	r9, r2
   34e4c:	bl	11158 <pthread_mutex_unlock@plt-0x20>
   34e50:	asrs	r6, r6, #2
   34e54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34e58:	mov	r4, #0
   34e5c:	add	r4, r4, #1
   34e60:	ldr	r3, [r5], #4
   34e64:	mov	r2, r9
   34e68:	mov	r1, r8
   34e6c:	mov	r0, r7
   34e70:	blx	r3
   34e74:	cmp	r6, r4
   34e78:	bne	34e5c <__assert_fail@plt+0x23918>
   34e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34e80:	ldrdeq	r2, [r1], -r0
   34e84:	andeq	r2, r1, r8, asr #1
   34e88:	bx	lr
   34e8c:	ldr	r3, [pc, #12]	; 34ea0 <__assert_fail@plt+0x2395c>
   34e90:	mov	r1, #0
   34e94:	add	r3, pc, r3
   34e98:	ldr	r2, [r3]
   34e9c:	b	1143c <__cxa_atexit@plt>
   34ea0:	andeq	r2, r1, r0, asr #5

Disassembly of section .fini:

00034ea4 <.fini>:
   34ea4:	push	{r3, lr}
   34ea8:	pop	{r3, pc}
