
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa0 <.init>:
   10aa0:	push	{r3, lr}
   10aa4:	bl	10c40 <_start@@Base+0x3c>
   10aa8:	pop	{r3, pc}

Disassembly of section .plt:

00010aac <calloc@plt-0x14>:
   10aac:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab0:	ldr	lr, [pc, #4]	; 10abc <calloc@plt-0x4>
   10ab4:	add	lr, pc, lr
   10ab8:	ldr	pc, [lr, #8]!
   10abc:	andeq	r2, r1, r4, asr #10

00010ac0 <calloc@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #73728	; 0x12000
   10ac8:	ldr	pc, [ip, #1348]!	; 0x544

00010acc <printf@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #73728	; 0x12000
   10ad4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #73728	; 0x12000
   10ae0:	ldr	pc, [ip, #1332]!	; 0x534

00010ae4 <realloc@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #73728	; 0x12000
   10aec:	ldr	pc, [ip, #1324]!	; 0x52c

00010af0 <puts@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #73728	; 0x12000
   10af8:	ldr	pc, [ip, #1316]!	; 0x524

00010afc <malloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1308]!	; 0x51c

00010b08 <__libc_start_main@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1300]!	; 0x514

00010b14 <__gmon_start__@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b20 <setvbuf@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1284]!	; 0x504

00010b2c <putchar@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b38 <abort@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1268]!	; 0x4f4

Disassembly of section .text:

00010b44 <main@@Base>:
   10b44:	push	{r4, lr}
   10b48:	mov	r3, #0
   10b4c:	ldr	r4, [pc, #156]	; 10bf0 <main@@Base+0xac>
   10b50:	ldr	r2, [pc, #156]	; 10bf4 <main@@Base+0xb0>
   10b54:	add	r4, pc, r4
   10b58:	mov	r1, r3
   10b5c:	ldr	r0, [r4, r2]
   10b60:	mov	r2, #2
   10b64:	ldr	r0, [r0]
   10b68:	bl	10b20 <setvbuf@plt>
   10b6c:	ldr	r2, [pc, #132]	; 10bf8 <main@@Base+0xb4>
   10b70:	mov	r3, #0
   10b74:	mov	r1, r3
   10b78:	ldr	r0, [r4, r2]
   10b7c:	mov	r2, #2
   10b80:	ldr	r0, [r0]
   10b84:	bl	10b20 <setvbuf@plt>
   10b88:	bl	10e4c <teste_grafo_novo@@Base>
   10b8c:	mov	r4, r0
   10b90:	bl	10f48 <teste_grafo_aresta@@Base>
   10b94:	add	r4, r4, r0
   10b98:	bl	110fc <teste_grafo_adiciona@@Base>
   10b9c:	add	r4, r4, r0
   10ba0:	bl	1132c <teste_grafo_remove@@Base>
   10ba4:	add	r4, r4, r0
   10ba8:	bl	114f4 <teste_v_sucessores@@Base>
   10bac:	add	r4, r4, r0
   10bb0:	bl	116e4 <teste_v_antecessores@@Base>
   10bb4:	add	r4, r4, r0
   10bb8:	bl	118d8 <teste_v_grau@@Base>
   10bbc:	add	r4, r4, r0
   10bc0:	bl	11a54 <teste_v_celebridade@@Base>
   10bc4:	adds	r1, r4, r0
   10bc8:	beq	10be0 <main@@Base+0x9c>
   10bcc:	ldr	r0, [pc, #40]	; 10bfc <main@@Base+0xb8>
   10bd0:	add	r0, pc, r0
   10bd4:	bl	10acc <printf@plt>
   10bd8:	mov	r0, #0
   10bdc:	pop	{r4, pc}
   10be0:	ldr	r0, [pc, #24]	; 10c00 <main@@Base+0xbc>
   10be4:	add	r0, pc, r0
   10be8:	bl	10af0 <puts@plt>
   10bec:	b	10bd8 <main@@Base+0x94>
   10bf0:	andeq	r2, r1, r4, lsr #9
   10bf4:	andeq	r0, r0, r0, asr #32
   10bf8:	andeq	r0, r0, r8, lsr r0
   10bfc:	andeq	r1, r0, r8, lsr #29
   10c00:	andeq	r1, r0, ip, ror lr

00010c04 <_start@@Base>:
   10c04:	mov	fp, #0
   10c08:	mov	lr, #0
   10c0c:	pop	{r1}		; (ldr r1, [sp], #4)
   10c10:	mov	r2, sp
   10c14:	push	{r2}		; (str r2, [sp, #-4]!)
   10c18:	push	{r0}		; (str r0, [sp, #-4]!)
   10c1c:	ldr	ip, [pc, #16]	; 10c34 <_start@@Base+0x30>
   10c20:	push	{ip}		; (str ip, [sp, #-4]!)
   10c24:	ldr	r0, [pc, #12]	; 10c38 <_start@@Base+0x34>
   10c28:	ldr	r3, [pc, #12]	; 10c3c <_start@@Base+0x38>
   10c2c:	bl	10b08 <__libc_start_main@plt>
   10c30:	bl	10b38 <abort@plt>
   10c34:	andeq	r2, r1, r4, lsl #7
   10c38:	andeq	r0, r1, r4, asr #22
   10c3c:	andeq	r2, r1, r4, lsr #6
   10c40:	ldr	r3, [pc, #20]	; 10c5c <_start@@Base+0x58>
   10c44:	ldr	r2, [pc, #20]	; 10c60 <_start@@Base+0x5c>
   10c48:	add	r3, pc, r3
   10c4c:	ldr	r2, [r3, r2]
   10c50:	cmp	r2, #0
   10c54:	bxeq	lr
   10c58:	b	10b14 <__gmon_start__@plt>
   10c5c:			; <UNDEFINED> instruction: 0x000123b0
   10c60:	andeq	r0, r0, ip, lsr r0
   10c64:	ldr	r3, [pc, #28]	; 10c88 <_start@@Base+0x84>
   10c68:	ldr	r0, [pc, #28]	; 10c8c <_start@@Base+0x88>
   10c6c:	sub	r3, r3, r0
   10c70:	cmp	r3, #6
   10c74:	bxls	lr
   10c78:	ldr	r3, [pc, #16]	; 10c90 <_start@@Base+0x8c>
   10c7c:	cmp	r3, #0
   10c80:	bxeq	lr
   10c84:	bx	r3
   10c88:	andeq	r3, r2, pc, asr #32
   10c8c:	andeq	r3, r2, ip, asr #32
   10c90:	andeq	r0, r0, r0
   10c94:	ldr	r1, [pc, #36]	; 10cc0 <_start@@Base+0xbc>
   10c98:	ldr	r0, [pc, #36]	; 10cc4 <_start@@Base+0xc0>
   10c9c:	sub	r1, r1, r0
   10ca0:	asr	r1, r1, #2
   10ca4:	add	r1, r1, r1, lsr #31
   10ca8:	asrs	r1, r1, #1
   10cac:	bxeq	lr
   10cb0:	ldr	r3, [pc, #16]	; 10cc8 <_start@@Base+0xc4>
   10cb4:	cmp	r3, #0
   10cb8:	bxeq	lr
   10cbc:	bx	r3
   10cc0:	andeq	r3, r2, ip, asr #32
   10cc4:	andeq	r3, r2, ip, asr #32
   10cc8:	andeq	r0, r0, r0
   10ccc:	push	{r4, lr}
   10cd0:	ldr	r4, [pc, #24]	; 10cf0 <_start@@Base+0xec>
   10cd4:	ldrb	r3, [r4]
   10cd8:	cmp	r3, #0
   10cdc:	popne	{r4, pc}
   10ce0:	bl	10c64 <_start@@Base+0x60>
   10ce4:	mov	r3, #1
   10ce8:	strb	r3, [r4]
   10cec:	pop	{r4, pc}
   10cf0:	andeq	r3, r2, ip, asr #32
   10cf4:	ldr	r0, [pc, #40]	; 10d24 <_start@@Base+0x120>
   10cf8:	ldr	r3, [r0]
   10cfc:	cmp	r3, #0
   10d00:	bne	10d08 <_start@@Base+0x104>
   10d04:	b	10c94 <_start@@Base+0x90>
   10d08:	ldr	r3, [pc, #24]	; 10d28 <_start@@Base+0x124>
   10d0c:	cmp	r3, #0
   10d10:	beq	10d04 <_start@@Base+0x100>
   10d14:	push	{r4, lr}
   10d18:	blx	r3
   10d1c:	pop	{r4, lr}
   10d20:	b	10c94 <_start@@Base+0x90>
   10d24:	andeq	r2, r2, r4, lsl pc
   10d28:	andeq	r0, r0, r0

00010d2c <_g@@Base>:
   10d2c:	push	{r1, r2, r3}
   10d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d34:	sub	sp, sp, #16
   10d38:	mov	r4, r0
   10d3c:	str	r0, [sp, #4]
   10d40:	mov	r0, #8
   10d44:	ldr	r6, [sp, #52]	; 0x34
   10d48:	bl	10afc <malloc@plt>
   10d4c:	add	r3, sp, #56	; 0x38
   10d50:	mov	r1, #8
   10d54:	str	r3, [sp, #12]
   10d58:	mov	r9, r0
   10d5c:	mov	r0, r4
   10d60:	bl	10ac0 <calloc@plt>
   10d64:	cmp	r6, #0
   10d68:	str	r0, [r9, #4]
   10d6c:	ble	10dd8 <_g@@Base+0xac>
   10d70:	sub	r6, r6, #1
   10d74:	bic	r6, r6, #1
   10d78:	mov	r5, r0
   10d7c:	add	r6, r6, #2
   10d80:	mov	fp, #0
   10d84:	mov	r8, #8
   10d88:	mov	r7, #1
   10d8c:	ldr	r2, [sp, #12]
   10d90:	mov	r1, r8
   10d94:	mov	r3, r2
   10d98:	mov	r0, r7
   10d9c:	ldr	r4, [r3], #8
   10da0:	ldr	sl, [r2, #4]
   10da4:	str	r3, [sp, #12]
   10da8:	bl	10ac0 <calloc@plt>
   10dac:	add	r1, r5, r4, lsl #3
   10db0:	ldr	r3, [r5, r4, lsl #3]
   10db4:	ldr	ip, [r1, #4]
   10db8:	add	fp, fp, #2
   10dbc:	add	r3, r3, #1
   10dc0:	cmp	fp, r6
   10dc4:	str	r0, [r1, #4]
   10dc8:	str	sl, [r0]
   10dcc:	str	ip, [r0, #4]
   10dd0:	str	r3, [r5, r4, lsl #3]
   10dd4:	bne	10d8c <_g@@Base+0x60>
   10dd8:	ldr	r3, [sp, #4]
   10ddc:	mov	r0, r9
   10de0:	str	r3, [r9]
   10de4:	add	sp, sp, #16
   10de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dec:	add	sp, sp, #12
   10df0:	bx	lr

00010df4 <_f@@Base>:
   10df4:	push	{r4, r5, r6, lr}
   10df8:	subs	r5, r0, #0
   10dfc:	beq	10e44 <_f@@Base+0x50>
   10e00:	ldr	r3, [r5]
   10e04:	cmp	r3, #0
   10e08:	ble	10e44 <_f@@Base+0x50>
   10e0c:	mov	r6, r1
   10e10:	mov	r4, #0
   10e14:	b	10e24 <_f@@Base+0x30>
   10e18:	ldr	r3, [r5]
   10e1c:	cmp	r3, r4
   10e20:	ble	10e44 <_f@@Base+0x50>
   10e24:	mov	r1, r4
   10e28:	mov	r0, r5
   10e2c:	bl	12104 <vetor_elemento@@Base>
   10e30:	add	r4, r4, #1
   10e34:	cmp	r0, r6
   10e38:	bne	10e18 <_f@@Base+0x24>
   10e3c:	mov	r0, #1
   10e40:	pop	{r4, r5, r6, pc}
   10e44:	mov	r0, #0
   10e48:	pop	{r4, r5, r6, pc}

00010e4c <teste_grafo_novo@@Base>:
   10e4c:	ldr	r0, [pc, #220]	; 10f30 <teste_grafo_novo@@Base+0xe4>
   10e50:	push	{r4, r5, r6, lr}
   10e54:	add	r0, pc, r0
   10e58:	bl	10acc <printf@plt>
   10e5c:	mov	r0, #10
   10e60:	bl	11be4 <grafo_novo@@Base>
   10e64:	subs	r5, r0, #0
   10e68:	beq	10ef8 <teste_grafo_novo@@Base+0xac>
   10e6c:	ldr	r3, [r5]
   10e70:	cmp	r3, #10
   10e74:	moveq	r4, #0
   10e78:	beq	10e8c <teste_grafo_novo@@Base+0x40>
   10e7c:	ldr	r0, [pc, #176]	; 10f34 <teste_grafo_novo@@Base+0xe8>
   10e80:	mov	r4, #1
   10e84:	add	r0, pc, r0
   10e88:	bl	10acc <printf@plt>
   10e8c:	mov	r0, r5
   10e90:	bl	11c40 <grafo_apaga@@Base>
   10e94:	mov	r0, #1
   10e98:	bl	11be4 <grafo_novo@@Base>
   10e9c:	subs	r5, r0, #0
   10ea0:	beq	10f14 <teste_grafo_novo@@Base+0xc8>
   10ea4:	ldr	r3, [r5]
   10ea8:	cmp	r3, #1
   10eac:	beq	10ed8 <teste_grafo_novo@@Base+0x8c>
   10eb0:	ldr	r0, [pc, #128]	; 10f38 <teste_grafo_novo@@Base+0xec>
   10eb4:	add	r4, r4, #1
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10acc <printf@plt>
   10ec0:	mov	r0, r5
   10ec4:	bl	11c40 <grafo_apaga@@Base>
   10ec8:	mov	r0, #10
   10ecc:	bl	10b2c <putchar@plt>
   10ed0:	mov	r0, r4
   10ed4:	pop	{r4, r5, r6, pc}
   10ed8:	bl	11c40 <grafo_apaga@@Base>
   10edc:	cmp	r4, #0
   10ee0:	bne	10ec8 <teste_grafo_novo@@Base+0x7c>
   10ee4:	ldr	r0, [pc, #80]	; 10f3c <teste_grafo_novo@@Base+0xf0>
   10ee8:	add	r0, pc, r0
   10eec:	bl	10af0 <puts@plt>
   10ef0:	mov	r0, r4
   10ef4:	pop	{r4, r5, r6, pc}
   10ef8:	ldr	r0, [pc, #64]	; 10f40 <teste_grafo_novo@@Base+0xf4>
   10efc:	mov	r4, #1
   10f00:	add	r0, pc, r0
   10f04:	bl	10acc <printf@plt>
   10f08:	mov	r0, #10
   10f0c:	bl	10b2c <putchar@plt>
   10f10:	b	10ed0 <teste_grafo_novo@@Base+0x84>
   10f14:	ldr	r0, [pc, #40]	; 10f44 <teste_grafo_novo@@Base+0xf8>
   10f18:	add	r4, r4, #1
   10f1c:	add	r0, pc, r0
   10f20:	bl	10acc <printf@plt>
   10f24:	mov	r0, #10
   10f28:	bl	10b2c <putchar@plt>
   10f2c:	b	10ed0 <teste_grafo_novo@@Base+0x84>
   10f30:	andeq	r1, r0, r8, lsr r5
   10f34:	andeq	r1, r0, r0, lsr r5
   10f38:	andeq	r1, r0, r0, lsr #10
   10f3c:	andeq	r1, r0, r4, lsl r5
   10f40:	muleq	r0, ip, r4
   10f44:	andeq	r1, r0, r0, lsl #9

00010f48 <teste_grafo_aresta@@Base>:
   10f48:	push	{r4, r5, r6, r7, r8, lr}
   10f4c:	sub	sp, sp, #80	; 0x50
   10f50:	mov	ip, #7
   10f54:	mov	r3, #2
   10f58:	mov	r7, #0
   10f5c:	mov	r0, #6
   10f60:	mov	r5, #4
   10f64:	mov	r1, #3
   10f68:	mov	r8, #5
   10f6c:	mov	r4, #1
   10f70:	mov	r2, r1
   10f74:	str	ip, [sp, #16]
   10f78:	str	ip, [sp]
   10f7c:	str	r3, [sp, #12]
   10f80:	str	r3, [sp, #4]
   10f84:	str	r0, [sp, #44]	; 0x2c
   10f88:	str	r1, [sp, #68]	; 0x44
   10f8c:	str	r0, [sp, #64]	; 0x40
   10f90:	mov	r1, #22
   10f94:	str	r0, [sp, #60]	; 0x3c
   10f98:	str	r7, [sp, #36]	; 0x24
   10f9c:	str	r7, [sp, #8]
   10fa0:	str	r5, [sp, #40]	; 0x28
   10fa4:	str	r5, [sp, #32]
   10fa8:	str	r5, [sp, #28]
   10fac:	str	r8, [sp, #24]
   10fb0:	str	r8, [sp, #20]
   10fb4:	mov	r0, #8
   10fb8:	str	ip, [sp, #56]	; 0x38
   10fbc:	str	r4, [sp, #76]	; 0x4c
   10fc0:	str	r4, [sp, #52]	; 0x34
   10fc4:	str	r4, [sp, #48]	; 0x30
   10fc8:	str	r7, [sp, #72]	; 0x48
   10fcc:	bl	10d2c <_g@@Base>
   10fd0:	mov	r6, r0
   10fd4:	ldr	r0, [pc, #264]	; 110e4 <teste_grafo_aresta@@Base+0x19c>
   10fd8:	add	r0, pc, r0
   10fdc:	bl	10acc <printf@plt>
   10fe0:	mov	r2, r5
   10fe4:	mov	r1, r8
   10fe8:	mov	r0, r6
   10fec:	bl	11ca0 <grafo_aresta@@Base>
   10ff0:	cmp	r0, r4
   10ff4:	moveq	r4, r7
   10ff8:	beq	11008 <teste_grafo_aresta@@Base+0xc0>
   10ffc:	ldr	r0, [pc, #228]	; 110e8 <teste_grafo_aresta@@Base+0x1a0>
   11000:	add	r0, pc, r0
   11004:	bl	10acc <printf@plt>
   11008:	mov	r2, #6
   1100c:	mov	r1, #7
   11010:	mov	r0, r6
   11014:	bl	11ca0 <grafo_aresta@@Base>
   11018:	cmp	r0, #1
   1101c:	beq	11030 <teste_grafo_aresta@@Base+0xe8>
   11020:	ldr	r0, [pc, #196]	; 110ec <teste_grafo_aresta@@Base+0x1a4>
   11024:	add	r4, r4, #1
   11028:	add	r0, pc, r0
   1102c:	bl	10acc <printf@plt>
   11030:	mov	r2, #1
   11034:	mov	r1, #7
   11038:	mov	r0, r6
   1103c:	bl	11ca0 <grafo_aresta@@Base>
   11040:	cmp	r0, #0
   11044:	bne	110b0 <teste_grafo_aresta@@Base+0x168>
   11048:	mov	r2, #7
   1104c:	mov	r1, #2
   11050:	bl	11ca0 <grafo_aresta@@Base>
   11054:	cmn	r0, #1
   11058:	beq	11088 <teste_grafo_aresta@@Base+0x140>
   1105c:	ldr	r0, [pc, #140]	; 110f0 <teste_grafo_aresta@@Base+0x1a8>
   11060:	add	r4, r4, #1
   11064:	add	r0, pc, r0
   11068:	bl	10acc <printf@plt>
   1106c:	mov	r0, r6
   11070:	bl	11c40 <grafo_apaga@@Base>
   11074:	mov	r0, #10
   11078:	bl	10b2c <putchar@plt>
   1107c:	mov	r0, r4
   11080:	add	sp, sp, #80	; 0x50
   11084:	pop	{r4, r5, r6, r7, r8, pc}
   11088:	mov	r0, r6
   1108c:	bl	11c40 <grafo_apaga@@Base>
   11090:	cmp	r4, #0
   11094:	bne	11074 <teste_grafo_aresta@@Base+0x12c>
   11098:	ldr	r0, [pc, #84]	; 110f4 <teste_grafo_aresta@@Base+0x1ac>
   1109c:	add	r0, pc, r0
   110a0:	bl	10af0 <puts@plt>
   110a4:	mov	r0, r4
   110a8:	add	sp, sp, #80	; 0x50
   110ac:	pop	{r4, r5, r6, r7, r8, pc}
   110b0:	ldr	r0, [pc, #64]	; 110f8 <teste_grafo_aresta@@Base+0x1b0>
   110b4:	add	r4, r4, #1
   110b8:	add	r0, pc, r0
   110bc:	bl	10acc <printf@plt>
   110c0:	mov	r2, #7
   110c4:	mov	r1, #2
   110c8:	mov	r0, #0
   110cc:	bl	11ca0 <grafo_aresta@@Base>
   110d0:	cmn	r0, #1
   110d4:	bne	1105c <teste_grafo_aresta@@Base+0x114>
   110d8:	mov	r0, r6
   110dc:	bl	11c40 <grafo_apaga@@Base>
   110e0:	b	11074 <teste_grafo_aresta@@Base+0x12c>
   110e4:	andeq	r1, r0, r8, lsr #8
   110e8:	andeq	r1, r0, r4, lsl r4
   110ec:	andeq	r1, r0, ip, ror #7
   110f0:	andeq	r1, r0, r4, lsr #8
   110f4:	andeq	r1, r0, r0, ror #6
   110f8:	muleq	r0, r4, r3

000110fc <teste_grafo_adiciona@@Base>:
   110fc:	push	{r4, r5, r6, lr}
   11100:	sub	sp, sp, #8
   11104:	mov	r4, #2
   11108:	mov	r6, #7
   1110c:	mov	r3, r4
   11110:	mov	r2, #3
   11114:	mov	r1, #4
   11118:	str	r4, [sp, #4]
   1111c:	str	r6, [sp]
   11120:	mov	r0, #9
   11124:	bl	10d2c <_g@@Base>
   11128:	mov	r5, r0
   1112c:	ldr	r0, [pc, #468]	; 11308 <teste_grafo_adiciona@@Base+0x20c>
   11130:	add	r0, pc, r0
   11134:	bl	10acc <printf@plt>
   11138:	mov	r1, r4
   1113c:	mov	r2, r6
   11140:	mov	r0, r5
   11144:	bl	11d08 <grafo_adiciona@@Base>
   11148:	cmp	r0, #1
   1114c:	moveq	r4, #0
   11150:	beq	11164 <teste_grafo_adiciona@@Base+0x68>
   11154:	ldr	r0, [pc, #432]	; 1130c <teste_grafo_adiciona@@Base+0x210>
   11158:	mov	r4, #1
   1115c:	add	r0, pc, r0
   11160:	bl	10acc <printf@plt>
   11164:	ldr	r3, [r5, #4]
   11168:	ldr	r3, [r3, #20]
   1116c:	cmp	r3, #0
   11170:	beq	11180 <teste_grafo_adiciona@@Base+0x84>
   11174:	ldr	r3, [r3]
   11178:	cmp	r3, #7
   1117c:	beq	11190 <teste_grafo_adiciona@@Base+0x94>
   11180:	ldr	r0, [pc, #392]	; 11310 <teste_grafo_adiciona@@Base+0x214>
   11184:	add	r4, r4, #1
   11188:	add	r0, pc, r0
   1118c:	bl	10acc <printf@plt>
   11190:	mov	r2, #8
   11194:	mov	r1, #3
   11198:	mov	r0, r5
   1119c:	bl	11d08 <grafo_adiciona@@Base>
   111a0:	cmp	r0, #1
   111a4:	beq	111b8 <teste_grafo_adiciona@@Base+0xbc>
   111a8:	ldr	r0, [pc, #356]	; 11314 <teste_grafo_adiciona@@Base+0x218>
   111ac:	add	r4, r4, #1
   111b0:	add	r0, pc, r0
   111b4:	bl	10acc <printf@plt>
   111b8:	ldr	r3, [r5, #4]
   111bc:	ldr	r3, [r3, #28]
   111c0:	cmp	r3, #0
   111c4:	beq	111e0 <teste_grafo_adiciona@@Base+0xe4>
   111c8:	ldr	r2, [r3, #4]
   111cc:	cmp	r2, #0
   111d0:	beq	111e0 <teste_grafo_adiciona@@Base+0xe4>
   111d4:	ldr	r1, [r2, #4]
   111d8:	cmp	r1, #0
   111dc:	beq	112d4 <teste_grafo_adiciona@@Base+0x1d8>
   111e0:	ldr	r0, [pc, #304]	; 11318 <teste_grafo_adiciona@@Base+0x21c>
   111e4:	add	r4, r4, #1
   111e8:	add	r0, pc, r0
   111ec:	bl	10acc <printf@plt>
   111f0:	mov	r2, #7
   111f4:	mov	r1, #2
   111f8:	mov	r0, r5
   111fc:	bl	11d08 <grafo_adiciona@@Base>
   11200:	cmp	r0, #0
   11204:	bne	112c0 <teste_grafo_adiciona@@Base+0x1c4>
   11208:	mov	r2, #7
   1120c:	mov	r1, #22
   11210:	mov	r0, r5
   11214:	bl	11d08 <grafo_adiciona@@Base>
   11218:	cmn	r0, #1
   1121c:	beq	11280 <teste_grafo_adiciona@@Base+0x184>
   11220:	ldr	r0, [pc, #244]	; 1131c <teste_grafo_adiciona@@Base+0x220>
   11224:	add	r4, r4, #1
   11228:	add	r0, pc, r0
   1122c:	bl	10acc <printf@plt>
   11230:	mov	r2, #7
   11234:	mov	r1, #2
   11238:	mov	r0, #0
   1123c:	bl	11d08 <grafo_adiciona@@Base>
   11240:	cmn	r0, #1
   11244:	beq	11274 <teste_grafo_adiciona@@Base+0x178>
   11248:	ldr	r0, [pc, #208]	; 11320 <teste_grafo_adiciona@@Base+0x224>
   1124c:	add	r4, r4, #1
   11250:	add	r0, pc, r0
   11254:	bl	10acc <printf@plt>
   11258:	mov	r0, r5
   1125c:	bl	11c40 <grafo_apaga@@Base>
   11260:	mov	r0, #10
   11264:	bl	10b2c <putchar@plt>
   11268:	mov	r0, r4
   1126c:	add	sp, sp, #8
   11270:	pop	{r4, r5, r6, pc}
   11274:	mov	r0, r5
   11278:	bl	11c40 <grafo_apaga@@Base>
   1127c:	b	11260 <teste_grafo_adiciona@@Base+0x164>
   11280:	mov	r2, #7
   11284:	mov	r1, #2
   11288:	mov	r0, #0
   1128c:	bl	11d08 <grafo_adiciona@@Base>
   11290:	cmn	r0, #1
   11294:	bne	11248 <teste_grafo_adiciona@@Base+0x14c>
   11298:	mov	r0, r5
   1129c:	bl	11c40 <grafo_apaga@@Base>
   112a0:	cmp	r4, #0
   112a4:	bne	11260 <teste_grafo_adiciona@@Base+0x164>
   112a8:	ldr	r0, [pc, #116]	; 11324 <teste_grafo_adiciona@@Base+0x228>
   112ac:	add	r0, pc, r0
   112b0:	bl	10af0 <puts@plt>
   112b4:	mov	r0, r4
   112b8:	add	sp, sp, #8
   112bc:	pop	{r4, r5, r6, pc}
   112c0:	ldr	r0, [pc, #96]	; 11328 <teste_grafo_adiciona@@Base+0x22c>
   112c4:	add	r4, r4, #1
   112c8:	add	r0, pc, r0
   112cc:	bl	10acc <printf@plt>
   112d0:	b	11208 <teste_grafo_adiciona@@Base+0x10c>
   112d4:	ldr	r3, [r3]
   112d8:	cmp	r3, #2
   112dc:	beq	112f8 <teste_grafo_adiciona@@Base+0x1fc>
   112e0:	cmp	r3, #8
   112e4:	bne	111e0 <teste_grafo_adiciona@@Base+0xe4>
   112e8:	ldr	r3, [r2]
   112ec:	cmp	r3, #2
   112f0:	bne	111e0 <teste_grafo_adiciona@@Base+0xe4>
   112f4:	b	111f0 <teste_grafo_adiciona@@Base+0xf4>
   112f8:	ldr	r3, [r2]
   112fc:	cmp	r3, #8
   11300:	bne	111e0 <teste_grafo_adiciona@@Base+0xe4>
   11304:	b	111f0 <teste_grafo_adiciona@@Base+0xf4>
   11308:	muleq	r0, r0, r3
   1130c:	andeq	r1, r0, r8, ror r3
   11310:	andeq	r1, r0, r8, lsl #7
   11314:	andeq	r1, r0, r4, lsr #6
   11318:	andeq	r1, r0, r8, asr r3
   1131c:	andeq	r1, r0, ip, lsl #7
   11320:	muleq	r0, ip, r3
   11324:	andeq	r1, r0, r0, asr r1
   11328:			; <UNDEFINED> instruction: 0x000012b4

0001132c <teste_grafo_remove@@Base>:
   1132c:	push	{r4, r5, r6, lr}
   11330:	sub	sp, sp, #16
   11334:	mov	r4, #1
   11338:	mov	r3, #2
   1133c:	mov	r6, #7
   11340:	str	r3, [sp, #4]
   11344:	mov	r2, #3
   11348:	mov	r1, #6
   1134c:	str	r4, [sp, #12]
   11350:	str	r6, [sp, #8]
   11354:	str	r6, [sp]
   11358:	mov	r0, #9
   1135c:	bl	10d2c <_g@@Base>
   11360:	mov	r5, r0
   11364:	ldr	r0, [pc, #360]	; 114d4 <teste_grafo_remove@@Base+0x1a8>
   11368:	add	r0, pc, r0
   1136c:	bl	10acc <printf@plt>
   11370:	mov	r2, r4
   11374:	mov	r1, r6
   11378:	mov	r0, r5
   1137c:	bl	11d94 <grafo_remove@@Base>
   11380:	cmp	r0, r4
   11384:	moveq	r4, #0
   11388:	beq	11398 <teste_grafo_remove@@Base+0x6c>
   1138c:	ldr	r0, [pc, #324]	; 114d8 <teste_grafo_remove@@Base+0x1ac>
   11390:	add	r0, pc, r0
   11394:	bl	10acc <printf@plt>
   11398:	ldr	r3, [r5, #4]
   1139c:	ldr	r3, [r3, #60]	; 0x3c
   113a0:	cmp	r3, #0
   113a4:	beq	113b4 <teste_grafo_remove@@Base+0x88>
   113a8:	ldr	r2, [r3, #4]
   113ac:	cmp	r2, #0
   113b0:	beq	114c4 <teste_grafo_remove@@Base+0x198>
   113b4:	ldr	r0, [pc, #288]	; 114dc <teste_grafo_remove@@Base+0x1b0>
   113b8:	add	r4, r4, #1
   113bc:	add	r0, pc, r0
   113c0:	bl	10acc <printf@plt>
   113c4:	mov	r2, #2
   113c8:	mov	r1, #7
   113cc:	mov	r0, r5
   113d0:	bl	11d94 <grafo_remove@@Base>
   113d4:	cmp	r0, #1
   113d8:	beq	113ec <teste_grafo_remove@@Base+0xc0>
   113dc:	ldr	r0, [pc, #252]	; 114e0 <teste_grafo_remove@@Base+0x1b4>
   113e0:	add	r4, r4, #1
   113e4:	add	r0, pc, r0
   113e8:	bl	10acc <printf@plt>
   113ec:	ldr	r3, [r5, #4]
   113f0:	ldr	r3, [r3, #60]	; 0x3c
   113f4:	cmp	r3, #0
   113f8:	beq	1140c <teste_grafo_remove@@Base+0xe0>
   113fc:	ldr	r0, [pc, #224]	; 114e4 <teste_grafo_remove@@Base+0x1b8>
   11400:	add	r4, r4, #1
   11404:	add	r0, pc, r0
   11408:	bl	10acc <printf@plt>
   1140c:	mov	r2, #0
   11410:	mov	r1, #4
   11414:	mov	r0, r5
   11418:	bl	11d94 <grafo_remove@@Base>
   1141c:	cmp	r0, #0
   11420:	bne	11490 <teste_grafo_remove@@Base+0x164>
   11424:	mov	r2, #22
   11428:	mov	r1, #7
   1142c:	mov	r0, r5
   11430:	bl	11d94 <grafo_remove@@Base>
   11434:	cmn	r0, #1
   11438:	beq	11468 <teste_grafo_remove@@Base+0x13c>
   1143c:	ldr	r0, [pc, #164]	; 114e8 <teste_grafo_remove@@Base+0x1bc>
   11440:	add	r4, r4, #1
   11444:	add	r0, pc, r0
   11448:	bl	10acc <printf@plt>
   1144c:	mov	r0, r5
   11450:	bl	11c40 <grafo_apaga@@Base>
   11454:	mov	r0, #10
   11458:	bl	10b2c <putchar@plt>
   1145c:	mov	r0, r4
   11460:	add	sp, sp, #16
   11464:	pop	{r4, r5, r6, pc}
   11468:	mov	r0, r5
   1146c:	bl	11c40 <grafo_apaga@@Base>
   11470:	cmp	r4, #0
   11474:	bne	11454 <teste_grafo_remove@@Base+0x128>
   11478:	ldr	r0, [pc, #108]	; 114ec <teste_grafo_remove@@Base+0x1c0>
   1147c:	add	r0, pc, r0
   11480:	bl	10af0 <puts@plt>
   11484:	mov	r0, r4
   11488:	add	sp, sp, #16
   1148c:	pop	{r4, r5, r6, pc}
   11490:	ldr	r0, [pc, #88]	; 114f0 <teste_grafo_remove@@Base+0x1c4>
   11494:	add	r4, r4, #1
   11498:	add	r0, pc, r0
   1149c:	bl	10acc <printf@plt>
   114a0:	mov	r2, #22
   114a4:	mov	r1, #7
   114a8:	mov	r0, r5
   114ac:	bl	11d94 <grafo_remove@@Base>
   114b0:	cmn	r0, #1
   114b4:	bne	1143c <teste_grafo_remove@@Base+0x110>
   114b8:	mov	r0, r5
   114bc:	bl	11c40 <grafo_apaga@@Base>
   114c0:	b	11454 <teste_grafo_remove@@Base+0x128>
   114c4:	ldr	r3, [r3]
   114c8:	cmp	r3, #2
   114cc:	bne	113b4 <teste_grafo_remove@@Base+0x88>
   114d0:	b	113c4 <teste_grafo_remove@@Base+0x98>
   114d4:			; <UNDEFINED> instruction: 0x000012bc
   114d8:	andeq	r1, r0, r8, lsr #5
   114dc:			; <UNDEFINED> instruction: 0x000012b8
   114e0:	andeq	r1, r0, r4, asr r2
   114e4:	andeq	r1, r0, r0, ror r2
   114e8:	andeq	r1, r0, r8, lsr #5
   114ec:	andeq	r0, r0, r0, lsl #31
   114f0:	andeq	r1, r0, r8, lsl r2

000114f4 <teste_v_sucessores@@Base>:
   114f4:	push	{r4, r5, r6, r7, lr}
   114f8:	sub	sp, sp, #84	; 0x54
   114fc:	mov	r5, #7
   11500:	mov	r3, #2
   11504:	mov	r2, #4
   11508:	mov	r4, #0
   1150c:	mov	r0, #3
   11510:	mov	r1, #5
   11514:	mov	ip, #6
   11518:	str	r3, [sp, #12]
   1151c:	str	r3, [sp, #4]
   11520:	mov	r6, #1
   11524:	str	r5, [sp, #16]
   11528:	str	r5, [sp]
   1152c:	str	r2, [sp, #40]	; 0x28
   11530:	str	r2, [sp, #32]
   11534:	str	r2, [sp, #28]
   11538:	str	r1, [sp, #24]
   1153c:	mov	r2, r0
   11540:	str	r1, [sp, #20]
   11544:	str	r0, [sp, #68]	; 0x44
   11548:	mov	r1, #22
   1154c:	str	r4, [sp, #36]	; 0x24
   11550:	str	r4, [sp, #8]
   11554:	mov	r0, #8
   11558:	str	ip, [sp, #44]	; 0x2c
   1155c:	str	ip, [sp, #64]	; 0x40
   11560:	str	ip, [sp, #60]	; 0x3c
   11564:	str	r5, [sp, #56]	; 0x38
   11568:	str	r4, [sp, #72]	; 0x48
   1156c:	str	r6, [sp, #76]	; 0x4c
   11570:	str	r6, [sp, #52]	; 0x34
   11574:	str	r6, [sp, #48]	; 0x30
   11578:	bl	10d2c <_g@@Base>
   1157c:	mov	r7, r0
   11580:	ldr	r0, [pc, #320]	; 116c8 <teste_v_sucessores@@Base+0x1d4>
   11584:	add	r0, pc, r0
   11588:	bl	10acc <printf@plt>
   1158c:	mov	r1, r5
   11590:	mov	r0, r7
   11594:	bl	11e50 <v_sucessores@@Base>
   11598:	subs	r5, r0, #0
   1159c:	beq	11694 <teste_v_sucessores@@Base+0x1a0>
   115a0:	ldr	r3, [r5]
   115a4:	cmp	r3, #3
   115a8:	moveq	r6, r4
   115ac:	beq	115bc <teste_v_sucessores@@Base+0xc8>
   115b0:	ldr	r0, [pc, #276]	; 116cc <teste_v_sucessores@@Base+0x1d8>
   115b4:	add	r0, pc, r0
   115b8:	bl	10acc <printf@plt>
   115bc:	mov	r1, #2
   115c0:	mov	r0, r5
   115c4:	bl	10df4 <_f@@Base>
   115c8:	cmp	r0, #0
   115cc:	bne	11634 <teste_v_sucessores@@Base+0x140>
   115d0:	ldr	r0, [pc, #248]	; 116d0 <teste_v_sucessores@@Base+0x1dc>
   115d4:	add	r6, r6, #1
   115d8:	add	r0, pc, r0
   115dc:	bl	10acc <printf@plt>
   115e0:	mov	r0, r5
   115e4:	bl	120a0 <vetor_apaga@@Base>
   115e8:	mov	r1, #2
   115ec:	mov	r0, r7
   115f0:	bl	11e50 <v_sucessores@@Base>
   115f4:	subs	r5, r0, #0
   115f8:	beq	116ac <teste_v_sucessores@@Base+0x1b8>
   115fc:	ldr	r3, [r5]
   11600:	cmp	r3, #0
   11604:	bne	11660 <teste_v_sucessores@@Base+0x16c>
   11608:	bl	120a0 <vetor_apaga@@Base>
   1160c:	mov	r0, r7
   11610:	bl	11c40 <grafo_apaga@@Base>
   11614:	cmp	r6, #0
   11618:	bne	11680 <teste_v_sucessores@@Base+0x18c>
   1161c:	ldr	r0, [pc, #176]	; 116d4 <teste_v_sucessores@@Base+0x1e0>
   11620:	add	r0, pc, r0
   11624:	bl	10af0 <puts@plt>
   11628:	mov	r0, r6
   1162c:	add	sp, sp, #84	; 0x54
   11630:	pop	{r4, r5, r6, r7, pc}
   11634:	mov	r1, #5
   11638:	mov	r0, r5
   1163c:	bl	10df4 <_f@@Base>
   11640:	cmp	r0, #0
   11644:	beq	115d0 <teste_v_sucessores@@Base+0xdc>
   11648:	mov	r1, #6
   1164c:	mov	r0, r5
   11650:	bl	10df4 <_f@@Base>
   11654:	cmp	r0, #0
   11658:	beq	115d0 <teste_v_sucessores@@Base+0xdc>
   1165c:	b	115e0 <teste_v_sucessores@@Base+0xec>
   11660:	ldr	r0, [pc, #112]	; 116d8 <teste_v_sucessores@@Base+0x1e4>
   11664:	add	r6, r6, #1
   11668:	add	r0, pc, r0
   1166c:	bl	10acc <printf@plt>
   11670:	mov	r0, r5
   11674:	bl	120a0 <vetor_apaga@@Base>
   11678:	mov	r0, r7
   1167c:	bl	11c40 <grafo_apaga@@Base>
   11680:	mov	r0, #10
   11684:	bl	10b2c <putchar@plt>
   11688:	mov	r0, r6
   1168c:	add	sp, sp, #84	; 0x54
   11690:	pop	{r4, r5, r6, r7, pc}
   11694:	ldr	r0, [pc, #64]	; 116dc <teste_v_sucessores@@Base+0x1e8>
   11698:	add	r0, pc, r0
   1169c:	bl	10acc <printf@plt>
   116a0:	mov	r0, #10
   116a4:	bl	10b2c <putchar@plt>
   116a8:	b	11628 <teste_v_sucessores@@Base+0x134>
   116ac:	ldr	r0, [pc, #44]	; 116e0 <teste_v_sucessores@@Base+0x1ec>
   116b0:	add	r6, r6, #1
   116b4:	add	r0, pc, r0
   116b8:	bl	10acc <printf@plt>
   116bc:	mov	r0, #10
   116c0:	bl	10b2c <putchar@plt>
   116c4:	b	11628 <teste_v_sucessores@@Base+0x134>
   116c8:	andeq	r1, r0, r0, lsr #3
   116cc:			; <UNDEFINED> instruction: 0x000011b4
   116d0:			; <UNDEFINED> instruction: 0x000011bc
   116d4:	ldrdeq	r0, [r0], -ip
   116d8:	muleq	r0, r8, r1
   116dc:	andeq	r1, r0, r0, lsr #1
   116e0:	andeq	r1, r0, ip, lsl #2

000116e4 <teste_v_antecessores@@Base>:
   116e4:	push	{r4, r5, r6, r7, lr}
   116e8:	sub	sp, sp, #84	; 0x54
   116ec:	mov	ip, #7
   116f0:	mov	lr, #5
   116f4:	mov	r5, #2
   116f8:	mov	r0, #6
   116fc:	mov	r3, #4
   11700:	mov	r4, #0
   11704:	mov	r1, #3
   11708:	mov	r2, r1
   1170c:	str	ip, [sp, #16]
   11710:	str	ip, [sp]
   11714:	str	lr, [sp, #24]
   11718:	str	lr, [sp, #20]
   1171c:	mov	r6, #1
   11720:	str	r0, [sp, #44]	; 0x2c
   11724:	str	r3, [sp, #40]	; 0x28
   11728:	str	r3, [sp, #32]
   1172c:	str	r3, [sp, #28]
   11730:	str	r5, [sp, #12]
   11734:	mov	r3, r5
   11738:	str	r5, [sp, #4]
   1173c:	str	r1, [sp, #68]	; 0x44
   11740:	str	r0, [sp, #64]	; 0x40
   11744:	mov	r1, #22
   11748:	str	r0, [sp, #60]	; 0x3c
   1174c:	str	r4, [sp, #36]	; 0x24
   11750:	str	r4, [sp, #8]
   11754:	mov	r0, #8
   11758:	str	ip, [sp, #56]	; 0x38
   1175c:	str	r4, [sp, #72]	; 0x48
   11760:	str	r6, [sp, #76]	; 0x4c
   11764:	str	r6, [sp, #52]	; 0x34
   11768:	str	r6, [sp, #48]	; 0x30
   1176c:	bl	10d2c <_g@@Base>
   11770:	mov	r7, r0
   11774:	ldr	r0, [pc, #320]	; 118bc <teste_v_antecessores@@Base+0x1d8>
   11778:	add	r0, pc, r0
   1177c:	bl	10acc <printf@plt>
   11780:	mov	r1, r5
   11784:	mov	r0, r7
   11788:	bl	11ed0 <v_antecessores@@Base>
   1178c:	subs	r5, r0, #0
   11790:	beq	11888 <teste_v_antecessores@@Base+0x1a4>
   11794:	ldr	r3, [r5]
   11798:	cmp	r3, #3
   1179c:	moveq	r6, r4
   117a0:	beq	117b0 <teste_v_antecessores@@Base+0xcc>
   117a4:	ldr	r0, [pc, #276]	; 118c0 <teste_v_antecessores@@Base+0x1dc>
   117a8:	add	r0, pc, r0
   117ac:	bl	10acc <printf@plt>
   117b0:	mov	r1, #0
   117b4:	mov	r0, r5
   117b8:	bl	10df4 <_f@@Base>
   117bc:	cmp	r0, #0
   117c0:	bne	11828 <teste_v_antecessores@@Base+0x144>
   117c4:	ldr	r0, [pc, #248]	; 118c4 <teste_v_antecessores@@Base+0x1e0>
   117c8:	add	r6, r6, #1
   117cc:	add	r0, pc, r0
   117d0:	bl	10acc <printf@plt>
   117d4:	mov	r0, r5
   117d8:	bl	120a0 <vetor_apaga@@Base>
   117dc:	mov	r1, #7
   117e0:	mov	r0, r7
   117e4:	bl	11ed0 <v_antecessores@@Base>
   117e8:	subs	r5, r0, #0
   117ec:	beq	118a0 <teste_v_antecessores@@Base+0x1bc>
   117f0:	ldr	r3, [r5]
   117f4:	cmp	r3, #0
   117f8:	bne	11854 <teste_v_antecessores@@Base+0x170>
   117fc:	bl	120a0 <vetor_apaga@@Base>
   11800:	mov	r0, r7
   11804:	bl	11c40 <grafo_apaga@@Base>
   11808:	cmp	r6, #0
   1180c:	bne	11874 <teste_v_antecessores@@Base+0x190>
   11810:	ldr	r0, [pc, #176]	; 118c8 <teste_v_antecessores@@Base+0x1e4>
   11814:	add	r0, pc, r0
   11818:	bl	10af0 <puts@plt>
   1181c:	mov	r0, r6
   11820:	add	sp, sp, #84	; 0x54
   11824:	pop	{r4, r5, r6, r7, pc}
   11828:	mov	r1, #3
   1182c:	mov	r0, r5
   11830:	bl	10df4 <_f@@Base>
   11834:	cmp	r0, #0
   11838:	beq	117c4 <teste_v_antecessores@@Base+0xe0>
   1183c:	mov	r1, #7
   11840:	mov	r0, r5
   11844:	bl	10df4 <_f@@Base>
   11848:	cmp	r0, #0
   1184c:	beq	117c4 <teste_v_antecessores@@Base+0xe0>
   11850:	b	117d4 <teste_v_antecessores@@Base+0xf0>
   11854:	ldr	r0, [pc, #112]	; 118cc <teste_v_antecessores@@Base+0x1e8>
   11858:	add	r6, r6, #1
   1185c:	add	r0, pc, r0
   11860:	bl	10acc <printf@plt>
   11864:	mov	r0, r5
   11868:	bl	120a0 <vetor_apaga@@Base>
   1186c:	mov	r0, r7
   11870:	bl	11c40 <grafo_apaga@@Base>
   11874:	mov	r0, #10
   11878:	bl	10b2c <putchar@plt>
   1187c:	mov	r0, r6
   11880:	add	sp, sp, #84	; 0x54
   11884:	pop	{r4, r5, r6, r7, pc}
   11888:	ldr	r0, [pc, #64]	; 118d0 <teste_v_antecessores@@Base+0x1ec>
   1188c:	add	r0, pc, r0
   11890:	bl	10acc <printf@plt>
   11894:	mov	r0, #10
   11898:	bl	10b2c <putchar@plt>
   1189c:	b	1181c <teste_v_antecessores@@Base+0x138>
   118a0:	ldr	r0, [pc, #44]	; 118d4 <teste_v_antecessores@@Base+0x1f0>
   118a4:	add	r6, r6, #1
   118a8:	add	r0, pc, r0
   118ac:	bl	10acc <printf@plt>
   118b0:	mov	r0, #10
   118b4:	bl	10b2c <putchar@plt>
   118b8:	b	1181c <teste_v_antecessores@@Base+0x138>
   118bc:	strheq	r1, [r0], -r8
   118c0:	andeq	r1, r0, ip, asr #1
   118c4:	ldrdeq	r1, [r0], -r8
   118c8:	andeq	r0, r0, r8, ror #23
   118cc:	strheq	r1, [r0], -r8
   118d0:			; <UNDEFINED> instruction: 0x00000fb8
   118d4:	andeq	r1, r0, ip, lsr #32

000118d8 <teste_v_grau@@Base>:
   118d8:	push	{r4, r5, r6, lr}
   118dc:	sub	sp, sp, #80	; 0x50
   118e0:	mov	ip, #7
   118e4:	mov	r3, #2
   118e8:	mov	r6, #0
   118ec:	mov	r2, #4
   118f0:	mov	r0, #3
   118f4:	mov	r1, #5
   118f8:	mov	lr, #6
   118fc:	mov	r4, #1
   11900:	str	ip, [sp, #16]
   11904:	str	ip, [sp]
   11908:	str	r3, [sp, #12]
   1190c:	str	r3, [sp, #4]
   11910:	str	r2, [sp, #40]	; 0x28
   11914:	str	r2, [sp, #32]
   11918:	str	r2, [sp, #28]
   1191c:	str	r1, [sp, #24]
   11920:	mov	r2, r0
   11924:	str	r1, [sp, #20]
   11928:	str	r0, [sp, #68]	; 0x44
   1192c:	mov	r1, #22
   11930:	str	r6, [sp, #36]	; 0x24
   11934:	str	r6, [sp, #8]
   11938:	mov	r0, #8
   1193c:	str	lr, [sp, #44]	; 0x2c
   11940:	str	lr, [sp, #64]	; 0x40
   11944:	str	lr, [sp, #60]	; 0x3c
   11948:	str	ip, [sp, #56]	; 0x38
   1194c:	str	r4, [sp, #76]	; 0x4c
   11950:	str	r4, [sp, #52]	; 0x34
   11954:	str	r4, [sp, #48]	; 0x30
   11958:	str	r6, [sp, #72]	; 0x48
   1195c:	bl	10d2c <_g@@Base>
   11960:	mov	r5, r0
   11964:	ldr	r0, [pc, #212]	; 11a40 <teste_v_grau@@Base+0x168>
   11968:	add	r0, pc, r0
   1196c:	bl	10acc <printf@plt>
   11970:	mov	r0, r5
   11974:	mvn	r1, #3
   11978:	bl	11f88 <v_grau@@Base>
   1197c:	cmn	r0, #1
   11980:	moveq	r4, r6
   11984:	beq	11994 <teste_v_grau@@Base+0xbc>
   11988:	ldr	r0, [pc, #180]	; 11a44 <teste_v_grau@@Base+0x16c>
   1198c:	add	r0, pc, r0
   11990:	bl	10acc <printf@plt>
   11994:	mov	r1, #7
   11998:	mov	r0, r5
   1199c:	bl	11f88 <v_grau@@Base>
   119a0:	cmp	r0, #3
   119a4:	beq	11a04 <teste_v_grau@@Base+0x12c>
   119a8:	ldr	r0, [pc, #152]	; 11a48 <teste_v_grau@@Base+0x170>
   119ac:	add	r4, r4, #1
   119b0:	add	r0, pc, r0
   119b4:	bl	10acc <printf@plt>
   119b8:	mov	r1, #5
   119bc:	mov	r0, r5
   119c0:	bl	11f88 <v_grau@@Base>
   119c4:	cmp	r0, #2
   119c8:	beq	119f8 <teste_v_grau@@Base+0x120>
   119cc:	ldr	r0, [pc, #120]	; 11a4c <teste_v_grau@@Base+0x174>
   119d0:	add	r4, r4, #1
   119d4:	add	r0, pc, r0
   119d8:	bl	10acc <printf@plt>
   119dc:	mov	r0, r5
   119e0:	bl	11c40 <grafo_apaga@@Base>
   119e4:	mov	r0, #10
   119e8:	bl	10b2c <putchar@plt>
   119ec:	mov	r0, r4
   119f0:	add	sp, sp, #80	; 0x50
   119f4:	pop	{r4, r5, r6, pc}
   119f8:	mov	r0, r5
   119fc:	bl	11c40 <grafo_apaga@@Base>
   11a00:	b	119e4 <teste_v_grau@@Base+0x10c>
   11a04:	mov	r1, #5
   11a08:	mov	r0, r5
   11a0c:	bl	11f88 <v_grau@@Base>
   11a10:	cmp	r0, #2
   11a14:	bne	119cc <teste_v_grau@@Base+0xf4>
   11a18:	mov	r0, r5
   11a1c:	bl	11c40 <grafo_apaga@@Base>
   11a20:	cmp	r4, #0
   11a24:	bne	119e4 <teste_v_grau@@Base+0x10c>
   11a28:	ldr	r0, [pc, #32]	; 11a50 <teste_v_grau@@Base+0x178>
   11a2c:	add	r0, pc, r0
   11a30:	bl	10af0 <puts@plt>
   11a34:	mov	r0, r4
   11a38:	add	sp, sp, #80	; 0x50
   11a3c:	pop	{r4, r5, r6, pc}
   11a40:	ldrdeq	r0, [r0], -ip
   11a44:	andeq	r0, r0, r4, asr #31
   11a48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a4c:	ldrdeq	r0, [r0], -ip
   11a50:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00011a54 <teste_v_celebridade@@Base>:
   11a54:	push	{r4, r5, r6, r7, lr}
   11a58:	sub	sp, sp, #116	; 0x74
   11a5c:	mov	r4, #2
   11a60:	mov	lr, #3
   11a64:	mov	r6, #7
   11a68:	mov	r0, #4
   11a6c:	mov	ip, #0
   11a70:	mov	r1, #5
   11a74:	mov	r5, #1
   11a78:	mov	r3, r4
   11a7c:	mov	r2, lr
   11a80:	str	ip, [sp, #8]
   11a84:	str	r6, [sp]
   11a88:	str	ip, [sp, #72]	; 0x48
   11a8c:	str	ip, [sp, #36]	; 0x24
   11a90:	str	r1, [sp, #104]	; 0x68
   11a94:	mov	ip, #6
   11a98:	str	r1, [sp, #24]
   11a9c:	str	r1, [sp, #20]
   11aa0:	str	r0, [sp, #96]	; 0x60
   11aa4:	mov	r1, #30
   11aa8:	str	r0, [sp, #40]	; 0x28
   11aac:	str	r0, [sp, #32]
   11ab0:	str	r0, [sp, #28]
   11ab4:	str	r4, [sp, #4]
   11ab8:	mov	r0, #8
   11abc:	str	lr, [sp, #68]	; 0x44
   11ac0:	str	ip, [sp, #88]	; 0x58
   11ac4:	str	ip, [sp, #64]	; 0x40
   11ac8:	str	ip, [sp, #60]	; 0x3c
   11acc:	str	ip, [sp, #44]	; 0x2c
   11ad0:	str	r6, [sp, #56]	; 0x38
   11ad4:	str	r6, [sp, #16]
   11ad8:	str	r4, [sp, #12]
   11adc:	str	r4, [sp, #108]	; 0x6c
   11ae0:	str	r4, [sp, #100]	; 0x64
   11ae4:	str	r4, [sp, #92]	; 0x5c
   11ae8:	str	r4, [sp, #84]	; 0x54
   11aec:	str	r5, [sp, #80]	; 0x50
   11af0:	str	r5, [sp, #76]	; 0x4c
   11af4:	str	r5, [sp, #52]	; 0x34
   11af8:	str	r5, [sp, #48]	; 0x30
   11afc:	bl	10d2c <_g@@Base>
   11b00:	mov	r7, r0
   11b04:	ldr	r0, [pc, #164]	; 11bb0 <teste_v_celebridade@@Base+0x15c>
   11b08:	add	r0, pc, r0
   11b0c:	bl	10acc <printf@plt>
   11b10:	mov	r1, r6
   11b14:	mov	r0, r7
   11b18:	bl	11fec <v_celebridade@@Base>
   11b1c:	subs	r6, r0, #0
   11b20:	bne	11b84 <teste_v_celebridade@@Base+0x130>
   11b24:	mov	r1, r4
   11b28:	mov	r0, r7
   11b2c:	bl	11fec <v_celebridade@@Base>
   11b30:	cmp	r0, #1
   11b34:	movne	r6, r5
   11b38:	beq	11b64 <teste_v_celebridade@@Base+0x110>
   11b3c:	ldr	r0, [pc, #112]	; 11bb4 <teste_v_celebridade@@Base+0x160>
   11b40:	add	r0, pc, r0
   11b44:	bl	10acc <printf@plt>
   11b48:	mov	r0, r7
   11b4c:	bl	11c40 <grafo_apaga@@Base>
   11b50:	mov	r0, #10
   11b54:	bl	10b2c <putchar@plt>
   11b58:	mov	r0, r6
   11b5c:	add	sp, sp, #116	; 0x74
   11b60:	pop	{r4, r5, r6, r7, pc}
   11b64:	mov	r0, r7
   11b68:	bl	11c40 <grafo_apaga@@Base>
   11b6c:	ldr	r0, [pc, #68]	; 11bb8 <teste_v_celebridade@@Base+0x164>
   11b70:	add	r0, pc, r0
   11b74:	bl	10af0 <puts@plt>
   11b78:	mov	r0, r6
   11b7c:	add	sp, sp, #116	; 0x74
   11b80:	pop	{r4, r5, r6, r7, pc}
   11b84:	ldr	r0, [pc, #48]	; 11bbc <teste_v_celebridade@@Base+0x168>
   11b88:	add	r0, pc, r0
   11b8c:	bl	10acc <printf@plt>
   11b90:	mov	r1, r4
   11b94:	mov	r0, r7
   11b98:	bl	11fec <v_celebridade@@Base>
   11b9c:	cmp	r0, r5
   11ba0:	mov	r6, r0
   11ba4:	movne	r6, r4
   11ba8:	beq	11b48 <teste_v_celebridade@@Base+0xf4>
   11bac:	b	11b3c <teste_v_celebridade@@Base+0xe8>
   11bb0:	ldrdeq	r0, [r0], -r8
   11bb4:	andeq	r0, r0, ip, ror #29
   11bb8:	andeq	r0, r0, ip, lsl #17
   11bbc:	andeq	r0, r0, ip, ror #28

00011bc0 <cria_elem@@Base>:
   11bc0:	push	{r4, lr}
   11bc4:	mov	r4, r0
   11bc8:	mov	r0, #8
   11bcc:	bl	10afc <malloc@plt>
   11bd0:	cmp	r0, #0
   11bd4:	movne	r3, #0
   11bd8:	strne	r4, [r0]
   11bdc:	strne	r3, [r0, #4]
   11be0:	pop	{r4, pc}

00011be4 <grafo_novo@@Base>:
   11be4:	push	{r4, r5, r6, lr}
   11be8:	subs	r5, r0, #0
   11bec:	ble	11c38 <grafo_novo@@Base+0x54>
   11bf0:	mov	r0, #8
   11bf4:	bl	10afc <malloc@plt>
   11bf8:	lsl	r4, r5, #3
   11bfc:	mov	r6, r0
   11c00:	str	r5, [r0]
   11c04:	mov	r0, r4
   11c08:	bl	10afc <malloc@plt>
   11c0c:	mov	r2, #0
   11c10:	mov	r3, r0
   11c14:	add	r1, r0, r4
   11c18:	str	r0, [r6, #4]
   11c1c:	str	r2, [r3]
   11c20:	str	r2, [r3, #4]
   11c24:	add	r3, r3, #8
   11c28:	cmp	r3, r1
   11c2c:	bne	11c1c <grafo_novo@@Base+0x38>
   11c30:	mov	r0, r6
   11c34:	pop	{r4, r5, r6, pc}
   11c38:	mov	r6, #0
   11c3c:	b	11c30 <grafo_novo@@Base+0x4c>

00011c40 <grafo_apaga@@Base>:
   11c40:	push	{r4, r5, r6, lr}
   11c44:	subs	r6, r0, #0
   11c48:	popeq	{r4, r5, r6, pc}
   11c4c:	ldm	r6, {r2, r3}
   11c50:	cmp	r2, #0
   11c54:	ble	11c8c <grafo_apaga@@Base+0x4c>
   11c58:	mov	r5, #0
   11c5c:	add	r1, r3, r5, lsl #3
   11c60:	ldr	r0, [r1, #4]
   11c64:	cmp	r0, #0
   11c68:	beq	11c80 <grafo_apaga@@Base+0x40>
   11c6c:	ldr	r4, [r0, #4]
   11c70:	bl	10ad8 <free@plt>
   11c74:	subs	r0, r4, #0
   11c78:	bne	11c6c <grafo_apaga@@Base+0x2c>
   11c7c:	ldm	r6, {r2, r3}
   11c80:	add	r5, r5, #1
   11c84:	cmp	r2, r5
   11c88:	bgt	11c5c <grafo_apaga@@Base+0x1c>
   11c8c:	mov	r0, r3
   11c90:	bl	10ad8 <free@plt>
   11c94:	mov	r0, r6
   11c98:	pop	{r4, r5, r6, lr}
   11c9c:	b	10ad8 <free@plt>

00011ca0 <grafo_aresta@@Base>:
   11ca0:	cmp	r0, #0
   11ca4:	beq	11d00 <grafo_aresta@@Base+0x60>
   11ca8:	ldr	r3, [r0]
   11cac:	cmp	r3, r1
   11cb0:	blt	11d00 <grafo_aresta@@Base+0x60>
   11cb4:	cmp	r3, r2
   11cb8:	blt	11cf4 <grafo_aresta@@Base+0x54>
   11cbc:	ldr	r3, [r0, #4]
   11cc0:	add	r1, r3, r1, lsl #3
   11cc4:	ldr	r0, [r1, #4]
   11cc8:	cmp	r0, #0
   11ccc:	bne	11ce0 <grafo_aresta@@Base+0x40>
   11cd0:	bx	lr
   11cd4:	ldr	r0, [r0, #4]
   11cd8:	cmp	r0, #0
   11cdc:	beq	11cfc <grafo_aresta@@Base+0x5c>
   11ce0:	ldr	r3, [r0]
   11ce4:	cmp	r2, r3
   11ce8:	bne	11cd4 <grafo_aresta@@Base+0x34>
   11cec:	mov	r0, #1
   11cf0:	bx	lr
   11cf4:	mov	r0, #0
   11cf8:	bx	lr
   11cfc:	bx	lr
   11d00:	mvn	r0, #0
   11d04:	bx	lr

00011d08 <grafo_adiciona@@Base>:
   11d08:	push	{r4, r5, r6, r7, r8, lr}
   11d0c:	subs	lr, r0, #0
   11d10:	beq	11d8c <grafo_adiciona@@Base+0x84>
   11d14:	ldr	r3, [lr]
   11d18:	mov	r7, r2
   11d1c:	cmp	r3, r2
   11d20:	cmpge	r3, r1
   11d24:	movlt	r4, #1
   11d28:	movge	r4, #0
   11d2c:	blt	11d8c <grafo_adiciona@@Base+0x84>
   11d30:	mov	r5, r1
   11d34:	mov	r6, lr
   11d38:	bl	11ca0 <grafo_aresta@@Base>
   11d3c:	cmp	r0, #1
   11d40:	moveq	r3, r4
   11d44:	beq	11d84 <grafo_adiciona@@Base+0x7c>
   11d48:	ldr	r3, [r6, #4]
   11d4c:	lsl	r4, r5, #3
   11d50:	add	r5, r3, r4
   11d54:	mov	r0, r7
   11d58:	ldr	r7, [r5, #4]
   11d5c:	bl	11bc0 <cria_elem@@Base>
   11d60:	ldr	r2, [r6, #4]
   11d64:	mov	r3, #1
   11d68:	add	r4, r2, r4
   11d6c:	ldr	r1, [r2]
   11d70:	add	r1, r1, r3
   11d74:	str	r0, [r5, #4]
   11d78:	ldr	r0, [r4, #4]
   11d7c:	str	r7, [r0, #4]
   11d80:	str	r1, [r2]
   11d84:	mov	r0, r3
   11d88:	pop	{r4, r5, r6, r7, r8, pc}
   11d8c:	mvn	r3, #0
   11d90:	b	11d84 <grafo_adiciona@@Base+0x7c>

00011d94 <grafo_remove@@Base>:
   11d94:	cmp	r0, #0
   11d98:	beq	11e48 <grafo_remove@@Base+0xb4>
   11d9c:	cmp	r1, r2
   11da0:	ldr	ip, [r0]
   11da4:	movge	r3, r1
   11da8:	movlt	r3, r2
   11dac:	cmp	ip, r3
   11db0:	blt	11e48 <grafo_remove@@Base+0xb4>
   11db4:	ldr	ip, [r0, #4]
   11db8:	add	r1, ip, r1, lsl #3
   11dbc:	ldr	r3, [r1, #4]
   11dc0:	cmp	r3, #0
   11dc4:	beq	11e1c <grafo_remove@@Base+0x88>
   11dc8:	ldr	r0, [r3]
   11dcc:	push	{r4, lr}
   11dd0:	cmp	r2, r0
   11dd4:	bne	11dec <grafo_remove@@Base+0x58>
   11dd8:	b	11e24 <grafo_remove@@Base+0x90>
   11ddc:	ldr	r1, [r0]
   11de0:	cmp	r2, r1
   11de4:	beq	11dfc <grafo_remove@@Base+0x68>
   11de8:	mov	r3, r0
   11dec:	ldr	r0, [r3, #4]
   11df0:	cmp	r0, #0
   11df4:	bne	11ddc <grafo_remove@@Base+0x48>
   11df8:	pop	{r4, pc}
   11dfc:	ldr	r2, [ip]
   11e00:	ldr	r1, [r0, #4]
   11e04:	sub	r2, r2, #1
   11e08:	str	r1, [r3, #4]
   11e0c:	str	r2, [ip]
   11e10:	bl	10ad8 <free@plt>
   11e14:	mov	r0, #1
   11e18:	pop	{r4, pc}
   11e1c:	mov	r0, r3
   11e20:	bx	lr
   11e24:	ldr	r2, [ip]
   11e28:	ldr	r0, [r3, #4]
   11e2c:	sub	r2, r2, #1
   11e30:	str	r0, [r1, #4]
   11e34:	mov	r0, r3
   11e38:	str	r2, [ip]
   11e3c:	bl	10ad8 <free@plt>
   11e40:	mov	r0, #1
   11e44:	pop	{r4, pc}
   11e48:	mvn	r0, #0
   11e4c:	bx	lr

00011e50 <v_sucessores@@Base>:
   11e50:	push	{r4, r5, r6, lr}
   11e54:	subs	r5, r0, #0
   11e58:	beq	11ec8 <v_sucessores@@Base+0x78>
   11e5c:	ldr	r3, [r5]
   11e60:	cmp	r1, #0
   11e64:	cmpge	r3, r1
   11e68:	movgt	r3, #1
   11e6c:	movle	r3, #0
   11e70:	ble	11ec0 <v_sucessores@@Base+0x70>
   11e74:	mov	r4, r1
   11e78:	bl	1207c <vetor_novo@@Base>
   11e7c:	ldr	r1, [r5, #4]
   11e80:	add	r1, r1, r4, lsl #3
   11e84:	ldr	r4, [r1, #4]
   11e88:	cmp	r4, #0
   11e8c:	mov	r6, r0
   11e90:	beq	11eb8 <v_sucessores@@Base+0x68>
   11e94:	mov	r5, #0
   11e98:	mov	r2, r5
   11e9c:	ldr	r1, [r4]
   11ea0:	mov	r0, r6
   11ea4:	bl	12134 <vetor_insere@@Base>
   11ea8:	ldr	r4, [r4, #4]
   11eac:	add	r5, r5, #1
   11eb0:	cmp	r4, #0
   11eb4:	bne	11e98 <v_sucessores@@Base+0x48>
   11eb8:	mov	r0, r6
   11ebc:	pop	{r4, r5, r6, pc}
   11ec0:	mov	r6, r3
   11ec4:	b	11eb8 <v_sucessores@@Base+0x68>
   11ec8:	mov	r6, r5
   11ecc:	b	11eb8 <v_sucessores@@Base+0x68>

00011ed0 <v_antecessores@@Base>:
   11ed0:	push	{r4, r5, r6, r7, r8, lr}
   11ed4:	subs	r6, r0, #0
   11ed8:	beq	11f80 <v_antecessores@@Base+0xb0>
   11edc:	ldr	r3, [r6]
   11ee0:	cmp	r1, #0
   11ee4:	cmpge	r3, r1
   11ee8:	movgt	r3, #1
   11eec:	movle	r3, #0
   11ef0:	ble	11f74 <v_antecessores@@Base+0xa4>
   11ef4:	mov	r4, r1
   11ef8:	bl	1207c <vetor_novo@@Base>
   11efc:	ldr	r1, [r6]
   11f00:	cmp	r1, #0
   11f04:	mov	r7, r0
   11f08:	ble	11f44 <v_antecessores@@Base+0x74>
   11f0c:	mov	r8, #0
   11f10:	mov	r5, r8
   11f14:	ldr	r3, [r6, #4]
   11f18:	add	r3, r3, r5, lsl #3
   11f1c:	b	11f2c <v_antecessores@@Base+0x5c>
   11f20:	ldr	r2, [r3]
   11f24:	cmp	r4, r2
   11f28:	beq	11f4c <v_antecessores@@Base+0x7c>
   11f2c:	ldr	r3, [r3, #4]
   11f30:	cmp	r3, #0
   11f34:	bne	11f20 <v_antecessores@@Base+0x50>
   11f38:	add	r5, r5, #1
   11f3c:	cmp	r1, r5
   11f40:	bgt	11f14 <v_antecessores@@Base+0x44>
   11f44:	mov	r0, r7
   11f48:	pop	{r4, r5, r6, r7, r8, pc}
   11f4c:	mov	r1, r5
   11f50:	mov	r2, r8
   11f54:	mov	r0, r7
   11f58:	bl	12134 <vetor_insere@@Base>
   11f5c:	ldr	r1, [r6]
   11f60:	add	r5, r5, #1
   11f64:	cmp	r1, r5
   11f68:	add	r8, r8, #1
   11f6c:	bgt	11f14 <v_antecessores@@Base+0x44>
   11f70:	b	11f44 <v_antecessores@@Base+0x74>
   11f74:	mov	r7, r3
   11f78:	mov	r0, r7
   11f7c:	pop	{r4, r5, r6, r7, r8, pc}
   11f80:	mov	r7, r6
   11f84:	b	11f44 <v_antecessores@@Base+0x74>

00011f88 <v_grau@@Base>:
   11f88:	subs	r2, r1, #0
   11f8c:	push	{r4, r5, r6, lr}
   11f90:	blt	11fe4 <v_grau@@Base+0x5c>
   11f94:	mov	r5, r2
   11f98:	mov	r4, r0
   11f9c:	bl	11ed0 <v_antecessores@@Base>
   11fa0:	mov	r1, r5
   11fa4:	mov	r6, r0
   11fa8:	mov	r0, r4
   11fac:	bl	11e50 <v_sucessores@@Base>
   11fb0:	mov	r5, r0
   11fb4:	mov	r0, r6
   11fb8:	bl	120f4 <vetor_tamanho@@Base>
   11fbc:	mov	r4, r0
   11fc0:	mov	r0, r5
   11fc4:	bl	120f4 <vetor_tamanho@@Base>
   11fc8:	add	r4, r4, r0
   11fcc:	mov	r0, r6
   11fd0:	bl	120a0 <vetor_apaga@@Base>
   11fd4:	mov	r0, r5
   11fd8:	bl	120a0 <vetor_apaga@@Base>
   11fdc:	mov	r0, r4
   11fe0:	pop	{r4, r5, r6, pc}
   11fe4:	mvn	r4, #0
   11fe8:	b	11fdc <v_grau@@Base+0x54>

00011fec <v_celebridade@@Base>:
   11fec:	subs	r3, r0, #0
   11ff0:	beq	12074 <v_celebridade@@Base+0x88>
   11ff4:	ldr	r0, [r3, #4]
   11ff8:	ldr	ip, [r0, r1, lsl #3]
   11ffc:	cmp	ip, #0
   12000:	bne	12064 <v_celebridade@@Base+0x78>
   12004:	push	{r4, lr}
   12008:	ldr	r4, [r3]
   1200c:	cmp	r4, #0
   12010:	ble	1206c <v_celebridade@@Base+0x80>
   12014:	add	lr, r0, r4, lsl #3
   12018:	ldr	r3, [r0, #4]
   1201c:	cmp	r3, #0
   12020:	bne	12034 <v_celebridade@@Base+0x48>
   12024:	b	12044 <v_celebridade@@Base+0x58>
   12028:	ldr	r3, [r3, #4]
   1202c:	cmp	r3, #0
   12030:	beq	12044 <v_celebridade@@Base+0x58>
   12034:	ldr	r2, [r3]
   12038:	cmp	r1, r2
   1203c:	bne	12028 <v_celebridade@@Base+0x3c>
   12040:	add	ip, ip, #1
   12044:	add	r0, r0, #8
   12048:	cmp	lr, r0
   1204c:	bne	12018 <v_celebridade@@Base+0x2c>
   12050:	add	ip, ip, #1
   12054:	sub	r0, r4, ip
   12058:	clz	r0, r0
   1205c:	lsr	r0, r0, #5
   12060:	pop	{r4, pc}
   12064:	mov	r0, #0
   12068:	bx	lr
   1206c:	mov	ip, #1
   12070:	b	12054 <v_celebridade@@Base+0x68>
   12074:	mvn	r0, #0
   12078:	bx	lr

0001207c <vetor_novo@@Base>:
   1207c:	push	{r4, lr}
   12080:	mov	r0, #12
   12084:	bl	10afc <malloc@plt>
   12088:	cmp	r0, #0
   1208c:	movne	r3, #0
   12090:	strne	r3, [r0]
   12094:	strne	r3, [r0, #4]
   12098:	strne	r3, [r0, #8]
   1209c:	pop	{r4, pc}

000120a0 <vetor_apaga@@Base>:
   120a0:	push	{r4, lr}
   120a4:	subs	r4, r0, #0
   120a8:	popeq	{r4, pc}
   120ac:	ldr	r0, [r4, #8]
   120b0:	bl	10ad8 <free@plt>
   120b4:	mov	r0, r4
   120b8:	pop	{r4, lr}
   120bc:	b	10ad8 <free@plt>

000120c0 <vetor_atribui@@Base>:
   120c0:	clz	r3, r0
   120c4:	lsr	r3, r3, #5
   120c8:	orrs	r3, r3, r1, lsr #31
   120cc:	bne	120ec <vetor_atribui@@Base+0x2c>
   120d0:	ldr	r3, [r0]
   120d4:	cmp	r1, r3
   120d8:	bge	120ec <vetor_atribui@@Base+0x2c>
   120dc:	ldr	r3, [r0, #8]
   120e0:	mov	r0, r1
   120e4:	str	r2, [r3, r1, lsl #2]
   120e8:	bx	lr
   120ec:	mvn	r0, #0
   120f0:	bx	lr

000120f4 <vetor_tamanho@@Base>:
   120f4:	cmp	r0, #0
   120f8:	ldrne	r0, [r0]
   120fc:	mvneq	r0, #0
   12100:	bx	lr

00012104 <vetor_elemento@@Base>:
   12104:	clz	r3, r0
   12108:	lsr	r3, r3, #5
   1210c:	orrs	r3, r3, r1, lsr #31
   12110:	bne	1212c <vetor_elemento@@Base+0x28>
   12114:	ldr	r3, [r0]
   12118:	cmp	r1, r3
   1211c:	bge	1212c <vetor_elemento@@Base+0x28>
   12120:	ldr	r3, [r0, #8]
   12124:	ldr	r0, [r3, r1, lsl #2]
   12128:	bx	lr
   1212c:	mov	r0, #-2147483648	; 0x80000000
   12130:	bx	lr

00012134 <vetor_insere@@Base>:
   12134:	cmn	r2, #1
   12138:	movge	r3, #0
   1213c:	movlt	r3, #1
   12140:	cmp	r0, #0
   12144:	orreq	r3, r3, #1
   12148:	cmp	r3, #0
   1214c:	push	{r4, r5, r6, lr}
   12150:	bne	121ec <vetor_insere@@Base+0xb8>
   12154:	ldr	lr, [r0]
   12158:	cmp	r2, lr
   1215c:	bgt	121ec <vetor_insere@@Base+0xb8>
   12160:	ldr	r3, [r0, #4]
   12164:	cmn	r2, #1
   12168:	movne	r4, r2
   1216c:	moveq	r4, lr
   12170:	cmp	lr, r3
   12174:	mov	r5, r0
   12178:	mov	r6, r1
   1217c:	beq	121b8 <vetor_insere@@Base+0x84>
   12180:	ldr	r0, [r0, #8]
   12184:	cmp	r4, lr
   12188:	addlt	r3, r0, lr, lsl #2
   1218c:	addlt	ip, r0, r4, lsl #2
   12190:	bge	121a4 <vetor_insere@@Base+0x70>
   12194:	ldr	r2, [r3, #-4]
   12198:	str	r2, [r3], #-4
   1219c:	cmp	ip, r3
   121a0:	bne	12194 <vetor_insere@@Base+0x60>
   121a4:	add	lr, lr, #1
   121a8:	str	r6, [r0, r4, lsl #2]
   121ac:	str	lr, [r5]
   121b0:	mov	r0, r4
   121b4:	pop	{r4, r5, r6, pc}
   121b8:	cmp	lr, #0
   121bc:	moveq	r3, #1
   121c0:	lslne	r1, lr, #3
   121c4:	lslne	lr, lr, #1
   121c8:	streq	r3, [r0, #4]
   121cc:	strne	lr, [r0, #4]
   121d0:	moveq	r1, #4
   121d4:	ldr	r0, [r0, #8]
   121d8:	bl	10ae4 <realloc@plt>
   121dc:	cmp	r0, #0
   121e0:	str	r0, [r5, #8]
   121e4:	ldrne	lr, [r5]
   121e8:	bne	12184 <vetor_insere@@Base+0x50>
   121ec:	mvn	r4, #0
   121f0:	b	121b0 <vetor_insere@@Base+0x7c>

000121f4 <vetor_remove@@Base>:
   121f4:	clz	r3, r0
   121f8:	lsr	r3, r3, #5
   121fc:	orrs	r3, r3, r1, lsr #31
   12200:	bne	1224c <vetor_remove@@Base+0x58>
   12204:	ldr	ip, [r0]
   12208:	cmp	r1, ip
   1220c:	bge	1224c <vetor_remove@@Base+0x58>
   12210:	add	r3, r1, #1
   12214:	cmp	ip, r3
   12218:	ble	1223c <vetor_remove@@Base+0x48>
   1221c:	ldr	r3, [r0, #8]
   12220:	sub	r2, ip, #-1073741823	; 0xc0000001
   12224:	add	r1, r3, r1, lsl #2
   12228:	add	r2, r3, r2, lsl #2
   1222c:	ldr	r3, [r1, #4]
   12230:	str	r3, [r1], #4
   12234:	cmp	r1, r2
   12238:	bne	1222c <vetor_remove@@Base+0x38>
   1223c:	sub	ip, ip, #1
   12240:	str	ip, [r0]
   12244:	mov	r0, #0
   12248:	bx	lr
   1224c:	mvn	r0, #0
   12250:	bx	lr

00012254 <vetor_pesquisa@@Base>:
   12254:	cmp	r0, #0
   12258:	beq	1229c <vetor_pesquisa@@Base+0x48>
   1225c:	ldr	ip, [r0]
   12260:	cmp	ip, #0
   12264:	ble	1229c <vetor_pesquisa@@Base+0x48>
   12268:	ldr	r3, [r0, #8]
   1226c:	ldr	r2, [r3]
   12270:	cmp	r1, r2
   12274:	beq	122a4 <vetor_pesquisa@@Base+0x50>
   12278:	add	r3, r3, #4
   1227c:	mov	r0, #0
   12280:	b	12290 <vetor_pesquisa@@Base+0x3c>
   12284:	ldr	r2, [r3], #4
   12288:	cmp	r2, r1
   1228c:	bxeq	lr
   12290:	add	r0, r0, #1
   12294:	cmp	r0, ip
   12298:	bne	12284 <vetor_pesquisa@@Base+0x30>
   1229c:	mvn	r0, #0
   122a0:	bx	lr
   122a4:	mov	r0, #0
   122a8:	bx	lr

000122ac <vetor_ordena@@Base>:
   122ac:	cmp	r0, #0
   122b0:	beq	1231c <vetor_ordena@@Base+0x70>
   122b4:	ldr	r3, [r0]
   122b8:	cmp	r3, #1
   122bc:	ble	12314 <vetor_ordena@@Base+0x68>
   122c0:	push	{r4, r5, lr}
   122c4:	sub	r3, r3, #-1073741823	; 0xc0000001
   122c8:	ldr	r5, [r0, #8]
   122cc:	mov	lr, #1
   122d0:	mov	ip, r5
   122d4:	add	r4, r5, r3, lsl #2
   122d8:	ldr	r0, [ip, #4]!
   122dc:	mov	r3, lr
   122e0:	mov	r2, ip
   122e4:	ldr	r1, [r2, #-4]
   122e8:	cmp	r0, r1
   122ec:	bge	122fc <vetor_ordena@@Base+0x50>
   122f0:	subs	r3, r3, #1
   122f4:	str	r1, [r2], #-4
   122f8:	bne	122e4 <vetor_ordena@@Base+0x38>
   122fc:	cmp	ip, r4
   12300:	str	r0, [r5, r3, lsl #2]
   12304:	add	lr, lr, #1
   12308:	bne	122d8 <vetor_ordena@@Base+0x2c>
   1230c:	mov	r0, #0
   12310:	pop	{r4, r5, pc}
   12314:	mov	r0, #0
   12318:	bx	lr
   1231c:	mvn	r0, #0
   12320:	bx	lr

00012324 <__libc_csu_init@@Base>:
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12328:	mov	r7, r0
   1232c:	ldr	r6, [pc, #72]	; 1237c <__libc_csu_init@@Base+0x58>
   12330:	ldr	r5, [pc, #72]	; 12380 <__libc_csu_init@@Base+0x5c>
   12334:	add	r6, pc, r6
   12338:	add	r5, pc, r5
   1233c:	sub	r6, r6, r5
   12340:	mov	r8, r1
   12344:	mov	r9, r2
   12348:	bl	10aa0 <calloc@plt-0x20>
   1234c:	asrs	r6, r6, #2
   12350:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12354:	mov	r4, #0
   12358:	add	r4, r4, #1
   1235c:	ldr	r3, [r5], #4
   12360:	mov	r2, r9
   12364:	mov	r1, r8
   12368:	mov	r0, r7
   1236c:	blx	r3
   12370:	cmp	r6, r4
   12374:	bne	12358 <__libc_csu_init@@Base+0x34>
   12378:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1237c:	ldrdeq	r0, [r1], -r4
   12380:	andeq	r0, r1, ip, asr #23

00012384 <__libc_csu_fini@@Base>:
   12384:	bx	lr

Disassembly of section .fini:

00012388 <.fini>:
   12388:	push	{r3, lr}
   1238c:	pop	{r3, pc}
