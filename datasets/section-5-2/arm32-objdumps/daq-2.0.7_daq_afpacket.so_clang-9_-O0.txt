
../repos/daq-2.0.7/os-daq-modules/.libs/daq_afpacket.so:     file format elf32-littlearm


Disassembly of section .init:

0000096c <_init>:
 96c:	push	{r3, lr}
 970:	bl	b30 <call_weak_fn>
 974:	pop	{r3, pc}

Disassembly of section .plt:

00000978 <.plt>:
 978:	push	{lr}		; (str lr, [sp, #-4]!)
 97c:	ldr	lr, [pc, #4]	; 988 <.plt+0x10>
 980:	add	lr, pc, lr
 984:	ldr	pc, [lr, #8]!
 988:	.word	0x00014678

0000098c <calloc@plt>:
 98c:	add	ip, pc, #0, 12
 990:	add	ip, ip, #20, 20	; 0x14000
 994:	ldr	pc, [ip, #1656]!	; 0x678

00000998 <strstr@plt>:
 998:	add	ip, pc, #0, 12
 99c:	add	ip, ip, #20, 20	; 0x14000
 9a0:	ldr	pc, [ip, #1648]!	; 0x670

000009a4 <strcmp@plt>:
 9a4:	add	ip, pc, #0, 12
 9a8:	add	ip, ip, #20, 20	; 0x14000
 9ac:	ldr	pc, [ip, #1640]!	; 0x668

000009b0 <__cxa_finalize@plt>:
 9b0:	add	ip, pc, #0, 12
 9b4:	add	ip, ip, #20, 20	; 0x14000
 9b8:	ldr	pc, [ip, #1632]!	; 0x660

000009bc <setsockopt@plt>:
 9bc:	add	ip, pc, #0, 12
 9c0:	add	ip, ip, #20, 20	; 0x14000
 9c4:	ldr	pc, [ip, #1624]!	; 0x658

000009c8 <strcspn@plt>:
 9c8:	add	ip, pc, #0, 12
 9cc:	add	ip, ip, #20, 20	; 0x14000
 9d0:	ldr	pc, [ip, #1616]!	; 0x650

000009d4 <printf@plt>:
 9d4:	add	ip, pc, #0, 12
 9d8:	add	ip, ip, #20, 20	; 0x14000
 9dc:	ldr	pc, [ip, #1608]!	; 0x648

000009e0 <memmove@plt>:
 9e0:	add	ip, pc, #0, 12
 9e4:	add	ip, ip, #20, 20	; 0x14000
 9e8:	ldr	pc, [ip, #1600]!	; 0x640

000009ec <free@plt>:
 9ec:	add	ip, pc, #0, 12
 9f0:	add	ip, ip, #20, 20	; 0x14000
 9f4:	ldr	pc, [ip, #1592]!	; 0x638

000009f8 <memcpy@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #20, 20	; 0x14000
 a00:	ldr	pc, [ip, #1584]!	; 0x630

00000a04 <strdup@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #20, 20	; 0x14000
 a0c:	ldr	pc, [ip, #1576]!	; 0x628

00000a10 <htons@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #20, 20	; 0x14000
 a18:	ldr	pc, [ip, #1568]!	; 0x620

00000a1c <poll@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #20, 20	; 0x14000
 a24:	ldr	pc, [ip, #1560]!	; 0x618

00000a28 <getsockopt@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #20, 20	; 0x14000
 a30:	ldr	pc, [ip, #1552]!	; 0x610

00000a34 <ioctl@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #20, 20	; 0x14000
 a3c:	ldr	pc, [ip, #1544]!	; 0x608

00000a40 <sfbpf_freecode@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #20, 20	; 0x14000
 a48:	ldr	pc, [ip, #1536]!	; 0x600

00000a4c <getenv@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #20, 20	; 0x14000
 a54:	ldr	pc, [ip, #1528]!	; 0x5f8

00000a58 <sfbpf_compile@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #20, 20	; 0x14000
 a60:	ldr	pc, [ip, #1520]!	; 0x5f0

00000a64 <strerror@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #20, 20	; 0x14000
 a6c:	ldr	pc, [ip, #1512]!	; 0x5e8

00000a70 <__gmon_start__@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #20, 20	; 0x14000
 a78:	ldr	pc, [ip, #1504]!	; 0x5e0

00000a7c <strtoul@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #20, 20	; 0x14000
 a84:	ldr	pc, [ip, #1496]!	; 0x5d8

00000a88 <strlen@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #20, 20	; 0x14000
 a90:	ldr	pc, [ip, #1488]!	; 0x5d0

00000a94 <mmap@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #20, 20	; 0x14000
 a9c:	ldr	pc, [ip, #1480]!	; 0x5c8

00000aa0 <fprintf@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #20, 20	; 0x14000
 aa8:	ldr	pc, [ip, #1472]!	; 0x5c0

00000aac <getpagesize@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #20, 20	; 0x14000
 ab4:	ldr	pc, [ip, #1464]!	; 0x5b8

00000ab8 <__errno_location@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #20, 20	; 0x14000
 ac0:	ldr	pc, [ip, #1456]!	; 0x5b0

00000ac4 <snprintf@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #20, 20	; 0x14000
 acc:	ldr	pc, [ip, #1448]!	; 0x5a8

00000ad0 <bind@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #20, 20	; 0x14000
 ad8:	ldr	pc, [ip, #1440]!	; 0x5a0

00000adc <memset@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #20, 20	; 0x14000
 ae4:	ldr	pc, [ip, #1432]!	; 0x598

00000ae8 <strncpy@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #20, 20	; 0x14000
 af0:	ldr	pc, [ip, #1424]!	; 0x590

00000af4 <munmap@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #20, 20	; 0x14000
 afc:	ldr	pc, [ip, #1416]!	; 0x588

00000b00 <sfbpf_filter@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #20, 20	; 0x14000
 b08:	ldr	pc, [ip, #1408]!	; 0x580

00000b0c <socket@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #20, 20	; 0x14000
 b14:	ldr	pc, [ip, #1400]!	; 0x578

00000b18 <close@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #20, 20	; 0x14000
 b20:	ldr	pc, [ip, #1392]!	; 0x570

00000b24 <send@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #20, 20	; 0x14000
 b2c:	ldr	pc, [ip, #1384]!	; 0x568

Disassembly of section .text:

00000b30 <call_weak_fn>:
     b30:	ldr	r3, [pc, #20]	; b4c <call_weak_fn+0x1c>
     b34:	ldr	r2, [pc, #20]	; b50 <call_weak_fn+0x20>
     b38:	add	r3, pc, r3
     b3c:	ldr	r2, [r3, r2]
     b40:	cmp	r2, #0
     b44:	bxeq	lr
     b48:	b	a70 <__gmon_start__@plt>
     b4c:	.word	0x000144c0
     b50:	.word	0x000000a4

00000b54 <deregister_tm_clones>:
     b54:	ldr	r0, [pc, #44]	; b88 <deregister_tm_clones+0x34>
     b58:	ldr	r3, [pc, #44]	; b8c <deregister_tm_clones+0x38>
     b5c:	add	r0, pc, r0
     b60:	add	r3, pc, r3
     b64:	cmp	r3, r0
     b68:	ldr	r3, [pc, #32]	; b90 <deregister_tm_clones+0x3c>
     b6c:	add	r3, pc, r3
     b70:	bxeq	lr
     b74:	ldr	r2, [pc, #24]	; b94 <deregister_tm_clones+0x40>
     b78:	ldr	r3, [r3, r2]
     b7c:	cmp	r3, #0
     b80:	bxeq	lr
     b84:	bx	r3
     b88:	.word	0x0001454c
     b8c:	.word	0x00014548
     b90:	.word	0x0001448c
     b94:	.word	0x0000009c

00000b98 <register_tm_clones>:
     b98:	ldr	r0, [pc, #56]	; bd8 <register_tm_clones+0x40>
     b9c:	ldr	r3, [pc, #56]	; bdc <register_tm_clones+0x44>
     ba0:	add	r0, pc, r0
     ba4:	add	r3, pc, r3
     ba8:	sub	r1, r3, r0
     bac:	ldr	r3, [pc, #44]	; be0 <register_tm_clones+0x48>
     bb0:	asr	r1, r1, #2
     bb4:	add	r3, pc, r3
     bb8:	add	r1, r1, r1, lsr #31
     bbc:	asrs	r1, r1, #1
     bc0:	bxeq	lr
     bc4:	ldr	r2, [pc, #24]	; be4 <register_tm_clones+0x4c>
     bc8:	ldr	r3, [r3, r2]
     bcc:	cmp	r3, #0
     bd0:	bxeq	lr
     bd4:	bx	r3
     bd8:	.word	0x00014508
     bdc:	.word	0x00014504
     be0:	.word	0x00014444
     be4:	.word	0x000000a8

00000be8 <__do_global_dtors_aux>:
     be8:	ldr	r3, [pc, #76]	; c3c <__do_global_dtors_aux+0x54>
     bec:	ldr	r2, [pc, #76]	; c40 <__do_global_dtors_aux+0x58>
     bf0:	add	r3, pc, r3
     bf4:	add	r2, pc, r2
     bf8:	ldrb	r3, [r3]
     bfc:	cmp	r3, #0
     c00:	bxne	lr
     c04:	ldr	r3, [pc, #56]	; c44 <__do_global_dtors_aux+0x5c>
     c08:	push	{r4, lr}
     c0c:	ldr	r3, [r2, r3]
     c10:	cmp	r3, #0
     c14:	beq	c24 <__do_global_dtors_aux+0x3c>
     c18:	ldr	r3, [pc, #40]	; c48 <__do_global_dtors_aux+0x60>
     c1c:	ldr	r0, [pc, r3]
     c20:	bl	9b0 <__cxa_finalize@plt>
     c24:	bl	b54 <deregister_tm_clones>
     c28:	ldr	r3, [pc, #28]	; c4c <__do_global_dtors_aux+0x64>
     c2c:	mov	r2, #1
     c30:	add	r3, pc, r3
     c34:	strb	r2, [r3]
     c38:	pop	{r4, pc}
     c3c:	.word	0x000144b8
     c40:	.word	0x00014404
     c44:	.word	0x00000098
     c48:	.word	0x00014488
     c4c:	.word	0x00014478

00000c50 <frame_dummy>:
     c50:	b	b98 <register_tm_clones>

00000c54 <afpacket_daq_initialize>:
     c54:	push	{fp, lr}
     c58:	mov	fp, sp
     c5c:	sub	sp, sp, #104	; 0x68
     c60:	str	r0, [fp, #-8]
     c64:	str	r1, [fp, #-12]
     c68:	str	r2, [fp, #-16]
     c6c:	str	r3, [fp, #-20]	; 0xffffffec
     c70:	movw	r0, #0
     c74:	str	r0, [fp, #-32]	; 0xffffffe0
     c78:	str	r0, [sp, #28]
     c7c:	mvn	r0, #0
     c80:	str	r0, [sp, #24]
     c84:	movw	r0, #1
     c88:	movw	r1, #408	; 0x198
     c8c:	bl	98c <calloc@plt>
     c90:	str	r0, [fp, #-24]	; 0xffffffe8
     c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c98:	movw	r1, #0
     c9c:	cmp	r0, r1
     ca0:	bne	ccc <afpacket_daq_initialize+0x78>
     ca4:	ldr	r0, [pc, #1444]	; 1250 <afpacket_daq_initialize+0x5fc>
     ca8:	add	r2, pc, r0
     cac:	ldr	r0, [pc, #1440]	; 1254 <afpacket_daq_initialize+0x600>
     cb0:	add	r3, pc, r0
     cb4:	ldr	r0, [fp, #-16]
     cb8:	ldr	r1, [fp, #-20]	; 0xffffffec
     cbc:	bl	ac4 <snprintf@plt>
     cc0:	mvn	r1, #1
     cc4:	str	r1, [sp, #24]
     cc8:	b	11fc <afpacket_daq_initialize+0x5a8>
     ccc:	ldr	r0, [fp, #-8]
     cd0:	ldr	r0, [r0]
     cd4:	bl	a04 <strdup@plt>
     cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
     cdc:	str	r0, [r1]
     ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ce4:	ldr	r0, [r0]
     ce8:	movw	r1, #0
     cec:	cmp	r0, r1
     cf0:	bne	d1c <afpacket_daq_initialize+0xc8>
     cf4:	ldr	r0, [pc, #1372]	; 1258 <afpacket_daq_initialize+0x604>
     cf8:	add	r2, pc, r0
     cfc:	ldr	r0, [pc, #1368]	; 125c <afpacket_daq_initialize+0x608>
     d00:	add	r3, pc, r0
     d04:	ldr	r0, [fp, #-16]
     d08:	ldr	r1, [fp, #-20]	; 0xffffffec
     d0c:	bl	ac4 <snprintf@plt>
     d10:	mvn	r1, #1
     d14:	str	r1, [sp, #24]
     d18:	b	11fc <afpacket_daq_initialize+0x5a8>
     d1c:	ldr	r0, [fp, #-8]
     d20:	ldr	r0, [r0, #4]
     d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d28:	str	r0, [r1, #8]
     d2c:	ldr	r0, [fp, #-8]
     d30:	ldr	r0, [r0, #8]
     d34:	cmp	r0, #0
     d38:	bls	d4c <afpacket_daq_initialize+0xf8>
     d3c:	ldr	r0, [fp, #-8]
     d40:	ldr	r0, [r0, #8]
     d44:	str	r0, [sp, #16]
     d48:	b	d58 <afpacket_daq_initialize+0x104>
     d4c:	mvn	r0, #0
     d50:	str	r0, [sp, #16]
     d54:	b	d58 <afpacket_daq_initialize+0x104>
     d58:	ldr	r0, [sp, #16]
     d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d60:	str	r0, [r1, #12]
     d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d68:	ldr	r0, [r0]
     d6c:	str	r0, [fp, #-44]	; 0xffffffd4
     d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d74:	ldrb	r0, [r0]
     d78:	cmp	r0, #58	; 0x3a
     d7c:	beq	de0 <afpacket_daq_initialize+0x18c>
     d80:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d84:	bl	a88 <strlen@plt>
     d88:	str	r0, [sp, #36]	; 0x24
     d8c:	cmp	r0, #0
     d90:	bls	db4 <afpacket_daq_initialize+0x160>
     d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
     d98:	ldr	r1, [sp, #36]	; 0x24
     d9c:	add	r0, r0, r1
     da0:	mvn	r1, #0
     da4:	add	r0, r0, r1
     da8:	ldrb	r0, [r0]
     dac:	cmp	r0, #58	; 0x3a
     db0:	beq	de0 <afpacket_daq_initialize+0x18c>
     db4:	ldr	r0, [fp, #-8]
     db8:	ldr	r0, [r0, #12]
     dbc:	cmp	r0, #0
     dc0:	bne	e0c <afpacket_daq_initialize+0x1b8>
     dc4:	ldr	r0, [pc, #1172]	; 1260 <afpacket_daq_initialize+0x60c>
     dc8:	add	r1, pc, r0
     dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     dd0:	bl	998 <strstr@plt>
     dd4:	movw	r1, #0
     dd8:	cmp	r0, r1
     ddc:	beq	e0c <afpacket_daq_initialize+0x1b8>
     de0:	ldr	r0, [pc, #1192]	; 1290 <afpacket_daq_initialize+0x63c>
     de4:	add	r2, pc, r0
     de8:	ldr	r0, [pc, #1188]	; 1294 <afpacket_daq_initialize+0x640>
     dec:	add	r3, pc, r0
     df0:	ldr	r0, [fp, #-16]
     df4:	ldr	r1, [fp, #-20]	; 0xffffffec
     df8:	ldr	ip, [fp, #-24]	; 0xffffffe8
     dfc:	ldr	ip, [ip]
     e00:	str	ip, [sp]
     e04:	bl	ac4 <snprintf@plt>
     e08:	b	11fc <afpacket_daq_initialize+0x5a8>
     e0c:	b	e10 <afpacket_daq_initialize+0x1bc>
     e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
     e14:	ldrb	r0, [r0]
     e18:	cmp	r0, #0
     e1c:	beq	1004 <afpacket_daq_initialize+0x3b0>
     e20:	ldr	r0, [pc, #1084]	; 1264 <afpacket_daq_initialize+0x610>
     e24:	add	r1, pc, r0
     e28:	ldr	r0, [fp, #-44]	; 0xffffffd4
     e2c:	bl	9c8 <strcspn@plt>
     e30:	str	r0, [sp, #36]	; 0x24
     e34:	ldr	r0, [sp, #36]	; 0x24
     e38:	cmp	r0, #16
     e3c:	bcc	e68 <afpacket_daq_initialize+0x214>
     e40:	ldr	r0, [pc, #1088]	; 1288 <afpacket_daq_initialize+0x634>
     e44:	add	r2, pc, r0
     e48:	ldr	r0, [pc, #1084]	; 128c <afpacket_daq_initialize+0x638>
     e4c:	add	r3, pc, r0
     e50:	ldr	r0, [fp, #-16]
     e54:	ldr	r1, [fp, #-20]	; 0xffffffec
     e58:	ldr	ip, [sp, #36]	; 0x24
     e5c:	str	ip, [sp]
     e60:	bl	ac4 <snprintf@plt>
     e64:	b	11fc <afpacket_daq_initialize+0x5a8>
     e68:	ldr	r0, [sp, #36]	; 0x24
     e6c:	cmp	r0, #0
     e70:	beq	fe8 <afpacket_daq_initialize+0x394>
     e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e78:	ldr	r1, [r0, #28]
     e7c:	add	r1, r1, #1
     e80:	str	r1, [r0, #28]
     e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
     e88:	ldr	r0, [r0, #28]
     e8c:	cmp	r0, #32
     e90:	bcc	ebc <afpacket_daq_initialize+0x268>
     e94:	ldr	r0, [pc, #996]	; 1280 <afpacket_daq_initialize+0x62c>
     e98:	add	r2, pc, r0
     e9c:	ldr	r0, [pc, #992]	; 1284 <afpacket_daq_initialize+0x630>
     ea0:	add	r3, pc, r0
     ea4:	ldr	r0, [fp, #-16]
     ea8:	ldr	r1, [fp, #-20]	; 0xffffffec
     eac:	movw	ip, #32
     eb0:	str	ip, [sp]
     eb4:	bl	ac4 <snprintf@plt>
     eb8:	b	11fc <afpacket_daq_initialize+0x5a8>
     ebc:	ldr	r0, [pc, #932]	; 1268 <afpacket_daq_initialize+0x614>
     ec0:	add	r2, pc, r0
     ec4:	add	r0, sp, #44	; 0x2c
     ec8:	ldr	r1, [sp, #36]	; 0x24
     ecc:	add	r1, r1, #1
     ed0:	ldr	r3, [fp, #-44]	; 0xffffffd4
     ed4:	bl	ac4 <snprintf@plt>
     ed8:	add	r1, sp, #44	; 0x2c
     edc:	ldr	r2, [fp, #-16]
     ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
     ee4:	str	r0, [sp, #12]
     ee8:	mov	r0, r1
     eec:	mov	r1, r2
     ef0:	mov	r2, r3
     ef4:	bl	2140 <create_instance>
     ef8:	str	r0, [fp, #-28]	; 0xffffffe4
     efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f00:	movw	r1, #0
     f04:	cmp	r0, r1
     f08:	bne	f10 <afpacket_daq_initialize+0x2bc>
     f0c:	b	11fc <afpacket_daq_initialize+0x5a8>
     f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f14:	ldr	r0, [r0, #24]
     f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
     f1c:	str	r0, [r1]
     f20:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
     f28:	str	r0, [r1, #24]
     f2c:	ldr	r0, [sp, #28]
     f30:	add	r0, r0, #1
     f34:	str	r0, [sp, #28]
     f38:	ldr	r0, [fp, #-8]
     f3c:	ldr	r0, [r0, #12]
     f40:	cmp	r0, #0
     f44:	beq	fe4 <afpacket_daq_initialize+0x390>
     f48:	ldr	r0, [sp, #28]
     f4c:	cmp	r0, #2
     f50:	bne	fcc <afpacket_daq_initialize+0x378>
     f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f58:	ldr	r0, [r0, #24]
     f5c:	ldr	r0, [r0]
     f60:	ldr	r0, [r0, #84]	; 0x54
     f64:	str	r0, [fp, #-36]	; 0xffffffdc
     f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f6c:	ldr	r0, [r0, #24]
     f70:	ldr	r0, [r0, #84]	; 0x54
     f74:	str	r0, [fp, #-40]	; 0xffffffd8
     f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f80:	ldr	r2, [fp, #-40]	; 0xffffffd8
     f84:	bl	236c <create_bridge>
     f88:	cmp	r0, #0
     f8c:	beq	fc0 <afpacket_daq_initialize+0x36c>
     f90:	ldr	r0, [pc, #736]	; 1278 <afpacket_daq_initialize+0x624>
     f94:	add	r2, pc, r0
     f98:	ldr	r0, [pc, #732]	; 127c <afpacket_daq_initialize+0x628>
     f9c:	add	r3, pc, r0
     fa0:	ldr	r0, [fp, #-16]
     fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
     fa8:	ldr	ip, [fp, #-36]	; 0xffffffdc
     fac:	ldr	lr, [fp, #-40]	; 0xffffffd8
     fb0:	str	ip, [sp]
     fb4:	str	lr, [sp, #4]
     fb8:	bl	ac4 <snprintf@plt>
     fbc:	b	11fc <afpacket_daq_initialize+0x5a8>
     fc0:	movw	r0, #0
     fc4:	str	r0, [sp, #28]
     fc8:	b	fe0 <afpacket_daq_initialize+0x38c>
     fcc:	ldr	r0, [sp, #28]
     fd0:	cmp	r0, #2
     fd4:	ble	fdc <afpacket_daq_initialize+0x388>
     fd8:	b	1004 <afpacket_daq_initialize+0x3b0>
     fdc:	b	fe0 <afpacket_daq_initialize+0x38c>
     fe0:	b	fe4 <afpacket_daq_initialize+0x390>
     fe4:	b	ff0 <afpacket_daq_initialize+0x39c>
     fe8:	movw	r0, #1
     fec:	str	r0, [sp, #36]	; 0x24
     ff0:	ldr	r0, [sp, #36]	; 0x24
     ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
     ff8:	add	r0, r1, r0
     ffc:	str	r0, [fp, #-44]	; 0xffffffd4
    1000:	b	e10 <afpacket_daq_initialize+0x1bc>
    1004:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1008:	ldr	r0, [r0, #24]
    100c:	movw	r1, #0
    1010:	cmp	r0, r1
    1014:	beq	1034 <afpacket_daq_initialize+0x3e0>
    1018:	ldr	r0, [fp, #-8]
    101c:	ldr	r0, [r0, #12]
    1020:	cmp	r0, #0
    1024:	beq	1060 <afpacket_daq_initialize+0x40c>
    1028:	ldr	r0, [sp, #28]
    102c:	cmp	r0, #0
    1030:	beq	1060 <afpacket_daq_initialize+0x40c>
    1034:	ldr	r0, [pc, #564]	; 1270 <afpacket_daq_initialize+0x61c>
    1038:	add	r2, pc, r0
    103c:	ldr	r0, [pc, #560]	; 1274 <afpacket_daq_initialize+0x620>
    1040:	add	r3, pc, r0
    1044:	ldr	r0, [fp, #-16]
    1048:	ldr	r1, [fp, #-20]	; 0xffffffec
    104c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    1050:	ldr	ip, [ip]
    1054:	str	ip, [sp]
    1058:	bl	ac4 <snprintf@plt>
    105c:	b	11fc <afpacket_daq_initialize+0x5a8>
    1060:	ldr	r0, [fp, #-8]
    1064:	ldr	r0, [r0, #20]
    1068:	str	r0, [sp, #20]
    106c:	ldr	r0, [sp, #20]
    1070:	movw	r1, #0
    1074:	cmp	r0, r1
    1078:	beq	10e8 <afpacket_daq_initialize+0x494>
    107c:	ldr	r0, [sp, #20]
    1080:	ldr	r0, [r0]
    1084:	ldr	r1, [pc, #524]	; 1298 <afpacket_daq_initialize+0x644>
    1088:	add	r1, pc, r1
    108c:	bl	9a4 <strcmp@plt>
    1090:	cmp	r0, #0
    1094:	bne	10a8 <afpacket_daq_initialize+0x454>
    1098:	ldr	r0, [sp, #20]
    109c:	ldr	r0, [r0, #4]
    10a0:	str	r0, [fp, #-32]	; 0xffffffe0
    10a4:	b	10d4 <afpacket_daq_initialize+0x480>
    10a8:	ldr	r0, [sp, #20]
    10ac:	ldr	r0, [r0]
    10b0:	ldr	r1, [pc, #484]	; 129c <afpacket_daq_initialize+0x648>
    10b4:	add	r1, pc, r1
    10b8:	bl	9a4 <strcmp@plt>
    10bc:	cmp	r0, #0
    10c0:	bne	10d0 <afpacket_daq_initialize+0x47c>
    10c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    10c8:	movw	r1, #1
    10cc:	str	r1, [r0, #20]
    10d0:	b	10d4 <afpacket_daq_initialize+0x480>
    10d4:	b	10d8 <afpacket_daq_initialize+0x484>
    10d8:	ldr	r0, [sp, #20]
    10dc:	ldr	r0, [r0, #8]
    10e0:	str	r0, [sp, #20]
    10e4:	b	106c <afpacket_daq_initialize+0x418>
    10e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    10ec:	movw	r1, #0
    10f0:	cmp	r0, r1
    10f4:	bne	1108 <afpacket_daq_initialize+0x4b4>
    10f8:	ldr	r0, [pc, #364]	; 126c <afpacket_daq_initialize+0x618>
    10fc:	add	r0, pc, r0
    1100:	bl	a4c <getenv@plt>
    1104:	str	r0, [fp, #-32]	; 0xffffffe0
    1108:	ldr	r0, [fp, #-32]	; 0xffffffe0
    110c:	movw	r1, #0
    1110:	cmp	r0, r1
    1114:	beq	1148 <afpacket_daq_initialize+0x4f4>
    1118:	ldr	r1, [fp, #-32]	; 0xffffffe0
    111c:	ldr	r0, [pc, #380]	; 12a0 <afpacket_daq_initialize+0x64c>
    1120:	add	r0, pc, r0
    1124:	bl	9a4 <strcmp@plt>
    1128:	cmp	r0, #0
    112c:	beq	1148 <afpacket_daq_initialize+0x4f4>
    1130:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1134:	movw	r1, #0
    1138:	movw	r2, #10
    113c:	bl	a7c <strtoul@plt>
    1140:	str	r0, [sp, #40]	; 0x28
    1144:	b	1150 <afpacket_daq_initialize+0x4fc>
    1148:	movw	r0, #128	; 0x80
    114c:	str	r0, [sp, #40]	; 0x28
    1150:	ldr	r0, [sp, #40]	; 0x28
    1154:	lsl	r1, r0, #10
    1158:	lsl	r0, r0, #20
    115c:	str	r0, [sp, #40]	; 0x28
    1160:	movw	r0, #0
    1164:	str	r0, [sp, #32]
    1168:	ldr	r0, [fp, #-24]	; 0xffffffe8
    116c:	ldr	r0, [r0, #24]
    1170:	str	r0, [fp, #-28]	; 0xffffffe4
    1174:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1178:	movw	r1, #0
    117c:	cmp	r0, r1
    1180:	beq	11c4 <afpacket_daq_initialize+0x570>
    1184:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1188:	ldr	r0, [r0, #92]	; 0x5c
    118c:	movw	r1, #0
    1190:	cmp	r0, r1
    1194:	movw	r0, #0
    1198:	movne	r0, #1
    119c:	tst	r0, #1
    11a0:	movw	r0, #2
    11a4:	moveq	r0, #1
    11a8:	ldr	r1, [sp, #32]
    11ac:	add	r0, r1, r0
    11b0:	str	r0, [sp, #32]
    11b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11b8:	ldr	r0, [r0]
    11bc:	str	r0, [fp, #-28]	; 0xffffffe4
    11c0:	b	1174 <afpacket_daq_initialize+0x520>
    11c4:	ldr	r0, [sp, #40]	; 0x28
    11c8:	ldr	r1, [sp, #32]
    11cc:	udiv	r0, r0, r1
    11d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11d4:	str	r0, [r1, #16]
    11d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11dc:	movw	r1, #1
    11e0:	str	r1, [r0, #144]	; 0x90
    11e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11e8:	ldr	r1, [fp, #-12]
    11ec:	str	r0, [r1]
    11f0:	movw	r0, #0
    11f4:	str	r0, [fp, #-4]
    11f8:	b	1244 <afpacket_daq_initialize+0x5f0>
    11fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1200:	movw	r1, #0
    1204:	cmp	r0, r1
    1208:	beq	123c <afpacket_daq_initialize+0x5e8>
    120c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1210:	bl	2460 <af_packet_close>
    1214:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1218:	ldr	r1, [r1]
    121c:	movw	r2, #0
    1220:	cmp	r1, r2
    1224:	beq	1234 <afpacket_daq_initialize+0x5e0>
    1228:	ldr	r0, [fp, #-24]	; 0xffffffe8
    122c:	ldr	r0, [r0]
    1230:	bl	9ec <free@plt>
    1234:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1238:	bl	9ec <free@plt>
    123c:	ldr	r0, [sp, #24]
    1240:	str	r0, [fp, #-4]
    1244:	ldr	r0, [fp, #-4]
    1248:	mov	sp, fp
    124c:	pop	{fp, pc}
    1250:	.word	0x00002aa1
    1254:	.word	0x00002ad4
    1258:	.word	0x00002aa4
    125c:	.word	0x00002a84
    1260:	.word	0x00002a08
    1264:	.word	0x000029ad
    1268:	.word	0x00002bac
    126c:	.word	0x000027a0
    1270:	.word	0x0000279b
    1274:	.word	0x00002744
    1278:	.word	0x000028c1
    127c:	.word	0x000027e8
    1280:	.word	0x00002989
    1284:	.word	0x000028e4
    1288:	.word	0x000029ba
    128c:	.word	0x00002938
    1290:	.word	0x000029ef
    1294:	.word	0x00002998
    1298:	.word	0x000027ff
    129c:	.word	0x000027e2
    12a0:	.word	0x00002792

000012a4 <afpacket_daq_set_filter>:
    12a4:	push	{fp, lr}
    12a8:	mov	fp, sp
    12ac:	sub	sp, sp, #40	; 0x28
    12b0:	str	r0, [fp, #-8]
    12b4:	str	r1, [fp, #-12]
    12b8:	ldr	r0, [fp, #-8]
    12bc:	str	r0, [fp, #-16]
    12c0:	ldr	r0, [fp, #-16]
    12c4:	ldr	r0, [r0, #4]
    12c8:	movw	r1, #0
    12cc:	cmp	r0, r1
    12d0:	beq	12e0 <afpacket_daq_set_filter+0x3c>
    12d4:	ldr	r0, [fp, #-16]
    12d8:	ldr	r0, [r0, #4]
    12dc:	bl	9ec <free@plt>
    12e0:	ldr	r0, [fp, #-12]
    12e4:	bl	a04 <strdup@plt>
    12e8:	ldr	r1, [fp, #-16]
    12ec:	str	r0, [r1, #4]
    12f0:	ldr	r0, [fp, #-16]
    12f4:	ldr	r0, [r0, #4]
    12f8:	movw	r1, #0
    12fc:	cmp	r0, r1
    1300:	bne	1330 <afpacket_daq_set_filter+0x8c>
    1304:	ldr	r0, [pc, #192]	; 13cc <afpacket_daq_set_filter+0x128>
    1308:	add	r2, pc, r0
    130c:	ldr	r0, [pc, #188]	; 13d0 <afpacket_daq_set_filter+0x12c>
    1310:	add	r3, pc, r0
    1314:	ldr	r0, [fp, #-16]
    1318:	add	r0, r0, #148	; 0x94
    131c:	movw	r1, #256	; 0x100
    1320:	bl	ac4 <snprintf@plt>
    1324:	mvn	r1, #0
    1328:	str	r1, [fp, #-4]
    132c:	b	13c0 <afpacket_daq_set_filter+0x11c>
    1330:	ldr	r0, [fp, #-16]
    1334:	ldr	r0, [r0, #8]
    1338:	ldr	r1, [fp, #-16]
    133c:	ldr	r3, [r1, #4]
    1340:	movw	r1, #1
    1344:	str	r1, [sp, #12]
    1348:	add	r2, sp, #16
    134c:	ldr	ip, [sp, #12]
    1350:	str	ip, [sp]
    1354:	movw	lr, #0
    1358:	str	lr, [sp, #4]
    135c:	bl	a58 <sfbpf_compile@plt>
    1360:	cmp	r0, #0
    1364:	bge	1394 <afpacket_daq_set_filter+0xf0>
    1368:	ldr	r0, [pc, #100]	; 13d4 <afpacket_daq_set_filter+0x130>
    136c:	add	r2, pc, r0
    1370:	ldr	r0, [pc, #96]	; 13d8 <afpacket_daq_set_filter+0x134>
    1374:	add	r3, pc, r0
    1378:	ldr	r0, [fp, #-16]
    137c:	add	r0, r0, #148	; 0x94
    1380:	movw	r1, #256	; 0x100
    1384:	bl	ac4 <snprintf@plt>
    1388:	mvn	r1, #0
    138c:	str	r1, [fp, #-4]
    1390:	b	13c0 <afpacket_daq_set_filter+0x11c>
    1394:	ldr	r0, [fp, #-16]
    1398:	add	r0, r0, #32
    139c:	bl	a40 <sfbpf_freecode@plt>
    13a0:	ldr	r0, [sp, #16]
    13a4:	ldr	r1, [fp, #-16]
    13a8:	str	r0, [r1, #32]
    13ac:	ldr	r0, [sp, #20]
    13b0:	ldr	r1, [fp, #-16]
    13b4:	str	r0, [r1, #36]	; 0x24
    13b8:	movw	r0, #0
    13bc:	str	r0, [fp, #-4]
    13c0:	ldr	r0, [fp, #-4]
    13c4:	mov	sp, fp
    13c8:	pop	{fp, pc}
    13cc:	.word	0x00002697
    13d0:	.word	0x000026c3
    13d4:	.word	0x0000267f
    13d8:	.word	0x0000265f

000013dc <afpacket_daq_start>:
    13dc:	push	{fp, lr}
    13e0:	mov	fp, sp
    13e4:	sub	sp, sp, #16
    13e8:	str	r0, [sp, #8]
    13ec:	ldr	r0, [sp, #8]
    13f0:	str	r0, [sp, #4]
    13f4:	ldr	r0, [sp, #4]
    13f8:	ldr	r0, [r0, #24]
    13fc:	str	r0, [sp]
    1400:	ldr	r0, [sp]
    1404:	movw	r1, #0
    1408:	cmp	r0, r1
    140c:	beq	1444 <afpacket_daq_start+0x68>
    1410:	ldr	r0, [sp, #4]
    1414:	ldr	r1, [sp]
    1418:	bl	2800 <start_instance>
    141c:	cmp	r0, #0
    1420:	beq	1430 <afpacket_daq_start+0x54>
    1424:	mvn	r0, #0
    1428:	str	r0, [fp, #-4]
    142c:	b	1460 <afpacket_daq_start+0x84>
    1430:	b	1434 <afpacket_daq_start+0x58>
    1434:	ldr	r0, [sp]
    1438:	ldr	r0, [r0]
    143c:	str	r0, [sp]
    1440:	b	1400 <afpacket_daq_start+0x24>
    1444:	ldr	r0, [sp, #4]
    1448:	bl	2b1c <reset_stats>
    144c:	ldr	r0, [sp, #4]
    1450:	movw	r1, #2
    1454:	str	r1, [r0, #144]	; 0x90
    1458:	movw	r0, #0
    145c:	str	r0, [fp, #-4]
    1460:	ldr	r0, [fp, #-4]
    1464:	mov	sp, fp
    1468:	pop	{fp, pc}

0000146c <afpacket_daq_acquire>:
    146c:	push	{r4, sl, fp, lr}
    1470:	add	fp, sp, #8
    1474:	sub	sp, sp, #448	; 0x1c0
    1478:	ldr	ip, [fp, #8]
    147c:	str	r0, [fp, #-16]
    1480:	str	r1, [fp, #-20]	; 0xffffffec
    1484:	str	r2, [fp, #-24]	; 0xffffffe8
    1488:	str	r3, [fp, #-28]	; 0xffffffe4
    148c:	ldr	r0, [fp, #-16]
    1490:	str	r0, [fp, #-32]	; 0xffffffe0
    1494:	movw	r0, #0
    1498:	str	r0, [sp, #80]	; 0x50
    149c:	ldr	r0, [sp, #80]	; 0x50
    14a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    14a4:	cmp	r0, r1
    14a8:	movw	r0, #1
    14ac:	str	r0, [sp, #44]	; 0x2c
    14b0:	blt	14c8 <afpacket_daq_acquire+0x5c>
    14b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    14b8:	cmp	r0, #0
    14bc:	movw	r0, #0
    14c0:	movle	r0, #1
    14c4:	str	r0, [sp, #44]	; 0x2c
    14c8:	ldr	r0, [sp, #44]	; 0x2c
    14cc:	tst	r0, #1
    14d0:	beq	1c60 <afpacket_daq_acquire+0x7f4>
    14d4:	movw	r0, #0
    14d8:	str	r0, [sp, #92]	; 0x5c
    14dc:	str	r0, [sp, #88]	; 0x58
    14e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14e4:	ldr	r0, [r0, #24]
    14e8:	str	r0, [fp, #-36]	; 0xffffffdc
    14ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    14f0:	movw	r1, #0
    14f4:	cmp	r0, r1
    14f8:	beq	19ec <afpacket_daq_acquire+0x580>
    14fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1500:	ldr	r0, [r0, #40]	; 0x28
    1504:	cmp	r0, #0
    1508:	beq	1520 <afpacket_daq_acquire+0xb4>
    150c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1510:	movw	r1, #0
    1514:	str	r1, [r0, #40]	; 0x28
    1518:	str	r1, [fp, #-12]
    151c:	b	1c68 <afpacket_daq_acquire+0x7fc>
    1520:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1524:	ldr	r0, [r0, #48]	; 0x30
    1528:	ldr	r0, [r0, #4]
    152c:	str	r0, [fp, #-96]	; 0xffffffa0
    1530:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1534:	ldr	r0, [r0, #8]
    1538:	cmp	r0, #1
    153c:	bne	19d8 <afpacket_daq_acquire+0x56c>
    1540:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1544:	ldr	r0, [r0]
    1548:	and	r0, r0, #1
    154c:	cmp	r0, #0
    1550:	beq	19d8 <afpacket_daq_acquire+0x56c>
    1554:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1558:	ldr	r0, [r0, #8]
    155c:	cmp	r0, #1
    1560:	bne	15b0 <afpacket_daq_acquire+0x144>
    1564:	b	1568 <afpacket_daq_acquire+0xfc>
    1568:	ldr	r0, [fp, #-96]	; 0xffffffa0
    156c:	ldr	r0, [r0, #4]
    1570:	str	r0, [sp, #76]	; 0x4c
    1574:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1578:	ldrh	r0, [r0, #12]
    157c:	str	r0, [sp, #72]	; 0x48
    1580:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1584:	ldr	r0, [r0, #8]
    1588:	str	r0, [sp, #68]	; 0x44
    158c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1590:	ldr	r0, [r0, #16]
    1594:	str	r0, [sp, #64]	; 0x40
    1598:	ldr	r0, [fp, #-96]	; 0xffffffa0
    159c:	ldr	r0, [r0, #20]
    15a0:	movw	r1, #1000	; 0x3e8
    15a4:	udiv	r0, r0, r1
    15a8:	str	r0, [sp, #60]	; 0x3c
    15ac:	b	15f4 <afpacket_daq_acquire+0x188>
    15b0:	ldr	r0, [pc, #1768]	; 1ca0 <afpacket_daq_acquire+0x834>
    15b4:	add	r2, pc, r0
    15b8:	ldr	r0, [pc, #1764]	; 1ca4 <afpacket_daq_acquire+0x838>
    15bc:	add	r3, pc, r0
    15c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    15c4:	add	r0, r0, #148	; 0x94
    15c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    15cc:	ldr	r1, [r1, #8]
    15d0:	movw	ip, #256	; 0x100
    15d4:	str	r1, [sp, #40]	; 0x28
    15d8:	mov	r1, ip
    15dc:	ldr	ip, [sp, #40]	; 0x28
    15e0:	str	ip, [sp]
    15e4:	bl	ac4 <snprintf@plt>
    15e8:	mvn	r1, #0
    15ec:	str	r1, [fp, #-12]
    15f0:	b	1c68 <afpacket_daq_acquire+0x7fc>
    15f4:	ldr	r0, [sp, #72]	; 0x48
    15f8:	ldr	r1, [sp, #68]	; 0x44
    15fc:	add	r0, r0, r1
    1600:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1604:	ldr	r1, [r1, #28]
    1608:	cmp	r0, r1
    160c:	bls	1664 <afpacket_daq_acquire+0x1f8>
    1610:	ldr	r0, [pc, #1664]	; 1c98 <afpacket_daq_acquire+0x82c>
    1614:	add	r2, pc, r0
    1618:	ldr	r0, [pc, #1660]	; 1c9c <afpacket_daq_acquire+0x830>
    161c:	add	r3, pc, r0
    1620:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1624:	add	r0, r0, #148	; 0x94
    1628:	ldr	r1, [sp, #72]	; 0x48
    162c:	ldr	ip, [sp, #68]	; 0x44
    1630:	ldr	lr, [fp, #-36]	; 0xffffffdc
    1634:	ldr	lr, [lr, #28]
    1638:	movw	r4, #256	; 0x100
    163c:	str	r1, [sp, #36]	; 0x24
    1640:	mov	r1, r4
    1644:	ldr	r4, [sp, #36]	; 0x24
    1648:	str	r4, [sp]
    164c:	str	ip, [sp, #4]
    1650:	str	lr, [sp, #8]
    1654:	bl	ac4 <snprintf@plt>
    1658:	mvn	r1, #0
    165c:	str	r1, [fp, #-12]
    1660:	b	1c68 <afpacket_daq_acquire+0x7fc>
    1664:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1668:	ldr	r0, [r0, #48]	; 0x30
    166c:	ldr	r0, [r0, #4]
    1670:	ldr	r1, [sp, #72]	; 0x48
    1674:	add	r0, r0, r1
    1678:	str	r0, [sp, #100]	; 0x64
    167c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1680:	ldr	r0, [r0, #8]
    1684:	cmp	r0, #1
    1688:	bne	172c <afpacket_daq_acquire+0x2c0>
    168c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1690:	ldrh	r0, [r0, #24]
    1694:	cmp	r0, #0
    1698:	bne	16b0 <afpacket_daq_acquire+0x244>
    169c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    16a0:	ldr	r0, [r0]
    16a4:	and	r0, r0, #16
    16a8:	cmp	r0, #0
    16ac:	beq	172c <afpacket_daq_acquire+0x2c0>
    16b0:	ldr	r0, [sp, #68]	; 0x44
    16b4:	cmp	r0, #12
    16b8:	bcc	172c <afpacket_daq_acquire+0x2c0>
    16bc:	ldr	r0, [sp, #100]	; 0x64
    16c0:	mvn	r1, #3
    16c4:	add	r0, r0, r1
    16c8:	str	r0, [sp, #100]	; 0x64
    16cc:	ldr	r0, [sp, #100]	; 0x64
    16d0:	ldr	r1, [sp, #100]	; 0x64
    16d4:	add	r1, r1, #4
    16d8:	movw	r2, #12
    16dc:	bl	9e0 <memmove@plt>
    16e0:	ldr	r0, [sp, #100]	; 0x64
    16e4:	add	r0, r0, #12
    16e8:	str	r0, [sp, #56]	; 0x38
    16ec:	movw	r0, #33024	; 0x8100
    16f0:	uxth	r0, r0
    16f4:	bl	a10 <htons@plt>
    16f8:	ldr	r1, [sp, #56]	; 0x38
    16fc:	strh	r0, [r1]
    1700:	ldr	r0, [fp, #-96]	; 0xffffffa0
    1704:	ldrh	r0, [r0, #24]
    1708:	bl	a10 <htons@plt>
    170c:	ldr	r1, [sp, #56]	; 0x38
    1710:	strh	r0, [r1, #2]
    1714:	ldr	r0, [sp, #68]	; 0x44
    1718:	add	r0, r0, #4
    171c:	str	r0, [sp, #68]	; 0x44
    1720:	ldr	r0, [sp, #76]	; 0x4c
    1724:	add	r0, r0, #4
    1728:	str	r0, [sp, #76]	; 0x4c
    172c:	movw	r0, #0
    1730:	str	r0, [fp, #-92]	; 0xffffffa4
    1734:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1738:	ldr	r1, [r1, #36]	; 0x24
    173c:	cmp	r1, r0
    1740:	beq	178c <afpacket_daq_acquire+0x320>
    1744:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1748:	ldr	r0, [r0, #36]	; 0x24
    174c:	ldr	r1, [sp, #100]	; 0x64
    1750:	ldr	r2, [sp, #76]	; 0x4c
    1754:	ldr	r3, [sp, #68]	; 0x44
    1758:	bl	b00 <sfbpf_filter@plt>
    175c:	cmp	r0, #0
    1760:	bne	178c <afpacket_daq_acquire+0x320>
    1764:	mov	r0, #1
    1768:	str	r0, [sp, #88]	; 0x58
    176c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1770:	ldr	r1, [r0, #72]	; 0x48
    1774:	ldr	r2, [r0, #76]	; 0x4c
    1778:	adds	r1, r1, #1
    177c:	adc	r2, r2, #0
    1780:	str	r1, [r0, #72]	; 0x48
    1784:	str	r2, [r0, #76]	; 0x4c
    1788:	b	18d0 <afpacket_daq_acquire+0x464>
    178c:	movw	r0, #1
    1790:	str	r0, [sp, #92]	; 0x5c
    1794:	ldr	r0, [sp, #64]	; 0x40
    1798:	str	r0, [fp, #-88]	; 0xffffffa8
    179c:	ldr	r0, [sp, #60]	; 0x3c
    17a0:	str	r0, [fp, #-84]	; 0xffffffac
    17a4:	ldr	r0, [sp, #68]	; 0x44
    17a8:	str	r0, [fp, #-80]	; 0xffffffb0
    17ac:	ldr	r0, [sp, #76]	; 0x4c
    17b0:	str	r0, [fp, #-76]	; 0xffffffb4
    17b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    17b8:	ldr	r0, [r0, #88]	; 0x58
    17bc:	str	r0, [fp, #-72]	; 0xffffffb8
    17c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    17c4:	ldr	r0, [r0, #92]	; 0x5c
    17c8:	movw	r1, #0
    17cc:	cmp	r0, r1
    17d0:	beq	17e8 <afpacket_daq_acquire+0x37c>
    17d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    17d8:	ldr	r0, [r0, #92]	; 0x5c
    17dc:	ldr	r0, [r0, #88]	; 0x58
    17e0:	str	r0, [sp, #32]
    17e4:	b	17f4 <afpacket_daq_acquire+0x388>
    17e8:	mvn	r0, #0
    17ec:	str	r0, [sp, #32]
    17f0:	b	17f4 <afpacket_daq_acquire+0x388>
    17f4:	ldr	r0, [sp, #32]
    17f8:	str	r0, [fp, #-68]	; 0xffffffbc
    17fc:	mvn	r0, #0
    1800:	str	r0, [fp, #-64]	; 0xffffffc0
    1804:	str	r0, [fp, #-60]	; 0xffffffc4
    1808:	movw	r0, #0
    180c:	str	r0, [fp, #-56]	; 0xffffffc8
    1810:	str	r0, [fp, #-52]	; 0xffffffcc
    1814:	str	r0, [fp, #-48]	; 0xffffffd0
    1818:	movw	r1, #0
    181c:	strh	r1, [fp, #-40]	; 0xffffffd8
    1820:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1824:	cmp	r1, r0
    1828:	beq	18a8 <afpacket_daq_acquire+0x43c>
    182c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1830:	ldr	r1, [fp, #8]
    1834:	ldr	r2, [sp, #100]	; 0x64
    1838:	str	r0, [sp, #28]
    183c:	mov	r0, r1
    1840:	sub	r1, fp, #88	; 0x58
    1844:	ldr	r3, [sp, #28]
    1848:	blx	r3
    184c:	str	r0, [fp, #-92]	; 0xffffffa4
    1850:	ldr	r0, [fp, #-92]	; 0xffffffa4
    1854:	cmp	r0, #7
    1858:	bcc	1864 <afpacket_daq_acquire+0x3f8>
    185c:	movw	r0, #0
    1860:	str	r0, [fp, #-92]	; 0xffffffa4
    1864:	ldr	r0, [pc, #1064]	; 1c94 <afpacket_daq_acquire+0x828>
    1868:	add	r0, pc, r0
    186c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1870:	ldr	r2, [fp, #-92]	; 0xffffffa4
    1874:	add	r1, r1, r2, lsl #3
    1878:	ldr	r2, [r1, #88]	; 0x58
    187c:	ldr	r3, [r1, #92]	; 0x5c
    1880:	adds	r2, r2, #1
    1884:	adc	r3, r3, #0
    1888:	str	r2, [r1, #88]	; 0x58
    188c:	str	r3, [r1, #92]	; 0x5c
    1890:	ldr	r1, [fp, #-92]	; 0xffffffa4
    1894:	ldr	r2, [pc, #1036]	; 1ca8 <afpacket_daq_acquire+0x83c>
    1898:	add	r2, pc, r2
    189c:	add	r1, r2, r1, lsl #2
    18a0:	ldr	r1, [r1]
    18a4:	str	r1, [fp, #-92]	; 0xffffffa4
    18a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    18ac:	ldr	r1, [r0, #64]	; 0x40
    18b0:	ldr	r2, [r0, #68]	; 0x44
    18b4:	adds	r1, r1, #1
    18b8:	adc	r2, r2, #0
    18bc:	str	r1, [r0, #64]	; 0x40
    18c0:	str	r2, [r0, #68]	; 0x44
    18c4:	ldr	r0, [sp, #80]	; 0x50
    18c8:	add	r0, r0, #1
    18cc:	str	r0, [sp, #80]	; 0x50
    18d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
    18d4:	cmp	r0, #0
    18d8:	bne	19a4 <afpacket_daq_acquire+0x538>
    18dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18e0:	ldr	r0, [r0, #92]	; 0x5c
    18e4:	movw	r1, #0
    18e8:	cmp	r0, r1
    18ec:	beq	19a4 <afpacket_daq_acquire+0x538>
    18f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    18f4:	ldr	r0, [r0, #92]	; 0x5c
    18f8:	ldr	r0, [r0, #80]	; 0x50
    18fc:	str	r0, [sp, #52]	; 0x34
    1900:	ldr	r0, [sp, #52]	; 0x34
    1904:	ldr	r0, [r0, #4]
    1908:	ldr	r0, [r0]
    190c:	cmp	r0, #0
    1910:	bne	19a0 <afpacket_daq_acquire+0x534>
    1914:	ldr	r0, [sp, #52]	; 0x34
    1918:	ldr	r0, [r0, #4]
    191c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1920:	ldr	r1, [r1, #92]	; 0x5c
    1924:	ldr	r1, [r1, #12]
    1928:	add	r1, r1, #16
    192c:	sub	r1, r1, #1
    1930:	mvn	r2, #15
    1934:	and	r1, r1, r2
    1938:	add	r0, r0, r1
    193c:	ldr	r1, [sp, #100]	; 0x64
    1940:	ldr	r2, [sp, #68]	; 0x44
    1944:	bl	9f8 <memcpy@plt>
    1948:	ldr	r0, [sp, #68]	; 0x44
    194c:	ldr	r1, [sp, #52]	; 0x34
    1950:	ldr	r1, [r1, #4]
    1954:	str	r0, [r1, #4]
    1958:	ldr	r0, [sp, #52]	; 0x34
    195c:	ldr	r0, [r0, #4]
    1960:	movw	r1, #1
    1964:	str	r1, [r0]
    1968:	ldr	r0, [fp, #-36]	; 0xffffffdc
    196c:	ldr	r0, [r0, #92]	; 0x5c
    1970:	ldr	r0, [r0, #4]
    1974:	movw	r1, #0
    1978:	str	r1, [sp, #24]
    197c:	ldr	r2, [sp, #24]
    1980:	ldr	r3, [sp, #24]
    1984:	bl	b24 <send@plt>
    1988:	str	r0, [sp, #48]	; 0x30
    198c:	ldr	r0, [sp, #52]	; 0x34
    1990:	ldr	r0, [r0]
    1994:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1998:	ldr	r1, [r1, #92]	; 0x5c
    199c:	str	r0, [r1, #80]	; 0x50
    19a0:	b	19a4 <afpacket_daq_acquire+0x538>
    19a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    19a8:	ldr	r0, [r0, #8]
    19ac:	cmp	r0, #1
    19b0:	bne	19c4 <afpacket_daq_acquire+0x558>
    19b4:	b	19b8 <afpacket_daq_acquire+0x54c>
    19b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    19bc:	movw	r1, #0
    19c0:	str	r1, [r0]
    19c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    19c8:	ldr	r0, [r0, #48]	; 0x30
    19cc:	ldr	r0, [r0]
    19d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    19d4:	str	r0, [r1, #48]	; 0x30
    19d8:	b	19dc <afpacket_daq_acquire+0x570>
    19dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    19e0:	ldr	r0, [r0]
    19e4:	str	r0, [fp, #-36]	; 0xffffffdc
    19e8:	b	14ec <afpacket_daq_acquire+0x80>
    19ec:	ldr	r0, [sp, #92]	; 0x5c
    19f0:	cmp	r0, #0
    19f4:	bne	1c5c <afpacket_daq_acquire+0x7f0>
    19f8:	ldr	r0, [sp, #88]	; 0x58
    19fc:	cmp	r0, #0
    1a00:	bne	1c5c <afpacket_daq_acquire+0x7f0>
    1a04:	movw	r0, #0
    1a08:	str	r0, [sp, #96]	; 0x60
    1a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a10:	ldr	r0, [r0, #24]
    1a14:	str	r0, [fp, #-36]	; 0xffffffdc
    1a18:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a1c:	movw	r1, #0
    1a20:	cmp	r0, r1
    1a24:	beq	1a78 <afpacket_daq_acquire+0x60c>
    1a28:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a2c:	ldr	r0, [r0, #4]
    1a30:	ldr	r1, [sp, #96]	; 0x60
    1a34:	add	r2, sp, #104	; 0x68
    1a38:	str	r0, [r2, r1, lsl #3]
    1a3c:	ldr	r0, [sp, #96]	; 0x60
    1a40:	add	r0, r2, r0, lsl #3
    1a44:	mov	r1, #0
    1a48:	strh	r1, [r0, #6]
    1a4c:	ldr	r0, [sp, #96]	; 0x60
    1a50:	add	r0, r2, r0, lsl #3
    1a54:	movw	r1, #1
    1a58:	strh	r1, [r0, #4]
    1a5c:	ldr	r0, [sp, #96]	; 0x60
    1a60:	add	r0, r0, #1
    1a64:	str	r0, [sp, #96]	; 0x60
    1a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a6c:	ldr	r0, [r0]
    1a70:	str	r0, [fp, #-36]	; 0xffffffdc
    1a74:	b	1a18 <afpacket_daq_acquire+0x5ac>
    1a78:	add	r0, sp, #104	; 0x68
    1a7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1a80:	ldr	r1, [r1, #28]
    1a84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a88:	ldr	r2, [r2, #12]
    1a8c:	bl	a1c <poll@plt>
    1a90:	str	r0, [sp, #84]	; 0x54
    1a94:	ldr	r0, [sp, #84]	; 0x54
    1a98:	cmp	r0, #0
    1a9c:	bge	1b14 <afpacket_daq_acquire+0x6a8>
    1aa0:	bl	ab8 <__errno_location@plt>
    1aa4:	ldr	r0, [r0]
    1aa8:	cmp	r0, #4
    1aac:	beq	1b14 <afpacket_daq_acquire+0x6a8>
    1ab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ab4:	add	r0, r0, #148	; 0x94
    1ab8:	str	r0, [sp, #20]
    1abc:	bl	ab8 <__errno_location@plt>
    1ac0:	ldr	r0, [r0]
    1ac4:	bl	a64 <strerror@plt>
    1ac8:	str	r0, [sp, #16]
    1acc:	bl	ab8 <__errno_location@plt>
    1ad0:	ldr	r1, [pc, #436]	; 1c8c <afpacket_daq_acquire+0x820>
    1ad4:	add	r2, pc, r1
    1ad8:	ldr	r1, [pc, #432]	; 1c90 <afpacket_daq_acquire+0x824>
    1adc:	add	r3, pc, r1
    1ae0:	ldr	r0, [r0]
    1ae4:	ldr	r1, [sp, #20]
    1ae8:	str	r0, [sp, #12]
    1aec:	mov	r0, r1
    1af0:	movw	r1, #256	; 0x100
    1af4:	ldr	ip, [sp, #16]
    1af8:	str	ip, [sp]
    1afc:	ldr	lr, [sp, #12]
    1b00:	str	lr, [sp, #4]
    1b04:	bl	ac4 <snprintf@plt>
    1b08:	mvn	r1, #0
    1b0c:	str	r1, [fp, #-12]
    1b10:	b	1c68 <afpacket_daq_acquire+0x7fc>
    1b14:	ldr	r0, [sp, #84]	; 0x54
    1b18:	cmp	r0, #0
    1b1c:	bne	1b24 <afpacket_daq_acquire+0x6b8>
    1b20:	b	1c60 <afpacket_daq_acquire+0x7f4>
    1b24:	ldr	r0, [sp, #84]	; 0x54
    1b28:	cmp	r0, #0
    1b2c:	ble	1c58 <afpacket_daq_acquire+0x7ec>
    1b30:	movw	r0, #0
    1b34:	str	r0, [sp, #96]	; 0x60
    1b38:	ldr	r0, [sp, #96]	; 0x60
    1b3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1b40:	ldr	r1, [r1, #28]
    1b44:	cmp	r0, r1
    1b48:	bcs	1c54 <afpacket_daq_acquire+0x7e8>
    1b4c:	ldr	r0, [sp, #96]	; 0x60
    1b50:	add	r1, sp, #104	; 0x68
    1b54:	add	r0, r1, r0, lsl #3
    1b58:	ldrsh	r0, [r0, #6]
    1b5c:	movw	r1, #8248	; 0x2038
    1b60:	and	r0, r0, r1
    1b64:	cmp	r0, #0
    1b68:	beq	1c40 <afpacket_daq_acquire+0x7d4>
    1b6c:	ldr	r0, [sp, #96]	; 0x60
    1b70:	add	r1, sp, #104	; 0x68
    1b74:	add	r0, r1, r0, lsl #3
    1b78:	ldrsh	r0, [r0, #6]
    1b7c:	movw	r1, #8208	; 0x2010
    1b80:	and	r0, r0, r1
    1b84:	cmp	r0, #0
    1b88:	beq	1bb0 <afpacket_daq_acquire+0x744>
    1b8c:	ldr	r0, [pc, #240]	; 1c84 <afpacket_daq_acquire+0x818>
    1b90:	add	r2, pc, r0
    1b94:	ldr	r0, [pc, #236]	; 1c88 <afpacket_daq_acquire+0x81c>
    1b98:	add	r3, pc, r0
    1b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ba0:	add	r0, r0, #148	; 0x94
    1ba4:	movw	r1, #256	; 0x100
    1ba8:	bl	ac4 <snprintf@plt>
    1bac:	b	1c34 <afpacket_daq_acquire+0x7c8>
    1bb0:	ldr	r0, [sp, #96]	; 0x60
    1bb4:	add	r1, sp, #104	; 0x68
    1bb8:	add	r0, r1, r0, lsl #3
    1bbc:	ldrsh	r0, [r0, #6]
    1bc0:	and	r0, r0, #8
    1bc4:	cmp	r0, #0
    1bc8:	beq	1bf0 <afpacket_daq_acquire+0x784>
    1bcc:	ldr	r0, [pc, #168]	; 1c7c <afpacket_daq_acquire+0x810>
    1bd0:	add	r2, pc, r0
    1bd4:	ldr	r0, [pc, #164]	; 1c80 <afpacket_daq_acquire+0x814>
    1bd8:	add	r3, pc, r0
    1bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1be0:	add	r0, r0, #148	; 0x94
    1be4:	movw	r1, #256	; 0x100
    1be8:	bl	ac4 <snprintf@plt>
    1bec:	b	1c30 <afpacket_daq_acquire+0x7c4>
    1bf0:	ldr	r0, [sp, #96]	; 0x60
    1bf4:	add	r1, sp, #104	; 0x68
    1bf8:	add	r0, r1, r0, lsl #3
    1bfc:	ldrsh	r0, [r0, #6]
    1c00:	and	r0, r0, #32
    1c04:	cmp	r0, #0
    1c08:	beq	1c2c <afpacket_daq_acquire+0x7c0>
    1c0c:	ldr	r0, [pc, #96]	; 1c74 <afpacket_daq_acquire+0x808>
    1c10:	add	r2, pc, r0
    1c14:	ldr	r0, [pc, #92]	; 1c78 <afpacket_daq_acquire+0x80c>
    1c18:	add	r3, pc, r0
    1c1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1c20:	add	r0, r0, #148	; 0x94
    1c24:	movw	r1, #256	; 0x100
    1c28:	bl	ac4 <snprintf@plt>
    1c2c:	b	1c30 <afpacket_daq_acquire+0x7c4>
    1c30:	b	1c34 <afpacket_daq_acquire+0x7c8>
    1c34:	mvn	r0, #0
    1c38:	str	r0, [fp, #-12]
    1c3c:	b	1c68 <afpacket_daq_acquire+0x7fc>
    1c40:	b	1c44 <afpacket_daq_acquire+0x7d8>
    1c44:	ldr	r0, [sp, #96]	; 0x60
    1c48:	add	r0, r0, #1
    1c4c:	str	r0, [sp, #96]	; 0x60
    1c50:	b	1b38 <afpacket_daq_acquire+0x6cc>
    1c54:	b	1c58 <afpacket_daq_acquire+0x7ec>
    1c58:	b	1c5c <afpacket_daq_acquire+0x7f0>
    1c5c:	b	149c <afpacket_daq_acquire+0x30>
    1c60:	movw	r0, #0
    1c64:	str	r0, [fp, #-12]
    1c68:	ldr	r0, [fp, #-12]
    1c6c:	sub	sp, fp, #8
    1c70:	pop	{r4, sl, fp, pc}
    1c74:	.word	0x00002284
    1c78:	.word	0x000021ae
    1c7c:	.word	0x00002291
    1c80:	.word	0x000021ee
    1c84:	.word	0x000022b2
    1c88:	.word	0x0000222e
    1c8c:	.word	0x00002355
    1c90:	.word	0x000022ea
    1c94:	.word	0x00002694
    1c98:	.word	0x000027c7
    1c9c:	.word	0x000027aa
    1ca0:	.word	0x000027f1
    1ca4:	.word	0x0000280a
    1ca8:	.word	0x00002664

00001cac <afpacket_daq_inject>:
    1cac:	push	{fp, lr}
    1cb0:	mov	fp, sp
    1cb4:	sub	sp, sp, #56	; 0x38
    1cb8:	ldr	ip, [fp, #8]
    1cbc:	str	r0, [fp, #-8]
    1cc0:	str	r1, [fp, #-12]
    1cc4:	str	r2, [fp, #-16]
    1cc8:	str	r3, [fp, #-20]	; 0xffffffec
    1ccc:	ldr	r0, [fp, #-8]
    1cd0:	str	r0, [fp, #-24]	; 0xffffffe8
    1cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1cd8:	ldr	r0, [r0, #24]
    1cdc:	str	r0, [sp, #28]
    1ce0:	ldr	r0, [sp, #28]
    1ce4:	movw	r1, #0
    1ce8:	cmp	r0, r1
    1cec:	beq	1d20 <afpacket_daq_inject+0x74>
    1cf0:	ldr	r0, [sp, #28]
    1cf4:	ldr	r0, [r0, #88]	; 0x58
    1cf8:	ldr	r1, [fp, #-12]
    1cfc:	ldr	r1, [r1, #16]
    1d00:	cmp	r0, r1
    1d04:	bne	1d0c <afpacket_daq_inject+0x60>
    1d08:	b	1d20 <afpacket_daq_inject+0x74>
    1d0c:	b	1d10 <afpacket_daq_inject+0x64>
    1d10:	ldr	r0, [sp, #28]
    1d14:	ldr	r0, [r0]
    1d18:	str	r0, [sp, #28]
    1d1c:	b	1ce0 <afpacket_daq_inject+0x34>
    1d20:	ldr	r0, [sp, #28]
    1d24:	movw	r1, #0
    1d28:	cmp	r0, r1
    1d2c:	beq	1d54 <afpacket_daq_inject+0xa8>
    1d30:	ldr	r0, [fp, #8]
    1d34:	cmp	r0, #0
    1d38:	bne	1d60 <afpacket_daq_inject+0xb4>
    1d3c:	ldr	r0, [sp, #28]
    1d40:	ldr	r0, [r0, #92]	; 0x5c
    1d44:	str	r0, [sp, #28]
    1d48:	movw	r1, #0
    1d4c:	cmp	r0, r1
    1d50:	bne	1d60 <afpacket_daq_inject+0xb4>
    1d54:	mvn	r0, #0
    1d58:	str	r0, [fp, #-4]
    1d5c:	b	1e8c <afpacket_daq_inject+0x1e0>
    1d60:	ldr	r0, [sp, #28]
    1d64:	ldr	r0, [r0, #80]	; 0x50
    1d68:	str	r0, [sp, #24]
    1d6c:	ldr	r0, [sp, #24]
    1d70:	ldr	r0, [r0, #4]
    1d74:	ldr	r0, [r0]
    1d78:	cmp	r0, #0
    1d7c:	bne	1e84 <afpacket_daq_inject+0x1d8>
    1d80:	ldr	r0, [sp, #24]
    1d84:	ldr	r0, [r0, #4]
    1d88:	ldr	r1, [sp, #28]
    1d8c:	ldr	r1, [r1, #12]
    1d90:	add	r1, r1, #16
    1d94:	sub	r1, r1, #1
    1d98:	mvn	r2, #15
    1d9c:	and	r1, r1, r2
    1da0:	add	r0, r0, r1
    1da4:	ldr	r1, [fp, #-16]
    1da8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1dac:	bl	9f8 <memcpy@plt>
    1db0:	ldr	r0, [fp, #-20]	; 0xffffffec
    1db4:	ldr	r1, [sp, #24]
    1db8:	ldr	r1, [r1, #4]
    1dbc:	str	r0, [r1, #4]
    1dc0:	ldr	r0, [sp, #24]
    1dc4:	ldr	r0, [r0, #4]
    1dc8:	movw	r1, #1
    1dcc:	str	r1, [r0]
    1dd0:	ldr	r0, [sp, #24]
    1dd4:	ldr	r0, [r0]
    1dd8:	ldr	r1, [sp, #28]
    1ddc:	str	r0, [r1, #80]	; 0x50
    1de0:	ldr	r0, [sp, #28]
    1de4:	ldr	r0, [r0, #4]
    1de8:	movw	r1, #0
    1dec:	str	r1, [sp, #20]
    1df0:	ldr	r2, [sp, #20]
    1df4:	ldr	r3, [sp, #20]
    1df8:	bl	b24 <send@plt>
    1dfc:	cmp	r0, #0
    1e00:	bge	1e68 <afpacket_daq_inject+0x1bc>
    1e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e08:	add	r0, r0, #148	; 0x94
    1e0c:	str	r0, [sp, #16]
    1e10:	bl	ab8 <__errno_location@plt>
    1e14:	ldr	r0, [r0]
    1e18:	bl	a64 <strerror@plt>
    1e1c:	str	r0, [sp, #12]
    1e20:	bl	ab8 <__errno_location@plt>
    1e24:	ldr	r1, [pc, #108]	; 1e98 <afpacket_daq_inject+0x1ec>
    1e28:	add	r2, pc, r1
    1e2c:	ldr	r1, [pc, #104]	; 1e9c <afpacket_daq_inject+0x1f0>
    1e30:	add	r3, pc, r1
    1e34:	ldr	r0, [r0]
    1e38:	ldr	r1, [sp, #16]
    1e3c:	str	r0, [sp, #8]
    1e40:	mov	r0, r1
    1e44:	movw	r1, #256	; 0x100
    1e48:	ldr	ip, [sp, #12]
    1e4c:	str	ip, [sp]
    1e50:	ldr	lr, [sp, #8]
    1e54:	str	lr, [sp, #4]
    1e58:	bl	ac4 <snprintf@plt>
    1e5c:	mvn	r1, #0
    1e60:	str	r1, [fp, #-4]
    1e64:	b	1e8c <afpacket_daq_inject+0x1e0>
    1e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e6c:	ldr	r1, [r0, #80]	; 0x50
    1e70:	ldr	r2, [r0, #84]	; 0x54
    1e74:	adds	r1, r1, #1
    1e78:	adc	r2, r2, #0
    1e7c:	str	r1, [r0, #80]	; 0x50
    1e80:	str	r2, [r0, #84]	; 0x54
    1e84:	movw	r0, #0
    1e88:	str	r0, [fp, #-4]
    1e8c:	ldr	r0, [fp, #-4]
    1e90:	mov	sp, fp
    1e94:	pop	{fp, pc}
    1e98:	.word	0x0000209b
    1e9c:	.word	0x000020b5

00001ea0 <afpacket_daq_breakloop>:
    1ea0:	sub	sp, sp, #8
    1ea4:	str	r0, [sp, #4]
    1ea8:	ldr	r0, [sp, #4]
    1eac:	str	r0, [sp]
    1eb0:	ldr	r0, [sp]
    1eb4:	movw	r1, #1
    1eb8:	str	r1, [r0, #40]	; 0x28
    1ebc:	movw	r0, #0
    1ec0:	add	sp, sp, #8
    1ec4:	bx	lr

00001ec8 <afpacket_daq_stop>:
    1ec8:	push	{fp, lr}
    1ecc:	mov	fp, sp
    1ed0:	sub	sp, sp, #16
    1ed4:	str	r0, [fp, #-4]
    1ed8:	ldr	r0, [fp, #-4]
    1edc:	str	r0, [sp, #8]
    1ee0:	ldr	r0, [sp, #8]
    1ee4:	bl	2460 <af_packet_close>
    1ee8:	movw	r1, #0
    1eec:	str	r0, [sp, #4]
    1ef0:	mov	r0, r1
    1ef4:	mov	sp, fp
    1ef8:	pop	{fp, pc}

00001efc <afpacket_daq_shutdown>:
    1efc:	push	{fp, lr}
    1f00:	mov	fp, sp
    1f04:	sub	sp, sp, #8
    1f08:	str	r0, [sp, #4]
    1f0c:	ldr	r0, [sp, #4]
    1f10:	str	r0, [sp]
    1f14:	ldr	r0, [sp]
    1f18:	bl	2460 <af_packet_close>
    1f1c:	ldr	r1, [sp]
    1f20:	ldr	r1, [r1]
    1f24:	movw	r2, #0
    1f28:	cmp	r1, r2
    1f2c:	beq	1f3c <afpacket_daq_shutdown+0x40>
    1f30:	ldr	r0, [sp]
    1f34:	ldr	r0, [r0]
    1f38:	bl	9ec <free@plt>
    1f3c:	ldr	r0, [sp]
    1f40:	ldr	r0, [r0, #4]
    1f44:	movw	r1, #0
    1f48:	cmp	r0, r1
    1f4c:	beq	1f5c <afpacket_daq_shutdown+0x60>
    1f50:	ldr	r0, [sp]
    1f54:	ldr	r0, [r0, #4]
    1f58:	bl	9ec <free@plt>
    1f5c:	ldr	r0, [sp]
    1f60:	bl	9ec <free@plt>
    1f64:	mov	sp, fp
    1f68:	pop	{fp, pc}

00001f6c <afpacket_daq_check_status>:
    1f6c:	sub	sp, sp, #8
    1f70:	str	r0, [sp, #4]
    1f74:	ldr	r0, [sp, #4]
    1f78:	str	r0, [sp]
    1f7c:	ldr	r0, [sp]
    1f80:	ldr	r0, [r0, #144]	; 0x90
    1f84:	add	sp, sp, #8
    1f88:	bx	lr

00001f8c <afpacket_daq_get_stats>:
    1f8c:	push	{fp, lr}
    1f90:	mov	fp, sp
    1f94:	sub	sp, sp, #16
    1f98:	str	r0, [fp, #-4]
    1f9c:	str	r1, [sp, #8]
    1fa0:	ldr	r0, [fp, #-4]
    1fa4:	str	r0, [sp, #4]
    1fa8:	ldr	r0, [sp, #4]
    1fac:	bl	2698 <update_hw_stats>
    1fb0:	ldr	r0, [sp, #8]
    1fb4:	ldr	r1, [sp, #4]
    1fb8:	add	r1, r1, #48	; 0x30
    1fbc:	movw	r2, #96	; 0x60
    1fc0:	bl	9f8 <memcpy@plt>
    1fc4:	movw	r0, #0
    1fc8:	mov	sp, fp
    1fcc:	pop	{fp, pc}

00001fd0 <afpacket_daq_reset_stats>:
    1fd0:	push	{fp, lr}
    1fd4:	mov	fp, sp
    1fd8:	sub	sp, sp, #8
    1fdc:	str	r0, [sp, #4]
    1fe0:	ldr	r0, [sp, #4]
    1fe4:	str	r0, [sp]
    1fe8:	ldr	r0, [sp]
    1fec:	bl	2b1c <reset_stats>
    1ff0:	mov	sp, fp
    1ff4:	pop	{fp, pc}

00001ff8 <afpacket_daq_get_snaplen>:
    1ff8:	sub	sp, sp, #8
    1ffc:	str	r0, [sp, #4]
    2000:	ldr	r0, [sp, #4]
    2004:	str	r0, [sp]
    2008:	ldr	r0, [sp]
    200c:	ldr	r0, [r0, #8]
    2010:	add	sp, sp, #8
    2014:	bx	lr

00002018 <afpacket_daq_get_capabilities>:
    2018:	sub	sp, sp, #4
    201c:	str	r0, [sp]
    2020:	movw	r0, #487	; 0x1e7
    2024:	add	sp, sp, #4
    2028:	bx	lr

0000202c <afpacket_daq_get_datalink_type>:
    202c:	sub	sp, sp, #4
    2030:	str	r0, [sp]
    2034:	movw	r0, #1
    2038:	add	sp, sp, #4
    203c:	bx	lr

00002040 <afpacket_daq_get_errbuf>:
    2040:	sub	sp, sp, #8
    2044:	str	r0, [sp, #4]
    2048:	ldr	r0, [sp, #4]
    204c:	str	r0, [sp]
    2050:	ldr	r0, [sp]
    2054:	add	r0, r0, #148	; 0x94
    2058:	add	sp, sp, #8
    205c:	bx	lr

00002060 <afpacket_daq_set_errbuf>:
    2060:	push	{fp, lr}
    2064:	mov	fp, sp
    2068:	sub	sp, sp, #16
    206c:	str	r0, [fp, #-4]
    2070:	str	r1, [sp, #8]
    2074:	ldr	r0, [fp, #-4]
    2078:	str	r0, [sp, #4]
    207c:	ldr	r0, [sp, #8]
    2080:	movw	r1, #0
    2084:	cmp	r0, r1
    2088:	bne	2090 <afpacket_daq_set_errbuf+0x30>
    208c:	b	20ac <afpacket_daq_set_errbuf+0x4c>
    2090:	ldr	r0, [pc, #28]	; 20b4 <afpacket_daq_set_errbuf+0x54>
    2094:	add	r2, pc, r0
    2098:	ldr	r0, [sp, #4]
    209c:	add	r0, r0, #148	; 0x94
    20a0:	ldr	r3, [sp, #8]
    20a4:	movw	r1, #256	; 0x100
    20a8:	bl	ac4 <snprintf@plt>
    20ac:	mov	sp, fp
    20b0:	pop	{fp, pc}
    20b4:	.word	0x000019d8

000020b8 <afpacket_daq_get_device_index>:
    20b8:	push	{fp, lr}
    20bc:	mov	fp, sp
    20c0:	sub	sp, sp, #24
    20c4:	str	r0, [fp, #-8]
    20c8:	str	r1, [sp, #12]
    20cc:	ldr	r0, [fp, #-8]
    20d0:	str	r0, [sp, #8]
    20d4:	ldr	r0, [sp, #8]
    20d8:	ldr	r0, [r0, #24]
    20dc:	str	r0, [sp, #4]
    20e0:	ldr	r0, [sp, #4]
    20e4:	movw	r1, #0
    20e8:	cmp	r0, r1
    20ec:	beq	212c <afpacket_daq_get_device_index+0x74>
    20f0:	ldr	r0, [sp, #12]
    20f4:	ldr	r1, [sp, #4]
    20f8:	ldr	r1, [r1, #84]	; 0x54
    20fc:	bl	9a4 <strcmp@plt>
    2100:	cmp	r0, #0
    2104:	bne	2118 <afpacket_daq_get_device_index+0x60>
    2108:	ldr	r0, [sp, #4]
    210c:	ldr	r0, [r0, #88]	; 0x58
    2110:	str	r0, [fp, #-4]
    2114:	b	2134 <afpacket_daq_get_device_index+0x7c>
    2118:	b	211c <afpacket_daq_get_device_index+0x64>
    211c:	ldr	r0, [sp, #4]
    2120:	ldr	r0, [r0]
    2124:	str	r0, [sp, #4]
    2128:	b	20e0 <afpacket_daq_get_device_index+0x28>
    212c:	mvn	r0, #2
    2130:	str	r0, [fp, #-4]
    2134:	ldr	r0, [fp, #-4]
    2138:	mov	sp, fp
    213c:	pop	{fp, pc}

00002140 <create_instance>:
    2140:	push	{fp, lr}
    2144:	mov	fp, sp
    2148:	sub	sp, sp, #80	; 0x50
    214c:	str	r0, [fp, #-8]
    2150:	str	r1, [fp, #-12]
    2154:	str	r2, [fp, #-16]
    2158:	movw	r0, #0
    215c:	str	r0, [fp, #-20]	; 0xffffffec
    2160:	movw	r0, #1
    2164:	movw	r1, #116	; 0x74
    2168:	bl	98c <calloc@plt>
    216c:	str	r0, [fp, #-20]	; 0xffffffec
    2170:	ldr	r0, [fp, #-20]	; 0xffffffec
    2174:	movw	r1, #0
    2178:	cmp	r0, r1
    217c:	bne	21a0 <create_instance+0x60>
    2180:	ldr	r0, [pc, #452]	; 234c <create_instance+0x20c>
    2184:	add	r2, pc, r0
    2188:	ldr	r0, [pc, #448]	; 2350 <create_instance+0x210>
    218c:	add	r3, pc, r0
    2190:	ldr	r0, [fp, #-12]
    2194:	ldr	r1, [fp, #-16]
    2198:	bl	ac4 <snprintf@plt>
    219c:	b	2330 <create_instance+0x1f0>
    21a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    21a4:	mvn	r1, #0
    21a8:	str	r1, [r0, #16]
    21ac:	ldr	r0, [fp, #-8]
    21b0:	bl	a04 <strdup@plt>
    21b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    21b8:	str	r0, [r1, #84]	; 0x54
    21bc:	movw	r1, #0
    21c0:	cmp	r0, r1
    21c4:	bne	21e8 <create_instance+0xa8>
    21c8:	ldr	r0, [pc, #404]	; 2364 <create_instance+0x224>
    21cc:	add	r2, pc, r0
    21d0:	ldr	r0, [pc, #400]	; 2368 <create_instance+0x228>
    21d4:	add	r3, pc, r0
    21d8:	ldr	r0, [fp, #-12]
    21dc:	ldr	r1, [fp, #-16]
    21e0:	bl	ac4 <snprintf@plt>
    21e4:	b	2330 <create_instance+0x1f0>
    21e8:	movw	r0, #3
    21ec:	uxth	r0, r0
    21f0:	bl	a10 <htons@plt>
    21f4:	uxth	r2, r0
    21f8:	movw	r0, #17
    21fc:	movw	r1, #3
    2200:	bl	b0c <socket@plt>
    2204:	ldr	r1, [fp, #-20]	; 0xffffffec
    2208:	str	r0, [r1, #4]
    220c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2210:	ldr	r0, [r0, #4]
    2214:	cmn	r0, #1
    2218:	bne	2268 <create_instance+0x128>
    221c:	ldr	r0, [fp, #-12]
    2220:	ldr	r1, [fp, #-16]
    2224:	str	r0, [sp, #24]
    2228:	str	r1, [sp, #20]
    222c:	bl	ab8 <__errno_location@plt>
    2230:	ldr	r0, [r0]
    2234:	bl	a64 <strerror@plt>
    2238:	ldr	r1, [pc, #284]	; 235c <create_instance+0x21c>
    223c:	add	r2, pc, r1
    2240:	ldr	r1, [pc, #280]	; 2360 <create_instance+0x220>
    2244:	add	r3, pc, r1
    2248:	ldr	r1, [sp, #24]
    224c:	str	r0, [sp, #16]
    2250:	mov	r0, r1
    2254:	ldr	r1, [sp, #20]
    2258:	ldr	ip, [sp, #16]
    225c:	str	ip, [sp]
    2260:	bl	ac4 <snprintf@plt>
    2264:	b	2330 <create_instance+0x1f0>
    2268:	add	r0, sp, #28
    226c:	mov	r1, r0
    2270:	str	r0, [sp, #12]
    2274:	mov	r0, r1
    2278:	movw	r1, #0
    227c:	and	r1, r1, #255	; 0xff
    2280:	movw	r2, #32
    2284:	bl	adc <memset@plt>
    2288:	ldr	r0, [sp, #12]
    228c:	ldr	r1, [fp, #-8]
    2290:	movw	r2, #16
    2294:	bl	ae8 <strncpy@plt>
    2298:	ldr	r1, [fp, #-20]	; 0xffffffec
    229c:	ldr	r1, [r1, #4]
    22a0:	str	r0, [sp, #8]
    22a4:	mov	r0, r1
    22a8:	movw	r1, #35123	; 0x8933
    22ac:	add	r2, sp, #28
    22b0:	bl	a34 <ioctl@plt>
    22b4:	cmn	r0, #1
    22b8:	bne	22e8 <create_instance+0x1a8>
    22bc:	ldr	r0, [pc, #144]	; 2354 <create_instance+0x214>
    22c0:	add	r2, pc, r0
    22c4:	ldr	r0, [pc, #140]	; 2358 <create_instance+0x218>
    22c8:	add	r3, pc, r0
    22cc:	ldr	r0, [fp, #-12]
    22d0:	ldr	r1, [fp, #-16]
    22d4:	ldr	ip, [fp, #-20]	; 0xffffffec
    22d8:	ldr	ip, [ip, #84]	; 0x54
    22dc:	str	ip, [sp]
    22e0:	bl	ac4 <snprintf@plt>
    22e4:	b	2330 <create_instance+0x1f0>
    22e8:	ldr	r0, [sp, #44]	; 0x2c
    22ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    22f0:	str	r0, [r1, #88]	; 0x58
    22f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    22f8:	movw	r1, #17
    22fc:	strh	r1, [r0, #96]	; 0x60
    2300:	ldr	r0, [fp, #-20]	; 0xffffffec
    2304:	ldr	r0, [r0, #88]	; 0x58
    2308:	ldr	r1, [fp, #-20]	; 0xffffffec
    230c:	str	r0, [r1, #100]	; 0x64
    2310:	movw	r0, #3
    2314:	uxth	r0, r0
    2318:	bl	a10 <htons@plt>
    231c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2320:	strh	r0, [r1, #98]	; 0x62
    2324:	ldr	r0, [fp, #-20]	; 0xffffffec
    2328:	str	r0, [fp, #-4]
    232c:	b	2340 <create_instance+0x200>
    2330:	ldr	r0, [fp, #-20]	; 0xffffffec
    2334:	bl	24f4 <destroy_instance>
    2338:	movw	r0, #0
    233c:	str	r0, [fp, #-4]
    2340:	ldr	r0, [fp, #-4]
    2344:	mov	sp, fp
    2348:	pop	{fp, pc}
    234c:	.word	0x00001732
    2350:	.word	0x0000175b
    2354:	.word	0x00001695
    2358:	.word	0x0000161f
    235c:	.word	0x000016ed
    2360:	.word	0x000016a3
    2364:	.word	0x0000172b
    2368:	.word	0x00001713

0000236c <create_bridge>:
    236c:	push	{fp, lr}
    2370:	mov	fp, sp
    2374:	sub	sp, sp, #32
    2378:	str	r0, [fp, #-8]
    237c:	str	r1, [fp, #-12]
    2380:	str	r2, [sp, #16]
    2384:	movw	r0, #0
    2388:	str	r0, [sp, #4]
    238c:	str	r0, [sp, #8]
    2390:	ldr	r0, [fp, #-8]
    2394:	ldr	r0, [r0, #24]
    2398:	str	r0, [sp, #12]
    239c:	ldr	r0, [sp, #12]
    23a0:	movw	r1, #0
    23a4:	cmp	r0, r1
    23a8:	beq	2408 <create_bridge+0x9c>
    23ac:	ldr	r0, [sp, #12]
    23b0:	ldr	r0, [r0, #84]	; 0x54
    23b4:	ldr	r1, [fp, #-12]
    23b8:	bl	9a4 <strcmp@plt>
    23bc:	cmp	r0, #0
    23c0:	bne	23d0 <create_bridge+0x64>
    23c4:	ldr	r0, [sp, #12]
    23c8:	str	r0, [sp, #8]
    23cc:	b	23f4 <create_bridge+0x88>
    23d0:	ldr	r0, [sp, #12]
    23d4:	ldr	r0, [r0, #84]	; 0x54
    23d8:	ldr	r1, [sp, #16]
    23dc:	bl	9a4 <strcmp@plt>
    23e0:	cmp	r0, #0
    23e4:	bne	23f0 <create_bridge+0x84>
    23e8:	ldr	r0, [sp, #12]
    23ec:	str	r0, [sp, #4]
    23f0:	b	23f4 <create_bridge+0x88>
    23f4:	b	23f8 <create_bridge+0x8c>
    23f8:	ldr	r0, [sp, #12]
    23fc:	ldr	r0, [r0]
    2400:	str	r0, [sp, #12]
    2404:	b	239c <create_bridge+0x30>
    2408:	ldr	r0, [sp, #8]
    240c:	movw	r1, #0
    2410:	cmp	r0, r1
    2414:	beq	2428 <create_bridge+0xbc>
    2418:	ldr	r0, [sp, #4]
    241c:	movw	r1, #0
    2420:	cmp	r0, r1
    2424:	bne	2434 <create_bridge+0xc8>
    2428:	mvn	r0, #2
    242c:	str	r0, [fp, #-4]
    2430:	b	2454 <create_bridge+0xe8>
    2434:	ldr	r0, [sp, #4]
    2438:	ldr	r1, [sp, #8]
    243c:	str	r0, [r1, #92]	; 0x5c
    2440:	ldr	r0, [sp, #8]
    2444:	ldr	r1, [sp, #4]
    2448:	str	r0, [r1, #92]	; 0x5c
    244c:	movw	r0, #0
    2450:	str	r0, [fp, #-4]
    2454:	ldr	r0, [fp, #-4]
    2458:	mov	sp, fp
    245c:	pop	{fp, pc}

00002460 <af_packet_close>:
    2460:	push	{fp, lr}
    2464:	mov	fp, sp
    2468:	sub	sp, sp, #16
    246c:	str	r0, [sp, #8]
    2470:	ldr	r0, [sp, #8]
    2474:	movw	r1, #0
    2478:	cmp	r0, r1
    247c:	bne	248c <af_packet_close+0x2c>
    2480:	mvn	r0, #0
    2484:	str	r0, [fp, #-4]
    2488:	b	24e8 <af_packet_close+0x88>
    248c:	ldr	r0, [sp, #8]
    2490:	bl	2698 <update_hw_stats>
    2494:	ldr	r0, [sp, #8]
    2498:	ldr	r0, [r0, #24]
    249c:	str	r0, [sp, #4]
    24a0:	movw	r1, #0
    24a4:	cmp	r0, r1
    24a8:	beq	24c8 <af_packet_close+0x68>
    24ac:	ldr	r0, [sp, #4]
    24b0:	ldr	r0, [r0]
    24b4:	ldr	r1, [sp, #8]
    24b8:	str	r0, [r1, #24]
    24bc:	ldr	r0, [sp, #4]
    24c0:	bl	24f4 <destroy_instance>
    24c4:	b	2494 <af_packet_close+0x34>
    24c8:	ldr	r0, [sp, #8]
    24cc:	add	r0, r0, #32
    24d0:	bl	a40 <sfbpf_freecode@plt>
    24d4:	ldr	r0, [sp, #8]
    24d8:	movw	r1, #3
    24dc:	str	r1, [r0, #144]	; 0x90
    24e0:	movw	r0, #0
    24e4:	str	r0, [fp, #-4]
    24e8:	ldr	r0, [fp, #-4]
    24ec:	mov	sp, fp
    24f0:	pop	{fp, pc}

000024f4 <destroy_instance>:
    24f4:	push	{fp, lr}
    24f8:	mov	fp, sp
    24fc:	sub	sp, sp, #56	; 0x38
    2500:	str	r0, [fp, #-4]
    2504:	ldr	r0, [fp, #-4]
    2508:	movw	r1, #0
    250c:	cmp	r0, r1
    2510:	beq	2690 <destroy_instance+0x19c>
    2514:	ldr	r0, [fp, #-4]
    2518:	ldr	r0, [r0, #4]
    251c:	cmn	r0, #1
    2520:	beq	265c <destroy_instance+0x168>
    2524:	ldr	r0, [fp, #-4]
    2528:	ldr	r0, [r0, #44]	; 0x2c
    252c:	movw	r1, #0
    2530:	cmp	r0, r1
    2534:	beq	2550 <destroy_instance+0x5c>
    2538:	ldr	r0, [fp, #-4]
    253c:	ldr	r0, [r0, #44]	; 0x2c
    2540:	bl	9ec <free@plt>
    2544:	ldr	r0, [fp, #-4]
    2548:	movw	r1, #0
    254c:	str	r1, [r0, #44]	; 0x2c
    2550:	ldr	r0, [fp, #-4]
    2554:	ldr	r0, [r0, #76]	; 0x4c
    2558:	movw	r1, #0
    255c:	cmp	r0, r1
    2560:	beq	257c <destroy_instance+0x88>
    2564:	ldr	r0, [fp, #-4]
    2568:	ldr	r0, [r0, #76]	; 0x4c
    256c:	bl	9ec <free@plt>
    2570:	ldr	r0, [fp, #-4]
    2574:	movw	r1, #0
    2578:	str	r1, [r0, #76]	; 0x4c
    257c:	ldr	r0, [fp, #-4]
    2580:	ldr	r0, [r0, #16]
    2584:	mvn	r1, #0
    2588:	cmp	r0, r1
    258c:	beq	25c4 <destroy_instance+0xd0>
    2590:	ldr	r0, [fp, #-4]
    2594:	ldr	r0, [r0, #36]	; 0x24
    2598:	ldr	r1, [fp, #-4]
    259c:	ldr	r1, [r1, #68]	; 0x44
    25a0:	add	r0, r0, r1
    25a4:	str	r0, [fp, #-8]
    25a8:	ldr	r0, [fp, #-4]
    25ac:	ldr	r0, [r0, #16]
    25b0:	ldr	r1, [fp, #-8]
    25b4:	bl	af4 <munmap@plt>
    25b8:	ldr	r1, [fp, #-4]
    25bc:	mvn	r2, #0
    25c0:	str	r2, [r1, #16]
    25c4:	sub	r0, fp, #24
    25c8:	mov	r1, r0
    25cc:	str	r0, [sp, #28]
    25d0:	mov	r0, r1
    25d4:	movw	r1, #0
    25d8:	and	r1, r1, #255	; 0xff
    25dc:	movw	r2, #16
    25e0:	str	r2, [sp, #24]
    25e4:	bl	adc <memset@plt>
    25e8:	ldr	r0, [fp, #-4]
    25ec:	ldr	r0, [r0, #4]
    25f0:	ldr	r1, [sp, #28]
    25f4:	movw	r2, #263	; 0x107
    25f8:	str	r1, [sp, #20]
    25fc:	mov	r1, r2
    2600:	movw	r2, #5
    2604:	ldr	r3, [sp, #20]
    2608:	ldr	ip, [sp, #24]
    260c:	str	ip, [sp]
    2610:	bl	9bc <setsockopt@plt>
    2614:	ldr	r1, [fp, #-4]
    2618:	ldr	r1, [r1, #4]
    261c:	sub	r2, fp, #24
    2620:	str	r0, [sp, #16]
    2624:	mov	r0, r1
    2628:	movw	r1, #263	; 0x107
    262c:	movw	r3, #13
    2630:	str	r2, [sp, #12]
    2634:	mov	r2, r3
    2638:	ldr	r3, [sp, #12]
    263c:	movw	ip, #16
    2640:	str	ip, [sp]
    2644:	bl	9bc <setsockopt@plt>
    2648:	ldr	r1, [fp, #-4]
    264c:	ldr	r1, [r1, #4]
    2650:	str	r0, [sp, #8]
    2654:	mov	r0, r1
    2658:	bl	b18 <close@plt>
    265c:	ldr	r0, [fp, #-4]
    2660:	ldr	r0, [r0, #84]	; 0x54
    2664:	movw	r1, #0
    2668:	cmp	r0, r1
    266c:	beq	2688 <destroy_instance+0x194>
    2670:	ldr	r0, [fp, #-4]
    2674:	ldr	r0, [r0, #84]	; 0x54
    2678:	bl	9ec <free@plt>
    267c:	ldr	r0, [fp, #-4]
    2680:	movw	r1, #0
    2684:	str	r1, [r0, #84]	; 0x54
    2688:	ldr	r0, [fp, #-4]
    268c:	bl	9ec <free@plt>
    2690:	mov	sp, fp
    2694:	pop	{fp, pc}

00002698 <update_hw_stats>:
    2698:	push	{fp, lr}
    269c:	mov	fp, sp
    26a0:	sub	sp, sp, #48	; 0x30
    26a4:	str	r0, [fp, #-4]
    26a8:	movw	r0, #8
    26ac:	str	r0, [fp, #-20]	; 0xffffffec
    26b0:	ldr	r0, [fp, #-4]
    26b4:	ldr	r0, [r0, #144]	; 0x90
    26b8:	cmp	r0, #2
    26bc:	beq	26c4 <update_hw_stats+0x2c>
    26c0:	b	27f0 <update_hw_stats+0x158>
    26c4:	ldr	r0, [fp, #-4]
    26c8:	ldr	r0, [r0, #24]
    26cc:	str	r0, [fp, #-8]
    26d0:	ldr	r0, [fp, #-8]
    26d4:	movw	r1, #0
    26d8:	cmp	r0, r1
    26dc:	beq	27f0 <update_hw_stats+0x158>
    26e0:	sub	r0, fp, #16
    26e4:	mov	r1, r0
    26e8:	ldr	r2, [fp, #-20]	; 0xffffffec
    26ec:	str	r0, [sp, #24]
    26f0:	mov	r0, r1
    26f4:	movw	r1, #0
    26f8:	and	r1, r1, #255	; 0xff
    26fc:	bl	adc <memset@plt>
    2700:	ldr	r0, [fp, #-8]
    2704:	ldr	r0, [r0, #4]
    2708:	ldr	r1, [sp, #24]
    270c:	movw	r2, #263	; 0x107
    2710:	str	r1, [sp, #20]
    2714:	mov	r1, r2
    2718:	movw	r2, #6
    271c:	ldr	r3, [sp, #20]
    2720:	sub	ip, fp, #20
    2724:	str	ip, [sp]
    2728:	bl	a28 <getsockopt@plt>
    272c:	cmn	r0, #1
    2730:	ble	2780 <update_hw_stats+0xe8>
    2734:	ldr	r0, [fp, #-16]
    2738:	ldr	r1, [fp, #-12]
    273c:	sub	r0, r0, r1
    2740:	ldr	r1, [fp, #-4]
    2744:	ldr	r2, [r1, #48]	; 0x30
    2748:	ldr	r3, [r1, #52]	; 0x34
    274c:	adds	r0, r2, r0
    2750:	adc	r2, r3, #0
    2754:	str	r0, [r1, #48]	; 0x30
    2758:	str	r2, [r1, #52]	; 0x34
    275c:	ldr	r0, [fp, #-12]
    2760:	ldr	r1, [fp, #-4]
    2764:	ldr	r2, [r1, #56]	; 0x38
    2768:	ldr	r3, [r1, #60]	; 0x3c
    276c:	adds	r0, r2, r0
    2770:	adc	r2, r3, #0
    2774:	str	r0, [r1, #56]	; 0x38
    2778:	str	r2, [r1, #60]	; 0x3c
    277c:	b	27dc <update_hw_stats+0x144>
    2780:	ldr	r0, [pc, #116]	; 27fc <update_hw_stats+0x164>
    2784:	ldr	r0, [pc, r0]
    2788:	ldr	r0, [r0]
    278c:	ldr	r1, [fp, #-8]
    2790:	ldr	r2, [r1, #84]	; 0x54
    2794:	str	r0, [sp, #16]
    2798:	str	r2, [sp, #12]
    279c:	bl	ab8 <__errno_location@plt>
    27a0:	ldr	r3, [r0]
    27a4:	str	r3, [sp, #8]
    27a8:	bl	ab8 <__errno_location@plt>
    27ac:	ldr	r0, [r0]
    27b0:	bl	a64 <strerror@plt>
    27b4:	ldr	r1, [pc, #60]	; 27f8 <update_hw_stats+0x160>
    27b8:	add	r1, pc, r1
    27bc:	ldr	r2, [sp, #16]
    27c0:	str	r0, [sp, #4]
    27c4:	mov	r0, r2
    27c8:	ldr	r2, [sp, #12]
    27cc:	ldr	r3, [sp, #8]
    27d0:	ldr	ip, [sp, #4]
    27d4:	str	ip, [sp]
    27d8:	bl	aa0 <fprintf@plt>
    27dc:	b	27e0 <update_hw_stats+0x148>
    27e0:	ldr	r0, [fp, #-8]
    27e4:	ldr	r0, [r0]
    27e8:	str	r0, [fp, #-8]
    27ec:	b	26d0 <update_hw_stats+0x38>
    27f0:	mov	sp, fp
    27f4:	pop	{fp, pc}
    27f8:	.word	0x000011c4
    27fc:	.word	0x00012914

00002800 <start_instance>:
    2800:	push	{r4, sl, fp, lr}
    2804:	add	fp, sp, #8
    2808:	sub	sp, sp, #88	; 0x58
    280c:	str	r0, [fp, #-16]
    2810:	str	r1, [fp, #-20]	; 0xffffffec
    2814:	ldr	r0, [fp, #-16]
    2818:	ldr	r1, [fp, #-20]	; 0xffffffec
    281c:	bl	2bac <bind_instance_interface>
    2820:	cmp	r0, #0
    2824:	beq	2834 <start_instance+0x34>
    2828:	mvn	r0, #0
    282c:	str	r0, [fp, #-12]
    2830:	b	2af8 <start_instance+0x2f8>
    2834:	sub	r0, fp, #36	; 0x24
    2838:	mov	r1, r0
    283c:	str	r0, [fp, #-44]	; 0xffffffd4
    2840:	mov	r0, r1
    2844:	movw	r1, #0
    2848:	and	r1, r1, #255	; 0xff
    284c:	movw	r2, #16
    2850:	str	r2, [sp, #48]	; 0x30
    2854:	bl	adc <memset@plt>
    2858:	ldr	r0, [fp, #-20]	; 0xffffffec
    285c:	ldr	r0, [r0, #88]	; 0x58
    2860:	str	r0, [fp, #-36]	; 0xffffffdc
    2864:	movw	r0, #1
    2868:	strh	r0, [fp, #-32]	; 0xffffffe0
    286c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2870:	ldr	r0, [r0, #4]
    2874:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2878:	movw	r2, #263	; 0x107
    287c:	str	r1, [sp, #44]	; 0x2c
    2880:	mov	r1, r2
    2884:	movw	r2, #1
    2888:	ldr	r3, [sp, #44]	; 0x2c
    288c:	ldr	ip, [sp, #48]	; 0x30
    2890:	str	ip, [sp]
    2894:	bl	9bc <setsockopt@plt>
    2898:	cmn	r0, #1
    289c:	bne	28f0 <start_instance+0xf0>
    28a0:	ldr	r0, [fp, #-16]
    28a4:	add	r0, r0, #148	; 0x94
    28a8:	str	r0, [sp, #40]	; 0x28
    28ac:	bl	ab8 <__errno_location@plt>
    28b0:	ldr	r0, [r0]
    28b4:	bl	a64 <strerror@plt>
    28b8:	ldr	r1, [pc, #596]	; 2b14 <start_instance+0x314>
    28bc:	add	r2, pc, r1
    28c0:	ldr	r1, [pc, #592]	; 2b18 <start_instance+0x318>
    28c4:	add	r3, pc, r1
    28c8:	ldr	r1, [sp, #40]	; 0x28
    28cc:	str	r0, [sp, #36]	; 0x24
    28d0:	mov	r0, r1
    28d4:	movw	r1, #256	; 0x100
    28d8:	ldr	ip, [sp, #36]	; 0x24
    28dc:	str	ip, [sp]
    28e0:	bl	ac4 <snprintf@plt>
    28e4:	mvn	r1, #0
    28e8:	str	r1, [fp, #-12]
    28ec:	b	2af8 <start_instance+0x2f8>
    28f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    28f4:	bl	2d3c <iface_get_arptype>
    28f8:	str	r0, [fp, #-40]	; 0xffffffd8
    28fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2900:	cmp	r0, #0
    2904:	bge	2980 <start_instance+0x180>
    2908:	ldr	r0, [fp, #-16]
    290c:	add	r0, r0, #148	; 0x94
    2910:	ldr	r1, [fp, #-20]	; 0xffffffec
    2914:	ldr	r1, [r1, #84]	; 0x54
    2918:	str	r0, [sp, #32]
    291c:	str	r1, [sp, #28]
    2920:	bl	ab8 <__errno_location@plt>
    2924:	ldr	r0, [r0]
    2928:	str	r0, [sp, #24]
    292c:	bl	ab8 <__errno_location@plt>
    2930:	ldr	r0, [r0]
    2934:	bl	a64 <strerror@plt>
    2938:	ldr	r1, [pc, #460]	; 2b0c <start_instance+0x30c>
    293c:	add	r2, pc, r1
    2940:	ldr	r1, [pc, #456]	; 2b10 <start_instance+0x310>
    2944:	add	r3, pc, r1
    2948:	ldr	r1, [sp, #32]
    294c:	str	r0, [sp, #20]
    2950:	mov	r0, r1
    2954:	movw	r1, #256	; 0x100
    2958:	ldr	ip, [sp, #28]
    295c:	str	ip, [sp]
    2960:	ldr	lr, [sp, #24]
    2964:	str	lr, [sp, #4]
    2968:	ldr	r4, [sp, #20]
    296c:	str	r4, [sp, #8]
    2970:	bl	ac4 <snprintf@plt>
    2974:	mvn	r1, #0
    2978:	str	r1, [fp, #-12]
    297c:	b	2af8 <start_instance+0x2f8>
    2980:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2984:	cmp	r0, #1
    2988:	beq	29e0 <start_instance+0x1e0>
    298c:	ldr	r0, [pc, #368]	; 2b04 <start_instance+0x304>
    2990:	add	r2, pc, r0
    2994:	ldr	r0, [pc, #364]	; 2b08 <start_instance+0x308>
    2998:	add	r3, pc, r0
    299c:	ldr	r0, [fp, #-16]
    29a0:	add	r0, r0, #148	; 0x94
    29a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    29a8:	ldr	r1, [r1, #84]	; 0x54
    29ac:	ldr	ip, [fp, #-40]	; 0xffffffd8
    29b0:	movw	lr, #256	; 0x100
    29b4:	str	r1, [sp, #16]
    29b8:	mov	r1, lr
    29bc:	ldr	lr, [sp, #16]
    29c0:	str	lr, [sp]
    29c4:	str	ip, [sp, #4]
    29c8:	movw	ip, #1
    29cc:	str	ip, [sp, #8]
    29d0:	bl	ac4 <snprintf@plt>
    29d4:	mvn	r1, #0
    29d8:	str	r1, [fp, #-12]
    29dc:	b	2af8 <start_instance+0x2f8>
    29e0:	ldr	r0, [fp, #-16]
    29e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    29e8:	bl	2de0 <determine_version>
    29ec:	cmp	r0, #0
    29f0:	beq	2a00 <start_instance+0x200>
    29f4:	mvn	r0, #0
    29f8:	str	r0, [fp, #-12]
    29fc:	b	2af8 <start_instance+0x2f8>
    2a00:	ldr	r0, [fp, #-16]
    2a04:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a08:	ldr	r2, [fp, #-20]	; 0xffffffec
    2a0c:	add	r2, r2, #20
    2a10:	movw	r3, #5
    2a14:	bl	3018 <create_ring>
    2a18:	cmp	r0, #0
    2a1c:	beq	2a2c <start_instance+0x22c>
    2a20:	mvn	r0, #0
    2a24:	str	r0, [fp, #-12]
    2a28:	b	2af8 <start_instance+0x2f8>
    2a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a30:	ldr	r0, [r0, #92]	; 0x5c
    2a34:	movw	r1, #0
    2a38:	cmp	r0, r1
    2a3c:	beq	2a6c <start_instance+0x26c>
    2a40:	ldr	r0, [fp, #-16]
    2a44:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a48:	ldr	r2, [fp, #-20]	; 0xffffffec
    2a4c:	add	r2, r2, #52	; 0x34
    2a50:	movw	r3, #13
    2a54:	bl	3018 <create_ring>
    2a58:	cmp	r0, #0
    2a5c:	beq	2a6c <start_instance+0x26c>
    2a60:	mvn	r0, #0
    2a64:	str	r0, [fp, #-12]
    2a68:	b	2af8 <start_instance+0x2f8>
    2a6c:	ldr	r0, [fp, #-16]
    2a70:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a74:	bl	31e8 <mmap_rings>
    2a78:	cmp	r0, #0
    2a7c:	beq	2a8c <start_instance+0x28c>
    2a80:	mvn	r0, #0
    2a84:	str	r0, [fp, #-12]
    2a88:	b	2af8 <start_instance+0x2f8>
    2a8c:	ldr	r0, [fp, #-16]
    2a90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a94:	ldr	r2, [fp, #-20]	; 0xffffffec
    2a98:	add	r2, r2, #20
    2a9c:	bl	3304 <set_up_ring>
    2aa0:	cmp	r0, #0
    2aa4:	beq	2ab4 <start_instance+0x2b4>
    2aa8:	mvn	r0, #0
    2aac:	str	r0, [fp, #-12]
    2ab0:	b	2af8 <start_instance+0x2f8>
    2ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ab8:	ldr	r0, [r0, #92]	; 0x5c
    2abc:	movw	r1, #0
    2ac0:	cmp	r0, r1
    2ac4:	beq	2af0 <start_instance+0x2f0>
    2ac8:	ldr	r0, [fp, #-16]
    2acc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ad0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ad4:	add	r2, r2, #52	; 0x34
    2ad8:	bl	3304 <set_up_ring>
    2adc:	cmp	r0, #0
    2ae0:	beq	2af0 <start_instance+0x2f0>
    2ae4:	mvn	r0, #0
    2ae8:	str	r0, [fp, #-12]
    2aec:	b	2af8 <start_instance+0x2f8>
    2af0:	movw	r0, #0
    2af4:	str	r0, [fp, #-12]
    2af8:	ldr	r0, [fp, #-12]
    2afc:	sub	sp, fp, #8
    2b00:	pop	{r4, sl, fp, pc}
    2b04:	.word	0x000010df
    2b08:	.word	0x00001090
    2b0c:	.word	0x000010fb
    2b10:	.word	0x000010e4
    2b14:	.word	0x00001159
    2b18:	.word	0x00001164

00002b1c <reset_stats>:
    2b1c:	push	{fp, lr}
    2b20:	mov	fp, sp
    2b24:	sub	sp, sp, #32
    2b28:	str	r0, [fp, #-4]
    2b2c:	movw	r0, #8
    2b30:	str	r0, [sp, #12]
    2b34:	ldr	r0, [fp, #-4]
    2b38:	add	r0, r0, #48	; 0x30
    2b3c:	movw	r1, #0
    2b40:	and	r1, r1, #255	; 0xff
    2b44:	movw	r2, #96	; 0x60
    2b48:	bl	adc <memset@plt>
    2b4c:	ldr	r0, [fp, #-4]
    2b50:	ldr	r0, [r0, #24]
    2b54:	str	r0, [fp, #-8]
    2b58:	ldr	r0, [fp, #-8]
    2b5c:	movw	r1, #0
    2b60:	cmp	r0, r1
    2b64:	beq	2ba4 <reset_stats+0x88>
    2b68:	ldr	r0, [fp, #-8]
    2b6c:	ldr	r0, [r0, #4]
    2b70:	add	r1, sp, #16
    2b74:	movw	r2, #263	; 0x107
    2b78:	str	r1, [sp, #8]
    2b7c:	mov	r1, r2
    2b80:	movw	r2, #6
    2b84:	ldr	r3, [sp, #8]
    2b88:	add	ip, sp, #12
    2b8c:	str	ip, [sp]
    2b90:	bl	a28 <getsockopt@plt>
    2b94:	ldr	r0, [fp, #-8]
    2b98:	ldr	r0, [r0]
    2b9c:	str	r0, [fp, #-8]
    2ba0:	b	2b58 <reset_stats+0x3c>
    2ba4:	mov	sp, fp
    2ba8:	pop	{fp, pc}

00002bac <bind_instance_interface>:
    2bac:	push	{fp, lr}
    2bb0:	mov	fp, sp
    2bb4:	sub	sp, sp, #80	; 0x50
    2bb8:	str	r0, [fp, #-8]
    2bbc:	str	r1, [fp, #-12]
    2bc0:	movw	r0, #4
    2bc4:	str	r0, [sp, #40]	; 0x28
    2bc8:	sub	r0, fp, #32
    2bcc:	movw	r1, #0
    2bd0:	and	r1, r1, #255	; 0xff
    2bd4:	movw	r2, #20
    2bd8:	bl	adc <memset@plt>
    2bdc:	movw	r0, #17
    2be0:	strh	r0, [fp, #-32]	; 0xffffffe0
    2be4:	ldr	r0, [fp, #-12]
    2be8:	ldr	r0, [r0, #88]	; 0x58
    2bec:	str	r0, [fp, #-28]	; 0xffffffe4
    2bf0:	movw	r0, #3
    2bf4:	uxth	r0, r0
    2bf8:	bl	a10 <htons@plt>
    2bfc:	strh	r0, [fp, #-30]	; 0xffffffe2
    2c00:	ldr	r0, [fp, #-12]
    2c04:	ldr	r0, [r0, #4]
    2c08:	sub	r1, fp, #32
    2c0c:	str	r1, [sp, #36]	; 0x24
    2c10:	ldr	r1, [sp, #36]	; 0x24
    2c14:	movw	r2, #20
    2c18:	bl	ad0 <bind@plt>
    2c1c:	cmn	r0, #1
    2c20:	bne	2c88 <bind_instance_interface+0xdc>
    2c24:	ldr	r0, [fp, #-8]
    2c28:	add	r0, r0, #148	; 0x94
    2c2c:	ldr	r1, [fp, #-12]
    2c30:	ldr	r1, [r1, #84]	; 0x54
    2c34:	str	r0, [sp, #32]
    2c38:	str	r1, [sp, #28]
    2c3c:	bl	ab8 <__errno_location@plt>
    2c40:	ldr	r0, [r0]
    2c44:	bl	a64 <strerror@plt>
    2c48:	ldr	r1, [pc, #228]	; 2d34 <bind_instance_interface+0x188>
    2c4c:	add	r2, pc, r1
    2c50:	ldr	r1, [pc, #224]	; 2d38 <bind_instance_interface+0x18c>
    2c54:	add	r3, pc, r1
    2c58:	ldr	r1, [sp, #32]
    2c5c:	str	r0, [sp, #24]
    2c60:	mov	r0, r1
    2c64:	movw	r1, #256	; 0x100
    2c68:	ldr	ip, [sp, #28]
    2c6c:	str	ip, [sp]
    2c70:	ldr	lr, [sp, #24]
    2c74:	str	lr, [sp, #4]
    2c78:	bl	ac4 <snprintf@plt>
    2c7c:	mvn	r1, #0
    2c80:	str	r1, [fp, #-4]
    2c84:	b	2d20 <bind_instance_interface+0x174>
    2c88:	ldr	r0, [fp, #-12]
    2c8c:	ldr	r0, [r0, #4]
    2c90:	sub	r1, fp, #36	; 0x24
    2c94:	movw	r2, #1
    2c98:	str	r1, [sp, #20]
    2c9c:	mov	r1, r2
    2ca0:	movw	r2, #4
    2ca4:	ldr	r3, [sp, #20]
    2ca8:	add	ip, sp, #40	; 0x28
    2cac:	str	ip, [sp]
    2cb0:	bl	a28 <getsockopt@plt>
    2cb4:	cmp	r0, #0
    2cb8:	bne	2cc8 <bind_instance_interface+0x11c>
    2cbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2cc0:	cmp	r0, #0
    2cc4:	beq	2d18 <bind_instance_interface+0x16c>
    2cc8:	ldr	r0, [fp, #-8]
    2ccc:	add	r0, r0, #148	; 0x94
    2cd0:	str	r0, [sp, #16]
    2cd4:	bl	ab8 <__errno_location@plt>
    2cd8:	ldr	r0, [r0]
    2cdc:	bl	a64 <strerror@plt>
    2ce0:	ldr	r1, [pc, #68]	; 2d2c <bind_instance_interface+0x180>
    2ce4:	add	r2, pc, r1
    2ce8:	ldr	r1, [pc, #64]	; 2d30 <bind_instance_interface+0x184>
    2cec:	add	r3, pc, r1
    2cf0:	ldr	r1, [sp, #16]
    2cf4:	str	r0, [sp, #12]
    2cf8:	mov	r0, r1
    2cfc:	movw	r1, #256	; 0x100
    2d00:	ldr	ip, [sp, #12]
    2d04:	str	ip, [sp]
    2d08:	bl	ac4 <snprintf@plt>
    2d0c:	mvn	r1, #0
    2d10:	str	r1, [fp, #-4]
    2d14:	b	2d20 <bind_instance_interface+0x174>
    2d18:	movw	r0, #0
    2d1c:	str	r0, [fp, #-4]
    2d20:	ldr	r0, [fp, #-4]
    2d24:	mov	sp, fp
    2d28:	pop	{fp, pc}
    2d2c:	.word	0x00000de8
    2d30:	.word	0x00000dc8
    2d34:	.word	0x00000e56
    2d38:	.word	0x00000e60

00002d3c <iface_get_arptype>:
    2d3c:	push	{fp, lr}
    2d40:	mov	fp, sp
    2d44:	sub	sp, sp, #48	; 0x30
    2d48:	add	r1, sp, #8
    2d4c:	str	r0, [fp, #-8]
    2d50:	mov	r0, r1
    2d54:	movw	r2, #0
    2d58:	and	r2, r2, #255	; 0xff
    2d5c:	str	r1, [sp, #4]
    2d60:	mov	r1, r2
    2d64:	movw	r2, #32
    2d68:	bl	adc <memset@plt>
    2d6c:	ldr	r0, [sp, #4]
    2d70:	ldr	r1, [fp, #-8]
    2d74:	ldr	r1, [r1, #84]	; 0x54
    2d78:	movw	r2, #16
    2d7c:	bl	ae8 <strncpy@plt>
    2d80:	ldr	r1, [fp, #-8]
    2d84:	ldr	r1, [r1, #4]
    2d88:	str	r0, [sp]
    2d8c:	mov	r0, r1
    2d90:	movw	r1, #35111	; 0x8927
    2d94:	add	r2, sp, #8
    2d98:	bl	a34 <ioctl@plt>
    2d9c:	cmn	r0, #1
    2da0:	bne	2dcc <iface_get_arptype+0x90>
    2da4:	bl	ab8 <__errno_location@plt>
    2da8:	ldr	r0, [r0]
    2dac:	cmp	r0, #19
    2db0:	bne	2dc0 <iface_get_arptype+0x84>
    2db4:	mvn	r0, #2
    2db8:	str	r0, [fp, #-4]
    2dbc:	b	2dd4 <iface_get_arptype+0x98>
    2dc0:	mvn	r0, #0
    2dc4:	str	r0, [fp, #-4]
    2dc8:	b	2dd4 <iface_get_arptype+0x98>
    2dcc:	ldrh	r0, [sp, #24]
    2dd0:	str	r0, [fp, #-4]
    2dd4:	ldr	r0, [fp, #-4]
    2dd8:	mov	sp, fp
    2ddc:	pop	{fp, pc}

00002de0 <determine_version>:
    2de0:	push	{fp, lr}
    2de4:	mov	fp, sp
    2de8:	sub	sp, sp, #72	; 0x48
    2dec:	str	r0, [fp, #-8]
    2df0:	str	r1, [fp, #-12]
    2df4:	movw	r0, #1
    2df8:	str	r0, [fp, #-20]	; 0xffffffec
    2dfc:	movw	r0, #4
    2e00:	str	r0, [fp, #-16]
    2e04:	ldr	r0, [fp, #-12]
    2e08:	ldr	r0, [r0, #4]
    2e0c:	sub	r1, fp, #20
    2e10:	movw	r2, #263	; 0x107
    2e14:	str	r1, [fp, #-24]	; 0xffffffe8
    2e18:	mov	r1, r2
    2e1c:	movw	r2, #11
    2e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e24:	sub	ip, fp, #16
    2e28:	str	ip, [sp]
    2e2c:	bl	a28 <getsockopt@plt>
    2e30:	cmp	r0, #0
    2e34:	bge	2e7c <determine_version+0x9c>
    2e38:	ldr	r0, [fp, #-8]
    2e3c:	add	r0, r0, #148	; 0x94
    2e40:	str	r0, [fp, #-28]	; 0xffffffe4
    2e44:	bl	ab8 <__errno_location@plt>
    2e48:	ldr	r0, [r0]
    2e4c:	bl	a64 <strerror@plt>
    2e50:	ldr	r1, [pc, #444]	; 3014 <determine_version+0x234>
    2e54:	add	r2, pc, r1
    2e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2e5c:	str	r0, [fp, #-32]	; 0xffffffe0
    2e60:	mov	r0, r1
    2e64:	movw	r1, #256	; 0x100
    2e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2e6c:	bl	ac4 <snprintf@plt>
    2e70:	mvn	r1, #0
    2e74:	str	r1, [fp, #-4]
    2e78:	b	2ff8 <determine_version+0x218>
    2e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e80:	ldr	r1, [fp, #-12]
    2e84:	str	r0, [r1, #12]
    2e88:	movw	r0, #1
    2e8c:	str	r0, [fp, #-20]	; 0xffffffec
    2e90:	ldr	r0, [fp, #-12]
    2e94:	ldr	r0, [r0, #4]
    2e98:	sub	r1, fp, #20
    2e9c:	movw	r2, #263	; 0x107
    2ea0:	str	r1, [sp, #36]	; 0x24
    2ea4:	mov	r1, r2
    2ea8:	movw	r2, #10
    2eac:	ldr	r3, [sp, #36]	; 0x24
    2eb0:	movw	ip, #4
    2eb4:	str	ip, [sp]
    2eb8:	bl	9bc <setsockopt@plt>
    2ebc:	cmp	r0, #0
    2ec0:	bge	2f08 <determine_version+0x128>
    2ec4:	ldr	r0, [fp, #-8]
    2ec8:	add	r0, r0, #148	; 0x94
    2ecc:	str	r0, [sp, #32]
    2ed0:	bl	ab8 <__errno_location@plt>
    2ed4:	ldr	r0, [r0]
    2ed8:	bl	a64 <strerror@plt>
    2edc:	ldr	r1, [pc, #300]	; 3010 <determine_version+0x230>
    2ee0:	add	r2, pc, r1
    2ee4:	ldr	r1, [sp, #32]
    2ee8:	str	r0, [sp, #28]
    2eec:	mov	r0, r1
    2ef0:	movw	r1, #256	; 0x100
    2ef4:	ldr	r3, [sp, #28]
    2ef8:	bl	ac4 <snprintf@plt>
    2efc:	mvn	r1, #0
    2f00:	str	r1, [fp, #-4]
    2f04:	b	2ff8 <determine_version+0x218>
    2f08:	ldr	r0, [fp, #-12]
    2f0c:	movw	r1, #1
    2f10:	str	r1, [r0, #8]
    2f14:	movw	r0, #4
    2f18:	str	r0, [fp, #-20]	; 0xffffffec
    2f1c:	ldr	r1, [fp, #-12]
    2f20:	ldr	r1, [r1, #4]
    2f24:	sub	r2, fp, #20
    2f28:	str	r0, [sp, #24]
    2f2c:	mov	r0, r1
    2f30:	movw	r1, #263	; 0x107
    2f34:	movw	r3, #12
    2f38:	str	r2, [sp, #20]
    2f3c:	mov	r2, r3
    2f40:	ldr	r3, [sp, #20]
    2f44:	ldr	ip, [sp, #24]
    2f48:	str	ip, [sp]
    2f4c:	bl	9bc <setsockopt@plt>
    2f50:	cmp	r0, #0
    2f54:	bge	2fac <determine_version+0x1cc>
    2f58:	ldr	r0, [fp, #-8]
    2f5c:	add	r0, r0, #148	; 0x94
    2f60:	ldr	r3, [fp, #-20]	; 0xffffffec
    2f64:	str	r0, [sp, #16]
    2f68:	str	r3, [sp, #12]
    2f6c:	bl	ab8 <__errno_location@plt>
    2f70:	ldr	r0, [r0]
    2f74:	bl	a64 <strerror@plt>
    2f78:	ldr	r1, [pc, #140]	; 300c <determine_version+0x22c>
    2f7c:	add	r2, pc, r1
    2f80:	ldr	r1, [sp, #16]
    2f84:	str	r0, [sp, #8]
    2f88:	mov	r0, r1
    2f8c:	movw	r1, #256	; 0x100
    2f90:	ldr	r3, [sp, #12]
    2f94:	ldr	ip, [sp, #8]
    2f98:	str	ip, [sp]
    2f9c:	bl	ac4 <snprintf@plt>
    2fa0:	mvn	r1, #0
    2fa4:	str	r1, [fp, #-4]
    2fa8:	b	2ff8 <determine_version+0x218>
    2fac:	ldr	r0, [fp, #-8]
    2fb0:	ldr	r0, [r0, #20]
    2fb4:	cmp	r0, #0
    2fb8:	beq	2ff0 <determine_version+0x210>
    2fbc:	ldr	r0, [pc, #68]	; 3008 <determine_version+0x228>
    2fc0:	add	r0, pc, r0
    2fc4:	ldr	r1, [fp, #-12]
    2fc8:	ldr	r1, [r1, #8]
    2fcc:	bl	9d4 <printf@plt>
    2fd0:	ldr	r1, [pc, #44]	; 3004 <determine_version+0x224>
    2fd4:	add	r1, pc, r1
    2fd8:	ldr	r2, [fp, #-12]
    2fdc:	ldr	r2, [r2, #12]
    2fe0:	str	r0, [sp, #4]
    2fe4:	mov	r0, r1
    2fe8:	mov	r1, r2
    2fec:	bl	9d4 <printf@plt>
    2ff0:	movw	r0, #0
    2ff4:	str	r0, [fp, #-4]
    2ff8:	ldr	r0, [fp, #-4]
    2ffc:	mov	sp, fp
    3000:	pop	{fp, pc}
    3004:	.word	0x00000bb1
    3008:	.word	0x00000bb8
    300c:	.word	0x00000bc4
    3010:	.word	0x00000c2e
    3014:	.word	0x00000c8b

00003018 <create_ring>:
    3018:	push	{fp, lr}
    301c:	mov	fp, sp
    3020:	sub	sp, sp, #48	; 0x30
    3024:	str	r0, [fp, #-8]
    3028:	str	r1, [fp, #-12]
    302c:	str	r2, [fp, #-16]
    3030:	str	r3, [fp, #-20]	; 0xffffffec
    3034:	movw	r0, #3
    3038:	str	r0, [sp, #20]
    303c:	ldr	r0, [sp, #20]
    3040:	cmp	r0, #0
    3044:	blt	31a0 <create_ring+0x188>
    3048:	ldr	r0, [fp, #-8]
    304c:	ldr	r1, [fp, #-16]
    3050:	ldr	r2, [fp, #-12]
    3054:	ldr	r2, [r2, #12]
    3058:	ldr	r3, [sp, #20]
    305c:	bl	34e4 <calculate_layout>
    3060:	cmp	r0, #0
    3064:	beq	3074 <create_ring+0x5c>
    3068:	mvn	r0, #0
    306c:	str	r0, [fp, #-4]
    3070:	b	31c8 <create_ring+0x1b0>
    3074:	ldr	r0, [fp, #-12]
    3078:	ldr	r0, [r0, #4]
    307c:	ldr	r2, [fp, #-20]	; 0xffffffec
    3080:	ldr	r1, [fp, #-16]
    3084:	movw	r3, #263	; 0x107
    3088:	str	r1, [sp, #16]
    308c:	mov	r1, r3
    3090:	ldr	r3, [sp, #16]
    3094:	movw	ip, #16
    3098:	str	ip, [sp]
    309c:	bl	9bc <setsockopt@plt>
    30a0:	str	r0, [sp, #24]
    30a4:	ldr	r0, [sp, #24]
    30a8:	cmp	r0, #0
    30ac:	beq	313c <create_ring+0x124>
    30b0:	bl	ab8 <__errno_location@plt>
    30b4:	ldr	r0, [r0]
    30b8:	cmp	r0, #12
    30bc:	bne	30ec <create_ring+0xd4>
    30c0:	ldr	r0, [fp, #-8]
    30c4:	ldr	r0, [r0, #20]
    30c8:	cmp	r0, #0
    30cc:	beq	30e8 <create_ring+0xd0>
    30d0:	ldr	r0, [pc, #268]	; 31e4 <create_ring+0x1cc>
    30d4:	add	r0, pc, r0
    30d8:	ldr	r1, [fp, #-12]
    30dc:	ldr	r1, [r1, #84]	; 0x54
    30e0:	ldr	r2, [sp, #20]
    30e4:	bl	9d4 <printf@plt>
    30e8:	b	318c <create_ring+0x174>
    30ec:	ldr	r0, [fp, #-8]
    30f0:	add	r0, r0, #148	; 0x94
    30f4:	str	r0, [sp, #12]
    30f8:	bl	ab8 <__errno_location@plt>
    30fc:	ldr	r0, [r0]
    3100:	bl	a64 <strerror@plt>
    3104:	ldr	r1, [pc, #208]	; 31dc <create_ring+0x1c4>
    3108:	add	r2, pc, r1
    310c:	ldr	r1, [pc, #204]	; 31e0 <create_ring+0x1c8>
    3110:	add	r3, pc, r1
    3114:	ldr	r1, [sp, #12]
    3118:	str	r0, [sp, #8]
    311c:	mov	r0, r1
    3120:	movw	r1, #256	; 0x100
    3124:	ldr	ip, [sp, #8]
    3128:	str	ip, [sp]
    312c:	bl	ac4 <snprintf@plt>
    3130:	mvn	r1, #0
    3134:	str	r1, [fp, #-4]
    3138:	b	31c8 <create_ring+0x1b0>
    313c:	ldr	r0, [fp, #-16]
    3140:	ldr	r0, [r0]
    3144:	ldr	r1, [fp, #-16]
    3148:	ldr	r1, [r1, #4]
    314c:	mul	r0, r0, r1
    3150:	ldr	r1, [fp, #-16]
    3154:	str	r0, [r1, #16]
    3158:	ldr	r0, [fp, #-8]
    315c:	ldr	r0, [r0, #20]
    3160:	cmp	r0, #0
    3164:	beq	3180 <create_ring+0x168>
    3168:	ldr	r0, [pc, #104]	; 31d8 <create_ring+0x1c0>
    316c:	add	r0, pc, r0
    3170:	ldr	r1, [fp, #-20]	; 0xffffffec
    3174:	ldr	r2, [fp, #-16]
    3178:	ldr	r2, [r2, #16]
    317c:	bl	9d4 <printf@plt>
    3180:	movw	r0, #0
    3184:	str	r0, [fp, #-4]
    3188:	b	31c8 <create_ring+0x1b0>
    318c:	ldr	r0, [sp, #20]
    3190:	mvn	r1, #0
    3194:	add	r0, r0, r1
    3198:	str	r0, [sp, #20]
    319c:	b	303c <create_ring+0x24>
    31a0:	ldr	r0, [pc, #44]	; 31d4 <create_ring+0x1bc>
    31a4:	add	r2, pc, r0
    31a8:	ldr	r0, [fp, #-8]
    31ac:	add	r0, r0, #148	; 0x94
    31b0:	ldr	r1, [fp, #-12]
    31b4:	ldr	r3, [r1, #84]	; 0x54
    31b8:	movw	r1, #256	; 0x100
    31bc:	bl	ac4 <snprintf@plt>
    31c0:	mvn	r1, #0
    31c4:	str	r1, [fp, #-4]
    31c8:	ldr	r0, [fp, #-4]
    31cc:	mov	sp, fp
    31d0:	pop	{fp, pc}
    31d4:	.word	0x00000aae
    31d8:	.word	0x00000ab5
    31dc:	.word	0x00000ad8
    31e0:	.word	0x00000b05
    31e4:	.word	0x00000ac4

000031e8 <mmap_rings>:
    31e8:	push	{fp, lr}
    31ec:	mov	fp, sp
    31f0:	sub	sp, sp, #40	; 0x28
    31f4:	str	r0, [fp, #-8]
    31f8:	str	r1, [fp, #-12]
    31fc:	ldr	r0, [fp, #-12]
    3200:	ldr	r0, [r0, #36]	; 0x24
    3204:	ldr	r1, [fp, #-12]
    3208:	ldr	r1, [r1, #68]	; 0x44
    320c:	add	r0, r0, r1
    3210:	str	r0, [fp, #-16]
    3214:	ldr	r1, [fp, #-16]
    3218:	ldr	r0, [fp, #-12]
    321c:	ldr	r0, [r0, #4]
    3220:	movw	r2, #0
    3224:	str	r0, [sp, #20]
    3228:	mov	r0, r2
    322c:	movw	r3, #3
    3230:	str	r2, [sp, #16]
    3234:	mov	r2, r3
    3238:	movw	r3, #1
    323c:	ldr	ip, [sp, #20]
    3240:	str	ip, [sp]
    3244:	ldr	lr, [sp, #16]
    3248:	str	lr, [sp, #4]
    324c:	bl	a94 <mmap@plt>
    3250:	ldr	r1, [fp, #-12]
    3254:	str	r0, [r1, #16]
    3258:	ldr	r0, [fp, #-12]
    325c:	ldr	r0, [r0, #16]
    3260:	mvn	r1, #0
    3264:	cmp	r0, r1
    3268:	bne	32bc <mmap_rings+0xd4>
    326c:	ldr	r0, [fp, #-8]
    3270:	add	r0, r0, #148	; 0x94
    3274:	str	r0, [sp, #12]
    3278:	bl	ab8 <__errno_location@plt>
    327c:	ldr	r0, [r0]
    3280:	bl	a64 <strerror@plt>
    3284:	ldr	r1, [pc, #112]	; 32fc <mmap_rings+0x114>
    3288:	add	r2, pc, r1
    328c:	ldr	r1, [pc, #108]	; 3300 <mmap_rings+0x118>
    3290:	add	r3, pc, r1
    3294:	ldr	r1, [sp, #12]
    3298:	str	r0, [sp, #8]
    329c:	mov	r0, r1
    32a0:	movw	r1, #256	; 0x100
    32a4:	ldr	ip, [sp, #8]
    32a8:	str	ip, [sp]
    32ac:	bl	ac4 <snprintf@plt>
    32b0:	mvn	r1, #0
    32b4:	str	r1, [fp, #-4]
    32b8:	b	32f0 <mmap_rings+0x108>
    32bc:	ldr	r0, [fp, #-12]
    32c0:	ldr	r0, [r0, #16]
    32c4:	ldr	r1, [fp, #-12]
    32c8:	str	r0, [r1, #40]	; 0x28
    32cc:	ldr	r0, [fp, #-12]
    32d0:	ldr	r0, [r0, #16]
    32d4:	ldr	r1, [fp, #-12]
    32d8:	ldr	r1, [r1, #68]	; 0x44
    32dc:	add	r0, r0, r1
    32e0:	ldr	r1, [fp, #-12]
    32e4:	str	r0, [r1, #72]	; 0x48
    32e8:	movw	r0, #0
    32ec:	str	r0, [fp, #-4]
    32f0:	ldr	r0, [fp, #-4]
    32f4:	mov	sp, fp
    32f8:	pop	{fp, pc}
    32fc:	.word	0x00000aac
    3300:	.word	0x00000ac4

00003304 <set_up_ring>:
    3304:	push	{fp, lr}
    3308:	mov	fp, sp
    330c:	sub	sp, sp, #48	; 0x30
    3310:	str	r0, [fp, #-8]
    3314:	str	r1, [fp, #-12]
    3318:	str	r2, [fp, #-16]
    331c:	ldr	r0, [fp, #-16]
    3320:	ldr	r0, [r0, #12]
    3324:	movw	r1, #8
    3328:	bl	98c <calloc@plt>
    332c:	ldr	r1, [fp, #-16]
    3330:	str	r0, [r1, #24]
    3334:	ldr	r0, [fp, #-16]
    3338:	ldr	r0, [r0, #24]
    333c:	movw	r1, #0
    3340:	cmp	r0, r1
    3344:	bne	338c <set_up_ring+0x88>
    3348:	ldr	r0, [pc, #396]	; 34dc <set_up_ring+0x1d8>
    334c:	add	r2, pc, r0
    3350:	ldr	r0, [pc, #392]	; 34e0 <set_up_ring+0x1dc>
    3354:	add	r3, pc, r0
    3358:	ldr	r0, [fp, #-8]
    335c:	add	r0, r0, #148	; 0x94
    3360:	ldr	r1, [fp, #-12]
    3364:	ldr	r1, [r1, #84]	; 0x54
    3368:	movw	ip, #256	; 0x100
    336c:	str	r1, [sp, #8]
    3370:	mov	r1, ip
    3374:	ldr	ip, [sp, #8]
    3378:	str	ip, [sp]
    337c:	bl	ac4 <snprintf@plt>
    3380:	mvn	r1, #1
    3384:	str	r1, [fp, #-4]
    3388:	b	34d0 <set_up_ring+0x1cc>
    338c:	movw	r0, #0
    3390:	str	r0, [fp, #-20]	; 0xffffffec
    3394:	str	r0, [sp, #24]
    3398:	ldr	r0, [sp, #24]
    339c:	ldr	r1, [fp, #-16]
    33a0:	ldr	r1, [r1, #4]
    33a4:	cmp	r0, r1
    33a8:	bcs	349c <set_up_ring+0x198>
    33ac:	ldr	r0, [sp, #24]
    33b0:	ldr	r1, [fp, #-16]
    33b4:	ldr	r1, [r1]
    33b8:	mul	r0, r0, r1
    33bc:	str	r0, [sp, #20]
    33c0:	movw	r0, #0
    33c4:	str	r0, [sp, #16]
    33c8:	ldr	r0, [sp, #16]
    33cc:	ldr	r1, [fp, #-16]
    33d0:	ldr	r1, [r1]
    33d4:	ldr	r2, [fp, #-16]
    33d8:	ldr	r2, [r2, #8]
    33dc:	udiv	r1, r1, r2
    33e0:	cmp	r0, r1
    33e4:	movw	r0, #0
    33e8:	str	r0, [sp, #4]
    33ec:	bcs	340c <set_up_ring+0x108>
    33f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    33f4:	ldr	r1, [fp, #-16]
    33f8:	ldr	r1, [r1, #12]
    33fc:	cmp	r0, r1
    3400:	movw	r0, #0
    3404:	movcc	r0, #1
    3408:	str	r0, [sp, #4]
    340c:	ldr	r0, [sp, #4]
    3410:	tst	r0, #1
    3414:	beq	3488 <set_up_ring+0x184>
    3418:	ldr	r0, [sp, #16]
    341c:	ldr	r1, [fp, #-16]
    3420:	ldr	r1, [r1, #8]
    3424:	mul	r0, r0, r1
    3428:	str	r0, [sp, #12]
    342c:	ldr	r0, [fp, #-16]
    3430:	ldr	r1, [sp, #20]
    3434:	ldr	r2, [r0, #20]
    3438:	ldr	r0, [r0, #24]
    343c:	add	r1, r2, r1
    3440:	ldr	r2, [sp, #12]
    3444:	add	r1, r1, r2
    3448:	ldr	r2, [fp, #-20]	; 0xffffffec
    344c:	add	r0, r0, r2, lsl #3
    3450:	str	r1, [r0, #4]
    3454:	ldr	r0, [fp, #-16]
    3458:	ldr	r0, [r0, #24]
    345c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3460:	add	r0, r0, r1, lsl #3
    3464:	add	r1, r0, #8
    3468:	str	r1, [r0]
    346c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3470:	add	r0, r0, #1
    3474:	str	r0, [fp, #-20]	; 0xffffffec
    3478:	ldr	r0, [sp, #16]
    347c:	add	r0, r0, #1
    3480:	str	r0, [sp, #16]
    3484:	b	33c8 <set_up_ring+0xc4>
    3488:	b	348c <set_up_ring+0x188>
    348c:	ldr	r0, [sp, #24]
    3490:	add	r0, r0, #1
    3494:	str	r0, [sp, #24]
    3498:	b	3398 <set_up_ring+0x94>
    349c:	ldr	r0, [fp, #-16]
    34a0:	ldr	r1, [r0, #12]
    34a4:	ldr	r0, [r0, #24]
    34a8:	mov	r2, r0
    34ac:	sub	r1, r1, #1
    34b0:	add	r0, r0, r1, lsl #3
    34b4:	str	r2, [r0]
    34b8:	ldr	r0, [fp, #-16]
    34bc:	ldr	r0, [r0, #24]
    34c0:	ldr	r1, [fp, #-16]
    34c4:	str	r0, [r1, #28]
    34c8:	movw	r0, #0
    34cc:	str	r0, [fp, #-4]
    34d0:	ldr	r0, [fp, #-4]
    34d4:	mov	sp, fp
    34d8:	pop	{fp, pc}
    34dc:	.word	0x00000a13
    34e0:	.word	0x00000a45

000034e4 <calculate_layout>:
    34e4:	push	{r4, sl, fp, lr}
    34e8:	add	fp, sp, #8
    34ec:	sub	sp, sp, #64	; 0x40
    34f0:	str	r0, [fp, #-16]
    34f4:	str	r1, [fp, #-20]	; 0xffffffec
    34f8:	str	r2, [fp, #-24]	; 0xffffffe8
    34fc:	str	r3, [fp, #-28]	; 0xffffffe4
    3500:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3504:	add	r0, r0, #16
    3508:	sub	r0, r0, #1
    350c:	mvn	r1, #15
    3510:	and	r0, r0, r1
    3514:	add	r0, r0, #20
    3518:	str	r0, [fp, #-32]	; 0xffffffe0
    351c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3520:	add	r0, r0, #14
    3524:	add	r0, r0, #16
    3528:	sub	r0, r0, #1
    352c:	and	r0, r0, r1
    3530:	add	r0, r0, #4
    3534:	str	r0, [sp, #36]	; 0x24
    3538:	ldr	r0, [sp, #36]	; 0x24
    353c:	sub	r0, r0, #14
    3540:	ldr	r2, [fp, #-16]
    3544:	ldr	r2, [r2, #8]
    3548:	add	r0, r0, r2
    354c:	add	r0, r0, #16
    3550:	sub	r0, r0, #1
    3554:	and	r0, r0, r1
    3558:	ldr	r1, [fp, #-20]	; 0xffffffec
    355c:	str	r0, [r1, #8]
    3560:	bl	aac <getpagesize@plt>
    3564:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3568:	lsl	r0, r0, r1
    356c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3570:	str	r0, [r1]
    3574:	ldr	r0, [fp, #-20]	; 0xffffffec
    3578:	ldr	r0, [r0]
    357c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3580:	ldr	r1, [r1, #8]
    3584:	cmp	r0, r1
    3588:	bcs	35a0 <calculate_layout+0xbc>
    358c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3590:	ldr	r1, [r0]
    3594:	lsl	r1, r1, #1
    3598:	str	r1, [r0]
    359c:	b	3574 <calculate_layout+0x90>
    35a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    35a4:	ldr	r0, [r0]
    35a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    35ac:	ldr	r1, [r1, #8]
    35b0:	udiv	r0, r0, r1
    35b4:	str	r0, [sp, #32]
    35b8:	ldr	r0, [sp, #32]
    35bc:	cmp	r0, #0
    35c0:	bne	3620 <calculate_layout+0x13c>
    35c4:	ldr	r0, [pc, #364]	; 3738 <calculate_layout+0x254>
    35c8:	add	r2, pc, r0
    35cc:	ldr	r0, [pc, #360]	; 373c <calculate_layout+0x258>
    35d0:	add	r3, pc, r0
    35d4:	ldr	r0, [fp, #-16]
    35d8:	add	r0, r0, #148	; 0x94
    35dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    35e0:	ldr	r1, [r1]
    35e4:	ldr	ip, [fp, #-20]	; 0xffffffec
    35e8:	ldr	ip, [ip, #8]
    35ec:	ldr	lr, [fp, #-16]
    35f0:	ldr	lr, [lr]
    35f4:	movw	r4, #256	; 0x100
    35f8:	str	r1, [sp, #28]
    35fc:	mov	r1, r4
    3600:	ldr	r4, [sp, #28]
    3604:	str	r4, [sp]
    3608:	str	ip, [sp, #4]
    360c:	str	lr, [sp, #8]
    3610:	bl	ac4 <snprintf@plt>
    3614:	mvn	r1, #0
    3618:	str	r1, [fp, #-12]
    361c:	b	3718 <calculate_layout+0x234>
    3620:	ldr	r0, [fp, #-16]
    3624:	ldr	r0, [r0, #16]
    3628:	ldr	r1, [fp, #-20]	; 0xffffffec
    362c:	ldr	r1, [r1, #8]
    3630:	udiv	r0, r0, r1
    3634:	ldr	r1, [fp, #-20]	; 0xffffffec
    3638:	str	r0, [r1, #12]
    363c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3640:	ldr	r0, [r0, #12]
    3644:	ldr	r1, [sp, #32]
    3648:	udiv	r0, r0, r1
    364c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3650:	str	r0, [r1, #4]
    3654:	ldr	r0, [fp, #-20]	; 0xffffffec
    3658:	ldr	r0, [r0, #4]
    365c:	ldr	r1, [sp, #32]
    3660:	mul	r0, r0, r1
    3664:	ldr	r1, [fp, #-20]	; 0xffffffec
    3668:	str	r0, [r1, #12]
    366c:	ldr	r0, [fp, #-16]
    3670:	ldr	r0, [r0, #20]
    3674:	cmp	r0, #0
    3678:	beq	3710 <calculate_layout+0x22c>
    367c:	ldr	r0, [pc, #176]	; 3734 <calculate_layout+0x250>
    3680:	add	r0, pc, r0
    3684:	bl	9d4 <printf@plt>
    3688:	ldr	r1, [pc, #160]	; 3730 <calculate_layout+0x24c>
    368c:	add	r1, pc, r1
    3690:	ldr	r2, [fp, #-20]	; 0xffffffec
    3694:	ldr	r2, [r2, #8]
    3698:	str	r0, [sp, #24]
    369c:	mov	r0, r1
    36a0:	mov	r1, r2
    36a4:	bl	9d4 <printf@plt>
    36a8:	ldr	r1, [pc, #124]	; 372c <calculate_layout+0x248>
    36ac:	add	r1, pc, r1
    36b0:	ldr	r2, [fp, #-20]	; 0xffffffec
    36b4:	ldr	r2, [r2, #12]
    36b8:	str	r0, [sp, #20]
    36bc:	mov	r0, r1
    36c0:	mov	r1, r2
    36c4:	bl	9d4 <printf@plt>
    36c8:	ldr	r1, [pc, #88]	; 3728 <calculate_layout+0x244>
    36cc:	add	r1, pc, r1
    36d0:	ldr	r2, [fp, #-20]	; 0xffffffec
    36d4:	ldr	r2, [r2]
    36d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    36dc:	str	r0, [sp, #16]
    36e0:	mov	r0, r1
    36e4:	mov	r1, r2
    36e8:	mov	r2, r3
    36ec:	bl	9d4 <printf@plt>
    36f0:	ldr	r1, [pc, #44]	; 3724 <calculate_layout+0x240>
    36f4:	add	r1, pc, r1
    36f8:	ldr	r2, [fp, #-20]	; 0xffffffec
    36fc:	ldr	r2, [r2, #4]
    3700:	str	r0, [sp, #12]
    3704:	mov	r0, r1
    3708:	mov	r1, r2
    370c:	bl	9d4 <printf@plt>
    3710:	movw	r0, #0
    3714:	str	r0, [fp, #-12]
    3718:	ldr	r0, [fp, #-12]
    371c:	sub	sp, fp, #8
    3720:	pop	{r4, sl, fp, pc}
    3724:	.word	0x0000062e
    3728:	.word	0x00000639
    372c:	.word	0x00000647
    3730:	.word	0x00000655
    3734:	.word	0x0000064f
    3738:	.word	0x000006ca
    373c:	.word	0x000006ee

Disassembly of section .fini:

00003740 <_fini>:
    3740:	push	{r3, lr}
    3744:	pop	{r3, pc}
