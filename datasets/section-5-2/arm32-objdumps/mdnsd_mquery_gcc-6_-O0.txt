
../repos/mdnsd/src/.libs/mquery:     file format elf32-littlearm


Disassembly of section .init:

0001087c <.init>:
   1087c:	push	{r3, lr}
   10880:	bl	10a34 <close@plt+0x48>
   10884:	pop	{r3, pc}

Disassembly of section .plt:

00010888 <mdnsd_new@plt-0x14>:
   10888:	push	{lr}		; (str lr, [sp, #-4]!)
   1088c:	ldr	lr, [pc, #4]	; 10898 <mdnsd_new@plt-0x4>
   10890:	add	lr, pc, lr
   10894:	ldr	pc, [lr, #8]!
   10898:	andeq	r1, r1, r8, ror #14

0001089c <mdnsd_new@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1896]!	; 0x768

000108a8 <setsockopt@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1888]!	; 0x760

000108b4 <printf@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1880]!	; 0x758

000108c0 <time@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1872]!	; 0x750

000108cc <inet_ntoa@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1864]!	; 0x748

000108d8 <select@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1856]!	; 0x740

000108e4 <recvfrom@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1848]!	; 0x738

000108f0 <puts@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1840]!	; 0x730

000108fc <__libc_start_main@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1832]!	; 0x728

00010908 <strerror@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1824]!	; 0x720

00010914 <__gmon_start__@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1816]!	; 0x718

00010920 <getopt@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1808]!	; 0x710

0001092c <message_packet@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1800]!	; 0x708

00010938 <message_parse@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1792]!	; 0x700

00010944 <__errno_location@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1784]!	; 0x6f8

00010950 <bind@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1776]!	; 0x6f0

0001095c <mdnsd_log@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1768]!	; 0x6e8

00010968 <memset@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1760]!	; 0x6e0

00010974 <sendto@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010980 <mdnsd_sleep@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1744]!	; 0x6d0

0001098c <message_packet_len@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1736]!	; 0x6c8

00010998 <atoi@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1728]!	; 0x6c0

000109a4 <mdnsd_in@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1720]!	; 0x6b8

000109b0 <mdnsd_out@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1712]!	; 0x6b0

000109bc <socket@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c8 <mdnsd_query@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1696]!	; 0x6a0

000109d4 <inet_addr@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1688]!	; 0x698

000109e0 <abort@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1680]!	; 0x690

000109ec <close@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1672]!	; 0x688

Disassembly of section .text:

000109f8 <.text>:
   109f8:	mov	fp, #0
   109fc:	mov	lr, #0
   10a00:	pop	{r1}		; (ldr r1, [sp], #4)
   10a04:	mov	r2, sp
   10a08:	push	{r2}		; (str r2, [sp, #-4]!)
   10a0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10a10:	ldr	ip, [pc, #16]	; 10a28 <close@plt+0x3c>
   10a14:	push	{ip}		; (str ip, [sp, #-4]!)
   10a18:	ldr	r0, [pc, #12]	; 10a2c <close@plt+0x40>
   10a1c:	ldr	r3, [pc, #12]	; 10a30 <close@plt+0x44>
   10a20:	bl	108fc <__libc_start_main@plt>
   10a24:	bl	109e0 <abort@plt>
   10a28:	andeq	r1, r1, ip, lsl #1
   10a2c:	andeq	r0, r1, r8, ror #21
   10a30:	andeq	r1, r1, ip, lsr #32
   10a34:	ldr	r3, [pc, #20]	; 10a50 <close@plt+0x64>
   10a38:	ldr	r2, [pc, #20]	; 10a54 <close@plt+0x68>
   10a3c:	add	r3, pc, r3
   10a40:	ldr	r2, [r3, r2]
   10a44:	cmp	r2, #0
   10a48:	bxeq	lr
   10a4c:	b	10914 <__gmon_start__@plt>
   10a50:			; <UNDEFINED> instruction: 0x000115bc
   10a54:	andeq	r0, r0, r0, lsl #1
   10a58:	ldr	r0, [pc, #24]	; 10a78 <close@plt+0x8c>
   10a5c:	ldr	r3, [pc, #24]	; 10a7c <close@plt+0x90>
   10a60:	cmp	r3, r0
   10a64:	bxeq	lr
   10a68:	ldr	r3, [pc, #16]	; 10a80 <close@plt+0x94>
   10a6c:	cmp	r3, #0
   10a70:	bxeq	lr
   10a74:	bx	r3
   10a78:	andeq	r2, r2, ip, lsl #1
   10a7c:	andeq	r2, r2, ip, lsl #1
   10a80:	andeq	r0, r0, r0
   10a84:	ldr	r0, [pc, #36]	; 10ab0 <close@plt+0xc4>
   10a88:	ldr	r1, [pc, #36]	; 10ab4 <close@plt+0xc8>
   10a8c:	sub	r1, r1, r0
   10a90:	asr	r1, r1, #2
   10a94:	add	r1, r1, r1, lsr #31
   10a98:	asrs	r1, r1, #1
   10a9c:	bxeq	lr
   10aa0:	ldr	r3, [pc, #16]	; 10ab8 <close@plt+0xcc>
   10aa4:	cmp	r3, #0
   10aa8:	bxeq	lr
   10aac:	bx	r3
   10ab0:	andeq	r2, r2, ip, lsl #1
   10ab4:	andeq	r2, r2, ip, lsl #1
   10ab8:	andeq	r0, r0, r0
   10abc:	push	{r4, lr}
   10ac0:	ldr	r4, [pc, #24]	; 10ae0 <close@plt+0xf4>
   10ac4:	ldrb	r3, [r4]
   10ac8:	cmp	r3, #0
   10acc:	popne	{r4, pc}
   10ad0:	bl	10a58 <close@plt+0x6c>
   10ad4:	mov	r3, #1
   10ad8:	strb	r3, [r4]
   10adc:	pop	{r4, pc}
   10ae0:	muleq	r2, ip, r0
   10ae4:	b	10a84 <close@plt+0x98>
   10ae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10aec:	add	fp, sp, #28
   10af0:	sub	sp, sp, #252	; 0xfc
   10af4:	sub	sp, sp, #133120	; 0x20800
   10af8:	movw	r7, #4282	; 0x10ba
   10afc:	movw	r5, #8344	; 0x2098
   10b00:	add	r9, sp, #164	; 0xa4
   10b04:	mov	r4, r1
   10b08:	mov	r6, r0
   10b0c:	mov	sl, #12
   10b10:	movt	r7, #1
   10b14:	movt	r5, #2
   10b18:	mov	r0, r6
   10b1c:	mov	r1, r4
   10b20:	mov	r2, r7
   10b24:	bl	10920 <getopt@plt>
   10b28:	cmp	r0, #116	; 0x74
   10b2c:	bne	10b40 <close@plt+0x154>
   10b30:	ldr	r0, [r5]
   10b34:	bl	10998 <atoi@plt>
   10b38:	mov	sl, r0
   10b3c:	b	10b18 <close@plt+0x12c>
   10b40:	cmn	r0, #1
   10b44:	beq	10b68 <close@plt+0x17c>
   10b48:	cmp	r0, #104	; 0x68
   10b4c:	cmpne	r0, #63	; 0x3f
   10b50:	bne	10b84 <close@plt+0x198>
   10b54:	movw	r0, #4625	; 0x1211
   10b58:	movt	r0, #1
   10b5c:	bl	108f0 <puts@plt>
   10b60:	mov	r0, #0
   10b64:	b	10f3c <close@plt+0x550>
   10b68:	movw	r0, #8336	; 0x2090
   10b6c:	movt	r0, #2
   10b70:	ldr	r0, [r0]
   10b74:	cmp	r0, r6
   10b78:	bge	10b94 <close@plt+0x1a8>
   10b7c:	ldr	r8, [r4, r0, lsl #2]
   10b80:	b	10b9c <close@plt+0x1b0>
   10b84:	movw	r0, #4625	; 0x1211
   10b88:	movt	r0, #1
   10b8c:	bl	108f0 <puts@plt>
   10b90:	b	10f38 <close@plt+0x54c>
   10b94:	movw	r8, #4252	; 0x109c
   10b98:	movt	r8, #1
   10b9c:	mov	r0, #1
   10ba0:	mov	r1, #1000	; 0x3e8
   10ba4:	mov	r5, #1
   10ba8:	bl	1089c <mdnsd_new@plt>
   10bac:	str	r0, [sp, #28]
   10bb0:	mov	r0, #2
   10bb4:	movw	r1, #2050	; 0x802
   10bb8:	mov	r2, #0
   10bbc:	str	r5, [sp, #32]
   10bc0:	mov	r5, #0
   10bc4:	bl	109bc <socket@plt>
   10bc8:	cmp	r0, #0
   10bcc:	mov	r6, #0
   10bd0:	bmi	10d04 <close@plt+0x318>
   10bd4:	mov	r6, #4
   10bd8:	add	r3, sp, #32
   10bdc:	mov	r1, #1
   10be0:	mov	r2, #15
   10be4:	mov	r7, r0
   10be8:	str	r6, [sp]
   10bec:	bl	108a8 <setsockopt@plt>
   10bf0:	cmp	r0, #0
   10bf4:	beq	10c18 <close@plt+0x22c>
   10bf8:	bl	10944 <__errno_location@plt>
   10bfc:	ldr	r0, [r0]
   10c00:	bl	10908 <strerror@plt>
   10c04:	movw	r1, #4381	; 0x111d
   10c08:	mov	r2, r0
   10c0c:	mov	r0, #4
   10c10:	movt	r1, #1
   10c14:	bl	1095c <mdnsd_log@plt>
   10c18:	add	r3, sp, #32
   10c1c:	mov	r0, r7
   10c20:	mov	r1, #1
   10c24:	mov	r2, #2
   10c28:	str	r6, [sp]
   10c2c:	bl	108a8 <setsockopt@plt>
   10c30:	cmp	r0, #0
   10c34:	beq	10c58 <close@plt+0x26c>
   10c38:	bl	10944 <__errno_location@plt>
   10c3c:	ldr	r0, [r0]
   10c40:	bl	10908 <strerror@plt>
   10c44:	movw	r1, #4413	; 0x113d
   10c48:	mov	r2, r0
   10c4c:	mov	r0, #4
   10c50:	movt	r1, #1
   10c54:	bl	1095c <mdnsd_log@plt>
   10c58:	movw	r0, #2
   10c5c:	add	lr, sp, #65536	; 0x10000
   10c60:	mov	r6, #0
   10c64:	mov	r2, #16
   10c68:	movt	r0, #59668	; 0xe914
   10c6c:	add	r1, lr, #196	; 0xc4
   10c70:	add	lr, sp, #65536	; 0x10000
   10c74:	str	r0, [r1, #12]
   10c78:	str	r6, [r1, #16]
   10c7c:	str	r6, [r1, #20]
   10c80:	str	r6, [r1, #24]
   10c84:	add	r1, lr, #208	; 0xd0
   10c88:	mov	r0, r7
   10c8c:	bl	10950 <bind@plt>
   10c90:	cmp	r0, #0
   10c94:	beq	10ca4 <close@plt+0x2b8>
   10c98:	mov	r0, r7
   10c9c:	bl	109ec <close@plt>
   10ca0:	b	10d04 <close@plt+0x318>
   10ca4:	movw	r0, #4445	; 0x115d
   10ca8:	movt	r0, #1
   10cac:	bl	109d4 <inet_addr@plt>
   10cb0:	mov	r1, #0
   10cb4:	add	r3, sp, #196	; 0xc4
   10cb8:	mov	r2, #35	; 0x23
   10cbc:	str	r1, [sp, #200]	; 0xc8
   10cc0:	str	r0, [sp, #196]	; 0xc4
   10cc4:	mov	r0, #8
   10cc8:	mov	r1, #0
   10ccc:	str	r0, [sp]
   10cd0:	mov	r0, r7
   10cd4:	bl	108a8 <setsockopt@plt>
   10cd8:	cmp	r0, #0
   10cdc:	beq	10d00 <close@plt+0x314>
   10ce0:	bl	10944 <__errno_location@plt>
   10ce4:	ldr	r0, [r0]
   10ce8:	bl	10908 <strerror@plt>
   10cec:	movw	r1, #4457	; 0x1169
   10cf0:	mov	r2, r0
   10cf4:	mov	r0, #4
   10cf8:	movt	r1, #1
   10cfc:	bl	1095c <mdnsd_log@plt>
   10d00:	mov	r6, r7
   10d04:	movw	r0, #4287	; 0x10bf
   10d08:	mov	r1, sl
   10d0c:	mov	r2, r8
   10d10:	movt	r0, #1
   10d14:	bl	108b4 <printf@plt>
   10d18:	ldr	r0, [sp, #28]
   10d1c:	movw	r3, #3940	; 0xf64
   10d20:	mov	r1, r8
   10d24:	mov	r2, sl
   10d28:	str	r5, [sp]
   10d2c:	movt	r3, #1
   10d30:	bl	109c8 <mdnsd_query@plt>
   10d34:	and	r0, r6, #31
   10d38:	mov	r1, #1
   10d3c:	add	lr, sp, #65536	; 0x10000
   10d40:	add	sl, r9, #8
   10d44:	add	r8, sp, #196	; 0xc4
   10d48:	lsl	r0, r1, r0
   10d4c:	add	r5, lr, #208	; 0xd0
   10d50:	str	r0, [sp, #20]
   10d54:	add	r0, r6, #1
   10d58:	str	r0, [sp, #16]
   10d5c:	lsr	r0, r6, #5
   10d60:	str	r0, [sp, #12]
   10d64:	ldr	r0, [sp, #28]
   10d68:	bl	10980 <mdnsd_sleep@plt>
   10d6c:	add	r9, sp, #32
   10d70:	str	r0, [sp, #24]
   10d74:	mov	r1, #0
   10d78:	mov	r2, #128	; 0x80
   10d7c:	mov	r0, r9
   10d80:	bl	10968 <memset@plt>
   10d84:	ldr	r4, [sp, #12]
   10d88:	ldr	r7, [sp, #20]
   10d8c:	mov	r1, r9
   10d90:	mov	r2, #0
   10d94:	mov	r3, #0
   10d98:	ldr	r0, [r9, r4, lsl #2]
   10d9c:	orr	r0, r0, r7
   10da0:	str	r0, [r9, r4, lsl #2]
   10da4:	ldr	r0, [sp, #24]
   10da8:	str	r0, [sp]
   10dac:	ldr	r0, [sp, #16]
   10db0:	bl	108d8 <select@plt>
   10db4:	ldr	r0, [r9, r4, lsl #2]
   10db8:	add	lr, sp, #65536	; 0x10000
   10dbc:	add	r4, sp, #164	; 0xa4
   10dc0:	add	r9, lr, #204	; 0xcc
   10dc4:	tst	r0, r7
   10dc8:	beq	10e84 <close@plt+0x498>
   10dcc:	add	lr, sp, #65536	; 0x10000
   10dd0:	mov	r1, #16
   10dd4:	add	r7, sp, #180	; 0xb4
   10dd8:	movw	r2, #65535	; 0xffff
   10ddc:	mov	r3, #0
   10de0:	add	r0, lr, #196	; 0xc4
   10de4:	str	r7, [sp]
   10de8:	str	r1, [r0]
   10dec:	str	r0, [sp, #4]
   10df0:	mov	r0, r6
   10df4:	mov	r1, r8
   10df8:	bl	108e4 <recvfrom@plt>
   10dfc:	cmp	r0, #1
   10e00:	blt	10e6c <close@plt+0x480>
   10e04:	movw	r2, #2088	; 0x828
   10e08:	mov	r0, r5
   10e0c:	mov	r1, #0
   10e10:	movt	r2, #1
   10e14:	bl	10968 <memset@plt>
   10e18:	mov	r0, r5
   10e1c:	mov	r1, r8
   10e20:	bl	10938 <message_parse@plt>
   10e24:	cmp	r0, #0
   10e28:	bne	10e40 <close@plt+0x454>
   10e2c:	ldr	r2, [sp, #184]	; 0xb8
   10e30:	ldrh	r3, [r4, #18]
   10e34:	ldr	r0, [sp, #28]
   10e38:	mov	r1, r5
   10e3c:	bl	109a4 <mdnsd_in@plt>
   10e40:	add	lr, sp, #65536	; 0x10000
   10e44:	mov	r1, r8
   10e48:	movw	r2, #65535	; 0xffff
   10e4c:	mov	r3, #0
   10e50:	str	r7, [sp]
   10e54:	add	r0, lr, #196	; 0xc4
   10e58:	str	r0, [sp, #4]
   10e5c:	mov	r0, r6
   10e60:	bl	108e4 <recvfrom@plt>
   10e64:	cmp	r0, #0
   10e68:	bgt	10e04 <close@plt+0x418>
   10e6c:	cmp	r0, #0
   10e70:	bpl	10e84 <close@plt+0x498>
   10e74:	bl	10944 <__errno_location@plt>
   10e78:	ldr	r7, [r0]
   10e7c:	cmp	r7, #11
   10e80:	bne	10f44 <close@plt+0x558>
   10e84:	ldr	r0, [sp, #28]
   10e88:	add	lr, sp, #65536	; 0x10000
   10e8c:	mov	r1, r5
   10e90:	mov	r2, r9
   10e94:	add	r3, lr, #202	; 0xca
   10e98:	bl	109b0 <mdnsd_out@plt>
   10e9c:	cmp	r0, #0
   10ea0:	beq	10d64 <close@plt+0x378>
   10ea4:	mov	r0, #0
   10ea8:	add	lr, sp, #65536	; 0x10000
   10eac:	str	r0, [sl]
   10eb0:	str	r0, [sl, #4]
   10eb4:	mov	r0, #2
   10eb8:	strh	r0, [r4]
   10ebc:	add	r0, lr, #196	; 0xc4
   10ec0:	mov	r1, r0
   10ec4:	ldrh	r0, [r0, #6]
   10ec8:	strh	r0, [r4, #2]
   10ecc:	ldr	r0, [r1, #8]
   10ed0:	str	r0, [sp, #168]	; 0xa8
   10ed4:	mov	r0, r5
   10ed8:	bl	1092c <message_packet@plt>
   10edc:	mov	r7, r0
   10ee0:	mov	r0, r5
   10ee4:	bl	1098c <message_packet_len@plt>
   10ee8:	mov	r2, r0
   10eec:	mov	r0, #16
   10ef0:	mov	r1, r7
   10ef4:	mov	r3, #0
   10ef8:	str	r4, [sp]
   10efc:	str	r0, [sp, #4]
   10f00:	mov	r0, r6
   10f04:	bl	10974 <sendto@plt>
   10f08:	mov	r7, r0
   10f0c:	mov	r0, r5
   10f10:	bl	1098c <message_packet_len@plt>
   10f14:	cmp	r7, r0
   10f18:	beq	10e84 <close@plt+0x498>
   10f1c:	bl	10944 <__errno_location@plt>
   10f20:	ldr	r0, [r0]
   10f24:	bl	10908 <strerror@plt>
   10f28:	mov	r1, r0
   10f2c:	movw	r0, #4351	; 0x10ff
   10f30:	movt	r0, #1
   10f34:	bl	108b4 <printf@plt>
   10f38:	mov	r0, #1
   10f3c:	sub	sp, fp, #28
   10f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f44:	mov	r0, r7
   10f48:	bl	10908 <strerror@plt>
   10f4c:	mov	r2, r0
   10f50:	movw	r0, #4316	; 0x10dc
   10f54:	mov	r1, r7
   10f58:	movt	r0, #1
   10f5c:	bl	108b4 <printf@plt>
   10f60:	b	10f38 <close@plt+0x54c>
   10f64:	push	{r4, r5, r6, sl, fp, lr}
   10f68:	add	fp, sp, #16
   10f6c:	sub	sp, sp, #8
   10f70:	ldr	r4, [r0, #8]
   10f74:	mov	r5, r0
   10f78:	cmp	r4, #0
   10f7c:	beq	10f90 <close@plt+0x5a4>
   10f80:	mov	r0, #0
   10f84:	bl	108c0 <time@plt>
   10f88:	sub	r4, r4, r0
   10f8c:	b	10f94 <close@plt+0x5a8>
   10f90:	mov	r4, #0
   10f94:	ldrh	r1, [r5, #4]
   10f98:	cmp	r1, #33	; 0x21
   10f9c:	beq	10fd0 <close@plt+0x5e4>
   10fa0:	cmp	r1, #12
   10fa4:	beq	10fec <close@plt+0x600>
   10fa8:	cmp	r1, #1
   10fac:	bne	11004 <close@plt+0x618>
   10fb0:	ldr	r0, [r5, #20]
   10fb4:	ldr	r6, [r5]
   10fb8:	bl	108cc <inet_ntoa@plt>
   10fbc:	mov	r3, r0
   10fc0:	movw	r0, #4499	; 0x1193
   10fc4:	mov	r1, r6
   10fc8:	movt	r0, #1
   10fcc:	b	10ffc <close@plt+0x610>
   10fd0:	ldrh	r0, [r5, #32]
   10fd4:	ldr	r1, [r5]
   10fd8:	ldr	r3, [r5, #24]
   10fdc:	str	r0, [sp]
   10fe0:	movw	r0, #4558	; 0x11ce
   10fe4:	movt	r0, #1
   10fe8:	b	10ffc <close@plt+0x610>
   10fec:	ldr	r1, [r5]
   10ff0:	ldr	r3, [r5, #24]
   10ff4:	movw	r0, #4529	; 0x11b1
   10ff8:	movt	r0, #1
   10ffc:	mov	r2, r4
   11000:	b	1101c <close@plt+0x630>
   11004:	ldrh	r0, [r5, #12]
   11008:	ldr	r2, [r5]
   1100c:	mov	r3, r4
   11010:	str	r0, [sp]
   11014:	movw	r0, #4590	; 0x11ee
   11018:	movt	r0, #1
   1101c:	bl	108b4 <printf@plt>
   11020:	mov	r0, #0
   11024:	sub	sp, fp, #16
   11028:	pop	{r4, r5, r6, sl, fp, pc}
   1102c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11030:	mov	r7, r0
   11034:	ldr	r6, [pc, #72]	; 11084 <close@plt+0x698>
   11038:	ldr	r5, [pc, #72]	; 11088 <close@plt+0x69c>
   1103c:	add	r6, pc, r6
   11040:	add	r5, pc, r5
   11044:	sub	r6, r6, r5
   11048:	mov	r8, r1
   1104c:	mov	r9, r2
   11050:	bl	1087c <mdnsd_new@plt-0x20>
   11054:	asrs	r6, r6, #2
   11058:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1105c:	mov	r4, #0
   11060:	add	r4, r4, #1
   11064:	ldr	r3, [r5], #4
   11068:	mov	r2, r9
   1106c:	mov	r1, r8
   11070:	mov	r0, r7
   11074:	blx	r3
   11078:	cmp	r6, r4
   1107c:	bne	11060 <close@plt+0x674>
   11080:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11084:	andeq	r0, r1, r0, asr #29
   11088:			; <UNDEFINED> instruction: 0x00010eb8
   1108c:	bx	lr

Disassembly of section .fini:

00011090 <.fini>:
   11090:	push	{r3, lr}
   11094:	pop	{r3, pc}
