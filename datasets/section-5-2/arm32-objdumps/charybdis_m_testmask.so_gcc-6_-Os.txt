
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

000005b0 <_init>:
 5b0:	push	{r3, lr}
 5b4:	bl	66c <call_weak_fn>
 5b8:	pop	{r3, pc}

Disassembly of section .plt:

000005bc <.plt>:
 5bc:	push	{lr}		; (str lr, [sp, #-4]!)
 5c0:	ldr	lr, [pc, #4]	; 5cc <.plt+0x10>
 5c4:	add	lr, pc, lr
 5c8:	ldr	pc, [lr, #8]!
 5cc:	.word	0x00010a34

000005d0 <__cxa_finalize@plt>:
 5d0:	add	ip, pc, #0, 12
 5d4:	add	ip, ip, #16, 20	; 0x10000
 5d8:	ldr	pc, [ip, #2612]!	; 0xa34

000005dc <match_esc@plt>:
 5dc:	add	ip, pc, #0, 12
 5e0:	add	ip, ip, #16, 20	; 0x10000
 5e4:	ldr	pc, [ip, #2604]!	; 0xa2c

000005e8 <sendto_one@plt>:
 5e8:	add	ip, pc, #0, 12
 5ec:	add	ip, ip, #16, 20	; 0x10000
 5f0:	ldr	pc, [ip, #2596]!	; 0xa24

000005f4 <collapse_esc@plt>:
 5f4:	add	ip, pc, #0, 12
 5f8:	add	ip, ip, #16, 20	; 0x10000
 5fc:	ldr	pc, [ip, #2588]!	; 0xa1c

00000600 <match_ips@plt>:
 600:	add	ip, pc, #0, 12
 604:	add	ip, ip, #16, 20	; 0x10000
 608:	ldr	pc, [ip, #2580]!	; 0xa14

0000060c <strcpy@plt>:
 60c:	add	ip, pc, #0, 12
 610:	add	ip, ip, #16, 20	; 0x10000
 614:	ldr	pc, [ip, #2572]!	; 0xa0c

00000618 <__gmon_start__@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2564]!	; 0xa04

00000624 <strlen@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2556]!	; 0x9fc

00000630 <strchr@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2548]!	; 0x9f4

0000063c <collapse@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2540]!	; 0x9ec

00000648 <match@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2532]!	; 0x9e4

00000654 <sendto_one_notice@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000660 <show_ip@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2516]!	; 0x9d4

Disassembly of section .text:

0000066c <call_weak_fn>:
 66c:	ldr	r3, [pc, #20]	; 688 <call_weak_fn+0x1c>
 670:	ldr	r2, [pc, #20]	; 68c <call_weak_fn+0x20>
 674:	add	r3, pc, r3
 678:	ldr	r2, [r3, r2]
 67c:	cmp	r2, #0
 680:	bxeq	lr
 684:	b	618 <__gmon_start__@plt>
 688:	.word	0x00010984
 68c:	.word	0x00000048

00000690 <deregister_tm_clones>:
 690:	ldr	r3, [pc, #52]	; 6cc <deregister_tm_clones+0x3c>
 694:	ldr	r0, [pc, #52]	; 6d0 <deregister_tm_clones+0x40>
 698:	add	r3, pc, r3
 69c:	add	r0, pc, r0
 6a0:	add	r3, r3, #3
 6a4:	sub	r3, r3, r0
 6a8:	cmp	r3, #6
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x44>
 6b0:	add	r3, pc, r3
 6b4:	bxls	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x48>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00010a34
 6d0:	.word	0x00010a30
 6d4:	.word	0x00010948
 6d8:	.word	0x00000044

000006dc <register_tm_clones>:
 6dc:	ldr	r1, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r0, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r1, pc, r1
 6e8:	add	r0, pc, r0
 6ec:	sub	r1, r1, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000109e8
 720:	.word	0x000109e4
 724:	.word	0x00010900
 728:	.word	0x00000054

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	5d0 <__cxa_finalize@plt>
 768:	bl	690 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x00010998
 784:	.word	0x000108c0
 788:	.word	0x00000040
 78c:	.word	0x000108f4
 790:	.word	0x00010958

00000794 <frame_dummy>:
 794:	ldr	r0, [pc, #56]	; 7d4 <frame_dummy+0x40>
 798:	ldr	r3, [pc, #56]	; 7d8 <frame_dummy+0x44>
 79c:	add	r0, pc, r0
 7a0:	ldr	r2, [r0]
 7a4:	add	r3, pc, r3
 7a8:	cmp	r2, #0
 7ac:	bne	7b4 <frame_dummy+0x20>
 7b0:	b	6dc <register_tm_clones>
 7b4:	ldr	r2, [pc, #32]	; 7dc <frame_dummy+0x48>
 7b8:	ldr	r3, [r3, r2]
 7bc:	cmp	r3, #0
 7c0:	beq	7b0 <frame_dummy+0x1c>
 7c4:	push	{r4, lr}
 7c8:	blx	r3
 7cc:	pop	{r4, lr}
 7d0:	b	6dc <register_tm_clones>
 7d4:	.word	0x00010758
 7d8:	.word	0x00010854
 7dc:	.word	0x00000050

000007e0 <mo_testmask>:
 7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7e4:	add	fp, sp, #32
 7e8:	sub	sp, sp, #52	; 0x34
 7ec:	ldr	r5, [fp, #4]
 7f0:	mov	r8, r3
 7f4:	ldr	r3, [pc, #752]	; aec <mo_testmask+0x30c>
 7f8:	ldr	r4, [r5, #4]
 7fc:	add	r3, pc, r3
 800:	mov	r0, r4
 804:	mov	r9, r2
 808:	str	r3, [fp, #-52]	; 0xffffffcc
 80c:	bl	624 <strlen@plt>
 810:	mov	r1, r4
 814:	add	r0, r0, #15
 818:	bic	r0, r0, #7
 81c:	sub	sp, sp, r0
 820:	add	r6, sp, #24
 824:	mov	r0, r6
 828:	bl	60c <strcpy@plt>
 82c:	mov	r0, r6
 830:	bl	63c <collapse@plt>
 834:	mov	r1, #64	; 0x40
 838:	mov	r0, r6
 83c:	bl	630 <strchr@plt>
 840:	subs	sl, r0, #0
 844:	bne	860 <mo_testmask+0x80>
 848:	ldr	r1, [pc, #672]	; af0 <mo_testmask+0x310>
 84c:	mov	r0, r9
 850:	add	r1, pc, r1
 854:	bl	654 <sendto_one_notice@plt>
 858:	sub	sp, fp, #32
 85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 860:	mov	r4, #0
 864:	strb	r4, [sl]
 868:	mov	r1, #33	; 0x21
 86c:	mov	r0, r6
 870:	bl	630 <strchr@plt>
 874:	add	r7, sl, #1
 878:	cmp	r0, #0
 87c:	beq	9a8 <mo_testmask+0x1c8>
 880:	adds	r3, r0, #1
 884:	strb	r4, [r0]
 888:	str	r3, [fp, #-40]	; 0xffffffd8
 88c:	beq	848 <mo_testmask+0x68>
 890:	ldr	r3, [fp, #-40]	; 0xffffffd8
 894:	ldrb	r4, [r3]
 898:	cmp	r7, #0
 89c:	cmpne	r4, #0
 8a0:	moveq	r4, #1
 8a4:	movne	r4, #0
 8a8:	beq	848 <mo_testmask+0x68>
 8ac:	ldrb	r3, [sl, #1]
 8b0:	cmp	r3, #0
 8b4:	beq	848 <mo_testmask+0x68>
 8b8:	cmp	r8, #2
 8bc:	ble	908 <mo_testmask+0x128>
 8c0:	ldr	r5, [r5, #8]
 8c4:	cmp	r5, #0
 8c8:	moveq	r4, r5
 8cc:	beq	908 <mo_testmask+0x128>
 8d0:	ldrb	r4, [r5]
 8d4:	cmp	r4, #0
 8d8:	beq	908 <mo_testmask+0x128>
 8dc:	mov	r0, r5
 8e0:	bl	624 <strlen@plt>
 8e4:	mov	r1, r5
 8e8:	add	r0, r0, #15
 8ec:	bic	r0, r0, #7
 8f0:	sub	sp, sp, r0
 8f4:	add	r4, sp, #24
 8f8:	mov	r0, r4
 8fc:	bl	60c <strcpy@plt>
 900:	mov	r0, r4
 904:	bl	5f4 <collapse_esc@plt>
 908:	ldr	r3, [pc, #484]	; af4 <mo_testmask+0x314>
 90c:	ldr	r2, [fp, #-52]	; 0xffffffcc
 910:	ldr	r3, [r2, r3]
 914:	ldr	sl, [r3]
 918:	mov	r3, #0
 91c:	str	r3, [fp, #-48]	; 0xffffffd0
 920:	str	r3, [fp, #-44]	; 0xffffffd4
 924:	ldr	r3, [pc, #460]	; af8 <mo_testmask+0x318>
 928:	add	r3, pc, r3
 92c:	str	r3, [fp, #-56]	; 0xffffffc8
 930:	ldr	r3, [pc, #452]	; afc <mo_testmask+0x31c>
 934:	add	r3, pc, r3
 938:	str	r3, [fp, #-60]	; 0xffffffc4
 93c:	cmp	sl, #0
 940:	bne	9b4 <mo_testmask+0x1d4>
 944:	cmp	r6, #0
 948:	add	r3, r9, #88	; 0x58
 94c:	ldreq	r6, [pc, #428]	; b00 <mo_testmask+0x320>
 950:	addeq	r6, pc, r6
 954:	cmp	r4, #0
 958:	ldreq	r4, [pc, #420]	; b04 <mo_testmask+0x324>
 95c:	addeq	r4, pc, r4
 960:	ldr	r1, [fp, #-52]	; 0xffffffcc
 964:	ldr	r2, [pc, #412]	; b08 <mo_testmask+0x328>
 968:	mov	r0, r9
 96c:	ldr	r2, [r1, r2]
 970:	ldr	r1, [fp, #-40]	; 0xffffffd8
 974:	str	r4, [sp, #20]
 978:	str	r1, [sp, #12]
 97c:	ldr	r1, [fp, #-48]	; 0xffffffd0
 980:	str	r7, [sp, #16]
 984:	str	r1, [sp, #4]
 988:	ldr	r1, [fp, #-44]	; 0xffffffd4
 98c:	str	r6, [sp, #8]
 990:	str	r1, [sp]
 994:	ldr	r1, [pc, #368]	; b0c <mo_testmask+0x32c>
 998:	add	r2, r2, #88	; 0x58
 99c:	add	r1, pc, r1
 9a0:	bl	5e8 <sendto_one@plt>
 9a4:	b	858 <mo_testmask+0x78>
 9a8:	str	r6, [fp, #-40]	; 0xffffffd8
 9ac:	mov	r6, r0
 9b0:	b	890 <mo_testmask+0xb0>
 9b4:	ldr	r5, [sl]
 9b8:	ldrh	r3, [r5, #80]	; 0x50
 9bc:	cmp	r3, #64	; 0x40
 9c0:	bne	a94 <mo_testmask+0x2b4>
 9c4:	ldr	r3, [r5, #24]
 9c8:	cmp	r3, #0
 9cc:	beq	a94 <mo_testmask+0x2b4>
 9d0:	ldrb	r3, [r5, #291]	; 0x123
 9d4:	cmp	r3, #0
 9d8:	ldreq	r8, [fp, #-56]	; 0xffffffc8
 9dc:	beq	9fc <mo_testmask+0x21c>
 9e0:	mov	r1, r5
 9e4:	mov	r0, r9
 9e8:	bl	660 <show_ip@plt>
 9ec:	cmp	r0, #0
 9f0:	addne	r8, r5, #288	; 0x120
 9f4:	ldreq	r8, [fp, #-60]	; 0xffffffc4
 9f8:	addne	r8, r8, #3
 9fc:	add	r1, r5, #152	; 0x98
 a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
 a04:	bl	648 <match@plt>
 a08:	cmp	r0, #0
 a0c:	beq	a94 <mo_testmask+0x2b4>
 a10:	add	r1, r5, #163	; 0xa3
 a14:	mov	r0, r7
 a18:	bl	648 <match@plt>
 a1c:	cmp	r0, #0
 a20:	beq	a58 <mo_testmask+0x278>
 a24:	cmp	r6, #0
 a28:	bne	a9c <mo_testmask+0x2bc>
 a2c:	cmp	r4, #0
 a30:	bne	ab4 <mo_testmask+0x2d4>
 a34:	ldrd	r2, [r5, #64]	; 0x40
 a38:	mov	r3, #0
 a3c:	and	r2, r2, #8192	; 0x2000
 a40:	orrs	r3, r2, r3
 a44:	bne	ad0 <mo_testmask+0x2f0>
 a48:	ldr	r3, [fp, #-48]	; 0xffffffd0
 a4c:	add	r3, r3, #1
 a50:	str	r3, [fp, #-48]	; 0xffffffd0
 a54:	b	a94 <mo_testmask+0x2b4>
 a58:	add	r1, r5, #227	; 0xe3
 a5c:	mov	r0, r7
 a60:	bl	648 <match@plt>
 a64:	cmp	r0, #0
 a68:	bne	a24 <mo_testmask+0x244>
 a6c:	mov	r1, r8
 a70:	mov	r0, r7
 a74:	bl	648 <match@plt>
 a78:	cmp	r0, #0
 a7c:	bne	a24 <mo_testmask+0x244>
 a80:	mov	r1, r8
 a84:	mov	r0, r7
 a88:	bl	600 <match_ips@plt>
 a8c:	cmp	r0, #0
 a90:	bne	a24 <mo_testmask+0x244>
 a94:	ldr	sl, [sl, #8]
 a98:	b	93c <mo_testmask+0x15c>
 a9c:	add	r1, r5, #88	; 0x58
 aa0:	mov	r0, r6
 aa4:	bl	648 <match@plt>
 aa8:	cmp	r0, #0
 aac:	beq	a94 <mo_testmask+0x2b4>
 ab0:	b	a2c <mo_testmask+0x24c>
 ab4:	add	r1, r5, #344	; 0x158
 ab8:	add	r1, r1, #1
 abc:	mov	r0, r4
 ac0:	bl	5dc <match_esc@plt>
 ac4:	cmp	r0, #0
 ac8:	beq	a94 <mo_testmask+0x2b4>
 acc:	b	a34 <mo_testmask+0x254>
 ad0:	ldrh	r3, [r5, #80]	; 0x50
 ad4:	cmp	r3, #64	; 0x40
 ad8:	ldreq	r3, [fp, #-44]	; 0xffffffd4
 adc:	addeq	r3, r3, #1
 ae0:	streq	r3, [fp, #-44]	; 0xffffffd4
 ae4:	bne	a48 <mo_testmask+0x268>
 ae8:	b	a94 <mo_testmask+0x2b4>
 aec:	.word	0x000107fc
 af0:	.word	0x0000032d
 af4:	.word	0x0000004c
 af8:	.word	0x00000241
 afc:	.word	0x00000245
 b00:	.word	0x0000022b
 b04:	.word	0x0000021f
 b08:	.word	0x00000058
 b0c:	.word	0x000001f5

Disassembly of section .fini:

00000b10 <_fini>:
 b10:	push	{r3, lr}
 b14:	pop	{r3, pc}
