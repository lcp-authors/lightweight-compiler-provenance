
../repos/inetutils/ping/ping6:     file format elf32-littlearm


Disassembly of section .init:

00011090 <.init>:
   11090:	push	{r3, lr}
   11094:	bl	1144c <__assert_fail@plt+0x48>
   11098:	pop	{r3, pc}

Disassembly of section .plt:

0001109c <calloc@plt-0x14>:
   1109c:	push	{lr}		; (str lr, [sp, #-4]!)
   110a0:	ldr	lr, [pc, #4]	; 110ac <calloc@plt-0x4>
   110a4:	add	lr, pc, lr
   110a8:	ldr	pc, [lr, #8]!
   110ac:	andeq	sl, r1, r4, asr pc

000110b0 <calloc@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #106496	; 0x1a000
   110b8:	ldr	pc, [ip, #3924]!	; 0xf54

000110bc <fputs_unlocked@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #106496	; 0x1a000
   110c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c8 <setbuf@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #106496	; 0x1a000
   110d0:	ldr	pc, [ip, #3908]!	; 0xf44

000110d4 <strcmp@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #106496	; 0x1a000
   110dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e0 <strtol@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #106496	; 0x1a000
   110e8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ec <setsockopt@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #106496	; 0x1a000
   110f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #106496	; 0x1a000
   11100:	ldr	pc, [ip, #3876]!	; 0xf24

00011104 <fflush@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #106496	; 0x1a000
   1110c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011110 <getuid@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #106496	; 0x1a000
   11118:	ldr	pc, [ip, #3860]!	; 0xf14

0001111c <memmove@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #106496	; 0x1a000
   11124:	ldr	pc, [ip, #3852]!	; 0xf0c

00011128 <strchrnul@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #106496	; 0x1a000
   11130:	ldr	pc, [ip, #3844]!	; 0xf04

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #106496	; 0x1a000
   1113c:	ldr	pc, [ip, #3836]!	; 0xefc

00011140 <gai_strerror@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #106496	; 0x1a000
   11148:	ldr	pc, [ip, #3828]!	; 0xef4

0001114c <strndup@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #106496	; 0x1a000
   11154:	ldr	pc, [ip, #3820]!	; 0xeec

00011158 <memcpy@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #106496	; 0x1a000
   11160:	ldr	pc, [ip, #3812]!	; 0xee4

00011164 <signal@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #106496	; 0x1a000
   1116c:	ldr	pc, [ip, #3804]!	; 0xedc

00011170 <fwrite_unlocked@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #106496	; 0x1a000
   11178:	ldr	pc, [ip, #3796]!	; 0xed4

0001117c <inet_ntoa@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #106496	; 0x1a000
   11184:	ldr	pc, [ip, #3788]!	; 0xecc

00011188 <select@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #106496	; 0x1a000
   11190:	ldr	pc, [ip, #3780]!	; 0xec4

00011194 <sleep@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #106496	; 0x1a000
   1119c:	ldr	pc, [ip, #3772]!	; 0xebc

000111a0 <gethostbyaddr@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #106496	; 0x1a000
   111a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111ac <strdup@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #106496	; 0x1a000
   111b4:	ldr	pc, [ip, #3756]!	; 0xeac

000111b8 <realloc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #106496	; 0x1a000
   111c0:	ldr	pc, [ip, #3748]!	; 0xea4

000111c4 <strcasecmp@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #106496	; 0x1a000
   111cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d0 <funlockfile@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #106496	; 0x1a000
   111d8:	ldr	pc, [ip, #3732]!	; 0xe94

000111dc <fwrite@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #106496	; 0x1a000
   111e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e8 <gettimeofday@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #106496	; 0x1a000
   111f0:	ldr	pc, [ip, #3716]!	; 0xe84

000111f4 <error@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #106496	; 0x1a000
   111fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00011200 <getenv@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #106496	; 0x1a000
   11208:	ldr	pc, [ip, #3700]!	; 0xe74

0001120c <puts@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #106496	; 0x1a000
   11214:	ldr	pc, [ip, #3692]!	; 0xe6c

00011218 <malloc@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #106496	; 0x1a000
   11220:	ldr	pc, [ip, #3684]!	; 0xe64

00011224 <__libc_start_main@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #106496	; 0x1a000
   1122c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011230 <strerror@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #106496	; 0x1a000
   11238:	ldr	pc, [ip, #3668]!	; 0xe54

0001123c <__ctype_tolower_loc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #106496	; 0x1a000
   11244:	ldr	pc, [ip, #3660]!	; 0xe4c

00011248 <__gmon_start__@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #106496	; 0x1a000
   11250:	ldr	pc, [ip, #3652]!	; 0xe44

00011254 <mempcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #106496	; 0x1a000
   1125c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011260 <__ctype_b_loc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #106496	; 0x1a000
   11268:	ldr	pc, [ip, #3636]!	; 0xe34

0001126c <getpid@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #106496	; 0x1a000
   11274:	ldr	pc, [ip, #3628]!	; 0xe2c

00011278 <exit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #106496	; 0x1a000
   11280:	ldr	pc, [ip, #3620]!	; 0xe24

00011284 <strtoul@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #106496	; 0x1a000
   1128c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011290 <strlen@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #106496	; 0x1a000
   11298:	ldr	pc, [ip, #3604]!	; 0xe14

0001129c <strchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #106496	; 0x1a000
   112a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a8 <fprintf@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #106496	; 0x1a000
   112b0:	ldr	pc, [ip, #3588]!	; 0xe04

000112b4 <__errno_location@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #106496	; 0x1a000
   112bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c0 <snprintf@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #106496	; 0x1a000
   112c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112cc <strerror_r@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #106496	; 0x1a000
   112d4:	ldr	pc, [ip, #3564]!	; 0xdec

000112d8 <setvbuf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #106496	; 0x1a000
   112e0:	ldr	pc, [ip, #3556]!	; 0xde4

000112e4 <memset@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #106496	; 0x1a000
   112ec:	ldr	pc, [ip, #3548]!	; 0xddc

000112f0 <putchar@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #106496	; 0x1a000
   112f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112fc <memchr@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #106496	; 0x1a000
   11304:	ldr	pc, [ip, #3532]!	; 0xdcc

00011308 <sendto@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #106496	; 0x1a000
   11310:	ldr	pc, [ip, #3524]!	; 0xdc4

00011314 <__overflow@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #106496	; 0x1a000
   1131c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011320 <setlocale@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #106496	; 0x1a000
   11328:	ldr	pc, [ip, #3508]!	; 0xdb4

0001132c <getnameinfo@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #106496	; 0x1a000
   11334:	ldr	pc, [ip, #3500]!	; 0xdac

00011338 <strrchr@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #106496	; 0x1a000
   11340:	ldr	pc, [ip, #3492]!	; 0xda4

00011344 <vfprintf@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #106496	; 0x1a000
   1134c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011350 <fputc@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #106496	; 0x1a000
   11358:	ldr	pc, [ip, #3476]!	; 0xd94

0001135c <setuid@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #106496	; 0x1a000
   11364:	ldr	pc, [ip, #3468]!	; 0xd8c

00011368 <sscanf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #106496	; 0x1a000
   11370:	ldr	pc, [ip, #3460]!	; 0xd84

00011374 <putc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #106496	; 0x1a000
   1137c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011380 <flockfile@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #106496	; 0x1a000
   11388:	ldr	pc, [ip, #3444]!	; 0xd74

0001138c <vsnprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3436]!	; 0xd6c

00011398 <recvmsg@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3428]!	; 0xd64

000113a4 <qsort@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000113b0 <freeaddrinfo@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3412]!	; 0xd54

000113bc <getaddrinfo@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3404]!	; 0xd4c

000113c8 <inet_ntop@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3396]!	; 0xd44

000113d4 <socket@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #106496	; 0x1a000
   113dc:	ldr	pc, [ip, #3388]!	; 0xd3c

000113e0 <strncmp@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #106496	; 0x1a000
   113e8:	ldr	pc, [ip, #3380]!	; 0xd34

000113ec <abort@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #106496	; 0x1a000
   113f4:	ldr	pc, [ip, #3372]!	; 0xd2c

000113f8 <close@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #106496	; 0x1a000
   11400:	ldr	pc, [ip, #3364]!	; 0xd24

00011404 <__assert_fail@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #106496	; 0x1a000
   1140c:	ldr	pc, [ip, #3356]!	; 0xd1c

Disassembly of section .text:

00011410 <argp_failure@@Base-0x3f6c>:
   11410:	mov	fp, #0
   11414:	mov	lr, #0
   11418:	pop	{r1}		; (ldr r1, [sp], #4)
   1141c:	mov	r2, sp
   11420:	push	{r2}		; (str r2, [sp, #-4]!)
   11424:	push	{r0}		; (str r0, [sp, #-4]!)
   11428:	ldr	ip, [pc, #16]	; 11440 <__assert_fail@plt+0x3c>
   1142c:	push	{ip}		; (str ip, [sp, #-4]!)
   11430:	ldr	r0, [pc, #12]	; 11444 <__assert_fail@plt+0x40>
   11434:	ldr	r3, [pc, #12]	; 11448 <__assert_fail@plt+0x44>
   11438:	bl	11224 <__libc_start_main@plt>
   1143c:	bl	113ec <abort@plt>
   11440:	andeq	r9, r1, r8, asr #27
   11444:	andeq	r2, r1, ip, lsl #19
   11448:	andeq	r9, r1, r8, ror #26
   1144c:	ldr	r3, [pc, #20]	; 11468 <__assert_fail@plt+0x64>
   11450:	ldr	r2, [pc, #20]	; 1146c <__assert_fail@plt+0x68>
   11454:	add	r3, pc, r3
   11458:	ldr	r2, [r3, r2]
   1145c:	cmp	r2, #0
   11460:	bxeq	lr
   11464:	b	11248 <__gmon_start__@plt>
   11468:	andeq	sl, r1, r4, lsr #23
   1146c:	andeq	r0, r0, ip, lsr #2
   11470:	ldr	r0, [pc, #24]	; 11490 <__assert_fail@plt+0x8c>
   11474:	ldr	r3, [pc, #24]	; 11494 <__assert_fail@plt+0x90>
   11478:	cmp	r3, r0
   1147c:	bxeq	lr
   11480:	ldr	r3, [pc, #16]	; 11498 <__assert_fail@plt+0x94>
   11484:	cmp	r3, #0
   11488:	bxeq	lr
   1148c:	bx	r3
   11490:	andeq	ip, r2, ip, asr #7
   11494:	andeq	ip, r2, ip, asr #7
   11498:	andeq	r0, r0, r0
   1149c:	ldr	r0, [pc, #36]	; 114c8 <__assert_fail@plt+0xc4>
   114a0:	ldr	r1, [pc, #36]	; 114cc <__assert_fail@plt+0xc8>
   114a4:	sub	r1, r1, r0
   114a8:	asr	r1, r1, #2
   114ac:	add	r1, r1, r1, lsr #31
   114b0:	asrs	r1, r1, #1
   114b4:	bxeq	lr
   114b8:	ldr	r3, [pc, #16]	; 114d0 <__assert_fail@plt+0xcc>
   114bc:	cmp	r3, #0
   114c0:	bxeq	lr
   114c4:	bx	r3
   114c8:	andeq	ip, r2, ip, asr #7
   114cc:	andeq	ip, r2, ip, asr #7
   114d0:	andeq	r0, r0, r0
   114d4:	push	{r4, lr}
   114d8:	ldr	r4, [pc, #24]	; 114f8 <__assert_fail@plt+0xf4>
   114dc:	ldrb	r3, [r4]
   114e0:	cmp	r3, #0
   114e4:	popne	{r4, pc}
   114e8:	bl	11470 <__assert_fail@plt+0x6c>
   114ec:	mov	r3, #1
   114f0:	strb	r3, [r4]
   114f4:	pop	{r4, pc}
   114f8:	andeq	ip, r2, r0, ror #7
   114fc:	b	1149c <__assert_fail@plt+0x98>
   11500:	movw	r3, #50148	; 0xc3e4
   11504:	movt	r3, #2
   11508:	mov	r2, #1
   1150c:	str	r2, [r3]
   11510:	bx	lr
   11514:	strd	r4, [sp, #-12]!
   11518:	str	lr, [sp, #8]
   1151c:	sub	sp, sp, #12
   11520:	mov	r4, r1
   11524:	cmp	r0, #112	; 0x70
   11528:	beq	117cc <__assert_fail@plt+0x3c8>
   1152c:	bgt	11604 <__assert_fail@plt+0x200>
   11530:	cmp	r0, #102	; 0x66
   11534:	beq	116d4 <__assert_fail@plt+0x2d0>
   11538:	bgt	11568 <__assert_fail@plt+0x164>
   1153c:	cmp	r0, #99	; 0x63
   11540:	beq	11694 <__assert_fail@plt+0x290>
   11544:	cmp	r0, #100	; 0x64
   11548:	beq	116b8 <__assert_fail@plt+0x2b4>
   1154c:	cmp	r0, #84	; 0x54
   11550:	movne	r0, #7
   11554:	beq	11830 <__assert_fail@plt+0x42c>
   11558:	add	sp, sp, #12
   1155c:	ldrd	r4, [sp]
   11560:	add	sp, sp, #8
   11564:	pop	{pc}		; (ldr pc, [sp], #4)
   11568:	cmp	r0, #108	; 0x6c
   1156c:	beq	11730 <__assert_fail@plt+0x32c>
   11570:	cmp	r0, #110	; 0x6e
   11574:	beq	117b0 <__assert_fail@plt+0x3ac>
   11578:	cmp	r0, #105	; 0x69
   1157c:	movne	r0, #7
   11580:	bne	11558 <__assert_fail@plt+0x154>
   11584:	movw	r3, #50252	; 0xc44c
   11588:	movt	r3, #2
   1158c:	ldr	r2, [r3]
   11590:	orr	r2, r2, #2
   11594:	str	r2, [r3]
   11598:	mov	r2, #0
   1159c:	mov	r1, r2
   115a0:	mov	r0, r4
   115a4:	bl	12dc8 <__assert_fail@plt+0x19c4>
   115a8:	mov	r3, #1000	; 0x3e8
   115ac:	mul	r0, r3, r0
   115b0:	movw	r3, #50260	; 0xc454
   115b4:	movt	r3, #2
   115b8:	str	r0, [r3]
   115bc:	movw	r3, #50148	; 0xc3e4
   115c0:	movt	r3, #2
   115c4:	ldrb	r3, [r3, #8]
   115c8:	eor	r3, r3, #1
   115cc:	cmp	r0, #199	; 0xc7
   115d0:	movhi	r3, #0
   115d4:	andls	r3, r3, #1
   115d8:	cmp	r3, #0
   115dc:	moveq	r0, #0
   115e0:	beq	11558 <__assert_fail@plt+0x154>
   115e4:	mov	r3, r4
   115e8:	movw	r2, #40568	; 0x9e78
   115ec:	movt	r2, #1
   115f0:	mov	r1, #0
   115f4:	mov	r0, #1
   115f8:	bl	111f4 <error@plt>
   115fc:	mov	r0, #0
   11600:	b	11558 <__assert_fail@plt+0x154>
   11604:	cmp	r0, #118	; 0x76
   11608:	beq	11868 <__assert_fail@plt+0x464>
   1160c:	bgt	1164c <__assert_fail@plt+0x248>
   11610:	cmp	r0, #114	; 0x72
   11614:	beq	11814 <__assert_fail@plt+0x410>
   11618:	blt	117f8 <__assert_fail@plt+0x3f4>
   1161c:	cmp	r0, #115	; 0x73
   11620:	movne	r0, #7
   11624:	bne	11558 <__assert_fail@plt+0x154>
   11628:	mov	r2, #1
   1162c:	movw	r1, #65527	; 0xfff7
   11630:	mov	r0, r4
   11634:	bl	12dc8 <__assert_fail@plt+0x19c4>
   11638:	movw	r3, #49464	; 0xc138
   1163c:	movt	r3, #2
   11640:	str	r0, [r3, #4]
   11644:	mov	r0, #0
   11648:	b	11558 <__assert_fail@plt+0x154>
   1164c:	cmp	r0, #256	; 0x100
   11650:	beq	11884 <__assert_fail@plt+0x480>
   11654:	mov	r3, #2
   11658:	movt	r3, #256	; 0x100
   1165c:	cmp	r0, r3
   11660:	beq	118a8 <__assert_fail@plt+0x4a4>
   11664:	cmp	r0, #119	; 0x77
   11668:	movne	r0, #7
   1166c:	bne	11558 <__assert_fail@plt+0x154>
   11670:	mov	r2, #0
   11674:	mvn	r1, #-2147483648	; 0x80000000
   11678:	mov	r0, r4
   1167c:	bl	12dc8 <__assert_fail@plt+0x19c4>
   11680:	movw	r3, #49464	; 0xc138
   11684:	movt	r3, #2
   11688:	str	r0, [r3, #12]
   1168c:	mov	r0, #0
   11690:	b	11558 <__assert_fail@plt+0x154>
   11694:	mov	r2, #0
   11698:	mov	r1, r2
   1169c:	mov	r0, r4
   116a0:	bl	12dc8 <__assert_fail@plt+0x19c4>
   116a4:	movw	r3, #50148	; 0xc3e4
   116a8:	movt	r3, #2
   116ac:	str	r0, [r3, #4]
   116b0:	mov	r0, #0
   116b4:	b	11558 <__assert_fail@plt+0x154>
   116b8:	movw	r3, #50256	; 0xc450
   116bc:	movt	r3, #2
   116c0:	ldr	r2, [r3]
   116c4:	orr	r2, r2, #1
   116c8:	str	r2, [r3]
   116cc:	mov	r0, #0
   116d0:	b	11558 <__assert_fail@plt+0x154>
   116d4:	movw	r3, #50148	; 0xc3e4
   116d8:	movt	r3, #2
   116dc:	ldrb	r3, [r3, #8]
   116e0:	cmp	r3, #0
   116e4:	beq	11718 <__assert_fail@plt+0x314>
   116e8:	movw	r3, #50252	; 0xc44c
   116ec:	movt	r3, #2
   116f0:	ldr	r2, [r3]
   116f4:	orr	r2, r2, #1
   116f8:	str	r2, [r3]
   116fc:	movw	r3, #50140	; 0xc3dc
   11700:	movt	r3, #2
   11704:	mov	r1, #0
   11708:	ldr	r0, [r3]
   1170c:	bl	110c8 <setbuf@plt>
   11710:	mov	r0, #0
   11714:	b	11558 <__assert_fail@plt+0x154>
   11718:	movw	r2, #40536	; 0x9e58
   1171c:	movt	r2, #1
   11720:	mov	r1, #0
   11724:	mov	r0, #1
   11728:	bl	111f4 <error@plt>
   1172c:	b	116e8 <__assert_fail@plt+0x2e4>
   11730:	movw	r3, #50148	; 0xc3e4
   11734:	movt	r3, #2
   11738:	ldrb	r3, [r3, #8]
   1173c:	cmp	r3, #0
   11740:	beq	11798 <__assert_fail@plt+0x394>
   11744:	mov	r2, #0
   11748:	add	r1, sp, #4
   1174c:	mov	r0, r4
   11750:	bl	11284 <strtoul@plt>
   11754:	movw	r3, #50148	; 0xc3e4
   11758:	movt	r3, #2
   1175c:	str	r0, [r3, #12]
   11760:	ldr	r3, [sp, #4]
   11764:	ldrb	r3, [r3]
   11768:	cmp	r3, #0
   1176c:	bne	1177c <__assert_fail@plt+0x378>
   11770:	cmp	r0, #0
   11774:	movge	r0, #0
   11778:	bge	11558 <__assert_fail@plt+0x154>
   1177c:	movw	r2, #40628	; 0x9eb4
   11780:	movt	r2, #1
   11784:	mov	r1, #0
   11788:	mov	r0, #1
   1178c:	bl	111f4 <error@plt>
   11790:	mov	r0, #0
   11794:	b	11558 <__assert_fail@plt+0x154>
   11798:	movw	r2, #40596	; 0x9e94
   1179c:	movt	r2, #1
   117a0:	mov	r1, #0
   117a4:	mov	r0, #1
   117a8:	bl	111f4 <error@plt>
   117ac:	b	11744 <__assert_fail@plt+0x340>
   117b0:	movw	r3, #50252	; 0xc44c
   117b4:	movt	r3, #2
   117b8:	ldr	r2, [r3]
   117bc:	orr	r2, r2, #4
   117c0:	str	r2, [r3]
   117c4:	mov	r0, #0
   117c8:	b	11558 <__assert_fail@plt+0x154>
   117cc:	ldr	r5, [pc, #236]	; 118c0 <__assert_fail@plt+0x4bc>
   117d0:	mov	r2, r5
   117d4:	movw	r1, #49464	; 0xc138
   117d8:	movt	r1, #2
   117dc:	mov	r0, r4
   117e0:	bl	12f60 <__assert_fail@plt+0x1b5c>
   117e4:	movw	r3, #50244	; 0xc444
   117e8:	movt	r3, #2
   117ec:	str	r5, [r3]
   117f0:	mov	r0, #0
   117f4:	b	11558 <__assert_fail@plt+0x154>
   117f8:	movw	r3, #50252	; 0xc44c
   117fc:	movt	r3, #2
   11800:	ldr	r2, [r3]
   11804:	orr	r2, r2, #8
   11808:	str	r2, [r3]
   1180c:	mov	r0, #0
   11810:	b	11558 <__assert_fail@plt+0x154>
   11814:	movw	r3, #50256	; 0xc450
   11818:	movt	r3, #2
   1181c:	ldr	r2, [r3]
   11820:	orr	r2, r2, #5
   11824:	str	r2, [r3]
   11828:	mov	r0, #0
   1182c:	b	11558 <__assert_fail@plt+0x154>
   11830:	movw	r3, #50252	; 0xc44c
   11834:	movt	r3, #2
   11838:	ldr	r2, [r3]
   1183c:	orr	r2, r2, #256	; 0x100
   11840:	str	r2, [r3]
   11844:	mov	r2, #0
   11848:	mov	r1, r2
   1184c:	mov	r0, r4
   11850:	bl	12dc8 <__assert_fail@plt+0x19c4>
   11854:	movw	r3, #49464	; 0xc138
   11858:	movt	r3, #2
   1185c:	str	r0, [r3, #8]
   11860:	mov	r0, #0
   11864:	b	11558 <__assert_fail@plt+0x154>
   11868:	movw	r3, #50252	; 0xc44c
   1186c:	movt	r3, #2
   11870:	ldr	r2, [r3]
   11874:	orr	r2, r2, #32
   11878:	str	r2, [r3]
   1187c:	mov	r0, #0
   11880:	b	11558 <__assert_fail@plt+0x154>
   11884:	mov	r2, #0
   11888:	mov	r1, #255	; 0xff
   1188c:	mov	r0, r4
   11890:	bl	12dc8 <__assert_fail@plt+0x19c4>
   11894:	movw	r3, #50148	; 0xc3e4
   11898:	movt	r3, #2
   1189c:	str	r0, [r3, #32]
   118a0:	mov	r0, #0
   118a4:	b	11558 <__assert_fail@plt+0x154>
   118a8:	movw	r1, #40652	; 0x9ecc
   118ac:	movt	r1, #1
   118b0:	mov	r0, r2
   118b4:	bl	16864 <argp_error@@Base>
   118b8:	mov	r0, #7
   118bc:	b	11558 <__assert_fail@plt+0x154>
   118c0:	strdeq	ip, [r2], -r4
   118c4:	str	r4, [sp, #-8]!
   118c8:	str	lr, [sp, #4]
   118cc:	ldr	r1, [r0, #4]
   118d0:	movw	r0, #40676	; 0x9ee4
   118d4:	movt	r0, #1
   118d8:	bl	110f8 <printf@plt>
   118dc:	ldr	r4, [sp]
   118e0:	add	sp, sp, #4
   118e4:	pop	{pc}		; (ldr pc, [sp], #4)
   118e8:	strd	r4, [sp, #-20]!	; 0xffffffec
   118ec:	strd	r6, [sp, #8]
   118f0:	str	lr, [sp, #16]
   118f4:	vpush	{d8}
   118f8:	sub	sp, sp, #28
   118fc:	movw	r3, #50140	; 0xc3dc
   11900:	movt	r3, #2
   11904:	ldr	r0, [r3]
   11908:	bl	11104 <fflush@plt>
   1190c:	movw	r4, #50148	; 0xc3e4
   11910:	movt	r4, #2
   11914:	ldr	r3, [r4, #36]	; 0x24
   11918:	ldr	r1, [r3, #52]	; 0x34
   1191c:	movw	r0, #40700	; 0x9efc
   11920:	movt	r0, #1
   11924:	bl	110f8 <printf@plt>
   11928:	ldr	r3, [r4, #36]	; 0x24
   1192c:	ldr	r1, [r3, #112]	; 0x70
   11930:	movw	r0, #40728	; 0x9f18
   11934:	movt	r0, #1
   11938:	bl	110f8 <printf@plt>
   1193c:	ldr	r3, [r4, #36]	; 0x24
   11940:	ldr	r1, [r3, #116]	; 0x74
   11944:	movw	r0, #40756	; 0x9f34
   11948:	movt	r0, #1
   1194c:	bl	110f8 <printf@plt>
   11950:	ldr	r3, [r4, #36]	; 0x24
   11954:	ldr	r1, [r3, #120]	; 0x78
   11958:	cmp	r1, #0
   1195c:	bne	119f4 <__assert_fail@plt+0x5f0>
   11960:	movw	r3, #50148	; 0xc3e4
   11964:	movt	r3, #2
   11968:	ldr	r2, [r3, #36]	; 0x24
   1196c:	ldr	r3, [r2, #112]	; 0x70
   11970:	cmp	r3, #0
   11974:	beq	11990 <__assert_fail@plt+0x58c>
   11978:	ldr	r1, [r2, #116]	; 0x74
   1197c:	cmp	r3, r1
   11980:	bcs	11a04 <__assert_fail@plt+0x600>
   11984:	movw	r0, #40800	; 0x9f60
   11988:	movt	r0, #1
   1198c:	bl	110f8 <printf@plt>
   11990:	mov	r0, #10
   11994:	bl	112f0 <putchar@plt>
   11998:	movw	r3, #50148	; 0xc3e4
   1199c:	movt	r3, #2
   119a0:	ldr	r2, [r3, #36]	; 0x24
   119a4:	ldr	r3, [r2, #116]	; 0x74
   119a8:	cmp	r3, #0
   119ac:	beq	119c4 <__assert_fail@plt+0x5c0>
   119b0:	movw	r1, #49464	; 0xc138
   119b4:	movt	r1, #2
   119b8:	ldr	r1, [r1, #4]
   119bc:	cmp	r1, #7
   119c0:	bhi	11a24 <__assert_fail@plt+0x620>
   119c4:	movw	r3, #50148	; 0xc3e4
   119c8:	movt	r3, #2
   119cc:	ldr	r3, [r3, #36]	; 0x24
   119d0:	ldr	r0, [r3, #116]	; 0x74
   119d4:	clz	r0, r0
   119d8:	lsr	r0, r0, #5
   119dc:	add	sp, sp, #28
   119e0:	vpop	{d8}
   119e4:	ldrd	r4, [sp]
   119e8:	ldrd	r6, [sp, #8]
   119ec:	add	sp, sp, #16
   119f0:	pop	{pc}		; (ldr pc, [sp], #4)
   119f4:	movw	r0, #40780	; 0x9f4c
   119f8:	movt	r0, #1
   119fc:	bl	110f8 <printf@plt>
   11a00:	b	11960 <__assert_fail@plt+0x55c>
   11a04:	sub	r1, r3, r1
   11a08:	mov	r2, #100	; 0x64
   11a0c:	mul	r1, r2, r1
   11a10:	udiv	r1, r1, r3
   11a14:	movw	r0, #40836	; 0x9f84
   11a18:	movt	r0, #1
   11a1c:	bl	110f8 <printf@plt>
   11a20:	b	11990 <__assert_fail@plt+0x58c>
   11a24:	ldr	r1, [r2, #68]	; 0x44
   11a28:	ldr	r2, [r2, #120]	; 0x78
   11a2c:	add	r3, r3, r2
   11a30:	vmov	s15, r3
   11a34:	vcvt.f64.u32	d7, s15
   11a38:	vldr	d6, [r1, #16]
   11a3c:	vdiv.f64	d8, d6, d7
   11a40:	ldrd	r4, [r1]
   11a44:	ldrd	r6, [r1, #8]
   11a48:	vldr	d6, [r1, #24]
   11a4c:	vdiv.f64	d0, d6, d7
   11a50:	vldr	d1, [pc, #40]	; 11a80 <__assert_fail@plt+0x67c>
   11a54:	vmls.f64	d0, d8, d8
   11a58:	bl	1308c <__assert_fail@plt+0x1c88>
   11a5c:	vstr	d0, [sp, #16]
   11a60:	strd	r6, [sp, #8]
   11a64:	vstr	d8, [sp]
   11a68:	mov	r2, r4
   11a6c:	mov	r3, r5
   11a70:	movw	r0, #40856	; 0x9f98
   11a74:	movt	r0, #1
   11a78:	bl	110f8 <printf@plt>
   11a7c:	b	119c4 <__assert_fail@plt+0x5c0>
   11a80:	rscsle	sl, r1, #252, 18	; 0x3f0000
   11a84:	svccc	0x0040624d
   11a88:	str	r4, [sp, #-8]!
   11a8c:	str	lr, [sp, #4]
   11a90:	mov	r4, r0
   11a94:	movw	r0, #40912	; 0x9fd0
   11a98:	movt	r0, #1
   11a9c:	bl	110f8 <printf@plt>
   11aa0:	ldrb	r1, [r4, #1]
   11aa4:	movw	r3, #49464	; 0xc138
   11aa8:	movt	r3, #2
   11aac:	ldr	r3, [r3, #16]
   11ab0:	cmp	r3, r1
   11ab4:	beq	11b04 <__assert_fail@plt+0x700>
   11ab8:	movw	r3, #49464	; 0xc138
   11abc:	movt	r3, #2
   11ac0:	ldr	r3, [r3, #24]
   11ac4:	cmp	r1, r3
   11ac8:	beq	11afc <__assert_fail@plt+0x6f8>
   11acc:	movw	r3, #49464	; 0xc138
   11ad0:	movt	r3, #2
   11ad4:	ldr	r3, [r3, #32]
   11ad8:	cmp	r3, r1
   11adc:	ldreq	r3, [pc, #48]	; 11b14 <__assert_fail@plt+0x710>
   11ae0:	beq	11b08 <__assert_fail@plt+0x704>
   11ae4:	movw	r0, #40932	; 0x9fe4
   11ae8:	movt	r0, #1
   11aec:	bl	110f8 <printf@plt>
   11af0:	ldr	r4, [sp]
   11af4:	add	sp, sp, #4
   11af8:	pop	{pc}		; (ldr pc, [sp], #4)
   11afc:	ldr	r3, [pc, #20]	; 11b18 <__assert_fail@plt+0x714>
   11b00:	b	11b08 <__assert_fail@plt+0x704>
   11b04:	ldr	r3, [pc, #16]	; 11b1c <__assert_fail@plt+0x718>
   11b08:	ldr	r0, [r3, #4]
   11b0c:	bl	1120c <puts@plt>
   11b10:	b	11af0 <__assert_fail@plt+0x6ec>
   11b14:	andeq	ip, r2, r8, asr r1
   11b18:	andeq	ip, r2, r0, asr r1
   11b1c:	andeq	ip, r2, r8, asr #2
   11b20:	str	r4, [sp, #-8]!
   11b24:	str	lr, [sp, #4]
   11b28:	mov	r4, r0
   11b2c:	movw	r0, #40952	; 0x9ff8
   11b30:	movt	r0, #1
   11b34:	bl	110f8 <printf@plt>
   11b38:	ldrb	r1, [r4, #1]
   11b3c:	movw	r3, #49464	; 0xc138
   11b40:	movt	r3, #2
   11b44:	ldr	r3, [r3, #40]	; 0x28
   11b48:	cmp	r3, r1
   11b4c:	beq	11b80 <__assert_fail@plt+0x77c>
   11b50:	movw	r3, #49464	; 0xc138
   11b54:	movt	r3, #2
   11b58:	ldr	r3, [r3, #48]	; 0x30
   11b5c:	cmp	r3, r1
   11b60:	ldreq	r3, [pc, #40]	; 11b90 <__assert_fail@plt+0x78c>
   11b64:	beq	11b84 <__assert_fail@plt+0x780>
   11b68:	movw	r0, #40932	; 0x9fe4
   11b6c:	movt	r0, #1
   11b70:	bl	110f8 <printf@plt>
   11b74:	ldr	r4, [sp]
   11b78:	add	sp, sp, #4
   11b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b80:	ldr	r3, [pc, #12]	; 11b94 <__assert_fail@plt+0x790>
   11b84:	ldr	r0, [r3, #4]
   11b88:	bl	1120c <puts@plt>
   11b8c:	b	11b74 <__assert_fail@plt+0x770>
   11b90:	andeq	ip, r2, r8, ror #2
   11b94:	andeq	ip, r2, r0, ror #2
   11b98:	str	r4, [sp, #-8]!
   11b9c:	str	lr, [sp, #4]
   11ba0:	mov	r4, r0
   11ba4:	movw	r0, #40968	; 0xa008
   11ba8:	movt	r0, #1
   11bac:	bl	110f8 <printf@plt>
   11bb0:	ldrb	r1, [r4, #1]
   11bb4:	movw	r3, #49464	; 0xc138
   11bb8:	movt	r3, #2
   11bbc:	ldr	r3, [r3, #56]	; 0x38
   11bc0:	cmp	r3, r1
   11bc4:	beq	11c00 <__assert_fail@plt+0x7fc>
   11bc8:	ldr	r3, [pc, #64]	; 11c10 <__assert_fail@plt+0x80c>
   11bcc:	add	r0, r3, #32
   11bd0:	ldr	r2, [r3]
   11bd4:	cmp	r2, r1
   11bd8:	beq	11c04 <__assert_fail@plt+0x800>
   11bdc:	add	r3, r3, #8
   11be0:	cmp	r3, r0
   11be4:	bne	11bd0 <__assert_fail@plt+0x7cc>
   11be8:	movw	r0, #40932	; 0x9fe4
   11bec:	movt	r0, #1
   11bf0:	bl	110f8 <printf@plt>
   11bf4:	ldr	r4, [sp]
   11bf8:	add	sp, sp, #4
   11bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   11c00:	ldr	r3, [pc, #12]	; 11c14 <__assert_fail@plt+0x810>
   11c04:	ldr	r0, [r3, #4]
   11c08:	bl	1120c <puts@plt>
   11c0c:	b	11bf4 <__assert_fail@plt+0x7f0>
   11c10:	andeq	ip, r2, r8, ror r1
   11c14:	andeq	ip, r2, r0, ror r1
   11c18:	strd	r4, [sp, #-16]!
   11c1c:	str	r6, [sp, #8]
   11c20:	str	lr, [sp, #12]
   11c24:	sub	sp, sp, #16
   11c28:	mov	r4, r0
   11c2c:	movw	r3, #49464	; 0xc138
   11c30:	movt	r3, #2
   11c34:	ldr	r3, [r3, #4]
   11c38:	cmp	r3, #7
   11c3c:	movls	r2, #0
   11c40:	bhi	11d48 <__assert_fail@plt+0x944>
   11c44:	movw	r3, #50248	; 0xc448
   11c48:	movt	r3, #2
   11c4c:	ldr	r1, [r3]
   11c50:	cmp	r1, #0
   11c54:	beq	11c7c <__assert_fail@plt+0x878>
   11c58:	movw	r3, #49464	; 0xc138
   11c5c:	movt	r3, #2
   11c60:	ldr	r3, [r3, #4]
   11c64:	cmp	r3, r2
   11c68:	subhi	r3, r3, r2
   11c6c:	mov	r0, #1
   11c70:	str	r0, [sp]
   11c74:	mov	r0, r4
   11c78:	bl	131d8 <__assert_fail@plt+0x1dd4>
   11c7c:	mov	r1, #1
   11c80:	mov	r0, r4
   11c84:	bl	1314c <__assert_fail@plt+0x1d48>
   11c88:	subs	r6, r0, #0
   11c8c:	bne	11d90 <__assert_fail@plt+0x98c>
   11c90:	ldr	r5, [r4, #56]	; 0x38
   11c94:	add	r5, r5, #8
   11c98:	ldr	r3, [r4, #72]	; 0x48
   11c9c:	lsl	r2, r3, #3
   11ca0:	ldr	r1, [r4, #112]	; 0x70
   11ca4:	udiv	r3, r1, r2
   11ca8:	mls	r3, r2, r3, r1
   11cac:	ldr	r1, [r4, #76]	; 0x4c
   11cb0:	and	r0, r3, #7
   11cb4:	ldrb	r2, [r1, r3, asr #3]
   11cb8:	mov	ip, #1
   11cbc:	bic	r2, r2, ip, lsl r0
   11cc0:	strb	r2, [r1, r3, asr #3]
   11cc4:	ldr	r2, [r4, #80]	; 0x50
   11cc8:	mvn	r3, #127	; 0x7f
   11ccc:	strb	r3, [r2]
   11cd0:	mov	r3, #0
   11cd4:	strb	r3, [r2, #1]
   11cd8:	strh	r3, [r2, #2]
   11cdc:	ldr	r1, [r4, #60]	; 0x3c
   11ce0:	rev16	r1, r1
   11ce4:	strh	r1, [r2, #4]
   11ce8:	ldr	r1, [r4, #112]	; 0x70
   11cec:	rev16	r1, r1
   11cf0:	strh	r1, [r2, #6]
   11cf4:	add	r2, r4, #24
   11cf8:	mov	r1, #28
   11cfc:	str	r1, [sp, #4]
   11d00:	str	r2, [sp]
   11d04:	mov	r2, r5
   11d08:	ldr	r1, [r4, #80]	; 0x50
   11d0c:	ldr	r0, [r4]
   11d10:	bl	11308 <sendto@plt>
   11d14:	subs	r3, r0, #0
   11d18:	blt	11d90 <__assert_fail@plt+0x98c>
   11d1c:	ldr	r2, [r4, #112]	; 0x70
   11d20:	add	r2, r2, #1
   11d24:	str	r2, [r4, #112]	; 0x70
   11d28:	cmp	r5, r3
   11d2c:	bne	11d78 <__assert_fail@plt+0x974>
   11d30:	mov	r0, r6
   11d34:	add	sp, sp, #16
   11d38:	ldrd	r4, [sp]
   11d3c:	ldr	r6, [sp, #8]
   11d40:	add	sp, sp, #12
   11d44:	pop	{pc}		; (ldr pc, [sp], #4)
   11d48:	mov	r1, #0
   11d4c:	add	r0, sp, #8
   11d50:	bl	111e8 <gettimeofday@plt>
   11d54:	mov	r3, #1
   11d58:	str	r3, [sp]
   11d5c:	mov	r3, #8
   11d60:	mov	r2, #0
   11d64:	add	r1, sp, r3
   11d68:	mov	r0, r4
   11d6c:	bl	131d8 <__assert_fail@plt+0x1dd4>
   11d70:	mov	r2, #8
   11d74:	b	11c44 <__assert_fail@plt+0x840>
   11d78:	mov	r2, r5
   11d7c:	ldr	r1, [r4, #52]	; 0x34
   11d80:	movw	r0, #40996	; 0xa024
   11d84:	movt	r0, #1
   11d88:	bl	110f8 <printf@plt>
   11d8c:	b	11d30 <__assert_fail@plt+0x92c>
   11d90:	bl	112b4 <__errno_location@plt>
   11d94:	movw	r2, #41032	; 0xa048
   11d98:	movt	r2, #1
   11d9c:	ldr	r1, [r0]
   11da0:	mov	r0, #1
   11da4:	bl	111f4 <error@plt>
   11da8:	mvn	r6, #0
   11dac:	b	11d30 <__assert_fail@plt+0x92c>
   11db0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11db4:	strd	r6, [sp, #8]
   11db8:	strd	r8, [sp, #16]
   11dbc:	str	lr, [sp, #24]
   11dc0:	sub	sp, sp, #124	; 0x7c
   11dc4:	mov	r5, r0
   11dc8:	mov	r3, #46	; 0x2e
   11dcc:	add	r2, sp, #24
   11dd0:	add	r1, r0, #32
   11dd4:	mov	r0, #10
   11dd8:	bl	113c8 <inet_ntop@plt>
   11ddc:	mov	r3, #46	; 0x2e
   11de0:	add	r2, sp, #72	; 0x48
   11de4:	add	r1, r5, #16
   11de8:	mov	r0, #10
   11dec:	bl	113c8 <inet_ntop@plt>
   11df0:	movw	r0, #41048	; 0xa058
   11df4:	movt	r0, #1
   11df8:	bl	110f8 <printf@plt>
   11dfc:	add	r4, r5, #7
   11e00:	add	r9, r5, #15
   11e04:	movw	r8, #65529	; 0xfff9
   11e08:	movt	r8, #65535	; 0xffff
   11e0c:	sub	r8, r8, r5
   11e10:	movw	r7, #41064	; 0xa068
   11e14:	movt	r7, #1
   11e18:	movw	r6, #45480	; 0xb1a8
   11e1c:	movt	r6, #1
   11e20:	add	r2, r8, r4
   11e24:	and	r2, r2, #1
   11e28:	cmp	r2, #0
   11e2c:	movne	r2, r7
   11e30:	moveq	r2, r6
   11e34:	ldrb	r1, [r4, #1]!
   11e38:	movw	r0, #41068	; 0xa06c
   11e3c:	movt	r0, #1
   11e40:	bl	110f8 <printf@plt>
   11e44:	cmp	r4, r9
   11e48:	bne	11e20 <__assert_fail@plt+0xa1c>
   11e4c:	movw	r0, #41076	; 0xa074
   11e50:	movt	r0, #1
   11e54:	bl	1120c <puts@plt>
   11e58:	movw	r0, #41088	; 0xa080
   11e5c:	movt	r0, #1
   11e60:	bl	1120c <puts@plt>
   11e64:	ldr	r1, [r5, #8]
   11e68:	rev	r1, r1
   11e6c:	ldrh	r3, [r5, #12]
   11e70:	rev16	r3, r3
   11e74:	uxth	r3, r3
   11e78:	add	r2, sp, #24
   11e7c:	str	r2, [sp, #16]
   11e80:	add	r2, sp, #72	; 0x48
   11e84:	str	r2, [sp, #12]
   11e88:	ldrb	r2, [r5, #15]
   11e8c:	str	r2, [sp, #8]
   11e90:	ldrb	r2, [r5, #14]
   11e94:	str	r2, [sp, #4]
   11e98:	str	r3, [sp]
   11e9c:	ubfx	r3, r1, #0, #20
   11ea0:	ubfx	r2, r1, #20, #8
   11ea4:	lsr	r1, r1, #28
   11ea8:	movw	r0, #41124	; 0xa0a4
   11eac:	movt	r0, #1
   11eb0:	bl	110f8 <printf@plt>
   11eb4:	ldrb	r3, [r5, #14]
   11eb8:	cmp	r3, #58	; 0x3a
   11ebc:	beq	11ee0 <__assert_fail@plt+0xadc>
   11ec0:	mov	r0, #10
   11ec4:	bl	112f0 <putchar@plt>
   11ec8:	add	sp, sp, #124	; 0x7c
   11ecc:	ldrd	r4, [sp]
   11ed0:	ldrd	r6, [sp, #8]
   11ed4:	ldrd	r8, [sp, #16]
   11ed8:	add	sp, sp, #24
   11edc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee0:	ldrh	r3, [r5, #12]
   11ee4:	rev16	r3, r3
   11ee8:	uxth	r3, r3
   11eec:	ldrb	r2, [r5, #49]	; 0x31
   11ef0:	ldrb	r1, [r5, #48]	; 0x30
   11ef4:	movw	r0, #41164	; 0xa0cc
   11ef8:	movt	r0, #1
   11efc:	bl	110f8 <printf@plt>
   11f00:	ldrb	r3, [r5, #48]	; 0x30
   11f04:	sub	r3, r3, #128	; 0x80
   11f08:	cmp	r3, #1
   11f0c:	bhi	11ec0 <__assert_fail@plt+0xabc>
   11f10:	ldrh	r1, [r5, #52]	; 0x34
   11f14:	rev16	r1, r1
   11f18:	ldrh	r2, [r5, #54]	; 0x36
   11f1c:	rev16	r2, r2
   11f20:	uxth	r2, r2
   11f24:	uxth	r1, r1
   11f28:	movw	r0, #41204	; 0xa0f4
   11f2c:	movt	r0, #1
   11f30:	bl	110f8 <printf@plt>
   11f34:	b	11ec0 <__assert_fail@plt+0xabc>
   11f38:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11f3c:	strd	r6, [sp, #8]
   11f40:	strd	r8, [sp, #16]
   11f44:	strd	sl, [sp, #24]
   11f48:	str	lr, [sp, #32]
   11f4c:	vpush	{d8-d10}
   11f50:	sub	sp, sp, #1824	; 0x720
   11f54:	sub	sp, sp, #4
   11f58:	mov	r4, r0
   11f5c:	movw	r3, #50252	; 0xc44c
   11f60:	movt	r3, #2
   11f64:	ldr	r3, [r3]
   11f68:	and	r3, r3, #3
   11f6c:	cmp	r3, #3
   11f70:	beq	121d8 <__assert_fail@plt+0xdd4>
   11f74:	add	r3, sp, #1536	; 0x600
   11f78:	add	r3, r3, #8
   11f7c:	mov	r0, #0
   11f80:	mov	r1, #0
   11f84:	strd	r0, [r3]
   11f88:	strd	r0, [r3, #8]
   11f8c:	strd	r0, [r3, #16]
   11f90:	mov	r2, #0
   11f94:	movt	r2, #65408	; 0xff80
   11f98:	movw	r3, #52580	; 0xcd64
   11f9c:	movt	r3, #16845	; 0x41cd
   11fa0:	add	ip, sp, #1536	; 0x600
   11fa4:	strd	r2, [ip]
   11fa8:	movw	r3, #50148	; 0xc3e4
   11fac:	movt	r3, #2
   11fb0:	ldr	r5, [r3, #36]	; 0x24
   11fb4:	movw	r3, #49464	; 0xc138
   11fb8:	movt	r3, #2
   11fbc:	ldr	r3, [r3, #4]
   11fc0:	str	r3, [r5, #56]	; 0x38
   11fc4:	str	ip, [r5, #68]	; 0x44
   11fc8:	add	r2, sp, #512	; 0x200
   11fcc:	strd	r0, [r2, #8]
   11fd0:	strd	r0, [r2, #16]
   11fd4:	strd	r0, [r2, #24]
   11fd8:	mov	r3, #10
   11fdc:	str	r3, [sp, #516]	; 0x204
   11fe0:	mov	r3, #194	; 0xc2
   11fe4:	str	r3, [sp, #512]	; 0x200
   11fe8:	add	r3, sp, #256	; 0x100
   11fec:	mov	r1, #0
   11ff0:	mov	r0, r4
   11ff4:	bl	113bc <getaddrinfo@plt>
   11ff8:	cmp	r0, #0
   11ffc:	bne	121f0 <__assert_fail@plt+0xdec>
   12000:	ldr	r6, [sp, #256]	; 0x100
   12004:	ldr	r2, [r6, #16]
   12008:	ldr	r1, [r6, #20]
   1200c:	add	r0, r5, #24
   12010:	bl	11158 <memcpy@plt>
   12014:	ldr	r0, [r6, #24]
   12018:	cmp	r0, #0
   1201c:	moveq	r0, r4
   12020:	bl	111ac <strdup@plt>
   12024:	str	r0, [r5, #52]	; 0x34
   12028:	mov	r0, r6
   1202c:	bl	113b0 <freeaddrinfo@plt>
   12030:	ldr	r3, [r5, #52]	; 0x34
   12034:	cmp	r3, #0
   12038:	beq	121f8 <__assert_fail@plt+0xdf4>
   1203c:	movw	r3, #50148	; 0xc3e4
   12040:	movt	r3, #2
   12044:	ldr	r0, [r3, #36]	; 0x24
   12048:	mov	r3, #1
   1204c:	str	r3, [sp, #8]
   12050:	mov	r3, #0
   12054:	str	r3, [sp, #4]
   12058:	str	r3, [sp]
   1205c:	mov	r3, #256	; 0x100
   12060:	add	r2, sp, #1568	; 0x620
   12064:	mov	r1, #28
   12068:	add	r0, r0, #24
   1206c:	bl	1132c <getnameinfo@plt>
   12070:	cmp	r0, #0
   12074:	beq	1209c <__assert_fail@plt+0xc98>
   12078:	cmn	r0, #11
   1207c:	beq	12214 <__assert_fail@plt+0xe10>
   12080:	bl	11140 <gai_strerror@plt>
   12084:	mov	r3, r0
   12088:	movw	r2, #41276	; 0xa13c
   1208c:	movt	r2, #1
   12090:	mov	r1, #0
   12094:	mov	r0, #1
   12098:	bl	111f4 <error@plt>
   1209c:	movw	r3, #49464	; 0xc138
   120a0:	movt	r3, #2
   120a4:	movw	r2, #50148	; 0xc3e4
   120a8:	movt	r2, #2
   120ac:	ldr	r1, [r2, #36]	; 0x24
   120b0:	ldr	r3, [r3, #4]
   120b4:	add	r2, sp, #1568	; 0x620
   120b8:	ldr	r1, [r1, #52]	; 0x34
   120bc:	movw	r0, #41292	; 0xa14c
   120c0:	movt	r0, #1
   120c4:	bl	110f8 <printf@plt>
   120c8:	movw	r3, #50252	; 0xc44c
   120cc:	movt	r3, #2
   120d0:	ldr	r3, [r3]
   120d4:	tst	r3, #32
   120d8:	bne	12228 <__assert_fail@plt+0xe24>
   120dc:	mov	r0, #10
   120e0:	bl	112f0 <putchar@plt>
   120e4:	movw	r4, #50148	; 0xc3e4
   120e8:	movt	r4, #2
   120ec:	ldr	r9, [r4, #36]	; 0x24
   120f0:	movw	r1, #5376	; 0x1500
   120f4:	movt	r1, #1
   120f8:	mov	r0, #2
   120fc:	bl	11164 <signal@plt>
   12100:	ldr	r3, [r9]
   12104:	add	r3, r3, #1
   12108:	str	r3, [sp, #36]	; 0x24
   1210c:	mov	r2, #0
   12110:	mov	r3, #0
   12114:	strd	r2, [sp, #52]	; 0x34
   12118:	strd	r2, [sp, #68]	; 0x44
   1211c:	strd	r2, [sp, #76]	; 0x4c
   12120:	ldr	r3, [r4, #12]
   12124:	cmp	r3, #0
   12128:	beq	12150 <__assert_fail@plt+0xd4c>
   1212c:	mov	r4, #0
   12130:	movw	r5, #50148	; 0xc3e4
   12134:	movt	r5, #2
   12138:	mov	r0, r9
   1213c:	bl	11c18 <__assert_fail@plt+0x814>
   12140:	add	r4, r4, #1
   12144:	ldr	r3, [r5, #12]
   12148:	cmp	r4, r3
   1214c:	bcc	12138 <__assert_fail@plt+0xd34>
   12150:	movw	r3, #50252	; 0xc44c
   12154:	movt	r3, #2
   12158:	ldr	r3, [r3]
   1215c:	tst	r3, #1
   12160:	movwne	r3, #10000	; 0x2710
   12164:	strne	r3, [sp, #72]	; 0x48
   12168:	bne	12194 <__assert_fail@plt+0xd90>
   1216c:	ldr	r1, [r9, #20]
   12170:	movw	r3, #19923	; 0x4dd3
   12174:	movt	r3, #4194	; 0x1062
   12178:	umull	r2, r3, r3, r1
   1217c:	lsr	r3, r3, #6
   12180:	str	r3, [sp, #68]	; 0x44
   12184:	mov	r2, #1000	; 0x3e8
   12188:	mls	r3, r2, r3, r1
   1218c:	mul	r3, r2, r3
   12190:	str	r3, [sp, #72]	; 0x48
   12194:	mov	r1, #0
   12198:	add	r0, sp, #60	; 0x3c
   1219c:	bl	111e8 <gettimeofday@plt>
   121a0:	mov	r0, r9
   121a4:	bl	11c18 <__assert_fail@plt+0x814>
   121a8:	mov	r5, #0
   121ac:	str	r5, [sp, #20]
   121b0:	str	r5, [sp, #24]
   121b4:	movw	fp, #16959	; 0x423f
   121b8:	movt	fp, #15
   121bc:	movw	sl, #49464	; 0xc138
   121c0:	movt	sl, #2
   121c4:	add	r3, sl, #128	; 0x80
   121c8:	str	r3, [sp, #40]	; 0x28
   121cc:	vldr	d9, [pc, #820]	; 12508 <__assert_fail@plt+0x1104>
   121d0:	vldr	d10, [pc, #824]	; 12510 <__assert_fail@plt+0x110c>
   121d4:	b	12800 <__assert_fail@plt+0x13fc>
   121d8:	movw	r2, #41228	; 0xa10c
   121dc:	movt	r2, #1
   121e0:	mov	r1, #0
   121e4:	mov	r0, #1
   121e8:	bl	111f4 <error@plt>
   121ec:	b	11f74 <__assert_fail@plt+0xb70>
   121f0:	mov	r0, #0
   121f4:	bl	17cd0 <argp_parse@@Base+0xcd8>
   121f8:	mov	r3, r4
   121fc:	movw	r2, #41260	; 0xa12c
   12200:	movt	r2, #1
   12204:	mov	r1, #0
   12208:	mov	r0, #1
   1220c:	bl	111f4 <error@plt>
   12210:	b	1203c <__assert_fail@plt+0xc38>
   12214:	bl	112b4 <__errno_location@plt>
   12218:	ldr	r0, [r0]
   1221c:	bl	11230 <strerror@plt>
   12220:	mov	r3, r0
   12224:	b	12088 <__assert_fail@plt+0xc84>
   12228:	movw	r3, #50148	; 0xc3e4
   1222c:	movt	r3, #2
   12230:	ldr	r3, [r3, #36]	; 0x24
   12234:	ldr	r1, [r3, #60]	; 0x3c
   12238:	mov	r2, r1
   1223c:	movw	r0, #41324	; 0xa16c
   12240:	movt	r0, #1
   12244:	bl	110f8 <printf@plt>
   12248:	b	120dc <__assert_fail@plt+0xcd8>
   1224c:	mov	r3, #0
   12250:	str	r3, [sp, #56]	; 0x38
   12254:	str	r3, [sp, #52]	; 0x34
   12258:	b	12910 <__assert_fail@plt+0x150c>
   1225c:	bl	112b4 <__errno_location@plt>
   12260:	ldr	r1, [r0]
   12264:	cmp	r1, #4
   12268:	beq	12800 <__assert_fail@plt+0x13fc>
   1226c:	movw	r2, #41344	; 0xa180
   12270:	movt	r2, #1
   12274:	mov	r0, #1
   12278:	bl	111f4 <error@plt>
   1227c:	b	12800 <__assert_fail@plt+0x13fc>
   12280:	ldr	r3, [r9, #80]	; 0x50
   12284:	str	r3, [sp, #84]	; 0x54
   12288:	ldr	r3, [r9, #56]	; 0x38
   1228c:	add	r3, r3, #8
   12290:	str	r3, [sp, #88]	; 0x58
   12294:	add	r3, r9, #84	; 0x54
   12298:	str	r3, [sp, #28]
   1229c:	str	r3, [sp, #100]	; 0x64
   122a0:	mov	r3, #28
   122a4:	str	r3, [sp, #104]	; 0x68
   122a8:	add	r3, sp, #84	; 0x54
   122ac:	str	r3, [sp, #108]	; 0x6c
   122b0:	mov	r3, #1
   122b4:	str	r3, [sp, #112]	; 0x70
   122b8:	add	r3, sp, #512	; 0x200
   122bc:	str	r3, [sp, #116]	; 0x74
   122c0:	mov	r3, #1024	; 0x400
   122c4:	str	r3, [sp, #120]	; 0x78
   122c8:	mov	r2, #0
   122cc:	str	r2, [sp, #124]	; 0x7c
   122d0:	add	r1, sp, #100	; 0x64
   122d4:	ldr	r0, [r9]
   122d8:	bl	11398 <recvmsg@plt>
   122dc:	subs	r3, r0, #0
   122e0:	str	r3, [sp, #16]
   122e4:	blt	12470 <__assert_fail@plt+0x106c>
   122e8:	ldr	r1, [sp, #120]	; 0x78
   122ec:	cmp	r1, #11
   122f0:	mvnls	r6, #0
   122f4:	bls	12378 <__assert_fail@plt+0xf74>
   122f8:	ldr	r3, [sp, #116]	; 0x74
   122fc:	cmp	r3, #0
   12300:	beq	1236c <__assert_fail@plt+0xf68>
   12304:	add	r1, r3, r1
   12308:	ldr	r2, [r3, #4]
   1230c:	cmp	r2, #41	; 0x29
   12310:	beq	12358 <__assert_fail@plt+0xf54>
   12314:	ldr	r2, [r3]
   12318:	cmp	r2, #11
   1231c:	bls	12374 <__assert_fail@plt+0xf70>
   12320:	add	r2, r2, #3
   12324:	bic	r2, r2, #3
   12328:	add	r3, r3, r2
   1232c:	add	r2, r3, #12
   12330:	cmp	r1, r2
   12334:	bcc	124fc <__assert_fail@plt+0x10f8>
   12338:	ldr	r2, [r3]
   1233c:	add	r2, r2, #3
   12340:	bic	r2, r2, #3
   12344:	add	r2, r3, r2
   12348:	cmp	r1, r2
   1234c:	bcs	12308 <__assert_fail@plt+0xf04>
   12350:	mvn	r6, #0
   12354:	b	12378 <__assert_fail@plt+0xf74>
   12358:	ldr	r2, [r3, #8]
   1235c:	cmp	r2, #52	; 0x34
   12360:	bne	12314 <__assert_fail@plt+0xf10>
   12364:	ldr	r6, [r3, #12]
   12368:	b	12378 <__assert_fail@plt+0xf74>
   1236c:	mvn	r6, #0
   12370:	b	12378 <__assert_fail@plt+0xf74>
   12374:	mvn	r6, #0
   12378:	ldr	r4, [r9, #80]	; 0x50
   1237c:	ldrb	r3, [r4]
   12380:	cmp	r3, #129	; 0x81
   12384:	beq	12518 <__assert_fail@plt+0x1114>
   12388:	movw	r3, #50148	; 0xc3e4
   1238c:	movt	r3, #2
   12390:	ldr	r3, [r3, #36]	; 0x24
   12394:	ldr	r1, [r4, #32]
   12398:	ldr	r2, [r3, #32]
   1239c:	cmp	r1, r2
   123a0:	bne	12470 <__assert_fail@plt+0x106c>
   123a4:	ldr	r1, [r4, #36]	; 0x24
   123a8:	ldr	r2, [r3, #36]	; 0x24
   123ac:	cmp	r1, r2
   123b0:	bne	12470 <__assert_fail@plt+0x106c>
   123b4:	ldr	r1, [r4, #40]	; 0x28
   123b8:	ldr	r2, [r3, #40]	; 0x28
   123bc:	cmp	r1, r2
   123c0:	bne	12470 <__assert_fail@plt+0x106c>
   123c4:	ldr	r2, [r4, #44]	; 0x2c
   123c8:	ldr	r3, [r3, #44]	; 0x2c
   123cc:	cmp	r2, r3
   123d0:	bne	12470 <__assert_fail@plt+0x106c>
   123d4:	ldrb	r3, [r4, #14]
   123d8:	cmp	r3, #58	; 0x3a
   123dc:	bne	12470 <__assert_fail@plt+0x106c>
   123e0:	ldrb	r3, [r4, #48]	; 0x30
   123e4:	cmp	r3, #128	; 0x80
   123e8:	bne	12470 <__assert_fail@plt+0x106c>
   123ec:	ldr	r3, [r9, #60]	; 0x3c
   123f0:	rev16	r3, r3
   123f4:	uxth	r3, r3
   123f8:	ldrh	r2, [r4, #52]	; 0x34
   123fc:	cmp	r2, r3
   12400:	bne	12470 <__assert_fail@plt+0x106c>
   12404:	mov	r1, #28
   12408:	ldr	r0, [sp, #28]
   1240c:	bl	13338 <__assert_fail@plt+0x1f34>
   12410:	mov	r6, r0
   12414:	mov	r2, r0
   12418:	ldr	r1, [sp, #16]
   1241c:	movw	r0, #41456	; 0xa1f0
   12420:	movt	r0, #1
   12424:	bl	110f8 <printf@plt>
   12428:	mov	r0, r6
   1242c:	bl	17cd0 <argp_parse@@Base+0xcd8>
   12430:	ldrb	r1, [r4]
   12434:	ldr	r3, [sl, #96]	; 0x60
   12438:	cmp	r1, r3
   1243c:	beq	12778 <__assert_fail@plt+0x1374>
   12440:	add	r3, sl, #104	; 0x68
   12444:	ldr	r2, [r3]
   12448:	cmp	r1, r2
   1244c:	beq	1277c <__assert_fail@plt+0x1378>
   12450:	add	r3, r3, #8
   12454:	ldr	r2, [sp, #40]	; 0x28
   12458:	cmp	r3, r2
   1245c:	bne	12444 <__assert_fail@plt+0x1040>
   12460:	movw	r0, #41476	; 0xa204
   12464:	movt	r0, #1
   12468:	bl	110f8 <printf@plt>
   1246c:	add	r5, r5, #1
   12470:	ldr	r3, [sp, #24]
   12474:	cmp	r3, #0
   12478:	beq	127a8 <__assert_fail@plt+0x13a4>
   1247c:	ldr	r1, [sl, #12]
   12480:	add	r0, r9, #12
   12484:	bl	132dc <__assert_fail@plt+0x1ed8>
   12488:	cmp	r0, #0
   1248c:	bne	124b0 <__assert_fail@plt+0x10ac>
   12490:	ldr	r2, [r9, #8]
   12494:	cmp	r2, r5
   12498:	movhi	r3, #0
   1249c:	movls	r3, #1
   124a0:	cmp	r2, #0
   124a4:	moveq	r3, #0
   124a8:	cmp	r3, #0
   124ac:	beq	12800 <__assert_fail@plt+0x13fc>
   124b0:	mov	r0, r9
   124b4:	bl	13294 <__assert_fail@plt+0x1e90>
   124b8:	bl	118e8 <__assert_fail@plt+0x4e4>
   124bc:	mov	r4, r0
   124c0:	movw	r3, #50148	; 0xc3e4
   124c4:	movt	r3, #2
   124c8:	ldr	r3, [r3, #36]	; 0x24
   124cc:	ldr	r0, [r3, #52]	; 0x34
   124d0:	bl	17cd0 <argp_parse@@Base+0xcd8>
   124d4:	mov	r0, r4
   124d8:	add	sp, sp, #1824	; 0x720
   124dc:	add	sp, sp, #4
   124e0:	vpop	{d8-d10}
   124e4:	ldrd	r4, [sp]
   124e8:	ldrd	r6, [sp, #8]
   124ec:	ldrd	r8, [sp, #16]
   124f0:	ldrd	sl, [sp, #24]
   124f4:	add	sp, sp, #32
   124f8:	pop	{pc}		; (ldr pc, [sp], #4)
   124fc:	mvn	r6, #0
   12500:	b	12378 <__assert_fail@plt+0xf74>
   12504:	nop	{0}
	...
   12514:	addmi	r4, pc, r0
   12518:	ldrh	r3, [r4, #4]
   1251c:	rev16	r3, r3
   12520:	uxth	r3, r3
   12524:	ldr	r2, [r9, #60]	; 0x3c
   12528:	cmp	r3, r2
   1252c:	bne	12470 <__assert_fail@plt+0x106c>
   12530:	ldrh	r3, [r4, #6]
   12534:	rev16	r3, r3
   12538:	uxth	r3, r3
   1253c:	ldr	r2, [r9, #72]	; 0x48
   12540:	lsl	r2, r2, #3
   12544:	sdiv	r1, r3, r2
   12548:	mls	r3, r2, r1, r3
   1254c:	ldr	r0, [r9, #76]	; 0x4c
   12550:	ldrb	r2, [r0, r3, asr #3]
   12554:	and	ip, r3, #7
   12558:	asr	r1, r2, ip
   1255c:	ands	r1, r1, #1
   12560:	str	r1, [sp, #44]	; 0x2c
   12564:	beq	12680 <__assert_fail@plt+0x127c>
   12568:	ldr	r3, [r9, #120]	; 0x78
   1256c:	add	r3, r3, #1
   12570:	str	r3, [r9, #120]	; 0x78
   12574:	ldr	r8, [r9, #68]	; 0x44
   12578:	mov	r1, #0
   1257c:	add	r0, sp, #92	; 0x5c
   12580:	bl	111e8 <gettimeofday@plt>
   12584:	ldr	r3, [sp, #16]
   12588:	sub	r3, r3, #8
   1258c:	cmp	r3, #7
   12590:	vmovls.f64	d8, d9
   12594:	bhi	1269c <__assert_fail@plt+0x1298>
   12598:	movw	r3, #50252	; 0xc44c
   1259c:	movt	r3, #2
   125a0:	ldr	r3, [r3]
   125a4:	tst	r3, #8
   125a8:	bne	1246c <__assert_fail@plt+0x1068>
   125ac:	tst	r3, #1
   125b0:	bne	12714 <__assert_fail@plt+0x1310>
   125b4:	and	r3, r3, #4
   125b8:	cmp	r3, #0
   125bc:	moveq	r7, #32
   125c0:	str	r7, [sp, #8]
   125c4:	mov	r3, #0
   125c8:	str	r3, [sp, #4]
   125cc:	str	r3, [sp]
   125d0:	mov	r3, #256	; 0x100
   125d4:	add	r2, sp, r3
   125d8:	mov	r1, #28
   125dc:	ldr	r0, [sp, #28]
   125e0:	bl	1132c <getnameinfo@plt>
   125e4:	cmp	r0, #0
   125e8:	beq	12628 <__assert_fail@plt+0x1224>
   125ec:	cmn	r0, #11
   125f0:	beq	1272c <__assert_fail@plt+0x1328>
   125f4:	bl	11140 <gai_strerror@plt>
   125f8:	mov	r2, r0
   125fc:	movw	r3, #50136	; 0xc3d8
   12600:	movt	r3, #2
   12604:	movw	r1, #41360	; 0xa190
   12608:	movt	r1, #1
   1260c:	ldr	r0, [r3]
   12610:	bl	112a8 <fprintf@plt>
   12614:	movw	r3, #41384	; 0xa1a8
   12618:	movt	r3, #1
   1261c:	ldrd	r2, [r3]
   12620:	add	r1, sp, #256	; 0x100
   12624:	strd	r2, [r1]
   12628:	ldrh	r3, [r4, #6]
   1262c:	rev16	r3, r3
   12630:	uxth	r3, r3
   12634:	add	r2, sp, #256	; 0x100
   12638:	ldr	r1, [sp, #16]
   1263c:	movw	r0, #41392	; 0xa1b0
   12640:	movt	r0, #1
   12644:	bl	110f8 <printf@plt>
   12648:	cmp	r6, #0
   1264c:	bge	12740 <__assert_fail@plt+0x133c>
   12650:	ldr	r3, [sp, #32]
   12654:	cmp	r3, #0
   12658:	bne	12754 <__assert_fail@plt+0x1350>
   1265c:	ldr	r3, [sp, #44]	; 0x2c
   12660:	cmp	r3, #0
   12664:	bne	12768 <__assert_fail@plt+0x1364>
   12668:	movw	r3, #50140	; 0xc3dc
   1266c:	movt	r3, #2
   12670:	ldr	r1, [r3]
   12674:	mov	r0, #10
   12678:	bl	11374 <putc@plt>
   1267c:	b	1246c <__assert_fail@plt+0x1068>
   12680:	mov	r1, #1
   12684:	orr	r2, r2, r1, lsl ip
   12688:	strb	r2, [r0, r3, asr #3]
   1268c:	ldr	r3, [r9, #116]	; 0x74
   12690:	add	r3, r3, r1
   12694:	str	r3, [r9, #116]	; 0x74
   12698:	b	12574 <__assert_fail@plt+0x1170>
   1269c:	mov	r3, r4
   126a0:	ldr	r2, [r3, #8]!
   126a4:	ldr	r3, [r3, #4]
   126a8:	str	r2, [sp, #256]	; 0x100
   126ac:	str	r3, [sp, #260]	; 0x104
   126b0:	add	r1, sp, #256	; 0x100
   126b4:	add	r0, sp, #92	; 0x5c
   126b8:	bl	13034 <__assert_fail@plt+0x1c30>
   126bc:	vldr	s15, [sp, #92]	; 0x5c
   126c0:	vcvt.f64.s32	d7, s15
   126c4:	vldr	s13, [sp, #96]	; 0x60
   126c8:	vcvt.f64.s32	d6, s13
   126cc:	vdiv.f64	d8, d6, d10
   126d0:	vmla.f64	d8, d7, d10
   126d4:	vldr	d7, [r8, #16]
   126d8:	vadd.f64	d7, d7, d8
   126dc:	vstr	d7, [r8, #16]
   126e0:	vldr	d7, [r8, #24]
   126e4:	vmla.f64	d7, d8, d8
   126e8:	vstr	d7, [r8, #24]
   126ec:	vldr	d7, [r8]
   126f0:	vcmpe.f64	d8, d7
   126f4:	vmrs	APSR_nzcv, fpscr
   126f8:	vstrmi	d8, [r8]
   126fc:	vldr	d7, [r8, #8]
   12700:	vcmpe.f64	d8, d7
   12704:	vmrs	APSR_nzcv, fpscr
   12708:	vstrgt	d8, [r8, #8]
   1270c:	str	r7, [sp, #32]
   12710:	b	12598 <__assert_fail@plt+0x1194>
   12714:	movw	r3, #50140	; 0xc3dc
   12718:	movt	r3, #2
   1271c:	ldr	r1, [r3]
   12720:	mov	r0, #8
   12724:	bl	11374 <putc@plt>
   12728:	b	1246c <__assert_fail@plt+0x1068>
   1272c:	bl	112b4 <__errno_location@plt>
   12730:	ldr	r0, [r0]
   12734:	bl	11230 <strerror@plt>
   12738:	mov	r2, r0
   1273c:	b	125fc <__assert_fail@plt+0x11f8>
   12740:	mov	r1, r6
   12744:	movw	r0, #41424	; 0xa1d0
   12748:	movt	r0, #1
   1274c:	bl	110f8 <printf@plt>
   12750:	b	12650 <__assert_fail@plt+0x124c>
   12754:	vmov	r2, r3, d8
   12758:	movw	r0, #41432	; 0xa1d8
   1275c:	movt	r0, #1
   12760:	bl	110f8 <printf@plt>
   12764:	b	1265c <__assert_fail@plt+0x1258>
   12768:	movw	r0, #41448	; 0xa1e8
   1276c:	movt	r0, #1
   12770:	bl	110f8 <printf@plt>
   12774:	b	12668 <__assert_fail@plt+0x1264>
   12778:	add	r3, sl, #96	; 0x60
   1277c:	ldr	r3, [r3, #4]
   12780:	mov	r0, r4
   12784:	blx	r3
   12788:	movw	r3, #50252	; 0xc44c
   1278c:	movt	r3, #2
   12790:	ldr	r3, [r3]
   12794:	tst	r3, #32
   12798:	beq	1246c <__assert_fail@plt+0x1068>
   1279c:	mov	r0, r4
   127a0:	bl	11db0 <__assert_fail@plt+0x9ac>
   127a4:	b	1246c <__assert_fail@plt+0x1068>
   127a8:	mov	r1, #0
   127ac:	add	r0, sp, #76	; 0x4c
   127b0:	bl	111e8 <gettimeofday@plt>
   127b4:	add	r3, sp, #76	; 0x4c
   127b8:	str	r3, [sp, #24]
   127bc:	b	1247c <__assert_fail@plt+0x1078>
   127c0:	mov	r0, r9
   127c4:	bl	11c18 <__assert_fail@plt+0x814>
   127c8:	movw	r3, #50252	; 0xc44c
   127cc:	movt	r3, #2
   127d0:	ldr	r3, [r3]
   127d4:	and	r3, r3, #9
   127d8:	cmp	r3, #1
   127dc:	beq	12974 <__assert_fail@plt+0x1570>
   127e0:	ldr	r1, [sl, #12]
   127e4:	add	r0, r9, #12
   127e8:	bl	132dc <__assert_fail@plt+0x1ed8>
   127ec:	cmp	r0, #0
   127f0:	bne	124b0 <__assert_fail@plt+0x10ac>
   127f4:	mov	r1, #0
   127f8:	add	r0, sp, #60	; 0x3c
   127fc:	bl	111e8 <gettimeofday@plt>
   12800:	movw	r3, #50148	; 0xc3e4
   12804:	movt	r3, #2
   12808:	ldr	r3, [r3]
   1280c:	str	r3, [sp, #32]
   12810:	cmp	r3, #0
   12814:	bne	124b0 <__assert_fail@plt+0x10ac>
   12818:	add	r3, sp, #128	; 0x80
   1281c:	add	r2, sp, #124	; 0x7c
   12820:	add	r3, r3, #124	; 0x7c
   12824:	mov	r1, #0
   12828:	str	r1, [r2, #4]!
   1282c:	cmp	r2, r3
   12830:	bne	12828 <__assert_fail@plt+0x1424>
   12834:	ldr	r3, [r9]
   12838:	add	r2, r3, #31
   1283c:	cmp	r3, #0
   12840:	movge	r2, r3
   12844:	asr	r2, r2, #5
   12848:	add	r1, sp, #1824	; 0x720
   1284c:	add	r2, r1, r2, lsl #2
   12850:	rsbs	r1, r3, #0
   12854:	and	r3, r3, #31
   12858:	and	r1, r1, #31
   1285c:	rsbpl	r3, r1, #0
   12860:	ldr	r1, [r2, #-1696]	; 0xfffff960
   12864:	mov	r0, #1
   12868:	orr	r3, r1, r0, lsl r3
   1286c:	str	r3, [r2, #-1696]	; 0xfffff960
   12870:	mov	r1, #0
   12874:	add	r0, sp, #76	; 0x4c
   12878:	bl	111e8 <gettimeofday@plt>
   1287c:	ldr	r2, [sp, #60]	; 0x3c
   12880:	ldr	r3, [sp, #68]	; 0x44
   12884:	add	r2, r2, r3
   12888:	ldr	r3, [sp, #76]	; 0x4c
   1288c:	sub	r2, r2, r3
   12890:	str	r2, [sp, #52]	; 0x34
   12894:	ldr	r3, [sp, #64]	; 0x40
   12898:	ldr	r1, [sp, #72]	; 0x48
   1289c:	add	r3, r3, r1
   128a0:	ldr	r1, [sp, #80]	; 0x50
   128a4:	sub	r3, r3, r1
   128a8:	str	r3, [sp, #56]	; 0x38
   128ac:	cmp	r3, #0
   128b0:	bge	128d0 <__assert_fail@plt+0x14cc>
   128b4:	add	r3, r3, #999424	; 0xf4000
   128b8:	add	r3, r3, #576	; 0x240
   128bc:	sub	r2, r2, #1
   128c0:	cmp	r3, #0
   128c4:	blt	128b4 <__assert_fail@plt+0x14b0>
   128c8:	str	r3, [sp, #56]	; 0x38
   128cc:	str	r2, [sp, #52]	; 0x34
   128d0:	ldr	r3, [sp, #56]	; 0x38
   128d4:	cmp	r3, fp
   128d8:	ble	12904 <__assert_fail@plt+0x1500>
   128dc:	ldr	r2, [sp, #52]	; 0x34
   128e0:	add	r2, r2, #1
   128e4:	sub	r3, r3, #999424	; 0xf4000
   128e8:	sub	r3, r3, #576	; 0x240
   128ec:	mov	r1, r2
   128f0:	add	r2, r2, #1
   128f4:	cmp	r3, fp
   128f8:	bgt	128e4 <__assert_fail@plt+0x14e0>
   128fc:	str	r3, [sp, #56]	; 0x38
   12900:	str	r1, [sp, #52]	; 0x34
   12904:	ldr	r3, [sp, #52]	; 0x34
   12908:	cmp	r3, #0
   1290c:	blt	1224c <__assert_fail@plt+0xe48>
   12910:	add	r3, sp, #52	; 0x34
   12914:	str	r3, [sp]
   12918:	mov	r3, #0
   1291c:	mov	r2, r3
   12920:	add	r1, sp, #128	; 0x80
   12924:	ldr	r0, [sp, #36]	; 0x24
   12928:	bl	11188 <select@plt>
   1292c:	subs	r7, r0, #0
   12930:	blt	1225c <__assert_fail@plt+0xe58>
   12934:	cmp	r7, #1
   12938:	beq	12280 <__assert_fail@plt+0xe7c>
   1293c:	ldr	r3, [r9, #8]
   12940:	cmp	r3, #0
   12944:	beq	127c0 <__assert_fail@plt+0x13bc>
   12948:	ldr	r2, [r9, #112]	; 0x70
   1294c:	cmp	r3, r2
   12950:	bhi	127c0 <__assert_fail@plt+0x13bc>
   12954:	ldr	r3, [sp, #20]
   12958:	cmp	r3, #0
   1295c:	bne	124b0 <__assert_fail@plt+0x10ac>
   12960:	mov	r3, #10
   12964:	str	r3, [sp, #68]	; 0x44
   12968:	mov	r3, #1
   1296c:	str	r3, [sp, #20]
   12970:	b	127f4 <__assert_fail@plt+0x13f0>
   12974:	movw	r3, #50140	; 0xc3dc
   12978:	movt	r3, #2
   1297c:	ldr	r1, [r3]
   12980:	mov	r0, #46	; 0x2e
   12984:	bl	11374 <putc@plt>
   12988:	b	127e0 <__assert_fail@plt+0x13dc>
   1298c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12990:	strd	r6, [sp, #8]
   12994:	strd	r8, [sp, #16]
   12998:	str	lr, [sp, #24]
   1299c:	sub	sp, sp, #52	; 0x34
   129a0:	mov	r5, r0
   129a4:	mov	r6, r1
   129a8:	ldr	r0, [r1]
   129ac:	bl	17de8 <argp_parse@@Base+0xdf0>
   129b0:	movw	r1, #45480	; 0xb1a8
   129b4:	movt	r1, #1
   129b8:	mov	r0, #6
   129bc:	bl	11320 <setlocale@plt>
   129c0:	bl	11110 <getuid@plt>
   129c4:	cmp	r0, #0
   129c8:	bne	129dc <__assert_fail@plt+0x15d8>
   129cc:	movw	r3, #50148	; 0xc3e4
   129d0:	movt	r3, #2
   129d4:	mov	r2, #1
   129d8:	strb	r2, [r3, #8]
   129dc:	movw	r3, #50264	; 0xc458
   129e0:	movt	r3, #2
   129e4:	movw	r2, #41500	; 0xa21c
   129e8:	movt	r2, #1
   129ec:	str	r2, [r3]
   129f0:	movw	r4, #49464	; 0xc138
   129f4:	movt	r4, #2
   129f8:	add	r1, r4, #128	; 0x80
   129fc:	movw	r0, #41524	; 0xa234
   12a00:	movt	r0, #1
   12a04:	bl	17be4 <argp_parse@@Base+0xbec>
   12a08:	mov	r3, #0
   12a0c:	str	r3, [sp, #4]
   12a10:	add	r2, sp, #44	; 0x2c
   12a14:	str	r2, [sp]
   12a18:	mov	r2, r6
   12a1c:	mov	r1, r5
   12a20:	add	r0, r4, #136	; 0x88
   12a24:	bl	16ff8 <argp_parse@@Base>
   12a28:	bl	1126c <getpid@plt>
   12a2c:	mov	r8, r0
   12a30:	mov	r3, #1
   12a34:	str	r3, [sp, #8]
   12a38:	mov	r2, #58	; 0x3a
   12a3c:	mov	r1, #3
   12a40:	mov	r0, #10
   12a44:	bl	113d4 <socket@plt>
   12a48:	subs	r9, r0, #0
   12a4c:	blt	12c50 <__assert_fail@plt+0x184c>
   12a50:	mvn	r3, #0
   12a54:	str	r3, [sp, #16]
   12a58:	str	r3, [sp, #20]
   12a5c:	str	r3, [sp, #24]
   12a60:	str	r3, [sp, #32]
   12a64:	str	r3, [sp, #36]	; 0x24
   12a68:	str	r3, [sp, #40]	; 0x28
   12a6c:	bic	r2, r3, #2
   12a70:	str	r2, [sp, #28]
   12a74:	bic	r3, r3, #30
   12a78:	str	r3, [sp, #12]
   12a7c:	mov	r3, #32
   12a80:	str	r3, [sp]
   12a84:	add	r3, sp, #12
   12a88:	mov	r2, #1
   12a8c:	mov	r1, #58	; 0x3a
   12a90:	mov	r0, r9
   12a94:	bl	110ec <setsockopt@plt>
   12a98:	cmp	r0, #0
   12a9c:	bne	12c90 <__assert_fail@plt+0x188c>
   12aa0:	mov	r3, #4
   12aa4:	str	r3, [sp]
   12aa8:	add	r3, sp, #8
   12aac:	mov	r2, #51	; 0x33
   12ab0:	mov	r1, #41	; 0x29
   12ab4:	mov	r0, r9
   12ab8:	bl	110ec <setsockopt@plt>
   12abc:	subs	r7, r0, #0
   12ac0:	bne	12c9c <__assert_fail@plt+0x1898>
   12ac4:	mov	r0, #124	; 0x7c
   12ac8:	bl	18840 <argp_parse@@Base+0x1848>
   12acc:	subs	r4, r0, #0
   12ad0:	beq	12ca8 <__assert_fail@plt+0x18a4>
   12ad4:	mov	r2, #120	; 0x78
   12ad8:	mov	r1, #0
   12adc:	add	r0, r4, #4
   12ae0:	bl	112e4 <memset@plt>
   12ae4:	str	r9, [r4]
   12ae8:	mov	r3, #1000	; 0x3e8
   12aec:	str	r3, [r4, #20]
   12af0:	mov	r3, #8
   12af4:	str	r3, [r4, #56]	; 0x38
   12af8:	uxth	r8, r8
   12afc:	str	r8, [r4, #60]	; 0x3c
   12b00:	mov	r3, #128	; 0x80
   12b04:	str	r3, [r4, #72]	; 0x48
   12b08:	mov	r1, #0
   12b0c:	add	r0, r4, #12
   12b10:	bl	111e8 <gettimeofday@plt>
   12b14:	movw	r3, #50148	; 0xc3e4
   12b18:	movt	r3, #2
   12b1c:	str	r4, [r3, #36]	; 0x24
   12b20:	mov	r3, #4
   12b24:	str	r3, [sp]
   12b28:	ldr	r3, [pc, #656]	; 12dc0 <__assert_fail@plt+0x19bc>
   12b2c:	mov	r2, #6
   12b30:	mov	r1, #1
   12b34:	ldr	r0, [r4]
   12b38:	bl	110ec <setsockopt@plt>
   12b3c:	bl	11110 <getuid@plt>
   12b40:	bl	1135c <setuid@plt>
   12b44:	cmp	r0, #0
   12b48:	bne	12cb4 <__assert_fail@plt+0x18b0>
   12b4c:	movw	r0, #50140	; 0xc3dc
   12b50:	movt	r0, #2
   12b54:	mov	r3, #0
   12b58:	mov	r2, #1
   12b5c:	mov	r1, r3
   12b60:	ldr	r0, [r0]
   12b64:	bl	112d8 <setvbuf@plt>
   12b68:	ldr	r3, [sp, #44]	; 0x2c
   12b6c:	sub	r5, r5, r3
   12b70:	add	r6, r6, r3, lsl #2
   12b74:	movw	r3, #50148	; 0xc3e4
   12b78:	movt	r3, #2
   12b7c:	ldr	r1, [r3, #4]
   12b80:	cmp	r1, #0
   12b84:	bne	12cd0 <__assert_fail@plt+0x18cc>
   12b88:	movw	r3, #50256	; 0xc450
   12b8c:	movt	r3, #2
   12b90:	ldr	r1, [r3]
   12b94:	cmp	r1, #0
   12b98:	bne	12ce4 <__assert_fail@plt+0x18e0>
   12b9c:	movw	r3, #50252	; 0xc44c
   12ba0:	movt	r3, #2
   12ba4:	ldr	r3, [r3]
   12ba8:	tst	r3, #2
   12bac:	bne	12d00 <__assert_fail@plt+0x18fc>
   12bb0:	movw	r3, #50148	; 0xc3e4
   12bb4:	movt	r3, #2
   12bb8:	ldr	r3, [r3, #32]
   12bbc:	cmp	r3, #0
   12bc0:	bgt	12d20 <__assert_fail@plt+0x191c>
   12bc4:	movw	r3, #50252	; 0xc44c
   12bc8:	movt	r3, #2
   12bcc:	ldr	r3, [r3]
   12bd0:	tst	r3, #256	; 0x100
   12bd4:	bne	12d6c <__assert_fail@plt+0x1968>
   12bd8:	movw	r2, #49464	; 0xc138
   12bdc:	movt	r2, #2
   12be0:	movw	r3, #50244	; 0xc444
   12be4:	movt	r3, #2
   12be8:	ldr	r1, [r2]
   12bec:	ldr	r0, [r3]
   12bf0:	bl	12e88 <__assert_fail@plt+0x1a84>
   12bf4:	sub	r4, r5, #1
   12bf8:	cmp	r5, #0
   12bfc:	beq	12db8 <__assert_fail@plt+0x19b4>
   12c00:	movw	r8, #50148	; 0xc3e4
   12c04:	movt	r8, #2
   12c08:	mov	r5, #0
   12c0c:	ldr	r0, [r6], #4
   12c10:	bl	11f38 <__assert_fail@plt+0xb34>
   12c14:	orr	r7, r7, r0
   12c18:	ldr	r3, [r8, #36]	; 0x24
   12c1c:	str	r5, [r3, #112]	; 0x70
   12c20:	str	r5, [r3, #116]	; 0x74
   12c24:	str	r5, [r3, #120]	; 0x78
   12c28:	sub	r4, r4, #1
   12c2c:	cmn	r4, #1
   12c30:	bne	12c0c <__assert_fail@plt+0x1808>
   12c34:	mov	r0, r7
   12c38:	add	sp, sp, #52	; 0x34
   12c3c:	ldrd	r4, [sp]
   12c40:	ldrd	r6, [sp, #8]
   12c44:	ldrd	r8, [sp, #16]
   12c48:	add	sp, sp, #24
   12c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c50:	bl	112b4 <__errno_location@plt>
   12c54:	ldr	r1, [r0]
   12c58:	cmp	r1, #13
   12c5c:	cmpne	r1, #1
   12c60:	beq	12c7c <__assert_fail@plt+0x1878>
   12c64:	movw	r3, #50148	; 0xc3e4
   12c68:	movt	r3, #2
   12c6c:	mov	r2, #0
   12c70:	str	r2, [r3, #36]	; 0x24
   12c74:	mov	r0, #1
   12c78:	bl	11278 <exit@plt>
   12c7c:	movw	r2, #41532	; 0xa23c
   12c80:	movt	r2, #1
   12c84:	mov	r0, #1
   12c88:	bl	111f4 <error@plt>
   12c8c:	b	12c64 <__assert_fail@plt+0x1860>
   12c90:	mov	r0, r9
   12c94:	bl	113f8 <close@plt>
   12c98:	b	12c64 <__assert_fail@plt+0x1860>
   12c9c:	mov	r0, r9
   12ca0:	bl	113f8 <close@plt>
   12ca4:	b	12c64 <__assert_fail@plt+0x1860>
   12ca8:	mov	r0, r9
   12cac:	bl	113f8 <close@plt>
   12cb0:	b	12c64 <__assert_fail@plt+0x1860>
   12cb4:	bl	112b4 <__errno_location@plt>
   12cb8:	movw	r2, #41544	; 0xa248
   12cbc:	movt	r2, #1
   12cc0:	ldr	r1, [r0]
   12cc4:	mov	r0, #1
   12cc8:	bl	111f4 <error@plt>
   12ccc:	b	12b4c <__assert_fail@plt+0x1748>
   12cd0:	movw	r3, #50148	; 0xc3e4
   12cd4:	movt	r3, #2
   12cd8:	ldr	r0, [r3, #36]	; 0x24
   12cdc:	bl	13258 <__assert_fail@plt+0x1e54>
   12ce0:	b	12b88 <__assert_fail@plt+0x1784>
   12ce4:	movw	r0, #50148	; 0xc3e4
   12ce8:	movt	r0, #2
   12cec:	mov	r3, #4
   12cf0:	ldr	r2, [pc, #200]	; 12dc0 <__assert_fail@plt+0x19bc>
   12cf4:	ldr	r0, [r0, #36]	; 0x24
   12cf8:	bl	13260 <__assert_fail@plt+0x1e5c>
   12cfc:	b	12b9c <__assert_fail@plt+0x1798>
   12d00:	movw	r2, #50260	; 0xc454
   12d04:	movt	r2, #2
   12d08:	movw	r3, #50148	; 0xc3e4
   12d0c:	movt	r3, #2
   12d10:	ldr	r1, [r2]
   12d14:	ldr	r0, [r3, #36]	; 0x24
   12d18:	bl	1328c <__assert_fail@plt+0x1e88>
   12d1c:	b	12bb0 <__assert_fail@plt+0x17ac>
   12d20:	movw	r3, #50148	; 0xc3e4
   12d24:	movt	r3, #2
   12d28:	ldr	r0, [r3, #36]	; 0x24
   12d2c:	mov	r2, #4
   12d30:	str	r2, [sp]
   12d34:	add	r3, r3, #32
   12d38:	mov	r2, #16
   12d3c:	mov	r1, #41	; 0x29
   12d40:	ldr	r0, [r0]
   12d44:	bl	110ec <setsockopt@plt>
   12d48:	cmp	r0, #0
   12d4c:	bge	12bc4 <__assert_fail@plt+0x17c0>
   12d50:	bl	112b4 <__errno_location@plt>
   12d54:	movw	r2, #41552	; 0xa250
   12d58:	movt	r2, #1
   12d5c:	ldr	r1, [r0]
   12d60:	mov	r0, #0
   12d64:	bl	111f4 <error@plt>
   12d68:	b	12bc4 <__assert_fail@plt+0x17c0>
   12d6c:	movw	r3, #50148	; 0xc3e4
   12d70:	movt	r3, #2
   12d74:	ldr	r0, [r3, #36]	; 0x24
   12d78:	mov	r3, #4
   12d7c:	str	r3, [sp]
   12d80:	ldr	r3, [pc, #60]	; 12dc4 <__assert_fail@plt+0x19c0>
   12d84:	mov	r2, #67	; 0x43
   12d88:	mov	r1, #41	; 0x29
   12d8c:	ldr	r0, [r0]
   12d90:	bl	110ec <setsockopt@plt>
   12d94:	cmp	r0, #0
   12d98:	bge	12bd8 <__assert_fail@plt+0x17d4>
   12d9c:	bl	112b4 <__errno_location@plt>
   12da0:	movw	r2, #41580	; 0xa26c
   12da4:	movt	r2, #1
   12da8:	ldr	r1, [r0]
   12dac:	mov	r0, #1
   12db0:	bl	111f4 <error@plt>
   12db4:	b	12bd8 <__assert_fail@plt+0x17d4>
   12db8:	mov	r7, r5
   12dbc:	b	12c34 <__assert_fail@plt+0x1830>
   12dc0:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   12dc4:	andeq	ip, r2, r0, asr #2
   12dc8:	strd	r4, [sp, #-20]!	; 0xffffffec
   12dcc:	strd	r6, [sp, #8]
   12dd0:	str	lr, [sp, #16]
   12dd4:	sub	sp, sp, #20
   12dd8:	mov	r7, r0
   12ddc:	mov	r5, r1
   12de0:	mov	r6, r2
   12de4:	mov	r2, #0
   12de8:	add	r1, sp, #12
   12dec:	bl	11284 <strtoul@plt>
   12df0:	mov	r4, r0
   12df4:	ldr	r3, [sp, #12]
   12df8:	ldrb	r2, [r3]
   12dfc:	cmp	r2, #0
   12e00:	bne	12e30 <__assert_fail@plt+0x1a2c>
   12e04:	orrs	r3, r6, r4
   12e08:	beq	12e50 <__assert_fail@plt+0x1a4c>
   12e0c:	cmp	r5, #0
   12e10:	cmpne	r4, r5
   12e14:	bhi	12e6c <__assert_fail@plt+0x1a68>
   12e18:	mov	r0, r4
   12e1c:	add	sp, sp, #20
   12e20:	ldrd	r4, [sp]
   12e24:	ldrd	r6, [sp, #8]
   12e28:	add	sp, sp, #16
   12e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e30:	str	r3, [sp]
   12e34:	mov	r3, r7
   12e38:	movw	r2, #42608	; 0xa670
   12e3c:	movt	r2, #1
   12e40:	mov	r1, #0
   12e44:	mov	r0, #1
   12e48:	bl	111f4 <error@plt>
   12e4c:	b	12e04 <__assert_fail@plt+0x1a00>
   12e50:	mov	r3, r7
   12e54:	movw	r2, #40568	; 0x9e78
   12e58:	movt	r2, #1
   12e5c:	mov	r1, #0
   12e60:	mov	r0, #1
   12e64:	bl	111f4 <error@plt>
   12e68:	b	12e18 <__assert_fail@plt+0x1a14>
   12e6c:	mov	r3, r7
   12e70:	movw	r2, #42640	; 0xa690
   12e74:	movt	r2, #1
   12e78:	mov	r1, #0
   12e7c:	mov	r0, #1
   12e80:	bl	111f4 <error@plt>
   12e84:	b	12e18 <__assert_fail@plt+0x1a14>
   12e88:	movw	r3, #49468	; 0xc13c
   12e8c:	movt	r3, #2
   12e90:	ldr	r3, [r3]
   12e94:	cmp	r3, #0
   12e98:	bxeq	lr
   12e9c:	strd	r4, [sp, #-16]!
   12ea0:	str	r6, [sp, #8]
   12ea4:	str	lr, [sp, #12]
   12ea8:	mov	r5, r1
   12eac:	mov	r4, r0
   12eb0:	mov	r0, r3
   12eb4:	bl	18308 <argp_parse@@Base+0x1310>
   12eb8:	movw	r3, #50248	; 0xc448
   12ebc:	movt	r3, #2
   12ec0:	str	r0, [r3]
   12ec4:	cmp	r4, #0
   12ec8:	beq	12f1c <__assert_fail@plt+0x1b18>
   12ecc:	movw	r3, #49468	; 0xc13c
   12ed0:	movt	r3, #2
   12ed4:	ldr	r1, [r3]
   12ed8:	add	r1, r0, r1
   12edc:	cmp	r0, r1
   12ee0:	bcs	12f0c <__assert_fail@plt+0x1b08>
   12ee4:	sub	r2, r0, #1
   12ee8:	sub	r1, r1, #1
   12eec:	mov	r3, #0
   12ef0:	ldrb	ip, [r4, r3]
   12ef4:	strb	ip, [r2, #1]!
   12ef8:	add	r3, r3, #1
   12efc:	cmp	r3, r5
   12f00:	movcs	r3, #0
   12f04:	cmp	r2, r1
   12f08:	bne	12ef0 <__assert_fail@plt+0x1aec>
   12f0c:	ldrd	r4, [sp]
   12f10:	ldr	r6, [sp, #8]
   12f14:	add	sp, sp, #12
   12f18:	pop	{pc}		; (ldr pc, [sp], #4)
   12f1c:	movw	r3, #49468	; 0xc13c
   12f20:	movt	r3, #2
   12f24:	ldr	r3, [r3]
   12f28:	cmp	r3, #0
   12f2c:	beq	12f0c <__assert_fail@plt+0x1b08>
   12f30:	mov	r3, #0
   12f34:	movw	r0, #50248	; 0xc448
   12f38:	movt	r0, #2
   12f3c:	movw	r1, #49468	; 0xc13c
   12f40:	movt	r1, #2
   12f44:	ldr	r2, [r0]
   12f48:	strb	r3, [r2, r3]
   12f4c:	add	r3, r3, #1
   12f50:	ldr	r2, [r1]
   12f54:	cmp	r2, r3
   12f58:	bhi	12f44 <__assert_fail@plt+0x1b40>
   12f5c:	b	12f0c <__assert_fail@plt+0x1b08>
   12f60:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12f64:	strd	r6, [sp, #8]
   12f68:	strd	r8, [sp, #16]
   12f6c:	str	lr, [sp, #24]
   12f70:	sub	sp, sp, #12
   12f74:	mov	r8, r1
   12f78:	ldrb	r3, [r0]
   12f7c:	cmp	r3, #0
   12f80:	beq	1300c <__assert_fail@plt+0x1c08>
   12f84:	mov	r4, r0
   12f88:	ldr	r3, [r1]
   12f8c:	cmp	r3, #0
   12f90:	ble	1302c <__assert_fail@plt+0x1c28>
   12f94:	sub	r6, r2, #1
   12f98:	mov	r5, #0
   12f9c:	movw	r7, #42668	; 0xa6ac
   12fa0:	movt	r7, #1
   12fa4:	movw	r9, #42676	; 0xa6b4
   12fa8:	movt	r9, #1
   12fac:	b	12fec <__assert_fail@plt+0x1be8>
   12fb0:	mov	r3, r4
   12fb4:	mov	r2, r9
   12fb8:	mov	r1, #0
   12fbc:	mov	r0, #1
   12fc0:	bl	111f4 <error@plt>
   12fc4:	ldr	r3, [sp, #4]
   12fc8:	strb	r3, [r6, #1]!
   12fcc:	add	r5, r5, #1
   12fd0:	ldr	r3, [sp]
   12fd4:	ldrb	r3, [r4, r3]!
   12fd8:	cmp	r3, #0
   12fdc:	beq	13010 <__assert_fail@plt+0x1c0c>
   12fe0:	ldr	r3, [r8]
   12fe4:	cmp	r3, r5
   12fe8:	ble	13010 <__assert_fail@plt+0x1c0c>
   12fec:	mov	r3, sp
   12ff0:	add	r2, sp, #4
   12ff4:	mov	r1, r7
   12ff8:	mov	r0, r4
   12ffc:	bl	11368 <sscanf@plt>
   13000:	cmp	r0, #1
   13004:	beq	12fc4 <__assert_fail@plt+0x1bc0>
   13008:	b	12fb0 <__assert_fail@plt+0x1bac>
   1300c:	mov	r5, #0
   13010:	str	r5, [r8]
   13014:	add	sp, sp, #12
   13018:	ldrd	r4, [sp]
   1301c:	ldrd	r6, [sp, #8]
   13020:	ldrd	r8, [sp, #16]
   13024:	add	sp, sp, #24
   13028:	pop	{pc}		; (ldr pc, [sp], #4)
   1302c:	mov	r5, #0
   13030:	b	13010 <__assert_fail@plt+0x1c0c>
   13034:	ldr	r3, [r0, #4]
   13038:	ldr	r2, [r1, #4]
   1303c:	sub	r3, r3, r2
   13040:	str	r3, [r0, #4]
   13044:	cmp	r3, #0
   13048:	blt	13060 <__assert_fail@plt+0x1c5c>
   1304c:	ldr	r3, [r0]
   13050:	ldr	r2, [r1]
   13054:	sub	r3, r3, r2
   13058:	str	r3, [r0]
   1305c:	bx	lr
   13060:	ldr	r2, [r0]
   13064:	sub	r2, r2, #1
   13068:	str	r2, [r0]
   1306c:	add	r3, r3, #999424	; 0xf4000
   13070:	add	r3, r3, #576	; 0x240
   13074:	str	r3, [r0, #4]
   13078:	b	1304c <__assert_fail@plt+0x1c48>
   1307c:	vcmpe.f64	d0, #0.0
   13080:	vmrs	APSR_nzcv, fpscr
   13084:	vnegmi.f64	d0, d0
   13088:	bx	lr
   1308c:	vcmpe.f64	d0, #0.0
   13090:	vmrs	APSR_nzcv, fpscr
   13094:	bmi	130e4 <__assert_fail@plt+0x1ce0>
   13098:	vcmpe.f64	d0, d1
   1309c:	vmrs	APSR_nzcv, fpscr
   130a0:	bmi	130ec <__assert_fail@plt+0x1ce8>
   130a4:	vldr	d6, [pc, #76]	; 130f8 <__assert_fail@plt+0x1cf4>
   130a8:	vmul.f64	d6, d0, d6
   130ac:	vldr	d4, [pc, #68]	; 130f8 <__assert_fail@plt+0x1cf4>
   130b0:	vdiv.f64	d7, d0, d6
   130b4:	vadd.f64	d7, d7, d6
   130b8:	vmul.f64	d7, d7, d4
   130bc:	vsub.f64	d5, d7, d6
   130c0:	vcmpe.f64	d5, #0.0
   130c4:	vmrs	APSR_nzcv, fpscr
   130c8:	vnegmi.f64	d5, d5
   130cc:	vmov.f64	d6, d7
   130d0:	vcmpe.f64	d1, d5
   130d4:	vmrs	APSR_nzcv, fpscr
   130d8:	bmi	130b0 <__assert_fail@plt+0x1cac>
   130dc:	vmov.f64	d0, d7
   130e0:	bx	lr
   130e4:	vldr	d7, [pc, #20]	; 13100 <__assert_fail@plt+0x1cfc>
   130e8:	b	130dc <__assert_fail@plt+0x1cd8>
   130ec:	vldr	d7, [pc, #12]	; 13100 <__assert_fail@plt+0x1cfc>
   130f0:	b	130dc <__assert_fail@plt+0x1cd8>
   130f4:	nop	{0}
   130f8:	andeq	r0, r0, r0
   130fc:	svccc	0x00e00000
	...
   13108:	mvn	r0, r0
   1310c:	lsr	r0, r0, #31
   13110:	bx	lr
   13114:	str	r4, [sp, #-8]!
   13118:	str	lr, [sp, #4]
   1311c:	mov	r4, r0
   13120:	bic	r3, r2, #-2147483648	; 0x80000000
   13124:	cmp	r2, #0
   13128:	movwge	r2, #42704	; 0xa6d0
   1312c:	movtge	r2, #1
   13130:	movwlt	r2, #42708	; 0xa6d4
   13134:	movtlt	r2, #1
   13138:	bl	112c0 <snprintf@plt>
   1313c:	mov	r0, r4
   13140:	ldr	r4, [sp]
   13144:	add	sp, sp, #4
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	str	r4, [sp, #-8]!
   13150:	str	lr, [sp, #4]
   13154:	mov	r4, r0
   13158:	ldr	r3, [r0, #80]	; 0x50
   1315c:	cmp	r3, #0
   13160:	beq	13180 <__assert_fail@plt+0x1d7c>
   13164:	ldr	r3, [r4, #76]	; 0x4c
   13168:	cmp	r3, #0
   1316c:	movne	r0, #0
   13170:	beq	131a8 <__assert_fail@plt+0x1da4>
   13174:	ldr	r4, [sp]
   13178:	add	sp, sp, #4
   1317c:	pop	{pc}		; (ldr pc, [sp], #4)
   13180:	cmp	r1, #0
   13184:	ldr	r0, [r0, #56]	; 0x38
   13188:	addne	r0, r0, #8
   1318c:	addeq	r0, r0, #80	; 0x50
   13190:	bl	18840 <argp_parse@@Base+0x1848>
   13194:	str	r0, [r4, #80]	; 0x50
   13198:	cmp	r0, #0
   1319c:	bne	13164 <__assert_fail@plt+0x1d60>
   131a0:	mvn	r0, #0
   131a4:	b	13174 <__assert_fail@plt+0x1d70>
   131a8:	ldr	r0, [r4, #72]	; 0x48
   131ac:	bl	18840 <argp_parse@@Base+0x1848>
   131b0:	str	r0, [r4, #76]	; 0x4c
   131b4:	cmp	r0, #0
   131b8:	beq	131d0 <__assert_fail@plt+0x1dcc>
   131bc:	ldr	r2, [r4, #72]	; 0x48
   131c0:	mov	r1, #0
   131c4:	bl	112e4 <memset@plt>
   131c8:	mov	r0, #0
   131cc:	b	13174 <__assert_fail@plt+0x1d70>
   131d0:	mvn	r0, #0
   131d4:	b	13174 <__assert_fail@plt+0x1d70>
   131d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   131dc:	strd	r6, [sp, #8]
   131e0:	str	r8, [sp, #16]
   131e4:	str	lr, [sp, #20]
   131e8:	mov	r8, r0
   131ec:	mov	r7, r1
   131f0:	mov	r4, r2
   131f4:	mov	r5, r3
   131f8:	ldrb	r1, [sp, #24]
   131fc:	bl	1314c <__assert_fail@plt+0x1d48>
   13200:	subs	r6, r0, #0
   13204:	bne	13248 <__assert_fail@plt+0x1e44>
   13208:	add	r3, r4, r5
   1320c:	ldr	r2, [r8, #56]	; 0x38
   13210:	cmp	r2, r3
   13214:	bcc	13250 <__assert_fail@plt+0x1e4c>
   13218:	ldr	r0, [r8, #80]	; 0x50
   1321c:	add	r0, r0, #8
   13220:	mov	r2, r5
   13224:	mov	r1, r7
   13228:	add	r0, r0, r4
   1322c:	bl	11158 <memcpy@plt>
   13230:	mov	r0, r6
   13234:	ldrd	r4, [sp]
   13238:	ldrd	r6, [sp, #8]
   1323c:	ldr	r8, [sp, #16]
   13240:	add	sp, sp, #20
   13244:	pop	{pc}		; (ldr pc, [sp], #4)
   13248:	mvn	r6, #0
   1324c:	b	13230 <__assert_fail@plt+0x1e2c>
   13250:	mvn	r6, #0
   13254:	b	13230 <__assert_fail@plt+0x1e2c>
   13258:	str	r1, [r0, #8]
   1325c:	bx	lr
   13260:	push	{lr}		; (str lr, [sp, #-4]!)
   13264:	sub	sp, sp, #20
   13268:	str	r2, [sp, #12]
   1326c:	ldr	r0, [r0]
   13270:	str	r3, [sp]
   13274:	add	r3, sp, #12
   13278:	mov	r2, r1
   1327c:	mov	r1, #1
   13280:	bl	110ec <setsockopt@plt>
   13284:	add	sp, sp, #20
   13288:	pop	{pc}		; (ldr pc, [sp], #4)
   1328c:	str	r1, [r0, #20]
   13290:	bx	lr
   13294:	str	r4, [sp, #-8]!
   13298:	str	lr, [sp, #4]
   1329c:	mov	r4, r0
   132a0:	ldr	r0, [r0, #80]	; 0x50
   132a4:	cmp	r0, #0
   132a8:	beq	132b8 <__assert_fail@plt+0x1eb4>
   132ac:	bl	17cd0 <argp_parse@@Base+0xcd8>
   132b0:	mov	r3, #0
   132b4:	str	r3, [r4, #80]	; 0x50
   132b8:	ldr	r0, [r4, #76]	; 0x4c
   132bc:	cmp	r0, #0
   132c0:	beq	132d0 <__assert_fail@plt+0x1ecc>
   132c4:	bl	17cd0 <argp_parse@@Base+0xcd8>
   132c8:	mov	r3, #0
   132cc:	str	r3, [r4, #76]	; 0x4c
   132d0:	ldr	r4, [sp]
   132d4:	add	sp, sp, #4
   132d8:	pop	{pc}		; (ldr pc, [sp], #4)
   132dc:	strd	r4, [sp, #-12]!
   132e0:	str	lr, [sp, #8]
   132e4:	sub	sp, sp, #12
   132e8:	mov	r5, r0
   132ec:	mov	r4, r1
   132f0:	mov	r1, #0
   132f4:	mov	r0, sp
   132f8:	bl	111e8 <gettimeofday@plt>
   132fc:	cmn	r4, #1
   13300:	moveq	r0, #0
   13304:	bne	13318 <__assert_fail@plt+0x1f14>
   13308:	add	sp, sp, #12
   1330c:	ldrd	r4, [sp]
   13310:	add	sp, sp, #8
   13314:	pop	{pc}		; (ldr pc, [sp], #4)
   13318:	mov	r1, r5
   1331c:	mov	r0, sp
   13320:	bl	13034 <__assert_fail@plt+0x1c30>
   13324:	ldr	r0, [sp]
   13328:	cmp	r0, r4
   1332c:	movlt	r0, #0
   13330:	movge	r0, #1
   13334:	b	13308 <__assert_fail@plt+0x1f04>
   13338:	strd	r4, [sp, #-16]!
   1333c:	str	r6, [sp, #8]
   13340:	str	lr, [sp, #12]
   13344:	sub	sp, sp, #320	; 0x140
   13348:	mov	r4, r0
   1334c:	mov	r5, r1
   13350:	mov	r3, #1
   13354:	str	r3, [sp, #8]
   13358:	mov	r3, #0
   1335c:	str	r3, [sp, #4]
   13360:	str	r3, [sp]
   13364:	mov	r3, #46	; 0x2e
   13368:	add	r2, sp, #272	; 0x110
   1336c:	bl	1132c <getnameinfo@plt>
   13370:	cmp	r0, #0
   13374:	bne	13404 <__assert_fail@plt+0x2000>
   13378:	movw	r3, #50252	; 0xc44c
   1337c:	movt	r3, #2
   13380:	ldr	r3, [r3]
   13384:	tst	r3, #4
   13388:	bne	13468 <__assert_fail@plt+0x2064>
   1338c:	mov	r3, #40	; 0x28
   13390:	str	r3, [sp, #8]
   13394:	mov	r3, #0
   13398:	str	r3, [sp, #4]
   1339c:	str	r3, [sp]
   133a0:	mov	r3, #256	; 0x100
   133a4:	add	r2, sp, #16
   133a8:	mov	r1, r5
   133ac:	mov	r0, r4
   133b0:	bl	1132c <getnameinfo@plt>
   133b4:	cmp	r0, #0
   133b8:	bne	13478 <__assert_fail@plt+0x2074>
   133bc:	add	r6, sp, #272	; 0x110
   133c0:	mov	r0, r6
   133c4:	bl	11290 <strlen@plt>
   133c8:	mov	r4, r0
   133cc:	add	r0, sp, #16
   133d0:	bl	11290 <strlen@plt>
   133d4:	add	r4, r4, r0
   133d8:	add	r4, r4, #4
   133dc:	mov	r0, r4
   133e0:	bl	18308 <argp_parse@@Base+0x1310>
   133e4:	mov	r5, r0
   133e8:	str	r6, [sp]
   133ec:	add	r3, sp, #16
   133f0:	movw	r2, #42716	; 0xa6dc
   133f4:	movt	r2, #1
   133f8:	mov	r1, r4
   133fc:	bl	112c0 <snprintf@plt>
   13400:	b	1343c <__assert_fail@plt+0x2038>
   13404:	cmn	r0, #11
   13408:	beq	13454 <__assert_fail@plt+0x2050>
   1340c:	bl	11140 <gai_strerror@plt>
   13410:	mov	r2, r0
   13414:	movw	r3, #50136	; 0xc3d8
   13418:	movt	r3, #2
   1341c:	movw	r1, #41360	; 0xa190
   13420:	movt	r1, #1
   13424:	ldr	r0, [r3]
   13428:	bl	112a8 <fprintf@plt>
   1342c:	movw	r0, #41384	; 0xa1a8
   13430:	movt	r0, #1
   13434:	bl	18774 <argp_parse@@Base+0x177c>
   13438:	mov	r5, r0
   1343c:	mov	r0, r5
   13440:	add	sp, sp, #320	; 0x140
   13444:	ldrd	r4, [sp]
   13448:	ldr	r6, [sp, #8]
   1344c:	add	sp, sp, #12
   13450:	pop	{pc}		; (ldr pc, [sp], #4)
   13454:	bl	112b4 <__errno_location@plt>
   13458:	ldr	r0, [r0]
   1345c:	bl	11230 <strerror@plt>
   13460:	mov	r2, r0
   13464:	b	13414 <__assert_fail@plt+0x2010>
   13468:	add	r0, sp, #272	; 0x110
   1346c:	bl	18774 <argp_parse@@Base+0x177c>
   13470:	mov	r5, r0
   13474:	b	1343c <__assert_fail@plt+0x2038>
   13478:	add	r0, sp, #272	; 0x110
   1347c:	bl	18774 <argp_parse@@Base+0x177c>
   13480:	mov	r5, r0
   13484:	b	1343c <__assert_fail@plt+0x2038>
   13488:	strd	r4, [sp, #-20]!	; 0xffffffec
   1348c:	strd	r6, [sp, #8]
   13490:	str	lr, [sp, #16]
   13494:	sub	sp, sp, #20
   13498:	str	r0, [sp, #12]
   1349c:	movw	r3, #50252	; 0xc44c
   134a0:	movt	r3, #2
   134a4:	ldr	r3, [r3]
   134a8:	tst	r3, #4
   134ac:	bne	13528 <__assert_fail@plt+0x2124>
   134b0:	mov	r2, #2
   134b4:	mov	r1, #4
   134b8:	add	r0, sp, #12
   134bc:	bl	111a0 <gethostbyaddr@plt>
   134c0:	subs	r6, r0, #0
   134c4:	beq	1354c <__assert_fail@plt+0x2148>
   134c8:	ldr	r0, [sp, #12]
   134cc:	bl	1117c <inet_ntoa@plt>
   134d0:	mov	r7, r0
   134d4:	bl	11290 <strlen@plt>
   134d8:	mov	r4, r0
   134dc:	ldr	r0, [r6]
   134e0:	cmp	r0, #0
   134e4:	addeq	r4, r4, #1
   134e8:	beq	134f8 <__assert_fail@plt+0x20f4>
   134ec:	bl	11290 <strlen@plt>
   134f0:	add	r4, r4, #5
   134f4:	add	r4, r4, r0
   134f8:	mov	r0, r4
   134fc:	bl	18308 <argp_parse@@Base+0x1310>
   13500:	mov	r5, r0
   13504:	ldr	r3, [r6]
   13508:	cmp	r3, #0
   1350c:	beq	13560 <__assert_fail@plt+0x215c>
   13510:	str	r7, [sp]
   13514:	movw	r2, #42716	; 0xa6dc
   13518:	movt	r2, #1
   1351c:	mov	r1, r4
   13520:	bl	112c0 <snprintf@plt>
   13524:	b	13534 <__assert_fail@plt+0x2130>
   13528:	bl	1117c <inet_ntoa@plt>
   1352c:	bl	18774 <argp_parse@@Base+0x177c>
   13530:	mov	r5, r0
   13534:	mov	r0, r5
   13538:	add	sp, sp, #20
   1353c:	ldrd	r4, [sp]
   13540:	ldrd	r6, [sp, #8]
   13544:	add	sp, sp, #16
   13548:	pop	{pc}		; (ldr pc, [sp], #4)
   1354c:	ldr	r0, [sp, #12]
   13550:	bl	1117c <inet_ntoa@plt>
   13554:	bl	18774 <argp_parse@@Base+0x177c>
   13558:	mov	r5, r0
   1355c:	b	13534 <__assert_fail@plt+0x2130>
   13560:	mov	r3, r7
   13564:	movw	r2, #40592	; 0x9e90
   13568:	movt	r2, #1
   1356c:	mov	r1, r4
   13570:	bl	112c0 <snprintf@plt>
   13574:	b	13534 <__assert_fail@plt+0x2130>
   13578:	ldr	r3, [r0]
   1357c:	ldr	r2, [r0, #4]
   13580:	cmp	r2, #0
   13584:	beq	135c0 <__assert_fail@plt+0x21bc>
   13588:	add	r3, r3, #24
   1358c:	b	1359c <__assert_fail@plt+0x2198>
   13590:	add	r3, r3, #24
   13594:	subs	r2, r2, #1
   13598:	beq	135b8 <__assert_fail@plt+0x21b4>
   1359c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   135a0:	cmp	r0, #0
   135a4:	beq	13590 <__assert_fail@plt+0x218c>
   135a8:	ldr	r1, [r3, #-12]
   135ac:	tst	r1, #2
   135b0:	bne	13590 <__assert_fail@plt+0x218c>
   135b4:	bx	lr
   135b8:	mov	r0, #0
   135bc:	bx	lr
   135c0:	mov	r0, #0
   135c4:	b	135b4 <__assert_fail@plt+0x21b0>
   135c8:	ldr	r2, [r0, #8]
   135cc:	cmp	r2, #0
   135d0:	beq	135dc <__assert_fail@plt+0x21d8>
   135d4:	mov	r0, #0
   135d8:	bx	lr
   135dc:	ldr	r2, [r1, #8]
   135e0:	cmp	r2, #0
   135e4:	bne	135d4 <__assert_fail@plt+0x21d0>
   135e8:	ldr	r2, [r0, #12]
   135ec:	ldr	r1, [r1, #12]
   135f0:	orr	r2, r2, r1
   135f4:	tst	r2, #16
   135f8:	bne	135d4 <__assert_fail@plt+0x21d0>
   135fc:	ldr	r1, [r0, #4]
   13600:	ldr	r2, [r3]
   13604:	add	r0, r2, #1
   13608:	str	r0, [r3]
   1360c:	strb	r1, [r2]
   13610:	b	135d4 <__assert_fail@plt+0x21d0>
   13614:	str	r4, [sp, #-8]!
   13618:	str	lr, [sp, #4]
   1361c:	mov	r4, r0
   13620:	bl	11260 <__ctype_b_loc@plt>
   13624:	ldr	r3, [r4]
   13628:	ldrb	r2, [r3]
   1362c:	ldr	ip, [r0]
   13630:	lsl	r1, r2, #1
   13634:	ldrh	r1, [ip, r1]
   13638:	tst	r1, #8192	; 0x2000
   1363c:	beq	1364c <__assert_fail@plt+0x2248>
   13640:	add	r3, r3, #1
   13644:	str	r3, [r4]
   13648:	b	13624 <__assert_fail@plt+0x2220>
   1364c:	subs	ip, r2, #45	; 0x2d
   13650:	movne	ip, #1
   13654:	cmp	r2, #0
   13658:	beq	1368c <__assert_fail@plt+0x2288>
   1365c:	tst	r1, #8
   13660:	bne	1368c <__assert_fail@plt+0x2288>
   13664:	add	r3, r3, #1
   13668:	str	r3, [r4]
   1366c:	ldrb	r2, [r3]
   13670:	cmp	r2, #0
   13674:	beq	1368c <__assert_fail@plt+0x2288>
   13678:	ldr	r1, [r0]
   1367c:	lsl	r2, r2, #1
   13680:	ldrh	r2, [r1, r2]
   13684:	tst	r2, #8
   13688:	beq	13664 <__assert_fail@plt+0x2260>
   1368c:	mov	r0, ip
   13690:	ldr	r4, [sp]
   13694:	add	sp, sp, #4
   13698:	pop	{pc}		; (ldr pc, [sp], #4)
   1369c:	strd	r4, [sp, #-16]!
   136a0:	str	r6, [sp, #8]
   136a4:	str	lr, [sp, #12]
   136a8:	mov	r5, r0
   136ac:	ldr	r0, [r0, #12]
   136b0:	cmp	r0, #0
   136b4:	beq	136cc <__assert_fail@plt+0x22c8>
   136b8:	ldr	r4, [r0, #24]
   136bc:	bl	17cd0 <argp_parse@@Base+0xcd8>
   136c0:	mov	r0, r4
   136c4:	cmp	r4, #0
   136c8:	bne	136b8 <__assert_fail@plt+0x22b4>
   136cc:	ldr	r3, [r5, #4]
   136d0:	cmp	r3, #0
   136d4:	bne	136f0 <__assert_fail@plt+0x22ec>
   136d8:	mov	r0, r5
   136dc:	bl	17cd0 <argp_parse@@Base+0xcd8>
   136e0:	ldrd	r4, [sp]
   136e4:	ldr	r6, [sp, #8]
   136e8:	add	sp, sp, #12
   136ec:	pop	{pc}		; (ldr pc, [sp], #4)
   136f0:	ldr	r0, [r5]
   136f4:	bl	17cd0 <argp_parse@@Base+0xcd8>
   136f8:	ldr	r0, [r5, #8]
   136fc:	bl	17cd0 <argp_parse@@Base+0xcd8>
   13700:	b	136d8 <__assert_fail@plt+0x22d4>
   13704:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13708:	strd	r6, [sp, #8]
   1370c:	str	r8, [sp, #16]
   13710:	str	lr, [sp, #20]
   13714:	mov	r6, r1
   13718:	ldr	r7, [r0]
   1371c:	ldr	r3, [r0, #4]
   13720:	sub	r8, r3, #1
   13724:	cmp	r3, #0
   13728:	bne	13794 <__assert_fail@plt+0x2390>
   1372c:	mov	r7, #0
   13730:	b	1376c <__assert_fail@plt+0x2368>
   13734:	sub	r5, r5, #1
   13738:	add	r4, r4, #24
   1373c:	cmn	r5, #1
   13740:	beq	13784 <__assert_fail@plt+0x2380>
   13744:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13748:	cmp	r0, #0
   1374c:	beq	13734 <__assert_fail@plt+0x2330>
   13750:	ldr	r3, [r4, #-12]
   13754:	tst	r3, #2
   13758:	bne	13734 <__assert_fail@plt+0x2330>
   1375c:	mov	r1, r6
   13760:	bl	110d4 <strcmp@plt>
   13764:	cmp	r0, #0
   13768:	bne	13734 <__assert_fail@plt+0x2330>
   1376c:	mov	r0, r7
   13770:	ldrd	r4, [sp]
   13774:	ldrd	r6, [sp, #8]
   13778:	ldr	r8, [sp, #16]
   1377c:	add	sp, sp, #20
   13780:	pop	{pc}		; (ldr pc, [sp], #4)
   13784:	add	r7, r7, #28
   13788:	sub	r8, r8, #1
   1378c:	cmn	r8, #1
   13790:	beq	137b0 <__assert_fail@plt+0x23ac>
   13794:	ldr	r4, [r7]
   13798:	ldr	r3, [r7, #4]
   1379c:	sub	r5, r3, #1
   137a0:	cmp	r3, #0
   137a4:	beq	13784 <__assert_fail@plt+0x2380>
   137a8:	add	r4, r4, #24
   137ac:	b	13744 <__assert_fail@plt+0x2340>
   137b0:	mov	r7, #0
   137b4:	b	1376c <__assert_fail@plt+0x2368>
   137b8:	strd	r4, [sp, #-16]!
   137bc:	str	r6, [sp, #8]
   137c0:	str	lr, [sp, #12]
   137c4:	ldr	r4, [r0, #16]
   137c8:	ldr	r0, [r0, #8]
   137cc:	cmp	r0, #0
   137d0:	moveq	r5, #0
   137d4:	beq	137e8 <__assert_fail@plt+0x23e4>
   137d8:	mov	r1, #10
   137dc:	bl	1129c <strchr@plt>
   137e0:	adds	r5, r0, #0
   137e4:	movne	r5, #1
   137e8:	cmp	r4, #0
   137ec:	beq	13810 <__assert_fail@plt+0x240c>
   137f0:	ldr	r0, [r4]
   137f4:	cmp	r0, #0
   137f8:	beq	13810 <__assert_fail@plt+0x240c>
   137fc:	bl	137b8 <__assert_fail@plt+0x23b4>
   13800:	add	r5, r5, r0
   13804:	ldr	r0, [r4, #16]!
   13808:	cmp	r0, #0
   1380c:	bne	137fc <__assert_fail@plt+0x23f8>
   13810:	mov	r0, r5
   13814:	ldrd	r4, [sp]
   13818:	ldr	r6, [sp, #8]
   1381c:	add	sp, sp, #12
   13820:	pop	{pc}		; (ldr pc, [sp], #4)
   13824:	strd	r4, [sp, #-16]!
   13828:	str	r6, [sp, #8]
   1382c:	str	lr, [sp, #12]
   13830:	mov	r4, r0
   13834:	subs	r5, r2, #0
   13838:	beq	13870 <__assert_fail@plt+0x246c>
   1383c:	mov	r6, r1
   13840:	ldr	r2, [r5, #20]
   13844:	cmp	r2, #0
   13848:	beq	13870 <__assert_fail@plt+0x246c>
   1384c:	mov	r1, r3
   13850:	mov	r0, r5
   13854:	bl	17b4c <argp_parse@@Base+0xb54>
   13858:	ldr	r3, [r5, #20]
   1385c:	mov	r2, r0
   13860:	mov	r1, r4
   13864:	mov	r0, r6
   13868:	blx	r3
   1386c:	mov	r4, r0
   13870:	mov	r0, r4
   13874:	ldrd	r4, [sp]
   13878:	ldr	r6, [sp, #8]
   1387c:	add	sp, sp, #12
   13880:	pop	{pc}		; (ldr pc, [sp], #4)
   13884:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13888:	strd	r6, [sp, #8]
   1388c:	strd	r8, [sp, #16]
   13890:	strd	sl, [sp, #24]
   13894:	str	lr, [sp, #32]
   13898:	sub	sp, sp, #20
   1389c:	ldr	r4, [r0]
   138a0:	ldr	r9, [r0, #8]
   138a4:	ldr	r6, [r0, #4]
   138a8:	cmp	r6, #0
   138ac:	beq	13900 <__assert_fail@plt+0x24fc>
   138b0:	str	r3, [sp, #12]
   138b4:	str	r2, [sp, #8]
   138b8:	str	r1, [sp, #4]
   138bc:	mov	fp, r4
   138c0:	mov	sl, #0
   138c4:	b	13950 <__assert_fail@plt+0x254c>
   138c8:	and	r3, r5, #4
   138cc:	cmp	r3, #0
   138d0:	moveq	fp, r4
   138d4:	tst	r5, #2
   138d8:	bne	138f8 <__assert_fail@plt+0x24f4>
   138dc:	ldr	r3, [sp, #12]
   138e0:	ldr	r2, [sp, #8]
   138e4:	mov	r1, fp
   138e8:	mov	r0, r4
   138ec:	ldr	ip, [sp, #4]
   138f0:	blx	ip
   138f4:	mov	r7, r0
   138f8:	add	r9, r9, #1
   138fc:	b	13930 <__assert_fail@plt+0x252c>
   13900:	mov	r7, #0
   13904:	mov	r0, r7
   13908:	add	sp, sp, #20
   1390c:	ldrd	r4, [sp]
   13910:	ldrd	r6, [sp, #8]
   13914:	ldrd	r8, [sp, #16]
   13918:	ldrd	sl, [sp, #24]
   1391c:	add	sp, sp, #32
   13920:	pop	{pc}		; (ldr pc, [sp], #4)
   13924:	ldrb	r3, [r9]
   13928:	cmp	r3, r8
   1392c:	beq	138c8 <__assert_fail@plt+0x24c4>
   13930:	add	r4, r4, #24
   13934:	subs	r6, r6, #1
   13938:	movne	r3, #1
   1393c:	moveq	r3, #0
   13940:	cmp	r7, #0
   13944:	movne	r3, #0
   13948:	cmp	r3, #0
   1394c:	beq	13904 <__assert_fail@plt+0x2500>
   13950:	ldr	r5, [r4, #12]
   13954:	ands	r7, r5, #8
   13958:	movne	r7, sl
   1395c:	bne	13930 <__assert_fail@plt+0x252c>
   13960:	ldr	r8, [r4, #4]
   13964:	sub	r3, r8, #1
   13968:	cmp	r3, #254	; 0xfe
   1396c:	bhi	13930 <__assert_fail@plt+0x252c>
   13970:	bl	11260 <__ctype_b_loc@plt>
   13974:	ldr	r2, [r0]
   13978:	lsl	r3, r8, #1
   1397c:	ldrh	r3, [r2, r3]
   13980:	tst	r3, #16384	; 0x4000
   13984:	bne	13924 <__assert_fail@plt+0x2520>
   13988:	b	13930 <__assert_fail@plt+0x252c>
   1398c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13990:	strd	r6, [sp, #8]
   13994:	strd	r8, [sp, #16]
   13998:	strd	sl, [sp, #24]
   1399c:	str	lr, [sp, #32]
   139a0:	add	fp, sp, #32
   139a4:	sub	sp, sp, #20
   139a8:	ldr	r5, [r0, #4]
   139ac:	cmp	r5, #0
   139b0:	beq	13b58 <__assert_fail@plt+0x2754>
   139b4:	str	r1, [fp, #-48]	; 0xffffffd0
   139b8:	mov	r6, r0
   139bc:	ldr	r0, [r0, #8]
   139c0:	bl	11290 <strlen@plt>
   139c4:	add	r3, r0, #8
   139c8:	bic	r3, r3, #7
   139cc:	sub	sp, sp, r3
   139d0:	mov	r8, sp
   139d4:	str	r8, [fp, #-40]	; 0xffffffd8
   139d8:	ldr	r4, [r6]
   139dc:	movw	r7, #13768	; 0x35c8
   139e0:	movt	r7, #1
   139e4:	ldr	r2, [r4, #20]
   139e8:	sub	r3, fp, #40	; 0x28
   139ec:	ldr	r2, [r2, #24]
   139f0:	mov	r1, r7
   139f4:	mov	r0, r4
   139f8:	bl	13884 <__assert_fail@plt+0x2480>
   139fc:	add	r4, r4, #28
   13a00:	subs	r5, r5, #1
   13a04:	bne	139e4 <__assert_fail@plt+0x25e0>
   13a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13a0c:	cmp	r3, r8
   13a10:	bhi	13a84 <__assert_fail@plt+0x2680>
   13a14:	ldr	r4, [r6]
   13a18:	ldr	r5, [r6, #4]
   13a1c:	cmp	r5, #0
   13a20:	beq	13b58 <__assert_fail@plt+0x2754>
   13a24:	movw	r7, #15696	; 0x3d50
   13a28:	movt	r7, #1
   13a2c:	ldr	r2, [r4, #20]
   13a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a34:	ldr	r2, [r2, #24]
   13a38:	mov	r1, r7
   13a3c:	mov	r0, r4
   13a40:	bl	13884 <__assert_fail@plt+0x2480>
   13a44:	add	r4, r4, #28
   13a48:	subs	r5, r5, #1
   13a4c:	bne	13a2c <__assert_fail@plt+0x2628>
   13a50:	ldr	r7, [r6]
   13a54:	ldr	r8, [r6, #4]
   13a58:	cmp	r8, #0
   13a5c:	beq	13b58 <__assert_fail@plt+0x2754>
   13a60:	add	r7, r7, #28
   13a64:	movw	sl, #42916	; 0xa7a4
   13a68:	movt	sl, #1
   13a6c:	movw	r9, #42900	; 0xa794
   13a70:	movt	r9, #1
   13a74:	movw	r3, #42928	; 0xa7b0
   13a78:	movt	r3, #1
   13a7c:	str	r3, [fp, #-52]	; 0xffffffcc
   13a80:	b	13b40 <__assert_fail@plt+0x273c>
   13a84:	add	r2, r3, #1
   13a88:	str	r2, [fp, #-40]	; 0xffffffd8
   13a8c:	mov	r2, #0
   13a90:	strb	r2, [r3]
   13a94:	mov	r2, r8
   13a98:	movw	r1, #42892	; 0xa78c
   13a9c:	movt	r1, #1
   13aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13aa4:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   13aa8:	b	13a14 <__assert_fail@plt+0x2610>
   13aac:	tst	r1, #16
   13ab0:	bne	13ae4 <__assert_fail@plt+0x26e0>
   13ab4:	ldr	r3, [r6, #8]
   13ab8:	cmp	r3, #0
   13abc:	bne	13ad0 <__assert_fail@plt+0x26cc>
   13ac0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ac4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13ac8:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   13acc:	b	13ae4 <__assert_fail@plt+0x26e0>
   13ad0:	tst	r1, #1
   13ad4:	movne	r1, r9
   13ad8:	moveq	r1, sl
   13adc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13ae0:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   13ae4:	add	r4, r4, #24
   13ae8:	subs	r5, r5, #1
   13aec:	beq	13b34 <__assert_fail@plt+0x2730>
   13af0:	ldr	r2, [r4]
   13af4:	cmp	r2, #0
   13af8:	beq	13ae4 <__assert_fail@plt+0x26e0>
   13afc:	ldr	r1, [r4, #12]
   13b00:	and	r3, r1, #4
   13b04:	cmp	r3, #0
   13b08:	moveq	r6, r4
   13b0c:	tst	r1, #2
   13b10:	bne	13ae4 <__assert_fail@plt+0x26e0>
   13b14:	ldr	r3, [r4, #8]
   13b18:	ldr	r0, [r6, #12]
   13b1c:	orr	r1, r1, r0
   13b20:	cmp	r3, #0
   13b24:	beq	13aac <__assert_fail@plt+0x26a8>
   13b28:	tst	r1, #16
   13b2c:	beq	13ad0 <__assert_fail@plt+0x26cc>
   13b30:	b	13ae4 <__assert_fail@plt+0x26e0>
   13b34:	add	r7, r7, #28
   13b38:	subs	r8, r8, #1
   13b3c:	beq	13b58 <__assert_fail@plt+0x2754>
   13b40:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13b44:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13b48:	cmp	r5, #0
   13b4c:	beq	13b34 <__assert_fail@plt+0x2730>
   13b50:	mov	r6, r4
   13b54:	b	13af0 <__assert_fail@plt+0x26ec>
   13b58:	sub	sp, fp, #32
   13b5c:	ldrd	r4, [sp]
   13b60:	ldrd	r6, [sp, #8]
   13b64:	ldrd	r8, [sp, #16]
   13b68:	ldrd	sl, [sp, #24]
   13b6c:	add	sp, sp, #32
   13b70:	pop	{pc}		; (ldr pc, [sp], #4)
   13b74:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13b78:	strd	r6, [sp, #8]
   13b7c:	str	r8, [sp, #16]
   13b80:	str	lr, [sp, #20]
   13b84:	mov	r4, r0
   13b88:	mov	r5, r1
   13b8c:	ldr	r3, [r0, #28]
   13b90:	ldr	r2, [r0, #24]
   13b94:	sub	r3, r3, r2
   13b98:	ldr	r2, [r0, #16]
   13b9c:	cmp	r3, r2
   13ba0:	bhi	13bbc <__assert_fail@plt+0x27b8>
   13ba4:	ldr	r3, [r4, #20]
   13ba8:	cmp	r3, #0
   13bac:	subge	r5, r5, r3
   13bb0:	mov	r6, #32
   13bb4:	mov	r7, #1
   13bb8:	b	13bd8 <__assert_fail@plt+0x27d4>
   13bbc:	bl	18970 <argp_parse@@Base+0x1978>
   13bc0:	b	13ba4 <__assert_fail@plt+0x27a0>
   13bc4:	ldr	r3, [r4, #28]
   13bc8:	add	r2, r3, #1
   13bcc:	str	r2, [r4, #28]
   13bd0:	strb	r6, [r3]
   13bd4:	sub	r5, r5, #1
   13bd8:	cmp	r5, #0
   13bdc:	ble	13c08 <__assert_fail@plt+0x2804>
   13be0:	ldr	r2, [r4, #28]
   13be4:	ldr	r3, [r4, #32]
   13be8:	cmp	r2, r3
   13bec:	bcc	13bc4 <__assert_fail@plt+0x27c0>
   13bf0:	mov	r1, r7
   13bf4:	mov	r0, r4
   13bf8:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   13bfc:	cmp	r0, #0
   13c00:	bne	13bc4 <__assert_fail@plt+0x27c0>
   13c04:	b	13bd4 <__assert_fail@plt+0x27d0>
   13c08:	ldrd	r4, [sp]
   13c0c:	ldrd	r6, [sp, #8]
   13c10:	ldr	r8, [sp, #16]
   13c14:	add	sp, sp, #20
   13c18:	pop	{pc}		; (ldr pc, [sp], #4)
   13c1c:	strd	r4, [sp, #-16]!
   13c20:	str	r6, [sp, #8]
   13c24:	str	lr, [sp, #12]
   13c28:	ldr	r4, [r0, #12]
   13c2c:	ands	r4, r4, #8
   13c30:	movne	r4, #0
   13c34:	bne	13c64 <__assert_fail@plt+0x2860>
   13c38:	ldr	r5, [r0, #4]
   13c3c:	sub	r3, r5, #1
   13c40:	cmp	r3, #254	; 0xfe
   13c44:	bhi	13c64 <__assert_fail@plt+0x2860>
   13c48:	bl	11260 <__ctype_b_loc@plt>
   13c4c:	ldr	r2, [r0]
   13c50:	lsl	r3, r5, #1
   13c54:	ldrh	r3, [r2, r3]
   13c58:	and	r3, r3, #16384	; 0x4000
   13c5c:	cmp	r3, #0
   13c60:	movne	r4, r5
   13c64:	mov	r0, r4
   13c68:	ldrd	r4, [sp]
   13c6c:	ldr	r6, [sp, #8]
   13c70:	add	sp, sp, #12
   13c74:	pop	{pc}		; (ldr pc, [sp], #4)
   13c78:	strd	r4, [sp, #-16]!
   13c7c:	str	r6, [sp, #8]
   13c80:	str	lr, [sp, #12]
   13c84:	mov	r4, r0
   13c88:	mov	r5, r1
   13c8c:	ldr	r3, [r0, #28]
   13c90:	ldr	r2, [r0, #24]
   13c94:	sub	r3, r3, r2
   13c98:	ldr	r2, [r0, #16]
   13c9c:	cmp	r3, r2
   13ca0:	bhi	13cf0 <__assert_fail@plt+0x28ec>
   13ca4:	ldr	r3, [r4, #20]
   13ca8:	cmp	r3, #0
   13cac:	addge	r5, r5, r3
   13cb0:	ldr	r3, [r4, #8]
   13cb4:	cmp	r5, r3
   13cb8:	bcc	13d10 <__assert_fail@plt+0x290c>
   13cbc:	ldr	r2, [r4, #28]
   13cc0:	ldr	r3, [r4, #32]
   13cc4:	cmp	r2, r3
   13cc8:	bcs	13cf8 <__assert_fail@plt+0x28f4>
   13ccc:	ldr	r3, [r4, #28]
   13cd0:	add	r2, r3, #1
   13cd4:	str	r2, [r4, #28]
   13cd8:	mov	r2, #10
   13cdc:	strb	r2, [r3]
   13ce0:	ldrd	r4, [sp]
   13ce4:	ldr	r6, [sp, #8]
   13ce8:	add	sp, sp, #12
   13cec:	pop	{pc}		; (ldr pc, [sp], #4)
   13cf0:	bl	18970 <argp_parse@@Base+0x1978>
   13cf4:	b	13ca4 <__assert_fail@plt+0x28a0>
   13cf8:	mov	r1, #1
   13cfc:	mov	r0, r4
   13d00:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   13d04:	cmp	r0, #0
   13d08:	bne	13ccc <__assert_fail@plt+0x28c8>
   13d0c:	b	13ce0 <__assert_fail@plt+0x28dc>
   13d10:	ldr	r2, [r4, #28]
   13d14:	ldr	r3, [r4, #32]
   13d18:	cmp	r2, r3
   13d1c:	bcs	13d38 <__assert_fail@plt+0x2934>
   13d20:	ldr	r3, [r4, #28]
   13d24:	add	r2, r3, #1
   13d28:	str	r2, [r4, #28]
   13d2c:	mov	r2, #32
   13d30:	strb	r2, [r3]
   13d34:	b	13ce0 <__assert_fail@plt+0x28dc>
   13d38:	mov	r1, #1
   13d3c:	mov	r0, r4
   13d40:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   13d44:	cmp	r0, #0
   13d48:	bne	13d20 <__assert_fail@plt+0x291c>
   13d4c:	b	13ce0 <__assert_fail@plt+0x28dc>
   13d50:	strd	r4, [sp, #-16]!
   13d54:	str	r6, [sp, #8]
   13d58:	str	lr, [sp, #12]
   13d5c:	ldr	r5, [r0, #8]
   13d60:	cmp	r5, #0
   13d64:	beq	13da8 <__assert_fail@plt+0x29a4>
   13d68:	ldr	r2, [r0, #12]
   13d6c:	ldr	r1, [r1, #12]
   13d70:	orr	r2, r2, r1
   13d74:	tst	r2, #16
   13d78:	bne	13db4 <__assert_fail@plt+0x29b0>
   13d7c:	mov	r6, r3
   13d80:	mov	r4, r0
   13d84:	tst	r2, #1
   13d88:	beq	13dc8 <__assert_fail@plt+0x29c4>
   13d8c:	mov	r3, r5
   13d90:	ldr	r2, [r0, #4]
   13d94:	movw	r1, #42936	; 0xa7b8
   13d98:	movt	r1, #1
   13d9c:	mov	r0, r6
   13da0:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   13da4:	b	13db4 <__assert_fail@plt+0x29b0>
   13da8:	ldr	r5, [r1, #8]
   13dac:	cmp	r5, #0
   13db0:	bne	13d68 <__assert_fail@plt+0x2964>
   13db4:	mov	r0, #0
   13db8:	ldrd	r4, [sp]
   13dbc:	ldr	r6, [sp, #8]
   13dc0:	add	sp, sp, #12
   13dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc8:	mov	r0, r5
   13dcc:	bl	11290 <strlen@plt>
   13dd0:	add	r1, r0, #6
   13dd4:	mov	r0, r6
   13dd8:	bl	13c78 <__assert_fail@plt+0x2874>
   13ddc:	mov	r3, r5
   13de0:	ldr	r2, [r4, #4]
   13de4:	movw	r1, #42948	; 0xa7c4
   13de8:	movt	r1, #1
   13dec:	mov	r0, r6
   13df0:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   13df4:	b	13db4 <__assert_fail@plt+0x29b0>
   13df8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13dfc:	strd	r6, [sp, #8]
   13e00:	strd	r8, [sp, #16]
   13e04:	strd	sl, [sp, #24]
   13e08:	str	lr, [sp, #32]
   13e0c:	sub	sp, sp, #28
   13e10:	str	r1, [sp, #8]
   13e14:	mov	sl, r2
   13e18:	mov	r4, r3
   13e1c:	ldr	r9, [sp, #64]	; 0x40
   13e20:	ldr	r6, [r2]
   13e24:	str	r6, [sp, #20]
   13e28:	ldr	r7, [r0, #16]
   13e2c:	ldr	r2, [r0, #8]
   13e30:	mov	ip, r2
   13e34:	str	r2, [sp, #16]
   13e38:	mov	r3, r1
   13e3c:	mov	r2, r0
   13e40:	mov	r1, #6
   13e44:	movt	r1, #512	; 0x200
   13e48:	mov	r0, ip
   13e4c:	bl	13824 <__assert_fail@plt+0x2420>
   13e50:	cmp	r0, #0
   13e54:	str	r0, [sp, #12]
   13e58:	beq	13fe8 <__assert_fail@plt+0x2be4>
   13e5c:	mov	r1, #10
   13e60:	bl	11128 <strchrnul@plt>
   13e64:	mov	r5, r0
   13e68:	ldrb	r3, [r0]
   13e6c:	cmp	r3, #0
   13e70:	beq	13fb8 <__assert_fail@plt+0x2bb4>
   13e74:	ldrb	fp, [r6]
   13e78:	cmp	fp, #0
   13e7c:	ble	13fb0 <__assert_fail@plt+0x2bac>
   13e80:	mov	r6, #0
   13e84:	add	r8, r0, #1
   13e88:	mov	r1, #10
   13e8c:	mov	r0, r8
   13e90:	bl	11128 <strchrnul@plt>
   13e94:	add	r6, r6, #1
   13e98:	cmp	r6, fp
   13e9c:	bne	13e84 <__assert_fail@plt+0x2a80>
   13ea0:	mov	r5, r0
   13ea4:	ldr	r3, [sl]
   13ea8:	add	r3, r3, #1
   13eac:	str	r3, [sl]
   13eb0:	mov	fp, #1
   13eb4:	add	r1, r5, #1
   13eb8:	sub	r1, r1, r8
   13ebc:	mov	r0, r9
   13ec0:	bl	13c78 <__assert_fail@plt+0x2874>
   13ec4:	sub	r6, r5, r8
   13ec8:	ldr	r3, [r9, #28]
   13ecc:	add	r3, r3, r6
   13ed0:	ldr	r2, [r9, #32]
   13ed4:	cmp	r2, r3
   13ed8:	bcs	13ef0 <__assert_fail@plt+0x2aec>
   13edc:	mov	r1, r6
   13ee0:	mov	r0, r9
   13ee4:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   13ee8:	cmp	r0, #0
   13eec:	beq	13f0c <__assert_fail@plt+0x2b08>
   13ef0:	mov	r2, r6
   13ef4:	mov	r1, r8
   13ef8:	ldr	r0, [r9, #28]
   13efc:	bl	11158 <memcpy@plt>
   13f00:	ldr	r3, [r9, #28]
   13f04:	add	r6, r3, r6
   13f08:	str	r6, [r9, #28]
   13f0c:	ldr	r2, [sp, #16]
   13f10:	ldr	r3, [sp, #12]
   13f14:	cmp	r2, r3
   13f18:	bne	13fc4 <__assert_fail@plt+0x2bc0>
   13f1c:	cmp	r7, #0
   13f20:	beq	13f5c <__assert_fail@plt+0x2b58>
   13f24:	ldr	r0, [r7]
   13f28:	cmp	r0, #0
   13f2c:	beq	13f5c <__assert_fail@plt+0x2b58>
   13f30:	mov	r3, r4
   13f34:	str	r9, [sp]
   13f38:	mov	r2, sl
   13f3c:	ldr	r1, [sp, #8]
   13f40:	bl	13df8 <__assert_fail@plt+0x29f4>
   13f44:	clz	r3, r0
   13f48:	lsr	r3, r3, #5
   13f4c:	ldr	r0, [r7, #16]!
   13f50:	cmp	r0, #0
   13f54:	bne	13f34 <__assert_fail@plt+0x2b30>
   13f58:	mov	r4, r3
   13f5c:	cmp	r4, #0
   13f60:	moveq	fp, #0
   13f64:	cmp	fp, #0
   13f68:	beq	13f8c <__assert_fail@plt+0x2b88>
   13f6c:	ldrb	r3, [r5]
   13f70:	cmp	r3, #0
   13f74:	beq	13fd0 <__assert_fail@plt+0x2bcc>
   13f78:	ldr	r2, [sp, #20]
   13f7c:	ldrb	r3, [r2]
   13f80:	add	r3, r3, #1
   13f84:	strb	r3, [r2]
   13f88:	mov	r4, #0
   13f8c:	clz	r0, r4
   13f90:	lsr	r0, r0, #5
   13f94:	add	sp, sp, #28
   13f98:	ldrd	r4, [sp]
   13f9c:	ldrd	r6, [sp, #8]
   13fa0:	ldrd	r8, [sp, #16]
   13fa4:	ldrd	sl, [sp, #24]
   13fa8:	add	sp, sp, #32
   13fac:	pop	{pc}		; (ldr pc, [sp], #4)
   13fb0:	ldr	r8, [sp, #12]
   13fb4:	b	13ea4 <__assert_fail@plt+0x2aa0>
   13fb8:	ldr	r8, [sp, #12]
   13fbc:	mov	fp, #0
   13fc0:	b	13eb4 <__assert_fail@plt+0x2ab0>
   13fc4:	mov	r0, r3
   13fc8:	bl	17cd0 <argp_parse@@Base+0xcd8>
   13fcc:	b	13f1c <__assert_fail@plt+0x2b18>
   13fd0:	ldr	r2, [sp, #20]
   13fd4:	ldrb	r3, [r2]
   13fd8:	cmp	r3, #0
   13fdc:	movne	r3, #0
   13fe0:	strbne	r3, [r2]
   13fe4:	b	13f8c <__assert_fail@plt+0x2b88>
   13fe8:	cmp	r7, #0
   13fec:	beq	13f8c <__assert_fail@plt+0x2b88>
   13ff0:	ldr	r5, [sp, #12]
   13ff4:	mov	fp, #0
   13ff8:	b	13f24 <__assert_fail@plt+0x2b20>
   13ffc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14000:	strd	r6, [sp, #8]
   14004:	str	r8, [sp, #16]
   14008:	str	lr, [sp, #20]
   1400c:	mov	r6, r0
   14010:	mov	r4, r2
   14014:	ldr	r3, [r2, #16]
   14018:	mov	r2, r1
   1401c:	mov	r1, #3
   14020:	movt	r1, #512	; 0x200
   14024:	bl	13824 <__assert_fail@plt+0x2420>
   14028:	subs	r5, r0, #0
   1402c:	beq	14140 <__assert_fail@plt+0x2d3c>
   14030:	ldrb	r3, [r5]
   14034:	cmp	r3, #0
   14038:	beq	14134 <__assert_fail@plt+0x2d30>
   1403c:	ldr	r3, [r4, #8]
   14040:	ldr	r3, [r3]
   14044:	cmp	r3, #0
   14048:	beq	14074 <__assert_fail@plt+0x2c70>
   1404c:	ldr	r7, [r4, #4]
   14050:	ldr	r2, [r7, #28]
   14054:	ldr	r3, [r7, #32]
   14058:	cmp	r2, r3
   1405c:	bcs	14164 <__assert_fail@plt+0x2d60>
   14060:	ldr	r3, [r7, #28]
   14064:	add	r2, r3, #1
   14068:	str	r2, [r7, #28]
   1406c:	mov	r2, #10
   14070:	strb	r2, [r3]
   14074:	movw	r8, #50064	; 0xc390
   14078:	movt	r8, #2
   1407c:	ldr	r1, [r8, #24]
   14080:	ldr	r0, [r4, #4]
   14084:	bl	13b74 <__assert_fail@plt+0x2770>
   14088:	ldr	r7, [r4, #4]
   1408c:	ldr	r8, [r8, #24]
   14090:	ldr	r3, [r7, #28]
   14094:	ldr	r2, [r7, #24]
   14098:	sub	r3, r3, r2
   1409c:	ldr	r2, [r7, #16]
   140a0:	cmp	r3, r2
   140a4:	bhi	1417c <__assert_fail@plt+0x2d78>
   140a8:	str	r8, [r7, #4]
   140ac:	ldr	r7, [r4, #4]
   140b0:	movw	r3, #50064	; 0xc390
   140b4:	movt	r3, #2
   140b8:	ldr	r8, [r3, #24]
   140bc:	ldr	r3, [r7, #28]
   140c0:	ldr	r2, [r7, #24]
   140c4:	sub	r3, r3, r2
   140c8:	ldr	r2, [r7, #16]
   140cc:	cmp	r3, r2
   140d0:	bhi	14188 <__assert_fail@plt+0x2d84>
   140d4:	str	r8, [r7, #12]
   140d8:	mov	r0, r5
   140dc:	bl	11290 <strlen@plt>
   140e0:	subs	r7, r0, #0
   140e4:	bne	14194 <__assert_fail@plt+0x2d90>
   140e8:	ldr	r7, [r4, #4]
   140ec:	ldr	r3, [r7, #28]
   140f0:	ldr	r2, [r7, #24]
   140f4:	sub	r3, r3, r2
   140f8:	ldr	r2, [r7, #16]
   140fc:	cmp	r3, r2
   14100:	bhi	141e0 <__assert_fail@plt+0x2ddc>
   14104:	mov	r3, #0
   14108:	str	r3, [r7, #4]
   1410c:	ldr	r7, [r4, #4]
   14110:	ldr	r2, [r7, #28]
   14114:	ldr	r3, [r7, #32]
   14118:	cmp	r2, r3
   1411c:	bcs	141ec <__assert_fail@plt+0x2de8>
   14120:	ldr	r3, [r7, #28]
   14124:	add	r2, r3, #1
   14128:	str	r2, [r7, #28]
   1412c:	mov	r2, #10
   14130:	strb	r2, [r3]
   14134:	ldr	r3, [r4, #8]
   14138:	mov	r2, #1
   1413c:	str	r2, [r3, #4]
   14140:	cmp	r6, r5
   14144:	beq	14150 <__assert_fail@plt+0x2d4c>
   14148:	mov	r0, r5
   1414c:	bl	17cd0 <argp_parse@@Base+0xcd8>
   14150:	ldrd	r4, [sp]
   14154:	ldrd	r6, [sp, #8]
   14158:	ldr	r8, [sp, #16]
   1415c:	add	sp, sp, #20
   14160:	pop	{pc}		; (ldr pc, [sp], #4)
   14164:	mov	r1, #1
   14168:	mov	r0, r7
   1416c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   14170:	cmp	r0, #0
   14174:	bne	14060 <__assert_fail@plt+0x2c5c>
   14178:	b	14074 <__assert_fail@plt+0x2c70>
   1417c:	mov	r0, r7
   14180:	bl	18970 <argp_parse@@Base+0x1978>
   14184:	b	140a8 <__assert_fail@plt+0x2ca4>
   14188:	mov	r0, r7
   1418c:	bl	18970 <argp_parse@@Base+0x1978>
   14190:	b	140d4 <__assert_fail@plt+0x2cd0>
   14194:	ldr	r8, [r4, #4]
   14198:	ldr	r3, [r8, #28]
   1419c:	add	r3, r3, r7
   141a0:	ldr	r2, [r8, #32]
   141a4:	cmp	r2, r3
   141a8:	bcs	141c0 <__assert_fail@plt+0x2dbc>
   141ac:	mov	r1, r7
   141b0:	mov	r0, r8
   141b4:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   141b8:	cmp	r0, #0
   141bc:	beq	140e8 <__assert_fail@plt+0x2ce4>
   141c0:	mov	r2, r7
   141c4:	mov	r1, r5
   141c8:	ldr	r0, [r8, #28]
   141cc:	bl	11158 <memcpy@plt>
   141d0:	ldr	r3, [r8, #28]
   141d4:	add	r7, r3, r7
   141d8:	str	r7, [r8, #28]
   141dc:	b	140e8 <__assert_fail@plt+0x2ce4>
   141e0:	mov	r0, r7
   141e4:	bl	18970 <argp_parse@@Base+0x1978>
   141e8:	b	14104 <__assert_fail@plt+0x2d00>
   141ec:	mov	r1, #1
   141f0:	mov	r0, r7
   141f4:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   141f8:	cmp	r0, #0
   141fc:	bne	14120 <__assert_fail@plt+0x2d1c>
   14200:	b	14134 <__assert_fail@plt+0x2d30>
   14204:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14208:	strd	r6, [sp, #8]
   1420c:	str	r8, [sp, #16]
   14210:	str	lr, [sp, #20]
   14214:	mov	r6, r0
   14218:	mov	r4, r1
   1421c:	ldr	r3, [r1, #12]
   14220:	cmp	r3, #0
   14224:	beq	14358 <__assert_fail@plt+0x2f54>
   14228:	ldr	r3, [r1, #8]
   1422c:	ldr	r7, [r3]
   14230:	ldr	r2, [r1]
   14234:	ldr	r5, [r2, #16]
   14238:	ldr	r3, [r3, #4]
   1423c:	cmp	r3, #0
   14240:	cmpne	r7, #0
   14244:	bne	142f8 <__assert_fail@plt+0x2ef4>
   14248:	cmp	r5, #0
   1424c:	beq	142d0 <__assert_fail@plt+0x2ecc>
   14250:	ldr	r0, [r5]
   14254:	cmp	r0, #0
   14258:	beq	142d0 <__assert_fail@plt+0x2ecc>
   1425c:	ldrb	r3, [r0]
   14260:	cmp	r3, #0
   14264:	beq	142d0 <__assert_fail@plt+0x2ecc>
   14268:	cmp	r7, #0
   1426c:	beq	1429c <__assert_fail@plt+0x2e98>
   14270:	ldr	r3, [r7, #16]
   14274:	cmp	r3, r5
   14278:	beq	142d0 <__assert_fail@plt+0x2ecc>
   1427c:	cmp	r3, #0
   14280:	beq	1429c <__assert_fail@plt+0x2e98>
   14284:	ldr	r3, [r3, #12]
   14288:	cmp	r3, #0
   1428c:	cmpne	r5, r3
   14290:	bne	14284 <__assert_fail@plt+0x2e80>
   14294:	cmp	r5, r3
   14298:	beq	142d0 <__assert_fail@plt+0x2ecc>
   1429c:	ldr	r3, [r4, #4]
   142a0:	ldr	r7, [r3, #12]
   142a4:	mov	r2, r4
   142a8:	ldr	r1, [r5, #16]
   142ac:	bl	13ffc <__assert_fail@plt+0x2bf8>
   142b0:	ldr	r5, [r4, #4]
   142b4:	ldr	r3, [r5, #28]
   142b8:	ldr	r2, [r5, #24]
   142bc:	sub	r3, r3, r2
   142c0:	ldr	r2, [r5, #16]
   142c4:	cmp	r3, r2
   142c8:	bhi	1434c <__assert_fail@plt+0x2f48>
   142cc:	str	r7, [r5, #12]
   142d0:	mov	r3, #0
   142d4:	str	r3, [r4, #12]
   142d8:	mov	r1, r6
   142dc:	ldr	r0, [r4, #4]
   142e0:	bl	13b74 <__assert_fail@plt+0x2770>
   142e4:	ldrd	r4, [sp]
   142e8:	ldrd	r6, [sp, #8]
   142ec:	ldr	r8, [sp, #16]
   142f0:	add	sp, sp, #20
   142f4:	pop	{pc}		; (ldr pc, [sp], #4)
   142f8:	ldr	r2, [r2, #12]
   142fc:	ldr	r3, [r7, #12]
   14300:	cmp	r2, r3
   14304:	beq	14248 <__assert_fail@plt+0x2e44>
   14308:	ldr	r8, [r1, #4]
   1430c:	ldr	r2, [r8, #28]
   14310:	ldr	r3, [r8, #32]
   14314:	cmp	r2, r3
   14318:	bcs	14334 <__assert_fail@plt+0x2f30>
   1431c:	ldr	r3, [r8, #28]
   14320:	add	r2, r3, #1
   14324:	str	r2, [r8, #28]
   14328:	mov	r2, #10
   1432c:	strb	r2, [r3]
   14330:	b	14248 <__assert_fail@plt+0x2e44>
   14334:	mov	r1, #1
   14338:	mov	r0, r8
   1433c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   14340:	cmp	r0, #0
   14344:	bne	1431c <__assert_fail@plt+0x2f18>
   14348:	b	14248 <__assert_fail@plt+0x2e44>
   1434c:	mov	r0, r5
   14350:	bl	18970 <argp_parse@@Base+0x1978>
   14354:	b	142cc <__assert_fail@plt+0x2ec8>
   14358:	ldr	r5, [r1, #4]
   1435c:	ldr	r3, [r5, #28]
   14360:	add	r3, r3, #2
   14364:	ldr	r2, [r5, #32]
   14368:	cmp	r2, r3
   1436c:	bcs	14384 <__assert_fail@plt+0x2f80>
   14370:	mov	r1, #2
   14374:	mov	r0, r5
   14378:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   1437c:	cmp	r0, #0
   14380:	beq	142d8 <__assert_fail@plt+0x2ed4>
   14384:	ldr	r2, [r5, #28]
   14388:	movw	r3, #40776	; 0x9f48
   1438c:	movt	r3, #1
   14390:	ldrh	r3, [r3]
   14394:	strh	r3, [r2]
   14398:	ldr	r3, [r5, #28]
   1439c:	add	r3, r3, #2
   143a0:	str	r3, [r5, #28]
   143a4:	b	142d8 <__assert_fail@plt+0x2ed4>
   143a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   143ac:	strd	r6, [sp, #8]
   143b0:	strd	r8, [sp, #16]
   143b4:	strd	sl, [sp, #24]
   143b8:	str	lr, [sp, #32]
   143bc:	sub	sp, sp, #28
   143c0:	mov	r8, r0
   143c4:	str	r1, [sp, #12]
   143c8:	str	r2, [sp, #8]
   143cc:	mov	fp, r3
   143d0:	ldr	sl, [sp, #64]	; 0x40
   143d4:	ldr	r4, [sp, #68]	; 0x44
   143d8:	ldr	r6, [r0, #12]
   143dc:	ldr	r9, [r0, #16]
   143e0:	cmp	r6, #0
   143e4:	beq	14860 <__assert_fail@plt+0x345c>
   143e8:	mov	r5, r2
   143ec:	mov	r1, #11
   143f0:	mov	r0, r6
   143f4:	bl	1129c <strchr@plt>
   143f8:	cmp	r5, #0
   143fc:	beq	1443c <__assert_fail@plt+0x3038>
   14400:	cmp	r0, #0
   14404:	addne	r6, r0, #1
   14408:	beq	148a8 <__assert_fail@plt+0x34a4>
   1440c:	ldr	r3, [r8, #20]
   14410:	cmp	r3, #0
   14414:	beq	148b0 <__assert_fail@plt+0x34ac>
   14418:	ldr	r1, [sp, #12]
   1441c:	mov	r0, r8
   14420:	bl	17b4c <argp_parse@@Base+0xb54>
   14424:	str	r0, [sp, #16]
   14428:	ldr	r3, [r8, #20]
   1442c:	mov	r7, #0
   14430:	mov	r0, #2
   14434:	movt	r0, #512	; 0x200
   14438:	b	14488 <__assert_fail@plt+0x3084>
   1443c:	cmp	r0, #0
   14440:	beq	148cc <__assert_fail@plt+0x34c8>
   14444:	sub	r7, r0, r6
   14448:	ldr	r3, [r8, #20]
   1444c:	cmp	r3, #0
   14450:	beq	14670 <__assert_fail@plt+0x326c>
   14454:	cmp	r7, #0
   14458:	beq	1446c <__assert_fail@plt+0x3068>
   1445c:	mov	r1, r7
   14460:	mov	r0, r6
   14464:	bl	1114c <strndup@plt>
   14468:	mov	r6, r0
   1446c:	ldr	r1, [sp, #12]
   14470:	mov	r0, r8
   14474:	bl	17b4c <argp_parse@@Base+0xb54>
   14478:	str	r0, [sp, #16]
   1447c:	ldr	r3, [r8, #20]
   14480:	mov	r0, #1
   14484:	movt	r0, #512	; 0x200
   14488:	ldr	r2, [sp, #16]
   1448c:	mov	r1, r6
   14490:	blx	r3
   14494:	subs	r5, r0, #0
   14498:	beq	1477c <__assert_fail@plt+0x3378>
   1449c:	cmp	fp, #0
   144a0:	bne	14680 <__assert_fail@plt+0x327c>
   144a4:	cmp	r5, r6
   144a8:	movne	r3, #0
   144ac:	moveq	r3, #1
   144b0:	cmp	r7, #0
   144b4:	moveq	r3, #0
   144b8:	cmp	r3, #0
   144bc:	beq	146c0 <__assert_fail@plt+0x32bc>
   144c0:	ldr	r3, [r4, #28]
   144c4:	add	r3, r3, r7
   144c8:	ldr	r2, [r4, #32]
   144cc:	cmp	r2, r3
   144d0:	bcs	144e8 <__assert_fail@plt+0x30e4>
   144d4:	mov	r1, r7
   144d8:	mov	r0, r4
   144dc:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   144e0:	cmp	r0, #0
   144e4:	beq	14504 <__assert_fail@plt+0x3100>
   144e8:	mov	r2, r7
   144ec:	mov	r1, r6
   144f0:	ldr	r0, [r4, #28]
   144f4:	bl	11158 <memcpy@plt>
   144f8:	ldr	r3, [r4, #28]
   144fc:	add	r3, r3, r7
   14500:	str	r3, [r4, #28]
   14504:	ldr	r3, [r4, #28]
   14508:	ldr	r2, [r4, #24]
   1450c:	sub	r3, r3, r2
   14510:	ldr	r2, [r4, #16]
   14514:	cmp	r3, r2
   14518:	bhi	14720 <__assert_fail@plt+0x331c>
   1451c:	ldr	r3, [r4, #20]
   14520:	bic	r3, r3, r3, asr #31
   14524:	ldr	r2, [r4, #4]
   14528:	cmp	r2, r3
   1452c:	bcc	1472c <__assert_fail@plt+0x3328>
   14530:	cmp	r5, r6
   14534:	moveq	r5, #1
   14538:	bne	1476c <__assert_fail@plt+0x3368>
   1453c:	cmp	r6, #0
   14540:	cmpne	r7, #0
   14544:	beq	1455c <__assert_fail@plt+0x3158>
   14548:	ldr	r3, [r8, #20]
   1454c:	cmp	r3, #0
   14550:	beq	145e0 <__assert_fail@plt+0x31dc>
   14554:	mov	r0, r6
   14558:	bl	17cd0 <argp_parse@@Base+0xcd8>
   1455c:	ldr	r3, [sp, #8]
   14560:	cmp	r3, #0
   14564:	beq	145e0 <__assert_fail@plt+0x31dc>
   14568:	ldr	r3, [r8, #20]
   1456c:	cmp	r3, #0
   14570:	beq	145e0 <__assert_fail@plt+0x31dc>
   14574:	ldr	r2, [sp, #16]
   14578:	mov	r1, #0
   1457c:	mov	r0, #4
   14580:	movt	r0, #512	; 0x200
   14584:	blx	r3
   14588:	subs	r6, r0, #0
   1458c:	beq	145e0 <__assert_fail@plt+0x31dc>
   14590:	orrs	r3, fp, r5
   14594:	bne	14784 <__assert_fail@plt+0x3380>
   14598:	mov	r0, r6
   1459c:	bl	11290 <strlen@plt>
   145a0:	subs	r5, r0, #0
   145a4:	bne	147c4 <__assert_fail@plt+0x33c0>
   145a8:	mov	r0, r6
   145ac:	bl	17cd0 <argp_parse@@Base+0xcd8>
   145b0:	ldr	r3, [r4, #28]
   145b4:	ldr	r2, [r4, #24]
   145b8:	sub	r3, r3, r2
   145bc:	ldr	r2, [r4, #16]
   145c0:	cmp	r3, r2
   145c4:	bhi	1480c <__assert_fail@plt+0x3408>
   145c8:	ldr	r3, [r4, #20]
   145cc:	bic	r3, r3, r3, asr #31
   145d0:	ldr	r2, [r4, #4]
   145d4:	cmp	r2, r3
   145d8:	movcs	r5, #1
   145dc:	bcc	14818 <__assert_fail@plt+0x3414>
   145e0:	cmp	r9, #0
   145e4:	beq	14650 <__assert_fail@plt+0x324c>
   145e8:	ldr	r0, [r9]
   145ec:	cmp	r0, #0
   145f0:	beq	14650 <__assert_fail@plt+0x324c>
   145f4:	clz	r6, sl
   145f8:	lsr	r6, r6, #5
   145fc:	cmp	sl, #0
   14600:	cmpne	r5, #0
   14604:	bne	14650 <__assert_fail@plt+0x324c>
   14608:	orrs	r3, fp, r5
   1460c:	str	r4, [sp, #4]
   14610:	str	sl, [sp]
   14614:	movne	r3, #1
   14618:	moveq	r3, #0
   1461c:	ldr	r2, [sp, #8]
   14620:	ldr	r1, [sp, #12]
   14624:	bl	143a8 <__assert_fail@plt+0x2fa4>
   14628:	orr	r5, r5, r0
   1462c:	ldr	r0, [r9, #16]
   14630:	cmp	r0, #0
   14634:	beq	14650 <__assert_fail@plt+0x324c>
   14638:	add	r9, r9, #16
   1463c:	cmp	r5, #0
   14640:	movne	r3, r6
   14644:	moveq	r3, #1
   14648:	cmp	r3, #0
   1464c:	bne	14608 <__assert_fail@plt+0x3204>
   14650:	mov	r0, r5
   14654:	add	sp, sp, #28
   14658:	ldrd	r4, [sp]
   1465c:	ldrd	r6, [sp, #8]
   14660:	ldrd	r8, [sp, #16]
   14664:	ldrd	sl, [sp, #24]
   14668:	add	sp, sp, #32
   1466c:	pop	{pc}		; (ldr pc, [sp], #4)
   14670:	mov	r5, r6
   14674:	mov	r3, #0
   14678:	str	r3, [sp, #16]
   1467c:	b	1449c <__assert_fail@plt+0x3098>
   14680:	ldr	r2, [r4, #28]
   14684:	ldr	r3, [r4, #32]
   14688:	cmp	r2, r3
   1468c:	bcs	146a8 <__assert_fail@plt+0x32a4>
   14690:	ldr	r3, [r4, #28]
   14694:	add	r2, r3, #1
   14698:	str	r2, [r4, #28]
   1469c:	mov	r2, #10
   146a0:	strb	r2, [r3]
   146a4:	b	144a4 <__assert_fail@plt+0x30a0>
   146a8:	mov	r1, #1
   146ac:	mov	r0, r4
   146b0:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   146b4:	cmp	r0, #0
   146b8:	bne	14690 <__assert_fail@plt+0x328c>
   146bc:	b	144a4 <__assert_fail@plt+0x30a0>
   146c0:	mov	r0, r5
   146c4:	bl	11290 <strlen@plt>
   146c8:	subs	r3, r0, #0
   146cc:	str	r3, [sp, #20]
   146d0:	beq	14504 <__assert_fail@plt+0x3100>
   146d4:	ldr	r3, [r4, #28]
   146d8:	mov	r1, r0
   146dc:	add	r3, r3, r0
   146e0:	ldr	r2, [r4, #32]
   146e4:	cmp	r2, r3
   146e8:	bcs	146fc <__assert_fail@plt+0x32f8>
   146ec:	mov	r0, r4
   146f0:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   146f4:	cmp	r0, #0
   146f8:	beq	14504 <__assert_fail@plt+0x3100>
   146fc:	ldr	r2, [sp, #20]
   14700:	mov	r1, r5
   14704:	ldr	r0, [r4, #28]
   14708:	bl	11158 <memcpy@plt>
   1470c:	ldr	r3, [r4, #28]
   14710:	ldr	r2, [sp, #20]
   14714:	add	r3, r3, r2
   14718:	str	r3, [r4, #28]
   1471c:	b	14504 <__assert_fail@plt+0x3100>
   14720:	mov	r0, r4
   14724:	bl	18970 <argp_parse@@Base+0x1978>
   14728:	b	1451c <__assert_fail@plt+0x3118>
   1472c:	ldr	r2, [r4, #28]
   14730:	ldr	r3, [r4, #32]
   14734:	cmp	r2, r3
   14738:	bcs	14754 <__assert_fail@plt+0x3350>
   1473c:	ldr	r3, [r4, #28]
   14740:	add	r2, r3, #1
   14744:	str	r2, [r4, #28]
   14748:	mov	r2, #10
   1474c:	strb	r2, [r3]
   14750:	b	14530 <__assert_fail@plt+0x312c>
   14754:	mov	r1, #1
   14758:	mov	r0, r4
   1475c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   14760:	cmp	r0, #0
   14764:	bne	1473c <__assert_fail@plt+0x3338>
   14768:	b	14530 <__assert_fail@plt+0x312c>
   1476c:	mov	r0, r5
   14770:	bl	17cd0 <argp_parse@@Base+0xcd8>
   14774:	mov	r5, #1
   14778:	b	1453c <__assert_fail@plt+0x3138>
   1477c:	mov	r5, #0
   14780:	b	1453c <__assert_fail@plt+0x3138>
   14784:	ldr	r2, [r4, #28]
   14788:	ldr	r3, [r4, #32]
   1478c:	cmp	r2, r3
   14790:	bcs	147ac <__assert_fail@plt+0x33a8>
   14794:	ldr	r3, [r4, #28]
   14798:	add	r2, r3, #1
   1479c:	str	r2, [r4, #28]
   147a0:	mov	r2, #10
   147a4:	strb	r2, [r3]
   147a8:	b	14598 <__assert_fail@plt+0x3194>
   147ac:	mov	r1, #1
   147b0:	mov	r0, r4
   147b4:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   147b8:	cmp	r0, #0
   147bc:	bne	14794 <__assert_fail@plt+0x3390>
   147c0:	b	14598 <__assert_fail@plt+0x3194>
   147c4:	ldr	r3, [r4, #28]
   147c8:	add	r3, r3, r5
   147cc:	ldr	r2, [r4, #32]
   147d0:	cmp	r2, r3
   147d4:	bcs	147ec <__assert_fail@plt+0x33e8>
   147d8:	mov	r1, r5
   147dc:	mov	r0, r4
   147e0:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   147e4:	cmp	r0, #0
   147e8:	beq	145a8 <__assert_fail@plt+0x31a4>
   147ec:	mov	r2, r5
   147f0:	mov	r1, r6
   147f4:	ldr	r0, [r4, #28]
   147f8:	bl	11158 <memcpy@plt>
   147fc:	ldr	r3, [r4, #28]
   14800:	add	r5, r3, r5
   14804:	str	r5, [r4, #28]
   14808:	b	145a8 <__assert_fail@plt+0x31a4>
   1480c:	mov	r0, r4
   14810:	bl	18970 <argp_parse@@Base+0x1978>
   14814:	b	145c8 <__assert_fail@plt+0x31c4>
   14818:	ldr	r2, [r4, #28]
   1481c:	ldr	r3, [r4, #32]
   14820:	cmp	r2, r3
   14824:	bcs	14844 <__assert_fail@plt+0x3440>
   14828:	ldr	r3, [r4, #28]
   1482c:	add	r2, r3, #1
   14830:	str	r2, [r4, #28]
   14834:	mov	r2, #10
   14838:	strb	r2, [r3]
   1483c:	mov	r5, #1
   14840:	b	145e0 <__assert_fail@plt+0x31dc>
   14844:	mov	r1, #1
   14848:	mov	r0, r4
   1484c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   14850:	cmp	r0, #0
   14854:	bne	14828 <__assert_fail@plt+0x3424>
   14858:	mov	r5, #1
   1485c:	b	145e0 <__assert_fail@plt+0x31dc>
   14860:	ldr	r3, [r0, #20]
   14864:	cmp	r3, #0
   14868:	moveq	r5, r6
   1486c:	beq	148b4 <__assert_fail@plt+0x34b0>
   14870:	ldr	r1, [sp, #12]
   14874:	mov	r0, r8
   14878:	bl	17b4c <argp_parse@@Base+0xb54>
   1487c:	str	r0, [sp, #16]
   14880:	ldr	r3, [r8, #20]
   14884:	mov	r7, #0
   14888:	mov	r0, #2
   1488c:	movt	r0, #512	; 0x200
   14890:	mov	r2, #1
   14894:	movt	r2, #512	; 0x200
   14898:	ldr	r1, [sp, #8]
   1489c:	cmp	r1, r7
   148a0:	moveq	r0, r2
   148a4:	b	14488 <__assert_fail@plt+0x3084>
   148a8:	mov	r6, r0
   148ac:	b	1440c <__assert_fail@plt+0x3008>
   148b0:	mov	r5, r6
   148b4:	cmp	r5, #0
   148b8:	streq	r5, [sp, #16]
   148bc:	beq	1455c <__assert_fail@plt+0x3158>
   148c0:	mov	r7, #0
   148c4:	str	r7, [sp, #16]
   148c8:	b	1449c <__assert_fail@plt+0x3098>
   148cc:	ldr	r3, [r8, #20]
   148d0:	cmp	r3, #0
   148d4:	moveq	r5, r6
   148d8:	beq	148b4 <__assert_fail@plt+0x34b0>
   148dc:	ldr	r1, [sp, #12]
   148e0:	mov	r0, r8
   148e4:	bl	17b4c <argp_parse@@Base+0xb54>
   148e8:	str	r0, [sp, #16]
   148ec:	ldr	r3, [r8, #20]
   148f0:	mov	r7, #0
   148f4:	mov	r0, #1
   148f8:	movt	r0, #512	; 0x200
   148fc:	b	14488 <__assert_fail@plt+0x3084>
   14900:	ldr	r3, [r0, #12]
   14904:	ldr	r2, [r1, #12]
   14908:	cmp	r3, r2
   1490c:	beq	1497c <__assert_fail@plt+0x3578>
   14910:	strd	r4, [sp, #-16]!
   14914:	str	r6, [sp, #8]
   14918:	str	lr, [sp, #12]
   1491c:	mov	r5, r1
   14920:	mov	r4, r0
   14924:	mov	r1, r2
   14928:	mov	r0, r3
   1492c:	bl	14900 <__assert_fail@plt+0x34fc>
   14930:	subs	r3, r0, #0
   14934:	bne	14968 <__assert_fail@plt+0x3564>
   14938:	ldr	r0, [r4, #8]
   1493c:	ldr	r3, [r5, #8]
   14940:	mvn	r2, r3
   14944:	lsr	r2, r2, #31
   14948:	cmp	r2, r0, lsr #31
   1494c:	subne	r3, r0, r3
   14950:	subeq	r3, r3, r0
   14954:	cmp	r3, #0
   14958:	bne	14968 <__assert_fail@plt+0x3564>
   1495c:	ldr	r3, [r5, #4]
   14960:	ldr	r0, [r4, #4]
   14964:	sub	r3, r3, r0
   14968:	mov	r0, r3
   1496c:	ldrd	r4, [sp]
   14970:	ldr	r6, [sp, #8]
   14974:	add	sp, sp, #12
   14978:	pop	{pc}		; (ldr pc, [sp], #4)
   1497c:	ldr	r2, [r0, #8]
   14980:	ldr	r3, [r1, #8]
   14984:	mvn	ip, r3
   14988:	lsr	ip, ip, #31
   1498c:	cmp	ip, r2, lsr #31
   14990:	subne	r3, r2, r3
   14994:	subeq	r3, r3, r2
   14998:	cmp	r3, #0
   1499c:	bne	149ac <__assert_fail@plt+0x35a8>
   149a0:	ldr	r3, [r1, #4]
   149a4:	ldr	r0, [r0, #4]
   149a8:	sub	r3, r3, r0
   149ac:	mov	r0, r3
   149b0:	bx	lr
   149b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   149b8:	strd	r6, [sp, #8]
   149bc:	str	r8, [sp, #16]
   149c0:	str	lr, [sp, #20]
   149c4:	sub	sp, sp, #8
   149c8:	ldr	lr, [r0, #16]
   149cc:	cmp	lr, #0
   149d0:	movne	r3, lr
   149d4:	bne	149e4 <__assert_fail@plt+0x35e0>
   149d8:	ldr	ip, [r0, #12]
   149dc:	b	149f4 <__assert_fail@plt+0x35f0>
   149e0:	mov	r3, r2
   149e4:	ldr	r2, [r3, #12]
   149e8:	cmp	r2, #0
   149ec:	bne	149e0 <__assert_fail@plt+0x35dc>
   149f0:	ldr	ip, [r3, #8]
   149f4:	ldr	r5, [r1, #16]
   149f8:	cmp	r5, #0
   149fc:	movne	r3, r5
   14a00:	bne	14a10 <__assert_fail@plt+0x360c>
   14a04:	ldr	r4, [r1, #12]
   14a08:	b	14a20 <__assert_fail@plt+0x361c>
   14a0c:	mov	r3, r2
   14a10:	ldr	r2, [r3, #12]
   14a14:	cmp	r2, #0
   14a18:	bne	14a0c <__assert_fail@plt+0x3608>
   14a1c:	ldr	r4, [r3, #8]
   14a20:	mvn	r3, r4
   14a24:	lsr	r3, r3, #31
   14a28:	cmp	r3, ip, lsr #31
   14a2c:	subne	r4, ip, r4
   14a30:	subeq	r4, r4, ip
   14a34:	cmp	r4, #0
   14a38:	bne	14b78 <__assert_fail@plt+0x3774>
   14a3c:	adds	r4, r5, #0
   14a40:	movne	r4, #1
   14a44:	cmp	lr, #0
   14a48:	rsbeq	r4, r4, #0
   14a4c:	rsbne	r4, r4, #1
   14a50:	cmp	r4, #0
   14a54:	bne	14b78 <__assert_fail@plt+0x3774>
   14a58:	mov	r7, r1
   14a5c:	mov	r6, r0
   14a60:	cmp	lr, #0
   14a64:	beq	14ae4 <__assert_fail@plt+0x36e0>
   14a68:	ldr	r1, [lr, #20]
   14a6c:	ldr	r2, [r5, #20]
   14a70:	cmp	r1, r2
   14a74:	ble	14aa0 <__assert_fail@plt+0x369c>
   14a78:	ldr	lr, [lr, #12]
   14a7c:	ldr	r3, [lr, #20]
   14a80:	cmp	r2, r3
   14a84:	blt	14a78 <__assert_fail@plt+0x3674>
   14a88:	mov	r1, r5
   14a8c:	mov	r0, lr
   14a90:	bl	14900 <__assert_fail@plt+0x34fc>
   14a94:	subs	r4, r0, #0
   14a98:	moveq	r4, #1
   14a9c:	b	14b78 <__assert_fail@plt+0x3774>
   14aa0:	cmp	r1, r2
   14aa4:	bge	14ad0 <__assert_fail@plt+0x36cc>
   14aa8:	ldr	r5, [r5, #12]
   14aac:	ldr	r3, [r5, #20]
   14ab0:	cmp	r1, r3
   14ab4:	blt	14aa8 <__assert_fail@plt+0x36a4>
   14ab8:	mov	r1, r5
   14abc:	mov	r0, lr
   14ac0:	bl	14900 <__assert_fail@plt+0x34fc>
   14ac4:	subs	r4, r0, #0
   14ac8:	mvneq	r4, #0
   14acc:	b	14b78 <__assert_fail@plt+0x3774>
   14ad0:	mov	r1, r5
   14ad4:	mov	r0, lr
   14ad8:	bl	14900 <__assert_fail@plt+0x34fc>
   14adc:	subs	r4, r0, #0
   14ae0:	bne	14b78 <__assert_fail@plt+0x3774>
   14ae4:	ldr	r3, [r6, #12]
   14ae8:	ldr	r4, [r7, #12]
   14aec:	mvn	r2, r4
   14af0:	lsr	r2, r2, #31
   14af4:	cmp	r2, r3, lsr #31
   14af8:	subne	r4, r3, r4
   14afc:	subeq	r4, r4, r3
   14b00:	cmp	r4, #0
   14b04:	bne	14b78 <__assert_fail@plt+0x3774>
   14b08:	mov	r0, r6
   14b0c:	bl	13578 <__assert_fail@plt+0x2174>
   14b10:	mov	r5, r0
   14b14:	str	r0, [sp]
   14b18:	mov	r0, r7
   14b1c:	bl	13578 <__assert_fail@plt+0x2174>
   14b20:	str	r0, [sp, #4]
   14b24:	ldr	r3, [r6]
   14b28:	ldr	r0, [r3, #12]
   14b2c:	ubfx	r0, r0, #3, #1
   14b30:	cmp	r5, #0
   14b34:	moveq	r0, #0
   14b38:	cmp	r0, #0
   14b3c:	bne	14b94 <__assert_fail@plt+0x3790>
   14b40:	ldr	r3, [r7]
   14b44:	ldr	r3, [r3, #12]
   14b48:	tst	r3, #8
   14b4c:	beq	14bcc <__assert_fail@plt+0x37c8>
   14b50:	ldr	r3, [sp, #4]
   14b54:	cmp	r3, #0
   14b58:	beq	14bcc <__assert_fail@plt+0x37c8>
   14b5c:	add	r0, sp, #4
   14b60:	bl	13614 <__assert_fail@plt+0x2210>
   14b64:	adds	r3, r0, #0
   14b68:	movne	r3, #1
   14b6c:	mov	r0, r4
   14b70:	subs	r4, r0, r3
   14b74:	beq	14bcc <__assert_fail@plt+0x37c8>
   14b78:	mov	r0, r4
   14b7c:	add	sp, sp, #8
   14b80:	ldrd	r4, [sp]
   14b84:	ldrd	r6, [sp, #8]
   14b88:	ldr	r8, [sp, #16]
   14b8c:	add	sp, sp, #20
   14b90:	pop	{pc}		; (ldr pc, [sp], #4)
   14b94:	mov	r0, sp
   14b98:	bl	13614 <__assert_fail@plt+0x2210>
   14b9c:	adds	r0, r0, #0
   14ba0:	movne	r0, #1
   14ba4:	ldr	r3, [r7]
   14ba8:	ldr	r3, [r3, #12]
   14bac:	ands	r3, r3, #8
   14bb0:	beq	14b70 <__assert_fail@plt+0x376c>
   14bb4:	ldr	r3, [sp, #4]
   14bb8:	cmp	r3, #0
   14bbc:	moveq	r3, r4
   14bc0:	beq	14b70 <__assert_fail@plt+0x376c>
   14bc4:	mov	r4, r0
   14bc8:	b	14b5c <__assert_fail@plt+0x3758>
   14bcc:	ldr	r2, [r6, #20]
   14bd0:	movw	r4, #15388	; 0x3c1c
   14bd4:	movt	r4, #1
   14bd8:	mov	r3, #0
   14bdc:	ldr	r2, [r2, #24]
   14be0:	mov	r1, r4
   14be4:	mov	r0, r6
   14be8:	bl	13884 <__assert_fail@plt+0x2480>
   14bec:	mov	r5, r0
   14bf0:	uxtb	r8, r0
   14bf4:	ldr	r2, [r7, #20]
   14bf8:	mov	r3, #0
   14bfc:	ldr	r2, [r2, #24]
   14c00:	mov	r1, r4
   14c04:	mov	r0, r7
   14c08:	bl	13884 <__assert_fail@plt+0x2480>
   14c0c:	uxtb	r7, r0
   14c10:	cmp	r8, #0
   14c14:	movne	r5, r8
   14c18:	bne	14c2c <__assert_fail@plt+0x3828>
   14c1c:	ldr	r3, [sp]
   14c20:	cmp	r3, #0
   14c24:	ldrbne	r5, [r3]
   14c28:	moveq	r5, #0
   14c2c:	cmp	r7, #0
   14c30:	uxtbne	r6, r0
   14c34:	bne	14c48 <__assert_fail@plt+0x3844>
   14c38:	ldr	r3, [sp, #4]
   14c3c:	cmp	r3, #0
   14c40:	ldrbne	r6, [r3]
   14c44:	moveq	r6, #0
   14c48:	bl	1123c <__ctype_tolower_loc@plt>
   14c4c:	ldr	r3, [r0]
   14c50:	ldr	r4, [r3, r5, lsl #2]
   14c54:	ldr	r3, [r3, r6, lsl #2]
   14c58:	subs	r4, r4, r3
   14c5c:	bne	14b78 <__assert_fail@plt+0x3774>
   14c60:	subs	r4, r6, r5
   14c64:	bne	14b78 <__assert_fail@plt+0x3774>
   14c68:	adds	r4, r7, #0
   14c6c:	movne	r4, #1
   14c70:	cmp	r8, #0
   14c74:	rsbeq	r4, r4, #0
   14c78:	rsbne	r4, r4, #1
   14c7c:	cmp	r4, #0
   14c80:	bne	14b78 <__assert_fail@plt+0x3774>
   14c84:	cmp	r8, #0
   14c88:	bne	14b78 <__assert_fail@plt+0x3774>
   14c8c:	ldr	r0, [sp]
   14c90:	ldr	r1, [sp, #4]
   14c94:	adds	r4, r1, #0
   14c98:	movne	r4, #1
   14c9c:	cmp	r0, #0
   14ca0:	rsbeq	r4, r4, #0
   14ca4:	rsbne	r4, r4, #1
   14ca8:	cmp	r4, #0
   14cac:	bne	14b78 <__assert_fail@plt+0x3774>
   14cb0:	cmp	r0, #0
   14cb4:	beq	14b78 <__assert_fail@plt+0x3774>
   14cb8:	bl	111c4 <strcasecmp@plt>
   14cbc:	mov	r4, r0
   14cc0:	b	14b78 <__assert_fail@plt+0x3774>
   14cc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14cc8:	strd	r6, [sp, #8]
   14ccc:	strd	r8, [sp, #16]
   14cd0:	strd	sl, [sp, #24]
   14cd4:	str	lr, [sp, #32]
   14cd8:	sub	sp, sp, #52	; 0x34
   14cdc:	str	r0, [sp, #12]
   14ce0:	str	r1, [sp, #4]
   14ce4:	ldr	fp, [r0, #16]
   14ce8:	ldr	r4, [r0]
   14cec:	mov	r0, #16
   14cf0:	bl	18840 <argp_parse@@Base+0x1848>
   14cf4:	subs	sl, r0, #0
   14cf8:	beq	14d28 <__assert_fail@plt+0x3924>
   14cfc:	mov	r3, #0
   14d00:	str	r3, [sl, #4]
   14d04:	str	r3, [sl, #12]
   14d08:	cmp	r4, r3
   14d0c:	beq	14f34 <__assert_fail@plt+0x3b30>
   14d10:	ldr	r3, [r4, #12]
   14d14:	tst	r3, #4
   14d18:	bne	14d48 <__assert_fail@plt+0x3944>
   14d1c:	add	r5, r4, #24
   14d20:	mov	r6, #0
   14d24:	b	14d6c <__assert_fail@plt+0x3968>
   14d28:	movw	r3, #42724	; 0xa6e4
   14d2c:	movt	r3, #1
   14d30:	movw	r2, #450	; 0x1c2
   14d34:	movw	r1, #42960	; 0xa7d0
   14d38:	movt	r1, #1
   14d3c:	movw	r0, #42972	; 0xa7dc
   14d40:	movt	r0, #1
   14d44:	bl	11404 <__assert_fail@plt>
   14d48:	movw	r3, #42724	; 0xa6e4
   14d4c:	movt	r3, #1
   14d50:	mov	r2, #460	; 0x1cc
   14d54:	movw	r1, #42960	; 0xa7d0
   14d58:	movt	r1, #1
   14d5c:	movw	r0, #42976	; 0xa7e0
   14d60:	movt	r0, #1
   14d64:	bl	11404 <__assert_fail@plt>
   14d68:	add	r5, r5, #24
   14d6c:	mov	r3, r5
   14d70:	ldr	r2, [r5, #-20]	; 0xffffffec
   14d74:	cmp	r2, #0
   14d78:	bne	14d88 <__assert_fail@plt+0x3984>
   14d7c:	ldr	r2, [r5, #-24]	; 0xffffffe8
   14d80:	cmp	r2, #0
   14d84:	beq	14dd8 <__assert_fail@plt+0x39d4>
   14d88:	ldr	r2, [r3, #-12]
   14d8c:	tst	r2, #4
   14d90:	bne	14da0 <__assert_fail@plt+0x399c>
   14d94:	ldr	r2, [sl, #4]
   14d98:	add	r2, r2, #1
   14d9c:	str	r2, [sl, #4]
   14da0:	ldr	r2, [r3, #-12]
   14da4:	tst	r2, #8
   14da8:	bne	14d68 <__assert_fail@plt+0x3964>
   14dac:	ldr	r7, [r3, #-20]	; 0xffffffec
   14db0:	sub	r3, r7, #1
   14db4:	cmp	r3, #254	; 0xfe
   14db8:	bhi	14d68 <__assert_fail@plt+0x3964>
   14dbc:	bl	11260 <__ctype_b_loc@plt>
   14dc0:	ldr	r3, [r0]
   14dc4:	lsl	r7, r7, #1
   14dc8:	ldrh	r3, [r3, r7]
   14dcc:	tst	r3, #16384	; 0x4000
   14dd0:	addne	r6, r6, #1
   14dd4:	b	14d68 <__assert_fail@plt+0x3964>
   14dd8:	ldr	r2, [r5, #-8]
   14ddc:	cmp	r2, #0
   14de0:	bne	14d88 <__assert_fail@plt+0x3984>
   14de4:	ldr	r9, [r5, #-4]
   14de8:	cmp	r9, #0
   14dec:	bne	14d88 <__assert_fail@plt+0x3984>
   14df0:	ldr	r0, [sl, #4]
   14df4:	rsb	r0, r0, r0, lsl #3
   14df8:	lsl	r0, r0, #2
   14dfc:	bl	18840 <argp_parse@@Base+0x1848>
   14e00:	str	r0, [sl]
   14e04:	add	r0, r6, #1
   14e08:	bl	18840 <argp_parse@@Base+0x1848>
   14e0c:	mov	r5, r0
   14e10:	str	r0, [sl, #8]
   14e14:	ldr	r7, [sl]
   14e18:	cmp	r0, #0
   14e1c:	cmpne	r7, #0
   14e20:	beq	14e48 <__assert_fail@plt+0x3a44>
   14e24:	movw	r3, #37449	; 0x9249
   14e28:	movt	r3, #2340	; 0x924
   14e2c:	ldr	r2, [sl, #4]
   14e30:	cmp	r2, r3
   14e34:	bhi	14e68 <__assert_fail@plt+0x3a64>
   14e38:	add	r7, r7, #28
   14e3c:	str	fp, [sp, #8]
   14e40:	ldr	fp, [sp, #12]
   14e44:	b	14eb4 <__assert_fail@plt+0x3ab0>
   14e48:	movw	r3, #42724	; 0xa6e4
   14e4c:	movt	r3, #1
   14e50:	movw	r2, #474	; 0x1da
   14e54:	movw	r1, #42960	; 0xa7d0
   14e58:	movt	r1, #1
   14e5c:	movw	r0, #42992	; 0xa7f0
   14e60:	movt	r0, #1
   14e64:	bl	11404 <__assert_fail@plt>
   14e68:	movw	r3, #42724	; 0xa6e4
   14e6c:	movt	r3, #1
   14e70:	mov	r2, #476	; 0x1dc
   14e74:	movw	r1, #42960	; 0xa7d0
   14e78:	movt	r1, #1
   14e7c:	movw	r0, #43028	; 0xa814
   14e80:	movt	r0, #1
   14e84:	bl	11404 <__assert_fail@plt>
   14e88:	ldr	r3, [r4, #4]
   14e8c:	cmp	r3, #0
   14e90:	addeq	r9, r9, #1
   14e94:	b	14efc <__assert_fail@plt+0x3af8>
   14e98:	ldr	r3, [r4, #16]
   14e9c:	cmp	r3, #0
   14ea0:	bne	152d4 <__assert_fail@plt+0x3ed0>
   14ea4:	ldr	r3, [r4, #20]
   14ea8:	cmp	r3, #0
   14eac:	bne	152d4 <__assert_fail@plt+0x3ed0>
   14eb0:	add	r7, r7, #28
   14eb4:	ldr	r3, [r4, #4]
   14eb8:	cmp	r3, #0
   14ebc:	bne	14ecc <__assert_fail@plt+0x3ac8>
   14ec0:	ldr	r3, [r4]
   14ec4:	cmp	r3, #0
   14ec8:	beq	14f10 <__assert_fail@plt+0x3b0c>
   14ecc:	mov	r8, r7
   14ed0:	str	r4, [r7, #-28]	; 0xffffffe4
   14ed4:	mov	r3, #0
   14ed8:	str	r3, [r7, #-24]	; 0xffffffe8
   14edc:	str	r5, [r7, #-20]	; 0xffffffec
   14ee0:	ldr	r3, [r4, #20]
   14ee4:	cmp	r3, #0
   14ee8:	movne	r9, r3
   14eec:	bne	14efc <__assert_fail@plt+0x3af8>
   14ef0:	ldr	r3, [r4]
   14ef4:	cmp	r3, #0
   14ef8:	beq	14e88 <__assert_fail@plt+0x3a84>
   14efc:	str	r9, [r8, #-16]
   14f00:	ldr	r3, [sp, #4]
   14f04:	str	r3, [r8, #-12]
   14f08:	str	fp, [r8, #-8]
   14f0c:	b	152e0 <__assert_fail@plt+0x3edc>
   14f10:	ldr	r3, [r4, #16]
   14f14:	cmp	r3, #0
   14f18:	bne	14ecc <__assert_fail@plt+0x3ac8>
   14f1c:	ldr	r3, [r4, #20]
   14f20:	cmp	r3, #0
   14f24:	bne	14ecc <__assert_fail@plt+0x3ac8>
   14f28:	ldr	fp, [sp, #8]
   14f2c:	mov	r3, #0
   14f30:	strb	r3, [r5]
   14f34:	cmp	fp, #0
   14f38:	beq	15358 <__assert_fail@plt+0x3f54>
   14f3c:	ldr	r3, [fp]
   14f40:	cmp	r3, #0
   14f44:	beq	15358 <__assert_fail@plt+0x3f54>
   14f48:	movw	r3, #37449	; 0x9249
   14f4c:	movt	r3, #2340	; 0x924
   14f50:	str	r3, [sp, #32]
   14f54:	b	14fc8 <__assert_fail@plt+0x3bc4>
   14f58:	ldr	r1, [sp, #4]
   14f5c:	b	15040 <__assert_fail@plt+0x3c3c>
   14f60:	mov	r3, r2
   14f64:	ldr	r2, [r3, #24]
   14f68:	cmp	r2, #0
   14f6c:	bne	14f60 <__assert_fail@plt+0x3b5c>
   14f70:	add	r3, r3, #24
   14f74:	ldr	r2, [r5, #12]
   14f78:	str	r2, [r3]
   14f7c:	mov	r1, #0
   14f80:	str	r1, [r5, #12]
   14f84:	ldr	r3, [r5, #4]
   14f88:	cmp	r3, r1
   14f8c:	beq	14fb4 <__assert_fail@plt+0x3bb0>
   14f90:	ldr	r2, [sl, #4]
   14f94:	cmp	r2, r1
   14f98:	bne	15060 <__assert_fail@plt+0x3c5c>
   14f9c:	str	r3, [sl, #4]
   14fa0:	ldr	r3, [r5]
   14fa4:	str	r3, [sl]
   14fa8:	ldr	r3, [r5, #8]
   14fac:	str	r3, [sl, #8]
   14fb0:	str	r1, [r5, #4]
   14fb4:	mov	r0, r5
   14fb8:	bl	1369c <__assert_fail@plt+0x2298>
   14fbc:	ldr	r3, [fp, #16]!
   14fc0:	cmp	r3, #0
   14fc4:	beq	15358 <__assert_fail@plt+0x3f54>
   14fc8:	mov	r5, fp
   14fcc:	ldr	r6, [fp, #12]
   14fd0:	cmp	r6, #0
   14fd4:	bne	14fe4 <__assert_fail@plt+0x3be0>
   14fd8:	ldr	r3, [fp, #8]
   14fdc:	cmp	r3, #0
   14fe0:	beq	14f58 <__assert_fail@plt+0x3b54>
   14fe4:	ldr	r7, [r5, #8]
   14fe8:	ldr	r8, [sp, #12]
   14fec:	ldr	r4, [r8, #16]
   14ff0:	mov	r0, #28
   14ff4:	bl	18840 <argp_parse@@Base+0x1848>
   14ff8:	subs	r1, r0, #0
   14ffc:	beq	15040 <__assert_fail@plt+0x3c3c>
   15000:	str	r6, [r1, #8]
   15004:	str	r7, [r1]
   15008:	sub	r4, r5, r4
   1500c:	asr	r4, r4, #4
   15010:	str	r4, [r1, #4]
   15014:	ldr	r3, [sp, #4]
   15018:	str	r3, [r1, #12]
   1501c:	str	r8, [r1, #16]
   15020:	cmp	r3, #0
   15024:	ldrne	r3, [r3, #20]
   15028:	addne	r3, r3, #1
   1502c:	moveq	r3, #0
   15030:	str	r3, [r1, #20]
   15034:	ldr	r3, [sl, #12]
   15038:	str	r3, [r1, #24]
   1503c:	str	r1, [sl, #12]
   15040:	ldr	r0, [r5]
   15044:	bl	14cc4 <__assert_fail@plt+0x38c0>
   15048:	mov	r5, r0
   1504c:	ldr	r3, [sl, #12]
   15050:	cmp	r3, #0
   15054:	bne	14f64 <__assert_fail@plt+0x3b60>
   15058:	add	r3, sl, #12
   1505c:	b	14f74 <__assert_fail@plt+0x3b70>
   15060:	add	r3, r3, r2
   15064:	str	r3, [sp, #24]
   15068:	rsb	r0, r3, r3, lsl #3
   1506c:	lsl	r0, r0, #2
   15070:	bl	18840 <argp_parse@@Base+0x1848>
   15074:	mov	r4, r0
   15078:	str	r0, [sp, #20]
   1507c:	ldr	r0, [sl, #8]
   15080:	bl	11290 <strlen@plt>
   15084:	mov	r7, r0
   15088:	ldr	r0, [r5, #8]
   1508c:	bl	11290 <strlen@plt>
   15090:	add	r0, r7, r0
   15094:	add	r0, r0, #1
   15098:	bl	18840 <argp_parse@@Base+0x1848>
   1509c:	mov	r9, r0
   150a0:	cmp	r4, #0
   150a4:	cmpne	r0, #0
   150a8:	beq	15174 <__assert_fail@plt+0x3d70>
   150ac:	ldr	r3, [sp, #24]
   150b0:	ldr	r2, [sp, #32]
   150b4:	cmp	r3, r2
   150b8:	bhi	15190 <__assert_fail@plt+0x3d8c>
   150bc:	ldr	r1, [sl]
   150c0:	str	r1, [sp, #28]
   150c4:	ldr	r4, [sl, #4]
   150c8:	rsb	r8, r4, r4, lsl #3
   150cc:	lsl	r8, r8, #2
   150d0:	mov	r2, r8
   150d4:	ldr	r0, [sp, #20]
   150d8:	bl	11254 <mempcpy@plt>
   150dc:	ldr	r3, [r5, #4]
   150e0:	str	r3, [sp, #16]
   150e4:	rsb	r2, r3, r3, lsl #3
   150e8:	lsl	r2, r2, #2
   150ec:	ldr	r1, [r5]
   150f0:	bl	11158 <memcpy@plt>
   150f4:	ldr	r6, [sl, #8]
   150f8:	mov	r2, r7
   150fc:	mov	r1, r6
   15100:	mov	r0, r9
   15104:	bl	11158 <memcpy@plt>
   15108:	cmp	r4, #0
   1510c:	beq	151ac <__assert_fail@plt+0x3da8>
   15110:	ldr	r2, [sp, #20]
   15114:	ldr	r3, [r2, #8]
   15118:	sub	r3, r3, r6
   1511c:	add	r3, r9, r3
   15120:	str	r3, [r2, #8]
   15124:	add	r2, r2, #28
   15128:	subs	r4, r4, #1
   1512c:	bne	15114 <__assert_fail@plt+0x3d10>
   15130:	ldr	r3, [sp, #20]
   15134:	add	r4, r3, r8
   15138:	add	r3, r9, r7
   1513c:	str	r3, [sp, #8]
   15140:	ldr	r1, [r5, #8]
   15144:	ldr	r8, [sp, #16]
   15148:	cmp	r8, #0
   1514c:	beq	15250 <__assert_fail@plt+0x3e4c>
   15150:	add	r4, r4, #28
   15154:	sub	r2, r3, #1
   15158:	str	r2, [sp, #16]
   1515c:	str	r5, [sp, #36]	; 0x24
   15160:	str	fp, [sp, #40]	; 0x28
   15164:	mov	fp, r3
   15168:	str	sl, [sp, #44]	; 0x2c
   1516c:	mov	sl, r1
   15170:	b	151f8 <__assert_fail@plt+0x3df4>
   15174:	ldr	r3, [pc, #508]	; 15378 <__assert_fail@plt+0x3f74>
   15178:	movw	r2, #970	; 0x3ca
   1517c:	movw	r1, #42960	; 0xa7d0
   15180:	movt	r1, #1
   15184:	movw	r0, #43088	; 0xa850
   15188:	movt	r0, #1
   1518c:	bl	11404 <__assert_fail@plt>
   15190:	ldr	r3, [pc, #480]	; 15378 <__assert_fail@plt+0x3f74>
   15194:	mov	r2, #972	; 0x3cc
   15198:	movw	r1, #42960	; 0xa7d0
   1519c:	movt	r1, #1
   151a0:	movw	r0, #43116	; 0xa86c
   151a4:	movt	r0, #1
   151a8:	bl	11404 <__assert_fail@plt>
   151ac:	ldr	r4, [sp, #20]
   151b0:	b	15138 <__assert_fail@plt+0x3d34>
   151b4:	ldr	r2, [sp, #8]
   151b8:	cmp	r9, r2
   151bc:	bcs	15258 <__assert_fail@plt+0x3e54>
   151c0:	ldrb	r2, [r9]
   151c4:	cmp	r2, r3
   151c8:	beq	1525c <__assert_fail@plt+0x3e58>
   151cc:	mov	r2, r9
   151d0:	ldr	r1, [sp, #16]
   151d4:	cmp	r1, r2
   151d8:	beq	15258 <__assert_fail@plt+0x3e54>
   151dc:	ldrb	r1, [r2, #1]!
   151e0:	cmp	r1, r3
   151e4:	bne	151d0 <__assert_fail@plt+0x3dcc>
   151e8:	b	1525c <__assert_fail@plt+0x3e58>
   151ec:	add	r4, r4, #28
   151f0:	subs	r8, r8, #1
   151f4:	beq	15210 <__assert_fail@plt+0x3e0c>
   151f8:	str	fp, [r4, #-20]	; 0xffffffec
   151fc:	ldr	r5, [r4, #-24]	; 0xffffffe8
   15200:	ldr	r6, [r4, #-28]	; 0xffffffe4
   15204:	cmp	r5, #0
   15208:	bne	1527c <__assert_fail@plt+0x3e78>
   1520c:	b	151ec <__assert_fail@plt+0x3de8>
   15210:	ldr	r5, [sp, #36]	; 0x24
   15214:	mov	r3, fp
   15218:	ldr	fp, [sp, #40]	; 0x28
   1521c:	ldr	sl, [sp, #44]	; 0x2c
   15220:	mov	r2, #0
   15224:	strb	r2, [r3]
   15228:	ldr	r0, [sp, #28]
   1522c:	bl	17cd0 <argp_parse@@Base+0xcd8>
   15230:	ldr	r0, [sl, #8]
   15234:	bl	17cd0 <argp_parse@@Base+0xcd8>
   15238:	ldr	r3, [sp, #20]
   1523c:	str	r3, [sl]
   15240:	ldr	r3, [sp, #24]
   15244:	str	r3, [sl, #4]
   15248:	str	r9, [sl, #8]
   1524c:	b	14fb4 <__assert_fail@plt+0x3bb0>
   15250:	ldr	r3, [sp, #8]
   15254:	b	15220 <__assert_fail@plt+0x3e1c>
   15258:	strb	r3, [fp], #1
   1525c:	add	sl, sl, #1
   15260:	b	15270 <__assert_fail@plt+0x3e6c>
   15264:	ldrb	r3, [sl]
   15268:	cmp	r3, r7
   1526c:	beq	151b4 <__assert_fail@plt+0x3db0>
   15270:	add	r6, r6, #24
   15274:	subs	r5, r5, #1
   15278:	beq	151ec <__assert_fail@plt+0x3de8>
   1527c:	ldr	r3, [r6, #12]
   15280:	tst	r3, #8
   15284:	bne	15270 <__assert_fail@plt+0x3e6c>
   15288:	ldr	r7, [r6, #4]
   1528c:	sub	r3, r7, #1
   15290:	cmp	r3, #254	; 0xfe
   15294:	bhi	15270 <__assert_fail@plt+0x3e6c>
   15298:	bl	11260 <__ctype_b_loc@plt>
   1529c:	ldr	r2, [r0]
   152a0:	lsl	r3, r7, #1
   152a4:	ldrh	r3, [r2, r3]
   152a8:	tst	r3, #16384	; 0x4000
   152ac:	bne	15264 <__assert_fail@plt+0x3e60>
   152b0:	b	15270 <__assert_fail@plt+0x3e6c>
   152b4:	strb	r6, [r5], #1
   152b8:	add	r4, r4, #24
   152bc:	ldr	r3, [r4, #4]
   152c0:	cmp	r3, #0
   152c4:	bne	152d4 <__assert_fail@plt+0x3ed0>
   152c8:	ldr	r3, [r4]
   152cc:	cmp	r3, #0
   152d0:	beq	14e98 <__assert_fail@plt+0x3a94>
   152d4:	ldr	r3, [r4, #12]
   152d8:	tst	r3, #4
   152dc:	beq	14eb0 <__assert_fail@plt+0x3aac>
   152e0:	ldr	r3, [r8, #-24]	; 0xffffffe8
   152e4:	add	r3, r3, #1
   152e8:	str	r3, [r8, #-24]	; 0xffffffe8
   152ec:	ldr	r3, [r4, #12]
   152f0:	tst	r3, #8
   152f4:	bne	152b8 <__assert_fail@plt+0x3eb4>
   152f8:	ldr	r6, [r4, #4]
   152fc:	sub	r3, r6, #1
   15300:	cmp	r3, #254	; 0xfe
   15304:	bhi	152b8 <__assert_fail@plt+0x3eb4>
   15308:	bl	11260 <__ctype_b_loc@plt>
   1530c:	ldr	r2, [r0]
   15310:	lsl	r3, r6, #1
   15314:	ldrh	r3, [r2, r3]
   15318:	tst	r3, #16384	; 0x4000
   1531c:	beq	152b8 <__assert_fail@plt+0x3eb4>
   15320:	uxtb	r6, r6
   15324:	ldr	r3, [sl, #8]
   15328:	cmp	r3, r5
   1532c:	bcs	152b4 <__assert_fail@plt+0x3eb0>
   15330:	ldrb	r2, [r3]
   15334:	cmp	r2, r6
   15338:	beq	152b8 <__assert_fail@plt+0x3eb4>
   1533c:	sub	r2, r5, #1
   15340:	cmp	r3, r2
   15344:	beq	152b4 <__assert_fail@plt+0x3eb0>
   15348:	ldrb	r1, [r3, #1]!
   1534c:	cmp	r1, r6
   15350:	bne	15340 <__assert_fail@plt+0x3f3c>
   15354:	b	152b8 <__assert_fail@plt+0x3eb4>
   15358:	mov	r0, sl
   1535c:	add	sp, sp, #52	; 0x34
   15360:	ldrd	r4, [sp]
   15364:	ldrd	r6, [sp, #8]
   15368:	ldrd	r8, [sp, #16]
   1536c:	ldrd	sl, [sp, #24]
   15370:	add	sp, sp, #32
   15374:	pop	{pc}		; (ldr pc, [sp], #4)
   15378:	strdeq	sl, [r1], -r0

0001537c <argp_failure@@Base>:
   1537c:	push	{r3}		; (str r3, [sp, #-4]!)
   15380:	strd	r4, [sp, #-20]!	; 0xffffffec
   15384:	strd	r6, [sp, #8]
   15388:	str	lr, [sp, #16]
   1538c:	sub	sp, sp, #200	; 0xc8
   15390:	mov	r7, r1
   15394:	mov	r6, r2
   15398:	subs	r5, r0, #0
   1539c:	beq	154f8 <argp_failure@@Base+0x17c>
   153a0:	ldr	r3, [r5, #16]
   153a4:	tst	r3, #2
   153a8:	bne	154dc <argp_failure@@Base+0x160>
   153ac:	ldr	r4, [r5, #44]	; 0x2c
   153b0:	cmp	r4, #0
   153b4:	beq	154dc <argp_failure@@Base+0x160>
   153b8:	mov	r0, r4
   153bc:	bl	11380 <flockfile@plt>
   153c0:	ldr	r0, [r5, #40]	; 0x28
   153c4:	mov	r1, r4
   153c8:	bl	110bc <fputs_unlocked@plt>
   153cc:	ldr	r3, [sp, #220]	; 0xdc
   153d0:	cmp	r3, #0
   153d4:	beq	15430 <argp_failure@@Base+0xb4>
   153d8:	add	r3, sp, #224	; 0xe0
   153dc:	str	r3, [sp]
   153e0:	ldr	r3, [r4, #20]
   153e4:	ldr	r2, [r4, #24]
   153e8:	cmp	r3, r2
   153ec:	addcc	r2, r3, #1
   153f0:	strcc	r2, [r4, #20]
   153f4:	movcc	r2, #58	; 0x3a
   153f8:	strbcc	r2, [r3]
   153fc:	bcs	15524 <argp_failure@@Base+0x1a8>
   15400:	ldr	r3, [r4, #20]
   15404:	ldr	r2, [r4, #24]
   15408:	cmp	r3, r2
   1540c:	addcc	r2, r3, #1
   15410:	strcc	r2, [r4, #20]
   15414:	movcc	r2, #32
   15418:	strbcc	r2, [r3]
   1541c:	bcs	15534 <argp_failure@@Base+0x1b8>
   15420:	ldr	r2, [sp]
   15424:	ldr	r1, [sp, #220]	; 0xdc
   15428:	mov	r0, r4
   1542c:	bl	11344 <vfprintf@plt>
   15430:	cmp	r6, #0
   15434:	beq	15498 <argp_failure@@Base+0x11c>
   15438:	ldr	r3, [r4, #20]
   1543c:	ldr	r2, [r4, #24]
   15440:	cmp	r3, r2
   15444:	addcc	r2, r3, #1
   15448:	strcc	r2, [r4, #20]
   1544c:	movcc	r2, #58	; 0x3a
   15450:	strbcc	r2, [r3]
   15454:	bcs	15544 <argp_failure@@Base+0x1c8>
   15458:	ldr	r3, [r4, #20]
   1545c:	ldr	r2, [r4, #24]
   15460:	cmp	r3, r2
   15464:	addcc	r2, r3, #1
   15468:	strcc	r2, [r4, #20]
   1546c:	movcc	r2, #32
   15470:	strbcc	r2, [r3]
   15474:	bcs	15554 <argp_failure@@Base+0x1d8>
   15478:	mov	r2, #200	; 0xc8
   1547c:	mov	r1, sp
   15480:	mov	r0, r6
   15484:	bl	112cc <strerror_r@plt>
   15488:	cmp	r0, #0
   1548c:	beq	15564 <argp_failure@@Base+0x1e8>
   15490:	mov	r1, r4
   15494:	bl	110bc <fputs_unlocked@plt>
   15498:	ldr	r3, [r4, #20]
   1549c:	ldr	r2, [r4, #24]
   154a0:	cmp	r3, r2
   154a4:	addcc	r2, r3, #1
   154a8:	strcc	r2, [r4, #20]
   154ac:	movcc	r2, #10
   154b0:	strbcc	r2, [r3]
   154b4:	bcs	15580 <argp_failure@@Base+0x204>
   154b8:	mov	r0, r4
   154bc:	bl	111d0 <funlockfile@plt>
   154c0:	cmp	r7, #0
   154c4:	beq	154dc <argp_failure@@Base+0x160>
   154c8:	cmp	r5, #0
   154cc:	beq	15590 <argp_failure@@Base+0x214>
   154d0:	ldr	r3, [r5, #16]
   154d4:	tst	r3, #32
   154d8:	beq	15590 <argp_failure@@Base+0x214>
   154dc:	add	sp, sp, #200	; 0xc8
   154e0:	ldrd	r4, [sp]
   154e4:	ldrd	r6, [sp, #8]
   154e8:	ldr	lr, [sp, #16]
   154ec:	add	sp, sp, #20
   154f0:	add	sp, sp, #4
   154f4:	bx	lr
   154f8:	movw	r3, #50136	; 0xc3d8
   154fc:	movt	r3, #2
   15500:	ldr	r4, [r3]
   15504:	cmp	r4, #0
   15508:	beq	154dc <argp_failure@@Base+0x160>
   1550c:	mov	r0, r4
   15510:	bl	11380 <flockfile@plt>
   15514:	movw	r3, #50128	; 0xc3d0
   15518:	movt	r3, #2
   1551c:	ldr	r0, [r3]
   15520:	b	153c4 <argp_failure@@Base+0x48>
   15524:	mov	r1, #58	; 0x3a
   15528:	mov	r0, r4
   1552c:	bl	11314 <__overflow@plt>
   15530:	b	15400 <argp_failure@@Base+0x84>
   15534:	mov	r1, #32
   15538:	mov	r0, r4
   1553c:	bl	11314 <__overflow@plt>
   15540:	b	15420 <argp_failure@@Base+0xa4>
   15544:	mov	r1, #58	; 0x3a
   15548:	mov	r0, r4
   1554c:	bl	11314 <__overflow@plt>
   15550:	b	15458 <argp_failure@@Base+0xdc>
   15554:	mov	r1, #32
   15558:	mov	r0, r4
   1555c:	bl	11314 <__overflow@plt>
   15560:	b	15478 <argp_failure@@Base+0xfc>
   15564:	mov	r0, r6
   15568:	bl	11230 <strerror@plt>
   1556c:	movw	r3, #43168	; 0xa8a0
   15570:	movt	r3, #1
   15574:	cmp	r0, #0
   15578:	moveq	r0, r3
   1557c:	b	15490 <argp_failure@@Base+0x114>
   15580:	mov	r1, #10
   15584:	mov	r0, r4
   15588:	bl	11314 <__overflow@plt>
   1558c:	b	154b8 <argp_failure@@Base+0x13c>
   15590:	mov	r0, r7
   15594:	bl	11278 <exit@plt>
   15598:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1559c:	strd	r6, [sp, #8]
   155a0:	strd	r8, [sp, #16]
   155a4:	strd	sl, [sp, #24]
   155a8:	str	lr, [sp, #32]
   155ac:	add	fp, sp, #32
   155b0:	sub	sp, sp, #124	; 0x7c
   155b4:	str	r0, [fp, #-108]	; 0xffffff94
   155b8:	str	r1, [fp, #-104]	; 0xffffff98
   155bc:	str	r3, [fp, #-100]	; 0xffffff9c
   155c0:	subs	r3, r2, #0
   155c4:	str	r3, [fp, #-132]	; 0xffffff7c
   155c8:	beq	165b0 <argp_failure@@Base+0x1234>
   155cc:	mov	r0, r3
   155d0:	bl	11380 <flockfile@plt>
   155d4:	movw	r3, #50064	; 0xc390
   155d8:	movt	r3, #2
   155dc:	ldr	r9, [r3, #36]	; 0x24
   155e0:	cmp	r9, #0
   155e4:	beq	156bc <argp_failure@@Base+0x340>
   155e8:	movw	r2, #50064	; 0xc390
   155ec:	movt	r2, #2
   155f0:	mov	r3, #0
   155f4:	ldr	r2, [r2, #32]
   155f8:	mov	r1, r3
   155fc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15600:	bl	188d8 <argp_parse@@Base+0x18e0>
   15604:	subs	sl, r0, #0
   15608:	beq	15a98 <argp_failure@@Base+0x71c>
   1560c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15610:	tst	r3, #11
   15614:	moveq	r3, #0
   15618:	streq	r3, [fp, #-128]	; 0xffffff80
   1561c:	bne	15aa4 <argp_failure@@Base+0x728>
   15620:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15624:	tst	r3, #3
   15628:	moveq	r4, #0
   1562c:	bne	15b34 <argp_failure@@Base+0x7b8>
   15630:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15634:	tst	r3, #16
   15638:	bne	15d58 <argp_failure@@Base+0x9dc>
   1563c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15640:	tst	r3, #4
   15644:	bne	15d80 <argp_failure@@Base+0xa04>
   15648:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1564c:	tst	r3, #8
   15650:	beq	1653c <argp_failure@@Base+0x11c0>
   15654:	ldr	r3, [fp, #-128]	; 0xffffff80
   15658:	ldr	r3, [r3, #4]
   1565c:	cmp	r3, #0
   15660:	beq	1653c <argp_failure@@Base+0x11c0>
   15664:	cmp	r4, #0
   15668:	bne	15da0 <argp_failure@@Base+0xa24>
   1566c:	mov	r3, #0
   15670:	str	r3, [fp, #-88]	; 0xffffffa8
   15674:	str	r3, [fp, #-84]	; 0xffffffac
   15678:	str	r3, [fp, #-80]	; 0xffffffb0
   1567c:	ldr	r3, [fp, #-128]	; 0xffffff80
   15680:	ldr	r9, [r3]
   15684:	ldr	r3, [r3, #4]
   15688:	str	r3, [fp, #-116]	; 0xffffff8c
   1568c:	cmp	r3, #0
   15690:	beq	16538 <argp_failure@@Base+0x11bc>
   15694:	movw	r3, #50064	; 0xc390
   15698:	movt	r3, #2
   1569c:	str	r3, [fp, #-96]	; 0xffffffa0
   156a0:	movw	r3, #43500	; 0xa9ec
   156a4:	movt	r3, #1
   156a8:	str	r3, [fp, #-140]	; 0xffffff74
   156ac:	movw	r3, #44004	; 0xabe4
   156b0:	movt	r3, #1
   156b4:	str	r3, [fp, #-144]	; 0xffffff70
   156b8:	b	163b8 <argp_failure@@Base+0x103c>
   156bc:	movw	r0, #43192	; 0xa8b8
   156c0:	movt	r0, #1
   156c4:	bl	11200 <getenv@plt>
   156c8:	movw	r1, #50064	; 0xc390
   156cc:	movt	r1, #2
   156d0:	ldrd	r2, [r1]
   156d4:	strd	r2, [fp, #-76]	; 0xffffffb4
   156d8:	ldrd	r2, [r1, #8]
   156dc:	strd	r2, [fp, #-68]	; 0xffffffbc
   156e0:	ldrd	r2, [r1, #16]
   156e4:	strd	r2, [fp, #-60]	; 0xffffffc4
   156e8:	ldrd	r2, [r1, #24]
   156ec:	strd	r2, [fp, #-52]	; 0xffffffcc
   156f0:	ldrd	r2, [r1, #32]
   156f4:	strd	r2, [fp, #-44]	; 0xffffffd4
   156f8:	subs	r6, r0, #0
   156fc:	beq	155e8 <argp_failure@@Base+0x26c>
   15700:	movw	sl, #42724	; 0xa6e4
   15704:	movt	sl, #1
   15708:	add	r8, sl, #168	; 0xa8
   1570c:	b	15968 <argp_failure@@Base+0x5ec>
   15710:	cmp	r0, #45	; 0x2d
   15714:	cmpne	r0, #95	; 0x5f
   15718:	moveq	r3, #1
   1571c:	movne	r3, #0
   15720:	ubfx	r1, r1, #3, #1
   15724:	orrs	r3, r3, r1
   15728:	beq	16714 <argp_failure@@Base+0x1398>
   1572c:	mov	r4, r6
   15730:	ldrb	r3, [r4, #1]!
   15734:	lsl	r1, r3, #1
   15738:	ldrh	r1, [r2, r1]
   1573c:	ubfx	r1, r1, #3, #1
   15740:	cmp	r3, #95	; 0x5f
   15744:	cmpne	r3, #45	; 0x2d
   15748:	moveq	r3, #1
   1574c:	movne	r3, #0
   15750:	orrs	r3, r1, r3
   15754:	bne	15730 <argp_failure@@Base+0x3b4>
   15758:	sub	r7, r4, r6
   1575c:	ldrb	r3, [r4]
   15760:	lsl	r1, r3, #1
   15764:	ldrh	r1, [r2, r1]
   15768:	tst	r1, #8192	; 0x2000
   1576c:	beq	15784 <argp_failure@@Base+0x408>
   15770:	ldrb	r3, [r4, #1]!
   15774:	lsl	r1, r3, #1
   15778:	ldrh	r1, [r2, r1]
   1577c:	tst	r1, #8192	; 0x2000
   15780:	bne	15770 <argp_failure@@Base+0x3f4>
   15784:	cmp	r3, #44	; 0x2c
   15788:	cmpne	r3, #0
   1578c:	beq	157f0 <argp_failure@@Base+0x474>
   15790:	cmp	r3, #61	; 0x3d
   15794:	beq	157bc <argp_failure@@Base+0x440>
   15798:	ldrb	r3, [r4]
   1579c:	lsl	r3, r3, #1
   157a0:	ldrh	r3, [r2, r3]
   157a4:	tst	r3, #2048	; 0x800
   157a8:	streq	r9, [fp, #-96]	; 0xffffffa0
   157ac:	streq	r9, [fp, #-112]	; 0xffffff90
   157b0:	bne	15854 <argp_failure@@Base+0x4d8>
   157b4:	add	r5, sl, #24
   157b8:	b	158fc <argp_failure@@Base+0x580>
   157bc:	add	r1, r4, #1
   157c0:	ldrb	r3, [r4, #1]
   157c4:	lsl	r3, r3, #1
   157c8:	ldrh	r3, [r2, r3]
   157cc:	tst	r3, #8192	; 0x2000
   157d0:	beq	1584c <argp_failure@@Base+0x4d0>
   157d4:	ldrb	r3, [r1, #1]!
   157d8:	lsl	r3, r3, #1
   157dc:	ldrh	r3, [r2, r3]
   157e0:	tst	r3, #8192	; 0x2000
   157e4:	bne	157d4 <argp_failure@@Base+0x458>
   157e8:	mov	r4, r1
   157ec:	b	15798 <argp_failure@@Base+0x41c>
   157f0:	cmp	r0, #110	; 0x6e
   157f4:	movne	r3, #1
   157f8:	strne	r3, [fp, #-96]	; 0xffffffa0
   157fc:	strne	r3, [fp, #-112]	; 0xffffff90
   15800:	bne	157b4 <argp_failure@@Base+0x438>
   15804:	ldrb	r3, [r6, #1]
   15808:	cmp	r3, #111	; 0x6f
   1580c:	movne	r3, #1
   15810:	strne	r3, [fp, #-96]	; 0xffffffa0
   15814:	strne	r3, [fp, #-112]	; 0xffffff90
   15818:	bne	157b4 <argp_failure@@Base+0x438>
   1581c:	ldrb	r3, [r6, #2]
   15820:	cmp	r3, #45	; 0x2d
   15824:	movne	r3, #1
   15828:	strne	r3, [fp, #-96]	; 0xffffffa0
   1582c:	strne	r3, [fp, #-112]	; 0xffffff90
   15830:	bne	157b4 <argp_failure@@Base+0x438>
   15834:	add	r6, r6, #3
   15838:	sub	r7, r7, #3
   1583c:	str	r9, [fp, #-112]	; 0xffffff90
   15840:	mov	r3, #1
   15844:	str	r3, [fp, #-96]	; 0xffffffa0
   15848:	b	157b4 <argp_failure@@Base+0x438>
   1584c:	mov	r4, r1
   15850:	b	15798 <argp_failure@@Base+0x41c>
   15854:	mov	r2, #10
   15858:	mov	r1, #0
   1585c:	mov	r0, r4
   15860:	bl	110e0 <strtol@plt>
   15864:	str	r0, [fp, #-112]	; 0xffffff90
   15868:	ldr	r2, [r5]
   1586c:	ldrb	r3, [r4]
   15870:	lsl	r3, r3, #1
   15874:	ldrh	r3, [r2, r3]
   15878:	tst	r3, #2048	; 0x800
   1587c:	beq	15894 <argp_failure@@Base+0x518>
   15880:	ldrb	r3, [r4, #1]!
   15884:	lsl	r3, r3, #1
   15888:	ldrh	r3, [r2, r3]
   1588c:	tst	r3, #2048	; 0x800
   15890:	bne	15880 <argp_failure@@Base+0x504>
   15894:	ldrb	r3, [r4]
   15898:	lsl	r3, r3, #1
   1589c:	ldrh	r3, [r2, r3]
   158a0:	tst	r3, #8192	; 0x2000
   158a4:	beq	158c4 <argp_failure@@Base+0x548>
   158a8:	ldrb	r3, [r4, #1]!
   158ac:	lsl	r3, r3, #1
   158b0:	ldrh	r3, [r2, r3]
   158b4:	tst	r3, #8192	; 0x2000
   158b8:	bne	158a8 <argp_failure@@Base+0x52c>
   158bc:	str	r9, [fp, #-96]	; 0xffffffa0
   158c0:	b	157b4 <argp_failure@@Base+0x438>
   158c4:	str	r9, [fp, #-96]	; 0xffffffa0
   158c8:	b	157b4 <argp_failure@@Base+0x438>
   158cc:	str	r6, [sp, #4]
   158d0:	str	r7, [sp]
   158d4:	movw	r3, #43208	; 0xa8c8
   158d8:	movt	r3, #1
   158dc:	mov	r2, #0
   158e0:	mov	r1, r2
   158e4:	ldr	r0, [fp, #-104]	; 0xffffff98
   158e8:	bl	1537c <argp_failure@@Base>
   158ec:	b	15950 <argp_failure@@Base+0x5d4>
   158f0:	add	r5, r5, #16
   158f4:	cmp	r5, r8
   158f8:	beq	15a38 <argp_failure@@Base+0x6bc>
   158fc:	mov	r0, r5
   15900:	bl	11290 <strlen@plt>
   15904:	cmp	r0, r7
   15908:	bne	158f0 <argp_failure@@Base+0x574>
   1590c:	mov	r2, r7
   15910:	mov	r1, r5
   15914:	mov	r0, r6
   15918:	bl	113e0 <strncmp@plt>
   1591c:	cmp	r0, #0
   15920:	bne	158f0 <argp_failure@@Base+0x574>
   15924:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15928:	cmp	r3, #0
   1592c:	beq	1593c <argp_failure@@Base+0x5c0>
   15930:	ldrb	r3, [r5, #14]
   15934:	cmp	r3, #0
   15938:	beq	158cc <argp_failure@@Base+0x550>
   1593c:	ldrb	r3, [r5, #15]
   15940:	sub	r2, fp, #36	; 0x24
   15944:	add	r3, r2, r3
   15948:	ldr	r2, [fp, #-112]	; 0xffffff90
   1594c:	str	r2, [r3, #-40]	; 0xffffffd8
   15950:	cmp	r5, r8
   15954:	beq	15a38 <argp_failure@@Base+0x6bc>
   15958:	ldrb	r3, [r4]
   1595c:	cmp	r3, #44	; 0x2c
   15960:	addeq	r6, r4, #1
   15964:	movne	r6, r4
   15968:	ldrb	r3, [r6]
   1596c:	cmp	r3, #0
   15970:	beq	159c8 <argp_failure@@Base+0x64c>
   15974:	bl	11260 <__ctype_b_loc@plt>
   15978:	mov	r5, r0
   1597c:	ldr	r2, [r0]
   15980:	mov	r3, r6
   15984:	mov	r6, r3
   15988:	ldrb	r0, [r3], #1
   1598c:	lsl	r1, r0, #1
   15990:	ldrh	r1, [r2, r1]
   15994:	tst	r1, #8192	; 0x2000
   15998:	bne	15984 <argp_failure@@Base+0x608>
   1599c:	tst	r1, #1024	; 0x400
   159a0:	bne	15710 <argp_failure@@Base+0x394>
   159a4:	cmp	r0, #0
   159a8:	beq	15968 <argp_failure@@Base+0x5ec>
   159ac:	str	r6, [sp]
   159b0:	movw	r3, #43296	; 0xa920
   159b4:	movt	r3, #1
   159b8:	mov	r2, #0
   159bc:	mov	r1, r2
   159c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   159c4:	bl	1537c <argp_failure@@Base>
   159c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159cc:	ldr	r3, [pc, #3488]	; 16774 <argp_failure@@Base+0x13f8>
   159d0:	add	r1, r3, #144	; 0x90
   159d4:	add	r3, r3, #16
   159d8:	cmp	r3, r1
   159dc:	beq	15a5c <argp_failure@@Base+0x6e0>
   159e0:	ldrb	r2, [r3, #14]
   159e4:	cmp	r2, #0
   159e8:	bne	159d4 <argp_failure@@Base+0x658>
   159ec:	ldrb	r2, [r3, #15]
   159f0:	cmp	r2, #32
   159f4:	beq	159d4 <argp_failure@@Base+0x658>
   159f8:	sub	ip, fp, #36	; 0x24
   159fc:	add	r2, ip, r2
   15a00:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15a04:	cmp	r2, r0
   15a08:	blt	159d4 <argp_failure@@Base+0x658>
   15a0c:	str	r3, [sp, #4]
   15a10:	movw	r3, #43380	; 0xa974
   15a14:	movt	r3, #1
   15a18:	str	r3, [sp]
   15a1c:	movw	r3, #43328	; 0xa940
   15a20:	movt	r3, #1
   15a24:	mov	r2, #0
   15a28:	mov	r1, r2
   15a2c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a30:	bl	1537c <argp_failure@@Base>
   15a34:	b	155e8 <argp_failure@@Base+0x26c>
   15a38:	str	r6, [sp, #4]
   15a3c:	str	r7, [sp]
   15a40:	movw	r3, #43256	; 0xa8f8
   15a44:	movt	r3, #1
   15a48:	mov	r2, #0
   15a4c:	mov	r1, r2
   15a50:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a54:	bl	1537c <argp_failure@@Base>
   15a58:	b	15958 <argp_failure@@Base+0x5dc>
   15a5c:	movw	r1, #50064	; 0xc390
   15a60:	movt	r1, #2
   15a64:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15a68:	strd	r2, [r1]
   15a6c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15a70:	strd	r2, [r1, #8]
   15a74:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15a78:	strd	r2, [r1, #16]
   15a7c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   15a80:	strd	r2, [r1, #24]
   15a84:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15a88:	strd	r2, [r1, #32]
   15a8c:	mov	r3, #1
   15a90:	str	r3, [r1, #36]	; 0x24
   15a94:	b	155e8 <argp_failure@@Base+0x26c>
   15a98:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15a9c:	bl	111d0 <funlockfile@plt>
   15aa0:	b	165b0 <argp_failure@@Base+0x1234>
   15aa4:	mov	r1, #0
   15aa8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15aac:	bl	14cc4 <__assert_fail@plt+0x38c0>
   15ab0:	str	r0, [fp, #-128]	; 0xffffff80
   15ab4:	movw	r1, #43388	; 0xa97c
   15ab8:	movt	r1, #1
   15abc:	bl	13704 <__assert_fail@plt+0x2300>
   15ac0:	cmp	r0, #0
   15ac4:	mvnne	r3, #0
   15ac8:	strne	r3, [r0, #12]
   15acc:	movw	r1, #43396	; 0xa984
   15ad0:	movt	r1, #1
   15ad4:	ldr	r0, [fp, #-128]	; 0xffffff80
   15ad8:	bl	13704 <__assert_fail@plt+0x2300>
   15adc:	cmp	r0, #0
   15ae0:	mvnne	r3, #0
   15ae4:	strne	r3, [r0, #12]
   15ae8:	ldr	r0, [fp, #-128]	; 0xffffff80
   15aec:	ldr	r3, [r0, #4]
   15af0:	cmp	r3, #0
   15af4:	beq	15620 <argp_failure@@Base+0x2a4>
   15af8:	ldr	r2, [r0]
   15afc:	mov	r3, #0
   15b00:	str	r3, [r2, #24]
   15b04:	add	r3, r3, #1
   15b08:	add	r2, r2, #28
   15b0c:	ldr	r1, [r0, #4]
   15b10:	cmp	r3, r1
   15b14:	bcc	15b00 <argp_failure@@Base+0x784>
   15b18:	movw	r3, #18868	; 0x49b4
   15b1c:	movt	r3, #1
   15b20:	mov	r2, #28
   15b24:	ldr	r0, [fp, #-128]	; 0xffffff80
   15b28:	ldr	r0, [r0]
   15b2c:	bl	113a4 <qsort@plt>
   15b30:	b	15620 <argp_failure@@Base+0x2a4>
   15b34:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b38:	bl	137b8 <__assert_fail@plt+0x23b4>
   15b3c:	mov	r2, r0
   15b40:	add	r3, r0, #7
   15b44:	bic	r3, r3, #7
   15b48:	sub	sp, sp, r3
   15b4c:	add	r9, sp, #8
   15b50:	mov	r1, #0
   15b54:	mov	r0, r9
   15b58:	bl	112e4 <memset@plt>
   15b5c:	mov	r5, #1
   15b60:	movw	r4, #50064	; 0xc390
   15b64:	movt	r4, #2
   15b68:	movw	r3, #43420	; 0xa99c
   15b6c:	movt	r3, #1
   15b70:	str	r3, [fp, #-116]	; 0xffffff8c
   15b74:	movw	r8, #43412	; 0xa994
   15b78:	movt	r8, #1
   15b7c:	str	r9, [fp, #-96]	; 0xffffffa0
   15b80:	ldr	r9, [fp, #-128]	; 0xffffff80
   15b84:	str	r8, [fp, #-112]	; 0xffffff90
   15b88:	ldr	r8, [fp, #-100]	; 0xffffff9c
   15b8c:	b	15c3c <argp_failure@@Base+0x8c0>
   15b90:	mov	r0, sl
   15b94:	bl	18970 <argp_parse@@Base+0x1978>
   15b98:	b	15c58 <argp_failure@@Base+0x8dc>
   15b9c:	mov	r0, sl
   15ba0:	bl	18970 <argp_parse@@Base+0x1978>
   15ba4:	b	15ca4 <argp_failure@@Base+0x928>
   15ba8:	mov	r1, sl
   15bac:	mov	r0, r9
   15bb0:	bl	1398c <__assert_fail@plt+0x2588>
   15bb4:	orr	r8, r8, #2
   15bb8:	str	sl, [sp]
   15bbc:	mov	r3, #1
   15bc0:	sub	r2, fp, #76	; 0x4c
   15bc4:	ldr	r1, [fp, #-104]	; 0xffffff98
   15bc8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bcc:	bl	13df8 <__assert_fail@plt+0x29f4>
   15bd0:	mov	r6, r0
   15bd4:	ldr	r3, [sl, #28]
   15bd8:	ldr	r2, [sl, #24]
   15bdc:	sub	r3, r3, r2
   15be0:	ldr	r2, [sl, #16]
   15be4:	cmp	r3, r2
   15be8:	bhi	15d1c <argp_failure@@Base+0x9a0>
   15bec:	str	r7, [sl, #12]
   15bf0:	ldr	r3, [sl, #28]
   15bf4:	ldr	r2, [sl, #24]
   15bf8:	sub	r3, r3, r2
   15bfc:	ldr	r2, [sl, #16]
   15c00:	cmp	r3, r2
   15c04:	bhi	15d28 <argp_failure@@Base+0x9ac>
   15c08:	str	r5, [sl, #4]
   15c0c:	ldr	r2, [sl, #28]
   15c10:	ldr	r3, [sl, #32]
   15c14:	cmp	r2, r3
   15c18:	bcs	15d34 <argp_failure@@Base+0x9b8>
   15c1c:	ldr	r3, [sl, #28]
   15c20:	add	r2, r3, #1
   15c24:	str	r2, [sl, #28]
   15c28:	mov	r2, #10
   15c2c:	strb	r2, [r3]
   15c30:	mov	r5, #0
   15c34:	cmp	r6, r5
   15c38:	beq	15d4c <argp_failure@@Base+0x9d0>
   15c3c:	ldr	r6, [r4, #28]
   15c40:	ldr	r3, [sl, #28]
   15c44:	ldr	r2, [sl, #24]
   15c48:	sub	r3, r3, r2
   15c4c:	ldr	r2, [sl, #16]
   15c50:	cmp	r3, r2
   15c54:	bhi	15b90 <argp_failure@@Base+0x814>
   15c58:	ldr	r7, [sl, #12]
   15c5c:	str	r6, [sl, #12]
   15c60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c64:	str	r3, [fp, #-76]	; 0xffffffb4
   15c68:	cmp	r5, #0
   15c6c:	ldr	r3, [fp, #4]
   15c70:	movwne	r2, #43404	; 0xa98c
   15c74:	movtne	r2, #1
   15c78:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   15c7c:	ldr	r1, [fp, #-112]	; 0xffffff90
   15c80:	mov	r0, sl
   15c84:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   15c88:	ldr	r6, [r4, #28]
   15c8c:	ldr	r3, [sl, #28]
   15c90:	ldr	r2, [sl, #24]
   15c94:	sub	r3, r3, r2
   15c98:	ldr	r2, [sl, #16]
   15c9c:	cmp	r3, r2
   15ca0:	bhi	15b9c <argp_failure@@Base+0x820>
   15ca4:	ldr	r5, [sl, #4]
   15ca8:	str	r6, [sl, #4]
   15cac:	tst	r8, #2
   15cb0:	beq	15ba8 <argp_failure@@Base+0x82c>
   15cb4:	ldr	r3, [r9, #4]
   15cb8:	cmp	r3, #0
   15cbc:	beq	15bb8 <argp_failure@@Base+0x83c>
   15cc0:	ldr	r3, [sl, #28]
   15cc4:	add	r3, r3, #12
   15cc8:	ldr	r2, [sl, #32]
   15ccc:	cmp	r2, r3
   15cd0:	bcs	15ce8 <argp_failure@@Base+0x96c>
   15cd4:	mov	r1, #12
   15cd8:	mov	r0, sl
   15cdc:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   15ce0:	cmp	r0, #0
   15ce4:	beq	15bb8 <argp_failure@@Base+0x83c>
   15ce8:	ldr	r2, [sl, #28]
   15cec:	movw	r3, #43428	; 0xa9a4
   15cf0:	movt	r3, #1
   15cf4:	ldr	r0, [r3]
   15cf8:	ldr	r1, [r3, #4]
   15cfc:	str	r0, [r2]
   15d00:	str	r1, [r2, #4]
   15d04:	ldr	r3, [r3, #8]
   15d08:	str	r3, [r2, #8]
   15d0c:	ldr	r3, [sl, #28]
   15d10:	add	r3, r3, #12
   15d14:	str	r3, [sl, #28]
   15d18:	b	15bb8 <argp_failure@@Base+0x83c>
   15d1c:	mov	r0, sl
   15d20:	bl	18970 <argp_parse@@Base+0x1978>
   15d24:	b	15bec <argp_failure@@Base+0x870>
   15d28:	mov	r0, sl
   15d2c:	bl	18970 <argp_parse@@Base+0x1978>
   15d30:	b	15c08 <argp_failure@@Base+0x88c>
   15d34:	mov	r1, #1
   15d38:	mov	r0, sl
   15d3c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   15d40:	cmp	r0, #0
   15d44:	bne	15c1c <argp_failure@@Base+0x8a0>
   15d48:	b	15c30 <argp_failure@@Base+0x8b4>
   15d4c:	str	r8, [fp, #-100]	; 0xffffff9c
   15d50:	mov	r4, #1
   15d54:	b	15630 <argp_failure@@Base+0x2b4>
   15d58:	str	sl, [sp, #4]
   15d5c:	mov	r3, #1
   15d60:	str	r3, [sp]
   15d64:	mov	r3, #0
   15d68:	mov	r2, r3
   15d6c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15d70:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d74:	bl	143a8 <__assert_fail@plt+0x2fa4>
   15d78:	orr	r4, r4, r0
   15d7c:	b	1563c <argp_failure@@Base+0x2c0>
   15d80:	ldr	r3, [fp, #4]
   15d84:	mov	r2, r3
   15d88:	movw	r1, #43444	; 0xa9b4
   15d8c:	movt	r1, #1
   15d90:	mov	r0, sl
   15d94:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   15d98:	mov	r4, #1
   15d9c:	b	15648 <argp_failure@@Base+0x2cc>
   15da0:	ldr	r2, [sl, #28]
   15da4:	ldr	r3, [sl, #32]
   15da8:	cmp	r2, r3
   15dac:	bcs	15dc8 <argp_failure@@Base+0xa4c>
   15db0:	ldr	r3, [sl, #28]
   15db4:	add	r2, r3, #1
   15db8:	str	r2, [sl, #28]
   15dbc:	mov	r2, #10
   15dc0:	strb	r2, [r3]
   15dc4:	b	1566c <argp_failure@@Base+0x2f0>
   15dc8:	mov	r1, #1
   15dcc:	mov	r0, sl
   15dd0:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   15dd4:	cmp	r0, #0
   15dd8:	bne	15db0 <argp_failure@@Base+0xa34>
   15ddc:	b	1566c <argp_failure@@Base+0x2f0>
   15de0:	mov	r0, sl
   15de4:	bl	18970 <argp_parse@@Base+0x1978>
   15de8:	b	163d8 <argp_failure@@Base+0x105c>
   15dec:	add	r3, r3, #24
   15df0:	subs	r2, r2, #1
   15df4:	beq	15e18 <argp_failure@@Base+0xa9c>
   15df8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15dfc:	cmp	r1, #0
   15e00:	beq	15dec <argp_failure@@Base+0xa70>
   15e04:	ldr	r1, [r3, #-12]
   15e08:	tst	r1, #2
   15e0c:	bne	15dec <argp_failure@@Base+0xa70>
   15e10:	mov	r3, #1
   15e14:	str	r3, [fp, #-112]	; 0xffffff90
   15e18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e1c:	ldr	r5, [r3, #8]
   15e20:	ldr	r3, [sl, #28]
   15e24:	ldr	r2, [sl, #24]
   15e28:	sub	r3, r3, r2
   15e2c:	ldr	r2, [sl, #16]
   15e30:	cmp	r3, r2
   15e34:	bhi	15e54 <argp_failure@@Base+0xad8>
   15e38:	str	r5, [sl, #12]
   15e3c:	ldr	r6, [r9, #4]
   15e40:	cmp	r6, #0
   15e44:	beq	15f54 <argp_failure@@Base+0xbd8>
   15e48:	mov	r5, r4
   15e4c:	str	r9, [fp, #-136]	; 0xffffff78
   15e50:	b	1673c <argp_failure@@Base+0x13c0>
   15e54:	mov	r0, sl
   15e58:	bl	18970 <argp_parse@@Base+0x1978>
   15e5c:	b	15e38 <argp_failure@@Base+0xabc>
   15e60:	tst	r9, #2
   15e64:	beq	15e70 <argp_failure@@Base+0xaf4>
   15e68:	add	r8, r8, #1
   15e6c:	b	16730 <argp_failure@@Base+0x13b4>
   15e70:	sub	r1, fp, #76	; 0x4c
   15e74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e78:	ldr	r0, [r3, #8]
   15e7c:	bl	14204 <__assert_fail@plt+0x2e00>
   15e80:	ldr	r2, [sl, #28]
   15e84:	ldr	r3, [sl, #32]
   15e88:	cmp	r2, r3
   15e8c:	bcs	15f0c <argp_failure@@Base+0xb90>
   15e90:	ldr	r3, [sl, #28]
   15e94:	add	r2, r3, #1
   15e98:	str	r2, [sl, #28]
   15e9c:	mov	r2, #45	; 0x2d
   15ea0:	strb	r2, [r3]
   15ea4:	ldrb	r7, [r8]
   15ea8:	ldr	r2, [sl, #28]
   15eac:	ldr	r3, [sl, #32]
   15eb0:	cmp	r2, r3
   15eb4:	bcs	15f24 <argp_failure@@Base+0xba8>
   15eb8:	ldr	r3, [sl, #28]
   15ebc:	add	r2, r3, #1
   15ec0:	str	r2, [sl, #28]
   15ec4:	strb	r7, [r3]
   15ec8:	ldr	r3, [fp, #-112]	; 0xffffff90
   15ecc:	cmp	r3, #0
   15ed0:	beq	15ee4 <argp_failure@@Base+0xb68>
   15ed4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ed8:	ldr	r3, [r3]
   15edc:	cmp	r3, #0
   15ee0:	beq	15f3c <argp_failure@@Base+0xbc0>
   15ee4:	ldr	r2, [r4, #8]
   15ee8:	cmp	r2, #0
   15eec:	beq	15e68 <argp_failure@@Base+0xaec>
   15ef0:	ldr	r3, [r4, #12]
   15ef4:	tst	r3, #1
   15ef8:	ldrne	r1, [fp, #-140]	; 0xffffff74
   15efc:	ldreq	r1, [fp, #-144]	; 0xffffff70
   15f00:	mov	r0, sl
   15f04:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   15f08:	b	15e68 <argp_failure@@Base+0xaec>
   15f0c:	mov	r1, #1
   15f10:	mov	r0, sl
   15f14:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   15f18:	cmp	r0, #0
   15f1c:	bne	15e90 <argp_failure@@Base+0xb14>
   15f20:	b	15ea4 <argp_failure@@Base+0xb28>
   15f24:	mov	r1, #1
   15f28:	mov	r0, sl
   15f2c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   15f30:	cmp	r0, #0
   15f34:	bne	15eb8 <argp_failure@@Base+0xb3c>
   15f38:	b	15ec8 <argp_failure@@Base+0xb4c>
   15f3c:	ldr	r3, [r4, #8]
   15f40:	cmp	r3, #0
   15f44:	movne	r3, #1
   15f48:	strne	r3, [fp, #-80]	; 0xffffffb0
   15f4c:	b	15e68 <argp_failure@@Base+0xaec>
   15f50:	ldr	r9, [fp, #-136]	; 0xffffff78
   15f54:	ldr	r3, [r4, #12]
   15f58:	tst	r3, #8
   15f5c:	beq	16034 <argp_failure@@Base+0xcb8>
   15f60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f64:	ldr	r5, [r3, #16]
   15f68:	ldr	r3, [sl, #28]
   15f6c:	ldr	r2, [sl, #24]
   15f70:	sub	r3, r3, r2
   15f74:	ldr	r2, [sl, #16]
   15f78:	cmp	r3, r2
   15f7c:	bhi	15f98 <argp_failure@@Base+0xc1c>
   15f80:	str	r5, [sl, #12]
   15f84:	ldr	r6, [r9, #4]
   15f88:	cmp	r6, #0
   15f8c:	beq	160fc <argp_failure@@Base+0xd80>
   15f90:	add	r5, r4, #24
   15f94:	b	15fcc <argp_failure@@Base+0xc50>
   15f98:	mov	r0, sl
   15f9c:	bl	18970 <argp_parse@@Base+0x1978>
   15fa0:	b	15f80 <argp_failure@@Base+0xc04>
   15fa4:	mov	r2, r8
   15fa8:	mov	r1, r7
   15fac:	ldr	r0, [sl, #28]
   15fb0:	bl	11158 <memcpy@plt>
   15fb4:	ldr	r3, [sl, #28]
   15fb8:	add	r8, r3, r8
   15fbc:	str	r8, [sl, #28]
   15fc0:	add	r5, r5, #24
   15fc4:	subs	r6, r6, #1
   15fc8:	beq	160fc <argp_failure@@Base+0xd80>
   15fcc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15fd0:	cmp	r3, #0
   15fd4:	beq	15fc0 <argp_failure@@Base+0xc44>
   15fd8:	ldr	r3, [r5, #-12]
   15fdc:	tst	r3, #2
   15fe0:	bne	15fc0 <argp_failure@@Base+0xc44>
   15fe4:	sub	r1, fp, #76	; 0x4c
   15fe8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15fec:	ldr	r0, [r3, #16]
   15ff0:	bl	14204 <__assert_fail@plt+0x2e00>
   15ff4:	ldr	r7, [r5, #-24]	; 0xffffffe8
   15ff8:	mov	r0, r7
   15ffc:	bl	11290 <strlen@plt>
   16000:	subs	r8, r0, #0
   16004:	beq	15fc0 <argp_failure@@Base+0xc44>
   16008:	ldr	r3, [sl, #28]
   1600c:	add	r3, r3, r8
   16010:	ldr	r2, [sl, #32]
   16014:	cmp	r2, r3
   16018:	bcs	15fa4 <argp_failure@@Base+0xc28>
   1601c:	mov	r1, r8
   16020:	mov	r0, sl
   16024:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16028:	cmp	r0, #0
   1602c:	beq	15fc0 <argp_failure@@Base+0xc44>
   16030:	b	15fa4 <argp_failure@@Base+0xc28>
   16034:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16038:	ldr	r5, [r3, #12]
   1603c:	ldr	r3, [sl, #28]
   16040:	ldr	r2, [sl, #24]
   16044:	sub	r3, r3, r2
   16048:	ldr	r2, [sl, #16]
   1604c:	cmp	r3, r2
   16050:	bhi	16080 <argp_failure@@Base+0xd04>
   16054:	str	r5, [sl, #12]
   16058:	ldr	r6, [r9, #4]
   1605c:	cmp	r6, #0
   16060:	beq	160fc <argp_failure@@Base+0xd80>
   16064:	add	r5, r4, #24
   16068:	movw	r8, #43508	; 0xa9f4
   1606c:	movt	r8, #1
   16070:	movw	r7, #43524	; 0xaa04
   16074:	movt	r7, #1
   16078:	str	r7, [fp, #-112]	; 0xffffff90
   1607c:	b	16098 <argp_failure@@Base+0xd1c>
   16080:	mov	r0, sl
   16084:	bl	18970 <argp_parse@@Base+0x1978>
   16088:	b	16054 <argp_failure@@Base+0xcd8>
   1608c:	add	r5, r5, #24
   16090:	subs	r6, r6, #1
   16094:	beq	160fc <argp_failure@@Base+0xd80>
   16098:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1609c:	cmp	r3, #0
   160a0:	beq	1608c <argp_failure@@Base+0xd10>
   160a4:	ldr	r3, [r5, #-12]
   160a8:	tst	r3, #2
   160ac:	bne	1608c <argp_failure@@Base+0xd10>
   160b0:	sub	r1, fp, #76	; 0x4c
   160b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   160b8:	ldr	r0, [r3, #12]
   160bc:	bl	14204 <__assert_fail@plt+0x2e00>
   160c0:	ldr	r2, [r5, #-24]	; 0xffffffe8
   160c4:	mov	r1, r8
   160c8:	mov	r0, sl
   160cc:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   160d0:	ldr	r2, [r4, #8]
   160d4:	cmp	r2, #0
   160d8:	beq	1608c <argp_failure@@Base+0xd10>
   160dc:	ldr	r3, [r4, #12]
   160e0:	tst	r3, #1
   160e4:	movwne	r1, #43516	; 0xa9fc
   160e8:	movtne	r1, #1
   160ec:	ldreq	r1, [fp, #-112]	; 0xffffff90
   160f0:	mov	r0, sl
   160f4:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   160f8:	b	1608c <argp_failure@@Base+0xd10>
   160fc:	ldr	r3, [sl, #28]
   16100:	ldr	r2, [sl, #24]
   16104:	sub	r3, r3, r2
   16108:	ldr	r2, [sl, #16]
   1610c:	cmp	r3, r2
   16110:	bhi	1617c <argp_failure@@Base+0xe00>
   16114:	mov	r3, #0
   16118:	str	r3, [sl, #4]
   1611c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16120:	cmp	r3, #0
   16124:	beq	16188 <argp_failure@@Base+0xe0c>
   16128:	ldr	r3, [r4, #12]
   1612c:	tst	r3, #8
   16130:	bne	1615c <argp_failure@@Base+0xde0>
   16134:	ldr	r5, [r4, #4]
   16138:	sub	r3, r5, #1
   1613c:	cmp	r3, #254	; 0xfe
   16140:	bhi	1615c <argp_failure@@Base+0xde0>
   16144:	bl	11260 <__ctype_b_loc@plt>
   16148:	ldr	r3, [r0]
   1614c:	lsl	r5, r5, #1
   16150:	ldrh	r3, [r3, r5]
   16154:	tst	r3, #16384	; 0x4000
   16158:	bne	16364 <argp_failure@@Base+0xfe8>
   1615c:	ldr	r3, [r4]
   16160:	cmp	r3, #0
   16164:	bne	16364 <argp_failure@@Base+0xfe8>
   16168:	sub	r2, fp, #76	; 0x4c
   1616c:	ldr	r1, [r9, #20]
   16170:	ldr	r0, [r4, #16]
   16174:	bl	13ffc <__assert_fail@plt+0x2bf8>
   16178:	b	16360 <argp_failure@@Base+0xfe4>
   1617c:	mov	r0, sl
   16180:	bl	18970 <argp_parse@@Base+0x1978>
   16184:	b	16114 <argp_failure@@Base+0xd98>
   16188:	ldr	r5, [r4, #16]
   1618c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16190:	ldr	r2, [r9, #20]
   16194:	ldr	r1, [r4, #4]
   16198:	mov	r0, r5
   1619c:	bl	13824 <__assert_fail@plt+0x2420>
   161a0:	subs	r4, r0, #0
   161a4:	beq	1631c <argp_failure@@Base+0xfa0>
   161a8:	ldrb	r3, [r4]
   161ac:	cmp	r3, #0
   161b0:	beq	16314 <argp_failure@@Base+0xf98>
   161b4:	ldr	r3, [sl, #28]
   161b8:	ldr	r2, [sl, #24]
   161bc:	sub	r3, r3, r2
   161c0:	ldr	r2, [sl, #16]
   161c4:	cmp	r3, r2
   161c8:	bhi	16274 <argp_failure@@Base+0xef8>
   161cc:	ldr	r6, [sl, #20]
   161d0:	bic	r6, r6, r6, asr #31
   161d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161d8:	ldr	r7, [r3, #20]
   161dc:	str	r7, [sl, #4]
   161e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161e4:	ldr	r7, [r3, #20]
   161e8:	ldr	r3, [sl, #28]
   161ec:	ldr	r2, [sl, #24]
   161f0:	sub	r3, r3, r2
   161f4:	ldr	r2, [sl, #16]
   161f8:	cmp	r3, r2
   161fc:	bhi	162b0 <argp_failure@@Base+0xf34>
   16200:	str	r7, [sl, #12]
   16204:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16208:	ldr	r1, [r3, #20]
   1620c:	add	r3, r1, #3
   16210:	cmp	r6, r3
   16214:	bhi	162bc <argp_failure@@Base+0xf40>
   16218:	cmp	r6, r1
   1621c:	bcc	162fc <argp_failure@@Base+0xf80>
   16220:	ldr	r3, [sl, #28]
   16224:	add	r3, r3, #3
   16228:	ldr	r2, [sl, #32]
   1622c:	cmp	r2, r3
   16230:	bcs	16248 <argp_failure@@Base+0xecc>
   16234:	mov	r1, #3
   16238:	mov	r0, sl
   1623c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16240:	cmp	r0, #0
   16244:	beq	16304 <argp_failure@@Base+0xf88>
   16248:	ldr	r2, [sl, #28]
   1624c:	movw	r3, #43528	; 0xaa08
   16250:	movt	r3, #1
   16254:	ldrh	r1, [r3]
   16258:	strh	r1, [r2]
   1625c:	ldrb	r3, [r3, #2]
   16260:	strb	r3, [r2, #2]
   16264:	ldr	r3, [sl, #28]
   16268:	add	r3, r3, #3
   1626c:	str	r3, [sl, #28]
   16270:	b	16304 <argp_failure@@Base+0xf88>
   16274:	mov	r0, sl
   16278:	bl	18970 <argp_parse@@Base+0x1978>
   1627c:	ldr	r6, [sl, #20]
   16280:	bic	r6, r6, r6, asr #31
   16284:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16288:	ldr	r7, [r3, #20]
   1628c:	ldr	r3, [sl, #28]
   16290:	ldr	r2, [sl, #24]
   16294:	sub	r3, r3, r2
   16298:	ldr	r2, [sl, #16]
   1629c:	cmp	r3, r2
   162a0:	bls	161dc <argp_failure@@Base+0xe60>
   162a4:	mov	r0, sl
   162a8:	bl	18970 <argp_parse@@Base+0x1978>
   162ac:	b	161dc <argp_failure@@Base+0xe60>
   162b0:	mov	r0, sl
   162b4:	bl	18970 <argp_parse@@Base+0x1978>
   162b8:	b	16200 <argp_failure@@Base+0xe84>
   162bc:	ldr	r2, [sl, #28]
   162c0:	ldr	r3, [sl, #32]
   162c4:	cmp	r2, r3
   162c8:	bcs	162e4 <argp_failure@@Base+0xf68>
   162cc:	ldr	r3, [sl, #28]
   162d0:	add	r2, r3, #1
   162d4:	str	r2, [sl, #28]
   162d8:	mov	r2, #10
   162dc:	strb	r2, [r3]
   162e0:	b	16304 <argp_failure@@Base+0xf88>
   162e4:	mov	r1, #1
   162e8:	mov	r0, sl
   162ec:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   162f0:	cmp	r0, #0
   162f4:	bne	162cc <argp_failure@@Base+0xf50>
   162f8:	b	16304 <argp_failure@@Base+0xf88>
   162fc:	mov	r0, sl
   16300:	bl	13b74 <__assert_fail@plt+0x2770>
   16304:	mov	r0, r4
   16308:	bl	11290 <strlen@plt>
   1630c:	subs	r6, r0, #0
   16310:	bne	1643c <argp_failure@@Base+0x10c0>
   16314:	cmp	r5, r4
   16318:	bne	16484 <argp_failure@@Base+0x1108>
   1631c:	ldr	r3, [sl, #28]
   16320:	ldr	r2, [sl, #24]
   16324:	sub	r3, r3, r2
   16328:	ldr	r2, [sl, #16]
   1632c:	cmp	r3, r2
   16330:	bhi	16490 <argp_failure@@Base+0x1114>
   16334:	mov	r3, #0
   16338:	str	r3, [sl, #4]
   1633c:	ldr	r2, [sl, #28]
   16340:	ldr	r3, [sl, #32]
   16344:	cmp	r2, r3
   16348:	bcs	1649c <argp_failure@@Base+0x1120>
   1634c:	ldr	r3, [sl, #28]
   16350:	add	r2, r3, #1
   16354:	str	r2, [sl, #28]
   16358:	mov	r2, #10
   1635c:	strb	r2, [r3]
   16360:	str	r9, [fp, #-88]	; 0xffffffa8
   16364:	ldr	r3, [sl, #28]
   16368:	ldr	r2, [sl, #24]
   1636c:	sub	r3, r3, r2
   16370:	ldr	r2, [sl, #16]
   16374:	cmp	r3, r2
   16378:	bhi	164b4 <argp_failure@@Base+0x1138>
   1637c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16380:	str	r3, [sl, #4]
   16384:	ldr	r3, [sl, #28]
   16388:	ldr	r2, [sl, #24]
   1638c:	sub	r3, r3, r2
   16390:	ldr	r2, [sl, #16]
   16394:	cmp	r3, r2
   16398:	bhi	164c0 <argp_failure@@Base+0x1144>
   1639c:	ldr	r3, [fp, #-124]	; 0xffffff84
   163a0:	str	r3, [sl, #12]
   163a4:	add	r9, r9, #28
   163a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   163ac:	subs	r3, r3, #1
   163b0:	str	r3, [fp, #-116]	; 0xffffff8c
   163b4:	beq	164cc <argp_failure@@Base+0x1150>
   163b8:	ldr	r4, [r9]
   163bc:	ldr	r8, [r9, #8]
   163c0:	ldr	r3, [sl, #28]
   163c4:	ldr	r2, [sl, #24]
   163c8:	sub	r3, r3, r2
   163cc:	ldr	r2, [sl, #16]
   163d0:	cmp	r3, r2
   163d4:	bhi	15de0 <argp_failure@@Base+0xa64>
   163d8:	ldr	r3, [sl, #4]
   163dc:	str	r3, [fp, #-120]	; 0xffffff88
   163e0:	mov	r3, #0
   163e4:	str	r3, [sl, #4]
   163e8:	ldr	r3, [sl, #12]
   163ec:	str	r3, [fp, #-124]	; 0xffffff84
   163f0:	str	r9, [fp, #-76]	; 0xffffffb4
   163f4:	str	sl, [fp, #-72]	; 0xffffffb8
   163f8:	sub	r3, fp, #88	; 0x58
   163fc:	str	r3, [fp, #-68]	; 0xffffffbc
   16400:	mov	r3, #1
   16404:	str	r3, [fp, #-64]	; 0xffffffc0
   16408:	ldr	r3, [fp, #-104]	; 0xffffff98
   1640c:	str	r3, [fp, #-60]	; 0xffffffc4
   16410:	ldr	r3, [r4, #12]
   16414:	ands	r3, r3, #8
   16418:	str	r3, [fp, #-112]	; 0xffffff90
   1641c:	movne	r3, #0
   16420:	strne	r3, [fp, #-112]	; 0xffffff90
   16424:	bne	15e18 <argp_failure@@Base+0xa9c>
   16428:	ldr	r2, [r9, #4]
   1642c:	cmp	r2, #0
   16430:	beq	15e18 <argp_failure@@Base+0xa9c>
   16434:	add	r3, r4, #24
   16438:	b	15df8 <argp_failure@@Base+0xa7c>
   1643c:	ldr	r3, [sl, #28]
   16440:	add	r3, r3, r6
   16444:	ldr	r2, [sl, #32]
   16448:	cmp	r2, r3
   1644c:	bcs	16464 <argp_failure@@Base+0x10e8>
   16450:	mov	r1, r6
   16454:	mov	r0, sl
   16458:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   1645c:	cmp	r0, #0
   16460:	beq	16314 <argp_failure@@Base+0xf98>
   16464:	mov	r2, r6
   16468:	mov	r1, r4
   1646c:	ldr	r0, [sl, #28]
   16470:	bl	11158 <memcpy@plt>
   16474:	ldr	r3, [sl, #28]
   16478:	add	r6, r3, r6
   1647c:	str	r6, [sl, #28]
   16480:	b	16314 <argp_failure@@Base+0xf98>
   16484:	mov	r0, r4
   16488:	bl	17cd0 <argp_parse@@Base+0xcd8>
   1648c:	b	1631c <argp_failure@@Base+0xfa0>
   16490:	mov	r0, sl
   16494:	bl	18970 <argp_parse@@Base+0x1978>
   16498:	b	16334 <argp_failure@@Base+0xfb8>
   1649c:	mov	r1, #1
   164a0:	mov	r0, sl
   164a4:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   164a8:	cmp	r0, #0
   164ac:	bne	1634c <argp_failure@@Base+0xfd0>
   164b0:	b	16360 <argp_failure@@Base+0xfe4>
   164b4:	mov	r0, sl
   164b8:	bl	18970 <argp_parse@@Base+0x1978>
   164bc:	b	1637c <argp_failure@@Base+0x1000>
   164c0:	mov	r0, sl
   164c4:	bl	18970 <argp_parse@@Base+0x1978>
   164c8:	b	1639c <argp_failure@@Base+0x1020>
   164cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   164d0:	cmp	r3, #0
   164d4:	beq	16538 <argp_failure@@Base+0x11bc>
   164d8:	movw	r3, #50064	; 0xc390
   164dc:	movt	r3, #2
   164e0:	ldr	r3, [r3, #4]
   164e4:	cmp	r3, #0
   164e8:	beq	16538 <argp_failure@@Base+0x11bc>
   164ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   164f0:	cmp	r3, #0
   164f4:	ldrne	r2, [r3]
   164f8:	ldreq	r2, [fp, #-104]	; 0xffffff98
   164fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   16500:	mov	r1, #5
   16504:	movt	r1, #512	; 0x200
   16508:	movw	r0, #43532	; 0xaa0c
   1650c:	movt	r0, #1
   16510:	bl	13824 <__assert_fail@plt+0x2420>
   16514:	subs	r4, r0, #0
   16518:	beq	16538 <argp_failure@@Base+0x11bc>
   1651c:	ldrb	r3, [r4]
   16520:	cmp	r3, #0
   16524:	bne	165cc <argp_failure@@Base+0x1250>
   16528:	movw	r3, #43532	; 0xaa0c
   1652c:	movt	r3, #1
   16530:	cmp	r4, r3
   16534:	bne	166a0 <argp_failure@@Base+0x1324>
   16538:	mov	r4, #1
   1653c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16540:	tst	r3, #32
   16544:	bne	166ac <argp_failure@@Base+0x1330>
   16548:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1654c:	tst	r3, #64	; 0x40
   16550:	beq	1658c <argp_failure@@Base+0x1210>
   16554:	movw	r3, #50264	; 0xc458
   16558:	movt	r3, #2
   1655c:	ldr	r3, [r3]
   16560:	cmp	r3, #0
   16564:	beq	1658c <argp_failure@@Base+0x1210>
   16568:	cmp	r4, #0
   1656c:	bne	166d4 <argp_failure@@Base+0x1358>
   16570:	movw	r3, #50264	; 0xc458
   16574:	movt	r3, #2
   16578:	ldr	r2, [r3]
   1657c:	movw	r1, #43648	; 0xaa80
   16580:	movt	r1, #1
   16584:	mov	r0, sl
   16588:	bl	18fe8 <argp_parse@@Base+0x1ff0>
   1658c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16590:	bl	111d0 <funlockfile@plt>
   16594:	ldr	r3, [fp, #-128]	; 0xffffff80
   16598:	cmp	r3, #0
   1659c:	beq	165a8 <argp_failure@@Base+0x122c>
   165a0:	mov	r0, r3
   165a4:	bl	1369c <__assert_fail@plt+0x2298>
   165a8:	mov	r0, sl
   165ac:	bl	18e9c <argp_parse@@Base+0x1ea4>
   165b0:	sub	sp, fp, #32
   165b4:	ldrd	r4, [sp]
   165b8:	ldrd	r6, [sp, #8]
   165bc:	ldrd	r8, [sp, #16]
   165c0:	ldrd	sl, [sp, #24]
   165c4:	add	sp, sp, #32
   165c8:	pop	{pc}		; (ldr pc, [sp], #4)
   165cc:	ldr	r2, [sl, #28]
   165d0:	ldr	r3, [sl, #32]
   165d4:	cmp	r2, r3
   165d8:	bcs	16628 <argp_failure@@Base+0x12ac>
   165dc:	ldr	r3, [sl, #28]
   165e0:	add	r2, r3, #1
   165e4:	str	r2, [sl, #28]
   165e8:	mov	r2, #10
   165ec:	strb	r2, [r3]
   165f0:	mov	r0, r4
   165f4:	bl	11290 <strlen@plt>
   165f8:	subs	r5, r0, #0
   165fc:	bne	16640 <argp_failure@@Base+0x12c4>
   16600:	ldr	r2, [sl, #28]
   16604:	ldr	r3, [sl, #32]
   16608:	cmp	r2, r3
   1660c:	bcs	16688 <argp_failure@@Base+0x130c>
   16610:	ldr	r3, [sl, #28]
   16614:	add	r2, r3, #1
   16618:	str	r2, [sl, #28]
   1661c:	mov	r2, #10
   16620:	strb	r2, [r3]
   16624:	b	16528 <argp_failure@@Base+0x11ac>
   16628:	mov	r1, #1
   1662c:	mov	r0, sl
   16630:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16634:	cmp	r0, #0
   16638:	bne	165dc <argp_failure@@Base+0x1260>
   1663c:	b	165f0 <argp_failure@@Base+0x1274>
   16640:	ldr	r3, [sl, #28]
   16644:	add	r3, r3, r5
   16648:	ldr	r2, [sl, #32]
   1664c:	cmp	r2, r3
   16650:	bcs	16668 <argp_failure@@Base+0x12ec>
   16654:	mov	r1, r5
   16658:	mov	r0, sl
   1665c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16660:	cmp	r0, #0
   16664:	beq	16600 <argp_failure@@Base+0x1284>
   16668:	mov	r2, r5
   1666c:	mov	r1, r4
   16670:	ldr	r0, [sl, #28]
   16674:	bl	11158 <memcpy@plt>
   16678:	ldr	r3, [sl, #28]
   1667c:	add	r5, r3, r5
   16680:	str	r5, [sl, #28]
   16684:	b	16600 <argp_failure@@Base+0x1284>
   16688:	mov	r1, #1
   1668c:	mov	r0, sl
   16690:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16694:	cmp	r0, #0
   16698:	bne	16610 <argp_failure@@Base+0x1294>
   1669c:	b	16528 <argp_failure@@Base+0x11ac>
   166a0:	mov	r0, r4
   166a4:	bl	17cd0 <argp_parse@@Base+0xcd8>
   166a8:	b	16538 <argp_failure@@Base+0x11bc>
   166ac:	str	sl, [sp, #4]
   166b0:	mov	r3, #0
   166b4:	str	r3, [sp]
   166b8:	mov	r3, r4
   166bc:	mov	r2, #1
   166c0:	ldr	r1, [fp, #-104]	; 0xffffff98
   166c4:	ldr	r0, [fp, #-108]	; 0xffffff94
   166c8:	bl	143a8 <__assert_fail@plt+0x2fa4>
   166cc:	orr	r4, r4, r0
   166d0:	b	16548 <argp_failure@@Base+0x11cc>
   166d4:	ldr	r2, [sl, #28]
   166d8:	ldr	r3, [sl, #32]
   166dc:	cmp	r2, r3
   166e0:	bcs	166fc <argp_failure@@Base+0x1380>
   166e4:	ldr	r3, [sl, #28]
   166e8:	add	r2, r3, #1
   166ec:	str	r2, [sl, #28]
   166f0:	mov	r2, #10
   166f4:	strb	r2, [r3]
   166f8:	b	16570 <argp_failure@@Base+0x11f4>
   166fc:	mov	r1, #1
   16700:	mov	r0, sl
   16704:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   16708:	cmp	r0, #0
   1670c:	bne	166e4 <argp_failure@@Base+0x1368>
   16710:	b	16570 <argp_failure@@Base+0x11f4>
   16714:	ldrb	r3, [r6]
   16718:	mov	r4, r6
   1671c:	mov	r7, #0
   16720:	b	15784 <argp_failure@@Base+0x408>
   16724:	ldrb	r3, [r8]
   16728:	cmp	r3, r7
   1672c:	beq	15e60 <argp_failure@@Base+0xae4>
   16730:	add	r5, r5, #24
   16734:	subs	r6, r6, #1
   16738:	beq	15f50 <argp_failure@@Base+0xbd4>
   1673c:	ldr	r9, [r5, #12]
   16740:	tst	r9, #8
   16744:	bne	16730 <argp_failure@@Base+0x13b4>
   16748:	ldr	r7, [r5, #4]
   1674c:	sub	r3, r7, #1
   16750:	cmp	r3, #254	; 0xfe
   16754:	bhi	16730 <argp_failure@@Base+0x13b4>
   16758:	bl	11260 <__ctype_b_loc@plt>
   1675c:	ldr	r2, [r0]
   16760:	lsl	r3, r7, #1
   16764:	ldrh	r3, [r2, r3]
   16768:	tst	r3, #16384	; 0x4000
   1676c:	bne	16724 <argp_failure@@Base+0x13a8>
   16770:	b	16730 <argp_failure@@Base+0x13b4>
   16774:	strdeq	sl, [r1], -ip

00016778 <argp_help@@Base>:
   16778:	push	{lr}		; (str lr, [sp, #-4]!)
   1677c:	sub	sp, sp, #12
   16780:	str	r3, [sp]
   16784:	mov	r3, r2
   16788:	mov	r2, r1
   1678c:	mov	r1, #0
   16790:	bl	15598 <argp_failure@@Base+0x21c>
   16794:	add	sp, sp, #12
   16798:	pop	{pc}		; (ldr pc, [sp], #4)

0001679c <argp_state_help@@Base>:
   1679c:	strd	r4, [sp, #-12]!
   167a0:	str	lr, [sp, #8]
   167a4:	sub	sp, sp, #12
   167a8:	mov	r5, r2
   167ac:	subs	r4, r0, #0
   167b0:	beq	167d0 <argp_state_help@@Base+0x34>
   167b4:	ldr	r3, [r4, #16]
   167b8:	tst	r3, #2
   167bc:	beq	16810 <argp_state_help@@Base+0x74>
   167c0:	add	sp, sp, #12
   167c4:	ldrd	r4, [sp]
   167c8:	add	sp, sp, #8
   167cc:	pop	{pc}		; (ldr pc, [sp], #4)
   167d0:	cmp	r1, #0
   167d4:	beq	167c0 <argp_state_help@@Base+0x24>
   167d8:	movw	r3, #50128	; 0xc3d0
   167dc:	movt	r3, #2
   167e0:	ldr	r3, [r3]
   167e4:	str	r3, [sp]
   167e8:	mov	r3, r2
   167ec:	mov	r2, r1
   167f0:	mov	r1, #0
   167f4:	mov	r0, r1
   167f8:	bl	15598 <argp_failure@@Base+0x21c>
   167fc:	b	1684c <argp_state_help@@Base+0xb0>
   16800:	movw	r3, #50104	; 0xc3b8
   16804:	movt	r3, #2
   16808:	ldr	r0, [r3]
   1680c:	bl	11278 <exit@plt>
   16810:	cmp	r1, #0
   16814:	beq	167c0 <argp_state_help@@Base+0x24>
   16818:	ldr	r3, [r4, #16]
   1681c:	tst	r3, #64	; 0x40
   16820:	orrne	r5, r5, #128	; 0x80
   16824:	ldr	r3, [r4, #40]	; 0x28
   16828:	str	r3, [sp]
   1682c:	mov	r3, r5
   16830:	mov	r2, r1
   16834:	mov	r1, r4
   16838:	ldr	r0, [r4]
   1683c:	bl	15598 <argp_failure@@Base+0x21c>
   16840:	ldr	r3, [r4, #16]
   16844:	tst	r3, #32
   16848:	bne	167c0 <argp_state_help@@Base+0x24>
   1684c:	tst	r5, #256	; 0x100
   16850:	bne	16800 <argp_state_help@@Base+0x64>
   16854:	tst	r5, #512	; 0x200
   16858:	beq	167c0 <argp_state_help@@Base+0x24>
   1685c:	mov	r0, #0
   16860:	bl	11278 <exit@plt>

00016864 <argp_error@@Base>:
   16864:	push	{r1, r2, r3}
   16868:	strd	r4, [sp, #-12]!
   1686c:	str	lr, [sp, #8]
   16870:	sub	sp, sp, #8
   16874:	subs	r5, r0, #0
   16878:	beq	16950 <argp_error@@Base+0xec>
   1687c:	ldr	r3, [r5, #16]
   16880:	tst	r3, #2
   16884:	bne	16938 <argp_error@@Base+0xd4>
   16888:	ldr	r4, [r5, #44]	; 0x2c
   1688c:	cmp	r4, #0
   16890:	beq	16938 <argp_error@@Base+0xd4>
   16894:	mov	r0, r4
   16898:	bl	11380 <flockfile@plt>
   1689c:	add	r3, sp, #24
   168a0:	str	r3, [sp, #4]
   168a4:	ldr	r0, [r5, #40]	; 0x28
   168a8:	mov	r1, r4
   168ac:	bl	110bc <fputs_unlocked@plt>
   168b0:	ldr	r3, [r4, #20]
   168b4:	ldr	r2, [r4, #24]
   168b8:	cmp	r3, r2
   168bc:	addcc	r2, r3, #1
   168c0:	strcc	r2, [r4, #20]
   168c4:	movcc	r2, #58	; 0x3a
   168c8:	strbcc	r2, [r3]
   168cc:	bcs	16984 <argp_error@@Base+0x120>
   168d0:	ldr	r3, [r4, #20]
   168d4:	ldr	r2, [r4, #24]
   168d8:	cmp	r3, r2
   168dc:	addcc	r2, r3, #1
   168e0:	strcc	r2, [r4, #20]
   168e4:	movcc	r2, #32
   168e8:	strbcc	r2, [r3]
   168ec:	bcs	16994 <argp_error@@Base+0x130>
   168f0:	ldr	r2, [sp, #4]
   168f4:	ldr	r1, [sp, #20]
   168f8:	mov	r0, r4
   168fc:	bl	11344 <vfprintf@plt>
   16900:	ldr	r3, [r4, #20]
   16904:	ldr	r2, [r4, #24]
   16908:	cmp	r3, r2
   1690c:	addcc	r2, r3, #1
   16910:	strcc	r2, [r4, #20]
   16914:	movcc	r2, #10
   16918:	strbcc	r2, [r3]
   1691c:	bcs	169a4 <argp_error@@Base+0x140>
   16920:	mov	r2, #260	; 0x104
   16924:	mov	r1, r4
   16928:	mov	r0, r5
   1692c:	bl	1679c <argp_state_help@@Base>
   16930:	mov	r0, r4
   16934:	bl	111d0 <funlockfile@plt>
   16938:	add	sp, sp, #8
   1693c:	ldrd	r4, [sp]
   16940:	ldr	lr, [sp, #8]
   16944:	add	sp, sp, #12
   16948:	add	sp, sp, #12
   1694c:	bx	lr
   16950:	movw	r3, #50136	; 0xc3d8
   16954:	movt	r3, #2
   16958:	ldr	r4, [r3]
   1695c:	cmp	r4, #0
   16960:	beq	16938 <argp_error@@Base+0xd4>
   16964:	mov	r0, r4
   16968:	bl	11380 <flockfile@plt>
   1696c:	add	r3, sp, #24
   16970:	str	r3, [sp, #4]
   16974:	movw	r3, #50128	; 0xc3d0
   16978:	movt	r3, #2
   1697c:	ldr	r0, [r3]
   16980:	b	168a8 <argp_error@@Base+0x44>
   16984:	mov	r1, #58	; 0x3a
   16988:	mov	r0, r4
   1698c:	bl	11314 <__overflow@plt>
   16990:	b	168d0 <argp_error@@Base+0x6c>
   16994:	mov	r1, #32
   16998:	mov	r0, r4
   1699c:	bl	11314 <__overflow@plt>
   169a0:	b	168f0 <argp_error@@Base+0x8c>
   169a4:	mov	r1, #10
   169a8:	mov	r0, r4
   169ac:	bl	11314 <__overflow@plt>
   169b0:	b	16920 <argp_error@@Base+0xbc>
   169b4:	ldr	ip, [r0]
   169b8:	cmp	ip, #0
   169bc:	beq	16a24 <argp_error@@Base+0x1c0>
   169c0:	strd	r4, [sp, #-16]!
   169c4:	str	r6, [sp, #8]
   169c8:	str	lr, [sp, #12]
   169cc:	mov	ip, r2
   169d0:	mov	r5, r1
   169d4:	mov	r4, r0
   169d8:	ldr	r2, [r0, #32]
   169dc:	str	r2, [r1, #36]	; 0x24
   169e0:	ldr	r2, [r0, #24]
   169e4:	str	r2, [r1, #28]
   169e8:	ldr	r2, [r0, #28]
   169ec:	str	r2, [r1, #32]
   169f0:	ldr	r2, [r0, #12]
   169f4:	str	r2, [r1, #20]
   169f8:	ldr	r6, [r0]
   169fc:	mov	r2, r1
   16a00:	mov	r1, r3
   16a04:	mov	r0, ip
   16a08:	blx	r6
   16a0c:	ldr	r3, [r5, #36]	; 0x24
   16a10:	str	r3, [r4, #32]
   16a14:	ldrd	r4, [sp]
   16a18:	ldr	r6, [sp, #8]
   16a1c:	add	sp, sp, #12
   16a20:	pop	{pc}		; (ldr pc, [sp], #4)
   16a24:	mov	r0, #7
   16a28:	bx	lr
   16a2c:	strd	r4, [sp, #-16]!
   16a30:	str	r6, [sp, #8]
   16a34:	str	lr, [sp, #12]
   16a38:	ldr	r5, [r0, #16]
   16a3c:	ldr	r3, [r0]
   16a40:	cmp	r3, #0
   16a44:	beq	16a5c <argp_error@@Base+0x1f8>
   16a48:	ldr	r2, [r1, #8]
   16a4c:	add	r2, r2, #1
   16a50:	str	r2, [r1, #8]
   16a54:	mov	r2, #0
   16a58:	b	16a7c <argp_error@@Base+0x218>
   16a5c:	ldr	r3, [r0, #4]
   16a60:	cmp	r3, #0
   16a64:	beq	16acc <argp_error@@Base+0x268>
   16a68:	ldr	r3, [r1, #8]
   16a6c:	add	r3, r3, #1
   16a70:	str	r3, [r1, #8]
   16a74:	b	16acc <argp_error@@Base+0x268>
   16a78:	add	r2, r2, #1
   16a7c:	add	r3, r3, #24
   16a80:	ldr	r0, [r3, #-20]	; 0xffffffec
   16a84:	cmp	r0, #0
   16a88:	bne	16a78 <argp_error@@Base+0x214>
   16a8c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   16a90:	cmp	r0, #0
   16a94:	bne	16a78 <argp_error@@Base+0x214>
   16a98:	ldr	r0, [r3, #-8]
   16a9c:	cmp	r0, #0
   16aa0:	bne	16a78 <argp_error@@Base+0x214>
   16aa4:	ldr	r0, [r3, #-4]
   16aa8:	cmp	r0, #0
   16aac:	bne	16a78 <argp_error@@Base+0x214>
   16ab0:	add	r0, r2, r2, lsl #1
   16ab4:	ldr	r3, [r1]
   16ab8:	add	r3, r3, r0
   16abc:	str	r3, [r1]
   16ac0:	ldr	r3, [r1, #4]
   16ac4:	add	r2, r3, r2
   16ac8:	str	r2, [r1, #4]
   16acc:	cmp	r5, #0
   16ad0:	beq	16b04 <argp_error@@Base+0x2a0>
   16ad4:	ldr	r0, [r5]
   16ad8:	cmp	r0, #0
   16adc:	beq	16b04 <argp_error@@Base+0x2a0>
   16ae0:	mov	r4, r1
   16ae4:	mov	r1, r4
   16ae8:	bl	16a2c <argp_error@@Base+0x1c8>
   16aec:	ldr	r3, [r4, #12]
   16af0:	add	r3, r3, #1
   16af4:	str	r3, [r4, #12]
   16af8:	ldr	r0, [r5, #16]!
   16afc:	cmp	r0, #0
   16b00:	bne	16ae4 <argp_error@@Base+0x280>
   16b04:	ldrd	r4, [sp]
   16b08:	ldr	r6, [sp, #8]
   16b0c:	add	sp, sp, #12
   16b10:	pop	{pc}		; (ldr pc, [sp], #4)
   16b14:	cmp	r0, #86	; 0x56
   16b18:	beq	16b24 <argp_error@@Base+0x2c0>
   16b1c:	mov	r0, #7
   16b20:	bx	lr
   16b24:	str	r4, [sp, #-8]!
   16b28:	str	lr, [sp, #4]
   16b2c:	mov	r4, r2
   16b30:	movw	r3, #50192	; 0xc410
   16b34:	movt	r3, #2
   16b38:	ldr	r3, [r3]
   16b3c:	cmp	r3, #0
   16b40:	beq	16b6c <argp_error@@Base+0x308>
   16b44:	mov	r1, r2
   16b48:	ldr	r0, [r2, #48]	; 0x30
   16b4c:	blx	r3
   16b50:	ldr	r3, [r4, #16]
   16b54:	tst	r3, #32
   16b58:	beq	16bb0 <argp_error@@Base+0x34c>
   16b5c:	mov	r0, #0
   16b60:	ldr	r4, [sp]
   16b64:	add	sp, sp, #4
   16b68:	pop	{pc}		; (ldr pc, [sp], #4)
   16b6c:	movw	r3, #50268	; 0xc45c
   16b70:	movt	r3, #2
   16b74:	ldr	r2, [r3]
   16b78:	cmp	r2, #0
   16b7c:	beq	16b94 <argp_error@@Base+0x330>
   16b80:	movw	r1, #44344	; 0xad38
   16b84:	movt	r1, #1
   16b88:	ldr	r0, [r4, #48]	; 0x30
   16b8c:	bl	112a8 <fprintf@plt>
   16b90:	b	16b50 <argp_error@@Base+0x2ec>
   16b94:	movw	r2, #43948	; 0xabac
   16b98:	movt	r2, #1
   16b9c:	movw	r1, #40592	; 0x9e90
   16ba0:	movt	r1, #1
   16ba4:	mov	r0, r4
   16ba8:	bl	16864 <argp_error@@Base>
   16bac:	b	16b50 <argp_error@@Base+0x2ec>
   16bb0:	mov	r0, #0
   16bb4:	bl	11278 <exit@plt>
   16bb8:	strd	r4, [sp, #-16]!
   16bbc:	str	r6, [sp, #8]
   16bc0:	str	lr, [sp, #12]
   16bc4:	mov	r4, r2
   16bc8:	cmn	r0, #3
   16bcc:	beq	16c84 <argp_error@@Base+0x420>
   16bd0:	mov	r5, r1
   16bd4:	ble	16c10 <argp_error@@Base+0x3ac>
   16bd8:	cmn	r0, #2
   16bdc:	beq	16c9c <argp_error@@Base+0x438>
   16be0:	cmp	r0, #63	; 0x3f
   16be4:	movne	r0, #7
   16be8:	bne	16c00 <argp_error@@Base+0x39c>
   16bec:	movw	r2, #634	; 0x27a
   16bf0:	ldr	r1, [r4, #48]	; 0x30
   16bf4:	mov	r0, r4
   16bf8:	bl	1679c <argp_state_help@@Base>
   16bfc:	mov	r0, #0
   16c00:	ldrd	r4, [sp]
   16c04:	ldr	r6, [sp, #8]
   16c08:	add	sp, sp, #12
   16c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c10:	cmn	r0, #4
   16c14:	movne	r0, #7
   16c18:	bne	16c00 <argp_error@@Base+0x39c>
   16c1c:	movw	r0, #43984	; 0xabd0
   16c20:	movt	r0, #1
   16c24:	mov	r2, #10
   16c28:	mov	r1, #0
   16c2c:	cmp	r5, r1
   16c30:	movne	r0, r5
   16c34:	bl	110e0 <strtol@plt>
   16c38:	movw	r3, #50188	; 0xc40c
   16c3c:	movt	r3, #2
   16c40:	str	r0, [r3]
   16c44:	ldr	r2, [r3]
   16c48:	sub	r1, r2, #1
   16c4c:	str	r1, [r3]
   16c50:	cmp	r2, #0
   16c54:	ble	16ce4 <argp_error@@Base+0x480>
   16c58:	mov	r5, #1
   16c5c:	mov	r4, r3
   16c60:	mov	r0, r5
   16c64:	bl	11194 <sleep@plt>
   16c68:	ldr	r3, [r4]
   16c6c:	sub	r2, r3, #1
   16c70:	str	r2, [r4]
   16c74:	cmp	r3, #0
   16c78:	bgt	16c60 <argp_error@@Base+0x3fc>
   16c7c:	mov	r0, #0
   16c80:	b	16c00 <argp_error@@Base+0x39c>
   16c84:	movw	r2, #513	; 0x201
   16c88:	ldr	r1, [r4, #48]	; 0x30
   16c8c:	mov	r0, r4
   16c90:	bl	1679c <argp_state_help@@Base>
   16c94:	mov	r0, #0
   16c98:	b	16c00 <argp_error@@Base+0x39c>
   16c9c:	movw	r3, #50132	; 0xc3d4
   16ca0:	movt	r3, #2
   16ca4:	str	r1, [r3]
   16ca8:	mov	r0, r1
   16cac:	bl	17c0c <argp_parse@@Base+0xc14>
   16cb0:	str	r0, [r4, #40]	; 0x28
   16cb4:	movw	r3, #50128	; 0xc3d0
   16cb8:	movt	r3, #2
   16cbc:	str	r0, [r3]
   16cc0:	ldr	r3, [r4, #16]
   16cc4:	and	r3, r3, #3
   16cc8:	cmp	r3, #1
   16ccc:	movne	r0, #0
   16cd0:	bne	16c00 <argp_error@@Base+0x39c>
   16cd4:	ldr	r3, [r4, #8]
   16cd8:	str	r5, [r3]
   16cdc:	mov	r0, #0
   16ce0:	b	16c00 <argp_error@@Base+0x39c>
   16ce4:	mov	r0, #0
   16ce8:	b	16c00 <argp_error@@Base+0x39c>
   16cec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16cf0:	strd	r6, [sp, #8]
   16cf4:	strd	r8, [sp, #16]
   16cf8:	strd	sl, [sp, #24]
   16cfc:	str	lr, [sp, #32]
   16d00:	sub	sp, sp, #36	; 0x24
   16d04:	str	r0, [sp, #16]
   16d08:	str	r1, [sp, #20]
   16d0c:	str	r2, [sp, #24]
   16d10:	str	r3, [sp, #8]
   16d14:	ldr	r8, [sp, #72]	; 0x48
   16d18:	ldr	r6, [r0]
   16d1c:	ldr	sl, [r0, #16]
   16d20:	cmp	r6, #0
   16d24:	beq	16d40 <argp_error@@Base+0x4dc>
   16d28:	mov	r4, r6
   16d2c:	movw	r3, #36409	; 0x8e39
   16d30:	movt	r3, #14563	; 0x38e3
   16d34:	str	r3, [sp, #12]
   16d38:	str	sl, [sp, #28]
   16d3c:	b	16d84 <argp_error@@Base+0x520>
   16d40:	ldr	r3, [r0, #4]
   16d44:	cmp	r3, #0
   16d48:	bne	16f10 <argp_error@@Base+0x6ac>
   16d4c:	ldr	r0, [sp, #8]
   16d50:	str	r6, [sp, #8]
   16d54:	b	16f94 <argp_error@@Base+0x730>
   16d58:	ldr	r0, [r7, #16]!
   16d5c:	cmp	r0, #0
   16d60:	beq	16e64 <argp_error@@Base+0x600>
   16d64:	mov	r1, r9
   16d68:	bl	110d4 <strcmp@plt>
   16d6c:	cmp	r0, #0
   16d70:	bne	16d58 <argp_error@@Base+0x4f4>
   16d74:	sub	sl, r7, fp
   16d78:	cmp	sl, #0
   16d7c:	blt	16e64 <argp_error@@Base+0x600>
   16d80:	add	r4, r4, #24
   16d84:	ldr	r7, [r4, #4]
   16d88:	cmp	r7, #0
   16d8c:	bne	16d9c <argp_error@@Base+0x538>
   16d90:	ldr	r3, [r4]
   16d94:	cmp	r3, #0
   16d98:	beq	16ef4 <argp_error@@Base+0x690>
   16d9c:	ldr	r3, [r4, #12]
   16da0:	and	r2, r3, #4
   16da4:	cmp	r2, #0
   16da8:	moveq	r6, r4
   16dac:	ldr	r5, [r6, #12]
   16db0:	ands	r5, r5, #8
   16db4:	bne	16d80 <argp_error@@Base+0x51c>
   16db8:	tst	r3, #8
   16dbc:	bne	16e3c <argp_error@@Base+0x5d8>
   16dc0:	sub	r3, r7, #1
   16dc4:	cmp	r3, #254	; 0xfe
   16dc8:	bhi	16e3c <argp_error@@Base+0x5d8>
   16dcc:	bl	11260 <__ctype_b_loc@plt>
   16dd0:	ldr	r2, [r0]
   16dd4:	lsl	r3, r7, #1
   16dd8:	ldrh	r3, [r2, r3]
   16ddc:	tst	r3, #16384	; 0x4000
   16de0:	beq	16e3c <argp_error@@Base+0x5d8>
   16de4:	ldr	r3, [r8, #4]
   16de8:	add	r2, r3, #1
   16dec:	str	r2, [r8, #4]
   16df0:	strb	r7, [r3]
   16df4:	ldr	r3, [r6, #8]
   16df8:	cmp	r3, #0
   16dfc:	beq	16e30 <argp_error@@Base+0x5cc>
   16e00:	ldr	r3, [r8, #4]
   16e04:	add	r2, r3, #1
   16e08:	str	r2, [r8, #4]
   16e0c:	mov	r1, #58	; 0x3a
   16e10:	strb	r1, [r3]
   16e14:	ldr	r3, [r6, #12]
   16e18:	tst	r3, #1
   16e1c:	beq	16e30 <argp_error@@Base+0x5cc>
   16e20:	ldr	r3, [r8, #4]
   16e24:	add	r2, r3, #1
   16e28:	str	r2, [r8, #4]
   16e2c:	strb	r1, [r3]
   16e30:	ldr	r3, [r8, #4]
   16e34:	mov	r2, #0
   16e38:	strb	r2, [r3]
   16e3c:	ldr	r9, [r4]
   16e40:	cmp	r9, #0
   16e44:	beq	16d80 <argp_error@@Base+0x51c>
   16e48:	ldr	r3, [r8]
   16e4c:	ldr	fp, [r3, #8]
   16e50:	ldr	r0, [fp]
   16e54:	cmp	r0, #0
   16e58:	beq	16e64 <argp_error@@Base+0x600>
   16e5c:	mov	r7, fp
   16e60:	b	16d64 <argp_error@@Base+0x500>
   16e64:	ldr	r3, [r8, #8]
   16e68:	str	r9, [r3]
   16e6c:	ldr	r3, [r6, #8]
   16e70:	cmp	r3, #0
   16e74:	beq	16e8c <argp_error@@Base+0x628>
   16e78:	ldr	r3, [r6, #12]
   16e7c:	and	r3, r3, #1
   16e80:	cmp	r3, #0
   16e84:	movne	r5, #2
   16e88:	moveq	r5, #1
   16e8c:	ldr	r3, [r8, #8]
   16e90:	str	r5, [r3, #4]
   16e94:	ldr	r3, [r8, #8]
   16e98:	mov	r2, #0
   16e9c:	str	r2, [r3, #8]
   16ea0:	ldr	r3, [r4, #4]
   16ea4:	cmp	r3, r2
   16ea8:	ldreq	r3, [r6, #4]
   16eac:	bic	r2, r3, #-16777216	; 0xff000000
   16eb0:	ldr	r1, [r8, #8]
   16eb4:	ldr	r3, [r8]
   16eb8:	ldr	r3, [r3, #48]	; 0x30
   16ebc:	ldr	r0, [sp, #8]
   16ec0:	sub	r3, r0, r3
   16ec4:	asr	r3, r3, #2
   16ec8:	ldr	r0, [sp, #12]
   16ecc:	mul	r3, r0, r3
   16ed0:	add	r3, r3, #1
   16ed4:	add	r3, r2, r3, lsl #24
   16ed8:	str	r3, [r1, #12]
   16edc:	ldr	r3, [r8, #8]
   16ee0:	add	r2, r3, #16
   16ee4:	str	r2, [r8, #8]
   16ee8:	mov	r2, #0
   16eec:	str	r2, [r3, #16]
   16ef0:	b	16d80 <argp_error@@Base+0x51c>
   16ef4:	ldr	r3, [r4, #16]
   16ef8:	cmp	r3, #0
   16efc:	bne	16d9c <argp_error@@Base+0x538>
   16f00:	ldr	r3, [r4, #20]
   16f04:	cmp	r3, #0
   16f08:	bne	16d9c <argp_error@@Base+0x538>
   16f0c:	ldr	sl, [sp, #28]
   16f10:	ldr	r1, [sp, #16]
   16f14:	ldr	r3, [r1, #4]
   16f18:	ldr	r2, [sp, #8]
   16f1c:	str	r3, [r2]
   16f20:	str	r1, [r2, #4]
   16f24:	ldr	r3, [r8, #4]
   16f28:	str	r3, [r2, #8]
   16f2c:	mov	r3, #0
   16f30:	str	r3, [r2, #12]
   16f34:	ldr	r1, [sp, #20]
   16f38:	str	r1, [r2, #16]
   16f3c:	ldr	r1, [sp, #24]
   16f40:	str	r1, [r2, #20]
   16f44:	str	r3, [r2, #24]
   16f48:	str	r3, [r2, #32]
   16f4c:	str	r3, [r2, #28]
   16f50:	cmp	sl, r3
   16f54:	beq	16f8c <argp_error@@Base+0x728>
   16f58:	ldr	r3, [sl]
   16f5c:	cmp	r3, #0
   16f60:	beq	16ff0 <argp_error@@Base+0x78c>
   16f64:	mov	r3, #0
   16f68:	add	r3, r3, #1
   16f6c:	ldr	r2, [sl, r3, lsl #4]
   16f70:	cmp	r2, #0
   16f74:	bne	16f68 <argp_error@@Base+0x704>
   16f78:	ldr	r2, [r8, #12]
   16f7c:	ldr	r1, [sp, #8]
   16f80:	str	r2, [r1, #28]
   16f84:	add	r3, r2, r3, lsl #2
   16f88:	str	r3, [r8, #12]
   16f8c:	ldr	r3, [sp, #8]
   16f90:	add	r0, r3, #36	; 0x24
   16f94:	cmp	sl, #0
   16f98:	beq	16fd4 <argp_error@@Base+0x770>
   16f9c:	ldr	ip, [sl]
   16fa0:	cmp	ip, #0
   16fa4:	beq	16fd4 <argp_error@@Base+0x770>
   16fa8:	mov	r2, #0
   16fac:	add	r4, r2, #1
   16fb0:	str	r8, [sp]
   16fb4:	mov	r3, r0
   16fb8:	ldr	r1, [sp, #8]
   16fbc:	mov	r0, ip
   16fc0:	bl	16cec <argp_error@@Base+0x488>
   16fc4:	ldr	ip, [sl, r4, lsl #4]
   16fc8:	mov	r2, r4
   16fcc:	cmp	ip, #0
   16fd0:	bne	16fac <argp_error@@Base+0x748>
   16fd4:	add	sp, sp, #36	; 0x24
   16fd8:	ldrd	r4, [sp]
   16fdc:	ldrd	r6, [sp, #8]
   16fe0:	ldrd	r8, [sp, #16]
   16fe4:	ldrd	sl, [sp, #24]
   16fe8:	add	sp, sp, #32
   16fec:	pop	{pc}		; (ldr pc, [sp], #4)
   16ff0:	mov	r3, #0
   16ff4:	b	16f78 <argp_error@@Base+0x714>

00016ff8 <argp_parse@@Base>:
   16ff8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16ffc:	strd	r6, [sp, #8]
   17000:	strd	r8, [sp, #16]
   17004:	strd	sl, [sp, #24]
   17008:	str	lr, [sp, #32]
   1700c:	add	fp, sp, #32
   17010:	sub	sp, sp, #228	; 0xe4
   17014:	mov	r8, r0
   17018:	str	r1, [fp, #-240]	; 0xffffff10
   1701c:	str	r2, [fp, #-232]	; 0xffffff18
   17020:	mov	r7, r3
   17024:	tst	r3, #1
   17028:	bne	17054 <argp_parse@@Base+0x5c>
   1702c:	movw	r3, #50132	; 0xc3d4
   17030:	movt	r3, #2
   17034:	ldr	r3, [r3]
   17038:	cmp	r3, #0
   1703c:	beq	170ac <argp_parse@@Base+0xb4>
   17040:	movw	r3, #50128	; 0xc3d0
   17044:	movt	r3, #2
   17048:	ldr	r3, [r3]
   1704c:	cmp	r3, #0
   17050:	beq	170c0 <argp_parse@@Base+0xc8>
   17054:	tst	r7, #16
   17058:	beq	170dc <argp_parse@@Base+0xe4>
   1705c:	str	r7, [fp, #-244]	; 0xffffff0c
   17060:	mov	r3, #0
   17064:	str	r3, [fp, #-188]	; 0xffffff44
   17068:	str	r3, [fp, #-184]	; 0xffffff48
   1706c:	str	r3, [fp, #-180]	; 0xffffff4c
   17070:	str	r3, [fp, #-176]	; 0xffffff50
   17074:	str	r3, [fp, #-172]	; 0xffffff54
   17078:	str	r3, [fp, #-168]	; 0xffffff58
   1707c:	str	r3, [fp, #-164]	; 0xffffff5c
   17080:	ands	r2, r7, #4
   17084:	str	r2, [fp, #-248]	; 0xffffff08
   17088:	moveq	r2, #1
   1708c:	movne	r2, r3
   17090:	str	r2, [fp, #-228]	; 0xffffff1c
   17094:	str	r3, [fp, #-224]	; 0xffffff20
   17098:	str	r3, [fp, #-220]	; 0xffffff24
   1709c:	str	r3, [fp, #-216]	; 0xffffff28
   170a0:	cmp	r8, r3
   170a4:	beq	171a8 <argp_parse@@Base+0x1b0>
   170a8:	b	1719c <argp_parse@@Base+0x1a4>
   170ac:	ldr	r2, [r2]
   170b0:	movw	r3, #50132	; 0xc3d4
   170b4:	movt	r3, #2
   170b8:	str	r2, [r3]
   170bc:	b	17040 <argp_parse@@Base+0x48>
   170c0:	ldr	r3, [fp, #-232]	; 0xffffff18
   170c4:	ldr	r0, [r3]
   170c8:	bl	17c0c <argp_parse@@Base+0xc14>
   170cc:	movw	r3, #50128	; 0xc3d0
   170d0:	movt	r3, #2
   170d4:	str	r0, [r3]
   170d8:	b	17054 <argp_parse@@Base+0x5c>
   170dc:	sub	sp, sp, #64	; 0x40
   170e0:	add	r5, sp, #8
   170e4:	sub	sp, sp, #32
   170e8:	add	r4, sp, #8
   170ec:	mov	r1, #0
   170f0:	str	r1, [r4]
   170f4:	str	r1, [r4, #4]
   170f8:	str	r1, [r4, #8]
   170fc:	str	r1, [r4, #12]
   17100:	str	r1, [r4, #20]
   17104:	str	r1, [r4, #24]
   17108:	str	r5, [r4, #16]
   1710c:	mov	r2, #64	; 0x40
   17110:	mov	r0, r5
   17114:	bl	112e4 <memset@plt>
   17118:	cmp	r8, #0
   1711c:	mov	r0, r5
   17120:	strne	r8, [r0], #16
   17124:	movw	r3, #43668	; 0xaa94
   17128:	movt	r3, #1
   1712c:	str	r3, [r0]
   17130:	movw	r3, #50268	; 0xc45c
   17134:	movt	r3, #2
   17138:	ldr	r3, [r3]
   1713c:	cmp	r3, #0
   17140:	beq	17368 <argp_parse@@Base+0x370>
   17144:	add	r2, r0, #32
   17148:	ldr	r3, [pc, #2548]	; 17b44 <argp_parse@@Base+0xb4c>
   1714c:	str	r3, [r0, #16]
   17150:	mov	r3, #0
   17154:	str	r3, [r2]
   17158:	str	r7, [fp, #-244]	; 0xffffff0c
   1715c:	str	r3, [fp, #-188]	; 0xffffff44
   17160:	str	r3, [fp, #-184]	; 0xffffff48
   17164:	str	r3, [fp, #-180]	; 0xffffff4c
   17168:	str	r3, [fp, #-176]	; 0xffffff50
   1716c:	str	r3, [fp, #-172]	; 0xffffff54
   17170:	str	r3, [fp, #-168]	; 0xffffff58
   17174:	str	r3, [fp, #-164]	; 0xffffff5c
   17178:	ands	r2, r7, #4
   1717c:	str	r2, [fp, #-248]	; 0xffffff08
   17180:	moveq	r2, #1
   17184:	movne	r2, r3
   17188:	str	r2, [fp, #-228]	; 0xffffff1c
   1718c:	str	r3, [fp, #-224]	; 0xffffff20
   17190:	str	r3, [fp, #-220]	; 0xffffff24
   17194:	str	r3, [fp, #-216]	; 0xffffff28
   17198:	mov	r8, r4
   1719c:	sub	r1, fp, #228	; 0xe4
   171a0:	mov	r0, r8
   171a4:	bl	16a2c <argp_error@@Base+0x1c8>
   171a8:	ldr	r4, [fp, #-220]	; 0xffffff24
   171ac:	add	r4, r4, #1
   171b0:	add	r4, r4, r4, lsl #3
   171b4:	lsl	r4, r4, #2
   171b8:	ldr	r3, [fp, #-216]	; 0xffffff28
   171bc:	lsl	r3, r3, #2
   171c0:	str	r3, [fp, #-236]	; 0xffffff14
   171c4:	add	r9, r3, r4
   171c8:	ldr	r5, [fp, #-224]	; 0xffffff20
   171cc:	add	r5, r5, #1
   171d0:	add	r5, r9, r5, lsl #4
   171d4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   171d8:	add	r0, r0, #1
   171dc:	add	r0, r0, r5
   171e0:	bl	18840 <argp_parse@@Base+0x1848>
   171e4:	mov	r6, r0
   171e8:	str	r0, [fp, #-40]	; 0xffffffd8
   171ec:	cmp	r0, #0
   171f0:	moveq	r4, #12
   171f4:	beq	17964 <argp_parse@@Base+0x96c>
   171f8:	str	r0, [fp, #-112]	; 0xffffff90
   171fc:	add	r4, r0, r4
   17200:	str	r4, [fp, #-104]	; 0xffffff98
   17204:	add	r9, r0, r9
   17208:	str	r9, [fp, #-152]	; 0xffffff68
   1720c:	add	sl, r0, r5
   17210:	str	sl, [fp, #-156]	; 0xffffff64
   17214:	mov	r3, #1
   17218:	str	r3, [fp, #-196]	; 0xffffff3c
   1721c:	str	r3, [fp, #-192]	; 0xffffff40
   17220:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17224:	strd	r2, [fp, #-148]	; 0xffffff6c
   17228:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1722c:	strd	r2, [fp, #-140]	; 0xffffff74
   17230:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17234:	strd	r2, [fp, #-132]	; 0xffffff7c
   17238:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1723c:	strd	r2, [fp, #-124]	; 0xffffff84
   17240:	ldr	r3, [fp, #-164]	; 0xffffff5c
   17244:	str	r3, [fp, #-116]	; 0xffffff8c
   17248:	ldr	r2, [fp, #-236]	; 0xffffff14
   1724c:	mov	r1, #0
   17250:	mov	r0, r4
   17254:	bl	112e4 <memset@plt>
   17258:	sub	r3, fp, #160	; 0xa0
   1725c:	str	r3, [fp, #-212]	; 0xffffff2c
   17260:	str	sl, [fp, #-208]	; 0xffffff30
   17264:	str	r9, [fp, #-204]	; 0xffffff34
   17268:	str	r4, [fp, #-200]	; 0xffffff38
   1726c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   17270:	tst	r3, #8
   17274:	beq	17384 <argp_parse@@Base+0x38c>
   17278:	add	sl, sl, #1
   1727c:	str	sl, [fp, #-208]	; 0xffffff30
   17280:	mov	r3, #45	; 0x2d
   17284:	strb	r3, [r6, r5]
   17288:	mov	r3, #0
   1728c:	ldr	r2, [fp, #-208]	; 0xffffff30
   17290:	strb	r3, [r2]
   17294:	ldr	r2, [fp, #-204]	; 0xffffff34
   17298:	str	r3, [r2]
   1729c:	str	r8, [fp, #-160]	; 0xffffff60
   172a0:	cmp	r8, r3
   172a4:	beq	173a4 <argp_parse@@Base+0x3ac>
   172a8:	sub	r3, fp, #212	; 0xd4
   172ac:	str	r3, [sp]
   172b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   172b4:	mov	r2, #0
   172b8:	mov	r1, r2
   172bc:	mov	r0, r8
   172c0:	bl	16cec <argp_error@@Base+0x488>
   172c4:	str	r0, [fp, #-108]	; 0xffffff94
   172c8:	mov	r2, #0
   172cc:	mov	r3, #0
   172d0:	strd	r2, [fp, #-76]	; 0xffffffb4
   172d4:	strd	r2, [fp, #-68]	; 0xffffffbc
   172d8:	strd	r2, [fp, #-60]	; 0xffffffc4
   172dc:	ldr	r3, [fp, #-160]	; 0xffffff60
   172e0:	str	r3, [fp, #-96]	; 0xffffffa0
   172e4:	ldr	r3, [fp, #-240]	; 0xffffff10
   172e8:	str	r3, [fp, #-92]	; 0xffffffa4
   172ec:	ldr	r3, [fp, #-232]	; 0xffffff18
   172f0:	str	r3, [fp, #-88]	; 0xffffffa8
   172f4:	str	r7, [fp, #-80]	; 0xffffffb0
   172f8:	movw	r3, #50136	; 0xc3d8
   172fc:	movt	r3, #2
   17300:	ldr	r3, [r3]
   17304:	str	r3, [fp, #-52]	; 0xffffffcc
   17308:	movw	r3, #50140	; 0xc3dc
   1730c:	movt	r3, #2
   17310:	ldr	r3, [r3]
   17314:	str	r3, [fp, #-48]	; 0xffffffd0
   17318:	mov	r3, #0
   1731c:	str	r3, [fp, #-84]	; 0xffffffac
   17320:	sub	r3, fp, #160	; 0xa0
   17324:	str	r3, [fp, #-44]	; 0xffffffd4
   17328:	mov	r3, #1
   1732c:	str	r3, [fp, #-100]	; 0xffffff9c
   17330:	ldr	r3, [fp, #-112]	; 0xffffff90
   17334:	ldr	r2, [fp, #-108]	; 0xffffff94
   17338:	cmp	r3, r2
   1733c:	bcs	17450 <argp_parse@@Base+0x458>
   17340:	ldr	r2, [fp, #8]
   17344:	str	r2, [r3, #24]
   17348:	ldr	r5, [fp, #-112]	; 0xffffff90
   1734c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17350:	cmp	r5, r3
   17354:	bcs	17450 <argp_parse@@Base+0x458>
   17358:	mov	r6, #3
   1735c:	movt	r6, #256	; 0x100
   17360:	mov	r7, #0
   17364:	b	173ec <argp_parse@@Base+0x3f4>
   17368:	movw	r3, #50192	; 0xc410
   1736c:	movt	r3, #2
   17370:	ldr	r3, [r3]
   17374:	cmp	r3, #0
   17378:	addeq	r2, r0, #16
   1737c:	bne	17144 <argp_parse@@Base+0x14c>
   17380:	b	17150 <argp_parse@@Base+0x158>
   17384:	ldr	r3, [fp, #-248]	; 0xffffff08
   17388:	cmp	r3, #0
   1738c:	beq	17288 <argp_parse@@Base+0x290>
   17390:	add	sl, sl, #1
   17394:	str	sl, [fp, #-208]	; 0xffffff30
   17398:	mov	r3, #43	; 0x2b
   1739c:	strb	r3, [r6, r5]
   173a0:	b	17288 <argp_parse@@Base+0x290>
   173a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   173a8:	str	r3, [fp, #-108]	; 0xffffff94
   173ac:	b	172c8 <argp_parse@@Base+0x2d0>
   173b0:	ldr	r3, [r5]
   173b4:	cmp	r3, #0
   173b8:	beq	1740c <argp_parse@@Base+0x414>
   173bc:	mov	r3, r7
   173c0:	mov	r2, r6
   173c4:	sub	r1, fp, #96	; 0x60
   173c8:	mov	r0, r5
   173cc:	bl	169b4 <argp_error@@Base+0x150>
   173d0:	add	r5, r5, #36	; 0x24
   173d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   173d8:	cmp	r5, r3
   173dc:	bcs	17440 <argp_parse@@Base+0x448>
   173e0:	cmp	r0, #7
   173e4:	cmpne	r0, #0
   173e8:	bne	17438 <argp_parse@@Base+0x440>
   173ec:	ldr	r3, [r5, #16]
   173f0:	cmp	r3, #0
   173f4:	beq	173b0 <argp_parse@@Base+0x3b8>
   173f8:	ldr	r2, [r5, #20]
   173fc:	ldr	r3, [r3, #28]
   17400:	ldr	r3, [r3, r2, lsl #2]
   17404:	str	r3, [r5, #24]
   17408:	b	173b0 <argp_parse@@Base+0x3b8>
   1740c:	ldr	r3, [r5, #4]
   17410:	ldr	r3, [r3, #16]
   17414:	cmp	r3, #0
   17418:	beq	173bc <argp_parse@@Base+0x3c4>
   1741c:	ldr	r3, [r3]
   17420:	cmp	r3, #0
   17424:	beq	173bc <argp_parse@@Base+0x3c4>
   17428:	ldr	r3, [r5, #28]
   1742c:	ldr	r2, [r5, #24]
   17430:	str	r2, [r3]
   17434:	b	173bc <argp_parse@@Base+0x3c4>
   17438:	mov	r4, r0
   1743c:	b	17964 <argp_parse@@Base+0x96c>
   17440:	mov	r4, r0
   17444:	cmp	r0, #7
   17448:	cmpne	r0, #0
   1744c:	bne	17964 <argp_parse@@Base+0x96c>
   17450:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17454:	tst	r3, #2
   17458:	moveq	r3, #1
   1745c:	streq	r3, [fp, #-144]	; 0xffffff70
   17460:	beq	1748c <argp_parse@@Base+0x494>
   17464:	mov	r2, #0
   17468:	str	r2, [fp, #-144]	; 0xffffff70
   1746c:	tst	r3, #1
   17470:	beq	1748c <argp_parse@@Base+0x494>
   17474:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17478:	sub	r3, r3, #4
   1747c:	str	r3, [fp, #-88]	; 0xffffffa8
   17480:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17484:	add	r3, r3, #1
   17488:	str	r3, [fp, #-92]	; 0xffffffa4
   1748c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17490:	ldr	r2, [fp, #-232]	; 0xffffff18
   17494:	cmp	r2, r3
   17498:	beq	174c0 <argp_parse@@Base+0x4c8>
   1749c:	movw	r3, #50128	; 0xc3d0
   174a0:	movt	r3, #2
   174a4:	ldr	r3, [r3]
   174a8:	str	r3, [fp, #-56]	; 0xffffffc8
   174ac:	movw	sl, #43996	; 0xabdc
   174b0:	movt	sl, #1
   174b4:	mov	r9, #6
   174b8:	movt	r9, #256	; 0x100
   174bc:	b	17588 <argp_parse@@Base+0x590>
   174c0:	ldr	r0, [r2]
   174c4:	cmp	r0, #0
   174c8:	beq	1749c <argp_parse@@Base+0x4a4>
   174cc:	bl	17c0c <argp_parse@@Base+0xc14>
   174d0:	str	r0, [fp, #-56]	; 0xffffffc8
   174d4:	b	174ac <argp_parse@@Base+0x4b4>
   174d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   174dc:	str	r3, [fp, #-148]	; 0xffffff6c
   174e0:	mvn	r3, #0
   174e4:	str	r3, [fp, #-140]	; 0xffffff74
   174e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   174ec:	tst	r3, #64	; 0x40
   174f0:	beq	1760c <argp_parse@@Base+0x614>
   174f4:	sub	r3, fp, #148	; 0x94
   174f8:	str	r3, [sp, #4]
   174fc:	mov	r3, #0
   17500:	str	r3, [sp]
   17504:	ldr	r3, [fp, #-152]	; 0xffffff68
   17508:	ldr	r2, [fp, #-156]	; 0xffffff64
   1750c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17510:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17514:	bl	17db4 <argp_parse@@Base+0xdbc>
   17518:	mov	r5, r0
   1751c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   17520:	str	r4, [fp, #-84]	; 0xffffffac
   17524:	cmn	r5, #1
   17528:	beq	17638 <argp_parse@@Base+0x640>
   1752c:	cmp	r5, #63	; 0x3f
   17530:	beq	17668 <argp_parse@@Base+0x670>
   17534:	cmp	r5, #1
   17538:	beq	175e4 <argp_parse@@Base+0x5ec>
   1753c:	ldr	r4, [fp, #-136]	; 0xffffff78
   17540:	asrs	r3, r5, #24
   17544:	beq	17678 <argp_parse@@Base+0x680>
   17548:	ands	r1, r5, #8388608	; 0x800000
   1754c:	movne	r1, #-16777216	; 0xff000000
   17550:	bic	r2, r5, #-16777216	; 0xff000000
   17554:	add	r0, r3, r3, lsl #3
   17558:	lsl	r0, r0, #2
   1755c:	sub	r0, r0, #36	; 0x24
   17560:	mov	r3, r4
   17564:	orr	r2, r2, r1
   17568:	sub	r1, fp, #96	; 0x60
   1756c:	ldr	ip, [fp, #-112]	; 0xffffff90
   17570:	add	r0, ip, r0
   17574:	bl	169b4 <argp_error@@Base+0x150>
   17578:	cmp	r0, #7
   1757c:	beq	17840 <argp_parse@@Base+0x848>
   17580:	cmp	r0, #0
   17584:	bne	178c4 <argp_parse@@Base+0x8cc>
   17588:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1758c:	cmp	r3, #0
   17590:	beq	175a8 <argp_parse@@Base+0x5b0>
   17594:	ldr	r2, [fp, #-84]	; 0xffffffac
   17598:	cmp	r3, r2
   1759c:	movgt	r3, #0
   175a0:	strgt	r3, [fp, #-72]	; 0xffffffb8
   175a4:	ble	175b4 <argp_parse@@Base+0x5bc>
   175a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   175ac:	cmp	r3, #0
   175b0:	bne	174d8 <argp_parse@@Base+0x4e0>
   175b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   175b8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   175bc:	cmp	r3, r2
   175c0:	bge	17b34 <argp_parse@@Base+0xb3c>
   175c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   175c8:	tst	r2, #4
   175cc:	bne	17b3c <argp_parse@@Base+0xb44>
   175d0:	add	r2, r3, #1
   175d4:	str	r2, [fp, #-84]	; 0xffffffac
   175d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   175dc:	ldr	r3, [r2, r3, lsl #2]
   175e0:	str	r3, [fp, #-136]	; 0xffffff78
   175e4:	ldr	r7, [fp, #-136]	; 0xffffff78
   175e8:	ldr	r4, [fp, #-84]	; 0xffffffac
   175ec:	sub	r4, r4, #1
   175f0:	str	r4, [fp, #-84]	; 0xffffffac
   175f4:	ldr	r5, [fp, #-112]	; 0xffffff90
   175f8:	ldr	r3, [fp, #-108]	; 0xffffff94
   175fc:	cmp	r3, r5
   17600:	bls	178bc <argp_parse@@Base+0x8c4>
   17604:	mov	r6, #0
   17608:	b	17738 <argp_parse@@Base+0x740>
   1760c:	sub	r3, fp, #148	; 0x94
   17610:	str	r3, [sp, #4]
   17614:	mov	r3, #0
   17618:	str	r3, [sp]
   1761c:	ldr	r3, [fp, #-152]	; 0xffffff68
   17620:	ldr	r2, [fp, #-156]	; 0xffffff64
   17624:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17628:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1762c:	bl	17d58 <argp_parse@@Base+0xd60>
   17630:	mov	r5, r0
   17634:	b	1751c <argp_parse@@Base+0x524>
   17638:	mov	r3, #0
   1763c:	str	r3, [fp, #-100]	; 0xffffff9c
   17640:	cmp	r4, #1
   17644:	ble	175b4 <argp_parse@@Base+0x5bc>
   17648:	sub	r3, r4, #-1073741823	; 0xc0000001
   1764c:	mov	r1, sl
   17650:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17654:	ldr	r0, [r2, r3, lsl #2]
   17658:	bl	110d4 <strcmp@plt>
   1765c:	cmp	r0, #0
   17660:	streq	r4, [fp, #-72]	; 0xffffffb8
   17664:	b	175b4 <argp_parse@@Base+0x5bc>
   17668:	ldr	r3, [fp, #-140]	; 0xffffff74
   1766c:	cmn	r3, #1
   17670:	bne	17b2c <argp_parse@@Base+0xb34>
   17674:	ldr	r4, [fp, #-136]	; 0xffffff78
   17678:	mov	r1, r5
   1767c:	ldr	r0, [fp, #-156]	; 0xffffff64
   17680:	bl	1129c <strchr@plt>
   17684:	subs	r1, r0, #0
   17688:	beq	176d8 <argp_parse@@Base+0x6e0>
   1768c:	ldr	r0, [fp, #-112]	; 0xffffff90
   17690:	ldr	r2, [fp, #-108]	; 0xffffff94
   17694:	cmp	r2, r0
   17698:	bls	176d8 <argp_parse@@Base+0x6e0>
   1769c:	ldr	r3, [r0, #8]
   176a0:	cmp	r1, r3
   176a4:	bcc	176c0 <argp_parse@@Base+0x6c8>
   176a8:	add	r0, r0, #36	; 0x24
   176ac:	cmp	r2, r0
   176b0:	bls	176d8 <argp_parse@@Base+0x6e0>
   176b4:	ldr	r3, [r0, #8]
   176b8:	cmp	r1, r3
   176bc:	bcs	176a8 <argp_parse@@Base+0x6b0>
   176c0:	mov	r3, r4
   176c4:	mov	r2, r5
   176c8:	sub	r1, fp, #96	; 0x60
   176cc:	bl	169b4 <argp_error@@Base+0x150>
   176d0:	cmp	r0, #7
   176d4:	bne	17580 <argp_parse@@Base+0x588>
   176d8:	ldr	r3, [pc, #1128]	; 17b48 <argp_parse@@Base+0xb50>
   176dc:	mov	r2, r5
   176e0:	movw	r1, #44000	; 0xabe0
   176e4:	movt	r1, #1
   176e8:	sub	r0, fp, #96	; 0x60
   176ec:	bl	16864 <argp_error@@Base>
   176f0:	b	17778 <argp_parse@@Base+0x780>
   176f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   176f8:	sub	r3, r3, #1
   176fc:	str	r3, [fp, #-84]	; 0xffffffac
   17700:	mov	r3, r6
   17704:	mov	r2, r9
   17708:	sub	r1, fp, #96	; 0x60
   1770c:	mov	r0, r5
   17710:	bl	169b4 <argp_error@@Base+0x150>
   17714:	add	r5, r5, #36	; 0x24
   17718:	ldr	r2, [fp, #-108]	; 0xffffff94
   1771c:	cmp	r5, r2
   17720:	movcs	r3, #0
   17724:	movcc	r3, #1
   17728:	cmp	r0, #7
   1772c:	movne	r3, #0
   17730:	cmp	r3, #0
   17734:	beq	17808 <argp_parse@@Base+0x810>
   17738:	ldr	r3, [fp, #-84]	; 0xffffffac
   1773c:	add	r3, r3, #1
   17740:	str	r3, [fp, #-84]	; 0xffffffac
   17744:	mov	r3, r7
   17748:	mov	r2, r6
   1774c:	sub	r1, fp, #96	; 0x60
   17750:	mov	r0, r5
   17754:	bl	169b4 <argp_error@@Base+0x150>
   17758:	cmp	r0, #7
   1775c:	beq	176f4 <argp_parse@@Base+0x6fc>
   17760:	add	r5, r5, #36	; 0x24
   17764:	cmp	r0, #0
   17768:	beq	17818 <argp_parse@@Base+0x820>
   1776c:	cmp	r0, #7
   17770:	bne	17580 <argp_parse@@Base+0x588>
   17774:	mov	r5, #1
   17778:	add	r5, r5, #1
   1777c:	bics	r3, r5, #2
   17780:	moveq	r3, #1
   17784:	movne	r3, #0
   17788:	cmp	r3, #0
   1778c:	beq	17ad0 <argp_parse@@Base+0xad8>
   17790:	ldr	r3, [fp, #-84]	; 0xffffffac
   17794:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17798:	cmp	r3, r2
   1779c:	beq	17984 <argp_parse@@Base+0x98c>
   177a0:	ldr	r2, [fp, #4]
   177a4:	cmp	r2, #0
   177a8:	strne	r3, [r2]
   177ac:	beq	17aa8 <argp_parse@@Base+0xab0>
   177b0:	ldr	r5, [fp, #-108]	; 0xffffff94
   177b4:	sub	r5, r5, #36	; 0x24
   177b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   177bc:	cmp	r5, r3
   177c0:	bcc	17b10 <argp_parse@@Base+0xb18>
   177c4:	mov	r6, #4
   177c8:	movt	r6, #256	; 0x100
   177cc:	mov	r7, #0
   177d0:	mov	r3, r7
   177d4:	mov	r2, r6
   177d8:	sub	r1, fp, #96	; 0x60
   177dc:	mov	r0, r5
   177e0:	bl	169b4 <argp_error@@Base+0x150>
   177e4:	sub	r5, r5, #36	; 0x24
   177e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   177ec:	cmp	r5, r3
   177f0:	bcc	17ae8 <argp_parse@@Base+0xaf0>
   177f4:	cmp	r0, #7
   177f8:	cmpne	r0, #0
   177fc:	beq	177d0 <argp_parse@@Base+0x7d8>
   17800:	mov	r4, r0
   17804:	b	17af8 <argp_parse@@Base+0xb00>
   17808:	cmp	r0, #0
   1780c:	bne	1776c <argp_parse@@Base+0x774>
   17810:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17814:	str	r3, [fp, #-84]	; 0xffffffac
   17818:	ldr	r3, [fp, #-84]	; 0xffffffac
   1781c:	cmp	r4, r3
   17820:	movge	r3, #1
   17824:	strge	r3, [fp, #-100]	; 0xffffff9c
   17828:	bge	17588 <argp_parse@@Base+0x590>
   1782c:	sub	r4, r3, r4
   17830:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17834:	add	r4, r3, r4
   17838:	str	r4, [r5, #-24]	; 0xffffffe8
   1783c:	b	17588 <argp_parse@@Base+0x590>
   17840:	ldr	r3, [fp, #-152]	; 0xffffff68
   17844:	ldr	r2, [r3, #12]
   17848:	cmp	r2, r5
   1784c:	beq	17884 <argp_parse@@Base+0x88c>
   17850:	ldr	r2, [r3]
   17854:	cmp	r2, #0
   17858:	beq	178b0 <argp_parse@@Base+0x8b8>
   1785c:	add	r3, r3, #16
   17860:	ldr	r2, [r3, #12]
   17864:	cmp	r5, r2
   17868:	beq	17884 <argp_parse@@Base+0x88c>
   1786c:	ldr	r2, [r3]
   17870:	cmp	r2, #0
   17874:	bne	1785c <argp_parse@@Base+0x864>
   17878:	movw	r2, #43992	; 0xabd8
   1787c:	movt	r2, #1
   17880:	b	17898 <argp_parse@@Base+0x8a0>
   17884:	ldr	r2, [r3]
   17888:	movw	r3, #43992	; 0xabd8
   1788c:	movt	r3, #1
   17890:	cmp	r2, #0
   17894:	moveq	r2, r3
   17898:	ldr	r3, [pc, #680]	; 17b48 <argp_parse@@Base+0xb50>
   1789c:	movw	r1, #44008	; 0xabe8
   178a0:	movt	r1, #1
   178a4:	sub	r0, fp, #96	; 0x60
   178a8:	bl	16864 <argp_error@@Base>
   178ac:	b	17778 <argp_parse@@Base+0x780>
   178b0:	movw	r2, #43992	; 0xabd8
   178b4:	movt	r2, #1
   178b8:	b	17898 <argp_parse@@Base+0x8a0>
   178bc:	mov	r5, #1
   178c0:	b	17778 <argp_parse@@Base+0x780>
   178c4:	mov	r4, r0
   178c8:	cmp	r4, #7
   178cc:	beq	17ad0 <argp_parse@@Base+0xad8>
   178d0:	ldr	r5, [fp, #-112]	; 0xffffff90
   178d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   178d8:	cmp	r5, r3
   178dc:	bcs	17910 <argp_parse@@Base+0x918>
   178e0:	mov	r6, #5
   178e4:	movt	r6, #256	; 0x100
   178e8:	mov	r7, #0
   178ec:	mov	r3, r7
   178f0:	mov	r2, r6
   178f4:	sub	r1, fp, #96	; 0x60
   178f8:	mov	r0, r5
   178fc:	bl	169b4 <argp_error@@Base+0x150>
   17900:	add	r5, r5, #36	; 0x24
   17904:	ldr	r3, [fp, #-108]	; 0xffffff94
   17908:	cmp	r5, r3
   1790c:	bcc	178ec <argp_parse@@Base+0x8f4>
   17910:	ldr	r5, [fp, #-108]	; 0xffffff94
   17914:	sub	r5, r5, #36	; 0x24
   17918:	ldr	r3, [fp, #-112]	; 0xffffff90
   1791c:	cmp	r3, r5
   17920:	bhi	17954 <argp_parse@@Base+0x95c>
   17924:	mov	r6, #7
   17928:	movt	r6, #256	; 0x100
   1792c:	mov	r7, #0
   17930:	mov	r3, r7
   17934:	mov	r2, r6
   17938:	sub	r1, fp, #96	; 0x60
   1793c:	mov	r0, r5
   17940:	bl	169b4 <argp_error@@Base+0x150>
   17944:	sub	r5, r5, #36	; 0x24
   17948:	ldr	r3, [fp, #-112]	; 0xffffff90
   1794c:	cmp	r5, r3
   17950:	bcs	17930 <argp_parse@@Base+0x938>
   17954:	cmp	r4, #7
   17958:	moveq	r4, #22
   1795c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17960:	bl	17cd0 <argp_parse@@Base+0xcd8>
   17964:	mov	r0, r4
   17968:	sub	sp, fp, #32
   1796c:	ldrd	r4, [sp]
   17970:	ldrd	r6, [sp, #8]
   17974:	ldrd	r8, [sp, #16]
   17978:	ldrd	sl, [sp, #24]
   1797c:	add	sp, sp, #32
   17980:	pop	{pc}		; (ldr pc, [sp], #4)
   17984:	ldr	r6, [fp, #-112]	; 0xffffff90
   17988:	ldr	r5, [fp, #-108]	; 0xffffff94
   1798c:	cmp	r5, r6
   17990:	bls	17b18 <argp_parse@@Base+0xb20>
   17994:	mov	r4, #0
   17998:	mov	r7, #2
   1799c:	movt	r7, #256	; 0x100
   179a0:	mov	r8, r4
   179a4:	mov	r0, r4
   179a8:	b	179c8 <argp_parse@@Base+0x9d0>
   179ac:	add	r6, r6, #36	; 0x24
   179b0:	ldr	r5, [fp, #-108]	; 0xffffff94
   179b4:	cmp	r6, r5
   179b8:	bcs	17a04 <argp_parse@@Base+0xa0c>
   179bc:	cmp	r0, #7
   179c0:	cmpne	r0, #0
   179c4:	bne	179ec <argp_parse@@Base+0x9f4>
   179c8:	ldr	r3, [r6, #12]
   179cc:	cmp	r3, #0
   179d0:	bne	179ac <argp_parse@@Base+0x9b4>
   179d4:	mov	r3, r8
   179d8:	mov	r2, r7
   179dc:	sub	r1, fp, #96	; 0x60
   179e0:	mov	r0, r6
   179e4:	bl	169b4 <argp_error@@Base+0x150>
   179e8:	b	179ac <argp_parse@@Base+0x9b4>
   179ec:	mov	r4, r0
   179f0:	sub	r5, r5, #36	; 0x24
   179f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   179f8:	cmp	r3, r5
   179fc:	bls	17a18 <argp_parse@@Base+0xa20>
   17a00:	b	17a64 <argp_parse@@Base+0xa6c>
   17a04:	mov	r4, r0
   17a08:	sub	r5, r5, #36	; 0x24
   17a0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a10:	cmp	r3, r5
   17a14:	bhi	17a8c <argp_parse@@Base+0xa94>
   17a18:	cmp	r4, #7
   17a1c:	cmpne	r4, #0
   17a20:	bne	17a64 <argp_parse@@Base+0xa6c>
   17a24:	mov	r6, #1
   17a28:	movt	r6, #256	; 0x100
   17a2c:	mov	r7, #0
   17a30:	mov	r3, r7
   17a34:	mov	r2, r6
   17a38:	sub	r1, fp, #96	; 0x60
   17a3c:	mov	r0, r5
   17a40:	bl	169b4 <argp_error@@Base+0x150>
   17a44:	sub	r5, r5, #36	; 0x24
   17a48:	ldr	r3, [fp, #-112]	; 0xffffff90
   17a4c:	cmp	r5, r3
   17a50:	bcc	17a88 <argp_parse@@Base+0xa90>
   17a54:	cmp	r0, #7
   17a58:	cmpne	r0, #0
   17a5c:	beq	17a30 <argp_parse@@Base+0xa38>
   17a60:	mov	r4, r0
   17a64:	ldr	r3, [fp, #4]
   17a68:	cmp	r3, #0
   17a6c:	beq	17a7c <argp_parse@@Base+0xa84>
   17a70:	ldr	r3, [fp, #-84]	; 0xffffffac
   17a74:	ldr	r2, [fp, #4]
   17a78:	str	r3, [r2]
   17a7c:	cmp	r4, #0
   17a80:	beq	177b0 <argp_parse@@Base+0x7b8>
   17a84:	b	178c8 <argp_parse@@Base+0x8d0>
   17a88:	mov	r4, r0
   17a8c:	cmp	r4, #7
   17a90:	bne	17a64 <argp_parse@@Base+0xa6c>
   17a94:	ldr	r3, [fp, #4]
   17a98:	cmp	r3, #0
   17a9c:	movne	r4, #0
   17aa0:	bne	17a70 <argp_parse@@Base+0xa78>
   17aa4:	b	177b0 <argp_parse@@Base+0x7b8>
   17aa8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17aac:	tst	r3, #2
   17ab0:	bne	17ad0 <argp_parse@@Base+0xad8>
   17ab4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17ab8:	cmp	r0, #0
   17abc:	beq	17ad0 <argp_parse@@Base+0xad8>
   17ac0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ac4:	movw	r1, #44020	; 0xabf4
   17ac8:	movt	r1, #1
   17acc:	bl	112a8 <fprintf@plt>
   17ad0:	mov	r2, #260	; 0x104
   17ad4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17ad8:	sub	r0, fp, #96	; 0x60
   17adc:	bl	1679c <argp_state_help@@Base>
   17ae0:	mov	r4, #7
   17ae4:	b	178d0 <argp_parse@@Base+0x8d8>
   17ae8:	mov	r4, r0
   17aec:	cmp	r0, #7
   17af0:	movne	r4, r0
   17af4:	moveq	r4, #0
   17af8:	ldr	r5, [fp, #-108]	; 0xffffff94
   17afc:	sub	r5, r5, #36	; 0x24
   17b00:	ldr	r3, [fp, #-112]	; 0xffffff90
   17b04:	cmp	r3, r5
   17b08:	bls	17924 <argp_parse@@Base+0x92c>
   17b0c:	b	1795c <argp_parse@@Base+0x964>
   17b10:	mov	r4, #0
   17b14:	b	1795c <argp_parse@@Base+0x964>
   17b18:	sub	r5, r5, #36	; 0x24
   17b1c:	cmp	r5, r6
   17b20:	movcc	r4, #0
   17b24:	bcs	17a24 <argp_parse@@Base+0xa2c>
   17b28:	b	17a64 <argp_parse@@Base+0xa6c>
   17b2c:	mov	r3, #0
   17b30:	b	17788 <argp_parse@@Base+0x790>
   17b34:	mov	r3, #1
   17b38:	b	17788 <argp_parse@@Base+0x790>
   17b3c:	mov	r3, #1
   17b40:	b	17788 <argp_parse@@Base+0x790>
   17b44:			; <UNDEFINED> instruction: 0x0001aab0
   17b48:	andeq	sl, r1, ip, asr #21
   17b4c:	cmp	r1, #0
   17b50:	beq	17b9c <argp_parse@@Base+0xba4>
   17b54:	ldr	r2, [r1, #52]	; 0x34
   17b58:	ldr	r3, [r2, #48]	; 0x30
   17b5c:	ldr	r1, [r2, #52]	; 0x34
   17b60:	cmp	r3, r1
   17b64:	bcs	17ba4 <argp_parse@@Base+0xbac>
   17b68:	ldr	r2, [r3, #4]
   17b6c:	cmp	r0, r2
   17b70:	beq	17b8c <argp_parse@@Base+0xb94>
   17b74:	add	r3, r3, #36	; 0x24
   17b78:	cmp	r3, r1
   17b7c:	bcs	17b94 <argp_parse@@Base+0xb9c>
   17b80:	ldr	r2, [r3, #4]
   17b84:	cmp	r2, r0
   17b88:	bne	17b74 <argp_parse@@Base+0xb7c>
   17b8c:	ldr	r0, [r3, #24]
   17b90:	bx	lr
   17b94:	mov	r0, #0
   17b98:	bx	lr
   17b9c:	mov	r0, r1
   17ba0:	bx	lr
   17ba4:	mov	r0, #0
   17ba8:	bx	lr
   17bac:	push	{lr}		; (str lr, [sp, #-4]!)
   17bb0:	sub	sp, sp, #12
   17bb4:	movw	r1, #50196	; 0xc414
   17bb8:	movt	r1, #2
   17bbc:	ldr	r3, [r1, #4]
   17bc0:	str	r3, [sp]
   17bc4:	movw	r3, #44236	; 0xaccc
   17bc8:	movt	r3, #1
   17bcc:	movw	r2, #44252	; 0xacdc
   17bd0:	movt	r2, #1
   17bd4:	ldr	r1, [r1]
   17bd8:	bl	181c0 <argp_parse@@Base+0x11c8>
   17bdc:	add	sp, sp, #12
   17be0:	pop	{pc}		; (ldr pc, [sp], #4)
   17be4:	movw	r3, #50192	; 0xc410
   17be8:	movt	r3, #2
   17bec:	movw	r2, #31660	; 0x7bac
   17bf0:	movt	r2, #1
   17bf4:	str	r2, [r3]
   17bf8:	movw	r3, #50196	; 0xc414
   17bfc:	movt	r3, #2
   17c00:	str	r0, [r3]
   17c04:	str	r1, [r3, #4]
   17c08:	bx	lr
   17c0c:	ldrb	r3, [r0]
   17c10:	cmp	r3, #47	; 0x2f
   17c14:	bne	17c24 <argp_parse@@Base+0xc2c>
   17c18:	ldrb	r3, [r0, #1]!
   17c1c:	cmp	r3, #47	; 0x2f
   17c20:	beq	17c18 <argp_parse@@Base+0xc20>
   17c24:	ldrb	r2, [r0]
   17c28:	cmp	r2, #0
   17c2c:	bxeq	lr
   17c30:	push	{lr}		; (str lr, [sp, #-4]!)
   17c34:	mov	r1, r0
   17c38:	mov	r3, #0
   17c3c:	mov	lr, #1
   17c40:	mov	ip, r3
   17c44:	b	17c60 <argp_parse@@Base+0xc68>
   17c48:	cmp	r3, #0
   17c4c:	movne	r0, r1
   17c50:	movne	r3, ip
   17c54:	ldrb	r2, [r1, #1]!
   17c58:	cmp	r2, #0
   17c5c:	beq	17c70 <argp_parse@@Base+0xc78>
   17c60:	cmp	r2, #47	; 0x2f
   17c64:	moveq	r3, lr
   17c68:	bne	17c48 <argp_parse@@Base+0xc50>
   17c6c:	b	17c54 <argp_parse@@Base+0xc5c>
   17c70:	pop	{pc}		; (ldr pc, [sp], #4)
   17c74:	str	r4, [sp, #-8]!
   17c78:	str	lr, [sp, #4]
   17c7c:	mov	r4, r0
   17c80:	bl	11290 <strlen@plt>
   17c84:	cmp	r0, #1
   17c88:	bls	17ca8 <argp_parse@@Base+0xcb0>
   17c8c:	add	r3, r4, r0
   17c90:	ldrb	r3, [r3, #-1]
   17c94:	cmp	r3, #47	; 0x2f
   17c98:	subeq	r0, r0, #2
   17c9c:	addeq	r3, r4, r0
   17ca0:	rsbeq	r1, r4, #1
   17ca4:	beq	17cb4 <argp_parse@@Base+0xcbc>
   17ca8:	ldr	r4, [sp]
   17cac:	add	sp, sp, #4
   17cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17cb4:	add	r0, r1, r3
   17cb8:	cmp	r3, r4
   17cbc:	beq	17ca8 <argp_parse@@Base+0xcb0>
   17cc0:	ldrb	r2, [r3], #-1
   17cc4:	cmp	r2, #47	; 0x2f
   17cc8:	bne	17ca8 <argp_parse@@Base+0xcb0>
   17ccc:	b	17cb4 <argp_parse@@Base+0xcbc>
   17cd0:	strd	r4, [sp, #-12]!
   17cd4:	str	lr, [sp, #8]
   17cd8:	sub	sp, sp, #12
   17cdc:	mov	r5, r0
   17ce0:	bl	112b4 <__errno_location@plt>
   17ce4:	mov	r4, r0
   17ce8:	ldr	r3, [r0]
   17cec:	str	r3, [sp]
   17cf0:	str	r3, [sp, #4]
   17cf4:	mov	r3, #0
   17cf8:	str	r3, [r0]
   17cfc:	mov	r0, r5
   17d00:	bl	11134 <free@plt>
   17d04:	ldr	r3, [r4]
   17d08:	clz	r3, r3
   17d0c:	lsr	r3, r3, #5
   17d10:	add	r2, sp, #8
   17d14:	add	r3, r2, r3, lsl #2
   17d18:	ldr	r3, [r3, #-8]
   17d1c:	str	r3, [r4]
   17d20:	add	sp, sp, #12
   17d24:	ldrd	r4, [sp]
   17d28:	add	sp, sp, #8
   17d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   17d30:	push	{lr}		; (str lr, [sp, #-4]!)
   17d34:	sub	sp, sp, #20
   17d38:	mov	ip, #0
   17d3c:	str	ip, [sp, #8]
   17d40:	str	ip, [sp, #4]
   17d44:	ldr	ip, [sp, #24]
   17d48:	str	ip, [sp]
   17d4c:	bl	19c88 <argp_parse@@Base+0x2c90>
   17d50:	add	sp, sp, #20
   17d54:	pop	{pc}		; (ldr pc, [sp], #4)
   17d58:	push	{lr}		; (str lr, [sp, #-4]!)
   17d5c:	sub	sp, sp, #20
   17d60:	mov	ip, #0
   17d64:	str	ip, [sp, #12]
   17d68:	ldr	lr, [sp, #28]
   17d6c:	str	lr, [sp, #8]
   17d70:	str	ip, [sp, #4]
   17d74:	ldr	ip, [sp, #24]
   17d78:	str	ip, [sp]
   17d7c:	bl	196cc <argp_parse@@Base+0x26d4>
   17d80:	add	sp, sp, #20
   17d84:	pop	{pc}		; (ldr pc, [sp], #4)
   17d88:	push	{lr}		; (str lr, [sp, #-4]!)
   17d8c:	sub	sp, sp, #20
   17d90:	mov	ip, #0
   17d94:	str	ip, [sp, #8]
   17d98:	mov	ip, #1
   17d9c:	str	ip, [sp, #4]
   17da0:	ldr	ip, [sp, #24]
   17da4:	str	ip, [sp]
   17da8:	bl	19c88 <argp_parse@@Base+0x2c90>
   17dac:	add	sp, sp, #20
   17db0:	pop	{pc}		; (ldr pc, [sp], #4)
   17db4:	push	{lr}		; (str lr, [sp, #-4]!)
   17db8:	sub	sp, sp, #20
   17dbc:	mov	ip, #0
   17dc0:	str	ip, [sp, #12]
   17dc4:	ldr	ip, [sp, #28]
   17dc8:	str	ip, [sp, #8]
   17dcc:	mov	ip, #1
   17dd0:	str	ip, [sp, #4]
   17dd4:	ldr	ip, [sp, #24]
   17dd8:	str	ip, [sp]
   17ddc:	bl	196cc <argp_parse@@Base+0x26d4>
   17de0:	add	sp, sp, #20
   17de4:	pop	{pc}		; (ldr pc, [sp], #4)
   17de8:	strd	r4, [sp, #-16]!
   17dec:	str	r6, [sp, #8]
   17df0:	str	lr, [sp, #12]
   17df4:	subs	r4, r0, #0
   17df8:	beq	17e94 <argp_parse@@Base+0xe9c>
   17dfc:	mov	r1, #47	; 0x2f
   17e00:	mov	r0, r4
   17e04:	bl	11338 <strrchr@plt>
   17e08:	subs	r5, r0, #0
   17e0c:	beq	17e6c <argp_parse@@Base+0xe74>
   17e10:	add	r6, r5, #1
   17e14:	sub	r3, r6, r4
   17e18:	cmp	r3, #6
   17e1c:	ble	17e6c <argp_parse@@Base+0xe74>
   17e20:	mov	r2, #7
   17e24:	movw	r1, #44324	; 0xad24
   17e28:	movt	r1, #1
   17e2c:	sub	r0, r5, #6
   17e30:	bl	113e0 <strncmp@plt>
   17e34:	cmp	r0, #0
   17e38:	bne	17e6c <argp_parse@@Base+0xe74>
   17e3c:	mov	r2, #3
   17e40:	movw	r1, #44332	; 0xad2c
   17e44:	movt	r1, #1
   17e48:	mov	r0, r6
   17e4c:	bl	113e0 <strncmp@plt>
   17e50:	cmp	r0, #0
   17e54:	movne	r4, r6
   17e58:	bne	17e6c <argp_parse@@Base+0xe74>
   17e5c:	add	r4, r5, #4
   17e60:	movw	r3, #50128	; 0xc3d0
   17e64:	movt	r3, #2
   17e68:	str	r4, [r3]
   17e6c:	movw	r3, #50204	; 0xc41c
   17e70:	movt	r3, #2
   17e74:	str	r4, [r3]
   17e78:	movw	r3, #50132	; 0xc3d4
   17e7c:	movt	r3, #2
   17e80:	str	r4, [r3]
   17e84:	ldrd	r4, [sp]
   17e88:	ldr	r6, [sp, #8]
   17e8c:	add	sp, sp, #12
   17e90:	pop	{pc}		; (ldr pc, [sp], #4)
   17e94:	movw	r3, #50136	; 0xc3d8
   17e98:	movt	r3, #2
   17e9c:	ldr	r3, [r3]
   17ea0:	mov	r2, #55	; 0x37
   17ea4:	mov	r1, #1
   17ea8:	movw	r0, #44268	; 0xacec
   17eac:	movt	r0, #1
   17eb0:	bl	111dc <fwrite@plt>
   17eb4:	bl	113ec <abort@plt>
   17eb8:	strd	r4, [sp, #-16]!
   17ebc:	str	r6, [sp, #8]
   17ec0:	str	lr, [sp, #12]
   17ec4:	sub	sp, sp, #32
   17ec8:	mov	r4, r0
   17ecc:	ldr	r5, [sp, #48]	; 0x30
   17ed0:	ldr	r6, [sp, #52]	; 0x34
   17ed4:	cmp	r1, #0
   17ed8:	beq	17f74 <argp_parse@@Base+0xf7c>
   17edc:	str	r3, [sp]
   17ee0:	mov	r3, r2
   17ee4:	mov	r2, r1
   17ee8:	movw	r1, #44336	; 0xad30
   17eec:	movt	r1, #1
   17ef0:	bl	112a8 <fprintf@plt>
   17ef4:	movw	r3, #2022	; 0x7e6
   17ef8:	movw	r2, #44348	; 0xad3c
   17efc:	movt	r2, #1
   17f00:	movw	r1, #45116	; 0xb03c
   17f04:	movt	r1, #1
   17f08:	mov	r0, r4
   17f0c:	bl	112a8 <fprintf@plt>
   17f10:	mov	r1, r4
   17f14:	mov	r0, #10
   17f18:	bl	11350 <fputc@plt>
   17f1c:	movw	r2, #44352	; 0xad40
   17f20:	movt	r2, #1
   17f24:	movw	r1, #44388	; 0xad64
   17f28:	movt	r1, #1
   17f2c:	mov	r0, r4
   17f30:	bl	112a8 <fprintf@plt>
   17f34:	mov	r1, r4
   17f38:	mov	r0, #10
   17f3c:	bl	11350 <fputc@plt>
   17f40:	cmp	r6, #9
   17f44:	ldrls	pc, [pc, r6, lsl #2]
   17f48:	b	1816c <argp_parse@@Base+0x1174>
   17f4c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   17f50:	andeq	r7, r1, r4, lsl #31
   17f54:	andeq	r7, r1, ip, lsr #31
   17f58:	andeq	r7, r1, r8, asr #31
   17f5c:	andeq	r7, r1, ip, ror #31
   17f60:	andeq	r8, r1, r8, lsl r0
   17f64:	andeq	r8, r1, ip, asr #32
   17f68:	andeq	r8, r1, r8, lsl #1
   17f6c:	andeq	r8, r1, ip, asr #1
   17f70:	andeq	r8, r1, r8, lsl r1
   17f74:	movw	r1, #41156	; 0xa0c4
   17f78:	movt	r1, #1
   17f7c:	bl	112a8 <fprintf@plt>
   17f80:	b	17ef4 <argp_parse@@Base+0xefc>
   17f84:	ldr	r2, [r5]
   17f88:	movw	r1, #44560	; 0xae10
   17f8c:	movt	r1, #1
   17f90:	mov	r0, r4
   17f94:	bl	112a8 <fprintf@plt>
   17f98:	add	sp, sp, #32
   17f9c:	ldrd	r4, [sp]
   17fa0:	ldr	r6, [sp, #8]
   17fa4:	add	sp, sp, #12
   17fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   17fac:	ldr	r3, [r5, #4]
   17fb0:	ldr	r2, [r5]
   17fb4:	movw	r1, #44576	; 0xae20
   17fb8:	movt	r1, #1
   17fbc:	mov	r0, r4
   17fc0:	bl	112a8 <fprintf@plt>
   17fc4:	b	17f98 <argp_parse@@Base+0xfa0>
   17fc8:	ldr	r3, [r5, #8]
   17fcc:	str	r3, [sp]
   17fd0:	ldr	r3, [r5, #4]
   17fd4:	ldr	r2, [r5]
   17fd8:	movw	r1, #44600	; 0xae38
   17fdc:	movt	r1, #1
   17fe0:	mov	r0, r4
   17fe4:	bl	112a8 <fprintf@plt>
   17fe8:	b	17f98 <argp_parse@@Base+0xfa0>
   17fec:	ldr	r3, [r5, #12]
   17ff0:	str	r3, [sp, #4]
   17ff4:	ldr	r3, [r5, #8]
   17ff8:	str	r3, [sp]
   17ffc:	ldr	r3, [r5, #4]
   18000:	ldr	r2, [r5]
   18004:	movw	r1, #44628	; 0xae54
   18008:	movt	r1, #1
   1800c:	mov	r0, r4
   18010:	bl	112a8 <fprintf@plt>
   18014:	b	17f98 <argp_parse@@Base+0xfa0>
   18018:	ldr	r3, [r5, #16]
   1801c:	str	r3, [sp, #8]
   18020:	ldr	r3, [r5, #12]
   18024:	str	r3, [sp, #4]
   18028:	ldr	r3, [r5, #8]
   1802c:	str	r3, [sp]
   18030:	ldr	r3, [r5, #4]
   18034:	ldr	r2, [r5]
   18038:	movw	r1, #44660	; 0xae74
   1803c:	movt	r1, #1
   18040:	mov	r0, r4
   18044:	bl	112a8 <fprintf@plt>
   18048:	b	17f98 <argp_parse@@Base+0xfa0>
   1804c:	ldr	r3, [r5, #20]
   18050:	str	r3, [sp, #12]
   18054:	ldr	r3, [r5, #16]
   18058:	str	r3, [sp, #8]
   1805c:	ldr	r3, [r5, #12]
   18060:	str	r3, [sp, #4]
   18064:	ldr	r3, [r5, #8]
   18068:	str	r3, [sp]
   1806c:	ldr	r3, [r5, #4]
   18070:	ldr	r2, [r5]
   18074:	movw	r1, #44696	; 0xae98
   18078:	movt	r1, #1
   1807c:	mov	r0, r4
   18080:	bl	112a8 <fprintf@plt>
   18084:	b	17f98 <argp_parse@@Base+0xfa0>
   18088:	ldr	r3, [r5, #24]
   1808c:	str	r3, [sp, #16]
   18090:	ldr	r3, [r5, #20]
   18094:	str	r3, [sp, #12]
   18098:	ldr	r3, [r5, #16]
   1809c:	str	r3, [sp, #8]
   180a0:	ldr	r3, [r5, #12]
   180a4:	str	r3, [sp, #4]
   180a8:	ldr	r3, [r5, #8]
   180ac:	str	r3, [sp]
   180b0:	ldr	r3, [r5, #4]
   180b4:	ldr	r2, [r5]
   180b8:	movw	r1, #44736	; 0xaec0
   180bc:	movt	r1, #1
   180c0:	mov	r0, r4
   180c4:	bl	112a8 <fprintf@plt>
   180c8:	b	17f98 <argp_parse@@Base+0xfa0>
   180cc:	ldr	r3, [r5, #28]
   180d0:	str	r3, [sp, #20]
   180d4:	ldr	r3, [r5, #24]
   180d8:	str	r3, [sp, #16]
   180dc:	ldr	r3, [r5, #20]
   180e0:	str	r3, [sp, #12]
   180e4:	ldr	r3, [r5, #16]
   180e8:	str	r3, [sp, #8]
   180ec:	ldr	r3, [r5, #12]
   180f0:	str	r3, [sp, #4]
   180f4:	ldr	r3, [r5, #8]
   180f8:	str	r3, [sp]
   180fc:	ldr	r3, [r5, #4]
   18100:	ldr	r2, [r5]
   18104:	movw	r1, #44780	; 0xaeec
   18108:	movt	r1, #1
   1810c:	mov	r0, r4
   18110:	bl	112a8 <fprintf@plt>
   18114:	b	17f98 <argp_parse@@Base+0xfa0>
   18118:	ldr	r3, [r5, #32]
   1811c:	str	r3, [sp, #24]
   18120:	ldr	r3, [r5, #28]
   18124:	str	r3, [sp, #20]
   18128:	ldr	r3, [r5, #24]
   1812c:	str	r3, [sp, #16]
   18130:	ldr	r3, [r5, #20]
   18134:	str	r3, [sp, #12]
   18138:	ldr	r3, [r5, #16]
   1813c:	str	r3, [sp, #8]
   18140:	ldr	r3, [r5, #12]
   18144:	str	r3, [sp, #4]
   18148:	ldr	r3, [r5, #8]
   1814c:	str	r3, [sp]
   18150:	ldr	r3, [r5, #4]
   18154:	ldr	r2, [r5]
   18158:	movw	r1, #44828	; 0xaf1c
   1815c:	movt	r1, #1
   18160:	mov	r0, r4
   18164:	bl	112a8 <fprintf@plt>
   18168:	b	17f98 <argp_parse@@Base+0xfa0>
   1816c:	ldr	r3, [r5, #32]
   18170:	str	r3, [sp, #24]
   18174:	ldr	r3, [r5, #28]
   18178:	str	r3, [sp, #20]
   1817c:	ldr	r3, [r5, #24]
   18180:	str	r3, [sp, #16]
   18184:	ldr	r3, [r5, #20]
   18188:	str	r3, [sp, #12]
   1818c:	ldr	r3, [r5, #16]
   18190:	str	r3, [sp, #8]
   18194:	ldr	r3, [r5, #12]
   18198:	str	r3, [sp, #4]
   1819c:	ldr	r3, [r5, #8]
   181a0:	str	r3, [sp]
   181a4:	ldr	r3, [r5, #4]
   181a8:	ldr	r2, [r5]
   181ac:	movw	r1, #44880	; 0xaf50
   181b0:	movt	r1, #1
   181b4:	mov	r0, r4
   181b8:	bl	112a8 <fprintf@plt>
   181bc:	b	17f98 <argp_parse@@Base+0xfa0>
   181c0:	strd	r4, [sp, #-12]!
   181c4:	str	lr, [sp, #8]
   181c8:	sub	sp, sp, #12
   181cc:	ldr	r5, [sp, #24]
   181d0:	ldr	ip, [r5]
   181d4:	cmp	ip, #0
   181d8:	beq	18210 <argp_parse@@Base+0x1218>
   181dc:	mov	lr, r5
   181e0:	mov	ip, #0
   181e4:	add	ip, ip, #1
   181e8:	ldr	r4, [lr, #4]!
   181ec:	cmp	r4, #0
   181f0:	bne	181e4 <argp_parse@@Base+0x11ec>
   181f4:	str	ip, [sp, #4]
   181f8:	str	r5, [sp]
   181fc:	bl	17eb8 <argp_parse@@Base+0xec0>
   18200:	add	sp, sp, #12
   18204:	ldrd	r4, [sp]
   18208:	add	sp, sp, #8
   1820c:	pop	{pc}		; (ldr pc, [sp], #4)
   18210:	mov	ip, #0
   18214:	b	181f4 <argp_parse@@Base+0x11fc>
   18218:	strd	r4, [sp, #-12]!
   1821c:	str	lr, [sp, #8]
   18220:	sub	sp, sp, #52	; 0x34
   18224:	ldr	r5, [sp, #64]	; 0x40
   18228:	add	r4, sp, #8
   1822c:	mov	ip, #0
   18230:	ldr	lr, [r5], #4
   18234:	str	lr, [r4], #4
   18238:	cmp	lr, #0
   1823c:	beq	1824c <argp_parse@@Base+0x1254>
   18240:	add	ip, ip, #1
   18244:	cmp	ip, #10
   18248:	bne	18230 <argp_parse@@Base+0x1238>
   1824c:	str	ip, [sp, #4]
   18250:	add	ip, sp, #8
   18254:	str	ip, [sp]
   18258:	bl	17eb8 <argp_parse@@Base+0xec0>
   1825c:	add	sp, sp, #52	; 0x34
   18260:	ldrd	r4, [sp]
   18264:	add	sp, sp, #8
   18268:	pop	{pc}		; (ldr pc, [sp], #4)
   1826c:	push	{r3}		; (str r3, [sp, #-4]!)
   18270:	push	{lr}		; (str lr, [sp, #-4]!)
   18274:	sub	sp, sp, #16
   18278:	add	r3, sp, #24
   1827c:	str	r3, [sp, #12]
   18280:	str	r3, [sp]
   18284:	ldr	r3, [sp, #20]
   18288:	bl	18218 <argp_parse@@Base+0x1220>
   1828c:	add	sp, sp, #16
   18290:	pop	{lr}		; (ldr lr, [sp], #4)
   18294:	add	sp, sp, #4
   18298:	bx	lr
   1829c:	str	r4, [sp, #-8]!
   182a0:	str	lr, [sp, #4]
   182a4:	movw	r3, #50140	; 0xc3dc
   182a8:	movt	r3, #2
   182ac:	ldr	r1, [r3]
   182b0:	mov	r0, #10
   182b4:	bl	11350 <fputc@plt>
   182b8:	movw	r1, #44940	; 0xaf8c
   182bc:	movt	r1, #1
   182c0:	movw	r0, #44964	; 0xafa4
   182c4:	movt	r0, #1
   182c8:	bl	110f8 <printf@plt>
   182cc:	movw	r2, #44984	; 0xafb8
   182d0:	movt	r2, #1
   182d4:	movw	r1, #44252	; 0xacdc
   182d8:	movt	r1, #1
   182dc:	movw	r0, #45024	; 0xafe0
   182e0:	movt	r0, #1
   182e4:	bl	110f8 <printf@plt>
   182e8:	movw	r1, #45044	; 0xaff4
   182ec:	movt	r1, #1
   182f0:	movw	r0, #45076	; 0xb014
   182f4:	movt	r0, #1
   182f8:	bl	110f8 <printf@plt>
   182fc:	ldr	r4, [sp]
   18300:	add	sp, sp, #4
   18304:	pop	{pc}		; (ldr pc, [sp], #4)
   18308:	str	r4, [sp, #-8]!
   1830c:	str	lr, [sp, #4]
   18310:	bl	18840 <argp_parse@@Base+0x1848>
   18314:	cmp	r0, #0
   18318:	beq	18328 <argp_parse@@Base+0x1330>
   1831c:	ldr	r4, [sp]
   18320:	add	sp, sp, #4
   18324:	pop	{pc}		; (ldr pc, [sp], #4)
   18328:	bl	1879c <argp_parse@@Base+0x17a4>
   1832c:	str	r4, [sp, #-8]!
   18330:	str	lr, [sp, #4]
   18334:	bl	18840 <argp_parse@@Base+0x1848>
   18338:	cmp	r0, #0
   1833c:	beq	1834c <argp_parse@@Base+0x1354>
   18340:	ldr	r4, [sp]
   18344:	add	sp, sp, #4
   18348:	pop	{pc}		; (ldr pc, [sp], #4)
   1834c:	bl	1879c <argp_parse@@Base+0x17a4>
   18350:	str	r4, [sp, #-8]!
   18354:	str	lr, [sp, #4]
   18358:	bl	18308 <argp_parse@@Base+0x1310>
   1835c:	ldr	r4, [sp]
   18360:	add	sp, sp, #4
   18364:	pop	{pc}		; (ldr pc, [sp], #4)
   18368:	strd	r4, [sp, #-16]!
   1836c:	str	r6, [sp, #8]
   18370:	str	lr, [sp, #12]
   18374:	mov	r5, r0
   18378:	mov	r4, r1
   1837c:	bl	1887c <argp_parse@@Base+0x1884>
   18380:	cmp	r0, #0
   18384:	beq	18398 <argp_parse@@Base+0x13a0>
   18388:	ldrd	r4, [sp]
   1838c:	ldr	r6, [sp, #8]
   18390:	add	sp, sp, #12
   18394:	pop	{pc}		; (ldr pc, [sp], #4)
   18398:	adds	r4, r4, #0
   1839c:	movne	r4, #1
   183a0:	cmp	r5, #0
   183a4:	moveq	r4, #1
   183a8:	cmp	r4, #0
   183ac:	beq	18388 <argp_parse@@Base+0x1390>
   183b0:	bl	1879c <argp_parse@@Base+0x17a4>
   183b4:	str	r4, [sp, #-8]!
   183b8:	str	lr, [sp, #4]
   183bc:	cmp	r1, #0
   183c0:	orreq	r1, r1, #1
   183c4:	bl	1887c <argp_parse@@Base+0x1884>
   183c8:	cmp	r0, #0
   183cc:	beq	183dc <argp_parse@@Base+0x13e4>
   183d0:	ldr	r4, [sp]
   183d4:	add	sp, sp, #4
   183d8:	pop	{pc}		; (ldr pc, [sp], #4)
   183dc:	bl	1879c <argp_parse@@Base+0x17a4>
   183e0:	strd	r4, [sp, #-16]!
   183e4:	str	r6, [sp, #8]
   183e8:	str	lr, [sp, #12]
   183ec:	mov	r4, r0
   183f0:	mov	r6, r1
   183f4:	mov	r5, r2
   183f8:	bl	19d2c <argp_parse@@Base+0x2d34>
   183fc:	cmp	r0, #0
   18400:	beq	18414 <argp_parse@@Base+0x141c>
   18404:	ldrd	r4, [sp]
   18408:	ldr	r6, [sp, #8]
   1840c:	add	sp, sp, #12
   18410:	pop	{pc}		; (ldr pc, [sp], #4)
   18414:	cmp	r4, #0
   18418:	beq	18428 <argp_parse@@Base+0x1430>
   1841c:	cmp	r6, #0
   18420:	cmpne	r5, #0
   18424:	beq	18404 <argp_parse@@Base+0x140c>
   18428:	bl	1879c <argp_parse@@Base+0x17a4>
   1842c:	str	r4, [sp, #-8]!
   18430:	str	lr, [sp, #4]
   18434:	bl	183e0 <argp_parse@@Base+0x13e8>
   18438:	ldr	r4, [sp]
   1843c:	add	sp, sp, #4
   18440:	pop	{pc}		; (ldr pc, [sp], #4)
   18444:	str	r4, [sp, #-8]!
   18448:	str	lr, [sp, #4]
   1844c:	mov	ip, r1
   18450:	mov	r3, r2
   18454:	cmp	r2, #0
   18458:	cmpne	r1, #0
   1845c:	moveq	r3, #1
   18460:	moveq	ip, r3
   18464:	mov	r2, r3
   18468:	mov	r1, ip
   1846c:	bl	19d2c <argp_parse@@Base+0x2d34>
   18470:	cmp	r0, #0
   18474:	beq	18484 <argp_parse@@Base+0x148c>
   18478:	ldr	r4, [sp]
   1847c:	add	sp, sp, #4
   18480:	pop	{pc}		; (ldr pc, [sp], #4)
   18484:	bl	1879c <argp_parse@@Base+0x17a4>
   18488:	str	r4, [sp, #-8]!
   1848c:	str	lr, [sp, #4]
   18490:	mov	r2, r1
   18494:	mov	r1, r0
   18498:	mov	r0, #0
   1849c:	bl	183e0 <argp_parse@@Base+0x13e8>
   184a0:	ldr	r4, [sp]
   184a4:	add	sp, sp, #4
   184a8:	pop	{pc}		; (ldr pc, [sp], #4)
   184ac:	str	r4, [sp, #-8]!
   184b0:	str	lr, [sp, #4]
   184b4:	mov	r2, r1
   184b8:	mov	r1, r0
   184bc:	mov	r0, #0
   184c0:	bl	18444 <argp_parse@@Base+0x144c>
   184c4:	ldr	r4, [sp]
   184c8:	add	sp, sp, #4
   184cc:	pop	{pc}		; (ldr pc, [sp], #4)
   184d0:	strd	r4, [sp, #-16]!
   184d4:	str	r6, [sp, #8]
   184d8:	str	lr, [sp, #12]
   184dc:	mov	r5, r1
   184e0:	ldr	r4, [r1]
   184e4:	cmp	r0, #0
   184e8:	beq	18518 <argp_parse@@Base+0x1520>
   184ec:	lsr	r3, r4, #1
   184f0:	add	r3, r3, #1
   184f4:	adds	r4, r4, r3
   184f8:	bcs	18534 <argp_parse@@Base+0x153c>
   184fc:	mov	r1, r4
   18500:	bl	183e0 <argp_parse@@Base+0x13e8>
   18504:	str	r4, [r5]
   18508:	ldrd	r4, [sp]
   1850c:	ldr	r6, [sp, #8]
   18510:	add	sp, sp, #12
   18514:	pop	{pc}		; (ldr pc, [sp], #4)
   18518:	cmp	r4, #0
   1851c:	bne	184fc <argp_parse@@Base+0x1504>
   18520:	mov	r4, #64	; 0x40
   18524:	udiv	r4, r4, r2
   18528:	cmp	r2, #64	; 0x40
   1852c:	addhi	r4, r4, #1
   18530:	b	184fc <argp_parse@@Base+0x1504>
   18534:	bl	1879c <argp_parse@@Base+0x17a4>
   18538:	str	r4, [sp, #-8]!
   1853c:	str	lr, [sp, #4]
   18540:	mov	r2, #1
   18544:	bl	184d0 <argp_parse@@Base+0x14d8>
   18548:	ldr	r4, [sp]
   1854c:	add	sp, sp, #4
   18550:	pop	{pc}		; (ldr pc, [sp], #4)
   18554:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18558:	strd	r6, [sp, #8]
   1855c:	str	r8, [sp, #16]
   18560:	str	lr, [sp, #20]
   18564:	mov	r5, r1
   18568:	ldr	lr, [sp, #24]
   1856c:	ldr	ip, [r1]
   18570:	asr	r4, ip, #1
   18574:	adds	r4, ip, r4
   18578:	movvs	r1, #1
   1857c:	movvc	r1, #0
   18580:	cmp	r1, #0
   18584:	mvnne	r4, #-2147483648	; 0x80000000
   18588:	mvn	r8, r3
   1858c:	lsr	r8, r8, #31
   18590:	cmp	r3, r4
   18594:	movge	r1, #0
   18598:	andlt	r1, r8, #1
   1859c:	cmp	r1, #0
   185a0:	movne	r4, r3
   185a4:	smull	r6, r7, r4, lr
   185a8:	asr	r1, r6, #31
   185ac:	cmp	r1, r7
   185b0:	bne	185c8 <argp_parse@@Base+0x15d0>
   185b4:	mov	r1, r6
   185b8:	cmp	r6, #63	; 0x3f
   185bc:	movle	r1, #64	; 0x40
   185c0:	ble	185cc <argp_parse@@Base+0x15d4>
   185c4:	b	185d8 <argp_parse@@Base+0x15e0>
   185c8:	mvn	r1, #-2147483648	; 0x80000000
   185cc:	sdiv	r4, r1, lr
   185d0:	mls	r6, lr, r4, r1
   185d4:	sub	r1, r1, r6
   185d8:	cmp	r0, #0
   185dc:	moveq	r6, #0
   185e0:	streq	r6, [r5]
   185e4:	sub	r6, r4, ip
   185e8:	cmp	r6, r2
   185ec:	bge	18624 <argp_parse@@Base+0x162c>
   185f0:	adds	r2, ip, r2
   185f4:	mov	r4, r2
   185f8:	bvs	18640 <argp_parse@@Base+0x1648>
   185fc:	cmp	r2, r3
   18600:	movle	r3, #0
   18604:	andgt	r3, r8, #1
   18608:	cmp	r3, #0
   1860c:	bne	18640 <argp_parse@@Base+0x1648>
   18610:	smull	r2, r3, r2, lr
   18614:	asr	ip, r2, #31
   18618:	mov	r1, r2
   1861c:	cmp	ip, r3
   18620:	bne	18640 <argp_parse@@Base+0x1648>
   18624:	bl	18368 <argp_parse@@Base+0x1370>
   18628:	str	r4, [r5]
   1862c:	ldrd	r4, [sp]
   18630:	ldrd	r6, [sp, #8]
   18634:	ldr	r8, [sp, #16]
   18638:	add	sp, sp, #20
   1863c:	pop	{pc}		; (ldr pc, [sp], #4)
   18640:	bl	1879c <argp_parse@@Base+0x17a4>
   18644:	str	r4, [sp, #-8]!
   18648:	str	lr, [sp, #4]
   1864c:	bl	187cc <argp_parse@@Base+0x17d4>
   18650:	cmp	r0, #0
   18654:	beq	18664 <argp_parse@@Base+0x166c>
   18658:	ldr	r4, [sp]
   1865c:	add	sp, sp, #4
   18660:	pop	{pc}		; (ldr pc, [sp], #4)
   18664:	bl	1879c <argp_parse@@Base+0x17a4>
   18668:	str	r4, [sp, #-8]!
   1866c:	str	lr, [sp, #4]
   18670:	mov	r1, #1
   18674:	bl	18644 <argp_parse@@Base+0x164c>
   18678:	ldr	r4, [sp]
   1867c:	add	sp, sp, #4
   18680:	pop	{pc}		; (ldr pc, [sp], #4)
   18684:	str	r4, [sp, #-8]!
   18688:	str	lr, [sp, #4]
   1868c:	bl	187cc <argp_parse@@Base+0x17d4>
   18690:	cmp	r0, #0
   18694:	beq	186a4 <argp_parse@@Base+0x16ac>
   18698:	ldr	r4, [sp]
   1869c:	add	sp, sp, #4
   186a0:	pop	{pc}		; (ldr pc, [sp], #4)
   186a4:	bl	1879c <argp_parse@@Base+0x17a4>
   186a8:	str	r4, [sp, #-8]!
   186ac:	str	lr, [sp, #4]
   186b0:	mov	r1, #1
   186b4:	bl	18684 <argp_parse@@Base+0x168c>
   186b8:	ldr	r4, [sp]
   186bc:	add	sp, sp, #4
   186c0:	pop	{pc}		; (ldr pc, [sp], #4)
   186c4:	strd	r4, [sp, #-16]!
   186c8:	str	r6, [sp, #8]
   186cc:	str	lr, [sp, #12]
   186d0:	mov	r5, r0
   186d4:	mov	r4, r1
   186d8:	mov	r0, r1
   186dc:	bl	18308 <argp_parse@@Base+0x1310>
   186e0:	mov	r2, r4
   186e4:	mov	r1, r5
   186e8:	bl	11158 <memcpy@plt>
   186ec:	ldrd	r4, [sp]
   186f0:	ldr	r6, [sp, #8]
   186f4:	add	sp, sp, #12
   186f8:	pop	{pc}		; (ldr pc, [sp], #4)
   186fc:	strd	r4, [sp, #-16]!
   18700:	str	r6, [sp, #8]
   18704:	str	lr, [sp, #12]
   18708:	mov	r5, r0
   1870c:	mov	r4, r1
   18710:	mov	r0, r1
   18714:	bl	1832c <argp_parse@@Base+0x1334>
   18718:	mov	r2, r4
   1871c:	mov	r1, r5
   18720:	bl	11158 <memcpy@plt>
   18724:	ldrd	r4, [sp]
   18728:	ldr	r6, [sp, #8]
   1872c:	add	sp, sp, #12
   18730:	pop	{pc}		; (ldr pc, [sp], #4)
   18734:	strd	r4, [sp, #-16]!
   18738:	str	r6, [sp, #8]
   1873c:	str	lr, [sp, #12]
   18740:	mov	r5, r0
   18744:	mov	r4, r1
   18748:	add	r0, r1, #1
   1874c:	bl	1832c <argp_parse@@Base+0x1334>
   18750:	mov	r2, #0
   18754:	strb	r2, [r0, r4]
   18758:	mov	r2, r4
   1875c:	mov	r1, r5
   18760:	bl	11158 <memcpy@plt>
   18764:	ldrd	r4, [sp]
   18768:	ldr	r6, [sp, #8]
   1876c:	add	sp, sp, #12
   18770:	pop	{pc}		; (ldr pc, [sp], #4)
   18774:	str	r4, [sp, #-8]!
   18778:	str	lr, [sp, #4]
   1877c:	mov	r4, r0
   18780:	bl	11290 <strlen@plt>
   18784:	add	r1, r0, #1
   18788:	mov	r0, r4
   1878c:	bl	186c4 <argp_parse@@Base+0x16cc>
   18790:	ldr	r4, [sp]
   18794:	add	sp, sp, #4
   18798:	pop	{pc}		; (ldr pc, [sp], #4)
   1879c:	str	r4, [sp, #-8]!
   187a0:	str	lr, [sp, #4]
   187a4:	movw	r3, #50108	; 0xc3bc
   187a8:	movt	r3, #2
   187ac:	ldr	r0, [r3]
   187b0:	movw	r3, #45164	; 0xb06c
   187b4:	movt	r3, #1
   187b8:	movw	r2, #40592	; 0x9e90
   187bc:	movt	r2, #1
   187c0:	mov	r1, #0
   187c4:	bl	111f4 <error@plt>
   187c8:	bl	113ec <abort@plt>
   187cc:	strd	r4, [sp, #-16]!
   187d0:	str	r6, [sp, #8]
   187d4:	str	lr, [sp, #12]
   187d8:	cmp	r1, #0
   187dc:	cmpne	r0, #0
   187e0:	beq	1881c <argp_parse@@Base+0x1824>
   187e4:	mov	r2, r0
   187e8:	mov	r3, r1
   187ec:	umull	r4, r5, r0, r1
   187f0:	adds	r1, r5, #0
   187f4:	movne	r1, #1
   187f8:	cmp	r4, #0
   187fc:	movlt	r1, #1
   18800:	cmp	r1, #0
   18804:	beq	18824 <argp_parse@@Base+0x182c>
   18808:	bl	112b4 <__errno_location@plt>
   1880c:	mov	r3, #12
   18810:	str	r3, [r0]
   18814:	mov	r0, #0
   18818:	b	18830 <argp_parse@@Base+0x1838>
   1881c:	mov	r3, #1
   18820:	mov	r2, r3
   18824:	mov	r1, r3
   18828:	mov	r0, r2
   1882c:	bl	110b0 <calloc@plt>
   18830:	ldrd	r4, [sp]
   18834:	ldr	r6, [sp, #8]
   18838:	add	sp, sp, #12
   1883c:	pop	{pc}		; (ldr pc, [sp], #4)
   18840:	str	r4, [sp, #-8]!
   18844:	str	lr, [sp, #4]
   18848:	cmp	r0, #0
   1884c:	beq	18868 <argp_parse@@Base+0x1870>
   18850:	bge	1886c <argp_parse@@Base+0x1874>
   18854:	bl	112b4 <__errno_location@plt>
   18858:	mov	r3, #12
   1885c:	str	r3, [r0]
   18860:	mov	r0, #0
   18864:	b	18870 <argp_parse@@Base+0x1878>
   18868:	mov	r0, #1
   1886c:	bl	11218 <malloc@plt>
   18870:	ldr	r4, [sp]
   18874:	add	sp, sp, #4
   18878:	pop	{pc}		; (ldr pc, [sp], #4)
   1887c:	str	r4, [sp, #-8]!
   18880:	str	lr, [sp, #4]
   18884:	cmp	r0, #0
   18888:	beq	188ac <argp_parse@@Base+0x18b4>
   1888c:	cmp	r1, #0
   18890:	beq	188b8 <argp_parse@@Base+0x18c0>
   18894:	cmp	r1, #0
   18898:	blt	188c4 <argp_parse@@Base+0x18cc>
   1889c:	bl	111b8 <realloc@plt>
   188a0:	ldr	r4, [sp]
   188a4:	add	sp, sp, #4
   188a8:	pop	{pc}		; (ldr pc, [sp], #4)
   188ac:	mov	r0, r1
   188b0:	bl	18840 <argp_parse@@Base+0x1848>
   188b4:	b	188a0 <argp_parse@@Base+0x18a8>
   188b8:	bl	17cd0 <argp_parse@@Base+0xcd8>
   188bc:	mov	r0, #0
   188c0:	b	188a0 <argp_parse@@Base+0x18a8>
   188c4:	bl	112b4 <__errno_location@plt>
   188c8:	mov	r3, #12
   188cc:	str	r3, [r0]
   188d0:	mov	r0, #0
   188d4:	b	188a0 <argp_parse@@Base+0x18a8>
   188d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   188dc:	strd	r6, [sp, #8]
   188e0:	str	r8, [sp, #16]
   188e4:	str	lr, [sp, #20]
   188e8:	mov	r8, r0
   188ec:	mov	r7, r1
   188f0:	mov	r6, r2
   188f4:	mov	r5, r3
   188f8:	mov	r0, #36	; 0x24
   188fc:	bl	18840 <argp_parse@@Base+0x1848>
   18900:	subs	r4, r0, #0
   18904:	beq	18948 <argp_parse@@Base+0x1950>
   18908:	str	r8, [r4]
   1890c:	str	r7, [r4, #4]
   18910:	str	r6, [r4, #8]
   18914:	str	r5, [r4, #12]
   18918:	mov	r3, #0
   1891c:	str	r3, [r4, #20]
   18920:	str	r3, [r4, #16]
   18924:	mov	r0, #200	; 0xc8
   18928:	bl	18840 <argp_parse@@Base+0x1848>
   1892c:	mov	r5, r0
   18930:	str	r0, [r4, #24]
   18934:	cmp	r0, #0
   18938:	strne	r0, [r4, #28]
   1893c:	addne	r5, r0, #200	; 0xc8
   18940:	strne	r5, [r4, #32]
   18944:	beq	18960 <argp_parse@@Base+0x1968>
   18948:	mov	r0, r4
   1894c:	ldrd	r4, [sp]
   18950:	ldrd	r6, [sp, #8]
   18954:	ldr	r8, [sp, #16]
   18958:	add	sp, sp, #20
   1895c:	pop	{pc}		; (ldr pc, [sp], #4)
   18960:	mov	r0, r4
   18964:	bl	17cd0 <argp_parse@@Base+0xcd8>
   18968:	mov	r4, r5
   1896c:	b	18948 <argp_parse@@Base+0x1950>
   18970:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18974:	strd	r6, [sp, #8]
   18978:	strd	r8, [sp, #16]
   1897c:	strd	sl, [sp, #24]
   18980:	str	lr, [sp, #32]
   18984:	sub	sp, sp, #20
   18988:	mov	r4, r0
   1898c:	ldr	r5, [r0, #24]
   18990:	ldr	r3, [r0, #16]
   18994:	add	r5, r5, r3
   18998:	mov	sl, #32
   1899c:	str	sl, [sp, #8]
   189a0:	b	18a88 <argp_parse@@Base+0x1a90>
   189a4:	mov	r7, #0
   189a8:	ldr	r0, [r4]
   189ac:	ldr	r3, [r0, #20]
   189b0:	ldr	r2, [r0, #24]
   189b4:	cmp	r3, r2
   189b8:	addcc	r2, r3, #1
   189bc:	strcc	r2, [r0, #20]
   189c0:	strbcc	sl, [r3]
   189c4:	bcs	18af4 <argp_parse@@Base+0x1afc>
   189c8:	add	r7, r7, #1
   189cc:	cmp	r6, r7
   189d0:	bne	189a8 <argp_parse@@Base+0x19b0>
   189d4:	str	r6, [r4, #20]
   189d8:	ldr	r8, [r4, #28]
   189dc:	sub	fp, r8, r5
   189e0:	mov	r2, fp
   189e4:	mov	r1, #10
   189e8:	mov	r0, r5
   189ec:	bl	112fc <memchr@plt>
   189f0:	mov	r6, r0
   189f4:	ldr	r3, [r4, #20]
   189f8:	cmp	r3, #0
   189fc:	movlt	r3, #0
   18a00:	strlt	r3, [r4, #20]
   18a04:	cmp	r6, #0
   18a08:	beq	18b00 <argp_parse@@Base+0x1b08>
   18a0c:	ldr	r0, [r4, #20]
   18a10:	ldr	r9, [r4, #8]
   18a14:	sub	r3, r6, r5
   18a18:	add	r3, r3, r0
   18a1c:	cmp	r3, r9
   18a20:	movlt	r3, #0
   18a24:	strlt	r3, [r4, #20]
   18a28:	addlt	r5, r6, #1
   18a2c:	blt	18a88 <argp_parse@@Base+0x1a90>
   18a30:	sub	r7, r9, #1
   18a34:	ldr	r3, [r4, #12]
   18a38:	str	r3, [sp, #4]
   18a3c:	cmp	r3, #0
   18a40:	bge	18b2c <argp_parse@@Base+0x1b34>
   18a44:	cmp	r8, r6
   18a48:	bls	18bbc <argp_parse@@Base+0x1bc4>
   18a4c:	sub	r0, r7, r0
   18a50:	sub	r2, r8, r6
   18a54:	mov	r1, r6
   18a58:	add	r0, r5, r0
   18a5c:	bl	1111c <memmove@plt>
   18a60:	ldr	r3, [r4, #20]
   18a64:	sub	r7, r7, r3
   18a68:	add	r7, r5, r7
   18a6c:	sub	r6, r7, r6
   18a70:	ldr	r3, [r4, #28]
   18a74:	sub	r6, r3, r6
   18a78:	str	r6, [r4, #28]
   18a7c:	mov	r3, #0
   18a80:	str	r3, [r4, #20]
   18a84:	add	r5, r5, r9
   18a88:	ldr	r8, [r4, #28]
   18a8c:	cmp	r8, r5
   18a90:	bls	18bd4 <argp_parse@@Base+0x1bdc>
   18a94:	ldr	r3, [r4, #20]
   18a98:	cmp	r3, #0
   18a9c:	bne	189d8 <argp_parse@@Base+0x19e0>
   18aa0:	ldr	r6, [r4, #4]
   18aa4:	cmp	r6, #0
   18aa8:	beq	18e80 <argp_parse@@Base+0x1e88>
   18aac:	add	r3, r8, r6
   18ab0:	ldr	r2, [r4, #32]
   18ab4:	cmp	r2, r3
   18ab8:	bls	189a4 <argp_parse@@Base+0x19ac>
   18abc:	add	r7, r5, r6
   18ac0:	sub	r2, r8, r5
   18ac4:	mov	r1, r5
   18ac8:	mov	r0, r7
   18acc:	bl	1111c <memmove@plt>
   18ad0:	ldr	r3, [r4, #28]
   18ad4:	add	r3, r3, r6
   18ad8:	str	r3, [r4, #28]
   18adc:	mov	r2, r6
   18ae0:	mov	r1, sl
   18ae4:	mov	r0, r5
   18ae8:	bl	112e4 <memset@plt>
   18aec:	mov	r5, r7
   18af0:	b	189d4 <argp_parse@@Base+0x19dc>
   18af4:	ldr	r1, [sp, #8]
   18af8:	bl	11314 <__overflow@plt>
   18afc:	b	189c8 <argp_parse@@Base+0x19d0>
   18b00:	ldr	r3, [r4, #20]
   18b04:	add	r3, fp, r3
   18b08:	ldr	r7, [r4, #8]
   18b0c:	cmp	r3, r7
   18b10:	bcc	18bb4 <argp_parse@@Base+0x1bbc>
   18b14:	sub	r7, r7, #1
   18b18:	ldr	r3, [r4, #12]
   18b1c:	str	r3, [sp, #4]
   18b20:	cmp	r3, #0
   18b24:	blt	18bbc <argp_parse@@Base+0x1bc4>
   18b28:	mov	r6, r8
   18b2c:	ldr	r3, [r4, #20]
   18b30:	rsb	r3, r3, #1
   18b34:	add	r7, r3, r7
   18b38:	adds	r7, r5, r7
   18b3c:	bcs	18e78 <argp_parse@@Base+0x1e80>
   18b40:	bl	11260 <__ctype_b_loc@plt>
   18b44:	ldr	r0, [r0]
   18b48:	mov	r3, r7
   18b4c:	mov	r1, r3
   18b50:	sub	r3, r3, #1
   18b54:	ldrb	r2, [r1]
   18b58:	lsl	r2, r2, #1
   18b5c:	ldrh	r2, [r0, r2]
   18b60:	tst	r2, #1
   18b64:	bne	18c00 <argp_parse@@Base+0x1c08>
   18b68:	mov	r1, r3
   18b6c:	cmp	r3, r5
   18b70:	bcs	18b4c <argp_parse@@Base+0x1b54>
   18b74:	add	r9, r1, #1
   18b78:	cmp	r9, r5
   18b7c:	bhi	18c3c <argp_parse@@Base+0x1c44>
   18b80:	cmp	r6, r7
   18b84:	bhi	18cd8 <argp_parse@@Base+0x1ce0>
   18b88:	cmp	r7, r6
   18b8c:	beq	18d18 <argp_parse@@Base+0x1d20>
   18b90:	bl	11260 <__ctype_b_loc@plt>
   18b94:	ldr	r2, [r0]
   18b98:	mov	r9, r7
   18b9c:	ldrb	r3, [r9, #1]!
   18ba0:	lsl	r3, r3, #1
   18ba4:	ldrh	r3, [r2, r3]
   18ba8:	tst	r3, #1
   18bac:	bne	18b9c <argp_parse@@Base+0x1ba4>
   18bb0:	b	18c40 <argp_parse@@Base+0x1c48>
   18bb4:	str	r3, [r4, #20]
   18bb8:	b	18bd4 <argp_parse@@Base+0x1bdc>
   18bbc:	ldr	r3, [r4, #20]
   18bc0:	add	r3, fp, r3
   18bc4:	str	r3, [r4, #20]
   18bc8:	sub	r3, r7, r3
   18bcc:	add	r8, r8, r3
   18bd0:	str	r8, [r4, #28]
   18bd4:	ldr	r3, [r4, #28]
   18bd8:	ldr	r2, [r4, #24]
   18bdc:	sub	r3, r3, r2
   18be0:	str	r3, [r4, #16]
   18be4:	add	sp, sp, #20
   18be8:	ldrd	r4, [sp]
   18bec:	ldrd	r6, [sp, #8]
   18bf0:	ldrd	r8, [sp, #16]
   18bf4:	ldrd	sl, [sp, #24]
   18bf8:	add	sp, sp, #32
   18bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   18c00:	add	r9, r1, #1
   18c04:	cmp	r9, r5
   18c08:	bls	18b80 <argp_parse@@Base+0x1b88>
   18c0c:	cmp	r5, r1
   18c10:	bhi	18c3c <argp_parse@@Base+0x1c44>
   18c14:	sub	ip, r5, #1
   18c18:	mov	r1, r3
   18c1c:	cmp	r3, ip
   18c20:	beq	18c3c <argp_parse@@Base+0x1c44>
   18c24:	sub	r3, r3, #1
   18c28:	ldrb	r2, [r1]
   18c2c:	lsl	r2, r2, #1
   18c30:	ldrh	r2, [r0, r2]
   18c34:	tst	r2, #1
   18c38:	bne	18c18 <argp_parse@@Base+0x1c20>
   18c3c:	add	r7, r1, #1
   18c40:	add	r3, fp, #1
   18c44:	add	r3, r5, r3
   18c48:	cmp	r9, r3
   18c4c:	beq	18d28 <argp_parse@@Base+0x1d30>
   18c50:	add	r3, r7, #1
   18c54:	sub	r3, r9, r3
   18c58:	ldr	r2, [sp, #4]
   18c5c:	cmp	r3, r2
   18c60:	bge	18d3c <argp_parse@@Base+0x1d44>
   18c64:	cmp	r9, r8
   18c68:	bcs	18d3c <argp_parse@@Base+0x1d44>
   18c6c:	ldr	r3, [r4, #32]
   18c70:	sub	r3, r3, r8
   18c74:	ldr	r2, [sp, #4]
   18c78:	add	r2, r2, #1
   18c7c:	cmp	r3, r2
   18c80:	bgt	18de4 <argp_parse@@Base+0x1dec>
   18c84:	ldr	r0, [r4, #24]
   18c88:	cmp	r0, r7
   18c8c:	bcs	18ca0 <argp_parse@@Base+0x1ca8>
   18c90:	ldr	r3, [r4]
   18c94:	sub	r2, r7, r0
   18c98:	mov	r1, #1
   18c9c:	bl	11170 <fwrite_unlocked@plt>
   18ca0:	ldr	r0, [r4]
   18ca4:	ldr	r3, [r0, #20]
   18ca8:	ldr	r2, [r0, #24]
   18cac:	cmp	r3, r2
   18cb0:	addcc	r2, r3, #1
   18cb4:	strcc	r2, [r0, #20]
   18cb8:	movcc	r2, #10
   18cbc:	strbcc	r2, [r3]
   18cc0:	bcs	18e24 <argp_parse@@Base+0x1e2c>
   18cc4:	ldr	r8, [r4, #24]
   18cc8:	sub	r5, r5, r8
   18ccc:	add	fp, fp, r5
   18cd0:	mov	r5, r8
   18cd4:	b	18d4c <argp_parse@@Base+0x1d54>
   18cd8:	add	r9, r7, #1
   18cdc:	str	r6, [sp, #12]
   18ce0:	mov	r7, r9
   18ce4:	cmp	r9, r6
   18ce8:	beq	18d10 <argp_parse@@Base+0x1d18>
   18cec:	bl	11260 <__ctype_b_loc@plt>
   18cf0:	add	r9, r9, #1
   18cf4:	ldrb	r3, [r7]
   18cf8:	ldr	r2, [r0]
   18cfc:	lsl	r3, r3, #1
   18d00:	ldrh	r3, [r2, r3]
   18d04:	tst	r3, #1
   18d08:	beq	18ce0 <argp_parse@@Base+0x1ce8>
   18d0c:	b	18b90 <argp_parse@@Base+0x1b98>
   18d10:	ldr	r6, [sp, #12]
   18d14:	b	18b88 <argp_parse@@Base+0x1b90>
   18d18:	mov	r3, #0
   18d1c:	str	r3, [r4, #20]
   18d20:	add	r5, r6, #1
   18d24:	b	18a88 <argp_parse@@Base+0x1a90>
   18d28:	ldr	r3, [r4, #32]
   18d2c:	sub	r3, r3, r7
   18d30:	ldr	r2, [sp, #4]
   18d34:	cmp	r3, r2
   18d38:	ble	18c64 <argp_parse@@Base+0x1c6c>
   18d3c:	mov	r3, #10
   18d40:	strb	r3, [r7], #1
   18d44:	mov	r8, r5
   18d48:	mov	r5, r7
   18d4c:	ldr	r3, [r4, #12]
   18d50:	sub	r2, r9, r5
   18d54:	cmp	r2, r3
   18d58:	bge	18e30 <argp_parse@@Base+0x1e38>
   18d5c:	add	r2, fp, #1
   18d60:	add	r2, r8, r2
   18d64:	cmp	r9, r2
   18d68:	bne	18d7c <argp_parse@@Base+0x1d84>
   18d6c:	ldr	r2, [r4, #32]
   18d70:	sub	r2, r2, r9
   18d74:	cmp	r3, r2
   18d78:	ble	18e30 <argp_parse@@Base+0x1e38>
   18d7c:	cmp	r3, #0
   18d80:	movgt	r6, #0
   18d84:	ble	18db8 <argp_parse@@Base+0x1dc0>
   18d88:	ldr	r0, [r4]
   18d8c:	ldr	r3, [r0, #20]
   18d90:	ldr	r2, [r0, #24]
   18d94:	cmp	r3, r2
   18d98:	addcc	r2, r3, #1
   18d9c:	strcc	r2, [r0, #20]
   18da0:	strbcc	sl, [r3]
   18da4:	bcs	18e54 <argp_parse@@Base+0x1e5c>
   18da8:	add	r6, r6, #1
   18dac:	ldr	r3, [r4, #12]
   18db0:	cmp	r3, r6
   18db4:	bgt	18d88 <argp_parse@@Base+0x1d90>
   18db8:	cmp	r5, r9
   18dbc:	bcc	18e60 <argp_parse@@Base+0x1e68>
   18dc0:	sub	r9, r9, r8
   18dc4:	sub	fp, fp, r9
   18dc8:	add	fp, r5, fp
   18dcc:	str	fp, [r4, #28]
   18dd0:	ldr	r3, [r4, #12]
   18dd4:	cmp	r3, #0
   18dd8:	mvneq	r3, #0
   18ddc:	str	r3, [r4, #20]
   18de0:	b	18a88 <argp_parse@@Base+0x1a90>
   18de4:	sub	r8, r8, r9
   18de8:	mov	r0, r2
   18dec:	mov	r2, r8
   18df0:	mov	r1, r9
   18df4:	add	r0, r7, r0
   18df8:	bl	1111c <memmove@plt>
   18dfc:	ldr	r9, [r4, #12]
   18e00:	add	r9, r9, #1
   18e04:	add	r9, r7, r9
   18e08:	add	r8, r9, r8
   18e0c:	sub	fp, r8, r5
   18e10:	mov	r3, #10
   18e14:	strb	r3, [r7], #1
   18e18:	mov	r8, r5
   18e1c:	mov	r5, r7
   18e20:	b	18d4c <argp_parse@@Base+0x1d54>
   18e24:	mov	r1, #10
   18e28:	bl	11314 <__overflow@plt>
   18e2c:	b	18cc4 <argp_parse@@Base+0x1ccc>
   18e30:	cmp	r3, #0
   18e34:	movgt	r3, #0
   18e38:	ble	18db8 <argp_parse@@Base+0x1dc0>
   18e3c:	strb	sl, [r5], #1
   18e40:	add	r3, r3, #1
   18e44:	ldr	r2, [r4, #12]
   18e48:	cmp	r2, r3
   18e4c:	bgt	18e3c <argp_parse@@Base+0x1e44>
   18e50:	b	18db8 <argp_parse@@Base+0x1dc0>
   18e54:	ldr	r1, [sp, #8]
   18e58:	bl	11314 <__overflow@plt>
   18e5c:	b	18da8 <argp_parse@@Base+0x1db0>
   18e60:	add	r2, r8, fp
   18e64:	sub	r2, r2, r9
   18e68:	mov	r1, r9
   18e6c:	mov	r0, r5
   18e70:	bl	1111c <memmove@plt>
   18e74:	b	18dc0 <argp_parse@@Base+0x1dc8>
   18e78:	mov	r1, r7
   18e7c:	b	18b74 <argp_parse@@Base+0x1b7c>
   18e80:	sub	fp, r8, r5
   18e84:	mov	r2, fp
   18e88:	mov	r1, #10
   18e8c:	mov	r0, r5
   18e90:	bl	112fc <memchr@plt>
   18e94:	mov	r6, r0
   18e98:	b	18a04 <argp_parse@@Base+0x1a0c>
   18e9c:	str	r4, [sp, #-8]!
   18ea0:	str	lr, [sp, #4]
   18ea4:	mov	r4, r0
   18ea8:	bl	18970 <argp_parse@@Base+0x1978>
   18eac:	ldr	r2, [r4, #28]
   18eb0:	ldr	r0, [r4, #24]
   18eb4:	cmp	r2, r0
   18eb8:	bls	18ecc <argp_parse@@Base+0x1ed4>
   18ebc:	ldr	r3, [r4]
   18ec0:	sub	r2, r2, r0
   18ec4:	mov	r1, #1
   18ec8:	bl	11170 <fwrite_unlocked@plt>
   18ecc:	ldr	r0, [r4, #24]
   18ed0:	bl	17cd0 <argp_parse@@Base+0xcd8>
   18ed4:	mov	r0, r4
   18ed8:	bl	17cd0 <argp_parse@@Base+0xcd8>
   18edc:	ldr	r4, [sp]
   18ee0:	add	sp, sp, #4
   18ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ee8:	ldr	r3, [r0, #32]
   18eec:	ldr	r2, [r0, #28]
   18ef0:	sub	r3, r3, r2
   18ef4:	cmp	r3, r1
   18ef8:	bcc	18f04 <argp_parse@@Base+0x1f0c>
   18efc:	mov	r0, #1
   18f00:	bx	lr
   18f04:	strd	r4, [sp, #-16]!
   18f08:	str	r6, [sp, #8]
   18f0c:	str	lr, [sp, #12]
   18f10:	mov	r5, r1
   18f14:	mov	r4, r0
   18f18:	bl	18970 <argp_parse@@Base+0x1978>
   18f1c:	ldr	r0, [r4, #24]
   18f20:	ldr	r2, [r4, #28]
   18f24:	ldr	r3, [r4]
   18f28:	sub	r2, r2, r0
   18f2c:	mov	r1, #1
   18f30:	bl	11170 <fwrite_unlocked@plt>
   18f34:	ldr	r2, [r4, #28]
   18f38:	ldr	r3, [r4, #24]
   18f3c:	sub	r1, r2, r3
   18f40:	cmp	r1, r0
   18f44:	bne	18f84 <argp_parse@@Base+0x1f8c>
   18f48:	str	r3, [r4, #28]
   18f4c:	mov	r2, #0
   18f50:	str	r2, [r4, #16]
   18f54:	ldr	r1, [r4, #32]
   18f58:	sub	r1, r1, r3
   18f5c:	cmp	r1, r5
   18f60:	movcs	r0, #1
   18f64:	bcs	18fac <argp_parse@@Base+0x1fb4>
   18f68:	adds	r5, r1, r5
   18f6c:	bcc	18fbc <argp_parse@@Base+0x1fc4>
   18f70:	bl	112b4 <__errno_location@plt>
   18f74:	mov	r3, #12
   18f78:	str	r3, [r0]
   18f7c:	mov	r0, #0
   18f80:	b	18fac <argp_parse@@Base+0x1fb4>
   18f84:	sub	r2, r2, r0
   18f88:	str	r2, [r4, #28]
   18f8c:	ldr	r1, [r4, #16]
   18f90:	sub	r1, r1, r0
   18f94:	str	r1, [r4, #16]
   18f98:	sub	r2, r2, r3
   18f9c:	add	r1, r3, r0
   18fa0:	mov	r0, r3
   18fa4:	bl	1111c <memmove@plt>
   18fa8:	mov	r0, #0
   18fac:	ldrd	r4, [sp]
   18fb0:	ldr	r6, [sp, #8]
   18fb4:	add	sp, sp, #12
   18fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   18fbc:	mov	r1, r5
   18fc0:	mov	r0, r3
   18fc4:	bl	1887c <argp_parse@@Base+0x1884>
   18fc8:	cmp	r0, #0
   18fcc:	beq	18f70 <argp_parse@@Base+0x1f78>
   18fd0:	str	r0, [r4, #24]
   18fd4:	add	r5, r0, r5
   18fd8:	str	r5, [r4, #32]
   18fdc:	str	r0, [r4, #28]
   18fe0:	mov	r0, #1
   18fe4:	b	18fac <argp_parse@@Base+0x1fb4>
   18fe8:	push	{r1, r2, r3}
   18fec:	strd	r4, [sp, #-16]!
   18ff0:	str	r6, [sp, #8]
   18ff4:	str	lr, [sp, #12]
   18ff8:	sub	sp, sp, #12
   18ffc:	mov	r5, r0
   19000:	mov	r1, #150	; 0x96
   19004:	add	r6, sp, #32
   19008:	mov	r0, r5
   1900c:	bl	18ee8 <argp_parse@@Base+0x1ef0>
   19010:	cmp	r0, #0
   19014:	beq	19048 <argp_parse@@Base+0x2050>
   19018:	str	r6, [sp, #4]
   1901c:	ldr	r0, [r5, #28]
   19020:	ldr	r4, [r5, #32]
   19024:	sub	r4, r4, r0
   19028:	mov	r3, r6
   1902c:	ldr	r2, [sp, #28]
   19030:	mov	r1, r4
   19034:	bl	1138c <vsnprintf@plt>
   19038:	cmp	r0, r4
   1903c:	bcc	19068 <argp_parse@@Base+0x2070>
   19040:	add	r1, r0, #1
   19044:	b	19008 <argp_parse@@Base+0x2010>
   19048:	mvn	r0, #0
   1904c:	add	sp, sp, #12
   19050:	ldrd	r4, [sp]
   19054:	ldr	r6, [sp, #8]
   19058:	ldr	lr, [sp, #12]
   1905c:	add	sp, sp, #16
   19060:	add	sp, sp, #12
   19064:	bx	lr
   19068:	ldr	r2, [r5, #28]
   1906c:	add	r3, r2, r0
   19070:	str	r3, [r5, #28]
   19074:	b	1904c <argp_parse@@Base+0x2054>
   19078:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1907c:	strd	r6, [sp, #8]
   19080:	strd	r8, [sp, #16]
   19084:	str	lr, [sp, #24]
   19088:	ldr	r5, [r1, #28]
   1908c:	ldr	r6, [r1, #32]
   19090:	ldr	r8, [r1]
   19094:	add	r7, r0, r6, lsl #2
   19098:	b	190c8 <argp_parse@@Base+0x20d0>
   1909c:	add	r3, r0, r5, lsl #2
   190a0:	add	r4, r9, r5
   190a4:	add	r4, r0, r4, lsl #2
   190a8:	mov	r2, r7
   190ac:	ldr	ip, [r3]
   190b0:	ldr	lr, [r2]
   190b4:	str	lr, [r3], #4
   190b8:	str	ip, [r2], #4
   190bc:	cmp	r3, r4
   190c0:	bne	190ac <argp_parse@@Base+0x20b4>
   190c4:	add	r5, r5, r9
   190c8:	cmp	r8, r6
   190cc:	movle	r3, #0
   190d0:	movgt	r3, #1
   190d4:	cmp	r5, r6
   190d8:	movge	r3, #0
   190dc:	cmp	r3, #0
   190e0:	beq	19124 <argp_parse@@Base+0x212c>
   190e4:	sub	r9, r8, r6
   190e8:	sub	r3, r6, r5
   190ec:	cmp	r9, r3
   190f0:	ble	1909c <argp_parse@@Base+0x20a4>
   190f4:	add	r2, r0, r5, lsl #2
   190f8:	sub	r9, r8, r3
   190fc:	add	r3, r0, r9, lsl #2
   19100:	add	r4, r0, r8, lsl #2
   19104:	ldr	ip, [r2]
   19108:	ldr	lr, [r3]
   1910c:	str	lr, [r2], #4
   19110:	str	ip, [r3], #4
   19114:	cmp	r3, r4
   19118:	bne	19104 <argp_parse@@Base+0x210c>
   1911c:	mov	r8, r9
   19120:	b	190c8 <argp_parse@@Base+0x20d0>
   19124:	ldr	r0, [r1]
   19128:	ldr	r3, [r1, #32]
   1912c:	sub	r2, r0, r3
   19130:	ldr	r3, [r1, #28]
   19134:	add	r3, r3, r2
   19138:	str	r3, [r1, #28]
   1913c:	str	r0, [r1, #32]
   19140:	ldrd	r4, [sp]
   19144:	ldrd	r6, [sp, #8]
   19148:	ldrd	r8, [sp, #16]
   1914c:	add	sp, sp, #24
   19150:	pop	{pc}		; (ldr pc, [sp], #4)
   19154:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19158:	strd	r6, [sp, #8]
   1915c:	strd	r8, [sp, #16]
   19160:	strd	sl, [sp, #24]
   19164:	str	lr, [sp, #32]
   19168:	sub	sp, sp, #52	; 0x34
   1916c:	str	r0, [sp, #32]
   19170:	str	r1, [sp, #20]
   19174:	str	r2, [sp, #28]
   19178:	str	r3, [sp, #16]
   1917c:	ldr	fp, [sp, #96]	; 0x60
   19180:	ldr	r9, [fp, #20]
   19184:	ldrb	r3, [r9]
   19188:	cmp	r3, #0
   1918c:	cmpne	r3, #61	; 0x3d
   19190:	beq	191c8 <argp_parse@@Base+0x21d0>
   19194:	mov	r8, r9
   19198:	ldrb	r3, [r8, #1]!
   1919c:	cmp	r3, #0
   191a0:	cmpne	r3, #61	; 0x3d
   191a4:	bne	19198 <argp_parse@@Base+0x21a0>
   191a8:	sub	r7, r8, r9
   191ac:	ldr	r5, [sp, #16]
   191b0:	ldr	sl, [r5]
   191b4:	cmp	sl, #0
   191b8:	beq	1968c <argp_parse@@Base+0x2694>
   191bc:	mov	r4, sl
   191c0:	mov	r6, #0
   191c4:	b	191e0 <argp_parse@@Base+0x21e8>
   191c8:	mov	r8, r9
   191cc:	b	191a8 <argp_parse@@Base+0x21b0>
   191d0:	add	r6, r6, #1
   191d4:	ldr	r4, [r5, #16]!
   191d8:	cmp	r4, #0
   191dc:	beq	19690 <argp_parse@@Base+0x2698>
   191e0:	str	r5, [sp, #12]
   191e4:	mov	r2, r7
   191e8:	mov	r1, r9
   191ec:	mov	r0, r4
   191f0:	bl	113e0 <strncmp@plt>
   191f4:	cmp	r0, #0
   191f8:	bne	191d0 <argp_parse@@Base+0x21d8>
   191fc:	mov	r0, r4
   19200:	bl	11290 <strlen@plt>
   19204:	cmp	r0, r7
   19208:	bne	191d0 <argp_parse@@Base+0x21d8>
   1920c:	cmp	r5, #0
   19210:	beq	19698 <argp_parse@@Base+0x26a0>
   19214:	ldr	r3, [fp]
   19218:	add	r2, r3, #1
   1921c:	str	r2, [fp]
   19220:	mov	r1, #0
   19224:	str	r1, [fp, #20]
   19228:	ldrb	r1, [r8]
   1922c:	cmp	r1, #0
   19230:	beq	195e0 <argp_parse@@Base+0x25e8>
   19234:	ldr	r3, [sp, #12]
   19238:	ldr	r3, [r3, #4]
   1923c:	cmp	r3, #0
   19240:	beq	1958c <argp_parse@@Base+0x2594>
   19244:	add	r8, r8, #1
   19248:	str	r8, [fp, #12]
   1924c:	ldr	r3, [sp, #88]	; 0x58
   19250:	cmp	r3, #0
   19254:	strne	r6, [r3]
   19258:	ldr	r2, [sp, #12]
   1925c:	ldr	r3, [r2, #8]
   19260:	cmp	r3, #0
   19264:	beq	19678 <argp_parse@@Base+0x2680>
   19268:	ldr	r2, [r2, #12]
   1926c:	str	r2, [r3]
   19270:	mov	r0, #0
   19274:	add	sp, sp, #52	; 0x34
   19278:	ldrd	r4, [sp]
   1927c:	ldrd	r6, [sp, #8]
   19280:	ldrd	r8, [sp, #16]
   19284:	ldrd	sl, [sp, #24]
   19288:	add	sp, sp, #32
   1928c:	pop	{pc}		; (ldr pc, [sp], #4)
   19290:	ldr	r2, [sl, #8]
   19294:	ldr	r3, [r9, #8]
   19298:	cmp	r2, r3
   1929c:	bne	1935c <argp_parse@@Base+0x2364>
   192a0:	ldr	r2, [sl, #12]
   192a4:	ldr	r3, [r9, #12]
   192a8:	cmp	r2, r3
   192ac:	bne	1935c <argp_parse@@Base+0x2364>
   192b0:	b	19314 <argp_parse@@Base+0x231c>
   192b4:	mov	r0, r6
   192b8:	bl	18840 <argp_parse@@Base+0x1848>
   192bc:	subs	r3, r0, #0
   192c0:	str	r3, [sp, #24]
   192c4:	beq	1938c <argp_parse@@Base+0x2394>
   192c8:	mov	r2, r6
   192cc:	mov	r1, #0
   192d0:	ldr	r7, [sp, #24]
   192d4:	mov	r0, r7
   192d8:	bl	112e4 <memset@plt>
   192dc:	ldr	r2, [sp, #36]	; 0x24
   192e0:	mov	r1, #1
   192e4:	strb	r1, [r7, r2]
   192e8:	ldr	r3, [sp, #44]	; 0x2c
   192ec:	str	r3, [sp, #40]	; 0x28
   192f0:	b	1937c <argp_parse@@Base+0x2384>
   192f4:	ldr	r3, [sp, #24]
   192f8:	cmp	r3, #0
   192fc:	moveq	r5, #1
   19300:	beq	19314 <argp_parse@@Base+0x231c>
   19304:	mov	r5, #1
   19308:	b	1937c <argp_parse@@Base+0x2384>
   1930c:	str	r4, [sp, #36]	; 0x24
   19310:	mov	sl, r9
   19314:	add	r4, r4, #1
   19318:	ldr	r0, [r9, #16]!
   1931c:	cmp	r0, #0
   19320:	beq	19394 <argp_parse@@Base+0x239c>
   19324:	ldr	r2, [sp, #12]
   19328:	ldr	r1, [fp, #20]
   1932c:	bl	113e0 <strncmp@plt>
   19330:	cmp	r0, #0
   19334:	bne	19314 <argp_parse@@Base+0x231c>
   19338:	cmp	sl, #0
   1933c:	beq	1930c <argp_parse@@Base+0x2314>
   19340:	ldr	r3, [sp, #92]	; 0x5c
   19344:	cmp	r3, #0
   19348:	bne	1935c <argp_parse@@Base+0x2364>
   1934c:	ldr	r2, [sl, #4]
   19350:	ldr	r3, [r9, #4]
   19354:	cmp	r2, r3
   19358:	beq	19290 <argp_parse@@Base+0x2298>
   1935c:	cmp	r5, #0
   19360:	bne	19314 <argp_parse@@Base+0x231c>
   19364:	ldr	r3, [sp, #100]	; 0x64
   19368:	cmp	r3, #0
   1936c:	beq	192f4 <argp_parse@@Base+0x22fc>
   19370:	ldr	r3, [sp, #24]
   19374:	cmp	r3, #0
   19378:	beq	192b4 <argp_parse@@Base+0x22bc>
   1937c:	ldr	r3, [sp, #24]
   19380:	mov	r2, #1
   19384:	strb	r2, [r3, r4]
   19388:	b	19314 <argp_parse@@Base+0x231c>
   1938c:	mov	r5, #1
   19390:	b	19314 <argp_parse@@Base+0x231c>
   19394:	str	sl, [sp, #12]
   19398:	ldr	r3, [sp, #24]
   1939c:	orrs	r3, r3, r5
   193a0:	bne	19418 <argp_parse@@Base+0x2420>
   193a4:	ldr	r3, [sp, #12]
   193a8:	cmp	r3, #0
   193ac:	bne	19584 <argp_parse@@Base+0x258c>
   193b0:	ldr	r3, [sp, #92]	; 0x5c
   193b4:	cmp	r3, #0
   193b8:	beq	193ec <argp_parse@@Base+0x23f4>
   193bc:	ldr	r3, [fp]
   193c0:	ldr	r2, [sp, #20]
   193c4:	ldr	r3, [r2, r3, lsl #2]
   193c8:	ldrb	r3, [r3, #1]
   193cc:	cmp	r3, #45	; 0x2d
   193d0:	beq	193ec <argp_parse@@Base+0x23f4>
   193d4:	ldr	r3, [fp, #20]
   193d8:	ldrb	r1, [r3]
   193dc:	ldr	r0, [sp, #28]
   193e0:	bl	1129c <strchr@plt>
   193e4:	cmp	r0, #0
   193e8:	bne	19684 <argp_parse@@Base+0x268c>
   193ec:	ldr	r3, [sp, #100]	; 0x64
   193f0:	cmp	r3, #0
   193f4:	bne	19554 <argp_parse@@Base+0x255c>
   193f8:	mov	r2, #0
   193fc:	str	r2, [fp, #20]
   19400:	ldr	r3, [fp]
   19404:	add	r3, r3, #1
   19408:	str	r3, [fp]
   1940c:	str	r2, [fp, #8]
   19410:	mov	r0, #63	; 0x3f
   19414:	b	19274 <argp_parse@@Base+0x227c>
   19418:	ldr	r3, [sp, #100]	; 0x64
   1941c:	cmp	r3, #0
   19420:	beq	19458 <argp_parse@@Base+0x2460>
   19424:	cmp	r5, #0
   19428:	beq	19494 <argp_parse@@Base+0x249c>
   1942c:	movw	r0, #50136	; 0xc3d8
   19430:	movt	r0, #2
   19434:	ldr	r3, [fp, #20]
   19438:	str	r3, [sp]
   1943c:	ldr	r3, [sp, #104]	; 0x68
   19440:	ldr	r2, [sp, #20]
   19444:	ldr	r2, [r2]
   19448:	movw	r1, #45184	; 0xb080
   1944c:	movt	r1, #1
   19450:	ldr	r0, [r0]
   19454:	bl	112a8 <fprintf@plt>
   19458:	ldr	r3, [sp, #40]	; 0x28
   1945c:	cmp	r3, #0
   19460:	bne	19548 <argp_parse@@Base+0x2550>
   19464:	ldr	r4, [fp, #20]
   19468:	mov	r0, r4
   1946c:	bl	11290 <strlen@plt>
   19470:	add	r0, r4, r0
   19474:	str	r0, [fp, #20]
   19478:	ldr	r3, [fp]
   1947c:	add	r3, r3, #1
   19480:	str	r3, [fp]
   19484:	mov	r3, #0
   19488:	str	r3, [fp, #8]
   1948c:	mov	r0, #63	; 0x3f
   19490:	b	19274 <argp_parse@@Base+0x227c>
   19494:	movw	r4, #50136	; 0xc3d8
   19498:	movt	r4, #2
   1949c:	ldr	r0, [r4]
   194a0:	bl	11380 <flockfile@plt>
   194a4:	ldr	r3, [fp, #20]
   194a8:	str	r3, [sp]
   194ac:	ldr	r3, [sp, #104]	; 0x68
   194b0:	ldr	r2, [sp, #20]
   194b4:	ldr	r2, [r2]
   194b8:	movw	r1, #45216	; 0xb0a0
   194bc:	movt	r1, #1
   194c0:	ldr	r0, [r4]
   194c4:	bl	112a8 <fprintf@plt>
   194c8:	cmp	r6, #0
   194cc:	ble	19528 <argp_parse@@Base+0x2530>
   194d0:	ldr	r2, [sp, #24]
   194d4:	sub	r4, r2, #1
   194d8:	sub	r3, r6, #1
   194dc:	add	r8, r2, r3
   194e0:	movw	r7, #45264	; 0xb0d0
   194e4:	movt	r7, #1
   194e8:	movw	r6, #50136	; 0xc3d8
   194ec:	movt	r6, #2
   194f0:	ldr	r9, [sp, #16]
   194f4:	b	19504 <argp_parse@@Base+0x250c>
   194f8:	add	r5, r5, #1
   194fc:	cmp	r8, r4
   19500:	beq	19528 <argp_parse@@Base+0x2530>
   19504:	ldrb	r3, [r4, #1]!
   19508:	cmp	r3, #0
   1950c:	beq	194f8 <argp_parse@@Base+0x2500>
   19510:	ldr	r3, [r9, r5, lsl #4]
   19514:	ldr	r2, [sp, #104]	; 0x68
   19518:	mov	r1, r7
   1951c:	ldr	r0, [r6]
   19520:	bl	112a8 <fprintf@plt>
   19524:	b	194f8 <argp_parse@@Base+0x2500>
   19528:	movw	r4, #50136	; 0xc3d8
   1952c:	movt	r4, #2
   19530:	ldr	r1, [r4]
   19534:	mov	r0, #10
   19538:	bl	11350 <fputc@plt>
   1953c:	ldr	r0, [r4]
   19540:	bl	111d0 <funlockfile@plt>
   19544:	b	19458 <argp_parse@@Base+0x2460>
   19548:	ldr	r0, [sp, #24]
   1954c:	bl	17cd0 <argp_parse@@Base+0xcd8>
   19550:	b	19464 <argp_parse@@Base+0x246c>
   19554:	movw	r0, #50136	; 0xc3d8
   19558:	movt	r0, #2
   1955c:	ldr	r3, [fp, #20]
   19560:	str	r3, [sp]
   19564:	ldr	r3, [sp, #104]	; 0x68
   19568:	ldr	r2, [sp, #20]
   1956c:	ldr	r2, [r2]
   19570:	movw	r1, #45272	; 0xb0d8
   19574:	movt	r1, #1
   19578:	ldr	r0, [r0]
   1957c:	bl	112a8 <fprintf@plt>
   19580:	b	193f8 <argp_parse@@Base+0x2400>
   19584:	ldr	r6, [sp, #36]	; 0x24
   19588:	b	19214 <argp_parse@@Base+0x221c>
   1958c:	ldr	r3, [sp, #100]	; 0x64
   19590:	cmp	r3, #0
   19594:	bne	195ac <argp_parse@@Base+0x25b4>
   19598:	ldr	r3, [sp, #12]
   1959c:	ldr	r3, [r3, #12]
   195a0:	str	r3, [fp, #8]
   195a4:	mov	r0, #63	; 0x3f
   195a8:	b	19274 <argp_parse@@Base+0x227c>
   195ac:	movw	r0, #50136	; 0xc3d8
   195b0:	movt	r0, #2
   195b4:	ldr	r3, [sp, #12]
   195b8:	ldr	r3, [r3]
   195bc:	str	r3, [sp]
   195c0:	ldr	r3, [sp, #104]	; 0x68
   195c4:	ldr	r2, [sp, #20]
   195c8:	ldr	r2, [r2]
   195cc:	movw	r1, #45304	; 0xb0f8
   195d0:	movt	r1, #1
   195d4:	ldr	r0, [r0]
   195d8:	bl	112a8 <fprintf@plt>
   195dc:	b	19598 <argp_parse@@Base+0x25a0>
   195e0:	ldr	r1, [sp, #12]
   195e4:	ldr	r1, [r1, #4]
   195e8:	cmp	r1, #1
   195ec:	bne	1924c <argp_parse@@Base+0x2254>
   195f0:	ldr	r1, [sp, #32]
   195f4:	cmp	r2, r1
   195f8:	bge	19614 <argp_parse@@Base+0x261c>
   195fc:	add	r3, r3, #2
   19600:	str	r3, [fp]
   19604:	ldr	r3, [sp, #20]
   19608:	ldr	r3, [r3, r2, lsl #2]
   1960c:	str	r3, [fp, #12]
   19610:	b	1924c <argp_parse@@Base+0x2254>
   19614:	ldr	r3, [sp, #100]	; 0x64
   19618:	cmp	r3, #0
   1961c:	bne	19644 <argp_parse@@Base+0x264c>
   19620:	ldr	r3, [sp, #12]
   19624:	ldr	r3, [r3, #12]
   19628:	str	r3, [fp, #8]
   1962c:	ldr	r3, [sp, #28]
   19630:	ldrb	r3, [r3]
   19634:	cmp	r3, #58	; 0x3a
   19638:	moveq	r0, #58	; 0x3a
   1963c:	movne	r0, #63	; 0x3f
   19640:	b	19274 <argp_parse@@Base+0x227c>
   19644:	movw	r0, #50136	; 0xc3d8
   19648:	movt	r0, #2
   1964c:	ldr	r3, [sp, #12]
   19650:	ldr	r3, [r3]
   19654:	str	r3, [sp]
   19658:	ldr	r3, [sp, #104]	; 0x68
   1965c:	ldr	r2, [sp, #20]
   19660:	ldr	r2, [r2]
   19664:	movw	r1, #45352	; 0xb128
   19668:	movt	r1, #1
   1966c:	ldr	r0, [r0]
   19670:	bl	112a8 <fprintf@plt>
   19674:	b	19620 <argp_parse@@Base+0x2628>
   19678:	ldr	r3, [sp, #12]
   1967c:	ldr	r0, [r3, #12]
   19680:	b	19274 <argp_parse@@Base+0x227c>
   19684:	mvn	r0, #0
   19688:	b	19274 <argp_parse@@Base+0x227c>
   1968c:	mov	r6, #0
   19690:	cmp	sl, #0
   19694:	beq	193b0 <argp_parse@@Base+0x23b8>
   19698:	ldr	r9, [sp, #16]
   1969c:	mvn	r3, #0
   196a0:	str	r3, [sp, #36]	; 0x24
   196a4:	mov	r5, #0
   196a8:	str	r5, [sp, #40]	; 0x28
   196ac:	str	r5, [sp, #24]
   196b0:	mov	r4, r5
   196b4:	mov	r3, #1
   196b8:	str	r3, [sp, #44]	; 0x2c
   196bc:	mov	r0, sl
   196c0:	mov	sl, r5
   196c4:	str	r7, [sp, #12]
   196c8:	b	19324 <argp_parse@@Base+0x232c>
   196cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   196d0:	strd	r6, [sp, #8]
   196d4:	strd	r8, [sp, #16]
   196d8:	strd	sl, [sp, #24]
   196dc:	str	lr, [sp, #32]
   196e0:	sub	sp, sp, #36	; 0x24
   196e4:	str	r3, [sp, #24]
   196e8:	ldr	r4, [sp, #80]	; 0x50
   196ec:	ldr	r8, [r4, #4]
   196f0:	subs	r5, r0, #0
   196f4:	ble	19c30 <argp_parse@@Base+0x2c38>
   196f8:	mov	r9, r1
   196fc:	mov	r6, r2
   19700:	mov	r3, #0
   19704:	str	r3, [r4, #12]
   19708:	ldr	r3, [r4]
   1970c:	cmp	r3, #0
   19710:	beq	19734 <argp_parse@@Base+0x273c>
   19714:	ldr	r3, [r4, #16]
   19718:	cmp	r3, #0
   1971c:	beq	1973c <argp_parse@@Base+0x2744>
   19720:	ldrb	r3, [r2]
   19724:	sub	r3, r3, #43	; 0x2b
   19728:	tst	r3, #253	; 0xfd
   1972c:	addeq	r6, r2, #1
   19730:	b	19798 <argp_parse@@Base+0x27a0>
   19734:	mov	r3, #1
   19738:	str	r3, [r4]
   1973c:	ldr	r3, [r4]
   19740:	str	r3, [r4, #32]
   19744:	str	r3, [r4, #28]
   19748:	mov	r3, #0
   1974c:	str	r3, [r4, #20]
   19750:	ldrb	r3, [r6]
   19754:	cmp	r3, #45	; 0x2d
   19758:	moveq	r3, #2
   1975c:	streq	r3, [r4, #24]
   19760:	addeq	r6, r6, #1
   19764:	beq	19790 <argp_parse@@Base+0x2798>
   19768:	cmp	r3, #43	; 0x2b
   1976c:	moveq	r3, #0
   19770:	streq	r3, [r4, #24]
   19774:	addeq	r6, r6, #1
   19778:	beq	19790 <argp_parse@@Base+0x2798>
   1977c:	ldr	r3, [sp, #84]	; 0x54
   19780:	cmp	r3, #0
   19784:	beq	19858 <argp_parse@@Base+0x2860>
   19788:	mov	r3, #0
   1978c:	str	r3, [r4, #24]
   19790:	mov	r3, #1
   19794:	str	r3, [r4, #16]
   19798:	ldrb	r3, [r6]
   1979c:	cmp	r3, #58	; 0x3a
   197a0:	moveq	r8, #0
   197a4:	ldr	r3, [r4, #20]
   197a8:	cmp	r3, #0
   197ac:	beq	197bc <argp_parse@@Base+0x27c4>
   197b0:	ldrb	r3, [r3]
   197b4:	cmp	r3, #0
   197b8:	bne	1995c <argp_parse@@Base+0x2964>
   197bc:	ldr	r3, [r4]
   197c0:	ldr	r2, [r4, #32]
   197c4:	cmp	r2, r3
   197c8:	strgt	r3, [r4, #32]
   197cc:	ldr	r2, [r4, #28]
   197d0:	cmp	r3, r2
   197d4:	strlt	r3, [r4, #28]
   197d8:	ldr	r2, [r4, #24]
   197dc:	cmp	r2, #1
   197e0:	beq	19878 <argp_parse@@Base+0x2880>
   197e4:	ldr	r7, [r4]
   197e8:	cmp	r7, r5
   197ec:	beq	19838 <argp_parse@@Base+0x2840>
   197f0:	ldr	sl, [r9, r7, lsl #2]
   197f4:	movw	r1, #43996	; 0xabdc
   197f8:	movt	r1, #1
   197fc:	mov	r0, sl
   19800:	bl	110d4 <strcmp@plt>
   19804:	cmp	r0, #0
   19808:	bne	19c40 <argp_parse@@Base+0x2c48>
   1980c:	add	r7, r7, #1
   19810:	str	r7, [r4]
   19814:	ldr	r2, [r4, #28]
   19818:	ldr	r3, [r4, #32]
   1981c:	cmp	r2, r3
   19820:	cmpne	r7, r3
   19824:	bne	198f4 <argp_parse@@Base+0x28fc>
   19828:	cmp	r2, r3
   1982c:	streq	r7, [r4, #28]
   19830:	str	r5, [r4, #32]
   19834:	str	r5, [r4]
   19838:	ldr	r3, [r4, #28]
   1983c:	ldr	r2, [r4, #32]
   19840:	cmp	r3, r2
   19844:	mvneq	r0, #0
   19848:	beq	19c6c <argp_parse@@Base+0x2c74>
   1984c:	str	r3, [r4]
   19850:	mvn	r0, #0
   19854:	b	19c6c <argp_parse@@Base+0x2c74>
   19858:	movw	r0, #45392	; 0xb150
   1985c:	movt	r0, #1
   19860:	bl	11200 <getenv@plt>
   19864:	cmp	r0, #0
   19868:	bne	19788 <argp_parse@@Base+0x2790>
   1986c:	mov	r3, #1
   19870:	str	r3, [r4, #24]
   19874:	b	19790 <argp_parse@@Base+0x2798>
   19878:	ldr	r2, [r4, #32]
   1987c:	ldr	r1, [r4, #28]
   19880:	cmp	r1, r2
   19884:	cmpne	r3, r2
   19888:	bne	198a8 <argp_parse@@Base+0x28b0>
   1988c:	cmp	r3, r2
   19890:	strne	r3, [r4, #28]
   19894:	ldr	r3, [r4]
   19898:	cmp	r5, r3
   1989c:	ble	198ec <argp_parse@@Base+0x28f4>
   198a0:	add	r1, r9, r3, lsl #2
   198a4:	b	198c8 <argp_parse@@Base+0x28d0>
   198a8:	mov	r1, r4
   198ac:	mov	r0, r9
   198b0:	bl	19078 <argp_parse@@Base+0x2080>
   198b4:	b	19894 <argp_parse@@Base+0x289c>
   198b8:	add	r3, r3, #1
   198bc:	str	r3, [r4]
   198c0:	cmp	r3, r5
   198c4:	beq	198e8 <argp_parse@@Base+0x28f0>
   198c8:	ldr	r2, [r1], #4
   198cc:	ldrb	r0, [r2]
   198d0:	cmp	r0, #45	; 0x2d
   198d4:	bne	198b8 <argp_parse@@Base+0x28c0>
   198d8:	ldrb	r2, [r2, #1]
   198dc:	cmp	r2, #0
   198e0:	beq	198b8 <argp_parse@@Base+0x28c0>
   198e4:	b	198ec <argp_parse@@Base+0x28f4>
   198e8:	mov	r3, r5
   198ec:	str	r3, [r4, #32]
   198f0:	b	197e4 <argp_parse@@Base+0x27ec>
   198f4:	mov	r1, r4
   198f8:	mov	r0, r9
   198fc:	bl	19078 <argp_parse@@Base+0x2080>
   19900:	b	19830 <argp_parse@@Base+0x2838>
   19904:	ldrb	r1, [sl, #1]
   19908:	cmp	r1, #0
   1990c:	beq	19c4c <argp_parse@@Base+0x2c54>
   19910:	ldr	r3, [sp, #24]
   19914:	cmp	r3, #0
   19918:	beq	1994c <argp_parse@@Base+0x2954>
   1991c:	cmp	r1, #45	; 0x2d
   19920:	beq	199c8 <argp_parse@@Base+0x29d0>
   19924:	ldr	r3, [sp, #76]	; 0x4c
   19928:	cmp	r3, #0
   1992c:	beq	1994c <argp_parse@@Base+0x2954>
   19930:	ldrb	r3, [sl, #2]
   19934:	cmp	r3, #0
   19938:	bne	19a0c <argp_parse@@Base+0x2a14>
   1993c:	mov	r0, r6
   19940:	bl	1129c <strchr@plt>
   19944:	cmp	r0, #0
   19948:	beq	19a0c <argp_parse@@Base+0x2a14>
   1994c:	ldr	r3, [r4]
   19950:	ldr	r3, [r9, r3, lsl #2]
   19954:	add	r3, r3, #1
   19958:	str	r3, [r4, #20]
   1995c:	ldr	sl, [r4, #20]
   19960:	add	fp, sl, #1
   19964:	str	fp, [r4, #20]
   19968:	ldrb	r7, [sl]
   1996c:	str	r7, [sp, #28]
   19970:	mov	r1, r7
   19974:	mov	r0, r6
   19978:	bl	1129c <strchr@plt>
   1997c:	ldrb	r3, [sl, #1]
   19980:	cmp	r3, #0
   19984:	bne	19994 <argp_parse@@Base+0x299c>
   19988:	ldr	r3, [r4]
   1998c:	add	r3, r3, #1
   19990:	str	r3, [r4]
   19994:	sub	r3, r7, #58	; 0x3a
   19998:	uxtb	r3, r3
   1999c:	cmp	r0, #0
   199a0:	cmpne	r3, #1
   199a4:	bls	19a58 <argp_parse@@Base+0x2a60>
   199a8:	ldrb	r3, [r0]
   199ac:	cmp	r3, #87	; 0x57
   199b0:	beq	19a94 <argp_parse@@Base+0x2a9c>
   199b4:	ldrb	r3, [r0, #1]
   199b8:	cmp	r3, #58	; 0x3a
   199bc:	beq	19b68 <argp_parse@@Base+0x2b70>
   199c0:	mov	r0, r7
   199c4:	b	19c6c <argp_parse@@Base+0x2c74>
   199c8:	add	sl, sl, #2
   199cc:	str	sl, [r4, #20]
   199d0:	movw	r3, #43996	; 0xabdc
   199d4:	movt	r3, #1
   199d8:	str	r3, [sp, #16]
   199dc:	str	r8, [sp, #12]
   199e0:	str	r4, [sp, #8]
   199e4:	ldr	r3, [sp, #76]	; 0x4c
   199e8:	str	r3, [sp, #4]
   199ec:	ldr	r3, [sp, #72]	; 0x48
   199f0:	str	r3, [sp]
   199f4:	ldr	r3, [sp, #24]
   199f8:	mov	r2, r6
   199fc:	mov	r1, r9
   19a00:	mov	r0, r5
   19a04:	bl	19154 <argp_parse@@Base+0x215c>
   19a08:	b	19c6c <argp_parse@@Base+0x2c74>
   19a0c:	add	sl, sl, #1
   19a10:	str	sl, [r4, #20]
   19a14:	movw	r3, #45408	; 0xb160
   19a18:	movt	r3, #1
   19a1c:	str	r3, [sp, #16]
   19a20:	str	r8, [sp, #12]
   19a24:	str	r4, [sp, #8]
   19a28:	ldr	r3, [sp, #76]	; 0x4c
   19a2c:	str	r3, [sp, #4]
   19a30:	ldr	r3, [sp, #72]	; 0x48
   19a34:	str	r3, [sp]
   19a38:	ldr	r3, [sp, #24]
   19a3c:	mov	r2, r6
   19a40:	mov	r1, r9
   19a44:	mov	r0, r5
   19a48:	bl	19154 <argp_parse@@Base+0x215c>
   19a4c:	cmn	r0, #1
   19a50:	bne	19c6c <argp_parse@@Base+0x2c74>
   19a54:	b	1994c <argp_parse@@Base+0x2954>
   19a58:	cmp	r8, #0
   19a5c:	bne	19a70 <argp_parse@@Base+0x2a78>
   19a60:	ldr	r3, [sp, #28]
   19a64:	str	r3, [r4, #8]
   19a68:	mov	r0, #63	; 0x3f
   19a6c:	b	19c6c <argp_parse@@Base+0x2c74>
   19a70:	movw	r0, #50136	; 0xc3d8
   19a74:	movt	r0, #2
   19a78:	ldr	r3, [sp, #28]
   19a7c:	ldr	r2, [r9]
   19a80:	movw	r1, #45412	; 0xb164
   19a84:	movt	r1, #1
   19a88:	ldr	r0, [r0]
   19a8c:	bl	112a8 <fprintf@plt>
   19a90:	b	19a60 <argp_parse@@Base+0x2a68>
   19a94:	ldrb	r1, [r0, #1]
   19a98:	ldr	r2, [sp, #24]
   19a9c:	cmp	r1, #59	; 0x3b
   19aa0:	movne	r3, #0
   19aa4:	moveq	r3, #1
   19aa8:	cmp	r2, #0
   19aac:	moveq	r3, #0
   19ab0:	cmp	r3, #0
   19ab4:	beq	199b4 <argp_parse@@Base+0x29bc>
   19ab8:	ldrb	r3, [sl, #1]
   19abc:	cmp	r3, #0
   19ac0:	strne	fp, [r4, #12]
   19ac4:	bne	19adc <argp_parse@@Base+0x2ae4>
   19ac8:	ldr	r3, [r4]
   19acc:	cmp	r3, r5
   19ad0:	beq	19b24 <argp_parse@@Base+0x2b2c>
   19ad4:	ldr	r3, [r9, r3, lsl #2]
   19ad8:	str	r3, [r4, #12]
   19adc:	ldr	r3, [r4, #12]
   19ae0:	str	r3, [r4, #20]
   19ae4:	mov	r2, #0
   19ae8:	str	r2, [r4, #12]
   19aec:	movw	r3, #45484	; 0xb1ac
   19af0:	movt	r3, #1
   19af4:	str	r3, [sp, #16]
   19af8:	str	r8, [sp, #12]
   19afc:	str	r4, [sp, #8]
   19b00:	str	r2, [sp, #4]
   19b04:	ldr	r3, [sp, #72]	; 0x48
   19b08:	str	r3, [sp]
   19b0c:	ldr	r3, [sp, #24]
   19b10:	mov	r2, r6
   19b14:	mov	r1, r9
   19b18:	mov	r0, r5
   19b1c:	bl	19154 <argp_parse@@Base+0x215c>
   19b20:	b	19c6c <argp_parse@@Base+0x2c74>
   19b24:	cmp	r8, #0
   19b28:	bne	19b44 <argp_parse@@Base+0x2b4c>
   19b2c:	ldr	r3, [sp, #28]
   19b30:	str	r3, [r4, #8]
   19b34:	ldrb	r0, [r6]
   19b38:	cmp	r0, #58	; 0x3a
   19b3c:	movne	r0, #63	; 0x3f
   19b40:	b	19c6c <argp_parse@@Base+0x2c74>
   19b44:	movw	r0, #50136	; 0xc3d8
   19b48:	movt	r0, #2
   19b4c:	ldr	r3, [sp, #28]
   19b50:	ldr	r2, [r9]
   19b54:	movw	r1, #45440	; 0xb180
   19b58:	movt	r1, #1
   19b5c:	ldr	r0, [r0]
   19b60:	bl	112a8 <fprintf@plt>
   19b64:	b	19b2c <argp_parse@@Base+0x2b34>
   19b68:	ldrb	r3, [r0, #2]
   19b6c:	cmp	r3, #58	; 0x3a
   19b70:	beq	19b9c <argp_parse@@Base+0x2ba4>
   19b74:	ldrb	r3, [sl, #1]
   19b78:	cmp	r3, #0
   19b7c:	beq	19bcc <argp_parse@@Base+0x2bd4>
   19b80:	str	fp, [r4, #12]
   19b84:	ldr	r3, [r4]
   19b88:	add	r3, r3, #1
   19b8c:	str	r3, [r4]
   19b90:	mov	r3, #0
   19b94:	str	r3, [r4, #20]
   19b98:	b	199c0 <argp_parse@@Base+0x29c8>
   19b9c:	ldrb	r3, [sl, #1]
   19ba0:	cmp	r3, #0
   19ba4:	moveq	r3, #0
   19ba8:	streq	r3, [r4, #12]
   19bac:	beq	19bc0 <argp_parse@@Base+0x2bc8>
   19bb0:	str	fp, [r4, #12]
   19bb4:	ldr	r3, [r4]
   19bb8:	add	r3, r3, #1
   19bbc:	str	r3, [r4]
   19bc0:	mov	r3, #0
   19bc4:	str	r3, [r4, #20]
   19bc8:	b	199c0 <argp_parse@@Base+0x29c8>
   19bcc:	ldr	r3, [r4]
   19bd0:	cmp	r3, r5
   19bd4:	beq	19bec <argp_parse@@Base+0x2bf4>
   19bd8:	add	r2, r3, #1
   19bdc:	str	r2, [r4]
   19be0:	ldr	r3, [r9, r3, lsl #2]
   19be4:	str	r3, [r4, #12]
   19be8:	b	19b90 <argp_parse@@Base+0x2b98>
   19bec:	cmp	r8, #0
   19bf0:	bne	19c0c <argp_parse@@Base+0x2c14>
   19bf4:	ldr	r3, [sp, #28]
   19bf8:	str	r3, [r4, #8]
   19bfc:	ldrb	r7, [r6]
   19c00:	cmp	r7, #58	; 0x3a
   19c04:	movne	r7, #63	; 0x3f
   19c08:	b	19b90 <argp_parse@@Base+0x2b98>
   19c0c:	movw	r0, #50136	; 0xc3d8
   19c10:	movt	r0, #2
   19c14:	ldr	r3, [sp, #28]
   19c18:	ldr	r2, [r9]
   19c1c:	movw	r1, #45440	; 0xb180
   19c20:	movt	r1, #1
   19c24:	ldr	r0, [r0]
   19c28:	bl	112a8 <fprintf@plt>
   19c2c:	b	19bf4 <argp_parse@@Base+0x2bfc>
   19c30:	mvn	r0, #0
   19c34:	b	19c6c <argp_parse@@Base+0x2c74>
   19c38:	mvn	r0, #0
   19c3c:	b	19c6c <argp_parse@@Base+0x2c74>
   19c40:	ldrb	r3, [sl]
   19c44:	cmp	r3, #45	; 0x2d
   19c48:	beq	19904 <argp_parse@@Base+0x290c>
   19c4c:	ldr	r3, [r4, #24]
   19c50:	cmp	r3, #0
   19c54:	beq	19c38 <argp_parse@@Base+0x2c40>
   19c58:	add	r3, r7, #1
   19c5c:	str	r3, [r4]
   19c60:	ldr	r3, [r9, r7, lsl #2]
   19c64:	str	r3, [r4, #12]
   19c68:	mov	r0, #1
   19c6c:	add	sp, sp, #36	; 0x24
   19c70:	ldrd	r4, [sp]
   19c74:	ldrd	r6, [sp, #8]
   19c78:	ldrd	r8, [sp, #16]
   19c7c:	ldrd	sl, [sp, #24]
   19c80:	add	sp, sp, #32
   19c84:	pop	{pc}		; (ldr pc, [sp], #4)
   19c88:	strd	r4, [sp, #-12]!
   19c8c:	str	lr, [sp, #8]
   19c90:	sub	sp, sp, #20
   19c94:	movw	r4, #50208	; 0xc420
   19c98:	movt	r4, #2
   19c9c:	movw	r5, #50112	; 0xc3c0
   19ca0:	movt	r5, #2
   19ca4:	ldr	ip, [r5]
   19ca8:	str	ip, [r4]
   19cac:	ldr	ip, [r5, #4]
   19cb0:	str	ip, [r4, #4]
   19cb4:	ldr	ip, [sp, #40]	; 0x28
   19cb8:	str	ip, [sp, #12]
   19cbc:	str	r4, [sp, #8]
   19cc0:	ldr	ip, [sp, #36]	; 0x24
   19cc4:	str	ip, [sp, #4]
   19cc8:	ldr	ip, [sp, #32]
   19ccc:	str	ip, [sp]
   19cd0:	bl	196cc <argp_parse@@Base+0x26d4>
   19cd4:	ldr	r3, [r4]
   19cd8:	str	r3, [r5]
   19cdc:	movw	r3, #50272	; 0xc460
   19ce0:	movt	r3, #2
   19ce4:	ldr	r2, [r4, #12]
   19ce8:	str	r2, [r3]
   19cec:	ldr	r3, [r4, #8]
   19cf0:	str	r3, [r5, #8]
   19cf4:	add	sp, sp, #20
   19cf8:	ldrd	r4, [sp]
   19cfc:	add	sp, sp, #8
   19d00:	pop	{pc}		; (ldr pc, [sp], #4)
   19d04:	push	{lr}		; (str lr, [sp, #-4]!)
   19d08:	sub	sp, sp, #20
   19d0c:	mov	r3, #1
   19d10:	str	r3, [sp, #8]
   19d14:	mov	r3, #0
   19d18:	str	r3, [sp, #4]
   19d1c:	str	r3, [sp]
   19d20:	bl	19c88 <argp_parse@@Base+0x2c90>
   19d24:	add	sp, sp, #20
   19d28:	pop	{pc}		; (ldr pc, [sp], #4)
   19d2c:	str	r4, [sp, #-8]!
   19d30:	str	lr, [sp, #4]
   19d34:	umull	r2, r3, r1, r2
   19d38:	cmp	r3, #0
   19d3c:	bne	19d54 <argp_parse@@Base+0x2d5c>
   19d40:	mov	r1, r2
   19d44:	bl	1887c <argp_parse@@Base+0x1884>
   19d48:	ldr	r4, [sp]
   19d4c:	add	sp, sp, #4
   19d50:	pop	{pc}		; (ldr pc, [sp], #4)
   19d54:	bl	112b4 <__errno_location@plt>
   19d58:	mov	r3, #12
   19d5c:	str	r3, [r0]
   19d60:	mov	r0, #0
   19d64:	b	19d48 <argp_parse@@Base+0x2d50>
   19d68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19d6c:	mov	r7, r0
   19d70:	ldr	r6, [pc, #72]	; 19dc0 <argp_parse@@Base+0x2dc8>
   19d74:	ldr	r5, [pc, #72]	; 19dc4 <argp_parse@@Base+0x2dcc>
   19d78:	add	r6, pc, r6
   19d7c:	add	r5, pc, r5
   19d80:	sub	r6, r6, r5
   19d84:	mov	r8, r1
   19d88:	mov	r9, r2
   19d8c:	bl	11090 <calloc@plt-0x20>
   19d90:	asrs	r6, r6, #2
   19d94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d98:	mov	r4, #0
   19d9c:	add	r4, r4, #1
   19da0:	ldr	r3, [r5], #4
   19da4:	mov	r2, r9
   19da8:	mov	r1, r8
   19dac:	mov	r0, r7
   19db0:	blx	r3
   19db4:	cmp	r6, r4
   19db8:	bne	19d9c <argp_parse@@Base+0x2da4>
   19dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19dc0:	muleq	r1, r4, r1
   19dc4:	andeq	r2, r1, ip, lsl #3
   19dc8:	bx	lr

Disassembly of section .fini:

00019dcc <.fini>:
   19dcc:	push	{r3, lr}
   19dd0:	pop	{r3, pc}
