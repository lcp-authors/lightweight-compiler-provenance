
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010be8 <.init>:
   10be8:	push	{r3, lr}
   10bec:	bl	111f4 <close@plt+0x3a0>
   10bf0:	pop	{r3, pc}

Disassembly of section .plt:

00010bf4 <calloc@plt-0x14>:
   10bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf8:	ldr	lr, [pc, #4]	; 10c04 <calloc@plt-0x4>
   10bfc:	add	lr, pc, lr
   10c00:	ldr	pc, [lr, #8]!
   10c04:	strdeq	r4, [r1], -ip

00010c08 <calloc@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c14 <fputs_unlocked@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c20 <fsync@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c2c <strcmp@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #996]!	; 0x3e4

00010c38 <fflush@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #988]!	; 0x3dc

00010c44 <free@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c50 <_exit@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #972]!	; 0x3cc

00010c5c <memcpy@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #964]!	; 0x3c4

00010c68 <mbsinit@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #956]!	; 0x3bc

00010c74 <memcmp@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c80 <fputc_unlocked@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #940]!	; 0x3ac

00010c8c <dcgettext@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #932]!	; 0x3a4

00010c98 <syncfs@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #924]!	; 0x39c

00010ca4 <realloc@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #916]!	; 0x394

00010cb0 <textdomain@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #908]!	; 0x38c

00010cbc <iswprint@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #900]!	; 0x384

00010cc8 <lseek64@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #892]!	; 0x37c

00010cd4 <__ctype_get_mb_cur_max@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #884]!	; 0x374

00010ce0 <__fpending@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #876]!	; 0x36c

00010cec <ferror_unlocked@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #868]!	; 0x364

00010cf8 <mbrtowc@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #860]!	; 0x35c

00010d04 <error@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #852]!	; 0x354

00010d10 <open64@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #844]!	; 0x34c

00010d1c <malloc@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #836]!	; 0x344

00010d28 <__libc_start_main@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #828]!	; 0x33c

00010d34 <__freading@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #820]!	; 0x334

00010d40 <__gmon_start__@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #812]!	; 0x32c

00010d4c <getopt_long@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #804]!	; 0x324

00010d58 <__ctype_b_loc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #796]!	; 0x31c

00010d64 <exit@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #788]!	; 0x314

00010d70 <strlen@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #780]!	; 0x30c

00010d7c <__errno_location@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #772]!	; 0x304

00010d88 <__cxa_atexit@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #764]!	; 0x2fc

00010d94 <memset@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #756]!	; 0x2f4

00010da0 <__printf_chk@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #748]!	; 0x2ec

00010dac <fileno@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #740]!	; 0x2e4

00010db8 <__fprintf_chk@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #732]!	; 0x2dc

00010dc4 <fclose@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd0 <fseeko64@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #716]!	; 0x2cc

00010ddc <fcntl64@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #708]!	; 0x2c4

00010de8 <setlocale@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #700]!	; 0x2bc

00010df4 <strrchr@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #692]!	; 0x2b4

00010e00 <nl_langinfo@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #684]!	; 0x2ac

00010e0c <bindtextdomain@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #676]!	; 0x2a4

00010e18 <sync@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #668]!	; 0x29c

00010e24 <fputs@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #660]!	; 0x294

00010e30 <strncmp@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #652]!	; 0x28c

00010e3c <fdatasync@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #644]!	; 0x284

00010e48 <abort@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #636]!	; 0x27c

00010e54 <close@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010e60 <.text>:
   10e60:	push	{r4, lr}
   10e64:	bl	10d7c <__errno_location@plt>
   10e68:	mov	r3, #12
   10e6c:	str	r3, [r0]
   10e70:	mov	r0, #0
   10e74:	pop	{r4, pc}
   10e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e7c:	mov	r9, r0
   10e80:	sub	sp, sp, #28
   10e84:	mov	sl, r1
   10e88:	mov	r5, #0
   10e8c:	mov	r4, r5
   10e90:	mov	r6, r5
   10e94:	ldr	r0, [r1]
   10e98:	bl	117a4 <close@plt+0x950>
   10e9c:	ldr	r1, [pc, #712]	; 1116c <close@plt+0x318>
   10ea0:	mov	r0, #6
   10ea4:	bl	10de8 <setlocale@plt>
   10ea8:	ldr	r1, [pc, #704]	; 11170 <close@plt+0x31c>
   10eac:	ldr	r0, [pc, #704]	; 11174 <close@plt+0x320>
   10eb0:	bl	10e0c <bindtextdomain@plt>
   10eb4:	ldr	r0, [pc, #696]	; 11174 <close@plt+0x320>
   10eb8:	bl	10cb0 <textdomain@plt>
   10ebc:	ldr	r0, [pc, #692]	; 11178 <close@plt+0x324>
   10ec0:	ldr	r8, [pc, #692]	; 1117c <close@plt+0x328>
   10ec4:	ldr	r7, [pc, #692]	; 11180 <close@plt+0x32c>
   10ec8:	bl	13ae0 <close@plt+0x2c8c>
   10ecc:	mov	r3, r8
   10ed0:	mov	r2, r7
   10ed4:	str	r6, [sp]
   10ed8:	mov	r1, sl
   10edc:	mov	r0, r9
   10ee0:	bl	10d4c <getopt_long@plt>
   10ee4:	cmn	r0, #1
   10ee8:	bne	10f1c <close@plt+0xc8>
   10eec:	ldr	r6, [pc, #656]	; 11184 <close@plt+0x330>
   10ef0:	ands	r7, r4, r5
   10ef4:	ldr	r3, [r6]
   10ef8:	beq	10f94 <close@plt+0x140>
   10efc:	ldr	r1, [pc, #644]	; 11188 <close@plt+0x334>
   10f00:	mov	r2, #5
   10f04:	mov	r0, #0
   10f08:	bl	10c8c <dcgettext@plt>
   10f0c:	mov	r2, r0
   10f10:	mov	r1, #0
   10f14:	mov	r0, #1
   10f18:	bl	10d04 <error@plt>
   10f1c:	cmn	r0, #2
   10f20:	beq	10f50 <close@plt+0xfc>
   10f24:	bgt	10f38 <close@plt+0xe4>
   10f28:	cmn	r0, #3
   10f2c:	beq	10f58 <close@plt+0x104>
   10f30:	mov	r0, #1
   10f34:	b	10f54 <close@plt+0x100>
   10f38:	cmp	r0, #100	; 0x64
   10f3c:	beq	10f8c <close@plt+0x138>
   10f40:	cmp	r0, #102	; 0x66
   10f44:	bne	10f30 <close@plt+0xdc>
   10f48:	mov	r5, #1
   10f4c:	b	10ecc <close@plt+0x78>
   10f50:	mov	r0, #0
   10f54:	bl	112a8 <close@plt+0x454>
   10f58:	ldr	r3, [pc, #556]	; 1118c <close@plt+0x338>
   10f5c:	ldr	r0, [pc, #556]	; 11190 <close@plt+0x33c>
   10f60:	ldr	r2, [pc, #556]	; 11194 <close@plt+0x340>
   10f64:	stmib	sp, {r3, r6}
   10f68:	ldr	r3, [pc, #552]	; 11198 <close@plt+0x344>
   10f6c:	ldr	r1, [pc, #552]	; 1119c <close@plt+0x348>
   10f70:	str	r3, [sp]
   10f74:	ldr	r3, [pc, #548]	; 111a0 <close@plt+0x34c>
   10f78:	ldr	r0, [r0]
   10f7c:	ldr	r3, [r3]
   10f80:	bl	131f0 <close@plt+0x239c>
   10f84:	mov	r0, #0
   10f88:	bl	10d64 <exit@plt>
   10f8c:	mov	r4, #1
   10f90:	b	10ecc <close@plt+0x78>
   10f94:	cmp	r3, r9
   10f98:	movlt	r2, #0
   10f9c:	andge	r2, r4, #1
   10fa0:	cmp	r2, #0
   10fa4:	movne	r2, #5
   10fa8:	ldrne	r1, [pc, #500]	; 111a4 <close@plt+0x350>
   10fac:	bne	10f04 <close@plt+0xb0>
   10fb0:	cmp	r3, r9
   10fb4:	blt	10fcc <close@plt+0x178>
   10fb8:	mov	r8, #1
   10fbc:	bl	10e18 <sync@plt>
   10fc0:	eor	r0, r8, #1
   10fc4:	add	sp, sp, #28
   10fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fcc:	cmp	r5, #0
   10fd0:	mov	r8, #1
   10fd4:	movne	r4, #2
   10fd8:	ldr	r3, [r6]
   10fdc:	cmp	r3, r9
   10fe0:	bge	10fc0 <close@plt+0x16c>
   10fe4:	ldr	r7, [sl, r3, lsl #2]
   10fe8:	mov	r1, #2048	; 0x800
   10fec:	mov	r0, r7
   10ff0:	bl	10d10 <open64@plt>
   10ff4:	subs	r5, r0, #0
   10ff8:	bge	11064 <close@plt+0x210>
   10ffc:	bl	10d7c <__errno_location@plt>
   11000:	movw	r1, #2049	; 0x801
   11004:	ldr	fp, [r0]
   11008:	mov	r0, r7
   1100c:	bl	10d10 <open64@plt>
   11010:	subs	r5, r0, #0
   11014:	bge	11064 <close@plt+0x210>
   11018:	mov	r2, #5
   1101c:	ldr	r1, [pc, #388]	; 111a8 <close@plt+0x354>
   11020:	mov	r0, #0
   11024:	bl	10c8c <dcgettext@plt>
   11028:	mov	r5, r0
   1102c:	mov	r1, r7
   11030:	mov	r0, #4
   11034:	bl	12bc0 <close@plt+0x1d6c>
   11038:	mov	r3, r0
   1103c:	mov	r2, r5
   11040:	mov	r1, fp
   11044:	mov	r0, #0
   11048:	mov	fp, #0
   1104c:	bl	10d04 <error@plt>
   11050:	ldr	r3, [r6]
   11054:	and	r8, r8, fp
   11058:	add	r3, r3, #1
   1105c:	str	r3, [r6]
   11060:	b	10fd8 <close@plt+0x184>
   11064:	mov	r1, #3
   11068:	mov	r0, r5
   1106c:	bl	115f4 <close@plt+0x7a0>
   11070:	cmn	r0, #1
   11074:	beq	110ac <close@plt+0x258>
   11078:	bic	r2, r0, #2048	; 0x800
   1107c:	mov	r1, #4
   11080:	mov	r0, r5
   11084:	bl	115f4 <close@plt+0x7a0>
   11088:	cmp	r0, #0
   1108c:	blt	110ac <close@plt+0x258>
   11090:	cmp	r4, #1
   11094:	beq	11138 <close@plt+0x2e4>
   11098:	cmp	r4, #2
   1109c:	beq	11160 <close@plt+0x30c>
   110a0:	mov	r0, r5
   110a4:	bl	10c20 <fsync@plt>
   110a8:	b	11140 <close@plt+0x2ec>
   110ac:	bl	10d7c <__errno_location@plt>
   110b0:	ldr	r1, [pc, #244]	; 111ac <close@plt+0x358>
   110b4:	mov	r2, #5
   110b8:	ldr	fp, [r0]
   110bc:	mov	r0, #0
   110c0:	bl	10c8c <dcgettext@plt>
   110c4:	mov	r2, r0
   110c8:	mov	r1, r7
   110cc:	mov	r0, #4
   110d0:	str	r2, [sp, #20]
   110d4:	bl	12bc0 <close@plt+0x1d6c>
   110d8:	mov	r3, r0
   110dc:	mov	r1, fp
   110e0:	ldr	r2, [sp, #20]
   110e4:	mov	r0, #0
   110e8:	mov	fp, #0
   110ec:	bl	10d04 <error@plt>
   110f0:	mov	r0, r5
   110f4:	bl	10e54 <close@plt>
   110f8:	cmp	r0, #0
   110fc:	bge	11050 <close@plt+0x1fc>
   11100:	bl	10d7c <__errno_location@plt>
   11104:	ldr	r5, [r0]
   11108:	mov	r2, #5
   1110c:	mov	r0, #0
   11110:	ldr	r1, [pc, #152]	; 111b0 <close@plt+0x35c>
   11114:	bl	10c8c <dcgettext@plt>
   11118:	mov	fp, r0
   1111c:	mov	r1, r7
   11120:	mov	r0, #4
   11124:	bl	12bc0 <close@plt+0x1d6c>
   11128:	mov	r3, r0
   1112c:	mov	r2, fp
   11130:	mov	r1, r5
   11134:	b	11044 <close@plt+0x1f0>
   11138:	mov	r0, r5
   1113c:	bl	10e3c <fdatasync@plt>
   11140:	cmp	r0, #0
   11144:	movge	fp, #1
   11148:	bge	110f0 <close@plt+0x29c>
   1114c:	bl	10d7c <__errno_location@plt>
   11150:	mov	r2, #5
   11154:	ldr	r1, [pc, #88]	; 111b4 <close@plt+0x360>
   11158:	ldr	fp, [r0]
   1115c:	b	110bc <close@plt+0x268>
   11160:	mov	r0, r5
   11164:	bl	10c98 <syncfs@plt>
   11168:	b	11140 <close@plt+0x2ec>
   1116c:	andeq	r3, r1, lr, asr ip
   11170:	andeq	r3, r1, r3, lsr lr
   11174:	muleq	r1, r0, sp
   11178:	andeq	r1, r1, r0, lsr #10
   1117c:	andeq	r3, r1, ip, lsr fp
   11180:	andeq	r3, r1, sl, ror #28
   11184:	andeq	r5, r2, r0, lsr r1
   11188:	andeq	r3, r1, sp, ror #28
   1118c:	andeq	r3, r1, fp, asr #28
   11190:	andeq	r5, r2, ip, lsr r1
   11194:	andeq	r3, r1, ip, lsl #27
   11198:	andeq	r3, r1, sp, asr lr
   1119c:	andeq	r3, r1, ip, lsl #23
   111a0:	andeq	r5, r2, r0, ror #1
   111a4:	muleq	r1, sl, lr
   111a8:			; <UNDEFINED> instruction: 0x00013ebd
   111ac:	andeq	r3, r1, lr, asr #29
   111b0:	andeq	r3, r1, r3, lsl #30
   111b4:	strdeq	r3, [r1], -r2
   111b8:	mov	fp, #0
   111bc:	mov	lr, #0
   111c0:	pop	{r1}		; (ldr r1, [sp], #4)
   111c4:	mov	r2, sp
   111c8:	push	{r2}		; (str r2, [sp, #-4]!)
   111cc:	push	{r0}		; (str r0, [sp, #-4]!)
   111d0:	ldr	ip, [pc, #16]	; 111e8 <close@plt+0x394>
   111d4:	push	{ip}		; (str ip, [sp, #-4]!)
   111d8:	ldr	r0, [pc, #12]	; 111ec <close@plt+0x398>
   111dc:	ldr	r3, [pc, #12]	; 111f0 <close@plt+0x39c>
   111e0:	bl	10d28 <__libc_start_main@plt>
   111e4:	bl	10e48 <abort@plt>
   111e8:	ldrdeq	r3, [r1], -ip
   111ec:	andeq	r0, r1, r8, ror lr
   111f0:	andeq	r3, r1, ip, ror sl
   111f4:	ldr	r3, [pc, #20]	; 11210 <close@plt+0x3bc>
   111f8:	ldr	r2, [pc, #20]	; 11214 <close@plt+0x3c0>
   111fc:	add	r3, pc, r3
   11200:	ldr	r2, [r3, r2]
   11204:	cmp	r2, #0
   11208:	bxeq	lr
   1120c:	b	10d40 <__gmon_start__@plt>
   11210:	strdeq	r3, [r1], -ip
   11214:	ldrdeq	r0, [r0], -r4
   11218:	ldr	r0, [pc, #24]	; 11238 <close@plt+0x3e4>
   1121c:	ldr	r3, [pc, #24]	; 1123c <close@plt+0x3e8>
   11220:	cmp	r3, r0
   11224:	bxeq	lr
   11228:	ldr	r3, [pc, #16]	; 11240 <close@plt+0x3ec>
   1122c:	cmp	r3, #0
   11230:	bxeq	lr
   11234:	bx	r3
   11238:	andeq	r5, r2, r8, lsr #2
   1123c:	andeq	r5, r2, r8, lsr #2
   11240:	andeq	r0, r0, r0
   11244:	ldr	r0, [pc, #36]	; 11270 <close@plt+0x41c>
   11248:	ldr	r1, [pc, #36]	; 11274 <close@plt+0x420>
   1124c:	sub	r1, r1, r0
   11250:	asr	r1, r1, #2
   11254:	add	r1, r1, r1, lsr #31
   11258:	asrs	r1, r1, #1
   1125c:	bxeq	lr
   11260:	ldr	r3, [pc, #16]	; 11278 <close@plt+0x424>
   11264:	cmp	r3, #0
   11268:	bxeq	lr
   1126c:	bx	r3
   11270:	andeq	r5, r2, r8, lsr #2
   11274:	andeq	r5, r2, r8, lsr #2
   11278:	andeq	r0, r0, r0
   1127c:	push	{r4, lr}
   11280:	ldr	r4, [pc, #24]	; 112a0 <close@plt+0x44c>
   11284:	ldrb	r3, [r4]
   11288:	cmp	r3, #0
   1128c:	popne	{r4, pc}
   11290:	bl	11218 <close@plt+0x3c4>
   11294:	mov	r3, #1
   11298:	strb	r3, [r4]
   1129c:	pop	{r4, pc}
   112a0:	andeq	r5, r2, r0, asr #2
   112a4:	b	11244 <close@plt+0x3f0>
   112a8:	subs	r5, r0, #0
   112ac:	push	{r7, lr}
   112b0:	sub	sp, sp, #56	; 0x38
   112b4:	ldr	r4, [pc, #496]	; 114ac <close@plt+0x658>
   112b8:	beq	112f0 <close@plt+0x49c>
   112bc:	mov	r2, #5
   112c0:	mov	r0, #0
   112c4:	ldr	r3, [pc, #484]	; 114b0 <close@plt+0x65c>
   112c8:	ldr	r1, [pc, #484]	; 114b4 <close@plt+0x660>
   112cc:	ldr	r6, [r3]
   112d0:	bl	10c8c <dcgettext@plt>
   112d4:	mov	r2, r0
   112d8:	mov	r1, #1
   112dc:	ldr	r3, [r4]
   112e0:	mov	r0, r6
   112e4:	bl	10db8 <__fprintf_chk@plt>
   112e8:	mov	r0, r5
   112ec:	bl	10d64 <exit@plt>
   112f0:	mov	r2, #5
   112f4:	ldr	r1, [pc, #444]	; 114b8 <close@plt+0x664>
   112f8:	mov	r6, sp
   112fc:	bl	10c8c <dcgettext@plt>
   11300:	ldr	r2, [r4]
   11304:	mov	r1, r0
   11308:	mov	r0, #1
   1130c:	bl	10da0 <__printf_chk@plt>
   11310:	ldr	r4, [pc, #420]	; 114bc <close@plt+0x668>
   11314:	mov	r2, #5
   11318:	mov	r0, r5
   1131c:	ldr	r1, [pc, #412]	; 114c0 <close@plt+0x66c>
   11320:	bl	10c8c <dcgettext@plt>
   11324:	ldr	r7, [pc, #408]	; 114c4 <close@plt+0x670>
   11328:	ldr	r1, [r4]
   1132c:	bl	10c14 <fputs_unlocked@plt>
   11330:	mov	r2, #5
   11334:	ldr	r1, [pc, #396]	; 114c8 <close@plt+0x674>
   11338:	mov	r0, r5
   1133c:	bl	10c8c <dcgettext@plt>
   11340:	ldr	r1, [r4]
   11344:	bl	10c14 <fputs_unlocked@plt>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #376]	; 114cc <close@plt+0x678>
   11350:	mov	r0, r5
   11354:	bl	10c8c <dcgettext@plt>
   11358:	ldr	r1, [r4]
   1135c:	bl	10c14 <fputs_unlocked@plt>
   11360:	mov	r2, #5
   11364:	ldr	r1, [pc, #356]	; 114d0 <close@plt+0x67c>
   11368:	mov	r0, r5
   1136c:	bl	10c8c <dcgettext@plt>
   11370:	ldr	r1, [r4]
   11374:	bl	10c14 <fputs_unlocked@plt>
   11378:	mov	r2, #5
   1137c:	ldr	r1, [pc, #336]	; 114d4 <close@plt+0x680>
   11380:	mov	r0, r5
   11384:	bl	10c8c <dcgettext@plt>
   11388:	ldr	r1, [r4]
   1138c:	bl	10c14 <fputs_unlocked@plt>
   11390:	ldr	lr, [pc, #320]	; 114d8 <close@plt+0x684>
   11394:	mov	ip, sp
   11398:	ldm	lr!, {r0, r1, r2, r3}
   1139c:	stmia	ip!, {r0, r1, r2, r3}
   113a0:	ldm	lr!, {r0, r1, r2, r3}
   113a4:	stmia	ip!, {r0, r1, r2, r3}
   113a8:	ldm	lr!, {r0, r1, r2, r3}
   113ac:	stmia	ip!, {r0, r1, r2, r3}
   113b0:	ldm	lr, {r0, r1}
   113b4:	stm	ip, {r0, r1}
   113b8:	ldr	r1, [r6]
   113bc:	cmp	r1, #0
   113c0:	bne	11464 <close@plt+0x610>
   113c4:	ldr	r6, [r6, #4]
   113c8:	mov	r2, #5
   113cc:	mov	r0, #0
   113d0:	ldr	r7, [pc, #236]	; 114c4 <close@plt+0x670>
   113d4:	ldr	r1, [pc, #256]	; 114dc <close@plt+0x688>
   113d8:	cmp	r6, #0
   113dc:	moveq	r6, r7
   113e0:	bl	10c8c <dcgettext@plt>
   113e4:	mov	r1, r0
   113e8:	ldr	r3, [pc, #240]	; 114e0 <close@plt+0x68c>
   113ec:	mov	r0, #1
   113f0:	ldr	r2, [pc, #236]	; 114e4 <close@plt+0x690>
   113f4:	bl	10da0 <__printf_chk@plt>
   113f8:	mov	r1, #0
   113fc:	mov	r0, #5
   11400:	bl	10de8 <setlocale@plt>
   11404:	cmp	r0, #0
   11408:	bne	1147c <close@plt+0x628>
   1140c:	mov	r2, #5
   11410:	ldr	r1, [pc, #208]	; 114e8 <close@plt+0x694>
   11414:	mov	r0, #0
   11418:	bl	10c8c <dcgettext@plt>
   1141c:	mov	r1, r0
   11420:	ldr	r3, [pc, #156]	; 114c4 <close@plt+0x670>
   11424:	mov	r0, #1
   11428:	ldr	r2, [pc, #176]	; 114e0 <close@plt+0x68c>
   1142c:	bl	10da0 <__printf_chk@plt>
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #176]	; 114ec <close@plt+0x698>
   11438:	mov	r0, #0
   1143c:	bl	10c8c <dcgettext@plt>
   11440:	ldr	r2, [pc, #168]	; 114f0 <close@plt+0x69c>
   11444:	cmp	r6, r7
   11448:	mov	r1, r0
   1144c:	mov	r0, #1
   11450:	ldr	r3, [pc, #156]	; 114f4 <close@plt+0x6a0>
   11454:	moveq	r3, r2
   11458:	mov	r2, r6
   1145c:	bl	10da0 <__printf_chk@plt>
   11460:	b	112e8 <close@plt+0x494>
   11464:	mov	r0, r7
   11468:	bl	10c2c <strcmp@plt>
   1146c:	cmp	r0, #0
   11470:	beq	113c4 <close@plt+0x570>
   11474:	add	r6, r6, #8
   11478:	b	113b8 <close@plt+0x564>
   1147c:	mov	r2, #3
   11480:	ldr	r1, [pc, #112]	; 114f8 <close@plt+0x6a4>
   11484:	bl	10e30 <strncmp@plt>
   11488:	cmp	r0, #0
   1148c:	beq	1140c <close@plt+0x5b8>
   11490:	mov	r2, #5
   11494:	ldr	r1, [pc, #96]	; 114fc <close@plt+0x6a8>
   11498:	mov	r0, #0
   1149c:	bl	10c8c <dcgettext@plt>
   114a0:	ldr	r1, [r4]
   114a4:	bl	10c14 <fputs_unlocked@plt>
   114a8:	b	1140c <close@plt+0x5b8>
   114ac:	andeq	r5, r2, r0, asr r1
   114b0:	andeq	r5, r2, r8, lsr r1
   114b4:	muleq	r1, r1, fp
   114b8:			; <UNDEFINED> instruction: 0x00013bb8
   114bc:	andeq	r5, r2, ip, lsr r1
   114c0:	ldrdeq	r3, [r1], -r6
   114c4:	andeq	r3, r1, ip, lsl #23
   114c8:	andeq	r3, r1, pc, asr ip
   114cc:	andeq	r3, r1, r3, lsr #25
   114d0:	andeq	r3, r1, sl, ror #25
   114d4:	andeq	r3, r1, r7, lsl sp
   114d8:	andeq	r3, r1, r4, lsl #22
   114dc:	andeq	r3, r1, sp, asr #26
   114e0:	andeq	r3, r1, r4, ror #26
   114e4:	andeq	r3, r1, ip, lsl #27
   114e8:	andeq	r3, r1, r5, ror #27
   114ec:	andeq	r3, r1, r0, lsl #28
   114f0:	andeq	r3, r1, r2, lsr pc
   114f4:	andeq	r3, r1, lr, asr ip
   114f8:	muleq	r1, sl, sp
   114fc:	muleq	r1, lr, sp
   11500:	ldr	r3, [pc, #4]	; 1150c <close@plt+0x6b8>
   11504:	str	r0, [r3]
   11508:	bx	lr
   1150c:	andeq	r5, r2, r4, asr #2
   11510:	ldr	r3, [pc, #4]	; 1151c <close@plt+0x6c8>
   11514:	strb	r0, [r3, #4]
   11518:	bx	lr
   1151c:	andeq	r5, r2, r4, asr #2
   11520:	ldr	r3, [pc, #176]	; 115d8 <close@plt+0x784>
   11524:	push	{r0, r1, r4, r5, r6, lr}
   11528:	ldr	r0, [r3]
   1152c:	bl	13674 <close@plt+0x2820>
   11530:	cmp	r0, #0
   11534:	beq	115bc <close@plt+0x768>
   11538:	ldr	r4, [pc, #156]	; 115dc <close@plt+0x788>
   1153c:	bl	10d7c <__errno_location@plt>
   11540:	mov	r5, r0
   11544:	ldrb	r6, [r4, #4]
   11548:	cmp	r6, #0
   1154c:	beq	1155c <close@plt+0x708>
   11550:	ldr	r3, [r0]
   11554:	cmp	r3, #32
   11558:	beq	115bc <close@plt+0x768>
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #120]	; 115e0 <close@plt+0x78c>
   11564:	mov	r0, #0
   11568:	bl	10c8c <dcgettext@plt>
   1156c:	mov	r6, r0
   11570:	ldr	r0, [r4]
   11574:	cmp	r0, #0
   11578:	beq	115a8 <close@plt+0x754>
   1157c:	ldr	r4, [r5]
   11580:	bl	12c54 <close@plt+0x1e00>
   11584:	mov	r3, r0
   11588:	ldr	r2, [pc, #84]	; 115e4 <close@plt+0x790>
   1158c:	mov	r0, #0
   11590:	str	r6, [sp]
   11594:	mov	r1, r4
   11598:	bl	10d04 <error@plt>
   1159c:	ldr	r3, [pc, #68]	; 115e8 <close@plt+0x794>
   115a0:	ldr	r0, [r3]
   115a4:	bl	10c50 <_exit@plt>
   115a8:	mov	r3, r6
   115ac:	ldr	r2, [pc, #56]	; 115ec <close@plt+0x798>
   115b0:	ldr	r1, [r5]
   115b4:	bl	10d04 <error@plt>
   115b8:	b	1159c <close@plt+0x748>
   115bc:	ldr	r3, [pc, #44]	; 115f0 <close@plt+0x79c>
   115c0:	ldr	r0, [r3]
   115c4:	bl	13674 <close@plt+0x2820>
   115c8:	cmp	r0, #0
   115cc:	bne	1159c <close@plt+0x748>
   115d0:	add	sp, sp, #8
   115d4:	pop	{r4, r5, r6, pc}
   115d8:	andeq	r5, r2, ip, lsr r1
   115dc:	andeq	r5, r2, r4, asr #2
   115e0:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   115e4:	andeq	r3, r1, r2, lsr #31
   115e8:	andeq	r5, r2, r4, ror #1
   115ec:	andeq	r3, r1, r6, lsr #31
   115f0:	andeq	r5, r2, r8, lsr r1
   115f4:	push	{r1, r2, r3}
   115f8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   115fc:	add	r2, sp, #40	; 0x28
   11600:	ldr	r1, [sp, #36]	; 0x24
   11604:	str	r2, [sp, #4]
   11608:	cmp	r1, #0
   1160c:	beq	1165c <close@plt+0x808>
   11610:	movw	r3, #1030	; 0x406
   11614:	mov	r5, r0
   11618:	cmp	r1, r3
   1161c:	beq	11668 <close@plt+0x814>
   11620:	cmp	r1, #11
   11624:	beq	1164c <close@plt+0x7f8>
   11628:	bgt	1175c <close@plt+0x908>
   1162c:	cmp	r1, #4
   11630:	beq	11774 <close@plt+0x920>
   11634:	bgt	11754 <close@plt+0x900>
   11638:	cmp	r1, #2
   1163c:	beq	11774 <close@plt+0x920>
   11640:	bgt	1164c <close@plt+0x7f8>
   11644:	cmp	r1, #1
   11648:	bne	11774 <close@plt+0x920>
   1164c:	mov	r0, r5
   11650:	bl	10ddc <fcntl64@plt>
   11654:	mov	r4, r0
   11658:	b	116b0 <close@plt+0x85c>
   1165c:	ldr	r2, [sp, #40]	; 0x28
   11660:	bl	10ddc <fcntl64@plt>
   11664:	b	11654 <close@plt+0x800>
   11668:	ldr	r6, [pc, #304]	; 117a0 <close@plt+0x94c>
   1166c:	add	r3, sp, #44	; 0x2c
   11670:	str	r3, [sp, #4]
   11674:	ldr	r7, [r2]
   11678:	ldr	r3, [r6]
   1167c:	mov	r8, r6
   11680:	mov	r2, r7
   11684:	cmp	r3, #0
   11688:	blt	11718 <close@plt+0x8c4>
   1168c:	bl	10ddc <fcntl64@plt>
   11690:	subs	r4, r0, #0
   11694:	bge	116a8 <close@plt+0x854>
   11698:	bl	10d7c <__errno_location@plt>
   1169c:	ldr	r3, [r0]
   116a0:	cmp	r3, #22
   116a4:	beq	116c4 <close@plt+0x870>
   116a8:	mov	r3, #1
   116ac:	str	r3, [r8]
   116b0:	mov	r0, r4
   116b4:	add	sp, sp, #12
   116b8:	pop	{r4, r5, r6, r7, r8, lr}
   116bc:	add	sp, sp, #12
   116c0:	bx	lr
   116c4:	mov	r2, r7
   116c8:	mov	r1, #0
   116cc:	mov	r0, r5
   116d0:	bl	10ddc <fcntl64@plt>
   116d4:	subs	r4, r0, #0
   116d8:	mvnge	r3, #0
   116dc:	strge	r3, [r6]
   116e0:	blt	116b0 <close@plt+0x85c>
   116e4:	mov	r1, #1
   116e8:	mov	r0, r4
   116ec:	bl	10ddc <fcntl64@plt>
   116f0:	subs	r2, r0, #0
   116f4:	bge	11738 <close@plt+0x8e4>
   116f8:	bl	10d7c <__errno_location@plt>
   116fc:	mov	r5, r0
   11700:	mov	r0, r4
   11704:	ldr	r6, [r5]
   11708:	mvn	r4, #0
   1170c:	bl	10e54 <close@plt>
   11710:	str	r6, [r5]
   11714:	b	116b0 <close@plt+0x85c>
   11718:	mov	r1, #0
   1171c:	bl	10ddc <fcntl64@plt>
   11720:	subs	r4, r0, #0
   11724:	blt	116b0 <close@plt+0x85c>
   11728:	ldr	r3, [r6]
   1172c:	cmn	r3, #1
   11730:	bne	116b0 <close@plt+0x85c>
   11734:	b	116e4 <close@plt+0x890>
   11738:	orr	r2, r2, #1
   1173c:	mov	r1, #2
   11740:	mov	r0, r4
   11744:	bl	10ddc <fcntl64@plt>
   11748:	cmn	r0, #1
   1174c:	bne	116b0 <close@plt+0x85c>
   11750:	b	116f8 <close@plt+0x8a4>
   11754:	cmp	r1, #9
   11758:	b	11648 <close@plt+0x7f4>
   1175c:	movw	r2, #1031	; 0x407
   11760:	cmp	r1, r2
   11764:	bgt	11784 <close@plt+0x930>
   11768:	cmp	r1, r3
   1176c:	movwlt	r3, #1025	; 0x401
   11770:	blt	11798 <close@plt+0x944>
   11774:	ldr	r3, [sp, #4]
   11778:	mov	r0, r5
   1177c:	ldr	r2, [r3]
   11780:	b	11660 <close@plt+0x80c>
   11784:	movw	r3, #1033	; 0x409
   11788:	cmp	r1, r3
   1178c:	beq	11774 <close@plt+0x920>
   11790:	blt	1164c <close@plt+0x7f8>
   11794:	movw	r3, #1034	; 0x40a
   11798:	cmp	r1, r3
   1179c:	b	11648 <close@plt+0x7f4>
   117a0:	andeq	r5, r2, ip, asr #2
   117a4:	push	{r4, r5, r6, lr}
   117a8:	subs	r4, r0, #0
   117ac:	bne	117c4 <close@plt+0x970>
   117b0:	ldr	r3, [pc, #124]	; 11834 <close@plt+0x9e0>
   117b4:	ldr	r0, [pc, #124]	; 11838 <close@plt+0x9e4>
   117b8:	ldr	r1, [r3]
   117bc:	bl	10e24 <fputs@plt>
   117c0:	bl	10e48 <abort@plt>
   117c4:	mov	r1, #47	; 0x2f
   117c8:	bl	10df4 <strrchr@plt>
   117cc:	subs	r6, r0, #0
   117d0:	beq	11820 <close@plt+0x9cc>
   117d4:	add	r5, r6, #1
   117d8:	sub	r3, r5, r4
   117dc:	cmp	r3, #6
   117e0:	ble	11820 <close@plt+0x9cc>
   117e4:	mov	r2, #7
   117e8:	ldr	r1, [pc, #76]	; 1183c <close@plt+0x9e8>
   117ec:	sub	r0, r6, #6
   117f0:	bl	10e30 <strncmp@plt>
   117f4:	cmp	r0, #0
   117f8:	bne	11820 <close@plt+0x9cc>
   117fc:	mov	r2, #3
   11800:	ldr	r1, [pc, #56]	; 11840 <close@plt+0x9ec>
   11804:	mov	r0, r5
   11808:	bl	10e30 <strncmp@plt>
   1180c:	cmp	r0, #0
   11810:	ldreq	r3, [pc, #44]	; 11844 <close@plt+0x9f0>
   11814:	addeq	r4, r6, #4
   11818:	movne	r4, r5
   1181c:	streq	r4, [r3]
   11820:	ldr	r3, [pc, #32]	; 11848 <close@plt+0x9f4>
   11824:	str	r4, [r3]
   11828:	ldr	r3, [pc, #28]	; 1184c <close@plt+0x9f8>
   1182c:	str	r4, [r3]
   11830:	pop	{r4, r5, r6, pc}
   11834:	andeq	r5, r2, r8, lsr r1
   11838:	andeq	r3, r1, r9, lsr #31
   1183c:	andeq	r3, r1, r1, ror #31
   11840:	andeq	r3, r1, r9, ror #31
   11844:	andeq	r5, r2, r8, lsr #2
   11848:	andeq	r5, r2, r0, asr r1
   1184c:	andeq	r5, r2, ip, lsr #2
   11850:	push	{r4, lr}
   11854:	mov	r2, #48	; 0x30
   11858:	mov	r4, r1
   1185c:	mov	r1, #0
   11860:	bl	10d94 <memset@plt>
   11864:	cmp	r4, #10
   11868:	bne	11870 <close@plt+0xa1c>
   1186c:	bl	10e48 <abort@plt>
   11870:	str	r4, [r0]
   11874:	pop	{r4, pc}
   11878:	push	{r4, r5, r6, lr}
   1187c:	mov	r2, #5
   11880:	mov	r6, r0
   11884:	mov	r5, r1
   11888:	mov	r1, r0
   1188c:	mov	r0, #0
   11890:	bl	10c8c <dcgettext@plt>
   11894:	cmp	r6, r0
   11898:	mov	r4, r0
   1189c:	bne	1190c <close@plt+0xab8>
   118a0:	bl	138ec <close@plt+0x2a98>
   118a4:	ldrb	r3, [r0]
   118a8:	bic	r3, r3, #32
   118ac:	cmp	r3, #85	; 0x55
   118b0:	bne	11914 <close@plt+0xac0>
   118b4:	ldrb	r3, [r0, #1]
   118b8:	bic	r3, r3, #32
   118bc:	cmp	r3, #84	; 0x54
   118c0:	bne	11984 <close@plt+0xb30>
   118c4:	ldrb	r3, [r0, #2]
   118c8:	bic	r3, r3, #32
   118cc:	cmp	r3, #70	; 0x46
   118d0:	bne	11984 <close@plt+0xb30>
   118d4:	ldrb	r3, [r0, #3]
   118d8:	cmp	r3, #45	; 0x2d
   118dc:	bne	11984 <close@plt+0xb30>
   118e0:	ldrb	r3, [r0, #4]
   118e4:	cmp	r3, #56	; 0x38
   118e8:	bne	11984 <close@plt+0xb30>
   118ec:	ldrb	r3, [r0, #5]
   118f0:	cmp	r3, #0
   118f4:	bne	11984 <close@plt+0xb30>
   118f8:	ldrb	r2, [r4]
   118fc:	ldr	r3, [pc, #144]	; 11994 <close@plt+0xb40>
   11900:	ldr	r4, [pc, #144]	; 11998 <close@plt+0xb44>
   11904:	cmp	r2, #96	; 0x60
   11908:	movne	r4, r3
   1190c:	mov	r0, r4
   11910:	pop	{r4, r5, r6, pc}
   11914:	cmp	r3, #71	; 0x47
   11918:	bne	11984 <close@plt+0xb30>
   1191c:	ldrb	r3, [r0, #1]
   11920:	bic	r3, r3, #32
   11924:	cmp	r3, #66	; 0x42
   11928:	bne	11984 <close@plt+0xb30>
   1192c:	ldrb	r3, [r0, #2]
   11930:	cmp	r3, #49	; 0x31
   11934:	bne	11984 <close@plt+0xb30>
   11938:	ldrb	r3, [r0, #3]
   1193c:	cmp	r3, #56	; 0x38
   11940:	bne	11984 <close@plt+0xb30>
   11944:	ldrb	r3, [r0, #4]
   11948:	cmp	r3, #48	; 0x30
   1194c:	bne	11984 <close@plt+0xb30>
   11950:	ldrb	r3, [r0, #5]
   11954:	cmp	r3, #51	; 0x33
   11958:	bne	11984 <close@plt+0xb30>
   1195c:	ldrb	r3, [r0, #6]
   11960:	cmp	r3, #48	; 0x30
   11964:	bne	11984 <close@plt+0xb30>
   11968:	ldrb	r3, [r0, #7]
   1196c:	cmp	r3, #0
   11970:	bne	11984 <close@plt+0xb30>
   11974:	ldrb	r2, [r4]
   11978:	ldr	r3, [pc, #28]	; 1199c <close@plt+0xb48>
   1197c:	ldr	r4, [pc, #28]	; 119a0 <close@plt+0xb4c>
   11980:	b	11904 <close@plt+0xab0>
   11984:	ldr	r4, [pc, #24]	; 119a4 <close@plt+0xb50>
   11988:	cmp	r5, #9
   1198c:	ldr	r3, [pc, #20]	; 119a8 <close@plt+0xb54>
   11990:	b	11908 <close@plt+0xab4>
   11994:	andeq	r4, r1, r6, asr #32
   11998:	andeq	r4, r1, r1, asr r0
   1199c:	andeq	r4, r1, sl, asr #32
   119a0:	andeq	r4, r1, sp, asr #32
   119a4:	andeq	r4, r1, r4, asr #32
   119a8:	andeq	r4, r1, r5, asr r0
   119ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119b0:	sub	sp, sp, #108	; 0x6c
   119b4:	mov	r8, r0
   119b8:	mov	r5, r1
   119bc:	mov	r6, #0
   119c0:	str	r3, [sp, #40]	; 0x28
   119c4:	str	r2, [sp, #48]	; 0x30
   119c8:	ldr	sl, [sp, #144]	; 0x90
   119cc:	bl	10cd4 <__ctype_get_mb_cur_max@plt>
   119d0:	ldr	r3, [sp, #148]	; 0x94
   119d4:	str	r6, [sp, #24]
   119d8:	str	r6, [sp, #32]
   119dc:	str	r6, [sp, #44]	; 0x2c
   119e0:	str	r6, [sp, #52]	; 0x34
   119e4:	ubfx	r7, r3, #1, #1
   119e8:	mov	r3, #1
   119ec:	str	r6, [sp, #60]	; 0x3c
   119f0:	str	r3, [sp, #72]	; 0x48
   119f4:	str	r0, [sp, #76]	; 0x4c
   119f8:	cmp	sl, #10
   119fc:	ldrls	pc, [pc, sl, lsl #2]
   11a00:	b	11c44 <close@plt+0xdf0>
   11a04:	andeq	r1, r1, r0, lsr sl
   11a08:	andeq	r1, r1, ip, asr ip
   11a0c:	andeq	r1, r1, r0, ror #23
   11a10:	strdeq	r1, [r1], -r8
   11a14:	andeq	r1, r1, r8, asr #23
   11a18:	andeq	r1, r1, r0, lsr #22
   11a1c:	andeq	r1, r1, r0, lsl #22
   11a20:	andeq	r1, r1, r8, asr #24
   11a24:	andeq	r1, r1, r0, asr fp
   11a28:	andeq	r1, r1, r0, asr fp
   11a2c:	andeq	r1, r1, r0, asr fp
   11a30:	mov	r4, sl
   11a34:	mov	r7, #0
   11a38:	mov	r9, r5
   11a3c:	mov	r3, #0
   11a40:	str	r6, [sp, #68]	; 0x44
   11a44:	str	r3, [sp, #28]
   11a48:	ldr	r3, [sp, #40]	; 0x28
   11a4c:	cmn	r3, #1
   11a50:	bne	125f0 <close@plt+0x179c>
   11a54:	ldr	r2, [sp, #28]
   11a58:	ldr	r3, [sp, #48]	; 0x30
   11a5c:	ldrb	r3, [r3, r2]
   11a60:	adds	r3, r3, #0
   11a64:	movne	r3, #1
   11a68:	str	r3, [sp, #36]	; 0x24
   11a6c:	ldr	r3, [sp, #36]	; 0x24
   11a70:	cmp	r3, #0
   11a74:	bne	11c80 <close@plt+0xe2c>
   11a78:	sub	r3, sl, #2
   11a7c:	cmp	r4, #0
   11a80:	clz	r3, r3
   11a84:	movne	r2, #0
   11a88:	lsr	r3, r3, #5
   11a8c:	andeq	r2, r3, r7
   11a90:	cmp	r2, #0
   11a94:	bne	11e44 <close@plt+0xff0>
   11a98:	eor	r7, r7, #1
   11a9c:	ands	r3, r3, r7
   11aa0:	beq	12668 <close@plt+0x1814>
   11aa4:	ldr	r2, [sp, #68]	; 0x44
   11aa8:	cmp	r2, #0
   11aac:	beq	12630 <close@plt+0x17dc>
   11ab0:	ldr	r3, [sp, #72]	; 0x48
   11ab4:	cmp	r3, #0
   11ab8:	beq	12604 <close@plt+0x17b0>
   11abc:	ldr	r2, [sp, #48]	; 0x30
   11ac0:	ldr	r3, [sp, #160]	; 0xa0
   11ac4:	ldr	r1, [sp, #60]	; 0x3c
   11ac8:	str	r3, [sp, #16]
   11acc:	ldr	r3, [sp, #156]	; 0x9c
   11ad0:	str	r3, [sp, #12]
   11ad4:	ldr	r3, [sp, #152]	; 0x98
   11ad8:	str	r3, [sp, #8]
   11adc:	ldr	r3, [sp, #148]	; 0x94
   11ae0:	str	r3, [sp, #4]
   11ae4:	mov	r3, #5
   11ae8:	str	r3, [sp]
   11aec:	ldr	r3, [sp, #40]	; 0x28
   11af0:	mov	r0, r8
   11af4:	bl	119ac <close@plt+0xb58>
   11af8:	mov	r4, r0
   11afc:	b	1265c <close@plt+0x1808>
   11b00:	ldr	r3, [pc, #2948]	; 1268c <close@plt+0x1838>
   11b04:	mov	r7, #1
   11b08:	mov	r4, #0
   11b0c:	mov	sl, #5
   11b10:	str	r7, [sp, #24]
   11b14:	str	r7, [sp, #32]
   11b18:	str	r3, [sp, #44]	; 0x2c
   11b1c:	b	11a38 <close@plt+0xbe4>
   11b20:	cmp	r7, #0
   11b24:	bne	11c68 <close@plt+0xe14>
   11b28:	cmp	r5, #0
   11b2c:	mov	r4, #1
   11b30:	movne	r3, #34	; 0x22
   11b34:	strbne	r3, [r8]
   11b38:	mov	r3, #1
   11b3c:	str	r3, [sp, #24]
   11b40:	str	r3, [sp, #32]
   11b44:	ldr	r3, [pc, #2880]	; 1268c <close@plt+0x1838>
   11b48:	str	r3, [sp, #44]	; 0x2c
   11b4c:	b	11a38 <close@plt+0xbe4>
   11b50:	cmp	sl, #10
   11b54:	beq	11b78 <close@plt+0xd24>
   11b58:	mov	r1, sl
   11b5c:	ldr	r0, [pc, #2860]	; 12690 <close@plt+0x183c>
   11b60:	bl	11878 <close@plt+0xa24>
   11b64:	mov	r1, sl
   11b68:	str	r0, [sp, #156]	; 0x9c
   11b6c:	ldr	r0, [pc, #2848]	; 12694 <close@plt+0x1840>
   11b70:	bl	11878 <close@plt+0xa24>
   11b74:	str	r0, [sp, #160]	; 0xa0
   11b78:	cmp	r7, #0
   11b7c:	moveq	r4, r7
   11b80:	beq	11b98 <close@plt+0xd44>
   11b84:	mov	r4, #0
   11b88:	b	11ba8 <close@plt+0xd54>
   11b8c:	cmp	r5, r4
   11b90:	strbhi	r3, [r8, r4]
   11b94:	add	r4, r4, #1
   11b98:	ldr	r3, [sp, #156]	; 0x9c
   11b9c:	ldrb	r3, [r3, r4]
   11ba0:	cmp	r3, #0
   11ba4:	bne	11b8c <close@plt+0xd38>
   11ba8:	ldr	r0, [sp, #160]	; 0xa0
   11bac:	bl	10d70 <strlen@plt>
   11bb0:	ldr	r3, [sp, #160]	; 0xa0
   11bb4:	str	r0, [sp, #32]
   11bb8:	str	r3, [sp, #44]	; 0x2c
   11bbc:	mov	r3, #1
   11bc0:	str	r3, [sp, #24]
   11bc4:	b	11a38 <close@plt+0xbe4>
   11bc8:	mov	r3, #1
   11bcc:	cmp	r7, #0
   11bd0:	streq	r3, [sp, #24]
   11bd4:	beq	11c18 <close@plt+0xdc4>
   11bd8:	str	r3, [sp, #32]
   11bdc:	b	11c04 <close@plt+0xdb0>
   11be0:	cmp	r7, #0
   11be4:	beq	11c18 <close@plt+0xdc4>
   11be8:	mov	r3, #1
   11bec:	str	r3, [sp, #32]
   11bf0:	ldr	r3, [pc, #2716]	; 12694 <close@plt+0x1840>
   11bf4:	b	11c78 <close@plt+0xe24>
   11bf8:	mov	r7, #1
   11bfc:	str	r7, [sp, #24]
   11c00:	str	r7, [sp, #32]
   11c04:	ldr	r3, [pc, #2696]	; 12694 <close@plt+0x1840>
   11c08:	mov	r4, #0
   11c0c:	str	r3, [sp, #44]	; 0x2c
   11c10:	mov	sl, #2
   11c14:	b	11a38 <close@plt+0xbe4>
   11c18:	cmp	r5, #0
   11c1c:	movne	r3, #39	; 0x27
   11c20:	movne	r7, #0
   11c24:	strbne	r3, [r8]
   11c28:	moveq	r7, r5
   11c2c:	mov	r3, #1
   11c30:	mov	r4, #1
   11c34:	str	r3, [sp, #32]
   11c38:	ldr	r3, [pc, #2644]	; 12694 <close@plt+0x1840>
   11c3c:	str	r3, [sp, #44]	; 0x2c
   11c40:	b	11c10 <close@plt+0xdbc>
   11c44:	bl	10e48 <abort@plt>
   11c48:	mov	r3, #1
   11c4c:	mov	r7, #0
   11c50:	str	r3, [sp, #24]
   11c54:	mov	r4, #0
   11c58:	b	11a38 <close@plt+0xbe4>
   11c5c:	mov	r7, #1
   11c60:	str	sl, [sp, #32]
   11c64:	b	11c04 <close@plt+0xdb0>
   11c68:	mov	r3, #1
   11c6c:	str	r7, [sp, #24]
   11c70:	str	r3, [sp, #32]
   11c74:	ldr	r3, [pc, #2576]	; 1268c <close@plt+0x1838>
   11c78:	str	r3, [sp, #44]	; 0x2c
   11c7c:	b	11c54 <close@plt+0xe00>
   11c80:	ldr	fp, [sp, #24]
   11c84:	ldr	r3, [sp, #32]
   11c88:	cmp	sl, #2
   11c8c:	moveq	fp, #0
   11c90:	andne	fp, fp, #1
   11c94:	adds	r5, r3, #0
   11c98:	movne	r5, #1
   11c9c:	ands	r3, fp, r5
   11ca0:	str	r3, [sp, #64]	; 0x40
   11ca4:	beq	11d74 <close@plt+0xf20>
   11ca8:	ldr	r3, [sp, #28]
   11cac:	ldr	r2, [sp, #32]
   11cb0:	cmp	r2, #1
   11cb4:	add	r6, r3, r2
   11cb8:	mov	r3, r2
   11cbc:	ldr	r2, [sp, #40]	; 0x28
   11cc0:	movls	r3, #0
   11cc4:	movhi	r3, #1
   11cc8:	cmn	r2, #1
   11ccc:	movne	r3, #0
   11cd0:	cmp	r3, #0
   11cd4:	beq	11ce4 <close@plt+0xe90>
   11cd8:	ldr	r0, [sp, #48]	; 0x30
   11cdc:	bl	10d70 <strlen@plt>
   11ce0:	str	r0, [sp, #40]	; 0x28
   11ce4:	ldr	r3, [sp, #40]	; 0x28
   11ce8:	cmp	r6, r3
   11cec:	bhi	11d6c <close@plt+0xf18>
   11cf0:	ldr	r0, [sp, #28]
   11cf4:	ldr	r2, [sp, #32]
   11cf8:	ldr	r3, [sp, #48]	; 0x30
   11cfc:	ldr	r1, [sp, #44]	; 0x2c
   11d00:	add	r0, r3, r0
   11d04:	bl	10c74 <memcmp@plt>
   11d08:	cmp	r0, #0
   11d0c:	bne	11d6c <close@plt+0xf18>
   11d10:	cmp	r7, #0
   11d14:	beq	11d74 <close@plt+0xf20>
   11d18:	str	r7, [sp, #24]
   11d1c:	ldr	r3, [sp, #24]
   11d20:	mov	r1, r9
   11d24:	ldr	r2, [sp, #48]	; 0x30
   11d28:	cmp	sl, #2
   11d2c:	movne	r3, #0
   11d30:	andeq	r3, r3, #1
   11d34:	cmp	r3, #0
   11d38:	ldr	r3, [sp, #160]	; 0xa0
   11d3c:	movne	sl, #4
   11d40:	str	sl, [sp]
   11d44:	str	r3, [sp, #16]
   11d48:	ldr	r3, [sp, #156]	; 0x9c
   11d4c:	str	r3, [sp, #12]
   11d50:	mov	r3, #0
   11d54:	str	r3, [sp, #8]
   11d58:	ldr	r3, [sp, #148]	; 0x94
   11d5c:	bic	r3, r3, #2
   11d60:	str	r3, [sp, #4]
   11d64:	ldr	r3, [sp, #40]	; 0x28
   11d68:	b	11af0 <close@plt+0xc9c>
   11d6c:	mov	r3, #0
   11d70:	str	r3, [sp, #64]	; 0x40
   11d74:	ldr	r2, [sp, #28]
   11d78:	ldr	r3, [sp, #48]	; 0x30
   11d7c:	add	r3, r3, r2
   11d80:	str	r3, [sp, #80]	; 0x50
   11d84:	ldr	r3, [sp, #48]	; 0x30
   11d88:	ldrb	r6, [r3, r2]
   11d8c:	cmp	r6, #58	; 0x3a
   11d90:	bhi	11ef4 <close@plt+0x10a0>
   11d94:	cmp	r6, #43	; 0x2b
   11d98:	bcs	120b4 <close@plt+0x1260>
   11d9c:	cmp	r6, #32
   11da0:	beq	12108 <close@plt+0x12b4>
   11da4:	bhi	11e4c <close@plt+0xff8>
   11da8:	cmp	r6, #9
   11dac:	beq	122b0 <close@plt+0x145c>
   11db0:	bhi	11e10 <close@plt+0xfbc>
   11db4:	cmp	r6, #7
   11db8:	beq	122c0 <close@plt+0x146c>
   11dbc:	bhi	122dc <close@plt+0x1488>
   11dc0:	cmp	r6, #0
   11dc4:	beq	12124 <close@plt+0x12d0>
   11dc8:	ldr	r3, [sp, #76]	; 0x4c
   11dcc:	cmp	r3, #1
   11dd0:	bne	12328 <close@plt+0x14d4>
   11dd4:	bl	10d58 <__ctype_b_loc@plt>
   11dd8:	ldr	r2, [r0]
   11ddc:	sxth	r3, r6
   11de0:	lsl	r3, r3, #1
   11de4:	ldrh	r5, [r2, r3]
   11de8:	ldr	r3, [sp, #76]	; 0x4c
   11dec:	ubfx	r5, r5, #14, #1
   11df0:	str	r3, [sp, #56]	; 0x38
   11df4:	ldr	r3, [sp, #24]
   11df8:	eor	fp, r5, #1
   11dfc:	and	fp, fp, r3
   11e00:	ands	fp, fp, #255	; 0xff
   11e04:	beq	11fe4 <close@plt+0x1190>
   11e08:	mov	r5, #0
   11e0c:	b	123d4 <close@plt+0x1580>
   11e10:	cmp	r6, #11
   11e14:	beq	122e4 <close@plt+0x1490>
   11e18:	bcc	122b8 <close@plt+0x1464>
   11e1c:	cmp	r6, #12
   11e20:	beq	122ec <close@plt+0x1498>
   11e24:	cmp	r6, #13
   11e28:	moveq	r3, #114	; 0x72
   11e2c:	bne	11dc8 <close@plt+0xf74>
   11e30:	cmp	sl, #2
   11e34:	movne	r2, #0
   11e38:	andeq	r2, r7, #1
   11e3c:	cmp	r2, #0
   11e40:	beq	122c4 <close@plt+0x1470>
   11e44:	mov	sl, #2
   11e48:	b	11d1c <close@plt+0xec8>
   11e4c:	cmp	r6, #37	; 0x25
   11e50:	beq	120b4 <close@plt+0x1260>
   11e54:	bhi	11e68 <close@plt+0x1014>
   11e58:	cmp	r6, #35	; 0x23
   11e5c:	beq	120fc <close@plt+0x12a8>
   11e60:	mov	r5, #0
   11e64:	b	1210c <close@plt+0x12b8>
   11e68:	cmp	r6, #39	; 0x27
   11e6c:	bne	11e60 <close@plt+0x100c>
   11e70:	cmp	sl, #2
   11e74:	ldrne	r5, [sp, #36]	; 0x24
   11e78:	movne	r3, r5
   11e7c:	strne	r3, [sp, #68]	; 0x44
   11e80:	bne	12200 <close@plt+0x13ac>
   11e84:	cmp	r7, #0
   11e88:	bne	11d1c <close@plt+0xec8>
   11e8c:	ldr	r3, [sp, #60]	; 0x3c
   11e90:	cmp	r9, #0
   11e94:	clz	r3, r3
   11e98:	lsr	r3, r3, #5
   11e9c:	moveq	r3, #0
   11ea0:	cmp	r3, #0
   11ea4:	strne	r9, [sp, #60]	; 0x3c
   11ea8:	movne	r9, #0
   11eac:	bne	11ebc <close@plt+0x1068>
   11eb0:	cmp	r9, r4
   11eb4:	movhi	r3, #39	; 0x27
   11eb8:	strbhi	r3, [r8, r4]
   11ebc:	add	r3, r4, #1
   11ec0:	ldr	r5, [sp, #36]	; 0x24
   11ec4:	mov	fp, #0
   11ec8:	cmp	r3, r9
   11ecc:	movcc	r2, #92	; 0x5c
   11ed0:	str	fp, [sp, #52]	; 0x34
   11ed4:	strbcc	r2, [r8, r3]
   11ed8:	add	r3, r4, #2
   11edc:	add	r4, r4, #3
   11ee0:	cmp	r3, r9
   11ee4:	str	r5, [sp, #68]	; 0x44
   11ee8:	movcc	r2, #39	; 0x27
   11eec:	strbcc	r2, [r8, r3]
   11ef0:	b	11fe4 <close@plt+0x1190>
   11ef4:	cmp	r6, #94	; 0x5e
   11ef8:	beq	11e60 <close@plt+0x100c>
   11efc:	bhi	120bc <close@plt+0x1268>
   11f00:	cmp	r6, #90	; 0x5a
   11f04:	bhi	120a8 <close@plt+0x1254>
   11f08:	cmp	r6, #65	; 0x41
   11f0c:	bcs	120b4 <close@plt+0x1260>
   11f10:	cmp	r6, #62	; 0x3e
   11f14:	bls	11e60 <close@plt+0x100c>
   11f18:	cmp	r6, #63	; 0x3f
   11f1c:	bne	11dc8 <close@plt+0xf74>
   11f20:	cmp	sl, #2
   11f24:	beq	12208 <close@plt+0x13b4>
   11f28:	cmp	sl, #5
   11f2c:	movne	fp, #0
   11f30:	bne	125d8 <close@plt+0x1784>
   11f34:	ldr	r3, [sp, #148]	; 0x94
   11f38:	tst	r3, #4
   11f3c:	beq	12210 <close@plt+0x13bc>
   11f40:	ldr	r3, [sp, #28]
   11f44:	add	r2, r3, #2
   11f48:	ldr	r3, [sp, #40]	; 0x28
   11f4c:	cmp	r2, r3
   11f50:	bcs	12210 <close@plt+0x13bc>
   11f54:	ldr	r1, [sp, #28]
   11f58:	ldr	r3, [sp, #48]	; 0x30
   11f5c:	add	r3, r3, r1
   11f60:	ldrb	r1, [r3, #1]
   11f64:	cmp	r1, #63	; 0x3f
   11f68:	bne	12210 <close@plt+0x13bc>
   11f6c:	ldr	r3, [sp, #48]	; 0x30
   11f70:	ldrb	r6, [r3, r2]
   11f74:	sub	r3, r6, #33	; 0x21
   11f78:	uxtb	r3, r3
   11f7c:	cmp	r3, #29
   11f80:	bhi	125e0 <close@plt+0x178c>
   11f84:	ldr	r0, [pc, #1804]	; 12698 <close@plt+0x1844>
   11f88:	mov	r5, #1
   11f8c:	ands	r5, r0, r5, lsl r3
   11f90:	beq	125e8 <close@plt+0x1794>
   11f94:	cmp	r7, #0
   11f98:	bne	11d1c <close@plt+0xec8>
   11f9c:	cmp	r9, r4
   11fa0:	add	r3, r4, #1
   11fa4:	str	r2, [sp, #28]
   11fa8:	mov	r5, #0
   11fac:	strbhi	r1, [r8, r4]
   11fb0:	cmp	r9, r3
   11fb4:	mov	fp, r5
   11fb8:	movhi	r1, #34	; 0x22
   11fbc:	strbhi	r1, [r8, r3]
   11fc0:	add	r3, r4, #2
   11fc4:	cmp	r9, r3
   11fc8:	movhi	r1, #34	; 0x22
   11fcc:	strbhi	r1, [r8, r3]
   11fd0:	add	r3, r4, #3
   11fd4:	add	r4, r4, #4
   11fd8:	cmp	r9, r3
   11fdc:	movhi	r1, #63	; 0x3f
   11fe0:	strbhi	r1, [r8, r3]
   11fe4:	ldr	r3, [sp, #24]
   11fe8:	eor	r3, r3, #1
   11fec:	cmp	sl, #2
   11ff0:	orreq	r3, r3, #1
   11ff4:	eor	r3, r3, #1
   11ff8:	orr	r3, r7, r3
   11ffc:	tst	r3, #255	; 0xff
   12000:	beq	1202c <close@plt+0x11d8>
   12004:	ldr	r3, [sp, #152]	; 0x98
   12008:	cmp	r3, #0
   1200c:	beq	1202c <close@plt+0x11d8>
   12010:	ldr	r1, [sp, #152]	; 0x98
   12014:	ubfx	r2, r6, #5, #8
   12018:	and	r3, r6, #31
   1201c:	ldr	r2, [r1, r2, lsl #2]
   12020:	lsr	r3, r2, r3
   12024:	tst	r3, #1
   12028:	bne	12038 <close@plt+0x11e4>
   1202c:	ldr	r3, [sp, #64]	; 0x40
   12030:	cmp	r3, #0
   12034:	beq	12230 <close@plt+0x13dc>
   12038:	sub	r3, sl, #2
   1203c:	cmp	r7, #0
   12040:	clz	r3, r3
   12044:	lsr	r3, r3, #5
   12048:	bne	11d1c <close@plt+0xec8>
   1204c:	ldr	r2, [sp, #52]	; 0x34
   12050:	eor	r2, r2, #1
   12054:	ands	r3, r3, r2
   12058:	beq	12090 <close@plt+0x123c>
   1205c:	cmp	r9, r4
   12060:	str	r3, [sp, #52]	; 0x34
   12064:	movhi	r2, #39	; 0x27
   12068:	strbhi	r2, [r8, r4]
   1206c:	add	r2, r4, #1
   12070:	cmp	r9, r2
   12074:	movhi	r1, #36	; 0x24
   12078:	strbhi	r1, [r8, r2]
   1207c:	add	r2, r4, #2
   12080:	add	r4, r4, #3
   12084:	cmp	r9, r2
   12088:	movhi	r1, #39	; 0x27
   1208c:	strbhi	r1, [r8, r2]
   12090:	cmp	r9, r4
   12094:	ldr	fp, [sp, #36]	; 0x24
   12098:	movhi	r3, #92	; 0x5c
   1209c:	strbhi	r3, [r8, r4]
   120a0:	add	r4, r4, #1
   120a4:	b	12230 <close@plt+0x13dc>
   120a8:	cmp	r6, #92	; 0x5c
   120ac:	beq	12218 <close@plt+0x13c4>
   120b0:	bls	11e60 <close@plt+0x100c>
   120b4:	ldr	r5, [sp, #36]	; 0x24
   120b8:	b	12200 <close@plt+0x13ac>
   120bc:	cmp	r6, #122	; 0x7a
   120c0:	bhi	120e0 <close@plt+0x128c>
   120c4:	cmp	r6, #97	; 0x61
   120c8:	bcs	120b4 <close@plt+0x1260>
   120cc:	cmp	r6, #95	; 0x5f
   120d0:	beq	120b4 <close@plt+0x1260>
   120d4:	cmp	r6, #96	; 0x60
   120d8:	bne	11dc8 <close@plt+0xf74>
   120dc:	b	11e60 <close@plt+0x100c>
   120e0:	cmp	r6, #124	; 0x7c
   120e4:	beq	11e60 <close@plt+0x100c>
   120e8:	bcc	122f4 <close@plt+0x14a0>
   120ec:	cmp	r6, #125	; 0x7d
   120f0:	beq	122f4 <close@plt+0x14a0>
   120f4:	cmp	r6, #126	; 0x7e
   120f8:	bne	11dc8 <close@plt+0xf74>
   120fc:	ldr	r3, [sp, #28]
   12100:	cmp	r3, #0
   12104:	bne	12210 <close@plt+0x13bc>
   12108:	ldr	r5, [sp, #36]	; 0x24
   1210c:	cmp	sl, #2
   12110:	movne	fp, #0
   12114:	andeq	fp, r7, #1
   12118:	cmp	fp, #0
   1211c:	beq	11fe4 <close@plt+0x1190>
   12120:	b	11e44 <close@plt+0xff0>
   12124:	ldr	r3, [sp, #24]
   12128:	cmp	r3, #0
   1212c:	beq	121f4 <close@plt+0x13a0>
   12130:	sub	r2, sl, #2
   12134:	cmp	r7, #0
   12138:	clz	r2, r2
   1213c:	lsr	r2, r2, #5
   12140:	bne	11d18 <close@plt+0xec4>
   12144:	ldr	r3, [sp, #52]	; 0x34
   12148:	eor	r3, r3, #1
   1214c:	ands	r2, r2, r3
   12150:	moveq	r3, r4
   12154:	beq	1218c <close@plt+0x1338>
   12158:	cmp	r9, r4
   1215c:	str	r2, [sp, #52]	; 0x34
   12160:	movhi	r3, #39	; 0x27
   12164:	strbhi	r3, [r8, r4]
   12168:	add	r3, r4, #1
   1216c:	cmp	r9, r3
   12170:	movhi	r1, #36	; 0x24
   12174:	strbhi	r1, [r8, r3]
   12178:	add	r3, r4, #2
   1217c:	cmp	r9, r3
   12180:	movhi	r1, #39	; 0x27
   12184:	strbhi	r1, [r8, r3]
   12188:	add	r3, r4, #3
   1218c:	cmp	r9, r3
   12190:	add	r4, r3, #1
   12194:	movhi	r2, #92	; 0x5c
   12198:	strbhi	r2, [r8, r3]
   1219c:	cmp	fp, #0
   121a0:	beq	125c8 <close@plt+0x1774>
   121a4:	ldr	r2, [sp, #28]
   121a8:	ldr	r1, [sp, #40]	; 0x28
   121ac:	add	r2, r2, #1
   121b0:	cmp	r2, r1
   121b4:	bcs	121ec <close@plt+0x1398>
   121b8:	ldr	r1, [sp, #48]	; 0x30
   121bc:	mov	r6, #48	; 0x30
   121c0:	ldrb	r2, [r1, r2]
   121c4:	sub	r2, r2, #48	; 0x30
   121c8:	cmp	r2, #9
   121cc:	bhi	125d8 <close@plt+0x1784>
   121d0:	cmp	r9, r4
   121d4:	add	r2, r3, #2
   121d8:	strbhi	r6, [r8, r4]
   121dc:	cmp	r9, r2
   121e0:	add	r4, r3, #3
   121e4:	movhi	r1, #48	; 0x30
   121e8:	strbhi	r1, [r8, r2]
   121ec:	mov	r5, #0
   121f0:	b	125d0 <close@plt+0x177c>
   121f4:	ldr	r3, [sp, #148]	; 0x94
   121f8:	ands	r5, r3, #1
   121fc:	bne	12284 <close@plt+0x1430>
   12200:	mov	fp, #0
   12204:	b	11fe4 <close@plt+0x1190>
   12208:	cmp	r7, #0
   1220c:	bne	11d1c <close@plt+0xec8>
   12210:	mov	r5, #0
   12214:	b	12200 <close@plt+0x13ac>
   12218:	cmp	sl, #2
   1221c:	bne	12290 <close@plt+0x143c>
   12220:	cmp	r7, #0
   12224:	bne	11d1c <close@plt+0xec8>
   12228:	mov	r5, r7
   1222c:	mov	fp, r7
   12230:	ldr	r3, [sp, #52]	; 0x34
   12234:	eor	fp, fp, #1
   12238:	tst	r3, fp
   1223c:	beq	12268 <close@plt+0x1414>
   12240:	cmp	r9, r4
   12244:	movhi	r3, #39	; 0x27
   12248:	strbhi	r3, [r8, r4]
   1224c:	add	r3, r4, #1
   12250:	add	r4, r4, #2
   12254:	cmp	r9, r3
   12258:	movhi	r2, #39	; 0x27
   1225c:	strbhi	r2, [r8, r3]
   12260:	mov	r3, #0
   12264:	str	r3, [sp, #52]	; 0x34
   12268:	cmp	r9, r4
   1226c:	ldr	r3, [sp, #72]	; 0x48
   12270:	strbhi	r6, [r8, r4]
   12274:	cmp	r5, #0
   12278:	add	r4, r4, #1
   1227c:	moveq	r3, #0
   12280:	str	r3, [sp, #72]	; 0x48
   12284:	ldr	r3, [sp, #28]
   12288:	add	r3, r3, #1
   1228c:	b	11a44 <close@plt+0xbf0>
   12290:	ldr	r3, [sp, #24]
   12294:	and	r3, r3, r7
   12298:	tst	r5, r3
   1229c:	moveq	r3, r6
   122a0:	beq	11e30 <close@plt+0xfdc>
   122a4:	mov	fp, #0
   122a8:	mov	r5, fp
   122ac:	b	12230 <close@plt+0x13dc>
   122b0:	mov	r3, #116	; 0x74
   122b4:	b	11e30 <close@plt+0xfdc>
   122b8:	mov	r3, #110	; 0x6e
   122bc:	b	11e30 <close@plt+0xfdc>
   122c0:	mov	r3, #97	; 0x61
   122c4:	ldr	r2, [sp, #24]
   122c8:	cmp	r2, #0
   122cc:	beq	12210 <close@plt+0x13bc>
   122d0:	mov	r6, r3
   122d4:	mov	r5, #0
   122d8:	b	12038 <close@plt+0x11e4>
   122dc:	mov	r3, #98	; 0x62
   122e0:	b	122c4 <close@plt+0x1470>
   122e4:	mov	r3, #118	; 0x76
   122e8:	b	122c4 <close@plt+0x1470>
   122ec:	mov	r3, #102	; 0x66
   122f0:	b	122c4 <close@plt+0x1470>
   122f4:	ldr	r3, [sp, #40]	; 0x28
   122f8:	cmn	r3, #1
   122fc:	bne	1231c <close@plt+0x14c8>
   12300:	ldr	r3, [sp, #48]	; 0x30
   12304:	ldrb	r3, [r3, #1]
   12308:	adds	r3, r3, #0
   1230c:	movne	r3, #1
   12310:	cmp	r3, #0
   12314:	bne	12210 <close@plt+0x13bc>
   12318:	b	120fc <close@plt+0x12a8>
   1231c:	ldr	r3, [sp, #40]	; 0x28
   12320:	subs	r3, r3, #1
   12324:	b	1230c <close@plt+0x14b8>
   12328:	mov	r3, #0
   1232c:	mov	r2, #0
   12330:	strd	r2, [sp, #96]	; 0x60
   12334:	ldr	r3, [sp, #40]	; 0x28
   12338:	cmn	r3, #1
   1233c:	bne	1234c <close@plt+0x14f8>
   12340:	ldr	r0, [sp, #48]	; 0x30
   12344:	bl	10d70 <strlen@plt>
   12348:	str	r0, [sp, #40]	; 0x28
   1234c:	ldr	r5, [sp, #36]	; 0x24
   12350:	mov	r3, #0
   12354:	str	r3, [sp, #56]	; 0x38
   12358:	ldr	r3, [sp, #28]
   1235c:	add	r0, sp, #92	; 0x5c
   12360:	ldr	r1, [sp, #40]	; 0x28
   12364:	ldr	r2, [sp, #56]	; 0x38
   12368:	add	r2, r3, r2
   1236c:	ldr	r3, [sp, #48]	; 0x30
   12370:	add	fp, r3, r2
   12374:	sub	r2, r1, r2
   12378:	add	r3, sp, #96	; 0x60
   1237c:	mov	r1, fp
   12380:	bl	13920 <close@plt+0x2acc>
   12384:	subs	r2, r0, #0
   12388:	beq	123c8 <close@plt+0x1574>
   1238c:	cmn	r2, #1
   12390:	beq	1259c <close@plt+0x1748>
   12394:	cmn	r2, #2
   12398:	bne	1250c <close@plt+0x16b8>
   1239c:	ldr	r3, [sp, #28]
   123a0:	ldr	r2, [sp, #56]	; 0x38
   123a4:	add	r3, r3, r2
   123a8:	ldr	r2, [sp, #40]	; 0x28
   123ac:	cmp	r2, r3
   123b0:	bls	1259c <close@plt+0x1748>
   123b4:	ldr	r2, [sp, #56]	; 0x38
   123b8:	ldr	r3, [sp, #80]	; 0x50
   123bc:	ldrb	r5, [r3, r2]
   123c0:	cmp	r5, #0
   123c4:	bne	124fc <close@plt+0x16a8>
   123c8:	ldr	r3, [sp, #56]	; 0x38
   123cc:	cmp	r3, #1
   123d0:	bls	11df4 <close@plt+0xfa0>
   123d4:	ldr	r3, [sp, #28]
   123d8:	mov	fp, #0
   123dc:	mov	ip, #92	; 0x5c
   123e0:	ldr	r2, [sp, #56]	; 0x38
   123e4:	add	r3, r3, r2
   123e8:	ldr	r2, [sp, #24]
   123ec:	str	r3, [sp, #36]	; 0x24
   123f0:	eor	r3, r5, #1
   123f4:	and	r3, r3, r2
   123f8:	mov	r2, #39	; 0x27
   123fc:	uxtb	r3, r3
   12400:	cmp	r3, #0
   12404:	beq	125a4 <close@plt+0x1750>
   12408:	sub	r0, sl, #2
   1240c:	cmp	r7, #0
   12410:	clz	r0, r0
   12414:	lsr	r0, r0, #5
   12418:	bne	11d18 <close@plt+0xec4>
   1241c:	ldr	r1, [sp, #52]	; 0x34
   12420:	eor	r1, r1, #1
   12424:	ands	r1, r0, r1
   12428:	beq	12458 <close@plt+0x1604>
   1242c:	cmp	r9, r4
   12430:	add	r0, r4, #1
   12434:	str	r1, [sp, #52]	; 0x34
   12438:	strbhi	r2, [r8, r4]
   1243c:	cmp	r9, r0
   12440:	movhi	lr, #36	; 0x24
   12444:	strbhi	lr, [r8, r0]
   12448:	add	r0, r4, #2
   1244c:	add	r4, r4, #3
   12450:	cmp	r9, r0
   12454:	strbhi	r2, [r8, r0]
   12458:	cmp	r9, r4
   1245c:	add	r0, r4, #1
   12460:	mov	fp, r3
   12464:	strbhi	ip, [r8, r4]
   12468:	cmp	r9, r0
   1246c:	lsrhi	r1, r6, #6
   12470:	addhi	r1, r1, #48	; 0x30
   12474:	strbhi	r1, [r8, r0]
   12478:	add	r0, r4, #2
   1247c:	add	r4, r4, #3
   12480:	cmp	r9, r0
   12484:	ubfxhi	r1, r6, #3, #3
   12488:	and	r6, r6, #7
   1248c:	add	r6, r6, #48	; 0x30
   12490:	addhi	r1, r1, #48	; 0x30
   12494:	strbhi	r1, [r8, r0]
   12498:	eor	r0, fp, #1
   1249c:	ldr	r1, [sp, #28]
   124a0:	ldr	lr, [sp, #52]	; 0x34
   124a4:	add	r1, r1, #1
   124a8:	and	r0, r0, lr
   124ac:	ldr	lr, [sp, #36]	; 0x24
   124b0:	cmp	r1, lr
   124b4:	bcs	12230 <close@plt+0x13dc>
   124b8:	cmp	r0, #0
   124bc:	beq	124e0 <close@plt+0x168c>
   124c0:	cmp	r9, r4
   124c4:	add	r0, r4, #1
   124c8:	strbhi	r2, [r8, r4]
   124cc:	cmp	r9, r0
   124d0:	add	r4, r4, #2
   124d4:	strbhi	r2, [r8, r0]
   124d8:	mov	r0, #0
   124dc:	str	r0, [sp, #52]	; 0x34
   124e0:	ldr	r0, [sp, #48]	; 0x30
   124e4:	cmp	r9, r4
   124e8:	str	r1, [sp, #28]
   124ec:	strbhi	r6, [r8, r4]
   124f0:	add	r4, r4, #1
   124f4:	ldrb	r6, [r0, r1]
   124f8:	b	12400 <close@plt+0x15ac>
   124fc:	ldr	r3, [sp, #56]	; 0x38
   12500:	add	r3, r3, #1
   12504:	str	r3, [sp, #56]	; 0x38
   12508:	b	1239c <close@plt+0x1548>
   1250c:	cmp	sl, #2
   12510:	movne	r3, #0
   12514:	andeq	r3, r7, #1
   12518:	cmp	r3, #0
   1251c:	movne	r1, #1
   12520:	bne	1257c <close@plt+0x1728>
   12524:	ldr	r0, [sp, #92]	; 0x5c
   12528:	str	r2, [sp, #84]	; 0x54
   1252c:	bl	10cbc <iswprint@plt>
   12530:	ldr	r3, [sp, #56]	; 0x38
   12534:	cmp	r0, #0
   12538:	add	r0, sp, #96	; 0x60
   1253c:	moveq	r5, #0
   12540:	ldr	r2, [sp, #84]	; 0x54
   12544:	add	r3, r3, r2
   12548:	str	r3, [sp, #56]	; 0x38
   1254c:	bl	10c68 <mbsinit@plt>
   12550:	cmp	r0, #0
   12554:	beq	12358 <close@plt+0x1504>
   12558:	b	123c8 <close@plt+0x1574>
   1255c:	ldrb	r3, [fp, #1]!
   12560:	cmp	r3, #94	; 0x5e
   12564:	beq	11e44 <close@plt+0xff0>
   12568:	bhi	12588 <close@plt+0x1734>
   1256c:	sub	r3, r3, #91	; 0x5b
   12570:	cmp	r3, #1
   12574:	bls	11e44 <close@plt+0xff0>
   12578:	add	r1, r1, #1
   1257c:	cmp	r1, r2
   12580:	bne	1255c <close@plt+0x1708>
   12584:	b	12524 <close@plt+0x16d0>
   12588:	cmp	r3, #96	; 0x60
   1258c:	beq	11e44 <close@plt+0xff0>
   12590:	cmp	r3, #124	; 0x7c
   12594:	bne	12578 <close@plt+0x1724>
   12598:	b	11e44 <close@plt+0xff0>
   1259c:	mov	r5, #0
   125a0:	b	123c8 <close@plt+0x1574>
   125a4:	ldr	r1, [sp, #64]	; 0x40
   125a8:	cmp	r1, #0
   125ac:	beq	12498 <close@plt+0x1644>
   125b0:	cmp	r9, r4
   125b4:	mov	r1, #0
   125b8:	strbhi	ip, [r8, r4]
   125bc:	add	r4, r4, #1
   125c0:	str	r1, [sp, #64]	; 0x40
   125c4:	b	12498 <close@plt+0x1644>
   125c8:	mov	r5, fp
   125cc:	ldr	fp, [sp, #24]
   125d0:	mov	r6, #48	; 0x30
   125d4:	b	11fe4 <close@plt+0x1190>
   125d8:	mov	r5, #0
   125dc:	b	11fe4 <close@plt+0x1190>
   125e0:	mov	r6, r1
   125e4:	b	12210 <close@plt+0x13bc>
   125e8:	mov	r6, r1
   125ec:	b	12200 <close@plt+0x13ac>
   125f0:	ldr	r2, [sp, #28]
   125f4:	ldr	r3, [sp, #40]	; 0x28
   125f8:	subs	r3, r3, r2
   125fc:	movne	r3, #1
   12600:	b	11a68 <close@plt+0xc14>
   12604:	ldr	r3, [sp, #60]	; 0x3c
   12608:	mov	sl, #2
   1260c:	ldr	r7, [sp, #72]	; 0x48
   12610:	adds	r6, r3, #0
   12614:	mov	r5, r3
   12618:	movne	r6, #1
   1261c:	cmp	r9, #0
   12620:	movne	r6, #0
   12624:	cmp	r6, #0
   12628:	bne	119f8 <close@plt+0xba4>
   1262c:	ldr	r3, [sp, #68]	; 0x44
   12630:	ldr	r2, [sp, #44]	; 0x2c
   12634:	cmp	r2, #0
   12638:	moveq	r3, #0
   1263c:	andne	r3, r3, #1
   12640:	cmp	r3, #0
   12644:	movne	r3, r2
   12648:	subne	r3, r3, #1
   1264c:	bne	1267c <close@plt+0x1828>
   12650:	cmp	r9, r4
   12654:	movhi	r3, #0
   12658:	strbhi	r3, [r8, r4]
   1265c:	mov	r0, r4
   12660:	add	sp, sp, #108	; 0x6c
   12664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12668:	mov	r3, r7
   1266c:	b	12630 <close@plt+0x17dc>
   12670:	cmp	r9, r4
   12674:	strbhi	r2, [r8, r4]
   12678:	add	r4, r4, #1
   1267c:	ldrb	r2, [r3, #1]!
   12680:	cmp	r2, #0
   12684:	bne	12670 <close@plt+0x181c>
   12688:	b	12650 <close@plt+0x17fc>
   1268c:	andeq	r4, r1, r4, asr #32
   12690:	andeq	r4, r1, r7, asr r0
   12694:	andeq	r4, r1, r5, asr r0
   12698:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1269c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126a0:	sub	sp, sp, #52	; 0x34
   126a4:	mov	r6, r0
   126a8:	mov	r5, r3
   126ac:	mov	r8, r1
   126b0:	mov	r9, r2
   126b4:	bl	10d7c <__errno_location@plt>
   126b8:	ldr	r3, [r0]
   126bc:	cmn	r6, #-2147483647	; 0x80000001
   126c0:	str	r0, [sp, #24]
   126c4:	ldr	r7, [pc, #368]	; 1283c <close@plt+0x19e8>
   126c8:	str	r3, [sp, #32]
   126cc:	movne	r3, #0
   126d0:	moveq	r3, #1
   126d4:	orrs	r3, r3, r6, lsr #31
   126d8:	ldr	r4, [r7]
   126dc:	beq	126e4 <close@plt+0x1890>
   126e0:	bl	10e48 <abort@plt>
   126e4:	ldr	r2, [r7, #4]
   126e8:	cmp	r2, r6
   126ec:	bgt	1275c <close@plt+0x1908>
   126f0:	add	sl, r7, #8
   126f4:	mov	r3, #8
   126f8:	cmp	r4, sl
   126fc:	add	r1, sp, #44	; 0x2c
   12700:	str	r2, [sp, #44]	; 0x2c
   12704:	sub	r2, r6, r2
   12708:	movne	r0, r4
   1270c:	moveq	r0, #0
   12710:	add	r2, r2, #1
   12714:	str	r3, [sp]
   12718:	mvn	r3, #-2147483648	; 0x80000000
   1271c:	bl	133f0 <close@plt+0x259c>
   12720:	cmp	r4, sl
   12724:	mov	fp, r0
   12728:	str	r0, [r7]
   1272c:	ldmeq	r4, {r0, r1}
   12730:	mov	r4, fp
   12734:	ldr	r2, [sp, #44]	; 0x2c
   12738:	stmeq	fp, {r0, r1}
   1273c:	mov	r1, #0
   12740:	ldr	r0, [r7, #4]
   12744:	sub	r2, r2, r0
   12748:	add	r0, fp, r0, lsl #3
   1274c:	lsl	r2, r2, #3
   12750:	bl	10d94 <memset@plt>
   12754:	ldr	r3, [sp, #44]	; 0x2c
   12758:	str	r3, [r7, #4]
   1275c:	ldr	r3, [r5, #4]
   12760:	add	sl, r4, r6, lsl #3
   12764:	mov	r2, r8
   12768:	ldr	fp, [r4, r6, lsl #3]
   1276c:	ldr	r7, [sl, #4]
   12770:	orr	r3, r3, #1
   12774:	str	r3, [sp, #28]
   12778:	add	r3, r5, #8
   1277c:	mov	r1, fp
   12780:	str	r3, [sp, #36]	; 0x24
   12784:	mov	r0, r7
   12788:	ldr	r3, [r5, #44]	; 0x2c
   1278c:	str	r3, [sp, #16]
   12790:	ldr	r3, [r5, #40]	; 0x28
   12794:	str	r3, [sp, #12]
   12798:	add	r3, r5, #8
   1279c:	str	r3, [sp, #8]
   127a0:	ldr	r3, [sp, #28]
   127a4:	str	r3, [sp, #4]
   127a8:	ldr	r3, [r5]
   127ac:	str	r3, [sp]
   127b0:	mov	r3, r9
   127b4:	bl	119ac <close@plt+0xb58>
   127b8:	cmp	fp, r0
   127bc:	bhi	12824 <close@plt+0x19d0>
   127c0:	ldr	r3, [pc, #120]	; 12840 <close@plt+0x19ec>
   127c4:	add	fp, r0, #1
   127c8:	str	fp, [r4, r6, lsl #3]
   127cc:	cmp	r7, r3
   127d0:	beq	127dc <close@plt+0x1988>
   127d4:	mov	r0, r7
   127d8:	bl	137dc <close@plt+0x2988>
   127dc:	mov	r0, fp
   127e0:	bl	132e0 <close@plt+0x248c>
   127e4:	ldr	r3, [r5, #44]	; 0x2c
   127e8:	mov	r2, r8
   127ec:	mov	r1, fp
   127f0:	str	r0, [sl, #4]
   127f4:	mov	r7, r0
   127f8:	str	r3, [sp, #16]
   127fc:	ldr	r3, [r5, #40]	; 0x28
   12800:	str	r3, [sp, #12]
   12804:	add	r3, r5, #8
   12808:	str	r3, [sp, #8]
   1280c:	ldr	r3, [sp, #28]
   12810:	str	r3, [sp, #4]
   12814:	ldr	r3, [r5]
   12818:	str	r3, [sp]
   1281c:	mov	r3, r9
   12820:	bl	119ac <close@plt+0xb58>
   12824:	ldr	r3, [sp, #24]
   12828:	mov	r0, r7
   1282c:	ldr	r2, [sp, #32]
   12830:	str	r2, [r3]
   12834:	add	sp, sp, #52	; 0x34
   12838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1283c:	andeq	r5, r2, r8, ror #1
   12840:	andeq	r5, r2, r4, asr r1
   12844:	push	{r4, r5, r6, lr}
   12848:	mov	r5, r0
   1284c:	bl	10d7c <__errno_location@plt>
   12850:	mov	r4, r0
   12854:	cmp	r5, #0
   12858:	ldr	r0, [pc, #20]	; 12874 <close@plt+0x1a20>
   1285c:	mov	r1, #48	; 0x30
   12860:	movne	r0, r5
   12864:	ldr	r6, [r4]
   12868:	bl	134e0 <close@plt+0x268c>
   1286c:	str	r6, [r4]
   12870:	pop	{r4, r5, r6, pc}
   12874:	andeq	r5, r2, r4, asr r2
   12878:	ldr	r3, [pc, #12]	; 1288c <close@plt+0x1a38>
   1287c:	cmp	r0, #0
   12880:	moveq	r0, r3
   12884:	ldr	r0, [r0]
   12888:	bx	lr
   1288c:	andeq	r5, r2, r4, asr r2
   12890:	ldr	r3, [pc, #12]	; 128a4 <close@plt+0x1a50>
   12894:	cmp	r0, #0
   12898:	moveq	r0, r3
   1289c:	str	r1, [r0]
   128a0:	bx	lr
   128a4:	andeq	r5, r2, r4, asr r2
   128a8:	ldr	r3, [pc, #52]	; 128e4 <close@plt+0x1a90>
   128ac:	cmp	r0, #0
   128b0:	push	{lr}		; (str lr, [sp, #-4]!)
   128b4:	lsr	lr, r1, #5
   128b8:	and	r1, r1, #31
   128bc:	moveq	r0, r3
   128c0:	add	r3, r0, #8
   128c4:	ldr	ip, [r3, lr, lsl #2]
   128c8:	lsr	r0, ip, r1
   128cc:	eor	r2, r2, r0
   128d0:	and	r0, r0, #1
   128d4:	and	r2, r2, #1
   128d8:	eor	r1, ip, r2, lsl r1
   128dc:	str	r1, [r3, lr, lsl #2]
   128e0:	pop	{pc}		; (ldr pc, [sp], #4)
   128e4:	andeq	r5, r2, r4, asr r2
   128e8:	ldr	r3, [pc, #16]	; 12900 <close@plt+0x1aac>
   128ec:	cmp	r0, #0
   128f0:	movne	r3, r0
   128f4:	ldr	r0, [r3, #4]
   128f8:	str	r1, [r3, #4]
   128fc:	bx	lr
   12900:	andeq	r5, r2, r4, asr r2
   12904:	ldr	r3, [pc, #44]	; 12938 <close@plt+0x1ae4>
   12908:	cmp	r0, #0
   1290c:	moveq	r0, r3
   12910:	mov	r3, #10
   12914:	cmp	r2, #0
   12918:	cmpne	r1, #0
   1291c:	str	r3, [r0]
   12920:	bne	1292c <close@plt+0x1ad8>
   12924:	push	{r4, lr}
   12928:	bl	10e48 <abort@plt>
   1292c:	str	r1, [r0, #40]	; 0x28
   12930:	str	r2, [r0, #44]	; 0x2c
   12934:	bx	lr
   12938:	andeq	r5, r2, r4, asr r2
   1293c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12940:	sub	sp, sp, #24
   12944:	mov	sl, r3
   12948:	mov	r7, r0
   1294c:	mov	r8, r1
   12950:	mov	r9, r2
   12954:	ldr	r4, [sp, #56]	; 0x38
   12958:	ldr	r3, [pc, #88]	; 129b8 <close@plt+0x1b64>
   1295c:	cmp	r4, #0
   12960:	moveq	r4, r3
   12964:	bl	10d7c <__errno_location@plt>
   12968:	ldr	r3, [r4, #44]	; 0x2c
   1296c:	mov	r5, r0
   12970:	mov	r2, r9
   12974:	mov	r1, r8
   12978:	mov	r0, r7
   1297c:	ldr	r6, [r5]
   12980:	str	r3, [sp, #16]
   12984:	ldr	r3, [r4, #40]	; 0x28
   12988:	str	r3, [sp, #12]
   1298c:	add	r3, r4, #8
   12990:	str	r3, [sp, #8]
   12994:	ldr	r3, [r4, #4]
   12998:	str	r3, [sp, #4]
   1299c:	ldr	r3, [r4]
   129a0:	str	r3, [sp]
   129a4:	mov	r3, sl
   129a8:	bl	119ac <close@plt+0xb58>
   129ac:	str	r6, [r5]
   129b0:	add	sp, sp, #24
   129b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129b8:	andeq	r5, r2, r4, asr r2
   129bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129c0:	cmp	r3, #0
   129c4:	sub	sp, sp, #44	; 0x2c
   129c8:	mov	r6, r2
   129cc:	mov	sl, r1
   129d0:	mov	r9, r0
   129d4:	ldr	r4, [pc, #176]	; 12a8c <close@plt+0x1c38>
   129d8:	movne	r4, r3
   129dc:	bl	10d7c <__errno_location@plt>
   129e0:	ldr	r3, [r0]
   129e4:	mov	r1, #0
   129e8:	mov	r2, r9
   129ec:	mov	r8, r0
   129f0:	mov	r0, r1
   129f4:	ldr	r5, [r4, #4]
   129f8:	add	fp, r4, #8
   129fc:	str	r3, [sp, #28]
   12a00:	ldr	r3, [r4, #44]	; 0x2c
   12a04:	cmp	r6, #0
   12a08:	orreq	r5, r5, #1
   12a0c:	str	r3, [sp, #16]
   12a10:	ldr	r3, [r4, #40]	; 0x28
   12a14:	stmib	sp, {r5, fp}
   12a18:	str	r3, [sp, #12]
   12a1c:	ldr	r3, [r4]
   12a20:	str	r3, [sp]
   12a24:	mov	r3, sl
   12a28:	bl	119ac <close@plt+0xb58>
   12a2c:	add	r1, r0, #1
   12a30:	mov	r7, r0
   12a34:	mov	r0, r1
   12a38:	str	r1, [sp, #36]	; 0x24
   12a3c:	bl	132e0 <close@plt+0x248c>
   12a40:	ldr	r3, [r4, #44]	; 0x2c
   12a44:	mov	r2, r9
   12a48:	ldr	r1, [sp, #36]	; 0x24
   12a4c:	str	r3, [sp, #16]
   12a50:	ldr	r3, [r4, #40]	; 0x28
   12a54:	stmib	sp, {r5, fp}
   12a58:	str	r0, [sp, #32]
   12a5c:	str	r3, [sp, #12]
   12a60:	ldr	r3, [r4]
   12a64:	str	r3, [sp]
   12a68:	mov	r3, sl
   12a6c:	bl	119ac <close@plt+0xb58>
   12a70:	ldr	r3, [sp, #28]
   12a74:	cmp	r6, #0
   12a78:	ldr	r0, [sp, #32]
   12a7c:	str	r3, [r8]
   12a80:	strne	r7, [r6]
   12a84:	add	sp, sp, #44	; 0x2c
   12a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a8c:	andeq	r5, r2, r4, asr r2
   12a90:	mov	r3, r2
   12a94:	mov	r2, #0
   12a98:	b	129bc <close@plt+0x1b68>
   12a9c:	push	{r4, r5, r6, r7, r8, lr}
   12aa0:	mov	r6, #1
   12aa4:	ldr	r4, [pc, #100]	; 12b10 <close@plt+0x1cbc>
   12aa8:	ldr	r5, [r4]
   12aac:	add	r7, r5, #4
   12ab0:	ldr	r3, [r4, #4]
   12ab4:	cmp	r3, r6
   12ab8:	bgt	12b00 <close@plt+0x1cac>
   12abc:	ldr	r6, [pc, #80]	; 12b14 <close@plt+0x1cc0>
   12ac0:	ldr	r0, [r5, #4]
   12ac4:	cmp	r0, r6
   12ac8:	beq	12adc <close@plt+0x1c88>
   12acc:	bl	137dc <close@plt+0x2988>
   12ad0:	mov	r3, #256	; 0x100
   12ad4:	str	r3, [r4, #8]
   12ad8:	str	r6, [r4, #12]
   12adc:	ldr	r6, [pc, #52]	; 12b18 <close@plt+0x1cc4>
   12ae0:	cmp	r5, r6
   12ae4:	beq	12af4 <close@plt+0x1ca0>
   12ae8:	mov	r0, r5
   12aec:	bl	137dc <close@plt+0x2988>
   12af0:	str	r6, [r4]
   12af4:	mov	r3, #1
   12af8:	str	r3, [r4, #4]
   12afc:	pop	{r4, r5, r6, r7, r8, pc}
   12b00:	ldr	r0, [r7, r6, lsl #3]
   12b04:	add	r6, r6, #1
   12b08:	bl	137dc <close@plt+0x2988>
   12b0c:	b	12ab0 <close@plt+0x1c5c>
   12b10:	andeq	r5, r2, r8, ror #1
   12b14:	andeq	r5, r2, r4, asr r1
   12b18:	strdeq	r5, [r2], -r0
   12b1c:	ldr	r3, [pc, #4]	; 12b28 <close@plt+0x1cd4>
   12b20:	mvn	r2, #0
   12b24:	b	1269c <close@plt+0x1848>
   12b28:	andeq	r5, r2, r4, asr r2
   12b2c:	ldr	r3, [pc]	; 12b34 <close@plt+0x1ce0>
   12b30:	b	1269c <close@plt+0x1848>
   12b34:	andeq	r5, r2, r4, asr r2
   12b38:	mov	r1, r0
   12b3c:	mov	r0, #0
   12b40:	b	12b1c <close@plt+0x1cc8>
   12b44:	mov	r2, r1
   12b48:	mov	r1, r0
   12b4c:	mov	r0, #0
   12b50:	b	12b2c <close@plt+0x1cd8>
   12b54:	push	{r4, r5, lr}
   12b58:	sub	sp, sp, #52	; 0x34
   12b5c:	mov	r5, r2
   12b60:	mov	r4, r0
   12b64:	mov	r0, sp
   12b68:	bl	11850 <close@plt+0x9fc>
   12b6c:	mov	r3, sp
   12b70:	mvn	r2, #0
   12b74:	mov	r1, r5
   12b78:	mov	r0, r4
   12b7c:	bl	1269c <close@plt+0x1848>
   12b80:	add	sp, sp, #52	; 0x34
   12b84:	pop	{r4, r5, pc}
   12b88:	push	{r4, r5, r6, lr}
   12b8c:	sub	sp, sp, #48	; 0x30
   12b90:	mov	r5, r2
   12b94:	mov	r6, r3
   12b98:	mov	r4, r0
   12b9c:	mov	r0, sp
   12ba0:	bl	11850 <close@plt+0x9fc>
   12ba4:	mov	r3, sp
   12ba8:	mov	r2, r6
   12bac:	mov	r1, r5
   12bb0:	mov	r0, r4
   12bb4:	bl	1269c <close@plt+0x1848>
   12bb8:	add	sp, sp, #48	; 0x30
   12bbc:	pop	{r4, r5, r6, pc}
   12bc0:	mov	r2, r1
   12bc4:	mov	r1, r0
   12bc8:	mov	r0, #0
   12bcc:	b	12b54 <close@plt+0x1d00>
   12bd0:	mov	r3, r2
   12bd4:	mov	r2, r1
   12bd8:	mov	r1, r0
   12bdc:	mov	r0, #0
   12be0:	b	12b88 <close@plt+0x1d34>
   12be4:	push	{r4, r5, r6, lr}
   12be8:	mov	r4, r0
   12bec:	mov	r5, r1
   12bf0:	mov	r6, r2
   12bf4:	sub	sp, sp, #48	; 0x30
   12bf8:	mov	ip, sp
   12bfc:	ldr	lr, [pc, #64]	; 12c44 <close@plt+0x1df0>
   12c00:	ldm	lr!, {r0, r1, r2, r3}
   12c04:	stmia	ip!, {r0, r1, r2, r3}
   12c08:	ldm	lr!, {r0, r1, r2, r3}
   12c0c:	stmia	ip!, {r0, r1, r2, r3}
   12c10:	ldm	lr, {r0, r1, r2, r3}
   12c14:	stm	ip, {r0, r1, r2, r3}
   12c18:	mov	r1, r6
   12c1c:	mov	r2, #1
   12c20:	mov	r0, sp
   12c24:	bl	128a8 <close@plt+0x1a54>
   12c28:	mov	r3, sp
   12c2c:	mov	r2, r5
   12c30:	mov	r1, r4
   12c34:	mov	r0, #0
   12c38:	bl	1269c <close@plt+0x1848>
   12c3c:	add	sp, sp, #48	; 0x30
   12c40:	pop	{r4, r5, r6, pc}
   12c44:	andeq	r5, r2, r4, asr r2
   12c48:	mov	r2, r1
   12c4c:	mvn	r1, #0
   12c50:	b	12be4 <close@plt+0x1d90>
   12c54:	mov	r1, #58	; 0x3a
   12c58:	b	12c48 <close@plt+0x1df4>
   12c5c:	mov	r2, #58	; 0x3a
   12c60:	b	12be4 <close@plt+0x1d90>
   12c64:	push	{r4, r5, lr}
   12c68:	sub	sp, sp, #100	; 0x64
   12c6c:	mov	r4, r0
   12c70:	mov	r0, sp
   12c74:	mov	r5, r2
   12c78:	bl	11850 <close@plt+0x9fc>
   12c7c:	mov	ip, sp
   12c80:	add	lr, sp, #48	; 0x30
   12c84:	ldm	ip!, {r0, r1, r2, r3}
   12c88:	stmia	lr!, {r0, r1, r2, r3}
   12c8c:	ldm	ip!, {r0, r1, r2, r3}
   12c90:	stmia	lr!, {r0, r1, r2, r3}
   12c94:	ldm	ip, {r0, r1, r2, r3}
   12c98:	stm	lr, {r0, r1, r2, r3}
   12c9c:	mov	r2, #1
   12ca0:	mov	r1, #58	; 0x3a
   12ca4:	add	r0, sp, #48	; 0x30
   12ca8:	bl	128a8 <close@plt+0x1a54>
   12cac:	add	r3, sp, #48	; 0x30
   12cb0:	mvn	r2, #0
   12cb4:	mov	r1, r5
   12cb8:	mov	r0, r4
   12cbc:	bl	1269c <close@plt+0x1848>
   12cc0:	add	sp, sp, #100	; 0x64
   12cc4:	pop	{r4, r5, pc}
   12cc8:	push	{r4, r5, r6, r7, lr}
   12ccc:	mov	r4, r0
   12cd0:	mov	r6, r1
   12cd4:	mov	r7, r2
   12cd8:	mov	r5, r3
   12cdc:	sub	sp, sp, #52	; 0x34
   12ce0:	ldr	lr, [pc, #68]	; 12d2c <close@plt+0x1ed8>
   12ce4:	mov	ip, sp
   12ce8:	ldm	lr!, {r0, r1, r2, r3}
   12cec:	stmia	ip!, {r0, r1, r2, r3}
   12cf0:	ldm	lr!, {r0, r1, r2, r3}
   12cf4:	stmia	ip!, {r0, r1, r2, r3}
   12cf8:	ldm	lr, {r0, r1, r2, r3}
   12cfc:	stm	ip, {r0, r1, r2, r3}
   12d00:	mov	r2, r7
   12d04:	mov	r1, r6
   12d08:	mov	r0, sp
   12d0c:	bl	12904 <close@plt+0x1ab0>
   12d10:	ldr	r2, [sp, #72]	; 0x48
   12d14:	mov	r3, sp
   12d18:	mov	r1, r5
   12d1c:	mov	r0, r4
   12d20:	bl	1269c <close@plt+0x1848>
   12d24:	add	sp, sp, #52	; 0x34
   12d28:	pop	{r4, r5, r6, r7, pc}
   12d2c:	andeq	r5, r2, r4, asr r2
   12d30:	mvn	ip, #0
   12d34:	push	{r0, r1, r2, lr}
   12d38:	str	ip, [sp]
   12d3c:	bl	12cc8 <close@plt+0x1e74>
   12d40:	add	sp, sp, #12
   12d44:	pop	{pc}		; (ldr pc, [sp], #4)
   12d48:	mov	r3, r2
   12d4c:	mov	r2, r1
   12d50:	mov	r1, r0
   12d54:	mov	r0, #0
   12d58:	b	12d30 <close@plt+0x1edc>
   12d5c:	push	{r0, r1, r2, lr}
   12d60:	str	r3, [sp]
   12d64:	mov	r3, r2
   12d68:	mov	r2, r1
   12d6c:	mov	r1, r0
   12d70:	mov	r0, #0
   12d74:	bl	12cc8 <close@plt+0x1e74>
   12d78:	add	sp, sp, #12
   12d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d80:	ldr	r3, [pc]	; 12d88 <close@plt+0x1f34>
   12d84:	b	1269c <close@plt+0x1848>
   12d88:	strdeq	r5, [r2], -r8
   12d8c:	mov	r2, r1
   12d90:	mov	r1, r0
   12d94:	mov	r0, #0
   12d98:	b	12d80 <close@plt+0x1f2c>
   12d9c:	mvn	r2, #0
   12da0:	b	12d80 <close@plt+0x1f2c>
   12da4:	mov	r1, r0
   12da8:	mov	r0, #0
   12dac:	b	12d9c <close@plt+0x1f48>
   12db0:	push	{r4, r5, r6, lr}
   12db4:	cmp	r1, #0
   12db8:	sub	sp, sp, #32
   12dbc:	mov	r5, r0
   12dc0:	ldr	r4, [sp, #48]	; 0x30
   12dc4:	ldr	r6, [sp, #52]	; 0x34
   12dc8:	beq	12e7c <close@plt+0x2028>
   12dcc:	strd	r2, [sp]
   12dd0:	mov	r3, r1
   12dd4:	mov	r1, #1
   12dd8:	ldr	r2, [pc, #856]	; 13138 <close@plt+0x22e4>
   12ddc:	bl	10db8 <__fprintf_chk@plt>
   12de0:	mov	r2, #5
   12de4:	ldr	r1, [pc, #848]	; 1313c <close@plt+0x22e8>
   12de8:	mov	r0, #0
   12dec:	bl	10c8c <dcgettext@plt>
   12df0:	movw	r3, #2022	; 0x7e6
   12df4:	ldr	r2, [pc, #836]	; 13140 <close@plt+0x22ec>
   12df8:	mov	r1, #1
   12dfc:	str	r3, [sp]
   12e00:	mov	r3, r0
   12e04:	mov	r0, r5
   12e08:	bl	10db8 <__fprintf_chk@plt>
   12e0c:	mov	r1, r5
   12e10:	mov	r0, #10
   12e14:	bl	10c80 <fputc_unlocked@plt>
   12e18:	mov	r2, #5
   12e1c:	ldr	r1, [pc, #800]	; 13144 <close@plt+0x22f0>
   12e20:	mov	r0, #0
   12e24:	bl	10c8c <dcgettext@plt>
   12e28:	mov	r2, r0
   12e2c:	mov	r1, #1
   12e30:	ldr	r3, [pc, #784]	; 13148 <close@plt+0x22f4>
   12e34:	mov	r0, r5
   12e38:	bl	10db8 <__fprintf_chk@plt>
   12e3c:	mov	r1, r5
   12e40:	mov	r0, #10
   12e44:	bl	10c80 <fputc_unlocked@plt>
   12e48:	cmp	r6, #9
   12e4c:	ldrls	pc, [pc, r6, lsl #2]
   12e50:	b	1312c <close@plt+0x22d8>
   12e54:	andeq	r2, r1, ip, ror #30
   12e58:	muleq	r1, r4, lr
   12e5c:	andeq	r2, r1, r0, asr #29
   12e60:	strdeq	r2, [r1], -r4
   12e64:	andeq	r2, r1, r0, lsr pc
   12e68:	andeq	r2, r1, r4, ror pc
   12e6c:			; <UNDEFINED> instruction: 0x00012fbc
   12e70:	andeq	r3, r1, ip
   12e74:	andeq	r3, r1, r4, rrx
   12e78:	andeq	r3, r1, r4, asr #1
   12e7c:	mov	r1, #1
   12e80:	str	r3, [sp]
   12e84:	mov	r3, r2
   12e88:	ldr	r2, [pc, #700]	; 1314c <close@plt+0x22f8>
   12e8c:	bl	10db8 <__fprintf_chk@plt>
   12e90:	b	12de0 <close@plt+0x1f8c>
   12e94:	mov	r2, #5
   12e98:	ldr	r1, [pc, #688]	; 13150 <close@plt+0x22fc>
   12e9c:	mov	r0, #0
   12ea0:	bl	10c8c <dcgettext@plt>
   12ea4:	ldr	r3, [r4]
   12ea8:	mov	r2, r0
   12eac:	mov	r1, #1
   12eb0:	mov	r0, r5
   12eb4:	add	sp, sp, #32
   12eb8:	pop	{r4, r5, r6, lr}
   12ebc:	b	10db8 <__fprintf_chk@plt>
   12ec0:	mov	r2, #5
   12ec4:	ldr	r1, [pc, #648]	; 13154 <close@plt+0x2300>
   12ec8:	mov	r0, #0
   12ecc:	bl	10c8c <dcgettext@plt>
   12ed0:	ldr	r3, [r4, #4]
   12ed4:	mov	r2, r0
   12ed8:	mov	r1, #1
   12edc:	mov	r0, r5
   12ee0:	str	r3, [sp, #48]	; 0x30
   12ee4:	ldr	r3, [r4]
   12ee8:	add	sp, sp, #32
   12eec:	pop	{r4, r5, r6, lr}
   12ef0:	b	10db8 <__fprintf_chk@plt>
   12ef4:	mov	r2, #5
   12ef8:	ldr	r1, [pc, #600]	; 13158 <close@plt+0x2304>
   12efc:	mov	r0, #0
   12f00:	bl	10c8c <dcgettext@plt>
   12f04:	ldr	r3, [r4, #8]
   12f08:	mov	r2, r0
   12f0c:	mov	r1, #1
   12f10:	mov	r0, r5
   12f14:	str	r3, [sp, #52]	; 0x34
   12f18:	ldr	r3, [r4, #4]
   12f1c:	str	r3, [sp, #48]	; 0x30
   12f20:	ldr	r3, [r4]
   12f24:	add	sp, sp, #32
   12f28:	pop	{r4, r5, r6, lr}
   12f2c:	b	10db8 <__fprintf_chk@plt>
   12f30:	mov	r2, #5
   12f34:	ldr	r1, [pc, #544]	; 1315c <close@plt+0x2308>
   12f38:	mov	r0, #0
   12f3c:	bl	10c8c <dcgettext@plt>
   12f40:	ldr	r3, [r4, #12]
   12f44:	mov	r2, r0
   12f48:	mov	r1, #1
   12f4c:	mov	r0, r5
   12f50:	str	r3, [sp, #8]
   12f54:	ldr	r3, [r4, #8]
   12f58:	str	r3, [sp, #4]
   12f5c:	ldr	r3, [r4, #4]
   12f60:	str	r3, [sp]
   12f64:	ldr	r3, [r4]
   12f68:	bl	10db8 <__fprintf_chk@plt>
   12f6c:	add	sp, sp, #32
   12f70:	pop	{r4, r5, r6, pc}
   12f74:	mov	r2, #5
   12f78:	ldr	r1, [pc, #480]	; 13160 <close@plt+0x230c>
   12f7c:	mov	r0, #0
   12f80:	bl	10c8c <dcgettext@plt>
   12f84:	ldr	r3, [r4, #16]
   12f88:	mov	r2, r0
   12f8c:	mov	r1, #1
   12f90:	mov	r0, r5
   12f94:	str	r3, [sp, #12]
   12f98:	ldr	r3, [r4, #12]
   12f9c:	str	r3, [sp, #8]
   12fa0:	ldr	r3, [r4, #8]
   12fa4:	str	r3, [sp, #4]
   12fa8:	ldr	r3, [r4, #4]
   12fac:	str	r3, [sp]
   12fb0:	ldr	r3, [r4]
   12fb4:	bl	10db8 <__fprintf_chk@plt>
   12fb8:	b	12f6c <close@plt+0x2118>
   12fbc:	mov	r2, #5
   12fc0:	ldr	r1, [pc, #412]	; 13164 <close@plt+0x2310>
   12fc4:	mov	r0, #0
   12fc8:	bl	10c8c <dcgettext@plt>
   12fcc:	ldr	r3, [r4, #20]
   12fd0:	mov	r2, r0
   12fd4:	mov	r1, #1
   12fd8:	mov	r0, r5
   12fdc:	str	r3, [sp, #16]
   12fe0:	ldr	r3, [r4, #16]
   12fe4:	str	r3, [sp, #12]
   12fe8:	ldr	r3, [r4, #12]
   12fec:	str	r3, [sp, #8]
   12ff0:	ldr	r3, [r4, #8]
   12ff4:	str	r3, [sp, #4]
   12ff8:	ldr	r3, [r4, #4]
   12ffc:	str	r3, [sp]
   13000:	ldr	r3, [r4]
   13004:	bl	10db8 <__fprintf_chk@plt>
   13008:	b	12f6c <close@plt+0x2118>
   1300c:	mov	r2, #5
   13010:	ldr	r1, [pc, #336]	; 13168 <close@plt+0x2314>
   13014:	mov	r0, #0
   13018:	bl	10c8c <dcgettext@plt>
   1301c:	ldr	r3, [r4, #24]
   13020:	mov	r2, r0
   13024:	mov	r1, #1
   13028:	mov	r0, r5
   1302c:	str	r3, [sp, #20]
   13030:	ldr	r3, [r4, #20]
   13034:	str	r3, [sp, #16]
   13038:	ldr	r3, [r4, #16]
   1303c:	str	r3, [sp, #12]
   13040:	ldr	r3, [r4, #12]
   13044:	str	r3, [sp, #8]
   13048:	ldr	r3, [r4, #8]
   1304c:	str	r3, [sp, #4]
   13050:	ldr	r3, [r4, #4]
   13054:	str	r3, [sp]
   13058:	ldr	r3, [r4]
   1305c:	bl	10db8 <__fprintf_chk@plt>
   13060:	b	12f6c <close@plt+0x2118>
   13064:	mov	r2, #5
   13068:	ldr	r1, [pc, #252]	; 1316c <close@plt+0x2318>
   1306c:	mov	r0, #0
   13070:	bl	10c8c <dcgettext@plt>
   13074:	ldr	r3, [r4, #28]
   13078:	mov	r2, r0
   1307c:	mov	r1, #1
   13080:	mov	r0, r5
   13084:	str	r3, [sp, #24]
   13088:	ldr	r3, [r4, #24]
   1308c:	str	r3, [sp, #20]
   13090:	ldr	r3, [r4, #20]
   13094:	str	r3, [sp, #16]
   13098:	ldr	r3, [r4, #16]
   1309c:	str	r3, [sp, #12]
   130a0:	ldr	r3, [r4, #12]
   130a4:	str	r3, [sp, #8]
   130a8:	ldr	r3, [r4, #8]
   130ac:	str	r3, [sp, #4]
   130b0:	ldr	r3, [r4, #4]
   130b4:	str	r3, [sp]
   130b8:	ldr	r3, [r4]
   130bc:	bl	10db8 <__fprintf_chk@plt>
   130c0:	b	12f6c <close@plt+0x2118>
   130c4:	ldr	r1, [pc, #164]	; 13170 <close@plt+0x231c>
   130c8:	mov	r2, #5
   130cc:	mov	r0, #0
   130d0:	bl	10c8c <dcgettext@plt>
   130d4:	ldr	r3, [r4, #32]
   130d8:	mov	r2, r0
   130dc:	mov	r1, #1
   130e0:	mov	r0, r5
   130e4:	str	r3, [sp, #28]
   130e8:	ldr	r3, [r4, #28]
   130ec:	str	r3, [sp, #24]
   130f0:	ldr	r3, [r4, #24]
   130f4:	str	r3, [sp, #20]
   130f8:	ldr	r3, [r4, #20]
   130fc:	str	r3, [sp, #16]
   13100:	ldr	r3, [r4, #16]
   13104:	str	r3, [sp, #12]
   13108:	ldr	r3, [r4, #12]
   1310c:	str	r3, [sp, #8]
   13110:	ldr	r3, [r4, #8]
   13114:	str	r3, [sp, #4]
   13118:	ldr	r3, [r4, #4]
   1311c:	str	r3, [sp]
   13120:	ldr	r3, [r4]
   13124:	bl	10db8 <__fprintf_chk@plt>
   13128:	b	12f6c <close@plt+0x2118>
   1312c:	mov	r2, #5
   13130:	ldr	r1, [pc, #60]	; 13174 <close@plt+0x2320>
   13134:	b	130cc <close@plt+0x2278>
   13138:	andeq	r4, r1, r5, lsr #1
   1313c:	strheq	r4, [r1], -r8
   13140:	andeq	r4, r1, r6, lsl #7
   13144:	strheq	r4, [r1], -ip
   13148:	andeq	r4, r1, r7, ror #2
   1314c:	strheq	r4, [r1], -r1
   13150:	andeq	r4, r1, r9, lsl #3
   13154:	muleq	r1, r9, r1
   13158:			; <UNDEFINED> instruction: 0x000141b0
   1315c:	andeq	r4, r1, ip, asr #3
   13160:	andeq	r4, r1, ip, ror #3
   13164:	andeq	r4, r1, r0, lsl r2
   13168:	andeq	r4, r1, r8, lsr r2
   1316c:	andeq	r4, r1, r4, ror #4
   13170:	muleq	r1, r4, r2
   13174:	andeq	r4, r1, r8, asr #5
   13178:	push	{r0, r1, r4, lr}
   1317c:	mov	ip, #0
   13180:	ldr	lr, [sp, #16]
   13184:	ldr	r4, [lr, ip, lsl #2]
   13188:	cmp	r4, #0
   1318c:	bne	131a4 <close@plt+0x2350>
   13190:	str	lr, [sp]
   13194:	str	ip, [sp, #4]
   13198:	bl	12db0 <close@plt+0x1f5c>
   1319c:	add	sp, sp, #8
   131a0:	pop	{r4, pc}
   131a4:	add	ip, ip, #1
   131a8:	b	13184 <close@plt+0x2330>
   131ac:	push	{r4, r5, r6, lr}
   131b0:	sub	sp, sp, #48	; 0x30
   131b4:	mov	ip, #0
   131b8:	add	lr, sp, #8
   131bc:	mov	r5, lr
   131c0:	ldr	r6, [sp, #64]	; 0x40
   131c4:	ldr	r4, [r6, ip, lsl #2]
   131c8:	cmp	r4, #0
   131cc:	str	r4, [lr], #4
   131d0:	beq	131e0 <close@plt+0x238c>
   131d4:	add	ip, ip, #1
   131d8:	cmp	ip, #10
   131dc:	bne	131c4 <close@plt+0x2370>
   131e0:	stm	sp, {r5, ip}
   131e4:	bl	12db0 <close@plt+0x1f5c>
   131e8:	add	sp, sp, #48	; 0x30
   131ec:	pop	{r4, r5, r6, pc}
   131f0:	push	{r3}		; (str r3, [sp, #-4]!)
   131f4:	push	{r0, r1, r2, r3, lr}
   131f8:	add	r3, sp, #24
   131fc:	str	r3, [sp]
   13200:	str	r3, [sp, #12]
   13204:	ldr	r3, [sp, #20]
   13208:	bl	131ac <close@plt+0x2358>
   1320c:	add	sp, sp, #16
   13210:	pop	{lr}		; (ldr lr, [sp], #4)
   13214:	add	sp, sp, #4
   13218:	bx	lr
   1321c:	ldr	r3, [pc, #116]	; 13298 <close@plt+0x2444>
   13220:	mov	r0, #10
   13224:	push	{r4, lr}
   13228:	ldr	r1, [r3]
   1322c:	bl	10c80 <fputc_unlocked@plt>
   13230:	mov	r2, #5
   13234:	ldr	r1, [pc, #96]	; 1329c <close@plt+0x2448>
   13238:	mov	r0, #0
   1323c:	bl	10c8c <dcgettext@plt>
   13240:	mov	r1, r0
   13244:	ldr	r2, [pc, #84]	; 132a0 <close@plt+0x244c>
   13248:	mov	r0, #1
   1324c:	bl	10da0 <__printf_chk@plt>
   13250:	mov	r2, #5
   13254:	ldr	r1, [pc, #72]	; 132a4 <close@plt+0x2450>
   13258:	mov	r0, #0
   1325c:	bl	10c8c <dcgettext@plt>
   13260:	mov	r1, r0
   13264:	ldr	r3, [pc, #60]	; 132a8 <close@plt+0x2454>
   13268:	mov	r0, #1
   1326c:	ldr	r2, [pc, #56]	; 132ac <close@plt+0x2458>
   13270:	bl	10da0 <__printf_chk@plt>
   13274:	mov	r2, #5
   13278:	ldr	r1, [pc, #48]	; 132b0 <close@plt+0x245c>
   1327c:	mov	r0, #0
   13280:	bl	10c8c <dcgettext@plt>
   13284:	mov	r1, r0
   13288:	ldr	r2, [pc, #36]	; 132b4 <close@plt+0x2460>
   1328c:	mov	r0, #1
   13290:	pop	{r4, lr}
   13294:	b	10da0 <__printf_chk@plt>
   13298:	andeq	r5, r2, ip, lsr r1
   1329c:	andeq	r4, r1, r4, lsl #6
   132a0:	andeq	r4, r1, r8, lsl r3
   132a4:	andeq	r4, r1, lr, lsr #6
   132a8:	andeq	r3, r1, r4, ror #26
   132ac:	andeq	r3, r1, ip, lsl #27
   132b0:	andeq	r4, r1, r2, asr #6
   132b4:	andeq	r4, r1, r9, ror #6
   132b8:	push	{r4, lr}
   132bc:	bl	13604 <close@plt+0x27b0>
   132c0:	cmp	r0, #0
   132c4:	popne	{r4, pc}
   132c8:	bl	13570 <close@plt+0x271c>
   132cc:	push	{r4, lr}
   132d0:	bl	13604 <close@plt+0x27b0>
   132d4:	cmp	r0, #0
   132d8:	popne	{r4, pc}
   132dc:	bl	13570 <close@plt+0x271c>
   132e0:	b	132b8 <close@plt+0x2464>
   132e4:	push	{r4, r5, r6, lr}
   132e8:	mov	r5, r0
   132ec:	mov	r4, r1
   132f0:	bl	13630 <close@plt+0x27dc>
   132f4:	cmp	r0, #0
   132f8:	popne	{r4, r5, r6, pc}
   132fc:	adds	r4, r4, #0
   13300:	movne	r4, #1
   13304:	cmp	r5, #0
   13308:	moveq	r4, #1
   1330c:	cmp	r4, #0
   13310:	popeq	{r4, r5, r6, pc}
   13314:	bl	13570 <close@plt+0x271c>
   13318:	push	{r4, lr}
   1331c:	bl	138c8 <close@plt+0x2a74>
   13320:	cmp	r0, #0
   13324:	popne	{r4, pc}
   13328:	bl	13570 <close@plt+0x271c>
   1332c:	push	{r4, r5, r6, lr}
   13330:	mov	r6, r0
   13334:	mov	r5, r1
   13338:	mov	r4, r2
   1333c:	bl	13970 <close@plt+0x2b1c>
   13340:	cmp	r0, #0
   13344:	popne	{r4, r5, r6, pc}
   13348:	cmp	r6, #0
   1334c:	beq	1335c <close@plt+0x2508>
   13350:	cmp	r5, #0
   13354:	cmpne	r4, #0
   13358:	popeq	{r4, r5, r6, pc}
   1335c:	bl	13570 <close@plt+0x271c>
   13360:	b	1332c <close@plt+0x24d8>
   13364:	push	{r4, lr}
   13368:	bl	138d8 <close@plt+0x2a84>
   1336c:	cmp	r0, #0
   13370:	popne	{r4, pc}
   13374:	bl	13570 <close@plt+0x271c>
   13378:	mov	r2, r1
   1337c:	mov	r1, r0
   13380:	mov	r0, #0
   13384:	b	1332c <close@plt+0x24d8>
   13388:	mov	r2, r1
   1338c:	mov	r1, r0
   13390:	mov	r0, #0
   13394:	b	13364 <close@plt+0x2510>
   13398:	cmp	r0, #0
   1339c:	push	{r4, r5, r6, lr}
   133a0:	mov	r5, r1
   133a4:	ldr	r4, [r1]
   133a8:	bne	133d4 <close@plt+0x2580>
   133ac:	cmp	r4, #0
   133b0:	bne	133c4 <close@plt+0x2570>
   133b4:	mov	r4, #64	; 0x40
   133b8:	udiv	r4, r4, r2
   133bc:	cmp	r2, #64	; 0x40
   133c0:	addhi	r4, r4, #1
   133c4:	mov	r1, r4
   133c8:	bl	1332c <close@plt+0x24d8>
   133cc:	str	r4, [r5]
   133d0:	pop	{r4, r5, r6, pc}
   133d4:	lsr	r3, r4, #1
   133d8:	add	r3, r3, #1
   133dc:	adds	r4, r4, r3
   133e0:	bcc	133c4 <close@plt+0x2570>
   133e4:	bl	13570 <close@plt+0x271c>
   133e8:	mov	r2, #1
   133ec:	b	13398 <close@plt+0x2544>
   133f0:	ldr	ip, [r1]
   133f4:	push	{r4, r5, r6, r7, r8, lr}
   133f8:	mov	r5, r1
   133fc:	mvn	r8, r3
   13400:	lsr	r8, r8, #31
   13404:	ldr	lr, [sp, #24]
   13408:	asr	r1, ip, #1
   1340c:	adds	r4, ip, r1
   13410:	mvnvs	r4, #-2147483648	; 0x80000000
   13414:	cmp	r3, r4
   13418:	movge	r1, #0
   1341c:	andlt	r1, r8, #1
   13420:	cmp	r1, #0
   13424:	movne	r4, r3
   13428:	smull	r6, r7, r4, lr
   1342c:	cmp	r7, r6, asr #31
   13430:	bne	13448 <close@plt+0x25f4>
   13434:	cmp	r6, #63	; 0x3f
   13438:	mov	r1, r6
   1343c:	bgt	13458 <close@plt+0x2604>
   13440:	mov	r1, #64	; 0x40
   13444:	b	1344c <close@plt+0x25f8>
   13448:	mvn	r1, #-2147483648	; 0x80000000
   1344c:	sdiv	r4, r1, lr
   13450:	mls	r6, lr, r4, r1
   13454:	sub	r1, r1, r6
   13458:	cmp	r0, #0
   1345c:	sub	r6, r4, ip
   13460:	streq	r0, [r5]
   13464:	cmp	r6, r2
   13468:	bge	1349c <close@plt+0x2648>
   1346c:	adds	r4, ip, r2
   13470:	bvs	13498 <close@plt+0x2644>
   13474:	cmp	r4, r3
   13478:	movle	r3, #0
   1347c:	andgt	r3, r8, #1
   13480:	cmp	r3, #0
   13484:	bne	13498 <close@plt+0x2644>
   13488:	smull	r2, r3, r4, lr
   1348c:	cmp	r3, r2, asr #31
   13490:	mov	r1, r2
   13494:	beq	1349c <close@plt+0x2648>
   13498:	bl	13570 <close@plt+0x271c>
   1349c:	bl	132e4 <close@plt+0x2490>
   134a0:	str	r4, [r5]
   134a4:	pop	{r4, r5, r6, r7, r8, pc}
   134a8:	push	{r4, lr}
   134ac:	bl	135b0 <close@plt+0x275c>
   134b0:	cmp	r0, #0
   134b4:	popne	{r4, pc}
   134b8:	bl	13570 <close@plt+0x271c>
   134bc:	mov	r1, #1
   134c0:	b	134a8 <close@plt+0x2654>
   134c4:	push	{r4, lr}
   134c8:	bl	135b0 <close@plt+0x275c>
   134cc:	cmp	r0, #0
   134d0:	popne	{r4, pc}
   134d4:	bl	13570 <close@plt+0x271c>
   134d8:	mov	r1, #1
   134dc:	b	134c4 <close@plt+0x2670>
   134e0:	push	{r4, r5, r6, lr}
   134e4:	mov	r4, r1
   134e8:	mov	r5, r0
   134ec:	mov	r0, r1
   134f0:	bl	132b8 <close@plt+0x2464>
   134f4:	mov	r2, r4
   134f8:	mov	r1, r5
   134fc:	pop	{r4, r5, r6, lr}
   13500:	b	10c5c <memcpy@plt>
   13504:	push	{r4, r5, r6, lr}
   13508:	mov	r4, r1
   1350c:	mov	r5, r0
   13510:	mov	r0, r1
   13514:	bl	132cc <close@plt+0x2478>
   13518:	mov	r2, r4
   1351c:	mov	r1, r5
   13520:	pop	{r4, r5, r6, lr}
   13524:	b	10c5c <memcpy@plt>
   13528:	push	{r4, r5, r6, lr}
   1352c:	mov	r5, r0
   13530:	add	r0, r1, #1
   13534:	mov	r4, r1
   13538:	bl	132cc <close@plt+0x2478>
   1353c:	mov	r2, #0
   13540:	mov	r1, r5
   13544:	strb	r2, [r0, r4]
   13548:	mov	r2, r4
   1354c:	pop	{r4, r5, r6, lr}
   13550:	b	10c5c <memcpy@plt>
   13554:	push	{r4, lr}
   13558:	mov	r4, r0
   1355c:	bl	10d70 <strlen@plt>
   13560:	add	r1, r0, #1
   13564:	mov	r0, r4
   13568:	pop	{r4, lr}
   1356c:	b	134e0 <close@plt+0x268c>
   13570:	ldr	r3, [pc, #44]	; 135a4 <close@plt+0x2750>
   13574:	mov	r2, #5
   13578:	mov	r0, #0
   1357c:	push	{r4, lr}
   13580:	ldr	r1, [pc, #32]	; 135a8 <close@plt+0x2754>
   13584:	ldr	r4, [r3]
   13588:	bl	10c8c <dcgettext@plt>
   1358c:	mov	r3, r0
   13590:	ldr	r2, [pc, #20]	; 135ac <close@plt+0x2758>
   13594:	mov	r1, #0
   13598:	mov	r0, r4
   1359c:	bl	10d04 <error@plt>
   135a0:	bl	10e48 <abort@plt>
   135a4:	andeq	r5, r2, r4, ror #1
   135a8:			; <UNDEFINED> instruction: 0x000143b5
   135ac:	andeq	r3, r1, r6, lsr #31
   135b0:	cmp	r1, #0
   135b4:	cmpne	r0, #0
   135b8:	beq	135f0 <close@plt+0x279c>
   135bc:	push	{r4, r5, r6, lr}
   135c0:	umull	r4, r5, r0, r1
   135c4:	adds	r3, r5, #0
   135c8:	movne	r3, #1
   135cc:	cmp	r4, #0
   135d0:	blt	135dc <close@plt+0x2788>
   135d4:	cmp	r3, #0
   135d8:	beq	135fc <close@plt+0x27a8>
   135dc:	bl	10d7c <__errno_location@plt>
   135e0:	mov	r3, #12
   135e4:	str	r3, [r0]
   135e8:	mov	r0, #0
   135ec:	pop	{r4, r5, r6, pc}
   135f0:	mov	r1, #1
   135f4:	mov	r0, r1
   135f8:	b	10c08 <calloc@plt>
   135fc:	pop	{r4, r5, r6, lr}
   13600:	b	135f8 <close@plt+0x27a4>
   13604:	cmp	r0, #0
   13608:	beq	13628 <close@plt+0x27d4>
   1360c:	bge	1362c <close@plt+0x27d8>
   13610:	push	{r4, lr}
   13614:	bl	10d7c <__errno_location@plt>
   13618:	mov	r3, #12
   1361c:	str	r3, [r0]
   13620:	mov	r0, #0
   13624:	pop	{r4, pc}
   13628:	mov	r0, #1
   1362c:	b	10d1c <malloc@plt>
   13630:	cmp	r0, #0
   13634:	bne	13640 <close@plt+0x27ec>
   13638:	mov	r0, r1
   1363c:	b	13604 <close@plt+0x27b0>
   13640:	cmp	r1, #0
   13644:	push	{r4, lr}
   13648:	bne	13658 <close@plt+0x2804>
   1364c:	bl	137dc <close@plt+0x2988>
   13650:	mov	r0, #0
   13654:	pop	{r4, pc}
   13658:	blt	13664 <close@plt+0x2810>
   1365c:	pop	{r4, lr}
   13660:	b	10ca4 <realloc@plt>
   13664:	bl	10d7c <__errno_location@plt>
   13668:	mov	r3, #12
   1366c:	str	r3, [r0]
   13670:	b	13650 <close@plt+0x27fc>
   13674:	push	{r4, r5, r6, lr}
   13678:	mov	r4, r0
   1367c:	bl	10ce0 <__fpending@plt>
   13680:	mov	r5, r0
   13684:	mov	r0, r4
   13688:	bl	10cec <ferror_unlocked@plt>
   1368c:	mov	r6, r0
   13690:	mov	r0, r4
   13694:	bl	136e4 <close@plt+0x2890>
   13698:	cmp	r6, #0
   1369c:	mov	r4, r0
   136a0:	bne	136cc <close@plt+0x2878>
   136a4:	cmp	r0, #0
   136a8:	beq	136c4 <close@plt+0x2870>
   136ac:	cmp	r5, #0
   136b0:	bne	136dc <close@plt+0x2888>
   136b4:	bl	10d7c <__errno_location@plt>
   136b8:	ldr	r4, [r0]
   136bc:	subs	r4, r4, #9
   136c0:	mvnne	r4, #0
   136c4:	mov	r0, r4
   136c8:	pop	{r4, r5, r6, pc}
   136cc:	cmp	r0, #0
   136d0:	bne	136dc <close@plt+0x2888>
   136d4:	bl	10d7c <__errno_location@plt>
   136d8:	str	r4, [r0]
   136dc:	mvn	r4, #0
   136e0:	b	136c4 <close@plt+0x2870>
   136e4:	push	{r0, r1, r2, r4, r5, lr}
   136e8:	mov	r4, r0
   136ec:	bl	10dac <fileno@plt>
   136f0:	cmp	r0, #0
   136f4:	mov	r0, r4
   136f8:	bge	13708 <close@plt+0x28b4>
   136fc:	add	sp, sp, #12
   13700:	pop	{r4, r5, lr}
   13704:	b	10dc4 <fclose@plt>
   13708:	bl	10d34 <__freading@plt>
   1370c:	cmp	r0, #0
   13710:	bne	1374c <close@plt+0x28f8>
   13714:	mov	r0, r4
   13718:	bl	1378c <close@plt+0x2938>
   1371c:	cmp	r0, #0
   13720:	bne	13780 <close@plt+0x292c>
   13724:	mov	r5, #0
   13728:	mov	r0, r4
   1372c:	bl	10dc4 <fclose@plt>
   13730:	cmp	r5, #0
   13734:	beq	13744 <close@plt+0x28f0>
   13738:	bl	10d7c <__errno_location@plt>
   1373c:	str	r5, [r0]
   13740:	mvn	r0, #0
   13744:	add	sp, sp, #12
   13748:	pop	{r4, r5, pc}
   1374c:	mov	r0, r4
   13750:	bl	10dac <fileno@plt>
   13754:	mov	r3, #1
   13758:	mov	r2, #0
   1375c:	str	r3, [sp]
   13760:	mov	r3, #0
   13764:	bl	10cc8 <lseek64@plt>
   13768:	mvn	r3, #0
   1376c:	mvn	r2, #0
   13770:	cmp	r1, r3
   13774:	cmpeq	r0, r2
   13778:	bne	13714 <close@plt+0x28c0>
   1377c:	b	13724 <close@plt+0x28d0>
   13780:	bl	10d7c <__errno_location@plt>
   13784:	ldr	r5, [r0]
   13788:	b	13728 <close@plt+0x28d4>
   1378c:	push	{r0, r1, r4, lr}
   13790:	subs	r4, r0, #0
   13794:	bne	137a8 <close@plt+0x2954>
   13798:	mov	r0, r4
   1379c:	add	sp, sp, #8
   137a0:	pop	{r4, lr}
   137a4:	b	10c38 <fflush@plt>
   137a8:	bl	10d34 <__freading@plt>
   137ac:	cmp	r0, #0
   137b0:	beq	13798 <close@plt+0x2944>
   137b4:	ldr	r3, [r4]
   137b8:	tst	r3, #256	; 0x100
   137bc:	beq	13798 <close@plt+0x2944>
   137c0:	mov	r3, #1
   137c4:	mov	r2, #0
   137c8:	mov	r0, r4
   137cc:	str	r3, [sp]
   137d0:	mov	r3, #0
   137d4:	bl	1382c <close@plt+0x29d8>
   137d8:	b	13798 <close@plt+0x2944>
   137dc:	push	{r0, r1, r2, r4, r5, lr}
   137e0:	mov	r5, r0
   137e4:	bl	10d7c <__errno_location@plt>
   137e8:	mov	r4, r0
   137ec:	mov	r0, r5
   137f0:	ldr	r3, [r4]
   137f4:	str	r3, [sp]
   137f8:	str	r3, [sp, #4]
   137fc:	mov	r3, #0
   13800:	str	r3, [r4]
   13804:	bl	10c44 <free@plt>
   13808:	ldr	r3, [r4]
   1380c:	add	r2, sp, #8
   13810:	clz	r3, r3
   13814:	lsr	r3, r3, #5
   13818:	add	r3, r2, r3, lsl #2
   1381c:	ldr	r3, [r3, #-8]
   13820:	str	r3, [r4]
   13824:	add	sp, sp, #12
   13828:	pop	{r4, r5, pc}
   1382c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13830:	mov	r4, r0
   13834:	ldmib	r0, {ip, lr}
   13838:	ldr	r8, [sp, #32]
   1383c:	cmp	lr, ip
   13840:	bne	138b0 <close@plt+0x2a5c>
   13844:	ldr	ip, [r0, #16]
   13848:	ldr	lr, [r0, #20]
   1384c:	cmp	lr, ip
   13850:	bne	138b0 <close@plt+0x2a5c>
   13854:	ldr	r5, [r0, #36]	; 0x24
   13858:	cmp	r5, #0
   1385c:	bne	138b0 <close@plt+0x2a5c>
   13860:	mov	r6, r2
   13864:	mov	r7, r3
   13868:	bl	10dac <fileno@plt>
   1386c:	mov	r2, r6
   13870:	mov	r3, r7
   13874:	str	r8, [sp]
   13878:	bl	10cc8 <lseek64@plt>
   1387c:	mvn	r3, #0
   13880:	mvn	r2, #0
   13884:	cmp	r1, r3
   13888:	cmpeq	r0, r2
   1388c:	mvneq	r0, #0
   13890:	beq	138a8 <close@plt+0x2a54>
   13894:	ldr	r3, [r4]
   13898:	strd	r0, [r4, #80]	; 0x50
   1389c:	mov	r0, r5
   138a0:	bic	r3, r3, #16
   138a4:	str	r3, [r4]
   138a8:	add	sp, sp, #8
   138ac:	pop	{r4, r5, r6, r7, r8, pc}
   138b0:	mov	r0, r4
   138b4:	str	r8, [sp, #32]
   138b8:	add	sp, sp, #8
   138bc:	pop	{r4, r5, r6, r7, r8, lr}
   138c0:	b	10dd0 <fseeko64@plt>
   138c4:	b	13604 <close@plt+0x27b0>
   138c8:	cmp	r1, #0
   138cc:	orreq	r1, r1, #1
   138d0:	b	13630 <close@plt+0x27dc>
   138d4:	b	135b0 <close@plt+0x275c>
   138d8:	cmp	r2, #0
   138dc:	cmpne	r1, #0
   138e0:	moveq	r2, #1
   138e4:	moveq	r1, r2
   138e8:	b	13970 <close@plt+0x2b1c>
   138ec:	push	{r4, lr}
   138f0:	mov	r0, #14
   138f4:	bl	10e00 <nl_langinfo@plt>
   138f8:	cmp	r0, #0
   138fc:	beq	13914 <close@plt+0x2ac0>
   13900:	ldrb	r2, [r0]
   13904:	ldr	r3, [pc, #16]	; 1391c <close@plt+0x2ac8>
   13908:	cmp	r2, #0
   1390c:	moveq	r0, r3
   13910:	pop	{r4, pc}
   13914:	ldr	r0, [pc]	; 1391c <close@plt+0x2ac8>
   13918:	pop	{r4, pc}
   1391c:	andeq	r4, r1, r6, asr #7
   13920:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13924:	subs	r5, r0, #0
   13928:	mov	r7, r2
   1392c:	addeq	r5, sp, #4
   13930:	mov	r6, r1
   13934:	mov	r0, r5
   13938:	bl	10cf8 <mbrtowc@plt>
   1393c:	cmp	r7, #0
   13940:	cmnne	r0, #3
   13944:	mov	r4, r0
   13948:	bls	13964 <close@plt+0x2b10>
   1394c:	mov	r0, #0
   13950:	bl	1399c <close@plt+0x2b48>
   13954:	cmp	r0, #0
   13958:	ldrbeq	r3, [r6]
   1395c:	moveq	r4, #1
   13960:	streq	r3, [r5]
   13964:	mov	r0, r4
   13968:	add	sp, sp, #12
   1396c:	pop	{r4, r5, r6, r7, pc}
   13970:	umull	r2, r3, r1, r2
   13974:	cmp	r3, #0
   13978:	bne	13984 <close@plt+0x2b30>
   1397c:	mov	r1, r2
   13980:	b	13630 <close@plt+0x27dc>
   13984:	push	{r4, lr}
   13988:	bl	10d7c <__errno_location@plt>
   1398c:	mov	r3, #12
   13990:	str	r3, [r0]
   13994:	mov	r0, #0
   13998:	pop	{r4, pc}
   1399c:	push	{lr}		; (str lr, [sp, #-4]!)
   139a0:	sub	sp, sp, #268	; 0x10c
   139a4:	movw	r2, #257	; 0x101
   139a8:	add	r1, sp, #4
   139ac:	bl	139f8 <close@plt+0x2ba4>
   139b0:	cmp	r0, #0
   139b4:	movne	r0, #0
   139b8:	bne	139e8 <close@plt+0x2b94>
   139bc:	ldr	r1, [pc, #44]	; 139f0 <close@plt+0x2b9c>
   139c0:	add	r0, sp, #4
   139c4:	bl	10c2c <strcmp@plt>
   139c8:	cmp	r0, #0
   139cc:	beq	139e4 <close@plt+0x2b90>
   139d0:	ldr	r1, [pc, #28]	; 139f4 <close@plt+0x2ba0>
   139d4:	add	r0, sp, #4
   139d8:	bl	10c2c <strcmp@plt>
   139dc:	adds	r0, r0, #0
   139e0:	movne	r0, #1
   139e4:	and	r0, r0, #1
   139e8:	add	sp, sp, #268	; 0x10c
   139ec:	pop	{pc}		; (ldr pc, [sp], #4)
   139f0:	andeq	r4, r1, ip, asr #7
   139f4:	andeq	r4, r1, lr, asr #7
   139f8:	push	{r4, r5, r6, lr}
   139fc:	mov	r5, r1
   13a00:	mov	r1, #0
   13a04:	mov	r4, r2
   13a08:	bl	10de8 <setlocale@plt>
   13a0c:	subs	r6, r0, #0
   13a10:	bne	13a24 <close@plt+0x2bd0>
   13a14:	cmp	r4, #0
   13a18:	mov	r0, #22
   13a1c:	strbne	r6, [r5]
   13a20:	pop	{r4, r5, r6, pc}
   13a24:	bl	10d70 <strlen@plt>
   13a28:	cmp	r4, r0
   13a2c:	bls	13a48 <close@plt+0x2bf4>
   13a30:	add	r2, r0, #1
   13a34:	mov	r1, r6
   13a38:	mov	r0, r5
   13a3c:	bl	10c5c <memcpy@plt>
   13a40:	mov	r0, #0
   13a44:	pop	{r4, r5, r6, pc}
   13a48:	cmp	r4, #0
   13a4c:	beq	13a6c <close@plt+0x2c18>
   13a50:	sub	r4, r4, #1
   13a54:	mov	r1, r6
   13a58:	mov	r2, r4
   13a5c:	mov	r0, r5
   13a60:	bl	10c5c <memcpy@plt>
   13a64:	mov	r3, #0
   13a68:	strb	r3, [r5, r4]
   13a6c:	mov	r0, #34	; 0x22
   13a70:	pop	{r4, r5, r6, pc}
   13a74:	mov	r1, #0
   13a78:	b	10de8 <setlocale@plt>
   13a7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a80:	mov	r7, r0
   13a84:	ldr	r6, [pc, #72]	; 13ad4 <close@plt+0x2c80>
   13a88:	ldr	r5, [pc, #72]	; 13ad8 <close@plt+0x2c84>
   13a8c:	add	r6, pc, r6
   13a90:	add	r5, pc, r5
   13a94:	sub	r6, r6, r5
   13a98:	mov	r8, r1
   13a9c:	mov	r9, r2
   13aa0:	bl	10be8 <calloc@plt-0x20>
   13aa4:	asrs	r6, r6, #2
   13aa8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13aac:	mov	r4, #0
   13ab0:	add	r4, r4, #1
   13ab4:	ldr	r3, [r5], #4
   13ab8:	mov	r2, r9
   13abc:	mov	r1, r8
   13ac0:	mov	r0, r7
   13ac4:	blx	r3
   13ac8:	cmp	r6, r4
   13acc:	bne	13ab0 <close@plt+0x2c5c>
   13ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ad4:	andeq	r1, r1, r0, lsl #9
   13ad8:	andeq	r1, r1, r8, ror r4
   13adc:	bx	lr
   13ae0:	ldr	r3, [pc, #12]	; 13af4 <close@plt+0x2ca0>
   13ae4:	mov	r1, #0
   13ae8:	add	r3, pc, r3
   13aec:	ldr	r2, [r3]
   13af0:	b	10d88 <__cxa_atexit@plt>
   13af4:	andeq	r1, r1, ip, ror #11

Disassembly of section .fini:

00013af8 <.fini>:
   13af8:	push	{r3, lr}
   13afc:	pop	{r3, pc}
